
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x4bfe1]        # 451ff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <__ctype_toupper_loc@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <__ctype_toupper_loc@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x4bfe2]        # 452008 <fb_value_set_deleted@@Base+0x6da8>
  406026:	jmp    QWORD PTR [rip+0x4bfe4]        # 452010 <fb_value_set_deleted@@Base+0x6db0>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <__ctype_toupper_loc@plt>:
  406030:	jmp    QWORD PTR [rip+0x4bfe2]        # 452018 <__ctype_toupper_loc@GLIBC_2.3>
  406036:	push   0x0
  40603b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406040 <free@plt>:
  406040:	jmp    QWORD PTR [rip+0x4bfda]        # 452020 <free@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406050 <strncpy@plt>:
  406050:	jmp    QWORD PTR [rip+0x4bfd2]        # 452028 <strncpy@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406060 <strncmp@plt>:
  406060:	jmp    QWORD PTR [rip+0x4bfca]        # 452030 <strncmp@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406070 <puts@plt>:
  406070:	jmp    QWORD PTR [rip+0x4bfc2]        # 452038 <puts@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406080 <qsort@plt>:
  406080:	jmp    QWORD PTR [rip+0x4bfba]        # 452040 <qsort@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406090 <strtod@plt>:
  406090:	jmp    QWORD PTR [rip+0x4bfb2]        # 452048 <strtod@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060a0 <vsnprintf@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x4bfaa]        # 452050 <vsnprintf@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060b0 <fread_unlocked@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x4bfa2]        # 452058 <fread_unlocked@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060c0 <fclose@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x4bf9a]        # 452060 <fclose@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060d0 <strlen@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x4bf92]        # 452068 <strlen@GLIBC_2.2.5>
  4060d6:	push   0xa
  4060db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060e0 <strchr@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x4bf8a]        # 452070 <strchr@GLIBC_2.2.5>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060f0 <rewind@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x4bf82]        # 452078 <rewind@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406100 <__assert_fail@plt>:
  406100:	jmp    QWORD PTR [rip+0x4bf7a]        # 452080 <__assert_fail@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406110 <memset@plt>:
  406110:	jmp    QWORD PTR [rip+0x4bf72]        # 452088 <memset@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406120 <fputc@plt>:
  406120:	jmp    QWORD PTR [rip+0x4bf6a]        # 452090 <fputc@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406130 <memchr@plt>:
  406130:	jmp    QWORD PTR [rip+0x4bf62]        # 452098 <memchr@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406140 <memcmp@plt>:
  406140:	jmp    QWORD PTR [rip+0x4bf5a]        # 4520a0 <memcmp@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406150 <calloc@plt>:
  406150:	jmp    QWORD PTR [rip+0x4bf52]        # 4520a8 <calloc@GLIBC_2.2.5>
  406156:	push   0x12
  40615b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406160 <strcmp@plt>:
  406160:	jmp    QWORD PTR [rip+0x4bf4a]        # 4520b0 <strcmp@GLIBC_2.2.5>
  406166:	push   0x13
  40616b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406170 <fputc_unlocked@plt>:
  406170:	jmp    QWORD PTR [rip+0x4bf42]        # 4520b8 <fputc_unlocked@GLIBC_2.2.5>
  406176:	push   0x14
  40617b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406180 <fprintf@plt>:
  406180:	jmp    QWORD PTR [rip+0x4bf3a]        # 4520c0 <fprintf@GLIBC_2.2.5>
  406186:	push   0x15
  40618b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406190 <ftell@plt>:
  406190:	jmp    QWORD PTR [rip+0x4bf32]        # 4520c8 <ftell@GLIBC_2.2.5>
  406196:	push   0x16
  40619b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061a0 <memcpy@plt>:
  4061a0:	jmp    QWORD PTR [rip+0x4bf2a]        # 4520d0 <memcpy@GLIBC_2.14>
  4061a6:	push   0x17
  4061ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061b0 <malloc@plt>:
  4061b0:	jmp    QWORD PTR [rip+0x4bf22]        # 4520d8 <malloc@GLIBC_2.2.5>
  4061b6:	push   0x18
  4061bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061c0 <bcmp@plt>:
  4061c0:	jmp    QWORD PTR [rip+0x4bf1a]        # 4520e0 <bcmp@GLIBC_2.2.5>
  4061c6:	push   0x19
  4061cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061d0 <fseek@plt>:
  4061d0:	jmp    QWORD PTR [rip+0x4bf12]        # 4520e8 <fseek@GLIBC_2.2.5>
  4061d6:	push   0x1a
  4061db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061e0 <realloc@plt>:
  4061e0:	jmp    QWORD PTR [rip+0x4bf0a]        # 4520f0 <realloc@GLIBC_2.2.5>
  4061e6:	push   0x1b
  4061eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061f0 <fopen@plt>:
  4061f0:	jmp    QWORD PTR [rip+0x4bf02]        # 4520f8 <fopen@GLIBC_2.2.5>
  4061f6:	push   0x1c
  4061fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406200 <vfprintf@plt>:
  406200:	jmp    QWORD PTR [rip+0x4befa]        # 452100 <vfprintf@GLIBC_2.2.5>
  406206:	push   0x1d
  40620b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406210 <sprintf@plt>:
  406210:	jmp    QWORD PTR [rip+0x4bef2]        # 452108 <sprintf@GLIBC_2.2.5>
  406216:	push   0x1e
  40621b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406220 <exit@plt>:
  406220:	jmp    QWORD PTR [rip+0x4beea]        # 452110 <exit@GLIBC_2.2.5>
  406226:	push   0x1f
  40622b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406230 <fwrite@plt>:
  406230:	jmp    QWORD PTR [rip+0x4bee2]        # 452118 <fwrite@GLIBC_2.2.5>
  406236:	push   0x20
  40623b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406240 <posix_memalign@plt>:
  406240:	jmp    QWORD PTR [rip+0x4beda]        # 452120 <posix_memalign@GLIBC_2.2.5>
  406246:	push   0x21
  40624b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000406250 <_start@@Base>:
  406250:	endbr64 
  406254:	xor    ebp,ebp
  406256:	mov    r9,rdx
  406259:	pop    rsi
  40625a:	mov    rdx,rsp
  40625d:	and    rsp,0xfffffffffffffff0
  406261:	push   rax
  406262:	push   rsp
  406263:	mov    r8,0x42d830
  40626a:	mov    rcx,0x42d7c0
  406271:	mov    rdi,0x406d60
  406278:	call   QWORD PTR [rip+0x4bd6a]        # 451fe8 <__libc_start_main@GLIBC_2.2.5>
  40627e:	hlt    
  40627f:	nop
  406280:	endbr64 
  406284:	ret    
  406285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40628f:	nop
  406290:	mov    eax,0x452138
  406295:	cmp    rax,0x452138
  40629b:	je     4062b0 <_start@@Base+0x60>
  40629d:	mov    eax,0x0
  4062a2:	test   rax,rax
  4062a5:	je     4062b0 <_start@@Base+0x60>
  4062a7:	mov    edi,0x452138
  4062ac:	jmp    rax
  4062ae:	xchg   ax,ax
  4062b0:	ret    
  4062b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062bc:	nop    DWORD PTR [rax+0x0]
  4062c0:	mov    esi,0x452138
  4062c5:	sub    rsi,0x452138
  4062cc:	mov    rax,rsi
  4062cf:	shr    rsi,0x3f
  4062d3:	sar    rax,0x3
  4062d7:	add    rsi,rax
  4062da:	sar    rsi,1
  4062dd:	je     4062f0 <_start@@Base+0xa0>
  4062df:	mov    eax,0x0
  4062e4:	test   rax,rax
  4062e7:	je     4062f0 <_start@@Base+0xa0>
  4062e9:	mov    edi,0x452138
  4062ee:	jmp    rax
  4062f0:	ret    
  4062f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062fc:	nop    DWORD PTR [rax+0x0]
  406300:	endbr64 
  406304:	cmp    BYTE PTR [rip+0x4be35],0x0        # 452140 <__bss_start@@Base+0x8>
  40630b:	jne    406320 <_start@@Base+0xd0>
  40630d:	push   rbp
  40630e:	mov    rbp,rsp
  406311:	call   406290 <_start@@Base+0x40>
  406316:	mov    BYTE PTR [rip+0x4be23],0x1        # 452140 <__bss_start@@Base+0x8>
  40631d:	pop    rbp
  40631e:	ret    
  40631f:	nop
  406320:	ret    
  406321:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40632c:	nop    DWORD PTR [rax+0x0]
  406330:	endbr64 
  406334:	jmp    4062c0 <_start@@Base+0x70>
  406336:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406340 <usage@@Base>:
  406340:	push   rbx
  406341:	mov    rbx,rdi
  406344:	lea    rsi,[rip+0x410a0]        # 4473eb <fb_schema_table_deleted@@Base+0x4c3>
  40634b:	lea    rdx,[rip+0x27de2]        # 42e134 <_IO_stdin_used@@Base+0x134>
  406352:	xor    eax,eax
  406354:	call   406180 <fprintf@plt>
  406359:	lea    rsi,[rip+0x27e0a]        # 42e16a <_IO_stdin_used@@Base+0x16a>
  406360:	lea    rdx,[rip+0x27e10]        # 42e177 <_IO_stdin_used@@Base+0x177>
  406367:	mov    rdi,rbx
  40636a:	xor    eax,eax
  40636c:	call   406180 <fprintf@plt>
  406371:	lea    rdi,[rip+0x27e05]        # 42e17d <_IO_stdin_used@@Base+0x17d>
  406378:	mov    esi,0x23
  40637d:	mov    edx,0x1
  406382:	mov    rcx,rbx
  406385:	call   406230 <fwrite@plt>
  40638a:	lea    rdi,[rip+0x27e10]        # 42e1a1 <_IO_stdin_used@@Base+0x1a1>
  406391:	mov    esi,0x581
  406396:	mov    edx,0x1
  40639b:	mov    rcx,rbx
  40639e:	pop    rbx
  40639f:	jmp    406230 <fwrite@plt>
  4063a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063ae:	xchg   ax,ax

00000000004063b0 <help@@Base>:
  4063b0:	push   rbx
  4063b1:	mov    rbx,rdi
  4063b4:	lea    rsi,[rip+0x41030]        # 4473eb <fb_schema_table_deleted@@Base+0x4c3>
  4063bb:	lea    rdx,[rip+0x27d72]        # 42e134 <_IO_stdin_used@@Base+0x134>
  4063c2:	xor    eax,eax
  4063c4:	call   406180 <fprintf@plt>
  4063c9:	lea    rsi,[rip+0x27d9a]        # 42e16a <_IO_stdin_used@@Base+0x16a>
  4063d0:	lea    rdx,[rip+0x27da0]        # 42e177 <_IO_stdin_used@@Base+0x177>
  4063d7:	mov    rdi,rbx
  4063da:	xor    eax,eax
  4063dc:	call   406180 <fprintf@plt>
  4063e1:	lea    rdi,[rip+0x27d95]        # 42e17d <_IO_stdin_used@@Base+0x17d>
  4063e8:	mov    esi,0x23
  4063ed:	mov    edx,0x1
  4063f2:	mov    rcx,rbx
  4063f5:	call   406230 <fwrite@plt>
  4063fa:	lea    rdi,[rip+0x27da0]        # 42e1a1 <_IO_stdin_used@@Base+0x1a1>
  406401:	mov    esi,0x581
  406406:	mov    edx,0x1
  40640b:	mov    rcx,rbx
  40640e:	call   406230 <fwrite@plt>
  406413:	lea    rdi,[rip+0x28309]        # 42e723 <_IO_stdin_used@@Base+0x723>
  40641a:	mov    esi,0xc44
  40641f:	mov    edx,0x1
  406424:	mov    rcx,rbx
  406427:	pop    rbx
  406428:	jmp    406230 <fwrite@plt>
  40642d:	nop    DWORD PTR [rax]

0000000000406430 <parse_bool_arg@@Base>:
  406430:	push   rbp
  406431:	push   rbx
  406432:	push   rax
  406433:	mov    rbx,rdi
  406436:	lea    rsi,[rip+0x3a752]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40643d:	call   406160 <strcmp@plt>
  406442:	xor    ebp,ebp
  406444:	test   eax,eax
  406446:	je     406486 <parse_bool_arg@@Base+0x56>
  406448:	lea    rsi,[rip+0x28f19]        # 42f368 <_IO_stdin_used@@Base+0x1368>
  40644f:	mov    rdi,rbx
  406452:	call   406160 <strcmp@plt>
  406457:	test   eax,eax
  406459:	je     406486 <parse_bool_arg@@Base+0x56>
  40645b:	lea    rsi,[rip+0x443ad]        # 44a80f <flatcc_builder_padding_base@@Base+0xa6f>
  406462:	mov    rdi,rbx
  406465:	call   406160 <strcmp@plt>
  40646a:	mov    ebp,0x1
  40646f:	test   eax,eax
  406471:	je     406486 <parse_bool_arg@@Base+0x56>
  406473:	lea    rsi,[rip+0x28ef1]        # 42f36b <_IO_stdin_used@@Base+0x136b>
  40647a:	mov    rdi,rbx
  40647d:	call   406160 <strcmp@plt>
  406482:	test   eax,eax
  406484:	jne    40648f <parse_bool_arg@@Base+0x5f>
  406486:	mov    eax,ebp
  406488:	add    rsp,0x8
  40648c:	pop    rbx
  40648d:	pop    rbp
  40648e:	ret    
  40648f:	mov    rax,QWORD PTR [rip+0x4bb62]        # 451ff8 <stderr@GLIBC_2.2.5>
  406496:	mov    rdi,QWORD PTR [rax]
  406499:	lea    rsi,[rip+0x28ecf]        # 42f36f <_IO_stdin_used@@Base+0x136f>
  4064a0:	mov    rdx,rbx
  4064a3:	xor    eax,eax
  4064a5:	call   406180 <fprintf@plt>
  4064aa:	mov    ebp,0xffffffff
  4064af:	jmp    406486 <parse_bool_arg@@Base+0x56>
  4064b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004064c0 <match_long_arg@@Base>:
  4064c0:	push   r14
  4064c2:	push   rbx
  4064c3:	push   rax
  4064c4:	mov    r14,rdx
  4064c7:	mov    rbx,rdi
  4064ca:	call   406060 <strncmp@plt>
  4064cf:	mov    ecx,eax
  4064d1:	xor    eax,eax
  4064d3:	test   ecx,ecx
  4064d5:	jne    4064ea <match_long_arg@@Base+0x2a>
  4064d7:	mov    rdi,rbx
  4064da:	call   4060d0 <strlen@plt>
  4064df:	mov    rcx,rax
  4064e2:	xor    eax,eax
  4064e4:	cmp    rcx,r14
  4064e7:	sete   al
  4064ea:	add    rsp,0x8
  4064ee:	pop    rbx
  4064ef:	pop    r14
  4064f1:	ret    
  4064f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064fc:	nop    DWORD PTR [rax+0x0]

0000000000406500 <set_opt@@Base>:
  406500:	push   rbp
  406501:	push   r15
  406503:	push   r14
  406505:	push   r13
  406507:	push   r12
  406509:	push   rbx
  40650a:	push   rax
  40650b:	mov    rbp,rdx
  40650e:	mov    r15,rsi
  406511:	mov    QWORD PTR [rsp],rdi
  406515:	mov    rdi,rsi
  406518:	call   4060d0 <strlen@plt>
  40651d:	mov    rbx,rax
  406520:	mov    rdi,r15
  406523:	mov    esi,0x3d
  406528:	call   4060e0 <strchr@plt>
  40652d:	mov    r14,rax
  406530:	inc    rax
  406533:	mov    r12,r14
  406536:	sub    r12,r15
  406539:	test   r14,r14
  40653c:	cmove  rax,rbp
  406540:	cmove  r12,rbx
  406544:	movsx  r13d,BYTE PTR [r15]
  406548:	cmp    r13d,0x68
  40654c:	je     406a3c <set_opt@@Base+0x53c>
  406552:	mov    rbp,rax
  406555:	lea    rdi,[rip+0x28e54]        # 42f3b0 <_IO_stdin_used@@Base+0x13b0>
  40655c:	mov    rsi,r15
  40655f:	call   406160 <strcmp@plt>
  406564:	test   eax,eax
  406566:	je     406a3c <set_opt@@Base+0x53c>
  40656c:	lea    rdi,[rip+0x28e43]        # 42f3b6 <_IO_stdin_used@@Base+0x13b6>
  406573:	mov    rsi,r15
  406576:	call   406160 <strcmp@plt>
  40657b:	test   eax,eax
  40657d:	je     406a52 <set_opt@@Base+0x552>
  406583:	lea    rdi,[rip+0x291e2]        # 42f76c <_IO_stdin_used@@Base+0x176c>
  40658a:	mov    rsi,r15
  40658d:	call   406160 <strcmp@plt>
  406592:	test   eax,eax
  406594:	je     4066b1 <set_opt@@Base+0x1b1>
  40659a:	lea    rdi,[rip+0x28e1e]        # 42f3bf <_IO_stdin_used@@Base+0x13bf>
  4065a1:	mov    rsi,r15
  4065a4:	call   406160 <strcmp@plt>
  4065a9:	test   eax,eax
  4065ab:	je     4066c6 <set_opt@@Base+0x1c6>
  4065b1:	lea    rdi,[rip+0x28e0f]        # 42f3c7 <_IO_stdin_used@@Base+0x13c7>
  4065b8:	mov    rsi,r15
  4065bb:	call   406160 <strcmp@plt>
  4065c0:	test   eax,eax
  4065c2:	je     4066db <set_opt@@Base+0x1db>
  4065c8:	lea    rdi,[rip+0x28e05]        # 42f3d4 <_IO_stdin_used@@Base+0x13d4>
  4065cf:	mov    rsi,r15
  4065d2:	call   406160 <strcmp@plt>
  4065d7:	test   eax,eax
  4065d9:	je     4066f0 <set_opt@@Base+0x1f0>
  4065df:	lea    rdi,[rip+0x28dfc]        # 42f3e2 <_IO_stdin_used@@Base+0x13e2>
  4065e6:	mov    rsi,r15
  4065e9:	call   406160 <strcmp@plt>
  4065ee:	test   eax,eax
  4065f0:	je     406705 <set_opt@@Base+0x205>
  4065f6:	lea    rdi,[rip+0x28deb]        # 42f3e8 <_IO_stdin_used@@Base+0x13e8>
  4065fd:	mov    rsi,r15
  406600:	mov    rdx,r12
  406603:	call   406060 <strncmp@plt>
  406608:	cmp    r12,0x11
  40660c:	jne    406616 <set_opt@@Base+0x116>
  40660e:	test   eax,eax
  406610:	je     4067ea <set_opt@@Base+0x2ea>
  406616:	lea    rdi,[rip+0x28e7b]        # 42f498 <_IO_stdin_used@@Base+0x1498>
  40661d:	mov    rsi,r15
  406620:	mov    rdx,r12
  406623:	call   406060 <strncmp@plt>
  406628:	cmp    r12,0xe
  40662c:	jne    406721 <set_opt@@Base+0x221>
  406632:	test   eax,eax
  406634:	jne    406721 <set_opt@@Base+0x221>
  40663a:	test   rbp,rbp
  40663d:	je     406a90 <set_opt@@Base+0x590>
  406643:	lea    rsi,[rip+0x3a545]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40664a:	mov    rdi,rbp
  40664d:	call   406160 <strcmp@plt>
  406652:	xor    ebx,ebx
  406654:	test   eax,eax
  406656:	je     40669a <set_opt@@Base+0x19a>
  406658:	lea    rsi,[rip+0x28d09]        # 42f368 <_IO_stdin_used@@Base+0x1368>
  40665f:	mov    rdi,rbp
  406662:	call   406160 <strcmp@plt>
  406667:	test   eax,eax
  406669:	je     40669a <set_opt@@Base+0x19a>
  40666b:	lea    rsi,[rip+0x4419d]        # 44a80f <flatcc_builder_padding_base@@Base+0xa6f>
  406672:	mov    rdi,rbp
  406675:	call   406160 <strcmp@plt>
  40667a:	mov    ebx,0x1
  40667f:	test   eax,eax
  406681:	je     40669a <set_opt@@Base+0x19a>
  406683:	lea    rsi,[rip+0x28ce1]        # 42f36b <_IO_stdin_used@@Base+0x136b>
  40668a:	mov    rdi,rbp
  40668d:	call   406160 <strcmp@plt>
  406692:	test   eax,eax
  406694:	jne    406adb <set_opt@@Base+0x5db>
  40669a:	xor    eax,eax
  40669c:	test   r14,r14
  40669f:	sete   al
  4066a2:	mov    rcx,QWORD PTR [rsp]
  4066a6:	mov    DWORD PTR [rcx+0xdc],ebx
  4066ac:	jmp    4068f3 <set_opt@@Base+0x3f3>
  4066b1:	mov    rax,QWORD PTR [rsp]
  4066b5:	mov    DWORD PTR [rax+0x80],0x1
  4066bf:	xor    eax,eax
  4066c1:	jmp    4068f5 <set_opt@@Base+0x3f5>
  4066c6:	mov    rax,QWORD PTR [rsp]
  4066ca:	mov    DWORD PTR [rax+0xd4],0x1
  4066d4:	xor    eax,eax
  4066d6:	jmp    4068f5 <set_opt@@Base+0x3f5>
  4066db:	mov    rax,QWORD PTR [rsp]
  4066df:	mov    DWORD PTR [rax+0xc4],0x1
  4066e9:	xor    eax,eax
  4066eb:	jmp    4068f5 <set_opt@@Base+0x3f5>
  4066f0:	mov    rax,QWORD PTR [rsp]
  4066f4:	mov    DWORD PTR [rax+0xc8],0x1
  4066fe:	xor    eax,eax
  406700:	jmp    4068f5 <set_opt@@Base+0x3f5>
  406705:	movabs rax,0x100000001
  40670f:	mov    rcx,QWORD PTR [rsp]
  406713:	mov    QWORD PTR [rcx+0xc4],rax
  40671a:	xor    eax,eax
  40671c:	jmp    4068f5 <set_opt@@Base+0x3f5>
  406721:	lea    rdi,[rip+0x2901c]        # 42f744 <_IO_stdin_used@@Base+0x1744>
  406728:	mov    rsi,r15
  40672b:	mov    rdx,r12
  40672e:	call   406060 <strncmp@plt>
  406733:	cmp    r12,0x8
  406737:	jne    406768 <set_opt@@Base+0x268>
  406739:	test   eax,eax
  40673b:	jne    406768 <set_opt@@Base+0x268>
  40673d:	test   rbp,rbp
  406740:	je     406aab <set_opt@@Base+0x5ab>
  406746:	xor    eax,eax
  406748:	test   r14,r14
  40674b:	sete   al
  40674e:	mov    rcx,QWORD PTR [rsp]
  406752:	mov    QWORD PTR [rcx+0x88],rbp
  406759:	mov    DWORD PTR [rcx+0x84],0x1
  406763:	jmp    4068f3 <set_opt@@Base+0x3f3>
  406768:	lea    rdi,[rip+0x28d86]        # 42f4f5 <_IO_stdin_used@@Base+0x14f5>
  40676f:	mov    rsi,r15
  406772:	mov    rdx,r12
  406775:	call   406060 <strncmp@plt>
  40677a:	cmp    r12,0xa
  40677e:	jne    4067a5 <set_opt@@Base+0x2a5>
  406780:	test   eax,eax
  406782:	jne    4067a5 <set_opt@@Base+0x2a5>
  406784:	test   rbp,rbp
  406787:	je     406ac3 <set_opt@@Base+0x5c3>
  40678d:	xor    eax,eax
  40678f:	test   r14,r14
  406792:	sete   al
  406795:	mov    rcx,QWORD PTR [rsp]
  406799:	mov    QWORD PTR [rcx+0x90],rbp
  4067a0:	jmp    4068f3 <set_opt@@Base+0x3f3>
  4067a5:	lea    rdi,[rip+0x28d7a]        # 42f526 <_IO_stdin_used@@Base+0x1526>
  4067ac:	mov    rsi,r15
  4067af:	mov    rdx,r12
  4067b2:	call   406060 <strncmp@plt>
  4067b7:	cmp    r12,0x8
  4067bb:	jne    406881 <set_opt@@Base+0x381>
  4067c1:	test   eax,eax
  4067c3:	jne    406881 <set_opt@@Base+0x381>
  4067c9:	test   rbp,rbp
  4067cc:	je     406b0e <set_opt@@Base+0x60e>
  4067d2:	xor    eax,eax
  4067d4:	test   r14,r14
  4067d7:	sete   al
  4067da:	mov    rcx,QWORD PTR [rsp]
  4067de:	mov    QWORD PTR [rcx+0x98],rbp
  4067e5:	jmp    4068f3 <set_opt@@Base+0x3f3>
  4067ea:	mov    r15,QWORD PTR [rip+0x4b807]        # 451ff8 <stderr@GLIBC_2.2.5>
  4067f1:	mov    rcx,QWORD PTR [r15]
  4067f4:	lea    rdi,[rip+0x28bff]        # 42f3fa <_IO_stdin_used@@Base+0x13fa>
  4067fb:	mov    esi,0x70
  406800:	mov    edx,0x1
  406805:	call   406230 <fwrite@plt>
  40680a:	test   rbp,rbp
  40680d:	je     406b26 <set_opt@@Base+0x626>
  406813:	lea    rsi,[rip+0x3a375]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40681a:	mov    rdi,rbp
  40681d:	call   406160 <strcmp@plt>
  406822:	mov    rbx,rbp
  406825:	xor    ebp,ebp
  406827:	test   eax,eax
  406829:	je     40686d <set_opt@@Base+0x36d>
  40682b:	lea    rsi,[rip+0x28b36]        # 42f368 <_IO_stdin_used@@Base+0x1368>
  406832:	mov    rdi,rbx
  406835:	call   406160 <strcmp@plt>
  40683a:	test   eax,eax
  40683c:	je     40686d <set_opt@@Base+0x36d>
  40683e:	lea    rsi,[rip+0x43fca]        # 44a80f <flatcc_builder_padding_base@@Base+0xa6f>
  406845:	mov    rdi,rbx
  406848:	call   406160 <strcmp@plt>
  40684d:	mov    ebp,0x1
  406852:	test   eax,eax
  406854:	je     40686d <set_opt@@Base+0x36d>
  406856:	lea    rsi,[rip+0x28b0e]        # 42f36b <_IO_stdin_used@@Base+0x136b>
  40685d:	mov    rdi,rbx
  406860:	call   406160 <strcmp@plt>
  406865:	test   eax,eax
  406867:	jne    406bc1 <set_opt@@Base+0x6c1>
  40686d:	xor    eax,eax
  40686f:	test   r14,r14
  406872:	sete   al
  406875:	mov    rcx,QWORD PTR [rsp]
  406879:	mov    DWORD PTR [rcx+0xd8],ebp
  40687f:	jmp    4068f3 <set_opt@@Base+0x3f3>
  406881:	lea    rdi,[rip+0x28ccb]        # 42f553 <_IO_stdin_used@@Base+0x1553>
  406888:	mov    rsi,r15
  40688b:	mov    rdx,r12
  40688e:	call   406060 <strncmp@plt>
  406893:	cmp    r12,0xe
  406897:	jne    4068bb <set_opt@@Base+0x3bb>
  406899:	test   eax,eax
  40689b:	jne    4068bb <set_opt@@Base+0x3bb>
  40689d:	test   rbp,rbp
  4068a0:	je     406b49 <set_opt@@Base+0x649>
  4068a6:	xor    eax,eax
  4068a8:	test   r14,r14
  4068ab:	sete   al
  4068ae:	mov    rcx,QWORD PTR [rsp]
  4068b2:	mov    QWORD PTR [rcx+0xe8],rbp
  4068b9:	jmp    4068f3 <set_opt@@Base+0x3f3>
  4068bb:	lea    rdi,[rip+0x28c98]        # 42f55a <_IO_stdin_used@@Base+0x155a>
  4068c2:	mov    rsi,r15
  4068c5:	mov    rdx,r12
  4068c8:	call   406060 <strncmp@plt>
  4068cd:	cmp    r12,0x7
  4068d1:	jne    406904 <set_opt@@Base+0x404>
  4068d3:	test   eax,eax
  4068d5:	jne    406904 <set_opt@@Base+0x404>
  4068d7:	test   rbp,rbp
  4068da:	je     406b84 <set_opt@@Base+0x684>
  4068e0:	xor    eax,eax
  4068e2:	test   r14,r14
  4068e5:	sete   al
  4068e8:	mov    rcx,QWORD PTR [rsp]
  4068ec:	mov    QWORD PTR [rcx+0xe0],rbp
  4068f3:	add    eax,eax
  4068f5:	add    rsp,0x8
  4068f9:	pop    rbx
  4068fa:	pop    r12
  4068fc:	pop    r13
  4068fe:	pop    r14
  406900:	pop    r15
  406902:	pop    rbp
  406903:	ret    
  406904:	lea    eax,[r13-0x2d]
  406908:	cmp    eax,0x4a
  40690b:	ja     406b5f <set_opt@@Base+0x65f>
  406911:	lea    rcx,[rip+0x276f0]        # 42e008 <_IO_stdin_used@@Base+0x8>
  406918:	movsxd rax,DWORD PTR [rcx+rax*4]
  40691c:	add    rax,rcx
  40691f:	jmp    rax
  406921:	cmp    BYTE PTR [r15+0x1],0x0
  406926:	mov    rdi,QWORD PTR [rsp]
  40692a:	je     4069f4 <set_opt@@Base+0x4f4>
  406930:	inc    r15
  406933:	mov    eax,0x1
  406938:	mov    rbp,r15
  40693b:	jmp    406a02 <set_opt@@Base+0x502>
  406940:	mov    rax,QWORD PTR [rsp]
  406944:	mov    DWORD PTR [rax+0xbc],0x1
  40694e:	xor    eax,eax
  406950:	jmp    4068f5 <set_opt@@Base+0x3f5>
  406952:	mov    rax,QWORD PTR [rsp]
  406956:	jmp    4069e3 <set_opt@@Base+0x4e3>
  40695b:	mov    rax,QWORD PTR [rsp]
  40695f:	mov    DWORD PTR [rax+0xc0],0x1
  406969:	xor    eax,eax
  40696b:	jmp    4068f5 <set_opt@@Base+0x3f5>
  40696d:	mov    rax,QWORD PTR [rsp]
  406971:	mov    DWORD PTR [rax+0xb0],0x1
  40697b:	xor    eax,eax
  40697d:	jmp    4068f5 <set_opt@@Base+0x3f5>
  406982:	mov    rcx,QWORD PTR [rsp]
  406986:	cmp    QWORD PTR [rcx+0x108],0x0
  40698e:	jne    406bed <set_opt@@Base+0x6ed>
  406994:	cmp    BYTE PTR [r15+0x1],0x0
  406999:	je     406a22 <set_opt@@Base+0x522>
  40699f:	inc    r15
  4069a2:	mov    eax,0x1
  4069a7:	mov    rbp,r15
  4069aa:	jmp    406a30 <set_opt@@Base+0x530>
  4069af:	mov    rax,QWORD PTR [rsp]
  4069b3:	mov    DWORD PTR [rax+0x84],0x1
  4069bd:	xor    eax,eax
  4069bf:	jmp    4068f5 <set_opt@@Base+0x3f5>
  4069c4:	mov    rax,QWORD PTR [rsp]
  4069c8:	mov    DWORD PTR [rax+0xc0],0x1
  4069d2:	vbroadcastss xmm0,DWORD PTR [rip+0x27629]        # 42e004 <_IO_stdin_used@@Base+0x4>
  4069db:	vmovups XMMWORD PTR [rax+0xb0],xmm0
  4069e3:	mov    DWORD PTR [rax+0xcc],0x1
  4069ed:	xor    eax,eax
  4069ef:	jmp    4068f5 <set_opt@@Base+0x3f5>
  4069f4:	mov    eax,0x2
  4069f9:	test   rbp,rbp
  4069fc:	je     406c08 <set_opt@@Base+0x708>
  406a02:	mov    rcx,QWORD PTR [rdi+0xf0]
  406a09:	movsxd rdx,DWORD PTR [rdi+0x100]
  406a10:	lea    esi,[rdx+0x1]
  406a13:	mov    DWORD PTR [rdi+0x100],esi
  406a19:	mov    QWORD PTR [rcx+rdx*8],rbp
  406a1d:	jmp    4068f5 <set_opt@@Base+0x3f5>
  406a22:	mov    eax,0x2
  406a27:	test   rbp,rbp
  406a2a:	je     406c23 <set_opt@@Base+0x723>
  406a30:	mov    QWORD PTR [rcx+0x108],rbp
  406a37:	jmp    4068f5 <set_opt@@Base+0x3f5>
  406a3c:	mov    rax,QWORD PTR [rip+0x4b59d]        # 451fe0 <stdout@GLIBC_2.2.5>
  406a43:	mov    rdi,QWORD PTR [rax]
  406a46:	call   4063b0 <help@@Base>
  406a4b:	xor    edi,edi
  406a4d:	call   406220 <exit@plt>
  406a52:	mov    rbx,QWORD PTR [rip+0x4b59f]        # 451ff8 <stderr@GLIBC_2.2.5>
  406a59:	mov    rdi,QWORD PTR [rbx]
  406a5c:	lea    rsi,[rip+0x40988]        # 4473eb <fb_schema_table_deleted@@Base+0x4c3>
  406a63:	lea    rdx,[rip+0x276ca]        # 42e134 <_IO_stdin_used@@Base+0x134>
  406a6a:	xor    eax,eax
  406a6c:	call   406180 <fprintf@plt>
  406a71:	mov    rdi,QWORD PTR [rbx]
  406a74:	lea    rsi,[rip+0x276ef]        # 42e16a <_IO_stdin_used@@Base+0x16a>
  406a7b:	lea    rdx,[rip+0x276f5]        # 42e177 <_IO_stdin_used@@Base+0x177>
  406a82:	xor    eax,eax
  406a84:	call   406180 <fprintf@plt>
  406a89:	xor    edi,edi
  406a8b:	call   406220 <exit@plt>
  406a90:	mov    rax,QWORD PTR [rip+0x4b561]        # 451ff8 <stderr@GLIBC_2.2.5>
  406a97:	mov    rcx,QWORD PTR [rax]
  406a9a:	lea    rdi,[rip+0x28a06]        # 42f4a7 <_IO_stdin_used@@Base+0x14a7>
  406aa1:	mov    esi,0x29
  406aa6:	jmp    406b35 <set_opt@@Base+0x635>
  406aab:	mov    rax,QWORD PTR [rip+0x4b546]        # 451ff8 <stderr@GLIBC_2.2.5>
  406ab2:	mov    rcx,QWORD PTR [rax]
  406ab5:	lea    rdi,[rip+0x28a15]        # 42f4d1 <_IO_stdin_used@@Base+0x14d1>
  406abc:	mov    esi,0x23
  406ac1:	jmp    406b35 <set_opt@@Base+0x635>
  406ac3:	mov    rax,QWORD PTR [rip+0x4b52e]        # 451ff8 <stderr@GLIBC_2.2.5>
  406aca:	mov    rcx,QWORD PTR [rax]
  406acd:	lea    rdi,[rip+0x28a2c]        # 42f500 <_IO_stdin_used@@Base+0x1500>
  406ad4:	mov    esi,0x25
  406ad9:	jmp    406b35 <set_opt@@Base+0x635>
  406adb:	mov    rax,QWORD PTR [rip+0x4b516]        # 451ff8 <stderr@GLIBC_2.2.5>
  406ae2:	mov    rdi,QWORD PTR [rax]
  406ae5:	lea    rsi,[rip+0x28883]        # 42f36f <_IO_stdin_used@@Base+0x136f>
  406aec:	mov    rdx,rbp
  406aef:	xor    eax,eax
  406af1:	call   406180 <fprintf@plt>
  406af6:	mov    rax,QWORD PTR [rsp]
  406afa:	mov    DWORD PTR [rax+0xdc],0xffffffff
  406b04:	mov    edi,0xffffffff
  406b09:	call   406220 <exit@plt>
  406b0e:	mov    rax,QWORD PTR [rip+0x4b4e3]        # 451ff8 <stderr@GLIBC_2.2.5>
  406b15:	mov    rcx,QWORD PTR [rax]
  406b18:	lea    rdi,[rip+0x28a10]        # 42f52f <_IO_stdin_used@@Base+0x152f>
  406b1f:	mov    esi,0x23
  406b24:	jmp    406b35 <set_opt@@Base+0x635>
  406b26:	mov    rcx,QWORD PTR [r15]
  406b29:	lea    rdi,[rip+0x2893b]        # 42f46b <_IO_stdin_used@@Base+0x146b>
  406b30:	mov    esi,0x2c
  406b35:	mov    edx,0x1
  406b3a:	call   406230 <fwrite@plt>
  406b3f:	mov    edi,0xffffffff
  406b44:	call   406220 <exit@plt>
  406b49:	mov    rax,QWORD PTR [rip+0x4b4a8]        # 451ff8 <stderr@GLIBC_2.2.5>
  406b50:	mov    rcx,QWORD PTR [rax]
  406b53:	lea    rdi,[rip+0x28a08]        # 42f562 <_IO_stdin_used@@Base+0x1562>
  406b5a:	jmp    406aa1 <set_opt@@Base+0x5a1>
  406b5f:	mov    rax,QWORD PTR [rip+0x4b492]        # 451ff8 <stderr@GLIBC_2.2.5>
  406b66:	mov    rdi,QWORD PTR [rax]
  406b69:	lea    rsi,[rip+0x28aae]        # 42f61e <_IO_stdin_used@@Base+0x161e>
  406b70:	mov    edx,r13d
  406b73:	xor    eax,eax
  406b75:	call   406180 <fprintf@plt>
  406b7a:	mov    edi,0xffffffff
  406b7f:	call   406220 <exit@plt>
  406b84:	mov    rax,QWORD PTR [rip+0x4b46d]        # 451ff8 <stderr@GLIBC_2.2.5>
  406b8b:	mov    rcx,QWORD PTR [rax]
  406b8e:	lea    rdi,[rip+0x289f7]        # 42f58c <_IO_stdin_used@@Base+0x158c>
  406b95:	mov    esi,0x1c
  406b9a:	jmp    406b35 <set_opt@@Base+0x635>
  406b9c:	mov    rax,QWORD PTR [rip+0x4b455]        # 451ff8 <stderr@GLIBC_2.2.5>
  406ba3:	mov    rdi,QWORD PTR [rax]
  406ba6:	lea    rsi,[rip+0x289fc]        # 42f5a9 <_IO_stdin_used@@Base+0x15a9>
  406bad:	mov    rdx,r15
  406bb0:	xor    eax,eax
  406bb2:	call   406180 <fprintf@plt>
  406bb7:	mov    edi,0xffffffff
  406bbc:	call   406220 <exit@plt>
  406bc1:	mov    rdi,QWORD PTR [r15]
  406bc4:	lea    rsi,[rip+0x287a4]        # 42f36f <_IO_stdin_used@@Base+0x136f>
  406bcb:	mov    rdx,rbx
  406bce:	xor    eax,eax
  406bd0:	call   406180 <fprintf@plt>
  406bd5:	mov    rax,QWORD PTR [rsp]
  406bd9:	mov    DWORD PTR [rax+0xd8],0xffffffff
  406be3:	mov    edi,0xffffffff
  406be8:	call   406220 <exit@plt>
  406bed:	mov    rax,QWORD PTR [rip+0x4b404]        # 451ff8 <stderr@GLIBC_2.2.5>
  406bf4:	mov    rcx,QWORD PTR [rax]
  406bf7:	lea    rdi,[rip+0x289dd]        # 42f5db <_IO_stdin_used@@Base+0x15db>
  406bfe:	mov    esi,0x25
  406c03:	jmp    406b35 <set_opt@@Base+0x635>
  406c08:	mov    rax,QWORD PTR [rip+0x4b3e9]        # 451ff8 <stderr@GLIBC_2.2.5>
  406c0f:	mov    rcx,QWORD PTR [rax]
  406c12:	lea    rdi,[rip+0x289a5]        # 42f5be <_IO_stdin_used@@Base+0x15be>
  406c19:	mov    esi,0x1c
  406c1e:	jmp    406b35 <set_opt@@Base+0x635>
  406c23:	mov    rax,QWORD PTR [rip+0x4b3ce]        # 451ff8 <stderr@GLIBC_2.2.5>
  406c2a:	mov    rcx,QWORD PTR [rax]
  406c2d:	lea    rdi,[rip+0x289cd]        # 42f601 <_IO_stdin_used@@Base+0x1601>
  406c34:	mov    esi,0x1c
  406c39:	jmp    406b35 <set_opt@@Base+0x635>
  406c3e:	xchg   ax,ax

0000000000406c40 <get_opt@@Base>:
  406c40:	push   r15
  406c42:	push   r14
  406c44:	push   rbx
  406c45:	mov    r14,rdx
  406c48:	mov    rbx,rsi
  406c4b:	mov    r15,rdi
  406c4e:	mov    al,BYTE PTR [rsi+0x1]
  406c51:	inc    rbx
  406c54:	cmp    al,0x2d
  406c56:	je     406cbf <get_opt@@Base+0x7f>
  406c58:	test   al,al
  406c5a:	jne    406c98 <get_opt@@Base+0x58>
  406c5c:	mov    rax,QWORD PTR [rip+0x4b395]        # 451ff8 <stderr@GLIBC_2.2.5>
  406c63:	mov    rcx,QWORD PTR [rax]
  406c66:	lea    rdi,[rip+0x289c6]        # 42f633 <_IO_stdin_used@@Base+0x1633>
  406c6d:	mov    esi,0x18
  406c72:	mov    edx,0x1
  406c77:	call   406230 <fwrite@plt>
  406c7c:	mov    edi,0xffffffff
  406c81:	call   406220 <exit@plt>
  406c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c90:	inc    rbx
  406c93:	cmp    BYTE PTR [rbx],0x0
  406c96:	je     406cd7 <get_opt@@Base+0x97>
  406c98:	mov    rdi,r15
  406c9b:	mov    rsi,rbx
  406c9e:	mov    rdx,r14
  406ca1:	call   406500 <set_opt@@Base>
  406ca6:	mov    ecx,eax
  406ca8:	xor    eax,eax
  406caa:	test   ecx,ecx
  406cac:	je     406c90 <get_opt@@Base+0x50>
  406cae:	cmp    ecx,0x1
  406cb1:	je     406cd7 <get_opt@@Base+0x97>
  406cb3:	cmp    ecx,0x2
  406cb6:	jne    406c93 <get_opt@@Base+0x53>
  406cb8:	mov    eax,0x1
  406cbd:	jmp    406cd7 <get_opt@@Base+0x97>
  406cbf:	mov    rdi,r15
  406cc2:	mov    rsi,rbx
  406cc5:	mov    rdx,r14
  406cc8:	call   406500 <set_opt@@Base>
  406ccd:	mov    ecx,eax
  406ccf:	xor    eax,eax
  406cd1:	cmp    ecx,0x2
  406cd4:	sete   al
  406cd7:	pop    rbx
  406cd8:	pop    r14
  406cda:	pop    r15
  406cdc:	ret    
  406cdd:	nop    DWORD PTR [rax]

0000000000406ce0 <parse_opts@@Base>:
  406ce0:	push   rbp
  406ce1:	push   r15
  406ce3:	push   r14
  406ce5:	push   rbx
  406ce6:	push   rax
  406ce7:	cmp    edi,0x2
  406cea:	jl     406d50 <parse_opts@@Base+0x70>
  406cec:	mov    rbx,rdx
  406cef:	mov    r14,rsi
  406cf2:	mov    r15d,edi
  406cf5:	mov    ebp,0x1
  406cfa:	jmp    406d22 <parse_opts@@Base+0x42>
  406cfc:	nop    DWORD PTR [rax+0x0]
  406d00:	mov    rax,QWORD PTR [rbx+0xf8]
  406d07:	movsxd rcx,DWORD PTR [rbx+0x104]
  406d0e:	lea    edx,[rcx+0x1]
  406d11:	mov    DWORD PTR [rbx+0x104],edx
  406d17:	mov    QWORD PTR [rax+rcx*8],rsi
  406d1b:	inc    ebp
  406d1d:	cmp    ebp,r15d
  406d20:	jge    406d50 <parse_opts@@Base+0x70>
  406d22:	movsxd rax,ebp
  406d25:	mov    rsi,QWORD PTR [r14+rax*8]
  406d29:	cmp    BYTE PTR [rsi],0x2d
  406d2c:	jne    406d00 <parse_opts@@Base+0x20>
  406d2e:	lea    eax,[rbp+0x1]
  406d31:	cmp    eax,r15d
  406d34:	jge    406d40 <parse_opts@@Base+0x60>
  406d36:	cdqe   
  406d38:	mov    rdx,QWORD PTR [r14+rax*8]
  406d3c:	jmp    406d42 <parse_opts@@Base+0x62>
  406d3e:	xchg   ax,ax
  406d40:	xor    edx,edx
  406d42:	mov    rdi,rbx
  406d45:	call   406c40 <get_opt@@Base>
  406d4a:	add    eax,ebp
  406d4c:	mov    ebp,eax
  406d4e:	jmp    406d1b <parse_opts@@Base+0x3b>
  406d50:	add    rsp,0x8
  406d54:	pop    rbx
  406d55:	pop    r14
  406d57:	pop    r15
  406d59:	pop    rbp
  406d5a:	ret    
  406d5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406d60 <main@@Base>:
  406d60:	push   rbp
  406d61:	push   r15
  406d63:	push   r14
  406d65:	push   rbx
  406d66:	sub    rsp,0x118
  406d6d:	cmp    edi,0x1
  406d70:	jle    4070c6 <main@@Base+0x366>
  406d76:	mov    r15,rsi
  406d79:	mov    ebp,edi
  406d7b:	lea    rdi,[rsp+0x8]
  406d80:	call   407140 <flatcc_init_options@@Base>
  406d85:	movsxd r14,ebp
  406d88:	shl    r14,0x3
  406d8c:	mov    rdi,r14
  406d8f:	call   4061b0 <malloc@plt>
  406d94:	mov    QWORD PTR [rsp+0xf8],rax
  406d9c:	test   rax,rax
  406d9f:	je     4070df <main@@Base+0x37f>
  406da5:	mov    rdi,r14
  406da8:	call   4061b0 <malloc@plt>
  406dad:	mov    QWORD PTR [rsp+0x100],rax
  406db5:	test   rax,rax
  406db8:	je     407109 <main@@Base+0x3a9>
  406dbe:	mov    ebx,0x1
  406dc3:	lea    r14,[rsp+0x8]
  406dc8:	jmp    406df4 <main@@Base+0x94>
  406dca:	nop    WORD PTR [rax+rax*1+0x0]
  406dd0:	mov    rax,QWORD PTR [rsp+0x100]
  406dd8:	movsxd rcx,DWORD PTR [rsp+0x10c]
  406de0:	lea    edx,[rcx+0x1]
  406de3:	mov    DWORD PTR [rsp+0x10c],edx
  406dea:	mov    QWORD PTR [rax+rcx*8],rsi
  406dee:	inc    ebx
  406df0:	cmp    ebx,ebp
  406df2:	jge    406e20 <main@@Base+0xc0>
  406df4:	movsxd rax,ebx
  406df7:	mov    rsi,QWORD PTR [r15+rax*8]
  406dfb:	cmp    BYTE PTR [rsi],0x2d
  406dfe:	jne    406dd0 <main@@Base+0x70>
  406e00:	lea    eax,[rbx+0x1]
  406e03:	cmp    eax,ebp
  406e05:	jge    406e10 <main@@Base+0xb0>
  406e07:	cdqe   
  406e09:	mov    rdx,QWORD PTR [r15+rax*8]
  406e0d:	jmp    406e12 <main@@Base+0xb2>
  406e0f:	nop
  406e10:	xor    edx,edx
  406e12:	mov    rdi,r14
  406e15:	call   406c40 <get_opt@@Base>
  406e1a:	add    eax,ebx
  406e1c:	mov    ebx,eax
  406e1e:	jmp    406dee <main@@Base+0x8e>
  406e20:	mov    esi,DWORD PTR [rsp+0xb8]
  406e27:	mov    ecx,DWORD PTR [rsp+0xc4]
  406e2e:	test   ecx,ecx
  406e30:	setne  al
  406e33:	test   esi,esi
  406e35:	setne  bl
  406e38:	and    bl,al
  406e3a:	movzx  eax,bl
  406e3d:	mov    DWORD PTR [rsp+0xbc],eax
  406e44:	mov    ebp,DWORD PTR [rsp+0x10c]
  406e4b:	test   ebp,ebp
  406e4d:	je     406ecd <main@@Base+0x16d>
  406e4f:	mov    dl,0x1
  406e51:	mov    edi,DWORD PTR [rsp+0xc0]
  406e58:	or     edi,ecx
  406e5a:	jne    406e7f <main@@Base+0x11f>
  406e5c:	or     esi,DWORD PTR [rsp+0xc8]
  406e63:	setne  al
  406e66:	or     bl,al
  406e68:	jne    406e7f <main@@Base+0x11f>
  406e6a:	cmp    DWORD PTR [rsp+0xcc],0x0
  406e72:	jne    406e7f <main@@Base+0x11f>
  406e74:	cmp    DWORD PTR [rsp+0xd0],0x0
  406e7c:	setne  dl
  406e7f:	cmp    DWORD PTR [rsp+0xdc],0x0
  406e87:	je     406f1e <main@@Base+0x1be>
  406e8d:	test   dl,dl
  406e8f:	je     406f3f <main@@Base+0x1df>
  406e95:	cmp    DWORD PTR [rsp+0x88],0x0
  406e9d:	jne    407057 <main@@Base+0x2f7>
  406ea3:	cmp    QWORD PTR [rsp+0xa0],0x0
  406eac:	je     406f3f <main@@Base+0x1df>
  406eb2:	mov    rax,QWORD PTR [rip+0x4b13f]        # 451ff8 <stderr@GLIBC_2.2.5>
  406eb9:	mov    rcx,QWORD PTR [rax]
  406ebc:	lea    rdi,[rip+0x28822]        # 42f6e5 <_IO_stdin_used@@Base+0x16e5>
  406ec3:	mov    esi,0x3a
  406ec8:	jmp    40706d <main@@Base+0x30d>
  406ecd:	test   esi,esi
  406ecf:	je     40700f <main@@Base+0x2af>
  406ed5:	cmp    DWORD PTR [rsp+0xdc],0x0
  406edd:	jne    40700f <main@@Base+0x2af>
  406ee3:	lea    rdi,[rsp+0x8]
  406ee8:	xor    esi,esi
  406eea:	xor    edx,edx
  406eec:	xor    ecx,ecx
  406eee:	call   407240 <flatcc_create_context@@Base>
  406ef3:	test   rax,rax
  406ef6:	je     406ff7 <main@@Base+0x297>
  406efc:	mov    rbx,rax
  406eff:	mov    rdi,rax
  406f02:	call   4079c0 <flatcc_generate_files@@Base>
  406f07:	test   eax,eax
  406f09:	jne    406fea <main@@Base+0x28a>
  406f0f:	mov    rdi,rbx
  406f12:	call   407ae0 <flatcc_destroy_context@@Base>
  406f17:	xor    ebx,ebx
  406f19:	jmp    40709c <main@@Base+0x33c>
  406f1e:	test   ecx,ecx
  406f20:	setne  al
  406f23:	xor    dl,0x1
  406f26:	or     dl,al
  406f28:	jne    406f34 <main@@Base+0x1d4>
  406f2a:	cmp    DWORD PTR [rsp+0xc8],0x0
  406f32:	je     406f3f <main@@Base+0x1df>
  406f34:	mov    DWORD PTR [rsp+0xc0],0x1
  406f3f:	cmp    QWORD PTR [rsp+0x98],0x0
  406f48:	je     406f59 <main@@Base+0x1f9>
  406f4a:	cmp    QWORD PTR [rsp+0x90],0x0
  406f53:	je     407027 <main@@Base+0x2c7>
  406f59:	cmp    DWORD PTR [rsp+0x88],0x0
  406f61:	je     406f72 <main@@Base+0x212>
  406f63:	cmp    QWORD PTR [rsp+0xa0],0x0
  406f6c:	jne    40703f <main@@Base+0x2df>
  406f72:	test   ebp,ebp
  406f74:	jle    406fe3 <main@@Base+0x283>
  406f76:	mov    r15,QWORD PTR [rsp+0x100]
  406f7e:	xor    ebp,ebp
  406f80:	lea    r14,[rsp+0x8]
  406f85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f8f:	nop
  406f90:	mov    rsi,QWORD PTR [r15+rbp*8]
  406f94:	mov    rdi,r14
  406f97:	xor    edx,edx
  406f99:	xor    ecx,ecx
  406f9b:	call   407240 <flatcc_create_context@@Base>
  406fa0:	test   rax,rax
  406fa3:	je     406ff7 <main@@Base+0x297>
  406fa5:	mov    rbx,rax
  406fa8:	mov    rsi,QWORD PTR [r15+rbp*8]
  406fac:	mov    rdi,rax
  406faf:	call   407330 <flatcc_parse_file@@Base>
  406fb4:	test   eax,eax
  406fb6:	jne    406fea <main@@Base+0x28a>
  406fb8:	mov    rdi,rbx
  406fbb:	call   4079c0 <flatcc_generate_files@@Base>
  406fc0:	test   eax,eax
  406fc2:	jne    406fea <main@@Base+0x28a>
  406fc4:	mov    rdi,rbx
  406fc7:	call   407ae0 <flatcc_destroy_context@@Base>
  406fcc:	mov    DWORD PTR [rsp+0xa8],0x1
  406fd7:	inc    rbp
  406fda:	cmp    ebp,DWORD PTR [rsp+0x10c]
  406fe1:	jl     406f90 <main@@Base+0x230>
  406fe3:	xor    ebx,ebx
  406fe5:	jmp    40709c <main@@Base+0x33c>
  406fea:	mov    rdi,rbx
  406fed:	call   407ae0 <flatcc_destroy_context@@Base>
  406ff2:	jmp    407077 <main@@Base+0x317>
  406ff7:	mov    rax,QWORD PTR [rip+0x4affa]        # 451ff8 <stderr@GLIBC_2.2.5>
  406ffe:	mov    rcx,QWORD PTR [rax]
  407001:	lea    rdi,[rip+0x28671]        # 42f679 <_IO_stdin_used@@Base+0x1679>
  407008:	mov    esi,0x31
  40700d:	jmp    40706d <main@@Base+0x30d>
  40700f:	mov    rax,QWORD PTR [rip+0x4afe2]        # 451ff8 <stderr@GLIBC_2.2.5>
  407016:	mov    rcx,QWORD PTR [rax]
  407019:	lea    rdi,[rip+0x28647]        # 42f667 <_IO_stdin_used@@Base+0x1667>
  407020:	mov    esi,0x11
  407025:	jmp    40706d <main@@Base+0x30d>
  407027:	mov    rax,QWORD PTR [rip+0x4afca]        # 451ff8 <stderr@GLIBC_2.2.5>
  40702e:	mov    rcx,QWORD PTR [rax]
  407031:	lea    rdi,[rip+0x286e8]        # 42f720 <_IO_stdin_used@@Base+0x1720>
  407038:	mov    esi,0x2c
  40703d:	jmp    40706d <main@@Base+0x30d>
  40703f:	mov    rax,QWORD PTR [rip+0x4afb2]        # 451ff8 <stderr@GLIBC_2.2.5>
  407046:	mov    rcx,QWORD PTR [rax]
  407049:	lea    rdi,[rip+0x286fd]        # 42f74d <_IO_stdin_used@@Base+0x174d>
  407050:	mov    esi,0x26
  407055:	jmp    40706d <main@@Base+0x30d>
  407057:	mov    rax,QWORD PTR [rip+0x4af9a]        # 451ff8 <stderr@GLIBC_2.2.5>
  40705e:	mov    rcx,QWORD PTR [rax]
  407061:	lea    rdi,[rip+0x28643]        # 42f6ab <_IO_stdin_used@@Base+0x16ab>
  407068:	mov    esi,0x39
  40706d:	mov    edx,0x1
  407072:	call   406230 <fwrite@plt>
  407077:	mov    rax,QWORD PTR [rip+0x4af7a]        # 451ff8 <stderr@GLIBC_2.2.5>
  40707e:	mov    rcx,QWORD PTR [rax]
  407081:	lea    rdi,[rip+0x286ec]        # 42f774 <_IO_stdin_used@@Base+0x1774>
  407088:	mov    esi,0xe
  40708d:	mov    edx,0x1
  407092:	call   406230 <fwrite@plt>
  407097:	mov    ebx,0xffffffff
  40709c:	mov    rdi,QWORD PTR [rsp+0xf8]
  4070a4:	call   406040 <free@plt>
  4070a9:	mov    rdi,QWORD PTR [rsp+0x100]
  4070b1:	call   406040 <free@plt>
  4070b6:	mov    eax,ebx
  4070b8:	add    rsp,0x118
  4070bf:	pop    rbx
  4070c0:	pop    r14
  4070c2:	pop    r15
  4070c4:	pop    rbp
  4070c5:	ret    
  4070c6:	mov    rax,QWORD PTR [rip+0x4af2b]        # 451ff8 <stderr@GLIBC_2.2.5>
  4070cd:	mov    rdi,QWORD PTR [rax]
  4070d0:	call   406340 <usage@@Base>
  4070d5:	mov    edi,0xffffffff
  4070da:	call   406220 <exit@plt>
  4070df:	mov    rax,QWORD PTR [rip+0x4af12]        # 451ff8 <stderr@GLIBC_2.2.5>
  4070e6:	mov    rcx,QWORD PTR [rax]
  4070e9:	lea    rdi,[rip+0x2855c]        # 42f64c <_IO_stdin_used@@Base+0x164c>
  4070f0:	mov    esi,0x1a
  4070f5:	mov    edx,0x1
  4070fa:	call   406230 <fwrite@plt>
  4070ff:	mov    edi,0xffffffff
  407104:	call   406220 <exit@plt>
  407109:	mov    rax,QWORD PTR [rip+0x4aee8]        # 451ff8 <stderr@GLIBC_2.2.5>
  407110:	mov    rcx,QWORD PTR [rax]
  407113:	lea    rdi,[rip+0x28532]        # 42f64c <_IO_stdin_used@@Base+0x164c>
  40711a:	mov    esi,0x1a
  40711f:	mov    edx,0x1
  407124:	call   406230 <fwrite@plt>
  407129:	mov    rdi,QWORD PTR [rsp+0xf8]
  407131:	call   406040 <free@plt>
  407136:	mov    edi,0xffffffff
  40713b:	call   406220 <exit@plt>

0000000000407140 <flatcc_init_options@@Base>:
  407140:	vxorps xmm0,xmm0,xmm0
  407144:	vmovups YMMWORD PTR [rdi+0x30],ymm0
  407149:	vmovups YMMWORD PTR [rdi+0x10],ymm0
  40714e:	vmovups YMMWORD PTR [rdi+0x50],ymm0
  407153:	vmovups YMMWORD PTR [rdi+0x70],ymm0
  407158:	vmovups YMMWORD PTR [rdi+0x90],ymm0
  407160:	vmovups YMMWORD PTR [rdi+0xb0],ymm0
  407168:	vmovups YMMWORD PTR [rdi+0xf0],ymm0
  407170:	vmovups YMMWORD PTR [rdi+0xd0],ymm0
  407178:	mov    QWORD PTR [rdi],0x10000
  40717f:	movabs rax,0x6400000064
  407189:	mov    QWORD PTR [rdi+0x8],rax
  40718d:	vbroadcastss ymm0,DWORD PTR [rip+0x26e6e]        # 42e004 <_IO_stdin_used@@Base+0x4>
  407196:	vmovups YMMWORD PTR [rdi+0x14],ymm0
  40719b:	vmovaps xmm0,XMMWORD PTR [rip+0x285ed]        # 42f790 <_IO_stdin_used@@Base+0x1790>
  4071a3:	vmovups XMMWORD PTR [rdi+0x34],xmm0
  4071a8:	mov    DWORD PTR [rdi+0x44],0x4
  4071af:	vmovaps xmm0,XMMWORD PTR [rip+0x285e9]        # 42f7a0 <_IO_stdin_used@@Base+0x17a0>
  4071b7:	vmovups XMMWORD PTR [rdi+0x48],xmm0
  4071bc:	mov    DWORD PTR [rdi+0x58],0x1
  4071c3:	mov    QWORD PTR [rdi+0x60],0xfffe
  4071cb:	lea    rax,[rip+0x285f3]        # 42f7c5 <_IO_stdin_used@@Base+0x17c5>
  4071d2:	vmovq  xmm0,rax
  4071d7:	lea    rax,[rip+0x285e2]        # 42f7c0 <_IO_stdin_used@@Base+0x17c0>
  4071de:	vmovq  xmm1,rax
  4071e3:	vpunpcklqdq xmm0,xmm1,xmm0
  4071e7:	vmovdqu XMMWORD PTR [rdi+0x68],xmm0
  4071ec:	lea    rax,[rip+0x285d8]        # 42f7cb <_IO_stdin_used@@Base+0x17cb>
  4071f3:	mov    QWORD PTR [rdi+0x78],rax
  4071f7:	movabs rax,0x100000000
  407201:	mov    QWORD PTR [rdi+0xa4],rax
  407208:	mov    DWORD PTR [rdi+0xac],0x1
  407212:	mov    DWORD PTR [rdi+0xc4],0x0
  40721c:	vpxor  xmm0,xmm0,xmm0
  407220:	vmovdqu XMMWORD PTR [rdi+0xb0],xmm0
  407228:	vmovaps xmm0,XMMWORD PTR [rip+0x28580]        # 42f7b0 <_IO_stdin_used@@Base+0x17b0>
  407230:	vmovups XMMWORD PTR [rdi+0xd0],xmm0
  407238:	vzeroupper 
  40723b:	ret    
  40723c:	nop    DWORD PTR [rax+0x0]

0000000000407240 <flatcc_create_context@@Base>:
  407240:	push   r15
  407242:	push   r14
  407244:	push   r13
  407246:	push   r12
  407248:	push   rbx
  407249:	mov    r14,rcx
  40724c:	mov    r15,rdx
  40724f:	mov    r12,rsi
  407252:	mov    r13,rdi
  407255:	mov    edi,0x358
  40725a:	call   4061b0 <malloc@plt>
  40725f:	test   rax,rax
  407262:	je     40728a <flatcc_create_context@@Base+0x4a>
  407264:	mov    rbx,rax
  407267:	mov    rdi,rax
  40726a:	mov    rsi,r13
  40726d:	mov    rdx,r12
  407270:	mov    rcx,r15
  407273:	mov    r8,r14
  407276:	xor    r9d,r9d
  407279:	call   41c6b0 <__flatcc_fb_init_parser@@Base>
  40727e:	test   eax,eax
  407280:	je     40728c <flatcc_create_context@@Base+0x4c>
  407282:	mov    rdi,rbx
  407285:	call   406040 <free@plt>
  40728a:	xor    ebx,ebx
  40728c:	mov    rax,rbx
  40728f:	pop    rbx
  407290:	pop    r12
  407292:	pop    r13
  407294:	pop    r14
  407296:	pop    r15
  407298:	ret    
  407299:	nop    DWORD PTR [rax+0x0]

00000000004072a0 <flatcc_parse_buffer@@Base>:
  4072a0:	push   r15
  4072a2:	push   r14
  4072a4:	push   rbx
  4072a5:	mov    r14,rdx
  4072a8:	mov    r15,rsi
  4072ab:	mov    rbx,rdi
  4072ae:	mov    DWORD PTR [rdi+0xf8],0x1
  4072b8:	mov    rax,QWORD PTR [rdi+0xe8]
  4072bf:	cmp    rax,rdx
  4072c2:	jae    4072e1 <flatcc_parse_buffer@@Base+0x41>
  4072c4:	test   rax,rax
  4072c7:	je     4072e1 <flatcc_parse_buffer@@Base+0x41>
  4072c9:	lea    rsi,[rip+0x28500]        # 42f7d0 <_IO_stdin_used@@Base+0x17d0>
  4072d0:	mov    rdi,rbx
  4072d3:	xor    eax,eax
  4072d5:	call   41c280 <__flatcc_fb_print_error@@Base>
  4072da:	mov    eax,0xffffffff
  4072df:	jmp    407320 <flatcc_parse_buffer@@Base+0x80>
  4072e1:	lea    rsi,[rbx+0x1f8]
  4072e8:	lea    rdi,[rbx+0x320]
  4072ef:	mov    edx,0x1
  4072f4:	call   419ab0 <ptr_set_insert_item@@Base>
  4072f9:	mov    rdi,rbx
  4072fc:	mov    rsi,r15
  4072ff:	mov    rdx,r14
  407302:	xor    ecx,ecx
  407304:	call   41c9a0 <__flatcc_fb_parse@@Base>
  407309:	mov    ecx,eax
  40730b:	mov    eax,0xffffffff
  407310:	test   ecx,ecx
  407312:	jne    407320 <flatcc_parse_buffer@@Base+0x80>
  407314:	mov    rdi,rbx
  407317:	call   424350 <__flatcc_fb_build_schema@@Base>
  40731c:	neg    eax
  40731e:	sbb    eax,eax
  407320:	pop    rbx
  407321:	pop    r14
  407323:	pop    r15
  407325:	ret    
  407326:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407330 <flatcc_parse_file@@Base>:
  407330:	push   rbp
  407331:	push   r15
  407333:	push   r14
  407335:	push   r13
  407337:	push   r12
  407339:	push   rbx
  40733a:	sub    rsp,0x28
  40733e:	mov    r13,rsi
  407341:	mov    rbx,rdi
  407344:	mov    rdi,rsi
  407347:	call   4060d0 <strlen@plt>
  40734c:	mov    r12,rax
  40734f:	lea    rbp,[rbx+0x1f8]
  407356:	mov    rdi,QWORD PTR [rbx+0x260]
  40735d:	add    rdi,0x40
  407361:	mov    rsi,rbp
  407364:	mov    edx,0x1
  407369:	call   41b6f0 <fb_schema_table_insert_item@@Base>
  40736e:	xor    r15d,r15d
  407371:	test   rax,rax
  407374:	je     407388 <flatcc_parse_file@@Base+0x58>
  407376:	mov    eax,r15d
  407379:	add    rsp,0x28
  40737d:	pop    rbx
  40737e:	pop    r12
  407380:	pop    r13
  407382:	pop    r14
  407384:	pop    r15
  407386:	pop    rbp
  407387:	ret    
  407388:	mov    rax,QWORD PTR [rbx+0x350]
  40738f:	mov    QWORD PTR [rsp+0x10],rax
  407394:	test   rax,rax
  407397:	mov    QWORD PTR [rsp+0x18],rbp
  40739c:	je     4074c5 <flatcc_parse_file@@Base+0x195>
  4073a2:	cmp    DWORD PTR [rbx+0x1e8],0x0
  4073a9:	jle    40744d <flatcc_parse_file@@Base+0x11d>
  4073af:	xor    r15d,r15d
  4073b2:	jmp    4073cf <flatcc_parse_file@@Base+0x9f>
  4073b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073be:	xchg   ax,ax
  4073c0:	inc    r15
  4073c3:	movsxd rax,DWORD PTR [rbx+0x1e8]
  4073ca:	cmp    r15,rax
  4073cd:	jge    40744d <flatcc_parse_file@@Base+0x11d>
  4073cf:	mov    rax,QWORD PTR [rbx+0x1d8]
  4073d6:	mov    rbp,QWORD PTR [rax+r15*8]
  4073da:	mov    rdi,rbp
  4073dd:	call   4060d0 <strlen@plt>
  4073e2:	mov    rdi,rbp
  4073e5:	mov    rsi,rax
  4073e8:	mov    rdx,r13
  4073eb:	mov    rcx,r12
  4073ee:	lea    r8,[rip+0x2894e]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4073f5:	mov    r9d,0x1
  4073fb:	call   41bb20 <__flatcc_fb_create_join_path_n@@Base>
  407400:	test   rax,rax
  407403:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  407409:	mov    rbp,rax
  40740c:	mov    rsi,QWORD PTR [rbx+0xe8]
  407413:	mov    rdi,rax
  407416:	lea    rdx,[rsp+0x8]
  40741b:	call   41c180 <__flatcc_fb_read_file@@Base>
  407420:	test   rax,rax
  407423:	jne    4074fb <flatcc_parse_file@@Base+0x1cb>
  407429:	mov    rdi,rbp
  40742c:	call   406040 <free@plt>
  407431:	mov    rax,QWORD PTR [rbx+0xe8]
  407438:	cmp    QWORD PTR [rsp+0x8],rax
  40743d:	jbe    4073c0 <flatcc_parse_file@@Base+0x90>
  40743f:	test   rax,rax
  407442:	je     4073c0 <flatcc_parse_file@@Base+0x90>
  407448:	jmp    40786f <flatcc_parse_file@@Base+0x53f>
  40744d:	cmp    QWORD PTR [rsp+0x10],0x0
  407453:	je     40788b <flatcc_parse_file@@Base+0x55b>
  407459:	mov    rbp,QWORD PTR [rbx+0x350]
  407460:	mov    rdi,rbp
  407463:	call   4060d0 <strlen@plt>
  407468:	mov    rdi,rbp
  40746b:	mov    rsi,rax
  40746e:	call   41c090 <__flatcc_fb_find_basename@@Base>
  407473:	lea    r8,[rip+0x288c9]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40747a:	mov    rdi,rbp
  40747d:	mov    rsi,rax
  407480:	mov    rdx,r13
  407483:	mov    rcx,r12
  407486:	mov    r9d,0x1
  40748c:	call   41bb20 <__flatcc_fb_create_join_path_n@@Base>
  407491:	test   rax,rax
  407494:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  40749a:	mov    rbp,rax
  40749d:	mov    rsi,QWORD PTR [rbx+0xe8]
  4074a4:	lea    rdx,[rsp+0x8]
  4074a9:	mov    rdi,rax
  4074ac:	call   41c180 <__flatcc_fb_read_file@@Base>
  4074b1:	test   rax,rax
  4074b4:	mov    r15d,0x0
  4074ba:	je     407854 <flatcc_parse_file@@Base+0x524>
  4074c0:	mov    r14,rax
  4074c3:	jmp    407501 <flatcc_parse_file@@Base+0x1d1>
  4074c5:	mov    rsi,QWORD PTR [rbx+0xe8]
  4074cc:	lea    rdx,[rsp+0x8]
  4074d1:	mov    rdi,r13
  4074d4:	call   41c180 <__flatcc_fb_read_file@@Base>
  4074d9:	test   rax,rax
  4074dc:	je     407691 <flatcc_parse_file@@Base+0x361>
  4074e2:	mov    r14,rax
  4074e5:	mov    rdi,r13
  4074e8:	call   41ba80 <__flatcc_fb_copy_path@@Base>
  4074ed:	test   rax,rax
  4074f0:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  4074f6:	mov    rbp,rax
  4074f9:	jmp    407501 <flatcc_parse_file@@Base+0x1d1>
  4074fb:	mov    r14,rax
  4074fe:	xor    r15d,r15d
  407501:	mov    rdx,QWORD PTR [rsp+0x8]
  407506:	mov    rax,QWORD PTR [rbx+0x260]
  40750d:	add    QWORD PTR [rax+0x68],rdx
  407511:	mov    QWORD PTR [rbx+0x348],rbp
  407518:	mov    rdi,rbx
  40751b:	mov    rsi,r14
  40751e:	mov    ecx,0x1
  407523:	call   41c9a0 <__flatcc_fb_parse@@Base>
  407528:	test   eax,eax
  40752a:	jne    407376 <flatcc_parse_file@@Base+0x46>
  407530:	mov    rbp,QWORD PTR [rsp+0x18]
  407535:	mov    r15,QWORD PTR [rbp+0x0]
  407539:	test   r15,r15
  40753c:	je     4076bf <flatcc_parse_file@@Base+0x38f>
  407542:	lea    rax,[rbx+0xe8]
  407549:	mov    QWORD PTR [rsp+0x20],rax
  40754e:	jmp    4075b7 <flatcc_parse_file@@Base+0x287>
  407550:	mov    rax,QWORD PTR [rbx]
  407553:	mov    QWORD PTR [r13+0x0],rax
  407557:	mov    QWORD PTR [rbx],r13
  40755a:	mov    rax,QWORD PTR [rbx+0x348]
  407561:	mov    QWORD PTR [r13+0x350],rax
  407568:	inc    DWORD PTR [r12+0x64]
  40756d:	inc    DWORD PTR [r12+0x60]
  407572:	mov    rdi,r13
  407575:	mov    rsi,r14
  407578:	call   407330 <flatcc_parse_file@@Base>
  40757d:	test   eax,eax
  40757f:	jne    4078ce <flatcc_parse_file@@Base+0x59e>
  407585:	add    r13,0x320
  40758c:	mov    rdi,r13
  40758f:	lea    rsi,[rip+0x58a]        # 407b20 <flatcc_destroy_context@@Base+0x40>
  407596:	mov    rdx,rbp
  407599:	call   419cc0 <ptr_set_visit@@Base>
  40759e:	mov    rdi,r14
  4075a1:	call   406040 <free@plt>
  4075a6:	mov    r15,QWORD PTR [r15]
  4075a9:	test   r15,r15
  4075ac:	mov    rbp,QWORD PTR [rsp+0x18]
  4075b1:	je     4076bf <flatcc_parse_file@@Base+0x38f>
  4075b7:	mov    rdi,QWORD PTR [r15+0x8]
  4075bb:	movsxd rsi,DWORD PTR [r15+0x10]
  4075bf:	call   41ba30 <__flatcc_fb_copy_path_n@@Base>
  4075c4:	test   rax,rax
  4075c7:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  4075cd:	mov    r14,rax
  4075d0:	mov    r12,QWORD PTR [rbx+0x260]
  4075d7:	mov    eax,DWORD PTR [rbx+0xf0]
  4075dd:	cmp    DWORD PTR [r12+0x64],eax
  4075e2:	jl     4075ec <flatcc_parse_file@@Base+0x2bc>
  4075e4:	test   eax,eax
  4075e6:	jg     4078aa <flatcc_parse_file@@Base+0x57a>
  4075ec:	mov    eax,DWORD PTR [rbx+0xf4]
  4075f2:	cmp    DWORD PTR [r12+0x60],eax
  4075f7:	jl     407601 <flatcc_parse_file@@Base+0x2d1>
  4075f9:	test   eax,eax
  4075fb:	jg     4078b3 <flatcc_parse_file@@Base+0x583>
  407601:	mov    edi,0x358
  407606:	call   4061b0 <malloc@plt>
  40760b:	test   rax,rax
  40760e:	je     4078ce <flatcc_parse_file@@Base+0x59e>
  407614:	mov    r13,rax
  407617:	mov    rcx,QWORD PTR [rbx+0x10]
  40761b:	mov    r8,QWORD PTR [rbx+0x18]
  40761f:	mov    rdi,rax
  407622:	mov    rsi,QWORD PTR [rsp+0x20]
  407627:	mov    rdx,r14
  40762a:	mov    r9,r12
  40762d:	call   41c6b0 <__flatcc_fb_init_parser@@Base>
  407632:	test   eax,eax
  407634:	jne    4078c6 <flatcc_parse_file@@Base+0x596>
  40763a:	lea    rdi,[r12+0x40]
  40763f:	lea    rsi,[r13+0x1f8]
  407646:	call   41b7a0 <fb_schema_table_find_item@@Base>
  40764b:	test   rax,rax
  40764e:	je     407550 <flatcc_parse_file@@Base+0x220>
  407654:	add    rax,0x128
  40765a:	mov    rdi,rax
  40765d:	lea    rsi,[rip+0x4bc]        # 407b20 <flatcc_destroy_context@@Base+0x40>
  407664:	mov    rdx,rbp
  407667:	call   419cc0 <ptr_set_visit@@Base>
  40766c:	nop    DWORD PTR [rax+0x0]
  407670:	mov    rbp,QWORD PTR [r13+0x0]
  407674:	mov    rdi,r13
  407677:	call   422a30 <__flatcc_fb_clear_parser@@Base>
  40767c:	mov    rdi,r13
  40767f:	call   406040 <free@plt>
  407684:	mov    r13,rbp
  407687:	test   rbp,rbp
  40768a:	jne    407670 <flatcc_parse_file@@Base+0x340>
  40768c:	jmp    40759e <flatcc_parse_file@@Base+0x26e>
  407691:	mov    rax,QWORD PTR [rbx+0xe8]
  407698:	mov    rcx,QWORD PTR [rbx+0x260]
  40769f:	mov    rcx,QWORD PTR [rcx+0x68]
  4076a3:	add    rcx,QWORD PTR [rsp+0x8]
  4076a8:	cmp    rcx,rax
  4076ab:	jbe    4073a2 <flatcc_parse_file@@Base+0x72>
  4076b1:	test   rax,rax
  4076b4:	jne    40786f <flatcc_parse_file@@Base+0x53f>
  4076ba:	jmp    4073a2 <flatcc_parse_file@@Base+0x72>
  4076bf:	lea    rdi,[rbx+0x320]
  4076c6:	mov    rsi,rbp
  4076c9:	mov    edx,0x1
  4076ce:	call   419ab0 <ptr_set_insert_item@@Base>
  4076d3:	mov    rdi,rbx
  4076d6:	call   424350 <__flatcc_fb_build_schema@@Base>
  4076db:	test   eax,eax
  4076dd:	jne    4078d6 <flatcc_parse_file@@Base+0x5a6>
  4076e3:	cmp    QWORD PTR [rsp+0x10],0x0
  4076e9:	mov    r15d,0x0
  4076ef:	jne    407376 <flatcc_parse_file@@Base+0x46>
  4076f5:	cmp    DWORD PTR [rbx+0x16c],0x0
  4076fc:	je     407376 <flatcc_parse_file@@Base+0x46>
  407702:	cmp    QWORD PTR [rbx+0x350],0x0
  40770a:	jne    40793b <flatcc_parse_file@@Base+0x60b>
  407710:	mov    rax,QWORD PTR [rbx+0x1f0]
  407717:	test   rax,rax
  40771a:	lea    rbp,[rip+0x28622]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  407721:	cmove  rax,rbp
  407725:	mov    rcx,QWORD PTR [rbx+0x308]
  40772c:	mov    rsi,QWORD PTR [rbx+0x170]
  407733:	mov    r14,QWORD PTR [rbx+0x178]
  40773a:	test   rsi,rsi
  40773d:	cmove  rsi,rcx
  407741:	mov    rdi,rbp
  407744:	cmove  rdi,rax
  407748:	lea    rdx,[rip+0x281d0]        # 42f91f <_IO_stdin_used@@Base+0x191f>
  40774f:	cmovne rdx,rbp
  407753:	mov    r15,rbp
  407756:	test   r14,r14
  407759:	jne    40777a <flatcc_parse_file@@Base+0x44a>
  40775b:	cmp    DWORD PTR [rbx+0x1bc],0x0
  407762:	lea    r8,[rip+0x3f423]        # 446b8c <_IO_stdin_used@@Base+0x18b8c>
  407769:	lea    rbp,[rip+0x28055]        # 42f7c5 <_IO_stdin_used@@Base+0x17c5>
  407770:	cmove  rbp,r8
  407774:	mov    r14,rcx
  407777:	mov    r15,rax
  40777a:	mov    ecx,0x1
  40777f:	call   41bc40 <__flatcc_fb_create_join_path@@Base>
  407784:	test   rax,rax
  407787:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  40778d:	mov    r12,rax
  407790:	mov    rdi,r15
  407793:	mov    rsi,r14
  407796:	mov    rdx,rbp
  407799:	mov    ecx,0x1
  40779e:	call   41bc40 <__flatcc_fb_create_join_path@@Base>
  4077a3:	test   rax,rax
  4077a6:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  4077ac:	mov    rbp,rax
  4077af:	mov    rdi,rax
  4077b2:	call   41c070 <__flatcc_fb_create_make_path@@Base>
  4077b7:	test   rax,rax
  4077ba:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  4077c0:	mov    r15,rax
  4077c3:	mov    rdi,rbp
  4077c6:	call   406040 <free@plt>
  4077cb:	lea    rsi,[rip+0x28154]        # 42f926 <_IO_stdin_used@@Base+0x1926>
  4077d2:	mov    rdi,r12
  4077d5:	call   4061f0 <fopen@plt>
  4077da:	mov    r13,rax
  4077dd:	test   rax,rax
  4077e0:	je     4078de <flatcc_parse_file@@Base+0x5ae>
  4077e6:	lea    rsi,[rip+0x2816b]        # 42f958 <_IO_stdin_used@@Base+0x1958>
  4077ed:	mov    rdi,r13
  4077f0:	mov    rdx,r15
  4077f3:	xor    eax,eax
  4077f5:	call   406180 <fprintf@plt>
  4077fa:	mov    rbp,QWORD PTR [rbx]
  4077fd:	test   rbp,rbp
  407800:	je     407842 <flatcc_parse_file@@Base+0x512>
  407802:	lea    r14,[rip+0x28153]        # 42f95c <_IO_stdin_used@@Base+0x195c>
  407809:	mov    rdi,QWORD PTR [rbp+0x348]
  407810:	call   41c070 <__flatcc_fb_create_make_path@@Base>
  407815:	test   rax,rax
  407818:	je     407911 <flatcc_parse_file@@Base+0x5e1>
  40781e:	mov    rbx,rax
  407821:	mov    rdi,r13
  407824:	mov    rsi,r14
  407827:	mov    rdx,rax
  40782a:	xor    eax,eax
  40782c:	call   406180 <fprintf@plt>
  407831:	mov    rbp,QWORD PTR [rbp+0x0]
  407835:	mov    rdi,rbx
  407838:	call   406040 <free@plt>
  40783d:	test   rbp,rbp
  407840:	jne    407809 <flatcc_parse_file@@Base+0x4d9>
  407842:	mov    edi,0xa
  407847:	mov    rsi,r13
  40784a:	call   406170 <fputc_unlocked@plt>
  40784f:	jmp    4078f2 <flatcc_parse_file@@Base+0x5c2>
  407854:	mov    rdi,rbp
  407857:	call   406040 <free@plt>
  40785c:	mov    rax,QWORD PTR [rbx+0xe8]
  407863:	cmp    QWORD PTR [rsp+0x8],rax
  407868:	jbe    40788b <flatcc_parse_file@@Base+0x55b>
  40786a:	test   rax,rax
  40786d:	je     40788b <flatcc_parse_file@@Base+0x55b>
  40786f:	lea    rsi,[rip+0x27f5a]        # 42f7d0 <_IO_stdin_used@@Base+0x17d0>
  407876:	mov    rdi,rbx
  407879:	xor    eax,eax
  40787b:	call   41c280 <__flatcc_fb_print_error@@Base>
  407880:	mov    r15d,0xffffffff
  407886:	jmp    407376 <flatcc_parse_file@@Base+0x46>
  40788b:	lea    rsi,[rip+0x27f62]        # 42f7f4 <_IO_stdin_used@@Base+0x17f4>
  407892:	mov    rdi,rbx
  407895:	mov    rdx,r13
  407898:	xor    eax,eax
  40789a:	call   41c280 <__flatcc_fb_print_error@@Base>
  40789f:	mov    r15d,0xffffffff
  4078a5:	jmp    407376 <flatcc_parse_file@@Base+0x46>
  4078aa:	lea    rsi,[rip+0x27f8e]        # 42f83f <_IO_stdin_used@@Base+0x183f>
  4078b1:	jmp    4078ba <flatcc_parse_file@@Base+0x58a>
  4078b3:	lea    rsi,[rip+0x27fa5]        # 42f85f <_IO_stdin_used@@Base+0x185f>
  4078ba:	mov    rdi,rbx
  4078bd:	xor    eax,eax
  4078bf:	call   41c280 <__flatcc_fb_print_error@@Base>
  4078c4:	jmp    4078ce <flatcc_parse_file@@Base+0x59e>
  4078c6:	mov    rdi,r13
  4078c9:	call   406040 <free@plt>
  4078ce:	mov    rdi,r14
  4078d1:	call   406040 <free@plt>
  4078d6:	xor    r15d,r15d
  4078d9:	jmp    407376 <flatcc_parse_file@@Base+0x46>
  4078de:	lea    rsi,[rip+0x28044]        # 42f929 <_IO_stdin_used@@Base+0x1929>
  4078e5:	mov    rdi,rbx
  4078e8:	mov    rdx,r12
  4078eb:	xor    eax,eax
  4078ed:	call   41c280 <__flatcc_fb_print_error@@Base>
  4078f2:	mov    rdi,r12
  4078f5:	call   406040 <free@plt>
  4078fa:	mov    rdi,r15
  4078fd:	call   406040 <free@plt>
  407902:	test   r13,r13
  407905:	je     4078d6 <flatcc_parse_file@@Base+0x5a6>
  407907:	mov    rdi,r13
  40790a:	call   4060c0 <fclose@plt>
  40790f:	jmp    4078d6 <flatcc_parse_file@@Base+0x5a6>
  407911:	mov    rax,QWORD PTR [rip+0x4a6e0]        # 451ff8 <stderr@GLIBC_2.2.5>
  407918:	mov    rcx,QWORD PTR [rax]
  40791b:	lea    rdi,[rip+0x27efa]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  407922:	mov    esi,0x22
  407927:	mov    edx,0x1
  40792c:	call   406230 <fwrite@plt>
  407931:	mov    edi,0x1
  407936:	call   406220 <exit@plt>
  40793b:	lea    rdi,[rip+0x27f3b]        # 42f87d <_IO_stdin_used@@Base+0x187d>
  407942:	lea    rsi,[rip+0x27f49]        # 42f892 <_IO_stdin_used@@Base+0x1892>
  407949:	lea    rcx,[rip+0x27fa2]        # 42f8f2 <_IO_stdin_used@@Base+0x18f2>
  407950:	mov    edx,0xdc
  407955:	call   406100 <__assert_fail@plt>
  40795a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407960 <flatcc_generate_binary_schema_to_buffer@@Base>:
  407960:	push   rax
  407961:	mov    rax,rsi
  407964:	mov    QWORD PTR [rsp],rdx
  407968:	lea    rdx,[rdi+0xe8]
  40796f:	lea    rsi,[rdi+0x1f8]
  407976:	mov    rcx,rsp
  407979:	mov    rdi,rdx
  40797c:	mov    rdx,rax
  40797f:	call   417520 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  407984:	xor    ecx,ecx
  407986:	cmp    rax,0x1
  40798a:	sbb    ecx,ecx
  40798c:	or     ecx,DWORD PTR [rsp]
  40798f:	mov    eax,ecx
  407991:	pop    rcx
  407992:	ret    
  407993:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40799d:	nop    DWORD PTR [rax]

00000000004079a0 <flatcc_generate_binary_schema@@Base>:
  4079a0:	mov    rdx,rsi
  4079a3:	lea    rax,[rdi+0xe8]
  4079aa:	lea    rsi,[rdi+0x1f8]
  4079b1:	mov    rdi,rax
  4079b4:	jmp    418720 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  4079b9:	nop    DWORD PTR [rax+0x0]

00000000004079c0 <flatcc_generate_files@@Base>:
  4079c0:	push   rbp
  4079c1:	push   r15
  4079c3:	push   r14
  4079c5:	push   rbx
  4079c6:	sub    rsp,0x108
  4079cd:	mov    r15d,0xffffffff
  4079d3:	test   rdi,rdi
  4079d6:	je     4079e4 <flatcc_generate_files@@Base+0x24>
  4079d8:	mov    rbx,rdi
  4079db:	cmp    DWORD PTR [rdi+0xd0],0x0
  4079e2:	je     4079f5 <flatcc_generate_files@@Base+0x35>
  4079e4:	mov    eax,r15d
  4079e7:	add    rsp,0x108
  4079ee:	pop    rbx
  4079ef:	pop    r14
  4079f1:	pop    r15
  4079f3:	pop    rbp
  4079f4:	ret    
  4079f5:	xor    eax,eax
  4079f7:	mov    rcx,rbx
  4079fa:	nop    WORD PTR [rax+rax*1+0x0]
  407a00:	mov    rbp,rcx
  407a03:	mov    QWORD PTR [rcx+0x8],rax
  407a07:	mov    rcx,QWORD PTR [rcx]
  407a0a:	mov    rax,rbp
  407a0d:	test   rcx,rcx
  407a10:	jne    407a00 <flatcc_generate_files@@Base+0x40>
  407a12:	lea    r14,[rbx+0xe8]
  407a19:	cmp    DWORD PTR [rbx+0x1bc],0x0
  407a20:	je     407a35 <flatcc_generate_files@@Base+0x75>
  407a22:	lea    rsi,[rbx+0x1f8]
  407a29:	mov    rdi,r14
  407a2c:	call   418790 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  407a31:	test   eax,eax
  407a33:	jne    4079e4 <flatcc_generate_files@@Base+0x24>
  407a35:	lea    rdi,[rsp+0x8]
  407a3a:	mov    rsi,r14
  407a3d:	call   407ca0 <__flatcc_fb_init_output_c@@Base>
  407a42:	test   eax,eax
  407a44:	jne    4079e4 <flatcc_generate_files@@Base+0x24>
  407a46:	cmp    DWORD PTR [rbx+0x188],0x0
  407a4d:	je     407a9a <flatcc_generate_files@@Base+0xda>
  407a4f:	xor    r15d,r15d
  407a52:	cmp    DWORD PTR [rbx+0xe4],0x0
  407a59:	je     407acc <flatcc_generate_files@@Base+0x10c>
  407a5b:	cmp    DWORD PTR [rbx+0x1b4],0x0
  407a62:	je     407aad <flatcc_generate_files@@Base+0xed>
  407a64:	test   rbp,rbp
  407a67:	je     407acc <flatcc_generate_files@@Base+0x10c>
  407a69:	lea    rbx,[rsp+0x8]
  407a6e:	cmp    DWORD PTR [rbp+0xd0],0x0
  407a75:	jne    407ac6 <flatcc_generate_files@@Base+0x106>
  407a77:	lea    rsi,[rbp+0x1f8]
  407a7e:	mov    rdi,rbx
  407a81:	call   4083c0 <__flatcc_fb_codegen_c@@Base>
  407a86:	test   eax,eax
  407a88:	setne  cl
  407a8b:	mov    rbp,QWORD PTR [rbp+0x8]
  407a8f:	test   rbp,rbp
  407a92:	je     407ac8 <flatcc_generate_files@@Base+0x108>
  407a94:	test   eax,eax
  407a96:	je     407a6e <flatcc_generate_files@@Base+0xae>
  407a98:	jmp    407ac8 <flatcc_generate_files@@Base+0x108>
  407a9a:	lea    rdi,[rsp+0x8]
  407a9f:	call   4082c0 <__flatcc_fb_codegen_common_c@@Base>
  407aa4:	mov    r15d,eax
  407aa7:	test   eax,eax
  407aa9:	jne    407acc <flatcc_generate_files@@Base+0x10c>
  407aab:	jmp    407a4f <flatcc_generate_files@@Base+0x8f>
  407aad:	add    rbx,0x1f8
  407ab4:	lea    rdi,[rsp+0x8]
  407ab9:	mov    rsi,rbx
  407abc:	call   4083c0 <__flatcc_fb_codegen_c@@Base>
  407ac1:	mov    r15d,eax
  407ac4:	jmp    407acc <flatcc_generate_files@@Base+0x10c>
  407ac6:	mov    cl,0x1
  407ac8:	movzx  r15d,cl
  407acc:	lea    rdi,[rsp+0x8]
  407ad1:	call   407c70 <__flatcc_fb_end_output_c@@Base>
  407ad6:	jmp    4079e4 <flatcc_generate_files@@Base+0x24>
  407adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407ae0 <flatcc_destroy_context@@Base>:
  407ae0:	push   r14
  407ae2:	push   rbx
  407ae3:	push   rax
  407ae4:	test   rdi,rdi
  407ae7:	je     407b0b <flatcc_destroy_context@@Base+0x2b>
  407ae9:	mov    rbx,rdi
  407aec:	nop    DWORD PTR [rax+0x0]
  407af0:	mov    r14,QWORD PTR [rbx]
  407af3:	mov    rdi,rbx
  407af6:	call   422a30 <__flatcc_fb_clear_parser@@Base>
  407afb:	mov    rdi,rbx
  407afe:	call   406040 <free@plt>
  407b03:	mov    rbx,r14
  407b06:	test   r14,r14
  407b09:	jne    407af0 <flatcc_destroy_context@@Base+0x10>
  407b0b:	add    rsp,0x8
  407b0f:	pop    rbx
  407b10:	pop    r14
  407b12:	ret    
  407b13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b1d:	nop    DWORD PTR [rax]
  407b20:	add    rdi,0x128
  407b27:	mov    edx,0x1
  407b2c:	jmp    419ab0 <ptr_set_insert_item@@Base>
  407b31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407b40 <__flatcc_fb_open_output_file@@Base>:
  407b40:	push   rbp
  407b41:	push   r15
  407b43:	push   r14
  407b45:	push   r13
  407b47:	push   r12
  407b49:	push   rbx
  407b4a:	push   rax
  407b4b:	mov    rax,QWORD PTR [rdi+0xe0]
  407b52:	mov    rax,QWORD PTR [rax+0x108]
  407b59:	test   rax,rax
  407b5c:	lea    rbx,[rip+0x281e0]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  407b63:	cmovne rbx,rax
  407b67:	xor    ebp,ebp
  407b69:	cmp    QWORD PTR [rdi+0xd0],0x0
  407b71:	jne    407bce <__flatcc_fb_open_output_file@@Base+0x8e>
  407b73:	mov    r14,rcx
  407b76:	mov    r15,rdx
  407b79:	mov    r12,rsi
  407b7c:	mov    r13,rdi
  407b7f:	mov    rdi,rbx
  407b82:	call   4060d0 <strlen@plt>
  407b87:	mov    rdi,rbx
  407b8a:	mov    rsi,rax
  407b8d:	mov    rdx,r12
  407b90:	mov    rcx,r15
  407b93:	mov    r8,r14
  407b96:	mov    r9d,0x1
  407b9c:	call   41bb20 <__flatcc_fb_create_join_path_n@@Base>
  407ba1:	test   rax,rax
  407ba4:	je     407c01 <__flatcc_fb_open_output_file@@Base+0xc1>
  407ba6:	mov    r14,rax
  407ba9:	lea    rsi,[rip+0x27d76]        # 42f926 <_IO_stdin_used@@Base+0x1926>
  407bb0:	mov    rdi,rax
  407bb3:	call   4061f0 <fopen@plt>
  407bb8:	mov    QWORD PTR [r13+0xd0],rax
  407bbf:	xor    ebp,ebp
  407bc1:	test   rax,rax
  407bc4:	je     407bdf <__flatcc_fb_open_output_file@@Base+0x9f>
  407bc6:	mov    rdi,r14
  407bc9:	call   406040 <free@plt>
  407bce:	mov    eax,ebp
  407bd0:	add    rsp,0x8
  407bd4:	pop    rbx
  407bd5:	pop    r12
  407bd7:	pop    r13
  407bd9:	pop    r14
  407bdb:	pop    r15
  407bdd:	pop    rbp
  407bde:	ret    
  407bdf:	mov    rax,QWORD PTR [rip+0x4a412]        # 451ff8 <stderr@GLIBC_2.2.5>
  407be6:	mov    rdi,QWORD PTR [rax]
  407be9:	lea    rsi,[rip+0x27d70]        # 42f960 <_IO_stdin_used@@Base+0x1960>
  407bf0:	mov    rdx,r14
  407bf3:	xor    eax,eax
  407bf5:	call   406180 <fprintf@plt>
  407bfa:	mov    ebp,0xffffffff
  407bff:	jmp    407bc6 <__flatcc_fb_open_output_file@@Base+0x86>
  407c01:	mov    rax,QWORD PTR [rip+0x4a3f0]        # 451ff8 <stderr@GLIBC_2.2.5>
  407c08:	mov    rcx,QWORD PTR [rax]
  407c0b:	lea    rdi,[rip+0x27c0a]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  407c12:	mov    esi,0x22
  407c17:	mov    edx,0x1
  407c1c:	call   406230 <fwrite@plt>
  407c21:	mov    edi,0x1
  407c26:	call   406220 <exit@plt>
  407c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407c30 <__flatcc_fb_close_output_file@@Base>:
  407c30:	push   rbx
  407c31:	mov    rax,QWORD PTR [rdi+0xe0]
  407c38:	cmp    QWORD PTR [rax+0x98],0x0
  407c40:	jne    407c6a <__flatcc_fb_close_output_file@@Base+0x3a>
  407c42:	cmp    DWORD PTR [rax+0x80],0x0
  407c49:	jne    407c6a <__flatcc_fb_close_output_file@@Base+0x3a>
  407c4b:	mov    rbx,rdi
  407c4e:	mov    rdi,QWORD PTR [rdi+0xd0]
  407c55:	test   rdi,rdi
  407c58:	je     407c6a <__flatcc_fb_close_output_file@@Base+0x3a>
  407c5a:	call   4060c0 <fclose@plt>
  407c5f:	mov    QWORD PTR [rbx+0xd0],0x0
  407c6a:	pop    rbx
  407c6b:	ret    
  407c6c:	nop    DWORD PTR [rax+0x0]

0000000000407c70 <__flatcc_fb_end_output_c@@Base>:
  407c70:	push   rbx
  407c71:	mov    rbx,rdi
  407c74:	mov    rdi,QWORD PTR [rdi+0xd0]
  407c7b:	test   rdi,rdi
  407c7e:	je     407c91 <__flatcc_fb_end_output_c@@Base+0x21>
  407c80:	mov    rax,QWORD PTR [rip+0x4a359]        # 451fe0 <stdout@GLIBC_2.2.5>
  407c87:	cmp    rdi,QWORD PTR [rax]
  407c8a:	je     407c91 <__flatcc_fb_end_output_c@@Base+0x21>
  407c8c:	call   4060c0 <fclose@plt>
  407c91:	mov    QWORD PTR [rbx+0xd0],0x0
  407c9c:	pop    rbx
  407c9d:	ret    
  407c9e:	xchg   ax,ax

0000000000407ca0 <__flatcc_fb_init_output_c@@Base>:
  407ca0:	push   rbp
  407ca1:	push   r15
  407ca3:	push   r14
  407ca5:	push   r13
  407ca7:	push   r12
  407ca9:	push   rbx
  407caa:	push   rax
  407cab:	mov    r12,rsi
  407cae:	mov    rbx,rdi
  407cb1:	cmp    DWORD PTR [rsi+0xa0],0x0
  407cb8:	lea    rax,[rip+0x27c67]        # 42f926 <_IO_stdin_used@@Base+0x1926>
  407cbf:	lea    r14,[rip+0x27cbc]        # 42f982 <_IO_stdin_used@@Base+0x1982>
  407cc6:	cmove  r14,rax
  407cca:	mov    rax,QWORD PTR [rsi+0x108]
  407cd1:	test   rax,rax
  407cd4:	lea    r15,[rip+0x28068]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  407cdb:	vxorps xmm0,xmm0,xmm0
  407cdf:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  407ce7:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  407cef:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  407cf7:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  407cff:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  407d04:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  407d09:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  407d0e:	cmovne r15,rax
  407d12:	vmovups YMMWORD PTR [rdi],ymm0
  407d16:	mov    QWORD PTR [rdi+0xe0],rsi
  407d1d:	mov    rbp,QWORD PTR [rsi+0xe8]
  407d24:	test   rbp,rbp
  407d27:	je     407d64 <__flatcc_fb_init_output_c@@Base+0xc4>
  407d29:	mov    rdi,rbp
  407d2c:	vzeroupper 
  407d2f:	call   4060d0 <strlen@plt>
  407d34:	mov    r13,rax
  407d37:	cmp    rax,0x65
  407d3b:	jb     407d71 <__flatcc_fb_init_output_c@@Base+0xd1>
  407d3d:	mov    rax,QWORD PTR [rip+0x4a2b4]        # 451ff8 <stderr@GLIBC_2.2.5>
  407d44:	mov    rdi,QWORD PTR [rax]
  407d47:	lea    rsi,[rip+0x27c37]        # 42f985 <_IO_stdin_used@@Base+0x1985>
  407d4e:	mov    edx,0x64
  407d53:	xor    eax,eax
  407d55:	call   406180 <fprintf@plt>
  407d5a:	mov    ebx,0xffffffff
  407d5f:	jmp    407e54 <__flatcc_fb_init_output_c@@Base+0x1b4>
  407d64:	lea    rbp,[rip+0x27c51]        # 42f9bc <_IO_stdin_used@@Base+0x19bc>
  407d6b:	mov    r13d,0xb
  407d71:	mov    QWORD PTR [rsp],r14
  407d75:	mov    edx,0x64
  407d7a:	mov    rdi,rbx
  407d7d:	mov    rsi,rbp
  407d80:	vzeroupper 
  407d83:	call   406050 <strncpy@plt>
  407d88:	mov    BYTE PTR [rbx+0x64],0x0
  407d8c:	test   r13,r13
  407d8f:	je     407d98 <__flatcc_fb_init_output_c@@Base+0xf8>
  407d91:	mov    WORD PTR [rbx+r13*1],0x5f
  407d98:	lea    rbp,[rbx+0x66]
  407d9c:	mov    r14b,BYTE PTR [rbx]
  407d9f:	test   r14b,r14b
  407da2:	je     407dcb <__flatcc_fb_init_output_c@@Base+0x12b>
  407da4:	call   406030 <__ctype_toupper_loc@plt>
  407da9:	nop    DWORD PTR [rax+0x0]
  407db0:	mov    rcx,QWORD PTR [rax]
  407db3:	movsx  rdx,r14b
  407db7:	movzx  ecx,BYTE PTR [rcx+rdx*4]
  407dbb:	mov    BYTE PTR [rbp+0x0],cl
  407dbe:	movzx  r14d,BYTE PTR [rbp-0x65]
  407dc3:	inc    rbp
  407dc6:	test   r14b,r14b
  407dc9:	jne    407db0 <__flatcc_fb_init_output_c@@Base+0x110>
  407dcb:	mov    BYTE PTR [rbp+0x0],0x0
  407dcf:	mov    BYTE PTR [rbx+r13*1+0x66],0x0
  407dd5:	mov    eax,DWORD PTR [r12+0xd0]
  407ddd:	mov    DWORD PTR [rbx+0xf4],eax
  407de3:	cmp    DWORD PTR [r12+0x80],0x0
  407dec:	je     407e03 <__flatcc_fb_init_output_c@@Base+0x163>
  407dee:	mov    rax,QWORD PTR [rip+0x4a1eb]        # 451fe0 <stdout@GLIBC_2.2.5>
  407df5:	mov    rax,QWORD PTR [rax]
  407df8:	mov    QWORD PTR [rbx+0xd0],rax
  407dff:	xor    ebx,ebx
  407e01:	jmp    407e54 <__flatcc_fb_init_output_c@@Base+0x1b4>
  407e03:	mov    rax,QWORD PTR [rbx+0xe0]
  407e0a:	mov    rsi,QWORD PTR [rax+0x98]
  407e11:	test   rsi,rsi
  407e14:	je     407dff <__flatcc_fb_init_output_c@@Base+0x15f>
  407e16:	lea    rdx,[rip+0x27f26]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  407e1d:	mov    rdi,r15
  407e20:	mov    ecx,0x1
  407e25:	call   41bc40 <__flatcc_fb_create_join_path@@Base>
  407e2a:	test   rax,rax
  407e2d:	je     407e87 <__flatcc_fb_init_output_c@@Base+0x1e7>
  407e2f:	mov    r15,rax
  407e32:	mov    rdi,rax
  407e35:	mov    rsi,QWORD PTR [rsp]
  407e39:	call   4061f0 <fopen@plt>
  407e3e:	mov    QWORD PTR [rbx+0xd0],rax
  407e45:	xor    ebx,ebx
  407e47:	test   rax,rax
  407e4a:	je     407e65 <__flatcc_fb_init_output_c@@Base+0x1c5>
  407e4c:	mov    rdi,r15
  407e4f:	call   406040 <free@plt>
  407e54:	mov    eax,ebx
  407e56:	add    rsp,0x8
  407e5a:	pop    rbx
  407e5b:	pop    r12
  407e5d:	pop    r13
  407e5f:	pop    r14
  407e61:	pop    r15
  407e63:	pop    rbp
  407e64:	ret    
  407e65:	mov    rax,QWORD PTR [rip+0x4a18c]        # 451ff8 <stderr@GLIBC_2.2.5>
  407e6c:	mov    rdi,QWORD PTR [rax]
  407e6f:	lea    rsi,[rip+0x27aea]        # 42f960 <_IO_stdin_used@@Base+0x1960>
  407e76:	mov    rdx,r15
  407e79:	xor    eax,eax
  407e7b:	call   406180 <fprintf@plt>
  407e80:	mov    ebx,0xffffffff
  407e85:	jmp    407e4c <__flatcc_fb_init_output_c@@Base+0x1ac>
  407e87:	mov    rax,QWORD PTR [rip+0x4a16a]        # 451ff8 <stderr@GLIBC_2.2.5>
  407e8e:	mov    rcx,QWORD PTR [rax]
  407e91:	lea    rdi,[rip+0x27984]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  407e98:	mov    esi,0x22
  407e9d:	mov    edx,0x1
  407ea2:	call   406230 <fwrite@plt>
  407ea7:	mov    edi,0x1
  407eac:	call   406220 <exit@plt>
  407eb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407ec0 <__flatcc_fb_gen_c_includes@@Base>:
  407ec0:	push   rbp
  407ec1:	mov    rbp,rsp
  407ec4:	push   r15
  407ec6:	push   r14
  407ec8:	push   r13
  407eca:	push   r12
  407ecc:	push   rbx
  407ecd:	and    rsp,0xffffffffffffffe0
  407ed1:	sub    rsp,0x60
  407ed5:	mov    QWORD PTR [rsp+0x18],rdx
  407eda:	mov    QWORD PTR [rsp+0x10],rsi
  407edf:	mov    rbx,rdi
  407ee2:	mov    rax,QWORD PTR [rdi+0xd8]
  407ee9:	mov    r15,QWORD PTR [rax]
  407eec:	vxorps xmm0,xmm0,xmm0
  407ef0:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  407ef6:	mov    rdi,QWORD PTR [rax+0x118]
  407efd:	vzeroupper 
  407f00:	call   41ba80 <__flatcc_fb_copy_path@@Base>
  407f05:	lea    rdi,[rsp+0x20]
  407f0a:	mov    rsi,rax
  407f0d:	mov    edx,0x1
  407f12:	call   4193d0 <str_set_insert_item@@Base>
  407f17:	test   r15,r15
  407f1a:	jne    407f49 <__flatcc_fb_gen_c_includes@@Base+0x89>
  407f1c:	jmp    407fff <__flatcc_fb_gen_c_includes@@Base+0x13f>
  407f21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407f30:	mov    rdi,r14
  407f33:	call   406040 <free@plt>
  407f38:	mov    rdi,r13
  407f3b:	call   406040 <free@plt>
  407f40:	test   r15,r15
  407f43:	je     407fff <__flatcc_fb_gen_c_includes@@Base+0x13f>
  407f49:	mov    rdi,QWORD PTR [r15+0x8]
  407f4d:	movsxd rsi,DWORD PTR [r15+0x10]
  407f51:	mov    rax,QWORD PTR [rbx+0xe0]
  407f58:	mov    rdx,QWORD PTR [rax+0x68]
  407f5c:	call   41c0c0 <__flatcc_fb_create_basename@@Base>
  407f61:	test   rax,rax
  407f64:	je     408021 <__flatcc_fb_gen_c_includes@@Base+0x161>
  407f6a:	mov    r13,rax
  407f6d:	mov    r15,QWORD PTR [r15]
  407f70:	mov    rdi,rax
  407f73:	call   41ba80 <__flatcc_fb_copy_path@@Base>
  407f78:	test   rax,rax
  407f7b:	je     408021 <__flatcc_fb_gen_c_includes@@Base+0x161>
  407f81:	mov    r14,rax
  407f84:	mov    r12b,BYTE PTR [rax]
  407f87:	test   r12b,r12b
  407f8a:	je     407fba <__flatcc_fb_gen_c_includes@@Base+0xfa>
  407f8c:	call   406030 <__ctype_toupper_loc@plt>
  407f91:	mov    rcx,r14
  407f94:	inc    rcx
  407f97:	nop    WORD PTR [rax+rax*1+0x0]
  407fa0:	mov    rdx,QWORD PTR [rax]
  407fa3:	movsx  rsi,r12b
  407fa7:	movzx  edx,BYTE PTR [rdx+rsi*4]
  407fab:	mov    BYTE PTR [rcx-0x1],dl
  407fae:	movzx  r12d,BYTE PTR [rcx]
  407fb2:	inc    rcx
  407fb5:	test   r12b,r12b
  407fb8:	jne    407fa0 <__flatcc_fb_gen_c_includes@@Base+0xe0>
  407fba:	lea    rdi,[rsp+0x20]
  407fbf:	mov    rsi,r14
  407fc2:	mov    edx,0x1
  407fc7:	call   4193d0 <str_set_insert_item@@Base>
  407fcc:	test   rax,rax
  407fcf:	jne    407f30 <__flatcc_fb_gen_c_includes@@Base+0x70>
  407fd5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fdc:	lea    rsi,[rip+0x279e5]        # 42f9c8 <_IO_stdin_used@@Base+0x19c8>
  407fe3:	mov    rdx,r14
  407fe6:	mov    rcx,QWORD PTR [rsp+0x18]
  407feb:	mov    r8,r13
  407fee:	mov    r9,QWORD PTR [rsp+0x10]
  407ff3:	xor    eax,eax
  407ff5:	call   406180 <fprintf@plt>
  407ffa:	jmp    407f38 <__flatcc_fb_gen_c_includes@@Base+0x78>
  407fff:	lea    rsi,[rip+0x4a]        # 408050 <__flatcc_fb_gen_c_includes@@Base+0x190>
  408006:	lea    rdi,[rsp+0x20]
  40800b:	xor    edx,edx
  40800d:	call   418fe0 <str_set_destroy@@Base>
  408012:	lea    rsp,[rbp-0x28]
  408016:	pop    rbx
  408017:	pop    r12
  408019:	pop    r13
  40801b:	pop    r14
  40801d:	pop    r15
  40801f:	pop    rbp
  408020:	ret    
  408021:	mov    rax,QWORD PTR [rip+0x49fd0]        # 451ff8 <stderr@GLIBC_2.2.5>
  408028:	mov    rcx,QWORD PTR [rax]
  40802b:	lea    rdi,[rip+0x277ea]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  408032:	mov    esi,0x22
  408037:	mov    edx,0x1
  40803c:	call   406230 <fwrite@plt>
  408041:	mov    edi,0x1
  408046:	call   406220 <exit@plt>
  40804b:	nop    DWORD PTR [rax+rax*1+0x0]
  408050:	mov    rdi,rsi
  408053:	jmp    406040 <free@plt>
  408058:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408060 <__flatcc_fb_copy_scope@@Base>:
  408060:	push   r15
  408062:	push   r14
  408064:	push   r12
  408066:	push   rbx
  408067:	push   rax
  408068:	mov    r14,rsi
  40806b:	mov    r15,rdi
  40806e:	movsxd r12,DWORD PTR [rdi+0x30]
  408072:	mov    rcx,QWORD PTR [rdi]
  408075:	mov    rax,r12
  408078:	test   rcx,rcx
  40807b:	je     40809a <__flatcc_fb_copy_scope@@Base+0x3a>
  40807d:	mov    rax,r12
  408080:	mov    rdx,QWORD PTR [rcx+0x8]
  408084:	mov    rsi,QWORD PTR [rcx]
  408087:	mov    rcx,QWORD PTR [rdx+0x8]
  40808b:	add    rax,rcx
  40808e:	add    rax,0x1
  408092:	mov    rcx,rsi
  408095:	test   rsi,rsi
  408098:	jne    408080 <__flatcc_fb_copy_scope@@Base+0x20>
  40809a:	cmp    rax,0x66
  40809e:	jb     4080ac <__flatcc_fb_copy_scope@@Base+0x4c>
  4080a0:	mov    BYTE PTR [r14],0x0
  4080a4:	mov    r12d,0xffffffff
  4080aa:	jmp    408104 <__flatcc_fb_copy_scope@@Base+0xa4>
  4080ac:	mov    rsi,QWORD PTR [r15+0x28]
  4080b0:	mov    rdi,r14
  4080b3:	mov    rdx,r12
  4080b6:	call   4061a0 <memcpy@plt>
  4080bb:	mov    rbx,QWORD PTR [r15]
  4080be:	test   rbx,rbx
  4080c1:	je     4080ff <__flatcc_fb_copy_scope@@Base+0x9f>
  4080c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080cd:	nop    DWORD PTR [rax]
  4080d0:	mov    rax,QWORD PTR [rbx+0x8]
  4080d4:	mov    rsi,QWORD PTR [rax]
  4080d7:	mov    r15,QWORD PTR [rax+0x8]
  4080db:	lea    rdi,[r14+r12*1]
  4080df:	mov    rdx,r15
  4080e2:	call   4061a0 <memcpy@plt>
  4080e7:	lea    rax,[r15+r12*1]
  4080eb:	add    r12,r15
  4080ee:	add    r12,0x1
  4080f2:	mov    BYTE PTR [r14+rax*1],0x5f
  4080f7:	mov    rbx,QWORD PTR [rbx]
  4080fa:	test   rbx,rbx
  4080fd:	jne    4080d0 <__flatcc_fb_copy_scope@@Base+0x70>
  4080ff:	mov    BYTE PTR [r14+r12*1],0x0
  408104:	mov    eax,r12d
  408107:	add    rsp,0x8
  40810b:	pop    rbx
  40810c:	pop    r12
  40810e:	pop    r14
  408110:	pop    r15
  408112:	ret    
  408113:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40811d:	nop    DWORD PTR [rax]

0000000000408120 <__flatcc_fb_scoped_symbol_name@@Base>:
  408120:	push   r15
  408122:	push   r14
  408124:	push   r13
  408126:	push   r12
  408128:	push   rbx
  408129:	mov    r14,rdx
  40812c:	mov    r13,QWORD PTR [rsi+0x8]
  408130:	cmp    QWORD PTR [rdx+0xd0],rdi
  408137:	je     4081e4 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  40813d:	mov    r15,rdi
  408140:	movsxd r12,DWORD PTR [rdi+0x30]
  408144:	mov    rcx,QWORD PTR [rdi]
  408147:	mov    rax,r12
  40814a:	test   rcx,rcx
  40814d:	je     40817a <__flatcc_fb_scoped_symbol_name@@Base+0x5a>
  40814f:	mov    rax,r12
  408152:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40815c:	nop    DWORD PTR [rax+0x0]
  408160:	mov    rdx,QWORD PTR [rcx+0x8]
  408164:	mov    rsi,QWORD PTR [rcx]
  408167:	mov    rcx,QWORD PTR [rdx+0x8]
  40816b:	add    rax,rcx
  40816e:	add    rax,0x1
  408172:	mov    rcx,rsi
  408175:	test   rsi,rsi
  408178:	jne    408160 <__flatcc_fb_scoped_symbol_name@@Base+0x40>
  40817a:	cmp    rax,0x66
  40817e:	jae    40826e <__flatcc_fb_scoped_symbol_name@@Base+0x14e>
  408184:	mov    rsi,QWORD PTR [r15+0x28]
  408188:	mov    rdi,r14
  40818b:	mov    rdx,r12
  40818e:	call   4061a0 <memcpy@plt>
  408193:	mov    rbx,QWORD PTR [r15]
  408196:	test   rbx,rbx
  408199:	je     4081cf <__flatcc_fb_scoped_symbol_name@@Base+0xaf>
  40819b:	nop    DWORD PTR [rax+rax*1+0x0]
  4081a0:	mov    rax,QWORD PTR [rbx+0x8]
  4081a4:	mov    rsi,QWORD PTR [rax]
  4081a7:	mov    r15,QWORD PTR [rax+0x8]
  4081ab:	lea    rdi,[r14+r12*1]
  4081af:	mov    rdx,r15
  4081b2:	call   4061a0 <memcpy@plt>
  4081b7:	lea    rax,[r15+r12*1]
  4081bb:	add    r12,r15
  4081be:	add    r12,0x1
  4081c2:	mov    BYTE PTR [r14+rax*1],0x5f
  4081c7:	mov    rbx,QWORD PTR [rbx]
  4081ca:	test   rbx,rbx
  4081cd:	jne    4081a0 <__flatcc_fb_scoped_symbol_name@@Base+0x80>
  4081cf:	mov    BYTE PTR [r14+r12*1],0x0
  4081d4:	mov    DWORD PTR [r14+0xd8],r12d
  4081db:	test   r12d,r12d
  4081de:	js     408286 <__flatcc_fb_scoped_symbol_name@@Base+0x166>
  4081e4:	mov    edx,DWORD PTR [r13+0x8]
  4081e8:	mov    DWORD PTR [r14+0xdc],edx
  4081ef:	mov    eax,DWORD PTR [r14+0xd8]
  4081f6:	lea    ecx,[rax+rdx*1]
  4081f9:	mov    DWORD PTR [r14+0xe0],ecx
  408200:	cmp    ecx,0xcc
  408206:	jge    408230 <__flatcc_fb_scoped_symbol_name@@Base+0x110>
  408208:	movsxd rdi,eax
  40820b:	add    rdi,r14
  40820e:	mov    rsi,QWORD PTR [r13+0x0]
  408212:	movsxd rdx,edx
  408215:	call   4061a0 <memcpy@plt>
  40821a:	movsxd rax,DWORD PTR [r14+0xe0]
  408221:	mov    BYTE PTR [r14+rax*1],0x0
  408226:	pop    rbx
  408227:	pop    r12
  408229:	pop    r13
  40822b:	pop    r14
  40822d:	pop    r15
  40822f:	ret    
  408230:	mov    rax,QWORD PTR [rip+0x49dc1]        # 451ff8 <stderr@GLIBC_2.2.5>
  408237:	mov    rdi,QWORD PTR [rax]
  40823a:	mov    rcx,QWORD PTR [r13+0x0]
  40823e:	lea    rsi,[rip+0x277c5]        # 42fa0a <_IO_stdin_used@@Base+0x1a0a>
  408245:	xor    eax,eax
  408247:	call   406180 <fprintf@plt>
  40824c:	mov    eax,DWORD PTR [r14+0xd8]
  408253:	mov    edx,0xcb
  408258:	sub    edx,eax
  40825a:	mov    DWORD PTR [r14+0xdc],edx
  408261:	mov    DWORD PTR [r14+0xe0],0xcb
  40826c:	jmp    408208 <__flatcc_fb_scoped_symbol_name@@Base+0xe8>
  40826e:	mov    BYTE PTR [r14],0x0
  408272:	lea    rax,[r14+0xd8]
  408279:	mov    DWORD PTR [r14+0xd8],0xffffffff
  408284:	jmp    40828d <__flatcc_fb_scoped_symbol_name@@Base+0x16d>
  408286:	lea    rax,[r14+0xd8]
  40828d:	mov    DWORD PTR [rax],0x0
  408293:	mov    rax,QWORD PTR [rip+0x49d5e]        # 451ff8 <stderr@GLIBC_2.2.5>
  40829a:	mov    rcx,QWORD PTR [rax]
  40829d:	lea    rdi,[rip+0x27749]        # 42f9ed <_IO_stdin_used@@Base+0x19ed>
  4082a4:	mov    esi,0x1c
  4082a9:	mov    edx,0x1
  4082ae:	call   406230 <fwrite@plt>
  4082b3:	jmp    4081e4 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  4082b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004082c0 <__flatcc_fb_codegen_common_c@@Base>:
  4082c0:	push   rbp
  4082c1:	push   r14
  4082c3:	push   rbx
  4082c4:	mov    rbx,rdi
  4082c7:	call   4060d0 <strlen@plt>
  4082cc:	mov    r14,rax
  4082cf:	dec    r14
  4082d2:	mov    rax,QWORD PTR [rbx+0xe0]
  4082d9:	cmp    DWORD PTR [rax+0xb0],0x0
  4082e0:	je     40834f <__flatcc_fb_codegen_common_c@@Base+0x8f>
  4082e2:	lea    rcx,[rip+0x27747]        # 42fa30 <_IO_stdin_used@@Base+0x1a30>
  4082e9:	mov    rdi,rbx
  4082ec:	mov    rsi,rbx
  4082ef:	mov    rdx,r14
  4082f2:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  4082f7:	mov    ebp,0xffffffff
  4082fc:	test   eax,eax
  4082fe:	jne    4083b6 <__flatcc_fb_codegen_common_c@@Base+0xf6>
  408304:	mov    rdi,rbx
  408307:	call   408690 <__flatcc_fb_gen_common_c_header@@Base>
  40830c:	mov    ebp,eax
  40830e:	mov    rax,QWORD PTR [rbx+0xe0]
  408315:	cmp    QWORD PTR [rax+0x98],0x0
  40831d:	jne    408344 <__flatcc_fb_codegen_common_c@@Base+0x84>
  40831f:	cmp    DWORD PTR [rax+0x80],0x0
  408326:	jne    408344 <__flatcc_fb_codegen_common_c@@Base+0x84>
  408328:	mov    rdi,QWORD PTR [rbx+0xd0]
  40832f:	test   rdi,rdi
  408332:	je     408344 <__flatcc_fb_codegen_common_c@@Base+0x84>
  408334:	call   4060c0 <fclose@plt>
  408339:	mov    QWORD PTR [rbx+0xd0],0x0
  408344:	test   ebp,ebp
  408346:	jne    4083b6 <__flatcc_fb_codegen_common_c@@Base+0xf6>
  408348:	mov    rax,QWORD PTR [rbx+0xe0]
  40834f:	cmp    DWORD PTR [rax+0xb4],0x0
  408356:	je     4083b4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  408358:	lea    rcx,[rip+0x276e2]        # 42fa41 <_IO_stdin_used@@Base+0x1a41>
  40835f:	mov    rdi,rbx
  408362:	mov    rsi,rbx
  408365:	mov    rdx,r14
  408368:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  40836d:	mov    ebp,0xffffffff
  408372:	test   eax,eax
  408374:	jne    4083b6 <__flatcc_fb_codegen_common_c@@Base+0xf6>
  408376:	mov    rdi,rbx
  408379:	call   40bff0 <__flatcc_fb_gen_common_c_builder_header@@Base>
  40837e:	mov    rax,QWORD PTR [rbx+0xe0]
  408385:	cmp    QWORD PTR [rax+0x98],0x0
  40838d:	jne    4083b4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  40838f:	cmp    DWORD PTR [rax+0x80],0x0
  408396:	jne    4083b4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  408398:	mov    rdi,QWORD PTR [rbx+0xd0]
  40839f:	test   rdi,rdi
  4083a2:	je     4083b4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  4083a4:	call   4060c0 <fclose@plt>
  4083a9:	mov    QWORD PTR [rbx+0xd0],0x0
  4083b4:	xor    ebp,ebp
  4083b6:	mov    eax,ebp
  4083b8:	pop    rbx
  4083b9:	pop    r14
  4083bb:	pop    rbp
  4083bc:	ret    
  4083bd:	nop    DWORD PTR [rax]

00000000004083c0 <__flatcc_fb_codegen_c@@Base>:
  4083c0:	push   r15
  4083c2:	push   r14
  4083c4:	push   rbx
  4083c5:	mov    r15,rdi
  4083c8:	mov    QWORD PTR [rdi+0xd8],rsi
  4083cf:	mov    rdi,QWORD PTR [rsi+0x68]
  4083d3:	xor    esi,esi
  4083d5:	xor    edx,edx
  4083d7:	call   41aae0 <fb_scope_table_find@@Base>
  4083dc:	mov    QWORD PTR [r15+0xe8],rax
  4083e3:	mov    rax,QWORD PTR [r15+0xd8]
  4083ea:	mov    rbx,QWORD PTR [rax+0x110]
  4083f1:	mov    rdi,rbx
  4083f4:	call   4060d0 <strlen@plt>
  4083f9:	mov    r14,rax
  4083fc:	mov    rax,QWORD PTR [r15+0xe0]
  408403:	cmp    DWORD PTR [rax+0xb8],0x0
  40840a:	je     40847d <__flatcc_fb_codegen_c@@Base+0xbd>
  40840c:	lea    rcx,[rip+0x3e779]        # 446b8c <_IO_stdin_used@@Base+0x18b8c>
  408413:	mov    rdi,r15
  408416:	mov    rsi,rbx
  408419:	mov    rdx,r14
  40841c:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  408421:	mov    ecx,eax
  408423:	mov    eax,0xffffffff
  408428:	test   ecx,ecx
  40842a:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  408430:	mov    rdi,r15
  408433:	call   409270 <__flatcc_fb_gen_c_reader@@Base>
  408438:	test   eax,eax
  40843a:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  408440:	mov    rax,QWORD PTR [r15+0xe0]
  408447:	cmp    QWORD PTR [rax+0x98],0x0
  40844f:	jne    40847d <__flatcc_fb_codegen_c@@Base+0xbd>
  408451:	cmp    DWORD PTR [rax+0x80],0x0
  408458:	jne    40847d <__flatcc_fb_codegen_c@@Base+0xbd>
  40845a:	mov    rdi,QWORD PTR [r15+0xd0]
  408461:	test   rdi,rdi
  408464:	je     40847d <__flatcc_fb_codegen_c@@Base+0xbd>
  408466:	call   4060c0 <fclose@plt>
  40846b:	mov    QWORD PTR [r15+0xd0],0x0
  408476:	mov    rax,QWORD PTR [r15+0xe0]
  40847d:	cmp    DWORD PTR [rax+0xbc],0x0
  408484:	je     408502 <__flatcc_fb_codegen_c@@Base+0x142>
  408486:	mov    rax,QWORD PTR [r15+0xd8]
  40848d:	mov    rsi,QWORD PTR [rax+0x110]
  408494:	lea    rcx,[rip+0x3e1d7]        # 446672 <_IO_stdin_used@@Base+0x18672>
  40849b:	mov    rdi,r15
  40849e:	mov    rdx,r14
  4084a1:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  4084a6:	mov    ecx,eax
  4084a8:	mov    eax,0xffffffff
  4084ad:	test   ecx,ecx
  4084af:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4084b5:	mov    rdi,r15
  4084b8:	call   40c9e0 <__flatcc_fb_gen_c_builder@@Base>
  4084bd:	test   eax,eax
  4084bf:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4084c5:	mov    rax,QWORD PTR [r15+0xe0]
  4084cc:	cmp    QWORD PTR [rax+0x98],0x0
  4084d4:	jne    408502 <__flatcc_fb_codegen_c@@Base+0x142>
  4084d6:	cmp    DWORD PTR [rax+0x80],0x0
  4084dd:	jne    408502 <__flatcc_fb_codegen_c@@Base+0x142>
  4084df:	mov    rdi,QWORD PTR [r15+0xd0]
  4084e6:	test   rdi,rdi
  4084e9:	je     408502 <__flatcc_fb_codegen_c@@Base+0x142>
  4084eb:	call   4060c0 <fclose@plt>
  4084f0:	mov    QWORD PTR [r15+0xd0],0x0
  4084fb:	mov    rax,QWORD PTR [r15+0xe0]
  408502:	cmp    DWORD PTR [rax+0xc0],0x0
  408509:	je     408587 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40850b:	mov    rax,QWORD PTR [r15+0xd8]
  408512:	mov    rsi,QWORD PTR [rax+0x110]
  408519:	lea    rcx,[rip+0x27533]        # 42fa53 <_IO_stdin_used@@Base+0x1a53>
  408520:	mov    rdi,r15
  408523:	mov    rdx,r14
  408526:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  40852b:	mov    ecx,eax
  40852d:	mov    eax,0xffffffff
  408532:	test   ecx,ecx
  408534:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40853a:	mov    rdi,r15
  40853d:	call   40f6f0 <__flatcc_fb_gen_c_verifier@@Base>
  408542:	test   eax,eax
  408544:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40854a:	mov    rax,QWORD PTR [r15+0xe0]
  408551:	cmp    QWORD PTR [rax+0x98],0x0
  408559:	jne    408587 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40855b:	cmp    DWORD PTR [rax+0x80],0x0
  408562:	jne    408587 <__flatcc_fb_codegen_c@@Base+0x1c7>
  408564:	mov    rdi,QWORD PTR [r15+0xd0]
  40856b:	test   rdi,rdi
  40856e:	je     408587 <__flatcc_fb_codegen_c@@Base+0x1c7>
  408570:	call   4060c0 <fclose@plt>
  408575:	mov    QWORD PTR [r15+0xd0],0x0
  408580:	mov    rax,QWORD PTR [r15+0xe0]
  408587:	cmp    DWORD PTR [rax+0xc4],0x0
  40858e:	je     40860c <__flatcc_fb_codegen_c@@Base+0x24c>
  408590:	mov    rax,QWORD PTR [r15+0xd8]
  408597:	mov    rsi,QWORD PTR [rax+0x110]
  40859e:	lea    rcx,[rip+0x274ba]        # 42fa5f <_IO_stdin_used@@Base+0x1a5f>
  4085a5:	mov    rdi,r15
  4085a8:	mov    rdx,r14
  4085ab:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  4085b0:	mov    ecx,eax
  4085b2:	mov    eax,0xffffffff
  4085b7:	test   ecx,ecx
  4085b9:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4085bf:	mov    rdi,r15
  4085c2:	call   4102c0 <__flatcc_fb_gen_c_json_parser@@Base>
  4085c7:	test   eax,eax
  4085c9:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4085cf:	mov    rax,QWORD PTR [r15+0xe0]
  4085d6:	cmp    QWORD PTR [rax+0x98],0x0
  4085de:	jne    40860c <__flatcc_fb_codegen_c@@Base+0x24c>
  4085e0:	cmp    DWORD PTR [rax+0x80],0x0
  4085e7:	jne    40860c <__flatcc_fb_codegen_c@@Base+0x24c>
  4085e9:	mov    rdi,QWORD PTR [r15+0xd0]
  4085f0:	test   rdi,rdi
  4085f3:	je     40860c <__flatcc_fb_codegen_c@@Base+0x24c>
  4085f5:	call   4060c0 <fclose@plt>
  4085fa:	mov    QWORD PTR [r15+0xd0],0x0
  408605:	mov    rax,QWORD PTR [r15+0xe0]
  40860c:	cmp    DWORD PTR [rax+0xc8],0x0
  408613:	je     408682 <__flatcc_fb_codegen_c@@Base+0x2c2>
  408615:	mov    rax,QWORD PTR [r15+0xd8]
  40861c:	mov    rsi,QWORD PTR [rax+0x110]
  408623:	lea    rcx,[rip+0x27444]        # 42fa6e <_IO_stdin_used@@Base+0x1a6e>
  40862a:	mov    rdi,r15
  40862d:	mov    rdx,r14
  408630:	call   407b40 <__flatcc_fb_open_output_file@@Base>
  408635:	mov    ecx,eax
  408637:	mov    eax,0xffffffff
  40863c:	test   ecx,ecx
  40863e:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  408640:	mov    rdi,r15
  408643:	call   415e30 <__flatcc_fb_gen_c_json_printer@@Base>
  408648:	test   eax,eax
  40864a:	jne    408684 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40864c:	mov    rax,QWORD PTR [r15+0xe0]
  408653:	cmp    QWORD PTR [rax+0x98],0x0
  40865b:	jne    408682 <__flatcc_fb_codegen_c@@Base+0x2c2>
  40865d:	cmp    DWORD PTR [rax+0x80],0x0
  408664:	jne    408682 <__flatcc_fb_codegen_c@@Base+0x2c2>
  408666:	mov    rdi,QWORD PTR [r15+0xd0]
  40866d:	test   rdi,rdi
  408670:	je     408682 <__flatcc_fb_codegen_c@@Base+0x2c2>
  408672:	call   4060c0 <fclose@plt>
  408677:	mov    QWORD PTR [r15+0xd0],0x0
  408682:	xor    eax,eax
  408684:	pop    rbx
  408685:	pop    r14
  408687:	pop    r15
  408689:	ret    
  40868a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408690 <__flatcc_fb_gen_common_c_header@@Base>:
  408690:	push   r14
  408692:	push   rbx
  408693:	push   rax
  408694:	mov    rbx,rdi
  408697:	lea    r14,[rdi+0x66]
  40869b:	mov    rdi,QWORD PTR [rdi+0xd0]
  4086a2:	lea    rsi,[rip+0x2741f]        # 42fac8 <_IO_stdin_used@@Base+0x1ac8>
  4086a9:	mov    rdx,r14
  4086ac:	mov    rcx,r14
  4086af:	xor    eax,eax
  4086b1:	call   406180 <fprintf@plt>
  4086b6:	mov    rcx,QWORD PTR [rbx+0xd0]
  4086bd:	lea    rdi,[rip+0x2743b]        # 42faff <_IO_stdin_used@@Base+0x1aff>
  4086c4:	mov    esi,0x51
  4086c9:	mov    edx,0x1
  4086ce:	call   406230 <fwrite@plt>
  4086d3:	mov    rcx,QWORD PTR [rbx+0xd0]
  4086da:	lea    rdi,[rip+0x27470]        # 42fb51 <_IO_stdin_used@@Base+0x1b51>
  4086e1:	mov    esi,0x34
  4086e6:	mov    edx,0x1
  4086eb:	call   406230 <fwrite@plt>
  4086f0:	mov    rax,QWORD PTR [rbx+0xe0]
  4086f7:	cmp    DWORD PTR [rax+0xa8],0x0
  4086fe:	je     4088a2 <__flatcc_fb_gen_common_c_header@@Base+0x212>
  408704:	cmp    DWORD PTR [rax+0xac],0x0
  40870b:	je     40872a <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  40870d:	mov    rcx,QWORD PTR [rbx+0xd0]
  408714:	lea    rdi,[rip+0x275da]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  40871b:	mov    esi,0x24
  408720:	mov    edx,0x1
  408725:	call   406230 <fwrite@plt>
  40872a:	mov    rcx,QWORD PTR [rbx+0xd0]
  408731:	lea    rdi,[rip+0x275e2]        # 42fd1a <_IO_stdin_used@@Base+0x1d1a>
  408738:	mov    esi,0x29
  40873d:	mov    edx,0x1
  408742:	call   406230 <fwrite@plt>
  408747:	lea    rsi,[rip+0x275f6]        # 42fd44 <_IO_stdin_used@@Base+0x1d44>
  40874e:	mov    rdi,rbx
  408751:	call   406160 <strcmp@plt>
  408756:	test   eax,eax
  408758:	je     4087f2 <__flatcc_fb_gen_common_c_header@@Base+0x162>
  40875e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408765:	sub    rsp,0x8
  408769:	lea    rsi,[rip+0x275e1]        # 42fd51 <_IO_stdin_used@@Base+0x1d51>
  408770:	mov    rdx,rbx
  408773:	mov    rcx,rbx
  408776:	mov    r8,rbx
  408779:	mov    r9,rbx
  40877c:	xor    eax,eax
  40877e:	push   rbx
  40877f:	call   406180 <fprintf@plt>
  408784:	add    rsp,0x10
  408788:	mov    rdi,QWORD PTR [rbx+0xd0]
  40878f:	lea    rsi,[rip+0x2768a]        # 42fe20 <_IO_stdin_used@@Base+0x1e20>
  408796:	lea    rdx,[rip+0x275a5]        # 42fd42 <_IO_stdin_used@@Base+0x1d42>
  40879d:	mov    rcx,rbx
  4087a0:	mov    r8,rbx
  4087a3:	mov    r9,rbx
  4087a6:	xor    eax,eax
  4087a8:	call   406180 <fprintf@plt>
  4087ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087b4:	sub    rsp,0x8
  4087b8:	lea    rsi,[rip+0x277b8]        # 42ff77 <_IO_stdin_used@@Base+0x1f77>
  4087bf:	mov    rdx,rbx
  4087c2:	mov    rcx,rbx
  4087c5:	mov    r8,rbx
  4087c8:	mov    r9,rbx
  4087cb:	xor    eax,eax
  4087cd:	push   rbx
  4087ce:	call   406180 <fprintf@plt>
  4087d3:	add    rsp,0x10
  4087d7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087de:	lea    rsi,[rip+0x279f8]        # 4301dd <_IO_stdin_used@@Base+0x21dd>
  4087e5:	mov    rdx,r14
  4087e8:	mov    rcx,r14
  4087eb:	xor    eax,eax
  4087ed:	call   406180 <fprintf@plt>
  4087f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087f9:	lea    rsi,[rip+0x27a2d]        # 43022d <_IO_stdin_used@@Base+0x222d>
  408800:	mov    rdx,rbx
  408803:	mov    rcx,rbx
  408806:	xor    eax,eax
  408808:	call   406180 <fprintf@plt>
  40880d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408814:	sub    rsp,0x8
  408818:	lea    rsi,[rip+0x27a9b]        # 4302ba <_IO_stdin_used@@Base+0x22ba>
  40881f:	mov    rdx,rbx
  408822:	mov    rcx,rbx
  408825:	mov    r8,rbx
  408828:	mov    r9,rbx
  40882b:	mov    eax,0x0
  408830:	push   rbx
  408831:	push   rbx
  408832:	push   rbx
  408833:	call   406180 <fprintf@plt>
  408838:	add    rsp,0x20
  40883c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408843:	lea    rsi,[rip+0x27be3]        # 43042d <_IO_stdin_used@@Base+0x242d>
  40884a:	mov    rdx,rbx
  40884d:	mov    rcx,rbx
  408850:	xor    eax,eax
  408852:	call   406180 <fprintf@plt>
  408857:	mov    rdi,QWORD PTR [rbx+0xd0]
  40885e:	lea    rsi,[rip+0x27c1d]        # 430482 <_IO_stdin_used@@Base+0x2482>
  408865:	mov    rdx,rbx
  408868:	mov    rcx,rbx
  40886b:	mov    r8,rbx
  40886e:	mov    r9,rbx
  408871:	xor    eax,eax
  408873:	call   406180 <fprintf@plt>
  408878:	mov    rax,QWORD PTR [rbx+0xd0]
  40887f:	mov    rcx,QWORD PTR [rbx+0xe0]
  408886:	cmp    DWORD PTR [rcx+0x24],0x0
  40888a:	je     4088d8 <__flatcc_fb_gen_common_c_header@@Base+0x248>
  40888c:	lea    rsi,[rip+0x27d14]        # 4305a7 <_IO_stdin_used@@Base+0x25a7>
  408893:	mov    rdi,rax
  408896:	mov    rdx,rbx
  408899:	xor    eax,eax
  40889b:	call   406180 <fprintf@plt>
  4088a0:	jmp    4088e5 <__flatcc_fb_gen_common_c_header@@Base+0x255>
  4088a2:	mov    rcx,QWORD PTR [rbx+0xd0]
  4088a9:	lea    rdi,[rip+0x272d6]        # 42fb86 <_IO_stdin_used@@Base+0x1b86>
  4088b0:	mov    esi,0x87
  4088b5:	mov    edx,0x1
  4088ba:	call   406230 <fwrite@plt>
  4088bf:	mov    rax,QWORD PTR [rbx+0xe0]
  4088c6:	cmp    DWORD PTR [rax+0xac],0x0
  4088cd:	jne    40870d <__flatcc_fb_gen_common_c_header@@Base+0x7d>
  4088d3:	jmp    40872a <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  4088d8:	mov    edi,0xa
  4088dd:	mov    rsi,rax
  4088e0:	call   406120 <fputc@plt>
  4088e5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4088ec:	lea    rsi,[rip+0x27ce1]        # 4305d4 <_IO_stdin_used@@Base+0x25d4>
  4088f3:	mov    rdx,rbx
  4088f6:	mov    rcx,rbx
  4088f9:	xor    eax,eax
  4088fb:	call   406180 <fprintf@plt>
  408900:	mov    rdi,QWORD PTR [rbx+0xd0]
  408907:	sub    rsp,0x8
  40890b:	lea    rsi,[rip+0x27d95]        # 4306a7 <_IO_stdin_used@@Base+0x26a7>
  408912:	mov    rdx,rbx
  408915:	mov    rcx,rbx
  408918:	mov    r8,rbx
  40891b:	mov    r9,rbx
  40891e:	xor    eax,eax
  408920:	push   rbx
  408921:	call   406180 <fprintf@plt>
  408926:	add    rsp,0x10
  40892a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408931:	sub    rsp,0x8
  408935:	lea    rsi,[rip+0x27f15]        # 430851 <_IO_stdin_used@@Base+0x2851>
  40893c:	mov    rdx,rbx
  40893f:	mov    rcx,rbx
  408942:	mov    r8,rbx
  408945:	mov    r9,rbx
  408948:	xor    eax,eax
  40894a:	push   rbx
  40894b:	call   406180 <fprintf@plt>
  408950:	add    rsp,0x10
  408954:	mov    rdi,QWORD PTR [rbx+0xd0]
  40895b:	lea    rsi,[rip+0x27f8f]        # 4308f1 <_IO_stdin_used@@Base+0x28f1>
  408962:	mov    rdx,rbx
  408965:	mov    rcx,rbx
  408968:	mov    r8,rbx
  40896b:	xor    eax,eax
  40896d:	call   406180 <fprintf@plt>
  408972:	mov    rdi,QWORD PTR [rbx+0xd0]
  408979:	lea    rsi,[rip+0x2804b]        # 4309cb <_IO_stdin_used@@Base+0x29cb>
  408980:	mov    rdx,rbx
  408983:	mov    rcx,rbx
  408986:	mov    r8,rbx
  408989:	xor    eax,eax
  40898b:	call   406180 <fprintf@plt>
  408990:	mov    rdi,QWORD PTR [rbx+0xd0]
  408997:	lea    rsi,[rip+0x28107]        # 430aa5 <_IO_stdin_used@@Base+0x2aa5>
  40899e:	mov    rdx,rbx
  4089a1:	mov    rcx,rbx
  4089a4:	mov    r8,rbx
  4089a7:	xor    eax,eax
  4089a9:	call   406180 <fprintf@plt>
  4089ae:	mov    rdi,QWORD PTR [rbx+0xd0]
  4089b5:	sub    rsp,0x8
  4089b9:	lea    rsi,[rip+0x281bd]        # 430b7d <_IO_stdin_used@@Base+0x2b7d>
  4089c0:	mov    rdx,rbx
  4089c3:	mov    rcx,rbx
  4089c6:	mov    r8,rbx
  4089c9:	mov    r9,rbx
  4089cc:	xor    eax,eax
  4089ce:	push   rbx
  4089cf:	call   406180 <fprintf@plt>
  4089d4:	add    rsp,0x10
  4089d8:	mov    rax,QWORD PTR [rbx+0xd0]
  4089df:	mov    rcx,QWORD PTR [rbx+0xe0]
  4089e6:	cmp    DWORD PTR [rcx+0x24],0x0
  4089ea:	je     408a02 <__flatcc_fb_gen_common_c_header@@Base+0x372>
  4089ec:	lea    rsi,[rip+0x28272]        # 430c65 <_IO_stdin_used@@Base+0x2c65>
  4089f3:	mov    rdi,rax
  4089f6:	mov    rdx,rbx
  4089f9:	xor    eax,eax
  4089fb:	call   406180 <fprintf@plt>
  408a00:	jmp    408a0f <__flatcc_fb_gen_common_c_header@@Base+0x37f>
  408a02:	mov    edi,0xa
  408a07:	mov    rsi,rax
  408a0a:	call   406120 <fputc@plt>
  408a0f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a16:	lea    rsi,[rip+0x28272]        # 430c8f <_IO_stdin_used@@Base+0x2c8f>
  408a1d:	mov    rdx,rbx
  408a20:	mov    rcx,rbx
  408a23:	mov    r8,rbx
  408a26:	mov    r9,rbx
  408a29:	xor    eax,eax
  408a2b:	call   406180 <fprintf@plt>
  408a30:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a37:	lea    rsi,[rip+0x282f0]        # 430d2e <_IO_stdin_used@@Base+0x2d2e>
  408a3e:	mov    rdx,rbx
  408a41:	mov    rcx,rbx
  408a44:	xor    eax,eax
  408a46:	call   406180 <fprintf@plt>
  408a4b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a52:	lea    rsi,[rip+0x28317]        # 430d70 <_IO_stdin_used@@Base+0x2d70>
  408a59:	mov    rdx,rbx
  408a5c:	mov    rcx,rbx
  408a5f:	mov    r8,rbx
  408a62:	xor    eax,eax
  408a64:	call   406180 <fprintf@plt>
  408a69:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a70:	lea    rsi,[rip+0x28383]        # 430dfa <_IO_stdin_used@@Base+0x2dfa>
  408a77:	mov    rdx,rbx
  408a7a:	mov    rcx,rbx
  408a7d:	xor    eax,eax
  408a7f:	call   406180 <fprintf@plt>
  408a84:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a8b:	lea    rsi,[rip+0x283da]        # 430e6c <_IO_stdin_used@@Base+0x2e6c>
  408a92:	mov    rdx,rbx
  408a95:	mov    rcx,rbx
  408a98:	mov    r8,rbx
  408a9b:	mov    r9,rbx
  408a9e:	xor    eax,eax
  408aa0:	call   406180 <fprintf@plt>
  408aa5:	mov    rdi,QWORD PTR [rbx+0xd0]
  408aac:	lea    rsi,[rip+0x284d9]        # 430f8c <_IO_stdin_used@@Base+0x2f8c>
  408ab3:	mov    rdx,rbx
  408ab6:	mov    rcx,rbx
  408ab9:	xor    eax,eax
  408abb:	call   406180 <fprintf@plt>
  408ac0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ac7:	lea    rsi,[rip+0x28535]        # 431003 <_IO_stdin_used@@Base+0x3003>
  408ace:	mov    rdx,rbx
  408ad1:	mov    rcx,rbx
  408ad4:	xor    eax,eax
  408ad6:	call   406180 <fprintf@plt>
  408adb:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ae2:	lea    rsi,[rip+0x2859a]        # 431083 <_IO_stdin_used@@Base+0x3083>
  408ae9:	mov    rdx,rbx
  408aec:	mov    rcx,rbx
  408aef:	mov    r8,rbx
  408af2:	mov    r9,rbx
  408af5:	xor    eax,eax
  408af7:	call   406180 <fprintf@plt>
  408afc:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b03:	lea    rsi,[rip+0x285dc]        # 4310e6 <_IO_stdin_used@@Base+0x30e6>
  408b0a:	mov    rdx,rbx
  408b0d:	mov    rcx,rbx
  408b10:	mov    r8,rbx
  408b13:	mov    r9,rbx
  408b16:	mov    eax,0x0
  408b1b:	push   rbx
  408b1c:	push   rbx
  408b1d:	push   rbx
  408b1e:	push   rbx
  408b1f:	push   rbx
  408b20:	push   rbx
  408b21:	push   rbx
  408b22:	push   rbx
  408b23:	call   406180 <fprintf@plt>
  408b28:	add    rsp,0x40
  408b2c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b33:	lea    rsi,[rip+0x286cd]        # 431207 <_IO_stdin_used@@Base+0x3207>
  408b3a:	mov    rdx,rbx
  408b3d:	xor    eax,eax
  408b3f:	call   406180 <fprintf@plt>
  408b44:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b4b:	lea    rsi,[rip+0x286d7]        # 431229 <_IO_stdin_used@@Base+0x3229>
  408b52:	mov    rdx,rbx
  408b55:	mov    rcx,rbx
  408b58:	mov    r8,rbx
  408b5b:	mov    r9,rbx
  408b5e:	xor    eax,eax
  408b60:	call   406180 <fprintf@plt>
  408b65:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b6c:	sub    rsp,0x8
  408b70:	lea    rsi,[rip+0x28739]        # 4312b0 <_IO_stdin_used@@Base+0x32b0>
  408b77:	mov    rdx,rbx
  408b7a:	mov    rcx,rbx
  408b7d:	mov    r8,rbx
  408b80:	mov    r9,rbx
  408b83:	mov    eax,0x0
  408b88:	push   rbx
  408b89:	push   rbx
  408b8a:	push   rbx
  408b8b:	push   rbx
  408b8c:	push   rbx
  408b8d:	push   rbx
  408b8e:	push   rbx
  408b8f:	push   rbx
  408b90:	push   rbx
  408b91:	push   rbx
  408b92:	push   rbx
  408b93:	push   rbx
  408b94:	push   rbx
  408b95:	call   406180 <fprintf@plt>
  408b9a:	add    rsp,0x70
  408b9e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ba5:	lea    rsi,[rip+0x2a0b6]        # 432c62 <_IO_stdin_used@@Base+0x4c62>
  408bac:	mov    rdx,rbx
  408baf:	mov    rcx,rbx
  408bb2:	mov    r8,rbx
  408bb5:	mov    r9,rbx
  408bb8:	mov    eax,0x0
  408bbd:	push   rbx
  408bbe:	push   rbx
  408bbf:	push   rbx
  408bc0:	push   rbx
  408bc1:	call   406180 <fprintf@plt>
  408bc6:	add    rsp,0x20
  408bca:	mov    rdi,QWORD PTR [rbx+0xd0]
  408bd1:	lea    rsi,[rip+0x2a14d]        # 432d25 <_IO_stdin_used@@Base+0x4d25>
  408bd8:	mov    rdx,rbx
  408bdb:	mov    rcx,rbx
  408bde:	mov    r8,rbx
  408be1:	mov    r9,rbx
  408be4:	xor    eax,eax
  408be6:	call   406180 <fprintf@plt>
  408beb:	mov    rdi,QWORD PTR [rbx+0xd0]
  408bf2:	lea    rsi,[rip+0x2a1c5]        # 432dbe <_IO_stdin_used@@Base+0x4dbe>
  408bf9:	mov    rdx,rbx
  408bfc:	mov    rcx,rbx
  408bff:	mov    r8,rbx
  408c02:	mov    r9,rbx
  408c05:	xor    eax,eax
  408c07:	call   406180 <fprintf@plt>
  408c0c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c13:	lea    rsi,[rip+0x2a21b]        # 432e35 <_IO_stdin_used@@Base+0x4e35>
  408c1a:	mov    rdx,rbx
  408c1d:	xor    eax,eax
  408c1f:	call   406180 <fprintf@plt>
  408c24:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c2b:	lea    rsi,[rip+0x2a4d4]        # 433106 <_IO_stdin_used@@Base+0x5106>
  408c32:	mov    rdx,rbx
  408c35:	xor    eax,eax
  408c37:	call   406180 <fprintf@plt>
  408c3c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c43:	lea    rsi,[rip+0x2a74e]        # 433398 <_IO_stdin_used@@Base+0x5398>
  408c4a:	mov    rdx,rbx
  408c4d:	xor    eax,eax
  408c4f:	call   406180 <fprintf@plt>
  408c54:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c5b:	lea    rsi,[rip+0x2a7b7]        # 433419 <_IO_stdin_used@@Base+0x5419>
  408c62:	mov    rdx,rbx
  408c65:	xor    eax,eax
  408c67:	call   406180 <fprintf@plt>
  408c6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c73:	lea    rsi,[rip+0x2a80d]        # 433487 <_IO_stdin_used@@Base+0x5487>
  408c7a:	mov    rdx,rbx
  408c7d:	xor    eax,eax
  408c7f:	call   406180 <fprintf@plt>
  408c84:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c8b:	lea    rsi,[rip+0x2a9d9]        # 43366b <_IO_stdin_used@@Base+0x566b>
  408c92:	mov    rdx,rbx
  408c95:	mov    rcx,rbx
  408c98:	mov    r8,rbx
  408c9b:	mov    r9,rbx
  408c9e:	xor    eax,eax
  408ca0:	call   406180 <fprintf@plt>
  408ca5:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cac:	lea    rsi,[rip+0x2aa61]        # 433714 <_IO_stdin_used@@Base+0x5714>
  408cb3:	mov    rdx,rbx
  408cb6:	mov    rcx,rbx
  408cb9:	mov    r8,rbx
  408cbc:	mov    r9,rbx
  408cbf:	mov    eax,0x0
  408cc4:	push   rbx
  408cc5:	push   rbx
  408cc6:	call   406180 <fprintf@plt>
  408ccb:	add    rsp,0x10
  408ccf:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cd6:	lea    rsi,[rip+0x2ac12]        # 4338ef <_IO_stdin_used@@Base+0x58ef>
  408cdd:	mov    rdx,rbx
  408ce0:	mov    rcx,rbx
  408ce3:	mov    r8,rbx
  408ce6:	xor    eax,eax
  408ce8:	call   406180 <fprintf@plt>
  408ced:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cf4:	sub    rsp,0x8
  408cf8:	lea    rsi,[rip+0x2ae0a]        # 433b09 <_IO_stdin_used@@Base+0x5b09>
  408cff:	mov    rdx,rbx
  408d02:	mov    rcx,rbx
  408d05:	mov    r8,rbx
  408d08:	mov    r9,rbx
  408d0b:	mov    eax,0x0
  408d10:	push   rbx
  408d11:	push   rbx
  408d12:	push   rbx
  408d13:	push   rbx
  408d14:	push   rbx
  408d15:	push   rbx
  408d16:	push   rbx
  408d17:	call   406180 <fprintf@plt>
  408d1c:	add    rsp,0x40
  408d20:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d27:	lea    rsi,[rip+0x2af32]        # 433c60 <_IO_stdin_used@@Base+0x5c60>
  408d2e:	mov    rdx,rbx
  408d31:	mov    rcx,rbx
  408d34:	xor    eax,eax
  408d36:	call   406180 <fprintf@plt>
  408d3b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d42:	lea    rsi,[rip+0x2afe6]        # 433d2f <_IO_stdin_used@@Base+0x5d2f>
  408d49:	mov    rdx,rbx
  408d4c:	mov    rcx,rbx
  408d4f:	mov    r8,rbx
  408d52:	xor    eax,eax
  408d54:	call   406180 <fprintf@plt>
  408d59:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d60:	lea    rsi,[rip+0x2b07d]        # 433de4 <_IO_stdin_used@@Base+0x5de4>
  408d67:	mov    rdx,rbx
  408d6a:	mov    rcx,rbx
  408d6d:	mov    r8,rbx
  408d70:	xor    eax,eax
  408d72:	call   406180 <fprintf@plt>
  408d77:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d7e:	lea    rsi,[rip+0x2b214]        # 433f99 <_IO_stdin_used@@Base+0x5f99>
  408d85:	mov    rdx,rbx
  408d88:	xor    eax,eax
  408d8a:	call   406180 <fprintf@plt>
  408d8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d96:	lea    rsi,[rip+0x2b2a6]        # 434043 <_IO_stdin_used@@Base+0x6043>
  408d9d:	mov    rdx,rbx
  408da0:	xor    eax,eax
  408da2:	call   406180 <fprintf@plt>
  408da7:	mov    rdi,QWORD PTR [rbx+0xd0]
  408dae:	lea    rsi,[rip+0x2b3bb]        # 434170 <_IO_stdin_used@@Base+0x6170>
  408db5:	mov    rdx,rbx
  408db8:	mov    rcx,rbx
  408dbb:	xor    eax,eax
  408dbd:	call   406180 <fprintf@plt>
  408dc2:	mov    rdi,QWORD PTR [rbx+0xd0]
  408dc9:	lea    rsi,[rip+0x2b4f0]        # 4342c0 <_IO_stdin_used@@Base+0x62c0>
  408dd0:	mov    rdx,rbx
  408dd3:	mov    rcx,rbx
  408dd6:	xor    eax,eax
  408dd8:	call   406180 <fprintf@plt>
  408ddd:	mov    rdi,QWORD PTR [rbx+0xd0]
  408de4:	sub    rsp,0x8
  408de8:	lea    rsi,[rip+0x2b5a5]        # 434394 <_IO_stdin_used@@Base+0x6394>
  408def:	mov    rdx,rbx
  408df2:	mov    rcx,rbx
  408df5:	mov    r8,rbx
  408df8:	mov    r9,rbx
  408dfb:	mov    eax,0x0
  408e00:	push   rbx
  408e01:	push   rbx
  408e02:	push   rbx
  408e03:	push   rbx
  408e04:	push   rbx
  408e05:	push   rbx
  408e06:	push   rbx
  408e07:	call   406180 <fprintf@plt>
  408e0c:	add    rsp,0x40
  408e10:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e17:	sub    rsp,0x8
  408e1b:	lea    rsi,[rip+0x2b6ed]        # 43450f <_IO_stdin_used@@Base+0x650f>
  408e22:	mov    rdx,rbx
  408e25:	mov    rcx,rbx
  408e28:	mov    r8,rbx
  408e2b:	mov    r9,rbx
  408e2e:	mov    eax,0x0
  408e33:	push   rbx
  408e34:	push   rbx
  408e35:	push   rbx
  408e36:	push   rbx
  408e37:	push   rbx
  408e38:	push   rbx
  408e39:	push   rbx
  408e3a:	call   406180 <fprintf@plt>
  408e3f:	add    rsp,0x40
  408e43:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e4a:	sub    rsp,0x8
  408e4e:	lea    rsi,[rip+0x2b83b]        # 434690 <_IO_stdin_used@@Base+0x6690>
  408e55:	mov    rdx,rbx
  408e58:	mov    rcx,rbx
  408e5b:	mov    r8,rbx
  408e5e:	mov    r9,rbx
  408e61:	mov    eax,0x0
  408e66:	push   rbx
  408e67:	push   rbx
  408e68:	push   rbx
  408e69:	call   406180 <fprintf@plt>
  408e6e:	add    rsp,0x20
  408e72:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e79:	sub    rsp,0x8
  408e7d:	lea    rsi,[rip+0x2bb61]        # 4349e5 <_IO_stdin_used@@Base+0x69e5>
  408e84:	mov    rdx,rbx
  408e87:	mov    rcx,rbx
  408e8a:	mov    r8,rbx
  408e8d:	mov    r9,rbx
  408e90:	mov    eax,0x0
  408e95:	push   rbx
  408e96:	push   rbx
  408e97:	push   rbx
  408e98:	push   rbx
  408e99:	push   rbx
  408e9a:	push   rbx
  408e9b:	push   rbx
  408e9c:	call   406180 <fprintf@plt>
  408ea1:	add    rsp,0x40
  408ea5:	mov    rdi,QWORD PTR [rbx+0xd0]
  408eac:	sub    rsp,0x8
  408eb0:	lea    rsi,[rip+0x2be4e]        # 434d05 <_IO_stdin_used@@Base+0x6d05>
  408eb7:	mov    rdx,rbx
  408eba:	mov    rcx,rbx
  408ebd:	mov    r8,rbx
  408ec0:	mov    r9,rbx
  408ec3:	mov    eax,0x0
  408ec8:	push   rbx
  408ec9:	push   rbx
  408eca:	push   rbx
  408ecb:	push   rbx
  408ecc:	push   rbx
  408ecd:	push   rbx
  408ece:	push   rbx
  408ecf:	push   rbx
  408ed0:	push   rbx
  408ed1:	call   406180 <fprintf@plt>
  408ed6:	add    rsp,0x50
  408eda:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ee1:	lea    rsi,[rip+0x2c4e6]        # 4353ce <_IO_stdin_used@@Base+0x73ce>
  408ee8:	mov    rdx,rbx
  408eeb:	xor    eax,eax
  408eed:	call   406180 <fprintf@plt>
  408ef2:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ef9:	lea    rsi,[rip+0x2c71e]        # 43561e <_IO_stdin_used@@Base+0x761e>
  408f00:	mov    rdx,rbx
  408f03:	xor    eax,eax
  408f05:	call   406180 <fprintf@plt>
  408f0a:	mov    rax,QWORD PTR [rbx+0xe0]
  408f11:	cmp    DWORD PTR [rax+0xa8],0x0
  408f18:	je     408f24 <__flatcc_fb_gen_common_c_header@@Base+0x894>
  408f1a:	mov    rdi,rbx
  408f1d:	call   40bec0 <__flatcc_gen_sort@@Base>
  408f22:	jmp    408f41 <__flatcc_fb_gen_common_c_header@@Base+0x8b1>
  408f24:	mov    rcx,QWORD PTR [rbx+0xd0]
  408f2b:	lea    rdi,[rip+0x2852d]        # 43145f <_IO_stdin_used@@Base+0x345f>
  408f32:	mov    esi,0x14
  408f37:	mov    edx,0x1
  408f3c:	call   406230 <fwrite@plt>
  408f41:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f48:	sub    rsp,0x8
  408f4c:	lea    rsi,[rip+0x28521]        # 431474 <_IO_stdin_used@@Base+0x3474>
  408f53:	mov    rdx,rbx
  408f56:	mov    rcx,rbx
  408f59:	mov    r8,rbx
  408f5c:	mov    r9,rbx
  408f5f:	xor    eax,eax
  408f61:	push   rbx
  408f62:	call   406180 <fprintf@plt>
  408f67:	add    rsp,0x10
  408f6b:	mov    rax,QWORD PTR [rbx+0xd0]
  408f72:	mov    rcx,QWORD PTR [rbx+0xe0]
  408f79:	cmp    DWORD PTR [rcx+0xa8],0x0
  408f80:	je     408f98 <__flatcc_fb_gen_common_c_header@@Base+0x908>
  408f82:	lea    rsi,[rip+0x285cc]        # 431555 <_IO_stdin_used@@Base+0x3555>
  408f89:	mov    rdi,rax
  408f8c:	mov    rdx,rbx
  408f8f:	xor    eax,eax
  408f91:	call   406180 <fprintf@plt>
  408f96:	jmp    408fa5 <__flatcc_fb_gen_common_c_header@@Base+0x915>
  408f98:	mov    edi,0xa
  408f9d:	mov    rsi,rax
  408fa0:	call   406120 <fputc@plt>
  408fa5:	mov    rsi,QWORD PTR [rbx+0xd0]
  408fac:	mov    edi,0xa
  408fb1:	call   406120 <fputc@plt>
  408fb6:	mov    rdi,QWORD PTR [rbx+0xd0]
  408fbd:	lea    rsi,[rip+0x285b1]        # 431575 <_IO_stdin_used@@Base+0x3575>
  408fc4:	mov    rdx,rbx
  408fc7:	mov    rcx,rbx
  408fca:	mov    r8,rbx
  408fcd:	xor    eax,eax
  408fcf:	call   406180 <fprintf@plt>
  408fd4:	mov    rdi,QWORD PTR [rbx+0xd0]
  408fdb:	lea    rsi,[rip+0x28613]        # 4315f5 <_IO_stdin_used@@Base+0x35f5>
  408fe2:	mov    rdx,rbx
  408fe5:	mov    rcx,rbx
  408fe8:	mov    r8,rbx
  408feb:	mov    r9,rbx
  408fee:	mov    eax,0x0
  408ff3:	push   rbx
  408ff4:	push   rbx
  408ff5:	push   rbx
  408ff6:	push   rbx
  408ff7:	push   rbx
  408ff8:	push   rbx
  408ff9:	push   rbx
  408ffa:	push   rbx
  408ffb:	push   rbx
  408ffc:	push   rbx
  408ffd:	push   rbx
  408ffe:	push   rbx
  408fff:	push   rbx
  409000:	push   rbx
  409001:	push   rbx
  409002:	push   rbx
  409003:	push   rbx
  409004:	push   rbx
  409005:	push   rbx
  409006:	push   rbx
  409007:	push   rbx
  409008:	push   rbx
  409009:	call   406180 <fprintf@plt>
  40900e:	add    rsp,0xb0
  409015:	mov    rdi,QWORD PTR [rbx+0xd0]
  40901c:	lea    rsi,[rip+0x287e5]        # 431808 <_IO_stdin_used@@Base+0x3808>
  409023:	mov    rdx,rbx
  409026:	mov    rcx,rbx
  409029:	mov    r8,rbx
  40902c:	mov    r9,rbx
  40902f:	mov    eax,0x0
  409034:	push   rbx
  409035:	push   rbx
  409036:	push   rbx
  409037:	push   rbx
  409038:	push   rbx
  409039:	push   rbx
  40903a:	push   rbx
  40903b:	push   rbx
  40903c:	call   406180 <fprintf@plt>
  409041:	add    rsp,0x40
  409045:	mov    rdi,QWORD PTR [rbx+0xd0]
  40904c:	lea    rsi,[rip+0x288ff]        # 431952 <_IO_stdin_used@@Base+0x3952>
  409053:	mov    rdx,rbx
  409056:	mov    rcx,rbx
  409059:	mov    r8,rbx
  40905c:	mov    r9,rbx
  40905f:	mov    eax,0x0
  409064:	push   rbx
  409065:	push   rbx
  409066:	push   rbx
  409067:	push   rbx
  409068:	push   rbx
  409069:	push   rbx
  40906a:	push   rbx
  40906b:	push   rbx
  40906c:	push   rbx
  40906d:	push   rbx
  40906e:	push   rbx
  40906f:	push   rbx
  409070:	push   rbx
  409071:	push   rbx
  409072:	push   rbx
  409073:	push   rbx
  409074:	push   rbx
  409075:	push   rbx
  409076:	push   rbx
  409077:	push   rbx
  409078:	push   rbx
  409079:	push   rbx
  40907a:	push   rbx
  40907b:	push   rbx
  40907c:	push   rbx
  40907d:	push   rbx
  40907e:	push   rbx
  40907f:	push   rbx
  409080:	push   rbx
  409081:	push   rbx
  409082:	push   rbx
  409083:	push   rbx
  409084:	push   rbx
  409085:	push   rbx
  409086:	push   rbx
  409087:	push   rbx
  409088:	push   rbx
  409089:	push   rbx
  40908a:	push   rbx
  40908b:	push   rbx
  40908c:	push   rbx
  40908d:	push   rbx
  40908e:	push   rbx
  40908f:	push   rbx
  409090:	push   rbx
  409091:	push   rbx
  409092:	push   rbx
  409093:	push   rbx
  409094:	push   rbx
  409095:	push   rbx
  409096:	push   rbx
  409097:	push   rbx
  409098:	push   rbx
  409099:	push   rbx
  40909a:	push   rbx
  40909b:	push   rbx
  40909c:	call   406180 <fprintf@plt>
  4090a1:	add    rsp,0x1c0
  4090a8:	mov    rax,QWORD PTR [rbx+0xe0]
  4090af:	cmp    DWORD PTR [rax+0xa8],0x0
  4090b6:	je     4090d0 <__flatcc_fb_gen_common_c_header@@Base+0xa40>
  4090b8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090bf:	lea    rsi,[rip+0x28f45]        # 43200b <_IO_stdin_used@@Base+0x400b>
  4090c6:	mov    rdx,rbx
  4090c9:	xor    eax,eax
  4090cb:	call   406180 <fprintf@plt>
  4090d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090d7:	lea    rsi,[rip+0x28f47]        # 432025 <_IO_stdin_used@@Base+0x4025>
  4090de:	mov    rdx,rbx
  4090e1:	mov    rcx,rbx
  4090e4:	xor    eax,eax
  4090e6:	call   406180 <fprintf@plt>
  4090eb:	mov    rax,QWORD PTR [rbx+0xd0]
  4090f2:	mov    rcx,QWORD PTR [rbx+0xe0]
  4090f9:	cmp    DWORD PTR [rcx+0x24],0x0
  4090fd:	je     409115 <__flatcc_fb_gen_common_c_header@@Base+0xa85>
  4090ff:	lea    rsi,[rip+0x274a1]        # 4305a7 <_IO_stdin_used@@Base+0x25a7>
  409106:	mov    rdi,rax
  409109:	mov    rdx,rbx
  40910c:	xor    eax,eax
  40910e:	call   406180 <fprintf@plt>
  409113:	jmp    409122 <__flatcc_fb_gen_common_c_header@@Base+0xa92>
  409115:	mov    edi,0xa
  40911a:	mov    rsi,rax
  40911d:	call   406120 <fputc@plt>
  409122:	mov    rdi,QWORD PTR [rbx+0xd0]
  409129:	lea    rsi,[rip+0x28f8e]        # 4320be <_IO_stdin_used@@Base+0x40be>
  409130:	mov    rdx,rbx
  409133:	xor    eax,eax
  409135:	call   406180 <fprintf@plt>
  40913a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409141:	lea    rsi,[rip+0x28ff5]        # 43213d <_IO_stdin_used@@Base+0x413d>
  409148:	mov    rdx,rbx
  40914b:	mov    rcx,rbx
  40914e:	mov    r8,rbx
  409151:	mov    r9,rbx
  409154:	mov    eax,0x0
  409159:	push   rbx
  40915a:	push   rbx
  40915b:	push   rbx
  40915c:	push   rbx
  40915d:	push   rbx
  40915e:	push   rbx
  40915f:	push   rbx
  409160:	push   rbx
  409161:	push   rbx
  409162:	push   rbx
  409163:	call   406180 <fprintf@plt>
  409168:	add    rsp,0x50
  40916c:	mov    rdi,QWORD PTR [rbx+0xd0]
  409173:	lea    rsi,[rip+0x2930c]        # 432486 <_IO_stdin_used@@Base+0x4486>
  40917a:	mov    rdx,rbx
  40917d:	mov    rcx,rbx
  409180:	mov    r8,rbx
  409183:	xor    eax,eax
  409185:	call   406180 <fprintf@plt>
  40918a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409191:	lea    rsi,[rip+0x293a5]        # 43253d <_IO_stdin_used@@Base+0x453d>
  409198:	mov    rdx,rbx
  40919b:	mov    rcx,rbx
  40919e:	mov    r8,rbx
  4091a1:	mov    r9,rbx
  4091a4:	mov    eax,0x0
  4091a9:	push   rbx
  4091aa:	push   rbx
  4091ab:	call   406180 <fprintf@plt>
  4091b0:	add    rsp,0x10
  4091b4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091bb:	lea    rsi,[rip+0x29542]        # 432704 <_IO_stdin_used@@Base+0x4704>
  4091c2:	mov    rdx,rbx
  4091c5:	mov    rcx,rbx
  4091c8:	mov    r8,rbx
  4091cb:	mov    r9,rbx
  4091ce:	xor    eax,eax
  4091d0:	call   406180 <fprintf@plt>
  4091d5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091dc:	lea    rsi,[rip+0x2979d]        # 432980 <_IO_stdin_used@@Base+0x4980>
  4091e3:	mov    rdx,rbx
  4091e6:	mov    rcx,rbx
  4091e9:	mov    r8,rbx
  4091ec:	mov    r9,rbx
  4091ef:	mov    eax,0x0
  4091f4:	push   rbx
  4091f5:	push   rbx
  4091f6:	push   rbx
  4091f7:	push   rbx
  4091f8:	push   rbx
  4091f9:	push   rbx
  4091fa:	call   406180 <fprintf@plt>
  4091ff:	add    rsp,0x30
  409203:	mov    rsi,QWORD PTR [rbx+0xd0]
  40920a:	mov    edi,0xa
  40920f:	call   406120 <fputc@plt>
  409214:	mov    rax,QWORD PTR [rbx+0xe0]
  40921b:	cmp    DWORD PTR [rax+0xac],0x0
  409222:	je     409241 <__flatcc_fb_gen_common_c_header@@Base+0xbb1>
  409224:	mov    rcx,QWORD PTR [rbx+0xd0]
  40922b:	lea    rdi,[rip+0x2c8ad]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  409232:	mov    esi,0x24
  409237:	mov    edx,0x1
  40923c:	call   406230 <fwrite@plt>
  409241:	mov    rdi,QWORD PTR [rbx+0xd0]
  409248:	lea    rsi,[rip+0x269bf]        # 42fc0e <_IO_stdin_used@@Base+0x1c0e>
  40924f:	mov    rdx,r14
  409252:	xor    eax,eax
  409254:	call   406180 <fprintf@plt>
  409259:	xor    eax,eax
  40925b:	add    rsp,0x8
  40925f:	pop    rbx
  409260:	pop    r14
  409262:	ret    
  409263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40926d:	nop    DWORD PTR [rax]

0000000000409270 <__flatcc_fb_gen_c_reader@@Base>:
  409270:	push   rbp
  409271:	mov    rbp,rsp
  409274:	push   r15
  409276:	push   r14
  409278:	push   r13
  40927a:	push   r12
  40927c:	push   rbx
  40927d:	and    rsp,0xffffffffffffffe0
  409281:	sub    rsp,0x4e0
  409288:	mov    r12,rdi
  40928b:	lea    r14,[rdi+0x66]
  40928f:	mov    rax,QWORD PTR [rdi+0xe0]
  409296:	mov    rdi,QWORD PTR [rdi+0xd0]
  40929d:	mov    rcx,QWORD PTR [r12+0xd8]
  4092a5:	mov    rcx,QWORD PTR [rcx+0x118]
  4092ac:	mov    ebx,DWORD PTR [rax+0xa4]
  4092b2:	lea    rsi,[rip+0x2c84b]        # 435b04 <_IO_stdin_used@@Base+0x7b04>
  4092b9:	mov    rdx,rcx
  4092bc:	xor    eax,eax
  4092be:	call   406180 <fprintf@plt>
  4092c3:	mov    rcx,QWORD PTR [r12+0xd0]
  4092cb:	lea    rdi,[rip+0x2682d]        # 42faff <_IO_stdin_used@@Base+0x1aff>
  4092d2:	mov    esi,0x51
  4092d7:	mov    edx,0x1
  4092dc:	call   406230 <fwrite@plt>
  4092e1:	mov    rcx,QWORD PTR [r12+0xd0]
  4092e9:	test   ebx,ebx
  4092eb:	je     40934b <__flatcc_fb_gen_c_reader@@Base+0xdb>
  4092ed:	lea    rdi,[rip+0x2c839]        # 435b2d <_IO_stdin_used@@Base+0x7b2d>
  4092f4:	mov    esi,0x1bb
  4092f9:	mov    edx,0x1
  4092fe:	call   406230 <fwrite@plt>
  409303:	mov    rdi,QWORD PTR [r12+0xd0]
  40930b:	lea    rsi,[rip+0x2c9d7]        # 435ce9 <_IO_stdin_used@@Base+0x7ce9>
  409312:	mov    rdx,r14
  409315:	mov    rcx,r12
  409318:	xor    eax,eax
  40931a:	call   406180 <fprintf@plt>
  40931f:	lea    rsi,[rip+0x3d866]        # 446b8c <_IO_stdin_used@@Base+0x18b8c>
  409326:	lea    rdx,[rip+0x2c9fc]        # 435d29 <_IO_stdin_used@@Base+0x7d29>
  40932d:	mov    rdi,r12
  409330:	call   407ec0 <__flatcc_fb_gen_c_includes@@Base>
  409335:	mov    rcx,QWORD PTR [r12+0xd0]
  40933d:	lea    rdi,[rip+0x2c9ef]        # 435d33 <_IO_stdin_used@@Base+0x7d33>
  409344:	mov    esi,0x27
  409349:	jmp    4093aa <__flatcc_fb_gen_c_reader@@Base+0x13a>
  40934b:	lea    rsi,[rip+0x2c997]        # 435ce9 <_IO_stdin_used@@Base+0x7ce9>
  409352:	mov    rdi,rcx
  409355:	mov    rdx,r14
  409358:	mov    rcx,r12
  40935b:	xor    eax,eax
  40935d:	call   406180 <fprintf@plt>
  409362:	lea    rsi,[rip+0x3d823]        # 446b8c <_IO_stdin_used@@Base+0x18b8c>
  409369:	lea    rdx,[rip+0x2c9b9]        # 435d29 <_IO_stdin_used@@Base+0x7d29>
  409370:	mov    rdi,r12
  409373:	call   407ec0 <__flatcc_fb_gen_c_includes@@Base>
  409378:	mov    rcx,QWORD PTR [r12+0xd0]
  409380:	lea    rdi,[rip+0x2c9ac]        # 435d33 <_IO_stdin_used@@Base+0x7d33>
  409387:	mov    esi,0x27
  40938c:	mov    edx,0x1
  409391:	call   406230 <fwrite@plt>
  409396:	mov    rcx,QWORD PTR [r12+0xd0]
  40939e:	lea    rdi,[rip+0x2c9b6]        # 435d5b <_IO_stdin_used@@Base+0x7d5b>
  4093a5:	mov    esi,0x3a
  4093aa:	mov    edx,0x1
  4093af:	call   406230 <fwrite@plt>
  4093b4:	lea    r13,[r12+0xd0]
  4093bc:	mov    rax,QWORD PTR [r12+0xe0]
  4093c4:	cmp    DWORD PTR [rax+0xac],0x0
  4093cb:	je     4093e7 <__flatcc_fb_gen_c_reader@@Base+0x177>
  4093cd:	mov    rcx,QWORD PTR [r13+0x0]
  4093d1:	lea    rdi,[rip+0x2691d]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  4093d8:	mov    esi,0x24
  4093dd:	mov    edx,0x1
  4093e2:	call   406230 <fwrite@plt>
  4093e7:	mov    rdi,QWORD PTR [r12+0xd0]
  4093ef:	mov    rax,QWORD PTR [r12+0xd8]
  4093f7:	cmp    WORD PTR [rax+0x20],0x2
  4093fc:	jne    40941c <__flatcc_fb_gen_c_reader@@Base+0x1ac>
  4093fe:	mov    r8d,DWORD PTR [rax+0x18]
  409402:	mov    r9,QWORD PTR [rax+0x10]
  409406:	lea    rsi,[rip+0x2c989]        # 435d96 <_IO_stdin_used@@Base+0x7d96>
  40940d:	mov    rdx,r12
  409410:	mov    rcx,r12
  409413:	xor    eax,eax
  409415:	call   406180 <fprintf@plt>
  40941a:	jmp    409430 <__flatcc_fb_gen_c_reader@@Base+0x1c0>
  40941c:	lea    rsi,[rip+0x2c9a4]        # 435dc7 <_IO_stdin_used@@Base+0x7dc7>
  409423:	mov    rdx,r12
  409426:	mov    rcx,r12
  409429:	xor    eax,eax
  40942b:	call   406180 <fprintf@plt>
  409430:	mov    rdi,QWORD PTR [r12+0xd0]
  409438:	mov    rax,QWORD PTR [r12+0xd8]
  409440:	cmp    WORD PTR [rax+0x38],0x2
  409445:	jne    409465 <__flatcc_fb_gen_c_reader@@Base+0x1f5>
  409447:	mov    r8d,DWORD PTR [rax+0x30]
  40944b:	mov    r9,QWORD PTR [rax+0x28]
  40944f:	lea    rsi,[rip+0x2c9a5]        # 435dfb <_IO_stdin_used@@Base+0x7dfb>
  409456:	mov    rdx,r12
  409459:	mov    rcx,r12
  40945c:	xor    eax,eax
  40945e:	call   406180 <fprintf@plt>
  409463:	jmp    409485 <__flatcc_fb_gen_c_reader@@Base+0x215>
  409465:	mov    rax,QWORD PTR [r12+0xe0]
  40946d:	mov    r8,QWORD PTR [rax+0x78]
  409471:	lea    rsi,[rip+0x2c9b3]        # 435e2b <_IO_stdin_used@@Base+0x7e2b>
  409478:	mov    rdx,r12
  40947b:	mov    rcx,r12
  40947e:	xor    eax,eax
  409480:	call   406180 <fprintf@plt>
  409485:	mov    rsi,QWORD PTR [r12+0xd0]
  40948d:	mov    edi,0xa
  409492:	call   406120 <fputc@plt>
  409497:	mov    rax,QWORD PTR [r12+0xd8]
  40949f:	mov    rbx,QWORD PTR [rax+0x48]
  4094a3:	test   rbx,rbx
  4094a6:	je     4094c7 <__flatcc_fb_gen_c_reader@@Base+0x257>
  4094a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4094b0:	mov    rdi,r12
  4094b3:	mov    rsi,rbx
  4094b6:	call   40b540 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
  4094bb:	mov    rbx,QWORD PTR [rbx+0xc0]
  4094c2:	test   rbx,rbx
  4094c5:	jne    4094b0 <__flatcc_fb_gen_c_reader@@Base+0x240>
  4094c7:	mov    rsi,QWORD PTR [r12+0xd0]
  4094cf:	mov    edi,0xa
  4094d4:	call   406120 <fputc@plt>
  4094d9:	mov    rax,QWORD PTR [r12+0xd8]
  4094e1:	mov    rbx,QWORD PTR [rax+0x40]
  4094e5:	test   rbx,rbx
  4094e8:	mov    QWORD PTR [rsp+0x18],r12
  4094ed:	jne    409508 <__flatcc_fb_gen_c_reader@@Base+0x298>
  4094ef:	jmp    409764 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
  4094f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094fe:	xchg   ax,ax
  409500:	mov    rbx,QWORD PTR [rbx]
  409503:	test   rbx,rbx
  409506:	je     40951c <__flatcc_fb_gen_c_reader@@Base+0x2ac>
  409508:	cmp    WORD PTR [rbx+0x10],0x0
  40950d:	jne    409500 <__flatcc_fb_gen_c_reader@@Base+0x290>
  40950f:	mov    rdi,r12
  409512:	mov    rsi,rbx
  409515:	call   40b540 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
  40951a:	jmp    409500 <__flatcc_fb_gen_c_reader@@Base+0x290>
  40951c:	mov    rax,QWORD PTR [r12+0xd8]
  409524:	mov    rbx,QWORD PTR [rax+0x40]
  409528:	test   rbx,rbx
  40952b:	jne    40954c <__flatcc_fb_gen_c_reader@@Base+0x2dc>
  40952d:	jmp    409764 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
  409532:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40953c:	nop    DWORD PTR [rax+0x0]
  409540:	mov    rbx,QWORD PTR [rbx]
  409543:	test   rbx,rbx
  409546:	je     409764 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
  40954c:	cmp    WORD PTR [rbx+0x10],0x1
  409551:	ja     409540 <__flatcc_fb_gen_c_reader@@Base+0x2d0>
  409553:	vxorps xmm0,xmm0,xmm0
  409557:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  409560:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  409569:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  409572:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40957b:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  409584:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40958d:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  409593:	mov    QWORD PTR [rsp+0x140],0x0
  40959f:	mov    rdi,QWORD PTR [rbx+0x18]
  4095a3:	mov    rsi,rbx
  4095a6:	lea    r15,[rsp+0x60]
  4095ab:	mov    rdx,r15
  4095ae:	vzeroupper 
  4095b1:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  4095b6:	mov    r12d,DWORD PTR [rbx+0xa0]
  4095bd:	mov    r14,r12
  4095c0:	shr    r14,0x1d
  4095c4:	mov    rax,QWORD PTR [rsp+0x18]
  4095c9:	mov    rdi,QWORD PTR [rax+0xd0]
  4095d0:	lea    rsi,[rip+0x2ca46]        # 43601d <_IO_stdin_used@@Base+0x801d>
  4095d7:	mov    rdx,r15
  4095da:	mov    rcx,r15
  4095dd:	mov    r8,QWORD PTR [rsp+0x18]
  4095e2:	xor    eax,eax
  4095e4:	call   406180 <fprintf@plt>
  4095e9:	mov    rax,QWORD PTR [rsp+0x18]
  4095ee:	mov    rdi,QWORD PTR [rax+0xd0]
  4095f5:	lea    rsi,[rip+0x2ca62]        # 43605e <_IO_stdin_used@@Base+0x805e>
  4095fc:	mov    rdx,r15
  4095ff:	mov    rcx,QWORD PTR [rsp+0x18]
  409604:	mov    r8,r12
  409607:	xor    eax,eax
  409609:	call   406180 <fprintf@plt>
  40960e:	mov    ecx,r12d
  409611:	and    ecx,0xf
  409614:	cmp    ecx,0x9
  409617:	mov    r8d,0x30
  40961d:	mov    r11d,0x57
  409623:	cmova  r8d,r11d
  409627:	add    r8d,ecx
  40962a:	mov    edx,r12d
  40962d:	shr    edx,0x4
  409630:	and    edx,0xf
  409633:	cmp    edx,0x9
  409636:	mov    r9d,0x30
  40963c:	cmova  r9d,r11d
  409640:	add    r9d,edx
  409643:	mov    esi,r12d
  409646:	shr    esi,0x8
  409649:	and    esi,0xf
  40964c:	cmp    esi,0x9
  40964f:	mov    r10d,0x30
  409655:	cmova  r10d,r11d
  409659:	add    r10d,esi
  40965c:	mov    edi,r12d
  40965f:	shr    edi,0xc
  409662:	and    edi,0xf
  409665:	cmp    edi,0x9
  409668:	mov    esi,0x30
  40966d:	cmova  esi,r11d
  409671:	add    esi,edi
  409673:	mov    eax,r12d
  409676:	shr    eax,0x10
  409679:	and    eax,0xf
  40967c:	cmp    eax,0x9
  40967f:	mov    edi,0x30
  409684:	cmova  edi,r11d
  409688:	add    edi,eax
  40968a:	mov    eax,r12d
  40968d:	shr    eax,0x14
  409690:	and    eax,0xf
  409693:	cmp    eax,0x9
  409696:	mov    ecx,0x30
  40969b:	cmova  ecx,r11d
  40969f:	add    ecx,eax
  4096a1:	mov    eax,r12d
  4096a4:	shr    eax,0x18
  4096a7:	and    eax,0xf
  4096aa:	cmp    eax,0x9
  4096ad:	mov    edx,0x30
  4096b2:	cmova  edx,r11d
  4096b6:	add    edx,eax
  4096b8:	shr    r12d,0x1c
  4096bc:	cmp    r14,0x4
  4096c0:	mov    WORD PTR [rsp+0x160],0x785c
  4096ca:	mov    BYTE PTR [rsp+0x163],r8b
  4096d2:	mov    BYTE PTR [rsp+0x162],r9b
  4096da:	mov    WORD PTR [rsp+0x164],0x785c
  4096e4:	mov    BYTE PTR [rsp+0x167],r10b
  4096ec:	mov    BYTE PTR [rsp+0x166],sil
  4096f4:	mov    WORD PTR [rsp+0x168],0x785c
  4096fe:	mov    BYTE PTR [rsp+0x16b],dil
  409706:	mov    BYTE PTR [rsp+0x16a],cl
  40970d:	mov    WORD PTR [rsp+0x16c],0x785c
  409717:	mov    BYTE PTR [rsp+0x16f],dl
  40971e:	mov    eax,0x30
  409723:	cmova  eax,r11d
  409727:	add    eax,r12d
  40972a:	mov    r12,QWORD PTR [rsp+0x18]
  40972f:	mov    BYTE PTR [rsp+0x16e],al
  409736:	mov    BYTE PTR [rsp+0x170],0x0
  40973e:	mov    rdi,QWORD PTR [r12+0xd0]
  409746:	lea    rsi,[rip+0x2c93a]        # 436087 <_IO_stdin_used@@Base+0x8087>
  40974d:	mov    rdx,r15
  409750:	lea    rcx,[rsp+0x160]
  409758:	xor    eax,eax
  40975a:	call   406180 <fprintf@plt>
  40975f:	jmp    409540 <__flatcc_fb_gen_c_reader@@Base+0x2d0>
  409764:	mov    rsi,QWORD PTR [r12+0xd0]
  40976c:	mov    edi,0xa
  409771:	call   406120 <fputc@plt>
  409776:	mov    rax,QWORD PTR [r12+0xd8]
  40977e:	mov    rbx,QWORD PTR [rax+0x40]
  409782:	test   rbx,rbx
  409785:	jne    409798 <__flatcc_fb_gen_c_reader@@Base+0x528>
  409787:	jmp    4097ac <__flatcc_fb_gen_c_reader@@Base+0x53c>
  409789:	nop    DWORD PTR [rax+0x0]
  409790:	mov    rbx,QWORD PTR [rbx]
  409793:	test   rbx,rbx
  409796:	je     4097ac <__flatcc_fb_gen_c_reader@@Base+0x53c>
  409798:	cmp    WORD PTR [rbx+0x10],0x3
  40979d:	jne    409790 <__flatcc_fb_gen_c_reader@@Base+0x520>
  40979f:	mov    rdi,r12
  4097a2:	mov    rsi,rbx
  4097a5:	call   40b6e0 <__flatcc_fb_gen_c_reader@@Base+0x2470>
  4097aa:	jmp    409790 <__flatcc_fb_gen_c_reader@@Base+0x520>
  4097ac:	mov    rsi,QWORD PTR [r12+0xd0]
  4097b4:	mov    edi,0xa
  4097b9:	call   406120 <fputc@plt>
  4097be:	mov    rax,QWORD PTR [r12+0xd8]
  4097c6:	mov    r15,QWORD PTR [rax+0x48]
  4097ca:	test   r15,r15
  4097cd:	je     40a368 <__flatcc_fb_gen_c_reader@@Base+0x10f8>
  4097d3:	lea    rdx,[rsp+0x60]
  4097d8:	mov    QWORD PTR [rsp+0x38],r13
  4097dd:	jmp    40980d <__flatcc_fb_gen_c_reader@@Base+0x59d>
  4097df:	nop
  4097e0:	mov    rsi,QWORD PTR [r13+0x0]
  4097e4:	mov    edi,0xa
  4097e9:	call   406120 <fputc@plt>
  4097ee:	mov    r15,QWORD PTR [rsp+0x50]
  4097f3:	mov    r15,QWORD PTR [r15+0xc0]
  4097fa:	test   r15,r15
  4097fd:	mov    r12,QWORD PTR [rsp+0x18]
  409802:	lea    rdx,[rsp+0x60]
  409807:	je     40a360 <__flatcc_fb_gen_c_reader@@Base+0x10f0>
  40980d:	mov    rax,QWORD PTR [r12+0xe0]
  409815:	mov    eax,DWORD PTR [rax+0xa4]
  40981b:	mov    DWORD PTR [rsp+0x20],eax
  40981f:	vxorps xmm0,xmm0,xmm0
  409823:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  409829:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  409832:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40983b:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  409844:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40984d:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  409856:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40985f:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  409868:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  409871:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40987a:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  409883:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40988c:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  409895:	mov    QWORD PTR [rsp+0x140],0x0
  4098a1:	vmovaps YMMWORD PTR [rsp+0x220],ymm0
  4098aa:	mov    QWORD PTR [rsp+0x240],0x0
  4098b6:	cmp    WORD PTR [r15+0x10],0x1
  4098bc:	jne    40b33d <__flatcc_fb_gen_c_reader@@Base+0x20cd>
  4098c2:	cmp    WORD PTR [r15+0xb0],0x0
  4098cb:	jne    4098db <__flatcc_fb_gen_c_reader@@Base+0x66b>
  4098cd:	cmp    QWORD PTR [r15+0xa8],0x0
  4098d5:	jne    40b43a <__flatcc_fb_gen_c_reader@@Base+0x21ca>
  4098db:	cmp    QWORD PTR [r15+0xb8],0x0
  4098e3:	jne    4098f3 <__flatcc_fb_gen_c_reader@@Base+0x683>
  4098e5:	cmp    QWORD PTR [r15+0xa8],0x0
  4098ed:	jne    40b45c <__flatcc_fb_gen_c_reader@@Base+0x21ec>
  4098f3:	mov    rdi,QWORD PTR [r15+0x18]
  4098f7:	mov    rsi,r15
  4098fa:	vzeroupper 
  4098fd:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  409902:	mov    r14,QWORD PTR [r15+0x40]
  409906:	test   r14,r14
  409909:	je     4099ea <__flatcc_fb_gen_c_reader@@Base+0x77a>
  40990f:	mov    rax,QWORD PTR [r14+0x8]
  409913:	cmp    QWORD PTR [rax+0x10],0x0
  409918:	je     409933 <__flatcc_fb_gen_c_reader@@Base+0x6c3>
  40991a:	mov    rdi,QWORD PTR [r13+0x0]
  40991e:	lea    rsi,[rip+0x2cb7e]        # 4364a3 <_IO_stdin_used@@Base+0x84a3>
  409925:	lea    rdx,[rip+0x26417]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40992c:	xor    eax,eax
  40992e:	call   406180 <fprintf@plt>
  409933:	mov    rdi,QWORD PTR [r13+0x0]
  409937:	mov    rax,QWORD PTR [r14+0x8]
  40993b:	mov    edx,DWORD PTR [rax+0x8]
  40993e:	mov    rcx,QWORD PTR [rax]
  409941:	lea    rsi,[rip+0x37257]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  409948:	xor    eax,eax
  40994a:	call   406180 <fprintf@plt>
  40994f:	mov    rbx,QWORD PTR [r14]
  409952:	test   rbx,rbx
  409955:	je     4099d0 <__flatcc_fb_gen_c_reader@@Base+0x760>
  409957:	mov    rax,QWORD PTR [r14+0x8]
  40995b:	mov    rax,QWORD PTR [rax+0x10]
  40995f:	jmp    40999f <__flatcc_fb_gen_c_reader@@Base+0x72f>
  409961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40996b:	nop    DWORD PTR [rax+rax*1+0x0]
  409970:	mov    rdi,QWORD PTR [r13+0x0]
  409974:	mov    rax,QWORD PTR [rbx+0x8]
  409978:	mov    edx,DWORD PTR [rax+0x8]
  40997b:	mov    rcx,QWORD PTR [rax]
  40997e:	lea    rsi,[rip+0x3721a]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  409985:	xor    eax,eax
  409987:	call   406180 <fprintf@plt>
  40998c:	mov    rax,QWORD PTR [rbx+0x8]
  409990:	mov    rcx,QWORD PTR [rbx]
  409993:	mov    rax,QWORD PTR [rax+0x10]
  409997:	mov    rbx,rcx
  40999a:	test   rcx,rcx
  40999d:	je     4099d0 <__flatcc_fb_gen_c_reader@@Base+0x760>
  40999f:	mov    rcx,QWORD PTR [rbx+0x8]
  4099a3:	cmp    rax,QWORD PTR [rcx+0x10]
  4099a7:	je     409970 <__flatcc_fb_gen_c_reader@@Base+0x700>
  4099a9:	mov    rdi,QWORD PTR [r13+0x0]
  4099ad:	lea    rsi,[rip+0x2caf6]        # 4364aa <_IO_stdin_used@@Base+0x84aa>
  4099b4:	lea    rdx,[rip+0x26388]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4099bb:	xor    eax,eax
  4099bd:	call   406180 <fprintf@plt>
  4099c2:	jmp    409970 <__flatcc_fb_gen_c_reader@@Base+0x700>
  4099c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4099ce:	xchg   ax,ax
  4099d0:	mov    rcx,QWORD PTR [r13+0x0]
  4099d4:	mov    esi,0x4
  4099d9:	mov    edx,0x1
  4099de:	lea    rdi,[rip+0x3b687]        # 44506c <_IO_stdin_used@@Base+0x1706c>
  4099e5:	call   406230 <fwrite@plt>
  4099ea:	cmp    QWORD PTR [r15+0xb8],0x0
  4099f2:	mov    QWORD PTR [rsp+0x50],r15
  4099f7:	je     409d70 <__flatcc_fb_gen_c_reader@@Base+0xb00>
  4099fd:	cmp    DWORD PTR [rsp+0x20],0x0
  409a02:	lea    rbx,[rsp+0x60]
  409a07:	je     409a23 <__flatcc_fb_gen_c_reader@@Base+0x7b3>
  409a09:	mov    rcx,QWORD PTR [r13+0x0]
  409a0d:	mov    esi,0x10
  409a12:	mov    edx,0x1
  409a17:	lea    rdi,[rip+0x2cd1c]        # 43673a <_IO_stdin_used@@Base+0x873a>
  409a1e:	call   406230 <fwrite@plt>
  409a23:	mov    rdi,QWORD PTR [r13+0x0]
  409a27:	lea    rsi,[rip+0x2cd1d]        # 43674b <_IO_stdin_used@@Base+0x874b>
  409a2e:	mov    rdx,rbx
  409a31:	xor    eax,eax
  409a33:	call   406180 <fprintf@plt>
  409a38:	mov    r14,QWORD PTR [r15+0x28]
  409a3c:	test   r14,r14
  409a3f:	je     409de0 <__flatcc_fb_gen_c_reader@@Base+0xb70>
  409a45:	lea    rax,[r15+0xb0]
  409a4c:	mov    QWORD PTR [rsp+0x28],rax
  409a51:	xor    r15d,r15d
  409a54:	mov    DWORD PTR [rsp+0x30],0x0
  409a5c:	xor    eax,eax
  409a5e:	mov    QWORD PTR [rsp+0x40],rax
  409a63:	jmp    409ac0 <__flatcc_fb_gen_c_reader@@Base+0x850>
  409a65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a6f:	nop
  409a70:	mov    r8d,DWORD PTR [r14+0x80]
  409a77:	mov    rdi,QWORD PTR [r13+0x0]
  409a7b:	cmp    DWORD PTR [rsp+0x20],0x0
  409a80:	je     409cf8 <__flatcc_fb_gen_c_reader@@Base+0xa88>
  409a86:	lea    rsi,[rip+0x2cce9]        # 436776 <_IO_stdin_used@@Base+0x8776>
  409a8d:	mov    ebx,DWORD PTR [rsp+0x30]
  409a91:	mov    edx,ebx
  409a93:	mov    ecx,r8d
  409a96:	mov    r8d,r9d
  409a99:	mov    r9,r12
  409a9c:	xor    eax,eax
  409a9e:	call   406180 <fprintf@plt>
  409aa3:	inc    ebx
  409aa5:	mov    DWORD PTR [rsp+0x30],ebx
  409aa9:	mov    r15d,DWORD PTR [r14+0x80]
  409ab0:	add    r15d,DWORD PTR [r14+0x78]
  409ab4:	mov    r14,QWORD PTR [r14]
  409ab7:	test   r14,r14
  409aba:	je     409dea <__flatcc_fb_gen_c_reader@@Base+0xb7a>
  409ac0:	mov    r12,QWORD PTR [r14+0x68]
  409ac4:	test   r12,r12
  409ac7:	je     409baa <__flatcc_fb_gen_c_reader@@Base+0x93a>
  409acd:	mov    rax,QWORD PTR [r12+0x8]
  409ad2:	cmp    QWORD PTR [rax+0x10],0x0
  409ad7:	je     409af2 <__flatcc_fb_gen_c_reader@@Base+0x882>
  409ad9:	mov    rdi,QWORD PTR [r13+0x0]
  409add:	lea    rsi,[rip+0x2c9bf]        # 4364a3 <_IO_stdin_used@@Base+0x84a3>
  409ae4:	lea    rdx,[rip+0x3c12a]        # 445c15 <_IO_stdin_used@@Base+0x17c15>
  409aeb:	xor    eax,eax
  409aed:	call   406180 <fprintf@plt>
  409af2:	mov    rdi,QWORD PTR [r13+0x0]
  409af6:	mov    rax,QWORD PTR [r12+0x8]
  409afb:	mov    edx,DWORD PTR [rax+0x8]
  409afe:	mov    rcx,QWORD PTR [rax]
  409b01:	lea    rsi,[rip+0x37097]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  409b08:	xor    eax,eax
  409b0a:	call   406180 <fprintf@plt>
  409b0f:	mov    rbx,QWORD PTR [r12]
  409b13:	test   rbx,rbx
  409b16:	je     409b90 <__flatcc_fb_gen_c_reader@@Base+0x920>
  409b18:	mov    rax,QWORD PTR [r12+0x8]
  409b1d:	mov    rax,QWORD PTR [rax+0x10]
  409b21:	jmp    409b5f <__flatcc_fb_gen_c_reader@@Base+0x8ef>
  409b23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b2d:	nop    DWORD PTR [rax]
  409b30:	mov    rdi,QWORD PTR [r13+0x0]
  409b34:	mov    rax,QWORD PTR [rbx+0x8]
  409b38:	mov    edx,DWORD PTR [rax+0x8]
  409b3b:	mov    rcx,QWORD PTR [rax]
  409b3e:	lea    rsi,[rip+0x3705a]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  409b45:	xor    eax,eax
  409b47:	call   406180 <fprintf@plt>
  409b4c:	mov    rax,QWORD PTR [rbx+0x8]
  409b50:	mov    rcx,QWORD PTR [rbx]
  409b53:	mov    rax,QWORD PTR [rax+0x10]
  409b57:	mov    rbx,rcx
  409b5a:	test   rcx,rcx
  409b5d:	je     409b90 <__flatcc_fb_gen_c_reader@@Base+0x920>
  409b5f:	mov    rcx,QWORD PTR [rbx+0x8]
  409b63:	cmp    rax,QWORD PTR [rcx+0x10]
  409b67:	je     409b30 <__flatcc_fb_gen_c_reader@@Base+0x8c0>
  409b69:	mov    rdi,QWORD PTR [r13+0x0]
  409b6d:	lea    rsi,[rip+0x2c936]        # 4364aa <_IO_stdin_used@@Base+0x84aa>
  409b74:	lea    rdx,[rip+0x3c09a]        # 445c15 <_IO_stdin_used@@Base+0x17c15>
  409b7b:	xor    eax,eax
  409b7d:	call   406180 <fprintf@plt>
  409b82:	jmp    409b30 <__flatcc_fb_gen_c_reader@@Base+0x8c0>
  409b84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b8e:	xchg   ax,ax
  409b90:	mov    rcx,QWORD PTR [r13+0x0]
  409b94:	mov    esi,0x4
  409b99:	mov    edx,0x1
  409b9e:	lea    rdi,[rip+0x3b4c7]        # 44506c <_IO_stdin_used@@Base+0x1706c>
  409ba5:	call   406230 <fwrite@plt>
  409baa:	lea    rax,[r14+0x72]
  409bae:	test   r15,r15
  409bb1:	cmove  rax,QWORD PTR [rsp+0x28]
  409bb7:	mov    rcx,QWORD PTR [r14+0x8]
  409bbb:	mov    r9d,DWORD PTR [rcx+0x8]
  409bbf:	mov    r12,QWORD PTR [rcx]
  409bc2:	movzx  r10d,WORD PTR [rax]
  409bc6:	cmp    DWORD PTR [rsp+0x20],0x0
  409bcb:	je     409c0f <__flatcc_fb_gen_c_reader@@Base+0x99f>
  409bcd:	mov    ecx,DWORD PTR [r14+0x78]
  409bd1:	sub    ecx,r15d
  409bd4:	je     409c0f <__flatcc_fb_gen_c_reader@@Base+0x99f>
  409bd6:	mov    rdi,QWORD PTR [r13+0x0]
  409bda:	mov    rdx,QWORD PTR [rsp+0x40]
  409bdf:	lea    eax,[rdx+0x1]
  409be2:	mov    DWORD PTR [rsp+0x58],eax
  409be6:	lea    rsi,[rip+0x2cb6b]        # 436758 <_IO_stdin_used@@Base+0x8758>
  409bed:	xor    eax,eax
  409bef:	mov    ebx,r9d
  409bf2:	mov    r15,r13
  409bf5:	mov    r13d,r10d
  409bf8:	call   406180 <fprintf@plt>
  409bfd:	mov    r10d,r13d
  409c00:	mov    r13,r15
  409c03:	mov    r9d,ebx
  409c06:	mov    eax,DWORD PTR [rsp+0x58]
  409c0a:	mov    QWORD PTR [rsp+0x40],rax
  409c0f:	test   BYTE PTR [r14+0x70],0x4
  409c14:	jne    409a70 <__flatcc_fb_gen_c_reader@@Base+0x800>
  409c1a:	movzx  eax,WORD PTR [r14+0x28]
  409c1f:	cmp    ax,0xe
  409c23:	mov    DWORD PTR [rsp+0x48],r9d
  409c28:	je     409c90 <__flatcc_fb_gen_c_reader@@Base+0xa20>
  409c2a:	cmp    ax,0x8
  409c2e:	jne    40b22a <__flatcc_fb_gen_c_reader@@Base+0x1fba>
  409c34:	mov    eax,DWORD PTR [r14+0x18]
  409c38:	cmp    eax,0x5
  409c3b:	lea    rcx,[rip+0x26101]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  409c42:	cmove  rcx,QWORD PTR [rsp+0x18]
  409c48:	dec    eax
  409c4a:	cmp    eax,0xb
  409c4d:	jae    40b1e1 <__flatcc_fb_gen_c_reader@@Base+0x1f71>
  409c53:	cdqe   
  409c55:	lea    rdx,[rip+0x47eb4]        # 451b10 <fb_value_set_deleted@@Base+0x68b0>
  409c5c:	mov    r8,QWORD PTR [rdx+rax*8]
  409c60:	mov    rax,QWORD PTR [rsp+0x38]
  409c65:	mov    rdi,QWORD PTR [rax]
  409c68:	cmp    DWORD PTR [rsp+0x20],0x0
  409c6d:	je     409d1e <__flatcc_fb_gen_c_reader@@Base+0xaae>
  409c73:	lea    rsi,[rip+0x2cb6e]        # 4367e8 <_IO_stdin_used@@Base+0x87e8>
  409c7a:	mov    rdx,rcx
  409c7d:	mov    rcx,r8
  409c80:	jmp    409cef <__flatcc_fb_gen_c_reader@@Base+0xa7f>
  409c82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c8c:	nop    DWORD PTR [rax+0x0]
  409c90:	mov    rsi,QWORD PTR [r14+0x18]
  409c94:	mov    eax,DWORD PTR [rsi+0x10]
  409c97:	mov    ecx,eax
  409c99:	or     ecx,0x2
  409c9c:	cmp    cx,0x3
  409ca0:	jne    40b2d5 <__flatcc_fb_gen_c_reader@@Base+0x2065>
  409ca6:	mov    r13d,r10d
  409ca9:	cmp    ax,0x1
  409cad:	lea    rbx,[rip+0x2cbaf]        # 436863 <_IO_stdin_used@@Base+0x8863>
  409cb4:	lea    rax,[rip+0x26088]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  409cbb:	cmove  rbx,rax
  409cbf:	mov    rdi,QWORD PTR [rsi+0x18]
  409cc3:	lea    r15,[rsp+0x160]
  409ccb:	mov    rdx,r15
  409cce:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  409cd3:	mov    rax,QWORD PTR [rsp+0x38]
  409cd8:	mov    rdi,QWORD PTR [rax]
  409cdb:	cmp    DWORD PTR [rsp+0x20],0x0
  409ce0:	je     409d2a <__flatcc_fb_gen_c_reader@@Base+0xaba>
  409ce2:	lea    rsi,[rip+0x2cb80]        # 436869 <_IO_stdin_used@@Base+0x8869>
  409ce9:	mov    rdx,r15
  409cec:	mov    rcx,rbx
  409cef:	xor    eax,eax
  409cf1:	call   406180 <fprintf@plt>
  409cf6:	jmp    409d41 <__flatcc_fb_gen_c_reader@@Base+0xad1>
  409cf8:	sub    rsp,0x8
  409cfc:	lea    rsi,[rip+0x2caa6]        # 4367a9 <_IO_stdin_used@@Base+0x87a9>
  409d03:	mov    edx,r10d
  409d06:	mov    ebx,DWORD PTR [rsp+0x38]
  409d0a:	mov    ecx,ebx
  409d0c:	xor    eax,eax
  409d0e:	push   r12
  409d10:	call   406180 <fprintf@plt>
  409d15:	add    rsp,0x10
  409d19:	jmp    409aa3 <__flatcc_fb_gen_c_reader@@Base+0x833>
  409d1e:	lea    rsi,[rip+0x2cacd]        # 4367f2 <_IO_stdin_used@@Base+0x87f2>
  409d25:	mov    edx,r10d
  409d28:	jmp    409d3a <__flatcc_fb_gen_c_reader@@Base+0xaca>
  409d2a:	lea    rsi,[rip+0x2cb44]        # 436875 <_IO_stdin_used@@Base+0x8875>
  409d31:	mov    edx,r13d
  409d34:	mov    rcx,r15
  409d37:	mov    r8,rbx
  409d3a:	xor    eax,eax
  409d3c:	call   406180 <fprintf@plt>
  409d41:	mov    rax,QWORD PTR [rsp+0x38]
  409d46:	mov    rdi,QWORD PTR [rax]
  409d49:	lea    rsi,[rip+0x2cb64]        # 4368b4 <_IO_stdin_used@@Base+0x88b4>
  409d50:	mov    edx,DWORD PTR [rsp+0x48]
  409d54:	mov    r13,rax
  409d57:	mov    rcx,r12
  409d5a:	xor    eax,eax
  409d5c:	call   406180 <fprintf@plt>
  409d61:	jmp    409aa9 <__flatcc_fb_gen_c_reader@@Base+0x839>
  409d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d70:	mov    rdi,QWORD PTR [r13+0x0]
  409d74:	lea    rsi,[rip+0x2c87b]        # 4365f6 <_IO_stdin_used@@Base+0x85f6>
  409d7b:	lea    rbx,[rsp+0x60]
  409d80:	mov    rdx,rbx
  409d83:	xor    eax,eax
  409d85:	call   406180 <fprintf@plt>
  409d8a:	mov    rdi,QWORD PTR [r13+0x0]
  409d8e:	lea    rsi,[rip+0x2c8c2]        # 436657 <_IO_stdin_used@@Base+0x8657>
  409d95:	mov    rdx,rbx
  409d98:	mov    rcx,rbx
  409d9b:	mov    r8,rbx
  409d9e:	xor    eax,eax
  409da0:	call   406180 <fprintf@plt>
  409da5:	mov    rdi,QWORD PTR [r13+0x0]
  409da9:	lea    rsi,[rip+0x2c8fb]        # 4366ab <_IO_stdin_used@@Base+0x86ab>
  409db0:	mov    rdx,rbx
  409db3:	mov    rcx,rbx
  409db6:	mov    r8,rbx
  409db9:	xor    eax,eax
  409dbb:	call   406180 <fprintf@plt>
  409dc0:	mov    rdi,QWORD PTR [r13+0x0]
  409dc4:	lea    rsi,[rip+0x2c922]        # 4366ed <_IO_stdin_used@@Base+0x86ed>
  409dcb:	mov    rdx,rbx
  409dce:	mov    rcx,rbx
  409dd1:	mov    r8,rbx
  409dd4:	xor    eax,eax
  409dd6:	call   406180 <fprintf@plt>
  409ddb:	jmp    409f09 <__flatcc_fb_gen_c_reader@@Base+0xc99>
  409de0:	xor    eax,eax
  409de2:	mov    QWORD PTR [rsp+0x40],rax
  409de7:	xor    r15d,r15d
  409dea:	cmp    DWORD PTR [rsp+0x20],0x0
  409def:	je     409e60 <__flatcc_fb_gen_c_reader@@Base+0xbf0>
  409df1:	mov    rax,QWORD PTR [rsp+0x50]
  409df6:	mov    ecx,DWORD PTR [rax+0xb8]
  409dfc:	sub    ecx,r15d
  409dff:	mov    r12,QWORD PTR [rsp+0x18]
  409e04:	lea    rbx,[rsp+0x60]
  409e09:	je     409e22 <__flatcc_fb_gen_c_reader@@Base+0xbb2>
  409e0b:	mov    rdi,QWORD PTR [r13+0x0]
  409e0f:	lea    rsi,[rip+0x2c942]        # 436758 <_IO_stdin_used@@Base+0x8758>
  409e16:	mov    rdx,QWORD PTR [rsp+0x40]
  409e1b:	xor    eax,eax
  409e1d:	call   406180 <fprintf@plt>
  409e22:	mov    rcx,QWORD PTR [r13+0x0]
  409e26:	mov    esi,0x3
  409e2b:	mov    edx,0x1
  409e30:	lea    rdi,[rip+0x36f0c]        # 440d43 <_IO_stdin_used@@Base+0x12d43>
  409e37:	call   406230 <fwrite@plt>
  409e3c:	mov    rcx,QWORD PTR [r13+0x0]
  409e40:	mov    esi,0xf
  409e45:	mov    edx,0x1
  409e4a:	lea    rdi,[rip+0x2ca6a]        # 4368bb <_IO_stdin_used@@Base+0x88bb>
  409e51:	call   406230 <fwrite@plt>
  409e56:	jmp    409e84 <__flatcc_fb_gen_c_reader@@Base+0xc14>
  409e58:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	mov    rcx,QWORD PTR [r13+0x0]
  409e64:	mov    esi,0x3
  409e69:	mov    edx,0x1
  409e6e:	lea    rdi,[rip+0x36ece]        # 440d43 <_IO_stdin_used@@Base+0x12d43>
  409e75:	call   406230 <fwrite@plt>
  409e7a:	mov    r12,QWORD PTR [rsp+0x18]
  409e7f:	lea    rbx,[rsp+0x60]
  409e84:	mov    rdi,QWORD PTR [r12+0xd0]
  409e8c:	mov    r15,QWORD PTR [rsp+0x50]
  409e91:	mov    rcx,QWORD PTR [r15+0xb8]
  409e98:	lea    rsi,[rip+0x2ca2c]        # 4368cb <_IO_stdin_used@@Base+0x88cb>
  409e9f:	mov    rdx,rbx
  409ea2:	xor    eax,eax
  409ea4:	call   406180 <fprintf@plt>
  409ea9:	mov    rdi,QWORD PTR [r12+0xd0]
  409eb1:	lea    rsi,[rip+0x2ca52]        # 43690a <_IO_stdin_used@@Base+0x890a>
  409eb8:	mov    rdx,rbx
  409ebb:	mov    rcx,rbx
  409ebe:	mov    r8,rbx
  409ec1:	xor    eax,eax
  409ec3:	call   406180 <fprintf@plt>
  409ec8:	mov    rdi,QWORD PTR [r12+0xd0]
  409ed0:	lea    rsi,[rip+0x2ca8b]        # 436962 <_IO_stdin_used@@Base+0x8962>
  409ed7:	mov    rdx,rbx
  409eda:	mov    rcx,rbx
  409edd:	mov    r8,rbx
  409ee0:	xor    eax,eax
  409ee2:	call   406180 <fprintf@plt>
  409ee7:	mov    rdi,QWORD PTR [r12+0xd0]
  409eef:	lea    rsi,[rip+0x2cab2]        # 4369a8 <_IO_stdin_used@@Base+0x89a8>
  409ef6:	mov    rdx,rbx
  409ef9:	mov    rcx,rbx
  409efc:	mov    r8,rbx
  409eff:	mov    r9,r12
  409f02:	xor    eax,eax
  409f04:	call   406180 <fprintf@plt>
  409f09:	mov    rdi,QWORD PTR [r12+0xd0]
  409f11:	mov    rcx,QWORD PTR [r15+0xb8]
  409f18:	lea    rsi,[rip+0x2cae0]        # 4369ff <_IO_stdin_used@@Base+0x89ff>
  409f1f:	mov    rdx,rbx
  409f22:	xor    eax,eax
  409f24:	call   406180 <fprintf@plt>
  409f29:	mov    rdi,QWORD PTR [r12+0xd0]
  409f31:	lea    rsi,[rip+0x2caf9]        # 436a31 <_IO_stdin_used@@Base+0x8a31>
  409f38:	mov    rdx,rbx
  409f3b:	mov    rcx,rbx
  409f3e:	mov    r8,r12
  409f41:	xor    eax,eax
  409f43:	call   406180 <fprintf@plt>
  409f48:	mov    rdi,QWORD PTR [r12+0xd0]
  409f50:	lea    rsi,[rip+0x2cb1a]        # 436a71 <_IO_stdin_used@@Base+0x8a71>
  409f57:	mov    rdx,r12
  409f5a:	mov    rcx,rbx
  409f5d:	xor    eax,eax
  409f5f:	call   406180 <fprintf@plt>
  409f64:	mov    rsi,QWORD PTR [r12+0xd0]
  409f6c:	mov    edi,0xa
  409f71:	call   406120 <fputc@plt>
  409f76:	mov    r14,QWORD PTR [r15+0x28]
  409f7a:	test   r14,r14
  409f7d:	lea    r12,[rsp+0x160]
  409f85:	je     4097e0 <__flatcc_fb_gen_c_reader@@Base+0x570>
  409f8b:	mov    DWORD PTR [rsp+0x28],0x0
  409f93:	mov    DWORD PTR [rsp+0x20],0x0
  409f9b:	test   BYTE PTR [r14+0x70],0x4
  409fa0:	jne    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  409fa2:	jmp    409fd3 <__flatcc_fb_gen_c_reader@@Base+0xd63>
  409fa4:	mov    DWORD PTR [rsp+0x28],0x1
  409fac:	lea    r12,[rsp+0x160]
  409fb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fbe:	xchg   ax,ax
  409fc0:	mov    r14,QWORD PTR [r14]
  409fc3:	test   r14,r14
  409fc6:	je     4097e0 <__flatcc_fb_gen_c_reader@@Base+0x570>
  409fcc:	test   BYTE PTR [r14+0x70],0x4
  409fd1:	jne    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  409fd3:	mov    rax,QWORD PTR [r14+0x8]
  409fd7:	mov    r15d,DWORD PTR [rax+0x8]
  409fdb:	mov    rbx,QWORD PTR [rax]
  409fde:	movzx  eax,WORD PTR [r14+0x28]
  409fe3:	cmp    ax,0xe
  409fe7:	je     40a06d <__flatcc_fb_gen_c_reader@@Base+0xdfd>
  409fed:	cmp    ax,0x8
  409ff1:	jne    40a2e0 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  409ff7:	mov    ecx,DWORD PTR [r14+0x18]
  409ffb:	lea    eax,[rcx-0x1]
  409ffe:	cmp    eax,0xb
  40a001:	jae    40b1e1 <__flatcc_fb_gen_c_reader@@Base+0x1f71>
  40a007:	cmp    ecx,0x5
  40a00a:	lea    r10,[rip+0x25d32]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40a011:	mov    rdx,QWORD PTR [rsp+0x18]
  40a016:	cmove  r10,rdx
  40a01a:	movsxd r11,eax
  40a01d:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a024:	lea    rsi,[rip+0x2ca5e]        # 436a89 <_IO_stdin_used@@Base+0x8a89>
  40a02b:	lea    rcx,[rsp+0x60]
  40a030:	mov    r8d,r15d
  40a033:	mov    r9,rbx
  40a036:	mov    eax,0x0
  40a03b:	lea    rbx,[rip+0x47ace]        # 451b10 <fb_value_set_deleted@@Base+0x68b0>
  40a042:	push   QWORD PTR [rbx+r11*8]
  40a046:	push   r10
  40a048:	lea    rbx,[rip+0x47a11]        # 451a60 <fb_value_set_deleted@@Base+0x6800>
  40a04f:	push   QWORD PTR [rbx+r11*8]
  40a053:	push   rdx
  40a054:	call   406180 <fprintf@plt>
  40a059:	add    rsp,0x20
  40a05d:	cmp    DWORD PTR [rsp+0x20],0x0
  40a062:	je     40a2eb <__flatcc_fb_gen_c_reader@@Base+0x107b>
  40a068:	jmp    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  40a06d:	mov    rsi,QWORD PTR [r14+0x18]
  40a071:	mov    rdi,QWORD PTR [rsi+0x18]
  40a075:	mov    rdx,r12
  40a078:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40a07d:	mov    rax,QWORD PTR [r14+0x18]
  40a081:	movzx  ecx,WORD PTR [rax+0x10]
  40a085:	cmp    cx,0x1
  40a089:	je     40a2a2 <__flatcc_fb_gen_c_reader@@Base+0x1032>
  40a08f:	cmp    cx,0x3
  40a093:	jne    40a2e0 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40a099:	mov    eax,DWORD PTR [rax+0x48]
  40a09c:	dec    eax
  40a09e:	cmp    eax,0xb
  40a0a1:	jae    40b2f4 <__flatcc_fb_gen_c_reader@@Base+0x2084>
  40a0a7:	mov    r12,QWORD PTR [rsp+0x18]
  40a0ac:	mov    rdi,QWORD PTR [r12+0xd0]
  40a0b4:	lea    rsi,[rip+0x2ca04]        # 436abf <_IO_stdin_used@@Base+0x8abf>
  40a0bb:	mov    rdx,r12
  40a0be:	lea    rcx,[rsp+0x60]
  40a0c3:	mov    r8d,r15d
  40a0c6:	mov    r9,rbx
  40a0c9:	xor    eax,eax
  40a0cb:	mov    QWORD PTR [rsp+0x30],rbx
  40a0d0:	lea    rbx,[rsp+0x160]
  40a0d8:	push   rbx
  40a0d9:	push   rbx
  40a0da:	call   406180 <fprintf@plt>
  40a0df:	add    rsp,0x10
  40a0e3:	mov    rax,QWORD PTR [r12+0xe0]
  40a0eb:	mov    r12,rbx
  40a0ee:	mov    rbx,QWORD PTR [rsp+0x30]
  40a0f3:	cmp    DWORD PTR [rax+0x24],0x0
  40a0f7:	jne    40a104 <__flatcc_fb_gen_c_reader@@Base+0xe94>
  40a0f9:	cmp    BYTE PTR [r14+0x70],0x0
  40a0fe:	js     40a325 <__flatcc_fb_gen_c_reader@@Base+0x10b5>
  40a104:	cmp    BYTE PTR [r14+0x70],0x0
  40a109:	jns    40a2e0 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40a10f:	cmp    DWORD PTR [rsp+0x28],0x0
  40a114:	je     40a130 <__flatcc_fb_gen_c_reader@@Base+0xec0>
  40a116:	mov    rcx,QWORD PTR [r13+0x0]
  40a11a:	mov    esi,0x42
  40a11f:	mov    edx,0x1
  40a124:	lea    rdi,[rip+0x2ca03]        # 436b2e <_IO_stdin_used@@Base+0x8b2e>
  40a12b:	call   406230 <fwrite@plt>
  40a130:	mov    r12,QWORD PTR [rsp+0x18]
  40a135:	mov    rcx,QWORD PTR [r12+0xd0]
  40a13d:	mov    esi,0x3d
  40a142:	mov    edx,0x1
  40a147:	lea    rdi,[rip+0x2ca23]        # 436b71 <_IO_stdin_used@@Base+0x8b71>
  40a14e:	call   406230 <fwrite@plt>
  40a153:	mov    rdi,QWORD PTR [r12+0xd0]
  40a15b:	sub    rsp,0x8
  40a15f:	lea    rsi,[rip+0x2ca49]        # 436baf <_IO_stdin_used@@Base+0x8baf>
  40a166:	mov    rdx,r12
  40a169:	lea    rax,[rsp+0x68]
  40a16e:	mov    rcx,rax
  40a171:	mov    r8d,r15d
  40a174:	mov    r9,rbx
  40a177:	xor    eax,eax
  40a179:	lea    rbx,[rsp+0x168]
  40a181:	push   rbx
  40a182:	call   406180 <fprintf@plt>
  40a187:	add    rsp,0x10
  40a18b:	mov    rax,QWORD PTR [r12+0xe0]
  40a193:	cmp    DWORD PTR [rax+0xa8],0x0
  40a19a:	je     40a1d0 <__flatcc_fb_gen_c_reader@@Base+0xf60>
  40a19c:	mov    rdi,QWORD PTR [r12+0xd0]
  40a1a4:	lea    rsi,[rip+0x2ca3a]        # 436be5 <_IO_stdin_used@@Base+0x8be5>
  40a1ab:	mov    rdx,r12
  40a1ae:	lea    rcx,[rsp+0x60]
  40a1b3:	mov    r8d,r15d
  40a1b6:	mov    r9,QWORD PTR [rsp+0x30]
  40a1bb:	xor    eax,eax
  40a1bd:	push   rcx
  40a1be:	lea    rbx,[rsp+0x168]
  40a1c6:	push   rbx
  40a1c7:	call   406180 <fprintf@plt>
  40a1cc:	add    rsp,0x10
  40a1d0:	mov    rbx,QWORD PTR [rsp+0x30]
  40a1d5:	mov    DWORD PTR [rsp+0x20],0x1
  40a1dd:	cmp    DWORD PTR [rsp+0x28],0x0
  40a1e2:	lea    r12,[rsp+0x160]
  40a1ea:	jne    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  40a1f0:	mov    r10,r12
  40a1f3:	mov    r12,QWORD PTR [rsp+0x18]
  40a1f8:	mov    rdi,QWORD PTR [r12+0xd0]
  40a200:	sub    rsp,0x8
  40a204:	lea    rsi,[rip+0x2ca16]        # 436c21 <_IO_stdin_used@@Base+0x8c21>
  40a20b:	mov    rdx,r12
  40a20e:	lea    rax,[rsp+0x68]
  40a213:	mov    rcx,rax
  40a216:	mov    r8d,r15d
  40a219:	mov    r9,rbx
  40a21c:	xor    eax,eax
  40a21e:	push   r10
  40a220:	call   406180 <fprintf@plt>
  40a225:	add    rsp,0x10
  40a229:	mov    rdi,QWORD PTR [r12+0xd0]
  40a231:	sub    rsp,0x8
  40a235:	lea    rsi,[rip+0x2ca23]        # 436c5f <_IO_stdin_used@@Base+0x8c5f>
  40a23c:	mov    rdx,r12
  40a23f:	lea    rcx,[rsp+0x68]
  40a244:	mov    r8d,r15d
  40a247:	mov    r9,rbx
  40a24a:	xor    eax,eax
  40a24c:	lea    rbx,[rsp+0x168]
  40a254:	push   rbx
  40a255:	call   406180 <fprintf@plt>
  40a25a:	add    rsp,0x10
  40a25e:	mov    rax,QWORD PTR [r12+0xe0]
  40a266:	mov    DWORD PTR [rsp+0x20],0x1
  40a26e:	cmp    DWORD PTR [rax+0xa8],0x0
  40a275:	je     409fa4 <__flatcc_fb_gen_c_reader@@Base+0xd34>
  40a27b:	mov    rdi,QWORD PTR [r13+0x0]
  40a27f:	lea    rsi,[rip+0x2ca17]        # 436c9d <_IO_stdin_used@@Base+0x8c9d>
  40a286:	lea    rcx,[rsp+0x60]
  40a28b:	mov    rdx,rcx
  40a28e:	mov    r8d,r15d
  40a291:	mov    r9,QWORD PTR [rsp+0x30]
  40a296:	xor    eax,eax
  40a298:	call   406180 <fprintf@plt>
  40a29d:	jmp    409fa4 <__flatcc_fb_gen_c_reader@@Base+0xd34>
  40a2a2:	mov    rdx,QWORD PTR [rsp+0x18]
  40a2a7:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a2ae:	sub    rsp,0x8
  40a2b2:	lea    rsi,[rip+0x2ca0d]        # 436cc6 <_IO_stdin_used@@Base+0x8cc6>
  40a2b9:	lea    rcx,[rsp+0x68]
  40a2be:	mov    r8d,r15d
  40a2c1:	mov    r9,rbx
  40a2c4:	xor    eax,eax
  40a2c6:	push   r12
  40a2c8:	call   406180 <fprintf@plt>
  40a2cd:	add    rsp,0x10
  40a2d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2e0:	cmp    DWORD PTR [rsp+0x20],0x0
  40a2e5:	jne    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  40a2eb:	cmp    BYTE PTR [r14+0x70],0x0
  40a2f0:	jns    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  40a2f6:	mov    rcx,QWORD PTR [r13+0x0]
  40a2fa:	mov    esi,0x54
  40a2ff:	mov    edx,0x1
  40a304:	lea    rdi,[rip+0x2c9f2]        # 436cfd <_IO_stdin_used@@Base+0x8cfd>
  40a30b:	call   406230 <fwrite@plt>
  40a310:	mov    DWORD PTR [rsp+0x28],0x1
  40a318:	mov    DWORD PTR [rsp+0x20],0x0
  40a320:	jmp    409fc0 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  40a325:	mov    rdx,QWORD PTR [rsp+0x18]
  40a32a:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a331:	sub    rsp,0x8
  40a335:	lea    rsi,[rip+0x2c7bc]        # 436af8 <_IO_stdin_used@@Base+0x8af8>
  40a33c:	lea    rcx,[rsp+0x68]
  40a341:	mov    r8d,r15d
  40a344:	mov    r9,rbx
  40a347:	xor    eax,eax
  40a349:	push   r12
  40a34b:	call   406180 <fprintf@plt>
  40a350:	add    rsp,0x10
  40a354:	cmp    BYTE PTR [r14+0x70],0x0
  40a359:	jns    40a2e0 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40a35b:	jmp    40a10f <__flatcc_fb_gen_c_reader@@Base+0xe9f>
  40a360:	mov    rax,QWORD PTR [r12+0xd8]
  40a368:	mov    rbx,QWORD PTR [rax+0x40]
  40a36c:	test   rbx,rbx
  40a36f:	je     40b16e <__flatcc_fb_gen_c_reader@@Base+0x1efe>
  40a375:	lea    r14,[rsp+0x260]
  40a37d:	lea    r15,[rip+0x3681b]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  40a384:	jmp    40a3ac <__flatcc_fb_gen_c_reader@@Base+0x113c>
  40a386:	mov    r12,QWORD PTR [rsp+0x18]
  40a38b:	mov    rbx,QWORD PTR [rsp+0x48]
  40a390:	lea    r14,[rsp+0x260]
  40a398:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3a0:	mov    rbx,QWORD PTR [rbx]
  40a3a3:	test   rbx,rbx
  40a3a6:	je     40b16e <__flatcc_fb_gen_c_reader@@Base+0x1efe>
  40a3ac:	mov    eax,DWORD PTR [rbx+0x10]
  40a3af:	lea    ecx,[rax-0x1]
  40a3b2:	cmp    cx,0x3
  40a3b6:	jb     40a3a0 <__flatcc_fb_gen_c_reader@@Base+0x1130>
  40a3b8:	test   ax,ax
  40a3bb:	je     40a3d4 <__flatcc_fb_gen_c_reader@@Base+0x1164>
  40a3bd:	cmp    ax,0x4
  40a3c1:	jne    40b35f <__flatcc_fb_gen_c_reader@@Base+0x20ef>
  40a3c7:	mov    rdi,r12
  40a3ca:	mov    rsi,rbx
  40a3cd:	call   40b6e0 <__flatcc_fb_gen_c_reader@@Base+0x2470>
  40a3d2:	jmp    40a3a0 <__flatcc_fb_gen_c_reader@@Base+0x1130>
  40a3d4:	vxorps xmm0,xmm0,xmm0
  40a3d8:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  40a3e1:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  40a3ea:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  40a3f3:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  40a3fc:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  40a405:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  40a40e:	vmovaps YMMWORD PTR [rsp+0x320],ymm0
  40a417:	mov    QWORD PTR [rsp+0x340],0x0
  40a423:	vmovaps YMMWORD PTR [rsp+0x360],ymm0
  40a42c:	vmovaps YMMWORD PTR [rsp+0x380],ymm0
  40a435:	vmovaps YMMWORD PTR [rsp+0x3a0],ymm0
  40a43e:	vmovaps YMMWORD PTR [rsp+0x3c0],ymm0
  40a447:	vmovaps YMMWORD PTR [rsp+0x3e0],ymm0
  40a450:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  40a459:	vmovaps YMMWORD PTR [rsp+0x420],ymm0
  40a462:	mov    QWORD PTR [rsp+0x440],0x0
  40a46e:	mov    rsi,QWORD PTR [r13+0x0]
  40a472:	mov    edi,0xa
  40a477:	vzeroupper 
  40a47a:	call   406120 <fputc@plt>
  40a47f:	mov    rdi,QWORD PTR [rbx+0x18]
  40a483:	mov    rsi,rbx
  40a486:	mov    rdx,r14
  40a489:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40a48e:	mov    QWORD PTR [rsp+0x48],rbx
  40a493:	mov    r14,QWORD PTR [rbx+0x40]
  40a497:	test   r14,r14
  40a49a:	je     40a55a <__flatcc_fb_gen_c_reader@@Base+0x12ea>
  40a4a0:	mov    rax,QWORD PTR [r14+0x8]
  40a4a4:	cmp    QWORD PTR [rax+0x10],0x0
  40a4a9:	je     40a4c4 <__flatcc_fb_gen_c_reader@@Base+0x1254>
  40a4ab:	mov    rdi,QWORD PTR [r13+0x0]
  40a4af:	lea    rsi,[rip+0x2bfed]        # 4364a3 <_IO_stdin_used@@Base+0x84a3>
  40a4b6:	lea    rdx,[rip+0x25886]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40a4bd:	xor    eax,eax
  40a4bf:	call   406180 <fprintf@plt>
  40a4c4:	mov    rdi,QWORD PTR [r13+0x0]
  40a4c8:	mov    rax,QWORD PTR [r14+0x8]
  40a4cc:	mov    edx,DWORD PTR [rax+0x8]
  40a4cf:	mov    rcx,QWORD PTR [rax]
  40a4d2:	mov    rsi,r15
  40a4d5:	xor    eax,eax
  40a4d7:	call   406180 <fprintf@plt>
  40a4dc:	mov    rbx,QWORD PTR [r14]
  40a4df:	test   rbx,rbx
  40a4e2:	je     40a540 <__flatcc_fb_gen_c_reader@@Base+0x12d0>
  40a4e4:	mov    rax,QWORD PTR [r14+0x8]
  40a4e8:	mov    rax,QWORD PTR [rax+0x10]
  40a4ec:	jmp    40a51b <__flatcc_fb_gen_c_reader@@Base+0x12ab>
  40a4ee:	xchg   ax,ax
  40a4f0:	mov    rdi,QWORD PTR [r13+0x0]
  40a4f4:	mov    rax,QWORD PTR [rbx+0x8]
  40a4f8:	mov    edx,DWORD PTR [rax+0x8]
  40a4fb:	mov    rcx,QWORD PTR [rax]
  40a4fe:	mov    rsi,r15
  40a501:	xor    eax,eax
  40a503:	call   406180 <fprintf@plt>
  40a508:	mov    rax,QWORD PTR [rbx+0x8]
  40a50c:	mov    rcx,QWORD PTR [rbx]
  40a50f:	mov    rax,QWORD PTR [rax+0x10]
  40a513:	mov    rbx,rcx
  40a516:	test   rcx,rcx
  40a519:	je     40a540 <__flatcc_fb_gen_c_reader@@Base+0x12d0>
  40a51b:	mov    rcx,QWORD PTR [rbx+0x8]
  40a51f:	cmp    rax,QWORD PTR [rcx+0x10]
  40a523:	je     40a4f0 <__flatcc_fb_gen_c_reader@@Base+0x1280>
  40a525:	mov    rdi,QWORD PTR [r13+0x0]
  40a529:	lea    rsi,[rip+0x2bf7a]        # 4364aa <_IO_stdin_used@@Base+0x84aa>
  40a530:	lea    rdx,[rip+0x2580c]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40a537:	xor    eax,eax
  40a539:	call   406180 <fprintf@plt>
  40a53e:	jmp    40a4f0 <__flatcc_fb_gen_c_reader@@Base+0x1280>
  40a540:	mov    rcx,QWORD PTR [r13+0x0]
  40a544:	mov    esi,0x4
  40a549:	mov    edx,0x1
  40a54e:	lea    rdi,[rip+0x3ab17]        # 44506c <_IO_stdin_used@@Base+0x1706c>
  40a555:	call   406230 <fwrite@plt>
  40a55a:	mov    rdi,QWORD PTR [r12+0xd0]
  40a562:	lea    rsi,[rip+0x2c869]        # 436dd2 <_IO_stdin_used@@Base+0x8dd2>
  40a569:	lea    rbx,[rsp+0x260]
  40a571:	mov    rdx,rbx
  40a574:	xor    eax,eax
  40a576:	call   406180 <fprintf@plt>
  40a57b:	mov    rdi,QWORD PTR [r12+0xd0]
  40a583:	lea    rsi,[rip+0x2c4a7]        # 436a31 <_IO_stdin_used@@Base+0x8a31>
  40a58a:	mov    rdx,rbx
  40a58d:	mov    rcx,rbx
  40a590:	mov    r8,r12
  40a593:	xor    eax,eax
  40a595:	call   406180 <fprintf@plt>
  40a59a:	mov    rdi,QWORD PTR [r12+0xd0]
  40a5a2:	sub    rsp,0x8
  40a5a6:	lea    rsi,[rip+0x2c84e]        # 436dfb <_IO_stdin_used@@Base+0x8dfb>
  40a5ad:	mov    rdx,rbx
  40a5b0:	mov    rcx,rbx
  40a5b3:	mov    r8,rbx
  40a5b6:	mov    r9,r12
  40a5b9:	xor    eax,eax
  40a5bb:	push   rbx
  40a5bc:	call   406180 <fprintf@plt>
  40a5c1:	add    rsp,0x10
  40a5c5:	mov    rdi,QWORD PTR [r12+0xd0]
  40a5cd:	lea    rsi,[rip+0x2c88c]        # 436e60 <_IO_stdin_used@@Base+0x8e60>
  40a5d4:	mov    rdx,r12
  40a5d7:	mov    rcx,rbx
  40a5da:	xor    eax,eax
  40a5dc:	call   406180 <fprintf@plt>
  40a5e1:	mov    rsi,QWORD PTR [r12+0xd0]
  40a5e9:	mov    edi,0xa
  40a5ee:	call   406120 <fputc@plt>
  40a5f3:	mov    rax,QWORD PTR [rsp+0x48]
  40a5f8:	mov    r12,QWORD PTR [rax+0x28]
  40a5fc:	test   r12,r12
  40a5ff:	je     40a386 <__flatcc_fb_gen_c_reader@@Base+0x1116>
  40a605:	mov    DWORD PTR [rsp+0x30],0x0
  40a60d:	jmp    40a63d <__flatcc_fb_gen_c_reader@@Base+0x13cd>
  40a60f:	nop
  40a610:	mov    rdi,QWORD PTR [r13+0x0]
  40a614:	lea    rsi,[rip+0x2c85c]        # 436e77 <_IO_stdin_used@@Base+0x8e77>
  40a61b:	lea    rdx,[rsp+0x260]
  40a623:	mov    ecx,r9d
  40a626:	mov    r8,r11
  40a629:	xor    eax,eax
  40a62b:	call   406180 <fprintf@plt>
  40a630:	mov    r12,QWORD PTR [r12]
  40a634:	test   r12,r12
  40a637:	je     40a386 <__flatcc_fb_gen_c_reader@@Base+0x1116>
  40a63d:	mov    r14,QWORD PTR [r12+0x68]
  40a642:	test   r14,r14
  40a645:	je     40a70a <__flatcc_fb_gen_c_reader@@Base+0x149a>
  40a64b:	mov    rax,QWORD PTR [r14+0x8]
  40a64f:	cmp    QWORD PTR [rax+0x10],0x0
  40a654:	je     40a66f <__flatcc_fb_gen_c_reader@@Base+0x13ff>
  40a656:	mov    rdi,QWORD PTR [r13+0x0]
  40a65a:	lea    rsi,[rip+0x2be42]        # 4364a3 <_IO_stdin_used@@Base+0x84a3>
  40a661:	lea    rdx,[rip+0x256db]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40a668:	xor    eax,eax
  40a66a:	call   406180 <fprintf@plt>
  40a66f:	mov    rdi,QWORD PTR [r13+0x0]
  40a673:	mov    rax,QWORD PTR [r14+0x8]
  40a677:	mov    edx,DWORD PTR [rax+0x8]
  40a67a:	mov    rcx,QWORD PTR [rax]
  40a67d:	mov    rsi,r15
  40a680:	xor    eax,eax
  40a682:	call   406180 <fprintf@plt>
  40a687:	mov    rbx,QWORD PTR [r14]
  40a68a:	test   rbx,rbx
  40a68d:	je     40a6f0 <__flatcc_fb_gen_c_reader@@Base+0x1480>
  40a68f:	mov    rax,QWORD PTR [r14+0x8]
  40a693:	mov    rax,QWORD PTR [rax+0x10]
  40a697:	jmp    40a6cb <__flatcc_fb_gen_c_reader@@Base+0x145b>
  40a699:	nop    DWORD PTR [rax+0x0]
  40a6a0:	mov    rdi,QWORD PTR [r13+0x0]
  40a6a4:	mov    rax,QWORD PTR [rbx+0x8]
  40a6a8:	mov    edx,DWORD PTR [rax+0x8]
  40a6ab:	mov    rcx,QWORD PTR [rax]
  40a6ae:	mov    rsi,r15
  40a6b1:	xor    eax,eax
  40a6b3:	call   406180 <fprintf@plt>
  40a6b8:	mov    rax,QWORD PTR [rbx+0x8]
  40a6bc:	mov    rcx,QWORD PTR [rbx]
  40a6bf:	mov    rax,QWORD PTR [rax+0x10]
  40a6c3:	mov    rbx,rcx
  40a6c6:	test   rcx,rcx
  40a6c9:	je     40a6f0 <__flatcc_fb_gen_c_reader@@Base+0x1480>
  40a6cb:	mov    rcx,QWORD PTR [rbx+0x8]
  40a6cf:	cmp    rax,QWORD PTR [rcx+0x10]
  40a6d3:	je     40a6a0 <__flatcc_fb_gen_c_reader@@Base+0x1430>
  40a6d5:	mov    rdi,QWORD PTR [r13+0x0]
  40a6d9:	lea    rsi,[rip+0x2bdca]        # 4364aa <_IO_stdin_used@@Base+0x84aa>
  40a6e0:	lea    rdx,[rip+0x2565c]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40a6e7:	xor    eax,eax
  40a6e9:	call   406180 <fprintf@plt>
  40a6ee:	jmp    40a6a0 <__flatcc_fb_gen_c_reader@@Base+0x1430>
  40a6f0:	mov    rcx,QWORD PTR [r13+0x0]
  40a6f4:	mov    esi,0x4
  40a6f9:	mov    edx,0x1
  40a6fe:	lea    rdi,[rip+0x3a967]        # 44506c <_IO_stdin_used@@Base+0x1706c>
  40a705:	call   406230 <fwrite@plt>
  40a70a:	mov    rax,QWORD PTR [r12+0x8]
  40a70f:	mov    r9d,DWORD PTR [rax+0x8]
  40a713:	mov    r11,QWORD PTR [rax]
  40a716:	movzx  r14d,WORD PTR [r12+0x70]
  40a71c:	test   r14b,0x4
  40a720:	jne    40a610 <__flatcc_fb_gen_c_reader@@Base+0x13a0>
  40a726:	mov    eax,DWORD PTR [r12+0x28]
  40a72b:	add    eax,0xfffffff9
  40a72e:	cmp    ax,0x8
  40a732:	ja     40b28c <__flatcc_fb_gen_c_reader@@Base+0x201c>
  40a738:	shr    r14d,0x8
  40a73c:	and    r14d,0x1
  40a740:	movzx  eax,ax
  40a743:	lea    rcx,[rip+0x25336]        # 42fa80 <_IO_stdin_used@@Base+0x1a80>
  40a74a:	movsxd rax,DWORD PTR [rcx+rax*4]
  40a74e:	add    rax,rcx
  40a751:	jmp    rax
  40a753:	mov    eax,DWORD PTR [r12+0x18]
  40a758:	dec    eax
  40a75a:	cmp    eax,0xb
  40a75d:	jae    40b47e <__flatcc_fb_gen_c_reader@@Base+0x220e>
  40a763:	movsxd r10,eax
  40a766:	mov    rdx,QWORD PTR [rsp+0x18]
  40a76b:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a772:	mov    rcx,QWORD PTR [r12+0x88]
  40a77a:	lea    rsi,[rip+0x2c86e]        # 436fef <_IO_stdin_used@@Base+0x8fef>
  40a781:	lea    r8,[rsp+0x260]
  40a789:	mov    eax,0x0
  40a78e:	push   r14
  40a790:	lea    rbx,[rip+0x47321]        # 451ab8 <fb_value_set_deleted@@Base+0x6858>
  40a797:	push   QWORD PTR [rbx+r10*8]
  40a79b:	push   rdx
  40a79c:	push   r11
  40a79e:	call   406180 <fprintf@plt>
  40a7a3:	add    rsp,0x20
  40a7a7:	mov    rsi,QWORD PTR [r12+0x90]
  40a7af:	test   rsi,rsi
  40a7b2:	je     40aed3 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40a7b8:	vxorps xmm0,xmm0,xmm0
  40a7bc:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40a7c2:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40a7cb:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40a7d4:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40a7dd:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40a7e6:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40a7ef:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40a7f8:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40a801:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40a80a:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40a813:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40a81c:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40a825:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  40a82e:	mov    QWORD PTR [rsp+0x140],0x0
  40a83a:	vmovaps YMMWORD PTR [rsp+0x220],ymm0
  40a843:	mov    QWORD PTR [rsp+0x240],0x0
  40a84f:	movzx  eax,WORD PTR [rsi+0x10]
  40a853:	lea    r14,[rip+0x2cc1a]        # 437474 <_IO_stdin_used@@Base+0x9474>
  40a85a:	test   ax,ax
  40a85d:	mov    rbx,QWORD PTR [rsp+0x48]
  40a862:	lea    rdx,[rsp+0x60]
  40a867:	je     40a87a <__flatcc_fb_gen_c_reader@@Base+0x160a>
  40a869:	cmp    ax,0x1
  40a86d:	jne    40b4c7 <__flatcc_fb_gen_c_reader@@Base+0x2257>
  40a873:	lea    r14,[rip+0x2cc01]        # 43747b <_IO_stdin_used@@Base+0x947b>
  40a87a:	mov    rdi,QWORD PTR [rsi+0x18]
  40a87e:	vzeroupper 
  40a881:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40a886:	cmp    WORD PTR [rbx+0x10],0x0
  40a88b:	jne    40b513 <__flatcc_fb_gen_c_reader@@Base+0x22a3>
  40a891:	mov    rdi,QWORD PTR [rbx+0x18]
  40a895:	mov    rsi,rbx
  40a898:	lea    rbx,[rsp+0x160]
  40a8a0:	mov    rdx,rbx
  40a8a3:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40a8a8:	mov    rax,QWORD PTR [r12+0x8]
  40a8ad:	mov    r8d,DWORD PTR [rax+0x8]
  40a8b1:	mov    r9,QWORD PTR [rax]
  40a8b4:	mov    rdx,QWORD PTR [rsp+0x18]
  40a8b9:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a8c0:	lea    rsi,[rip+0x2cc60]        # 437527 <_IO_stdin_used@@Base+0x9527>
  40a8c7:	mov    rcx,rbx
  40a8ca:	xor    eax,eax
  40a8cc:	push   r14
  40a8ce:	lea    rbx,[rsp+0x68]
  40a8d3:	push   rbx
  40a8d4:	call   406180 <fprintf@plt>
  40a8d9:	add    rsp,0x10
  40a8dd:	cmp    BYTE PTR [r12+0x70],0x0
  40a8e3:	jns    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a8e9:	jmp    40aedf <__flatcc_fb_gen_c_reader@@Base+0x1c6f>
  40a8ee:	mov    rbx,QWORD PTR [rsp+0x18]
  40a8f3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8fa:	mov    rcx,QWORD PTR [r12+0x88]
  40a902:	lea    rsi,[rip+0x2c719]        # 437022 <_IO_stdin_used@@Base+0x9022>
  40a909:	mov    rdx,rbx
  40a90c:	lea    r8,[rsp+0x260]
  40a914:	mov    QWORD PTR [rsp+0x20],r9
  40a919:	xor    eax,eax
  40a91b:	push   r14
  40a91d:	mov    QWORD PTR [rsp+0x30],r11
  40a922:	push   r11
  40a924:	call   406180 <fprintf@plt>
  40a929:	add    rsp,0x10
  40a92d:	mov    rax,QWORD PTR [rbx+0xe0]
  40a934:	cmp    DWORD PTR [rax+0x24],0x0
  40a938:	jne    40a946 <__flatcc_fb_gen_c_reader@@Base+0x16d6>
  40a93a:	cmp    BYTE PTR [r12+0x70],0x0
  40a940:	js     40b0e8 <__flatcc_fb_gen_c_reader@@Base+0x1e78>
  40a946:	cmp    BYTE PTR [r12+0x70],0x0
  40a94c:	jns    40aed3 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40a952:	cmp    DWORD PTR [rsp+0x30],0x0
  40a957:	je     40a973 <__flatcc_fb_gen_c_reader@@Base+0x1703>
  40a959:	mov    rcx,QWORD PTR [r13+0x0]
  40a95d:	mov    esi,0x42
  40a962:	mov    edx,0x1
  40a967:	lea    rdi,[rip+0x2c1c0]        # 436b2e <_IO_stdin_used@@Base+0x8b2e>
  40a96e:	call   406230 <fwrite@plt>
  40a973:	mov    rbx,QWORD PTR [rsp+0x18]
  40a978:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a97f:	lea    rsi,[rip+0x2c6f4]        # 43707a <_IO_stdin_used@@Base+0x907a>
  40a986:	mov    rdx,rbx
  40a989:	lea    r14,[rsp+0x260]
  40a991:	mov    rcx,r14
  40a994:	mov    r8,QWORD PTR [rsp+0x20]
  40a999:	mov    r9,QWORD PTR [rsp+0x28]
  40a99e:	xor    eax,eax
  40a9a0:	call   406180 <fprintf@plt>
  40a9a5:	mov    rax,QWORD PTR [rbx+0xe0]
  40a9ac:	cmp    DWORD PTR [rax+0xa8],0x0
  40a9b3:	je     40a9da <__flatcc_fb_gen_c_reader@@Base+0x176a>
  40a9b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9bc:	lea    rsi,[rip+0x2c6e2]        # 4370a5 <_IO_stdin_used@@Base+0x90a5>
  40a9c3:	mov    rdx,rbx
  40a9c6:	mov    rcx,r14
  40a9c9:	mov    r8,QWORD PTR [rsp+0x20]
  40a9ce:	mov    r9,QWORD PTR [rsp+0x28]
  40a9d3:	xor    eax,eax
  40a9d5:	call   406180 <fprintf@plt>
  40a9da:	cmp    DWORD PTR [rsp+0x30],0x0
  40a9df:	jne    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a9e5:	mov    rbx,QWORD PTR [rsp+0x18]
  40a9ea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9f1:	lea    rsi,[rip+0x2c6d8]        # 4370d0 <_IO_stdin_used@@Base+0x90d0>
  40a9f8:	mov    rdx,rbx
  40a9fb:	lea    r14,[rsp+0x260]
  40aa03:	mov    rcx,r14
  40aa06:	mov    r8,QWORD PTR [rsp+0x20]
  40aa0b:	mov    r14,QWORD PTR [rsp+0x28]
  40aa10:	mov    r9,r14
  40aa13:	xor    eax,eax
  40aa15:	call   406180 <fprintf@plt>
  40aa1a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa21:	lea    rsi,[rip+0x2c6db]        # 437103 <_IO_stdin_used@@Base+0x9103>
  40aa28:	mov    rdx,rbx
  40aa2b:	lea    rcx,[rsp+0x260]
  40aa33:	mov    r8,QWORD PTR [rsp+0x20]
  40aa38:	mov    r9,r14
  40aa3b:	xor    eax,eax
  40aa3d:	call   406180 <fprintf@plt>
  40aa42:	jmp    40aca0 <__flatcc_fb_gen_c_reader@@Base+0x1a30>
  40aa47:	mov    QWORD PTR [rsp+0x20],r9
  40aa4c:	mov    QWORD PTR [rsp+0x28],r11
  40aa51:	mov    edi,DWORD PTR [r12+0x18]
  40aa56:	cmp    edi,0x5
  40aa59:	lea    r14,[rip+0x252e3]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40aa60:	mov    r15,QWORD PTR [rsp+0x18]
  40aa65:	cmove  r14,r15
  40aa69:	lea    eax,[rdi-0x1]
  40aa6c:	cmp    eax,0xb
  40aa6f:	jae    40b1e1 <__flatcc_fb_gen_c_reader@@Base+0x1f71>
  40aa75:	cdqe   
  40aa77:	lea    rcx,[rip+0x47092]        # 451b10 <fb_value_set_deleted@@Base+0x68b0>
  40aa7e:	mov    rcx,QWORD PTR [rcx+rax*8]
  40aa82:	mov    QWORD PTR [rsp+0x38],rcx
  40aa87:	lea    rcx,[rip+0x46fd2]        # 451a60 <fb_value_set_deleted@@Base+0x6800>
  40aa8e:	mov    rax,QWORD PTR [rcx+rax*8]
  40aa92:	mov    QWORD PTR [rsp+0x40],rax
  40aa97:	lea    rsi,[r12+0x48]
  40aa9c:	lea    rax,[rsp+0x460]
  40aaa4:	mov    rdx,rax
  40aaa7:	call   40bd50 <__flatcc_fb_gen_c_reader@@Base+0x2ae0>
  40aaac:	mov    rdi,QWORD PTR [r15+0xd0]
  40aab3:	mov    rcx,QWORD PTR [r12+0x88]
  40aabb:	lea    rsi,[rip+0x2c3e2]        # 436ea4 <_IO_stdin_used@@Base+0x8ea4>
  40aac2:	mov    rdx,r15
  40aac5:	lea    r8,[rsp+0x260]
  40aacd:	mov    r9,QWORD PTR [rsp+0x20]
  40aad2:	mov    eax,0x0
  40aad7:	lea    rbx,[rsp+0x460]
  40aadf:	push   rbx
  40aae0:	push   QWORD PTR [rsp+0x40]
  40aae4:	push   r14
  40aae6:	push   QWORD PTR [rsp+0x58]
  40aaea:	push   r15
  40aaec:	push   QWORD PTR [rsp+0x50]
  40aaf0:	call   406180 <fprintf@plt>
  40aaf5:	add    rsp,0x30
  40aaf9:	mov    rax,QWORD PTR [r15+0xe0]
  40ab00:	cmp    DWORD PTR [rax+0x24],0x0
  40ab04:	jne    40ab44 <__flatcc_fb_gen_c_reader@@Base+0x18d4>
  40ab06:	cmp    BYTE PTR [r12+0x70],0x0
  40ab0c:	jns    40ab44 <__flatcc_fb_gen_c_reader@@Base+0x18d4>
  40ab0e:	mov    rdx,QWORD PTR [rsp+0x18]
  40ab13:	mov    rdi,QWORD PTR [rdx+0xd0]
  40ab1a:	lea    rsi,[rip+0x2c3bc]        # 436edd <_IO_stdin_used@@Base+0x8edd>
  40ab21:	lea    rcx,[rsp+0x260]
  40ab29:	mov    r8,QWORD PTR [rsp+0x20]
  40ab2e:	mov    r9,QWORD PTR [rsp+0x28]
  40ab33:	xor    eax,eax
  40ab35:	push   QWORD PTR [rsp+0x38]
  40ab39:	push   r14
  40ab3b:	call   406180 <fprintf@plt>
  40ab40:	add    rsp,0x10
  40ab44:	cmp    BYTE PTR [r12+0x70],0x0
  40ab4a:	lea    r15,[rip+0x3604e]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  40ab51:	jns    40aed3 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40ab57:	cmp    DWORD PTR [rsp+0x30],0x0
  40ab5c:	je     40ab78 <__flatcc_fb_gen_c_reader@@Base+0x1908>
  40ab5e:	mov    rcx,QWORD PTR [r13+0x0]
  40ab62:	mov    esi,0x42
  40ab67:	mov    edx,0x1
  40ab6c:	lea    rdi,[rip+0x2bfbb]        # 436b2e <_IO_stdin_used@@Base+0x8b2e>
  40ab73:	call   406230 <fwrite@plt>
  40ab78:	mov    rbx,QWORD PTR [rsp+0x18]
  40ab7d:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ab84:	mov    esi,0x3d
  40ab89:	mov    edx,0x1
  40ab8e:	lea    rdi,[rip+0x2bfdc]        # 436b71 <_IO_stdin_used@@Base+0x8b71>
  40ab95:	call   406230 <fwrite@plt>
  40ab9a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aba1:	lea    rsi,[rip+0x2c366]        # 436f0e <_IO_stdin_used@@Base+0x8f0e>
  40aba8:	mov    rdx,rbx
  40abab:	lea    rax,[rsp+0x260]
  40abb3:	mov    rcx,rax
  40abb6:	mov    r8,QWORD PTR [rsp+0x20]
  40abbb:	mov    r9,QWORD PTR [rsp+0x28]
  40abc0:	xor    eax,eax
  40abc2:	push   QWORD PTR [rsp+0x38]
  40abc6:	push   r14
  40abc8:	call   406180 <fprintf@plt>
  40abcd:	add    rsp,0x10
  40abd1:	mov    rax,QWORD PTR [rbx+0xe0]
  40abd8:	cmp    DWORD PTR [rax+0xa8],0x0
  40abdf:	je     40ac1a <__flatcc_fb_gen_c_reader@@Base+0x19aa>
  40abe1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40abe8:	sub    rsp,0x8
  40abec:	lea    rsi,[rip+0x2c34c]        # 436f3f <_IO_stdin_used@@Base+0x8f3f>
  40abf3:	mov    rdx,rbx
  40abf6:	lea    rcx,[rsp+0x268]
  40abfe:	mov    r8,QWORD PTR [rsp+0x28]
  40ac03:	mov    r9,QWORD PTR [rsp+0x30]
  40ac08:	xor    eax,eax
  40ac0a:	push   rbx
  40ac0b:	push   QWORD PTR [rsp+0x48]
  40ac0f:	push   r14
  40ac11:	call   406180 <fprintf@plt>
  40ac16:	add    rsp,0x20
  40ac1a:	cmp    DWORD PTR [rsp+0x30],0x0
  40ac1f:	jne    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40ac25:	mov    rbx,QWORD PTR [rsp+0x18]
  40ac2a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac31:	lea    rsi,[rip+0x2c345]        # 436f7d <_IO_stdin_used@@Base+0x8f7d>
  40ac38:	mov    rdx,rbx
  40ac3b:	lea    rax,[rsp+0x260]
  40ac43:	mov    rcx,rax
  40ac46:	mov    r8,QWORD PTR [rsp+0x20]
  40ac4b:	mov    r9,QWORD PTR [rsp+0x28]
  40ac50:	xor    eax,eax
  40ac52:	mov    r10,r14
  40ac55:	mov    QWORD PTR [rsp+0x58],r14
  40ac5a:	mov    r14,QWORD PTR [rsp+0x38]
  40ac5f:	push   r14
  40ac61:	push   r10
  40ac63:	call   406180 <fprintf@plt>
  40ac68:	add    rsp,0x10
  40ac6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac73:	lea    rsi,[rip+0x2c33c]        # 436fb6 <_IO_stdin_used@@Base+0x8fb6>
  40ac7a:	mov    rdx,rbx
  40ac7d:	lea    rcx,[rsp+0x260]
  40ac85:	mov    r8,QWORD PTR [rsp+0x20]
  40ac8a:	mov    r9,QWORD PTR [rsp+0x28]
  40ac8f:	xor    eax,eax
  40ac91:	push   r14
  40ac93:	push   QWORD PTR [rsp+0x60]
  40ac97:	call   406180 <fprintf@plt>
  40ac9c:	add    rsp,0x10
  40aca0:	mov    rax,QWORD PTR [rbx+0xe0]
  40aca7:	mov    DWORD PTR [rsp+0x30],0x1
  40acaf:	cmp    DWORD PTR [rax+0xa8],0x0
  40acb6:	je     40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40acbc:	mov    rdi,QWORD PTR [r13+0x0]
  40acc0:	lea    rsi,[rip+0x2bfd6]        # 436c9d <_IO_stdin_used@@Base+0x8c9d>
  40acc7:	lea    rcx,[rsp+0x260]
  40accf:	mov    rdx,rcx
  40acd2:	mov    r8,QWORD PTR [rsp+0x20]
  40acd7:	mov    r9,QWORD PTR [rsp+0x28]
  40acdc:	xor    eax,eax
  40acde:	call   406180 <fprintf@plt>
  40ace3:	jmp    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40ace8:	mov    rdx,QWORD PTR [rsp+0x18]
  40aced:	mov    rdi,QWORD PTR [rdx+0xd0]
  40acf4:	mov    rcx,QWORD PTR [r12+0x88]
  40acfc:	sub    rsp,0x8
  40ad00:	lea    rsi,[rip+0x2c42f]        # 437136 <_IO_stdin_used@@Base+0x9136>
  40ad07:	lea    r8,[rsp+0x268]
  40ad0f:	xor    eax,eax
  40ad11:	push   r14
  40ad13:	push   rdx
  40ad14:	push   r11
  40ad16:	jmp    40aeca <__flatcc_fb_gen_c_reader@@Base+0x1c5a>
  40ad1b:	mov    QWORD PTR [rsp+0x20],r9
  40ad20:	mov    rbx,r11
  40ad23:	mov    rsi,QWORD PTR [r12+0x18]
  40ad28:	mov    rdi,QWORD PTR [rsi+0x18]
  40ad2c:	lea    rdx,[rsp+0x360]
  40ad34:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40ad39:	mov    rax,QWORD PTR [r12+0x18]
  40ad3e:	movzx  eax,WORD PTR [rax+0x10]
  40ad42:	cmp    ax,0x4
  40ad46:	ja     40b3a8 <__flatcc_fb_gen_c_reader@@Base+0x2138>
  40ad4c:	cmp    ax,0x2
  40ad50:	je     40b3a8 <__flatcc_fb_gen_c_reader@@Base+0x2138>
  40ad56:	mov    rdi,QWORD PTR [r13+0x0]
  40ad5a:	mov    r8,QWORD PTR [r12+0x88]
  40ad62:	cmp    ax,0x4
  40ad66:	mov    r10,rbx
  40ad69:	jne    40ae04 <__flatcc_fb_gen_c_reader@@Base+0x1b94>
  40ad6f:	lea    rsi,[rip+0x2c5bb]        # 437331 <_IO_stdin_used@@Base+0x9331>
  40ad76:	mov    rcx,QWORD PTR [rsp+0x18]
  40ad7b:	mov    rdx,rcx
  40ad7e:	lea    r9,[rsp+0x260]
  40ad86:	mov    eax,0x0
  40ad8b:	push   r14
  40ad8d:	lea    rbx,[rsp+0x368]
  40ad95:	push   rbx
  40ad96:	push   r10
  40ad98:	jmp    40ae72 <__flatcc_fb_gen_c_reader@@Base+0x1c02>
  40ad9d:	mov    QWORD PTR [rsp+0x20],r9
  40ada2:	mov    QWORD PTR [rsp+0x28],r11
  40ada7:	mov    rsi,QWORD PTR [r12+0x18]
  40adac:	mov    rdi,QWORD PTR [rsi+0x18]
  40adb0:	lea    rdx,[rsp+0x360]
  40adb8:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40adbd:	mov    rax,QWORD PTR [r12+0x18]
  40adc2:	movzx  ecx,WORD PTR [rax+0x10]
  40adc6:	cmp    rcx,0x4
  40adca:	ja     40b3f1 <__flatcc_fb_gen_c_reader@@Base+0x2181>
  40add0:	lea    rdx,[rip+0x24ccd]        # 42faa4 <_IO_stdin_used@@Base+0x1aa4>
  40add7:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40addb:	add    rcx,rdx
  40adde:	jmp    rcx
  40ade0:	mov    rdx,QWORD PTR [rsp+0x18]
  40ade5:	mov    rdi,QWORD PTR [rdx+0xd0]
  40adec:	mov    rcx,QWORD PTR [r12+0x88]
  40adf4:	sub    rsp,0x8
  40adf8:	lea    rsi,[rip+0x2c3ae]        # 4371ad <_IO_stdin_used@@Base+0x91ad>
  40adff:	jmp    40aeac <__flatcc_fb_gen_c_reader@@Base+0x1c3c>
  40ae04:	sub    rsp,0x8
  40ae08:	lea    rsi,[rip+0x2c55d]        # 43736c <_IO_stdin_used@@Base+0x936c>
  40ae0f:	mov    rdx,QWORD PTR [rsp+0x20]
  40ae14:	mov    rcx,r8
  40ae17:	lea    r8,[rsp+0x268]
  40ae1f:	mov    r9,QWORD PTR [rsp+0x28]
  40ae24:	xor    eax,eax
  40ae26:	push   r14
  40ae28:	lea    rbx,[rsp+0x370]
  40ae30:	push   rbx
  40ae31:	push   r10
  40ae33:	jmp    40aeca <__flatcc_fb_gen_c_reader@@Base+0x1c5a>
  40ae38:	mov    rcx,QWORD PTR [rsp+0x18]
  40ae3d:	mov    rdi,QWORD PTR [rcx+0xd0]
  40ae44:	mov    r8,QWORD PTR [r12+0x88]
  40ae4c:	lea    rsi,[rip+0x2c411]        # 437264 <_IO_stdin_used@@Base+0x9264>
  40ae53:	mov    rdx,rcx
  40ae56:	lea    r9,[rsp+0x260]
  40ae5e:	mov    eax,0x0
  40ae63:	push   r14
  40ae65:	lea    rbx,[rsp+0x368]
  40ae6d:	push   rbx
  40ae6e:	push   QWORD PTR [rsp+0x38]
  40ae72:	push   QWORD PTR [rsp+0x38]
  40ae76:	call   406180 <fprintf@plt>
  40ae7b:	add    rsp,0x20
  40ae7f:	cmp    BYTE PTR [r12+0x70],0x0
  40ae85:	jns    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40ae8b:	jmp    40aedf <__flatcc_fb_gen_c_reader@@Base+0x1c6f>
  40ae8d:	mov    rdx,QWORD PTR [rsp+0x18]
  40ae92:	mov    rdi,QWORD PTR [rdx+0xd0]
  40ae99:	mov    rcx,QWORD PTR [r12+0x88]
  40aea1:	sub    rsp,0x8
  40aea5:	lea    rsi,[rip+0x2c2c7]        # 437173 <_IO_stdin_used@@Base+0x9173>
  40aeac:	lea    r8,[rsp+0x268]
  40aeb4:	mov    r9,QWORD PTR [rsp+0x28]
  40aeb9:	xor    eax,eax
  40aebb:	push   r14
  40aebd:	lea    rbx,[rsp+0x370]
  40aec5:	push   rbx
  40aec6:	push   QWORD PTR [rsp+0x40]
  40aeca:	call   406180 <fprintf@plt>
  40aecf:	add    rsp,0x20
  40aed3:	cmp    BYTE PTR [r12+0x70],0x0
  40aed9:	jns    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40aedf:	mov    rcx,QWORD PTR [r13+0x0]
  40aee3:	mov    esi,0x54
  40aee8:	mov    edx,0x1
  40aeed:	lea    rdi,[rip+0x2be09]        # 436cfd <_IO_stdin_used@@Base+0x8cfd>
  40aef4:	call   406230 <fwrite@plt>
  40aef9:	mov    DWORD PTR [rsp+0x30],0x1
  40af01:	jmp    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40af06:	mov    edi,DWORD PTR [rax+0x48]
  40af09:	lea    rsi,[r12+0x48]
  40af0e:	lea    rbx,[rsp+0x460]
  40af16:	mov    rdx,rbx
  40af19:	call   40bd50 <__flatcc_fb_gen_c_reader@@Base+0x2ae0>
  40af1e:	mov    rdx,QWORD PTR [rsp+0x18]
  40af23:	mov    rdi,QWORD PTR [rdx+0xd0]
  40af2a:	mov    rcx,QWORD PTR [r12+0x88]
  40af32:	lea    rsi,[rip+0x2c2ac]        # 4371e5 <_IO_stdin_used@@Base+0x91e5>
  40af39:	lea    r14,[rsp+0x260]
  40af41:	mov    r8,r14
  40af44:	mov    r9,QWORD PTR [rsp+0x20]
  40af49:	mov    eax,0x0
  40af4e:	push   rbx
  40af4f:	lea    rbx,[rsp+0x368]
  40af57:	push   rbx
  40af58:	push   rbx
  40af59:	push   QWORD PTR [rsp+0x40]
  40af5d:	call   406180 <fprintf@plt>
  40af62:	add    rsp,0x20
  40af66:	mov    rax,QWORD PTR [rsp+0x18]
  40af6b:	mov    rax,QWORD PTR [rax+0xe0]
  40af72:	cmp    DWORD PTR [rax+0x24],0x0
  40af76:	jne    40af84 <__flatcc_fb_gen_c_reader@@Base+0x1d14>
  40af78:	cmp    BYTE PTR [r12+0x70],0x0
  40af7e:	js     40b125 <__flatcc_fb_gen_c_reader@@Base+0x1eb5>
  40af84:	cmp    BYTE PTR [r12+0x70],0x0
  40af8a:	jns    40aed3 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40af90:	cmp    DWORD PTR [rsp+0x30],0x0
  40af95:	je     40afb1 <__flatcc_fb_gen_c_reader@@Base+0x1d41>
  40af97:	mov    rcx,QWORD PTR [r13+0x0]
  40af9b:	mov    esi,0x42
  40afa0:	mov    edx,0x1
  40afa5:	lea    rdi,[rip+0x2bb82]        # 436b2e <_IO_stdin_used@@Base+0x8b2e>
  40afac:	call   406230 <fwrite@plt>
  40afb1:	mov    rbx,QWORD PTR [rsp+0x18]
  40afb6:	mov    rcx,QWORD PTR [rbx+0xd0]
  40afbd:	mov    esi,0x3d
  40afc2:	mov    edx,0x1
  40afc7:	lea    rdi,[rip+0x2bba3]        # 436b71 <_IO_stdin_used@@Base+0x8b71>
  40afce:	call   406230 <fwrite@plt>
  40afd3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afda:	sub    rsp,0x8
  40afde:	lea    rsi,[rip+0x2bbca]        # 436baf <_IO_stdin_used@@Base+0x8baf>
  40afe5:	mov    rdx,rbx
  40afe8:	lea    r14,[rsp+0x268]
  40aff0:	mov    rcx,r14
  40aff3:	mov    r8,QWORD PTR [rsp+0x28]
  40aff8:	mov    r9,QWORD PTR [rsp+0x30]
  40affd:	xor    eax,eax
  40afff:	lea    rbx,[rsp+0x368]
  40b007:	push   rbx
  40b008:	call   406180 <fprintf@plt>
  40b00d:	mov    rdx,QWORD PTR [rsp+0x28]
  40b012:	add    rsp,0x10
  40b016:	mov    rax,QWORD PTR [rdx+0xe0]
  40b01d:	cmp    DWORD PTR [rax+0xa8],0x0
  40b024:	je     40b04e <__flatcc_fb_gen_c_reader@@Base+0x1dde>
  40b026:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b02d:	lea    rsi,[rip+0x2c1ed]        # 437221 <_IO_stdin_used@@Base+0x9221>
  40b034:	mov    rcx,r14
  40b037:	mov    r8,QWORD PTR [rsp+0x20]
  40b03c:	mov    r9,QWORD PTR [rsp+0x28]
  40b041:	xor    eax,eax
  40b043:	push   rdx
  40b044:	push   rbx
  40b045:	call   406180 <fprintf@plt>
  40b04a:	add    rsp,0x10
  40b04e:	cmp    DWORD PTR [rsp+0x30],0x0
  40b053:	jne    40a630 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40b059:	mov    rdx,QWORD PTR [rsp+0x18]
  40b05e:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b065:	sub    rsp,0x8
  40b069:	lea    rsi,[rip+0x2bbb1]        # 436c21 <_IO_stdin_used@@Base+0x8c21>
  40b070:	lea    r14,[rsp+0x268]
  40b078:	mov    rcx,r14
  40b07b:	mov    r8,QWORD PTR [rsp+0x28]
  40b080:	mov    r14,QWORD PTR [rsp+0x30]
  40b085:	mov    r9,r14
  40b088:	xor    eax,eax
  40b08a:	lea    rbx,[rsp+0x368]
  40b092:	push   rbx
  40b093:	call   406180 <fprintf@plt>
  40b098:	add    rsp,0x10
  40b09c:	mov    rdx,QWORD PTR [rsp+0x18]
  40b0a1:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b0a8:	sub    rsp,0x8
  40b0ac:	lea    rsi,[rip+0x2bbac]        # 436c5f <_IO_stdin_used@@Base+0x8c5f>
  40b0b3:	lea    rcx,[rsp+0x268]
  40b0bb:	mov    r8,QWORD PTR [rsp+0x28]
  40b0c0:	mov    r9,r14
  40b0c3:	xor    eax,eax
  40b0c5:	lea    rbx,[rsp+0x368]
  40b0cd:	push   rbx
  40b0ce:	call   406180 <fprintf@plt>
  40b0d3:	add    rsp,0x10
  40b0d7:	mov    rax,QWORD PTR [rsp+0x18]
  40b0dc:	mov    rax,QWORD PTR [rax+0xe0]
  40b0e3:	jmp    40aca7 <__flatcc_fb_gen_c_reader@@Base+0x1a37>
  40b0e8:	mov    rdx,QWORD PTR [rsp+0x18]
  40b0ed:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b0f4:	lea    rsi,[rip+0x2bf54]        # 43704f <_IO_stdin_used@@Base+0x904f>
  40b0fb:	lea    rcx,[rsp+0x260]
  40b103:	mov    r8,QWORD PTR [rsp+0x20]
  40b108:	mov    r9,QWORD PTR [rsp+0x28]
  40b10d:	xor    eax,eax
  40b10f:	call   406180 <fprintf@plt>
  40b114:	cmp    BYTE PTR [r12+0x70],0x0
  40b11a:	jns    40aed3 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40b120:	jmp    40a952 <__flatcc_fb_gen_c_reader@@Base+0x16e2>
  40b125:	mov    rdx,QWORD PTR [rsp+0x18]
  40b12a:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b131:	sub    rsp,0x8
  40b135:	lea    rsi,[rip+0x2b9bc]        # 436af8 <_IO_stdin_used@@Base+0x8af8>
  40b13c:	mov    rcx,r14
  40b13f:	mov    r8,QWORD PTR [rsp+0x28]
  40b144:	mov    r9,QWORD PTR [rsp+0x30]
  40b149:	xor    eax,eax
  40b14b:	lea    rbx,[rsp+0x368]
  40b153:	push   rbx
  40b154:	call   406180 <fprintf@plt>
  40b159:	add    rsp,0x10
  40b15d:	cmp    BYTE PTR [r12+0x70],0x0
  40b163:	jns    40aed3 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40b169:	jmp    40af90 <__flatcc_fb_gen_c_reader@@Base+0x1d20>
  40b16e:	mov    rsi,QWORD PTR [r12+0xd0]
  40b176:	mov    edi,0xa
  40b17b:	call   406120 <fputc@plt>
  40b180:	mov    rax,QWORD PTR [r12+0xe0]
  40b188:	cmp    DWORD PTR [rax+0xac],0x0
  40b18f:	je     40b1ab <__flatcc_fb_gen_c_reader@@Base+0x1f3b>
  40b191:	mov    rcx,QWORD PTR [r13+0x0]
  40b195:	lea    rdi,[rip+0x2a943]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  40b19c:	mov    esi,0x24
  40b1a1:	mov    edx,0x1
  40b1a6:	call   406230 <fwrite@plt>
  40b1ab:	mov    rdi,QWORD PTR [r12+0xd0]
  40b1b3:	mov    rax,QWORD PTR [r12+0xd8]
  40b1bb:	mov    rdx,QWORD PTR [rax+0x118]
  40b1c2:	lea    rsi,[rip+0x2c38b]        # 437554 <_IO_stdin_used@@Base+0x9554>
  40b1c9:	xor    eax,eax
  40b1cb:	call   406180 <fprintf@plt>
  40b1d0:	xor    eax,eax
  40b1d2:	lea    rsp,[rbp-0x28]
  40b1d6:	pop    rbx
  40b1d7:	pop    r12
  40b1d9:	pop    r13
  40b1db:	pop    r14
  40b1dd:	pop    r15
  40b1df:	pop    rbp
  40b1e0:	ret    
  40b1e1:	mov    rax,QWORD PTR [rip+0x46e10]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b1e8:	mov    rdi,QWORD PTR [rax]
  40b1eb:	lea    rsi,[rip+0x24a36]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b1f2:	lea    rbx,[rip+0x2b1e1]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40b1f9:	lea    r8,[rip+0x2b23d]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40b200:	mov    rdx,rbx
  40b203:	mov    ecx,0x8d
  40b208:	xor    eax,eax
  40b20a:	call   406180 <fprintf@plt>
  40b20f:	lea    rdi,[rip+0x35979]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b216:	lea    rcx,[rip+0x2b257]        # 436474 <_IO_stdin_used@@Base+0x8474>
  40b21d:	mov    rsi,rbx
  40b220:	mov    edx,0x8d
  40b225:	call   406100 <__assert_fail@plt>
  40b22a:	mov    rdi,QWORD PTR [r13+0x0]
  40b22e:	lea    rsi,[rip+0x2b658]        # 43688d <_IO_stdin_used@@Base+0x888d>
  40b235:	lea    rdx,[rip+0x2b659]        # 436895 <_IO_stdin_used@@Base+0x8895>
  40b23c:	xor    eax,eax
  40b23e:	call   406180 <fprintf@plt>
  40b243:	mov    rax,QWORD PTR [rip+0x46dae]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b24a:	mov    rdi,QWORD PTR [rax]
  40b24d:	lea    rsi,[rip+0x249d4]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b254:	lea    rbx,[rip+0x249d8]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b25b:	lea    r8,[rip+0x2b1db]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40b262:	mov    rdx,rbx
  40b265:	mov    ecx,0x405
  40b26a:	xor    eax,eax
  40b26c:	call   406180 <fprintf@plt>
  40b271:	lea    rdi,[rip+0x35917]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b278:	lea    rcx,[rip+0x2b303]        # 436582 <_IO_stdin_used@@Base+0x8582>
  40b27f:	mov    rsi,rbx
  40b282:	mov    edx,0x405
  40b287:	call   406100 <__assert_fail@plt>
  40b28c:	mov    rax,QWORD PTR [rip+0x46d65]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b293:	mov    rdi,QWORD PTR [rax]
  40b296:	lea    rsi,[rip+0x2498b]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b29d:	lea    rbx,[rip+0x2498f]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b2a4:	lea    r8,[rip+0x2c0f8]        # 4373a3 <_IO_stdin_used@@Base+0x93a3>
  40b2ab:	mov    rdx,rbx
  40b2ae:	mov    ecx,0x63f
  40b2b3:	xor    eax,eax
  40b2b5:	call   406180 <fprintf@plt>
  40b2ba:	lea    rdi,[rip+0x358ce]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b2c1:	lea    rcx,[rip+0x2bad6]        # 436d9e <_IO_stdin_used@@Base+0x8d9e>
  40b2c8:	mov    rsi,rbx
  40b2cb:	mov    edx,0x63f
  40b2d0:	call   406100 <__assert_fail@plt>
  40b2d5:	lea    rdi,[rip+0x2b52c]        # 436808 <_IO_stdin_used@@Base+0x8808>
  40b2dc:	lea    rsi,[rip+0x24950]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b2e3:	lea    rcx,[rip+0x2b298]        # 436582 <_IO_stdin_used@@Base+0x8582>
  40b2ea:	mov    edx,0x3fa
  40b2ef:	call   406100 <__assert_fail@plt>
  40b2f4:	mov    rax,QWORD PTR [rip+0x46cfd]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b2fb:	mov    rdi,QWORD PTR [rax]
  40b2fe:	lea    rsi,[rip+0x24923]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b305:	lea    rbx,[rip+0x2b0ce]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40b30c:	lea    r8,[rip+0x2b12a]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40b313:	mov    rdx,rbx
  40b316:	mov    ecx,0x60
  40b31b:	xor    eax,eax
  40b31d:	call   406180 <fprintf@plt>
  40b322:	lea    rdi,[rip+0x35866]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b329:	lea    rcx,[rip+0x2ba3d]        # 436d6d <_IO_stdin_used@@Base+0x8d6d>
  40b330:	mov    rsi,rbx
  40b333:	mov    edx,0x60
  40b338:	call   406100 <__assert_fail@plt>
  40b33d:	lea    rdi,[rip+0x2b21e]        # 436562 <_IO_stdin_used@@Base+0x8562>
  40b344:	lea    rsi,[rip+0x248e8]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b34b:	lea    rcx,[rip+0x2b230]        # 436582 <_IO_stdin_used@@Base+0x8582>
  40b352:	mov    edx,0x3a8
  40b357:	vzeroupper 
  40b35a:	call   406100 <__assert_fail@plt>
  40b35f:	mov    rax,QWORD PTR [rip+0x46c92]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b366:	mov    rdi,QWORD PTR [rax]
  40b369:	lea    rsi,[rip+0x248b8]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b370:	lea    rbx,[rip+0x248bc]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b377:	lea    r8,[rip+0x2491f]        # 42fc9d <_IO_stdin_used@@Base+0x1c9d>
  40b37e:	mov    rdx,rbx
  40b381:	mov    ecx,0x688
  40b386:	xor    eax,eax
  40b388:	call   406180 <fprintf@plt>
  40b38d:	lea    rdi,[rip+0x357fb]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b394:	lea    rcx,[rip+0x2492e]        # 42fcc9 <_IO_stdin_used@@Base+0x1cc9>
  40b39b:	mov    rsi,rbx
  40b39e:	mov    edx,0x688
  40b3a3:	call   406100 <__assert_fail@plt>
  40b3a8:	mov    rax,QWORD PTR [rip+0x46c49]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b3af:	mov    rdi,QWORD PTR [rax]
  40b3b2:	lea    rsi,[rip+0x2486f]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b3b9:	lea    rbx,[rip+0x24873]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b3c0:	lea    r8,[rip+0x2bf1a]        # 4372e1 <_IO_stdin_used@@Base+0x92e1>
  40b3c7:	mov    rdx,rbx
  40b3ca:	mov    ecx,0x630
  40b3cf:	xor    eax,eax
  40b3d1:	call   406180 <fprintf@plt>
  40b3d6:	lea    rdi,[rip+0x357b2]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b3dd:	lea    rcx,[rip+0x2b9ba]        # 436d9e <_IO_stdin_used@@Base+0x8d9e>
  40b3e4:	mov    rsi,rbx
  40b3e7:	mov    edx,0x630
  40b3ec:	call   406100 <__assert_fail@plt>
  40b3f1:	mov    rax,QWORD PTR [rip+0x46c00]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b3f8:	mov    rdi,QWORD PTR [rax]
  40b3fb:	lea    rsi,[rip+0x24826]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b402:	lea    rbx,[rip+0x2482a]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b409:	lea    r8,[rip+0x2be88]        # 437298 <_IO_stdin_used@@Base+0x9298>
  40b410:	mov    rdx,rbx
  40b413:	mov    ecx,0x620
  40b418:	xor    eax,eax
  40b41a:	call   406180 <fprintf@plt>
  40b41f:	lea    rdi,[rip+0x35769]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b426:	lea    rcx,[rip+0x2b971]        # 436d9e <_IO_stdin_used@@Base+0x8d9e>
  40b42d:	mov    rsi,rbx
  40b430:	mov    edx,0x620
  40b435:	call   406100 <__assert_fail@plt>
  40b43a:	lea    rdi,[rip+0x2b176]        # 4365b7 <_IO_stdin_used@@Base+0x85b7>
  40b441:	lea    rsi,[rip+0x247eb]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b448:	lea    rcx,[rip+0x2b133]        # 436582 <_IO_stdin_used@@Base+0x8582>
  40b44f:	mov    edx,0x3a9
  40b454:	vzeroupper 
  40b457:	call   406100 <__assert_fail@plt>
  40b45c:	lea    rdi,[rip+0x2b174]        # 4365d7 <_IO_stdin_used@@Base+0x85d7>
  40b463:	lea    rsi,[rip+0x247c9]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b46a:	lea    rcx,[rip+0x2b111]        # 436582 <_IO_stdin_used@@Base+0x8582>
  40b471:	mov    edx,0x3aa
  40b476:	vzeroupper 
  40b479:	call   406100 <__assert_fail@plt>
  40b47e:	mov    rax,QWORD PTR [rip+0x46b73]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b485:	mov    rdi,QWORD PTR [rax]
  40b488:	lea    rsi,[rip+0x24799]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b48f:	lea    rbx,[rip+0x2af44]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40b496:	lea    r8,[rip+0x2afa0]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40b49d:	mov    rdx,rbx
  40b4a0:	mov    ecx,0xba
  40b4a5:	xor    eax,eax
  40b4a7:	call   406180 <fprintf@plt>
  40b4ac:	lea    rdi,[rip+0x356dc]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b4b3:	lea    rcx,[rip+0x2bf84]        # 43743e <_IO_stdin_used@@Base+0x943e>
  40b4ba:	mov    rsi,rbx
  40b4bd:	mov    edx,0xba
  40b4c2:	call   406100 <__assert_fail@plt>
  40b4c7:	mov    rax,QWORD PTR [rip+0x46b2a]        # 451ff8 <stderr@GLIBC_2.2.5>
  40b4ce:	mov    rdi,QWORD PTR [rax]
  40b4d1:	lea    rsi,[rip+0x24750]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40b4d8:	lea    rbx,[rip+0x24754]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b4df:	lea    r8,[rip+0x2bf9d]        # 437483 <_IO_stdin_used@@Base+0x9483>
  40b4e6:	mov    rdx,rbx
  40b4e9:	mov    ecx,0x53b
  40b4ee:	xor    eax,eax
  40b4f0:	vzeroupper 
  40b4f3:	call   406180 <fprintf@plt>
  40b4f8:	lea    rdi,[rip+0x35690]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40b4ff:	lea    rcx,[rip+0x2bfb1]        # 4374b7 <_IO_stdin_used@@Base+0x94b7>
  40b506:	mov    rsi,rbx
  40b509:	mov    edx,0x53b
  40b50e:	call   406100 <__assert_fail@plt>
  40b513:	lea    rdi,[rip+0x2bfee]        # 437508 <_IO_stdin_used@@Base+0x9508>
  40b51a:	lea    rsi,[rip+0x24712]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b521:	lea    rcx,[rip+0x2bf8f]        # 4374b7 <_IO_stdin_used@@Base+0x94b7>
  40b528:	mov    edx,0x53f
  40b52d:	call   406100 <__assert_fail@plt>
  40b532:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b53c:	nop    DWORD PTR [rax+0x0]
  40b540:	push   rbp
  40b541:	mov    rbp,rsp
  40b544:	push   r14
  40b546:	push   rbx
  40b547:	and    rsp,0xffffffffffffffe0
  40b54b:	sub    rsp,0x100
  40b552:	vxorps xmm0,xmm0,xmm0
  40b556:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40b55f:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40b568:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40b571:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40b577:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40b57d:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40b583:	vmovaps YMMWORD PTR [rsp],ymm0
  40b588:	mov    QWORD PTR [rsp+0xe0],0x0
  40b594:	cmp    WORD PTR [rsi+0x10],0x2
  40b599:	jae    40b6b7 <__flatcc_fb_gen_c_reader@@Base+0x2447>
  40b59f:	mov    rbx,rsi
  40b5a2:	mov    r14,rdi
  40b5a5:	mov    rdi,QWORD PTR [rsi+0x18]
  40b5a9:	mov    rdx,rsp
  40b5ac:	vzeroupper 
  40b5af:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40b5b4:	cmp    WORD PTR [rbx+0x10],0x1
  40b5b9:	jne    40b5e2 <__flatcc_fb_gen_c_reader@@Base+0x2372>
  40b5bb:	cmp    QWORD PTR [rbx+0xb8],0x0
  40b5c3:	mov    rdi,QWORD PTR [r14+0xd0]
  40b5ca:	je     40b62e <__flatcc_fb_gen_c_reader@@Base+0x23be>
  40b5cc:	lea    rsi,[rip+0x2a931]        # 435f04 <_IO_stdin_used@@Base+0x7f04>
  40b5d3:	mov    rcx,rsp
  40b5d6:	mov    rdx,rcx
  40b5d9:	xor    eax,eax
  40b5db:	call   406180 <fprintf@plt>
  40b5e0:	jmp    40b63f <__flatcc_fb_gen_c_reader@@Base+0x23cf>
  40b5e2:	mov    rdi,QWORD PTR [r14+0xd0]
  40b5e9:	lea    rsi,[rip+0x2a9b3]        # 435fa3 <_IO_stdin_used@@Base+0x7fa3>
  40b5f0:	mov    rbx,rsp
  40b5f3:	mov    rdx,rbx
  40b5f6:	mov    rcx,rbx
  40b5f9:	xor    eax,eax
  40b5fb:	call   406180 <fprintf@plt>
  40b600:	mov    rdi,QWORD PTR [r14+0xd0]
  40b607:	lea    rsi,[rip+0x2a9c1]        # 435fcf <_IO_stdin_used@@Base+0x7fcf>
  40b60e:	mov    rdx,r14
  40b611:	mov    rcx,rbx
  40b614:	xor    eax,eax
  40b616:	call   406180 <fprintf@plt>
  40b61b:	mov    rdi,QWORD PTR [r14+0xd0]
  40b622:	lea    rsi,[rip+0x2a9cc]        # 435ff5 <_IO_stdin_used@@Base+0x7ff5>
  40b629:	mov    rdx,r14
  40b62c:	jmp    40b6a4 <__flatcc_fb_gen_c_reader@@Base+0x2434>
  40b62e:	lea    rsi,[rip+0x2a8a8]        # 435edd <_IO_stdin_used@@Base+0x7edd>
  40b635:	mov    rdx,rsp
  40b638:	xor    eax,eax
  40b63a:	call   406180 <fprintf@plt>
  40b63f:	mov    rdi,QWORD PTR [r14+0xd0]
  40b646:	lea    rsi,[rip+0x2a8d0]        # 435f1d <_IO_stdin_used@@Base+0x7f1d>
  40b64d:	mov    rbx,rsp
  40b650:	mov    rdx,rbx
  40b653:	mov    rcx,rbx
  40b656:	xor    eax,eax
  40b658:	call   406180 <fprintf@plt>
  40b65d:	mov    rdi,QWORD PTR [r14+0xd0]
  40b664:	lea    rsi,[rip+0x2a8d4]        # 435f3f <_IO_stdin_used@@Base+0x7f3f>
  40b66b:	mov    rdx,rbx
  40b66e:	mov    rcx,rbx
  40b671:	xor    eax,eax
  40b673:	call   406180 <fprintf@plt>
  40b678:	mov    rdi,QWORD PTR [r14+0xd0]
  40b67f:	lea    rsi,[rip+0x2a8dd]        # 435f63 <_IO_stdin_used@@Base+0x7f63>
  40b686:	mov    rdx,rbx
  40b689:	mov    rcx,rbx
  40b68c:	xor    eax,eax
  40b68e:	call   406180 <fprintf@plt>
  40b693:	mov    rdi,QWORD PTR [r14+0xd0]
  40b69a:	lea    rsi,[rip+0x2a8e1]        # 435f82 <_IO_stdin_used@@Base+0x7f82>
  40b6a1:	mov    rdx,rbx
  40b6a4:	mov    rcx,rbx
  40b6a7:	xor    eax,eax
  40b6a9:	call   406180 <fprintf@plt>
  40b6ae:	lea    rsp,[rbp-0x10]
  40b6b2:	pop    rbx
  40b6b3:	pop    r14
  40b6b5:	pop    rbp
  40b6b6:	ret    
  40b6b7:	lea    rdi,[rip+0x2a7a2]        # 435e60 <_IO_stdin_used@@Base+0x7e60>
  40b6be:	lea    rsi,[rip+0x2456e]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40b6c5:	lea    rcx,[rip+0x2a7d6]        # 435ea2 <_IO_stdin_used@@Base+0x7ea2>
  40b6cc:	mov    edx,0x35f
  40b6d1:	vzeroupper 
  40b6d4:	call   406100 <__assert_fail@plt>
  40b6d9:	nop    DWORD PTR [rax+0x0]
  40b6e0:	push   rbp
  40b6e1:	mov    rbp,rsp
  40b6e4:	push   r15
  40b6e6:	push   r14
  40b6e8:	push   r13
  40b6ea:	push   r12
  40b6ec:	push   rbx
  40b6ed:	and    rsp,0xffffffffffffffe0
  40b6f1:	sub    rsp,0x1c0
  40b6f8:	vxorps xmm0,xmm0,xmm0
  40b6fc:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40b705:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40b70e:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40b717:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40b720:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40b729:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40b72f:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40b735:	mov    QWORD PTR [rsp+0x120],0x0
  40b741:	mov    eax,DWORD PTR [rsi+0x10]
  40b744:	mov    QWORD PTR [rsp+0x20],rax
  40b749:	add    eax,0xfffffffd
  40b74c:	cmp    ax,0x2
  40b750:	jae    40bcb4 <__flatcc_fb_gen_c_reader@@Base+0x2a44>
  40b756:	mov    rbx,rsi
  40b759:	cmp    WORD PTR [rsi+0x58],0x8
  40b75e:	jne    40bcd6 <__flatcc_fb_gen_c_reader@@Base+0x2a66>
  40b764:	mov    r13,rdi
  40b767:	mov    eax,DWORD PTR [rbx+0x48]
  40b76a:	cmp    eax,0x5
  40b76d:	lea    r15,[rip+0x245cf]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40b774:	cmove  r15,rdi
  40b778:	dec    eax
  40b77a:	cmp    eax,0xb
  40b77d:	jae    40bcf8 <__flatcc_fb_gen_c_reader@@Base+0x2a88>
  40b783:	cdqe   
  40b785:	lea    rcx,[rip+0x46384]        # 451b10 <fb_value_set_deleted@@Base+0x68b0>
  40b78c:	mov    rax,QWORD PTR [rcx+rax*8]
  40b790:	mov    QWORD PTR [rsp+0x18],rax
  40b795:	mov    r12d,DWORD PTR [rbx+0xb8]
  40b79c:	shl    r12d,0x3
  40b7a0:	cmp    WORD PTR [rsp+0x20],0x3
  40b7a6:	lea    rax,[rip+0x2a98e]        # 43613b <_IO_stdin_used@@Base+0x813b>
  40b7ad:	lea    rcx,[rip+0x2b0aa]        # 43685e <_IO_stdin_used@@Base+0x885e>
  40b7b4:	cmovne rcx,rax
  40b7b8:	mov    QWORD PTR [rsp+0x30],rcx
  40b7bd:	mov    rdi,QWORD PTR [rbx+0x18]
  40b7c1:	lea    rdx,[rsp+0x40]
  40b7c6:	mov    rsi,rbx
  40b7c9:	vzeroupper 
  40b7cc:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40b7d1:	mov    QWORD PTR [rsp+0x10],rbx
  40b7d6:	mov    rbx,QWORD PTR [rbx+0x40]
  40b7da:	test   rbx,rbx
  40b7dd:	je     40b8d9 <__flatcc_fb_gen_c_reader@@Base+0x2669>
  40b7e3:	mov    DWORD PTR [rsp+0x2c],r12d
  40b7e8:	mov    QWORD PTR [rsp+0x38],r15
  40b7ed:	mov    rax,QWORD PTR [rbx+0x8]
  40b7f1:	cmp    QWORD PTR [rax+0x10],0x0
  40b7f6:	je     40b814 <__flatcc_fb_gen_c_reader@@Base+0x25a4>
  40b7f8:	mov    rdi,QWORD PTR [r13+0xd0]
  40b7ff:	lea    rsi,[rip+0x2ac9d]        # 4364a3 <_IO_stdin_used@@Base+0x84a3>
  40b806:	lea    rdx,[rip+0x24536]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40b80d:	xor    eax,eax
  40b80f:	call   406180 <fprintf@plt>
  40b814:	mov    rdi,QWORD PTR [r13+0xd0]
  40b81b:	mov    rax,QWORD PTR [rbx+0x8]
  40b81f:	mov    edx,DWORD PTR [rax+0x8]
  40b822:	mov    rcx,QWORD PTR [rax]
  40b825:	lea    rsi,[rip+0x35373]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  40b82c:	xor    eax,eax
  40b82e:	call   406180 <fprintf@plt>
  40b833:	mov    r12,QWORD PTR [rbx]
  40b836:	test   r12,r12
  40b839:	je     40b8b2 <__flatcc_fb_gen_c_reader@@Base+0x2642>
  40b83b:	mov    rax,QWORD PTR [rbx+0x8]
  40b83f:	mov    rax,QWORD PTR [rax+0x10]
  40b843:	lea    r15,[rip+0x35355]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  40b84a:	lea    rbx,[rip+0x2ac59]        # 4364aa <_IO_stdin_used@@Base+0x84aa>
  40b851:	lea    r14,[rip+0x244eb]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40b858:	jmp    40b891 <__flatcc_fb_gen_c_reader@@Base+0x2621>
  40b85a:	nop    WORD PTR [rax+rax*1+0x0]
  40b860:	mov    rdi,QWORD PTR [r13+0xd0]
  40b867:	mov    rax,QWORD PTR [r12+0x8]
  40b86c:	mov    edx,DWORD PTR [rax+0x8]
  40b86f:	mov    rcx,QWORD PTR [rax]
  40b872:	mov    rsi,r15
  40b875:	xor    eax,eax
  40b877:	call   406180 <fprintf@plt>
  40b87c:	mov    rax,QWORD PTR [r12+0x8]
  40b881:	mov    rcx,QWORD PTR [r12]
  40b885:	mov    rax,QWORD PTR [rax+0x10]
  40b889:	mov    r12,rcx
  40b88c:	test   rcx,rcx
  40b88f:	je     40b8b2 <__flatcc_fb_gen_c_reader@@Base+0x2642>
  40b891:	mov    rcx,QWORD PTR [r12+0x8]
  40b896:	cmp    rax,QWORD PTR [rcx+0x10]
  40b89a:	je     40b860 <__flatcc_fb_gen_c_reader@@Base+0x25f0>
  40b89c:	mov    rdi,QWORD PTR [r13+0xd0]
  40b8a3:	mov    rsi,rbx
  40b8a6:	mov    rdx,r14
  40b8a9:	xor    eax,eax
  40b8ab:	call   406180 <fprintf@plt>
  40b8b0:	jmp    40b860 <__flatcc_fb_gen_c_reader@@Base+0x25f0>
  40b8b2:	mov    rcx,QWORD PTR [r13+0xd0]
  40b8b9:	lea    rdi,[rip+0x397ac]        # 44506c <_IO_stdin_used@@Base+0x1706c>
  40b8c0:	mov    esi,0x4
  40b8c5:	mov    edx,0x1
  40b8ca:	call   406230 <fwrite@plt>
  40b8cf:	mov    r15,QWORD PTR [rsp+0x38]
  40b8d4:	mov    r12d,DWORD PTR [rsp+0x2c]
  40b8d9:	mov    rdi,QWORD PTR [r13+0xd0]
  40b8e0:	lea    rsi,[rip+0x2a85f]        # 436146 <_IO_stdin_used@@Base+0x8146>
  40b8e7:	lea    r14,[rsp+0x40]
  40b8ec:	mov    rdx,r15
  40b8ef:	mov    rcx,QWORD PTR [rsp+0x18]
  40b8f4:	mov    r8,r14
  40b8f7:	mov    rbx,QWORD PTR [rsp+0x30]
  40b8fc:	mov    r9,rbx
  40b8ff:	xor    eax,eax
  40b901:	call   406180 <fprintf@plt>
  40b906:	mov    rdi,QWORD PTR [r13+0xd0]
  40b90d:	mov    DWORD PTR [rsp],r12d
  40b911:	lea    rsi,[rip+0x2a845]        # 43615d <_IO_stdin_used@@Base+0x815d>
  40b918:	mov    rdx,r13
  40b91b:	mov    rcx,r14
  40b91e:	mov    r8,r14
  40b921:	mov    r9,rbx
  40b924:	xor    eax,eax
  40b926:	call   406180 <fprintf@plt>
  40b92b:	cmp    WORD PTR [rsp+0x20],0x3
  40b931:	je     40b953 <__flatcc_fb_gen_c_reader@@Base+0x26e3>
  40b933:	mov    rdi,QWORD PTR [r13+0xd0]
  40b93a:	lea    rsi,[rip+0x2a846]        # 436187 <_IO_stdin_used@@Base+0x8187>
  40b941:	lea    r8,[rsp+0x40]
  40b946:	mov    rdx,r13
  40b949:	mov    rcx,r13
  40b94c:	xor    eax,eax
  40b94e:	call   406180 <fprintf@plt>
  40b953:	add    r13,0xd0
  40b95a:	mov    QWORD PTR [rsp+0x18],r13
  40b95f:	mov    rax,QWORD PTR [rsp+0x10]
  40b964:	mov    r12,QWORD PTR [rax+0x28]
  40b968:	test   r12,r12
  40b96b:	je     40bac4 <__flatcc_fb_gen_c_reader@@Base+0x2854>
  40b971:	lea    r15,[rip+0x35227]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  40b978:	jmp    40ba08 <__flatcc_fb_gen_c_reader@@Base+0x2798>
  40b97d:	nop    DWORD PTR [rax]
  40b980:	mov    rcx,QWORD PTR [r13+0x0]
  40b984:	mov    esi,0x4
  40b989:	mov    edx,0x1
  40b98e:	lea    rdi,[rip+0x396d7]        # 44506c <_IO_stdin_used@@Base+0x1706c>
  40b995:	call   406230 <fwrite@plt>
  40b99a:	mov    rax,QWORD PTR [r12+0x8]
  40b99f:	mov    r14d,DWORD PTR [rax+0x8]
  40b9a3:	mov    r13,r15
  40b9a6:	mov    r15,QWORD PTR [rax]
  40b9a9:	mov    rax,QWORD PTR [rsp+0x10]
  40b9ae:	mov    edi,DWORD PTR [rax+0x48]
  40b9b1:	lea    rsi,[r12+0x48]
  40b9b6:	lea    rbx,[rsp+0x140]
  40b9be:	mov    rdx,rbx
  40b9c1:	call   40bd50 <__flatcc_fb_gen_c_reader@@Base+0x2ae0>
  40b9c6:	mov    rax,QWORD PTR [rsp+0x18]
  40b9cb:	mov    rdi,QWORD PTR [rax]
  40b9ce:	mov    QWORD PTR [rsp+0x8],rbx
  40b9d3:	mov    rax,QWORD PTR [rsp+0x30]
  40b9d8:	mov    QWORD PTR [rsp],rax
  40b9dc:	lea    rsi,[rip+0x2a7be]        # 4361a1 <_IO_stdin_used@@Base+0x81a1>
  40b9e3:	lea    rdx,[rsp+0x40]
  40b9e8:	mov    ecx,r14d
  40b9eb:	mov    r8,r15
  40b9ee:	mov    r15,r13
  40b9f1:	mov    r9,rdx
  40b9f4:	xor    eax,eax
  40b9f6:	call   406180 <fprintf@plt>
  40b9fb:	mov    r12,QWORD PTR [r12]
  40b9ff:	test   r12,r12
  40ba02:	je     40bac4 <__flatcc_fb_gen_c_reader@@Base+0x2854>
  40ba08:	mov    r14,QWORD PTR [r12+0x68]
  40ba0d:	test   r14,r14
  40ba10:	je     40b99a <__flatcc_fb_gen_c_reader@@Base+0x272a>
  40ba12:	mov    rax,QWORD PTR [r14+0x8]
  40ba16:	cmp    QWORD PTR [rax+0x10],0x0
  40ba1b:	mov    r13,QWORD PTR [rsp+0x18]
  40ba20:	je     40ba3b <__flatcc_fb_gen_c_reader@@Base+0x27cb>
  40ba22:	mov    rdi,QWORD PTR [r13+0x0]
  40ba26:	lea    rsi,[rip+0x2aa76]        # 4364a3 <_IO_stdin_used@@Base+0x84a3>
  40ba2d:	lea    rdx,[rip+0x2430f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40ba34:	xor    eax,eax
  40ba36:	call   406180 <fprintf@plt>
  40ba3b:	mov    rdi,QWORD PTR [r13+0x0]
  40ba3f:	mov    rax,QWORD PTR [r14+0x8]
  40ba43:	mov    edx,DWORD PTR [rax+0x8]
  40ba46:	mov    rcx,QWORD PTR [rax]
  40ba49:	mov    rsi,r15
  40ba4c:	xor    eax,eax
  40ba4e:	call   406180 <fprintf@plt>
  40ba53:	mov    rbx,QWORD PTR [r14]
  40ba56:	test   rbx,rbx
  40ba59:	je     40b980 <__flatcc_fb_gen_c_reader@@Base+0x2710>
  40ba5f:	mov    rax,QWORD PTR [r14+0x8]
  40ba63:	mov    rax,QWORD PTR [rax+0x10]
  40ba67:	jmp    40ba9f <__flatcc_fb_gen_c_reader@@Base+0x282f>
  40ba69:	nop    DWORD PTR [rax+0x0]
  40ba70:	mov    rdi,QWORD PTR [r13+0x0]
  40ba74:	mov    rax,QWORD PTR [rbx+0x8]
  40ba78:	mov    edx,DWORD PTR [rax+0x8]
  40ba7b:	mov    rcx,QWORD PTR [rax]
  40ba7e:	mov    rsi,r15
  40ba81:	xor    eax,eax
  40ba83:	call   406180 <fprintf@plt>
  40ba88:	mov    rax,QWORD PTR [rbx+0x8]
  40ba8c:	mov    rcx,QWORD PTR [rbx]
  40ba8f:	mov    rax,QWORD PTR [rax+0x10]
  40ba93:	mov    rbx,rcx
  40ba96:	test   rcx,rcx
  40ba99:	je     40b980 <__flatcc_fb_gen_c_reader@@Base+0x2710>
  40ba9f:	mov    rcx,QWORD PTR [rbx+0x8]
  40baa3:	cmp    rax,QWORD PTR [rcx+0x10]
  40baa7:	je     40ba70 <__flatcc_fb_gen_c_reader@@Base+0x2800>
  40baa9:	mov    rdi,QWORD PTR [r13+0x0]
  40baad:	lea    rsi,[rip+0x2a9f6]        # 4364aa <_IO_stdin_used@@Base+0x84aa>
  40bab4:	lea    rdx,[rip+0x24288]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40babb:	xor    eax,eax
  40babd:	call   406180 <fprintf@plt>
  40bac2:	jmp    40ba70 <__flatcc_fb_gen_c_reader@@Base+0x2800>
  40bac4:	mov    r13,QWORD PTR [rsp+0x18]
  40bac9:	mov    rsi,QWORD PTR [r13+0x0]
  40bacd:	mov    edi,0xa
  40bad2:	call   406120 <fputc@plt>
  40bad7:	mov    rdi,QWORD PTR [r13+0x0]
  40badb:	cmp    WORD PTR [rsp+0x20],0x3
  40bae1:	je     40bb0b <__flatcc_fb_gen_c_reader@@Base+0x289b>
  40bae3:	lea    rsi,[rip+0x2a6d6]        # 4361c0 <_IO_stdin_used@@Base+0x81c0>
  40baea:	lea    rcx,[rsp+0x40]
  40baef:	mov    rdx,rcx
  40baf2:	xor    eax,eax
  40baf4:	call   406180 <fprintf@plt>
  40baf9:	mov    rcx,QWORD PTR [r13+0x0]
  40bafd:	lea    rdi,[rip+0x39b2c]        # 445630 <_IO_stdin_used@@Base+0x17630>
  40bb04:	mov    esi,0x14
  40bb09:	jmp    40bb31 <__flatcc_fb_gen_c_reader@@Base+0x28c1>
  40bb0b:	lea    rsi,[rip+0x2a6ee]        # 436200 <_IO_stdin_used@@Base+0x8200>
  40bb12:	lea    rcx,[rsp+0x40]
  40bb17:	mov    rdx,rcx
  40bb1a:	xor    eax,eax
  40bb1c:	call   406180 <fprintf@plt>
  40bb21:	mov    rcx,QWORD PTR [r13+0x0]
  40bb25:	lea    rdi,[rip+0x2a70a]        # 436236 <_IO_stdin_used@@Base+0x8236>
  40bb2c:	mov    esi,0x15
  40bb31:	mov    edx,0x1
  40bb36:	call   406230 <fwrite@plt>
  40bb3b:	mov    rax,QWORD PTR [rsp+0x10]
  40bb40:	mov    rbx,QWORD PTR [rax+0x28]
  40bb44:	test   rbx,rbx
  40bb47:	je     40bb94 <__flatcc_fb_gen_c_reader@@Base+0x2924>
  40bb49:	lea    r15,[rip+0x2a730]        # 436280 <_IO_stdin_used@@Base+0x8280>
  40bb50:	lea    r12,[rip+0x2a6f5]        # 43624c <_IO_stdin_used@@Base+0x824c>
  40bb57:	lea    r14,[rsp+0x40]
  40bb5c:	nop    DWORD PTR [rax+0x0]
  40bb60:	mov    rax,QWORD PTR [rbx+0x8]
  40bb64:	mov    ecx,DWORD PTR [rax+0x8]
  40bb67:	mov    r8,QWORD PTR [rax]
  40bb6a:	movzx  eax,WORD PTR [rbx+0x12]
  40bb6e:	test   al,0x4
  40bb70:	mov    rdi,QWORD PTR [r13+0x0]
  40bb74:	mov    rsi,r12
  40bb77:	cmove  rsi,r15
  40bb7b:	mov    QWORD PTR [rsp],r8
  40bb7f:	mov    rdx,r14
  40bb82:	mov    r9d,ecx
  40bb85:	xor    eax,eax
  40bb87:	call   406180 <fprintf@plt>
  40bb8c:	mov    rbx,QWORD PTR [rbx]
  40bb8f:	test   rbx,rbx
  40bb92:	jne    40bb60 <__flatcc_fb_gen_c_reader@@Base+0x28f0>
  40bb94:	mov    rcx,QWORD PTR [r13+0x0]
  40bb98:	lea    rdi,[rip+0x2a703]        # 4362a2 <_IO_stdin_used@@Base+0x82a2>
  40bb9f:	mov    esi,0x20
  40bba4:	mov    edx,0x1
  40bba9:	call   406230 <fwrite@plt>
  40bbae:	mov    rsi,QWORD PTR [r13+0x0]
  40bbb2:	mov    edi,0xa
  40bbb7:	call   406120 <fputc@plt>
  40bbbc:	mov    rdi,QWORD PTR [r13+0x0]
  40bbc0:	cmp    WORD PTR [rsp+0x20],0x3
  40bbc6:	je     40bbf0 <__flatcc_fb_gen_c_reader@@Base+0x2980>
  40bbc8:	lea    rsi,[rip+0x2a6f4]        # 4362c3 <_IO_stdin_used@@Base+0x82c3>
  40bbcf:	lea    rcx,[rsp+0x40]
  40bbd4:	mov    rdx,rcx
  40bbd7:	xor    eax,eax
  40bbd9:	call   406180 <fprintf@plt>
  40bbde:	mov    rcx,QWORD PTR [r13+0x0]
  40bbe2:	lea    rdi,[rip+0x39a47]        # 445630 <_IO_stdin_used@@Base+0x17630>
  40bbe9:	mov    esi,0x14
  40bbee:	jmp    40bc16 <__flatcc_fb_gen_c_reader@@Base+0x29a6>
  40bbf0:	lea    rsi,[rip+0x2a708]        # 4362ff <_IO_stdin_used@@Base+0x82ff>
  40bbf7:	lea    rcx,[rsp+0x40]
  40bbfc:	mov    rdx,rcx
  40bbff:	xor    eax,eax
  40bc01:	call   406180 <fprintf@plt>
  40bc06:	mov    rcx,QWORD PTR [r13+0x0]
  40bc0a:	lea    rdi,[rip+0x2a625]        # 436236 <_IO_stdin_used@@Base+0x8236>
  40bc11:	mov    esi,0x15
  40bc16:	mov    edx,0x1
  40bc1b:	call   406230 <fwrite@plt>
  40bc20:	mov    rax,QWORD PTR [rsp+0x10]
  40bc25:	mov    rbx,QWORD PTR [rax+0x28]
  40bc29:	test   rbx,rbx
  40bc2c:	je     40bc7d <__flatcc_fb_gen_c_reader@@Base+0x2a0d>
  40bc2e:	lea    r15,[rip+0x2a731]        # 436366 <_IO_stdin_used@@Base+0x8366>
  40bc35:	lea    r12,[rip+0x2a6fb]        # 436337 <_IO_stdin_used@@Base+0x8337>
  40bc3c:	lea    r14,[rsp+0x40]
  40bc41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc50:	mov    rax,QWORD PTR [rbx+0x8]
  40bc54:	mov    ecx,DWORD PTR [rax+0x8]
  40bc57:	mov    r8,QWORD PTR [rax]
  40bc5a:	movzx  eax,WORD PTR [rbx+0x12]
  40bc5e:	test   al,0x4
  40bc60:	mov    rdi,QWORD PTR [r13+0x0]
  40bc64:	mov    rsi,r12
  40bc67:	cmove  rsi,r15
  40bc6b:	mov    rdx,r14
  40bc6e:	xor    eax,eax
  40bc70:	call   406180 <fprintf@plt>
  40bc75:	mov    rbx,QWORD PTR [rbx]
  40bc78:	test   rbx,rbx
  40bc7b:	jne    40bc50 <__flatcc_fb_gen_c_reader@@Base+0x29e0>
  40bc7d:	mov    rcx,QWORD PTR [r13+0x0]
  40bc81:	lea    rdi,[rip+0x2a6fb]        # 436383 <_IO_stdin_used@@Base+0x8383>
  40bc88:	mov    esi,0x1f
  40bc8d:	mov    edx,0x1
  40bc92:	call   406230 <fwrite@plt>
  40bc97:	mov    rsi,QWORD PTR [r13+0x0]
  40bc9b:	mov    edi,0xa
  40bca0:	call   406120 <fputc@plt>
  40bca5:	lea    rsp,[rbp-0x28]
  40bca9:	pop    rbx
  40bcaa:	pop    r12
  40bcac:	pop    r13
  40bcae:	pop    r14
  40bcb0:	pop    r15
  40bcb2:	pop    rbp
  40bcb3:	ret    
  40bcb4:	lea    rdi,[rip+0x2a3ed]        # 4360a8 <_IO_stdin_used@@Base+0x80a8>
  40bcbb:	lea    rsi,[rip+0x23f71]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40bcc2:	lea    rcx,[rip+0x2a41f]        # 4360e8 <_IO_stdin_used@@Base+0x80e8>
  40bcc9:	mov    edx,0x4b4
  40bcce:	vzeroupper 
  40bcd1:	call   406100 <__assert_fail@plt>
  40bcd6:	lea    rdi,[rip+0x2a43e]        # 43611b <_IO_stdin_used@@Base+0x811b>
  40bcdd:	lea    rsi,[rip+0x23f4f]        # 42fc33 <_IO_stdin_used@@Base+0x1c33>
  40bce4:	lea    rcx,[rip+0x2a3fd]        # 4360e8 <_IO_stdin_used@@Base+0x80e8>
  40bceb:	mov    edx,0x4b5
  40bcf0:	vzeroupper 
  40bcf3:	call   406100 <__assert_fail@plt>
  40bcf8:	mov    rax,QWORD PTR [rip+0x462f9]        # 451ff8 <stderr@GLIBC_2.2.5>
  40bcff:	mov    rdi,QWORD PTR [rax]
  40bd02:	lea    rsi,[rip+0x23f1f]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40bd09:	lea    rbx,[rip+0x2a6ca]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40bd10:	lea    r8,[rip+0x2a726]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40bd17:	mov    rdx,rbx
  40bd1a:	mov    ecx,0x8d
  40bd1f:	xor    eax,eax
  40bd21:	vzeroupper 
  40bd24:	call   406180 <fprintf@plt>
  40bd29:	lea    rdi,[rip+0x34e5f]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40bd30:	lea    rcx,[rip+0x2a73d]        # 436474 <_IO_stdin_used@@Base+0x8474>
  40bd37:	mov    rsi,rbx
  40bd3a:	mov    edx,0x8d
  40bd3f:	call   406100 <__assert_fail@plt>
  40bd44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd4e:	xchg   ax,ax
  40bd50:	push   rbx
  40bd51:	mov    ecx,DWORD PTR [rsi+0x10]
  40bd54:	add    ecx,0xfffffffd
  40bd57:	cmp    cx,0x3
  40bd5b:	ja     40be27 <__flatcc_fb_gen_c_reader@@Base+0x2bb7>
  40bd61:	mov    rax,rdx
  40bd64:	movzx  ecx,cx
  40bd67:	lea    rdx,[rip+0x23d4a]        # 42fab8 <_IO_stdin_used@@Base+0x1ab8>
  40bd6e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40bd72:	add    rcx,rdx
  40bd75:	jmp    rcx
  40bd77:	vmovsd xmm0,QWORD PTR [rsi]
  40bd7b:	cmp    edi,0xb
  40bd7e:	jne    40be15 <__flatcc_fb_gen_c_reader@@Base+0x2ba5>
  40bd84:	vcvtsd2ss xmm0,xmm0,xmm0
  40bd88:	vcvtss2sd xmm0,xmm0,xmm0
  40bd8c:	lea    rsi,[rip+0x2a737]        # 4364ca <_IO_stdin_used@@Base+0x84ca>
  40bd93:	jmp    40be1c <__flatcc_fb_gen_c_reader@@Base+0x2bac>
  40bd98:	dec    edi
  40bd9a:	cmp    edi,0x9
  40bd9d:	jae    40be70 <__flatcc_fb_gen_c_reader@@Base+0x2c00>
  40bda3:	movsxd rcx,edi
  40bda6:	lea    rdx,[rip+0x45dbb]        # 451b68 <fb_value_set_deleted@@Base+0x6908>
  40bdad:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40bdb1:	mov    rcx,QWORD PTR [rsi]
  40bdb4:	lea    rsi,[rip+0x2a6f6]        # 4364b1 <_IO_stdin_used@@Base+0x84b1>
  40bdbb:	jmp    40be0a <__flatcc_fb_gen_c_reader@@Base+0x2b9a>
  40bdbd:	dec    edi
  40bdbf:	cmp    edi,0x9
  40bdc2:	jae    40be70 <__flatcc_fb_gen_c_reader@@Base+0x2c00>
  40bdc8:	movsxd rcx,edi
  40bdcb:	lea    rdx,[rip+0x45d96]        # 451b68 <fb_value_set_deleted@@Base+0x6908>
  40bdd2:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40bdd6:	movzx  ecx,BYTE PTR [rsi]
  40bdd9:	lea    rsi,[rip+0x2a6e3]        # 4364c3 <_IO_stdin_used@@Base+0x84c3>
  40bde0:	mov    rdi,rax
  40bde3:	xor    eax,eax
  40bde5:	pop    rbx
  40bde6:	jmp    406210 <sprintf@plt>
  40bdeb:	dec    edi
  40bded:	cmp    edi,0x9
  40bdf0:	jae    40be70 <__flatcc_fb_gen_c_reader@@Base+0x2c00>
  40bdf2:	movsxd rcx,edi
  40bdf5:	lea    rdx,[rip+0x45d6c]        # 451b68 <fb_value_set_deleted@@Base+0x6908>
  40bdfc:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40be00:	mov    rcx,QWORD PTR [rsi]
  40be03:	lea    rsi,[rip+0x2a6b0]        # 4364ba <_IO_stdin_used@@Base+0x84ba>
  40be0a:	mov    rdi,rax
  40be0d:	xor    eax,eax
  40be0f:	pop    rbx
  40be10:	jmp    406210 <sprintf@plt>
  40be15:	lea    rsi,[rip+0x2a6b2]        # 4364ce <_IO_stdin_used@@Base+0x84ce>
  40be1c:	mov    rdi,rax
  40be1f:	mov    al,0x1
  40be21:	pop    rbx
  40be22:	jmp    406210 <sprintf@plt>
  40be27:	mov    rax,QWORD PTR [rip+0x461ca]        # 451ff8 <stderr@GLIBC_2.2.5>
  40be2e:	mov    rdi,QWORD PTR [rax]
  40be31:	lea    rsi,[rip+0x23df0]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40be38:	lea    rbx,[rip+0x2a59b]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40be3f:	lea    r8,[rip+0x2a5f7]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40be46:	mov    rdx,rbx
  40be49:	mov    ecx,0x104
  40be4e:	xor    eax,eax
  40be50:	call   406180 <fprintf@plt>
  40be55:	lea    rdi,[rip+0x34d33]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40be5c:	lea    rcx,[rip+0x2a66f]        # 4364d2 <_IO_stdin_used@@Base+0x84d2>
  40be63:	mov    rsi,rbx
  40be66:	mov    edx,0x104
  40be6b:	call   406100 <__assert_fail@plt>
  40be70:	mov    rax,QWORD PTR [rip+0x46181]        # 451ff8 <stderr@GLIBC_2.2.5>
  40be77:	mov    rdi,QWORD PTR [rax]
  40be7a:	lea    rsi,[rip+0x23da7]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40be81:	lea    rbx,[rip+0x2a552]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40be88:	lea    r8,[rip+0x2a5ae]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40be8f:	mov    rdx,rbx
  40be92:	mov    ecx,0xe2
  40be97:	xor    eax,eax
  40be99:	call   406180 <fprintf@plt>
  40be9e:	lea    rdi,[rip+0x34cea]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40bea5:	lea    rcx,[rip+0x2a68c]        # 436538 <_IO_stdin_used@@Base+0x8538>
  40beac:	mov    rsi,rbx
  40beaf:	mov    edx,0xe2
  40beb4:	call   406100 <__assert_fail@plt>
  40beb9:	nop    DWORD PTR [rax+0x0]

000000000040bec0 <__flatcc_gen_sort@@Base>:
  40bec0:	push   rbx
  40bec1:	mov    rbx,rdi
  40bec4:	mov    rdi,QWORD PTR [rdi+0xd0]
  40becb:	lea    rsi,[rip+0x2b69c]        # 43756e <_IO_stdin_used@@Base+0x956e>
  40bed2:	mov    rdx,rbx
  40bed5:	xor    eax,eax
  40bed7:	call   406180 <fprintf@plt>
  40bedc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bee3:	lea    rsi,[rip+0x2ba52]        # 43793c <_IO_stdin_used@@Base+0x993c>
  40beea:	mov    rdx,rbx
  40beed:	mov    rcx,rbx
  40bef0:	xor    eax,eax
  40bef2:	call   406180 <fprintf@plt>
  40bef7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40befe:	lea    rsi,[rip+0x2bb47]        # 437a4c <_IO_stdin_used@@Base+0x9a4c>
  40bf05:	mov    rdx,rbx
  40bf08:	mov    rcx,rbx
  40bf0b:	mov    r8,rbx
  40bf0e:	xor    eax,eax
  40bf10:	call   406180 <fprintf@plt>
  40bf15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf1c:	lea    rsi,[rip+0x2bbfd]        # 437b20 <_IO_stdin_used@@Base+0x9b20>
  40bf23:	mov    rdx,rbx
  40bf26:	mov    rcx,rbx
  40bf29:	mov    r8,rbx
  40bf2c:	mov    r9,rbx
  40bf2f:	xor    eax,eax
  40bf31:	call   406180 <fprintf@plt>
  40bf36:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf3d:	lea    rsi,[rip+0x2bc70]        # 437bb4 <_IO_stdin_used@@Base+0x9bb4>
  40bf44:	mov    rdx,rbx
  40bf47:	mov    rcx,rbx
  40bf4a:	xor    eax,eax
  40bf4c:	call   406180 <fprintf@plt>
  40bf51:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf58:	lea    rsi,[rip+0x2bdec]        # 437d4b <_IO_stdin_used@@Base+0x9d4b>
  40bf5f:	mov    rdx,rbx
  40bf62:	mov    rcx,rbx
  40bf65:	mov    r8,rbx
  40bf68:	mov    r9,rbx
  40bf6b:	xor    eax,eax
  40bf6d:	call   406180 <fprintf@plt>
  40bf72:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf79:	lea    rsi,[rip+0x2be50]        # 437dd0 <_IO_stdin_used@@Base+0x9dd0>
  40bf80:	mov    rdx,rbx
  40bf83:	mov    rcx,rbx
  40bf86:	mov    r8,rbx
  40bf89:	mov    r9,rbx
  40bf8c:	mov    eax,0x0
  40bf91:	push   rbx
  40bf92:	push   rbx
  40bf93:	call   406180 <fprintf@plt>
  40bf98:	add    rsp,0x10
  40bf9c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfa3:	lea    rsi,[rip+0x2beb4]        # 437e5e <_IO_stdin_used@@Base+0x9e5e>
  40bfaa:	mov    rdx,rbx
  40bfad:	mov    rcx,rbx
  40bfb0:	mov    r8,rbx
  40bfb3:	mov    r9,rbx
  40bfb6:	xor    eax,eax
  40bfb8:	call   406180 <fprintf@plt>
  40bfbd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfc4:	sub    rsp,0x8
  40bfc8:	lea    rsi,[rip+0x2bef0]        # 437ebf <_IO_stdin_used@@Base+0x9ebf>
  40bfcf:	mov    rdx,rbx
  40bfd2:	mov    rcx,rbx
  40bfd5:	mov    r8,rbx
  40bfd8:	mov    r9,rbx
  40bfdb:	mov    eax,0x0
  40bfe0:	push   rbx
  40bfe1:	push   rbx
  40bfe2:	push   rbx
  40bfe3:	call   406180 <fprintf@plt>
  40bfe8:	add    rsp,0x20
  40bfec:	xor    eax,eax
  40bfee:	pop    rbx
  40bfef:	ret    

000000000040bff0 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40bff0:	push   r14
  40bff2:	push   rbx
  40bff3:	push   rax
  40bff4:	mov    rbx,rdi
  40bff7:	lea    r14,[rdi+0x66]
  40bffb:	mov    rdi,QWORD PTR [rdi+0xd0]
  40c002:	lea    rsi,[rip+0x2bfc3]        # 437fcc <_IO_stdin_used@@Base+0x9fcc>
  40c009:	mov    rdx,r14
  40c00c:	xor    eax,eax
  40c00e:	call   406180 <fprintf@plt>
  40c013:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c01a:	lea    rsi,[rip+0x2bfc8]        # 437fe9 <_IO_stdin_used@@Base+0x9fe9>
  40c021:	mov    rdx,r14
  40c024:	xor    eax,eax
  40c026:	call   406180 <fprintf@plt>
  40c02b:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c032:	lea    rdi,[rip+0x23ac6]        # 42faff <_IO_stdin_used@@Base+0x1aff>
  40c039:	mov    esi,0x51
  40c03e:	mov    edx,0x1
  40c043:	call   406230 <fwrite@plt>
  40c048:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c04f:	lea    rdi,[rip+0x2bfb0]        # 438006 <_IO_stdin_used@@Base+0xa006>
  40c056:	mov    esi,0x35
  40c05b:	mov    edx,0x1
  40c060:	call   406230 <fwrite@plt>
  40c065:	mov    rax,QWORD PTR [rbx+0xe0]
  40c06c:	cmp    DWORD PTR [rax+0xac],0x0
  40c073:	je     40c092 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2>
  40c075:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c07c:	lea    rdi,[rip+0x23c72]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  40c083:	mov    esi,0x24
  40c088:	mov    edx,0x1
  40c08d:	call   406230 <fwrite@plt>
  40c092:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c099:	lea    rdi,[rip+0x2bf9c]        # 43803c <_IO_stdin_used@@Base+0xa03c>
  40c0a0:	mov    esi,0x16
  40c0a5:	mov    edx,0x1
  40c0aa:	call   406230 <fwrite@plt>
  40c0af:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c0b6:	lea    rdi,[rip+0x2bf96]        # 438053 <_IO_stdin_used@@Base+0xa053>
  40c0bd:	mov    esi,0x23
  40c0c2:	mov    edx,0x1
  40c0c7:	call   406230 <fwrite@plt>
  40c0cc:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c0d3:	lea    rdi,[rip+0x29c47]        # 435d21 <_IO_stdin_used@@Base+0x7d21>
  40c0da:	mov    esi,0x7
  40c0df:	mov    edx,0x1
  40c0e4:	call   406230 <fwrite@plt>
  40c0e9:	lea    rsi,[rip+0x2bf87]        # 438077 <_IO_stdin_used@@Base+0xa077>
  40c0f0:	mov    rdi,rbx
  40c0f3:	call   406160 <strcmp@plt>
  40c0f8:	test   eax,eax
  40c0fa:	je     40c190 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1a0>
  40c100:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c107:	lea    rsi,[rip+0x2bf79]        # 438087 <_IO_stdin_used@@Base+0xa087>
  40c10e:	mov    rdx,rbx
  40c111:	xor    eax,eax
  40c113:	call   406180 <fprintf@plt>
  40c118:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c11f:	lea    rsi,[rip+0x2bf88]        # 4380ae <_IO_stdin_used@@Base+0xa0ae>
  40c126:	mov    rdx,rbx
  40c129:	xor    eax,eax
  40c12b:	call   406180 <fprintf@plt>
  40c130:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c137:	lea    rsi,[rip+0x2bf97]        # 4380d5 <_IO_stdin_used@@Base+0xa0d5>
  40c13e:	mov    rdx,rbx
  40c141:	xor    eax,eax
  40c143:	call   406180 <fprintf@plt>
  40c148:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c14f:	lea    rsi,[rip+0x2bfaa]        # 438100 <_IO_stdin_used@@Base+0xa100>
  40c156:	mov    rdx,rbx
  40c159:	xor    eax,eax
  40c15b:	call   406180 <fprintf@plt>
  40c160:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c167:	lea    rsi,[rip+0x2bfc5]        # 438133 <_IO_stdin_used@@Base+0xa133>
  40c16e:	mov    rdx,rbx
  40c171:	xor    eax,eax
  40c173:	call   406180 <fprintf@plt>
  40c178:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c17f:	lea    rsi,[rip+0x2bfe8]        # 43816e <_IO_stdin_used@@Base+0xa16e>
  40c186:	mov    rdx,rbx
  40c189:	xor    eax,eax
  40c18b:	call   406180 <fprintf@plt>
  40c190:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c197:	lea    rsi,[rip+0x2c028]        # 4381c6 <_IO_stdin_used@@Base+0xa1c6>
  40c19e:	mov    rdx,rbx
  40c1a1:	mov    rcx,rbx
  40c1a4:	xor    eax,eax
  40c1a6:	call   406180 <fprintf@plt>
  40c1ab:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1b2:	lea    rsi,[rip+0x2c028]        # 4381e1 <_IO_stdin_used@@Base+0xa1e1>
  40c1b9:	mov    rdx,rbx
  40c1bc:	mov    rcx,rbx
  40c1bf:	xor    eax,eax
  40c1c1:	call   406180 <fprintf@plt>
  40c1c6:	lea    rsi,[rip+0x23b77]        # 42fd44 <_IO_stdin_used@@Base+0x1d44>
  40c1cd:	mov    rdi,rbx
  40c1d0:	call   406160 <strcmp@plt>
  40c1d5:	test   eax,eax
  40c1d7:	je     40c209 <__flatcc_fb_gen_common_c_builder_header@@Base+0x219>
  40c1d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1e0:	lea    rsi,[rip+0x2c021]        # 438208 <_IO_stdin_used@@Base+0xa208>
  40c1e7:	mov    rdx,rbx
  40c1ea:	xor    eax,eax
  40c1ec:	call   406180 <fprintf@plt>
  40c1f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1f8:	lea    rsi,[rip+0x2c03a]        # 438239 <_IO_stdin_used@@Base+0xa239>
  40c1ff:	mov    rdx,rbx
  40c202:	xor    eax,eax
  40c204:	call   406180 <fprintf@plt>
  40c209:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c210:	mov    edi,0xa
  40c215:	call   406120 <fputc@plt>
  40c21a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c221:	lea    rsi,[rip+0x2c035]        # 43825d <_IO_stdin_used@@Base+0xa25d>
  40c228:	mov    rdx,rbx
  40c22b:	xor    eax,eax
  40c22d:	call   406180 <fprintf@plt>
  40c232:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c239:	lea    rsi,[rip+0x2c390]        # 4385d0 <_IO_stdin_used@@Base+0xa5d0>
  40c240:	mov    rdx,rbx
  40c243:	xor    eax,eax
  40c245:	call   406180 <fprintf@plt>
  40c24a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c251:	lea    rsi,[rip+0x2ca41]        # 438c99 <_IO_stdin_used@@Base+0xac99>
  40c258:	mov    rdx,rbx
  40c25b:	mov    rcx,rbx
  40c25e:	mov    r8,rbx
  40c261:	xor    eax,eax
  40c263:	call   406180 <fprintf@plt>
  40c268:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c26f:	lea    rsi,[rip+0x2caac]        # 438d22 <_IO_stdin_used@@Base+0xad22>
  40c276:	mov    rdx,rbx
  40c279:	xor    eax,eax
  40c27b:	call   406180 <fprintf@plt>
  40c280:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c287:	lea    rsi,[rip+0x2d54f]        # 4397dd <_IO_stdin_used@@Base+0xb7dd>
  40c28e:	mov    rdx,rbx
  40c291:	xor    eax,eax
  40c293:	call   406180 <fprintf@plt>
  40c298:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c29f:	lea    rsi,[rip+0x2d912]        # 439bb8 <_IO_stdin_used@@Base+0xbbb8>
  40c2a6:	mov    rdx,rbx
  40c2a9:	xor    eax,eax
  40c2ab:	call   406180 <fprintf@plt>
  40c2b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2b7:	lea    rsi,[rip+0x2df30]        # 43a1ee <_IO_stdin_used@@Base+0xc1ee>
  40c2be:	mov    rdx,rbx
  40c2c1:	xor    eax,eax
  40c2c3:	call   406180 <fprintf@plt>
  40c2c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2cf:	lea    rsi,[rip+0x2e394]        # 43a66a <_IO_stdin_used@@Base+0xc66a>
  40c2d6:	mov    rdx,rbx
  40c2d9:	mov    rcx,rbx
  40c2dc:	xor    eax,eax
  40c2de:	call   406180 <fprintf@plt>
  40c2e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2ea:	lea    rsi,[rip+0x2eaec]        # 43addd <_IO_stdin_used@@Base+0xcddd>
  40c2f1:	mov    rdx,rbx
  40c2f4:	mov    rcx,rbx
  40c2f7:	mov    r8,rbx
  40c2fa:	xor    eax,eax
  40c2fc:	call   406180 <fprintf@plt>
  40c301:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c308:	lea    rsi,[rip+0x2f016]        # 43b325 <_IO_stdin_used@@Base+0xd325>
  40c30f:	mov    rdx,rbx
  40c312:	xor    eax,eax
  40c314:	call   406180 <fprintf@plt>
  40c319:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c320:	lea    rsi,[rip+0x2f47c]        # 43b7a3 <_IO_stdin_used@@Base+0xd7a3>
  40c327:	mov    rdx,rbx
  40c32a:	xor    eax,eax
  40c32c:	call   406180 <fprintf@plt>
  40c331:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c338:	lea    rsi,[rip+0x2f5f2]        # 43b931 <_IO_stdin_used@@Base+0xd931>
  40c33f:	mov    rdx,rbx
  40c342:	xor    eax,eax
  40c344:	call   406180 <fprintf@plt>
  40c349:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c350:	lea    rsi,[rip+0x2f934]        # 43bc8b <_IO_stdin_used@@Base+0xdc8b>
  40c357:	mov    rdx,rbx
  40c35a:	mov    rcx,rbx
  40c35d:	xor    eax,eax
  40c35f:	call   406180 <fprintf@plt>
  40c364:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c36b:	lea    rsi,[rip+0x2fb1e]        # 43be90 <_IO_stdin_used@@Base+0xde90>
  40c372:	mov    rdx,rbx
  40c375:	xor    eax,eax
  40c377:	call   406180 <fprintf@plt>
  40c37c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c383:	lea    rsi,[rip+0x2fe6f]        # 43c1f9 <_IO_stdin_used@@Base+0xe1f9>
  40c38a:	mov    rdx,rbx
  40c38d:	mov    rcx,rbx
  40c390:	mov    r8,rbx
  40c393:	xor    eax,eax
  40c395:	call   406180 <fprintf@plt>
  40c39a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3a1:	lea    rsi,[rip+0x3034d]        # 43c6f5 <_IO_stdin_used@@Base+0xe6f5>
  40c3a8:	mov    rdx,rbx
  40c3ab:	mov    rcx,rbx
  40c3ae:	mov    r8,rbx
  40c3b1:	mov    r9,rbx
  40c3b4:	xor    eax,eax
  40c3b6:	call   406180 <fprintf@plt>
  40c3bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3c2:	lea    rsi,[rip+0x30435]        # 43c7fe <_IO_stdin_used@@Base+0xe7fe>
  40c3c9:	mov    rdx,rbx
  40c3cc:	mov    rcx,rbx
  40c3cf:	xor    eax,eax
  40c3d1:	call   406180 <fprintf@plt>
  40c3d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3dd:	lea    rsi,[rip+0x30782]        # 43cb66 <_IO_stdin_used@@Base+0xeb66>
  40c3e4:	mov    rdx,rbx
  40c3e7:	mov    rcx,rbx
  40c3ea:	mov    r8,rbx
  40c3ed:	mov    r9,rbx
  40c3f0:	xor    eax,eax
  40c3f2:	call   406180 <fprintf@plt>
  40c3f7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3fe:	lea    rsi,[rip+0x30d5f]        # 43d164 <_IO_stdin_used@@Base+0xf164>
  40c405:	mov    rdx,rbx
  40c408:	mov    rcx,rbx
  40c40b:	xor    eax,eax
  40c40d:	call   406180 <fprintf@plt>
  40c412:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c419:	lea    rsi,[rip+0x30ef7]        # 43d317 <_IO_stdin_used@@Base+0xf317>
  40c420:	mov    rdx,rbx
  40c423:	xor    eax,eax
  40c425:	call   406180 <fprintf@plt>
  40c42a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c431:	lea    rsi,[rip+0x31104]        # 43d53c <_IO_stdin_used@@Base+0xf53c>
  40c438:	mov    rdx,rbx
  40c43b:	xor    eax,eax
  40c43d:	call   406180 <fprintf@plt>
  40c442:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c449:	lea    rsi,[rip+0x314ac]        # 43d8fc <_IO_stdin_used@@Base+0xf8fc>
  40c450:	mov    rdx,rbx
  40c453:	xor    eax,eax
  40c455:	call   406180 <fprintf@plt>
  40c45a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c461:	lea    rsi,[rip+0x31751]        # 43dbb9 <_IO_stdin_used@@Base+0xfbb9>
  40c468:	mov    rdx,rbx
  40c46b:	xor    eax,eax
  40c46d:	call   406180 <fprintf@plt>
  40c472:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c479:	lea    rsi,[rip+0x31b4d]        # 43dfcd <_IO_stdin_used@@Base+0xffcd>
  40c480:	mov    rdx,rbx
  40c483:	mov    rcx,rbx
  40c486:	xor    eax,eax
  40c488:	call   406180 <fprintf@plt>
  40c48d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c494:	lea    rsi,[rip+0x31c1e]        # 43e0b9 <_IO_stdin_used@@Base+0x100b9>
  40c49b:	mov    rdx,rbx
  40c49e:	xor    eax,eax
  40c4a0:	call   406180 <fprintf@plt>
  40c4a5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4ac:	lea    rsi,[rip+0x31e67]        # 43e31a <_IO_stdin_used@@Base+0x1031a>
  40c4b3:	mov    rdx,rbx
  40c4b6:	xor    eax,eax
  40c4b8:	call   406180 <fprintf@plt>
  40c4bd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4c4:	lea    rsi,[rip+0x321c6]        # 43e691 <_IO_stdin_used@@Base+0x10691>
  40c4cb:	mov    rdx,rbx
  40c4ce:	mov    rcx,rbx
  40c4d1:	xor    eax,eax
  40c4d3:	call   406180 <fprintf@plt>
  40c4d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4df:	lea    rsi,[rip+0x325fa]        # 43eae0 <_IO_stdin_used@@Base+0x10ae0>
  40c4e6:	mov    rdx,rbx
  40c4e9:	mov    rcx,rbx
  40c4ec:	xor    eax,eax
  40c4ee:	call   406180 <fprintf@plt>
  40c4f3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4fa:	lea    rsi,[rip+0x32877]        # 43ed78 <_IO_stdin_used@@Base+0x10d78>
  40c501:	mov    rdx,rbx
  40c504:	mov    rcx,rbx
  40c507:	xor    eax,eax
  40c509:	call   406180 <fprintf@plt>
  40c50e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c515:	lea    rsi,[rip+0x32c58]        # 43f174 <_IO_stdin_used@@Base+0x11174>
  40c51c:	mov    rdx,rbx
  40c51f:	mov    rcx,rbx
  40c522:	xor    eax,eax
  40c524:	call   406180 <fprintf@plt>
  40c529:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c530:	lea    rsi,[rip+0x32d49]        # 43f280 <_IO_stdin_used@@Base+0x11280>
  40c537:	mov    rdx,rbx
  40c53a:	mov    rcx,rbx
  40c53d:	mov    r8,rbx
  40c540:	xor    eax,eax
  40c542:	call   406180 <fprintf@plt>
  40c547:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c54e:	lea    rsi,[rip+0x32db6]        # 43f30b <_IO_stdin_used@@Base+0x1130b>
  40c555:	mov    rdx,rbx
  40c558:	mov    rcx,rbx
  40c55b:	xor    eax,eax
  40c55d:	call   406180 <fprintf@plt>
  40c562:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c569:	lea    rsi,[rip+0x330e7]        # 43f657 <_IO_stdin_used@@Base+0x11657>
  40c570:	mov    rdx,rbx
  40c573:	xor    eax,eax
  40c575:	call   406180 <fprintf@plt>
  40c57a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c581:	lea    rsi,[rip+0x33357]        # 43f8df <_IO_stdin_used@@Base+0x118df>
  40c588:	mov    rdx,rbx
  40c58b:	xor    eax,eax
  40c58d:	call   406180 <fprintf@plt>
  40c592:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c599:	lea    rsi,[rip+0x335cd]        # 43fb6d <_IO_stdin_used@@Base+0x11b6d>
  40c5a0:	mov    rdx,rbx
  40c5a3:	xor    eax,eax
  40c5a5:	call   406180 <fprintf@plt>
  40c5aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5b1:	lea    rsi,[rip+0x33b6b]        # 440123 <_IO_stdin_used@@Base+0x12123>
  40c5b8:	mov    rdx,rbx
  40c5bb:	mov    rcx,rbx
  40c5be:	mov    r8,rbx
  40c5c1:	xor    eax,eax
  40c5c3:	call   406180 <fprintf@plt>
  40c5c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5cf:	lea    rsi,[rip+0x33bdc]        # 4401b2 <_IO_stdin_used@@Base+0x121b2>
  40c5d6:	mov    rdx,rbx
  40c5d9:	xor    eax,eax
  40c5db:	call   406180 <fprintf@plt>
  40c5e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5e7:	lea    rsi,[rip+0x33bf0]        # 4401de <_IO_stdin_used@@Base+0x121de>
  40c5ee:	mov    rdx,rbx
  40c5f1:	xor    eax,eax
  40c5f3:	call   406180 <fprintf@plt>
  40c5f8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5ff:	lea    rsi,[rip+0x33bfa]        # 440200 <_IO_stdin_used@@Base+0x12200>
  40c606:	mov    rdx,rbx
  40c609:	xor    eax,eax
  40c60b:	call   406180 <fprintf@plt>
  40c610:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c617:	lea    rsi,[rip+0x33c0c]        # 44022a <_IO_stdin_used@@Base+0x1222a>
  40c61e:	mov    rdx,rbx
  40c621:	xor    eax,eax
  40c623:	call   406180 <fprintf@plt>
  40c628:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c62f:	lea    rsi,[rip+0x33c15]        # 44024b <_IO_stdin_used@@Base+0x1224b>
  40c636:	mov    rdx,rbx
  40c639:	mov    rcx,rbx
  40c63c:	xor    eax,eax
  40c63e:	call   406180 <fprintf@plt>
  40c643:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c64a:	lea    rsi,[rip+0x33c26]        # 440277 <_IO_stdin_used@@Base+0x12277>
  40c651:	mov    rdx,rbx
  40c654:	xor    eax,eax
  40c656:	call   406180 <fprintf@plt>
  40c65b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c662:	lea    rsi,[rip+0x33c2f]        # 440298 <_IO_stdin_used@@Base+0x12298>
  40c669:	mov    rdx,rbx
  40c66c:	xor    eax,eax
  40c66e:	call   406180 <fprintf@plt>
  40c673:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c67a:	lea    rsi,[rip+0x33c45]        # 4402c6 <_IO_stdin_used@@Base+0x122c6>
  40c681:	mov    rdx,rbx
  40c684:	xor    eax,eax
  40c686:	call   406180 <fprintf@plt>
  40c68b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c692:	lea    rsi,[rip+0x33c50]        # 4402e9 <_IO_stdin_used@@Base+0x122e9>
  40c699:	mov    rdx,rbx
  40c69c:	xor    eax,eax
  40c69e:	call   406180 <fprintf@plt>
  40c6a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6aa:	lea    rsi,[rip+0x33c66]        # 440317 <_IO_stdin_used@@Base+0x12317>
  40c6b1:	mov    rdx,rbx
  40c6b4:	xor    eax,eax
  40c6b6:	call   406180 <fprintf@plt>
  40c6bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6c2:	lea    rsi,[rip+0x33c71]        # 44033a <_IO_stdin_used@@Base+0x1233a>
  40c6c9:	mov    rdx,rbx
  40c6cc:	xor    eax,eax
  40c6ce:	call   406180 <fprintf@plt>
  40c6d3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6da:	lea    rsi,[rip+0x33c87]        # 440368 <_IO_stdin_used@@Base+0x12368>
  40c6e1:	mov    rdx,rbx
  40c6e4:	xor    eax,eax
  40c6e6:	call   406180 <fprintf@plt>
  40c6eb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6f2:	lea    rsi,[rip+0x33c92]        # 44038b <_IO_stdin_used@@Base+0x1238b>
  40c6f9:	mov    rdx,rbx
  40c6fc:	xor    eax,eax
  40c6fe:	call   406180 <fprintf@plt>
  40c703:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c70a:	lea    rsi,[rip+0x33ca6]        # 4403b7 <_IO_stdin_used@@Base+0x123b7>
  40c711:	mov    rdx,rbx
  40c714:	xor    eax,eax
  40c716:	call   406180 <fprintf@plt>
  40c71b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c722:	lea    rsi,[rip+0x33cb0]        # 4403d9 <_IO_stdin_used@@Base+0x123d9>
  40c729:	mov    rdx,rbx
  40c72c:	xor    eax,eax
  40c72e:	call   406180 <fprintf@plt>
  40c733:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c73a:	lea    rsi,[rip+0x33cc4]        # 440405 <_IO_stdin_used@@Base+0x12405>
  40c741:	mov    rdx,rbx
  40c744:	xor    eax,eax
  40c746:	call   406180 <fprintf@plt>
  40c74b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c752:	lea    rsi,[rip+0x33cce]        # 440427 <_IO_stdin_used@@Base+0x12427>
  40c759:	mov    rdx,rbx
  40c75c:	xor    eax,eax
  40c75e:	call   406180 <fprintf@plt>
  40c763:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c76a:	lea    rsi,[rip+0x33ce2]        # 440453 <_IO_stdin_used@@Base+0x12453>
  40c771:	mov    rdx,rbx
  40c774:	xor    eax,eax
  40c776:	call   406180 <fprintf@plt>
  40c77b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c782:	lea    rsi,[rip+0x33cec]        # 440475 <_IO_stdin_used@@Base+0x12475>
  40c789:	mov    rdx,rbx
  40c78c:	xor    eax,eax
  40c78e:	call   406180 <fprintf@plt>
  40c793:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c79a:	lea    rsi,[rip+0x33cfe]        # 44049f <_IO_stdin_used@@Base+0x1249f>
  40c7a1:	mov    rdx,rbx
  40c7a4:	xor    eax,eax
  40c7a6:	call   406180 <fprintf@plt>
  40c7ab:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7b2:	lea    rsi,[rip+0x33d08]        # 4404c1 <_IO_stdin_used@@Base+0x124c1>
  40c7b9:	mov    rdx,rbx
  40c7bc:	xor    eax,eax
  40c7be:	call   406180 <fprintf@plt>
  40c7c3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7ca:	lea    rsi,[rip+0x33d1c]        # 4404ed <_IO_stdin_used@@Base+0x124ed>
  40c7d1:	mov    rdx,rbx
  40c7d4:	xor    eax,eax
  40c7d6:	call   406180 <fprintf@plt>
  40c7db:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c7e2:	mov    edi,0xa
  40c7e7:	call   406120 <fputc@plt>
  40c7ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7f3:	lea    rsi,[rip+0x33d16]        # 440510 <_IO_stdin_used@@Base+0x12510>
  40c7fa:	mov    rdx,rbx
  40c7fd:	mov    rcx,rbx
  40c800:	mov    r8,rbx
  40c803:	xor    eax,eax
  40c805:	call   406180 <fprintf@plt>
  40c80a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c811:	lea    rsi,[rip+0x33d20]        # 440538 <_IO_stdin_used@@Base+0x12538>
  40c818:	mov    rdx,rbx
  40c81b:	mov    rcx,rbx
  40c81e:	mov    r8,rbx
  40c821:	xor    eax,eax
  40c823:	call   406180 <fprintf@plt>
  40c828:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c82f:	lea    rsi,[rip+0x33d28]        # 44055e <_IO_stdin_used@@Base+0x1255e>
  40c836:	mov    rdx,rbx
  40c839:	mov    rcx,rbx
  40c83c:	mov    r8,rbx
  40c83f:	mov    r9,rbx
  40c842:	xor    eax,eax
  40c844:	call   406180 <fprintf@plt>
  40c849:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c850:	lea    rsi,[rip+0x33d2f]        # 440586 <_IO_stdin_used@@Base+0x12586>
  40c857:	mov    rdx,rbx
  40c85a:	mov    rcx,rbx
  40c85d:	mov    r8,rbx
  40c860:	xor    eax,eax
  40c862:	call   406180 <fprintf@plt>
  40c867:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c86e:	lea    rsi,[rip+0x33d3b]        # 4405b0 <_IO_stdin_used@@Base+0x125b0>
  40c875:	mov    rdx,rbx
  40c878:	mov    rcx,rbx
  40c87b:	mov    r8,rbx
  40c87e:	xor    eax,eax
  40c880:	call   406180 <fprintf@plt>
  40c885:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c88c:	lea    rsi,[rip+0x33d47]        # 4405da <_IO_stdin_used@@Base+0x125da>
  40c893:	mov    rdx,rbx
  40c896:	mov    rcx,rbx
  40c899:	mov    r8,rbx
  40c89c:	xor    eax,eax
  40c89e:	call   406180 <fprintf@plt>
  40c8a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c8aa:	lea    rsi,[rip+0x33d53]        # 440604 <_IO_stdin_used@@Base+0x12604>
  40c8b1:	mov    rdx,rbx
  40c8b4:	mov    rcx,rbx
  40c8b7:	mov    r8,rbx
  40c8ba:	xor    eax,eax
  40c8bc:	call   406180 <fprintf@plt>
  40c8c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c8c8:	lea    rsi,[rip+0x33d5d]        # 44062c <_IO_stdin_used@@Base+0x1262c>
  40c8cf:	mov    rdx,rbx
  40c8d2:	mov    rcx,rbx
  40c8d5:	mov    r8,rbx
  40c8d8:	xor    eax,eax
  40c8da:	call   406180 <fprintf@plt>
  40c8df:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c8e6:	lea    rsi,[rip+0x33d67]        # 440654 <_IO_stdin_used@@Base+0x12654>
  40c8ed:	mov    rdx,rbx
  40c8f0:	mov    rcx,rbx
  40c8f3:	mov    r8,rbx
  40c8f6:	xor    eax,eax
  40c8f8:	call   406180 <fprintf@plt>
  40c8fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c904:	lea    rsi,[rip+0x33d71]        # 44067c <_IO_stdin_used@@Base+0x1267c>
  40c90b:	mov    rdx,rbx
  40c90e:	mov    rcx,rbx
  40c911:	mov    r8,rbx
  40c914:	xor    eax,eax
  40c916:	call   406180 <fprintf@plt>
  40c91b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c922:	lea    rsi,[rip+0x33d79]        # 4406a2 <_IO_stdin_used@@Base+0x126a2>
  40c929:	mov    rdx,rbx
  40c92c:	mov    rcx,rbx
  40c92f:	mov    r8,rbx
  40c932:	xor    eax,eax
  40c934:	call   406180 <fprintf@plt>
  40c939:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c940:	mov    edi,0xa
  40c945:	call   406120 <fputc@plt>
  40c94a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c951:	lea    rsi,[rip+0x33d72]        # 4406ca <_IO_stdin_used@@Base+0x126ca>
  40c958:	mov    rdx,rbx
  40c95b:	mov    rcx,rbx
  40c95e:	xor    eax,eax
  40c960:	call   406180 <fprintf@plt>
  40c965:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c96c:	mov    edi,0xa
  40c971:	call   406120 <fputc@plt>
  40c976:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c97d:	lea    rsi,[rip+0x33d5c]        # 4406e0 <_IO_stdin_used@@Base+0x126e0>
  40c984:	mov    rdx,rbx
  40c987:	mov    rcx,rbx
  40c98a:	xor    eax,eax
  40c98c:	call   406180 <fprintf@plt>
  40c991:	mov    rax,QWORD PTR [rbx+0xe0]
  40c998:	cmp    DWORD PTR [rax+0xac],0x0
  40c99f:	je     40c9be <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ce>
  40c9a1:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c9a8:	lea    rdi,[rip+0x29130]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  40c9af:	mov    esi,0x24
  40c9b4:	mov    edx,0x1
  40c9b9:	call   406230 <fwrite@plt>
  40c9be:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c9c5:	lea    rsi,[rip+0x33d2a]        # 4406f6 <_IO_stdin_used@@Base+0x126f6>
  40c9cc:	mov    rdx,r14
  40c9cf:	xor    eax,eax
  40c9d1:	call   406180 <fprintf@plt>
  40c9d6:	xor    eax,eax
  40c9d8:	add    rsp,0x8
  40c9dc:	pop    rbx
  40c9dd:	pop    r14
  40c9df:	ret    

000000000040c9e0 <__flatcc_fb_gen_c_builder@@Base>:
  40c9e0:	push   rbp
  40c9e1:	mov    rbp,rsp
  40c9e4:	push   r15
  40c9e6:	push   r14
  40c9e8:	push   r13
  40c9ea:	push   r12
  40c9ec:	push   rbx
  40c9ed:	and    rsp,0xffffffffffffffe0
  40c9f1:	sub    rsp,0x2a0
  40c9f8:	mov    r15,rdi
  40c9fb:	lea    r14,[rdi+0x66]
  40c9ff:	lea    r12,[rdi+0xd0]
  40ca06:	mov    rdi,QWORD PTR [rdi+0xd0]
  40ca0d:	mov    rax,QWORD PTR [r15+0xd8]
  40ca14:	mov    rcx,QWORD PTR [rax+0x118]
  40ca1b:	lea    rsi,[rip+0x33cf6]        # 440718 <_IO_stdin_used@@Base+0x12718>
  40ca22:	mov    rdx,rcx
  40ca25:	xor    eax,eax
  40ca27:	call   406180 <fprintf@plt>
  40ca2c:	mov    rcx,QWORD PTR [r15+0xd0]
  40ca33:	lea    rdi,[rip+0x230c5]        # 42faff <_IO_stdin_used@@Base+0x1aff>
  40ca3a:	mov    esi,0x51
  40ca3f:	mov    edx,0x1
  40ca44:	call   406230 <fwrite@plt>
  40ca49:	mov    rdi,QWORD PTR [r15+0xd0]
  40ca50:	mov    rax,QWORD PTR [r15+0xd8]
  40ca57:	mov    rdx,QWORD PTR [rax+0x118]
  40ca5e:	lea    rsi,[rip+0x33cde]        # 440743 <_IO_stdin_used@@Base+0x12743>
  40ca65:	xor    eax,eax
  40ca67:	call   406180 <fprintf@plt>
  40ca6c:	mov    rdi,QWORD PTR [r15+0xd0]
  40ca73:	mov    rax,QWORD PTR [r15+0xd8]
  40ca7a:	mov    rdx,QWORD PTR [rax+0x110]
  40ca81:	lea    rsi,[rip+0x33cd0]        # 440758 <_IO_stdin_used@@Base+0x12758>
  40ca88:	xor    eax,eax
  40ca8a:	call   406180 <fprintf@plt>
  40ca8f:	mov    rcx,QWORD PTR [r15+0xd0]
  40ca96:	lea    rbx,[rip+0x29284]        # 435d21 <_IO_stdin_used@@Base+0x7d21>
  40ca9d:	mov    esi,0x7
  40caa2:	mov    edx,0x1
  40caa7:	mov    rdi,rbx
  40caaa:	call   406230 <fwrite@plt>
  40caaf:	mov    rdi,QWORD PTR [r15+0xd0]
  40cab6:	lea    rsi,[rip+0x2b50f]        # 437fcc <_IO_stdin_used@@Base+0x9fcc>
  40cabd:	mov    rdx,r14
  40cac0:	xor    eax,eax
  40cac2:	call   406180 <fprintf@plt>
  40cac7:	mov    rdi,QWORD PTR [r15+0xd0]
  40cace:	lea    rsi,[rip+0x33c9b]        # 440770 <_IO_stdin_used@@Base+0x12770>
  40cad5:	mov    rdx,r15
  40cad8:	xor    eax,eax
  40cada:	call   406180 <fprintf@plt>
  40cadf:	mov    rcx,QWORD PTR [r15+0xd0]
  40cae6:	mov    esi,0x7
  40caeb:	mov    edx,0x1
  40caf0:	mov    rdi,rbx
  40caf3:	call   406230 <fwrite@plt>
  40caf8:	lea    rsi,[rip+0x39b73]        # 446672 <_IO_stdin_used@@Base+0x18672>
  40caff:	lea    rdx,[rip+0x33c89]        # 44078f <_IO_stdin_used@@Base+0x1278f>
  40cb06:	mov    rdi,r15
  40cb09:	call   407ec0 <__flatcc_fb_gen_c_includes@@Base>
  40cb0e:	mov    rax,QWORD PTR [r15+0xe0]
  40cb15:	cmp    DWORD PTR [rax+0xac],0x0
  40cb1c:	je     40cb38 <__flatcc_fb_gen_c_builder@@Base+0x158>
  40cb1e:	mov    rcx,QWORD PTR [r12]
  40cb22:	lea    rdi,[rip+0x231cc]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  40cb29:	mov    esi,0x24
  40cb2e:	mov    edx,0x1
  40cb33:	call   406230 <fwrite@plt>
  40cb38:	mov    rdi,QWORD PTR [r15+0xd0]
  40cb3f:	mov    rax,QWORD PTR [r15+0xd8]
  40cb46:	cmp    WORD PTR [rax+0x20],0x2
  40cb4b:	jne    40cb6b <__flatcc_fb_gen_c_builder@@Base+0x18b>
  40cb4d:	mov    r8d,DWORD PTR [rax+0x18]
  40cb51:	mov    r9,QWORD PTR [rax+0x10]
  40cb55:	lea    rsi,[rip+0x2923a]        # 435d96 <_IO_stdin_used@@Base+0x7d96>
  40cb5c:	mov    rdx,r15
  40cb5f:	mov    rcx,r15
  40cb62:	xor    eax,eax
  40cb64:	call   406180 <fprintf@plt>
  40cb69:	jmp    40cb7f <__flatcc_fb_gen_c_builder@@Base+0x19f>
  40cb6b:	lea    rsi,[rip+0x29255]        # 435dc7 <_IO_stdin_used@@Base+0x7dc7>
  40cb72:	mov    rdx,r15
  40cb75:	mov    rcx,r15
  40cb78:	xor    eax,eax
  40cb7a:	call   406180 <fprintf@plt>
  40cb7f:	mov    rdi,QWORD PTR [r15+0xd0]
  40cb86:	mov    rax,QWORD PTR [r15+0xd8]
  40cb8d:	cmp    WORD PTR [rax+0x38],0x2
  40cb92:	mov    QWORD PTR [rsp],r12
  40cb96:	jne    40cbb6 <__flatcc_fb_gen_c_builder@@Base+0x1d6>
  40cb98:	mov    r8d,DWORD PTR [rax+0x30]
  40cb9c:	mov    r9,QWORD PTR [rax+0x28]
  40cba0:	lea    rsi,[rip+0x29254]        # 435dfb <_IO_stdin_used@@Base+0x7dfb>
  40cba7:	mov    rdx,r15
  40cbaa:	mov    rcx,r15
  40cbad:	xor    eax,eax
  40cbaf:	call   406180 <fprintf@plt>
  40cbb4:	jmp    40cbd5 <__flatcc_fb_gen_c_builder@@Base+0x1f5>
  40cbb6:	mov    rax,QWORD PTR [r15+0xe0]
  40cbbd:	mov    r8,QWORD PTR [rax+0x78]
  40cbc1:	lea    rsi,[rip+0x29263]        # 435e2b <_IO_stdin_used@@Base+0x7e2b>
  40cbc8:	mov    rdx,r15
  40cbcb:	mov    rcx,r15
  40cbce:	xor    eax,eax
  40cbd0:	call   406180 <fprintf@plt>
  40cbd5:	mov    rsi,QWORD PTR [r15+0xd0]
  40cbdc:	mov    edi,0xa
  40cbe1:	call   406120 <fputc@plt>
  40cbe6:	vxorps xmm0,xmm0,xmm0
  40cbea:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40cbf3:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40cbfc:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40cc05:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40cc0e:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40cc14:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40cc1a:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40cc20:	mov    QWORD PTR [rsp+0x100],0x0
  40cc2c:	mov    rax,QWORD PTR [r15+0xd8]
  40cc33:	mov    rbx,QWORD PTR [rax+0x40]
  40cc37:	test   rbx,rbx
  40cc3a:	mov    QWORD PTR [rsp+0x8],r15
  40cc3f:	je     40ccec <__flatcc_fb_gen_c_builder@@Base+0x30c>
  40cc45:	lea    r14,[rsp+0x20]
  40cc4a:	lea    r15,[rip+0x33b49]        # 44079a <_IO_stdin_used@@Base+0x1279a>
  40cc51:	lea    r12,[rip+0x33b87]        # 4407df <_IO_stdin_used@@Base+0x127df>
  40cc58:	xor    eax,eax
  40cc5a:	mov    r13,QWORD PTR [rsp+0x8]
  40cc5f:	cmp    WORD PTR [rbx+0x10],0x3
  40cc64:	je     40cc7f <__flatcc_fb_gen_c_builder@@Base+0x29f>
  40cc66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc70:	mov    rbx,QWORD PTR [rbx]
  40cc73:	test   rbx,rbx
  40cc76:	je     40cccf <__flatcc_fb_gen_c_builder@@Base+0x2ef>
  40cc78:	cmp    WORD PTR [rbx+0x10],0x3
  40cc7d:	jne    40cc70 <__flatcc_fb_gen_c_builder@@Base+0x290>
  40cc7f:	mov    rdi,QWORD PTR [rbx+0x18]
  40cc83:	mov    rsi,rbx
  40cc86:	mov    rdx,r14
  40cc89:	vzeroupper 
  40cc8c:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40cc91:	mov    rdi,QWORD PTR [r13+0xd0]
  40cc98:	mov    rsi,r15
  40cc9b:	mov    rdx,r14
  40cc9e:	mov    rcx,r14
  40cca1:	mov    r8,r14
  40cca4:	xor    eax,eax
  40cca6:	call   406180 <fprintf@plt>
  40ccab:	mov    rdi,QWORD PTR [r13+0xd0]
  40ccb2:	mov    rsi,r12
  40ccb5:	mov    rdx,r13
  40ccb8:	mov    rcx,r13
  40ccbb:	mov    r8,r14
  40ccbe:	mov    r9,r14
  40ccc1:	xor    eax,eax
  40ccc3:	call   406180 <fprintf@plt>
  40ccc8:	mov    eax,0x1
  40cccd:	jmp    40cc70 <__flatcc_fb_gen_c_builder@@Base+0x290>
  40cccf:	test   eax,eax
  40ccd1:	mov    r15,QWORD PTR [rsp+0x8]
  40ccd6:	je     40ccec <__flatcc_fb_gen_c_builder@@Base+0x30c>
  40ccd8:	mov    rax,QWORD PTR [rsp]
  40ccdc:	mov    rsi,QWORD PTR [rax]
  40ccdf:	mov    edi,0xa
  40cce4:	vzeroupper 
  40cce7:	call   406120 <fputc@plt>
  40ccec:	mov    rax,QWORD PTR [r15+0xd8]
  40ccf3:	mov    r12,QWORD PTR [rax+0x48]
  40ccf7:	test   r12,r12
  40ccfa:	je     40d1ca <__flatcc_fb_gen_c_builder@@Base+0x7ea>
  40cd00:	lea    rbx,[rsp+0x20]
  40cd05:	jmp    40d05b <__flatcc_fb_gen_c_builder@@Base+0x67b>
  40cd0a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd10:	mov    r15,QWORD PTR [rsp+0x8]
  40cd15:	mov    rsi,QWORD PTR [r15+0xd0]
  40cd1c:	mov    edi,0xa
  40cd21:	call   406120 <fputc@plt>
  40cd26:	mov    rdi,QWORD PTR [r15+0xd0]
  40cd2d:	lea    rsi,[rip+0x33bab]        # 4408df <_IO_stdin_used@@Base+0x128df>
  40cd34:	lea    rbx,[rsp+0x20]
  40cd39:	mov    rdx,rbx
  40cd3c:	mov    rcx,rbx
  40cd3f:	mov    r8,rbx
  40cd42:	xor    eax,eax
  40cd44:	call   406180 <fprintf@plt>
  40cd49:	mov    rdi,r15
  40cd4c:	mov    r12,QWORD PTR [rsp+0x10]
  40cd51:	mov    rsi,r12
  40cd54:	xor    edx,edx
  40cd56:	mov    ecx,r14d
  40cd59:	xor    r8d,r8d
  40cd5c:	call   40e770 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40cd61:	mov    rcx,QWORD PTR [r15+0xd0]
  40cd68:	mov    esi,0x4
  40cd6d:	mov    edx,0x1
  40cd72:	lea    r13,[rip+0x33b8c]        # 440905 <_IO_stdin_used@@Base+0x12905>
  40cd79:	mov    rdi,r13
  40cd7c:	call   406230 <fwrite@plt>
  40cd81:	mov    rdi,r15
  40cd84:	mov    rsi,r12
  40cd87:	mov    edx,r14d
  40cd8a:	xor    ecx,ecx
  40cd8c:	xor    r8d,r8d
  40cd8f:	call   40eaa0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40cd94:	mov    rcx,QWORD PTR [r15+0xd0]
  40cd9b:	mov    esi,0xc
  40cda0:	mov    edx,0x1
  40cda5:	lea    r13,[rip+0x298f2]        # 43669e <_IO_stdin_used@@Base+0x869e>
  40cdac:	mov    rdi,r13
  40cdaf:	call   406230 <fwrite@plt>
  40cdb4:	mov    rdi,QWORD PTR [r15+0xd0]
  40cdbb:	lea    rsi,[rip+0x33b48]        # 44090a <_IO_stdin_used@@Base+0x1290a>
  40cdc2:	mov    rdx,rbx
  40cdc5:	mov    rcx,rbx
  40cdc8:	mov    r8,rbx
  40cdcb:	mov    r9,rbx
  40cdce:	xor    eax,eax
  40cdd0:	call   406180 <fprintf@plt>
  40cdd5:	mov    rcx,QWORD PTR [r15+0xd0]
  40cddc:	mov    esi,0x2
  40cde1:	mov    edx,0x1
  40cde6:	lea    rax,[rip+0x33b1a]        # 440907 <_IO_stdin_used@@Base+0x12907>
  40cded:	mov    rdi,rax
  40cdf0:	call   406230 <fwrite@plt>
  40cdf5:	mov    rdi,r15
  40cdf8:	mov    rsi,r12
  40cdfb:	mov    edx,r14d
  40cdfe:	xor    ecx,ecx
  40ce00:	mov    r8d,0x1
  40ce06:	call   40eaa0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40ce0b:	mov    rcx,QWORD PTR [r15+0xd0]
  40ce12:	mov    esi,0xc
  40ce17:	mov    edx,0x1
  40ce1c:	mov    rdi,r13
  40ce1f:	call   406230 <fwrite@plt>
  40ce24:	mov    rdi,QWORD PTR [r15+0xd0]
  40ce2b:	lea    rsi,[rip+0x33b0e]        # 440940 <_IO_stdin_used@@Base+0x12940>
  40ce32:	mov    rdx,rbx
  40ce35:	mov    rcx,rbx
  40ce38:	mov    r8,rbx
  40ce3b:	xor    eax,eax
  40ce3d:	call   406180 <fprintf@plt>
  40ce42:	mov    rdi,r15
  40ce45:	mov    rsi,r12
  40ce48:	xor    edx,edx
  40ce4a:	mov    ecx,r14d
  40ce4d:	xor    r8d,r8d
  40ce50:	call   40e770 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40ce55:	mov    rcx,QWORD PTR [r15+0xd0]
  40ce5c:	mov    esi,0x4
  40ce61:	mov    edx,0x1
  40ce66:	lea    rdi,[rip+0x33a98]        # 440905 <_IO_stdin_used@@Base+0x12905>
  40ce6d:	call   406230 <fwrite@plt>
  40ce72:	mov    rdi,r15
  40ce75:	mov    rsi,r12
  40ce78:	mov    edx,r14d
  40ce7b:	mov    ecx,0x2
  40ce80:	xor    r8d,r8d
  40ce83:	call   40eaa0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40ce88:	mov    rcx,QWORD PTR [r15+0xd0]
  40ce8f:	mov    esi,0xc
  40ce94:	mov    edx,0x1
  40ce99:	mov    rdi,r13
  40ce9c:	call   406230 <fwrite@plt>
  40cea1:	mov    rdi,QWORD PTR [r15+0xd0]
  40cea8:	lea    rsi,[rip+0x33abd]        # 44096c <_IO_stdin_used@@Base+0x1296c>
  40ceaf:	mov    rdx,rbx
  40ceb2:	mov    rcx,rbx
  40ceb5:	mov    r8,rbx
  40ceb8:	mov    r9,rbx
  40cebb:	xor    eax,eax
  40cebd:	call   406180 <fprintf@plt>
  40cec2:	mov    rcx,QWORD PTR [r15+0xd0]
  40cec9:	mov    esi,0x2
  40cece:	mov    edx,0x1
  40ced3:	lea    rdi,[rip+0x33a2d]        # 440907 <_IO_stdin_used@@Base+0x12907>
  40ceda:	call   406230 <fwrite@plt>
  40cedf:	mov    rdi,r15
  40cee2:	mov    rsi,r12
  40cee5:	mov    edx,r14d
  40cee8:	mov    ecx,0x2
  40ceed:	mov    r8d,0x1
  40cef3:	call   40eaa0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40cef8:	mov    rcx,QWORD PTR [r15+0xd0]
  40ceff:	mov    esi,0xc
  40cf04:	mov    edx,0x1
  40cf09:	mov    rdi,r13
  40cf0c:	call   406230 <fwrite@plt>
  40cf11:	mov    rdi,QWORD PTR [r15+0xd0]
  40cf18:	lea    rsi,[rip+0x33a89]        # 4409a8 <_IO_stdin_used@@Base+0x129a8>
  40cf1f:	mov    rdx,rbx
  40cf22:	mov    rcx,rbx
  40cf25:	mov    r8,rbx
  40cf28:	xor    eax,eax
  40cf2a:	call   406180 <fprintf@plt>
  40cf2f:	mov    rdi,r15
  40cf32:	mov    rsi,r12
  40cf35:	xor    edx,edx
  40cf37:	mov    ecx,r14d
  40cf3a:	xor    r8d,r8d
  40cf3d:	call   40e770 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40cf42:	mov    rcx,QWORD PTR [r15+0xd0]
  40cf49:	mov    esi,0x4
  40cf4e:	mov    edx,0x1
  40cf53:	lea    rdi,[rip+0x339ab]        # 440905 <_IO_stdin_used@@Base+0x12905>
  40cf5a:	call   406230 <fwrite@plt>
  40cf5f:	mov    rdi,r15
  40cf62:	mov    rsi,r12
  40cf65:	mov    edx,r14d
  40cf68:	mov    ecx,0x1
  40cf6d:	xor    r8d,r8d
  40cf70:	call   40eaa0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40cf75:	mov    rcx,QWORD PTR [r15+0xd0]
  40cf7c:	mov    esi,0xc
  40cf81:	mov    edx,0x1
  40cf86:	mov    rdi,r13
  40cf89:	call   406230 <fwrite@plt>
  40cf8e:	mov    rdi,QWORD PTR [r15+0xd0]
  40cf95:	lea    rsi,[rip+0x33a3a]        # 4409d6 <_IO_stdin_used@@Base+0x129d6>
  40cf9c:	mov    rdx,rbx
  40cf9f:	mov    rcx,rbx
  40cfa2:	mov    r8,rbx
  40cfa5:	mov    r9,rbx
  40cfa8:	xor    eax,eax
  40cfaa:	call   406180 <fprintf@plt>
  40cfaf:	mov    rcx,QWORD PTR [r15+0xd0]
  40cfb6:	mov    esi,0x2
  40cfbb:	mov    edx,0x1
  40cfc0:	lea    rdi,[rip+0x33940]        # 440907 <_IO_stdin_used@@Base+0x12907>
  40cfc7:	call   406230 <fwrite@plt>
  40cfcc:	mov    rdi,r15
  40cfcf:	mov    rsi,r12
  40cfd2:	mov    edx,r14d
  40cfd5:	mov    ecx,0x1
  40cfda:	mov    r8d,0x1
  40cfe0:	call   40eaa0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40cfe5:	mov    rcx,QWORD PTR [r15+0xd0]
  40cfec:	mov    esi,0xc
  40cff1:	mov    edx,0x1
  40cff6:	mov    rdi,r13
  40cff9:	call   406230 <fwrite@plt>
  40cffe:	mov    rdi,QWORD PTR [r15+0xd0]
  40d005:	mov    r9,QWORD PTR [r12+0xb8]
  40d00d:	movzx  r10d,WORD PTR [r12+0xb0]
  40d016:	sub    rsp,0x8
  40d01a:	lea    rsi,[rip+0x339f3]        # 440a14 <_IO_stdin_used@@Base+0x12a14>
  40d021:	mov    rdx,r15
  40d024:	mov    rcx,r15
  40d027:	mov    r8,rbx
  40d02a:	xor    eax,eax
  40d02c:	push   rbx
  40d02d:	push   rbx
  40d02e:	push   r10
  40d030:	call   406180 <fprintf@plt>
  40d035:	add    rsp,0x20
  40d039:	mov    rsi,QWORD PTR [r15+0xd0]
  40d040:	mov    edi,0xa
  40d045:	call   406120 <fputc@plt>
  40d04a:	mov    r12,QWORD PTR [r12+0xc0]
  40d052:	test   r12,r12
  40d055:	je     40d1c3 <__flatcc_fb_gen_c_builder@@Base+0x7e3>
  40d05b:	vxorps xmm0,xmm0,xmm0
  40d05f:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d068:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d071:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d07a:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d083:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d089:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d08f:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d095:	mov    QWORD PTR [rsp+0x100],0x0
  40d0a1:	cmp    WORD PTR [r12+0x10],0x1
  40d0a8:	jne    40e4f6 <__flatcc_fb_gen_c_builder@@Base+0x1b16>
  40d0ae:	mov    rdi,QWORD PTR [r12+0x18]
  40d0b3:	mov    rsi,r12
  40d0b6:	mov    rdx,rbx
  40d0b9:	vzeroupper 
  40d0bc:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d0c1:	mov    rdi,r12
  40d0c4:	call   40e720 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40d0c9:	mov    r14d,eax
  40d0cc:	mov    rdi,QWORD PTR [r15+0xd0]
  40d0d3:	lea    rsi,[rip+0x337d2]        # 4408ac <_IO_stdin_used@@Base+0x128ac>
  40d0da:	mov    rdx,rbx
  40d0dd:	xor    eax,eax
  40d0df:	call   406180 <fprintf@plt>
  40d0e4:	mov    rdi,r15
  40d0e7:	mov    rsi,r12
  40d0ea:	xor    edx,edx
  40d0ec:	mov    ecx,r14d
  40d0ef:	mov    r8d,0x1
  40d0f5:	call   40e770 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40d0fa:	mov    rdi,QWORD PTR [r15+0xd0]
  40d101:	lea    rsi,[rip+0x337be]        # 4408c6 <_IO_stdin_used@@Base+0x128c6>
  40d108:	mov    rdx,rbx
  40d10b:	xor    eax,eax
  40d10d:	call   406180 <fprintf@plt>
  40d112:	mov    QWORD PTR [rsp+0x10],r12
  40d117:	mov    rdi,r12
  40d11a:	call   40e720 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40d11f:	test   eax,eax
  40d121:	jle    40cd10 <__flatcc_fb_gen_c_builder@@Base+0x330>
  40d127:	mov    r15d,eax
  40d12a:	xor    r12d,r12d
  40d12d:	mov    r13d,r14d
  40d130:	jmp    40d17e <__flatcc_fb_gen_c_builder@@Base+0x79e>
  40d132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d13c:	nop    DWORD PTR [rax+0x0]
  40d140:	mov    esi,0x2
  40d145:	mov    edx,0x1
  40d14a:	lea    rdi,[rip+0x3932b]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40d151:	call   406230 <fwrite@plt>
  40d156:	mov    rdi,QWORD PTR [rbx]
  40d159:	lea    ebx,[r12+0x1]
  40d15e:	lea    rsi,[rip+0x33a49]        # 440bae <_IO_stdin_used@@Base+0x12bae>
  40d165:	mov    edx,r12d
  40d168:	xor    eax,eax
  40d16a:	call   406180 <fprintf@plt>
  40d16f:	dec    r13d
  40d172:	mov    r12d,ebx
  40d175:	cmp    r15d,ebx
  40d178:	je     40cd10 <__flatcc_fb_gen_c_builder@@Base+0x330>
  40d17e:	test   r14d,r14d
  40d181:	mov    rbx,QWORD PTR [rsp]
  40d185:	je     40d156 <__flatcc_fb_gen_c_builder@@Base+0x776>
  40d187:	test   r12d,r12d
  40d18a:	je     40d1a0 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
  40d18c:	mov    rcx,QWORD PTR [rbx]
  40d18f:	test   r12b,0x3
  40d193:	jne    40d140 <__flatcc_fb_gen_c_builder@@Base+0x760>
  40d195:	cmp    r13d,0x2
  40d199:	jg     40d1a9 <__flatcc_fb_gen_c_builder@@Base+0x7c9>
  40d19b:	jmp    40d140 <__flatcc_fb_gen_c_builder@@Base+0x760>
  40d19d:	nop    DWORD PTR [rax]
  40d1a0:	mov    rcx,QWORD PTR [rbx]
  40d1a3:	cmp    r14d,0x5
  40d1a7:	jl     40d140 <__flatcc_fb_gen_c_builder@@Base+0x760>
  40d1a9:	mov    rdi,rcx
  40d1ac:	lea    rsi,[rip+0x3393d]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40d1b3:	lea    rdx,[rip+0x242a2]        # 43145c <_IO_stdin_used@@Base+0x345c>
  40d1ba:	xor    eax,eax
  40d1bc:	call   406180 <fprintf@plt>
  40d1c1:	jmp    40d156 <__flatcc_fb_gen_c_builder@@Base+0x776>
  40d1c3:	mov    rax,QWORD PTR [r15+0xd8]
  40d1ca:	vxorps xmm0,xmm0,xmm0
  40d1ce:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d1d7:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d1e0:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d1e9:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d1f2:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d1f8:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d1fe:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d204:	mov    QWORD PTR [rsp+0x100],0x0
  40d210:	mov    rbx,QWORD PTR [rax+0x40]
  40d214:	test   rbx,rbx
  40d217:	je     40d294 <__flatcc_fb_gen_c_builder@@Base+0x8b4>
  40d219:	lea    r14,[rsp+0x20]
  40d21e:	lea    r15,[rip+0x33a95]        # 440cba <_IO_stdin_used@@Base+0x12cba>
  40d225:	xor    eax,eax
  40d227:	cmp    WORD PTR [rbx+0x10],0x4
  40d22c:	je     40d23f <__flatcc_fb_gen_c_builder@@Base+0x85f>
  40d22e:	xchg   ax,ax
  40d230:	mov    rbx,QWORD PTR [rbx]
  40d233:	test   rbx,rbx
  40d236:	je     40d277 <__flatcc_fb_gen_c_builder@@Base+0x897>
  40d238:	cmp    WORD PTR [rbx+0x10],0x4
  40d23d:	jne    40d230 <__flatcc_fb_gen_c_builder@@Base+0x850>
  40d23f:	mov    rdi,QWORD PTR [rbx+0x18]
  40d243:	mov    rsi,rbx
  40d246:	mov    rdx,r14
  40d249:	vzeroupper 
  40d24c:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d251:	mov    rdx,QWORD PTR [rsp+0x8]
  40d256:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d25d:	mov    rsi,r15
  40d260:	mov    rcx,r14
  40d263:	mov    r8,rdx
  40d266:	mov    r9,r14
  40d269:	xor    eax,eax
  40d26b:	call   406180 <fprintf@plt>
  40d270:	mov    eax,0x1
  40d275:	jmp    40d230 <__flatcc_fb_gen_c_builder@@Base+0x850>
  40d277:	test   eax,eax
  40d279:	mov    r15,QWORD PTR [rsp+0x8]
  40d27e:	je     40d294 <__flatcc_fb_gen_c_builder@@Base+0x8b4>
  40d280:	mov    rax,QWORD PTR [rsp]
  40d284:	mov    rsi,QWORD PTR [rax]
  40d287:	mov    edi,0xa
  40d28c:	vzeroupper 
  40d28f:	call   406120 <fputc@plt>
  40d294:	mov    rax,QWORD PTR [r15+0xd8]
  40d29b:	mov    r14,QWORD PTR [rax+0x40]
  40d29f:	test   r14,r14
  40d2a2:	je     40e3f5 <__flatcc_fb_gen_c_builder@@Base+0x1a15>
  40d2a8:	lea    r13,[rip+0x33a8d]        # 440d3c <_IO_stdin_used@@Base+0x12d3c>
  40d2af:	mov    DWORD PTR [rsp+0x18],0x0
  40d2b7:	cmp    WORD PTR [r14+0x10],0x0
  40d2bd:	jne    40d36f <__flatcc_fb_gen_c_builder@@Base+0x98f>
  40d2c3:	jmp    40d383 <__flatcc_fb_gen_c_builder@@Base+0x9a3>
  40d2c8:	mov    rax,QWORD PTR [rsp]
  40d2cc:	mov    rcx,QWORD PTR [rax]
  40d2cf:	mov    esi,0x6
  40d2d4:	mov    edx,0x1
  40d2d9:	lea    rdi,[rip+0x33a60]        # 440d40 <_IO_stdin_used@@Base+0x12d40>
  40d2e0:	call   406230 <fwrite@plt>
  40d2e5:	vxorps xmm0,xmm0,xmm0
  40d2e9:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d2f2:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d2fb:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d304:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d30d:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d313:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d319:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d31f:	mov    QWORD PTR [rsp+0x100],0x0
  40d32b:	mov    rdi,QWORD PTR [r14+0x18]
  40d32f:	mov    rsi,r14
  40d332:	lea    rbx,[rsp+0x20]
  40d337:	mov    rdx,rbx
  40d33a:	vzeroupper 
  40d33d:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d342:	mov    rdi,QWORD PTR [r15+0xd0]
  40d349:	mov    r9,QWORD PTR [r14+0xa8]
  40d350:	lea    rsi,[rip+0x339f0]        # 440d47 <_IO_stdin_used@@Base+0x12d47>
  40d357:	mov    rdx,r15
  40d35a:	mov    rcx,r15
  40d35d:	mov    r8,rbx
  40d360:	xor    eax,eax
  40d362:	call   406180 <fprintf@plt>
  40d367:	mov    DWORD PTR [rsp+0x18],0x1
  40d36f:	mov    r14,QWORD PTR [r14]
  40d372:	test   r14,r14
  40d375:	je     40d516 <__flatcc_fb_gen_c_builder@@Base+0xb36>
  40d37b:	cmp    WORD PTR [r14+0x10],0x0
  40d381:	jne    40d36f <__flatcc_fb_gen_c_builder@@Base+0x98f>
  40d383:	vxorps xmm0,xmm0,xmm0
  40d387:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d390:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d399:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d3a2:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d3ab:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d3b1:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d3b7:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d3bd:	mov    QWORD PTR [rsp+0x100],0x0
  40d3c9:	mov    rax,QWORD PTR [r14+0x28]
  40d3cd:	xor    r12d,r12d
  40d3d0:	test   rax,rax
  40d3d3:	je     40d3f6 <__flatcc_fb_gen_c_builder@@Base+0xa16>
  40d3d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d3df:	nop
  40d3e0:	mov    ecx,DWORD PTR [rax+0x70]
  40d3e3:	shr    ecx,0x2
  40d3e6:	not    ecx
  40d3e8:	and    ecx,0x1
  40d3eb:	add    r12d,ecx
  40d3ee:	mov    rax,QWORD PTR [rax]
  40d3f1:	test   rax,rax
  40d3f4:	jne    40d3e0 <__flatcc_fb_gen_c_builder@@Base+0xa00>
  40d3f6:	mov    rdi,QWORD PTR [r14+0x18]
  40d3fa:	mov    rsi,r14
  40d3fd:	lea    rbx,[rsp+0x20]
  40d402:	mov    rdx,rbx
  40d405:	vzeroupper 
  40d408:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d40d:	mov    rdi,QWORD PTR [r15+0xd0]
  40d414:	lea    rsi,[rip+0x338f4]        # 440d0f <_IO_stdin_used@@Base+0x12d0f>
  40d41b:	mov    rdx,r15
  40d41e:	mov    rcx,rbx
  40d421:	xor    eax,eax
  40d423:	call   406180 <fprintf@plt>
  40d428:	mov    rbx,QWORD PTR [r14+0x28]
  40d42c:	test   rbx,rbx
  40d42f:	je     40d2c8 <__flatcc_fb_gen_c_builder@@Base+0x8e8>
  40d435:	xor    r15d,r15d
  40d438:	jmp    40d46d <__flatcc_fb_gen_c_builder@@Base+0xa8d>
  40d43a:	mov    rax,QWORD PTR [rsp]
  40d43e:	mov    rsi,QWORD PTR [rax]
  40d441:	mov    edi,0x20
  40d446:	call   406120 <fputc@plt>
  40d44b:	mov    rax,QWORD PTR [rsp]
  40d44f:	mov    rdi,QWORD PTR [rax]
  40d452:	mov    edx,DWORD PTR [rbx+0x88]
  40d458:	mov    rsi,r13
  40d45b:	xor    eax,eax
  40d45d:	call   406180 <fprintf@plt>
  40d462:	inc    r15d
  40d465:	mov    rbx,QWORD PTR [rbx]
  40d468:	test   rbx,rbx
  40d46b:	je     40d4e0 <__flatcc_fb_gen_c_builder@@Base+0xb00>
  40d46d:	movzx  eax,WORD PTR [rbx+0x70]
  40d471:	and    eax,0x104
  40d476:	cmp    eax,0x100
  40d47b:	jne    40d465 <__flatcc_fb_gen_c_builder@@Base+0xa85>
  40d47d:	test   r15d,r15d
  40d480:	jle    40d43a <__flatcc_fb_gen_c_builder@@Base+0xa5a>
  40d482:	test   r12d,r12d
  40d485:	je     40d44b <__flatcc_fb_gen_c_builder@@Base+0xa6b>
  40d487:	mov    rax,QWORD PTR [rsp]
  40d48b:	mov    rcx,QWORD PTR [rax]
  40d48e:	test   r15b,0x3
  40d492:	jne    40d4b9 <__flatcc_fb_gen_c_builder@@Base+0xad9>
  40d494:	mov    eax,r12d
  40d497:	sub    eax,r15d
  40d49a:	cmp    eax,0x2
  40d49d:	jle    40d4b9 <__flatcc_fb_gen_c_builder@@Base+0xad9>
  40d49f:	mov    rdi,rcx
  40d4a2:	lea    rsi,[rip+0x33647]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40d4a9:	lea    rdx,[rip+0x22892]        # 42fd42 <_IO_stdin_used@@Base+0x1d42>
  40d4b0:	xor    eax,eax
  40d4b2:	call   406180 <fprintf@plt>
  40d4b7:	jmp    40d44b <__flatcc_fb_gen_c_builder@@Base+0xa6b>
  40d4b9:	mov    esi,0x2
  40d4be:	mov    edx,0x1
  40d4c3:	lea    rdi,[rip+0x38fb2]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40d4ca:	call   406230 <fwrite@plt>
  40d4cf:	jmp    40d44b <__flatcc_fb_gen_c_builder@@Base+0xa6b>
  40d4d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4de:	xchg   ax,ax
  40d4e0:	mov    rax,QWORD PTR [rsp]
  40d4e4:	mov    rcx,QWORD PTR [rax]
  40d4e7:	test   r15d,r15d
  40d4ea:	jle    40d50c <__flatcc_fb_gen_c_builder@@Base+0xb2c>
  40d4ec:	mov    esi,0x7
  40d4f1:	mov    edx,0x1
  40d4f6:	lea    rdi,[rip+0x33842]        # 440d3f <_IO_stdin_used@@Base+0x12d3f>
  40d4fd:	call   406230 <fwrite@plt>
  40d502:	mov    r15,QWORD PTR [rsp+0x8]
  40d507:	jmp    40d2e5 <__flatcc_fb_gen_c_builder@@Base+0x905>
  40d50c:	mov    r15,QWORD PTR [rsp+0x8]
  40d511:	jmp    40d2cf <__flatcc_fb_gen_c_builder@@Base+0x8ef>
  40d516:	mov    rax,QWORD PTR [r15+0xd8]
  40d51d:	mov    r15,QWORD PTR [rax+0x40]
  40d521:	test   r15,r15
  40d524:	je     40d9d9 <__flatcc_fb_gen_c_builder@@Base+0xff9>
  40d52a:	lea    r13,[rsp+0x120]
  40d532:	cmp    WORD PTR [r15+0x10],0x0
  40d538:	jne    40d577 <__flatcc_fb_gen_c_builder@@Base+0xb97>
  40d53a:	jmp    40d58b <__flatcc_fb_gen_c_builder@@Base+0xbab>
  40d53c:	nop    DWORD PTR [rax+0x0]
  40d540:	mov    rbx,QWORD PTR [rsp+0x8]
  40d545:	mov    rsi,QWORD PTR [rbx+0xd0]
  40d54c:	mov    edi,0xa
  40d551:	call   406120 <fputc@plt>
  40d556:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d55d:	lea    rsi,[rip+0x33802]        # 440d66 <_IO_stdin_used@@Base+0x12d66>
  40d564:	mov    rdx,r13
  40d567:	mov    rcx,r13
  40d56a:	mov    r8,rbx
  40d56d:	mov    r9,r13
  40d570:	xor    eax,eax
  40d572:	call   406180 <fprintf@plt>
  40d577:	mov    r15,QWORD PTR [r15]
  40d57a:	test   r15,r15
  40d57d:	je     40d9d9 <__flatcc_fb_gen_c_builder@@Base+0xff9>
  40d583:	cmp    WORD PTR [r15+0x10],0x0
  40d589:	jne    40d577 <__flatcc_fb_gen_c_builder@@Base+0xb97>
  40d58b:	vxorps xmm0,xmm0,xmm0
  40d58f:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40d598:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40d5a1:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40d5aa:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40d5b3:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40d5bc:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40d5c5:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40d5ce:	mov    QWORD PTR [rsp+0x200],0x0
  40d5da:	mov    rdi,QWORD PTR [r15+0x18]
  40d5de:	mov    rsi,r15
  40d5e1:	mov    rdx,r13
  40d5e4:	vzeroupper 
  40d5e7:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d5ec:	mov    rax,QWORD PTR [r15+0x28]
  40d5f0:	xor    r12d,r12d
  40d5f3:	test   rax,rax
  40d5f6:	je     40d618 <__flatcc_fb_gen_c_builder@@Base+0xc38>
  40d5f8:	mov    rbx,QWORD PTR [rsp]
  40d5fc:	nop    DWORD PTR [rax+0x0]
  40d600:	mov    ecx,DWORD PTR [rax+0x70]
  40d603:	shr    ecx,0x2
  40d606:	not    ecx
  40d608:	and    ecx,0x1
  40d60b:	add    r12d,ecx
  40d60e:	mov    rax,QWORD PTR [rax]
  40d611:	test   rax,rax
  40d614:	jne    40d600 <__flatcc_fb_gen_c_builder@@Base+0xc20>
  40d616:	jmp    40d61c <__flatcc_fb_gen_c_builder@@Base+0xc3c>
  40d618:	mov    rbx,QWORD PTR [rsp]
  40d61c:	mov    rdi,QWORD PTR [rbx]
  40d61f:	lea    rsi,[rip+0x33286]        # 4408ac <_IO_stdin_used@@Base+0x128ac>
  40d626:	mov    rdx,r13
  40d629:	xor    eax,eax
  40d62b:	call   406180 <fprintf@plt>
  40d630:	vxorps xmm0,xmm0,xmm0
  40d634:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d63d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d646:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d64f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d658:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d65e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d664:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d66a:	mov    QWORD PTR [rsp+0x100],0x0
  40d676:	mov    r13,QWORD PTR [r15+0x28]
  40d67a:	test   r13,r13
  40d67d:	je     40d910 <__flatcc_fb_gen_c_builder@@Base+0xf30>
  40d683:	xor    r14d,r14d
  40d686:	mov    QWORD PTR [rsp+0x10],r15
  40d68b:	test   BYTE PTR [r13+0x70],0x4
  40d690:	jne    40d6b8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40d692:	jmp    40d6cc <__flatcc_fb_gen_c_builder@@Base+0xcec>
  40d694:	mov    rdx,QWORD PTR [rsp+0x8]
  40d699:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d6a0:	mov    rcx,QWORD PTR [r13+0x88]
  40d6a7:	lea    rsi,[rip+0x33817]        # 440ec5 <_IO_stdin_used@@Base+0x12ec5>
  40d6ae:	xor    eax,eax
  40d6b0:	vzeroupper 
  40d6b3:	call   406180 <fprintf@plt>
  40d6b8:	mov    r13,QWORD PTR [r13+0x0]
  40d6bc:	test   r13,r13
  40d6bf:	je     40d910 <__flatcc_fb_gen_c_builder@@Base+0xf30>
  40d6c5:	test   BYTE PTR [r13+0x70],0x4
  40d6ca:	jne    40d6b8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40d6cc:	test   r12d,r12d
  40d6cf:	je     40d729 <__flatcc_fb_gen_c_builder@@Base+0xd49>
  40d6d1:	test   r14d,r14d
  40d6d4:	je     40d707 <__flatcc_fb_gen_c_builder@@Base+0xd27>
  40d6d6:	mov    rcx,QWORD PTR [rbx]
  40d6d9:	test   r14b,0x3
  40d6dd:	jne    40d710 <__flatcc_fb_gen_c_builder@@Base+0xd30>
  40d6df:	mov    eax,r12d
  40d6e2:	sub    eax,r14d
  40d6e5:	cmp    eax,0x2
  40d6e8:	jle    40d710 <__flatcc_fb_gen_c_builder@@Base+0xd30>
  40d6ea:	mov    rdi,rcx
  40d6ed:	lea    rsi,[rip+0x333fc]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40d6f4:	lea    rdx,[rip+0x23d61]        # 43145c <_IO_stdin_used@@Base+0x345c>
  40d6fb:	xor    eax,eax
  40d6fd:	vzeroupper 
  40d700:	call   406180 <fprintf@plt>
  40d705:	jmp    40d729 <__flatcc_fb_gen_c_builder@@Base+0xd49>
  40d707:	mov    rcx,QWORD PTR [rbx]
  40d70a:	cmp    r12d,0x5
  40d70e:	jge    40d6ea <__flatcc_fb_gen_c_builder@@Base+0xd0a>
  40d710:	mov    esi,0x2
  40d715:	mov    edx,0x1
  40d71a:	lea    rdi,[rip+0x38d5b]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40d721:	vzeroupper 
  40d724:	call   406230 <fwrite@plt>
  40d729:	mov    eax,DWORD PTR [r13+0x28]
  40d72d:	add    eax,0xfffffff9
  40d730:	cmp    ax,0x8
  40d734:	ja     40e461 <__flatcc_fb_gen_c_builder@@Base+0x1a81>
  40d73a:	inc    r14d
  40d73d:	movzx  eax,ax
  40d740:	lea    rcx,[rip+0x2a7f1]        # 437f38 <_IO_stdin_used@@Base+0x9f38>
  40d747:	movsxd rax,DWORD PTR [rcx+rax*4]
  40d74b:	add    rax,rcx
  40d74e:	jmp    rax
  40d750:	mov    eax,DWORD PTR [r13+0x18]
  40d754:	dec    eax
  40d756:	cmp    eax,0xb
  40d759:	jae    40e63f <__flatcc_fb_gen_c_builder@@Base+0x1c5f>
  40d75f:	cdqe   
  40d761:	lea    rcx,[rip+0x444a0]        # 451c08 <fb_value_set_deleted@@Base+0x69a8>
  40d768:	mov    rcx,QWORD PTR [rcx+rax*8]
  40d76c:	mov    rdx,QWORD PTR [rsp+0x8]
  40d771:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d778:	mov    r8,QWORD PTR [r13+0x88]
  40d77f:	lea    rsi,[rip+0x3372a]        # 440eb0 <_IO_stdin_used@@Base+0x12eb0>
  40d786:	jmp    40d7cd <__flatcc_fb_gen_c_builder@@Base+0xded>
  40d788:	mov    ecx,DWORD PTR [r13+0x18]
  40d78c:	lea    eax,[rcx-0x1]
  40d78f:	cmp    eax,0xb
  40d792:	jae    40e561 <__flatcc_fb_gen_c_builder@@Base+0x1b81>
  40d798:	cmp    ecx,0x5
  40d79b:	lea    rdx,[rip+0x225a1]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40d7a2:	mov    rsi,QWORD PTR [rsp+0x8]
  40d7a7:	cmove  rdx,rsi
  40d7ab:	cdqe   
  40d7ad:	lea    rcx,[rip+0x443fc]        # 451bb0 <fb_value_set_deleted@@Base+0x6950>
  40d7b4:	mov    rcx,QWORD PTR [rcx+rax*8]
  40d7b8:	mov    rdi,QWORD PTR [rsi+0xd0]
  40d7bf:	mov    r8,QWORD PTR [r13+0x88]
  40d7c6:	lea    rsi,[rip+0x336d8]        # 440ea5 <_IO_stdin_used@@Base+0x12ea5>
  40d7cd:	xor    eax,eax
  40d7cf:	vzeroupper 
  40d7d2:	call   406180 <fprintf@plt>
  40d7d7:	jmp    40d6b8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40d7dc:	mov    rdx,QWORD PTR [rsp+0x8]
  40d7e1:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d7e8:	mov    rcx,QWORD PTR [r13+0x88]
  40d7ef:	lea    rsi,[rip+0x336e4]        # 440eda <_IO_stdin_used@@Base+0x12eda>
  40d7f6:	jmp    40d6ae <__flatcc_fb_gen_c_builder@@Base+0xcce>
  40d7fb:	mov    r15,rbx
  40d7fe:	mov    rsi,QWORD PTR [r13+0x18]
  40d802:	mov    rdi,QWORD PTR [rsi+0x18]
  40d806:	lea    rbx,[rsp+0x20]
  40d80b:	mov    rdx,rbx
  40d80e:	vzeroupper 
  40d811:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d816:	mov    rax,QWORD PTR [r13+0x18]
  40d81a:	movzx  eax,WORD PTR [rax+0x10]
  40d81e:	cmp    ax,0x2
  40d822:	jb     40d839 <__flatcc_fb_gen_c_builder@@Base+0xe59>
  40d824:	cmp    ax,0x4
  40d828:	je     40d89c <__flatcc_fb_gen_c_builder@@Base+0xebc>
  40d82a:	cmp    ax,0x3
  40d82e:	lea    rbx,[rsp+0x20]
  40d833:	jne    40e68b <__flatcc_fb_gen_c_builder@@Base+0x1cab>
  40d839:	mov    rdi,QWORD PTR [r15]
  40d83c:	mov    rcx,QWORD PTR [r13+0x88]
  40d843:	lea    rsi,[rip+0x33668]        # 440eb2 <_IO_stdin_used@@Base+0x12eb2>
  40d84a:	mov    rdx,rbx
  40d84d:	mov    rbx,r15
  40d850:	jmp    40d8b5 <__flatcc_fb_gen_c_builder@@Base+0xed5>
  40d852:	mov    rsi,QWORD PTR [r13+0x18]
  40d856:	mov    rdi,QWORD PTR [rsi+0x18]
  40d85a:	lea    rdx,[rsp+0x20]
  40d85f:	vzeroupper 
  40d862:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40d867:	mov    rax,QWORD PTR [r13+0x18]
  40d86b:	movzx  eax,WORD PTR [rax+0x10]
  40d86f:	cmp    rax,0x4
  40d873:	ja     40e518 <__flatcc_fb_gen_c_builder@@Base+0x1b38>
  40d879:	lea    rcx,[rip+0x2a6dc]        # 437f5c <_IO_stdin_used@@Base+0x9f5c>
  40d880:	movsxd rax,DWORD PTR [rcx+rax*4]
  40d884:	add    rax,rcx
  40d887:	jmp    rax
  40d889:	mov    rdi,QWORD PTR [rbx]
  40d88c:	mov    rcx,QWORD PTR [r13+0x88]
  40d893:	lea    rsi,[rip+0x3352c]        # 440dc6 <_IO_stdin_used@@Base+0x12dc6>
  40d89a:	jmp    40d8fd <__flatcc_fb_gen_c_builder@@Base+0xf1d>
  40d89c:	mov    rbx,r15
  40d89f:	mov    rdi,QWORD PTR [r15]
  40d8a2:	mov    rcx,QWORD PTR [r13+0x88]
  40d8a9:	lea    rsi,[rip+0x335b0]        # 440e60 <_IO_stdin_used@@Base+0x12e60>
  40d8b0:	lea    rdx,[rsp+0x20]
  40d8b5:	xor    eax,eax
  40d8b7:	call   406180 <fprintf@plt>
  40d8bc:	mov    r15,QWORD PTR [rsp+0x10]
  40d8c1:	jmp    40d6b8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40d8c6:	mov    rdi,QWORD PTR [rbx]
  40d8c9:	mov    rcx,QWORD PTR [r13+0x88]
  40d8d0:	lea    rsi,[rip+0x334fe]        # 440dd5 <_IO_stdin_used@@Base+0x12dd5>
  40d8d7:	jmp    40d8fd <__flatcc_fb_gen_c_builder@@Base+0xf1d>
  40d8d9:	mov    rdi,QWORD PTR [rbx]
  40d8dc:	mov    rcx,QWORD PTR [r13+0x88]
  40d8e3:	lea    rsi,[rip+0x334c0]        # 440daa <_IO_stdin_used@@Base+0x12daa>
  40d8ea:	jmp    40d8fd <__flatcc_fb_gen_c_builder@@Base+0xf1d>
  40d8ec:	mov    rdi,QWORD PTR [rbx]
  40d8ef:	mov    rcx,QWORD PTR [r13+0x88]
  40d8f6:	lea    rsi,[rip+0x334b9]        # 440db6 <_IO_stdin_used@@Base+0x12db6>
  40d8fd:	lea    rdx,[rsp+0x20]
  40d902:	jmp    40d6ae <__flatcc_fb_gen_c_builder@@Base+0xcce>
  40d907:	nop    WORD PTR [rax+rax*1+0x0]
  40d910:	mov    rdi,QWORD PTR [rbx]
  40d913:	lea    rsi,[rip+0x32fac]        # 4408c6 <_IO_stdin_used@@Base+0x128c6>
  40d91a:	lea    r13,[rsp+0x120]
  40d922:	mov    rdx,r13
  40d925:	xor    eax,eax
  40d927:	vzeroupper 
  40d92a:	call   406180 <fprintf@plt>
  40d92f:	mov    rbx,QWORD PTR [r15+0x28]
  40d933:	test   rbx,rbx
  40d936:	je     40d540 <__flatcc_fb_gen_c_builder@@Base+0xb60>
  40d93c:	xor    r14d,r14d
  40d93f:	test   BYTE PTR [rbx+0x70],0x4
  40d943:	jne    40d97c <__flatcc_fb_gen_c_builder@@Base+0xf9c>
  40d945:	jmp    40d98e <__flatcc_fb_gen_c_builder@@Base+0xfae>
  40d947:	mov    esi,0x2
  40d94c:	mov    edx,0x1
  40d951:	lea    rdi,[rip+0x38b24]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40d958:	call   406230 <fwrite@plt>
  40d95d:	mov    rax,QWORD PTR [rsp]
  40d961:	mov    rdi,QWORD PTR [rax]
  40d964:	mov    rdx,QWORD PTR [rbx+0x88]
  40d96b:	lea    rsi,[rip+0x33538]        # 440eaa <_IO_stdin_used@@Base+0x12eaa>
  40d972:	xor    eax,eax
  40d974:	call   406180 <fprintf@plt>
  40d979:	inc    r14d
  40d97c:	mov    rbx,QWORD PTR [rbx]
  40d97f:	test   rbx,rbx
  40d982:	je     40d540 <__flatcc_fb_gen_c_builder@@Base+0xb60>
  40d988:	test   BYTE PTR [rbx+0x70],0x4
  40d98c:	jne    40d97c <__flatcc_fb_gen_c_builder@@Base+0xf9c>
  40d98e:	test   r12d,r12d
  40d991:	je     40d95d <__flatcc_fb_gen_c_builder@@Base+0xf7d>
  40d993:	test   r14d,r14d
  40d996:	je     40d9b2 <__flatcc_fb_gen_c_builder@@Base+0xfd2>
  40d998:	mov    rax,QWORD PTR [rsp]
  40d99c:	mov    rcx,QWORD PTR [rax]
  40d99f:	test   r14b,0x3
  40d9a3:	jne    40d947 <__flatcc_fb_gen_c_builder@@Base+0xf67>
  40d9a5:	mov    eax,r12d
  40d9a8:	sub    eax,r14d
  40d9ab:	cmp    eax,0x2
  40d9ae:	jg     40d9bf <__flatcc_fb_gen_c_builder@@Base+0xfdf>
  40d9b0:	jmp    40d947 <__flatcc_fb_gen_c_builder@@Base+0xf67>
  40d9b2:	mov    rax,QWORD PTR [rsp]
  40d9b6:	mov    rcx,QWORD PTR [rax]
  40d9b9:	cmp    r12d,0x5
  40d9bd:	jl     40d947 <__flatcc_fb_gen_c_builder@@Base+0xf67>
  40d9bf:	mov    rdi,rcx
  40d9c2:	lea    rsi,[rip+0x33127]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40d9c9:	lea    rdx,[rip+0x23a8c]        # 43145c <_IO_stdin_used@@Base+0x345c>
  40d9d0:	xor    eax,eax
  40d9d2:	call   406180 <fprintf@plt>
  40d9d7:	jmp    40d95d <__flatcc_fb_gen_c_builder@@Base+0xf7d>
  40d9d9:	cmp    DWORD PTR [rsp+0x18],0x0
  40d9de:	mov    r15,QWORD PTR [rsp+0x8]
  40d9e3:	je     40e3f5 <__flatcc_fb_gen_c_builder@@Base+0x1a15>
  40d9e9:	mov    rsi,QWORD PTR [r15+0xd0]
  40d9f0:	mov    edi,0xa
  40d9f5:	vzeroupper 
  40d9f8:	call   406120 <fputc@plt>
  40d9fd:	mov    rdi,r15
  40da00:	call   40f060 <__flatcc_fb_gen_c_builder@@Base+0x2680>
  40da05:	mov    rax,QWORD PTR [r15+0xd8]
  40da0c:	mov    r12,QWORD PTR [rax+0x40]
  40da10:	test   r12,r12
  40da13:	mov    rbx,QWORD PTR [rsp]
  40da17:	jne    40daf2 <__flatcc_fb_gen_c_builder@@Base+0x1112>
  40da1d:	jmp    40e404 <__flatcc_fb_gen_c_builder@@Base+0x1a24>
  40da22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da2c:	nop    DWORD PTR [rax+0x0]
  40da30:	mov    rdi,QWORD PTR [r15+0xd0]
  40da37:	lea    rsi,[rip+0x33cfc]        # 44173a <_IO_stdin_used@@Base+0x1373a>
  40da3e:	lea    rbx,[rsp+0x20]
  40da43:	mov    rdx,rbx
  40da46:	xor    eax,eax
  40da48:	call   406180 <fprintf@plt>
  40da4d:	vxorps xmm0,xmm0,xmm0
  40da51:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40da5a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40da63:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40da6c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40da75:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40da7b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40da81:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40da87:	mov    QWORD PTR [rsp+0x100],0x0
  40da93:	mov    rdi,QWORD PTR [r12+0x18]
  40da98:	mov    rsi,r12
  40da9b:	mov    rdx,rbx
  40da9e:	vzeroupper 
  40daa1:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40daa6:	mov    rdi,QWORD PTR [r15+0xd0]
  40daad:	sub    rsp,0x8
  40dab1:	lea    rsi,[rip+0x33cb7]        # 44176f <_IO_stdin_used@@Base+0x1376f>
  40dab8:	mov    rdx,r15
  40dabb:	mov    rcx,r15
  40dabe:	mov    r8,rbx
  40dac1:	mov    r9,rbx
  40dac4:	xor    eax,eax
  40dac6:	push   rbx
  40dac7:	call   406180 <fprintf@plt>
  40dacc:	add    rsp,0x10
  40dad0:	mov    rsi,QWORD PTR [r15+0xd0]
  40dad7:	mov    edi,0xa
  40dadc:	call   406120 <fputc@plt>
  40dae1:	mov    rbx,QWORD PTR [rsp]
  40dae5:	mov    r12,QWORD PTR [r12]
  40dae9:	test   r12,r12
  40daec:	je     40e404 <__flatcc_fb_gen_c_builder@@Base+0x1a24>
  40daf2:	cmp    WORD PTR [r12+0x10],0x0
  40daf9:	jne    40dae5 <__flatcc_fb_gen_c_builder@@Base+0x1105>
  40dafb:	vxorps xmm0,xmm0,xmm0
  40daff:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40db05:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40db0b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40db11:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40db1a:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40db23:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40db2c:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40db35:	mov    QWORD PTR [rsp+0x100],0x0
  40db41:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40db4a:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40db53:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40db5c:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40db65:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40db6e:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40db77:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40db80:	mov    QWORD PTR [rsp+0x200],0x0
  40db8c:	mov    rdi,QWORD PTR [r12+0x18]
  40db91:	mov    rsi,r12
  40db94:	lea    rdx,[rsp+0x20]
  40db99:	vzeroupper 
  40db9c:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40dba1:	mov    QWORD PTR [rsp+0x118],r12
  40dba9:	mov    r12,QWORD PTR [r12+0x28]
  40dbae:	test   r12,r12
  40dbb1:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40dbb3:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40dbb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbc0:	mov    rdi,QWORD PTR [rbx]
  40dbc3:	lea    rsi,[rip+0x3352c]        # 4410f6 <_IO_stdin_used@@Base+0x130f6>
  40dbca:	lea    rdx,[rsp+0x20]
  40dbcf:	mov    ecx,r14d
  40dbd2:	mov    r8,r13
  40dbd5:	xor    eax,eax
  40dbd7:	call   406180 <fprintf@plt>
  40dbdc:	mov    r12,QWORD PTR [r12]
  40dbe0:	test   r12,r12
  40dbe3:	je     40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40dbe9:	mov    rax,QWORD PTR [r12+0x8]
  40dbee:	mov    r14d,DWORD PTR [rax+0x8]
  40dbf2:	mov    r13,QWORD PTR [rax]
  40dbf5:	test   BYTE PTR [r12+0x70],0x4
  40dbfb:	jne    40dbc0 <__flatcc_fb_gen_c_builder@@Base+0x11e0>
  40dbfd:	mov    eax,DWORD PTR [r12+0x28]
  40dc02:	add    eax,0xfffffff9
  40dc05:	cmp    ax,0x8
  40dc09:	ja     40e4ad <__flatcc_fb_gen_c_builder@@Base+0x1acd>
  40dc0f:	movzx  eax,ax
  40dc12:	lea    rcx,[rip+0x2a357]        # 437f70 <_IO_stdin_used@@Base+0x9f70>
  40dc19:	movsxd rax,DWORD PTR [rcx+rax*4]
  40dc1d:	add    rax,rcx
  40dc20:	jmp    rax
  40dc22:	mov    ecx,DWORD PTR [r12+0x18]
  40dc27:	lea    eax,[rcx-0x1]
  40dc2a:	cmp    eax,0xb
  40dc2d:	jae    40e561 <__flatcc_fb_gen_c_builder@@Base+0x1b81>
  40dc33:	cmp    ecx,0x5
  40dc36:	lea    rbx,[rip+0x22106]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40dc3d:	mov    r11,rbx
  40dc40:	cmove  r11,r15
  40dc44:	movsxd r10,eax
  40dc47:	mov    rdi,QWORD PTR [r15+0xd0]
  40dc4e:	mov    rcx,QWORD PTR [r12+0x88]
  40dc56:	lea    rsi,[rip+0x33514]        # 441171 <_IO_stdin_used@@Base+0x13171>
  40dc5d:	mov    rdx,r15
  40dc60:	mov    r8,r15
  40dc63:	lea    r9,[rsp+0x20]
  40dc68:	mov    eax,0x0
  40dc6d:	lea    rbx,[rip+0x43f3c]        # 451bb0 <fb_value_set_deleted@@Base+0x6950>
  40dc74:	push   QWORD PTR [rbx+r10*8]
  40dc78:	push   r11
  40dc7a:	lea    rbx,[rip+0x43f87]        # 451c08 <fb_value_set_deleted@@Base+0x69a8>
  40dc81:	push   QWORD PTR [rbx+r10*8]
  40dc85:	push   r15
  40dc87:	push   r13
  40dc89:	push   r14
  40dc8b:	call   406180 <fprintf@plt>
  40dc90:	add    rsp,0x30
  40dc94:	mov    rsi,QWORD PTR [r12+0x90]
  40dc9c:	test   rsi,rsi
  40dc9f:	mov    rbx,QWORD PTR [rsp]
  40dca3:	je     40e114 <__flatcc_fb_gen_c_builder@@Base+0x1734>
  40dca9:	movzx  eax,WORD PTR [rsi+0x10]
  40dcad:	cmp    ax,0x1
  40dcb1:	je     40df37 <__flatcc_fb_gen_c_builder@@Base+0x1557>
  40dcb7:	test   ax,ax
  40dcba:	jne    40e6d4 <__flatcc_fb_gen_c_builder@@Base+0x1cf4>
  40dcc0:	mov    rdi,QWORD PTR [rsi+0x18]
  40dcc4:	lea    rax,[rsp+0x120]
  40dccc:	mov    rdx,rax
  40dccf:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40dcd4:	mov    rdi,QWORD PTR [r15+0xd0]
  40dcdb:	lea    rsi,[rip+0x334c6]        # 4411a8 <_IO_stdin_used@@Base+0x131a8>
  40dce2:	mov    rdx,r15
  40dce5:	mov    rcx,r15
  40dce8:	lea    r8,[rsp+0x20]
  40dced:	mov    r9d,r14d
  40dcf0:	mov    eax,0x0
  40dcf5:	lea    r10,[rsp+0x120]
  40dcfd:	push   r10
  40dcff:	push   r10
  40dd01:	push   r10
  40dd03:	push   r13
  40dd05:	call   406180 <fprintf@plt>
  40dd0a:	add    rsp,0x20
  40dd0e:	mov    r12,QWORD PTR [r12]
  40dd12:	test   r12,r12
  40dd15:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40dd1b:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40dd20:	mov    rdi,QWORD PTR [r15+0xd0]
  40dd27:	mov    rcx,QWORD PTR [r12+0x88]
  40dd2f:	lea    rsi,[rip+0x33582]        # 4412b8 <_IO_stdin_used@@Base+0x132b8>
  40dd36:	jmp    40de27 <__flatcc_fb_gen_c_builder@@Base+0x1447>
  40dd3b:	mov    QWORD PTR [rsp+0x18],r14
  40dd40:	mov    edi,DWORD PTR [r12+0x18]
  40dd45:	lea    eax,[rdi-0x1]
  40dd48:	cmp    eax,0xb
  40dd4b:	jae    40e561 <__flatcc_fb_gen_c_builder@@Base+0x1b81>
  40dd51:	cmp    edi,0x5
  40dd54:	lea    r14,[rip+0x21fe8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40dd5b:	cmove  r14,r15
  40dd5f:	cdqe   
  40dd61:	lea    rcx,[rip+0x43e48]        # 451bb0 <fb_value_set_deleted@@Base+0x6950>
  40dd68:	mov    r15,QWORD PTR [rcx+rax*8]
  40dd6c:	lea    rcx,[rip+0x43e95]        # 451c08 <fb_value_set_deleted@@Base+0x69a8>
  40dd73:	mov    rax,QWORD PTR [rcx+rax*8]
  40dd77:	mov    QWORD PTR [rsp+0x10],rax
  40dd7c:	lea    rsi,[r12+0x48]
  40dd81:	lea    rax,[rsp+0x220]
  40dd89:	mov    rdx,rax
  40dd8c:	call   40f2f0 <__flatcc_fb_gen_c_builder@@Base+0x2910>
  40dd91:	mov    rax,QWORD PTR [rsp+0x8]
  40dd96:	mov    rdi,QWORD PTR [rax+0xd0]
  40dd9d:	mov    rcx,QWORD PTR [r12+0x88]
  40dda5:	movzx  r10d,WORD PTR [r12+0x72]
  40ddab:	sub    rsp,0x8
  40ddaf:	lea    rsi,[rip+0x33376]        # 44112c <_IO_stdin_used@@Base+0x1312c>
  40ddb6:	mov    rdx,QWORD PTR [rsp+0x10]
  40ddbb:	mov    r8,QWORD PTR [rsp+0x10]
  40ddc0:	lea    r9,[rsp+0x28]
  40ddc5:	mov    eax,0x0
  40ddca:	lea    rbx,[rsp+0x228]
  40ddd2:	push   rbx
  40ddd3:	push   r10
  40ddd5:	push   QWORD PTR [r12+0x80]
  40dddd:	push   r15
  40dddf:	mov    r15,QWORD PTR [rsp+0x30]
  40dde4:	push   r14
  40dde6:	push   QWORD PTR [rsp+0x40]
  40ddea:	push   r15
  40ddec:	push   r13
  40ddee:	push   QWORD PTR [rsp+0x60]
  40ddf2:	call   406180 <fprintf@plt>
  40ddf7:	add    rsp,0x50
  40ddfb:	mov    rbx,QWORD PTR [rsp]
  40ddff:	mov    r12,QWORD PTR [r12]
  40de03:	test   r12,r12
  40de06:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40de0c:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40de11:	mov    rdi,QWORD PTR [r15+0xd0]
  40de18:	mov    rcx,QWORD PTR [r12+0x88]
  40de20:	lea    rsi,[rip+0x334bc]        # 4412e3 <_IO_stdin_used@@Base+0x132e3>
  40de27:	mov    rdx,r15
  40de2a:	mov    r8,r15
  40de2d:	lea    r9,[rsp+0x20]
  40de32:	xor    eax,eax
  40de34:	push   r13
  40de36:	push   r14
  40de38:	call   406180 <fprintf@plt>
  40de3d:	add    rsp,0x10
  40de41:	mov    r12,QWORD PTR [r12]
  40de45:	test   r12,r12
  40de48:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40de4e:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40de53:	mov    rsi,QWORD PTR [r12+0x18]
  40de58:	mov    rdi,QWORD PTR [rsi+0x18]
  40de5c:	lea    rdx,[rsp+0x120]
  40de64:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40de69:	mov    rax,QWORD PTR [r12+0x18]
  40de6e:	movzx  ecx,WORD PTR [rax+0x10]
  40de72:	cmp    rcx,0x4
  40de76:	ja     40e5ad <__flatcc_fb_gen_c_builder@@Base+0x1bcd>
  40de7c:	lea    rdx,[rip+0x2a111]        # 437f94 <_IO_stdin_used@@Base+0x9f94>
  40de83:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40de87:	add    rcx,rdx
  40de8a:	jmp    rcx
  40de8c:	test   BYTE PTR [rax+0x12],0x8
  40de90:	je     40deab <__flatcc_fb_gen_c_builder@@Base+0x14cb>
  40de92:	mov    rcx,QWORD PTR [rbx]
  40de95:	mov    esi,0x20
  40de9a:	mov    edx,0x1
  40de9f:	lea    rdi,[rip+0x3354c]        # 4413f2 <_IO_stdin_used@@Base+0x133f2>
  40dea6:	call   406230 <fwrite@plt>
  40deab:	mov    rdi,QWORD PTR [r15+0xd0]
  40deb2:	mov    rcx,QWORD PTR [r12+0x88]
  40deba:	sub    rsp,0x8
  40debe:	lea    rsi,[rip+0x33583]        # 441448 <_IO_stdin_used@@Base+0x13448>
  40dec5:	jmp    40df1a <__flatcc_fb_gen_c_builder@@Base+0x153a>
  40dec7:	mov    rsi,QWORD PTR [r12+0x18]
  40decc:	mov    rdi,QWORD PTR [rsi+0x18]
  40ded0:	lea    rdx,[rsp+0x120]
  40ded8:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40dedd:	mov    rax,QWORD PTR [r12+0x18]
  40dee2:	movzx  ecx,WORD PTR [rax+0x10]
  40dee6:	cmp    rcx,0x4
  40deea:	ja     40e5f6 <__flatcc_fb_gen_c_builder@@Base+0x1c16>
  40def0:	lea    rdx,[rip+0x2a0b1]        # 437fa8 <_IO_stdin_used@@Base+0x9fa8>
  40def7:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40defb:	add    rcx,rdx
  40defe:	jmp    rcx
  40df00:	mov    rdi,QWORD PTR [r15+0xd0]
  40df07:	mov    rcx,QWORD PTR [r12+0x88]
  40df0f:	sub    rsp,0x8
  40df13:	lea    rsi,[rip+0x33434]        # 44134e <_IO_stdin_used@@Base+0x1334e>
  40df1a:	mov    rdx,r15
  40df1d:	mov    r8,r15
  40df20:	lea    r9,[rsp+0x28]
  40df25:	xor    eax,eax
  40df27:	mov    r10,rbx
  40df2a:	lea    rbx,[rsp+0x128]
  40df32:	jmp    40e158 <__flatcc_fb_gen_c_builder@@Base+0x1778>
  40df37:	mov    rdi,QWORD PTR [rsi+0x18]
  40df3b:	lea    rax,[rsp+0x120]
  40df43:	mov    rbx,rax
  40df46:	mov    rdx,rax
  40df49:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40df4e:	mov    rdi,QWORD PTR [r15+0xd0]
  40df55:	mov    rax,QWORD PTR [r12+0x90]
  40df5d:	movzx  r10d,WORD PTR [rax+0xb0]
  40df65:	sub    rsp,0x8
  40df69:	lea    rsi,[rip+0x33289]        # 4411f9 <_IO_stdin_used@@Base+0x131f9>
  40df70:	mov    rdx,r15
  40df73:	mov    rcx,r15
  40df76:	lea    r8,[rsp+0x28]
  40df7b:	mov    r9d,r14d
  40df7e:	mov    eax,0x0
  40df83:	push   rbx
  40df84:	push   rbx
  40df85:	mov    r11,rbx
  40df88:	push   r10
  40df8a:	mov    rbx,QWORD PTR [rsp+0x20]
  40df8f:	push   r11
  40df91:	push   r13
  40df93:	call   406180 <fprintf@plt>
  40df98:	jmp    40e110 <__flatcc_fb_gen_c_builder@@Base+0x1730>
  40df9d:	mov    rdi,QWORD PTR [r15+0xd0]
  40dfa4:	mov    rcx,QWORD PTR [r12+0x88]
  40dfac:	sub    rsp,0x8
  40dfb0:	lea    rsi,[rip+0x33500]        # 4414b7 <_IO_stdin_used@@Base+0x134b7>
  40dfb7:	mov    rdx,r15
  40dfba:	mov    r8,r15
  40dfbd:	lea    rax,[rsp+0x28]
  40dfc2:	mov    r9,rax
  40dfc5:	xor    eax,eax
  40dfc7:	mov    r10,rbx
  40dfca:	lea    rbx,[rsp+0x128]
  40dfd2:	push   rbx
  40dfd3:	mov    rbx,r10
  40dfd6:	push   r13
  40dfd8:	push   r14
  40dfda:	call   406180 <fprintf@plt>
  40dfdf:	add    rsp,0x20
  40dfe3:	mov    r8,QWORD PTR [r12+0x18]
  40dfe8:	mov    rdi,r15
  40dfeb:	lea    rsi,[rsp+0x20]
  40dff0:	mov    edx,r14d
  40dff3:	mov    rcx,r13
  40dff6:	mov    r9d,0x1
  40dffc:	call   40f460 <__flatcc_fb_gen_c_builder@@Base+0x2a80>
  40e001:	mov    r12,QWORD PTR [r12]
  40e005:	test   r12,r12
  40e008:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40e00e:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40e013:	mov    rdi,QWORD PTR [r15+0xd0]
  40e01a:	mov    rcx,QWORD PTR [r12+0x88]
  40e022:	sub    rsp,0x8
  40e026:	lea    rsi,[rip+0x33397]        # 4413c4 <_IO_stdin_used@@Base+0x133c4>
  40e02d:	mov    rdx,r15
  40e030:	mov    r8,r15
  40e033:	lea    rax,[rsp+0x28]
  40e038:	mov    r9,rax
  40e03b:	xor    eax,eax
  40e03d:	mov    r10,rbx
  40e040:	lea    rbx,[rsp+0x128]
  40e048:	push   rbx
  40e049:	mov    rbx,r10
  40e04c:	push   r13
  40e04e:	push   r14
  40e050:	call   406180 <fprintf@plt>
  40e055:	add    rsp,0x20
  40e059:	mov    r8,QWORD PTR [r12+0x18]
  40e05e:	mov    rdi,r15
  40e061:	lea    rsi,[rsp+0x20]
  40e066:	mov    edx,r14d
  40e069:	mov    rcx,r13
  40e06c:	xor    r9d,r9d
  40e06f:	call   40f460 <__flatcc_fb_gen_c_builder@@Base+0x2a80>
  40e074:	mov    r12,QWORD PTR [r12]
  40e078:	test   r12,r12
  40e07b:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40e081:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40e086:	test   BYTE PTR [rax+0x12],0x8
  40e08a:	je     40e0a5 <__flatcc_fb_gen_c_builder@@Base+0x16c5>
  40e08c:	mov    rcx,QWORD PTR [rbx]
  40e08f:	mov    esi,0x20
  40e094:	mov    edx,0x1
  40e099:	lea    rdi,[rip+0x33352]        # 4413f2 <_IO_stdin_used@@Base+0x133f2>
  40e0a0:	call   406230 <fwrite@plt>
  40e0a5:	mov    rdi,QWORD PTR [r15+0xd0]
  40e0ac:	mov    rcx,QWORD PTR [r12+0x88]
  40e0b4:	lea    rsi,[rip+0x33358]        # 441413 <_IO_stdin_used@@Base+0x13413>
  40e0bb:	jmp    40e13c <__flatcc_fb_gen_c_builder@@Base+0x175c>
  40e0bd:	mov    rdi,QWORD PTR [r15+0xd0]
  40e0c4:	mov    rcx,QWORD PTR [r12+0x88]
  40e0cc:	movzx  ebx,WORD PTR [r12+0x72]
  40e0d2:	sub    rsp,0x8
  40e0d6:	lea    rsi,[rip+0x33238]        # 441315 <_IO_stdin_used@@Base+0x13315>
  40e0dd:	mov    rdx,r15
  40e0e0:	mov    r8,r15
  40e0e3:	lea    r9,[rsp+0x28]
  40e0e8:	mov    eax,0x0
  40e0ed:	push   rbx
  40e0ee:	mov    r10,QWORD PTR [rsp+0x10]
  40e0f3:	push   QWORD PTR [r12+0x80]
  40e0fb:	lea    rbx,[rsp+0x138]
  40e103:	push   rbx
  40e104:	mov    rbx,r10
  40e107:	push   r13
  40e109:	push   r14
  40e10b:	call   406180 <fprintf@plt>
  40e110:	add    rsp,0x30
  40e114:	mov    r12,QWORD PTR [r12]
  40e118:	test   r12,r12
  40e11b:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40e121:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40e126:	mov    rdi,QWORD PTR [r15+0xd0]
  40e12d:	mov    rcx,QWORD PTR [r12+0x88]
  40e135:	lea    rsi,[rip+0x33341]        # 44147d <_IO_stdin_used@@Base+0x1347d>
  40e13c:	mov    rdx,r15
  40e13f:	mov    r8,r15
  40e142:	lea    r9,[rsp+0x20]
  40e147:	mov    eax,0x0
  40e14c:	mov    r10,rbx
  40e14f:	lea    rbx,[rsp+0x120]
  40e157:	push   rbx
  40e158:	push   rbx
  40e159:	mov    rbx,r10
  40e15c:	push   r13
  40e15e:	push   r14
  40e160:	call   406180 <fprintf@plt>
  40e165:	add    rsp,0x20
  40e169:	mov    r12,QWORD PTR [r12]
  40e16d:	test   r12,r12
  40e170:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40e176:	jmp    40e210 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40e17b:	mov    edi,DWORD PTR [rax+0x48]
  40e17e:	lea    rsi,[r12+0x48]
  40e183:	lea    rax,[rsp+0x220]
  40e18b:	mov    rdx,rax
  40e18e:	call   40f2f0 <__flatcc_fb_gen_c_builder@@Base+0x2910>
  40e193:	mov    rdi,QWORD PTR [r15+0xd0]
  40e19a:	mov    rcx,QWORD PTR [r12+0x88]
  40e1a2:	movzx  r10d,WORD PTR [r12+0x72]
  40e1a8:	sub    rsp,0x8
  40e1ac:	lea    rsi,[rip+0x331c9]        # 44137c <_IO_stdin_used@@Base+0x1337c>
  40e1b3:	mov    rdx,r15
  40e1b6:	mov    r8,r15
  40e1b9:	lea    r9,[rsp+0x28]
  40e1be:	mov    eax,0x0
  40e1c3:	lea    rbx,[rsp+0x228]
  40e1cb:	push   rbx
  40e1cc:	push   r10
  40e1ce:	mov    r10,QWORD PTR [rsp+0x18]
  40e1d3:	push   QWORD PTR [r12+0x80]
  40e1db:	lea    rbx,[rsp+0x140]
  40e1e3:	push   rbx
  40e1e4:	push   rbx
  40e1e5:	mov    rbx,r10
  40e1e8:	push   r13
  40e1ea:	push   r14
  40e1ec:	call   406180 <fprintf@plt>
  40e1f1:	add    rsp,0x40
  40e1f5:	mov    r12,QWORD PTR [r12]
  40e1f9:	test   r12,r12
  40e1fc:	jne    40dbe9 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40e202:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e20c:	nop    DWORD PTR [rax+0x0]
  40e210:	mov    rsi,QWORD PTR [r15+0xd0]
  40e217:	mov    edi,0xa
  40e21c:	call   406120 <fputc@plt>
  40e221:	mov    r12,QWORD PTR [rsp+0x118]
  40e229:	movzx  r14d,WORD PTR [r12+0xa4]
  40e232:	vxorps xmm0,xmm0,xmm0
  40e236:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e23f:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e248:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e251:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e25a:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e260:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e266:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e26c:	mov    QWORD PTR [rsp+0x100],0x0
  40e278:	mov    rdi,QWORD PTR [r12+0x18]
  40e27d:	mov    rsi,r12
  40e280:	lea    rbx,[rsp+0x20]
  40e285:	mov    rdx,rbx
  40e288:	vzeroupper 
  40e28b:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40e290:	mov    rdi,QWORD PTR [r15+0xd0]
  40e297:	lea    rsi,[rip+0x333cd]        # 44166b <_IO_stdin_used@@Base+0x1366b>
  40e29e:	mov    rdx,rbx
  40e2a1:	mov    rcx,rbx
  40e2a4:	mov    r8,r15
  40e2a7:	mov    r9,rbx
  40e2aa:	xor    eax,eax
  40e2ac:	call   406180 <fprintf@plt>
  40e2b1:	mov    rdi,QWORD PTR [r15+0xd0]
  40e2b8:	lea    rsi,[rip+0x333ef]        # 4416ae <_IO_stdin_used@@Base+0x136ae>
  40e2bf:	mov    rdx,rbx
  40e2c2:	xor    eax,eax
  40e2c4:	call   406180 <fprintf@plt>
  40e2c9:	mov    rbx,QWORD PTR [r12+0x30]
  40e2ce:	test   rbx,rbx
  40e2d1:	je     40da30 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40e2d7:	mov    r12d,r14d
  40e2da:	and    r12d,0x8
  40e2de:	shr    r12d,0x3
  40e2e2:	xor    eax,eax
  40e2e4:	test   BYTE PTR [rbx+0x70],0x4
  40e2e8:	jne    40e317 <__flatcc_fb_gen_c_builder@@Base+0x1937>
  40e2ea:	jmp    40e329 <__flatcc_fb_gen_c_builder@@Base+0x1949>
  40e2ec:	nop    DWORD PTR [rax+0x0]
  40e2f0:	lea    rsi,[rip+0x333f5]        # 4416ec <_IO_stdin_used@@Base+0x136ec>
  40e2f7:	mov    r13d,eax
  40e2fa:	mov    rax,QWORD PTR [rsp]
  40e2fe:	mov    rdi,QWORD PTR [rax]
  40e301:	mov    r9,QWORD PTR [rbx+0x88]
  40e308:	lea    rdx,[rsp+0x20]
  40e30d:	xor    eax,eax
  40e30f:	call   406180 <fprintf@plt>
  40e314:	mov    eax,r13d
  40e317:	mov    rbx,QWORD PTR [rbx+0x98]
  40e31e:	test   rbx,rbx
  40e321:	je     40e370 <__flatcc_fb_gen_c_builder@@Base+0x1990>
  40e323:	test   BYTE PTR [rbx+0x70],0x4
  40e327:	jne    40e317 <__flatcc_fb_gen_c_builder@@Base+0x1937>
  40e329:	mov    rdx,QWORD PTR [rbx+0x8]
  40e32d:	mov    ecx,DWORD PTR [rdx+0x8]
  40e330:	mov    r8,QWORD PTR [rdx]
  40e333:	cmp    WORD PTR [rbx+0x28],0xe
  40e338:	jne    40e2f0 <__flatcc_fb_gen_c_builder@@Base+0x1910>
  40e33a:	mov    rdx,QWORD PTR [rbx+0x18]
  40e33e:	cmp    WORD PTR [rdx+0x10],0x4
  40e343:	setne  dl
  40e346:	mov    r13d,0x1
  40e34c:	cmove  eax,r13d
  40e350:	or     dl,r12b
  40e353:	lea    rsi,[rip+0x3336a]        # 4416c4 <_IO_stdin_used@@Base+0x136c4>
  40e35a:	cmp    dl,0x1
  40e35d:	je     40e2f0 <__flatcc_fb_gen_c_builder@@Base+0x1910>
  40e35f:	jmp    40e2fa <__flatcc_fb_gen_c_builder@@Base+0x191a>
  40e361:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e370:	test   r14b,0x8
  40e374:	mov    r12,QWORD PTR [rsp+0x118]
  40e37c:	jne    40da30 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40e382:	test   eax,eax
  40e384:	je     40da30 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40e38a:	mov    rbx,QWORD PTR [r12+0x30]
  40e38f:	test   rbx,rbx
  40e392:	jne    40e3b0 <__flatcc_fb_gen_c_builder@@Base+0x19d0>
  40e394:	jmp    40da30 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40e399:	nop    DWORD PTR [rax+0x0]
  40e3a0:	mov    rbx,QWORD PTR [rbx+0x98]
  40e3a7:	test   rbx,rbx
  40e3aa:	je     40da30 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40e3b0:	test   BYTE PTR [rbx+0x70],0x4
  40e3b4:	jne    40e3a0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40e3b6:	cmp    WORD PTR [rbx+0x28],0xe
  40e3bb:	jne    40e3a0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40e3bd:	mov    rax,QWORD PTR [rbx+0x18]
  40e3c1:	cmp    WORD PTR [rax+0x10],0x4
  40e3c6:	jne    40e3a0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40e3c8:	mov    rax,QWORD PTR [rbx+0x8]
  40e3cc:	mov    r9,QWORD PTR [rbx+0x88]
  40e3d3:	mov    ecx,DWORD PTR [rax+0x8]
  40e3d6:	mov    r8,QWORD PTR [rax]
  40e3d9:	mov    rax,QWORD PTR [rsp]
  40e3dd:	mov    rdi,QWORD PTR [rax]
  40e3e0:	lea    rsi,[rip+0x33327]        # 44170e <_IO_stdin_used@@Base+0x1370e>
  40e3e7:	lea    rdx,[rsp+0x20]
  40e3ec:	xor    eax,eax
  40e3ee:	call   406180 <fprintf@plt>
  40e3f3:	jmp    40e3a0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40e3f5:	mov    rdi,r15
  40e3f8:	vzeroupper 
  40e3fb:	call   40f060 <__flatcc_fb_gen_c_builder@@Base+0x2680>
  40e400:	mov    rbx,QWORD PTR [rsp]
  40e404:	mov    rax,QWORD PTR [r15+0xe0]
  40e40b:	cmp    DWORD PTR [rax+0xac],0x0
  40e412:	je     40e42d <__flatcc_fb_gen_c_builder@@Base+0x1a4d>
  40e414:	mov    rcx,QWORD PTR [rbx]
  40e417:	lea    rdi,[rip+0x276c1]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  40e41e:	mov    esi,0x24
  40e423:	mov    edx,0x1
  40e428:	call   406230 <fwrite@plt>
  40e42d:	mov    rdi,QWORD PTR [r15+0xd0]
  40e434:	mov    rax,QWORD PTR [r15+0xd8]
  40e43b:	mov    rdx,QWORD PTR [rax+0x118]
  40e442:	lea    rsi,[rip+0x33369]        # 4417b2 <_IO_stdin_used@@Base+0x137b2>
  40e449:	xor    eax,eax
  40e44b:	call   406180 <fprintf@plt>
  40e450:	xor    eax,eax
  40e452:	lea    rsp,[rbp-0x28]
  40e456:	pop    rbx
  40e457:	pop    r12
  40e459:	pop    r13
  40e45b:	pop    r14
  40e45d:	pop    r15
  40e45f:	pop    rbp
  40e460:	ret    
  40e461:	mov    rax,QWORD PTR [rip+0x43b90]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e468:	mov    rdi,QWORD PTR [rax]
  40e46b:	lea    rsi,[rip+0x217b6]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e472:	lea    rbx,[rip+0x3238b]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e479:	lea    r8,[rip+0x325f2]        # 440a72 <_IO_stdin_used@@Base+0x12a72>
  40e480:	mov    rdx,rbx
  40e483:	mov    ecx,0x4b9
  40e488:	xor    eax,eax
  40e48a:	vzeroupper 
  40e48d:	call   406180 <fprintf@plt>
  40e492:	lea    rdi,[rip+0x326f6]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e499:	lea    rcx,[rip+0x32976]        # 440e16 <_IO_stdin_used@@Base+0x12e16>
  40e4a0:	mov    rsi,rbx
  40e4a3:	mov    edx,0x4b9
  40e4a8:	call   406100 <__assert_fail@plt>
  40e4ad:	mov    rax,QWORD PTR [rip+0x43b44]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e4b4:	mov    rdi,QWORD PTR [rax]
  40e4b7:	lea    rsi,[rip+0x2176a]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e4be:	lea    rbx,[rip+0x3233f]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e4c5:	lea    r8,[rip+0x28ed7]        # 4373a3 <_IO_stdin_used@@Base+0x93a3>
  40e4cc:	mov    rdx,rbx
  40e4cf:	mov    ecx,0x5e8
  40e4d4:	xor    eax,eax
  40e4d6:	call   406180 <fprintf@plt>
  40e4db:	lea    rdi,[rip+0x326ad]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e4e2:	lea    rcx,[rip+0x32d8d]        # 441276 <_IO_stdin_used@@Base+0x13276>
  40e4e9:	mov    rsi,rbx
  40e4ec:	mov    edx,0x5e8
  40e4f1:	call   406100 <__assert_fail@plt>
  40e4f6:	lea    rdi,[rip+0x28065]        # 436562 <_IO_stdin_used@@Base+0x8562>
  40e4fd:	lea    rsi,[rip+0x32300]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e504:	lea    rcx,[rip+0x32364]        # 44086f <_IO_stdin_used@@Base+0x1286f>
  40e50b:	mov    edx,0x3f2
  40e510:	vzeroupper 
  40e513:	call   406100 <__assert_fail@plt>
  40e518:	mov    rax,QWORD PTR [rip+0x43ad9]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e51f:	mov    rdi,QWORD PTR [rax]
  40e522:	lea    rsi,[rip+0x216ff]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e529:	lea    rbx,[rip+0x322d4]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e530:	lea    r8,[rip+0x328b3]        # 440dea <_IO_stdin_used@@Base+0x12dea>
  40e537:	mov    rdx,rbx
  40e53a:	mov    ecx,0x495
  40e53f:	xor    eax,eax
  40e541:	call   406180 <fprintf@plt>
  40e546:	lea    rdi,[rip+0x32642]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e54d:	lea    rcx,[rip+0x328c2]        # 440e16 <_IO_stdin_used@@Base+0x12e16>
  40e554:	mov    rsi,rbx
  40e557:	mov    edx,0x495
  40e55c:	call   406100 <__assert_fail@plt>
  40e561:	mov    rax,QWORD PTR [rip+0x43a90]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e568:	mov    rdi,QWORD PTR [rax]
  40e56b:	lea    rsi,[rip+0x216b6]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e572:	lea    rbx,[rip+0x27e61]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40e579:	lea    r8,[rip+0x27ebd]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40e580:	mov    rdx,rbx
  40e583:	mov    ecx,0x8d
  40e588:	xor    eax,eax
  40e58a:	vzeroupper 
  40e58d:	call   406180 <fprintf@plt>
  40e592:	lea    rdi,[rip+0x325f6]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e599:	lea    rcx,[rip+0x27ed4]        # 436474 <_IO_stdin_used@@Base+0x8474>
  40e5a0:	mov    rsi,rbx
  40e5a3:	mov    edx,0x8d
  40e5a8:	call   406100 <__assert_fail@plt>
  40e5ad:	mov    rax,QWORD PTR [rip+0x43a44]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e5b4:	mov    rdi,QWORD PTR [rax]
  40e5b7:	lea    rsi,[rip+0x2166a]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e5be:	lea    rbx,[rip+0x3223f]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e5c5:	lea    r8,[rip+0x28d15]        # 4372e1 <_IO_stdin_used@@Base+0x92e1>
  40e5cc:	mov    rdx,rbx
  40e5cf:	mov    ecx,0x5e3
  40e5d4:	xor    eax,eax
  40e5d6:	call   406180 <fprintf@plt>
  40e5db:	lea    rdi,[rip+0x325ad]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e5e2:	lea    rcx,[rip+0x32c8d]        # 441276 <_IO_stdin_used@@Base+0x13276>
  40e5e9:	mov    rsi,rbx
  40e5ec:	mov    edx,0x5e3
  40e5f1:	call   406100 <__assert_fail@plt>
  40e5f6:	mov    rax,QWORD PTR [rip+0x439fb]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e5fd:	mov    rdi,QWORD PTR [rax]
  40e600:	lea    rsi,[rip+0x21621]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e607:	lea    rbx,[rip+0x321f6]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e60e:	lea    r8,[rip+0x28c83]        # 437298 <_IO_stdin_used@@Base+0x9298>
  40e615:	mov    rdx,rbx
  40e618:	mov    ecx,0x5c0
  40e61d:	xor    eax,eax
  40e61f:	call   406180 <fprintf@plt>
  40e624:	lea    rdi,[rip+0x32564]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e62b:	lea    rcx,[rip+0x32c44]        # 441276 <_IO_stdin_used@@Base+0x13276>
  40e632:	mov    rsi,rbx
  40e635:	mov    edx,0x5c0
  40e63a:	call   406100 <__assert_fail@plt>
  40e63f:	mov    rax,QWORD PTR [rip+0x439b2]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e646:	mov    rdi,QWORD PTR [rax]
  40e649:	lea    rsi,[rip+0x215d8]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e650:	lea    rbx,[rip+0x27d83]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40e657:	lea    r8,[rip+0x27ddf]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40e65e:	mov    rdx,rbx
  40e661:	mov    ecx,0x60
  40e666:	xor    eax,eax
  40e668:	vzeroupper 
  40e66b:	call   406180 <fprintf@plt>
  40e670:	lea    rdi,[rip+0x32518]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e677:	lea    rcx,[rip+0x286ef]        # 436d6d <_IO_stdin_used@@Base+0x8d6d>
  40e67e:	mov    rsi,rbx
  40e681:	mov    edx,0x60
  40e686:	call   406100 <__assert_fail@plt>
  40e68b:	mov    rax,QWORD PTR [rip+0x43966]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e692:	mov    rdi,QWORD PTR [rax]
  40e695:	lea    rsi,[rip+0x2158c]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e69c:	lea    rbx,[rip+0x32161]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e6a3:	lea    r8,[rip+0x327cf]        # 440e79 <_IO_stdin_used@@Base+0x12e79>
  40e6aa:	mov    rdx,rbx
  40e6ad:	mov    ecx,0x4a5
  40e6b2:	xor    eax,eax
  40e6b4:	call   406180 <fprintf@plt>
  40e6b9:	lea    rdi,[rip+0x324cf]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e6c0:	lea    rcx,[rip+0x3274f]        # 440e16 <_IO_stdin_used@@Base+0x12e16>
  40e6c7:	mov    rsi,rbx
  40e6ca:	mov    edx,0x4a5
  40e6cf:	call   406100 <__assert_fail@plt>
  40e6d4:	mov    rax,QWORD PTR [rip+0x4391d]        # 451ff8 <stderr@GLIBC_2.2.5>
  40e6db:	mov    rdi,QWORD PTR [rax]
  40e6de:	lea    rsi,[rip+0x21543]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40e6e5:	lea    rbx,[rip+0x32118]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40e6ec:	lea    r8,[rip+0x32b5c]        # 44124f <_IO_stdin_used@@Base+0x1324f>
  40e6f3:	mov    rdx,rbx
  40e6f6:	mov    ecx,0x596
  40e6fb:	xor    eax,eax
  40e6fd:	call   406180 <fprintf@plt>
  40e702:	lea    rdi,[rip+0x32486]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40e709:	lea    rcx,[rip+0x32b66]        # 441276 <_IO_stdin_used@@Base+0x13276>
  40e710:	mov    rsi,rbx
  40e713:	mov    edx,0x596
  40e718:	call   406100 <__assert_fail@plt>
  40e71d:	nop    DWORD PTR [rax]
  40e720:	push   rbp
  40e721:	push   rbx
  40e722:	push   rax
  40e723:	mov    rbx,QWORD PTR [rdi+0x28]
  40e727:	xor    ebp,ebp
  40e729:	test   rbx,rbx
  40e72c:	jne    40e73a <__flatcc_fb_gen_c_builder@@Base+0x1d5a>
  40e72e:	jmp    40e761 <__flatcc_fb_gen_c_builder@@Base+0x1d81>
  40e730:	inc    ebp
  40e732:	mov    rbx,QWORD PTR [rbx]
  40e735:	test   rbx,rbx
  40e738:	je     40e761 <__flatcc_fb_gen_c_builder@@Base+0x1d81>
  40e73a:	test   BYTE PTR [rbx+0x70],0x4
  40e73e:	jne    40e732 <__flatcc_fb_gen_c_builder@@Base+0x1d52>
  40e740:	cmp    WORD PTR [rbx+0x28],0xe
  40e745:	jne    40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40e747:	mov    rdi,QWORD PTR [rbx+0x18]
  40e74b:	cmp    WORD PTR [rdi+0x10],0x1
  40e750:	jne    40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40e752:	call   40e720 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40e757:	add    ebp,eax
  40e759:	mov    rbx,QWORD PTR [rbx]
  40e75c:	test   rbx,rbx
  40e75f:	jne    40e73a <__flatcc_fb_gen_c_builder@@Base+0x1d5a>
  40e761:	mov    eax,ebp
  40e763:	add    rsp,0x8
  40e767:	pop    rbx
  40e768:	pop    rbp
  40e769:	ret    
  40e76a:	nop    WORD PTR [rax+rax*1+0x0]
  40e770:	push   rbp
  40e771:	mov    rbp,rsp
  40e774:	push   r15
  40e776:	push   r14
  40e778:	push   r13
  40e77a:	push   r12
  40e77c:	push   rbx
  40e77d:	and    rsp,0xffffffffffffffe0
  40e781:	sub    rsp,0x120
  40e788:	vxorps xmm0,xmm0,xmm0
  40e78c:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e795:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e79e:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e7a7:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e7b0:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e7b6:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e7bc:	mov    DWORD PTR [rsp+0xc],ecx
  40e7c0:	mov    r15d,edx
  40e7c3:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e7c9:	mov    QWORD PTR [rsp+0x100],0x0
  40e7d5:	mov    r14,QWORD PTR [rsi+0x28]
  40e7d9:	test   r14,r14
  40e7dc:	je     40e9e7 <__flatcc_fb_gen_c_builder@@Base+0x2007>
  40e7e2:	mov    r12d,r8d
  40e7e5:	mov    r13,rdi
  40e7e8:	test   r8d,r8d
  40e7eb:	lea    rax,[rip+0x21550]        # 42fd42 <_IO_stdin_used@@Base+0x1d42>
  40e7f2:	lea    rcx,[rip+0x22c63]        # 43145c <_IO_stdin_used@@Base+0x345c>
  40e7f9:	cmove  rcx,rax
  40e7fd:	mov    QWORD PTR [rsp+0x10],rcx
  40e802:	mov    DWORD PTR [rsp+0x1c],r8d
  40e807:	test   BYTE PTR [r14+0x70],0x4
  40e80c:	jne    40e870 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40e80e:	jmp    40e883 <__flatcc_fb_gen_c_builder@@Base+0x1ea3>
  40e810:	mov    esi,0x2
  40e815:	mov    edx,0x1
  40e81a:	lea    rdi,[rip+0x37c5b]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40e821:	vzeroupper 
  40e824:	call   406230 <fwrite@plt>
  40e829:	mov    rsi,QWORD PTR [r14+0x18]
  40e82d:	mov    rdi,QWORD PTR [rsi+0x18]
  40e831:	lea    rbx,[rsp+0x20]
  40e836:	mov    rdx,rbx
  40e839:	vzeroupper 
  40e83c:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40e841:	mov    rdi,QWORD PTR [r13+0xd0]
  40e848:	lea    r12d,[r15+0x1]
  40e84c:	lea    rsi,[rip+0x32208]        # 440a5b <_IO_stdin_used@@Base+0x12a5b>
  40e853:	mov    rdx,rbx
  40e856:	mov    ecx,r15d
  40e859:	xor    eax,eax
  40e85b:	call   406180 <fprintf@plt>
  40e860:	mov    r15d,r12d
  40e863:	mov    r12d,DWORD PTR [rsp+0x1c]
  40e868:	nop    DWORD PTR [rax+rax*1+0x0]
  40e870:	mov    r14,QWORD PTR [r14]
  40e873:	test   r14,r14
  40e876:	je     40e9e7 <__flatcc_fb_gen_c_builder@@Base+0x2007>
  40e87c:	test   BYTE PTR [r14+0x70],0x4
  40e881:	jne    40e870 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40e883:	movzx  eax,WORD PTR [r14+0x28]
  40e888:	cmp    ax,0x8
  40e88c:	je     40e8c0 <__flatcc_fb_gen_c_builder@@Base+0x1ee0>
  40e88e:	cmp    ax,0xe
  40e892:	jne    40e9fc <__flatcc_fb_gen_c_builder@@Base+0x201c>
  40e898:	mov    rsi,QWORD PTR [r14+0x18]
  40e89c:	cmp    WORD PTR [rsi+0x10],0x1
  40e8a1:	jne    40e904 <__flatcc_fb_gen_c_builder@@Base+0x1f24>
  40e8a3:	mov    rdi,r13
  40e8a6:	mov    edx,r15d
  40e8a9:	mov    ecx,DWORD PTR [rsp+0xc]
  40e8ad:	mov    r8d,r12d
  40e8b0:	vzeroupper 
  40e8b3:	call   40e770 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40e8b8:	mov    r15d,eax
  40e8bb:	jmp    40e870 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40e8bd:	nop    DWORD PTR [rax]
  40e8c0:	cmp    DWORD PTR [rsp+0xc],0x0
  40e8c5:	je     40e965 <__flatcc_fb_gen_c_builder@@Base+0x1f85>
  40e8cb:	test   r15d,r15d
  40e8ce:	je     40e93e <__flatcc_fb_gen_c_builder@@Base+0x1f5e>
  40e8d0:	mov    rcx,QWORD PTR [r13+0xd0]
  40e8d7:	test   r15b,0x3
  40e8db:	jne    40e94c <__flatcc_fb_gen_c_builder@@Base+0x1f6c>
  40e8dd:	mov    eax,DWORD PTR [rsp+0xc]
  40e8e1:	sub    eax,r15d
  40e8e4:	cmp    eax,0x2
  40e8e7:	jle    40e94c <__flatcc_fb_gen_c_builder@@Base+0x1f6c>
  40e8e9:	mov    rdi,rcx
  40e8ec:	lea    rsi,[rip+0x321fd]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40e8f3:	mov    rdx,QWORD PTR [rsp+0x10]
  40e8f8:	xor    eax,eax
  40e8fa:	vzeroupper 
  40e8fd:	call   406180 <fprintf@plt>
  40e902:	jmp    40e965 <__flatcc_fb_gen_c_builder@@Base+0x1f85>
  40e904:	cmp    DWORD PTR [rsp+0xc],0x0
  40e909:	je     40e829 <__flatcc_fb_gen_c_builder@@Base+0x1e49>
  40e90f:	test   r15d,r15d
  40e912:	je     40e9b7 <__flatcc_fb_gen_c_builder@@Base+0x1fd7>
  40e918:	mov    rcx,QWORD PTR [r13+0xd0]
  40e91f:	test   r15b,0x3
  40e923:	jne    40e810 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
  40e929:	mov    eax,DWORD PTR [rsp+0xc]
  40e92d:	sub    eax,r15d
  40e930:	cmp    eax,0x2
  40e933:	jg     40e9c9 <__flatcc_fb_gen_c_builder@@Base+0x1fe9>
  40e939:	jmp    40e810 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
  40e93e:	mov    rcx,QWORD PTR [r13+0xd0]
  40e945:	cmp    DWORD PTR [rsp+0xc],0x5
  40e94a:	jge    40e8e9 <__flatcc_fb_gen_c_builder@@Base+0x1f09>
  40e94c:	mov    esi,0x2
  40e951:	mov    edx,0x1
  40e956:	lea    rdi,[rip+0x37b1f]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40e95d:	vzeroupper 
  40e960:	call   406230 <fwrite@plt>
  40e965:	mov    ecx,DWORD PTR [r14+0x18]
  40e969:	lea    eax,[rcx-0x1]
  40e96c:	cmp    eax,0xb
  40e96f:	jae    40ea48 <__flatcc_fb_gen_c_builder@@Base+0x2068>
  40e975:	cmp    ecx,0x5
  40e978:	lea    rdx,[rip+0x213c4]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40e97f:	cmove  rdx,r13
  40e983:	cdqe   
  40e985:	lea    rcx,[rip+0x43224]        # 451bb0 <fb_value_set_deleted@@Base+0x6950>
  40e98c:	mov    rcx,QWORD PTR [rcx+rax*8]
  40e990:	mov    rdi,QWORD PTR [r13+0xd0]
  40e997:	lea    ebx,[r15+0x1]
  40e99b:	lea    rsi,[rip+0x320c7]        # 440a69 <_IO_stdin_used@@Base+0x12a69>
  40e9a2:	mov    r8d,r15d
  40e9a5:	xor    eax,eax
  40e9a7:	vzeroupper 
  40e9aa:	call   406180 <fprintf@plt>
  40e9af:	mov    r15d,ebx
  40e9b2:	jmp    40e870 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40e9b7:	mov    rcx,QWORD PTR [r13+0xd0]
  40e9be:	cmp    DWORD PTR [rsp+0xc],0x5
  40e9c3:	jl     40e810 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
  40e9c9:	mov    rdi,rcx
  40e9cc:	lea    rsi,[rip+0x3211d]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40e9d3:	mov    rdx,QWORD PTR [rsp+0x10]
  40e9d8:	xor    eax,eax
  40e9da:	vzeroupper 
  40e9dd:	call   406180 <fprintf@plt>
  40e9e2:	jmp    40e829 <__flatcc_fb_gen_c_builder@@Base+0x1e49>
  40e9e7:	mov    eax,r15d
  40e9ea:	lea    rsp,[rbp-0x28]
  40e9ee:	pop    rbx
  40e9ef:	pop    r12
  40e9f1:	pop    r13
  40e9f3:	pop    r14
  40e9f5:	pop    r15
  40e9f7:	pop    rbp
  40e9f8:	vzeroupper 
  40e9fb:	ret    
  40e9fc:	mov    rax,QWORD PTR [rip+0x435f5]        # 451ff8 <stderr@GLIBC_2.2.5>
  40ea03:	mov    rdi,QWORD PTR [rax]
  40ea06:	lea    rsi,[rip+0x2121b]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40ea0d:	lea    rbx,[rip+0x31df0]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40ea14:	lea    r8,[rip+0x32057]        # 440a72 <_IO_stdin_used@@Base+0x12a72>
  40ea1b:	mov    rdx,rbx
  40ea1e:	mov    ecx,0x352
  40ea23:	xor    eax,eax
  40ea25:	vzeroupper 
  40ea28:	call   406180 <fprintf@plt>
  40ea2d:	lea    rdi,[rip+0x3215b]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40ea34:	lea    rcx,[rip+0x32065]        # 440aa0 <_IO_stdin_used@@Base+0x12aa0>
  40ea3b:	mov    rsi,rbx
  40ea3e:	mov    edx,0x352
  40ea43:	call   406100 <__assert_fail@plt>
  40ea48:	mov    rax,QWORD PTR [rip+0x435a9]        # 451ff8 <stderr@GLIBC_2.2.5>
  40ea4f:	mov    rdi,QWORD PTR [rax]
  40ea52:	lea    rsi,[rip+0x211cf]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40ea59:	lea    rbx,[rip+0x2797a]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40ea60:	lea    r8,[rip+0x279d6]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40ea67:	mov    rdx,rbx
  40ea6a:	mov    ecx,0x8d
  40ea6f:	xor    eax,eax
  40ea71:	vzeroupper 
  40ea74:	call   406180 <fprintf@plt>
  40ea79:	lea    rdi,[rip+0x3210f]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40ea80:	lea    rcx,[rip+0x279ed]        # 436474 <_IO_stdin_used@@Base+0x8474>
  40ea87:	mov    rsi,rbx
  40ea8a:	mov    edx,0x8d
  40ea8f:	call   406100 <__assert_fail@plt>
  40ea94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea9e:	xchg   ax,ax
  40eaa0:	push   rbp
  40eaa1:	mov    rbp,rsp
  40eaa4:	push   r15
  40eaa6:	push   r14
  40eaa8:	push   r13
  40eaaa:	push   r12
  40eaac:	push   rbx
  40eaad:	and    rsp,0xffffffffffffffe0
  40eab1:	sub    rsp,0x140
  40eab8:	mov    DWORD PTR [rsp+0x18],r8d
  40eabd:	mov    DWORD PTR [rsp+0x1c],edx
  40eac1:	mov    rbx,rdi
  40eac4:	vxorps xmm0,xmm0,xmm0
  40eac8:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40ead1:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40eada:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40eae3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40eaec:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40eaf5:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40eafb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40eb01:	mov    QWORD PTR [rsp+0x120],0x0
  40eb0d:	cmp    ecx,0x1
  40eb10:	lea    rax,[rip+0x31fe6]        # 440afd <_IO_stdin_used@@Base+0x12afd>
  40eb17:	lea    rdx,[rip+0x21225]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  40eb1e:	cmove  rdx,rax
  40eb22:	mov    DWORD PTR [rsp+0x28],ecx
  40eb26:	cmp    ecx,0x2
  40eb29:	lea    rax,[rip+0x31fc6]        # 440af6 <_IO_stdin_used@@Base+0x12af6>
  40eb30:	cmovne rax,rdx
  40eb34:	mov    QWORD PTR [rsp+0x30],rax
  40eb39:	mov    r12,QWORD PTR [rsi+0x28]
  40eb3d:	test   r12,r12
  40eb40:	je     40ef88 <__flatcc_fb_gen_c_builder@@Base+0x25a8>
  40eb46:	xor    r13d,r13d
  40eb49:	xor    eax,eax
  40eb4b:	mov    QWORD PTR [rsp+0x20],rax
  40eb50:	jmp    40eb99 <__flatcc_fb_gen_c_builder@@Base+0x21b9>
  40eb52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb5c:	nop    DWORD PTR [rax+0x0]
  40eb60:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb67:	mov    rdx,QWORD PTR [rsp+0x20]
  40eb6c:	lea    r14d,[rdx+0x1]
  40eb70:	lea    rsi,[rip+0x32004]        # 440b7b <_IO_stdin_used@@Base+0x12b7b>
  40eb77:	xor    eax,eax
  40eb79:	vzeroupper 
  40eb7c:	call   406180 <fprintf@plt>
  40eb81:	inc    r13d
  40eb84:	mov    eax,r14d
  40eb87:	mov    QWORD PTR [rsp+0x20],rax
  40eb8c:	mov    r12,QWORD PTR [r12]
  40eb90:	test   r12,r12
  40eb93:	je     40ef88 <__flatcc_fb_gen_c_builder@@Base+0x25a8>
  40eb99:	mov    rax,QWORD PTR [r12+0x8]
  40eb9e:	mov    r15d,DWORD PTR [rax+0x8]
  40eba2:	mov    r14,QWORD PTR [rax]
  40eba5:	test   r13d,r13d
  40eba8:	jle    40ebe9 <__flatcc_fb_gen_c_builder@@Base+0x2209>
  40ebaa:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ebb1:	test   r13b,0x3
  40ebb5:	je     40ebd0 <__flatcc_fb_gen_c_builder@@Base+0x21f0>
  40ebb7:	mov    esi,0x2
  40ebbc:	mov    edx,0x1
  40ebc1:	lea    rdi,[rip+0x31f43]        # 440b0b <_IO_stdin_used@@Base+0x12b0b>
  40ebc8:	jmp    40ebe1 <__flatcc_fb_gen_c_builder@@Base+0x2201>
  40ebca:	nop    WORD PTR [rax+rax*1+0x0]
  40ebd0:	mov    esi,0x4
  40ebd5:	mov    edx,0x1
  40ebda:	lea    rdi,[rip+0x31f25]        # 440b06 <_IO_stdin_used@@Base+0x12b06>
  40ebe1:	vzeroupper 
  40ebe4:	call   406230 <fwrite@plt>
  40ebe9:	movzx  eax,WORD PTR [r12+0x28]
  40ebef:	cmp    ax,0x8
  40ebf3:	je     40ec80 <__flatcc_fb_gen_c_builder@@Base+0x22a0>
  40ebf9:	cmp    ax,0xe
  40ebfd:	jne    40efc1 <__flatcc_fb_gen_c_builder@@Base+0x25e1>
  40ec03:	mov    rsi,QWORD PTR [r12+0x18]
  40ec08:	mov    rdi,QWORD PTR [rsi+0x18]
  40ec0c:	lea    rdx,[rsp+0x40]
  40ec11:	vzeroupper 
  40ec14:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40ec19:	mov    rax,QWORD PTR [r12+0x18]
  40ec1e:	cmp    WORD PTR [rax+0x10],0x1
  40ec23:	movzx  eax,WORD PTR [r12+0x70]
  40ec29:	jne    40ed00 <__flatcc_fb_gen_c_builder@@Base+0x2320>
  40ec2f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec36:	test   al,0x4
  40ec38:	je     40ed4d <__flatcc_fb_gen_c_builder@@Base+0x236d>
  40ec3e:	lea    rsi,[rip+0x31ec9]        # 440b0e <_IO_stdin_used@@Base+0x12b0e>
  40ec45:	mov    r14,rbx
  40ec48:	mov    rbx,QWORD PTR [rsp+0x20]
  40ec4d:	mov    edx,ebx
  40ec4f:	mov    ecx,ebx
  40ec51:	xor    eax,eax
  40ec53:	call   406180 <fprintf@plt>
  40ec58:	inc    ebx
  40ec5a:	mov    QWORD PTR [rsp+0x20],rbx
  40ec5f:	mov    rbx,r14
  40ec62:	mov    rdi,QWORD PTR [r12+0x18]
  40ec67:	call   40e720 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40ec6c:	add    eax,r13d
  40ec6f:	mov    r13d,eax
  40ec72:	jmp    40eb8c <__flatcc_fb_gen_c_builder@@Base+0x21ac>
  40ec77:	nop    WORD PTR [rax+rax*1+0x0]
  40ec80:	mov    eax,DWORD PTR [r12+0x18]
  40ec85:	dec    eax
  40ec87:	cmp    eax,0xb
  40ec8a:	jae    40f00d <__flatcc_fb_gen_c_builder@@Base+0x262d>
  40ec90:	test   BYTE PTR [r12+0x70],0x4
  40ec96:	jne    40eb60 <__flatcc_fb_gen_c_builder@@Base+0x2180>
  40ec9c:	cdqe   
  40ec9e:	lea    rcx,[rip+0x42f63]        # 451c08 <fb_value_set_deleted@@Base+0x69a8>
  40eca5:	mov    rcx,QWORD PTR [rcx+rax*8]
  40eca9:	cmp    QWORD PTR [r12+0x80],0x1
  40ecb2:	mov    eax,DWORD PTR [rsp+0x28]
  40ecb6:	mov    edx,0x0
  40ecbb:	cmove  eax,edx
  40ecbe:	cmp    eax,0x2
  40ecc1:	je     40eda7 <__flatcc_fb_gen_c_builder@@Base+0x23c7>
  40ecc7:	cmp    eax,0x1
  40ecca:	jne    40ed73 <__flatcc_fb_gen_c_builder@@Base+0x2393>
  40ecd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ecd7:	cmp    DWORD PTR [rsp+0x18],0x0
  40ecdc:	je     40ef03 <__flatcc_fb_gen_c_builder@@Base+0x2523>
  40ece2:	mov    QWORD PTR [rsp+0x8],r14
  40ece7:	mov    DWORD PTR [rsp],r15d
  40eceb:	lea    rsi,[rip+0x31ec0]        # 440bb2 <_IO_stdin_used@@Base+0x12bb2>
  40ecf2:	jmp    40ef1b <__flatcc_fb_gen_c_builder@@Base+0x253b>
  40ecf7:	nop    WORD PTR [rax+rax*1+0x0]
  40ed00:	test   al,0x4
  40ed02:	jne    40eb60 <__flatcc_fb_gen_c_builder@@Base+0x2180>
  40ed08:	cmp    QWORD PTR [r12+0x80],0x1
  40ed11:	mov    eax,DWORD PTR [rsp+0x28]
  40ed15:	mov    ecx,0x0
  40ed1a:	cmove  eax,ecx
  40ed1d:	cmp    eax,0x2
  40ed20:	je     40eeda <__flatcc_fb_gen_c_builder@@Base+0x24fa>
  40ed26:	cmp    eax,0x1
  40ed29:	jne    40ed73 <__flatcc_fb_gen_c_builder@@Base+0x2393>
  40ed2b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed32:	cmp    DWORD PTR [rsp+0x18],0x0
  40ed37:	je     40ef51 <__flatcc_fb_gen_c_builder@@Base+0x2571>
  40ed3d:	mov    QWORD PTR [rsp],r14
  40ed41:	lea    rsi,[rip+0x31e6c]        # 440bb4 <_IO_stdin_used@@Base+0x12bb4>
  40ed48:	jmp    40eef3 <__flatcc_fb_gen_c_builder@@Base+0x2513>
  40ed4d:	cmp    DWORD PTR [rsp+0x18],0x0
  40ed52:	je     40edce <__flatcc_fb_gen_c_builder@@Base+0x23ee>
  40ed54:	mov    QWORD PTR [rsp+0x8],r14
  40ed59:	mov    DWORD PTR [rsp],r15d
  40ed5d:	lea    rsi,[rip+0x31de3]        # 440b47 <_IO_stdin_used@@Base+0x12b47>
  40ed64:	lea    rdx,[rsp+0x40]
  40ed69:	mov    rcx,QWORD PTR [rsp+0x30]
  40ed6e:	jmp    40ef1e <__flatcc_fb_gen_c_builder@@Base+0x253e>
  40ed73:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed7a:	cmp    DWORD PTR [rsp+0x18],0x0
  40ed7f:	je     40eebb <__flatcc_fb_gen_c_builder@@Base+0x24db>
  40ed85:	lea    rsi,[rip+0x31e05]        # 440b91 <_IO_stdin_used@@Base+0x12b91>
  40ed8c:	mov    edx,r15d
  40ed8f:	mov    rcx,r14
  40ed92:	mov    r8d,r15d
  40ed95:	mov    r9,r14
  40ed98:	xor    eax,eax
  40ed9a:	vzeroupper 
  40ed9d:	call   406180 <fprintf@plt>
  40eda2:	jmp    40ef80 <__flatcc_fb_gen_c_builder@@Base+0x25a0>
  40eda7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edae:	cmp    DWORD PTR [rsp+0x18],0x0
  40edb3:	je     40ef10 <__flatcc_fb_gen_c_builder@@Base+0x2530>
  40edb9:	mov    QWORD PTR [rsp+0x8],r14
  40edbe:	mov    DWORD PTR [rsp],r15d
  40edc2:	lea    rsi,[rip+0x31e33]        # 440bfc <_IO_stdin_used@@Base+0x12bfc>
  40edc9:	jmp    40ef1b <__flatcc_fb_gen_c_builder@@Base+0x253b>
  40edce:	lea    rsi,[rip+0x31d91]        # 440b66 <_IO_stdin_used@@Base+0x12b66>
  40edd5:	lea    rdx,[rsp+0x40]
  40edda:	mov    rcx,QWORD PTR [rsp+0x30]
  40eddf:	mov    r8d,r15d
  40ede2:	mov    r9,r14
  40ede5:	xor    eax,eax
  40ede7:	call   406180 <fprintf@plt>
  40edec:	mov    rdi,QWORD PTR [r12+0x18]
  40edf1:	call   40e720 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40edf6:	mov    DWORD PTR [rsp+0x2c],eax
  40edfa:	test   eax,eax
  40edfc:	jle    40ef3b <__flatcc_fb_gen_c_builder@@Base+0x255b>
  40ee02:	mov    QWORD PTR [rsp+0x38],r13
  40ee07:	mov    r14,rbx
  40ee0a:	xor    ebx,ebx
  40ee0c:	mov    r13d,DWORD PTR [rsp+0x1c]
  40ee11:	jmp    40ee5d <__flatcc_fb_gen_c_builder@@Base+0x247d>
  40ee13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee1d:	nop    DWORD PTR [rax]
  40ee20:	mov    esi,0x2
  40ee25:	mov    edx,0x1
  40ee2a:	lea    rdi,[rip+0x3764b]        # 44647c <_IO_stdin_used@@Base+0x1847c>
  40ee31:	call   406230 <fwrite@plt>
  40ee36:	mov    rdi,QWORD PTR [r14+0xd0]
  40ee3d:	lea    rsi,[rip+0x31d6a]        # 440bae <_IO_stdin_used@@Base+0x12bae>
  40ee44:	mov    edx,r15d
  40ee47:	xor    eax,eax
  40ee49:	call   406180 <fprintf@plt>
  40ee4e:	inc    ebx
  40ee50:	dec    r13d
  40ee53:	cmp    DWORD PTR [rsp+0x2c],ebx
  40ee57:	je     40ef30 <__flatcc_fb_gen_c_builder@@Base+0x2550>
  40ee5d:	mov    rax,QWORD PTR [rsp+0x38]
  40ee62:	lea    r15d,[rax+rbx*1]
  40ee66:	cmp    DWORD PTR [rsp+0x1c],0x0
  40ee6b:	je     40ee36 <__flatcc_fb_gen_c_builder@@Base+0x2456>
  40ee6d:	test   ebx,ebx
  40ee6f:	je     40ee90 <__flatcc_fb_gen_c_builder@@Base+0x24b0>
  40ee71:	mov    rcx,QWORD PTR [r14+0xd0]
  40ee78:	test   bl,0x3
  40ee7b:	jne    40ee20 <__flatcc_fb_gen_c_builder@@Base+0x2440>
  40ee7d:	cmp    r13d,0x2
  40ee81:	jg     40ee9e <__flatcc_fb_gen_c_builder@@Base+0x24be>
  40ee83:	jmp    40ee20 <__flatcc_fb_gen_c_builder@@Base+0x2440>
  40ee85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ee8f:	nop
  40ee90:	mov    rcx,QWORD PTR [r14+0xd0]
  40ee97:	cmp    DWORD PTR [rsp+0x1c],0x5
  40ee9c:	jl     40ee20 <__flatcc_fb_gen_c_builder@@Base+0x2440>
  40ee9e:	mov    rdi,rcx
  40eea1:	lea    rsi,[rip+0x31c48]        # 440af0 <_IO_stdin_used@@Base+0x12af0>
  40eea8:	lea    rdx,[rip+0x20e93]        # 42fd42 <_IO_stdin_used@@Base+0x1d42>
  40eeaf:	xor    eax,eax
  40eeb1:	call   406180 <fprintf@plt>
  40eeb6:	jmp    40ee36 <__flatcc_fb_gen_c_builder@@Base+0x2456>
  40eebb:	lea    rsi,[rip+0x31ce2]        # 440ba4 <_IO_stdin_used@@Base+0x12ba4>
  40eec2:	mov    edx,r15d
  40eec5:	mov    rcx,r14
  40eec8:	mov    r8d,r13d
  40eecb:	xor    eax,eax
  40eecd:	vzeroupper 
  40eed0:	call   406180 <fprintf@plt>
  40eed5:	jmp    40ef80 <__flatcc_fb_gen_c_builder@@Base+0x25a0>
  40eeda:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eee1:	cmp    DWORD PTR [rsp+0x18],0x0
  40eee6:	je     40ef5a <__flatcc_fb_gen_c_builder@@Base+0x257a>
  40eee8:	mov    QWORD PTR [rsp],r14
  40eeec:	lea    rsi,[rip+0x31d0b]        # 440bfe <_IO_stdin_used@@Base+0x12bfe>
  40eef3:	lea    rdx,[rsp+0x40]
  40eef8:	mov    ecx,r15d
  40eefb:	mov    r8,r14
  40eefe:	mov    r9d,r15d
  40ef01:	jmp    40ef6f <__flatcc_fb_gen_c_builder@@Base+0x258f>
  40ef03:	mov    DWORD PTR [rsp],r13d
  40ef07:	lea    rsi,[rip+0x31ccb]        # 440bd9 <_IO_stdin_used@@Base+0x12bd9>
  40ef0e:	jmp    40ef1b <__flatcc_fb_gen_c_builder@@Base+0x253b>
  40ef10:	mov    DWORD PTR [rsp],r13d
  40ef14:	lea    rsi,[rip+0x31d06]        # 440c21 <_IO_stdin_used@@Base+0x12c21>
  40ef1b:	mov    rdx,rbx
  40ef1e:	mov    r8d,r15d
  40ef21:	mov    r9,r14
  40ef24:	xor    eax,eax
  40ef26:	vzeroupper 
  40ef29:	call   406180 <fprintf@plt>
  40ef2e:	jmp    40ef80 <__flatcc_fb_gen_c_builder@@Base+0x25a0>
  40ef30:	mov    r13,QWORD PTR [rsp+0x38]
  40ef35:	add    r13d,ebx
  40ef38:	mov    rbx,r14
  40ef3b:	mov    rsi,QWORD PTR [rbx+0xd0]
  40ef42:	mov    edi,0x29
  40ef47:	call   406120 <fputc@plt>
  40ef4c:	jmp    40eb8c <__flatcc_fb_gen_c_builder@@Base+0x21ac>
  40ef51:	lea    rsi,[rip+0x31c83]        # 440bdb <_IO_stdin_used@@Base+0x12bdb>
  40ef58:	jmp    40ef61 <__flatcc_fb_gen_c_builder@@Base+0x2581>
  40ef5a:	lea    rsi,[rip+0x31cc2]        # 440c23 <_IO_stdin_used@@Base+0x12c23>
  40ef61:	lea    rdx,[rsp+0x40]
  40ef66:	mov    ecx,r15d
  40ef69:	mov    r8,r14
  40ef6c:	mov    r9d,r13d
  40ef6f:	xor    eax,eax
  40ef71:	call   406180 <fprintf@plt>
  40ef76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef80:	inc    r13d
  40ef83:	jmp    40eb8c <__flatcc_fb_gen_c_builder@@Base+0x21ac>
  40ef88:	cmp    DWORD PTR [rsp+0x1c],0x0
  40ef8d:	jle    40efaf <__flatcc_fb_gen_c_builder@@Base+0x25cf>
  40ef8f:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ef96:	lea    rdi,[rip+0x31b69]        # 440b06 <_IO_stdin_used@@Base+0x12b06>
  40ef9d:	mov    esi,0x4
  40efa2:	mov    edx,0x1
  40efa7:	vzeroupper 
  40efaa:	call   406230 <fwrite@plt>
  40efaf:	lea    rsp,[rbp-0x28]
  40efb3:	pop    rbx
  40efb4:	pop    r12
  40efb6:	pop    r13
  40efb8:	pop    r14
  40efba:	pop    r15
  40efbc:	pop    rbp
  40efbd:	vzeroupper 
  40efc0:	ret    
  40efc1:	mov    rax,QWORD PTR [rip+0x43030]        # 451ff8 <stderr@GLIBC_2.2.5>
  40efc8:	mov    rdi,QWORD PTR [rax]
  40efcb:	lea    rsi,[rip+0x20c56]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40efd2:	lea    rbx,[rip+0x3182b]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40efd9:	lea    r8,[rip+0x31c62]        # 440c42 <_IO_stdin_used@@Base+0x12c42>
  40efe0:	mov    rdx,rbx
  40efe3:	mov    ecx,0x3e1
  40efe8:	xor    eax,eax
  40efea:	vzeroupper 
  40efed:	call   406180 <fprintf@plt>
  40eff2:	lea    rdi,[rip+0x31b96]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40eff9:	lea    rcx,[rip+0x31c5d]        # 440c5d <_IO_stdin_used@@Base+0x12c5d>
  40f000:	mov    rsi,rbx
  40f003:	mov    edx,0x3e1
  40f008:	call   406100 <__assert_fail@plt>
  40f00d:	mov    rax,QWORD PTR [rip+0x42fe4]        # 451ff8 <stderr@GLIBC_2.2.5>
  40f014:	mov    rdi,QWORD PTR [rax]
  40f017:	lea    rsi,[rip+0x20c0a]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40f01e:	lea    rbx,[rip+0x273b5]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40f025:	lea    r8,[rip+0x27411]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40f02c:	mov    rdx,rbx
  40f02f:	mov    ecx,0x60
  40f034:	xor    eax,eax
  40f036:	vzeroupper 
  40f039:	call   406180 <fprintf@plt>
  40f03e:	lea    rdi,[rip+0x31b4a]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40f045:	lea    rcx,[rip+0x27d21]        # 436d6d <_IO_stdin_used@@Base+0x8d6d>
  40f04c:	mov    rsi,rbx
  40f04f:	mov    edx,0x60
  40f054:	call   406100 <__assert_fail@plt>
  40f059:	nop    DWORD PTR [rax+0x0]
  40f060:	push   rbp
  40f061:	mov    rbp,rsp
  40f064:	push   r15
  40f066:	push   r14
  40f068:	push   r13
  40f06a:	push   r12
  40f06c:	push   rbx
  40f06d:	and    rsp,0xffffffffffffffe0
  40f071:	sub    rsp,0x200
  40f078:	mov    rax,QWORD PTR [rdi+0xd8]
  40f07f:	mov    r14,QWORD PTR [rax+0x40]
  40f083:	test   r14,r14
  40f086:	je     40f298 <__flatcc_fb_gen_c_builder@@Base+0x28b8>
  40f08c:	mov    r15,rdi
  40f08f:	lea    rbx,[rsp+0x100]
  40f097:	mov    r13,rsp
  40f09a:	xor    eax,eax
  40f09c:	cmp    WORD PTR [r14+0x10],0x4
  40f0a2:	jne    40f0d3 <__flatcc_fb_gen_c_builder@@Base+0x26f3>
  40f0a4:	jmp    40f0e7 <__flatcc_fb_gen_c_builder@@Base+0x2707>
  40f0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0b0:	mov    rdi,QWORD PTR [r15+0xd0]
  40f0b7:	lea    rsi,[rip+0x32018]        # 4410d6 <_IO_stdin_used@@Base+0x130d6>
  40f0be:	mov    rdx,r15
  40f0c1:	mov    rcx,r15
  40f0c4:	mov    r8,rbx
  40f0c7:	xor    eax,eax
  40f0c9:	call   406180 <fprintf@plt>
  40f0ce:	mov    eax,0x1
  40f0d3:	mov    r14,QWORD PTR [r14]
  40f0d6:	test   r14,r14
  40f0d9:	je     40f283 <__flatcc_fb_gen_c_builder@@Base+0x28a3>
  40f0df:	cmp    WORD PTR [r14+0x10],0x4
  40f0e5:	jne    40f0d3 <__flatcc_fb_gen_c_builder@@Base+0x26f3>
  40f0e7:	vxorps xmm0,xmm0,xmm0
  40f0eb:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40f0f4:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f0fd:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f106:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f10f:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f118:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f121:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f12a:	mov    QWORD PTR [rsp+0x1e0],0x0
  40f136:	vmovaps YMMWORD PTR [rsp],ymm0
  40f13b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f141:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f147:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f14d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f156:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f15f:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f168:	mov    QWORD PTR [rsp+0xe0],0x0
  40f174:	mov    rdi,QWORD PTR [r14+0x18]
  40f178:	mov    rsi,r14
  40f17b:	mov    rdx,rbx
  40f17e:	vzeroupper 
  40f181:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40f186:	mov    r12,QWORD PTR [r14+0x28]
  40f18a:	test   r12,r12
  40f18d:	jne    40f1e7 <__flatcc_fb_gen_c_builder@@Base+0x2807>
  40f18f:	jmp    40f0b0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40f194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f19e:	xchg   ax,ax
  40f1a0:	mov    rax,QWORD PTR [r12+0x8]
  40f1a5:	mov    r8d,DWORD PTR [rax+0x8]
  40f1a9:	mov    r9,QWORD PTR [rax]
  40f1ac:	mov    rdi,QWORD PTR [r15+0xd0]
  40f1b3:	sub    rsp,0x8
  40f1b7:	lea    rsi,[rip+0x31db9]        # 440f77 <_IO_stdin_used@@Base+0x12f77>
  40f1be:	mov    rdx,rbx
  40f1c1:	mov    rcx,rbx
  40f1c4:	mov    eax,0x0
  40f1c9:	push   r9
  40f1cb:	push   r8
  40f1cd:	push   rbx
  40f1ce:	push   rbx
  40f1cf:	push   r15
  40f1d1:	call   406180 <fprintf@plt>
  40f1d6:	add    rsp,0x30
  40f1da:	mov    r12,QWORD PTR [r12]
  40f1de:	test   r12,r12
  40f1e1:	je     40f0b0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40f1e7:	movzx  eax,WORD PTR [r12+0x28]
  40f1ed:	test   ax,ax
  40f1f0:	je     40f250 <__flatcc_fb_gen_c_builder@@Base+0x2870>
  40f1f2:	cmp    ax,0xa
  40f1f6:	je     40f1a0 <__flatcc_fb_gen_c_builder@@Base+0x27c0>
  40f1f8:	cmp    ax,0xe
  40f1fc:	jne    40f2a7 <__flatcc_fb_gen_c_builder@@Base+0x28c7>
  40f202:	mov    rsi,QWORD PTR [r12+0x18]
  40f207:	mov    rdi,QWORD PTR [rsi+0x18]
  40f20b:	mov    rdx,r13
  40f20e:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40f213:	mov    rax,QWORD PTR [r12+0x8]
  40f218:	mov    r8d,DWORD PTR [rax+0x8]
  40f21c:	mov    r9,QWORD PTR [rax]
  40f21f:	mov    rdi,QWORD PTR [r15+0xd0]
  40f226:	sub    rsp,0x8
  40f22a:	lea    rsi,[rip+0x31cc2]        # 440ef3 <_IO_stdin_used@@Base+0x12ef3>
  40f231:	mov    rdx,rbx
  40f234:	mov    rcx,rbx
  40f237:	mov    eax,0x0
  40f23c:	push   r9
  40f23e:	push   r8
  40f240:	push   rbx
  40f241:	push   rbx
  40f242:	push   r13
  40f244:	jmp    40f1d1 <__flatcc_fb_gen_c_builder@@Base+0x27f1>
  40f246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f250:	mov    rdi,QWORD PTR [r15+0xd0]
  40f257:	lea    rsi,[rip+0x31da3]        # 441001 <_IO_stdin_used@@Base+0x13001>
  40f25e:	mov    rdx,rbx
  40f261:	mov    rcx,rbx
  40f264:	mov    r8,rbx
  40f267:	mov    r9,rbx
  40f26a:	xor    eax,eax
  40f26c:	call   406180 <fprintf@plt>
  40f271:	mov    r12,QWORD PTR [r12]
  40f275:	test   r12,r12
  40f278:	jne    40f1e7 <__flatcc_fb_gen_c_builder@@Base+0x2807>
  40f27e:	jmp    40f0b0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40f283:	test   eax,eax
  40f285:	je     40f298 <__flatcc_fb_gen_c_builder@@Base+0x28b8>
  40f287:	mov    rsi,QWORD PTR [r15+0xd0]
  40f28e:	mov    edi,0xa
  40f293:	call   406120 <fputc@plt>
  40f298:	lea    rsp,[rbp-0x28]
  40f29c:	pop    rbx
  40f29d:	pop    r12
  40f29f:	pop    r13
  40f2a1:	pop    r14
  40f2a3:	pop    r15
  40f2a5:	pop    rbp
  40f2a6:	ret    
  40f2a7:	mov    rax,QWORD PTR [rip+0x42d4a]        # 451ff8 <stderr@GLIBC_2.2.5>
  40f2ae:	mov    rdi,QWORD PTR [rax]
  40f2b1:	lea    rsi,[rip+0x20970]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40f2b8:	lea    rbx,[rip+0x31545]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40f2bf:	lea    r8,[rip+0x31db1]        # 441077 <_IO_stdin_used@@Base+0x13077>
  40f2c6:	mov    rdx,rbx
  40f2c9:	mov    ecx,0x648
  40f2ce:	xor    eax,eax
  40f2d0:	call   406180 <fprintf@plt>
  40f2d5:	lea    rdi,[rip+0x318b3]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40f2dc:	lea    rcx,[rip+0x31dc0]        # 4410a3 <_IO_stdin_used@@Base+0x130a3>
  40f2e3:	mov    rsi,rbx
  40f2e6:	mov    edx,0x648
  40f2eb:	call   406100 <__assert_fail@plt>
  40f2f0:	push   rbx
  40f2f1:	mov    ecx,DWORD PTR [rsi+0x10]
  40f2f4:	add    ecx,0xfffffffd
  40f2f7:	cmp    cx,0x3
  40f2fb:	ja     40f3c7 <__flatcc_fb_gen_c_builder@@Base+0x29e7>
  40f301:	mov    rax,rdx
  40f304:	movzx  ecx,cx
  40f307:	lea    rdx,[rip+0x28cae]        # 437fbc <_IO_stdin_used@@Base+0x9fbc>
  40f30e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40f312:	add    rcx,rdx
  40f315:	jmp    rcx
  40f317:	vmovsd xmm0,QWORD PTR [rsi]
  40f31b:	cmp    edi,0xb
  40f31e:	jne    40f3b5 <__flatcc_fb_gen_c_builder@@Base+0x29d5>
  40f324:	vcvtsd2ss xmm0,xmm0,xmm0
  40f328:	vcvtss2sd xmm0,xmm0,xmm0
  40f32c:	lea    rsi,[rip+0x27197]        # 4364ca <_IO_stdin_used@@Base+0x84ca>
  40f333:	jmp    40f3bc <__flatcc_fb_gen_c_builder@@Base+0x29dc>
  40f338:	dec    edi
  40f33a:	cmp    edi,0x9
  40f33d:	jae    40f410 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
  40f343:	movsxd rcx,edi
  40f346:	lea    rdx,[rip+0x42913]        # 451c60 <fb_value_set_deleted@@Base+0x6a00>
  40f34d:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40f351:	mov    rcx,QWORD PTR [rsi]
  40f354:	lea    rsi,[rip+0x27156]        # 4364b1 <_IO_stdin_used@@Base+0x84b1>
  40f35b:	jmp    40f3aa <__flatcc_fb_gen_c_builder@@Base+0x29ca>
  40f35d:	dec    edi
  40f35f:	cmp    edi,0x9
  40f362:	jae    40f410 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
  40f368:	movsxd rcx,edi
  40f36b:	lea    rdx,[rip+0x428ee]        # 451c60 <fb_value_set_deleted@@Base+0x6a00>
  40f372:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40f376:	movzx  ecx,BYTE PTR [rsi]
  40f379:	lea    rsi,[rip+0x27143]        # 4364c3 <_IO_stdin_used@@Base+0x84c3>
  40f380:	mov    rdi,rax
  40f383:	xor    eax,eax
  40f385:	pop    rbx
  40f386:	jmp    406210 <sprintf@plt>
  40f38b:	dec    edi
  40f38d:	cmp    edi,0x9
  40f390:	jae    40f410 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
  40f392:	movsxd rcx,edi
  40f395:	lea    rdx,[rip+0x428c4]        # 451c60 <fb_value_set_deleted@@Base+0x6a00>
  40f39c:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40f3a0:	mov    rcx,QWORD PTR [rsi]
  40f3a3:	lea    rsi,[rip+0x27110]        # 4364ba <_IO_stdin_used@@Base+0x84ba>
  40f3aa:	mov    rdi,rax
  40f3ad:	xor    eax,eax
  40f3af:	pop    rbx
  40f3b0:	jmp    406210 <sprintf@plt>
  40f3b5:	lea    rsi,[rip+0x27112]        # 4364ce <_IO_stdin_used@@Base+0x84ce>
  40f3bc:	mov    rdi,rax
  40f3bf:	mov    al,0x1
  40f3c1:	pop    rbx
  40f3c2:	jmp    406210 <sprintf@plt>
  40f3c7:	mov    rax,QWORD PTR [rip+0x42c2a]        # 451ff8 <stderr@GLIBC_2.2.5>
  40f3ce:	mov    rdi,QWORD PTR [rax]
  40f3d1:	lea    rsi,[rip+0x20850]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40f3d8:	lea    rbx,[rip+0x26ffb]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40f3df:	lea    r8,[rip+0x27057]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40f3e6:	mov    rdx,rbx
  40f3e9:	mov    ecx,0x104
  40f3ee:	xor    eax,eax
  40f3f0:	call   406180 <fprintf@plt>
  40f3f5:	lea    rdi,[rip+0x31793]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40f3fc:	lea    rcx,[rip+0x270cf]        # 4364d2 <_IO_stdin_used@@Base+0x84d2>
  40f403:	mov    rsi,rbx
  40f406:	mov    edx,0x104
  40f40b:	call   406100 <__assert_fail@plt>
  40f410:	mov    rax,QWORD PTR [rip+0x42be1]        # 451ff8 <stderr@GLIBC_2.2.5>
  40f417:	mov    rdi,QWORD PTR [rax]
  40f41a:	lea    rsi,[rip+0x20807]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40f421:	lea    rbx,[rip+0x26fb2]        # 4363da <_IO_stdin_used@@Base+0x83da>
  40f428:	lea    r8,[rip+0x2700e]        # 43643d <_IO_stdin_used@@Base+0x843d>
  40f42f:	mov    rdx,rbx
  40f432:	mov    ecx,0xe2
  40f437:	xor    eax,eax
  40f439:	call   406180 <fprintf@plt>
  40f43e:	lea    rdi,[rip+0x3174a]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40f445:	lea    rcx,[rip+0x270ec]        # 436538 <_IO_stdin_used@@Base+0x8538>
  40f44c:	mov    rsi,rbx
  40f44f:	mov    edx,0xe2
  40f454:	call   406100 <__assert_fail@plt>
  40f459:	nop    DWORD PTR [rax+0x0]
  40f460:	push   rbp
  40f461:	mov    rbp,rsp
  40f464:	push   r15
  40f466:	push   r14
  40f468:	push   r13
  40f46a:	push   r12
  40f46c:	push   rbx
  40f46d:	and    rsp,0xffffffffffffffe0
  40f471:	sub    rsp,0x220
  40f478:	mov    rbx,r8
  40f47b:	mov    QWORD PTR [rsp+0x18],rcx
  40f480:	mov    QWORD PTR [rsp+0x10],rdx
  40f485:	mov    QWORD PTR [rsp+0x8],rsi
  40f48a:	mov    r13,rdi
  40f48d:	test   r9d,r9d
  40f490:	lea    rax,[rip+0x39c13]        # 4490aa <fb_schema_table_deleted@@Base+0x2182>
  40f497:	lea    rcx,[rip+0x3204e]        # 4414ec <_IO_stdin_used@@Base+0x134ec>
  40f49e:	vxorps xmm0,xmm0,xmm0
  40f4a2:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f4ab:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f4b4:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f4bd:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f4c6:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f4cf:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f4d8:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40f4e1:	cmove  rcx,rax
  40f4e5:	mov    QWORD PTR [rsp],rcx
  40f4e9:	mov    QWORD PTR [rsp+0x200],0x0
  40f4f5:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f4fb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f501:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f507:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f510:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f519:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f522:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f52b:	mov    QWORD PTR [rsp+0x100],0x0
  40f537:	mov    rdi,QWORD PTR [r8+0x18]
  40f53b:	lea    rdx,[rsp+0x120]
  40f543:	mov    rsi,r8
  40f546:	vzeroupper 
  40f549:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40f54e:	mov    r14,QWORD PTR [rbx+0x28]
  40f552:	test   r14,r14
  40f555:	je     40f646 <__flatcc_fb_gen_c_builder@@Base+0x2c66>
  40f55b:	lea    rbx,[rsp+0x20]
  40f560:	jmp    40f5c6 <__flatcc_fb_gen_c_builder@@Base+0x2be6>
  40f562:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f56c:	nop    DWORD PTR [rax+0x0]
  40f570:	mov    rdi,QWORD PTR [r13+0xd0]
  40f577:	sub    rsp,0x8
  40f57b:	lea    rsi,[rip+0x32084]        # 441606 <_IO_stdin_used@@Base+0x13606>
  40f582:	mov    rdx,r13
  40f585:	mov    rcx,QWORD PTR [rsp+0x8]
  40f58a:	mov    r8,r13
  40f58d:	mov    r9,QWORD PTR [rsp+0x10]
  40f592:	mov    eax,0x0
  40f597:	push   r12
  40f599:	push   r15
  40f59b:	lea    rbx,[rsp+0x138]
  40f5a3:	push   rbx
  40f5a4:	lea    rbx,[rsp+0x40]
  40f5a9:	push   QWORD PTR [rsp+0x38]
  40f5ad:	push   QWORD PTR [rsp+0x38]
  40f5b1:	call   406180 <fprintf@plt>
  40f5b6:	add    rsp,0x30
  40f5ba:	mov    r14,QWORD PTR [r14]
  40f5bd:	test   r14,r14
  40f5c0:	je     40f646 <__flatcc_fb_gen_c_builder@@Base+0x2c66>
  40f5c6:	movzx  eax,WORD PTR [r14+0x28]
  40f5cb:	test   ax,ax
  40f5ce:	je     40f5ba <__flatcc_fb_gen_c_builder@@Base+0x2bda>
  40f5d0:	mov    rcx,QWORD PTR [r14+0x8]
  40f5d4:	mov    r15d,DWORD PTR [rcx+0x8]
  40f5d8:	mov    r12,QWORD PTR [rcx]
  40f5db:	cmp    ax,0xa
  40f5df:	je     40f570 <__flatcc_fb_gen_c_builder@@Base+0x2b90>
  40f5e1:	cmp    ax,0xe
  40f5e5:	jne    40f655 <__flatcc_fb_gen_c_builder@@Base+0x2c75>
  40f5e7:	mov    rsi,QWORD PTR [r14+0x18]
  40f5eb:	mov    rdi,QWORD PTR [rsi+0x18]
  40f5ef:	mov    rdx,rbx
  40f5f2:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40f5f7:	mov    rax,QWORD PTR [r14+0x18]
  40f5fb:	movzx  eax,WORD PTR [rax+0x10]
  40f5ff:	cmp    ax,0x1
  40f603:	je     40f61e <__flatcc_fb_gen_c_builder@@Base+0x2c3e>
  40f605:	test   ax,ax
  40f608:	jne    40f69e <__flatcc_fb_gen_c_builder@@Base+0x2cbe>
  40f60e:	mov    rdi,QWORD PTR [r13+0xd0]
  40f615:	lea    rsi,[rip+0x31edd]        # 4414f9 <_IO_stdin_used@@Base+0x134f9>
  40f61c:	jmp    40f62c <__flatcc_fb_gen_c_builder@@Base+0x2c4c>
  40f61e:	mov    rdi,QWORD PTR [r13+0xd0]
  40f625:	lea    rsi,[rip+0x31f08]        # 441534 <_IO_stdin_used@@Base+0x13534>
  40f62c:	mov    rdx,r13
  40f62f:	mov    rcx,QWORD PTR [rsp]
  40f633:	mov    r8,r13
  40f636:	mov    r9,QWORD PTR [rsp+0x8]
  40f63b:	mov    eax,0x0
  40f640:	push   rbx
  40f641:	jmp    40f597 <__flatcc_fb_gen_c_builder@@Base+0x2bb7>
  40f646:	lea    rsp,[rbp-0x28]
  40f64a:	pop    rbx
  40f64b:	pop    r12
  40f64d:	pop    r13
  40f64f:	pop    r14
  40f651:	pop    r15
  40f653:	pop    rbp
  40f654:	ret    
  40f655:	mov    rax,QWORD PTR [rip+0x4299c]        # 451ff8 <stderr@GLIBC_2.2.5>
  40f65c:	mov    rdi,QWORD PTR [rax]
  40f65f:	lea    rsi,[rip+0x205c2]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40f666:	lea    rbx,[rip+0x31197]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40f66d:	lea    r8,[rip+0x31fca]        # 44163e <_IO_stdin_used@@Base+0x1363e>
  40f674:	mov    rdx,rbx
  40f677:	mov    ecx,0x558
  40f67c:	xor    eax,eax
  40f67e:	call   406180 <fprintf@plt>
  40f683:	lea    rdi,[rip+0x31505]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40f68a:	lea    rcx,[rip+0x31f15]        # 4415a6 <_IO_stdin_used@@Base+0x135a6>
  40f691:	mov    rsi,rbx
  40f694:	mov    edx,0x558
  40f699:	call   406100 <__assert_fail@plt>
  40f69e:	mov    rax,QWORD PTR [rip+0x42953]        # 451ff8 <stderr@GLIBC_2.2.5>
  40f6a5:	mov    rdi,QWORD PTR [rax]
  40f6a8:	lea    rsi,[rip+0x20579]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  40f6af:	lea    rbx,[rip+0x3114e]        # 440804 <_IO_stdin_used@@Base+0x12804>
  40f6b6:	lea    r8,[rip+0x31eb3]        # 441570 <_IO_stdin_used@@Base+0x13570>
  40f6bd:	mov    rdx,rbx
  40f6c0:	mov    ecx,0x54e
  40f6c5:	xor    eax,eax
  40f6c7:	call   406180 <fprintf@plt>
  40f6cc:	lea    rdi,[rip+0x314bc]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  40f6d3:	lea    rcx,[rip+0x31ecc]        # 4415a6 <_IO_stdin_used@@Base+0x135a6>
  40f6da:	mov    rsi,rbx
  40f6dd:	mov    edx,0x54e
  40f6e2:	call   406100 <__assert_fail@plt>
  40f6e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f6f0 <__flatcc_fb_gen_c_verifier@@Base>:
  40f6f0:	push   rbp
  40f6f1:	mov    rbp,rsp
  40f6f4:	push   r15
  40f6f6:	push   r14
  40f6f8:	push   r13
  40f6fa:	push   r12
  40f6fc:	push   rbx
  40f6fd:	and    rsp,0xffffffffffffffe0
  40f701:	sub    rsp,0x220
  40f708:	mov    rbx,rdi
  40f70b:	lea    r13,[rdi+0xd0]
  40f712:	mov    rdi,QWORD PTR [rdi+0xd0]
  40f719:	mov    rax,QWORD PTR [rbx+0xd8]
  40f720:	mov    rcx,QWORD PTR [rax+0x118]
  40f727:	lea    rsi,[rip+0x320ee]        # 44181c <_IO_stdin_used@@Base+0x1381c>
  40f72e:	mov    rdx,rcx
  40f731:	xor    eax,eax
  40f733:	call   406180 <fprintf@plt>
  40f738:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f73f:	lea    rdi,[rip+0x203b9]        # 42faff <_IO_stdin_used@@Base+0x1aff>
  40f746:	mov    esi,0x51
  40f74b:	mov    edx,0x1
  40f750:	call   406230 <fwrite@plt>
  40f755:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f75c:	mov    rax,QWORD PTR [rbx+0xd8]
  40f763:	mov    rdx,QWORD PTR [rax+0x118]
  40f76a:	lea    rsi,[rip+0x30fd2]        # 440743 <_IO_stdin_used@@Base+0x12743>
  40f771:	xor    eax,eax
  40f773:	call   406180 <fprintf@plt>
  40f778:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f77f:	mov    rax,QWORD PTR [rbx+0xd8]
  40f786:	mov    rdx,QWORD PTR [rax+0x110]
  40f78d:	lea    rsi,[rip+0x30fc4]        # 440758 <_IO_stdin_used@@Base+0x12758>
  40f794:	xor    eax,eax
  40f796:	call   406180 <fprintf@plt>
  40f79b:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f7a2:	lea    rdi,[rip+0x26578]        # 435d21 <_IO_stdin_used@@Base+0x7d21>
  40f7a9:	mov    esi,0x7
  40f7ae:	mov    edx,0x1
  40f7b3:	call   406230 <fwrite@plt>
  40f7b8:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f7bf:	lea    rdi,[rip+0x32083]        # 441849 <_IO_stdin_used@@Base+0x13849>
  40f7c6:	mov    esi,0x24
  40f7cb:	mov    edx,0x1
  40f7d0:	call   406230 <fwrite@plt>
  40f7d5:	lea    rsi,[rip+0x20277]        # 42fa53 <_IO_stdin_used@@Base+0x1a53>
  40f7dc:	lea    rdx,[rip+0x3208b]        # 44186e <_IO_stdin_used@@Base+0x1386e>
  40f7e3:	mov    rdi,rbx
  40f7e6:	call   407ec0 <__flatcc_fb_gen_c_includes@@Base>
  40f7eb:	mov    QWORD PTR [rsp+0x18],rbx
  40f7f0:	mov    rax,QWORD PTR [rbx+0xe0]
  40f7f7:	cmp    DWORD PTR [rax+0xac],0x0
  40f7fe:	je     40f81a <__flatcc_fb_gen_c_verifier@@Base+0x12a>
  40f800:	mov    rcx,QWORD PTR [r13+0x0]
  40f804:	lea    rdi,[rip+0x204ea]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  40f80b:	mov    esi,0x24
  40f810:	mov    edx,0x1
  40f815:	call   406230 <fwrite@plt>
  40f81a:	mov    rbx,QWORD PTR [rsp+0x18]
  40f81f:	mov    rsi,QWORD PTR [rbx+0xd0]
  40f826:	mov    edi,0xa
  40f82b:	call   406120 <fputc@plt>
  40f830:	vxorps xmm0,xmm0,xmm0
  40f834:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f83d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f846:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f84f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f858:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f85e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f864:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f86a:	mov    QWORD PTR [rsp+0x100],0x0
  40f876:	mov    rax,QWORD PTR [rbx+0xd8]
  40f87d:	mov    rbx,QWORD PTR [rax+0x40]
  40f881:	test   rbx,rbx
  40f884:	je     40f8d4 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
  40f886:	lea    r14,[rsp+0x20]
  40f88b:	lea    r15,[rip+0x31fe8]        # 44187a <_IO_stdin_used@@Base+0x1387a>
  40f892:	cmp    WORD PTR [rbx+0x10],0x0
  40f897:	je     40f8af <__flatcc_fb_gen_c_verifier@@Base+0x1bf>
  40f899:	nop    DWORD PTR [rax+0x0]
  40f8a0:	mov    rbx,QWORD PTR [rbx]
  40f8a3:	test   rbx,rbx
  40f8a6:	je     40f8d4 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
  40f8a8:	cmp    WORD PTR [rbx+0x10],0x0
  40f8ad:	jne    40f8a0 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
  40f8af:	mov    rdi,QWORD PTR [rbx+0x18]
  40f8b3:	mov    rsi,rbx
  40f8b6:	mov    rdx,r14
  40f8b9:	vzeroupper 
  40f8bc:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40f8c1:	mov    rdi,QWORD PTR [r13+0x0]
  40f8c5:	mov    rsi,r15
  40f8c8:	mov    rdx,r14
  40f8cb:	xor    eax,eax
  40f8cd:	call   406180 <fprintf@plt>
  40f8d2:	jmp    40f8a0 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
  40f8d4:	mov    rbx,QWORD PTR [rsp+0x18]
  40f8d9:	mov    rsi,QWORD PTR [rbx+0xd0]
  40f8e0:	mov    edi,0xa
  40f8e5:	vzeroupper 
  40f8e8:	call   406120 <fputc@plt>
  40f8ed:	mov    rax,QWORD PTR [rbx+0xd8]
  40f8f4:	mov    rbx,QWORD PTR [rax+0x40]
  40f8f8:	test   rbx,rbx
  40f8fb:	je     41012b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40f901:	mov    QWORD PTR [rsp+0x10],r13
  40f906:	lea    r13,[rsp+0x120]
  40f90e:	cmp    WORD PTR [rbx+0x10],0x4
  40f913:	jne    40f93e <__flatcc_fb_gen_c_verifier@@Base+0x24e>
  40f915:	jmp    40f951 <__flatcc_fb_gen_c_verifier@@Base+0x261>
  40f917:	nop    WORD PTR [rax+rax*1+0x0]
  40f920:	mov    rax,QWORD PTR [rsp+0x10]
  40f925:	mov    rcx,QWORD PTR [rax]
  40f928:	mov    esi,0x2f
  40f92d:	mov    edx,0x1
  40f932:	lea    rdi,[rip+0x321d6]        # 441b0f <_IO_stdin_used@@Base+0x13b0f>
  40f939:	call   406230 <fwrite@plt>
  40f93e:	mov    rbx,QWORD PTR [rbx]
  40f941:	test   rbx,rbx
  40f944:	je     40fb23 <__flatcc_fb_gen_c_verifier@@Base+0x433>
  40f94a:	cmp    WORD PTR [rbx+0x10],0x4
  40f94f:	jne    40f93e <__flatcc_fb_gen_c_verifier@@Base+0x24e>
  40f951:	vxorps xmm0,xmm0,xmm0
  40f955:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f95b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f961:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f967:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f970:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f979:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f982:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f98b:	mov    QWORD PTR [rsp+0x100],0x0
  40f997:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f9a0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f9a9:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f9b2:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f9bb:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f9c4:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f9cd:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40f9d6:	mov    QWORD PTR [rsp+0x200],0x0
  40f9e2:	mov    rdi,QWORD PTR [rbx+0x18]
  40f9e6:	mov    rsi,rbx
  40f9e9:	lea    r14,[rsp+0x20]
  40f9ee:	mov    rdx,r14
  40f9f1:	vzeroupper 
  40f9f4:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40f9f9:	mov    rax,QWORD PTR [rsp+0x10]
  40f9fe:	mov    rdi,QWORD PTR [rax]
  40fa01:	lea    rsi,[rip+0x31eb7]        # 4418bf <_IO_stdin_used@@Base+0x138bf>
  40fa08:	mov    rdx,r14
  40fa0b:	xor    eax,eax
  40fa0d:	call   406180 <fprintf@plt>
  40fa12:	mov    r12,QWORD PTR [rbx+0x28]
  40fa16:	test   r12,r12
  40fa19:	jne    40fa5e <__flatcc_fb_gen_c_verifier@@Base+0x36e>
  40fa1b:	jmp    40f920 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40fa20:	mov    rcx,QWORD PTR [rsp+0x10]
  40fa25:	mov    rdi,QWORD PTR [rcx]
  40fa28:	mov    edx,DWORD PTR [r12+0x48]
  40fa2d:	mov    rcx,QWORD PTR [rax+0xb8]
  40fa34:	movzx  r8d,WORD PTR [rax+0xb0]
  40fa3c:	mov    QWORD PTR [rsp],r14
  40fa40:	lea    rsi,[rip+0x31f28]        # 44196f <_IO_stdin_used@@Base+0x1396f>
  40fa47:	mov    r9d,r15d
  40fa4a:	xor    eax,eax
  40fa4c:	call   406180 <fprintf@plt>
  40fa51:	mov    r12,QWORD PTR [r12]
  40fa55:	test   r12,r12
  40fa58:	je     40f920 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40fa5e:	movzx  eax,WORD PTR [r12+0x28]
  40fa64:	test   ax,ax
  40fa67:	je     40fa51 <__flatcc_fb_gen_c_verifier@@Base+0x361>
  40fa69:	mov    rcx,QWORD PTR [r12+0x8]
  40fa6e:	mov    r15d,DWORD PTR [rcx+0x8]
  40fa72:	mov    r14,QWORD PTR [rcx]
  40fa75:	cmp    ax,0xa
  40fa79:	je     40faf0 <__flatcc_fb_gen_c_verifier@@Base+0x400>
  40fa7b:	cmp    ax,0xe
  40fa7f:	jne    410193 <__flatcc_fb_gen_c_verifier@@Base+0xaa3>
  40fa85:	mov    rsi,QWORD PTR [r12+0x18]
  40fa8a:	mov    rdi,QWORD PTR [rsi+0x18]
  40fa8e:	mov    rdx,r13
  40fa91:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40fa96:	mov    rax,QWORD PTR [r12+0x18]
  40fa9b:	movzx  ecx,WORD PTR [rax+0x10]
  40fa9f:	cmp    cx,0x1
  40faa3:	je     40fa20 <__flatcc_fb_gen_c_verifier@@Base+0x330>
  40faa9:	test   cx,cx
  40faac:	jne    4101dc <__flatcc_fb_gen_c_verifier@@Base+0xaec>
  40fab2:	mov    rax,QWORD PTR [rsp+0x10]
  40fab7:	mov    rdi,QWORD PTR [rax]
  40faba:	mov    edx,DWORD PTR [r12+0x48]
  40fabf:	lea    rsi,[rip+0x31e59]        # 44191f <_IO_stdin_used@@Base+0x1391f>
  40fac6:	mov    rcx,r13
  40fac9:	mov    r8d,r15d
  40facc:	mov    r9,r14
  40facf:	xor    eax,eax
  40fad1:	call   406180 <fprintf@plt>
  40fad6:	mov    r12,QWORD PTR [r12]
  40fada:	test   r12,r12
  40fadd:	jne    40fa5e <__flatcc_fb_gen_c_verifier@@Base+0x36e>
  40fae3:	jmp    40f920 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40fae8:	nop    DWORD PTR [rax+rax*1+0x0]
  40faf0:	mov    rax,QWORD PTR [rsp+0x10]
  40faf5:	mov    rdi,QWORD PTR [rax]
  40faf8:	mov    edx,DWORD PTR [r12+0x48]
  40fafd:	lea    rsi,[rip+0x31f98]        # 441a9c <_IO_stdin_used@@Base+0x13a9c>
  40fb04:	mov    ecx,r15d
  40fb07:	mov    r8,r14
  40fb0a:	xor    eax,eax
  40fb0c:	call   406180 <fprintf@plt>
  40fb11:	mov    r12,QWORD PTR [r12]
  40fb15:	test   r12,r12
  40fb18:	jne    40fa5e <__flatcc_fb_gen_c_verifier@@Base+0x36e>
  40fb1e:	jmp    40f920 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40fb23:	mov    rax,QWORD PTR [rsp+0x18]
  40fb28:	mov    rax,QWORD PTR [rax+0xd8]
  40fb2f:	mov    rbx,QWORD PTR [rax+0x40]
  40fb33:	test   rbx,rbx
  40fb36:	mov    r13,QWORD PTR [rsp+0x10]
  40fb3b:	je     41012b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40fb41:	lea    r14,[rsp+0x20]
  40fb46:	lea    r13,[rip+0x3212d]        # 441c7a <_IO_stdin_used@@Base+0x13c7a>
  40fb4d:	lea    r15,[rip+0x321dc]        # 441d30 <_IO_stdin_used@@Base+0x13d30>
  40fb54:	mov    r12,QWORD PTR [rsp+0x18]
  40fb59:	cmp    WORD PTR [rbx+0x10],0x1
  40fb5e:	je     40fb73 <__flatcc_fb_gen_c_verifier@@Base+0x483>
  40fb60:	mov    rbx,QWORD PTR [rbx]
  40fb63:	test   rbx,rbx
  40fb66:	je     40fc71 <__flatcc_fb_gen_c_verifier@@Base+0x581>
  40fb6c:	cmp    WORD PTR [rbx+0x10],0x1
  40fb71:	jne    40fb60 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  40fb73:	vxorps xmm0,xmm0,xmm0
  40fb77:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40fb80:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40fb89:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40fb92:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40fb9b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40fba1:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40fba7:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40fbad:	mov    QWORD PTR [rsp+0x100],0x0
  40fbb9:	mov    rdi,QWORD PTR [rbx+0x18]
  40fbbd:	mov    rsi,rbx
  40fbc0:	mov    rdx,r14
  40fbc3:	vzeroupper 
  40fbc6:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40fbcb:	mov    rdi,QWORD PTR [r12+0xd0]
  40fbd3:	mov    r8,QWORD PTR [rbx+0xb8]
  40fbda:	movzx  r9d,WORD PTR [rbx+0xb0]
  40fbe2:	lea    rsi,[rip+0x31f56]        # 441b3f <_IO_stdin_used@@Base+0x13b3f>
  40fbe9:	mov    rdx,r14
  40fbec:	mov    rcx,r14
  40fbef:	xor    eax,eax
  40fbf1:	call   406180 <fprintf@plt>
  40fbf6:	mov    rdi,QWORD PTR [r12+0xd0]
  40fbfe:	mov    r8,QWORD PTR [rbx+0xb8]
  40fc05:	movzx  r9d,WORD PTR [rbx+0xb0]
  40fc0d:	lea    rsi,[rip+0x31fc3]        # 441bd7 <_IO_stdin_used@@Base+0x13bd7>
  40fc14:	mov    rdx,r14
  40fc17:	mov    rcx,r14
  40fc1a:	xor    eax,eax
  40fc1c:	call   406180 <fprintf@plt>
  40fc21:	mov    rdi,QWORD PTR [r12+0xd0]
  40fc29:	mov    r8,QWORD PTR [rbx+0xb8]
  40fc30:	movzx  r9d,WORD PTR [rbx+0xb0]
  40fc38:	mov    rsi,r13
  40fc3b:	mov    rdx,r14
  40fc3e:	mov    rcx,r12
  40fc41:	xor    eax,eax
  40fc43:	call   406180 <fprintf@plt>
  40fc48:	mov    rdi,QWORD PTR [r12+0xd0]
  40fc50:	mov    rcx,QWORD PTR [rbx+0xb8]
  40fc57:	movzx  r8d,WORD PTR [rbx+0xb0]
  40fc5f:	mov    rsi,r15
  40fc62:	mov    rdx,r14
  40fc65:	xor    eax,eax
  40fc67:	call   406180 <fprintf@plt>
  40fc6c:	jmp    40fb60 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  40fc71:	mov    rax,QWORD PTR [rsp+0x18]
  40fc76:	mov    rax,QWORD PTR [rax+0xd8]
  40fc7d:	mov    r12,QWORD PTR [rax+0x40]
  40fc81:	test   r12,r12
  40fc84:	mov    r13,QWORD PTR [rsp+0x10]
  40fc89:	je     41012b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40fc8f:	lea    r15,[rsp+0x20]
  40fc94:	lea    r14,[rip+0x31b35]        # 4417d0 <_IO_stdin_used@@Base+0x137d0>
  40fc9b:	cmp    WORD PTR [r12+0x10],0x0
  40fca2:	jne    40fd71 <__flatcc_fb_gen_c_verifier@@Base+0x681>
  40fca8:	jmp    40fd87 <__flatcc_fb_gen_c_verifier@@Base+0x697>
  40fcad:	nop    DWORD PTR [rax]
  40fcb0:	test   ebx,ebx
  40fcb2:	je     41010c <__flatcc_fb_gen_c_verifier@@Base+0xa1c>
  40fcb8:	mov    rbx,QWORD PTR [rsp+0x18]
  40fcbd:	mov    rcx,QWORD PTR [rbx+0xd0]
  40fcc4:	mov    esi,0x1d
  40fcc9:	mov    edx,0x1
  40fcce:	lea    rdi,[rip+0x3248f]        # 442164 <_IO_stdin_used@@Base+0x14164>
  40fcd5:	call   406230 <fwrite@plt>
  40fcda:	mov    rcx,QWORD PTR [rbx+0xd0]
  40fce1:	mov    esi,0x3
  40fce6:	mov    edx,0x1
  40fceb:	lea    rdi,[rip+0x3667d]        # 44636f <_IO_stdin_used@@Base+0x1836f>
  40fcf2:	call   406230 <fwrite@plt>
  40fcf7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fcfe:	lea    rsi,[rip+0x3247d]        # 442182 <_IO_stdin_used@@Base+0x14182>
  40fd05:	lea    r15,[rsp+0x20]
  40fd0a:	mov    rdx,r15
  40fd0d:	mov    rcx,r15
  40fd10:	mov    r8,r15
  40fd13:	xor    eax,eax
  40fd15:	call   406180 <fprintf@plt>
  40fd1a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd21:	lea    rsi,[rip+0x324fa]        # 442222 <_IO_stdin_used@@Base+0x14222>
  40fd28:	mov    rdx,r15
  40fd2b:	mov    rcx,r15
  40fd2e:	mov    r8,r15
  40fd31:	xor    eax,eax
  40fd33:	call   406180 <fprintf@plt>
  40fd38:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd3f:	lea    rsi,[rip+0x32587]        # 4422cd <_IO_stdin_used@@Base+0x142cd>
  40fd46:	mov    rdx,r15
  40fd49:	mov    rcx,r15
  40fd4c:	xor    eax,eax
  40fd4e:	call   406180 <fprintf@plt>
  40fd53:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd5a:	lea    rsi,[rip+0x32623]        # 442384 <_IO_stdin_used@@Base+0x14384>
  40fd61:	mov    rdx,r15
  40fd64:	mov    rcx,rbx
  40fd67:	mov    r8,r15
  40fd6a:	xor    eax,eax
  40fd6c:	call   406180 <fprintf@plt>
  40fd71:	mov    r12,QWORD PTR [r12]
  40fd75:	test   r12,r12
  40fd78:	je     41012b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40fd7e:	cmp    WORD PTR [r12+0x10],0x0
  40fd85:	jne    40fd71 <__flatcc_fb_gen_c_verifier@@Base+0x681>
  40fd87:	vxorps xmm0,xmm0,xmm0
  40fd8b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40fd91:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40fd97:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40fd9d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40fda6:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40fdaf:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40fdb8:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40fdc1:	mov    QWORD PTR [rsp+0x100],0x0
  40fdcd:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40fdd6:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40fddf:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40fde8:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40fdf1:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40fdfa:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40fe03:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40fe0c:	mov    QWORD PTR [rsp+0x200],0x0
  40fe18:	mov    rdi,QWORD PTR [r12+0x18]
  40fe1d:	mov    rsi,r12
  40fe20:	mov    rdx,r15
  40fe23:	vzeroupper 
  40fe26:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40fe2b:	mov    rdi,QWORD PTR [r13+0x0]
  40fe2f:	lea    rsi,[rip+0x31fa9]        # 441ddf <_IO_stdin_used@@Base+0x13ddf>
  40fe36:	mov    rdx,r15
  40fe39:	xor    eax,eax
  40fe3b:	call   406180 <fprintf@plt>
  40fe40:	mov    r15,QWORD PTR [r12+0x28]
  40fe45:	test   r15,r15
  40fe48:	je     40fcb8 <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
  40fe4e:	mov    ebx,0x1
  40fe53:	test   BYTE PTR [r15+0x70],0x4
  40fe58:	jne    40fea8 <__flatcc_fb_gen_c_verifier@@Base+0x7b8>
  40fe5a:	jmp    40febb <__flatcc_fb_gen_c_verifier@@Base+0x7cb>
  40fe5c:	mov    rax,QWORD PTR [rsp+0x10]
  40fe61:	mov    rdi,QWORD PTR [rax]
  40fe64:	mov    rcx,QWORD PTR [r15+0x80]
  40fe6b:	mov    rdx,QWORD PTR [r15+0x88]
  40fe72:	movzx  r8d,WORD PTR [r15+0x72]
  40fe77:	lea    rsi,[rip+0x31fe3]        # 441e61 <_IO_stdin_used@@Base+0x13e61>
  40fe7e:	xor    eax,eax
  40fe80:	call   406180 <fprintf@plt>
  40fe85:	mov    r13,QWORD PTR [rsp+0x10]
  40fe8a:	mov    rdi,QWORD PTR [r13+0x0]
  40fe8e:	mov    rax,QWORD PTR [r15+0x8]
  40fe92:	mov    edx,DWORD PTR [rax+0x8]
  40fe95:	mov    rcx,QWORD PTR [rax]
  40fe98:	xor    ebx,ebx
  40fe9a:	lea    rsi,[rip+0x32f61]        # 442e02 <_IO_stdin_used@@Base+0x14e02>
  40fea1:	xor    eax,eax
  40fea3:	call   406180 <fprintf@plt>
  40fea8:	mov    r15,QWORD PTR [r15]
  40feab:	test   r15,r15
  40feae:	je     40fcb0 <__flatcc_fb_gen_c_verifier@@Base+0x5c0>
  40feb4:	test   BYTE PTR [r15+0x70],0x4
  40feb9:	jne    40fea8 <__flatcc_fb_gen_c_verifier@@Base+0x7b8>
  40febb:	mov    rcx,QWORD PTR [r13+0x0]
  40febf:	test   ebx,ebx
  40fec1:	je     40fed6 <__flatcc_fb_gen_c_verifier@@Base+0x7e6>
  40fec3:	mov    esi,0x1c
  40fec8:	mov    edx,0x1
  40fecd:	lea    rdi,[rip+0x31f51]        # 441e25 <_IO_stdin_used@@Base+0x13e25>
  40fed4:	jmp    40fee7 <__flatcc_fb_gen_c_verifier@@Base+0x7f7>
  40fed6:	mov    esi,0x1e
  40fedb:	mov    edx,0x1
  40fee0:	lea    rdi,[rip+0x31f5b]        # 441e42 <_IO_stdin_used@@Base+0x13e42>
  40fee7:	call   406230 <fwrite@plt>
  40feec:	mov    eax,DWORD PTR [r15+0x28]
  40fef0:	add    eax,0xfffffff9
  40fef3:	cmp    ax,0x8
  40fef7:	ja     40fe85 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  40fef9:	mov    r13d,DWORD PTR [r15+0x70]
  40fefd:	shr    r13d,0x8
  40ff01:	and    r13d,0x1
  40ff05:	movzx  eax,ax
  40ff08:	movsxd rax,DWORD PTR [r14+rax*4]
  40ff0c:	add    rax,r14
  40ff0f:	jmp    rax
  40ff11:	mov    rsi,QWORD PTR [r15+0x90]
  40ff18:	test   rsi,rsi
  40ff1b:	je     40ffc0 <__flatcc_fb_gen_c_verifier@@Base+0x8d0>
  40ff21:	mov    rdi,QWORD PTR [rsi+0x18]
  40ff25:	lea    rbx,[rsp+0x120]
  40ff2d:	mov    rdx,rbx
  40ff30:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40ff35:	mov    rdx,QWORD PTR [r15+0x88]
  40ff3c:	mov    rax,QWORD PTR [r15+0x90]
  40ff43:	cmp    WORD PTR [rax+0x10],0x0
  40ff48:	mov    rax,QWORD PTR [rsp+0x10]
  40ff4d:	mov    rdi,QWORD PTR [rax]
  40ff50:	je     4100ee <__flatcc_fb_gen_c_verifier@@Base+0x9fe>
  40ff56:	mov    r8,QWORD PTR [r15+0x80]
  40ff5d:	movzx  r9d,WORD PTR [r15+0x72]
  40ff62:	lea    rsi,[rip+0x31f66]        # 441ecf <_IO_stdin_used@@Base+0x13ecf>
  40ff69:	jmp    410082 <__flatcc_fb_gen_c_verifier@@Base+0x992>
  40ff6e:	mov    rax,QWORD PTR [rsp+0x10]
  40ff73:	mov    rdi,QWORD PTR [rax]
  40ff76:	mov    rdx,QWORD PTR [r15+0x88]
  40ff7d:	lea    rsi,[rip+0x31ff0]        # 441f74 <_IO_stdin_used@@Base+0x13f74>
  40ff84:	jmp    410014 <__flatcc_fb_gen_c_verifier@@Base+0x924>
  40ff89:	mov    rsi,QWORD PTR [r15+0x18]
  40ff8d:	mov    rdi,QWORD PTR [rsi+0x18]
  40ff91:	lea    rdx,[rsp+0x120]
  40ff99:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  40ff9e:	mov    rax,QWORD PTR [r15+0x18]
  40ffa2:	movzx  eax,WORD PTR [rax+0x10]
  40ffa6:	cmp    rax,0x4
  40ffaa:	ja     410225 <__flatcc_fb_gen_c_verifier@@Base+0xb35>
  40ffb0:	lea    rcx,[rip+0x3183d]        # 4417f4 <_IO_stdin_used@@Base+0x137f4>
  40ffb7:	movsxd rax,DWORD PTR [rcx+rax*4]
  40ffbb:	add    rax,rcx
  40ffbe:	jmp    rax
  40ffc0:	mov    rax,QWORD PTR [rsp+0x10]
  40ffc5:	mov    rdi,QWORD PTR [rax]
  40ffc8:	mov    r8,QWORD PTR [r15+0x80]
  40ffcf:	mov    rcx,QWORD PTR [r15+0x88]
  40ffd6:	movzx  r9d,WORD PTR [r15+0x72]
  40ffdb:	test   r8,r8
  40ffde:	mov    rsi,r8
  40ffe1:	mov    eax,0x1
  40ffe6:	cmove  rsi,rax
  40ffea:	mov    rax,rsi
  40ffed:	shr    rax,0x20
  40fff1:	jne    410072 <__flatcc_fb_gen_c_verifier@@Base+0x982>
  40fff3:	mov    eax,0xffffffff
  40fff8:	xor    edx,edx
  40fffa:	div    esi
  40fffc:	jmp    410074 <__flatcc_fb_gen_c_verifier@@Base+0x984>
  40fffe:	mov    rax,QWORD PTR [rsp+0x10]
  410003:	mov    rdi,QWORD PTR [rax]
  410006:	mov    rdx,QWORD PTR [r15+0x88]
  41000d:	lea    rsi,[rip+0x31f38]        # 441f4c <_IO_stdin_used@@Base+0x13f4c>
  410014:	mov    ecx,r13d
  410017:	xor    eax,eax
  410019:	call   406180 <fprintf@plt>
  41001e:	jmp    40fe85 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  410023:	mov    rsi,QWORD PTR [r15+0x18]
  410027:	mov    rdi,QWORD PTR [rsi+0x18]
  41002b:	lea    rdx,[rsp+0x120]
  410033:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  410038:	mov    rax,QWORD PTR [r15+0x18]
  41003c:	movzx  eax,WORD PTR [rax+0x10]
  410040:	cmp    rax,0x4
  410044:	ja     41026e <__flatcc_fb_gen_c_verifier@@Base+0xb7e>
  41004a:	lea    rcx,[rip+0x317b7]        # 441808 <_IO_stdin_used@@Base+0x13808>
  410051:	movsxd rax,DWORD PTR [rcx+rax*4]
  410055:	add    rax,rcx
  410058:	jmp    rax
  41005a:	mov    rax,QWORD PTR [rsp+0x10]
  41005f:	mov    rdi,QWORD PTR [rax]
  410062:	mov    rdx,QWORD PTR [r15+0x88]
  410069:	lea    rsi,[rip+0x31f33]        # 441fa3 <_IO_stdin_used@@Base+0x13fa3>
  410070:	jmp    4100d7 <__flatcc_fb_gen_c_verifier@@Base+0x9e7>
  410072:	xor    eax,eax
  410074:	mov    QWORD PTR [rsp],rax
  410078:	lea    rsi,[rip+0x31e8e]        # 441f0d <_IO_stdin_used@@Base+0x13f0d>
  41007f:	mov    rdx,rcx
  410082:	mov    ecx,r13d
  410085:	xor    eax,eax
  410087:	call   406180 <fprintf@plt>
  41008c:	jmp    40fe85 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  410091:	mov    rax,QWORD PTR [rsp+0x10]
  410096:	mov    rdi,QWORD PTR [rax]
  410099:	mov    rdx,QWORD PTR [r15+0x88]
  4100a0:	lea    rsi,[rip+0x31fe8]        # 44208f <_IO_stdin_used@@Base+0x1408f>
  4100a7:	jmp    4100d7 <__flatcc_fb_gen_c_verifier@@Base+0x9e7>
  4100a9:	mov    rax,QWORD PTR [rsp+0x10]
  4100ae:	mov    rdi,QWORD PTR [rax]
  4100b1:	mov    rdx,QWORD PTR [r15+0x88]
  4100b8:	lea    rsi,[rip+0x32010]        # 4420cf <_IO_stdin_used@@Base+0x140cf>
  4100bf:	jmp    4100d7 <__flatcc_fb_gen_c_verifier@@Base+0x9e7>
  4100c1:	mov    rax,QWORD PTR [rsp+0x10]
  4100c6:	mov    rdi,QWORD PTR [rax]
  4100c9:	mov    rdx,QWORD PTR [r15+0x88]
  4100d0:	lea    rsi,[rip+0x31f05]        # 441fdc <_IO_stdin_used@@Base+0x13fdc>
  4100d7:	mov    ecx,r13d
  4100da:	lea    r8,[rsp+0x120]
  4100e2:	xor    eax,eax
  4100e4:	call   406180 <fprintf@plt>
  4100e9:	jmp    40fe85 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  4100ee:	movzx  r8d,WORD PTR [r15+0x72]
  4100f3:	lea    rsi,[rip+0x31d8d]        # 441e87 <_IO_stdin_used@@Base+0x13e87>
  4100fa:	mov    ecx,r13d
  4100fd:	mov    r9,rbx
  410100:	xor    eax,eax
  410102:	call   406180 <fprintf@plt>
  410107:	jmp    40fe85 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  41010c:	mov    rcx,QWORD PTR [r13+0x0]
  410110:	mov    esi,0xf
  410115:	mov    edx,0x1
  41011a:	lea    rdi,[rip+0x32033]        # 442154 <_IO_stdin_used@@Base+0x14154>
  410121:	call   406230 <fwrite@plt>
  410126:	jmp    40fcb8 <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
  41012b:	mov    rax,QWORD PTR [rsp+0x18]
  410130:	mov    rax,QWORD PTR [rax+0xe0]
  410137:	cmp    DWORD PTR [rax+0xac],0x0
  41013e:	je     41015a <__flatcc_fb_gen_c_verifier@@Base+0xa6a>
  410140:	mov    rcx,QWORD PTR [r13+0x0]
  410144:	lea    rdi,[rip+0x25994]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  41014b:	mov    esi,0x24
  410150:	mov    edx,0x1
  410155:	call   406230 <fwrite@plt>
  41015a:	mov    rax,QWORD PTR [rsp+0x18]
  41015f:	mov    rdi,QWORD PTR [rax+0xd0]
  410166:	mov    rax,QWORD PTR [rax+0xd8]
  41016d:	mov    rdx,QWORD PTR [rax+0x118]
  410174:	lea    rsi,[rip+0x322c7]        # 442442 <_IO_stdin_used@@Base+0x14442>
  41017b:	xor    eax,eax
  41017d:	call   406180 <fprintf@plt>
  410182:	xor    eax,eax
  410184:	lea    rsp,[rbp-0x28]
  410188:	pop    rbx
  410189:	pop    r12
  41018b:	pop    r13
  41018d:	pop    r14
  41018f:	pop    r15
  410191:	pop    rbp
  410192:	ret    
  410193:	mov    rax,QWORD PTR [rip+0x41e5e]        # 451ff8 <stderr@GLIBC_2.2.5>
  41019a:	mov    rdi,QWORD PTR [rax]
  41019d:	lea    rsi,[rip+0x1fa84]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4101a4:	lea    rbx,[rip+0x3180d]        # 4419b8 <_IO_stdin_used@@Base+0x139b8>
  4101ab:	lea    r8,[rip+0x3192a]        # 441adc <_IO_stdin_used@@Base+0x13adc>
  4101b2:	mov    rdx,rbx
  4101b5:	mov    ecx,0x53
  4101ba:	xor    eax,eax
  4101bc:	call   406180 <fprintf@plt>
  4101c1:	lea    rdi,[rip+0x309c7]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4101c8:	lea    rcx,[rip+0x31891]        # 441a60 <_IO_stdin_used@@Base+0x13a60>
  4101cf:	mov    rsi,rbx
  4101d2:	mov    edx,0x53
  4101d7:	call   406100 <__assert_fail@plt>
  4101dc:	mov    rax,QWORD PTR [rip+0x41e15]        # 451ff8 <stderr@GLIBC_2.2.5>
  4101e3:	mov    rdi,QWORD PTR [rax]
  4101e6:	lea    rsi,[rip+0x1fa3b]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4101ed:	lea    rbx,[rip+0x317c4]        # 4419b8 <_IO_stdin_used@@Base+0x139b8>
  4101f4:	lea    r8,[rip+0x31829]        # 441a24 <_IO_stdin_used@@Base+0x13a24>
  4101fb:	mov    rdx,rbx
  4101fe:	mov    ecx,0x4a
  410203:	xor    eax,eax
  410205:	call   406180 <fprintf@plt>
  41020a:	lea    rdi,[rip+0x3097e]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  410211:	lea    rcx,[rip+0x31848]        # 441a60 <_IO_stdin_used@@Base+0x13a60>
  410218:	mov    rsi,rbx
  41021b:	mov    edx,0x4a
  410220:	call   406100 <__assert_fail@plt>
  410225:	mov    rax,QWORD PTR [rip+0x41dcc]        # 451ff8 <stderr@GLIBC_2.2.5>
  41022c:	mov    rdi,QWORD PTR [rax]
  41022f:	lea    rsi,[rip+0x1f9f2]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  410236:	lea    rbx,[rip+0x3177b]        # 4419b8 <_IO_stdin_used@@Base+0x139b8>
  41023d:	lea    r8,[rip+0x31ecd]        # 442111 <_IO_stdin_used@@Base+0x14111>
  410244:	mov    rdx,rbx
  410247:	mov    ecx,0xca
  41024c:	xor    eax,eax
  41024e:	call   406180 <fprintf@plt>
  410253:	lea    rdi,[rip+0x30935]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  41025a:	lea    rcx,[rip+0x31df2]        # 442053 <_IO_stdin_used@@Base+0x14053>
  410261:	mov    rsi,rbx
  410264:	mov    edx,0xca
  410269:	call   406100 <__assert_fail@plt>
  41026e:	mov    rax,QWORD PTR [rip+0x41d83]        # 451ff8 <stderr@GLIBC_2.2.5>
  410275:	mov    rdi,QWORD PTR [rax]
  410278:	lea    rsi,[rip+0x1f9a9]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41027f:	lea    rbx,[rip+0x31732]        # 4419b8 <_IO_stdin_used@@Base+0x139b8>
  410286:	lea    r8,[rip+0x31d8a]        # 442017 <_IO_stdin_used@@Base+0x14017>
  41028d:	mov    rdx,rbx
  410290:	mov    ecx,0xb2
  410295:	xor    eax,eax
  410297:	call   406180 <fprintf@plt>
  41029c:	lea    rdi,[rip+0x308ec]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4102a3:	lea    rcx,[rip+0x31da9]        # 442053 <_IO_stdin_used@@Base+0x14053>
  4102aa:	mov    rsi,rbx
  4102ad:	mov    edx,0xb2
  4102b2:	call   406100 <__assert_fail@plt>
  4102b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004102c0 <__flatcc_fb_gen_c_json_parser@@Base>:
  4102c0:	push   rbp
  4102c1:	mov    rbp,rsp
  4102c4:	push   r15
  4102c6:	push   r14
  4102c8:	push   r13
  4102ca:	push   r12
  4102cc:	push   rbx
  4102cd:	and    rsp,0xffffffffffffffe0
  4102d1:	sub    rsp,0x2a0
  4102d8:	mov    r15,rdi
  4102db:	mov    rax,QWORD PTR [rdi+0xd8]
  4102e2:	mov    rdx,QWORD PTR [rax+0x118]
  4102e9:	lea    rsi,[rip+0x322e0]        # 4425d0 <_IO_stdin_used@@Base+0x145d0>
  4102f0:	xor    eax,eax
  4102f2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4102f7:	mov    rax,QWORD PTR [r15+0xd8]
  4102fe:	mov    rdx,QWORD PTR [rax+0x118]
  410305:	lea    rsi,[rip+0x322dd]        # 4425e9 <_IO_stdin_used@@Base+0x145e9>
  41030c:	mov    rdi,r15
  41030f:	xor    eax,eax
  410311:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410316:	lea    rbx,[rip+0x1fa26]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41031d:	mov    rdi,r15
  410320:	mov    rsi,rbx
  410323:	xor    eax,eax
  410325:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41032a:	lea    rsi,[rip+0x322d1]        # 442602 <_IO_stdin_used@@Base+0x14602>
  410331:	mov    rdi,r15
  410334:	xor    eax,eax
  410336:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41033b:	mov    rdi,r15
  41033e:	mov    rsi,rbx
  410341:	xor    eax,eax
  410343:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410348:	lea    rsi,[rip+0x32302]        # 442651 <_IO_stdin_used@@Base+0x14651>
  41034f:	mov    rdi,r15
  410352:	xor    eax,eax
  410354:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410359:	lea    rsi,[rip+0x1f6ff]        # 42fa5f <_IO_stdin_used@@Base+0x1a5f>
  410360:	lea    rdx,[rip+0x3228c]        # 4425f3 <_IO_stdin_used@@Base+0x145f3>
  410367:	mov    rdi,r15
  41036a:	call   407ec0 <__flatcc_fb_gen_c_includes@@Base>
  41036f:	mov    rax,QWORD PTR [r15+0xe0]
  410376:	cmp    DWORD PTR [rax+0xac],0x0
  41037d:	je     41039c <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
  41037f:	mov    rcx,QWORD PTR [r15+0xd0]
  410386:	lea    rdi,[rip+0x1f968]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  41038d:	mov    esi,0x24
  410392:	mov    edx,0x1
  410397:	call   406230 <fwrite@plt>
  41039c:	lea    rsi,[rip+0x1f9a0]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4103a3:	mov    rdi,r15
  4103a6:	xor    eax,eax
  4103a8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4103ad:	mov    rax,QWORD PTR [r15+0xd8]
  4103b4:	mov    rcx,QWORD PTR [rax+0x58]
  4103b8:	vpxor  xmm0,xmm0,xmm0
  4103bc:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  4103c5:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  4103ce:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  4103d7:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  4103e0:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  4103e6:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  4103ec:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  4103f2:	mov    QWORD PTR [rsp+0x100],0x0
  4103fe:	test   rcx,rcx
  410401:	je     410528 <__flatcc_fb_gen_c_json_parser@@Base+0x268>
  410407:	cmp    WORD PTR [rcx+0x10],0x1
  41040c:	ja     410528 <__flatcc_fb_gen_c_json_parser@@Base+0x268>
  410412:	lea    rsi,[rip+0x3225f]        # 442678 <_IO_stdin_used@@Base+0x14678>
  410419:	mov    rdi,r15
  41041c:	xor    eax,eax
  41041e:	vzeroupper 
  410421:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410426:	lea    rsi,[rip+0x3224e]        # 44267b <_IO_stdin_used@@Base+0x1467b>
  41042d:	mov    rdi,r15
  410430:	xor    eax,eax
  410432:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410437:	lea    rsi,[rip+0x32293]        # 4426d1 <_IO_stdin_used@@Base+0x146d1>
  41043e:	mov    rdi,r15
  410441:	xor    eax,eax
  410443:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410448:	lea    rsi,[rip+0x32285]        # 4426d4 <_IO_stdin_used@@Base+0x146d4>
  41044f:	mov    rdi,r15
  410452:	xor    eax,eax
  410454:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410459:	lea    rsi,[rip+0x322b8]        # 442718 <_IO_stdin_used@@Base+0x14718>
  410460:	mov    rdi,r15
  410463:	xor    eax,eax
  410465:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41046a:	lea    rsi,[rip+0x322dd]        # 44274e <_IO_stdin_used@@Base+0x1474e>
  410471:	mov    rdi,r15
  410474:	xor    eax,eax
  410476:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41047b:	lea    rsi,[rip+0x322f4]        # 442776 <_IO_stdin_used@@Base+0x14776>
  410482:	mov    rdi,r15
  410485:	xor    eax,eax
  410487:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41048c:	lea    rsi,[rip+0x3232b]        # 4427be <_IO_stdin_used@@Base+0x147be>
  410493:	mov    rdi,r15
  410496:	xor    eax,eax
  410498:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41049d:	lea    rsi,[rip+0x3312e]        # 4435d2 <_IO_stdin_used@@Base+0x155d2>
  4104a4:	mov    rdi,r15
  4104a7:	xor    eax,eax
  4104a9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4104ae:	mov    rax,QWORD PTR [r15+0xd8]
  4104b5:	mov    rdx,QWORD PTR [rax+0x110]
  4104bc:	lea    rsi,[rip+0x32339]        # 4427fc <_IO_stdin_used@@Base+0x147fc>
  4104c3:	mov    rdi,r15
  4104c6:	xor    eax,eax
  4104c8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4104cd:	add    DWORD PTR [r15+0xf0],0x2
  4104d5:	lea    rsi,[rip+0x32369]        # 442845 <_IO_stdin_used@@Base+0x14845>
  4104dc:	mov    rdi,r15
  4104df:	xor    eax,eax
  4104e1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4104e6:	mov    eax,DWORD PTR [r15+0xf0]
  4104ed:	test   eax,eax
  4104ef:	je     41287a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  4104f5:	mov    ecx,eax
  4104f7:	dec    ecx
  4104f9:	mov    DWORD PTR [r15+0xf0],ecx
  410500:	je     41287a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  410506:	add    eax,0xfffffffe
  410509:	mov    DWORD PTR [r15+0xf0],eax
  410510:	lea    rsi,[rip+0x1f82c]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  410517:	mov    rdi,r15
  41051a:	xor    eax,eax
  41051c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410521:	mov    rax,QWORD PTR [r15+0xd8]
  410528:	mov    rbx,QWORD PTR [rax+0x40]
  41052c:	test   rbx,rbx
  41052f:	je     4106cc <__flatcc_fb_gen_c_json_parser@@Base+0x40c>
  410535:	lea    r13,[rip+0x3200c]        # 442548 <_IO_stdin_used@@Base+0x14548>
  41053c:	lea    r14,[rsp+0x20]
  410541:	lea    r12,[rip+0x324f8]        # 442a40 <_IO_stdin_used@@Base+0x14a40>
  410548:	jmp    41057c <__flatcc_fb_gen_c_json_parser@@Base+0x2bc>
  41054a:	mov    rdi,QWORD PTR [rbx+0x18]
  41054e:	mov    rsi,rbx
  410551:	mov    rdx,r14
  410554:	vzeroupper 
  410557:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  41055c:	mov    rdi,r15
  41055f:	lea    rsi,[rip+0x32611]        # 442b77 <_IO_stdin_used@@Base+0x14b77>
  410566:	mov    rdx,r14
  410569:	xor    eax,eax
  41056b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410570:	mov    rbx,QWORD PTR [rbx]
  410573:	test   rbx,rbx
  410576:	je     4106c5 <__flatcc_fb_gen_c_json_parser@@Base+0x405>
  41057c:	movzx  eax,WORD PTR [rbx+0x10]
  410580:	cmp    rax,0x4
  410584:	ja     410570 <__flatcc_fb_gen_c_json_parser@@Base+0x2b0>
  410586:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  41058b:	add    rax,r13
  41058e:	jmp    rax
  410590:	mov    rdi,QWORD PTR [rbx+0x18]
  410594:	mov    rsi,rbx
  410597:	mov    rdx,r14
  41059a:	vzeroupper 
  41059d:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  4105a2:	mov    rdi,r15
  4105a5:	lea    rsi,[rip+0x324c7]        # 442a73 <_IO_stdin_used@@Base+0x14a73>
  4105ac:	mov    rdx,r14
  4105af:	xor    eax,eax
  4105b1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4105b6:	mov    rdi,r15
  4105b9:	lea    rsi,[rip+0x32533]        # 442af3 <_IO_stdin_used@@Base+0x14af3>
  4105c0:	jmp    410566 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6>
  4105c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105cc:	nop    DWORD PTR [rax+0x0]
  4105d0:	mov    rdi,QWORD PTR [rbx+0x18]
  4105d4:	mov    rsi,rbx
  4105d7:	mov    rdx,r14
  4105da:	vzeroupper 
  4105dd:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  4105e2:	mov    rdi,r15
  4105e5:	lea    rsi,[rip+0x323f1]        # 4429dd <_IO_stdin_used@@Base+0x149dd>
  4105ec:	mov    rdx,r14
  4105ef:	xor    eax,eax
  4105f1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4105f6:	add    DWORD PTR [r15+0xf0],0x2
  4105fe:	mov    rdi,r15
  410601:	mov    rsi,r12
  410604:	mov    rdx,r14
  410607:	xor    eax,eax
  410609:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41060e:	mov    eax,DWORD PTR [r15+0xf0]
  410615:	test   eax,eax
  410617:	je     412519 <__flatcc_fb_gen_c_json_parser@@Base+0x2259>
  41061d:	mov    ecx,eax
  41061f:	dec    ecx
  410621:	mov    DWORD PTR [r15+0xf0],ecx
  410628:	jne    4106b6 <__flatcc_fb_gen_c_json_parser@@Base+0x3f6>
  41062e:	jmp    412519 <__flatcc_fb_gen_c_json_parser@@Base+0x2259>
  410633:	mov    rdi,QWORD PTR [rbx+0x18]
  410637:	mov    rsi,rbx
  41063a:	mov    rdx,r14
  41063d:	vzeroupper 
  410640:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  410645:	mov    rdi,r15
  410648:	lea    rsi,[rip+0x322cb]        # 44291a <_IO_stdin_used@@Base+0x1491a>
  41064f:	mov    rdx,r14
  410652:	xor    eax,eax
  410654:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410659:	mov    rdi,r15
  41065c:	lea    rsi,[rip+0x32346]        # 4429a9 <_IO_stdin_used@@Base+0x149a9>
  410663:	mov    rdx,r14
  410666:	xor    eax,eax
  410668:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41066d:	mov    rdi,r15
  410670:	lea    rsi,[rip+0x32366]        # 4429dd <_IO_stdin_used@@Base+0x149dd>
  410677:	mov    rdx,r14
  41067a:	xor    eax,eax
  41067c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410681:	add    DWORD PTR [r15+0xf0],0x2
  410689:	mov    rdi,r15
  41068c:	mov    rsi,r12
  41068f:	xor    eax,eax
  410691:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410696:	mov    eax,DWORD PTR [r15+0xf0]
  41069d:	test   eax,eax
  41069f:	je     412538 <__flatcc_fb_gen_c_json_parser@@Base+0x2278>
  4106a5:	mov    ecx,eax
  4106a7:	dec    ecx
  4106a9:	mov    DWORD PTR [r15+0xf0],ecx
  4106b0:	je     412538 <__flatcc_fb_gen_c_json_parser@@Base+0x2278>
  4106b6:	add    eax,0xfffffffe
  4106b9:	mov    DWORD PTR [r15+0xf0],eax
  4106c0:	jmp    410570 <__flatcc_fb_gen_c_json_parser@@Base+0x2b0>
  4106c5:	mov    rax,QWORD PTR [r15+0xd8]
  4106cc:	mov    rdi,QWORD PTR [rax+0x68]
  4106d0:	lea    rsi,[rip+0x2489]        # 412b60 <__flatcc_fb_gen_c_json_parser@@Base+0x28a0>
  4106d7:	mov    rdx,r15
  4106da:	vzeroupper 
  4106dd:	call   41b260 <fb_scope_table_visit@@Base>
  4106e2:	mov    rax,QWORD PTR [r15+0xd8]
  4106e9:	mov    rdx,QWORD PTR [rax+0x110]
  4106f0:	lea    rsi,[rip+0x32503]        # 442bfa <_IO_stdin_used@@Base+0x14bfa>
  4106f7:	mov    rdi,r15
  4106fa:	xor    eax,eax
  4106fc:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410701:	add    DWORD PTR [r15+0xf0],0x2
  410709:	lea    rsi,[rip+0x32330]        # 442a40 <_IO_stdin_used@@Base+0x14a40>
  410710:	mov    rdi,r15
  410713:	xor    eax,eax
  410715:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41071a:	mov    eax,DWORD PTR [r15+0xf0]
  410721:	test   eax,eax
  410723:	je     41281d <__flatcc_fb_gen_c_json_parser@@Base+0x255d>
  410729:	mov    ecx,eax
  41072b:	dec    ecx
  41072d:	mov    DWORD PTR [r15+0xf0],ecx
  410734:	je     41281d <__flatcc_fb_gen_c_json_parser@@Base+0x255d>
  41073a:	add    eax,0xfffffffe
  41073d:	mov    DWORD PTR [r15+0xf0],eax
  410744:	lea    rsi,[rip+0x1f5f8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41074b:	mov    rdi,r15
  41074e:	xor    eax,eax
  410750:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410755:	mov    rax,QWORD PTR [r15+0xd8]
  41075c:	mov    r14,QWORD PTR [rax+0x40]
  410760:	test   r14,r14
  410763:	je     41195d <__flatcc_fb_gen_c_json_parser@@Base+0x169d>
  410769:	vpxor  xmm0,xmm0,xmm0
  41076d:	vbroadcastsd ymm1,QWORD PTR [rip+0x31d8a]        # 442500 <_IO_stdin_used@@Base+0x14500>
  410776:	vmovaps YMMWORD PTR [rsp+0x120],ymm1
  41077f:	vbroadcastsd ymm1,QWORD PTR [rip+0x31d80]        # 442508 <_IO_stdin_used@@Base+0x14508>
  410788:	vmovaps YMMWORD PTR [rsp+0x240],ymm1
  410791:	vpbroadcastq ymm1,QWORD PTR [rip+0x31d76]        # 442510 <_IO_stdin_used@@Base+0x14510>
  41079a:	vmovdqa YMMWORD PTR [rsp+0x260],ymm1
  4107a3:	lea    rbx,[rsp+0x20]
  4107a8:	lea    rcx,[rip+0x35463]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4107af:	lea    r13,[rip+0x1f58d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4107b6:	lea    r12,[rip+0x218ff]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  4107bd:	jmp    4107f1 <__flatcc_fb_gen_c_json_parser@@Base+0x531>
  4107bf:	nop
  4107c0:	mov    rdi,r15
  4107c3:	mov    rsi,r14
  4107c6:	vzeroupper 
  4107c9:	call   412bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
  4107ce:	lea    r13,[rip+0x1f56e]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4107d5:	lea    rcx,[rip+0x35436]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4107dc:	lea    rbx,[rsp+0x20]
  4107e1:	vpxor  xmm0,xmm0,xmm0
  4107e5:	mov    r14,QWORD PTR [r14]
  4107e8:	test   r14,r14
  4107eb:	je     411956 <__flatcc_fb_gen_c_json_parser@@Base+0x1696>
  4107f1:	movzx  eax,WORD PTR [r14+0x10]
  4107f6:	cmp    rax,0x4
  4107fa:	ja     4107e5 <__flatcc_fb_gen_c_json_parser@@Base+0x525>
  4107fc:	lea    rdx,[rip+0x31d59]        # 44255c <_IO_stdin_used@@Base+0x1455c>
  410803:	movsxd rax,DWORD PTR [rdx+rax*4]
  410807:	add    rax,rdx
  41080a:	jmp    rax
  41080c:	vmovdqu YMMWORD PTR [rsp+0x150],ymm0
  410815:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  41081e:	cmp    WORD PTR [r14+0x10],0x0
  410824:	jne    412557 <__flatcc_fb_gen_c_json_parser@@Base+0x2297>
  41082a:	mov    rdi,r14
  41082d:	lea    rsi,[rsp+0x1c]
  410832:	vzeroupper 
  410835:	call   413230 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
  41083a:	mov    QWORD PTR [rsp+0x140],rax
  410842:	mov    r12d,DWORD PTR [rsp+0x1c]
  410847:	test   rax,rax
  41084a:	jne    410855 <__flatcc_fb_gen_c_json_parser@@Base+0x595>
  41084c:	test   r12d,r12d
  41084f:	jg     412579 <__flatcc_fb_gen_c_json_parser@@Base+0x22b9>
  410855:	mov    QWORD PTR [rsp+0x158],r14
  41085d:	mov    QWORD PTR [rsp+0x160],0x0
  410869:	lea    rcx,[rip+0x4330]        # 414ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x48e0>
  410870:	mov    QWORD PTR [rsp+0x148],rcx
  410878:	lea    rcx,[rip+0x5181]        # 415a00 <__flatcc_fb_gen_c_json_parser@@Base+0x5740>
  41087f:	mov    QWORD PTR [rsp+0x150],rcx
  410887:	test   r12d,r12d
  41088a:	vpxor  xmm10,xmm10,xmm10
  41088f:	vmovdqa ymm11,YMMWORD PTR [rsp+0x120]
  410898:	vmovdqa ymm12,YMMWORD PTR [rsp+0x240]
  4108a1:	vpcmpeqd ymm13,ymm13,ymm13
  4108a6:	vmovdqa ymm14,YMMWORD PTR [rsp+0x260]
  4108af:	jle    41100c <__flatcc_fb_gen_c_json_parser@@Base+0xd4c>
  4108b5:	cmp    r12d,0x11
  4108b9:	jae    41133c <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
  4108bf:	xor    ecx,ecx
  4108c1:	xor    ebx,ebx
  4108c3:	jmp    411439 <__flatcc_fb_gen_c_json_parser@@Base+0x1179>
  4108c8:	vmovdqu YMMWORD PTR [rsp+0x150],ymm0
  4108d1:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  4108da:	cmp    WORD PTR [r14+0x10],0x1
  4108e0:	jne    4125c2 <__flatcc_fb_gen_c_json_parser@@Base+0x2302>
  4108e6:	mov    rdi,r14
  4108e9:	lea    rsi,[rsp+0x1c]
  4108ee:	vzeroupper 
  4108f1:	call   413230 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
  4108f6:	mov    QWORD PTR [rsp+0x140],rax
  4108fe:	mov    r13d,DWORD PTR [rsp+0x1c]
  410903:	test   rax,rax
  410906:	jne    410911 <__flatcc_fb_gen_c_json_parser@@Base+0x651>
  410908:	test   r13d,r13d
  41090b:	jg     4125e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
  410911:	mov    QWORD PTR [rsp+0x158],r14
  410919:	mov    DWORD PTR [rsp+0x160],0x1
  410924:	lea    rax,[rip+0x4275]        # 414ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x48e0>
  41092b:	mov    QWORD PTR [rsp+0x148],rax
  410933:	lea    rax,[rip+0x50c6]        # 415a00 <__flatcc_fb_gen_c_json_parser@@Base+0x5740>
  41093a:	mov    QWORD PTR [rsp+0x150],rax
  410942:	vpxor  xmm0,xmm0,xmm0
  410946:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  41094c:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410952:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410958:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410961:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  41096a:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410973:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  41097c:	mov    QWORD PTR [rsp+0x100],0x0
  410988:	mov    rdi,QWORD PTR [r14+0x18]
  41098c:	mov    rsi,r14
  41098f:	lea    rbx,[rsp+0x20]
  410994:	mov    rdx,rbx
  410997:	vzeroupper 
  41099a:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  41099f:	mov    rdi,r15
  4109a2:	lea    rsi,[rip+0x32ce6]        # 44368f <_IO_stdin_used@@Base+0x1568f>
  4109a9:	mov    rdx,rbx
  4109ac:	xor    eax,eax
  4109ae:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109b3:	mov    rdi,r15
  4109b6:	lea    rsi,[rip+0x35255]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4109bd:	xor    eax,eax
  4109bf:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109c4:	inc    DWORD PTR [r15+0xf0]
  4109cb:	mov    rdi,r15
  4109ce:	lea    rsi,[rip+0x32d39]        # 44370e <_IO_stdin_used@@Base+0x1570e>
  4109d5:	xor    eax,eax
  4109d7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109dc:	test   r13d,r13d
  4109df:	jle    410a25 <__flatcc_fb_gen_c_json_parser@@Base+0x765>
  4109e1:	mov    rdi,r15
  4109e4:	lea    rsi,[rip+0x32d2d]        # 443718 <_IO_stdin_used@@Base+0x15718>
  4109eb:	xor    eax,eax
  4109ed:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109f2:	mov    rdi,r15
  4109f5:	lea    rsi,[rip+0x32d36]        # 443732 <_IO_stdin_used@@Base+0x15732>
  4109fc:	xor    eax,eax
  4109fe:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a03:	mov    rdi,r15
  410a06:	lea    rsi,[rip+0x3283b]        # 443248 <_IO_stdin_used@@Base+0x15248>
  410a0d:	xor    eax,eax
  410a0f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a14:	mov    rdi,r15
  410a17:	lea    rsi,[rip+0x3283c]        # 44325a <_IO_stdin_used@@Base+0x1525a>
  410a1e:	xor    eax,eax
  410a20:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a25:	mov    rdi,r15
  410a28:	lea    rsi,[rip+0x1f314]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  410a2f:	xor    eax,eax
  410a31:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a36:	mov    rdi,r15
  410a39:	lea    rsi,[rip+0x32cfe]        # 44373e <_IO_stdin_used@@Base+0x1573e>
  410a40:	xor    eax,eax
  410a42:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a47:	mov    rdi,r15
  410a4a:	lea    rsi,[rip+0x32d2a]        # 44377b <_IO_stdin_used@@Base+0x1577b>
  410a51:	xor    eax,eax
  410a53:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a58:	inc    DWORD PTR [r15+0xf0]
  410a5f:	mov    rdi,r15
  410a62:	test   r13d,r13d
  410a65:	je     411013 <__flatcc_fb_gen_c_json_parser@@Base+0xd53>
  410a6b:	lea    rsi,[rip+0x32d66]        # 4437d8 <_IO_stdin_used@@Base+0x157d8>
  410a72:	xor    eax,eax
  410a74:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a79:	mov    rdi,r15
  410a7c:	lea    rsi,[rip+0x327e3]        # 443266 <_IO_stdin_used@@Base+0x15266>
  410a83:	xor    eax,eax
  410a85:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a8a:	lea    ecx,[r13-0x1]
  410a8e:	mov    rdi,r15
  410a91:	lea    rsi,[rsp+0x140]
  410a99:	xor    edx,edx
  410a9b:	xor    r8d,r8d
  410a9e:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  410aa3:	jmp    411032 <__flatcc_fb_gen_c_json_parser@@Base+0xd72>
  410aa8:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410aae:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410ab4:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410aba:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410ac3:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410acc:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410ad5:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410ade:	mov    QWORD PTR [rsp+0x100],0x0
  410aea:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  410af3:	vmovdqa YMMWORD PTR [rsp+0x160],ymm0
  410afc:	vmovdqa YMMWORD PTR [rsp+0x180],ymm0
  410b05:	vmovdqa YMMWORD PTR [rsp+0x1a0],ymm0
  410b0e:	vmovdqa YMMWORD PTR [rsp+0x1c0],ymm0
  410b17:	vmovdqa YMMWORD PTR [rsp+0x1e0],ymm0
  410b20:	vmovdqa YMMWORD PTR [rsp+0x200],ymm0
  410b29:	mov    QWORD PTR [rsp+0x220],0x0
  410b35:	mov    rdi,QWORD PTR [r14+0x18]
  410b39:	mov    r12,rcx
  410b3c:	mov    rsi,r14
  410b3f:	mov    rdx,rbx
  410b42:	vzeroupper 
  410b45:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  410b4a:	mov    rdi,r15
  410b4d:	lea    rsi,[rip+0x3217d]        # 442cd1 <_IO_stdin_used@@Base+0x14cd1>
  410b54:	mov    rdx,rbx
  410b57:	xor    eax,eax
  410b59:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b5e:	mov    rdi,r15
  410b61:	mov    rsi,r12
  410b64:	xor    eax,eax
  410b66:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b6b:	inc    DWORD PTR [r15+0xf0]
  410b72:	mov    rdi,r15
  410b75:	mov    rsi,r13
  410b78:	xor    eax,eax
  410b7a:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b7f:	mov    rdi,r15
  410b82:	lea    rsi,[rip+0x321d8]        # 442d61 <_IO_stdin_used@@Base+0x14d61>
  410b89:	xor    eax,eax
  410b8b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b90:	mov    rdi,r15
  410b93:	lea    rsi,[rip+0x321d4]        # 442d6e <_IO_stdin_used@@Base+0x14d6e>
  410b9a:	xor    eax,eax
  410b9c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ba1:	mov    rdi,r15
  410ba4:	lea    rsi,[rip+0x321d3]        # 442d7e <_IO_stdin_used@@Base+0x14d7e>
  410bab:	xor    eax,eax
  410bad:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410bb2:	inc    DWORD PTR [r15+0xf0]
  410bb9:	mov    rdi,r15
  410bbc:	lea    rsi,[rip+0x321ce]        # 442d91 <_IO_stdin_used@@Base+0x14d91>
  410bc3:	xor    eax,eax
  410bc5:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410bca:	mov    eax,DWORD PTR [r15+0xf0]
  410bd1:	test   eax,eax
  410bd3:	je     41262d <__flatcc_fb_gen_c_json_parser@@Base+0x236d>
  410bd9:	dec    eax
  410bdb:	mov    DWORD PTR [r15+0xf0],eax
  410be2:	mov    r12,QWORD PTR [r14+0x28]
  410be6:	test   r12,r12
  410be9:	jne    410c5a <__flatcc_fb_gen_c_json_parser@@Base+0x99a>
  410beb:	jmp    410d1b <__flatcc_fb_gen_c_json_parser@@Base+0xa5b>
  410bf0:	mov    edx,DWORD PTR [r12+0x48]
  410bf5:	mov    rdi,r15
  410bf8:	lea    rsi,[rip+0x321fb]        # 442dfa <_IO_stdin_used@@Base+0x14dfa>
  410bff:	mov    ecx,r13d
  410c02:	mov    r8,rbx
  410c05:	xor    eax,eax
  410c07:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c0c:	inc    DWORD PTR [r15+0xf0]
  410c13:	mov    rdi,r15
  410c16:	lea    rsi,[rip+0x32294]        # 442eb1 <_IO_stdin_used@@Base+0x14eb1>
  410c1d:	xor    eax,eax
  410c1f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c24:	mov    rdi,r15
  410c27:	lea    rsi,[rip+0x3227c]        # 442eaa <_IO_stdin_used@@Base+0x14eaa>
  410c2e:	xor    eax,eax
  410c30:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c35:	mov    eax,DWORD PTR [r15+0xf0]
  410c3c:	test   eax,eax
  410c3e:	je     412492 <__flatcc_fb_gen_c_json_parser@@Base+0x21d2>
  410c44:	dec    eax
  410c46:	mov    DWORD PTR [r15+0xf0],eax
  410c4d:	mov    r12,QWORD PTR [r12]
  410c51:	test   r12,r12
  410c54:	je     410d1b <__flatcc_fb_gen_c_json_parser@@Base+0xa5b>
  410c5a:	movzx  eax,WORD PTR [r12+0x28]
  410c60:	test   ax,ax
  410c63:	je     410c4d <__flatcc_fb_gen_c_json_parser@@Base+0x98d>
  410c65:	mov    rcx,QWORD PTR [r12+0x8]
  410c6a:	mov    r13d,DWORD PTR [rcx+0x8]
  410c6e:	mov    rbx,QWORD PTR [rcx]
  410c71:	cmp    ax,0xa
  410c75:	je     410bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x930>
  410c7b:	cmp    ax,0xe
  410c7f:	jne    412449 <__flatcc_fb_gen_c_json_parser@@Base+0x2189>
  410c85:	mov    rsi,QWORD PTR [r12+0x18]
  410c8a:	mov    rdi,QWORD PTR [rsi+0x18]
  410c8e:	lea    rdx,[rsp+0x140]
  410c96:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  410c9b:	mov    edx,DWORD PTR [r12+0x48]
  410ca0:	mov    rdi,r15
  410ca3:	lea    rsi,[rip+0x32150]        # 442dfa <_IO_stdin_used@@Base+0x14dfa>
  410caa:	mov    ecx,r13d
  410cad:	mov    r8,rbx
  410cb0:	xor    eax,eax
  410cb2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410cb7:	inc    DWORD PTR [r15+0xf0]
  410cbe:	mov    rax,QWORD PTR [r12+0x18]
  410cc3:	movzx  eax,WORD PTR [rax+0x10]
  410cc7:	lea    rsi,[rip+0x32140]        # 442e0e <_IO_stdin_used@@Base+0x14e0e>
  410cce:	test   ax,ax
  410cd1:	je     410ce4 <__flatcc_fb_gen_c_json_parser@@Base+0xa24>
  410cd3:	cmp    ax,0x1
  410cd7:	jne    4124b1 <__flatcc_fb_gen_c_json_parser@@Base+0x21f1>
  410cdd:	lea    rsi,[rip+0x3215c]        # 442e40 <_IO_stdin_used@@Base+0x14e40>
  410ce4:	mov    rdi,r15
  410ce7:	lea    rdx,[rsp+0x140]
  410cef:	xor    eax,eax
  410cf1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410cf6:	mov    rdi,r15
  410cf9:	lea    rsi,[rip+0x321aa]        # 442eaa <_IO_stdin_used@@Base+0x14eaa>
  410d00:	xor    eax,eax
  410d02:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410d07:	mov    eax,DWORD PTR [r15+0xf0]
  410d0e:	test   eax,eax
  410d10:	jne    410c44 <__flatcc_fb_gen_c_json_parser@@Base+0x984>
  410d16:	jmp    4124fa <__flatcc_fb_gen_c_json_parser@@Base+0x223a>
  410d1b:	mov    rdi,r15
  410d1e:	lea    rsi,[rip+0x321f8]        # 442f1d <_IO_stdin_used@@Base+0x14f1d>
  410d25:	xor    eax,eax
  410d27:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410d2c:	inc    DWORD PTR [r15+0xf0]
  410d33:	mov    rdi,r15
  410d36:	lea    rsi,[rip+0x321e9]        # 442f26 <_IO_stdin_used@@Base+0x14f26>
  410d3d:	xor    eax,eax
  410d3f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410d44:	inc    DWORD PTR [r15+0xf0]
  410d4b:	mov    rdi,r15
  410d4e:	lea    rsi,[rip+0x3220a]        # 442f5f <_IO_stdin_used@@Base+0x14f5f>
  410d55:	xor    eax,eax
  410d57:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410d5c:	mov    eax,DWORD PTR [r15+0xf0]
  410d63:	test   eax,eax
  410d65:	je     41264c <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
  410d6b:	dec    eax
  410d6d:	mov    DWORD PTR [r15+0xf0],eax
  410d74:	mov    rdi,r15
  410d77:	lea    rsi,[rip+0x3223d]        # 442fbb <_IO_stdin_used@@Base+0x14fbb>
  410d7e:	xor    eax,eax
  410d80:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410d85:	inc    DWORD PTR [r15+0xf0]
  410d8c:	mov    rdi,r15
  410d8f:	lea    rsi,[rip+0x3222e]        # 442fc4 <_IO_stdin_used@@Base+0x14fc4>
  410d96:	xor    eax,eax
  410d98:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410d9d:	mov    eax,DWORD PTR [r15+0xf0]
  410da4:	test   eax,eax
  410da6:	je     41266b <__flatcc_fb_gen_c_json_parser@@Base+0x23ab>
  410dac:	dec    eax
  410dae:	mov    DWORD PTR [r15+0xf0],eax
  410db5:	mov    rdi,r15
  410db8:	lea    r12,[rip+0x212fd]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  410dbf:	mov    rsi,r12
  410dc2:	xor    eax,eax
  410dc4:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410dc9:	mov    eax,DWORD PTR [r15+0xf0]
  410dd0:	test   eax,eax
  410dd2:	je     41268a <__flatcc_fb_gen_c_json_parser@@Base+0x23ca>
  410dd8:	dec    eax
  410dda:	mov    DWORD PTR [r15+0xf0],eax
  410de1:	mov    rdi,r15
  410de4:	mov    rsi,r12
  410de7:	xor    eax,eax
  410de9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410dee:	mov    rdi,r15
  410df1:	lea    rsi,[rip+0x32203]        # 442ffb <_IO_stdin_used@@Base+0x14ffb>
  410df8:	xor    eax,eax
  410dfa:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410dff:	mov    rdi,r15
  410e02:	lea    rsi,[rip+0x3220e]        # 443017 <_IO_stdin_used@@Base+0x15017>
  410e09:	xor    eax,eax
  410e0b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e10:	inc    DWORD PTR [r15+0xf0]
  410e17:	mov    rdi,r15
  410e1a:	lea    rsi,[rip+0x32206]        # 443027 <_IO_stdin_used@@Base+0x15027>
  410e21:	xor    eax,eax
  410e23:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e28:	mov    eax,DWORD PTR [r15+0xf0]
  410e2f:	test   eax,eax
  410e31:	je     4126a9 <__flatcc_fb_gen_c_json_parser@@Base+0x23e9>
  410e37:	dec    eax
  410e39:	mov    DWORD PTR [r15+0xf0],eax
  410e40:	mov    rdi,r15
  410e43:	mov    rsi,r12
  410e46:	xor    eax,eax
  410e48:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e4d:	mov    rdi,r15
  410e50:	lea    rsi,[rip+0x321b4]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  410e57:	xor    eax,eax
  410e59:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e5e:	mov    eax,DWORD PTR [r15+0xf0]
  410e65:	test   eax,eax
  410e67:	je     4126c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
  410e6d:	dec    eax
  410e6f:	mov    DWORD PTR [r15+0xf0],eax
  410e76:	mov    rdi,r15
  410e79:	mov    rsi,r12
  410e7c:	xor    eax,eax
  410e7e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e83:	mov    rdi,r15
  410e86:	lea    rsi,[rip+0x1eeb6]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  410e8d:	xor    eax,eax
  410e8f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e94:	vpxor  xmm0,xmm0,xmm0
  410e98:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410ea1:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410eaa:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410eb3:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410ebc:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410ec2:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410ec8:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410ece:	mov    QWORD PTR [rsp+0x100],0x0
  410eda:	mov    rdi,QWORD PTR [r14+0x18]
  410ede:	mov    rsi,r14
  410ee1:	lea    rbx,[rsp+0x20]
  410ee6:	mov    rdx,rbx
  410ee9:	vzeroupper 
  410eec:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  410ef1:	mov    rdi,r15
  410ef4:	lea    rsi,[rip+0x32182]        # 44307d <_IO_stdin_used@@Base+0x1507d>
  410efb:	mov    rdx,rbx
  410efe:	xor    eax,eax
  410f00:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f05:	mov    rdi,r15
  410f08:	lea    rsi,[rip+0x34d03]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  410f0f:	xor    eax,eax
  410f11:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f16:	inc    DWORD PTR [r15+0xf0]
  410f1d:	mov    rdi,r15
  410f20:	lea    rsi,[rip+0x31e47]        # 442d6e <_IO_stdin_used@@Base+0x14d6e>
  410f27:	xor    eax,eax
  410f29:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f2e:	mov    rbx,QWORD PTR [r14+0x28]
  410f32:	test   rbx,rbx
  410f35:	jne    410f66 <__flatcc_fb_gen_c_json_parser@@Base+0xca6>
  410f37:	jmp    410f86 <__flatcc_fb_gen_c_json_parser@@Base+0xcc6>
  410f39:	nop    DWORD PTR [rax+0x0]
  410f40:	mov    rax,QWORD PTR [rbx+0x8]
  410f44:	mov    r8,QWORD PTR [rax]
  410f47:	mov    ecx,DWORD PTR [rax+0x8]
  410f4a:	mov    edx,DWORD PTR [rbx+0x48]
  410f4d:	mov    rdi,r15
  410f50:	lea    rsi,[rip+0x32176]        # 4430cd <_IO_stdin_used@@Base+0x150cd>
  410f57:	xor    eax,eax
  410f59:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f5e:	mov    rbx,QWORD PTR [rbx]
  410f61:	test   rbx,rbx
  410f64:	je     410f86 <__flatcc_fb_gen_c_json_parser@@Base+0xcc6>
  410f66:	cmp    WORD PTR [rbx+0x28],0x0
  410f6b:	jne    410f40 <__flatcc_fb_gen_c_json_parser@@Base+0xc80>
  410f6d:	mov    rdi,r15
  410f70:	lea    rsi,[rip+0x32139]        # 4430b0 <_IO_stdin_used@@Base+0x150b0>
  410f77:	xor    eax,eax
  410f79:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f7e:	mov    rbx,QWORD PTR [rbx]
  410f81:	test   rbx,rbx
  410f84:	jne    410f66 <__flatcc_fb_gen_c_json_parser@@Base+0xca6>
  410f86:	mov    rdi,r15
  410f89:	lea    rsi,[rip+0x3215b]        # 4430eb <_IO_stdin_used@@Base+0x150eb>
  410f90:	xor    eax,eax
  410f92:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f97:	mov    eax,DWORD PTR [r15+0xf0]
  410f9e:	mov    ecx,eax
  410fa0:	inc    ecx
  410fa2:	mov    DWORD PTR [r15+0xf0],ecx
  410fa9:	je     4126e7 <__flatcc_fb_gen_c_json_parser@@Base+0x2427>
  410faf:	mov    DWORD PTR [r15+0xf0],eax
  410fb6:	mov    rdi,r15
  410fb9:	mov    rsi,r12
  410fbc:	xor    eax,eax
  410fbe:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410fc3:	mov    eax,DWORD PTR [r15+0xf0]
  410fca:	test   eax,eax
  410fcc:	je     412706 <__flatcc_fb_gen_c_json_parser@@Base+0x2446>
  410fd2:	dec    eax
  410fd4:	mov    DWORD PTR [r15+0xf0],eax
  410fdb:	mov    rdi,r15
  410fde:	mov    rsi,r12
  410fe1:	xor    eax,eax
  410fe3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410fe8:	mov    rdi,r15
  410feb:	lea    r13,[rip+0x1ed51]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  410ff2:	mov    rsi,r13
  410ff5:	xor    eax,eax
  410ff7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ffc:	mov    rdi,r15
  410fff:	mov    rsi,r14
  411002:	call   412bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
  411007:	jmp    411327 <__flatcc_fb_gen_c_json_parser@@Base+0x1067>
  41100c:	xor    ebx,ebx
  41100e:	jmp    411466 <__flatcc_fb_gen_c_json_parser@@Base+0x11a6>
  411013:	lea    rsi,[rip+0x32770]        # 44378a <_IO_stdin_used@@Base+0x1578a>
  41101a:	xor    eax,eax
  41101c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411021:	mov    rdi,r15
  411024:	lea    rsi,[rip+0x32773]        # 44379e <_IO_stdin_used@@Base+0x1579e>
  41102b:	xor    eax,eax
  41102d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411032:	mov    rdi,r15
  411035:	lea    rsi,[rip+0x327d2]        # 44380e <_IO_stdin_used@@Base+0x1580e>
  41103c:	xor    eax,eax
  41103e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411043:	mov    eax,DWORD PTR [r15+0xf0]
  41104a:	test   eax,eax
  41104c:	je     412725 <__flatcc_fb_gen_c_json_parser@@Base+0x2465>
  411052:	dec    eax
  411054:	mov    DWORD PTR [r15+0xf0],eax
  41105b:	mov    rdi,r15
  41105e:	mov    rsi,r12
  411061:	xor    eax,eax
  411063:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411068:	mov    rdi,r15
  41106b:	lea    rsi,[rip+0x31f99]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  411072:	xor    eax,eax
  411074:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411079:	test   r13d,r13d
  41107c:	jle    4110c7 <__flatcc_fb_gen_c_json_parser@@Base+0xe07>
  41107e:	mov    eax,DWORD PTR [r15+0xf0]
  411085:	mov    DWORD PTR [r15+0xf8],eax
  41108c:	mov    DWORD PTR [r15+0xf0],0x0
  411097:	mov    rdi,r15
  41109a:	lea    rsi,[rip+0x327a9]        # 44384a <_IO_stdin_used@@Base+0x1584a>
  4110a1:	xor    eax,eax
  4110a3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4110a8:	mov    eax,DWORD PTR [r15+0xf8]
  4110af:	mov    DWORD PTR [r15+0xf0],eax
  4110b6:	mov    rdi,r15
  4110b9:	lea    rsi,[rip+0x31f67]        # 443027 <_IO_stdin_used@@Base+0x15027>
  4110c0:	xor    eax,eax
  4110c2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4110c7:	mov    eax,DWORD PTR [r15+0xf0]
  4110ce:	test   eax,eax
  4110d0:	je     412744 <__flatcc_fb_gen_c_json_parser@@Base+0x2484>
  4110d6:	dec    eax
  4110d8:	mov    DWORD PTR [r15+0xf0],eax
  4110df:	mov    rdi,r15
  4110e2:	mov    rsi,r12
  4110e5:	xor    eax,eax
  4110e7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4110ec:	mov    rdi,r15
  4110ef:	lea    rsi,[rip+0x1ec4d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4110f6:	xor    eax,eax
  4110f8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4110fd:	mov    rdi,QWORD PTR [rsp+0x140]
  411105:	test   rdi,rdi
  411108:	je     41110f <__flatcc_fb_gen_c_json_parser@@Base+0xe4f>
  41110a:	call   406040 <free@plt>
  41110f:	cmp    WORD PTR [r14+0x10],0x1
  411115:	jne    412763 <__flatcc_fb_gen_c_json_parser@@Base+0x24a3>
  41111b:	vpxor  xmm0,xmm0,xmm0
  41111f:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  411128:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  411131:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  41113a:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  411143:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  411149:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  41114f:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411155:	mov    QWORD PTR [rsp+0x100],0x0
  411161:	mov    rdi,QWORD PTR [r14+0x18]
  411165:	mov    rsi,r14
  411168:	lea    rbx,[rsp+0x20]
  41116d:	mov    rdx,rbx
  411170:	vzeroupper 
  411173:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  411178:	mov    rdi,r15
  41117b:	lea    rsi,[rip+0x331a4]        # 444326 <_IO_stdin_used@@Base+0x16326>
  411182:	mov    rdx,rbx
  411185:	xor    eax,eax
  411187:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41118c:	mov    rdi,r15
  41118f:	lea    r13,[rip+0x34a7c]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  411196:	mov    rsi,r13
  411199:	xor    eax,eax
  41119b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111a0:	inc    DWORD PTR [r15+0xf0]
  4111a7:	mov    rdi,r15
  4111aa:	lea    rsi,[rip+0x32581]        # 443732 <_IO_stdin_used@@Base+0x15732>
  4111b1:	xor    eax,eax
  4111b3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111b8:	mov    rdi,r15
  4111bb:	lea    r13,[rip+0x1eb81]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4111c2:	mov    rsi,r13
  4111c5:	xor    eax,eax
  4111c7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111cc:	mov    rdi,r15
  4111cf:	lea    rsi,[rip+0x31b8b]        # 442d61 <_IO_stdin_used@@Base+0x14d61>
  4111d6:	xor    eax,eax
  4111d8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111dd:	mov    rdx,QWORD PTR [r14+0xb8]
  4111e4:	movzx  ecx,WORD PTR [r14+0xb0]
  4111ec:	mov    rdi,r15
  4111ef:	lea    rsi,[rip+0x331b3]        # 4443a9 <_IO_stdin_used@@Base+0x163a9>
  4111f6:	xor    eax,eax
  4111f8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111fd:	mov    rdi,r15
  411200:	lea    rsi,[rip+0x32c65]        # 443e6c <_IO_stdin_used@@Base+0x15e6c>
  411207:	mov    rdx,rbx
  41120a:	xor    eax,eax
  41120c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411211:	mov    rdi,r15
  411214:	lea    rsi,[rip+0x331d9]        # 4443f4 <_IO_stdin_used@@Base+0x163f4>
  41121b:	xor    eax,eax
  41121d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411222:	mov    rdi,r15
  411225:	lea    rsi,[rip+0x31ddf]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  41122c:	xor    eax,eax
  41122e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411233:	mov    eax,DWORD PTR [r15+0xf0]
  41123a:	mov    DWORD PTR [r15+0xf8],eax
  411241:	mov    DWORD PTR [r15+0xf0],0x0
  41124c:	mov    rdi,r15
  41124f:	lea    rsi,[rip+0x325f4]        # 44384a <_IO_stdin_used@@Base+0x1584a>
  411256:	xor    eax,eax
  411258:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41125d:	mov    eax,DWORD PTR [r15+0xf8]
  411264:	mov    DWORD PTR [r15+0xf0],eax
  41126b:	mov    rdi,r15
  41126e:	lea    rsi,[rip+0x31db2]        # 443027 <_IO_stdin_used@@Base+0x15027>
  411275:	xor    eax,eax
  411277:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41127c:	mov    eax,DWORD PTR [r15+0xf0]
  411283:	test   eax,eax
  411285:	je     412782 <__flatcc_fb_gen_c_json_parser@@Base+0x24c2>
  41128b:	dec    eax
  41128d:	mov    DWORD PTR [r15+0xf0],eax
  411294:	mov    rdi,r15
  411297:	lea    r12,[rip+0x20e1e]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  41129e:	mov    rsi,r12
  4112a1:	xor    eax,eax
  4112a3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112a8:	mov    rdi,r15
  4112ab:	mov    rsi,r13
  4112ae:	xor    eax,eax
  4112b0:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112b5:	mov    rdi,r15
  4112b8:	lea    rsi,[rip+0x33186]        # 444445 <_IO_stdin_used@@Base+0x16445>
  4112bf:	mov    rdx,rbx
  4112c2:	xor    eax,eax
  4112c4:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112c9:	mov    rdi,r15
  4112cc:	lea    rsi,[rip+0x3493f]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4112d3:	xor    eax,eax
  4112d5:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112da:	inc    DWORD PTR [r15+0xf0]
  4112e1:	mov    rdi,r15
  4112e4:	lea    rsi,[rip+0x331ee]        # 4444d9 <_IO_stdin_used@@Base+0x164d9>
  4112eb:	mov    rdx,rbx
  4112ee:	xor    eax,eax
  4112f0:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112f5:	mov    eax,DWORD PTR [r15+0xf0]
  4112fc:	test   eax,eax
  4112fe:	je     4127a1 <__flatcc_fb_gen_c_json_parser@@Base+0x24e1>
  411304:	dec    eax
  411306:	mov    DWORD PTR [r15+0xf0],eax
  41130d:	mov    rdi,r15
  411310:	mov    rsi,r12
  411313:	xor    eax,eax
  411315:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41131a:	mov    rdi,r15
  41131d:	mov    rsi,r13
  411320:	xor    eax,eax
  411322:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411327:	vpxor  xmm0,xmm0,xmm0
  41132b:	lea    rbx,[rsp+0x20]
  411330:	lea    rcx,[rip+0x348db]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  411337:	jmp    4107e5 <__flatcc_fb_gen_c_json_parser@@Base+0x525>
  41133c:	mov    edx,r12d
  41133f:	and    edx,0xf
  411342:	test   rdx,rdx
  411345:	mov    ecx,0x10
  41134a:	cmove  rdx,rcx
  41134e:	mov    rcx,r12
  411351:	sub    rcx,rdx
  411354:	vpxor  xmm8,xmm8,xmm8
  411359:	mov    rdx,rcx
  41135c:	vmovdqa ymm1,YMMWORD PTR [rip+0x3111c]        # 442480 <_IO_stdin_used@@Base+0x14480>
  411364:	vmovdqa ymm2,YMMWORD PTR [rip+0x310f4]        # 442460 <_IO_stdin_used@@Base+0x14460>
  41136c:	vpxor  xmm3,xmm3,xmm3
  411370:	vpsllq ymm4,ymm1,0x5
  411375:	vmovq  xmm5,rax
  41137a:	vpbroadcastq ymm5,xmm5
  41137f:	vpaddq ymm4,ymm5,ymm4
  411383:	vpaddq ymm6,ymm4,ymm11
  411388:	vpsllq ymm7,ymm2,0x5
  41138d:	vpaddq ymm5,ymm5,ymm7
  411391:	vpaddq ymm7,ymm5,ymm11
  411396:	vpaddq ymm9,ymm4,ymm12
  41139b:	vpaddq ymm5,ymm5,ymm12
  4113a0:	vpcmpeqd xmm0,xmm0,xmm0
  4113a4:	vpgatherqd xmm4,DWORD PTR [ymm7*1+0x0],xmm0
  4113ae:	vpcmpeqd xmm0,xmm0,xmm0
  4113b2:	vpgatherqd xmm7,DWORD PTR [ymm6*1+0x0],xmm0
  4113bc:	vpcmpeqd xmm0,xmm0,xmm0
  4113c0:	vpgatherqd xmm6,DWORD PTR [ymm5*1+0x0],xmm0
  4113ca:	vpcmpeqd xmm0,xmm0,xmm0
  4113ce:	vpgatherqd xmm5,DWORD PTR [ymm9*1+0x0],xmm0
  4113d8:	vinserti128 ymm0,ymm7,xmm4,0x1
  4113de:	vinserti128 ymm4,ymm5,xmm6,0x1
  4113e4:	vpcmpeqd ymm0,ymm0,ymm10
  4113e9:	vpaddd ymm0,ymm8,ymm0
  4113ed:	vpcmpeqd ymm4,ymm4,ymm10
  4113f2:	vpaddd ymm3,ymm3,ymm4
  4113f6:	vpsubd ymm8,ymm0,ymm13
  4113fb:	vpsubd ymm3,ymm3,ymm13
  411400:	vpaddq ymm1,ymm1,ymm14
  411405:	vpaddq ymm2,ymm2,ymm14
  41140a:	add    rdx,0xfffffffffffffff0
  41140e:	jne    411370 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
  411414:	vpaddd ymm0,ymm3,ymm8
  411419:	vextracti128 xmm1,ymm0,0x1
  41141f:	vpaddd xmm0,xmm0,xmm1
  411423:	vpshufd xmm1,xmm0,0x4e
  411428:	vpaddd xmm0,xmm0,xmm1
  41142c:	vpshufd xmm1,xmm0,0xe5
  411431:	vpaddd xmm0,xmm0,xmm1
  411435:	vmovd  ebx,xmm0
  411439:	mov    rdx,r12
  41143c:	sub    rdx,rcx
  41143f:	shl    rcx,0x5
  411443:	add    rax,rcx
  411446:	add    rax,0x18
  41144a:	nop    WORD PTR [rax+rax*1+0x0]
  411450:	cmp    DWORD PTR [rax],0x1
  411453:	sbb    ebx,0xffffffff
  411456:	add    rax,0x20
  41145a:	dec    rdx
  41145d:	jne    411450 <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
  41145f:	mov    DWORD PTR [rsp+0x164],ebx
  411466:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm10
  41146f:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm10
  411478:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm10
  411481:	vmovdqa YMMWORD PTR [rsp+0x80],ymm10
  41148a:	vmovdqa YMMWORD PTR [rsp+0x60],ymm10
  411490:	vmovdqa YMMWORD PTR [rsp+0x40],ymm10
  411496:	vmovdqa YMMWORD PTR [rsp+0x20],ymm10
  41149c:	mov    QWORD PTR [rsp+0x100],0x0
  4114a8:	mov    rdi,QWORD PTR [r14+0x18]
  4114ac:	mov    rsi,r14
  4114af:	lea    r13,[rsp+0x20]
  4114b4:	mov    rdx,r13
  4114b7:	vzeroupper 
  4114ba:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  4114bf:	mov    rdi,r15
  4114c2:	lea    rsi,[rip+0x330ab]        # 444574 <_IO_stdin_used@@Base+0x16574>
  4114c9:	mov    rdx,r13
  4114cc:	xor    eax,eax
  4114ce:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4114d3:	mov    rdi,r15
  4114d6:	lea    rsi,[rip+0x34735]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4114dd:	xor    eax,eax
  4114df:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4114e4:	inc    DWORD PTR [r15+0xf0]
  4114eb:	mov    rdi,r15
  4114ee:	lea    rsi,[rip+0x32219]        # 44370e <_IO_stdin_used@@Base+0x1570e>
  4114f5:	xor    eax,eax
  4114f7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4114fc:	test   r12d,r12d
  4114ff:	jle    41154c <__flatcc_fb_gen_c_json_parser@@Base+0x128c>
  411501:	mov    rdi,r15
  411504:	lea    rsi,[rip+0x32227]        # 443732 <_IO_stdin_used@@Base+0x15732>
  41150b:	xor    eax,eax
  41150d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411512:	mov    rdi,r15
  411515:	lea    rsi,[rip+0x330da]        # 4445f6 <_IO_stdin_used@@Base+0x165f6>
  41151c:	xor    eax,eax
  41151e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411523:	mov    rdi,r15
  411526:	lea    rsi,[rip+0x31d1b]        # 443248 <_IO_stdin_used@@Base+0x15248>
  41152d:	xor    eax,eax
  41152f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411534:	mov    rdi,r15
  411537:	lea    rsi,[rip+0x31d1c]        # 44325a <_IO_stdin_used@@Base+0x1525a>
  41153e:	xor    eax,eax
  411540:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411545:	mov    ebx,DWORD PTR [rsp+0x164]
  41154c:	test   ebx,ebx
  41154e:	je     41156a <__flatcc_fb_gen_c_json_parser@@Base+0x12aa>
  411550:	mov    rdi,r15
  411553:	lea    rsi,[rip+0x330bd]        # 444617 <_IO_stdin_used@@Base+0x16617>
  41155a:	xor    eax,eax
  41155c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411561:	mov    ebx,DWORD PTR [rsp+0x164]
  411568:	jmp    41156c <__flatcc_fb_gen_c_json_parser@@Base+0x12ac>
  41156a:	xor    ebx,ebx
  41156c:	mov    rdi,r15
  41156f:	lea    rsi,[rip+0x1e7cd]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  411576:	xor    eax,eax
  411578:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41157d:	mov    rdi,r15
  411580:	lea    rsi,[rip+0x317da]        # 442d61 <_IO_stdin_used@@Base+0x14d61>
  411587:	xor    eax,eax
  411589:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41158e:	mov    rdx,QWORD PTR [r14+0xa8]
  411595:	mov    rdi,r15
  411598:	lea    rsi,[rip+0x33089]        # 444628 <_IO_stdin_used@@Base+0x16628>
  41159f:	xor    eax,eax
  4115a1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4115a6:	test   ebx,ebx
  4115a8:	je     4115be <__flatcc_fb_gen_c_json_parser@@Base+0x12fe>
  4115aa:	movsxd rdx,ebx
  4115ad:	mov    rdi,r15
  4115b0:	lea    rsi,[rip+0x330ad]        # 444664 <_IO_stdin_used@@Base+0x16664>
  4115b7:	xor    eax,eax
  4115b9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4115be:	mov    rdi,r15
  4115c1:	lea    rsi,[rip+0x32176]        # 44373e <_IO_stdin_used@@Base+0x1573e>
  4115c8:	xor    eax,eax
  4115ca:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4115cf:	mov    rdi,r15
  4115d2:	lea    rsi,[rip+0x321a2]        # 44377b <_IO_stdin_used@@Base+0x1577b>
  4115d9:	xor    eax,eax
  4115db:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4115e0:	inc    DWORD PTR [r15+0xf0]
  4115e7:	mov    rdi,r15
  4115ea:	lea    rsi,[rip+0x321e7]        # 4437d8 <_IO_stdin_used@@Base+0x157d8>
  4115f1:	xor    eax,eax
  4115f3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4115f8:	mov    rdi,r15
  4115fb:	test   r12d,r12d
  4115fe:	jle    41162a <__flatcc_fb_gen_c_json_parser@@Base+0x136a>
  411600:	lea    rsi,[rip+0x31c5f]        # 443266 <_IO_stdin_used@@Base+0x15266>
  411607:	xor    eax,eax
  411609:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41160e:	lea    ecx,[r12-0x1]
  411613:	mov    rdi,r15
  411616:	lea    rsi,[rsp+0x140]
  41161e:	xor    edx,edx
  411620:	xor    r8d,r8d
  411623:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  411628:	jmp    411649 <__flatcc_fb_gen_c_json_parser@@Base+0x1389>
  41162a:	lea    rsi,[rip+0x3308d]        # 4446be <_IO_stdin_used@@Base+0x166be>
  411631:	xor    eax,eax
  411633:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411638:	mov    rdi,r15
  41163b:	lea    rsi,[rip+0x3215c]        # 44379e <_IO_stdin_used@@Base+0x1579e>
  411642:	xor    eax,eax
  411644:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411649:	mov    rdi,r15
  41164c:	lea    rsi,[rip+0x33086]        # 4446d9 <_IO_stdin_used@@Base+0x166d9>
  411653:	xor    eax,eax
  411655:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41165a:	mov    eax,DWORD PTR [r15+0xf0]
  411661:	test   eax,eax
  411663:	je     4127c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2500>
  411669:	dec    eax
  41166b:	mov    DWORD PTR [r15+0xf0],eax
  411672:	mov    rdi,r15
  411675:	lea    rsi,[rip+0x20a40]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  41167c:	xor    eax,eax
  41167e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411683:	mov    rdi,r15
  411686:	lea    rsi,[rip+0x33087]        # 444714 <_IO_stdin_used@@Base+0x16714>
  41168d:	xor    eax,eax
  41168f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411694:	test   r12d,r12d
  411697:	jle    411756 <__flatcc_fb_gen_c_json_parser@@Base+0x1496>
  41169d:	mov    r13d,0x1
  4116a3:	mov    ebx,0x10
  4116a8:	jmp    4116cd <__flatcc_fb_gen_c_json_parser@@Base+0x140d>
  4116aa:	xor    r13d,r13d
  4116ad:	mov    rdi,r15
  4116b0:	lea    rsi,[rip+0x330b2]        # 444769 <_IO_stdin_used@@Base+0x16769>
  4116b7:	xor    eax,eax
  4116b9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4116be:	xchg   ax,ax
  4116c0:	add    rbx,0x20
  4116c4:	dec    r12
  4116c7:	je     41174d <__flatcc_fb_gen_c_json_parser@@Base+0x148d>
  4116cd:	mov    rax,QWORD PTR [rsp+0x140]
  4116d5:	mov    rax,QWORD PTR [rax+rbx*1]
  4116d9:	movzx  ecx,WORD PTR [rax+0x70]
  4116dd:	test   cl,0x4
  4116e0:	jne    4116c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  4116e2:	movzx  edx,WORD PTR [rax+0x28]
  4116e6:	and    edx,0xfffffffe
  4116e9:	cmp    dx,0xe
  4116ed:	jne    411710 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  4116ef:	mov    rdx,QWORD PTR [rax+0x18]
  4116f3:	xor    esi,esi
  4116f5:	cmp    WORD PTR [rdx+0x10],0x4
  4116fa:	sete   sil
  4116fe:	test   ecx,0x100
  411704:	je     4116c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  411706:	jmp    41171a <__flatcc_fb_gen_c_json_parser@@Base+0x145a>
  411708:	nop    DWORD PTR [rax+rax*1+0x0]
  411710:	xor    esi,esi
  411712:	test   ecx,0x100
  411718:	je     4116c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  41171a:	mov    rdx,QWORD PTR [rax+0x88]
  411721:	sub    rdx,rsi
  411724:	test   r13d,r13d
  411727:	je     4116aa <__flatcc_fb_gen_c_json_parser@@Base+0x13ea>
  41172d:	xor    r13d,r13d
  411730:	mov    rdi,r15
  411733:	lea    rsi,[rip+0x32ff7]        # 444731 <_IO_stdin_used@@Base+0x16731>
  41173a:	xor    eax,eax
  41173c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411741:	inc    DWORD PTR [r15+0xf0]
  411748:	jmp    4116c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  41174d:	test   r13d,r13d
  411750:	je     4118c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1608>
  411756:	cmp    DWORD PTR [rsp+0x164],0x0
  41175e:	je     411771 <__flatcc_fb_gen_c_json_parser@@Base+0x14b1>
  411760:	mov    rdi,r15
  411763:	lea    rsi,[rip+0x3308d]        # 4447f7 <_IO_stdin_used@@Base+0x167f7>
  41176a:	xor    eax,eax
  41176c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411771:	mov    rdi,r15
  411774:	lea    rsi,[rip+0x330bf]        # 44483a <_IO_stdin_used@@Base+0x1683a>
  41177b:	xor    eax,eax
  41177d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411782:	mov    rdi,r15
  411785:	lea    rsi,[rip+0x3187f]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  41178c:	xor    eax,eax
  41178e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411793:	mov    eax,DWORD PTR [r15+0xf0]
  41179a:	mov    DWORD PTR [r15+0xf8],eax
  4117a1:	mov    DWORD PTR [r15+0xf0],0x0
  4117ac:	mov    rdi,r15
  4117af:	lea    rsi,[rip+0x32094]        # 44384a <_IO_stdin_used@@Base+0x1584a>
  4117b6:	xor    eax,eax
  4117b8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4117bd:	mov    eax,DWORD PTR [r15+0xf8]
  4117c4:	mov    DWORD PTR [r15+0xf0],eax
  4117cb:	mov    rdi,r15
  4117ce:	lea    rsi,[rip+0x31852]        # 443027 <_IO_stdin_used@@Base+0x15027>
  4117d5:	xor    eax,eax
  4117d7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4117dc:	mov    eax,DWORD PTR [r15+0xf0]
  4117e3:	test   eax,eax
  4117e5:	je     4127df <__flatcc_fb_gen_c_json_parser@@Base+0x251f>
  4117eb:	dec    eax
  4117ed:	mov    DWORD PTR [r15+0xf0],eax
  4117f4:	mov    rdi,r15
  4117f7:	lea    r13,[rip+0x208be]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  4117fe:	mov    rsi,r13
  411801:	xor    eax,eax
  411803:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411808:	mov    rdi,r15
  41180b:	lea    r12,[rip+0x1e531]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  411812:	mov    rsi,r12
  411815:	xor    eax,eax
  411817:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41181c:	mov    rdi,r15
  41181f:	lea    rsi,[rip+0x32c1f]        # 444445 <_IO_stdin_used@@Base+0x16445>
  411826:	lea    rbx,[rsp+0x20]
  41182b:	mov    rdx,rbx
  41182e:	xor    eax,eax
  411830:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411835:	mov    rdi,r15
  411838:	lea    rsi,[rip+0x343d3]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  41183f:	xor    eax,eax
  411841:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411846:	inc    DWORD PTR [r15+0xf0]
  41184d:	mov    rdi,r15
  411850:	lea    rsi,[rip+0x33025]        # 44487c <_IO_stdin_used@@Base+0x1687c>
  411857:	mov    rdx,rbx
  41185a:	xor    eax,eax
  41185c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411861:	mov    eax,DWORD PTR [r15+0xf0]
  411868:	test   eax,eax
  41186a:	je     4127fe <__flatcc_fb_gen_c_json_parser@@Base+0x253e>
  411870:	dec    eax
  411872:	mov    DWORD PTR [r15+0xf0],eax
  411879:	mov    rdi,r15
  41187c:	mov    rsi,r13
  41187f:	xor    eax,eax
  411881:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411886:	mov    rdi,r15
  411889:	mov    rsi,r12
  41188c:	xor    eax,eax
  41188e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411893:	mov    rdi,QWORD PTR [rsp+0x140]
  41189b:	test   rdi,rdi
  41189e:	je     4118a5 <__flatcc_fb_gen_c_json_parser@@Base+0x15e5>
  4118a0:	call   406040 <free@plt>
  4118a5:	vpxor  xmm0,xmm0,xmm0
  4118a9:	lea    rbx,[rsp+0x20]
  4118ae:	lea    rcx,[rip+0x3435d]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4118b5:	lea    r13,[rip+0x1e487]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4118bc:	lea    r12,[rip+0x207f9]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  4118c3:	jmp    4107e5 <__flatcc_fb_gen_c_json_parser@@Base+0x525>
  4118c8:	mov    eax,DWORD PTR [r15+0xf0]
  4118cf:	test   eax,eax
  4118d1:	je     41283c <__flatcc_fb_gen_c_json_parser@@Base+0x257c>
  4118d7:	dec    eax
  4118d9:	mov    DWORD PTR [r15+0xf0],eax
  4118e0:	mov    rdi,r15
  4118e3:	lea    rsi,[rip+0x324a1]        # 443d8b <_IO_stdin_used@@Base+0x15d8b>
  4118ea:	xor    eax,eax
  4118ec:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4118f1:	inc    DWORD PTR [r15+0xf0]
  4118f8:	mov    rdi,r15
  4118fb:	lea    rsi,[rip+0x32e9f]        # 4447a1 <_IO_stdin_used@@Base+0x167a1>
  411902:	xor    eax,eax
  411904:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411909:	mov    rdi,r15
  41190c:	lea    rsi,[rip+0x322a0]        # 443bb3 <_IO_stdin_used@@Base+0x15bb3>
  411913:	xor    eax,eax
  411915:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41191a:	mov    eax,DWORD PTR [r15+0xf0]
  411921:	test   eax,eax
  411923:	lea    rsi,[rip+0x20792]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  41192a:	je     41285b <__flatcc_fb_gen_c_json_parser@@Base+0x259b>
  411930:	dec    eax
  411932:	mov    DWORD PTR [r15+0xf0],eax
  411939:	mov    rdi,r15
  41193c:	xor    eax,eax
  41193e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411943:	cmp    DWORD PTR [rsp+0x164],0x0
  41194b:	jne    411760 <__flatcc_fb_gen_c_json_parser@@Base+0x14a0>
  411951:	jmp    411771 <__flatcc_fb_gen_c_json_parser@@Base+0x14b1>
  411956:	mov    rax,QWORD PTR [r15+0xd8]
  41195d:	mov    rdi,QWORD PTR [rax+0x68]
  411961:	lea    rsi,[rip+0x1598]        # 412f00 <__flatcc_fb_gen_c_json_parser@@Base+0x2c40>
  411968:	mov    rdx,r15
  41196b:	vzeroupper 
  41196e:	call   41b260 <fb_scope_table_visit@@Base>
  411973:	vpxor  xmm0,xmm0,xmm0
  411977:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  411980:	vmovdqu YMMWORD PTR [rsp+0x150],ymm0
  411989:	mov    rax,QWORD PTR [r15+0xd8]
  411990:	mov    rdi,QWORD PTR [rax+0x68]
  411994:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  41199a:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  4119a0:	mov    QWORD PTR [rsp+0x60],0x0
  4119a9:	mov    DWORD PTR [rsp+0x20],0x1
  4119b1:	mov    QWORD PTR [rsp+0x68],rax
  4119b6:	lea    rsi,[rip+0x4273]        # 415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x5970>
  4119bd:	lea    rdx,[rsp+0x20]
  4119c2:	mov    QWORD PTR [rsp+0x240],rdi
  4119ca:	vzeroupper 
  4119cd:	call   41b260 <fb_scope_table_visit@@Base>
  4119d2:	movsxd r14,DWORD PTR [rsp+0x24]
  4119d7:	mov    esi,0x10
  4119dc:	mov    rdi,r14
  4119df:	call   406150 <calloc@plt>
  4119e4:	mov    r12,rax
  4119e7:	mov    QWORD PTR [rsp+0x38],rax
  4119ec:	mov    r13d,DWORD PTR [rsp+0x28]
  4119f1:	movsxd rdi,r13d
  4119f4:	mov    esi,0x10
  4119f9:	call   406150 <calloc@plt>
  4119fe:	mov    rbx,rax
  411a01:	mov    QWORD PTR [rsp+0x40],rax
  411a06:	mov    rdi,QWORD PTR [rsp+0x30]
  411a0b:	mov    QWORD PTR [rsp+0x120],rdi
  411a13:	call   4061b0 <malloc@plt>
  411a18:	mov    QWORD PTR [rsp+0x48],rax
  411a1d:	mov    QWORD PTR [rsp+0x50],r12
  411a22:	mov    QWORD PTR [rsp+0x58],rbx
  411a27:	mov    QWORD PTR [rsp+0x60],rax
  411a2c:	test   r14,r14
  411a2f:	jle    411a36 <__flatcc_fb_gen_c_json_parser@@Base+0x1776>
  411a31:	test   r12,r12
  411a34:	je     411a6a <__flatcc_fb_gen_c_json_parser@@Base+0x17aa>
  411a36:	test   r13d,r13d
  411a39:	jle    411a40 <__flatcc_fb_gen_c_json_parser@@Base+0x1780>
  411a3b:	test   rbx,rbx
  411a3e:	je     411a58 <__flatcc_fb_gen_c_json_parser@@Base+0x1798>
  411a40:	cmp    QWORD PTR [rsp+0x120],0x0
  411a49:	je     411d5b <__flatcc_fb_gen_c_json_parser@@Base+0x1a9b>
  411a4f:	test   rax,rax
  411a52:	jne    411d5b <__flatcc_fb_gen_c_json_parser@@Base+0x1a9b>
  411a58:	test   r12,r12
  411a5b:	je     411a6a <__flatcc_fb_gen_c_json_parser@@Base+0x17aa>
  411a5d:	mov    rdi,r12
  411a60:	call   406040 <free@plt>
  411a65:	mov    rbx,QWORD PTR [rsp+0x40]
  411a6a:	test   rbx,rbx
  411a6d:	je     411a77 <__flatcc_fb_gen_c_json_parser@@Base+0x17b7>
  411a6f:	mov    rdi,rbx
  411a72:	call   406040 <free@plt>
  411a77:	mov    rdi,QWORD PTR [rsp+0x48]
  411a7c:	test   rdi,rdi
  411a7f:	je     411a86 <__flatcc_fb_gen_c_json_parser@@Base+0x17c6>
  411a81:	call   406040 <free@plt>
  411a86:	mov    rax,QWORD PTR [r15+0xd8]
  411a8d:	mov    rsi,QWORD PTR [rax+0x58]
  411a91:	test   rsi,rsi
  411a94:	je     411f85 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc5>
  411a9a:	movzx  eax,WORD PTR [rsi+0x10]
  411a9e:	cmp    ax,0x1
  411aa2:	je     411c06 <__flatcc_fb_gen_c_json_parser@@Base+0x1946>
  411aa8:	test   ax,ax
  411aab:	jne    411f85 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc5>
  411ab1:	vpxor  xmm0,xmm0,xmm0
  411ab5:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  411abe:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  411ac7:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  411ad0:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  411ad9:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  411adf:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  411ae5:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411aeb:	mov    QWORD PTR [rsp+0x100],0x0
  411af7:	mov    rdi,QWORD PTR [rsi+0x18]
  411afb:	lea    rdx,[rsp+0x20]
  411b00:	vzeroupper 
  411b03:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  411b08:	mov    rax,QWORD PTR [r15+0xd8]
  411b0f:	mov    rdx,QWORD PTR [rax+0x110]
  411b16:	lea    rsi,[rip+0x30cdf]        # 4427fc <_IO_stdin_used@@Base+0x147fc>
  411b1d:	mov    rdi,r15
  411b20:	xor    eax,eax
  411b22:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411b27:	add    DWORD PTR [r15+0xf0],0x2
  411b2f:	lea    rsi,[rip+0x32fc3]        # 444af9 <_IO_stdin_used@@Base+0x16af9>
  411b36:	mov    rdi,r15
  411b39:	xor    eax,eax
  411b3b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411b40:	mov    eax,DWORD PTR [r15+0xf0]
  411b47:	test   eax,eax
  411b49:	je     412899 <__flatcc_fb_gen_c_json_parser@@Base+0x25d9>
  411b4f:	mov    ecx,eax
  411b51:	dec    ecx
  411b53:	mov    DWORD PTR [r15+0xf0],ecx
  411b5a:	je     412899 <__flatcc_fb_gen_c_json_parser@@Base+0x25d9>
  411b60:	add    eax,0xfffffffe
  411b63:	mov    DWORD PTR [r15+0xf0],eax
  411b6a:	lea    rsi,[rip+0x340a1]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  411b71:	mov    rdi,r15
  411b74:	xor    eax,eax
  411b76:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411b7b:	inc    DWORD PTR [r15+0xf0]
  411b82:	lea    rsi,[rip+0x32fda]        # 444b63 <_IO_stdin_used@@Base+0x16b63>
  411b89:	mov    rdi,r15
  411b8c:	xor    eax,eax
  411b8e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411b93:	lea    rsi,[rip+0x32fe6]        # 444b80 <_IO_stdin_used@@Base+0x16b80>
  411b9a:	mov    rdi,r15
  411b9d:	xor    eax,eax
  411b9f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411ba4:	lea    rsi,[rip+0x1e198]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  411bab:	mov    rdi,r15
  411bae:	xor    eax,eax
  411bb0:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411bb5:	lea    rsi,[rip+0x32fdf]        # 444b9b <_IO_stdin_used@@Base+0x16b9b>
  411bbc:	mov    rdi,r15
  411bbf:	xor    eax,eax
  411bc1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411bc6:	lea    rsi,[rip+0x32fe9]        # 444bb6 <_IO_stdin_used@@Base+0x16bb6>
  411bcd:	mov    rdi,r15
  411bd0:	xor    eax,eax
  411bd2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411bd7:	mov    rax,QWORD PTR [r15+0xd8]
  411bde:	cmp    WORD PTR [rax+0x20],0x2
  411be3:	jne    411dc5 <__flatcc_fb_gen_c_json_parser@@Base+0x1b05>
  411be9:	mov    edx,DWORD PTR [rax+0x18]
  411bec:	mov    rcx,QWORD PTR [rax+0x10]
  411bf0:	lea    rsi,[rip+0x32ffa]        # 444bf1 <_IO_stdin_used@@Base+0x16bf1>
  411bf7:	mov    rdi,r15
  411bfa:	xor    eax,eax
  411bfc:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411c01:	jmp    411dd6 <__flatcc_fb_gen_c_json_parser@@Base+0x1b16>
  411c06:	vpxor  xmm0,xmm0,xmm0
  411c0a:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  411c13:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  411c1c:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  411c25:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  411c2e:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  411c34:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  411c3a:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411c40:	mov    QWORD PTR [rsp+0x100],0x0
  411c4c:	mov    rdi,QWORD PTR [rsi+0x18]
  411c50:	lea    rdx,[rsp+0x20]
  411c55:	vzeroupper 
  411c58:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  411c5d:	mov    rax,QWORD PTR [r15+0xd8]
  411c64:	mov    rdx,QWORD PTR [rax+0x110]
  411c6b:	lea    rsi,[rip+0x30b8a]        # 4427fc <_IO_stdin_used@@Base+0x147fc>
  411c72:	mov    rdi,r15
  411c75:	xor    eax,eax
  411c77:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411c7c:	add    DWORD PTR [r15+0xf0],0x2
  411c84:	lea    rsi,[rip+0x32e6e]        # 444af9 <_IO_stdin_used@@Base+0x16af9>
  411c8b:	mov    rdi,r15
  411c8e:	xor    eax,eax
  411c90:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411c95:	mov    eax,DWORD PTR [r15+0xf0]
  411c9c:	test   eax,eax
  411c9e:	je     4128b8 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
  411ca4:	mov    ecx,eax
  411ca6:	dec    ecx
  411ca8:	mov    DWORD PTR [r15+0xf0],ecx
  411caf:	je     4128b8 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
  411cb5:	add    eax,0xfffffffe
  411cb8:	mov    DWORD PTR [r15+0xf0],eax
  411cbf:	lea    rsi,[rip+0x33f4c]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  411cc6:	mov    rdi,r15
  411cc9:	xor    eax,eax
  411ccb:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411cd0:	inc    DWORD PTR [r15+0xf0]
  411cd7:	lea    rsi,[rip+0x33069]        # 444d47 <_IO_stdin_used@@Base+0x16d47>
  411cde:	mov    rdi,r15
  411ce1:	xor    eax,eax
  411ce3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411ce8:	lea    rsi,[rip+0x32e91]        # 444b80 <_IO_stdin_used@@Base+0x16b80>
  411cef:	mov    rdi,r15
  411cf2:	xor    eax,eax
  411cf4:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411cf9:	lea    rsi,[rip+0x1e043]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  411d00:	mov    rdi,r15
  411d03:	xor    eax,eax
  411d05:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411d0a:	lea    rsi,[rip+0x33051]        # 444d62 <_IO_stdin_used@@Base+0x16d62>
  411d11:	mov    rdi,r15
  411d14:	xor    eax,eax
  411d16:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411d1b:	lea    rsi,[rip+0x32e94]        # 444bb6 <_IO_stdin_used@@Base+0x16bb6>
  411d22:	mov    rdi,r15
  411d25:	xor    eax,eax
  411d27:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411d2c:	mov    rax,QWORD PTR [r15+0xd8]
  411d33:	cmp    WORD PTR [rax+0x20],0x2
  411d38:	jne    411e9f <__flatcc_fb_gen_c_json_parser@@Base+0x1bdf>
  411d3e:	mov    edx,DWORD PTR [rax+0x18]
  411d41:	mov    rcx,QWORD PTR [rax+0x10]
  411d45:	lea    rsi,[rip+0x32ea5]        # 444bf1 <_IO_stdin_used@@Base+0x16bf1>
  411d4c:	mov    rdi,r15
  411d4f:	xor    eax,eax
  411d51:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411d56:	jmp    411eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf0>
  411d5b:	lea    rsi,[rip+0x3eee]        # 415c50 <__flatcc_fb_gen_c_json_parser@@Base+0x5990>
  411d62:	lea    rdx,[rsp+0x20]
  411d67:	mov    rdi,QWORD PTR [rsp+0x240]
  411d6f:	call   41b260 <fb_scope_table_visit@@Base>
  411d74:	mov    rbx,QWORD PTR [rsp+0x38]
  411d79:	movsxd r14,DWORD PTR [rsp+0x24]
  411d7e:	lea    rcx,[rip+0x409b]        # 415e20 <__flatcc_fb_gen_c_json_parser@@Base+0x5b60>
  411d85:	mov    edx,0x10
  411d8a:	mov    rdi,rbx
  411d8d:	mov    rsi,r14
  411d90:	call   406080 <qsort@plt>
  411d95:	test   r14,r14
  411d98:	jle    412096 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd6>
  411d9e:	mov    r8d,r14d
  411da1:	lea    rcx,[r8-0x1]
  411da5:	mov    eax,r8d
  411da8:	and    eax,0x7
  411dab:	cmp    rcx,0x7
  411daf:	jae    411fe2 <__flatcc_fb_gen_c_json_parser@@Base+0x1d22>
  411db5:	xor    ecx,ecx
  411db7:	test   rax,rax
  411dba:	jne    412075 <__flatcc_fb_gen_c_json_parser@@Base+0x1db5>
  411dc0:	jmp    412096 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd6>
  411dc5:	lea    rsi,[rip+0x32e62]        # 444c2e <_IO_stdin_used@@Base+0x16c2e>
  411dcc:	mov    rdi,r15
  411dcf:	xor    eax,eax
  411dd1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411dd6:	lea    rsi,[rip+0x32e89]        # 444c66 <_IO_stdin_used@@Base+0x16c66>
  411ddd:	lea    rdx,[rsp+0x20]
  411de2:	mov    rdi,r15
  411de5:	xor    eax,eax
  411de7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411dec:	lea    rsi,[rip+0x32ea7]        # 444c9a <_IO_stdin_used@@Base+0x16c9a>
  411df3:	mov    rdi,r15
  411df6:	xor    eax,eax
  411df8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411dfd:	inc    DWORD PTR [r15+0xf0]
  411e04:	lea    rsi,[rip+0x32ea1]        # 444cac <_IO_stdin_used@@Base+0x16cac>
  411e0b:	mov    rdi,r15
  411e0e:	xor    eax,eax
  411e10:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411e15:	mov    eax,DWORD PTR [r15+0xf0]
  411e1c:	test   eax,eax
  411e1e:	je     4128f6 <__flatcc_fb_gen_c_json_parser@@Base+0x2636>
  411e24:	dec    eax
  411e26:	mov    DWORD PTR [r15+0xf0],eax
  411e2d:	lea    rsi,[rip+0x20288]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  411e34:	mov    rdi,r15
  411e37:	xor    eax,eax
  411e39:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411e3e:	lea    rsi,[rip+0x32e7a]        # 444cbf <_IO_stdin_used@@Base+0x16cbf>
  411e45:	mov    rdi,r15
  411e48:	xor    eax,eax
  411e4a:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411e4f:	lea    rsi,[rip+0x32e9d]        # 444cf3 <_IO_stdin_used@@Base+0x16cf3>
  411e56:	mov    rdi,r15
  411e59:	xor    eax,eax
  411e5b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411e60:	lea    rsi,[rip+0x3128d]        # 4430f4 <_IO_stdin_used@@Base+0x150f4>
  411e67:	mov    rdi,r15
  411e6a:	xor    eax,eax
  411e6c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411e71:	mov    eax,DWORD PTR [r15+0xf0]
  411e78:	test   eax,eax
  411e7a:	jne    411f5a <__flatcc_fb_gen_c_json_parser@@Base+0x1c9a>
  411e80:	lea    rdi,[rip+0x309ea]        # 442871 <_IO_stdin_used@@Base+0x14871>
  411e87:	lea    rsi,[rip+0x309ef]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  411e8e:	lea    rcx,[rip+0x32c8f]        # 444b24 <_IO_stdin_used@@Base+0x16b24>
  411e95:	mov    edx,0x65e
  411e9a:	call   406100 <__assert_fail@plt>
  411e9f:	lea    rsi,[rip+0x32d88]        # 444c2e <_IO_stdin_used@@Base+0x16c2e>
  411ea6:	mov    rdi,r15
  411ea9:	xor    eax,eax
  411eab:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411eb0:	lea    rsi,[rip+0x32ec4]        # 444d7b <_IO_stdin_used@@Base+0x16d7b>
  411eb7:	lea    rdx,[rsp+0x20]
  411ebc:	mov    rdi,r15
  411ebf:	xor    eax,eax
  411ec1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411ec6:	lea    rsi,[rip+0x32dcd]        # 444c9a <_IO_stdin_used@@Base+0x16c9a>
  411ecd:	mov    rdi,r15
  411ed0:	xor    eax,eax
  411ed2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411ed7:	inc    DWORD PTR [r15+0xf0]
  411ede:	lea    rsi,[rip+0x32dc7]        # 444cac <_IO_stdin_used@@Base+0x16cac>
  411ee5:	mov    rdi,r15
  411ee8:	xor    eax,eax
  411eea:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411eef:	mov    eax,DWORD PTR [r15+0xf0]
  411ef6:	test   eax,eax
  411ef8:	je     412915 <__flatcc_fb_gen_c_json_parser@@Base+0x2655>
  411efe:	dec    eax
  411f00:	mov    DWORD PTR [r15+0xf0],eax
  411f07:	lea    rsi,[rip+0x201ae]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  411f0e:	mov    rdi,r15
  411f11:	xor    eax,eax
  411f13:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411f18:	lea    rsi,[rip+0x32da0]        # 444cbf <_IO_stdin_used@@Base+0x16cbf>
  411f1f:	mov    rdi,r15
  411f22:	xor    eax,eax
  411f24:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411f29:	lea    rsi,[rip+0x32dc3]        # 444cf3 <_IO_stdin_used@@Base+0x16cf3>
  411f30:	mov    rdi,r15
  411f33:	xor    eax,eax
  411f35:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411f3a:	lea    rsi,[rip+0x311b3]        # 4430f4 <_IO_stdin_used@@Base+0x150f4>
  411f41:	mov    rdi,r15
  411f44:	xor    eax,eax
  411f46:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411f4b:	mov    eax,DWORD PTR [r15+0xf0]
  411f52:	test   eax,eax
  411f54:	je     412934 <__flatcc_fb_gen_c_json_parser@@Base+0x2674>
  411f5a:	dec    eax
  411f5c:	mov    DWORD PTR [r15+0xf0],eax
  411f63:	lea    rsi,[rip+0x20152]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  411f6a:	mov    rdi,r15
  411f6d:	xor    eax,eax
  411f6f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411f74:	lea    rsi,[rip+0x1ddc8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  411f7b:	mov    rdi,r15
  411f7e:	xor    eax,eax
  411f80:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411f85:	mov    rax,QWORD PTR [r15+0xe0]
  411f8c:	cmp    DWORD PTR [rax+0xac],0x0
  411f93:	je     411fb2 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf2>
  411f95:	mov    rcx,QWORD PTR [r15+0xd0]
  411f9c:	lea    rdi,[rip+0x23b3c]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  411fa3:	mov    esi,0x24
  411fa8:	mov    edx,0x1
  411fad:	call   406230 <fwrite@plt>
  411fb2:	mov    rax,QWORD PTR [r15+0xd8]
  411fb9:	mov    rdx,QWORD PTR [rax+0x118]
  411fc0:	lea    rsi,[rip+0x32def]        # 444db6 <_IO_stdin_used@@Base+0x16db6>
  411fc7:	mov    rdi,r15
  411fca:	xor    eax,eax
  411fcc:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411fd1:	xor    eax,eax
  411fd3:	lea    rsp,[rbp-0x28]
  411fd7:	pop    rbx
  411fd8:	pop    r12
  411fda:	pop    r13
  411fdc:	pop    r14
  411fde:	pop    r15
  411fe0:	pop    rbp
  411fe1:	ret    
  411fe2:	lea    rsi,[rbx+0x70]
  411fe6:	sub    r8,rax
  411fe9:	xor    ecx,ecx
  411feb:	nop    DWORD PTR [rax+rax*1+0x0]
  411ff0:	mov    rdi,QWORD PTR [rsi-0x70]
  411ff4:	mov    QWORD PTR [rdi+0xc8],rcx
  411ffb:	mov    rdi,QWORD PTR [rsi-0x60]
  411fff:	lea    rdx,[rcx+0x1]
  412003:	mov    QWORD PTR [rdi+0xc8],rdx
  41200a:	mov    rdx,QWORD PTR [rsi-0x50]
  41200e:	lea    rdi,[rcx+0x2]
  412012:	mov    QWORD PTR [rdx+0xc8],rdi
  412019:	mov    rdx,QWORD PTR [rsi-0x40]
  41201d:	lea    rdi,[rcx+0x3]
  412021:	mov    QWORD PTR [rdx+0xc8],rdi
  412028:	mov    rdx,QWORD PTR [rsi-0x30]
  41202c:	lea    rdi,[rcx+0x4]
  412030:	mov    QWORD PTR [rdx+0xc8],rdi
  412037:	mov    rdx,QWORD PTR [rsi-0x20]
  41203b:	lea    rdi,[rcx+0x5]
  41203f:	mov    QWORD PTR [rdx+0xc8],rdi
  412046:	mov    rdx,QWORD PTR [rsi-0x10]
  41204a:	lea    rdi,[rcx+0x6]
  41204e:	mov    QWORD PTR [rdx+0xc8],rdi
  412055:	mov    rdx,QWORD PTR [rsi]
  412058:	lea    rdi,[rcx+0x7]
  41205c:	mov    QWORD PTR [rdx+0xc8],rdi
  412063:	add    rcx,0x8
  412067:	sub    rsi,0xffffffffffffff80
  41206b:	cmp    r8,rcx
  41206e:	jne    411ff0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d30>
  412070:	test   rax,rax
  412073:	je     412096 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd6>
  412075:	mov    rdx,rcx
  412078:	shl    rdx,0x4
  41207c:	add    rbx,rdx
  41207f:	nop
  412080:	mov    rdx,QWORD PTR [rbx]
  412083:	mov    QWORD PTR [rdx+0xc8],rcx
  41208a:	inc    rcx
  41208d:	add    rbx,0x10
  412091:	dec    rax
  412094:	jne    412080 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc0>
  412096:	mov    rbx,QWORD PTR [rsp+0x40]
  41209b:	movsxd r14,DWORD PTR [rsp+0x28]
  4120a0:	lea    rcx,[rip+0x3d79]        # 415e20 <__flatcc_fb_gen_c_json_parser@@Base+0x5b60>
  4120a7:	mov    edx,0x10
  4120ac:	mov    rdi,rbx
  4120af:	mov    rsi,r14
  4120b2:	call   406080 <qsort@plt>
  4120b7:	test   r14,r14
  4120ba:	jle    412196 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed6>
  4120c0:	mov    r8d,r14d
  4120c3:	lea    rcx,[r8-0x1]
  4120c7:	mov    eax,r8d
  4120ca:	and    eax,0x7
  4120cd:	cmp    rcx,0x7
  4120d1:	jae    4120e3 <__flatcc_fb_gen_c_json_parser@@Base+0x1e23>
  4120d3:	xor    ecx,ecx
  4120d5:	test   rax,rax
  4120d8:	jne    412175 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb5>
  4120de:	jmp    412196 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed6>
  4120e3:	lea    rsi,[rbx+0x70]
  4120e7:	sub    r8,rax
  4120ea:	xor    ecx,ecx
  4120ec:	nop    DWORD PTR [rax+0x0]
  4120f0:	mov    rdi,QWORD PTR [rsi-0x70]
  4120f4:	mov    QWORD PTR [rdi+0xc8],rcx
  4120fb:	mov    rdi,QWORD PTR [rsi-0x60]
  4120ff:	lea    rdx,[rcx+0x1]
  412103:	mov    QWORD PTR [rdi+0xc8],rdx
  41210a:	mov    rdx,QWORD PTR [rsi-0x50]
  41210e:	lea    rdi,[rcx+0x2]
  412112:	mov    QWORD PTR [rdx+0xc8],rdi
  412119:	mov    rdx,QWORD PTR [rsi-0x40]
  41211d:	lea    rdi,[rcx+0x3]
  412121:	mov    QWORD PTR [rdx+0xc8],rdi
  412128:	mov    rdx,QWORD PTR [rsi-0x30]
  41212c:	lea    rdi,[rcx+0x4]
  412130:	mov    QWORD PTR [rdx+0xc8],rdi
  412137:	mov    rdx,QWORD PTR [rsi-0x20]
  41213b:	lea    rdi,[rcx+0x5]
  41213f:	mov    QWORD PTR [rdx+0xc8],rdi
  412146:	mov    rdx,QWORD PTR [rsi-0x10]
  41214a:	lea    rdi,[rcx+0x6]
  41214e:	mov    QWORD PTR [rdx+0xc8],rdi
  412155:	mov    rdx,QWORD PTR [rsi]
  412158:	lea    rdi,[rcx+0x7]
  41215c:	mov    QWORD PTR [rdx+0xc8],rdi
  412163:	add    rcx,0x8
  412167:	sub    rsi,0xffffffffffffff80
  41216b:	cmp    r8,rcx
  41216e:	jne    4120f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
  412170:	test   rax,rax
  412173:	je     412196 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed6>
  412175:	mov    rdx,rcx
  412178:	shl    rdx,0x4
  41217c:	add    rbx,rdx
  41217f:	nop
  412180:	mov    rdx,QWORD PTR [rbx]
  412183:	mov    QWORD PTR [rdx+0xc8],rcx
  41218a:	inc    rcx
  41218d:	add    rbx,0x10
  412191:	dec    rax
  412194:	jne    412180 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec0>
  412196:	movsxd rbx,DWORD PTR [rsp+0x28]
  41219b:	test   rbx,rbx
  41219e:	je     412231 <__flatcc_fb_gen_c_json_parser@@Base+0x1f71>
  4121a4:	mov    rdi,rbx
  4121a7:	shl    rdi,0x5
  4121ab:	call   4061b0 <malloc@plt>
  4121b0:	test   rax,rax
  4121b3:	je     412241 <__flatcc_fb_gen_c_json_parser@@Base+0x1f81>
  4121b9:	mov    r12,rax
  4121bc:	mov    QWORD PTR [rsp+0x120],rbx
  4121c4:	test   ebx,ebx
  4121c6:	jle    41220f <__flatcc_fb_gen_c_json_parser@@Base+0x1f4f>
  4121c8:	mov    ebx,0x8
  4121cd:	mov    r13,QWORD PTR [rsp+0x40]
  4121d2:	mov    r14,QWORD PTR [rsp+0x120]
  4121da:	nop    WORD PTR [rax+rax*1+0x0]
  4121e0:	mov    rdi,QWORD PTR [r13+rbx*1+0x0]
  4121e5:	mov    QWORD PTR [r12+rbx*2-0x10],rdi
  4121ea:	call   4060d0 <strlen@plt>
  4121ef:	mov    DWORD PTR [r12+rbx*2-0x8],eax
  4121f4:	mov    rax,QWORD PTR [r13+rbx*1-0x8]
  4121f9:	mov    QWORD PTR [r12+rbx*2],rax
  4121fd:	mov    DWORD PTR [r12+rbx*2+0x8],0x0
  412206:	add    rbx,0x10
  41220a:	dec    r14
  41220d:	jne    4121e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
  41220f:	lea    rcx,[rip+0x23ea]        # 414600 <__flatcc_fb_gen_c_json_parser@@Base+0x4340>
  412216:	mov    edx,0x20
  41221b:	mov    rdi,r12
  41221e:	mov    rsi,QWORD PTR [rsp+0x120]
  412226:	call   406080 <qsort@plt>
  41222b:	mov    ebx,DWORD PTR [rsp+0x28]
  41222f:	jmp    412244 <__flatcc_fb_gen_c_json_parser@@Base+0x1f84>
  412231:	mov    QWORD PTR [rsp+0x140],0x0
  41223d:	xor    ebx,ebx
  41223f:	jmp    412259 <__flatcc_fb_gen_c_json_parser@@Base+0x1f99>
  412241:	xor    r12d,r12d
  412244:	mov    QWORD PTR [rsp+0x140],r12
  41224c:	test   ebx,ebx
  41224e:	jle    412259 <__flatcc_fb_gen_c_json_parser@@Base+0x1f99>
  412250:	test   r12,r12
  412253:	je     412953 <__flatcc_fb_gen_c_json_parser@@Base+0x2693>
  412259:	mov    QWORD PTR [rsp+0x158],0x0
  412265:	mov    DWORD PTR [rsp+0x160],0x4
  412270:	lea    rax,[rip+0x3799]        # 415a10 <__flatcc_fb_gen_c_json_parser@@Base+0x5750>
  412277:	mov    QWORD PTR [rsp+0x148],rax
  41227f:	lea    rax,[rip+0x38ba]        # 415b40 <__flatcc_fb_gen_c_json_parser@@Base+0x5880>
  412286:	mov    QWORD PTR [rsp+0x150],rax
  41228e:	mov    rax,QWORD PTR [r15+0xd8]
  412295:	mov    rdx,QWORD PTR [rax+0x110]
  41229c:	lea    rsi,[rip+0x30957]        # 442bfa <_IO_stdin_used@@Base+0x14bfa>
  4122a3:	mov    rdi,r15
  4122a6:	xor    eax,eax
  4122a8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4122ad:	add    DWORD PTR [r15+0xf0],0x2
  4122b5:	lea    rsi,[rip+0x32651]        # 44490d <_IO_stdin_used@@Base+0x1690d>
  4122bc:	mov    rdi,r15
  4122bf:	xor    eax,eax
  4122c1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4122c6:	mov    eax,DWORD PTR [r15+0xf0]
  4122cd:	test   eax,eax
  4122cf:	je     4128d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2617>
  4122d5:	mov    ecx,eax
  4122d7:	dec    ecx
  4122d9:	mov    DWORD PTR [r15+0xf0],ecx
  4122e0:	je     4128d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2617>
  4122e6:	add    eax,0xfffffffe
  4122e9:	mov    DWORD PTR [r15+0xf0],eax
  4122f0:	lea    rsi,[rip+0x3391b]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  4122f7:	mov    rdi,r15
  4122fa:	xor    eax,eax
  4122fc:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412301:	inc    DWORD PTR [r15+0xf0]
  412308:	test   ebx,ebx
  41230a:	je     4123b9 <__flatcc_fb_gen_c_json_parser@@Base+0x20f9>
  412310:	lea    rsi,[rip+0x30f14]        # 44322b <_IO_stdin_used@@Base+0x1522b>
  412317:	mov    rdi,r15
  41231a:	xor    eax,eax
  41231c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412321:	lea    rsi,[rip+0x30f20]        # 443248 <_IO_stdin_used@@Base+0x15248>
  412328:	mov    rdi,r15
  41232b:	xor    eax,eax
  41232d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412332:	lea    rsi,[rip+0x30f21]        # 44325a <_IO_stdin_used@@Base+0x1525a>
  412339:	mov    rdi,r15
  41233c:	xor    eax,eax
  41233e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412343:	lea    rsi,[rip+0x1d9f9]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41234a:	mov    rdi,r15
  41234d:	xor    eax,eax
  41234f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412354:	lea    rsi,[rip+0x30f0b]        # 443266 <_IO_stdin_used@@Base+0x15266>
  41235b:	mov    rdi,r15
  41235e:	xor    eax,eax
  412360:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412365:	dec    ebx
  412367:	lea    rsi,[rsp+0x140]
  41236f:	mov    rdi,r15
  412372:	xor    edx,edx
  412374:	mov    ecx,ebx
  412376:	xor    r8d,r8d
  412379:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  41237e:	lea    rsi,[rip+0x30c86]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  412385:	mov    rdi,r15
  412388:	xor    eax,eax
  41238a:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41238f:	mov    eax,DWORD PTR [r15+0xf0]
  412396:	test   eax,eax
  412398:	jne    4123ea <__flatcc_fb_gen_c_json_parser@@Base+0x212a>
  41239a:	lea    rdi,[rip+0x304d0]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4123a1:	lea    rsi,[rip+0x304d5]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4123a8:	lea    rcx,[rip+0x326e6]        # 444a95 <_IO_stdin_used@@Base+0x16a95>
  4123af:	mov    edx,0x4c3
  4123b4:	call   406100 <__assert_fail@plt>
  4123b9:	lea    rsi,[rip+0x32700]        # 444ac0 <_IO_stdin_used@@Base+0x16ac0>
  4123c0:	mov    rdi,r15
  4123c3:	xor    eax,eax
  4123c5:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4123ca:	lea    rsi,[rip+0x30e3d]        # 44320e <_IO_stdin_used@@Base+0x1520e>
  4123d1:	mov    rdi,r15
  4123d4:	xor    eax,eax
  4123d6:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4123db:	mov    eax,DWORD PTR [r15+0xf0]
  4123e2:	test   eax,eax
  4123e4:	je     4129a6 <__flatcc_fb_gen_c_json_parser@@Base+0x26e6>
  4123ea:	dec    eax
  4123ec:	mov    DWORD PTR [r15+0xf0],eax
  4123f3:	lea    rsi,[rip+0x1fcc2]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  4123fa:	mov    rdi,r15
  4123fd:	xor    eax,eax
  4123ff:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412404:	lea    rsi,[rip+0x1d938]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41240b:	mov    rdi,r15
  41240e:	xor    eax,eax
  412410:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412415:	mov    rdi,QWORD PTR [rsp+0x140]
  41241d:	test   rdi,rdi
  412420:	je     412427 <__flatcc_fb_gen_c_json_parser@@Base+0x2167>
  412422:	call   406040 <free@plt>
  412427:	mov    rdi,QWORD PTR [rsp+0x38]
  41242c:	test   rdi,rdi
  41242f:	je     412436 <__flatcc_fb_gen_c_json_parser@@Base+0x2176>
  412431:	call   406040 <free@plt>
  412436:	mov    rdi,QWORD PTR [rsp+0x40]
  41243b:	test   rdi,rdi
  41243e:	jne    411a72 <__flatcc_fb_gen_c_json_parser@@Base+0x17b2>
  412444:	jmp    411a77 <__flatcc_fb_gen_c_json_parser@@Base+0x17b7>
  412449:	mov    rax,QWORD PTR [rip+0x3fba8]        # 451ff8 <stderr@GLIBC_2.2.5>
  412450:	mov    rdi,QWORD PTR [rax]
  412453:	lea    rsi,[rip+0x1d7ce]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41245a:	lea    rbx,[rip+0x3041c]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412461:	lea    r8,[rip+0x30a87]        # 442eef <_IO_stdin_used@@Base+0x14eef>
  412468:	mov    rdx,rbx
  41246b:	mov    ecx,0x5ff
  412470:	xor    eax,eax
  412472:	call   406180 <fprintf@plt>
  412477:	lea    rdi,[rip+0x2e711]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  41247e:	lea    rcx,[rip+0x3093b]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  412485:	mov    rsi,rbx
  412488:	mov    edx,0x5ff
  41248d:	call   406100 <__assert_fail@plt>
  412492:	lea    rdi,[rip+0x303d8]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412499:	lea    rsi,[rip+0x303dd]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4124a0:	lea    rcx,[rip+0x30919]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  4124a7:	mov    edx,0x5fc
  4124ac:	call   406100 <__assert_fail@plt>
  4124b1:	mov    rax,QWORD PTR [rip+0x3fb40]        # 451ff8 <stderr@GLIBC_2.2.5>
  4124b8:	mov    rdi,QWORD PTR [rax]
  4124bb:	lea    rsi,[rip+0x1d766]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4124c2:	lea    rbx,[rip+0x303b4]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4124c9:	lea    r8,[rip+0x309a3]        # 442e73 <_IO_stdin_used@@Base+0x14e73>
  4124d0:	mov    rdx,rbx
  4124d3:	mov    ecx,0x5f2
  4124d8:	xor    eax,eax
  4124da:	call   406180 <fprintf@plt>
  4124df:	lea    rdi,[rip+0x2e6a9]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4124e6:	lea    rcx,[rip+0x308d3]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  4124ed:	mov    rsi,rbx
  4124f0:	mov    edx,0x5f2
  4124f5:	call   406100 <__assert_fail@plt>
  4124fa:	lea    rdi,[rip+0x30370]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412501:	lea    rsi,[rip+0x30375]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412508:	lea    rcx,[rip+0x308b1]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  41250f:	mov    edx,0x5f6
  412514:	call   406100 <__assert_fail@plt>
  412519:	lea    rdi,[rip+0x30351]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412520:	lea    rsi,[rip+0x30356]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412527:	lea    rcx,[rip+0x303be]        # 4428ec <_IO_stdin_used@@Base+0x148ec>
  41252e:	mov    edx,0x6d3
  412533:	call   406100 <__assert_fail@plt>
  412538:	lea    rdi,[rip+0x30332]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41253f:	lea    rsi,[rip+0x30337]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412546:	lea    rcx,[rip+0x3039f]        # 4428ec <_IO_stdin_used@@Base+0x148ec>
  41254d:	mov    edx,0x6c3
  412552:	call   406100 <__assert_fail@plt>
  412557:	lea    rdi,[rip+0x23925]        # 435e83 <_IO_stdin_used@@Base+0x7e83>
  41255e:	lea    rsi,[rip+0x30318]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412565:	lea    rcx,[rip+0x31fce]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  41256c:	mov    edx,0x56e
  412571:	vzeroupper 
  412574:	call   406100 <__assert_fail@plt>
  412579:	mov    rax,QWORD PTR [rip+0x3fa78]        # 451ff8 <stderr@GLIBC_2.2.5>
  412580:	mov    rdi,QWORD PTR [rax]
  412583:	lea    rsi,[rip+0x1d69e]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41258a:	lea    rbx,[rip+0x302ec]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412591:	lea    r8,[rip+0x30bde]        # 443176 <_IO_stdin_used@@Base+0x15176>
  412598:	mov    rdx,rbx
  41259b:	mov    ecx,0x570
  4125a0:	xor    eax,eax
  4125a2:	call   406180 <fprintf@plt>
  4125a7:	lea    rdi,[rip+0x2e5e1]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4125ae:	lea    rcx,[rip+0x31f85]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  4125b5:	mov    rsi,rbx
  4125b8:	mov    edx,0x570
  4125bd:	call   406100 <__assert_fail@plt>
  4125c2:	lea    rdi,[rip+0x23f99]        # 436562 <_IO_stdin_used@@Base+0x8562>
  4125c9:	lea    rsi,[rip+0x302ad]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4125d0:	lea    rcx,[rip+0x31076]        # 44364d <_IO_stdin_used@@Base+0x1564d>
  4125d7:	mov    edx,0x515
  4125dc:	vzeroupper 
  4125df:	call   406100 <__assert_fail@plt>
  4125e4:	mov    rax,QWORD PTR [rip+0x3fa0d]        # 451ff8 <stderr@GLIBC_2.2.5>
  4125eb:	mov    rdi,QWORD PTR [rax]
  4125ee:	lea    rsi,[rip+0x1d633]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4125f5:	lea    rbx,[rip+0x30281]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4125fc:	lea    r8,[rip+0x30b73]        # 443176 <_IO_stdin_used@@Base+0x15176>
  412603:	mov    rdx,rbx
  412606:	mov    ecx,0x517
  41260b:	xor    eax,eax
  41260d:	call   406180 <fprintf@plt>
  412612:	lea    rdi,[rip+0x2e576]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  412619:	lea    rcx,[rip+0x3102d]        # 44364d <_IO_stdin_used@@Base+0x1564d>
  412620:	mov    rsi,rbx
  412623:	mov    edx,0x517
  412628:	call   406100 <__assert_fail@plt>
  41262d:	lea    rdi,[rip+0x3023d]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412634:	lea    rsi,[rip+0x30242]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41263b:	lea    rcx,[rip+0x3077e]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  412642:	mov    edx,0x5df
  412647:	call   406100 <__assert_fail@plt>
  41264c:	lea    rdi,[rip+0x3021e]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412653:	lea    rsi,[rip+0x30223]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41265a:	lea    rcx,[rip+0x3075f]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  412661:	mov    edx,0x607
  412666:	call   406100 <__assert_fail@plt>
  41266b:	lea    rdi,[rip+0x301ff]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412672:	lea    rsi,[rip+0x30204]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412679:	lea    rcx,[rip+0x30740]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  412680:	mov    edx,0x609
  412685:	call   406100 <__assert_fail@plt>
  41268a:	lea    rdi,[rip+0x301e0]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412691:	lea    rsi,[rip+0x301e5]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412698:	lea    rcx,[rip+0x30721]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  41269f:	mov    edx,0x60a
  4126a4:	call   406100 <__assert_fail@plt>
  4126a9:	lea    rdi,[rip+0x301c1]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4126b0:	lea    rsi,[rip+0x301c6]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4126b7:	lea    rcx,[rip+0x30702]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  4126be:	mov    edx,0x60e
  4126c3:	call   406100 <__assert_fail@plt>
  4126c8:	lea    rdi,[rip+0x301a2]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4126cf:	lea    rsi,[rip+0x301a7]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4126d6:	lea    rcx,[rip+0x306e3]        # 442dc0 <_IO_stdin_used@@Base+0x14dc0>
  4126dd:	mov    edx,0x610
  4126e2:	call   406100 <__assert_fail@plt>
  4126e7:	lea    rdi,[rip+0x30183]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4126ee:	lea    rsi,[rip+0x30188]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4126f5:	lea    rcx,[rip+0x30a02]        # 4430fe <_IO_stdin_used@@Base+0x150fe>
  4126fc:	mov    edx,0x62e
  412701:	call   406100 <__assert_fail@plt>
  412706:	lea    rdi,[rip+0x30164]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41270d:	lea    rsi,[rip+0x30169]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412714:	lea    rcx,[rip+0x309e3]        # 4430fe <_IO_stdin_used@@Base+0x150fe>
  41271b:	mov    edx,0x62f
  412720:	call   406100 <__assert_fail@plt>
  412725:	lea    rdi,[rip+0x30145]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41272c:	lea    rsi,[rip+0x3014a]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412733:	lea    rcx,[rip+0x30f13]        # 44364d <_IO_stdin_used@@Base+0x1564d>
  41273a:	mov    edx,0x536
  41273f:	call   406100 <__assert_fail@plt>
  412744:	lea    rdi,[rip+0x30126]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41274b:	lea    rsi,[rip+0x3012b]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412752:	lea    rcx,[rip+0x30ef4]        # 44364d <_IO_stdin_used@@Base+0x1564d>
  412759:	mov    edx,0x53f
  41275e:	call   406100 <__assert_fail@plt>
  412763:	lea    rdi,[rip+0x23df8]        # 436562 <_IO_stdin_used@@Base+0x8562>
  41276a:	lea    rsi,[rip+0x3010c]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412771:	lea    rcx,[rip+0x31b73]        # 4442eb <_IO_stdin_used@@Base+0x162eb>
  412778:	mov    edx,0x549
  41277d:	call   406100 <__assert_fail@plt>
  412782:	lea    rdi,[rip+0x300e8]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412789:	lea    rsi,[rip+0x300ed]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412790:	lea    rcx,[rip+0x31b54]        # 4442eb <_IO_stdin_used@@Base+0x162eb>
  412797:	mov    edx,0x55a
  41279c:	call   406100 <__assert_fail@plt>
  4127a1:	lea    rdi,[rip+0x300c9]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4127a8:	lea    rsi,[rip+0x300ce]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4127af:	lea    rcx,[rip+0x31b35]        # 4442eb <_IO_stdin_used@@Base+0x162eb>
  4127b6:	mov    edx,0x560
  4127bb:	call   406100 <__assert_fail@plt>
  4127c0:	lea    rdi,[rip+0x300aa]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4127c7:	lea    rsi,[rip+0x300af]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4127ce:	lea    rcx,[rip+0x31d65]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  4127d5:	mov    edx,0x59e
  4127da:	call   406100 <__assert_fail@plt>
  4127df:	lea    rdi,[rip+0x3008b]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4127e6:	lea    rsi,[rip+0x30090]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4127ed:	lea    rcx,[rip+0x31d46]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  4127f4:	mov    edx,0x5c1
  4127f9:	call   406100 <__assert_fail@plt>
  4127fe:	lea    rdi,[rip+0x3006c]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412805:	lea    rsi,[rip+0x30071]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41280c:	lea    rcx,[rip+0x31d27]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  412813:	mov    edx,0x5c7
  412818:	call   406100 <__assert_fail@plt>
  41281d:	lea    rdi,[rip+0x3004d]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412824:	lea    rsi,[rip+0x30052]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41282b:	lea    rcx,[rip+0x300ba]        # 4428ec <_IO_stdin_used@@Base+0x148ec>
  412832:	mov    edx,0x6db
  412837:	call   406100 <__assert_fail@plt>
  41283c:	lea    rdi,[rip+0x3002e]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412843:	lea    rsi,[rip+0x30033]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41284a:	lea    rcx,[rip+0x31ce9]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  412851:	mov    edx,0x5b2
  412856:	call   406100 <__assert_fail@plt>
  41285b:	lea    rdi,[rip+0x3000f]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412862:	lea    rsi,[rip+0x30014]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412869:	lea    rcx,[rip+0x31cca]        # 44453a <_IO_stdin_used@@Base+0x1653a>
  412870:	mov    edx,0x5b5
  412875:	call   406100 <__assert_fail@plt>
  41287a:	lea    rdi,[rip+0x2fff0]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412881:	lea    rsi,[rip+0x2fff5]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412888:	lea    rcx,[rip+0x3005d]        # 4428ec <_IO_stdin_used@@Base+0x148ec>
  41288f:	mov    edx,0x6b4
  412894:	call   406100 <__assert_fail@plt>
  412899:	lea    rdi,[rip+0x2ffd1]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4128a0:	lea    rsi,[rip+0x2ffd6]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4128a7:	lea    rcx,[rip+0x32276]        # 444b24 <_IO_stdin_used@@Base+0x16b24>
  4128ae:	mov    edx,0x64a
  4128b3:	call   406100 <__assert_fail@plt>
  4128b8:	lea    rdi,[rip+0x2ffb2]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4128bf:	lea    rsi,[rip+0x2ffb7]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4128c6:	lea    rcx,[rip+0x3243a]        # 444d07 <_IO_stdin_used@@Base+0x16d07>
  4128cd:	mov    edx,0x66d
  4128d2:	call   406100 <__assert_fail@plt>
  4128d7:	lea    rdi,[rip+0x2ff93]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4128de:	lea    rsi,[rip+0x2ff98]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4128e5:	lea    rcx,[rip+0x321a9]        # 444a95 <_IO_stdin_used@@Base+0x16a95>
  4128ec:	mov    edx,0x4b5
  4128f1:	call   406100 <__assert_fail@plt>
  4128f6:	lea    rdi,[rip+0x2ff74]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4128fd:	lea    rsi,[rip+0x2ff79]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412904:	lea    rcx,[rip+0x32219]        # 444b24 <_IO_stdin_used@@Base+0x16b24>
  41290b:	mov    edx,0x65a
  412910:	call   406100 <__assert_fail@plt>
  412915:	lea    rdi,[rip+0x2ff55]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41291c:	lea    rsi,[rip+0x2ff5a]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412923:	lea    rcx,[rip+0x323dd]        # 444d07 <_IO_stdin_used@@Base+0x16d07>
  41292a:	mov    edx,0x67d
  41292f:	call   406100 <__assert_fail@plt>
  412934:	lea    rdi,[rip+0x2ff36]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41293b:	lea    rsi,[rip+0x2ff3b]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412942:	lea    rcx,[rip+0x323be]        # 444d07 <_IO_stdin_used@@Base+0x16d07>
  412949:	mov    edx,0x681
  41294e:	call   406100 <__assert_fail@plt>
  412953:	lea    rdi,[rsp+0x20]
  412958:	call   415be0 <__flatcc_fb_gen_c_json_parser@@Base+0x5920>
  41295d:	mov    rax,QWORD PTR [rip+0x3f694]        # 451ff8 <stderr@GLIBC_2.2.5>
  412964:	mov    rdi,QWORD PTR [rax]
  412967:	lea    rsi,[rip+0x1d2ba]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41296e:	lea    rbx,[rip+0x2ff08]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412975:	lea    r8,[rip+0x307fa]        # 443176 <_IO_stdin_used@@Base+0x15176>
  41297c:	mov    rdx,rbx
  41297f:	mov    ecx,0x4aa
  412984:	xor    eax,eax
  412986:	call   406180 <fprintf@plt>
  41298b:	lea    rdi,[rip+0x2e1fd]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  412992:	lea    rcx,[rip+0x320fc]        # 444a95 <_IO_stdin_used@@Base+0x16a95>
  412999:	mov    rsi,rbx
  41299c:	mov    edx,0x4aa
  4129a1:	call   406100 <__assert_fail@plt>
  4129a6:	lea    rdi,[rip+0x2fec4]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4129ad:	lea    rsi,[rip+0x2fec9]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4129b4:	lea    rcx,[rip+0x320da]        # 444a95 <_IO_stdin_used@@Base+0x16a95>
  4129bb:	mov    edx,0x4ba
  4129c0:	call   406100 <__assert_fail@plt>
  4129c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129cf:	nop
  4129d0:	push   rbp
  4129d1:	push   r15
  4129d3:	push   r14
  4129d5:	push   r13
  4129d7:	push   r12
  4129d9:	push   rbx
  4129da:	sub    rsp,0xe8
  4129e1:	mov    rbp,rsi
  4129e4:	mov    rbx,rdi
  4129e7:	test   al,al
  4129e9:	je     412a2d <__flatcc_fb_gen_c_json_parser@@Base+0x276d>
  4129eb:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  4129f1:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  4129f7:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  412a00:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  412a09:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  412a12:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  412a1b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  412a24:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  412a2d:	mov    QWORD PTR [rsp+0x40],rdx
  412a32:	mov    QWORD PTR [rsp+0x48],rcx
  412a37:	mov    QWORD PTR [rsp+0x50],r8
  412a3c:	mov    QWORD PTR [rsp+0x58],r9
  412a41:	mov    rax,QWORD PTR [rbx+0xe0]
  412a48:	mov    r15d,DWORD PTR [rax+0xd0]
  412a4f:	imul   r15d,DWORD PTR [rbx+0xf0]
  412a57:	cmp    BYTE PTR [rip+0x3f6f2],0x0        # 452150 <__bss_start@@Base+0x18>
  412a5e:	jne    412a78 <__flatcc_fb_gen_c_json_parser@@Base+0x27b8>
  412a60:	vmovaps ymm0,YMMWORD PTR [rip+0x2fa38]        # 4424a0 <_IO_stdin_used@@Base+0x144a0>
  412a68:	vmovups YMMWORD PTR [rip+0x3f700],ymm0        # 452170 <__bss_start@@Base+0x38>
  412a70:	vmovups YMMWORD PTR [rip+0x3f6d8],ymm0        # 452150 <__bss_start@@Base+0x18>
  412a78:	cmp    BYTE PTR [rbp+0x0],0x0
  412a7c:	je     412b37 <__flatcc_fb_gen_c_json_parser@@Base+0x2877>
  412a82:	mov    rdi,QWORD PTR [rbx+0xd0]
  412a89:	cmp    r15d,0x41
  412a8d:	jl     412ae2 <__flatcc_fb_gen_c_json_parser@@Base+0x2822>
  412a8f:	mov    QWORD PTR [rsp+0x8],rbp
  412a94:	lea    ebp,[r15-0x41]
  412a98:	and    ebp,0xffffffc0
  412a9b:	lea    r12,[rip+0x2e0fd]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  412aa2:	lea    r13,[rip+0x3f6a7]        # 452150 <__bss_start@@Base+0x18>
  412aa9:	mov    r14d,r15d
  412aac:	nop    DWORD PTR [rax+0x0]
  412ab0:	mov    rsi,r12
  412ab3:	mov    edx,0x40
  412ab8:	mov    rcx,r13
  412abb:	xor    eax,eax
  412abd:	vzeroupper 
  412ac0:	call   406180 <fprintf@plt>
  412ac5:	add    r14d,0xffffffc0
  412ac9:	mov    rdi,QWORD PTR [rbx+0xd0]
  412ad0:	cmp    r14d,0x40
  412ad4:	jg     412ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x27f0>
  412ad6:	sub    r15d,ebp
  412ad9:	add    r15d,0xffffffc0
  412add:	mov    rbp,QWORD PTR [rsp+0x8]
  412ae2:	lea    rsi,[rip+0x2e0b6]        # 440b9f <_IO_stdin_used@@Base+0x12b9f>
  412ae9:	lea    rcx,[rip+0x3f660]        # 452150 <__bss_start@@Base+0x18>
  412af0:	mov    edx,r15d
  412af3:	xor    eax,eax
  412af5:	vzeroupper 
  412af8:	call   406180 <fprintf@plt>
  412afd:	movabs rax,0x3000000010
  412b07:	mov    QWORD PTR [rsp+0x10],rax
  412b0c:	lea    rax,[rsp+0x120]
  412b14:	mov    QWORD PTR [rsp+0x18],rax
  412b19:	lea    rax,[rsp+0x30]
  412b1e:	mov    QWORD PTR [rsp+0x20],rax
  412b23:	mov    rdi,QWORD PTR [rbx+0xd0]
  412b2a:	lea    rdx,[rsp+0x10]
  412b2f:	mov    rsi,rbp
  412b32:	call   406200 <vfprintf@plt>
  412b37:	mov    rsi,QWORD PTR [rbx+0xd0]
  412b3e:	mov    edi,0xa
  412b43:	vzeroupper 
  412b46:	call   406120 <fputc@plt>
  412b4b:	add    rsp,0xe8
  412b52:	pop    rbx
  412b53:	pop    r12
  412b55:	pop    r13
  412b57:	pop    r14
  412b59:	pop    r15
  412b5b:	pop    rbp
  412b5c:	ret    
  412b5d:	nop    DWORD PTR [rax]
  412b60:	push   r14
  412b62:	push   rbx
  412b63:	sub    rsp,0xd8
  412b6a:	mov    rbx,rdi
  412b6d:	mov    r14,rsp
  412b70:	mov    rdi,rsi
  412b73:	mov    rsi,r14
  412b76:	call   408060 <__flatcc_fb_copy_scope@@Base>
  412b7b:	mov    rax,QWORD PTR [rbx+0xd8]
  412b82:	mov    rdx,QWORD PTR [rax+0x110]
  412b89:	lea    rsi,[rip+0x300d5]        # 442c65 <_IO_stdin_used@@Base+0x14c65>
  412b90:	mov    rdi,rbx
  412b93:	mov    rcx,r14
  412b96:	xor    eax,eax
  412b98:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412b9d:	lea    rsi,[rip+0x2fe9c]        # 442a40 <_IO_stdin_used@@Base+0x14a40>
  412ba4:	mov    rdi,rbx
  412ba7:	xor    eax,eax
  412ba9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412bae:	add    rsp,0xd8
  412bb5:	pop    rbx
  412bb6:	pop    r14
  412bb8:	ret    
  412bb9:	nop    DWORD PTR [rax+0x0]
  412bc0:	push   rbp
  412bc1:	mov    rbp,rsp
  412bc4:	push   r15
  412bc6:	push   r14
  412bc8:	push   r12
  412bca:	push   rbx
  412bcb:	and    rsp,0xffffffffffffffe0
  412bcf:	sub    rsp,0x160
  412bd6:	vxorps xmm0,xmm0,xmm0
  412bda:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  412be0:	mov    DWORD PTR [rsp+0x1c],0x0
  412be8:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412bee:	mov    eax,DWORD PTR [rsi+0x10]
  412bf1:	add    eax,0xfffffffd
  412bf4:	cmp    ax,0x2
  412bf8:	jae    412e74 <__flatcc_fb_gen_c_json_parser@@Base+0x2bb4>
  412bfe:	mov    r15,rsi
  412c01:	mov    rbx,rdi
  412c04:	lea    rsi,[rsp+0x1c]
  412c09:	mov    rdi,r15
  412c0c:	vzeroupper 
  412c0f:	call   413230 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
  412c14:	mov    QWORD PTR [rsp+0x20],rax
  412c19:	mov    r14d,DWORD PTR [rsp+0x1c]
  412c1e:	test   rax,rax
  412c21:	jne    412c2c <__flatcc_fb_gen_c_json_parser@@Base+0x296c>
  412c23:	test   r14d,r14d
  412c26:	jg     412e96 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd6>
  412c2c:	mov    QWORD PTR [rsp+0x38],r15
  412c31:	mov    DWORD PTR [rsp+0x40],0x2
  412c39:	lea    rax,[rip+0x790]        # 4133d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3110>
  412c40:	mov    QWORD PTR [rsp+0x28],rax
  412c45:	lea    rax,[rip+0x894]        # 4134e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3220>
  412c4c:	mov    QWORD PTR [rsp+0x30],rax
  412c51:	vxorps xmm0,xmm0,xmm0
  412c55:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  412c5b:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  412c64:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  412c6d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  412c76:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  412c7f:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  412c88:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  412c91:	mov    QWORD PTR [rsp+0x140],0x0
  412c9d:	mov    rdi,QWORD PTR [r15+0x18]
  412ca1:	lea    r12,[rsp+0x60]
  412ca6:	mov    rsi,r15
  412ca9:	mov    rdx,r12
  412cac:	vzeroupper 
  412caf:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  412cb4:	lea    rsi,[rip+0x2fd22]        # 4429dd <_IO_stdin_used@@Base+0x149dd>
  412cbb:	mov    rdi,rbx
  412cbe:	mov    rdx,r12
  412cc1:	xor    eax,eax
  412cc3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412cc8:	add    DWORD PTR [rbx+0xf0],0x2
  412ccf:	lea    rsi,[rip+0x304dc]        # 4431b2 <_IO_stdin_used@@Base+0x151b2>
  412cd6:	mov    rdi,rbx
  412cd9:	xor    eax,eax
  412cdb:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412ce0:	mov    eax,DWORD PTR [rbx+0xf0]
  412ce6:	test   eax,eax
  412ce8:	je     412e55 <__flatcc_fb_gen_c_json_parser@@Base+0x2b95>
  412cee:	mov    ecx,eax
  412cf0:	dec    ecx
  412cf2:	mov    DWORD PTR [rbx+0xf0],ecx
  412cf8:	je     412e55 <__flatcc_fb_gen_c_json_parser@@Base+0x2b95>
  412cfe:	add    eax,0xfffffffe
  412d01:	mov    DWORD PTR [rbx+0xf0],eax
  412d07:	lea    rsi,[rip+0x32f04]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  412d0e:	mov    rdi,rbx
  412d11:	xor    eax,eax
  412d13:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412d18:	inc    DWORD PTR [rbx+0xf0]
  412d1e:	test   r14d,r14d
  412d21:	je     412dce <__flatcc_fb_gen_c_json_parser@@Base+0x2b0e>
  412d27:	lea    rsi,[rip+0x304fd]        # 44322b <_IO_stdin_used@@Base+0x1522b>
  412d2e:	mov    rdi,rbx
  412d31:	xor    eax,eax
  412d33:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412d38:	lea    rsi,[rip+0x30509]        # 443248 <_IO_stdin_used@@Base+0x15248>
  412d3f:	mov    rdi,rbx
  412d42:	xor    eax,eax
  412d44:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412d49:	lea    rsi,[rip+0x3050a]        # 44325a <_IO_stdin_used@@Base+0x1525a>
  412d50:	mov    rdi,rbx
  412d53:	xor    eax,eax
  412d55:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412d5a:	lea    rsi,[rip+0x1cfe2]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  412d61:	mov    rdi,rbx
  412d64:	xor    eax,eax
  412d66:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412d6b:	lea    rsi,[rip+0x304f4]        # 443266 <_IO_stdin_used@@Base+0x15266>
  412d72:	mov    rdi,rbx
  412d75:	xor    eax,eax
  412d77:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412d7c:	dec    r14d
  412d7f:	lea    rsi,[rsp+0x20]
  412d84:	mov    rdi,rbx
  412d87:	xor    edx,edx
  412d89:	mov    ecx,r14d
  412d8c:	xor    r8d,r8d
  412d8f:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  412d94:	lea    rsi,[rip+0x30270]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  412d9b:	mov    rdi,rbx
  412d9e:	xor    eax,eax
  412da0:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412da5:	mov    eax,DWORD PTR [rbx+0xf0]
  412dab:	test   eax,eax
  412dad:	jne    412e0f <__flatcc_fb_gen_c_json_parser@@Base+0x2b4f>
  412daf:	lea    rdi,[rip+0x2fabb]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412db6:	lea    rsi,[rip+0x2fac0]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412dbd:	lea    rcx,[rip+0x30379]        # 44313d <_IO_stdin_used@@Base+0x1513d>
  412dc4:	mov    edx,0x4fe
  412dc9:	call   406100 <__assert_fail@plt>
  412dce:	lea    rsi,[rip+0x3040f]        # 4431e4 <_IO_stdin_used@@Base+0x151e4>
  412dd5:	mov    rdi,rbx
  412dd8:	xor    eax,eax
  412dda:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412ddf:	lea    rsi,[rip+0x30418]        # 4431fe <_IO_stdin_used@@Base+0x151fe>
  412de6:	mov    rdi,rbx
  412de9:	xor    eax,eax
  412deb:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412df0:	lea    rsi,[rip+0x30417]        # 44320e <_IO_stdin_used@@Base+0x1520e>
  412df7:	mov    rdi,rbx
  412dfa:	xor    eax,eax
  412dfc:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412e01:	mov    eax,DWORD PTR [rbx+0xf0]
  412e07:	test   eax,eax
  412e09:	je     412edf <__flatcc_fb_gen_c_json_parser@@Base+0x2c1f>
  412e0f:	dec    eax
  412e11:	mov    DWORD PTR [rbx+0xf0],eax
  412e17:	lea    rsi,[rip+0x1f29e]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  412e1e:	mov    rdi,rbx
  412e21:	xor    eax,eax
  412e23:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412e28:	lea    rsi,[rip+0x1cf14]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  412e2f:	mov    rdi,rbx
  412e32:	xor    eax,eax
  412e34:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412e39:	mov    rdi,QWORD PTR [rsp+0x20]
  412e3e:	test   rdi,rdi
  412e41:	je     412e48 <__flatcc_fb_gen_c_json_parser@@Base+0x2b88>
  412e43:	call   406040 <free@plt>
  412e48:	lea    rsp,[rbp-0x20]
  412e4c:	pop    rbx
  412e4d:	pop    r12
  412e4f:	pop    r14
  412e51:	pop    r15
  412e53:	pop    rbp
  412e54:	ret    
  412e55:	lea    rdi,[rip+0x2fa15]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412e5c:	lea    rsi,[rip+0x2fa1a]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412e63:	lea    rcx,[rip+0x302d3]        # 44313d <_IO_stdin_used@@Base+0x1513d>
  412e6a:	mov    edx,0x4ef
  412e6f:	call   406100 <__assert_fail@plt>
  412e74:	lea    rdi,[rip+0x2322d]        # 4360a8 <_IO_stdin_used@@Base+0x80a8>
  412e7b:	lea    rsi,[rip+0x2f9fb]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412e82:	lea    rcx,[rip+0x302b4]        # 44313d <_IO_stdin_used@@Base+0x1513d>
  412e89:	mov    edx,0x4de
  412e8e:	vzeroupper 
  412e91:	call   406100 <__assert_fail@plt>
  412e96:	mov    rax,QWORD PTR [rip+0x3f15b]        # 451ff8 <stderr@GLIBC_2.2.5>
  412e9d:	mov    rdi,QWORD PTR [rax]
  412ea0:	lea    rsi,[rip+0x1cd81]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  412ea7:	lea    rbx,[rip+0x2f9cf]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412eae:	lea    r8,[rip+0x302c1]        # 443176 <_IO_stdin_used@@Base+0x15176>
  412eb5:	mov    rdx,rbx
  412eb8:	mov    ecx,0x4e1
  412ebd:	xor    eax,eax
  412ebf:	call   406180 <fprintf@plt>
  412ec4:	lea    rdi,[rip+0x2dcc4]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  412ecb:	lea    rcx,[rip+0x3026b]        # 44313d <_IO_stdin_used@@Base+0x1513d>
  412ed2:	mov    rsi,rbx
  412ed5:	mov    edx,0x4e1
  412eda:	call   406100 <__assert_fail@plt>
  412edf:	lea    rdi,[rip+0x2f98b]        # 442871 <_IO_stdin_used@@Base+0x14871>
  412ee6:	lea    rsi,[rip+0x2f990]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  412eed:	lea    rcx,[rip+0x30249]        # 44313d <_IO_stdin_used@@Base+0x1513d>
  412ef4:	mov    edx,0x4f5
  412ef9:	call   406100 <__assert_fail@plt>
  412efe:	xchg   ax,ax
  412f00:	push   rbp
  412f01:	mov    rbp,rsp
  412f04:	push   r15
  412f06:	push   r14
  412f08:	push   r12
  412f0a:	push   rbx
  412f0b:	and    rsp,0xffffffffffffffe0
  412f0f:	sub    rsp,0x140
  412f16:	mov    r15,rsi
  412f19:	mov    rbx,rdi
  412f1c:	vxorps xmm0,xmm0,xmm0
  412f20:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412f26:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  412f2c:	lea    rsi,[rsp+0x60]
  412f31:	mov    rdi,r15
  412f34:	vzeroupper 
  412f37:	call   408060 <__flatcc_fb_copy_scope@@Base>
  412f3c:	mov    rax,QWORD PTR [rbx+0xd8]
  412f43:	vxorps xmm0,xmm0,xmm0
  412f47:	vmovaps XMMWORD PTR [rsp],xmm0
  412f4c:	mov    QWORD PTR [rsp+0x10],0x0
  412f55:	mov    QWORD PTR [rsp+0x8],rax
  412f5a:	add    r15,0x8
  412f5e:	lea    rsi,[rip+0x2beb]        # 415b50 <__flatcc_fb_gen_c_json_parser@@Base+0x5890>
  412f65:	mov    rdx,rsp
  412f68:	mov    rdi,r15
  412f6b:	call   41a400 <fb_symbol_table_visit@@Base>
  412f70:	movsxd r14,DWORD PTR [rsp]
  412f74:	test   r14,r14
  412f77:	je     412fbe <__flatcc_fb_gen_c_json_parser@@Base+0x2cfe>
  412f79:	mov    rdi,r14
  412f7c:	shl    rdi,0x5
  412f80:	call   4061b0 <malloc@plt>
  412f85:	test   rax,rax
  412f88:	je     412fbe <__flatcc_fb_gen_c_json_parser@@Base+0x2cfe>
  412f8a:	mov    r12,rax
  412f8d:	mov    QWORD PTR [rsp+0x10],rax
  412f92:	lea    rsi,[rip+0x2be7]        # 415b80 <__flatcc_fb_gen_c_json_parser@@Base+0x58c0>
  412f99:	mov    rdx,rsp
  412f9c:	mov    rdi,r15
  412f9f:	call   41a400 <fb_symbol_table_visit@@Base>
  412fa4:	movsxd rsi,DWORD PTR [rsp]
  412fa8:	lea    rcx,[rip+0x1651]        # 414600 <__flatcc_fb_gen_c_json_parser@@Base+0x4340>
  412faf:	mov    edx,0x20
  412fb4:	mov    rdi,r12
  412fb7:	call   406080 <qsort@plt>
  412fbc:	jmp    412fc1 <__flatcc_fb_gen_c_json_parser@@Base+0x2d01>
  412fbe:	xor    r12d,r12d
  412fc1:	mov    QWORD PTR [rsp+0x20],r12
  412fc6:	test   r14d,r14d
  412fc9:	jle    412fd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d14>
  412fcb:	test   r12,r12
  412fce:	je     4131bc <__flatcc_fb_gen_c_json_parser@@Base+0x2efc>
  412fd4:	mov    QWORD PTR [rsp+0x38],0x0
  412fdd:	mov    DWORD PTR [rsp+0x40],0x3
  412fe5:	lea    rax,[rip+0x2a24]        # 415a10 <__flatcc_fb_gen_c_json_parser@@Base+0x5750>
  412fec:	mov    QWORD PTR [rsp+0x28],rax
  412ff1:	lea    rax,[rip+0x2b48]        # 415b40 <__flatcc_fb_gen_c_json_parser@@Base+0x5880>
  412ff8:	mov    QWORD PTR [rsp+0x30],rax
  412ffd:	mov    rax,QWORD PTR [rbx+0xd8]
  413004:	mov    rdx,QWORD PTR [rax+0x110]
  41300b:	lea    rsi,[rip+0x2fc53]        # 442c65 <_IO_stdin_used@@Base+0x14c65>
  413012:	lea    rcx,[rsp+0x60]
  413017:	mov    rdi,rbx
  41301a:	xor    eax,eax
  41301c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413021:	add    DWORD PTR [rbx+0xf0],0x2
  413028:	lea    rsi,[rip+0x318de]        # 44490d <_IO_stdin_used@@Base+0x1690d>
  41302f:	mov    rdi,rbx
  413032:	xor    eax,eax
  413034:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413039:	mov    eax,DWORD PTR [rbx+0xf0]
  41303f:	test   eax,eax
  413041:	je     41319d <__flatcc_fb_gen_c_json_parser@@Base+0x2edd>
  413047:	mov    ecx,eax
  413049:	dec    ecx
  41304b:	mov    DWORD PTR [rbx+0xf0],ecx
  413051:	je     41319d <__flatcc_fb_gen_c_json_parser@@Base+0x2edd>
  413057:	add    eax,0xfffffffe
  41305a:	mov    DWORD PTR [rbx+0xf0],eax
  413060:	lea    rsi,[rip+0x32bab]        # 445c12 <_IO_stdin_used@@Base+0x17c12>
  413067:	mov    rdi,rbx
  41306a:	xor    eax,eax
  41306c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413071:	inc    DWORD PTR [rbx+0xf0]
  413077:	test   r14d,r14d
  41307a:	je     413127 <__flatcc_fb_gen_c_json_parser@@Base+0x2e67>
  413080:	lea    rsi,[rip+0x301a4]        # 44322b <_IO_stdin_used@@Base+0x1522b>
  413087:	mov    rdi,rbx
  41308a:	xor    eax,eax
  41308c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413091:	lea    rsi,[rip+0x301b0]        # 443248 <_IO_stdin_used@@Base+0x15248>
  413098:	mov    rdi,rbx
  41309b:	xor    eax,eax
  41309d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4130a2:	lea    rsi,[rip+0x301b1]        # 44325a <_IO_stdin_used@@Base+0x1525a>
  4130a9:	mov    rdi,rbx
  4130ac:	xor    eax,eax
  4130ae:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4130b3:	lea    rsi,[rip+0x1cc89]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4130ba:	mov    rdi,rbx
  4130bd:	xor    eax,eax
  4130bf:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4130c4:	lea    rsi,[rip+0x3019b]        # 443266 <_IO_stdin_used@@Base+0x15266>
  4130cb:	mov    rdi,rbx
  4130ce:	xor    eax,eax
  4130d0:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4130d5:	dec    r14d
  4130d8:	lea    rsi,[rsp+0x20]
  4130dd:	mov    rdi,rbx
  4130e0:	xor    edx,edx
  4130e2:	mov    ecx,r14d
  4130e5:	xor    r8d,r8d
  4130e8:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4130ed:	lea    rsi,[rip+0x2ff17]        # 44300b <_IO_stdin_used@@Base+0x1500b>
  4130f4:	mov    rdi,rbx
  4130f7:	xor    eax,eax
  4130f9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4130fe:	mov    eax,DWORD PTR [rbx+0xf0]
  413104:	test   eax,eax
  413106:	jne    413157 <__flatcc_fb_gen_c_json_parser@@Base+0x2e97>
  413108:	lea    rdi,[rip+0x2f762]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41310f:	lea    rsi,[rip+0x2f767]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  413116:	lea    rcx,[rip+0x317be]        # 4448db <_IO_stdin_used@@Base+0x168db>
  41311d:	mov    edx,0x48e
  413122:	call   406100 <__assert_fail@plt>
  413127:	lea    rsi,[rip+0x31811]        # 44493f <_IO_stdin_used@@Base+0x1693f>
  41312e:	mov    rdi,rbx
  413131:	xor    eax,eax
  413133:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413138:	lea    rsi,[rip+0x300cf]        # 44320e <_IO_stdin_used@@Base+0x1520e>
  41313f:	mov    rdi,rbx
  413142:	xor    eax,eax
  413144:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413149:	mov    eax,DWORD PTR [rbx+0xf0]
  41314f:	test   eax,eax
  413151:	je     413205 <__flatcc_fb_gen_c_json_parser@@Base+0x2f45>
  413157:	dec    eax
  413159:	mov    DWORD PTR [rbx+0xf0],eax
  41315f:	lea    rsi,[rip+0x1ef56]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  413166:	mov    rdi,rbx
  413169:	xor    eax,eax
  41316b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413170:	lea    rsi,[rip+0x1cbcc]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  413177:	mov    rdi,rbx
  41317a:	xor    eax,eax
  41317c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413181:	mov    rdi,QWORD PTR [rsp+0x20]
  413186:	test   rdi,rdi
  413189:	je     413190 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed0>
  41318b:	call   406040 <free@plt>
  413190:	lea    rsp,[rbp-0x20]
  413194:	pop    rbx
  413195:	pop    r12
  413197:	pop    r14
  413199:	pop    r15
  41319b:	pop    rbp
  41319c:	ret    
  41319d:	lea    rdi,[rip+0x2f6cd]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4131a4:	lea    rsi,[rip+0x2f6d2]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4131ab:	lea    rcx,[rip+0x31729]        # 4448db <_IO_stdin_used@@Base+0x168db>
  4131b2:	mov    edx,0x480
  4131b7:	call   406100 <__assert_fail@plt>
  4131bc:	mov    rax,QWORD PTR [rip+0x3ee35]        # 451ff8 <stderr@GLIBC_2.2.5>
  4131c3:	mov    rdi,QWORD PTR [rax]
  4131c6:	lea    rsi,[rip+0x1ca5b]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4131cd:	lea    rbx,[rip+0x2f6a9]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4131d4:	lea    r8,[rip+0x2ff9b]        # 443176 <_IO_stdin_used@@Base+0x15176>
  4131db:	mov    rdx,rbx
  4131de:	mov    ecx,0x474
  4131e3:	xor    eax,eax
  4131e5:	call   406180 <fprintf@plt>
  4131ea:	lea    rdi,[rip+0x2d99e]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4131f1:	lea    rcx,[rip+0x316e3]        # 4448db <_IO_stdin_used@@Base+0x168db>
  4131f8:	mov    rsi,rbx
  4131fb:	mov    edx,0x474
  413200:	call   406100 <__assert_fail@plt>
  413205:	lea    rdi,[rip+0x2f665]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41320c:	lea    rsi,[rip+0x2f66a]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  413213:	lea    rcx,[rip+0x316c1]        # 4448db <_IO_stdin_used@@Base+0x168db>
  41321a:	mov    edx,0x485
  41321f:	call   406100 <__assert_fail@plt>
  413224:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41322e:	xchg   ax,ax
  413230:	push   rbp
  413231:	push   r15
  413233:	push   r14
  413235:	push   r13
  413237:	push   r12
  413239:	push   rbx
  41323a:	push   rax
  41323b:	mov    rbx,QWORD PTR [rdi+0x28]
  41323f:	test   rbx,rbx
  413242:	je     413390 <__flatcc_fb_gen_c_json_parser@@Base+0x30d0>
  413248:	xor    eax,eax
  41324a:	mov    rdx,rbx
  41324d:	xor    ecx,ecx
  41324f:	test   BYTE PTR [rdx+0x70],0x4
  413253:	jne    413262 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa2>
  413255:	jmp    413270 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
  413257:	nop    WORD PTR [rax+rax*1+0x0]
  413260:	inc    ecx
  413262:	mov    rdx,QWORD PTR [rdx]
  413265:	test   rdx,rdx
  413268:	je     413299 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd9>
  41326a:	test   BYTE PTR [rdx+0x70],0x4
  41326e:	jne    413262 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa2>
  413270:	movzx  edi,WORD PTR [rdx+0x28]
  413274:	and    edi,0xfffffffe
  413277:	cmp    di,0xe
  41327b:	jne    413260 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  41327d:	mov    rdi,QWORD PTR [rdx+0x18]
  413281:	cmp    WORD PTR [rdi+0x10],0x4
  413286:	jne    413260 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  413288:	inc    ecx
  41328a:	mov    rdi,QWORD PTR [rdx+0x8]
  41328e:	mov    edi,DWORD PTR [rdi+0x8]
  413291:	lea    eax,[rax+rdi*1]
  413294:	add    eax,0x6
  413297:	jmp    413260 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  413299:	mov    DWORD PTR [rsi],ecx
  41329b:	test   ecx,ecx
  41329d:	je     413396 <__flatcc_fb_gen_c_json_parser@@Base+0x30d6>
  4132a3:	movsxd r14,ecx
  4132a6:	mov    rbp,r14
  4132a9:	shl    rbp,0x5
  4132ad:	movsxd rdi,eax
  4132b0:	add    rdi,rbp
  4132b3:	call   4061b0 <malloc@plt>
  4132b8:	test   rax,rax
  4132bb:	je     413396 <__flatcc_fb_gen_c_json_parser@@Base+0x30d6>
  4132c1:	mov    r15,rax
  4132c4:	test   rbx,rbx
  4132c7:	je     41339b <__flatcc_fb_gen_c_json_parser@@Base+0x30db>
  4132cd:	mov    r12,r15
  4132d0:	add    r12,rbp
  4132d3:	xor    r13d,r13d
  4132d6:	mov    rbp,r15
  4132d9:	test   BYTE PTR [rbx+0x70],0x4
  4132dd:	jne    4132f3 <__flatcc_fb_gen_c_json_parser@@Base+0x3033>
  4132df:	jmp    413305 <__flatcc_fb_gen_c_json_parser@@Base+0x3045>
  4132e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4132f0:	mov    rbp,rax
  4132f3:	mov    rbx,QWORD PTR [rbx]
  4132f6:	test   rbx,rbx
  4132f9:	je     41339b <__flatcc_fb_gen_c_json_parser@@Base+0x30db>
  4132ff:	test   BYTE PTR [rbx+0x70],0x4
  413303:	jne    4132f3 <__flatcc_fb_gen_c_json_parser@@Base+0x3033>
  413305:	mov    rax,QWORD PTR [rbx+0x8]
  413309:	mov    rsi,QWORD PTR [rax]
  41330c:	mov    QWORD PTR [rbp+0x0],rsi
  413310:	mov    rdx,QWORD PTR [rax+0x8]
  413314:	mov    DWORD PTR [rbp+0x8],edx
  413317:	mov    QWORD PTR [rbp+0x10],rbx
  41331b:	mov    DWORD PTR [rbp+0x18],0x0
  413322:	lea    rax,[rbp+0x20]
  413326:	movzx  ecx,WORD PTR [rbx+0x28]
  41332a:	and    ecx,0xfffffffe
  41332d:	cmp    cx,0xe
  413331:	jne    4132f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3030>
  413333:	mov    rcx,QWORD PTR [rbx+0x18]
  413337:	cmp    WORD PTR [rcx+0x10],0x4
  41333c:	jne    4132f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3030>
  41333e:	movsxd rax,r13d
  413341:	inc    r13d
  413344:	mov    QWORD PTR [rbx+0xa0],rax
  41334b:	lea    eax,[rdx+0x5]
  41334e:	mov    DWORD PTR [rbp+0x28],eax
  413351:	mov    QWORD PTR [rbp+0x20],r12
  413355:	mov    rdi,r12
  413358:	call   4061a0 <memcpy@plt>
  41335d:	mov    rax,QWORD PTR [rbx+0x8]
  413361:	mov    rax,QWORD PTR [rax+0x8]
  413365:	mov    WORD PTR [r12+rax*1+0x4],0x65
  41336d:	mov    DWORD PTR [r12+rax*1],0x7079745f
  413375:	add    r12,rax
  413378:	add    r12,0x6
  41337c:	mov    QWORD PTR [rbp+0x30],rbx
  413380:	mov    DWORD PTR [rbp+0x38],0x1
  413387:	add    rbp,0x40
  41338b:	jmp    4132f3 <__flatcc_fb_gen_c_json_parser@@Base+0x3033>
  413390:	mov    DWORD PTR [rsi],0x0
  413396:	xor    r15d,r15d
  413399:	jmp    4133b2 <__flatcc_fb_gen_c_json_parser@@Base+0x30f2>
  41339b:	lea    rcx,[rip+0x125e]        # 414600 <__flatcc_fb_gen_c_json_parser@@Base+0x4340>
  4133a2:	mov    edx,0x20
  4133a7:	mov    rdi,r15
  4133aa:	mov    rsi,r14
  4133ad:	call   406080 <qsort@plt>
  4133b2:	mov    rax,r15
  4133b5:	add    rsp,0x8
  4133b9:	pop    rbx
  4133ba:	pop    r12
  4133bc:	pop    r13
  4133be:	pop    r14
  4133c0:	pop    r15
  4133c2:	pop    rbp
  4133c3:	ret    
  4133c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133ce:	xchg   ax,ax
  4133d0:	push   r15
  4133d2:	push   r14
  4133d4:	push   rbx
  4133d5:	mov    r14,rdx
  4133d8:	mov    r15,rsi
  4133db:	mov    rbx,rdi
  4133de:	lea    rsi,[rip+0x2feaf]        # 443294 <_IO_stdin_used@@Base+0x15294>
  4133e5:	mov    edx,r8d
  4133e8:	xor    eax,eax
  4133ea:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4133ef:	lea    rsi,[rip+0x2feee]        # 4432e4 <_IO_stdin_used@@Base+0x152e4>
  4133f6:	mov    rdi,rbx
  4133f9:	xor    eax,eax
  4133fb:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413400:	inc    DWORD PTR [rbx+0xf0]
  413406:	mov    eax,DWORD PTR [r15+0x48]
  41340a:	lea    ecx,[rax-0x1]
  41340d:	cmp    ecx,0x5
  413410:	jae    413418 <__flatcc_fb_gen_c_json_parser@@Base+0x3158>
  413412:	mov    rdx,QWORD PTR [r14+0x48]
  413416:	jmp    413429 <__flatcc_fb_gen_c_json_parser@@Base+0x3169>
  413418:	add    eax,0xfffffffa
  41341b:	cmp    eax,0x4
  41341e:	jae    413472 <__flatcc_fb_gen_c_json_parser@@Base+0x31b2>
  413420:	mov    rdx,QWORD PTR [r14+0x48]
  413424:	test   rdx,rdx
  413427:	js     413469 <__flatcc_fb_gen_c_json_parser@@Base+0x31a9>
  413429:	lea    rsi,[rip+0x2ff12]        # 443342 <_IO_stdin_used@@Base+0x15342>
  413430:	mov    rdi,rbx
  413433:	xor    eax,eax
  413435:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41343a:	mov    eax,DWORD PTR [rbx+0xf0]
  413440:	test   eax,eax
  413442:	je     4134bb <__flatcc_fb_gen_c_json_parser@@Base+0x31fb>
  413444:	dec    eax
  413446:	mov    DWORD PTR [rbx+0xf0],eax
  41344c:	lea    rsi,[rip+0x2fb68]        # 442fbb <_IO_stdin_used@@Base+0x14fbb>
  413453:	mov    rdi,rbx
  413456:	xor    eax,eax
  413458:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41345d:	inc    DWORD PTR [rbx+0xf0]
  413463:	pop    rbx
  413464:	pop    r14
  413466:	pop    r15
  413468:	ret    
  413469:	lea    rsi,[rip+0x2fefb]        # 44336b <_IO_stdin_used@@Base+0x1536b>
  413470:	jmp    413430 <__flatcc_fb_gen_c_json_parser@@Base+0x3170>
  413472:	mov    rax,QWORD PTR [rip+0x3eb7f]        # 451ff8 <stderr@GLIBC_2.2.5>
  413479:	mov    rdi,QWORD PTR [rax]
  41347c:	lea    rsi,[rip+0x1c7a5]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  413483:	lea    rbx,[rip+0x2f3f3]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41348a:	lea    r8,[rip+0x2ff03]        # 443394 <_IO_stdin_used@@Base+0x15394>
  413491:	mov    rdx,rbx
  413494:	mov    ecx,0x2c6
  413499:	xor    eax,eax
  41349b:	call   406180 <fprintf@plt>
  4134a0:	lea    rdi,[rip+0x2d6e8]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4134a7:	lea    rcx,[rip+0x2ff09]        # 4433b7 <_IO_stdin_used@@Base+0x153b7>
  4134ae:	mov    rsi,rbx
  4134b1:	mov    edx,0x2c6
  4134b6:	call   406100 <__assert_fail@plt>
  4134bb:	lea    rdi,[rip+0x2f3af]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4134c2:	lea    rsi,[rip+0x2f3b4]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4134c9:	lea    rcx,[rip+0x2fe27]        # 4432f7 <_IO_stdin_used@@Base+0x152f7>
  4134d0:	mov    edx,0x2cf
  4134d5:	call   406100 <__assert_fail@plt>
  4134da:	nop    WORD PTR [rax+rax*1+0x0]
  4134e0:	lea    rsi,[rip+0x2ff1e]        # 443405 <_IO_stdin_used@@Base+0x15405>
  4134e7:	xor    eax,eax
  4134e9:	jmp    4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4134ee:	xchg   ax,ax
  4134f0:	push   rbp
  4134f1:	push   r15
  4134f3:	push   r14
  4134f5:	push   r13
  4134f7:	push   r12
  4134f9:	push   rbx
  4134fa:	sub    rsp,0x58
  4134fe:	mov    r15d,r8d
  413501:	mov    r9,QWORD PTR [rsi]
  413504:	movsxd r11,edx
  413507:	mov    rbp,r11
  41350a:	shl    rbp,0x5
  41350e:	mov    r10d,DWORD PTR [r9+rbp*1+0x8]
  413513:	lea    r8d,[r15+0x8]
  413517:	mov    ebx,0xfffffff8
  41351c:	sub    ebx,r15d
  41351f:	cmp    r8d,r10d
  413522:	jg     4139ac <__flatcc_fb_gen_c_json_parser@@Base+0x36ec>
  413528:	mov    eax,r10d
  41352b:	neg    eax
  41352d:	cmp    ebx,eax
  41352f:	je     4139ac <__flatcc_fb_gen_c_json_parser@@Base+0x36ec>
  413535:	mov    DWORD PTR [rsp+0x48],r10d
  41353a:	mov    QWORD PTR [rsp+0x50],rbp
  41353f:	mov    DWORD PTR [rsp+0x28],ebx
  413543:	mov    DWORD PTR [rsp+0x2c],r8d
  413548:	mov    QWORD PTR [rsp+0x30],rsi
  41354d:	mov    QWORD PTR [rsp+0x40],rdi
  413552:	mov    DWORD PTR [rsp+0x14],ecx
  413556:	mov    eax,ecx
  413558:	sub    eax,edx
  41355a:	mov    ecx,eax
  41355c:	shr    ecx,0x1f
  41355f:	add    ecx,eax
  413561:	sar    ecx,1
  413563:	movsxd rsi,r15d
  413566:	mov    QWORD PTR [rsp+0x38],rdx
  41356b:	add    ecx,edx
  41356d:	movsxd r13,ecx
  413570:	mov    rax,rsi
  413573:	mov    QWORD PTR [rsp+0x8],rsi
  413578:	lea    rax,[rsi-0x1]
  41357c:	mov    QWORD PTR [rsp+0x20],rax
  413581:	xor    eax,eax
  413583:	vpcmpeqd ymm14,ymm14,ymm14
  413588:	vmovdqa xmm0,XMMWORD PTR [rip+0x2f030]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  413590:	vpbroadcastq ymm15,QWORD PTR [rip+0x2ef7f]        # 442518 <_IO_stdin_used@@Base+0x14518>
  413599:	vpbroadcastq ymm8,QWORD PTR [rip+0x2ef7e]        # 442520 <_IO_stdin_used@@Base+0x14520>
  4135a2:	vpbroadcastq ymm3,QWORD PTR [rip+0x2ef7d]        # 442528 <_IO_stdin_used@@Base+0x14528>
  4135ab:	vpbroadcastq ymm4,QWORD PTR [rip+0x2ef7c]        # 442530 <_IO_stdin_used@@Base+0x14530>
  4135b4:	vpbroadcastq ymm5,QWORD PTR [rip+0x2ef7b]        # 442538 <_IO_stdin_used@@Base+0x14538>
  4135bd:	vpbroadcastq ymm6,QWORD PTR [rip+0x2ef7a]        # 442540 <_IO_stdin_used@@Base+0x14540>
  4135c6:	mov    QWORD PTR [rsp+0x18],r13
  4135cb:	xor    r8d,r8d
  4135ce:	xor    r14d,r14d
  4135d1:	jmp    4135ef <__flatcc_fb_gen_c_json_parser@@Base+0x332f>
  4135d3:	xor    r8d,r8d
  4135d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4135e0:	mov    rcx,r8
  4135e3:	xor    rcx,rax
  4135e6:	test   rcx,r14
  4135e9:	jne    413940 <__flatcc_fb_gen_c_json_parser@@Base+0x3680>
  4135ef:	mov    r12,r13
  4135f2:	cmp    r13,r11
  4135f5:	jle    413940 <__flatcc_fb_gen_c_json_parser@@Base+0x3680>
  4135fb:	lea    r13,[r12-0x1]
  413600:	mov    rcx,r13
  413603:	shl    rcx,0x5
  413607:	mov    r10d,DWORD PTR [r9+rcx*1+0x8]
  41360c:	sub    r10d,r15d
  41360f:	jl     4137ae <__flatcc_fb_gen_c_json_parser@@Base+0x34ee>
  413615:	cmp    r10d,0x9
  413619:	mov    eax,0x8
  41361e:	cmovge r10d,eax
  413622:	test   r10d,r10d
  413625:	je     41363e <__flatcc_fb_gen_c_json_parser@@Base+0x337e>
  413627:	mov    rdi,QWORD PTR [r9+rcx*1]
  41362b:	movsxd rdx,r10d
  41362e:	cmp    r10d,0x10
  413632:	jae    413645 <__flatcc_fb_gen_c_json_parser@@Base+0x3385>
  413634:	mov    rsi,rdx
  413637:	xor    eax,eax
  413639:	jmp    41376a <__flatcc_fb_gen_c_json_parser@@Base+0x34aa>
  41363e:	xor    eax,eax
  413640:	jmp    41379b <__flatcc_fb_gen_c_json_parser@@Base+0x34db>
  413645:	mov    rax,QWORD PTR [rsp+0x8]
  41364a:	add    rax,rdi
  41364d:	mov    rbx,rdx
  413650:	and    rbx,0xfffffffffffffff0
  413654:	mov    rsi,rdx
  413657:	sub    rsi,rbx
  41365a:	vmovq  xmm7,rdx
  41365f:	vpbroadcastq ymm7,xmm7
  413664:	vpaddq ymm10,ymm7,YMMWORD PTR [rip+0x2ee54]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  41366c:	vpxor  xmm9,xmm9,xmm9
  413671:	mov    rcx,rbx
  413674:	vpxor  xmm11,xmm11,xmm11
  413679:	vpxor  xmm12,xmm12,xmm12
  41367e:	vpxor  xmm13,xmm13,xmm13
  413683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41368d:	nop    DWORD PTR [rax]
  413690:	vpaddq ymm7,ymm10,ymm14
  413695:	vmovq  rbp,xmm7
  41369a:	vmovd  xmm1,DWORD PTR [rax+rbp*1-0x3]
  4136a0:	vmovd  xmm14,DWORD PTR [rax+rbp*1-0x7]
  4136a6:	vpshufb xmm1,xmm1,xmm0
  4136ab:	vpmovsxbq ymm1,xmm1
  4136b0:	vpshufb xmm2,xmm14,xmm0
  4136b5:	vpcmpeqd ymm14,ymm14,ymm14
  4136ba:	vpmovsxbq ymm2,xmm2
  4136bf:	vpsllq ymm7,ymm7,0x3
  4136c4:	vpsubq ymm7,ymm15,ymm7
  4136c8:	vpand  ymm7,ymm7,ymm5
  4136cc:	vpsllvq ymm1,ymm1,ymm7
  4136d1:	vpsllq ymm7,ymm10,0x3
  4136d7:	vpor   ymm9,ymm1,ymm9
  4136dc:	vpsubq ymm1,ymm8,ymm7
  4136e0:	vpand  ymm1,ymm1,ymm5
  4136e4:	vpsllvq ymm1,ymm2,ymm1
  4136e9:	vmovd  xmm2,DWORD PTR [rax+rbp*1-0xb]
  4136ef:	vpshufb xmm2,xmm2,xmm0
  4136f4:	vpmovsxbq ymm2,xmm2
  4136f9:	vpor   ymm11,ymm1,ymm11
  4136fe:	vpsubq ymm1,ymm3,ymm7
  413702:	vpand  ymm1,ymm1,ymm5
  413706:	vpsllvq ymm1,ymm2,ymm1
  41370b:	vpor   ymm12,ymm1,ymm12
  413710:	vmovd  xmm1,DWORD PTR [rax+rbp*1-0xf]
  413716:	vpshufb xmm1,xmm1,xmm0
  41371b:	vpmovsxbq ymm1,xmm1
  413720:	vpsubq ymm2,ymm4,ymm7
  413724:	vpand  ymm2,ymm2,ymm5
  413728:	vpsllvq ymm1,ymm1,ymm2
  41372d:	vpor   ymm13,ymm1,ymm13
  413732:	vpaddq ymm10,ymm10,ymm6
  413736:	add    rcx,0xfffffffffffffff0
  41373a:	jne    413690 <__flatcc_fb_gen_c_json_parser@@Base+0x33d0>
  413740:	vpor   ymm1,ymm11,ymm9
  413745:	vpor   ymm1,ymm12,ymm1
  413749:	vpor   ymm1,ymm13,ymm1
  41374d:	vextracti128 xmm2,ymm1,0x1
  413753:	vpor   xmm1,xmm1,xmm2
  413757:	vpshufd xmm2,xmm1,0x4e
  41375c:	vpor   xmm1,xmm1,xmm2
  413760:	vmovq  rax,xmm1
  413765:	cmp    rbx,rdx
  413768:	je     41379b <__flatcc_fb_gen_c_json_parser@@Base+0x34db>
  41376a:	lea    rdx,[rsi*8+0x0]
  413772:	mov    ecx,0x40
  413777:	sub    rcx,rdx
  41377a:	add    rdi,QWORD PTR [rsp+0x20]
  41377f:	nop
  413780:	movsx  rdx,BYTE PTR [rdi+rsi*1]
  413785:	mov    ebx,ecx
  413787:	and    bl,0xf8
  41378a:	shlx   rdx,rdx,rbx
  41378f:	or     rax,rdx
  413792:	add    rcx,0x8
  413796:	dec    rsi
  413799:	jne    413780 <__flatcc_fb_gen_c_json_parser@@Base+0x34c0>
  41379b:	shl    r10d,0x3
  41379f:	neg    r10b
  4137a2:	mov    rcx,0xffffffffffffffff
  4137a9:	shlx   r14,rcx,r10
  4137ae:	mov    rdx,r12
  4137b1:	shl    rdx,0x5
  4137b5:	mov    ecx,DWORD PTR [r9+rdx*1+0x8]
  4137ba:	sub    ecx,r15d
  4137bd:	jl     4135e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
  4137c3:	cmp    ecx,0x9
  4137c6:	mov    esi,0x8
  4137cb:	cmovge ecx,esi
  4137ce:	test   ecx,ecx
  4137d0:	je     4135d3 <__flatcc_fb_gen_c_json_parser@@Base+0x3313>
  4137d6:	mov    rsi,QWORD PTR [r9+rdx*1]
  4137da:	movsxd rbx,ecx
  4137dd:	cmp    ecx,0x10
  4137e0:	jae    4137ed <__flatcc_fb_gen_c_json_parser@@Base+0x352d>
  4137e2:	mov    rdx,rbx
  4137e5:	xor    r8d,r8d
  4137e8:	jmp    413909 <__flatcc_fb_gen_c_json_parser@@Base+0x3649>
  4137ed:	mov    rcx,QWORD PTR [rsp+0x8]
  4137f2:	lea    rdi,[rsi+rcx*1]
  4137f6:	mov    r10,rbx
  4137f9:	and    r10,0xfffffffffffffff0
  4137fd:	mov    rdx,rbx
  413800:	sub    rdx,r10
  413803:	vmovq  xmm1,rbx
  413808:	vpbroadcastq ymm1,xmm1
  41380d:	vpaddq ymm10,ymm1,YMMWORD PTR [rip+0x2ecab]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  413815:	vpxor  xmm9,xmm9,xmm9
  41381a:	mov    rcx,r10
  41381d:	vpxor  xmm11,xmm11,xmm11
  413822:	vpxor  xmm12,xmm12,xmm12
  413827:	vpxor  xmm13,xmm13,xmm13
  41382c:	nop    DWORD PTR [rax+0x0]
  413830:	vpaddq ymm1,ymm10,ymm14
  413835:	vmovq  rbp,xmm1
  41383a:	vmovd  xmm2,DWORD PTR [rdi+rbp*1-0x3]
  413840:	vmovd  xmm7,DWORD PTR [rdi+rbp*1-0x7]
  413846:	vpshufb xmm2,xmm2,xmm0
  41384b:	vpmovsxbq ymm2,xmm2
  413850:	vpshufb xmm7,xmm7,xmm0
  413855:	vpmovsxbq ymm7,xmm7
  41385a:	vpsllq ymm1,ymm1,0x3
  41385f:	vpsubq ymm1,ymm15,ymm1
  413863:	vpand  ymm1,ymm1,ymm5
  413867:	vpsllvq ymm1,ymm2,ymm1
  41386c:	vpsllq ymm2,ymm10,0x3
  413872:	vpor   ymm9,ymm1,ymm9
  413877:	vpsubq ymm1,ymm8,ymm2
  41387b:	vpand  ymm1,ymm1,ymm5
  41387f:	vpsllvq ymm1,ymm7,ymm1
  413884:	vmovd  xmm7,DWORD PTR [rdi+rbp*1-0xb]
  41388a:	vpshufb xmm7,xmm7,xmm0
  41388f:	vpmovsxbq ymm7,xmm7
  413894:	vpor   ymm11,ymm1,ymm11
  413899:	vpsubq ymm1,ymm3,ymm2
  41389d:	vpand  ymm1,ymm1,ymm5
  4138a1:	vpsllvq ymm1,ymm7,ymm1
  4138a6:	vpor   ymm12,ymm1,ymm12
  4138ab:	vmovd  xmm1,DWORD PTR [rdi+rbp*1-0xf]
  4138b1:	vpshufb xmm1,xmm1,xmm0
  4138b6:	vpmovsxbq ymm1,xmm1
  4138bb:	vpsubq ymm2,ymm4,ymm2
  4138bf:	vpand  ymm2,ymm2,ymm5
  4138c3:	vpsllvq ymm1,ymm1,ymm2
  4138c8:	vpor   ymm13,ymm1,ymm13
  4138cd:	vpaddq ymm10,ymm10,ymm6
  4138d1:	add    rcx,0xfffffffffffffff0
  4138d5:	jne    413830 <__flatcc_fb_gen_c_json_parser@@Base+0x3570>
  4138db:	vpor   ymm1,ymm11,ymm9
  4138e0:	vpor   ymm1,ymm12,ymm1
  4138e4:	vpor   ymm1,ymm13,ymm1
  4138e8:	vextracti128 xmm2,ymm1,0x1
  4138ee:	vpor   xmm1,xmm1,xmm2
  4138f2:	vpshufd xmm2,xmm1,0x4e
  4138f7:	vpor   xmm1,xmm1,xmm2
  4138fb:	vmovq  r8,xmm1
  413900:	cmp    r10,rbx
  413903:	je     4135e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
  413909:	lea    rdi,[rdx*8+0x0]
  413911:	mov    ebp,0x40
  413916:	sub    rbp,rdi
  413919:	add    rsi,QWORD PTR [rsp+0x20]
  41391e:	xchg   ax,ax
  413920:	movsx  rdi,BYTE PTR [rsi+rdx*1]
  413925:	mov    ecx,ebp
  413927:	and    cl,0xf8
  41392a:	shlx   rcx,rdi,rcx
  41392f:	or     r8,rcx
  413932:	add    rbp,0x8
  413936:	dec    rdx
  413939:	jne    413920 <__flatcc_fb_gen_c_json_parser@@Base+0x3660>
  41393b:	jmp    4135e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
  413940:	cmp    r12d,DWORD PTR [rsp+0x38]
  413945:	jle    4139cd <__flatcc_fb_gen_c_json_parser@@Base+0x370d>
  41394b:	movsxd rcx,r12d
  41394e:	shl    rcx,0x5
  413952:	mov    eax,DWORD PTR [r9+rcx*1+0x8]
  413957:	xor    edx,edx
  413959:	mov    r14d,0x0
  41395f:	mov    ebp,0x0
  413964:	sub    eax,r15d
  413967:	mov    r13,QWORD PTR [rsp+0x40]
  41396c:	jl     413f6c <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
  413972:	mov    rcx,QWORD PTR [r9+rcx*1]
  413976:	mov    rdx,QWORD PTR [rsp+0x8]
  41397b:	lea    rbp,[rcx+rdx*1]
  41397f:	cmp    eax,0x9
  413982:	mov    r14d,0x8
  413988:	cmovl  r14d,eax
  41398c:	test   r14d,r14d
  41398f:	je     413e01 <__flatcc_fb_gen_c_json_parser@@Base+0x3b41>
  413995:	movsxd rsi,r14d
  413998:	cmp    r14d,0x10
  41399c:	jae    413e0b <__flatcc_fb_gen_c_json_parser@@Base+0x3b4b>
  4139a2:	xor    edx,edx
  4139a4:	mov    rax,rsi
  4139a7:	jmp    413f2a <__flatcc_fb_gen_c_json_parser@@Base+0x3c6a>
  4139ac:	cmp    ecx,edx
  4139ae:	jne    413d60 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa0>
  4139b4:	mov    r8d,r15d
  4139b7:	xor    r9d,r9d
  4139ba:	add    rsp,0x58
  4139be:	pop    rbx
  4139bf:	pop    r12
  4139c1:	pop    r13
  4139c3:	pop    r14
  4139c5:	pop    r15
  4139c7:	pop    rbp
  4139c8:	jmp    414630 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  4139cd:	movsxd r8,DWORD PTR [rsp+0x14]
  4139d2:	xor    ebp,ebp
  4139d4:	mov    r12d,0x8
  4139da:	vpcmpeqd ymm14,ymm14,ymm14
  4139df:	xor    eax,eax
  4139e1:	xor    r14d,r14d
  4139e4:	mov    r13,QWORD PTR [rsp+0x40]
  4139e9:	jmp    4139ff <__flatcc_fb_gen_c_json_parser@@Base+0x373f>
  4139eb:	xor    eax,eax
  4139ed:	nop    DWORD PTR [rax]
  4139f0:	mov    rcx,rax
  4139f3:	xor    rcx,rbp
  4139f6:	test   rcx,r14
  4139f9:	jne    413d93 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad3>
  4139ff:	mov    rsi,QWORD PTR [rsp+0x18]
  413a04:	cmp    rsi,r8
  413a07:	jge    413d8f <__flatcc_fb_gen_c_json_parser@@Base+0x3acf>
  413a0d:	mov    rcx,rsi
  413a10:	shl    rcx,0x5
  413a14:	mov    r10d,DWORD PTR [r9+rcx*1+0x8]
  413a19:	sub    r10d,r15d
  413a1c:	jl     413bc3 <__flatcc_fb_gen_c_json_parser@@Base+0x3903>
  413a22:	cmp    r10d,0x9
  413a26:	cmovge r10d,r12d
  413a2a:	test   r10d,r10d
  413a2d:	je     413a4b <__flatcc_fb_gen_c_json_parser@@Base+0x378b>
  413a2f:	mov    rdi,QWORD PTR [r9+rcx*1]
  413a33:	movsxd r13,r10d
  413a36:	cmp    r10d,0x10
  413a3a:	jae    413a52 <__flatcc_fb_gen_c_json_parser@@Base+0x3792>
  413a3c:	mov    rdx,r13
  413a3f:	xor    ebp,ebp
  413a41:	mov    r13,QWORD PTR [rsp+0x40]
  413a46:	jmp    413b7a <__flatcc_fb_gen_c_json_parser@@Base+0x38ba>
  413a4b:	xor    ebp,ebp
  413a4d:	jmp    413bab <__flatcc_fb_gen_c_json_parser@@Base+0x38eb>
  413a52:	mov    rcx,QWORD PTR [rsp+0x8]
  413a57:	lea    rbp,[rdi+rcx*1]
  413a5b:	mov    r14,r13
  413a5e:	and    r14,0xfffffffffffffff0
  413a62:	mov    rdx,r13
  413a65:	sub    rdx,r14
  413a68:	vmovq  xmm2,r13
  413a6d:	vpbroadcastq ymm2,xmm2
  413a72:	vpaddq ymm10,ymm2,YMMWORD PTR [rip+0x2ea46]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  413a7a:	vpxor  xmm9,xmm9,xmm9
  413a7f:	mov    rcx,r14
  413a82:	vpxor  xmm11,xmm11,xmm11
  413a87:	vpxor  xmm12,xmm12,xmm12
  413a8c:	vpxor  xmm13,xmm13,xmm13
  413a91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  413aa0:	vpaddq ymm2,ymm10,ymm14
  413aa5:	vmovq  rbx,xmm2
  413aaa:	vmovd  xmm7,DWORD PTR [rbp+rbx*1-0x3]
  413ab0:	vmovd  xmm1,DWORD PTR [rbp+rbx*1-0x7]
  413ab6:	vpshufb xmm7,xmm7,xmm0
  413abb:	vpmovsxbq ymm7,xmm7
  413ac0:	vpshufb xmm1,xmm1,xmm0
  413ac5:	vpmovsxbq ymm1,xmm1
  413aca:	vpsllq ymm2,ymm2,0x3
  413acf:	vpsubq ymm2,ymm15,ymm2
  413ad3:	vpand  ymm2,ymm2,ymm5
  413ad7:	vpsllvq ymm2,ymm7,ymm2
  413adc:	vpsllq ymm7,ymm10,0x3
  413ae2:	vpor   ymm9,ymm2,ymm9
  413ae7:	vpsubq ymm2,ymm8,ymm7
  413aeb:	vpand  ymm2,ymm2,ymm5
  413aef:	vpsllvq ymm1,ymm1,ymm2
  413af4:	vmovd  xmm2,DWORD PTR [rbp+rbx*1-0xb]
  413afa:	vpshufb xmm2,xmm2,xmm0
  413aff:	vpmovsxbq ymm2,xmm2
  413b04:	vpor   ymm11,ymm1,ymm11
  413b09:	vpsubq ymm1,ymm3,ymm7
  413b0d:	vpand  ymm1,ymm1,ymm5
  413b11:	vpsllvq ymm1,ymm2,ymm1
  413b16:	vpor   ymm12,ymm1,ymm12
  413b1b:	vmovd  xmm1,DWORD PTR [rbp+rbx*1-0xf]
  413b21:	vpshufb xmm1,xmm1,xmm0
  413b26:	vpmovsxbq ymm1,xmm1
  413b2b:	vpsubq ymm2,ymm4,ymm7
  413b2f:	vpand  ymm2,ymm2,ymm5
  413b33:	vpsllvq ymm1,ymm1,ymm2
  413b38:	vpor   ymm13,ymm1,ymm13
  413b3d:	vpaddq ymm10,ymm10,ymm6
  413b41:	add    rcx,0xfffffffffffffff0
  413b45:	jne    413aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x37e0>
  413b4b:	vpor   ymm1,ymm11,ymm9
  413b50:	vpor   ymm1,ymm12,ymm1
  413b54:	vpor   ymm1,ymm13,ymm1
  413b58:	vextracti128 xmm2,ymm1,0x1
  413b5e:	vpor   xmm1,xmm1,xmm2
  413b62:	vpshufd xmm2,xmm1,0x4e
  413b67:	vpor   xmm1,xmm1,xmm2
  413b6b:	vmovq  rbp,xmm1
  413b70:	cmp    r14,r13
  413b73:	mov    r13,QWORD PTR [rsp+0x40]
  413b78:	je     413bab <__flatcc_fb_gen_c_json_parser@@Base+0x38eb>
  413b7a:	lea    rbx,[rdx*8+0x0]
  413b82:	mov    esi,0x40
  413b87:	sub    rsi,rbx
  413b8a:	add    rdi,QWORD PTR [rsp+0x20]
  413b8f:	nop
  413b90:	movsx  rbx,BYTE PTR [rdi+rdx*1]
  413b95:	mov    ecx,esi
  413b97:	and    cl,0xf8
  413b9a:	shlx   rcx,rbx,rcx
  413b9f:	or     rbp,rcx
  413ba2:	add    rsi,0x8
  413ba6:	dec    rdx
  413ba9:	jne    413b90 <__flatcc_fb_gen_c_json_parser@@Base+0x38d0>
  413bab:	shl    r10d,0x3
  413baf:	neg    r10b
  413bb2:	mov    rcx,0xffffffffffffffff
  413bb9:	shlx   r14,rcx,r10
  413bbe:	mov    rsi,QWORD PTR [rsp+0x18]
  413bc3:	inc    rsi
  413bc6:	mov    QWORD PTR [rsp+0x18],rsi
  413bcb:	mov    rdx,rsi
  413bce:	shl    rdx,0x5
  413bd2:	mov    ecx,DWORD PTR [r9+rdx*1+0x8]
  413bd7:	sub    ecx,r15d
  413bda:	jl     4139f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
  413be0:	cmp    ecx,0x9
  413be3:	cmovge ecx,r12d
  413be7:	test   ecx,ecx
  413be9:	je     4139eb <__flatcc_fb_gen_c_json_parser@@Base+0x372b>
  413bef:	mov    rsi,QWORD PTR [r9+rdx*1]
  413bf3:	movsxd rbx,ecx
  413bf6:	cmp    ecx,0x10
  413bf9:	jae    413c05 <__flatcc_fb_gen_c_json_parser@@Base+0x3945>
  413bfb:	mov    rdx,rbx
  413bfe:	xor    eax,eax
  413c00:	jmp    413d29 <__flatcc_fb_gen_c_json_parser@@Base+0x3a69>
  413c05:	mov    rax,QWORD PTR [rsp+0x8]
  413c0a:	add    rax,rsi
  413c0d:	mov    r10,rbx
  413c10:	and    r10,0xfffffffffffffff0
  413c14:	mov    rdx,rbx
  413c17:	sub    rdx,r10
  413c1a:	vmovq  xmm1,rbx
  413c1f:	vpbroadcastq ymm1,xmm1
  413c24:	vpaddq ymm10,ymm1,YMMWORD PTR [rip+0x2e894]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  413c2c:	vpxor  xmm9,xmm9,xmm9
  413c31:	mov    rcx,r10
  413c34:	vpxor  xmm11,xmm11,xmm11
  413c39:	vpxor  xmm12,xmm12,xmm12
  413c3e:	vpxor  xmm13,xmm13,xmm13
  413c43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c4d:	nop    DWORD PTR [rax]
  413c50:	vpaddq ymm1,ymm10,ymm14
  413c55:	vmovq  rdi,xmm1
  413c5a:	vmovd  xmm2,DWORD PTR [rax+rdi*1-0x3]
  413c60:	vmovd  xmm7,DWORD PTR [rax+rdi*1-0x7]
  413c66:	vpshufb xmm2,xmm2,xmm0
  413c6b:	vpmovsxbq ymm2,xmm2
  413c70:	vpshufb xmm7,xmm7,xmm0
  413c75:	vpmovsxbq ymm7,xmm7
  413c7a:	vpsllq ymm1,ymm1,0x3
  413c7f:	vpsubq ymm1,ymm15,ymm1
  413c83:	vpand  ymm1,ymm1,ymm5
  413c87:	vpsllvq ymm1,ymm2,ymm1
  413c8c:	vpsllq ymm2,ymm10,0x3
  413c92:	vpor   ymm9,ymm1,ymm9
  413c97:	vpsubq ymm1,ymm8,ymm2
  413c9b:	vpand  ymm1,ymm1,ymm5
  413c9f:	vpsllvq ymm1,ymm7,ymm1
  413ca4:	vmovd  xmm7,DWORD PTR [rax+rdi*1-0xb]
  413caa:	vpshufb xmm7,xmm7,xmm0
  413caf:	vpmovsxbq ymm7,xmm7
  413cb4:	vpor   ymm11,ymm1,ymm11
  413cb9:	vpsubq ymm1,ymm3,ymm2
  413cbd:	vpand  ymm1,ymm1,ymm5
  413cc1:	vpsllvq ymm1,ymm7,ymm1
  413cc6:	vpor   ymm12,ymm1,ymm12
  413ccb:	vmovd  xmm1,DWORD PTR [rax+rdi*1-0xf]
  413cd1:	vpshufb xmm1,xmm1,xmm0
  413cd6:	vpmovsxbq ymm1,xmm1
  413cdb:	vpsubq ymm2,ymm4,ymm2
  413cdf:	vpand  ymm2,ymm2,ymm5
  413ce3:	vpsllvq ymm1,ymm1,ymm2
  413ce8:	vpor   ymm13,ymm1,ymm13
  413ced:	vpaddq ymm10,ymm10,ymm6
  413cf1:	add    rcx,0xfffffffffffffff0
  413cf5:	jne    413c50 <__flatcc_fb_gen_c_json_parser@@Base+0x3990>
  413cfb:	vpor   ymm1,ymm11,ymm9
  413d00:	vpor   ymm1,ymm12,ymm1
  413d04:	vpor   ymm1,ymm13,ymm1
  413d08:	vextracti128 xmm2,ymm1,0x1
  413d0e:	vpor   xmm1,xmm1,xmm2
  413d12:	vpshufd xmm2,xmm1,0x4e
  413d17:	vpor   xmm1,xmm1,xmm2
  413d1b:	vmovq  rax,xmm1
  413d20:	cmp    r10,rbx
  413d23:	je     4139f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
  413d29:	lea    rdi,[rdx*8+0x0]
  413d31:	mov    ebx,0x40
  413d36:	sub    rbx,rdi
  413d39:	add    rsi,QWORD PTR [rsp+0x20]
  413d3e:	xchg   ax,ax
  413d40:	movsx  rdi,BYTE PTR [rsi+rdx*1]
  413d45:	mov    ecx,ebx
  413d47:	and    cl,0xf8
  413d4a:	shlx   rcx,rdi,rcx
  413d4f:	or     rax,rcx
  413d52:	add    rbx,0x8
  413d56:	dec    rdx
  413d59:	jne    413d40 <__flatcc_fb_gen_c_json_parser@@Base+0x3a80>
  413d5b:	jmp    4139f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
  413d60:	lea    eax,[rdx+0x1]
  413d63:	cmp    eax,ecx
  413d65:	jne    413535 <__flatcc_fb_gen_c_json_parser@@Base+0x3275>
  413d6b:	movsxd rax,ecx
  413d6e:	shl    rax,0x5
  413d72:	mov    eax,DWORD PTR [r9+rax*1+0x8]
  413d77:	cmp    r8d,eax
  413d7a:	jg     4139b4 <__flatcc_fb_gen_c_json_parser@@Base+0x36f4>
  413d80:	neg    eax
  413d82:	cmp    ebx,eax
  413d84:	jne    413535 <__flatcc_fb_gen_c_json_parser@@Base+0x3275>
  413d8a:	jmp    4139b4 <__flatcc_fb_gen_c_json_parser@@Base+0x36f4>
  413d8f:	inc    esi
  413d91:	jmp    413d98 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad8>
  413d93:	mov    rsi,QWORD PTR [rsp+0x18]
  413d98:	lea    r10d,[rsi-0x1]
  413d9c:	mov    rdx,QWORD PTR [rsp+0x38]
  413da1:	mov    r12d,edx
  413da4:	cmp    esi,edx
  413da6:	mov    ecx,DWORD PTR [rsp+0x14]
  413daa:	mov    QWORD PTR [rsp+0x18],rsi
  413daf:	jle    41402a <__flatcc_fb_gen_c_json_parser@@Base+0x3d6a>
  413db5:	mov    ebp,DWORD PTR [rsp+0x2c]
  413db9:	mov    eax,DWORD PTR [rsp+0x48]
  413dbd:	cmp    ebp,eax
  413dbf:	mov    ebx,DWORD PTR [rsp+0x28]
  413dc3:	jg     413dcf <__flatcc_fb_gen_c_json_parser@@Base+0x3b0f>
  413dc5:	add    eax,ebx
  413dc7:	test   eax,eax
  413dc9:	jg     414022 <__flatcc_fb_gen_c_json_parser@@Base+0x3d62>
  413dcf:	movsxd rax,r10d
  413dd2:	mov    rsi,QWORD PTR [rsp+0x50]
  413dd7:	add    rsi,r9
  413dda:	add    rsi,0x28
  413dde:	xchg   ax,ax
  413de0:	cmp    r11,rax
  413de3:	jge    41401f <__flatcc_fb_gen_c_json_parser@@Base+0x3d5f>
  413de9:	inc    r11
  413dec:	mov    edi,DWORD PTR [rsi]
  413dee:	add    rsi,0x20
  413df2:	cmp    ebp,edi
  413df4:	jg     413de0 <__flatcc_fb_gen_c_json_parser@@Base+0x3b20>
  413df6:	add    edi,ebx
  413df8:	test   edi,edi
  413dfa:	jle    413de0 <__flatcc_fb_gen_c_json_parser@@Base+0x3b20>
  413dfc:	jmp    414022 <__flatcc_fb_gen_c_json_parser@@Base+0x3d62>
  413e01:	xor    edx,edx
  413e03:	xor    r14d,r14d
  413e06:	jmp    413f6c <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
  413e0b:	mov    r8,rsi
  413e0e:	and    r8,0xfffffffffffffff0
  413e12:	mov    rax,rsi
  413e15:	vmovq  xmm1,rsi
  413e1a:	vpbroadcastq ymm1,xmm1
  413e1f:	vpaddq ymm1,ymm1,YMMWORD PTR [rip+0x2e699]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  413e27:	sub    rax,r8
  413e2a:	vpxor  xmm9,xmm9,xmm9
  413e2f:	mov    rdx,r8
  413e32:	vpxor  xmm10,xmm10,xmm10
  413e37:	vpxor  xmm11,xmm11,xmm11
  413e3c:	vpxor  xmm12,xmm12,xmm12
  413e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413e50:	vpaddq ymm2,ymm1,YMMWORD PTR [rip+0x2e688]        # 4424e0 <_IO_stdin_used@@Base+0x144e0>
  413e58:	vmovq  rdi,xmm2
  413e5d:	vmovd  xmm13,DWORD PTR [rbp+rdi*1-0x3]
  413e63:	vmovd  xmm14,DWORD PTR [rbp+rdi*1-0x7]
  413e69:	vpshufb xmm7,xmm13,xmm0
  413e6e:	vpmovsxbq ymm13,xmm7
  413e73:	vpshufb xmm7,xmm14,xmm0
  413e78:	vpmovsxbq ymm7,xmm7
  413e7d:	vpsllq ymm2,ymm2,0x3
  413e82:	vpsubq ymm2,ymm15,ymm2
  413e86:	vpand  ymm2,ymm2,ymm5
  413e8a:	vpsllvq ymm2,ymm13,ymm2
  413e8f:	vpsllq ymm13,ymm1,0x3
  413e94:	vpor   ymm9,ymm2,ymm9
  413e99:	vpsubq ymm2,ymm8,ymm13
  413e9e:	vpand  ymm2,ymm2,ymm5
  413ea2:	vpsllvq ymm2,ymm7,ymm2
  413ea7:	vmovd  xmm7,DWORD PTR [rbp+rdi*1-0xb]
  413ead:	vpshufb xmm7,xmm7,xmm0
  413eb2:	vpmovsxbq ymm7,xmm7
  413eb7:	vpor   ymm10,ymm2,ymm10
  413ebc:	vpsubq ymm2,ymm3,ymm13
  413ec1:	vpand  ymm2,ymm2,ymm5
  413ec5:	vpsllvq ymm2,ymm7,ymm2
  413eca:	vpor   ymm11,ymm2,ymm11
  413ecf:	vmovd  xmm2,DWORD PTR [rbp+rdi*1-0xf]
  413ed5:	vpshufb xmm2,xmm2,xmm0
  413eda:	vpmovsxbq ymm2,xmm2
  413edf:	vpsubq ymm7,ymm4,ymm13
  413ee4:	vpand  ymm7,ymm7,ymm5
  413ee8:	vpsllvq ymm2,ymm2,ymm7
  413eed:	vpor   ymm12,ymm2,ymm12
  413ef2:	vpaddq ymm1,ymm1,ymm6
  413ef6:	add    rdx,0xfffffffffffffff0
  413efa:	jne    413e50 <__flatcc_fb_gen_c_json_parser@@Base+0x3b90>
  413f00:	vpor   ymm0,ymm10,ymm9
  413f05:	vpor   ymm0,ymm11,ymm0
  413f09:	vpor   ymm0,ymm12,ymm0
  413f0d:	vextracti128 xmm1,ymm0,0x1
  413f13:	vpor   xmm0,xmm0,xmm1
  413f17:	vpshufd xmm1,xmm0,0x4e
  413f1c:	vpor   xmm0,xmm0,xmm1
  413f20:	vmovq  rdx,xmm0
  413f25:	cmp    r8,rsi
  413f28:	je     413f6c <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
  413f2a:	lea    rdi,[rax*8+0x0]
  413f32:	mov    ebx,0x40
  413f37:	sub    rbx,rdi
  413f3a:	mov    rsi,QWORD PTR [rsp+0x8]
  413f3f:	add    rcx,rsi
  413f42:	add    rcx,0xffffffffffffffff
  413f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f50:	movsx  rdi,BYTE PTR [rcx+rax*1]
  413f55:	mov    esi,ebx
  413f57:	and    sil,0xf8
  413f5b:	shlx   rsi,rdi,rsi
  413f60:	or     rdx,rsi
  413f63:	add    rbx,0x8
  413f67:	dec    rax
  413f6a:	jne    413f50 <__flatcc_fb_gen_c_json_parser@@Base+0x3c90>
  413f6c:	lea    rsi,[rip+0x2f4a4]        # 443417 <_IO_stdin_used@@Base+0x15417>
  413f73:	mov    rdi,r13
  413f76:	mov    ecx,r14d
  413f79:	mov    r8,rbp
  413f7c:	xor    eax,eax
  413f7e:	vzeroupper 
  413f81:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413f86:	inc    DWORD PTR [r13+0xf0]
  413f8d:	lea    ecx,[r12-0x1]
  413f92:	mov    rdi,r13
  413f95:	mov    rbx,QWORD PTR [rsp+0x30]
  413f9a:	mov    rsi,rbx
  413f9d:	mov    rdx,QWORD PTR [rsp+0x38]
  413fa2:	mov    r8d,r15d
  413fa5:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  413faa:	mov    eax,DWORD PTR [r13+0xf0]
  413fb1:	test   eax,eax
  413fb3:	je     414553 <__flatcc_fb_gen_c_json_parser@@Base+0x4293>
  413fb9:	dec    eax
  413fbb:	mov    DWORD PTR [r13+0xf0],eax
  413fc2:	lea    rsi,[rip+0x2f4a9]        # 443472 <_IO_stdin_used@@Base+0x15472>
  413fc9:	mov    rdi,r13
  413fcc:	mov    edx,r14d
  413fcf:	mov    rcx,rbp
  413fd2:	xor    eax,eax
  413fd4:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413fd9:	inc    DWORD PTR [r13+0xf0]
  413fe0:	mov    rdi,r13
  413fe3:	mov    rsi,rbx
  413fe6:	mov    edx,r12d
  413fe9:	mov    ecx,DWORD PTR [rsp+0x14]
  413fed:	mov    r8d,r15d
  413ff0:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  413ff5:	mov    eax,DWORD PTR [r13+0xf0]
  413ffc:	test   eax,eax
  413ffe:	je     414572 <__flatcc_fb_gen_c_json_parser@@Base+0x42b2>
  414004:	dec    eax
  414006:	mov    DWORD PTR [r13+0xf0],eax
  41400d:	lea    rsi,[rip+0x2f47b]        # 44348f <_IO_stdin_used@@Base+0x1548f>
  414014:	mov    rdi,r13
  414017:	mov    edx,r14d
  41401a:	jmp    414526 <__flatcc_fb_gen_c_json_parser@@Base+0x4266>
  41401f:	inc    r11d
  414022:	mov    r12d,r11d
  414025:	mov    rsi,QWORD PTR [rsp+0x18]
  41402a:	mov    DWORD PTR [rsp+0x20],0x0
  414032:	cmp    r12d,esi
  414035:	mov    QWORD PTR [rsp+0x40],r12
  41403a:	jge    4140b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3df8>
  41403c:	xor    ebx,ebx
  41403e:	movsxd r14,r12d
  414041:	mov    eax,0x0
  414046:	cmp    r12d,edx
  414049:	jle    414069 <__flatcc_fb_gen_c_json_parser@@Base+0x3da9>
  41404b:	mov    rax,r14
  41404e:	shl    rax,0x5
  414052:	mov    eax,DWORD PTR [rax+r9*1-0x18]
  414057:	cmp    DWORD PTR [rsp+0x2c],eax
  41405b:	setge  cl
  41405e:	sub    eax,r15d
  414061:	cmp    eax,0x8
  414064:	sete   al
  414067:	and    al,cl
  414069:	mov    QWORD PTR [rsp+0x48],rax
  41406e:	shl    r14,0x5
  414072:	mov    eax,DWORD PTR [r9+r14*1+0x8]
  414077:	mov    edx,0x0
  41407c:	mov    ebp,0x0
  414081:	sub    eax,r15d
  414084:	jl     41422f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  41408a:	mov    rcx,QWORD PTR [r9+r14*1]
  41408e:	mov    rdx,QWORD PTR [rsp+0x8]
  414093:	lea    rbp,[rcx+rdx*1]
  414097:	cmp    eax,0x9
  41409a:	mov    ebx,0x8
  41409f:	cmovl  ebx,eax
  4140a2:	test   ebx,ebx
  4140a4:	je     4140ce <__flatcc_fb_gen_c_json_parser@@Base+0x3e0e>
  4140a6:	movsxd rsi,ebx
  4140a9:	cmp    ebx,0x10
  4140ac:	jae    4140d7 <__flatcc_fb_gen_c_json_parser@@Base+0x3e17>
  4140ae:	xor    edx,edx
  4140b0:	mov    rax,rsi
  4140b3:	jmp    4141ea <__flatcc_fb_gen_c_json_parser@@Base+0x3f2a>
  4140b8:	lea    rbp,[rip+0x1bc84]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4140bf:	xor    eax,eax
  4140c1:	mov    QWORD PTR [rsp+0x8],rax
  4140c6:	mov    r14d,r12d
  4140c9:	jmp    4143ac <__flatcc_fb_gen_c_json_parser@@Base+0x40ec>
  4140ce:	xor    edx,edx
  4140d0:	xor    ebx,ebx
  4140d2:	jmp    41422f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  4140d7:	mov    r8,rsi
  4140da:	and    r8,0xfffffffffffffff0
  4140de:	mov    rax,rsi
  4140e1:	vmovq  xmm1,rsi
  4140e6:	vpbroadcastq ymm1,xmm1
  4140eb:	vpaddq ymm1,ymm1,YMMWORD PTR [rip+0x2e3cd]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  4140f3:	sub    rax,r8
  4140f6:	vpxor  xmm9,xmm9,xmm9
  4140fb:	mov    rdx,r8
  4140fe:	vpxor  xmm10,xmm10,xmm10
  414103:	vpxor  xmm11,xmm11,xmm11
  414108:	vpxor  xmm12,xmm12,xmm12
  41410d:	nop    DWORD PTR [rax]
  414110:	vpaddq ymm2,ymm1,YMMWORD PTR [rip+0x2e3c8]        # 4424e0 <_IO_stdin_used@@Base+0x144e0>
  414118:	vmovq  rdi,xmm2
  41411d:	vmovd  xmm13,DWORD PTR [rbp+rdi*1-0x3]
  414123:	vmovd  xmm14,DWORD PTR [rbp+rdi*1-0x7]
  414129:	vpshufb xmm7,xmm13,xmm0
  41412e:	vpmovsxbq ymm13,xmm7
  414133:	vpshufb xmm7,xmm14,xmm0
  414138:	vpmovsxbq ymm7,xmm7
  41413d:	vpsllq ymm2,ymm2,0x3
  414142:	vpsubq ymm2,ymm15,ymm2
  414146:	vpand  ymm2,ymm2,ymm5
  41414a:	vpsllvq ymm2,ymm13,ymm2
  41414f:	vpsllq ymm13,ymm1,0x3
  414154:	vpor   ymm9,ymm2,ymm9
  414159:	vpsubq ymm2,ymm8,ymm13
  41415e:	vpand  ymm2,ymm2,ymm5
  414162:	vpsllvq ymm2,ymm7,ymm2
  414167:	vmovd  xmm7,DWORD PTR [rbp+rdi*1-0xb]
  41416d:	vpshufb xmm7,xmm7,xmm0
  414172:	vpmovsxbq ymm7,xmm7
  414177:	vpor   ymm10,ymm2,ymm10
  41417c:	vpsubq ymm2,ymm3,ymm13
  414181:	vpand  ymm2,ymm2,ymm5
  414185:	vpsllvq ymm2,ymm7,ymm2
  41418a:	vpor   ymm11,ymm2,ymm11
  41418f:	vmovd  xmm2,DWORD PTR [rbp+rdi*1-0xf]
  414195:	vpshufb xmm2,xmm2,xmm0
  41419a:	vpmovsxbq ymm2,xmm2
  41419f:	vpsubq ymm7,ymm4,ymm13
  4141a4:	vpand  ymm7,ymm7,ymm5
  4141a8:	vpsllvq ymm2,ymm2,ymm7
  4141ad:	vpor   ymm12,ymm2,ymm12
  4141b2:	vpaddq ymm1,ymm1,ymm6
  4141b6:	add    rdx,0xfffffffffffffff0
  4141ba:	jne    414110 <__flatcc_fb_gen_c_json_parser@@Base+0x3e50>
  4141c0:	vpor   ymm0,ymm10,ymm9
  4141c5:	vpor   ymm0,ymm11,ymm0
  4141c9:	vpor   ymm0,ymm12,ymm0
  4141cd:	vextracti128 xmm1,ymm0,0x1
  4141d3:	vpor   xmm0,xmm0,xmm1
  4141d7:	vpshufd xmm1,xmm0,0x4e
  4141dc:	vpor   xmm0,xmm0,xmm1
  4141e0:	vmovq  rdx,xmm0
  4141e5:	cmp    r8,rsi
  4141e8:	je     41422f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  4141ea:	mov    r8,rbx
  4141ed:	lea    rdi,[rax*8+0x0]
  4141f5:	mov    ebx,0x40
  4141fa:	sub    rbx,rdi
  4141fd:	mov    rsi,QWORD PTR [rsp+0x8]
  414202:	add    rcx,rsi
  414205:	add    rcx,0xffffffffffffffff
  414209:	nop    DWORD PTR [rax+0x0]
  414210:	movsx  rdi,BYTE PTR [rcx+rax*1]
  414215:	mov    esi,ebx
  414217:	and    sil,0xf8
  41421b:	shlx   rsi,rdi,rsi
  414220:	or     rdx,rsi
  414223:	add    rbx,0x8
  414227:	dec    rax
  41422a:	jne    414210 <__flatcc_fb_gen_c_json_parser@@Base+0x3f50>
  41422c:	mov    rbx,r8
  41422f:	mov    DWORD PTR [rsp+0x28],r10d
  414234:	lea    rsi,[rip+0x2f26a]        # 4434a5 <_IO_stdin_used@@Base+0x154a5>
  41423b:	mov    rdi,r13
  41423e:	mov    ecx,ebx
  414240:	mov    r8,rbp
  414243:	xor    eax,eax
  414245:	vzeroupper 
  414248:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41424d:	inc    DWORD PTR [r13+0xf0]
  414254:	cmp    BYTE PTR [rsp+0x48],0x0
  414259:	mov    QWORD PTR [rsp+0x8],rbx
  41425e:	je     41432b <__flatcc_fb_gen_c_json_parser@@Base+0x406b>
  414264:	lea    rsi,[rip+0x2f261]        # 4434cc <_IO_stdin_used@@Base+0x154cc>
  41426b:	mov    rdi,r13
  41426e:	mov    edx,ebx
  414270:	mov    rcx,rbp
  414273:	xor    eax,eax
  414275:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41427a:	mov    rcx,r14
  41427d:	mov    r14,rbx
  414280:	mov    rbx,QWORD PTR [rsp+0x30]
  414285:	mov    rax,QWORD PTR [rbx]
  414288:	mov    rsi,QWORD PTR [rbx+0x18]
  41428c:	mov    rdx,QWORD PTR [rcx+rax*1-0x10]
  414291:	mov    ecx,DWORD PTR [rcx+rax*1-0x8]
  414295:	mov    rdi,r13
  414298:	mov    r8d,0x8
  41429e:	call   QWORD PTR [rbx+0x8]
  4142a1:	lea    rsi,[rip+0x2f244]        # 4434ec <_IO_stdin_used@@Base+0x154ec>
  4142a8:	mov    rdi,r13
  4142ab:	mov    edx,r14d
  4142ae:	mov    rcx,rbp
  4142b1:	xor    eax,eax
  4142b3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4142b8:	lea    rsi,[rip+0x2f249]        # 443508 <_IO_stdin_used@@Base+0x15508>
  4142bf:	mov    rdi,r13
  4142c2:	xor    eax,eax
  4142c4:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4142c9:	lea    rsi,[rip+0x2ef96]        # 443266 <_IO_stdin_used@@Base+0x15266>
  4142d0:	mov    rdi,r13
  4142d3:	xor    eax,eax
  4142d5:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4142da:	mov    rdi,r13
  4142dd:	mov    rsi,rbx
  4142e0:	mov    edx,r12d
  4142e3:	mov    ecx,DWORD PTR [rsp+0x28]
  4142e7:	mov    r8d,DWORD PTR [rsp+0x2c]
  4142ec:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4142f1:	mov    eax,DWORD PTR [r13+0xf0]
  4142f8:	test   eax,eax
  4142fa:	je     4145d2 <__flatcc_fb_gen_c_json_parser@@Base+0x4312>
  414300:	lea    r14d,[r12-0x1]
  414305:	dec    eax
  414307:	mov    DWORD PTR [r13+0xf0],eax
  41430e:	lea    rsi,[rip+0x2f1fd]        # 443512 <_IO_stdin_used@@Base+0x15512>
  414315:	mov    rdi,r13
  414318:	mov    rbx,QWORD PTR [rsp+0x8]
  41431d:	mov    edx,ebx
  41431f:	mov    rcx,rbp
  414322:	xor    eax,eax
  414324:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414329:	jmp    414369 <__flatcc_fb_gen_c_json_parser@@Base+0x40a9>
  41432b:	lea    rsi,[rip+0x2f1d6]        # 443508 <_IO_stdin_used@@Base+0x15508>
  414332:	mov    rdi,r13
  414335:	xor    eax,eax
  414337:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41433c:	lea    rsi,[rip+0x2ef23]        # 443266 <_IO_stdin_used@@Base+0x15266>
  414343:	mov    rdi,r13
  414346:	xor    eax,eax
  414348:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41434d:	mov    rdi,r13
  414350:	mov    rsi,QWORD PTR [rsp+0x30]
  414355:	mov    edx,r12d
  414358:	mov    ecx,DWORD PTR [rsp+0x28]
  41435c:	mov    r8d,DWORD PTR [rsp+0x2c]
  414361:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  414366:	mov    r14d,r12d
  414369:	mov    eax,DWORD PTR [r13+0xf0]
  414370:	test   eax,eax
  414372:	je     414591 <__flatcc_fb_gen_c_json_parser@@Base+0x42d1>
  414378:	dec    eax
  41437a:	mov    DWORD PTR [r13+0xf0],eax
  414381:	lea    rsi,[rip+0x2f1a7]        # 44352f <_IO_stdin_used@@Base+0x1552f>
  414388:	mov    rdi,r13
  41438b:	mov    edx,ebx
  41438d:	mov    rcx,rbp
  414390:	xor    eax,eax
  414392:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414397:	inc    DWORD PTR [r13+0xf0]
  41439e:	mov    ecx,DWORD PTR [rsp+0x14]
  4143a2:	mov    rdx,QWORD PTR [rsp+0x38]
  4143a7:	mov    rsi,QWORD PTR [rsp+0x18]
  4143ac:	cmp    r14d,edx
  4143af:	setg   al
  4143b2:	cmp    esi,ecx
  4143b4:	setle  bl
  4143b7:	and    bl,al
  4143b9:	cmp    bl,0x1
  4143bc:	jne    4143cf <__flatcc_fb_gen_c_json_parser@@Base+0x410f>
  4143be:	mov    rax,QWORD PTR [rsp+0x30]
  4143c3:	mov    edi,DWORD PTR [rax+0x28]
  4143c6:	inc    edi
  4143c8:	mov    DWORD PTR [rsp+0x20],edi
  4143cc:	mov    DWORD PTR [rax+0x28],edi
  4143cf:	cmp    r14d,edx
  4143d2:	jle    414468 <__flatcc_fb_gen_c_json_parser@@Base+0x41a8>
  4143d8:	lea    ecx,[r14-0x1]
  4143dc:	mov    rdi,r13
  4143df:	mov    rsi,QWORD PTR [rsp+0x30]
  4143e4:	mov    r8d,r15d
  4143e7:	mov    r9d,DWORD PTR [rsp+0x20]
  4143ec:	vzeroupper 
  4143ef:	call   414630 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  4143f4:	mov    rsi,QWORD PTR [rsp+0x18]
  4143f9:	mov    rdx,QWORD PTR [rsp+0x38]
  4143fe:	mov    ecx,DWORD PTR [rsp+0x14]
  414402:	test   bl,bl
  414404:	je     414468 <__flatcc_fb_gen_c_json_parser@@Base+0x41a8>
  414406:	lea    rsi,[rip+0x2f140]        # 44354d <_IO_stdin_used@@Base+0x1554d>
  41440d:	mov    rdi,r13
  414410:	mov    r12d,DWORD PTR [rsp+0x20]
  414415:	mov    edx,r12d
  414418:	xor    eax,eax
  41441a:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41441f:	mov    eax,DWORD PTR [r13+0xf0]
  414426:	mov    DWORD PTR [r13+0xf8],eax
  41442d:	mov    DWORD PTR [r13+0xf0],0x0
  414438:	lea    rsi,[rip+0x2f124]        # 443563 <_IO_stdin_used@@Base+0x15563>
  41443f:	mov    rdi,r13
  414442:	mov    edx,r12d
  414445:	xor    eax,eax
  414447:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41444c:	mov    rsi,QWORD PTR [rsp+0x18]
  414451:	mov    rdx,QWORD PTR [rsp+0x38]
  414456:	mov    ecx,DWORD PTR [rsp+0x14]
  41445a:	mov    eax,DWORD PTR [r13+0xf8]
  414461:	mov    DWORD PTR [r13+0xf0],eax
  414468:	cmp    esi,ecx
  41446a:	jle    414486 <__flatcc_fb_gen_c_json_parser@@Base+0x41c6>
  41446c:	cmp    r14d,edx
  41446f:	jg     41449e <__flatcc_fb_gen_c_json_parser@@Base+0x41de>
  414471:	mov    rdi,r13
  414474:	mov    rax,QWORD PTR [rsp+0x30]
  414479:	vzeroupper 
  41447c:	call   QWORD PTR [rax+0x10]
  41447f:	mov    rbx,QWORD PTR [rsp+0x8]
  414484:	jmp    4144f7 <__flatcc_fb_gen_c_json_parser@@Base+0x4237>
  414486:	mov    rax,rsi
  414489:	mov    rdi,r13
  41448c:	mov    rsi,QWORD PTR [rsp+0x30]
  414491:	mov    edx,eax
  414493:	mov    r8d,r15d
  414496:	vzeroupper 
  414499:	call   4134f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  41449e:	test   bl,bl
  4144a0:	mov    rbx,QWORD PTR [rsp+0x8]
  4144a5:	je     4144f7 <__flatcc_fb_gen_c_json_parser@@Base+0x4237>
  4144a7:	mov    eax,DWORD PTR [r13+0xf0]
  4144ae:	mov    DWORD PTR [r13+0xf8],eax
  4144b5:	mov    DWORD PTR [r13+0xf0],0x0
  4144c0:	lea    rsi,[rip+0x2f099]        # 443560 <_IO_stdin_used@@Base+0x15560>
  4144c7:	mov    rdi,r13
  4144ca:	mov    edx,DWORD PTR [rsp+0x20]
  4144ce:	xor    eax,eax
  4144d0:	vzeroupper 
  4144d3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4144d8:	mov    eax,DWORD PTR [r13+0xf8]
  4144df:	mov    DWORD PTR [r13+0xf0],eax
  4144e6:	lea    rsi,[rip+0x2f081]        # 44356e <_IO_stdin_used@@Base+0x1556e>
  4144ed:	mov    rdi,r13
  4144f0:	xor    eax,eax
  4144f2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4144f7:	mov    rax,QWORD PTR [rsp+0x40]
  4144fc:	cmp    eax,DWORD PTR [rsp+0x18]
  414500:	jge    414541 <__flatcc_fb_gen_c_json_parser@@Base+0x4281>
  414502:	mov    eax,DWORD PTR [r13+0xf0]
  414509:	test   eax,eax
  41450b:	je     4145b0 <__flatcc_fb_gen_c_json_parser@@Base+0x42f0>
  414511:	dec    eax
  414513:	mov    DWORD PTR [r13+0xf0],eax
  41451a:	lea    rsi,[rip+0x2f056]        # 443577 <_IO_stdin_used@@Base+0x15577>
  414521:	mov    rdi,r13
  414524:	mov    edx,ebx
  414526:	mov    rcx,rbp
  414529:	xor    eax,eax
  41452b:	add    rsp,0x58
  41452f:	pop    rbx
  414530:	pop    r12
  414532:	pop    r13
  414534:	pop    r14
  414536:	pop    r15
  414538:	pop    rbp
  414539:	vzeroupper 
  41453c:	jmp    4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414541:	add    rsp,0x58
  414545:	pop    rbx
  414546:	pop    r12
  414548:	pop    r13
  41454a:	pop    r14
  41454c:	pop    r15
  41454e:	pop    rbp
  41454f:	vzeroupper 
  414552:	ret    
  414553:	lea    rdi,[rip+0x2e317]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41455a:	lea    rsi,[rip+0x2e31c]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414561:	lea    rcx,[rip+0x2eed4]        # 44343c <_IO_stdin_used@@Base+0x1543c>
  414568:	mov    edx,0x3cd
  41456d:	call   406100 <__assert_fail@plt>
  414572:	lea    rdi,[rip+0x2e2f8]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414579:	lea    rsi,[rip+0x2e2fd]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414580:	lea    rcx,[rip+0x2eeb5]        # 44343c <_IO_stdin_used@@Base+0x1543c>
  414587:	mov    edx,0x3cf
  41458c:	call   406100 <__assert_fail@plt>
  414591:	lea    rdi,[rip+0x2e2d9]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414598:	lea    rsi,[rip+0x2e2de]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41459f:	lea    rcx,[rip+0x2ee96]        # 44343c <_IO_stdin_used@@Base+0x1543c>
  4145a6:	mov    edx,0x414
  4145ab:	call   406100 <__assert_fail@plt>
  4145b0:	lea    rdi,[rip+0x2e2ba]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4145b7:	lea    rsi,[rip+0x2e2bf]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4145be:	lea    rcx,[rip+0x2ee77]        # 44343c <_IO_stdin_used@@Base+0x1543c>
  4145c5:	mov    edx,0x430
  4145ca:	vzeroupper 
  4145cd:	call   406100 <__assert_fail@plt>
  4145d2:	lea    rdi,[rip+0x2e298]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4145d9:	lea    rsi,[rip+0x2e29d]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4145e0:	lea    rcx,[rip+0x2ee55]        # 44343c <_IO_stdin_used@@Base+0x1543c>
  4145e7:	mov    edx,0x410
  4145ec:	call   406100 <__assert_fail@plt>
  4145f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4145fb:	nop    DWORD PTR [rax+rax*1+0x0]
  414600:	push   rbx
  414601:	mov    eax,DWORD PTR [rdi+0x8]
  414604:	mov    ecx,DWORD PTR [rsi+0x8]
  414607:	mov    ebx,eax
  414609:	sub    ebx,ecx
  41460b:	cmovg  eax,ecx
  41460e:	mov    rdi,QWORD PTR [rdi]
  414611:	mov    rsi,QWORD PTR [rsi]
  414614:	movsxd rdx,eax
  414617:	call   406140 <memcmp@plt>
  41461c:	test   eax,eax
  41461e:	cmove  eax,ebx
  414621:	pop    rbx
  414622:	ret    
  414623:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41462d:	nop    DWORD PTR [rax]
  414630:	push   rbp
  414631:	push   r15
  414633:	push   r14
  414635:	push   r13
  414637:	push   r12
  414639:	push   rbx
  41463a:	sub    rsp,0x38
  41463e:	mov    DWORD PTR [rsp+0xc],r9d
  414643:	mov    ebx,r8d
  414646:	mov    ebp,ecx
  414648:	mov    r14,rdi
  41464b:	mov    r13d,ecx
  41464e:	sub    r13d,edx
  414651:	lea    eax,[r13+0x1]
  414655:	shr    eax,0x1f
  414658:	lea    r15d,[rax+r13*1]
  41465c:	add    r15d,0x1
  414660:	sar    r15d,1
  414663:	mov    DWORD PTR [rsp+0x24],edx
  414667:	add    r15d,edx
  41466a:	mov    QWORD PTR [rsp+0x30],rsi
  41466f:	mov    rcx,QWORD PTR [rsi]
  414672:	movsxd rsi,r15d
  414675:	shl    rsi,0x5
  414679:	mov    r11d,DWORD PTR [rcx+rsi*1+0x8]
  41467e:	xor    r12d,r12d
  414681:	mov    r8d,0x0
  414687:	mov    eax,0x0
  41468c:	mov    edx,0x0
  414691:	sub    r11d,ebx
  414694:	mov    QWORD PTR [rsp+0x28],rsi
  414699:	jl     4148cc <__flatcc_fb_gen_c_json_parser@@Base+0x460c>
  41469f:	mov    r8,QWORD PTR [rcx+rsi*1]
  4146a3:	movsxd r9,ebx
  4146a6:	lea    r12,[r8+r9*1]
  4146aa:	cmp    r11d,0x9
  4146ae:	mov    ecx,0x8
  4146b3:	cmovl  ecx,r11d
  4146b7:	test   ecx,ecx
  4146b9:	je     4146d5 <__flatcc_fb_gen_c_json_parser@@Base+0x4415>
  4146bb:	movsxd rdi,ecx
  4146be:	cmp    ecx,0x10
  4146c1:	mov    DWORD PTR [rsp+0x20],ebx
  4146c5:	mov    DWORD PTR [rsp+0x1c],ebp
  4146c9:	jae    4146df <__flatcc_fb_gen_c_json_parser@@Base+0x441f>
  4146cb:	xor    eax,eax
  4146cd:	mov    rdx,rdi
  4146d0:	jmp    414840 <__flatcc_fb_gen_c_json_parser@@Base+0x4580>
  4146d5:	xor    r8d,r8d
  4146d8:	xor    eax,eax
  4146da:	jmp    4148cc <__flatcc_fb_gen_c_json_parser@@Base+0x460c>
  4146df:	mov    r10,rdi
  4146e2:	and    r10,0xfffffffffffffff0
  4146e6:	mov    rdx,rdi
  4146e9:	sub    rdx,r10
  4146ec:	vmovq  xmm0,rdi
  4146f1:	vpbroadcastq ymm0,xmm0
  4146f6:	vpaddq ymm1,ymm0,YMMWORD PTR [rip+0x2ddc2]        # 4424c0 <_IO_stdin_used@@Base+0x144c0>
  4146fe:	vpxor  xmm0,xmm0,xmm0
  414702:	vpcmpeqd ymm14,ymm14,ymm14
  414707:	vmovdqa xmm3,XMMWORD PTR [rip+0x2deb1]        # 4425c0 <_IO_stdin_used@@Base+0x145c0>
  41470f:	vpbroadcastq ymm15,QWORD PTR [rip+0x2de00]        # 442518 <_IO_stdin_used@@Base+0x14518>
  414718:	vpbroadcastq ymm5,QWORD PTR [rip+0x2ddff]        # 442520 <_IO_stdin_used@@Base+0x14520>
  414721:	vpbroadcastq ymm6,QWORD PTR [rip+0x2ddfe]        # 442528 <_IO_stdin_used@@Base+0x14528>
  41472a:	vpbroadcastq ymm7,QWORD PTR [rip+0x2ddfd]        # 442530 <_IO_stdin_used@@Base+0x14530>
  414733:	vpbroadcastq ymm8,QWORD PTR [rip+0x2ddfc]        # 442538 <_IO_stdin_used@@Base+0x14538>
  41473c:	vpbroadcastq ymm9,QWORD PTR [rip+0x2ddfb]        # 442540 <_IO_stdin_used@@Base+0x14540>
  414745:	mov    rax,r10
  414748:	vpxor  xmm10,xmm10,xmm10
  41474d:	vpxor  xmm11,xmm11,xmm11
  414752:	vpxor  xmm12,xmm12,xmm12
  414757:	nop    WORD PTR [rax+rax*1+0x0]
  414760:	vpaddq ymm13,ymm1,ymm14
  414765:	vmovq  rsi,xmm13
  41476a:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0x3]
  414771:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0x7]
  414778:	vpshufb xmm2,xmm2,xmm3
  41477d:	vpmovsxbq ymm2,xmm2
  414782:	vpshufb xmm4,xmm4,xmm3
  414787:	vpmovsxbq ymm4,xmm4
  41478c:	vpsllq ymm13,ymm13,0x3
  414792:	vpsubq ymm13,ymm15,ymm13
  414797:	vpand  ymm13,ymm13,ymm8
  41479c:	vpsllvq ymm2,ymm2,ymm13
  4147a1:	vpsllq ymm13,ymm1,0x3
  4147a6:	vpor   ymm0,ymm2,ymm0
  4147aa:	vpsubq ymm2,ymm5,ymm13
  4147af:	vpand  ymm2,ymm2,ymm8
  4147b4:	vpsllvq ymm2,ymm4,ymm2
  4147b9:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0xb]
  4147c0:	vpshufb xmm4,xmm4,xmm3
  4147c5:	vpmovsxbq ymm4,xmm4
  4147ca:	vpor   ymm10,ymm2,ymm10
  4147cf:	vpsubq ymm2,ymm6,ymm13
  4147d4:	vpand  ymm2,ymm2,ymm8
  4147d9:	vpsllvq ymm2,ymm4,ymm2
  4147de:	vpor   ymm11,ymm2,ymm11
  4147e3:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0xf]
  4147ea:	vpshufb xmm2,xmm2,xmm3
  4147ef:	vpmovsxbq ymm2,xmm2
  4147f4:	vpsubq ymm4,ymm7,ymm13
  4147f9:	vpand  ymm4,ymm4,ymm8
  4147fe:	vpsllvq ymm2,ymm2,ymm4
  414803:	vpor   ymm12,ymm2,ymm12
  414808:	vpaddq ymm1,ymm1,ymm9
  41480d:	add    rax,0xfffffffffffffff0
  414811:	jne    414760 <__flatcc_fb_gen_c_json_parser@@Base+0x44a0>
  414817:	vpor   ymm0,ymm10,ymm0
  41481b:	vpor   ymm0,ymm11,ymm0
  41481f:	vpor   ymm0,ymm12,ymm0
  414823:	vextracti128 xmm1,ymm0,0x1
  414829:	vpor   xmm0,xmm0,xmm1
  41482d:	vpshufd xmm1,xmm0,0x4e
  414832:	vpor   xmm0,xmm0,xmm1
  414836:	vmovq  rax,xmm0
  41483b:	cmp    r10,rdi
  41483e:	je     41487c <__flatcc_fb_gen_c_json_parser@@Base+0x45bc>
  414840:	lea    rsi,[rdx*8+0x0]
  414848:	mov    ebx,0x40
  41484d:	sub    rbx,rsi
  414850:	lea    rsi,[r9+r8*1]
  414854:	add    rsi,0xffffffffffffffff
  414858:	nop    DWORD PTR [rax+rax*1+0x0]
  414860:	movsx  rbp,BYTE PTR [rsi+rdx*1]
  414865:	mov    edi,ebx
  414867:	and    dil,0xf8
  41486b:	shlx   rdi,rbp,rdi
  414870:	or     rax,rdi
  414873:	add    rbx,0x8
  414877:	dec    rdx
  41487a:	jne    414860 <__flatcc_fb_gen_c_json_parser@@Base+0x45a0>
  41487c:	cmp    r11d,0x8
  414880:	jl     4148b0 <__flatcc_fb_gen_c_json_parser@@Base+0x45f0>
  414882:	lea    rsi,[rip+0x2ed05]        # 44358e <_IO_stdin_used@@Base+0x1558e>
  414889:	mov    rdi,r14
  41488c:	mov    rdx,rax
  41488f:	mov    r8,r12
  414892:	xor    eax,eax
  414894:	vzeroupper 
  414897:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41489c:	mov    eax,0x8
  4148a1:	mov    QWORD PTR [rsp+0x10],rax
  4148a6:	mov    ebx,DWORD PTR [rsp+0x20]
  4148aa:	mov    ebp,DWORD PTR [rsp+0x1c]
  4148ae:	jmp    4148eb <__flatcc_fb_gen_c_json_parser@@Base+0x462b>
  4148b0:	shl    ecx,0x3
  4148b3:	neg    cl
  4148b5:	mov    rdx,0xffffffffffffffff
  4148bc:	shlx   rdx,rdx,rcx
  4148c1:	mov    r8d,r11d
  4148c4:	mov    ebx,DWORD PTR [rsp+0x20]
  4148c8:	mov    ebp,DWORD PTR [rsp+0x1c]
  4148cc:	lea    rsi,[rip+0x2ecda]        # 4435ad <_IO_stdin_used@@Base+0x155ad>
  4148d3:	mov    rdi,r14
  4148d6:	mov    rcx,rax
  4148d9:	mov    QWORD PTR [rsp+0x10],r8
  4148de:	mov    r9,r12
  4148e1:	xor    eax,eax
  4148e3:	vzeroupper 
  4148e6:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4148eb:	inc    DWORD PTR [r14+0xf0]
  4148f2:	add    r13d,0x2
  4148f6:	cmp    r13d,0x2
  4148fa:	ja     414942 <__flatcc_fb_gen_c_json_parser@@Base+0x4682>
  4148fc:	mov    rbx,QWORD PTR [rsp+0x30]
  414901:	mov    rax,QWORD PTR [rbx]
  414904:	mov    rsi,QWORD PTR [rbx+0x18]
  414908:	mov    rcx,QWORD PTR [rsp+0x28]
  41490d:	mov    rdx,QWORD PTR [rax+rcx*1+0x10]
  414912:	mov    ecx,DWORD PTR [rax+rcx*1+0x18]
  414916:	mov    rdi,r14
  414919:	mov    r8,QWORD PTR [rsp+0x10]
  41491e:	call   QWORD PTR [rbx+0x8]
  414921:	mov    ebp,DWORD PTR [rsp+0xc]
  414925:	test   ebp,ebp
  414927:	jle    4149ae <__flatcc_fb_gen_c_json_parser@@Base+0x46ee>
  41492d:	lea    rsi,[rip+0x2eca2]        # 4435d6 <_IO_stdin_used@@Base+0x155d6>
  414934:	mov    rdi,r14
  414937:	mov    edx,ebp
  414939:	xor    eax,eax
  41493b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414940:	jmp    4149b4 <__flatcc_fb_gen_c_json_parser@@Base+0x46f4>
  414942:	mov    r13d,ebx
  414945:	cmp    r15d,ebp
  414948:	mov    rbx,QWORD PTR [rsp+0x30]
  41494d:	jne    414991 <__flatcc_fb_gen_c_json_parser@@Base+0x46d1>
  41494f:	mov    rax,QWORD PTR [rbx]
  414952:	mov    rsi,QWORD PTR [rbx+0x18]
  414956:	mov    rcx,QWORD PTR [rsp+0x28]
  41495b:	mov    rdx,QWORD PTR [rax+rcx*1+0x10]
  414960:	mov    ecx,DWORD PTR [rax+rcx*1+0x18]
  414964:	mov    rdi,r14
  414967:	mov    r8,QWORD PTR [rsp+0x10]
  41496c:	call   QWORD PTR [rbx+0x8]
  41496f:	mov    edx,DWORD PTR [rsp+0xc]
  414973:	test   edx,edx
  414975:	jle    414a3c <__flatcc_fb_gen_c_json_parser@@Base+0x477c>
  41497b:	lea    rsi,[rip+0x2ec54]        # 4435d6 <_IO_stdin_used@@Base+0x155d6>
  414982:	mov    rdi,r14
  414985:	xor    eax,eax
  414987:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41498c:	jmp    414a42 <__flatcc_fb_gen_c_json_parser@@Base+0x4782>
  414991:	mov    rdi,r14
  414994:	mov    rsi,rbx
  414997:	mov    edx,r15d
  41499a:	mov    ecx,ebp
  41499c:	mov    r8d,r13d
  41499f:	mov    r9d,DWORD PTR [rsp+0xc]
  4149a4:	call   414630 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  4149a9:	jmp    414a6b <__flatcc_fb_gen_c_json_parser@@Base+0x47ab>
  4149ae:	mov    rdi,r14
  4149b1:	call   QWORD PTR [rbx+0x10]
  4149b4:	mov    eax,DWORD PTR [r14+0xf0]
  4149bb:	test   eax,eax
  4149bd:	je     414b1a <__flatcc_fb_gen_c_json_parser@@Base+0x485a>
  4149c3:	dec    eax
  4149c5:	mov    DWORD PTR [r14+0xf0],eax
  4149cc:	lea    rsi,[rip+0x1d6e9]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  4149d3:	mov    rdi,r14
  4149d6:	xor    eax,eax
  4149d8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4149dd:	mov    eax,DWORD PTR [r14+0xf0]
  4149e4:	test   eax,eax
  4149e6:	je     414b39 <__flatcc_fb_gen_c_json_parser@@Base+0x4879>
  4149ec:	dec    eax
  4149ee:	mov    DWORD PTR [r14+0xf0],eax
  4149f5:	lea    rsi,[rip+0x2ec2c]        # 443628 <_IO_stdin_used@@Base+0x15628>
  4149fc:	mov    rdi,r14
  4149ff:	mov    rdx,QWORD PTR [rsp+0x10]
  414a04:	mov    rcx,r12
  414a07:	xor    eax,eax
  414a09:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a0e:	inc    DWORD PTR [r14+0xf0]
  414a15:	test   ebp,ebp
  414a17:	jle    414a31 <__flatcc_fb_gen_c_json_parser@@Base+0x4771>
  414a19:	lea    rsi,[rip+0x2ebb6]        # 4435d6 <_IO_stdin_used@@Base+0x155d6>
  414a20:	mov    rdi,r14
  414a23:	mov    edx,ebp
  414a25:	xor    eax,eax
  414a27:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a2c:	jmp    414ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x4800>
  414a31:	mov    rdi,r14
  414a34:	call   QWORD PTR [rbx+0x10]
  414a37:	jmp    414ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x4800>
  414a3c:	mov    rdi,r14
  414a3f:	call   QWORD PTR [rbx+0x10]
  414a42:	mov    eax,DWORD PTR [r14+0xf0]
  414a49:	test   eax,eax
  414a4b:	je     414b77 <__flatcc_fb_gen_c_json_parser@@Base+0x48b7>
  414a51:	dec    eax
  414a53:	mov    DWORD PTR [r14+0xf0],eax
  414a5a:	lea    rsi,[rip+0x1d65b]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  414a61:	mov    rdi,r14
  414a64:	xor    eax,eax
  414a66:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a6b:	mov    eax,DWORD PTR [r14+0xf0]
  414a72:	test   eax,eax
  414a74:	mov    rdx,QWORD PTR [rsp+0x10]
  414a79:	je     414b58 <__flatcc_fb_gen_c_json_parser@@Base+0x4898>
  414a7f:	dec    eax
  414a81:	mov    DWORD PTR [r14+0xf0],eax
  414a88:	lea    rsi,[rip+0x2eb99]        # 443628 <_IO_stdin_used@@Base+0x15628>
  414a8f:	mov    rdi,r14
  414a92:	mov    rcx,r12
  414a95:	xor    eax,eax
  414a97:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a9c:	inc    DWORD PTR [r14+0xf0]
  414aa3:	dec    r15d
  414aa6:	mov    rdi,r14
  414aa9:	mov    rsi,rbx
  414aac:	mov    edx,DWORD PTR [rsp+0x24]
  414ab0:	mov    ecx,r15d
  414ab3:	mov    r8d,r13d
  414ab6:	mov    r9d,DWORD PTR [rsp+0xc]
  414abb:	call   414630 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  414ac0:	mov    eax,DWORD PTR [r14+0xf0]
  414ac7:	test   eax,eax
  414ac9:	je     414afb <__flatcc_fb_gen_c_json_parser@@Base+0x483b>
  414acb:	dec    eax
  414acd:	mov    DWORD PTR [r14+0xf0],eax
  414ad4:	lea    rsi,[rip+0x2eb63]        # 44363e <_IO_stdin_used@@Base+0x1563e>
  414adb:	mov    rdi,r14
  414ade:	mov    rdx,QWORD PTR [rsp+0x10]
  414ae3:	mov    rcx,r12
  414ae6:	xor    eax,eax
  414ae8:	add    rsp,0x38
  414aec:	pop    rbx
  414aed:	pop    r12
  414aef:	pop    r13
  414af1:	pop    r14
  414af3:	pop    r15
  414af5:	pop    rbp
  414af6:	jmp    4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414afb:	lea    rdi,[rip+0x2dd6f]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414b02:	lea    rsi,[rip+0x2dd74]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414b09:	lea    rcx,[rip+0x2ead6]        # 4435e6 <_IO_stdin_used@@Base+0x155e6>
  414b10:	mov    edx,0x38e
  414b15:	call   406100 <__assert_fail@plt>
  414b1a:	lea    rdi,[rip+0x2dd50]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414b21:	lea    rsi,[rip+0x2dd55]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414b28:	lea    rcx,[rip+0x2eab7]        # 4435e6 <_IO_stdin_used@@Base+0x155e6>
  414b2f:	mov    edx,0x378
  414b34:	call   406100 <__assert_fail@plt>
  414b39:	lea    rdi,[rip+0x2dd31]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414b40:	lea    rsi,[rip+0x2dd36]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414b47:	lea    rcx,[rip+0x2ea98]        # 4435e6 <_IO_stdin_used@@Base+0x155e6>
  414b4e:	mov    edx,0x379
  414b53:	call   406100 <__assert_fail@plt>
  414b58:	lea    rdi,[rip+0x2dd12]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414b5f:	lea    rsi,[rip+0x2dd17]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414b66:	lea    rcx,[rip+0x2ea79]        # 4435e6 <_IO_stdin_used@@Base+0x155e6>
  414b6d:	mov    edx,0x38b
  414b72:	call   406100 <__assert_fail@plt>
  414b77:	lea    rdi,[rip+0x2dcf3]        # 442871 <_IO_stdin_used@@Base+0x14871>
  414b7e:	lea    rsi,[rip+0x2dcf8]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  414b85:	lea    rcx,[rip+0x2ea5a]        # 4435e6 <_IO_stdin_used@@Base+0x155e6>
  414b8c:	mov    edx,0x387
  414b91:	call   406100 <__assert_fail@plt>
  414b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414ba0:	push   rbp
  414ba1:	mov    rbp,rsp
  414ba4:	push   r15
  414ba6:	push   r14
  414ba8:	push   r13
  414baa:	push   r12
  414bac:	push   rbx
  414bad:	and    rsp,0xffffffffffffffe0
  414bb1:	sub    rsp,0x240
  414bb8:	mov    DWORD PTR [rsp+0x2c],ecx
  414bbc:	mov    r13,rdx
  414bbf:	mov    rbx,rsi
  414bc2:	mov    r15,rdi
  414bc5:	lea    rsi,[rip+0x2ec86]        # 443852 <_IO_stdin_used@@Base+0x15852>
  414bcc:	mov    edx,r8d
  414bcf:	xor    eax,eax
  414bd1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414bd6:	lea    rsi,[rip+0x2ecb8]        # 443895 <_IO_stdin_used@@Base+0x15895>
  414bdd:	mov    rdi,r15
  414be0:	xor    eax,eax
  414be2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414be7:	inc    DWORD PTR [r15+0xf0]
  414bee:	vxorps xmm0,xmm0,xmm0
  414bf2:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  414bf8:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  414c01:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  414c0a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  414c13:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  414c1c:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  414c25:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  414c2e:	mov    QWORD PTR [rsp+0x140],0x0
  414c3a:	mov    rdi,QWORD PTR [rbx+0x18]
  414c3e:	lea    rsi,[rsp+0x150]
  414c46:	vzeroupper 
  414c49:	call   408060 <__flatcc_fb_copy_scope@@Base>
  414c4e:	movzx  eax,WORD PTR [rbx+0x10]
  414c52:	mov    WORD PTR [rsp+0x2a],ax
  414c57:	movzx  eax,WORD PTR [r13+0x28]
  414c5c:	mov    r12d,0x0
  414c62:	cmp    ax,0xf
  414c66:	ja     414c7e <__flatcc_fb_gen_c_json_parser@@Base+0x49be>
  414c68:	mov    ecx,0x8280
  414c6d:	bt     ecx,eax
  414c70:	mov    r12d,0x0
  414c76:	jae    414c7e <__flatcc_fb_gen_c_json_parser@@Base+0x49be>
  414c78:	mov    r12d,0x1
  414c7e:	add    eax,0xfffffff9
  414c81:	cmp    ax,0x8
  414c85:	ja     414e0d <__flatcc_fb_gen_c_json_parser@@Base+0x4b4d>
  414c8b:	movzx  eax,ax
  414c8e:	lea    rcx,[rip+0x2d8db]        # 442570 <_IO_stdin_used@@Base+0x14570>
  414c95:	movsxd rsi,DWORD PTR [rcx+rax*4]
  414c99:	add    rsi,rcx
  414c9c:	xor    edx,edx
  414c9e:	xor    ecx,ecx
  414ca0:	xor    r8d,r8d
  414ca3:	mov    DWORD PTR [rsp+0x10],0x0
  414cab:	mov    DWORD PTR [rsp+0x20],0x0
  414cb3:	xor    r9d,r9d
  414cb6:	mov    DWORD PTR [rsp+0xc],0x0
  414cbe:	mov    DWORD PTR [rsp+0x14],0x0
  414cc6:	mov    DWORD PTR [rsp+0x1c],0x0
  414cce:	xor    edi,edi
  414cd0:	xor    r14d,r14d
  414cd3:	xor    eax,eax
  414cd5:	mov    QWORD PTR [rsp+0x30],rax
  414cda:	xor    ebx,ebx
  414cdc:	jmp    rsi
  414cde:	mov    DWORD PTR [rsp+0x10],0x1
  414ce6:	mov    DWORD PTR [rsp+0x20],0x0
  414cee:	xor    r9d,r9d
  414cf1:	mov    DWORD PTR [rsp+0xc],0x0
  414cf9:	mov    DWORD PTR [rsp+0x14],0x0
  414d01:	mov    DWORD PTR [rsp+0x1c],0x0
  414d09:	xor    edi,edi
  414d0b:	xor    r14d,r14d
  414d0e:	xor    eax,eax
  414d10:	mov    QWORD PTR [rsp+0x30],rax
  414d15:	jmp    414e46 <__flatcc_fb_gen_c_json_parser@@Base+0x4b86>
  414d1a:	mov    rsi,QWORD PTR [r13+0x18]
  414d1e:	mov    rdi,QWORD PTR [rsi+0x18]
  414d22:	lea    rdx,[rsp+0x60]
  414d27:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  414d2c:	mov    rax,QWORD PTR [r13+0x18]
  414d30:	movzx  ecx,WORD PTR [rax+0x10]
  414d34:	xor    edx,edx
  414d36:	cmp    cx,0x1
  414d3a:	sete   dl
  414d3d:	mov    DWORD PTR [rsp+0x14],edx
  414d41:	xor    edx,edx
  414d43:	test   cx,cx
  414d46:	sete   dl
  414d49:	mov    DWORD PTR [rsp+0xc],edx
  414d4d:	cmp    cx,0x4
  414d51:	sete   dl
  414d54:	cmp    DWORD PTR [rsp+0x2c],0x0
  414d59:	sete   bl
  414d5c:	and    bl,dl
  414d5e:	movzx  edx,bl
  414d61:	mov    DWORD PTR [rsp+0x1c],edx
  414d65:	cmp    cx,0x3
  414d69:	jne    414d93 <__flatcc_fb_gen_c_json_parser@@Base+0x4ad3>
  414d6b:	mov    eax,DWORD PTR [rax+0x48]
  414d6e:	mov    QWORD PTR [rsp+0x30],rax
  414d73:	mov    DWORD PTR [rsp+0x20],0x1
  414d7b:	mov    DWORD PTR [rsp+0x10],0x0
  414d83:	mov    r9d,0x1
  414d89:	xor    edi,edi
  414d8b:	xor    r14d,r14d
  414d8e:	jmp    414e44 <__flatcc_fb_gen_c_json_parser@@Base+0x4b84>
  414d93:	mov    DWORD PTR [rsp+0x10],0x0
  414d9b:	mov    DWORD PTR [rsp+0x20],0x0
  414da3:	xor    r9d,r9d
  414da6:	jmp    414e38 <__flatcc_fb_gen_c_json_parser@@Base+0x4b78>
  414dab:	xor    r8d,r8d
  414dae:	cmp    QWORD PTR [r13+0x90],0x0
  414db6:	setne  r8b
  414dba:	movzx  ecx,WORD PTR [r13+0x70]
  414dbf:	mov    edx,ecx
  414dc1:	and    edx,0x400
  414dc7:	and    ecx,0x800
  414dcd:	mov    esi,DWORD PTR [r13+0x18]
  414dd1:	mov    QWORD PTR [rsp+0x30],rsi
  414dd6:	mov    r9d,0x1
  414ddc:	mov    DWORD PTR [rsp+0x10],0x0
  414de4:	mov    DWORD PTR [rsp+0x20],0x0
  414dec:	mov    DWORD PTR [rsp+0xc],0x0
  414df4:	mov    DWORD PTR [rsp+0x14],0x0
  414dfc:	mov    DWORD PTR [rsp+0x1c],0x0
  414e04:	mov    ebx,edx
  414e06:	mov    edi,ecx
  414e08:	mov    r14d,r8d
  414e0b:	jmp    414e46 <__flatcc_fb_gen_c_json_parser@@Base+0x4b86>
  414e0d:	mov    DWORD PTR [rsp+0x10],0x0
  414e15:	mov    DWORD PTR [rsp+0x20],0x0
  414e1d:	xor    r9d,r9d
  414e20:	mov    DWORD PTR [rsp+0xc],0x0
  414e28:	mov    DWORD PTR [rsp+0x14],0x0
  414e30:	mov    DWORD PTR [rsp+0x1c],0x0
  414e38:	xor    edi,edi
  414e3a:	xor    r14d,r14d
  414e3d:	xor    eax,eax
  414e3f:	mov    QWORD PTR [rsp+0x30],rax
  414e44:	xor    ebx,ebx
  414e46:	or     edi,ebx
  414e48:	mov    DWORD PTR [rsp+0x38],edi
  414e4c:	je     414e71 <__flatcc_fb_gen_c_json_parser@@Base+0x4bb1>
  414e4e:	test   r12d,r12d
  414e51:	je     41596b <__flatcc_fb_gen_c_json_parser@@Base+0x56ab>
  414e57:	xor    r12d,r12d
  414e5a:	mov    r9d,0x0
  414e60:	mov    r14d,0x0
  414e66:	cmp    DWORD PTR [rsp+0x30],0x4
  414e6b:	jne    41596b <__flatcc_fb_gen_c_json_parser@@Base+0x56ab>
  414e71:	xor    eax,eax
  414e73:	cmp    DWORD PTR [rsp+0x2c],0x0
  414e78:	setne  cl
  414e7b:	cmovne r9d,eax
  414e7f:	mov    DWORD PTR [rsp+0x3c],r9d
  414e84:	test   r12d,r12d
  414e87:	setne  dl
  414e8a:	and    dl,cl
  414e8c:	mov    BYTE PTR [rsp+0x1a],dl
  414e90:	cmovne r12d,eax
  414e94:	test   r12d,r12d
  414e97:	setne  cl
  414e9a:	cmp    DWORD PTR [rsp+0x1c],0x0
  414e9f:	setne  dl
  414ea2:	and    dl,cl
  414ea4:	mov    BYTE PTR [rsp+0x1b],dl
  414ea8:	cmovne r12d,eax
  414eac:	mov    DWORD PTR [rsp+0x24],r12d
  414eb1:	test   r14d,r14d
  414eb4:	je     414ece <__flatcc_fb_gen_c_json_parser@@Base+0x4c0e>
  414eb6:	lea    rsi,[rip+0x2eac4]        # 443981 <_IO_stdin_used@@Base+0x15981>
  414ebd:	mov    rdi,r15
  414ec0:	xor    eax,eax
  414ec2:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414ec7:	inc    DWORD PTR [r15+0xf0]
  414ece:	cmp    DWORD PTR [rsp+0x2c],0x0
  414ed3:	sete   BYTE PTR [rsp+0xb]
  414ed8:	xor    eax,eax
  414eda:	test   ebx,ebx
  414edc:	sete   al
  414edf:	mov    DWORD PTR [rsp+0x58],eax
  414ee3:	lea    rax,[rip+0x2ea0a]        # 4438f4 <_IO_stdin_used@@Base+0x158f4>
  414eea:	mov    QWORD PTR [rsp+0x40],rax
  414eef:	mov    QWORD PTR [rsp+0x50],rax
  414ef4:	mov    QWORD PTR [rsp+0x48],r13
  414ef9:	jmp    414f1c <__flatcc_fb_gen_c_json_parser@@Base+0x4c5c>
  414efb:	lea    rsi,[rip+0x2f311]        # 444213 <_IO_stdin_used@@Base+0x16213>
  414f02:	xor    eax,eax
  414f04:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414f09:	mov    r14d,0x2
  414f0f:	mov    ebx,DWORD PTR [rsp+0x5c]
  414f13:	cmp    ebx,0x1
  414f16:	jne    415706 <__flatcc_fb_gen_c_json_parser@@Base+0x5446>
  414f1c:	cmp    r14d,0x2
  414f20:	mov    DWORD PTR [rsp+0x5c],r14d
  414f25:	jne    415020 <__flatcc_fb_gen_c_json_parser@@Base+0x4d60>
  414f2b:	mov    eax,DWORD PTR [r15+0xf0]
  414f32:	test   eax,eax
  414f34:	je     4157d6 <__flatcc_fb_gen_c_json_parser@@Base+0x5516>
  414f3a:	dec    eax
  414f3c:	mov    DWORD PTR [r15+0xf0],eax
  414f43:	mov    DWORD PTR [rsp+0x4],0x0
  414f4b:	mov    rdi,r15
  414f4e:	lea    rsi,[rip+0x2ea60]        # 4439b5 <_IO_stdin_used@@Base+0x159b5>
  414f55:	xor    eax,eax
  414f57:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414f5c:	inc    DWORD PTR [r15+0xf0]
  414f63:	mov    rsi,QWORD PTR [r13+0x90]
  414f6a:	mov    rdi,QWORD PTR [rsi+0x18]
  414f6e:	lea    rdx,[rsp+0x60]
  414f73:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  414f78:	mov    rax,QWORD PTR [r13+0x90]
  414f7f:	cmp    WORD PTR [rax+0x10],0x0
  414f84:	mov    eax,DWORD PTR [rsp+0xc]
  414f88:	mov    ecx,0x1
  414f8d:	cmove  eax,ecx
  414f90:	mov    DWORD PTR [rsp+0xc],eax
  414f94:	mov    ebx,DWORD PTR [rsp+0x14]
  414f98:	cmovne ebx,ecx
  414f9b:	mov    rdi,r15
  414f9e:	lea    rsi,[rip+0x2ea26]        # 4439cb <_IO_stdin_used@@Base+0x159cb>
  414fa5:	xor    eax,eax
  414fa7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414fac:	mov    DWORD PTR [rsp+0x14],ebx
  414fb0:	test   ebx,ebx
  414fb2:	sete   r14b
  414fb6:	mov    r12d,r14d
  414fb9:	and    r12b,BYTE PTR [rsp+0xb]
  414fbe:	xor    ebx,ebx
  414fc0:	mov    DWORD PTR [rsp+0x3c],0x0
  414fc8:	xor    r13d,r13d
  414fcb:	cmp    WORD PTR [rsp+0x2a],0x1
  414fd1:	je     4152d0 <__flatcc_fb_gen_c_json_parser@@Base+0x5010>
  414fd7:	mov    eax,DWORD PTR [rsp+0x4]
  414fdb:	or     al,r14b
  414fde:	jne    4152ea <__flatcc_fb_gen_c_json_parser@@Base+0x502a>
  414fe4:	mov    rax,QWORD PTR [rsp+0x48]
  414fe9:	mov    rcx,QWORD PTR [rax+0x80]
  414ff0:	mov    rdx,QWORD PTR [rax+0x88]
  414ff7:	movzx  r8d,WORD PTR [rax+0x72]
  414ffc:	mov    rdi,r15
  414fff:	lea    rsi,[rip+0x2ebe6]        # 443bec <_IO_stdin_used@@Base+0x15bec>
  415006:	xor    eax,eax
  415008:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41500d:	jmp    4152ea <__flatcc_fb_gen_c_json_parser@@Base+0x502a>
  415012:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41501c:	nop    DWORD PTR [rax+0x0]
  415020:	mov    eax,DWORD PTR [rsp+0x14]
  415024:	test   eax,eax
  415026:	sete   r14b
  41502a:	mov    ecx,DWORD PTR [rsp+0x3c]
  41502e:	or     eax,ecx
  415030:	sete   r12b
  415034:	test   ecx,ecx
  415036:	je     415093 <__flatcc_fb_gen_c_json_parser@@Base+0x4dd3>
  415038:	mov    rax,QWORD PTR [rsp+0x30]
  41503d:	dec    eax
  41503f:	cmp    eax,0xa
  415042:	ja     415852 <__flatcc_fb_gen_c_json_parser@@Base+0x5592>
  415048:	mov    bl,0x1
  41504a:	lea    rcx,[rip+0x2d543]        # 442594 <_IO_stdin_used@@Base+0x14594>
  415051:	movsxd rdx,DWORD PTR [rcx+rax*4]
  415055:	add    rdx,rcx
  415058:	lea    rax,[rip+0x21cfa]        # 436d59 <_IO_stdin_used@@Base+0x8d59>
  41505f:	lea    rcx,[rip+0x21346]        # 4363ac <_IO_stdin_used@@Base+0x83ac>
  415066:	lea    rsi,[rip+0x3339b]        # 448408 <fb_schema_table_deleted@@Base+0x14e0>
  41506d:	mov    QWORD PTR [rsp+0x40],rsi
  415072:	lea    rsi,[rip+0x21345]        # 4363be <_IO_stdin_used@@Base+0x83be>
  415079:	mov    QWORD PTR [rsp+0x50],rsi
  41507e:	jmp    rdx
  415080:	lea    rax,[rip+0x21ccb]        # 436d52 <_IO_stdin_used@@Base+0x8d52>
  415087:	lea    rcx,[rip+0x21315]        # 4363a3 <_IO_stdin_used@@Base+0x83a3>
  41508e:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  415093:	xor    ebx,ebx
  415095:	jmp    41511a <__flatcc_fb_gen_c_json_parser@@Base+0x4e5a>
  41509a:	lea    rax,[rip+0x21cc6]        # 436d67 <_IO_stdin_used@@Base+0x8d67>
  4150a1:	lea    rcx,[rip+0x21316]        # 4363be <_IO_stdin_used@@Base+0x83be>
  4150a8:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4150aa:	lea    rcx,[rip+0x21322]        # 4363d3 <_IO_stdin_used@@Base+0x83d3>
  4150b1:	jmp    41510a <__flatcc_fb_gen_c_json_parser@@Base+0x4e4a>
  4150b3:	lea    rax,[rip+0x21ca6]        # 436d60 <_IO_stdin_used@@Base+0x8d60>
  4150ba:	lea    rcx,[rip+0x212f4]        # 4363b5 <_IO_stdin_used@@Base+0x83b5>
  4150c1:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4150c3:	lea    rax,[rip+0x21c97]        # 436d61 <_IO_stdin_used@@Base+0x8d61>
  4150ca:	lea    rcx,[rip+0x212e5]        # 4363b6 <_IO_stdin_used@@Base+0x83b6>
  4150d1:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4150d3:	lea    rax,[rip+0x21c79]        # 436d53 <_IO_stdin_used@@Base+0x8d53>
  4150da:	lea    rcx,[rip+0x212c3]        # 4363a4 <_IO_stdin_used@@Base+0x83a4>
  4150e1:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4150e3:	lea    rax,[rip+0x21c70]        # 436d5a <_IO_stdin_used@@Base+0x8d5a>
  4150ea:	lea    rcx,[rip+0x212bc]        # 4363ad <_IO_stdin_used@@Base+0x83ad>
  4150f1:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4150f3:	lea    rax,[rip+0x21c6e]        # 436d68 <_IO_stdin_used@@Base+0x8d68>
  4150fa:	lea    rcx,[rip+0x212be]        # 4363bf <_IO_stdin_used@@Base+0x83bf>
  415101:	jmp    415110 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  415103:	lea    rcx,[rip+0x212c3]        # 4363cd <_IO_stdin_used@@Base+0x83cd>
  41510a:	mov    rax,rcx
  41510d:	nop    DWORD PTR [rax]
  415110:	mov    QWORD PTR [rsp+0x40],rax
  415115:	mov    QWORD PTR [rsp+0x50],rcx
  41511a:	and    r12b,BYTE PTR [rsp+0xb]
  41511f:	cmp    DWORD PTR [rsp+0x24],0x0
  415124:	je     41513e <__flatcc_fb_gen_c_json_parser@@Base+0x4e7e>
  415126:	test   r12b,r12b
  415129:	je     415161 <__flatcc_fb_gen_c_json_parser@@Base+0x4ea1>
  41512b:	mov    rdi,r15
  41512e:	lea    rsi,[rip+0x2e8d7]        # 443a0c <_IO_stdin_used@@Base+0x15a0c>
  415135:	xor    eax,eax
  415137:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41513c:	jmp    4151a9 <__flatcc_fb_gen_c_json_parser@@Base+0x4ee9>
  41513e:	mov    DWORD PTR [rsp+0x4],0x0
  415146:	test   bl,bl
  415148:	mov    ebx,DWORD PTR [rsp+0x24]
  41514c:	jne    4151e7 <__flatcc_fb_gen_c_json_parser@@Base+0x4f27>
  415152:	mov    DWORD PTR [rsp+0x4],0x0
  41515a:	xor    ebx,ebx
  41515c:	jmp    414fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x4d08>
  415161:	mov    r8,QWORD PTR [r13+0x80]
  415168:	movsx  ecx,WORD PTR [r13+0x72]
  41516d:	test   r8,r8
  415170:	mov    rsi,r8
  415173:	mov    eax,0x1
  415178:	cmove  rsi,rax
  41517c:	mov    rax,rsi
  41517f:	shr    rax,0x20
  415183:	jne    415190 <__flatcc_fb_gen_c_json_parser@@Base+0x4ed0>
  415185:	mov    eax,0xffffffff
  41518a:	xor    edx,edx
  41518c:	div    esi
  41518e:	jmp    415192 <__flatcc_fb_gen_c_json_parser@@Base+0x4ed2>
  415190:	xor    eax,eax
  415192:	mov    rdi,r15
  415195:	lea    rsi,[rip+0x2e8af]        # 443a4b <_IO_stdin_used@@Base+0x15a4b>
  41519c:	mov    rdx,r8
  41519f:	mov    r8,rax
  4151a2:	xor    eax,eax
  4151a4:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4151a9:	xor    r13d,r13d
  4151ac:	mov    rdi,r15
  4151af:	lea    rsi,[rip+0x2e8e6]        # 443a9c <_IO_stdin_used@@Base+0x15a9c>
  4151b6:	xor    eax,eax
  4151b8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4151bd:	mov    rdi,r15
  4151c0:	lea    rsi,[rip+0x2e5b4]        # 44377b <_IO_stdin_used@@Base+0x1577b>
  4151c7:	xor    eax,eax
  4151c9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4151ce:	inc    DWORD PTR [r15+0xf0]
  4151d5:	mov    al,0x1
  4151d7:	mov    DWORD PTR [rsp+0x4],eax
  4151db:	test   bl,bl
  4151dd:	mov    ebx,DWORD PTR [rsp+0x24]
  4151e1:	je     4152a6 <__flatcc_fb_gen_c_json_parser@@Base+0x4fe6>
  4151e7:	mov    rdi,r15
  4151ea:	lea    rsi,[rip+0x2e8e7]        # 443ad8 <_IO_stdin_used@@Base+0x15ad8>
  4151f1:	mov    rdx,QWORD PTR [rsp+0x50]
  4151f6:	xor    eax,eax
  4151f8:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4151fd:	mov    rdi,r15
  415200:	lea    rsi,[rip+0x2e8dd]        # 443ae4 <_IO_stdin_used@@Base+0x15ae4>
  415207:	xor    eax,eax
  415209:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41520e:	add    DWORD PTR [r15+0xf0],0x2
  415216:	cmp    DWORD PTR [rsp+0x20],0x0
  41521b:	je     415233 <__flatcc_fb_gen_c_json_parser@@Base+0x4f73>
  41521d:	mov    rdi,r15
  415220:	lea    rsi,[rip+0x2e901]        # 443b28 <_IO_stdin_used@@Base+0x15b28>
  415227:	lea    rdx,[rsp+0x60]
  41522c:	xor    eax,eax
  41522e:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415233:	mov    rax,QWORD PTR [r15+0xd8]
  41523a:	mov    rdx,QWORD PTR [rax+0x110]
  415241:	mov    rdi,r15
  415244:	lea    rsi,[rip+0x2e8f1]        # 443b3c <_IO_stdin_used@@Base+0x15b3c>
  41524b:	lea    rcx,[rsp+0x150]
  415253:	xor    eax,eax
  415255:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41525a:	mov    rax,QWORD PTR [r15+0xd8]
  415261:	mov    rdx,QWORD PTR [rax+0x110]
  415268:	mov    rdi,r15
  41526b:	lea    rsi,[rip+0x2e8e7]        # 443b59 <_IO_stdin_used@@Base+0x15b59>
  415272:	xor    eax,eax
  415274:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415279:	mov    eax,DWORD PTR [r15+0xf0]
  415280:	test   eax,eax
  415282:	je     4157f5 <__flatcc_fb_gen_c_json_parser@@Base+0x5535>
  415288:	mov    ecx,eax
  41528a:	dec    ecx
  41528c:	mov    DWORD PTR [r15+0xf0],ecx
  415293:	je     4157f5 <__flatcc_fb_gen_c_json_parser@@Base+0x5535>
  415299:	add    eax,0xfffffffe
  41529c:	mov    DWORD PTR [r15+0xf0],eax
  4152a3:	mov    r13b,0x1
  4152a6:	test   ebx,ebx
  4152a8:	sete   al
  4152ab:	or     al,r12b
  4152ae:	jne    4152c4 <__flatcc_fb_gen_c_json_parser@@Base+0x5004>
  4152b0:	xor    r12d,r12d
  4152b3:	mov    rdi,r15
  4152b6:	lea    rsi,[rip+0x2e8bd]        # 443b7a <_IO_stdin_used@@Base+0x15b7a>
  4152bd:	xor    eax,eax
  4152bf:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4152c4:	cmp    WORD PTR [rsp+0x2a],0x1
  4152ca:	jne    414fd7 <__flatcc_fb_gen_c_json_parser@@Base+0x4d17>
  4152d0:	mov    rax,QWORD PTR [rsp+0x48]
  4152d5:	mov    rdx,QWORD PTR [rax+0x78]
  4152d9:	mov    rdi,r15
  4152dc:	lea    rsi,[rip+0x2e8dd]        # 443bc0 <_IO_stdin_used@@Base+0x15bc0>
  4152e3:	xor    eax,eax
  4152e5:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4152ea:	test   r13b,r13b
  4152ed:	mov    DWORD PTR [rsp+0x24],ebx
  4152f1:	je     4153d0 <__flatcc_fb_gen_c_json_parser@@Base+0x5110>
  4152f7:	mov    rdi,r15
  4152fa:	lea    rsi,[rip+0x2e938]        # 443c39 <_IO_stdin_used@@Base+0x15c39>
  415301:	mov    rbx,QWORD PTR [rsp+0x40]
  415306:	mov    rdx,rbx
  415309:	xor    eax,eax
  41530b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415310:	mov    rdi,r15
  415313:	lea    rsi,[rip+0x2e95a]        # 443c74 <_IO_stdin_used@@Base+0x15c74>
  41531a:	xor    eax,eax
  41531c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415321:	inc    DWORD PTR [r15+0xf0]
  415328:	mov    rdi,r15
  41532b:	lea    rsi,[rip+0x2e955]        # 443c87 <_IO_stdin_used@@Base+0x15c87>
  415332:	mov    rdx,rbx
  415335:	xor    eax,eax
  415337:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41533c:	mov    rdi,r15
  41533f:	lea    rsi,[rip+0x2e997]        # 443cdd <_IO_stdin_used@@Base+0x15cdd>
  415346:	xor    eax,eax
  415348:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41534d:	mov    eax,DWORD PTR [r15+0xf0]
  415354:	test   eax,eax
  415356:	mov    r13,QWORD PTR [rsp+0x48]
  41535b:	je     415814 <__flatcc_fb_gen_c_json_parser@@Base+0x5554>
  415361:	cmp    WORD PTR [rsp+0x2a],0x1
  415367:	sete   bl
  41536a:	dec    eax
  41536c:	mov    DWORD PTR [r15+0xf0],eax
  415373:	mov    rdi,r15
  415376:	lea    rsi,[rip+0x1cd3f]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  41537d:	xor    eax,eax
  41537f:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415384:	or     bl,BYTE PTR [rsp+0x4]
  415388:	cmp    DWORD PTR [rsp+0x38],0x0
  41538d:	jne    4154bc <__flatcc_fb_gen_c_json_parser@@Base+0x51fc>
  415393:	test   bl,bl
  415395:	jne    4154bc <__flatcc_fb_gen_c_json_parser@@Base+0x51fc>
  41539b:	mov    eax,DWORD PTR [r13+0x58]
  41539f:	lea    ecx,[rax-0x5]
  4153a2:	cmp    cx,0x2
  4153a6:	jb     415436 <__flatcc_fb_gen_c_json_parser@@Base+0x5176>
  4153ac:	cmp    ax,0x3
  4153b0:	je     41547a <__flatcc_fb_gen_c_json_parser@@Base+0x51ba>
  4153b6:	cmp    ax,0x4
  4153ba:	jne    41589b <__flatcc_fb_gen_c_json_parser@@Base+0x55db>
  4153c0:	mov    rdx,QWORD PTR [r13+0x48]
  4153c4:	mov    rdi,r15
  4153c7:	lea    rsi,[rip+0x2e97e]        # 443d4c <_IO_stdin_used@@Base+0x15d4c>
  4153ce:	jmp    415444 <__flatcc_fb_gen_c_json_parser@@Base+0x5184>
  4153d0:	test   r14b,r14b
  4153d3:	mov    r13,QWORD PTR [rsp+0x48]
  4153d8:	je     415410 <__flatcc_fb_gen_c_json_parser@@Base+0x5150>
  4153da:	cmp    DWORD PTR [rsp+0x10],0x0
  4153df:	je     41544d <__flatcc_fb_gen_c_json_parser@@Base+0x518d>
  4153e1:	mov    rdi,r15
  4153e4:	lea    rsi,[rip+0x2eab9]        # 443ea4 <_IO_stdin_used@@Base+0x15ea4>
  4153eb:	xor    eax,eax
  4153ed:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4153f2:	cmp    BYTE PTR [rsp+0x4],0x0
  4153f7:	je     414f09 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  4153fd:	jmp    4154e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  415402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41540c:	nop    DWORD PTR [rax+0x0]
  415410:	mov    rdi,r15
  415413:	lea    rsi,[rip+0x2ea52]        # 443e6c <_IO_stdin_used@@Base+0x15e6c>
  41541a:	lea    rdx,[rsp+0x60]
  41541f:	xor    eax,eax
  415421:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415426:	cmp    BYTE PTR [rsp+0x4],0x0
  41542b:	je     414f09 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  415431:	jmp    4154e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  415436:	mov    rdx,QWORD PTR [r13+0x48]
  41543a:	mov    rdi,r15
  41543d:	lea    rsi,[rip+0x2e8c5]        # 443d09 <_IO_stdin_used@@Base+0x15d09>
  415444:	xor    eax,eax
  415446:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41544b:	jmp    415491 <__flatcc_fb_gen_c_json_parser@@Base+0x51d1>
  41544d:	cmp    DWORD PTR [rsp+0x38],0x0
  415452:	je     415597 <__flatcc_fb_gen_c_json_parser@@Base+0x52d7>
  415458:	mov    rdi,r15
  41545b:	lea    rsi,[rip+0x2ea7e]        # 443ee0 <_IO_stdin_used@@Base+0x15ee0>
  415462:	mov    edx,DWORD PTR [rsp+0x58]
  415466:	xor    eax,eax
  415468:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41546d:	cmp    BYTE PTR [rsp+0x4],0x0
  415472:	je     414f09 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  415478:	jmp    4154e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  41547a:	vmovsd xmm0,QWORD PTR [r13+0x48]
  415480:	mov    rdi,r15
  415483:	lea    rsi,[rip+0x2e905]        # 443d8f <_IO_stdin_used@@Base+0x15d8f>
  41548a:	mov    al,0x1
  41548c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415491:	inc    DWORD PTR [r15+0xf0]
  415498:	mov    rcx,QWORD PTR [r13+0x80]
  41549f:	mov    rdx,QWORD PTR [r13+0x88]
  4154a6:	movsx  r8d,WORD PTR [r13+0x72]
  4154ab:	mov    rdi,r15
  4154ae:	lea    rsi,[rip+0x2e94c]        # 443e01 <_IO_stdin_used@@Base+0x15e01>
  4154b5:	xor    eax,eax
  4154b7:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4154bc:	mov    rdi,r15
  4154bf:	lea    rsi,[rip+0x2e989]        # 443e4f <_IO_stdin_used@@Base+0x15e4f>
  4154c6:	mov    rdx,r15
  4154c9:	mov    rcx,QWORD PTR [rsp+0x40]
  4154ce:	xor    eax,eax
  4154d0:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4154d5:	test   bl,bl
  4154d7:	je     415570 <__flatcc_fb_gen_c_json_parser@@Base+0x52b0>
  4154dd:	cmp    BYTE PTR [rsp+0x4],0x0
  4154e2:	je     414f09 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  4154e8:	test   r12b,r12b
  4154eb:	je     41550f <__flatcc_fb_gen_c_json_parser@@Base+0x524f>
  4154ed:	mov    rdi,r15
  4154f0:	lea    rsi,[rip+0x2ec4e]        # 444145 <_IO_stdin_used@@Base+0x16145>
  4154f7:	xor    eax,eax
  4154f9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4154fe:	mov    rdi,r15
  415501:	lea    rsi,[rip+0x2ec92]        # 44419a <_IO_stdin_used@@Base+0x1619a>
  415508:	xor    eax,eax
  41550a:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41550f:	mov    rdi,r15
  415512:	lea    rsi,[rip+0x2ec8e]        # 4441a7 <_IO_stdin_used@@Base+0x161a7>
  415519:	xor    eax,eax
  41551b:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415520:	mov    eax,DWORD PTR [r15+0xf0]
  415527:	test   eax,eax
  415529:	je     415833 <__flatcc_fb_gen_c_json_parser@@Base+0x5573>
  41552f:	dec    eax
  415531:	mov    DWORD PTR [r15+0xf0],eax
  415538:	mov    rdi,r15
  41553b:	lea    rsi,[rip+0x1cb7a]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  415542:	xor    eax,eax
  415544:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415549:	mov    rdi,r15
  41554c:	test   r12b,r12b
  41554f:	je     414efb <__flatcc_fb_gen_c_json_parser@@Base+0x4c3b>
  415555:	lea    rsi,[rip+0x2ec85]        # 4441e1 <_IO_stdin_used@@Base+0x161e1>
  41555c:	jmp    414f02 <__flatcc_fb_gen_c_json_parser@@Base+0x4c42>
  415561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41556b:	nop    DWORD PTR [rax+rax*1+0x0]
  415570:	mov    eax,DWORD PTR [r15+0xf0]
  415577:	test   eax,eax
  415579:	je     4158e4 <__flatcc_fb_gen_c_json_parser@@Base+0x5624>
  41557f:	dec    eax
  415581:	mov    DWORD PTR [r15+0xf0],eax
  415588:	mov    rdi,r15
  41558b:	lea    rsi,[rip+0x1cb2a]        # 4320bc <_IO_stdin_used@@Base+0x40bc>
  415592:	jmp    414f02 <__flatcc_fb_gen_c_json_parser@@Base+0x4c42>
  415597:	cmp    DWORD PTR [rsp+0xc],0x0
  41559c:	je     4155ad <__flatcc_fb_gen_c_json_parser@@Base+0x52ed>
  41559e:	mov    rdi,r15
  4155a1:	lea    rsi,[rip+0x2e985]        # 443f2d <_IO_stdin_used@@Base+0x15f2d>
  4155a8:	jmp    41541a <__flatcc_fb_gen_c_json_parser@@Base+0x515a>
  4155ad:	cmp    DWORD PTR [rsp+0x1c],0x0
  4155b2:	je     4155dc <__flatcc_fb_gen_c_json_parser@@Base+0x531c>
  4155b4:	mov    rcx,QWORD PTR [r13+0x88]
  4155bb:	mov    rdx,QWORD PTR [r13+0xa0]
  4155c2:	cmp    BYTE PTR [rsp+0x1b],0x0
  4155c7:	je     4156c4 <__flatcc_fb_gen_c_json_parser@@Base+0x5404>
  4155cd:	mov    rdi,r15
  4155d0:	lea    rsi,[rip+0x2e986]        # 443f5d <_IO_stdin_used@@Base+0x15f5d>
  4155d7:	jmp    4156ea <__flatcc_fb_gen_c_json_parser@@Base+0x542a>
  4155dc:	cmp    DWORD PTR [rsp+0x2c],0x0
  4155e1:	je     4156d0 <__flatcc_fb_gen_c_json_parser@@Base+0x5410>
  4155e7:	mov    rdi,r15
  4155ea:	lea    rsi,[rip+0x2e4f3]        # 443ae4 <_IO_stdin_used@@Base+0x15ae4>
  4155f1:	xor    eax,eax
  4155f3:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4155f8:	add    DWORD PTR [r15+0xf0],0x2
  415600:	mov    rdi,r15
  415603:	lea    rsi,[rip+0x2e51e]        # 443b28 <_IO_stdin_used@@Base+0x15b28>
  41560a:	lea    rdx,[rsp+0x60]
  41560f:	xor    eax,eax
  415611:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415616:	mov    rax,QWORD PTR [r15+0xd8]
  41561d:	mov    rdx,QWORD PTR [rax+0x110]
  415624:	mov    rdi,r15
  415627:	lea    rsi,[rip+0x2e50e]        # 443b3c <_IO_stdin_used@@Base+0x15b3c>
  41562e:	lea    rcx,[rsp+0x150]
  415636:	xor    eax,eax
  415638:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41563d:	mov    rax,QWORD PTR [r15+0xd8]
  415644:	mov    rdx,QWORD PTR [rax+0x110]
  41564b:	mov    rdi,r15
  41564e:	lea    rsi,[rip+0x2e504]        # 443b59 <_IO_stdin_used@@Base+0x15b59>
  415655:	xor    eax,eax
  415657:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41565c:	mov    eax,DWORD PTR [r15+0xf0]
  415663:	test   eax,eax
  415665:	je     415903 <__flatcc_fb_gen_c_json_parser@@Base+0x5643>
  41566b:	mov    ecx,eax
  41566d:	dec    ecx
  41566f:	mov    DWORD PTR [r15+0xf0],ecx
  415676:	je     415903 <__flatcc_fb_gen_c_json_parser@@Base+0x5643>
  41567c:	add    eax,0xfffffffe
  41567f:	mov    DWORD PTR [r15+0xf0],eax
  415686:	mov    rcx,QWORD PTR [r13+0x88]
  41568d:	mov    rdx,QWORD PTR [r13+0xa0]
  415694:	cmp    BYTE PTR [rsp+0x1a],0x0
  415699:	je     4156e0 <__flatcc_fb_gen_c_json_parser@@Base+0x5420>
  41569b:	mov    rdi,r15
  41569e:	lea    rsi,[rip+0x2e96f]        # 444014 <_IO_stdin_used@@Base+0x16014>
  4156a5:	lea    r8,[rsp+0x60]
  4156aa:	mov    r9,r8
  4156ad:	xor    eax,eax
  4156af:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4156b4:	cmp    BYTE PTR [rsp+0x4],0x0
  4156b9:	je     414f09 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  4156bf:	jmp    4154e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  4156c4:	mov    rdi,r15
  4156c7:	lea    rsi,[rip+0x2e8ee]        # 443fbc <_IO_stdin_used@@Base+0x15fbc>
  4156ce:	jmp    4156ea <__flatcc_fb_gen_c_json_parser@@Base+0x542a>
  4156d0:	cmp    BYTE PTR [rsp+0x4],0x0
  4156d5:	jne    4154e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  4156db:	jmp    415922 <__flatcc_fb_gen_c_json_parser@@Base+0x5662>
  4156e0:	mov    rdi,r15
  4156e3:	lea    rsi,[rip+0x2e9bb]        # 4440a5 <_IO_stdin_used@@Base+0x160a5>
  4156ea:	lea    r8,[rsp+0x60]
  4156ef:	xor    eax,eax
  4156f1:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4156f6:	cmp    BYTE PTR [rsp+0x4],0x0
  4156fb:	je     414f09 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  415701:	jmp    4154e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  415706:	cmp    ebx,0x2
  415709:	mov    r14d,DWORD PTR [rsp+0x24]
  41570e:	jne    41575b <__flatcc_fb_gen_c_json_parser@@Base+0x549b>
  415710:	lea    rsi,[rip+0x2eb27]        # 44423e <_IO_stdin_used@@Base+0x1623e>
  415717:	mov    rdi,r15
  41571a:	xor    eax,eax
  41571c:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415721:	lea    rsi,[rip+0x2eb2d]        # 444255 <_IO_stdin_used@@Base+0x16255>
  415728:	mov    rdi,r15
  41572b:	xor    eax,eax
  41572d:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415732:	mov    eax,DWORD PTR [r15+0xf0]
  415739:	test   eax,eax
  41573b:	je     4159d3 <__flatcc_fb_gen_c_json_parser@@Base+0x5713>
  415741:	dec    eax
  415743:	mov    DWORD PTR [r15+0xf0],eax
  41574a:	lea    rsi,[rip+0x2eb34]        # 444285 <_IO_stdin_used@@Base+0x16285>
  415751:	mov    rdi,r15
  415754:	xor    eax,eax
  415756:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41575b:	mov    eax,DWORD PTR [rsp+0x38]
  41575f:	or     eax,DWORD PTR [rsp+0x10]
  415763:	or     eax,ebx
  415765:	or     eax,r14d
  415768:	or     eax,DWORD PTR [rsp+0xc]
  41576c:	je     415797 <__flatcc_fb_gen_c_json_parser@@Base+0x54d7>
  41576e:	mov    rdx,QWORD PTR [r13+0x88]
  415775:	lea    rsi,[rip+0x2eb1c]        # 444298 <_IO_stdin_used@@Base+0x16298>
  41577c:	mov    rdi,r15
  41577f:	xor    eax,eax
  415781:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415786:	lea    rsi,[rip+0x2ea0d]        # 44419a <_IO_stdin_used@@Base+0x1619a>
  41578d:	mov    rdi,r15
  415790:	xor    eax,eax
  415792:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415797:	mov    eax,DWORD PTR [r15+0xf0]
  41579e:	test   eax,eax
  4157a0:	je     4159b4 <__flatcc_fb_gen_c_json_parser@@Base+0x56f4>
  4157a6:	dec    eax
  4157a8:	mov    DWORD PTR [r15+0xf0],eax
  4157af:	lea    rsi,[rip+0x2d805]        # 442fbb <_IO_stdin_used@@Base+0x14fbb>
  4157b6:	mov    rdi,r15
  4157b9:	xor    eax,eax
  4157bb:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4157c0:	inc    DWORD PTR [r15+0xf0]
  4157c7:	lea    rsp,[rbp-0x28]
  4157cb:	pop    rbx
  4157cc:	pop    r12
  4157ce:	pop    r13
  4157d0:	pop    r14
  4157d2:	pop    r15
  4157d4:	pop    rbp
  4157d5:	ret    
  4157d6:	lea    rdi,[rip+0x2d094]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4157dd:	lea    rsi,[rip+0x2d099]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4157e4:	lea    rcx,[rip+0x2e148]        # 443933 <_IO_stdin_used@@Base+0x15933>
  4157eb:	mov    edx,0x1ea
  4157f0:	call   406100 <__assert_fail@plt>
  4157f5:	lea    rdi,[rip+0x2d075]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4157fc:	lea    rsi,[rip+0x2d07a]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415803:	lea    rcx,[rip+0x2e129]        # 443933 <_IO_stdin_used@@Base+0x15933>
  41580a:	mov    edx,0x21b
  41580f:	call   406100 <__assert_fail@plt>
  415814:	lea    rdi,[rip+0x2d056]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41581b:	lea    rsi,[rip+0x2d05b]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415822:	lea    rcx,[rip+0x2e10a]        # 443933 <_IO_stdin_used@@Base+0x15933>
  415829:	mov    edx,0x22f
  41582e:	call   406100 <__assert_fail@plt>
  415833:	lea    rdi,[rip+0x2d037]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41583a:	lea    rsi,[rip+0x2d03c]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415841:	lea    rcx,[rip+0x2e0eb]        # 443933 <_IO_stdin_used@@Base+0x15933>
  415848:	mov    edx,0x287
  41584d:	call   406100 <__assert_fail@plt>
  415852:	mov    rax,QWORD PTR [rip+0x3c79f]        # 451ff8 <stderr@GLIBC_2.2.5>
  415859:	mov    rdi,QWORD PTR [rax]
  41585c:	lea    rsi,[rip+0x1a3c5]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  415863:	lea    rbx,[rip+0x20b70]        # 4363da <_IO_stdin_used@@Base+0x83da>
  41586a:	lea    r8,[rip+0x20bcc]        # 43643d <_IO_stdin_used@@Base+0x843d>
  415871:	mov    rdx,rbx
  415874:	mov    ecx,0x60
  415879:	xor    eax,eax
  41587b:	call   406180 <fprintf@plt>
  415880:	lea    rdi,[rip+0x2b308]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  415887:	lea    rcx,[rip+0x214df]        # 436d6d <_IO_stdin_used@@Base+0x8d6d>
  41588e:	mov    rsi,rbx
  415891:	mov    edx,0x60
  415896:	call   406100 <__assert_fail@plt>
  41589b:	mov    rax,QWORD PTR [rip+0x3c756]        # 451ff8 <stderr@GLIBC_2.2.5>
  4158a2:	mov    rdi,QWORD PTR [rax]
  4158a5:	lea    rsi,[rip+0x1a37c]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4158ac:	lea    rbx,[rip+0x2cfca]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4158b3:	lea    r8,[rip+0x2e518]        # 443dd2 <_IO_stdin_used@@Base+0x15dd2>
  4158ba:	mov    rdx,rbx
  4158bd:	mov    ecx,0x24e
  4158c2:	xor    eax,eax
  4158c4:	call   406180 <fprintf@plt>
  4158c9:	lea    rdi,[rip+0x2b2bf]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4158d0:	lea    rcx,[rip+0x2e05c]        # 443933 <_IO_stdin_used@@Base+0x15933>
  4158d7:	mov    rsi,rbx
  4158da:	mov    edx,0x24e
  4158df:	call   406100 <__assert_fail@plt>
  4158e4:	lea    rdi,[rip+0x2cf86]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4158eb:	lea    rsi,[rip+0x2cf8b]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4158f2:	lea    rcx,[rip+0x2e03a]        # 443933 <_IO_stdin_used@@Base+0x15933>
  4158f9:	mov    edx,0x25a
  4158fe:	call   406100 <__assert_fail@plt>
  415903:	lea    rdi,[rip+0x2cf67]        # 442871 <_IO_stdin_used@@Base+0x14871>
  41590a:	lea    rsi,[rip+0x2cf6c]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415911:	lea    rcx,[rip+0x2e01b]        # 443933 <_IO_stdin_used@@Base+0x15933>
  415918:	mov    edx,0x273
  41591d:	call   406100 <__assert_fail@plt>
  415922:	mov    rax,QWORD PTR [rip+0x3c6cf]        # 451ff8 <stderr@GLIBC_2.2.5>
  415929:	mov    rdi,QWORD PTR [rax]
  41592c:	lea    rsi,[rip+0x1a2f5]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  415933:	lea    rbx,[rip+0x2cf43]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  41593a:	lea    r8,[rip+0x2e7d3]        # 444114 <_IO_stdin_used@@Base+0x16114>
  415941:	mov    rdx,rbx
  415944:	mov    ecx,0x27c
  415949:	xor    eax,eax
  41594b:	call   406180 <fprintf@plt>
  415950:	lea    rdi,[rip+0x2b238]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  415957:	lea    rcx,[rip+0x2dfd5]        # 443933 <_IO_stdin_used@@Base+0x15933>
  41595e:	mov    rsi,rbx
  415961:	mov    edx,0x27c
  415966:	call   406100 <__assert_fail@plt>
  41596b:	mov    rax,QWORD PTR [rip+0x3c686]        # 451ff8 <stderr@GLIBC_2.2.5>
  415972:	mov    rdi,QWORD PTR [rax]
  415975:	lea    rsi,[rip+0x1a2ac]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41597c:	lea    rbx,[rip+0x2cefa]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415983:	lea    r8,[rip+0x2df6e]        # 4438f8 <_IO_stdin_used@@Base+0x158f8>
  41598a:	mov    rdx,rbx
  41598d:	mov    ecx,0x1d2
  415992:	xor    eax,eax
  415994:	call   406180 <fprintf@plt>
  415999:	lea    rdi,[rip+0x2b1ef]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4159a0:	lea    rcx,[rip+0x2df8c]        # 443933 <_IO_stdin_used@@Base+0x15933>
  4159a7:	mov    rsi,rbx
  4159aa:	mov    edx,0x1d2
  4159af:	call   406100 <__assert_fail@plt>
  4159b4:	lea    rdi,[rip+0x2ceb6]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4159bb:	lea    rsi,[rip+0x2cebb]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4159c2:	lea    rcx,[rip+0x2dedf]        # 4438a8 <_IO_stdin_used@@Base+0x158a8>
  4159c9:	mov    edx,0x2a3
  4159ce:	call   406100 <__assert_fail@plt>
  4159d3:	lea    rdi,[rip+0x2ce97]        # 442871 <_IO_stdin_used@@Base+0x14871>
  4159da:	lea    rsi,[rip+0x2ce9c]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  4159e1:	lea    rcx,[rip+0x2df4b]        # 443933 <_IO_stdin_used@@Base+0x15933>
  4159e8:	mov    edx,0x295
  4159ed:	call   406100 <__assert_fail@plt>
  4159f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159fc:	nop    DWORD PTR [rax+0x0]
  415a00:	lea    rsi,[rip+0x2dd97]        # 44379e <_IO_stdin_used@@Base+0x1579e>
  415a07:	xor    eax,eax
  415a09:	jmp    4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415a0e:	xchg   ax,ax
  415a10:	push   rbp
  415a11:	mov    rbp,rsp
  415a14:	push   r15
  415a16:	push   r14
  415a18:	push   rbx
  415a19:	and    rsp,0xffffffffffffffe0
  415a1d:	sub    rsp,0x100
  415a24:	mov    r14,rdx
  415a27:	mov    rbx,rdi
  415a2a:	lea    rsi,[rip+0x2ef40]        # 444971 <_IO_stdin_used@@Base+0x16971>
  415a31:	mov    edx,r8d
  415a34:	xor    eax,eax
  415a36:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415a3b:	lea    rsi,[rip+0x2d8a2]        # 4432e4 <_IO_stdin_used@@Base+0x152e4>
  415a42:	mov    rdi,rbx
  415a45:	xor    eax,eax
  415a47:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415a4c:	inc    DWORD PTR [rbx+0xf0]
  415a52:	mov    eax,DWORD PTR [r14+0x10]
  415a56:	add    eax,0xfffffffd
  415a59:	cmp    ax,0x2
  415a5d:	jae    415b02 <__flatcc_fb_gen_c_json_parser@@Base+0x5842>
  415a63:	vxorps xmm0,xmm0,xmm0
  415a67:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415a70:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415a79:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415a82:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415a88:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415a8e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415a94:	vmovaps YMMWORD PTR [rsp],ymm0
  415a99:	mov    QWORD PTR [rsp+0xe0],0x0
  415aa5:	mov    rdi,QWORD PTR [r14+0x18]
  415aa9:	mov    r15,rsp
  415aac:	mov    rsi,r14
  415aaf:	mov    rdx,r15
  415ab2:	vzeroupper 
  415ab5:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  415aba:	lea    rsi,[rip+0x2ef8d]        # 444a4e <_IO_stdin_used@@Base+0x16a4e>
  415ac1:	mov    rdi,rbx
  415ac4:	mov    rdx,r15
  415ac7:	xor    eax,eax
  415ac9:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415ace:	mov    eax,DWORD PTR [rbx+0xf0]
  415ad4:	test   eax,eax
  415ad6:	je     415b21 <__flatcc_fb_gen_c_json_parser@@Base+0x5861>
  415ad8:	dec    eax
  415ada:	mov    DWORD PTR [rbx+0xf0],eax
  415ae0:	lea    rsi,[rip+0x2d4d4]        # 442fbb <_IO_stdin_used@@Base+0x14fbb>
  415ae7:	mov    rdi,rbx
  415aea:	xor    eax,eax
  415aec:	call   4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415af1:	inc    DWORD PTR [rbx+0xf0]
  415af7:	lea    rsp,[rbp-0x18]
  415afb:	pop    rbx
  415afc:	pop    r14
  415afe:	pop    r15
  415b00:	pop    rbp
  415b01:	ret    
  415b02:	lea    rdi,[rip+0x2059f]        # 4360a8 <_IO_stdin_used@@Base+0x80a8>
  415b09:	lea    rsi,[rip+0x2cd6d]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415b10:	lea    rcx,[rip+0x2eee8]        # 4449ff <_IO_stdin_used@@Base+0x169ff>
  415b17:	mov    edx,0x2d9
  415b1c:	call   406100 <__assert_fail@plt>
  415b21:	lea    rdi,[rip+0x2cd49]        # 442871 <_IO_stdin_used@@Base+0x14871>
  415b28:	lea    rsi,[rip+0x2cd4e]        # 44287d <_IO_stdin_used@@Base+0x1487d>
  415b2f:	lea    rcx,[rip+0x2ee7d]        # 4449b3 <_IO_stdin_used@@Base+0x169b3>
  415b36:	mov    edx,0x2e6
  415b3b:	call   406100 <__assert_fail@plt>
  415b40:	lea    rsi,[rip+0x2d8be]        # 443405 <_IO_stdin_used@@Base+0x15405>
  415b47:	xor    eax,eax
  415b49:	jmp    4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  415b4e:	xchg   ax,ax
  415b50:	push   rbx
  415b51:	movzx  eax,WORD PTR [rsi+0x10]
  415b55:	add    eax,0xfffffffd
  415b58:	cmp    eax,0x1
  415b5b:	ja     415b79 <__flatcc_fb_gen_c_json_parser@@Base+0x58b9>
  415b5d:	mov    rbx,rdi
  415b60:	mov    edi,0x128
  415b65:	add    rdi,QWORD PTR [rbx+0x8]
  415b69:	mov    rsi,QWORD PTR [rsi+0x20]
  415b6d:	call   419b30 <ptr_set_find_item@@Base>
  415b72:	test   rax,rax
  415b75:	je     415b79 <__flatcc_fb_gen_c_json_parser@@Base+0x58b9>
  415b77:	inc    DWORD PTR [rbx]
  415b79:	pop    rbx
  415b7a:	ret    
  415b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  415b80:	push   r14
  415b82:	push   rbx
  415b83:	push   rax
  415b84:	movzx  eax,WORD PTR [rsi+0x10]
  415b88:	add    eax,0xfffffffd
  415b8b:	cmp    eax,0x1
  415b8e:	ja     415bcd <__flatcc_fb_gen_c_json_parser@@Base+0x590d>
  415b90:	mov    rbx,rsi
  415b93:	mov    r14,rdi
  415b96:	mov    edi,0x128
  415b9b:	add    rdi,QWORD PTR [r14+0x8]
  415b9f:	mov    rsi,QWORD PTR [rsi+0x20]
  415ba3:	call   419b30 <ptr_set_find_item@@Base>
  415ba8:	test   rax,rax
  415bab:	je     415bcd <__flatcc_fb_gen_c_json_parser@@Base+0x590d>
  415bad:	mov    rax,QWORD PTR [rbx+0x8]
  415bb1:	mov    rcx,QWORD PTR [rax]
  415bb4:	mov    rdx,QWORD PTR [r14+0x10]
  415bb8:	mov    QWORD PTR [rdx],rcx
  415bbb:	mov    eax,DWORD PTR [rax+0x8]
  415bbe:	mov    DWORD PTR [rdx+0x8],eax
  415bc1:	mov    QWORD PTR [rdx+0x10],rbx
  415bc5:	add    rdx,0x20
  415bc9:	mov    QWORD PTR [r14+0x10],rdx
  415bcd:	add    rsp,0x8
  415bd1:	pop    rbx
  415bd2:	pop    r14
  415bd4:	ret    
  415bd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bdf:	nop
  415be0:	push   rbx
  415be1:	mov    rbx,rdi
  415be4:	mov    rdi,QWORD PTR [rdi+0x18]
  415be8:	test   rdi,rdi
  415beb:	je     415bf2 <__flatcc_fb_gen_c_json_parser@@Base+0x5932>
  415bed:	call   406040 <free@plt>
  415bf2:	mov    rdi,QWORD PTR [rbx+0x20]
  415bf6:	test   rdi,rdi
  415bf9:	je     415c00 <__flatcc_fb_gen_c_json_parser@@Base+0x5940>
  415bfb:	call   406040 <free@plt>
  415c00:	mov    rdi,QWORD PTR [rbx+0x28]
  415c04:	test   rdi,rdi
  415c07:	je     415c0e <__flatcc_fb_gen_c_json_parser@@Base+0x594e>
  415c09:	call   406040 <free@plt>
  415c0e:	vxorps xmm0,xmm0,xmm0
  415c12:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  415c17:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  415c1c:	vmovups YMMWORD PTR [rbx],ymm0
  415c20:	pop    rbx
  415c21:	vzeroupper 
  415c24:	ret    
  415c25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c2f:	nop
  415c30:	mov    rdx,rdi
  415c33:	lea    rdi,[rsi+0x8]
  415c37:	lea    rsi,[rip+0x32]        # 415c70 <__flatcc_fb_gen_c_json_parser@@Base+0x59b0>
  415c3e:	jmp    41a400 <fb_symbol_table_visit@@Base>
  415c43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c4d:	nop    DWORD PTR [rax]
  415c50:	mov    rdx,rdi
  415c53:	lea    rdi,[rsi+0x8]
  415c57:	lea    rsi,[rip+0xb2]        # 415d10 <__flatcc_fb_gen_c_json_parser@@Base+0x5a50>
  415c5e:	jmp    41a400 <fb_symbol_table_visit@@Base>
  415c63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c6d:	nop    DWORD PTR [rax]
  415c70:	push   r14
  415c72:	push   rbx
  415c73:	push   rax
  415c74:	cmp    WORD PTR [rsi+0x10],0x4
  415c79:	ja     415d05 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  415c7f:	mov    rbx,rsi
  415c82:	mov    r14,rdi
  415c85:	mov    edi,0x128
  415c8a:	add    rdi,QWORD PTR [r14+0x48]
  415c8e:	mov    rsi,QWORD PTR [rsi+0x20]
  415c92:	call   419b30 <ptr_set_find_item@@Base>
  415c97:	test   rax,rax
  415c9a:	je     415d05 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  415c9c:	mov    eax,0x1
  415ca1:	cmp    DWORD PTR [r14],0x0
  415ca5:	je     415cdd <__flatcc_fb_gen_c_json_parser@@Base+0x5a1d>
  415ca7:	mov    rcx,QWORD PTR [rbx+0x18]
  415cab:	mov    rcx,QWORD PTR [rcx]
  415cae:	test   rcx,rcx
  415cb1:	je     415cdd <__flatcc_fb_gen_c_json_parser@@Base+0x5a1d>
  415cb3:	xor    eax,eax
  415cb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415cbf:	nop
  415cc0:	mov    rdx,QWORD PTR [rcx+0x8]
  415cc4:	mov    rsi,QWORD PTR [rcx]
  415cc7:	mov    rcx,QWORD PTR [rdx+0x8]
  415ccb:	add    rax,rcx
  415cce:	add    rax,0x1
  415cd2:	mov    rcx,rsi
  415cd5:	test   rsi,rsi
  415cd8:	jne    415cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x5a00>
  415cda:	inc    rax
  415cdd:	mov    rcx,QWORD PTR [rbx+0x8]
  415ce1:	add    rax,QWORD PTR [rcx+0x8]
  415ce5:	add    QWORD PTR [r14+0x10],rax
  415ce9:	mov    eax,DWORD PTR [rbx+0x10]
  415cec:	lea    ecx,[rax-0x3]
  415cef:	cmp    cx,0x2
  415cf3:	jb     415d01 <__flatcc_fb_gen_c_json_parser@@Base+0x5a41>
  415cf5:	cmp    ax,0x1
  415cf9:	ja     415d05 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  415cfb:	inc    DWORD PTR [r14+0x4]
  415cff:	jmp    415d05 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  415d01:	inc    DWORD PTR [r14+0x8]
  415d05:	add    rsp,0x8
  415d09:	pop    rbx
  415d0a:	pop    r14
  415d0c:	ret    
  415d0d:	nop    DWORD PTR [rax]
  415d10:	push   rbp
  415d11:	push   r15
  415d13:	push   r14
  415d15:	push   r13
  415d17:	push   r12
  415d19:	push   rbx
  415d1a:	push   rax
  415d1b:	cmp    WORD PTR [rsi+0x10],0x4
  415d20:	ja     415e09 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415d26:	mov    r15,rsi
  415d29:	mov    r14,rdi
  415d2c:	mov    edi,0x128
  415d31:	add    rdi,QWORD PTR [r14+0x48]
  415d35:	mov    rsi,QWORD PTR [rsi+0x20]
  415d39:	call   419b30 <ptr_set_find_item@@Base>
  415d3e:	test   rax,rax
  415d41:	je     415e09 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415d47:	mov    r12,QWORD PTR [r14+0x40]
  415d4b:	cmp    DWORD PTR [r14],0x0
  415d4f:	mov    QWORD PTR [rsp],r12
  415d53:	je     415d9f <__flatcc_fb_gen_c_json_parser@@Base+0x5adf>
  415d55:	mov    rax,QWORD PTR [r15+0x18]
  415d59:	mov    rbp,QWORD PTR [rax]
  415d5c:	mov    r12,QWORD PTR [rsp]
  415d60:	test   rbp,rbp
  415d63:	je     415d9f <__flatcc_fb_gen_c_json_parser@@Base+0x5adf>
  415d65:	mov    rbx,QWORD PTR [rsp]
  415d69:	nop    DWORD PTR [rax+0x0]
  415d70:	mov    rax,QWORD PTR [rbp+0x8]
  415d74:	movsxd r13,DWORD PTR [rax+0x8]
  415d78:	mov    rsi,QWORD PTR [rax]
  415d7b:	mov    rdi,rbx
  415d7e:	mov    rdx,r13
  415d81:	call   4061a0 <memcpy@plt>
  415d86:	lea    r12,[rbx+r13*1]
  415d8a:	add    r12,0x1
  415d8e:	mov    BYTE PTR [rbx+r13*1],0x2e
  415d93:	mov    rbp,QWORD PTR [rbp+0x0]
  415d97:	mov    rbx,r12
  415d9a:	test   rbp,rbp
  415d9d:	jne    415d70 <__flatcc_fb_gen_c_json_parser@@Base+0x5ab0>
  415d9f:	mov    rax,QWORD PTR [r15+0x8]
  415da3:	movsxd rbx,DWORD PTR [rax+0x8]
  415da7:	mov    rsi,QWORD PTR [rax]
  415daa:	mov    rdi,r12
  415dad:	mov    rdx,rbx
  415db0:	call   4061a0 <memcpy@plt>
  415db5:	lea    rax,[r12+rbx*1]
  415db9:	add    rax,0x1
  415dbd:	mov    BYTE PTR [r12+rbx*1],0x0
  415dc2:	mov    QWORD PTR [r14+0x40],rax
  415dc6:	mov    eax,DWORD PTR [r15+0x10]
  415dca:	lea    ecx,[rax-0x3]
  415dcd:	cmp    cx,0x2
  415dd1:	jb     415df2 <__flatcc_fb_gen_c_json_parser@@Base+0x5b32>
  415dd3:	cmp    ax,0x1
  415dd7:	ja     415e09 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415dd9:	mov    rax,QWORD PTR [r14+0x30]
  415ddd:	mov    QWORD PTR [rax],r15
  415de0:	mov    rcx,QWORD PTR [rsp]
  415de4:	mov    QWORD PTR [rax+0x8],rcx
  415de8:	add    rax,0x10
  415dec:	mov    QWORD PTR [r14+0x30],rax
  415df0:	jmp    415e09 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415df2:	mov    rax,QWORD PTR [r14+0x38]
  415df6:	mov    QWORD PTR [rax],r15
  415df9:	mov    rcx,QWORD PTR [rsp]
  415dfd:	mov    QWORD PTR [rax+0x8],rcx
  415e01:	add    rax,0x10
  415e05:	mov    QWORD PTR [r14+0x38],rax
  415e09:	add    rsp,0x8
  415e0d:	pop    rbx
  415e0e:	pop    r12
  415e10:	pop    r13
  415e12:	pop    r14
  415e14:	pop    r15
  415e16:	pop    rbp
  415e17:	ret    
  415e18:	nop    DWORD PTR [rax+rax*1+0x0]
  415e20:	mov    rdi,QWORD PTR [rdi+0x8]
  415e24:	mov    rsi,QWORD PTR [rsi+0x8]
  415e28:	jmp    406160 <strcmp@plt>
  415e2d:	nop    DWORD PTR [rax]

0000000000415e30 <__flatcc_fb_gen_c_json_printer@@Base>:
  415e30:	push   rbp
  415e31:	mov    rbp,rsp
  415e34:	push   r15
  415e36:	push   r14
  415e38:	push   r13
  415e3a:	push   r12
  415e3c:	push   rbx
  415e3d:	and    rsp,0xffffffffffffffe0
  415e41:	sub    rsp,0x220
  415e48:	mov    rbx,rdi
  415e4b:	lea    r15,[rdi+0xd0]
  415e52:	mov    rdi,QWORD PTR [rdi+0xd0]
  415e59:	mov    rax,QWORD PTR [rbx+0xd8]
  415e60:	mov    rcx,QWORD PTR [rax+0x118]
  415e67:	lea    rsi,[rip+0x2efb2]        # 444e20 <_IO_stdin_used@@Base+0x16e20>
  415e6e:	mov    rdx,rcx
  415e71:	xor    eax,eax
  415e73:	call   406180 <fprintf@plt>
  415e78:	mov    rcx,QWORD PTR [rbx+0xd0]
  415e7f:	lea    rdi,[rip+0x19c79]        # 42faff <_IO_stdin_used@@Base+0x1aff>
  415e86:	mov    esi,0x51
  415e8b:	mov    edx,0x1
  415e90:	call   406230 <fwrite@plt>
  415e95:	mov    rcx,QWORD PTR [rbx+0xd0]
  415e9c:	lea    rdi,[rip+0x2efb2]        # 444e55 <_IO_stdin_used@@Base+0x16e55>
  415ea3:	mov    esi,0x28
  415ea8:	mov    edx,0x1
  415ead:	call   406230 <fwrite@plt>
  415eb2:	lea    rsi,[rip+0x19bb5]        # 42fa6e <_IO_stdin_used@@Base+0x1a6e>
  415eb9:	lea    rdx,[rip+0x2efbe]        # 444e7e <_IO_stdin_used@@Base+0x16e7e>
  415ec0:	mov    rdi,rbx
  415ec3:	call   407ec0 <__flatcc_fb_gen_c_includes@@Base>
  415ec8:	mov    QWORD PTR [rsp+0x18],rbx
  415ecd:	mov    rax,QWORD PTR [rbx+0xe0]
  415ed4:	cmp    DWORD PTR [rax+0xac],0x0
  415edb:	je     415ef6 <__flatcc_fb_gen_c_json_printer@@Base+0xc6>
  415edd:	mov    rcx,QWORD PTR [r15]
  415ee0:	lea    rdi,[rip+0x19e0e]        # 42fcf5 <_IO_stdin_used@@Base+0x1cf5>
  415ee7:	mov    esi,0x24
  415eec:	mov    edx,0x1
  415ef1:	call   406230 <fwrite@plt>
  415ef6:	mov    rbx,QWORD PTR [rsp+0x18]
  415efb:	mov    rsi,QWORD PTR [rbx+0xd0]
  415f02:	mov    edi,0xa
  415f07:	call   406120 <fputc@plt>
  415f0c:	mov    rax,QWORD PTR [rbx+0xd8]
  415f13:	mov    rcx,QWORD PTR [rax+0x58]
  415f17:	vxorps xmm0,xmm0,xmm0
  415f1b:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415f24:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415f2d:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415f36:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415f3f:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415f45:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415f4b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415f51:	mov    QWORD PTR [rsp+0x100],0x0
  415f5d:	test   rcx,rcx
  415f60:	je     415fb8 <__flatcc_fb_gen_c_json_printer@@Base+0x188>
  415f62:	cmp    WORD PTR [rcx+0x10],0x1
  415f67:	ja     415fb8 <__flatcc_fb_gen_c_json_printer@@Base+0x188>
  415f69:	mov    rbx,QWORD PTR [rsp+0x18]
  415f6e:	mov    rcx,QWORD PTR [rbx+0xd0]
  415f75:	lea    rdi,[rip+0x2ef12]        # 444e8e <_IO_stdin_used@@Base+0x16e8e>
  415f7c:	mov    esi,0x1e2
  415f81:	mov    edx,0x1
  415f86:	vzeroupper 
  415f89:	call   406230 <fwrite@plt>
  415f8e:	mov    rdi,QWORD PTR [rbx+0xd0]
  415f95:	mov    rax,QWORD PTR [rbx+0xd8]
  415f9c:	mov    rdx,QWORD PTR [rax+0x110]
  415fa3:	lea    rsi,[rip+0x2f0c7]        # 445071 <_IO_stdin_used@@Base+0x17071>
  415faa:	xor    eax,eax
  415fac:	call   406180 <fprintf@plt>
  415fb1:	mov    rax,QWORD PTR [rbx+0xd8]
  415fb8:	mov    rbx,QWORD PTR [rax+0x40]
  415fbc:	test   rbx,rbx
  415fbf:	je     41606e <__flatcc_fb_gen_c_json_printer@@Base+0x23e>
  415fc5:	lea    r14,[rsp+0x20]
  415fca:	lea    r12,[rip+0x2f228]        # 4451f9 <_IO_stdin_used@@Base+0x171f9>
  415fd1:	lea    r13,[rip+0x2f0f1]        # 4450c9 <_IO_stdin_used@@Base+0x170c9>
  415fd8:	jmp    41600a <__flatcc_fb_gen_c_json_printer@@Base+0x1da>
  415fda:	nop    WORD PTR [rax+rax*1+0x0]
  415fe0:	mov    rdi,QWORD PTR [rbx+0x18]
  415fe4:	mov    rsi,rbx
  415fe7:	mov    rdx,r14
  415fea:	vzeroupper 
  415fed:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  415ff2:	mov    rdi,QWORD PTR [r15]
  415ff5:	mov    rsi,r12
  415ff8:	mov    rdx,r14
  415ffb:	xor    eax,eax
  415ffd:	call   406180 <fprintf@plt>
  416002:	mov    rbx,QWORD PTR [rbx]
  416005:	test   rbx,rbx
  416008:	je     41606e <__flatcc_fb_gen_c_json_printer@@Base+0x23e>
  41600a:	movzx  eax,WORD PTR [rbx+0x10]
  41600e:	test   ax,ax
  416011:	je     416050 <__flatcc_fb_gen_c_json_printer@@Base+0x220>
  416013:	cmp    ax,0x1
  416017:	je     415fe0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0>
  416019:	cmp    ax,0x4
  41601d:	jne    416002 <__flatcc_fb_gen_c_json_printer@@Base+0x1d2>
  41601f:	mov    rdi,QWORD PTR [rbx+0x18]
  416023:	mov    rsi,rbx
  416026:	mov    rdx,r14
  416029:	vzeroupper 
  41602c:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416031:	mov    rdi,QWORD PTR [r15]
  416034:	mov    rsi,r13
  416037:	mov    rdx,r14
  41603a:	mov    rcx,r14
  41603d:	xor    eax,eax
  41603f:	call   406180 <fprintf@plt>
  416044:	jmp    416002 <__flatcc_fb_gen_c_json_printer@@Base+0x1d2>
  416046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416050:	mov    rdi,QWORD PTR [rbx+0x18]
  416054:	mov    rsi,rbx
  416057:	mov    rdx,r14
  41605a:	vzeroupper 
  41605d:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416062:	mov    rdi,QWORD PTR [r15]
  416065:	lea    rsi,[rip+0x2f123]        # 44518f <_IO_stdin_used@@Base+0x1718f>
  41606c:	jmp    415ff8 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
  41606e:	mov    rbx,QWORD PTR [rsp+0x18]
  416073:	mov    rsi,QWORD PTR [rbx+0xd0]
  41607a:	mov    edi,0xa
  41607f:	vzeroupper 
  416082:	call   406120 <fputc@plt>
  416087:	mov    rax,QWORD PTR [rbx+0xd8]
  41608e:	mov    r13,QWORD PTR [rax+0x40]
  416092:	test   r13,r13
  416095:	je     4170c7 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  41609b:	lea    r14,[rsp+0x20]
  4160a0:	lea    r12,[rip+0x3bc01]        # 451ca8 <fb_value_set_deleted@@Base+0x6a48>
  4160a7:	mov    QWORD PTR [rsp+0x118],r15
  4160af:	cmp    WORD PTR [r13+0x10],0x3
  4160b5:	jne    4160fe <__flatcc_fb_gen_c_json_printer@@Base+0x2ce>
  4160b7:	jmp    416113 <__flatcc_fb_gen_c_json_printer@@Base+0x2e3>
  4160b9:	nop    DWORD PTR [rax+0x0]
  4160c0:	mov    rcx,QWORD PTR [r15]
  4160c3:	mov    esi,0x3b
  4160c8:	mov    edx,0x1
  4160cd:	lea    rdi,[rip+0x2f27b]        # 44534f <_IO_stdin_used@@Base+0x1734f>
  4160d4:	call   406230 <fwrite@plt>
  4160d9:	lea    r14,[rsp+0x20]
  4160de:	lea    r12,[rip+0x3bbc3]        # 451ca8 <fb_value_set_deleted@@Base+0x6a48>
  4160e5:	mov    rcx,QWORD PTR [r15]
  4160e8:	mov    esi,0x3
  4160ed:	mov    edx,0x1
  4160f2:	lea    rdi,[rip+0x30276]        # 44636f <_IO_stdin_used@@Base+0x1836f>
  4160f9:	call   406230 <fwrite@plt>
  4160fe:	mov    r13,QWORD PTR [r13+0x0]
  416102:	test   r13,r13
  416105:	je     41646c <__flatcc_fb_gen_c_json_printer@@Base+0x63c>
  41610b:	cmp    WORD PTR [r13+0x10],0x3
  416111:	jne    4160fe <__flatcc_fb_gen_c_json_printer@@Base+0x2ce>
  416113:	vxorps xmm0,xmm0,xmm0
  416117:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  416120:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416129:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  416132:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41613b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416141:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416147:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41614d:	mov    QWORD PTR [rsp+0x100],0x0
  416159:	mov    rdi,QWORD PTR [r13+0x18]
  41615d:	mov    rsi,r13
  416160:	mov    rdx,r14
  416163:	vzeroupper 
  416166:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  41616b:	mov    eax,DWORD PTR [r13+0x48]
  41616f:	lea    ecx,[rax-0x1]
  416172:	cmp    ecx,0xb
  416175:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  41617b:	movsxd rcx,ecx
  41617e:	lea    rdx,[rip+0x3bbbb]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416185:	mov    rdi,QWORD PTR [rdx+rcx*8]
  416189:	mov    r8,QWORD PTR [r12+rcx*8]
  41618d:	cmp    eax,0x5
  416190:	lea    rcx,[rip+0x19bac]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  416197:	cmove  rcx,QWORD PTR [rsp+0x18]
  41619d:	test   BYTE PTR [r13+0xa4],0x20
  4161a5:	mov    QWORD PTR [rsp+0x8],rdi
  4161aa:	jne    4162a0 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
  4161b0:	mov    rdi,QWORD PTR [r15]
  4161b3:	lea    rsi,[rip+0x2f096]        # 445250 <_IO_stdin_used@@Base+0x17250>
  4161ba:	mov    rdx,r14
  4161bd:	xor    eax,eax
  4161bf:	call   406180 <fprintf@plt>
  4161c4:	mov    rcx,QWORD PTR [r15]
  4161c7:	mov    esi,0x12
  4161cc:	mov    edx,0x1
  4161d1:	lea    rdi,[rip+0x2f2e8]        # 4454c0 <_IO_stdin_used@@Base+0x174c0>
  4161d8:	call   406230 <fwrite@plt>
  4161dd:	mov    rbx,QWORD PTR [r13+0x28]
  4161e1:	test   rbx,rbx
  4161e4:	jne    41621b <__flatcc_fb_gen_c_json_printer@@Base+0x3eb>
  4161e6:	jmp    41627b <__flatcc_fb_gen_c_json_printer@@Base+0x44b>
  4161eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4161f0:	mov    rdi,QWORD PTR [r15]
  4161f3:	movzx  edx,BYTE PTR [rbx+0x48]
  4161f7:	mov    rax,QWORD PTR [rbx+0x8]
  4161fb:	mov    r8,QWORD PTR [rax]
  4161fe:	mov    rcx,QWORD PTR [rax+0x8]
  416202:	lea    rsi,[rip+0x2f34e]        # 445557 <_IO_stdin_used@@Base+0x17557>
  416209:	mov    r9,rcx
  41620c:	xor    eax,eax
  41620e:	call   406180 <fprintf@plt>
  416213:	mov    rbx,QWORD PTR [rbx]
  416216:	test   rbx,rbx
  416219:	je     41627b <__flatcc_fb_gen_c_json_printer@@Base+0x44b>
  41621b:	movzx  eax,WORD PTR [rbx+0x58]
  41621f:	cmp    ax,0x4
  416223:	je     416250 <__flatcc_fb_gen_c_json_printer@@Base+0x420>
  416225:	cmp    ax,0x6
  416229:	je     4161f0 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
  41622b:	cmp    ax,0x5
  41622f:	jne    41728a <__flatcc_fb_gen_c_json_printer@@Base+0x145a>
  416235:	mov    rdi,QWORD PTR [r15]
  416238:	mov    rax,QWORD PTR [rbx+0x8]
  41623c:	mov    rdx,QWORD PTR [rbx+0x48]
  416240:	mov    r8,QWORD PTR [rax]
  416243:	mov    rcx,QWORD PTR [rax+0x8]
  416247:	lea    rsi,[rip+0x2f285]        # 4454d3 <_IO_stdin_used@@Base+0x174d3>
  41624e:	jmp    416269 <__flatcc_fb_gen_c_json_printer@@Base+0x439>
  416250:	mov    rdi,QWORD PTR [r15]
  416253:	mov    rax,QWORD PTR [rbx+0x8]
  416257:	mov    rdx,QWORD PTR [rbx+0x48]
  41625b:	mov    r8,QWORD PTR [rax]
  41625e:	mov    rcx,QWORD PTR [rax+0x8]
  416262:	lea    rsi,[rip+0x2f2ac]        # 445515 <_IO_stdin_used@@Base+0x17515>
  416269:	mov    r9,rcx
  41626c:	xor    eax,eax
  41626e:	call   406180 <fprintf@plt>
  416273:	mov    rbx,QWORD PTR [rbx]
  416276:	test   rbx,rbx
  416279:	jne    41621b <__flatcc_fb_gen_c_json_printer@@Base+0x3eb>
  41627b:	mov    rdi,QWORD PTR [r15]
  41627e:	lea    rsi,[rip+0x2f313]        # 445598 <_IO_stdin_used@@Base+0x17598>
  416285:	mov    rdx,QWORD PTR [rsp+0x8]
  41628a:	xor    eax,eax
  41628c:	call   406180 <fprintf@plt>
  416291:	jmp    4160e5 <__flatcc_fb_gen_c_json_printer@@Base+0x2b5>
  416296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162a0:	mov    rax,QWORD PTR [r13+0xb8]
  4162a7:	lea    rdx,[rax-0x1]
  4162ab:	mov    r14,0xffffffffffffffff
  4162b2:	lea    r12,[rip+0x2ef93]        # 44524c <_IO_stdin_used@@Base+0x1724c>
  4162b9:	lea    rbx,[rip+0x200e3]        # 4363a3 <_IO_stdin_used@@Base+0x83a3>
  4162c0:	cmp    rdx,0x3
  4162c4:	ja     4162ea <__flatcc_fb_gen_c_json_printer@@Base+0x4ba>
  4162c6:	lea    rdx,[rip+0x301e3]        # 4464b0 <_IO_stdin_used@@Base+0x184b0>
  4162cd:	mov    r14,QWORD PTR [rdx+rax*8-0x8]
  4162d2:	lea    rdx,[rip+0x3ba27]        # 451d00 <fb_value_set_deleted@@Base+0x6aa0>
  4162d9:	mov    r12,QWORD PTR [rdx+rax*8-0x8]
  4162de:	lea    rdx,[rip+0x3ba3b]        # 451d20 <fb_value_set_deleted@@Base+0x6ac0>
  4162e5:	mov    rbx,QWORD PTR [rdx+rax*8-0x8]
  4162ea:	mov    rax,QWORD PTR [r13+0x28]
  4162ee:	test   rax,rax
  4162f1:	jne    416311 <__flatcc_fb_gen_c_json_printer@@Base+0x4e1>
  4162f3:	jmp    416340 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
  4162f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162ff:	nop
  416300:	mov    rdx,QWORD PTR [rax+0x48]
  416304:	andn   r14,rdx,r14
  416309:	mov    rax,QWORD PTR [rax]
  41630c:	test   rax,rax
  41630f:	je     416340 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
  416311:	movzx  edx,WORD PTR [rax+0x58]
  416315:	cmp    dx,0x4
  416319:	je     416300 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
  41631b:	cmp    dx,0x6
  41631f:	je     416330 <__flatcc_fb_gen_c_json_printer@@Base+0x500>
  416321:	cmp    dx,0x5
  416325:	je     416300 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
  416327:	jmp    416309 <__flatcc_fb_gen_c_json_printer@@Base+0x4d9>
  416329:	nop    DWORD PTR [rax+0x0]
  416330:	movzx  edx,BYTE PTR [rax+0x48]
  416334:	jmp    416304 <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
  416336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416340:	mov    rdi,QWORD PTR [r15]
  416343:	lea    rsi,[rip+0x2ef06]        # 445250 <_IO_stdin_used@@Base+0x17250>
  41634a:	lea    rdx,[rsp+0x20]
  41634f:	mov    r15,r8
  416352:	xor    eax,eax
  416354:	call   406180 <fprintf@plt>
  416359:	mov    rdi,rbx
  41635c:	mov    rsi,r15
  41635f:	mov    r15,QWORD PTR [rsp+0x118]
  416367:	call   406160 <strcmp@plt>
  41636c:	mov    rdi,QWORD PTR [r15]
  41636f:	test   eax,eax
  416371:	je     416389 <__flatcc_fb_gen_c_json_printer@@Base+0x559>
  416373:	lea    rsi,[rip+0x2ef1c]        # 445296 <_IO_stdin_used@@Base+0x17296>
  41637a:	mov    rdx,rbx
  41637d:	mov    rcx,rbx
  416380:	xor    eax,eax
  416382:	call   406180 <fprintf@plt>
  416387:	jmp    41639a <__flatcc_fb_gen_c_json_printer@@Base+0x56a>
  416389:	lea    rsi,[rip+0x2ef19]        # 4452a9 <_IO_stdin_used@@Base+0x172a9>
  416390:	mov    rdx,rbx
  416393:	xor    eax,eax
  416395:	call   406180 <fprintf@plt>
  41639a:	mov    rcx,QWORD PTR [r15]
  41639d:	mov    esi,0x36
  4163a2:	mov    edx,0x1
  4163a7:	lea    rdi,[rip+0x2ef0a]        # 4452b8 <_IO_stdin_used@@Base+0x172b8>
  4163ae:	call   406230 <fwrite@plt>
  4163b3:	mov    rsi,QWORD PTR [r15]
  4163b6:	mov    edi,0xa
  4163bb:	call   406120 <fputc@plt>
  4163c0:	test   r14,r14
  4163c3:	je     4163de <__flatcc_fb_gen_c_json_printer@@Base+0x5ae>
  4163c5:	mov    rdi,QWORD PTR [r15]
  4163c8:	lea    rsi,[rip+0x2ef20]        # 4452ef <_IO_stdin_used@@Base+0x172ef>
  4163cf:	mov    rdx,r14
  4163d2:	mov    rcx,QWORD PTR [rsp+0x8]
  4163d7:	xor    eax,eax
  4163d9:	call   406180 <fprintf@plt>
  4163de:	mov    rcx,QWORD PTR [r15]
  4163e1:	mov    esi,0x3b
  4163e6:	mov    edx,0x1
  4163eb:	lea    rdi,[rip+0x2ef5d]        # 44534f <_IO_stdin_used@@Base+0x1734f>
  4163f2:	call   406230 <fwrite@plt>
  4163f7:	mov    rbx,QWORD PTR [r13+0x28]
  4163fb:	test   rbx,rbx
  4163fe:	lea    r14,[rip+0x2ef86]        # 44538b <_IO_stdin_used@@Base+0x1738b>
  416405:	jne    416445 <__flatcc_fb_gen_c_json_printer@@Base+0x615>
  416407:	jmp    4160c0 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  41640c:	nop    DWORD PTR [rax+0x0]
  416410:	mov    rdi,QWORD PTR [r15]
  416413:	movzx  edx,BYTE PTR [rbx+0x48]
  416417:	mov    rax,QWORD PTR [rbx+0x8]
  41641b:	mov    r9,QWORD PTR [rax]
  41641e:	mov    r8,QWORD PTR [rax+0x8]
  416422:	sub    rsp,0x8
  416426:	mov    rsi,r14
  416429:	mov    rcx,r12
  41642c:	xor    eax,eax
  41642e:	push   r8
  416430:	call   406180 <fprintf@plt>
  416435:	add    rsp,0x10
  416439:	mov    rbx,QWORD PTR [rbx]
  41643c:	test   rbx,rbx
  41643f:	je     4160c0 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  416445:	movzx  eax,WORD PTR [rbx+0x58]
  416449:	cmp    ax,0x4
  41644d:	je     41645f <__flatcc_fb_gen_c_json_printer@@Base+0x62f>
  41644f:	cmp    ax,0x6
  416453:	je     416410 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  416455:	cmp    ax,0x5
  416459:	jne    4172d3 <__flatcc_fb_gen_c_json_printer@@Base+0x14a3>
  41645f:	mov    rdi,QWORD PTR [r15]
  416462:	mov    rax,QWORD PTR [rbx+0x8]
  416466:	mov    rdx,QWORD PTR [rbx+0x48]
  41646a:	jmp    41641b <__flatcc_fb_gen_c_json_printer@@Base+0x5eb>
  41646c:	mov    rax,QWORD PTR [rsp+0x18]
  416471:	mov    rax,QWORD PTR [rax+0xd8]
  416478:	mov    r13,QWORD PTR [rax+0x40]
  41647c:	test   r13,r13
  41647f:	je     4170c7 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  416485:	lea    r14,[rsp+0x20]
  41648a:	lea    rbx,[rsp+0x120]
  416492:	lea    r12,[rip+0x2f1ac]        # 445645 <_IO_stdin_used@@Base+0x17645>
  416499:	cmp    WORD PTR [r13+0x10],0x4
  41649f:	jne    4164e7 <__flatcc_fb_gen_c_json_printer@@Base+0x6b7>
  4164a1:	jmp    4164fc <__flatcc_fb_gen_c_json_printer@@Base+0x6cc>
  4164a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4164ad:	nop    DWORD PTR [rax]
  4164b0:	mov    rcx,QWORD PTR [r15]
  4164b3:	mov    esi,0x1c
  4164b8:	mov    edx,0x1
  4164bd:	lea    rdi,[rip+0x2f42c]        # 4458f0 <_IO_stdin_used@@Base+0x178f0>
  4164c4:	call   406230 <fwrite@plt>
  4164c9:	mov    rcx,QWORD PTR [r15]
  4164cc:	mov    esi,0x9
  4164d1:	mov    edx,0x1
  4164d6:	lea    rdi,[rip+0x2b658]        # 441b35 <_IO_stdin_used@@Base+0x13b35>
  4164dd:	call   406230 <fwrite@plt>
  4164e2:	lea    r14,[rsp+0x20]
  4164e7:	mov    r13,QWORD PTR [r13+0x0]
  4164eb:	test   r13,r13
  4164ee:	je     41673c <__flatcc_fb_gen_c_json_printer@@Base+0x90c>
  4164f4:	cmp    WORD PTR [r13+0x10],0x4
  4164fa:	jne    4164e7 <__flatcc_fb_gen_c_json_printer@@Base+0x6b7>
  4164fc:	vxorps xmm0,xmm0,xmm0
  416500:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  416509:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416512:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41651b:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416524:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41652a:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416530:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416536:	mov    QWORD PTR [rsp+0x100],0x0
  416542:	mov    rdi,QWORD PTR [r13+0x18]
  416546:	mov    rsi,r13
  416549:	mov    rdx,r14
  41654c:	vzeroupper 
  41654f:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416554:	mov    rdi,QWORD PTR [r15]
  416557:	lea    rsi,[rip+0x2f075]        # 4455d3 <_IO_stdin_used@@Base+0x175d3>
  41655e:	mov    rdx,r14
  416561:	xor    eax,eax
  416563:	call   406180 <fprintf@plt>
  416568:	mov    rbx,QWORD PTR [r13+0x28]
  41656c:	test   rbx,rbx
  41656f:	jne    416588 <__flatcc_fb_gen_c_json_printer@@Base+0x758>
  416571:	jmp    4165b0 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  416573:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41657d:	nop    DWORD PTR [rax]
  416580:	mov    rbx,QWORD PTR [rbx]
  416583:	test   rbx,rbx
  416586:	je     4165b0 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  416588:	cmp    WORD PTR [rbx+0x28],0x0
  41658d:	je     416580 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
  41658f:	mov    rdi,QWORD PTR [r15]
  416592:	mov    edx,DWORD PTR [rbx+0x48]
  416595:	mov    rax,QWORD PTR [rbx+0x8]
  416599:	mov    r8,QWORD PTR [rax]
  41659c:	mov    rcx,QWORD PTR [rax+0x8]
  4165a0:	mov    rsi,r12
  4165a3:	mov    r9,rcx
  4165a6:	xor    eax,eax
  4165a8:	call   406180 <fprintf@plt>
  4165ad:	jmp    416580 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
  4165af:	nop
  4165b0:	mov    rcx,QWORD PTR [r15]
  4165b3:	mov    esi,0x4e
  4165b8:	mov    edx,0x1
  4165bd:	lea    rdi,[rip+0x2f0d2]        # 445696 <_IO_stdin_used@@Base+0x17696>
  4165c4:	call   406230 <fwrite@plt>
  4165c9:	mov    rcx,QWORD PTR [r15]
  4165cc:	mov    esi,0x9
  4165d1:	mov    edx,0x1
  4165d6:	lea    rdi,[rip+0x2b558]        # 441b35 <_IO_stdin_used@@Base+0x13b35>
  4165dd:	call   406230 <fwrite@plt>
  4165e2:	vxorps xmm0,xmm0,xmm0
  4165e6:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4165ec:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  4165f2:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4165f8:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416601:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41660a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416613:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  41661c:	mov    QWORD PTR [rsp+0x100],0x0
  416628:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  416631:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  41663a:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  416643:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  41664c:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  416655:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  41665e:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  416667:	mov    QWORD PTR [rsp+0x200],0x0
  416673:	mov    rdi,QWORD PTR [r13+0x18]
  416677:	mov    rsi,r13
  41667a:	mov    rdx,r14
  41667d:	vzeroupper 
  416680:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416685:	mov    rdi,QWORD PTR [r15]
  416688:	lea    rsi,[rip+0x2f056]        # 4456e5 <_IO_stdin_used@@Base+0x176e5>
  41668f:	mov    rdx,r14
  416692:	xor    eax,eax
  416694:	call   406180 <fprintf@plt>
  416699:	mov    r14,QWORD PTR [r13+0x28]
  41669d:	test   r14,r14
  4166a0:	lea    rbx,[rsp+0x120]
  4166a8:	jne    4166d1 <__flatcc_fb_gen_c_json_printer@@Base+0x8a1>
  4166aa:	jmp    4164b0 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  4166af:	nop
  4166b0:	mov    rdi,QWORD PTR [r15]
  4166b3:	mov    edx,DWORD PTR [r14+0x48]
  4166b7:	lea    rsi,[rip+0x2f1e2]        # 4458a0 <_IO_stdin_used@@Base+0x178a0>
  4166be:	xor    eax,eax
  4166c0:	call   406180 <fprintf@plt>
  4166c5:	mov    r14,QWORD PTR [r14]
  4166c8:	test   r14,r14
  4166cb:	je     4164b0 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  4166d1:	movzx  eax,WORD PTR [r14+0x28]
  4166d6:	test   ax,ax
  4166d9:	je     4166c5 <__flatcc_fb_gen_c_json_printer@@Base+0x895>
  4166db:	cmp    ax,0xa
  4166df:	je     4166b0 <__flatcc_fb_gen_c_json_printer@@Base+0x880>
  4166e1:	cmp    ax,0xe
  4166e5:	jne    417241 <__flatcc_fb_gen_c_json_printer@@Base+0x1411>
  4166eb:	mov    rsi,QWORD PTR [r14+0x18]
  4166ef:	mov    rdi,QWORD PTR [rsi+0x18]
  4166f3:	mov    rdx,rbx
  4166f6:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  4166fb:	mov    rax,QWORD PTR [r14+0x18]
  4166ff:	movzx  eax,WORD PTR [rax+0x10]
  416703:	cmp    ax,0x1
  416707:	je     416722 <__flatcc_fb_gen_c_json_printer@@Base+0x8f2>
  416709:	test   ax,ax
  41670c:	jne    41731c <__flatcc_fb_gen_c_json_printer@@Base+0x14ec>
  416712:	mov    rdi,QWORD PTR [r15]
  416715:	mov    edx,DWORD PTR [r14+0x48]
  416719:	lea    rsi,[rip+0x2f048]        # 445768 <_IO_stdin_used@@Base+0x17768>
  416720:	jmp    416730 <__flatcc_fb_gen_c_json_printer@@Base+0x900>
  416722:	mov    rdi,QWORD PTR [r15]
  416725:	mov    edx,DWORD PTR [r14+0x48]
  416729:	lea    rsi,[rip+0x2f09c]        # 4457cc <_IO_stdin_used@@Base+0x177cc>
  416730:	mov    rcx,rbx
  416733:	xor    eax,eax
  416735:	call   406180 <fprintf@plt>
  41673a:	jmp    4166c5 <__flatcc_fb_gen_c_json_printer@@Base+0x895>
  41673c:	mov    rax,QWORD PTR [rsp+0x18]
  416741:	mov    rax,QWORD PTR [rax+0xd8]
  416748:	mov    r14,QWORD PTR [rax+0x40]
  41674c:	test   r14,r14
  41674f:	je     4170c7 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  416755:	lea    r12,[rsp+0x20]
  41675a:	cmp    WORD PTR [r14+0x10],0x1
  416760:	jne    4167a5 <__flatcc_fb_gen_c_json_printer@@Base+0x975>
  416762:	jmp    4167b9 <__flatcc_fb_gen_c_json_printer@@Base+0x989>
  416764:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41676e:	xchg   ax,ax
  416770:	mov    rcx,QWORD PTR [r15]
  416773:	mov    esi,0x3
  416778:	mov    edx,0x1
  41677d:	lea    rdi,[rip+0x2fbeb]        # 44636f <_IO_stdin_used@@Base+0x1836f>
  416784:	call   406230 <fwrite@plt>
  416789:	mov    rdi,QWORD PTR [r15]
  41678c:	lea    rsi,[rip+0x2f2d6]        # 445a69 <_IO_stdin_used@@Base+0x17a69>
  416793:	lea    r12,[rsp+0x20]
  416798:	mov    rdx,r12
  41679b:	mov    rcx,r12
  41679e:	xor    eax,eax
  4167a0:	call   406180 <fprintf@plt>
  4167a5:	mov    r14,QWORD PTR [r14]
  4167a8:	test   r14,r14
  4167ab:	je     4169b8 <__flatcc_fb_gen_c_json_printer@@Base+0xb88>
  4167b1:	cmp    WORD PTR [r14+0x10],0x1
  4167b7:	jne    4167a5 <__flatcc_fb_gen_c_json_printer@@Base+0x975>
  4167b9:	vxorps xmm0,xmm0,xmm0
  4167bd:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4167c3:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  4167c9:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4167cf:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4167d8:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  4167e1:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  4167ea:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4167f3:	mov    QWORD PTR [rsp+0x100],0x0
  4167ff:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  416808:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  416811:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  41681a:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  416823:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  41682c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  416835:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  41683e:	mov    QWORD PTR [rsp+0x200],0x0
  41684a:	mov    rdi,QWORD PTR [r14+0x18]
  41684e:	mov    rsi,r14
  416851:	mov    rdx,r12
  416854:	vzeroupper 
  416857:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  41685c:	mov    rdi,QWORD PTR [r15]
  41685f:	lea    rsi,[rip+0x2f0a7]        # 44590d <_IO_stdin_used@@Base+0x1790d>
  416866:	mov    rdx,r12
  416869:	xor    eax,eax
  41686b:	call   406180 <fprintf@plt>
  416870:	mov    r13,QWORD PTR [r14+0x28]
  416874:	test   r13,r13
  416877:	je     416770 <__flatcc_fb_gen_c_json_printer@@Base+0x940>
  41687d:	xor    r12d,r12d
  416880:	test   BYTE PTR [r13+0x70],0x4
  416885:	jne    4168c0 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  416887:	jmp    4168d7 <__flatcc_fb_gen_c_json_printer@@Base+0xaa7>
  416889:	mov    rdi,QWORD PTR [r15]
  41688c:	mov    rax,QWORD PTR [r13+0x8]
  416890:	mov    rcx,QWORD PTR [r13+0x78]
  416894:	mov    r9,QWORD PTR [rax]
  416897:	mov    r8,QWORD PTR [rax+0x8]
  41689b:	lea    rsi,[rip+0x2f163]        # 445a05 <_IO_stdin_used@@Base+0x17a05>
  4168a2:	mov    edx,r12d
  4168a5:	xor    eax,eax
  4168a7:	push   rbx
  4168a8:	push   r8
  4168aa:	call   406180 <fprintf@plt>
  4168af:	add    rsp,0x10
  4168b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168bd:	nop    DWORD PTR [rax]
  4168c0:	inc    r12d
  4168c3:	mov    r13,QWORD PTR [r13+0x0]
  4168c7:	test   r13,r13
  4168ca:	je     416770 <__flatcc_fb_gen_c_json_printer@@Base+0x940>
  4168d0:	test   BYTE PTR [r13+0x70],0x4
  4168d5:	jne    4168c0 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  4168d7:	movzx  eax,WORD PTR [r13+0x28]
  4168dc:	cmp    ax,0xe
  4168e0:	je     416936 <__flatcc_fb_gen_c_json_printer@@Base+0xb06>
  4168e2:	cmp    ax,0x8
  4168e6:	jne    4168c0 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  4168e8:	mov    eax,DWORD PTR [r13+0x18]
  4168ec:	dec    eax
  4168ee:	cmp    eax,0xb
  4168f1:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  4168f7:	cdqe   
  4168f9:	lea    rcx,[rip+0x3b440]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416900:	mov    rdx,QWORD PTR [rcx+rax*8]
  416904:	mov    rdi,QWORD PTR [r15]
  416907:	mov    rbx,QWORD PTR [r13+0x8]
  41690b:	mov    r8,QWORD PTR [r13+0x78]
  41690f:	mov    r9,QWORD PTR [rbx+0x8]
  416913:	lea    rsi,[rip+0x2f042]        # 44595c <_IO_stdin_used@@Base+0x1795c>
  41691a:	mov    ecx,r12d
  41691d:	xor    eax,eax
  41691f:	push   r9
  416921:	push   QWORD PTR [rbx]
  416923:	call   406180 <fprintf@plt>
  416928:	add    rsp,0x10
  41692c:	lea    rbx,[rsp+0x120]
  416934:	jmp    4168c0 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  416936:	mov    rsi,QWORD PTR [r13+0x18]
  41693a:	mov    rdi,QWORD PTR [rsi+0x18]
  41693e:	mov    rdx,rbx
  416941:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416946:	mov    rax,QWORD PTR [r13+0x18]
  41694a:	movzx  ecx,WORD PTR [rax+0x10]
  41694e:	cmp    cx,0x1
  416952:	je     416889 <__flatcc_fb_gen_c_json_printer@@Base+0xa59>
  416958:	cmp    cx,0x3
  41695c:	jne    4168c0 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  416962:	mov    eax,DWORD PTR [rax+0x48]
  416965:	dec    eax
  416967:	cmp    eax,0xb
  41696a:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416970:	cdqe   
  416972:	lea    rcx,[rip+0x3b3c7]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416979:	mov    rdx,QWORD PTR [rcx+rax*8]
  41697d:	mov    rdi,QWORD PTR [r15]
  416980:	mov    r10,QWORD PTR [r13+0x8]
  416984:	mov    r8,QWORD PTR [r13+0x78]
  416988:	mov    r9,QWORD PTR [r10+0x8]
  41698c:	sub    rsp,0x8
  416990:	lea    rsi,[rip+0x2f00d]        # 4459a4 <_IO_stdin_used@@Base+0x179a4>
  416997:	mov    ecx,r12d
  41699a:	xor    eax,eax
  41699c:	lea    rbx,[rsp+0x128]
  4169a4:	push   rbx
  4169a5:	push   r9
  4169a7:	push   QWORD PTR [r10]
  4169aa:	call   406180 <fprintf@plt>
  4169af:	add    rsp,0x20
  4169b3:	jmp    4168c0 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  4169b8:	mov    rax,QWORD PTR [rsp+0x18]
  4169bd:	mov    rax,QWORD PTR [rax+0xd8]
  4169c4:	mov    r12,QWORD PTR [rax+0x40]
  4169c8:	test   r12,r12
  4169cb:	je     4170c7 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  4169d1:	lea    r14,[rsp+0x20]
  4169d6:	cmp    WORD PTR [r12+0x10],0x0
  4169dd:	je     4169f6 <__flatcc_fb_gen_c_json_printer@@Base+0xbc6>
  4169df:	nop
  4169e0:	mov    r12,QWORD PTR [r12]
  4169e4:	test   r12,r12
  4169e7:	je     4170bb <__flatcc_fb_gen_c_json_printer@@Base+0x128b>
  4169ed:	cmp    WORD PTR [r12+0x10],0x0
  4169f4:	jne    4169e0 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  4169f6:	vxorps xmm0,xmm0,xmm0
  4169fa:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416a00:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416a06:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416a0c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416a15:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  416a1e:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416a27:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  416a30:	mov    QWORD PTR [rsp+0x100],0x0
  416a3c:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  416a45:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  416a4e:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  416a57:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  416a60:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  416a69:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  416a72:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  416a7b:	mov    QWORD PTR [rsp+0x200],0x0
  416a87:	mov    rdi,QWORD PTR [r12+0x18]
  416a8c:	mov    rsi,r12
  416a8f:	mov    rdx,r14
  416a92:	vzeroupper 
  416a95:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416a9a:	mov    QWORD PTR [rsp+0x8],r12
  416a9f:	mov    rbx,QWORD PTR [r12+0xa8]
  416aa7:	mov    esi,0x8
  416aac:	mov    rdi,rbx
  416aaf:	call   406150 <calloc@plt>
  416ab4:	test   rbx,rbx
  416ab7:	mov    rbx,rax
  416aba:	je     416ac5 <__flatcc_fb_gen_c_json_printer@@Base+0xc95>
  416abc:	test   rbx,rbx
  416abf:	je     4174d2 <__flatcc_fb_gen_c_json_printer@@Base+0x16a2>
  416ac5:	mov    r12,QWORD PTR [rsp+0x8]
  416aca:	mov    rax,QWORD PTR [r12+0x28]
  416acf:	test   rax,rax
  416ad2:	je     416af3 <__flatcc_fb_gen_c_json_printer@@Base+0xcc3>
  416ad4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ade:	xchg   ax,ax
  416ae0:	mov    rcx,QWORD PTR [rax+0x88]
  416ae7:	mov    QWORD PTR [rbx+rcx*8],rax
  416aeb:	mov    rax,QWORD PTR [rax]
  416aee:	test   rax,rax
  416af1:	jne    416ae0 <__flatcc_fb_gen_c_json_printer@@Base+0xcb0>
  416af3:	mov    rdi,QWORD PTR [r15]
  416af6:	lea    rsi,[rip+0x2f0ad]        # 445baa <_IO_stdin_used@@Base+0x17baa>
  416afd:	mov    rdx,r14
  416b00:	xor    eax,eax
  416b02:	call   406180 <fprintf@plt>
  416b07:	cmp    QWORD PTR [r12+0xa8],0x0
  416b10:	je     417070 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
  416b16:	xor    r14d,r14d
  416b19:	mov    QWORD PTR [rsp+0x10],rbx
  416b1e:	jmp    416b81 <__flatcc_fb_gen_c_json_printer@@Base+0xd51>
  416b20:	mov    rdi,QWORD PTR [r15]
  416b23:	mov    rax,QWORD PTR [r13+0x8]
  416b27:	mov    rdx,QWORD PTR [r13+0x88]
  416b2e:	mov    r8,QWORD PTR [rax]
  416b31:	mov    rcx,QWORD PTR [rax+0x8]
  416b35:	sub    rsp,0x8
  416b39:	lea    rsi,[rip+0x2f592]        # 4460d2 <_IO_stdin_used@@Base+0x180d2>
  416b40:	mov    r9,rcx
  416b43:	xor    eax,eax
  416b45:	lea    rbx,[rsp+0x128]
  416b4d:	push   rbx
  416b4e:	mov    rbx,QWORD PTR [rsp+0x20]
  416b53:	mov    r12,QWORD PTR [rsp+0x18]
  416b58:	call   406180 <fprintf@plt>
  416b5d:	add    rsp,0x10
  416b61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  416b70:	inc    r14
  416b73:	cmp    r14,QWORD PTR [r12+0xa8]
  416b7b:	jae    417070 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
  416b81:	mov    r13,QWORD PTR [rbx+r14*8]
  416b85:	test   r13,r13
  416b88:	je     416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416b8a:	test   BYTE PTR [r13+0x70],0x4
  416b8f:	jne    416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416b91:	mov    rcx,QWORD PTR [r15]
  416b94:	mov    esi,0x5
  416b99:	mov    edx,0x1
  416b9e:	lea    rdi,[rip+0x2f06f]        # 445c14 <_IO_stdin_used@@Base+0x17c14>
  416ba5:	call   406230 <fwrite@plt>
  416baa:	mov    eax,DWORD PTR [r13+0x28]
  416bae:	add    eax,0xfffffff9
  416bb1:	cmp    ax,0x8
  416bb5:	ja     416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416bb7:	movzx  eax,ax
  416bba:	lea    rcx,[rip+0x2e213]        # 444dd4 <_IO_stdin_used@@Base+0x16dd4>
  416bc1:	movsxd rax,DWORD PTR [rcx+rax*4]
  416bc5:	add    rax,rcx
  416bc8:	jmp    rax
  416bca:	movzx  r10d,WORD PTR [r13+0x70]
  416bcf:	test   r10d,0xc00
  416bd6:	je     416dc2 <__flatcc_fb_gen_c_json_printer@@Base+0xf92>
  416bdc:	mov    rdi,QWORD PTR [r15]
  416bdf:	mov    rax,QWORD PTR [r13+0x8]
  416be3:	mov    rdx,QWORD PTR [r13+0x88]
  416bea:	mov    r8,QWORD PTR [rax]
  416bed:	mov    rcx,QWORD PTR [rax+0x8]
  416bf1:	shr    r10d,0xa
  416bf5:	not    r10d
  416bf8:	and    r10d,0x1
  416bfc:	sub    rsp,0x8
  416c00:	lea    rsi,[rip+0x2f0cd]        # 445cd4 <_IO_stdin_used@@Base+0x17cd4>
  416c07:	mov    r9,rcx
  416c0a:	xor    eax,eax
  416c0c:	push   r10
  416c0e:	jmp    416b58 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
  416c13:	mov    rdi,QWORD PTR [r15]
  416c16:	mov    rax,QWORD PTR [r13+0x8]
  416c1a:	mov    rdx,QWORD PTR [r13+0x88]
  416c21:	mov    r8,QWORD PTR [rax]
  416c24:	mov    rcx,QWORD PTR [rax+0x8]
  416c28:	lea    rsi,[rip+0x2f22c]        # 445e5b <_IO_stdin_used@@Base+0x17e5b>
  416c2f:	jmp    416d29 <__flatcc_fb_gen_c_json_printer@@Base+0xef9>
  416c34:	mov    rsi,QWORD PTR [r13+0x18]
  416c38:	mov    rdi,QWORD PTR [rsi+0x18]
  416c3c:	lea    rdx,[rsp+0x120]
  416c44:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416c49:	mov    rax,QWORD PTR [r13+0x18]
  416c4d:	movzx  ecx,WORD PTR [rax+0x10]
  416c51:	cmp    rcx,0x4
  416c55:	ja     4173ae <__flatcc_fb_gen_c_json_printer@@Base+0x157e>
  416c5b:	lea    rdx,[rip+0x2e196]        # 444df8 <_IO_stdin_used@@Base+0x16df8>
  416c62:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416c66:	add    rcx,rdx
  416c69:	jmp    rcx
  416c6b:	mov    rdi,QWORD PTR [r15]
  416c6e:	mov    rdx,QWORD PTR [r13+0x88]
  416c75:	mov    rax,QWORD PTR [r13+0x8]
  416c79:	mov    r8,QWORD PTR [rax]
  416c7c:	mov    rcx,QWORD PTR [rax+0x8]
  416c80:	lea    rsi,[rip+0x2f501]        # 446188 <_IO_stdin_used@@Base+0x18188>
  416c87:	mov    r9,rcx
  416c8a:	xor    eax,eax
  416c8c:	lea    rbx,[rsp+0x120]
  416c94:	push   rbx
  416c95:	mov    rbx,QWORD PTR [rsp+0x18]
  416c9a:	mov    r12,QWORD PTR [rsp+0x10]
  416c9f:	push   QWORD PTR [r13+0x80]
  416ca6:	jmp    416b58 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
  416cab:	mov    eax,DWORD PTR [r13+0x18]
  416caf:	dec    eax
  416cb1:	cmp    eax,0xb
  416cb4:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416cba:	cdqe   
  416cbc:	lea    rcx,[rip+0x3b07d]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416cc3:	mov    rdx,QWORD PTR [rcx+rax*8]
  416cc7:	mov    eax,DWORD PTR [r13+0x58]
  416ccb:	lea    ecx,[rax-0x5]
  416cce:	cmp    cx,0x2
  416cd2:	jb     416d94 <__flatcc_fb_gen_c_json_printer@@Base+0xf64>
  416cd8:	cmp    ax,0x3
  416cdc:	je     416ea3 <__flatcc_fb_gen_c_json_printer@@Base+0x1073>
  416ce2:	cmp    ax,0x4
  416ce6:	jne    4173f7 <__flatcc_fb_gen_c_json_printer@@Base+0x15c7>
  416cec:	mov    rdi,QWORD PTR [r15]
  416cef:	mov    rcx,QWORD PTR [r13+0x88]
  416cf6:	mov    rax,QWORD PTR [r13+0x8]
  416cfa:	mov    r9,QWORD PTR [rax]
  416cfd:	mov    r8,QWORD PTR [rax+0x8]
  416d01:	lea    rsi,[rip+0x2ef50]        # 445c58 <_IO_stdin_used@@Base+0x17c58>
  416d08:	jmp    416db0 <__flatcc_fb_gen_c_json_printer@@Base+0xf80>
  416d0d:	mov    rdi,QWORD PTR [r15]
  416d10:	mov    rax,QWORD PTR [r13+0x8]
  416d14:	mov    rdx,QWORD PTR [r13+0x88]
  416d1b:	mov    r8,QWORD PTR [rax]
  416d1e:	mov    rcx,QWORD PTR [rax+0x8]
  416d22:	lea    rsi,[rip+0x2f0f5]        # 445e1e <_IO_stdin_used@@Base+0x17e1e>
  416d29:	mov    r9,rcx
  416d2c:	xor    eax,eax
  416d2e:	call   406180 <fprintf@plt>
  416d33:	jmp    416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416d38:	mov    rsi,QWORD PTR [r13+0x18]
  416d3c:	mov    rdi,QWORD PTR [rsi+0x18]
  416d40:	lea    rdx,[rsp+0x120]
  416d48:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416d4d:	mov    rax,QWORD PTR [r13+0x18]
  416d51:	movzx  ecx,WORD PTR [rax+0x10]
  416d55:	cmp    rcx,0x4
  416d59:	ja     417440 <__flatcc_fb_gen_c_json_printer@@Base+0x1610>
  416d5f:	lea    rdx,[rip+0x2e0a6]        # 444e0c <_IO_stdin_used@@Base+0x16e0c>
  416d66:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416d6a:	add    rcx,rdx
  416d6d:	jmp    rcx
  416d6f:	mov    rdi,QWORD PTR [r15]
  416d72:	mov    rax,QWORD PTR [r13+0x8]
  416d76:	mov    rdx,QWORD PTR [r13+0x88]
  416d7d:	mov    r8,QWORD PTR [rax]
  416d80:	mov    rcx,QWORD PTR [rax+0x8]
  416d84:	sub    rsp,0x8
  416d88:	lea    rsi,[rip+0x2f249]        # 445fd8 <_IO_stdin_used@@Base+0x17fd8>
  416d8f:	jmp    416b40 <__flatcc_fb_gen_c_json_printer@@Base+0xd10>
  416d94:	mov    rdi,QWORD PTR [r15]
  416d97:	mov    rcx,QWORD PTR [r13+0x88]
  416d9e:	mov    rax,QWORD PTR [r13+0x8]
  416da2:	mov    r9,QWORD PTR [rax]
  416da5:	mov    r8,QWORD PTR [rax+0x8]
  416da9:	lea    rsi,[rip+0x2ee6a]        # 445c1a <_IO_stdin_used@@Base+0x17c1a>
  416db0:	xor    eax,eax
  416db2:	push   QWORD PTR [r13+0x48]
  416db6:	push   r8
  416db8:	call   406180 <fprintf@plt>
  416dbd:	jmp    416b5d <__flatcc_fb_gen_c_json_printer@@Base+0xd2d>
  416dc2:	mov    rsi,QWORD PTR [r13+0x90]
  416dc9:	test   rsi,rsi
  416dcc:	je     416fa0 <__flatcc_fb_gen_c_json_printer@@Base+0x1170>
  416dd2:	mov    rdi,QWORD PTR [rsi+0x18]
  416dd6:	lea    rax,[rsp+0x120]
  416dde:	mov    rdx,rax
  416de1:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  416de6:	mov    rax,QWORD PTR [r13+0x90]
  416ded:	cmp    WORD PTR [rax+0x10],0x0
  416df2:	mov    rdi,QWORD PTR [r15]
  416df5:	mov    rax,QWORD PTR [r13+0x8]
  416df9:	mov    rdx,QWORD PTR [r13+0x88]
  416e00:	mov    r8,QWORD PTR [rax]
  416e03:	mov    rcx,QWORD PTR [rax+0x8]
  416e07:	je     416fe3 <__flatcc_fb_gen_c_json_printer@@Base+0x11b3>
  416e0d:	sub    rsp,0x8
  416e11:	lea    rsi,[rip+0x2ef67]        # 445d7f <_IO_stdin_used@@Base+0x17d7f>
  416e18:	jmp    416fee <__flatcc_fb_gen_c_json_printer@@Base+0x11be>
  416e1d:	mov    rdi,QWORD PTR [r15]
  416e20:	mov    rax,QWORD PTR [r13+0x8]
  416e24:	mov    rdx,QWORD PTR [r13+0x88]
  416e2b:	mov    r8,QWORD PTR [rax]
  416e2e:	mov    rcx,QWORD PTR [rax+0x8]
  416e32:	lea    rsi,[rip+0x2f3ae]        # 4461e7 <_IO_stdin_used@@Base+0x181e7>
  416e39:	jmp    416ef3 <__flatcc_fb_gen_c_json_printer@@Base+0x10c3>
  416e3e:	dec    eax
  416e40:	cmp    eax,0xb
  416e43:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416e49:	cdqe   
  416e4b:	lea    rcx,[rip+0x3aeee]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416e52:	mov    rdx,QWORD PTR [rcx+rax*8]
  416e56:	mov    rdi,QWORD PTR [r15]
  416e59:	mov    rax,QWORD PTR [r13+0x8]
  416e5d:	mov    rcx,QWORD PTR [r13+0x88]
  416e64:	mov    r9,QWORD PTR [rax]
  416e67:	mov    r8,QWORD PTR [rax+0x8]
  416e6b:	sub    rsp,0x8
  416e6f:	lea    rsi,[rip+0x2f2b4]        # 44612a <_IO_stdin_used@@Base+0x1812a>
  416e76:	xor    eax,eax
  416e78:	lea    rbx,[rsp+0x128]
  416e80:	push   rbx
  416e81:	mov    r12,QWORD PTR [rsp+0x18]
  416e86:	push   QWORD PTR [r12+0xb8]
  416e8e:	push   r8
  416e90:	call   406180 <fprintf@plt>
  416e95:	add    rsp,0x20
  416e99:	mov    rbx,QWORD PTR [rsp+0x10]
  416e9e:	jmp    416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416ea3:	mov    rdi,QWORD PTR [r15]
  416ea6:	mov    rcx,QWORD PTR [r13+0x88]
  416ead:	mov    rax,QWORD PTR [r13+0x8]
  416eb1:	mov    r9,QWORD PTR [rax]
  416eb4:	mov    r8,QWORD PTR [rax+0x8]
  416eb8:	vmovsd xmm0,QWORD PTR [r13+0x48]
  416ebe:	sub    rsp,0x8
  416ec2:	lea    rsi,[rip+0x2edcd]        # 445c96 <_IO_stdin_used@@Base+0x17c96>
  416ec9:	mov    al,0x1
  416ecb:	push   r8
  416ecd:	call   406180 <fprintf@plt>
  416ed2:	jmp    416b5d <__flatcc_fb_gen_c_json_printer@@Base+0xd2d>
  416ed7:	mov    rdi,QWORD PTR [r15]
  416eda:	mov    rax,QWORD PTR [r13+0x8]
  416ede:	mov    rdx,QWORD PTR [r13+0x88]
  416ee5:	mov    r8,QWORD PTR [rax]
  416ee8:	mov    rcx,QWORD PTR [rax+0x8]
  416eec:	lea    rsi,[rip+0x2f136]        # 446029 <_IO_stdin_used@@Base+0x18029>
  416ef3:	mov    r9,rcx
  416ef6:	xor    eax,eax
  416ef8:	lea    rbx,[rsp+0x120]
  416f00:	push   rbx
  416f01:	jmp    416b4d <__flatcc_fb_gen_c_json_printer@@Base+0xd1d>
  416f06:	mov    rdi,QWORD PTR [r15]
  416f09:	mov    rax,QWORD PTR [r13+0x8]
  416f0d:	mov    rdx,QWORD PTR [r13+0x88]
  416f14:	mov    r8,QWORD PTR [rax]
  416f17:	mov    rcx,QWORD PTR [rax+0x8]
  416f1b:	sub    rsp,0x8
  416f1f:	lea    rsi,[rip+0x2f05f]        # 445f85 <_IO_stdin_used@@Base+0x17f85>
  416f26:	jmp    416b40 <__flatcc_fb_gen_c_json_printer@@Base+0xd10>
  416f2b:	mov    eax,DWORD PTR [rax+0x48]
  416f2e:	dec    eax
  416f30:	cmp    eax,0xb
  416f33:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416f39:	cdqe   
  416f3b:	lea    rcx,[rip+0x3adfe]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416f42:	mov    rdx,QWORD PTR [rcx+rax*8]
  416f46:	mov    eax,DWORD PTR [r13+0x58]
  416f4a:	lea    ecx,[rax-0x5]
  416f4d:	cmp    cx,0x2
  416f51:	jae    41700f <__flatcc_fb_gen_c_json_printer@@Base+0x11df>
  416f57:	mov    rdi,QWORD PTR [r15]
  416f5a:	mov    rcx,QWORD PTR [r13+0x88]
  416f61:	mov    rax,QWORD PTR [r13+0x8]
  416f65:	mov    r9,QWORD PTR [rax]
  416f68:	mov    r8,QWORD PTR [rax+0x8]
  416f6c:	sub    rsp,0x8
  416f70:	lea    rsi,[rip+0x2ef28]        # 445e9f <_IO_stdin_used@@Base+0x17e9f>
  416f77:	xor    eax,eax
  416f79:	lea    rbx,[rsp+0x128]
  416f81:	push   rbx
  416f82:	mov    rbx,QWORD PTR [rsp+0x20]
  416f87:	mov    r12,QWORD PTR [rsp+0x18]
  416f8c:	push   QWORD PTR [r13+0x48]
  416f90:	push   r8
  416f92:	call   406180 <fprintf@plt>
  416f97:	add    rsp,0x20
  416f9b:	jmp    416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416fa0:	mov    eax,DWORD PTR [r13+0x18]
  416fa4:	dec    eax
  416fa6:	cmp    eax,0xb
  416fa9:	jae    417365 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416faf:	cdqe   
  416fb1:	lea    rcx,[rip+0x3ad88]        # 451d40 <fb_value_set_deleted@@Base+0x6ae0>
  416fb8:	mov    rdx,QWORD PTR [rcx+rax*8]
  416fbc:	mov    rdi,QWORD PTR [r15]
  416fbf:	mov    rax,QWORD PTR [r13+0x8]
  416fc3:	mov    rcx,QWORD PTR [r13+0x88]
  416fca:	mov    r9,QWORD PTR [rax]
  416fcd:	mov    r8,QWORD PTR [rax+0x8]
  416fd1:	sub    rsp,0x8
  416fd5:	lea    rsi,[rip+0x2ee02]        # 445dde <_IO_stdin_used@@Base+0x17dde>
  416fdc:	xor    eax,eax
  416fde:	jmp    416db6 <__flatcc_fb_gen_c_json_printer@@Base+0xf86>
  416fe3:	sub    rsp,0x8
  416fe7:	lea    rsi,[rip+0x2ed34]        # 445d22 <_IO_stdin_used@@Base+0x17d22>
  416fee:	mov    r9,rcx
  416ff1:	xor    eax,eax
  416ff3:	lea    rbx,[rsp+0x128]
  416ffb:	push   rbx
  416ffc:	call   406180 <fprintf@plt>
  417001:	add    rsp,0x10
  417005:	mov    rbx,QWORD PTR [rsp+0x10]
  41700a:	jmp    416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  41700f:	cmp    ax,0x4
  417013:	jne    417489 <__flatcc_fb_gen_c_json_printer@@Base+0x1659>
  417019:	mov    rdi,QWORD PTR [r15]
  41701c:	mov    rcx,QWORD PTR [r13+0x88]
  417023:	mov    rax,QWORD PTR [r13+0x8]
  417027:	mov    r9,QWORD PTR [rax]
  41702a:	mov    r8,QWORD PTR [rax+0x8]
  41702e:	sub    rsp,0x8
  417032:	lea    rsi,[rip+0x2eebd]        # 445ef6 <_IO_stdin_used@@Base+0x17ef6>
  417039:	xor    eax,eax
  41703b:	lea    rbx,[rsp+0x128]
  417043:	push   rbx
  417044:	push   QWORD PTR [r13+0x48]
  417048:	push   r8
  41704a:	call   406180 <fprintf@plt>
  41704f:	add    rsp,0x20
  417053:	mov    r12,QWORD PTR [rsp+0x8]
  417058:	mov    rbx,QWORD PTR [rsp+0x10]
  41705d:	jmp    416b70 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  417062:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41706c:	nop    DWORD PTR [rax+0x0]
  417070:	mov    rcx,QWORD PTR [r15]
  417073:	mov    esi,0x4
  417078:	mov    edx,0x1
  41707d:	lea    rdi,[rip+0x2f2ea]        # 44636e <_IO_stdin_used@@Base+0x1836e>
  417084:	call   406230 <fwrite@plt>
  417089:	mov    rdi,QWORD PTR [r15]
  41708c:	lea    rsi,[rip+0x2f20b]        # 44629e <_IO_stdin_used@@Base+0x1829e>
  417093:	lea    r14,[rsp+0x20]
  417098:	mov    rdx,r14
  41709b:	mov    rcx,r14
  41709e:	xor    eax,eax
  4170a0:	call   406180 <fprintf@plt>
  4170a5:	test   rbx,rbx
  4170a8:	je     4169e0 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  4170ae:	mov    rdi,rbx
  4170b1:	call   406040 <free@plt>
  4170b6:	jmp    4169e0 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  4170bb:	mov    rax,QWORD PTR [rsp+0x18]
  4170c0:	mov    rax,QWORD PTR [rax+0xd8]
  4170c7:	mov    rsi,QWORD PTR [rax+0x58]
  4170cb:	test   rsi,rsi
  4170ce:	je     4171da <__flatcc_fb_gen_c_json_printer@@Base+0x13aa>
  4170d4:	cmp    WORD PTR [rsi+0x10],0x1
  4170d9:	ja     4171da <__flatcc_fb_gen_c_json_printer@@Base+0x13aa>
  4170df:	vxorps xmm0,xmm0,xmm0
  4170e3:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4170ec:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  4170f5:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  4170fe:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  417107:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41710d:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  417113:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  417119:	mov    QWORD PTR [rsp+0x100],0x0
  417125:	mov    rdi,QWORD PTR [rsi+0x18]
  417129:	lea    r14,[rsp+0x20]
  41712e:	mov    rdx,r14
  417131:	vzeroupper 
  417134:	call   408120 <__flatcc_fb_scoped_symbol_name@@Base>
  417139:	mov    rbx,QWORD PTR [rsp+0x18]
  41713e:	mov    rdi,QWORD PTR [rbx+0xd0]
  417145:	mov    rax,QWORD PTR [rbx+0xd8]
  41714c:	mov    rdx,QWORD PTR [rax+0x110]
  417153:	lea    rsi,[rip+0x2f219]        # 446373 <_IO_stdin_used@@Base+0x18373>
  41715a:	xor    eax,eax
  41715c:	call   406180 <fprintf@plt>
  417161:	mov    rdi,QWORD PTR [rbx+0xd0]
  417168:	lea    rsi,[rip+0x2f25a]        # 4463c9 <_IO_stdin_used@@Base+0x183c9>
  41716f:	mov    rdx,r14
  417172:	xor    eax,eax
  417174:	call   406180 <fprintf@plt>
  417179:	mov    rcx,QWORD PTR [rbx+0xd0]
  417180:	mov    rax,QWORD PTR [rbx+0xd8]
  417187:	cmp    WORD PTR [rax+0x20],0x2
  41718c:	jne    4171ab <__flatcc_fb_gen_c_json_printer@@Base+0x137b>
  41718e:	mov    edx,DWORD PTR [rax+0x18]
  417191:	mov    rax,QWORD PTR [rax+0x10]
  417195:	lea    rsi,[rip+0x2f2e3]        # 44647f <_IO_stdin_used@@Base+0x1847f>
  41719c:	mov    rdi,rcx
  41719f:	mov    rcx,rax
  4171a2:	xor    eax,eax
  4171a4:	call   406180 <fprintf@plt>
  4171a9:	jmp    4171c1 <__flatcc_fb_gen_c_json_printer@@Base+0x1391>
  4171ab:	lea    rdi,[rip+0x2f2d7]        # 446489 <_IO_stdin_used@@Base+0x18489>
  4171b2:	mov    esi,0x3
  4171b7:	mov    edx,0x1
  4171bc:	call   406230 <fwrite@plt>
  4171c1:	mov    rcx,QWORD PTR [r15]
  4171c4:	lea    rdi,[rip+0x2f1a4]        # 44636f <_IO_stdin_used@@Base+0x1836f>
  4171cb:	mov    esi,0x3
  4171d0:	mov    edx,0x1
  4171d5:	call   406230 <fwrite@plt>
  4171da:	mov    rax,QWORD PTR [rsp+0x18]
  4171df:	mov    rax,QWORD PTR [rax+0xe0]
  4171e6:	cmp    DWORD PTR [rax+0xac],0x0
  4171ed:	je     417208 <__flatcc_fb_gen_c_json_printer@@Base+0x13d8>
  4171ef:	mov    rcx,QWORD PTR [r15]
  4171f2:	lea    rdi,[rip+0x1e8e6]        # 435adf <_IO_stdin_used@@Base+0x7adf>
  4171f9:	mov    esi,0x24
  4171fe:	mov    edx,0x1
  417203:	call   406230 <fwrite@plt>
  417208:	mov    rax,QWORD PTR [rsp+0x18]
  41720d:	mov    rdi,QWORD PTR [rax+0xd0]
  417214:	mov    rax,QWORD PTR [rax+0xd8]
  41721b:	mov    rdx,QWORD PTR [rax+0x118]
  417222:	lea    rsi,[rip+0x2f264]        # 44648d <_IO_stdin_used@@Base+0x1848d>
  417229:	xor    eax,eax
  41722b:	call   406180 <fprintf@plt>
  417230:	xor    eax,eax
  417232:	lea    rsp,[rbp-0x28]
  417236:	pop    rbx
  417237:	pop    r12
  417239:	pop    r13
  41723b:	pop    r14
  41723d:	pop    r15
  41723f:	pop    rbp
  417240:	ret    
  417241:	mov    rax,QWORD PTR [rip+0x3adb0]        # 451ff8 <stderr@GLIBC_2.2.5>
  417248:	mov    rdi,QWORD PTR [rax]
  41724b:	lea    rsi,[rip+0x189d6]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  417252:	lea    rbx,[rip+0x2e17e]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  417259:	lea    r8,[rip+0x2e5d2]        # 445832 <_IO_stdin_used@@Base+0x17832>
  417260:	mov    rdx,rbx
  417263:	mov    ecx,0xfb
  417268:	xor    eax,eax
  41726a:	call   406180 <fprintf@plt>
  41726f:	lea    rdi,[rip+0x29919]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  417276:	lea    rcx,[rip+0x2e5dc]        # 445859 <_IO_stdin_used@@Base+0x17859>
  41727d:	mov    rsi,rbx
  417280:	mov    edx,0xfb
  417285:	call   406100 <__assert_fail@plt>
  41728a:	mov    rax,QWORD PTR [rip+0x3ad67]        # 451ff8 <stderr@GLIBC_2.2.5>
  417291:	mov    rdi,QWORD PTR [rax]
  417294:	lea    rsi,[rip+0x1898d]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41729b:	lea    rbx,[rip+0x2e135]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  4172a2:	lea    r8,[rip+0x2e19e]        # 445447 <_IO_stdin_used@@Base+0x17447>
  4172a9:	mov    rdx,rbx
  4172ac:	mov    ecx,0x9d
  4172b1:	xor    eax,eax
  4172b3:	call   406180 <fprintf@plt>
  4172b8:	lea    rdi,[rip+0x298d0]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4172bf:	lea    rcx,[rip+0x2e1bb]        # 445481 <_IO_stdin_used@@Base+0x17481>
  4172c6:	mov    rsi,rbx
  4172c9:	mov    edx,0x9d
  4172ce:	call   406100 <__assert_fail@plt>
  4172d3:	mov    rax,QWORD PTR [rip+0x3ad1e]        # 451ff8 <stderr@GLIBC_2.2.5>
  4172da:	mov    rdi,QWORD PTR [rax]
  4172dd:	lea    rsi,[rip+0x18944]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4172e4:	lea    rbx,[rip+0x2e0ec]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  4172eb:	lea    r8,[rip+0x2e155]        # 445447 <_IO_stdin_used@@Base+0x17447>
  4172f2:	mov    rdx,rbx
  4172f5:	mov    ecx,0x86
  4172fa:	xor    eax,eax
  4172fc:	call   406180 <fprintf@plt>
  417301:	lea    rdi,[rip+0x29887]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  417308:	lea    rcx,[rip+0x2e172]        # 445481 <_IO_stdin_used@@Base+0x17481>
  41730f:	mov    rsi,rbx
  417312:	mov    edx,0x86
  417317:	call   406100 <__assert_fail@plt>
  41731c:	mov    rax,QWORD PTR [rip+0x3acd5]        # 451ff8 <stderr@GLIBC_2.2.5>
  417323:	mov    rdi,QWORD PTR [rax]
  417326:	lea    rsi,[rip+0x188fb]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41732d:	lea    rbx,[rip+0x2e0a3]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  417334:	lea    r8,[rip+0x2e4f7]        # 445832 <_IO_stdin_used@@Base+0x17832>
  41733b:	mov    rdx,rbx
  41733e:	mov    ecx,0xf0
  417343:	xor    eax,eax
  417345:	call   406180 <fprintf@plt>
  41734a:	lea    rdi,[rip+0x2983e]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  417351:	lea    rcx,[rip+0x2e501]        # 445859 <_IO_stdin_used@@Base+0x17859>
  417358:	mov    rsi,rbx
  41735b:	mov    edx,0xf0
  417360:	call   406100 <__assert_fail@plt>
  417365:	mov    rax,QWORD PTR [rip+0x3ac8c]        # 451ff8 <stderr@GLIBC_2.2.5>
  41736c:	mov    rdi,QWORD PTR [rax]
  41736f:	lea    rsi,[rip+0x188b2]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  417376:	lea    rbx,[rip+0x1f05d]        # 4363da <_IO_stdin_used@@Base+0x83da>
  41737d:	lea    r8,[rip+0x1f0b9]        # 43643d <_IO_stdin_used@@Base+0x843d>
  417384:	mov    rdx,rbx
  417387:	mov    ecx,0x60
  41738c:	xor    eax,eax
  41738e:	call   406180 <fprintf@plt>
  417393:	lea    rdi,[rip+0x297f5]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  41739a:	lea    rcx,[rip+0x1f9cc]        # 436d6d <_IO_stdin_used@@Base+0x8d6d>
  4173a1:	mov    rsi,rbx
  4173a4:	mov    edx,0x60
  4173a9:	call   406100 <__assert_fail@plt>
  4173ae:	mov    rax,QWORD PTR [rip+0x3ac43]        # 451ff8 <stderr@GLIBC_2.2.5>
  4173b5:	mov    rdi,QWORD PTR [rax]
  4173b8:	lea    rsi,[rip+0x18869]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4173bf:	lea    rbx,[rip+0x2e011]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  4173c6:	lea    r8,[rip+0x2ee8c]        # 446259 <_IO_stdin_used@@Base+0x18259>
  4173cd:	mov    rdx,rbx
  4173d0:	mov    ecx,0x21f
  4173d5:	xor    eax,eax
  4173d7:	call   406180 <fprintf@plt>
  4173dc:	lea    rdi,[rip+0x297ac]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4173e3:	lea    rcx,[rip+0x2e780]        # 445b6a <_IO_stdin_used@@Base+0x17b6a>
  4173ea:	mov    rsi,rbx
  4173ed:	mov    edx,0x21f
  4173f2:	call   406100 <__assert_fail@plt>
  4173f7:	mov    rax,QWORD PTR [rip+0x3abfa]        # 451ff8 <stderr@GLIBC_2.2.5>
  4173fe:	mov    rdi,QWORD PTR [rax]
  417401:	lea    rsi,[rip+0x18820]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  417408:	lea    rbx,[rip+0x2dfc8]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  41740f:	lea    r8,[rip+0x2c9bc]        # 443dd2 <_IO_stdin_used@@Base+0x15dd2>
  417416:	mov    rdx,rbx
  417419:	mov    ecx,0x196
  41741e:	xor    eax,eax
  417420:	call   406180 <fprintf@plt>
  417425:	lea    rdi,[rip+0x29763]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  41742c:	lea    rcx,[rip+0x2e737]        # 445b6a <_IO_stdin_used@@Base+0x17b6a>
  417433:	mov    rsi,rbx
  417436:	mov    edx,0x196
  41743b:	call   406100 <__assert_fail@plt>
  417440:	mov    rax,QWORD PTR [rip+0x3abb1]        # 451ff8 <stderr@GLIBC_2.2.5>
  417447:	mov    rdi,QWORD PTR [rax]
  41744a:	lea    rsi,[rip+0x187d7]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  417451:	lea    rbx,[rip+0x2df7f]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  417458:	lea    r8,[rip+0x2ec35]        # 446094 <_IO_stdin_used@@Base+0x18094>
  41745f:	mov    rdx,rbx
  417462:	mov    ecx,0x1f8
  417467:	xor    eax,eax
  417469:	call   406180 <fprintf@plt>
  41746e:	lea    rdi,[rip+0x2971a]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  417475:	lea    rcx,[rip+0x2e6ee]        # 445b6a <_IO_stdin_used@@Base+0x17b6a>
  41747c:	mov    rsi,rbx
  41747f:	mov    edx,0x1f8
  417484:	call   406100 <__assert_fail@plt>
  417489:	mov    rax,QWORD PTR [rip+0x3ab68]        # 451ff8 <stderr@GLIBC_2.2.5>
  417490:	mov    rdi,QWORD PTR [rax]
  417493:	lea    rsi,[rip+0x1878e]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  41749a:	lea    rbx,[rip+0x2df36]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  4174a1:	lea    r8,[rip+0x2eaa5]        # 445f4d <_IO_stdin_used@@Base+0x17f4d>
  4174a8:	mov    rdx,rbx
  4174ab:	mov    ecx,0x1e3
  4174b0:	xor    eax,eax
  4174b2:	call   406180 <fprintf@plt>
  4174b7:	lea    rdi,[rip+0x296d1]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4174be:	lea    rcx,[rip+0x2e6a5]        # 445b6a <_IO_stdin_used@@Base+0x17b6a>
  4174c5:	mov    rsi,rbx
  4174c8:	mov    edx,0x1e3
  4174cd:	call   406100 <__assert_fail@plt>
  4174d2:	mov    rax,QWORD PTR [rip+0x3ab1f]        # 451ff8 <stderr@GLIBC_2.2.5>
  4174d9:	mov    rdi,QWORD PTR [rax]
  4174dc:	lea    rsi,[rip+0x18745]        # 42fc28 <_IO_stdin_used@@Base+0x1c28>
  4174e3:	lea    rbx,[rip+0x2deed]        # 4453d7 <_IO_stdin_used@@Base+0x173d7>
  4174ea:	lea    r8,[rip+0x2e64f]        # 445b40 <_IO_stdin_used@@Base+0x17b40>
  4174f1:	mov    rdx,rbx
  4174f4:	mov    ecx,0x169
  4174f9:	xor    eax,eax
  4174fb:	call   406180 <fprintf@plt>
  417500:	lea    rdi,[rip+0x29688]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  417507:	lea    rcx,[rip+0x2e65c]        # 445b6a <_IO_stdin_used@@Base+0x17b6a>
  41750e:	mov    rsi,rbx
  417511:	mov    edx,0x169
  417516:	call   406100 <__assert_fail@plt>
  41751b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000417520 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  417520:	push   r15
  417522:	push   r14
  417524:	push   r13
  417526:	push   r12
  417528:	push   rbx
  417529:	sub    rsp,0x190
  417530:	mov    r14,rcx
  417533:	mov    r15,rdx
  417536:	mov    r12,rsi
  417539:	mov    rbx,rdi
  41753c:	lea    r13,[rsp+0x8]
  417541:	mov    rdi,r13
  417544:	call   427520 <flatcc_builder_init@@Base>
  417549:	mov    rdi,r13
  41754c:	mov    rsi,rbx
  41754f:	mov    rdx,r12
  417552:	call   4175a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  417557:	mov    rdx,QWORD PTR [r14]
  41755a:	mov    rdi,r13
  41755d:	mov    rsi,r15
  417560:	call   42bb40 <flatcc_builder_copy_buffer@@Base>
  417565:	test   rax,rax
  417568:	je     417572 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x52>
  41756a:	mov    rdi,r15
  41756d:	call   418530 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1010>
  417572:	lea    rbx,[rsp+0x8]
  417577:	mov    rdi,rbx
  41757a:	call   42ba40 <flatcc_builder_get_buffer_size@@Base>
  41757f:	mov    QWORD PTR [r14],rax
  417582:	mov    rdi,rbx
  417585:	call   4278e0 <flatcc_builder_clear@@Base>
  41758a:	mov    rax,r15
  41758d:	add    rsp,0x190
  417594:	pop    rbx
  417595:	pop    r12
  417597:	pop    r13
  417599:	pop    r14
  41759b:	pop    r15
  41759d:	ret    
  41759e:	xchg   ax,ax
  4175a0:	push   rbp
  4175a1:	mov    rbp,rsp
  4175a4:	push   r15
  4175a6:	push   r14
  4175a8:	push   r13
  4175aa:	push   r12
  4175ac:	push   rbx
  4175ad:	and    rsp,0xffffffffffffffe0
  4175b1:	sub    rsp,0x100
  4175b8:	mov    QWORD PTR [rsp+0x40],rsi
  4175bd:	mov    eax,DWORD PTR [rsi+0xd8]
  4175c3:	mov    rcx,QWORD PTR [rdx+0x68]
  4175c7:	vxorps xmm0,xmm0,xmm0
  4175cb:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4175d1:	mov    QWORD PTR [rsp+0x30],rdi
  4175d6:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4175df:	mov    QWORD PTR [rsp+0xa0],0x0
  4175eb:	mov    DWORD PTR [rsp+0x60],eax
  4175ef:	mov    QWORD PTR [rsp+0x48],rdx
  4175f4:	mov    QWORD PTR [rsp+0xa8],rdx
  4175fc:	lea    rsi,[rip+0x137d]        # 418980 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  417603:	lea    rdx,[rsp+0x60]
  417608:	mov    QWORD PTR [rsp+0x38],rcx
  41760d:	mov    rdi,rcx
  417610:	vzeroupper 
  417613:	call   41b260 <fb_scope_table_visit@@Base>
  417618:	movsxd r15,DWORD PTR [rsp+0x64]
  41761d:	mov    esi,0x10
  417622:	mov    rdi,r15
  417625:	call   406150 <calloc@plt>
  41762a:	mov    r14,rax
  41762d:	mov    QWORD PTR [rsp+0x78],rax
  417632:	mov    ebx,DWORD PTR [rsp+0x68]
  417636:	movsxd rdi,ebx
  417639:	mov    esi,0x10
  41763e:	call   406150 <calloc@plt>
  417643:	mov    r13,rax
  417646:	mov    QWORD PTR [rsp+0x80],rax
  41764e:	mov    r12,QWORD PTR [rsp+0x70]
  417653:	mov    rdi,r12
  417656:	call   4061b0 <malloc@plt>
  41765b:	mov    QWORD PTR [rsp+0x88],rax
  417663:	mov    QWORD PTR [rsp+0x90],r14
  41766b:	mov    QWORD PTR [rsp+0x98],r13
  417673:	mov    QWORD PTR [rsp+0xa0],rax
  41767b:	test   r15,r15
  41767e:	jle    417685 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x165>
  417680:	test   r14,r14
  417683:	je     4176ad <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18d>
  417685:	test   ebx,ebx
  417687:	jle    41768e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16e>
  417689:	test   r13,r13
  41768c:	je     417698 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x178>
  41768e:	test   r12,r12
  417691:	je     417701 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1e1>
  417693:	test   rax,rax
  417696:	jne    417701 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1e1>
  417698:	test   r14,r14
  41769b:	je     4176ad <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18d>
  41769d:	mov    rdi,r14
  4176a0:	call   406040 <free@plt>
  4176a5:	mov    r13,QWORD PTR [rsp+0x80]
  4176ad:	test   r13,r13
  4176b0:	je     4176ba <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x19a>
  4176b2:	mov    rdi,r13
  4176b5:	call   406040 <free@plt>
  4176ba:	mov    rdi,QWORD PTR [rsp+0x88]
  4176c2:	test   rdi,rdi
  4176c5:	je     4176cc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
  4176c7:	call   406040 <free@plt>
  4176cc:	vxorps xmm0,xmm0,xmm0
  4176d0:	vmovups YMMWORD PTR [rsp+0x90],ymm0
  4176d9:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4176e2:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4176e8:	mov    ebx,0xffffffff
  4176ed:	mov    eax,ebx
  4176ef:	lea    rsp,[rbp-0x28]
  4176f3:	pop    rbx
  4176f4:	pop    r12
  4176f6:	pop    r13
  4176f8:	pop    r14
  4176fa:	pop    r15
  4176fc:	pop    rbp
  4176fd:	vzeroupper 
  417700:	ret    
  417701:	lea    rsi,[rip+0x1298]        # 4189a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
  417708:	lea    rdx,[rsp+0x60]
  41770d:	mov    rdi,QWORD PTR [rsp+0x38]
  417712:	call   41b260 <fb_scope_table_visit@@Base>
  417717:	mov    r15,QWORD PTR [rsp+0x78]
  41771c:	movsxd rbx,DWORD PTR [rsp+0x64]
  417721:	lea    rcx,[rip+0x1448]        # 418b70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e0>
  417728:	mov    edx,0x10
  41772d:	mov    rdi,r15
  417730:	mov    rsi,rbx
  417733:	call   406080 <qsort@plt>
  417738:	test   rbx,rbx
  41773b:	jle    417816 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f6>
  417741:	mov    edx,ebx
  417743:	lea    rcx,[rdx-0x1]
  417747:	mov    eax,edx
  417749:	and    eax,0x7
  41774c:	cmp    rcx,0x7
  417750:	jae    417762 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x242>
  417752:	xor    ecx,ecx
  417754:	test   rax,rax
  417757:	jne    4177f5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2d5>
  41775d:	jmp    417816 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f6>
  417762:	lea    rsi,[r15+0x70]
  417766:	sub    rdx,rax
  417769:	xor    ecx,ecx
  41776b:	nop    DWORD PTR [rax+rax*1+0x0]
  417770:	mov    rdi,QWORD PTR [rsi-0x70]
  417774:	mov    QWORD PTR [rdi+0xc8],rcx
  41777b:	mov    rdi,QWORD PTR [rsi-0x60]
  41777f:	lea    rbx,[rcx+0x1]
  417783:	mov    QWORD PTR [rdi+0xc8],rbx
  41778a:	mov    rdi,QWORD PTR [rsi-0x50]
  41778e:	lea    rbx,[rcx+0x2]
  417792:	mov    QWORD PTR [rdi+0xc8],rbx
  417799:	mov    rdi,QWORD PTR [rsi-0x40]
  41779d:	lea    rbx,[rcx+0x3]
  4177a1:	mov    QWORD PTR [rdi+0xc8],rbx
  4177a8:	mov    rdi,QWORD PTR [rsi-0x30]
  4177ac:	lea    rbx,[rcx+0x4]
  4177b0:	mov    QWORD PTR [rdi+0xc8],rbx
  4177b7:	mov    rdi,QWORD PTR [rsi-0x20]
  4177bb:	lea    rbx,[rcx+0x5]
  4177bf:	mov    QWORD PTR [rdi+0xc8],rbx
  4177c6:	mov    rdi,QWORD PTR [rsi-0x10]
  4177ca:	lea    rbx,[rcx+0x6]
  4177ce:	mov    QWORD PTR [rdi+0xc8],rbx
  4177d5:	mov    rdi,QWORD PTR [rsi]
  4177d8:	lea    rbx,[rcx+0x7]
  4177dc:	mov    QWORD PTR [rdi+0xc8],rbx
  4177e3:	add    rcx,0x8
  4177e7:	sub    rsi,0xffffffffffffff80
  4177eb:	cmp    rdx,rcx
  4177ee:	jne    417770 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x250>
  4177f0:	test   rax,rax
  4177f3:	je     417816 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f6>
  4177f5:	mov    rdx,rcx
  4177f8:	shl    rdx,0x4
  4177fc:	add    r15,rdx
  4177ff:	nop
  417800:	mov    rdx,QWORD PTR [r15]
  417803:	mov    QWORD PTR [rdx+0xc8],rcx
  41780a:	inc    rcx
  41780d:	add    r15,0x10
  417811:	dec    rax
  417814:	jne    417800 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2e0>
  417816:	mov    r15,QWORD PTR [rsp+0x80]
  41781e:	movsxd rbx,DWORD PTR [rsp+0x68]
  417823:	lea    rcx,[rip+0x1346]        # 418b70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e0>
  41782a:	mov    edx,0x10
  41782f:	mov    rdi,r15
  417832:	mov    rsi,rbx
  417835:	call   406080 <qsort@plt>
  41783a:	test   rbx,rbx
  41783d:	jle    417916 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f6>
  417843:	mov    edx,ebx
  417845:	lea    rcx,[rdx-0x1]
  417849:	mov    eax,edx
  41784b:	and    eax,0x7
  41784e:	cmp    rcx,0x7
  417852:	jae    417864 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x344>
  417854:	xor    ecx,ecx
  417856:	test   rax,rax
  417859:	jne    4178f5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3d5>
  41785f:	jmp    417916 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f6>
  417864:	lea    rsi,[r15+0x70]
  417868:	sub    rdx,rax
  41786b:	xor    ecx,ecx
  41786d:	nop    DWORD PTR [rax]
  417870:	mov    rdi,QWORD PTR [rsi-0x70]
  417874:	mov    QWORD PTR [rdi+0xc8],rcx
  41787b:	mov    rdi,QWORD PTR [rsi-0x60]
  41787f:	lea    rbx,[rcx+0x1]
  417883:	mov    QWORD PTR [rdi+0xc8],rbx
  41788a:	mov    rdi,QWORD PTR [rsi-0x50]
  41788e:	lea    rbx,[rcx+0x2]
  417892:	mov    QWORD PTR [rdi+0xc8],rbx
  417899:	mov    rdi,QWORD PTR [rsi-0x40]
  41789d:	lea    rbx,[rcx+0x3]
  4178a1:	mov    QWORD PTR [rdi+0xc8],rbx
  4178a8:	mov    rdi,QWORD PTR [rsi-0x30]
  4178ac:	lea    rbx,[rcx+0x4]
  4178b0:	mov    QWORD PTR [rdi+0xc8],rbx
  4178b7:	mov    rdi,QWORD PTR [rsi-0x20]
  4178bb:	lea    rbx,[rcx+0x5]
  4178bf:	mov    QWORD PTR [rdi+0xc8],rbx
  4178c6:	mov    rdi,QWORD PTR [rsi-0x10]
  4178ca:	lea    rbx,[rcx+0x6]
  4178ce:	mov    QWORD PTR [rdi+0xc8],rbx
  4178d5:	mov    rdi,QWORD PTR [rsi]
  4178d8:	lea    rbx,[rcx+0x7]
  4178dc:	mov    QWORD PTR [rdi+0xc8],rbx
  4178e3:	add    rcx,0x8
  4178e7:	sub    rsi,0xffffffffffffff80
  4178eb:	cmp    rdx,rcx
  4178ee:	jne    417870 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x350>
  4178f0:	test   rax,rax
  4178f3:	je     417916 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f6>
  4178f5:	mov    rdx,rcx
  4178f8:	shl    rdx,0x4
  4178fc:	add    r15,rdx
  4178ff:	nop
  417900:	mov    rdx,QWORD PTR [r15]
  417903:	mov    QWORD PTR [rdx+0xc8],rcx
  41790a:	inc    rcx
  41790d:	add    r15,0x10
  417911:	dec    rax
  417914:	jne    417900 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3e0>
  417916:	movsxd rdi,DWORD PTR [rsp+0x64]
  41791b:	test   rdi,rdi
  41791e:	jle    41793c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x41c>
  417920:	shl    rdi,0x2
  417924:	call   4061b0 <malloc@plt>
  417929:	test   rax,rax
  41792c:	mov    r12,QWORD PTR [rsp+0x30]
  417931:	je     41841d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xefd>
  417937:	mov    r15,rax
  41793a:	jmp    417944 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x424>
  41793c:	xor    r15d,r15d
  41793f:	mov    r12,QWORD PTR [rsp+0x30]
  417944:	mov    rax,QWORD PTR [rsp+0x40]
  417949:	cmp    DWORD PTR [rax+0xdc],0x0
  417950:	je     417965 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x445>
  417952:	lea    rsi,[rip+0x2ec19]        # 446572 <_IO_stdin_used@@Base+0x18572>
  417959:	mov    rdi,r12
  41795c:	xor    edx,edx
  41795e:	mov    ecx,0x2
  417963:	jmp    417973 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x453>
  417965:	lea    rsi,[rip+0x2ec06]        # 446572 <_IO_stdin_used@@Base+0x18572>
  41796c:	mov    rdi,r12
  41796f:	xor    edx,edx
  417971:	xor    ecx,ecx
  417973:	call   4282b0 <flatcc_builder_start_buffer@@Base>
  417978:	test   eax,eax
  41797a:	jne    417989 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x469>
  41797c:	mov    rdi,r12
  41797f:	mov    esi,0x5
  417984:	call   429550 <flatcc_builder_start_table@@Base>
  417989:	mov    rcx,QWORD PTR [rsp+0x48]
  41798e:	cmp    WORD PTR [rcx+0x20],0x2
  417993:	jne    4179d0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  417995:	mov    rsi,QWORD PTR [rcx+0x10]
  417999:	mov    rax,QWORD PTR [rsp+0x48]
  41799e:	movsxd rdx,DWORD PTR [rax+0x18]
  4179a2:	mov    rdi,r12
  4179a5:	call   42b670 <flatcc_builder_create_string@@Base>
  4179aa:	mov    rcx,QWORD PTR [rsp+0x48]
  4179af:	test   eax,eax
  4179b1:	je     4179d0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  4179b3:	mov    r14d,eax
  4179b6:	mov    rdi,r12
  4179b9:	mov    esi,0x2
  4179be:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  4179c3:	mov    rcx,QWORD PTR [rsp+0x48]
  4179c8:	test   rax,rax
  4179cb:	je     4179d0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  4179cd:	mov    DWORD PTR [rax],r14d
  4179d0:	cmp    WORD PTR [rcx+0x38],0x2
  4179d5:	jne    417a08 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  4179d7:	mov    rax,QWORD PTR [rsp+0x48]
  4179dc:	mov    rsi,QWORD PTR [rax+0x28]
  4179e0:	movsxd rdx,DWORD PTR [rax+0x30]
  4179e4:	mov    rdi,r12
  4179e7:	call   42b670 <flatcc_builder_create_string@@Base>
  4179ec:	test   eax,eax
  4179ee:	je     417a08 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  4179f0:	mov    r14d,eax
  4179f3:	mov    rdi,r12
  4179f6:	mov    esi,0x3
  4179fb:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417a00:	test   rax,rax
  417a03:	je     417a08 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  417a05:	mov    DWORD PTR [rax],r14d
  417a08:	mov    eax,DWORD PTR [rsp+0x64]
  417a0c:	mov    QWORD PTR [rsp+0xd0],rax
  417a14:	test   eax,eax
  417a16:	mov    QWORD PTR [rsp+0xc0],r15
  417a1e:	jle    418078 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb58>
  417a24:	mov    rax,QWORD PTR [rsp+0x78]
  417a29:	mov    QWORD PTR [rsp+0xd8],rax
  417a31:	xor    eax,eax
  417a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417a3d:	nop    DWORD PTR [rax]
  417a40:	mov    QWORD PTR [rsp+0xe0],rax
  417a48:	mov    rbx,rax
  417a4b:	shl    rbx,0x4
  417a4f:	mov    r14,QWORD PTR [rsp+0xd8]
  417a57:	mov    r12,QWORD PTR [r14+rbx*1]
  417a5b:	mov    rdi,QWORD PTR [rsp+0x30]
  417a60:	mov    esi,0x5
  417a65:	call   429550 <flatcc_builder_start_table@@Base>
  417a6a:	mov    rsi,QWORD PTR [r14+rbx*1+0x8]
  417a6f:	mov    rbx,QWORD PTR [rsp+0x30]
  417a74:	mov    rdi,rbx
  417a77:	call   42b7a0 <flatcc_builder_create_string_str@@Base>
  417a7c:	test   eax,eax
  417a7e:	je     417a95 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x575>
  417a80:	mov    r14d,eax
  417a83:	mov    rdi,rbx
  417a86:	xor    esi,esi
  417a88:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417a8d:	test   rax,rax
  417a90:	je     417a95 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x575>
  417a92:	mov    DWORD PTR [rax],r14d
  417a95:	mov    rdi,rbx
  417a98:	call   429160 <flatcc_builder_start_offset_vector@@Base>
  417a9d:	mov    r14,QWORD PTR [r12+0x28]
  417aa2:	test   r14,r14
  417aa5:	je     417f80 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa60>
  417aab:	xor    eax,eax
  417aad:	mov    QWORD PTR [rsp+0x40],r12
  417ab2:	jmp    417ad6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5b6>
  417ab4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417abe:	xchg   ax,ax
  417ac0:	mov    eax,DWORD PTR [rsp+0xc8]
  417ac7:	or     al,r15b
  417aca:	mov    r14,QWORD PTR [r14]
  417acd:	test   r14,r14
  417ad0:	je     417f80 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa60>
  417ad6:	mov    DWORD PTR [rsp+0xc8],eax
  417add:	test   al,al
  417adf:	sete   r15b
  417ae3:	mov    eax,DWORD PTR [r14+0x70]
  417ae7:	test   al,al
  417ae9:	sets   r12b
  417aed:	mov    DWORD PTR [rsp+0x5c],eax
  417af1:	mov    r13d,eax
  417af4:	shr    r13b,0x2
  417af8:	and    r13b,0x1
  417afc:	lea    rax,[r14+0x18]
  417b00:	mov    QWORD PTR [rsp+0x38],rax
  417b05:	cmp    WORD PTR [r14+0x28],0xe
  417b0b:	jne    417c60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x740>
  417b11:	mov    rax,QWORD PTR [rsp+0x38]
  417b16:	mov    rax,QWORD PTR [rax]
  417b19:	cmp    WORD PTR [rax+0x10],0x4
  417b1e:	jne    417c60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x740>
  417b24:	mov    BYTE PTR [rsp+0x50],r15b
  417b29:	mov    rdi,rbx
  417b2c:	mov    esi,0x9
  417b31:	call   429550 <flatcc_builder_start_table@@Base>
  417b36:	mov    rdi,rbx
  417b39:	call   4293e0 <flatcc_builder_start_string@@Base>
  417b3e:	mov    rax,QWORD PTR [r14+0x8]
  417b42:	mov    rsi,QWORD PTR [rax]
  417b45:	mov    rdx,QWORD PTR [rax+0x8]
  417b49:	mov    rdi,rbx
  417b4c:	call   428df0 <flatcc_builder_append_string@@Base>
  417b51:	mov    edx,0x5
  417b56:	mov    rdi,rbx
  417b59:	lea    rsi,[rip+0x1e5e0]        # 436140 <_IO_stdin_used@@Base+0x8140>
  417b60:	call   428df0 <flatcc_builder_append_string@@Base>
  417b65:	mov    rdi,rbx
  417b68:	call   42b810 <flatcc_builder_end_string@@Base>
  417b6d:	test   eax,eax
  417b6f:	je     417b86 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x666>
  417b71:	mov    r15d,eax
  417b74:	mov    rdi,rbx
  417b77:	xor    esi,esi
  417b79:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417b7e:	test   rax,rax
  417b81:	je     417b86 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x666>
  417b83:	mov    DWORD PTR [rax],r15d
  417b86:	mov    rdi,rbx
  417b89:	mov    esi,0x3
  417b8e:	call   429550 <flatcc_builder_start_table@@Base>
  417b93:	test   eax,eax
  417b95:	movzx  r15d,BYTE PTR [rsp+0x50]
  417b9b:	je     417d7e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x85e>
  417ba1:	mov    ebx,DWORD PTR [r14+0x88]
  417ba8:	add    ebx,ebx
  417baa:	add    bx,0x2
  417bae:	je     417bd1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6b1>
  417bb0:	mov    edx,0x2
  417bb5:	mov    rdi,QWORD PTR [rsp+0x30]
  417bba:	mov    esi,0x3
  417bbf:	mov    ecx,0x2
  417bc4:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417bc9:	test   rax,rax
  417bcc:	je     417bd1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6b1>
  417bce:	mov    WORD PTR [rax],bx
  417bd1:	movzx  ebx,WORD PTR [r14+0x88]
  417bd9:	dec    bx
  417bdc:	je     417bff <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6df>
  417bde:	mov    edx,0x2
  417be3:	mov    rdi,QWORD PTR [rsp+0x30]
  417be8:	mov    esi,0x2
  417bed:	mov    ecx,0x2
  417bf2:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417bf7:	test   rax,rax
  417bfa:	je     417bff <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6df>
  417bfc:	mov    WORD PTR [rax],bx
  417bff:	test   r13b,r13b
  417c02:	mov    rbx,QWORD PTR [rsp+0x30]
  417c07:	je     417c28 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x708>
  417c09:	mov    edx,0x1
  417c0e:	mov    rdi,rbx
  417c11:	mov    esi,0x6
  417c16:	mov    ecx,0x1
  417c1b:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417c20:	test   rax,rax
  417c23:	je     417c28 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x708>
  417c25:	mov    BYTE PTR [rax],r13b
  417c28:	mov    rdi,rbx
  417c2b:	lea    rsi,[rip+0x2e8f0]        # 446522 <_IO_stdin_used@@Base+0x18522>
  417c32:	mov    edx,0x2
  417c37:	call   429ef0 <flatcc_builder_check_required@@Base>
  417c3c:	test   eax,eax
  417c3e:	je     418474 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf54>
  417c44:	mov    rdi,rbx
  417c47:	call   429f60 <flatcc_builder_end_table@@Base>
  417c4c:	test   eax,eax
  417c4e:	je     417c60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x740>
  417c50:	mov    rdi,rbx
  417c53:	mov    esi,eax
  417c55:	call   428b30 <flatcc_builder_offset_vector_push@@Base>
  417c5a:	nop    WORD PTR [rax+rax*1+0x0]
  417c60:	mov    BYTE PTR [rsp+0x50],r13b
  417c65:	mov    r13d,r12d
  417c68:	mov    r12d,r15d
  417c6b:	mov    rdi,rbx
  417c6e:	mov    esi,0x9
  417c73:	call   429550 <flatcc_builder_start_table@@Base>
  417c78:	mov    rax,QWORD PTR [r14+0x8]
  417c7c:	mov    rsi,QWORD PTR [rax]
  417c7f:	mov    rdx,QWORD PTR [rax+0x8]
  417c83:	mov    rdi,rbx
  417c86:	call   42b670 <flatcc_builder_create_string@@Base>
  417c8b:	mov    r15,rbx
  417c8e:	test   eax,eax
  417c90:	je     417ca5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x785>
  417c92:	mov    ebx,eax
  417c94:	mov    rdi,r15
  417c97:	xor    esi,esi
  417c99:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417c9e:	test   rax,rax
  417ca1:	je     417ca5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x785>
  417ca3:	mov    DWORD PTR [rax],ebx
  417ca5:	mov    rcx,QWORD PTR [rsp+0x38]
  417caa:	mov    rax,QWORD PTR [rcx+0x10]
  417cae:	mov    QWORD PTR [rsp+0x10],rax
  417cb3:	vmovups xmm0,XMMWORD PTR [rcx]
  417cb7:	vmovups XMMWORD PTR [rsp],xmm0
  417cbc:	mov    rdi,r15
  417cbf:	call   418b80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  417cc4:	test   eax,eax
  417cc6:	je     417ce0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7c0>
  417cc8:	mov    ebx,eax
  417cca:	mov    rdi,QWORD PTR [rsp+0x30]
  417ccf:	mov    esi,0x1
  417cd4:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417cd9:	test   rax,rax
  417cdc:	je     417ce0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7c0>
  417cde:	mov    DWORD PTR [rax],ebx
  417ce0:	mov    r15d,r12d
  417ce3:	and    r15b,r13b
  417ce6:	mov    rax,QWORD PTR [rsp+0x40]
  417ceb:	movzx  eax,WORD PTR [rax+0x10]
  417cef:	cmp    ax,0x1
  417cf3:	je     417d40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x820>
  417cf5:	test   ax,ax
  417cf8:	movzx  r13d,BYTE PTR [rsp+0x50]
  417cfe:	jne    417f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417d04:	mov    eax,DWORD PTR [r14+0x58]
  417d08:	add    eax,0xfffffffd
  417d0b:	cmp    ax,0x3
  417d0f:	ja     417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417d15:	movzx  eax,ax
  417d18:	lea    rcx,[rip+0x2e7b9]        # 4464d8 <_IO_stdin_used@@Base+0x184d8>
  417d1f:	movsxd rax,DWORD PTR [rcx+rax*4]
  417d23:	add    rax,rcx
  417d26:	jmp    rax
  417d28:	mov    rbx,QWORD PTR [r14+0x48]
  417d2c:	test   rbx,rbx
  417d2f:	jne    417e32 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x912>
  417d35:	jmp    417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417d3a:	nop    WORD PTR [rax+rax*1+0x0]
  417d40:	movzx  ebx,WORD PTR [r14+0x78]
  417d45:	test   bx,bx
  417d48:	movzx  r13d,BYTE PTR [rsp+0x50]
  417d4e:	je     417f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417d54:	mov    edx,0x2
  417d59:	mov    rdi,QWORD PTR [rsp+0x30]
  417d5e:	mov    esi,0x3
  417d63:	mov    ecx,0x2
  417d68:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417d6d:	test   rax,rax
  417d70:	je     417f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417d76:	mov    WORD PTR [rax],bx
  417d79:	jmp    417f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417d7e:	mov    edx,0x1
  417d83:	mov    rdi,rbx
  417d86:	xor    esi,esi
  417d88:	mov    ecx,0x1
  417d8d:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417d92:	test   rax,rax
  417d95:	je     417ba1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  417d9b:	mov    BYTE PTR [rax],0x1
  417d9e:	mov    rdi,rbx
  417da1:	lea    rsi,[rip+0x2e778]        # 446520 <_IO_stdin_used@@Base+0x18520>
  417da8:	xor    edx,edx
  417daa:	call   429ef0 <flatcc_builder_check_required@@Base>
  417daf:	test   eax,eax
  417db1:	je     4184b2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf92>
  417db7:	mov    rdi,rbx
  417dba:	call   429f60 <flatcc_builder_end_table@@Base>
  417dbf:	test   eax,eax
  417dc1:	je     417ba1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  417dc7:	mov    rdi,rbx
  417dca:	mov    ebx,eax
  417dcc:	mov    esi,0x1
  417dd1:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417dd6:	test   rax,rax
  417dd9:	je     417ba1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  417ddf:	mov    DWORD PTR [rax],ebx
  417de1:	jmp    417ba1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  417de6:	vmovsd xmm0,QWORD PTR [r14+0x48]
  417dec:	vucomisd xmm0,QWORD PTR [rip+0x2e6dc]        # 4464d0 <_IO_stdin_used@@Base+0x184d0>
  417df4:	jne    417df8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8d8>
  417df6:	jnp    417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417df8:	mov    edx,0x8
  417dfd:	mov    rdi,QWORD PTR [rsp+0x30]
  417e02:	mov    esi,0x5
  417e07:	mov    ecx,0x8
  417e0c:	vmovsd QWORD PTR [rsp+0x38],xmm0
  417e12:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417e17:	vmovsd xmm0,QWORD PTR [rsp+0x38]
  417e1d:	test   rax,rax
  417e20:	je     417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417e22:	vmovsd QWORD PTR [rax],xmm0
  417e26:	jmp    417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417e28:	movzx  ebx,BYTE PTR [r14+0x48]
  417e2d:	test   rbx,rbx
  417e30:	je     417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417e32:	mov    edx,0x8
  417e37:	mov    rdi,QWORD PTR [rsp+0x30]
  417e3c:	mov    esi,0x4
  417e41:	mov    ecx,0x8
  417e46:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417e4b:	test   rax,rax
  417e4e:	je     417e53 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417e50:	mov    QWORD PTR [rax],rbx
  417e53:	shr    DWORD PTR [rsp+0x5c],0x8
  417e58:	movzx  ebx,WORD PTR [r14+0x88]
  417e60:	test   bx,bx
  417e63:	je     417e86 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x966>
  417e65:	mov    edx,0x2
  417e6a:	mov    rdi,QWORD PTR [rsp+0x30]
  417e6f:	mov    esi,0x2
  417e74:	mov    ecx,0x2
  417e79:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417e7e:	test   rax,rax
  417e81:	je     417e86 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x966>
  417e83:	mov    WORD PTR [rax],bx
  417e86:	mov    ebx,DWORD PTR [r14+0x88]
  417e8d:	add    ebx,ebx
  417e8f:	add    bx,0x4
  417e93:	je     417eb6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x996>
  417e95:	mov    edx,0x2
  417e9a:	mov    rdi,QWORD PTR [rsp+0x30]
  417e9f:	mov    esi,0x3
  417ea4:	mov    ecx,0x2
  417ea9:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417eae:	test   rax,rax
  417eb1:	je     417eb6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x996>
  417eb3:	mov    WORD PTR [rax],bx
  417eb6:	mov    ebx,DWORD PTR [rsp+0x5c]
  417eba:	and    bl,0x1
  417ebd:	test   r15b,r15b
  417ec0:	je     417ee3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9c3>
  417ec2:	mov    edx,0x1
  417ec7:	mov    rdi,QWORD PTR [rsp+0x30]
  417ecc:	mov    esi,0x8
  417ed1:	mov    ecx,0x1
  417ed6:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417edb:	test   rax,rax
  417ede:	je     417ee3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9c3>
  417ee0:	mov    BYTE PTR [rax],r15b
  417ee3:	test   bl,bl
  417ee5:	je     417f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417ee7:	mov    r12d,ebx
  417eea:	mov    edx,0x1
  417eef:	mov    rdi,QWORD PTR [rsp+0x30]
  417ef4:	mov    esi,0x7
  417ef9:	mov    ecx,0x1
  417efe:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417f03:	test   rax,rax
  417f06:	je     417f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417f08:	mov    BYTE PTR [rax],r12b
  417f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  417f10:	test   r13b,r13b
  417f13:	mov    rbx,QWORD PTR [rsp+0x30]
  417f18:	je     417f39 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  417f1a:	mov    edx,0x1
  417f1f:	mov    rdi,rbx
  417f22:	mov    esi,0x6
  417f27:	mov    ecx,0x1
  417f2c:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417f31:	test   rax,rax
  417f34:	je     417f39 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  417f36:	mov    BYTE PTR [rax],r13b
  417f39:	mov    rdi,rbx
  417f3c:	lea    rsi,[rip+0x2e5df]        # 446522 <_IO_stdin_used@@Base+0x18522>
  417f43:	mov    edx,0x2
  417f48:	call   429ef0 <flatcc_builder_check_required@@Base>
  417f4d:	test   eax,eax
  417f4f:	je     418474 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf54>
  417f55:	mov    rdi,rbx
  417f58:	call   429f60 <flatcc_builder_end_table@@Base>
  417f5d:	test   eax,eax
  417f5f:	mov    r12,QWORD PTR [rsp+0x40]
  417f64:	je     417ac0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
  417f6a:	mov    rdi,rbx
  417f6d:	mov    esi,eax
  417f6f:	call   428b30 <flatcc_builder_offset_vector_push@@Base>
  417f74:	jmp    417ac0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
  417f79:	nop    DWORD PTR [rax+0x0]
  417f80:	mov    rdi,rbx
  417f83:	call   429320 <flatcc_builder_end_offset_vector@@Base>
  417f88:	test   eax,eax
  417f8a:	je     417fa4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa84>
  417f8c:	mov    ebx,eax
  417f8e:	mov    rdi,QWORD PTR [rsp+0x30]
  417f93:	mov    esi,0x1
  417f98:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  417f9d:	test   rax,rax
  417fa0:	je     417fa4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa84>
  417fa2:	mov    DWORD PTR [rax],ebx
  417fa4:	cmp    WORD PTR [r12+0x10],0x1
  417fab:	mov    r15,QWORD PTR [rsp+0xc0]
  417fb3:	jne    418002 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae2>
  417fb5:	mov    ebx,DWORD PTR [r12+0xb8]
  417fbd:	test   ebx,ebx
  417fbf:	je     417fe1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac1>
  417fc1:	mov    edx,0x4
  417fc6:	mov    rdi,QWORD PTR [rsp+0x30]
  417fcb:	mov    esi,0x4
  417fd0:	mov    ecx,0x4
  417fd5:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417fda:	test   rax,rax
  417fdd:	je     417fe1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac1>
  417fdf:	mov    DWORD PTR [rax],ebx
  417fe1:	mov    edx,0x1
  417fe6:	mov    rdi,QWORD PTR [rsp+0x30]
  417feb:	mov    esi,0x2
  417ff0:	mov    ecx,0x1
  417ff5:	call   42a8d0 <flatcc_builder_table_add@@Base>
  417ffa:	test   rax,rax
  417ffd:	je     418002 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae2>
  417fff:	mov    BYTE PTR [rax],0x1
  418002:	movzx  ebx,WORD PTR [r12+0xb0]
  41800b:	test   ebx,ebx
  41800d:	je     41802f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb0f>
  41800f:	mov    edx,0x4
  418014:	mov    rdi,QWORD PTR [rsp+0x30]
  418019:	mov    esi,0x3
  41801e:	mov    ecx,0x4
  418023:	call   42a8d0 <flatcc_builder_table_add@@Base>
  418028:	test   rax,rax
  41802b:	je     41802f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb0f>
  41802d:	mov    DWORD PTR [rax],ebx
  41802f:	mov    r12,QWORD PTR [rsp+0x30]
  418034:	mov    rdi,r12
  418037:	lea    rsi,[rip+0x2e4ea]        # 446528 <_IO_stdin_used@@Base+0x18528>
  41803e:	mov    edx,0x2
  418043:	call   429ef0 <flatcc_builder_check_required@@Base>
  418048:	test   eax,eax
  41804a:	je     4184d1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfb1>
  418050:	mov    rdi,r12
  418053:	call   429f60 <flatcc_builder_end_table@@Base>
  418058:	mov    rcx,QWORD PTR [rsp+0xe0]
  418060:	mov    DWORD PTR [r15+rcx*4],eax
  418064:	mov    rax,rcx
  418067:	inc    rax
  41806a:	cmp    rax,QWORD PTR [rsp+0xd0]
  418072:	jne    417a40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x520>
  418078:	movsxd rdx,DWORD PTR [rsp+0xd0]
  418080:	mov    rdi,r12
  418083:	mov    rsi,r15
  418086:	call   4291d0 <flatcc_builder_create_offset_vector@@Base>
  41808b:	test   eax,eax
  41808d:	je     4180a4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb84>
  41808f:	mov    r14d,eax
  418092:	mov    rdi,r12
  418095:	xor    esi,esi
  418097:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  41809c:	test   rax,rax
  41809f:	je     4180a4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb84>
  4180a1:	mov    DWORD PTR [rax],r14d
  4180a4:	mov    rax,QWORD PTR [rsp+0x80]
  4180ac:	mov    QWORD PTR [rsp+0x50],rax
  4180b1:	mov    r14d,DWORD PTR [rsp+0x68]
  4180b6:	mov    rdi,r12
  4180b9:	call   429160 <flatcc_builder_start_offset_vector@@Base>
  4180be:	mov    QWORD PTR [rsp+0xc8],r14
  4180c6:	test   r14d,r14d
  4180c9:	jle    41833b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe1b>
  4180cf:	xor    r14d,r14d
  4180d2:	lea    r13,[rip+0x2e455]        # 44652e <_IO_stdin_used@@Base+0x1852e>
  4180d9:	jmp    4180f1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbd1>
  4180db:	nop    DWORD PTR [rax+rax*1+0x0]
  4180e0:	inc    r14
  4180e3:	cmp    r14,QWORD PTR [rsp+0xc8]
  4180eb:	je     41833b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe1b>
  4180f1:	mov    rbx,r14
  4180f4:	shl    rbx,0x4
  4180f8:	mov    r15,QWORD PTR [rsp+0x50]
  4180fd:	mov    rax,QWORD PTR [r15+rbx*1]
  418101:	mov    QWORD PTR [rsp+0x38],rax
  418106:	movzx  eax,WORD PTR [rax+0x10]
  41810a:	mov    WORD PTR [rsp+0x40],ax
  41810f:	mov    rdi,r12
  418112:	mov    esi,0x4
  418117:	call   429550 <flatcc_builder_start_table@@Base>
  41811c:	mov    rsi,QWORD PTR [r15+rbx*1+0x8]
  418121:	mov    rdi,r12
  418124:	call   42b7a0 <flatcc_builder_create_string_str@@Base>
  418129:	test   eax,eax
  41812b:	je     418140 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc20>
  41812d:	mov    ebx,eax
  41812f:	mov    rdi,r12
  418132:	xor    esi,esi
  418134:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  418139:	test   rax,rax
  41813c:	je     418140 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc20>
  41813e:	mov    DWORD PTR [rax],ebx
  418140:	mov    rdi,r12
  418143:	call   429160 <flatcc_builder_start_offset_vector@@Base>
  418148:	mov    rax,QWORD PTR [rsp+0x38]
  41814d:	mov    r15,QWORD PTR [rax+0x28]
  418151:	test   r15,r15
  418154:	mov    rbx,r12
  418157:	je     418270 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd50>
  41815d:	cmp    WORD PTR [rsp+0x40],0x4
  418163:	mov    r12d,0x0
  418169:	cmove  r12,QWORD PTR [rsp+0xc0]
  418172:	jmp    41818c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc6c>
  418174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41817e:	xchg   ax,ax
  418180:	mov    r15,QWORD PTR [r15]
  418183:	test   r15,r15
  418186:	je     418270 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd50>
  41818c:	mov    rdi,rbx
  41818f:	mov    esi,0x3
  418194:	call   429550 <flatcc_builder_start_table@@Base>
  418199:	mov    rax,QWORD PTR [r15+0x8]
  41819d:	mov    rsi,QWORD PTR [rax]
  4181a0:	mov    rdx,QWORD PTR [rax+0x8]
  4181a4:	mov    rdi,rbx
  4181a7:	call   42b670 <flatcc_builder_create_string@@Base>
  4181ac:	test   eax,eax
  4181ae:	je     4181c5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xca5>
  4181b0:	mov    ebx,eax
  4181b2:	mov    rdi,QWORD PTR [rsp+0x30]
  4181b7:	xor    esi,esi
  4181b9:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  4181be:	test   rax,rax
  4181c1:	je     4181c5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xca5>
  4181c3:	mov    DWORD PTR [rax],ebx
  4181c5:	test   r12,r12
  4181c8:	je     418200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  4181ca:	cmp    WORD PTR [r15+0x28],0xe
  4181d0:	jne    418200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  4181d2:	mov    rax,QWORD PTR [r15+0x18]
  4181d6:	mov    rax,QWORD PTR [rax+0xc8]
  4181dd:	mov    ebx,DWORD PTR [r12+rax*4]
  4181e1:	test   ebx,ebx
  4181e3:	je     418200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  4181e5:	mov    rdi,QWORD PTR [rsp+0x30]
  4181ea:	mov    esi,0x2
  4181ef:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  4181f4:	test   rax,rax
  4181f7:	je     418200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  4181f9:	mov    DWORD PTR [rax],ebx
  4181fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418200:	mov    rbx,QWORD PTR [r15+0x48]
  418204:	test   rbx,rbx
  418207:	je     41822a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd0a>
  418209:	mov    edx,0x8
  41820e:	mov    rdi,QWORD PTR [rsp+0x30]
  418213:	mov    esi,0x1
  418218:	mov    ecx,0x8
  41821d:	call   42a8d0 <flatcc_builder_table_add@@Base>
  418222:	test   rax,rax
  418225:	je     41822a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd0a>
  418227:	mov    QWORD PTR [rax],rbx
  41822a:	mov    rbx,QWORD PTR [rsp+0x30]
  41822f:	mov    rdi,rbx
  418232:	mov    rsi,r13
  418235:	mov    edx,0x1
  41823a:	call   429ef0 <flatcc_builder_check_required@@Base>
  41823f:	test   eax,eax
  418241:	je     418493 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf73>
  418247:	mov    rdi,rbx
  41824a:	call   429f60 <flatcc_builder_end_table@@Base>
  41824f:	test   eax,eax
  418251:	je     418180 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc60>
  418257:	mov    rdi,rbx
  41825a:	mov    esi,eax
  41825c:	call   428b30 <flatcc_builder_offset_vector_push@@Base>
  418261:	jmp    418180 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc60>
  418266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418270:	mov    rdi,rbx
  418273:	call   429320 <flatcc_builder_end_offset_vector@@Base>
  418278:	test   eax,eax
  41827a:	je     418294 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd74>
  41827c:	mov    ebx,eax
  41827e:	mov    rdi,QWORD PTR [rsp+0x30]
  418283:	mov    esi,0x1
  418288:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  41828d:	test   rax,rax
  418290:	je     418294 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd74>
  418292:	mov    DWORD PTR [rax],ebx
  418294:	cmp    WORD PTR [rsp+0x40],0x4
  41829a:	sete   bl
  41829d:	jne    4182bf <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd9f>
  41829f:	mov    edx,0x1
  4182a4:	mov    rdi,QWORD PTR [rsp+0x30]
  4182a9:	mov    esi,0x2
  4182ae:	mov    ecx,0x1
  4182b3:	call   42a8d0 <flatcc_builder_table_add@@Base>
  4182b8:	test   rax,rax
  4182bb:	je     4182bf <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd9f>
  4182bd:	mov    BYTE PTR [rax],bl
  4182bf:	mov    rcx,QWORD PTR [rsp+0x38]
  4182c4:	mov    rax,QWORD PTR [rcx+0x58]
  4182c8:	mov    QWORD PTR [rsp+0x10],rax
  4182cd:	vmovups xmm0,XMMWORD PTR [rcx+0x48]
  4182d2:	vmovups XMMWORD PTR [rsp],xmm0
  4182d7:	mov    r12,QWORD PTR [rsp+0x30]
  4182dc:	mov    rdi,r12
  4182df:	call   418b80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  4182e4:	test   eax,eax
  4182e6:	je     418300 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xde0>
  4182e8:	mov    r15d,eax
  4182eb:	mov    rdi,r12
  4182ee:	mov    esi,0x3
  4182f3:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  4182f8:	test   rax,rax
  4182fb:	je     418300 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xde0>
  4182fd:	mov    DWORD PTR [rax],r15d
  418300:	mov    rdi,r12
  418303:	lea    rsi,[rip+0x2e228]        # 446532 <_IO_stdin_used@@Base+0x18532>
  41830a:	mov    edx,0x3
  41830f:	call   429ef0 <flatcc_builder_check_required@@Base>
  418314:	test   eax,eax
  418316:	je     4184f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfd0>
  41831c:	mov    rdi,r12
  41831f:	call   429f60 <flatcc_builder_end_table@@Base>
  418324:	test   eax,eax
  418326:	je     4180e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbc0>
  41832c:	mov    rdi,r12
  41832f:	mov    esi,eax
  418331:	call   428b30 <flatcc_builder_offset_vector_push@@Base>
  418336:	jmp    4180e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbc0>
  41833b:	mov    rdi,r12
  41833e:	call   429320 <flatcc_builder_end_offset_vector@@Base>
  418343:	test   eax,eax
  418345:	je     41835f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  418347:	mov    r14d,eax
  41834a:	mov    rdi,r12
  41834d:	mov    esi,0x1
  418352:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  418357:	test   rax,rax
  41835a:	je     41835f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  41835c:	mov    DWORD PTR [rax],r14d
  41835f:	mov    rax,QWORD PTR [rsp+0x48]
  418364:	mov    rax,QWORD PTR [rax+0x58]
  418368:	test   rax,rax
  41836b:	mov    r14,QWORD PTR [rsp+0xc0]
  418373:	je     418380 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  418375:	cmp    WORD PTR [rax+0x10],0x0
  41837a:	je     418442 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf22>
  418380:	lea    rsi,[rip+0x2e1b3]        # 44653a <_IO_stdin_used@@Base+0x1853a>
  418387:	mov    rbx,QWORD PTR [rsp+0x30]
  41838c:	mov    rdi,rbx
  41838f:	mov    edx,0x2
  418394:	call   429ef0 <flatcc_builder_check_required@@Base>
  418399:	test   eax,eax
  41839b:	je     41850f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfef>
  4183a1:	mov    rdi,rbx
  4183a4:	call   429f60 <flatcc_builder_end_table@@Base>
  4183a9:	mov    rdi,rbx
  4183ac:	mov    esi,eax
  4183ae:	call   4284d0 <flatcc_builder_end_buffer@@Base>
  4183b3:	mov    rdi,QWORD PTR [rsp+0x78]
  4183b8:	test   rdi,rdi
  4183bb:	je     4183c2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xea2>
  4183bd:	call   406040 <free@plt>
  4183c2:	mov    rdi,QWORD PTR [rsp+0x80]
  4183ca:	test   rdi,rdi
  4183cd:	je     4183d4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xeb4>
  4183cf:	call   406040 <free@plt>
  4183d4:	mov    rdi,QWORD PTR [rsp+0x88]
  4183dc:	test   rdi,rdi
  4183df:	je     4183e6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xec6>
  4183e1:	call   406040 <free@plt>
  4183e6:	vxorps xmm0,xmm0,xmm0
  4183ea:	vmovups YMMWORD PTR [rsp+0x90],ymm0
  4183f3:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4183fc:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  418402:	xor    ebx,ebx
  418404:	test   r14,r14
  418407:	je     4176ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1cd>
  41840d:	mov    rdi,r14
  418410:	vzeroupper 
  418413:	call   406040 <free@plt>
  418418:	jmp    4176ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1cd>
  41841d:	mov    rdi,QWORD PTR [rsp+0x78]
  418422:	test   rdi,rdi
  418425:	je     41842c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0c>
  418427:	call   406040 <free@plt>
  41842c:	mov    rdi,QWORD PTR [rsp+0x80]
  418434:	test   rdi,rdi
  418437:	jne    4176b5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x195>
  41843d:	jmp    4176ba <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x19a>
  418442:	mov    rax,QWORD PTR [rax+0xc8]
  418449:	mov    ebx,DWORD PTR [r14+rax*4]
  41844d:	test   ebx,ebx
  41844f:	je     418380 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  418455:	mov    rdi,QWORD PTR [rsp+0x30]
  41845a:	mov    esi,0x4
  41845f:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  418464:	test   rax,rax
  418467:	je     418380 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  41846d:	mov    DWORD PTR [rax],ebx
  41846f:	jmp    418380 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  418474:	lea    rdi,[rip+0x2e245]        # 4466c0 <_IO_stdin_used@@Base+0x186c0>
  41847b:	lea    rsi,[rip+0x2e182]        # 446604 <_IO_stdin_used@@Base+0x18604>
  418482:	lea    rcx,[rip+0x2e2c7]        # 446750 <_IO_stdin_used@@Base+0x18750>
  418489:	mov    edx,0x1d
  41848e:	call   406100 <__assert_fail@plt>
  418493:	lea    rdi,[rip+0x2e3d5]        # 44686f <_IO_stdin_used@@Base+0x1886f>
  41849a:	lea    rsi,[rip+0x2e163]        # 446604 <_IO_stdin_used@@Base+0x18604>
  4184a1:	lea    rcx,[rip+0x2e45d]        # 446905 <_IO_stdin_used@@Base+0x18905>
  4184a8:	mov    edx,0x19
  4184ad:	call   406100 <__assert_fail@plt>
  4184b2:	lea    rdi,[rip+0x2e0be]        # 446577 <_IO_stdin_used@@Base+0x18577>
  4184b9:	lea    rsi,[rip+0x2e144]        # 446604 <_IO_stdin_used@@Base+0x18604>
  4184c0:	lea    rcx,[rip+0x2e1b6]        # 44667d <_IO_stdin_used@@Base+0x1867d>
  4184c7:	mov    edx,0x17
  4184cc:	call   406100 <__assert_fail@plt>
  4184d1:	lea    rdi,[rip+0x2e2bd]        # 446795 <_IO_stdin_used@@Base+0x18795>
  4184d8:	lea    rsi,[rip+0x2e125]        # 446604 <_IO_stdin_used@@Base+0x18604>
  4184df:	lea    rcx,[rip+0x2e342]        # 446828 <_IO_stdin_used@@Base+0x18828>
  4184e6:	mov    edx,0x1f
  4184eb:	call   406100 <__assert_fail@plt>
  4184f0:	lea    rdi,[rip+0x2e457]        # 44694e <_IO_stdin_used@@Base+0x1894e>
  4184f7:	lea    rsi,[rip+0x2e106]        # 446604 <_IO_stdin_used@@Base+0x18604>
  4184fe:	lea    rcx,[rip+0x2e4d6]        # 4469db <_IO_stdin_used@@Base+0x189db>
  418505:	mov    edx,0x1b
  41850a:	call   406100 <__assert_fail@plt>
  41850f:	lea    rdi,[rip+0x2e508]        # 446a1e <_IO_stdin_used@@Base+0x18a1e>
  418516:	lea    rsi,[rip+0x2e0e7]        # 446604 <_IO_stdin_used@@Base+0x18604>
  41851d:	lea    rcx,[rip+0x2e58d]        # 446ab1 <_IO_stdin_used@@Base+0x18ab1>
  418524:	mov    edx,0x21
  418529:	call   406100 <__assert_fail@plt>
  41852e:	xchg   ax,ax
  418530:	push   rbp
  418531:	push   r15
  418533:	push   r14
  418535:	push   r13
  418537:	push   r12
  418539:	push   rbx
  41853a:	sub    rsp,0x28
  41853e:	test   rdi,rdi
  418541:	je     4186f5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11d5>
  418547:	cmp    DWORD PTR [rdi+0x4],0x53424642
  41854e:	jne    4186f5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11d5>
  418554:	mov    ecx,DWORD PTR [rdi]
  418556:	lea    rax,[rdi+rcx*1]
  41855a:	movsxd rcx,DWORD PTR [rdi+rcx*1]
  41855e:	mov    rdx,rax
  418561:	sub    rdx,rcx
  418564:	cmp    WORD PTR [rdx],0x5
  418568:	jbe    4186fe <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11de>
  41856e:	neg    rcx
  418571:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  418576:	test   rcx,rcx
  418579:	je     4186fe <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11de>
  41857f:	lea    rdx,[rax+rcx*1]
  418583:	mov    eax,DWORD PTR [rax+rcx*1]
  418586:	cmp    DWORD PTR [rax+rdx*1],0x0
  41858a:	je     4186c7 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11a7>
  418590:	lea    rcx,[rax+rdx*1]
  418594:	add    rcx,0x4
  418598:	xor    edx,edx
  41859a:	mov    QWORD PTR [rsp+0x8],rcx
  41859f:	mov    QWORD PTR [rsp+0x10],rcx
  4185a4:	jmp    4185cf <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10af>
  4185a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185b0:	mov    rdx,QWORD PTR [rsp+0x20]
  4185b5:	inc    rdx
  4185b8:	mov    rcx,QWORD PTR [rsp+0x10]
  4185bd:	mov    eax,DWORD PTR [rcx-0x4]
  4185c0:	add    QWORD PTR [rsp+0x8],0x4
  4185c6:	cmp    rdx,rax
  4185c9:	jae    4186c7 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11a7>
  4185cf:	lea    rax,[rcx+rdx*4]
  4185d3:	mov    QWORD PTR [rsp+0x20],rdx
  4185d8:	mov    esi,DWORD PTR [rcx+rdx*4]
  4185db:	movsxd rcx,DWORD PTR [rsi+rax*1]
  4185df:	add    rax,rsi
  4185e2:	mov    rdx,rax
  4185e5:	sub    rdx,rcx
  4185e8:	cmp    WORD PTR [rdx],0x8
  4185ec:	jb     4186d6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b6>
  4185f2:	neg    rcx
  4185f5:	movzx  r13d,WORD PTR [rax+rcx*1+0x6]
  4185fb:	test   r13,r13
  4185fe:	je     4186d6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b6>
  418604:	mov    ebp,DWORD PTR [rax+r13*1]
  418608:	add    rax,r13
  41860b:	mov    r12d,DWORD PTR [rbp+rax*1+0x0]
  418610:	test   r12,r12
  418613:	je     4185b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1090>
  418615:	mov    QWORD PTR [rsp+0x18],rsi
  41861a:	lea    r14,[rax+rbp*1]
  41861e:	add    r14,0x4
  418622:	lea    r15,[r12-0x1]
  418627:	mov    rbx,r12
  41862a:	shr    rbx,1
  41862d:	nop    DWORD PTR [rax]
  418630:	mov    rdi,r14
  418633:	mov    rsi,rbx
  418636:	mov    rdx,r15
  418639:	call   418d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
  41863e:	dec    rbx
  418641:	cmp    rbx,0xffffffffffffffff
  418645:	jne    418630 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1110>
  418647:	test   r15,r15
  41864a:	mov    rax,QWORD PTR [rsp+0x18]
  41864f:	je     4185b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1090>
  418655:	lea    r15,[r12*4+0x0]
  41865d:	add    r15,rbp
  418660:	mov    rbx,r12
  418663:	add    rbx,0xfffffffffffffffe
  418667:	add    r15,r13
  41866a:	add    r15,rax
  41866d:	add    r15,QWORD PTR [rsp+0x8]
  418672:	lea    eax,[r12*4+0x0]
  41867a:	mov    r13d,0x4
  418680:	sub    r13d,eax
  418683:	lea    ebp,[r12*4-0x4]
  41868b:	nop    DWORD PTR [rax+rax*1+0x0]
  418690:	mov    eax,DWORD PTR [r15]
  418693:	add    eax,ebp
  418695:	mov    ecx,DWORD PTR [r14]
  418698:	add    ecx,r13d
  41869b:	mov    DWORD PTR [r14],eax
  41869e:	mov    DWORD PTR [r15],ecx
  4186a1:	mov    rdi,r14
  4186a4:	xor    esi,esi
  4186a6:	mov    rdx,rbx
  4186a9:	call   418d40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
  4186ae:	dec    rbx
  4186b1:	add    r15,0xfffffffffffffffc
  4186b5:	add    ebp,0xfffffffc
  4186b8:	add    r13d,0x4
  4186bc:	cmp    rbx,0xffffffffffffffff
  4186c0:	jne    418690 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1170>
  4186c2:	jmp    4185b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1090>
  4186c7:	add    rsp,0x28
  4186cb:	pop    rbx
  4186cc:	pop    r12
  4186ce:	pop    r13
  4186d0:	pop    r14
  4186d2:	pop    r15
  4186d4:	pop    rbp
  4186d5:	ret    
  4186d6:	lea    rdi,[rip+0x2e506]        # 446be3 <_IO_stdin_used@@Base+0x18be3>
  4186dd:	lea    rsi,[rip+0x2e43a]        # 446b1e <_IO_stdin_used@@Base+0x18b1e>
  4186e4:	lea    rcx,[rip+0x2e550]        # 446c3b <_IO_stdin_used@@Base+0x18c3b>
  4186eb:	mov    edx,0xe0
  4186f0:	call   406100 <__assert_fail@plt>
  4186f5:	lea    rdi,[rip+0x2e3fc]        # 446af8 <_IO_stdin_used@@Base+0x18af8>
  4186fc:	jmp    418705 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11e5>
  4186fe:	lea    rdi,[rip+0x2e4de]        # 446be3 <_IO_stdin_used@@Base+0x18be3>
  418705:	lea    rsi,[rip+0x2e412]        # 446b1e <_IO_stdin_used@@Base+0x18b1e>
  41870c:	lea    rcx,[rip+0x2e483]        # 446b96 <_IO_stdin_used@@Base+0x18b96>
  418713:	mov    edx,0xed
  418718:	call   406100 <__assert_fail@plt>
  41871d:	nop    DWORD PTR [rax]

0000000000418720 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  418720:	push   r15
  418722:	push   r14
  418724:	push   r12
  418726:	push   rbx
  418727:	sub    rsp,0x188
  41872e:	mov    r14,rdx
  418731:	mov    r15,rsi
  418734:	mov    rbx,rdi
  418737:	mov    r12,rsp
  41873a:	mov    rdi,r12
  41873d:	call   427520 <flatcc_builder_init@@Base>
  418742:	mov    rdi,r12
  418745:	mov    rsi,rbx
  418748:	mov    rdx,r15
  41874b:	call   4175a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  418750:	test   eax,eax
  418752:	je     418758 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x38>
  418754:	xor    ebx,ebx
  418756:	jmp    418773 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x53>
  418758:	mov    rdi,rsp
  41875b:	mov    rsi,r14
  41875e:	call   42bb80 <flatcc_builder_finalize_buffer@@Base>
  418763:	test   rax,rax
  418766:	je     418754 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x34>
  418768:	mov    rbx,rax
  41876b:	mov    rdi,rax
  41876e:	call   418530 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1010>
  418773:	mov    rdi,rsp
  418776:	call   4278e0 <flatcc_builder_clear@@Base>
  41877b:	mov    rax,rbx
  41877e:	add    rsp,0x188
  418785:	pop    rbx
  418786:	pop    r12
  418788:	pop    r14
  41878a:	pop    r15
  41878c:	ret    
  41878d:	nop    DWORD PTR [rax]

0000000000418790 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  418790:	push   rbp
  418791:	push   r15
  418793:	push   r14
  418795:	push   r12
  418797:	push   rbx
  418798:	sub    rsp,0x190
  41879f:	mov    r14,rsi
  4187a2:	mov    rbx,rdi
  4187a5:	mov    rax,QWORD PTR [rdi+0x108]
  4187ac:	test   rax,rax
  4187af:	lea    rbp,[rip+0x1758d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4187b6:	cmovne rbp,rax
  4187ba:	cmp    DWORD PTR [rdi+0x80],0x0
  4187c1:	je     4187fd <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d>
  4187c3:	mov    rax,QWORD PTR [rip+0x39816]        # 451fe0 <stdout@GLIBC_2.2.5>
  4187ca:	mov    r15,QWORD PTR [rax]
  4187cd:	test   r15,r15
  4187d0:	je     41886d <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdd>
  4187d6:	lea    rbp,[rsp+0x8]
  4187db:	mov    rdi,rbp
  4187de:	call   427520 <flatcc_builder_init@@Base>
  4187e3:	mov    rdi,rbp
  4187e6:	mov    rsi,rbx
  4187e9:	mov    rdx,r14
  4187ec:	call   4175a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  4187f1:	test   eax,eax
  4187f3:	je     418874 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe4>
  4187f5:	xor    r14d,r14d
  4187f8:	jmp    418895 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x105>
  4187fd:	mov    r15,QWORD PTR [r14+0x110]
  418804:	mov    rdi,r15
  418807:	call   4060d0 <strlen@plt>
  41880c:	mov    r12,rax
  41880f:	mov    rdi,rbp
  418812:	call   4060d0 <strlen@plt>
  418817:	lea    r8,[rip+0x16fa7]        # 42f7c5 <_IO_stdin_used@@Base+0x17c5>
  41881e:	mov    rdi,rbp
  418821:	mov    rsi,rax
  418824:	mov    rdx,r15
  418827:	mov    rcx,r12
  41882a:	mov    r9d,0x1
  418830:	call   41bb20 <__flatcc_fb_create_join_path_n@@Base>
  418835:	test   rax,rax
  418838:	je     41894a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ba>
  41883e:	mov    rbp,rax
  418841:	lea    rsi,[rip+0x170de]        # 42f926 <_IO_stdin_used@@Base+0x1926>
  418848:	mov    rdi,rax
  41884b:	call   4061f0 <fopen@plt>
  418850:	mov    r15,rax
  418853:	test   rax,rax
  418856:	je     41892a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a>
  41885c:	mov    rdi,rbp
  41885f:	call   406040 <free@plt>
  418864:	test   r15,r15
  418867:	jne    4187d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46>
  41886d:	mov    ebp,0xffffffff
  418872:	jmp    4188f1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  418874:	lea    rdi,[rsp+0x8]
  418879:	mov    rsi,rsp
  41887c:	call   42bb80 <flatcc_builder_finalize_buffer@@Base>
  418881:	test   rax,rax
  418884:	je     4187f5 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x65>
  41888a:	mov    r14,rax
  41888d:	mov    rdi,rax
  418890:	call   418530 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1010>
  418895:	lea    rdi,[rsp+0x8]
  41889a:	call   4278e0 <flatcc_builder_clear@@Base>
  41889f:	test   r14,r14
  4188a2:	je     4188cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13c>
  4188a4:	mov    rbx,QWORD PTR [rsp]
  4188a8:	mov    esi,0x1
  4188ad:	mov    rdi,r14
  4188b0:	mov    rdx,rbx
  4188b3:	mov    rcx,r15
  4188b6:	call   406230 <fwrite@plt>
  4188bb:	xor    ebp,ebp
  4188bd:	cmp    rbx,rax
  4188c0:	jne    418903 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x173>
  4188c2:	mov    rdi,r14
  4188c5:	call   406040 <free@plt>
  4188ca:	jmp    4188dd <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14d>
  4188cc:	lea    rdi,[rip+0x2e47b]        # 446d4e <_IO_stdin_used@@Base+0x18d4e>
  4188d3:	call   406070 <puts@plt>
  4188d8:	mov    ebp,0xffffffff
  4188dd:	mov    rax,QWORD PTR [rip+0x396fc]        # 451fe0 <stdout@GLIBC_2.2.5>
  4188e4:	cmp    QWORD PTR [rax],r15
  4188e7:	je     4188f1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  4188e9:	mov    rdi,r15
  4188ec:	call   4060c0 <fclose@plt>
  4188f1:	mov    eax,ebp
  4188f3:	add    rsp,0x190
  4188fa:	pop    rbx
  4188fb:	pop    r12
  4188fd:	pop    r14
  4188ff:	pop    r15
  418901:	pop    rbp
  418902:	ret    
  418903:	mov    rax,QWORD PTR [rip+0x396ee]        # 451ff8 <stderr@GLIBC_2.2.5>
  41890a:	mov    rcx,QWORD PTR [rax]
  41890d:	lea    rdi,[rip+0x2dc37]        # 44654b <_IO_stdin_used@@Base+0x1854b>
  418914:	mov    esi,0x26
  418919:	mov    edx,0x1
  41891e:	call   406230 <fwrite@plt>
  418923:	mov    ebp,0xffffffff
  418928:	jmp    4188c2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132>
  41892a:	mov    rax,QWORD PTR [rip+0x396c7]        # 451ff8 <stderr@GLIBC_2.2.5>
  418931:	mov    rdi,QWORD PTR [rax]
  418934:	lea    rsi,[rip+0x2e3e1]        # 446d1c <_IO_stdin_used@@Base+0x18d1c>
  41893b:	mov    rdx,rbp
  41893e:	xor    eax,eax
  418940:	call   406180 <fprintf@plt>
  418945:	jmp    41885c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
  41894a:	mov    rax,QWORD PTR [rip+0x396a7]        # 451ff8 <stderr@GLIBC_2.2.5>
  418951:	mov    rcx,QWORD PTR [rax]
  418954:	lea    rdi,[rip+0x16ec1]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  41895b:	mov    esi,0x22
  418960:	mov    edx,0x1
  418965:	call   406230 <fwrite@plt>
  41896a:	mov    edi,0x1
  41896f:	call   406220 <exit@plt>
  418974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41897e:	xchg   ax,ax
  418980:	mov    rdx,rdi
  418983:	lea    rdi,[rsi+0x8]
  418987:	lea    rsi,[rip+0x32]        # 4189c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  41898e:	jmp    41a400 <fb_symbol_table_visit@@Base>
  418993:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41899d:	nop    DWORD PTR [rax]
  4189a0:	mov    rdx,rdi
  4189a3:	lea    rdi,[rsi+0x8]
  4189a7:	lea    rsi,[rip+0xb2]        # 418a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
  4189ae:	jmp    41a400 <fb_symbol_table_visit@@Base>
  4189b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189bd:	nop    DWORD PTR [rax]
  4189c0:	push   r14
  4189c2:	push   rbx
  4189c3:	push   rax
  4189c4:	cmp    WORD PTR [rsi+0x10],0x4
  4189c9:	ja     418a55 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  4189cf:	mov    rbx,rsi
  4189d2:	mov    r14,rdi
  4189d5:	mov    edi,0x128
  4189da:	add    rdi,QWORD PTR [r14+0x48]
  4189de:	mov    rsi,QWORD PTR [rsi+0x20]
  4189e2:	call   419b30 <ptr_set_find_item@@Base>
  4189e7:	test   rax,rax
  4189ea:	je     418a55 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  4189ec:	mov    eax,0x1
  4189f1:	cmp    DWORD PTR [r14],0x0
  4189f5:	je     418a2d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x29d>
  4189f7:	mov    rcx,QWORD PTR [rbx+0x18]
  4189fb:	mov    rcx,QWORD PTR [rcx]
  4189fe:	test   rcx,rcx
  418a01:	je     418a2d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x29d>
  418a03:	xor    eax,eax
  418a05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a0f:	nop
  418a10:	mov    rdx,QWORD PTR [rcx+0x8]
  418a14:	mov    rsi,QWORD PTR [rcx]
  418a17:	mov    rcx,QWORD PTR [rdx+0x8]
  418a1b:	add    rax,rcx
  418a1e:	add    rax,0x1
  418a22:	mov    rcx,rsi
  418a25:	test   rsi,rsi
  418a28:	jne    418a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x280>
  418a2a:	inc    rax
  418a2d:	mov    rcx,QWORD PTR [rbx+0x8]
  418a31:	add    rax,QWORD PTR [rcx+0x8]
  418a35:	add    QWORD PTR [r14+0x10],rax
  418a39:	mov    eax,DWORD PTR [rbx+0x10]
  418a3c:	lea    ecx,[rax-0x3]
  418a3f:	cmp    cx,0x2
  418a43:	jb     418a51 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c1>
  418a45:	cmp    ax,0x1
  418a49:	ja     418a55 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  418a4b:	inc    DWORD PTR [r14+0x4]
  418a4f:	jmp    418a55 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  418a51:	inc    DWORD PTR [r14+0x8]
  418a55:	add    rsp,0x8
  418a59:	pop    rbx
  418a5a:	pop    r14
  418a5c:	ret    
  418a5d:	nop    DWORD PTR [rax]
  418a60:	push   rbp
  418a61:	push   r15
  418a63:	push   r14
  418a65:	push   r13
  418a67:	push   r12
  418a69:	push   rbx
  418a6a:	push   rax
  418a6b:	cmp    WORD PTR [rsi+0x10],0x4
  418a70:	ja     418b59 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  418a76:	mov    r15,rsi
  418a79:	mov    r14,rdi
  418a7c:	mov    edi,0x128
  418a81:	add    rdi,QWORD PTR [r14+0x48]
  418a85:	mov    rsi,QWORD PTR [rsi+0x20]
  418a89:	call   419b30 <ptr_set_find_item@@Base>
  418a8e:	test   rax,rax
  418a91:	je     418b59 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  418a97:	mov    r12,QWORD PTR [r14+0x40]
  418a9b:	cmp    DWORD PTR [r14],0x0
  418a9f:	mov    QWORD PTR [rsp],r12
  418aa3:	je     418aef <__flatcc_fb_codegen_bfbs_to_file@@Base+0x35f>
  418aa5:	mov    rax,QWORD PTR [r15+0x18]
  418aa9:	mov    rbp,QWORD PTR [rax]
  418aac:	mov    r12,QWORD PTR [rsp]
  418ab0:	test   rbp,rbp
  418ab3:	je     418aef <__flatcc_fb_codegen_bfbs_to_file@@Base+0x35f>
  418ab5:	mov    rbx,QWORD PTR [rsp]
  418ab9:	nop    DWORD PTR [rax+0x0]
  418ac0:	mov    rax,QWORD PTR [rbp+0x8]
  418ac4:	movsxd r13,DWORD PTR [rax+0x8]
  418ac8:	mov    rsi,QWORD PTR [rax]
  418acb:	mov    rdi,rbx
  418ace:	mov    rdx,r13
  418ad1:	call   4061a0 <memcpy@plt>
  418ad6:	lea    r12,[rbx+r13*1]
  418ada:	add    r12,0x1
  418ade:	mov    BYTE PTR [rbx+r13*1],0x2e
  418ae3:	mov    rbp,QWORD PTR [rbp+0x0]
  418ae7:	mov    rbx,r12
  418aea:	test   rbp,rbp
  418aed:	jne    418ac0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x330>
  418aef:	mov    rax,QWORD PTR [r15+0x8]
  418af3:	movsxd rbx,DWORD PTR [rax+0x8]
  418af7:	mov    rsi,QWORD PTR [rax]
  418afa:	mov    rdi,r12
  418afd:	mov    rdx,rbx
  418b00:	call   4061a0 <memcpy@plt>
  418b05:	lea    rax,[r12+rbx*1]
  418b09:	add    rax,0x1
  418b0d:	mov    BYTE PTR [r12+rbx*1],0x0
  418b12:	mov    QWORD PTR [r14+0x40],rax
  418b16:	mov    eax,DWORD PTR [r15+0x10]
  418b1a:	lea    ecx,[rax-0x3]
  418b1d:	cmp    cx,0x2
  418b21:	jb     418b42 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b2>
  418b23:	cmp    ax,0x1
  418b27:	ja     418b59 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  418b29:	mov    rax,QWORD PTR [r14+0x30]
  418b2d:	mov    QWORD PTR [rax],r15
  418b30:	mov    rcx,QWORD PTR [rsp]
  418b34:	mov    QWORD PTR [rax+0x8],rcx
  418b38:	add    rax,0x10
  418b3c:	mov    QWORD PTR [r14+0x30],rax
  418b40:	jmp    418b59 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  418b42:	mov    rax,QWORD PTR [r14+0x38]
  418b46:	mov    QWORD PTR [rax],r15
  418b49:	mov    rcx,QWORD PTR [rsp]
  418b4d:	mov    QWORD PTR [rax+0x8],rcx
  418b51:	add    rax,0x10
  418b55:	mov    QWORD PTR [r14+0x38],rax
  418b59:	add    rsp,0x8
  418b5d:	pop    rbx
  418b5e:	pop    r12
  418b60:	pop    r13
  418b62:	pop    r14
  418b64:	pop    r15
  418b66:	pop    rbp
  418b67:	ret    
  418b68:	nop    DWORD PTR [rax+rax*1+0x0]
  418b70:	mov    rdi,QWORD PTR [rdi+0x8]
  418b74:	mov    rsi,QWORD PTR [rsi+0x8]
  418b78:	jmp    406160 <strcmp@plt>
  418b7d:	nop    DWORD PTR [rax]
  418b80:	push   rbp
  418b81:	push   r15
  418b83:	push   r14
  418b85:	push   rbx
  418b86:	push   rax
  418b87:	mov    r15,rdi
  418b8a:	mov    r14d,0xffffffff
  418b90:	xor    ebp,ebp
  418b92:	mov    ecx,DWORD PTR [rsp+0x40]
  418b96:	add    ecx,0xfffffffe
  418b99:	cmp    cx,0xd
  418b9d:	ja     418c54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c4>
  418ba3:	lea    rax,[rsp+0x30]
  418ba8:	mov    dl,0xd
  418baa:	movzx  ecx,cx
  418bad:	lea    rsi,[rip+0x2d934]        # 4464e8 <_IO_stdin_used@@Base+0x184e8>
  418bb4:	movsxd rdi,DWORD PTR [rsi+rcx*4]
  418bb8:	add    rdi,rsi
  418bbb:	mov    cl,0xd
  418bbd:	xor    ebx,ebx
  418bbf:	jmp    rdi
  418bc1:	mov    cl,0xe
  418bc3:	mov    r14d,0xffffffff
  418bc9:	jmp    418bf7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x467>
  418bcb:	mov    rax,QWORD PTR [rax]
  418bce:	mov    r14d,DWORD PTR [rax+0xc8]
  418bd5:	movzx  ecx,WORD PTR [rax+0x10]
  418bd9:	mov    dl,0xf
  418bdb:	cmp    cx,0x2
  418bdf:	jb     418c15 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x485>
  418be1:	cmp    cx,0x3
  418be5:	jne    418c58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
  418be7:	add    rax,0x48
  418beb:	mov    cl,0xe
  418bed:	jmp    418bf7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x467>
  418bef:	mov    r14d,0xffffffff
  418bf5:	xor    ecx,ecx
  418bf7:	mov    eax,DWORD PTR [rax]
  418bf9:	dec    eax
  418bfb:	cmp    eax,0xa
  418bfe:	ja     418c1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48c>
  418c00:	cdqe   
  418c02:	lea    rdx,[rip+0x2d937]        # 446540 <_IO_stdin_used@@Base+0x18540>
  418c09:	mov    dl,BYTE PTR [rax+rdx*1]
  418c0c:	test   cl,cl
  418c0e:	je     418c22 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x492>
  418c10:	cmp    cl,0xe
  418c13:	jne    418c63 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d3>
  418c15:	mov    bpl,0xe
  418c18:	mov    ebx,edx
  418c1a:	jmp    418c67 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  418c1c:	xor    edx,edx
  418c1e:	test   cl,cl
  418c20:	jne    418c10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x480>
  418c22:	mov    ebp,edx
  418c24:	mov    ebx,ecx
  418c26:	jmp    418c67 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  418c28:	mov    rax,QWORD PTR [rax]
  418c2b:	mov    edx,DWORD PTR [rax+0xc8]
  418c31:	movzx  esi,WORD PTR [rax+0x10]
  418c35:	mov    cl,0xf
  418c37:	cmp    si,0x2
  418c3b:	jb     418c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d0>
  418c3d:	cmp    si,0x4
  418c41:	je     418c5e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ce>
  418c43:	cmp    si,0x3
  418c47:	jne    418c58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
  418c49:	add    rax,0x48
  418c4d:	xor    ecx,ecx
  418c4f:	mov    r14d,edx
  418c52:	jmp    418bf7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x467>
  418c54:	xor    ebx,ebx
  418c56:	jmp    418c67 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  418c58:	xor    ebp,ebp
  418c5a:	xor    ebx,ebx
  418c5c:	jmp    418c67 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  418c5e:	mov    cl,0x10
  418c60:	mov    r14d,edx
  418c63:	xor    ebx,ebx
  418c65:	mov    ebp,ecx
  418c67:	mov    rdi,r15
  418c6a:	mov    esi,0x3
  418c6f:	call   429550 <flatcc_builder_start_table@@Base>
  418c74:	test   eax,eax
  418c76:	je     418c85 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f5>
  418c78:	xor    eax,eax
  418c7a:	add    rsp,0x8
  418c7e:	pop    rbx
  418c7f:	pop    r14
  418c81:	pop    r15
  418c83:	pop    rbp
  418c84:	ret    
  418c85:	cmp    r14d,0xffffffff
  418c89:	je     418caa <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51a>
  418c8b:	mov    edx,0x4
  418c90:	mov    rdi,r15
  418c93:	mov    esi,0x2
  418c98:	mov    ecx,0x4
  418c9d:	call   42a8d0 <flatcc_builder_table_add@@Base>
  418ca2:	test   rax,rax
  418ca5:	je     418c78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
  418ca7:	mov    DWORD PTR [rax],r14d
  418caa:	test   bpl,bpl
  418cad:	je     418ccb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x53b>
  418caf:	mov    edx,0x1
  418cb4:	mov    rdi,r15
  418cb7:	xor    esi,esi
  418cb9:	mov    ecx,0x1
  418cbe:	call   42a8d0 <flatcc_builder_table_add@@Base>
  418cc3:	test   rax,rax
  418cc6:	je     418c78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
  418cc8:	mov    BYTE PTR [rax],bpl
  418ccb:	test   bl,bl
  418ccd:	je     418ced <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55d>
  418ccf:	mov    edx,0x1
  418cd4:	mov    rdi,r15
  418cd7:	mov    esi,0x1
  418cdc:	mov    ecx,0x1
  418ce1:	call   42a8d0 <flatcc_builder_table_add@@Base>
  418ce6:	test   rax,rax
  418ce9:	je     418c78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
  418ceb:	mov    BYTE PTR [rax],bl
  418ced:	lea    rsi,[rip+0x2d82c]        # 446520 <_IO_stdin_used@@Base+0x18520>
  418cf4:	mov    rdi,r15
  418cf7:	xor    edx,edx
  418cf9:	call   429ef0 <flatcc_builder_check_required@@Base>
  418cfe:	test   eax,eax
  418d00:	je     418d14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x584>
  418d02:	mov    rdi,r15
  418d05:	add    rsp,0x8
  418d09:	pop    rbx
  418d0a:	pop    r14
  418d0c:	pop    r15
  418d0e:	pop    rbp
  418d0f:	jmp    429f60 <flatcc_builder_end_table@@Base>
  418d14:	lea    rdi,[rip+0x2d85c]        # 446577 <_IO_stdin_used@@Base+0x18577>
  418d1b:	lea    rsi,[rip+0x2d8e2]        # 446604 <_IO_stdin_used@@Base+0x18604>
  418d22:	lea    rcx,[rip+0x2d954]        # 44667d <_IO_stdin_used@@Base+0x1867d>
  418d29:	mov    edx,0x17
  418d2e:	call   406100 <__assert_fail@plt>
  418d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d3d:	nop    DWORD PTR [rax]
  418d40:	push   rbp
  418d41:	push   r15
  418d43:	push   r14
  418d45:	push   r13
  418d47:	push   r12
  418d49:	push   rbx
  418d4a:	sub    rsp,0x18
  418d4e:	lea    rbp,[rsi+rsi*1]
  418d52:	mov    QWORD PTR [rsp+0x10],rdx
  418d57:	cmp    rbp,rdx
  418d5a:	ja     418f68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7d8>
  418d60:	mov    r12,rsi
  418d63:	mov    QWORD PTR [rsp+0x8],rdi
  418d68:	nop    DWORD PTR [rax+rax*1+0x0]
  418d70:	cmp    rbp,QWORD PTR [rsp+0x10]
  418d75:	jae    418e70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  418d7b:	test   rdi,rdi
  418d7e:	je     418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418d84:	mov    esi,DWORD PTR [rdi-0x4]
  418d87:	cmp    rbp,rsi
  418d8a:	jae    418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418d90:	lea    rcx,[rdi+rbp*4]
  418d94:	mov    edx,DWORD PTR [rdi+rbp*4]
  418d97:	lea    rax,[rcx+rdx*1]
  418d9b:	movsxd rcx,DWORD PTR [rdx+rcx*1]
  418d9f:	mov    rdx,rax
  418da2:	sub    rdx,rcx
  418da5:	cmp    WORD PTR [rdx],0x6
  418da9:	jb     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418daf:	neg    rcx
  418db2:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  418db7:	test   rcx,rcx
  418dba:	je     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418dc0:	mov    rbx,rbp
  418dc3:	or     rbx,0x1
  418dc7:	cmp    rbx,rsi
  418dca:	jae    418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418dd0:	mov    QWORD PTR [rsp],rsi
  418dd4:	lea    rsi,[rdi+rbx*4]
  418dd8:	mov    edi,DWORD PTR [rdi+rbx*4]
  418ddb:	lea    rdx,[rsi+rdi*1]
  418ddf:	movsxd rsi,DWORD PTR [rdi+rsi*1]
  418de3:	mov    rdi,rdx
  418de6:	sub    rdi,rsi
  418de9:	cmp    WORD PTR [rdi],0x6
  418ded:	jb     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418df3:	neg    rsi
  418df6:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  418dfb:	test   rsi,rsi
  418dfe:	je     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418e04:	lea    rdi,[rax+rcx*1]
  418e08:	mov    eax,DWORD PTR [rax+rcx*1]
  418e0b:	add    rdi,rax
  418e0e:	add    rdi,0x4
  418e12:	lea    rax,[rdx+rsi*1]
  418e16:	mov    ecx,DWORD PTR [rdx+rsi*1]
  418e19:	lea    rsi,[rcx+rax*1]
  418e1d:	add    rsi,0x4
  418e21:	mov    r14d,DWORD PTR [rcx+rax*1]
  418e25:	mov    r15d,DWORD PTR [rdi-0x4]
  418e29:	cmp    r15d,r14d
  418e2c:	mov    edx,r14d
  418e2f:	cmovb  edx,r15d
  418e33:	call   406060 <strncmp@plt>
  418e38:	test   eax,eax
  418e3a:	mov    rax,rbx
  418e3d:	cmovne rax,rbp
  418e41:	cmovs  rax,rbx
  418e45:	cmovne rbp,rax
  418e49:	cmp    r15d,r14d
  418e4c:	cmovb  rbp,rax
  418e50:	mov    r13,rbp
  418e53:	mov    rdi,QWORD PTR [rsp+0x8]
  418e58:	mov    rsi,QWORD PTR [rsp]
  418e5c:	cmp    r12,rsi
  418e5f:	jb     418e88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6f8>
  418e61:	jmp    418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e70:	test   rdi,rdi
  418e73:	je     418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418e79:	mov    esi,DWORD PTR [rdi-0x4]
  418e7c:	mov    r13,rbp
  418e7f:	cmp    r12,rsi
  418e82:	jae    418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418e88:	lea    r15,[rdi+r12*4]
  418e8c:	mov    r14d,DWORD PTR [rdi+r12*4]
  418e90:	lea    rax,[r15+r14*1]
  418e94:	movsxd rcx,DWORD PTR [r14+r15*1]
  418e98:	mov    rdx,rax
  418e9b:	sub    rdx,rcx
  418e9e:	cmp    WORD PTR [rdx],0x6
  418ea2:	jb     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418ea8:	neg    rcx
  418eab:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  418eb0:	test   rcx,rcx
  418eb3:	je     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418eb9:	cmp    r13,rsi
  418ebc:	jae    418f96 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418ec2:	lea    rbx,[rdi+r13*4]
  418ec6:	mov    ebp,DWORD PTR [rdi+r13*4]
  418eca:	lea    rdx,[rbx+rbp*1]
  418ece:	movsxd rsi,DWORD PTR [rbp+rbx*1+0x0]
  418ed3:	mov    rdi,rdx
  418ed6:	sub    rdi,rsi
  418ed9:	cmp    WORD PTR [rdi],0x6
  418edd:	jb     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418ee3:	neg    rsi
  418ee6:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  418eeb:	test   rsi,rsi
  418eee:	je     418f77 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418ef4:	lea    rdi,[rax+rcx*1]
  418ef8:	mov    eax,DWORD PTR [rax+rcx*1]
  418efb:	add    rdi,rax
  418efe:	add    rdi,0x4
  418f02:	lea    rax,[rdx+rsi*1]
  418f06:	mov    ecx,DWORD PTR [rdx+rsi*1]
  418f09:	lea    rsi,[rcx+rax*1]
  418f0d:	add    rsi,0x4
  418f11:	mov    edx,DWORD PTR [rcx+rax*1]
  418f14:	mov    eax,DWORD PTR [rdi-0x4]
  418f17:	cmp    eax,edx
  418f19:	setb   BYTE PTR [rsp]
  418f1d:	cmovb  edx,eax
  418f20:	call   406060 <strncmp@plt>
  418f25:	test   eax,eax
  418f27:	setne  cl
  418f2a:	setle  al
  418f2d:	or     cl,BYTE PTR [rsp]
  418f30:	cmp    cl,0x1
  418f33:	mov    rdi,QWORD PTR [rsp+0x8]
  418f38:	jne    418f68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7d8>
  418f3a:	test   al,al
  418f3c:	je     418f68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7d8>
  418f3e:	sub    r12d,r13d
  418f41:	lea    eax,[r12*4+0x0]
  418f49:	sub    ebp,eax
  418f4b:	lea    eax,[r14+r12*4]
  418f4f:	mov    DWORD PTR [r15],ebp
  418f52:	mov    DWORD PTR [rbx],eax
  418f54:	mov    rbp,r13
  418f57:	add    rbp,r13
  418f5a:	mov    r12,r13
  418f5d:	cmp    rbp,QWORD PTR [rsp+0x10]
  418f62:	jbe    418d70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5e0>
  418f68:	add    rsp,0x18
  418f6c:	pop    rbx
  418f6d:	pop    r12
  418f6f:	pop    r13
  418f71:	pop    r14
  418f73:	pop    r15
  418f75:	pop    rbp
  418f76:	ret    
  418f77:	lea    rdi,[rip+0x2dc65]        # 446be3 <_IO_stdin_used@@Base+0x18be3>
  418f7e:	lea    rsi,[rip+0x2db99]        # 446b1e <_IO_stdin_used@@Base+0x18b1e>
  418f85:	lea    rcx,[rip+0x2dcfa]        # 446c86 <_IO_stdin_used@@Base+0x18c86>
  418f8c:	mov    edx,0xc3
  418f91:	call   406100 <__assert_fail@plt>
  418f96:	lea    rdi,[rip+0x2dc67]        # 446c04 <_IO_stdin_used@@Base+0x18c04>
  418f9d:	lea    rsi,[rip+0x2db7a]        # 446b1e <_IO_stdin_used@@Base+0x18b1e>
  418fa4:	lea    rcx,[rip+0x2dd20]        # 446ccb <_IO_stdin_used@@Base+0x18ccb>
  418fab:	mov    edx,0xc0
  418fb0:	call   406100 <__assert_fail@plt>
  418fb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418fbf:	nop

0000000000418fc0 <str_set_clear@@Base>:
  418fc0:	push   rbx
  418fc1:	mov    rbx,rdi
  418fc4:	mov    rdi,QWORD PTR [rdi]
  418fc7:	test   rdi,rdi
  418fca:	je     418fd1 <str_set_clear@@Base+0x11>
  418fcc:	call   406040 <free@plt>
  418fd1:	vxorps xmm0,xmm0,xmm0
  418fd5:	vmovups YMMWORD PTR [rbx],ymm0
  418fd9:	pop    rbx
  418fda:	vzeroupper 
  418fdd:	ret    
  418fde:	xchg   ax,ax

0000000000418fe0 <str_set_destroy@@Base>:
  418fe0:	push   r15
  418fe2:	push   r14
  418fe4:	push   r13
  418fe6:	push   r12
  418fe8:	push   rbx
  418fe9:	mov    r12,rdi
  418fec:	test   rsi,rsi
  418fef:	je     419037 <str_set_destroy@@Base+0x57>
  418ff1:	mov    rax,QWORD PTR [r12+0x18]
  418ff6:	test   rax,rax
  418ff9:	je     419037 <str_set_destroy@@Base+0x57>
  418ffb:	mov    r14,rdx
  418ffe:	mov    r15,rsi
  419001:	mov    r13,QWORD PTR [r12]
  419005:	xor    ebx,ebx
  419007:	jmp    419018 <str_set_destroy@@Base+0x38>
  419009:	nop    DWORD PTR [rax+0x0]
  419010:	inc    rbx
  419013:	cmp    rbx,rax
  419016:	jae    419037 <str_set_destroy@@Base+0x57>
  419018:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41901d:	mov    rcx,rsi
  419020:	or     rcx,0x2
  419024:	cmp    rcx,0x2
  419028:	je     419010 <str_set_destroy@@Base+0x30>
  41902a:	mov    rdi,r14
  41902d:	call   r15
  419030:	mov    rax,QWORD PTR [r12+0x18]
  419035:	jmp    419010 <str_set_destroy@@Base+0x30>
  419037:	mov    rdi,QWORD PTR [r12]
  41903b:	test   rdi,rdi
  41903e:	je     419045 <str_set_destroy@@Base+0x65>
  419040:	call   406040 <free@plt>
  419045:	vxorps xmm0,xmm0,xmm0
  419049:	vmovups YMMWORD PTR [r12],ymm0
  41904f:	pop    rbx
  419050:	pop    r12
  419052:	pop    r13
  419054:	pop    r14
  419056:	pop    r15
  419058:	vzeroupper 
  41905b:	ret    
  41905c:	nop    DWORD PTR [rax+0x0]

0000000000419060 <str_set_init@@Base>:
  419060:	push   r14
  419062:	push   rbx
  419063:	push   rax
  419064:	mov    r14,rdi
  419067:	mov    eax,0x4
  41906c:	nop    DWORD PTR [rax+0x0]
  419070:	mov    rbx,rax
  419073:	imul   rcx,rax,0xb3
  41907a:	shr    rcx,0x8
  41907e:	add    rax,rax
  419081:	cmp    rcx,rsi
  419084:	jb     419070 <str_set_init@@Base+0x10>
  419086:	mov    esi,0x8
  41908b:	mov    rdi,rbx
  41908e:	call   406150 <calloc@plt>
  419093:	mov    QWORD PTR [r14],rax
  419096:	test   rax,rax
  419099:	je     4190ad <str_set_init@@Base+0x4d>
  41909b:	vxorps xmm0,xmm0,xmm0
  41909f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4190a5:	mov    QWORD PTR [r14+0x18],rbx
  4190a9:	xor    eax,eax
  4190ab:	jmp    4190b2 <str_set_init@@Base+0x52>
  4190ad:	mov    eax,0xffffffff
  4190b2:	add    rsp,0x8
  4190b6:	pop    rbx
  4190b7:	pop    r14
  4190b9:	ret    
  4190ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004190c0 <str_set_resize@@Base>:
  4190c0:	jmp    4190d0 <str_set_resize@@Base+0x10>
  4190c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190cc:	nop    DWORD PTR [rax+0x0]
  4190d0:	push   r15
  4190d2:	push   r14
  4190d4:	push   r13
  4190d6:	push   r12
  4190d8:	push   rbx
  4190d9:	sub    rsp,0x20
  4190dd:	mov    r14,rdi
  4190e0:	mov    r12,QWORD PTR [rdi]
  4190e3:	mov    rax,QWORD PTR [rdi+0x10]
  4190e7:	cmp    rax,rsi
  4190ea:	cmova  rsi,rax
  4190ee:	mov    eax,0x4
  4190f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190fd:	nop    DWORD PTR [rax]
  419100:	mov    rbx,rax
  419103:	imul   rcx,rax,0xb3
  41910a:	shr    rcx,0x8
  41910e:	add    rax,rax
  419111:	cmp    rcx,rsi
  419114:	jb     419100 <str_set_resize@@Base+0x40>
  419116:	mov    esi,0x8
  41911b:	mov    rdi,rbx
  41911e:	call   406150 <calloc@plt>
  419123:	mov    QWORD PTR [rsp],rax
  419127:	test   rax,rax
  41912a:	je     41918e <str_set_resize@@Base+0xce>
  41912c:	vxorps xmm0,xmm0,xmm0
  419130:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  419136:	mov    QWORD PTR [rsp+0x18],rbx
  41913b:	mov    rax,QWORD PTR [r14+0x18]
  41913f:	test   rax,rax
  419142:	je     419198 <str_set_resize@@Base+0xd8>
  419144:	xor    ebx,ebx
  419146:	mov    r15,rsp
  419149:	jmp    419158 <str_set_resize@@Base+0x98>
  41914b:	nop    DWORD PTR [rax+rax*1+0x0]
  419150:	inc    rbx
  419153:	cmp    rbx,rax
  419156:	jae    419195 <str_set_resize@@Base+0xd5>
  419158:	mov    r13,QWORD PTR [r12+rbx*8]
  41915c:	mov    rcx,r13
  41915f:	or     rcx,0x2
  419163:	cmp    rcx,0x2
  419167:	je     419150 <str_set_resize@@Base+0x90>
  419169:	mov    rdi,r13
  41916c:	call   4060d0 <strlen@plt>
  419171:	mov    rdi,r15
  419174:	mov    rsi,r13
  419177:	mov    rdx,rax
  41917a:	mov    rcx,r13
  41917d:	mov    r8d,0x3
  419183:	call   4191e0 <str_set_insert@@Base+0x10>
  419188:	mov    rax,QWORD PTR [r14+0x18]
  41918c:	jmp    419150 <str_set_resize@@Base+0x90>
  41918e:	mov    eax,0xffffffff
  419193:	jmp    4191b1 <str_set_resize@@Base+0xf1>
  419195:	mov    r12,QWORD PTR [r14]
  419198:	test   r12,r12
  41919b:	je     4191a5 <str_set_resize@@Base+0xe5>
  41919d:	mov    rdi,r12
  4191a0:	call   406040 <free@plt>
  4191a5:	vmovups ymm0,YMMWORD PTR [rsp]
  4191aa:	vmovups YMMWORD PTR [r14],ymm0
  4191af:	xor    eax,eax
  4191b1:	add    rsp,0x20
  4191b5:	pop    rbx
  4191b6:	pop    r12
  4191b8:	pop    r13
  4191ba:	pop    r14
  4191bc:	pop    r15
  4191be:	vzeroupper 
  4191c1:	ret    
  4191c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4191cc:	nop    DWORD PTR [rax+0x0]

00000000004191d0 <str_set_insert@@Base>:
  4191d0:	jmp    4191e0 <str_set_insert@@Base+0x10>
  4191d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4191dc:	nop    DWORD PTR [rax+0x0]
  4191e0:	push   rbp
  4191e1:	push   r15
  4191e3:	push   r14
  4191e5:	push   r13
  4191e7:	push   r12
  4191e9:	push   rbx
  4191ea:	sub    rsp,0x38
  4191ee:	mov    QWORD PTR [rsp+0x20],rdx
  4191f3:	mov    QWORD PTR [rsp+0x18],rsi
  4191f8:	cmp    rcx,0x2
  4191fc:	je     41933b <str_set_insert@@Base+0x16b>
  419202:	mov    r13,rcx
  419205:	cmp    rcx,0x1
  419209:	je     41935a <str_set_insert@@Base+0x18a>
  41920f:	test   r13,r13
  419212:	je     419379 <str_set_insert@@Base+0x1a9>
  419218:	mov    ebp,r8d
  41921b:	mov    rbx,rdi
  41921e:	mov    rsi,QWORD PTR [rdi+0x10]
  419222:	mov    r15,QWORD PTR [rdi+0x18]
  419226:	imul   rax,r15,0xb3
  41922d:	shr    rax,0x8
  419231:	cmp    rsi,rax
  419234:	jb     41924d <str_set_insert@@Base+0x7d>
  419236:	add    rsi,rsi
  419239:	mov    rdi,rbx
  41923c:	call   4190d0 <str_set_resize@@Base+0x10>
  419241:	test   eax,eax
  419243:	jne    419398 <str_set_insert@@Base+0x1c8>
  419249:	mov    r15,QWORD PTR [rbx+0x18]
  41924d:	mov    r14,QWORD PTR [rbx]
  419250:	dec    r15
  419253:	lea    rcx,[rsp+0x30]
  419258:	mov    rdi,QWORD PTR [rsp+0x18]
  41925d:	mov    rsi,QWORD PTR [rsp+0x20]
  419262:	mov    edx,0x2f693b52
  419267:	call   42c490 <cmetrohash64_1@@Base>
  41926c:	mov    rcx,QWORD PTR [rsp+0x30]
  419271:	mov    r12d,ecx
  419274:	mov    eax,r15d
  419277:	and    eax,ecx
  419279:	mov    ecx,ebp
  41927b:	or     ecx,0x1
  41927e:	cmp    ecx,0x3
  419281:	jne    4192a9 <str_set_insert@@Base+0xd9>
  419283:	inc    QWORD PTR [rbx+0x10]
  419287:	nop    WORD PTR [rax+rax*1+0x0]
  419290:	inc    r12
  419293:	mov    rcx,QWORD PTR [r14+rax*8]
  419297:	or     rcx,0x2
  41929b:	cmp    rcx,0x2
  41929f:	je     419307 <str_set_insert@@Base+0x137>
  4192a1:	mov    rax,r12
  4192a4:	and    rax,r15
  4192a7:	jmp    419290 <str_set_insert@@Base+0xc0>
  4192a9:	mov    DWORD PTR [rsp+0xc],ebp
  4192ad:	mov    QWORD PTR [rsp+0x28],rbx
  4192b2:	mov    QWORD PTR [rsp+0x10],r13
  4192b7:	inc    r12
  4192ba:	xor    r13d,r13d
  4192bd:	jmp    4192d0 <str_set_insert@@Base+0x100>
  4192bf:	nop
  4192c0:	test   r13,r13
  4192c3:	cmove  r13,rbx
  4192c7:	mov    rax,r12
  4192ca:	and    rax,r15
  4192cd:	inc    r12
  4192d0:	lea    rbx,[r14+rax*8]
  4192d4:	mov    rbp,QWORD PTR [r14+rax*8]
  4192d8:	cmp    rbp,0x2
  4192dc:	je     4192c0 <str_set_insert@@Base+0xf0>
  4192de:	test   rbp,rbp
  4192e1:	je     41930f <str_set_insert@@Base+0x13f>
  4192e3:	mov    rdi,QWORD PTR [rsp+0x18]
  4192e8:	mov    rsi,rbp
  4192eb:	mov    rdx,QWORD PTR [rsp+0x20]
  4192f0:	call   406060 <strncmp@plt>
  4192f5:	test   eax,eax
  4192f7:	jne    4192c7 <str_set_insert@@Base+0xf7>
  4192f9:	cmp    DWORD PTR [rsp+0xc],0x0
  4192fe:	mov    r13,QWORD PTR [rsp+0x10]
  419303:	jne    419329 <str_set_insert@@Base+0x159>
  419305:	jmp    419326 <str_set_insert@@Base+0x156>
  419307:	lea    rbx,[r14+rax*8]
  41930b:	xor    ebp,ebp
  41930d:	jmp    419326 <str_set_insert@@Base+0x156>
  41930f:	test   r13,r13
  419312:	cmovne rbx,r13
  419316:	mov    rax,QWORD PTR [rsp+0x28]
  41931b:	inc    QWORD PTR [rax+0x10]
  41931f:	xor    ebp,ebp
  419321:	mov    r13,QWORD PTR [rsp+0x10]
  419326:	mov    QWORD PTR [rbx],r13
  419329:	mov    rax,rbp
  41932c:	add    rsp,0x38
  419330:	pop    rbx
  419331:	pop    r12
  419333:	pop    r13
  419335:	pop    r14
  419337:	pop    r15
  419339:	pop    rbp
  41933a:	ret    
  41933b:	lea    rdi,[rip+0x2db11]        # 446e53 <str_set_deleted@@Base+0xd3>
  419342:	lea    rsi,[rip+0x2da56]        # 446d9f <str_set_deleted@@Base+0x1f>
  419349:	lea    rcx,[rip+0x2dab9]        # 446e09 <str_set_deleted@@Base+0x89>
  419350:	mov    edx,0x73
  419355:	call   406100 <__assert_fail@plt>
  41935a:	lea    rdi,[rip+0x2db09]        # 446e6a <str_set_deleted@@Base+0xea>
  419361:	lea    rsi,[rip+0x2da37]        # 446d9f <str_set_deleted@@Base+0x1f>
  419368:	lea    rcx,[rip+0x2da9a]        # 446e09 <str_set_deleted@@Base+0x89>
  41936f:	mov    edx,0x74
  419374:	call   406100 <__assert_fail@plt>
  419379:	lea    rdi,[rip+0x2da08]        # 446d88 <str_set_deleted@@Base+0x8>
  419380:	lea    rsi,[rip+0x2da18]        # 446d9f <str_set_deleted@@Base+0x1f>
  419387:	lea    rcx,[rip+0x2da7b]        # 446e09 <str_set_deleted@@Base+0x89>
  41938e:	mov    edx,0x72
  419393:	call   406100 <__assert_fail@plt>
  419398:	mov    rax,QWORD PTR [rip+0x38c59]        # 451ff8 <stderr@GLIBC_2.2.5>
  41939f:	mov    rdi,QWORD PTR [rax]
  4193a2:	lea    rsi,[rip+0x2dad6]        # 446e7f <str_set_deleted@@Base+0xff>
  4193a9:	lea    rdx,[rip+0x2dae6]        # 446e96 <str_set_deleted@@Base+0x116>
  4193b0:	xor    eax,eax
  4193b2:	call   406180 <fprintf@plt>
  4193b7:	mov    edi,0x1
  4193bc:	call   406220 <exit@plt>
  4193c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004193d0 <str_set_insert_item@@Base>:
  4193d0:	push   rbp
  4193d1:	push   r14
  4193d3:	push   rbx
  4193d4:	mov    r14d,edx
  4193d7:	mov    rbx,rsi
  4193da:	mov    rbp,rdi
  4193dd:	mov    rdi,rsi
  4193e0:	call   4060d0 <strlen@plt>
  4193e5:	mov    rdi,rbp
  4193e8:	mov    rsi,rbx
  4193eb:	mov    rdx,rax
  4193ee:	mov    rcx,rbx
  4193f1:	mov    r8d,r14d
  4193f4:	pop    rbx
  4193f5:	pop    r14
  4193f7:	pop    rbp
  4193f8:	jmp    4191e0 <str_set_insert@@Base+0x10>
  4193fd:	nop    DWORD PTR [rax]

0000000000419400 <str_set_find@@Base>:
  419400:	push   rbp
  419401:	push   r15
  419403:	push   r14
  419405:	push   r13
  419407:	push   r12
  419409:	push   rbx
  41940a:	push   rax
  41940b:	mov    r12,QWORD PTR [rdi]
  41940e:	test   r12,r12
  419411:	je     41946c <str_set_find@@Base+0x6c>
  419413:	mov    r14,rdx
  419416:	mov    r15,rsi
  419419:	mov    r13,QWORD PTR [rdi+0x18]
  41941d:	dec    r13
  419420:	mov    rcx,rsp
  419423:	mov    rdi,rsi
  419426:	mov    rsi,rdx
  419429:	mov    edx,0x2f693b52
  41942e:	call   42c490 <cmetrohash64_1@@Base>
  419433:	mov    ebp,DWORD PTR [rsp]
  419436:	jmp    419443 <str_set_find@@Base+0x43>
  419438:	nop    DWORD PTR [rax+rax*1+0x0]
  419440:	inc    rbp
  419443:	mov    rax,rbp
  419446:	and    rax,r13
  419449:	mov    rbx,QWORD PTR [r12+rax*8]
  41944d:	cmp    rbx,0x2
  419451:	je     419440 <str_set_find@@Base+0x40>
  419453:	test   rbx,rbx
  419456:	je     41946c <str_set_find@@Base+0x6c>
  419458:	mov    rdi,r15
  41945b:	mov    rsi,rbx
  41945e:	mov    rdx,r14
  419461:	call   406060 <strncmp@plt>
  419466:	test   eax,eax
  419468:	jne    419440 <str_set_find@@Base+0x40>
  41946a:	jmp    41946e <str_set_find@@Base+0x6e>
  41946c:	xor    ebx,ebx
  41946e:	mov    rax,rbx
  419471:	add    rsp,0x8
  419475:	pop    rbx
  419476:	pop    r12
  419478:	pop    r13
  41947a:	pop    r14
  41947c:	pop    r15
  41947e:	pop    rbp
  41947f:	ret    

0000000000419480 <str_set_find_item@@Base>:
  419480:	push   rbp
  419481:	push   r15
  419483:	push   r14
  419485:	push   r13
  419487:	push   r12
  419489:	push   rbx
  41948a:	push   rax
  41948b:	mov    r15,rsi
  41948e:	mov    rbx,rdi
  419491:	mov    rdi,rsi
  419494:	call   4060d0 <strlen@plt>
  419499:	mov    r12,QWORD PTR [rbx]
  41949c:	test   r12,r12
  41949f:	je     4194fc <str_set_find_item@@Base+0x7c>
  4194a1:	mov    r14,rax
  4194a4:	mov    r13,QWORD PTR [rbx+0x18]
  4194a8:	dec    r13
  4194ab:	mov    rcx,rsp
  4194ae:	mov    rdi,r15
  4194b1:	mov    rsi,rax
  4194b4:	mov    edx,0x2f693b52
  4194b9:	call   42c490 <cmetrohash64_1@@Base>
  4194be:	mov    ebp,DWORD PTR [rsp]
  4194c1:	jmp    4194d3 <str_set_find_item@@Base+0x53>
  4194c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194cd:	nop    DWORD PTR [rax]
  4194d0:	inc    rbp
  4194d3:	mov    rax,rbp
  4194d6:	and    rax,r13
  4194d9:	mov    rbx,QWORD PTR [r12+rax*8]
  4194dd:	cmp    rbx,0x2
  4194e1:	je     4194d0 <str_set_find_item@@Base+0x50>
  4194e3:	test   rbx,rbx
  4194e6:	je     4194fc <str_set_find_item@@Base+0x7c>
  4194e8:	mov    rdi,r15
  4194eb:	mov    rsi,rbx
  4194ee:	mov    rdx,r14
  4194f1:	call   406060 <strncmp@plt>
  4194f6:	test   eax,eax
  4194f8:	jne    4194d0 <str_set_find_item@@Base+0x50>
  4194fa:	jmp    4194fe <str_set_find_item@@Base+0x7e>
  4194fc:	xor    ebx,ebx
  4194fe:	mov    rax,rbx
  419501:	add    rsp,0x8
  419505:	pop    rbx
  419506:	pop    r12
  419508:	pop    r13
  41950a:	pop    r14
  41950c:	pop    r15
  41950e:	pop    rbp
  41950f:	ret    

0000000000419510 <str_set_remove@@Base>:
  419510:	push   rbp
  419511:	push   r15
  419513:	push   r14
  419515:	push   r13
  419517:	push   r12
  419519:	push   rbx
  41951a:	sub    rsp,0x18
  41951e:	mov    r13,QWORD PTR [rdi]
  419521:	test   r13,r13
  419524:	je     4195a0 <str_set_remove@@Base+0x90>
  419526:	mov    QWORD PTR [rsp],rdi
  41952a:	mov    rbp,QWORD PTR [rdi+0x18]
  41952e:	dec    rbp
  419531:	lea    rcx,[rsp+0x10]
  419536:	mov    QWORD PTR [rsp+0x8],rsi
  41953b:	mov    rdi,rsi
  41953e:	mov    r12,rdx
  419541:	mov    rsi,rdx
  419544:	mov    edx,0x2f693b52
  419549:	call   42c490 <cmetrohash64_1@@Base>
  41954e:	mov    r15d,DWORD PTR [rsp+0x10]
  419553:	jmp    419563 <str_set_remove@@Base+0x53>
  419555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41955f:	nop
  419560:	inc    r15
  419563:	mov    r14,r15
  419566:	and    r14,rbp
  419569:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41956e:	cmp    rbx,0x2
  419572:	je     419560 <str_set_remove@@Base+0x50>
  419574:	test   rbx,rbx
  419577:	je     4195a0 <str_set_remove@@Base+0x90>
  419579:	mov    rdi,QWORD PTR [rsp+0x8]
  41957e:	mov    rsi,rbx
  419581:	mov    rdx,r12
  419584:	call   406060 <strncmp@plt>
  419589:	test   eax,eax
  41958b:	jne    419560 <str_set_remove@@Base+0x50>
  41958d:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  419596:	mov    rax,QWORD PTR [rsp]
  41959a:	dec    QWORD PTR [rax+0x10]
  41959e:	jmp    4195a2 <str_set_remove@@Base+0x92>
  4195a0:	xor    ebx,ebx
  4195a2:	mov    rax,rbx
  4195a5:	add    rsp,0x18
  4195a9:	pop    rbx
  4195aa:	pop    r12
  4195ac:	pop    r13
  4195ae:	pop    r14
  4195b0:	pop    r15
  4195b2:	pop    rbp
  4195b3:	ret    
  4195b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4195be:	xchg   ax,ax

00000000004195c0 <str_set_remove_item@@Base>:
  4195c0:	push   rbp
  4195c1:	push   r15
  4195c3:	push   r14
  4195c5:	push   r13
  4195c7:	push   r12
  4195c9:	push   rbx
  4195ca:	sub    rsp,0x18
  4195ce:	mov    r14,rsi
  4195d1:	mov    rbx,rdi
  4195d4:	mov    rdi,rsi
  4195d7:	call   4060d0 <strlen@plt>
  4195dc:	mov    r13,QWORD PTR [rbx]
  4195df:	test   r13,r13
  4195e2:	je     419660 <str_set_remove_item@@Base+0xa0>
  4195e4:	mov    QWORD PTR [rsp],rbx
  4195e8:	mov    rbp,QWORD PTR [rbx+0x18]
  4195ec:	dec    rbp
  4195ef:	lea    rcx,[rsp+0x10]
  4195f4:	mov    QWORD PTR [rsp+0x8],r14
  4195f9:	mov    rdi,r14
  4195fc:	mov    r12,rax
  4195ff:	mov    rsi,rax
  419602:	mov    edx,0x2f693b52
  419607:	call   42c490 <cmetrohash64_1@@Base>
  41960c:	mov    r15d,DWORD PTR [rsp+0x10]
  419611:	jmp    419623 <str_set_remove_item@@Base+0x63>
  419613:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41961d:	nop    DWORD PTR [rax]
  419620:	inc    r15
  419623:	mov    r14,r15
  419626:	and    r14,rbp
  419629:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41962e:	cmp    rbx,0x2
  419632:	je     419620 <str_set_remove_item@@Base+0x60>
  419634:	test   rbx,rbx
  419637:	je     419660 <str_set_remove_item@@Base+0xa0>
  419639:	mov    rdi,QWORD PTR [rsp+0x8]
  41963e:	mov    rsi,rbx
  419641:	mov    rdx,r12
  419644:	call   406060 <strncmp@plt>
  419649:	test   eax,eax
  41964b:	jne    419620 <str_set_remove_item@@Base+0x60>
  41964d:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  419656:	mov    rax,QWORD PTR [rsp]
  41965a:	dec    QWORD PTR [rax+0x10]
  41965e:	jmp    419662 <str_set_remove_item@@Base+0xa2>
  419660:	xor    ebx,ebx
  419662:	mov    rax,rbx
  419665:	add    rsp,0x18
  419669:	pop    rbx
  41966a:	pop    r12
  41966c:	pop    r13
  41966e:	pop    r14
  419670:	pop    r15
  419672:	pop    rbp
  419673:	ret    
  419674:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41967e:	xchg   ax,ax

0000000000419680 <str_set_visit@@Base>:
  419680:	push   r15
  419682:	push   r14
  419684:	push   r13
  419686:	push   r12
  419688:	push   rbx
  419689:	mov    rax,QWORD PTR [rdi+0x18]
  41968d:	test   rax,rax
  419690:	je     4196d7 <str_set_visit@@Base+0x57>
  419692:	mov    r14,rdx
  419695:	mov    r15,rsi
  419698:	mov    r12,rdi
  41969b:	mov    r13,QWORD PTR [rdi]
  41969e:	xor    ebx,ebx
  4196a0:	jmp    4196b8 <str_set_visit@@Base+0x38>
  4196a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196ac:	nop    DWORD PTR [rax+0x0]
  4196b0:	inc    rbx
  4196b3:	cmp    rbx,rax
  4196b6:	jae    4196d7 <str_set_visit@@Base+0x57>
  4196b8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  4196bd:	mov    rcx,rsi
  4196c0:	or     rcx,0x2
  4196c4:	cmp    rcx,0x2
  4196c8:	je     4196b0 <str_set_visit@@Base+0x30>
  4196ca:	mov    rdi,r14
  4196cd:	call   r15
  4196d0:	mov    rax,QWORD PTR [r12+0x18]
  4196d5:	jmp    4196b0 <str_set_visit@@Base+0x30>
  4196d7:	pop    rbx
  4196d8:	pop    r12
  4196da:	pop    r13
  4196dc:	pop    r14
  4196de:	pop    r15
  4196e0:	ret    
  4196e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004196f0 <ptr_set_clear@@Base>:
  4196f0:	push   rbx
  4196f1:	mov    rbx,rdi
  4196f4:	mov    rdi,QWORD PTR [rdi]
  4196f7:	test   rdi,rdi
  4196fa:	je     419701 <ptr_set_clear@@Base+0x11>
  4196fc:	call   406040 <free@plt>
  419701:	vxorps xmm0,xmm0,xmm0
  419705:	vmovups YMMWORD PTR [rbx],ymm0
  419709:	pop    rbx
  41970a:	vzeroupper 
  41970d:	ret    
  41970e:	xchg   ax,ax

0000000000419710 <ptr_set_destroy@@Base>:
  419710:	push   r15
  419712:	push   r14
  419714:	push   r13
  419716:	push   r12
  419718:	push   rbx
  419719:	mov    r12,rdi
  41971c:	test   rsi,rsi
  41971f:	je     419767 <ptr_set_destroy@@Base+0x57>
  419721:	mov    rax,QWORD PTR [r12+0x18]
  419726:	test   rax,rax
  419729:	je     419767 <ptr_set_destroy@@Base+0x57>
  41972b:	mov    r14,rdx
  41972e:	mov    r15,rsi
  419731:	mov    r13,QWORD PTR [r12]
  419735:	xor    ebx,ebx
  419737:	jmp    419748 <ptr_set_destroy@@Base+0x38>
  419739:	nop    DWORD PTR [rax+0x0]
  419740:	inc    rbx
  419743:	cmp    rbx,rax
  419746:	jae    419767 <ptr_set_destroy@@Base+0x57>
  419748:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41974d:	mov    rcx,rsi
  419750:	or     rcx,0x2
  419754:	cmp    rcx,0x2
  419758:	je     419740 <ptr_set_destroy@@Base+0x30>
  41975a:	mov    rdi,r14
  41975d:	call   r15
  419760:	mov    rax,QWORD PTR [r12+0x18]
  419765:	jmp    419740 <ptr_set_destroy@@Base+0x30>
  419767:	mov    rdi,QWORD PTR [r12]
  41976b:	test   rdi,rdi
  41976e:	je     419775 <ptr_set_destroy@@Base+0x65>
  419770:	call   406040 <free@plt>
  419775:	vxorps xmm0,xmm0,xmm0
  419779:	vmovups YMMWORD PTR [r12],ymm0
  41977f:	pop    rbx
  419780:	pop    r12
  419782:	pop    r13
  419784:	pop    r14
  419786:	pop    r15
  419788:	vzeroupper 
  41978b:	ret    
  41978c:	nop    DWORD PTR [rax+0x0]

0000000000419790 <ptr_set_init@@Base>:
  419790:	push   r14
  419792:	push   rbx
  419793:	push   rax
  419794:	mov    r14,rdi
  419797:	mov    eax,0x4
  41979c:	nop    DWORD PTR [rax+0x0]
  4197a0:	mov    rbx,rax
  4197a3:	imul   rcx,rax,0xb3
  4197aa:	shr    rcx,0x8
  4197ae:	add    rax,rax
  4197b1:	cmp    rcx,rsi
  4197b4:	jb     4197a0 <ptr_set_init@@Base+0x10>
  4197b6:	mov    esi,0x8
  4197bb:	mov    rdi,rbx
  4197be:	call   406150 <calloc@plt>
  4197c3:	mov    QWORD PTR [r14],rax
  4197c6:	test   rax,rax
  4197c9:	je     4197dd <ptr_set_init@@Base+0x4d>
  4197cb:	vxorps xmm0,xmm0,xmm0
  4197cf:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4197d5:	mov    QWORD PTR [r14+0x18],rbx
  4197d9:	xor    eax,eax
  4197db:	jmp    4197e2 <ptr_set_init@@Base+0x52>
  4197dd:	mov    eax,0xffffffff
  4197e2:	add    rsp,0x8
  4197e6:	pop    rbx
  4197e7:	pop    r14
  4197e9:	ret    
  4197ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000004197f0 <ptr_set_resize@@Base>:
  4197f0:	jmp    419800 <ptr_set_resize@@Base+0x10>
  4197f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197fc:	nop    DWORD PTR [rax+0x0]
  419800:	push   r15
  419802:	push   r14
  419804:	push   r12
  419806:	push   rbx
  419807:	sub    rsp,0x28
  41980b:	mov    r14,rdi
  41980e:	mov    r12,QWORD PTR [rdi]
  419811:	mov    rax,QWORD PTR [rdi+0x10]
  419815:	cmp    rax,rsi
  419818:	cmova  rsi,rax
  41981c:	mov    eax,0x4
  419821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41982b:	nop    DWORD PTR [rax+rax*1+0x0]
  419830:	mov    rbx,rax
  419833:	imul   rcx,rax,0xb3
  41983a:	shr    rcx,0x8
  41983e:	add    rax,rax
  419841:	cmp    rcx,rsi
  419844:	jb     419830 <ptr_set_resize@@Base+0x40>
  419846:	mov    esi,0x8
  41984b:	mov    rdi,rbx
  41984e:	call   406150 <calloc@plt>
  419853:	mov    QWORD PTR [rsp+0x8],rax
  419858:	test   rax,rax
  41985b:	je     4198af <ptr_set_resize@@Base+0xbf>
  41985d:	vxorps xmm0,xmm0,xmm0
  419861:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  419867:	mov    QWORD PTR [rsp+0x20],rbx
  41986c:	mov    rax,QWORD PTR [r14+0x18]
  419870:	test   rax,rax
  419873:	je     4198b9 <ptr_set_resize@@Base+0xc9>
  419875:	xor    ebx,ebx
  419877:	lea    r15,[rsp+0x8]
  41987c:	jmp    419888 <ptr_set_resize@@Base+0x98>
  41987e:	xchg   ax,ax
  419880:	inc    rbx
  419883:	cmp    rbx,rax
  419886:	jae    4198b6 <ptr_set_resize@@Base+0xc6>
  419888:	mov    rdx,QWORD PTR [r12+rbx*8]
  41988c:	mov    rcx,rdx
  41988f:	or     rcx,0x2
  419893:	cmp    rcx,0x2
  419897:	je     419880 <ptr_set_resize@@Base+0x90>
  419899:	mov    rdi,r15
  41989c:	mov    rsi,rdx
  41989f:	mov    ecx,0x3
  4198a4:	call   419900 <ptr_set_insert@@Base+0x10>
  4198a9:	mov    rax,QWORD PTR [r14+0x18]
  4198ad:	jmp    419880 <ptr_set_resize@@Base+0x90>
  4198af:	mov    eax,0xffffffff
  4198b4:	jmp    4198d3 <ptr_set_resize@@Base+0xe3>
  4198b6:	mov    r12,QWORD PTR [r14]
  4198b9:	test   r12,r12
  4198bc:	je     4198c6 <ptr_set_resize@@Base+0xd6>
  4198be:	mov    rdi,r12
  4198c1:	call   406040 <free@plt>
  4198c6:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  4198cc:	vmovups YMMWORD PTR [r14],ymm0
  4198d1:	xor    eax,eax
  4198d3:	add    rsp,0x28
  4198d7:	pop    rbx
  4198d8:	pop    r12
  4198da:	pop    r14
  4198dc:	pop    r15
  4198de:	vzeroupper 
  4198e1:	ret    
  4198e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4198ec:	nop    DWORD PTR [rax+0x0]

00000000004198f0 <ptr_set_insert@@Base>:
  4198f0:	mov    rdx,rcx
  4198f3:	mov    ecx,r8d
  4198f6:	jmp    419900 <ptr_set_insert@@Base+0x10>
  4198f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419900:	push   rbp
  419901:	push   r15
  419903:	push   r14
  419905:	push   r13
  419907:	push   r12
  419909:	push   rbx
  41990a:	sub    rsp,0x18
  41990e:	cmp    rdx,0x2
  419912:	je     419a28 <ptr_set_insert@@Base+0x138>
  419918:	mov    r14,rdx
  41991b:	cmp    rdx,0x1
  41991f:	je     419a47 <ptr_set_insert@@Base+0x157>
  419925:	test   r14,r14
  419928:	je     419a66 <ptr_set_insert@@Base+0x176>
  41992e:	mov    r12d,ecx
  419931:	mov    r13,rsi
  419934:	mov    r15,rdi
  419937:	mov    rsi,QWORD PTR [rdi+0x10]
  41993b:	mov    rbp,QWORD PTR [rdi+0x18]
  41993f:	imul   rax,rbp,0xb3
  419946:	shr    rax,0x8
  41994a:	cmp    rsi,rax
  41994d:	jb     419966 <ptr_set_insert@@Base+0x76>
  41994f:	add    rsi,rsi
  419952:	mov    rdi,r15
  419955:	call   419800 <ptr_set_resize@@Base+0x10>
  41995a:	test   eax,eax
  41995c:	jne    419a85 <ptr_set_insert@@Base+0x195>
  419962:	mov    rbp,QWORD PTR [r15+0x18]
  419966:	mov    rbx,QWORD PTR [r15]
  419969:	dec    rbp
  41996c:	mov    QWORD PTR [rsp+0x8],r13
  419971:	lea    rdi,[rsp+0x8]
  419976:	lea    rcx,[rsp+0x10]
  41997b:	mov    esi,0x8
  419980:	mov    edx,0x2f693b52
  419985:	call   42c490 <cmetrohash64_1@@Base>
  41998a:	mov    rdx,QWORD PTR [rsp+0x10]
  41998f:	mov    eax,edx
  419991:	mov    ecx,ebp
  419993:	and    ecx,edx
  419995:	mov    edx,r12d
  419998:	or     edx,0x1
  41999b:	cmp    edx,0x3
  41999e:	jne    4199c9 <ptr_set_insert@@Base+0xd9>
  4199a0:	inc    QWORD PTR [r15+0x10]
  4199a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199ae:	xchg   ax,ax
  4199b0:	inc    rax
  4199b3:	mov    rdx,QWORD PTR [rbx+rcx*8]
  4199b7:	or     rdx,0x2
  4199bb:	cmp    rdx,0x2
  4199bf:	je     4199ff <ptr_set_insert@@Base+0x10f>
  4199c1:	mov    rcx,rax
  4199c4:	and    rcx,rbp
  4199c7:	jmp    4199b0 <ptr_set_insert@@Base+0xc0>
  4199c9:	inc    rax
  4199cc:	xor    edx,edx
  4199ce:	jmp    4199e0 <ptr_set_insert@@Base+0xf0>
  4199d0:	test   rdx,rdx
  4199d3:	cmove  rdx,rsi
  4199d7:	mov    rcx,rax
  4199da:	and    rcx,rbp
  4199dd:	inc    rax
  4199e0:	lea    rsi,[rbx+rcx*8]
  4199e4:	mov    rcx,QWORD PTR [rbx+rcx*8]
  4199e8:	cmp    rcx,0x2
  4199ec:	je     4199d0 <ptr_set_insert@@Base+0xe0>
  4199ee:	test   rcx,rcx
  4199f1:	je     419a05 <ptr_set_insert@@Base+0x115>
  4199f3:	cmp    rcx,r13
  4199f6:	jne    4199d7 <ptr_set_insert@@Base+0xe7>
  4199f8:	test   r12d,r12d
  4199fb:	jne    419a16 <ptr_set_insert@@Base+0x126>
  4199fd:	jmp    419a13 <ptr_set_insert@@Base+0x123>
  4199ff:	lea    rsi,[rbx+rcx*8]
  419a03:	jmp    419a10 <ptr_set_insert@@Base+0x120>
  419a05:	test   rdx,rdx
  419a08:	cmovne rsi,rdx
  419a0c:	inc    QWORD PTR [r15+0x10]
  419a10:	xor    r13d,r13d
  419a13:	mov    QWORD PTR [rsi],r14
  419a16:	mov    rax,r13
  419a19:	add    rsp,0x18
  419a1d:	pop    rbx
  419a1e:	pop    r12
  419a20:	pop    r13
  419a22:	pop    r14
  419a24:	pop    r15
  419a26:	pop    rbp
  419a27:	ret    
  419a28:	lea    rdi,[rip+0x2d424]        # 446e53 <str_set_deleted@@Base+0xd3>
  419a2f:	lea    rsi,[rip+0x2d369]        # 446d9f <str_set_deleted@@Base+0x1f>
  419a36:	lea    rcx,[rip+0x2d3cc]        # 446e09 <str_set_deleted@@Base+0x89>
  419a3d:	mov    edx,0x73
  419a42:	call   406100 <__assert_fail@plt>
  419a47:	lea    rdi,[rip+0x2d41c]        # 446e6a <str_set_deleted@@Base+0xea>
  419a4e:	lea    rsi,[rip+0x2d34a]        # 446d9f <str_set_deleted@@Base+0x1f>
  419a55:	lea    rcx,[rip+0x2d3ad]        # 446e09 <str_set_deleted@@Base+0x89>
  419a5c:	mov    edx,0x74
  419a61:	call   406100 <__assert_fail@plt>
  419a66:	lea    rdi,[rip+0x2d31b]        # 446d88 <str_set_deleted@@Base+0x8>
  419a6d:	lea    rsi,[rip+0x2d32b]        # 446d9f <str_set_deleted@@Base+0x1f>
  419a74:	lea    rcx,[rip+0x2d38e]        # 446e09 <str_set_deleted@@Base+0x89>
  419a7b:	mov    edx,0x72
  419a80:	call   406100 <__assert_fail@plt>
  419a85:	mov    rax,QWORD PTR [rip+0x3856c]        # 451ff8 <stderr@GLIBC_2.2.5>
  419a8c:	mov    rdi,QWORD PTR [rax]
  419a8f:	lea    rsi,[rip+0x2d3e9]        # 446e7f <str_set_deleted@@Base+0xff>
  419a96:	lea    rdx,[rip+0x2d3f9]        # 446e96 <str_set_deleted@@Base+0x116>
  419a9d:	xor    eax,eax
  419a9f:	call   406180 <fprintf@plt>
  419aa4:	mov    edi,0x1
  419aa9:	call   406220 <exit@plt>
  419aae:	xchg   ax,ax

0000000000419ab0 <ptr_set_insert_item@@Base>:
  419ab0:	mov    ecx,edx
  419ab2:	mov    rdx,rsi
  419ab5:	jmp    419900 <ptr_set_insert@@Base+0x10>
  419aba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419ac0 <ptr_set_find@@Base>:
  419ac0:	push   r15
  419ac2:	push   r14
  419ac4:	push   rbx
  419ac5:	sub    rsp,0x10
  419ac9:	mov    r15,QWORD PTR [rdi]
  419acc:	test   r15,r15
  419acf:	je     419b1f <ptr_set_find@@Base+0x5f>
  419ad1:	mov    r14,rsi
  419ad4:	mov    rbx,QWORD PTR [rdi+0x18]
  419ad8:	dec    rbx
  419adb:	mov    QWORD PTR [rsp],rsi
  419adf:	mov    rdi,rsp
  419ae2:	lea    rcx,[rsp+0x8]
  419ae7:	mov    esi,0x8
  419aec:	mov    edx,0x2f693b52
  419af1:	call   42c490 <cmetrohash64_1@@Base>
  419af6:	mov    eax,DWORD PTR [rsp+0x8]
  419afa:	jmp    419b03 <ptr_set_find@@Base+0x43>
  419afc:	nop    DWORD PTR [rax+0x0]
  419b00:	inc    rax
  419b03:	mov    rcx,rax
  419b06:	and    rcx,rbx
  419b09:	mov    rcx,QWORD PTR [r15+rcx*8]
  419b0d:	cmp    rcx,0x2
  419b11:	je     419b00 <ptr_set_find@@Base+0x40>
  419b13:	test   rcx,rcx
  419b16:	je     419b1f <ptr_set_find@@Base+0x5f>
  419b18:	cmp    rcx,r14
  419b1b:	jne    419b00 <ptr_set_find@@Base+0x40>
  419b1d:	jmp    419b22 <ptr_set_find@@Base+0x62>
  419b1f:	xor    r14d,r14d
  419b22:	mov    rax,r14
  419b25:	add    rsp,0x10
  419b29:	pop    rbx
  419b2a:	pop    r14
  419b2c:	pop    r15
  419b2e:	ret    
  419b2f:	nop

0000000000419b30 <ptr_set_find_item@@Base>:
  419b30:	push   r15
  419b32:	push   r14
  419b34:	push   rbx
  419b35:	sub    rsp,0x10
  419b39:	mov    r15,QWORD PTR [rdi]
  419b3c:	test   r15,r15
  419b3f:	je     419b8f <ptr_set_find_item@@Base+0x5f>
  419b41:	mov    r14,rsi
  419b44:	mov    rbx,QWORD PTR [rdi+0x18]
  419b48:	dec    rbx
  419b4b:	mov    QWORD PTR [rsp],rsi
  419b4f:	mov    rdi,rsp
  419b52:	lea    rcx,[rsp+0x8]
  419b57:	mov    esi,0x8
  419b5c:	mov    edx,0x2f693b52
  419b61:	call   42c490 <cmetrohash64_1@@Base>
  419b66:	mov    eax,DWORD PTR [rsp+0x8]
  419b6a:	jmp    419b73 <ptr_set_find_item@@Base+0x43>
  419b6c:	nop    DWORD PTR [rax+0x0]
  419b70:	inc    rax
  419b73:	mov    rcx,rax
  419b76:	and    rcx,rbx
  419b79:	mov    rcx,QWORD PTR [r15+rcx*8]
  419b7d:	cmp    rcx,0x2
  419b81:	je     419b70 <ptr_set_find_item@@Base+0x40>
  419b83:	test   rcx,rcx
  419b86:	je     419b8f <ptr_set_find_item@@Base+0x5f>
  419b88:	cmp    rcx,r14
  419b8b:	jne    419b70 <ptr_set_find_item@@Base+0x40>
  419b8d:	jmp    419b92 <ptr_set_find_item@@Base+0x62>
  419b8f:	xor    r14d,r14d
  419b92:	mov    rax,r14
  419b95:	add    rsp,0x10
  419b99:	pop    rbx
  419b9a:	pop    r14
  419b9c:	pop    r15
  419b9e:	ret    
  419b9f:	nop

0000000000419ba0 <ptr_set_remove@@Base>:
  419ba0:	push   r15
  419ba2:	push   r14
  419ba4:	push   r12
  419ba6:	push   rbx
  419ba7:	sub    rsp,0x18
  419bab:	mov    r12,QWORD PTR [rdi]
  419bae:	test   r12,r12
  419bb1:	je     419c1b <ptr_set_remove@@Base+0x7b>
  419bb3:	mov    r15,rsi
  419bb6:	mov    r14,rdi
  419bb9:	mov    rbx,QWORD PTR [rdi+0x18]
  419bbd:	dec    rbx
  419bc0:	mov    QWORD PTR [rsp+0x8],rsi
  419bc5:	lea    rdi,[rsp+0x8]
  419bca:	lea    rcx,[rsp+0x10]
  419bcf:	mov    esi,0x8
  419bd4:	mov    edx,0x2f693b52
  419bd9:	call   42c490 <cmetrohash64_1@@Base>
  419bde:	mov    eax,DWORD PTR [rsp+0x10]
  419be2:	jmp    419bf3 <ptr_set_remove@@Base+0x53>
  419be4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419bee:	xchg   ax,ax
  419bf0:	inc    rax
  419bf3:	mov    rcx,rax
  419bf6:	and    rcx,rbx
  419bf9:	mov    rdx,QWORD PTR [r12+rcx*8]
  419bfd:	cmp    rdx,0x2
  419c01:	je     419bf0 <ptr_set_remove@@Base+0x50>
  419c03:	test   rdx,rdx
  419c06:	je     419c1b <ptr_set_remove@@Base+0x7b>
  419c08:	cmp    rdx,r15
  419c0b:	jne    419bf0 <ptr_set_remove@@Base+0x50>
  419c0d:	mov    QWORD PTR [r12+rcx*8],0x2
  419c15:	dec    QWORD PTR [r14+0x10]
  419c19:	jmp    419c1e <ptr_set_remove@@Base+0x7e>
  419c1b:	xor    r15d,r15d
  419c1e:	mov    rax,r15
  419c21:	add    rsp,0x18
  419c25:	pop    rbx
  419c26:	pop    r12
  419c28:	pop    r14
  419c2a:	pop    r15
  419c2c:	ret    
  419c2d:	nop    DWORD PTR [rax]

0000000000419c30 <ptr_set_remove_item@@Base>:
  419c30:	push   r15
  419c32:	push   r14
  419c34:	push   r12
  419c36:	push   rbx
  419c37:	sub    rsp,0x18
  419c3b:	mov    r12,QWORD PTR [rdi]
  419c3e:	test   r12,r12
  419c41:	je     419cab <ptr_set_remove_item@@Base+0x7b>
  419c43:	mov    r15,rsi
  419c46:	mov    r14,rdi
  419c49:	mov    rbx,QWORD PTR [rdi+0x18]
  419c4d:	dec    rbx
  419c50:	mov    QWORD PTR [rsp+0x8],rsi
  419c55:	lea    rdi,[rsp+0x8]
  419c5a:	lea    rcx,[rsp+0x10]
  419c5f:	mov    esi,0x8
  419c64:	mov    edx,0x2f693b52
  419c69:	call   42c490 <cmetrohash64_1@@Base>
  419c6e:	mov    eax,DWORD PTR [rsp+0x10]
  419c72:	jmp    419c83 <ptr_set_remove_item@@Base+0x53>
  419c74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c7e:	xchg   ax,ax
  419c80:	inc    rax
  419c83:	mov    rcx,rax
  419c86:	and    rcx,rbx
  419c89:	mov    rdx,QWORD PTR [r12+rcx*8]
  419c8d:	cmp    rdx,0x2
  419c91:	je     419c80 <ptr_set_remove_item@@Base+0x50>
  419c93:	test   rdx,rdx
  419c96:	je     419cab <ptr_set_remove_item@@Base+0x7b>
  419c98:	cmp    rdx,r15
  419c9b:	jne    419c80 <ptr_set_remove_item@@Base+0x50>
  419c9d:	mov    QWORD PTR [r12+rcx*8],0x2
  419ca5:	dec    QWORD PTR [r14+0x10]
  419ca9:	jmp    419cae <ptr_set_remove_item@@Base+0x7e>
  419cab:	xor    r15d,r15d
  419cae:	mov    rax,r15
  419cb1:	add    rsp,0x18
  419cb5:	pop    rbx
  419cb6:	pop    r12
  419cb8:	pop    r14
  419cba:	pop    r15
  419cbc:	ret    
  419cbd:	nop    DWORD PTR [rax]

0000000000419cc0 <ptr_set_visit@@Base>:
  419cc0:	push   r15
  419cc2:	push   r14
  419cc4:	push   r13
  419cc6:	push   r12
  419cc8:	push   rbx
  419cc9:	mov    rax,QWORD PTR [rdi+0x18]
  419ccd:	test   rax,rax
  419cd0:	je     419d17 <ptr_set_visit@@Base+0x57>
  419cd2:	mov    r14,rdx
  419cd5:	mov    r15,rsi
  419cd8:	mov    r12,rdi
  419cdb:	mov    r13,QWORD PTR [rdi]
  419cde:	xor    ebx,ebx
  419ce0:	jmp    419cf8 <ptr_set_visit@@Base+0x38>
  419ce2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419cec:	nop    DWORD PTR [rax+0x0]
  419cf0:	inc    rbx
  419cf3:	cmp    rbx,rax
  419cf6:	jae    419d17 <ptr_set_visit@@Base+0x57>
  419cf8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419cfd:	mov    rcx,rsi
  419d00:	or     rcx,0x2
  419d04:	cmp    rcx,0x2
  419d08:	je     419cf0 <ptr_set_visit@@Base+0x30>
  419d0a:	mov    rdi,r14
  419d0d:	call   r15
  419d10:	mov    rax,QWORD PTR [r12+0x18]
  419d15:	jmp    419cf0 <ptr_set_visit@@Base+0x30>
  419d17:	pop    rbx
  419d18:	pop    r12
  419d1a:	pop    r13
  419d1c:	pop    r14
  419d1e:	pop    r15
  419d20:	ret    
  419d21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419d30 <fb_symbol_table_clear@@Base>:
  419d30:	push   rbx
  419d31:	mov    rbx,rdi
  419d34:	mov    rdi,QWORD PTR [rdi]
  419d37:	test   rdi,rdi
  419d3a:	je     419d41 <fb_symbol_table_clear@@Base+0x11>
  419d3c:	call   406040 <free@plt>
  419d41:	vxorps xmm0,xmm0,xmm0
  419d45:	vmovups YMMWORD PTR [rbx],ymm0
  419d49:	pop    rbx
  419d4a:	vzeroupper 
  419d4d:	ret    
  419d4e:	xchg   ax,ax

0000000000419d50 <fb_symbol_table_destroy@@Base>:
  419d50:	push   r15
  419d52:	push   r14
  419d54:	push   r13
  419d56:	push   r12
  419d58:	push   rbx
  419d59:	mov    r12,rdi
  419d5c:	test   rsi,rsi
  419d5f:	je     419da7 <fb_symbol_table_destroy@@Base+0x57>
  419d61:	mov    rax,QWORD PTR [r12+0x18]
  419d66:	test   rax,rax
  419d69:	je     419da7 <fb_symbol_table_destroy@@Base+0x57>
  419d6b:	mov    r14,rdx
  419d6e:	mov    r15,rsi
  419d71:	mov    r13,QWORD PTR [r12]
  419d75:	xor    ebx,ebx
  419d77:	jmp    419d88 <fb_symbol_table_destroy@@Base+0x38>
  419d79:	nop    DWORD PTR [rax+0x0]
  419d80:	inc    rbx
  419d83:	cmp    rbx,rax
  419d86:	jae    419da7 <fb_symbol_table_destroy@@Base+0x57>
  419d88:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419d8d:	mov    rcx,rsi
  419d90:	or     rcx,0x2
  419d94:	cmp    rcx,0x2
  419d98:	je     419d80 <fb_symbol_table_destroy@@Base+0x30>
  419d9a:	mov    rdi,r14
  419d9d:	call   r15
  419da0:	mov    rax,QWORD PTR [r12+0x18]
  419da5:	jmp    419d80 <fb_symbol_table_destroy@@Base+0x30>
  419da7:	mov    rdi,QWORD PTR [r12]
  419dab:	test   rdi,rdi
  419dae:	je     419db5 <fb_symbol_table_destroy@@Base+0x65>
  419db0:	call   406040 <free@plt>
  419db5:	vxorps xmm0,xmm0,xmm0
  419db9:	vmovups YMMWORD PTR [r12],ymm0
  419dbf:	pop    rbx
  419dc0:	pop    r12
  419dc2:	pop    r13
  419dc4:	pop    r14
  419dc6:	pop    r15
  419dc8:	vzeroupper 
  419dcb:	ret    
  419dcc:	nop    DWORD PTR [rax+0x0]

0000000000419dd0 <fb_symbol_table_init@@Base>:
  419dd0:	push   r14
  419dd2:	push   rbx
  419dd3:	push   rax
  419dd4:	mov    r14,rdi
  419dd7:	mov    eax,0x4
  419ddc:	nop    DWORD PTR [rax+0x0]
  419de0:	mov    rbx,rax
  419de3:	imul   rcx,rax,0xb3
  419dea:	shr    rcx,0x8
  419dee:	add    rax,rax
  419df1:	cmp    rcx,rsi
  419df4:	jb     419de0 <fb_symbol_table_init@@Base+0x10>
  419df6:	mov    esi,0x8
  419dfb:	mov    rdi,rbx
  419dfe:	call   406150 <calloc@plt>
  419e03:	mov    QWORD PTR [r14],rax
  419e06:	test   rax,rax
  419e09:	je     419e1d <fb_symbol_table_init@@Base+0x4d>
  419e0b:	vxorps xmm0,xmm0,xmm0
  419e0f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  419e15:	mov    QWORD PTR [r14+0x18],rbx
  419e19:	xor    eax,eax
  419e1b:	jmp    419e22 <fb_symbol_table_init@@Base+0x52>
  419e1d:	mov    eax,0xffffffff
  419e22:	add    rsp,0x8
  419e26:	pop    rbx
  419e27:	pop    r14
  419e29:	ret    
  419e2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419e30 <fb_symbol_table_resize@@Base>:
  419e30:	jmp    419e40 <fb_symbol_table_resize@@Base+0x10>
  419e32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e3c:	nop    DWORD PTR [rax+0x0]
  419e40:	push   r15
  419e42:	push   r14
  419e44:	push   r12
  419e46:	push   rbx
  419e47:	sub    rsp,0x28
  419e4b:	mov    r14,rdi
  419e4e:	mov    r12,QWORD PTR [rdi]
  419e51:	mov    rax,QWORD PTR [rdi+0x10]
  419e55:	cmp    rax,rsi
  419e58:	cmova  rsi,rax
  419e5c:	mov    eax,0x4
  419e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  419e70:	mov    rbx,rax
  419e73:	imul   rcx,rax,0xb3
  419e7a:	shr    rcx,0x8
  419e7e:	add    rax,rax
  419e81:	cmp    rcx,rsi
  419e84:	jb     419e70 <fb_symbol_table_resize@@Base+0x40>
  419e86:	mov    esi,0x8
  419e8b:	mov    rdi,rbx
  419e8e:	call   406150 <calloc@plt>
  419e93:	mov    QWORD PTR [rsp+0x8],rax
  419e98:	test   rax,rax
  419e9b:	je     419ef8 <fb_symbol_table_resize@@Base+0xc8>
  419e9d:	vxorps xmm0,xmm0,xmm0
  419ea1:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  419ea7:	mov    QWORD PTR [rsp+0x20],rbx
  419eac:	mov    rax,QWORD PTR [r14+0x18]
  419eb0:	test   rax,rax
  419eb3:	je     419f02 <fb_symbol_table_resize@@Base+0xd2>
  419eb5:	xor    ebx,ebx
  419eb7:	lea    r15,[rsp+0x8]
  419ebc:	jmp    419ec8 <fb_symbol_table_resize@@Base+0x98>
  419ebe:	xchg   ax,ax
  419ec0:	inc    rbx
  419ec3:	cmp    rbx,rax
  419ec6:	jae    419eff <fb_symbol_table_resize@@Base+0xcf>
  419ec8:	mov    rcx,QWORD PTR [r12+rbx*8]
  419ecc:	mov    rdx,rcx
  419ecf:	or     rdx,0x2
  419ed3:	cmp    rdx,0x2
  419ed7:	je     419ec0 <fb_symbol_table_resize@@Base+0x90>
  419ed9:	mov    rax,QWORD PTR [rcx+0x8]
  419edd:	mov    rsi,QWORD PTR [rax]
  419ee0:	mov    rdx,QWORD PTR [rax+0x8]
  419ee4:	mov    rdi,r15
  419ee7:	mov    r8d,0x3
  419eed:	call   419f40 <fb_symbol_table_insert@@Base+0x10>
  419ef2:	mov    rax,QWORD PTR [r14+0x18]
  419ef6:	jmp    419ec0 <fb_symbol_table_resize@@Base+0x90>
  419ef8:	mov    eax,0xffffffff
  419efd:	jmp    419f1c <fb_symbol_table_resize@@Base+0xec>
  419eff:	mov    r12,QWORD PTR [r14]
  419f02:	test   r12,r12
  419f05:	je     419f0f <fb_symbol_table_resize@@Base+0xdf>
  419f07:	mov    rdi,r12
  419f0a:	call   406040 <free@plt>
  419f0f:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  419f15:	vmovups YMMWORD PTR [r14],ymm0
  419f1a:	xor    eax,eax
  419f1c:	add    rsp,0x28
  419f20:	pop    rbx
  419f21:	pop    r12
  419f23:	pop    r14
  419f25:	pop    r15
  419f27:	vzeroupper 
  419f2a:	ret    
  419f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419f30 <fb_symbol_table_insert@@Base>:
  419f30:	jmp    419f40 <fb_symbol_table_insert@@Base+0x10>
  419f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f3c:	nop    DWORD PTR [rax+0x0]
  419f40:	push   rbp
  419f41:	push   r15
  419f43:	push   r14
  419f45:	push   r13
  419f47:	push   r12
  419f49:	push   rbx
  419f4a:	sub    rsp,0x38
  419f4e:	mov    QWORD PTR [rsp+0x20],rsi
  419f53:	cmp    rcx,0x2
  419f57:	je     41a0bb <fb_symbol_table_insert@@Base+0x18b>
  419f5d:	mov    r13,rcx
  419f60:	cmp    rcx,0x1
  419f64:	je     41a0da <fb_symbol_table_insert@@Base+0x1aa>
  419f6a:	test   r13,r13
  419f6d:	je     41a0f9 <fb_symbol_table_insert@@Base+0x1c9>
  419f73:	mov    ebp,r8d
  419f76:	mov    rbx,rdi
  419f79:	mov    rsi,QWORD PTR [rdi+0x10]
  419f7d:	mov    r15,QWORD PTR [rdi+0x18]
  419f81:	imul   rax,r15,0xb3
  419f88:	shr    rax,0x8
  419f8c:	cmp    rsi,rax
  419f8f:	mov    QWORD PTR [rsp+0x8],rdx
  419f94:	jb     419fb2 <fb_symbol_table_insert@@Base+0x82>
  419f96:	add    rsi,rsi
  419f99:	mov    rdi,rbx
  419f9c:	call   419e40 <fb_symbol_table_resize@@Base+0x10>
  419fa1:	test   eax,eax
  419fa3:	jne    41a118 <fb_symbol_table_insert@@Base+0x1e8>
  419fa9:	mov    r15,QWORD PTR [rbx+0x18]
  419fad:	mov    rdx,QWORD PTR [rsp+0x8]
  419fb2:	mov    r14,QWORD PTR [rbx]
  419fb5:	dec    r15
  419fb8:	lea    rcx,[rsp+0x30]
  419fbd:	mov    rdi,QWORD PTR [rsp+0x20]
  419fc2:	mov    rsi,rdx
  419fc5:	mov    edx,0x2f693b52
  419fca:	call   42c490 <cmetrohash64_1@@Base>
  419fcf:	mov    rcx,QWORD PTR [rsp+0x30]
  419fd4:	mov    r12d,ecx
  419fd7:	mov    eax,r15d
  419fda:	and    eax,ecx
  419fdc:	mov    ecx,ebp
  419fde:	or     ecx,0x1
  419fe1:	cmp    ecx,0x3
  419fe4:	jne    41a00d <fb_symbol_table_insert@@Base+0xdd>
  419fe6:	inc    QWORD PTR [rbx+0x10]
  419fea:	nop    WORD PTR [rax+rax*1+0x0]
  419ff0:	inc    r12
  419ff3:	mov    rcx,QWORD PTR [r14+rax*8]
  419ff7:	or     rcx,0x2
  419ffb:	cmp    rcx,0x2
  419fff:	je     41a086 <fb_symbol_table_insert@@Base+0x156>
  41a005:	mov    rax,r12
  41a008:	and    rax,r15
  41a00b:	jmp    419ff0 <fb_symbol_table_insert@@Base+0xc0>
  41a00d:	mov    DWORD PTR [rsp+0x14],ebp
  41a011:	mov    QWORD PTR [rsp+0x28],rbx
  41a016:	mov    QWORD PTR [rsp+0x18],r13
  41a01b:	inc    r12
  41a01e:	xor    r13d,r13d
  41a021:	mov    rcx,QWORD PTR [rsp+0x8]
  41a026:	jmp    41a040 <fb_symbol_table_insert@@Base+0x110>
  41a028:	nop    DWORD PTR [rax+rax*1+0x0]
  41a030:	test   r13,r13
  41a033:	cmove  r13,rbp
  41a037:	mov    rax,r12
  41a03a:	and    rax,r15
  41a03d:	inc    r12
  41a040:	lea    rbp,[r14+rax*8]
  41a044:	mov    rbx,QWORD PTR [r14+rax*8]
  41a048:	cmp    rbx,0x2
  41a04c:	je     41a030 <fb_symbol_table_insert@@Base+0x100>
  41a04e:	test   rbx,rbx
  41a051:	je     41a08e <fb_symbol_table_insert@@Base+0x15e>
  41a053:	mov    rax,QWORD PTR [rbx+0x8]
  41a057:	cmp    QWORD PTR [rax+0x8],rcx
  41a05b:	jne    41a037 <fb_symbol_table_insert@@Base+0x107>
  41a05d:	mov    rsi,QWORD PTR [rax]
  41a060:	mov    rdi,QWORD PTR [rsp+0x20]
  41a065:	mov    rdx,QWORD PTR [rsp+0x8]
  41a06a:	call   4061c0 <bcmp@plt>
  41a06f:	mov    rcx,QWORD PTR [rsp+0x8]
  41a074:	test   eax,eax
  41a076:	jne    41a037 <fb_symbol_table_insert@@Base+0x107>
  41a078:	cmp    DWORD PTR [rsp+0x14],0x0
  41a07d:	mov    r13,QWORD PTR [rsp+0x18]
  41a082:	jne    41a0a9 <fb_symbol_table_insert@@Base+0x179>
  41a084:	jmp    41a0a5 <fb_symbol_table_insert@@Base+0x175>
  41a086:	lea    rbp,[r14+rax*8]
  41a08a:	xor    ebx,ebx
  41a08c:	jmp    41a0a5 <fb_symbol_table_insert@@Base+0x175>
  41a08e:	test   r13,r13
  41a091:	cmovne rbp,r13
  41a095:	mov    rax,QWORD PTR [rsp+0x28]
  41a09a:	inc    QWORD PTR [rax+0x10]
  41a09e:	xor    ebx,ebx
  41a0a0:	mov    r13,QWORD PTR [rsp+0x18]
  41a0a5:	mov    QWORD PTR [rbp+0x0],r13
  41a0a9:	mov    rax,rbx
  41a0ac:	add    rsp,0x38
  41a0b0:	pop    rbx
  41a0b1:	pop    r12
  41a0b3:	pop    r13
  41a0b5:	pop    r14
  41a0b7:	pop    r15
  41a0b9:	pop    rbp
  41a0ba:	ret    
  41a0bb:	lea    rdi,[rip+0x2cd91]        # 446e53 <str_set_deleted@@Base+0xd3>
  41a0c2:	lea    rsi,[rip+0x2ccd6]        # 446d9f <str_set_deleted@@Base+0x1f>
  41a0c9:	lea    rcx,[rip+0x2cd39]        # 446e09 <str_set_deleted@@Base+0x89>
  41a0d0:	mov    edx,0x73
  41a0d5:	call   406100 <__assert_fail@plt>
  41a0da:	lea    rdi,[rip+0x2cd89]        # 446e6a <str_set_deleted@@Base+0xea>
  41a0e1:	lea    rsi,[rip+0x2ccb7]        # 446d9f <str_set_deleted@@Base+0x1f>
  41a0e8:	lea    rcx,[rip+0x2cd1a]        # 446e09 <str_set_deleted@@Base+0x89>
  41a0ef:	mov    edx,0x74
  41a0f4:	call   406100 <__assert_fail@plt>
  41a0f9:	lea    rdi,[rip+0x2cc88]        # 446d88 <str_set_deleted@@Base+0x8>
  41a100:	lea    rsi,[rip+0x2cc98]        # 446d9f <str_set_deleted@@Base+0x1f>
  41a107:	lea    rcx,[rip+0x2ccfb]        # 446e09 <str_set_deleted@@Base+0x89>
  41a10e:	mov    edx,0x72
  41a113:	call   406100 <__assert_fail@plt>
  41a118:	mov    rax,QWORD PTR [rip+0x37ed9]        # 451ff8 <stderr@GLIBC_2.2.5>
  41a11f:	mov    rdi,QWORD PTR [rax]
  41a122:	lea    rsi,[rip+0x2cd56]        # 446e7f <str_set_deleted@@Base+0xff>
  41a129:	lea    rdx,[rip+0x2cd66]        # 446e96 <str_set_deleted@@Base+0x116>
  41a130:	xor    eax,eax
  41a132:	call   406180 <fprintf@plt>
  41a137:	mov    edi,0x1
  41a13c:	call   406220 <exit@plt>
  41a141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a14b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a150 <fb_symbol_table_insert_item@@Base>:
  41a150:	mov    r8d,edx
  41a153:	mov    rcx,rsi
  41a156:	mov    rax,QWORD PTR [rsi+0x8]
  41a15a:	mov    rsi,QWORD PTR [rax]
  41a15d:	mov    rdx,QWORD PTR [rax+0x8]
  41a161:	jmp    419f40 <fb_symbol_table_insert@@Base+0x10>
  41a166:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041a170 <fb_symbol_table_find@@Base>:
  41a170:	push   rbp
  41a171:	push   r15
  41a173:	push   r14
  41a175:	push   r13
  41a177:	push   r12
  41a179:	push   rbx
  41a17a:	push   rax
  41a17b:	mov    r12,QWORD PTR [rdi]
  41a17e:	test   r12,r12
  41a181:	je     41a1e6 <fb_symbol_table_find@@Base+0x76>
  41a183:	mov    r15,rdx
  41a186:	mov    r14,rsi
  41a189:	mov    r13,QWORD PTR [rdi+0x18]
  41a18d:	dec    r13
  41a190:	mov    rcx,rsp
  41a193:	mov    rdi,rsi
  41a196:	mov    rsi,rdx
  41a199:	mov    edx,0x2f693b52
  41a19e:	call   42c490 <cmetrohash64_1@@Base>
  41a1a3:	mov    ebp,DWORD PTR [rsp]
  41a1a6:	jmp    41a1b3 <fb_symbol_table_find@@Base+0x43>
  41a1a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1b0:	inc    rbp
  41a1b3:	mov    rax,rbp
  41a1b6:	and    rax,r13
  41a1b9:	mov    rbx,QWORD PTR [r12+rax*8]
  41a1bd:	cmp    rbx,0x2
  41a1c1:	je     41a1b0 <fb_symbol_table_find@@Base+0x40>
  41a1c3:	test   rbx,rbx
  41a1c6:	je     41a1e6 <fb_symbol_table_find@@Base+0x76>
  41a1c8:	mov    rax,QWORD PTR [rbx+0x8]
  41a1cc:	cmp    QWORD PTR [rax+0x8],r15
  41a1d0:	jne    41a1b0 <fb_symbol_table_find@@Base+0x40>
  41a1d2:	mov    rsi,QWORD PTR [rax]
  41a1d5:	mov    rdi,r14
  41a1d8:	mov    rdx,r15
  41a1db:	call   4061c0 <bcmp@plt>
  41a1e0:	test   eax,eax
  41a1e2:	jne    41a1b0 <fb_symbol_table_find@@Base+0x40>
  41a1e4:	jmp    41a1e8 <fb_symbol_table_find@@Base+0x78>
  41a1e6:	xor    ebx,ebx
  41a1e8:	mov    rax,rbx
  41a1eb:	add    rsp,0x8
  41a1ef:	pop    rbx
  41a1f0:	pop    r12
  41a1f2:	pop    r13
  41a1f4:	pop    r14
  41a1f6:	pop    r15
  41a1f8:	pop    rbp
  41a1f9:	ret    
  41a1fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a200 <fb_symbol_table_find_item@@Base>:
  41a200:	push   rbp
  41a201:	push   r15
  41a203:	push   r14
  41a205:	push   r13
  41a207:	push   r12
  41a209:	push   rbx
  41a20a:	push   rax
  41a20b:	mov    r12,QWORD PTR [rdi]
  41a20e:	test   r12,r12
  41a211:	je     41a276 <fb_symbol_table_find_item@@Base+0x76>
  41a213:	mov    rax,QWORD PTR [rsi+0x8]
  41a217:	mov    r14,QWORD PTR [rax]
  41a21a:	mov    r15,QWORD PTR [rax+0x8]
  41a21e:	mov    r13,QWORD PTR [rdi+0x18]
  41a222:	dec    r13
  41a225:	mov    rcx,rsp
  41a228:	mov    rdi,r14
  41a22b:	mov    rsi,r15
  41a22e:	mov    edx,0x2f693b52
  41a233:	call   42c490 <cmetrohash64_1@@Base>
  41a238:	mov    ebp,DWORD PTR [rsp]
  41a23b:	jmp    41a243 <fb_symbol_table_find_item@@Base+0x43>
  41a23d:	nop    DWORD PTR [rax]
  41a240:	inc    rbp
  41a243:	mov    rax,rbp
  41a246:	and    rax,r13
  41a249:	mov    rbx,QWORD PTR [r12+rax*8]
  41a24d:	cmp    rbx,0x2
  41a251:	je     41a240 <fb_symbol_table_find_item@@Base+0x40>
  41a253:	test   rbx,rbx
  41a256:	je     41a276 <fb_symbol_table_find_item@@Base+0x76>
  41a258:	mov    rax,QWORD PTR [rbx+0x8]
  41a25c:	cmp    QWORD PTR [rax+0x8],r15
  41a260:	jne    41a240 <fb_symbol_table_find_item@@Base+0x40>
  41a262:	mov    rsi,QWORD PTR [rax]
  41a265:	mov    rdi,r14
  41a268:	mov    rdx,r15
  41a26b:	call   4061c0 <bcmp@plt>
  41a270:	test   eax,eax
  41a272:	jne    41a240 <fb_symbol_table_find_item@@Base+0x40>
  41a274:	jmp    41a278 <fb_symbol_table_find_item@@Base+0x78>
  41a276:	xor    ebx,ebx
  41a278:	mov    rax,rbx
  41a27b:	add    rsp,0x8
  41a27f:	pop    rbx
  41a280:	pop    r12
  41a282:	pop    r13
  41a284:	pop    r14
  41a286:	pop    r15
  41a288:	pop    rbp
  41a289:	ret    
  41a28a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a290 <fb_symbol_table_remove@@Base>:
  41a290:	push   rbp
  41a291:	push   r15
  41a293:	push   r14
  41a295:	push   r13
  41a297:	push   r12
  41a299:	push   rbx
  41a29a:	sub    rsp,0x18
  41a29e:	mov    r13,QWORD PTR [rdi]
  41a2a1:	test   r13,r13
  41a2a4:	je     41a32a <fb_symbol_table_remove@@Base+0x9a>
  41a2aa:	mov    r12,rdx
  41a2ad:	mov    QWORD PTR [rsp],rdi
  41a2b1:	mov    rbp,QWORD PTR [rdi+0x18]
  41a2b5:	dec    rbp
  41a2b8:	lea    rcx,[rsp+0x10]
  41a2bd:	mov    QWORD PTR [rsp+0x8],rsi
  41a2c2:	mov    rdi,rsi
  41a2c5:	mov    rsi,rdx
  41a2c8:	mov    edx,0x2f693b52
  41a2cd:	call   42c490 <cmetrohash64_1@@Base>
  41a2d2:	mov    r15d,DWORD PTR [rsp+0x10]
  41a2d7:	jmp    41a2e3 <fb_symbol_table_remove@@Base+0x53>
  41a2d9:	nop    DWORD PTR [rax+0x0]
  41a2e0:	inc    r15
  41a2e3:	mov    r14,r15
  41a2e6:	and    r14,rbp
  41a2e9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41a2ee:	cmp    rbx,0x2
  41a2f2:	je     41a2e0 <fb_symbol_table_remove@@Base+0x50>
  41a2f4:	test   rbx,rbx
  41a2f7:	je     41a32a <fb_symbol_table_remove@@Base+0x9a>
  41a2f9:	mov    rax,QWORD PTR [rbx+0x8]
  41a2fd:	cmp    QWORD PTR [rax+0x8],r12
  41a301:	jne    41a2e0 <fb_symbol_table_remove@@Base+0x50>
  41a303:	mov    rsi,QWORD PTR [rax]
  41a306:	mov    rdi,QWORD PTR [rsp+0x8]
  41a30b:	mov    rdx,r12
  41a30e:	call   4061c0 <bcmp@plt>
  41a313:	test   eax,eax
  41a315:	jne    41a2e0 <fb_symbol_table_remove@@Base+0x50>
  41a317:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41a320:	mov    rax,QWORD PTR [rsp]
  41a324:	dec    QWORD PTR [rax+0x10]
  41a328:	jmp    41a32c <fb_symbol_table_remove@@Base+0x9c>
  41a32a:	xor    ebx,ebx
  41a32c:	mov    rax,rbx
  41a32f:	add    rsp,0x18
  41a333:	pop    rbx
  41a334:	pop    r12
  41a336:	pop    r13
  41a338:	pop    r14
  41a33a:	pop    r15
  41a33c:	pop    rbp
  41a33d:	ret    
  41a33e:	xchg   ax,ax

000000000041a340 <fb_symbol_table_remove_item@@Base>:
  41a340:	push   rbp
  41a341:	push   r15
  41a343:	push   r14
  41a345:	push   r13
  41a347:	push   r12
  41a349:	push   rbx
  41a34a:	sub    rsp,0x18
  41a34e:	mov    r13,QWORD PTR [rdi]
  41a351:	test   r13,r13
  41a354:	je     41a3ea <fb_symbol_table_remove_item@@Base+0xaa>
  41a35a:	mov    rax,QWORD PTR [rsi+0x8]
  41a35e:	mov    rdx,QWORD PTR [rax]
  41a361:	mov    r12,QWORD PTR [rax+0x8]
  41a365:	mov    QWORD PTR [rsp],rdi
  41a369:	mov    rbp,QWORD PTR [rdi+0x18]
  41a36d:	dec    rbp
  41a370:	lea    rcx,[rsp+0x10]
  41a375:	mov    QWORD PTR [rsp+0x8],rdx
  41a37a:	mov    rdi,rdx
  41a37d:	mov    rsi,r12
  41a380:	mov    edx,0x2f693b52
  41a385:	call   42c490 <cmetrohash64_1@@Base>
  41a38a:	mov    r15d,DWORD PTR [rsp+0x10]
  41a38f:	jmp    41a3a3 <fb_symbol_table_remove_item@@Base+0x63>
  41a391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a39b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3a0:	inc    r15
  41a3a3:	mov    r14,r15
  41a3a6:	and    r14,rbp
  41a3a9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41a3ae:	cmp    rbx,0x2
  41a3b2:	je     41a3a0 <fb_symbol_table_remove_item@@Base+0x60>
  41a3b4:	test   rbx,rbx
  41a3b7:	je     41a3ea <fb_symbol_table_remove_item@@Base+0xaa>
  41a3b9:	mov    rax,QWORD PTR [rbx+0x8]
  41a3bd:	cmp    QWORD PTR [rax+0x8],r12
  41a3c1:	jne    41a3a0 <fb_symbol_table_remove_item@@Base+0x60>
  41a3c3:	mov    rsi,QWORD PTR [rax]
  41a3c6:	mov    rdi,QWORD PTR [rsp+0x8]
  41a3cb:	mov    rdx,r12
  41a3ce:	call   4061c0 <bcmp@plt>
  41a3d3:	test   eax,eax
  41a3d5:	jne    41a3a0 <fb_symbol_table_remove_item@@Base+0x60>
  41a3d7:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41a3e0:	mov    rax,QWORD PTR [rsp]
  41a3e4:	dec    QWORD PTR [rax+0x10]
  41a3e8:	jmp    41a3ec <fb_symbol_table_remove_item@@Base+0xac>
  41a3ea:	xor    ebx,ebx
  41a3ec:	mov    rax,rbx
  41a3ef:	add    rsp,0x18
  41a3f3:	pop    rbx
  41a3f4:	pop    r12
  41a3f6:	pop    r13
  41a3f8:	pop    r14
  41a3fa:	pop    r15
  41a3fc:	pop    rbp
  41a3fd:	ret    
  41a3fe:	xchg   ax,ax

000000000041a400 <fb_symbol_table_visit@@Base>:
  41a400:	push   r15
  41a402:	push   r14
  41a404:	push   r13
  41a406:	push   r12
  41a408:	push   rbx
  41a409:	mov    rax,QWORD PTR [rdi+0x18]
  41a40d:	test   rax,rax
  41a410:	je     41a457 <fb_symbol_table_visit@@Base+0x57>
  41a412:	mov    r14,rdx
  41a415:	mov    r15,rsi
  41a418:	mov    r12,rdi
  41a41b:	mov    r13,QWORD PTR [rdi]
  41a41e:	xor    ebx,ebx
  41a420:	jmp    41a438 <fb_symbol_table_visit@@Base+0x38>
  41a422:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a42c:	nop    DWORD PTR [rax+0x0]
  41a430:	inc    rbx
  41a433:	cmp    rbx,rax
  41a436:	jae    41a457 <fb_symbol_table_visit@@Base+0x57>
  41a438:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a43d:	mov    rcx,rsi
  41a440:	or     rcx,0x2
  41a444:	cmp    rcx,0x2
  41a448:	je     41a430 <fb_symbol_table_visit@@Base+0x30>
  41a44a:	mov    rdi,r14
  41a44d:	call   r15
  41a450:	mov    rax,QWORD PTR [r12+0x18]
  41a455:	jmp    41a430 <fb_symbol_table_visit@@Base+0x30>
  41a457:	pop    rbx
  41a458:	pop    r12
  41a45a:	pop    r13
  41a45c:	pop    r14
  41a45e:	pop    r15
  41a460:	ret    
  41a461:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a46b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a470 <fb_scope_table_clear@@Base>:
  41a470:	push   rbx
  41a471:	mov    rbx,rdi
  41a474:	mov    rdi,QWORD PTR [rdi]
  41a477:	test   rdi,rdi
  41a47a:	je     41a481 <fb_scope_table_clear@@Base+0x11>
  41a47c:	call   406040 <free@plt>
  41a481:	vxorps xmm0,xmm0,xmm0
  41a485:	vmovups YMMWORD PTR [rbx],ymm0
  41a489:	pop    rbx
  41a48a:	vzeroupper 
  41a48d:	ret    
  41a48e:	xchg   ax,ax

000000000041a490 <fb_scope_table_destroy@@Base>:
  41a490:	push   r15
  41a492:	push   r14
  41a494:	push   r13
  41a496:	push   r12
  41a498:	push   rbx
  41a499:	mov    r12,rdi
  41a49c:	test   rsi,rsi
  41a49f:	je     41a4e7 <fb_scope_table_destroy@@Base+0x57>
  41a4a1:	mov    rax,QWORD PTR [r12+0x18]
  41a4a6:	test   rax,rax
  41a4a9:	je     41a4e7 <fb_scope_table_destroy@@Base+0x57>
  41a4ab:	mov    r14,rdx
  41a4ae:	mov    r15,rsi
  41a4b1:	mov    r13,QWORD PTR [r12]
  41a4b5:	xor    ebx,ebx
  41a4b7:	jmp    41a4c8 <fb_scope_table_destroy@@Base+0x38>
  41a4b9:	nop    DWORD PTR [rax+0x0]
  41a4c0:	inc    rbx
  41a4c3:	cmp    rbx,rax
  41a4c6:	jae    41a4e7 <fb_scope_table_destroy@@Base+0x57>
  41a4c8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a4cd:	mov    rcx,rsi
  41a4d0:	or     rcx,0x2
  41a4d4:	cmp    rcx,0x2
  41a4d8:	je     41a4c0 <fb_scope_table_destroy@@Base+0x30>
  41a4da:	mov    rdi,r14
  41a4dd:	call   r15
  41a4e0:	mov    rax,QWORD PTR [r12+0x18]
  41a4e5:	jmp    41a4c0 <fb_scope_table_destroy@@Base+0x30>
  41a4e7:	mov    rdi,QWORD PTR [r12]
  41a4eb:	test   rdi,rdi
  41a4ee:	je     41a4f5 <fb_scope_table_destroy@@Base+0x65>
  41a4f0:	call   406040 <free@plt>
  41a4f5:	vxorps xmm0,xmm0,xmm0
  41a4f9:	vmovups YMMWORD PTR [r12],ymm0
  41a4ff:	pop    rbx
  41a500:	pop    r12
  41a502:	pop    r13
  41a504:	pop    r14
  41a506:	pop    r15
  41a508:	vzeroupper 
  41a50b:	ret    
  41a50c:	nop    DWORD PTR [rax+0x0]

000000000041a510 <fb_scope_table_init@@Base>:
  41a510:	push   r14
  41a512:	push   rbx
  41a513:	push   rax
  41a514:	mov    r14,rdi
  41a517:	mov    eax,0x4
  41a51c:	nop    DWORD PTR [rax+0x0]
  41a520:	mov    rbx,rax
  41a523:	imul   rcx,rax,0xb3
  41a52a:	shr    rcx,0x8
  41a52e:	add    rax,rax
  41a531:	cmp    rcx,rsi
  41a534:	jb     41a520 <fb_scope_table_init@@Base+0x10>
  41a536:	mov    esi,0x8
  41a53b:	mov    rdi,rbx
  41a53e:	call   406150 <calloc@plt>
  41a543:	mov    QWORD PTR [r14],rax
  41a546:	test   rax,rax
  41a549:	je     41a55d <fb_scope_table_init@@Base+0x4d>
  41a54b:	vxorps xmm0,xmm0,xmm0
  41a54f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41a555:	mov    QWORD PTR [r14+0x18],rbx
  41a559:	xor    eax,eax
  41a55b:	jmp    41a562 <fb_scope_table_init@@Base+0x52>
  41a55d:	mov    eax,0xffffffff
  41a562:	add    rsp,0x8
  41a566:	pop    rbx
  41a567:	pop    r14
  41a569:	ret    
  41a56a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a570 <fb_scope_table_resize@@Base>:
  41a570:	jmp    41a580 <fb_scope_table_resize@@Base+0x10>
  41a572:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a57c:	nop    DWORD PTR [rax+0x0]
  41a580:	push   r15
  41a582:	push   r14
  41a584:	push   r12
  41a586:	push   rbx
  41a587:	sub    rsp,0x28
  41a58b:	mov    r14,rdi
  41a58e:	mov    r12,QWORD PTR [rdi]
  41a591:	mov    rax,QWORD PTR [rdi+0x10]
  41a595:	cmp    rax,rsi
  41a598:	cmova  rsi,rax
  41a59c:	mov    eax,0x4
  41a5a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5b0:	mov    rbx,rax
  41a5b3:	imul   rcx,rax,0xb3
  41a5ba:	shr    rcx,0x8
  41a5be:	add    rax,rax
  41a5c1:	cmp    rcx,rsi
  41a5c4:	jb     41a5b0 <fb_scope_table_resize@@Base+0x40>
  41a5c6:	mov    esi,0x8
  41a5cb:	mov    rdi,rbx
  41a5ce:	call   406150 <calloc@plt>
  41a5d3:	mov    QWORD PTR [rsp+0x8],rax
  41a5d8:	test   rax,rax
  41a5db:	je     41a632 <fb_scope_table_resize@@Base+0xc2>
  41a5dd:	vxorps xmm0,xmm0,xmm0
  41a5e1:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41a5e7:	mov    QWORD PTR [rsp+0x20],rbx
  41a5ec:	mov    rax,QWORD PTR [r14+0x18]
  41a5f0:	test   rax,rax
  41a5f3:	je     41a63c <fb_scope_table_resize@@Base+0xcc>
  41a5f5:	xor    ebx,ebx
  41a5f7:	lea    r15,[rsp+0x8]
  41a5fc:	jmp    41a608 <fb_scope_table_resize@@Base+0x98>
  41a5fe:	xchg   ax,ax
  41a600:	inc    rbx
  41a603:	cmp    rbx,rax
  41a606:	jae    41a639 <fb_scope_table_resize@@Base+0xc9>
  41a608:	mov    rcx,QWORD PTR [r12+rbx*8]
  41a60c:	mov    rdx,rcx
  41a60f:	or     rdx,0x2
  41a613:	cmp    rdx,0x2
  41a617:	je     41a600 <fb_scope_table_resize@@Base+0x90>
  41a619:	mov    rsi,QWORD PTR [rcx]
  41a61c:	mov    rdi,r15
  41a61f:	xor    edx,edx
  41a621:	mov    r8d,0x3
  41a627:	call   41a680 <fb_scope_table_insert@@Base+0x10>
  41a62c:	mov    rax,QWORD PTR [r14+0x18]
  41a630:	jmp    41a600 <fb_scope_table_resize@@Base+0x90>
  41a632:	mov    eax,0xffffffff
  41a637:	jmp    41a656 <fb_scope_table_resize@@Base+0xe6>
  41a639:	mov    r12,QWORD PTR [r14]
  41a63c:	test   r12,r12
  41a63f:	je     41a649 <fb_scope_table_resize@@Base+0xd9>
  41a641:	mov    rdi,r12
  41a644:	call   406040 <free@plt>
  41a649:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41a64f:	vmovups YMMWORD PTR [r14],ymm0
  41a654:	xor    eax,eax
  41a656:	add    rsp,0x28
  41a65a:	pop    rbx
  41a65b:	pop    r12
  41a65d:	pop    r14
  41a65f:	pop    r15
  41a661:	vzeroupper 
  41a664:	ret    
  41a665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a66f:	nop

000000000041a670 <fb_scope_table_insert@@Base>:
  41a670:	jmp    41a680 <fb_scope_table_insert@@Base+0x10>
  41a672:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a67c:	nop    DWORD PTR [rax+0x0]
  41a680:	push   rbp
  41a681:	push   r15
  41a683:	push   r14
  41a685:	push   r13
  41a687:	push   r12
  41a689:	push   rbx
  41a68a:	sub    rsp,0x48
  41a68e:	mov    QWORD PTR [rsp+0x10],rdx
  41a693:	mov    QWORD PTR [rsp+0x20],rsi
  41a698:	cmp    rcx,0x2
  41a69c:	je     41aa48 <fb_scope_table_insert@@Base+0x3d8>
  41a6a2:	mov    rbx,rcx
  41a6a5:	cmp    rcx,0x1
  41a6a9:	je     41aa67 <fb_scope_table_insert@@Base+0x3f7>
  41a6af:	test   rbx,rbx
  41a6b2:	je     41aa86 <fb_scope_table_insert@@Base+0x416>
  41a6b8:	mov    r15d,r8d
  41a6bb:	mov    r14,rdi
  41a6be:	mov    rsi,QWORD PTR [rdi+0x10]
  41a6c2:	mov    rcx,QWORD PTR [rdi+0x18]
  41a6c6:	imul   rax,rcx,0xb3
  41a6cd:	shr    rax,0x8
  41a6d1:	cmp    rsi,rax
  41a6d4:	jb     41a6ed <fb_scope_table_insert@@Base+0x7d>
  41a6d6:	add    rsi,rsi
  41a6d9:	mov    rdi,r14
  41a6dc:	call   41a580 <fb_scope_table_resize@@Base+0x10>
  41a6e1:	test   eax,eax
  41a6e3:	jne    41aaa5 <fb_scope_table_insert@@Base+0x435>
  41a6e9:	mov    rcx,QWORD PTR [r14+0x18]
  41a6ed:	mov    QWORD PTR [rsp+0x40],rbx
  41a6f2:	mov    r8d,0x9e3779b1
  41a6f8:	mov    rax,QWORD PTR [r14]
  41a6fb:	mov    QWORD PTR [rsp+0x8],rax
  41a700:	dec    rcx
  41a703:	mov    QWORD PTR [rsp],rcx
  41a707:	mov    r9,QWORD PTR [rsp+0x10]
  41a70c:	xor    r12d,r12d
  41a70f:	test   r9d,r9d
  41a712:	jle    41a7ce <fb_scope_table_insert@@Base+0x15e>
  41a718:	mov    rdx,QWORD PTR [rsp+0x20]
  41a71d:	test   r9,r9
  41a720:	je     41a770 <fb_scope_table_insert@@Base+0x100>
  41a722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a72c:	nop    DWORD PTR [rax+0x0]
  41a730:	xor    esi,esi
  41a732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a73c:	nop    DWORD PTR [rax+0x0]
  41a740:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  41a744:	je     41a751 <fb_scope_table_insert@@Base+0xe1>
  41a746:	inc    rsi
  41a749:	cmp    r9,rsi
  41a74c:	jne    41a740 <fb_scope_table_insert@@Base+0xd0>
  41a74e:	mov    rsi,r9
  41a751:	mov    rbp,rsi
  41a754:	dec    rbp
  41a757:	jne    41a779 <fb_scope_table_insert@@Base+0x109>
  41a759:	mov    ecx,0x2f692e57
  41a75e:	mov    esi,0x1
  41a763:	jmp    41a79e <fb_scope_table_insert@@Base+0x12e>
  41a765:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a76f:	nop
  41a770:	mov    rbp,0xffffffffffffffff
  41a777:	xor    esi,esi
  41a779:	mov    ecx,0x2f692e57
  41a77e:	xor    ebx,ebx
  41a780:	movzx  eax,BYTE PTR [rdx+rbx*1]
  41a784:	test   rax,rax
  41a787:	je     41a79e <fb_scope_table_insert@@Base+0x12e>
  41a789:	mov    rdi,rcx
  41a78c:	shl    rdi,0x5
  41a790:	add    rcx,rdi
  41a793:	xor    rcx,rax
  41a796:	inc    rbx
  41a799:	cmp    rbp,rbx
  41a79c:	jne    41a780 <fb_scope_table_insert@@Base+0x110>
  41a79e:	xor    r12,rcx
  41a7a1:	xor    r12,0x2f693b52
  41a7a8:	imul   r12,r8
  41a7ac:	cmp    rsi,r9
  41a7af:	je     41a855 <fb_scope_table_insert@@Base+0x1e5>
  41a7b5:	lea    rax,[rsi+0x1]
  41a7b9:	sub    r9,rax
  41a7bc:	add    rdx,rsi
  41a7bf:	add    rdx,0x1
  41a7c3:	test   r9,r9
  41a7c6:	jne    41a730 <fb_scope_table_insert@@Base+0xc0>
  41a7cc:	jmp    41a770 <fb_scope_table_insert@@Base+0x100>
  41a7ce:	mov    rdx,QWORD PTR [rsp+0x20]
  41a7d3:	test   rdx,rdx
  41a7d6:	jne    41a800 <fb_scope_table_insert@@Base+0x190>
  41a7d8:	jmp    41a855 <fb_scope_table_insert@@Base+0x1e5>
  41a7dd:	nop    DWORD PTR [rax]
  41a7e0:	mov    ebx,0x2f692e57
  41a7e5:	xor    r12,rbx
  41a7e8:	xor    r12,0x2f693b52
  41a7ef:	imul   r12,r8
  41a7f3:	mov    rdx,QWORD PTR [rdx]
  41a7f6:	inc    r9d
  41a7f9:	je     41a855 <fb_scope_table_insert@@Base+0x1e5>
  41a7fb:	test   rdx,rdx
  41a7fe:	je     41a855 <fb_scope_table_insert@@Base+0x1e5>
  41a800:	mov    rax,QWORD PTR [rdx+0x8]
  41a804:	mov    rsi,QWORD PTR [rax+0x8]
  41a808:	dec    rsi
  41a80b:	je     41a7e0 <fb_scope_table_insert@@Base+0x170>
  41a80d:	mov    rdi,QWORD PTR [rax]
  41a810:	mov    eax,0x2f692e57
  41a815:	xor    ebp,ebp
  41a817:	nop    WORD PTR [rax+rax*1+0x0]
  41a820:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  41a824:	test   rcx,rcx
  41a827:	je     41a850 <fb_scope_table_insert@@Base+0x1e0>
  41a829:	mov    rbx,rax
  41a82c:	shl    rbx,0x5
  41a830:	add    rbx,rax
  41a833:	xor    rbx,rcx
  41a836:	inc    rbp
  41a839:	mov    rax,rbx
  41a83c:	cmp    rsi,rbp
  41a83f:	jne    41a820 <fb_scope_table_insert@@Base+0x1b0>
  41a841:	jmp    41a7e5 <fb_scope_table_insert@@Base+0x175>
  41a843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a84d:	nop    DWORD PTR [rax]
  41a850:	mov    rbx,rax
  41a853:	jmp    41a7e5 <fb_scope_table_insert@@Base+0x175>
  41a855:	mov    rax,r12
  41a858:	and    rax,QWORD PTR [rsp]
  41a85c:	mov    ecx,r15d
  41a85f:	or     ecx,0x1
  41a862:	cmp    ecx,0x3
  41a865:	jne    41a89d <fb_scope_table_insert@@Base+0x22d>
  41a867:	inc    QWORD PTR [r14+0x10]
  41a86b:	inc    r12
  41a86e:	mov    rdx,QWORD PTR [rsp]
  41a872:	mov    rsi,QWORD PTR [rsp+0x8]
  41a877:	nop    WORD PTR [rax+rax*1+0x0]
  41a880:	mov    rcx,QWORD PTR [rsi+rax*8]
  41a884:	or     rcx,0x2
  41a888:	cmp    rcx,0x2
  41a88c:	je     41aa15 <fb_scope_table_insert@@Base+0x3a5>
  41a892:	mov    rax,r12
  41a895:	and    rax,rdx
  41a898:	inc    r12
  41a89b:	jmp    41a880 <fb_scope_table_insert@@Base+0x210>
  41a89d:	mov    DWORD PTR [rsp+0x2c],r15d
  41a8a2:	mov    QWORD PTR [rsp+0x38],r14
  41a8a7:	xor    ebp,ebp
  41a8a9:	xor    r11d,r11d
  41a8ac:	mov    r8,QWORD PTR [rsp+0x10]
  41a8b1:	mov    r9,QWORD PTR [rsp]
  41a8b5:	mov    r10,QWORD PTR [rsp+0x8]
  41a8ba:	jmp    41a8d5 <fb_scope_table_insert@@Base+0x265>
  41a8bc:	nop    DWORD PTR [rax+0x0]
  41a8c0:	test   r11,r11
  41a8c3:	cmove  r11,r15
  41a8c7:	lea    rax,[r12+rbp*1]
  41a8cb:	add    rax,0x1
  41a8cf:	inc    rbp
  41a8d2:	and    rax,r9
  41a8d5:	lea    r15,[r10+rax*8]
  41a8d9:	mov    r13,QWORD PTR [r10+rax*8]
  41a8dd:	cmp    r13,0x2
  41a8e1:	je     41a8c0 <fb_scope_table_insert@@Base+0x250>
  41a8e3:	test   r13,r13
  41a8e6:	je     41aa1b <fb_scope_table_insert@@Base+0x3ab>
  41a8ec:	mov    r14,QWORD PTR [r13+0x0]
  41a8f0:	test   r8d,r8d
  41a8f3:	jle    41a95b <fb_scope_table_insert@@Base+0x2eb>
  41a8f5:	mov    rax,QWORD PTR [rsp+0x20]
  41a8fa:	mov    rcx,r8
  41a8fd:	test   r14,r14
  41a900:	je     41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a902:	mov    rsi,QWORD PTR [r14+0x8]
  41a906:	mov    rdx,QWORD PTR [rsi+0x8]
  41a90a:	cmp    rdx,rcx
  41a90d:	ja     41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a90f:	test   rdx,rdx
  41a912:	je     41a931 <fb_scope_table_insert@@Base+0x2c1>
  41a914:	mov    rsi,QWORD PTR [rsi]
  41a917:	xor    edi,edi
  41a919:	nop    DWORD PTR [rax+0x0]
  41a920:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41a924:	cmp    bl,BYTE PTR [rax+rdi*1]
  41a927:	jne    41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a929:	inc    rdi
  41a92c:	cmp    rdx,rdi
  41a92f:	jne    41a920 <fb_scope_table_insert@@Base+0x2b0>
  41a931:	cmp    rdx,rcx
  41a934:	je     41a9f8 <fb_scope_table_insert@@Base+0x388>
  41a93a:	cmp    BYTE PTR [rax+rdx*1],0x2e
  41a93e:	jne    41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a940:	lea    rsi,[rdx+0x1]
  41a944:	sub    rcx,rsi
  41a947:	add    rax,rdx
  41a94a:	add    rax,0x1
  41a94e:	mov    r14,QWORD PTR [r14]
  41a951:	test   r14,r14
  41a954:	jne    41a902 <fb_scope_table_insert@@Base+0x292>
  41a956:	jmp    41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a95b:	mov    QWORD PTR [rsp+0x30],r15
  41a960:	mov    rbx,r11
  41a963:	mov    QWORD PTR [rsp+0x18],rbp
  41a968:	mov    rbp,r8
  41a96b:	mov    r15d,ebp
  41a96e:	mov    rbp,QWORD PTR [rsp+0x20]
  41a973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a97d:	nop    DWORD PTR [rax]
  41a980:	test   r14,r14
  41a983:	je     41a9d7 <fb_scope_table_insert@@Base+0x367>
  41a985:	test   rbp,rbp
  41a988:	je     41a9d7 <fb_scope_table_insert@@Base+0x367>
  41a98a:	mov    rax,QWORD PTR [r14+0x8]
  41a98e:	mov    rdx,QWORD PTR [rax+0x8]
  41a992:	mov    rcx,QWORD PTR [rbp+0x8]
  41a996:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a99a:	jne    41a9bc <fb_scope_table_insert@@Base+0x34c>
  41a99c:	mov    rdi,QWORD PTR [rax]
  41a99f:	mov    rsi,QWORD PTR [rcx]
  41a9a2:	call   406060 <strncmp@plt>
  41a9a7:	test   eax,eax
  41a9a9:	jne    41a9bc <fb_scope_table_insert@@Base+0x34c>
  41a9ab:	mov    r14,QWORD PTR [r14]
  41a9ae:	mov    rbp,QWORD PTR [rbp+0x0]
  41a9b2:	inc    r15d
  41a9b5:	jne    41a980 <fb_scope_table_insert@@Base+0x310>
  41a9b7:	test   r14,r14
  41a9ba:	jmp    41a9da <fb_scope_table_insert@@Base+0x36a>
  41a9bc:	mov    r8,QWORD PTR [rsp+0x10]
  41a9c1:	mov    r9,QWORD PTR [rsp]
  41a9c5:	mov    r10,QWORD PTR [rsp+0x8]
  41a9ca:	mov    rbp,QWORD PTR [rsp+0x18]
  41a9cf:	mov    r11,rbx
  41a9d2:	jmp    41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a9d7:	or     r14,rbp
  41a9da:	mov    r8,QWORD PTR [rsp+0x10]
  41a9df:	mov    r9,QWORD PTR [rsp]
  41a9e3:	mov    r10,QWORD PTR [rsp+0x8]
  41a9e8:	mov    rbp,QWORD PTR [rsp+0x18]
  41a9ed:	mov    r11,rbx
  41a9f0:	jne    41a8c7 <fb_scope_table_insert@@Base+0x257>
  41a9f6:	jmp    41aa07 <fb_scope_table_insert@@Base+0x397>
  41a9f8:	mov    QWORD PTR [rsp+0x30],r15
  41a9fd:	cmp    QWORD PTR [r14],0x0
  41aa01:	jne    41a8c7 <fb_scope_table_insert@@Base+0x257>
  41aa07:	cmp    DWORD PTR [rsp+0x2c],0x0
  41aa0c:	mov    r15,QWORD PTR [rsp+0x30]
  41aa11:	jne    41aa36 <fb_scope_table_insert@@Base+0x3c6>
  41aa13:	jmp    41aa2e <fb_scope_table_insert@@Base+0x3be>
  41aa15:	lea    r15,[rsi+rax*8]
  41aa19:	jmp    41aa2b <fb_scope_table_insert@@Base+0x3bb>
  41aa1b:	test   r11,r11
  41aa1e:	cmovne r15,r11
  41aa22:	mov    rax,QWORD PTR [rsp+0x38]
  41aa27:	inc    QWORD PTR [rax+0x10]
  41aa2b:	xor    r13d,r13d
  41aa2e:	mov    rax,QWORD PTR [rsp+0x40]
  41aa33:	mov    QWORD PTR [r15],rax
  41aa36:	mov    rax,r13
  41aa39:	add    rsp,0x48
  41aa3d:	pop    rbx
  41aa3e:	pop    r12
  41aa40:	pop    r13
  41aa42:	pop    r14
  41aa44:	pop    r15
  41aa46:	pop    rbp
  41aa47:	ret    
  41aa48:	lea    rdi,[rip+0x2c404]        # 446e53 <str_set_deleted@@Base+0xd3>
  41aa4f:	lea    rsi,[rip+0x2c349]        # 446d9f <str_set_deleted@@Base+0x1f>
  41aa56:	lea    rcx,[rip+0x2c3ac]        # 446e09 <str_set_deleted@@Base+0x89>
  41aa5d:	mov    edx,0x73
  41aa62:	call   406100 <__assert_fail@plt>
  41aa67:	lea    rdi,[rip+0x2c3fc]        # 446e6a <str_set_deleted@@Base+0xea>
  41aa6e:	lea    rsi,[rip+0x2c32a]        # 446d9f <str_set_deleted@@Base+0x1f>
  41aa75:	lea    rcx,[rip+0x2c38d]        # 446e09 <str_set_deleted@@Base+0x89>
  41aa7c:	mov    edx,0x74
  41aa81:	call   406100 <__assert_fail@plt>
  41aa86:	lea    rdi,[rip+0x2c2fb]        # 446d88 <str_set_deleted@@Base+0x8>
  41aa8d:	lea    rsi,[rip+0x2c30b]        # 446d9f <str_set_deleted@@Base+0x1f>
  41aa94:	lea    rcx,[rip+0x2c36e]        # 446e09 <str_set_deleted@@Base+0x89>
  41aa9b:	mov    edx,0x72
  41aaa0:	call   406100 <__assert_fail@plt>
  41aaa5:	mov    rax,QWORD PTR [rip+0x3754c]        # 451ff8 <stderr@GLIBC_2.2.5>
  41aaac:	mov    rdi,QWORD PTR [rax]
  41aaaf:	lea    rsi,[rip+0x2c3c9]        # 446e7f <str_set_deleted@@Base+0xff>
  41aab6:	lea    rdx,[rip+0x2c3d9]        # 446e96 <str_set_deleted@@Base+0x116>
  41aabd:	xor    eax,eax
  41aabf:	call   406180 <fprintf@plt>
  41aac4:	mov    edi,0x1
  41aac9:	call   406220 <exit@plt>
  41aace:	xchg   ax,ax

000000000041aad0 <fb_scope_table_insert_item@@Base>:
  41aad0:	mov    r8d,edx
  41aad3:	mov    rcx,rsi
  41aad6:	mov    rsi,QWORD PTR [rsi]
  41aad9:	xor    edx,edx
  41aadb:	jmp    41a680 <fb_scope_table_insert@@Base+0x10>

000000000041aae0 <fb_scope_table_find@@Base>:
  41aae0:	push   rbp
  41aae1:	push   r15
  41aae3:	push   r14
  41aae5:	push   r13
  41aae7:	push   r12
  41aae9:	push   rbx
  41aaea:	sub    rsp,0x28
  41aaee:	mov    QWORD PTR [rsp],rsi
  41aaf2:	mov    rax,QWORD PTR [rdi]
  41aaf5:	mov    QWORD PTR [rsp+0x20],rax
  41aafa:	test   rax,rax
  41aafd:	je     41ad8f <fb_scope_table_find@@Base+0x2af>
  41ab03:	mov    rax,QWORD PTR [rdi+0x18]
  41ab07:	mov    QWORD PTR [rsp+0x8],rax
  41ab0c:	test   edx,edx
  41ab0e:	mov    QWORD PTR [rsp+0x18],rdx
  41ab13:	mov    r8d,0x9e3779b1
  41ab19:	jle    41abca <fb_scope_table_find@@Base+0xea>
  41ab1f:	xor    r14d,r14d
  41ab22:	mov    r9,rdx
  41ab25:	mov    rdx,QWORD PTR [rsp]
  41ab29:	test   r9,r9
  41ab2c:	jne    41ab43 <fb_scope_table_find@@Base+0x63>
  41ab2e:	jmp    41ab80 <fb_scope_table_find@@Base+0xa0>
  41ab30:	lea    rax,[rsi+0x1]
  41ab34:	sub    r9,rax
  41ab37:	add    rdx,rsi
  41ab3a:	add    rdx,0x1
  41ab3e:	test   r9,r9
  41ab41:	je     41ab80 <fb_scope_table_find@@Base+0xa0>
  41ab43:	xor    esi,esi
  41ab45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab4f:	nop
  41ab50:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  41ab54:	je     41ab61 <fb_scope_table_find@@Base+0x81>
  41ab56:	inc    rsi
  41ab59:	cmp    r9,rsi
  41ab5c:	jne    41ab50 <fb_scope_table_find@@Base+0x70>
  41ab5e:	mov    rsi,r9
  41ab61:	mov    rbx,rsi
  41ab64:	dec    rbx
  41ab67:	jne    41ab89 <fb_scope_table_find@@Base+0xa9>
  41ab69:	mov    ecx,0x2f692e57
  41ab6e:	mov    esi,0x1
  41ab73:	jmp    41abae <fb_scope_table_find@@Base+0xce>
  41ab75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab7f:	nop
  41ab80:	mov    rbx,0xffffffffffffffff
  41ab87:	xor    esi,esi
  41ab89:	mov    ecx,0x2f692e57
  41ab8e:	xor    eax,eax
  41ab90:	movzx  ebp,BYTE PTR [rdx+rax*1]
  41ab94:	test   rbp,rbp
  41ab97:	je     41abae <fb_scope_table_find@@Base+0xce>
  41ab99:	mov    rdi,rcx
  41ab9c:	shl    rdi,0x5
  41aba0:	add    rcx,rdi
  41aba3:	xor    rcx,rbp
  41aba6:	inc    rax
  41aba9:	cmp    rbx,rax
  41abac:	jne    41ab90 <fb_scope_table_find@@Base+0xb0>
  41abae:	xor    r14,rcx
  41abb1:	xor    r14,0x2f693b52
  41abb8:	imul   r14,r8
  41abbc:	cmp    rsi,r9
  41abbf:	jne    41ab30 <fb_scope_table_find@@Base+0x50>
  41abc5:	jmp    41ac55 <fb_scope_table_find@@Base+0x175>
  41abca:	xor    r14d,r14d
  41abcd:	mov    r9d,edx
  41abd0:	mov    r10,QWORD PTR [rsp]
  41abd4:	test   r10,r10
  41abd7:	jne    41ac00 <fb_scope_table_find@@Base+0x120>
  41abd9:	jmp    41ac55 <fb_scope_table_find@@Base+0x175>
  41abde:	xchg   ax,ax
  41abe0:	mov    eax,0x2f692e57
  41abe5:	xor    r14,rax
  41abe8:	xor    r14,0x2f693b52
  41abef:	imul   r14,r8
  41abf3:	mov    r10,QWORD PTR [r10]
  41abf6:	inc    r9d
  41abf9:	je     41ac55 <fb_scope_table_find@@Base+0x175>
  41abfb:	test   r10,r10
  41abfe:	je     41ac55 <fb_scope_table_find@@Base+0x175>
  41ac00:	mov    rax,QWORD PTR [r10+0x8]
  41ac04:	mov    rsi,QWORD PTR [rax+0x8]
  41ac08:	dec    rsi
  41ac0b:	je     41abe0 <fb_scope_table_find@@Base+0x100>
  41ac0d:	mov    rdi,QWORD PTR [rax]
  41ac10:	mov    ecx,0x2f692e57
  41ac15:	xor    ebx,ebx
  41ac17:	nop    WORD PTR [rax+rax*1+0x0]
  41ac20:	movzx  edx,BYTE PTR [rdi+rbx*1]
  41ac24:	test   rdx,rdx
  41ac27:	je     41ac50 <fb_scope_table_find@@Base+0x170>
  41ac29:	mov    rax,rcx
  41ac2c:	shl    rax,0x5
  41ac30:	add    rax,rcx
  41ac33:	xor    rax,rdx
  41ac36:	inc    rbx
  41ac39:	mov    rcx,rax
  41ac3c:	cmp    rsi,rbx
  41ac3f:	jne    41ac20 <fb_scope_table_find@@Base+0x140>
  41ac41:	jmp    41abe5 <fb_scope_table_find@@Base+0x105>
  41ac43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac4d:	nop    DWORD PTR [rax]
  41ac50:	mov    rax,rcx
  41ac53:	jmp    41abe5 <fb_scope_table_find@@Base+0x105>
  41ac55:	dec    QWORD PTR [rsp+0x8]
  41ac5a:	mov    rax,r14
  41ac5d:	xor    ecx,ecx
  41ac5f:	jmp    41ac82 <fb_scope_table_find@@Base+0x1a2>
  41ac61:	or     r15,r12
  41ac64:	je     41ad91 <fb_scope_table_find@@Base+0x2b1>
  41ac6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ac70:	mov    rax,QWORD PTR [rsp+0x10]
  41ac75:	mov    rcx,rax
  41ac78:	add    rax,r14
  41ac7b:	add    rax,0x1
  41ac7f:	inc    rcx
  41ac82:	mov    QWORD PTR [rsp+0x10],rcx
  41ac87:	and    rax,QWORD PTR [rsp+0x8]
  41ac8c:	mov    rcx,QWORD PTR [rsp+0x20]
  41ac91:	mov    rbp,QWORD PTR [rcx+rax*8]
  41ac95:	cmp    rbp,0x2
  41ac99:	je     41ac70 <fb_scope_table_find@@Base+0x190>
  41ac9b:	test   rbp,rbp
  41ac9e:	je     41ad8f <fb_scope_table_find@@Base+0x2af>
  41aca4:	mov    r15,QWORD PTR [rbp+0x0]
  41aca8:	mov    rcx,QWORD PTR [rsp+0x18]
  41acad:	test   ecx,ecx
  41acaf:	jle    41ad1f <fb_scope_table_find@@Base+0x23f>
  41acb1:	mov    rax,QWORD PTR [rsp]
  41acb5:	test   r15,r15
  41acb8:	je     41ac70 <fb_scope_table_find@@Base+0x190>
  41acba:	mov    rsi,QWORD PTR [r15+0x8]
  41acbe:	mov    rdx,QWORD PTR [rsi+0x8]
  41acc2:	cmp    rdx,rcx
  41acc5:	ja     41ac70 <fb_scope_table_find@@Base+0x190>
  41acc7:	test   rdx,rdx
  41acca:	je     41acf1 <fb_scope_table_find@@Base+0x211>
  41accc:	mov    rsi,QWORD PTR [rsi]
  41accf:	xor    edi,edi
  41acd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41acdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ace0:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41ace4:	cmp    bl,BYTE PTR [rax+rdi*1]
  41ace7:	jne    41ac70 <fb_scope_table_find@@Base+0x190>
  41ace9:	inc    rdi
  41acec:	cmp    rdx,rdi
  41acef:	jne    41ace0 <fb_scope_table_find@@Base+0x200>
  41acf1:	cmp    rdx,rcx
  41acf4:	je     41ad83 <fb_scope_table_find@@Base+0x2a3>
  41acfa:	cmp    BYTE PTR [rax+rdx*1],0x2e
  41acfe:	jne    41ac70 <fb_scope_table_find@@Base+0x190>
  41ad04:	lea    rsi,[rdx+0x1]
  41ad08:	sub    rcx,rsi
  41ad0b:	add    rax,rdx
  41ad0e:	add    rax,0x1
  41ad12:	mov    r15,QWORD PTR [r15]
  41ad15:	test   r15,r15
  41ad18:	jne    41acba <fb_scope_table_find@@Base+0x1da>
  41ad1a:	jmp    41ac70 <fb_scope_table_find@@Base+0x190>
  41ad1f:	mov    r13d,ecx
  41ad22:	mov    r12,QWORD PTR [rsp]
  41ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad30:	test   r15,r15
  41ad33:	je     41ac61 <fb_scope_table_find@@Base+0x181>
  41ad39:	test   r12,r12
  41ad3c:	je     41ac61 <fb_scope_table_find@@Base+0x181>
  41ad42:	mov    rax,QWORD PTR [r15+0x8]
  41ad46:	mov    rdx,QWORD PTR [rax+0x8]
  41ad4a:	mov    rcx,QWORD PTR [r12+0x8]
  41ad4f:	cmp    rdx,QWORD PTR [rcx+0x8]
  41ad53:	jne    41ac70 <fb_scope_table_find@@Base+0x190>
  41ad59:	mov    rdi,QWORD PTR [rax]
  41ad5c:	mov    rsi,QWORD PTR [rcx]
  41ad5f:	call   406060 <strncmp@plt>
  41ad64:	test   eax,eax
  41ad66:	jne    41ac70 <fb_scope_table_find@@Base+0x190>
  41ad6c:	mov    r15,QWORD PTR [r15]
  41ad6f:	mov    r12,QWORD PTR [r12]
  41ad73:	inc    r13d
  41ad76:	jne    41ad30 <fb_scope_table_find@@Base+0x250>
  41ad78:	test   r15,r15
  41ad7b:	jne    41ac70 <fb_scope_table_find@@Base+0x190>
  41ad81:	jmp    41ad91 <fb_scope_table_find@@Base+0x2b1>
  41ad83:	cmp    QWORD PTR [r15],0x0
  41ad87:	jne    41ac70 <fb_scope_table_find@@Base+0x190>
  41ad8d:	jmp    41ad91 <fb_scope_table_find@@Base+0x2b1>
  41ad8f:	xor    ebp,ebp
  41ad91:	mov    rax,rbp
  41ad94:	add    rsp,0x28
  41ad98:	pop    rbx
  41ad99:	pop    r12
  41ad9b:	pop    r13
  41ad9d:	pop    r14
  41ad9f:	pop    r15
  41ada1:	pop    rbp
  41ada2:	ret    
  41ada3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41adad:	nop    DWORD PTR [rax]

000000000041adb0 <fb_scope_table_find_item@@Base>:
  41adb0:	push   rbp
  41adb1:	push   r15
  41adb3:	push   r14
  41adb5:	push   r13
  41adb7:	push   r12
  41adb9:	push   rbx
  41adba:	sub    rsp,0x18
  41adbe:	mov    rax,QWORD PTR [rdi]
  41adc1:	mov    QWORD PTR [rsp+0x10],rax
  41adc6:	test   rax,rax
  41adc9:	je     41af32 <fb_scope_table_find_item@@Base+0x182>
  41adcf:	mov    r10,QWORD PTR [rsi]
  41add2:	mov    rax,QWORD PTR [rdi+0x18]
  41add6:	mov    QWORD PTR [rsp+0x8],rax
  41addb:	xor    ebx,ebx
  41addd:	test   r10,r10
  41ade0:	je     41ae75 <fb_scope_table_find_item@@Base+0xc5>
  41ade6:	mov    r8d,0x9e3779b1
  41adec:	mov    r9,r10
  41adef:	jmp    41ae1b <fb_scope_table_find_item@@Base+0x6b>
  41adf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41adfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae00:	mov    ebp,0x2f692e57
  41ae05:	xor    rbx,rbp
  41ae08:	xor    rbx,0x2f693b52
  41ae0f:	imul   rbx,r8
  41ae13:	mov    r9,QWORD PTR [r9]
  41ae16:	test   r9,r9
  41ae19:	je     41ae75 <fb_scope_table_find_item@@Base+0xc5>
  41ae1b:	mov    rax,QWORD PTR [r9+0x8]
  41ae1f:	mov    rdx,QWORD PTR [rax+0x8]
  41ae23:	dec    rdx
  41ae26:	je     41ae00 <fb_scope_table_find_item@@Base+0x50>
  41ae28:	mov    rsi,QWORD PTR [rax]
  41ae2b:	mov    eax,0x2f692e57
  41ae30:	xor    edi,edi
  41ae32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae3c:	nop    DWORD PTR [rax+0x0]
  41ae40:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  41ae44:	test   rcx,rcx
  41ae47:	je     41ae70 <fb_scope_table_find_item@@Base+0xc0>
  41ae49:	mov    rbp,rax
  41ae4c:	shl    rbp,0x5
  41ae50:	add    rbp,rax
  41ae53:	xor    rbp,rcx
  41ae56:	inc    rdi
  41ae59:	mov    rax,rbp
  41ae5c:	cmp    rdx,rdi
  41ae5f:	jne    41ae40 <fb_scope_table_find_item@@Base+0x90>
  41ae61:	jmp    41ae05 <fb_scope_table_find_item@@Base+0x55>
  41ae63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae6d:	nop    DWORD PTR [rax]
  41ae70:	mov    rbp,rax
  41ae73:	jmp    41ae05 <fb_scope_table_find_item@@Base+0x55>
  41ae75:	dec    QWORD PTR [rsp+0x8]
  41ae7a:	mov    r12,r10
  41ae7d:	test   r10,r10
  41ae80:	setne  BYTE PTR [rsp+0x7]
  41ae85:	mov    rax,rbx
  41ae88:	xor    ebp,ebp
  41ae8a:	jmp    41ae9b <fb_scope_table_find_item@@Base+0xeb>
  41ae8c:	nop    DWORD PTR [rax+0x0]
  41ae90:	lea    rax,[rbx+rbp*1]
  41ae94:	add    rax,0x1
  41ae98:	inc    rbp
  41ae9b:	and    rax,QWORD PTR [rsp+0x8]
  41aea0:	mov    rcx,QWORD PTR [rsp+0x10]
  41aea5:	mov    r13,QWORD PTR [rcx+rax*8]
  41aea9:	cmp    r13,0x2
  41aead:	je     41ae90 <fb_scope_table_find_item@@Base+0xe0>
  41aeaf:	test   r13,r13
  41aeb2:	je     41af32 <fb_scope_table_find_item@@Base+0x182>
  41aeb4:	mov    r15,QWORD PTR [r13+0x0]
  41aeb8:	test   r15,r15
  41aebb:	setne  al
  41aebe:	mov    rcx,r12
  41aec1:	test   r12,r12
  41aec4:	je     41af1c <fb_scope_table_find_item@@Base+0x16c>
  41aec6:	mov    cl,BYTE PTR [rsp+0x7]
  41aeca:	test   r15,r15
  41aecd:	je     41af20 <fb_scope_table_find_item@@Base+0x170>
  41aecf:	mov    r14,r12
  41aed2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aedc:	nop    DWORD PTR [rax+0x0]
  41aee0:	mov    rax,QWORD PTR [r15+0x8]
  41aee4:	mov    rdx,QWORD PTR [rax+0x8]
  41aee8:	mov    rcx,QWORD PTR [r14+0x8]
  41aeec:	cmp    rdx,QWORD PTR [rcx+0x8]
  41aef0:	jne    41ae90 <fb_scope_table_find_item@@Base+0xe0>
  41aef2:	mov    rdi,QWORD PTR [rax]
  41aef5:	mov    rsi,QWORD PTR [rcx]
  41aef8:	call   406060 <strncmp@plt>
  41aefd:	test   eax,eax
  41aeff:	jne    41ae90 <fb_scope_table_find_item@@Base+0xe0>
  41af01:	mov    r14,QWORD PTR [r14]
  41af04:	mov    r15,QWORD PTR [r15]
  41af07:	test   r15,r15
  41af0a:	setne  al
  41af0d:	test   r14,r14
  41af10:	setne  cl
  41af13:	je     41af20 <fb_scope_table_find_item@@Base+0x170>
  41af15:	test   r15,r15
  41af18:	jne    41aee0 <fb_scope_table_find_item@@Base+0x130>
  41af1a:	jmp    41af20 <fb_scope_table_find_item@@Base+0x170>
  41af1c:	mov    cl,BYTE PTR [rsp+0x7]
  41af20:	test   cl,cl
  41af22:	jne    41ae90 <fb_scope_table_find_item@@Base+0xe0>
  41af28:	test   al,al
  41af2a:	jne    41ae90 <fb_scope_table_find_item@@Base+0xe0>
  41af30:	jmp    41af35 <fb_scope_table_find_item@@Base+0x185>
  41af32:	xor    r13d,r13d
  41af35:	mov    rax,r13
  41af38:	add    rsp,0x18
  41af3c:	pop    rbx
  41af3d:	pop    r12
  41af3f:	pop    r13
  41af41:	pop    r14
  41af43:	pop    r15
  41af45:	pop    rbp
  41af46:	ret    
  41af47:	nop    WORD PTR [rax+rax*1+0x0]

000000000041af50 <fb_scope_table_remove@@Base>:
  41af50:	jmp    41af60 <fb_scope_table_remove@@Base+0x10>
  41af52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af5c:	nop    DWORD PTR [rax+0x0]
  41af60:	push   rbp
  41af61:	push   r15
  41af63:	push   r14
  41af65:	push   r13
  41af67:	push   r12
  41af69:	push   rbx
  41af6a:	sub    rsp,0x38
  41af6e:	mov    QWORD PTR [rsp],rsi
  41af72:	mov    rax,QWORD PTR [rdi]
  41af75:	mov    QWORD PTR [rsp+0x8],rax
  41af7a:	test   rax,rax
  41af7d:	je     41b23b <fb_scope_table_remove@@Base+0x2eb>
  41af83:	mov    rax,QWORD PTR [rdi+0x18]
  41af87:	mov    QWORD PTR [rsp+0x10],rax
  41af8c:	test   edx,edx
  41af8e:	mov    QWORD PTR [rsp+0x30],rdx
  41af93:	mov    QWORD PTR [rsp+0x28],rdi
  41af98:	mov    r8d,0x9e3779b1
  41af9e:	jle    41b05e <fb_scope_table_remove@@Base+0x10e>
  41afa4:	xor    r14d,r14d
  41afa7:	mov    r9,rdx
  41afaa:	mov    rdx,QWORD PTR [rsp]
  41afae:	test   r9,r9
  41afb1:	je     41b000 <fb_scope_table_remove@@Base+0xb0>
  41afb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afbd:	nop    DWORD PTR [rax]
  41afc0:	xor    esi,esi
  41afc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afcc:	nop    DWORD PTR [rax+0x0]
  41afd0:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  41afd4:	je     41afe1 <fb_scope_table_remove@@Base+0x91>
  41afd6:	inc    rsi
  41afd9:	cmp    r9,rsi
  41afdc:	jne    41afd0 <fb_scope_table_remove@@Base+0x80>
  41afde:	mov    rsi,r9
  41afe1:	mov    rbp,rsi
  41afe4:	dec    rbp
  41afe7:	jne    41b009 <fb_scope_table_remove@@Base+0xb9>
  41afe9:	mov    ecx,0x2f692e57
  41afee:	mov    esi,0x1
  41aff3:	jmp    41b02e <fb_scope_table_remove@@Base+0xde>
  41aff5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afff:	nop
  41b000:	mov    rbp,0xffffffffffffffff
  41b007:	xor    esi,esi
  41b009:	mov    ecx,0x2f692e57
  41b00e:	xor    ebx,ebx
  41b010:	movzx  eax,BYTE PTR [rdx+rbx*1]
  41b014:	test   rax,rax
  41b017:	je     41b02e <fb_scope_table_remove@@Base+0xde>
  41b019:	mov    rdi,rcx
  41b01c:	shl    rdi,0x5
  41b020:	add    rcx,rdi
  41b023:	xor    rcx,rax
  41b026:	inc    rbx
  41b029:	cmp    rbp,rbx
  41b02c:	jne    41b010 <fb_scope_table_remove@@Base+0xc0>
  41b02e:	xor    r14,rcx
  41b031:	xor    r14,0x2f693b52
  41b038:	imul   r14,r8
  41b03c:	cmp    rsi,r9
  41b03f:	je     41b0e5 <fb_scope_table_remove@@Base+0x195>
  41b045:	lea    rax,[rsi+0x1]
  41b049:	sub    r9,rax
  41b04c:	add    rdx,rsi
  41b04f:	add    rdx,0x1
  41b053:	test   r9,r9
  41b056:	jne    41afc0 <fb_scope_table_remove@@Base+0x70>
  41b05c:	jmp    41b000 <fb_scope_table_remove@@Base+0xb0>
  41b05e:	xor    r14d,r14d
  41b061:	mov    r9d,edx
  41b064:	mov    rdx,QWORD PTR [rsp]
  41b068:	test   rdx,rdx
  41b06b:	jne    41b090 <fb_scope_table_remove@@Base+0x140>
  41b06d:	jmp    41b0e5 <fb_scope_table_remove@@Base+0x195>
  41b06f:	nop
  41b070:	mov    ebx,0x2f692e57
  41b075:	xor    r14,rbx
  41b078:	xor    r14,0x2f693b52
  41b07f:	imul   r14,r8
  41b083:	mov    rdx,QWORD PTR [rdx]
  41b086:	inc    r9d
  41b089:	je     41b0e5 <fb_scope_table_remove@@Base+0x195>
  41b08b:	test   rdx,rdx
  41b08e:	je     41b0e5 <fb_scope_table_remove@@Base+0x195>
  41b090:	mov    rax,QWORD PTR [rdx+0x8]
  41b094:	mov    rsi,QWORD PTR [rax+0x8]
  41b098:	dec    rsi
  41b09b:	je     41b070 <fb_scope_table_remove@@Base+0x120>
  41b09d:	mov    rdi,QWORD PTR [rax]
  41b0a0:	mov    eax,0x2f692e57
  41b0a5:	xor    ebp,ebp
  41b0a7:	nop    WORD PTR [rax+rax*1+0x0]
  41b0b0:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  41b0b4:	test   rcx,rcx
  41b0b7:	je     41b0e0 <fb_scope_table_remove@@Base+0x190>
  41b0b9:	mov    rbx,rax
  41b0bc:	shl    rbx,0x5
  41b0c0:	add    rbx,rax
  41b0c3:	xor    rbx,rcx
  41b0c6:	inc    rbp
  41b0c9:	mov    rax,rbx
  41b0cc:	cmp    rsi,rbp
  41b0cf:	jne    41b0b0 <fb_scope_table_remove@@Base+0x160>
  41b0d1:	jmp    41b075 <fb_scope_table_remove@@Base+0x125>
  41b0d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b0dd:	nop    DWORD PTR [rax]
  41b0e0:	mov    rbx,rax
  41b0e3:	jmp    41b075 <fb_scope_table_remove@@Base+0x125>
  41b0e5:	dec    QWORD PTR [rsp+0x10]
  41b0ea:	xor    eax,eax
  41b0ec:	mov    QWORD PTR [rsp+0x20],rax
  41b0f1:	mov    r12,r14
  41b0f4:	jmp    41b115 <fb_scope_table_remove@@Base+0x1c5>
  41b0f6:	or     r13,rbp
  41b0f9:	je     41b21e <fb_scope_table_remove@@Base+0x2ce>
  41b0ff:	nop
  41b100:	mov    rax,QWORD PTR [rsp+0x20]
  41b105:	lea    r12,[rax+r14*1]
  41b109:	add    r12,0x1
  41b10d:	inc    rax
  41b110:	mov    QWORD PTR [rsp+0x20],rax
  41b115:	and    r12,QWORD PTR [rsp+0x10]
  41b11a:	mov    rax,QWORD PTR [rsp+0x8]
  41b11f:	mov    rax,QWORD PTR [rax+r12*8]
  41b123:	mov    QWORD PTR [rsp+0x18],rax
  41b128:	cmp    rax,0x2
  41b12c:	je     41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b12e:	mov    rax,QWORD PTR [rsp+0x18]
  41b133:	test   rax,rax
  41b136:	je     41b23b <fb_scope_table_remove@@Base+0x2eb>
  41b13c:	mov    r13,QWORD PTR [rax]
  41b13f:	mov    rcx,QWORD PTR [rsp+0x30]
  41b144:	test   ecx,ecx
  41b146:	jle    41b1b0 <fb_scope_table_remove@@Base+0x260>
  41b148:	mov    rax,QWORD PTR [rsp]
  41b14c:	test   r13,r13
  41b14f:	je     41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b151:	mov    rsi,QWORD PTR [r13+0x8]
  41b155:	mov    rdx,QWORD PTR [rsi+0x8]
  41b159:	cmp    rdx,rcx
  41b15c:	ja     41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b15e:	test   rdx,rdx
  41b161:	je     41b181 <fb_scope_table_remove@@Base+0x231>
  41b163:	mov    rsi,QWORD PTR [rsi]
  41b166:	xor    edi,edi
  41b168:	nop    DWORD PTR [rax+rax*1+0x0]
  41b170:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41b174:	cmp    bl,BYTE PTR [rax+rdi*1]
  41b177:	jne    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b179:	inc    rdi
  41b17c:	cmp    rdx,rdi
  41b17f:	jne    41b170 <fb_scope_table_remove@@Base+0x220>
  41b181:	cmp    rdx,rcx
  41b184:	je     41b213 <fb_scope_table_remove@@Base+0x2c3>
  41b18a:	cmp    BYTE PTR [rax+rdx*1],0x2e
  41b18e:	jne    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b194:	lea    rsi,[rdx+0x1]
  41b198:	sub    rcx,rsi
  41b19b:	add    rax,rdx
  41b19e:	add    rax,0x1
  41b1a2:	mov    r13,QWORD PTR [r13+0x0]
  41b1a6:	test   r13,r13
  41b1a9:	jne    41b151 <fb_scope_table_remove@@Base+0x201>
  41b1ab:	jmp    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b1b0:	mov    r15d,ecx
  41b1b3:	mov    rbp,QWORD PTR [rsp]
  41b1b7:	nop    WORD PTR [rax+rax*1+0x0]
  41b1c0:	test   r13,r13
  41b1c3:	je     41b0f6 <fb_scope_table_remove@@Base+0x1a6>
  41b1c9:	test   rbp,rbp
  41b1cc:	je     41b0f6 <fb_scope_table_remove@@Base+0x1a6>
  41b1d2:	mov    rax,QWORD PTR [r13+0x8]
  41b1d6:	mov    rdx,QWORD PTR [rax+0x8]
  41b1da:	mov    rcx,QWORD PTR [rbp+0x8]
  41b1de:	cmp    rdx,QWORD PTR [rcx+0x8]
  41b1e2:	jne    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b1e8:	mov    rdi,QWORD PTR [rax]
  41b1eb:	mov    rsi,QWORD PTR [rcx]
  41b1ee:	call   406060 <strncmp@plt>
  41b1f3:	test   eax,eax
  41b1f5:	jne    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b1fb:	mov    r13,QWORD PTR [r13+0x0]
  41b1ff:	mov    rbp,QWORD PTR [rbp+0x0]
  41b203:	inc    r15d
  41b206:	jne    41b1c0 <fb_scope_table_remove@@Base+0x270>
  41b208:	test   r13,r13
  41b20b:	jne    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b211:	jmp    41b21e <fb_scope_table_remove@@Base+0x2ce>
  41b213:	cmp    QWORD PTR [r13+0x0],0x0
  41b218:	jne    41b100 <fb_scope_table_remove@@Base+0x1b0>
  41b21e:	mov    rax,QWORD PTR [rsp+0x8]
  41b223:	mov    QWORD PTR [rax+r12*8],0x2
  41b22b:	mov    rax,QWORD PTR [rsp+0x28]
  41b230:	dec    QWORD PTR [rax+0x10]
  41b234:	mov    rax,QWORD PTR [rsp+0x18]
  41b239:	jmp    41b23d <fb_scope_table_remove@@Base+0x2ed>
  41b23b:	xor    eax,eax
  41b23d:	add    rsp,0x38
  41b241:	pop    rbx
  41b242:	pop    r12
  41b244:	pop    r13
  41b246:	pop    r14
  41b248:	pop    r15
  41b24a:	pop    rbp
  41b24b:	ret    
  41b24c:	nop    DWORD PTR [rax+0x0]

000000000041b250 <fb_scope_table_remove_item@@Base>:
  41b250:	mov    rsi,QWORD PTR [rsi]
  41b253:	xor    edx,edx
  41b255:	jmp    41af60 <fb_scope_table_remove@@Base+0x10>
  41b25a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b260 <fb_scope_table_visit@@Base>:
  41b260:	push   r15
  41b262:	push   r14
  41b264:	push   r13
  41b266:	push   r12
  41b268:	push   rbx
  41b269:	mov    rax,QWORD PTR [rdi+0x18]
  41b26d:	test   rax,rax
  41b270:	je     41b2b7 <fb_scope_table_visit@@Base+0x57>
  41b272:	mov    r14,rdx
  41b275:	mov    r15,rsi
  41b278:	mov    r12,rdi
  41b27b:	mov    r13,QWORD PTR [rdi]
  41b27e:	xor    ebx,ebx
  41b280:	jmp    41b298 <fb_scope_table_visit@@Base+0x38>
  41b282:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b28c:	nop    DWORD PTR [rax+0x0]
  41b290:	inc    rbx
  41b293:	cmp    rbx,rax
  41b296:	jae    41b2b7 <fb_scope_table_visit@@Base+0x57>
  41b298:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41b29d:	mov    rcx,rsi
  41b2a0:	or     rcx,0x2
  41b2a4:	cmp    rcx,0x2
  41b2a8:	je     41b290 <fb_scope_table_visit@@Base+0x30>
  41b2aa:	mov    rdi,r14
  41b2ad:	call   r15
  41b2b0:	mov    rax,QWORD PTR [r12+0x18]
  41b2b5:	jmp    41b290 <fb_scope_table_visit@@Base+0x30>
  41b2b7:	pop    rbx
  41b2b8:	pop    r12
  41b2ba:	pop    r13
  41b2bc:	pop    r14
  41b2be:	pop    r15
  41b2c0:	ret    
  41b2c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b2cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b2d0 <fb_schema_table_clear@@Base>:
  41b2d0:	push   rbx
  41b2d1:	mov    rbx,rdi
  41b2d4:	mov    rdi,QWORD PTR [rdi]
  41b2d7:	test   rdi,rdi
  41b2da:	je     41b2e1 <fb_schema_table_clear@@Base+0x11>
  41b2dc:	call   406040 <free@plt>
  41b2e1:	vxorps xmm0,xmm0,xmm0
  41b2e5:	vmovups YMMWORD PTR [rbx],ymm0
  41b2e9:	pop    rbx
  41b2ea:	vzeroupper 
  41b2ed:	ret    
  41b2ee:	xchg   ax,ax

000000000041b2f0 <fb_schema_table_destroy@@Base>:
  41b2f0:	push   r15
  41b2f2:	push   r14
  41b2f4:	push   r13
  41b2f6:	push   r12
  41b2f8:	push   rbx
  41b2f9:	mov    r12,rdi
  41b2fc:	test   rsi,rsi
  41b2ff:	je     41b347 <fb_schema_table_destroy@@Base+0x57>
  41b301:	mov    rax,QWORD PTR [r12+0x18]
  41b306:	test   rax,rax
  41b309:	je     41b347 <fb_schema_table_destroy@@Base+0x57>
  41b30b:	mov    r14,rdx
  41b30e:	mov    r15,rsi
  41b311:	mov    r13,QWORD PTR [r12]
  41b315:	xor    ebx,ebx
  41b317:	jmp    41b328 <fb_schema_table_destroy@@Base+0x38>
  41b319:	nop    DWORD PTR [rax+0x0]
  41b320:	inc    rbx
  41b323:	cmp    rbx,rax
  41b326:	jae    41b347 <fb_schema_table_destroy@@Base+0x57>
  41b328:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41b32d:	mov    rcx,rsi
  41b330:	or     rcx,0x2
  41b334:	cmp    rcx,0x2
  41b338:	je     41b320 <fb_schema_table_destroy@@Base+0x30>
  41b33a:	mov    rdi,r14
  41b33d:	call   r15
  41b340:	mov    rax,QWORD PTR [r12+0x18]
  41b345:	jmp    41b320 <fb_schema_table_destroy@@Base+0x30>
  41b347:	mov    rdi,QWORD PTR [r12]
  41b34b:	test   rdi,rdi
  41b34e:	je     41b355 <fb_schema_table_destroy@@Base+0x65>
  41b350:	call   406040 <free@plt>
  41b355:	vxorps xmm0,xmm0,xmm0
  41b359:	vmovups YMMWORD PTR [r12],ymm0
  41b35f:	pop    rbx
  41b360:	pop    r12
  41b362:	pop    r13
  41b364:	pop    r14
  41b366:	pop    r15
  41b368:	vzeroupper 
  41b36b:	ret    
  41b36c:	nop    DWORD PTR [rax+0x0]

000000000041b370 <fb_schema_table_init@@Base>:
  41b370:	push   r14
  41b372:	push   rbx
  41b373:	push   rax
  41b374:	mov    r14,rdi
  41b377:	mov    eax,0x4
  41b37c:	nop    DWORD PTR [rax+0x0]
  41b380:	mov    rbx,rax
  41b383:	imul   rcx,rax,0xb3
  41b38a:	shr    rcx,0x8
  41b38e:	add    rax,rax
  41b391:	cmp    rcx,rsi
  41b394:	jb     41b380 <fb_schema_table_init@@Base+0x10>
  41b396:	mov    esi,0x8
  41b39b:	mov    rdi,rbx
  41b39e:	call   406150 <calloc@plt>
  41b3a3:	mov    QWORD PTR [r14],rax
  41b3a6:	test   rax,rax
  41b3a9:	je     41b3bd <fb_schema_table_init@@Base+0x4d>
  41b3ab:	vxorps xmm0,xmm0,xmm0
  41b3af:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41b3b5:	mov    QWORD PTR [r14+0x18],rbx
  41b3b9:	xor    eax,eax
  41b3bb:	jmp    41b3c2 <fb_schema_table_init@@Base+0x52>
  41b3bd:	mov    eax,0xffffffff
  41b3c2:	add    rsp,0x8
  41b3c6:	pop    rbx
  41b3c7:	pop    r14
  41b3c9:	ret    
  41b3ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b3d0 <fb_schema_table_resize@@Base>:
  41b3d0:	jmp    41b3e0 <fb_schema_table_resize@@Base+0x10>
  41b3d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3dc:	nop    DWORD PTR [rax+0x0]
  41b3e0:	push   r15
  41b3e2:	push   r14
  41b3e4:	push   r12
  41b3e6:	push   rbx
  41b3e7:	sub    rsp,0x28
  41b3eb:	mov    r14,rdi
  41b3ee:	mov    r12,QWORD PTR [rdi]
  41b3f1:	mov    rax,QWORD PTR [rdi+0x10]
  41b3f5:	cmp    rax,rsi
  41b3f8:	cmova  rsi,rax
  41b3fc:	mov    eax,0x4
  41b401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b40b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b410:	mov    rbx,rax
  41b413:	imul   rcx,rax,0xb3
  41b41a:	shr    rcx,0x8
  41b41e:	add    rax,rax
  41b421:	cmp    rcx,rsi
  41b424:	jb     41b410 <fb_schema_table_resize@@Base+0x40>
  41b426:	mov    esi,0x8
  41b42b:	mov    rdi,rbx
  41b42e:	call   406150 <calloc@plt>
  41b433:	mov    QWORD PTR [rsp+0x8],rax
  41b438:	test   rax,rax
  41b43b:	je     41b49b <fb_schema_table_resize@@Base+0xcb>
  41b43d:	vxorps xmm0,xmm0,xmm0
  41b441:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41b447:	mov    QWORD PTR [rsp+0x20],rbx
  41b44c:	mov    rax,QWORD PTR [r14+0x18]
  41b450:	test   rax,rax
  41b453:	je     41b4a5 <fb_schema_table_resize@@Base+0xd5>
  41b455:	xor    ebx,ebx
  41b457:	lea    r15,[rsp+0x8]
  41b45c:	jmp    41b468 <fb_schema_table_resize@@Base+0x98>
  41b45e:	xchg   ax,ax
  41b460:	inc    rbx
  41b463:	cmp    rbx,rax
  41b466:	jae    41b4a2 <fb_schema_table_resize@@Base+0xd2>
  41b468:	mov    rcx,QWORD PTR [r12+rbx*8]
  41b46c:	mov    rdx,rcx
  41b46f:	or     rdx,0x2
  41b473:	cmp    rdx,0x2
  41b477:	je     41b460 <fb_schema_table_resize@@Base+0x90>
  41b479:	mov    rsi,QWORD PTR [rcx+0xf8]
  41b480:	movsxd rdx,DWORD PTR [rcx+0x100]
  41b487:	mov    rdi,r15
  41b48a:	mov    r8d,0x3
  41b490:	call   41b4e0 <fb_schema_table_insert@@Base+0x10>
  41b495:	mov    rax,QWORD PTR [r14+0x18]
  41b499:	jmp    41b460 <fb_schema_table_resize@@Base+0x90>
  41b49b:	mov    eax,0xffffffff
  41b4a0:	jmp    41b4bf <fb_schema_table_resize@@Base+0xef>
  41b4a2:	mov    r12,QWORD PTR [r14]
  41b4a5:	test   r12,r12
  41b4a8:	je     41b4b2 <fb_schema_table_resize@@Base+0xe2>
  41b4aa:	mov    rdi,r12
  41b4ad:	call   406040 <free@plt>
  41b4b2:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41b4b8:	vmovups YMMWORD PTR [r14],ymm0
  41b4bd:	xor    eax,eax
  41b4bf:	add    rsp,0x28
  41b4c3:	pop    rbx
  41b4c4:	pop    r12
  41b4c6:	pop    r14
  41b4c8:	pop    r15
  41b4ca:	vzeroupper 
  41b4cd:	ret    
  41b4ce:	xchg   ax,ax

000000000041b4d0 <fb_schema_table_insert@@Base>:
  41b4d0:	jmp    41b4e0 <fb_schema_table_insert@@Base+0x10>
  41b4d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4dc:	nop    DWORD PTR [rax+0x0]
  41b4e0:	push   rbp
  41b4e1:	push   r15
  41b4e3:	push   r14
  41b4e5:	push   r13
  41b4e7:	push   r12
  41b4e9:	push   rbx
  41b4ea:	sub    rsp,0x38
  41b4ee:	mov    QWORD PTR [rsp+0x20],rsi
  41b4f3:	cmp    rcx,0x2
  41b4f7:	je     41b661 <fb_schema_table_insert@@Base+0x191>
  41b4fd:	mov    r13,rcx
  41b500:	cmp    rcx,0x1
  41b504:	je     41b680 <fb_schema_table_insert@@Base+0x1b0>
  41b50a:	test   r13,r13
  41b50d:	je     41b69f <fb_schema_table_insert@@Base+0x1cf>
  41b513:	mov    ebp,r8d
  41b516:	mov    rbx,rdi
  41b519:	mov    rsi,QWORD PTR [rdi+0x10]
  41b51d:	mov    r15,QWORD PTR [rdi+0x18]
  41b521:	imul   rax,r15,0xb3
  41b528:	shr    rax,0x8
  41b52c:	cmp    rsi,rax
  41b52f:	mov    QWORD PTR [rsp+0x8],rdx
  41b534:	jb     41b552 <fb_schema_table_insert@@Base+0x82>
  41b536:	add    rsi,rsi
  41b539:	mov    rdi,rbx
  41b53c:	call   41b3e0 <fb_schema_table_resize@@Base+0x10>
  41b541:	test   eax,eax
  41b543:	jne    41b6be <fb_schema_table_insert@@Base+0x1ee>
  41b549:	mov    r15,QWORD PTR [rbx+0x18]
  41b54d:	mov    rdx,QWORD PTR [rsp+0x8]
  41b552:	mov    r14,QWORD PTR [rbx]
  41b555:	dec    r15
  41b558:	lea    rcx,[rsp+0x30]
  41b55d:	mov    rdi,QWORD PTR [rsp+0x20]
  41b562:	mov    rsi,rdx
  41b565:	mov    edx,0x2f693b52
  41b56a:	call   42c490 <cmetrohash64_1@@Base>
  41b56f:	mov    rcx,QWORD PTR [rsp+0x30]
  41b574:	mov    r12d,ecx
  41b577:	mov    eax,r15d
  41b57a:	and    eax,ecx
  41b57c:	mov    ecx,ebp
  41b57e:	or     ecx,0x1
  41b581:	cmp    ecx,0x3
  41b584:	jne    41b5ad <fb_schema_table_insert@@Base+0xdd>
  41b586:	inc    QWORD PTR [rbx+0x10]
  41b58a:	nop    WORD PTR [rax+rax*1+0x0]
  41b590:	inc    r12
  41b593:	mov    rcx,QWORD PTR [r14+rax*8]
  41b597:	or     rcx,0x2
  41b59b:	cmp    rcx,0x2
  41b59f:	je     41b62c <fb_schema_table_insert@@Base+0x15c>
  41b5a5:	mov    rax,r12
  41b5a8:	and    rax,r15
  41b5ab:	jmp    41b590 <fb_schema_table_insert@@Base+0xc0>
  41b5ad:	mov    DWORD PTR [rsp+0x14],ebp
  41b5b1:	mov    QWORD PTR [rsp+0x28],rbx
  41b5b6:	mov    QWORD PTR [rsp+0x18],r13
  41b5bb:	inc    r12
  41b5be:	xor    r13d,r13d
  41b5c1:	mov    rcx,QWORD PTR [rsp+0x8]
  41b5c6:	jmp    41b5e0 <fb_schema_table_insert@@Base+0x110>
  41b5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b5d0:	test   r13,r13
  41b5d3:	cmove  r13,rbp
  41b5d7:	mov    rax,r12
  41b5da:	and    rax,r15
  41b5dd:	inc    r12
  41b5e0:	lea    rbp,[r14+rax*8]
  41b5e4:	mov    rbx,QWORD PTR [r14+rax*8]
  41b5e8:	cmp    rbx,0x2
  41b5ec:	je     41b5d0 <fb_schema_table_insert@@Base+0x100>
  41b5ee:	test   rbx,rbx
  41b5f1:	je     41b634 <fb_schema_table_insert@@Base+0x164>
  41b5f3:	movsxd rax,DWORD PTR [rbx+0x100]
  41b5fa:	cmp    rax,rcx
  41b5fd:	jne    41b5d7 <fb_schema_table_insert@@Base+0x107>
  41b5ff:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b606:	mov    rdi,QWORD PTR [rsp+0x20]
  41b60b:	mov    rdx,QWORD PTR [rsp+0x8]
  41b610:	call   4061c0 <bcmp@plt>
  41b615:	mov    rcx,QWORD PTR [rsp+0x8]
  41b61a:	test   eax,eax
  41b61c:	jne    41b5d7 <fb_schema_table_insert@@Base+0x107>
  41b61e:	cmp    DWORD PTR [rsp+0x14],0x0
  41b623:	mov    r13,QWORD PTR [rsp+0x18]
  41b628:	jne    41b64f <fb_schema_table_insert@@Base+0x17f>
  41b62a:	jmp    41b64b <fb_schema_table_insert@@Base+0x17b>
  41b62c:	lea    rbp,[r14+rax*8]
  41b630:	xor    ebx,ebx
  41b632:	jmp    41b64b <fb_schema_table_insert@@Base+0x17b>
  41b634:	test   r13,r13
  41b637:	cmovne rbp,r13
  41b63b:	mov    rax,QWORD PTR [rsp+0x28]
  41b640:	inc    QWORD PTR [rax+0x10]
  41b644:	xor    ebx,ebx
  41b646:	mov    r13,QWORD PTR [rsp+0x18]
  41b64b:	mov    QWORD PTR [rbp+0x0],r13
  41b64f:	mov    rax,rbx
  41b652:	add    rsp,0x38
  41b656:	pop    rbx
  41b657:	pop    r12
  41b659:	pop    r13
  41b65b:	pop    r14
  41b65d:	pop    r15
  41b65f:	pop    rbp
  41b660:	ret    
  41b661:	lea    rdi,[rip+0x2b7eb]        # 446e53 <str_set_deleted@@Base+0xd3>
  41b668:	lea    rsi,[rip+0x2b730]        # 446d9f <str_set_deleted@@Base+0x1f>
  41b66f:	lea    rcx,[rip+0x2b793]        # 446e09 <str_set_deleted@@Base+0x89>
  41b676:	mov    edx,0x73
  41b67b:	call   406100 <__assert_fail@plt>
  41b680:	lea    rdi,[rip+0x2b7e3]        # 446e6a <str_set_deleted@@Base+0xea>
  41b687:	lea    rsi,[rip+0x2b711]        # 446d9f <str_set_deleted@@Base+0x1f>
  41b68e:	lea    rcx,[rip+0x2b774]        # 446e09 <str_set_deleted@@Base+0x89>
  41b695:	mov    edx,0x74
  41b69a:	call   406100 <__assert_fail@plt>
  41b69f:	lea    rdi,[rip+0x2b6e2]        # 446d88 <str_set_deleted@@Base+0x8>
  41b6a6:	lea    rsi,[rip+0x2b6f2]        # 446d9f <str_set_deleted@@Base+0x1f>
  41b6ad:	lea    rcx,[rip+0x2b755]        # 446e09 <str_set_deleted@@Base+0x89>
  41b6b4:	mov    edx,0x72
  41b6b9:	call   406100 <__assert_fail@plt>
  41b6be:	mov    rax,QWORD PTR [rip+0x36933]        # 451ff8 <stderr@GLIBC_2.2.5>
  41b6c5:	mov    rdi,QWORD PTR [rax]
  41b6c8:	lea    rsi,[rip+0x2b7b0]        # 446e7f <str_set_deleted@@Base+0xff>
  41b6cf:	lea    rdx,[rip+0x2b7c0]        # 446e96 <str_set_deleted@@Base+0x116>
  41b6d6:	xor    eax,eax
  41b6d8:	call   406180 <fprintf@plt>
  41b6dd:	mov    edi,0x1
  41b6e2:	call   406220 <exit@plt>
  41b6e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b6f0 <fb_schema_table_insert_item@@Base>:
  41b6f0:	mov    r8d,edx
  41b6f3:	mov    rcx,rsi
  41b6f6:	mov    rsi,QWORD PTR [rsi+0xf8]
  41b6fd:	movsxd rdx,DWORD PTR [rcx+0x100]
  41b704:	jmp    41b4e0 <fb_schema_table_insert@@Base+0x10>
  41b709:	nop    DWORD PTR [rax+0x0]

000000000041b710 <fb_schema_table_find@@Base>:
  41b710:	push   rbp
  41b711:	push   r15
  41b713:	push   r14
  41b715:	push   r13
  41b717:	push   r12
  41b719:	push   rbx
  41b71a:	push   rax
  41b71b:	mov    r12,QWORD PTR [rdi]
  41b71e:	test   r12,r12
  41b721:	je     41b78c <fb_schema_table_find@@Base+0x7c>
  41b723:	mov    r15,rdx
  41b726:	mov    r14,rsi
  41b729:	mov    r13,QWORD PTR [rdi+0x18]
  41b72d:	dec    r13
  41b730:	mov    rcx,rsp
  41b733:	mov    rdi,rsi
  41b736:	mov    rsi,rdx
  41b739:	mov    edx,0x2f693b52
  41b73e:	call   42c490 <cmetrohash64_1@@Base>
  41b743:	mov    ebp,DWORD PTR [rsp]
  41b746:	jmp    41b753 <fb_schema_table_find@@Base+0x43>
  41b748:	nop    DWORD PTR [rax+rax*1+0x0]
  41b750:	inc    rbp
  41b753:	mov    rax,rbp
  41b756:	and    rax,r13
  41b759:	mov    rbx,QWORD PTR [r12+rax*8]
  41b75d:	cmp    rbx,0x2
  41b761:	je     41b750 <fb_schema_table_find@@Base+0x40>
  41b763:	test   rbx,rbx
  41b766:	je     41b78c <fb_schema_table_find@@Base+0x7c>
  41b768:	movsxd rax,DWORD PTR [rbx+0x100]
  41b76f:	cmp    rax,r15
  41b772:	jne    41b750 <fb_schema_table_find@@Base+0x40>
  41b774:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b77b:	mov    rdi,r14
  41b77e:	mov    rdx,r15
  41b781:	call   4061c0 <bcmp@plt>
  41b786:	test   eax,eax
  41b788:	jne    41b750 <fb_schema_table_find@@Base+0x40>
  41b78a:	jmp    41b78e <fb_schema_table_find@@Base+0x7e>
  41b78c:	xor    ebx,ebx
  41b78e:	mov    rax,rbx
  41b791:	add    rsp,0x8
  41b795:	pop    rbx
  41b796:	pop    r12
  41b798:	pop    r13
  41b79a:	pop    r14
  41b79c:	pop    r15
  41b79e:	pop    rbp
  41b79f:	ret    

000000000041b7a0 <fb_schema_table_find_item@@Base>:
  41b7a0:	push   rbp
  41b7a1:	push   r15
  41b7a3:	push   r14
  41b7a5:	push   r13
  41b7a7:	push   r12
  41b7a9:	push   rbx
  41b7aa:	push   rax
  41b7ab:	mov    r12,QWORD PTR [rdi]
  41b7ae:	test   r12,r12
  41b7b1:	je     41b819 <fb_schema_table_find_item@@Base+0x79>
  41b7b3:	mov    r14,QWORD PTR [rsi+0xf8]
  41b7ba:	movsxd r15,DWORD PTR [rsi+0x100]
  41b7c1:	mov    r13,QWORD PTR [rdi+0x18]
  41b7c5:	dec    r13
  41b7c8:	mov    rcx,rsp
  41b7cb:	mov    rdi,r14
  41b7ce:	mov    rsi,r15
  41b7d1:	mov    edx,0x2f693b52
  41b7d6:	call   42c490 <cmetrohash64_1@@Base>
  41b7db:	mov    ebp,DWORD PTR [rsp]
  41b7de:	jmp    41b7e3 <fb_schema_table_find_item@@Base+0x43>
  41b7e0:	inc    rbp
  41b7e3:	mov    rax,rbp
  41b7e6:	and    rax,r13
  41b7e9:	mov    rbx,QWORD PTR [r12+rax*8]
  41b7ed:	cmp    rbx,0x2
  41b7f1:	je     41b7e0 <fb_schema_table_find_item@@Base+0x40>
  41b7f3:	test   rbx,rbx
  41b7f6:	je     41b819 <fb_schema_table_find_item@@Base+0x79>
  41b7f8:	cmp    DWORD PTR [rbx+0x100],r15d
  41b7ff:	jne    41b7e0 <fb_schema_table_find_item@@Base+0x40>
  41b801:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b808:	mov    rdi,r14
  41b80b:	mov    rdx,r15
  41b80e:	call   4061c0 <bcmp@plt>
  41b813:	test   eax,eax
  41b815:	jne    41b7e0 <fb_schema_table_find_item@@Base+0x40>
  41b817:	jmp    41b81b <fb_schema_table_find_item@@Base+0x7b>
  41b819:	xor    ebx,ebx
  41b81b:	mov    rax,rbx
  41b81e:	add    rsp,0x8
  41b822:	pop    rbx
  41b823:	pop    r12
  41b825:	pop    r13
  41b827:	pop    r14
  41b829:	pop    r15
  41b82b:	pop    rbp
  41b82c:	ret    
  41b82d:	nop    DWORD PTR [rax]

000000000041b830 <fb_schema_table_remove@@Base>:
  41b830:	push   rbp
  41b831:	push   r15
  41b833:	push   r14
  41b835:	push   r13
  41b837:	push   r12
  41b839:	push   rbx
  41b83a:	sub    rsp,0x18
  41b83e:	mov    r13,QWORD PTR [rdi]
  41b841:	test   r13,r13
  41b844:	je     41b8d0 <fb_schema_table_remove@@Base+0xa0>
  41b84a:	mov    r12,rdx
  41b84d:	mov    QWORD PTR [rsp],rdi
  41b851:	mov    rbp,QWORD PTR [rdi+0x18]
  41b855:	dec    rbp
  41b858:	lea    rcx,[rsp+0x10]
  41b85d:	mov    QWORD PTR [rsp+0x8],rsi
  41b862:	mov    rdi,rsi
  41b865:	mov    rsi,rdx
  41b868:	mov    edx,0x2f693b52
  41b86d:	call   42c490 <cmetrohash64_1@@Base>
  41b872:	mov    r15d,DWORD PTR [rsp+0x10]
  41b877:	jmp    41b883 <fb_schema_table_remove@@Base+0x53>
  41b879:	nop    DWORD PTR [rax+0x0]
  41b880:	inc    r15
  41b883:	mov    r14,r15
  41b886:	and    r14,rbp
  41b889:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41b88e:	cmp    rbx,0x2
  41b892:	je     41b880 <fb_schema_table_remove@@Base+0x50>
  41b894:	test   rbx,rbx
  41b897:	je     41b8d0 <fb_schema_table_remove@@Base+0xa0>
  41b899:	movsxd rax,DWORD PTR [rbx+0x100]
  41b8a0:	cmp    rax,r12
  41b8a3:	jne    41b880 <fb_schema_table_remove@@Base+0x50>
  41b8a5:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b8ac:	mov    rdi,QWORD PTR [rsp+0x8]
  41b8b1:	mov    rdx,r12
  41b8b4:	call   4061c0 <bcmp@plt>
  41b8b9:	test   eax,eax
  41b8bb:	jne    41b880 <fb_schema_table_remove@@Base+0x50>
  41b8bd:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41b8c6:	mov    rax,QWORD PTR [rsp]
  41b8ca:	dec    QWORD PTR [rax+0x10]
  41b8ce:	jmp    41b8d2 <fb_schema_table_remove@@Base+0xa2>
  41b8d0:	xor    ebx,ebx
  41b8d2:	mov    rax,rbx
  41b8d5:	add    rsp,0x18
  41b8d9:	pop    rbx
  41b8da:	pop    r12
  41b8dc:	pop    r13
  41b8de:	pop    r14
  41b8e0:	pop    r15
  41b8e2:	pop    rbp
  41b8e3:	ret    
  41b8e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b8ee:	xchg   ax,ax

000000000041b8f0 <fb_schema_table_remove_item@@Base>:
  41b8f0:	push   rbp
  41b8f1:	push   r15
  41b8f3:	push   r14
  41b8f5:	push   r13
  41b8f7:	push   r12
  41b8f9:	push   rbx
  41b8fa:	sub    rsp,0x18
  41b8fe:	mov    r13,QWORD PTR [rdi]
  41b901:	test   r13,r13
  41b904:	je     41b99d <fb_schema_table_remove_item@@Base+0xad>
  41b90a:	mov    rax,QWORD PTR [rsi+0xf8]
  41b911:	movsxd r12,DWORD PTR [rsi+0x100]
  41b918:	mov    QWORD PTR [rsp],rdi
  41b91c:	mov    rbp,QWORD PTR [rdi+0x18]
  41b920:	dec    rbp
  41b923:	lea    rcx,[rsp+0x10]
  41b928:	mov    QWORD PTR [rsp+0x8],rax
  41b92d:	mov    rdi,rax
  41b930:	mov    rsi,r12
  41b933:	mov    edx,0x2f693b52
  41b938:	call   42c490 <cmetrohash64_1@@Base>
  41b93d:	mov    r15d,DWORD PTR [rsp+0x10]
  41b942:	jmp    41b953 <fb_schema_table_remove_item@@Base+0x63>
  41b944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b94e:	xchg   ax,ax
  41b950:	inc    r15
  41b953:	mov    r14,r15
  41b956:	and    r14,rbp
  41b959:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41b95e:	cmp    rbx,0x2
  41b962:	je     41b950 <fb_schema_table_remove_item@@Base+0x60>
  41b964:	test   rbx,rbx
  41b967:	je     41b99d <fb_schema_table_remove_item@@Base+0xad>
  41b969:	cmp    DWORD PTR [rbx+0x100],r12d
  41b970:	jne    41b950 <fb_schema_table_remove_item@@Base+0x60>
  41b972:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b979:	mov    rdi,QWORD PTR [rsp+0x8]
  41b97e:	mov    rdx,r12
  41b981:	call   4061c0 <bcmp@plt>
  41b986:	test   eax,eax
  41b988:	jne    41b950 <fb_schema_table_remove_item@@Base+0x60>
  41b98a:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41b993:	mov    rax,QWORD PTR [rsp]
  41b997:	dec    QWORD PTR [rax+0x10]
  41b99b:	jmp    41b99f <fb_schema_table_remove_item@@Base+0xaf>
  41b99d:	xor    ebx,ebx
  41b99f:	mov    rax,rbx
  41b9a2:	add    rsp,0x18
  41b9a6:	pop    rbx
  41b9a7:	pop    r12
  41b9a9:	pop    r13
  41b9ab:	pop    r14
  41b9ad:	pop    r15
  41b9af:	pop    rbp
  41b9b0:	ret    
  41b9b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b9c0 <fb_schema_table_visit@@Base>:
  41b9c0:	push   r15
  41b9c2:	push   r14
  41b9c4:	push   r13
  41b9c6:	push   r12
  41b9c8:	push   rbx
  41b9c9:	mov    rax,QWORD PTR [rdi+0x18]
  41b9cd:	test   rax,rax
  41b9d0:	je     41ba17 <fb_schema_table_visit@@Base+0x57>
  41b9d2:	mov    r14,rdx
  41b9d5:	mov    r15,rsi
  41b9d8:	mov    r12,rdi
  41b9db:	mov    r13,QWORD PTR [rdi]
  41b9de:	xor    ebx,ebx
  41b9e0:	jmp    41b9f8 <fb_schema_table_visit@@Base+0x38>
  41b9e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9ec:	nop    DWORD PTR [rax+0x0]
  41b9f0:	inc    rbx
  41b9f3:	cmp    rbx,rax
  41b9f6:	jae    41ba17 <fb_schema_table_visit@@Base+0x57>
  41b9f8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41b9fd:	mov    rcx,rsi
  41ba00:	or     rcx,0x2
  41ba04:	cmp    rcx,0x2
  41ba08:	je     41b9f0 <fb_schema_table_visit@@Base+0x30>
  41ba0a:	mov    rdi,r14
  41ba0d:	call   r15
  41ba10:	mov    rax,QWORD PTR [r12+0x18]
  41ba15:	jmp    41b9f0 <fb_schema_table_visit@@Base+0x30>
  41ba17:	pop    rbx
  41ba18:	pop    r12
  41ba1a:	pop    r13
  41ba1c:	pop    r14
  41ba1e:	pop    r15
  41ba20:	ret    
  41ba21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ba30 <__flatcc_fb_copy_path_n@@Base>:
  41ba30:	push   r15
  41ba32:	push   r14
  41ba34:	push   rbx
  41ba35:	mov    r15,rsi
  41ba38:	mov    r14,rdi
  41ba3b:	xor    esi,esi
  41ba3d:	mov    rdx,r15
  41ba40:	call   406130 <memchr@plt>
  41ba45:	mov    rbx,rax
  41ba48:	sub    rbx,r14
  41ba4b:	test   rax,rax
  41ba4e:	cmove  rbx,r15
  41ba52:	lea    rdi,[rbx+0x1]
  41ba56:	call   4061b0 <malloc@plt>
  41ba5b:	mov    r15,rax
  41ba5e:	test   rax,rax
  41ba61:	je     41ba76 <__flatcc_fb_copy_path_n@@Base+0x46>
  41ba63:	mov    rdi,r15
  41ba66:	mov    rsi,r14
  41ba69:	mov    rdx,rbx
  41ba6c:	call   4061a0 <memcpy@plt>
  41ba71:	mov    BYTE PTR [r15+rbx*1],0x0
  41ba76:	mov    rax,r15
  41ba79:	pop    rbx
  41ba7a:	pop    r14
  41ba7c:	pop    r15
  41ba7e:	ret    
  41ba7f:	nop

000000000041ba80 <__flatcc_fb_copy_path@@Base>:
  41ba80:	push   r15
  41ba82:	push   r14
  41ba84:	push   rbx
  41ba85:	mov    r14,rdi
  41ba88:	call   4060d0 <strlen@plt>
  41ba8d:	mov    r15,rax
  41ba90:	lea    rdi,[rax+0x1]
  41ba94:	call   4061b0 <malloc@plt>
  41ba99:	mov    rbx,rax
  41ba9c:	test   rax,rax
  41ba9f:	je     41bab4 <__flatcc_fb_copy_path@@Base+0x34>
  41baa1:	mov    rdi,rbx
  41baa4:	mov    rsi,r14
  41baa7:	mov    rdx,r15
  41baaa:	call   4061a0 <memcpy@plt>
  41baaf:	mov    BYTE PTR [rbx+r15*1],0x0
  41bab4:	mov    rax,rbx
  41bab7:	pop    rbx
  41bab8:	pop    r14
  41baba:	pop    r15
  41babc:	ret    
  41babd:	nop    DWORD PTR [rax]

000000000041bac0 <__flatcc_fb_chomp@@Base>:
  41bac0:	push   r15
  41bac2:	push   r14
  41bac4:	push   r12
  41bac6:	push   rbx
  41bac7:	push   rax
  41bac8:	mov    r14,rdx
  41bacb:	mov    rbx,rsi
  41bace:	mov    r12,rdi
  41bad1:	test   rdx,rdx
  41bad4:	je     41bb14 <__flatcc_fb_chomp@@Base+0x54>
  41bad6:	mov    rdi,r14
  41bad9:	call   4060d0 <strlen@plt>
  41bade:	mov    r15,rax
  41bae1:	cmp    r15,rbx
  41bae4:	jae    41bb05 <__flatcc_fb_chomp@@Base+0x45>
  41bae6:	add    r12,rbx
  41bae9:	sub    r12,r15
  41baec:	mov    rdi,r12
  41baef:	mov    rsi,r14
  41baf2:	mov    rdx,r15
  41baf5:	call   406060 <strncmp@plt>
  41bafa:	xor    ecx,ecx
  41bafc:	test   eax,eax
  41bafe:	cmove  rcx,r15
  41bb02:	sub    rbx,rcx
  41bb05:	mov    rax,rbx
  41bb08:	add    rsp,0x8
  41bb0c:	pop    rbx
  41bb0d:	pop    r12
  41bb0f:	pop    r14
  41bb11:	pop    r15
  41bb13:	ret    
  41bb14:	xor    r15d,r15d
  41bb17:	cmp    r15,rbx
  41bb1a:	jb     41bae6 <__flatcc_fb_chomp@@Base+0x26>
  41bb1c:	jmp    41bb05 <__flatcc_fb_chomp@@Base+0x45>
  41bb1e:	xchg   ax,ax

000000000041bb20 <__flatcc_fb_create_join_path_n@@Base>:
  41bb20:	push   rbp
  41bb21:	push   r15
  41bb23:	push   r14
  41bb25:	push   r13
  41bb27:	push   r12
  41bb29:	push   rbx
  41bb2a:	sub    rsp,0x28
  41bb2e:	mov    ebp,r9d
  41bb31:	mov    r14,rcx
  41bb34:	mov    r15,rdx
  41bb37:	mov    rbx,rsi
  41bb3a:	mov    r12,rdi
  41bb3d:	test   r8,r8
  41bb40:	mov    QWORD PTR [rsp+0x20],r8
  41bb45:	je     41bb75 <__flatcc_fb_create_join_path_n@@Base+0x55>
  41bb47:	mov    rdi,r8
  41bb4a:	call   4060d0 <strlen@plt>
  41bb4f:	test   r12,r12
  41bb52:	je     41bb7c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bb54:	test   r14,r14
  41bb57:	je     41bb7e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41bb59:	mov    cl,BYTE PTR [r15]
  41bb5c:	cmp    cl,0x2f
  41bb5f:	je     41bb7c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bb61:	cmp    cl,0x5c
  41bb64:	je     41bb7c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bb66:	cmp    r14,0x2
  41bb6a:	jb     41bb7e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41bb6c:	cmp    BYTE PTR [r15+0x1],0x3a
  41bb71:	je     41bb7c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bb73:	jmp    41bb7e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41bb75:	xor    eax,eax
  41bb77:	test   r12,r12
  41bb7a:	jne    41bb54 <__flatcc_fb_create_join_path_n@@Base+0x34>
  41bb7c:	xor    ebx,ebx
  41bb7e:	test   ebp,ebp
  41bb80:	mov    QWORD PTR [rsp+0x18],r15
  41bb85:	je     41bb9b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41bb87:	test   rbx,rbx
  41bb8a:	je     41bb9b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41bb8c:	mov    cl,BYTE PTR [rbx+r12*1-0x1]
  41bb91:	cmp    cl,0x5c
  41bb94:	je     41bb9b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41bb96:	cmp    cl,0x2f
  41bb99:	jne    41bb9d <__flatcc_fb_create_join_path_n@@Base+0x7d>
  41bb9b:	xor    ebp,ebp
  41bb9d:	mov    r15,r12
  41bba0:	movsxd rdi,ebp
  41bba3:	mov    QWORD PTR [rsp+0x8],r14
  41bba8:	add    r14,rbx
  41bbab:	add    r14,0x1
  41bbaf:	mov    QWORD PTR [rsp+0x10],rax
  41bbb4:	lea    r13,[r14+rax*1]
  41bbb8:	add    rdi,r13
  41bbbb:	call   4061b0 <malloc@plt>
  41bbc0:	mov    r12,rax
  41bbc3:	test   rax,rax
  41bbc6:	je     41bc28 <__flatcc_fb_create_join_path_n@@Base+0x108>
  41bbc8:	mov    rdi,r12
  41bbcb:	mov    rsi,r15
  41bbce:	mov    rdx,rbx
  41bbd1:	call   4061a0 <memcpy@plt>
  41bbd6:	test   ebp,ebp
  41bbd8:	je     41bbee <__flatcc_fb_create_join_path_n@@Base+0xce>
  41bbda:	mov    BYTE PTR [r12+rbx*1],0x2f
  41bbdf:	inc    rbx
  41bbe2:	mov    rdx,QWORD PTR [rsp+0x8]
  41bbe7:	mov    rbp,QWORD PTR [rsp+0x10]
  41bbec:	jmp    41bc00 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41bbee:	mov    rdx,QWORD PTR [rsp+0x8]
  41bbf3:	lea    r14,[rbx+rdx*1]
  41bbf7:	mov    rbp,QWORD PTR [rsp+0x10]
  41bbfc:	lea    r13,[r14+rbp*1]
  41bc00:	add    rbx,r12
  41bc03:	mov    rdi,rbx
  41bc06:	mov    rsi,QWORD PTR [rsp+0x18]
  41bc0b:	call   4061a0 <memcpy@plt>
  41bc10:	add    r14,r12
  41bc13:	mov    rdi,r14
  41bc16:	mov    rsi,QWORD PTR [rsp+0x20]
  41bc1b:	mov    rdx,rbp
  41bc1e:	call   4061a0 <memcpy@plt>
  41bc23:	mov    BYTE PTR [r12+r13*1],0x0
  41bc28:	mov    rax,r12
  41bc2b:	add    rsp,0x28
  41bc2f:	pop    rbx
  41bc30:	pop    r12
  41bc32:	pop    r13
  41bc34:	pop    r14
  41bc36:	pop    r15
  41bc38:	pop    rbp
  41bc39:	ret    
  41bc3a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bc40 <__flatcc_fb_create_join_path@@Base>:
  41bc40:	push   rbp
  41bc41:	push   r15
  41bc43:	push   r14
  41bc45:	push   r12
  41bc47:	push   rbx
  41bc48:	mov    r14d,ecx
  41bc4b:	mov    r15,rdx
  41bc4e:	mov    rbp,rsi
  41bc51:	mov    rbx,rdi
  41bc54:	test   rdi,rdi
  41bc57:	je     41bc76 <__flatcc_fb_create_join_path@@Base+0x36>
  41bc59:	mov    rdi,rbx
  41bc5c:	call   4060d0 <strlen@plt>
  41bc61:	mov    r12,rax
  41bc64:	test   rbp,rbp
  41bc67:	je     41bc7e <__flatcc_fb_create_join_path@@Base+0x3e>
  41bc69:	mov    rdi,rbp
  41bc6c:	call   4060d0 <strlen@plt>
  41bc71:	mov    rcx,rax
  41bc74:	jmp    41bc80 <__flatcc_fb_create_join_path@@Base+0x40>
  41bc76:	xor    r12d,r12d
  41bc79:	test   rbp,rbp
  41bc7c:	jne    41bc69 <__flatcc_fb_create_join_path@@Base+0x29>
  41bc7e:	xor    ecx,ecx
  41bc80:	mov    rdi,rbx
  41bc83:	mov    rsi,r12
  41bc86:	mov    rdx,rbp
  41bc89:	mov    r8,r15
  41bc8c:	mov    r9d,r14d
  41bc8f:	pop    rbx
  41bc90:	pop    r12
  41bc92:	pop    r14
  41bc94:	pop    r15
  41bc96:	pop    rbp
  41bc97:	jmp    41bb20 <__flatcc_fb_create_join_path_n@@Base>
  41bc9c:	nop    DWORD PTR [rax+0x0]

000000000041bca0 <__flatcc_fb_create_path_ext_n@@Base>:
  41bca0:	push   rbp
  41bca1:	push   r15
  41bca3:	push   r14
  41bca5:	push   r13
  41bca7:	push   r12
  41bca9:	push   rbx
  41bcaa:	push   rax
  41bcab:	mov    r14,rdx
  41bcae:	mov    r13,rsi
  41bcb1:	mov    r15,rdi
  41bcb4:	test   rdx,rdx
  41bcb7:	je     41bcc6 <__flatcc_fb_create_path_ext_n@@Base+0x26>
  41bcb9:	mov    rdi,r14
  41bcbc:	call   4060d0 <strlen@plt>
  41bcc1:	mov    r12,rax
  41bcc4:	jmp    41bcc9 <__flatcc_fb_create_path_ext_n@@Base+0x29>
  41bcc6:	xor    r12d,r12d
  41bcc9:	lea    rdi,[r12+r13*1]
  41bccd:	add    rdi,0x1
  41bcd1:	call   4061b0 <malloc@plt>
  41bcd6:	mov    rbx,rax
  41bcd9:	test   rax,rax
  41bcdc:	je     41bd05 <__flatcc_fb_create_path_ext_n@@Base+0x65>
  41bcde:	lea    rbp,[r12+r13*1]
  41bce2:	mov    rdi,rbx
  41bce5:	mov    rsi,r15
  41bce8:	mov    rdx,r13
  41bceb:	call   4061a0 <memcpy@plt>
  41bcf0:	mov    rdi,rbx
  41bcf3:	add    rdi,r13
  41bcf6:	mov    rsi,r14
  41bcf9:	mov    rdx,r12
  41bcfc:	call   4061a0 <memcpy@plt>
  41bd01:	mov    BYTE PTR [rbx+rbp*1],0x0
  41bd05:	mov    rax,rbx
  41bd08:	add    rsp,0x8
  41bd0c:	pop    rbx
  41bd0d:	pop    r12
  41bd0f:	pop    r13
  41bd11:	pop    r14
  41bd13:	pop    r15
  41bd15:	pop    rbp
  41bd16:	ret    
  41bd17:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bd20 <__flatcc_fb_create_path_ext@@Base>:
  41bd20:	push   rbp
  41bd21:	push   r15
  41bd23:	push   r14
  41bd25:	push   r13
  41bd27:	push   r12
  41bd29:	push   rbx
  41bd2a:	push   rax
  41bd2b:	mov    r14,rsi
  41bd2e:	mov    r15,rdi
  41bd31:	test   rdi,rdi
  41bd34:	je     41bd53 <__flatcc_fb_create_path_ext@@Base+0x33>
  41bd36:	mov    rdi,r15
  41bd39:	call   4060d0 <strlen@plt>
  41bd3e:	mov    r12,rax
  41bd41:	test   r14,r14
  41bd44:	je     41bd5b <__flatcc_fb_create_path_ext@@Base+0x3b>
  41bd46:	mov    rdi,r14
  41bd49:	call   4060d0 <strlen@plt>
  41bd4e:	mov    r13,rax
  41bd51:	jmp    41bd5e <__flatcc_fb_create_path_ext@@Base+0x3e>
  41bd53:	xor    r12d,r12d
  41bd56:	test   r14,r14
  41bd59:	jne    41bd46 <__flatcc_fb_create_path_ext@@Base+0x26>
  41bd5b:	xor    r13d,r13d
  41bd5e:	lea    rdi,[r12+r13*1]
  41bd62:	add    rdi,0x1
  41bd66:	call   4061b0 <malloc@plt>
  41bd6b:	mov    rbx,rax
  41bd6e:	test   rax,rax
  41bd71:	je     41bd9a <__flatcc_fb_create_path_ext@@Base+0x7a>
  41bd73:	lea    rbp,[r12+r13*1]
  41bd77:	mov    rdi,rbx
  41bd7a:	mov    rsi,r15
  41bd7d:	mov    rdx,r12
  41bd80:	call   4061a0 <memcpy@plt>
  41bd85:	mov    rdi,rbx
  41bd88:	add    rdi,r12
  41bd8b:	mov    rsi,r14
  41bd8e:	mov    rdx,r13
  41bd91:	call   4061a0 <memcpy@plt>
  41bd96:	mov    BYTE PTR [rbx+rbp*1],0x0
  41bd9a:	mov    rax,rbx
  41bd9d:	add    rsp,0x8
  41bda1:	pop    rbx
  41bda2:	pop    r12
  41bda4:	pop    r13
  41bda6:	pop    r14
  41bda8:	pop    r15
  41bdaa:	pop    rbp
  41bdab:	ret    
  41bdac:	nop    DWORD PTR [rax+0x0]

000000000041bdb0 <__flatcc_fb_create_make_path_n@@Base>:
  41bdb0:	push   rbp
  41bdb1:	push   r15
  41bdb3:	push   r14
  41bdb5:	push   r13
  41bdb7:	push   r12
  41bdb9:	push   rbx
  41bdba:	push   rax
  41bdbb:	mov    r14,rsi
  41bdbe:	mov    rbp,rdi
  41bdc1:	test   rsi,rsi
  41bdc4:	je     41be02 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41bdc6:	cmp    r14,0x1
  41bdca:	jne    41be50 <__flatcc_fb_create_make_path_n@@Base+0xa0>
  41bdd0:	mov    bl,BYTE PTR [rbp+0x0]
  41bdd3:	cmp    bl,0x5c
  41bdd6:	je     41bddd <__flatcc_fb_create_make_path_n@@Base+0x2d>
  41bdd8:	cmp    bl,0x20
  41bddb:	jne    41be02 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41bddd:	mov    edi,0x3
  41bde2:	call   4061b0 <malloc@plt>
  41bde7:	test   rax,rax
  41bdea:	je     41bf8e <__flatcc_fb_create_make_path_n@@Base+0x1de>
  41bdf0:	mov    r15,rax
  41bdf3:	mov    BYTE PTR [rax],0x5c
  41bdf6:	mov    BYTE PTR [rax+0x1],bl
  41bdf9:	mov    BYTE PTR [rax+0x2],0x0
  41bdfd:	jmp    41c051 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41be02:	xor    r15d,r15d
  41be05:	mov    rdi,rbp
  41be08:	xor    esi,esi
  41be0a:	mov    rdx,r14
  41be0d:	call   406130 <memchr@plt>
  41be12:	mov    r12,rax
  41be15:	sub    r12,rbp
  41be18:	test   rax,rax
  41be1b:	cmove  r12,r14
  41be1f:	lea    rdi,[r12+0x1]
  41be24:	call   4061b0 <malloc@plt>
  41be29:	test   rax,rax
  41be2c:	je     41c051 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41be32:	mov    r14,rax
  41be35:	mov    rdi,rax
  41be38:	mov    rsi,rbp
  41be3b:	mov    rdx,r12
  41be3e:	call   4061a0 <memcpy@plt>
  41be43:	mov    BYTE PTR [r14+r12*1],0x0
  41be48:	mov    r15,r14
  41be4b:	jmp    41c051 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41be50:	lea    r12,[r14-0x1]
  41be54:	mov    r13b,BYTE PTR [rbp+0x0]
  41be58:	lea    rax,[r14-0x2]
  41be5c:	mov    r8d,r12d
  41be5f:	and    r8d,0x3
  41be63:	cmp    rax,0x3
  41be67:	jae    41be76 <__flatcc_fb_create_make_path_n@@Base+0xc6>
  41be69:	xor    ecx,ecx
  41be6b:	mov    eax,r13d
  41be6e:	mov    rsi,r14
  41be71:	jmp    41bf1c <__flatcc_fb_create_make_path_n@@Base+0x16c>
  41be76:	mov    rdi,r12
  41be79:	sub    rdi,r8
  41be7c:	xor    ecx,ecx
  41be7e:	mov    eax,r13d
  41be81:	mov    rsi,r14
  41be84:	jmp    41bea1 <__flatcc_fb_create_make_path_n@@Base+0xf1>
  41be86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be90:	xor    esi,esi
  41be92:	cmp    dl,0x20
  41be95:	sete   sil
  41be99:	add    rsi,rbx
  41be9c:	cmp    rdi,rcx
  41be9f:	je     41bf1c <__flatcc_fb_create_make_path_n@@Base+0x16c>
  41bea1:	movzx  edx,BYTE PTR [rbp+rcx*1+0x1]
  41bea6:	cmp    al,0x5c
  41bea8:	jne    41beb5 <__flatcc_fb_create_make_path_n@@Base+0x105>
  41beaa:	xor    ebx,ebx
  41beac:	cmp    dl,0x20
  41beaf:	sete   bl
  41beb2:	add    rsi,rbx
  41beb5:	xor    ebx,ebx
  41beb7:	cmp    al,0x20
  41beb9:	sete   bl
  41bebc:	add    rbx,rsi
  41bebf:	movzx  eax,BYTE PTR [rbp+rcx*1+0x2]
  41bec4:	cmp    dl,0x5c
  41bec7:	jne    41bed4 <__flatcc_fb_create_make_path_n@@Base+0x124>
  41bec9:	xor    esi,esi
  41becb:	cmp    al,0x20
  41becd:	sete   sil
  41bed1:	add    rbx,rsi
  41bed4:	xor    esi,esi
  41bed6:	cmp    dl,0x20
  41bed9:	sete   sil
  41bedd:	add    rsi,rbx
  41bee0:	movzx  edx,BYTE PTR [rbp+rcx*1+0x3]
  41bee5:	cmp    al,0x5c
  41bee7:	jne    41bef4 <__flatcc_fb_create_make_path_n@@Base+0x144>
  41bee9:	xor    ebx,ebx
  41beeb:	cmp    dl,0x20
  41beee:	sete   bl
  41bef1:	add    rsi,rbx
  41bef4:	xor    ebx,ebx
  41bef6:	cmp    al,0x20
  41bef8:	sete   bl
  41befb:	add    rbx,rsi
  41befe:	movzx  eax,BYTE PTR [rbp+rcx*1+0x4]
  41bf03:	add    rcx,0x4
  41bf07:	cmp    dl,0x5c
  41bf0a:	jne    41be90 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41bf0c:	xor    esi,esi
  41bf0e:	cmp    al,0x20
  41bf10:	sete   sil
  41bf14:	add    rbx,rsi
  41bf17:	jmp    41be90 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41bf1c:	mov    ebx,eax
  41bf1e:	test   r8,r8
  41bf21:	je     41bf5b <__flatcc_fb_create_make_path_n@@Base+0x1ab>
  41bf23:	add    rcx,rbp
  41bf26:	add    rcx,0x1
  41bf2a:	xor    edx,edx
  41bf2c:	jmp    41bf45 <__flatcc_fb_create_make_path_n@@Base+0x195>
  41bf2e:	xchg   ax,ax
  41bf30:	xor    edi,edi
  41bf32:	cmp    al,0x20
  41bf34:	sete   dil
  41bf38:	add    rsi,rdi
  41bf3b:	inc    rdx
  41bf3e:	mov    eax,ebx
  41bf40:	cmp    r8,rdx
  41bf43:	je     41bf5b <__flatcc_fb_create_make_path_n@@Base+0x1ab>
  41bf45:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  41bf49:	cmp    al,0x5c
  41bf4b:	jne    41bf30 <__flatcc_fb_create_make_path_n@@Base+0x180>
  41bf4d:	xor    edi,edi
  41bf4f:	cmp    bl,0x20
  41bf52:	sete   dil
  41bf56:	add    rsi,rdi
  41bf59:	jmp    41bf30 <__flatcc_fb_create_make_path_n@@Base+0x180>
  41bf5b:	xor    eax,eax
  41bf5d:	cmp    bl,0x20
  41bf60:	sete   al
  41bf63:	lea    rdi,[rsi+rax*1]
  41bf67:	add    rdi,0x1
  41bf6b:	call   4061b0 <malloc@plt>
  41bf70:	test   rax,rax
  41bf73:	je     41bf8e <__flatcc_fb_create_make_path_n@@Base+0x1de>
  41bf75:	mov    r15,rax
  41bf78:	and    r12d,0x1
  41bf7c:	cmp    r14,0x2
  41bf80:	jne    41bf96 <__flatcc_fb_create_make_path_n@@Base+0x1e6>
  41bf82:	mov    ecx,0x1
  41bf87:	xor    eax,eax
  41bf89:	jmp    41c00d <__flatcc_fb_create_make_path_n@@Base+0x25d>
  41bf8e:	xor    r15d,r15d
  41bf91:	jmp    41c051 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41bf96:	sub    r14,r12
  41bf99:	mov    ecx,0x1
  41bf9e:	xor    eax,eax
  41bfa0:	cmp    r13b,0x20
  41bfa4:	jne    41bfd9 <__flatcc_fb_create_make_path_n@@Base+0x229>
  41bfa6:	jmp    41bfe6 <__flatcc_fb_create_make_path_n@@Base+0x236>
  41bfa8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfb0:	mov    BYTE PTR [r15+rax*1+0x1],0x5c
  41bfb6:	add    rax,0x2
  41bfba:	mov    rdx,rax
  41bfbd:	mov    BYTE PTR [r15+rdx*1],bl
  41bfc1:	lea    rax,[rdx+0x1]
  41bfc5:	mov    r13b,BYTE PTR [rbp+rcx*1+0x1]
  41bfca:	add    rcx,0x2
  41bfce:	cmp    r14,rcx
  41bfd1:	je     41c00d <__flatcc_fb_create_make_path_n@@Base+0x25d>
  41bfd3:	cmp    r13b,0x20
  41bfd7:	je     41bfe6 <__flatcc_fb_create_make_path_n@@Base+0x236>
  41bfd9:	cmp    r13b,0x5c
  41bfdd:	jne    41bfee <__flatcc_fb_create_make_path_n@@Base+0x23e>
  41bfdf:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x20
  41bfe4:	jne    41bfee <__flatcc_fb_create_make_path_n@@Base+0x23e>
  41bfe6:	mov    BYTE PTR [r15+rax*1],0x5c
  41bfeb:	inc    rax
  41bfee:	mov    BYTE PTR [r15+rax*1],r13b
  41bff2:	mov    bl,BYTE PTR [rbp+rcx*1+0x0]
  41bff6:	cmp    bl,0x20
  41bff9:	je     41bfb0 <__flatcc_fb_create_make_path_n@@Base+0x200>
  41bffb:	lea    rdx,[rax+0x1]
  41bfff:	cmp    bl,0x5c
  41c002:	jne    41bfbd <__flatcc_fb_create_make_path_n@@Base+0x20d>
  41c004:	cmp    BYTE PTR [rbp+rcx*1+0x1],0x20
  41c009:	je     41bfb0 <__flatcc_fb_create_make_path_n@@Base+0x200>
  41c00b:	jmp    41bfbd <__flatcc_fb_create_make_path_n@@Base+0x20d>
  41c00d:	test   r12,r12
  41c010:	je     41c035 <__flatcc_fb_create_make_path_n@@Base+0x285>
  41c012:	cmp    r13b,0x5c
  41c016:	je     41c063 <__flatcc_fb_create_make_path_n@@Base+0x2b3>
  41c018:	cmp    r13b,0x20
  41c01c:	jne    41c026 <__flatcc_fb_create_make_path_n@@Base+0x276>
  41c01e:	mov    BYTE PTR [r15+rax*1],0x5c
  41c023:	inc    rax
  41c026:	mov    BYTE PTR [r15+rax*1],r13b
  41c02a:	mov    r13b,BYTE PTR [rbp+rcx*1+0x0]
  41c02f:	mov    rdx,rax
  41c032:	inc    rax
  41c035:	cmp    r13b,0x20
  41c039:	jne    41c047 <__flatcc_fb_create_make_path_n@@Base+0x297>
  41c03b:	add    rdx,0x2
  41c03f:	mov    BYTE PTR [r15+rax*1],0x5c
  41c044:	mov    rax,rdx
  41c047:	mov    BYTE PTR [r15+rax*1],r13b
  41c04b:	mov    BYTE PTR [r15+rax*1+0x1],0x0
  41c051:	mov    rax,r15
  41c054:	add    rsp,0x8
  41c058:	pop    rbx
  41c059:	pop    r12
  41c05b:	pop    r13
  41c05d:	pop    r14
  41c05f:	pop    r15
  41c061:	pop    rbp
  41c062:	ret    
  41c063:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x20
  41c068:	je     41c01e <__flatcc_fb_create_make_path_n@@Base+0x26e>
  41c06a:	jmp    41c026 <__flatcc_fb_create_make_path_n@@Base+0x276>
  41c06c:	nop    DWORD PTR [rax+0x0]

000000000041c070 <__flatcc_fb_create_make_path@@Base>:
  41c070:	push   rbx
  41c071:	mov    rbx,rdi
  41c074:	call   4060d0 <strlen@plt>
  41c079:	mov    rdi,rbx
  41c07c:	mov    rsi,rax
  41c07f:	pop    rbx
  41c080:	jmp    41bdb0 <__flatcc_fb_create_make_path_n@@Base>
  41c085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c08f:	nop

000000000041c090 <__flatcc_fb_find_basename@@Base>:
  41c090:	test   rsi,rsi
  41c093:	je     41c0b1 <__flatcc_fb_find_basename@@Base+0x21>
  41c095:	movzx  eax,BYTE PTR [rdi+rsi*1-0x1]
  41c09a:	dec    rsi
  41c09d:	cmp    al,0x5c
  41c09f:	je     41c0a5 <__flatcc_fb_find_basename@@Base+0x15>
  41c0a1:	cmp    al,0x2f
  41c0a3:	jne    41c090 <__flatcc_fb_find_basename@@Base>
  41c0a5:	lea    rax,[rdi+rsi*1]
  41c0a9:	add    rax,0x1
  41c0ad:	sub    rax,rdi
  41c0b0:	ret    
  41c0b1:	mov    rax,rdi
  41c0b4:	sub    rax,rdi
  41c0b7:	ret    
  41c0b8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c0c0 <__flatcc_fb_create_basename@@Base>:
  41c0c0:	push   r15
  41c0c2:	push   r14
  41c0c4:	push   r12
  41c0c6:	push   rbx
  41c0c7:	push   rax
  41c0c8:	mov    r15,rdx
  41c0cb:	mov    rbx,rdi
  41c0ce:	mov    rax,rsi
  41c0d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0db:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0e0:	test   rax,rax
  41c0e3:	je     41c101 <__flatcc_fb_create_basename@@Base+0x41>
  41c0e5:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  41c0ea:	dec    rax
  41c0ed:	cmp    cl,0x5c
  41c0f0:	je     41c0f7 <__flatcc_fb_create_basename@@Base+0x37>
  41c0f2:	cmp    cl,0x2f
  41c0f5:	jne    41c0e0 <__flatcc_fb_create_basename@@Base+0x20>
  41c0f7:	lea    r14,[rbx+rax*1]
  41c0fb:	add    r14,0x1
  41c0ff:	jmp    41c104 <__flatcc_fb_create_basename@@Base+0x44>
  41c101:	mov    r14,rbx
  41c104:	sub    rbx,r14
  41c107:	add    rbx,rsi
  41c10a:	test   r15,r15
  41c10d:	je     41c16f <__flatcc_fb_create_basename@@Base+0xaf>
  41c10f:	mov    rdi,r15
  41c112:	call   4060d0 <strlen@plt>
  41c117:	mov    r12,rax
  41c11a:	cmp    r12,rbx
  41c11d:	jae    41c13c <__flatcc_fb_create_basename@@Base+0x7c>
  41c11f:	lea    rdi,[r14+rbx*1]
  41c123:	sub    rdi,r12
  41c126:	mov    rsi,r15
  41c129:	mov    rdx,r12
  41c12c:	call   406060 <strncmp@plt>
  41c131:	xor    ecx,ecx
  41c133:	test   eax,eax
  41c135:	cmove  rcx,r12
  41c139:	sub    rbx,rcx
  41c13c:	lea    rdi,[rbx+0x1]
  41c140:	call   4061b0 <malloc@plt>
  41c145:	mov    r15,rax
  41c148:	test   rax,rax
  41c14b:	je     41c160 <__flatcc_fb_create_basename@@Base+0xa0>
  41c14d:	mov    rdi,r15
  41c150:	mov    rsi,r14
  41c153:	mov    rdx,rbx
  41c156:	call   4061a0 <memcpy@plt>
  41c15b:	mov    BYTE PTR [r15+rbx*1],0x0
  41c160:	mov    rax,r15
  41c163:	add    rsp,0x8
  41c167:	pop    rbx
  41c168:	pop    r12
  41c16a:	pop    r14
  41c16c:	pop    r15
  41c16e:	ret    
  41c16f:	xor    r12d,r12d
  41c172:	cmp    r12,rbx
  41c175:	jb     41c11f <__flatcc_fb_create_basename@@Base+0x5f>
  41c177:	jmp    41c13c <__flatcc_fb_create_basename@@Base+0x7c>
  41c179:	nop    DWORD PTR [rax+0x0]

000000000041c180 <__flatcc_fb_read_file@@Base>:
  41c180:	push   r15
  41c182:	push   r14
  41c184:	push   r13
  41c186:	push   r12
  41c188:	push   rbx
  41c189:	sub    rsp,0x10
  41c18d:	mov    rbx,rsi
  41c190:	test   rdx,rdx
  41c193:	lea    r12,[rsp+0x8]
  41c198:	cmovne r12,rdx
  41c19c:	lea    rsi,[rip+0x2ad8d]        # 446f30 <fb_schema_table_deleted@@Base+0x8>
  41c1a3:	call   4061f0 <fopen@plt>
  41c1a8:	test   rax,rax
  41c1ab:	je     41c244 <__flatcc_fb_read_file@@Base+0xc4>
  41c1b1:	mov    r15,rax
  41c1b4:	mov    rdi,rax
  41c1b7:	xor    esi,esi
  41c1b9:	mov    edx,0x2
  41c1be:	call   4061d0 <fseek@plt>
  41c1c3:	mov    rdi,r15
  41c1c6:	call   406190 <ftell@plt>
  41c1cb:	mov    r14,rax
  41c1ce:	mov    QWORD PTR [r12],rax
  41c1d2:	test   rbx,rbx
  41c1d5:	je     41c1dc <__flatcc_fb_read_file@@Base+0x5c>
  41c1d7:	cmp    r14,rbx
  41c1da:	ja     41c23a <__flatcc_fb_read_file@@Base+0xba>
  41c1dc:	mov    rdi,r15
  41c1df:	call   4060f0 <rewind@plt>
  41c1e4:	test   r14,r14
  41c1e7:	mov    edi,0x1
  41c1ec:	cmovne rdi,r14
  41c1f0:	call   4061b0 <malloc@plt>
  41c1f5:	test   rax,rax
  41c1f8:	je     41c23a <__flatcc_fb_read_file@@Base+0xba>
  41c1fa:	mov    r13,rax
  41c1fd:	xor    ecx,ecx
  41c1ff:	nop
  41c200:	mov    rbx,rcx
  41c203:	lea    rdi,[rcx+r13*1]
  41c207:	mov    rdx,r14
  41c20a:	sub    rdx,rcx
  41c20d:	mov    esi,0x1
  41c212:	mov    rcx,r15
  41c215:	call   4060b0 <fread_unlocked@plt>
  41c21a:	lea    rcx,[rax+rbx*1]
  41c21e:	test   rax,rax
  41c221:	jne    41c200 <__flatcc_fb_read_file@@Base+0x80>
  41c223:	mov    rdi,r15
  41c226:	call   4060c0 <fclose@plt>
  41c22b:	cmp    r14,rbx
  41c22e:	je     41c24a <__flatcc_fb_read_file@@Base+0xca>
  41c230:	mov    rdi,r13
  41c233:	call   406040 <free@plt>
  41c238:	jmp    41c247 <__flatcc_fb_read_file@@Base+0xc7>
  41c23a:	mov    rdi,r15
  41c23d:	call   4060c0 <fclose@plt>
  41c242:	jmp    41c247 <__flatcc_fb_read_file@@Base+0xc7>
  41c244:	xor    r14d,r14d
  41c247:	xor    r13d,r13d
  41c24a:	mov    QWORD PTR [r12],r14
  41c24e:	mov    rax,r13
  41c251:	add    rsp,0x10
  41c255:	pop    rbx
  41c256:	pop    r12
  41c258:	pop    r13
  41c25a:	pop    r14
  41c25c:	pop    r15
  41c25e:	ret    
  41c25f:	nop

000000000041c260 <__flatcc_fb_default_error_out@@Base>:
  41c260:	mov    rdi,rsi
  41c263:	movsxd rdx,edx
  41c266:	mov    rax,QWORD PTR [rip+0x35d8b]        # 451ff8 <stderr@GLIBC_2.2.5>
  41c26d:	mov    rcx,QWORD PTR [rax]
  41c270:	mov    esi,0x1
  41c275:	jmp    406230 <fwrite@plt>
  41c27a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c280 <__flatcc_fb_print_error@@Base>:
  41c280:	push   rbp
  41c281:	push   rbx
  41c282:	sub    rsp,0x198
  41c289:	mov    rbp,rdx
  41c28c:	mov    rdx,rsi
  41c28f:	mov    rbx,rdi
  41c292:	test   al,al
  41c294:	je     41c2d5 <__flatcc_fb_print_error@@Base+0x55>
  41c296:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41c29c:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  41c2a2:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41c2a8:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  41c2b1:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  41c2ba:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  41c2c3:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  41c2cc:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41c2d5:	mov    QWORD PTR [rsp+0x30],rbp
  41c2da:	mov    QWORD PTR [rsp+0x38],rcx
  41c2df:	mov    QWORD PTR [rsp+0x40],r8
  41c2e4:	mov    QWORD PTR [rsp+0x48],r9
  41c2e9:	movabs rax,0x3000000010
  41c2f3:	mov    QWORD PTR [rsp],rax
  41c2f7:	lea    rax,[rsp+0x1b0]
  41c2ff:	mov    QWORD PTR [rsp+0x8],rax
  41c304:	lea    rax,[rsp+0x20]
  41c309:	mov    QWORD PTR [rsp+0x10],rax
  41c30e:	lea    rdi,[rsp+0xd0]
  41c316:	mov    rcx,rsp
  41c319:	mov    esi,0xc8
  41c31e:	call   4060a0 <vsnprintf@plt>
  41c323:	mov    ebp,eax
  41c325:	cmp    eax,0xc8
  41c32a:	jl     41c344 <__flatcc_fb_print_error@@Base+0xc4>
  41c32c:	mov    BYTE PTR [rsp+0x197],0x0
  41c334:	mov    DWORD PTR [rsp+0x193],0xa2e2e2e
  41c33f:	mov    ebp,0xc7
  41c344:	mov    rdi,QWORD PTR [rbx+0x18]
  41c348:	lea    rsi,[rsp+0xd0]
  41c350:	mov    edx,ebp
  41c352:	call   QWORD PTR [rbx+0x10]
  41c355:	mov    eax,ebp
  41c357:	add    rsp,0x198
  41c35e:	pop    rbx
  41c35f:	pop    rbp
  41c360:	ret    
  41c361:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c36b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c370 <__flatcc_error_find_file_of_token@@Base>:
  41c370:	lea    rax,[rip+0x139cc]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41c377:	test   rdi,rdi
  41c37a:	jne    41c388 <__flatcc_error_find_file_of_token@@Base+0x18>
  41c37c:	ret    
  41c37d:	nop    DWORD PTR [rax]
  41c380:	mov    rdi,QWORD PTR [rdi]
  41c383:	test   rdi,rdi
  41c386:	je     41c37c <__flatcc_error_find_file_of_token@@Base+0xc>
  41c388:	cmp    QWORD PTR [rdi+0x28],rsi
  41c38c:	ja     41c380 <__flatcc_error_find_file_of_token@@Base+0x10>
  41c38e:	cmp    QWORD PTR [rdi+0x30],rsi
  41c392:	jbe    41c380 <__flatcc_error_find_file_of_token@@Base+0x10>
  41c394:	mov    rax,QWORD PTR [rdi+0x318]
  41c39b:	ret    
  41c39c:	nop    DWORD PTR [rax+0x0]

000000000041c3a0 <__flatcc_error_report@@Base>:
  41c3a0:	push   r14
  41c3a2:	push   rbx
  41c3a3:	push   rax
  41c3a4:	mov    eax,r9d
  41c3a7:	mov    r11,r8
  41c3aa:	mov    rbx,rcx
  41c3ad:	mov    r10,rdx
  41c3b0:	mov    r14,rdi
  41c3b3:	test   rsi,rsi
  41c3b6:	je     41c3c3 <__flatcc_error_report@@Base+0x23>
  41c3b8:	test   r11,r11
  41c3bb:	jne    41c3c3 <__flatcc_error_report@@Base+0x23>
  41c3bd:	mov    r11,QWORD PTR [rsi]
  41c3c0:	mov    eax,DWORD PTR [rsi+0x8]
  41c3c3:	test   r10,r10
  41c3c6:	lea    rdx,[rip+0x13976]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41c3cd:	cmove  r10,rdx
  41c3d1:	xor    r9d,r9d
  41c3d4:	test   r11,r11
  41c3d7:	cmove  r11,rdx
  41c3db:	cmovne r9d,eax
  41c3df:	test   rsi,rsi
  41c3e2:	je     41c444 <__flatcc_error_report@@Base+0xa4>
  41c3e4:	test   rbx,rbx
  41c3e7:	jne    41c444 <__flatcc_error_report@@Base+0xa4>
  41c3e9:	test   r14,r14
  41c3ec:	je     41c41b <__flatcc_error_report@@Base+0x7b>
  41c3ee:	mov    rax,r14
  41c3f1:	cmp    QWORD PTR [rax+0x28],rsi
  41c3f5:	jbe    41c40e <__flatcc_error_report@@Base+0x6e>
  41c3f7:	nop    WORD PTR [rax+rax*1+0x0]
  41c400:	mov    rax,QWORD PTR [rax]
  41c403:	test   rax,rax
  41c406:	je     41c41b <__flatcc_error_report@@Base+0x7b>
  41c408:	cmp    QWORD PTR [rax+0x28],rsi
  41c40c:	ja     41c400 <__flatcc_error_report@@Base+0x60>
  41c40e:	cmp    QWORD PTR [rax+0x30],rsi
  41c412:	jbe    41c400 <__flatcc_error_report@@Base+0x60>
  41c414:	mov    rdx,QWORD PTR [rax+0x318]
  41c41b:	mov    rcx,QWORD PTR [rsi+0x10]
  41c41f:	mov    r8,QWORD PTR [rsi+0x18]
  41c423:	lea    rsi,[rip+0x2afa6]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41c42a:	mov    rdi,r14
  41c42d:	mov    eax,0x0
  41c432:	push   r10
  41c434:	push   r11
  41c436:	call   41c280 <__flatcc_fb_print_error@@Base>
  41c43b:	add    rsp,0x10
  41c43f:	jmp    41c5a0 <__flatcc_error_report@@Base+0x200>
  41c444:	test   rsi,rsi
  41c447:	je     41c494 <__flatcc_error_report@@Base+0xf4>
  41c449:	test   rbx,rbx
  41c44c:	je     41c494 <__flatcc_error_report@@Base+0xf4>
  41c44e:	test   r14,r14
  41c451:	je     41c54d <__flatcc_error_report@@Base+0x1ad>
  41c457:	lea    rax,[rip+0x138e5]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41c45e:	mov    rcx,r14
  41c461:	cmp    QWORD PTR [rcx+0x28],rsi
  41c465:	jbe    41c482 <__flatcc_error_report@@Base+0xe2>
  41c467:	nop    WORD PTR [rax+rax*1+0x0]
  41c470:	mov    rcx,QWORD PTR [rcx]
  41c473:	test   rcx,rcx
  41c476:	je     41c524 <__flatcc_error_report@@Base+0x184>
  41c47c:	cmp    QWORD PTR [rcx+0x28],rsi
  41c480:	ja     41c470 <__flatcc_error_report@@Base+0xd0>
  41c482:	cmp    QWORD PTR [rcx+0x30],rsi
  41c486:	jbe    41c470 <__flatcc_error_report@@Base+0xd0>
  41c488:	mov    rdx,QWORD PTR [rcx+0x318]
  41c48f:	jmp    41c527 <__flatcc_error_report@@Base+0x187>
  41c494:	or     rsi,rbx
  41c497:	je     41c50b <__flatcc_error_report@@Base+0x16b>
  41c499:	test   rbx,rbx
  41c49c:	je     41c5af <__flatcc_error_report@@Base+0x20f>
  41c4a2:	lea    rcx,[rip+0x1389a]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41c4a9:	test   r14,r14
  41c4ac:	je     41c4db <__flatcc_error_report@@Base+0x13b>
  41c4ae:	mov    rax,r14
  41c4b1:	cmp    QWORD PTR [rax+0x28],rbx
  41c4b5:	jbe    41c4ce <__flatcc_error_report@@Base+0x12e>
  41c4b7:	nop    WORD PTR [rax+rax*1+0x0]
  41c4c0:	mov    rax,QWORD PTR [rax]
  41c4c3:	test   rax,rax
  41c4c6:	je     41c4db <__flatcc_error_report@@Base+0x13b>
  41c4c8:	cmp    QWORD PTR [rax+0x28],rbx
  41c4cc:	ja     41c4c0 <__flatcc_error_report@@Base+0x120>
  41c4ce:	cmp    QWORD PTR [rax+0x30],rbx
  41c4d2:	jbe    41c4c0 <__flatcc_error_report@@Base+0x120>
  41c4d4:	mov    rcx,QWORD PTR [rax+0x318]
  41c4db:	mov    r8,QWORD PTR [rbx+0x10]
  41c4df:	mov    r9,QWORD PTR [rbx+0x18]
  41c4e3:	mov    r11d,DWORD PTR [rbx+0x8]
  41c4e7:	lea    rsi,[rip+0x2af3f]        # 44742d <fb_schema_table_deleted@@Base+0x505>
  41c4ee:	mov    rdi,r14
  41c4f1:	mov    rdx,r10
  41c4f4:	mov    eax,0x0
  41c4f9:	push   QWORD PTR [rbx]
  41c4fb:	push   r11
  41c4fd:	call   41c280 <__flatcc_fb_print_error@@Base>
  41c502:	add    rsp,0x10
  41c506:	jmp    41c5a0 <__flatcc_error_report@@Base+0x200>
  41c50b:	lea    rsi,[rip+0x2af10]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41c512:	mov    rdi,r14
  41c515:	mov    rdx,r10
  41c518:	xor    eax,eax
  41c51a:	call   41c280 <__flatcc_fb_print_error@@Base>
  41c51f:	jmp    41c5a0 <__flatcc_error_report@@Base+0x200>
  41c524:	mov    rdx,rax
  41c527:	mov    rcx,r14
  41c52a:	cmp    QWORD PTR [rcx+0x28],rbx
  41c52e:	jbe    41c53e <__flatcc_error_report@@Base+0x19e>
  41c530:	mov    rcx,QWORD PTR [rcx]
  41c533:	test   rcx,rcx
  41c536:	je     41c557 <__flatcc_error_report@@Base+0x1b7>
  41c538:	cmp    QWORD PTR [rcx+0x28],rbx
  41c53c:	ja     41c530 <__flatcc_error_report@@Base+0x190>
  41c53e:	cmp    QWORD PTR [rcx+0x30],rbx
  41c542:	jbe    41c530 <__flatcc_error_report@@Base+0x190>
  41c544:	mov    rax,QWORD PTR [rcx+0x318]
  41c54b:	jmp    41c557 <__flatcc_error_report@@Base+0x1b7>
  41c54d:	lea    rdx,[rip+0x137ef]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41c554:	mov    rax,rdx
  41c557:	mov    rcx,QWORD PTR [rsi+0x10]
  41c55b:	mov    r8,QWORD PTR [rsi+0x18]
  41c55f:	vmovups xmm0,XMMWORD PTR [rbx+0x10]
  41c564:	mov    esi,DWORD PTR [rbx+0x8]
  41c567:	mov    rdi,QWORD PTR [rbx]
  41c56a:	sub    rsp,0x40
  41c56e:	mov    QWORD PTR [rsp+0x30],rdi
  41c573:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  41c579:	mov    DWORD PTR [rsp+0x28],esi
  41c57d:	mov    QWORD PTR [rsp+0x10],rax
  41c582:	mov    QWORD PTR [rsp+0x8],r10
  41c587:	mov    QWORD PTR [rsp],r11
  41c58b:	lea    rsi,[rip+0x2ae5d]        # 4473ef <fb_schema_table_deleted@@Base+0x4c7>
  41c592:	mov    rdi,r14
  41c595:	xor    eax,eax
  41c597:	call   41c280 <__flatcc_fb_print_error@@Base>
  41c59c:	add    rsp,0x40
  41c5a0:	inc    DWORD PTR [r14+0xd0]
  41c5a7:	add    rsp,0x8
  41c5ab:	pop    rbx
  41c5ac:	pop    r14
  41c5ae:	ret    
  41c5af:	lea    rsi,[rip+0x2ae96]        # 44744c <fb_schema_table_deleted@@Base+0x524>
  41c5b6:	mov    rdi,r14
  41c5b9:	xor    eax,eax
  41c5bb:	call   41c280 <__flatcc_fb_print_error@@Base>
  41c5c0:	jmp    41c5a0 <__flatcc_error_report@@Base+0x200>
  41c5c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c5cc:	nop    DWORD PTR [rax+0x0]

000000000041c5d0 <error_ref_sym@@Base>:
  41c5d0:	push   rbp
  41c5d1:	push   r15
  41c5d3:	push   r14
  41c5d5:	push   r13
  41c5d7:	push   r12
  41c5d9:	push   rbx
  41c5da:	sub    rsp,0x48
  41c5de:	mov    r12,rcx
  41c5e1:	mov    r14,rsi
  41c5e4:	test   rsi,rsi
  41c5e7:	je     41c656 <error_ref_sym@@Base+0x86>
  41c5e9:	mov    QWORD PTR [rsp],rdi
  41c5ed:	mov    QWORD PTR [rsp+0x8],rdx
  41c5f2:	mov    ebp,0x32
  41c5f7:	xor    eax,eax
  41c5f9:	mov    r13,r14
  41c5fc:	nop    DWORD PTR [rax+0x0]
  41c600:	mov    r15d,ebp
  41c603:	mov    rcx,QWORD PTR [r13+0x8]
  41c607:	mov    edx,DWORD PTR [rcx+0x8]
  41c60a:	cmp    ebp,edx
  41c60c:	cmovle edx,ebp
  41c60f:	movsxd rbx,eax
  41c612:	lea    rdi,[rsp+rbx*1+0x10]
  41c617:	mov    rsi,QWORD PTR [rcx]
  41c61a:	movsxd rbp,edx
  41c61d:	mov    rdx,rbp
  41c620:	call   4061a0 <memcpy@plt>
  41c625:	add    ebx,ebp
  41c627:	movsxd rax,ebx
  41c62a:	mov    BYTE PTR [rsp+rax*1+0x10],0x2e
  41c62f:	not    ebp
  41c631:	add    ebp,r15d
  41c634:	inc    rax
  41c637:	mov    r13,QWORD PTR [r13+0x0]
  41c63b:	test   r13,r13
  41c63e:	je     41c644 <error_ref_sym@@Base+0x74>
  41c640:	test   ebp,ebp
  41c642:	jg     41c600 <error_ref_sym@@Base+0x30>
  41c644:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41c649:	test   ebp,ebp
  41c64b:	jle    41c65f <error_ref_sym@@Base+0x8f>
  41c64d:	not    ebx
  41c64f:	sar    ebx,0x1f
  41c652:	add    ebx,eax
  41c654:	jmp    41c66c <error_ref_sym@@Base+0x9c>
  41c656:	mov    BYTE PTR [rsp+0x10],0x0
  41c65b:	xor    ebx,ebx
  41c65d:	jmp    41c675 <error_ref_sym@@Base+0xa5>
  41c65f:	mov    DWORD PTR [rsp+0x3f],0x2e2e2e
  41c667:	mov    ebx,0x32
  41c66c:	mov    rdx,QWORD PTR [rsp+0x8]
  41c671:	mov    rdi,QWORD PTR [rsp]
  41c675:	mov    rsi,QWORD PTR [r14+0x8]
  41c679:	test   r12,r12
  41c67c:	je     41c685 <error_ref_sym@@Base+0xb5>
  41c67e:	mov    rcx,QWORD PTR [r12+0x8]
  41c683:	jmp    41c687 <error_ref_sym@@Base+0xb7>
  41c685:	xor    ecx,ecx
  41c687:	lea    r8,[rsp+0x10]
  41c68c:	mov    r9d,ebx
  41c68f:	call   41c3a0 <__flatcc_error_report@@Base>
  41c694:	add    rsp,0x48
  41c698:	pop    rbx
  41c699:	pop    r12
  41c69b:	pop    r13
  41c69d:	pop    r14
  41c69f:	pop    r15
  41c6a1:	pop    rbp
  41c6a2:	ret    
  41c6a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c6ad:	nop    DWORD PTR [rax]

000000000041c6b0 <__flatcc_fb_init_parser@@Base>:
  41c6b0:	push   rbp
  41c6b1:	push   r15
  41c6b3:	push   r14
  41c6b5:	push   r13
  41c6b7:	push   r12
  41c6b9:	push   rbx
  41c6ba:	sub    rsp,0x18
  41c6be:	mov    r15,r9
  41c6c1:	mov    rbx,r8
  41c6c4:	mov    rbp,rcx
  41c6c7:	mov    r12,rdx
  41c6ca:	mov    r14,rsi
  41c6cd:	mov    r13,rdi
  41c6d0:	mov    edx,0x358
  41c6d5:	xor    esi,esi
  41c6d7:	call   406110 <memset@plt>
  41c6dc:	test   rbp,rbp
  41c6df:	je     41c6eb <__flatcc_fb_init_parser@@Base+0x3b>
  41c6e1:	mov    QWORD PTR [r13+0x10],rbp
  41c6e5:	mov    QWORD PTR [r13+0x18],rbx
  41c6e9:	jmp    41c6f6 <__flatcc_fb_init_parser@@Base+0x46>
  41c6eb:	lea    rax,[rip+0xfffffffffffffb6e]        # 41c260 <__flatcc_fb_default_error_out@@Base>
  41c6f2:	mov    QWORD PTR [r13+0x10],rax
  41c6f6:	lea    rdi,[r13+0xe8]
  41c6fd:	test   r14,r14
  41c700:	je     41c711 <__flatcc_fb_init_parser@@Base+0x61>
  41c702:	mov    edx,0x110
  41c707:	mov    rsi,r14
  41c70a:	call   4061a0 <memcpy@plt>
  41c70f:	jmp    41c716 <__flatcc_fb_init_parser@@Base+0x66>
  41c711:	call   407140 <flatcc_init_options@@Base>
  41c716:	lea    rax,[r13+0x268]
  41c71d:	test   r15,r15
  41c720:	cmovne rax,r15
  41c724:	mov    QWORD PTR [r13+0x260],rax
  41c72b:	mov    eax,DWORD PTR [r13+0x12c]
  41c732:	lea    rdx,[rip+0x2ad35]        # 44746e <fb_schema_table_deleted@@Base+0x546>
  41c739:	cmp    eax,0x8
  41c73c:	ja     41c93e <__flatcc_fb_init_parser@@Base+0x28e>
  41c742:	mov    ecx,0x114
  41c747:	bt     ecx,eax
  41c74a:	jae    41c93e <__flatcc_fb_init_parser@@Base+0x28e>
  41c750:	mov    eax,DWORD PTR [r13+0x130]
  41c757:	lea    rdx,[rip+0x2ad48]        # 4474a6 <fb_schema_table_deleted@@Base+0x57e>
  41c75e:	cmp    eax,0x8
  41c761:	ja     41c93e <__flatcc_fb_init_parser@@Base+0x28e>
  41c767:	mov    ecx,0x114
  41c76c:	bt     ecx,eax
  41c76f:	jae    41c93e <__flatcc_fb_init_parser@@Base+0x28e>
  41c775:	test   r12,r12
  41c778:	lea    r15,[rip+0x2ad60]        # 4474df <fb_schema_table_deleted@@Base+0x5b7>
  41c77f:	cmovne r15,r12
  41c783:	mov    rdi,r15
  41c786:	call   4060d0 <strlen@plt>
  41c78b:	mov    rbx,rax
  41c78e:	mov    rdx,QWORD PTR [r14+0x68]
  41c792:	mov    rdi,r15
  41c795:	mov    rsi,rax
  41c798:	call   41c0c0 <__flatcc_fb_create_basename@@Base>
  41c79d:	mov    QWORD PTR [r13+0x308],rax
  41c7a4:	test   rax,rax
  41c7a7:	je     41c96e <__flatcc_fb_init_parser@@Base+0x2be>
  41c7ad:	mov    rbp,rax
  41c7b0:	mov    QWORD PTR [rsp+0x8],rbx
  41c7b5:	mov    QWORD PTR [rsp+0x10],r14
  41c7ba:	mov    rdi,rax
  41c7bd:	call   4060d0 <strlen@plt>
  41c7c2:	mov    rbx,rax
  41c7c5:	mov    rdi,rbp
  41c7c8:	mov    rsi,rax
  41c7cb:	call   41ba30 <__flatcc_fb_copy_path_n@@Base>
  41c7d0:	test   rax,rax
  41c7d3:	je     41c96e <__flatcc_fb_init_parser@@Base+0x2be>
  41c7d9:	mov    rbp,rax
  41c7dc:	test   rbx,rbx
  41c7df:	je     41c815 <__flatcc_fb_init_parser@@Base+0x165>
  41c7e1:	xor    r12d,r12d
  41c7e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c7ee:	xchg   ax,ax
  41c7f0:	movsx  r14,BYTE PTR [rbp+r12*1+0x0]
  41c7f6:	test   r14,r14
  41c7f9:	je     41c815 <__flatcc_fb_init_parser@@Base+0x165>
  41c7fb:	call   406030 <__ctype_toupper_loc@plt>
  41c800:	mov    rax,QWORD PTR [rax]
  41c803:	movzx  eax,BYTE PTR [rax+r14*4]
  41c808:	mov    BYTE PTR [rbp+r12*1+0x0],al
  41c80d:	inc    r12
  41c810:	cmp    rbx,r12
  41c813:	jne    41c7f0 <__flatcc_fb_init_parser@@Base+0x140>
  41c815:	mov    QWORD PTR [r13+0x310],rbp
  41c81c:	mov    QWORD PTR [r13+0x2f0],rbp
  41c823:	mov    DWORD PTR [r13+0x2f8],ebx
  41c82a:	lea    rdx,[rip+0x13512]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41c831:	mov    rdi,r15
  41c834:	mov    rsi,QWORD PTR [rsp+0x8]
  41c839:	call   41c0c0 <__flatcc_fb_create_basename@@Base>
  41c83e:	mov    QWORD PTR [r13+0x318],rax
  41c845:	test   rax,rax
  41c848:	je     41c96e <__flatcc_fb_init_parser@@Base+0x2be>
  41c84e:	mov    rax,QWORD PTR [rsp+0x10]
  41c853:	mov    rdi,QWORD PTR [rax+0xe0]
  41c85a:	test   rdi,rdi
  41c85d:	je     41c872 <__flatcc_fb_init_parser@@Base+0x1c2>
  41c85f:	mov    QWORD PTR [r13+0x2d8],rdi
  41c866:	call   4060d0 <strlen@plt>
  41c86b:	mov    DWORD PTR [r13+0x2e0],eax
  41c872:	mov    rdi,QWORD PTR [r13+0x260]
  41c879:	xor    r14d,r14d
  41c87c:	xor    esi,esi
  41c87e:	xor    edx,edx
  41c880:	call   41aae0 <fb_scope_table_find@@Base>
  41c885:	mov    r15,rax
  41c888:	test   rax,rax
  41c88b:	jne    41c903 <__flatcc_fb_init_parser@@Base+0x253>
  41c88d:	mov    r15,QWORD PTR [r13+0x60]
  41c891:	lea    rax,[r15+0x40]
  41c895:	cmp    rax,QWORD PTR [r13+0x50]
  41c899:	jbe    41c8d5 <__flatcc_fb_init_parser@@Base+0x225>
  41c89b:	mov    edi,0x10000
  41c8a0:	mov    esi,0x1
  41c8a5:	call   406150 <calloc@plt>
  41c8aa:	test   rax,rax
  41c8ad:	je     41c96e <__flatcc_fb_init_parser@@Base+0x2be>
  41c8b3:	mov    rcx,QWORD PTR [r13+0x58]
  41c8b7:	mov    QWORD PTR [rax],rcx
  41c8ba:	mov    QWORD PTR [r13+0x58],rax
  41c8be:	lea    r15,[rax+0x10]
  41c8c2:	mov    QWORD PTR [r13+0x60],r15
  41c8c6:	lea    rcx,[rax+0x10000]
  41c8cd:	mov    QWORD PTR [r13+0x50],rcx
  41c8d1:	add    rax,0x50
  41c8d5:	mov    QWORD PTR [r13+0x60],rax
  41c8d9:	mov    QWORD PTR [r15],0x0
  41c8e0:	vmovups xmm0,XMMWORD PTR [r13+0x2d8]
  41c8e9:	vmovups XMMWORD PTR [r15+0x28],xmm0
  41c8ef:	mov    rdi,QWORD PTR [r13+0x260]
  41c8f6:	mov    rsi,r15
  41c8f9:	mov    edx,0x1
  41c8fe:	call   41aad0 <fb_scope_table_insert_item@@Base>
  41c903:	mov    QWORD PTR [r13+0x340],r15
  41c90a:	mov    rdi,QWORD PTR [r13+0x260]
  41c911:	xor    esi,esi
  41c913:	xor    edx,edx
  41c915:	call   41aae0 <fb_scope_table_find@@Base>
  41c91a:	cmp    r15,rax
  41c91d:	je     41c95c <__flatcc_fb_init_parser@@Base+0x2ac>
  41c91f:	lea    rdi,[rip+0x2abbe]        # 4474e4 <fb_schema_table_deleted@@Base+0x5bc>
  41c926:	lea    rsi,[rip+0x2ac0a]        # 447537 <fb_schema_table_deleted@@Base+0x60f>
  41c92d:	lea    rcx,[rip+0x2ac63]        # 447597 <fb_schema_table_deleted@@Base+0x66f>
  41c934:	mov    edx,0x533
  41c939:	call   406100 <__assert_fail@plt>
  41c93e:	lea    rsi,[rip+0x2aadd]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41c945:	mov    rdi,r13
  41c948:	xor    eax,eax
  41c94a:	call   41c280 <__flatcc_fb_print_error@@Base>
  41c94f:	inc    DWORD PTR [r13+0xd0]
  41c956:	mov    r14d,0xffffffff
  41c95c:	mov    eax,r14d
  41c95f:	add    rsp,0x18
  41c963:	pop    rbx
  41c964:	pop    r12
  41c966:	pop    r13
  41c968:	pop    r14
  41c96a:	pop    r15
  41c96c:	pop    rbp
  41c96d:	ret    
  41c96e:	mov    rax,QWORD PTR [rip+0x35683]        # 451ff8 <stderr@GLIBC_2.2.5>
  41c975:	mov    rcx,QWORD PTR [rax]
  41c978:	lea    rdi,[rip+0x12e9d]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  41c97f:	mov    esi,0x22
  41c984:	mov    edx,0x1
  41c989:	call   406230 <fwrite@plt>
  41c98e:	mov    edi,0x1
  41c993:	call   406220 <exit@plt>
  41c998:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c9a0 <__flatcc_fb_parse@@Base>:
  41c9a0:	push   rbp
  41c9a1:	push   r15
  41c9a3:	push   r14
  41c9a5:	push   r13
  41c9a7:	push   r12
  41c9a9:	push   rbx
  41c9aa:	sub    rsp,0x58
  41c9ae:	mov    r14,rdi
  41c9b1:	mov    QWORD PTR [rdi+0x70],rsi
  41c9b5:	mov    QWORD PTR [rdi+0x78],0x1
  41c9bd:	mov    QWORD PTR [rdi+0xa0],0x9
  41c9c8:	lea    rax,[rip+0x2ac3b]        # 44760a <fb_schema_table_deleted@@Base+0x6e2>
  41c9cf:	mov    QWORD PTR [rdi+0x80],rax
  41c9d6:	mov    QWORD PTR [rdi+0x88],0x4
  41c9e1:	vxorps xmm0,xmm0,xmm0
  41c9e5:	vmovups XMMWORD PTR [rdi+0x90],xmm0
  41c9ed:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41c9f8:	lea    rax,[rip+0x2c3e6]        # 448de5 <fb_schema_table_deleted@@Base+0x1ebd>
  41c9ff:	mov    QWORD PTR [rdi+0xa8],rax
  41ca06:	mov    QWORD PTR [rdi+0xb0],0x5
  41ca11:	vmovups XMMWORD PTR [rdi+0xb8],xmm0
  41ca19:	test   ecx,ecx
  41ca1b:	je     41ca21 <__flatcc_fb_parse@@Base+0x81>
  41ca1d:	mov    QWORD PTR [r14+0x20],rsi
  41ca21:	mov    rdi,rsi
  41ca24:	mov    rsi,rdx
  41ca27:	mov    rdx,r14
  41ca2a:	call   41edc0 <__flatcc_fb_parse@@Base+0x2420>
  41ca2f:	mov    r13,QWORD PTR [r14+0x28]
  41ca33:	mov    rax,QWORD PTR [r14+0x48]
  41ca37:	mov    QWORD PTR [r14+0x30],rax
  41ca3b:	mov    QWORD PTR [r14+0x48],r13
  41ca3f:	mov    rdi,QWORD PTR [r14+0x148]
  41ca46:	call   4061b0 <malloc@plt>
  41ca4b:	mov    QWORD PTR [r14+0xd8],rax
  41ca52:	test   rax,rax
  41ca55:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41ca5b:	mov    rax,QWORD PTR [r13+0x20]
  41ca5f:	cmp    rax,0xfffffffffffffc3c
  41ca65:	jne    41ca77 <__flatcc_fb_parse@@Base+0xd7>
  41ca67:	mov    rdi,r14
  41ca6a:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41ca6f:	mov    r13,QWORD PTR [r14+0x48]
  41ca73:	mov    rax,QWORD PTR [r13+0x20]
  41ca77:	lea    rcx,[r14+0x48]
  41ca7b:	mov    QWORD PTR [rsp+0x10],rcx
  41ca80:	cmp    rax,0xfffffffffffffc35
  41ca86:	jne    41cddf <__flatcc_fb_parse@@Base+0x43f>
  41ca8c:	lea    r15,[rip+0x132b0]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41ca93:	mov    rbp,r13
  41ca96:	jmp    41cabe <__flatcc_fb_parse@@Base+0x11e>
  41ca98:	nop    DWORD PTR [rax+rax*1+0x0]
  41caa0:	mov    rdi,r14
  41caa3:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41caa8:	mov    rax,QWORD PTR [rsp+0x10]
  41caad:	mov    rbp,QWORD PTR [rax]
  41cab0:	cmp    QWORD PTR [rbp+0x20],0xfffffffffffffc35
  41cab8:	jne    41cdd7 <__flatcc_fb_parse@@Base+0x437>
  41cabe:	mov    rdi,r14
  41cac1:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41cac6:	test   rbp,rbp
  41cac9:	je     41cdd7 <__flatcc_fb_parse@@Base+0x437>
  41cacf:	cmp    DWORD PTR [r14+0xf8],0x0
  41cad7:	je     41cb30 <__flatcc_fb_parse@@Base+0x190>
  41cad9:	test   r13,r13
  41cadc:	je     41cb80 <__flatcc_fb_parse@@Base+0x1e0>
  41cae2:	mov    rax,QWORD PTR [r13+0x0]
  41cae6:	xor    r9d,r9d
  41cae9:	mov    rbp,r15
  41caec:	test   rax,rax
  41caef:	je     41caf8 <__flatcc_fb_parse@@Base+0x158>
  41caf1:	mov    r9d,DWORD PTR [r13+0x8]
  41caf5:	mov    rbp,rax
  41caf8:	mov    rax,r14
  41cafb:	cmp    QWORD PTR [rax+0x28],r13
  41caff:	jbe    41cb1e <__flatcc_fb_parse@@Base+0x17e>
  41cb01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb10:	mov    rax,QWORD PTR [rax]
  41cb13:	test   rax,rax
  41cb16:	je     41cb50 <__flatcc_fb_parse@@Base+0x1b0>
  41cb18:	cmp    QWORD PTR [rax+0x28],r13
  41cb1c:	ja     41cb10 <__flatcc_fb_parse@@Base+0x170>
  41cb1e:	cmp    QWORD PTR [rax+0x30],r13
  41cb22:	jbe    41cb10 <__flatcc_fb_parse@@Base+0x170>
  41cb24:	mov    rdx,QWORD PTR [rax+0x318]
  41cb2b:	jmp    41cb53 <__flatcc_fb_parse@@Base+0x1b3>
  41cb2d:	nop    DWORD PTR [rax]
  41cb30:	mov    eax,DWORD PTR [r14+0xd0]
  41cb37:	cmp    eax,0x9
  41cb3a:	jle    41cbb1 <__flatcc_fb_parse@@Base+0x211>
  41cb3c:	jmp    41cdd7 <__flatcc_fb_parse@@Base+0x437>
  41cb41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb50:	mov    rdx,r15
  41cb53:	mov    rcx,QWORD PTR [r13+0x10]
  41cb57:	mov    r8,QWORD PTR [r13+0x18]
  41cb5b:	mov    rdi,r14
  41cb5e:	lea    rsi,[rip+0x2a86b]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41cb65:	mov    eax,0x0
  41cb6a:	lea    rbx,[rip+0x2ab43]        # 4476b4 <fb_schema_table_deleted@@Base+0x78c>
  41cb71:	push   rbx
  41cb72:	push   rbp
  41cb73:	call   41c280 <__flatcc_fb_print_error@@Base>
  41cb78:	add    rsp,0x10
  41cb7c:	jmp    41cb98 <__flatcc_fb_parse@@Base+0x1f8>
  41cb7e:	xchg   ax,ax
  41cb80:	mov    rdi,r14
  41cb83:	lea    rsi,[rip+0x2a898]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41cb8a:	lea    rdx,[rip+0x2ab23]        # 4476b4 <fb_schema_table_deleted@@Base+0x78c>
  41cb91:	xor    eax,eax
  41cb93:	call   41c280 <__flatcc_fb_print_error@@Base>
  41cb98:	mov    eax,DWORD PTR [r14+0xd0]
  41cb9f:	inc    eax
  41cba1:	mov    DWORD PTR [r14+0xd0],eax
  41cba8:	cmp    eax,0x9
  41cbab:	jg     41cdd7 <__flatcc_fb_parse@@Base+0x437>
  41cbb1:	mov    rax,QWORD PTR [rsp+0x10]
  41cbb6:	mov    r12,QWORD PTR [rax]
  41cbb9:	cmp    QWORD PTR [r12+0x20],0x13
  41cbbf:	jne    41cbe0 <__flatcc_fb_parse@@Base+0x240>
  41cbc1:	mov    rdi,r14
  41cbc4:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41cbc9:	test   r12,r12
  41cbcc:	jne    41ccb7 <__flatcc_fb_parse@@Base+0x317>
  41cbd2:	jmp    41cc90 <__flatcc_fb_parse@@Base+0x2f0>
  41cbd7:	nop    WORD PTR [rax+rax*1+0x0]
  41cbe0:	test   r12,r12
  41cbe3:	je     41cc6b <__flatcc_fb_parse@@Base+0x2cb>
  41cbe9:	mov    rax,QWORD PTR [r12]
  41cbed:	xor    r9d,r9d
  41cbf0:	mov    rbp,r15
  41cbf3:	test   rax,rax
  41cbf6:	je     41cc00 <__flatcc_fb_parse@@Base+0x260>
  41cbf8:	mov    r9d,DWORD PTR [r12+0x8]
  41cbfd:	mov    rbp,rax
  41cc00:	mov    rax,r14
  41cc03:	cmp    QWORD PTR [rax+0x28],r12
  41cc07:	jbe    41cc1e <__flatcc_fb_parse@@Base+0x27e>
  41cc09:	nop    DWORD PTR [rax+0x0]
  41cc10:	mov    rax,QWORD PTR [rax]
  41cc13:	test   rax,rax
  41cc16:	je     41cc2d <__flatcc_fb_parse@@Base+0x28d>
  41cc18:	cmp    QWORD PTR [rax+0x28],r12
  41cc1c:	ja     41cc10 <__flatcc_fb_parse@@Base+0x270>
  41cc1e:	cmp    QWORD PTR [rax+0x30],r12
  41cc22:	jbe    41cc10 <__flatcc_fb_parse@@Base+0x270>
  41cc24:	mov    rdx,QWORD PTR [rax+0x318]
  41cc2b:	jmp    41cc30 <__flatcc_fb_parse@@Base+0x290>
  41cc2d:	mov    rdx,r15
  41cc30:	mov    rcx,QWORD PTR [r12+0x10]
  41cc35:	mov    r8,QWORD PTR [r12+0x18]
  41cc3a:	mov    rdi,r14
  41cc3d:	lea    rsi,[rip+0x2a78c]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41cc44:	mov    eax,0x0
  41cc49:	lea    rbx,[rip+0x2aa9c]        # 4476ec <fb_schema_table_deleted@@Base+0x7c4>
  41cc50:	push   rbx
  41cc51:	push   rbp
  41cc52:	call   41c280 <__flatcc_fb_print_error@@Base>
  41cc57:	add    rsp,0x10
  41cc5b:	inc    DWORD PTR [r14+0xd0]
  41cc62:	lea    r15,[rip+0x130da]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41cc69:	jmp    41cc90 <__flatcc_fb_parse@@Base+0x2f0>
  41cc6b:	mov    rdi,r14
  41cc6e:	lea    rsi,[rip+0x2a7ad]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41cc75:	lea    rdx,[rip+0x2aa70]        # 4476ec <fb_schema_table_deleted@@Base+0x7c4>
  41cc7c:	xor    eax,eax
  41cc7e:	call   41c280 <__flatcc_fb_print_error@@Base>
  41cc83:	inc    DWORD PTR [r14+0xd0]
  41cc8a:	nop    WORD PTR [rax+rax*1+0x0]
  41cc90:	mov    rax,QWORD PTR [rsp+0x10]
  41cc95:	mov    rax,QWORD PTR [rax]
  41cc98:	mov    rbp,QWORD PTR [rax+0x20]
  41cc9c:	test   rbp,rbp
  41cc9f:	je     41ccb7 <__flatcc_fb_parse@@Base+0x317>
  41cca1:	mov    rdi,r14
  41cca4:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41cca9:	cmp    rbp,0x3b
  41ccad:	jne    41cc90 <__flatcc_fb_parse@@Base+0x2f0>
  41ccaf:	mov    QWORD PTR [r14+0x40],0x0
  41ccb7:	mov    rsi,QWORD PTR [r14+0x60]
  41ccbb:	lea    rax,[rsi+0x20]
  41ccbf:	cmp    rax,QWORD PTR [r14+0x50]
  41ccc3:	jbe    41ccff <__flatcc_fb_parse@@Base+0x35f>
  41ccc5:	mov    edi,0x10000
  41ccca:	mov    esi,0x1
  41cccf:	call   406150 <calloc@plt>
  41ccd4:	test   rax,rax
  41ccd7:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41ccdd:	mov    rcx,QWORD PTR [r14+0x58]
  41cce1:	mov    QWORD PTR [rax],rcx
  41cce4:	mov    QWORD PTR [r14+0x58],rax
  41cce8:	lea    rsi,[rax+0x10]
  41ccec:	mov    QWORD PTR [r14+0x60],rsi
  41ccf0:	lea    rcx,[rax+0x10000]
  41ccf7:	mov    QWORD PTR [r14+0x50],rcx
  41ccfb:	add    rax,0x30
  41ccff:	mov    QWORD PTR [r14+0x60],rax
  41cd03:	mov    rax,QWORD PTR [r14+0x1f8]
  41cd0a:	mov    QWORD PTR [rsi],rax
  41cd0d:	mov    QWORD PTR [r14+0x1f8],rsi
  41cd14:	add    rsi,0x8
  41cd18:	mov    rdi,r14
  41cd1b:	call   422b70 <__flatcc_fb_clear_parser@@Base+0x140>
  41cd20:	mov    rax,QWORD PTR [r14+0x48]
  41cd24:	cmp    QWORD PTR [rax+0x20],0x3b
  41cd29:	je     41caa0 <__flatcc_fb_parse@@Base+0x100>
  41cd2f:	test   rax,rax
  41cd32:	je     41cdb3 <__flatcc_fb_parse@@Base+0x413>
  41cd34:	mov    rcx,QWORD PTR [rax]
  41cd37:	xor    r9d,r9d
  41cd3a:	mov    r10,r15
  41cd3d:	test   rcx,rcx
  41cd40:	je     41cd49 <__flatcc_fb_parse@@Base+0x3a9>
  41cd42:	mov    r9d,DWORD PTR [rax+0x8]
  41cd46:	mov    r10,rcx
  41cd49:	mov    rcx,r14
  41cd4c:	cmp    QWORD PTR [rcx+0x28],rax
  41cd50:	jbe    41cd6e <__flatcc_fb_parse@@Base+0x3ce>
  41cd52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd5c:	nop    DWORD PTR [rax+0x0]
  41cd60:	mov    rcx,QWORD PTR [rcx]
  41cd63:	test   rcx,rcx
  41cd66:	je     41cd7d <__flatcc_fb_parse@@Base+0x3dd>
  41cd68:	cmp    QWORD PTR [rcx+0x28],rax
  41cd6c:	ja     41cd60 <__flatcc_fb_parse@@Base+0x3c0>
  41cd6e:	cmp    QWORD PTR [rcx+0x30],rax
  41cd72:	jbe    41cd60 <__flatcc_fb_parse@@Base+0x3c0>
  41cd74:	mov    rdx,QWORD PTR [rcx+0x318]
  41cd7b:	jmp    41cd80 <__flatcc_fb_parse@@Base+0x3e0>
  41cd7d:	mov    rdx,r15
  41cd80:	mov    rcx,QWORD PTR [rax+0x10]
  41cd84:	mov    r8,QWORD PTR [rax+0x18]
  41cd88:	mov    rdi,r14
  41cd8b:	lea    rsi,[rip+0x2a63e]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41cd92:	mov    eax,0x0
  41cd97:	lea    rbx,[rip+0x2a97c]        # 44771a <fb_schema_table_deleted@@Base+0x7f2>
  41cd9e:	push   rbx
  41cd9f:	push   r10
  41cda1:	call   41c280 <__flatcc_fb_print_error@@Base>
  41cda6:	add    rsp,0x10
  41cdaa:	lea    r15,[rip+0x12f92]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41cdb1:	jmp    41cdcb <__flatcc_fb_parse@@Base+0x42b>
  41cdb3:	mov    rdi,r14
  41cdb6:	lea    rsi,[rip+0x2a665]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41cdbd:	lea    rdx,[rip+0x2a956]        # 44771a <fb_schema_table_deleted@@Base+0x7f2>
  41cdc4:	xor    eax,eax
  41cdc6:	call   41c280 <__flatcc_fb_print_error@@Base>
  41cdcb:	inc    DWORD PTR [r14+0xd0]
  41cdd2:	jmp    41caa8 <__flatcc_fb_parse@@Base+0x108>
  41cdd7:	mov    rax,QWORD PTR [rsp+0x10]
  41cddc:	mov    r13,QWORD PTR [rax]
  41cddf:	lea    rax,[r14+0x80]
  41cde6:	mov    QWORD PTR [rsp+0x30],rax
  41cdeb:	lea    rax,[r14+0xd0]
  41cdf2:	mov    QWORD PTR [rsp+0x8],rax
  41cdf7:	lea    rax,[r14+0x248]
  41cdfe:	mov    QWORD PTR [rsp+0x50],rax
  41ce03:	lea    rax,[r14+0x208]
  41ce0a:	mov    QWORD PTR [rsp+0x48],rax
  41ce0f:	lea    rax,[r14+0x220]
  41ce16:	mov    QWORD PTR [rsp+0x40],rax
  41ce1b:	lea    rax,[r14+0x2d8]
  41ce22:	mov    QWORD PTR [rsp+0x38],rax
  41ce27:	jmp    41ce59 <__flatcc_fb_parse@@Base+0x4b9>
  41ce29:	mov    rdi,r14
  41ce2c:	lea    rsi,[rip+0x2a5ef]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41ce33:	lea    rdx,[rip+0x2a9a7]        # 4477e1 <fb_schema_table_deleted@@Base+0x8b9>
  41ce3a:	xor    eax,eax
  41ce3c:	call   41c280 <__flatcc_fb_print_error@@Base>
  41ce41:	mov    rax,QWORD PTR [rsp+0x8]
  41ce46:	inc    DWORD PTR [rax]
  41ce48:	mov    rax,QWORD PTR [rsp+0x10]
  41ce4d:	mov    r13,QWORD PTR [rax]
  41ce50:	cmp    r13,r15
  41ce53:	je     41ec86 <__flatcc_fb_parse@@Base+0x22e6>
  41ce59:	mov    rcx,QWORD PTR [r13+0x20]
  41ce5d:	test   rcx,rcx
  41ce60:	je     41ec55 <__flatcc_fb_parse@@Base+0x22b5>
  41ce66:	mov    rax,QWORD PTR [rsp+0x8]
  41ce6b:	mov    eax,DWORD PTR [rax]
  41ce6d:	cmp    eax,0x9
  41ce70:	jg     41ed78 <__flatcc_fb_parse@@Base+0x23d8>
  41ce76:	mov    r15,r13
  41ce79:	cmp    rcx,0x4
  41ce7d:	jg     41cf60 <__flatcc_fb_parse@@Base+0x5c0>
  41ce83:	add    rcx,0x3e5
  41ce8a:	cmp    rcx,0x20
  41ce8e:	ja     41d6f4 <__flatcc_fb_parse@@Base+0xd54>
  41ce94:	lea    rax,[rip+0x2a0a5]        # 446f40 <fb_schema_table_deleted@@Base+0x18>
  41ce9b:	mov    rdx,rax
  41ce9e:	movsxd rax,DWORD PTR [rax+rcx*4]
  41cea2:	add    rax,rdx
  41cea5:	jmp    rax
  41cea7:	mov    rdi,r14
  41ceaa:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41ceaf:	mov    r13,QWORD PTR [r14+0x60]
  41ceb3:	lea    rax,[r13+0xd0]
  41ceba:	cmp    rax,QWORD PTR [r14+0x50]
  41cebe:	jbe    41cefc <__flatcc_fb_parse@@Base+0x55c>
  41cec0:	mov    edi,0x10000
  41cec5:	mov    esi,0x1
  41ceca:	call   406150 <calloc@plt>
  41cecf:	test   rax,rax
  41ced2:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41ced8:	mov    rcx,QWORD PTR [r14+0x58]
  41cedc:	mov    QWORD PTR [rax],rcx
  41cedf:	mov    QWORD PTR [r14+0x58],rax
  41cee3:	lea    r13,[rax+0x10]
  41cee7:	mov    QWORD PTR [r14+0x60],r13
  41ceeb:	lea    rcx,[rax+0x10000]
  41cef2:	mov    QWORD PTR [r14+0x50],rcx
  41cef6:	add    rax,0xe0
  41cefc:	mov    QWORD PTR [r14+0x60],rax
  41cf00:	mov    rax,QWORD PTR [r14+0x238]
  41cf07:	mov    QWORD PTR [r13+0x0],rax
  41cf0b:	mov    WORD PTR [r13+0x10],0x3
  41cf12:	mov    QWORD PTR [r14+0x238],r13
  41cf19:	mov    rax,QWORD PTR [r14+0x340]
  41cf20:	mov    QWORD PTR [r13+0x18],rax
  41cf24:	mov    rax,QWORD PTR [r14+0x40]
  41cf28:	test   rax,rax
  41cf2b:	je     41d95d <__flatcc_fb_parse@@Base+0xfbd>
  41cf31:	xor    edx,edx
  41cf33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf3d:	nop    DWORD PTR [rax]
  41cf40:	mov    rcx,rax
  41cf43:	mov    rax,QWORD PTR [rax]
  41cf46:	mov    QWORD PTR [rcx],rdx
  41cf49:	mov    rdx,rcx
  41cf4c:	test   rax,rax
  41cf4f:	jne    41cf40 <__flatcc_fb_parse@@Base+0x5a0>
  41cf51:	jmp    41d95f <__flatcc_fb_parse@@Base+0xfbf>
  41cf56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf60:	cmp    rcx,0x1a
  41cf64:	jg     41cfb4 <__flatcc_fb_parse@@Base+0x614>
  41cf66:	cmp    rcx,0x5
  41cf6a:	je     41d674 <__flatcc_fb_parse@@Base+0xcd4>
  41cf70:	cmp    rcx,0x7
  41cf74:	jne    41d6f4 <__flatcc_fb_parse@@Base+0xd54>
  41cf7a:	test   r15,r15
  41cf7d:	je     41dea4 <__flatcc_fb_parse@@Base+0x1504>
  41cf83:	mov    rax,r14
  41cf86:	cmp    QWORD PTR [rax+0x28],r15
  41cf8a:	jbe    41cfa2 <__flatcc_fb_parse@@Base+0x602>
  41cf8c:	nop    DWORD PTR [rax+0x0]
  41cf90:	mov    rax,QWORD PTR [rax]
  41cf93:	test   rax,rax
  41cf96:	je     41d86e <__flatcc_fb_parse@@Base+0xece>
  41cf9c:	cmp    QWORD PTR [rax+0x28],r15
  41cfa0:	ja     41cf90 <__flatcc_fb_parse@@Base+0x5f0>
  41cfa2:	cmp    QWORD PTR [rax+0x30],r15
  41cfa6:	jbe    41cf90 <__flatcc_fb_parse@@Base+0x5f0>
  41cfa8:	mov    rdx,QWORD PTR [rax+0x318]
  41cfaf:	jmp    41d875 <__flatcc_fb_parse@@Base+0xed5>
  41cfb4:	cmp    rcx,0x1b
  41cfb8:	je     41d6b4 <__flatcc_fb_parse@@Base+0xd14>
  41cfbe:	cmp    rcx,0x7b
  41cfc2:	jne    41d6f4 <__flatcc_fb_parse@@Base+0xd54>
  41cfc8:	test   r15,r15
  41cfcb:	je     41deba <__flatcc_fb_parse@@Base+0x151a>
  41cfd1:	mov    rax,QWORD PTR [r15]
  41cfd4:	xor    r9d,r9d
  41cfd7:	lea    rbp,[rip+0x12d65]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41cfde:	mov    r10,rbp
  41cfe1:	test   rax,rax
  41cfe4:	je     41cfed <__flatcc_fb_parse@@Base+0x64d>
  41cfe6:	mov    r9d,DWORD PTR [r15+0x8]
  41cfea:	mov    r10,rax
  41cfed:	mov    rax,r14
  41cff0:	cmp    QWORD PTR [rax+0x28],r15
  41cff4:	jbe    41d012 <__flatcc_fb_parse@@Base+0x672>
  41cff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d000:	mov    rax,QWORD PTR [rax]
  41d003:	test   rax,rax
  41d006:	je     41d89b <__flatcc_fb_parse@@Base+0xefb>
  41d00c:	cmp    QWORD PTR [rax+0x28],r15
  41d010:	ja     41d000 <__flatcc_fb_parse@@Base+0x660>
  41d012:	cmp    QWORD PTR [rax+0x30],r15
  41d016:	jbe    41d000 <__flatcc_fb_parse@@Base+0x660>
  41d018:	mov    rdx,QWORD PTR [rax+0x318]
  41d01f:	jmp    41d8a2 <__flatcc_fb_parse@@Base+0xf02>
  41d024:	mov    rdi,r14
  41d027:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d02c:	cmp    WORD PTR [r14+0x218],0x0
  41d035:	je     41d05a <__flatcc_fb_parse@@Base+0x6ba>
  41d037:	mov    rsi,QWORD PTR [r14+0x48]
  41d03b:	mov    r8,QWORD PTR [r14+0x208]
  41d042:	mov    r9d,DWORD PTR [r14+0x210]
  41d049:	mov    rdi,r14
  41d04c:	lea    rdx,[rip+0x2a989]        # 4479dc <fb_schema_table_deleted@@Base+0xab4>
  41d053:	xor    ecx,ecx
  41d055:	call   41c3a0 <__flatcc_error_report@@Base>
  41d05a:	mov    rax,QWORD PTR [rsp+0x10]
  41d05f:	mov    rbp,QWORD PTR [rax]
  41d062:	cmp    QWORD PTR [rbp+0x20],0x13
  41d067:	jne    41d754 <__flatcc_fb_parse@@Base+0xdb4>
  41d06d:	mov    rdi,r14
  41d070:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d075:	test   rbp,rbp
  41d078:	je     41e190 <__flatcc_fb_parse@@Base+0x17f0>
  41d07e:	mov    rbp,QWORD PTR [r14+0x48]
  41d082:	mov    rdi,r14
  41d085:	mov    rsi,QWORD PTR [rsp+0x48]
  41d08a:	call   422b70 <__flatcc_fb_clear_parser@@Base+0x140>
  41d08f:	cmp    QWORD PTR [r14+0x208],0x0
  41d097:	je     41e616 <__flatcc_fb_parse@@Base+0x1c76>
  41d09d:	cmp    DWORD PTR [r14+0x210],0x4
  41d0a5:	je     41e616 <__flatcc_fb_parse@@Base+0x1c76>
  41d0ab:	mov    WORD PTR [r14+0x218],0x1
  41d0b5:	test   rbp,rbp
  41d0b8:	je     41e5f7 <__flatcc_fb_parse@@Base+0x1c57>
  41d0be:	mov    rax,QWORD PTR [rbp+0x0]
  41d0c2:	xor    r9d,r9d
  41d0c5:	lea    r10,[rip+0x12c77]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d0cc:	test   rax,rax
  41d0cf:	je     41d0d8 <__flatcc_fb_parse@@Base+0x738>
  41d0d1:	mov    r9d,DWORD PTR [rbp+0x8]
  41d0d5:	mov    r10,rax
  41d0d8:	mov    rax,r14
  41d0db:	cmp    QWORD PTR [rax+0x28],rbp
  41d0df:	jbe    41d102 <__flatcc_fb_parse@@Base+0x762>
  41d0e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0f0:	mov    rax,QWORD PTR [rax]
  41d0f3:	test   rax,rax
  41d0f6:	je     41e5c4 <__flatcc_fb_parse@@Base+0x1c24>
  41d0fc:	cmp    QWORD PTR [rax+0x28],rbp
  41d100:	ja     41d0f0 <__flatcc_fb_parse@@Base+0x750>
  41d102:	cmp    QWORD PTR [rax+0x30],rbp
  41d106:	jbe    41d0f0 <__flatcc_fb_parse@@Base+0x750>
  41d108:	mov    rdx,QWORD PTR [rax+0x318]
  41d10f:	jmp    41e5cb <__flatcc_fb_parse@@Base+0x1c2b>
  41d114:	mov    rdi,r14
  41d117:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d11c:	mov    QWORD PTR [rsp+0x18],0x0
  41d125:	mov    rbp,QWORD PTR [r14+0x48]
  41d129:	mov    rcx,QWORD PTR [rbp+0x20]
  41d12d:	mov    rax,rbp
  41d130:	cmp    rcx,0x3b
  41d134:	jne    41e0cd <__flatcc_fb_parse@@Base+0x172d>
  41d13a:	mov    rdi,r14
  41d13d:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d142:	test   rbp,rbp
  41d145:	je     41e0c1 <__flatcc_fb_parse@@Base+0x1721>
  41d14b:	mov    QWORD PTR [r14+0x340],0x0
  41d156:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41d15b:	mov    rdi,r14
  41d15e:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d163:	mov    rsi,QWORD PTR [r14+0x60]
  41d167:	lea    rax,[rsi+0xd0]
  41d16e:	cmp    rax,QWORD PTR [r14+0x50]
  41d172:	jbe    41d1b0 <__flatcc_fb_parse@@Base+0x810>
  41d174:	mov    edi,0x10000
  41d179:	mov    esi,0x1
  41d17e:	call   406150 <calloc@plt>
  41d183:	test   rax,rax
  41d186:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41d18c:	mov    rcx,QWORD PTR [r14+0x58]
  41d190:	mov    QWORD PTR [rax],rcx
  41d193:	mov    QWORD PTR [r14+0x58],rax
  41d197:	lea    rsi,[rax+0x10]
  41d19b:	mov    QWORD PTR [r14+0x60],rsi
  41d19f:	lea    rcx,[rax+0x10000]
  41d1a6:	mov    QWORD PTR [r14+0x50],rcx
  41d1aa:	add    rax,0xe0
  41d1b0:	mov    QWORD PTR [r14+0x60],rax
  41d1b4:	mov    rax,QWORD PTR [r14+0x238]
  41d1bb:	mov    QWORD PTR [rsi],rax
  41d1be:	mov    WORD PTR [rsi+0x10],0x2
  41d1c4:	mov    QWORD PTR [r14+0x238],rsi
  41d1cb:	mov    rax,QWORD PTR [r14+0x340]
  41d1d2:	mov    QWORD PTR [rsi+0x18],rax
  41d1d6:	mov    rax,QWORD PTR [r14+0x40]
  41d1da:	test   rax,rax
  41d1dd:	je     41da94 <__flatcc_fb_parse@@Base+0x10f4>
  41d1e3:	xor    edx,edx
  41d1e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1ef:	nop
  41d1f0:	mov    rcx,rax
  41d1f3:	mov    rax,QWORD PTR [rax]
  41d1f6:	mov    QWORD PTR [rcx],rdx
  41d1f9:	mov    rdx,rcx
  41d1fc:	test   rax,rax
  41d1ff:	jne    41d1f0 <__flatcc_fb_parse@@Base+0x850>
  41d201:	jmp    41da96 <__flatcc_fb_parse@@Base+0x10f6>
  41d206:	mov    rdi,r14
  41d209:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d20e:	mov    rsi,QWORD PTR [r14+0x60]
  41d212:	lea    rax,[rsi+0xd0]
  41d219:	cmp    rax,QWORD PTR [r14+0x50]
  41d21d:	jbe    41d25b <__flatcc_fb_parse@@Base+0x8bb>
  41d21f:	mov    edi,0x10000
  41d224:	mov    esi,0x1
  41d229:	call   406150 <calloc@plt>
  41d22e:	test   rax,rax
  41d231:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41d237:	mov    rcx,QWORD PTR [r14+0x58]
  41d23b:	mov    QWORD PTR [rax],rcx
  41d23e:	mov    QWORD PTR [r14+0x58],rax
  41d242:	lea    rsi,[rax+0x10]
  41d246:	mov    QWORD PTR [r14+0x60],rsi
  41d24a:	lea    rcx,[rax+0x10000]
  41d251:	mov    QWORD PTR [r14+0x50],rcx
  41d255:	add    rax,0xe0
  41d25b:	mov    QWORD PTR [r14+0x60],rax
  41d25f:	mov    rax,QWORD PTR [r14+0x238]
  41d266:	mov    QWORD PTR [rsi],rax
  41d269:	mov    WORD PTR [rsi+0x10],0x0
  41d26f:	mov    QWORD PTR [r14+0x238],rsi
  41d276:	mov    rax,QWORD PTR [r14+0x340]
  41d27d:	mov    QWORD PTR [rsi+0x18],rax
  41d281:	mov    rax,QWORD PTR [r14+0x40]
  41d285:	test   rax,rax
  41d288:	je     41dab6 <__flatcc_fb_parse@@Base+0x1116>
  41d28e:	xor    edx,edx
  41d290:	mov    rcx,rax
  41d293:	mov    rax,QWORD PTR [rax]
  41d296:	mov    QWORD PTR [rcx],rdx
  41d299:	mov    rdx,rcx
  41d29c:	test   rax,rax
  41d29f:	jne    41d290 <__flatcc_fb_parse@@Base+0x8f0>
  41d2a1:	jmp    41dab8 <__flatcc_fb_parse@@Base+0x1118>
  41d2a6:	mov    rdi,r14
  41d2a9:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d2ae:	mov    rsi,QWORD PTR [r14+0x60]
  41d2b2:	lea    rax,[rsi+0xd0]
  41d2b9:	cmp    rax,QWORD PTR [r14+0x50]
  41d2bd:	jbe    41d2fb <__flatcc_fb_parse@@Base+0x95b>
  41d2bf:	mov    edi,0x10000
  41d2c4:	mov    esi,0x1
  41d2c9:	call   406150 <calloc@plt>
  41d2ce:	test   rax,rax
  41d2d1:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41d2d7:	mov    rcx,QWORD PTR [r14+0x58]
  41d2db:	mov    QWORD PTR [rax],rcx
  41d2de:	mov    QWORD PTR [r14+0x58],rax
  41d2e2:	lea    rsi,[rax+0x10]
  41d2e6:	mov    QWORD PTR [r14+0x60],rsi
  41d2ea:	lea    rcx,[rax+0x10000]
  41d2f1:	mov    QWORD PTR [r14+0x50],rcx
  41d2f5:	add    rax,0xe0
  41d2fb:	mov    QWORD PTR [r14+0x60],rax
  41d2ff:	mov    rax,QWORD PTR [r14+0x238]
  41d306:	mov    QWORD PTR [rsi],rax
  41d309:	mov    WORD PTR [rsi+0x10],0x1
  41d30f:	mov    QWORD PTR [r14+0x238],rsi
  41d316:	mov    rax,QWORD PTR [r14+0x340]
  41d31d:	mov    QWORD PTR [rsi+0x18],rax
  41d321:	mov    rax,QWORD PTR [r14+0x40]
  41d325:	test   rax,rax
  41d328:	je     41dad8 <__flatcc_fb_parse@@Base+0x1138>
  41d32e:	xor    edx,edx
  41d330:	mov    rcx,rax
  41d333:	mov    rax,QWORD PTR [rax]
  41d336:	mov    QWORD PTR [rcx],rdx
  41d339:	mov    rdx,rcx
  41d33c:	test   rax,rax
  41d33f:	jne    41d330 <__flatcc_fb_parse@@Base+0x990>
  41d341:	jmp    41dada <__flatcc_fb_parse@@Base+0x113a>
  41d346:	mov    rdi,r14
  41d349:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d34e:	cmp    WORD PTR [r14+0x230],0x2
  41d357:	jne    41d37c <__flatcc_fb_parse@@Base+0x9dc>
  41d359:	mov    rsi,QWORD PTR [r14+0x48]
  41d35d:	mov    r8,QWORD PTR [r14+0x220]
  41d364:	mov    r9d,DWORD PTR [r14+0x228]
  41d36b:	mov    rdi,r14
  41d36e:	lea    rdx,[rip+0x2a609]        # 44797e <fb_schema_table_deleted@@Base+0xa56>
  41d375:	xor    ecx,ecx
  41d377:	call   41c3a0 <__flatcc_error_report@@Base>
  41d37c:	mov    rax,QWORD PTR [rsp+0x10]
  41d381:	mov    rbp,QWORD PTR [rax]
  41d384:	cmp    QWORD PTR [rbp+0x20],0x13
  41d389:	jne    41d7a4 <__flatcc_fb_parse@@Base+0xe04>
  41d38f:	mov    rdi,r14
  41d392:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d397:	test   rbp,rbp
  41d39a:	je     41e1e0 <__flatcc_fb_parse@@Base+0x1840>
  41d3a0:	mov    rdi,r14
  41d3a3:	mov    rsi,QWORD PTR [rsp+0x40]
  41d3a8:	call   422b70 <__flatcc_fb_clear_parser@@Base+0x140>
  41d3ad:	mov    rax,QWORD PTR [r14+0x48]
  41d3b1:	cmp    QWORD PTR [rax+0x20],0x3b
  41d3b6:	je     41e625 <__flatcc_fb_parse@@Base+0x1c85>
  41d3bc:	test   rax,rax
  41d3bf:	je     41e539 <__flatcc_fb_parse@@Base+0x1b99>
  41d3c5:	mov    rcx,QWORD PTR [rax]
  41d3c8:	xor    r9d,r9d
  41d3cb:	lea    rbp,[rip+0x12971]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d3d2:	mov    r10,rbp
  41d3d5:	test   rcx,rcx
  41d3d8:	je     41d3e1 <__flatcc_fb_parse@@Base+0xa41>
  41d3da:	mov    r9d,DWORD PTR [rax+0x8]
  41d3de:	mov    r10,rcx
  41d3e1:	mov    rcx,r14
  41d3e4:	cmp    QWORD PTR [rcx+0x28],rax
  41d3e8:	jbe    41d402 <__flatcc_fb_parse@@Base+0xa62>
  41d3ea:	nop    WORD PTR [rax+rax*1+0x0]
  41d3f0:	mov    rcx,QWORD PTR [rcx]
  41d3f3:	test   rcx,rcx
  41d3f6:	je     41e4e5 <__flatcc_fb_parse@@Base+0x1b45>
  41d3fc:	cmp    QWORD PTR [rcx+0x28],rax
  41d400:	ja     41d3f0 <__flatcc_fb_parse@@Base+0xa50>
  41d402:	cmp    QWORD PTR [rcx+0x30],rax
  41d406:	jbe    41d3f0 <__flatcc_fb_parse@@Base+0xa50>
  41d408:	mov    rdx,QWORD PTR [rcx+0x318]
  41d40f:	jmp    41e4ec <__flatcc_fb_parse@@Base+0x1b4c>
  41d414:	mov    rdi,r14
  41d417:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d41c:	mov    r13,QWORD PTR [r14+0x60]
  41d420:	lea    rax,[r13+0xd0]
  41d427:	cmp    rax,QWORD PTR [r14+0x50]
  41d42b:	jbe    41d469 <__flatcc_fb_parse@@Base+0xac9>
  41d42d:	mov    edi,0x10000
  41d432:	mov    esi,0x1
  41d437:	call   406150 <calloc@plt>
  41d43c:	test   rax,rax
  41d43f:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41d445:	mov    rcx,QWORD PTR [r14+0x58]
  41d449:	mov    QWORD PTR [rax],rcx
  41d44c:	mov    QWORD PTR [r14+0x58],rax
  41d450:	lea    r13,[rax+0x10]
  41d454:	mov    QWORD PTR [r14+0x60],r13
  41d458:	lea    rcx,[rax+0x10000]
  41d45f:	mov    QWORD PTR [r14+0x50],rcx
  41d463:	add    rax,0xe0
  41d469:	mov    QWORD PTR [r14+0x60],rax
  41d46d:	mov    rax,QWORD PTR [r14+0x238]
  41d474:	mov    QWORD PTR [r13+0x0],rax
  41d478:	mov    WORD PTR [r13+0x10],0x4
  41d47f:	mov    QWORD PTR [r14+0x238],r13
  41d486:	mov    rax,QWORD PTR [r14+0x340]
  41d48d:	mov    QWORD PTR [r13+0x18],rax
  41d491:	mov    rax,QWORD PTR [r14+0x40]
  41d495:	test   rax,rax
  41d498:	je     41dafa <__flatcc_fb_parse@@Base+0x115a>
  41d49e:	xor    edx,edx
  41d4a0:	mov    rcx,rax
  41d4a3:	mov    rax,QWORD PTR [rax]
  41d4a6:	mov    QWORD PTR [rcx],rdx
  41d4a9:	mov    rdx,rcx
  41d4ac:	test   rax,rax
  41d4af:	jne    41d4a0 <__flatcc_fb_parse@@Base+0xb00>
  41d4b1:	jmp    41dafc <__flatcc_fb_parse@@Base+0x115c>
  41d4b6:	mov    rdi,r14
  41d4b9:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d4be:	mov    rbp,QWORD PTR [r14+0x48]
  41d4c2:	cmp    QWORD PTR [r14+0x248],0x0
  41d4ca:	je     41df64 <__flatcc_fb_parse@@Base+0x15c4>
  41d4d0:	test   rbp,rbp
  41d4d3:	je     41df45 <__flatcc_fb_parse@@Base+0x15a5>
  41d4d9:	mov    rax,QWORD PTR [rbp+0x0]
  41d4dd:	xor    r9d,r9d
  41d4e0:	lea    r10,[rip+0x1285c]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d4e7:	test   rax,rax
  41d4ea:	je     41d4f3 <__flatcc_fb_parse@@Base+0xb53>
  41d4ec:	mov    r9d,DWORD PTR [rbp+0x8]
  41d4f0:	mov    r10,rax
  41d4f3:	mov    rax,r14
  41d4f6:	cmp    QWORD PTR [rax+0x28],rbp
  41d4fa:	jbe    41d512 <__flatcc_fb_parse@@Base+0xb72>
  41d4fc:	nop    DWORD PTR [rax+0x0]
  41d500:	mov    rax,QWORD PTR [rax]
  41d503:	test   rax,rax
  41d506:	je     41df12 <__flatcc_fb_parse@@Base+0x1572>
  41d50c:	cmp    QWORD PTR [rax+0x28],rbp
  41d510:	ja     41d500 <__flatcc_fb_parse@@Base+0xb60>
  41d512:	cmp    QWORD PTR [rax+0x30],rbp
  41d516:	jbe    41d500 <__flatcc_fb_parse@@Base+0xb60>
  41d518:	mov    rdx,QWORD PTR [rax+0x318]
  41d51f:	jmp    41df19 <__flatcc_fb_parse@@Base+0x1579>
  41d524:	test   r15,r15
  41d527:	je     41ce29 <__flatcc_fb_parse@@Base+0x489>
  41d52d:	mov    rax,QWORD PTR [r15]
  41d530:	xor    r9d,r9d
  41d533:	lea    rbp,[rip+0x12809]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d53a:	mov    r10,rbp
  41d53d:	test   rax,rax
  41d540:	je     41d549 <__flatcc_fb_parse@@Base+0xba9>
  41d542:	mov    r9d,DWORD PTR [r15+0x8]
  41d546:	mov    r10,rax
  41d549:	mov    rax,r14
  41d54c:	cmp    QWORD PTR [rax+0x28],r15
  41d550:	jbe    41d572 <__flatcc_fb_parse@@Base+0xbd2>
  41d552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d55c:	nop    DWORD PTR [rax+0x0]
  41d560:	mov    rax,QWORD PTR [rax]
  41d563:	test   rax,rax
  41d566:	je     41d844 <__flatcc_fb_parse@@Base+0xea4>
  41d56c:	cmp    QWORD PTR [rax+0x28],r15
  41d570:	ja     41d560 <__flatcc_fb_parse@@Base+0xbc0>
  41d572:	cmp    QWORD PTR [rax+0x30],r15
  41d576:	jbe    41d560 <__flatcc_fb_parse@@Base+0xbc0>
  41d578:	mov    rdx,QWORD PTR [rax+0x318]
  41d57f:	jmp    41d84b <__flatcc_fb_parse@@Base+0xeab>
  41d584:	mov    rdi,r14
  41d587:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d58c:	mov    r12,QWORD PTR [r14+0x60]
  41d590:	lea    rax,[r12+0x30]
  41d595:	cmp    rax,QWORD PTR [r14+0x50]
  41d599:	jbe    41d5d5 <__flatcc_fb_parse@@Base+0xc35>
  41d59b:	mov    edi,0x10000
  41d5a0:	mov    esi,0x1
  41d5a5:	call   406150 <calloc@plt>
  41d5aa:	test   rax,rax
  41d5ad:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41d5b3:	mov    rcx,QWORD PTR [r14+0x58]
  41d5b7:	mov    QWORD PTR [rax],rcx
  41d5ba:	mov    QWORD PTR [r14+0x58],rax
  41d5be:	lea    r12,[rax+0x10]
  41d5c2:	mov    QWORD PTR [r14+0x60],r12
  41d5c6:	lea    rcx,[rax+0x10000]
  41d5cd:	mov    QWORD PTR [r14+0x50],rcx
  41d5d1:	add    rax,0x40
  41d5d5:	mov    QWORD PTR [r14+0x60],rax
  41d5d9:	mov    rax,QWORD PTR [r14+0x200]
  41d5e0:	mov    QWORD PTR [r12],rax
  41d5e4:	mov    QWORD PTR [r14+0x200],r12
  41d5eb:	mov    rbp,QWORD PTR [r14+0x48]
  41d5ef:	cmp    QWORD PTR [rbp+0x20],0x13
  41d5f4:	jne    41d7f4 <__flatcc_fb_parse@@Base+0xe54>
  41d5fa:	mov    rdi,r14
  41d5fd:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d602:	test   rbp,rbp
  41d605:	je     41e27f <__flatcc_fb_parse@@Base+0x18df>
  41d60b:	lea    rsi,[r12+0x8]
  41d610:	mov    rdi,r14
  41d613:	call   422b70 <__flatcc_fb_clear_parser@@Base+0x140>
  41d618:	cmp    DWORD PTR [r12+0x10],0x0
  41d61e:	jne    41e27f <__flatcc_fb_parse@@Base+0x18df>
  41d624:	mov    rax,QWORD PTR [rbp+0x0]
  41d628:	xor    r9d,r9d
  41d62b:	lea    r10,[rip+0x12711]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d632:	test   rax,rax
  41d635:	je     41d63e <__flatcc_fb_parse@@Base+0xc9e>
  41d637:	mov    r9d,DWORD PTR [rbp+0x8]
  41d63b:	mov    r10,rax
  41d63e:	mov    rax,r14
  41d641:	cmp    QWORD PTR [rax+0x28],rbp
  41d645:	jbe    41d662 <__flatcc_fb_parse@@Base+0xcc2>
  41d647:	nop    WORD PTR [rax+rax*1+0x0]
  41d650:	mov    rax,QWORD PTR [rax]
  41d653:	test   rax,rax
  41d656:	je     41e4a8 <__flatcc_fb_parse@@Base+0x1b08>
  41d65c:	cmp    QWORD PTR [rax+0x28],rbp
  41d660:	ja     41d650 <__flatcc_fb_parse@@Base+0xcb0>
  41d662:	cmp    QWORD PTR [rax+0x30],rbp
  41d666:	jbe    41d650 <__flatcc_fb_parse@@Base+0xcb0>
  41d668:	mov    rdx,QWORD PTR [rax+0x318]
  41d66f:	jmp    41e4af <__flatcc_fb_parse@@Base+0x1b0f>
  41d674:	test   r15,r15
  41d677:	je     41ded0 <__flatcc_fb_parse@@Base+0x1530>
  41d67d:	mov    rax,r14
  41d680:	cmp    QWORD PTR [rax+0x28],r15
  41d684:	jbe    41d6a2 <__flatcc_fb_parse@@Base+0xd02>
  41d686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d690:	mov    rax,QWORD PTR [rax]
  41d693:	test   rax,rax
  41d696:	je     41d8c5 <__flatcc_fb_parse@@Base+0xf25>
  41d69c:	cmp    QWORD PTR [rax+0x28],r15
  41d6a0:	ja     41d690 <__flatcc_fb_parse@@Base+0xcf0>
  41d6a2:	cmp    QWORD PTR [rax+0x30],r15
  41d6a6:	jbe    41d690 <__flatcc_fb_parse@@Base+0xcf0>
  41d6a8:	mov    rdx,QWORD PTR [rax+0x318]
  41d6af:	jmp    41d8cc <__flatcc_fb_parse@@Base+0xf2c>
  41d6b4:	test   r15,r15
  41d6b7:	je     41dee6 <__flatcc_fb_parse@@Base+0x1546>
  41d6bd:	mov    rax,r14
  41d6c0:	cmp    QWORD PTR [rax+0x28],r15
  41d6c4:	jbe    41d6e2 <__flatcc_fb_parse@@Base+0xd42>
  41d6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6d0:	mov    rax,QWORD PTR [rax]
  41d6d3:	test   rax,rax
  41d6d6:	je     41d8fa <__flatcc_fb_parse@@Base+0xf5a>
  41d6dc:	cmp    QWORD PTR [rax+0x28],r15
  41d6e0:	ja     41d6d0 <__flatcc_fb_parse@@Base+0xd30>
  41d6e2:	cmp    QWORD PTR [rax+0x30],r15
  41d6e6:	jbe    41d6d0 <__flatcc_fb_parse@@Base+0xd30>
  41d6e8:	mov    rdx,QWORD PTR [rax+0x318]
  41d6ef:	jmp    41d901 <__flatcc_fb_parse@@Base+0xf61>
  41d6f4:	test   r15,r15
  41d6f7:	je     41defc <__flatcc_fb_parse@@Base+0x155c>
  41d6fd:	mov    rax,QWORD PTR [r15]
  41d700:	xor    r9d,r9d
  41d703:	lea    rbp,[rip+0x12639]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d70a:	mov    r10,rbp
  41d70d:	test   rax,rax
  41d710:	je     41d719 <__flatcc_fb_parse@@Base+0xd79>
  41d712:	mov    r9d,DWORD PTR [r15+0x8]
  41d716:	mov    r10,rax
  41d719:	mov    rax,r14
  41d71c:	cmp    QWORD PTR [rax+0x28],r15
  41d720:	jbe    41d742 <__flatcc_fb_parse@@Base+0xda2>
  41d722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d72c:	nop    DWORD PTR [rax+0x0]
  41d730:	mov    rax,QWORD PTR [rax]
  41d733:	test   rax,rax
  41d736:	je     41d933 <__flatcc_fb_parse@@Base+0xf93>
  41d73c:	cmp    QWORD PTR [rax+0x28],r15
  41d740:	ja     41d730 <__flatcc_fb_parse@@Base+0xd90>
  41d742:	cmp    QWORD PTR [rax+0x30],r15
  41d746:	jbe    41d730 <__flatcc_fb_parse@@Base+0xd90>
  41d748:	mov    rdx,QWORD PTR [rax+0x318]
  41d74f:	jmp    41d93a <__flatcc_fb_parse@@Base+0xf9a>
  41d754:	test   rbp,rbp
  41d757:	je     41e164 <__flatcc_fb_parse@@Base+0x17c4>
  41d75d:	mov    rax,QWORD PTR [rbp+0x0]
  41d761:	xor    r9d,r9d
  41d764:	lea    r10,[rip+0x125d8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d76b:	test   rax,rax
  41d76e:	je     41d777 <__flatcc_fb_parse@@Base+0xdd7>
  41d770:	mov    r9d,DWORD PTR [rbp+0x8]
  41d774:	mov    r10,rax
  41d777:	mov    rax,r14
  41d77a:	cmp    QWORD PTR [rax+0x28],rbp
  41d77e:	jbe    41d792 <__flatcc_fb_parse@@Base+0xdf2>
  41d780:	mov    rax,QWORD PTR [rax]
  41d783:	test   rax,rax
  41d786:	je     41dfb3 <__flatcc_fb_parse@@Base+0x1613>
  41d78c:	cmp    QWORD PTR [rax+0x28],rbp
  41d790:	ja     41d780 <__flatcc_fb_parse@@Base+0xde0>
  41d792:	cmp    QWORD PTR [rax+0x30],rbp
  41d796:	jbe    41d780 <__flatcc_fb_parse@@Base+0xde0>
  41d798:	mov    rdx,QWORD PTR [rax+0x318]
  41d79f:	jmp    41dfba <__flatcc_fb_parse@@Base+0x161a>
  41d7a4:	test   rbp,rbp
  41d7a7:	je     41e1b8 <__flatcc_fb_parse@@Base+0x1818>
  41d7ad:	mov    rax,QWORD PTR [rbp+0x0]
  41d7b1:	xor    r9d,r9d
  41d7b4:	lea    r10,[rip+0x12588]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d7bb:	test   rax,rax
  41d7be:	je     41d7c7 <__flatcc_fb_parse@@Base+0xe27>
  41d7c0:	mov    r9d,DWORD PTR [rbp+0x8]
  41d7c4:	mov    r10,rax
  41d7c7:	mov    rax,r14
  41d7ca:	cmp    QWORD PTR [rax+0x28],rbp
  41d7ce:	jbe    41d7e2 <__flatcc_fb_parse@@Base+0xe42>
  41d7d0:	mov    rax,QWORD PTR [rax]
  41d7d3:	test   rax,rax
  41d7d6:	je     41dfe9 <__flatcc_fb_parse@@Base+0x1649>
  41d7dc:	cmp    QWORD PTR [rax+0x28],rbp
  41d7e0:	ja     41d7d0 <__flatcc_fb_parse@@Base+0xe30>
  41d7e2:	cmp    QWORD PTR [rax+0x30],rbp
  41d7e6:	jbe    41d7d0 <__flatcc_fb_parse@@Base+0xe30>
  41d7e8:	mov    rdx,QWORD PTR [rax+0x318]
  41d7ef:	jmp    41dff0 <__flatcc_fb_parse@@Base+0x1650>
  41d7f4:	test   rbp,rbp
  41d7f7:	je     41e260 <__flatcc_fb_parse@@Base+0x18c0>
  41d7fd:	mov    rax,QWORD PTR [rbp+0x0]
  41d801:	xor    r9d,r9d
  41d804:	lea    r10,[rip+0x12538]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d80b:	test   rax,rax
  41d80e:	je     41d817 <__flatcc_fb_parse@@Base+0xe77>
  41d810:	mov    r9d,DWORD PTR [rbp+0x8]
  41d814:	mov    r10,rax
  41d817:	mov    rax,r14
  41d81a:	cmp    QWORD PTR [rax+0x28],rbp
  41d81e:	jbe    41d832 <__flatcc_fb_parse@@Base+0xe92>
  41d820:	mov    rax,QWORD PTR [rax]
  41d823:	test   rax,rax
  41d826:	je     41e08b <__flatcc_fb_parse@@Base+0x16eb>
  41d82c:	cmp    QWORD PTR [rax+0x28],rbp
  41d830:	ja     41d820 <__flatcc_fb_parse@@Base+0xe80>
  41d832:	cmp    QWORD PTR [rax+0x30],rbp
  41d836:	jbe    41d820 <__flatcc_fb_parse@@Base+0xe80>
  41d838:	mov    rdx,QWORD PTR [rax+0x318]
  41d83f:	jmp    41e092 <__flatcc_fb_parse@@Base+0x16f2>
  41d844:	lea    rdx,[rip+0x124f8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d84b:	mov    rcx,QWORD PTR [r15+0x10]
  41d84f:	mov    r8,QWORD PTR [r15+0x18]
  41d853:	mov    rdi,r14
  41d856:	lea    rsi,[rip+0x29b73]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41d85d:	mov    eax,0x0
  41d862:	lea    rbp,[rip+0x29f78]        # 4477e1 <fb_schema_table_deleted@@Base+0x8b9>
  41d869:	jmp    41e6a2 <__flatcc_fb_parse@@Base+0x1d02>
  41d86e:	lea    rdx,[rip+0x124ce]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d875:	mov    rcx,QWORD PTR [r15+0x10]
  41d879:	mov    r8,QWORD PTR [r15+0x18]
  41d87d:	mov    rdi,r14
  41d880:	lea    rsi,[rip+0x29b49]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41d887:	mov    r9d,0x1
  41d88d:	mov    eax,0x0
  41d892:	lea    rbp,[rip+0x2a012]        # 4478ab <fb_schema_table_deleted@@Base+0x983>
  41d899:	jmp    41d8f0 <__flatcc_fb_parse@@Base+0xf50>
  41d89b:	lea    rdx,[rip+0x124a1]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d8a2:	mov    rcx,QWORD PTR [r15+0x10]
  41d8a6:	mov    r8,QWORD PTR [r15+0x18]
  41d8aa:	mov    rdi,r14
  41d8ad:	lea    rsi,[rip+0x29b1c]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41d8b4:	mov    eax,0x0
  41d8b9:	lea    rbp,[rip+0x29f57]        # 447817 <fb_schema_table_deleted@@Base+0x8ef>
  41d8c0:	jmp    41e6a2 <__flatcc_fb_parse@@Base+0x1d02>
  41d8c5:	lea    rdx,[rip+0x12477]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d8cc:	mov    rcx,QWORD PTR [r15+0x10]
  41d8d0:	mov    r8,QWORD PTR [r15+0x18]
  41d8d4:	mov    rdi,r14
  41d8d7:	lea    rsi,[rip+0x29af2]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41d8de:	mov    r9d,0x1
  41d8e4:	mov    eax,0x0
  41d8e9:	lea    rbp,[rip+0x29f89]        # 447879 <fb_schema_table_deleted@@Base+0x951>
  41d8f0:	push   rbp
  41d8f1:	lea    rbp,[rip+0x29e89]        # 447781 <fb_schema_table_deleted@@Base+0x859>
  41d8f8:	jmp    41d92d <__flatcc_fb_parse@@Base+0xf8d>
  41d8fa:	lea    rdx,[rip+0x12442]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d901:	mov    rcx,QWORD PTR [r15+0x10]
  41d905:	mov    r8,QWORD PTR [r15+0x18]
  41d909:	mov    rdi,r14
  41d90c:	lea    rsi,[rip+0x29abd]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41d913:	mov    r9d,0x5
  41d919:	mov    eax,0x0
  41d91e:	lea    rbp,[rip+0x29fae]        # 4478d3 <fb_schema_table_deleted@@Base+0x9ab>
  41d925:	push   rbp
  41d926:	lea    rbp,[rip+0x29fbb]        # 4478e8 <fb_schema_table_deleted@@Base+0x9c0>
  41d92d:	push   rbp
  41d92e:	jmp    41e6a5 <__flatcc_fb_parse@@Base+0x1d05>
  41d933:	lea    rdx,[rip+0x12409]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41d93a:	mov    rcx,QWORD PTR [r15+0x10]
  41d93e:	mov    r8,QWORD PTR [r15+0x18]
  41d942:	mov    rdi,r14
  41d945:	lea    rsi,[rip+0x29a84]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41d94c:	mov    eax,0x0
  41d951:	lea    rbp,[rip+0x29f96]        # 4478ee <fb_schema_table_deleted@@Base+0x9c6>
  41d958:	jmp    41e6a2 <__flatcc_fb_parse@@Base+0x1d02>
  41d95d:	xor    ecx,ecx
  41d95f:	mov    QWORD PTR [r13+0x40],rcx
  41d963:	mov    QWORD PTR [r14+0x40],0x0
  41d96b:	mov    rbp,QWORD PTR [r14+0x48]
  41d96f:	cmp    QWORD PTR [rbp+0x20],0x9
  41d974:	jne    41da44 <__flatcc_fb_parse@@Base+0x10a4>
  41d97a:	mov    rdi,r14
  41d97d:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d982:	mov    QWORD PTR [r13+0x8],rbp
  41d986:	test   rbp,rbp
  41d989:	je     41eaa0 <__flatcc_fb_parse@@Base+0x2100>
  41d98f:	mov    rax,QWORD PTR [rsp+0x10]
  41d994:	mov    rbp,QWORD PTR [rax]
  41d997:	cmp    QWORD PTR [rbp+0x20],0x3a
  41d99c:	jne    41e7eb <__flatcc_fb_parse@@Base+0x1e4b>
  41d9a2:	mov    rdi,r14
  41d9a5:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41d9aa:	test   rbp,rbp
  41d9ad:	je     41e7eb <__flatcc_fb_parse@@Base+0x1e4b>
  41d9b3:	lea    rsi,[r13+0x48]
  41d9b7:	mov    rdi,r14
  41d9ba:	call   424120 <__flatcc_fb_clear_parser@@Base+0x16f0>
  41d9bf:	cmp    WORD PTR [r13+0x58],0x8
  41d9c5:	mov    rax,QWORD PTR [r13+0x48]
  41d9c9:	jne    41e565 <__flatcc_fb_parse@@Base+0x1bc5>
  41d9cf:	mov    rcx,QWORD PTR [rax+0x20]
  41d9d3:	mov    edx,0x3e4
  41d9d8:	add    rcx,rdx
  41d9db:	cmp    rcx,0x15
  41d9df:	ja     41e7eb <__flatcc_fb_parse@@Base+0x1e4b>
  41d9e5:	mov    edx,0x200803
  41d9ea:	bt     rdx,rcx
  41d9ee:	jae    41e7eb <__flatcc_fb_parse@@Base+0x1e4b>
  41d9f4:	mov    rcx,QWORD PTR [rax]
  41d9f7:	xor    r9d,r9d
  41d9fa:	lea    rbp,[rip+0x12342]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41da01:	mov    r10,rbp
  41da04:	test   rcx,rcx
  41da07:	je     41da10 <__flatcc_fb_parse@@Base+0x1070>
  41da09:	mov    r9d,DWORD PTR [rax+0x8]
  41da0d:	mov    r10,rcx
  41da10:	mov    rcx,r14
  41da13:	cmp    QWORD PTR [rcx+0x28],rax
  41da17:	jbe    41da32 <__flatcc_fb_parse@@Base+0x1092>
  41da19:	nop    DWORD PTR [rax+0x0]
  41da20:	mov    rcx,QWORD PTR [rcx]
  41da23:	test   rcx,rcx
  41da26:	je     41e6c9 <__flatcc_fb_parse@@Base+0x1d29>
  41da2c:	cmp    QWORD PTR [rcx+0x28],rax
  41da30:	ja     41da20 <__flatcc_fb_parse@@Base+0x1080>
  41da32:	cmp    QWORD PTR [rcx+0x30],rax
  41da36:	jbe    41da20 <__flatcc_fb_parse@@Base+0x1080>
  41da38:	mov    rdx,QWORD PTR [rcx+0x318]
  41da3f:	jmp    41e6d0 <__flatcc_fb_parse@@Base+0x1d30>
  41da44:	test   rbp,rbp
  41da47:	je     41e208 <__flatcc_fb_parse@@Base+0x1868>
  41da4d:	mov    rax,QWORD PTR [rbp+0x0]
  41da51:	xor    r9d,r9d
  41da54:	lea    r10,[rip+0x122e8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41da5b:	test   rax,rax
  41da5e:	je     41da67 <__flatcc_fb_parse@@Base+0x10c7>
  41da60:	mov    r9d,DWORD PTR [rbp+0x8]
  41da64:	mov    r10,rax
  41da67:	mov    rax,r14
  41da6a:	cmp    QWORD PTR [rax+0x28],rbp
  41da6e:	jbe    41da82 <__flatcc_fb_parse@@Base+0x10e2>
  41da70:	mov    rax,QWORD PTR [rax]
  41da73:	test   rax,rax
  41da76:	je     41e01f <__flatcc_fb_parse@@Base+0x167f>
  41da7c:	cmp    QWORD PTR [rax+0x28],rbp
  41da80:	ja     41da70 <__flatcc_fb_parse@@Base+0x10d0>
  41da82:	cmp    QWORD PTR [rax+0x30],rbp
  41da86:	jbe    41da70 <__flatcc_fb_parse@@Base+0x10d0>
  41da88:	mov    rdx,QWORD PTR [rax+0x318]
  41da8f:	jmp    41e026 <__flatcc_fb_parse@@Base+0x1686>
  41da94:	xor    ecx,ecx
  41da96:	mov    QWORD PTR [rsi+0x40],rcx
  41da9a:	mov    QWORD PTR [r14+0x40],0x0
  41daa2:	mov    rdi,r14
  41daa5:	mov    rdx,0xfffffffffffffc39
  41daac:	call   422dd0 <__flatcc_fb_clear_parser@@Base+0x3a0>
  41dab1:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41dab6:	xor    ecx,ecx
  41dab8:	mov    QWORD PTR [rsi+0x40],rcx
  41dabc:	mov    QWORD PTR [r14+0x40],0x0
  41dac4:	mov    rdi,r14
  41dac7:	mov    rdx,0xfffffffffffffc29
  41dace:	call   422dd0 <__flatcc_fb_clear_parser@@Base+0x3a0>
  41dad3:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41dad8:	xor    ecx,ecx
  41dada:	mov    QWORD PTR [rsi+0x40],rcx
  41dade:	mov    QWORD PTR [r14+0x40],0x0
  41dae6:	mov    rdi,r14
  41dae9:	mov    rdx,0xfffffffffffffc33
  41daf0:	call   422dd0 <__flatcc_fb_clear_parser@@Base+0x3a0>
  41daf5:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41dafa:	xor    ecx,ecx
  41dafc:	mov    QWORD PTR [r13+0x40],rcx
  41db00:	mov    QWORD PTR [r14+0x40],0x0
  41db08:	mov    rbp,QWORD PTR [r14+0x48]
  41db0c:	cmp    QWORD PTR [rbp+0x20],0x9
  41db11:	jne    41de54 <__flatcc_fb_parse@@Base+0x14b4>
  41db17:	mov    rdi,r14
  41db1a:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41db1f:	mov    QWORD PTR [r13+0x8],rbp
  41db23:	test   rbp,rbp
  41db26:	je     41e760 <__flatcc_fb_parse@@Base+0x1dc0>
  41db2c:	mov    rdi,r14
  41db2f:	call   4239b0 <__flatcc_fb_clear_parser@@Base+0xf80>
  41db34:	mov    QWORD PTR [r13+0x38],rax
  41db38:	mov    rbx,QWORD PTR [r14+0x48]
  41db3c:	cmp    QWORD PTR [rbx+0x20],0x7b
  41db41:	jne    41e3d1 <__flatcc_fb_parse@@Base+0x1a31>
  41db47:	mov    rdi,r14
  41db4a:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41db4f:	test   rbx,rbx
  41db52:	je     41e760 <__flatcc_fb_parse@@Base+0x1dc0>
  41db58:	mov    rax,QWORD PTR [rsp+0x10]
  41db5d:	mov    r12,QWORD PTR [rax]
  41db60:	cmp    QWORD PTR [r12+0x20],0x9
  41db66:	mov    QWORD PTR [rsp+0x20],r13
  41db6b:	jne    41ddf3 <__flatcc_fb_parse@@Base+0x1453>
  41db71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41db80:	mov    rax,QWORD PTR [rsp+0x8]
  41db85:	cmp    DWORD PTR [rax],0x9
  41db88:	jg     41e760 <__flatcc_fb_parse@@Base+0x1dc0>
  41db8e:	mov    rbp,QWORD PTR [r14+0x60]
  41db92:	lea    rax,[rbp+0xb0]
  41db99:	cmp    rax,QWORD PTR [r14+0x50]
  41db9d:	jbe    41dbdb <__flatcc_fb_parse@@Base+0x123b>
  41db9f:	mov    edi,0x10000
  41dba4:	mov    esi,0x1
  41dba9:	call   406150 <calloc@plt>
  41dbae:	test   rax,rax
  41dbb1:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41dbb7:	mov    rcx,QWORD PTR [r14+0x58]
  41dbbb:	mov    QWORD PTR [rax],rcx
  41dbbe:	mov    QWORD PTR [r14+0x58],rax
  41dbc2:	lea    rbp,[rax+0x10]
  41dbc6:	mov    QWORD PTR [r14+0x60],rbp
  41dbca:	lea    rcx,[rax+0x10000]
  41dbd1:	mov    QWORD PTR [r14+0x50],rcx
  41dbd5:	add    rax,0xc0
  41dbdb:	mov    QWORD PTR [r14+0x60],rax
  41dbdf:	mov    rax,QWORD PTR [r13+0x28]
  41dbe3:	mov    QWORD PTR [rbp+0x0],rax
  41dbe7:	mov    WORD PTR [rbp+0x10],0x5
  41dbed:	mov    QWORD PTR [r13+0x28],rbp
  41dbf1:	mov    rax,QWORD PTR [r14+0x40]
  41dbf5:	test   rax,rax
  41dbf8:	je     41dc13 <__flatcc_fb_parse@@Base+0x1273>
  41dbfa:	xor    edx,edx
  41dbfc:	nop    DWORD PTR [rax+0x0]
  41dc00:	mov    rcx,rax
  41dc03:	mov    rax,QWORD PTR [rax]
  41dc06:	mov    QWORD PTR [rcx],rdx
  41dc09:	mov    rdx,rcx
  41dc0c:	test   rax,rax
  41dc0f:	jne    41dc00 <__flatcc_fb_parse@@Base+0x1260>
  41dc11:	jmp    41dc15 <__flatcc_fb_parse@@Base+0x1275>
  41dc13:	xor    ecx,ecx
  41dc15:	mov    QWORD PTR [rbp+0x68],rcx
  41dc19:	mov    QWORD PTR [r14+0x40],0x0
  41dc21:	mov    rdi,r14
  41dc24:	lea    rsi,[rsp+0x18]
  41dc29:	call   423830 <__flatcc_fb_clear_parser@@Base+0xe00>
  41dc2e:	mov    rax,QWORD PTR [rsp+0x18]
  41dc33:	mov    QWORD PTR [rbp+0x18],rax
  41dc37:	mov    WORD PTR [rbp+0x28],0xc
  41dc3d:	mov    rcx,QWORD PTR [rax]
  41dc40:	test   rcx,rcx
  41dc43:	je     41dc60 <__flatcc_fb_parse@@Base+0x12c0>
  41dc45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc4f:	nop
  41dc50:	mov    rax,rcx
  41dc53:	mov    rcx,QWORD PTR [rcx]
  41dc56:	test   rcx,rcx
  41dc59:	jne    41dc50 <__flatcc_fb_parse@@Base+0x12b0>
  41dc5b:	mov    QWORD PTR [rsp+0x18],rax
  41dc60:	mov    rax,QWORD PTR [rax+0x8]
  41dc64:	mov    QWORD PTR [rbp+0x8],rax
  41dc68:	mov    rax,QWORD PTR [rsp+0x10]
  41dc6d:	mov    r13,QWORD PTR [rax]
  41dc70:	mov    rax,QWORD PTR [r13+0x20]
  41dc74:	cmp    rax,0x3a
  41dc78:	jne    41dd76 <__flatcc_fb_parse@@Base+0x13d6>
  41dc7e:	mov    rdi,r14
  41dc81:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41dc86:	test   r13,r13
  41dc89:	je     41dd6a <__flatcc_fb_parse@@Base+0x13ca>
  41dc8f:	lea    r13,[rbp+0x18]
  41dc93:	mov    rax,QWORD PTR [r13+0x0]
  41dc97:	cmp    QWORD PTR [rax],0x0
  41dc9b:	je     41dd5f <__flatcc_fb_parse@@Base+0x13bf>
  41dca1:	test   r12,r12
  41dca4:	je     41dd40 <__flatcc_fb_parse@@Base+0x13a0>
  41dcaa:	mov    rax,QWORD PTR [r12]
  41dcae:	xor    r9d,r9d
  41dcb1:	lea    r10,[rip+0x1208b]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41dcb8:	test   rax,rax
  41dcbb:	je     41dcc5 <__flatcc_fb_parse@@Base+0x1325>
  41dcbd:	mov    r9d,DWORD PTR [r12+0x8]
  41dcc2:	mov    r10,rax
  41dcc5:	mov    rax,r14
  41dcc8:	mov    QWORD PTR [rsp+0x28],r13
  41dccd:	cmp    QWORD PTR [rax+0x28],r12
  41dcd1:	jbe    41dcee <__flatcc_fb_parse@@Base+0x134e>
  41dcd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dcdd:	nop    DWORD PTR [rax]
  41dce0:	mov    rax,QWORD PTR [rax]
  41dce3:	test   rax,rax
  41dce6:	je     41dd00 <__flatcc_fb_parse@@Base+0x1360>
  41dce8:	cmp    QWORD PTR [rax+0x28],r12
  41dcec:	ja     41dce0 <__flatcc_fb_parse@@Base+0x1340>
  41dcee:	cmp    QWORD PTR [rax+0x30],r12
  41dcf2:	jbe    41dce0 <__flatcc_fb_parse@@Base+0x1340>
  41dcf4:	mov    r13,rbp
  41dcf7:	mov    rdx,QWORD PTR [rax+0x318]
  41dcfe:	jmp    41dd0a <__flatcc_fb_parse@@Base+0x136a>
  41dd00:	mov    r13,rbp
  41dd03:	lea    rdx,[rip+0x12039]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41dd0a:	mov    rcx,QWORD PTR [r12+0x10]
  41dd0f:	mov    r8,QWORD PTR [r12+0x18]
  41dd14:	mov    rdi,r14
  41dd17:	lea    rsi,[rip+0x296b2]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41dd1e:	mov    eax,0x0
  41dd23:	lea    rbp,[rip+0x2a27e]        # 447fa8 <fb_schema_table_deleted@@Base+0x1080>
  41dd2a:	push   rbp
  41dd2b:	push   r10
  41dd2d:	call   41c280 <__flatcc_fb_print_error@@Base>
  41dd32:	add    rsp,0x10
  41dd36:	mov    rbp,r13
  41dd39:	mov    r13,QWORD PTR [rsp+0x28]
  41dd3e:	jmp    41dd58 <__flatcc_fb_parse@@Base+0x13b8>
  41dd40:	mov    rdi,r14
  41dd43:	lea    rsi,[rip+0x296d8]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41dd4a:	lea    rdx,[rip+0x2a257]        # 447fa8 <fb_schema_table_deleted@@Base+0x1080>
  41dd51:	xor    eax,eax
  41dd53:	call   41c280 <__flatcc_fb_print_error@@Base>
  41dd58:	mov    rax,QWORD PTR [rsp+0x8]
  41dd5d:	inc    DWORD PTR [rax]
  41dd5f:	mov    rdi,r14
  41dd62:	mov    rsi,r13
  41dd65:	call   424120 <__flatcc_fb_clear_parser@@Base+0x16f0>
  41dd6a:	mov    rax,QWORD PTR [rsp+0x10]
  41dd6f:	mov    r13,QWORD PTR [rax]
  41dd72:	mov    rax,QWORD PTR [r13+0x20]
  41dd76:	cmp    rax,0x3d
  41dd7a:	jne    41dda1 <__flatcc_fb_parse@@Base+0x1401>
  41dd7c:	mov    rdi,r14
  41dd7f:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41dd84:	test   r13,r13
  41dd87:	je     41dda1 <__flatcc_fb_parse@@Base+0x1401>
  41dd89:	add    rbp,0x48
  41dd8d:	mov    rdi,r14
  41dd90:	mov    rsi,rbp
  41dd93:	xor    edx,edx
  41dd95:	lea    rcx,[rip+0x2a16e]        # 447f0a <fb_schema_table_deleted@@Base+0xfe2>
  41dd9c:	call   423c40 <__flatcc_fb_clear_parser@@Base+0x1210>
  41dda1:	mov    rax,QWORD PTR [rsp+0x10]
  41dda6:	mov    r12,QWORD PTR [rax]
  41dda9:	mov    rax,QWORD PTR [r12+0x20]
  41ddae:	cmp    rax,0x2c
  41ddb2:	jne    41eaef <__flatcc_fb_parse@@Base+0x214f>
  41ddb8:	mov    rdi,r14
  41ddbb:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41ddc0:	test   r12,r12
  41ddc3:	mov    r12,QWORD PTR [r14+0x48]
  41ddc7:	mov    rax,QWORD PTR [r12+0x20]
  41ddcc:	mov    r13,QWORD PTR [rsp+0x20]
  41ddd1:	je     41eaf4 <__flatcc_fb_parse@@Base+0x2154>
  41ddd7:	mov    QWORD PTR [r14+0x40],0x0
  41dddf:	cmp    rax,0x9
  41dde3:	je     41db80 <__flatcc_fb_parse@@Base+0x11e0>
  41dde9:	cmp    rax,0x7d
  41dded:	je     41eb02 <__flatcc_fb_parse@@Base+0x2162>
  41ddf3:	test   r12,r12
  41ddf6:	je     41e73b <__flatcc_fb_parse@@Base+0x1d9b>
  41ddfc:	mov    rax,QWORD PTR [r12]
  41de00:	xor    r9d,r9d
  41de03:	lea    rbp,[rip+0x11f39]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41de0a:	mov    r10,rbp
  41de0d:	test   rax,rax
  41de10:	je     41de1a <__flatcc_fb_parse@@Base+0x147a>
  41de12:	mov    r9d,DWORD PTR [r12+0x8]
  41de17:	mov    r10,rax
  41de1a:	mov    rax,r14
  41de1d:	cmp    QWORD PTR [rax+0x28],r12
  41de21:	jbe    41de42 <__flatcc_fb_parse@@Base+0x14a2>
  41de23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de2d:	nop    DWORD PTR [rax]
  41de30:	mov    rax,QWORD PTR [rax]
  41de33:	test   rax,rax
  41de36:	je     41e706 <__flatcc_fb_parse@@Base+0x1d66>
  41de3c:	cmp    QWORD PTR [rax+0x28],r12
  41de40:	ja     41de30 <__flatcc_fb_parse@@Base+0x1490>
  41de42:	cmp    QWORD PTR [rax+0x30],r12
  41de46:	jbe    41de30 <__flatcc_fb_parse@@Base+0x1490>
  41de48:	mov    rdx,QWORD PTR [rax+0x318]
  41de4f:	jmp    41e70d <__flatcc_fb_parse@@Base+0x1d6d>
  41de54:	test   rbp,rbp
  41de57:	je     41e234 <__flatcc_fb_parse@@Base+0x1894>
  41de5d:	mov    rax,QWORD PTR [rbp+0x0]
  41de61:	xor    r9d,r9d
  41de64:	lea    r10,[rip+0x11ed8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41de6b:	test   rax,rax
  41de6e:	je     41de77 <__flatcc_fb_parse@@Base+0x14d7>
  41de70:	mov    r9d,DWORD PTR [rbp+0x8]
  41de74:	mov    r10,rax
  41de77:	mov    rax,r14
  41de7a:	cmp    QWORD PTR [rax+0x28],rbp
  41de7e:	jbe    41de92 <__flatcc_fb_parse@@Base+0x14f2>
  41de80:	mov    rax,QWORD PTR [rax]
  41de83:	test   rax,rax
  41de86:	je     41e055 <__flatcc_fb_parse@@Base+0x16b5>
  41de8c:	cmp    QWORD PTR [rax+0x28],rbp
  41de90:	ja     41de80 <__flatcc_fb_parse@@Base+0x14e0>
  41de92:	cmp    QWORD PTR [rax+0x30],rbp
  41de96:	jbe    41de80 <__flatcc_fb_parse@@Base+0x14e0>
  41de98:	mov    rdx,QWORD PTR [rax+0x318]
  41de9f:	jmp    41e05c <__flatcc_fb_parse@@Base+0x16bc>
  41dea4:	mov    rdi,r14
  41dea7:	lea    rsi,[rip+0x29574]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41deae:	lea    rdx,[rip+0x299f6]        # 4478ab <fb_schema_table_deleted@@Base+0x983>
  41deb5:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41deba:	mov    rdi,r14
  41debd:	lea    rsi,[rip+0x2955e]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41dec4:	lea    rdx,[rip+0x2994c]        # 447817 <fb_schema_table_deleted@@Base+0x8ef>
  41decb:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41ded0:	mov    rdi,r14
  41ded3:	lea    rsi,[rip+0x29548]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41deda:	lea    rdx,[rip+0x29998]        # 447879 <fb_schema_table_deleted@@Base+0x951>
  41dee1:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41dee6:	mov    rdi,r14
  41dee9:	lea    rsi,[rip+0x29532]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41def0:	lea    rdx,[rip+0x299dc]        # 4478d3 <fb_schema_table_deleted@@Base+0x9ab>
  41def7:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41defc:	mov    rdi,r14
  41deff:	lea    rsi,[rip+0x2951c]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41df06:	lea    rdx,[rip+0x299e1]        # 4478ee <fb_schema_table_deleted@@Base+0x9c6>
  41df0d:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41df12:	lea    rdx,[rip+0x11e2a]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41df19:	mov    rcx,QWORD PTR [rbp+0x10]
  41df1d:	mov    r8,QWORD PTR [rbp+0x18]
  41df21:	mov    rdi,r14
  41df24:	lea    rsi,[rip+0x294a5]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41df2b:	mov    eax,0x0
  41df30:	lea    rbx,[rip+0x29b2b]        # 447a62 <fb_schema_table_deleted@@Base+0xb3a>
  41df37:	push   rbx
  41df38:	push   r10
  41df3a:	call   41c280 <__flatcc_fb_print_error@@Base>
  41df3f:	add    rsp,0x10
  41df43:	jmp    41df5d <__flatcc_fb_parse@@Base+0x15bd>
  41df45:	mov    rdi,r14
  41df48:	lea    rsi,[rip+0x294d3]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41df4f:	lea    rdx,[rip+0x29b0c]        # 447a62 <fb_schema_table_deleted@@Base+0xb3a>
  41df56:	xor    eax,eax
  41df58:	call   41c280 <__flatcc_fb_print_error@@Base>
  41df5d:	mov    rax,QWORD PTR [rsp+0x8]
  41df62:	inc    DWORD PTR [rax]
  41df64:	mov    rdi,r14
  41df67:	mov    rsi,QWORD PTR [rsp+0x50]
  41df6c:	call   423830 <__flatcc_fb_clear_parser@@Base+0xe00>
  41df71:	mov    rax,QWORD PTR [r14+0x340]
  41df78:	mov    QWORD PTR [r14+0x258],rax
  41df7f:	mov    QWORD PTR [r14+0x40],0x0
  41df87:	mov    rsi,QWORD PTR [r14+0x48]
  41df8b:	cmp    QWORD PTR [rsi+0x20],0x3b
  41df90:	je     41e625 <__flatcc_fb_parse@@Base+0x1c85>
  41df96:	mov    rdi,r14
  41df99:	lea    rdx,[rip+0x29ad8]        # 447a78 <fb_schema_table_deleted@@Base+0xb50>
  41dfa0:	mov    rcx,rbp
  41dfa3:	xor    r8d,r8d
  41dfa6:	xor    r9d,r9d
  41dfa9:	call   41c3a0 <__flatcc_error_report@@Base>
  41dfae:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41dfb3:	lea    rdx,[rip+0x11d89]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41dfba:	mov    rcx,QWORD PTR [rbp+0x10]
  41dfbe:	mov    r8,QWORD PTR [rbp+0x18]
  41dfc2:	mov    rdi,r14
  41dfc5:	lea    rsi,[rip+0x29404]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41dfcc:	mov    eax,0x0
  41dfd1:	lea    rbp,[rip+0x29a20]        # 4479f8 <fb_schema_table_deleted@@Base+0xad0>
  41dfd8:	push   rbp
  41dfd9:	push   r10
  41dfdb:	call   41c280 <__flatcc_fb_print_error@@Base>
  41dfe0:	add    rsp,0x10
  41dfe4:	jmp    41e17c <__flatcc_fb_parse@@Base+0x17dc>
  41dfe9:	lea    rdx,[rip+0x11d53]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41dff0:	mov    rcx,QWORD PTR [rbp+0x10]
  41dff4:	mov    r8,QWORD PTR [rbp+0x18]
  41dff8:	mov    rdi,r14
  41dffb:	lea    rsi,[rip+0x293ce]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e002:	mov    eax,0x0
  41e007:	lea    rbp,[rip+0x2998b]        # 447999 <fb_schema_table_deleted@@Base+0xa71>
  41e00e:	push   rbp
  41e00f:	push   r10
  41e011:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e016:	add    rsp,0x10
  41e01a:	jmp    41e1d0 <__flatcc_fb_parse@@Base+0x1830>
  41e01f:	lea    rdx,[rip+0x11d1d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e026:	mov    rcx,QWORD PTR [rbp+0x10]
  41e02a:	mov    r8,QWORD PTR [rbp+0x18]
  41e02e:	mov    rdi,r14
  41e031:	lea    rsi,[rip+0x29398]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e038:	mov    eax,0x0
  41e03d:	lea    rbp,[rip+0x29e51]        # 447e95 <fb_schema_table_deleted@@Base+0xf6d>
  41e044:	push   rbp
  41e045:	push   r10
  41e047:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e04c:	add    rsp,0x10
  41e050:	jmp    41e220 <__flatcc_fb_parse@@Base+0x1880>
  41e055:	lea    rdx,[rip+0x11ce7]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e05c:	mov    rcx,QWORD PTR [rbp+0x10]
  41e060:	mov    r8,QWORD PTR [rbp+0x18]
  41e064:	mov    rdi,r14
  41e067:	lea    rsi,[rip+0x29362]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e06e:	mov    eax,0x0
  41e073:	lea    rbp,[rip+0x29ecd]        # 447f47 <fb_schema_table_deleted@@Base+0x101f>
  41e07a:	push   rbp
  41e07b:	push   r10
  41e07d:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e082:	add    rsp,0x10
  41e086:	jmp    41e24c <__flatcc_fb_parse@@Base+0x18ac>
  41e08b:	lea    rdx,[rip+0x11cb1]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e092:	mov    rcx,QWORD PTR [rbp+0x10]
  41e096:	mov    r8,QWORD PTR [rbp+0x18]
  41e09a:	mov    rdi,r14
  41e09d:	lea    rsi,[rip+0x2932c]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e0a4:	mov    eax,0x0
  41e0a9:	lea    rbp,[rip+0x299ed]        # 447a9d <fb_schema_table_deleted@@Base+0xb75>
  41e0b0:	push   rbp
  41e0b1:	push   r10
  41e0b3:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e0b8:	add    rsp,0x10
  41e0bc:	jmp    41e278 <__flatcc_fb_parse@@Base+0x18d8>
  41e0c1:	mov    rax,QWORD PTR [rsp+0x10]
  41e0c6:	mov    rax,QWORD PTR [rax]
  41e0c9:	mov    rcx,QWORD PTR [rax+0x20]
  41e0cd:	cmp    rcx,0x9
  41e0d1:	jne    41e104 <__flatcc_fb_parse@@Base+0x1764>
  41e0d3:	mov    rdi,r14
  41e0d6:	lea    rsi,[rsp+0x18]
  41e0db:	call   423830 <__flatcc_fb_clear_parser@@Base+0xe00>
  41e0e0:	mov    QWORD PTR [r14+0x40],0x0
  41e0e8:	mov    rsi,QWORD PTR [r14+0x48]
  41e0ec:	cmp    QWORD PTR [rsi+0x20],0x3b
  41e0f1:	jne    41e31d <__flatcc_fb_parse@@Base+0x197d>
  41e0f7:	mov    rdi,r14
  41e0fa:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e0ff:	jmp    41e335 <__flatcc_fb_parse@@Base+0x1995>
  41e104:	test   rax,rax
  41e107:	je     41e457 <__flatcc_fb_parse@@Base+0x1ab7>
  41e10d:	mov    rcx,QWORD PTR [rax]
  41e110:	xor    r9d,r9d
  41e113:	lea    rbp,[rip+0x11c29]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e11a:	mov    r10,rbp
  41e11d:	test   rcx,rcx
  41e120:	je     41e129 <__flatcc_fb_parse@@Base+0x1789>
  41e122:	mov    r9d,DWORD PTR [rax+0x8]
  41e126:	mov    r10,rcx
  41e129:	mov    rcx,r14
  41e12c:	cmp    QWORD PTR [rcx+0x28],rax
  41e130:	jbe    41e152 <__flatcc_fb_parse@@Base+0x17b2>
  41e132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e13c:	nop    DWORD PTR [rax+0x0]
  41e140:	mov    rcx,QWORD PTR [rcx]
  41e143:	test   rcx,rcx
  41e146:	je     41e424 <__flatcc_fb_parse@@Base+0x1a84>
  41e14c:	cmp    QWORD PTR [rcx+0x28],rax
  41e150:	ja     41e140 <__flatcc_fb_parse@@Base+0x17a0>
  41e152:	cmp    QWORD PTR [rcx+0x30],rax
  41e156:	jbe    41e140 <__flatcc_fb_parse@@Base+0x17a0>
  41e158:	mov    rdx,QWORD PTR [rcx+0x318]
  41e15f:	jmp    41e42b <__flatcc_fb_parse@@Base+0x1a8b>
  41e164:	mov    rdi,r14
  41e167:	lea    rsi,[rip+0x292b4]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e16e:	lea    rdx,[rip+0x29883]        # 4479f8 <fb_schema_table_deleted@@Base+0xad0>
  41e175:	xor    eax,eax
  41e177:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e17c:	mov    rax,QWORD PTR [rsp+0x8]
  41e181:	inc    DWORD PTR [rax]
  41e183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e18d:	nop    DWORD PTR [rax]
  41e190:	mov    rax,QWORD PTR [rsp+0x10]
  41e195:	mov    rax,QWORD PTR [rax]
  41e198:	mov    rbp,QWORD PTR [rax+0x20]
  41e19c:	test   rbp,rbp
  41e19f:	je     41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41e1a5:	mov    rdi,r14
  41e1a8:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e1ad:	cmp    rbp,0x3b
  41e1b1:	jne    41e190 <__flatcc_fb_parse@@Base+0x17f0>
  41e1b3:	jmp    41eac3 <__flatcc_fb_parse@@Base+0x2123>
  41e1b8:	mov    rdi,r14
  41e1bb:	lea    rsi,[rip+0x29260]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e1c2:	lea    rdx,[rip+0x297d0]        # 447999 <fb_schema_table_deleted@@Base+0xa71>
  41e1c9:	xor    eax,eax
  41e1cb:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e1d0:	mov    rax,QWORD PTR [rsp+0x8]
  41e1d5:	inc    DWORD PTR [rax]
  41e1d7:	nop    WORD PTR [rax+rax*1+0x0]
  41e1e0:	mov    rax,QWORD PTR [rsp+0x10]
  41e1e5:	mov    rax,QWORD PTR [rax]
  41e1e8:	mov    rbp,QWORD PTR [rax+0x20]
  41e1ec:	test   rbp,rbp
  41e1ef:	je     41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41e1f5:	mov    rdi,r14
  41e1f8:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e1fd:	cmp    rbp,0x3b
  41e201:	jne    41e1e0 <__flatcc_fb_parse@@Base+0x1840>
  41e203:	jmp    41eac3 <__flatcc_fb_parse@@Base+0x2123>
  41e208:	mov    rdi,r14
  41e20b:	lea    rsi,[rip+0x29210]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e212:	lea    rdx,[rip+0x29c7c]        # 447e95 <fb_schema_table_deleted@@Base+0xf6d>
  41e219:	xor    eax,eax
  41e21b:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e220:	mov    rax,QWORD PTR [rsp+0x8]
  41e225:	inc    DWORD PTR [rax]
  41e227:	mov    QWORD PTR [r13+0x8],0x0
  41e22f:	jmp    41eaa0 <__flatcc_fb_parse@@Base+0x2100>
  41e234:	mov    rdi,r14
  41e237:	lea    rsi,[rip+0x291e4]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e23e:	lea    rdx,[rip+0x29d02]        # 447f47 <fb_schema_table_deleted@@Base+0x101f>
  41e245:	xor    eax,eax
  41e247:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e24c:	mov    rax,QWORD PTR [rsp+0x8]
  41e251:	inc    DWORD PTR [rax]
  41e253:	mov    QWORD PTR [r13+0x8],0x0
  41e25b:	jmp    41e760 <__flatcc_fb_parse@@Base+0x1dc0>
  41e260:	mov    rdi,r14
  41e263:	lea    rsi,[rip+0x291b8]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e26a:	lea    rdx,[rip+0x2982c]        # 447a9d <fb_schema_table_deleted@@Base+0xb75>
  41e271:	xor    eax,eax
  41e273:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e278:	mov    rax,QWORD PTR [rsp+0x8]
  41e27d:	inc    DWORD PTR [rax]
  41e27f:	mov    rax,QWORD PTR [rsp+0x10]
  41e284:	mov    rax,QWORD PTR [rax]
  41e287:	cmp    QWORD PTR [rax+0x20],0x3b
  41e28c:	je     41e625 <__flatcc_fb_parse@@Base+0x1c85>
  41e292:	test   rax,rax
  41e295:	je     41e307 <__flatcc_fb_parse@@Base+0x1967>
  41e297:	mov    rcx,QWORD PTR [rax]
  41e29a:	xor    r9d,r9d
  41e29d:	lea    rbp,[rip+0x11a9f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e2a4:	mov    r10,rbp
  41e2a7:	test   rcx,rcx
  41e2aa:	je     41e2b3 <__flatcc_fb_parse@@Base+0x1913>
  41e2ac:	mov    r9d,DWORD PTR [rax+0x8]
  41e2b0:	mov    r10,rcx
  41e2b3:	mov    rcx,r14
  41e2b6:	cmp    QWORD PTR [rcx+0x28],rax
  41e2ba:	jbe    41e2ce <__flatcc_fb_parse@@Base+0x192e>
  41e2bc:	nop    DWORD PTR [rax+0x0]
  41e2c0:	mov    rcx,QWORD PTR [rcx]
  41e2c3:	test   rcx,rcx
  41e2c6:	je     41e2dd <__flatcc_fb_parse@@Base+0x193d>
  41e2c8:	cmp    QWORD PTR [rcx+0x28],rax
  41e2cc:	ja     41e2c0 <__flatcc_fb_parse@@Base+0x1920>
  41e2ce:	cmp    QWORD PTR [rcx+0x30],rax
  41e2d2:	jbe    41e2c0 <__flatcc_fb_parse@@Base+0x1920>
  41e2d4:	mov    rdx,QWORD PTR [rcx+0x318]
  41e2db:	jmp    41e2e4 <__flatcc_fb_parse@@Base+0x1944>
  41e2dd:	lea    rdx,[rip+0x11a5f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e2e4:	mov    rcx,QWORD PTR [rax+0x10]
  41e2e8:	mov    r8,QWORD PTR [rax+0x18]
  41e2ec:	mov    rdi,r14
  41e2ef:	lea    rsi,[rip+0x290da]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e2f6:	mov    eax,0x0
  41e2fb:	lea    rbp,[rip+0x297dc]        # 447ade <fb_schema_table_deleted@@Base+0xbb6>
  41e302:	jmp    41e6a2 <__flatcc_fb_parse@@Base+0x1d02>
  41e307:	mov    rdi,r14
  41e30a:	lea    rsi,[rip+0x29111]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e311:	lea    rdx,[rip+0x297c6]        # 447ade <fb_schema_table_deleted@@Base+0xbb6>
  41e318:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41e31d:	mov    rdi,r14
  41e320:	lea    rdx,[rip+0x2960d]        # 447934 <fb_schema_table_deleted@@Base+0xa0c>
  41e327:	mov    rcx,rbp
  41e32a:	xor    r8d,r8d
  41e32d:	xor    r9d,r9d
  41e330:	call   41c3a0 <__flatcc_error_report@@Base>
  41e335:	mov    r12,QWORD PTR [rsp+0x18]
  41e33a:	mov    rdi,QWORD PTR [r14+0x260]
  41e341:	mov    rsi,r12
  41e344:	xor    edx,edx
  41e346:	call   41aae0 <fb_scope_table_find@@Base>
  41e34b:	mov    rbp,rax
  41e34e:	test   rax,rax
  41e351:	jne    41e3c5 <__flatcc_fb_parse@@Base+0x1a25>
  41e353:	mov    rbp,QWORD PTR [r14+0x60]
  41e357:	lea    rax,[rbp+0x40]
  41e35b:	cmp    rax,QWORD PTR [r14+0x50]
  41e35f:	jbe    41e39b <__flatcc_fb_parse@@Base+0x19fb>
  41e361:	mov    edi,0x10000
  41e366:	mov    esi,0x1
  41e36b:	call   406150 <calloc@plt>
  41e370:	test   rax,rax
  41e373:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41e379:	mov    rcx,QWORD PTR [r14+0x58]
  41e37d:	mov    QWORD PTR [rax],rcx
  41e380:	mov    QWORD PTR [r14+0x58],rax
  41e384:	lea    rbp,[rax+0x10]
  41e388:	mov    QWORD PTR [r14+0x60],rbp
  41e38c:	lea    rcx,[rax+0x10000]
  41e393:	mov    QWORD PTR [r14+0x50],rcx
  41e397:	add    rax,0x50
  41e39b:	mov    QWORD PTR [r14+0x60],rax
  41e39f:	mov    QWORD PTR [rbp+0x0],r12
  41e3a3:	mov    rax,QWORD PTR [rsp+0x38]
  41e3a8:	vmovups xmm0,XMMWORD PTR [rax]
  41e3ac:	vmovups XMMWORD PTR [rbp+0x28],xmm0
  41e3b1:	mov    rdi,QWORD PTR [r14+0x260]
  41e3b8:	mov    rsi,rbp
  41e3bb:	mov    edx,0x1
  41e3c0:	call   41aad0 <fb_scope_table_insert_item@@Base>
  41e3c5:	mov    QWORD PTR [r14+0x340],rbp
  41e3cc:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41e3d1:	test   rbx,rbx
  41e3d4:	je     41e54f <__flatcc_fb_parse@@Base+0x1baf>
  41e3da:	mov    rax,QWORD PTR [rbx]
  41e3dd:	xor    r9d,r9d
  41e3e0:	lea    rbp,[rip+0x1195c]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e3e7:	mov    r10,rbp
  41e3ea:	test   rax,rax
  41e3ed:	je     41e3f6 <__flatcc_fb_parse@@Base+0x1a56>
  41e3ef:	mov    r9d,DWORD PTR [rbx+0x8]
  41e3f3:	mov    r10,rax
  41e3f6:	mov    rax,r14
  41e3f9:	cmp    QWORD PTR [rax+0x28],rbx
  41e3fd:	jbe    41e412 <__flatcc_fb_parse@@Base+0x1a72>
  41e3ff:	nop
  41e400:	mov    rax,QWORD PTR [rax]
  41e403:	test   rax,rax
  41e406:	je     41e50f <__flatcc_fb_parse@@Base+0x1b6f>
  41e40c:	cmp    QWORD PTR [rax+0x28],rbx
  41e410:	ja     41e400 <__flatcc_fb_parse@@Base+0x1a60>
  41e412:	cmp    QWORD PTR [rax+0x30],rbx
  41e416:	jbe    41e400 <__flatcc_fb_parse@@Base+0x1a60>
  41e418:	mov    rdx,QWORD PTR [rax+0x318]
  41e41f:	jmp    41e516 <__flatcc_fb_parse@@Base+0x1b76>
  41e424:	lea    rdx,[rip+0x11918]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e42b:	mov    rcx,QWORD PTR [rax+0x10]
  41e42f:	mov    r8,QWORD PTR [rax+0x18]
  41e433:	mov    rdi,r14
  41e436:	lea    rsi,[rip+0x28f93]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e43d:	mov    eax,0x0
  41e442:	lea    rbp,[rip+0x294cb]        # 447914 <fb_schema_table_deleted@@Base+0x9ec>
  41e449:	push   rbp
  41e44a:	push   r10
  41e44c:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e451:	add    rsp,0x10
  41e455:	jmp    41e46f <__flatcc_fb_parse@@Base+0x1acf>
  41e457:	mov    rdi,r14
  41e45a:	lea    rsi,[rip+0x28fc1]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e461:	lea    rdx,[rip+0x294ac]        # 447914 <fb_schema_table_deleted@@Base+0x9ec>
  41e468:	xor    eax,eax
  41e46a:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e46f:	mov    rax,QWORD PTR [rsp+0x8]
  41e474:	inc    DWORD PTR [rax]
  41e476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e480:	mov    rax,QWORD PTR [rsp+0x10]
  41e485:	mov    rax,QWORD PTR [rax]
  41e488:	mov    rbp,QWORD PTR [rax+0x20]
  41e48c:	test   rbp,rbp
  41e48f:	je     41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41e495:	mov    rdi,r14
  41e498:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e49d:	cmp    rbp,0x3b
  41e4a1:	jne    41e480 <__flatcc_fb_parse@@Base+0x1ae0>
  41e4a3:	jmp    41eac3 <__flatcc_fb_parse@@Base+0x2123>
  41e4a8:	lea    rdx,[rip+0x11894]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e4af:	mov    rcx,QWORD PTR [rbp+0x10]
  41e4b3:	mov    r8,QWORD PTR [rbp+0x18]
  41e4b7:	mov    rdi,r14
  41e4ba:	lea    rsi,[rip+0x28f0f]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e4c1:	mov    eax,0x0
  41e4c6:	lea    rbp,[rip+0x295f2]        # 447abf <fb_schema_table_deleted@@Base+0xb97>
  41e4cd:	push   rbp
  41e4ce:	push   r10
  41e4d0:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e4d5:	add    rsp,0x10
  41e4d9:	inc    DWORD PTR [r14+0xd0]
  41e4e0:	jmp    41e27f <__flatcc_fb_parse@@Base+0x18df>
  41e4e5:	lea    rdx,[rip+0x11857]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e4ec:	mov    rcx,QWORD PTR [rax+0x10]
  41e4f0:	mov    r8,QWORD PTR [rax+0x18]
  41e4f4:	mov    rdi,r14
  41e4f7:	lea    rsi,[rip+0x28ed2]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e4fe:	mov    eax,0x0
  41e503:	lea    rbp,[rip+0x294b6]        # 4479c0 <fb_schema_table_deleted@@Base+0xa98>
  41e50a:	jmp    41e6a2 <__flatcc_fb_parse@@Base+0x1d02>
  41e50f:	lea    rdx,[rip+0x1182d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e516:	mov    rcx,QWORD PTR [rbx+0x10]
  41e51a:	mov    r8,QWORD PTR [rbx+0x18]
  41e51e:	mov    rdi,r14
  41e521:	lea    rsi,[rip+0x28ea8]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e528:	mov    eax,0x0
  41e52d:	lea    rbp,[rip+0x29a39]        # 447f6d <fb_schema_table_deleted@@Base+0x1045>
  41e534:	jmp    41e72d <__flatcc_fb_parse@@Base+0x1d8d>
  41e539:	mov    rdi,r14
  41e53c:	lea    rsi,[rip+0x28edf]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e543:	lea    rdx,[rip+0x29476]        # 4479c0 <fb_schema_table_deleted@@Base+0xa98>
  41e54a:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41e54f:	mov    rdi,r14
  41e552:	lea    rsi,[rip+0x28ec9]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e559:	lea    rdx,[rip+0x29a0d]        # 447f6d <fb_schema_table_deleted@@Base+0x1045>
  41e560:	jmp    41e74c <__flatcc_fb_parse@@Base+0x1dac>
  41e565:	test   rax,rax
  41e568:	je     41e7cc <__flatcc_fb_parse@@Base+0x1e2c>
  41e56e:	mov    rcx,QWORD PTR [rax]
  41e571:	xor    r9d,r9d
  41e574:	lea    rbp,[rip+0x117c8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e57b:	mov    r10,rbp
  41e57e:	test   rcx,rcx
  41e581:	je     41e58a <__flatcc_fb_parse@@Base+0x1bea>
  41e583:	mov    r9d,DWORD PTR [rax+0x8]
  41e587:	mov    r10,rcx
  41e58a:	mov    rcx,r14
  41e58d:	cmp    QWORD PTR [rcx+0x28],rax
  41e591:	jbe    41e5b2 <__flatcc_fb_parse@@Base+0x1c12>
  41e593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e59d:	nop    DWORD PTR [rax]
  41e5a0:	mov    rcx,QWORD PTR [rcx]
  41e5a3:	test   rcx,rcx
  41e5a6:	je     41e799 <__flatcc_fb_parse@@Base+0x1df9>
  41e5ac:	cmp    QWORD PTR [rcx+0x28],rax
  41e5b0:	ja     41e5a0 <__flatcc_fb_parse@@Base+0x1c00>
  41e5b2:	cmp    QWORD PTR [rcx+0x30],rax
  41e5b6:	jbe    41e5a0 <__flatcc_fb_parse@@Base+0x1c00>
  41e5b8:	mov    rdx,QWORD PTR [rcx+0x318]
  41e5bf:	jmp    41e7a0 <__flatcc_fb_parse@@Base+0x1e00>
  41e5c4:	lea    rdx,[rip+0x11778]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e5cb:	mov    rcx,QWORD PTR [rbp+0x10]
  41e5cf:	mov    r8,QWORD PTR [rbp+0x18]
  41e5d3:	mov    rdi,r14
  41e5d6:	lea    rsi,[rip+0x28df3]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e5dd:	mov    eax,0x0
  41e5e2:	lea    rbp,[rip+0x29437]        # 447a20 <fb_schema_table_deleted@@Base+0xaf8>
  41e5e9:	push   rbp
  41e5ea:	push   r10
  41e5ec:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e5f1:	add    rsp,0x10
  41e5f5:	jmp    41e60f <__flatcc_fb_parse@@Base+0x1c6f>
  41e5f7:	mov    rdi,r14
  41e5fa:	lea    rsi,[rip+0x28e21]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e601:	lea    rdx,[rip+0x29418]        # 447a20 <fb_schema_table_deleted@@Base+0xaf8>
  41e608:	xor    eax,eax
  41e60a:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e60f:	mov    rax,QWORD PTR [rsp+0x8]
  41e614:	inc    DWORD PTR [rax]
  41e616:	mov    rax,QWORD PTR [rsp+0x10]
  41e61b:	mov    rax,QWORD PTR [rax]
  41e61e:	cmp    QWORD PTR [rax+0x20],0x3b
  41e623:	jne    41e632 <__flatcc_fb_parse@@Base+0x1c92>
  41e625:	mov    rdi,r14
  41e628:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e62d:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41e632:	test   rax,rax
  41e635:	je     41e6b3 <__flatcc_fb_parse@@Base+0x1d13>
  41e63b:	mov    rcx,QWORD PTR [rax]
  41e63e:	xor    r9d,r9d
  41e641:	lea    rbp,[rip+0x116fb]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e648:	mov    r10,rbp
  41e64b:	test   rcx,rcx
  41e64e:	je     41e657 <__flatcc_fb_parse@@Base+0x1cb7>
  41e650:	mov    r9d,DWORD PTR [rax+0x8]
  41e654:	mov    r10,rcx
  41e657:	mov    rcx,r14
  41e65a:	cmp    QWORD PTR [rcx+0x28],rax
  41e65e:	jbe    41e66e <__flatcc_fb_parse@@Base+0x1cce>
  41e660:	mov    rcx,QWORD PTR [rcx]
  41e663:	test   rcx,rcx
  41e666:	je     41e67d <__flatcc_fb_parse@@Base+0x1cdd>
  41e668:	cmp    QWORD PTR [rcx+0x28],rax
  41e66c:	ja     41e660 <__flatcc_fb_parse@@Base+0x1cc0>
  41e66e:	cmp    QWORD PTR [rcx+0x30],rax
  41e672:	jbe    41e660 <__flatcc_fb_parse@@Base+0x1cc0>
  41e674:	mov    rdx,QWORD PTR [rcx+0x318]
  41e67b:	jmp    41e684 <__flatcc_fb_parse@@Base+0x1ce4>
  41e67d:	lea    rdx,[rip+0x116bf]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e684:	mov    rcx,QWORD PTR [rax+0x10]
  41e688:	mov    r8,QWORD PTR [rax+0x18]
  41e68c:	mov    rdi,r14
  41e68f:	lea    rsi,[rip+0x28d3a]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e696:	mov    eax,0x0
  41e69b:	lea    rbp,[rip+0x293a3]        # 447a45 <fb_schema_table_deleted@@Base+0xb1d>
  41e6a2:	push   rbp
  41e6a3:	push   r10
  41e6a5:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e6aa:	add    rsp,0x10
  41e6ae:	jmp    41ce41 <__flatcc_fb_parse@@Base+0x4a1>
  41e6b3:	mov    rdi,r14
  41e6b6:	lea    rsi,[rip+0x28d65]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e6bd:	lea    rdx,[rip+0x29381]        # 447a45 <fb_schema_table_deleted@@Base+0xb1d>
  41e6c4:	jmp    41ce3a <__flatcc_fb_parse@@Base+0x49a>
  41e6c9:	lea    rdx,[rip+0x11673]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e6d0:	mov    rcx,QWORD PTR [rax+0x10]
  41e6d4:	mov    r8,QWORD PTR [rax+0x18]
  41e6d8:	mov    rdi,r14
  41e6db:	lea    rsi,[rip+0x28cee]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e6e2:	mov    eax,0x0
  41e6e7:	lea    rbp,[rip+0x297cc]        # 447eba <fb_schema_table_deleted@@Base+0xf92>
  41e6ee:	push   rbp
  41e6ef:	push   r10
  41e6f1:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e6f6:	add    rsp,0x10
  41e6fa:	inc    DWORD PTR [r14+0xd0]
  41e701:	jmp    41e7eb <__flatcc_fb_parse@@Base+0x1e4b>
  41e706:	lea    rdx,[rip+0x11636]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e70d:	mov    rcx,QWORD PTR [r12+0x10]
  41e712:	mov    r8,QWORD PTR [r12+0x18]
  41e717:	mov    rdi,r14
  41e71a:	lea    rsi,[rip+0x28caf]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e721:	mov    eax,0x0
  41e726:	lea    rbp,[rip+0x2985f]        # 447f8c <fb_schema_table_deleted@@Base+0x1064>
  41e72d:	push   rbp
  41e72e:	push   r10
  41e730:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e735:	add    rsp,0x10
  41e739:	jmp    41e753 <__flatcc_fb_parse@@Base+0x1db3>
  41e73b:	mov    rdi,r14
  41e73e:	lea    rsi,[rip+0x28cdd]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e745:	lea    rdx,[rip+0x29840]        # 447f8c <fb_schema_table_deleted@@Base+0x1064>
  41e74c:	xor    eax,eax
  41e74e:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e753:	mov    rax,QWORD PTR [rsp+0x8]
  41e758:	inc    DWORD PTR [rax]
  41e75a:	nop    WORD PTR [rax+rax*1+0x0]
  41e760:	mov    rax,QWORD PTR [rsp+0x10]
  41e765:	mov    rax,QWORD PTR [rax]
  41e768:	mov    rax,QWORD PTR [rax+0x20]
  41e76c:	test   rax,rax
  41e76f:	je     41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41e775:	cmp    rax,0x7d
  41e779:	je     41eac3 <__flatcc_fb_parse@@Base+0x2123>
  41e77f:	mov    rdi,r14
  41e782:	cmp    rax,0x3b
  41e786:	je     41e78f <__flatcc_fb_parse@@Base+0x1def>
  41e788:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e78d:	jmp    41e760 <__flatcc_fb_parse@@Base+0x1dc0>
  41e78f:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e794:	jmp    41eac3 <__flatcc_fb_parse@@Base+0x2123>
  41e799:	lea    rdx,[rip+0x115a3]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e7a0:	mov    rcx,QWORD PTR [rax+0x10]
  41e7a4:	mov    r8,QWORD PTR [rax+0x18]
  41e7a8:	mov    rdi,r14
  41e7ab:	lea    rsi,[rip+0x28c1e]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41e7b2:	mov    eax,0x0
  41e7b7:	lea    rbp,[rip+0x296fc]        # 447eba <fb_schema_table_deleted@@Base+0xf92>
  41e7be:	push   rbp
  41e7bf:	push   r10
  41e7c1:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e7c6:	add    rsp,0x10
  41e7ca:	jmp    41e7e4 <__flatcc_fb_parse@@Base+0x1e44>
  41e7cc:	mov    rdi,r14
  41e7cf:	lea    rsi,[rip+0x28c4c]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41e7d6:	lea    rdx,[rip+0x296dd]        # 447eba <fb_schema_table_deleted@@Base+0xf92>
  41e7dd:	xor    eax,eax
  41e7df:	call   41c280 <__flatcc_fb_print_error@@Base>
  41e7e4:	mov    rax,QWORD PTR [rsp+0x8]
  41e7e9:	inc    DWORD PTR [rax]
  41e7eb:	mov    rdi,r14
  41e7ee:	call   4239b0 <__flatcc_fb_clear_parser@@Base+0xf80>
  41e7f3:	mov    QWORD PTR [r13+0x38],rax
  41e7f7:	mov    rbx,QWORD PTR [r14+0x48]
  41e7fb:	cmp    QWORD PTR [rbx+0x20],0x7b
  41e800:	jne    41e9c4 <__flatcc_fb_parse@@Base+0x2024>
  41e806:	mov    rdi,r14
  41e809:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e80e:	test   rbx,rbx
  41e811:	je     41eaa0 <__flatcc_fb_parse@@Base+0x2100>
  41e817:	mov    rax,QWORD PTR [rsp+0x10]
  41e81c:	mov    r12,QWORD PTR [rax]
  41e81f:	cmp    QWORD PTR [r12+0x20],0x9
  41e825:	jne    41e966 <__flatcc_fb_parse@@Base+0x1fc6>
  41e82b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e830:	mov    rdi,r14
  41e833:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e838:	test   r12,r12
  41e83b:	je     41eaa0 <__flatcc_fb_parse@@Base+0x2100>
  41e841:	mov    rax,QWORD PTR [rsp+0x8]
  41e846:	cmp    DWORD PTR [rax],0x9
  41e849:	jg     41eaa0 <__flatcc_fb_parse@@Base+0x2100>
  41e84f:	mov    rbp,QWORD PTR [r14+0x60]
  41e853:	lea    rax,[rbp+0xb0]
  41e85a:	cmp    rax,QWORD PTR [r14+0x50]
  41e85e:	jbe    41e89c <__flatcc_fb_parse@@Base+0x1efc>
  41e860:	mov    edi,0x10000
  41e865:	mov    esi,0x1
  41e86a:	call   406150 <calloc@plt>
  41e86f:	test   rax,rax
  41e872:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41e878:	mov    rcx,QWORD PTR [r14+0x58]
  41e87c:	mov    QWORD PTR [rax],rcx
  41e87f:	mov    QWORD PTR [r14+0x58],rax
  41e883:	lea    rbp,[rax+0x10]
  41e887:	mov    QWORD PTR [r14+0x60],rbp
  41e88b:	lea    rcx,[rax+0x10000]
  41e892:	mov    QWORD PTR [r14+0x50],rcx
  41e896:	add    rax,0xc0
  41e89c:	mov    QWORD PTR [r14+0x60],rax
  41e8a0:	mov    rax,QWORD PTR [r13+0x28]
  41e8a4:	mov    QWORD PTR [rbp+0x0],rax
  41e8a8:	mov    WORD PTR [rbp+0x10],0x5
  41e8ae:	mov    QWORD PTR [r13+0x28],rbp
  41e8b2:	mov    rax,QWORD PTR [r14+0x40]
  41e8b6:	test   rax,rax
  41e8b9:	je     41e8d3 <__flatcc_fb_parse@@Base+0x1f33>
  41e8bb:	xor    edx,edx
  41e8bd:	nop    DWORD PTR [rax]
  41e8c0:	mov    rcx,rax
  41e8c3:	mov    rax,QWORD PTR [rax]
  41e8c6:	mov    QWORD PTR [rcx],rdx
  41e8c9:	mov    rdx,rcx
  41e8cc:	test   rax,rax
  41e8cf:	jne    41e8c0 <__flatcc_fb_parse@@Base+0x1f20>
  41e8d1:	jmp    41e8d5 <__flatcc_fb_parse@@Base+0x1f35>
  41e8d3:	xor    ecx,ecx
  41e8d5:	mov    QWORD PTR [rbp+0x68],rcx
  41e8d9:	mov    QWORD PTR [r14+0x40],0x0
  41e8e1:	mov    QWORD PTR [rbp+0x8],r12
  41e8e5:	mov    r12,QWORD PTR [r14+0x48]
  41e8e9:	mov    rax,QWORD PTR [r12+0x20]
  41e8ee:	cmp    rax,0x3d
  41e8f2:	jne    41e926 <__flatcc_fb_parse@@Base+0x1f86>
  41e8f4:	mov    rdi,r14
  41e8f7:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e8fc:	test   r12,r12
  41e8ff:	je     41e919 <__flatcc_fb_parse@@Base+0x1f79>
  41e901:	add    rbp,0x48
  41e905:	mov    rdi,r14
  41e908:	mov    rsi,rbp
  41e90b:	xor    edx,edx
  41e90d:	lea    rcx,[rip+0x295f6]        # 447f0a <fb_schema_table_deleted@@Base+0xfe2>
  41e914:	call   423c40 <__flatcc_fb_clear_parser@@Base+0x1210>
  41e919:	mov    rax,QWORD PTR [rsp+0x10]
  41e91e:	mov    r12,QWORD PTR [rax]
  41e921:	mov    rax,QWORD PTR [r12+0x20]
  41e926:	cmp    rax,0x2c
  41e92a:	jne    41ead0 <__flatcc_fb_parse@@Base+0x2130>
  41e930:	mov    rdi,r14
  41e933:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41e938:	test   r12,r12
  41e93b:	mov    r12,QWORD PTR [r14+0x48]
  41e93f:	mov    rax,QWORD PTR [r12+0x20]
  41e944:	je     41ead0 <__flatcc_fb_parse@@Base+0x2130>
  41e94a:	mov    QWORD PTR [r14+0x40],0x0
  41e952:	cmp    rax,0x9
  41e956:	je     41e830 <__flatcc_fb_parse@@Base+0x1e90>
  41e95c:	cmp    rax,0x7d
  41e960:	je     41eae2 <__flatcc_fb_parse@@Base+0x2142>
  41e966:	test   r12,r12
  41e969:	je     41ea7c <__flatcc_fb_parse@@Base+0x20dc>
  41e96f:	mov    rax,QWORD PTR [r12]
  41e973:	xor    r9d,r9d
  41e976:	lea    rbp,[rip+0x113c6]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e97d:	mov    r10,rbp
  41e980:	test   rax,rax
  41e983:	je     41e98d <__flatcc_fb_parse@@Base+0x1fed>
  41e985:	mov    r9d,DWORD PTR [r12+0x8]
  41e98a:	mov    r10,rax
  41e98d:	mov    rax,r14
  41e990:	cmp    QWORD PTR [rax+0x28],r12
  41e994:	jbe    41e9b2 <__flatcc_fb_parse@@Base+0x2012>
  41e996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9a0:	mov    rax,QWORD PTR [rax]
  41e9a3:	test   rax,rax
  41e9a6:	je     41ea47 <__flatcc_fb_parse@@Base+0x20a7>
  41e9ac:	cmp    QWORD PTR [rax+0x28],r12
  41e9b0:	ja     41e9a0 <__flatcc_fb_parse@@Base+0x2000>
  41e9b2:	cmp    QWORD PTR [rax+0x30],r12
  41e9b6:	jbe    41e9a0 <__flatcc_fb_parse@@Base+0x2000>
  41e9b8:	mov    rdx,QWORD PTR [rax+0x318]
  41e9bf:	jmp    41ea4e <__flatcc_fb_parse@@Base+0x20ae>
  41e9c4:	test   rbx,rbx
  41e9c7:	je     41ea34 <__flatcc_fb_parse@@Base+0x2094>
  41e9c9:	mov    rax,QWORD PTR [rbx]
  41e9cc:	xor    r9d,r9d
  41e9cf:	lea    rbp,[rip+0x1136d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41e9d6:	mov    r10,rbp
  41e9d9:	test   rax,rax
  41e9dc:	je     41e9e5 <__flatcc_fb_parse@@Base+0x2045>
  41e9de:	mov    r9d,DWORD PTR [rbx+0x8]
  41e9e2:	mov    r10,rax
  41e9e5:	mov    rax,r14
  41e9e8:	cmp    QWORD PTR [rax+0x28],rbx
  41e9ec:	jbe    41e9fe <__flatcc_fb_parse@@Base+0x205e>
  41e9ee:	xchg   ax,ax
  41e9f0:	mov    rax,QWORD PTR [rax]
  41e9f3:	test   rax,rax
  41e9f6:	je     41ea0d <__flatcc_fb_parse@@Base+0x206d>
  41e9f8:	cmp    QWORD PTR [rax+0x28],rbx
  41e9fc:	ja     41e9f0 <__flatcc_fb_parse@@Base+0x2050>
  41e9fe:	cmp    QWORD PTR [rax+0x30],rbx
  41ea02:	jbe    41e9f0 <__flatcc_fb_parse@@Base+0x2050>
  41ea04:	mov    rdx,QWORD PTR [rax+0x318]
  41ea0b:	jmp    41ea14 <__flatcc_fb_parse@@Base+0x2074>
  41ea0d:	lea    rdx,[rip+0x1132f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41ea14:	mov    rcx,QWORD PTR [rbx+0x10]
  41ea18:	mov    r8,QWORD PTR [rbx+0x18]
  41ea1c:	mov    rdi,r14
  41ea1f:	lea    rsi,[rip+0x289aa]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41ea26:	mov    eax,0x0
  41ea2b:	lea    rbp,[rip+0x2949f]        # 447ed1 <fb_schema_table_deleted@@Base+0xfa9>
  41ea32:	jmp    41ea6e <__flatcc_fb_parse@@Base+0x20ce>
  41ea34:	mov    rdi,r14
  41ea37:	lea    rsi,[rip+0x289e4]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41ea3e:	lea    rdx,[rip+0x2948c]        # 447ed1 <fb_schema_table_deleted@@Base+0xfa9>
  41ea45:	jmp    41ea8d <__flatcc_fb_parse@@Base+0x20ed>
  41ea47:	lea    rdx,[rip+0x112f5]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41ea4e:	mov    rcx,QWORD PTR [r12+0x10]
  41ea53:	mov    r8,QWORD PTR [r12+0x18]
  41ea58:	mov    rdi,r14
  41ea5b:	lea    rsi,[rip+0x2896e]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41ea62:	mov    eax,0x0
  41ea67:	lea    rbp,[rip+0x29481]        # 447eef <fb_schema_table_deleted@@Base+0xfc7>
  41ea6e:	push   rbp
  41ea6f:	push   r10
  41ea71:	call   41c280 <__flatcc_fb_print_error@@Base>
  41ea76:	add    rsp,0x10
  41ea7a:	jmp    41ea94 <__flatcc_fb_parse@@Base+0x20f4>
  41ea7c:	mov    rdi,r14
  41ea7f:	lea    rsi,[rip+0x2899c]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41ea86:	lea    rdx,[rip+0x29462]        # 447eef <fb_schema_table_deleted@@Base+0xfc7>
  41ea8d:	xor    eax,eax
  41ea8f:	call   41c280 <__flatcc_fb_print_error@@Base>
  41ea94:	mov    rax,QWORD PTR [rsp+0x8]
  41ea99:	inc    DWORD PTR [rax]
  41ea9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eaa0:	mov    rax,QWORD PTR [rsp+0x10]
  41eaa5:	mov    rax,QWORD PTR [rax]
  41eaa8:	mov    rbp,QWORD PTR [rax+0x20]
  41eaac:	test   rbp,rbp
  41eaaf:	je     41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41eab5:	mov    rdi,r14
  41eab8:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41eabd:	cmp    rbp,0x7d
  41eac1:	jne    41eaa0 <__flatcc_fb_parse@@Base+0x2100>
  41eac3:	mov    QWORD PTR [r14+0x40],0x0
  41eacb:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41ead0:	mov    QWORD PTR [r14+0x40],0x0
  41ead8:	cmp    rax,0x7d
  41eadc:	jne    41ebff <__flatcc_fb_parse@@Base+0x225f>
  41eae2:	mov    rdi,r14
  41eae5:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41eaea:	jmp    41ec1a <__flatcc_fb_parse@@Base+0x227a>
  41eaef:	mov    r13,QWORD PTR [rsp+0x20]
  41eaf4:	mov    QWORD PTR [r14+0x40],0x0
  41eafc:	cmp    rax,0x7d
  41eb00:	jne    41eb0c <__flatcc_fb_parse@@Base+0x216c>
  41eb02:	mov    rdi,r14
  41eb05:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  41eb0a:	jmp    41eb27 <__flatcc_fb_parse@@Base+0x2187>
  41eb0c:	mov    rdi,r14
  41eb0f:	mov    rsi,r12
  41eb12:	lea    rdx,[rip+0x294c8]        # 447fe1 <fb_schema_table_deleted@@Base+0x10b9>
  41eb19:	mov    rcx,rbx
  41eb1c:	xor    r8d,r8d
  41eb1f:	xor    r9d,r9d
  41eb22:	call   41c3a0 <__flatcc_error_report@@Base>
  41eb27:	mov    rax,QWORD PTR [r13+0x28]
  41eb2b:	test   rax,rax
  41eb2e:	je     41eb53 <__flatcc_fb_parse@@Base+0x21b3>
  41eb30:	xor    ecx,ecx
  41eb32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb3c:	nop    DWORD PTR [rax+0x0]
  41eb40:	mov    rdx,rax
  41eb43:	mov    rax,QWORD PTR [rax]
  41eb46:	mov    QWORD PTR [rdx],rcx
  41eb49:	mov    rcx,rdx
  41eb4c:	test   rax,rax
  41eb4f:	jne    41eb40 <__flatcc_fb_parse@@Base+0x21a0>
  41eb51:	jmp    41eb55 <__flatcc_fb_parse@@Base+0x21b5>
  41eb53:	xor    edx,edx
  41eb55:	mov    QWORD PTR [r13+0x28],rdx
  41eb59:	mov    rcx,QWORD PTR [r14+0x60]
  41eb5d:	lea    rax,[rcx+0xb0]
  41eb64:	cmp    rax,QWORD PTR [r14+0x50]
  41eb68:	jbe    41ebaa <__flatcc_fb_parse@@Base+0x220a>
  41eb6a:	mov    edi,0x10000
  41eb6f:	mov    esi,0x1
  41eb74:	call   406150 <calloc@plt>
  41eb79:	test   rax,rax
  41eb7c:	je     41ed87 <__flatcc_fb_parse@@Base+0x23e7>
  41eb82:	mov    rcx,QWORD PTR [r14+0x58]
  41eb86:	mov    QWORD PTR [rax],rcx
  41eb89:	mov    QWORD PTR [r14+0x58],rax
  41eb8d:	lea    rcx,[rax+0x10]
  41eb91:	mov    QWORD PTR [r14+0x60],rcx
  41eb95:	lea    rdx,[rax+0x10000]
  41eb9c:	mov    QWORD PTR [r14+0x50],rdx
  41eba0:	add    rax,0xc0
  41eba6:	mov    rdx,QWORD PTR [r13+0x28]
  41ebaa:	mov    QWORD PTR [r14+0x60],rax
  41ebae:	mov    QWORD PTR [rcx],rdx
  41ebb1:	mov    WORD PTR [rcx+0x10],0x5
  41ebb7:	mov    QWORD PTR [r13+0x28],rcx
  41ebbb:	mov    rax,QWORD PTR [r14+0x40]
  41ebbf:	test   rax,rax
  41ebc2:	je     41ebe3 <__flatcc_fb_parse@@Base+0x2243>
  41ebc4:	xor    esi,esi
  41ebc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ebd0:	mov    rdx,rax
  41ebd3:	mov    rax,QWORD PTR [rax]
  41ebd6:	mov    QWORD PTR [rdx],rsi
  41ebd9:	mov    rsi,rdx
  41ebdc:	test   rax,rax
  41ebdf:	jne    41ebd0 <__flatcc_fb_parse@@Base+0x2230>
  41ebe1:	jmp    41ebe5 <__flatcc_fb_parse@@Base+0x2245>
  41ebe3:	xor    edx,edx
  41ebe5:	mov    QWORD PTR [rcx+0x68],rdx
  41ebe9:	mov    QWORD PTR [r14+0x40],0x0
  41ebf1:	mov    rax,QWORD PTR [rsp+0x30]
  41ebf6:	mov    QWORD PTR [rcx+0x8],rax
  41ebfa:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41ebff:	mov    rdi,r14
  41ec02:	mov    rsi,r12
  41ec05:	lea    rdx,[rip+0x29319]        # 447f25 <fb_schema_table_deleted@@Base+0xffd>
  41ec0c:	mov    rcx,rbx
  41ec0f:	xor    r8d,r8d
  41ec12:	xor    r9d,r9d
  41ec15:	call   41c3a0 <__flatcc_error_report@@Base>
  41ec1a:	mov    rax,QWORD PTR [r13+0x28]
  41ec1e:	test   rax,rax
  41ec21:	je     41ec4a <__flatcc_fb_parse@@Base+0x22aa>
  41ec23:	xor    edx,edx
  41ec25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec2f:	nop
  41ec30:	mov    rcx,rax
  41ec33:	mov    rax,QWORD PTR [rax]
  41ec36:	mov    QWORD PTR [rcx],rdx
  41ec39:	mov    rdx,rcx
  41ec3c:	test   rax,rax
  41ec3f:	jne    41ec30 <__flatcc_fb_parse@@Base+0x2290>
  41ec41:	mov    QWORD PTR [r13+0x28],rcx
  41ec45:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41ec4a:	xor    ecx,ecx
  41ec4c:	mov    QWORD PTR [r13+0x28],rcx
  41ec50:	jmp    41ce48 <__flatcc_fb_parse@@Base+0x4a8>
  41ec55:	mov    rax,QWORD PTR [r14+0x200]
  41ec5c:	test   rax,rax
  41ec5f:	je     41ed17 <__flatcc_fb_parse@@Base+0x2377>
  41ec65:	xor    edx,edx
  41ec67:	nop    WORD PTR [rax+rax*1+0x0]
  41ec70:	mov    rcx,rax
  41ec73:	mov    rax,QWORD PTR [rax]
  41ec76:	mov    QWORD PTR [rcx],rdx
  41ec79:	mov    rdx,rcx
  41ec7c:	test   rax,rax
  41ec7f:	jne    41ec70 <__flatcc_fb_parse@@Base+0x22d0>
  41ec81:	jmp    41ed19 <__flatcc_fb_parse@@Base+0x2379>
  41ec86:	mov    rax,QWORD PTR [rsp+0x8]
  41ec8b:	mov    eax,DWORD PTR [rax]
  41ec8d:	test   eax,eax
  41ec8f:	jne    41ed78 <__flatcc_fb_parse@@Base+0x23d8>
  41ec95:	test   r15,r15
  41ec98:	je     41ed55 <__flatcc_fb_parse@@Base+0x23b5>
  41ec9e:	mov    rax,QWORD PTR [r15]
  41eca1:	xor    r9d,r9d
  41eca4:	lea    rdx,[rip+0x11098]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  41ecab:	mov    rbp,rdx
  41ecae:	test   rax,rax
  41ecb1:	je     41ecba <__flatcc_fb_parse@@Base+0x231a>
  41ecb3:	mov    r9d,DWORD PTR [r15+0x8]
  41ecb7:	mov    rbp,rax
  41ecba:	mov    rax,r14
  41ecbd:	cmp    QWORD PTR [rax+0x28],r15
  41ecc1:	jbe    41ecde <__flatcc_fb_parse@@Base+0x233e>
  41ecc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eccd:	nop    DWORD PTR [rax]
  41ecd0:	mov    rax,QWORD PTR [rax]
  41ecd3:	test   rax,rax
  41ecd6:	je     41eceb <__flatcc_fb_parse@@Base+0x234b>
  41ecd8:	cmp    QWORD PTR [rax+0x28],r15
  41ecdc:	ja     41ecd0 <__flatcc_fb_parse@@Base+0x2330>
  41ecde:	cmp    QWORD PTR [rax+0x30],r15
  41ece2:	jbe    41ecd0 <__flatcc_fb_parse@@Base+0x2330>
  41ece4:	mov    rdx,QWORD PTR [rax+0x318]
  41eceb:	mov    rcx,QWORD PTR [r15+0x10]
  41ecef:	mov    r8,QWORD PTR [r15+0x18]
  41ecf3:	lea    r10,[rip+0x289a4]        # 44769e <fb_schema_table_deleted@@Base+0x776>
  41ecfa:	lea    rsi,[rip+0x286cf]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  41ed01:	mov    rdi,r14
  41ed04:	mov    eax,0x0
  41ed09:	push   r10
  41ed0b:	push   rbp
  41ed0c:	call   41c280 <__flatcc_fb_print_error@@Base>
  41ed11:	add    rsp,0x10
  41ed15:	jmp    41ed6d <__flatcc_fb_parse@@Base+0x23cd>
  41ed17:	xor    ecx,ecx
  41ed19:	mov    QWORD PTR [r14+0x200],rcx
  41ed20:	mov    rax,QWORD PTR [r14+0x238]
  41ed27:	test   rax,rax
  41ed2a:	je     41ed43 <__flatcc_fb_parse@@Base+0x23a3>
  41ed2c:	xor    edx,edx
  41ed2e:	xchg   ax,ax
  41ed30:	mov    rcx,rax
  41ed33:	mov    rax,QWORD PTR [rax]
  41ed36:	mov    QWORD PTR [rcx],rdx
  41ed39:	mov    rdx,rcx
  41ed3c:	test   rax,rax
  41ed3f:	jne    41ed30 <__flatcc_fb_parse@@Base+0x2390>
  41ed41:	jmp    41ed45 <__flatcc_fb_parse@@Base+0x23a5>
  41ed43:	xor    ecx,ecx
  41ed45:	mov    QWORD PTR [r14+0x238],rcx
  41ed4c:	mov    eax,DWORD PTR [r14+0xd0]
  41ed53:	jmp    41ed78 <__flatcc_fb_parse@@Base+0x23d8>
  41ed55:	lea    rsi,[rip+0x286c6]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  41ed5c:	lea    rdx,[rip+0x2893b]        # 44769e <fb_schema_table_deleted@@Base+0x776>
  41ed63:	mov    rdi,r14
  41ed66:	xor    eax,eax
  41ed68:	call   41c280 <__flatcc_fb_print_error@@Base>
  41ed6d:	mov    rcx,QWORD PTR [rsp+0x8]
  41ed72:	mov    eax,DWORD PTR [rcx]
  41ed74:	inc    eax
  41ed76:	mov    DWORD PTR [rcx],eax
  41ed78:	add    rsp,0x58
  41ed7c:	pop    rbx
  41ed7d:	pop    r12
  41ed7f:	pop    r13
  41ed81:	pop    r14
  41ed83:	pop    r15
  41ed85:	pop    rbp
  41ed86:	ret    
  41ed87:	mov    rax,QWORD PTR [rip+0x3326a]        # 451ff8 <stderr@GLIBC_2.2.5>
  41ed8e:	mov    rcx,QWORD PTR [rax]
  41ed91:	lea    rdi,[rip+0x10a84]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  41ed98:	mov    esi,0x22
  41ed9d:	mov    edx,0x1
  41eda2:	call   406230 <fwrite@plt>
  41eda7:	mov    edi,0x1
  41edac:	call   406220 <exit@plt>
  41edb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41edbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41edc0:	push   rbp
  41edc1:	push   r15
  41edc3:	push   r14
  41edc5:	push   r13
  41edc7:	push   r12
  41edc9:	push   rbx
  41edca:	sub    rsp,0x68
  41edce:	mov    r12,rdi
  41edd1:	lea    r13,[rdi+rsi*1]
  41edd5:	test   rsi,rsi
  41edd8:	mov    QWORD PTR [rsp+0x38],rdx
  41eddd:	je     422654 <__flatcc_fb_parse@@Base+0x5cb4>
  41ede3:	lea    rax,[rdx+0x28]
  41ede7:	mov    QWORD PTR [rsp+0x8],rax
  41edec:	lea    rax,[rdx+0x38]
  41edf0:	mov    QWORD PTR [rsp+0x30],rax
  41edf5:	lea    r9,[rdx+0x30]
  41edf9:	lea    r10,[rdx+0x48]
  41edfd:	lea    r8,[rdx+0x78]
  41ee01:	lea    r11,[rdx+0x70]
  41ee05:	lea    r15,[rsi+r12*1-0x1]
  41ee0a:	lea    rax,[r13-0x2]
  41ee0e:	mov    QWORD PTR [rsp+0x50],rax
  41ee13:	lea    rax,[r13-0x1]
  41ee17:	mov    QWORD PTR [rsp+0x60],rax
  41ee1c:	mov    QWORD PTR [rsp+0x28],r10
  41ee21:	mov    QWORD PTR [rsp+0x20],r11
  41ee26:	mov    QWORD PTR [rsp+0x18],r8
  41ee2b:	mov    QWORD PTR [rsp+0x10],r9
  41ee30:	mov    QWORD PTR [rsp+0x48],r13
  41ee35:	mov    QWORD PTR [rsp+0x40],r15
  41ee3a:	jmp    41eea3 <__flatcc_fb_parse@@Base+0x2503>
  41ee3c:	nop    DWORD PTR [rax+0x0]
  41ee40:	movsxd rcx,DWORD PTR [rbp+0x0]
  41ee44:	lea    rcx,[rcx+rcx*4]
  41ee48:	lea    rcx,[rax+rcx*8]
  41ee4c:	mov    r9,QWORD PTR [rsp+0x10]
  41ee51:	mov    QWORD PTR [r9],rcx
  41ee54:	lea    rax,[rax+r13*8]
  41ee58:	mov    r10,QWORD PTR [rsp+0x28]
  41ee5d:	mov    QWORD PTR [r10],rax
  41ee60:	mov    r11,QWORD PTR [rsp+0x20]
  41ee65:	mov    r8,QWORD PTR [rsp+0x18]
  41ee6a:	mov    QWORD PTR [rax+0x20],r15
  41ee6e:	mov    QWORD PTR [rax],r12
  41ee71:	mov    QWORD PTR [rax+0x8],r14
  41ee75:	mov    rcx,QWORD PTR [r8]
  41ee78:	mov    QWORD PTR [rax+0x10],rcx
  41ee7c:	sub    r12,QWORD PTR [r11]
  41ee7f:	inc    r12
  41ee82:	mov    QWORD PTR [rax+0x18],r12
  41ee86:	add    rax,0x28
  41ee8a:	mov    QWORD PTR [r10],rax
  41ee8d:	mov    r13,QWORD PTR [rsp+0x48]
  41ee92:	mov    r15,QWORD PTR [rsp+0x40]
  41ee97:	mov    r12,rbx
  41ee9a:	cmp    rbx,r13
  41ee9d:	je     42266a <__flatcc_fb_parse@@Base+0x5cca>
  41eea3:	movsx  eax,BYTE PTR [r12]
  41eea8:	movsxd rbp,eax
  41eeab:	cmp    ebp,0x7e
  41eeae:	ja     42078c <__flatcc_fb_parse@@Base+0x3dec>
  41eeb4:	lea    rcx,[rip+0x28109]        # 446fc4 <fb_schema_table_deleted@@Base+0x9c>
  41eebb:	movsxd rax,DWORD PTR [rcx+rax*4]
  41eebf:	add    rax,rcx
  41eec2:	jmp    rax
  41eec4:	shl    rbp,0x8
  41eec8:	lea    rbx,[r12+0x1]
  41eecd:	cmp    rbx,r13
  41eed0:	je     41ef20 <__flatcc_fb_parse@@Base+0x2580>
  41eed2:	movzx  eax,BYTE PTR [rbx]
  41eed5:	lea    rdx,[rip+0x283e4]        # 4472c0 <fb_schema_table_deleted@@Base+0x398>
  41eedc:	cmp    BYTE PTR [rax+rdx*1],0x0
  41eee0:	je     41ef23 <__flatcc_fb_parse@@Base+0x2583>
  41eee2:	movsx  rcx,al
  41eee6:	shl    rcx,0x10
  41eeea:	or     rcx,rbp
  41eeed:	lea    rbx,[r12+0x2]
  41eef2:	mov    rsi,QWORD PTR [rsp+0x30]
  41eef7:	nop    WORD PTR [rax+rax*1+0x0]
  41ef00:	cmp    r13,rbx
  41ef03:	je     41ef2d <__flatcc_fb_parse@@Base+0x258d>
  41ef05:	movzx  eax,BYTE PTR [rbx]
  41ef08:	inc    rbx
  41ef0b:	cmp    BYTE PTR [rax+rdx*1],0x0
  41ef0f:	jne    41ef00 <__flatcc_fb_parse@@Base+0x2560>
  41ef11:	dec    rbx
  41ef14:	jmp    41ef30 <__flatcc_fb_parse@@Base+0x2590>
  41ef16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef20:	mov    rbx,r13
  41ef23:	mov    rcx,rbp
  41ef26:	mov    rsi,QWORD PTR [rsp+0x30]
  41ef2b:	jmp    41ef30 <__flatcc_fb_parse@@Base+0x2590>
  41ef2d:	mov    rbx,r13
  41ef30:	movsx  rdx,BYTE PTR [rbx-0x1]
  41ef35:	shl    rdx,0x18
  41ef39:	mov    r14,rbx
  41ef3c:	sub    r14,r12
  41ef3f:	movzx  eax,r14b
  41ef43:	add    rax,0x30
  41ef47:	or     rax,rcx
  41ef4a:	or     rax,rdx
  41ef4d:	cmp    rax,0x6570723a
  41ef53:	mov    rdx,QWORD PTR [rsp+0x8]
  41ef58:	jle    41efc0 <__flatcc_fb_parse@@Base+0x2620>
  41ef5a:	cmp    rax,0x6e69663d
  41ef60:	jg     41f038 <__flatcc_fb_parse@@Base+0x2698>
  41ef66:	cmp    rax,0x676c7534
  41ef6c:	jle    41f21b <__flatcc_fb_parse@@Base+0x287b>
  41ef72:	cmp    rax,0x67747335
  41ef78:	jle    41f3e4 <__flatcc_fb_parse@@Base+0x2a44>
  41ef7e:	cmp    rax,0x67747336
  41ef84:	je     41f7fb <__flatcc_fb_parse@@Base+0x2e5b>
  41ef8a:	cmp    rax,0x6c6f6234
  41ef90:	je     41f826 <__flatcc_fb_parse@@Base+0x2e86>
  41ef96:	cmp    rax,0x6d6e6534
  41ef9c:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41efa2:	cmp    DWORD PTR [r12],0x6d756e65
  41efaa:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41efb0:	mov    r15,0xfffffffffffffc1b
  41efb7:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41efbc:	nop    DWORD PTR [rax+0x0]
  41efc0:	cmp    rax,0x38697534
  41efc6:	jle    41f09c <__flatcc_fb_parse@@Base+0x26fc>
  41efcc:	cmp    rax,0x65617434
  41efd2:	jle    41f259 <__flatcc_fb_parse@@Base+0x28b9>
  41efd8:	cmp    rax,0x656e6936
  41efde:	jle    41f416 <__flatcc_fb_parse@@Base+0x2a76>
  41efe4:	cmp    rax,0x656e6937
  41efea:	je     41f840 <__flatcc_fb_parse@@Base+0x2ea0>
  41eff0:	cmp    rax,0x656f6436
  41eff6:	je     41f86b <__flatcc_fb_parse@@Base+0x2ecb>
  41effc:	cmp    rax,0x656f7239
  41f002:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f008:	mov    rax,QWORD PTR [r12]
  41f00c:	movabs rcx,0x7079745f746f6f72
  41f016:	xor    rax,rcx
  41f019:	movzx  ecx,BYTE PTR [r12+0x8]
  41f01f:	xor    rcx,0x65
  41f023:	or     rcx,rax
  41f026:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f02c:	mov    r15,0xfffffffffffffc38
  41f033:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f038:	cmp    rax,0x74697533
  41f03e:	jle    41f297 <__flatcc_fb_parse@@Base+0x28f7>
  41f044:	cmp    rax,0x746e6932
  41f04a:	jle    41f456 <__flatcc_fb_parse@@Base+0x2ab6>
  41f050:	cmp    rax,0x74747336
  41f056:	je     41f896 <__flatcc_fb_parse@@Base+0x2ef6>
  41f05c:	cmp    rax,0x74737536
  41f062:	je     41f8c1 <__flatcc_fb_parse@@Base+0x2f21>
  41f068:	cmp    rax,0x746e6933
  41f06e:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f074:	movzx  eax,WORD PTR [r12]
  41f079:	xor    eax,0x6e69
  41f07e:	movzx  ecx,BYTE PTR [r12+0x2]
  41f084:	xor    ecx,0x74
  41f087:	or     cx,ax
  41f08a:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f090:	mov    r15,0xfffffffffffffc1e
  41f097:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f09c:	cmp    rax,0x346c6636
  41f0a2:	jg     41f2e3 <__flatcc_fb_parse@@Base+0x2943>
  41f0a8:	cmp    rax,0x326e6934
  41f0ae:	jg     41f550 <__flatcc_fb_parse@@Base+0x2bb0>
  41f0b4:	cmp    rax,0x32697536
  41f0ba:	je     41f8ec <__flatcc_fb_parse@@Base+0x2f4c>
  41f0c0:	cmp    rax,0x326c6637
  41f0c6:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f0cc:	mov    eax,DWORD PTR [r12]
  41f0d0:	mov    ecx,0x616f6c66
  41f0d5:	xor    eax,ecx
  41f0d7:	mov    ecx,DWORD PTR [r12+0x3]
  41f0dc:	mov    edi,0x32337461
  41f0e1:	xor    ecx,edi
  41f0e3:	or     ecx,eax
  41f0e5:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f0eb:	mov    r15,0xfffffffffffffc1c
  41f0f2:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f0f7:	mov    rax,QWORD PTR [rsp+0x8]
  41f0fc:	mov    rdi,QWORD PTR [rax]
  41f0ff:	mov    rsi,QWORD PTR [rsp+0x30]
  41f104:	movsxd rcx,DWORD PTR [rsi]
  41f107:	lea    r14,[rcx+rcx*4]
  41f10b:	lea    rdx,[rdi+r14*8]
  41f10f:	mov    QWORD PTR [r9],rdx
  41f112:	mov    rax,QWORD PTR [r10]
  41f115:	cmp    rax,rdx
  41f118:	jne    41f175 <__flatcc_fb_parse@@Base+0x27d5>
  41f11a:	lea    eax,[rcx+rcx*1]
  41f11d:	test   ecx,ecx
  41f11f:	mov    ecx,0x400
  41f124:	cmove  eax,ecx
  41f127:	mov    DWORD PTR [rsi],eax
  41f129:	cdqe   
  41f12b:	shl    rax,0x3
  41f12f:	mov    rbx,rsi
  41f132:	lea    rsi,[rax+rax*4]
  41f136:	call   4061e0 <realloc@plt>
  41f13b:	mov    rcx,QWORD PTR [rsp+0x8]
  41f140:	mov    QWORD PTR [rcx],rax
  41f143:	test   rax,rax
  41f146:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41f14c:	movsxd rcx,DWORD PTR [rbx]
  41f14f:	lea    rcx,[rcx+rcx*4]
  41f153:	lea    rcx,[rax+rcx*8]
  41f157:	mov    r9,QWORD PTR [rsp+0x10]
  41f15c:	mov    QWORD PTR [r9],rcx
  41f15f:	lea    rax,[rax+r14*8]
  41f163:	mov    r10,QWORD PTR [rsp+0x28]
  41f168:	mov    QWORD PTR [r10],rax
  41f16b:	mov    r11,QWORD PTR [rsp+0x20]
  41f170:	mov    r8,QWORD PTR [rsp+0x18]
  41f175:	lea    rbx,[r12+0x1]
  41f17a:	mov    QWORD PTR [rax+0x20],rbp
  41f17e:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  41f183:	mov    rbx,r12
  41f186:	mov    rsi,QWORD PTR [rsp+0x30]
  41f18b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f190:	movzx  eax,BYTE PTR [rbx+0x1]
  41f194:	inc    rbx
  41f197:	lea    ecx,[rax-0x30]
  41f19a:	cmp    cl,0xa
  41f19d:	jb     41f190 <__flatcc_fb_parse@@Base+0x27f0>
  41f19f:	mov    rbp,rbx
  41f1a2:	cmp    al,0x2e
  41f1a4:	jne    41f1c5 <__flatcc_fb_parse@@Base+0x2825>
  41f1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1b0:	cmp    r15,rbx
  41f1b3:	je     42039e <__flatcc_fb_parse@@Base+0x39fe>
  41f1b9:	mov    al,BYTE PTR [rbx+0x1]
  41f1bc:	inc    rbx
  41f1bf:	add    al,0xd0
  41f1c1:	cmp    al,0xa
  41f1c3:	jb     41f1b0 <__flatcc_fb_parse@@Base+0x2810>
  41f1c5:	cmp    rbx,r13
  41f1c8:	je     42039e <__flatcc_fb_parse@@Base+0x39fe>
  41f1ce:	mov    al,BYTE PTR [rbx]
  41f1d0:	or     al,0x20
  41f1d2:	cmp    al,0x65
  41f1d4:	jne    4203a1 <__flatcc_fb_parse@@Base+0x3a01>
  41f1da:	lea    rax,[rbx+0x1]
  41f1de:	mov    rcx,r13
  41f1e1:	cmp    rax,r13
  41f1e4:	je     41f1f8 <__flatcc_fb_parse@@Base+0x2858>
  41f1e6:	mov    dl,BYTE PTR [rax]
  41f1e8:	mov    rcx,rax
  41f1eb:	cmp    dl,0x2b
  41f1ee:	je     41f1f8 <__flatcc_fb_parse@@Base+0x2858>
  41f1f0:	cmp    dl,0x2d
  41f1f3:	je     41f1f8 <__flatcc_fb_parse@@Base+0x2858>
  41f1f5:	mov    rcx,rbx
  41f1f8:	mov    rbx,rcx
  41f1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f200:	cmp    r15,rbx
  41f203:	je     42039e <__flatcc_fb_parse@@Base+0x39fe>
  41f209:	movzx  eax,BYTE PTR [rbx+0x1]
  41f20d:	inc    rbx
  41f210:	add    al,0xd0
  41f212:	cmp    al,0xa
  41f214:	jb     41f200 <__flatcc_fb_parse@@Base+0x2860>
  41f216:	jmp    4203a1 <__flatcc_fb_parse@@Base+0x3a01>
  41f21b:	cmp    rax,0x65746138
  41f221:	jg     41f496 <__flatcc_fb_parse@@Base+0x2af6>
  41f227:	cmp    rax,0x6570723b
  41f22d:	je     41f691 <__flatcc_fb_parse@@Base+0x2cf1>
  41f233:	cmp    rax,0x65727434
  41f239:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f23f:	cmp    DWORD PTR [r12],0x65757274
  41f247:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f24d:	mov    r15,0xfffffffffffffc24
  41f254:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f259:	cmp    rax,0x65616634
  41f25f:	jg     41f4c8 <__flatcc_fb_parse@@Base+0x2b28>
  41f265:	cmp    rax,0x38697535
  41f26b:	je     41f6c9 <__flatcc_fb_parse@@Base+0x2d29>
  41f271:	cmp    rax,0x386e6934
  41f277:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f27d:	cmp    DWORD PTR [r12],0x38746e69
  41f285:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f28b:	mov    r15,0xfffffffffffffc1f
  41f292:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f297:	cmp    rax,0x7269663e
  41f29d:	jg     41f510 <__flatcc_fb_parse@@Base+0x2b70>
  41f2a3:	cmp    rax,0x6e69663e
  41f2a9:	je     41f6f1 <__flatcc_fb_parse@@Base+0x2d51>
  41f2af:	cmp    rax,0x6e6e7535
  41f2b5:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f2bb:	mov    eax,DWORD PTR [r12]
  41f2bf:	mov    ecx,0x6f696e75
  41f2c4:	xor    eax,ecx
  41f2c6:	movzx  ecx,BYTE PTR [r12+0x4]
  41f2cc:	xor    ecx,0x6e
  41f2cf:	or     ecx,eax
  41f2d1:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f2d7:	mov    r15,0xfffffffffffffc30
  41f2de:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f2e3:	cmp    rax,0x36697535
  41f2e9:	jg     41f593 <__flatcc_fb_parse@@Base+0x2bf3>
  41f2ef:	cmp    rax,0x346c6637
  41f2f5:	je     41f917 <__flatcc_fb_parse@@Base+0x2f77>
  41f2fb:	cmp    rax,0x346e6935
  41f301:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f307:	mov    eax,DWORD PTR [r12]
  41f30b:	mov    ecx,0x36746e69
  41f310:	xor    eax,ecx
  41f312:	movzx  ecx,BYTE PTR [r12+0x4]
  41f318:	xor    ecx,0x34
  41f31b:	or     ecx,eax
  41f31d:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f323:	mov    r15,0xfffffffffffffc22
  41f32a:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f32f:	lea    rbx,[r12+0x1]
  41f334:	cmp    rbx,r13
  41f337:	mov    rsi,QWORD PTR [rsp+0x30]
  41f33c:	je     41f5d3 <__flatcc_fb_parse@@Base+0x2c33>
  41f342:	cmp    BYTE PTR [rbx],0x3d
  41f345:	jne    41f5d3 <__flatcc_fb_parse@@Base+0x2c33>
  41f34b:	mov    rax,QWORD PTR [rsp+0x8]
  41f350:	mov    rdi,QWORD PTR [rax]
  41f353:	movsxd rcx,DWORD PTR [rsi]
  41f356:	lea    r14,[rcx+rcx*4]
  41f35a:	lea    rdx,[rdi+r14*8]
  41f35e:	mov    QWORD PTR [r9],rdx
  41f361:	mov    rax,QWORD PTR [r10]
  41f364:	cmp    rax,rdx
  41f367:	jne    41f3c4 <__flatcc_fb_parse@@Base+0x2a24>
  41f369:	lea    eax,[rcx+rcx*1]
  41f36c:	test   ecx,ecx
  41f36e:	mov    ecx,0x400
  41f373:	cmove  eax,ecx
  41f376:	mov    DWORD PTR [rsi],eax
  41f378:	cdqe   
  41f37a:	shl    rax,0x3
  41f37e:	mov    rbx,rsi
  41f381:	lea    rsi,[rax+rax*4]
  41f385:	call   4061e0 <realloc@plt>
  41f38a:	mov    rcx,QWORD PTR [rsp+0x8]
  41f38f:	mov    QWORD PTR [rcx],rax
  41f392:	test   rax,rax
  41f395:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41f39b:	movsxd rcx,DWORD PTR [rbx]
  41f39e:	lea    rcx,[rcx+rcx*4]
  41f3a2:	lea    rcx,[rax+rcx*8]
  41f3a6:	mov    r9,QWORD PTR [rsp+0x10]
  41f3ab:	mov    QWORD PTR [r9],rcx
  41f3ae:	lea    rax,[rax+r14*8]
  41f3b2:	mov    r10,QWORD PTR [rsp+0x28]
  41f3b7:	mov    QWORD PTR [r10],rax
  41f3ba:	mov    r11,QWORD PTR [rsp+0x20]
  41f3bf:	mov    r8,QWORD PTR [rsp+0x18]
  41f3c4:	lea    rbx,[r12+0x2]
  41f3c9:	or     rbp,0x3d00
  41f3d0:	mov    QWORD PTR [rax+0x20],rbp
  41f3d4:	mov    QWORD PTR [rax],r12
  41f3d7:	mov    QWORD PTR [rax+0x8],0x2
  41f3df:	jmp    421b83 <__flatcc_fb_parse@@Base+0x51e3>
  41f3e4:	cmp    rax,0x676c7535
  41f3ea:	je     41f729 <__flatcc_fb_parse@@Base+0x2d89>
  41f3f0:	cmp    rax,0x676f6c34
  41f3f6:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f3fc:	cmp    DWORD PTR [r12],0x676e6f6c
  41f404:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f40a:	mov    r15,0xfffffffffffffc23
  41f411:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f416:	cmp    rax,0x65617435
  41f41c:	je     41f93b <__flatcc_fb_parse@@Base+0x2f9b>
  41f422:	cmp    rax,0x65627535
  41f428:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f42e:	mov    eax,DWORD PTR [r12]
  41f432:	mov    ecx,0x74796275
  41f437:	xor    eax,ecx
  41f439:	movzx  ecx,BYTE PTR [r12+0x4]
  41f43f:	xor    ecx,0x65
  41f442:	or     ecx,eax
  41f444:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f44a:	mov    r15,0xfffffffffffffc2a
  41f451:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f456:	cmp    rax,0x74697534
  41f45c:	je     41f751 <__flatcc_fb_parse@@Base+0x2db1>
  41f462:	cmp    rax,0x746c6635
  41f468:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f46e:	mov    eax,DWORD PTR [r12]
  41f472:	mov    ecx,0x616f6c66
  41f477:	xor    eax,ecx
  41f479:	movzx  ecx,BYTE PTR [r12+0x4]
  41f47f:	xor    ecx,0x74
  41f482:	or     ecx,eax
  41f484:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f48a:	mov    r15,0xfffffffffffffc27
  41f491:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f496:	cmp    rax,0x65746139
  41f49c:	je     41f76b <__flatcc_fb_parse@@Base+0x2dcb>
  41f4a2:	cmp    rax,0x65796234
  41f4a8:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f4ae:	cmp    DWORD PTR [r12],0x65747962
  41f4b6:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f4bc:	mov    r15,0xfffffffffffffc1a
  41f4c3:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f4c8:	cmp    rax,0x65616635
  41f4ce:	je     41f79b <__flatcc_fb_parse@@Base+0x2dfb>
  41f4d4:	cmp    rax,0x65616e39
  41f4da:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f4e0:	mov    rax,QWORD PTR [r12]
  41f4e4:	movabs rcx,0x63617073656d616e
  41f4ee:	xor    rax,rcx
  41f4f1:	movzx  ecx,BYTE PTR [r12+0x8]
  41f4f7:	xor    rcx,0x65
  41f4fb:	or     rcx,rax
  41f4fe:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f504:	mov    r15,0xfffffffffffffc37
  41f50b:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f510:	cmp    rax,0x7269663f
  41f516:	je     41f7c3 <__flatcc_fb_parse@@Base+0x2e23>
  41f51c:	cmp    rax,0x74687335
  41f522:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f528:	mov    eax,DWORD PTR [r12]
  41f52c:	mov    ecx,0x726f6873
  41f531:	xor    eax,ecx
  41f533:	movzx  ecx,BYTE PTR [r12+0x4]
  41f539:	xor    ecx,0x74
  41f53c:	or     ecx,eax
  41f53e:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f544:	mov    r15,0xfffffffffffffc28
  41f54b:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f550:	cmp    rax,0x326e6935
  41f556:	je     41f95c <__flatcc_fb_parse@@Base+0x2fbc>
  41f55c:	cmp    rax,0x34697536
  41f562:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f568:	mov    eax,DWORD PTR [r12]
  41f56c:	mov    ecx,0x746e6975
  41f571:	xor    eax,ecx
  41f573:	movzx  ecx,WORD PTR [r12+0x4]
  41f579:	xor    ecx,0x3436
  41f57f:	or     ecx,eax
  41f581:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f587:	mov    r15,0xfffffffffffffc2e
  41f58e:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f593:	cmp    rax,0x36697536
  41f599:	je     41f97d <__flatcc_fb_parse@@Base+0x2fdd>
  41f59f:	cmp    rax,0x366e6935
  41f5a5:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f5ab:	mov    eax,DWORD PTR [r12]
  41f5af:	mov    ecx,0x31746e69
  41f5b4:	xor    eax,ecx
  41f5b6:	movzx  ecx,BYTE PTR [r12+0x4]
  41f5bc:	xor    ecx,0x36
  41f5bf:	or     ecx,eax
  41f5c1:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f5c7:	mov    r15,0xfffffffffffffc20
  41f5ce:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f5d3:	mov    rax,QWORD PTR [rsp+0x8]
  41f5d8:	mov    rdi,QWORD PTR [rax]
  41f5db:	movsxd rcx,DWORD PTR [rsi]
  41f5de:	lea    r14,[rcx+rcx*4]
  41f5e2:	lea    rdx,[rdi+r14*8]
  41f5e6:	mov    QWORD PTR [r9],rdx
  41f5e9:	mov    rax,QWORD PTR [r10]
  41f5ec:	cmp    rax,rdx
  41f5ef:	jne    41f651 <__flatcc_fb_parse@@Base+0x2cb1>
  41f5f1:	lea    eax,[rcx+rcx*1]
  41f5f4:	test   ecx,ecx
  41f5f6:	mov    ecx,0x400
  41f5fb:	cmove  eax,ecx
  41f5fe:	mov    DWORD PTR [rsi],eax
  41f600:	cdqe   
  41f602:	shl    rax,0x3
  41f606:	mov    r15,rsi
  41f609:	lea    rsi,[rax+rax*4]
  41f60d:	call   4061e0 <realloc@plt>
  41f612:	mov    rcx,QWORD PTR [rsp+0x8]
  41f617:	mov    QWORD PTR [rcx],rax
  41f61a:	test   rax,rax
  41f61d:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41f623:	movsxd rcx,DWORD PTR [r15]
  41f626:	lea    rcx,[rcx+rcx*4]
  41f62a:	lea    rcx,[rax+rcx*8]
  41f62e:	mov    r9,QWORD PTR [rsp+0x10]
  41f633:	mov    QWORD PTR [r9],rcx
  41f636:	lea    rax,[rax+r14*8]
  41f63a:	mov    r10,QWORD PTR [rsp+0x28]
  41f63f:	mov    QWORD PTR [r10],rax
  41f642:	mov    r11,QWORD PTR [rsp+0x20]
  41f647:	mov    r8,QWORD PTR [rsp+0x18]
  41f64c:	mov    r15,QWORD PTR [rsp+0x40]
  41f651:	mov    QWORD PTR [rax+0x20],rbp
  41f655:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  41f65a:	inc    r12
  41f65d:	cmp    r12,r13
  41f660:	jne    41f67c <__flatcc_fb_parse@@Base+0x2cdc>
  41f662:	jmp    42266a <__flatcc_fb_parse@@Base+0x5cca>
  41f667:	nop    WORD PTR [rax+rax*1+0x0]
  41f670:	inc    r12
  41f673:	cmp    r13,r12
  41f676:	je     42266a <__flatcc_fb_parse@@Base+0x5cca>
  41f67c:	movzx  eax,BYTE PTR [r12]
  41f681:	cmp    al,0x20
  41f683:	je     41f670 <__flatcc_fb_parse@@Base+0x2cd0>
  41f685:	cmp    al,0x9
  41f687:	je     41f670 <__flatcc_fb_parse@@Base+0x2cd0>
  41f689:	mov    rbx,r12
  41f68c:	jmp    41ee97 <__flatcc_fb_parse@@Base+0x24f7>
  41f691:	mov    rax,QWORD PTR [r12]
  41f695:	movabs rcx,0x767265735f637072
  41f69f:	xor    rax,rcx
  41f6a2:	mov    rcx,QWORD PTR [r12+0x3]
  41f6a7:	movabs rdi,0x656369767265735f
  41f6b1:	xor    rcx,rdi
  41f6b4:	or     rcx,rax
  41f6b7:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f6bd:	mov    r15,0xfffffffffffffc39
  41f6c4:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f6c9:	mov    eax,DWORD PTR [r12]
  41f6cd:	mov    ecx,0x746e6975
  41f6d2:	xor    eax,ecx
  41f6d4:	movzx  ecx,BYTE PTR [r12+0x4]
  41f6da:	xor    ecx,0x38
  41f6dd:	or     ecx,eax
  41f6df:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f6e5:	mov    r15,0xfffffffffffffc2b
  41f6ec:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f6f1:	mov    rax,QWORD PTR [r12]
  41f6f5:	movabs rcx,0x7478655f656c6966
  41f6ff:	xor    rax,rcx
  41f702:	mov    rcx,QWORD PTR [r12+0x6]
  41f707:	movabs rdi,0x6e6f69736e657478
  41f711:	xor    rcx,rdi
  41f714:	or     rcx,rax
  41f717:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f71d:	mov    r15,0xfffffffffffffc3a
  41f724:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f729:	mov    eax,DWORD PTR [r12]
  41f72d:	mov    ecx,0x6e6f6c75
  41f732:	xor    eax,ecx
  41f734:	movzx  ecx,BYTE PTR [r12+0x4]
  41f73a:	xor    ecx,0x67
  41f73d:	or     ecx,eax
  41f73f:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f745:	mov    r15,0xfffffffffffffc2f
  41f74c:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f751:	cmp    DWORD PTR [r12],0x746e6975
  41f759:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f75f:	mov    r15,0xfffffffffffffc25
  41f766:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f76b:	mov    rax,QWORD PTR [r12]
  41f76f:	movabs rcx,0x7475626972747461
  41f779:	xor    rax,rcx
  41f77c:	movzx  ecx,BYTE PTR [r12+0x8]
  41f782:	xor    rcx,0x65
  41f786:	or     rcx,rax
  41f789:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f78f:	mov    r15,0xfffffffffffffc36
  41f796:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f79b:	mov    eax,DWORD PTR [r12]
  41f79f:	mov    ecx,0x736c6166
  41f7a4:	xor    eax,ecx
  41f7a6:	movzx  ecx,BYTE PTR [r12+0x4]
  41f7ac:	xor    ecx,0x65
  41f7af:	or     ecx,eax
  41f7b1:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f7b7:	mov    r15,0xfffffffffffffc26
  41f7be:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f7c3:	mov    rax,QWORD PTR [r12]
  41f7c7:	movabs rcx,0x6564695f656c6966
  41f7d1:	xor    rax,rcx
  41f7d4:	mov    rcx,QWORD PTR [r12+0x7]
  41f7d9:	movabs rdi,0x7265696669746e65
  41f7e3:	xor    rcx,rdi
  41f7e6:	or     rcx,rax
  41f7e9:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f7ef:	mov    r15,0xfffffffffffffc3b
  41f7f6:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f7fb:	mov    eax,DWORD PTR [r12]
  41f7ff:	mov    ecx,0x69727473
  41f804:	xor    eax,ecx
  41f806:	movzx  ecx,WORD PTR [r12+0x4]
  41f80c:	xor    ecx,0x676e
  41f812:	or     ecx,eax
  41f814:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f81a:	mov    r15,0xfffffffffffffc32
  41f821:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f826:	cmp    DWORD PTR [r12],0x6c6f6f62
  41f82e:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f834:	mov    r15,0xfffffffffffffc19
  41f83b:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f840:	mov    eax,DWORD PTR [r12]
  41f844:	mov    ecx,0x6c636e69
  41f849:	xor    eax,ecx
  41f84b:	mov    ecx,DWORD PTR [r12+0x3]
  41f850:	mov    edi,0x6564756c
  41f855:	xor    ecx,edi
  41f857:	or     ecx,eax
  41f859:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f85f:	mov    r15,0xfffffffffffffc35
  41f866:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f86b:	mov    eax,DWORD PTR [r12]
  41f86f:	mov    ecx,0x62756f64
  41f874:	xor    eax,ecx
  41f876:	movzx  ecx,WORD PTR [r12+0x4]
  41f87c:	xor    ecx,0x656c
  41f882:	or     ecx,eax
  41f884:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f88a:	mov    r15,0xfffffffffffffc31
  41f891:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f896:	mov    eax,DWORD PTR [r12]
  41f89a:	mov    ecx,0x75727473
  41f89f:	xor    eax,ecx
  41f8a1:	movzx  ecx,WORD PTR [r12+0x4]
  41f8a7:	xor    ecx,0x7463
  41f8ad:	or     ecx,eax
  41f8af:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f8b5:	mov    r15,0xfffffffffffffc33
  41f8bc:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f8c1:	mov    eax,DWORD PTR [r12]
  41f8c5:	mov    ecx,0x6f687375
  41f8ca:	xor    eax,ecx
  41f8cc:	movzx  ecx,WORD PTR [r12+0x4]
  41f8d2:	xor    ecx,0x7472
  41f8d8:	or     ecx,eax
  41f8da:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f8e0:	mov    r15,0xfffffffffffffc34
  41f8e7:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f8ec:	mov    eax,DWORD PTR [r12]
  41f8f0:	mov    ecx,0x746e6975
  41f8f5:	xor    eax,ecx
  41f8f7:	movzx  ecx,WORD PTR [r12+0x4]
  41f8fd:	xor    ecx,0x3233
  41f903:	or     ecx,eax
  41f905:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f90b:	mov    r15,0xfffffffffffffc2d
  41f912:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f917:	mov    eax,DWORD PTR [r12]
  41f91b:	mov    ecx,0x616f6c66
  41f920:	xor    eax,ecx
  41f922:	mov    ecx,DWORD PTR [r12+0x3]
  41f927:	mov    edi,0x34367461
  41f92c:	xor    ecx,edi
  41f92e:	or     ecx,eax
  41f930:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f932:	mov    r15,0xfffffffffffffc1d
  41f939:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f93b:	mov    eax,DWORD PTR [r12]
  41f93f:	mov    ecx,0x6c626174
  41f944:	xor    eax,ecx
  41f946:	movzx  ecx,BYTE PTR [r12+0x4]
  41f94c:	xor    ecx,0x65
  41f94f:	or     ecx,eax
  41f951:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f953:	mov    r15,0xfffffffffffffc29
  41f95a:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f95c:	mov    eax,DWORD PTR [r12]
  41f960:	mov    ecx,0x33746e69
  41f965:	xor    eax,ecx
  41f967:	movzx  ecx,BYTE PTR [r12+0x4]
  41f96d:	xor    ecx,0x32
  41f970:	or     ecx,eax
  41f972:	jne    41f9a0 <__flatcc_fb_parse@@Base+0x3000>
  41f974:	mov    r15,0xfffffffffffffc21
  41f97b:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  41f97d:	mov    eax,DWORD PTR [r12]
  41f981:	mov    ecx,0x746e6975
  41f986:	xor    eax,ecx
  41f988:	movzx  ecx,WORD PTR [r12+0x4]
  41f98e:	xor    ecx,0x3631
  41f994:	or     ecx,eax
  41f996:	je     420a55 <__flatcc_fb_parse@@Base+0x40b5>
  41f99c:	nop    DWORD PTR [rax+0x0]
  41f9a0:	mov    r15d,0x9
  41f9a6:	mov    rdi,QWORD PTR [rdx]
  41f9a9:	movsxd rcx,DWORD PTR [rsi]
  41f9ac:	lea    r13,[rcx+rcx*4]
  41f9b0:	lea    rdx,[rdi+r13*8]
  41f9b4:	mov    QWORD PTR [r9],rdx
  41f9b7:	mov    rax,QWORD PTR [r10]
  41f9ba:	cmp    rax,rdx
  41f9bd:	jne    41ee6a <__flatcc_fb_parse@@Base+0x24ca>
  41f9c3:	lea    eax,[rcx+rcx*1]
  41f9c6:	test   ecx,ecx
  41f9c8:	mov    ecx,0x400
  41f9cd:	cmove  eax,ecx
  41f9d0:	mov    DWORD PTR [rsi],eax
  41f9d2:	cdqe   
  41f9d4:	shl    rax,0x3
  41f9d8:	mov    rbp,rsi
  41f9db:	lea    rsi,[rax+rax*4]
  41f9df:	call   4061e0 <realloc@plt>
  41f9e4:	mov    rcx,QWORD PTR [rsp+0x8]
  41f9e9:	mov    QWORD PTR [rcx],rax
  41f9ec:	test   rax,rax
  41f9ef:	jne    41ee40 <__flatcc_fb_parse@@Base+0x24a0>
  41f9f5:	jmp    4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41f9fa:	lea    rbx,[r12+0x1]
  41f9ff:	cmp    rbx,r13
  41fa02:	mov    rsi,QWORD PTR [rsp+0x30]
  41fa07:	je     420a61 <__flatcc_fb_parse@@Base+0x40c1>
  41fa0d:	movsx  eax,BYTE PTR [rbx]
  41fa10:	cmp    eax,0x3d
  41fa13:	je     421429 <__flatcc_fb_parse@@Base+0x4a89>
  41fa19:	cmp    eax,0x3c
  41fa1c:	je     4214b5 <__flatcc_fb_parse@@Base+0x4b15>
  41fa22:	cmp    eax,0x2d
  41fa25:	jne    420a61 <__flatcc_fb_parse@@Base+0x40c1>
  41fa2b:	mov    rax,QWORD PTR [rsp+0x8]
  41fa30:	mov    rdi,QWORD PTR [rax]
  41fa33:	movsxd rcx,DWORD PTR [rsi]
  41fa36:	lea    rbx,[rcx+rcx*4]
  41fa3a:	lea    rdx,[rdi+rbx*8]
  41fa3e:	mov    QWORD PTR [r9],rdx
  41fa41:	mov    rax,QWORD PTR [r10]
  41fa44:	cmp    rax,rdx
  41fa47:	jne    41faa5 <__flatcc_fb_parse@@Base+0x3105>
  41fa49:	lea    eax,[rcx+rcx*1]
  41fa4c:	test   ecx,ecx
  41fa4e:	mov    ecx,0x400
  41fa53:	cmove  eax,ecx
  41fa56:	mov    DWORD PTR [rsi],eax
  41fa58:	cdqe   
  41fa5a:	shl    rax,0x3
  41fa5e:	mov    rbp,rsi
  41fa61:	lea    rsi,[rax+rax*4]
  41fa65:	call   4061e0 <realloc@plt>
  41fa6a:	mov    rcx,QWORD PTR [rsp+0x8]
  41fa6f:	mov    QWORD PTR [rcx],rax
  41fa72:	test   rax,rax
  41fa75:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41fa7b:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fa7f:	lea    rcx,[rcx+rcx*4]
  41fa83:	lea    rcx,[rax+rcx*8]
  41fa87:	mov    r9,QWORD PTR [rsp+0x10]
  41fa8c:	mov    QWORD PTR [r9],rcx
  41fa8f:	lea    rax,[rax+rbx*8]
  41fa93:	mov    r10,QWORD PTR [rsp+0x28]
  41fa98:	mov    QWORD PTR [r10],rax
  41fa9b:	mov    r11,QWORD PTR [rsp+0x20]
  41faa0:	mov    r8,QWORD PTR [rsp+0x18]
  41faa5:	lea    rbx,[r12+0x2]
  41faaa:	mov    QWORD PTR [rax+0x20],0x2d3c
  41fab2:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  41fab7:	lea    rbx,[r12+0x1]
  41fabc:	cmp    rbx,r13
  41fabf:	mov    rsi,QWORD PTR [rsp+0x30]
  41fac4:	je     420839 <__flatcc_fb_parse@@Base+0x3e99>
  41faca:	movsx  eax,BYTE PTR [rbx]
  41facd:	cmp    eax,0x2b
  41fad0:	je     420ce9 <__flatcc_fb_parse@@Base+0x4349>
  41fad6:	cmp    eax,0x3d
  41fad9:	jne    420839 <__flatcc_fb_parse@@Base+0x3e99>
  41fadf:	mov    rax,QWORD PTR [rsp+0x8]
  41fae4:	mov    rdi,QWORD PTR [rax]
  41fae7:	movsxd rcx,DWORD PTR [rsi]
  41faea:	lea    rbx,[rcx+rcx*4]
  41faee:	lea    rdx,[rdi+rbx*8]
  41faf2:	mov    QWORD PTR [r9],rdx
  41faf5:	mov    rax,QWORD PTR [r10]
  41faf8:	cmp    rax,rdx
  41fafb:	jne    41fb59 <__flatcc_fb_parse@@Base+0x31b9>
  41fafd:	lea    eax,[rcx+rcx*1]
  41fb00:	test   ecx,ecx
  41fb02:	mov    ecx,0x400
  41fb07:	cmove  eax,ecx
  41fb0a:	mov    DWORD PTR [rsi],eax
  41fb0c:	cdqe   
  41fb0e:	shl    rax,0x3
  41fb12:	mov    rbp,rsi
  41fb15:	lea    rsi,[rax+rax*4]
  41fb19:	call   4061e0 <realloc@plt>
  41fb1e:	mov    rcx,QWORD PTR [rsp+0x8]
  41fb23:	mov    QWORD PTR [rcx],rax
  41fb26:	test   rax,rax
  41fb29:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41fb2f:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fb33:	lea    rcx,[rcx+rcx*4]
  41fb37:	lea    rcx,[rax+rcx*8]
  41fb3b:	mov    r9,QWORD PTR [rsp+0x10]
  41fb40:	mov    QWORD PTR [r9],rcx
  41fb43:	lea    rax,[rax+rbx*8]
  41fb47:	mov    r10,QWORD PTR [rsp+0x28]
  41fb4c:	mov    QWORD PTR [r10],rax
  41fb4f:	mov    r11,QWORD PTR [rsp+0x20]
  41fb54:	mov    r8,QWORD PTR [rsp+0x18]
  41fb59:	lea    rbx,[r12+0x2]
  41fb5e:	mov    QWORD PTR [rax+0x20],0x3d2b
  41fb66:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  41fb6b:	lea    rbx,[r12+0x1]
  41fb70:	cmp    rbx,r13
  41fb73:	mov    rsi,QWORD PTR [rsp+0x30]
  41fb78:	je     420ae8 <__flatcc_fb_parse@@Base+0x4148>
  41fb7e:	movsx  eax,BYTE PTR [rbx]
  41fb81:	cmp    eax,0x2a
  41fb84:	je     421564 <__flatcc_fb_parse@@Base+0x4bc4>
  41fb8a:	cmp    eax,0x3d
  41fb8d:	je     421585 <__flatcc_fb_parse@@Base+0x4be5>
  41fb93:	cmp    eax,0x2f
  41fb96:	jne    420ae8 <__flatcc_fb_parse@@Base+0x4148>
  41fb9c:	lea    rbp,[r12+0x2]
  41fba1:	cmp    rbp,r13
  41fba4:	je     421c27 <__flatcc_fb_parse@@Base+0x5287>
  41fbaa:	mov    al,BYTE PTR [rbp+0x0]
  41fbad:	cmp    al,0x2f
  41fbaf:	sete   cl
  41fbb2:	cmp    al,0x21
  41fbb4:	sete   al
  41fbb7:	or     al,cl
  41fbb9:	jmp    421c29 <__flatcc_fb_parse@@Base+0x5289>
  41fbbe:	lea    rax,[r12+0x1]
  41fbc3:	mov    rbx,r12
  41fbc6:	cmp    rax,r13
  41fbc9:	mov    rsi,QWORD PTR [rsp+0x30]
  41fbce:	je     41f190 <__flatcc_fb_parse@@Base+0x27f0>
  41fbd4:	movsx  eax,BYTE PTR [rax]
  41fbd7:	or     eax,0x20
  41fbda:	mov    rbx,r12
  41fbdd:	cmp    eax,0x78
  41fbe0:	jne    41f190 <__flatcc_fb_parse@@Base+0x27f0>
  41fbe6:	lea    rax,[r12+0x2]
  41fbeb:	mov    rbx,r13
  41fbee:	cmp    rax,r13
  41fbf1:	jne    41fc0c <__flatcc_fb_parse@@Base+0x326c>
  41fbf3:	jmp    421262 <__flatcc_fb_parse@@Base+0x48c2>
  41fbf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc00:	inc    rax
  41fc03:	cmp    r13,rax
  41fc06:	je     42125f <__flatcc_fb_parse@@Base+0x48bf>
  41fc0c:	movzx  ecx,BYTE PTR [rax]
  41fc0f:	lea    edx,[rcx-0x30]
  41fc12:	cmp    dl,0xa
  41fc15:	jb     41fc00 <__flatcc_fb_parse@@Base+0x3260>
  41fc17:	or     cl,0x20
  41fc1a:	add    cl,0x9f
  41fc1d:	cmp    cl,0x5
  41fc20:	jbe    41fc00 <__flatcc_fb_parse@@Base+0x3260>
  41fc22:	mov    rbx,rax
  41fc25:	jmp    421262 <__flatcc_fb_parse@@Base+0x48c2>
  41fc2a:	lea    rbx,[r12+0x1]
  41fc2f:	cmp    rbx,r13
  41fc32:	mov    rsi,QWORD PTR [rsp+0x30]
  41fc37:	je     4208c0 <__flatcc_fb_parse@@Base+0x3f20>
  41fc3d:	movsx  eax,BYTE PTR [rbx]
  41fc40:	cmp    eax,0x3a
  41fc43:	je     420d75 <__flatcc_fb_parse@@Base+0x43d5>
  41fc49:	cmp    eax,0x3d
  41fc4c:	jne    4208c0 <__flatcc_fb_parse@@Base+0x3f20>
  41fc52:	mov    rax,QWORD PTR [rsp+0x8]
  41fc57:	mov    rdi,QWORD PTR [rax]
  41fc5a:	movsxd rcx,DWORD PTR [rsi]
  41fc5d:	lea    rbx,[rcx+rcx*4]
  41fc61:	lea    rdx,[rdi+rbx*8]
  41fc65:	mov    QWORD PTR [r9],rdx
  41fc68:	mov    rax,QWORD PTR [r10]
  41fc6b:	cmp    rax,rdx
  41fc6e:	jne    41fccc <__flatcc_fb_parse@@Base+0x332c>
  41fc70:	lea    eax,[rcx+rcx*1]
  41fc73:	test   ecx,ecx
  41fc75:	mov    ecx,0x400
  41fc7a:	cmove  eax,ecx
  41fc7d:	mov    DWORD PTR [rsi],eax
  41fc7f:	cdqe   
  41fc81:	shl    rax,0x3
  41fc85:	mov    rbp,rsi
  41fc88:	lea    rsi,[rax+rax*4]
  41fc8c:	call   4061e0 <realloc@plt>
  41fc91:	mov    rcx,QWORD PTR [rsp+0x8]
  41fc96:	mov    QWORD PTR [rcx],rax
  41fc99:	test   rax,rax
  41fc9c:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41fca2:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fca6:	lea    rcx,[rcx+rcx*4]
  41fcaa:	lea    rcx,[rax+rcx*8]
  41fcae:	mov    r9,QWORD PTR [rsp+0x10]
  41fcb3:	mov    QWORD PTR [r9],rcx
  41fcb6:	lea    rax,[rax+rbx*8]
  41fcba:	mov    r10,QWORD PTR [rsp+0x28]
  41fcbf:	mov    QWORD PTR [r10],rax
  41fcc2:	mov    r11,QWORD PTR [rsp+0x20]
  41fcc7:	mov    r8,QWORD PTR [rsp+0x18]
  41fccc:	lea    rbx,[r12+0x2]
  41fcd1:	mov    QWORD PTR [rax+0x20],0x3d3a
  41fcd9:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  41fcde:	lea    rbx,[r12+0x1]
  41fce3:	cmp    rbx,r13
  41fce6:	mov    rsi,QWORD PTR [rsp+0x30]
  41fceb:	je     420947 <__flatcc_fb_parse@@Base+0x3fa7>
  41fcf1:	movsx  eax,BYTE PTR [rbx]
  41fcf4:	cmp    eax,0x3e
  41fcf7:	je     420e18 <__flatcc_fb_parse@@Base+0x4478>
  41fcfd:	cmp    eax,0x3d
  41fd00:	jne    420947 <__flatcc_fb_parse@@Base+0x3fa7>
  41fd06:	mov    rax,QWORD PTR [rsp+0x8]
  41fd0b:	mov    rdi,QWORD PTR [rax]
  41fd0e:	movsxd rcx,DWORD PTR [rsi]
  41fd11:	lea    rbx,[rcx+rcx*4]
  41fd15:	lea    rdx,[rdi+rbx*8]
  41fd19:	mov    QWORD PTR [r9],rdx
  41fd1c:	mov    rax,QWORD PTR [r10]
  41fd1f:	cmp    rax,rdx
  41fd22:	jne    41fd80 <__flatcc_fb_parse@@Base+0x33e0>
  41fd24:	lea    eax,[rcx+rcx*1]
  41fd27:	test   ecx,ecx
  41fd29:	mov    ecx,0x400
  41fd2e:	cmove  eax,ecx
  41fd31:	mov    DWORD PTR [rsi],eax
  41fd33:	cdqe   
  41fd35:	shl    rax,0x3
  41fd39:	mov    rbp,rsi
  41fd3c:	lea    rsi,[rax+rax*4]
  41fd40:	call   4061e0 <realloc@plt>
  41fd45:	mov    rcx,QWORD PTR [rsp+0x8]
  41fd4a:	mov    QWORD PTR [rcx],rax
  41fd4d:	test   rax,rax
  41fd50:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41fd56:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fd5a:	lea    rcx,[rcx+rcx*4]
  41fd5e:	lea    rcx,[rax+rcx*8]
  41fd62:	mov    r9,QWORD PTR [rsp+0x10]
  41fd67:	mov    QWORD PTR [r9],rcx
  41fd6a:	lea    rax,[rax+rbx*8]
  41fd6e:	mov    r10,QWORD PTR [rsp+0x28]
  41fd73:	mov    QWORD PTR [r10],rax
  41fd76:	mov    r11,QWORD PTR [rsp+0x20]
  41fd7b:	mov    r8,QWORD PTR [rsp+0x18]
  41fd80:	lea    rbx,[r12+0x2]
  41fd85:	mov    QWORD PTR [rax+0x20],0x3d3e
  41fd8d:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  41fd92:	mov    rbx,QWORD PTR [rsp+0x8]
  41fd97:	mov    rax,QWORD PTR [rbx]
  41fd9a:	mov    rbp,QWORD PTR [rsp+0x30]
  41fd9f:	mov    esi,DWORD PTR [rbp+0x0]
  41fda2:	movsxd rcx,esi
  41fda5:	lea    r14,[rcx+rcx*4]
  41fda9:	lea    rdx,[rax+r14*8]
  41fdad:	mov    QWORD PTR [r9],rdx
  41fdb0:	mov    rcx,QWORD PTR [r10]
  41fdb3:	cmp    rcx,rdx
  41fdb6:	jne    41fe11 <__flatcc_fb_parse@@Base+0x3471>
  41fdb8:	lea    ecx,[rsi+rsi*1]
  41fdbb:	test   esi,esi
  41fdbd:	mov    edx,0x400
  41fdc2:	cmove  ecx,edx
  41fdc5:	mov    DWORD PTR [rbp+0x0],ecx
  41fdc8:	movsxd rcx,ecx
  41fdcb:	shl    rcx,0x3
  41fdcf:	lea    rsi,[rcx+rcx*4]
  41fdd3:	mov    rdi,rax
  41fdd6:	call   4061e0 <realloc@plt>
  41fddb:	mov    QWORD PTR [rbx],rax
  41fdde:	test   rax,rax
  41fde1:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41fde7:	movsxd rsi,DWORD PTR [rbp+0x0]
  41fdeb:	lea    rcx,[rsi+rsi*4]
  41fdef:	lea    rcx,[rax+rcx*8]
  41fdf3:	mov    rdx,QWORD PTR [rsp+0x10]
  41fdf8:	mov    QWORD PTR [rdx],rcx
  41fdfb:	lea    rcx,[rax+r14*8]
  41fdff:	mov    r10,QWORD PTR [rsp+0x28]
  41fe04:	mov    QWORD PTR [r10],rcx
  41fe07:	mov    r11,QWORD PTR [rsp+0x20]
  41fe0c:	mov    r8,QWORD PTR [rsp+0x18]
  41fe11:	lea    rbx,[r12+0x1]
  41fe16:	mov    QWORD PTR [rcx+0x20],0x13
  41fe1e:	mov    QWORD PTR [rcx],r12
  41fe21:	mov    QWORD PTR [rcx+0x8],0x1
  41fe29:	mov    r9,QWORD PTR [r8]
  41fe2c:	mov    QWORD PTR [rcx+0x10],r9
  41fe30:	mov    r8,QWORD PTR [r11]
  41fe33:	sub    r12,r8
  41fe36:	inc    r12
  41fe39:	mov    QWORD PTR [rcx+0x18],r12
  41fe3d:	add    rcx,0x28
  41fe41:	mov    QWORD PTR [r10],rcx
  41fe44:	mov    r14,rbx
  41fe47:	jmp    41feab <__flatcc_fb_parse@@Base+0x350b>
  41fe49:	movsxd rsi,DWORD PTR [rbx]
  41fe4c:	lea    rcx,[rsi+rsi*4]
  41fe50:	lea    rcx,[rax+rcx*8]
  41fe54:	mov    rdx,QWORD PTR [rsp+0x10]
  41fe59:	mov    QWORD PTR [rdx],rcx
  41fe5c:	lea    rcx,[rax+rbp*8]
  41fe60:	mov    r10,QWORD PTR [rsp+0x28]
  41fe65:	mov    QWORD PTR [r10],rcx
  41fe68:	mov    rdx,QWORD PTR [rsp+0x18]
  41fe6d:	mov    r9,QWORD PTR [rdx]
  41fe70:	mov    r11,QWORD PTR [rsp+0x20]
  41fe75:	mov    r8,QWORD PTR [r11]
  41fe78:	inc    r14
  41fe7b:	mov    QWORD PTR [rcx+0x20],0x6
  41fe83:	mov    QWORD PTR [rcx],r13
  41fe86:	mov    QWORD PTR [rcx+0x8],0x1
  41fe8e:	mov    QWORD PTR [rcx+0x10],r9
  41fe92:	sub    r13,r8
  41fe95:	inc    r13
  41fe98:	mov    QWORD PTR [rcx+0x18],r13
  41fe9c:	add    rcx,0x28
  41fea0:	mov    QWORD PTR [r10],rcx
  41fea3:	mov    rbx,r14
  41fea6:	mov    r13,QWORD PTR [rsp+0x48]
  41feab:	lea    r12,[rbx-0x1]
  41feaf:	nop
  41feb0:	mov    rbp,rbx
  41feb3:	cmp    r13,rbx
  41feb6:	je     41ffb0 <__flatcc_fb_parse@@Base+0x3610>
  41febc:	movzx  edx,BYTE PTR [rbp+0x0]
  41fec0:	cmp    dl,0x22
  41fec3:	je     420150 <__flatcc_fb_parse@@Base+0x37b0>
  41fec9:	cmp    dl,0x5c
  41fecc:	je     420150 <__flatcc_fb_parse@@Base+0x37b0>
  41fed2:	inc    r12
  41fed5:	xor    r15d,r15d
  41fed8:	cmp    dl,0x20
  41fedb:	jl     41fef0 <__flatcc_fb_parse@@Base+0x3550>
  41fedd:	lea    rbx,[rbp+0x1]
  41fee1:	cmp    dl,0x7f
  41fee4:	jne    41feb0 <__flatcc_fb_parse@@Base+0x3510>
  41fee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fef0:	cmp    r14,r12
  41fef3:	je     41ffbf <__flatcc_fb_parse@@Base+0x361f>
  41fef9:	movsxd rdx,esi
  41fefc:	lea    rbx,[rdx+rdx*4]
  41ff00:	lea    rdx,[rax+rbx*8]
  41ff04:	mov    rdi,QWORD PTR [rsp+0x10]
  41ff09:	mov    QWORD PTR [rdi],rdx
  41ff0c:	cmp    rcx,rdx
  41ff0f:	jne    41ff7b <__flatcc_fb_parse@@Base+0x35db>
  41ff11:	lea    ecx,[rsi+rsi*1]
  41ff14:	test   esi,esi
  41ff16:	mov    edx,0x400
  41ff1b:	cmove  ecx,edx
  41ff1e:	mov    r13,QWORD PTR [rsp+0x30]
  41ff23:	mov    DWORD PTR [r13+0x0],ecx
  41ff27:	movsxd rcx,ecx
  41ff2a:	shl    rcx,0x3
  41ff2e:	lea    rsi,[rcx+rcx*4]
  41ff32:	mov    rdi,rax
  41ff35:	call   4061e0 <realloc@plt>
  41ff3a:	mov    rcx,QWORD PTR [rsp+0x8]
  41ff3f:	mov    QWORD PTR [rcx],rax
  41ff42:	test   rax,rax
  41ff45:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  41ff4b:	movsxd rsi,DWORD PTR [r13+0x0]
  41ff4f:	lea    rcx,[rsi+rsi*4]
  41ff53:	lea    rcx,[rax+rcx*8]
  41ff57:	mov    rdx,QWORD PTR [rsp+0x10]
  41ff5c:	mov    QWORD PTR [rdx],rcx
  41ff5f:	lea    rcx,[rax+rbx*8]
  41ff63:	mov    r10,QWORD PTR [rsp+0x28]
  41ff68:	mov    QWORD PTR [r10],rcx
  41ff6b:	mov    rdx,QWORD PTR [rsp+0x18]
  41ff70:	mov    r9,QWORD PTR [rdx]
  41ff73:	mov    r11,QWORD PTR [rsp+0x20]
  41ff78:	mov    r8,QWORD PTR [r11]
  41ff7b:	mov    QWORD PTR [rcx+0x20],0x14
  41ff83:	mov    QWORD PTR [rcx],r14
  41ff86:	mov    rdx,r12
  41ff89:	sub    rdx,r14
  41ff8c:	mov    QWORD PTR [rcx+0x8],rdx
  41ff90:	mov    QWORD PTR [rcx+0x10],r9
  41ff94:	sub    r14,r8
  41ff97:	inc    r14
  41ff9a:	mov    QWORD PTR [rcx+0x18],r14
  41ff9e:	add    rcx,0x28
  41ffa2:	mov    QWORD PTR [r10],rcx
  41ffa5:	mov    r13,r12
  41ffa8:	jmp    41ffc2 <__flatcc_fb_parse@@Base+0x3622>
  41ffaa:	nop    WORD PTR [rax+rax*1+0x0]
  41ffb0:	mov    r15b,0x1
  41ffb3:	mov    r12,r13
  41ffb6:	cmp    r14,r12
  41ffb9:	jne    41fef9 <__flatcc_fb_parse@@Base+0x3559>
  41ffbf:	mov    r13,r14
  41ffc2:	mov    dil,BYTE PTR [r12]
  41ffc6:	cmp    dil,0x22
  41ffca:	je     420bf6 <__flatcc_fb_parse@@Base+0x4256>
  41ffd0:	test   dil,dil
  41ffd3:	setne  dl
  41ffd6:	not    r15b
  41ffd9:	test   r15b,dl
  41ffdc:	je     420cbe <__flatcc_fb_parse@@Base+0x431e>
  41ffe2:	cmp    dil,0x5c
  41ffe6:	mov    r15,QWORD PTR [rsp+0x40]
  41ffeb:	jne    4200e0 <__flatcc_fb_parse@@Base+0x3740>
  41fff1:	movsxd rdx,esi
  41fff4:	lea    r14,[rdx+rdx*4]
  41fff8:	lea    rdx,[rax+r14*8]
  41fffc:	mov    rdi,QWORD PTR [rsp+0x10]
  420001:	mov    QWORD PTR [rdi],rdx
  420004:	cmp    rcx,rdx
  420007:	jne    420076 <__flatcc_fb_parse@@Base+0x36d6>
  420009:	lea    ecx,[rsi+rsi*1]
  42000c:	test   esi,esi
  42000e:	mov    edx,0x400
  420013:	cmove  ecx,edx
  420016:	mov    r15,QWORD PTR [rsp+0x30]
  42001b:	mov    DWORD PTR [r15],ecx
  42001e:	movsxd rcx,ecx
  420021:	shl    rcx,0x3
  420025:	lea    rsi,[rcx+rcx*4]
  420029:	mov    rdi,rax
  42002c:	call   4061e0 <realloc@plt>
  420031:	mov    rcx,QWORD PTR [rsp+0x8]
  420036:	mov    QWORD PTR [rcx],rax
  420039:	test   rax,rax
  42003c:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420042:	movsxd rsi,DWORD PTR [r15]
  420045:	lea    rcx,[rsi+rsi*4]
  420049:	lea    rcx,[rax+rcx*8]
  42004d:	mov    rdx,QWORD PTR [rsp+0x10]
  420052:	mov    QWORD PTR [rdx],rcx
  420055:	lea    rcx,[rax+r14*8]
  420059:	mov    r10,QWORD PTR [rsp+0x28]
  42005e:	mov    QWORD PTR [r10],rcx
  420061:	mov    rdx,QWORD PTR [rsp+0x18]
  420066:	mov    r9,QWORD PTR [rdx]
  420069:	mov    r11,QWORD PTR [rsp+0x20]
  42006e:	mov    r8,QWORD PTR [r11]
  420071:	mov    r15,QWORD PTR [rsp+0x40]
  420076:	lea    r14,[rbp+0x1]
  42007a:	mov    QWORD PTR [rcx+0x20],0x15
  420082:	mov    QWORD PTR [rcx],r13
  420085:	mov    rdx,r14
  420088:	sub    rdx,r13
  42008b:	mov    QWORD PTR [rcx+0x8],rdx
  42008f:	mov    QWORD PTR [rcx+0x10],r9
  420093:	sub    r13,r8
  420096:	inc    r13
  420099:	mov    QWORD PTR [rcx+0x18],r13
  42009d:	add    rcx,0x28
  4200a1:	mov    QWORD PTR [r10],rcx
  4200a4:	cmp    QWORD PTR [rsp+0x60],rbp
  4200a9:	je     4218ef <__flatcc_fb_parse@@Base+0x4f4f>
  4200af:	movzx  edi,BYTE PTR [r14]
  4200b3:	cmp    rdi,0x22
  4200b7:	mov    r13,QWORD PTR [rsp+0x48]
  4200bc:	ja     420164 <__flatcc_fb_parse@@Base+0x37c4>
  4200c2:	lea    rdx,[rip+0x270f7]        # 4471c0 <fb_schema_table_deleted@@Base+0x298>
  4200c9:	mov    rbx,rdx
  4200cc:	movsxd rdx,DWORD PTR [rdx+rdi*4]
  4200d0:	add    rdx,rbx
  4200d3:	jmp    rdx
  4200d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200df:	nop
  4200e0:	mov    r14,r12
  4200e3:	cmp    dil,0xd
  4200e7:	je     421370 <__flatcc_fb_parse@@Base+0x49d0>
  4200ed:	cmp    dil,0xa
  4200f1:	je     421370 <__flatcc_fb_parse@@Base+0x49d0>
  4200f7:	movsxd rdx,esi
  4200fa:	lea    rbp,[rdx+rdx*4]
  4200fe:	lea    rdx,[rax+rbp*8]
  420102:	mov    rdi,QWORD PTR [rsp+0x10]
  420107:	mov    QWORD PTR [rdi],rdx
  42010a:	cmp    rcx,rdx
  42010d:	jne    41fe78 <__flatcc_fb_parse@@Base+0x34d8>
  420113:	lea    ecx,[rsi+rsi*1]
  420116:	test   esi,esi
  420118:	mov    edx,0x400
  42011d:	cmove  ecx,edx
  420120:	mov    rbx,QWORD PTR [rsp+0x30]
  420125:	mov    DWORD PTR [rbx],ecx
  420127:	movsxd rcx,ecx
  42012a:	shl    rcx,0x3
  42012e:	lea    rsi,[rcx+rcx*4]
  420132:	mov    rdi,rax
  420135:	call   4061e0 <realloc@plt>
  42013a:	mov    rcx,QWORD PTR [rsp+0x8]
  42013f:	mov    QWORD PTR [rcx],rax
  420142:	test   rax,rax
  420145:	jne    41fe49 <__flatcc_fb_parse@@Base+0x34a9>
  42014b:	jmp    4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420150:	xor    r15d,r15d
  420153:	mov    r12,rbp
  420156:	cmp    r14,r12
  420159:	jne    41fef9 <__flatcc_fb_parse@@Base+0x3559>
  42015f:	jmp    41ffbf <__flatcc_fb_parse@@Base+0x361f>
  420164:	cmp    dil,0x5c
  420168:	jne    420176 <__flatcc_fb_parse@@Base+0x37d6>
  42016a:	add    rbp,0x2
  42016e:	mov    rbx,rbp
  420171:	jmp    41feab <__flatcc_fb_parse@@Base+0x350b>
  420176:	mov    r13,r14
  420179:	cmp    dil,0xd
  42017d:	jne    4200ed <__flatcc_fb_parse@@Base+0x374d>
  420183:	jmp    421370 <__flatcc_fb_parse@@Base+0x49d0>
  420188:	mov    rbx,r13
  42018b:	cmp    QWORD PTR [rsp+0x50],rbp
  420190:	je     4201b6 <__flatcc_fb_parse@@Base+0x3816>
  420192:	lea    rdx,[rbp+0x3]
  420196:	cmp    BYTE PTR [rbp+0x2],0xd
  42019a:	jmp    4201ae <__flatcc_fb_parse@@Base+0x380e>
  42019c:	mov    rbx,r13
  42019f:	cmp    QWORD PTR [rsp+0x50],rbp
  4201a4:	je     4201b6 <__flatcc_fb_parse@@Base+0x3816>
  4201a6:	lea    rdx,[rbp+0x3]
  4201aa:	cmp    BYTE PTR [rbp+0x2],0xa
  4201ae:	lea    rbx,[rbp+0x2]
  4201b2:	cmove  rbx,rdx
  4201b6:	inc    r9
  4201b9:	mov    rdx,QWORD PTR [rsp+0x18]
  4201be:	mov    QWORD PTR [rdx],r9
  4201c1:	mov    QWORD PTR [r11],rbx
  4201c4:	movsxd rdx,esi
  4201c7:	lea    r15,[rdx+rdx*4]
  4201cb:	lea    rdx,[rax+r15*8]
  4201cf:	mov    rdi,QWORD PTR [rsp+0x10]
  4201d4:	mov    QWORD PTR [rdi],rdx
  4201d7:	cmp    rcx,rdx
  4201da:	je     4201e1 <__flatcc_fb_parse@@Base+0x3841>
  4201dc:	mov    r8,rbx
  4201df:	jmp    42024a <__flatcc_fb_parse@@Base+0x38aa>
  4201e1:	lea    ecx,[rsi+rsi*1]
  4201e4:	test   esi,esi
  4201e6:	mov    edx,0x400
  4201eb:	cmove  ecx,edx
  4201ee:	mov    rbp,QWORD PTR [rsp+0x30]
  4201f3:	mov    DWORD PTR [rbp+0x0],ecx
  4201f6:	movsxd rcx,ecx
  4201f9:	shl    rcx,0x3
  4201fd:	lea    rsi,[rcx+rcx*4]
  420201:	mov    rdi,rax
  420204:	call   4061e0 <realloc@plt>
  420209:	mov    rcx,QWORD PTR [rsp+0x8]
  42020e:	mov    QWORD PTR [rcx],rax
  420211:	test   rax,rax
  420214:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  42021a:	movsxd rsi,DWORD PTR [rbp+0x0]
  42021e:	lea    rcx,[rsi+rsi*4]
  420222:	lea    rcx,[rax+rcx*8]
  420226:	mov    rdx,QWORD PTR [rsp+0x10]
  42022b:	mov    QWORD PTR [rdx],rcx
  42022e:	lea    rcx,[rax+r15*8]
  420232:	mov    r10,QWORD PTR [rsp+0x28]
  420237:	mov    QWORD PTR [r10],rcx
  42023a:	mov    rdx,QWORD PTR [rsp+0x18]
  42023f:	mov    r9,QWORD PTR [rdx]
  420242:	mov    r11,QWORD PTR [rsp+0x20]
  420247:	mov    r8,QWORD PTR [r11]
  42024a:	mov    QWORD PTR [rcx+0x20],0x12
  420252:	mov    QWORD PTR [rcx],r14
  420255:	mov    rdx,rbx
  420258:	sub    rdx,r14
  42025b:	mov    QWORD PTR [rcx+0x8],rdx
  42025f:	mov    QWORD PTR [rcx+0x10],r9
  420263:	sub    r14,r8
  420266:	inc    r14
  420269:	mov    QWORD PTR [rcx+0x18],r14
  42026d:	jmp    41fe3d <__flatcc_fb_parse@@Base+0x349d>
  420272:	lea    rax,[r12+0x1]
  420277:	mov    rbx,r13
  42027a:	cmp    rax,r13
  42027d:	mov    rsi,QWORD PTR [rsp+0x30]
  420282:	je     420f77 <__flatcc_fb_parse@@Base+0x45d7>
  420288:	movsx  ecx,BYTE PTR [rax]
  42028b:	cmp    ecx,0x26
  42028e:	je     420ec7 <__flatcc_fb_parse@@Base+0x4527>
  420294:	mov    rbx,rax
  420297:	cmp    ecx,0x3d
  42029a:	jne    420f77 <__flatcc_fb_parse@@Base+0x45d7>
  4202a0:	mov    rax,QWORD PTR [rsp+0x8]
  4202a5:	mov    rdi,QWORD PTR [rax]
  4202a8:	movsxd rcx,DWORD PTR [rsi]
  4202ab:	lea    rbx,[rcx+rcx*4]
  4202af:	lea    rdx,[rdi+rbx*8]
  4202b3:	mov    QWORD PTR [r9],rdx
  4202b6:	mov    rax,QWORD PTR [r10]
  4202b9:	cmp    rax,rdx
  4202bc:	jne    42031a <__flatcc_fb_parse@@Base+0x397a>
  4202be:	lea    eax,[rcx+rcx*1]
  4202c1:	test   ecx,ecx
  4202c3:	mov    ecx,0x400
  4202c8:	cmove  eax,ecx
  4202cb:	mov    DWORD PTR [rsi],eax
  4202cd:	cdqe   
  4202cf:	shl    rax,0x3
  4202d3:	mov    rbp,rsi
  4202d6:	lea    rsi,[rax+rax*4]
  4202da:	call   4061e0 <realloc@plt>
  4202df:	mov    rcx,QWORD PTR [rsp+0x8]
  4202e4:	mov    QWORD PTR [rcx],rax
  4202e7:	test   rax,rax
  4202ea:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4202f0:	movsxd rcx,DWORD PTR [rbp+0x0]
  4202f4:	lea    rcx,[rcx+rcx*4]
  4202f8:	lea    rcx,[rax+rcx*8]
  4202fc:	mov    r9,QWORD PTR [rsp+0x10]
  420301:	mov    QWORD PTR [r9],rcx
  420304:	lea    rax,[rax+rbx*8]
  420308:	mov    r10,QWORD PTR [rsp+0x28]
  42030d:	mov    QWORD PTR [r10],rax
  420310:	mov    r11,QWORD PTR [rsp+0x20]
  420315:	mov    r8,QWORD PTR [rsp+0x18]
  42031a:	lea    rbx,[r12+0x2]
  42031f:	mov    QWORD PTR [rax+0x20],0x3d26
  420327:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  42032c:	lea    rax,[r12+0x1]
  420331:	mov    rbx,r13
  420334:	cmp    rax,r13
  420337:	je     420365 <__flatcc_fb_parse@@Base+0x39c5>
  420339:	lea    rcx,[r12+0x2]
  42033e:	cmp    BYTE PTR [r12+0x1],0xd
  420344:	jmp    42035e <__flatcc_fb_parse@@Base+0x39be>
  420346:	lea    rax,[r12+0x1]
  42034b:	mov    rbx,r13
  42034e:	cmp    rax,r13
  420351:	je     420365 <__flatcc_fb_parse@@Base+0x39c5>
  420353:	lea    rcx,[r12+0x2]
  420358:	cmp    BYTE PTR [r12+0x1],0xa
  42035e:	cmove  rax,rcx
  420362:	mov    rbx,rax
  420365:	inc    QWORD PTR [r8]
  420368:	mov    QWORD PTR [r11],rbx
  42036b:	jmp    41ee97 <__flatcc_fb_parse@@Base+0x24f7>
  420370:	lea    rbx,[r12+0x1]
  420375:	cmp    rbx,r13
  420378:	mov    rsi,QWORD PTR [rsp+0x30]
  42037d:	je     421af6 <__flatcc_fb_parse@@Base+0x5156>
  420383:	movsx  eax,BYTE PTR [rbx]
  420386:	lea    ecx,[rax-0x30]
  420389:	cmp    ecx,0xa
  42038c:	jae    421a4a <__flatcc_fb_parse@@Base+0x50aa>
  420392:	mov    rbp,r12
  420395:	cmp    r15,rbx
  420398:	jne    41f1b9 <__flatcc_fb_parse@@Base+0x2819>
  42039e:	mov    rbx,r13
  4203a1:	mov    rax,QWORD PTR [rsp+0x8]
  4203a6:	mov    rdi,QWORD PTR [rax]
  4203a9:	movsxd rcx,DWORD PTR [rsi]
  4203ac:	lea    r14,[rcx+rcx*4]
  4203b0:	lea    rdx,[rdi+r14*8]
  4203b4:	mov    QWORD PTR [r9],rdx
  4203b7:	mov    rax,QWORD PTR [r10]
  4203ba:	cmp    rbp,rbx
  4203bd:	je     420430 <__flatcc_fb_parse@@Base+0x3a90>
  4203bf:	cmp    rax,rdx
  4203c2:	jne    420420 <__flatcc_fb_parse@@Base+0x3a80>
  4203c4:	lea    eax,[rcx+rcx*1]
  4203c7:	test   ecx,ecx
  4203c9:	mov    ecx,0x400
  4203ce:	cmove  eax,ecx
  4203d1:	mov    DWORD PTR [rsi],eax
  4203d3:	cdqe   
  4203d5:	shl    rax,0x3
  4203d9:	mov    rbp,rsi
  4203dc:	lea    rsi,[rax+rax*4]
  4203e0:	call   4061e0 <realloc@plt>
  4203e5:	mov    rcx,QWORD PTR [rsp+0x8]
  4203ea:	mov    QWORD PTR [rcx],rax
  4203ed:	test   rax,rax
  4203f0:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4203f6:	movsxd rcx,DWORD PTR [rbp+0x0]
  4203fa:	lea    rcx,[rcx+rcx*4]
  4203fe:	lea    rcx,[rax+rcx*8]
  420402:	mov    r9,QWORD PTR [rsp+0x10]
  420407:	mov    QWORD PTR [r9],rcx
  42040a:	lea    rax,[rax+r14*8]
  42040e:	mov    r10,QWORD PTR [rsp+0x28]
  420413:	mov    QWORD PTR [r10],rax
  420416:	mov    r11,QWORD PTR [rsp+0x20]
  42041b:	mov    r8,QWORD PTR [rsp+0x18]
  420420:	mov    QWORD PTR [rax+0x20],0xb
  420428:	mov    QWORD PTR [rax],r12
  42042b:	mov    rbp,rbx
  42042e:	jmp    4204a0 <__flatcc_fb_parse@@Base+0x3b00>
  420430:	cmp    rax,rdx
  420433:	jne    420495 <__flatcc_fb_parse@@Base+0x3af5>
  420435:	lea    eax,[rcx+rcx*1]
  420438:	test   ecx,ecx
  42043a:	mov    ecx,0x400
  42043f:	cmove  eax,ecx
  420442:	mov    DWORD PTR [rsi],eax
  420444:	cdqe   
  420446:	shl    rax,0x3
  42044a:	mov    r15,rsi
  42044d:	lea    rsi,[rax+rax*4]
  420451:	call   4061e0 <realloc@plt>
  420456:	mov    rcx,QWORD PTR [rsp+0x8]
  42045b:	mov    QWORD PTR [rcx],rax
  42045e:	test   rax,rax
  420461:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420467:	movsxd rcx,DWORD PTR [r15]
  42046a:	lea    rcx,[rcx+rcx*4]
  42046e:	lea    rcx,[rax+rcx*8]
  420472:	mov    r9,QWORD PTR [rsp+0x10]
  420477:	mov    QWORD PTR [r9],rcx
  42047a:	lea    rax,[rax+r14*8]
  42047e:	mov    r10,QWORD PTR [rsp+0x28]
  420483:	mov    QWORD PTR [r10],rax
  420486:	mov    r11,QWORD PTR [rsp+0x20]
  42048b:	mov    r8,QWORD PTR [rsp+0x18]
  420490:	mov    r15,QWORD PTR [rsp+0x40]
  420495:	mov    QWORD PTR [rax+0x20],0xa
  42049d:	mov    QWORD PTR [rax],r12
  4204a0:	sub    rbp,r12
  4204a3:	mov    QWORD PTR [rax+0x8],rbp
  4204a7:	jmp    421b83 <__flatcc_fb_parse@@Base+0x51e3>
  4204ac:	lea    rax,[r12+0x1]
  4204b1:	mov    rbx,r13
  4204b4:	cmp    rax,r13
  4204b7:	mov    rsi,QWORD PTR [rsp+0x30]
  4204bc:	je     4210ae <__flatcc_fb_parse@@Base+0x470e>
  4204c2:	movsx  ecx,BYTE PTR [rax]
  4204c5:	cmp    ecx,0x7c
  4204c8:	je     420ffe <__flatcc_fb_parse@@Base+0x465e>
  4204ce:	mov    rbx,rax
  4204d1:	cmp    ecx,0x3d
  4204d4:	jne    4210ae <__flatcc_fb_parse@@Base+0x470e>
  4204da:	mov    rax,QWORD PTR [rsp+0x8]
  4204df:	mov    rdi,QWORD PTR [rax]
  4204e2:	movsxd rcx,DWORD PTR [rsi]
  4204e5:	lea    rbx,[rcx+rcx*4]
  4204e9:	lea    rdx,[rdi+rbx*8]
  4204ed:	mov    QWORD PTR [r9],rdx
  4204f0:	mov    rax,QWORD PTR [r10]
  4204f3:	cmp    rax,rdx
  4204f6:	jne    420554 <__flatcc_fb_parse@@Base+0x3bb4>
  4204f8:	lea    eax,[rcx+rcx*1]
  4204fb:	test   ecx,ecx
  4204fd:	mov    ecx,0x400
  420502:	cmove  eax,ecx
  420505:	mov    DWORD PTR [rsi],eax
  420507:	cdqe   
  420509:	shl    rax,0x3
  42050d:	mov    rbp,rsi
  420510:	lea    rsi,[rax+rax*4]
  420514:	call   4061e0 <realloc@plt>
  420519:	mov    rcx,QWORD PTR [rsp+0x8]
  42051e:	mov    QWORD PTR [rcx],rax
  420521:	test   rax,rax
  420524:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  42052a:	movsxd rcx,DWORD PTR [rbp+0x0]
  42052e:	lea    rcx,[rcx+rcx*4]
  420532:	lea    rcx,[rax+rcx*8]
  420536:	mov    r9,QWORD PTR [rsp+0x10]
  42053b:	mov    QWORD PTR [r9],rcx
  42053e:	lea    rax,[rax+rbx*8]
  420542:	mov    r10,QWORD PTR [rsp+0x28]
  420547:	mov    QWORD PTR [r10],rax
  42054a:	mov    r11,QWORD PTR [rsp+0x20]
  42054f:	mov    r8,QWORD PTR [rsp+0x18]
  420554:	lea    rbx,[r12+0x2]
  420559:	mov    QWORD PTR [rax+0x20],0x3d7c
  420561:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  420566:	lea    rbx,[r12+0x1]
  42056b:	cmp    rbx,r13
  42056e:	mov    rsi,QWORD PTR [rsp+0x30]
  420573:	je     4209ce <__flatcc_fb_parse@@Base+0x402e>
  420579:	movsx  eax,BYTE PTR [rbx]
  42057c:	cmp    eax,0x2a
  42057f:	je     421135 <__flatcc_fb_parse@@Base+0x4795>
  420585:	cmp    eax,0x3d
  420588:	jne    4209ce <__flatcc_fb_parse@@Base+0x402e>
  42058e:	mov    rax,QWORD PTR [rsp+0x8]
  420593:	mov    rdi,QWORD PTR [rax]
  420596:	movsxd rcx,DWORD PTR [rsi]
  420599:	lea    r14,[rcx+rcx*4]
  42059d:	lea    rdx,[rdi+r14*8]
  4205a1:	mov    QWORD PTR [r9],rdx
  4205a4:	mov    rax,QWORD PTR [r10]
  4205a7:	cmp    rax,rdx
  4205aa:	jne    420608 <__flatcc_fb_parse@@Base+0x3c68>
  4205ac:	lea    eax,[rcx+rcx*1]
  4205af:	test   ecx,ecx
  4205b1:	mov    ecx,0x400
  4205b6:	cmove  eax,ecx
  4205b9:	mov    DWORD PTR [rsi],eax
  4205bb:	cdqe   
  4205bd:	shl    rax,0x3
  4205c1:	mov    rbp,rsi
  4205c4:	lea    rsi,[rax+rax*4]
  4205c8:	call   4061e0 <realloc@plt>
  4205cd:	mov    rcx,QWORD PTR [rsp+0x8]
  4205d2:	mov    QWORD PTR [rcx],rax
  4205d5:	test   rax,rax
  4205d8:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4205de:	movsxd rcx,DWORD PTR [rbp+0x0]
  4205e2:	lea    rcx,[rcx+rcx*4]
  4205e6:	lea    rcx,[rax+rcx*8]
  4205ea:	mov    r9,QWORD PTR [rsp+0x10]
  4205ef:	mov    QWORD PTR [r9],rcx
  4205f2:	lea    rax,[rax+r14*8]
  4205f6:	mov    r10,QWORD PTR [rsp+0x28]
  4205fb:	mov    QWORD PTR [r10],rax
  4205fe:	mov    r11,QWORD PTR [rsp+0x20]
  420603:	mov    r8,QWORD PTR [rsp+0x18]
  420608:	mov    QWORD PTR [rax+0x20],0x3d2a
  420610:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420615:	lea    rbx,[r12+0x1]
  42061a:	cmp    rbx,r13
  42061d:	mov    rsi,QWORD PTR [rsp+0x30]
  420622:	je     420b6f <__flatcc_fb_parse@@Base+0x41cf>
  420628:	movsx  eax,BYTE PTR [rbx]
  42062b:	cmp    eax,0x2d
  42062e:	je     421611 <__flatcc_fb_parse@@Base+0x4c71>
  420634:	cmp    eax,0x3e
  420637:	je     42169d <__flatcc_fb_parse@@Base+0x4cfd>
  42063d:	cmp    eax,0x3d
  420640:	jne    420b6f <__flatcc_fb_parse@@Base+0x41cf>
  420646:	mov    rax,QWORD PTR [rsp+0x8]
  42064b:	mov    rdi,QWORD PTR [rax]
  42064e:	movsxd rcx,DWORD PTR [rsi]
  420651:	lea    rbx,[rcx+rcx*4]
  420655:	lea    rdx,[rdi+rbx*8]
  420659:	mov    QWORD PTR [r9],rdx
  42065c:	mov    rax,QWORD PTR [r10]
  42065f:	cmp    rax,rdx
  420662:	jne    4206c0 <__flatcc_fb_parse@@Base+0x3d20>
  420664:	lea    eax,[rcx+rcx*1]
  420667:	test   ecx,ecx
  420669:	mov    ecx,0x400
  42066e:	cmove  eax,ecx
  420671:	mov    DWORD PTR [rsi],eax
  420673:	cdqe   
  420675:	shl    rax,0x3
  420679:	mov    rbp,rsi
  42067c:	lea    rsi,[rax+rax*4]
  420680:	call   4061e0 <realloc@plt>
  420685:	mov    rcx,QWORD PTR [rsp+0x8]
  42068a:	mov    QWORD PTR [rcx],rax
  42068d:	test   rax,rax
  420690:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420696:	movsxd rcx,DWORD PTR [rbp+0x0]
  42069a:	lea    rcx,[rcx+rcx*4]
  42069e:	lea    rcx,[rax+rcx*8]
  4206a2:	mov    r9,QWORD PTR [rsp+0x10]
  4206a7:	mov    QWORD PTR [r9],rcx
  4206aa:	lea    rax,[rax+rbx*8]
  4206ae:	mov    r10,QWORD PTR [rsp+0x28]
  4206b3:	mov    QWORD PTR [r10],rax
  4206b6:	mov    r11,QWORD PTR [rsp+0x20]
  4206bb:	mov    r8,QWORD PTR [rsp+0x18]
  4206c0:	lea    rbx,[r12+0x2]
  4206c5:	mov    QWORD PTR [rax+0x20],0x3d2d
  4206cd:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  4206d2:	lea    rax,[r12+0x1]
  4206d7:	mov    rbx,r13
  4206da:	cmp    rax,r13
  4206dd:	mov    rsi,QWORD PTR [rsp+0x30]
  4206e2:	je     42185b <__flatcc_fb_parse@@Base+0x4ebb>
  4206e8:	movsx  ecx,BYTE PTR [rax]
  4206eb:	cmp    ecx,0x3d
  4206ee:	je     4211bc <__flatcc_fb_parse@@Base+0x481c>
  4206f4:	mov    rbx,rax
  4206f7:	cmp    ecx,0x3e
  4206fa:	jne    42185b <__flatcc_fb_parse@@Base+0x4ebb>
  420700:	mov    rax,QWORD PTR [rsp+0x8]
  420705:	mov    rdi,QWORD PTR [rax]
  420708:	movsxd rcx,DWORD PTR [rsi]
  42070b:	lea    rbx,[rcx+rcx*4]
  42070f:	lea    rdx,[rdi+rbx*8]
  420713:	mov    QWORD PTR [r9],rdx
  420716:	mov    rax,QWORD PTR [r10]
  420719:	cmp    rax,rdx
  42071c:	jne    42077a <__flatcc_fb_parse@@Base+0x3dda>
  42071e:	lea    eax,[rcx+rcx*1]
  420721:	test   ecx,ecx
  420723:	mov    ecx,0x400
  420728:	cmove  eax,ecx
  42072b:	mov    DWORD PTR [rsi],eax
  42072d:	cdqe   
  42072f:	shl    rax,0x3
  420733:	mov    rbp,rsi
  420736:	lea    rsi,[rax+rax*4]
  42073a:	call   4061e0 <realloc@plt>
  42073f:	mov    rcx,QWORD PTR [rsp+0x8]
  420744:	mov    QWORD PTR [rcx],rax
  420747:	test   rax,rax
  42074a:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420750:	movsxd rcx,DWORD PTR [rbp+0x0]
  420754:	lea    rcx,[rcx+rcx*4]
  420758:	lea    rcx,[rax+rcx*8]
  42075c:	mov    r9,QWORD PTR [rsp+0x10]
  420761:	mov    QWORD PTR [r9],rcx
  420764:	lea    rax,[rax+rbx*8]
  420768:	mov    r10,QWORD PTR [rsp+0x28]
  42076d:	mov    QWORD PTR [r10],rax
  420770:	mov    r11,QWORD PTR [rsp+0x20]
  420775:	mov    r8,QWORD PTR [rsp+0x18]
  42077a:	lea    rbx,[r12+0x2]
  42077f:	mov    QWORD PTR [rax+0x20],0x3e3d
  420787:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  42078c:	lea    rbx,[r12+0x1]
  420791:	cmp    bpl,0x20
  420795:	mov    rsi,QWORD PTR [rsp+0x30]
  42079a:	jl     4207a2 <__flatcc_fb_parse@@Base+0x3e02>
  42079c:	cmp    bpl,0x7f
  4207a0:	jne    4207b2 <__flatcc_fb_parse@@Base+0x3e12>
  4207a2:	cmp    bpl,0x9
  4207a6:	je     4207b2 <__flatcc_fb_parse@@Base+0x3e12>
  4207a8:	cmp    bpl,0x20
  4207ac:	jne    4212e9 <__flatcc_fb_parse@@Base+0x4949>
  4207b2:	mov    rax,QWORD PTR [rsp+0x8]
  4207b7:	mov    rdi,QWORD PTR [rax]
  4207ba:	movsxd rcx,DWORD PTR [rsi]
  4207bd:	lea    r14,[rcx+rcx*4]
  4207c1:	lea    rdx,[rdi+r14*8]
  4207c5:	mov    QWORD PTR [r9],rdx
  4207c8:	mov    rax,QWORD PTR [r10]
  4207cb:	cmp    rax,rdx
  4207ce:	jne    42082c <__flatcc_fb_parse@@Base+0x3e8c>
  4207d0:	lea    eax,[rcx+rcx*1]
  4207d3:	test   ecx,ecx
  4207d5:	mov    ecx,0x400
  4207da:	cmove  eax,ecx
  4207dd:	mov    DWORD PTR [rsi],eax
  4207df:	cdqe   
  4207e1:	shl    rax,0x3
  4207e5:	mov    rbp,rsi
  4207e8:	lea    rsi,[rax+rax*4]
  4207ec:	call   4061e0 <realloc@plt>
  4207f1:	mov    rcx,QWORD PTR [rsp+0x8]
  4207f6:	mov    QWORD PTR [rcx],rax
  4207f9:	test   rax,rax
  4207fc:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420802:	movsxd rcx,DWORD PTR [rbp+0x0]
  420806:	lea    rcx,[rcx+rcx*4]
  42080a:	lea    rcx,[rax+rcx*8]
  42080e:	mov    r9,QWORD PTR [rsp+0x10]
  420813:	mov    QWORD PTR [r9],rcx
  420816:	lea    rax,[rax+r14*8]
  42081a:	mov    r10,QWORD PTR [rsp+0x28]
  42081f:	mov    QWORD PTR [r10],rax
  420822:	mov    r11,QWORD PTR [rsp+0x20]
  420827:	mov    r8,QWORD PTR [rsp+0x18]
  42082c:	mov    QWORD PTR [rax+0x20],0x8
  420834:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420839:	mov    rax,QWORD PTR [rsp+0x8]
  42083e:	mov    rdi,QWORD PTR [rax]
  420841:	movsxd rcx,DWORD PTR [rsi]
  420844:	lea    r14,[rcx+rcx*4]
  420848:	lea    rdx,[rdi+r14*8]
  42084c:	mov    QWORD PTR [r9],rdx
  42084f:	mov    rax,QWORD PTR [r10]
  420852:	cmp    rax,rdx
  420855:	jne    4208b3 <__flatcc_fb_parse@@Base+0x3f13>
  420857:	lea    eax,[rcx+rcx*1]
  42085a:	test   ecx,ecx
  42085c:	mov    ecx,0x400
  420861:	cmove  eax,ecx
  420864:	mov    DWORD PTR [rsi],eax
  420866:	cdqe   
  420868:	shl    rax,0x3
  42086c:	mov    rbp,rsi
  42086f:	lea    rsi,[rax+rax*4]
  420873:	call   4061e0 <realloc@plt>
  420878:	mov    rcx,QWORD PTR [rsp+0x8]
  42087d:	mov    QWORD PTR [rcx],rax
  420880:	test   rax,rax
  420883:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420889:	movsxd rcx,DWORD PTR [rbp+0x0]
  42088d:	lea    rcx,[rcx+rcx*4]
  420891:	lea    rcx,[rax+rcx*8]
  420895:	mov    r9,QWORD PTR [rsp+0x10]
  42089a:	mov    QWORD PTR [r9],rcx
  42089d:	lea    rax,[rax+r14*8]
  4208a1:	mov    r10,QWORD PTR [rsp+0x28]
  4208a6:	mov    QWORD PTR [r10],rax
  4208a9:	mov    r11,QWORD PTR [rsp+0x20]
  4208ae:	mov    r8,QWORD PTR [rsp+0x18]
  4208b3:	mov    QWORD PTR [rax+0x20],0x2b
  4208bb:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  4208c0:	mov    rax,QWORD PTR [rsp+0x8]
  4208c5:	mov    rdi,QWORD PTR [rax]
  4208c8:	movsxd rcx,DWORD PTR [rsi]
  4208cb:	lea    r14,[rcx+rcx*4]
  4208cf:	lea    rdx,[rdi+r14*8]
  4208d3:	mov    QWORD PTR [r9],rdx
  4208d6:	mov    rax,QWORD PTR [r10]
  4208d9:	cmp    rax,rdx
  4208dc:	jne    42093a <__flatcc_fb_parse@@Base+0x3f9a>
  4208de:	lea    eax,[rcx+rcx*1]
  4208e1:	test   ecx,ecx
  4208e3:	mov    ecx,0x400
  4208e8:	cmove  eax,ecx
  4208eb:	mov    DWORD PTR [rsi],eax
  4208ed:	cdqe   
  4208ef:	shl    rax,0x3
  4208f3:	mov    rbp,rsi
  4208f6:	lea    rsi,[rax+rax*4]
  4208fa:	call   4061e0 <realloc@plt>
  4208ff:	mov    rcx,QWORD PTR [rsp+0x8]
  420904:	mov    QWORD PTR [rcx],rax
  420907:	test   rax,rax
  42090a:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420910:	movsxd rcx,DWORD PTR [rbp+0x0]
  420914:	lea    rcx,[rcx+rcx*4]
  420918:	lea    rcx,[rax+rcx*8]
  42091c:	mov    r9,QWORD PTR [rsp+0x10]
  420921:	mov    QWORD PTR [r9],rcx
  420924:	lea    rax,[rax+r14*8]
  420928:	mov    r10,QWORD PTR [rsp+0x28]
  42092d:	mov    QWORD PTR [r10],rax
  420930:	mov    r11,QWORD PTR [rsp+0x20]
  420935:	mov    r8,QWORD PTR [rsp+0x18]
  42093a:	mov    QWORD PTR [rax+0x20],0x3a
  420942:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420947:	mov    rax,QWORD PTR [rsp+0x8]
  42094c:	mov    rdi,QWORD PTR [rax]
  42094f:	movsxd rcx,DWORD PTR [rsi]
  420952:	lea    r14,[rcx+rcx*4]
  420956:	lea    rdx,[rdi+r14*8]
  42095a:	mov    QWORD PTR [r9],rdx
  42095d:	mov    rax,QWORD PTR [r10]
  420960:	cmp    rax,rdx
  420963:	jne    4209c1 <__flatcc_fb_parse@@Base+0x4021>
  420965:	lea    eax,[rcx+rcx*1]
  420968:	test   ecx,ecx
  42096a:	mov    ecx,0x400
  42096f:	cmove  eax,ecx
  420972:	mov    DWORD PTR [rsi],eax
  420974:	cdqe   
  420976:	shl    rax,0x3
  42097a:	mov    rbp,rsi
  42097d:	lea    rsi,[rax+rax*4]
  420981:	call   4061e0 <realloc@plt>
  420986:	mov    rcx,QWORD PTR [rsp+0x8]
  42098b:	mov    QWORD PTR [rcx],rax
  42098e:	test   rax,rax
  420991:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420997:	movsxd rcx,DWORD PTR [rbp+0x0]
  42099b:	lea    rcx,[rcx+rcx*4]
  42099f:	lea    rcx,[rax+rcx*8]
  4209a3:	mov    r9,QWORD PTR [rsp+0x10]
  4209a8:	mov    QWORD PTR [r9],rcx
  4209ab:	lea    rax,[rax+r14*8]
  4209af:	mov    r10,QWORD PTR [rsp+0x28]
  4209b4:	mov    QWORD PTR [r10],rax
  4209b7:	mov    r11,QWORD PTR [rsp+0x20]
  4209bc:	mov    r8,QWORD PTR [rsp+0x18]
  4209c1:	mov    QWORD PTR [rax+0x20],0x3e
  4209c9:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  4209ce:	mov    rax,QWORD PTR [rsp+0x8]
  4209d3:	mov    rdi,QWORD PTR [rax]
  4209d6:	movsxd rcx,DWORD PTR [rsi]
  4209d9:	lea    r14,[rcx+rcx*4]
  4209dd:	lea    rdx,[rdi+r14*8]
  4209e1:	mov    QWORD PTR [r9],rdx
  4209e4:	mov    rax,QWORD PTR [r10]
  4209e7:	cmp    rax,rdx
  4209ea:	jne    420a48 <__flatcc_fb_parse@@Base+0x40a8>
  4209ec:	lea    eax,[rcx+rcx*1]
  4209ef:	test   ecx,ecx
  4209f1:	mov    ecx,0x400
  4209f6:	cmove  eax,ecx
  4209f9:	mov    DWORD PTR [rsi],eax
  4209fb:	cdqe   
  4209fd:	shl    rax,0x3
  420a01:	mov    rbp,rsi
  420a04:	lea    rsi,[rax+rax*4]
  420a08:	call   4061e0 <realloc@plt>
  420a0d:	mov    rcx,QWORD PTR [rsp+0x8]
  420a12:	mov    QWORD PTR [rcx],rax
  420a15:	test   rax,rax
  420a18:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420a1e:	movsxd rcx,DWORD PTR [rbp+0x0]
  420a22:	lea    rcx,[rcx+rcx*4]
  420a26:	lea    rcx,[rax+rcx*8]
  420a2a:	mov    r9,QWORD PTR [rsp+0x10]
  420a2f:	mov    QWORD PTR [r9],rcx
  420a32:	lea    rax,[rax+r14*8]
  420a36:	mov    r10,QWORD PTR [rsp+0x28]
  420a3b:	mov    QWORD PTR [r10],rax
  420a3e:	mov    r11,QWORD PTR [rsp+0x20]
  420a43:	mov    r8,QWORD PTR [rsp+0x18]
  420a48:	mov    QWORD PTR [rax+0x20],0x2a
  420a50:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420a55:	mov    r15,0xfffffffffffffc2c
  420a5c:	jmp    41f9a6 <__flatcc_fb_parse@@Base+0x3006>
  420a61:	mov    rax,QWORD PTR [rsp+0x8]
  420a66:	mov    rdi,QWORD PTR [rax]
  420a69:	movsxd rcx,DWORD PTR [rsi]
  420a6c:	lea    r14,[rcx+rcx*4]
  420a70:	lea    rdx,[rdi+r14*8]
  420a74:	mov    QWORD PTR [r9],rdx
  420a77:	mov    rax,QWORD PTR [r10]
  420a7a:	cmp    rax,rdx
  420a7d:	jne    420adb <__flatcc_fb_parse@@Base+0x413b>
  420a7f:	lea    eax,[rcx+rcx*1]
  420a82:	test   ecx,ecx
  420a84:	mov    ecx,0x400
  420a89:	cmove  eax,ecx
  420a8c:	mov    DWORD PTR [rsi],eax
  420a8e:	cdqe   
  420a90:	shl    rax,0x3
  420a94:	mov    rbp,rsi
  420a97:	lea    rsi,[rax+rax*4]
  420a9b:	call   4061e0 <realloc@plt>
  420aa0:	mov    rcx,QWORD PTR [rsp+0x8]
  420aa5:	mov    QWORD PTR [rcx],rax
  420aa8:	test   rax,rax
  420aab:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420ab1:	movsxd rcx,DWORD PTR [rbp+0x0]
  420ab5:	lea    rcx,[rcx+rcx*4]
  420ab9:	lea    rcx,[rax+rcx*8]
  420abd:	mov    r9,QWORD PTR [rsp+0x10]
  420ac2:	mov    QWORD PTR [r9],rcx
  420ac5:	lea    rax,[rax+r14*8]
  420ac9:	mov    r10,QWORD PTR [rsp+0x28]
  420ace:	mov    QWORD PTR [r10],rax
  420ad1:	mov    r11,QWORD PTR [rsp+0x20]
  420ad6:	mov    r8,QWORD PTR [rsp+0x18]
  420adb:	mov    QWORD PTR [rax+0x20],0x3c
  420ae3:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420ae8:	mov    rax,QWORD PTR [rsp+0x8]
  420aed:	mov    rdi,QWORD PTR [rax]
  420af0:	movsxd rcx,DWORD PTR [rsi]
  420af3:	lea    r14,[rcx+rcx*4]
  420af7:	lea    rdx,[rdi+r14*8]
  420afb:	mov    QWORD PTR [r9],rdx
  420afe:	mov    rax,QWORD PTR [r10]
  420b01:	cmp    rax,rdx
  420b04:	jne    420b62 <__flatcc_fb_parse@@Base+0x41c2>
  420b06:	lea    eax,[rcx+rcx*1]
  420b09:	test   ecx,ecx
  420b0b:	mov    ecx,0x400
  420b10:	cmove  eax,ecx
  420b13:	mov    DWORD PTR [rsi],eax
  420b15:	cdqe   
  420b17:	shl    rax,0x3
  420b1b:	mov    rbp,rsi
  420b1e:	lea    rsi,[rax+rax*4]
  420b22:	call   4061e0 <realloc@plt>
  420b27:	mov    rcx,QWORD PTR [rsp+0x8]
  420b2c:	mov    QWORD PTR [rcx],rax
  420b2f:	test   rax,rax
  420b32:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420b38:	movsxd rcx,DWORD PTR [rbp+0x0]
  420b3c:	lea    rcx,[rcx+rcx*4]
  420b40:	lea    rcx,[rax+rcx*8]
  420b44:	mov    r9,QWORD PTR [rsp+0x10]
  420b49:	mov    QWORD PTR [r9],rcx
  420b4c:	lea    rax,[rax+r14*8]
  420b50:	mov    r10,QWORD PTR [rsp+0x28]
  420b55:	mov    QWORD PTR [r10],rax
  420b58:	mov    r11,QWORD PTR [rsp+0x20]
  420b5d:	mov    r8,QWORD PTR [rsp+0x18]
  420b62:	mov    QWORD PTR [rax+0x20],0x2f
  420b6a:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420b6f:	mov    rax,QWORD PTR [rsp+0x8]
  420b74:	mov    rdi,QWORD PTR [rax]
  420b77:	movsxd rcx,DWORD PTR [rsi]
  420b7a:	lea    r14,[rcx+rcx*4]
  420b7e:	lea    rdx,[rdi+r14*8]
  420b82:	mov    QWORD PTR [r9],rdx
  420b85:	mov    rax,QWORD PTR [r10]
  420b88:	cmp    rax,rdx
  420b8b:	jne    420be9 <__flatcc_fb_parse@@Base+0x4249>
  420b8d:	lea    eax,[rcx+rcx*1]
  420b90:	test   ecx,ecx
  420b92:	mov    ecx,0x400
  420b97:	cmove  eax,ecx
  420b9a:	mov    DWORD PTR [rsi],eax
  420b9c:	cdqe   
  420b9e:	shl    rax,0x3
  420ba2:	mov    rbp,rsi
  420ba5:	lea    rsi,[rax+rax*4]
  420ba9:	call   4061e0 <realloc@plt>
  420bae:	mov    rcx,QWORD PTR [rsp+0x8]
  420bb3:	mov    QWORD PTR [rcx],rax
  420bb6:	test   rax,rax
  420bb9:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420bbf:	movsxd rcx,DWORD PTR [rbp+0x0]
  420bc3:	lea    rcx,[rcx+rcx*4]
  420bc7:	lea    rcx,[rax+rcx*8]
  420bcb:	mov    r9,QWORD PTR [rsp+0x10]
  420bd0:	mov    QWORD PTR [r9],rcx
  420bd3:	lea    rax,[rax+r14*8]
  420bd7:	mov    r10,QWORD PTR [rsp+0x28]
  420bdc:	mov    QWORD PTR [r10],rax
  420bdf:	mov    r11,QWORD PTR [rsp+0x20]
  420be4:	mov    r8,QWORD PTR [rsp+0x18]
  420be9:	mov    QWORD PTR [rax+0x20],0x2d
  420bf1:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  420bf6:	movsxd rdx,esi
  420bf9:	lea    r14,[rdx+rdx*4]
  420bfd:	lea    rdx,[rax+r14*8]
  420c01:	mov    rdi,QWORD PTR [rsp+0x10]
  420c06:	mov    QWORD PTR [rdi],rdx
  420c09:	cmp    rcx,rdx
  420c0c:	mov    r15,QWORD PTR [rsp+0x40]
  420c11:	jne    420c7a <__flatcc_fb_parse@@Base+0x42da>
  420c13:	lea    ecx,[rsi+rsi*1]
  420c16:	test   esi,esi
  420c18:	mov    edx,0x400
  420c1d:	cmove  ecx,edx
  420c20:	mov    rbx,QWORD PTR [rsp+0x30]
  420c25:	mov    DWORD PTR [rbx],ecx
  420c27:	movsxd rcx,ecx
  420c2a:	shl    rcx,0x3
  420c2e:	lea    rsi,[rcx+rcx*4]
  420c32:	mov    rdi,rax
  420c35:	call   4061e0 <realloc@plt>
  420c3a:	mov    rcx,QWORD PTR [rsp+0x8]
  420c3f:	mov    QWORD PTR [rcx],rax
  420c42:	test   rax,rax
  420c45:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420c4b:	movsxd rcx,DWORD PTR [rbx]
  420c4e:	lea    rcx,[rcx+rcx*4]
  420c52:	lea    rcx,[rax+rcx*8]
  420c56:	mov    rdx,QWORD PTR [rsp+0x10]
  420c5b:	mov    QWORD PTR [rdx],rcx
  420c5e:	lea    rcx,[rax+r14*8]
  420c62:	mov    r10,QWORD PTR [rsp+0x28]
  420c67:	mov    QWORD PTR [r10],rcx
  420c6a:	mov    rax,QWORD PTR [rsp+0x18]
  420c6f:	mov    r9,QWORD PTR [rax]
  420c72:	mov    r11,QWORD PTR [rsp+0x20]
  420c77:	mov    r8,QWORD PTR [r11]
  420c7a:	inc    rbp
  420c7d:	mov    QWORD PTR [rcx+0x20],0x16
  420c85:	mov    QWORD PTR [rcx],r13
  420c88:	mov    rax,rbp
  420c8b:	sub    rax,r13
  420c8e:	mov    QWORD PTR [rcx+0x8],rax
  420c92:	mov    QWORD PTR [rcx+0x10],r9
  420c96:	sub    r13,r8
  420c99:	inc    r13
  420c9c:	mov    QWORD PTR [rcx+0x18],r13
  420ca0:	add    rcx,0x28
  420ca4:	mov    QWORD PTR [r10],rcx
  420ca7:	mov    r12,rbp
  420caa:	mov    r8,QWORD PTR [rsp+0x18]
  420caf:	mov    r9,QWORD PTR [rsp+0x10]
  420cb4:	mov    r13,QWORD PTR [rsp+0x48]
  420cb9:	jmp    4219b5 <__flatcc_fb_parse@@Base+0x5015>
  420cbe:	movsxd rdx,esi
  420cc1:	lea    rbx,[rdx+rdx*4]
  420cc5:	lea    rdx,[rax+rbx*8]
  420cc9:	mov    rdi,QWORD PTR [rsp+0x10]
  420cce:	mov    QWORD PTR [rdi],rdx
  420cd1:	cmp    rcx,rdx
  420cd4:	mov    r13,QWORD PTR [rsp+0x48]
  420cd9:	mov    r15,QWORD PTR [rsp+0x40]
  420cde:	jne    421980 <__flatcc_fb_parse@@Base+0x4fe0>
  420ce4:	jmp    421917 <__flatcc_fb_parse@@Base+0x4f77>
  420ce9:	mov    rax,QWORD PTR [rsp+0x8]
  420cee:	mov    rdi,QWORD PTR [rax]
  420cf1:	movsxd rcx,DWORD PTR [rsi]
  420cf4:	lea    rbx,[rcx+rcx*4]
  420cf8:	lea    rdx,[rdi+rbx*8]
  420cfc:	mov    QWORD PTR [r9],rdx
  420cff:	mov    rax,QWORD PTR [r10]
  420d02:	cmp    rax,rdx
  420d05:	jne    420d63 <__flatcc_fb_parse@@Base+0x43c3>
  420d07:	lea    eax,[rcx+rcx*1]
  420d0a:	test   ecx,ecx
  420d0c:	mov    ecx,0x400
  420d11:	cmove  eax,ecx
  420d14:	mov    DWORD PTR [rsi],eax
  420d16:	cdqe   
  420d18:	shl    rax,0x3
  420d1c:	mov    rbp,rsi
  420d1f:	lea    rsi,[rax+rax*4]
  420d23:	call   4061e0 <realloc@plt>
  420d28:	mov    rcx,QWORD PTR [rsp+0x8]
  420d2d:	mov    QWORD PTR [rcx],rax
  420d30:	test   rax,rax
  420d33:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420d39:	movsxd rcx,DWORD PTR [rbp+0x0]
  420d3d:	lea    rcx,[rcx+rcx*4]
  420d41:	lea    rcx,[rax+rcx*8]
  420d45:	mov    r9,QWORD PTR [rsp+0x10]
  420d4a:	mov    QWORD PTR [r9],rcx
  420d4d:	lea    rax,[rax+rbx*8]
  420d51:	mov    r10,QWORD PTR [rsp+0x28]
  420d56:	mov    QWORD PTR [r10],rax
  420d59:	mov    r11,QWORD PTR [rsp+0x20]
  420d5e:	mov    r8,QWORD PTR [rsp+0x18]
  420d63:	lea    rbx,[r12+0x2]
  420d68:	mov    QWORD PTR [rax+0x20],0x2b2b
  420d70:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  420d75:	lea    rbx,[r12+0x2]
  420d7a:	cmp    rbx,r13
  420d7d:	je     421729 <__flatcc_fb_parse@@Base+0x4d89>
  420d83:	cmp    BYTE PTR [rbx],0x3d
  420d86:	jne    421729 <__flatcc_fb_parse@@Base+0x4d89>
  420d8c:	mov    rax,QWORD PTR [rsp+0x8]
  420d91:	mov    rdi,QWORD PTR [rax]
  420d94:	movsxd rcx,DWORD PTR [rsi]
  420d97:	lea    rbx,[rcx+rcx*4]
  420d9b:	lea    rdx,[rdi+rbx*8]
  420d9f:	mov    QWORD PTR [r9],rdx
  420da2:	mov    rax,QWORD PTR [r10]
  420da5:	cmp    rax,rdx
  420da8:	jne    420e06 <__flatcc_fb_parse@@Base+0x4466>
  420daa:	lea    eax,[rcx+rcx*1]
  420dad:	test   ecx,ecx
  420daf:	mov    ecx,0x400
  420db4:	cmove  eax,ecx
  420db7:	mov    DWORD PTR [rsi],eax
  420db9:	cdqe   
  420dbb:	shl    rax,0x3
  420dbf:	mov    rbp,rsi
  420dc2:	lea    rsi,[rax+rax*4]
  420dc6:	call   4061e0 <realloc@plt>
  420dcb:	mov    rcx,QWORD PTR [rsp+0x8]
  420dd0:	mov    QWORD PTR [rcx],rax
  420dd3:	test   rax,rax
  420dd6:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420ddc:	movsxd rcx,DWORD PTR [rbp+0x0]
  420de0:	lea    rcx,[rcx+rcx*4]
  420de4:	lea    rcx,[rax+rcx*8]
  420de8:	mov    r9,QWORD PTR [rsp+0x10]
  420ded:	mov    QWORD PTR [r9],rcx
  420df0:	lea    rax,[rax+rbx*8]
  420df4:	mov    r10,QWORD PTR [rsp+0x28]
  420df9:	mov    QWORD PTR [r10],rax
  420dfc:	mov    r11,QWORD PTR [rsp+0x20]
  420e01:	mov    r8,QWORD PTR [rsp+0x18]
  420e06:	lea    rbx,[r12+0x3]
  420e0b:	mov    QWORD PTR [rax+0x20],0x3d3a3a
  420e13:	jmp    422394 <__flatcc_fb_parse@@Base+0x59f4>
  420e18:	lea    rbx,[r12+0x2]
  420e1d:	cmp    rbx,r13
  420e20:	je     4219c3 <__flatcc_fb_parse@@Base+0x5023>
  420e26:	movsx  eax,BYTE PTR [rbx]
  420e29:	cmp    eax,0x3e
  420e2c:	je     4220b3 <__flatcc_fb_parse@@Base+0x5713>
  420e32:	cmp    eax,0x3d
  420e35:	jne    4219c3 <__flatcc_fb_parse@@Base+0x5023>
  420e3b:	mov    rax,QWORD PTR [rsp+0x8]
  420e40:	mov    rdi,QWORD PTR [rax]
  420e43:	movsxd rcx,DWORD PTR [rsi]
  420e46:	lea    rbx,[rcx+rcx*4]
  420e4a:	lea    rdx,[rdi+rbx*8]
  420e4e:	mov    QWORD PTR [r9],rdx
  420e51:	mov    rax,QWORD PTR [r10]
  420e54:	cmp    rax,rdx
  420e57:	jne    420eb5 <__flatcc_fb_parse@@Base+0x4515>
  420e59:	lea    eax,[rcx+rcx*1]
  420e5c:	test   ecx,ecx
  420e5e:	mov    ecx,0x400
  420e63:	cmove  eax,ecx
  420e66:	mov    DWORD PTR [rsi],eax
  420e68:	cdqe   
  420e6a:	shl    rax,0x3
  420e6e:	mov    rbp,rsi
  420e71:	lea    rsi,[rax+rax*4]
  420e75:	call   4061e0 <realloc@plt>
  420e7a:	mov    rcx,QWORD PTR [rsp+0x8]
  420e7f:	mov    QWORD PTR [rcx],rax
  420e82:	test   rax,rax
  420e85:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420e8b:	movsxd rcx,DWORD PTR [rbp+0x0]
  420e8f:	lea    rcx,[rcx+rcx*4]
  420e93:	lea    rcx,[rax+rcx*8]
  420e97:	mov    r9,QWORD PTR [rsp+0x10]
  420e9c:	mov    QWORD PTR [r9],rcx
  420e9f:	lea    rax,[rax+rbx*8]
  420ea3:	mov    r10,QWORD PTR [rsp+0x28]
  420ea8:	mov    QWORD PTR [r10],rax
  420eab:	mov    r11,QWORD PTR [rsp+0x20]
  420eb0:	mov    r8,QWORD PTR [rsp+0x18]
  420eb5:	lea    rbx,[r12+0x3]
  420eba:	mov    QWORD PTR [rax+0x20],0x3d3e3e
  420ec2:	jmp    422394 <__flatcc_fb_parse@@Base+0x59f4>
  420ec7:	mov    rax,QWORD PTR [rsp+0x8]
  420ecc:	mov    rdi,QWORD PTR [rax]
  420ecf:	movsxd rcx,DWORD PTR [rsi]
  420ed2:	lea    rbx,[rcx+rcx*4]
  420ed6:	lea    rdx,[rdi+rbx*8]
  420eda:	mov    QWORD PTR [r9],rdx
  420edd:	mov    rax,QWORD PTR [r10]
  420ee0:	cmp    rax,rdx
  420ee3:	jne    420f44 <__flatcc_fb_parse@@Base+0x45a4>
  420ee5:	lea    eax,[rcx+rcx*1]
  420ee8:	test   ecx,ecx
  420eea:	mov    ecx,0x400
  420eef:	cmove  eax,ecx
  420ef2:	mov    DWORD PTR [rsi],eax
  420ef4:	cdqe   
  420ef6:	shl    rax,0x3
  420efa:	mov    rbp,rsi
  420efd:	lea    rsi,[rax+rax*4]
  420f01:	call   4061e0 <realloc@plt>
  420f06:	mov    rcx,QWORD PTR [rsp+0x8]
  420f0b:	mov    QWORD PTR [rcx],rax
  420f0e:	test   rax,rax
  420f11:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420f17:	movsxd rcx,DWORD PTR [rbp+0x0]
  420f1b:	lea    rcx,[rcx+rcx*4]
  420f1f:	lea    rcx,[rax+rcx*8]
  420f23:	mov    r9,QWORD PTR [rsp+0x10]
  420f28:	mov    QWORD PTR [r9],rcx
  420f2b:	lea    rax,[rax+rbx*8]
  420f2f:	mov    r10,QWORD PTR [rsp+0x28]
  420f34:	mov    QWORD PTR [r10],rax
  420f37:	mov    r11,QWORD PTR [rsp+0x20]
  420f3c:	mov    r8,QWORD PTR [rsp+0x18]
  420f41:	mov    rsi,rbp
  420f44:	lea    rbx,[r12+0x2]
  420f49:	mov    QWORD PTR [rax+0x20],0x2626
  420f51:	mov    QWORD PTR [rax],r12
  420f54:	mov    QWORD PTR [rax+0x8],0x2
  420f5c:	mov    rcx,QWORD PTR [r8]
  420f5f:	mov    QWORD PTR [rax+0x10],rcx
  420f63:	mov    rcx,r12
  420f66:	sub    rcx,QWORD PTR [r11]
  420f69:	inc    rcx
  420f6c:	mov    QWORD PTR [rax+0x18],rcx
  420f70:	add    rax,0x28
  420f74:	mov    QWORD PTR [r10],rax
  420f77:	mov    rax,QWORD PTR [rsp+0x8]
  420f7c:	mov    rdi,QWORD PTR [rax]
  420f7f:	movsxd rcx,DWORD PTR [rsi]
  420f82:	lea    r14,[rcx+rcx*4]
  420f86:	lea    rdx,[rdi+r14*8]
  420f8a:	mov    QWORD PTR [r9],rdx
  420f8d:	mov    rax,QWORD PTR [r10]
  420f90:	cmp    rax,rdx
  420f93:	jne    420ff1 <__flatcc_fb_parse@@Base+0x4651>
  420f95:	lea    eax,[rcx+rcx*1]
  420f98:	test   ecx,ecx
  420f9a:	mov    ecx,0x400
  420f9f:	cmove  eax,ecx
  420fa2:	mov    DWORD PTR [rsi],eax
  420fa4:	cdqe   
  420fa6:	shl    rax,0x3
  420faa:	mov    rbp,rsi
  420fad:	lea    rsi,[rax+rax*4]
  420fb1:	call   4061e0 <realloc@plt>
  420fb6:	mov    rcx,QWORD PTR [rsp+0x8]
  420fbb:	mov    QWORD PTR [rcx],rax
  420fbe:	test   rax,rax
  420fc1:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  420fc7:	movsxd rcx,DWORD PTR [rbp+0x0]
  420fcb:	lea    rcx,[rcx+rcx*4]
  420fcf:	lea    rcx,[rax+rcx*8]
  420fd3:	mov    r9,QWORD PTR [rsp+0x10]
  420fd8:	mov    QWORD PTR [r9],rcx
  420fdb:	lea    rax,[rax+r14*8]
  420fdf:	mov    r10,QWORD PTR [rsp+0x28]
  420fe4:	mov    QWORD PTR [r10],rax
  420fe7:	mov    r11,QWORD PTR [rsp+0x20]
  420fec:	mov    r8,QWORD PTR [rsp+0x18]
  420ff1:	mov    QWORD PTR [rax+0x20],0x26
  420ff9:	jmp    4218dd <__flatcc_fb_parse@@Base+0x4f3d>
  420ffe:	mov    rax,QWORD PTR [rsp+0x8]
  421003:	mov    rdi,QWORD PTR [rax]
  421006:	movsxd rcx,DWORD PTR [rsi]
  421009:	lea    rbx,[rcx+rcx*4]
  42100d:	lea    rdx,[rdi+rbx*8]
  421011:	mov    QWORD PTR [r9],rdx
  421014:	mov    rax,QWORD PTR [r10]
  421017:	cmp    rax,rdx
  42101a:	jne    42107b <__flatcc_fb_parse@@Base+0x46db>
  42101c:	lea    eax,[rcx+rcx*1]
  42101f:	test   ecx,ecx
  421021:	mov    ecx,0x400
  421026:	cmove  eax,ecx
  421029:	mov    DWORD PTR [rsi],eax
  42102b:	cdqe   
  42102d:	shl    rax,0x3
  421031:	mov    rbp,rsi
  421034:	lea    rsi,[rax+rax*4]
  421038:	call   4061e0 <realloc@plt>
  42103d:	mov    rcx,QWORD PTR [rsp+0x8]
  421042:	mov    QWORD PTR [rcx],rax
  421045:	test   rax,rax
  421048:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  42104e:	movsxd rcx,DWORD PTR [rbp+0x0]
  421052:	lea    rcx,[rcx+rcx*4]
  421056:	lea    rcx,[rax+rcx*8]
  42105a:	mov    r9,QWORD PTR [rsp+0x10]
  42105f:	mov    QWORD PTR [r9],rcx
  421062:	lea    rax,[rax+rbx*8]
  421066:	mov    r10,QWORD PTR [rsp+0x28]
  42106b:	mov    QWORD PTR [r10],rax
  42106e:	mov    r11,QWORD PTR [rsp+0x20]
  421073:	mov    r8,QWORD PTR [rsp+0x18]
  421078:	mov    rsi,rbp
  42107b:	lea    rbx,[r12+0x2]
  421080:	mov    QWORD PTR [rax+0x20],0x7c7c
  421088:	mov    QWORD PTR [rax],r12
  42108b:	mov    QWORD PTR [rax+0x8],0x2
  421093:	mov    rcx,QWORD PTR [r8]
  421096:	mov    QWORD PTR [rax+0x10],rcx
  42109a:	mov    rcx,r12
  42109d:	sub    rcx,QWORD PTR [r11]
  4210a0:	inc    rcx
  4210a3:	mov    QWORD PTR [rax+0x18],rcx
  4210a7:	add    rax,0x28
  4210ab:	mov    QWORD PTR [r10],rax
  4210ae:	mov    rax,QWORD PTR [rsp+0x8]
  4210b3:	mov    rdi,QWORD PTR [rax]
  4210b6:	movsxd rcx,DWORD PTR [rsi]
  4210b9:	lea    r14,[rcx+rcx*4]
  4210bd:	lea    rdx,[rdi+r14*8]
  4210c1:	mov    QWORD PTR [r9],rdx
  4210c4:	mov    rax,QWORD PTR [r10]
  4210c7:	cmp    rax,rdx
  4210ca:	jne    421128 <__flatcc_fb_parse@@Base+0x4788>
  4210cc:	lea    eax,[rcx+rcx*1]
  4210cf:	test   ecx,ecx
  4210d1:	mov    ecx,0x400
  4210d6:	cmove  eax,ecx
  4210d9:	mov    DWORD PTR [rsi],eax
  4210db:	cdqe   
  4210dd:	shl    rax,0x3
  4210e1:	mov    rbp,rsi
  4210e4:	lea    rsi,[rax+rax*4]
  4210e8:	call   4061e0 <realloc@plt>
  4210ed:	mov    rcx,QWORD PTR [rsp+0x8]
  4210f2:	mov    QWORD PTR [rcx],rax
  4210f5:	test   rax,rax
  4210f8:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4210fe:	movsxd rcx,DWORD PTR [rbp+0x0]
  421102:	lea    rcx,[rcx+rcx*4]
  421106:	lea    rcx,[rax+rcx*8]
  42110a:	mov    r9,QWORD PTR [rsp+0x10]
  42110f:	mov    QWORD PTR [r9],rcx
  421112:	lea    rax,[rax+r14*8]
  421116:	mov    r10,QWORD PTR [rsp+0x28]
  42111b:	mov    QWORD PTR [r10],rax
  42111e:	mov    r11,QWORD PTR [rsp+0x20]
  421123:	mov    r8,QWORD PTR [rsp+0x18]
  421128:	mov    QWORD PTR [rax+0x20],0x7c
  421130:	jmp    4218dd <__flatcc_fb_parse@@Base+0x4f3d>
  421135:	mov    rax,QWORD PTR [rsp+0x8]
  42113a:	mov    rdi,QWORD PTR [rax]
  42113d:	movsxd rcx,DWORD PTR [rsi]
  421140:	lea    r14,[rcx+rcx*4]
  421144:	lea    rdx,[rdi+r14*8]
  421148:	mov    QWORD PTR [r9],rdx
  42114b:	mov    rax,QWORD PTR [r10]
  42114e:	cmp    rax,rdx
  421151:	jne    4211af <__flatcc_fb_parse@@Base+0x480f>
  421153:	lea    eax,[rcx+rcx*1]
  421156:	test   ecx,ecx
  421158:	mov    ecx,0x400
  42115d:	cmove  eax,ecx
  421160:	mov    DWORD PTR [rsi],eax
  421162:	cdqe   
  421164:	shl    rax,0x3
  421168:	mov    rbp,rsi
  42116b:	lea    rsi,[rax+rax*4]
  42116f:	call   4061e0 <realloc@plt>
  421174:	mov    rcx,QWORD PTR [rsp+0x8]
  421179:	mov    QWORD PTR [rcx],rax
  42117c:	test   rax,rax
  42117f:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421185:	movsxd rcx,DWORD PTR [rbp+0x0]
  421189:	lea    rcx,[rcx+rcx*4]
  42118d:	lea    rcx,[rax+rcx*8]
  421191:	mov    r9,QWORD PTR [rsp+0x10]
  421196:	mov    QWORD PTR [r9],rcx
  421199:	lea    rax,[rax+r14*8]
  42119d:	mov    r10,QWORD PTR [rsp+0x28]
  4211a2:	mov    QWORD PTR [r10],rax
  4211a5:	mov    r11,QWORD PTR [rsp+0x20]
  4211aa:	mov    r8,QWORD PTR [rsp+0x18]
  4211af:	mov    QWORD PTR [rax+0x20],0x2a2a
  4211b7:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  4211bc:	lea    rbx,[r12+0x2]
  4211c1:	cmp    rbx,r13
  4211c4:	je     4217b0 <__flatcc_fb_parse@@Base+0x4e10>
  4211ca:	cmp    BYTE PTR [rbx],0x3d
  4211cd:	jne    4217b0 <__flatcc_fb_parse@@Base+0x4e10>
  4211d3:	mov    rax,QWORD PTR [rsp+0x8]
  4211d8:	mov    rdi,QWORD PTR [rax]
  4211db:	movsxd rcx,DWORD PTR [rsi]
  4211de:	lea    rbx,[rcx+rcx*4]
  4211e2:	lea    rdx,[rdi+rbx*8]
  4211e6:	mov    QWORD PTR [r9],rdx
  4211e9:	mov    rax,QWORD PTR [r10]
  4211ec:	cmp    rax,rdx
  4211ef:	jne    42124d <__flatcc_fb_parse@@Base+0x48ad>
  4211f1:	lea    eax,[rcx+rcx*1]
  4211f4:	test   ecx,ecx
  4211f6:	mov    ecx,0x400
  4211fb:	cmove  eax,ecx
  4211fe:	mov    DWORD PTR [rsi],eax
  421200:	cdqe   
  421202:	shl    rax,0x3
  421206:	mov    rbp,rsi
  421209:	lea    rsi,[rax+rax*4]
  42120d:	call   4061e0 <realloc@plt>
  421212:	mov    rcx,QWORD PTR [rsp+0x8]
  421217:	mov    QWORD PTR [rcx],rax
  42121a:	test   rax,rax
  42121d:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421223:	movsxd rcx,DWORD PTR [rbp+0x0]
  421227:	lea    rcx,[rcx+rcx*4]
  42122b:	lea    rcx,[rax+rcx*8]
  42122f:	mov    r9,QWORD PTR [rsp+0x10]
  421234:	mov    QWORD PTR [r9],rcx
  421237:	lea    rax,[rax+rbx*8]
  42123b:	mov    r10,QWORD PTR [rsp+0x28]
  421240:	mov    QWORD PTR [r10],rax
  421243:	mov    r11,QWORD PTR [rsp+0x20]
  421248:	mov    r8,QWORD PTR [rsp+0x18]
  42124d:	lea    rbx,[r12+0x3]
  421252:	mov    QWORD PTR [rax+0x20],0x3d3d3d
  42125a:	jmp    422394 <__flatcc_fb_parse@@Base+0x59f4>
  42125f:	mov    rbx,r13
  421262:	mov    rax,QWORD PTR [rsp+0x8]
  421267:	mov    rdi,QWORD PTR [rax]
  42126a:	movsxd rcx,DWORD PTR [rsi]
  42126d:	lea    r14,[rcx+rcx*4]
  421271:	lea    rdx,[rdi+r14*8]
  421275:	mov    QWORD PTR [r9],rdx
  421278:	mov    rax,QWORD PTR [r10]
  42127b:	cmp    rax,rdx
  42127e:	jne    4212dc <__flatcc_fb_parse@@Base+0x493c>
  421280:	lea    eax,[rcx+rcx*1]
  421283:	test   ecx,ecx
  421285:	mov    ecx,0x400
  42128a:	cmove  eax,ecx
  42128d:	mov    DWORD PTR [rsi],eax
  42128f:	cdqe   
  421291:	shl    rax,0x3
  421295:	mov    rbp,rsi
  421298:	lea    rsi,[rax+rax*4]
  42129c:	call   4061e0 <realloc@plt>
  4212a1:	mov    rcx,QWORD PTR [rsp+0x8]
  4212a6:	mov    QWORD PTR [rcx],rax
  4212a9:	test   rax,rax
  4212ac:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4212b2:	movsxd rcx,DWORD PTR [rbp+0x0]
  4212b6:	lea    rcx,[rcx+rcx*4]
  4212ba:	lea    rcx,[rax+rcx*8]
  4212be:	mov    r9,QWORD PTR [rsp+0x10]
  4212c3:	mov    QWORD PTR [r9],rcx
  4212c6:	lea    rax,[rax+r14*8]
  4212ca:	mov    r10,QWORD PTR [rsp+0x28]
  4212cf:	mov    QWORD PTR [r10],rax
  4212d2:	mov    r11,QWORD PTR [rsp+0x20]
  4212d7:	mov    r8,QWORD PTR [rsp+0x18]
  4212dc:	mov    QWORD PTR [rax+0x20],0xe
  4212e4:	jmp    4218dd <__flatcc_fb_parse@@Base+0x4f3d>
  4212e9:	mov    rax,QWORD PTR [rsp+0x8]
  4212ee:	mov    rdi,QWORD PTR [rax]
  4212f1:	movsxd rcx,DWORD PTR [rsi]
  4212f4:	lea    r14,[rcx+rcx*4]
  4212f8:	lea    rdx,[rdi+r14*8]
  4212fc:	mov    QWORD PTR [r9],rdx
  4212ff:	mov    rax,QWORD PTR [r10]
  421302:	cmp    rax,rdx
  421305:	jne    421363 <__flatcc_fb_parse@@Base+0x49c3>
  421307:	lea    eax,[rcx+rcx*1]
  42130a:	test   ecx,ecx
  42130c:	mov    ecx,0x400
  421311:	cmove  eax,ecx
  421314:	mov    DWORD PTR [rsi],eax
  421316:	cdqe   
  421318:	shl    rax,0x3
  42131c:	mov    rbp,rsi
  42131f:	lea    rsi,[rax+rax*4]
  421323:	call   4061e0 <realloc@plt>
  421328:	mov    rcx,QWORD PTR [rsp+0x8]
  42132d:	mov    QWORD PTR [rcx],rax
  421330:	test   rax,rax
  421333:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421339:	movsxd rcx,DWORD PTR [rbp+0x0]
  42133d:	lea    rcx,[rcx+rcx*4]
  421341:	lea    rcx,[rax+rcx*8]
  421345:	mov    r9,QWORD PTR [rsp+0x10]
  42134a:	mov    QWORD PTR [r9],rcx
  42134d:	lea    rax,[rax+r14*8]
  421351:	mov    r10,QWORD PTR [rsp+0x28]
  421356:	mov    QWORD PTR [r10],rax
  421359:	mov    r11,QWORD PTR [rsp+0x20]
  42135e:	mov    r8,QWORD PTR [rsp+0x18]
  421363:	mov    QWORD PTR [rax+0x20],0x5
  42136b:	jmp    421b78 <__flatcc_fb_parse@@Base+0x51d8>
  421370:	movsxd rdx,esi
  421373:	lea    rbx,[rdx+rdx*4]
  421377:	lea    rdx,[rax+rbx*8]
  42137b:	mov    rdi,QWORD PTR [rsp+0x10]
  421380:	mov    QWORD PTR [rdi],rdx
  421383:	cmp    rcx,rdx
  421386:	mov    r13,QWORD PTR [rsp+0x48]
  42138b:	jne    4213f6 <__flatcc_fb_parse@@Base+0x4a56>
  42138d:	lea    ecx,[rsi+rsi*1]
  421390:	test   esi,esi
  421392:	mov    edx,0x400
  421397:	cmove  ecx,edx
  42139a:	mov    rbp,QWORD PTR [rsp+0x30]
  42139f:	mov    DWORD PTR [rbp+0x0],ecx
  4213a2:	movsxd rcx,ecx
  4213a5:	shl    rcx,0x3
  4213a9:	lea    rsi,[rcx+rcx*4]
  4213ad:	mov    rdi,rax
  4213b0:	call   4061e0 <realloc@plt>
  4213b5:	mov    rcx,QWORD PTR [rsp+0x8]
  4213ba:	mov    QWORD PTR [rcx],rax
  4213bd:	test   rax,rax
  4213c0:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4213c6:	movsxd rcx,DWORD PTR [rbp+0x0]
  4213ca:	lea    rcx,[rcx+rcx*4]
  4213ce:	lea    rcx,[rax+rcx*8]
  4213d2:	mov    rdx,QWORD PTR [rsp+0x10]
  4213d7:	mov    QWORD PTR [rdx],rcx
  4213da:	lea    rcx,[rax+rbx*8]
  4213de:	mov    r10,QWORD PTR [rsp+0x28]
  4213e3:	mov    QWORD PTR [r10],rcx
  4213e6:	mov    rax,QWORD PTR [rsp+0x18]
  4213eb:	mov    r9,QWORD PTR [rax]
  4213ee:	mov    r11,QWORD PTR [rsp+0x20]
  4213f3:	mov    r8,QWORD PTR [r11]
  4213f6:	mov    QWORD PTR [rcx+0x20],0x17
  4213fe:	mov    QWORD PTR [rcx],r14
  421401:	mov    QWORD PTR [rcx+0x8],0x0
  421409:	mov    QWORD PTR [rcx+0x10],r9
  42140d:	mov    rax,r14
  421410:	sub    rax,r8
  421413:	inc    rax
  421416:	mov    QWORD PTR [rcx+0x18],rax
  42141a:	add    rcx,0x28
  42141e:	mov    QWORD PTR [r10],rcx
  421421:	mov    r12,r14
  421424:	jmp    4219ab <__flatcc_fb_parse@@Base+0x500b>
  421429:	mov    rax,QWORD PTR [rsp+0x8]
  42142e:	mov    rdi,QWORD PTR [rax]
  421431:	movsxd rcx,DWORD PTR [rsi]
  421434:	lea    rbx,[rcx+rcx*4]
  421438:	lea    rdx,[rdi+rbx*8]
  42143c:	mov    QWORD PTR [r9],rdx
  42143f:	mov    rax,QWORD PTR [r10]
  421442:	cmp    rax,rdx
  421445:	jne    4214a3 <__flatcc_fb_parse@@Base+0x4b03>
  421447:	lea    eax,[rcx+rcx*1]
  42144a:	test   ecx,ecx
  42144c:	mov    ecx,0x400
  421451:	cmove  eax,ecx
  421454:	mov    DWORD PTR [rsi],eax
  421456:	cdqe   
  421458:	shl    rax,0x3
  42145c:	mov    rbp,rsi
  42145f:	lea    rsi,[rax+rax*4]
  421463:	call   4061e0 <realloc@plt>
  421468:	mov    rcx,QWORD PTR [rsp+0x8]
  42146d:	mov    QWORD PTR [rcx],rax
  421470:	test   rax,rax
  421473:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421479:	movsxd rcx,DWORD PTR [rbp+0x0]
  42147d:	lea    rcx,[rcx+rcx*4]
  421481:	lea    rcx,[rax+rcx*8]
  421485:	mov    r9,QWORD PTR [rsp+0x10]
  42148a:	mov    QWORD PTR [r9],rcx
  42148d:	lea    rax,[rax+rbx*8]
  421491:	mov    r10,QWORD PTR [rsp+0x28]
  421496:	mov    QWORD PTR [r10],rax
  421499:	mov    r11,QWORD PTR [rsp+0x20]
  42149e:	mov    r8,QWORD PTR [rsp+0x18]
  4214a3:	lea    rbx,[r12+0x2]
  4214a8:	mov    QWORD PTR [rax+0x20],0x3d3c
  4214b0:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  4214b5:	lea    rbx,[r12+0x2]
  4214ba:	cmp    rbx,r13
  4214bd:	je     421ba0 <__flatcc_fb_parse@@Base+0x5200>
  4214c3:	movsx  eax,BYTE PTR [rbx]
  4214c6:	cmp    eax,0x3c
  4214c9:	je     4221dd <__flatcc_fb_parse@@Base+0x583d>
  4214cf:	cmp    eax,0x3d
  4214d2:	jne    421ba0 <__flatcc_fb_parse@@Base+0x5200>
  4214d8:	mov    rax,QWORD PTR [rsp+0x8]
  4214dd:	mov    rdi,QWORD PTR [rax]
  4214e0:	movsxd rcx,DWORD PTR [rsi]
  4214e3:	lea    rbx,[rcx+rcx*4]
  4214e7:	lea    rdx,[rdi+rbx*8]
  4214eb:	mov    QWORD PTR [r9],rdx
  4214ee:	mov    rax,QWORD PTR [r10]
  4214f1:	cmp    rax,rdx
  4214f4:	jne    421552 <__flatcc_fb_parse@@Base+0x4bb2>
  4214f6:	lea    eax,[rcx+rcx*1]
  4214f9:	test   ecx,ecx
  4214fb:	mov    ecx,0x400
  421500:	cmove  eax,ecx
  421503:	mov    DWORD PTR [rsi],eax
  421505:	cdqe   
  421507:	shl    rax,0x3
  42150b:	mov    rbp,rsi
  42150e:	lea    rsi,[rax+rax*4]
  421512:	call   4061e0 <realloc@plt>
  421517:	mov    rcx,QWORD PTR [rsp+0x8]
  42151c:	mov    QWORD PTR [rcx],rax
  42151f:	test   rax,rax
  421522:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421528:	movsxd rcx,DWORD PTR [rbp+0x0]
  42152c:	lea    rcx,[rcx+rcx*4]
  421530:	lea    rcx,[rax+rcx*8]
  421534:	mov    r9,QWORD PTR [rsp+0x10]
  421539:	mov    QWORD PTR [r9],rcx
  42153c:	lea    rax,[rax+rbx*8]
  421540:	mov    r10,QWORD PTR [rsp+0x28]
  421545:	mov    QWORD PTR [r10],rax
  421548:	mov    r11,QWORD PTR [rsp+0x20]
  42154d:	mov    r8,QWORD PTR [rsp+0x18]
  421552:	lea    rbx,[r12+0x3]
  421557:	mov    QWORD PTR [rax+0x20],0x3d3c3c
  42155f:	jmp    422394 <__flatcc_fb_parse@@Base+0x59f4>
  421564:	lea    rbx,[r12+0x2]
  421569:	cmp    rbx,r13
  42156c:	je     421cf4 <__flatcc_fb_parse@@Base+0x5354>
  421572:	mov    al,BYTE PTR [rbx]
  421574:	cmp    al,0x2a
  421576:	sete   cl
  421579:	cmp    al,0x21
  42157b:	sete   al
  42157e:	or     al,cl
  421580:	jmp    421cf6 <__flatcc_fb_parse@@Base+0x5356>
  421585:	mov    rax,QWORD PTR [rsp+0x8]
  42158a:	mov    rdi,QWORD PTR [rax]
  42158d:	movsxd rcx,DWORD PTR [rsi]
  421590:	lea    rbx,[rcx+rcx*4]
  421594:	lea    rdx,[rdi+rbx*8]
  421598:	mov    QWORD PTR [r9],rdx
  42159b:	mov    rax,QWORD PTR [r10]
  42159e:	cmp    rax,rdx
  4215a1:	jne    4215ff <__flatcc_fb_parse@@Base+0x4c5f>
  4215a3:	lea    eax,[rcx+rcx*1]
  4215a6:	test   ecx,ecx
  4215a8:	mov    ecx,0x400
  4215ad:	cmove  eax,ecx
  4215b0:	mov    DWORD PTR [rsi],eax
  4215b2:	cdqe   
  4215b4:	shl    rax,0x3
  4215b8:	mov    rbp,rsi
  4215bb:	lea    rsi,[rax+rax*4]
  4215bf:	call   4061e0 <realloc@plt>
  4215c4:	mov    rcx,QWORD PTR [rsp+0x8]
  4215c9:	mov    QWORD PTR [rcx],rax
  4215cc:	test   rax,rax
  4215cf:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4215d5:	movsxd rcx,DWORD PTR [rbp+0x0]
  4215d9:	lea    rcx,[rcx+rcx*4]
  4215dd:	lea    rcx,[rax+rcx*8]
  4215e1:	mov    r9,QWORD PTR [rsp+0x10]
  4215e6:	mov    QWORD PTR [r9],rcx
  4215e9:	lea    rax,[rax+rbx*8]
  4215ed:	mov    r10,QWORD PTR [rsp+0x28]
  4215f2:	mov    QWORD PTR [r10],rax
  4215f5:	mov    r11,QWORD PTR [rsp+0x20]
  4215fa:	mov    r8,QWORD PTR [rsp+0x18]
  4215ff:	lea    rbx,[r12+0x2]
  421604:	mov    QWORD PTR [rax+0x20],0x3d2f
  42160c:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  421611:	mov    rax,QWORD PTR [rsp+0x8]
  421616:	mov    rdi,QWORD PTR [rax]
  421619:	movsxd rcx,DWORD PTR [rsi]
  42161c:	lea    rbx,[rcx+rcx*4]
  421620:	lea    rdx,[rdi+rbx*8]
  421624:	mov    QWORD PTR [r9],rdx
  421627:	mov    rax,QWORD PTR [r10]
  42162a:	cmp    rax,rdx
  42162d:	jne    42168b <__flatcc_fb_parse@@Base+0x4ceb>
  42162f:	lea    eax,[rcx+rcx*1]
  421632:	test   ecx,ecx
  421634:	mov    ecx,0x400
  421639:	cmove  eax,ecx
  42163c:	mov    DWORD PTR [rsi],eax
  42163e:	cdqe   
  421640:	shl    rax,0x3
  421644:	mov    rbp,rsi
  421647:	lea    rsi,[rax+rax*4]
  42164b:	call   4061e0 <realloc@plt>
  421650:	mov    rcx,QWORD PTR [rsp+0x8]
  421655:	mov    QWORD PTR [rcx],rax
  421658:	test   rax,rax
  42165b:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421661:	movsxd rcx,DWORD PTR [rbp+0x0]
  421665:	lea    rcx,[rcx+rcx*4]
  421669:	lea    rcx,[rax+rcx*8]
  42166d:	mov    r9,QWORD PTR [rsp+0x10]
  421672:	mov    QWORD PTR [r9],rcx
  421675:	lea    rax,[rax+rbx*8]
  421679:	mov    r10,QWORD PTR [rsp+0x28]
  42167e:	mov    QWORD PTR [r10],rax
  421681:	mov    r11,QWORD PTR [rsp+0x20]
  421686:	mov    r8,QWORD PTR [rsp+0x18]
  42168b:	lea    rbx,[r12+0x2]
  421690:	mov    QWORD PTR [rax+0x20],0x2d2d
  421698:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  42169d:	mov    rax,QWORD PTR [rsp+0x8]
  4216a2:	mov    rdi,QWORD PTR [rax]
  4216a5:	movsxd rcx,DWORD PTR [rsi]
  4216a8:	lea    rbx,[rcx+rcx*4]
  4216ac:	lea    rdx,[rdi+rbx*8]
  4216b0:	mov    QWORD PTR [r9],rdx
  4216b3:	mov    rax,QWORD PTR [r10]
  4216b6:	cmp    rax,rdx
  4216b9:	jne    421717 <__flatcc_fb_parse@@Base+0x4d77>
  4216bb:	lea    eax,[rcx+rcx*1]
  4216be:	test   ecx,ecx
  4216c0:	mov    ecx,0x400
  4216c5:	cmove  eax,ecx
  4216c8:	mov    DWORD PTR [rsi],eax
  4216ca:	cdqe   
  4216cc:	shl    rax,0x3
  4216d0:	mov    rbp,rsi
  4216d3:	lea    rsi,[rax+rax*4]
  4216d7:	call   4061e0 <realloc@plt>
  4216dc:	mov    rcx,QWORD PTR [rsp+0x8]
  4216e1:	mov    QWORD PTR [rcx],rax
  4216e4:	test   rax,rax
  4216e7:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4216ed:	movsxd rcx,DWORD PTR [rbp+0x0]
  4216f1:	lea    rcx,[rcx+rcx*4]
  4216f5:	lea    rcx,[rax+rcx*8]
  4216f9:	mov    r9,QWORD PTR [rsp+0x10]
  4216fe:	mov    QWORD PTR [r9],rcx
  421701:	lea    rax,[rax+rbx*8]
  421705:	mov    r10,QWORD PTR [rsp+0x28]
  42170a:	mov    QWORD PTR [r10],rax
  42170d:	mov    r11,QWORD PTR [rsp+0x20]
  421712:	mov    r8,QWORD PTR [rsp+0x18]
  421717:	lea    rbx,[r12+0x2]
  42171c:	mov    QWORD PTR [rax+0x20],0x3e2d
  421724:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  421729:	mov    rax,QWORD PTR [rsp+0x8]
  42172e:	mov    rdi,QWORD PTR [rax]
  421731:	movsxd rcx,DWORD PTR [rsi]
  421734:	lea    r14,[rcx+rcx*4]
  421738:	lea    rdx,[rdi+r14*8]
  42173c:	mov    QWORD PTR [r9],rdx
  42173f:	mov    rax,QWORD PTR [r10]
  421742:	cmp    rax,rdx
  421745:	jne    4217a3 <__flatcc_fb_parse@@Base+0x4e03>
  421747:	lea    eax,[rcx+rcx*1]
  42174a:	test   ecx,ecx
  42174c:	mov    ecx,0x400
  421751:	cmove  eax,ecx
  421754:	mov    DWORD PTR [rsi],eax
  421756:	cdqe   
  421758:	shl    rax,0x3
  42175c:	mov    rbp,rsi
  42175f:	lea    rsi,[rax+rax*4]
  421763:	call   4061e0 <realloc@plt>
  421768:	mov    rcx,QWORD PTR [rsp+0x8]
  42176d:	mov    QWORD PTR [rcx],rax
  421770:	test   rax,rax
  421773:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421779:	movsxd rcx,DWORD PTR [rbp+0x0]
  42177d:	lea    rcx,[rcx+rcx*4]
  421781:	lea    rcx,[rax+rcx*8]
  421785:	mov    r9,QWORD PTR [rsp+0x10]
  42178a:	mov    QWORD PTR [r9],rcx
  42178d:	lea    rax,[rax+r14*8]
  421791:	mov    r10,QWORD PTR [rsp+0x28]
  421796:	mov    QWORD PTR [r10],rax
  421799:	mov    r11,QWORD PTR [rsp+0x20]
  42179e:	mov    r8,QWORD PTR [rsp+0x18]
  4217a3:	mov    QWORD PTR [rax+0x20],0x3a3a
  4217ab:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  4217b0:	mov    rax,QWORD PTR [rsp+0x8]
  4217b5:	mov    rdi,QWORD PTR [rax]
  4217b8:	movsxd rcx,DWORD PTR [rsi]
  4217bb:	lea    r14,[rcx+rcx*4]
  4217bf:	lea    rdx,[rdi+r14*8]
  4217c3:	mov    QWORD PTR [r9],rdx
  4217c6:	mov    rax,QWORD PTR [r10]
  4217c9:	cmp    rax,rdx
  4217cc:	jne    42182d <__flatcc_fb_parse@@Base+0x4e8d>
  4217ce:	lea    eax,[rcx+rcx*1]
  4217d1:	test   ecx,ecx
  4217d3:	mov    ecx,0x400
  4217d8:	cmove  eax,ecx
  4217db:	mov    DWORD PTR [rsi],eax
  4217dd:	cdqe   
  4217df:	shl    rax,0x3
  4217e3:	mov    rbp,rsi
  4217e6:	lea    rsi,[rax+rax*4]
  4217ea:	call   4061e0 <realloc@plt>
  4217ef:	mov    rcx,QWORD PTR [rsp+0x8]
  4217f4:	mov    QWORD PTR [rcx],rax
  4217f7:	test   rax,rax
  4217fa:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421800:	movsxd rcx,DWORD PTR [rbp+0x0]
  421804:	lea    rcx,[rcx+rcx*4]
  421808:	lea    rcx,[rax+rcx*8]
  42180c:	mov    r9,QWORD PTR [rsp+0x10]
  421811:	mov    QWORD PTR [r9],rcx
  421814:	lea    rax,[rax+r14*8]
  421818:	mov    r10,QWORD PTR [rsp+0x28]
  42181d:	mov    QWORD PTR [r10],rax
  421820:	mov    r11,QWORD PTR [rsp+0x20]
  421825:	mov    r8,QWORD PTR [rsp+0x18]
  42182a:	mov    rsi,rbp
  42182d:	mov    QWORD PTR [rax+0x20],0x3d3d
  421835:	mov    QWORD PTR [rax],r12
  421838:	mov    QWORD PTR [rax+0x8],0x2
  421840:	mov    rcx,QWORD PTR [r8]
  421843:	mov    QWORD PTR [rax+0x10],rcx
  421847:	mov    rcx,r12
  42184a:	sub    rcx,QWORD PTR [r11]
  42184d:	inc    rcx
  421850:	mov    QWORD PTR [rax+0x18],rcx
  421854:	add    rax,0x28
  421858:	mov    QWORD PTR [r10],rax
  42185b:	mov    rax,QWORD PTR [rsp+0x8]
  421860:	mov    rdi,QWORD PTR [rax]
  421863:	movsxd rcx,DWORD PTR [rsi]
  421866:	lea    r14,[rcx+rcx*4]
  42186a:	lea    rdx,[rdi+r14*8]
  42186e:	mov    QWORD PTR [r9],rdx
  421871:	mov    rax,QWORD PTR [r10]
  421874:	cmp    rax,rdx
  421877:	jne    4218d5 <__flatcc_fb_parse@@Base+0x4f35>
  421879:	lea    eax,[rcx+rcx*1]
  42187c:	test   ecx,ecx
  42187e:	mov    ecx,0x400
  421883:	cmove  eax,ecx
  421886:	mov    DWORD PTR [rsi],eax
  421888:	cdqe   
  42188a:	shl    rax,0x3
  42188e:	mov    rbp,rsi
  421891:	lea    rsi,[rax+rax*4]
  421895:	call   4061e0 <realloc@plt>
  42189a:	mov    rcx,QWORD PTR [rsp+0x8]
  42189f:	mov    QWORD PTR [rcx],rax
  4218a2:	test   rax,rax
  4218a5:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4218ab:	movsxd rcx,DWORD PTR [rbp+0x0]
  4218af:	lea    rcx,[rcx+rcx*4]
  4218b3:	lea    rcx,[rax+rcx*8]
  4218b7:	mov    r9,QWORD PTR [rsp+0x10]
  4218bc:	mov    QWORD PTR [r9],rcx
  4218bf:	lea    rax,[rax+r14*8]
  4218c3:	mov    r10,QWORD PTR [rsp+0x28]
  4218c8:	mov    QWORD PTR [r10],rax
  4218cb:	mov    r11,QWORD PTR [rsp+0x20]
  4218d0:	mov    r8,QWORD PTR [rsp+0x18]
  4218d5:	mov    QWORD PTR [rax+0x20],0x3d
  4218dd:	mov    QWORD PTR [rax],r12
  4218e0:	mov    rcx,rbx
  4218e3:	sub    rcx,r12
  4218e6:	mov    QWORD PTR [rax+0x8],rcx
  4218ea:	jmp    421b83 <__flatcc_fb_parse@@Base+0x51e3>
  4218ef:	mov    r13,QWORD PTR [rsp+0x48]
  4218f4:	mov    r12,r13
  4218f7:	jmp    4218ff <__flatcc_fb_parse@@Base+0x4f5f>
  4218f9:	inc    rbp
  4218fc:	mov    r12,rbp
  4218ff:	movsxd rdx,esi
  421902:	lea    rbx,[rdx+rdx*4]
  421906:	lea    rdx,[rax+rbx*8]
  42190a:	mov    rdi,QWORD PTR [rsp+0x10]
  42190f:	mov    QWORD PTR [rdi],rdx
  421912:	cmp    rcx,rdx
  421915:	jne    421980 <__flatcc_fb_parse@@Base+0x4fe0>
  421917:	lea    ecx,[rsi+rsi*1]
  42191a:	test   esi,esi
  42191c:	mov    edx,0x400
  421921:	cmove  ecx,edx
  421924:	mov    rbp,QWORD PTR [rsp+0x30]
  421929:	mov    DWORD PTR [rbp+0x0],ecx
  42192c:	movsxd rcx,ecx
  42192f:	shl    rcx,0x3
  421933:	lea    rsi,[rcx+rcx*4]
  421937:	mov    rdi,rax
  42193a:	call   4061e0 <realloc@plt>
  42193f:	mov    rcx,QWORD PTR [rsp+0x8]
  421944:	mov    QWORD PTR [rcx],rax
  421947:	test   rax,rax
  42194a:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421950:	movsxd rcx,DWORD PTR [rbp+0x0]
  421954:	lea    rcx,[rcx+rcx*4]
  421958:	lea    rcx,[rax+rcx*8]
  42195c:	mov    rdx,QWORD PTR [rsp+0x10]
  421961:	mov    QWORD PTR [rdx],rcx
  421964:	lea    rcx,[rax+rbx*8]
  421968:	mov    r10,QWORD PTR [rsp+0x28]
  42196d:	mov    QWORD PTR [r10],rcx
  421970:	mov    rax,QWORD PTR [rsp+0x18]
  421975:	mov    r9,QWORD PTR [rax]
  421978:	mov    r11,QWORD PTR [rsp+0x20]
  42197d:	mov    r8,QWORD PTR [r11]
  421980:	mov    QWORD PTR [rcx+0x20],0x17
  421988:	mov    QWORD PTR [rcx],r12
  42198b:	mov    QWORD PTR [rcx+0x8],0x0
  421993:	mov    QWORD PTR [rcx+0x10],r9
  421997:	mov    rax,r12
  42199a:	sub    rax,r8
  42199d:	inc    rax
  4219a0:	mov    QWORD PTR [rcx+0x18],rax
  4219a4:	add    rcx,0x28
  4219a8:	mov    QWORD PTR [r10],rcx
  4219ab:	mov    r8,QWORD PTR [rsp+0x18]
  4219b0:	mov    r9,QWORD PTR [rsp+0x10]
  4219b5:	cmp    r12,r13
  4219b8:	jne    41eea3 <__flatcc_fb_parse@@Base+0x2503>
  4219be:	jmp    42266a <__flatcc_fb_parse@@Base+0x5cca>
  4219c3:	mov    rax,QWORD PTR [rsp+0x8]
  4219c8:	mov    rdi,QWORD PTR [rax]
  4219cb:	movsxd rcx,DWORD PTR [rsi]
  4219ce:	lea    r14,[rcx+rcx*4]
  4219d2:	lea    rdx,[rdi+r14*8]
  4219d6:	mov    QWORD PTR [r9],rdx
  4219d9:	mov    rax,QWORD PTR [r10]
  4219dc:	cmp    rax,rdx
  4219df:	jne    421a3d <__flatcc_fb_parse@@Base+0x509d>
  4219e1:	lea    eax,[rcx+rcx*1]
  4219e4:	test   ecx,ecx
  4219e6:	mov    ecx,0x400
  4219eb:	cmove  eax,ecx
  4219ee:	mov    DWORD PTR [rsi],eax
  4219f0:	cdqe   
  4219f2:	shl    rax,0x3
  4219f6:	mov    rbp,rsi
  4219f9:	lea    rsi,[rax+rax*4]
  4219fd:	call   4061e0 <realloc@plt>
  421a02:	mov    rcx,QWORD PTR [rsp+0x8]
  421a07:	mov    QWORD PTR [rcx],rax
  421a0a:	test   rax,rax
  421a0d:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421a13:	movsxd rcx,DWORD PTR [rbp+0x0]
  421a17:	lea    rcx,[rcx+rcx*4]
  421a1b:	lea    rcx,[rax+rcx*8]
  421a1f:	mov    r9,QWORD PTR [rsp+0x10]
  421a24:	mov    QWORD PTR [r9],rcx
  421a27:	lea    rax,[rax+r14*8]
  421a2b:	mov    r10,QWORD PTR [rsp+0x28]
  421a30:	mov    QWORD PTR [r10],rax
  421a33:	mov    r11,QWORD PTR [rsp+0x20]
  421a38:	mov    r8,QWORD PTR [rsp+0x18]
  421a3d:	mov    QWORD PTR [rax+0x20],0x3e3e
  421a45:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  421a4a:	cmp    eax,0x2e
  421a4d:	jne    421af6 <__flatcc_fb_parse@@Base+0x5156>
  421a53:	lea    rbx,[r12+0x2]
  421a58:	cmp    rbx,r13
  421a5b:	je     422156 <__flatcc_fb_parse@@Base+0x57b6>
  421a61:	cmp    BYTE PTR [rbx],0x2e
  421a64:	jne    422156 <__flatcc_fb_parse@@Base+0x57b6>
  421a6a:	mov    rax,QWORD PTR [rsp+0x8]
  421a6f:	mov    rdi,QWORD PTR [rax]
  421a72:	movsxd rcx,DWORD PTR [rsi]
  421a75:	lea    rbx,[rcx+rcx*4]
  421a79:	lea    rdx,[rdi+rbx*8]
  421a7d:	mov    QWORD PTR [r9],rdx
  421a80:	mov    rax,QWORD PTR [r10]
  421a83:	cmp    rax,rdx
  421a86:	jne    421ae4 <__flatcc_fb_parse@@Base+0x5144>
  421a88:	lea    eax,[rcx+rcx*1]
  421a8b:	test   ecx,ecx
  421a8d:	mov    ecx,0x400
  421a92:	cmove  eax,ecx
  421a95:	mov    DWORD PTR [rsi],eax
  421a97:	cdqe   
  421a99:	shl    rax,0x3
  421a9d:	mov    rbp,rsi
  421aa0:	lea    rsi,[rax+rax*4]
  421aa4:	call   4061e0 <realloc@plt>
  421aa9:	mov    rcx,QWORD PTR [rsp+0x8]
  421aae:	mov    QWORD PTR [rcx],rax
  421ab1:	test   rax,rax
  421ab4:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421aba:	movsxd rcx,DWORD PTR [rbp+0x0]
  421abe:	lea    rcx,[rcx+rcx*4]
  421ac2:	lea    rcx,[rax+rcx*8]
  421ac6:	mov    r9,QWORD PTR [rsp+0x10]
  421acb:	mov    QWORD PTR [r9],rcx
  421ace:	lea    rax,[rax+rbx*8]
  421ad2:	mov    r10,QWORD PTR [rsp+0x28]
  421ad7:	mov    QWORD PTR [r10],rax
  421ada:	mov    r11,QWORD PTR [rsp+0x20]
  421adf:	mov    r8,QWORD PTR [rsp+0x18]
  421ae4:	lea    rbx,[r12+0x3]
  421ae9:	mov    QWORD PTR [rax+0x20],0x2e2e2e
  421af1:	jmp    422394 <__flatcc_fb_parse@@Base+0x59f4>
  421af6:	mov    rax,QWORD PTR [rsp+0x8]
  421afb:	mov    rdi,QWORD PTR [rax]
  421afe:	movsxd rcx,DWORD PTR [rsi]
  421b01:	lea    r14,[rcx+rcx*4]
  421b05:	lea    rdx,[rdi+r14*8]
  421b09:	mov    QWORD PTR [r9],rdx
  421b0c:	mov    rax,QWORD PTR [r10]
  421b0f:	cmp    rax,rdx
  421b12:	jne    421b70 <__flatcc_fb_parse@@Base+0x51d0>
  421b14:	lea    eax,[rcx+rcx*1]
  421b17:	test   ecx,ecx
  421b19:	mov    ecx,0x400
  421b1e:	cmove  eax,ecx
  421b21:	mov    DWORD PTR [rsi],eax
  421b23:	cdqe   
  421b25:	shl    rax,0x3
  421b29:	mov    rbp,rsi
  421b2c:	lea    rsi,[rax+rax*4]
  421b30:	call   4061e0 <realloc@plt>
  421b35:	mov    rcx,QWORD PTR [rsp+0x8]
  421b3a:	mov    QWORD PTR [rcx],rax
  421b3d:	test   rax,rax
  421b40:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421b46:	movsxd rcx,DWORD PTR [rbp+0x0]
  421b4a:	lea    rcx,[rcx+rcx*4]
  421b4e:	lea    rcx,[rax+rcx*8]
  421b52:	mov    r9,QWORD PTR [rsp+0x10]
  421b57:	mov    QWORD PTR [r9],rcx
  421b5a:	lea    rax,[rax+r14*8]
  421b5e:	mov    r10,QWORD PTR [rsp+0x28]
  421b63:	mov    QWORD PTR [r10],rax
  421b66:	mov    r11,QWORD PTR [rsp+0x20]
  421b6b:	mov    r8,QWORD PTR [rsp+0x18]
  421b70:	mov    QWORD PTR [rax+0x20],0x2e
  421b78:	mov    QWORD PTR [rax],r12
  421b7b:	mov    QWORD PTR [rax+0x8],0x1
  421b83:	mov    rcx,QWORD PTR [r8]
  421b86:	mov    QWORD PTR [rax+0x10],rcx
  421b8a:	sub    r12,QWORD PTR [r11]
  421b8d:	inc    r12
  421b90:	mov    QWORD PTR [rax+0x18],r12
  421b94:	add    rax,0x28
  421b98:	mov    QWORD PTR [r10],rax
  421b9b:	jmp    41ee97 <__flatcc_fb_parse@@Base+0x24f7>
  421ba0:	mov    rax,QWORD PTR [rsp+0x8]
  421ba5:	mov    rdi,QWORD PTR [rax]
  421ba8:	movsxd rcx,DWORD PTR [rsi]
  421bab:	lea    r14,[rcx+rcx*4]
  421baf:	lea    rdx,[rdi+r14*8]
  421bb3:	mov    QWORD PTR [r9],rdx
  421bb6:	mov    rax,QWORD PTR [r10]
  421bb9:	cmp    rax,rdx
  421bbc:	jne    421c1a <__flatcc_fb_parse@@Base+0x527a>
  421bbe:	lea    eax,[rcx+rcx*1]
  421bc1:	test   ecx,ecx
  421bc3:	mov    ecx,0x400
  421bc8:	cmove  eax,ecx
  421bcb:	mov    DWORD PTR [rsi],eax
  421bcd:	cdqe   
  421bcf:	shl    rax,0x3
  421bd3:	mov    rbp,rsi
  421bd6:	lea    rsi,[rax+rax*4]
  421bda:	call   4061e0 <realloc@plt>
  421bdf:	mov    rcx,QWORD PTR [rsp+0x8]
  421be4:	mov    QWORD PTR [rcx],rax
  421be7:	test   rax,rax
  421bea:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421bf0:	movsxd rcx,DWORD PTR [rbp+0x0]
  421bf4:	lea    rcx,[rcx+rcx*4]
  421bf8:	lea    rcx,[rax+rcx*8]
  421bfc:	mov    r9,QWORD PTR [rsp+0x10]
  421c01:	mov    QWORD PTR [r9],rcx
  421c04:	lea    rax,[rax+r14*8]
  421c08:	mov    r10,QWORD PTR [rsp+0x28]
  421c0d:	mov    QWORD PTR [r10],rax
  421c10:	mov    r11,QWORD PTR [rsp+0x20]
  421c15:	mov    r8,QWORD PTR [rsp+0x18]
  421c1a:	mov    QWORD PTR [rax+0x20],0x3c3c
  421c22:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  421c27:	xor    eax,eax
  421c29:	movzx  eax,al
  421c2c:	add    rbp,rax
  421c2f:	mov    rax,rbp
  421c32:	sub    rax,r12
  421c35:	xor    ecx,ecx
  421c37:	cmp    rax,0x3
  421c3b:	sete   cl
  421c3e:	mov    rax,QWORD PTR [rsp+0x38]
  421c43:	mov    DWORD PTR [rax+0x3c],ecx
  421c46:	jne    4223b0 <__flatcc_fb_parse@@Base+0x5a10>
  421c4c:	mov    rax,QWORD PTR [rsp+0x8]
  421c51:	mov    rdi,QWORD PTR [rax]
  421c54:	movsxd rcx,DWORD PTR [rsi]
  421c57:	lea    r14,[rcx+rcx*4]
  421c5b:	lea    rdx,[rdi+r14*8]
  421c5f:	mov    QWORD PTR [r9],rdx
  421c62:	mov    rax,QWORD PTR [r10]
  421c65:	cmp    rax,rdx
  421c68:	jne    421cc8 <__flatcc_fb_parse@@Base+0x5328>
  421c6a:	lea    eax,[rcx+rcx*1]
  421c6d:	test   ecx,ecx
  421c6f:	mov    ecx,0x400
  421c74:	cmove  eax,ecx
  421c77:	mov    DWORD PTR [rsi],eax
  421c79:	cdqe   
  421c7b:	shl    rax,0x3
  421c7f:	mov    rbx,rsi
  421c82:	lea    rsi,[rax+rax*4]
  421c86:	call   4061e0 <realloc@plt>
  421c8b:	mov    rcx,QWORD PTR [rsp+0x8]
  421c90:	mov    QWORD PTR [rcx],rax
  421c93:	test   rax,rax
  421c96:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421c9c:	movsxd rcx,DWORD PTR [rbx]
  421c9f:	lea    rcx,[rcx+rcx*4]
  421ca3:	lea    rcx,[rax+rcx*8]
  421ca7:	mov    r9,QWORD PTR [rsp+0x10]
  421cac:	mov    QWORD PTR [r9],rcx
  421caf:	lea    rax,[rax+r14*8]
  421cb3:	mov    r10,QWORD PTR [rsp+0x28]
  421cb8:	mov    QWORD PTR [r10],rax
  421cbb:	mov    r11,QWORD PTR [rsp+0x20]
  421cc0:	mov    r8,QWORD PTR [rsp+0x18]
  421cc5:	mov    rsi,rbx
  421cc8:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421cd0:	mov    QWORD PTR [rax],rbp
  421cd3:	mov    QWORD PTR [rax+0x8],0x0
  421cdb:	mov    rcx,QWORD PTR [r8]
  421cde:	mov    QWORD PTR [rax+0x10],rcx
  421ce2:	mov    rcx,rbp
  421ce5:	sub    rcx,QWORD PTR [r11]
  421ce8:	inc    rcx
  421ceb:	mov    QWORD PTR [rax+0x18],rcx
  421cef:	jmp    422637 <__flatcc_fb_parse@@Base+0x5c97>
  421cf4:	xor    eax,eax
  421cf6:	movzx  eax,al
  421cf9:	add    rbx,rax
  421cfc:	mov    rax,rbx
  421cff:	sub    rax,r12
  421d02:	xor    ecx,ecx
  421d04:	cmp    rax,0x3
  421d08:	sete   cl
  421d0b:	mov    rax,QWORD PTR [rsp+0x38]
  421d10:	mov    DWORD PTR [rax+0x3c],ecx
  421d13:	jne    421dd3 <__flatcc_fb_parse@@Base+0x5433>
  421d19:	mov    rax,QWORD PTR [rsp+0x8]
  421d1e:	mov    rdi,QWORD PTR [rax]
  421d21:	movsxd rcx,DWORD PTR [rsi]
  421d24:	lea    r14,[rcx+rcx*4]
  421d28:	lea    rdx,[rdi+r14*8]
  421d2c:	mov    QWORD PTR [r9],rdx
  421d2f:	mov    rax,QWORD PTR [r10]
  421d32:	cmp    rax,rdx
  421d35:	jne    421d96 <__flatcc_fb_parse@@Base+0x53f6>
  421d37:	lea    eax,[rcx+rcx*1]
  421d3a:	test   ecx,ecx
  421d3c:	mov    ecx,0x400
  421d41:	cmove  eax,ecx
  421d44:	mov    DWORD PTR [rsi],eax
  421d46:	cdqe   
  421d48:	shl    rax,0x3
  421d4c:	mov    rbp,rsi
  421d4f:	lea    rsi,[rax+rax*4]
  421d53:	call   4061e0 <realloc@plt>
  421d58:	mov    rcx,QWORD PTR [rsp+0x8]
  421d5d:	mov    QWORD PTR [rcx],rax
  421d60:	test   rax,rax
  421d63:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421d69:	movsxd rcx,DWORD PTR [rbp+0x0]
  421d6d:	lea    rcx,[rcx+rcx*4]
  421d71:	lea    rcx,[rax+rcx*8]
  421d75:	mov    r9,QWORD PTR [rsp+0x10]
  421d7a:	mov    QWORD PTR [r9],rcx
  421d7d:	lea    rax,[rax+r14*8]
  421d81:	mov    r10,QWORD PTR [rsp+0x28]
  421d86:	mov    QWORD PTR [r10],rax
  421d89:	mov    r11,QWORD PTR [rsp+0x20]
  421d8e:	mov    r8,QWORD PTR [rsp+0x18]
  421d93:	mov    rsi,rbp
  421d96:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421d9e:	mov    QWORD PTR [rax],rbx
  421da1:	mov    QWORD PTR [rax+0x8],0x0
  421da9:	mov    rcx,QWORD PTR [r8]
  421dac:	mov    QWORD PTR [rax+0x10],rcx
  421db0:	mov    rcx,rbx
  421db3:	sub    rcx,QWORD PTR [r11]
  421db6:	inc    rcx
  421db9:	mov    QWORD PTR [rax+0x18],rcx
  421dbd:	add    rax,0x28
  421dc1:	mov    QWORD PTR [r10],rax
  421dc4:	jmp    421dd3 <__flatcc_fb_parse@@Base+0x5433>
  421dc6:	cmove  rax,rcx
  421dca:	mov    rbx,rax
  421dcd:	inc    QWORD PTR [r8]
  421dd0:	mov    QWORD PTR [r11],rbx
  421dd3:	mov    r12,r13
  421dd6:	cmp    rbx,r13
  421dd9:	je     421e14 <__flatcc_fb_parse@@Base+0x5474>
  421ddb:	mov    r12,rbx
  421dde:	jmp    421de8 <__flatcc_fb_parse@@Base+0x5448>
  421de0:	inc    r12
  421de3:	cmp    r13,r12
  421de6:	je     421e11 <__flatcc_fb_parse@@Base+0x5471>
  421de8:	movzx  eax,BYTE PTR [r12]
  421ded:	cmp    al,0x20
  421def:	jl     421e14 <__flatcc_fb_parse@@Base+0x5474>
  421df1:	cmp    al,0x7f
  421df3:	je     421e14 <__flatcc_fb_parse@@Base+0x5474>
  421df5:	cmp    al,0x2f
  421df7:	jne    421de0 <__flatcc_fb_parse@@Base+0x5440>
  421df9:	cmp    BYTE PTR [r12-0x1],0x2a
  421dff:	jne    421de0 <__flatcc_fb_parse@@Base+0x5440>
  421e01:	dec    r12
  421e04:	cmp    rbx,r12
  421e07:	jne    421e19 <__flatcc_fb_parse@@Base+0x5479>
  421e09:	mov    r14,rbx
  421e0c:	jmp    421ee2 <__flatcc_fb_parse@@Base+0x5542>
  421e11:	mov    r12,r13
  421e14:	cmp    rbx,r12
  421e17:	je     421e09 <__flatcc_fb_parse@@Base+0x5469>
  421e19:	mov    rax,QWORD PTR [rsp+0x38]
  421e1e:	cmp    DWORD PTR [rax+0x3c],0x0
  421e22:	mov    r14,r12
  421e25:	je     421ee2 <__flatcc_fb_parse@@Base+0x5542>
  421e2b:	mov    rax,QWORD PTR [rsp+0x8]
  421e30:	mov    rdi,QWORD PTR [rax]
  421e33:	movsxd rcx,DWORD PTR [rsi]
  421e36:	lea    r14,[rcx+rcx*4]
  421e3a:	lea    rdx,[rdi+r14*8]
  421e3e:	mov    QWORD PTR [r9],rdx
  421e41:	mov    rax,QWORD PTR [r10]
  421e44:	cmp    rax,rdx
  421e47:	jne    421ea8 <__flatcc_fb_parse@@Base+0x5508>
  421e49:	lea    eax,[rcx+rcx*1]
  421e4c:	test   ecx,ecx
  421e4e:	mov    ecx,0x400
  421e53:	cmove  eax,ecx
  421e56:	mov    DWORD PTR [rsi],eax
  421e58:	cdqe   
  421e5a:	shl    rax,0x3
  421e5e:	mov    rbp,rsi
  421e61:	lea    rsi,[rax+rax*4]
  421e65:	call   4061e0 <realloc@plt>
  421e6a:	mov    rcx,QWORD PTR [rsp+0x8]
  421e6f:	mov    QWORD PTR [rcx],rax
  421e72:	test   rax,rax
  421e75:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421e7b:	movsxd rcx,DWORD PTR [rbp+0x0]
  421e7f:	lea    rcx,[rcx+rcx*4]
  421e83:	lea    rcx,[rax+rcx*8]
  421e87:	mov    r9,QWORD PTR [rsp+0x10]
  421e8c:	mov    QWORD PTR [r9],rcx
  421e8f:	lea    rax,[rax+r14*8]
  421e93:	mov    r10,QWORD PTR [rsp+0x28]
  421e98:	mov    QWORD PTR [r10],rax
  421e9b:	mov    r11,QWORD PTR [rsp+0x20]
  421ea0:	mov    r8,QWORD PTR [rsp+0x18]
  421ea5:	mov    rsi,rbp
  421ea8:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421eb0:	mov    QWORD PTR [rax],rbx
  421eb3:	mov    rcx,r12
  421eb6:	sub    rcx,rbx
  421eb9:	mov    QWORD PTR [rax+0x8],rcx
  421ebd:	mov    rcx,QWORD PTR [r8]
  421ec0:	mov    QWORD PTR [rax+0x10],rcx
  421ec4:	sub    rbx,QWORD PTR [r11]
  421ec7:	inc    rbx
  421eca:	mov    QWORD PTR [rax+0x18],rbx
  421ece:	add    rax,0x28
  421ed2:	mov    QWORD PTR [r10],rax
  421ed5:	mov    r14,r12
  421ed8:	cmp    r12,r13
  421edb:	jne    421eeb <__flatcc_fb_parse@@Base+0x554b>
  421edd:	jmp    422849 <__flatcc_fb_parse@@Base+0x5ea9>
  421ee2:	cmp    r12,r13
  421ee5:	je     422849 <__flatcc_fb_parse@@Base+0x5ea9>
  421eeb:	mov    al,BYTE PTR [r12]
  421eef:	cmp    al,0xa
  421ef1:	je     421fc1 <__flatcc_fb_parse@@Base+0x5621>
  421ef7:	cmp    al,0xd
  421ef9:	je     421fe2 <__flatcc_fb_parse@@Base+0x5642>
  421eff:	test   al,al
  421f01:	je     42284c <__flatcc_fb_parse@@Base+0x5eac>
  421f07:	cmp    al,0x20
  421f09:	jl     421f13 <__flatcc_fb_parse@@Base+0x5573>
  421f0b:	cmp    al,0x7f
  421f0d:	jne    4223a4 <__flatcc_fb_parse@@Base+0x5a04>
  421f13:	inc    r12
  421f16:	mov    al,BYTE PTR [r14]
  421f19:	cmp    al,0x20
  421f1b:	je     421f25 <__flatcc_fb_parse@@Base+0x5585>
  421f1d:	cmp    al,0x9
  421f1f:	jne    422003 <__flatcc_fb_parse@@Base+0x5663>
  421f25:	mov    rax,QWORD PTR [rsp+0x38]
  421f2a:	cmp    DWORD PTR [rax+0x3c],0x0
  421f2e:	mov    rbx,r12
  421f31:	je     421dd3 <__flatcc_fb_parse@@Base+0x5433>
  421f37:	mov    rax,QWORD PTR [rsp+0x8]
  421f3c:	mov    rdi,QWORD PTR [rax]
  421f3f:	movsxd rcx,DWORD PTR [rsi]
  421f42:	lea    rbx,[rcx+rcx*4]
  421f46:	lea    rdx,[rdi+rbx*8]
  421f4a:	mov    QWORD PTR [r9],rdx
  421f4d:	mov    rax,QWORD PTR [r10]
  421f50:	cmp    rax,rdx
  421f53:	jne    421fb4 <__flatcc_fb_parse@@Base+0x5614>
  421f55:	lea    eax,[rcx+rcx*1]
  421f58:	test   ecx,ecx
  421f5a:	mov    ecx,0x400
  421f5f:	cmove  eax,ecx
  421f62:	mov    DWORD PTR [rsi],eax
  421f64:	cdqe   
  421f66:	shl    rax,0x3
  421f6a:	mov    rbp,rsi
  421f6d:	lea    rsi,[rax+rax*4]
  421f71:	call   4061e0 <realloc@plt>
  421f76:	mov    rcx,QWORD PTR [rsp+0x8]
  421f7b:	mov    QWORD PTR [rcx],rax
  421f7e:	test   rax,rax
  421f81:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  421f87:	movsxd rcx,DWORD PTR [rbp+0x0]
  421f8b:	lea    rcx,[rcx+rcx*4]
  421f8f:	lea    rcx,[rax+rcx*8]
  421f93:	mov    r9,QWORD PTR [rsp+0x10]
  421f98:	mov    QWORD PTR [r9],rcx
  421f9b:	lea    rax,[rax+rbx*8]
  421f9f:	mov    r10,QWORD PTR [rsp+0x28]
  421fa4:	mov    QWORD PTR [r10],rax
  421fa7:	mov    r11,QWORD PTR [rsp+0x20]
  421fac:	mov    r8,QWORD PTR [rsp+0x18]
  421fb1:	mov    rsi,rbp
  421fb4:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421fbc:	jmp    422088 <__flatcc_fb_parse@@Base+0x56e8>
  421fc1:	lea    rax,[r12+0x1]
  421fc6:	mov    rbx,r13
  421fc9:	cmp    rax,r13
  421fcc:	je     421dcd <__flatcc_fb_parse@@Base+0x542d>
  421fd2:	lea    rcx,[r12+0x2]
  421fd7:	cmp    BYTE PTR [r12+0x1],0xd
  421fdd:	jmp    421dc6 <__flatcc_fb_parse@@Base+0x5426>
  421fe2:	lea    rax,[r12+0x1]
  421fe7:	mov    rbx,r13
  421fea:	cmp    rax,r13
  421fed:	je     421dcd <__flatcc_fb_parse@@Base+0x542d>
  421ff3:	lea    rcx,[r12+0x2]
  421ff8:	cmp    BYTE PTR [r12+0x1],0xa
  421ffe:	jmp    421dc6 <__flatcc_fb_parse@@Base+0x5426>
  422003:	mov    rax,QWORD PTR [rsp+0x8]
  422008:	mov    rdi,QWORD PTR [rax]
  42200b:	movsxd rcx,DWORD PTR [rsi]
  42200e:	lea    rbx,[rcx+rcx*4]
  422012:	lea    rdx,[rdi+rbx*8]
  422016:	mov    QWORD PTR [r9],rdx
  422019:	mov    rax,QWORD PTR [r10]
  42201c:	cmp    rax,rdx
  42201f:	jne    422080 <__flatcc_fb_parse@@Base+0x56e0>
  422021:	lea    eax,[rcx+rcx*1]
  422024:	test   ecx,ecx
  422026:	mov    ecx,0x400
  42202b:	cmove  eax,ecx
  42202e:	mov    DWORD PTR [rsi],eax
  422030:	cdqe   
  422032:	shl    rax,0x3
  422036:	mov    rbp,rsi
  422039:	lea    rsi,[rax+rax*4]
  42203d:	call   4061e0 <realloc@plt>
  422042:	mov    rcx,QWORD PTR [rsp+0x8]
  422047:	mov    QWORD PTR [rcx],rax
  42204a:	test   rax,rax
  42204d:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  422053:	movsxd rcx,DWORD PTR [rbp+0x0]
  422057:	lea    rcx,[rcx+rcx*4]
  42205b:	lea    rcx,[rax+rcx*8]
  42205f:	mov    r9,QWORD PTR [rsp+0x10]
  422064:	mov    QWORD PTR [r9],rcx
  422067:	lea    rax,[rax+rbx*8]
  42206b:	mov    r10,QWORD PTR [rsp+0x28]
  422070:	mov    QWORD PTR [r10],rax
  422073:	mov    r11,QWORD PTR [rsp+0x20]
  422078:	mov    r8,QWORD PTR [rsp+0x18]
  42207d:	mov    rsi,rbp
  422080:	mov    QWORD PTR [rax+0x20],0x7
  422088:	mov    QWORD PTR [rax],r14
  42208b:	mov    QWORD PTR [rax+0x8],0x1
  422093:	mov    rcx,QWORD PTR [r8]
  422096:	mov    QWORD PTR [rax+0x10],rcx
  42209a:	sub    r14,QWORD PTR [r11]
  42209d:	inc    r14
  4220a0:	mov    QWORD PTR [rax+0x18],r14
  4220a4:	add    rax,0x28
  4220a8:	mov    QWORD PTR [r10],rax
  4220ab:	mov    rbx,r12
  4220ae:	jmp    421dd3 <__flatcc_fb_parse@@Base+0x5433>
  4220b3:	lea    rbx,[r12+0x3]
  4220b8:	cmp    rbx,r13
  4220bb:	je     42228b <__flatcc_fb_parse@@Base+0x58eb>
  4220c1:	cmp    BYTE PTR [rbx],0x3d
  4220c4:	jne    42228b <__flatcc_fb_parse@@Base+0x58eb>
  4220ca:	mov    rax,QWORD PTR [rsp+0x8]
  4220cf:	mov    rdi,QWORD PTR [rax]
  4220d2:	movsxd rcx,DWORD PTR [rsi]
  4220d5:	lea    rbx,[rcx+rcx*4]
  4220d9:	lea    rdx,[rdi+rbx*8]
  4220dd:	mov    QWORD PTR [r9],rdx
  4220e0:	mov    rax,QWORD PTR [r10]
  4220e3:	cmp    rax,rdx
  4220e6:	jne    422144 <__flatcc_fb_parse@@Base+0x57a4>
  4220e8:	lea    eax,[rcx+rcx*1]
  4220eb:	test   ecx,ecx
  4220ed:	mov    ecx,0x400
  4220f2:	cmove  eax,ecx
  4220f5:	mov    DWORD PTR [rsi],eax
  4220f7:	cdqe   
  4220f9:	shl    rax,0x3
  4220fd:	mov    rbp,rsi
  422100:	lea    rsi,[rax+rax*4]
  422104:	call   4061e0 <realloc@plt>
  422109:	mov    rcx,QWORD PTR [rsp+0x8]
  42210e:	mov    QWORD PTR [rcx],rax
  422111:	test   rax,rax
  422114:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  42211a:	movsxd rcx,DWORD PTR [rbp+0x0]
  42211e:	lea    rcx,[rcx+rcx*4]
  422122:	lea    rcx,[rax+rcx*8]
  422126:	mov    r9,QWORD PTR [rsp+0x10]
  42212b:	mov    QWORD PTR [r9],rcx
  42212e:	lea    rax,[rax+rbx*8]
  422132:	mov    r10,QWORD PTR [rsp+0x28]
  422137:	mov    QWORD PTR [r10],rax
  42213a:	mov    r11,QWORD PTR [rsp+0x20]
  42213f:	mov    r8,QWORD PTR [rsp+0x18]
  422144:	lea    rbx,[r12+0x4]
  422149:	mov    QWORD PTR [rax+0x20],0x3d3e3e3e
  422151:	jmp    42227b <__flatcc_fb_parse@@Base+0x58db>
  422156:	mov    rax,QWORD PTR [rsp+0x8]
  42215b:	mov    rdi,QWORD PTR [rax]
  42215e:	movsxd rcx,DWORD PTR [rsi]
  422161:	lea    r14,[rcx+rcx*4]
  422165:	lea    rdx,[rdi+r14*8]
  422169:	mov    QWORD PTR [r9],rdx
  42216c:	mov    rax,QWORD PTR [r10]
  42216f:	cmp    rax,rdx
  422172:	jne    4221d0 <__flatcc_fb_parse@@Base+0x5830>
  422174:	lea    eax,[rcx+rcx*1]
  422177:	test   ecx,ecx
  422179:	mov    ecx,0x400
  42217e:	cmove  eax,ecx
  422181:	mov    DWORD PTR [rsi],eax
  422183:	cdqe   
  422185:	shl    rax,0x3
  422189:	mov    rbp,rsi
  42218c:	lea    rsi,[rax+rax*4]
  422190:	call   4061e0 <realloc@plt>
  422195:	mov    rcx,QWORD PTR [rsp+0x8]
  42219a:	mov    QWORD PTR [rcx],rax
  42219d:	test   rax,rax
  4221a0:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4221a6:	movsxd rcx,DWORD PTR [rbp+0x0]
  4221aa:	lea    rcx,[rcx+rcx*4]
  4221ae:	lea    rcx,[rax+rcx*8]
  4221b2:	mov    r9,QWORD PTR [rsp+0x10]
  4221b7:	mov    QWORD PTR [r9],rcx
  4221ba:	lea    rax,[rax+r14*8]
  4221be:	mov    r10,QWORD PTR [rsp+0x28]
  4221c3:	mov    QWORD PTR [r10],rax
  4221c6:	mov    r11,QWORD PTR [rsp+0x20]
  4221cb:	mov    r8,QWORD PTR [rsp+0x18]
  4221d0:	mov    QWORD PTR [rax+0x20],0x2e2e
  4221d8:	jmp    41f3d4 <__flatcc_fb_parse@@Base+0x2a34>
  4221dd:	lea    rbx,[r12+0x3]
  4221e2:	cmp    rbx,r13
  4221e5:	je     422312 <__flatcc_fb_parse@@Base+0x5972>
  4221eb:	cmp    BYTE PTR [rbx],0x3d
  4221ee:	jne    422312 <__flatcc_fb_parse@@Base+0x5972>
  4221f4:	mov    rax,QWORD PTR [rsp+0x8]
  4221f9:	mov    rdi,QWORD PTR [rax]
  4221fc:	movsxd rcx,DWORD PTR [rsi]
  4221ff:	lea    rbx,[rcx+rcx*4]
  422203:	lea    rdx,[rdi+rbx*8]
  422207:	mov    QWORD PTR [r9],rdx
  42220a:	mov    rax,QWORD PTR [r10]
  42220d:	cmp    rax,rdx
  422210:	jne    42226e <__flatcc_fb_parse@@Base+0x58ce>
  422212:	lea    eax,[rcx+rcx*1]
  422215:	test   ecx,ecx
  422217:	mov    ecx,0x400
  42221c:	cmove  eax,ecx
  42221f:	mov    DWORD PTR [rsi],eax
  422221:	cdqe   
  422223:	shl    rax,0x3
  422227:	mov    rbp,rsi
  42222a:	lea    rsi,[rax+rax*4]
  42222e:	call   4061e0 <realloc@plt>
  422233:	mov    rcx,QWORD PTR [rsp+0x8]
  422238:	mov    QWORD PTR [rcx],rax
  42223b:	test   rax,rax
  42223e:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  422244:	movsxd rcx,DWORD PTR [rbp+0x0]
  422248:	lea    rcx,[rcx+rcx*4]
  42224c:	lea    rcx,[rax+rcx*8]
  422250:	mov    r9,QWORD PTR [rsp+0x10]
  422255:	mov    QWORD PTR [r9],rcx
  422258:	lea    rax,[rax+rbx*8]
  42225c:	mov    r10,QWORD PTR [rsp+0x28]
  422261:	mov    QWORD PTR [r10],rax
  422264:	mov    r11,QWORD PTR [rsp+0x20]
  422269:	mov    r8,QWORD PTR [rsp+0x18]
  42226e:	lea    rbx,[r12+0x4]
  422273:	mov    QWORD PTR [rax+0x20],0x3d3c3c3c
  42227b:	mov    QWORD PTR [rax],r12
  42227e:	mov    QWORD PTR [rax+0x8],0x4
  422286:	jmp    421b83 <__flatcc_fb_parse@@Base+0x51e3>
  42228b:	mov    rax,QWORD PTR [rsp+0x8]
  422290:	mov    rdi,QWORD PTR [rax]
  422293:	movsxd rcx,DWORD PTR [rsi]
  422296:	lea    r14,[rcx+rcx*4]
  42229a:	lea    rdx,[rdi+r14*8]
  42229e:	mov    QWORD PTR [r9],rdx
  4222a1:	mov    rax,QWORD PTR [r10]
  4222a4:	cmp    rax,rdx
  4222a7:	jne    422305 <__flatcc_fb_parse@@Base+0x5965>
  4222a9:	lea    eax,[rcx+rcx*1]
  4222ac:	test   ecx,ecx
  4222ae:	mov    ecx,0x400
  4222b3:	cmove  eax,ecx
  4222b6:	mov    DWORD PTR [rsi],eax
  4222b8:	cdqe   
  4222ba:	shl    rax,0x3
  4222be:	mov    rbp,rsi
  4222c1:	lea    rsi,[rax+rax*4]
  4222c5:	call   4061e0 <realloc@plt>
  4222ca:	mov    rcx,QWORD PTR [rsp+0x8]
  4222cf:	mov    QWORD PTR [rcx],rax
  4222d2:	test   rax,rax
  4222d5:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4222db:	movsxd rcx,DWORD PTR [rbp+0x0]
  4222df:	lea    rcx,[rcx+rcx*4]
  4222e3:	lea    rcx,[rax+rcx*8]
  4222e7:	mov    r9,QWORD PTR [rsp+0x10]
  4222ec:	mov    QWORD PTR [r9],rcx
  4222ef:	lea    rax,[rax+r14*8]
  4222f3:	mov    r10,QWORD PTR [rsp+0x28]
  4222f8:	mov    QWORD PTR [r10],rax
  4222fb:	mov    r11,QWORD PTR [rsp+0x20]
  422300:	mov    r8,QWORD PTR [rsp+0x18]
  422305:	mov    QWORD PTR [rax+0x20],0x3e3e3e
  42230d:	jmp    422394 <__flatcc_fb_parse@@Base+0x59f4>
  422312:	mov    rax,QWORD PTR [rsp+0x8]
  422317:	mov    rdi,QWORD PTR [rax]
  42231a:	movsxd rcx,DWORD PTR [rsi]
  42231d:	lea    r14,[rcx+rcx*4]
  422321:	lea    rdx,[rdi+r14*8]
  422325:	mov    QWORD PTR [r9],rdx
  422328:	mov    rax,QWORD PTR [r10]
  42232b:	cmp    rax,rdx
  42232e:	jne    42238c <__flatcc_fb_parse@@Base+0x59ec>
  422330:	lea    eax,[rcx+rcx*1]
  422333:	test   ecx,ecx
  422335:	mov    ecx,0x400
  42233a:	cmove  eax,ecx
  42233d:	mov    DWORD PTR [rsi],eax
  42233f:	cdqe   
  422341:	shl    rax,0x3
  422345:	mov    rbp,rsi
  422348:	lea    rsi,[rax+rax*4]
  42234c:	call   4061e0 <realloc@plt>
  422351:	mov    rcx,QWORD PTR [rsp+0x8]
  422356:	mov    QWORD PTR [rcx],rax
  422359:	test   rax,rax
  42235c:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  422362:	movsxd rcx,DWORD PTR [rbp+0x0]
  422366:	lea    rcx,[rcx+rcx*4]
  42236a:	lea    rcx,[rax+rcx*8]
  42236e:	mov    r9,QWORD PTR [rsp+0x10]
  422373:	mov    QWORD PTR [r9],rcx
  422376:	lea    rax,[rax+r14*8]
  42237a:	mov    r10,QWORD PTR [rsp+0x28]
  42237f:	mov    QWORD PTR [r10],rax
  422382:	mov    r11,QWORD PTR [rsp+0x20]
  422387:	mov    r8,QWORD PTR [rsp+0x18]
  42238c:	mov    QWORD PTR [rax+0x20],0x3c3c3c
  422394:	mov    QWORD PTR [rax],r12
  422397:	mov    QWORD PTR [rax+0x8],0x3
  42239f:	jmp    421b83 <__flatcc_fb_parse@@Base+0x51e3>
  4223a4:	add    r12,0x2
  4223a8:	jmp    422643 <__flatcc_fb_parse@@Base+0x5ca3>
  4223ad:	nop    DWORD PTR [rax]
  4223b0:	mov    r12,rbp
  4223b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4223bd:	nop    DWORD PTR [rax]
  4223c0:	mov    rbx,r12
  4223c3:	cmp    r13,r12
  4223c6:	je     4223ea <__flatcc_fb_parse@@Base+0x5a4a>
  4223c8:	movzx  eax,BYTE PTR [rbx]
  4223cb:	lea    r12,[rbx+0x1]
  4223cf:	cmp    al,0x20
  4223d1:	jl     4223d7 <__flatcc_fb_parse@@Base+0x5a37>
  4223d3:	cmp    al,0x7f
  4223d5:	jne    4223c0 <__flatcc_fb_parse@@Base+0x5a20>
  4223d7:	dec    r12
  4223da:	xor    r15d,r15d
  4223dd:	cmp    rbp,r12
  4223e0:	jne    4223f5 <__flatcc_fb_parse@@Base+0x5a55>
  4223e2:	mov    r14,rbp
  4223e5:	jmp    4224c2 <__flatcc_fb_parse@@Base+0x5b22>
  4223ea:	mov    r15b,0x1
  4223ed:	mov    r12,r13
  4223f0:	cmp    rbp,r12
  4223f3:	je     4223e2 <__flatcc_fb_parse@@Base+0x5a42>
  4223f5:	mov    rax,QWORD PTR [rsp+0x38]
  4223fa:	cmp    DWORD PTR [rax+0x3c],0x0
  4223fe:	mov    r14,r12
  422401:	je     4224c2 <__flatcc_fb_parse@@Base+0x5b22>
  422407:	mov    rax,QWORD PTR [rsp+0x8]
  42240c:	mov    rdi,QWORD PTR [rax]
  42240f:	movsxd rcx,DWORD PTR [rsi]
  422412:	lea    rsi,[rcx+rcx*4]
  422416:	lea    rdx,[rdi+rsi*8]
  42241a:	mov    QWORD PTR [r9],rdx
  42241d:	mov    rax,QWORD PTR [r10]
  422420:	cmp    rax,rdx
  422423:	jne    42248d <__flatcc_fb_parse@@Base+0x5aed>
  422425:	mov    QWORD PTR [rsp+0x58],rsi
  42242a:	lea    eax,[rcx+rcx*1]
  42242d:	test   ecx,ecx
  42242f:	mov    ecx,0x400
  422434:	cmove  eax,ecx
  422437:	mov    r14,QWORD PTR [rsp+0x30]
  42243c:	mov    DWORD PTR [r14],eax
  42243f:	cdqe   
  422441:	shl    rax,0x3
  422445:	lea    rsi,[rax+rax*4]
  422449:	call   4061e0 <realloc@plt>
  42244e:	mov    rcx,QWORD PTR [rsp+0x8]
  422453:	mov    QWORD PTR [rcx],rax
  422456:	test   rax,rax
  422459:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  42245f:	movsxd rcx,DWORD PTR [r14]
  422462:	lea    rcx,[rcx+rcx*4]
  422466:	lea    rcx,[rax+rcx*8]
  42246a:	mov    r9,QWORD PTR [rsp+0x10]
  42246f:	mov    QWORD PTR [r9],rcx
  422472:	mov    rcx,QWORD PTR [rsp+0x58]
  422477:	lea    rax,[rax+rcx*8]
  42247b:	mov    r10,QWORD PTR [rsp+0x28]
  422480:	mov    QWORD PTR [r10],rax
  422483:	mov    r11,QWORD PTR [rsp+0x20]
  422488:	mov    r8,QWORD PTR [rsp+0x18]
  42248d:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  422495:	mov    QWORD PTR [rax],rbp
  422498:	mov    rcx,r12
  42249b:	sub    rcx,rbp
  42249e:	mov    QWORD PTR [rax+0x8],rcx
  4224a2:	mov    rcx,QWORD PTR [r8]
  4224a5:	mov    QWORD PTR [rax+0x10],rcx
  4224a9:	sub    rbp,QWORD PTR [r11]
  4224ac:	inc    rbp
  4224af:	mov    QWORD PTR [rax+0x18],rbp
  4224b3:	add    rax,0x28
  4224b7:	mov    QWORD PTR [r10],rax
  4224ba:	mov    r14,r12
  4224bd:	mov    rsi,QWORD PTR [rsp+0x30]
  4224c2:	test   r15b,r15b
  4224c5:	mov    r15,QWORD PTR [rsp+0x40]
  4224ca:	jne    42284c <__flatcc_fb_parse@@Base+0x5eac>
  4224d0:	mov    al,BYTE PTR [r12]
  4224d4:	cmp    al,0xd
  4224d6:	je     422643 <__flatcc_fb_parse@@Base+0x5ca3>
  4224dc:	cmp    al,0xa
  4224de:	je     422643 <__flatcc_fb_parse@@Base+0x5ca3>
  4224e4:	test   al,al
  4224e6:	je     42284c <__flatcc_fb_parse@@Base+0x5eac>
  4224ec:	mov    rbp,rbx
  4224ef:	inc    rbp
  4224f2:	mov    al,BYTE PTR [r14]
  4224f5:	cmp    al,0x20
  4224f7:	je     422501 <__flatcc_fb_parse@@Base+0x5b61>
  4224f9:	cmp    al,0x9
  4224fb:	jne    42259b <__flatcc_fb_parse@@Base+0x5bfb>
  422501:	mov    rax,QWORD PTR [rsp+0x38]
  422506:	cmp    DWORD PTR [rax+0x3c],0x0
  42250a:	je     4223b0 <__flatcc_fb_parse@@Base+0x5a10>
  422510:	mov    r15,QWORD PTR [rsp+0x8]
  422515:	mov    rdi,QWORD PTR [r15]
  422518:	movsxd rcx,DWORD PTR [rsi]
  42251b:	lea    r12,[rcx+rcx*4]
  42251f:	lea    rdx,[rdi+r12*8]
  422523:	mov    QWORD PTR [r9],rdx
  422526:	mov    rax,QWORD PTR [r10]
  422529:	mov    rbx,0xfffffffffffffc3c
  422530:	cmp    rax,rdx
  422533:	jne    422617 <__flatcc_fb_parse@@Base+0x5c77>
  422539:	lea    eax,[rcx+rcx*1]
  42253c:	test   ecx,ecx
  42253e:	mov    ecx,0x400
  422543:	cmove  eax,ecx
  422546:	mov    DWORD PTR [rsi],eax
  422548:	cdqe   
  42254a:	shl    rax,0x3
  42254e:	mov    rbx,rsi
  422551:	lea    rsi,[rax+rax*4]
  422555:	call   4061e0 <realloc@plt>
  42255a:	mov    QWORD PTR [r15],rax
  42255d:	test   rax,rax
  422560:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  422566:	movsxd rcx,DWORD PTR [rbx]
  422569:	lea    rcx,[rcx+rcx*4]
  42256d:	lea    rcx,[rax+rcx*8]
  422571:	mov    r9,QWORD PTR [rsp+0x10]
  422576:	mov    QWORD PTR [r9],rcx
  422579:	lea    rax,[rax+r12*8]
  42257d:	mov    r10,QWORD PTR [rsp+0x28]
  422582:	mov    QWORD PTR [r10],rax
  422585:	mov    r11,QWORD PTR [rsp+0x20]
  42258a:	mov    r8,QWORD PTR [rsp+0x18]
  42258f:	mov    rsi,rbx
  422592:	mov    rbx,0xfffffffffffffc3c
  422599:	jmp    422617 <__flatcc_fb_parse@@Base+0x5c77>
  42259b:	mov    rbx,QWORD PTR [rsp+0x8]
  4225a0:	mov    rdi,QWORD PTR [rbx]
  4225a3:	movsxd rcx,DWORD PTR [rsi]
  4225a6:	lea    r12,[rcx+rcx*4]
  4225aa:	lea    rdx,[rdi+r12*8]
  4225ae:	mov    QWORD PTR [r9],rdx
  4225b1:	mov    rax,QWORD PTR [r10]
  4225b4:	cmp    rax,rdx
  4225b7:	jne    422612 <__flatcc_fb_parse@@Base+0x5c72>
  4225b9:	lea    eax,[rcx+rcx*1]
  4225bc:	test   ecx,ecx
  4225be:	mov    ecx,0x400
  4225c3:	cmove  eax,ecx
  4225c6:	mov    DWORD PTR [rsi],eax
  4225c8:	cdqe   
  4225ca:	shl    rax,0x3
  4225ce:	mov    r15,rsi
  4225d1:	lea    rsi,[rax+rax*4]
  4225d5:	call   4061e0 <realloc@plt>
  4225da:	mov    QWORD PTR [rbx],rax
  4225dd:	test   rax,rax
  4225e0:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4225e6:	movsxd rcx,DWORD PTR [r15]
  4225e9:	lea    rcx,[rcx+rcx*4]
  4225ed:	lea    rcx,[rax+rcx*8]
  4225f1:	mov    r9,QWORD PTR [rsp+0x10]
  4225f6:	mov    QWORD PTR [r9],rcx
  4225f9:	lea    rax,[rax+r12*8]
  4225fd:	mov    r10,QWORD PTR [rsp+0x28]
  422602:	mov    QWORD PTR [r10],rax
  422605:	mov    r11,QWORD PTR [rsp+0x20]
  42260a:	mov    r8,QWORD PTR [rsp+0x18]
  42260f:	mov    rsi,r15
  422612:	mov    ebx,0x7
  422617:	mov    QWORD PTR [rax+0x20],rbx
  42261b:	mov    QWORD PTR [rax],r14
  42261e:	mov    QWORD PTR [rax+0x8],0x1
  422626:	mov    rcx,QWORD PTR [r8]
  422629:	mov    QWORD PTR [rax+0x10],rcx
  42262d:	sub    r14,QWORD PTR [r11]
  422630:	inc    r14
  422633:	mov    QWORD PTR [rax+0x18],r14
  422637:	add    rax,0x28
  42263b:	mov    QWORD PTR [r10],rax
  42263e:	jmp    4223b0 <__flatcc_fb_parse@@Base+0x5a10>
  422643:	mov    rax,QWORD PTR [rsp+0x38]
  422648:	mov    DWORD PTR [rax+0x3c],0x0
  42264f:	jmp    4219b5 <__flatcc_fb_parse@@Base+0x5015>
  422654:	mov    r14,r12
  422657:	cmp    r12,r13
  42265a:	je     422667 <__flatcc_fb_parse@@Base+0x5cc7>
  42265c:	cmp    BYTE PTR [r12],0x0
  422661:	je     42279a <__flatcc_fb_parse@@Base+0x5dfa>
  422667:	mov    r13,r12
  42266a:	mov    rbp,QWORD PTR [rsp+0x38]
  42266f:	mov    rdi,QWORD PTR [rbp+0x28]
  422673:	mov    rax,QWORD PTR [rbp+0x48]
  422677:	movsxd rcx,DWORD PTR [rbp+0x38]
  42267b:	lea    rbx,[rcx+rcx*4]
  42267f:	lea    rdx,[rdi+rbx*8]
  422683:	mov    QWORD PTR [rbp+0x30],rdx
  422687:	cmp    rax,rdx
  42268a:	jne    4226d1 <__flatcc_fb_parse@@Base+0x5d31>
  42268c:	lea    eax,[rcx+rcx*1]
  42268f:	test   ecx,ecx
  422691:	mov    ecx,0x400
  422696:	cmovne ecx,eax
  422699:	mov    DWORD PTR [rbp+0x38],ecx
  42269c:	movsxd rax,ecx
  42269f:	shl    rax,0x3
  4226a3:	lea    rsi,[rax+rax*4]
  4226a7:	call   4061e0 <realloc@plt>
  4226ac:	mov    QWORD PTR [rbp+0x28],rax
  4226b0:	test   rax,rax
  4226b3:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4226b9:	movsxd rcx,DWORD PTR [rbp+0x38]
  4226bd:	lea    rcx,[rcx+rcx*4]
  4226c1:	lea    rcx,[rax+rcx*8]
  4226c5:	mov    QWORD PTR [rbp+0x30],rcx
  4226c9:	lea    rax,[rax+rbx*8]
  4226cd:	mov    QWORD PTR [rbp+0x48],rax
  4226d1:	lea    r10,[rbp+0x48]
  4226d5:	mov    QWORD PTR [rax+0x20],0x0
  4226dd:	mov    QWORD PTR [rax],r13
  4226e0:	mov    QWORD PTR [rax+0x8],0x0
  4226e8:	mov    rcx,QWORD PTR [rbp+0x78]
  4226ec:	mov    QWORD PTR [rax+0x10],rcx
  4226f0:	add    rbp,0x70
  4226f4:	mov    r11,rbp
  4226f7:	mov    r12,r13
  4226fa:	jmp    422829 <__flatcc_fb_parse@@Base+0x5e89>
  4226ff:	mov    rbp,QWORD PTR [rsp+0x8]
  422704:	mov    rdi,QWORD PTR [rbp+0x0]
  422708:	mov    rsi,QWORD PTR [rsp+0x30]
  42270d:	movsxd rcx,DWORD PTR [rsi]
  422710:	lea    rbx,[rcx+rcx*4]
  422714:	lea    rdx,[rdi+rbx*8]
  422718:	mov    QWORD PTR [r9],rdx
  42271b:	mov    rax,QWORD PTR [r10]
  42271e:	cmp    rax,rdx
  422721:	jne    42277b <__flatcc_fb_parse@@Base+0x5ddb>
  422723:	lea    eax,[rcx+rcx*1]
  422726:	test   ecx,ecx
  422728:	mov    ecx,0x400
  42272d:	cmovne ecx,eax
  422730:	mov    DWORD PTR [rsi],ecx
  422732:	movsxd rax,ecx
  422735:	shl    rax,0x3
  422739:	mov    r14,rsi
  42273c:	lea    rsi,[rax+rax*4]
  422740:	call   4061e0 <realloc@plt>
  422745:	mov    QWORD PTR [rbp+0x0],rax
  422749:	test   rax,rax
  42274c:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  422752:	movsxd rcx,DWORD PTR [r14]
  422755:	lea    rcx,[rcx+rcx*4]
  422759:	lea    rcx,[rax+rcx*8]
  42275d:	mov    rdx,QWORD PTR [rsp+0x10]
  422762:	mov    QWORD PTR [rdx],rcx
  422765:	lea    rax,[rax+rbx*8]
  422769:	mov    r10,QWORD PTR [rsp+0x28]
  42276e:	mov    QWORD PTR [r10],rax
  422771:	mov    r11,QWORD PTR [rsp+0x20]
  422776:	mov    r8,QWORD PTR [rsp+0x18]
  42277b:	mov    QWORD PTR [rax+0x20],0x0
  422783:	mov    QWORD PTR [rax],r12
  422786:	mov    QWORD PTR [rax+0x8],0x0
  42278e:	mov    rcx,QWORD PTR [r8]
  422791:	mov    QWORD PTR [rax+0x10],rcx
  422795:	jmp    422829 <__flatcc_fb_parse@@Base+0x5e89>
  42279a:	mov    rbp,QWORD PTR [rsp+0x38]
  42279f:	mov    rdi,QWORD PTR [rbp+0x28]
  4227a3:	mov    rax,QWORD PTR [rbp+0x48]
  4227a7:	movsxd rcx,DWORD PTR [rbp+0x38]
  4227ab:	lea    rbx,[rcx+rcx*4]
  4227af:	lea    rdx,[rdi+rbx*8]
  4227b3:	mov    QWORD PTR [rbp+0x30],rdx
  4227b7:	cmp    rax,rdx
  4227ba:	jne    422801 <__flatcc_fb_parse@@Base+0x5e61>
  4227bc:	lea    eax,[rcx+rcx*1]
  4227bf:	test   ecx,ecx
  4227c1:	mov    ecx,0x400
  4227c6:	cmovne ecx,eax
  4227c9:	mov    DWORD PTR [rbp+0x38],ecx
  4227cc:	movsxd rax,ecx
  4227cf:	shl    rax,0x3
  4227d3:	lea    rsi,[rax+rax*4]
  4227d7:	call   4061e0 <realloc@plt>
  4227dc:	mov    QWORD PTR [rbp+0x28],rax
  4227e0:	test   rax,rax
  4227e3:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  4227e9:	movsxd rcx,DWORD PTR [rbp+0x38]
  4227ed:	lea    rcx,[rcx+rcx*4]
  4227f1:	lea    rcx,[rax+rcx*8]
  4227f5:	mov    QWORD PTR [rbp+0x30],rcx
  4227f9:	lea    rax,[rax+rbx*8]
  4227fd:	mov    QWORD PTR [rbp+0x48],rax
  422801:	lea    r10,[rbp+0x48]
  422805:	mov    QWORD PTR [rax+0x20],0x0
  42280d:	mov    QWORD PTR [rax],r14
  422810:	sub    r12,r14
  422813:	mov    QWORD PTR [rax+0x8],r12
  422817:	mov    rcx,QWORD PTR [rbp+0x78]
  42281b:	mov    QWORD PTR [rax+0x10],rcx
  42281f:	add    rbp,0x70
  422823:	mov    r11,rbp
  422826:	mov    r12,r14
  422829:	sub    r12,QWORD PTR [r11]
  42282c:	inc    r12
  42282f:	mov    QWORD PTR [rax+0x18],r12
  422833:	add    rax,0x28
  422837:	mov    QWORD PTR [r10],rax
  42283a:	add    rsp,0x68
  42283e:	pop    rbx
  42283f:	pop    r12
  422841:	pop    r13
  422843:	pop    r14
  422845:	pop    r15
  422847:	pop    rbp
  422848:	ret    
  422849:	mov    r12,r13
  42284c:	mov    rbp,QWORD PTR [rsp+0x8]
  422851:	mov    rdi,QWORD PTR [rbp+0x0]
  422855:	movsxd rcx,DWORD PTR [rsi]
  422858:	lea    rbx,[rcx+rcx*4]
  42285c:	lea    rdx,[rdi+rbx*8]
  422860:	mov    QWORD PTR [r9],rdx
  422863:	mov    rax,QWORD PTR [r10]
  422866:	cmp    rax,rdx
  422869:	jne    4228bf <__flatcc_fb_parse@@Base+0x5f1f>
  42286b:	lea    eax,[rcx+rcx*1]
  42286e:	test   ecx,ecx
  422870:	mov    ecx,0x400
  422875:	cmovne ecx,eax
  422878:	mov    DWORD PTR [rsi],ecx
  42287a:	movsxd rax,ecx
  42287d:	shl    rax,0x3
  422881:	mov    r15,rsi
  422884:	lea    rsi,[rax+rax*4]
  422888:	call   4061e0 <realloc@plt>
  42288d:	mov    QWORD PTR [rbp+0x0],rax
  422891:	test   rax,rax
  422894:	je     4228fb <__flatcc_fb_parse@@Base+0x5f5b>
  422896:	movsxd rcx,DWORD PTR [r15]
  422899:	lea    rcx,[rcx+rcx*4]
  42289d:	lea    rcx,[rax+rcx*8]
  4228a1:	mov    rdx,QWORD PTR [rsp+0x10]
  4228a6:	mov    QWORD PTR [rdx],rcx
  4228a9:	lea    rax,[rax+rbx*8]
  4228ad:	mov    r10,QWORD PTR [rsp+0x28]
  4228b2:	mov    QWORD PTR [r10],rax
  4228b5:	mov    r11,QWORD PTR [rsp+0x20]
  4228ba:	mov    r8,QWORD PTR [rsp+0x18]
  4228bf:	mov    QWORD PTR [rax+0x20],0x1b
  4228c7:	mov    QWORD PTR [rax],r12
  4228ca:	mov    QWORD PTR [rax+0x8],0x0
  4228d2:	mov    rcx,QWORD PTR [r8]
  4228d5:	mov    QWORD PTR [rax+0x10],rcx
  4228d9:	mov    rcx,r12
  4228dc:	sub    rcx,QWORD PTR [r11]
  4228df:	inc    rcx
  4228e2:	mov    QWORD PTR [rax+0x18],rcx
  4228e6:	add    rax,0x28
  4228ea:	mov    QWORD PTR [r10],rax
  4228ed:	cmp    r12,r13
  4228f0:	jne    42265c <__flatcc_fb_parse@@Base+0x5cbc>
  4228f6:	jmp    422667 <__flatcc_fb_parse@@Base+0x5cc7>
  4228fb:	mov    rax,QWORD PTR [rip+0x2f6f6]        # 451ff8 <stderr@GLIBC_2.2.5>
  422902:	mov    rcx,QWORD PTR [rax]
  422905:	lea    rdi,[rip+0xcf10]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  42290c:	mov    esi,0x22
  422911:	mov    edx,0x1
  422916:	call   406230 <fwrite@plt>
  42291b:	mov    edi,0x1
  422920:	call   406220 <exit@plt>
  422925:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42292f:	nop
  422930:	push   r15
  422932:	push   r14
  422934:	push   rbx
  422935:	mov    r14,rdi
  422938:	mov    r15,QWORD PTR [rdi+0x30]
  42293c:	mov    rax,QWORD PTR [rdi+0x48]
  422940:	lea    rbx,[rax+0x28]
  422944:	mov    QWORD PTR [rdi+0x48],rbx
  422948:	cmp    rbx,r15
  42294b:	jne    422980 <__flatcc_fb_parse@@Base+0x5fe0>
  42294d:	jmp    4229e0 <__flatcc_fb_parse@@Base+0x6040>
  422952:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42295c:	nop    DWORD PTR [rax+0x0]
  422960:	mov    QWORD PTR [r14+0x60],rax
  422964:	mov    QWORD PTR [rcx+0x8],rbx
  422968:	mov    rax,QWORD PTR [r14+0x40]
  42296c:	mov    QWORD PTR [rcx],rax
  42296f:	mov    QWORD PTR [r14+0x40],rcx
  422973:	add    rbx,0x28
  422977:	mov    QWORD PTR [r14+0x48],rbx
  42297b:	cmp    r15,rbx
  42297e:	je     4229d9 <__flatcc_fb_parse@@Base+0x6039>
  422980:	cmp    QWORD PTR [rbx+0x20],0xfffffffffffffc3c
  422988:	jne    4229d0 <__flatcc_fb_parse@@Base+0x6030>
  42298a:	mov    rcx,QWORD PTR [r14+0x60]
  42298e:	lea    rax,[rcx+0x20]
  422992:	cmp    rax,QWORD PTR [r14+0x50]
  422996:	jbe    422960 <__flatcc_fb_parse@@Base+0x5fc0>
  422998:	mov    edi,0x10000
  42299d:	mov    esi,0x1
  4229a2:	call   406150 <calloc@plt>
  4229a7:	test   rax,rax
  4229aa:	je     422a03 <__flatcc_fb_parse@@Base+0x6063>
  4229ac:	mov    rcx,QWORD PTR [r14+0x58]
  4229b0:	mov    QWORD PTR [rax],rcx
  4229b3:	mov    QWORD PTR [r14+0x58],rax
  4229b7:	lea    rcx,[rax+0x10]
  4229bb:	mov    QWORD PTR [r14+0x60],rcx
  4229bf:	lea    rdx,[rax+0x10000]
  4229c6:	mov    QWORD PTR [r14+0x50],rdx
  4229ca:	add    rax,0x30
  4229ce:	jmp    422960 <__flatcc_fb_parse@@Base+0x5fc0>
  4229d0:	mov    rax,rbx
  4229d3:	pop    rbx
  4229d4:	pop    r14
  4229d6:	pop    r15
  4229d8:	ret    
  4229d9:	add    rbx,0xffffffffffffffd8
  4229dd:	mov    rax,rbx
  4229e0:	mov    QWORD PTR [r14+0x48],rax
  4229e4:	lea    rdi,[rip+0x1e1a4]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4229eb:	lea    rsi,[rip+0x24b45]        # 447537 <fb_schema_table_deleted@@Base+0x60f>
  4229f2:	lea    rcx,[rip+0x24c85]        # 44767e <fb_schema_table_deleted@@Base+0x756>
  4229f9:	mov    edx,0x155
  4229fe:	call   406100 <__assert_fail@plt>
  422a03:	mov    rax,QWORD PTR [rip+0x2f5ee]        # 451ff8 <stderr@GLIBC_2.2.5>
  422a0a:	mov    rcx,QWORD PTR [rax]
  422a0d:	lea    rdi,[rip+0xce08]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  422a14:	mov    esi,0x22
  422a19:	mov    edx,0x1
  422a1e:	call   406230 <fwrite@plt>
  422a23:	mov    edi,0x1
  422a28:	call   406220 <exit@plt>
  422a2d:	nop    DWORD PTR [rax]

0000000000422a30 <__flatcc_fb_clear_parser@@Base>:
  422a30:	push   r14
  422a32:	push   rbx
  422a33:	push   rax
  422a34:	mov    r14,rdi
  422a37:	mov    rbx,QWORD PTR [rdi+0x238]
  422a3e:	test   rbx,rbx
  422a41:	jne    422a58 <__flatcc_fb_clear_parser@@Base+0x28>
  422a43:	jmp    422a76 <__flatcc_fb_clear_parser@@Base+0x46>
  422a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a4f:	nop
  422a50:	mov    rbx,QWORD PTR [rbx]
  422a53:	test   rbx,rbx
  422a56:	je     422a76 <__flatcc_fb_clear_parser@@Base+0x46>
  422a58:	cmp    WORD PTR [rbx+0x10],0x4
  422a5d:	ja     422a50 <__flatcc_fb_clear_parser@@Base+0x20>
  422a5f:	lea    rdi,[rbx+0x60]
  422a63:	call   419d30 <fb_symbol_table_clear@@Base>
  422a68:	lea    rdi,[rbx+0x80]
  422a6f:	call   42d120 <fb_value_set_clear@@Base>
  422a74:	jmp    422a50 <__flatcc_fb_clear_parser@@Base+0x20>
  422a76:	lea    rdi,[r14+0x2a8]
  422a7d:	call   41b2d0 <fb_schema_table_clear@@Base>
  422a82:	lea    rdi,[r14+0x288]
  422a89:	call   42c9f0 <fb_name_table_clear@@Base>
  422a8e:	lea    rdi,[r14+0x320]
  422a95:	call   4196f0 <ptr_set_clear@@Base>
  422a9a:	mov    rdi,QWORD PTR [r14+0xd8]
  422aa1:	test   rdi,rdi
  422aa4:	je     422aab <__flatcc_fb_clear_parser@@Base+0x7b>
  422aa6:	call   406040 <free@plt>
  422aab:	mov    rdi,QWORD PTR [r14+0x28]
  422aaf:	test   rdi,rdi
  422ab2:	je     422ab9 <__flatcc_fb_clear_parser@@Base+0x89>
  422ab4:	call   406040 <free@plt>
  422ab9:	mov    rdi,QWORD PTR [r14+0x308]
  422ac0:	test   rdi,rdi
  422ac3:	je     422aca <__flatcc_fb_clear_parser@@Base+0x9a>
  422ac5:	call   406040 <free@plt>
  422aca:	mov    rdi,QWORD PTR [r14+0x310]
  422ad1:	test   rdi,rdi
  422ad4:	je     422adb <__flatcc_fb_clear_parser@@Base+0xab>
  422ad6:	call   406040 <free@plt>
  422adb:	mov    rdi,QWORD PTR [r14+0x318]
  422ae2:	test   rdi,rdi
  422ae5:	je     422aec <__flatcc_fb_clear_parser@@Base+0xbc>
  422ae7:	call   406040 <free@plt>
  422aec:	mov    rdi,QWORD PTR [r14+0x348]
  422af3:	test   rdi,rdi
  422af6:	je     422afd <__flatcc_fb_clear_parser@@Base+0xcd>
  422af8:	call   406040 <free@plt>
  422afd:	lea    rdi,[r14+0x268]
  422b04:	lea    rsi,[rip+0x55]        # 422b60 <__flatcc_fb_clear_parser@@Base+0x130>
  422b0b:	xor    edx,edx
  422b0d:	call   41a490 <fb_scope_table_destroy@@Base>
  422b12:	mov    rdi,QWORD PTR [r14+0x58]
  422b16:	test   rdi,rdi
  422b19:	je     422b30 <__flatcc_fb_clear_parser@@Base+0x100>
  422b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  422b20:	mov    rbx,QWORD PTR [rdi]
  422b23:	call   406040 <free@plt>
  422b28:	mov    rdi,rbx
  422b2b:	test   rbx,rbx
  422b2e:	jne    422b20 <__flatcc_fb_clear_parser@@Base+0xf0>
  422b30:	mov    rdi,QWORD PTR [r14+0x20]
  422b34:	test   rdi,rdi
  422b37:	je     422b3e <__flatcc_fb_clear_parser@@Base+0x10e>
  422b39:	call   406040 <free@plt>
  422b3e:	mov    edx,0x358
  422b43:	mov    rdi,r14
  422b46:	xor    esi,esi
  422b48:	add    rsp,0x8
  422b4c:	pop    rbx
  422b4d:	pop    r14
  422b4f:	jmp    406110 <memset@plt>
  422b54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b5e:	xchg   ax,ax
  422b60:	lea    rdi,[rsi+0x8]
  422b64:	jmp    419d30 <fb_symbol_table_clear@@Base>
  422b69:	nop    DWORD PTR [rax+0x0]
  422b70:	push   rbp
  422b71:	push   r15
  422b73:	push   r14
  422b75:	push   r13
  422b77:	push   r12
  422b79:	push   rbx
  422b7a:	push   rax
  422b7b:	mov    r14,rsi
  422b7e:	mov    rbx,rdi
  422b81:	mov    WORD PTR [rsi+0x10],0x2
  422b87:	mov    QWORD PTR [rsi],0x0
  422b8e:	mov    DWORD PTR [rsi+0x8],0x0
  422b95:	lea    r13,[rip+0x246b0]        # 44724c <fb_schema_table_deleted@@Base+0x324>
  422b9c:	lea    r12,[rip+0x24be0]        # 447783 <fb_schema_table_deleted@@Base+0x85b>
  422ba3:	lea    r15,[rip+0x24b8f]        # 447739 <fb_schema_table_deleted@@Base+0x811>
  422baa:	jmp    422bd2 <__flatcc_fb_clear_parser@@Base+0x1a2>
  422bac:	nop    DWORD PTR [rax+0x0]
  422bb0:	mov    WORD PTR [r14+0x10],0x1
  422bb7:	mov    rdi,rbx
  422bba:	mov    rdx,r15
  422bbd:	xor    ecx,ecx
  422bbf:	xor    r8d,r8d
  422bc2:	xor    r9d,r9d
  422bc5:	call   41c3a0 <__flatcc_error_report@@Base>
  422bca:	mov    rdi,rbx
  422bcd:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422bd2:	mov    rsi,QWORD PTR [rbx+0x48]
  422bd6:	mov    rax,QWORD PTR [rsi+0x20]
  422bda:	add    rax,0xfffffffffffffffa
  422bde:	cmp    rax,0x11
  422be2:	ja     422cc7 <__flatcc_fb_clear_parser@@Base+0x297>
  422be8:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  422bed:	add    rax,r13
  422bf0:	jmp    rax
  422bf2:	mov    WORD PTR [r14+0x10],0x1
  422bf9:	test   rsi,rsi
  422bfc:	je     422ca4 <__flatcc_fb_clear_parser@@Base+0x274>
  422c02:	mov    rax,rbx
  422c05:	cmp    QWORD PTR [rax+0x28],rsi
  422c09:	jbe    422c1e <__flatcc_fb_clear_parser@@Base+0x1ee>
  422c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  422c10:	mov    rax,QWORD PTR [rax]
  422c13:	test   rax,rax
  422c16:	je     422c65 <__flatcc_fb_clear_parser@@Base+0x235>
  422c18:	cmp    QWORD PTR [rax+0x28],rsi
  422c1c:	ja     422c10 <__flatcc_fb_clear_parser@@Base+0x1e0>
  422c1e:	cmp    QWORD PTR [rax+0x30],rsi
  422c22:	jbe    422c10 <__flatcc_fb_clear_parser@@Base+0x1e0>
  422c24:	mov    rdx,QWORD PTR [rax+0x318]
  422c2b:	jmp    422c6c <__flatcc_fb_clear_parser@@Base+0x23c>
  422c2d:	nop    DWORD PTR [rax]
  422c30:	mov    WORD PTR [r14+0x10],0x1
  422c37:	mov    rdi,rbx
  422c3a:	mov    rdx,r12
  422c3d:	jmp    422bbd <__flatcc_fb_clear_parser@@Base+0x18d>
  422c42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422c4c:	nop    DWORD PTR [rax+0x0]
  422c50:	cmp    QWORD PTR [r14],0x0
  422c54:	jne    422bca <__flatcc_fb_clear_parser@@Base+0x19a>
  422c5a:	mov    rax,QWORD PTR [rsi]
  422c5d:	mov    QWORD PTR [r14],rax
  422c60:	jmp    422bca <__flatcc_fb_clear_parser@@Base+0x19a>
  422c65:	lea    rdx,[rip+0xd0d7]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  422c6c:	mov    rcx,QWORD PTR [rsi+0x10]
  422c70:	mov    r8,QWORD PTR [rsi+0x18]
  422c74:	mov    rdi,rbx
  422c77:	lea    rsi,[rip+0x24752]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  422c7e:	mov    r9d,0x1
  422c84:	mov    eax,0x0
  422c89:	lea    rbp,[rip+0x24ac7]        # 447757 <fb_schema_table_deleted@@Base+0x82f>
  422c90:	push   rbp
  422c91:	lea    rbp,[rip+0x24ae9]        # 447781 <fb_schema_table_deleted@@Base+0x859>
  422c98:	push   rbp
  422c99:	call   41c280 <__flatcc_fb_print_error@@Base>
  422c9e:	add    rsp,0x10
  422ca2:	jmp    422cbc <__flatcc_fb_clear_parser@@Base+0x28c>
  422ca4:	mov    rdi,rbx
  422ca7:	lea    rsi,[rip+0x24774]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  422cae:	lea    rdx,[rip+0x24aa2]        # 447757 <fb_schema_table_deleted@@Base+0x82f>
  422cb5:	xor    eax,eax
  422cb7:	call   41c280 <__flatcc_fb_print_error@@Base>
  422cbc:	inc    DWORD PTR [rbx+0xd0]
  422cc2:	jmp    422bca <__flatcc_fb_clear_parser@@Base+0x19a>
  422cc7:	lea    rdx,[rip+0x24ad4]        # 4477a2 <fb_schema_table_deleted@@Base+0x87a>
  422cce:	mov    rdi,rbx
  422cd1:	xor    ecx,ecx
  422cd3:	xor    r8d,r8d
  422cd6:	xor    r9d,r9d
  422cd9:	call   41c3a0 <__flatcc_error_report@@Base>
  422cde:	mov    WORD PTR [r14+0x10],0x1
  422ce5:	mov    rax,QWORD PTR [r14]
  422ce8:	test   rax,rax
  422ceb:	je     422cf9 <__flatcc_fb_clear_parser@@Base+0x2c9>
  422ced:	mov    rcx,QWORD PTR [rbx+0x48]
  422cf1:	mov    ecx,DWORD PTR [rcx]
  422cf3:	sub    ecx,eax
  422cf5:	mov    DWORD PTR [r14+0x8],ecx
  422cf9:	mov    rbp,QWORD PTR [rbx+0x48]
  422cfd:	cmp    QWORD PTR [rbp+0x20],0x16
  422d02:	jne    422d1a <__flatcc_fb_clear_parser@@Base+0x2ea>
  422d04:	mov    rdi,rbx
  422d07:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422d0c:	test   rbp,rbp
  422d0f:	jne    422dbc <__flatcc_fb_clear_parser@@Base+0x38c>
  422d15:	jmp    422db5 <__flatcc_fb_clear_parser@@Base+0x385>
  422d1a:	test   rbp,rbp
  422d1d:	je     422d97 <__flatcc_fb_clear_parser@@Base+0x367>
  422d1f:	mov    rax,QWORD PTR [rbp+0x0]
  422d23:	xor    r9d,r9d
  422d26:	lea    rdx,[rip+0xd016]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  422d2d:	mov    r10,rdx
  422d30:	test   rax,rax
  422d33:	je     422d3c <__flatcc_fb_clear_parser@@Base+0x30c>
  422d35:	mov    r9d,DWORD PTR [rbp+0x8]
  422d39:	mov    r10,rax
  422d3c:	mov    rax,rbx
  422d3f:	cmp    QWORD PTR [rax+0x28],rbp
  422d43:	jbe    422d5e <__flatcc_fb_clear_parser@@Base+0x32e>
  422d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d4f:	nop
  422d50:	mov    rax,QWORD PTR [rax]
  422d53:	test   rax,rax
  422d56:	je     422d6b <__flatcc_fb_clear_parser@@Base+0x33b>
  422d58:	cmp    QWORD PTR [rax+0x28],rbp
  422d5c:	ja     422d50 <__flatcc_fb_clear_parser@@Base+0x320>
  422d5e:	cmp    QWORD PTR [rax+0x30],rbp
  422d62:	jbe    422d50 <__flatcc_fb_clear_parser@@Base+0x320>
  422d64:	mov    rdx,QWORD PTR [rax+0x318]
  422d6b:	mov    rcx,QWORD PTR [rbp+0x10]
  422d6f:	mov    r8,QWORD PTR [rbp+0x18]
  422d73:	lea    rbp,[rip+0x24a53]        # 4477cd <fb_schema_table_deleted@@Base+0x8a5>
  422d7a:	lea    rsi,[rip+0x2464f]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  422d81:	mov    rdi,rbx
  422d84:	mov    eax,0x0
  422d89:	push   rbp
  422d8a:	push   r10
  422d8c:	call   41c280 <__flatcc_fb_print_error@@Base>
  422d91:	add    rsp,0x10
  422d95:	jmp    422daf <__flatcc_fb_clear_parser@@Base+0x37f>
  422d97:	lea    rsi,[rip+0x24684]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  422d9e:	lea    rdx,[rip+0x24a28]        # 4477cd <fb_schema_table_deleted@@Base+0x8a5>
  422da5:	mov    rdi,rbx
  422da8:	xor    eax,eax
  422daa:	call   41c280 <__flatcc_fb_print_error@@Base>
  422daf:	inc    DWORD PTR [rbx+0xd0]
  422db5:	mov    WORD PTR [r14+0x10],0x1
  422dbc:	add    rsp,0x8
  422dc0:	pop    rbx
  422dc1:	pop    r12
  422dc3:	pop    r13
  422dc5:	pop    r14
  422dc7:	pop    r15
  422dc9:	pop    rbp
  422dca:	ret    
  422dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  422dd0:	push   rbp
  422dd1:	push   r15
  422dd3:	push   r14
  422dd5:	push   r13
  422dd7:	push   r12
  422dd9:	push   rbx
  422dda:	push   rax
  422ddb:	mov    rbx,rdi
  422dde:	mov    rbp,QWORD PTR [rdi+0x48]
  422de2:	cmp    QWORD PTR [rbp+0x20],0x9
  422de7:	jne    423663 <__flatcc_fb_clear_parser@@Base+0xc33>
  422ded:	mov    r15,rdx
  422df0:	mov    r14,rsi
  422df3:	mov    rdi,rbx
  422df6:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422dfb:	test   rbp,rbp
  422dfe:	je     4237c0 <__flatcc_fb_clear_parser@@Base+0xd90>
  422e04:	mov    QWORD PTR [r14+0x8],rbp
  422e08:	mov    rdi,rbx
  422e0b:	call   4239b0 <__flatcc_fb_clear_parser@@Base+0xf80>
  422e10:	mov    QWORD PTR [r14+0x38],rax
  422e14:	mov    rbp,QWORD PTR [rbx+0x48]
  422e18:	cmp    QWORD PTR [rbp+0x20],0x7b
  422e1d:	jne    4236cf <__flatcc_fb_clear_parser@@Base+0xc9f>
  422e23:	mov    rdi,rbx
  422e26:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422e2b:	test   rbp,rbp
  422e2e:	je     4237c0 <__flatcc_fb_clear_parser@@Base+0xd90>
  422e34:	mov    r12,QWORD PTR [rbx+0x48]
  422e38:	cmp    QWORD PTR [r12+0x20],0x7d
  422e3e:	mov    rbp,r12
  422e41:	je     423747 <__flatcc_fb_clear_parser@@Base+0xd17>
  422e47:	nop    WORD PTR [rax+rax*1+0x0]
  422e50:	mov    r13,QWORD PTR [rbx+0x60]
  422e54:	lea    rax,[r13+0xb0]
  422e5b:	cmp    rax,QWORD PTR [rbx+0x50]
  422e5f:	jbe    422e9d <__flatcc_fb_clear_parser@@Base+0x46d>
  422e61:	mov    edi,0x10000
  422e66:	mov    esi,0x1
  422e6b:	call   406150 <calloc@plt>
  422e70:	test   rax,rax
  422e73:	je     4237fa <__flatcc_fb_clear_parser@@Base+0xdca>
  422e79:	mov    rcx,QWORD PTR [rbx+0x58]
  422e7d:	mov    QWORD PTR [rax],rcx
  422e80:	mov    QWORD PTR [rbx+0x58],rax
  422e84:	lea    r13,[rax+0x10]
  422e88:	mov    QWORD PTR [rbx+0x60],r13
  422e8c:	lea    rcx,[rax+0x10000]
  422e93:	mov    QWORD PTR [rbx+0x50],rcx
  422e97:	add    rax,0xc0
  422e9d:	mov    QWORD PTR [rbx+0x60],rax
  422ea1:	mov    rax,QWORD PTR [r14+0x28]
  422ea5:	mov    QWORD PTR [r13+0x0],rax
  422ea9:	mov    WORD PTR [r13+0x10],0x5
  422eb0:	mov    QWORD PTR [r14+0x28],r13
  422eb4:	mov    rax,QWORD PTR [rbx+0x40]
  422eb8:	test   rax,rax
  422ebb:	je     422ee0 <__flatcc_fb_clear_parser@@Base+0x4b0>
  422ebd:	xor    edx,edx
  422ebf:	nop
  422ec0:	mov    rcx,rax
  422ec3:	mov    rax,QWORD PTR [rax]
  422ec6:	mov    QWORD PTR [rcx],rdx
  422ec9:	mov    rdx,rcx
  422ecc:	test   rax,rax
  422ecf:	jne    422ec0 <__flatcc_fb_clear_parser@@Base+0x490>
  422ed1:	jmp    422ee2 <__flatcc_fb_clear_parser@@Base+0x4b2>
  422ed3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422edd:	nop    DWORD PTR [rax]
  422ee0:	xor    ecx,ecx
  422ee2:	mov    QWORD PTR [r13+0x68],rcx
  422ee6:	mov    QWORD PTR [rbx+0x40],0x0
  422eee:	mov    rbp,QWORD PTR [rbx+0x48]
  422ef2:	mov    rax,QWORD PTR [rbp+0x20]
  422ef6:	cmp    r15,0xfffffffffffffc39
  422efd:	jne    423010 <__flatcc_fb_clear_parser@@Base+0x5e0>
  422f03:	cmp    rax,0x9
  422f07:	jne    4230bb <__flatcc_fb_clear_parser@@Base+0x68b>
  422f0d:	mov    rdi,rbx
  422f10:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422f15:	test   rbp,rbp
  422f18:	je     4235c0 <__flatcc_fb_clear_parser@@Base+0xb90>
  422f1e:	mov    QWORD PTR [r13+0x8],rbp
  422f22:	mov    rbp,QWORD PTR [rbx+0x48]
  422f26:	cmp    QWORD PTR [rbp+0x20],0x28
  422f2b:	jne    4231dd <__flatcc_fb_clear_parser@@Base+0x7ad>
  422f31:	mov    rdi,rbx
  422f34:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422f39:	test   rbp,rbp
  422f3c:	je     4235c0 <__flatcc_fb_clear_parser@@Base+0xb90>
  422f42:	lea    rsi,[r13+0x30]
  422f46:	mov    rdi,rbx
  422f49:	call   424120 <__flatcc_fb_clear_parser@@Base+0x16f0>
  422f4e:	mov    rbp,QWORD PTR [rbx+0x48]
  422f52:	cmp    QWORD PTR [rbp+0x20],0x29
  422f57:	jne    42333f <__flatcc_fb_clear_parser@@Base+0x90f>
  422f5d:	mov    rdi,rbx
  422f60:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422f65:	test   rbp,rbp
  422f68:	je     4235c0 <__flatcc_fb_clear_parser@@Base+0xb90>
  422f6e:	mov    rbp,QWORD PTR [rbx+0x48]
  422f72:	cmp    QWORD PTR [rbp+0x20],0x3a
  422f77:	jne    423484 <__flatcc_fb_clear_parser@@Base+0xa54>
  422f7d:	mov    rdi,rbx
  422f80:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422f85:	test   rbp,rbp
  422f88:	je     4235c0 <__flatcc_fb_clear_parser@@Base+0xb90>
  422f8e:	lea    rsi,[r13+0x18]
  422f92:	mov    rdi,rbx
  422f95:	call   424120 <__flatcc_fb_clear_parser@@Base+0x16f0>
  422f9a:	mov    rbp,QWORD PTR [rbx+0x48]
  422f9e:	cmp    QWORD PTR [rbp+0x20],0x3d
  422fa3:	jne    4234d1 <__flatcc_fb_clear_parser@@Base+0xaa1>
  422fa9:	mov    rdi,rbx
  422fac:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  422fb1:	test   rbp,rbp
  422fb4:	je     4234d1 <__flatcc_fb_clear_parser@@Base+0xaa1>
  422fba:	mov    rax,QWORD PTR [rbp+0x0]
  422fbe:	xor    r9d,r9d
  422fc1:	lea    r10,[rip+0xcd7b]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  422fc8:	test   rax,rax
  422fcb:	je     422fd4 <__flatcc_fb_clear_parser@@Base+0x5a4>
  422fcd:	mov    r9d,DWORD PTR [rbp+0x8]
  422fd1:	mov    r10,rax
  422fd4:	mov    rax,rbx
  422fd7:	cmp    QWORD PTR [rax+0x28],rbp
  422fdb:	jbe    422fef <__flatcc_fb_clear_parser@@Base+0x5bf>
  422fdd:	mov    rax,QWORD PTR [rax]
  422fe0:	test   rax,rax
  422fe3:	je     423587 <__flatcc_fb_clear_parser@@Base+0xb57>
  422fe9:	cmp    QWORD PTR [rax+0x28],rbp
  422fed:	ja     422fdd <__flatcc_fb_clear_parser@@Base+0x5ad>
  422fef:	cmp    QWORD PTR [rax+0x30],rbp
  422ff3:	jbe    422fdd <__flatcc_fb_clear_parser@@Base+0x5ad>
  422ff5:	mov    rdx,QWORD PTR [rax+0x318]
  422ffc:	jmp    42358e <__flatcc_fb_clear_parser@@Base+0xb5e>
  423001:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42300b:	nop    DWORD PTR [rax+rax*1+0x0]
  423010:	cmp    rax,0x9
  423014:	jne    42310d <__flatcc_fb_clear_parser@@Base+0x6dd>
  42301a:	mov    rdi,rbx
  42301d:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423022:	test   rbp,rbp
  423025:	je     423310 <__flatcc_fb_clear_parser@@Base+0x8e0>
  42302b:	mov    QWORD PTR [r13+0x8],rbp
  42302f:	mov    rbp,QWORD PTR [rbx+0x48]
  423033:	cmp    QWORD PTR [rbp+0x20],0x3a
  423038:	jne    42322d <__flatcc_fb_clear_parser@@Base+0x7fd>
  42303e:	mov    rdi,rbx
  423041:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423046:	test   rbp,rbp
  423049:	je     423310 <__flatcc_fb_clear_parser@@Base+0x8e0>
  42304f:	lea    rsi,[r13+0x18]
  423053:	mov    rdi,rbx
  423056:	call   424120 <__flatcc_fb_clear_parser@@Base+0x16f0>
  42305b:	mov    rbp,QWORD PTR [rbx+0x48]
  42305f:	cmp    QWORD PTR [rbp+0x20],0x3d
  423064:	jne    42308b <__flatcc_fb_clear_parser@@Base+0x65b>
  423066:	mov    rdi,rbx
  423069:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  42306e:	test   rbp,rbp
  423071:	je     42308b <__flatcc_fb_clear_parser@@Base+0x65b>
  423073:	lea    rsi,[r13+0x48]
  423077:	mov    rdi,rbx
  42307a:	mov    edx,0x2
  42307f:	lea    rcx,[rip+0x24dca]        # 447e50 <fb_schema_table_deleted@@Base+0xf28>
  423086:	call   423c40 <__flatcc_fb_clear_parser@@Base+0x1210>
  42308b:	mov    rdi,rbx
  42308e:	call   4239b0 <__flatcc_fb_clear_parser@@Base+0xf80>
  423093:	mov    QWORD PTR [r13+0x60],rax
  423097:	mov    QWORD PTR [rbx+0x40],0x0
  42309f:	mov    rax,QWORD PTR [rbx+0x48]
  4230a3:	cmp    QWORD PTR [rax+0x20],0x3b
  4230a8:	jne    42338d <__flatcc_fb_clear_parser@@Base+0x95d>
  4230ae:	mov    rdi,rbx
  4230b1:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4230b6:	jmp    423600 <__flatcc_fb_clear_parser@@Base+0xbd0>
  4230bb:	test   rbp,rbp
  4230be:	je     4231b1 <__flatcc_fb_clear_parser@@Base+0x781>
  4230c4:	mov    rax,QWORD PTR [rbp+0x0]
  4230c8:	xor    r9d,r9d
  4230cb:	lea    r10,[rip+0xcc71]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4230d2:	test   rax,rax
  4230d5:	je     4230de <__flatcc_fb_clear_parser@@Base+0x6ae>
  4230d7:	mov    r9d,DWORD PTR [rbp+0x8]
  4230db:	mov    r10,rax
  4230de:	mov    rax,rbx
  4230e1:	cmp    QWORD PTR [rax+0x28],rbp
  4230e5:	jbe    4230fe <__flatcc_fb_clear_parser@@Base+0x6ce>
  4230e7:	nop    WORD PTR [rax+rax*1+0x0]
  4230f0:	mov    rax,QWORD PTR [rax]
  4230f3:	test   rax,rax
  4230f6:	je     42315d <__flatcc_fb_clear_parser@@Base+0x72d>
  4230f8:	cmp    QWORD PTR [rax+0x28],rbp
  4230fc:	ja     4230f0 <__flatcc_fb_clear_parser@@Base+0x6c0>
  4230fe:	cmp    QWORD PTR [rax+0x30],rbp
  423102:	jbe    4230f0 <__flatcc_fb_clear_parser@@Base+0x6c0>
  423104:	mov    rdx,QWORD PTR [rax+0x318]
  42310b:	jmp    423164 <__flatcc_fb_clear_parser@@Base+0x734>
  42310d:	test   rbp,rbp
  423110:	je     4231c7 <__flatcc_fb_clear_parser@@Base+0x797>
  423116:	mov    rax,QWORD PTR [rbp+0x0]
  42311a:	xor    r9d,r9d
  42311d:	lea    r10,[rip+0xcc1f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423124:	test   rax,rax
  423127:	je     423130 <__flatcc_fb_clear_parser@@Base+0x700>
  423129:	mov    r9d,DWORD PTR [rbp+0x8]
  42312d:	mov    r10,rax
  423130:	mov    rax,rbx
  423133:	cmp    QWORD PTR [rax+0x28],rbp
  423137:	jbe    42314e <__flatcc_fb_clear_parser@@Base+0x71e>
  423139:	nop    DWORD PTR [rax+0x0]
  423140:	mov    rax,QWORD PTR [rax]
  423143:	test   rax,rax
  423146:	je     423187 <__flatcc_fb_clear_parser@@Base+0x757>
  423148:	cmp    QWORD PTR [rax+0x28],rbp
  42314c:	ja     423140 <__flatcc_fb_clear_parser@@Base+0x710>
  42314e:	cmp    QWORD PTR [rax+0x30],rbp
  423152:	jbe    423140 <__flatcc_fb_clear_parser@@Base+0x710>
  423154:	mov    rdx,QWORD PTR [rax+0x318]
  42315b:	jmp    42318e <__flatcc_fb_clear_parser@@Base+0x75e>
  42315d:	lea    rdx,[rip+0xcbdf]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423164:	mov    rcx,QWORD PTR [rbp+0x10]
  423168:	mov    r8,QWORD PTR [rbp+0x18]
  42316c:	mov    rdi,rbx
  42316f:	lea    rsi,[rip+0x2425a]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423176:	mov    eax,0x0
  42317b:	lea    rbp,[rip+0x24b15]        # 447c97 <fb_schema_table_deleted@@Base+0xd6f>
  423182:	jmp    4235ac <__flatcc_fb_clear_parser@@Base+0xb7c>
  423187:	lea    rdx,[rip+0xcbb5]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42318e:	mov    rcx,QWORD PTR [rbp+0x10]
  423192:	mov    r8,QWORD PTR [rbp+0x18]
  423196:	mov    rdi,rbx
  423199:	lea    rsi,[rip+0x24230]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  4231a0:	mov    eax,0x0
  4231a5:	lea    rbp,[rip+0x24c61]        # 447e0d <fb_schema_table_deleted@@Base+0xee5>
  4231ac:	jmp    4232cc <__flatcc_fb_clear_parser@@Base+0x89c>
  4231b1:	mov    rdi,rbx
  4231b4:	lea    rsi,[rip+0x24267]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  4231bb:	lea    rdx,[rip+0x24ad5]        # 447c97 <fb_schema_table_deleted@@Base+0xd6f>
  4231c2:	jmp    42357e <__flatcc_fb_clear_parser@@Base+0xb4e>
  4231c7:	mov    rdi,rbx
  4231ca:	lea    rsi,[rip+0x24251]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  4231d1:	lea    rdx,[rip+0x24c35]        # 447e0d <fb_schema_table_deleted@@Base+0xee5>
  4231d8:	jmp    423301 <__flatcc_fb_clear_parser@@Base+0x8d1>
  4231dd:	test   rbp,rbp
  4231e0:	je     4232da <__flatcc_fb_clear_parser@@Base+0x8aa>
  4231e6:	mov    rax,QWORD PTR [rbp+0x0]
  4231ea:	xor    r9d,r9d
  4231ed:	lea    r10,[rip+0xcb4f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4231f4:	test   rax,rax
  4231f7:	je     423200 <__flatcc_fb_clear_parser@@Base+0x7d0>
  4231f9:	mov    r9d,DWORD PTR [rbp+0x8]
  4231fd:	mov    r10,rax
  423200:	mov    rax,rbx
  423203:	cmp    QWORD PTR [rax+0x28],rbp
  423207:	jbe    42321e <__flatcc_fb_clear_parser@@Base+0x7ee>
  423209:	nop    DWORD PTR [rax+0x0]
  423210:	mov    rax,QWORD PTR [rax]
  423213:	test   rax,rax
  423216:	je     42327d <__flatcc_fb_clear_parser@@Base+0x84d>
  423218:	cmp    QWORD PTR [rax+0x28],rbp
  42321c:	ja     423210 <__flatcc_fb_clear_parser@@Base+0x7e0>
  42321e:	cmp    QWORD PTR [rax+0x30],rbp
  423222:	jbe    423210 <__flatcc_fb_clear_parser@@Base+0x7e0>
  423224:	mov    rdx,QWORD PTR [rax+0x318]
  42322b:	jmp    423284 <__flatcc_fb_clear_parser@@Base+0x854>
  42322d:	test   rbp,rbp
  423230:	je     4232f0 <__flatcc_fb_clear_parser@@Base+0x8c0>
  423236:	mov    rax,QWORD PTR [rbp+0x0]
  42323a:	xor    r9d,r9d
  42323d:	lea    r10,[rip+0xcaff]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423244:	test   rax,rax
  423247:	je     423250 <__flatcc_fb_clear_parser@@Base+0x820>
  423249:	mov    r9d,DWORD PTR [rbp+0x8]
  42324d:	mov    r10,rax
  423250:	mov    rax,rbx
  423253:	cmp    QWORD PTR [rax+0x28],rbp
  423257:	jbe    42326e <__flatcc_fb_clear_parser@@Base+0x83e>
  423259:	nop    DWORD PTR [rax+0x0]
  423260:	mov    rax,QWORD PTR [rax]
  423263:	test   rax,rax
  423266:	je     4232a7 <__flatcc_fb_clear_parser@@Base+0x877>
  423268:	cmp    QWORD PTR [rax+0x28],rbp
  42326c:	ja     423260 <__flatcc_fb_clear_parser@@Base+0x830>
  42326e:	cmp    QWORD PTR [rax+0x30],rbp
  423272:	jbe    423260 <__flatcc_fb_clear_parser@@Base+0x830>
  423274:	mov    rdx,QWORD PTR [rax+0x318]
  42327b:	jmp    4232ae <__flatcc_fb_clear_parser@@Base+0x87e>
  42327d:	lea    rdx,[rip+0xcabf]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423284:	mov    rcx,QWORD PTR [rbp+0x10]
  423288:	mov    r8,QWORD PTR [rbp+0x18]
  42328c:	mov    rdi,rbx
  42328f:	lea    rsi,[rip+0x2413a]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423296:	mov    eax,0x0
  42329b:	lea    rbp,[rip+0x24a10]        # 447cb2 <fb_schema_table_deleted@@Base+0xd8a>
  4232a2:	jmp    4235ac <__flatcc_fb_clear_parser@@Base+0xb7c>
  4232a7:	lea    rdx,[rip+0xca95]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4232ae:	mov    rcx,QWORD PTR [rbp+0x10]
  4232b2:	mov    r8,QWORD PTR [rbp+0x18]
  4232b6:	mov    rdi,rbx
  4232b9:	lea    rsi,[rip+0x24110]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  4232c0:	mov    eax,0x0
  4232c5:	lea    rbp,[rip+0x24b5b]        # 447e27 <fb_schema_table_deleted@@Base+0xeff>
  4232cc:	push   rbp
  4232cd:	push   r10
  4232cf:	call   41c280 <__flatcc_fb_print_error@@Base>
  4232d4:	add    rsp,0x10
  4232d8:	jmp    423308 <__flatcc_fb_clear_parser@@Base+0x8d8>
  4232da:	mov    rdi,rbx
  4232dd:	lea    rsi,[rip+0x2413e]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  4232e4:	lea    rdx,[rip+0x249c7]        # 447cb2 <fb_schema_table_deleted@@Base+0xd8a>
  4232eb:	jmp    42357e <__flatcc_fb_clear_parser@@Base+0xb4e>
  4232f0:	mov    rdi,rbx
  4232f3:	lea    rsi,[rip+0x24128]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  4232fa:	lea    rdx,[rip+0x24b26]        # 447e27 <fb_schema_table_deleted@@Base+0xeff>
  423301:	xor    eax,eax
  423303:	call   41c280 <__flatcc_fb_print_error@@Base>
  423308:	inc    DWORD PTR [rbx+0xd0]
  42330e:	xchg   ax,ax
  423310:	mov    rax,QWORD PTR [rbx+0x48]
  423314:	mov    rax,QWORD PTR [rax+0x20]
  423318:	test   rax,rax
  42331b:	je     423600 <__flatcc_fb_clear_parser@@Base+0xbd0>
  423321:	cmp    rax,0x7d
  423325:	je     4235f8 <__flatcc_fb_clear_parser@@Base+0xbc8>
  42332b:	cmp    rax,0x3b
  42332f:	je     4235f0 <__flatcc_fb_clear_parser@@Base+0xbc0>
  423335:	mov    rdi,rbx
  423338:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  42333d:	jmp    423310 <__flatcc_fb_clear_parser@@Base+0x8e0>
  42333f:	test   rbp,rbp
  423342:	je     42343a <__flatcc_fb_clear_parser@@Base+0xa0a>
  423348:	mov    rax,QWORD PTR [rbp+0x0]
  42334c:	xor    r9d,r9d
  42334f:	lea    r10,[rip+0xc9ed]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423356:	test   rax,rax
  423359:	je     423362 <__flatcc_fb_clear_parser@@Base+0x932>
  42335b:	mov    r9d,DWORD PTR [rbp+0x8]
  42335f:	mov    r10,rax
  423362:	mov    rax,rbx
  423365:	cmp    QWORD PTR [rax+0x28],rbp
  423369:	jbe    42337e <__flatcc_fb_clear_parser@@Base+0x94e>
  42336b:	nop    DWORD PTR [rax+rax*1+0x0]
  423370:	mov    rax,QWORD PTR [rax]
  423373:	test   rax,rax
  423376:	je     4233dd <__flatcc_fb_clear_parser@@Base+0x9ad>
  423378:	cmp    QWORD PTR [rax+0x28],rbp
  42337c:	ja     423370 <__flatcc_fb_clear_parser@@Base+0x940>
  42337e:	cmp    QWORD PTR [rax+0x30],rbp
  423382:	jbe    423370 <__flatcc_fb_clear_parser@@Base+0x940>
  423384:	mov    rdx,QWORD PTR [rax+0x318]
  42338b:	jmp    4233e4 <__flatcc_fb_clear_parser@@Base+0x9b4>
  42338d:	test   rax,rax
  423390:	je     423450 <__flatcc_fb_clear_parser@@Base+0xa20>
  423396:	mov    rcx,QWORD PTR [rax]
  423399:	xor    r9d,r9d
  42339c:	lea    rbp,[rip+0xc9a0]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4233a3:	mov    r10,rbp
  4233a6:	test   rcx,rcx
  4233a9:	je     4233b2 <__flatcc_fb_clear_parser@@Base+0x982>
  4233ab:	mov    r9d,DWORD PTR [rax+0x8]
  4233af:	mov    r10,rcx
  4233b2:	mov    rcx,rbx
  4233b5:	cmp    QWORD PTR [rcx+0x28],rax
  4233b9:	jbe    4233ce <__flatcc_fb_clear_parser@@Base+0x99e>
  4233bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4233c0:	mov    rcx,QWORD PTR [rcx]
  4233c3:	test   rcx,rcx
  4233c6:	je     423407 <__flatcc_fb_clear_parser@@Base+0x9d7>
  4233c8:	cmp    QWORD PTR [rcx+0x28],rax
  4233cc:	ja     4233c0 <__flatcc_fb_clear_parser@@Base+0x990>
  4233ce:	cmp    QWORD PTR [rcx+0x30],rax
  4233d2:	jbe    4233c0 <__flatcc_fb_clear_parser@@Base+0x990>
  4233d4:	mov    rdx,QWORD PTR [rcx+0x318]
  4233db:	jmp    42340e <__flatcc_fb_clear_parser@@Base+0x9de>
  4233dd:	lea    rdx,[rip+0xc95f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4233e4:	mov    rcx,QWORD PTR [rbp+0x10]
  4233e8:	mov    r8,QWORD PTR [rbp+0x18]
  4233ec:	mov    rdi,rbx
  4233ef:	lea    rsi,[rip+0x23fda]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  4233f6:	mov    eax,0x0
  4233fb:	lea    rbp,[rip+0x248d5]        # 447cd7 <fb_schema_table_deleted@@Base+0xdaf>
  423402:	jmp    4235ac <__flatcc_fb_clear_parser@@Base+0xb7c>
  423407:	lea    rdx,[rip+0xc935]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42340e:	mov    rcx,QWORD PTR [rax+0x10]
  423412:	mov    r8,QWORD PTR [rax+0x18]
  423416:	mov    rdi,rbx
  423419:	lea    rsi,[rip+0x23fb0]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423420:	mov    eax,0x0
  423425:	lea    rbp,[rip+0x24a47]        # 447e73 <fb_schema_table_deleted@@Base+0xf4b>
  42342c:	push   rbp
  42342d:	push   r10
  42342f:	call   41c280 <__flatcc_fb_print_error@@Base>
  423434:	add    rsp,0x10
  423438:	jmp    423468 <__flatcc_fb_clear_parser@@Base+0xa38>
  42343a:	mov    rdi,rbx
  42343d:	lea    rsi,[rip+0x23fde]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  423444:	lea    rdx,[rip+0x2488c]        # 447cd7 <fb_schema_table_deleted@@Base+0xdaf>
  42344b:	jmp    42357e <__flatcc_fb_clear_parser@@Base+0xb4e>
  423450:	mov    rdi,rbx
  423453:	lea    rsi,[rip+0x23fc8]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  42345a:	lea    rdx,[rip+0x24a12]        # 447e73 <fb_schema_table_deleted@@Base+0xf4b>
  423461:	xor    eax,eax
  423463:	call   41c280 <__flatcc_fb_print_error@@Base>
  423468:	mov    eax,DWORD PTR [rbx+0xd0]
  42346e:	inc    eax
  423470:	mov    DWORD PTR [rbx+0xd0],eax
  423476:	cmp    eax,0x9
  423479:	jle    42360f <__flatcc_fb_clear_parser@@Base+0xbdf>
  42347f:	jmp    4237c0 <__flatcc_fb_clear_parser@@Base+0xd90>
  423484:	test   rbp,rbp
  423487:	je     42356d <__flatcc_fb_clear_parser@@Base+0xb3d>
  42348d:	mov    rax,QWORD PTR [rbp+0x0]
  423491:	xor    r9d,r9d
  423494:	lea    r10,[rip+0xc8a8]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42349b:	test   rax,rax
  42349e:	je     4234a7 <__flatcc_fb_clear_parser@@Base+0xa77>
  4234a0:	mov    r9d,DWORD PTR [rbp+0x8]
  4234a4:	mov    r10,rax
  4234a7:	mov    rax,rbx
  4234aa:	cmp    QWORD PTR [rax+0x28],rbp
  4234ae:	jbe    4234c2 <__flatcc_fb_clear_parser@@Base+0xa92>
  4234b0:	mov    rax,QWORD PTR [rax]
  4234b3:	test   rax,rax
  4234b6:	je     423546 <__flatcc_fb_clear_parser@@Base+0xb16>
  4234bc:	cmp    QWORD PTR [rax+0x28],rbp
  4234c0:	ja     4234b0 <__flatcc_fb_clear_parser@@Base+0xa80>
  4234c2:	cmp    QWORD PTR [rax+0x30],rbp
  4234c6:	jbe    4234b0 <__flatcc_fb_clear_parser@@Base+0xa80>
  4234c8:	mov    rdx,QWORD PTR [rax+0x318]
  4234cf:	jmp    42354d <__flatcc_fb_clear_parser@@Base+0xb1d>
  4234d1:	mov    rdi,rbx
  4234d4:	call   4239b0 <__flatcc_fb_clear_parser@@Base+0xf80>
  4234d9:	mov    QWORD PTR [r13+0x60],rax
  4234dd:	mov    QWORD PTR [rbx+0x40],0x0
  4234e5:	mov    rax,QWORD PTR [rbx+0x48]
  4234e9:	cmp    QWORD PTR [rax+0x20],0x3b
  4234ee:	je     4230ae <__flatcc_fb_clear_parser@@Base+0x67e>
  4234f4:	test   rax,rax
  4234f7:	je     42364d <__flatcc_fb_clear_parser@@Base+0xc1d>
  4234fd:	mov    rcx,QWORD PTR [rax]
  423500:	xor    r9d,r9d
  423503:	lea    rbp,[rip+0xc839]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42350a:	mov    r10,rbp
  42350d:	test   rcx,rcx
  423510:	je     423519 <__flatcc_fb_clear_parser@@Base+0xae9>
  423512:	mov    r9d,DWORD PTR [rax+0x8]
  423516:	mov    r10,rcx
  423519:	mov    rcx,rbx
  42351c:	cmp    QWORD PTR [rcx+0x28],rax
  423520:	jbe    423534 <__flatcc_fb_clear_parser@@Base+0xb04>
  423522:	mov    rcx,QWORD PTR [rcx]
  423525:	test   rcx,rcx
  423528:	je     423623 <__flatcc_fb_clear_parser@@Base+0xbf3>
  42352e:	cmp    QWORD PTR [rcx+0x28],rax
  423532:	ja     423522 <__flatcc_fb_clear_parser@@Base+0xaf2>
  423534:	cmp    QWORD PTR [rcx+0x30],rax
  423538:	jbe    423522 <__flatcc_fb_clear_parser@@Base+0xaf2>
  42353a:	mov    rdx,QWORD PTR [rcx+0x318]
  423541:	jmp    42362a <__flatcc_fb_clear_parser@@Base+0xbfa>
  423546:	lea    rdx,[rip+0xc7f6]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42354d:	mov    rcx,QWORD PTR [rbp+0x10]
  423551:	mov    r8,QWORD PTR [rbp+0x18]
  423555:	mov    rdi,rbx
  423558:	lea    rsi,[rip+0x23e71]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  42355f:	mov    eax,0x0
  423564:	lea    rbp,[rip+0x24793]        # 447cfe <fb_schema_table_deleted@@Base+0xdd6>
  42356b:	jmp    4235ac <__flatcc_fb_clear_parser@@Base+0xb7c>
  42356d:	mov    rdi,rbx
  423570:	lea    rsi,[rip+0x23eab]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  423577:	lea    rdx,[rip+0x24780]        # 447cfe <fb_schema_table_deleted@@Base+0xdd6>
  42357e:	xor    eax,eax
  423580:	call   41c280 <__flatcc_fb_print_error@@Base>
  423585:	jmp    4235b8 <__flatcc_fb_clear_parser@@Base+0xb88>
  423587:	lea    rdx,[rip+0xc7b5]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42358e:	mov    rcx,QWORD PTR [rbp+0x10]
  423592:	mov    r8,QWORD PTR [rbp+0x18]
  423596:	mov    rdi,rbx
  423599:	lea    rsi,[rip+0x23e30]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  4235a0:	mov    eax,0x0
  4235a5:	lea    rbp,[rip+0x24785]        # 447d31 <fb_schema_table_deleted@@Base+0xe09>
  4235ac:	push   rbp
  4235ad:	push   r10
  4235af:	call   41c280 <__flatcc_fb_print_error@@Base>
  4235b4:	add    rsp,0x10
  4235b8:	inc    DWORD PTR [rbx+0xd0]
  4235be:	xchg   ax,ax
  4235c0:	mov    rax,QWORD PTR [rbx+0x48]
  4235c4:	mov    rax,QWORD PTR [rax+0x20]
  4235c8:	test   rax,rax
  4235cb:	je     423600 <__flatcc_fb_clear_parser@@Base+0xbd0>
  4235cd:	cmp    rax,0x7d
  4235d1:	je     4235f8 <__flatcc_fb_clear_parser@@Base+0xbc8>
  4235d3:	cmp    rax,0x3b
  4235d7:	je     4235f0 <__flatcc_fb_clear_parser@@Base+0xbc0>
  4235d9:	mov    rdi,rbx
  4235dc:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4235e1:	jmp    4235c0 <__flatcc_fb_clear_parser@@Base+0xb90>
  4235e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235ed:	nop    DWORD PTR [rax]
  4235f0:	mov    rdi,rbx
  4235f3:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4235f8:	mov    QWORD PTR [rbx+0x40],0x0
  423600:	mov    eax,DWORD PTR [rbx+0xd0]
  423606:	cmp    eax,0x9
  423609:	jg     4237c0 <__flatcc_fb_clear_parser@@Base+0xd90>
  42360f:	mov    rbp,QWORD PTR [rbx+0x48]
  423613:	cmp    QWORD PTR [rbp+0x20],0x7d
  423618:	jne    422e50 <__flatcc_fb_clear_parser@@Base+0x420>
  42361e:	jmp    423747 <__flatcc_fb_clear_parser@@Base+0xd17>
  423623:	lea    rdx,[rip+0xc719]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  42362a:	mov    rcx,QWORD PTR [rax+0x10]
  42362e:	mov    r8,QWORD PTR [rax+0x18]
  423632:	mov    rdi,rbx
  423635:	lea    rsi,[rip+0x23d94]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  42363c:	mov    eax,0x0
  423641:	lea    rbp,[rip+0x2470f]        # 447d57 <fb_schema_table_deleted@@Base+0xe2f>
  423648:	jmp    42342c <__flatcc_fb_clear_parser@@Base+0x9fc>
  42364d:	mov    rdi,rbx
  423650:	lea    rsi,[rip+0x23dcb]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  423657:	lea    rdx,[rip+0x246f9]        # 447d57 <fb_schema_table_deleted@@Base+0xe2f>
  42365e:	jmp    423461 <__flatcc_fb_clear_parser@@Base+0xa31>
  423663:	test   rbp,rbp
  423666:	je     4236bc <__flatcc_fb_clear_parser@@Base+0xc8c>
  423668:	mov    rax,QWORD PTR [rbp+0x0]
  42366c:	xor    r9d,r9d
  42366f:	lea    rdx,[rip+0xc6cd]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423676:	mov    r10,rdx
  423679:	test   rax,rax
  42367c:	je     423685 <__flatcc_fb_clear_parser@@Base+0xc55>
  42367e:	mov    r9d,DWORD PTR [rbp+0x8]
  423682:	mov    r10,rax
  423685:	mov    rax,rbx
  423688:	cmp    QWORD PTR [rax+0x28],rbp
  42368c:	jbe    42369e <__flatcc_fb_clear_parser@@Base+0xc6e>
  42368e:	xchg   ax,ax
  423690:	mov    rax,QWORD PTR [rax]
  423693:	test   rax,rax
  423696:	je     4236ab <__flatcc_fb_clear_parser@@Base+0xc7b>
  423698:	cmp    QWORD PTR [rax+0x28],rbp
  42369c:	ja     423690 <__flatcc_fb_clear_parser@@Base+0xc60>
  42369e:	cmp    QWORD PTR [rax+0x30],rbp
  4236a2:	jbe    423690 <__flatcc_fb_clear_parser@@Base+0xc60>
  4236a4:	mov    rdx,QWORD PTR [rax+0x318]
  4236ab:	mov    rcx,QWORD PTR [rbp+0x10]
  4236af:	mov    r8,QWORD PTR [rbp+0x18]
  4236b3:	lea    rbp,[rip+0x2443b]        # 447af5 <fb_schema_table_deleted@@Base+0xbcd>
  4236ba:	jmp    42372a <__flatcc_fb_clear_parser@@Base+0xcfa>
  4236bc:	lea    rsi,[rip+0x23d5f]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  4236c3:	lea    rdx,[rip+0x2442b]        # 447af5 <fb_schema_table_deleted@@Base+0xbcd>
  4236ca:	jmp    4237a1 <__flatcc_fb_clear_parser@@Base+0xd71>
  4236cf:	test   rbp,rbp
  4236d2:	je     423793 <__flatcc_fb_clear_parser@@Base+0xd63>
  4236d8:	mov    rax,QWORD PTR [rbp+0x0]
  4236dc:	xor    r9d,r9d
  4236df:	lea    rdx,[rip+0xc65d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  4236e6:	mov    r10,rdx
  4236e9:	test   rax,rax
  4236ec:	je     4236f5 <__flatcc_fb_clear_parser@@Base+0xcc5>
  4236ee:	mov    r9d,DWORD PTR [rbp+0x8]
  4236f2:	mov    r10,rax
  4236f5:	mov    rax,rbx
  4236f8:	cmp    QWORD PTR [rax+0x28],rbp
  4236fc:	jbe    42370e <__flatcc_fb_clear_parser@@Base+0xcde>
  4236fe:	xchg   ax,ax
  423700:	mov    rax,QWORD PTR [rax]
  423703:	test   rax,rax
  423706:	je     42371b <__flatcc_fb_clear_parser@@Base+0xceb>
  423708:	cmp    QWORD PTR [rax+0x28],rbp
  42370c:	ja     423700 <__flatcc_fb_clear_parser@@Base+0xcd0>
  42370e:	cmp    QWORD PTR [rax+0x30],rbp
  423712:	jbe    423700 <__flatcc_fb_clear_parser@@Base+0xcd0>
  423714:	mov    rdx,QWORD PTR [rax+0x318]
  42371b:	mov    rcx,QWORD PTR [rbp+0x10]
  42371f:	mov    r8,QWORD PTR [rbp+0x18]
  423723:	lea    rbp,[rip+0x243ee]        # 447b18 <fb_schema_table_deleted@@Base+0xbf0>
  42372a:	lea    rsi,[rip+0x23c9f]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423731:	mov    rdi,rbx
  423734:	mov    eax,0x0
  423739:	push   rbp
  42373a:	push   r10
  42373c:	call   41c280 <__flatcc_fb_print_error@@Base>
  423741:	add    rsp,0x10
  423745:	jmp    4237ab <__flatcc_fb_clear_parser@@Base+0xd7b>
  423747:	mov    rdi,rbx
  42374a:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  42374f:	test   r12,r12
  423752:	je     423775 <__flatcc_fb_clear_parser@@Base+0xd45>
  423754:	test   rbp,rbp
  423757:	jne    423775 <__flatcc_fb_clear_parser@@Base+0xd45>
  423759:	mov    rsi,QWORD PTR [rbx+0x48]
  42375d:	lea    rdx,[rip+0x243cd]        # 447b31 <fb_schema_table_deleted@@Base+0xc09>
  423764:	mov    rdi,rbx
  423767:	mov    rcx,r12
  42376a:	xor    r8d,r8d
  42376d:	xor    r9d,r9d
  423770:	call   41c3a0 <__flatcc_error_report@@Base>
  423775:	mov    rax,QWORD PTR [r14+0x28]
  423779:	test   rax,rax
  42377c:	je     4237f2 <__flatcc_fb_clear_parser@@Base+0xdc2>
  42377e:	xor    edx,edx
  423780:	mov    rcx,rax
  423783:	mov    rax,QWORD PTR [rax]
  423786:	mov    QWORD PTR [rcx],rdx
  423789:	mov    rdx,rcx
  42378c:	test   rax,rax
  42378f:	jne    423780 <__flatcc_fb_clear_parser@@Base+0xd50>
  423791:	jmp    4237f4 <__flatcc_fb_clear_parser@@Base+0xdc4>
  423793:	lea    rsi,[rip+0x23c88]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  42379a:	lea    rdx,[rip+0x24377]        # 447b18 <fb_schema_table_deleted@@Base+0xbf0>
  4237a1:	mov    rdi,rbx
  4237a4:	xor    eax,eax
  4237a6:	call   41c280 <__flatcc_fb_print_error@@Base>
  4237ab:	inc    DWORD PTR [rbx+0xd0]
  4237b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4237bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4237c0:	mov    rax,QWORD PTR [rbx+0x48]
  4237c4:	mov    rbp,QWORD PTR [rax+0x20]
  4237c8:	test   rbp,rbp
  4237cb:	je     4237e3 <__flatcc_fb_clear_parser@@Base+0xdb3>
  4237cd:	mov    rdi,rbx
  4237d0:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4237d5:	cmp    rbp,0x7d
  4237d9:	jne    4237c0 <__flatcc_fb_clear_parser@@Base+0xd90>
  4237db:	mov    QWORD PTR [rbx+0x40],0x0
  4237e3:	add    rsp,0x8
  4237e7:	pop    rbx
  4237e8:	pop    r12
  4237ea:	pop    r13
  4237ec:	pop    r14
  4237ee:	pop    r15
  4237f0:	pop    rbp
  4237f1:	ret    
  4237f2:	xor    ecx,ecx
  4237f4:	mov    QWORD PTR [r14+0x28],rcx
  4237f8:	jmp    4237e3 <__flatcc_fb_clear_parser@@Base+0xdb3>
  4237fa:	mov    rax,QWORD PTR [rip+0x2e7f7]        # 451ff8 <stderr@GLIBC_2.2.5>
  423801:	mov    rcx,QWORD PTR [rax]
  423804:	lea    rdi,[rip+0xc011]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  42380b:	mov    esi,0x22
  423810:	mov    edx,0x1
  423815:	call   406230 <fwrite@plt>
  42381a:	mov    edi,0x1
  42381f:	call   406220 <exit@plt>
  423824:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42382e:	xchg   ax,ax
  423830:	push   r15
  423832:	push   r14
  423834:	push   r13
  423836:	push   r12
  423838:	push   rbx
  423839:	mov    r14,rsi
  42383c:	mov    r12,rdi
  42383f:	mov    r15,QWORD PTR [rdi+0x48]
  423843:	mov    rcx,QWORD PTR [rdi+0x60]
  423847:	lea    rax,[rcx+0x20]
  42384b:	cmp    rax,QWORD PTR [rdi+0x50]
  42384f:	jbe    42388f <__flatcc_fb_clear_parser@@Base+0xe5f>
  423851:	mov    edi,0x10000
  423856:	mov    esi,0x1
  42385b:	call   406150 <calloc@plt>
  423860:	test   rax,rax
  423863:	je     423978 <__flatcc_fb_clear_parser@@Base+0xf48>
  423869:	mov    rcx,QWORD PTR [r12+0x58]
  42386e:	mov    QWORD PTR [rax],rcx
  423871:	mov    QWORD PTR [r12+0x58],rax
  423876:	lea    rcx,[rax+0x10]
  42387a:	mov    QWORD PTR [r12+0x60],rcx
  42387f:	lea    rdx,[rax+0x10000]
  423886:	mov    QWORD PTR [r12+0x50],rdx
  42388b:	add    rax,0x30
  42388f:	mov    QWORD PTR [r12+0x60],rax
  423894:	mov    QWORD PTR [rcx+0x8],r15
  423898:	mov    QWORD PTR [r14],rcx
  42389b:	mov    rdi,r12
  42389e:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4238a3:	mov    rbx,QWORD PTR [r12+0x48]
  4238a8:	cmp    QWORD PTR [rbx+0x20],0x2e
  4238ad:	jne    42394b <__flatcc_fb_clear_parser@@Base+0xf1b>
  4238b3:	mov    r15,QWORD PTR [r14]
  4238b6:	jmp    4238e3 <__flatcc_fb_clear_parser@@Base+0xeb3>
  4238b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4238c0:	mov    QWORD PTR [r12+0x60],rax
  4238c5:	mov    QWORD PTR [r13+0x8],r14
  4238c9:	mov    QWORD PTR [r15],r13
  4238cc:	mov    rdi,r12
  4238cf:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4238d4:	mov    rbx,QWORD PTR [r12+0x48]
  4238d9:	cmp    QWORD PTR [rbx+0x20],0x2e
  4238de:	mov    r15,r13
  4238e1:	jne    42394b <__flatcc_fb_clear_parser@@Base+0xf1b>
  4238e3:	mov    rdi,r12
  4238e6:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4238eb:	test   rbx,rbx
  4238ee:	je     42394b <__flatcc_fb_clear_parser@@Base+0xf1b>
  4238f0:	mov    r14,QWORD PTR [r12+0x48]
  4238f5:	cmp    QWORD PTR [r14+0x20],0x9
  4238fa:	jne    423955 <__flatcc_fb_clear_parser@@Base+0xf25>
  4238fc:	mov    r13,QWORD PTR [r12+0x60]
  423901:	lea    rax,[r13+0x20]
  423905:	cmp    rax,QWORD PTR [r12+0x50]
  42390a:	jbe    4238c0 <__flatcc_fb_clear_parser@@Base+0xe90>
  42390c:	mov    edi,0x10000
  423911:	mov    esi,0x1
  423916:	call   406150 <calloc@plt>
  42391b:	test   rax,rax
  42391e:	je     423978 <__flatcc_fb_clear_parser@@Base+0xf48>
  423920:	mov    rcx,QWORD PTR [r12+0x58]
  423925:	mov    QWORD PTR [rax],rcx
  423928:	mov    QWORD PTR [r12+0x58],rax
  42392d:	lea    r13,[rax+0x10]
  423931:	mov    QWORD PTR [r12+0x60],r13
  423936:	lea    rcx,[rax+0x10000]
  42393d:	mov    QWORD PTR [r12+0x50],rcx
  423942:	add    rax,0x30
  423946:	jmp    4238c0 <__flatcc_fb_clear_parser@@Base+0xe90>
  42394b:	pop    rbx
  42394c:	pop    r12
  42394e:	pop    r13
  423950:	pop    r14
  423952:	pop    r15
  423954:	ret    
  423955:	lea    rdx,[rip+0x23ffd]        # 447959 <fb_schema_table_deleted@@Base+0xa31>
  42395c:	mov    rdi,r12
  42395f:	mov    rsi,r14
  423962:	xor    ecx,ecx
  423964:	xor    r8d,r8d
  423967:	xor    r9d,r9d
  42396a:	pop    rbx
  42396b:	pop    r12
  42396d:	pop    r13
  42396f:	pop    r14
  423971:	pop    r15
  423973:	jmp    41c3a0 <__flatcc_error_report@@Base>
  423978:	mov    rax,QWORD PTR [rip+0x2e679]        # 451ff8 <stderr@GLIBC_2.2.5>
  42397f:	mov    rcx,QWORD PTR [rax]
  423982:	lea    rdi,[rip+0xbe93]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  423989:	mov    esi,0x22
  42398e:	mov    edx,0x1
  423993:	call   406230 <fwrite@plt>
  423998:	mov    edi,0x1
  42399d:	call   406220 <exit@plt>
  4239a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4239ac:	nop    DWORD PTR [rax+0x0]
  4239b0:	push   rbp
  4239b1:	push   r15
  4239b3:	push   r14
  4239b5:	push   r13
  4239b7:	push   r12
  4239b9:	push   rbx
  4239ba:	push   rax
  4239bb:	mov    r14,QWORD PTR [rdi+0x48]
  4239bf:	cmp    QWORD PTR [r14+0x20],0x28
  4239c4:	jne    423b40 <__flatcc_fb_clear_parser@@Base+0x1110>
  4239ca:	mov    r12,rdi
  4239cd:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4239d2:	test   r14,r14
  4239d5:	je     423b40 <__flatcc_fb_clear_parser@@Base+0x1110>
  4239db:	mov    r13,QWORD PTR [r12+0x48]
  4239e0:	cmp    QWORD PTR [r13+0x20],0x9
  4239e5:	jne    423ae5 <__flatcc_fb_clear_parser@@Base+0x10b5>
  4239eb:	mov    rdi,r12
  4239ee:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4239f3:	test   r13,r13
  4239f6:	je     423ae5 <__flatcc_fb_clear_parser@@Base+0x10b5>
  4239fc:	xor    ebp,ebp
  4239fe:	lea    r15,[rip+0x24155]        # 447b5a <fb_schema_table_deleted@@Base+0xc32>
  423a05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a0f:	nop
  423a10:	mov    rbx,QWORD PTR [r12+0x60]
  423a15:	lea    rax,[rbx+0x30]
  423a19:	cmp    rax,QWORD PTR [r12+0x50]
  423a1e:	jbe    423a5e <__flatcc_fb_clear_parser@@Base+0x102e>
  423a20:	mov    edi,0x10000
  423a25:	mov    esi,0x1
  423a2a:	call   406150 <calloc@plt>
  423a2f:	test   rax,rax
  423a32:	je     423c07 <__flatcc_fb_clear_parser@@Base+0x11d7>
  423a38:	mov    rcx,QWORD PTR [r12+0x58]
  423a3d:	mov    QWORD PTR [rax],rcx
  423a40:	mov    QWORD PTR [r12+0x58],rax
  423a45:	lea    rbx,[rax+0x10]
  423a49:	mov    QWORD PTR [r12+0x60],rbx
  423a4e:	lea    rcx,[rax+0x10000]
  423a55:	mov    QWORD PTR [r12+0x50],rcx
  423a5a:	add    rax,0x40
  423a5e:	mov    QWORD PTR [r12+0x60],rax
  423a63:	mov    QWORD PTR [rbx],rbp
  423a66:	mov    QWORD PTR [rbx+0x8],r13
  423a6a:	mov    rbp,QWORD PTR [r12+0x48]
  423a6f:	cmp    QWORD PTR [rbp+0x20],0x3a
  423a74:	jne    423a97 <__flatcc_fb_clear_parser@@Base+0x1067>
  423a76:	mov    rdi,r12
  423a79:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423a7e:	test   rbp,rbp
  423a81:	je     423a97 <__flatcc_fb_clear_parser@@Base+0x1067>
  423a83:	lea    rsi,[rbx+0x10]
  423a87:	mov    rdi,r12
  423a8a:	mov    edx,0x1
  423a8f:	mov    rcx,r15
  423a92:	call   423c40 <__flatcc_fb_clear_parser@@Base+0x1210>
  423a97:	cmp    DWORD PTR [r12+0xd0],0x9
  423aa0:	jg     423b51 <__flatcc_fb_clear_parser@@Base+0x1121>
  423aa6:	mov    rbp,QWORD PTR [r12+0x48]
  423aab:	cmp    QWORD PTR [rbp+0x20],0x2c
  423ab0:	jne    423ae7 <__flatcc_fb_clear_parser@@Base+0x10b7>
  423ab2:	mov    rdi,r12
  423ab5:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423aba:	test   rbp,rbp
  423abd:	je     423ae7 <__flatcc_fb_clear_parser@@Base+0x10b7>
  423abf:	mov    r13,QWORD PTR [r12+0x48]
  423ac4:	cmp    QWORD PTR [r13+0x20],0x9
  423ac9:	jne    423b56 <__flatcc_fb_clear_parser@@Base+0x1126>
  423acf:	mov    rdi,r12
  423ad2:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423ad7:	mov    rbp,rbx
  423ada:	test   r13,r13
  423add:	jne    423a10 <__flatcc_fb_clear_parser@@Base+0xfe0>
  423ae3:	jmp    423ae7 <__flatcc_fb_clear_parser@@Base+0x10b7>
  423ae5:	xor    ebx,ebx
  423ae7:	mov    QWORD PTR [r12+0x40],0x0
  423af0:	mov    rsi,QWORD PTR [r12+0x48]
  423af5:	cmp    QWORD PTR [rsi+0x20],0x29
  423afa:	jne    423b23 <__flatcc_fb_clear_parser@@Base+0x10f3>
  423afc:	mov    rdi,r12
  423aff:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423b04:	test   rbx,rbx
  423b07:	je     423b40 <__flatcc_fb_clear_parser@@Base+0x1110>
  423b09:	xor    ecx,ecx
  423b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  423b10:	mov    rax,rbx
  423b13:	mov    rbx,QWORD PTR [rbx]
  423b16:	mov    QWORD PTR [rax],rcx
  423b19:	mov    rcx,rax
  423b1c:	test   rbx,rbx
  423b1f:	jne    423b10 <__flatcc_fb_clear_parser@@Base+0x10e0>
  423b21:	jmp    423b42 <__flatcc_fb_clear_parser@@Base+0x1112>
  423b23:	lea    rdx,[rip+0x2407d]        # 447ba7 <fb_schema_table_deleted@@Base+0xc7f>
  423b2a:	mov    rdi,r12
  423b2d:	mov    rcx,r14
  423b30:	xor    r8d,r8d
  423b33:	xor    r9d,r9d
  423b36:	call   41c3a0 <__flatcc_error_report@@Base>
  423b3b:	test   rbx,rbx
  423b3e:	jne    423b09 <__flatcc_fb_clear_parser@@Base+0x10d9>
  423b40:	xor    eax,eax
  423b42:	add    rsp,0x8
  423b46:	pop    rbx
  423b47:	pop    r12
  423b49:	pop    r13
  423b4b:	pop    r14
  423b4d:	pop    r15
  423b4f:	pop    rbp
  423b50:	ret    
  423b51:	mov    rax,rbx
  423b54:	jmp    423b42 <__flatcc_fb_clear_parser@@Base+0x1112>
  423b56:	test   r13,r13
  423b59:	je     423be2 <__flatcc_fb_clear_parser@@Base+0x11b2>
  423b5f:	mov    rax,QWORD PTR [r13+0x0]
  423b63:	xor    r9d,r9d
  423b66:	lea    rdx,[rip+0xc1d6]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423b6d:	mov    rbp,rdx
  423b70:	test   rax,rax
  423b73:	je     423b7c <__flatcc_fb_clear_parser@@Base+0x114c>
  423b75:	mov    r9d,DWORD PTR [r13+0x8]
  423b79:	mov    rbp,rax
  423b7c:	mov    rax,r12
  423b7f:	cmp    QWORD PTR [rax+0x28],r13
  423b83:	jbe    423b9e <__flatcc_fb_clear_parser@@Base+0x116e>
  423b85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b8f:	nop
  423b90:	mov    rax,QWORD PTR [rax]
  423b93:	test   rax,rax
  423b96:	je     423bab <__flatcc_fb_clear_parser@@Base+0x117b>
  423b98:	cmp    QWORD PTR [rax+0x28],r13
  423b9c:	ja     423b90 <__flatcc_fb_clear_parser@@Base+0x1160>
  423b9e:	cmp    QWORD PTR [rax+0x30],r13
  423ba2:	jbe    423b90 <__flatcc_fb_clear_parser@@Base+0x1160>
  423ba4:	mov    rdx,QWORD PTR [rax+0x318]
  423bab:	mov    rcx,QWORD PTR [r13+0x10]
  423baf:	mov    r8,QWORD PTR [r13+0x18]
  423bb3:	lea    r10,[rip+0x23fc0]        # 447b7a <fb_schema_table_deleted@@Base+0xc52>
  423bba:	lea    rsi,[rip+0x2380f]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423bc1:	mov    rdi,r12
  423bc4:	mov    eax,0x0
  423bc9:	push   r10
  423bcb:	push   rbp
  423bcc:	call   41c280 <__flatcc_fb_print_error@@Base>
  423bd1:	add    rsp,0x10
  423bd5:	inc    DWORD PTR [r12+0xd0]
  423bdd:	jmp    423ae7 <__flatcc_fb_clear_parser@@Base+0x10b7>
  423be2:	lea    rsi,[rip+0x23839]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  423be9:	lea    rdx,[rip+0x23f8a]        # 447b7a <fb_schema_table_deleted@@Base+0xc52>
  423bf0:	mov    rdi,r12
  423bf3:	xor    eax,eax
  423bf5:	call   41c280 <__flatcc_fb_print_error@@Base>
  423bfa:	inc    DWORD PTR [r12+0xd0]
  423c02:	jmp    423ae7 <__flatcc_fb_clear_parser@@Base+0x10b7>
  423c07:	mov    rax,QWORD PTR [rip+0x2e3ea]        # 451ff8 <stderr@GLIBC_2.2.5>
  423c0e:	mov    rcx,QWORD PTR [rax]
  423c11:	lea    rdi,[rip+0xbc04]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  423c18:	mov    esi,0x22
  423c1d:	mov    edx,0x1
  423c22:	call   406230 <fwrite@plt>
  423c27:	mov    edi,0x1
  423c2c:	call   406220 <exit@plt>
  423c31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  423c40:	push   rbp
  423c41:	push   r15
  423c43:	push   r14
  423c45:	push   r13
  423c47:	push   r12
  423c49:	push   rbx
  423c4a:	push   rax
  423c4b:	mov    rbx,rcx
  423c4e:	mov    ebp,edx
  423c50:	mov    r15,rsi
  423c53:	mov    r14,rdi
  423c56:	mov    r13,QWORD PTR [rdi+0x48]
  423c5a:	mov    rax,QWORD PTR [r13+0x20]
  423c5e:	cmp    rax,0x2d
  423c62:	jne    423c77 <__flatcc_fb_clear_parser@@Base+0x1247>
  423c64:	mov    rdi,r14
  423c67:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423c6c:	mov    r12,QWORD PTR [r14+0x48]
  423c70:	mov    rax,QWORD PTR [r12+0x20]
  423c75:	jmp    423c7d <__flatcc_fb_clear_parser@@Base+0x124d>
  423c77:	mov    r12,r13
  423c7a:	xor    r13d,r13d
  423c7d:	lea    rcx,[rax-0x9]
  423c81:	cmp    rcx,0xa
  423c85:	ja     423cc5 <__flatcc_fb_clear_parser@@Base+0x1295>
  423c87:	lea    rax,[rip+0x23606]        # 447294 <fb_schema_table_deleted@@Base+0x36c>
  423c8e:	movsxd rcx,DWORD PTR [rax+rcx*4]
  423c92:	add    rcx,rax
  423c95:	jmp    rcx
  423c97:	mov    rdi,r14
  423c9a:	mov    rsi,r15
  423c9d:	call   423830 <__flatcc_fb_clear_parser@@Base+0xe00>
  423ca2:	mov    WORD PTR [r15+0x10],0xd
  423ca9:	test   r13,r13
  423cac:	je     423f52 <__flatcc_fb_clear_parser@@Base+0x1522>
  423cb2:	mov    WORD PTR [r15+0x10],0x1
  423cb9:	lea    rdx,[rip+0x23f28]        # 447be8 <fb_schema_table_deleted@@Base+0xcc0>
  423cc0:	jmp    423f31 <__flatcc_fb_clear_parser@@Base+0x1501>
  423cc5:	cmp    rax,0xfffffffffffffc24
  423ccb:	je     423f05 <__flatcc_fb_clear_parser@@Base+0x14d5>
  423cd1:	cmp    rax,0xfffffffffffffc26
  423cd7:	jne    423efa <__flatcc_fb_clear_parser@@Base+0x14ca>
  423cdd:	mov    BYTE PTR [r15],0x0
  423ce1:	jmp    423f09 <__flatcc_fb_clear_parser@@Base+0x14d9>
  423ce6:	mov    WORD PTR [r15+0x10],0x5
  423ced:	mov    rax,QWORD PTR [r12+0x8]
  423cf2:	test   eax,eax
  423cf4:	je     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  423cfa:	mov    rcx,QWORD PTR [r12]
  423cfe:	movsxd rbx,eax
  423d01:	mov    al,BYTE PTR [rcx]
  423d03:	xor    edx,edx
  423d05:	cmp    al,0x2d
  423d07:	sete   dl
  423d0a:	cmp    rbx,rdx
  423d0d:	je     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  423d13:	lea    r9,[rcx+rbx*1]
  423d17:	lea    r8,[rcx+rdx*1]
  423d1b:	xor    esi,esi
  423d1d:	nop    DWORD PTR [rax]
  423d20:	movsx  rdi,BYTE PTR [rcx+rdx*1]
  423d25:	lea    ebp,[rdi-0x30]
  423d28:	cmp    bpl,0x9
  423d2c:	ja     424013 <__flatcc_fb_clear_parser@@Base+0x15e3>
  423d32:	lea    rbp,[rsi+rsi*4]
  423d36:	lea    rdi,[rdi+rbp*2]
  423d3a:	add    rdi,0xffffffffffffffd0
  423d3e:	cmp    rsi,rdi
  423d41:	ja     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  423d47:	inc    rdx
  423d4a:	mov    rsi,rdi
  423d4d:	cmp    rbx,rdx
  423d50:	jne    423d20 <__flatcc_fb_clear_parser@@Base+0x12f0>
  423d52:	xor    ebx,ebx
  423d54:	cmp    r9,rcx
  423d57:	jne    424023 <__flatcc_fb_clear_parser@@Base+0x15f3>
  423d5d:	jmp    424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  423d62:	mov    WORD PTR [r15+0x10],0x3
  423d69:	mov    rdi,QWORD PTR [r12]
  423d6d:	mov    rsi,rsp
  423d70:	call   406090 <strtod@plt>
  423d75:	vmovsd QWORD PTR [r15],xmm0
  423d7a:	mov    rbp,QWORD PTR [r12]
  423d7e:	mov    r9,QWORD PTR [r12+0x8]
  423d83:	lea    rax,[r9+rbp*1]
  423d87:	cmp    QWORD PTR [rsp],rax
  423d8b:	je     423f61 <__flatcc_fb_clear_parser@@Base+0x1531>
  423d91:	mov    WORD PTR [r15+0x10],0x1
  423d98:	xor    eax,eax
  423d9a:	test   rbp,rbp
  423d9d:	lea    rdx,[rip+0xbf9f]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423da4:	cmove  rbp,rdx
  423da8:	cmovne eax,r9d
  423dac:	mov    rcx,r14
  423daf:	cmp    QWORD PTR [rcx+0x28],r12
  423db3:	jbe    423dce <__flatcc_fb_clear_parser@@Base+0x139e>
  423db5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423dbf:	nop
  423dc0:	mov    rcx,QWORD PTR [rcx]
  423dc3:	test   rcx,rcx
  423dc6:	je     423ddb <__flatcc_fb_clear_parser@@Base+0x13ab>
  423dc8:	cmp    QWORD PTR [rcx+0x28],r12
  423dcc:	ja     423dc0 <__flatcc_fb_clear_parser@@Base+0x1390>
  423dce:	cmp    QWORD PTR [rcx+0x30],r12
  423dd2:	jbe    423dc0 <__flatcc_fb_clear_parser@@Base+0x1390>
  423dd4:	mov    rdx,QWORD PTR [rcx+0x318]
  423ddb:	mov    rcx,QWORD PTR [r12+0x10]
  423de0:	mov    r8,QWORD PTR [r12+0x18]
  423de5:	lea    rbx,[rip+0x23e6f]        # 447c5b <fb_schema_table_deleted@@Base+0xd33>
  423dec:	lea    rsi,[rip+0x235dd]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423df3:	mov    rdi,r14
  423df6:	mov    r9d,eax
  423df9:	jmp    423fc6 <__flatcc_fb_clear_parser@@Base+0x1596>
  423dfe:	mov    WORD PTR [r15+0x10],0x5
  423e05:	mov    rax,QWORD PTR [r12+0x8]
  423e0a:	test   eax,eax
  423e0c:	je     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423e12:	mov    rdx,QWORD PTR [r12]
  423e16:	movsxd rcx,eax
  423e19:	add    rcx,rdx
  423e1c:	mov    r9b,BYTE PTR [rdx]
  423e1f:	xor    esi,esi
  423e21:	cmp    r9b,0x2d
  423e25:	sete   sil
  423e29:	add    rsi,rdx
  423e2c:	mov    rax,rcx
  423e2f:	sub    rax,rsi
  423e32:	cmp    rax,0x2
  423e36:	jl     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423e3c:	cmp    BYTE PTR [rsi],0x30
  423e3f:	jne    4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423e45:	mov    al,BYTE PTR [rsi+0x1]
  423e48:	or     al,0x20
  423e4a:	cmp    al,0x78
  423e4c:	jne    4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423e52:	lea    rax,[rsi+0x2]
  423e56:	mov    rdx,rcx
  423e59:	sub    rdx,rax
  423e5c:	lea    r8,[rsi+0x12]
  423e60:	cmp    rdx,0x10
  423e64:	cmovle r8,rcx
  423e68:	cmp    rax,r8
  423e6b:	je     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423e71:	mov    r10,r8
  423e74:	sub    r10,rsi
  423e77:	mov    ebp,0x2
  423e7c:	xor    edx,edx
  423e7e:	jmp    423e9c <__flatcc_fb_clear_parser@@Base+0x146c>
  423e80:	shl    rdx,0x4
  423e84:	mov    rdi,rdx
  423e87:	add    rdi,rax
  423e8a:	movzx  edx,bl
  423e8d:	add    rdx,rdi
  423e90:	inc    rbp
  423e93:	cmp    r10,rbp
  423e96:	je     424064 <__flatcc_fb_clear_parser@@Base+0x1634>
  423e9c:	movzx  ebx,BYTE PTR [rsi+rbp*1]
  423ea0:	lea    edi,[rbx-0x30]
  423ea3:	mov    rax,0xffffffffffffffd0
  423eaa:	cmp    dil,0xa
  423eae:	jb     423e80 <__flatcc_fb_clear_parser@@Base+0x1450>
  423eb0:	or     bl,0x20
  423eb3:	lea    edi,[rbx-0x61]
  423eb6:	mov    rax,0xffffffffffffffa9
  423ebd:	cmp    dil,0x5
  423ec1:	jbe    423e80 <__flatcc_fb_clear_parser@@Base+0x1450>
  423ec3:	add    rsi,rbp
  423ec6:	xor    edi,edi
  423ec8:	mov    r8,rsi
  423ecb:	cmp    rbp,0x2
  423ecf:	jne    42406d <__flatcc_fb_clear_parser@@Base+0x163d>
  423ed5:	jmp    4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423eda:	mov    rdi,r14
  423edd:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  423ee2:	mov    rdi,r14
  423ee5:	mov    rsi,r15
  423ee8:	call   422b70 <__flatcc_fb_clear_parser@@Base+0x140>
  423eed:	test   bpl,0x1
  423ef1:	jne    423f1e <__flatcc_fb_clear_parser@@Base+0x14ee>
  423ef3:	mov    WORD PTR [r15+0x10],0x1
  423efa:	mov    rdi,r14
  423efd:	mov    rsi,r12
  423f00:	mov    rdx,rbx
  423f03:	jmp    423f37 <__flatcc_fb_clear_parser@@Base+0x1507>
  423f05:	mov    BYTE PTR [r15],0x1
  423f09:	mov    WORD PTR [r15+0x10],0x6
  423f10:	test   r13,r13
  423f13:	jne    423fe6 <__flatcc_fb_clear_parser@@Base+0x15b6>
  423f19:	jmp    4240fc <__flatcc_fb_clear_parser@@Base+0x16cc>
  423f1e:	test   r13,r13
  423f21:	je     423f52 <__flatcc_fb_clear_parser@@Base+0x1522>
  423f23:	mov    WORD PTR [r15+0x10],0x1
  423f2a:	lea    rdx,[rip+0x23c95]        # 447bc6 <fb_schema_table_deleted@@Base+0xc9e>
  423f31:	mov    rdi,r14
  423f34:	mov    rsi,r12
  423f37:	xor    ecx,ecx
  423f39:	xor    r8d,r8d
  423f3c:	xor    r9d,r9d
  423f3f:	add    rsp,0x8
  423f43:	pop    rbx
  423f44:	pop    r12
  423f46:	pop    r13
  423f48:	pop    r14
  423f4a:	pop    r15
  423f4c:	pop    rbp
  423f4d:	jmp    41c3a0 <__flatcc_error_report@@Base>
  423f52:	add    rsp,0x8
  423f56:	pop    rbx
  423f57:	pop    r12
  423f59:	pop    r13
  423f5b:	pop    r14
  423f5d:	pop    r15
  423f5f:	pop    rbp
  423f60:	ret    
  423f61:	cmp    BYTE PTR [rbp+0x0],0x2e
  423f65:	jne    423ff7 <__flatcc_fb_clear_parser@@Base+0x15c7>
  423f6b:	mov    WORD PTR [r15+0x10],0x1
  423f72:	lea    rdx,[rip+0xbdca]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  423f79:	mov    rax,r14
  423f7c:	cmp    QWORD PTR [rax+0x28],r12
  423f80:	jbe    423f9e <__flatcc_fb_clear_parser@@Base+0x156e>
  423f82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f8c:	nop    DWORD PTR [rax+0x0]
  423f90:	mov    rax,QWORD PTR [rax]
  423f93:	test   rax,rax
  423f96:	je     423fab <__flatcc_fb_clear_parser@@Base+0x157b>
  423f98:	cmp    QWORD PTR [rax+0x28],r12
  423f9c:	ja     423f90 <__flatcc_fb_clear_parser@@Base+0x1560>
  423f9e:	cmp    QWORD PTR [rax+0x30],r12
  423fa2:	jbe    423f90 <__flatcc_fb_clear_parser@@Base+0x1560>
  423fa4:	mov    rdx,QWORD PTR [rax+0x318]
  423fab:	mov    rcx,QWORD PTR [r12+0x10]
  423fb0:	mov    r8,QWORD PTR [r12+0x18]
  423fb5:	lea    rbx,[rip+0x23cb4]        # 447c70 <fb_schema_table_deleted@@Base+0xd48>
  423fbc:	lea    rsi,[rip+0x2340d]        # 4473d0 <fb_schema_table_deleted@@Base+0x4a8>
  423fc3:	mov    rdi,r14
  423fc6:	mov    eax,0x0
  423fcb:	push   rbx
  423fcc:	push   rbp
  423fcd:	call   41c280 <__flatcc_fb_print_error@@Base>
  423fd2:	add    rsp,0x10
  423fd6:	inc    DWORD PTR [r14+0xd0]
  423fdd:	test   r13,r13
  423fe0:	je     4240fc <__flatcc_fb_clear_parser@@Base+0x16cc>
  423fe6:	cmp    WORD PTR [r15+0x10],0x6
  423fec:	je     4240db <__flatcc_fb_clear_parser@@Base+0x16ab>
  423ff2:	jmp    4240fc <__flatcc_fb_clear_parser@@Base+0x16cc>
  423ff7:	test   r13,r13
  423ffa:	je     423fdd <__flatcc_fb_clear_parser@@Base+0x15ad>
  423ffc:	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x233bc]        # 4473c0 <fb_schema_table_deleted@@Base+0x498>
  424004:	vmovlps QWORD PTR [r15],xmm0
  424009:	test   r13,r13
  42400c:	jne    423fe6 <__flatcc_fb_clear_parser@@Base+0x15b6>
  42400e:	jmp    4240fc <__flatcc_fb_clear_parser@@Base+0x16cc>
  424013:	add    rdx,rcx
  424016:	mov    bl,0x1
  424018:	mov    rdi,rsi
  42401b:	mov    r9,rdx
  42401e:	cmp    r9,rcx
  424021:	je     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  424023:	cmp    r9,r8
  424026:	je     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  424028:	test   bl,bl
  42402a:	je     42404d <__flatcc_fb_clear_parser@@Base+0x161d>
  42402c:	movsx  ecx,BYTE PTR [r9]
  424030:	lea    edx,[rcx-0x45]
  424033:	cmp    edx,0x2b
  424036:	ja     424048 <__flatcc_fb_clear_parser@@Base+0x1618>
  424038:	movabs rsi,0x80100000801
  424042:	bt     rsi,rdx
  424046:	jb     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  424048:	cmp    ecx,0x2e
  42404b:	je     424054 <__flatcc_fb_clear_parser@@Base+0x1624>
  42404d:	mov    QWORD PTR [r15],rdi
  424050:	cmp    al,0x2d
  424052:	jne    4240c4 <__flatcc_fb_clear_parser@@Base+0x1694>
  424054:	mov    WORD PTR [r15+0x10],0x1
  42405b:	lea    rdx,[rip+0x23be2]        # 447c44 <fb_schema_table_deleted@@Base+0xd1c>
  424062:	jmp    4240b1 <__flatcc_fb_clear_parser@@Base+0x1681>
  424064:	mov    dil,0x1
  424067:	cmp    rbp,0x2
  42406b:	je     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  42406d:	cmp    r8,rcx
  424070:	je     42409a <__flatcc_fb_clear_parser@@Base+0x166a>
  424072:	mov    cl,BYTE PTR [r8]
  424075:	test   dil,dil
  424078:	je     42408b <__flatcc_fb_clear_parser@@Base+0x165b>
  42407a:	lea    eax,[rcx-0x30]
  42407d:	cmp    al,0xa
  42407f:	jb     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  424081:	or     cl,0x20
  424084:	lea    eax,[rcx-0x61]
  424087:	cmp    al,0x6
  424089:	jb     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  42408b:	cmp    cl,0x2e
  42408e:	je     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  424090:	cmp    cl,0x50
  424093:	je     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  424095:	cmp    cl,0x70
  424098:	je     4240a3 <__flatcc_fb_clear_parser@@Base+0x1673>
  42409a:	mov    QWORD PTR [r15],rdx
  42409d:	cmp    r9b,0x2d
  4240a1:	jne    4240c4 <__flatcc_fb_clear_parser@@Base+0x1694>
  4240a3:	mov    WORD PTR [r15+0x10],0x1
  4240aa:	lea    rdx,[rip+0x23b78]        # 447c29 <fb_schema_table_deleted@@Base+0xd01>
  4240b1:	mov    rdi,r14
  4240b4:	mov    rsi,r12
  4240b7:	xor    ecx,ecx
  4240b9:	xor    r8d,r8d
  4240bc:	xor    r9d,r9d
  4240bf:	call   41c3a0 <__flatcc_error_report@@Base>
  4240c4:	test   r13,r13
  4240c7:	je     4240fc <__flatcc_fb_clear_parser@@Base+0x16cc>
  4240c9:	neg    QWORD PTR [r15]
  4240cc:	mov    WORD PTR [r15+0x10],0x4
  4240d3:	cmp    WORD PTR [r15+0x10],0x6
  4240d9:	jne    4240fc <__flatcc_fb_clear_parser@@Base+0x16cc>
  4240db:	mov    WORD PTR [r15+0x10],0x1
  4240e2:	lea    rdx,[rip+0x23b1d]        # 447c06 <fb_schema_table_deleted@@Base+0xcde>
  4240e9:	mov    rdi,r14
  4240ec:	mov    rsi,r12
  4240ef:	xor    ecx,ecx
  4240f1:	xor    r8d,r8d
  4240f4:	xor    r9d,r9d
  4240f7:	call   41c3a0 <__flatcc_error_report@@Base>
  4240fc:	mov    rdi,r14
  4240ff:	add    rsp,0x8
  424103:	pop    rbx
  424104:	pop    r12
  424106:	pop    r13
  424108:	pop    r14
  42410a:	pop    r15
  42410c:	pop    rbp
  42410d:	jmp    422930 <__flatcc_fb_parse@@Base+0x5f90>
  424112:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42411c:	nop    DWORD PTR [rax+0x0]
  424120:	push   rbp
  424121:	push   r15
  424123:	push   r14
  424125:	push   r12
  424127:	push   rbx
  424128:	mov    r15,rsi
  42412b:	mov    r12,rdi
  42412e:	mov    r14,QWORD PTR [rdi+0x48]
  424132:	mov    WORD PTR [rsi+0x10],0x1
  424138:	xor    ebp,ebp
  42413a:	cmp    QWORD PTR [r14+0x20],0x5b
  42413f:	jne    42418a <__flatcc_fb_clear_parser@@Base+0x175a>
  424141:	xor    ebp,ebp
  424143:	mov    rbx,r14
  424146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424150:	mov    rdi,r12
  424153:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  424158:	test   rbx,rbx
  42415b:	je     42416b <__flatcc_fb_clear_parser@@Base+0x173b>
  42415d:	inc    ebp
  42415f:	mov    rbx,QWORD PTR [r12+0x48]
  424164:	cmp    QWORD PTR [rbx+0x20],0x5b
  424169:	je     424150 <__flatcc_fb_clear_parser@@Base+0x1720>
  42416b:	cmp    ebp,0x2
  42416e:	jb     42418a <__flatcc_fb_clear_parser@@Base+0x175a>
  424170:	lea    rdx,[rip+0x23c03]        # 447d7a <fb_schema_table_deleted@@Base+0xe52>
  424177:	mov    rdi,r12
  42417a:	mov    rsi,r14
  42417d:	xor    ecx,ecx
  42417f:	xor    r8d,r8d
  424182:	xor    r9d,r9d
  424185:	call   41c3a0 <__flatcc_error_report@@Base>
  42418a:	mov    rcx,QWORD PTR [r12+0x48]
  42418f:	mov    rax,QWORD PTR [rcx+0x20]
  424193:	lea    rdx,[rax+0x3e7]
  42419a:	cmp    rdx,0x1b
  42419e:	ja     4242e7 <__flatcc_fb_clear_parser@@Base+0x18b7>
  4241a4:	mov    esi,0x97ed7fb
  4241a9:	bt     rsi,rdx
  4241ad:	jae    4242d2 <__flatcc_fb_clear_parser@@Base+0x18a2>
  4241b3:	mov    QWORD PTR [r15],rcx
  4241b6:	cmp    ebp,0x1
  4241b9:	mov    ax,0x7
  4241bd:	adc    ax,0x0
  4241c1:	mov    WORD PTR [r15+0x10],ax
  4241c6:	mov    rdi,r12
  4241c9:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4241ce:	neg    ebp
  4241d0:	mov    rbx,QWORD PTR [r12+0x48]
  4241d5:	cmp    QWORD PTR [rbx+0x20],0x5d
  4241da:	jne    4241f2 <__flatcc_fb_clear_parser@@Base+0x17c2>
  4241dc:	mov    rdi,r12
  4241df:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4241e4:	test   rbx,rbx
  4241e7:	je     4241f2 <__flatcc_fb_clear_parser@@Base+0x17c2>
  4241e9:	inc    ebp
  4241eb:	cmp    ebp,0x1
  4241ee:	jne    4241d0 <__flatcc_fb_clear_parser@@Base+0x17a0>
  4241f0:	jmp    4241fa <__flatcc_fb_clear_parser@@Base+0x17ca>
  4241f2:	test   ebp,ebp
  4241f4:	je     42427c <__flatcc_fb_clear_parser@@Base+0x184c>
  4241fa:	test   r14,r14
  4241fd:	je     42425c <__flatcc_fb_clear_parser@@Base+0x182c>
  4241ff:	lea    rcx,[rip+0xbb3d]        # 42fd43 <_IO_stdin_used@@Base+0x1d43>
  424206:	mov    rax,r12
  424209:	cmp    QWORD PTR [rax+0x28],r14
  42420d:	jbe    42421e <__flatcc_fb_clear_parser@@Base+0x17ee>
  42420f:	nop
  424210:	mov    rax,QWORD PTR [rax]
  424213:	test   rax,rax
  424216:	je     42422b <__flatcc_fb_clear_parser@@Base+0x17fb>
  424218:	cmp    QWORD PTR [rax+0x28],r14
  42421c:	ja     424210 <__flatcc_fb_clear_parser@@Base+0x17e0>
  42421e:	cmp    QWORD PTR [rax+0x30],r14
  424222:	jbe    424210 <__flatcc_fb_clear_parser@@Base+0x17e0>
  424224:	mov    rcx,QWORD PTR [rax+0x318]
  42422b:	mov    r8,QWORD PTR [r14+0x10]
  42422f:	mov    r9,QWORD PTR [r14+0x18]
  424233:	mov    ebp,DWORD PTR [r14+0x8]
  424237:	lea    rsi,[rip+0x231ef]        # 44742d <fb_schema_table_deleted@@Base+0x505>
  42423e:	lea    rdx,[rip+0x23b90]        # 447dd5 <fb_schema_table_deleted@@Base+0xead>
  424245:	mov    rdi,r12
  424248:	mov    eax,0x0
  42424d:	push   QWORD PTR [r14]
  424250:	push   rbp
  424251:	call   41c280 <__flatcc_fb_print_error@@Base>
  424256:	add    rsp,0x10
  42425a:	jmp    424274 <__flatcc_fb_clear_parser@@Base+0x1844>
  42425c:	lea    rsi,[rip+0x231bf]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  424263:	lea    rdx,[rip+0x23b6b]        # 447dd5 <fb_schema_table_deleted@@Base+0xead>
  42426a:	mov    rdi,r12
  42426d:	xor    eax,eax
  42426f:	call   41c280 <__flatcc_fb_print_error@@Base>
  424274:	inc    DWORD PTR [r12+0xd0]
  42427c:	mov    r15,QWORD PTR [r12+0x48]
  424281:	cmp    QWORD PTR [r15+0x20],0x5d
  424286:	jne    4242c9 <__flatcc_fb_clear_parser@@Base+0x1899>
  424288:	mov    rdi,r12
  42428b:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  424290:	test   r15,r15
  424293:	je     4242c9 <__flatcc_fb_clear_parser@@Base+0x1899>
  424295:	lea    rdx,[rip+0x23b5a]        # 447df6 <fb_schema_table_deleted@@Base+0xece>
  42429c:	mov    rdi,r12
  42429f:	mov    rsi,r15
  4242a2:	mov    rcx,r14
  4242a5:	xor    r8d,r8d
  4242a8:	xor    r9d,r9d
  4242ab:	call   41c3a0 <__flatcc_error_report@@Base>
  4242b0:	mov    rbx,QWORD PTR [r12+0x48]
  4242b5:	cmp    QWORD PTR [rbx+0x20],0x5d
  4242ba:	jne    4242c9 <__flatcc_fb_clear_parser@@Base+0x1899>
  4242bc:	mov    rdi,r12
  4242bf:	call   422930 <__flatcc_fb_parse@@Base+0x5f90>
  4242c4:	test   rbx,rbx
  4242c7:	jne    4242b0 <__flatcc_fb_clear_parser@@Base+0x1880>
  4242c9:	pop    rbx
  4242ca:	pop    r12
  4242cc:	pop    r14
  4242ce:	pop    r15
  4242d0:	pop    rbp
  4242d1:	ret    
  4242d2:	cmp    rdx,0x19
  4242d6:	jne    4242e7 <__flatcc_fb_clear_parser@@Base+0x18b7>
  4242d8:	mov    QWORD PTR [r15],rcx
  4242db:	cmp    ebp,0x1
  4242de:	mov    ax,0x9
  4242e2:	jmp    4241bd <__flatcc_fb_clear_parser@@Base+0x178d>
  4242e7:	cmp    rax,0x9
  4242eb:	je     424303 <__flatcc_fb_clear_parser@@Base+0x18d3>
  4242ed:	lea    rsi,[rip+0x2312e]        # 447422 <fb_schema_table_deleted@@Base+0x4fa>
  4242f4:	cmp    rax,0x5d
  4242f8:	jne    424323 <__flatcc_fb_clear_parser@@Base+0x18f3>
  4242fa:	lea    rdx,[rip+0x23aa1]        # 447da2 <fb_schema_table_deleted@@Base+0xe7a>
  424301:	jmp    42432a <__flatcc_fb_clear_parser@@Base+0x18fa>
  424303:	mov    rdi,r12
  424306:	mov    rsi,r15
  424309:	call   423830 <__flatcc_fb_clear_parser@@Base+0xe00>
  42430e:	cmp    ebp,0x1
  424311:	mov    ax,0xb
  424315:	adc    ax,0x0
  424319:	mov    WORD PTR [r15+0x10],ax
  42431e:	jmp    4241ce <__flatcc_fb_clear_parser@@Base+0x179e>
  424323:	lea    rdx,[rip+0x23a94]        # 447dbe <fb_schema_table_deleted@@Base+0xe96>
  42432a:	mov    rdi,r12
  42432d:	xor    eax,eax
  42432f:	call   41c280 <__flatcc_fb_print_error@@Base>
  424334:	inc    DWORD PTR [r12+0xd0]
  42433c:	jmp    4241ce <__flatcc_fb_clear_parser@@Base+0x179e>
  424341:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42434b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424350 <__flatcc_fb_build_schema@@Base>:
  424350:	push   rbp
  424351:	mov    rbp,rsp
  424354:	push   r15
  424356:	push   r14
  424358:	push   r13
  42435a:	push   r12
  42435c:	push   rbx
  42435d:	and    rsp,0xffffffffffffffe0
  424361:	sub    rsp,0x140
  424368:	mov    r12,rdi
  42436b:	lea    r14,[rdi+0x1f8]
  424372:	add    rdi,0x320
  424379:	mov    QWORD PTR [rsp+0x58],rdi
  42437e:	mov    rsi,r14
  424381:	call   419b30 <ptr_set_find_item@@Base>
  424386:	test   rax,rax
  424389:	je     426015 <__flatcc_fb_build_schema@@Base+0x1cc5>
  42438f:	mov    r15,QWORD PTR [r12+0x238]
  424397:	test   r15,r15
  42439a:	je     424606 <__flatcc_fb_build_schema@@Base+0x2b6>
  4243a0:	mov    r13d,0x811c9dc5
  4243a6:	cmp    WORD PTR [r15+0x10],0x4
  4243ac:	jbe    4243c4 <__flatcc_fb_build_schema@@Base+0x74>
  4243ae:	xchg   ax,ax
  4243b0:	mov    r15,QWORD PTR [r15]
  4243b3:	test   r15,r15
  4243b6:	je     424606 <__flatcc_fb_build_schema@@Base+0x2b6>
  4243bc:	cmp    WORD PTR [r15+0x10],0x4
  4243c2:	ja     4243b0 <__flatcc_fb_build_schema@@Base+0x60>
  4243c4:	mov    rdi,QWORD PTR [r15+0x18]
  4243c8:	mov    eax,0x811c9dc5
  4243cd:	test   rdi,rdi
  4243d0:	je     4244e0 <__flatcc_fb_build_schema@@Base+0x190>
  4243d6:	mov    r8,QWORD PTR [rdi]
  4243d9:	test   r8,r8
  4243dc:	je     4244e0 <__flatcc_fb_build_schema@@Base+0x190>
  4243e2:	mov    eax,0x811c9dc5
  4243e7:	jmp    424405 <__flatcc_fb_build_schema@@Base+0xb5>
  4243e9:	nop    DWORD PTR [rax+0x0]
  4243f0:	xor    eax,0x2e
  4243f3:	imul   eax,eax,0x1000193
  4243f9:	mov    r8,QWORD PTR [r8]
  4243fc:	test   r8,r8
  4243ff:	je     4244e0 <__flatcc_fb_build_schema@@Base+0x190>
  424405:	mov    rdx,QWORD PTR [r8+0x8]
  424409:	mov    r10,QWORD PTR [rdx+0x8]
  42440d:	test   r10,r10
  424410:	je     4243f0 <__flatcc_fb_build_schema@@Base+0xa0>
  424412:	mov    rsi,QWORD PTR [rdx]
  424415:	lea    r9,[r10-0x1]
  424419:	mov    rdx,r10
  42441c:	and    rdx,0x7
  424420:	je     42444a <__flatcc_fb_build_schema@@Base+0xfa>
  424422:	xor    ebx,ebx
  424424:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42442e:	xchg   ax,ax
  424430:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  424434:	xor    ecx,eax
  424436:	imul   eax,ecx,0x1000193
  42443c:	inc    rbx
  42443f:	cmp    rdx,rbx
  424442:	jne    424430 <__flatcc_fb_build_schema@@Base+0xe0>
  424444:	sub    r10,rbx
  424447:	add    rsi,rbx
  42444a:	cmp    r9,0x7
  42444e:	jb     4243f0 <__flatcc_fb_build_schema@@Base+0xa0>
  424450:	xor    ebx,ebx
  424452:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42445c:	nop    DWORD PTR [rax+0x0]
  424460:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  424464:	xor    ecx,eax
  424466:	imul   eax,ecx,0x1000193
  42446c:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x1]
  424471:	xor    ecx,eax
  424473:	imul   eax,ecx,0x1000193
  424479:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x2]
  42447e:	xor    ecx,eax
  424480:	imul   eax,ecx,0x1000193
  424486:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x3]
  42448b:	xor    ecx,eax
  42448d:	imul   eax,ecx,0x1000193
  424493:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x4]
  424498:	xor    ecx,eax
  42449a:	imul   eax,ecx,0x1000193
  4244a0:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x5]
  4244a5:	xor    ecx,eax
  4244a7:	imul   eax,ecx,0x1000193
  4244ad:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x6]
  4244b2:	xor    ecx,eax
  4244b4:	imul   eax,ecx,0x1000193
  4244ba:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x7]
  4244bf:	xor    ecx,eax
  4244c1:	imul   eax,ecx,0x1000193
  4244c7:	add    rbx,0x8
  4244cb:	cmp    r10,rbx
  4244ce:	jne    424460 <__flatcc_fb_build_schema@@Base+0x110>
  4244d0:	jmp    4243f0 <__flatcc_fb_build_schema@@Base+0xa0>
  4244d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4244df:	nop
  4244e0:	mov    rcx,QWORD PTR [r15+0x8]
  4244e4:	mov    r9,QWORD PTR [rcx+0x8]
  4244e8:	test   r9,r9
  4244eb:	je     4245b0 <__flatcc_fb_build_schema@@Base+0x260>
  4244f1:	mov    rdx,QWORD PTR [rcx]
  4244f4:	lea    r8,[r9-0x1]
  4244f8:	mov    rcx,r9
  4244fb:	and    rcx,0x7
  4244ff:	je     42452a <__flatcc_fb_build_schema@@Base+0x1da>
  424501:	xor    esi,esi
  424503:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42450d:	nop    DWORD PTR [rax]
  424510:	movzx  ebx,BYTE PTR [rdx+rsi*1]
  424514:	xor    ebx,eax
  424516:	imul   eax,ebx,0x1000193
  42451c:	inc    rsi
  42451f:	cmp    rcx,rsi
  424522:	jne    424510 <__flatcc_fb_build_schema@@Base+0x1c0>
  424524:	sub    r9,rsi
  424527:	add    rdx,rsi
  42452a:	cmp    r8,0x7
  42452e:	jb     4245b0 <__flatcc_fb_build_schema@@Base+0x260>
  424534:	xor    esi,esi
  424536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424540:	movzx  ecx,BYTE PTR [rdx+rsi*1]
  424544:	xor    ecx,eax
  424546:	imul   eax,ecx,0x1000193
  42454c:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x1]
  424551:	xor    ecx,eax
  424553:	imul   eax,ecx,0x1000193
  424559:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x2]
  42455e:	xor    ecx,eax
  424560:	imul   eax,ecx,0x1000193
  424566:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x3]
  42456b:	xor    ecx,eax
  42456d:	imul   eax,ecx,0x1000193
  424573:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x4]
  424578:	xor    ecx,eax
  42457a:	imul   eax,ecx,0x1000193
  424580:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x5]
  424585:	xor    ecx,eax
  424587:	imul   eax,ecx,0x1000193
  42458d:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x6]
  424592:	xor    ecx,eax
  424594:	imul   eax,ecx,0x1000193
  42459a:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x7]
  42459f:	xor    ecx,eax
  4245a1:	imul   eax,ecx,0x1000193
  4245a7:	add    rsi,0x8
  4245ab:	cmp    r9,rsi
  4245ae:	jne    424540 <__flatcc_fb_build_schema@@Base+0x1f0>
  4245b0:	test   eax,eax
  4245b2:	cmove  eax,r13d
  4245b6:	mov    DWORD PTR [r15+0xa0],eax
  4245bd:	mov    QWORD PTR [r15+0x20],r14
  4245c1:	test   rdi,rdi
  4245c4:	je     4243b0 <__flatcc_fb_build_schema@@Base+0x60>
  4245ca:	add    rdi,0x8
  4245ce:	mov    rsi,r15
  4245d1:	mov    edx,0x1
  4245d6:	call   41a150 <fb_symbol_table_insert_item@@Base>
  4245db:	test   rax,rax
  4245de:	je     4243b0 <__flatcc_fb_build_schema@@Base+0x60>
  4245e4:	mov    rsi,QWORD PTR [r15+0x8]
  4245e8:	mov    rcx,QWORD PTR [rax+0x8]
  4245ec:	mov    rdi,r12
  4245ef:	lea    rdx,[rip+0x23c5f]        # 448255 <fb_schema_table_deleted@@Base+0x132d>
  4245f6:	xor    r8d,r8d
  4245f9:	xor    r9d,r9d
  4245fc:	call   41c3a0 <__flatcc_error_report@@Base>
  424601:	jmp    4243b0 <__flatcc_fb_build_schema@@Base+0x60>
  424606:	mov    rbx,QWORD PTR [r12+0x200]
  42460e:	test   rbx,rbx
  424611:	je     42465f <__flatcc_fb_build_schema@@Base+0x30f>
  424613:	lea    r14,[rip+0x23c57]        # 448271 <fb_schema_table_deleted@@Base+0x1349>
  42461a:	jmp    424628 <__flatcc_fb_build_schema@@Base+0x2d8>
  42461c:	nop    DWORD PTR [rax+0x0]
  424620:	mov    rbx,QWORD PTR [rbx]
  424623:	test   rbx,rbx
  424626:	je     42465f <__flatcc_fb_build_schema@@Base+0x30f>
  424628:	mov    rdi,QWORD PTR [r12+0x260]
  424630:	add    rdi,0x20
  424634:	mov    rsi,rbx
  424637:	mov    edx,0x1
  42463c:	call   42ce10 <fb_name_table_insert_item@@Base>
  424641:	test   rax,rax
  424644:	je     424620 <__flatcc_fb_build_schema@@Base+0x2d0>
  424646:	mov    r8,QWORD PTR [rbx+0x8]
  42464a:	mov    r9d,DWORD PTR [rbx+0x10]
  42464e:	mov    rdi,r12
  424651:	xor    esi,esi
  424653:	mov    rdx,r14
  424656:	xor    ecx,ecx
  424658:	call   41c3a0 <__flatcc_error_report@@Base>
  42465d:	jmp    424620 <__flatcc_fb_build_schema@@Base+0x2d0>
  42465f:	lea    r14,[rip+0x2d73a]        # 451da0 <fb_value_set_deleted@@Base+0x6b40>
  424666:	xor    r15d,r15d
  424669:	jmp    424681 <__flatcc_fb_build_schema@@Base+0x331>
  42466b:	nop    DWORD PTR [rax+rax*1+0x0]
  424670:	inc    r15
  424673:	add    r14,0x8
  424677:	cmp    r15,0xc
  42467b:	je     42471f <__flatcc_fb_build_schema@@Base+0x3cf>
  424681:	mov    rbx,QWORD PTR [r12+0x60]
  424686:	lea    rax,[rbx+0x30]
  42468a:	cmp    rax,QWORD PTR [r12+0x50]
  42468f:	jbe    4246cf <__flatcc_fb_build_schema@@Base+0x37f>
  424691:	mov    edi,0x10000
  424696:	mov    esi,0x1
  42469b:	call   406150 <calloc@plt>
  4246a0:	test   rax,rax
  4246a3:	je     425feb <__flatcc_fb_build_schema@@Base+0x1c9b>
  4246a9:	mov    rcx,QWORD PTR [r12+0x58]
  4246ae:	mov    QWORD PTR [rax],rcx
  4246b1:	mov    QWORD PTR [r12+0x58],rax
  4246b6:	lea    rbx,[rax+0x10]
  4246ba:	mov    QWORD PTR [r12+0x60],rbx
  4246bf:	lea    rcx,[rax+0x10000]
  4246c6:	mov    QWORD PTR [r12+0x50],rcx
  4246cb:	add    rax,0x40
  4246cf:	mov    QWORD PTR [r12+0x60],rax
  4246d4:	mov    DWORD PTR [rbx+0x20],r15d
  4246d8:	mov    rdi,QWORD PTR [r14]
  4246db:	mov    QWORD PTR [rbx+0x8],rdi
  4246df:	call   4060d0 <strlen@plt>
  4246e4:	mov    DWORD PTR [rbx+0x10],eax
  4246e7:	mov    WORD PTR [rbx+0x18],0x2
  4246ed:	mov    QWORD PTR [rbx],0x0
  4246f4:	mov    rdi,QWORD PTR [r12+0x260]
  4246fc:	add    rdi,0x20
  424700:	mov    rsi,rbx
  424703:	mov    edx,0x1
  424708:	call   42ce10 <fb_name_table_insert_item@@Base>
  42470d:	test   rax,rax
  424710:	je     424670 <__flatcc_fb_build_schema@@Base+0x320>
  424716:	mov    DWORD PTR [rax+0x20],r15d
  42471a:	jmp    424670 <__flatcc_fb_build_schema@@Base+0x320>
  42471f:	cmp    DWORD PTR [r12+0x124],0x0
  424728:	jne    424766 <__flatcc_fb_build_schema@@Base+0x416>
  42472a:	mov    rbx,QWORD PTR [r12+0x238]
  424732:	test   rbx,rbx
  424735:	jne    424748 <__flatcc_fb_build_schema@@Base+0x3f8>
  424737:	jmp    425c25 <__flatcc_fb_build_schema@@Base+0x18d5>
  42473c:	nop    DWORD PTR [rax+0x0]
  424740:	mov    rbx,QWORD PTR [rbx]
  424743:	test   rbx,rbx
  424746:	je     424766 <__flatcc_fb_build_schema@@Base+0x416>
  424748:	cmp    WORD PTR [rbx+0x10],0x3
  42474d:	jne    424740 <__flatcc_fb_build_schema@@Base+0x3f0>
  42474f:	mov    rdi,r12
  424752:	mov    rsi,rbx
  424755:	call   4260a0 <__flatcc_fb_build_schema@@Base+0x1d50>
  42475a:	test   eax,eax
  42475c:	je     424740 <__flatcc_fb_build_schema@@Base+0x3f0>
  42475e:	mov    WORD PTR [rbx+0x58],0x1
  424764:	jmp    424740 <__flatcc_fb_build_schema@@Base+0x3f0>
  424766:	mov    rbx,QWORD PTR [r12+0x238]
  42476e:	test   rbx,rbx
  424771:	je     425c25 <__flatcc_fb_build_schema@@Base+0x18d5>
  424777:	lea    r13,[rip+0x23892]        # 448010 <fb_schema_table_deleted@@Base+0x10e8>
  42477e:	lea    r14,[rip+0x24144]        # 4488c9 <fb_schema_table_deleted@@Base+0x19a1>
  424785:	lea    r15,[rip+0x24113]        # 44889f <fb_schema_table_deleted@@Base+0x1977>
  42478c:	jmp    4247ba <__flatcc_fb_build_schema@@Base+0x46a>
  42478e:	cmp    DWORD PTR [r12+0x124],0x0
  424797:	je     4247ae <__flatcc_fb_build_schema@@Base+0x45e>
  424799:	mov    rdi,r12
  42479c:	mov    rsi,rbx
  42479f:	call   4260a0 <__flatcc_fb_build_schema@@Base+0x1d50>
  4247a4:	test   eax,eax
  4247a6:	je     4247ae <__flatcc_fb_build_schema@@Base+0x45e>
  4247a8:	mov    WORD PTR [rbx+0x58],0x1
  4247ae:	mov    rbx,QWORD PTR [rbx]
  4247b1:	test   rbx,rbx
  4247b4:	je     424aef <__flatcc_fb_build_schema@@Base+0x79f>
  4247ba:	movzx  eax,WORD PTR [rbx+0x10]
  4247be:	cmp    rax,0x4
  4247c2:	ja     424aca <__flatcc_fb_build_schema@@Base+0x77a>
  4247c8:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4247cd:	add    rax,r13
  4247d0:	jmp    rax
  4247d2:	cmp    WORD PTR [rbx+0x58],0x0
  4247d7:	je     4247f2 <__flatcc_fb_build_schema@@Base+0x4a2>
  4247d9:	mov    rsi,QWORD PTR [rbx+0x8]
  4247dd:	mov    rdi,r12
  4247e0:	mov    rdx,r15
  4247e3:	xor    ecx,ecx
  4247e5:	xor    r8d,r8d
  4247e8:	xor    r9d,r9d
  4247eb:	call   41c3a0 <__flatcc_error_report@@Base>
  4247f0:	jmp    4247a8 <__flatcc_fb_build_schema@@Base+0x458>
  4247f2:	mov    rsi,QWORD PTR [rbx+0x38]
  4247f6:	mov    rdi,r12
  4247f9:	mov    edx,0x10
  4247fe:	lea    rcx,[rsp+0x60]
  424803:	call   426b30 <__flatcc_fb_build_schema@@Base+0x27e0>
  424808:	mov    WORD PTR [rbx+0xa4],ax
  42480f:	mov    rax,QWORD PTR [rsp+0x80]
  424817:	test   rax,rax
  42481a:	je     42486d <__flatcc_fb_build_schema@@Base+0x51d>
  42481c:	mov    rax,QWORD PTR [rax+0x10]
  424820:	mov    rcx,rax
  424823:	sub    rcx,0x1
  424827:	jb     42484d <__flatcc_fb_build_schema@@Base+0x4fd>
  424829:	cmp    rcx,0xff
  424830:	ja     42484d <__flatcc_fb_build_schema@@Base+0x4fd>
  424832:	mov    ecx,0x1
  424837:	nop    WORD PTR [rax+rax*1+0x0]
  424840:	cmp    rcx,rax
  424843:	je     424866 <__flatcc_fb_build_schema@@Base+0x516>
  424845:	add    rcx,rcx
  424848:	cmp    rcx,rax
  42484b:	jbe    424840 <__flatcc_fb_build_schema@@Base+0x4f0>
  42484d:	mov    rsi,QWORD PTR [rbx+0x8]
  424851:	mov    rdi,r12
  424854:	mov    rdx,r14
  424857:	xor    ecx,ecx
  424859:	xor    r8d,r8d
  42485c:	xor    r9d,r9d
  42485f:	call   41c3a0 <__flatcc_error_report@@Base>
  424864:	jmp    42486d <__flatcc_fb_build_schema@@Base+0x51d>
  424866:	mov    WORD PTR [rbx+0xb0],ax
  42486d:	mov    r15,QWORD PTR [rbx+0x28]
  424871:	test   r15,r15
  424874:	je     424a2e <__flatcc_fb_build_schema@@Base+0x6de>
  42487a:	lea    r14,[rbx+0x60]
  42487e:	mov    DWORD PTR [rsp+0x4],0x0
  424886:	jmp    4248b9 <__flatcc_fb_build_schema@@Base+0x569>
  424888:	nop    DWORD PTR [rax+rax*1+0x0]
  424890:	mov    rsi,QWORD PTR [r15+0x8]
  424894:	mov    rcx,QWORD PTR [rax+0x8]
  424898:	mov    rdi,r12
  42489b:	lea    rdx,[rip+0x24070]        # 448912 <fb_schema_table_deleted@@Base+0x19ea>
  4248a2:	xor    r8d,r8d
  4248a5:	xor    r9d,r9d
  4248a8:	call   41c3a0 <__flatcc_error_report@@Base>
  4248ad:	mov    r15,QWORD PTR [r15]
  4248b0:	test   r15,r15
  4248b3:	je     4249ea <__flatcc_fb_build_schema@@Base+0x69a>
  4248b9:	mov    rdi,r14
  4248bc:	mov    rsi,r15
  4248bf:	mov    edx,0x1
  4248c4:	call   41a150 <fb_symbol_table_insert_item@@Base>
  4248c9:	test   rax,rax
  4248cc:	jne    424890 <__flatcc_fb_build_schema@@Base+0x540>
  4248ce:	cmp    WORD PTR [r15+0x10],0x5
  4248d4:	jne    424a3a <__flatcc_fb_build_schema@@Base+0x6ea>
  4248da:	xor    eax,eax
  4248dc:	cmp    DWORD PTR [r12+0x118],0x0
  4248e5:	setne  al
  4248e8:	shl    eax,0x7
  4248eb:	lea    edx,[rax+0x4]
  4248ee:	cmp    DWORD PTR [r12+0x114],0x0
  4248f7:	cmove  edx,eax
  4248fa:	mov    rsi,QWORD PTR [r15+0x60]
  4248fe:	mov    rdi,r12
  424901:	lea    rcx,[rsp+0x60]
  424906:	call   426b30 <__flatcc_fb_build_schema@@Base+0x27e0>
  42490b:	mov    WORD PTR [r15+0x70],ax
  424910:	movzx  ecx,WORD PTR [r15+0x28]
  424915:	cmp    cx,0x8
  424919:	je     42495d <__flatcc_fb_build_schema@@Base+0x60d>
  42491b:	cmp    cx,0xc
  42491f:	jne    424a4a <__flatcc_fb_build_schema@@Base+0x6fa>
  424925:	mov    rsi,QWORD PTR [rbx+0x18]
  424929:	mov    rdx,QWORD PTR [r15+0x18]
  42492d:	mov    rdi,r12
  424930:	xor    ecx,ecx
  424932:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  424937:	test   rax,rax
  42493a:	je     424988 <__flatcc_fb_build_schema@@Base+0x638>
  42493c:	mov    QWORD PTR [r15+0x18],rax
  424940:	mov    WORD PTR [r15+0x28],0xe
  424947:	movzx  ecx,WORD PTR [rax+0x10]
  42494b:	cmp    cx,0x1
  42494f:	jne    4249aa <__flatcc_fb_build_schema@@Base+0x65a>
  424951:	cmp    BYTE PTR [r15+0x70],0x0
  424956:	jns    424967 <__flatcc_fb_build_schema@@Base+0x617>
  424958:	jmp    424a7e <__flatcc_fb_build_schema@@Base+0x72e>
  42495d:	shr    eax,0x7
  424960:	and    eax,0x1
  424963:	add    DWORD PTR [rsp+0x4],eax
  424967:	cmp    WORD PTR [r15+0x58],0x0
  42496d:	je     4248ad <__flatcc_fb_build_schema@@Base+0x55d>
  424973:	mov    rsi,QWORD PTR [r15+0x8]
  424977:	mov    rdi,r12
  42497a:	lea    rdx,[rip+0x240f0]        # 448a71 <fb_schema_table_deleted@@Base+0x1b49>
  424981:	xor    ecx,ecx
  424983:	jmp    4248a2 <__flatcc_fb_build_schema@@Base+0x552>
  424988:	mov    rsi,QWORD PTR [r15+0x18]
  42498c:	mov    rdi,r12
  42498f:	lea    rdx,[rip+0x23fc2]        # 448958 <fb_schema_table_deleted@@Base+0x1a30>
  424996:	mov    rcx,r15
  424999:	call   41c5d0 <error_ref_sym@@Base>
  42499e:	mov    WORD PTR [r15+0x28],0x1
  4249a5:	jmp    4248ad <__flatcc_fb_build_schema@@Base+0x55d>
  4249aa:	cmp    DWORD PTR [r12+0x104],0x0
  4249b3:	je     424a90 <__flatcc_fb_build_schema@@Base+0x740>
  4249b9:	cmp    cx,0x3
  4249bd:	jne    424aa4 <__flatcc_fb_build_schema@@Base+0x754>
  4249c3:	cmp    BYTE PTR [r15+0x70],0x0
  4249c8:	jns    424967 <__flatcc_fb_build_schema@@Base+0x617>
  4249ca:	cmp    DWORD PTR [r12+0x100],0x0
  4249d3:	je     424a7e <__flatcc_fb_build_schema@@Base+0x72e>
  4249d9:	inc    DWORD PTR [rsp+0x4]
  4249dd:	cmp    WORD PTR [r15+0x58],0x0
  4249e3:	jne    424973 <__flatcc_fb_build_schema@@Base+0x623>
  4249e5:	jmp    4248ad <__flatcc_fb_build_schema@@Base+0x55d>
  4249ea:	mov    eax,DWORD PTR [rsp+0x4]
  4249ee:	test   eax,eax
  4249f0:	lea    r14,[rip+0x23ed2]        # 4488c9 <fb_schema_table_deleted@@Base+0x19a1>
  4249f7:	je     424a2e <__flatcc_fb_build_schema@@Base+0x6de>
  4249f9:	or     BYTE PTR [rbx+0x12],0x8
  4249fd:	cmp    eax,0x2
  424a00:	jl     424a2e <__flatcc_fb_build_schema@@Base+0x6de>
  424a02:	cmp    DWORD PTR [r12+0x108],0x0
  424a0b:	jne    424a2e <__flatcc_fb_build_schema@@Base+0x6de>
  424a0d:	mov    rsi,QWORD PTR [rbx+0x8]
  424a11:	mov    rdi,r12
  424a14:	lea    rdx,[rip+0x24087]        # 448aa2 <fb_schema_table_deleted@@Base+0x1b7a>
  424a1b:	xor    ecx,ecx
  424a1d:	xor    r8d,r8d
  424a20:	xor    r9d,r9d
  424a23:	call   41c3a0 <__flatcc_error_report@@Base>
  424a28:	mov    WORD PTR [rbx+0x58],0x1
  424a2e:	lea    r15,[rip+0x23e6a]        # 44889f <fb_schema_table_deleted@@Base+0x1977>
  424a35:	jmp    4247ae <__flatcc_fb_build_schema@@Base+0x45e>
  424a3a:	mov    rsi,QWORD PTR [r15+0x8]
  424a3e:	mov    rdi,r12
  424a41:	lea    rdx,[rip+0x23eec]        # 448934 <fb_schema_table_deleted@@Base+0x1a0c>
  424a48:	jmp    424a58 <__flatcc_fb_build_schema@@Base+0x708>
  424a4a:	mov    rsi,QWORD PTR [r15+0x8]
  424a4e:	mov    rdi,r12
  424a51:	lea    rdx,[rip+0x23fdf]        # 448a37 <fb_schema_table_deleted@@Base+0x1b0f>
  424a58:	xor    ecx,ecx
  424a5a:	xor    r8d,r8d
  424a5d:	xor    r9d,r9d
  424a60:	call   41c3a0 <__flatcc_error_report@@Base>
  424a65:	mov    WORD PTR [rbx+0x58],0x1
  424a6b:	lea    r14,[rip+0x23e57]        # 4488c9 <fb_schema_table_deleted@@Base+0x19a1>
  424a72:	lea    r15,[rip+0x23e26]        # 44889f <fb_schema_table_deleted@@Base+0x1977>
  424a79:	jmp    4247ae <__flatcc_fb_build_schema@@Base+0x45e>
  424a7e:	mov    rsi,QWORD PTR [r15+0x8]
  424a82:	mov    rdi,r12
  424a85:	lea    rdx,[rip+0x23f3e]        # 4489ca <fb_schema_table_deleted@@Base+0x1aa2>
  424a8c:	xor    ecx,ecx
  424a8e:	jmp    424ab6 <__flatcc_fb_build_schema@@Base+0x766>
  424a90:	mov    rsi,QWORD PTR [r15+0x8]
  424a94:	mov    rcx,QWORD PTR [rax+0x8]
  424a98:	mov    rdi,r12
  424a9b:	lea    rdx,[rip+0x23f59]        # 4489fb <fb_schema_table_deleted@@Base+0x1ad3>
  424aa2:	jmp    424ab6 <__flatcc_fb_build_schema@@Base+0x766>
  424aa4:	mov    rsi,QWORD PTR [r15+0x8]
  424aa8:	mov    rcx,QWORD PTR [rax+0x8]
  424aac:	mov    rdi,r12
  424aaf:	lea    rdx,[rip+0x23ed0]        # 448986 <fb_schema_table_deleted@@Base+0x1a5e>
  424ab6:	xor    r8d,r8d
  424ab9:	xor    r9d,r9d
  424abc:	call   41c3a0 <__flatcc_error_report@@Base>
  424ac1:	mov    WORD PTR [r15+0x28],0x1
  424ac8:	jmp    424a65 <__flatcc_fb_build_schema@@Base+0x715>
  424aca:	mov    rsi,QWORD PTR [rbx+0x8]
  424ace:	lea    rdx,[rip+0x237b6]        # 44828b <fb_schema_table_deleted@@Base+0x1363>
  424ad5:	mov    rdi,r12
  424ad8:	xor    ecx,ecx
  424ada:	xor    r8d,r8d
  424add:	xor    r9d,r9d
  424ae0:	call   41c3a0 <__flatcc_error_report@@Base>
  424ae5:	mov    eax,0xffffffff
  424aea:	jmp    425fb7 <__flatcc_fb_build_schema@@Base+0x1c67>
  424aef:	mov    rbx,QWORD PTR [r12+0x238]
  424af7:	test   rbx,rbx
  424afa:	jne    424b18 <__flatcc_fb_build_schema@@Base+0x7c8>
  424afc:	jmp    425c25 <__flatcc_fb_build_schema@@Base+0x18d5>
  424b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b10:	mov    rbx,QWORD PTR [rbx]
  424b13:	test   rbx,rbx
  424b16:	je     424b3d <__flatcc_fb_build_schema@@Base+0x7ed>
  424b18:	cmp    WORD PTR [rbx+0x10],0x1
  424b1d:	jne    424b10 <__flatcc_fb_build_schema@@Base+0x7c0>
  424b1f:	cmp    WORD PTR [rbx+0x58],0x1
  424b24:	je     424b10 <__flatcc_fb_build_schema@@Base+0x7c0>
  424b26:	mov    rdi,r12
  424b29:	mov    rsi,rbx
  424b2c:	call   426710 <__flatcc_fb_build_schema@@Base+0x23c0>
  424b31:	test   eax,eax
  424b33:	je     424b10 <__flatcc_fb_build_schema@@Base+0x7c0>
  424b35:	mov    WORD PTR [rbx+0x58],0x1
  424b3b:	jmp    424b10 <__flatcc_fb_build_schema@@Base+0x7c0>
  424b3d:	mov    r13,QWORD PTR [r12+0x238]
  424b45:	test   r13,r13
  424b48:	je     425c25 <__flatcc_fb_build_schema@@Base+0x18d5>
  424b4e:	lea    r15,[rip+0x241db]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  424b55:	jmp    424b8d <__flatcc_fb_build_schema@@Base+0x83d>
  424b57:	mov    rsi,QWORD PTR [rbx+0x8]
  424b5b:	mov    rdi,r12
  424b5e:	lea    rdx,[rip+0x241ed]        # 448d52 <fb_schema_table_deleted@@Base+0x1e2a>
  424b65:	xor    ecx,ecx
  424b67:	xor    r8d,r8d
  424b6a:	xor    r9d,r9d
  424b6d:	call   41c3a0 <__flatcc_error_report@@Base>
  424b72:	mov    WORD PTR [r13+0x58],0x1
  424b79:	lea    r15,[rip+0x241b0]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  424b80:	mov    r13,QWORD PTR [r13+0x0]
  424b84:	test   r13,r13
  424b87:	je     425c25 <__flatcc_fb_build_schema@@Base+0x18d5>
  424b8d:	movzx  eax,WORD PTR [r13+0x10]
  424b92:	cmp    ax,0x2
  424b96:	je     424c20 <__flatcc_fb_build_schema@@Base+0x8d0>
  424b9c:	test   ax,ax
  424b9f:	jne    424b80 <__flatcc_fb_build_schema@@Base+0x830>
  424ba1:	movzx  eax,WORD PTR [r13+0x58]
  424ba6:	cmp    ax,0x1
  424baa:	je     424b80 <__flatcc_fb_build_schema@@Base+0x830>
  424bac:	test   ax,ax
  424baf:	jne    426034 <__flatcc_fb_build_schema@@Base+0x1ce4>
  424bb5:	mov    rsi,QWORD PTR [r13+0x38]
  424bb9:	mov    rdi,r12
  424bbc:	mov    edx,0x8
  424bc1:	lea    rcx,[rsp+0x60]
  424bc6:	call   426b30 <__flatcc_fb_build_schema@@Base+0x27e0>
  424bcb:	mov    WORD PTR [r13+0xa4],ax
  424bd3:	mov    r14,QWORD PTR [r13+0x28]
  424bd7:	test   r14,r14
  424bda:	je     425aa8 <__flatcc_fb_build_schema@@Base+0x1758>
  424be0:	lea    rbx,[r13+0x60]
  424be4:	xor    eax,eax
  424be6:	mov    QWORD PTR [rsp+0x30],rax
  424beb:	mov    DWORD PTR [rsp+0x1c],0x0
  424bf3:	xor    eax,eax
  424bf5:	mov    QWORD PTR [rsp+0x40],rax
  424bfa:	mov    DWORD PTR [rsp+0x4],0x0
  424c02:	mov    DWORD PTR [rsp+0x18],0x0
  424c0a:	xor    eax,eax
  424c0c:	mov    QWORD PTR [rsp+0x20],rax
  424c11:	mov    QWORD PTR [rsp+0x10],rbx
  424c16:	jmp    424e3c <__flatcc_fb_build_schema@@Base+0xaec>
  424c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  424c20:	movzx  eax,WORD PTR [r13+0x58]
  424c25:	cmp    ax,0x1
  424c29:	je     424b80 <__flatcc_fb_build_schema@@Base+0x830>
  424c2f:	test   ax,ax
  424c32:	jne    426053 <__flatcc_fb_build_schema@@Base+0x1d03>
  424c38:	cmp    QWORD PTR [r13+0x38],0x0
  424c3d:	lea    r15,[rip+0x24a3a]        # 44967e <fb_schema_table_deleted@@Base+0x2756>
  424c44:	je     424c61 <__flatcc_fb_build_schema@@Base+0x911>
  424c46:	mov    rsi,QWORD PTR [r13+0x8]
  424c4a:	mov    rdi,r12
  424c4d:	lea    rdx,[rip+0x24a06]        # 44965a <fb_schema_table_deleted@@Base+0x2732>
  424c54:	xor    ecx,ecx
  424c56:	xor    r8d,r8d
  424c59:	xor    r9d,r9d
  424c5c:	call   41c3a0 <__flatcc_error_report@@Base>
  424c61:	mov    rbx,QWORD PTR [r13+0x28]
  424c65:	test   rbx,rbx
  424c68:	je     424b79 <__flatcc_fb_build_schema@@Base+0x829>
  424c6e:	lea    r14,[r13+0x60]
  424c72:	jmp    424ca5 <__flatcc_fb_build_schema@@Base+0x955>
  424c74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c7e:	xchg   ax,ax
  424c80:	mov    rsi,QWORD PTR [rbx+0x8]
  424c84:	mov    rcx,QWORD PTR [rax+0x8]
  424c88:	mov    rdi,r12
  424c8b:	mov    rdx,r15
  424c8e:	xor    r8d,r8d
  424c91:	xor    r9d,r9d
  424c94:	call   41c3a0 <__flatcc_error_report@@Base>
  424c99:	mov    rbx,QWORD PTR [rbx]
  424c9c:	test   rbx,rbx
  424c9f:	je     424b79 <__flatcc_fb_build_schema@@Base+0x829>
  424ca5:	mov    rdi,r14
  424ca8:	mov    rsi,rbx
  424cab:	mov    edx,0x1
  424cb0:	call   41a150 <fb_symbol_table_insert_item@@Base>
  424cb5:	test   rax,rax
  424cb8:	jne    424c80 <__flatcc_fb_build_schema@@Base+0x930>
  424cba:	cmp    WORD PTR [rbx+0x10],0x5
  424cbf:	jne    424b57 <__flatcc_fb_build_schema@@Base+0x807>
  424cc5:	cmp    WORD PTR [rbx+0x58],0x0
  424cca:	je     424ce7 <__flatcc_fb_build_schema@@Base+0x997>
  424ccc:	mov    rsi,QWORD PTR [rbx+0x8]
  424cd0:	mov    rdi,r12
  424cd3:	lea    rdx,[rip+0x249c4]        # 44969e <fb_schema_table_deleted@@Base+0x2776>
  424cda:	xor    ecx,ecx
  424cdc:	xor    r8d,r8d
  424cdf:	xor    r9d,r9d
  424ce2:	call   41c3a0 <__flatcc_error_report@@Base>
  424ce7:	movzx  eax,WORD PTR [rbx+0x28]
  424ceb:	cmp    ax,0x1
  424cef:	je     424c99 <__flatcc_fb_build_schema@@Base+0x949>
  424cf1:	cmp    ax,0xc
  424cf5:	je     424d12 <__flatcc_fb_build_schema@@Base+0x9c2>
  424cf7:	mov    rsi,QWORD PTR [rbx+0x8]
  424cfb:	mov    rdi,r12
  424cfe:	lea    rdx,[rip+0x249d9]        # 4496de <fb_schema_table_deleted@@Base+0x27b6>
  424d05:	xor    ecx,ecx
  424d07:	xor    r8d,r8d
  424d0a:	xor    r9d,r9d
  424d0d:	call   41c3a0 <__flatcc_error_report@@Base>
  424d12:	mov    rsi,QWORD PTR [r13+0x18]
  424d16:	mov    rdx,QWORD PTR [rbx+0x30]
  424d1a:	mov    rdi,r12
  424d1d:	xor    ecx,ecx
  424d1f:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  424d24:	test   rax,rax
  424d27:	je     424d58 <__flatcc_fb_build_schema@@Base+0xa08>
  424d29:	cmp    WORD PTR [rax+0x10],0x0
  424d2e:	je     424d79 <__flatcc_fb_build_schema@@Base+0xa29>
  424d30:	mov    rsi,QWORD PTR [rbx+0x8]
  424d34:	mov    rcx,QWORD PTR [rax+0x8]
  424d38:	mov    rdi,r12
  424d3b:	lea    rdx,[rip+0x24a0b]        # 44974d <fb_schema_table_deleted@@Base+0x2825>
  424d42:	xor    r8d,r8d
  424d45:	xor    r9d,r9d
  424d48:	call   41c3a0 <__flatcc_error_report@@Base>
  424d4d:	mov    WORD PTR [rbx+0x28],0x1
  424d53:	jmp    424c99 <__flatcc_fb_build_schema@@Base+0x949>
  424d58:	mov    rsi,QWORD PTR [rbx+0x30]
  424d5c:	mov    rdi,r12
  424d5f:	lea    rdx,[rip+0x249b5]        # 44971b <fb_schema_table_deleted@@Base+0x27f3>
  424d66:	mov    rcx,rbx
  424d69:	call   41c5d0 <error_ref_sym@@Base>
  424d6e:	mov    WORD PTR [rbx+0x28],0x1
  424d74:	jmp    424c99 <__flatcc_fb_build_schema@@Base+0x949>
  424d79:	mov    WORD PTR [rbx+0x40],0xe
  424d7f:	mov    QWORD PTR [rbx+0x30],rax
  424d83:	mov    rsi,QWORD PTR [r13+0x18]
  424d87:	mov    rdx,QWORD PTR [rbx+0x18]
  424d8b:	mov    rdi,r12
  424d8e:	xor    ecx,ecx
  424d90:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  424d95:	test   rax,rax
  424d98:	je     424db5 <__flatcc_fb_build_schema@@Base+0xa65>
  424d9a:	cmp    WORD PTR [rax+0x10],0x0
  424d9f:	je     424dc5 <__flatcc_fb_build_schema@@Base+0xa75>
  424da1:	mov    rsi,QWORD PTR [rbx+0x8]
  424da5:	mov    rcx,QWORD PTR [rax+0x8]
  424da9:	mov    rdi,r12
  424dac:	lea    rdx,[rip+0x24a03]        # 4497b6 <fb_schema_table_deleted@@Base+0x288e>
  424db3:	jmp    424d42 <__flatcc_fb_build_schema@@Base+0x9f2>
  424db5:	mov    rsi,QWORD PTR [rbx+0x18]
  424db9:	mov    rdi,r12
  424dbc:	lea    rdx,[rip+0x249c0]        # 449783 <fb_schema_table_deleted@@Base+0x285b>
  424dc3:	jmp    424d66 <__flatcc_fb_build_schema@@Base+0xa16>
  424dc5:	mov    WORD PTR [rbx+0x28],0xe
  424dcb:	mov    QWORD PTR [rbx+0x18],rax
  424dcf:	mov    QWORD PTR [rbx+0x80],0x0
  424dda:	mov    rsi,QWORD PTR [rbx+0x60]
  424dde:	mov    rdi,r12
  424de1:	mov    edx,0x4
  424de6:	lea    rcx,[rsp+0x60]
  424deb:	call   426b30 <__flatcc_fb_build_schema@@Base+0x27e0>
  424df0:	mov    WORD PTR [rbx+0x70],ax
  424df4:	jmp    424c99 <__flatcc_fb_build_schema@@Base+0x949>
  424df9:	mov    rsi,QWORD PTR [r14+0x8]
  424dfd:	mov    rdi,r12
  424e00:	lea    rdx,[rip+0x24328]        # 44912f <fb_schema_table_deleted@@Base+0x2207>
  424e07:	xor    ecx,ecx
  424e09:	xor    r8d,r8d
  424e0c:	xor    r9d,r9d
  424e0f:	call   41c3a0 <__flatcc_error_report@@Base>
  424e14:	mov    WORD PTR [r14+0x28],0x1
  424e1b:	mov    rbx,QWORD PTR [rsp+0x10]
  424e20:	lea    r15,[rip+0x23f09]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  424e27:	nop    WORD PTR [rax+rax*1+0x0]
  424e30:	mov    r14,QWORD PTR [r14]
  424e33:	test   r14,r14
  424e36:	je     425a87 <__flatcc_fb_build_schema@@Base+0x1737>
  424e3c:	mov    rdi,rbx
  424e3f:	mov    rsi,r14
  424e42:	mov    edx,0x1
  424e47:	call   41a150 <fb_symbol_table_insert_item@@Base>
  424e4c:	test   rax,rax
  424e4f:	je     424e70 <__flatcc_fb_build_schema@@Base+0xb20>
  424e51:	mov    rsi,QWORD PTR [r14+0x8]
  424e55:	mov    rcx,QWORD PTR [rax+0x8]
  424e59:	mov    rdi,r12
  424e5c:	mov    rdx,r15
  424e5f:	xor    r8d,r8d
  424e62:	xor    r9d,r9d
  424e65:	call   41c3a0 <__flatcc_error_report@@Base>
  424e6a:	jmp    424e30 <__flatcc_fb_build_schema@@Base+0xae0>
  424e6c:	nop    DWORD PTR [rax+0x0]
  424e70:	cmp    WORD PTR [r14+0x10],0x5
  424e76:	jne    425ac4 <__flatcc_fb_build_schema@@Base+0x1774>
  424e7c:	mov    eax,DWORD PTR [r14+0x28]
  424e80:	lea    ecx,[rax-0x7]
  424e83:	cmp    cx,0x2
  424e87:	jae    424eb4 <__flatcc_fb_build_schema@@Base+0xb64>
  424e89:	mov    rax,QWORD PTR [r14+0x18]
  424e8d:	mov    rcx,QWORD PTR [rax+0x20]
  424e91:	lea    rdx,[rcx+0x3e7]
  424e98:	xor    eax,eax
  424e9a:	cmp    rdx,0x1b
  424e9e:	ja     424eae <__flatcc_fb_build_schema@@Base+0xb5e>
  424ea0:	lea    rax,[rip+0x23209]        # 4480b0 <fb_schema_table_deleted@@Base+0x1188>
  424ea7:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  424eae:	mov    DWORD PTR [r14+0x18],eax
  424eb2:	jmp    424ebe <__flatcc_fb_build_schema@@Base+0xb6e>
  424eb4:	cmp    ax,0x1
  424eb8:	je     424e30 <__flatcc_fb_build_schema@@Base+0xae0>
  424ebe:	mov    rsi,QWORD PTR [r14+0x60]
  424ec2:	mov    rdi,r12
  424ec5:	mov    edx,0xfc6
  424eca:	lea    rcx,[rsp+0x60]
  424ecf:	call   426b30 <__flatcc_fb_build_schema@@Base+0x27e0>
  424ed4:	mov    WORD PTR [r14+0x70],ax
  424ed9:	mov    rax,QWORD PTR [rsp+0x90]
  424ee1:	test   rax,rax
  424ee4:	mov    ebx,DWORD PTR [rsp+0x4]
  424ee8:	je     424f64 <__flatcc_fb_build_schema@@Base+0xc14>
  424eea:	cmp    WORD PTR [r14+0x28],0x7
  424ef0:	jne    424f49 <__flatcc_fb_build_schema@@Base+0xbf9>
  424ef2:	cmp    DWORD PTR [r14+0x18],0x4
  424ef7:	jne    424f49 <__flatcc_fb_build_schema@@Base+0xbf9>
  424ef9:	cmp    WORD PTR [rax+0x20],0x2
  424efe:	jne    424f64 <__flatcc_fb_build_schema@@Base+0xc14>
  424f00:	mov    QWORD PTR [rsp+0x48],r13
  424f05:	mov    r13,QWORD PTR [r13+0x18]
  424f09:	mov    rsi,QWORD PTR [rax+0x10]
  424f0d:	mov    QWORD PTR [rsp+0x50],rax
  424f12:	mov    r15d,DWORD PTR [rax+0x18]
  424f16:	movsxd rax,r15d
  424f19:	nop    DWORD PTR [rax+0x0]
  424f20:	test   rax,rax
  424f23:	jle    42543f <__flatcc_fb_build_schema@@Base+0x10ef>
  424f29:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2e
  424f2e:	lea    rax,[rax-0x1]
  424f32:	jne    424f20 <__flatcc_fb_build_schema@@Base+0xbd0>
  424f34:	lea    rcx,[rsi+rax*1]
  424f38:	add    rcx,0x1
  424f3c:	mov    QWORD PTR [rsp+0x8],rcx
  424f41:	dec    r15d
  424f44:	jmp    425444 <__flatcc_fb_build_schema@@Base+0x10f4>
  424f49:	mov    rsi,QWORD PTR [rax+0x8]
  424f4d:	mov    rdi,r12
  424f50:	lea    rdx,[rip+0x245a6]        # 4494fd <fb_schema_table_deleted@@Base+0x25d5>
  424f57:	xor    ecx,ecx
  424f59:	xor    r8d,r8d
  424f5c:	xor    r9d,r9d
  424f5f:	call   41c3a0 <__flatcc_error_report@@Base>
  424f64:	movzx  eax,WORD PTR [r14+0x70]
  424f69:	test   eax,0x100
  424f6e:	je     424f98 <__flatcc_fb_build_schema@@Base+0xc48>
  424f70:	cmp    WORD PTR [r14+0x28],0x8
  424f76:	jne    424f98 <__flatcc_fb_build_schema@@Base+0xc48>
  424f78:	mov    rsi,QWORD PTR [r14+0x8]
  424f7c:	mov    rdi,r12
  424f7f:	lea    rdx,[rip+0x23df1]        # 448d77 <fb_schema_table_deleted@@Base+0x1e4f>
  424f86:	xor    ecx,ecx
  424f88:	xor    r8d,r8d
  424f8b:	xor    r9d,r9d
  424f8e:	call   41c3a0 <__flatcc_error_report@@Base>
  424f93:	movzx  eax,WORD PTR [r14+0x70]
  424f98:	test   eax,0x400
  424f9d:	je     424fce <__flatcc_fb_build_schema@@Base+0xc7e>
  424f9f:	cmp    WORD PTR [r14+0x28],0x7
  424fa5:	jne    424fae <__flatcc_fb_build_schema@@Base+0xc5e>
  424fa7:	cmp    DWORD PTR [r14+0x18],0x4
  424fac:	je     424fce <__flatcc_fb_build_schema@@Base+0xc7e>
  424fae:	mov    rsi,QWORD PTR [r14+0x8]
  424fb2:	mov    rdi,r12
  424fb5:	lea    rdx,[rip+0x23df3]        # 448daf <fb_schema_table_deleted@@Base+0x1e87>
  424fbc:	xor    ecx,ecx
  424fbe:	xor    r8d,r8d
  424fc1:	xor    r9d,r9d
  424fc4:	call   41c3a0 <__flatcc_error_report@@Base>
  424fc9:	movzx  eax,WORD PTR [r14+0x70]
  424fce:	test   eax,0x800
  424fd3:	je     425004 <__flatcc_fb_build_schema@@Base+0xcb4>
  424fd5:	cmp    WORD PTR [r14+0x28],0x7
  424fdb:	jne    424fe4 <__flatcc_fb_build_schema@@Base+0xc94>
  424fdd:	cmp    DWORD PTR [r14+0x18],0x4
  424fe2:	je     425004 <__flatcc_fb_build_schema@@Base+0xcb4>
  424fe4:	mov    rsi,QWORD PTR [r14+0x8]
  424fe8:	mov    rdi,r12
  424feb:	lea    rdx,[rip+0x23df9]        # 448deb <fb_schema_table_deleted@@Base+0x1ec3>
  424ff2:	xor    ecx,ecx
  424ff4:	xor    r8d,r8d
  424ff7:	xor    r9d,r9d
  424ffa:	call   41c3a0 <__flatcc_error_report@@Base>
  424fff:	movzx  eax,WORD PTR [r14+0x70]
  425004:	and    eax,0xc00
  425009:	cmp    eax,0xc00
  42500e:	jne    42502b <__flatcc_fb_build_schema@@Base+0xcdb>
  425010:	mov    rsi,QWORD PTR [r14+0x8]
  425014:	mov    rdi,r12
  425017:	lea    rdx,[rip+0x23e0c]        # 448e2a <fb_schema_table_deleted@@Base+0x1f02>
  42501e:	xor    ecx,ecx
  425020:	xor    r8d,r8d
  425023:	xor    r9d,r9d
  425026:	call   41c3a0 <__flatcc_error_report@@Base>
  42502b:	mov    r15,QWORD PTR [rsp+0x68]
  425030:	cmp    QWORD PTR [rsp+0x20],0x0
  425036:	jne    425061 <__flatcc_fb_build_schema@@Base+0xd11>
  425038:	test   r15,r15
  42503b:	je     425061 <__flatcc_fb_build_schema@@Base+0xd11>
  42503d:	mov    rdi,QWORD PTR [r12+0xd8]
  425045:	mov    rdx,QWORD PTR [r12+0x148]
  42504d:	mov    QWORD PTR [rsp+0x30],rdi
  425052:	xor    esi,esi
  425054:	call   406110 <memset@plt>
  425059:	mov    DWORD PTR [rsp+0x18],0x1
  425061:	test   ebx,ebx
  425063:	jne    4250b0 <__flatcc_fb_build_schema@@Base+0xd60>
  425065:	mov    rax,QWORD PTR [rsp+0x20]
  42506a:	cmp    rax,QWORD PTR [r12+0x148]
  425072:	jae    42508b <__flatcc_fb_build_schema@@Base+0xd3b>
  425074:	xor    ebx,ebx
  425076:	cmp    DWORD PTR [rsp+0x18],0x0
  42507b:	jne    4250ab <__flatcc_fb_build_schema@@Base+0xd5b>
  42507d:	movzx  eax,WORD PTR [rsp+0x20]
  425082:	mov    QWORD PTR [r14+0x88],rax
  425089:	jmp    4250ab <__flatcc_fb_build_schema@@Base+0xd5b>
  42508b:	mov    rsi,QWORD PTR [r14+0x8]
  42508f:	mov    rdi,r12
  425092:	lea    rdx,[rip+0x23dc8]        # 448e61 <fb_schema_table_deleted@@Base+0x1f39>
  425099:	xor    ecx,ecx
  42509b:	xor    r8d,r8d
  42509e:	xor    r9d,r9d
  4250a1:	call   41c3a0 <__flatcc_error_report@@Base>
  4250a6:	mov    ebx,0x1
  4250ab:	inc    QWORD PTR [rsp+0x20]
  4250b0:	mov    eax,DWORD PTR [r14+0x28]
  4250b4:	add    eax,0xfffffff9
  4250b7:	cmp    ax,0x5
  4250bb:	mov    DWORD PTR [rsp+0x4],ebx
  4250bf:	ja     424df9 <__flatcc_fb_build_schema@@Base+0xaa9>
  4250c5:	movzx  eax,ax
  4250c8:	lea    rcx,[rip+0x22f55]        # 448024 <fb_schema_table_deleted@@Base+0x10fc>
  4250cf:	movsxd rax,DWORD PTR [rcx+rax*4]
  4250d3:	add    rax,rcx
  4250d6:	jmp    rax
  4250d8:	mov    eax,DWORD PTR [r14+0x18]
  4250dc:	lea    rcx,[rip+0x22f9d]        # 448080 <fb_schema_table_deleted@@Base+0x1158>
  4250e3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4250e7:	mov    QWORD PTR [r14+0x80],rax
  4250ee:	mov    WORD PTR [r14+0x72],ax
  4250f3:	cmp    WORD PTR [r14+0x58],0x0
  4250f9:	je     425348 <__flatcc_fb_build_schema@@Base+0xff8>
  4250ff:	mov    rsi,QWORD PTR [r14+0x8]
  425103:	mov    rdi,r12
  425106:	lea    rdx,[rip+0x23da6]        # 448eb3 <fb_schema_table_deleted@@Base+0x1f8b>
  42510d:	jmp    424e07 <__flatcc_fb_build_schema@@Base+0xab7>
  425112:	mov    rsi,QWORD PTR [r13+0x18]
  425116:	mov    rdx,QWORD PTR [r14+0x18]
  42511a:	mov    rdi,r12
  42511d:	xor    ecx,ecx
  42511f:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  425124:	test   rax,rax
  425127:	je     4253ad <__flatcc_fb_build_schema@@Base+0x105d>
  42512d:	mov    rbx,rax
  425130:	movzx  eax,WORD PTR [rax+0x10]
  425134:	cmp    ax,0x4
  425138:	ja     4256a7 <__flatcc_fb_build_schema@@Base+0x1357>
  42513e:	cmp    ax,0x2
  425142:	je     4256a7 <__flatcc_fb_build_schema@@Base+0x1357>
  425148:	cmp    WORD PTR [r14+0x58],0x0
  42514e:	jne    4257ee <__flatcc_fb_build_schema@@Base+0x149e>
  425154:	mov    WORD PTR [r14+0x28],0xf
  42515b:	mov    QWORD PTR [r14+0x18],rbx
  42515f:	mov    rax,QWORD PTR [rbx+0xb8]
  425166:	mov    QWORD PTR [r14+0x80],rax
  42516d:	movzx  eax,WORD PTR [rbx+0xb0]
  425174:	mov    WORD PTR [r14+0x72],ax
  425179:	xor    edx,edx
  42517b:	cmp    DWORD PTR [rsp+0x4],0x0
  425180:	jne    4253d2 <__flatcc_fb_build_schema@@Base+0x1082>
  425186:	cmp    WORD PTR [rbx+0x10],0x4
  42518b:	jne    4253d2 <__flatcc_fb_build_schema@@Base+0x1082>
  425191:	cmp    DWORD PTR [rsp+0x18],0x0
  425196:	jne    4251a4 <__flatcc_fb_build_schema@@Base+0xe54>
  425198:	movzx  eax,WORD PTR [rsp+0x20]
  42519d:	mov    QWORD PTR [r14+0x88],rax
  4251a4:	inc    QWORD PTR [rsp+0x20]
  4251a9:	xor    edx,edx
  4251ab:	test   r15,r15
  4251ae:	je     425360 <__flatcc_fb_build_schema@@Base+0x1010>
  4251b4:	cmp    DWORD PTR [rsp+0x18],0x0
  4251b9:	jne    425360 <__flatcc_fb_build_schema@@Base+0x1010>
  4251bf:	mov    rsi,QWORD PTR [r15+0x8]
  4251c3:	mov    rdi,r12
  4251c6:	mov    ebx,edx
  4251c8:	lea    rdx,[rip+0x23f88]        # 449157 <fb_schema_table_deleted@@Base+0x222f>
  4251cf:	jmp    425384 <__flatcc_fb_build_schema@@Base+0x1034>
  4251d4:	cmp    WORD PTR [r14+0x58],0x0
  4251da:	je     425348 <__flatcc_fb_build_schema@@Base+0xff8>
  4251e0:	mov    rsi,QWORD PTR [r14+0x8]
  4251e4:	mov    rdi,r12
  4251e7:	lea    rdx,[rip+0x23d12]        # 448f00 <fb_schema_table_deleted@@Base+0x1fd8>
  4251ee:	jmp    424e07 <__flatcc_fb_build_schema@@Base+0xab7>
  4251f3:	cmp    WORD PTR [r14+0x58],0x0
  4251f9:	je     4253c8 <__flatcc_fb_build_schema@@Base+0x1078>
  4251ff:	mov    rsi,QWORD PTR [r14+0x8]
  425203:	mov    rdi,r12
  425206:	lea    rdx,[rip+0x23cd0]        # 448edd <fb_schema_table_deleted@@Base+0x1fb5>
  42520d:	jmp    424e07 <__flatcc_fb_build_schema@@Base+0xab7>
  425212:	lea    rbx,[r14+0x48]
  425216:	movzx  eax,WORD PTR [r14+0x58]
  42521b:	cmp    ax,0xd
  42521f:	jne    425296 <__flatcc_fb_build_schema@@Base+0xf46>
  425221:	mov    rsi,QWORD PTR [r13+0x18]
  425225:	mov    rdx,QWORD PTR [rbx]
  425228:	mov    QWORD PTR [rsp+0x28],0x0
  425231:	test   rdx,rdx
  425234:	je     426072 <__flatcc_fb_build_schema@@Base+0x1d22>
  42523a:	mov    rdi,r12
  42523d:	lea    rcx,[rsp+0x28]
  425242:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  425247:	test   rax,rax
  42524a:	je     42539d <__flatcc_fb_build_schema@@Base+0x104d>
  425250:	cmp    WORD PTR [rax+0x10],0x3
  425255:	jne    42539d <__flatcc_fb_build_schema@@Base+0x104d>
  42525b:	add    rax,0x60
  42525f:	mov    rcx,QWORD PTR [rsp+0x28]
  425264:	mov    rcx,QWORD PTR [rcx+0x8]
  425268:	mov    rsi,QWORD PTR [rcx]
  42526b:	mov    rdx,QWORD PTR [rcx+0x8]
  42526f:	mov    rdi,rax
  425272:	call   41a170 <fb_symbol_table_find@@Base>
  425277:	test   rax,rax
  42527a:	je     42539d <__flatcc_fb_build_schema@@Base+0x104d>
  425280:	mov    rcx,QWORD PTR [rax+0x58]
  425284:	mov    QWORD PTR [rbx+0x10],rcx
  425288:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  42528d:	vmovups XMMWORD PTR [rbx],xmm0
  425291:	movzx  eax,WORD PTR [r14+0x58]
  425296:	test   ax,ax
  425299:	jne    4252aa <__flatcc_fb_build_schema@@Base+0xf5a>
  42529b:	mov    WORD PTR [r14+0x58],0x5
  4252a2:	mov    QWORD PTR [r14+0x48],0x0
  4252aa:	mov    edx,DWORD PTR [r14+0x18]
  4252ae:	mov    rdi,r12
  4252b1:	mov    rsi,r14
  4252b4:	mov    rcx,rbx
  4252b7:	call   426eb0 <__flatcc_fb_coerce_scalar_type@@Base>
  4252bc:	test   eax,eax
  4252be:	jne    425809 <__flatcc_fb_build_schema@@Base+0x14b9>
  4252c4:	mov    eax,DWORD PTR [r14+0x18]
  4252c8:	lea    rcx,[rip+0x22db1]        # 448080 <fb_schema_table_deleted@@Base+0x1158>
  4252cf:	movsxd rax,DWORD PTR [rcx+rax*4]
  4252d3:	mov    QWORD PTR [r14+0x80],rax
  4252da:	mov    WORD PTR [r14+0x72],ax
  4252df:	mov    edx,0x1
  4252e4:	xor    ebx,ebx
  4252e6:	cmp    DWORD PTR [rsp+0x4],0x0
  4252eb:	jne    4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  4252f1:	jmp    425357 <__flatcc_fb_build_schema@@Base+0x1007>
  4252f3:	mov    rsi,QWORD PTR [r13+0x18]
  4252f7:	mov    rdx,QWORD PTR [r14+0x18]
  4252fb:	mov    rdi,r12
  4252fe:	xor    ecx,ecx
  425300:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  425305:	test   rax,rax
  425308:	je     425415 <__flatcc_fb_build_schema@@Base+0x10c5>
  42530e:	mov    rbx,rax
  425311:	movzx  eax,WORD PTR [rax+0x10]
  425315:	cmp    rax,0x4
  425319:	ja     42588e <__flatcc_fb_build_schema@@Base+0x153e>
  42531f:	xor    edx,edx
  425321:	lea    rcx,[rip+0x22d14]        # 44803c <fb_schema_table_deleted@@Base+0x1114>
  425328:	movsxd rax,DWORD PTR [rcx+rax*4]
  42532c:	add    rax,rcx
  42532f:	jmp    rax
  425331:	mov    rsi,QWORD PTR [r14+0x8]
  425335:	mov    rcx,QWORD PTR [rbx+0x8]
  425339:	mov    rdi,r12
  42533c:	lea    rdx,[rip+0x23c4a]        # 448f8d <fb_schema_table_deleted@@Base+0x2065>
  425343:	jmp    4257fe <__flatcc_fb_build_schema@@Base+0x14ae>
  425348:	xor    ebx,ebx
  42534a:	xor    edx,edx
  42534c:	cmp    DWORD PTR [rsp+0x4],0x0
  425351:	jne    4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  425357:	test   r15,r15
  42535a:	jne    4251b4 <__flatcc_fb_build_schema@@Base+0xe64>
  425360:	test   r15,r15
  425363:	jne    425600 <__flatcc_fb_build_schema@@Base+0x12b0>
  425369:	cmp    DWORD PTR [rsp+0x18],0x0
  42536e:	je     425600 <__flatcc_fb_build_schema@@Base+0x12b0>
  425374:	mov    rsi,QWORD PTR [r14+0x8]
  425378:	mov    rdi,r12
  42537b:	mov    ebx,edx
  42537d:	lea    rdx,[rip+0x23e10]        # 449194 <fb_schema_table_deleted@@Base+0x226c>
  425384:	xor    ecx,ecx
  425386:	xor    r8d,r8d
  425389:	xor    r9d,r9d
  42538c:	call   41c3a0 <__flatcc_error_report@@Base>
  425391:	mov    edx,ebx
  425393:	mov    DWORD PTR [rsp+0x4],0x1
  42539b:	jmp    4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  42539d:	mov    rsi,QWORD PTR [r14+0x48]
  4253a1:	mov    rdi,r12
  4253a4:	lea    rdx,[rip+0x23ad6]        # 448e81 <fb_schema_table_deleted@@Base+0x1f59>
  4253ab:	jmp    4253bb <__flatcc_fb_build_schema@@Base+0x106b>
  4253ad:	mov    rsi,QWORD PTR [r14+0x18]
  4253b1:	mov    rdi,r12
  4253b4:	lea    rdx,[rip+0x23cf5]        # 4490b0 <fb_schema_table_deleted@@Base+0x2188>
  4253bb:	mov    rcx,r14
  4253be:	call   41c5d0 <error_ref_sym@@Base>
  4253c3:	jmp    425809 <__flatcc_fb_build_schema@@Base+0x14b9>
  4253c8:	mov    edx,DWORD PTR [r12+0x110]
  4253d0:	xor    ebx,ebx
  4253d2:	cmp    DWORD PTR [rsp+0x4],0x0
  4253d7:	je     425357 <__flatcc_fb_build_schema@@Base+0x1007>
  4253dd:	lea    r15,[rip+0x2394c]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  4253e4:	cmp    BYTE PTR [r14+0x70],0x0
  4253e9:	mov    rbx,QWORD PTR [rsp+0x10]
  4253ee:	jns    424e30 <__flatcc_fb_build_schema@@Base+0xae0>
  4253f4:	inc    DWORD PTR [rsp+0x1c]
  4253f8:	test   edx,edx
  4253fa:	jne    424e30 <__flatcc_fb_build_schema@@Base+0xae0>
  425400:	mov    rsi,QWORD PTR [r14+0x8]
  425404:	mov    rdi,r12
  425407:	lea    rdx,[rip+0x24077]        # 449485 <fb_schema_table_deleted@@Base+0x255d>
  42540e:	xor    ecx,ecx
  425410:	jmp    424e5f <__flatcc_fb_build_schema@@Base+0xb0f>
  425415:	mov    rsi,QWORD PTR [r14+0x18]
  425419:	mov    rdi,r12
  42541c:	lea    rdx,[rip+0x23b07]        # 448f2a <fb_schema_table_deleted@@Base+0x2002>
  425423:	mov    rcx,r14
  425426:	call   41c5d0 <error_ref_sym@@Base>
  42542b:	mov    WORD PTR [r14+0x28],0x1
  425432:	mov    DWORD PTR [rsp+0x4],0x1
  42543a:	jmp    425810 <__flatcc_fb_build_schema@@Base+0x14c0>
  42543f:	mov    QWORD PTR [rsp+0x8],rsi
  425444:	sub    r15d,eax
  425447:	test   r13,r13
  42544a:	je     425557 <__flatcc_fb_build_schema@@Base+0x1207>
  425450:	test   eax,eax
  425452:	jne    425557 <__flatcc_fb_build_schema@@Base+0x1207>
  425458:	movsxd rax,r15d
  42545b:	mov    QWORD PTR [rsp+0x38],rax
  425460:	jmp    42547c <__flatcc_fb_build_schema@@Base+0x112c>
  425462:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42546c:	nop    DWORD PTR [rax+0x0]
  425470:	mov    r13,rax
  425473:	test   rax,rax
  425476:	je     4255d0 <__flatcc_fb_build_schema@@Base+0x1280>
  42547c:	lea    rdi,[r13+0x8]
  425480:	mov    rsi,QWORD PTR [rsp+0x8]
  425485:	mov    rdx,QWORD PTR [rsp+0x38]
  42548a:	call   41a170 <fb_symbol_table_find@@Base>
  42548f:	test   rax,rax
  425492:	je     4254b5 <__flatcc_fb_build_schema@@Base+0x1165>
  425494:	mov    r15,rax
  425497:	cmp    WORD PTR [rax+0x10],0x4
  42549c:	ja     4254b5 <__flatcc_fb_build_schema@@Base+0x1165>
  42549e:	mov    rsi,QWORD PTR [r15+0x20]
  4254a2:	mov    rdi,QWORD PTR [rsp+0x58]
  4254a7:	call   419b30 <ptr_set_find_item@@Base>
  4254ac:	test   rax,rax
  4254af:	jne    425598 <__flatcc_fb_build_schema@@Base+0x1248>
  4254b5:	mov    rax,QWORD PTR [r13+0x0]
  4254b9:	test   rax,rax
  4254bc:	je     4255d0 <__flatcc_fb_build_schema@@Base+0x1280>
  4254c2:	mov    edx,0x2
  4254c7:	xor    esi,esi
  4254c9:	xor    ecx,ecx
  4254cb:	movabs rdi,0xffffffff00000000
  4254d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4254df:	nop
  4254e0:	mov    r15,rsi
  4254e3:	mov    rbx,rdx
  4254e6:	mov    rax,QWORD PTR [rax]
  4254e9:	inc    rcx
  4254ec:	add    rsi,rdi
  4254ef:	inc    rdx
  4254f2:	test   rax,rax
  4254f5:	jne    4254e0 <__flatcc_fb_build_schema@@Base+0x1190>
  4254f7:	jmp    425526 <__flatcc_fb_build_schema@@Base+0x11d6>
  4254f9:	nop    DWORD PTR [rax+0x0]
  425500:	mov    rsi,QWORD PTR [r13+0x0]
  425504:	mov    rdx,r15
  425507:	sar    rdx,0x20
  42550b:	call   41aae0 <fb_scope_table_find@@Base>
  425510:	movabs rcx,0x100000000
  42551a:	add    r15,rcx
  42551d:	test   rax,rax
  425520:	jne    425470 <__flatcc_fb_build_schema@@Base+0x1120>
  425526:	mov    rdi,QWORD PTR [r12+0x260]
  42552e:	dec    rbx
  425531:	cmp    rbx,0x2
  425535:	jl     425540 <__flatcc_fb_build_schema@@Base+0x11f0>
  425537:	test   rdi,rdi
  42553a:	jne    425500 <__flatcc_fb_build_schema@@Base+0x11b0>
  42553c:	xor    eax,eax
  42553e:	jmp    425510 <__flatcc_fb_build_schema@@Base+0x11c0>
  425540:	test   rdi,rdi
  425543:	je     4255d0 <__flatcc_fb_build_schema@@Base+0x1280>
  425549:	xor    esi,esi
  42554b:	xor    edx,edx
  42554d:	call   41aae0 <fb_scope_table_find@@Base>
  425552:	jmp    425470 <__flatcc_fb_build_schema@@Base+0x1120>
  425557:	mov    rdi,QWORD PTR [r12+0x260]
  42555f:	test   rdi,rdi
  425562:	je     4255d0 <__flatcc_fb_build_schema@@Base+0x1280>
  425564:	test   eax,eax
  425566:	mov    ecx,0x0
  42556b:	cmove  rsi,rcx
  42556f:	movsxd rdx,eax
  425572:	call   41aae0 <fb_scope_table_find@@Base>
  425577:	test   rax,rax
  42557a:	je     4255d0 <__flatcc_fb_build_schema@@Base+0x1280>
  42557c:	add    rax,0x8
  425580:	movsxd rdx,r15d
  425583:	mov    rdi,rax
  425586:	mov    rsi,QWORD PTR [rsp+0x8]
  42558b:	call   41a170 <fb_symbol_table_find@@Base>
  425590:	mov    r15,rax
  425593:	test   rax,rax
  425596:	je     4255d0 <__flatcc_fb_build_schema@@Base+0x1280>
  425598:	movzx  eax,WORD PTR [r15+0x10]
  42559d:	test   ax,ax
  4255a0:	mov    r13,QWORD PTR [rsp+0x48]
  4255a5:	mov    ebx,DWORD PTR [rsp+0x4]
  4255a9:	je     4255c4 <__flatcc_fb_build_schema@@Base+0x1274>
  4255ab:	cmp    DWORD PTR [r12+0x11c],0x0
  4255b4:	je     42594d <__flatcc_fb_build_schema@@Base+0x15fd>
  4255ba:	cmp    ax,0x1
  4255be:	jne    425969 <__flatcc_fb_build_schema@@Base+0x1619>
  4255c4:	mov    QWORD PTR [r14+0x90],r15
  4255cb:	jmp    424f64 <__flatcc_fb_build_schema@@Base+0xc14>
  4255d0:	mov    rax,QWORD PTR [rsp+0x50]
  4255d5:	mov    rsi,QWORD PTR [rax+0x8]
  4255d9:	mov    r8,QWORD PTR [rax+0x10]
  4255dd:	mov    r9d,DWORD PTR [rax+0x18]
  4255e1:	mov    rdi,r12
  4255e4:	lea    rdx,[rip+0x23f4f]        # 44953a <fb_schema_table_deleted@@Base+0x2612>
  4255eb:	xor    ecx,ecx
  4255ed:	call   41c3a0 <__flatcc_error_report@@Base>
  4255f2:	mov    r13,QWORD PTR [rsp+0x48]
  4255f7:	mov    ebx,DWORD PTR [rsp+0x4]
  4255fb:	jmp    424f64 <__flatcc_fb_build_schema@@Base+0xc14>
  425600:	test   r15,r15
  425603:	je     425641 <__flatcc_fb_build_schema@@Base+0x12f1>
  425605:	movzx  eax,WORD PTR [r15+0x20]
  42560a:	cmp    ax,0x5
  42560e:	jne    4258f5 <__flatcc_fb_build_schema@@Base+0x15a5>
  425614:	mov    rax,QWORD PTR [r15+0x10]
  425618:	cmp    rax,QWORD PTR [r12+0x148]
  425620:	jae    42592c <__flatcc_fb_build_schema@@Base+0x15dc>
  425626:	movzx  eax,ax
  425629:	mov    QWORD PTR [r14+0x88],rax
  425630:	mov    rcx,QWORD PTR [rsp+0x40]
  425635:	cmp    rax,rcx
  425638:	cmova  rcx,rax
  42563c:	mov    QWORD PTR [rsp+0x40],rcx
  425641:	mov    DWORD PTR [rsp+0x4],0x0
  425649:	cmp    DWORD PTR [rsp+0x18],0x0
  42564e:	je     4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  425654:	mov    rax,QWORD PTR [r14+0x88]
  42565b:	mov    rcx,QWORD PTR [rsp+0x30]
  425660:	mov    cl,BYTE PTR [rcx+rax*1]
  425663:	test   cl,cl
  425665:	je     425985 <__flatcc_fb_build_schema@@Base+0x1635>
  42566b:	mov    DWORD PTR [rsp+0x8],edx
  42566f:	cmp    cl,0x2
  425672:	jne    425998 <__flatcc_fb_build_schema@@Base+0x1648>
  425678:	mov    rsi,QWORD PTR [r15+0x8]
  42567c:	mov    rdi,r12
  42567f:	lea    rdx,[rip+0x23ba2]        # 449228 <fb_schema_table_deleted@@Base+0x2300>
  425686:	xor    ecx,ecx
  425688:	xor    r8d,r8d
  42568b:	xor    r9d,r9d
  42568e:	call   41c3a0 <__flatcc_error_report@@Base>
  425693:	mov    DWORD PTR [rsp+0x4],0x1
  42569b:	lea    r15,[rip+0x2368e]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  4256a2:	jmp    425a7e <__flatcc_fb_build_schema@@Base+0x172e>
  4256a7:	mov    rsi,QWORD PTR [r14+0x8]
  4256ab:	mov    rcx,QWORD PTR [r14+0x18]
  4256af:	mov    rdi,r12
  4256b2:	lea    rdx,[rip+0x23a2b]        # 4490e4 <fb_schema_table_deleted@@Base+0x21bc>
  4256b9:	jmp    4257fe <__flatcc_fb_build_schema@@Base+0x14ae>
  4256be:	test   BYTE PTR [r14+0x71],0x1
  4256c3:	je     4256e0 <__flatcc_fb_build_schema@@Base+0x1390>
  4256c5:	mov    rsi,QWORD PTR [r14+0x8]
  4256c9:	mov    rdi,r12
  4256cc:	lea    rdx,[rip+0x23884]        # 448f57 <fb_schema_table_deleted@@Base+0x202f>
  4256d3:	xor    ecx,ecx
  4256d5:	xor    r8d,r8d
  4256d8:	xor    r9d,r9d
  4256db:	call   41c3a0 <__flatcc_error_report@@Base>
  4256e0:	mov    edx,DWORD PTR [r12+0x100]
  4256e8:	mov    WORD PTR [r14+0x28],0xe
  4256ef:	mov    QWORD PTR [r14+0x18],rbx
  4256f3:	mov    rax,QWORD PTR [rbx+0xb8]
  4256fa:	mov    QWORD PTR [r14+0x80],rax
  425701:	movzx  eax,WORD PTR [rbx+0xb0]
  425708:	mov    WORD PTR [r14+0x72],ax
  42570d:	movzx  eax,WORD PTR [rbx+0x10]
  425711:	cmp    DWORD PTR [rsp+0x4],0x0
  425716:	jne    425736 <__flatcc_fb_build_schema@@Base+0x13e6>
  425718:	cmp    ax,0x4
  42571c:	jne    425736 <__flatcc_fb_build_schema@@Base+0x13e6>
  42571e:	cmp    DWORD PTR [rsp+0x18],0x0
  425723:	jne    425731 <__flatcc_fb_build_schema@@Base+0x13e1>
  425725:	movzx  ecx,WORD PTR [rsp+0x20]
  42572a:	mov    QWORD PTR [r14+0x88],rcx
  425731:	inc    QWORD PTR [rsp+0x20]
  425736:	lea    rcx,[r14+0x48]
  42573a:	movzx  esi,WORD PTR [r14+0x58]
  42573f:	test   si,si
  425742:	je     425821 <__flatcc_fb_build_schema@@Base+0x14d1>
  425748:	cmp    ax,0x3
  42574c:	jne    4257ee <__flatcc_fb_build_schema@@Base+0x149e>
  425752:	cmp    si,0xd
  425756:	mov    DWORD PTR [rsp+0x8],edx
  42575a:	mov    QWORD PTR [rsp+0x38],rcx
  42575f:	jne    4258a5 <__flatcc_fb_build_schema@@Base+0x1555>
  425765:	mov    rsi,QWORD PTR [r13+0x18]
  425769:	mov    rdx,QWORD PTR [rcx]
  42576c:	mov    QWORD PTR [rsp+0x28],0x0
  425775:	test   rdx,rdx
  425778:	je     426072 <__flatcc_fb_build_schema@@Base+0x1d22>
  42577e:	mov    rdi,r12
  425781:	mov    QWORD PTR [rsp+0x48],rdx
  425786:	lea    rcx,[rsp+0x28]
  42578b:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  425790:	test   rax,rax
  425793:	je     42579c <__flatcc_fb_build_schema@@Base+0x144c>
  425795:	cmp    WORD PTR [rax+0x10],0x3
  42579a:	je     4257ae <__flatcc_fb_build_schema@@Base+0x145e>
  42579c:	mov    rax,QWORD PTR [rsp+0x48]
  4257a1:	cmp    QWORD PTR [rax],0x0
  4257a5:	mov    rax,rbx
  4257a8:	jne    425919 <__flatcc_fb_build_schema@@Base+0x15c9>
  4257ae:	add    rax,0x60
  4257b2:	mov    rcx,QWORD PTR [rsp+0x28]
  4257b7:	mov    rcx,QWORD PTR [rcx+0x8]
  4257bb:	mov    rsi,QWORD PTR [rcx]
  4257be:	mov    rdx,QWORD PTR [rcx+0x8]
  4257c2:	mov    rdi,rax
  4257c5:	call   41a170 <fb_symbol_table_find@@Base>
  4257ca:	test   rax,rax
  4257cd:	je     425919 <__flatcc_fb_build_schema@@Base+0x15c9>
  4257d3:	mov    rcx,QWORD PTR [rax+0x58]
  4257d7:	mov    rdx,QWORD PTR [rsp+0x38]
  4257dc:	mov    QWORD PTR [rdx+0x10],rcx
  4257e0:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  4257e5:	vmovups XMMWORD PTR [rdx],xmm0
  4257e9:	jmp    4258e1 <__flatcc_fb_build_schema@@Base+0x1591>
  4257ee:	mov    rsi,QWORD PTR [r14+0x8]
  4257f2:	mov    rdi,r12
  4257f5:	lea    rdx,[rip+0x237e3]        # 448fdf <fb_schema_table_deleted@@Base+0x20b7>
  4257fc:	xor    ecx,ecx
  4257fe:	xor    r8d,r8d
  425801:	xor    r9d,r9d
  425804:	call   41c3a0 <__flatcc_error_report@@Base>
  425809:	mov    WORD PTR [r14+0x28],0x1
  425810:	lea    r15,[rip+0x23519]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  425817:	mov    rbx,QWORD PTR [rsp+0x10]
  42581c:	jmp    424e30 <__flatcc_fb_build_schema@@Base+0xae0>
  425821:	cmp    ax,0x3
  425825:	jne    4253d2 <__flatcc_fb_build_schema@@Base+0x1082>
  42582b:	mov    DWORD PTR [rsp+0x8],edx
  42582f:	mov    WORD PTR [r14+0x58],0x5
  425836:	mov    QWORD PTR [r14+0x48],0x0
  42583e:	mov    edx,DWORD PTR [rbx+0x48]
  425841:	mov    rdi,r12
  425844:	mov    rsi,rbx
  425847:	mov    QWORD PTR [rsp+0x38],rcx
  42584c:	call   426eb0 <__flatcc_fb_coerce_scalar_type@@Base>
  425851:	test   eax,eax
  425853:	jne    425809 <__flatcc_fb_build_schema@@Base+0x14b9>
  425855:	mov    rsi,QWORD PTR [rsp+0x38]
  42585a:	cmp    DWORD PTR [r12+0x140],0x0
  425863:	je     4258e1 <__flatcc_fb_build_schema@@Base+0x1591>
  425865:	mov    rdi,QWORD PTR [r14+0x18]
  425869:	sub    rdi,0xffffffffffffff80
  42586d:	call   42d5e0 <fb_value_set_find_item@@Base>
  425872:	test   rax,rax
  425875:	jne    4258e1 <__flatcc_fb_build_schema@@Base+0x1591>
  425877:	mov    rsi,QWORD PTR [r14+0x8]
  42587b:	mov    rcx,QWORD PTR [rbx+0x8]
  42587f:	mov    rdi,r12
  425882:	lea    rdx,[rip+0x237e2]        # 44906b <fb_schema_table_deleted@@Base+0x2143>
  425889:	jmp    4257fe <__flatcc_fb_build_schema@@Base+0x14ae>
  42588e:	mov    rsi,QWORD PTR [r14+0x8]
  425892:	mov    rcx,QWORD PTR [rbx+0x8]
  425896:	mov    rdi,r12
  425899:	lea    rdx,[rip+0x23719]        # 448fb9 <fb_schema_table_deleted@@Base+0x2091>
  4258a0:	jmp    4257fe <__flatcc_fb_build_schema@@Base+0x14ae>
  4258a5:	mov    edx,DWORD PTR [rbx+0x48]
  4258a8:	mov    rdi,r12
  4258ab:	mov    rsi,r14
  4258ae:	call   426eb0 <__flatcc_fb_coerce_scalar_type@@Base>
  4258b3:	test   eax,eax
  4258b5:	jne    425809 <__flatcc_fb_build_schema@@Base+0x14b9>
  4258bb:	mov    rsi,QWORD PTR [rsp+0x38]
  4258c0:	cmp    DWORD PTR [r12+0x140],0x0
  4258c9:	je     4258e1 <__flatcc_fb_build_schema@@Base+0x1591>
  4258cb:	mov    rdi,QWORD PTR [r14+0x18]
  4258cf:	sub    rdi,0xffffffffffffff80
  4258d3:	call   42d5e0 <fb_value_set_find_item@@Base>
  4258d8:	test   rax,rax
  4258db:	je     425a2a <__flatcc_fb_build_schema@@Base+0x16da>
  4258e1:	mov    edx,DWORD PTR [rsp+0x8]
  4258e5:	cmp    DWORD PTR [rsp+0x4],0x0
  4258ea:	jne    4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  4258f0:	jmp    425357 <__flatcc_fb_build_schema@@Base+0x1007>
  4258f5:	mov    DWORD PTR [rsp+0x8],edx
  4258f9:	mov    rsi,QWORD PTR [r15+0x8]
  4258fd:	cmp    ax,0x4
  425901:	lea    rbx,[rip+0x23428]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  425908:	mov    rdi,r12
  42590b:	jne    425941 <__flatcc_fb_build_schema@@Base+0x15f1>
  42590d:	lea    rdx,[rip+0x238d8]        # 4491ec <fb_schema_table_deleted@@Base+0x22c4>
  425914:	jmp    425a66 <__flatcc_fb_build_schema@@Base+0x1716>
  425919:	mov    rsi,QWORD PTR [r14+0x48]
  42591d:	mov    rdi,r12
  425920:	lea    rdx,[rip+0x236e4]        # 44900b <fb_schema_table_deleted@@Base+0x20e3>
  425927:	jmp    4253bb <__flatcc_fb_build_schema@@Base+0x106b>
  42592c:	mov    rsi,QWORD PTR [r14+0x8]
  425930:	mov    rdi,r12
  425933:	mov    ebx,edx
  425935:	lea    rdx,[rip+0x23892]        # 4491ce <fb_schema_table_deleted@@Base+0x22a6>
  42593c:	jmp    425384 <__flatcc_fb_build_schema@@Base+0x1034>
  425941:	lea    rdx,[rip+0x238c4]        # 44920c <fb_schema_table_deleted@@Base+0x22e4>
  425948:	jmp    425a66 <__flatcc_fb_build_schema@@Base+0x1716>
  42594d:	mov    rax,QWORD PTR [rsp+0x50]
  425952:	mov    rsi,QWORD PTR [rax+0x8]
  425956:	mov    rcx,QWORD PTR [r15+0x8]
  42595a:	mov    rdi,r12
  42595d:	lea    rdx,[rip+0x23bf1]        # 449555 <fb_schema_table_deleted@@Base+0x262d>
  425964:	jmp    424f59 <__flatcc_fb_build_schema@@Base+0xc09>
  425969:	mov    rax,QWORD PTR [rsp+0x50]
  42596e:	mov    rsi,QWORD PTR [rax+0x8]
  425972:	mov    rcx,QWORD PTR [r15+0x8]
  425976:	mov    rdi,r12
  425979:	lea    rdx,[rip+0x23c00]        # 449580 <fb_schema_table_deleted@@Base+0x2658>
  425980:	jmp    424f59 <__flatcc_fb_build_schema@@Base+0xc09>
  425985:	mov    rcx,QWORD PTR [rsp+0x30]
  42598a:	mov    BYTE PTR [rcx+rax*1],0x1
  42598e:	test   rbx,rbx
  425991:	jne    4259c0 <__flatcc_fb_build_schema@@Base+0x1670>
  425993:	jmp    4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  425998:	mov    rsi,QWORD PTR [r15+0x8]
  42599c:	mov    rdi,r12
  42599f:	lea    rdx,[rip+0x238b8]        # 44925e <fb_schema_table_deleted@@Base+0x2336>
  4259a6:	xor    ecx,ecx
  4259a8:	xor    r8d,r8d
  4259ab:	xor    r9d,r9d
  4259ae:	call   41c3a0 <__flatcc_error_report@@Base>
  4259b3:	mov    edx,DWORD PTR [rsp+0x8]
  4259b7:	test   rbx,rbx
  4259ba:	je     4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  4259c0:	cmp    WORD PTR [rbx+0x10],0x4
  4259c5:	jne    4253dd <__flatcc_fb_build_schema@@Base+0x108d>
  4259cb:	mov    DWORD PTR [rsp+0x8],edx
  4259cf:	movzx  eax,WORD PTR [r14+0x28]
  4259d4:	mov    rcx,QWORD PTR [r14+0x88]
  4259db:	cmp    rcx,0x1
  4259df:	lea    rbx,[rip+0x2334a]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  4259e6:	ja     425a00 <__flatcc_fb_build_schema@@Base+0x16b0>
  4259e8:	cmp    ax,0xb
  4259ec:	mov    rsi,QWORD PTR [r15+0x8]
  4259f0:	lea    rdx,[rip+0x238e7]        # 4492de <fb_schema_table_deleted@@Base+0x23b6>
  4259f7:	lea    rax,[rip+0x23890]        # 44928e <fb_schema_table_deleted@@Base+0x2366>
  4259fe:	jmp    425a5f <__flatcc_fb_build_schema@@Base+0x170f>
  425a00:	mov    rdx,QWORD PTR [rsp+0x30]
  425a05:	mov    dl,BYTE PTR [rcx+rdx*1-0x1]
  425a09:	test   dl,dl
  425a0b:	je     425a3d <__flatcc_fb_build_schema@@Base+0x16ed>
  425a0d:	cmp    dl,0x2
  425a10:	jne    425a49 <__flatcc_fb_build_schema@@Base+0x16f9>
  425a12:	cmp    ax,0xb
  425a16:	mov    rsi,QWORD PTR [r15+0x8]
  425a1a:	lea    rdx,[rip+0x23967]        # 449388 <fb_schema_table_deleted@@Base+0x2460>
  425a21:	lea    rax,[rip+0x238ff]        # 449327 <fb_schema_table_deleted@@Base+0x23ff>
  425a28:	jmp    425a5f <__flatcc_fb_build_schema@@Base+0x170f>
  425a2a:	mov    rsi,QWORD PTR [r14+0x8]
  425a2e:	mov    rdi,r12
  425a31:	lea    rdx,[rip+0x23603]        # 44903b <fb_schema_table_deleted@@Base+0x2113>
  425a38:	jmp    4257fc <__flatcc_fb_build_schema@@Base+0x14ac>
  425a3d:	mov    rax,QWORD PTR [rsp+0x30]
  425a42:	mov    BYTE PTR [rax+rcx*1-0x1],0x2
  425a47:	jmp    425a7b <__flatcc_fb_build_schema@@Base+0x172b>
  425a49:	cmp    ax,0xb
  425a4d:	mov    rsi,QWORD PTR [r15+0x8]
  425a51:	lea    rdx,[rip+0x239df]        # 449437 <fb_schema_table_deleted@@Base+0x250f>
  425a58:	lea    rax,[rip+0x23983]        # 4493e2 <fb_schema_table_deleted@@Base+0x24ba>
  425a5f:	cmove  rdx,rax
  425a63:	mov    rdi,r12
  425a66:	xor    ecx,ecx
  425a68:	xor    r8d,r8d
  425a6b:	xor    r9d,r9d
  425a6e:	call   41c3a0 <__flatcc_error_report@@Base>
  425a73:	mov    DWORD PTR [rsp+0x4],0x1
  425a7b:	mov    r15,rbx
  425a7e:	mov    edx,DWORD PTR [rsp+0x8]
  425a82:	jmp    4253e4 <__flatcc_fb_build_schema@@Base+0x1094>
  425a87:	mov    ecx,DWORD PTR [rsp+0x4]
  425a8b:	test   ecx,ecx
  425a8d:	je     425aeb <__flatcc_fb_build_schema@@Base+0x179b>
  425a8f:	xor    eax,eax
  425a91:	mov    rdx,QWORD PTR [rsp+0x20]
  425a96:	mov    ebx,ecx
  425a98:	mov    ecx,DWORD PTR [rsp+0x1c]
  425a9c:	cmp    QWORD PTR [rsp+0x40],rdx
  425aa1:	jae    425b0a <__flatcc_fb_build_schema@@Base+0x17ba>
  425aa3:	jmp    425bcd <__flatcc_fb_build_schema@@Base+0x187d>
  425aa8:	xor    eax,eax
  425aaa:	mov    QWORD PTR [rsp+0x30],rax
  425aaf:	xor    ecx,ecx
  425ab1:	xor    eax,eax
  425ab3:	mov    QWORD PTR [rsp+0x40],rax
  425ab8:	mov    DWORD PTR [rsp+0x18],0x0
  425ac0:	xor    edx,edx
  425ac2:	jmp    425af4 <__flatcc_fb_build_schema@@Base+0x17a4>
  425ac4:	mov    rsi,QWORD PTR [r14+0x8]
  425ac8:	mov    rdi,r12
  425acb:	lea    rdx,[rip+0x23280]        # 448d52 <fb_schema_table_deleted@@Base+0x1e2a>
  425ad2:	xor    ecx,ecx
  425ad4:	xor    r8d,r8d
  425ad7:	xor    r9d,r9d
  425ada:	call   41c3a0 <__flatcc_error_report@@Base>
  425adf:	mov    WORD PTR [r13+0x58],0x1
  425ae6:	jmp    424b80 <__flatcc_fb_build_schema@@Base+0x830>
  425aeb:	mov    ecx,DWORD PTR [rsp+0x1c]
  425aef:	mov    rdx,QWORD PTR [rsp+0x20]
  425af4:	mov    QWORD PTR [r13+0xa8],rdx
  425afb:	mov    al,0x1
  425afd:	xor    ebx,ebx
  425aff:	cmp    QWORD PTR [rsp+0x40],rdx
  425b04:	jb     425bcd <__flatcc_fb_build_schema@@Base+0x187d>
  425b0a:	test   rdx,rdx
  425b0d:	je     425bcd <__flatcc_fb_build_schema@@Base+0x187d>
  425b13:	test   al,al
  425b15:	je     425bcd <__flatcc_fb_build_schema@@Base+0x187d>
  425b1b:	cmp    DWORD PTR [rsp+0x18],0x0
  425b20:	je     425bcd <__flatcc_fb_build_schema@@Base+0x187d>
  425b26:	mov    ebx,0x1
  425b2b:	cmp    QWORD PTR [rsp+0x40],0x0
  425b31:	je     425bcd <__flatcc_fb_build_schema@@Base+0x187d>
  425b37:	mov    DWORD PTR [rsp+0x1c],ecx
  425b3b:	mov    r14d,0xa
  425b41:	xor    ebx,ebx
  425b43:	jmp    425b5a <__flatcc_fb_build_schema@@Base+0x180a>
  425b45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b4f:	nop
  425b50:	inc    rbx
  425b53:	cmp    QWORD PTR [rsp+0x40],rbx
  425b58:	je     425bbd <__flatcc_fb_build_schema@@Base+0x186d>
  425b5a:	mov    rax,QWORD PTR [rsp+0x30]
  425b5f:	cmp    BYTE PTR [rax+rbx*1],0x0
  425b63:	jne    425b50 <__flatcc_fb_build_schema@@Base+0x1800>
  425b65:	test   r14d,r14d
  425b68:	je     425ba2 <__flatcc_fb_build_schema@@Base+0x1852>
  425b6a:	dec    r14d
  425b6d:	lea    r15,[rsp+0xc0]
  425b75:	mov    rdi,r15
  425b78:	lea    rsi,[rip+0x2394d]        # 4494cc <fb_schema_table_deleted@@Base+0x25a4>
  425b7f:	mov    rdx,rbx
  425b82:	xor    eax,eax
  425b84:	call   406210 <sprintf@plt>
  425b89:	mov    rsi,QWORD PTR [r13+0x8]
  425b8d:	mov    rdi,r12
  425b90:	mov    rdx,r15
  425b93:	xor    ecx,ecx
  425b95:	xor    r8d,r8d
  425b98:	xor    r9d,r9d
  425b9b:	call   41c3a0 <__flatcc_error_report@@Base>
  425ba0:	jmp    425b50 <__flatcc_fb_build_schema@@Base+0x1800>
  425ba2:	mov    rsi,QWORD PTR [r13+0x8]
  425ba6:	mov    rdi,r12
  425ba9:	lea    rdx,[rip+0x23906]        # 4494b6 <fb_schema_table_deleted@@Base+0x258e>
  425bb0:	xor    ecx,ecx
  425bb2:	xor    r8d,r8d
  425bb5:	xor    r9d,r9d
  425bb8:	call   41c3a0 <__flatcc_error_report@@Base>
  425bbd:	lea    r15,[rip+0x2316c]        # 448d30 <fb_schema_table_deleted@@Base+0x1e08>
  425bc4:	mov    ebx,0x1
  425bc9:	mov    ecx,DWORD PTR [rsp+0x1c]
  425bcd:	xor    eax,eax
  425bcf:	test   ecx,ecx
  425bd1:	je     425be8 <__flatcc_fb_build_schema@@Base+0x1898>
  425bd3:	or     BYTE PTR [r13+0x12],0x8
  425bd8:	cmp    ecx,0x2
  425bdb:	jl     425be8 <__flatcc_fb_build_schema@@Base+0x1898>
  425bdd:	cmp    DWORD PTR [r12+0x108],0x0
  425be6:	je     425bf5 <__flatcc_fb_build_schema@@Base+0x18a5>
  425be8:	test   ebx,ebx
  425bea:	jne    425c19 <__flatcc_fb_build_schema@@Base+0x18c9>
  425bec:	test   eax,eax
  425bee:	jne    425c19 <__flatcc_fb_build_schema@@Base+0x18c9>
  425bf0:	jmp    424b80 <__flatcc_fb_build_schema@@Base+0x830>
  425bf5:	mov    rsi,QWORD PTR [r13+0x8]
  425bf9:	mov    rdi,r12
  425bfc:	lea    rdx,[rip+0x22e9f]        # 448aa2 <fb_schema_table_deleted@@Base+0x1b7a>
  425c03:	xor    ecx,ecx
  425c05:	xor    r8d,r8d
  425c08:	xor    r9d,r9d
  425c0b:	call   41c3a0 <__flatcc_error_report@@Base>
  425c10:	mov    eax,0xffffffff
  425c15:	test   ebx,ebx
  425c17:	je     425bec <__flatcc_fb_build_schema@@Base+0x189c>
  425c19:	mov    WORD PTR [r13+0x58],0x1
  425c20:	jmp    424b80 <__flatcc_fb_build_schema@@Base+0x830>
  425c25:	mov    rax,QWORD PTR [r12+0x240]
  425c2d:	test   rax,rax
  425c30:	je     425c5b <__flatcc_fb_build_schema@@Base+0x190b>
  425c32:	xor    edx,edx
  425c34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c3e:	xchg   ax,ax
  425c40:	mov    rcx,rax
  425c43:	mov    rax,QWORD PTR [rax+0xc0]
  425c4a:	mov    QWORD PTR [rcx+0xc0],rdx
  425c51:	mov    rdx,rcx
  425c54:	test   rax,rax
  425c57:	jne    425c40 <__flatcc_fb_build_schema@@Base+0x18f0>
  425c59:	jmp    425c5d <__flatcc_fb_build_schema@@Base+0x190d>
  425c5b:	xor    ecx,ecx
  425c5d:	mov    QWORD PTR [r12+0x240],rcx
  425c65:	mov    rax,QWORD PTR [r12+0x238]
  425c6d:	test   rax,rax
  425c70:	je     425edd <__flatcc_fb_build_schema@@Base+0x1b8d>
  425c76:	lea    r9,[rsp+0x100]
  425c7e:	vxorps xmm0,xmm0,xmm0
  425c82:	mov    edx,0x7
  425c87:	mov    r11d,0x8680
  425c8d:	lea    r8,[rsp+0x28]
  425c92:	lea    r10,[rsp+0xc0]
  425c9a:	cmp    WORD PTR [rax+0x10],0x0
  425c9f:	jne    425cc0 <__flatcc_fb_build_schema@@Base+0x1970>
  425ca1:	jmp    425cd3 <__flatcc_fb_build_schema@@Base+0x1983>
  425ca3:	mov    QWORD PTR [rcx],0x0
  425caa:	mov    rcx,QWORD PTR [rsp+0xc0]
  425cb2:	mov    QWORD PTR [rax+0x30],rcx
  425cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425cc0:	mov    rax,QWORD PTR [rax]
  425cc3:	test   rax,rax
  425cc6:	je     425edd <__flatcc_fb_build_schema@@Base+0x1b8d>
  425ccc:	cmp    WORD PTR [rax+0x10],0x0
  425cd1:	jne    425cc0 <__flatcc_fb_build_schema@@Base+0x1970>
  425cd3:	test   BYTE PTR [rax+0xa4],0x8
  425cda:	mov    rdi,QWORD PTR [rax+0x28]
  425cde:	jne    425df9 <__flatcc_fb_build_schema@@Base+0x1aa9>
  425ce4:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  425ced:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  425cf6:	mov    QWORD PTR [rsp+0x100],0x0
  425d02:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  425d0b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  425d11:	mov    QWORD PTR [rsp+0xa0],0x0
  425d1d:	test   rdi,rdi
  425d20:	je     425e3d <__flatcc_fb_build_schema@@Base+0x1aed>
  425d26:	mov    rcx,rdi
  425d29:	jmp    425d56 <__flatcc_fb_build_schema@@Base+0x1a06>
  425d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  425d30:	lea    rsi,[rsp+rbx*8]
  425d34:	add    rsi,0xc0
  425d3b:	mov    QWORD PTR [rsi],rcx
  425d3e:	lea    rsi,[rcx+0x98]
  425d45:	mov    QWORD PTR [rsp+rbx*8+0x60],rsi
  425d4a:	mov    rcx,QWORD PTR [rcx]
  425d4d:	test   rcx,rcx
  425d50:	je     425e3d <__flatcc_fb_build_schema@@Base+0x1aed>
  425d56:	movzx  ebx,WORD PTR [rcx+0x28]
  425d5a:	cmp    bx,0xf
  425d5e:	ja     425deb <__flatcc_fb_build_schema@@Base+0x1a9b>
  425d64:	bt     r11d,ebx
  425d68:	jae    425db0 <__flatcc_fb_build_schema@@Base+0x1a60>
  425d6a:	movzx  ebx,WORD PTR [r12+0x12c]
  425d73:	test   bx,bx
  425d76:	je     425fc9 <__flatcc_fb_build_schema@@Base+0x1c79>
  425d7c:	movzx  esi,bx
  425d7f:	shr    esi,1
  425d81:	lzcnt  si,si
  425d86:	mov    ebx,0x10
  425d8b:	sub    ebx,esi
  425d8d:	cmp    bx,0x7
  425d91:	cmovae ebx,edx
  425d94:	movzx  ebx,bx
  425d97:	cmp    QWORD PTR [rsp+rbx*8+0xc0],0x0
  425da0:	je     425d30 <__flatcc_fb_build_schema@@Base+0x19e0>
  425da2:	mov    rsi,QWORD PTR [rsp+rbx*8+0x60]
  425da7:	jmp    425d3b <__flatcc_fb_build_schema@@Base+0x19eb>
  425da9:	nop    DWORD PTR [rax+0x0]
  425db0:	cmp    bx,0xe
  425db4:	jne    425de1 <__flatcc_fb_build_schema@@Base+0x1a91>
  425db6:	mov    rbx,QWORD PTR [rcx+0x18]
  425dba:	movzx  esi,WORD PTR [rbx+0x10]
  425dbe:	cmp    si,0x1
  425dc2:	je     425dd0 <__flatcc_fb_build_schema@@Base+0x1a80>
  425dc4:	cmp    si,0x4
  425dc8:	je     425d6a <__flatcc_fb_build_schema@@Base+0x1a1a>
  425dca:	cmp    si,0x3
  425dce:	jne    425d6a <__flatcc_fb_build_schema@@Base+0x1a1a>
  425dd0:	movzx  ebx,WORD PTR [rbx+0xb0]
  425dd7:	test   bx,bx
  425dda:	jne    425d7c <__flatcc_fb_build_schema@@Base+0x1a2c>
  425ddc:	jmp    425fc9 <__flatcc_fb_build_schema@@Base+0x1c79>
  425de1:	cmp    bx,0x1
  425de5:	je     425e95 <__flatcc_fb_build_schema@@Base+0x1b45>
  425deb:	movzx  ebx,WORD PTR [rcx+0x72]
  425def:	test   bx,bx
  425df2:	jne    425d7c <__flatcc_fb_build_schema@@Base+0x1a2c>
  425df4:	jmp    425fc9 <__flatcc_fb_build_schema@@Base+0x1c79>
  425df9:	mov    QWORD PTR [rsp+0xc0],0x0
  425e05:	mov    rcx,r10
  425e08:	test   rdi,rdi
  425e0b:	je     425ca3 <__flatcc_fb_build_schema@@Base+0x1953>
  425e11:	mov    rcx,r10
  425e14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e1e:	xchg   ax,ax
  425e20:	mov    QWORD PTR [rcx],rdi
  425e23:	mov    rcx,rdi
  425e26:	mov    rsi,QWORD PTR [rdi]
  425e29:	add    rcx,0x98
  425e30:	mov    rdi,rsi
  425e33:	test   rsi,rsi
  425e36:	jne    425e20 <__flatcc_fb_build_schema@@Base+0x1ad0>
  425e38:	jmp    425ca3 <__flatcc_fb_build_schema@@Base+0x1953>
  425e3d:	mov    QWORD PTR [rsp+0xa0],r9
  425e45:	mov    cx,0x8
  425e49:	jmp    425e6a <__flatcc_fb_build_schema@@Base+0x1b1a>
  425e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  425e50:	xor    ecx,ecx
  425e52:	movzx  esi,cx
  425e55:	mov    rbx,QWORD PTR [rsp+rsi*8+0xc0]
  425e5d:	mov    rdi,QWORD PTR [rsp+rdi*8+0x60]
  425e62:	mov    QWORD PTR [rdi],rbx
  425e65:	test   si,si
  425e68:	je     425e8b <__flatcc_fb_build_schema@@Base+0x1b3b>
  425e6a:	movzx  edi,cx
  425e6d:	mov    rcx,rdi
  425e70:	test   rcx,rcx
  425e73:	je     425e50 <__flatcc_fb_build_schema@@Base+0x1b00>
  425e75:	lea    esi,[rcx-0x1]
  425e78:	movzx  esi,si
  425e7b:	dec    rcx
  425e7e:	cmp    QWORD PTR [rsp+rsi*8+0xc0],0x0
  425e87:	je     425e70 <__flatcc_fb_build_schema@@Base+0x1b20>
  425e89:	jmp    425e52 <__flatcc_fb_build_schema@@Base+0x1b02>
  425e8b:	mov    rsi,QWORD PTR [rsp+0x100]
  425e93:	jmp    425ed4 <__flatcc_fb_build_schema@@Base+0x1b84>
  425e95:	mov    QWORD PTR [rsp+0x28],0x0
  425e9e:	mov    rcx,r8
  425ea1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425eab:	nop    DWORD PTR [rax+rax*1+0x0]
  425eb0:	mov    QWORD PTR [rcx],rdi
  425eb3:	mov    rcx,rdi
  425eb6:	mov    rsi,QWORD PTR [rdi]
  425eb9:	add    rcx,0x98
  425ec0:	mov    rdi,rsi
  425ec3:	test   rsi,rsi
  425ec6:	jne    425eb0 <__flatcc_fb_build_schema@@Base+0x1b60>
  425ec8:	mov    rsi,QWORD PTR [rsp+0x28]
  425ecd:	mov    QWORD PTR [rcx],0x0
  425ed4:	mov    QWORD PTR [rax+0x30],rsi
  425ed8:	jmp    425cc0 <__flatcc_fb_build_schema@@Base+0x1970>
  425edd:	mov    rdx,QWORD PTR [r12+0x248]
  425ee5:	test   rdx,rdx
  425ee8:	je     425f32 <__flatcc_fb_build_schema@@Base+0x1be2>
  425eea:	mov    rsi,QWORD PTR [r12+0x258]
  425ef2:	mov    rdi,r12
  425ef5:	xor    ecx,ecx
  425ef7:	vzeroupper 
  425efa:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  425eff:	mov    QWORD PTR [r12+0x250],rax
  425f07:	test   rax,rax
  425f0a:	je     425f5b <__flatcc_fb_build_schema@@Base+0x1c0b>
  425f0c:	cmp    DWORD PTR [r12+0x11c],0x0
  425f15:	movzx  ecx,WORD PTR [rax+0x10]
  425f19:	je     425f6c <__flatcc_fb_build_schema@@Base+0x1c1c>
  425f1b:	cmp    cx,0x2
  425f1f:	jb     425f8c <__flatcc_fb_build_schema@@Base+0x1c3c>
  425f21:	mov    rsi,QWORD PTR [r12+0x248]
  425f29:	lea    rdx,[rip+0x223b8]        # 4482e8 <fb_schema_table_deleted@@Base+0x13c0>
  425f30:	jmp    425f80 <__flatcc_fb_build_schema@@Base+0x1c30>
  425f32:	cmp    DWORD PTR [r12+0x13c],0x0
  425f3b:	je     425fa0 <__flatcc_fb_build_schema@@Base+0x1c50>
  425f3d:	lea    rdx,[rip+0x22379]        # 4482bd <fb_schema_table_deleted@@Base+0x1395>
  425f44:	mov    rdi,r12
  425f47:	xor    esi,esi
  425f49:	xor    ecx,ecx
  425f4b:	xor    r8d,r8d
  425f4e:	xor    r9d,r9d
  425f51:	vzeroupper 
  425f54:	call   41c3a0 <__flatcc_error_report@@Base>
  425f59:	jmp    425fa0 <__flatcc_fb_build_schema@@Base+0x1c50>
  425f5b:	mov    rsi,QWORD PTR [r12+0x248]
  425f63:	lea    rdx,[rip+0x2236a]        # 4482d4 <fb_schema_table_deleted@@Base+0x13ac>
  425f6a:	jmp    425f80 <__flatcc_fb_build_schema@@Base+0x1c30>
  425f6c:	test   cx,cx
  425f6f:	je     425f8c <__flatcc_fb_build_schema@@Base+0x1c3c>
  425f71:	mov    rsi,QWORD PTR [r12+0x248]
  425f79:	lea    rdx,[rip+0x2238e]        # 44830e <fb_schema_table_deleted@@Base+0x13e6>
  425f80:	mov    rdi,r12
  425f83:	xor    ecx,ecx
  425f85:	call   41c5d0 <error_ref_sym@@Base>
  425f8a:	jmp    425f94 <__flatcc_fb_build_schema@@Base+0x1c44>
  425f8c:	mov    QWORD PTR [r12+0x250],rax
  425f94:	mov    QWORD PTR [r12+0x248],0x0
  425fa0:	mov    eax,DWORD PTR [r12+0xd0]
  425fa8:	xor    ecx,ecx
  425faa:	test   eax,eax
  425fac:	sete   cl
  425faf:	mov    DWORD PTR [r12+0xe4],ecx
  425fb7:	lea    rsp,[rbp-0x28]
  425fbb:	pop    rbx
  425fbc:	pop    r12
  425fbe:	pop    r13
  425fc0:	pop    r14
  425fc2:	pop    r15
  425fc4:	pop    rbp
  425fc5:	vzeroupper 
  425fc8:	ret    
  425fc9:	lea    rdi,[rip+0x2381d]        # 4497ed <fb_schema_table_deleted@@Base+0x28c5>
  425fd0:	lea    rsi,[rip+0x221ef]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  425fd7:	lea    rcx,[rip+0x23815]        # 4497f3 <fb_schema_table_deleted@@Base+0x28cb>
  425fde:	mov    edx,0x5f1
  425fe3:	vzeroupper 
  425fe6:	call   406100 <__assert_fail@plt>
  425feb:	mov    rax,QWORD PTR [rip+0x2c006]        # 451ff8 <stderr@GLIBC_2.2.5>
  425ff2:	mov    rcx,QWORD PTR [rax]
  425ff5:	lea    rdi,[rip+0x9820]        # 42f81c <_IO_stdin_used@@Base+0x181c>
  425ffc:	mov    esi,0x22
  426001:	mov    edx,0x1
  426006:	call   406230 <fwrite@plt>
  42600b:	mov    edi,0x1
  426010:	call   406220 <exit@plt>
  426015:	lea    rdi,[rip+0x22174]        # 448190 <fb_schema_table_deleted@@Base+0x1268>
  42601c:	lea    rsi,[rip+0x221a3]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426023:	lea    rcx,[rip+0x221ff]        # 448229 <fb_schema_table_deleted@@Base+0x1301>
  42602a:	mov    edx,0x616
  42602f:	call   406100 <__assert_fail@plt>
  426034:	lea    rdi,[rip+0x22ce6]        # 448d21 <fb_schema_table_deleted@@Base+0x1df9>
  42603b:	lea    rsi,[rip+0x22184]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426042:	lea    rcx,[rip+0x22ca1]        # 448cea <fb_schema_table_deleted@@Base+0x1dc2>
  426049:	mov    edx,0x302
  42604e:	call   406100 <__assert_fail@plt>
  426053:	lea    rdi,[rip+0x22cc7]        # 448d21 <fb_schema_table_deleted@@Base+0x1df9>
  42605a:	lea    rsi,[rip+0x22165]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426061:	lea    rcx,[rip+0x235b5]        # 44961d <fb_schema_table_deleted@@Base+0x26f5>
  426068:	mov    edx,0x469
  42606d:	call   406100 <__assert_fail@plt>
  426072:	lea    rdi,[rip+0x2353e]        # 4495b7 <fb_schema_table_deleted@@Base+0x268f>
  426079:	lea    rsi,[rip+0x22146]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426080:	lea    rcx,[rip+0x23534]        # 4495bb <fb_schema_table_deleted@@Base+0x2693>
  426087:	mov    edx,0x15b
  42608c:	call   406100 <__assert_fail@plt>
  426091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42609b:	nop    DWORD PTR [rax+rax*1+0x0]
  4260a0:	push   rbp
  4260a1:	push   r15
  4260a3:	push   r14
  4260a5:	push   r13
  4260a7:	push   r12
  4260a9:	push   rbx
  4260aa:	sub    rsp,0xb8
  4260b1:	mov    r15,rsi
  4260b4:	mov    r14,rdi
  4260b7:	movzx  r12d,WORD PTR [rsi+0x10]
  4260bc:	cmp    r12w,0x4
  4260c1:	jne    4260db <__flatcc_fb_build_schema@@Base+0x1d8b>
  4260c3:	cmp    WORD PTR [r15+0x58],0x0
  4260c9:	je     426111 <__flatcc_fb_build_schema@@Base+0x1dc1>
  4260cb:	mov    rsi,QWORD PTR [r15+0x8]
  4260cf:	lea    rdx,[rip+0x22337]        # 44840d <fb_schema_table_deleted@@Base+0x14e5>
  4260d6:	jmp    42660e <__flatcc_fb_build_schema@@Base+0x22be>
  4260db:	cmp    r12w,0x3
  4260e0:	jne    4266e6 <__flatcc_fb_build_schema@@Base+0x2396>
  4260e6:	movzx  eax,WORD PTR [r15+0x58]
  4260eb:	cmp    ax,0x8
  4260ef:	je     426131 <__flatcc_fb_build_schema@@Base+0x1de1>
  4260f1:	test   ax,ax
  4260f4:	jne    426603 <__flatcc_fb_build_schema@@Base+0x22b3>
  4260fa:	mov    WORD PTR [r15+0x58],0x1
  426101:	mov    rsi,QWORD PTR [r15+0x8]
  426105:	lea    rdx,[rip+0x222ba]        # 4483c6 <fb_schema_table_deleted@@Base+0x149e>
  42610c:	jmp    42660e <__flatcc_fb_build_schema@@Base+0x22be>
  426111:	mov    WORD PTR [r15+0x58],0x8
  426118:	mov    DWORD PTR [r15+0x48],0x4
  426120:	mov    QWORD PTR [r15+0xb8],0x1
  42612b:	mov    ax,0x1
  42612f:	jmp    42616e <__flatcc_fb_build_schema@@Base+0x1e1e>
  426131:	mov    rax,QWORD PTR [r15+0x48]
  426135:	mov    rcx,QWORD PTR [rax+0x20]
  426139:	lea    rdx,[rcx+0x3e7]
  426140:	xor    eax,eax
  426142:	cmp    rdx,0x1b
  426146:	ja     426156 <__flatcc_fb_build_schema@@Base+0x1e06>
  426148:	lea    rax,[rip+0x21f61]        # 4480b0 <fb_schema_table_deleted@@Base+0x1188>
  42614f:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  426156:	mov    DWORD PTR [r15+0x48],eax
  42615a:	mov    eax,eax
  42615c:	lea    rcx,[rip+0x21f1d]        # 448080 <fb_schema_table_deleted@@Base+0x1158>
  426163:	movsxd rax,DWORD PTR [rcx+rax*4]
  426167:	mov    QWORD PTR [r15+0xb8],rax
  42616e:	mov    WORD PTR [r15+0xb0],ax
  426176:	mov    rsi,QWORD PTR [r15+0x38]
  42617a:	lea    rcx,[rsp+0x50]
  42617f:	mov    rdi,r14
  426182:	mov    edx,0x20
  426187:	call   426b30 <__flatcc_fb_build_schema@@Base+0x27e0>
  42618c:	mov    WORD PTR [r15+0xa4],ax
  426194:	mov    DWORD PTR [rsp+0x34],0x0
  42619c:	test   al,0x20
  42619e:	je     4261b8 <__flatcc_fb_build_schema@@Base+0x1e68>
  4261a0:	mov    WORD PTR [rsp+0x20],0x5
  4261a7:	mov    QWORD PTR [rsp+0x10],0x0
  4261b0:	mov    DWORD PTR [rsp+0x34],0x1
  4261b8:	mov    edx,DWORD PTR [r15+0x48]
  4261bc:	cmp    edx,0x5
  4261bf:	jne    4261cf <__flatcc_fb_build_schema@@Base+0x1e7f>
  4261c1:	mov    BYTE PTR [rsp+0x10],0x0
  4261c6:	mov    WORD PTR [rsp+0x20],0x6
  4261cd:	jmp    426204 <__flatcc_fb_build_schema@@Base+0x1eb4>
  4261cf:	mov    QWORD PTR [rsp+0x10],0x0
  4261d8:	mov    WORD PTR [rsp+0x20],0x4
  4261df:	lea    rcx,[rsp+0x10]
  4261e4:	mov    rdi,r14
  4261e7:	mov    rsi,r15
  4261ea:	call   426eb0 <__flatcc_fb_coerce_scalar_type@@Base>
  4261ef:	test   eax,eax
  4261f1:	je     426204 <__flatcc_fb_build_schema@@Base+0x1eb4>
  4261f3:	lea    rdx,[rip+0x22252]        # 44844c <fb_schema_table_deleted@@Base+0x1524>
  4261fa:	mov    rdi,r14
  4261fd:	xor    esi,esi
  4261ff:	jmp    426611 <__flatcc_fb_build_schema@@Base+0x22c1>
  426204:	mov    rbx,QWORD PTR [r15+0x28]
  426208:	test   rbx,rbx
  42620b:	je     426637 <__flatcc_fb_build_schema@@Base+0x22e7>
  426211:	mov    rcx,QWORD PTR [rsp+0x10]
  426216:	mov    rax,rcx
  426219:	mov    QWORD PTR [rsp+0x28],rcx
  42621e:	shr    rcx,0x8
  426222:	mov    QWORD PTR [rsp+0x38],rcx
  426227:	lea    r13,[r15+0x60]
  42622b:	lea    rax,[r14+0x80]
  426232:	mov    QWORD PTR [rsp+0x40],rax
  426237:	lea    rax,[r15+0x80]
  42623e:	mov    QWORD PTR [rsp+0x48],rax
  426243:	mov    ebp,0x1
  426248:	mov    WORD PTR [rsp+0xe],r12w
  42624e:	jmp    426279 <__flatcc_fb_build_schema@@Base+0x1f29>
  426250:	mov    rdi,r14
  426253:	lea    rdx,[rip+0x2224d]        # 4484a7 <fb_schema_table_deleted@@Base+0x157f>
  42625a:	xor    r8d,r8d
  42625d:	xor    r9d,r9d
  426260:	call   41c3a0 <__flatcc_error_report@@Base>
  426265:	mov    WORD PTR [rbx+0x28],0x1
  42626b:	mov    rbx,QWORD PTR [rbx]
  42626e:	xor    ebp,ebp
  426270:	test   rbx,rbx
  426273:	je     426623 <__flatcc_fb_build_schema@@Base+0x22d3>
  426279:	mov    rdi,r13
  42627c:	mov    rsi,rbx
  42627f:	mov    edx,0x1
  426284:	call   41a150 <fb_symbol_table_insert_item@@Base>
  426289:	test   rax,rax
  42628c:	je     4262b0 <__flatcc_fb_build_schema@@Base+0x1f60>
  42628e:	mov    rcx,QWORD PTR [rax+0x8]
  426292:	mov    rsi,QWORD PTR [rbx+0x8]
  426296:	cmp    rcx,QWORD PTR [rsp+0x40]
  42629b:	jne    426250 <__flatcc_fb_build_schema@@Base+0x1f00>
  42629d:	mov    rdi,r14
  4262a0:	lea    rdx,[rip+0x221e3]        # 44848a <fb_schema_table_deleted@@Base+0x1562>
  4262a7:	xor    ecx,ecx
  4262a9:	jmp    42625a <__flatcc_fb_build_schema@@Base+0x1f0a>
  4262ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4262b0:	cmp    WORD PTR [rbx+0x10],0x5
  4262b5:	jne    42663b <__flatcc_fb_build_schema@@Base+0x22eb>
  4262bb:	cmp    QWORD PTR [rbx+0x60],0x0
  4262c0:	jne    4266c7 <__flatcc_fb_build_schema@@Base+0x2377>
  4262c6:	cmp    r12w,0x4
  4262cb:	jne    426340 <__flatcc_fb_build_schema@@Base+0x1ff0>
  4262cd:	mov    rsi,QWORD PTR [rbx+0x8]
  4262d1:	cmp    rsi,QWORD PTR [rsp+0x40]
  4262d6:	je     4262fa <__flatcc_fb_build_schema@@Base+0x1faa>
  4262d8:	movzx  eax,WORD PTR [rbx+0x28]
  4262dc:	cmp    ax,0x1
  4262e0:	je     42626b <__flatcc_fb_build_schema@@Base+0x1f1b>
  4262e2:	cmp    ax,0xc
  4262e6:	je     426302 <__flatcc_fb_build_schema@@Base+0x1fb2>
  4262e8:	cmp    ax,0xa
  4262ec:	je     426332 <__flatcc_fb_build_schema@@Base+0x1fe2>
  4262ee:	mov    rdi,r14
  4262f1:	lea    rdx,[rip+0x22209]        # 448501 <fb_schema_table_deleted@@Base+0x15d9>
  4262f8:	jmp    4262a7 <__flatcc_fb_build_schema@@Base+0x1f57>
  4262fa:	mov    WORD PTR [rbx+0x28],0x0
  426300:	jmp    426340 <__flatcc_fb_build_schema@@Base+0x1ff0>
  426302:	mov    rsi,QWORD PTR [r15+0x18]
  426306:	mov    rdx,QWORD PTR [rbx+0x18]
  42630a:	mov    rdi,r14
  42630d:	xor    ecx,ecx
  42630f:	call   426cc0 <__flatcc_fb_build_schema@@Base+0x2970>
  426314:	test   rax,rax
  426317:	je     4265d1 <__flatcc_fb_build_schema@@Base+0x2281>
  42631d:	cmp    WORD PTR [rax+0x10],0x2
  426322:	jae    4265ec <__flatcc_fb_build_schema@@Base+0x229c>
  426328:	mov    WORD PTR [rbx+0x28],0xe
  42632e:	mov    QWORD PTR [rbx+0x18],rax
  426332:	mov    QWORD PTR [rbx+0x80],0x0
  42633d:	nop    DWORD PTR [rax]
  426340:	movzx  eax,WORD PTR [rbx+0x58]
  426344:	test   ebp,ebp
  426346:	jne    426402 <__flatcc_fb_build_schema@@Base+0x20b2>
  42634c:	test   ax,ax
  42634f:	jne    426402 <__flatcc_fb_build_schema@@Base+0x20b2>
  426355:	movzx  eax,WORD PTR [rsp+0x20]
  42635a:	cmp    ax,0x4
  42635e:	je     4263bb <__flatcc_fb_build_schema@@Base+0x206b>
  426360:	cmp    ax,0x6
  426364:	je     426392 <__flatcc_fb_build_schema@@Base+0x2042>
  426366:	cmp    ax,0x5
  42636a:	jne    4263fe <__flatcc_fb_build_schema@@Base+0x20ae>
  426370:	cmp    DWORD PTR [r15+0x48],0x6
  426375:	mov    rax,QWORD PTR [rsp+0x10]
  42637a:	jne    4263f6 <__flatcc_fb_build_schema@@Base+0x20a6>
  42637c:	cmp    rax,0xffffffffffffffff
  426380:	jne    4263f6 <__flatcc_fb_build_schema@@Base+0x20a6>
  426382:	mov    rsi,QWORD PTR [rbx+0x8]
  426386:	mov    rdi,r14
  426389:	lea    rdx,[rip+0x2222c]        # 4485bc <fb_schema_table_deleted@@Base+0x1694>
  426390:	jmp    4263e4 <__flatcc_fb_build_schema@@Base+0x2094>
  426392:	cmp    BYTE PTR [rsp+0x10],0x1
  426397:	jne    4263b4 <__flatcc_fb_build_schema@@Base+0x2064>
  426399:	mov    rsi,QWORD PTR [rbx+0x8]
  42639d:	mov    rdi,r14
  4263a0:	lea    rdx,[rip+0x2224d]        # 4485f4 <fb_schema_table_deleted@@Base+0x16cc>
  4263a7:	xor    ecx,ecx
  4263a9:	xor    r8d,r8d
  4263ac:	xor    r9d,r9d
  4263af:	call   41c3a0 <__flatcc_error_report@@Base>
  4263b4:	mov    BYTE PTR [rsp+0x10],0x1
  4263b9:	jmp    4263fe <__flatcc_fb_build_schema@@Base+0x20ae>
  4263bb:	cmp    DWORD PTR [r15+0x48],0x6
  4263c0:	mov    rax,QWORD PTR [rsp+0x10]
  4263c5:	jne    4263f6 <__flatcc_fb_build_schema@@Base+0x20a6>
  4263c7:	movabs rcx,0x7fffffffffffffff
  4263d1:	cmp    rax,rcx
  4263d4:	jne    4263f6 <__flatcc_fb_build_schema@@Base+0x20a6>
  4263d6:	mov    rsi,QWORD PTR [rbx+0x8]
  4263da:	mov    rdi,r14
  4263dd:	lea    rdx,[rip+0x221f5]        # 4485d9 <fb_schema_table_deleted@@Base+0x16b1>
  4263e4:	xor    ecx,ecx
  4263e6:	xor    r8d,r8d
  4263e9:	xor    r9d,r9d
  4263ec:	call   41c3a0 <__flatcc_error_report@@Base>
  4263f1:	mov    rax,QWORD PTR [rsp+0x10]
  4263f6:	inc    rax
  4263f9:	mov    QWORD PTR [rsp+0x10],rax
  4263fe:	movzx  eax,WORD PTR [rbx+0x58]
  426402:	mov    r12,r13
  426405:	lea    r13,[rbx+0x48]
  426409:	cmp    DWORD PTR [rsp+0x34],0x0
  42640e:	je     4264d9 <__flatcc_fb_build_schema@@Base+0x2189>
  426414:	test   ax,ax
  426417:	je     426438 <__flatcc_fb_build_schema@@Base+0x20e8>
  426419:	cmp    ax,0x5
  42641d:	jne    426678 <__flatcc_fb_build_schema@@Base+0x2328>
  426423:	mov    rax,QWORD PTR [r13+0x10]
  426427:	mov    QWORD PTR [rsp+0x20],rax
  42642c:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  426432:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  426438:	mov    rax,QWORD PTR [rsp+0x10]
  42643d:	mov    ecx,DWORD PTR [r15+0x48]
  426441:	lea    rdx,[rip+0x21c38]        # 448080 <fb_schema_table_deleted@@Base+0x1158>
  426448:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42644c:	shl    rcx,0x3
  426450:	cmp    rax,rcx
  426453:	jae    426648 <__flatcc_fb_build_schema@@Base+0x22f8>
  426459:	mov    ecx,0x1
  42645e:	shlx   rax,rcx,rax
  426463:	mov    QWORD PTR [rbx+0x48],rax
  426467:	mov    WORD PTR [rbx+0x58],0x5
  42646d:	mov    edx,DWORD PTR [r15+0x48]
  426471:	mov    rdi,r14
  426474:	mov    rsi,rbx
  426477:	mov    rcx,r13
  42647a:	call   426eb0 <__flatcc_fb_coerce_scalar_type@@Base>
  42647f:	test   eax,eax
  426481:	jne    426648 <__flatcc_fb_build_schema@@Base+0x22f8>
  426487:	test   ebp,ebp
  426489:	jne    42652c <__flatcc_fb_build_schema@@Base+0x21dc>
  42648f:	cmp    DWORD PTR [r14+0x120],0x0
  426497:	je     42652c <__flatcc_fb_build_schema@@Base+0x21dc>
  42649d:	movzx  eax,WORD PTR [rsp+0x20]
  4264a2:	cmp    ax,0x4
  4264a6:	je     42659c <__flatcc_fb_build_schema@@Base+0x224c>
  4264ac:	cmp    ax,0x6
  4264b0:	je     4265bd <__flatcc_fb_build_schema@@Base+0x226d>
  4264b6:	cmp    ax,0x5
  4264ba:	jne    42652c <__flatcc_fb_build_schema@@Base+0x21dc>
  4264bc:	mov    rax,QWORD PTR [rsp+0x38]
  4264c1:	shl    rax,0x8
  4264c5:	movzx  ecx,BYTE PTR [rsp+0x28]
  4264ca:	or     rcx,rax
  4264cd:	cmp    QWORD PTR [rsp+0x10],rcx
  4264d2:	ja     42652c <__flatcc_fb_build_schema@@Base+0x21dc>
  4264d4:	jmp    426685 <__flatcc_fb_build_schema@@Base+0x2335>
  4264d9:	test   ax,ax
  4264dc:	je     42650f <__flatcc_fb_build_schema@@Base+0x21bf>
  4264de:	mov    rax,QWORD PTR [r13+0x10]
  4264e2:	mov    QWORD PTR [rsp+0x20],rax
  4264e7:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  4264ed:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  4264f3:	mov    edx,DWORD PTR [r15+0x48]
  4264f7:	mov    rdi,r14
  4264fa:	mov    rsi,rbx
  4264fd:	lea    rcx,[rsp+0x10]
  426502:	call   426eb0 <__flatcc_fb_coerce_scalar_type@@Base>
  426507:	test   eax,eax
  426509:	jne    42661e <__flatcc_fb_build_schema@@Base+0x22ce>
  42650f:	mov    rax,QWORD PTR [rsp+0x20]
  426514:	mov    QWORD PTR [r13+0x10],rax
  426518:	vmovaps xmm0,XMMWORD PTR [rsp+0x10]
  42651e:	vmovups XMMWORD PTR [r13+0x0],xmm0
  426524:	test   ebp,ebp
  426526:	je     42648f <__flatcc_fb_build_schema@@Base+0x213f>
  42652c:	mov    rbp,QWORD PTR [rsp+0x10]
  426531:	mov    rdi,QWORD PTR [rsp+0x48]
  426536:	mov    rsi,r13
  426539:	mov    edx,0x1
  42653e:	call   42d530 <fb_value_set_insert_item@@Base>
  426543:	test   rax,rax
  426546:	mov    r13,r12
  426549:	movzx  r12d,WORD PTR [rsp+0xe]
  42654f:	je     426560 <__flatcc_fb_build_schema@@Base+0x2210>
  426551:	cmp    r12w,0x4
  426556:	je     426655 <__flatcc_fb_build_schema@@Base+0x2305>
  42655c:	or     BYTE PTR [rbx+0x12],0x4
  426560:	mov    rax,rbp
  426563:	shr    rax,0x8
  426567:	mov    QWORD PTR [rsp+0x38],rax
  42656c:	cmp    QWORD PTR [rbx+0x60],0x0
  426571:	mov    QWORD PTR [rsp+0x28],rbp
  426576:	je     42626b <__flatcc_fb_build_schema@@Base+0x1f1b>
  42657c:	mov    rsi,QWORD PTR [rbx+0x8]
  426580:	mov    rdi,r14
  426583:	lea    rdx,[rip+0x221f7]        # 448781 <fb_schema_table_deleted@@Base+0x1859>
  42658a:	xor    ecx,ecx
  42658c:	xor    r8d,r8d
  42658f:	xor    r9d,r9d
  426592:	call   41c3a0 <__flatcc_error_report@@Base>
  426597:	jmp    42626b <__flatcc_fb_build_schema@@Base+0x1f1b>
  42659c:	mov    rax,QWORD PTR [rsp+0x38]
  4265a1:	shl    rax,0x8
  4265a5:	movzx  ecx,BYTE PTR [rsp+0x28]
  4265aa:	or     rcx,rax
  4265ad:	cmp    QWORD PTR [rsp+0x10],rcx
  4265b2:	jg     42652c <__flatcc_fb_build_schema@@Base+0x21dc>
  4265b8:	jmp    426685 <__flatcc_fb_build_schema@@Base+0x2335>
  4265bd:	mov    rax,QWORD PTR [rsp+0x28]
  4265c2:	cmp    BYTE PTR [rsp+0x10],al
  4265c6:	ja     42652c <__flatcc_fb_build_schema@@Base+0x21dc>
  4265cc:	jmp    4266ad <__flatcc_fb_build_schema@@Base+0x235d>
  4265d1:	mov    rsi,QWORD PTR [rbx+0x18]
  4265d5:	mov    rdi,r14
  4265d8:	lea    rdx,[rip+0x21f69]        # 448548 <fb_schema_table_deleted@@Base+0x1620>
  4265df:	mov    rcx,rbx
  4265e2:	call   41c5d0 <error_ref_sym@@Base>
  4265e7:	jmp    426265 <__flatcc_fb_build_schema@@Base+0x1f15>
  4265ec:	mov    rsi,QWORD PTR [rbx+0x8]
  4265f0:	mov    rcx,QWORD PTR [rax+0x8]
  4265f4:	mov    rdi,r14
  4265f7:	lea    rdx,[rip+0x21f78]        # 448576 <fb_schema_table_deleted@@Base+0x164e>
  4265fe:	jmp    42625a <__flatcc_fb_build_schema@@Base+0x1f0a>
  426603:	mov    rsi,QWORD PTR [r15+0x8]
  426607:	lea    rdx,[rip+0x21dce]        # 4483dc <fb_schema_table_deleted@@Base+0x14b4>
  42660e:	mov    rdi,r14
  426611:	xor    ecx,ecx
  426613:	xor    r8d,r8d
  426616:	xor    r9d,r9d
  426619:	call   41c3a0 <__flatcc_error_report@@Base>
  42661e:	mov    ebp,0xffffffff
  426623:	mov    eax,ebp
  426625:	add    rsp,0xb8
  42662c:	pop    rbx
  42662d:	pop    r12
  42662f:	pop    r13
  426631:	pop    r14
  426633:	pop    r15
  426635:	pop    rbp
  426636:	ret    
  426637:	xor    ebp,ebp
  426639:	jmp    426623 <__flatcc_fb_build_schema@@Base+0x22d3>
  42663b:	mov    rsi,QWORD PTR [rbx+0x8]
  42663f:	lea    rdx,[rip+0x21e7c]        # 4484c2 <fb_schema_table_deleted@@Base+0x159a>
  426646:	jmp    42660e <__flatcc_fb_build_schema@@Base+0x22be>
  426648:	mov    rsi,QWORD PTR [rbx+0x8]
  42664c:	lea    rdx,[rip+0x22009]        # 44865c <fb_schema_table_deleted@@Base+0x1734>
  426653:	jmp    42660e <__flatcc_fb_build_schema@@Base+0x22be>
  426655:	mov    rsi,QWORD PTR [rbx+0x8]
  426659:	lea    rdx,[rip+0x220d7]        # 448737 <fb_schema_table_deleted@@Base+0x180f>
  426660:	mov    rdi,r14
  426663:	xor    ecx,ecx
  426665:	xor    r8d,r8d
  426668:	xor    r9d,r9d
  42666b:	call   41c3a0 <__flatcc_error_report@@Base>
  426670:	mov    WORD PTR [rbx+0x58],0x1
  426676:	jmp    42661e <__flatcc_fb_build_schema@@Base+0x22ce>
  426678:	mov    rsi,QWORD PTR [rbx+0x8]
  42667c:	lea    rdx,[rip+0x21f9e]        # 448621 <fb_schema_table_deleted@@Base+0x16f9>
  426683:	jmp    42660e <__flatcc_fb_build_schema@@Base+0x22be>
  426685:	cmp    WORD PTR [rsp+0xe],0x4
  42668b:	jne    4266a0 <__flatcc_fb_build_schema@@Base+0x2350>
  42668d:	mov    rcx,QWORD PTR [rsp+0x38]
  426692:	shl    rcx,0x8
  426696:	movzx  eax,BYTE PTR [rsp+0x28]
  42669b:	or     rax,rcx
  42669e:	je     4266ba <__flatcc_fb_build_schema@@Base+0x236a>
  4266a0:	mov    rsi,QWORD PTR [rbx+0x8]
  4266a4:	lea    rdx,[rip+0x22025]        # 4486d0 <fb_schema_table_deleted@@Base+0x17a8>
  4266ab:	jmp    426660 <__flatcc_fb_build_schema@@Base+0x2310>
  4266ad:	mov    rsi,QWORD PTR [rbx+0x8]
  4266b1:	lea    rdx,[rip+0x2203f]        # 4486f7 <fb_schema_table_deleted@@Base+0x17cf>
  4266b8:	jmp    426660 <__flatcc_fb_build_schema@@Base+0x2310>
  4266ba:	mov    rsi,QWORD PTR [rbx+0x8]
  4266be:	lea    rdx,[rip+0x21fca]        # 44868f <fb_schema_table_deleted@@Base+0x1767>
  4266c5:	jmp    426660 <__flatcc_fb_build_schema@@Base+0x2310>
  4266c7:	lea    rdi,[rip+0x21e1d]        # 4484eb <fb_schema_table_deleted@@Base+0x15c3>
  4266ce:	lea    rsi,[rip+0x21af1]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  4266d5:	lea    rcx,[rip+0x21cb4]        # 448390 <fb_schema_table_deleted@@Base+0x1468>
  4266dc:	mov    edx,0x523
  4266e1:	call   406100 <__assert_fail@plt>
  4266e6:	lea    rdi,[rip+0x10158]        # 436845 <_IO_stdin_used@@Base+0x8845>
  4266ed:	lea    rsi,[rip+0x21ad2]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  4266f4:	lea    rcx,[rip+0x21c95]        # 448390 <fb_schema_table_deleted@@Base+0x1468>
  4266fb:	mov    edx,0x4cd
  426700:	call   406100 <__assert_fail@plt>
  426705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42670f:	nop
  426710:	push   rbp
  426711:	push   r15
  426713:	push   r14
  426715:	push   r13
  426717:	push   r12
  426719:	push   rbx
  42671a:	push   rax
  42671b:	cmp    WORD PTR [rsi+0x10],0x1
  426720:	jne    426ad0 <__flatcc_fb_build_schema@@Base+0x2780>
  426726:	mov    rbx,rsi
  426729:	movzx  eax,WORD PTR [rsi+0x12]
  42672d:	test   al,0x1
  42672f:	jne    426aef <__flatcc_fb_build_schema@@Base+0x279f>
  426735:	xor    r13d,r13d
  426738:	test   al,0x2
  42673a:	jne    426aa8 <__flatcc_fb_build_schema@@Base+0x2758>
  426740:	cmp    QWORD PTR [rbx+0xc0],0x0
  426748:	jne    426b0e <__flatcc_fb_build_schema@@Base+0x27be>
  42674e:	mov    r14,rdi
  426751:	or     eax,0x1
  426754:	mov    WORD PTR [rbx+0x12],ax
  426758:	mov    r15,QWORD PTR [rbx+0x28]
  42675c:	mov    r12w,0x1
  426761:	test   r15,r15
  426764:	je     42696a <__flatcc_fb_build_schema@@Base+0x261a>
  42676a:	mov    r13d,0xffffffff
  426770:	jmp    4267bb <__flatcc_fb_build_schema@@Base+0x246b>
  426772:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42677c:	nop    DWORD PTR [rax+0x0]
  426780:	mov    rsi,QWORD PTR [r15+0x8]
  426784:	mov    rdi,r14
  426787:	lea    rdx,[rip+0x224b2]        # 448c40 <fb_schema_table_deleted@@Base+0x1d18>
  42678e:	xor    ecx,ecx
  426790:	xor    r8d,r8d
  426793:	xor    r9d,r9d
  426796:	call   41c3a0 <__flatcc_error_report@@Base>
  42679b:	movzx  eax,WORD PTR [r15+0x72]
  4267a0:	mov    QWORD PTR [rbx+0xb8],rbp
  4267a7:	cmp    r12w,ax
  4267ab:	cmovb  r12d,eax
  4267af:	mov    r15,QWORD PTR [r15]
  4267b2:	test   r15,r15
  4267b5:	je     42696a <__flatcc_fb_build_schema@@Base+0x261a>
  4267bb:	mov    eax,DWORD PTR [r14+0xe0]
  4267c2:	cmp    eax,0x64
  4267c5:	jge    426a41 <__flatcc_fb_build_schema@@Base+0x26f1>
  4267cb:	movzx  ecx,WORD PTR [r15+0x28]
  4267d0:	cmp    cx,0x8
  4267d4:	je     426810 <__flatcc_fb_build_schema@@Base+0x24c0>
  4267d6:	cmp    cx,0xe
  4267da:	jne    426a62 <__flatcc_fb_build_schema@@Base+0x2712>
  4267e0:	mov    rbp,QWORD PTR [r15+0x18]
  4267e4:	movzx  ecx,WORD PTR [rbp+0x10]
  4267e8:	cmp    cx,0x1
  4267ec:	je     426860 <__flatcc_fb_build_schema@@Base+0x2510>
  4267ee:	cmp    cx,0x3
  4267f2:	jne    426a8d <__flatcc_fb_build_schema@@Base+0x273d>
  4267f8:	mov    rbp,QWORD PTR [rbp+0xb8]
  4267ff:	jmp    426854 <__flatcc_fb_build_schema@@Base+0x2504>
  426801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42680b:	nop    DWORD PTR [rax+rax*1+0x0]
  426810:	mov    rcx,QWORD PTR [r15+0x18]
  426814:	mov    rax,QWORD PTR [rcx+0x20]
  426818:	lea    rdx,[rax+0x3e7]
  42681f:	cmp    rdx,0x1c
  426823:	jae    426a75 <__flatcc_fb_build_schema@@Base+0x2725>
  426829:	mov    esi,0x97ed7fb
  42682e:	bt     esi,edx
  426831:	jae    426a75 <__flatcc_fb_build_schema@@Base+0x2725>
  426837:	lea    rcx,[rip+0x218e2]        # 448120 <fb_schema_table_deleted@@Base+0x11f8>
  42683e:	mov    eax,DWORD PTR [rcx+rax*4+0xf9c]
  426845:	mov    DWORD PTR [r15+0x18],eax
  426849:	lea    rcx,[rip+0x21830]        # 448080 <fb_schema_table_deleted@@Base+0x1158>
  426850:	movsxd rbp,DWORD PTR [rcx+rax*4]
  426854:	mov    WORD PTR [r15+0x72],bp
  426859:	mov    eax,ebp
  42685b:	jmp    4268d6 <__flatcc_fb_build_schema@@Base+0x2586>
  42685d:	nop    DWORD PTR [rax]
  426860:	movzx  ecx,WORD PTR [rbp+0x12]
  426864:	test   cl,0x1
  426867:	jne    426aba <__flatcc_fb_build_schema@@Base+0x276a>
  42686d:	test   cl,0x2
  426870:	jne    4268c3 <__flatcc_fb_build_schema@@Base+0x2573>
  426872:	cmp    DWORD PTR [r14+0x128],0x0
  42687a:	je     4268a0 <__flatcc_fb_build_schema@@Base+0x2550>
  42687c:	mov    rsi,QWORD PTR [r15+0x8]
  426880:	mov    rcx,QWORD PTR [rbp+0x8]
  426884:	mov    rdi,r14
  426887:	lea    rdx,[rip+0x22333]        # 448bc1 <fb_schema_table_deleted@@Base+0x1c99>
  42688e:	xor    r8d,r8d
  426891:	xor    r9d,r9d
  426894:	call   41c3a0 <__flatcc_error_report@@Base>
  426899:	mov    eax,DWORD PTR [r14+0xe0]
  4268a0:	inc    eax
  4268a2:	mov    DWORD PTR [r14+0xe0],eax
  4268a9:	mov    rdi,r14
  4268ac:	mov    rsi,rbp
  4268af:	call   426710 <__flatcc_fb_build_schema@@Base+0x23c0>
  4268b4:	dec    DWORD PTR [r14+0xe0]
  4268bb:	test   eax,eax
  4268bd:	jne    426acb <__flatcc_fb_build_schema@@Base+0x277b>
  4268c3:	movzx  eax,WORD PTR [rbp+0xb0]
  4268ca:	mov    WORD PTR [r15+0x72],ax
  4268cf:	mov    rbp,QWORD PTR [rbp+0xb8]
  4268d6:	mov    QWORD PTR [r15+0x80],rbp
  4268dd:	test   ax,ax
  4268e0:	je     4269dd <__flatcc_fb_build_schema@@Base+0x268d>
  4268e6:	movzx  ecx,ax
  4268e9:	lea    rsi,[rcx-0x1]
  4268ed:	cmp    rsi,0xff
  4268f4:	ja     4269dd <__flatcc_fb_build_schema@@Base+0x268d>
  4268fa:	mov    rdx,QWORD PTR [rbx+0xb8]
  426901:	mov    edi,0x1
  426906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426910:	cmp    rdi,rcx
  426913:	je     426930 <__flatcc_fb_build_schema@@Base+0x25e0>
  426915:	add    rdi,rdi
  426918:	cmp    rdi,rcx
  42691b:	jbe    426910 <__flatcc_fb_build_schema@@Base+0x25c0>
  42691d:	jmp    4269dd <__flatcc_fb_build_schema@@Base+0x268d>
  426922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42692c:	nop    DWORD PTR [rax+0x0]
  426930:	add    rsi,rdx
  426933:	neg    rcx
  426936:	and    rcx,rsi
  426939:	mov    QWORD PTR [r15+0x78],rcx
  42693d:	cmp    rcx,rdx
  426940:	jb     426a34 <__flatcc_fb_build_schema@@Base+0x26e4>
  426946:	add    rbp,rcx
  426949:	jb     426a34 <__flatcc_fb_build_schema@@Base+0x26e4>
  42694f:	cmp    rbp,rdx
  426952:	jb     426780 <__flatcc_fb_build_schema@@Base+0x2430>
  426958:	cmp    rbp,0x10000
  42695f:	jb     4267a0 <__flatcc_fb_build_schema@@Base+0x2450>
  426965:	jmp    426780 <__flatcc_fb_build_schema@@Base+0x2430>
  42696a:	movzx  eax,WORD PTR [rbx+0xb0]
  426971:	test   ax,ax
  426974:	je     426997 <__flatcc_fb_build_schema@@Base+0x2647>
  426976:	cmp    r12w,ax
  42697a:	jbe    4269a2 <__flatcc_fb_build_schema@@Base+0x2652>
  42697c:	mov    rsi,QWORD PTR [rbx+0x8]
  426980:	lea    rdx,[rip+0x222ec]        # 448c73 <fb_schema_table_deleted@@Base+0x1d4b>
  426987:	mov    rdi,r14
  42698a:	xor    ecx,ecx
  42698c:	xor    r8d,r8d
  42698f:	xor    r9d,r9d
  426992:	call   41c3a0 <__flatcc_error_report@@Base>
  426997:	mov    WORD PTR [rbx+0xb0],r12w
  42699f:	mov    eax,r12d
  4269a2:	test   ax,ax
  4269a5:	je     4269dd <__flatcc_fb_build_schema@@Base+0x268d>
  4269a7:	movzx  eax,ax
  4269aa:	lea    rcx,[rax-0x1]
  4269ae:	cmp    rcx,0xff
  4269b5:	ja     4269dd <__flatcc_fb_build_schema@@Base+0x268d>
  4269b7:	mov    rdx,QWORD PTR [rbx+0xb8]
  4269be:	mov    esi,0x1
  4269c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269cd:	nop    DWORD PTR [rax]
  4269d0:	cmp    rsi,rax
  4269d3:	je     4269fc <__flatcc_fb_build_schema@@Base+0x26ac>
  4269d5:	add    rsi,rsi
  4269d8:	cmp    rsi,rax
  4269db:	jbe    4269d0 <__flatcc_fb_build_schema@@Base+0x2680>
  4269dd:	lea    rdi,[rip+0x222ca]        # 448cae <fb_schema_table_deleted@@Base+0x1d86>
  4269e4:	lea    rsi,[rip+0x217db]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  4269eb:	lea    rcx,[rip+0x222d2]        # 448cc4 <fb_schema_table_deleted@@Base+0x1d9c>
  4269f2:	mov    edx,0x6c
  4269f7:	call   406100 <__assert_fail@plt>
  4269fc:	add    rcx,rdx
  4269ff:	neg    rax
  426a02:	and    rax,rcx
  426a05:	mov    QWORD PTR [rbx+0xb8],rax
  426a0c:	movzx  eax,WORD PTR [rbx+0x12]
  426a10:	and    eax,0xfffffffc
  426a13:	or     eax,0x2
  426a16:	mov    WORD PTR [rbx+0x12],ax
  426a1a:	mov    rax,QWORD PTR [r14+0x240]
  426a21:	mov    QWORD PTR [rbx+0xc0],rax
  426a28:	mov    QWORD PTR [r14+0x240],rbx
  426a2f:	xor    r13d,r13d
  426a32:	jmp    426aa8 <__flatcc_fb_build_schema@@Base+0x2758>
  426a34:	mov    rsi,QWORD PTR [r15+0x8]
  426a38:	lea    rdx,[rip+0x221ec]        # 448c2b <fb_schema_table_deleted@@Base+0x1d03>
  426a3f:	jmp    426a98 <__flatcc_fb_build_schema@@Base+0x2748>
  426a41:	lea    rdx,[rip+0x22100]        # 448b48 <fb_schema_table_deleted@@Base+0x1c20>
  426a48:	mov    rdi,r14
  426a4b:	xor    esi,esi
  426a4d:	xor    ecx,ecx
  426a4f:	xor    r8d,r8d
  426a52:	xor    r9d,r9d
  426a55:	call   41c3a0 <__flatcc_error_report@@Base>
  426a5a:	mov    r13d,0xffffffff
  426a60:	jmp    426aa8 <__flatcc_fb_build_schema@@Base+0x2758>
  426a62:	cmp    cx,0x1
  426a66:	je     426aa8 <__flatcc_fb_build_schema@@Base+0x2758>
  426a68:	mov    rsi,QWORD PTR [r15+0x8]
  426a6c:	lea    rdx,[rip+0x2211e]        # 448b91 <fb_schema_table_deleted@@Base+0x1c69>
  426a73:	jmp    426a98 <__flatcc_fb_build_schema@@Base+0x2748>
  426a75:	mov    DWORD PTR [r15+0x18],0x0
  426a7d:	mov    rsi,QWORD PTR [r15+0x8]
  426a81:	lea    rdx,[rip+0x22109]        # 448b91 <fb_schema_table_deleted@@Base+0x1c69>
  426a88:	mov    rdi,r14
  426a8b:	jmp    426a9d <__flatcc_fb_build_schema@@Base+0x274d>
  426a8d:	mov    rsi,QWORD PTR [r15+0x8]
  426a91:	lea    rdx,[rip+0x22170]        # 448c08 <fb_schema_table_deleted@@Base+0x1ce0>
  426a98:	mov    rdi,r14
  426a9b:	xor    ecx,ecx
  426a9d:	xor    r8d,r8d
  426aa0:	xor    r9d,r9d
  426aa3:	call   41c3a0 <__flatcc_error_report@@Base>
  426aa8:	mov    eax,r13d
  426aab:	add    rsp,0x8
  426aaf:	pop    rbx
  426ab0:	pop    r12
  426ab2:	pop    r13
  426ab4:	pop    r14
  426ab6:	pop    r15
  426ab8:	pop    rbp
  426ab9:	ret    
  426aba:	mov    rsi,QWORD PTR [r15+0x8]
  426abe:	mov    rcx,QWORD PTR [rbp+0x8]
  426ac2:	lea    rdx,[rip+0x220d8]        # 448ba1 <fb_schema_table_deleted@@Base+0x1c79>
  426ac9:	jmp    426a88 <__flatcc_fb_build_schema@@Base+0x2738>
  426acb:	mov    r13d,eax
  426ace:	jmp    426aa8 <__flatcc_fb_build_schema@@Base+0x2758>
  426ad0:	lea    rdi,[rip+0xfa8b]        # 436562 <_IO_stdin_used@@Base+0x8562>
  426ad7:	lea    rsi,[rip+0x216e8]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426ade:	lea    rcx,[rip+0x21ff9]        # 448ade <fb_schema_table_deleted@@Base+0x1bb6>
  426ae5:	mov    edx,0x1f6
  426aea:	call   406100 <__assert_fail@plt>
  426aef:	lea    rdi,[rip+0x22020]        # 448b16 <fb_schema_table_deleted@@Base+0x1bee>
  426af6:	lea    rsi,[rip+0x216c9]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426afd:	lea    rcx,[rip+0x21fda]        # 448ade <fb_schema_table_deleted@@Base+0x1bb6>
  426b04:	mov    edx,0x1f8
  426b09:	call   406100 <__assert_fail@plt>
  426b0e:	lea    rdi,[rip+0x22028]        # 448b3d <fb_schema_table_deleted@@Base+0x1c15>
  426b15:	lea    rsi,[rip+0x216aa]        # 4481c6 <fb_schema_table_deleted@@Base+0x129e>
  426b1c:	lea    rcx,[rip+0x21fbb]        # 448ade <fb_schema_table_deleted@@Base+0x1bb6>
  426b23:	mov    edx,0x1fc
  426b28:	call   406100 <__assert_fail@plt>
  426b2d:	nop    DWORD PTR [rax]
  426b30:	push   rbp
  426b31:	push   r15
  426b33:	push   r14
  426b35:	push   r13
  426b37:	push   r12
  426b39:	push   rbx
  426b3a:	push   rax
  426b3b:	vxorps xmm0,xmm0,xmm0
  426b3f:	vmovups YMMWORD PTR [rcx+0x40],ymm0
  426b44:	vmovups YMMWORD PTR [rcx+0x20],ymm0
  426b49:	vmovups YMMWORD PTR [rcx],ymm0
  426b4d:	test   rsi,rsi
  426b50:	je     426ca1 <__flatcc_fb_build_schema@@Base+0x2951>
  426b56:	mov    r15,rcx
  426b59:	mov    rbx,rsi
  426b5c:	mov    r12,rdi
  426b5f:	movzx  ebp,dx
  426b62:	mov    r13d,0xffffff9d
  426b68:	xor    r14d,r14d
  426b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  426b70:	mov    rdi,QWORD PTR [r12+0x260]
  426b78:	add    rdi,0x20
  426b7c:	mov    rax,QWORD PTR [rbx+0x8]
  426b80:	mov    rsi,QWORD PTR [rax]
  426b83:	mov    rdx,QWORD PTR [rax+0x8]
  426b87:	vzeroupper 
  426b8a:	call   42ce30 <fb_name_table_find@@Base>
  426b8f:	test   rax,rax
  426b92:	je     426bd0 <__flatcc_fb_build_schema@@Base+0x2880>
  426b94:	movsxd rax,DWORD PTR [rax+0x20]
  426b98:	test   rax,rax
  426b9b:	je     426bfb <__flatcc_fb_build_schema@@Base+0x28ab>
  426b9d:	bt     ebp,eax
  426ba0:	jae    426be0 <__flatcc_fb_build_schema@@Base+0x2890>
  426ba2:	mov    ecx,0x1
  426ba7:	shlx   ecx,ecx,eax
  426bac:	or     r14d,ecx
  426baf:	cmp    QWORD PTR [r15+rax*8],0x0
  426bb4:	je     426c11 <__flatcc_fb_build_schema@@Base+0x28c1>
  426bb6:	mov    rsi,QWORD PTR [rbx+0x8]
  426bba:	mov    rdi,r12
  426bbd:	lea    rdx,[rip+0x21c2c]        # 4487f0 <fb_schema_table_deleted@@Base+0x18c8>
  426bc4:	jmp    426bee <__flatcc_fb_build_schema@@Base+0x289e>
  426bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426bd0:	mov    rsi,QWORD PTR [rbx+0x8]
  426bd4:	mov    rdi,r12
  426bd7:	lea    rdx,[rip+0x21bc6]        # 4487a4 <fb_schema_table_deleted@@Base+0x187c>
  426bde:	jmp    426bee <__flatcc_fb_build_schema@@Base+0x289e>
  426be0:	mov    rsi,QWORD PTR [rbx+0x8]
  426be4:	mov    rdi,r12
  426be7:	lea    rdx,[rip+0x21bd5]        # 4487c3 <fb_schema_table_deleted@@Base+0x189b>
  426bee:	xor    ecx,ecx
  426bf0:	xor    r8d,r8d
  426bf3:	xor    r9d,r9d
  426bf6:	call   41c3a0 <__flatcc_error_report@@Base>
  426bfb:	mov    rbx,QWORD PTR [rbx]
  426bfe:	test   r13d,r13d
  426c01:	je     426c7f <__flatcc_fb_build_schema@@Base+0x292f>
  426c03:	inc    r13d
  426c06:	test   rbx,rbx
  426c09:	jne    426b70 <__flatcc_fb_build_schema@@Base+0x2820>
  426c0f:	jmp    426c7f <__flatcc_fb_build_schema@@Base+0x292f>
  426c11:	mov    QWORD PTR [r15+rax*8],rbx
  426c15:	mov    ecx,0xdac
  426c1a:	bt     rcx,rax
  426c1e:	jae    426c37 <__flatcc_fb_build_schema@@Base+0x28e7>
  426c20:	cmp    WORD PTR [rbx+0x20],0x0
  426c25:	je     426c37 <__flatcc_fb_build_schema@@Base+0x28e7>
  426c27:	mov    rsi,QWORD PTR [rbx+0x8]
  426c2b:	mov    rdi,r12
  426c2e:	lea    rdx,[rip+0x21be1]        # 448816 <fb_schema_table_deleted@@Base+0x18ee>
  426c35:	jmp    426bee <__flatcc_fb_build_schema@@Base+0x289e>
  426c37:	dec    eax
  426c39:	cmp    eax,0x8
  426c3c:	ja     426bfb <__flatcc_fb_build_schema@@Base+0x28ab>
  426c3e:	lea    rcx,[rip+0x2140b]        # 448050 <fb_schema_table_deleted@@Base+0x1128>
  426c45:	movsxd rax,DWORD PTR [rcx+rax*4]
  426c49:	add    rax,rcx
  426c4c:	jmp    rax
  426c4e:	cmp    WORD PTR [rbx+0x20],0x5
  426c53:	je     426bfb <__flatcc_fb_build_schema@@Base+0x28ab>
  426c55:	mov    rsi,QWORD PTR [rbx+0x8]
  426c59:	mov    rdi,r12
  426c5c:	lea    rdx,[rip+0x21bfc]        # 44885f <fb_schema_table_deleted@@Base+0x1937>
  426c63:	jmp    426bee <__flatcc_fb_build_schema@@Base+0x289e>
  426c65:	cmp    WORD PTR [rbx+0x20],0x2
  426c6a:	je     426bfb <__flatcc_fb_build_schema@@Base+0x28ab>
  426c6c:	mov    rsi,QWORD PTR [rbx+0x8]
  426c70:	mov    rdi,r12
  426c73:	lea    rdx,[rip+0x21bc4]        # 44883e <fb_schema_table_deleted@@Base+0x1916>
  426c7a:	jmp    426bee <__flatcc_fb_build_schema@@Base+0x289e>
  426c7f:	test   rbx,rbx
  426c82:	je     426ca4 <__flatcc_fb_build_schema@@Base+0x2954>
  426c84:	mov    rsi,QWORD PTR [rbx+0x8]
  426c88:	lea    rdx,[rip+0x21bfc]        # 44888b <fb_schema_table_deleted@@Base+0x1963>
  426c8f:	mov    rdi,r12
  426c92:	xor    ecx,ecx
  426c94:	xor    r8d,r8d
  426c97:	xor    r9d,r9d
  426c9a:	call   41c3a0 <__flatcc_error_report@@Base>
  426c9f:	jmp    426ca4 <__flatcc_fb_build_schema@@Base+0x2954>
  426ca1:	xor    r14d,r14d
  426ca4:	mov    eax,r14d
  426ca7:	add    rsp,0x8
  426cab:	pop    rbx
  426cac:	pop    r12
  426cae:	pop    r13
  426cb0:	pop    r14
  426cb2:	pop    r15
  426cb4:	pop    rbp
  426cb5:	vzeroupper 
  426cb8:	ret    
  426cb9:	nop    DWORD PTR [rax+0x0]
  426cc0:	push   rbp
  426cc1:	push   r15
  426cc3:	push   r14
  426cc5:	push   r13
  426cc7:	push   r12
  426cc9:	push   rbx
  426cca:	push   rax
  426ccb:	mov    r13,rsi
  426cce:	mov    r14,rdi
  426cd1:	test   rdx,rdx
  426cd4:	je     426e13 <__flatcc_fb_build_schema@@Base+0x2ac3>
  426cda:	xor    eax,eax
  426cdc:	mov    rdi,rdx
  426cdf:	xor    esi,esi
  426ce1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  426cf0:	mov    r12,rsi
  426cf3:	mov    rsi,rdi
  426cf6:	mov    rdi,QWORD PTR [rdi]
  426cf9:	inc    eax
  426cfb:	test   rdi,rdi
  426cfe:	jne    426cf0 <__flatcc_fb_build_schema@@Base+0x29a0>
  426d00:	test   rcx,rcx
  426d03:	je     426e23 <__flatcc_fb_build_schema@@Base+0x2ad3>
  426d09:	dec    eax
  426d0b:	mov    QWORD PTR [rcx],rsi
  426d0e:	test   r12,r12
  426d11:	je     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426d17:	test   r13,r13
  426d1a:	je     426e31 <__flatcc_fb_build_schema@@Base+0x2ae1>
  426d20:	cmp    eax,0x1
  426d23:	jne    426e31 <__flatcc_fb_build_schema@@Base+0x2ae1>
  426d29:	lea    rax,[r14+0x320]
  426d30:	mov    QWORD PTR [rsp],rax
  426d34:	movabs rbp,0xffffffff00000000
  426d3e:	jmp    426d5e <__flatcc_fb_build_schema@@Base+0x2a0e>
  426d40:	test   rdi,rdi
  426d43:	je     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426d49:	xor    esi,esi
  426d4b:	xor    edx,edx
  426d4d:	call   41aae0 <fb_scope_table_find@@Base>
  426d52:	mov    r13,rax
  426d55:	test   rax,rax
  426d58:	je     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426d5e:	lea    rdi,[r13+0x8]
  426d62:	mov    rax,QWORD PTR [r12+0x8]
  426d67:	mov    rsi,QWORD PTR [rax]
  426d6a:	mov    rdx,QWORD PTR [rax+0x8]
  426d6e:	call   41a170 <fb_symbol_table_find@@Base>
  426d73:	test   rax,rax
  426d76:	je     426d98 <__flatcc_fb_build_schema@@Base+0x2a48>
  426d78:	mov    rbx,rax
  426d7b:	cmp    WORD PTR [rax+0x10],0x4
  426d80:	ja     426d98 <__flatcc_fb_build_schema@@Base+0x2a48>
  426d82:	mov    rsi,QWORD PTR [rbx+0x20]
  426d86:	mov    rdi,QWORD PTR [rsp]
  426d8a:	call   419b30 <ptr_set_find_item@@Base>
  426d8f:	test   rax,rax
  426d92:	jne    426e9a <__flatcc_fb_build_schema@@Base+0x2b4a>
  426d98:	mov    rax,QWORD PTR [r13+0x0]
  426d9c:	test   rax,rax
  426d9f:	je     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426da5:	mov    edx,0x2
  426daa:	xor    esi,esi
  426dac:	xor    ecx,ecx
  426dae:	xchg   ax,ax
  426db0:	mov    rbx,rsi
  426db3:	mov    r15,rdx
  426db6:	mov    rax,QWORD PTR [rax]
  426db9:	inc    rcx
  426dbc:	add    rsi,rbp
  426dbf:	inc    rdx
  426dc2:	test   rax,rax
  426dc5:	jne    426db0 <__flatcc_fb_build_schema@@Base+0x2a60>
  426dc7:	jmp    426df6 <__flatcc_fb_build_schema@@Base+0x2aa6>
  426dc9:	nop    DWORD PTR [rax+0x0]
  426dd0:	mov    rsi,QWORD PTR [r13+0x0]
  426dd4:	mov    rdx,rbx
  426dd7:	sar    rdx,0x20
  426ddb:	call   41aae0 <fb_scope_table_find@@Base>
  426de0:	movabs rcx,0x100000000
  426dea:	add    rbx,rcx
  426ded:	test   rax,rax
  426df0:	jne    426d52 <__flatcc_fb_build_schema@@Base+0x2a02>
  426df6:	mov    rdi,QWORD PTR [r14+0x260]
  426dfd:	dec    r15
  426e00:	cmp    r15,0x2
  426e04:	jl     426d40 <__flatcc_fb_build_schema@@Base+0x29f0>
  426e0a:	test   rdi,rdi
  426e0d:	jne    426dd0 <__flatcc_fb_build_schema@@Base+0x2a80>
  426e0f:	xor    eax,eax
  426e11:	jmp    426de0 <__flatcc_fb_build_schema@@Base+0x2a90>
  426e13:	xor    r12d,r12d
  426e16:	xor    esi,esi
  426e18:	xor    eax,eax
  426e1a:	test   rcx,rcx
  426e1d:	jne    426d09 <__flatcc_fb_build_schema@@Base+0x29b9>
  426e23:	mov    r12,rsi
  426e26:	test   r12,r12
  426e29:	jne    426d17 <__flatcc_fb_build_schema@@Base+0x29c7>
  426e2f:	jmp    426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426e31:	mov    rdi,QWORD PTR [r14+0x260]
  426e38:	test   rdi,rdi
  426e3b:	je     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426e3d:	xor    ebx,ebx
  426e3f:	dec    eax
  426e41:	cmove  rdx,rbx
  426e45:	neg    eax
  426e47:	cdqe   
  426e49:	mov    rsi,rdx
  426e4c:	mov    rdx,rax
  426e4f:	call   41aae0 <fb_scope_table_find@@Base>
  426e54:	test   rax,rax
  426e57:	je     426e9a <__flatcc_fb_build_schema@@Base+0x2b4a>
  426e59:	add    rax,0x8
  426e5d:	mov    rcx,QWORD PTR [r12+0x8]
  426e62:	mov    rsi,QWORD PTR [rcx]
  426e65:	mov    rdx,QWORD PTR [rcx+0x8]
  426e69:	mov    rdi,rax
  426e6c:	call   41a170 <fb_symbol_table_find@@Base>
  426e71:	test   rax,rax
  426e74:	je     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426e76:	mov    rbx,rax
  426e79:	cmp    WORD PTR [rax+0x10],0x4
  426e7e:	ja     426e98 <__flatcc_fb_build_schema@@Base+0x2b48>
  426e80:	add    r14,0x320
  426e87:	mov    rsi,QWORD PTR [rbx+0x20]
  426e8b:	mov    rdi,r14
  426e8e:	call   419b30 <ptr_set_find_item@@Base>
  426e93:	test   rax,rax
  426e96:	jne    426e9a <__flatcc_fb_build_schema@@Base+0x2b4a>
  426e98:	xor    ebx,ebx
  426e9a:	mov    rax,rbx
  426e9d:	add    rsp,0x8
  426ea1:	pop    rbx
  426ea2:	pop    r12
  426ea4:	pop    r13
  426ea6:	pop    r14
  426ea8:	pop    r15
  426eaa:	pop    rbp
  426eab:	ret    
  426eac:	nop    DWORD PTR [rax+0x0]

0000000000426eb0 <__flatcc_fb_coerce_scalar_type@@Base>:
  426eb0:	push   r14
  426eb2:	push   rbx
  426eb3:	push   rax
  426eb4:	movzx  ebx,WORD PTR [rcx+0x10]
  426eb8:	xor    eax,eax
  426eba:	cmp    bx,0x2
  426ebe:	jb     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426ec4:	lea    r14,[rcx+0x10]
  426ec8:	cmp    bx,0x4
  426ecc:	jne    426ee0 <__flatcc_fb_coerce_scalar_type@@Base+0x30>
  426ece:	cmp    QWORD PTR [rcx],0x0
  426ed2:	js     426f2a <__flatcc_fb_coerce_scalar_type@@Base+0x7a>
  426ed4:	mov    WORD PTR [r14],0x5
  426eda:	mov    bx,0x5
  426ede:	jmp    426f34 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426ee0:	cmp    edx,0x5
  426ee3:	je     426f34 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426ee5:	cmp    bx,0x6
  426ee9:	jne    426f34 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426eeb:	cmp    DWORD PTR [rdi+0xfc],0x0
  426ef2:	je     426f30 <__flatcc_fb_coerce_scalar_type@@Base+0x80>
  426ef4:	mov    WORD PTR [rcx+0x10],0x5
  426efa:	movzx  r8d,BYTE PTR [rcx]
  426efe:	mov    QWORD PTR [rcx],r8
  426f01:	mov    bx,0x5
  426f05:	cmp    r8,0x2
  426f09:	jb     426f34 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426f0b:	lea    rdi,[rip+0x22982]        # 449894 <fb_schema_table_deleted@@Base+0x296c>
  426f12:	lea    rsi,[rip+0x2299a]        # 4498b3 <fb_schema_table_deleted@@Base+0x298b>
  426f19:	lea    rcx,[rip+0x229f3]        # 449913 <fb_schema_table_deleted@@Base+0x29eb>
  426f20:	mov    edx,0x34
  426f25:	call   406100 <__assert_fail@plt>
  426f2a:	mov    bx,0x4
  426f2e:	jmp    426f34 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426f30:	mov    bx,0x6
  426f34:	dec    edx
  426f36:	cmp    edx,0xa
  426f39:	ja     42715a <__flatcc_fb_coerce_scalar_type@@Base+0x2aa>
  426f3f:	lea    r8,[rip+0x22922]        # 449868 <fb_schema_table_deleted@@Base+0x2940>
  426f46:	movsxd rdx,DWORD PTR [r8+rdx*4]
  426f4a:	add    rdx,r8
  426f4d:	jmp    rdx
  426f4f:	cmp    bx,0x5
  426f53:	je     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426f59:	mov    rsi,QWORD PTR [rsi+0x8]
  426f5d:	lea    rdx,[rip+0x22a10]        # 449974 <fb_schema_table_deleted@@Base+0x2a4c>
  426f64:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426f69:	cmp    bx,0x6
  426f6d:	je     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426f73:	cmp    bx,0x5
  426f77:	jne    42719a <__flatcc_fb_coerce_scalar_type@@Base+0x2ea>
  426f7d:	cmp    DWORD PTR [rdi+0xfc],0x0
  426f84:	je     42719a <__flatcc_fb_coerce_scalar_type@@Base+0x2ea>
  426f8a:	cmp    QWORD PTR [rcx],0x2
  426f8e:	jb     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426f94:	mov    rsi,QWORD PTR [rsi+0x8]
  426f98:	lea    rdx,[rip+0x22c87]        # 449c26 <fb_schema_table_deleted@@Base+0x2cfe>
  426f9f:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426fa4:	cmp    bx,0x3
  426fa8:	je     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426fae:	cmp    bx,0x5
  426fb2:	je     427241 <__flatcc_fb_coerce_scalar_type@@Base+0x391>
  426fb8:	cmp    bx,0x4
  426fbc:	jne    42729e <__flatcc_fb_coerce_scalar_type@@Base+0x3ee>
  426fc2:	mov    rdx,QWORD PTR [rcx]
  426fc5:	vcvtsi2sd xmm0,xmm0,rdx
  426fca:	vcvttsd2si rbx,xmm0
  426fcf:	cmp    rdx,rbx
  426fd2:	jne    427291 <__flatcc_fb_coerce_scalar_type@@Base+0x3e1>
  426fd8:	jmp    427335 <__flatcc_fb_coerce_scalar_type@@Base+0x485>
  426fdd:	cmp    bx,0x5
  426fe1:	jne    42716a <__flatcc_fb_coerce_scalar_type@@Base+0x2ba>
  426fe7:	cmp    QWORD PTR [rcx],0x10000
  426fee:	jb     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426ff4:	mov    rsi,QWORD PTR [rsi+0x8]
  426ff8:	lea    rdx,[rip+0x22a38]        # 449a37 <fb_schema_table_deleted@@Base+0x2b0f>
  426fff:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427004:	cmp    bx,0x5
  427008:	jne    42717a <__flatcc_fb_coerce_scalar_type@@Base+0x2ca>
  42700e:	cmp    QWORD PTR [rcx],0x100
  427015:	jb     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  42701b:	mov    rsi,QWORD PTR [rsi+0x8]
  42701f:	lea    rdx,[rip+0x22a68]        # 449a8e <fb_schema_table_deleted@@Base+0x2b66>
  427026:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42702b:	cmp    bx,0x5
  42702f:	je     4271aa <__flatcc_fb_coerce_scalar_type@@Base+0x2fa>
  427035:	cmp    bx,0x4
  427039:	jne    427201 <__flatcc_fb_coerce_scalar_type@@Base+0x351>
  42703f:	cmp    QWORD PTR [rcx],0xffffffffffff7fff
  427046:	jg     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  42704c:	mov    rsi,QWORD PTR [rsi+0x8]
  427050:	lea    rdx,[rip+0x22b01]        # 449b58 <fb_schema_table_deleted@@Base+0x2c30>
  427057:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42705c:	cmp    bx,0x5
  427060:	jne    42718a <__flatcc_fb_coerce_scalar_type@@Base+0x2da>
  427066:	cmp    DWORD PTR [rcx+0x4],0x0
  42706a:	je     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  427070:	mov    rsi,QWORD PTR [rsi+0x8]
  427074:	lea    rdx,[rip+0x22965]        # 4499e0 <fb_schema_table_deleted@@Base+0x2ab8>
  42707b:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427080:	cmp    bx,0x4
  427084:	je     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  42708a:	cmp    bx,0x5
  42708e:	jne    427211 <__flatcc_fb_coerce_scalar_type@@Base+0x361>
  427094:	cmp    QWORD PTR [rcx],0x0
  427098:	jns    4271f6 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  42709e:	mov    rsi,QWORD PTR [rsi+0x8]
  4270a2:	lea    rdx,[rip+0x22a02]        # 449aab <fb_schema_table_deleted@@Base+0x2b83>
  4270a9:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4270ae:	cmp    bx,0x5
  4270b2:	je     4271c3 <__flatcc_fb_coerce_scalar_type@@Base+0x313>
  4270b8:	cmp    bx,0x4
  4270bc:	jne    427221 <__flatcc_fb_coerce_scalar_type@@Base+0x371>
  4270c2:	movabs rdx,0xffffffff7fffffff
  4270cc:	cmp    QWORD PTR [rcx],rdx
  4270cf:	jg     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  4270d5:	mov    rsi,QWORD PTR [rsi+0x8]
  4270d9:	lea    rdx,[rip+0x22a14]        # 449af4 <fb_schema_table_deleted@@Base+0x2bcc>
  4270e0:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4270e5:	cmp    bx,0x5
  4270e9:	je     4271dd <__flatcc_fb_coerce_scalar_type@@Base+0x32d>
  4270ef:	cmp    bx,0x4
  4270f3:	jne    427231 <__flatcc_fb_coerce_scalar_type@@Base+0x381>
  4270f9:	cmp    QWORD PTR [rcx],0xffffffffffffff7f
  427100:	jg     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  427106:	mov    rsi,QWORD PTR [rsi+0x8]
  42710a:	lea    rdx,[rip+0x22ab1]        # 449bc2 <fb_schema_table_deleted@@Base+0x2c9a>
  427111:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427116:	cmp    bx,0x3
  42711a:	je     4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  427120:	cmp    bx,0x5
  427124:	je     4272ab <__flatcc_fb_coerce_scalar_type@@Base+0x3fb>
  42712a:	cmp    bx,0x4
  42712e:	jne    4272ba <__flatcc_fb_coerce_scalar_type@@Base+0x40a>
  427134:	mov    rdx,QWORD PTR [rcx]
  427137:	vcvtsi2ss xmm0,xmm0,rdx
  42713c:	vcvttss2si rbx,xmm0
  427141:	cmp    rdx,rbx
  427144:	je     427331 <__flatcc_fb_coerce_scalar_type@@Base+0x481>
  42714a:	mov    rsi,QWORD PTR [rsi+0x8]
  42714e:	lea    rdx,[rip+0x22bae]        # 449d03 <fb_schema_table_deleted@@Base+0x2ddb>
  427155:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42715a:	mov    rsi,QWORD PTR [rsi+0x8]
  42715e:	lea    rdx,[rip+0x22c05]        # 449d6a <fb_schema_table_deleted@@Base+0x2e42>
  427165:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42716a:	mov    rsi,QWORD PTR [rsi+0x8]
  42716e:	lea    rdx,[rip+0x22888]        # 4499fd <fb_schema_table_deleted@@Base+0x2ad5>
  427175:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42717a:	mov    rsi,QWORD PTR [rsi+0x8]
  42717e:	lea    rdx,[rip+0x228d1]        # 449a56 <fb_schema_table_deleted@@Base+0x2b2e>
  427185:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42718a:	mov    rsi,QWORD PTR [rsi+0x8]
  42718e:	lea    rdx,[rip+0x22813]        # 4499a8 <fb_schema_table_deleted@@Base+0x2a80>
  427195:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42719a:	mov    rsi,QWORD PTR [rsi+0x8]
  42719e:	lea    rdx,[rip+0x22abf]        # 449c64 <fb_schema_table_deleted@@Base+0x2d3c>
  4271a5:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4271aa:	cmp    QWORD PTR [rcx],0x8000
  4271b1:	jl     4271f6 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  4271b3:	mov    rsi,QWORD PTR [rsi+0x8]
  4271b7:	lea    rdx,[rip+0x229b8]        # 449b76 <fb_schema_table_deleted@@Base+0x2c4e>
  4271be:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4271c3:	mov    edx,0x80000000
  4271c8:	cmp    QWORD PTR [rcx],rdx
  4271cb:	jl     4271f6 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  4271cd:	mov    rsi,QWORD PTR [rsi+0x8]
  4271d1:	lea    rdx,[rip+0x22938]        # 449b10 <fb_schema_table_deleted@@Base+0x2be8>
  4271d8:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4271dd:	cmp    QWORD PTR [rcx],0x80
  4271e4:	jl     4271f6 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  4271e6:	mov    rsi,QWORD PTR [rsi+0x8]
  4271ea:	lea    rdx,[rip+0x229ed]        # 449bde <fb_schema_table_deleted@@Base+0x2cb6>
  4271f1:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4271f6:	mov    WORD PTR [r14],0x4
  4271fc:	jmp    4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  427201:	mov    rsi,QWORD PTR [rsi+0x8]
  427205:	lea    rdx,[rip+0x22987]        # 449b93 <fb_schema_table_deleted@@Base+0x2c6b>
  42720c:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427211:	mov    rsi,QWORD PTR [rsi+0x8]
  427215:	lea    rdx,[rip+0x228ae]        # 449aca <fb_schema_table_deleted@@Base+0x2ba2>
  42721c:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427221:	mov    rsi,QWORD PTR [rsi+0x8]
  427225:	lea    rdx,[rip+0x228ff]        # 449b2b <fb_schema_table_deleted@@Base+0x2c03>
  42722c:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427231:	mov    rsi,QWORD PTR [rsi+0x8]
  427235:	lea    rdx,[rip+0x229bd]        # 449bf9 <fb_schema_table_deleted@@Base+0x2cd1>
  42723c:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  427241:	mov    r9,QWORD PTR [rcx]
  427244:	vmovq  xmm0,r9
  427249:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x225ef]        # 449840 <fb_schema_table_deleted@@Base+0x2918>
  427251:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x225f7]        # 449850 <fb_schema_table_deleted@@Base+0x2928>
  427259:	vhaddpd xmm0,xmm0,xmm0
  42725d:	vmovsd xmm1,QWORD PTR [rip+0x225fb]        # 449860 <fb_schema_table_deleted@@Base+0x2938>
  427265:	vsubsd xmm2,xmm0,xmm1
  427269:	vcvttsd2si r8,xmm2
  42726e:	movabs rbx,0x8000000000000000
  427278:	xor    rbx,r8
  42727b:	vcvttsd2si rdx,xmm0
  427280:	vucomisd xmm0,xmm1
  427284:	cmovae rdx,rbx
  427288:	cmp    r9,rdx
  42728b:	je     427335 <__flatcc_fb_coerce_scalar_type@@Base+0x485>
  427291:	mov    rsi,QWORD PTR [rsi+0x8]
  427295:	lea    rdx,[rip+0x229fe]        # 449c9a <fb_schema_table_deleted@@Base+0x2d72>
  42729c:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42729e:	mov    rsi,QWORD PTR [rsi+0x8]
  4272a2:	lea    rdx,[rip+0x22a21]        # 449cca <fb_schema_table_deleted@@Base+0x2da2>
  4272a9:	jmp    4272c5 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4272ab:	mov    r9,QWORD PTR [rcx]
  4272ae:	test   r9,r9
  4272b1:	js     4272e5 <__flatcc_fb_coerce_scalar_type@@Base+0x435>
  4272b3:	vcvtsi2ss xmm0,xmm0,r9
  4272b8:	jmp    4272fd <__flatcc_fb_coerce_scalar_type@@Base+0x44d>
  4272ba:	mov    rsi,QWORD PTR [rsi+0x8]
  4272be:	lea    rdx,[rip+0x22a6d]        # 449d32 <fb_schema_table_deleted@@Base+0x2e0a>
  4272c5:	xor    ecx,ecx
  4272c7:	xor    r8d,r8d
  4272ca:	xor    r9d,r9d
  4272cd:	call   41c3a0 <__flatcc_error_report@@Base>
  4272d2:	mov    WORD PTR [r14],0x1
  4272d8:	mov    eax,0xffffffff
  4272dd:	add    rsp,0x8
  4272e1:	pop    rbx
  4272e2:	pop    r14
  4272e4:	ret    
  4272e5:	mov    r8,r9
  4272e8:	shr    r8,1
  4272eb:	mov    edx,r9d
  4272ee:	and    edx,0x1
  4272f1:	or     rdx,r8
  4272f4:	vcvtsi2ss xmm0,xmm0,rdx
  4272f9:	vaddss xmm0,xmm0,xmm0
  4272fd:	vmovss xmm1,DWORD PTR [rip+0x2252f]        # 449834 <fb_schema_table_deleted@@Base+0x290c>
  427305:	vsubss xmm2,xmm0,xmm1
  427309:	vcvttss2si r8,xmm2
  42730e:	movabs rdx,0x8000000000000000
  427318:	xor    rdx,r8
  42731b:	vcvttss2si rbx,xmm0
  427320:	vucomiss xmm0,xmm1
  427324:	cmovae rbx,rdx
  427328:	cmp    r9,rbx
  42732b:	jne    42714a <__flatcc_fb_coerce_scalar_type@@Base+0x29a>
  427331:	vcvtss2sd xmm0,xmm0,xmm0
  427335:	vmovsd QWORD PTR [rcx],xmm0
  427339:	mov    WORD PTR [rcx+0x10],0x3
  42733f:	jmp    4272dd <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  427341:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42734b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427350 <flatcc_builder_default_alloc@@Base>:
  427350:	push   rbp
  427351:	push   r15
  427353:	push   r14
  427355:	push   r12
  427357:	push   rbx
  427358:	mov    rbx,rsi
  42735b:	test   rdx,rdx
  42735e:	je     427388 <flatcc_builder_default_alloc@@Base+0x38>
  427360:	mov    r14d,ecx
  427363:	dec    r8d
  427366:	cmp    r8d,0x6
  42736a:	ja     4273a6 <flatcc_builder_default_alloc@@Base+0x56>
  42736c:	mov    eax,0x100
  427371:	lea    rcx,[rip+0x22a08]        # 449d80 <fb_schema_table_deleted@@Base+0x2e58>
  427378:	movsxd rsi,DWORD PTR [rcx+r8*4]
  42737c:	add    rsi,rcx
  42737f:	jmp    rsi
  427381:	mov    eax,0x120
  427386:	jmp    4273c0 <flatcc_builder_default_alloc@@Base+0x70>
  427388:	mov    rdi,QWORD PTR [rbx]
  42738b:	xor    r15d,r15d
  42738e:	test   rdi,rdi
  427391:	je     42741f <flatcc_builder_default_alloc@@Base+0xcf>
  427397:	call   406040 <free@plt>
  42739c:	vxorps xmm0,xmm0,xmm0
  4273a0:	vmovups XMMWORD PTR [rbx],xmm0
  4273a4:	jmp    42741f <flatcc_builder_default_alloc@@Base+0xcf>
  4273a6:	mov    eax,0x20
  4273ab:	jmp    4273c0 <flatcc_builder_default_alloc@@Base+0x70>
  4273ad:	mov    rax,rdx
  4273b0:	jmp    4273c0 <flatcc_builder_default_alloc@@Base+0x70>
  4273b2:	mov    eax,0x40
  4273b7:	nop    WORD PTR [rax+rax*1+0x0]
  4273c0:	mov    rbp,rax
  4273c3:	add    rax,rax
  4273c6:	cmp    rbp,rdx
  4273c9:	jb     4273c0 <flatcc_builder_default_alloc@@Base+0x70>
  4273cb:	mov    rax,QWORD PTR [rbx+0x8]
  4273cf:	xor    r15d,r15d
  4273d2:	cmp    rax,rdx
  4273d5:	jb     4273df <flatcc_builder_default_alloc@@Base+0x8f>
  4273d7:	shr    rax,1
  4273da:	cmp    rax,rbp
  4273dd:	jae    42741f <flatcc_builder_default_alloc@@Base+0xcf>
  4273df:	mov    rdi,QWORD PTR [rbx]
  4273e2:	mov    rsi,rbp
  4273e5:	call   4061e0 <realloc@plt>
  4273ea:	test   rax,rax
  4273ed:	je     427419 <flatcc_builder_default_alloc@@Base+0xc9>
  4273ef:	mov    r12,rax
  4273f2:	test   r14d,r14d
  4273f5:	je     427410 <flatcc_builder_default_alloc@@Base+0xc0>
  4273f7:	mov    rax,QWORD PTR [rbx+0x8]
  4273fb:	mov    rdx,rbp
  4273fe:	sub    rdx,rax
  427401:	jbe    427410 <flatcc_builder_default_alloc@@Base+0xc0>
  427403:	mov    rdi,r12
  427406:	add    rdi,rax
  427409:	xor    esi,esi
  42740b:	call   406110 <memset@plt>
  427410:	mov    QWORD PTR [rbx],r12
  427413:	mov    QWORD PTR [rbx+0x8],rbp
  427417:	jmp    42741f <flatcc_builder_default_alloc@@Base+0xcf>
  427419:	mov    r15d,0xffffffff
  42741f:	mov    eax,r15d
  427422:	pop    rbx
  427423:	pop    r12
  427425:	pop    r14
  427427:	pop    r15
  427429:	pop    rbp
  42742a:	ret    
  42742b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427430 <flatcc_builder_flush_vtable_cache@@Base>:
  427430:	push   rbx
  427431:	cmp    QWORD PTR [rdi+0xd8],0x0
  427439:	je     427464 <flatcc_builder_flush_vtable_cache@@Base+0x34>
  42743b:	mov    rbx,rdi
  42743e:	mov    rdi,QWORD PTR [rdi+0xa8]
  427445:	mov    rdx,QWORD PTR [rbx+0xb0]
  42744c:	xor    esi,esi
  42744e:	call   406110 <memset@plt>
  427453:	movabs rax,0x1000000000
  42745d:	mov    QWORD PTR [rbx+0xe0],rax
  427464:	pop    rbx
  427465:	ret    
  427466:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427470 <flatcc_builder_custom_init@@Base>:
  427470:	vxorps xmm0,xmm0,xmm0
  427474:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  42747c:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  427484:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  42748c:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  427494:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  42749c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  4274a4:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  4274ac:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  4274b4:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  4274b9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  4274be:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  4274c3:	vmovups YMMWORD PTR [rdi],ymm0
  4274c7:	mov    QWORD PTR [rdi+0x180],0x0
  4274d2:	test   rsi,rsi
  4274d5:	je     4274f9 <flatcc_builder_custom_init@@Base+0x89>
  4274d7:	test   rcx,rcx
  4274da:	jne    4274e3 <flatcc_builder_custom_init@@Base+0x73>
  4274dc:	lea    rcx,[rip+0xfffffffffffffe6d]        # 427350 <flatcc_builder_default_alloc@@Base>
  4274e3:	mov    QWORD PTR [rdi+0x40],r8
  4274e7:	mov    QWORD PTR [rdi+0x50],rcx
  4274eb:	mov    QWORD PTR [rdi+0x38],rdx
  4274ef:	mov    QWORD PTR [rdi+0x48],rsi
  4274f3:	xor    eax,eax
  4274f5:	vzeroupper 
  4274f8:	ret    
  4274f9:	mov    DWORD PTR [rdi+0x128],0x1
  427503:	lea    rdx,[rdi+0x130]
  42750a:	lea    rsi,[rip+0x4a6f]        # 42bf80 <flatcc_emitter@@Base>
  427511:	test   rcx,rcx
  427514:	je     4274dc <flatcc_builder_custom_init@@Base+0x6c>
  427516:	jmp    4274e3 <flatcc_builder_custom_init@@Base+0x73>
  427518:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427520 <flatcc_builder_init@@Base>:
  427520:	vxorps xmm0,xmm0,xmm0
  427524:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  42752c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  427531:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  427536:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  42753e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  427546:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  42754e:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  427556:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  42755e:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  427566:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  42756e:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  427573:	vmovups YMMWORD PTR [rdi],ymm0
  427577:	mov    QWORD PTR [rdi+0x180],0x0
  427582:	mov    DWORD PTR [rdi+0x128],0x1
  42758c:	lea    rax,[rdi+0x130]
  427593:	mov    QWORD PTR [rdi+0x40],0x0
  42759b:	lea    rcx,[rip+0xfffffffffffffdae]        # 427350 <flatcc_builder_default_alloc@@Base>
  4275a2:	mov    QWORD PTR [rdi+0x50],rcx
  4275a6:	mov    QWORD PTR [rdi+0x38],rax
  4275aa:	lea    rax,[rip+0x49cf]        # 42bf80 <flatcc_emitter@@Base>
  4275b1:	mov    QWORD PTR [rdi+0x48],rax
  4275b5:	xor    eax,eax
  4275b7:	vzeroupper 
  4275ba:	ret    
  4275bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004275c0 <flatcc_builder_custom_reset@@Base>:
  4275c0:	push   rbp
  4275c1:	push   r15
  4275c3:	push   r14
  4275c5:	push   r12
  4275c7:	push   rbx
  4275c8:	mov    r15d,edx
  4275cb:	mov    r14d,esi
  4275ce:	mov    r12,rdi
  4275d1:	lea    rbp,[rdi+0x58]
  4275d5:	xor    ebx,ebx
  4275d7:	jmp    4275f8 <flatcc_builder_custom_reset@@Base+0x38>
  4275d9:	nop    DWORD PTR [rax+0x0]
  4275e0:	cmp    QWORD PTR [rbp+0x8],0x0
  4275e5:	jne    4276f6 <flatcc_builder_custom_reset@@Base+0x136>
  4275eb:	inc    rbx
  4275ee:	add    rbp,0x10
  4275f2:	cmp    rbx,0x8
  4275f6:	je     42763f <flatcc_builder_custom_reset@@Base+0x7f>
  4275f8:	mov    rdi,QWORD PTR [rbp+0x0]
  4275fc:	test   rdi,rdi
  4275ff:	je     4275e0 <flatcc_builder_custom_reset@@Base+0x20>
  427601:	test   r15d,r15d
  427604:	je     427632 <flatcc_builder_custom_reset@@Base+0x72>
  427606:	cmp    rbx,0x5
  42760a:	je     427632 <flatcc_builder_custom_reset@@Base+0x72>
  42760c:	mov    rdi,QWORD PTR [r12+0x40]
  427611:	mov    edx,0x1
  427616:	mov    rsi,rbp
  427619:	mov    ecx,0x1
  42761e:	mov    r8d,ebx
  427621:	call   QWORD PTR [r12+0x50]
  427626:	test   eax,eax
  427628:	jne    4276e6 <flatcc_builder_custom_reset@@Base+0x126>
  42762e:	mov    rdi,QWORD PTR [rbp+0x0]
  427632:	mov    rdx,QWORD PTR [rbp+0x8]
  427636:	xor    esi,esi
  427638:	call   406110 <memset@plt>
  42763d:	jmp    4275eb <flatcc_builder_custom_reset@@Base+0x2b>
  42763f:	mov    DWORD PTR [r12+0xe0],0x0
  42764b:	cmp    DWORD PTR [r12+0xe4],0x0
  427654:	je     427662 <flatcc_builder_custom_reset@@Base+0xa2>
  427656:	mov    DWORD PTR [r12+0xe4],0x10
  427662:	mov    WORD PTR [r12+0xe8],0x0
  42766d:	mov    QWORD PTR [r12+0xf0],0x0
  427679:	mov    QWORD PTR [r12+0x20],0x0
  427682:	vxorps xmm0,xmm0,xmm0
  427686:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  427690:	mov    rax,QWORD PTR [r12+0x58]
  427695:	mov    rcx,QWORD PTR [r12+0x68]
  42769a:	mov    QWORD PTR [r12+0x18],rcx
  42769f:	mov    rcx,QWORD PTR [r12+0x88]
  4276a7:	mov    QWORD PTR [r12],rcx
  4276ab:	mov    QWORD PTR [r12+0x8],rax
  4276b0:	mov    QWORD PTR [r12+0x30],0x0
  4276b9:	test   r14d,r14d
  4276bc:	je     4276c8 <flatcc_builder_custom_reset@@Base+0x108>
  4276be:	vmovups XMMWORD PTR [r12+0x118],xmm0
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR [r12+0x128],0x0
  4276d3:	je     4276eb <flatcc_builder_custom_reset@@Base+0x12b>
  4276d5:	add    r12,0x130
  4276dc:	mov    rdi,r12
  4276df:	call   42be00 <flatcc_emitter_reset@@Base>
  4276e4:	jmp    4276eb <flatcc_builder_custom_reset@@Base+0x12b>
  4276e6:	mov    ebx,0xffffffff
  4276eb:	mov    eax,ebx
  4276ed:	pop    rbx
  4276ee:	pop    r12
  4276f0:	pop    r14
  4276f2:	pop    r15
  4276f4:	pop    rbp
  4276f5:	ret    
  4276f6:	lea    rdi,[rip+0x228d3]        # 449fd0 <flatcc_builder_padding_base@@Base+0x230>
  4276fd:	lea    rsi,[rip+0x228de]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427704:	lea    rcx,[rip+0x22937]        # 44a042 <flatcc_builder_padding_base@@Base+0x2a2>
  42770b:	mov    edx,0x1b2
  427710:	call   406100 <__assert_fail@plt>
  427715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42771f:	nop

0000000000427720 <flatcc_builder_reset@@Base>:
  427720:	push   rbx
  427721:	mov    rbx,rdi
  427724:	mov    rdi,QWORD PTR [rdi+0x58]
  427728:	mov    rdx,QWORD PTR [rbx+0x60]
  42772c:	test   rdi,rdi
  42772f:	je     42773a <flatcc_builder_reset@@Base+0x1a>
  427731:	xor    esi,esi
  427733:	call   406110 <memset@plt>
  427738:	jmp    427743 <flatcc_builder_reset@@Base+0x23>
  42773a:	test   rdx,rdx
  42773d:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  427743:	mov    rdi,QWORD PTR [rbx+0x68]
  427747:	mov    rdx,QWORD PTR [rbx+0x70]
  42774b:	test   rdi,rdi
  42774e:	je     427759 <flatcc_builder_reset@@Base+0x39>
  427750:	xor    esi,esi
  427752:	call   406110 <memset@plt>
  427757:	jmp    427762 <flatcc_builder_reset@@Base+0x42>
  427759:	test   rdx,rdx
  42775c:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  427762:	mov    rdi,QWORD PTR [rbx+0x78]
  427766:	mov    rdx,QWORD PTR [rbx+0x80]
  42776d:	test   rdi,rdi
  427770:	je     42777b <flatcc_builder_reset@@Base+0x5b>
  427772:	xor    esi,esi
  427774:	call   406110 <memset@plt>
  427779:	jmp    427784 <flatcc_builder_reset@@Base+0x64>
  42777b:	test   rdx,rdx
  42777e:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  427784:	mov    rdi,QWORD PTR [rbx+0x88]
  42778b:	mov    rdx,QWORD PTR [rbx+0x90]
  427792:	test   rdi,rdi
  427795:	je     4277a0 <flatcc_builder_reset@@Base+0x80>
  427797:	xor    esi,esi
  427799:	call   406110 <memset@plt>
  42779e:	jmp    4277a9 <flatcc_builder_reset@@Base+0x89>
  4277a0:	test   rdx,rdx
  4277a3:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  4277a9:	mov    rdi,QWORD PTR [rbx+0x98]
  4277b0:	mov    rdx,QWORD PTR [rbx+0xa0]
  4277b7:	test   rdi,rdi
  4277ba:	je     4277c5 <flatcc_builder_reset@@Base+0xa5>
  4277bc:	xor    esi,esi
  4277be:	call   406110 <memset@plt>
  4277c3:	jmp    4277ce <flatcc_builder_reset@@Base+0xae>
  4277c5:	test   rdx,rdx
  4277c8:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  4277ce:	mov    rdi,QWORD PTR [rbx+0xa8]
  4277d5:	mov    rdx,QWORD PTR [rbx+0xb0]
  4277dc:	test   rdi,rdi
  4277df:	je     4277ea <flatcc_builder_reset@@Base+0xca>
  4277e1:	xor    esi,esi
  4277e3:	call   406110 <memset@plt>
  4277e8:	jmp    4277f3 <flatcc_builder_reset@@Base+0xd3>
  4277ea:	test   rdx,rdx
  4277ed:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  4277f3:	mov    rdi,QWORD PTR [rbx+0xb8]
  4277fa:	mov    rdx,QWORD PTR [rbx+0xc0]
  427801:	test   rdi,rdi
  427804:	je     42780f <flatcc_builder_reset@@Base+0xef>
  427806:	xor    esi,esi
  427808:	call   406110 <memset@plt>
  42780d:	jmp    427818 <flatcc_builder_reset@@Base+0xf8>
  42780f:	test   rdx,rdx
  427812:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  427818:	mov    rdi,QWORD PTR [rbx+0xc8]
  42781f:	mov    rdx,QWORD PTR [rbx+0xd0]
  427826:	test   rdi,rdi
  427829:	je     427834 <flatcc_builder_reset@@Base+0x114>
  42782b:	xor    esi,esi
  42782d:	call   406110 <memset@plt>
  427832:	jmp    42783d <flatcc_builder_reset@@Base+0x11d>
  427834:	test   rdx,rdx
  427837:	jne    4278c0 <flatcc_builder_reset@@Base+0x1a0>
  42783d:	mov    DWORD PTR [rbx+0xe0],0x0
  427847:	cmp    DWORD PTR [rbx+0xe4],0x0
  42784e:	je     42785a <flatcc_builder_reset@@Base+0x13a>
  427850:	mov    DWORD PTR [rbx+0xe4],0x10
  42785a:	mov    WORD PTR [rbx+0xe8],0x0
  427863:	mov    QWORD PTR [rbx+0xf0],0x0
  42786e:	mov    QWORD PTR [rbx+0x20],0x0
  427876:	vxorps xmm0,xmm0,xmm0
  42787a:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  427882:	mov    rax,QWORD PTR [rbx+0x58]
  427886:	mov    rcx,QWORD PTR [rbx+0x68]
  42788a:	mov    QWORD PTR [rbx+0x18],rcx
  42788e:	mov    rcx,QWORD PTR [rbx+0x88]
  427895:	mov    QWORD PTR [rbx],rcx
  427898:	mov    QWORD PTR [rbx+0x8],rax
  42789c:	mov    QWORD PTR [rbx+0x30],0x0
  4278a4:	cmp    DWORD PTR [rbx+0x128],0x0
  4278ab:	je     4278bc <flatcc_builder_reset@@Base+0x19c>
  4278ad:	add    rbx,0x130
  4278b4:	mov    rdi,rbx
  4278b7:	call   42be00 <flatcc_emitter_reset@@Base>
  4278bc:	xor    eax,eax
  4278be:	pop    rbx
  4278bf:	ret    
  4278c0:	lea    rdi,[rip+0x22709]        # 449fd0 <flatcc_builder_padding_base@@Base+0x230>
  4278c7:	lea    rsi,[rip+0x22714]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4278ce:	lea    rcx,[rip+0x2276d]        # 44a042 <flatcc_builder_padding_base@@Base+0x2a2>
  4278d5:	mov    edx,0x1b2
  4278da:	call   406100 <__assert_fail@plt>
  4278df:	nop

00000000004278e0 <flatcc_builder_clear@@Base>:
  4278e0:	push   rbx
  4278e1:	mov    rbx,rdi
  4278e4:	lea    rsi,[rdi+0x58]
  4278e8:	mov    rdi,QWORD PTR [rdi+0x40]
  4278ec:	xor    edx,edx
  4278ee:	xor    ecx,ecx
  4278f0:	xor    r8d,r8d
  4278f3:	call   QWORD PTR [rbx+0x50]
  4278f6:	lea    rsi,[rbx+0x68]
  4278fa:	mov    rdi,QWORD PTR [rbx+0x40]
  4278fe:	xor    edx,edx
  427900:	xor    ecx,ecx
  427902:	mov    r8d,0x1
  427908:	call   QWORD PTR [rbx+0x50]
  42790b:	lea    rsi,[rbx+0x78]
  42790f:	mov    rdi,QWORD PTR [rbx+0x40]
  427913:	xor    edx,edx
  427915:	xor    ecx,ecx
  427917:	mov    r8d,0x2
  42791d:	call   QWORD PTR [rbx+0x50]
  427920:	lea    rsi,[rbx+0x88]
  427927:	mov    rdi,QWORD PTR [rbx+0x40]
  42792b:	xor    edx,edx
  42792d:	xor    ecx,ecx
  42792f:	mov    r8d,0x3
  427935:	call   QWORD PTR [rbx+0x50]
  427938:	lea    rsi,[rbx+0x98]
  42793f:	mov    rdi,QWORD PTR [rbx+0x40]
  427943:	xor    edx,edx
  427945:	xor    ecx,ecx
  427947:	mov    r8d,0x4
  42794d:	call   QWORD PTR [rbx+0x50]
  427950:	lea    rsi,[rbx+0xa8]
  427957:	mov    rdi,QWORD PTR [rbx+0x40]
  42795b:	xor    edx,edx
  42795d:	xor    ecx,ecx
  42795f:	mov    r8d,0x5
  427965:	call   QWORD PTR [rbx+0x50]
  427968:	lea    rsi,[rbx+0xb8]
  42796f:	mov    rdi,QWORD PTR [rbx+0x40]
  427973:	xor    edx,edx
  427975:	xor    ecx,ecx
  427977:	mov    r8d,0x6
  42797d:	call   QWORD PTR [rbx+0x50]
  427980:	lea    rsi,[rbx+0xc8]
  427987:	mov    rdi,QWORD PTR [rbx+0x40]
  42798b:	xor    edx,edx
  42798d:	xor    ecx,ecx
  42798f:	mov    r8d,0x7
  427995:	call   QWORD PTR [rbx+0x50]
  427998:	cmp    DWORD PTR [rbx+0x128],0x0
  42799f:	je     4279ad <flatcc_builder_clear@@Base+0xcd>
  4279a1:	lea    rdi,[rbx+0x130]
  4279a8:	call   42bf00 <flatcc_emitter_clear@@Base>
  4279ad:	vxorps xmm0,xmm0,xmm0
  4279b1:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  4279b9:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  4279c1:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  4279c9:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  4279d1:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  4279d9:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  4279e1:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  4279e9:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  4279f1:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  4279f6:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  4279fb:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  427a00:	vmovups YMMWORD PTR [rbx],ymm0
  427a04:	mov    QWORD PTR [rbx+0x180],0x0
  427a0f:	pop    rbx
  427a10:	vzeroupper 
  427a13:	ret    
  427a14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a1e:	xchg   ax,ax

0000000000427a20 <flatcc_builder_enter_user_frame_ptr@@Base>:
  427a20:	push   r15
  427a22:	push   r14
  427a24:	push   r12
  427a26:	push   rbx
  427a27:	push   rax
  427a28:	mov    r14,rsi
  427a2b:	mov    r15,rdi
  427a2e:	add    r14,0xf
  427a32:	and    r14,0xfffffffffffffff8
  427a36:	mov    rbx,QWORD PTR [rdi+0x180]
  427a3d:	lea    r12,[rdi+0xc8]
  427a44:	lea    rdx,[rbx+r14*1]
  427a48:	cmp    rdx,QWORD PTR [rdi+0xd0]
  427a4f:	jbe    427a68 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  427a51:	mov    rdi,QWORD PTR [r15+0x40]
  427a55:	mov    rsi,r12
  427a58:	xor    ecx,ecx
  427a5a:	mov    r8d,0x7
  427a60:	call   QWORD PTR [r15+0x50]
  427a64:	test   eax,eax
  427a66:	jne    427ab8 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  427a68:	add    rbx,QWORD PTR [r12]
  427a6c:	je     427aa7 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  427a6e:	mov    rdi,rbx
  427a71:	xor    esi,esi
  427a73:	mov    rdx,r14
  427a76:	call   406110 <memset@plt>
  427a7b:	mov    rax,QWORD PTR [r15+0x178]
  427a82:	mov    QWORD PTR [rbx],rax
  427a85:	add    rbx,0x8
  427a89:	mov    rax,QWORD PTR [r15+0x180]
  427a90:	lea    rcx,[rax+0x8]
  427a94:	mov    QWORD PTR [r15+0x178],rcx
  427a9b:	add    rax,r14
  427a9e:	mov    QWORD PTR [r15+0x180],rax
  427aa5:	jmp    427aa9 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  427aa7:	xor    ebx,ebx
  427aa9:	mov    rax,rbx
  427aac:	add    rsp,0x8
  427ab0:	pop    rbx
  427ab1:	pop    r12
  427ab3:	pop    r14
  427ab5:	pop    r15
  427ab7:	ret    
  427ab8:	lea    rdi,[rip+0x190d0]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427abf:	lea    rsi,[rip+0x2251c]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427ac6:	lea    rcx,[rip+0x2350f]        # 44afdc <flatcc_builder_padding_base@@Base+0x123c>
  427acd:	mov    edx,0x134
  427ad2:	call   406100 <__assert_fail@plt>
  427ad7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427ae0 <flatcc_builder_enter_user_frame@@Base>:
  427ae0:	push   r15
  427ae2:	push   r14
  427ae4:	push   r12
  427ae6:	push   rbx
  427ae7:	push   rax
  427ae8:	mov    r14,rsi
  427aeb:	mov    rbx,rdi
  427aee:	add    r14,0xf
  427af2:	and    r14,0xfffffffffffffff8
  427af6:	mov    r15,QWORD PTR [rdi+0x180]
  427afd:	lea    r12,[rdi+0xc8]
  427b04:	lea    rdx,[r15+r14*1]
  427b08:	cmp    rdx,QWORD PTR [rdi+0xd0]
  427b0f:	jbe    427b27 <flatcc_builder_enter_user_frame@@Base+0x47>
  427b11:	mov    rdi,QWORD PTR [rbx+0x40]
  427b15:	mov    rsi,r12
  427b18:	xor    ecx,ecx
  427b1a:	mov    r8d,0x7
  427b20:	call   QWORD PTR [rbx+0x50]
  427b23:	test   eax,eax
  427b25:	jne    427b70 <flatcc_builder_enter_user_frame@@Base+0x90>
  427b27:	add    r15,QWORD PTR [r12]
  427b2b:	je     427b62 <flatcc_builder_enter_user_frame@@Base+0x82>
  427b2d:	mov    rdi,r15
  427b30:	xor    esi,esi
  427b32:	mov    rdx,r14
  427b35:	call   406110 <memset@plt>
  427b3a:	mov    rax,QWORD PTR [rbx+0x178]
  427b41:	mov    QWORD PTR [r15],rax
  427b44:	mov    rcx,QWORD PTR [rbx+0x180]
  427b4b:	lea    rax,[rcx+0x8]
  427b4f:	mov    QWORD PTR [rbx+0x178],rax
  427b56:	add    rcx,r14
  427b59:	mov    QWORD PTR [rbx+0x180],rcx
  427b60:	jmp    427b64 <flatcc_builder_enter_user_frame@@Base+0x84>
  427b62:	xor    eax,eax
  427b64:	add    rsp,0x8
  427b68:	pop    rbx
  427b69:	pop    r12
  427b6b:	pop    r14
  427b6d:	pop    r15
  427b6f:	ret    
  427b70:	lea    rdi,[rip+0x19018]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427b77:	lea    rsi,[rip+0x22464]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427b7e:	lea    rcx,[rip+0x23457]        # 44afdc <flatcc_builder_padding_base@@Base+0x123c>
  427b85:	mov    edx,0x134
  427b8a:	call   406100 <__assert_fail@plt>
  427b8f:	nop

0000000000427b90 <flatcc_builder_exit_user_frame@@Base>:
  427b90:	push   rax
  427b91:	mov    rax,QWORD PTR [rdi+0x178]
  427b98:	test   rax,rax
  427b9b:	je     427bbf <flatcc_builder_exit_user_frame@@Base+0x2f>
  427b9d:	mov    rcx,QWORD PTR [rdi+0xc8]
  427ba4:	mov    edx,eax
  427ba6:	add    rax,0xfffffffffffffff8
  427baa:	mov    QWORD PTR [rdi+0x180],rax
  427bb1:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  427bb6:	mov    QWORD PTR [rdi+0x178],rax
  427bbd:	pop    rcx
  427bbe:	ret    
  427bbf:	lea    rdi,[rip+0x224ba]        # 44a080 <flatcc_builder_padding_base@@Base+0x2e0>
  427bc6:	lea    rsi,[rip+0x22415]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427bcd:	lea    rcx,[rip+0x224c5]        # 44a099 <flatcc_builder_padding_base@@Base+0x2f9>
  427bd4:	mov    edx,0x21e
  427bd9:	call   406100 <__assert_fail@plt>
  427bde:	xchg   ax,ax

0000000000427be0 <flatcc_builder_exit_user_frame_at@@Base>:
  427be0:	push   rax
  427be1:	cmp    QWORD PTR [rdi+0x178],rsi
  427be8:	jb     427c18 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  427bea:	mov    QWORD PTR [rdi+0x178],rsi
  427bf1:	test   rsi,rsi
  427bf4:	je     427c37 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  427bf6:	mov    rax,QWORD PTR [rdi+0xc8]
  427bfd:	mov    ecx,esi
  427bff:	add    rsi,0xfffffffffffffff8
  427c03:	mov    QWORD PTR [rdi+0x180],rsi
  427c0a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  427c0f:	mov    QWORD PTR [rdi+0x178],rax
  427c16:	pop    rcx
  427c17:	ret    
  427c18:	lea    rdi,[rip+0x224b4]        # 44a0d3 <flatcc_builder_padding_base@@Base+0x333>
  427c1f:	lea    rsi,[rip+0x223bc]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427c26:	lea    rcx,[rip+0x224c5]        # 44a0f2 <flatcc_builder_padding_base@@Base+0x352>
  427c2d:	mov    edx,0x227
  427c32:	call   406100 <__assert_fail@plt>
  427c37:	lea    rdi,[rip+0x22442]        # 44a080 <flatcc_builder_padding_base@@Base+0x2e0>
  427c3e:	lea    rsi,[rip+0x2239d]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427c45:	lea    rcx,[rip+0x2244d]        # 44a099 <flatcc_builder_padding_base@@Base+0x2f9>
  427c4c:	mov    edx,0x21e
  427c51:	call   406100 <__assert_fail@plt>
  427c56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427c60 <flatcc_builder_get_current_user_frame@@Base>:
  427c60:	mov    rax,QWORD PTR [rdi+0x178]
  427c67:	ret    
  427c68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427c70 <flatcc_builder_get_user_frame_ptr@@Base>:
  427c70:	mov    eax,esi
  427c72:	add    rax,QWORD PTR [rdi+0xc8]
  427c79:	ret    
  427c7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427c80 <flatcc_builder_embed_buffer@@Base>:
  427c80:	push   rbp
  427c81:	push   r15
  427c83:	push   r14
  427c85:	push   r12
  427c87:	push   rbx
  427c88:	sub    rsp,0xa0
  427c8f:	mov    ebx,r9d
  427c92:	mov    rbp,rcx
  427c95:	mov    r15,rdx
  427c98:	mov    edx,esi
  427c9a:	mov    r12,rdi
  427c9d:	mov    WORD PTR [rsp+0xa],r8w
  427ca3:	xor    ecx,ecx
  427ca5:	cmp    DWORD PTR [rdi+0x100],0x0
  427cac:	setne  cl
  427caf:	lea    rsi,[rsp+0xa]
  427cb4:	call   427e20 <flatcc_builder_embed_buffer@@Base+0x1a0>
  427cb9:	and    ebx,0x2
  427cbc:	movzx  eax,WORD PTR [rsp+0xa]
  427cc1:	mov    r14d,DWORD PTR [r12+0xf0]
  427cc9:	lea    ecx,[rbp+rbx*2+0x0]
  427ccd:	mov    edx,r14d
  427cd0:	sub    edx,ecx
  427cd2:	dec    eax
  427cd4:	and    eax,edx
  427cd6:	lea    ecx,[rax+rbp*1]
  427cd9:	mov    DWORD PTR [rsp+0xc],ecx
  427cdd:	mov    QWORD PTR [rsp+0x10],0x0
  427ce6:	mov    DWORD PTR [rsp+0x18],0x0
  427cee:	cmp    DWORD PTR [r12+0x100],0x0
  427cf7:	je     427dc9 <flatcc_builder_embed_buffer@@Base+0x149>
  427cfd:	mov    QWORD PTR [rsp+0x10],0x4
  427d06:	lea    rcx,[rsp+0xc]
  427d0b:	mov    QWORD PTR [rsp+0x20],rcx
  427d10:	mov    QWORD PTR [rsp+0x28],0x4
  427d19:	mov    DWORD PTR [rsp+0x18],0x1
  427d21:	mov    r8d,0x4
  427d27:	mov    edx,0x1
  427d2c:	test   rbp,rbp
  427d2f:	je     427d4f <flatcc_builder_embed_buffer@@Base+0xcf>
  427d31:	add    r8,rbp
  427d34:	mov    QWORD PTR [rsp+0x10],r8
  427d39:	mov    ecx,edx
  427d3b:	shl    rcx,0x4
  427d3f:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  427d44:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  427d49:	inc    edx
  427d4b:	mov    DWORD PTR [rsp+0x18],edx
  427d4f:	test   eax,eax
  427d51:	je     427d7a <flatcc_builder_embed_buffer@@Base+0xfa>
  427d53:	mov    eax,eax
  427d55:	add    r8,rax
  427d58:	mov    QWORD PTR [rsp+0x10],r8
  427d5d:	mov    ecx,edx
  427d5f:	shl    rcx,0x4
  427d63:	lea    rsi,[rip+0x22036]        # 449da0 <flatcc_builder_padding_base@@Base>
  427d6a:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  427d6f:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  427d74:	inc    edx
  427d76:	mov    DWORD PTR [rsp+0x18],edx
  427d7a:	cmp    r8,0x11
  427d7e:	setb   al
  427d81:	lea    rcx,[r8-0x10]
  427d85:	shr    rcx,0x20
  427d89:	sete   cl
  427d8c:	test   r8d,r8d
  427d8f:	jle    427ddc <flatcc_builder_embed_buffer@@Base+0x15c>
  427d91:	or     al,cl
  427d93:	je     427ddc <flatcc_builder_embed_buffer@@Base+0x15c>
  427d95:	sub    r14d,r8d
  427d98:	mov    rdi,QWORD PTR [r12+0x38]
  427d9d:	lea    rsi,[rsp+0x20]
  427da2:	mov    ecx,r14d
  427da5:	call   QWORD PTR [r12+0x48]
  427daa:	test   eax,eax
  427dac:	jne    427dfb <flatcc_builder_embed_buffer@@Base+0x17b>
  427dae:	mov    DWORD PTR [r12+0xf0],r14d
  427db6:	mov    eax,r14d
  427db9:	add    rsp,0xa0
  427dc0:	pop    rbx
  427dc1:	pop    r12
  427dc3:	pop    r14
  427dc5:	pop    r15
  427dc7:	pop    rbp
  427dc8:	ret    
  427dc9:	xor    edx,edx
  427dcb:	xor    r8d,r8d
  427dce:	test   rbp,rbp
  427dd1:	jne    427d31 <flatcc_builder_embed_buffer@@Base+0xb1>
  427dd7:	jmp    427d4f <flatcc_builder_embed_buffer@@Base+0xcf>
  427ddc:	lea    rdi,[rip+0x18dac]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427de3:	lea    rsi,[rip+0x221f8]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427dea:	lea    rcx,[rip+0x23270]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  427df1:	mov    edx,0x287
  427df6:	call   406100 <__assert_fail@plt>
  427dfb:	lea    rdi,[rip+0x18d8d]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427e02:	lea    rsi,[rip+0x221d9]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427e09:	lea    rcx,[rip+0x23251]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  427e10:	mov    edx,0x28b
  427e15:	call   406100 <__assert_fail@plt>
  427e1a:	nop    WORD PTR [rax+rax*1+0x0]
  427e20:	push   rbx
  427e21:	sub    rsp,0x90
  427e28:	mov    rax,rdi
  427e2b:	test   dx,dx
  427e2e:	jne    427e41 <flatcc_builder_embed_buffer@@Base+0x1c1>
  427e30:	mov    edi,DWORD PTR [rax+0xec]
  427e36:	test   di,di
  427e39:	mov    edx,0x1
  427e3e:	cmovne edx,edi
  427e41:	movzx  ebx,WORD PTR [rsi]
  427e44:	mov    edi,0x4
  427e49:	cmp    bx,0x4
  427e4d:	cmovae edi,ebx
  427e50:	jb     427e5d <flatcc_builder_embed_buffer@@Base+0x1dd>
  427e52:	cmp    di,dx
  427e55:	jb     427e5d <flatcc_builder_embed_buffer@@Base+0x1dd>
  427e57:	test   ecx,ecx
  427e59:	jne    427ec4 <flatcc_builder_embed_buffer@@Base+0x244>
  427e5b:	jmp    427e6a <flatcc_builder_embed_buffer@@Base+0x1ea>
  427e5d:	cmp    di,dx
  427e60:	cmovb  edi,edx
  427e63:	mov    WORD PTR [rsi],di
  427e66:	test   ecx,ecx
  427e68:	jne    427ec4 <flatcc_builder_embed_buffer@@Base+0x244>
  427e6a:	mov    ebx,DWORD PTR [rax+0xf4]
  427e70:	movzx  r8d,dx
  427e74:	dec    r8d
  427e77:	and    r8d,ebx
  427e7a:	je     427ec4 <flatcc_builder_embed_buffer@@Base+0x244>
  427e7c:	mov    QWORD PTR [rsp],r8
  427e80:	lea    rcx,[rip+0x21f19]        # 449da0 <flatcc_builder_padding_base@@Base>
  427e87:	mov    QWORD PTR [rsp+0x10],rcx
  427e8c:	mov    QWORD PTR [rsp+0x18],r8
  427e91:	mov    DWORD PTR [rsp+0x8],0x1
  427e99:	lea    ecx,[r8+rbx*1]
  427e9d:	mov    DWORD PTR [rax+0xf4],ecx
  427ea3:	test   r8d,r8d
  427ea6:	js     427ecd <flatcc_builder_embed_buffer@@Base+0x24d>
  427ea8:	mov    rdi,QWORD PTR [rax+0x38]
  427eac:	lea    rsi,[rsp+0x10]
  427eb1:	mov    edx,0x1
  427eb6:	mov    ecx,ebx
  427eb8:	call   QWORD PTR [rax+0x48]
  427ebb:	test   eax,eax
  427ebd:	jne    427eec <flatcc_builder_embed_buffer@@Base+0x26c>
  427ebf:	cmp    ebx,0xffffffff
  427ec2:	je     427f0b <flatcc_builder_embed_buffer@@Base+0x28b>
  427ec4:	add    rsp,0x90
  427ecb:	pop    rbx
  427ecc:	ret    
  427ecd:	lea    rdi,[rip+0x18cbb]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427ed4:	lea    rsi,[rip+0x22107]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427edb:	lea    rcx,[rip+0x2323b]        # 44b11d <flatcc_builder_padding_base@@Base+0x137d>
  427ee2:	mov    edx,0x2a1
  427ee7:	call   406100 <__assert_fail@plt>
  427eec:	lea    rdi,[rip+0x18c9c]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427ef3:	lea    rsi,[rip+0x220e8]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427efa:	lea    rcx,[rip+0x2321c]        # 44b11d <flatcc_builder_padding_base@@Base+0x137d>
  427f01:	mov    edx,0x2a5
  427f06:	call   406100 <__assert_fail@plt>
  427f0b:	lea    rdi,[rip+0x18c7d]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  427f12:	lea    rsi,[rip+0x220c9]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  427f19:	lea    rcx,[rip+0x230ff]        # 44b01f <flatcc_builder_padding_base@@Base+0x127f>
  427f20:	mov    edx,0x2be
  427f25:	call   406100 <__assert_fail@plt>
  427f2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427f30 <flatcc_builder_create_buffer@@Base>:
  427f30:	push   rbp
  427f31:	push   r15
  427f33:	push   r14
  427f35:	push   r13
  427f37:	push   r12
  427f39:	push   rbx
  427f3a:	sub    rsp,0xa8
  427f41:	mov    r12d,r9d
  427f44:	mov    r14d,ecx
  427f47:	mov    rbp,rsi
  427f4a:	mov    r13,rdi
  427f4d:	mov    WORD PTR [rsp+0xa],r8w
  427f53:	mov    DWORD PTR [rsp+0xc],0x0
  427f5b:	mov    r15d,r9d
  427f5e:	and    r15d,0x1
  427f62:	lea    rsi,[rsp+0xa]
  427f67:	mov    ecx,r15d
  427f6a:	call   427e20 <flatcc_builder_embed_buffer@@Base+0x1a0>
  427f6f:	movzx  eax,WORD PTR [rsp+0xa]
  427f74:	cmp    WORD PTR [r13+0xe8],ax
  427f7c:	jae    427f86 <flatcc_builder_create_buffer@@Base+0x56>
  427f7e:	mov    WORD PTR [r13+0xe8],ax
  427f86:	movzx  edx,ax
  427f89:	xor    eax,eax
  427f8b:	test   rbp,rbp
  427f8e:	je     427fa8 <flatcc_builder_create_buffer@@Base+0x78>
  427f90:	mov    ecx,DWORD PTR [rbp+0x0]
  427f93:	mov    DWORD PTR [rsp+0xc],ecx
  427f97:	xor    edi,edi
  427f99:	test   ecx,ecx
  427f9b:	setne  dil
  427f9f:	mov    rsi,rdi
  427fa2:	shl    rsi,0x2
  427fa6:	jmp    427fac <flatcc_builder_create_buffer@@Base+0x7c>
  427fa8:	xor    edi,edi
  427faa:	xor    esi,esi
  427fac:	lea    ebx,[r12+r12*1]
  427fb0:	and    ebx,0x4
  427fb3:	mov    ebp,DWORD PTR [r13+0xf0]
  427fba:	mov    ecx,ebp
  427fbc:	sub    ecx,ebx
  427fbe:	sub    ecx,esi
  427fc0:	add    ecx,0xfffffffc
  427fc3:	dec    edx
  427fc5:	mov    QWORD PTR [rsp+0x18],0x0
  427fce:	mov    DWORD PTR [rsp+0x20],0x0
  427fd6:	test   r12b,0x3
  427fda:	je     42800d <flatcc_builder_create_buffer@@Base+0xdd>
  427fdc:	mov    QWORD PTR [rsp+0x18],0x4
  427fe5:	lea    rax,[rsp+0x10]
  427fea:	mov    QWORD PTR [rsp+0x28],rax
  427fef:	mov    QWORD PTR [rsp+0x30],0x4
  427ff8:	mov    DWORD PTR [rsp+0x20],0x1
  428000:	mov    r8d,0x8
  428006:	mov    eax,0x1
  42800b:	jmp    428013 <flatcc_builder_create_buffer@@Base+0xe3>
  42800d:	mov    r8d,0x4
  428013:	and    ecx,edx
  428015:	mov    QWORD PTR [rsp+0x18],r8
  42801a:	mov    edx,eax
  42801c:	shl    rdx,0x4
  428020:	lea    rbx,[rsp+0x14]
  428025:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  42802a:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  428033:	lea    edx,[rax+0x1]
  428036:	mov    DWORD PTR [rsp+0x20],edx
  42803a:	test   dil,dil
  42803d:	je     428065 <flatcc_builder_create_buffer@@Base+0x135>
  42803f:	add    r8,rsi
  428042:	mov    QWORD PTR [rsp+0x18],r8
  428047:	mov    edx,edx
  428049:	shl    rdx,0x4
  42804d:	lea    rdi,[rsp+0xc]
  428052:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  428057:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  42805c:	or     eax,0x2
  42805f:	mov    DWORD PTR [rsp+0x20],eax
  428063:	mov    edx,eax
  428065:	test   ecx,ecx
  428067:	je     428090 <flatcc_builder_create_buffer@@Base+0x160>
  428069:	mov    eax,ecx
  42806b:	add    r8,rax
  42806e:	mov    QWORD PTR [rsp+0x18],r8
  428073:	mov    ecx,edx
  428075:	shl    rcx,0x4
  428079:	lea    rsi,[rip+0x21d20]        # 449da0 <flatcc_builder_padding_base@@Base>
  428080:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  428085:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  42808a:	inc    edx
  42808c:	mov    DWORD PTR [rsp+0x20],edx
  428090:	xor    eax,eax
  428092:	test   r12b,0x3
  428096:	setne  al
  428099:	sub    ebp,r8d
  42809c:	lea    eax,[rbp+rax*4+0x0]
  4280a0:	mov    ecx,r15d
  4280a3:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  4280ab:	sub    ecx,eax
  4280ad:	mov    DWORD PTR [rsp+0x10],ecx
  4280b1:	sub    r14d,eax
  4280b4:	mov    DWORD PTR [rsp+0x14],r14d
  4280b9:	cmp    r8,0x11
  4280bd:	setb   al
  4280c0:	lea    rcx,[r8-0x10]
  4280c4:	shr    rcx,0x20
  4280c8:	sete   cl
  4280cb:	test   r8d,r8d
  4280ce:	jle    428106 <flatcc_builder_create_buffer@@Base+0x1d6>
  4280d0:	or     al,cl
  4280d2:	je     428106 <flatcc_builder_create_buffer@@Base+0x1d6>
  4280d4:	mov    rdi,QWORD PTR [r13+0x38]
  4280d8:	lea    rsi,[rsp+0x28]
  4280dd:	mov    ecx,ebp
  4280df:	call   QWORD PTR [r13+0x48]
  4280e3:	test   eax,eax
  4280e5:	jne    428125 <flatcc_builder_create_buffer@@Base+0x1f5>
  4280e7:	mov    DWORD PTR [r13+0xf0],ebp
  4280ee:	test   ebp,ebp
  4280f0:	je     428144 <flatcc_builder_create_buffer@@Base+0x214>
  4280f2:	mov    eax,ebp
  4280f4:	add    rsp,0xa8
  4280fb:	pop    rbx
  4280fc:	pop    r12
  4280fe:	pop    r13
  428100:	pop    r14
  428102:	pop    r15
  428104:	pop    rbp
  428105:	ret    
  428106:	lea    rdi,[rip+0x18a82]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42810d:	lea    rsi,[rip+0x21ece]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428114:	lea    rcx,[rip+0x22f46]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42811b:	mov    edx,0x287
  428120:	call   406100 <__assert_fail@plt>
  428125:	lea    rdi,[rip+0x18a63]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42812c:	lea    rsi,[rip+0x21eaf]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428133:	lea    rcx,[rip+0x22f27]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42813a:	mov    edx,0x28b
  42813f:	call   406100 <__assert_fail@plt>
  428144:	lea    rdi,[rip+0x18a44]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42814b:	lea    rsi,[rip+0x21e90]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428152:	lea    rcx,[rip+0x21fde]        # 44a137 <flatcc_builder_padding_base@@Base+0x397>
  428159:	mov    edx,0x304
  42815e:	call   406100 <__assert_fail@plt>
  428163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42816d:	nop    DWORD PTR [rax]

0000000000428170 <flatcc_builder_create_struct@@Base>:
  428170:	push   rbp
  428171:	push   rbx
  428172:	sub    rsp,0x98
  428179:	test   cx,cx
  42817c:	je     428272 <flatcc_builder_create_struct@@Base+0x102>
  428182:	mov    r8,rdx
  428185:	mov    rbx,rdi
  428188:	cmp    WORD PTR [rdi+0xe8],cx
  42818f:	jae    428198 <flatcc_builder_create_struct@@Base+0x28>
  428191:	mov    WORD PTR [rbx+0xe8],cx
  428198:	mov    ebp,DWORD PTR [rbx+0xf0]
  42819e:	mov    edx,ebp
  4281a0:	sub    edx,r8d
  4281a3:	movzx  eax,cx
  4281a6:	dec    eax
  4281a8:	and    eax,edx
  4281aa:	mov    QWORD PTR [rsp+0x8],0x0
  4281b3:	mov    DWORD PTR [rsp+0x10],0x0
  4281bb:	test   r8,r8
  4281be:	je     42824b <flatcc_builder_create_struct@@Base+0xdb>
  4281c4:	mov    QWORD PTR [rsp+0x8],r8
  4281c9:	mov    QWORD PTR [rsp+0x18],rsi
  4281ce:	mov    QWORD PTR [rsp+0x20],r8
  4281d3:	mov    DWORD PTR [rsp+0x10],0x1
  4281db:	mov    edx,0x1
  4281e0:	test   eax,eax
  4281e2:	je     428209 <flatcc_builder_create_struct@@Base+0x99>
  4281e4:	add    r8,rax
  4281e7:	mov    QWORD PTR [rsp+0x8],r8
  4281ec:	mov    ecx,edx
  4281ee:	shl    rcx,0x4
  4281f2:	lea    rsi,[rip+0x21ba7]        # 449da0 <flatcc_builder_padding_base@@Base>
  4281f9:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  4281fe:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  428203:	inc    edx
  428205:	mov    DWORD PTR [rsp+0x10],edx
  428209:	cmp    r8,0x11
  42820d:	setb   al
  428210:	lea    rcx,[r8-0x10]
  428214:	shr    rcx,0x20
  428218:	sete   cl
  42821b:	test   r8d,r8d
  42821e:	jle    428253 <flatcc_builder_create_struct@@Base+0xe3>
  428220:	or     al,cl
  428222:	je     428253 <flatcc_builder_create_struct@@Base+0xe3>
  428224:	sub    ebp,r8d
  428227:	mov    rdi,QWORD PTR [rbx+0x38]
  42822b:	lea    rsi,[rsp+0x18]
  428230:	mov    ecx,ebp
  428232:	call   QWORD PTR [rbx+0x48]
  428235:	test   eax,eax
  428237:	jne    428291 <flatcc_builder_create_struct@@Base+0x121>
  428239:	mov    DWORD PTR [rbx+0xf0],ebp
  42823f:	mov    eax,ebp
  428241:	add    rsp,0x98
  428248:	pop    rbx
  428249:	pop    rbp
  42824a:	ret    
  42824b:	xor    edx,edx
  42824d:	test   eax,eax
  42824f:	jne    4281e4 <flatcc_builder_create_struct@@Base+0x74>
  428251:	jmp    428209 <flatcc_builder_create_struct@@Base+0x99>
  428253:	lea    rdi,[rip+0x18935]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42825a:	lea    rsi,[rip+0x21d81]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428261:	lea    rcx,[rip+0x22df9]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  428268:	mov    edx,0x287
  42826d:	call   406100 <__assert_fail@plt>
  428272:	lea    rdi,[rip+0x21f41]        # 44a1ba <flatcc_builder_padding_base@@Base+0x41a>
  428279:	lea    rsi,[rip+0x21d62]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428280:	lea    rcx,[rip+0x21f3e]        # 44a1c5 <flatcc_builder_padding_base@@Base+0x425>
  428287:	mov    edx,0x30f
  42828c:	call   406100 <__assert_fail@plt>
  428291:	lea    rdi,[rip+0x188f7]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  428298:	lea    rsi,[rip+0x21d43]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42829f:	lea    rcx,[rip+0x22dbb]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  4282a6:	mov    edx,0x28b
  4282ab:	call   406100 <__assert_fail@plt>

00000000004282b0 <flatcc_builder_start_buffer@@Base>:
  4282b0:	push   rbp
  4282b1:	push   r15
  4282b3:	push   r14
  4282b5:	push   rbx
  4282b6:	push   rax
  4282b7:	mov    r15d,ecx
  4282ba:	mov    ebp,edx
  4282bc:	mov    r14,rsi
  4282bf:	mov    rbx,rdi
  4282c2:	movzx  esi,WORD PTR [rdi+0xe8]
  4282c9:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  4282ce:	mov    ecx,eax
  4282d0:	mov    eax,0xffffffff
  4282d5:	test   ecx,ecx
  4282d7:	jne    42837c <flatcc_builder_start_buffer@@Base+0xcc>
  4282dd:	mov    WORD PTR [rbx+0xe8],0x1
  4282e6:	movzx  eax,WORD PTR [rbx+0xec]
  4282ed:	mov    rcx,QWORD PTR [rbx+0x30]
  4282f1:	mov    WORD PTR [rcx+0x22],ax
  4282f5:	mov    WORD PTR [rbx+0xec],bp
  4282fc:	movzx  eax,WORD PTR [rbx+0x10c]
  428303:	mov    rcx,QWORD PTR [rbx+0x30]
  428307:	mov    WORD PTR [rcx+0x20],ax
  42830b:	mov    WORD PTR [rbx+0x10c],r15w
  428313:	mov    eax,DWORD PTR [rbx+0xf8]
  428319:	mov    rcx,QWORD PTR [rbx+0x30]
  42831d:	mov    DWORD PTR [rcx+0x14],eax
  428320:	mov    eax,DWORD PTR [rbx+0x100]
  428326:	mov    rcx,QWORD PTR [rbx+0x30]
  42832a:	mov    DWORD PTR [rcx+0x1c],eax
  42832d:	mov    eax,DWORD PTR [rbx+0xf0]
  428333:	mov    DWORD PTR [rbx+0xf8],eax
  428339:	mov    eax,DWORD PTR [rbx+0xfc]
  42833f:	lea    ecx,[rax+0x1]
  428342:	mov    DWORD PTR [rbx+0xfc],ecx
  428348:	mov    DWORD PTR [rbx+0x100],eax
  42834e:	mov    eax,DWORD PTR [rbx+0x110]
  428354:	mov    rcx,QWORD PTR [rbx+0x30]
  428358:	mov    DWORD PTR [rcx+0x10],eax
  42835b:	test   r14,r14
  42835e:	jne    428367 <flatcc_builder_start_buffer@@Base+0xb7>
  428360:	lea    r14,[rip+0x21a39]        # 449da0 <flatcc_builder_padding_base@@Base>
  428367:	mov    eax,DWORD PTR [r14]
  42836a:	mov    DWORD PTR [rbx+0x110],eax
  428370:	mov    rax,QWORD PTR [rbx+0x30]
  428374:	mov    WORD PTR [rax+0xe],0x1
  42837a:	xor    eax,eax
  42837c:	add    rsp,0x8
  428380:	pop    rbx
  428381:	pop    r14
  428383:	pop    r15
  428385:	pop    rbp
  428386:	ret    
  428387:	nop    WORD PTR [rax+rax*1+0x0]
  428390:	push   rbp
  428391:	push   r15
  428393:	push   r14
  428395:	push   rbx
  428396:	push   rax
  428397:	mov    r14d,esi
  42839a:	mov    rbx,rdi
  42839d:	movsxd rbp,DWORD PTR [rdi+0x104]
  4283a4:	lea    eax,[rbp+0x1]
  4283a7:	mov    DWORD PTR [rdi+0x104],eax
  4283ad:	cmp    ebp,DWORD PTR [rdi+0x108]
  4283b3:	jge    4283c6 <flatcc_builder_start_buffer@@Base+0x116>
  4283b5:	mov    rcx,QWORD PTR [rbx+0x30]
  4283b9:	add    rcx,0x24
  4283bd:	mov    QWORD PTR [rbx+0x30],rcx
  4283c1:	jmp    428459 <flatcc_builder_start_buffer@@Base+0x1a9>
  4283c6:	mov    eax,DWORD PTR [rbx+0x120]
  4283cc:	mov    r15d,0xffffffff
  4283d2:	test   eax,eax
  4283d4:	jle    4283de <flatcc_builder_start_buffer@@Base+0x12e>
  4283d6:	cmp    ebp,eax
  4283d8:	jge    428494 <flatcc_builder_start_buffer@@Base+0x1e4>
  4283de:	shl    rbp,0x2
  4283e2:	lea    rdx,[rbp*8+0x24]
  4283ea:	add    rdx,rbp
  4283ed:	cmp    rdx,QWORD PTR [rbx+0xa0]
  4283f4:	jbe    428414 <flatcc_builder_start_buffer@@Base+0x164>
  4283f6:	lea    rsi,[rbx+0x98]
  4283fd:	mov    rdi,QWORD PTR [rbx+0x40]
  428401:	xor    ecx,ecx
  428403:	mov    r8d,0x4
  428409:	call   QWORD PTR [rbx+0x50]
  42840c:	test   eax,eax
  42840e:	jne    4284a2 <flatcc_builder_start_buffer@@Base+0x1f2>
  428414:	lea    rcx,[rbp*8+0x0]
  42841c:	add    rcx,rbp
  42841f:	add    rcx,QWORD PTR [rbx+0x98]
  428426:	mov    QWORD PTR [rbx+0x30],rcx
  42842a:	je     428494 <flatcc_builder_start_buffer@@Base+0x1e4>
  42842c:	movabs rax,0xe38e38e38e38e38f
  428436:	mul    QWORD PTR [rbx+0xa0]
  42843d:	shr    rdx,0x5
  428441:	mov    eax,DWORD PTR [rbx+0x120]
  428447:	cmp    eax,edx
  428449:	mov    esi,edx
  42844b:	cmovle esi,eax
  42844e:	test   eax,eax
  428450:	cmovle esi,edx
  428453:	mov    DWORD PTR [rbx+0x108],esi
  428459:	mov    eax,DWORD PTR [rbx+0x20]
  42845c:	mov    DWORD PTR [rcx+0x8],eax
  42845f:	movzx  edx,WORD PTR [rbx+0xea]
  428466:	mov    WORD PTR [rcx+0xc],dx
  42846a:	mov    WORD PTR [rbx+0xea],r14w
  428472:	mov    edx,DWORD PTR [rbx+0x28]
  428475:	mov    DWORD PTR [rcx],edx
  428477:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42847e:	lea    eax,[rax+rdx*1]
  428481:	add    eax,0x7
  428484:	and    eax,0xfffffff8
  428487:	mov    DWORD PTR [rbx+0x28],eax
  42848a:	mov    DWORD PTR [rbx+0x20],0x0
  428491:	xor    r15d,r15d
  428494:	mov    eax,r15d
  428497:	add    rsp,0x8
  42849b:	pop    rbx
  42849c:	pop    r14
  42849e:	pop    r15
  4284a0:	pop    rbp
  4284a1:	ret    
  4284a2:	lea    rdi,[rip+0x186e6]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4284a9:	lea    rsi,[rip+0x21b32]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4284b0:	lea    rcx,[rip+0x22b25]        # 44afdc <flatcc_builder_padding_base@@Base+0x123c>
  4284b7:	mov    edx,0x134
  4284bc:	call   406100 <__assert_fail@plt>
  4284c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004284d0 <flatcc_builder_end_buffer@@Base>:
  4284d0:	push   rbp
  4284d1:	push   rbx
  4284d2:	push   rax
  4284d3:	mov    rax,QWORD PTR [rdi+0x30]
  4284d7:	cmp    WORD PTR [rax+0xe],0x1
  4284dc:	jne    4285d9 <flatcc_builder_end_buffer@@Base+0x109>
  4284e2:	mov    ecx,esi
  4284e4:	mov    rbx,rdi
  4284e7:	movzx  eax,WORD PTR [rdi+0x10c]
  4284ee:	and    eax,0x2
  4284f1:	xor    r9d,r9d
  4284f4:	cmp    DWORD PTR [rdi+0x100],0x0
  4284fb:	setne  r9b
  4284ff:	or     r9d,eax
  428502:	movzx  edi,WORD PTR [rdi+0xe8]
  428509:	movzx  eax,WORD PTR [rbx+0xec]
  428510:	cmp    di,ax
  428513:	jae    42851e <flatcc_builder_end_buffer@@Base+0x4e>
  428515:	mov    WORD PTR [rbx+0xe8],ax
  42851c:	mov    edi,eax
  42851e:	lea    rsi,[rbx+0x110]
  428525:	movzx  edx,ax
  428528:	movzx  r8d,di
  42852c:	mov    rdi,rbx
  42852f:	call   427f30 <flatcc_builder_create_buffer@@Base>
  428534:	mov    ebp,eax
  428536:	test   eax,eax
  428538:	je     4285d0 <flatcc_builder_end_buffer@@Base+0x100>
  42853e:	mov    rax,QWORD PTR [rbx+0x30]
  428542:	mov    ecx,DWORD PTR [rax+0x14]
  428545:	mov    DWORD PTR [rbx+0xf8],ecx
  42854b:	mov    ecx,DWORD PTR [rax+0x1c]
  42854e:	mov    DWORD PTR [rbx+0x100],ecx
  428554:	mov    ecx,DWORD PTR [rax+0x10]
  428557:	mov    DWORD PTR [rbx+0x110],ecx
  42855d:	movzx  eax,WORD PTR [rax+0x20]
  428561:	mov    WORD PTR [rbx+0x10c],ax
  428568:	mov    rdi,QWORD PTR [rbx+0x18]
  42856c:	mov    edx,DWORD PTR [rbx+0x20]
  42856f:	xor    esi,esi
  428571:	call   406110 <memset@plt>
  428576:	mov    rax,QWORD PTR [rbx+0x30]
  42857a:	mov    ecx,DWORD PTR [rax+0x8]
  42857d:	mov    DWORD PTR [rbx+0x20],ecx
  428580:	mov    ecx,DWORD PTR [rax]
  428582:	mov    DWORD PTR [rbx+0x28],ecx
  428585:	mov    edx,DWORD PTR [rax+0x4]
  428588:	mov    rsi,rcx
  42858b:	add    rsi,QWORD PTR [rbx+0x68]
  42858f:	mov    QWORD PTR [rbx+0x18],rsi
  428593:	mov    esi,DWORD PTR [rbx+0x70]
  428596:	sub    esi,ecx
  428598:	cmp    esi,edx
  42859a:	cmova  esi,edx
  42859d:	mov    DWORD PTR [rbx+0x24],esi
  4285a0:	movzx  ecx,WORD PTR [rbx+0xea]
  4285a7:	cmp    WORD PTR [rbx+0xe8],cx
  4285ae:	jae    4285b7 <flatcc_builder_end_buffer@@Base+0xe7>
  4285b0:	mov    WORD PTR [rbx+0xe8],cx
  4285b7:	movzx  ecx,WORD PTR [rax+0xc]
  4285bb:	mov    WORD PTR [rbx+0xea],cx
  4285c2:	add    rax,0xffffffffffffffdc
  4285c6:	mov    QWORD PTR [rbx+0x30],rax
  4285ca:	dec    DWORD PTR [rbx+0x104]
  4285d0:	mov    eax,ebp
  4285d2:	add    rsp,0x8
  4285d6:	pop    rbx
  4285d7:	pop    rbp
  4285d8:	ret    
  4285d9:	lea    rdi,[rip+0x21c4b]        # 44a22b <flatcc_builder_padding_base@@Base+0x48b>
  4285e0:	lea    rsi,[rip+0x219fb]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4285e7:	lea    rcx,[rip+0x21c69]        # 44a257 <flatcc_builder_padding_base@@Base+0x4b7>
  4285ee:	mov    edx,0x346
  4285f3:	call   406100 <__assert_fail@plt>
  4285f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428600 <flatcc_builder_start_struct@@Base>:
  428600:	push   r15
  428602:	push   r14
  428604:	push   rbx
  428605:	mov    r14,rsi
  428608:	mov    rbx,rdi
  42860b:	mov    esi,edx
  42860d:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  428612:	test   eax,eax
  428614:	je     42861d <flatcc_builder_start_struct@@Base+0x1d>
  428616:	xor    eax,eax
  428618:	jmp    4286b1 <flatcc_builder_start_struct@@Base+0xb1>
  42861d:	mov    rdx,QWORD PTR [rbx+0x30]
  428621:	mov    WORD PTR [rdx+0xe],0x2
  428627:	mov    ecx,DWORD PTR [rbx+0x28]
  42862a:	mov    esi,DWORD PTR [rbx+0x70]
  42862d:	mov    rax,QWORD PTR [rbx+0x68]
  428631:	add    rax,rcx
  428634:	mov    QWORD PTR [rbx+0x18],rax
  428638:	sub    esi,ecx
  42863a:	cmp    esi,0xfffffffc
  42863d:	mov    edi,0xfffffffc
  428642:	cmovb  edi,esi
  428645:	mov    DWORD PTR [rbx+0x24],edi
  428648:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  42864f:	mov    r15d,DWORD PTR [rbx+0x20]
  428653:	add    r14d,r15d
  428656:	mov    DWORD PTR [rbx+0x20],r14d
  42865a:	cmp    r14d,edi
  42865d:	jb     4286ae <flatcc_builder_start_struct@@Base+0xae>
  42865f:	inc    r14d
  428662:	lea    rsi,[rbx+0x68]
  428666:	mov    rdi,QWORD PTR [rbx+0x40]
  42866a:	add    r14,rcx
  42866d:	mov    rdx,r14
  428670:	mov    ecx,0x1
  428675:	mov    r8d,0x1
  42867b:	call   QWORD PTR [rbx+0x50]
  42867e:	test   eax,eax
  428680:	jne    428616 <flatcc_builder_start_struct@@Base+0x16>
  428682:	mov    ecx,DWORD PTR [rbx+0x28]
  428685:	mov    rax,rcx
  428688:	add    rax,QWORD PTR [rbx+0x68]
  42868c:	mov    QWORD PTR [rbx+0x18],rax
  428690:	mov    edx,DWORD PTR [rbx+0x70]
  428693:	sub    edx,ecx
  428695:	cmp    edx,0xfffffffc
  428698:	mov    ecx,0xfffffffc
  42869d:	cmovb  ecx,edx
  4286a0:	mov    DWORD PTR [rbx+0x24],ecx
  4286a3:	mov    rcx,QWORD PTR [rbx+0x30]
  4286a7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4286ae:	add    rax,r15
  4286b1:	pop    rbx
  4286b2:	pop    r14
  4286b4:	pop    r15
  4286b6:	ret    
  4286b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004286c0 <flatcc_builder_struct_edit@@Base>:
  4286c0:	mov    rax,QWORD PTR [rdi+0x18]
  4286c4:	ret    
  4286c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286cf:	nop

00000000004286d0 <flatcc_builder_end_struct@@Base>:
  4286d0:	push   rbp
  4286d1:	push   rbx
  4286d2:	push   rax
  4286d3:	mov    rax,QWORD PTR [rdi+0x30]
  4286d7:	cmp    WORD PTR [rax+0xe],0x2
  4286dc:	jne    42876f <flatcc_builder_end_struct@@Base+0x9f>
  4286e2:	mov    rbx,rdi
  4286e5:	mov    rsi,QWORD PTR [rdi+0x18]
  4286e9:	mov    edx,DWORD PTR [rdi+0x20]
  4286ec:	movzx  ecx,WORD PTR [rdi+0xea]
  4286f3:	call   428170 <flatcc_builder_create_struct@@Base>
  4286f8:	mov    ebp,eax
  4286fa:	test   eax,eax
  4286fc:	je     428766 <flatcc_builder_end_struct@@Base+0x96>
  4286fe:	mov    rdi,QWORD PTR [rbx+0x18]
  428702:	mov    edx,DWORD PTR [rbx+0x20]
  428705:	xor    esi,esi
  428707:	call   406110 <memset@plt>
  42870c:	mov    rax,QWORD PTR [rbx+0x30]
  428710:	mov    ecx,DWORD PTR [rax+0x8]
  428713:	mov    DWORD PTR [rbx+0x20],ecx
  428716:	mov    ecx,DWORD PTR [rax]
  428718:	mov    DWORD PTR [rbx+0x28],ecx
  42871b:	mov    edx,DWORD PTR [rax+0x4]
  42871e:	mov    rsi,rcx
  428721:	add    rsi,QWORD PTR [rbx+0x68]
  428725:	mov    QWORD PTR [rbx+0x18],rsi
  428729:	mov    esi,DWORD PTR [rbx+0x70]
  42872c:	sub    esi,ecx
  42872e:	cmp    esi,edx
  428730:	cmova  esi,edx
  428733:	mov    DWORD PTR [rbx+0x24],esi
  428736:	movzx  ecx,WORD PTR [rbx+0xea]
  42873d:	cmp    WORD PTR [rbx+0xe8],cx
  428744:	jae    42874d <flatcc_builder_end_struct@@Base+0x7d>
  428746:	mov    WORD PTR [rbx+0xe8],cx
  42874d:	movzx  ecx,WORD PTR [rax+0xc]
  428751:	mov    WORD PTR [rbx+0xea],cx
  428758:	add    rax,0xffffffffffffffdc
  42875c:	mov    QWORD PTR [rbx+0x30],rax
  428760:	dec    DWORD PTR [rbx+0x104]
  428766:	mov    eax,ebp
  428768:	add    rsp,0x8
  42876c:	pop    rbx
  42876d:	pop    rbp
  42876e:	ret    
  42876f:	lea    rdi,[rip+0x21b3a]        # 44a2b0 <flatcc_builder_padding_base@@Base+0x510>
  428776:	lea    rsi,[rip+0x21865]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42877d:	lea    rcx,[rip+0x21b58]        # 44a2dc <flatcc_builder_padding_base@@Base+0x53c>
  428784:	mov    edx,0x368
  428789:	call   406100 <__assert_fail@plt>
  42878e:	xchg   ax,ax

0000000000428790 <flatcc_builder_extend_vector@@Base>:
  428790:	push   r14
  428792:	push   rbx
  428793:	push   rax
  428794:	mov    rax,QWORD PTR [rdi+0x30]
  428798:	mov    ecx,DWORD PTR [rax+0x14]
  42879b:	add    ecx,esi
  42879d:	jb     42882f <flatcc_builder_extend_vector@@Base+0x9f>
  4287a3:	cmp    ecx,DWORD PTR [rax+0x18]
  4287a6:	ja     42882f <flatcc_builder_extend_vector@@Base+0x9f>
  4287ac:	mov    rbx,rdi
  4287af:	mov    DWORD PTR [rax+0x14],ecx
  4287b2:	mov    rax,QWORD PTR [rdi+0x30]
  4287b6:	imul   esi,DWORD PTR [rax+0x10]
  4287ba:	mov    r14d,DWORD PTR [rdi+0x20]
  4287be:	add    esi,r14d
  4287c1:	mov    DWORD PTR [rdi+0x20],esi
  4287c4:	cmp    esi,DWORD PTR [rdi+0x24]
  4287c7:	jae    4287cf <flatcc_builder_extend_vector@@Base+0x3f>
  4287c9:	mov    rax,QWORD PTR [rbx+0x18]
  4287cd:	jmp    428824 <flatcc_builder_extend_vector@@Base+0x94>
  4287cf:	inc    esi
  4287d1:	lea    rax,[rbx+0x68]
  4287d5:	mov    rdi,QWORD PTR [rbx+0x40]
  4287d9:	mov    edx,DWORD PTR [rbx+0x28]
  4287dc:	add    rdx,rsi
  4287df:	mov    rsi,rax
  4287e2:	mov    ecx,0x1
  4287e7:	mov    r8d,0x1
  4287ed:	call   QWORD PTR [rbx+0x50]
  4287f0:	test   eax,eax
  4287f2:	je     4287f8 <flatcc_builder_extend_vector@@Base+0x68>
  4287f4:	xor    eax,eax
  4287f6:	jmp    428827 <flatcc_builder_extend_vector@@Base+0x97>
  4287f8:	mov    ecx,DWORD PTR [rbx+0x28]
  4287fb:	mov    rax,rcx
  4287fe:	add    rax,QWORD PTR [rbx+0x68]
  428802:	mov    QWORD PTR [rbx+0x18],rax
  428806:	mov    edx,DWORD PTR [rbx+0x70]
  428809:	sub    edx,ecx
  42880b:	cmp    edx,0xfffffffc
  42880e:	mov    ecx,0xfffffffc
  428813:	cmovb  ecx,edx
  428816:	mov    DWORD PTR [rbx+0x24],ecx
  428819:	mov    rcx,QWORD PTR [rbx+0x30]
  42881d:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  428824:	add    rax,r14
  428827:	add    rsp,0x8
  42882b:	pop    rbx
  42882c:	pop    r14
  42882e:	ret    
  42882f:	lea    rdi,[rip+0x22875]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  428836:	lea    rsi,[rip+0x217a5]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42883d:	lea    rcx,[rip+0x22882]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  428844:	mov    edx,0x37c
  428849:	call   406100 <__assert_fail@plt>
  42884e:	xchg   ax,ax

0000000000428850 <flatcc_builder_vector_push@@Base>:
  428850:	push   r15
  428852:	push   r14
  428854:	push   r13
  428856:	push   r12
  428858:	push   rbx
  428859:	mov    rax,QWORD PTR [rdi+0x30]
  42885d:	cmp    WORD PTR [rax+0xe],0x4
  428862:	jne    428915 <flatcc_builder_vector_push@@Base+0xc5>
  428868:	mov    ecx,DWORD PTR [rax+0x14]
  42886b:	cmp    ecx,DWORD PTR [rax+0x18]
  42886e:	ja     428934 <flatcc_builder_vector_push@@Base+0xe4>
  428874:	mov    r14,rsi
  428877:	mov    rbx,rdi
  42887a:	inc    ecx
  42887c:	mov    DWORD PTR [rax+0x14],ecx
  42887f:	mov    rax,QWORD PTR [rdi+0x30]
  428883:	mov    r15d,DWORD PTR [rax+0x10]
  428887:	mov    r13d,DWORD PTR [rdi+0x20]
  42888b:	lea    eax,[r15+r13*1]
  42888f:	mov    DWORD PTR [rdi+0x20],eax
  428892:	cmp    eax,DWORD PTR [rdi+0x24]
  428895:	jae    4288a2 <flatcc_builder_vector_push@@Base+0x52>
  428897:	mov    r12,QWORD PTR [rbx+0x18]
  42889b:	add    r12,r13
  42889e:	jne    4288fa <flatcc_builder_vector_push@@Base+0xaa>
  4288a0:	jmp    4288c4 <flatcc_builder_vector_push@@Base+0x74>
  4288a2:	inc    eax
  4288a4:	lea    rsi,[rbx+0x68]
  4288a8:	mov    rdi,QWORD PTR [rbx+0x40]
  4288ac:	mov    edx,DWORD PTR [rbx+0x28]
  4288af:	add    rdx,rax
  4288b2:	mov    ecx,0x1
  4288b7:	mov    r8d,0x1
  4288bd:	call   QWORD PTR [rbx+0x50]
  4288c0:	test   eax,eax
  4288c2:	je     4288c9 <flatcc_builder_vector_push@@Base+0x79>
  4288c4:	xor    r12d,r12d
  4288c7:	jmp    428908 <flatcc_builder_vector_push@@Base+0xb8>
  4288c9:	mov    eax,DWORD PTR [rbx+0x28]
  4288cc:	mov    r12,rax
  4288cf:	add    r12,QWORD PTR [rbx+0x68]
  4288d3:	mov    QWORD PTR [rbx+0x18],r12
  4288d7:	mov    ecx,DWORD PTR [rbx+0x70]
  4288da:	sub    ecx,eax
  4288dc:	cmp    ecx,0xfffffffc
  4288df:	mov    eax,0xfffffffc
  4288e4:	cmovb  eax,ecx
  4288e7:	mov    DWORD PTR [rbx+0x24],eax
  4288ea:	mov    rax,QWORD PTR [rbx+0x30]
  4288ee:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4288f5:	add    r12,r13
  4288f8:	je     4288c4 <flatcc_builder_vector_push@@Base+0x74>
  4288fa:	mov    rdi,r12
  4288fd:	mov    rsi,r14
  428900:	mov    rdx,r15
  428903:	call   4061a0 <memcpy@plt>
  428908:	mov    rax,r12
  42890b:	pop    rbx
  42890c:	pop    r12
  42890e:	pop    r13
  428910:	pop    r14
  428912:	pop    r15
  428914:	ret    
  428915:	lea    rdi,[rip+0x21a03]        # 44a31f <flatcc_builder_padding_base@@Base+0x57f>
  42891c:	lea    rsi,[rip+0x216bf]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428923:	lea    rcx,[rip+0x21a21]        # 44a34b <flatcc_builder_padding_base@@Base+0x5ab>
  42892a:	mov    edx,0x38b
  42892f:	call   406100 <__assert_fail@plt>
  428934:	lea    rdi,[rip+0x21a53]        # 44a38e <flatcc_builder_padding_base@@Base+0x5ee>
  42893b:	lea    rsi,[rip+0x216a0]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428942:	lea    rcx,[rip+0x21a02]        # 44a34b <flatcc_builder_padding_base@@Base+0x5ab>
  428949:	mov    edx,0x38c
  42894e:	call   406100 <__assert_fail@plt>
  428953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42895d:	nop    DWORD PTR [rax]

0000000000428960 <flatcc_builder_append_vector@@Base>:
  428960:	push   r15
  428962:	push   r14
  428964:	push   r13
  428966:	push   r12
  428968:	push   rbx
  428969:	mov    rax,QWORD PTR [rdi+0x30]
  42896d:	cmp    WORD PTR [rax+0xe],0x4
  428972:	jne    428a4f <flatcc_builder_append_vector@@Base+0xef>
  428978:	mov    r15,rdx
  42897b:	mov    ecx,DWORD PTR [rax+0x14]
  42897e:	add    ecx,r15d
  428981:	jb     428a30 <flatcc_builder_append_vector@@Base+0xd0>
  428987:	cmp    ecx,DWORD PTR [rax+0x18]
  42898a:	ja     428a30 <flatcc_builder_append_vector@@Base+0xd0>
  428990:	mov    r14,rsi
  428993:	mov    rbx,rdi
  428996:	mov    DWORD PTR [rax+0x14],ecx
  428999:	mov    rax,QWORD PTR [rdi+0x30]
  42899d:	imul   r15d,DWORD PTR [rax+0x10]
  4289a2:	mov    r13d,DWORD PTR [rdi+0x20]
  4289a6:	lea    eax,[r15+r13*1]
  4289aa:	mov    DWORD PTR [rdi+0x20],eax
  4289ad:	cmp    eax,DWORD PTR [rdi+0x24]
  4289b0:	jae    4289bd <flatcc_builder_append_vector@@Base+0x5d>
  4289b2:	mov    r12,QWORD PTR [rbx+0x18]
  4289b6:	add    r12,r13
  4289b9:	jne    428a15 <flatcc_builder_append_vector@@Base+0xb5>
  4289bb:	jmp    4289df <flatcc_builder_append_vector@@Base+0x7f>
  4289bd:	inc    eax
  4289bf:	lea    rsi,[rbx+0x68]
  4289c3:	mov    rdi,QWORD PTR [rbx+0x40]
  4289c7:	mov    edx,DWORD PTR [rbx+0x28]
  4289ca:	add    rdx,rax
  4289cd:	mov    ecx,0x1
  4289d2:	mov    r8d,0x1
  4289d8:	call   QWORD PTR [rbx+0x50]
  4289db:	test   eax,eax
  4289dd:	je     4289e4 <flatcc_builder_append_vector@@Base+0x84>
  4289df:	xor    r12d,r12d
  4289e2:	jmp    428a23 <flatcc_builder_append_vector@@Base+0xc3>
  4289e4:	mov    eax,DWORD PTR [rbx+0x28]
  4289e7:	mov    r12,rax
  4289ea:	add    r12,QWORD PTR [rbx+0x68]
  4289ee:	mov    QWORD PTR [rbx+0x18],r12
  4289f2:	mov    ecx,DWORD PTR [rbx+0x70]
  4289f5:	sub    ecx,eax
  4289f7:	cmp    ecx,0xfffffffc
  4289fa:	mov    eax,0xfffffffc
  4289ff:	cmovb  eax,ecx
  428a02:	mov    DWORD PTR [rbx+0x24],eax
  428a05:	mov    rax,QWORD PTR [rbx+0x30]
  428a09:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428a10:	add    r12,r13
  428a13:	je     4289df <flatcc_builder_append_vector@@Base+0x7f>
  428a15:	mov    edx,r15d
  428a18:	mov    rdi,r12
  428a1b:	mov    rsi,r14
  428a1e:	call   4061a0 <memcpy@plt>
  428a23:	mov    rax,r12
  428a26:	pop    rbx
  428a27:	pop    r12
  428a29:	pop    r13
  428a2b:	pop    r14
  428a2d:	pop    r15
  428a2f:	ret    
  428a30:	lea    rdi,[rip+0x22674]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  428a37:	lea    rsi,[rip+0x215a4]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428a3e:	lea    rcx,[rip+0x22681]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  428a45:	mov    edx,0x37c
  428a4a:	call   406100 <__assert_fail@plt>
  428a4f:	lea    rdi,[rip+0x218c9]        # 44a31f <flatcc_builder_padding_base@@Base+0x57f>
  428a56:	lea    rsi,[rip+0x21585]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428a5d:	lea    rcx,[rip+0x21967]        # 44a3cb <flatcc_builder_padding_base@@Base+0x62b>
  428a64:	mov    edx,0x393
  428a69:	call   406100 <__assert_fail@plt>
  428a6e:	xchg   ax,ax

0000000000428a70 <flatcc_builder_extend_offset_vector@@Base>:
  428a70:	push   r14
  428a72:	push   rbx
  428a73:	push   rax
  428a74:	mov    rax,QWORD PTR [rdi+0x30]
  428a78:	mov    ecx,DWORD PTR [rax+0x14]
  428a7b:	add    ecx,esi
  428a7d:	jb     428b04 <flatcc_builder_extend_offset_vector@@Base+0x94>
  428a83:	cmp    ecx,0x40000000
  428a89:	jae    428b04 <flatcc_builder_extend_offset_vector@@Base+0x94>
  428a8b:	mov    rbx,rdi
  428a8e:	mov    DWORD PTR [rax+0x14],ecx
  428a91:	mov    r14d,DWORD PTR [rdi+0x20]
  428a95:	lea    eax,[r14+rsi*4]
  428a99:	mov    DWORD PTR [rdi+0x20],eax
  428a9c:	cmp    eax,DWORD PTR [rdi+0x24]
  428a9f:	jae    428aa7 <flatcc_builder_extend_offset_vector@@Base+0x37>
  428aa1:	mov    rax,QWORD PTR [rbx+0x18]
  428aa5:	jmp    428af9 <flatcc_builder_extend_offset_vector@@Base+0x89>
  428aa7:	inc    eax
  428aa9:	lea    rsi,[rbx+0x68]
  428aad:	mov    rdi,QWORD PTR [rbx+0x40]
  428ab1:	mov    edx,DWORD PTR [rbx+0x28]
  428ab4:	add    rdx,rax
  428ab7:	mov    ecx,0x1
  428abc:	mov    r8d,0x1
  428ac2:	call   QWORD PTR [rbx+0x50]
  428ac5:	test   eax,eax
  428ac7:	je     428acd <flatcc_builder_extend_offset_vector@@Base+0x5d>
  428ac9:	xor    eax,eax
  428acb:	jmp    428afc <flatcc_builder_extend_offset_vector@@Base+0x8c>
  428acd:	mov    ecx,DWORD PTR [rbx+0x28]
  428ad0:	mov    rax,rcx
  428ad3:	add    rax,QWORD PTR [rbx+0x68]
  428ad7:	mov    QWORD PTR [rbx+0x18],rax
  428adb:	mov    edx,DWORD PTR [rbx+0x70]
  428ade:	sub    edx,ecx
  428ae0:	cmp    edx,0xfffffffc
  428ae3:	mov    ecx,0xfffffffc
  428ae8:	cmovb  ecx,edx
  428aeb:	mov    DWORD PTR [rbx+0x24],ecx
  428aee:	mov    rcx,QWORD PTR [rbx+0x30]
  428af2:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  428af9:	add    rax,r14
  428afc:	add    rsp,0x8
  428b00:	pop    rbx
  428b01:	pop    r14
  428b03:	ret    
  428b04:	lea    rdi,[rip+0x225a0]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  428b0b:	lea    rsi,[rip+0x214d0]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428b12:	lea    rcx,[rip+0x225ad]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  428b19:	mov    edx,0x37c
  428b1e:	call   406100 <__assert_fail@plt>
  428b23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b2d:	nop    DWORD PTR [rax]

0000000000428b30 <flatcc_builder_offset_vector_push@@Base>:
  428b30:	push   rbp
  428b31:	push   r14
  428b33:	push   rbx
  428b34:	mov    rax,QWORD PTR [rdi+0x30]
  428b38:	cmp    WORD PTR [rax+0xe],0x5
  428b3d:	jne    428bd2 <flatcc_builder_offset_vector_push@@Base+0xa2>
  428b43:	mov    ecx,DWORD PTR [rax+0x14]
  428b46:	cmp    ecx,0x3fffffff
  428b4c:	je     428b95 <flatcc_builder_offset_vector_push@@Base+0x65>
  428b4e:	mov    r14d,esi
  428b51:	mov    rbx,rdi
  428b54:	inc    ecx
  428b56:	mov    DWORD PTR [rax+0x14],ecx
  428b59:	mov    ebp,DWORD PTR [rdi+0x20]
  428b5c:	lea    eax,[rbp+0x4]
  428b5f:	mov    DWORD PTR [rdi+0x20],eax
  428b62:	cmp    eax,DWORD PTR [rdi+0x24]
  428b65:	jae    428b72 <flatcc_builder_offset_vector_push@@Base+0x42>
  428b67:	mov    rax,QWORD PTR [rbx+0x18]
  428b6b:	add    rax,rbp
  428b6e:	jne    428bca <flatcc_builder_offset_vector_push@@Base+0x9a>
  428b70:	jmp    428b95 <flatcc_builder_offset_vector_push@@Base+0x65>
  428b72:	lea    eax,[rbp+0x5]
  428b75:	lea    rsi,[rbx+0x68]
  428b79:	mov    rdi,QWORD PTR [rbx+0x40]
  428b7d:	mov    edx,DWORD PTR [rbx+0x28]
  428b80:	add    rdx,rax
  428b83:	mov    ecx,0x1
  428b88:	mov    r8d,0x1
  428b8e:	call   QWORD PTR [rbx+0x50]
  428b91:	test   eax,eax
  428b93:	je     428b99 <flatcc_builder_offset_vector_push@@Base+0x69>
  428b95:	xor    eax,eax
  428b97:	jmp    428bcd <flatcc_builder_offset_vector_push@@Base+0x9d>
  428b99:	mov    ecx,DWORD PTR [rbx+0x28]
  428b9c:	mov    rax,rcx
  428b9f:	add    rax,QWORD PTR [rbx+0x68]
  428ba3:	mov    QWORD PTR [rbx+0x18],rax
  428ba7:	mov    edx,DWORD PTR [rbx+0x70]
  428baa:	sub    edx,ecx
  428bac:	cmp    edx,0xfffffffc
  428baf:	mov    ecx,0xfffffffc
  428bb4:	cmovb  ecx,edx
  428bb7:	mov    DWORD PTR [rbx+0x24],ecx
  428bba:	mov    rcx,QWORD PTR [rbx+0x30]
  428bbe:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  428bc5:	add    rax,rbp
  428bc8:	je     428b95 <flatcc_builder_offset_vector_push@@Base+0x65>
  428bca:	mov    DWORD PTR [rax],r14d
  428bcd:	pop    rbx
  428bce:	pop    r14
  428bd0:	pop    rbp
  428bd1:	ret    
  428bd2:	lea    rdi,[rip+0x2183f]        # 44a418 <flatcc_builder_padding_base@@Base+0x678>
  428bd9:	lea    rsi,[rip+0x21402]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428be0:	lea    rcx,[rip+0x21864]        # 44a44b <flatcc_builder_padding_base@@Base+0x6ab>
  428be7:	mov    edx,0x3a6
  428bec:	call   406100 <__assert_fail@plt>
  428bf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428c00 <flatcc_builder_append_offset_vector@@Base>:
  428c00:	push   r15
  428c02:	push   r14
  428c04:	push   r13
  428c06:	push   r12
  428c08:	push   rbx
  428c09:	mov    rax,QWORD PTR [rdi+0x30]
  428c0d:	cmp    WORD PTR [rax+0xe],0x5
  428c12:	jne    428cee <flatcc_builder_append_offset_vector@@Base+0xee>
  428c18:	mov    r15,rdx
  428c1b:	mov    ecx,DWORD PTR [rax+0x14]
  428c1e:	add    ecx,r15d
  428c21:	jb     428ccf <flatcc_builder_append_offset_vector@@Base+0xcf>
  428c27:	cmp    ecx,0x40000000
  428c2d:	jae    428ccf <flatcc_builder_append_offset_vector@@Base+0xcf>
  428c33:	mov    r14,rsi
  428c36:	mov    rbx,rdi
  428c39:	mov    DWORD PTR [rax+0x14],ecx
  428c3c:	mov    r13d,DWORD PTR [rdi+0x20]
  428c40:	lea    eax,[r13+r15*4+0x0]
  428c45:	mov    DWORD PTR [rdi+0x20],eax
  428c48:	cmp    eax,DWORD PTR [rdi+0x24]
  428c4b:	jae    428c58 <flatcc_builder_append_offset_vector@@Base+0x58>
  428c4d:	mov    r12,QWORD PTR [rbx+0x18]
  428c51:	add    r12,r13
  428c54:	jne    428cb0 <flatcc_builder_append_offset_vector@@Base+0xb0>
  428c56:	jmp    428c7a <flatcc_builder_append_offset_vector@@Base+0x7a>
  428c58:	inc    eax
  428c5a:	lea    rsi,[rbx+0x68]
  428c5e:	mov    rdi,QWORD PTR [rbx+0x40]
  428c62:	mov    edx,DWORD PTR [rbx+0x28]
  428c65:	add    rdx,rax
  428c68:	mov    ecx,0x1
  428c6d:	mov    r8d,0x1
  428c73:	call   QWORD PTR [rbx+0x50]
  428c76:	test   eax,eax
  428c78:	je     428c7f <flatcc_builder_append_offset_vector@@Base+0x7f>
  428c7a:	xor    r12d,r12d
  428c7d:	jmp    428cc2 <flatcc_builder_append_offset_vector@@Base+0xc2>
  428c7f:	mov    eax,DWORD PTR [rbx+0x28]
  428c82:	mov    r12,rax
  428c85:	add    r12,QWORD PTR [rbx+0x68]
  428c89:	mov    QWORD PTR [rbx+0x18],r12
  428c8d:	mov    ecx,DWORD PTR [rbx+0x70]
  428c90:	sub    ecx,eax
  428c92:	cmp    ecx,0xfffffffc
  428c95:	mov    eax,0xfffffffc
  428c9a:	cmovb  eax,ecx
  428c9d:	mov    DWORD PTR [rbx+0x24],eax
  428ca0:	mov    rax,QWORD PTR [rbx+0x30]
  428ca4:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428cab:	add    r12,r13
  428cae:	je     428c7a <flatcc_builder_append_offset_vector@@Base+0x7a>
  428cb0:	shl    r15d,0x2
  428cb4:	mov    edx,r15d
  428cb7:	mov    rdi,r12
  428cba:	mov    rsi,r14
  428cbd:	call   4061a0 <memcpy@plt>
  428cc2:	mov    rax,r12
  428cc5:	pop    rbx
  428cc6:	pop    r12
  428cc8:	pop    r13
  428cca:	pop    r14
  428ccc:	pop    r15
  428cce:	ret    
  428ccf:	lea    rdi,[rip+0x223d5]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  428cd6:	lea    rsi,[rip+0x21305]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428cdd:	lea    rcx,[rip+0x223e2]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  428ce4:	mov    edx,0x37c
  428ce9:	call   406100 <__assert_fail@plt>
  428cee:	lea    rdi,[rip+0x21723]        # 44a418 <flatcc_builder_padding_base@@Base+0x678>
  428cf5:	lea    rsi,[rip+0x212e6]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428cfc:	lea    rcx,[rip+0x217aa]        # 44a4ad <flatcc_builder_padding_base@@Base+0x70d>
  428d03:	mov    edx,0x3b4
  428d08:	call   406100 <__assert_fail@plt>
  428d0d:	nop    DWORD PTR [rax]

0000000000428d10 <flatcc_builder_extend_string@@Base>:
  428d10:	push   r14
  428d12:	push   rbx
  428d13:	push   rax
  428d14:	mov    rax,QWORD PTR [rdi+0x30]
  428d18:	cmp    WORD PTR [rax+0xe],0x6
  428d1d:	jne    428da9 <flatcc_builder_extend_string@@Base+0x99>
  428d23:	mov    ecx,DWORD PTR [rax+0x14]
  428d26:	add    ecx,esi
  428d28:	jb     428dc8 <flatcc_builder_extend_string@@Base+0xb8>
  428d2e:	mov    rbx,rdi
  428d31:	mov    DWORD PTR [rax+0x14],ecx
  428d34:	mov    r14d,DWORD PTR [rdi+0x20]
  428d38:	add    esi,r14d
  428d3b:	mov    DWORD PTR [rdi+0x20],esi
  428d3e:	cmp    esi,DWORD PTR [rdi+0x24]
  428d41:	jae    428d49 <flatcc_builder_extend_string@@Base+0x39>
  428d43:	mov    rax,QWORD PTR [rbx+0x18]
  428d47:	jmp    428d9e <flatcc_builder_extend_string@@Base+0x8e>
  428d49:	inc    esi
  428d4b:	lea    rax,[rbx+0x68]
  428d4f:	mov    rdi,QWORD PTR [rbx+0x40]
  428d53:	mov    edx,DWORD PTR [rbx+0x28]
  428d56:	add    rdx,rsi
  428d59:	mov    rsi,rax
  428d5c:	mov    ecx,0x1
  428d61:	mov    r8d,0x1
  428d67:	call   QWORD PTR [rbx+0x50]
  428d6a:	test   eax,eax
  428d6c:	je     428d72 <flatcc_builder_extend_string@@Base+0x62>
  428d6e:	xor    eax,eax
  428d70:	jmp    428da1 <flatcc_builder_extend_string@@Base+0x91>
  428d72:	mov    ecx,DWORD PTR [rbx+0x28]
  428d75:	mov    rax,rcx
  428d78:	add    rax,QWORD PTR [rbx+0x68]
  428d7c:	mov    QWORD PTR [rbx+0x18],rax
  428d80:	mov    edx,DWORD PTR [rbx+0x70]
  428d83:	sub    edx,ecx
  428d85:	cmp    edx,0xfffffffc
  428d88:	mov    ecx,0xfffffffc
  428d8d:	cmovb  ecx,edx
  428d90:	mov    DWORD PTR [rbx+0x24],ecx
  428d93:	mov    rcx,QWORD PTR [rbx+0x30]
  428d97:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  428d9e:	add    rax,r14
  428da1:	add    rsp,0x8
  428da5:	pop    rbx
  428da6:	pop    r14
  428da8:	ret    
  428da9:	lea    rdi,[rip+0x21771]        # 44a521 <flatcc_builder_padding_base@@Base+0x781>
  428db0:	lea    rsi,[rip+0x2122b]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428db7:	lea    rcx,[rip+0x2178f]        # 44a54d <flatcc_builder_padding_base@@Base+0x7ad>
  428dbe:	mov    edx,0x3bd
  428dc3:	call   406100 <__assert_fail@plt>
  428dc8:	lea    rdi,[rip+0x222dc]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  428dcf:	lea    rsi,[rip+0x2120c]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428dd6:	lea    rcx,[rip+0x222e9]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  428ddd:	mov    edx,0x37c
  428de2:	call   406100 <__assert_fail@plt>
  428de7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428df0 <flatcc_builder_append_string@@Base>:
  428df0:	push   r15
  428df2:	push   r14
  428df4:	push   r13
  428df6:	push   r12
  428df8:	push   rbx
  428df9:	mov    rax,QWORD PTR [rdi+0x30]
  428dfd:	cmp    WORD PTR [rax+0xe],0x6
  428e02:	jne    428eae <flatcc_builder_append_string@@Base+0xbe>
  428e08:	mov    r15,rdx
  428e0b:	mov    ecx,DWORD PTR [rax+0x14]
  428e0e:	add    ecx,r15d
  428e11:	jb     428ecd <flatcc_builder_append_string@@Base+0xdd>
  428e17:	mov    r14,rsi
  428e1a:	mov    rbx,rdi
  428e1d:	mov    DWORD PTR [rax+0x14],ecx
  428e20:	mov    r13d,DWORD PTR [rdi+0x20]
  428e24:	lea    eax,[r15+r13*1]
  428e28:	mov    DWORD PTR [rdi+0x20],eax
  428e2b:	cmp    eax,DWORD PTR [rdi+0x24]
  428e2e:	jae    428e3b <flatcc_builder_append_string@@Base+0x4b>
  428e30:	mov    r12,QWORD PTR [rbx+0x18]
  428e34:	add    r12,r13
  428e37:	jne    428e93 <flatcc_builder_append_string@@Base+0xa3>
  428e39:	jmp    428e5d <flatcc_builder_append_string@@Base+0x6d>
  428e3b:	inc    eax
  428e3d:	lea    rsi,[rbx+0x68]
  428e41:	mov    rdi,QWORD PTR [rbx+0x40]
  428e45:	mov    edx,DWORD PTR [rbx+0x28]
  428e48:	add    rdx,rax
  428e4b:	mov    ecx,0x1
  428e50:	mov    r8d,0x1
  428e56:	call   QWORD PTR [rbx+0x50]
  428e59:	test   eax,eax
  428e5b:	je     428e62 <flatcc_builder_append_string@@Base+0x72>
  428e5d:	xor    r12d,r12d
  428e60:	jmp    428ea1 <flatcc_builder_append_string@@Base+0xb1>
  428e62:	mov    eax,DWORD PTR [rbx+0x28]
  428e65:	mov    r12,rax
  428e68:	add    r12,QWORD PTR [rbx+0x68]
  428e6c:	mov    QWORD PTR [rbx+0x18],r12
  428e70:	mov    ecx,DWORD PTR [rbx+0x70]
  428e73:	sub    ecx,eax
  428e75:	cmp    ecx,0xfffffffc
  428e78:	mov    eax,0xfffffffc
  428e7d:	cmovb  eax,ecx
  428e80:	mov    DWORD PTR [rbx+0x24],eax
  428e83:	mov    rax,QWORD PTR [rbx+0x30]
  428e87:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428e8e:	add    r12,r13
  428e91:	je     428e5d <flatcc_builder_append_string@@Base+0x6d>
  428e93:	mov    edx,r15d
  428e96:	mov    rdi,r12
  428e99:	mov    rsi,r14
  428e9c:	call   4061a0 <memcpy@plt>
  428ea1:	mov    rax,r12
  428ea4:	pop    rbx
  428ea5:	pop    r12
  428ea7:	pop    r13
  428ea9:	pop    r14
  428eab:	pop    r15
  428ead:	ret    
  428eae:	lea    rdi,[rip+0x2166c]        # 44a521 <flatcc_builder_padding_base@@Base+0x781>
  428eb5:	lea    rsi,[rip+0x21126]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428ebc:	lea    rcx,[rip+0x216c9]        # 44a58c <flatcc_builder_padding_base@@Base+0x7ec>
  428ec3:	mov    edx,0x3c6
  428ec8:	call   406100 <__assert_fail@plt>
  428ecd:	lea    rdi,[rip+0x221d7]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  428ed4:	lea    rsi,[rip+0x21107]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428edb:	lea    rcx,[rip+0x221e4]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  428ee2:	mov    edx,0x37c
  428ee7:	call   406100 <__assert_fail@plt>
  428eec:	nop    DWORD PTR [rax+0x0]

0000000000428ef0 <flatcc_builder_append_string_str@@Base>:
  428ef0:	push   r14
  428ef2:	push   rbx
  428ef3:	push   rax
  428ef4:	mov    rbx,rsi
  428ef7:	mov    r14,rdi
  428efa:	mov    rdi,rsi
  428efd:	call   4060d0 <strlen@plt>
  428f02:	mov    rdi,r14
  428f05:	mov    rsi,rbx
  428f08:	mov    rdx,rax
  428f0b:	add    rsp,0x8
  428f0f:	pop    rbx
  428f10:	pop    r14
  428f12:	jmp    428df0 <flatcc_builder_append_string@@Base>
  428f17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428f20 <flatcc_builder_append_string_strn@@Base>:
  428f20:	push   r15
  428f22:	push   r14
  428f24:	push   rbx
  428f25:	mov    rbx,rdx
  428f28:	mov    r14,rsi
  428f2b:	mov    r15,rdi
  428f2e:	mov    rdi,rsi
  428f31:	xor    esi,esi
  428f33:	call   406130 <memchr@plt>
  428f38:	mov    rcx,rax
  428f3b:	sub    rcx,r14
  428f3e:	test   rax,rax
  428f41:	cmovne rbx,rcx
  428f45:	mov    rdi,r15
  428f48:	mov    rsi,r14
  428f4b:	mov    rdx,rbx
  428f4e:	pop    rbx
  428f4f:	pop    r14
  428f51:	pop    r15
  428f53:	jmp    428df0 <flatcc_builder_append_string@@Base>
  428f58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428f60 <flatcc_builder_truncate_vector@@Base>:
  428f60:	push   rax
  428f61:	mov    rax,QWORD PTR [rdi+0x30]
  428f65:	cmp    WORD PTR [rax+0xe],0x4
  428f6a:	jne    428f9e <flatcc_builder_truncate_vector@@Base+0x3e>
  428f6c:	mov    rdx,rsi
  428f6f:	mov    ecx,DWORD PTR [rax+0x14]
  428f72:	cmp    rcx,rsi
  428f75:	jb     428fbd <flatcc_builder_truncate_vector@@Base+0x5d>
  428f77:	sub    ecx,edx
  428f79:	mov    DWORD PTR [rax+0x14],ecx
  428f7c:	mov    rax,QWORD PTR [rdi+0x30]
  428f80:	imul   edx,DWORD PTR [rax+0x10]
  428f84:	mov    eax,DWORD PTR [rdi+0x20]
  428f87:	sub    eax,edx
  428f89:	mov    DWORD PTR [rdi+0x20],eax
  428f8c:	add    rax,QWORD PTR [rdi+0x18]
  428f90:	mov    rdi,rax
  428f93:	xor    esi,esi
  428f95:	call   406110 <memset@plt>
  428f9a:	xor    eax,eax
  428f9c:	pop    rcx
  428f9d:	ret    
  428f9e:	lea    rdi,[rip+0x2137a]        # 44a31f <flatcc_builder_padding_base@@Base+0x57f>
  428fa5:	lea    rsi,[rip+0x21036]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428fac:	lea    rcx,[rip+0x21626]        # 44a5d9 <flatcc_builder_padding_base@@Base+0x839>
  428fb3:	mov    edx,0x3d9
  428fb8:	call   406100 <__assert_fail@plt>
  428fbd:	lea    rdi,[rip+0x21654]        # 44a618 <flatcc_builder_padding_base@@Base+0x878>
  428fc4:	lea    rsi,[rip+0x21017]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  428fcb:	lea    rcx,[rip+0x21607]        # 44a5d9 <flatcc_builder_padding_base@@Base+0x839>
  428fd2:	mov    edx,0x3da
  428fd7:	call   406100 <__assert_fail@plt>
  428fdc:	nop    DWORD PTR [rax+0x0]

0000000000428fe0 <flatcc_builder_truncate_offset_vector@@Base>:
  428fe0:	push   rax
  428fe1:	mov    rax,QWORD PTR [rdi+0x30]
  428fe5:	cmp    WORD PTR [rax+0xe],0x5
  428fea:	jne    42901b <flatcc_builder_truncate_offset_vector@@Base+0x3b>
  428fec:	mov    rdx,rsi
  428fef:	mov    ecx,DWORD PTR [rax+0x14]
  428ff2:	sub    ecx,edx
  428ff4:	jb     42903a <flatcc_builder_truncate_offset_vector@@Base+0x5a>
  428ff6:	mov    DWORD PTR [rax+0x14],ecx
  428ff9:	mov    rax,QWORD PTR [rdi+0x30]
  428ffd:	imul   edx,DWORD PTR [rax+0x10]
  429001:	mov    eax,DWORD PTR [rdi+0x20]
  429004:	sub    eax,edx
  429006:	mov    DWORD PTR [rdi+0x20],eax
  429009:	add    rax,QWORD PTR [rdi+0x18]
  42900d:	mov    rdi,rax
  429010:	xor    esi,esi
  429012:	call   406110 <memset@plt>
  429017:	xor    eax,eax
  429019:	pop    rcx
  42901a:	ret    
  42901b:	lea    rdi,[rip+0x213f6]        # 44a418 <flatcc_builder_padding_base@@Base+0x678>
  429022:	lea    rsi,[rip+0x20fb9]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429029:	lea    rcx,[rip+0x2160c]        # 44a63c <flatcc_builder_padding_base@@Base+0x89c>
  429030:	mov    edx,0x3e2
  429035:	call   406100 <__assert_fail@plt>
  42903a:	lea    rdi,[rip+0x21641]        # 44a682 <flatcc_builder_padding_base@@Base+0x8e2>
  429041:	lea    rsi,[rip+0x20f9a]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429048:	lea    rcx,[rip+0x215ed]        # 44a63c <flatcc_builder_padding_base@@Base+0x89c>
  42904f:	mov    edx,0x3e3
  429054:	call   406100 <__assert_fail@plt>
  429059:	nop    DWORD PTR [rax+0x0]

0000000000429060 <flatcc_builder_truncate_string@@Base>:
  429060:	push   rax
  429061:	mov    rax,QWORD PTR [rdi+0x30]
  429065:	cmp    WORD PTR [rax+0xe],0x6
  42906a:	jne    429095 <flatcc_builder_truncate_string@@Base+0x35>
  42906c:	mov    ecx,DWORD PTR [rax+0x14]
  42906f:	cmp    rcx,rsi
  429072:	jb     4290b4 <flatcc_builder_truncate_string@@Base+0x54>
  429074:	sub    ecx,esi
  429076:	mov    DWORD PTR [rax+0x14],ecx
  429079:	mov    eax,DWORD PTR [rdi+0x20]
  42907c:	sub    eax,esi
  42907e:	mov    DWORD PTR [rdi+0x20],eax
  429081:	add    rax,QWORD PTR [rdi+0x18]
  429085:	mov    edx,esi
  429087:	mov    rdi,rax
  42908a:	xor    esi,esi
  42908c:	call   406110 <memset@plt>
  429091:	xor    eax,eax
  429093:	pop    rcx
  429094:	ret    
  429095:	lea    rdi,[rip+0x21485]        # 44a521 <flatcc_builder_padding_base@@Base+0x781>
  42909c:	lea    rsi,[rip+0x20f3f]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4290a3:	lea    rcx,[rip+0x21613]        # 44a6bd <flatcc_builder_padding_base@@Base+0x91d>
  4290aa:	mov    edx,0x3eb
  4290af:	call   406100 <__assert_fail@plt>
  4290b4:	lea    rdi,[rip+0x21641]        # 44a6fc <flatcc_builder_padding_base@@Base+0x95c>
  4290bb:	lea    rsi,[rip+0x20f20]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4290c2:	lea    rcx,[rip+0x215f4]        # 44a6bd <flatcc_builder_padding_base@@Base+0x91d>
  4290c9:	mov    edx,0x3ec
  4290ce:	call   406100 <__assert_fail@plt>
  4290d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4290dd:	nop    DWORD PTR [rax]

00000000004290e0 <flatcc_builder_start_vector@@Base>:
  4290e0:	push   r15
  4290e2:	push   r14
  4290e4:	push   rbx
  4290e5:	mov    r14,rcx
  4290e8:	mov    r15,rsi
  4290eb:	mov    rbx,rdi
  4290ee:	cmp    dx,0x4
  4290f2:	mov    esi,0x4
  4290f7:	cmova  esi,edx
  4290fa:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  4290ff:	mov    ecx,eax
  429101:	mov    eax,0xffffffff
  429106:	test   ecx,ecx
  429108:	jne    429156 <flatcc_builder_start_vector@@Base+0x76>
  42910a:	mov    rax,QWORD PTR [rbx+0x30]
  42910e:	mov    DWORD PTR [rax+0x10],r15d
  429112:	mov    rax,QWORD PTR [rbx+0x30]
  429116:	mov    DWORD PTR [rax+0x14],0x0
  42911d:	mov    rax,QWORD PTR [rbx+0x30]
  429121:	mov    DWORD PTR [rax+0x18],r14d
  429125:	mov    rax,QWORD PTR [rbx+0x30]
  429129:	mov    WORD PTR [rax+0xe],0x4
  42912f:	mov    ecx,DWORD PTR [rbx+0x28]
  429132:	mov    edx,DWORD PTR [rbx+0x70]
  429135:	sub    edx,ecx
  429137:	add    rcx,QWORD PTR [rbx+0x68]
  42913b:	mov    QWORD PTR [rbx+0x18],rcx
  42913f:	cmp    edx,0xfffffffc
  429142:	mov    ecx,0xfffffffc
  429147:	cmovb  ecx,edx
  42914a:	mov    DWORD PTR [rbx+0x24],ecx
  42914d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429154:	xor    eax,eax
  429156:	pop    rbx
  429157:	pop    r14
  429159:	pop    r15
  42915b:	ret    
  42915c:	nop    DWORD PTR [rax+0x0]

0000000000429160 <flatcc_builder_start_offset_vector@@Base>:
  429160:	push   rbx
  429161:	mov    rbx,rdi
  429164:	mov    esi,0x4
  429169:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  42916e:	mov    ecx,eax
  429170:	mov    eax,0xffffffff
  429175:	test   ecx,ecx
  429177:	je     42917b <flatcc_builder_start_offset_vector@@Base+0x1b>
  429179:	pop    rbx
  42917a:	ret    
  42917b:	mov    rax,QWORD PTR [rbx+0x30]
  42917f:	mov    DWORD PTR [rax+0x10],0x4
  429186:	mov    rax,QWORD PTR [rbx+0x30]
  42918a:	mov    DWORD PTR [rax+0x14],0x0
  429191:	mov    rax,QWORD PTR [rbx+0x30]
  429195:	mov    WORD PTR [rax+0xe],0x5
  42919b:	mov    ecx,DWORD PTR [rbx+0x28]
  42919e:	mov    edx,DWORD PTR [rbx+0x70]
  4291a1:	sub    edx,ecx
  4291a3:	add    rcx,QWORD PTR [rbx+0x68]
  4291a7:	mov    QWORD PTR [rbx+0x18],rcx
  4291ab:	cmp    edx,0xfffffffc
  4291ae:	mov    ecx,0xfffffffc
  4291b3:	cmovb  ecx,edx
  4291b6:	mov    DWORD PTR [rbx+0x24],ecx
  4291b9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4291c0:	xor    eax,eax
  4291c2:	pop    rbx
  4291c3:	ret    
  4291c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4291ce:	xchg   ax,ax

00000000004291d0 <flatcc_builder_create_offset_vector@@Base>:
  4291d0:	push   r15
  4291d2:	push   r14
  4291d4:	push   r12
  4291d6:	push   rbx
  4291d7:	push   rax
  4291d8:	mov    r14,rdx
  4291db:	mov    r15,rsi
  4291de:	mov    rbx,rdi
  4291e1:	mov    esi,0x4
  4291e6:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  4291eb:	test   eax,eax
  4291ed:	je     4291fd <flatcc_builder_create_offset_vector@@Base+0x2d>
  4291ef:	xor    eax,eax
  4291f1:	add    rsp,0x8
  4291f5:	pop    rbx
  4291f6:	pop    r12
  4291f8:	pop    r14
  4291fa:	pop    r15
  4291fc:	ret    
  4291fd:	mov    rax,QWORD PTR [rbx+0x30]
  429201:	mov    DWORD PTR [rax+0x10],0x4
  429208:	mov    rax,QWORD PTR [rbx+0x30]
  42920c:	mov    DWORD PTR [rax+0x14],0x0
  429213:	mov    rax,QWORD PTR [rbx+0x30]
  429217:	mov    WORD PTR [rax+0xe],0x5
  42921d:	mov    ecx,DWORD PTR [rbx+0x28]
  429220:	mov    edx,DWORD PTR [rbx+0x70]
  429223:	sub    edx,ecx
  429225:	add    rcx,QWORD PTR [rbx+0x68]
  429229:	mov    QWORD PTR [rbx+0x18],rcx
  42922d:	cmp    edx,0xfffffffc
  429230:	mov    ecx,0xfffffffc
  429235:	cmovb  ecx,edx
  429238:	mov    DWORD PTR [rbx+0x24],ecx
  42923b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429242:	mov    ecx,DWORD PTR [rax+0x14]
  429245:	add    ecx,r14d
  429248:	jb     4292f8 <flatcc_builder_create_offset_vector@@Base+0x128>
  42924e:	cmp    ecx,0x40000000
  429254:	jae    4292f8 <flatcc_builder_create_offset_vector@@Base+0x128>
  42925a:	mov    DWORD PTR [rax+0x14],ecx
  42925d:	mov    r12d,DWORD PTR [rbx+0x20]
  429261:	lea    eax,[r12+r14*4]
  429265:	mov    DWORD PTR [rbx+0x20],eax
  429268:	cmp    eax,DWORD PTR [rbx+0x24]
  42926b:	jae    42927b <flatcc_builder_create_offset_vector@@Base+0xab>
  42926d:	mov    rdi,QWORD PTR [rbx+0x18]
  429271:	add    rdi,r12
  429274:	jne    4292d6 <flatcc_builder_create_offset_vector@@Base+0x106>
  429276:	jmp    4291ef <flatcc_builder_create_offset_vector@@Base+0x1f>
  42927b:	inc    eax
  42927d:	lea    rsi,[rbx+0x68]
  429281:	mov    rdi,QWORD PTR [rbx+0x40]
  429285:	mov    edx,DWORD PTR [rbx+0x28]
  429288:	add    rdx,rax
  42928b:	mov    ecx,0x1
  429290:	mov    r8d,0x1
  429296:	call   QWORD PTR [rbx+0x50]
  429299:	test   eax,eax
  42929b:	jne    4291ef <flatcc_builder_create_offset_vector@@Base+0x1f>
  4292a1:	mov    eax,DWORD PTR [rbx+0x28]
  4292a4:	mov    rdi,rax
  4292a7:	add    rdi,QWORD PTR [rbx+0x68]
  4292ab:	mov    QWORD PTR [rbx+0x18],rdi
  4292af:	mov    ecx,DWORD PTR [rbx+0x70]
  4292b2:	sub    ecx,eax
  4292b4:	cmp    ecx,0xfffffffc
  4292b7:	mov    eax,0xfffffffc
  4292bc:	cmovb  eax,ecx
  4292bf:	mov    DWORD PTR [rbx+0x24],eax
  4292c2:	mov    rax,QWORD PTR [rbx+0x30]
  4292c6:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4292cd:	add    rdi,r12
  4292d0:	je     4291ef <flatcc_builder_create_offset_vector@@Base+0x1f>
  4292d6:	shl    r14,0x2
  4292da:	mov    rsi,r15
  4292dd:	mov    rdx,r14
  4292e0:	call   4061a0 <memcpy@plt>
  4292e5:	mov    rdi,rbx
  4292e8:	add    rsp,0x8
  4292ec:	pop    rbx
  4292ed:	pop    r12
  4292ef:	pop    r14
  4292f1:	pop    r15
  4292f3:	jmp    429320 <flatcc_builder_end_offset_vector@@Base>
  4292f8:	lea    rdi,[rip+0x21dac]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  4292ff:	lea    rsi,[rip+0x20cdc]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429306:	lea    rcx,[rip+0x21db9]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42930d:	mov    edx,0x37c
  429312:	call   406100 <__assert_fail@plt>
  429317:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429320 <flatcc_builder_end_offset_vector@@Base>:
  429320:	push   rbp
  429321:	push   rbx
  429322:	push   rax
  429323:	mov    rax,QWORD PTR [rdi+0x30]
  429327:	cmp    WORD PTR [rax+0xe],0x5
  42932c:	jne    4293ba <flatcc_builder_end_offset_vector@@Base+0x9a>
  429332:	mov    rbx,rdi
  429335:	mov    rsi,QWORD PTR [rdi+0x18]
  429339:	mov    edx,DWORD PTR [rax+0x14]
  42933c:	xor    ecx,ecx
  42933e:	call   42a370 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  429343:	mov    ebp,eax
  429345:	test   eax,eax
  429347:	je     4293b1 <flatcc_builder_end_offset_vector@@Base+0x91>
  429349:	mov    rdi,QWORD PTR [rbx+0x18]
  42934d:	mov    edx,DWORD PTR [rbx+0x20]
  429350:	xor    esi,esi
  429352:	call   406110 <memset@plt>
  429357:	mov    rax,QWORD PTR [rbx+0x30]
  42935b:	mov    ecx,DWORD PTR [rax+0x8]
  42935e:	mov    DWORD PTR [rbx+0x20],ecx
  429361:	mov    ecx,DWORD PTR [rax]
  429363:	mov    DWORD PTR [rbx+0x28],ecx
  429366:	mov    edx,DWORD PTR [rax+0x4]
  429369:	mov    rsi,rcx
  42936c:	add    rsi,QWORD PTR [rbx+0x68]
  429370:	mov    QWORD PTR [rbx+0x18],rsi
  429374:	mov    esi,DWORD PTR [rbx+0x70]
  429377:	sub    esi,ecx
  429379:	cmp    esi,edx
  42937b:	cmova  esi,edx
  42937e:	mov    DWORD PTR [rbx+0x24],esi
  429381:	movzx  ecx,WORD PTR [rbx+0xea]
  429388:	cmp    WORD PTR [rbx+0xe8],cx
  42938f:	jae    429398 <flatcc_builder_end_offset_vector@@Base+0x78>
  429391:	mov    WORD PTR [rbx+0xe8],cx
  429398:	movzx  ecx,WORD PTR [rax+0xc]
  42939c:	mov    WORD PTR [rbx+0xea],cx
  4293a3:	add    rax,0xffffffffffffffdc
  4293a7:	mov    QWORD PTR [rbx+0x30],rax
  4293ab:	dec    DWORD PTR [rbx+0x104]
  4293b1:	mov    eax,ebp
  4293b3:	add    rsp,0x8
  4293b7:	pop    rbx
  4293b8:	pop    rbp
  4293b9:	ret    
  4293ba:	lea    rdi,[rip+0x21057]        # 44a418 <flatcc_builder_padding_base@@Base+0x678>
  4293c1:	lea    rsi,[rip+0x20c1a]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4293c8:	lea    rcx,[rip+0x21678]        # 44aa47 <flatcc_builder_padding_base@@Base+0xca7>
  4293cf:	mov    edx,0x5c8
  4293d4:	call   406100 <__assert_fail@plt>
  4293d9:	nop    DWORD PTR [rax+0x0]

00000000004293e0 <flatcc_builder_start_string@@Base>:
  4293e0:	push   rbx
  4293e1:	mov    rbx,rdi
  4293e4:	mov    esi,0x1
  4293e9:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  4293ee:	mov    ecx,eax
  4293f0:	mov    eax,0xffffffff
  4293f5:	test   ecx,ecx
  4293f7:	je     4293fb <flatcc_builder_start_string@@Base+0x1b>
  4293f9:	pop    rbx
  4293fa:	ret    
  4293fb:	mov    rax,QWORD PTR [rbx+0x30]
  4293ff:	mov    DWORD PTR [rax+0x10],0x1
  429406:	mov    rax,QWORD PTR [rbx+0x30]
  42940a:	mov    DWORD PTR [rax+0x14],0x0
  429411:	mov    rax,QWORD PTR [rbx+0x30]
  429415:	mov    WORD PTR [rax+0xe],0x6
  42941b:	mov    ecx,DWORD PTR [rbx+0x28]
  42941e:	mov    edx,DWORD PTR [rbx+0x70]
  429421:	sub    edx,ecx
  429423:	add    rcx,QWORD PTR [rbx+0x68]
  429427:	mov    QWORD PTR [rbx+0x18],rcx
  42942b:	cmp    edx,0xfffffffc
  42942e:	mov    ecx,0xfffffffc
  429433:	cmovb  ecx,edx
  429436:	mov    DWORD PTR [rbx+0x24],ecx
  429439:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429440:	xor    eax,eax
  429442:	pop    rbx
  429443:	ret    
  429444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42944e:	xchg   ax,ax

0000000000429450 <flatcc_builder_reserve_table@@Base>:
  429450:	push   r15
  429452:	push   r14
  429454:	push   rbx
  429455:	test   esi,esi
  429457:	js     429504 <flatcc_builder_reserve_table@@Base+0xb4>
  42945d:	mov    r14d,esi
  429460:	mov    r15,rdi
  429463:	mov    rax,QWORD PTR [rdi+0x30]
  429467:	movzx  ebx,WORD PTR [rax+0x1c]
  42946b:	add    ebx,ebx
  42946d:	add    ebx,DWORD PTR [rax+0x10]
  429470:	lea    edx,[r14+r14*1]
  429474:	add    edx,0x4
  429477:	add    rdx,rbx
  42947a:	cmp    rdx,QWORD PTR [rdi+0x60]
  42947e:	jbe    42949c <flatcc_builder_reserve_table@@Base+0x4c>
  429480:	lea    rsi,[r15+0x58]
  429484:	mov    rdi,QWORD PTR [r15+0x40]
  429488:	mov    ecx,0x1
  42948d:	xor    r8d,r8d
  429490:	call   QWORD PTR [r15+0x50]
  429494:	test   eax,eax
  429496:	jne    429523 <flatcc_builder_reserve_table@@Base+0xd3>
  42949c:	add    rbx,QWORD PTR [r15+0x58]
  4294a0:	mov    QWORD PTR [r15+0x8],rbx
  4294a4:	je     4294f9 <flatcc_builder_reserve_table@@Base+0xa9>
  4294a6:	add    r14d,r14d
  4294a9:	add    rbx,0x4
  4294ad:	mov    QWORD PTR [r15+0x8],rbx
  4294b1:	mov    rax,QWORD PTR [r15+0x30]
  4294b5:	mov    ebx,DWORD PTR [rax+0x14]
  4294b8:	or     r14d,0x1
  4294bc:	add    r14,rbx
  4294bf:	cmp    r14,QWORD PTR [r15+0x90]
  4294c6:	jbe    4294e6 <flatcc_builder_reserve_table@@Base+0x96>
  4294c8:	lea    rsi,[r15+0x88]
  4294cf:	mov    rdi,QWORD PTR [r15+0x40]
  4294d3:	mov    rdx,r14
  4294d6:	xor    ecx,ecx
  4294d8:	mov    r8d,0x3
  4294de:	call   QWORD PTR [r15+0x50]
  4294e2:	test   eax,eax
  4294e4:	jne    429523 <flatcc_builder_reserve_table@@Base+0xd3>
  4294e6:	xor    eax,eax
  4294e8:	add    rbx,QWORD PTR [r15+0x88]
  4294ef:	mov    QWORD PTR [r15],rbx
  4294f2:	sete   al
  4294f5:	neg    eax
  4294f7:	jmp    4294fe <flatcc_builder_reserve_table@@Base+0xae>
  4294f9:	mov    eax,0xffffffff
  4294fe:	pop    rbx
  4294ff:	pop    r14
  429501:	pop    r15
  429503:	ret    
  429504:	lea    rdi,[rip+0x21254]        # 44a75f <flatcc_builder_padding_base@@Base+0x9bf>
  42950b:	lea    rsi,[rip+0x20ad0]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429512:	lea    rcx,[rip+0x21205]        # 44a71e <flatcc_builder_padding_base@@Base+0x97e>
  429519:	mov    edx,0x429
  42951e:	call   406100 <__assert_fail@plt>
  429523:	lea    rdi,[rip+0x17665]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42952a:	lea    rsi,[rip+0x20ab1]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429531:	lea    rcx,[rip+0x21aa4]        # 44afdc <flatcc_builder_padding_base@@Base+0x123c>
  429538:	mov    edx,0x134
  42953d:	call   406100 <__assert_fail@plt>
  429542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42954c:	nop    DWORD PTR [rax+0x0]

0000000000429550 <flatcc_builder_start_table@@Base>:
  429550:	push   rbp
  429551:	push   r15
  429553:	push   r14
  429555:	push   rbx
  429556:	push   rax
  429557:	mov    r15d,esi
  42955a:	mov    rbx,rdi
  42955d:	mov    esi,0x4
  429562:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  429567:	mov    r14d,0xffffffff
  42956d:	test   eax,eax
  42956f:	je     42957f <flatcc_builder_start_table@@Base+0x2f>
  429571:	mov    eax,r14d
  429574:	add    rsp,0x8
  429578:	pop    rbx
  429579:	pop    r14
  42957b:	pop    r15
  42957d:	pop    rbp
  42957e:	ret    
  42957f:	mov    eax,DWORD PTR [rbx+0x8]
  429582:	sub    eax,DWORD PTR [rbx+0x58]
  429585:	mov    rcx,QWORD PTR [rbx+0x30]
  429589:	mov    DWORD PTR [rcx+0x10],eax
  42958c:	mov    eax,DWORD PTR [rbx]
  42958e:	sub    eax,DWORD PTR [rbx+0x88]
  429594:	mov    rcx,QWORD PTR [rbx+0x30]
  429598:	mov    DWORD PTR [rcx+0x14],eax
  42959b:	mov    eax,DWORD PTR [rbx+0x14]
  42959e:	mov    rcx,QWORD PTR [rbx+0x30]
  4295a2:	mov    DWORD PTR [rcx+0x18],eax
  4295a5:	movzx  eax,WORD PTR [rbx+0x10]
  4295a9:	mov    rcx,QWORD PTR [rbx+0x30]
  4295ad:	mov    WORD PTR [rcx+0x1c],ax
  4295b1:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  4295b8:	mov    WORD PTR [rbx+0x10],0x0
  4295be:	mov    rax,QWORD PTR [rbx+0x30]
  4295c2:	mov    WORD PTR [rax+0xe],0x3
  4295c8:	movzx  ebp,WORD PTR [rax+0x1c]
  4295cc:	add    ebp,ebp
  4295ce:	add    ebp,DWORD PTR [rax+0x10]
  4295d1:	lea    edx,[r15+r15*1]
  4295d5:	add    edx,0x4
  4295d8:	add    rdx,rbp
  4295db:	cmp    rdx,QWORD PTR [rbx+0x60]
  4295df:	jbe    4295fc <flatcc_builder_start_table@@Base+0xac>
  4295e1:	lea    rsi,[rbx+0x58]
  4295e5:	mov    rdi,QWORD PTR [rbx+0x40]
  4295e9:	mov    ecx,0x1
  4295ee:	xor    r8d,r8d
  4295f1:	call   QWORD PTR [rbx+0x50]
  4295f4:	test   eax,eax
  4295f6:	jne    429690 <flatcc_builder_start_table@@Base+0x140>
  4295fc:	add    rbp,QWORD PTR [rbx+0x58]
  429600:	mov    QWORD PTR [rbx+0x8],rbp
  429604:	je     429571 <flatcc_builder_start_table@@Base+0x21>
  42960a:	add    r15d,r15d
  42960d:	add    rbp,0x4
  429611:	mov    QWORD PTR [rbx+0x8],rbp
  429615:	mov    rax,QWORD PTR [rbx+0x30]
  429619:	mov    ebp,DWORD PTR [rax+0x14]
  42961c:	or     r15d,0x1
  429620:	add    r15,rbp
  429623:	cmp    r15,QWORD PTR [rbx+0x90]
  42962a:	jbe    429649 <flatcc_builder_start_table@@Base+0xf9>
  42962c:	lea    rsi,[rbx+0x88]
  429633:	mov    rdi,QWORD PTR [rbx+0x40]
  429637:	mov    rdx,r15
  42963a:	xor    ecx,ecx
  42963c:	mov    r8d,0x3
  429642:	call   QWORD PTR [rbx+0x50]
  429645:	test   eax,eax
  429647:	jne    429690 <flatcc_builder_start_table@@Base+0x140>
  429649:	add    rbp,QWORD PTR [rbx+0x88]
  429650:	mov    QWORD PTR [rbx],rbp
  429653:	je     429571 <flatcc_builder_start_table@@Base+0x21>
  429659:	mov    eax,DWORD PTR [rbx+0x28]
  42965c:	mov    rcx,rax
  42965f:	add    rcx,QWORD PTR [rbx+0x68]
  429663:	mov    QWORD PTR [rbx+0x18],rcx
  429667:	mov    ecx,DWORD PTR [rbx+0x70]
  42966a:	sub    ecx,eax
  42966c:	cmp    ecx,0xfffc
  429672:	mov    eax,0xfffc
  429677:	cmovb  eax,ecx
  42967a:	mov    DWORD PTR [rbx+0x24],eax
  42967d:	mov    rax,QWORD PTR [rbx+0x30]
  429681:	mov    DWORD PTR [rax+0x4],0xfffc
  429688:	xor    r14d,r14d
  42968b:	jmp    429571 <flatcc_builder_start_table@@Base+0x21>
  429690:	lea    rdi,[rip+0x174f8]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  429697:	lea    rsi,[rip+0x20944]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42969e:	lea    rcx,[rip+0x21937]        # 44afdc <flatcc_builder_padding_base@@Base+0x123c>
  4296a5:	mov    edx,0x134
  4296aa:	call   406100 <__assert_fail@plt>
  4296af:	nop

00000000004296b0 <flatcc_builder_create_vtable@@Base>:
  4296b0:	push   r14
  4296b2:	push   rbx
  4296b3:	sub    rsp,0x98
  4296ba:	mov    r14,rdi
  4296bd:	mov    QWORD PTR [rsp+0x8],0x0
  4296c6:	mov    DWORD PTR [rsp+0x10],0x0
  4296ce:	test   dx,dx
  4296d1:	je     429738 <flatcc_builder_create_vtable@@Base+0x88>
  4296d3:	movzx  r8d,dx
  4296d7:	mov    QWORD PTR [rsp+0x8],r8
  4296dc:	mov    QWORD PTR [rsp+0x18],rsi
  4296e1:	mov    QWORD PTR [rsp+0x20],r8
  4296e6:	mov    DWORD PTR [rsp+0x10],0x1
  4296ee:	mov    edx,0x1
  4296f3:	cmp    DWORD PTR [r14+0x100],0x0
  4296fb:	jne    429747 <flatcc_builder_create_vtable@@Base+0x97>
  4296fd:	cmp    DWORD PTR [r14+0x124],0x0
  429705:	jne    429747 <flatcc_builder_create_vtable@@Base+0x97>
  429707:	mov    ebx,DWORD PTR [r14+0xf4]
  42970e:	lea    eax,[r8+rbx*1]
  429712:	mov    DWORD PTR [r14+0xf4],eax
  429719:	mov    rdi,QWORD PTR [r14+0x38]
  42971d:	lea    rsi,[rsp+0x18]
  429722:	mov    ecx,ebx
  429724:	call   QWORD PTR [r14+0x48]
  429728:	test   eax,eax
  42972a:	jne    4297db <flatcc_builder_create_vtable@@Base+0x12b>
  429730:	xor    eax,eax
  429732:	inc    ebx
  429734:	jne    42978c <flatcc_builder_create_vtable@@Base+0xdc>
  429736:	jmp    429792 <flatcc_builder_create_vtable@@Base+0xe2>
  429738:	xor    edx,edx
  42973a:	xor    r8d,r8d
  42973d:	cmp    DWORD PTR [r14+0x100],0x0
  429745:	je     4296fd <flatcc_builder_create_vtable@@Base+0x4d>
  429747:	cmp    r8,0x11
  42974b:	setb   al
  42974e:	lea    rcx,[r8-0x10]
  429752:	shr    rcx,0x20
  429756:	sete   cl
  429759:	test   r8d,r8d
  42975c:	je     42979d <flatcc_builder_create_vtable@@Base+0xed>
  42975e:	or     al,cl
  429760:	je     42979d <flatcc_builder_create_vtable@@Base+0xed>
  429762:	mov    ebx,DWORD PTR [r14+0xf0]
  429769:	sub    ebx,r8d
  42976c:	mov    rdi,QWORD PTR [r14+0x38]
  429770:	lea    rsi,[rsp+0x18]
  429775:	mov    ecx,ebx
  429777:	call   QWORD PTR [r14+0x48]
  42977b:	test   eax,eax
  42977d:	jne    4297bc <flatcc_builder_create_vtable@@Base+0x10c>
  42977f:	mov    DWORD PTR [r14+0xf0],ebx
  429786:	test   ebx,ebx
  429788:	je     429790 <flatcc_builder_create_vtable@@Base+0xe0>
  42978a:	inc    ebx
  42978c:	mov    eax,ebx
  42978e:	jmp    429792 <flatcc_builder_create_vtable@@Base+0xe2>
  429790:	xor    eax,eax
  429792:	add    rsp,0x98
  429799:	pop    rbx
  42979a:	pop    r14
  42979c:	ret    
  42979d:	lea    rdi,[rip+0x173eb]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4297a4:	lea    rsi,[rip+0x20837]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4297ab:	lea    rcx,[rip+0x218af]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  4297b2:	mov    edx,0x287
  4297b7:	call   406100 <__assert_fail@plt>
  4297bc:	lea    rdi,[rip+0x173cc]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4297c3:	lea    rsi,[rip+0x20818]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4297ca:	lea    rcx,[rip+0x21890]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  4297d1:	mov    edx,0x28b
  4297d6:	call   406100 <__assert_fail@plt>
  4297db:	lea    rdi,[rip+0x173ad]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  4297e2:	lea    rsi,[rip+0x207f9]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  4297e9:	lea    rcx,[rip+0x2192d]        # 44b11d <flatcc_builder_padding_base@@Base+0x137d>
  4297f0:	mov    edx,0x2a5
  4297f5:	call   406100 <__assert_fail@plt>
  4297fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429800 <flatcc_builder_create_cached_vtable@@Base>:
  429800:	push   rbp
  429801:	push   r15
  429803:	push   r14
  429805:	push   r13
  429807:	push   r12
  429809:	push   rbx
  42980a:	sub    rsp,0x28
  42980e:	mov    r15d,ecx
  429811:	mov    r12d,edx
  429814:	mov    QWORD PTR [rsp+0x18],rsi
  429819:	mov    r14,rdi
  42981c:	mov    rax,QWORD PTR [rdi+0xd8]
  429823:	test   rax,rax
  429826:	je     4298f6 <flatcc_builder_create_cached_vtable@@Base+0xf6>
  42982c:	neg    al
  42982e:	shrx   r13d,r15d,eax
  429833:	shl    r13,0x2
  429837:	add    r13,QWORD PTR [r14+0xa8]
  42983e:	je     4299ca <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  429844:	mov    ebx,DWORD PTR [r13+0x0]
  429848:	movzx  eax,r12w
  42984c:	mov    QWORD PTR [rsp],rax
  429850:	test   ebx,ebx
  429852:	je     4299d1 <flatcc_builder_create_cached_vtable@@Base+0x1d1>
  429858:	mov    rbp,QWORD PTR [r14+0x78]
  42985c:	mov    QWORD PTR [rsp+0x10],r14
  429861:	mov    r15,QWORD PTR [r14+0xb8]
  429868:	xor    eax,eax
  42986a:	mov    QWORD PTR [rsp+0x20],rax
  42986f:	mov    QWORD PTR [rsp+0x8],r13
  429874:	jmp    429893 <flatcc_builder_create_cached_vtable@@Base+0x93>
  429876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429880:	mov    ebx,DWORD PTR [r14+0xc]
  429884:	add    r14,0xc
  429888:	mov    r13,r14
  42988b:	test   ebx,ebx
  42988d:	je     4299b9 <flatcc_builder_create_cached_vtable@@Base+0x1b9>
  429893:	mov    eax,ebx
  429895:	lea    r14,[r15+rax*1]
  429899:	mov    esi,DWORD PTR [r15+rax*1+0x8]
  42989e:	cmp    WORD PTR [rbp+rsi*1+0x0],r12w
  4298a4:	jne    429880 <flatcc_builder_create_cached_vtable@@Base+0x80>
  4298a6:	add    rsi,rbp
  4298a9:	mov    rdi,QWORD PTR [rsp+0x18]
  4298ae:	mov    rdx,QWORD PTR [rsp]
  4298b2:	call   4061c0 <bcmp@plt>
  4298b7:	test   eax,eax
  4298b9:	jne    429880 <flatcc_builder_create_cached_vtable@@Base+0x80>
  4298bb:	mov    eax,DWORD PTR [r14+0x4]
  4298bf:	mov    rcx,QWORD PTR [rsp+0x10]
  4298c4:	cmp    eax,DWORD PTR [rcx+0x100]
  4298ca:	je     429b3a <flatcc_builder_create_cached_vtable@@Base+0x33a>
  4298d0:	lea    r13,[r14+0xc]
  4298d4:	mov    ebx,DWORD PTR [r14+0xc]
  4298d8:	mov    rax,r14
  4298db:	mov    QWORD PTR [rsp+0x20],r14
  4298e0:	test   ebx,ebx
  4298e2:	jne    429893 <flatcc_builder_create_cached_vtable@@Base+0x93>
  4298e4:	mov    r15,r14
  4298e7:	mov    r14,QWORD PTR [rsp+0x10]
  4298ec:	mov    r13,QWORD PTR [rsp+0x8]
  4298f1:	jmp    4299d4 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  4298f6:	cmp    DWORD PTR [r14+0xe4],0x0
  4298fe:	jne    429b78 <flatcc_builder_create_cached_vtable@@Base+0x378>
  429904:	lea    r13,[r14+0xb8]
  42990b:	cmp    QWORD PTR [r14+0xc0],0xf
  429913:	ja     429935 <flatcc_builder_create_cached_vtable@@Base+0x135>
  429915:	mov    rdi,QWORD PTR [r14+0x40]
  429919:	mov    edx,0x10
  42991e:	mov    rsi,r13
  429921:	xor    ecx,ecx
  429923:	mov    r8d,0x6
  429929:	call   QWORD PTR [r14+0x50]
  42992d:	test   eax,eax
  42992f:	jne    429b59 <flatcc_builder_create_cached_vtable@@Base+0x359>
  429935:	xor    ebx,ebx
  429937:	cmp    QWORD PTR [r13+0x0],0x0
  42993c:	je     429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  429942:	lea    rsi,[r14+0xa8]
  429949:	mov    DWORD PTR [r14+0xe4],0x10
  429954:	mov    rdi,QWORD PTR [r14+0x40]
  429958:	mov    ebp,0x100
  42995d:	mov    edx,0x100
  429962:	mov    ecx,0x1
  429967:	mov    r8d,0x5
  42996d:	call   QWORD PTR [r14+0x50]
  429971:	test   eax,eax
  429973:	jne    429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  429979:	mov    rax,QWORD PTR [r14+0xb0]
  429980:	mov    rcx,rbp
  429983:	add    rbp,rbp
  429986:	cmp    rbp,rax
  429989:	jbe    429980 <flatcc_builder_create_cached_vtable@@Base+0x180>
  42998b:	shr    rcx,0x2
  42998f:	mov    rax,0xffffffffffffffff
  429996:	mov    edx,0x1
  42999b:	nop    DWORD PTR [rax+rax*1+0x0]
  4299a0:	inc    rax
  4299a3:	shlx   rsi,rdx,rax
  4299a8:	cmp    rsi,rcx
  4299ab:	jb     4299a0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  4299ad:	mov    QWORD PTR [r14+0xd8],rax
  4299b4:	jmp    42982c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  4299b9:	mov    r14,QWORD PTR [rsp+0x10]
  4299be:	mov    r13,QWORD PTR [rsp+0x8]
  4299c3:	mov    r15,QWORD PTR [rsp+0x20]
  4299c8:	jmp    4299d4 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  4299ca:	xor    ebx,ebx
  4299cc:	jmp    429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  4299d1:	xor    r15d,r15d
  4299d4:	mov    r12d,DWORD PTR [r14+0xe4]
  4299db:	lea    rbp,[r14+0xb8]
  4299e2:	lea    rdx,[r12+0x10]
  4299e7:	cmp    rdx,QWORD PTR [r14+0xc0]
  4299ee:	jbe    429a0b <flatcc_builder_create_cached_vtable@@Base+0x20b>
  4299f0:	mov    rdi,QWORD PTR [r14+0x40]
  4299f4:	mov    rsi,rbp
  4299f7:	xor    ecx,ecx
  4299f9:	mov    r8d,0x6
  4299ff:	call   QWORD PTR [r14+0x50]
  429a03:	test   eax,eax
  429a05:	jne    429b59 <flatcc_builder_create_cached_vtable@@Base+0x359>
  429a0b:	xor    ebx,ebx
  429a0d:	add    r12,QWORD PTR [rbp+0x0]
  429a11:	je     429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  429a17:	mov    eax,DWORD PTR [r14+0xe4]
  429a1e:	mov    ecx,DWORD PTR [r14+0x100]
  429a25:	lea    edx,[rax+0x10]
  429a28:	mov    DWORD PTR [r14+0xe4],edx
  429a2f:	mov    DWORD PTR [r12+0x4],ecx
  429a34:	mov    ecx,DWORD PTR [r13+0x0]
  429a38:	mov    DWORD PTR [r12+0xc],ecx
  429a3d:	mov    DWORD PTR [r13+0x0],eax
  429a41:	mov    rdi,r14
  429a44:	mov    rsi,QWORD PTR [rsp+0x18]
  429a49:	mov    rdx,QWORD PTR [rsp]
  429a4d:	call   4296b0 <flatcc_builder_create_vtable@@Base>
  429a52:	mov    DWORD PTR [r12],eax
  429a56:	test   eax,eax
  429a58:	je     429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  429a5e:	test   r15,r15
  429a61:	je     429a71 <flatcc_builder_create_cached_vtable@@Base+0x271>
  429a63:	mov    eax,DWORD PTR [r15+0x8]
  429a67:	mov    DWORD PTR [r12+0x8],eax
  429a6c:	jmp    429b1e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  429a71:	mov    rax,QWORD PTR [r14+0x118]
  429a78:	mov    ebp,DWORD PTR [r14+0xe0]
  429a7f:	test   rax,rax
  429a82:	je     429ac5 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  429a84:	mov    rcx,QWORD PTR [rsp]
  429a88:	add    ecx,ebp
  429a8a:	cmp    rax,rcx
  429a8d:	jae    429ac5 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  429a8f:	cmp    QWORD PTR [r14+0xd8],0x0
  429a97:	je     429b1e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  429a9d:	mov    rdi,QWORD PTR [r14+0xa8]
  429aa4:	mov    rdx,QWORD PTR [r14+0xb0]
  429aab:	xor    esi,esi
  429aad:	call   406110 <memset@plt>
  429ab2:	movabs rax,0x1000000000
  429abc:	mov    QWORD PTR [r14+0xe0],rax
  429ac3:	jmp    429b1e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  429ac5:	lea    rbx,[r14+0x78]
  429ac9:	mov    rax,QWORD PTR [rsp]
  429acd:	lea    rdx,[rax+rbp*1]
  429ad1:	cmp    rdx,QWORD PTR [r14+0x80]
  429ad8:	jbe    429af1 <flatcc_builder_create_cached_vtable@@Base+0x2f1>
  429ada:	mov    rdi,QWORD PTR [r14+0x40]
  429ade:	mov    rsi,rbx
  429ae1:	xor    ecx,ecx
  429ae3:	mov    r8d,0x2
  429ae9:	call   QWORD PTR [r14+0x50]
  429aed:	test   eax,eax
  429aef:	jne    429b59 <flatcc_builder_create_cached_vtable@@Base+0x359>
  429af1:	add    rbp,QWORD PTR [rbx]
  429af4:	je     429b33 <flatcc_builder_create_cached_vtable@@Base+0x333>
  429af6:	mov    eax,DWORD PTR [r14+0xe0]
  429afd:	mov    DWORD PTR [r12+0x8],eax
  429b02:	mov    rdx,QWORD PTR [rsp]
  429b06:	mov    ecx,edx
  429b08:	add    ecx,eax
  429b0a:	mov    DWORD PTR [r14+0xe0],ecx
  429b11:	mov    rdi,rbp
  429b14:	mov    rsi,QWORD PTR [rsp+0x18]
  429b19:	call   4061a0 <memcpy@plt>
  429b1e:	mov    ebx,DWORD PTR [r12]
  429b22:	mov    eax,ebx
  429b24:	add    rsp,0x28
  429b28:	pop    rbx
  429b29:	pop    r12
  429b2b:	pop    r13
  429b2d:	pop    r14
  429b2f:	pop    r15
  429b31:	pop    rbp
  429b32:	ret    
  429b33:	mov    ebx,0xffffffff
  429b38:	jmp    429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  429b3a:	mov    rcx,QWORD PTR [rsp+0x8]
  429b3f:	cmp    r13,rcx
  429b42:	je     429b54 <flatcc_builder_create_cached_vtable@@Base+0x354>
  429b44:	mov    eax,DWORD PTR [r14+0xc]
  429b48:	mov    DWORD PTR [r13+0x0],eax
  429b4c:	mov    eax,DWORD PTR [rcx]
  429b4e:	mov    DWORD PTR [r14+0xc],eax
  429b52:	mov    DWORD PTR [rcx],ebx
  429b54:	mov    ebx,DWORD PTR [r14]
  429b57:	jmp    429b22 <flatcc_builder_create_cached_vtable@@Base+0x322>
  429b59:	lea    rdi,[rip+0x1702f]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  429b60:	lea    rsi,[rip+0x2047b]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429b67:	lea    rcx,[rip+0x2146e]        # 44afdc <flatcc_builder_padding_base@@Base+0x123c>
  429b6e:	mov    edx,0x134
  429b73:	call   406100 <__assert_fail@plt>
  429b78:	lea    rdi,[rip+0x215e7]        # 44b166 <flatcc_builder_padding_base@@Base+0x13c6>
  429b7f:	lea    rsi,[rip+0x2045c]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429b86:	lea    rcx,[rip+0x215e8]        # 44b175 <flatcc_builder_padding_base@@Base+0x13d5>
  429b8d:	mov    edx,0x156
  429b92:	call   406100 <__assert_fail@plt>
  429b97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429ba0 <flatcc_builder_create_table@@Base>:
  429ba0:	push   rbp
  429ba1:	push   r14
  429ba3:	push   rbx
  429ba4:	sub    rsp,0xa0
  429bab:	test   r9d,r9d
  429bae:	js     429dc3 <flatcc_builder_create_table@@Base+0x223>
  429bb4:	mov    r14,rdi
  429bb7:	mov    edi,DWORD PTR [rsp+0xc0]
  429bbe:	test   dil,0x1
  429bc2:	je     429de2 <flatcc_builder_create_table@@Base+0x242>
  429bc8:	cmp    cx,0x4
  429bcc:	mov    eax,0x4
  429bd1:	cmova  eax,ecx
  429bd4:	cmp    WORD PTR [r14+0xe8],ax
  429bdc:	jae    429be6 <flatcc_builder_create_table@@Base+0x46>
  429bde:	mov    WORD PTR [r14+0xe8],ax
  429be6:	mov    ebp,DWORD PTR [r14+0xf0]
  429bed:	sub    ebp,edx
  429bef:	movzx  r10d,ax
  429bf3:	dec    r10d
  429bf6:	and    r10d,ebp
  429bf9:	add    edi,r10d
  429bfc:	neg    edi
  429bfe:	lea    ecx,[rdi+rbp*1]
  429c01:	add    ecx,0xfffffffd
  429c04:	mov    DWORD PTR [rsp+0xc],ecx
  429c08:	test   r9d,r9d
  429c0b:	jle    429cc6 <flatcc_builder_create_table@@Base+0x126>
  429c11:	add    ebp,0xfffffffc
  429c14:	sub    ebp,r10d
  429c17:	mov    ecx,0xfffffffc
  429c1c:	sub    ecx,ebp
  429c1e:	mov    edi,r9d
  429c21:	lea    rbx,[rdi-0x1]
  429c25:	mov    r9d,edi
  429c28:	and    r9d,0x3
  429c2c:	cmp    rbx,0x3
  429c30:	jae    429c3e <flatcc_builder_create_table@@Base+0x9e>
  429c32:	xor    ebx,ebx
  429c34:	test   r9,r9
  429c37:	jne    429c9d <flatcc_builder_create_table@@Base+0xfd>
  429c39:	jmp    429cc6 <flatcc_builder_create_table@@Base+0x126>
  429c3e:	sub    rdi,r9
  429c41:	xor    ebx,ebx
  429c43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429c4d:	nop    DWORD PTR [rax]
  429c50:	movzx  eax,WORD PTR [r8+rbx*2]
  429c55:	mov    ebp,DWORD PTR [rax+rsi*1]
  429c58:	add    ebp,ecx
  429c5a:	sub    ebp,eax
  429c5c:	mov    DWORD PTR [rax+rsi*1],ebp
  429c5f:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  429c65:	mov    ebp,DWORD PTR [rax+rsi*1]
  429c68:	add    ebp,ecx
  429c6a:	sub    ebp,eax
  429c6c:	mov    DWORD PTR [rax+rsi*1],ebp
  429c6f:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  429c75:	mov    ebp,DWORD PTR [rax+rsi*1]
  429c78:	add    ebp,ecx
  429c7a:	sub    ebp,eax
  429c7c:	mov    DWORD PTR [rax+rsi*1],ebp
  429c7f:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  429c85:	mov    ebp,DWORD PTR [rax+rsi*1]
  429c88:	add    ebp,ecx
  429c8a:	sub    ebp,eax
  429c8c:	mov    DWORD PTR [rax+rsi*1],ebp
  429c8f:	add    rbx,0x4
  429c93:	cmp    rdi,rbx
  429c96:	jne    429c50 <flatcc_builder_create_table@@Base+0xb0>
  429c98:	test   r9,r9
  429c9b:	je     429cc6 <flatcc_builder_create_table@@Base+0x126>
  429c9d:	lea    rdi,[r8+rbx*2]
  429ca1:	xor    ebx,ebx
  429ca3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429cad:	nop    DWORD PTR [rax]
  429cb0:	movzx  eax,WORD PTR [rdi+rbx*2]
  429cb4:	mov    ebp,DWORD PTR [rax+rsi*1]
  429cb7:	add    ebp,ecx
  429cb9:	sub    ebp,eax
  429cbb:	mov    DWORD PTR [rax+rsi*1],ebp
  429cbe:	inc    rbx
  429cc1:	cmp    r9,rbx
  429cc4:	jne    429cb0 <flatcc_builder_create_table@@Base+0x110>
  429cc6:	mov    QWORD PTR [rsp+0x10],0x4
  429ccf:	lea    rax,[rsp+0xc]
  429cd4:	mov    QWORD PTR [rsp+0x20],rax
  429cd9:	mov    QWORD PTR [rsp+0x28],0x4
  429ce2:	mov    DWORD PTR [rsp+0x18],0x1
  429cea:	test   rdx,rdx
  429ced:	je     429d8e <flatcc_builder_create_table@@Base+0x1ee>
  429cf3:	lea    r8,[rdx+0x4]
  429cf7:	mov    QWORD PTR [rsp+0x10],r8
  429cfc:	mov    QWORD PTR [rsp+0x30],rsi
  429d01:	mov    QWORD PTR [rsp+0x38],rdx
  429d06:	mov    DWORD PTR [rsp+0x18],0x2
  429d0e:	mov    edx,0x2
  429d13:	test   r10d,r10d
  429d16:	je     429d3d <flatcc_builder_create_table@@Base+0x19d>
  429d18:	add    r8,r10
  429d1b:	mov    QWORD PTR [rsp+0x10],r8
  429d20:	mov    eax,edx
  429d22:	shl    rax,0x4
  429d26:	lea    rcx,[rip+0x20073]        # 449da0 <flatcc_builder_padding_base@@Base>
  429d2d:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  429d32:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  429d37:	inc    edx
  429d39:	mov    DWORD PTR [rsp+0x18],edx
  429d3d:	cmp    r8,0x11
  429d41:	setb   al
  429d44:	lea    rcx,[r8-0x10]
  429d48:	shr    rcx,0x20
  429d4c:	sete   cl
  429d4f:	test   r8d,r8d
  429d52:	jle    429da4 <flatcc_builder_create_table@@Base+0x204>
  429d54:	or     al,cl
  429d56:	je     429da4 <flatcc_builder_create_table@@Base+0x204>
  429d58:	mov    ebp,DWORD PTR [r14+0xf0]
  429d5f:	sub    ebp,r8d
  429d62:	mov    rdi,QWORD PTR [r14+0x38]
  429d66:	lea    rsi,[rsp+0x20]
  429d6b:	mov    ecx,ebp
  429d6d:	call   QWORD PTR [r14+0x48]
  429d71:	test   eax,eax
  429d73:	jne    429e01 <flatcc_builder_create_table@@Base+0x261>
  429d79:	mov    DWORD PTR [r14+0xf0],ebp
  429d80:	mov    eax,ebp
  429d82:	add    rsp,0xa0
  429d89:	pop    rbx
  429d8a:	pop    r14
  429d8c:	pop    rbp
  429d8d:	ret    
  429d8e:	mov    r8d,0x4
  429d94:	mov    edx,0x1
  429d99:	test   r10d,r10d
  429d9c:	jne    429d18 <flatcc_builder_create_table@@Base+0x178>
  429da2:	jmp    429d3d <flatcc_builder_create_table@@Base+0x19d>
  429da4:	lea    rdi,[rip+0x16de4]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  429dab:	lea    rsi,[rip+0x20230]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429db2:	lea    rcx,[rip+0x212a8]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  429db9:	mov    edx,0x287
  429dbe:	call   406100 <__assert_fail@plt>
  429dc3:	lea    rdi,[rip+0x2098e]        # 44a758 <flatcc_builder_padding_base@@Base+0x9b8>
  429dca:	lea    rsi,[rip+0x20211]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429dd1:	lea    rcx,[rip+0x20992]        # 44a76a <flatcc_builder_padding_base@@Base+0x9ca>
  429dd8:	mov    edx,0x4d5
  429ddd:	call   406100 <__assert_fail@plt>
  429de2:	lea    rdi,[rip+0x20a1d]        # 44a806 <flatcc_builder_padding_base@@Base+0xa66>
  429de9:	lea    rsi,[rip+0x201f2]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429df0:	lea    rcx,[rip+0x20973]        # 44a76a <flatcc_builder_padding_base@@Base+0x9ca>
  429df7:	mov    edx,0x4db
  429dfc:	call   406100 <__assert_fail@plt>
  429e01:	lea    rdi,[rip+0x16d87]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  429e08:	lea    rsi,[rip+0x201d3]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429e0f:	lea    rcx,[rip+0x2124b]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  429e16:	mov    edx,0x28b
  429e1b:	call   406100 <__assert_fail@plt>

0000000000429e20 <flatcc_builder_check_required_field@@Base>:
  429e20:	push   rax
  429e21:	mov    rax,QWORD PTR [rdi+0x30]
  429e25:	cmp    WORD PTR [rax+0xe],0x3
  429e2a:	jne    429e47 <flatcc_builder_check_required_field@@Base+0x27>
  429e2c:	xor    eax,eax
  429e2e:	cmp    WORD PTR [rdi+0x10],si
  429e32:	jbe    429e45 <flatcc_builder_check_required_field@@Base+0x25>
  429e34:	mov    rcx,QWORD PTR [rdi+0x8]
  429e38:	movzx  edx,si
  429e3b:	xor    eax,eax
  429e3d:	cmp    WORD PTR [rcx+rdx*2],0x0
  429e42:	setne  al
  429e45:	pop    rcx
  429e46:	ret    
  429e47:	lea    rdi,[rip+0x209c3]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  429e4e:	lea    rsi,[rip+0x2018d]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429e55:	lea    rcx,[rip+0x209e0]        # 44a83c <flatcc_builder_padding_base@@Base+0xa9c>
  429e5c:	mov    edx,0x4f8
  429e61:	call   406100 <__assert_fail@plt>
  429e66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429e70 <flatcc_builder_check_union_field@@Base>:
  429e70:	push   rax
  429e71:	mov    rax,QWORD PTR [rdi+0x30]
  429e75:	cmp    WORD PTR [rax+0xe],0x3
  429e7a:	jne    429ec4 <flatcc_builder_check_union_field@@Base+0x54>
  429e7c:	test   si,si
  429e7f:	je     429eae <flatcc_builder_check_union_field@@Base+0x3e>
  429e81:	cmp    WORD PTR [rdi+0x10],si
  429e85:	jbe    429eae <flatcc_builder_check_union_field@@Base+0x3e>
  429e87:	movzx  eax,si
  429e8a:	mov    rcx,QWORD PTR [rdi+0x8]
  429e8e:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  429e93:	test   rdx,rdx
  429e96:	je     429eb2 <flatcc_builder_check_union_field@@Base+0x42>
  429e98:	mov    rsi,QWORD PTR [rdi+0x18]
  429e9c:	cmp    BYTE PTR [rsi+rdx*1],0x0
  429ea0:	movzx  eax,WORD PTR [rcx+rax*2]
  429ea4:	je     429eb9 <flatcc_builder_check_union_field@@Base+0x49>
  429ea6:	test   ax,ax
  429ea9:	setne  al
  429eac:	jmp    429ebf <flatcc_builder_check_union_field@@Base+0x4f>
  429eae:	xor    eax,eax
  429eb0:	jmp    429ebf <flatcc_builder_check_union_field@@Base+0x4f>
  429eb2:	cmp    WORD PTR [rcx+rax*2],0x0
  429eb7:	jmp    429ebc <flatcc_builder_check_union_field@@Base+0x4c>
  429eb9:	test   ax,ax
  429ebc:	sete   al
  429ebf:	movzx  eax,al
  429ec2:	pop    rcx
  429ec3:	ret    
  429ec4:	lea    rdi,[rip+0x20946]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  429ecb:	lea    rsi,[rip+0x20110]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429ed2:	lea    rcx,[rip+0x209b6]        # 44a88f <flatcc_builder_padding_base@@Base+0xaef>
  429ed9:	mov    edx,0x4ff
  429ede:	call   406100 <__assert_fail@plt>
  429ee3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429eed:	nop    DWORD PTR [rax]

0000000000429ef0 <flatcc_builder_check_required@@Base>:
  429ef0:	push   rax
  429ef1:	mov    rax,QWORD PTR [rdi+0x30]
  429ef5:	cmp    WORD PTR [rax+0xe],0x3
  429efa:	jne    429f39 <flatcc_builder_check_required@@Base+0x49>
  429efc:	movzx  ecx,WORD PTR [rdi+0x10]
  429f00:	xor    eax,eax
  429f02:	cmp    ecx,edx
  429f04:	jl     429f33 <flatcc_builder_check_required@@Base+0x43>
  429f06:	mov    eax,0x1
  429f0b:	test   edx,edx
  429f0d:	jle    429f33 <flatcc_builder_check_required@@Base+0x43>
  429f0f:	mov    rcx,QWORD PTR [rdi+0x8]
  429f13:	mov    r8d,edx
  429f16:	xor    edi,edi
  429f18:	nop    DWORD PTR [rax+rax*1+0x0]
  429f20:	movzx  edx,WORD PTR [rsi+rdi*2]
  429f24:	cmp    WORD PTR [rcx+rdx*2],0x0
  429f29:	je     429f35 <flatcc_builder_check_required@@Base+0x45>
  429f2b:	inc    rdi
  429f2e:	cmp    r8,rdi
  429f31:	jne    429f20 <flatcc_builder_check_required@@Base+0x30>
  429f33:	pop    rcx
  429f34:	ret    
  429f35:	xor    eax,eax
  429f37:	pop    rcx
  429f38:	ret    
  429f39:	lea    rdi,[rip+0x208d1]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  429f40:	lea    rsi,[rip+0x2009b]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  429f47:	lea    rcx,[rip+0x20991]        # 44a8df <flatcc_builder_padding_base@@Base+0xb3f>
  429f4e:	mov    edx,0x511
  429f53:	call   406100 <__assert_fail@plt>
  429f58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429f60 <flatcc_builder_end_table@@Base>:
  429f60:	push   rbp
  429f61:	push   r15
  429f63:	push   r14
  429f65:	push   r12
  429f67:	push   rbx
  429f68:	sub    rsp,0x10
  429f6c:	mov    rax,QWORD PTR [rdi+0x30]
  429f70:	cmp    WORD PTR [rax+0xe],0x3
  429f75:	jne    42a0c5 <flatcc_builder_end_table@@Base+0x165>
  429f7b:	mov    rbx,rdi
  429f7e:	mov    rax,QWORD PTR [rdi+0x8]
  429f82:	mov    ecx,DWORD PTR [rdi+0x10]
  429f85:	lea    ecx,[rcx+rcx*1]
  429f88:	add    ecx,0x4
  429f8b:	mov    WORD PTR [rax-0x4],cx
  429f8f:	mov    edx,DWORD PTR [rdi+0x20]
  429f92:	add    edx,0x4
  429f95:	mov    WORD PTR [rax-0x2],dx
  429f99:	lea    r12,[rax-0x4]
  429f9d:	movzx  ebp,cx
  429fa0:	mov    eax,DWORD PTR [rdi+0x14]
  429fa3:	xor    eax,ebp
  429fa5:	imul   eax,eax,0x9e3779b1
  429fab:	movzx  ecx,dx
  429fae:	xor    ecx,eax
  429fb0:	imul   ecx,ecx,0x9e3779b1
  429fb6:	mov    DWORD PTR [rdi+0x14],ecx
  429fb9:	mov    rsi,r12
  429fbc:	mov    edx,ebp
  429fbe:	call   429800 <flatcc_builder_create_cached_vtable@@Base>
  429fc3:	test   eax,eax
  429fc5:	je     42a0b2 <flatcc_builder_end_table@@Base+0x152>
  429fcb:	mov    r14d,eax
  429fce:	xor    r15d,r15d
  429fd1:	mov    rdi,r12
  429fd4:	xor    esi,esi
  429fd6:	mov    rdx,rbp
  429fd9:	call   406110 <memset@plt>
  429fde:	mov    rax,QWORD PTR [rbx+0x30]
  429fe2:	mov    r8d,DWORD PTR [rax+0x14]
  429fe6:	add    r8,QWORD PTR [rbx+0x88]
  429fed:	mov    r9,QWORD PTR [rbx]
  429ff0:	mov    rsi,QWORD PTR [rbx+0x18]
  429ff4:	sub    r9,r8
  429ff7:	shr    r9,1
  429ffa:	mov    edx,DWORD PTR [rbx+0x20]
  429ffd:	movzx  ecx,WORD PTR [rbx+0xea]
  42a004:	mov    DWORD PTR [rsp],r14d
  42a008:	mov    rdi,rbx
  42a00b:	call   429ba0 <flatcc_builder_create_table@@Base>
  42a010:	test   eax,eax
  42a012:	je     42a0b5 <flatcc_builder_end_table@@Base+0x155>
  42a018:	mov    r14d,eax
  42a01b:	mov    rax,QWORD PTR [rbx+0x30]
  42a01f:	mov    ecx,DWORD PTR [rax+0x18]
  42a022:	mov    DWORD PTR [rbx+0x14],ecx
  42a025:	movzx  ecx,WORD PTR [rax+0x1c]
  42a029:	mov    WORD PTR [rbx+0x10],cx
  42a02d:	mov    ecx,DWORD PTR [rax+0x10]
  42a030:	add    rcx,QWORD PTR [rbx+0x58]
  42a034:	mov    QWORD PTR [rbx+0x8],rcx
  42a038:	mov    eax,DWORD PTR [rax+0x14]
  42a03b:	add    rax,QWORD PTR [rbx+0x88]
  42a042:	mov    QWORD PTR [rbx],rax
  42a045:	mov    rdi,QWORD PTR [rbx+0x18]
  42a049:	mov    edx,DWORD PTR [rbx+0x20]
  42a04c:	xor    esi,esi
  42a04e:	call   406110 <memset@plt>
  42a053:	mov    rax,QWORD PTR [rbx+0x30]
  42a057:	mov    ecx,DWORD PTR [rax+0x8]
  42a05a:	mov    DWORD PTR [rbx+0x20],ecx
  42a05d:	mov    ecx,DWORD PTR [rax]
  42a05f:	mov    DWORD PTR [rbx+0x28],ecx
  42a062:	mov    edx,DWORD PTR [rax+0x4]
  42a065:	mov    rsi,rcx
  42a068:	add    rsi,QWORD PTR [rbx+0x68]
  42a06c:	mov    QWORD PTR [rbx+0x18],rsi
  42a070:	mov    esi,DWORD PTR [rbx+0x70]
  42a073:	sub    esi,ecx
  42a075:	cmp    esi,edx
  42a077:	cmova  esi,edx
  42a07a:	mov    DWORD PTR [rbx+0x24],esi
  42a07d:	movzx  ecx,WORD PTR [rbx+0xea]
  42a084:	cmp    WORD PTR [rbx+0xe8],cx
  42a08b:	jae    42a094 <flatcc_builder_end_table@@Base+0x134>
  42a08d:	mov    WORD PTR [rbx+0xe8],cx
  42a094:	movzx  ecx,WORD PTR [rax+0xc]
  42a098:	mov    WORD PTR [rbx+0xea],cx
  42a09f:	add    rax,0xffffffffffffffdc
  42a0a3:	mov    QWORD PTR [rbx+0x30],rax
  42a0a7:	dec    DWORD PTR [rbx+0x104]
  42a0ad:	mov    r15d,r14d
  42a0b0:	jmp    42a0b5 <flatcc_builder_end_table@@Base+0x155>
  42a0b2:	xor    r15d,r15d
  42a0b5:	mov    eax,r15d
  42a0b8:	add    rsp,0x10
  42a0bc:	pop    rbx
  42a0bd:	pop    r12
  42a0bf:	pop    r14
  42a0c1:	pop    r15
  42a0c3:	pop    rbp
  42a0c4:	ret    
  42a0c5:	lea    rdi,[rip+0x20745]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  42a0cc:	lea    rsi,[rip+0x1ff0f]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a0d3:	lea    rcx,[rip+0x2085f]        # 44a939 <flatcc_builder_padding_base@@Base+0xb99>
  42a0da:	mov    edx,0x525
  42a0df:	call   406100 <__assert_fail@plt>
  42a0e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0ee:	xchg   ax,ax

000000000042a0f0 <flatcc_builder_create_vector@@Base>:
  42a0f0:	push   rbp
  42a0f1:	push   rbx
  42a0f2:	sub    rsp,0x98
  42a0f9:	cmp    rdx,r9
  42a0fc:	ja     42a226 <flatcc_builder_create_vector@@Base+0x136>
  42a102:	mov    rbx,rdi
  42a105:	cmp    r8w,0x4
  42a10a:	mov    eax,0x4
  42a10f:	cmova  eax,r8d
  42a113:	cmp    WORD PTR [rdi+0xe8],ax
  42a11a:	jae    42a123 <flatcc_builder_create_vector@@Base+0x33>
  42a11c:	mov    WORD PTR [rbx+0xe8],ax
  42a123:	imul   ecx,edx
  42a126:	mov    DWORD PTR [rsp+0x4],edx
  42a12a:	mov    ebp,DWORD PTR [rbx+0xf0]
  42a130:	mov    edx,ebp
  42a132:	sub    edx,ecx
  42a134:	movzx  eax,ax
  42a137:	dec    eax
  42a139:	and    eax,edx
  42a13b:	mov    QWORD PTR [rsp+0x8],0x4
  42a144:	lea    rdx,[rsp+0x4]
  42a149:	mov    QWORD PTR [rsp+0x18],rdx
  42a14e:	mov    QWORD PTR [rsp+0x20],0x4
  42a157:	mov    DWORD PTR [rsp+0x10],0x1
  42a15f:	test   ecx,ecx
  42a161:	je     42a1f6 <flatcc_builder_create_vector@@Base+0x106>
  42a167:	mov    ecx,ecx
  42a169:	lea    r8,[rcx+0x4]
  42a16d:	mov    QWORD PTR [rsp+0x8],r8
  42a172:	mov    QWORD PTR [rsp+0x28],rsi
  42a177:	mov    QWORD PTR [rsp+0x30],rcx
  42a17c:	mov    DWORD PTR [rsp+0x10],0x2
  42a184:	mov    edx,0x2
  42a189:	test   eax,eax
  42a18b:	je     42a1b4 <flatcc_builder_create_vector@@Base+0xc4>
  42a18d:	mov    eax,eax
  42a18f:	add    r8,rax
  42a192:	mov    QWORD PTR [rsp+0x8],r8
  42a197:	mov    ecx,edx
  42a199:	shl    rcx,0x4
  42a19d:	lea    rsi,[rip+0x1fbfc]        # 449da0 <flatcc_builder_padding_base@@Base>
  42a1a4:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  42a1a9:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  42a1ae:	inc    edx
  42a1b0:	mov    DWORD PTR [rsp+0x10],edx
  42a1b4:	cmp    r8,0x11
  42a1b8:	setb   al
  42a1bb:	lea    rcx,[r8-0x10]
  42a1bf:	shr    rcx,0x20
  42a1c3:	sete   cl
  42a1c6:	test   r8d,r8d
  42a1c9:	jle    42a207 <flatcc_builder_create_vector@@Base+0x117>
  42a1cb:	or     al,cl
  42a1cd:	je     42a207 <flatcc_builder_create_vector@@Base+0x117>
  42a1cf:	sub    ebp,r8d
  42a1d2:	mov    rdi,QWORD PTR [rbx+0x38]
  42a1d6:	lea    rsi,[rsp+0x18]
  42a1db:	mov    ecx,ebp
  42a1dd:	call   QWORD PTR [rbx+0x48]
  42a1e0:	test   eax,eax
  42a1e2:	jne    42a245 <flatcc_builder_create_vector@@Base+0x155>
  42a1e4:	mov    DWORD PTR [rbx+0xf0],ebp
  42a1ea:	mov    eax,ebp
  42a1ec:	add    rsp,0x98
  42a1f3:	pop    rbx
  42a1f4:	pop    rbp
  42a1f5:	ret    
  42a1f6:	mov    r8d,0x4
  42a1fc:	mov    edx,0x1
  42a201:	test   eax,eax
  42a203:	jne    42a18d <flatcc_builder_create_vector@@Base+0x9d>
  42a205:	jmp    42a1b4 <flatcc_builder_create_vector@@Base+0xc4>
  42a207:	lea    rdi,[rip+0x16981]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42a20e:	lea    rsi,[rip+0x1fdcd]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a215:	lea    rcx,[rip+0x20e45]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a21c:	mov    edx,0x287
  42a221:	call   406100 <__assert_fail@plt>
  42a226:	lea    rdi,[rip+0x2074e]        # 44a97b <flatcc_builder_padding_base@@Base+0xbdb>
  42a22d:	lea    rsi,[rip+0x1fdae]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a234:	lea    rcx,[rip+0x20753]        # 44a98e <flatcc_builder_padding_base@@Base+0xbee>
  42a23b:	mov    edx,0x555
  42a240:	call   406100 <__assert_fail@plt>
  42a245:	lea    rdi,[rip+0x16943]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42a24c:	lea    rsi,[rip+0x1fd8f]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a253:	lea    rcx,[rip+0x20e07]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a25a:	mov    edx,0x28b
  42a25f:	call   406100 <__assert_fail@plt>
  42a264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a26e:	xchg   ax,ax

000000000042a270 <flatcc_builder_end_vector@@Base>:
  42a270:	push   rbp
  42a271:	push   rbx
  42a272:	push   rax
  42a273:	mov    rax,QWORD PTR [rdi+0x30]
  42a277:	cmp    WORD PTR [rax+0xe],0x4
  42a27c:	jne    42a317 <flatcc_builder_end_vector@@Base+0xa7>
  42a282:	mov    rbx,rdi
  42a285:	mov    rsi,QWORD PTR [rdi+0x18]
  42a289:	mov    ecx,DWORD PTR [rax+0x10]
  42a28c:	mov    edx,DWORD PTR [rax+0x14]
  42a28f:	movzx  r8d,WORD PTR [rdi+0xea]
  42a297:	mov    r9d,DWORD PTR [rax+0x18]
  42a29b:	call   42a0f0 <flatcc_builder_create_vector@@Base>
  42a2a0:	mov    ebp,eax
  42a2a2:	test   eax,eax
  42a2a4:	je     42a30e <flatcc_builder_end_vector@@Base+0x9e>
  42a2a6:	mov    rdi,QWORD PTR [rbx+0x18]
  42a2aa:	mov    edx,DWORD PTR [rbx+0x20]
  42a2ad:	xor    esi,esi
  42a2af:	call   406110 <memset@plt>
  42a2b4:	mov    rax,QWORD PTR [rbx+0x30]
  42a2b8:	mov    ecx,DWORD PTR [rax+0x8]
  42a2bb:	mov    DWORD PTR [rbx+0x20],ecx
  42a2be:	mov    ecx,DWORD PTR [rax]
  42a2c0:	mov    DWORD PTR [rbx+0x28],ecx
  42a2c3:	mov    edx,DWORD PTR [rax+0x4]
  42a2c6:	mov    rsi,rcx
  42a2c9:	add    rsi,QWORD PTR [rbx+0x68]
  42a2cd:	mov    QWORD PTR [rbx+0x18],rsi
  42a2d1:	mov    esi,DWORD PTR [rbx+0x70]
  42a2d4:	sub    esi,ecx
  42a2d6:	cmp    esi,edx
  42a2d8:	cmova  esi,edx
  42a2db:	mov    DWORD PTR [rbx+0x24],esi
  42a2de:	movzx  ecx,WORD PTR [rbx+0xea]
  42a2e5:	cmp    WORD PTR [rbx+0xe8],cx
  42a2ec:	jae    42a2f5 <flatcc_builder_end_vector@@Base+0x85>
  42a2ee:	mov    WORD PTR [rbx+0xe8],cx
  42a2f5:	movzx  ecx,WORD PTR [rax+0xc]
  42a2f9:	mov    WORD PTR [rbx+0xea],cx
  42a300:	add    rax,0xffffffffffffffdc
  42a304:	mov    QWORD PTR [rbx+0x30],rax
  42a308:	dec    DWORD PTR [rbx+0x104]
  42a30e:	mov    eax,ebp
  42a310:	add    rsp,0x8
  42a314:	pop    rbx
  42a315:	pop    rbp
  42a316:	ret    
  42a317:	lea    rdi,[rip+0x20001]        # 44a31f <flatcc_builder_padding_base@@Base+0x57f>
  42a31e:	lea    rsi,[rip+0x1fcbd]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a325:	lea    rcx,[rip+0x206d8]        # 44aa04 <flatcc_builder_padding_base@@Base+0xc64>
  42a32c:	mov    edx,0x578
  42a331:	call   406100 <__assert_fail@plt>
  42a336:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a340 <flatcc_builder_vector_count@@Base>:
  42a340:	mov    rax,QWORD PTR [rdi+0x30]
  42a344:	mov    eax,DWORD PTR [rax+0x14]
  42a347:	ret    
  42a348:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a350 <flatcc_builder_vector_edit@@Base>:
  42a350:	mov    rax,QWORD PTR [rdi+0x18]
  42a354:	ret    
  42a355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a35f:	nop

000000000042a360 <flatcc_builder_create_offset_vector_direct@@Base>:
  42a360:	xor    ecx,ecx
  42a362:	jmp    42a370 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a364:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a36e:	xchg   ax,ax
  42a370:	push   r14
  42a372:	push   rbx
  42a373:	sub    rsp,0x98
  42a37a:	mov    r10,rdx
  42a37d:	xor    ebx,ebx
  42a37f:	test   r10d,0xc0000000
  42a386:	jne    42a4f9 <flatcc_builder_create_offset_vector_direct@@Base+0x199>
  42a38c:	mov    r14,rdi
  42a38f:	cmp    WORD PTR [rdi+0xe8],0x3
  42a397:	ja     42a3a3 <flatcc_builder_create_offset_vector_direct@@Base+0x43>
  42a399:	mov    WORD PTR [r14+0xe8],0x4
  42a3a3:	lea    r8d,[r10*4+0x0]
  42a3ab:	mov    DWORD PTR [rsp+0x4],r10d
  42a3b0:	mov    ebx,DWORD PTR [r14+0xf0]
  42a3b7:	mov    r9d,ebx
  42a3ba:	and    r9d,0x3
  42a3be:	mov    QWORD PTR [rsp+0x8],0x4
  42a3c7:	lea    rdx,[rsp+0x4]
  42a3cc:	mov    QWORD PTR [rsp+0x18],rdx
  42a3d1:	mov    QWORD PTR [rsp+0x20],0x4
  42a3da:	mov    DWORD PTR [rsp+0x10],0x1
  42a3e2:	test   r8d,r8d
  42a3e5:	je     42a506 <flatcc_builder_create_offset_vector_direct@@Base+0x1a6>
  42a3eb:	mov    edx,r8d
  42a3ee:	lea    r8,[rdx+0x4]
  42a3f2:	mov    QWORD PTR [rsp+0x8],r8
  42a3f7:	mov    QWORD PTR [rsp+0x28],rsi
  42a3fc:	mov    QWORD PTR [rsp+0x30],rdx
  42a401:	mov    DWORD PTR [rsp+0x10],0x2
  42a409:	mov    edx,0x2
  42a40e:	test   r9d,r9d
  42a411:	je     42a438 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  42a413:	add    r8,r9
  42a416:	mov    QWORD PTR [rsp+0x8],r8
  42a41b:	mov    edi,edx
  42a41d:	shl    rdi,0x4
  42a421:	lea    rax,[rip+0x1f978]        # 449da0 <flatcc_builder_padding_base@@Base>
  42a428:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  42a42d:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  42a432:	inc    edx
  42a434:	mov    DWORD PTR [rsp+0x10],edx
  42a438:	test   r10d,r10d
  42a43b:	je     42a4b5 <flatcc_builder_create_offset_vector_direct@@Base+0x155>
  42a43d:	mov    edi,r8d
  42a440:	sub    edi,ebx
  42a442:	add    edi,0xfffffffc
  42a445:	mov    r9d,r10d
  42a448:	xor    ebx,ebx
  42a44a:	jmp    42a45b <flatcc_builder_create_offset_vector_direct@@Base+0xfb>
  42a44c:	nop    DWORD PTR [rax+0x0]
  42a450:	inc    rbx
  42a453:	add    edi,0xfffffffc
  42a456:	cmp    r9,rbx
  42a459:	je     42a4ae <flatcc_builder_create_offset_vector_direct@@Base+0x14e>
  42a45b:	mov    eax,DWORD PTR [rsi+rbx*4]
  42a45e:	test   eax,eax
  42a460:	je     42a480 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
  42a462:	add    eax,edi
  42a464:	mov    DWORD PTR [rsi+rbx*4],eax
  42a467:	test   rcx,rcx
  42a46a:	je     42a450 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  42a46c:	cmp    BYTE PTR [rcx+rbx*1],0x0
  42a470:	jne    42a450 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  42a472:	jmp    42a51f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  42a477:	nop    WORD PTR [rax+rax*1+0x0]
  42a480:	test   rcx,rcx
  42a483:	je     42a53e <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  42a489:	cmp    BYTE PTR [rcx+rbx*1],0x0
  42a48d:	je     42a450 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  42a48f:	lea    rdi,[rip+0x20d91]        # 44b227 <flatcc_builder_padding_base@@Base+0x1487>
  42a496:	lea    rsi,[rip+0x1fb45]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a49d:	lea    rcx,[rip+0x20d00]        # 44b1a4 <flatcc_builder_padding_base@@Base+0x1404>
  42a4a4:	mov    edx,0x5b5
  42a4a9:	call   406100 <__assert_fail@plt>
  42a4ae:	mov    ebx,DWORD PTR [r14+0xf0]
  42a4b5:	cmp    r8,0x11
  42a4b9:	setb   al
  42a4bc:	lea    rcx,[r8-0x10]
  42a4c0:	shr    rcx,0x20
  42a4c4:	sete   cl
  42a4c7:	test   r8d,r8d
  42a4ca:	jle    42a55d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  42a4d0:	or     al,cl
  42a4d2:	je     42a55d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  42a4d8:	sub    ebx,r8d
  42a4db:	mov    rdi,QWORD PTR [r14+0x38]
  42a4df:	lea    rsi,[rsp+0x18]
  42a4e4:	mov    ecx,ebx
  42a4e6:	call   QWORD PTR [r14+0x48]
  42a4ea:	test   eax,eax
  42a4ec:	jne    42a57c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  42a4f2:	mov    DWORD PTR [r14+0xf0],ebx
  42a4f9:	mov    eax,ebx
  42a4fb:	add    rsp,0x98
  42a502:	pop    rbx
  42a503:	pop    r14
  42a505:	ret    
  42a506:	mov    r8d,0x4
  42a50c:	mov    edx,0x1
  42a511:	test   r9d,r9d
  42a514:	jne    42a413 <flatcc_builder_create_offset_vector_direct@@Base+0xb3>
  42a51a:	jmp    42a438 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  42a51f:	lea    rdi,[rip+0x20c70]        # 44b196 <flatcc_builder_padding_base@@Base+0x13f6>
  42a526:	lea    rsi,[rip+0x1fab5]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a52d:	lea    rcx,[rip+0x20c70]        # 44b1a4 <flatcc_builder_padding_base@@Base+0x1404>
  42a534:	mov    edx,0x5b1
  42a539:	call   406100 <__assert_fail@plt>
  42a53e:	lea    rdi,[rip+0x1664a]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42a545:	lea    rsi,[rip+0x1fa96]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a54c:	lea    rcx,[rip+0x20c51]        # 44b1a4 <flatcc_builder_padding_base@@Base+0x1404>
  42a553:	mov    edx,0x5b7
  42a558:	call   406100 <__assert_fail@plt>
  42a55d:	lea    rdi,[rip+0x1662b]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42a564:	lea    rsi,[rip+0x1fa77]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a56b:	lea    rcx,[rip+0x20aef]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a572:	mov    edx,0x287
  42a577:	call   406100 <__assert_fail@plt>
  42a57c:	lea    rdi,[rip+0x1660c]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42a583:	lea    rsi,[rip+0x1fa58]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a58a:	lea    rcx,[rip+0x20ad0]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a591:	mov    edx,0x28b
  42a596:	call   406100 <__assert_fail@plt>
  42a59b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a5a0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  42a5a0:	push   rbp
  42a5a1:	push   rbx
  42a5a2:	push   rax
  42a5a3:	mov    rax,QWORD PTR [rdi+0x30]
  42a5a7:	cmp    WORD PTR [rax+0xe],0x5
  42a5ac:	jne    42a63b <flatcc_builder_end_offset_vector_for_unions@@Base+0x9b>
  42a5b2:	mov    rcx,rsi
  42a5b5:	mov    rbx,rdi
  42a5b8:	mov    rsi,QWORD PTR [rdi+0x18]
  42a5bc:	mov    edx,DWORD PTR [rax+0x14]
  42a5bf:	call   42a370 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a5c4:	mov    ebp,eax
  42a5c6:	test   eax,eax
  42a5c8:	je     42a632 <flatcc_builder_end_offset_vector_for_unions@@Base+0x92>
  42a5ca:	mov    rdi,QWORD PTR [rbx+0x18]
  42a5ce:	mov    edx,DWORD PTR [rbx+0x20]
  42a5d1:	xor    esi,esi
  42a5d3:	call   406110 <memset@plt>
  42a5d8:	mov    rax,QWORD PTR [rbx+0x30]
  42a5dc:	mov    ecx,DWORD PTR [rax+0x8]
  42a5df:	mov    DWORD PTR [rbx+0x20],ecx
  42a5e2:	mov    ecx,DWORD PTR [rax]
  42a5e4:	mov    DWORD PTR [rbx+0x28],ecx
  42a5e7:	mov    edx,DWORD PTR [rax+0x4]
  42a5ea:	mov    rsi,rcx
  42a5ed:	add    rsi,QWORD PTR [rbx+0x68]
  42a5f1:	mov    QWORD PTR [rbx+0x18],rsi
  42a5f5:	mov    esi,DWORD PTR [rbx+0x70]
  42a5f8:	sub    esi,ecx
  42a5fa:	cmp    esi,edx
  42a5fc:	cmova  esi,edx
  42a5ff:	mov    DWORD PTR [rbx+0x24],esi
  42a602:	movzx  ecx,WORD PTR [rbx+0xea]
  42a609:	cmp    WORD PTR [rbx+0xe8],cx
  42a610:	jae    42a619 <flatcc_builder_end_offset_vector_for_unions@@Base+0x79>
  42a612:	mov    WORD PTR [rbx+0xe8],cx
  42a619:	movzx  ecx,WORD PTR [rax+0xc]
  42a61d:	mov    WORD PTR [rbx+0xea],cx
  42a624:	add    rax,0xffffffffffffffdc
  42a628:	mov    QWORD PTR [rbx+0x30],rax
  42a62c:	dec    DWORD PTR [rbx+0x104]
  42a632:	mov    eax,ebp
  42a634:	add    rsp,0x8
  42a638:	pop    rbx
  42a639:	pop    rbp
  42a63a:	ret    
  42a63b:	lea    rdi,[rip+0x1fdd6]        # 44a418 <flatcc_builder_padding_base@@Base+0x678>
  42a642:	lea    rsi,[rip+0x1f999]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a649:	lea    rcx,[rip+0x20441]        # 44aa91 <flatcc_builder_padding_base@@Base+0xcf1>
  42a650:	mov    edx,0x5d5
  42a655:	call   406100 <__assert_fail@plt>
  42a65a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a660 <flatcc_builder_offset_vector_edit@@Base>:
  42a660:	mov    rax,QWORD PTR [rdi+0x18]
  42a664:	ret    
  42a665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a66f:	nop

000000000042a670 <flatcc_builder_offset_vector_count@@Base>:
  42a670:	mov    rax,QWORD PTR [rdi+0x30]
  42a674:	mov    eax,DWORD PTR [rax+0x14]
  42a677:	ret    
  42a678:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a680 <flatcc_builder_table_add_union@@Base>:
  42a680:	push   rbp
  42a681:	push   r15
  42a683:	push   r14
  42a685:	push   rbx
  42a686:	push   rax
  42a687:	mov    rax,QWORD PTR [rdi+0x30]
  42a68b:	cmp    WORD PTR [rax+0xe],0x3
  42a690:	jne    42a6ee <flatcc_builder_table_add_union@@Base+0x6e>
  42a692:	mov    r14,rdx
  42a695:	mov    ebp,esi
  42a697:	mov    r15,rdi
  42a69a:	mov    rbx,rdx
  42a69d:	shr    rbx,0x20
  42a6a1:	test   r14b,r14b
  42a6a4:	jne    42a6aa <flatcc_builder_table_add_union@@Base+0x2a>
  42a6a6:	test   ebx,ebx
  42a6a8:	jne    42a70d <flatcc_builder_table_add_union@@Base+0x8d>
  42a6aa:	test   ebx,ebx
  42a6ac:	je     42a6c3 <flatcc_builder_table_add_union@@Base+0x43>
  42a6ae:	mov    rdi,r15
  42a6b1:	mov    esi,ebp
  42a6b3:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  42a6b8:	test   rax,rax
  42a6bb:	je     42a74b <flatcc_builder_table_add_union@@Base+0xcb>
  42a6c1:	mov    DWORD PTR [rax],ebx
  42a6c3:	dec    ebp
  42a6c5:	mov    edx,0x1
  42a6ca:	mov    rdi,r15
  42a6cd:	mov    esi,ebp
  42a6cf:	mov    ecx,0x1
  42a6d4:	call   42a8d0 <flatcc_builder_table_add@@Base>
  42a6d9:	test   rax,rax
  42a6dc:	je     42a72c <flatcc_builder_table_add_union@@Base+0xac>
  42a6de:	mov    BYTE PTR [rax],r14b
  42a6e1:	xor    eax,eax
  42a6e3:	add    rsp,0x8
  42a6e7:	pop    rbx
  42a6e8:	pop    r14
  42a6ea:	pop    r15
  42a6ec:	pop    rbp
  42a6ed:	ret    
  42a6ee:	lea    rdi,[rip+0x2011c]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  42a6f5:	lea    rsi,[rip+0x1f8e6]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a6fc:	lea    rcx,[rip+0x20400]        # 44ab03 <flatcc_builder_padding_base@@Base+0xd63>
  42a703:	mov    edx,0x5ee
  42a708:	call   406100 <__assert_fail@plt>
  42a70d:	lea    rdi,[rip+0x20447]        # 44ab5b <flatcc_builder_padding_base@@Base+0xdbb>
  42a714:	lea    rsi,[rip+0x1f8c7]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a71b:	lea    rcx,[rip+0x203e1]        # 44ab03 <flatcc_builder_padding_base@@Base+0xd63>
  42a722:	mov    edx,0x5ef
  42a727:	call   406100 <__assert_fail@plt>
  42a72c:	lea    rdi,[rip+0x20454]        # 44ab87 <flatcc_builder_padding_base@@Base+0xde7>
  42a733:	lea    rsi,[rip+0x1f8a8]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a73a:	lea    rcx,[rip+0x203c2]        # 44ab03 <flatcc_builder_padding_base@@Base+0xd63>
  42a741:	mov    edx,0x5f6
  42a746:	call   406100 <__assert_fail@plt>
  42a74b:	lea    rdi,[rip+0x2042b]        # 44ab7d <flatcc_builder_padding_base@@Base+0xddd>
  42a752:	lea    rsi,[rip+0x1f889]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a759:	lea    rcx,[rip+0x203a3]        # 44ab03 <flatcc_builder_padding_base@@Base+0xd63>
  42a760:	mov    edx,0x5f2
  42a765:	call   406100 <__assert_fail@plt>
  42a76a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a770 <flatcc_builder_table_add_offset@@Base>:
  42a770:	push   rbp
  42a771:	push   r15
  42a773:	push   r14
  42a775:	push   rbx
  42a776:	push   rax
  42a777:	mov    rax,QWORD PTR [rdi+0x30]
  42a77b:	cmp    WORD PTR [rax+0xe],0x3
  42a780:	jne    42a86e <flatcc_builder_table_add_offset@@Base+0xfe>
  42a786:	mov    r14d,esi
  42a789:	cmp    esi,0x7ffd
  42a78f:	jae    42a88d <flatcc_builder_table_add_offset@@Base+0x11d>
  42a795:	mov    rbx,rdi
  42a798:	mov    rax,QWORD PTR [rdi+0x8]
  42a79c:	movsxd rcx,r14d
  42a79f:	cmp    WORD PTR [rax+rcx*2],0x0
  42a7a4:	jne    42a8ac <flatcc_builder_table_add_offset@@Base+0x13c>
  42a7aa:	mov    ecx,DWORD PTR [rbx+0x14]
  42a7ad:	xor    ecx,r14d
  42a7b0:	imul   ecx,ecx,0x9e3779b1
  42a7b6:	xor    ecx,0x4
  42a7b9:	imul   ecx,ecx,0x9e3779b1
  42a7bf:	mov    DWORD PTR [rbx+0x14],ecx
  42a7c2:	mov    ebp,DWORD PTR [rbx+0x20]
  42a7c5:	mov    ecx,DWORD PTR [rbx+0x24]
  42a7c8:	add    ebp,0x3
  42a7cb:	and    ebp,0xfffffffc
  42a7ce:	lea    r15,[rbp+0x4]
  42a7d2:	mov    DWORD PTR [rbx+0x20],r15d
  42a7d6:	cmp    ecx,r15d
  42a7d9:	jae    42a838 <flatcc_builder_table_add_offset@@Base+0xc8>
  42a7db:	mov    eax,r15d
  42a7de:	and    eax,0xfffffffc
  42a7e1:	lea    rsi,[rbx+0x68]
  42a7e5:	mov    rdi,QWORD PTR [rbx+0x40]
  42a7e9:	mov    edx,DWORD PTR [rbx+0x28]
  42a7ec:	add    rdx,rax
  42a7ef:	mov    ecx,0x1
  42a7f4:	mov    r8d,0x1
  42a7fa:	call   QWORD PTR [rbx+0x50]
  42a7fd:	test   eax,eax
  42a7ff:	je     42a805 <flatcc_builder_table_add_offset@@Base+0x95>
  42a801:	xor    ebp,ebp
  42a803:	jmp    42a860 <flatcc_builder_table_add_offset@@Base+0xf0>
  42a805:	mov    eax,DWORD PTR [rbx+0x28]
  42a808:	mov    rcx,rax
  42a80b:	add    rcx,QWORD PTR [rbx+0x68]
  42a80f:	mov    QWORD PTR [rbx+0x18],rcx
  42a813:	mov    ecx,DWORD PTR [rbx+0x70]
  42a816:	sub    ecx,eax
  42a818:	cmp    ecx,0xfffc
  42a81e:	mov    eax,0xfffc
  42a823:	cmovb  eax,ecx
  42a826:	mov    DWORD PTR [rbx+0x24],eax
  42a829:	mov    rax,QWORD PTR [rbx+0x30]
  42a82d:	mov    DWORD PTR [rax+0x4],0xfffc
  42a834:	mov    rax,QWORD PTR [rbx+0x8]
  42a838:	movzx  ecx,r14w
  42a83c:	mov    WORD PTR [rax+rcx*2],r15w
  42a841:	cmp    WORD PTR [rbx+0x10],cx
  42a845:	ja     42a84f <flatcc_builder_table_add_offset@@Base+0xdf>
  42a847:	inc    r14d
  42a84a:	mov    WORD PTR [rbx+0x10],r14w
  42a84f:	mov    rax,QWORD PTR [rbx]
  42a852:	lea    rcx,[rax+0x2]
  42a856:	mov    QWORD PTR [rbx],rcx
  42a859:	mov    WORD PTR [rax],bp
  42a85c:	add    rbp,QWORD PTR [rbx+0x18]
  42a860:	mov    rax,rbp
  42a863:	add    rsp,0x8
  42a867:	pop    rbx
  42a868:	pop    r14
  42a86a:	pop    r15
  42a86c:	pop    rbp
  42a86d:	ret    
  42a86e:	lea    rdi,[rip+0x1ff9c]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  42a875:	lea    rsi,[rip+0x1f766]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a87c:	lea    rcx,[rip+0x20682]        # 44af05 <flatcc_builder_padding_base@@Base+0x1165>
  42a883:	mov    edx,0x713
  42a888:	call   406100 <__assert_fail@plt>
  42a88d:	lea    rdi,[rip+0x205f1]        # 44ae85 <flatcc_builder_padding_base@@Base+0x10e5>
  42a894:	lea    rsi,[rip+0x1f747]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a89b:	lea    rcx,[rip+0x20663]        # 44af05 <flatcc_builder_padding_base@@Base+0x1165>
  42a8a2:	mov    edx,0x714
  42a8a7:	call   406100 <__assert_fail@plt>
  42a8ac:	lea    rdi,[rip+0x162dc]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42a8b3:	lea    rsi,[rip+0x1f728]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a8ba:	lea    rcx,[rip+0x20644]        # 44af05 <flatcc_builder_padding_base@@Base+0x1165>
  42a8c1:	mov    edx,0x71b
  42a8c6:	call   406100 <__assert_fail@plt>
  42a8cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a8d0 <flatcc_builder_table_add@@Base>:
  42a8d0:	push   rbp
  42a8d1:	push   r14
  42a8d3:	push   rbx
  42a8d4:	mov    rax,QWORD PTR [rdi+0x30]
  42a8d8:	cmp    WORD PTR [rax+0xe],0x3
  42a8dd:	jne    42a9c8 <flatcc_builder_table_add@@Base+0xf8>
  42a8e3:	mov    r14d,esi
  42a8e6:	cmp    esi,0x7ffd
  42a8ec:	jae    42a9e7 <flatcc_builder_table_add@@Base+0x117>
  42a8f2:	mov    rbx,rdi
  42a8f5:	cmp    WORD PTR [rdi+0xea],cx
  42a8fc:	jae    42a905 <flatcc_builder_table_add@@Base+0x35>
  42a8fe:	mov    WORD PTR [rbx+0xea],cx
  42a905:	mov    rsi,QWORD PTR [rbx+0x8]
  42a909:	movsxd rax,r14d
  42a90c:	cmp    WORD PTR [rsi+rax*2],0x0
  42a911:	jne    42aa06 <flatcc_builder_table_add@@Base+0x136>
  42a917:	mov    eax,DWORD PTR [rbx+0x14]
  42a91a:	xor    eax,r14d
  42a91d:	imul   eax,eax,0x9e3779b1
  42a923:	xor    eax,edx
  42a925:	imul   eax,eax,0x9e3779b1
  42a92b:	mov    DWORD PTR [rbx+0x14],eax
  42a92e:	mov    eax,DWORD PTR [rbx+0x20]
  42a931:	movzx  ebp,cx
  42a934:	lea    eax,[rax+rbp*1]
  42a937:	add    eax,0xffffffff
  42a93a:	neg    ebp
  42a93c:	and    ebp,eax
  42a93e:	add    edx,ebp
  42a940:	mov    DWORD PTR [rbx+0x20],edx
  42a943:	cmp    edx,DWORD PTR [rbx+0x24]
  42a946:	jb     42a9a4 <flatcc_builder_table_add@@Base+0xd4>
  42a948:	inc    edx
  42a94a:	lea    rsi,[rbx+0x68]
  42a94e:	mov    rdi,QWORD PTR [rbx+0x40]
  42a952:	mov    eax,DWORD PTR [rbx+0x28]
  42a955:	add    rax,rdx
  42a958:	mov    rdx,rax
  42a95b:	mov    ecx,0x1
  42a960:	mov    r8d,0x1
  42a966:	call   QWORD PTR [rbx+0x50]
  42a969:	test   eax,eax
  42a96b:	je     42a971 <flatcc_builder_table_add@@Base+0xa1>
  42a96d:	xor    eax,eax
  42a96f:	jmp    42a9c3 <flatcc_builder_table_add@@Base+0xf3>
  42a971:	mov    eax,DWORD PTR [rbx+0x28]
  42a974:	mov    rcx,rax
  42a977:	add    rcx,QWORD PTR [rbx+0x68]
  42a97b:	mov    QWORD PTR [rbx+0x18],rcx
  42a97f:	mov    ecx,DWORD PTR [rbx+0x70]
  42a982:	sub    ecx,eax
  42a984:	cmp    ecx,0xfffc
  42a98a:	mov    eax,0xfffc
  42a98f:	cmovb  eax,ecx
  42a992:	mov    DWORD PTR [rbx+0x24],eax
  42a995:	mov    rax,QWORD PTR [rbx+0x30]
  42a999:	mov    DWORD PTR [rax+0x4],0xfffc
  42a9a0:	mov    rsi,QWORD PTR [rbx+0x8]
  42a9a4:	mov    eax,ebp
  42a9a6:	add    ebp,0x4
  42a9a9:	movzx  ecx,r14w
  42a9ad:	mov    WORD PTR [rsi+rcx*2],bp
  42a9b1:	cmp    WORD PTR [rbx+0x10],cx
  42a9b5:	ja     42a9bf <flatcc_builder_table_add@@Base+0xef>
  42a9b7:	inc    r14d
  42a9ba:	mov    WORD PTR [rbx+0x10],r14w
  42a9bf:	add    rax,QWORD PTR [rbx+0x18]
  42a9c3:	pop    rbx
  42a9c4:	pop    r14
  42a9c6:	pop    rbp
  42a9c7:	ret    
  42a9c8:	lea    rdi,[rip+0x1fe42]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  42a9cf:	lea    rsi,[rip+0x1f60c]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a9d6:	lea    rcx,[rip+0x2045e]        # 44ae3b <flatcc_builder_padding_base@@Base+0x109b>
  42a9dd:	mov    edx,0x6ed
  42a9e2:	call   406100 <__assert_fail@plt>
  42a9e7:	lea    rdi,[rip+0x20497]        # 44ae85 <flatcc_builder_padding_base@@Base+0x10e5>
  42a9ee:	lea    rsi,[rip+0x1f5ed]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42a9f5:	lea    rcx,[rip+0x2043f]        # 44ae3b <flatcc_builder_padding_base@@Base+0x109b>
  42a9fc:	mov    edx,0x6ee
  42aa01:	call   406100 <__assert_fail@plt>
  42aa06:	lea    rdi,[rip+0x16182]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42aa0d:	lea    rsi,[rip+0x1f5ce]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42aa14:	lea    rcx,[rip+0x20420]        # 44ae3b <flatcc_builder_padding_base@@Base+0x109b>
  42aa1b:	mov    edx,0x6f8
  42aa20:	call   406100 <__assert_fail@plt>
  42aa25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa2f:	nop

000000000042aa30 <flatcc_builder_table_add_union_vector@@Base>:
  42aa30:	push   r15
  42aa32:	push   r14
  42aa34:	push   r12
  42aa36:	push   rbx
  42aa37:	push   rax
  42aa38:	mov    rax,QWORD PTR [rdi+0x30]
  42aa3c:	cmp    WORD PTR [rax+0xe],0x3
  42aa41:	jne    42aa97 <flatcc_builder_table_add_union_vector@@Base+0x67>
  42aa43:	mov    rbx,rdx
  42aa46:	mov    r12,rdx
  42aa49:	shr    r12,0x20
  42aa4d:	test   ebx,ebx
  42aa4f:	setne  al
  42aa52:	test   r12d,r12d
  42aa55:	sete   cl
  42aa58:	xor    cl,al
  42aa5a:	je     42aab6 <flatcc_builder_table_add_union_vector@@Base+0x86>
  42aa5c:	test   ebx,ebx
  42aa5e:	je     42aa89 <flatcc_builder_table_add_union_vector@@Base+0x59>
  42aa60:	mov    r14d,esi
  42aa63:	mov    r15,rdi
  42aa66:	lea    esi,[r14-0x1]
  42aa6a:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  42aa6f:	test   rax,rax
  42aa72:	je     42aad5 <flatcc_builder_table_add_union_vector@@Base+0xa5>
  42aa74:	mov    DWORD PTR [rax],ebx
  42aa76:	mov    rdi,r15
  42aa79:	mov    esi,r14d
  42aa7c:	call   42a770 <flatcc_builder_table_add_offset@@Base>
  42aa81:	test   rax,rax
  42aa84:	je     42aaf4 <flatcc_builder_table_add_union_vector@@Base+0xc4>
  42aa86:	mov    DWORD PTR [rax],r12d
  42aa89:	xor    eax,eax
  42aa8b:	add    rsp,0x8
  42aa8f:	pop    rbx
  42aa90:	pop    r12
  42aa92:	pop    r14
  42aa94:	pop    r15
  42aa96:	ret    
  42aa97:	lea    rdi,[rip+0x1fd73]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  42aa9e:	lea    rsi,[rip+0x1f53d]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42aaa5:	lea    rcx,[rip+0x200e7]        # 44ab93 <flatcc_builder_padding_base@@Base+0xdf3>
  42aaac:	mov    edx,0x600
  42aab1:	call   406100 <__assert_fail@plt>
  42aab6:	lea    rdi,[rip+0x20139]        # 44abf6 <flatcc_builder_padding_base@@Base+0xe56>
  42aabd:	lea    rsi,[rip+0x1f51e]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42aac4:	lea    rcx,[rip+0x200c8]        # 44ab93 <flatcc_builder_padding_base@@Base+0xdf3>
  42aacb:	mov    edx,0x601
  42aad0:	call   406100 <__assert_fail@plt>
  42aad5:	lea    rdi,[rip+0x200a1]        # 44ab7d <flatcc_builder_padding_base@@Base+0xddd>
  42aadc:	lea    rsi,[rip+0x1f4ff]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42aae3:	lea    rcx,[rip+0x200a9]        # 44ab93 <flatcc_builder_padding_base@@Base+0xdf3>
  42aaea:	mov    edx,0x604
  42aaef:	call   406100 <__assert_fail@plt>
  42aaf4:	lea    rdi,[rip+0x20082]        # 44ab7d <flatcc_builder_padding_base@@Base+0xddd>
  42aafb:	lea    rsi,[rip+0x1f4e0]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42ab02:	lea    rcx,[rip+0x2008a]        # 44ab93 <flatcc_builder_padding_base@@Base+0xdf3>
  42ab09:	mov    edx,0x608
  42ab0e:	call   406100 <__assert_fail@plt>
  42ab13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab1d:	nop    DWORD PTR [rax]

000000000042ab20 <flatcc_builder_create_union_vector@@Base>:
  42ab20:	push   r15
  42ab22:	push   r14
  42ab24:	push   r13
  42ab26:	push   r12
  42ab28:	push   rbx
  42ab29:	mov    r14,rdx
  42ab2c:	mov    r15,rsi
  42ab2f:	mov    rbx,rdi
  42ab32:	mov    esi,0x4
  42ab37:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  42ab3c:	test   eax,eax
  42ab3e:	je     42ab50 <flatcc_builder_create_union_vector@@Base+0x30>
  42ab40:	xor    r14d,r14d
  42ab43:	mov    rax,r14
  42ab46:	pop    rbx
  42ab47:	pop    r12
  42ab49:	pop    r13
  42ab4b:	pop    r14
  42ab4d:	pop    r15
  42ab4f:	ret    
  42ab50:	mov    rax,QWORD PTR [rbx+0x30]
  42ab54:	mov    DWORD PTR [rax+0x10],0x4
  42ab5b:	mov    rax,QWORD PTR [rbx+0x30]
  42ab5f:	mov    DWORD PTR [rax+0x14],0x0
  42ab66:	mov    rax,QWORD PTR [rbx+0x30]
  42ab6a:	mov    WORD PTR [rax+0xe],0x5
  42ab70:	mov    ecx,DWORD PTR [rbx+0x28]
  42ab73:	mov    edx,DWORD PTR [rbx+0x70]
  42ab76:	sub    edx,ecx
  42ab78:	add    rcx,QWORD PTR [rbx+0x68]
  42ab7c:	mov    QWORD PTR [rbx+0x18],rcx
  42ab80:	cmp    edx,0xfffffffc
  42ab83:	mov    ecx,0xfffffffc
  42ab88:	cmovb  ecx,edx
  42ab8b:	mov    DWORD PTR [rbx+0x24],ecx
  42ab8e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42ab95:	mov    ecx,DWORD PTR [rax+0x14]
  42ab98:	add    ecx,r14d
  42ab9b:	jb     42ae08 <flatcc_builder_create_union_vector@@Base+0x2e8>
  42aba1:	cmp    ecx,0x40000000
  42aba7:	jae    42ae08 <flatcc_builder_create_union_vector@@Base+0x2e8>
  42abad:	mov    DWORD PTR [rax+0x14],ecx
  42abb0:	mov    r12d,DWORD PTR [rbx+0x20]
  42abb4:	mov    eax,DWORD PTR [rbx+0x24]
  42abb7:	lea    ecx,[r12+r14*4]
  42abbb:	mov    DWORD PTR [rbx+0x20],ecx
  42abbe:	cmp    ecx,eax
  42abc0:	jae    42abd0 <flatcc_builder_create_union_vector@@Base+0xb0>
  42abc2:	mov    rsi,QWORD PTR [rbx+0x18]
  42abc6:	add    r12,rsi
  42abc9:	jne    42ac2b <flatcc_builder_create_union_vector@@Base+0x10b>
  42abcb:	jmp    42ab40 <flatcc_builder_create_union_vector@@Base+0x20>
  42abd0:	inc    ecx
  42abd2:	lea    rsi,[rbx+0x68]
  42abd6:	mov    rdi,QWORD PTR [rbx+0x40]
  42abda:	mov    edx,DWORD PTR [rbx+0x28]
  42abdd:	add    rdx,rcx
  42abe0:	mov    ecx,0x1
  42abe5:	mov    r8d,0x1
  42abeb:	call   QWORD PTR [rbx+0x50]
  42abee:	test   eax,eax
  42abf0:	jne    42ab40 <flatcc_builder_create_union_vector@@Base+0x20>
  42abf6:	mov    eax,DWORD PTR [rbx+0x28]
  42abf9:	mov    rsi,rax
  42abfc:	add    rsi,QWORD PTR [rbx+0x68]
  42ac00:	mov    QWORD PTR [rbx+0x18],rsi
  42ac04:	mov    ecx,DWORD PTR [rbx+0x70]
  42ac07:	sub    ecx,eax
  42ac09:	cmp    ecx,0xfffffffc
  42ac0c:	mov    eax,0xfffffffc
  42ac11:	cmovb  eax,ecx
  42ac14:	mov    DWORD PTR [rbx+0x24],eax
  42ac17:	mov    rcx,QWORD PTR [rbx+0x30]
  42ac1b:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42ac22:	add    r12,rsi
  42ac25:	je     42ab40 <flatcc_builder_create_union_vector@@Base+0x20>
  42ac2b:	mov    r13d,DWORD PTR [rbx+0x20]
  42ac2f:	lea    ecx,[r14+r13*1]
  42ac33:	mov    DWORD PTR [rbx+0x20],ecx
  42ac36:	cmp    ecx,eax
  42ac38:	jb     42ac8c <flatcc_builder_create_union_vector@@Base+0x16c>
  42ac3a:	inc    ecx
  42ac3c:	lea    rsi,[rbx+0x68]
  42ac40:	mov    rdi,QWORD PTR [rbx+0x40]
  42ac44:	mov    edx,DWORD PTR [rbx+0x28]
  42ac47:	add    rdx,rcx
  42ac4a:	mov    ecx,0x1
  42ac4f:	mov    r8d,0x1
  42ac55:	call   QWORD PTR [rbx+0x50]
  42ac58:	test   eax,eax
  42ac5a:	jne    42ab40 <flatcc_builder_create_union_vector@@Base+0x20>
  42ac60:	mov    eax,DWORD PTR [rbx+0x28]
  42ac63:	mov    rsi,rax
  42ac66:	add    rsi,QWORD PTR [rbx+0x68]
  42ac6a:	mov    QWORD PTR [rbx+0x18],rsi
  42ac6e:	mov    ecx,DWORD PTR [rbx+0x70]
  42ac71:	sub    ecx,eax
  42ac73:	cmp    ecx,0xfffffffc
  42ac76:	mov    eax,0xfffffffc
  42ac7b:	cmovb  eax,ecx
  42ac7e:	mov    DWORD PTR [rbx+0x24],eax
  42ac81:	mov    rax,QWORD PTR [rbx+0x30]
  42ac85:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42ac8c:	mov    r12,rsi
  42ac8f:	add    r12,r13
  42ac92:	je     42ab40 <flatcc_builder_create_union_vector@@Base+0x20>
  42ac98:	test   r14,r14
  42ac9b:	je     42ad58 <flatcc_builder_create_union_vector@@Base+0x238>
  42aca1:	lea    rcx,[r14-0x1]
  42aca5:	mov    r8d,r14d
  42aca8:	and    r8d,0x3
  42acac:	cmp    rcx,0x3
  42acb0:	jae    42acbe <flatcc_builder_create_union_vector@@Base+0x19e>
  42acb2:	xor    ecx,ecx
  42acb4:	test   r8,r8
  42acb7:	jne    42ad27 <flatcc_builder_create_union_vector@@Base+0x207>
  42acb9:	jmp    42ad58 <flatcc_builder_create_union_vector@@Base+0x238>
  42acbe:	mov    rdx,r14
  42acc1:	sub    rdx,r8
  42acc4:	lea    rdi,[rsi+r13*1]
  42acc8:	add    rdi,0x3
  42accc:	xor    ecx,ecx
  42acce:	xchg   ax,ax
  42acd0:	movzx  eax,BYTE PTR [r15+rcx*8]
  42acd5:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  42acd9:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  42acde:	mov    DWORD PTR [rsi+rcx*4],eax
  42ace1:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  42ace7:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  42aceb:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  42acf0:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  42acf4:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  42acfa:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  42acfe:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  42ad03:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  42ad07:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  42ad0d:	mov    BYTE PTR [rdi+rcx*1],al
  42ad10:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  42ad15:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  42ad19:	add    rcx,0x4
  42ad1d:	cmp    rdx,rcx
  42ad20:	jne    42acd0 <flatcc_builder_create_union_vector@@Base+0x1b0>
  42ad22:	test   r8,r8
  42ad25:	je     42ad58 <flatcc_builder_create_union_vector@@Base+0x238>
  42ad27:	lea    rdx,[rsi+rcx*4]
  42ad2b:	lea    rdi,[r15+rcx*8]
  42ad2f:	add    rdi,0x4
  42ad33:	add    r13,rcx
  42ad36:	add    r13,rsi
  42ad39:	xor    ecx,ecx
  42ad3b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad40:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  42ad45:	mov    BYTE PTR [r13+rcx*1+0x0],al
  42ad4a:	mov    eax,DWORD PTR [rdi+rcx*8]
  42ad4d:	mov    DWORD PTR [rdx+rcx*4],eax
  42ad50:	inc    rcx
  42ad53:	cmp    r8,rcx
  42ad56:	jne    42ad40 <flatcc_builder_create_union_vector@@Base+0x220>
  42ad58:	mov    rdi,rbx
  42ad5b:	mov    rdx,r14
  42ad5e:	mov    rcx,r12
  42ad61:	call   42a370 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42ad66:	mov    r15d,eax
  42ad69:	test   eax,eax
  42ad6b:	je     42ad91 <flatcc_builder_create_union_vector@@Base+0x271>
  42ad6d:	mov    ecx,0x1
  42ad72:	mov    r9d,0xffffffff
  42ad78:	mov    rdi,rbx
  42ad7b:	mov    rsi,r12
  42ad7e:	mov    rdx,r14
  42ad81:	mov    r8d,0x1
  42ad87:	call   42a0f0 <flatcc_builder_create_vector@@Base>
  42ad8c:	mov    r14d,eax
  42ad8f:	jmp    42ad94 <flatcc_builder_create_union_vector@@Base+0x274>
  42ad91:	xor    r14d,r14d
  42ad94:	shl    r15,0x20
  42ad98:	mov    rdi,QWORD PTR [rbx+0x18]
  42ad9c:	mov    edx,DWORD PTR [rbx+0x20]
  42ad9f:	xor    esi,esi
  42ada1:	call   406110 <memset@plt>
  42ada6:	mov    rax,QWORD PTR [rbx+0x30]
  42adaa:	mov    ecx,DWORD PTR [rax+0x8]
  42adad:	mov    DWORD PTR [rbx+0x20],ecx
  42adb0:	mov    ecx,DWORD PTR [rax]
  42adb2:	mov    DWORD PTR [rbx+0x28],ecx
  42adb5:	mov    edx,DWORD PTR [rax+0x4]
  42adb8:	mov    rsi,rcx
  42adbb:	add    rsi,QWORD PTR [rbx+0x68]
  42adbf:	mov    QWORD PTR [rbx+0x18],rsi
  42adc3:	mov    esi,DWORD PTR [rbx+0x70]
  42adc6:	sub    esi,ecx
  42adc8:	cmp    esi,edx
  42adca:	cmova  esi,edx
  42adcd:	mov    DWORD PTR [rbx+0x24],esi
  42add0:	movzx  ecx,WORD PTR [rbx+0xea]
  42add7:	cmp    WORD PTR [rbx+0xe8],cx
  42adde:	jae    42ade7 <flatcc_builder_create_union_vector@@Base+0x2c7>
  42ade0:	mov    WORD PTR [rbx+0xe8],cx
  42ade7:	or     r14,r15
  42adea:	movzx  ecx,WORD PTR [rax+0xc]
  42adee:	mov    WORD PTR [rbx+0xea],cx
  42adf5:	add    rax,0xffffffffffffffdc
  42adf9:	mov    QWORD PTR [rbx+0x30],rax
  42adfd:	dec    DWORD PTR [rbx+0x104]
  42ae03:	jmp    42ab43 <flatcc_builder_create_union_vector@@Base+0x23>
  42ae08:	lea    rdi,[rip+0x2029c]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  42ae0f:	lea    rsi,[rip+0x1f1cc]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42ae16:	lea    rcx,[rip+0x202a9]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42ae1d:	mov    edx,0x37c
  42ae22:	call   406100 <__assert_fail@plt>
  42ae27:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ae30 <flatcc_builder_create_union_vector_direct@@Base>:
  42ae30:	push   r15
  42ae32:	push   r14
  42ae34:	push   r12
  42ae36:	push   rbx
  42ae37:	push   rax
  42ae38:	mov    r14,rcx
  42ae3b:	mov    r15,rsi
  42ae3e:	mov    r12,rdi
  42ae41:	mov    rsi,rdx
  42ae44:	mov    rdx,rcx
  42ae47:	mov    rcx,r15
  42ae4a:	call   42a370 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42ae4f:	mov    ebx,eax
  42ae51:	test   eax,eax
  42ae53:	je     42ae78 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  42ae55:	mov    ecx,0x1
  42ae5a:	mov    r9d,0xffffffff
  42ae60:	mov    rdi,r12
  42ae63:	mov    rsi,r15
  42ae66:	mov    rdx,r14
  42ae69:	mov    r8d,0x1
  42ae6f:	call   42a0f0 <flatcc_builder_create_vector@@Base>
  42ae74:	mov    eax,eax
  42ae76:	jmp    42ae7a <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  42ae78:	xor    eax,eax
  42ae7a:	shl    rbx,0x20
  42ae7e:	or     rbx,rax
  42ae81:	mov    rax,rbx
  42ae84:	add    rsp,0x8
  42ae88:	pop    rbx
  42ae89:	pop    r12
  42ae8b:	pop    r14
  42ae8d:	pop    r15
  42ae8f:	ret    

000000000042ae90 <flatcc_builder_start_union_vector@@Base>:
  42ae90:	push   rbx
  42ae91:	mov    rbx,rdi
  42ae94:	mov    esi,0x4
  42ae99:	call   428390 <flatcc_builder_start_buffer@@Base+0xe0>
  42ae9e:	mov    ecx,eax
  42aea0:	mov    eax,0xffffffff
  42aea5:	test   ecx,ecx
  42aea7:	je     42aeab <flatcc_builder_start_union_vector@@Base+0x1b>
  42aea9:	pop    rbx
  42aeaa:	ret    
  42aeab:	mov    rax,QWORD PTR [rbx+0x30]
  42aeaf:	mov    DWORD PTR [rax+0x10],0x8
  42aeb6:	mov    rax,QWORD PTR [rbx+0x30]
  42aeba:	mov    DWORD PTR [rax+0x14],0x0
  42aec1:	mov    rax,QWORD PTR [rbx+0x30]
  42aec5:	mov    WORD PTR [rax+0xe],0x7
  42aecb:	mov    ecx,DWORD PTR [rbx+0x28]
  42aece:	mov    edx,DWORD PTR [rbx+0x70]
  42aed1:	sub    edx,ecx
  42aed3:	add    rcx,QWORD PTR [rbx+0x68]
  42aed7:	mov    QWORD PTR [rbx+0x18],rcx
  42aedb:	cmp    edx,0xfffffffc
  42aede:	mov    ecx,0xfffffffc
  42aee3:	cmovb  ecx,edx
  42aee6:	mov    DWORD PTR [rbx+0x24],ecx
  42aee9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42aef0:	xor    eax,eax
  42aef2:	pop    rbx
  42aef3:	ret    
  42aef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aefe:	xchg   ax,ax

000000000042af00 <flatcc_builder_end_union_vector@@Base>:
  42af00:	push   rbp
  42af01:	push   r15
  42af03:	push   r14
  42af05:	push   r13
  42af07:	push   r12
  42af09:	push   rbx
  42af0a:	push   rax
  42af0b:	mov    rax,QWORD PTR [rdi+0x30]
  42af0f:	cmp    WORD PTR [rax+0xe],0x7
  42af14:	jne    42b304 <flatcc_builder_end_union_vector@@Base+0x404>
  42af1a:	mov    r13,rdi
  42af1d:	mov    r14d,DWORD PTR [rax+0x14]
  42af21:	lea    eax,[r14+r14*4]
  42af25:	mov    r12d,DWORD PTR [rdi+0x20]
  42af29:	add    eax,r12d
  42af2c:	mov    DWORD PTR [rdi+0x20],eax
  42af2f:	cmp    eax,DWORD PTR [rdi+0x24]
  42af32:	jae    42af3a <flatcc_builder_end_union_vector@@Base+0x3a>
  42af34:	mov    r8,QWORD PTR [r13+0x18]
  42af38:	jmp    42af91 <flatcc_builder_end_union_vector@@Base+0x91>
  42af3a:	inc    eax
  42af3c:	lea    rsi,[r13+0x68]
  42af40:	mov    rdi,QWORD PTR [r13+0x40]
  42af44:	mov    edx,DWORD PTR [r13+0x28]
  42af48:	add    rdx,rax
  42af4b:	mov    ecx,0x1
  42af50:	mov    r8d,0x1
  42af56:	call   QWORD PTR [r13+0x50]
  42af5a:	test   eax,eax
  42af5c:	jne    42b0c6 <flatcc_builder_end_union_vector@@Base+0x1c6>
  42af62:	mov    eax,DWORD PTR [r13+0x28]
  42af66:	mov    r8,rax
  42af69:	add    r8,QWORD PTR [r13+0x68]
  42af6d:	mov    QWORD PTR [r13+0x18],r8
  42af71:	mov    ecx,DWORD PTR [r13+0x70]
  42af75:	sub    ecx,eax
  42af77:	cmp    ecx,0xfffffffc
  42af7a:	mov    eax,0xfffffffc
  42af7f:	cmovb  eax,ecx
  42af82:	mov    DWORD PTR [r13+0x24],eax
  42af86:	mov    rax,QWORD PTR [r13+0x30]
  42af8a:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42af91:	mov    rsi,r8
  42af94:	add    rsi,r12
  42af97:	je     42b0c6 <flatcc_builder_end_union_vector@@Base+0x1c6>
  42af9d:	lea    r15,[rsi+r14*4]
  42afa1:	test   r14d,r14d
  42afa4:	je     42b08a <flatcc_builder_end_union_vector@@Base+0x18a>
  42afaa:	cmp    r14d,0x9
  42afae:	jae    42b159 <flatcc_builder_end_union_vector@@Base+0x259>
  42afb4:	xor    r9d,r9d
  42afb7:	mov    r11d,r14d
  42afba:	sub    r11d,r9d
  42afbd:	mov    r10,r9
  42afc0:	not    r10
  42afc3:	add    r10,r14
  42afc6:	and    r11,0x3
  42afca:	je     42b010 <flatcc_builder_end_union_vector@@Base+0x110>
  42afcc:	mov    rdx,r9
  42afcf:	neg    rdx
  42afd2:	lea    rbp,[r12+r9*4]
  42afd6:	add    rbp,r8
  42afd9:	lea    rbx,[r8+r9*8]
  42afdd:	add    rbx,0x4
  42afe1:	lea    rax,[r9+r14*4]
  42afe5:	add    rax,r12
  42afe8:	add    rax,r8
  42afeb:	xor    edi,edi
  42afed:	nop    DWORD PTR [rax]
  42aff0:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  42aff5:	mov    BYTE PTR [rax+rdi*1],cl
  42aff8:	mov    ecx,DWORD PTR [rbx+rdi*8]
  42affb:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  42afff:	dec    rdx
  42b002:	inc    rdi
  42b005:	cmp    r11,rdi
  42b008:	jne    42aff0 <flatcc_builder_end_union_vector@@Base+0xf0>
  42b00a:	neg    rdx
  42b00d:	mov    r9,rdx
  42b010:	cmp    r10,0x3
  42b014:	jb     42b08a <flatcc_builder_end_union_vector@@Base+0x18a>
  42b016:	mov    rbp,r14
  42b019:	sub    rbp,r9
  42b01c:	lea    rcx,[r12+r9*4]
  42b020:	lea    rdx,[r8+rcx*1]
  42b024:	add    rdx,0xc
  42b028:	lea    rdi,[r8+r9*8]
  42b02c:	add    rdi,0x1c
  42b030:	lea    rcx,[r9+r14*4]
  42b034:	add    rcx,r12
  42b037:	add    rcx,r8
  42b03a:	add    rcx,0x3
  42b03e:	xor    ebx,ebx
  42b040:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  42b045:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  42b049:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  42b04d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  42b051:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  42b056:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  42b05a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  42b05e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  42b062:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  42b067:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  42b06b:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  42b06f:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  42b073:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  42b078:	mov    BYTE PTR [rcx+rbx*1],al
  42b07b:	mov    eax,DWORD PTR [rdi+rbx*8]
  42b07e:	mov    DWORD PTR [rdx+rbx*4],eax
  42b081:	add    rbx,0x4
  42b085:	cmp    rbp,rbx
  42b088:	jne    42b040 <flatcc_builder_end_union_vector@@Base+0x140>
  42b08a:	mov    rdi,r13
  42b08d:	mov    rdx,r14
  42b090:	mov    rcx,r15
  42b093:	vzeroupper 
  42b096:	call   42a370 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42b09b:	mov    r12d,eax
  42b09e:	test   eax,eax
  42b0a0:	je     42b0cb <flatcc_builder_end_union_vector@@Base+0x1cb>
  42b0a2:	mov    ecx,0x1
  42b0a7:	mov    r9d,0xffffffff
  42b0ad:	mov    rdi,r13
  42b0b0:	mov    rsi,r15
  42b0b3:	mov    rdx,r14
  42b0b6:	mov    r8d,0x1
  42b0bc:	call   42a0f0 <flatcc_builder_create_vector@@Base>
  42b0c1:	mov    r14d,eax
  42b0c4:	jmp    42b0ce <flatcc_builder_end_union_vector@@Base+0x1ce>
  42b0c6:	xor    r14d,r14d
  42b0c9:	jmp    42b147 <flatcc_builder_end_union_vector@@Base+0x247>
  42b0cb:	xor    r14d,r14d
  42b0ce:	shl    r12,0x20
  42b0d2:	mov    rdi,QWORD PTR [r13+0x18]
  42b0d6:	mov    edx,DWORD PTR [r13+0x20]
  42b0da:	xor    esi,esi
  42b0dc:	call   406110 <memset@plt>
  42b0e1:	mov    rax,QWORD PTR [r13+0x30]
  42b0e5:	mov    ecx,DWORD PTR [rax+0x8]
  42b0e8:	mov    DWORD PTR [r13+0x20],ecx
  42b0ec:	mov    ecx,DWORD PTR [rax]
  42b0ee:	mov    DWORD PTR [r13+0x28],ecx
  42b0f2:	mov    edx,DWORD PTR [rax+0x4]
  42b0f5:	mov    rsi,rcx
  42b0f8:	add    rsi,QWORD PTR [r13+0x68]
  42b0fc:	mov    QWORD PTR [r13+0x18],rsi
  42b100:	mov    esi,DWORD PTR [r13+0x70]
  42b104:	sub    esi,ecx
  42b106:	cmp    esi,edx
  42b108:	cmova  esi,edx
  42b10b:	mov    DWORD PTR [r13+0x24],esi
  42b10f:	movzx  ecx,WORD PTR [r13+0xea]
  42b117:	cmp    WORD PTR [r13+0xe8],cx
  42b11f:	jae    42b129 <flatcc_builder_end_union_vector@@Base+0x229>
  42b121:	mov    WORD PTR [r13+0xe8],cx
  42b129:	or     r14,r12
  42b12c:	movzx  ecx,WORD PTR [rax+0xc]
  42b130:	mov    WORD PTR [r13+0xea],cx
  42b138:	add    rax,0xffffffffffffffdc
  42b13c:	mov    QWORD PTR [r13+0x30],rax
  42b140:	dec    DWORD PTR [r13+0x104]
  42b147:	mov    rax,r14
  42b14a:	add    rsp,0x8
  42b14e:	pop    rbx
  42b14f:	pop    r12
  42b151:	pop    r13
  42b153:	pop    r14
  42b155:	pop    r15
  42b157:	pop    rbp
  42b158:	ret    
  42b159:	lea    rax,[r14-0x1]
  42b15d:	mov    ecx,0x8
  42b162:	mul    rcx
  42b165:	seto   cl
  42b168:	mov    rdx,r8
  42b16b:	not    rdx
  42b16e:	xor    r9d,r9d
  42b171:	cmp    rax,rdx
  42b174:	ja     42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b17a:	test   cl,cl
  42b17c:	jne    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b182:	lea    rdx,[r8+0x4]
  42b186:	mov    rdi,rdx
  42b189:	not    rdi
  42b18c:	cmp    rax,rdi
  42b18f:	ja     42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b195:	test   cl,cl
  42b197:	jne    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b19d:	lea    rcx,[r14+r14*4]
  42b1a1:	add    rcx,r12
  42b1a4:	add    rcx,r8
  42b1a7:	lea    rbx,[r8+r14*8]
  42b1ab:	add    rbx,0xfffffffffffffff9
  42b1af:	cmp    rbx,r15
  42b1b2:	seta   r11b
  42b1b6:	lea    rdi,[r8+r14*8]
  42b1ba:	cmp    r8,rcx
  42b1bd:	setb   r10b
  42b1c1:	cmp    rdi,r15
  42b1c4:	seta   al
  42b1c7:	cmp    rdx,rcx
  42b1ca:	setb   bpl
  42b1ce:	cmp    rsi,rbx
  42b1d1:	setb   cl
  42b1d4:	cmp    r8,r15
  42b1d7:	setb   BYTE PTR [rsp+0x7]
  42b1dc:	cmp    rsi,rdi
  42b1df:	setb   bl
  42b1e2:	cmp    rdx,r15
  42b1e5:	setb   dl
  42b1e8:	xor    r9d,r9d
  42b1eb:	test   r11b,r10b
  42b1ee:	jne    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b1f4:	and    al,bpl
  42b1f7:	jne    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b1fd:	and    cl,BYTE PTR [rsp+0x7]
  42b201:	jne    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b207:	and    bl,dl
  42b209:	jne    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b20f:	mov    eax,r14d
  42b212:	and    eax,0x7
  42b215:	test   rax,rax
  42b218:	mov    ecx,0x8
  42b21d:	cmovne rcx,rax
  42b221:	mov    r9,r14
  42b224:	sub    r9,rcx
  42b227:	vmovdqa ymm0,YMMWORD PTR [rip+0x17231]        # 442460 <_IO_stdin_used@@Base+0x14460>
  42b22f:	vmovdqa ymm1,YMMWORD PTR [rip+0x17249]        # 442480 <_IO_stdin_used@@Base+0x14480>
  42b237:	xor    eax,eax
  42b239:	vmovdqa xmm8,XMMWORD PTR [rip+0x1ed5f]        # 449fa0 <flatcc_builder_padding_base@@Base+0x200>
  42b241:	vmovdqa xmm9,XMMWORD PTR [rip+0x1ed67]        # 449fb0 <flatcc_builder_padding_base@@Base+0x210>
  42b249:	vpbroadcastq ymm4,QWORD PTR [rip+0x1ed6e]        # 449fc0 <flatcc_builder_padding_base@@Base+0x220>
  42b252:	vpbroadcastq ymm5,QWORD PTR [rip+0x1ed6d]        # 449fc8 <flatcc_builder_padding_base@@Base+0x228>
  42b25b:	mov    rdi,r8
  42b25e:	xchg   ax,ax
  42b260:	vmovdqu xmm6,XMMWORD PTR [rdi]
  42b264:	vmovdqu xmm7,XMMWORD PTR [rdi+0x10]
  42b269:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  42b26e:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  42b273:	vpshufb xmm3,xmm3,xmm8
  42b278:	vpshufb xmm2,xmm2,xmm8
  42b27d:	vpunpcklwd xmm2,xmm2,xmm3
  42b281:	vpshufb xmm3,xmm7,xmm9
  42b286:	vpshufb xmm6,xmm6,xmm9
  42b28b:	vpunpcklwd xmm3,xmm6,xmm3
  42b28f:	vpblendd xmm2,xmm3,xmm2,0x2
  42b295:	vmovq  QWORD PTR [r15+rax*1],xmm2
  42b29b:	vpsllq ymm2,ymm0,0x3
  42b2a0:	vmovq  xmm3,r8
  42b2a5:	vpbroadcastq ymm3,xmm3
  42b2aa:	vpaddq ymm2,ymm3,ymm2
  42b2ae:	vpaddq ymm2,ymm2,ymm4
  42b2b2:	vpsllq ymm6,ymm1,0x3
  42b2b7:	vpaddq ymm3,ymm3,ymm6
  42b2bb:	vpaddq ymm3,ymm3,ymm4
  42b2bf:	vpcmpeqd xmm6,xmm6,xmm6
  42b2c3:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  42b2cd:	vpcmpeqd xmm3,xmm3,xmm3
  42b2d1:	vpgatherqd xmm6,DWORD PTR [ymm2*1+0x0],xmm3
  42b2db:	vmovdqu XMMWORD PTR [rsi+rax*4+0x10],xmm6
  42b2e1:	vmovdqu XMMWORD PTR [rsi+rax*4],xmm7
  42b2e6:	add    rax,0x8
  42b2ea:	vpaddq ymm1,ymm1,ymm5
  42b2ee:	vpaddq ymm0,ymm0,ymm5
  42b2f2:	add    rdi,0x40
  42b2f6:	cmp    r9,rax
  42b2f9:	jne    42b260 <flatcc_builder_end_union_vector@@Base+0x360>
  42b2ff:	jmp    42afb7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42b304:	lea    rdi,[rip+0x1f913]        # 44ac1e <flatcc_builder_padding_base@@Base+0xe7e>
  42b30b:	lea    rsi,[rip+0x1ecd0]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b312:	lea    rcx,[rip+0x1f937]        # 44ac50 <flatcc_builder_padding_base@@Base+0xeb0>
  42b319:	mov    edx,0x651
  42b31e:	call   406100 <__assert_fail@plt>
  42b323:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b32d:	nop    DWORD PTR [rax]

000000000042b330 <flatcc_builder_union_vector_count@@Base>:
  42b330:	mov    rax,QWORD PTR [rdi+0x30]
  42b334:	mov    eax,DWORD PTR [rax+0x14]
  42b337:	ret    
  42b338:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b340 <flatcc_builder_union_vector_edit@@Base>:
  42b340:	mov    rax,QWORD PTR [rdi+0x18]
  42b344:	ret    
  42b345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b34f:	nop

000000000042b350 <flatcc_builder_extend_union_vector@@Base>:
  42b350:	push   r14
  42b352:	push   rbx
  42b353:	push   rax
  42b354:	mov    rax,QWORD PTR [rdi+0x30]
  42b358:	mov    ecx,DWORD PTR [rax+0x14]
  42b35b:	add    ecx,esi
  42b35d:	jb     42b3e4 <flatcc_builder_extend_union_vector@@Base+0x94>
  42b363:	cmp    ecx,0x20000000
  42b369:	jae    42b3e4 <flatcc_builder_extend_union_vector@@Base+0x94>
  42b36b:	mov    rbx,rdi
  42b36e:	mov    DWORD PTR [rax+0x14],ecx
  42b371:	mov    r14d,DWORD PTR [rdi+0x20]
  42b375:	lea    eax,[r14+rsi*8]
  42b379:	mov    DWORD PTR [rdi+0x20],eax
  42b37c:	cmp    eax,DWORD PTR [rdi+0x24]
  42b37f:	jae    42b387 <flatcc_builder_extend_union_vector@@Base+0x37>
  42b381:	mov    rax,QWORD PTR [rbx+0x18]
  42b385:	jmp    42b3d9 <flatcc_builder_extend_union_vector@@Base+0x89>
  42b387:	inc    eax
  42b389:	lea    rsi,[rbx+0x68]
  42b38d:	mov    rdi,QWORD PTR [rbx+0x40]
  42b391:	mov    edx,DWORD PTR [rbx+0x28]
  42b394:	add    rdx,rax
  42b397:	mov    ecx,0x1
  42b39c:	mov    r8d,0x1
  42b3a2:	call   QWORD PTR [rbx+0x50]
  42b3a5:	test   eax,eax
  42b3a7:	je     42b3ad <flatcc_builder_extend_union_vector@@Base+0x5d>
  42b3a9:	xor    eax,eax
  42b3ab:	jmp    42b3dc <flatcc_builder_extend_union_vector@@Base+0x8c>
  42b3ad:	mov    ecx,DWORD PTR [rbx+0x28]
  42b3b0:	mov    rax,rcx
  42b3b3:	add    rax,QWORD PTR [rbx+0x68]
  42b3b7:	mov    QWORD PTR [rbx+0x18],rax
  42b3bb:	mov    edx,DWORD PTR [rbx+0x70]
  42b3be:	sub    edx,ecx
  42b3c0:	cmp    edx,0xfffffffc
  42b3c3:	mov    ecx,0xfffffffc
  42b3c8:	cmovb  ecx,edx
  42b3cb:	mov    DWORD PTR [rbx+0x24],ecx
  42b3ce:	mov    rcx,QWORD PTR [rbx+0x30]
  42b3d2:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42b3d9:	add    rax,r14
  42b3dc:	add    rsp,0x8
  42b3e0:	pop    rbx
  42b3e1:	pop    r14
  42b3e3:	ret    
  42b3e4:	lea    rdi,[rip+0x1fcc0]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  42b3eb:	lea    rsi,[rip+0x1ebf0]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b3f2:	lea    rcx,[rip+0x1fccd]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42b3f9:	mov    edx,0x37c
  42b3fe:	call   406100 <__assert_fail@plt>
  42b403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b40d:	nop    DWORD PTR [rax]

000000000042b410 <flatcc_builder_truncate_union_vector@@Base>:
  42b410:	push   rax
  42b411:	mov    rax,QWORD PTR [rdi+0x30]
  42b415:	cmp    WORD PTR [rax+0xe],0x7
  42b41a:	jne    42b44b <flatcc_builder_truncate_union_vector@@Base+0x3b>
  42b41c:	mov    rdx,rsi
  42b41f:	mov    ecx,DWORD PTR [rax+0x14]
  42b422:	sub    ecx,edx
  42b424:	jb     42b46a <flatcc_builder_truncate_union_vector@@Base+0x5a>
  42b426:	mov    DWORD PTR [rax+0x14],ecx
  42b429:	mov    rax,QWORD PTR [rdi+0x30]
  42b42d:	imul   edx,DWORD PTR [rax+0x10]
  42b431:	mov    eax,DWORD PTR [rdi+0x20]
  42b434:	sub    eax,edx
  42b436:	mov    DWORD PTR [rdi+0x20],eax
  42b439:	add    rax,QWORD PTR [rdi+0x18]
  42b43d:	mov    rdi,rax
  42b440:	xor    esi,esi
  42b442:	call   406110 <memset@plt>
  42b447:	xor    eax,eax
  42b449:	pop    rcx
  42b44a:	ret    
  42b44b:	lea    rdi,[rip+0x1f7cc]        # 44ac1e <flatcc_builder_padding_base@@Base+0xe7e>
  42b452:	lea    rsi,[rip+0x1eb89]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b459:	lea    rcx,[rip+0x1f843]        # 44aca3 <flatcc_builder_padding_base@@Base+0xf03>
  42b460:	mov    edx,0x681
  42b465:	call   406100 <__assert_fail@plt>
  42b46a:	lea    rdi,[rip+0x1f211]        # 44a682 <flatcc_builder_padding_base@@Base+0x8e2>
  42b471:	lea    rsi,[rip+0x1eb6a]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b478:	lea    rcx,[rip+0x1f824]        # 44aca3 <flatcc_builder_padding_base@@Base+0xf03>
  42b47f:	mov    edx,0x682
  42b484:	call   406100 <__assert_fail@plt>
  42b489:	nop    DWORD PTR [rax+0x0]

000000000042b490 <flatcc_builder_union_vector_push@@Base>:
  42b490:	push   r15
  42b492:	push   r14
  42b494:	push   rbx
  42b495:	mov    rax,QWORD PTR [rdi+0x30]
  42b499:	cmp    WORD PTR [rax+0xe],0x7
  42b49e:	jne    42b537 <flatcc_builder_union_vector_push@@Base+0xa7>
  42b4a4:	mov    ecx,DWORD PTR [rax+0x14]
  42b4a7:	cmp    ecx,0x1fffffff
  42b4ad:	je     42b4f9 <flatcc_builder_union_vector_push@@Base+0x69>
  42b4af:	mov    r14,rsi
  42b4b2:	mov    rbx,rdi
  42b4b5:	inc    ecx
  42b4b7:	mov    DWORD PTR [rax+0x14],ecx
  42b4ba:	mov    r15d,DWORD PTR [rdi+0x20]
  42b4be:	lea    eax,[r15+0x8]
  42b4c2:	mov    DWORD PTR [rdi+0x20],eax
  42b4c5:	cmp    eax,DWORD PTR [rdi+0x24]
  42b4c8:	jae    42b4d5 <flatcc_builder_union_vector_push@@Base+0x45>
  42b4ca:	mov    rax,QWORD PTR [rbx+0x18]
  42b4ce:	add    rax,r15
  42b4d1:	jne    42b52e <flatcc_builder_union_vector_push@@Base+0x9e>
  42b4d3:	jmp    42b4f9 <flatcc_builder_union_vector_push@@Base+0x69>
  42b4d5:	lea    eax,[r15+0x9]
  42b4d9:	lea    rsi,[rbx+0x68]
  42b4dd:	mov    rdi,QWORD PTR [rbx+0x40]
  42b4e1:	mov    edx,DWORD PTR [rbx+0x28]
  42b4e4:	add    rdx,rax
  42b4e7:	mov    ecx,0x1
  42b4ec:	mov    r8d,0x1
  42b4f2:	call   QWORD PTR [rbx+0x50]
  42b4f5:	test   eax,eax
  42b4f7:	je     42b4fd <flatcc_builder_union_vector_push@@Base+0x6d>
  42b4f9:	xor    eax,eax
  42b4fb:	jmp    42b531 <flatcc_builder_union_vector_push@@Base+0xa1>
  42b4fd:	mov    ecx,DWORD PTR [rbx+0x28]
  42b500:	mov    rax,rcx
  42b503:	add    rax,QWORD PTR [rbx+0x68]
  42b507:	mov    QWORD PTR [rbx+0x18],rax
  42b50b:	mov    edx,DWORD PTR [rbx+0x70]
  42b50e:	sub    edx,ecx
  42b510:	cmp    edx,0xfffffffc
  42b513:	mov    ecx,0xfffffffc
  42b518:	cmovb  ecx,edx
  42b51b:	mov    DWORD PTR [rbx+0x24],ecx
  42b51e:	mov    rcx,QWORD PTR [rbx+0x30]
  42b522:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42b529:	add    rax,r15
  42b52c:	je     42b4f9 <flatcc_builder_union_vector_push@@Base+0x69>
  42b52e:	mov    QWORD PTR [rax],r14
  42b531:	pop    rbx
  42b532:	pop    r14
  42b534:	pop    r15
  42b536:	ret    
  42b537:	lea    rdi,[rip+0x1f6e0]        # 44ac1e <flatcc_builder_padding_base@@Base+0xe7e>
  42b53e:	lea    rsi,[rip+0x1ea9d]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b545:	lea    rcx,[rip+0x1f79c]        # 44ace8 <flatcc_builder_padding_base@@Base+0xf48>
  42b54c:	mov    edx,0x68d
  42b551:	call   406100 <__assert_fail@plt>
  42b556:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042b560 <flatcc_builder_append_union_vector@@Base>:
  42b560:	push   r15
  42b562:	push   r14
  42b564:	push   r13
  42b566:	push   r12
  42b568:	push   rbx
  42b569:	mov    rax,QWORD PTR [rdi+0x30]
  42b56d:	cmp    WORD PTR [rax+0xe],0x7
  42b572:	jne    42b64e <flatcc_builder_append_union_vector@@Base+0xee>
  42b578:	mov    r15,rdx
  42b57b:	mov    ecx,DWORD PTR [rax+0x14]
  42b57e:	add    ecx,r15d
  42b581:	jb     42b62f <flatcc_builder_append_union_vector@@Base+0xcf>
  42b587:	cmp    ecx,0x20000000
  42b58d:	jae    42b62f <flatcc_builder_append_union_vector@@Base+0xcf>
  42b593:	mov    r14,rsi
  42b596:	mov    rbx,rdi
  42b599:	mov    DWORD PTR [rax+0x14],ecx
  42b59c:	mov    r13d,DWORD PTR [rdi+0x20]
  42b5a0:	lea    eax,[r13+r15*8+0x0]
  42b5a5:	mov    DWORD PTR [rdi+0x20],eax
  42b5a8:	cmp    eax,DWORD PTR [rdi+0x24]
  42b5ab:	jae    42b5b8 <flatcc_builder_append_union_vector@@Base+0x58>
  42b5ad:	mov    r12,QWORD PTR [rbx+0x18]
  42b5b1:	add    r12,r13
  42b5b4:	jne    42b610 <flatcc_builder_append_union_vector@@Base+0xb0>
  42b5b6:	jmp    42b5da <flatcc_builder_append_union_vector@@Base+0x7a>
  42b5b8:	inc    eax
  42b5ba:	lea    rsi,[rbx+0x68]
  42b5be:	mov    rdi,QWORD PTR [rbx+0x40]
  42b5c2:	mov    edx,DWORD PTR [rbx+0x28]
  42b5c5:	add    rdx,rax
  42b5c8:	mov    ecx,0x1
  42b5cd:	mov    r8d,0x1
  42b5d3:	call   QWORD PTR [rbx+0x50]
  42b5d6:	test   eax,eax
  42b5d8:	je     42b5df <flatcc_builder_append_union_vector@@Base+0x7f>
  42b5da:	xor    r12d,r12d
  42b5dd:	jmp    42b622 <flatcc_builder_append_union_vector@@Base+0xc2>
  42b5df:	mov    eax,DWORD PTR [rbx+0x28]
  42b5e2:	mov    r12,rax
  42b5e5:	add    r12,QWORD PTR [rbx+0x68]
  42b5e9:	mov    QWORD PTR [rbx+0x18],r12
  42b5ed:	mov    ecx,DWORD PTR [rbx+0x70]
  42b5f0:	sub    ecx,eax
  42b5f2:	cmp    ecx,0xfffffffc
  42b5f5:	mov    eax,0xfffffffc
  42b5fa:	cmovb  eax,ecx
  42b5fd:	mov    DWORD PTR [rbx+0x24],eax
  42b600:	mov    rax,QWORD PTR [rbx+0x30]
  42b604:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42b60b:	add    r12,r13
  42b60e:	je     42b5da <flatcc_builder_append_union_vector@@Base+0x7a>
  42b610:	shl    r15d,0x3
  42b614:	mov    edx,r15d
  42b617:	mov    rdi,r12
  42b61a:	mov    rsi,r14
  42b61d:	call   4061a0 <memcpy@plt>
  42b622:	mov    rax,r12
  42b625:	pop    rbx
  42b626:	pop    r12
  42b628:	pop    r13
  42b62a:	pop    r14
  42b62c:	pop    r15
  42b62e:	ret    
  42b62f:	lea    rdi,[rip+0x1fa75]        # 44b0ab <flatcc_builder_padding_base@@Base+0x130b>
  42b636:	lea    rsi,[rip+0x1e9a5]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b63d:	lea    rcx,[rip+0x1fa82]        # 44b0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42b644:	mov    edx,0x37c
  42b649:	call   406100 <__assert_fail@plt>
  42b64e:	lea    rdi,[rip+0x1f5c9]        # 44ac1e <flatcc_builder_padding_base@@Base+0xe7e>
  42b655:	lea    rsi,[rip+0x1e986]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b65c:	lea    rcx,[rip+0x1f6f2]        # 44ad55 <flatcc_builder_padding_base@@Base+0xfb5>
  42b663:	mov    edx,0x69c
  42b668:	call   406100 <__assert_fail@plt>
  42b66d:	nop    DWORD PTR [rax]

000000000042b670 <flatcc_builder_create_string@@Base>:
  42b670:	push   rbp
  42b671:	push   rbx
  42b672:	sub    rsp,0x98
  42b679:	xor    ebp,ebp
  42b67b:	mov    rax,rdx
  42b67e:	shr    rax,0x20
  42b682:	jne    42b756 <flatcc_builder_create_string@@Base+0xe6>
  42b688:	mov    rbx,rdi
  42b68b:	mov    DWORD PTR [rsp+0x4],edx
  42b68f:	mov    ebp,DWORD PTR [rdi+0xf0]
  42b695:	mov    eax,edx
  42b697:	not    eax
  42b699:	add    eax,ebp
  42b69b:	and    eax,0x3
  42b69e:	inc    eax
  42b6a0:	mov    QWORD PTR [rsp+0x8],0x4
  42b6a9:	lea    rcx,[rsp+0x4]
  42b6ae:	mov    QWORD PTR [rsp+0x18],rcx
  42b6b3:	mov    QWORD PTR [rsp+0x20],0x4
  42b6bc:	mov    DWORD PTR [rsp+0x10],0x1
  42b6c4:	test   rdx,rdx
  42b6c7:	je     42b6eb <flatcc_builder_create_string@@Base+0x7b>
  42b6c9:	lea    rcx,[rdx+0x4]
  42b6cd:	mov    QWORD PTR [rsp+0x8],rcx
  42b6d2:	mov    QWORD PTR [rsp+0x28],rsi
  42b6d7:	mov    QWORD PTR [rsp+0x30],rdx
  42b6dc:	mov    DWORD PTR [rsp+0x10],0x2
  42b6e4:	mov    edx,0x2
  42b6e9:	jmp    42b6f5 <flatcc_builder_create_string@@Base+0x85>
  42b6eb:	mov    ecx,0x4
  42b6f0:	mov    edx,0x1
  42b6f5:	mov    esi,eax
  42b6f7:	lea    r8,[rcx+rsi*1]
  42b6fb:	mov    QWORD PTR [rsp+0x8],r8
  42b700:	mov    eax,edx
  42b702:	shl    rax,0x4
  42b706:	lea    rdi,[rip+0x1e693]        # 449da0 <flatcc_builder_padding_base@@Base>
  42b70d:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  42b712:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  42b717:	inc    edx
  42b719:	mov    DWORD PTR [rsp+0x10],edx
  42b71d:	cmp    r8,0x11
  42b721:	setb   al
  42b724:	add    rcx,rsi
  42b727:	add    rcx,0xfffffffffffffff0
  42b72b:	shr    rcx,0x20
  42b72f:	sete   cl
  42b732:	test   r8d,r8d
  42b735:	jle    42b762 <flatcc_builder_create_string@@Base+0xf2>
  42b737:	or     al,cl
  42b739:	je     42b762 <flatcc_builder_create_string@@Base+0xf2>
  42b73b:	sub    ebp,r8d
  42b73e:	mov    rdi,QWORD PTR [rbx+0x38]
  42b742:	lea    rsi,[rsp+0x18]
  42b747:	mov    ecx,ebp
  42b749:	call   QWORD PTR [rbx+0x48]
  42b74c:	test   eax,eax
  42b74e:	jne    42b781 <flatcc_builder_create_string@@Base+0x111>
  42b750:	mov    DWORD PTR [rbx+0xf0],ebp
  42b756:	mov    eax,ebp
  42b758:	add    rsp,0x98
  42b75f:	pop    rbx
  42b760:	pop    rbp
  42b761:	ret    
  42b762:	lea    rdi,[rip+0x15426]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42b769:	lea    rsi,[rip+0x1e872]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b770:	lea    rcx,[rip+0x1f8ea]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42b777:	mov    edx,0x287
  42b77c:	call   406100 <__assert_fail@plt>
  42b781:	lea    rdi,[rip+0x15407]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42b788:	lea    rsi,[rip+0x1e853]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b78f:	lea    rcx,[rip+0x1f8cb]        # 44b061 <flatcc_builder_padding_base@@Base+0x12c1>
  42b796:	mov    edx,0x28b
  42b79b:	call   406100 <__assert_fail@plt>

000000000042b7a0 <flatcc_builder_create_string_str@@Base>:
  42b7a0:	push   r14
  42b7a2:	push   rbx
  42b7a3:	push   rax
  42b7a4:	mov    rbx,rsi
  42b7a7:	mov    r14,rdi
  42b7aa:	mov    rdi,rsi
  42b7ad:	call   4060d0 <strlen@plt>
  42b7b2:	mov    rdi,r14
  42b7b5:	mov    rsi,rbx
  42b7b8:	mov    rdx,rax
  42b7bb:	add    rsp,0x8
  42b7bf:	pop    rbx
  42b7c0:	pop    r14
  42b7c2:	jmp    42b670 <flatcc_builder_create_string@@Base>
  42b7c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b7d0 <flatcc_builder_create_string_strn@@Base>:
  42b7d0:	push   r15
  42b7d2:	push   r14
  42b7d4:	push   rbx
  42b7d5:	mov    rbx,rdx
  42b7d8:	mov    r14,rsi
  42b7db:	mov    r15,rdi
  42b7de:	mov    rdi,rsi
  42b7e1:	xor    esi,esi
  42b7e3:	call   406130 <memchr@plt>
  42b7e8:	mov    rcx,rax
  42b7eb:	sub    rcx,r14
  42b7ee:	test   rax,rax
  42b7f1:	cmovne rbx,rcx
  42b7f5:	mov    rdi,r15
  42b7f8:	mov    rsi,r14
  42b7fb:	mov    rdx,rbx
  42b7fe:	pop    rbx
  42b7ff:	pop    r14
  42b801:	pop    r15
  42b803:	jmp    42b670 <flatcc_builder_create_string@@Base>
  42b808:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b810 <flatcc_builder_end_string@@Base>:
  42b810:	push   rbp
  42b811:	push   rbx
  42b812:	push   rax
  42b813:	mov    rax,QWORD PTR [rdi+0x30]
  42b817:	cmp    WORD PTR [rax+0xe],0x6
  42b81c:	jne    42b8b4 <flatcc_builder_end_string@@Base+0xa4>
  42b822:	mov    rbx,rdi
  42b825:	mov    edx,DWORD PTR [rax+0x14]
  42b828:	cmp    edx,DWORD PTR [rdi+0x20]
  42b82b:	jne    42b8d3 <flatcc_builder_end_string@@Base+0xc3>
  42b831:	mov    rsi,QWORD PTR [rbx+0x18]
  42b835:	mov    rdi,rbx
  42b838:	call   42b670 <flatcc_builder_create_string@@Base>
  42b83d:	mov    ebp,eax
  42b83f:	test   eax,eax
  42b841:	je     42b8ab <flatcc_builder_end_string@@Base+0x9b>
  42b843:	mov    rdi,QWORD PTR [rbx+0x18]
  42b847:	mov    edx,DWORD PTR [rbx+0x20]
  42b84a:	xor    esi,esi
  42b84c:	call   406110 <memset@plt>
  42b851:	mov    rax,QWORD PTR [rbx+0x30]
  42b855:	mov    ecx,DWORD PTR [rax+0x8]
  42b858:	mov    DWORD PTR [rbx+0x20],ecx
  42b85b:	mov    ecx,DWORD PTR [rax]
  42b85d:	mov    DWORD PTR [rbx+0x28],ecx
  42b860:	mov    edx,DWORD PTR [rax+0x4]
  42b863:	mov    rsi,rcx
  42b866:	add    rsi,QWORD PTR [rbx+0x68]
  42b86a:	mov    QWORD PTR [rbx+0x18],rsi
  42b86e:	mov    esi,DWORD PTR [rbx+0x70]
  42b871:	sub    esi,ecx
  42b873:	cmp    esi,edx
  42b875:	cmova  esi,edx
  42b878:	mov    DWORD PTR [rbx+0x24],esi
  42b87b:	movzx  ecx,WORD PTR [rbx+0xea]
  42b882:	cmp    WORD PTR [rbx+0xe8],cx
  42b889:	jae    42b892 <flatcc_builder_end_string@@Base+0x82>
  42b88b:	mov    WORD PTR [rbx+0xe8],cx
  42b892:	movzx  ecx,WORD PTR [rax+0xc]
  42b896:	mov    WORD PTR [rbx+0xea],cx
  42b89d:	add    rax,0xffffffffffffffdc
  42b8a1:	mov    QWORD PTR [rbx+0x30],rax
  42b8a5:	dec    DWORD PTR [rbx+0x104]
  42b8ab:	mov    eax,ebp
  42b8ad:	add    rsp,0x8
  42b8b1:	pop    rbx
  42b8b2:	pop    rbp
  42b8b3:	ret    
  42b8b4:	lea    rdi,[rip+0x1ec66]        # 44a521 <flatcc_builder_padding_base@@Base+0x781>
  42b8bb:	lea    rsi,[rip+0x1e720]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b8c2:	lea    rcx,[rip+0x1f50b]        # 44add4 <flatcc_builder_padding_base@@Base+0x1034>
  42b8c9:	mov    edx,0x6c4
  42b8ce:	call   406100 <__assert_fail@plt>
  42b8d3:	lea    rdi,[rip+0x1f53d]        # 44ae17 <flatcc_builder_padding_base@@Base+0x1077>
  42b8da:	lea    rsi,[rip+0x1e701]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b8e1:	lea    rcx,[rip+0x1f4ec]        # 44add4 <flatcc_builder_padding_base@@Base+0x1034>
  42b8e8:	mov    edx,0x6c5
  42b8ed:	call   406100 <__assert_fail@plt>
  42b8f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b8fc:	nop    DWORD PTR [rax+0x0]

000000000042b900 <flatcc_builder_string_edit@@Base>:
  42b900:	mov    rax,QWORD PTR [rdi+0x18]
  42b904:	ret    
  42b905:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b90f:	nop

000000000042b910 <flatcc_builder_string_len@@Base>:
  42b910:	mov    rax,QWORD PTR [rdi+0x30]
  42b914:	mov    eax,DWORD PTR [rax+0x14]
  42b917:	ret    
  42b918:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b920 <flatcc_builder_table_edit@@Base>:
  42b920:	push   rax
  42b921:	mov    rax,QWORD PTR [rdi+0x30]
  42b925:	cmp    WORD PTR [rax+0xe],0x3
  42b92a:	jne    42b938 <flatcc_builder_table_edit@@Base+0x18>
  42b92c:	mov    eax,DWORD PTR [rdi+0x20]
  42b92f:	add    rax,QWORD PTR [rdi+0x18]
  42b933:	sub    rax,rsi
  42b936:	pop    rcx
  42b937:	ret    
  42b938:	lea    rdi,[rip+0x1eed2]        # 44a811 <flatcc_builder_padding_base@@Base+0xa71>
  42b93f:	lea    rsi,[rip+0x1e69c]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42b946:	lea    rcx,[rip+0x1f57c]        # 44aec9 <flatcc_builder_padding_base@@Base+0x1129>
  42b94d:	mov    edx,0x702
  42b952:	call   406100 <__assert_fail@plt>
  42b957:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b960 <flatcc_builder_table_add_copy@@Base>:
  42b960:	push   r15
  42b962:	push   r14
  42b964:	push   rbx
  42b965:	mov    r15,rcx
  42b968:	mov    r14,rdx
  42b96b:	mov    rdx,rcx
  42b96e:	mov    ecx,r8d
  42b971:	call   42a8d0 <flatcc_builder_table_add@@Base>
  42b976:	mov    rbx,rax
  42b979:	test   rax,rax
  42b97c:	je     42b98c <flatcc_builder_table_add_copy@@Base+0x2c>
  42b97e:	mov    rdi,rbx
  42b981:	mov    rsi,r14
  42b984:	mov    rdx,r15
  42b987:	call   4061a0 <memcpy@plt>
  42b98c:	mov    rax,rbx
  42b98f:	pop    rbx
  42b990:	pop    r14
  42b992:	pop    r15
  42b994:	ret    
  42b995:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b99f:	nop

000000000042b9a0 <flatcc_builder_push_buffer_alignment@@Base>:
  42b9a0:	movzx  eax,WORD PTR [rdi+0xe8]
  42b9a7:	mov    WORD PTR [rdi+0xe8],0x4
  42b9b0:	ret    
  42b9b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b9c0 <flatcc_builder_pop_buffer_alignment@@Base>:
  42b9c0:	cmp    WORD PTR [rdi+0xe8],si
  42b9c7:	jae    42b9d0 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  42b9c9:	mov    WORD PTR [rdi+0xe8],si
  42b9d0:	ret    
  42b9d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b9e0 <flatcc_builder_get_buffer_alignment@@Base>:
  42b9e0:	movzx  eax,WORD PTR [rdi+0xe8]
  42b9e7:	ret    
  42b9e8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b9f0 <flatcc_builder_set_vtable_clustering@@Base>:
  42b9f0:	xor    eax,eax
  42b9f2:	test   esi,esi
  42b9f4:	sete   al
  42b9f7:	mov    DWORD PTR [rdi+0x124],eax
  42b9fd:	ret    
  42b9fe:	xchg   ax,ax

000000000042ba00 <flatcc_builder_set_block_align@@Base>:
  42ba00:	mov    WORD PTR [rdi+0xec],si
  42ba07:	ret    
  42ba08:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ba10 <flatcc_builder_get_level@@Base>:
  42ba10:	mov    eax,DWORD PTR [rdi+0x104]
  42ba16:	ret    
  42ba17:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ba20 <flatcc_builder_set_max_level@@Base>:
  42ba20:	mov    DWORD PTR [rdi+0x120],esi
  42ba26:	cmp    DWORD PTR [rdi+0x108],esi
  42ba2c:	jge    42ba34 <flatcc_builder_set_max_level@@Base+0x14>
  42ba2e:	mov    DWORD PTR [rdi+0x108],esi
  42ba34:	ret    
  42ba35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba3f:	nop

000000000042ba40 <flatcc_builder_get_buffer_size@@Base>:
  42ba40:	movsxd rax,DWORD PTR [rdi+0xf4]
  42ba47:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42ba4e:	sub    rax,rcx
  42ba51:	ret    
  42ba52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba5c:	nop    DWORD PTR [rax+0x0]

000000000042ba60 <flatcc_builder_get_buffer_start@@Base>:
  42ba60:	mov    eax,DWORD PTR [rdi+0xf0]
  42ba66:	ret    
  42ba67:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ba70 <flatcc_builder_get_buffer_end@@Base>:
  42ba70:	mov    eax,DWORD PTR [rdi+0xf4]
  42ba76:	ret    
  42ba77:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ba80 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42ba80:	mov    QWORD PTR [rdi+0x118],rsi
  42ba87:	ret    
  42ba88:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ba90 <flatcc_builder_set_identifier@@Base>:
  42ba90:	test   rsi,rsi
  42ba93:	jne    42ba9c <flatcc_builder_set_identifier@@Base+0xc>
  42ba95:	lea    rsi,[rip+0x1e304]        # 449da0 <flatcc_builder_padding_base@@Base>
  42ba9c:	mov    eax,DWORD PTR [rsi]
  42ba9e:	mov    DWORD PTR [rdi+0x110],eax
  42baa4:	ret    
  42baa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42baaf:	nop

000000000042bab0 <flatcc_builder_get_type@@Base>:
  42bab0:	mov    rax,QWORD PTR [rdi+0x30]
  42bab4:	test   rax,rax
  42bab7:	je     42babe <flatcc_builder_get_type@@Base+0xe>
  42bab9:	movzx  eax,WORD PTR [rax+0xe]
  42babd:	ret    
  42babe:	xor    eax,eax
  42bac0:	ret    
  42bac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bacb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bad0 <flatcc_builder_get_type_at@@Base>:
  42bad0:	xor    eax,eax
  42bad2:	test   esi,esi
  42bad4:	jle    42baf2 <flatcc_builder_get_type_at@@Base+0x22>
  42bad6:	mov    ecx,DWORD PTR [rdi+0x104]
  42badc:	cmp    ecx,esi
  42bade:	jl     42baf2 <flatcc_builder_get_type_at@@Base+0x22>
  42bae0:	mov    rax,QWORD PTR [rdi+0x30]
  42bae4:	sub    esi,ecx
  42bae6:	movsxd rcx,esi
  42bae9:	lea    rcx,[rcx+rcx*8]
  42baed:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  42baf2:	ret    
  42baf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bafd:	nop    DWORD PTR [rax]

000000000042bb00 <flatcc_builder_get_direct_buffer@@Base>:
  42bb00:	cmp    DWORD PTR [rdi+0x128],0x0
  42bb07:	je     42bb19 <flatcc_builder_get_direct_buffer@@Base+0x19>
  42bb09:	mov    rax,QWORD PTR [rdi+0x130]
  42bb10:	cmp    rax,QWORD PTR [rdi+0x138]
  42bb17:	je     42bb28 <flatcc_builder_get_direct_buffer@@Base+0x28>
  42bb19:	test   rsi,rsi
  42bb1c:	je     42bb25 <flatcc_builder_get_direct_buffer@@Base+0x25>
  42bb1e:	mov    QWORD PTR [rsi],0x0
  42bb25:	xor    eax,eax
  42bb27:	ret    
  42bb28:	test   rsi,rsi
  42bb2b:	je     42bb37 <flatcc_builder_get_direct_buffer@@Base+0x37>
  42bb2d:	mov    rax,QWORD PTR [rdi+0x160]
  42bb34:	mov    QWORD PTR [rsi],rax
  42bb37:	mov    rax,QWORD PTR [rdi+0x140]
  42bb3e:	ret    
  42bb3f:	nop

000000000042bb40 <flatcc_builder_copy_buffer@@Base>:
  42bb40:	push   rax
  42bb41:	cmp    DWORD PTR [rdi+0x128],0x0
  42bb48:	je     42bb5d <flatcc_builder_copy_buffer@@Base+0x1d>
  42bb4a:	add    rdi,0x130
  42bb51:	call   42c3c0 <flatcc_emitter_copy_buffer@@Base>
  42bb56:	test   rax,rax
  42bb59:	je     42bb61 <flatcc_builder_copy_buffer@@Base+0x21>
  42bb5b:	pop    rcx
  42bb5c:	ret    
  42bb5d:	xor    eax,eax
  42bb5f:	pop    rcx
  42bb60:	ret    
  42bb61:	lea    rdi,[rip+0x1e6e8]        # 44a250 <flatcc_builder_padding_base@@Base+0x4b0>
  42bb68:	lea    rsi,[rip+0x1e473]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42bb6f:	lea    rcx,[rip+0x1f3de]        # 44af54 <flatcc_builder_padding_base@@Base+0x11b4>
  42bb76:	mov    edx,0x786
  42bb7b:	call   406100 <__assert_fail@plt>

000000000042bb80 <flatcc_builder_finalize_buffer@@Base>:
  42bb80:	push   r15
  42bb82:	push   r14
  42bb84:	push   rbx
  42bb85:	mov    rbx,rdi
  42bb88:	movsxd r14,DWORD PTR [rdi+0xf4]
  42bb8f:	movsxd rax,DWORD PTR [rdi+0xf0]
  42bb96:	sub    r14,rax
  42bb99:	test   rsi,rsi
  42bb9c:	je     42bba1 <flatcc_builder_finalize_buffer@@Base+0x21>
  42bb9e:	mov    QWORD PTR [rsi],r14
  42bba1:	mov    rdi,r14
  42bba4:	call   4061b0 <malloc@plt>
  42bba9:	test   rax,rax
  42bbac:	je     42bbdd <flatcc_builder_finalize_buffer@@Base+0x5d>
  42bbae:	cmp    DWORD PTR [rbx+0x128],0x0
  42bbb5:	je     42bbfc <flatcc_builder_finalize_buffer@@Base+0x7c>
  42bbb7:	mov    r15,rax
  42bbba:	add    rbx,0x130
  42bbc1:	mov    rdi,rbx
  42bbc4:	mov    rsi,rax
  42bbc7:	mov    rdx,r14
  42bbca:	call   42c3c0 <flatcc_emitter_copy_buffer@@Base>
  42bbcf:	test   rax,rax
  42bbd2:	je     42bc1b <flatcc_builder_finalize_buffer@@Base+0x9b>
  42bbd4:	mov    rax,r15
  42bbd7:	pop    rbx
  42bbd8:	pop    r14
  42bbda:	pop    r15
  42bbdc:	ret    
  42bbdd:	lea    rdi,[rip+0x14fab]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42bbe4:	lea    rsi,[rip+0x1e3f7]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42bbeb:	lea    rcx,[rip+0x1f3a7]        # 44af99 <flatcc_builder_padding_base@@Base+0x11f9>
  42bbf2:	mov    edx,0x798
  42bbf7:	call   406100 <__assert_fail@plt>
  42bbfc:	lea    rdi,[rip+0x14f8c]        # 440b8f <_IO_stdin_used@@Base+0x12b8f>
  42bc03:	lea    rsi,[rip+0x1e3d8]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42bc0a:	lea    rcx,[rip+0x1f388]        # 44af99 <flatcc_builder_padding_base@@Base+0x11f9>
  42bc11:	mov    edx,0x79c
  42bc16:	call   406100 <__assert_fail@plt>
  42bc1b:	lea    rdi,[rip+0x1e62e]        # 44a250 <flatcc_builder_padding_base@@Base+0x4b0>
  42bc22:	lea    rsi,[rip+0x1e3b9]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42bc29:	lea    rcx,[rip+0x1f324]        # 44af54 <flatcc_builder_padding_base@@Base+0x11b4>
  42bc30:	mov    edx,0x786
  42bc35:	call   406100 <__assert_fail@plt>
  42bc3a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bc40 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42bc40:	push   r15
  42bc42:	push   r14
  42bc44:	push   r12
  42bc46:	push   rbx
  42bc47:	push   rax
  42bc48:	mov    r14,rsi
  42bc4b:	mov    r15,rdi
  42bc4e:	movsxd rax,DWORD PTR [rdi+0xf4]
  42bc55:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42bc5c:	sub    rax,rcx
  42bc5f:	test   rsi,rsi
  42bc62:	je     42bc67 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  42bc64:	mov    QWORD PTR [r14],rax
  42bc67:	movzx  ecx,WORD PTR [r15+0xe8]
  42bc6f:	add    rax,rcx
  42bc72:	add    rax,0xffffffffffffffff
  42bc76:	mov    rbx,rcx
  42bc79:	neg    rbx
  42bc7c:	and    rbx,rax
  42bc7f:	cmp    rcx,0x8
  42bc83:	mov    QWORD PTR [rsp],0x0
  42bc8b:	mov    esi,0x8
  42bc90:	cmova  rsi,rcx
  42bc94:	mov    rdi,rsp
  42bc97:	mov    rdx,rbx
  42bc9a:	call   406240 <posix_memalign@plt>
  42bc9f:	mov    r12,QWORD PTR [rsp]
  42bca3:	test   eax,eax
  42bca5:	je     42bcb6 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42bca7:	test   r12,r12
  42bcaa:	je     42bcb6 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42bcac:	mov    rdi,r12
  42bcaf:	call   406040 <free@plt>
  42bcb4:	jmp    42bcfe <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42bcb6:	test   r12,r12
  42bcb9:	je     42bcfe <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42bcbb:	cmp    DWORD PTR [r15+0x128],0x0
  42bcc3:	je     42bcac <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  42bcc5:	add    r15,0x130
  42bccc:	mov    rdi,r15
  42bccf:	mov    rsi,r12
  42bcd2:	mov    rdx,rbx
  42bcd5:	call   42c3c0 <flatcc_emitter_copy_buffer@@Base>
  42bcda:	test   rax,rax
  42bcdd:	jne    42bd0d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  42bcdf:	lea    rdi,[rip+0x1e56a]        # 44a250 <flatcc_builder_padding_base@@Base+0x4b0>
  42bce6:	lea    rsi,[rip+0x1e2f5]        # 449fe2 <flatcc_builder_padding_base@@Base+0x242>
  42bced:	lea    rcx,[rip+0x1f260]        # 44af54 <flatcc_builder_padding_base@@Base+0x11b4>
  42bcf4:	mov    edx,0x786
  42bcf9:	call   406100 <__assert_fail@plt>
  42bcfe:	test   r14,r14
  42bd01:	je     42bd0a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  42bd03:	mov    QWORD PTR [r14],0x0
  42bd0a:	xor    r12d,r12d
  42bd0d:	mov    rax,r12
  42bd10:	add    rsp,0x8
  42bd14:	pop    rbx
  42bd15:	pop    r12
  42bd17:	pop    r14
  42bd19:	pop    r15
  42bd1b:	ret    
  42bd1c:	nop    DWORD PTR [rax+0x0]

000000000042bd20 <flatcc_builder_aligned_alloc@@Base>:
  42bd20:	push   rax
  42bd21:	mov    rdx,rsi
  42bd24:	mov    QWORD PTR [rsp],0x0
  42bd2c:	cmp    rdi,0x8
  42bd30:	mov    esi,0x8
  42bd35:	cmova  rsi,rdi
  42bd39:	mov    rdi,rsp
  42bd3c:	call   406240 <posix_memalign@plt>
  42bd41:	mov    ecx,eax
  42bd43:	mov    rax,QWORD PTR [rsp]
  42bd47:	test   ecx,ecx
  42bd49:	je     42bd62 <flatcc_builder_aligned_alloc@@Base+0x42>
  42bd4b:	test   rax,rax
  42bd4e:	je     42bd62 <flatcc_builder_aligned_alloc@@Base+0x42>
  42bd50:	mov    rdi,rax
  42bd53:	call   406040 <free@plt>
  42bd58:	mov    QWORD PTR [rsp],0x0
  42bd60:	xor    eax,eax
  42bd62:	pop    rcx
  42bd63:	ret    
  42bd64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd6e:	xchg   ax,ax

000000000042bd70 <flatcc_builder_aligned_free@@Base>:
  42bd70:	jmp    406040 <free@plt>
  42bd75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd7f:	nop

000000000042bd80 <flatcc_builder_get_emit_context@@Base>:
  42bd80:	mov    rax,QWORD PTR [rdi+0x38]
  42bd84:	ret    
  42bd85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd8f:	nop

000000000042bd90 <flatcc_emitter_recycle_page@@Base>:
  42bd90:	mov    rcx,QWORD PTR [rdi]
  42bd93:	mov    eax,0xffffffff
  42bd98:	cmp    rcx,rsi
  42bd9b:	je     42bdf2 <flatcc_emitter_recycle_page@@Base+0x62>
  42bd9d:	cmp    QWORD PTR [rdi+0x8],rsi
  42bda1:	je     42bdf2 <flatcc_emitter_recycle_page@@Base+0x62>
  42bda3:	mov    rax,QWORD PTR [rsi+0xb80]
  42bdaa:	mov    rdx,QWORD PTR [rsi+0xb88]
  42bdb1:	mov    QWORD PTR [rax+0xb88],rdx
  42bdb8:	mov    rdx,QWORD PTR [rsi+0xb88]
  42bdbf:	mov    QWORD PTR [rdx+0xb80],rax
  42bdc6:	mov    rax,QWORD PTR [rcx+0xb88]
  42bdcd:	mov    QWORD PTR [rsi+0xb88],rax
  42bdd4:	mov    QWORD PTR [rsi+0xb80],rcx
  42bddb:	mov    QWORD PTR [rax+0xb80],rsi
  42bde2:	mov    rax,QWORD PTR [rsi+0xb80]
  42bde9:	mov    QWORD PTR [rax+0xb88],rsi
  42bdf0:	xor    eax,eax
  42bdf2:	ret    
  42bdf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bdfd:	nop    DWORD PTR [rax]

000000000042be00 <flatcc_emitter_reset@@Base>:
  42be00:	push   r14
  42be02:	push   rbx
  42be03:	push   rax
  42be04:	mov    rax,QWORD PTR [rdi]
  42be07:	test   rax,rax
  42be0a:	je     42beeb <flatcc_emitter_reset@@Base+0xeb>
  42be10:	mov    rbx,rdi
  42be13:	mov    QWORD PTR [rdi+0x8],rax
  42be17:	lea    rcx,[rax+0x5c0]
  42be1e:	mov    QWORD PTR [rdi+0x10],rcx
  42be22:	mov    QWORD PTR [rdi+0x20],rcx
  42be26:	mov    QWORD PTR [rdi+0x18],0x5c0
  42be2e:	mov    QWORD PTR [rdi+0x28],0x5c0
  42be36:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42be40:	mov    rcx,QWORD PTR [rdi+0x30]
  42be44:	mov    rdx,QWORD PTR [rdi+0x40]
  42be48:	test   rdx,rdx
  42be4b:	jne    42be54 <flatcc_emitter_reset@@Base+0x54>
  42be4d:	mov    QWORD PTR [rbx+0x40],rcx
  42be51:	mov    rdx,rcx
  42be54:	lea    rdx,[rdx+rdx*2]
  42be58:	shr    rdx,0x2
  42be5c:	shr    rcx,0x2
  42be60:	add    rcx,rdx
  42be63:	mov    QWORD PTR [rbx+0x40],rcx
  42be67:	mov    QWORD PTR [rbx+0x30],0x0
  42be6f:	add    rcx,rcx
  42be72:	cmp    rcx,QWORD PTR [rbx+0x38]
  42be76:	jae    42beeb <flatcc_emitter_reset@@Base+0xeb>
  42be78:	mov    rdi,QWORD PTR [rax+0xb80]
  42be7f:	cmp    rdi,rax
  42be82:	je     42beeb <flatcc_emitter_reset@@Base+0xeb>
  42be84:	lea    rcx,[rax+0xb80]
  42be8b:	mov    r14,0xfffffffffffff480
  42be92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be9c:	nop    DWORD PTR [rax+0x0]
  42bea0:	mov    rdx,QWORD PTR [rdi+0xb80]
  42bea7:	mov    QWORD PTR [rcx],rdx
  42beaa:	mov    rcx,QWORD PTR [rdi+0xb80]
  42beb1:	mov    QWORD PTR [rcx+0xb88],rax
  42beb8:	call   406040 <free@plt>
  42bebd:	mov    rax,QWORD PTR [rbx+0x38]
  42bec1:	add    rax,r14
  42bec4:	mov    QWORD PTR [rbx+0x38],rax
  42bec8:	mov    rcx,QWORD PTR [rbx+0x40]
  42becc:	add    rcx,rcx
  42becf:	cmp    rcx,rax
  42bed2:	jae    42beeb <flatcc_emitter_reset@@Base+0xeb>
  42bed4:	mov    rax,QWORD PTR [rbx+0x8]
  42bed8:	lea    rcx,[rax+0xb80]
  42bedf:	mov    rdi,QWORD PTR [rax+0xb80]
  42bee6:	cmp    rdi,QWORD PTR [rbx]
  42bee9:	jne    42bea0 <flatcc_emitter_reset@@Base+0xa0>
  42beeb:	add    rsp,0x8
  42beef:	pop    rbx
  42bef0:	pop    r14
  42bef2:	ret    
  42bef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42befd:	nop    DWORD PTR [rax]

000000000042bf00 <flatcc_emitter_clear@@Base>:
  42bf00:	push   r14
  42bf02:	push   rbx
  42bf03:	push   rax
  42bf04:	mov    rbx,QWORD PTR [rdi]
  42bf07:	test   rbx,rbx
  42bf0a:	je     42bf6c <flatcc_emitter_clear@@Base+0x6c>
  42bf0c:	mov    r14,rdi
  42bf0f:	mov    rax,QWORD PTR [rbx+0xb88]
  42bf16:	mov    QWORD PTR [rax+0xb80],0x0
  42bf21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bf30:	mov    rax,QWORD PTR [rbx+0xb80]
  42bf37:	test   rax,rax
  42bf3a:	je     42bf4d <flatcc_emitter_clear@@Base+0x4d>
  42bf3c:	mov    rbx,rax
  42bf3f:	mov    rdi,QWORD PTR [rax+0xb88]
  42bf46:	call   406040 <free@plt>
  42bf4b:	jmp    42bf30 <flatcc_emitter_clear@@Base+0x30>
  42bf4d:	mov    rdi,rbx
  42bf50:	call   406040 <free@plt>
  42bf55:	vxorps xmm0,xmm0,xmm0
  42bf59:	vmovups YMMWORD PTR [r14+0x20],ymm0
  42bf5f:	vmovups YMMWORD PTR [r14],ymm0
  42bf64:	mov    QWORD PTR [r14+0x40],0x0
  42bf6c:	add    rsp,0x8
  42bf70:	pop    rbx
  42bf71:	pop    r14
  42bf73:	vzeroupper 
  42bf76:	ret    
  42bf77:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bf80 <flatcc_emitter@@Base>:
  42bf80:	push   rbp
  42bf81:	push   r15
  42bf83:	push   r14
  42bf85:	push   r13
  42bf87:	push   r12
  42bf89:	push   rbx
  42bf8a:	push   rax
  42bf8b:	mov    r14d,edx
  42bf8e:	mov    r12,rsi
  42bf91:	mov    rbp,rdi
  42bf94:	add    QWORD PTR [rdi+0x30],r8
  42bf98:	test   ecx,ecx
  42bf9a:	js     42c115 <flatcc_emitter@@Base+0x195>
  42bfa0:	mov    rdx,QWORD PTR [rbp+0x28]
  42bfa4:	cmp    rdx,r8
  42bfa7:	jae    42c2c8 <flatcc_emitter@@Base+0x348>
  42bfad:	xor    eax,eax
  42bfaf:	test   r14d,r14d
  42bfb2:	je     42c3a7 <flatcc_emitter@@Base+0x427>
  42bfb8:	mov    r15,QWORD PTR [r12+0x8]
  42bfbd:	test   r15,r15
  42bfc0:	je     42c100 <flatcc_emitter@@Base+0x180>
  42bfc6:	mov    r13,QWORD PTR [r12]
  42bfca:	jmp    42bff9 <flatcc_emitter@@Base+0x79>
  42bfcc:	mov    rbx,r15
  42bfcf:	mov    rdi,QWORD PTR [rbp+0x20]
  42bfd3:	mov    rsi,r13
  42bfd6:	mov    rdx,rbx
  42bfd9:	call   4061a0 <memcpy@plt>
  42bfde:	add    QWORD PTR [rbp+0x20],rbx
  42bfe2:	add    r13,rbx
  42bfe5:	mov    rdx,QWORD PTR [rbp+0x28]
  42bfe9:	sub    rdx,rbx
  42bfec:	mov    QWORD PTR [rbp+0x28],rdx
  42bff0:	sub    r15,rbx
  42bff3:	je     42c100 <flatcc_emitter@@Base+0x180>
  42bff9:	mov    rbx,r15
  42bffc:	cmp    r15,rdx
  42bfff:	jbe    42bfcf <flatcc_emitter@@Base+0x4f>
  42c001:	mov    rbx,rdx
  42c004:	test   rbx,rbx
  42c007:	je     42c071 <flatcc_emitter@@Base+0xf1>
  42c009:	jmp    42bfcf <flatcc_emitter@@Base+0x4f>
  42c00b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c010:	mov    QWORD PTR [rax+0xb88],rbx
  42c017:	mov    rcx,QWORD PTR [rbp+0x0]
  42c01b:	mov    QWORD PTR [rax+0xb80],rcx
  42c022:	mov    QWORD PTR [rcx+0xb88],rax
  42c029:	mov    QWORD PTR [rbx+0xb80],rax
  42c030:	mov    QWORD PTR [rbp+0x8],rax
  42c034:	mov    QWORD PTR [rbp+0x20],rax
  42c038:	mov    QWORD PTR [rbp+0x28],0xb80
  42c040:	mov    rcx,QWORD PTR [rax+0xb88]
  42c047:	mov    ecx,DWORD PTR [rcx+0xb90]
  42c04d:	mov    edx,0xb80
  42c052:	add    ecx,edx
  42c054:	mov    DWORD PTR [rax+0xb90],ecx
  42c05a:	mov    ebx,0xb80
  42c05f:	cmp    r15,rbx
  42c062:	jbe    42bfcc <flatcc_emitter@@Base+0x4c>
  42c068:	test   rbx,rbx
  42c06b:	jne    42bfcf <flatcc_emitter@@Base+0x4f>
  42c071:	mov    rbx,QWORD PTR [rbp+0x8]
  42c075:	test   rbx,rbx
  42c078:	je     42c087 <flatcc_emitter@@Base+0x107>
  42c07a:	mov    rax,QWORD PTR [rbx+0xb80]
  42c081:	cmp    rax,QWORD PTR [rbp+0x0]
  42c085:	jne    42c030 <flatcc_emitter@@Base+0xb0>
  42c087:	mov    edi,0xb98
  42c08c:	call   4061b0 <malloc@plt>
  42c091:	test   rax,rax
  42c094:	je     42c2da <flatcc_emitter@@Base+0x35a>
  42c09a:	add    QWORD PTR [rbp+0x38],0xb80
  42c0a2:	test   rbx,rbx
  42c0a5:	jne    42c010 <flatcc_emitter@@Base+0x90>
  42c0ab:	mov    QWORD PTR [rbp+0x0],rax
  42c0af:	mov    QWORD PTR [rbp+0x8],rax
  42c0b3:	mov    QWORD PTR [rax+0xb80],rax
  42c0ba:	mov    QWORD PTR [rax+0xb88],rax
  42c0c1:	mov    rcx,rax
  42c0c4:	add    rcx,0x5c0
  42c0cb:	mov    QWORD PTR [rbp+0x10],rcx
  42c0cf:	mov    QWORD PTR [rbp+0x20],rcx
  42c0d3:	mov    QWORD PTR [rbp+0x18],0x5c0
  42c0db:	mov    QWORD PTR [rbp+0x28],0x5c0
  42c0e3:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42c0ed:	mov    ebx,0x5c0
  42c0f2:	cmp    r15,rbx
  42c0f5:	ja     42c068 <flatcc_emitter@@Base+0xe8>
  42c0fb:	jmp    42bfcc <flatcc_emitter@@Base+0x4c>
  42c100:	dec    r14d
  42c103:	add    r12,0x10
  42c107:	test   r14d,r14d
  42c10a:	jne    42bfb8 <flatcc_emitter@@Base+0x38>
  42c110:	jmp    42c3a5 <flatcc_emitter@@Base+0x425>
  42c115:	lea    rsi,[rbp+0x18]
  42c119:	mov    rdx,QWORD PTR [rbp+0x18]
  42c11d:	cmp    rdx,r8
  42c120:	jae    42c2e4 <flatcc_emitter@@Base+0x364>
  42c126:	xor    eax,eax
  42c128:	test   r14d,r14d
  42c12b:	je     42c3a7 <flatcc_emitter@@Base+0x427>
  42c131:	mov    QWORD PTR [rsp],rsi
  42c135:	movsxd rax,r14d
  42c138:	shl    rax,0x4
  42c13c:	add    r12,rax
  42c13f:	mov    edx,0xfffff480
  42c144:	mov    r15,QWORD PTR [r12-0x8]
  42c149:	add    r12,0xfffffffffffffff0
  42c14d:	test   r15,r15
  42c150:	je     42c2ba <flatcc_emitter@@Base+0x33a>
  42c156:	mov    r13,QWORD PTR [r12]
  42c15a:	add    r13,r15
  42c15d:	jmp    42c191 <flatcc_emitter@@Base+0x211>
  42c15f:	nop
  42c160:	mov    rbx,r15
  42c163:	mov    rdi,QWORD PTR [rbp+0x10]
  42c167:	sub    rdi,rbx
  42c16a:	mov    QWORD PTR [rbp+0x10],rdi
  42c16e:	sub    rax,rbx
  42c171:	mov    QWORD PTR [rbp+0x18],rax
  42c175:	sub    r13,rbx
  42c178:	mov    rsi,r13
  42c17b:	mov    rdx,rbx
  42c17e:	call   4061a0 <memcpy@plt>
  42c183:	mov    edx,0xfffff480
  42c188:	sub    r15,rbx
  42c18b:	je     42c2ba <flatcc_emitter@@Base+0x33a>
  42c191:	mov    rax,QWORD PTR [rsp]
  42c195:	mov    rax,QWORD PTR [rax]
  42c198:	cmp    r15,rax
  42c19b:	ja     42c1e8 <flatcc_emitter@@Base+0x268>
  42c19d:	jmp    42c160 <flatcc_emitter@@Base+0x1e0>
  42c19f:	nop
  42c1a0:	mov    ecx,DWORD PTR [rbx+0xb90]
  42c1a6:	add    ecx,edx
  42c1a8:	mov    DWORD PTR [rax+0xb90],ecx
  42c1ae:	mov    QWORD PTR [rbp+0x0],rax
  42c1b2:	lea    rcx,[rax+0xb80]
  42c1b9:	mov    QWORD PTR [rbp+0x10],rcx
  42c1bd:	mov    QWORD PTR [rbp+0x18],0xb80
  42c1c5:	mov    rcx,QWORD PTR [rax+0xb80]
  42c1cc:	mov    ecx,DWORD PTR [rcx+0xb90]
  42c1d2:	add    ecx,edx
  42c1d4:	mov    DWORD PTR [rax+0xb90],ecx
  42c1da:	mov    eax,0xb80
  42c1df:	cmp    r15,rax
  42c1e2:	jbe    42c160 <flatcc_emitter@@Base+0x1e0>
  42c1e8:	mov    rbx,rax
  42c1eb:	test   rax,rax
  42c1ee:	jne    42c163 <flatcc_emitter@@Base+0x1e3>
  42c1f4:	mov    rbx,QWORD PTR [rbp+0x0]
  42c1f8:	test   rbx,rbx
  42c1fb:	je     42c20a <flatcc_emitter@@Base+0x28a>
  42c1fd:	mov    rax,QWORD PTR [rbx+0xb88]
  42c204:	cmp    rax,QWORD PTR [rbp+0x8]
  42c208:	jne    42c1a0 <flatcc_emitter@@Base+0x220>
  42c20a:	mov    edi,0xb98
  42c20f:	call   4061b0 <malloc@plt>
  42c214:	test   rax,rax
  42c217:	je     42c2da <flatcc_emitter@@Base+0x35a>
  42c21d:	add    QWORD PTR [rbp+0x38],0xb80
  42c225:	test   rbx,rbx
  42c228:	je     42c260 <flatcc_emitter@@Base+0x2e0>
  42c22a:	mov    rcx,QWORD PTR [rbp+0x8]
  42c22e:	mov    QWORD PTR [rax+0xb88],rcx
  42c235:	mov    QWORD PTR [rax+0xb80],rbx
  42c23c:	mov    QWORD PTR [rbx+0xb88],rax
  42c243:	mov    QWORD PTR [rcx+0xb80],rax
  42c24a:	mov    QWORD PTR [rbp+0x0],rax
  42c24e:	mov    edx,0xfffff480
  42c253:	jmp    42c1b2 <flatcc_emitter@@Base+0x232>
  42c258:	nop    DWORD PTR [rax+rax*1+0x0]
  42c260:	mov    QWORD PTR [rbp+0x0],rax
  42c264:	mov    QWORD PTR [rbp+0x8],rax
  42c268:	mov    QWORD PTR [rax+0xb80],rax
  42c26f:	mov    QWORD PTR [rax+0xb88],rax
  42c276:	mov    rcx,rax
  42c279:	add    rcx,0x5c0
  42c280:	mov    QWORD PTR [rbp+0x10],rcx
  42c284:	mov    QWORD PTR [rbp+0x20],rcx
  42c288:	mov    QWORD PTR [rbp+0x18],0x5c0
  42c290:	mov    QWORD PTR [rbp+0x28],0x5c0
  42c298:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42c2a2:	mov    eax,0x5c0
  42c2a7:	mov    edx,0xfffff480
  42c2ac:	cmp    r15,rax
  42c2af:	ja     42c1e8 <flatcc_emitter@@Base+0x268>
  42c2b5:	jmp    42c160 <flatcc_emitter@@Base+0x1e0>
  42c2ba:	dec    r14d
  42c2bd:	jne    42c144 <flatcc_emitter@@Base+0x1c4>
  42c2c3:	jmp    42c3a5 <flatcc_emitter@@Base+0x425>
  42c2c8:	lea    rsi,[rbp+0x28]
  42c2cc:	mov    rbx,QWORD PTR [rbp+0x20]
  42c2d0:	lea    rcx,[rbx+r8*1]
  42c2d4:	mov    QWORD PTR [rbp+0x20],rcx
  42c2d8:	jmp    42c2ef <flatcc_emitter@@Base+0x36f>
  42c2da:	mov    eax,0xffffffff
  42c2df:	jmp    42c3a7 <flatcc_emitter@@Base+0x427>
  42c2e4:	mov    rbx,QWORD PTR [rbp+0x10]
  42c2e8:	sub    rbx,r8
  42c2eb:	mov    QWORD PTR [rbp+0x10],rbx
  42c2ef:	sub    rdx,r8
  42c2f2:	mov    QWORD PTR [rsi],rdx
  42c2f5:	xor    eax,eax
  42c2f7:	test   r14d,r14d
  42c2fa:	je     42c3a7 <flatcc_emitter@@Base+0x427>
  42c300:	lea    r15d,[r14-0x1]
  42c304:	mov    r13d,r14d
  42c307:	and    r13d,0x3
  42c30b:	je     42c334 <flatcc_emitter@@Base+0x3b4>
  42c30d:	xor    ebp,ebp
  42c30f:	nop
  42c310:	mov    rsi,QWORD PTR [r12]
  42c314:	mov    rdx,QWORD PTR [r12+0x8]
  42c319:	mov    rdi,rbx
  42c31c:	call   4061a0 <memcpy@plt>
  42c321:	add    rbx,QWORD PTR [r12+0x8]
  42c326:	add    r12,0x10
  42c32a:	inc    ebp
  42c32c:	cmp    r13d,ebp
  42c32f:	jne    42c310 <flatcc_emitter@@Base+0x390>
  42c331:	sub    r14d,ebp
  42c334:	cmp    r15d,0x3
  42c338:	jb     42c3a5 <flatcc_emitter@@Base+0x425>
  42c33a:	nop    WORD PTR [rax+rax*1+0x0]
  42c340:	mov    rsi,QWORD PTR [r12]
  42c344:	mov    rdx,QWORD PTR [r12+0x8]
  42c349:	mov    rdi,rbx
  42c34c:	call   4061a0 <memcpy@plt>
  42c351:	add    rbx,QWORD PTR [r12+0x8]
  42c356:	mov    rsi,QWORD PTR [r12+0x10]
  42c35b:	mov    rdx,QWORD PTR [r12+0x18]
  42c360:	mov    rdi,rbx
  42c363:	call   4061a0 <memcpy@plt>
  42c368:	add    rbx,QWORD PTR [r12+0x18]
  42c36d:	mov    rsi,QWORD PTR [r12+0x20]
  42c372:	mov    rdx,QWORD PTR [r12+0x28]
  42c377:	mov    rdi,rbx
  42c37a:	call   4061a0 <memcpy@plt>
  42c37f:	add    rbx,QWORD PTR [r12+0x28]
  42c384:	mov    rsi,QWORD PTR [r12+0x30]
  42c389:	mov    rdx,QWORD PTR [r12+0x38]
  42c38e:	mov    rdi,rbx
  42c391:	call   4061a0 <memcpy@plt>
  42c396:	add    rbx,QWORD PTR [r12+0x38]
  42c39b:	add    r12,0x40
  42c39f:	add    r14d,0xfffffffc
  42c3a3:	jne    42c340 <flatcc_emitter@@Base+0x3c0>
  42c3a5:	xor    eax,eax
  42c3a7:	add    rsp,0x8
  42c3ab:	pop    rbx
  42c3ac:	pop    r12
  42c3ae:	pop    r13
  42c3b0:	pop    r14
  42c3b2:	pop    r15
  42c3b4:	pop    rbp
  42c3b5:	ret    
  42c3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042c3c0 <flatcc_emitter_copy_buffer@@Base>:
  42c3c0:	push   r15
  42c3c2:	push   r14
  42c3c4:	push   r13
  42c3c6:	push   r12
  42c3c8:	push   rbx
  42c3c9:	mov    rax,rdx
  42c3cc:	mov    rdx,QWORD PTR [rdi+0x30]
  42c3d0:	cmp    rdx,rax
  42c3d3:	ja     42c46b <flatcc_emitter_copy_buffer@@Base+0xab>
  42c3d9:	mov    r14,rdi
  42c3dc:	mov    rax,QWORD PTR [rdi]
  42c3df:	test   rax,rax
  42c3e2:	je     42c46b <flatcc_emitter_copy_buffer@@Base+0xab>
  42c3e8:	mov    r12,rsi
  42c3eb:	cmp    rax,QWORD PTR [r14+0x8]
  42c3ef:	je     42c47b <flatcc_emitter_copy_buffer@@Base+0xbb>
  42c3f5:	mov    r15d,0xb80
  42c3fb:	mov    r13d,0xb80
  42c401:	sub    r13,QWORD PTR [r14+0x18]
  42c405:	mov    rsi,QWORD PTR [r14+0x10]
  42c409:	mov    rdi,r12
  42c40c:	mov    rdx,r13
  42c40f:	call   4061a0 <memcpy@plt>
  42c414:	add    r13,r12
  42c417:	mov    rax,QWORD PTR [r14]
  42c41a:	mov    rbx,QWORD PTR [rax+0xb80]
  42c421:	cmp    rbx,QWORD PTR [r14+0x8]
  42c425:	je     42c454 <flatcc_emitter_copy_buffer@@Base+0x94>
  42c427:	nop    WORD PTR [rax+rax*1+0x0]
  42c430:	mov    edx,0xb80
  42c435:	mov    rdi,r13
  42c438:	mov    rsi,rbx
  42c43b:	call   4061a0 <memcpy@plt>
  42c440:	add    r13,0xb80
  42c447:	mov    rbx,QWORD PTR [rbx+0xb80]
  42c44e:	cmp    rbx,QWORD PTR [r14+0x8]
  42c452:	jne    42c430 <flatcc_emitter_copy_buffer@@Base+0x70>
  42c454:	sub    r15,QWORD PTR [r14+0x28]
  42c458:	mov    rdi,r13
  42c45b:	mov    rsi,rbx
  42c45e:	mov    rdx,r15
  42c461:	call   4061a0 <memcpy@plt>
  42c466:	mov    r12,r13
  42c469:	jmp    42c46e <flatcc_emitter_copy_buffer@@Base+0xae>
  42c46b:	xor    r12d,r12d
  42c46e:	mov    rax,r12
  42c471:	pop    rbx
  42c472:	pop    r12
  42c474:	pop    r13
  42c476:	pop    r14
  42c478:	pop    r15
  42c47a:	ret    
  42c47b:	mov    rsi,QWORD PTR [r14+0x10]
  42c47f:	mov    rdi,r12
  42c482:	call   4061a0 <memcpy@plt>
  42c487:	jmp    42c46e <flatcc_emitter_copy_buffer@@Base+0xae>
  42c489:	nop    DWORD PTR [rax+0x0]

000000000042c490 <cmetrohash64_1@@Base>:
  42c490:	push   r15
  42c492:	push   r14
  42c494:	push   rbx
  42c495:	mov    r8d,0x8648dbdb
  42c49b:	lea    r9,[rdi+rsi*1]
  42c49f:	mov    eax,edx
  42c4a1:	lea    r11,[r8+0x41f1b606]
  42c4a8:	imul   rax,r11
  42c4ac:	add    rax,rsi
  42c4af:	movabs r10,0x60e25d3baf065edb
  42c4b9:	add    r10,rax
  42c4bc:	cmp    rsi,0x20
  42c4c0:	jb     42c59d <cmetrohash64_1@@Base+0x10d>
  42c4c6:	lea    r14,[r9-0x20]
  42c4ca:	mov    rax,r10
  42c4cd:	mov    rbx,r10
  42c4d0:	mov    r15,r10
  42c4d3:	mov    rdx,r10
  42c4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4e0:	mov    rsi,QWORD PTR [rdi]
  42c4e3:	imul   rsi,r11
  42c4e7:	add    rsi,rdx
  42c4ea:	rorx   rdx,rsi,0x1d
  42c4f0:	add    rdx,rbx
  42c4f3:	mov    rsi,QWORD PTR [rdi+0x8]
  42c4f7:	imul   rsi,r8
  42c4fb:	add    rsi,r15
  42c4fe:	rorx   r15,rsi,0x1d
  42c504:	add    r15,rax
  42c507:	imul   rsi,QWORD PTR [rdi+0x10],0x7bdec03b
  42c50f:	add    rsi,rbx
  42c512:	rorx   rbx,rsi,0x1d
  42c518:	imul   rsi,QWORD PTR [rdi+0x18],0x2f5870a5
  42c520:	add    rbx,rdx
  42c523:	add    rsi,rax
  42c526:	add    rdi,0x20
  42c52a:	rorx   rax,rsi,0x1d
  42c530:	add    rax,r15
  42c533:	cmp    rdi,r14
  42c536:	jbe    42c4e0 <cmetrohash64_1@@Base+0x50>
  42c538:	lea    rsi,[rax+rdx*1]
  42c53c:	imul   rsi,r11
  42c540:	add    rsi,r15
  42c543:	rorx   rsi,rsi,0x21
  42c549:	imul   rsi,r8
  42c54d:	xor    rsi,rbx
  42c550:	lea    rbx,[rsi+r15*1]
  42c554:	imul   rbx,r8
  42c558:	add    rbx,rdx
  42c55b:	rorx   rbx,rbx,0x21
  42c561:	imul   rbx,r11
  42c565:	xor    rbx,rax
  42c568:	lea    rax,[rsi+rdx*1]
  42c56c:	imul   rax,r11
  42c570:	add    rax,rbx
  42c573:	rorx   rax,rax,0x21
  42c579:	imul   rax,r8
  42c57d:	add    rbx,r15
  42c580:	imul   rbx,r8
  42c584:	add    rbx,rsi
  42c587:	rorx   rsi,rbx,0x21
  42c58d:	imul   rsi,r11
  42c591:	xor    r15,rdx
  42c594:	xor    r15,rax
  42c597:	xor    r15,rsi
  42c59a:	add    r10,r15
  42c59d:	mov    rax,r9
  42c5a0:	sub    rax,rdi
  42c5a3:	cmp    rax,0x10
  42c5a7:	jge    42c617 <cmetrohash64_1@@Base+0x187>
  42c5a9:	cmp    rax,0x8
  42c5ad:	jge    42c6ac <cmetrohash64_1@@Base+0x21c>
  42c5b3:	cmp    rax,0x4
  42c5b7:	jge    42c6d7 <cmetrohash64_1@@Base+0x247>
  42c5bd:	cmp    rax,0x2
  42c5c1:	jge    42c704 <cmetrohash64_1@@Base+0x274>
  42c5c7:	test   rax,rax
  42c5ca:	jle    42c5e6 <cmetrohash64_1@@Base+0x156>
  42c5cc:	movzx  eax,BYTE PTR [rdi]
  42c5cf:	imul   rax,rax,0x2f5870a5
  42c5d6:	add    rax,r10
  42c5d9:	rorx   r10,rax,0x19
  42c5df:	imul   r10,r8
  42c5e3:	xor    r10,rax
  42c5e6:	rorx   rax,r10,0x21
  42c5ec:	xor    rax,r10
  42c5ef:	imul   r11,rax
  42c5f3:	mov    rdx,r11
  42c5f6:	shr    rdx,0x21
  42c5fa:	movabs rsi,0x641d48f080000000
  42c604:	imul   rsi,rax
  42c608:	or     rsi,rdx
  42c60b:	xor    rsi,r11
  42c60e:	mov    QWORD PTR [rcx],rsi
  42c611:	pop    rbx
  42c612:	pop    r14
  42c614:	pop    r15
  42c616:	ret    
  42c617:	mov    rax,QWORD PTR [rdi]
  42c61a:	imul   rax,r11
  42c61e:	add    rax,r10
  42c621:	rorx   rax,rax,0x21
  42c627:	movabs rdx,0x6907a4ca322e467b
  42c631:	imul   rdx,rax
  42c635:	movabs rsi,0x4645c8cf60000000
  42c63f:	imul   rsi,rax
  42c643:	imul   rax,r8
  42c647:	mov    rbx,QWORD PTR [rdi+0x8]
  42c64b:	imul   rbx,r8
  42c64f:	add    rbx,r10
  42c652:	add    rdi,0x10
  42c656:	rorx   rbx,rbx,0x21
  42c65c:	imul   r14,rbx,0x7bdec03b
  42c663:	shr    rdx,0x23
  42c667:	or     rsi,rdx
  42c66a:	add    rsi,r14
  42c66d:	xor    rsi,rax
  42c670:	movabs rax,0x16e8b05e33f3b607
  42c67a:	imul   rax,rbx
  42c67e:	shr    rax,0x23
  42c682:	movabs rdx,0xc67e76c0e0000000
  42c68c:	imul   rdx,rbx
  42c690:	or     rdx,rax
  42c693:	add    rdx,rsi
  42c696:	xor    rdx,r14
  42c699:	add    r10,rdx
  42c69c:	mov    rax,r9
  42c69f:	sub    rax,rdi
  42c6a2:	cmp    rax,0x8
  42c6a6:	jl     42c5b3 <cmetrohash64_1@@Base+0x123>
  42c6ac:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42c6b3:	add    rax,r10
  42c6b6:	add    rdi,0x8
  42c6ba:	rorx   r10,rax,0x21
  42c6c0:	imul   r10,r8
  42c6c4:	xor    r10,rax
  42c6c7:	mov    rax,r9
  42c6ca:	sub    rax,rdi
  42c6cd:	cmp    rax,0x4
  42c6d1:	jl     42c5bd <cmetrohash64_1@@Base+0x12d>
  42c6d7:	mov    eax,DWORD PTR [rdi]
  42c6d9:	imul   rax,rax,0x2f5870a5
  42c6e0:	add    rax,r10
  42c6e3:	add    rdi,0x4
  42c6e7:	rorx   r10,rax,0xf
  42c6ed:	imul   r10,r8
  42c6f1:	xor    r10,rax
  42c6f4:	mov    rax,r9
  42c6f7:	sub    rax,rdi
  42c6fa:	cmp    rax,0x2
  42c6fe:	jl     42c5c7 <cmetrohash64_1@@Base+0x137>
  42c704:	movzx  eax,WORD PTR [rdi]
  42c707:	imul   rax,rax,0x2f5870a5
  42c70e:	add    rax,r10
  42c711:	add    rdi,0x2
  42c715:	rorx   r10,rax,0xd
  42c71b:	imul   r10,r8
  42c71f:	xor    r10,rax
  42c722:	sub    r9,rdi
  42c725:	mov    rax,r9
  42c728:	test   rax,rax
  42c72b:	jg     42c5cc <cmetrohash64_1@@Base+0x13c>
  42c731:	jmp    42c5e6 <cmetrohash64_1@@Base+0x156>
  42c736:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042c740 <cmetrohash64_2@@Base>:
  42c740:	push   r15
  42c742:	push   r14
  42c744:	push   rbx
  42c745:	mov    r8d,0xa2aa033b
  42c74b:	lea    r9,[rdi+rsi*1]
  42c74f:	mov    eax,edx
  42c751:	lea    r11,[r8+0x342615ba]
  42c758:	imul   rax,r11
  42c75c:	add    rax,rsi
  42c75f:	movabs r10,0x52bc33fedbe4cbb5
  42c769:	add    r10,rax
  42c76c:	cmp    rsi,0x20
  42c770:	jb     42c84d <cmetrohash64_2@@Base+0x10d>
  42c776:	lea    r14,[r9-0x20]
  42c77a:	mov    rax,r10
  42c77d:	mov    rbx,r10
  42c780:	mov    r15,r10
  42c783:	mov    rdx,r10
  42c786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c790:	mov    rsi,QWORD PTR [rdi]
  42c793:	imul   rsi,r11
  42c797:	add    rsi,rdx
  42c79a:	rorx   rdx,rsi,0x1d
  42c7a0:	add    rdx,rbx
  42c7a3:	mov    rsi,QWORD PTR [rdi+0x8]
  42c7a7:	imul   rsi,r8
  42c7ab:	add    rsi,r15
  42c7ae:	rorx   r15,rsi,0x1d
  42c7b4:	add    r15,rax
  42c7b7:	imul   rsi,QWORD PTR [rdi+0x10],0x62992fc1
  42c7bf:	add    rsi,rbx
  42c7c2:	rorx   rbx,rsi,0x1d
  42c7c8:	imul   rsi,QWORD PTR [rdi+0x18],0x30bc5b29
  42c7d0:	add    rbx,rdx
  42c7d3:	add    rsi,rax
  42c7d6:	add    rdi,0x20
  42c7da:	rorx   rax,rsi,0x1d
  42c7e0:	add    rax,r15
  42c7e3:	cmp    rdi,r14
  42c7e6:	jbe    42c790 <cmetrohash64_2@@Base+0x50>
  42c7e8:	lea    rsi,[rax+rdx*1]
  42c7ec:	imul   rsi,r11
  42c7f0:	add    rsi,r15
  42c7f3:	rorx   rsi,rsi,0x1e
  42c7f9:	imul   rsi,r8
  42c7fd:	xor    rsi,rbx
  42c800:	lea    rbx,[rsi+r15*1]
  42c804:	imul   rbx,r8
  42c808:	add    rbx,rdx
  42c80b:	rorx   rbx,rbx,0x1e
  42c811:	imul   rbx,r11
  42c815:	xor    rbx,rax
  42c818:	lea    rax,[rsi+rdx*1]
  42c81c:	imul   rax,r11
  42c820:	add    rax,rbx
  42c823:	rorx   rax,rax,0x1e
  42c829:	imul   rax,r8
  42c82d:	add    rbx,r15
  42c830:	imul   rbx,r8
  42c834:	add    rbx,rsi
  42c837:	rorx   rsi,rbx,0x1e
  42c83d:	imul   rsi,r11
  42c841:	xor    r15,rdx
  42c844:	xor    r15,rax
  42c847:	xor    r15,rsi
  42c84a:	add    r10,r15
  42c84d:	mov    rax,r9
  42c850:	sub    rax,rdi
  42c853:	cmp    rax,0x10
  42c857:	jge    42c8c7 <cmetrohash64_2@@Base+0x187>
  42c859:	cmp    rax,0x8
  42c85d:	jge    42c95f <cmetrohash64_2@@Base+0x21f>
  42c863:	cmp    rax,0x4
  42c867:	jge    42c98a <cmetrohash64_2@@Base+0x24a>
  42c86d:	cmp    rax,0x2
  42c871:	jge    42c9b7 <cmetrohash64_2@@Base+0x277>
  42c877:	test   rax,rax
  42c87a:	jle    42c896 <cmetrohash64_2@@Base+0x156>
  42c87c:	movzx  eax,BYTE PTR [rdi]
  42c87f:	imul   rax,rax,0x30bc5b29
  42c886:	add    rax,r10
  42c889:	rorx   r10,rax,0x17
  42c88f:	imul   r10,r8
  42c893:	xor    r10,rax
  42c896:	rorx   rax,r10,0x1c
  42c89c:	xor    rax,r10
  42c89f:	imul   r11,rax
  42c8a3:	mov    rdx,r11
  42c8a6:	shr    rdx,0x1d
  42c8aa:	movabs rsi,0xb680c7a800000000
  42c8b4:	imul   rsi,rax
  42c8b8:	or     rsi,rdx
  42c8bb:	xor    rsi,r11
  42c8be:	mov    QWORD PTR [rcx],rsi
  42c8c1:	pop    rbx
  42c8c2:	pop    r14
  42c8c4:	pop    r15
  42c8c6:	ret    
  42c8c7:	imul   rax,QWORD PTR [rdi],0x62992fc1
  42c8ce:	add    rax,r10
  42c8d1:	rorx   rax,rax,0x1d
  42c8d7:	imul   r14,rax,0x30bc5b29
  42c8de:	imul   rsi,QWORD PTR [rdi+0x8],0x62992fc1
  42c8e6:	add    rsi,r10
  42c8e9:	add    rdi,0x10
  42c8ed:	rorx   rsi,rsi,0x1d
  42c8f3:	imul   r15,rsi,0x30bc5b29
  42c8fa:	movabs rdx,0x28e511fea41f163d
  42c904:	imul   rdx,rax
  42c908:	shr    rdx,0x22
  42c90c:	movabs rbx,0xa907c58f40000000
  42c916:	imul   rbx,rax
  42c91a:	or     rbx,rdx
  42c91d:	add    rbx,r15
  42c920:	xor    rbx,r14
  42c923:	movabs rax,0x9472cc564ae2c91
  42c92d:	imul   rax,rsi
  42c931:	shr    rax,0x22
  42c935:	movabs rdx,0x592b8b2440000000
  42c93f:	imul   rdx,rsi
  42c943:	or     rdx,rax
  42c946:	add    rdx,rbx
  42c949:	xor    rdx,r15
  42c94c:	add    r10,rdx
  42c94f:	mov    rax,r9
  42c952:	sub    rax,rdi
  42c955:	cmp    rax,0x8
  42c959:	jl     42c863 <cmetrohash64_2@@Base+0x123>
  42c95f:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42c966:	add    rax,r10
  42c969:	add    rdi,0x8
  42c96d:	rorx   r10,rax,0x24
  42c973:	imul   r10,r8
  42c977:	xor    r10,rax
  42c97a:	mov    rax,r9
  42c97d:	sub    rax,rdi
  42c980:	cmp    rax,0x4
  42c984:	jl     42c86d <cmetrohash64_2@@Base+0x12d>
  42c98a:	mov    eax,DWORD PTR [rdi]
  42c98c:	imul   rax,rax,0x30bc5b29
  42c993:	add    rax,r10
  42c996:	add    rdi,0x4
  42c99a:	rorx   r10,rax,0xf
  42c9a0:	imul   r10,r8
  42c9a4:	xor    r10,rax
  42c9a7:	mov    rax,r9
  42c9aa:	sub    rax,rdi
  42c9ad:	cmp    rax,0x2
  42c9b1:	jl     42c877 <cmetrohash64_2@@Base+0x137>
  42c9b7:	movzx  eax,WORD PTR [rdi]
  42c9ba:	imul   rax,rax,0x30bc5b29
  42c9c1:	add    rax,r10
  42c9c4:	add    rdi,0x2
  42c9c8:	rorx   r10,rax,0xf
  42c9ce:	imul   r10,r8
  42c9d2:	xor    r10,rax
  42c9d5:	sub    r9,rdi
  42c9d8:	mov    rax,r9
  42c9db:	test   rax,rax
  42c9de:	jg     42c87c <cmetrohash64_2@@Base+0x13c>
  42c9e4:	jmp    42c896 <cmetrohash64_2@@Base+0x156>
  42c9e9:	nop    DWORD PTR [rax+0x0]

000000000042c9f0 <fb_name_table_clear@@Base>:
  42c9f0:	push   rbx
  42c9f1:	mov    rbx,rdi
  42c9f4:	mov    rdi,QWORD PTR [rdi]
  42c9f7:	test   rdi,rdi
  42c9fa:	je     42ca01 <fb_name_table_clear@@Base+0x11>
  42c9fc:	call   406040 <free@plt>
  42ca01:	vxorps xmm0,xmm0,xmm0
  42ca05:	vmovups YMMWORD PTR [rbx],ymm0
  42ca09:	pop    rbx
  42ca0a:	vzeroupper 
  42ca0d:	ret    
  42ca0e:	xchg   ax,ax

000000000042ca10 <fb_name_table_destroy@@Base>:
  42ca10:	push   r15
  42ca12:	push   r14
  42ca14:	push   r13
  42ca16:	push   r12
  42ca18:	push   rbx
  42ca19:	mov    r12,rdi
  42ca1c:	test   rsi,rsi
  42ca1f:	je     42ca67 <fb_name_table_destroy@@Base+0x57>
  42ca21:	mov    rax,QWORD PTR [r12+0x18]
  42ca26:	test   rax,rax
  42ca29:	je     42ca67 <fb_name_table_destroy@@Base+0x57>
  42ca2b:	mov    r14,rdx
  42ca2e:	mov    r15,rsi
  42ca31:	mov    r13,QWORD PTR [r12]
  42ca35:	xor    ebx,ebx
  42ca37:	jmp    42ca48 <fb_name_table_destroy@@Base+0x38>
  42ca39:	nop    DWORD PTR [rax+0x0]
  42ca40:	inc    rbx
  42ca43:	cmp    rbx,rax
  42ca46:	jae    42ca67 <fb_name_table_destroy@@Base+0x57>
  42ca48:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42ca4d:	mov    rcx,rsi
  42ca50:	or     rcx,0x2
  42ca54:	cmp    rcx,0x2
  42ca58:	je     42ca40 <fb_name_table_destroy@@Base+0x30>
  42ca5a:	mov    rdi,r14
  42ca5d:	call   r15
  42ca60:	mov    rax,QWORD PTR [r12+0x18]
  42ca65:	jmp    42ca40 <fb_name_table_destroy@@Base+0x30>
  42ca67:	mov    rdi,QWORD PTR [r12]
  42ca6b:	test   rdi,rdi
  42ca6e:	je     42ca75 <fb_name_table_destroy@@Base+0x65>
  42ca70:	call   406040 <free@plt>
  42ca75:	vxorps xmm0,xmm0,xmm0
  42ca79:	vmovups YMMWORD PTR [r12],ymm0
  42ca7f:	pop    rbx
  42ca80:	pop    r12
  42ca82:	pop    r13
  42ca84:	pop    r14
  42ca86:	pop    r15
  42ca88:	vzeroupper 
  42ca8b:	ret    
  42ca8c:	nop    DWORD PTR [rax+0x0]

000000000042ca90 <fb_name_table_init@@Base>:
  42ca90:	push   r14
  42ca92:	push   rbx
  42ca93:	push   rax
  42ca94:	mov    r14,rdi
  42ca97:	mov    eax,0x4
  42ca9c:	nop    DWORD PTR [rax+0x0]
  42caa0:	mov    rbx,rax
  42caa3:	imul   rcx,rax,0xb3
  42caaa:	shr    rcx,0x8
  42caae:	add    rax,rax
  42cab1:	cmp    rcx,rsi
  42cab4:	jb     42caa0 <fb_name_table_init@@Base+0x10>
  42cab6:	mov    esi,0x8
  42cabb:	mov    rdi,rbx
  42cabe:	call   406150 <calloc@plt>
  42cac3:	mov    QWORD PTR [r14],rax
  42cac6:	test   rax,rax
  42cac9:	je     42cadd <fb_name_table_init@@Base+0x4d>
  42cacb:	vxorps xmm0,xmm0,xmm0
  42cacf:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42cad5:	mov    QWORD PTR [r14+0x18],rbx
  42cad9:	xor    eax,eax
  42cadb:	jmp    42cae2 <fb_name_table_init@@Base+0x52>
  42cadd:	mov    eax,0xffffffff
  42cae2:	add    rsp,0x8
  42cae6:	pop    rbx
  42cae7:	pop    r14
  42cae9:	ret    
  42caea:	nop    WORD PTR [rax+rax*1+0x0]

000000000042caf0 <fb_name_table_resize@@Base>:
  42caf0:	jmp    42cb00 <fb_name_table_resize@@Base+0x10>
  42caf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cafc:	nop    DWORD PTR [rax+0x0]
  42cb00:	push   r15
  42cb02:	push   r14
  42cb04:	push   r12
  42cb06:	push   rbx
  42cb07:	sub    rsp,0x28
  42cb0b:	mov    r14,rdi
  42cb0e:	mov    r12,QWORD PTR [rdi]
  42cb11:	mov    rax,QWORD PTR [rdi+0x10]
  42cb15:	cmp    rax,rsi
  42cb18:	cmova  rsi,rax
  42cb1c:	mov    eax,0x4
  42cb21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cb30:	mov    rbx,rax
  42cb33:	imul   rcx,rax,0xb3
  42cb3a:	shr    rcx,0x8
  42cb3e:	add    rax,rax
  42cb41:	cmp    rcx,rsi
  42cb44:	jb     42cb30 <fb_name_table_resize@@Base+0x40>
  42cb46:	mov    esi,0x8
  42cb4b:	mov    rdi,rbx
  42cb4e:	call   406150 <calloc@plt>
  42cb53:	mov    QWORD PTR [rsp+0x8],rax
  42cb58:	test   rax,rax
  42cb5b:	je     42cbb5 <fb_name_table_resize@@Base+0xc5>
  42cb5d:	vxorps xmm0,xmm0,xmm0
  42cb61:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42cb67:	mov    QWORD PTR [rsp+0x20],rbx
  42cb6c:	mov    rax,QWORD PTR [r14+0x18]
  42cb70:	test   rax,rax
  42cb73:	je     42cbbf <fb_name_table_resize@@Base+0xcf>
  42cb75:	xor    ebx,ebx
  42cb77:	lea    r15,[rsp+0x8]
  42cb7c:	jmp    42cb88 <fb_name_table_resize@@Base+0x98>
  42cb7e:	xchg   ax,ax
  42cb80:	inc    rbx
  42cb83:	cmp    rbx,rax
  42cb86:	jae    42cbbc <fb_name_table_resize@@Base+0xcc>
  42cb88:	mov    rcx,QWORD PTR [r12+rbx*8]
  42cb8c:	mov    rdx,rcx
  42cb8f:	or     rdx,0x2
  42cb93:	cmp    rdx,0x2
  42cb97:	je     42cb80 <fb_name_table_resize@@Base+0x90>
  42cb99:	mov    rsi,QWORD PTR [rcx+0x8]
  42cb9d:	movsxd rdx,DWORD PTR [rcx+0x10]
  42cba1:	mov    rdi,r15
  42cba4:	mov    r8d,0x3
  42cbaa:	call   42cc00 <fb_name_table_insert@@Base+0x10>
  42cbaf:	mov    rax,QWORD PTR [r14+0x18]
  42cbb3:	jmp    42cb80 <fb_name_table_resize@@Base+0x90>
  42cbb5:	mov    eax,0xffffffff
  42cbba:	jmp    42cbd9 <fb_name_table_resize@@Base+0xe9>
  42cbbc:	mov    r12,QWORD PTR [r14]
  42cbbf:	test   r12,r12
  42cbc2:	je     42cbcc <fb_name_table_resize@@Base+0xdc>
  42cbc4:	mov    rdi,r12
  42cbc7:	call   406040 <free@plt>
  42cbcc:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42cbd2:	vmovups YMMWORD PTR [r14],ymm0
  42cbd7:	xor    eax,eax
  42cbd9:	add    rsp,0x28
  42cbdd:	pop    rbx
  42cbde:	pop    r12
  42cbe0:	pop    r14
  42cbe2:	pop    r15
  42cbe4:	vzeroupper 
  42cbe7:	ret    
  42cbe8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cbf0 <fb_name_table_insert@@Base>:
  42cbf0:	jmp    42cc00 <fb_name_table_insert@@Base+0x10>
  42cbf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cbfc:	nop    DWORD PTR [rax+0x0]
  42cc00:	push   rbp
  42cc01:	push   r15
  42cc03:	push   r14
  42cc05:	push   r13
  42cc07:	push   r12
  42cc09:	push   rbx
  42cc0a:	sub    rsp,0x38
  42cc0e:	mov    QWORD PTR [rsp+0x20],rsi
  42cc13:	cmp    rcx,0x2
  42cc17:	je     42cd7b <fb_name_table_insert@@Base+0x18b>
  42cc1d:	mov    r13,rcx
  42cc20:	cmp    rcx,0x1
  42cc24:	je     42cd9a <fb_name_table_insert@@Base+0x1aa>
  42cc2a:	test   r13,r13
  42cc2d:	je     42cdb9 <fb_name_table_insert@@Base+0x1c9>
  42cc33:	mov    ebp,r8d
  42cc36:	mov    rbx,rdi
  42cc39:	mov    rsi,QWORD PTR [rdi+0x10]
  42cc3d:	mov    r15,QWORD PTR [rdi+0x18]
  42cc41:	imul   rax,r15,0xb3
  42cc48:	shr    rax,0x8
  42cc4c:	cmp    rsi,rax
  42cc4f:	mov    QWORD PTR [rsp+0x8],rdx
  42cc54:	jb     42cc72 <fb_name_table_insert@@Base+0x82>
  42cc56:	add    rsi,rsi
  42cc59:	mov    rdi,rbx
  42cc5c:	call   42cb00 <fb_name_table_resize@@Base+0x10>
  42cc61:	test   eax,eax
  42cc63:	jne    42cdd8 <fb_name_table_insert@@Base+0x1e8>
  42cc69:	mov    r15,QWORD PTR [rbx+0x18]
  42cc6d:	mov    rdx,QWORD PTR [rsp+0x8]
  42cc72:	mov    r14,QWORD PTR [rbx]
  42cc75:	dec    r15
  42cc78:	lea    rcx,[rsp+0x30]
  42cc7d:	mov    rdi,QWORD PTR [rsp+0x20]
  42cc82:	mov    rsi,rdx
  42cc85:	mov    edx,0x2f693b52
  42cc8a:	call   42c490 <cmetrohash64_1@@Base>
  42cc8f:	mov    rcx,QWORD PTR [rsp+0x30]
  42cc94:	mov    r12d,ecx
  42cc97:	mov    eax,r15d
  42cc9a:	and    eax,ecx
  42cc9c:	mov    ecx,ebp
  42cc9e:	or     ecx,0x1
  42cca1:	cmp    ecx,0x3
  42cca4:	jne    42cccd <fb_name_table_insert@@Base+0xdd>
  42cca6:	inc    QWORD PTR [rbx+0x10]
  42ccaa:	nop    WORD PTR [rax+rax*1+0x0]
  42ccb0:	inc    r12
  42ccb3:	mov    rcx,QWORD PTR [r14+rax*8]
  42ccb7:	or     rcx,0x2
  42ccbb:	cmp    rcx,0x2
  42ccbf:	je     42cd46 <fb_name_table_insert@@Base+0x156>
  42ccc5:	mov    rax,r12
  42ccc8:	and    rax,r15
  42cccb:	jmp    42ccb0 <fb_name_table_insert@@Base+0xc0>
  42cccd:	mov    DWORD PTR [rsp+0x14],ebp
  42ccd1:	mov    QWORD PTR [rsp+0x28],rbx
  42ccd6:	mov    QWORD PTR [rsp+0x18],r13
  42ccdb:	inc    r12
  42ccde:	xor    r13d,r13d
  42cce1:	mov    rcx,QWORD PTR [rsp+0x8]
  42cce6:	jmp    42cd00 <fb_name_table_insert@@Base+0x110>
  42cce8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ccf0:	test   r13,r13
  42ccf3:	cmove  r13,rbp
  42ccf7:	mov    rax,r12
  42ccfa:	and    rax,r15
  42ccfd:	inc    r12
  42cd00:	lea    rbp,[r14+rax*8]
  42cd04:	mov    rbx,QWORD PTR [r14+rax*8]
  42cd08:	cmp    rbx,0x2
  42cd0c:	je     42ccf0 <fb_name_table_insert@@Base+0x100>
  42cd0e:	test   rbx,rbx
  42cd11:	je     42cd4e <fb_name_table_insert@@Base+0x15e>
  42cd13:	movsxd rax,DWORD PTR [rbx+0x10]
  42cd17:	cmp    rax,rcx
  42cd1a:	jne    42ccf7 <fb_name_table_insert@@Base+0x107>
  42cd1c:	mov    rsi,QWORD PTR [rbx+0x8]
  42cd20:	mov    rdi,QWORD PTR [rsp+0x20]
  42cd25:	mov    rdx,QWORD PTR [rsp+0x8]
  42cd2a:	call   4061c0 <bcmp@plt>
  42cd2f:	mov    rcx,QWORD PTR [rsp+0x8]
  42cd34:	test   eax,eax
  42cd36:	jne    42ccf7 <fb_name_table_insert@@Base+0x107>
  42cd38:	cmp    DWORD PTR [rsp+0x14],0x0
  42cd3d:	mov    r13,QWORD PTR [rsp+0x18]
  42cd42:	jne    42cd69 <fb_name_table_insert@@Base+0x179>
  42cd44:	jmp    42cd65 <fb_name_table_insert@@Base+0x175>
  42cd46:	lea    rbp,[r14+rax*8]
  42cd4a:	xor    ebx,ebx
  42cd4c:	jmp    42cd65 <fb_name_table_insert@@Base+0x175>
  42cd4e:	test   r13,r13
  42cd51:	cmovne rbp,r13
  42cd55:	mov    rax,QWORD PTR [rsp+0x28]
  42cd5a:	inc    QWORD PTR [rax+0x10]
  42cd5e:	xor    ebx,ebx
  42cd60:	mov    r13,QWORD PTR [rsp+0x18]
  42cd65:	mov    QWORD PTR [rbp+0x0],r13
  42cd69:	mov    rax,rbx
  42cd6c:	add    rsp,0x38
  42cd70:	pop    rbx
  42cd71:	pop    r12
  42cd73:	pop    r13
  42cd75:	pop    r14
  42cd77:	pop    r15
  42cd79:	pop    rbp
  42cd7a:	ret    
  42cd7b:	lea    rdi,[rip+0x1a0d1]        # 446e53 <str_set_deleted@@Base+0xd3>
  42cd82:	lea    rsi,[rip+0x1a016]        # 446d9f <str_set_deleted@@Base+0x1f>
  42cd89:	lea    rcx,[rip+0x1a079]        # 446e09 <str_set_deleted@@Base+0x89>
  42cd90:	mov    edx,0x73
  42cd95:	call   406100 <__assert_fail@plt>
  42cd9a:	lea    rdi,[rip+0x1a0c9]        # 446e6a <str_set_deleted@@Base+0xea>
  42cda1:	lea    rsi,[rip+0x19ff7]        # 446d9f <str_set_deleted@@Base+0x1f>
  42cda8:	lea    rcx,[rip+0x1a05a]        # 446e09 <str_set_deleted@@Base+0x89>
  42cdaf:	mov    edx,0x74
  42cdb4:	call   406100 <__assert_fail@plt>
  42cdb9:	lea    rdi,[rip+0x19fc8]        # 446d88 <str_set_deleted@@Base+0x8>
  42cdc0:	lea    rsi,[rip+0x19fd8]        # 446d9f <str_set_deleted@@Base+0x1f>
  42cdc7:	lea    rcx,[rip+0x1a03b]        # 446e09 <str_set_deleted@@Base+0x89>
  42cdce:	mov    edx,0x72
  42cdd3:	call   406100 <__assert_fail@plt>
  42cdd8:	mov    rax,QWORD PTR [rip+0x25219]        # 451ff8 <stderr@GLIBC_2.2.5>
  42cddf:	mov    rdi,QWORD PTR [rax]
  42cde2:	lea    rsi,[rip+0x1a096]        # 446e7f <str_set_deleted@@Base+0xff>
  42cde9:	lea    rdx,[rip+0x1a0a6]        # 446e96 <str_set_deleted@@Base+0x116>
  42cdf0:	xor    eax,eax
  42cdf2:	call   406180 <fprintf@plt>
  42cdf7:	mov    edi,0x1
  42cdfc:	call   406220 <exit@plt>
  42ce01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ce10 <fb_name_table_insert_item@@Base>:
  42ce10:	mov    r8d,edx
  42ce13:	mov    rcx,rsi
  42ce16:	mov    rsi,QWORD PTR [rsi+0x8]
  42ce1a:	movsxd rdx,DWORD PTR [rcx+0x10]
  42ce1e:	jmp    42cc00 <fb_name_table_insert@@Base+0x10>
  42ce23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce2d:	nop    DWORD PTR [rax]

000000000042ce30 <fb_name_table_find@@Base>:
  42ce30:	push   rbp
  42ce31:	push   r15
  42ce33:	push   r14
  42ce35:	push   r13
  42ce37:	push   r12
  42ce39:	push   rbx
  42ce3a:	push   rax
  42ce3b:	mov    r12,QWORD PTR [rdi]
  42ce3e:	test   r12,r12
  42ce41:	je     42cea6 <fb_name_table_find@@Base+0x76>
  42ce43:	mov    r15,rdx
  42ce46:	mov    r14,rsi
  42ce49:	mov    r13,QWORD PTR [rdi+0x18]
  42ce4d:	dec    r13
  42ce50:	mov    rcx,rsp
  42ce53:	mov    rdi,rsi
  42ce56:	mov    rsi,rdx
  42ce59:	mov    edx,0x2f693b52
  42ce5e:	call   42c490 <cmetrohash64_1@@Base>
  42ce63:	mov    ebp,DWORD PTR [rsp]
  42ce66:	jmp    42ce73 <fb_name_table_find@@Base+0x43>
  42ce68:	nop    DWORD PTR [rax+rax*1+0x0]
  42ce70:	inc    rbp
  42ce73:	mov    rax,rbp
  42ce76:	and    rax,r13
  42ce79:	mov    rbx,QWORD PTR [r12+rax*8]
  42ce7d:	cmp    rbx,0x2
  42ce81:	je     42ce70 <fb_name_table_find@@Base+0x40>
  42ce83:	test   rbx,rbx
  42ce86:	je     42cea6 <fb_name_table_find@@Base+0x76>
  42ce88:	movsxd rax,DWORD PTR [rbx+0x10]
  42ce8c:	cmp    rax,r15
  42ce8f:	jne    42ce70 <fb_name_table_find@@Base+0x40>
  42ce91:	mov    rsi,QWORD PTR [rbx+0x8]
  42ce95:	mov    rdi,r14
  42ce98:	mov    rdx,r15
  42ce9b:	call   4061c0 <bcmp@plt>
  42cea0:	test   eax,eax
  42cea2:	jne    42ce70 <fb_name_table_find@@Base+0x40>
  42cea4:	jmp    42cea8 <fb_name_table_find@@Base+0x78>
  42cea6:	xor    ebx,ebx
  42cea8:	mov    rax,rbx
  42ceab:	add    rsp,0x8
  42ceaf:	pop    rbx
  42ceb0:	pop    r12
  42ceb2:	pop    r13
  42ceb4:	pop    r14
  42ceb6:	pop    r15
  42ceb8:	pop    rbp
  42ceb9:	ret    
  42ceba:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cec0 <fb_name_table_find_item@@Base>:
  42cec0:	push   rbp
  42cec1:	push   r15
  42cec3:	push   r14
  42cec5:	push   r13
  42cec7:	push   r12
  42cec9:	push   rbx
  42ceca:	push   rax
  42cecb:	mov    r12,QWORD PTR [rdi]
  42cece:	test   r12,r12
  42ced1:	je     42cf33 <fb_name_table_find_item@@Base+0x73>
  42ced3:	mov    r14,QWORD PTR [rsi+0x8]
  42ced7:	movsxd r15,DWORD PTR [rsi+0x10]
  42cedb:	mov    r13,QWORD PTR [rdi+0x18]
  42cedf:	dec    r13
  42cee2:	mov    rcx,rsp
  42cee5:	mov    rdi,r14
  42cee8:	mov    rsi,r15
  42ceeb:	mov    edx,0x2f693b52
  42cef0:	call   42c490 <cmetrohash64_1@@Base>
  42cef5:	mov    ebp,DWORD PTR [rsp]
  42cef8:	jmp    42cf03 <fb_name_table_find_item@@Base+0x43>
  42cefa:	nop    WORD PTR [rax+rax*1+0x0]
  42cf00:	inc    rbp
  42cf03:	mov    rax,rbp
  42cf06:	and    rax,r13
  42cf09:	mov    rbx,QWORD PTR [r12+rax*8]
  42cf0d:	cmp    rbx,0x2
  42cf11:	je     42cf00 <fb_name_table_find_item@@Base+0x40>
  42cf13:	test   rbx,rbx
  42cf16:	je     42cf33 <fb_name_table_find_item@@Base+0x73>
  42cf18:	cmp    DWORD PTR [rbx+0x10],r15d
  42cf1c:	jne    42cf00 <fb_name_table_find_item@@Base+0x40>
  42cf1e:	mov    rsi,QWORD PTR [rbx+0x8]
  42cf22:	mov    rdi,r14
  42cf25:	mov    rdx,r15
  42cf28:	call   4061c0 <bcmp@plt>
  42cf2d:	test   eax,eax
  42cf2f:	jne    42cf00 <fb_name_table_find_item@@Base+0x40>
  42cf31:	jmp    42cf35 <fb_name_table_find_item@@Base+0x75>
  42cf33:	xor    ebx,ebx
  42cf35:	mov    rax,rbx
  42cf38:	add    rsp,0x8
  42cf3c:	pop    rbx
  42cf3d:	pop    r12
  42cf3f:	pop    r13
  42cf41:	pop    r14
  42cf43:	pop    r15
  42cf45:	pop    rbp
  42cf46:	ret    
  42cf47:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cf50 <fb_name_table_remove@@Base>:
  42cf50:	push   rbp
  42cf51:	push   r15
  42cf53:	push   r14
  42cf55:	push   r13
  42cf57:	push   r12
  42cf59:	push   rbx
  42cf5a:	sub    rsp,0x18
  42cf5e:	mov    r13,QWORD PTR [rdi]
  42cf61:	test   r13,r13
  42cf64:	je     42cfea <fb_name_table_remove@@Base+0x9a>
  42cf6a:	mov    r12,rdx
  42cf6d:	mov    QWORD PTR [rsp],rdi
  42cf71:	mov    rbp,QWORD PTR [rdi+0x18]
  42cf75:	dec    rbp
  42cf78:	lea    rcx,[rsp+0x10]
  42cf7d:	mov    QWORD PTR [rsp+0x8],rsi
  42cf82:	mov    rdi,rsi
  42cf85:	mov    rsi,rdx
  42cf88:	mov    edx,0x2f693b52
  42cf8d:	call   42c490 <cmetrohash64_1@@Base>
  42cf92:	mov    r15d,DWORD PTR [rsp+0x10]
  42cf97:	jmp    42cfa3 <fb_name_table_remove@@Base+0x53>
  42cf99:	nop    DWORD PTR [rax+0x0]
  42cfa0:	inc    r15
  42cfa3:	mov    r14,r15
  42cfa6:	and    r14,rbp
  42cfa9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42cfae:	cmp    rbx,0x2
  42cfb2:	je     42cfa0 <fb_name_table_remove@@Base+0x50>
  42cfb4:	test   rbx,rbx
  42cfb7:	je     42cfea <fb_name_table_remove@@Base+0x9a>
  42cfb9:	movsxd rax,DWORD PTR [rbx+0x10]
  42cfbd:	cmp    rax,r12
  42cfc0:	jne    42cfa0 <fb_name_table_remove@@Base+0x50>
  42cfc2:	mov    rsi,QWORD PTR [rbx+0x8]
  42cfc6:	mov    rdi,QWORD PTR [rsp+0x8]
  42cfcb:	mov    rdx,r12
  42cfce:	call   4061c0 <bcmp@plt>
  42cfd3:	test   eax,eax
  42cfd5:	jne    42cfa0 <fb_name_table_remove@@Base+0x50>
  42cfd7:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42cfe0:	mov    rax,QWORD PTR [rsp]
  42cfe4:	dec    QWORD PTR [rax+0x10]
  42cfe8:	jmp    42cfec <fb_name_table_remove@@Base+0x9c>
  42cfea:	xor    ebx,ebx
  42cfec:	mov    rax,rbx
  42cfef:	add    rsp,0x18
  42cff3:	pop    rbx
  42cff4:	pop    r12
  42cff6:	pop    r13
  42cff8:	pop    r14
  42cffa:	pop    r15
  42cffc:	pop    rbp
  42cffd:	ret    
  42cffe:	xchg   ax,ax

000000000042d000 <fb_name_table_remove_item@@Base>:
  42d000:	push   rbp
  42d001:	push   r15
  42d003:	push   r14
  42d005:	push   r13
  42d007:	push   r12
  42d009:	push   rbx
  42d00a:	sub    rsp,0x18
  42d00e:	mov    r13,QWORD PTR [rdi]
  42d011:	test   r13,r13
  42d014:	je     42d097 <fb_name_table_remove_item@@Base+0x97>
  42d01a:	mov    rax,QWORD PTR [rsi+0x8]
  42d01e:	movsxd r12,DWORD PTR [rsi+0x10]
  42d022:	mov    QWORD PTR [rsp],rdi
  42d026:	mov    rbp,QWORD PTR [rdi+0x18]
  42d02a:	dec    rbp
  42d02d:	lea    rcx,[rsp+0x10]
  42d032:	mov    QWORD PTR [rsp+0x8],rax
  42d037:	mov    rdi,rax
  42d03a:	mov    rsi,r12
  42d03d:	mov    edx,0x2f693b52
  42d042:	call   42c490 <cmetrohash64_1@@Base>
  42d047:	mov    r15d,DWORD PTR [rsp+0x10]
  42d04c:	jmp    42d053 <fb_name_table_remove_item@@Base+0x53>
  42d04e:	xchg   ax,ax
  42d050:	inc    r15
  42d053:	mov    r14,r15
  42d056:	and    r14,rbp
  42d059:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42d05e:	cmp    rbx,0x2
  42d062:	je     42d050 <fb_name_table_remove_item@@Base+0x50>
  42d064:	test   rbx,rbx
  42d067:	je     42d097 <fb_name_table_remove_item@@Base+0x97>
  42d069:	cmp    DWORD PTR [rbx+0x10],r12d
  42d06d:	jne    42d050 <fb_name_table_remove_item@@Base+0x50>
  42d06f:	mov    rsi,QWORD PTR [rbx+0x8]
  42d073:	mov    rdi,QWORD PTR [rsp+0x8]
  42d078:	mov    rdx,r12
  42d07b:	call   4061c0 <bcmp@plt>
  42d080:	test   eax,eax
  42d082:	jne    42d050 <fb_name_table_remove_item@@Base+0x50>
  42d084:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42d08d:	mov    rax,QWORD PTR [rsp]
  42d091:	dec    QWORD PTR [rax+0x10]
  42d095:	jmp    42d099 <fb_name_table_remove_item@@Base+0x99>
  42d097:	xor    ebx,ebx
  42d099:	mov    rax,rbx
  42d09c:	add    rsp,0x18
  42d0a0:	pop    rbx
  42d0a1:	pop    r12
  42d0a3:	pop    r13
  42d0a5:	pop    r14
  42d0a7:	pop    r15
  42d0a9:	pop    rbp
  42d0aa:	ret    
  42d0ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d0b0 <fb_name_table_visit@@Base>:
  42d0b0:	push   r15
  42d0b2:	push   r14
  42d0b4:	push   r13
  42d0b6:	push   r12
  42d0b8:	push   rbx
  42d0b9:	mov    rax,QWORD PTR [rdi+0x18]
  42d0bd:	test   rax,rax
  42d0c0:	je     42d107 <fb_name_table_visit@@Base+0x57>
  42d0c2:	mov    r14,rdx
  42d0c5:	mov    r15,rsi
  42d0c8:	mov    r12,rdi
  42d0cb:	mov    r13,QWORD PTR [rdi]
  42d0ce:	xor    ebx,ebx
  42d0d0:	jmp    42d0e8 <fb_name_table_visit@@Base+0x38>
  42d0d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d0dc:	nop    DWORD PTR [rax+0x0]
  42d0e0:	inc    rbx
  42d0e3:	cmp    rbx,rax
  42d0e6:	jae    42d107 <fb_name_table_visit@@Base+0x57>
  42d0e8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42d0ed:	mov    rcx,rsi
  42d0f0:	or     rcx,0x2
  42d0f4:	cmp    rcx,0x2
  42d0f8:	je     42d0e0 <fb_name_table_visit@@Base+0x30>
  42d0fa:	mov    rdi,r14
  42d0fd:	call   r15
  42d100:	mov    rax,QWORD PTR [r12+0x18]
  42d105:	jmp    42d0e0 <fb_name_table_visit@@Base+0x30>
  42d107:	pop    rbx
  42d108:	pop    r12
  42d10a:	pop    r13
  42d10c:	pop    r14
  42d10e:	pop    r15
  42d110:	ret    
  42d111:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d11b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d120 <fb_value_set_clear@@Base>:
  42d120:	push   rbx
  42d121:	mov    rbx,rdi
  42d124:	mov    rdi,QWORD PTR [rdi]
  42d127:	test   rdi,rdi
  42d12a:	je     42d131 <fb_value_set_clear@@Base+0x11>
  42d12c:	call   406040 <free@plt>
  42d131:	vxorps xmm0,xmm0,xmm0
  42d135:	vmovups YMMWORD PTR [rbx],ymm0
  42d139:	pop    rbx
  42d13a:	vzeroupper 
  42d13d:	ret    
  42d13e:	xchg   ax,ax

000000000042d140 <fb_value_set_destroy@@Base>:
  42d140:	push   r15
  42d142:	push   r14
  42d144:	push   r13
  42d146:	push   r12
  42d148:	push   rbx
  42d149:	mov    r12,rdi
  42d14c:	test   rsi,rsi
  42d14f:	je     42d197 <fb_value_set_destroy@@Base+0x57>
  42d151:	mov    rax,QWORD PTR [r12+0x18]
  42d156:	test   rax,rax
  42d159:	je     42d197 <fb_value_set_destroy@@Base+0x57>
  42d15b:	mov    r14,rdx
  42d15e:	mov    r15,rsi
  42d161:	mov    r13,QWORD PTR [r12]
  42d165:	xor    ebx,ebx
  42d167:	jmp    42d178 <fb_value_set_destroy@@Base+0x38>
  42d169:	nop    DWORD PTR [rax+0x0]
  42d170:	inc    rbx
  42d173:	cmp    rbx,rax
  42d176:	jae    42d197 <fb_value_set_destroy@@Base+0x57>
  42d178:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42d17d:	mov    rcx,rsi
  42d180:	or     rcx,0x2
  42d184:	cmp    rcx,0x2
  42d188:	je     42d170 <fb_value_set_destroy@@Base+0x30>
  42d18a:	mov    rdi,r14
  42d18d:	call   r15
  42d190:	mov    rax,QWORD PTR [r12+0x18]
  42d195:	jmp    42d170 <fb_value_set_destroy@@Base+0x30>
  42d197:	mov    rdi,QWORD PTR [r12]
  42d19b:	test   rdi,rdi
  42d19e:	je     42d1a5 <fb_value_set_destroy@@Base+0x65>
  42d1a0:	call   406040 <free@plt>
  42d1a5:	vxorps xmm0,xmm0,xmm0
  42d1a9:	vmovups YMMWORD PTR [r12],ymm0
  42d1af:	pop    rbx
  42d1b0:	pop    r12
  42d1b2:	pop    r13
  42d1b4:	pop    r14
  42d1b6:	pop    r15
  42d1b8:	vzeroupper 
  42d1bb:	ret    
  42d1bc:	nop    DWORD PTR [rax+0x0]

000000000042d1c0 <fb_value_set_init@@Base>:
  42d1c0:	push   r14
  42d1c2:	push   rbx
  42d1c3:	push   rax
  42d1c4:	mov    r14,rdi
  42d1c7:	mov    eax,0x4
  42d1cc:	nop    DWORD PTR [rax+0x0]
  42d1d0:	mov    rbx,rax
  42d1d3:	imul   rcx,rax,0xb3
  42d1da:	shr    rcx,0x8
  42d1de:	add    rax,rax
  42d1e1:	cmp    rcx,rsi
  42d1e4:	jb     42d1d0 <fb_value_set_init@@Base+0x10>
  42d1e6:	mov    esi,0x8
  42d1eb:	mov    rdi,rbx
  42d1ee:	call   406150 <calloc@plt>
  42d1f3:	mov    QWORD PTR [r14],rax
  42d1f6:	test   rax,rax
  42d1f9:	je     42d20d <fb_value_set_init@@Base+0x4d>
  42d1fb:	vxorps xmm0,xmm0,xmm0
  42d1ff:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42d205:	mov    QWORD PTR [r14+0x18],rbx
  42d209:	xor    eax,eax
  42d20b:	jmp    42d212 <fb_value_set_init@@Base+0x52>
  42d20d:	mov    eax,0xffffffff
  42d212:	add    rsp,0x8
  42d216:	pop    rbx
  42d217:	pop    r14
  42d219:	ret    
  42d21a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d220 <fb_value_set_resize@@Base>:
  42d220:	jmp    42d230 <fb_value_set_resize@@Base+0x10>
  42d222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d22c:	nop    DWORD PTR [rax+0x0]
  42d230:	push   r15
  42d232:	push   r14
  42d234:	push   r12
  42d236:	push   rbx
  42d237:	sub    rsp,0x28
  42d23b:	mov    r14,rdi
  42d23e:	mov    r12,QWORD PTR [rdi]
  42d241:	mov    rax,QWORD PTR [rdi+0x10]
  42d245:	cmp    rax,rsi
  42d248:	cmova  rsi,rax
  42d24c:	mov    eax,0x4
  42d251:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d25b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d260:	mov    rbx,rax
  42d263:	imul   rcx,rax,0xb3
  42d26a:	shr    rcx,0x8
  42d26e:	add    rax,rax
  42d271:	cmp    rcx,rsi
  42d274:	jb     42d260 <fb_value_set_resize@@Base+0x40>
  42d276:	mov    esi,0x8
  42d27b:	mov    rdi,rbx
  42d27e:	call   406150 <calloc@plt>
  42d283:	mov    QWORD PTR [rsp+0x8],rax
  42d288:	test   rax,rax
  42d28b:	je     42d2df <fb_value_set_resize@@Base+0xbf>
  42d28d:	vxorps xmm0,xmm0,xmm0
  42d291:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42d297:	mov    QWORD PTR [rsp+0x20],rbx
  42d29c:	mov    rax,QWORD PTR [r14+0x18]
  42d2a0:	test   rax,rax
  42d2a3:	je     42d2e9 <fb_value_set_resize@@Base+0xc9>
  42d2a5:	xor    ebx,ebx
  42d2a7:	lea    r15,[rsp+0x8]
  42d2ac:	jmp    42d2b8 <fb_value_set_resize@@Base+0x98>
  42d2ae:	xchg   ax,ax
  42d2b0:	inc    rbx
  42d2b3:	cmp    rbx,rax
  42d2b6:	jae    42d2e6 <fb_value_set_resize@@Base+0xc6>
  42d2b8:	mov    rdx,QWORD PTR [r12+rbx*8]
  42d2bc:	mov    rcx,rdx
  42d2bf:	or     rcx,0x2
  42d2c3:	cmp    rcx,0x2
  42d2c7:	je     42d2b0 <fb_value_set_resize@@Base+0x90>
  42d2c9:	mov    rdi,r15
  42d2cc:	mov    rsi,rdx
  42d2cf:	mov    ecx,0x3
  42d2d4:	call   42d330 <fb_value_set_insert@@Base+0x10>
  42d2d9:	mov    rax,QWORD PTR [r14+0x18]
  42d2dd:	jmp    42d2b0 <fb_value_set_resize@@Base+0x90>
  42d2df:	mov    eax,0xffffffff
  42d2e4:	jmp    42d303 <fb_value_set_resize@@Base+0xe3>
  42d2e6:	mov    r12,QWORD PTR [r14]
  42d2e9:	test   r12,r12
  42d2ec:	je     42d2f6 <fb_value_set_resize@@Base+0xd6>
  42d2ee:	mov    rdi,r12
  42d2f1:	call   406040 <free@plt>
  42d2f6:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42d2fc:	vmovups YMMWORD PTR [r14],ymm0
  42d301:	xor    eax,eax
  42d303:	add    rsp,0x28
  42d307:	pop    rbx
  42d308:	pop    r12
  42d30a:	pop    r14
  42d30c:	pop    r15
  42d30e:	vzeroupper 
  42d311:	ret    
  42d312:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d31c:	nop    DWORD PTR [rax+0x0]

000000000042d320 <fb_value_set_insert@@Base>:
  42d320:	mov    rdx,rcx
  42d323:	mov    ecx,r8d
  42d326:	jmp    42d330 <fb_value_set_insert@@Base+0x10>
  42d328:	nop    DWORD PTR [rax+rax*1+0x0]
  42d330:	push   rbp
  42d331:	push   r15
  42d333:	push   r14
  42d335:	push   r13
  42d337:	push   r12
  42d339:	push   rbx
  42d33a:	push   rax
  42d33b:	cmp    rdx,0x2
  42d33f:	je     42d4aa <fb_value_set_insert@@Base+0x18a>
  42d345:	mov    r14,rdx
  42d348:	cmp    rdx,0x1
  42d34c:	je     42d4c9 <fb_value_set_insert@@Base+0x1a9>
  42d352:	test   r14,r14
  42d355:	je     42d4e8 <fb_value_set_insert@@Base+0x1c8>
  42d35b:	mov    r15d,ecx
  42d35e:	mov    r12,rsi
  42d361:	mov    r13,rdi
  42d364:	mov    rsi,QWORD PTR [rdi+0x10]
  42d368:	mov    r9,QWORD PTR [rdi+0x18]
  42d36c:	imul   rax,r9,0xb3
  42d373:	shr    rax,0x8
  42d377:	cmp    rsi,rax
  42d37a:	jb     42d393 <fb_value_set_insert@@Base+0x73>
  42d37c:	add    rsi,rsi
  42d37f:	mov    rdi,r13
  42d382:	call   42d230 <fb_value_set_resize@@Base+0x10>
  42d387:	test   eax,eax
  42d389:	jne    42d507 <fb_value_set_insert@@Base+0x1e7>
  42d38f:	mov    r9,QWORD PTR [r13+0x18]
  42d393:	mov    rdx,QWORD PTR [r13+0x0]
  42d397:	dec    r9
  42d39a:	movzx  r8d,WORD PTR [r12+0x10]
  42d3a0:	cmp    r8w,0x6
  42d3a5:	je     42d3cb <fb_value_set_insert@@Base+0xab>
  42d3a7:	cmp    r8w,0x5
  42d3ac:	je     42d3c0 <fb_value_set_insert@@Base+0xa0>
  42d3ae:	cmp    r8w,0x4
  42d3b3:	jne    42d3e1 <fb_value_set_insert@@Base+0xc1>
  42d3b5:	mov    eax,0x2f693b56
  42d3ba:	xor    rax,QWORD PTR [r12]
  42d3be:	jmp    42d3d6 <fb_value_set_insert@@Base+0xb6>
  42d3c0:	mov    eax,0x2f693b57
  42d3c5:	xor    rax,QWORD PTR [r12]
  42d3c9:	jmp    42d3d6 <fb_value_set_insert@@Base+0xb6>
  42d3cb:	movzx  eax,BYTE PTR [r12]
  42d3d0:	xor    rax,0x2f693b54
  42d3d6:	mov    edi,0x9e3779b1
  42d3db:	imul   rdi,rax
  42d3df:	jmp    42d3e3 <fb_value_set_insert@@Base+0xc3>
  42d3e1:	xor    edi,edi
  42d3e3:	mov    rax,rdi
  42d3e6:	and    rax,r9
  42d3e9:	mov    ebp,r15d
  42d3ec:	or     ebp,0x1
  42d3ef:	cmp    ebp,0x3
  42d3f2:	jne    42d419 <fb_value_set_insert@@Base+0xf9>
  42d3f4:	inc    QWORD PTR [r13+0x10]
  42d3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d400:	inc    rdi
  42d403:	mov    rsi,QWORD PTR [rdx+rax*8]
  42d407:	or     rsi,0x2
  42d40b:	cmp    rsi,0x2
  42d40f:	je     42d485 <fb_value_set_insert@@Base+0x165>
  42d411:	mov    rax,rdi
  42d414:	and    rax,r9
  42d417:	jmp    42d400 <fb_value_set_insert@@Base+0xe0>
  42d419:	inc    rdi
  42d41c:	xor    ebp,ebp
  42d41e:	jmp    42d430 <fb_value_set_insert@@Base+0x110>
  42d420:	test   rbp,rbp
  42d423:	cmove  rbp,rbx
  42d427:	mov    rax,rdi
  42d42a:	and    rax,r9
  42d42d:	inc    rdi
  42d430:	lea    rbx,[rdx+rax*8]
  42d434:	mov    rax,QWORD PTR [rdx+rax*8]
  42d438:	cmp    rax,0x2
  42d43c:	je     42d420 <fb_value_set_insert@@Base+0x100>
  42d43e:	test   rax,rax
  42d441:	je     42d48b <fb_value_set_insert@@Base+0x16b>
  42d443:	cmp    r8w,WORD PTR [rax+0x10]
  42d448:	jne    42d427 <fb_value_set_insert@@Base+0x107>
  42d44a:	cmp    r8w,0x4
  42d44f:	je     42d475 <fb_value_set_insert@@Base+0x155>
  42d451:	cmp    r8w,0x6
  42d456:	je     42d46a <fb_value_set_insert@@Base+0x14a>
  42d458:	cmp    r8w,0x5
  42d45d:	jne    42d427 <fb_value_set_insert@@Base+0x107>
  42d45f:	mov    rsi,QWORD PTR [r12]
  42d463:	cmp    rsi,QWORD PTR [rax]
  42d466:	jne    42d427 <fb_value_set_insert@@Base+0x107>
  42d468:	jmp    42d47e <fb_value_set_insert@@Base+0x15e>
  42d46a:	movzx  ecx,BYTE PTR [r12]
  42d46f:	cmp    cl,BYTE PTR [rax]
  42d471:	jne    42d427 <fb_value_set_insert@@Base+0x107>
  42d473:	jmp    42d47e <fb_value_set_insert@@Base+0x15e>
  42d475:	mov    rcx,QWORD PTR [r12]
  42d479:	cmp    rcx,QWORD PTR [rax]
  42d47c:	jne    42d427 <fb_value_set_insert@@Base+0x107>
  42d47e:	test   r15d,r15d
  42d481:	jne    42d49b <fb_value_set_insert@@Base+0x17b>
  42d483:	jmp    42d498 <fb_value_set_insert@@Base+0x178>
  42d485:	lea    rbx,[rdx+rax*8]
  42d489:	jmp    42d496 <fb_value_set_insert@@Base+0x176>
  42d48b:	test   rbp,rbp
  42d48e:	cmovne rbx,rbp
  42d492:	inc    QWORD PTR [r13+0x10]
  42d496:	xor    eax,eax
  42d498:	mov    QWORD PTR [rbx],r14
  42d49b:	add    rsp,0x8
  42d49f:	pop    rbx
  42d4a0:	pop    r12
  42d4a2:	pop    r13
  42d4a4:	pop    r14
  42d4a6:	pop    r15
  42d4a8:	pop    rbp
  42d4a9:	ret    
  42d4aa:	lea    rdi,[rip+0x199a2]        # 446e53 <str_set_deleted@@Base+0xd3>
  42d4b1:	lea    rsi,[rip+0x198e7]        # 446d9f <str_set_deleted@@Base+0x1f>
  42d4b8:	lea    rcx,[rip+0x1994a]        # 446e09 <str_set_deleted@@Base+0x89>
  42d4bf:	mov    edx,0x73
  42d4c4:	call   406100 <__assert_fail@plt>
  42d4c9:	lea    rdi,[rip+0x1999a]        # 446e6a <str_set_deleted@@Base+0xea>
  42d4d0:	lea    rsi,[rip+0x198c8]        # 446d9f <str_set_deleted@@Base+0x1f>
  42d4d7:	lea    rcx,[rip+0x1992b]        # 446e09 <str_set_deleted@@Base+0x89>
  42d4de:	mov    edx,0x74
  42d4e3:	call   406100 <__assert_fail@plt>
  42d4e8:	lea    rdi,[rip+0x19899]        # 446d88 <str_set_deleted@@Base+0x8>
  42d4ef:	lea    rsi,[rip+0x198a9]        # 446d9f <str_set_deleted@@Base+0x1f>
  42d4f6:	lea    rcx,[rip+0x1990c]        # 446e09 <str_set_deleted@@Base+0x89>
  42d4fd:	mov    edx,0x72
  42d502:	call   406100 <__assert_fail@plt>
  42d507:	mov    rax,QWORD PTR [rip+0x24aea]        # 451ff8 <stderr@GLIBC_2.2.5>
  42d50e:	mov    rdi,QWORD PTR [rax]
  42d511:	lea    rsi,[rip+0x19967]        # 446e7f <str_set_deleted@@Base+0xff>
  42d518:	lea    rdx,[rip+0x19977]        # 446e96 <str_set_deleted@@Base+0x116>
  42d51f:	xor    eax,eax
  42d521:	call   406180 <fprintf@plt>
  42d526:	mov    edi,0x1
  42d52b:	call   406220 <exit@plt>

000000000042d530 <fb_value_set_insert_item@@Base>:
  42d530:	mov    ecx,edx
  42d532:	mov    rdx,rsi
  42d535:	jmp    42d330 <fb_value_set_insert@@Base+0x10>
  42d53a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d540 <fb_value_set_find@@Base>:
  42d540:	mov    r8,QWORD PTR [rdi]
  42d543:	test   r8,r8
  42d546:	je     42d5da <fb_value_set_find@@Base+0x9a>
  42d54c:	mov    r9,QWORD PTR [rdi+0x18]
  42d550:	movzx  edi,WORD PTR [rsi+0x10]
  42d554:	cmp    di,0x6
  42d558:	je     42d56d <fb_value_set_find@@Base+0x2d>
  42d55a:	cmp    di,0x5
  42d55e:	je     42d578 <fb_value_set_find@@Base+0x38>
  42d560:	cmp    di,0x4
  42d564:	jne    42d58b <fb_value_set_find@@Base+0x4b>
  42d566:	mov    eax,0x2f693b56
  42d56b:	jmp    42d57d <fb_value_set_find@@Base+0x3d>
  42d56d:	movzx  eax,BYTE PTR [rsi]
  42d570:	xor    rax,0x2f693b54
  42d576:	jmp    42d580 <fb_value_set_find@@Base+0x40>
  42d578:	mov    eax,0x2f693b57
  42d57d:	xor    rax,QWORD PTR [rsi]
  42d580:	mov    ecx,0x9e3779b1
  42d585:	imul   rcx,rax
  42d589:	jmp    42d58d <fb_value_set_find@@Base+0x4d>
  42d58b:	xor    ecx,ecx
  42d58d:	dec    r9
  42d590:	jmp    42d5a3 <fb_value_set_find@@Base+0x63>
  42d592:	mov    rdx,QWORD PTR [rsi]
  42d595:	cmp    rdx,QWORD PTR [rax]
  42d598:	je     42d5d9 <fb_value_set_find@@Base+0x99>
  42d59a:	nop    WORD PTR [rax+rax*1+0x0]
  42d5a0:	inc    rcx
  42d5a3:	mov    rax,rcx
  42d5a6:	and    rax,r9
  42d5a9:	mov    rax,QWORD PTR [r8+rax*8]
  42d5ad:	cmp    rax,0x2
  42d5b1:	je     42d5a0 <fb_value_set_find@@Base+0x60>
  42d5b3:	test   rax,rax
  42d5b6:	je     42d5da <fb_value_set_find@@Base+0x9a>
  42d5b8:	cmp    di,WORD PTR [rax+0x10]
  42d5bc:	jne    42d5a0 <fb_value_set_find@@Base+0x60>
  42d5be:	cmp    di,0x4
  42d5c2:	je     42d592 <fb_value_set_find@@Base+0x52>
  42d5c4:	cmp    di,0x6
  42d5c8:	je     42d5d2 <fb_value_set_find@@Base+0x92>
  42d5ca:	cmp    di,0x5
  42d5ce:	je     42d592 <fb_value_set_find@@Base+0x52>
  42d5d0:	jmp    42d5a0 <fb_value_set_find@@Base+0x60>
  42d5d2:	movzx  edx,BYTE PTR [rsi]
  42d5d5:	cmp    dl,BYTE PTR [rax]
  42d5d7:	jne    42d5a0 <fb_value_set_find@@Base+0x60>
  42d5d9:	ret    
  42d5da:	xor    eax,eax
  42d5dc:	ret    
  42d5dd:	nop    DWORD PTR [rax]

000000000042d5e0 <fb_value_set_find_item@@Base>:
  42d5e0:	mov    r8,QWORD PTR [rdi]
  42d5e3:	test   r8,r8
  42d5e6:	je     42d67a <fb_value_set_find_item@@Base+0x9a>
  42d5ec:	mov    r9,QWORD PTR [rdi+0x18]
  42d5f0:	movzx  edi,WORD PTR [rsi+0x10]
  42d5f4:	cmp    di,0x6
  42d5f8:	je     42d60d <fb_value_set_find_item@@Base+0x2d>
  42d5fa:	cmp    di,0x5
  42d5fe:	je     42d618 <fb_value_set_find_item@@Base+0x38>
  42d600:	cmp    di,0x4
  42d604:	jne    42d62b <fb_value_set_find_item@@Base+0x4b>
  42d606:	mov    eax,0x2f693b56
  42d60b:	jmp    42d61d <fb_value_set_find_item@@Base+0x3d>
  42d60d:	movzx  eax,BYTE PTR [rsi]
  42d610:	xor    rax,0x2f693b54
  42d616:	jmp    42d620 <fb_value_set_find_item@@Base+0x40>
  42d618:	mov    eax,0x2f693b57
  42d61d:	xor    rax,QWORD PTR [rsi]
  42d620:	mov    ecx,0x9e3779b1
  42d625:	imul   rcx,rax
  42d629:	jmp    42d62d <fb_value_set_find_item@@Base+0x4d>
  42d62b:	xor    ecx,ecx
  42d62d:	dec    r9
  42d630:	jmp    42d643 <fb_value_set_find_item@@Base+0x63>
  42d632:	mov    rdx,QWORD PTR [rsi]
  42d635:	cmp    rdx,QWORD PTR [rax]
  42d638:	je     42d679 <fb_value_set_find_item@@Base+0x99>
  42d63a:	nop    WORD PTR [rax+rax*1+0x0]
  42d640:	inc    rcx
  42d643:	mov    rax,rcx
  42d646:	and    rax,r9
  42d649:	mov    rax,QWORD PTR [r8+rax*8]
  42d64d:	cmp    rax,0x2
  42d651:	je     42d640 <fb_value_set_find_item@@Base+0x60>
  42d653:	test   rax,rax
  42d656:	je     42d67a <fb_value_set_find_item@@Base+0x9a>
  42d658:	cmp    di,WORD PTR [rax+0x10]
  42d65c:	jne    42d640 <fb_value_set_find_item@@Base+0x60>
  42d65e:	cmp    di,0x4
  42d662:	je     42d632 <fb_value_set_find_item@@Base+0x52>
  42d664:	cmp    di,0x6
  42d668:	je     42d672 <fb_value_set_find_item@@Base+0x92>
  42d66a:	cmp    di,0x5
  42d66e:	je     42d632 <fb_value_set_find_item@@Base+0x52>
  42d670:	jmp    42d640 <fb_value_set_find_item@@Base+0x60>
  42d672:	movzx  edx,BYTE PTR [rsi]
  42d675:	cmp    dl,BYTE PTR [rax]
  42d677:	jne    42d640 <fb_value_set_find_item@@Base+0x60>
  42d679:	ret    
  42d67a:	xor    eax,eax
  42d67c:	ret    
  42d67d:	nop    DWORD PTR [rax]

000000000042d680 <fb_value_set_remove@@Base>:
  42d680:	jmp    42d690 <fb_value_set_remove@@Base+0x10>
  42d682:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d68c:	nop    DWORD PTR [rax+0x0]
  42d690:	mov    r8,QWORD PTR [rdi]
  42d693:	test   r8,r8
  42d696:	je     42d73a <fb_value_set_remove@@Base+0xba>
  42d69c:	mov    r9,QWORD PTR [rdi+0x18]
  42d6a0:	movzx  r10d,WORD PTR [rsi+0x10]
  42d6a5:	cmp    r10w,0x6
  42d6aa:	je     42d6c1 <fb_value_set_remove@@Base+0x41>
  42d6ac:	cmp    r10w,0x5
  42d6b1:	je     42d6cc <fb_value_set_remove@@Base+0x4c>
  42d6b3:	cmp    r10w,0x4
  42d6b8:	jne    42d6e0 <fb_value_set_remove@@Base+0x60>
  42d6ba:	mov    eax,0x2f693b56
  42d6bf:	jmp    42d6d1 <fb_value_set_remove@@Base+0x51>
  42d6c1:	movzx  eax,BYTE PTR [rsi]
  42d6c4:	xor    rax,0x2f693b54
  42d6ca:	jmp    42d6d4 <fb_value_set_remove@@Base+0x54>
  42d6cc:	mov    eax,0x2f693b57
  42d6d1:	xor    rax,QWORD PTR [rsi]
  42d6d4:	mov    r11d,0x9e3779b1
  42d6da:	imul   r11,rax
  42d6de:	jmp    42d6e3 <fb_value_set_remove@@Base+0x63>
  42d6e0:	xor    r11d,r11d
  42d6e3:	dec    r9
  42d6e6:	jmp    42d6f3 <fb_value_set_remove@@Base+0x73>
  42d6e8:	mov    rcx,QWORD PTR [rsi]
  42d6eb:	cmp    rcx,QWORD PTR [rax]
  42d6ee:	je     42d72d <fb_value_set_remove@@Base+0xad>
  42d6f0:	inc    r11
  42d6f3:	mov    rdx,r11
  42d6f6:	and    rdx,r9
  42d6f9:	mov    rax,QWORD PTR [r8+rdx*8]
  42d6fd:	cmp    rax,0x2
  42d701:	je     42d6f0 <fb_value_set_remove@@Base+0x70>
  42d703:	test   rax,rax
  42d706:	je     42d73a <fb_value_set_remove@@Base+0xba>
  42d708:	cmp    r10w,WORD PTR [rax+0x10]
  42d70d:	jne    42d6f0 <fb_value_set_remove@@Base+0x70>
  42d70f:	cmp    r10w,0x4
  42d714:	je     42d6e8 <fb_value_set_remove@@Base+0x68>
  42d716:	cmp    r10w,0x6
  42d71b:	je     42d726 <fb_value_set_remove@@Base+0xa6>
  42d71d:	cmp    r10w,0x5
  42d722:	je     42d6e8 <fb_value_set_remove@@Base+0x68>
  42d724:	jmp    42d6f0 <fb_value_set_remove@@Base+0x70>
  42d726:	movzx  ecx,BYTE PTR [rsi]
  42d729:	cmp    cl,BYTE PTR [rax]
  42d72b:	jne    42d6f0 <fb_value_set_remove@@Base+0x70>
  42d72d:	mov    QWORD PTR [r8+rdx*8],0x2
  42d735:	dec    QWORD PTR [rdi+0x10]
  42d739:	ret    
  42d73a:	xor    eax,eax
  42d73c:	ret    
  42d73d:	nop    DWORD PTR [rax]

000000000042d740 <fb_value_set_remove_item@@Base>:
  42d740:	jmp    42d690 <fb_value_set_remove@@Base+0x10>
  42d745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d74f:	nop

000000000042d750 <fb_value_set_visit@@Base>:
  42d750:	push   r15
  42d752:	push   r14
  42d754:	push   r13
  42d756:	push   r12
  42d758:	push   rbx
  42d759:	mov    rax,QWORD PTR [rdi+0x18]
  42d75d:	test   rax,rax
  42d760:	je     42d7a7 <fb_value_set_visit@@Base+0x57>
  42d762:	mov    r14,rdx
  42d765:	mov    r15,rsi
  42d768:	mov    r12,rdi
  42d76b:	mov    r13,QWORD PTR [rdi]
  42d76e:	xor    ebx,ebx
  42d770:	jmp    42d788 <fb_value_set_visit@@Base+0x38>
  42d772:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d77c:	nop    DWORD PTR [rax+0x0]
  42d780:	inc    rbx
  42d783:	cmp    rbx,rax
  42d786:	jae    42d7a7 <fb_value_set_visit@@Base+0x57>
  42d788:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42d78d:	mov    rcx,rsi
  42d790:	or     rcx,0x2
  42d794:	cmp    rcx,0x2
  42d798:	je     42d780 <fb_value_set_visit@@Base+0x30>
  42d79a:	mov    rdi,r14
  42d79d:	call   r15
  42d7a0:	mov    rax,QWORD PTR [r12+0x18]
  42d7a5:	jmp    42d780 <fb_value_set_visit@@Base+0x30>
  42d7a7:	pop    rbx
  42d7a8:	pop    r12
  42d7aa:	pop    r13
  42d7ac:	pop    r14
  42d7ae:	pop    r15
  42d7b0:	ret    
  42d7b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d7bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d7c0 <__libc_csu_init@@Base>:
  42d7c0:	endbr64 
  42d7c4:	push   r15
  42d7c6:	lea    r15,[rip+0x24283]        # 451a50 <fb_value_set_deleted@@Base+0x67f0>
  42d7cd:	push   r14
  42d7cf:	mov    r14,rdx
  42d7d2:	push   r13
  42d7d4:	mov    r13,rsi
  42d7d7:	push   r12
  42d7d9:	mov    r12d,edi
  42d7dc:	push   rbp
  42d7dd:	lea    rbp,[rip+0x24274]        # 451a58 <fb_value_set_deleted@@Base+0x67f8>
  42d7e4:	push   rbx
  42d7e5:	sub    rbp,r15
  42d7e8:	sub    rsp,0x8
  42d7ec:	call   406000 <__ctype_toupper_loc@plt-0x30>
  42d7f1:	sar    rbp,0x3
  42d7f5:	je     42d816 <__libc_csu_init@@Base+0x56>
  42d7f7:	xor    ebx,ebx
  42d7f9:	nop    DWORD PTR [rax+0x0]
  42d800:	mov    rdx,r14
  42d803:	mov    rsi,r13
  42d806:	mov    edi,r12d
  42d809:	call   QWORD PTR [r15+rbx*8]
  42d80d:	add    rbx,0x1
  42d811:	cmp    rbp,rbx
  42d814:	jne    42d800 <__libc_csu_init@@Base+0x40>
  42d816:	add    rsp,0x8
  42d81a:	pop    rbx
  42d81b:	pop    rbp
  42d81c:	pop    r12
  42d81e:	pop    r13
  42d820:	pop    r14
  42d822:	pop    r15
  42d824:	ret    
  42d825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042d830 <__libc_csu_fini@@Base>:
  42d830:	endbr64 
  42d834:	ret    

Disassembly of section .fini:

000000000042d838 <.fini>:
  42d838:	endbr64 
  42d83c:	sub    rsp,0x8
  42d840:	add    rsp,0x8
  42d844:	ret    
