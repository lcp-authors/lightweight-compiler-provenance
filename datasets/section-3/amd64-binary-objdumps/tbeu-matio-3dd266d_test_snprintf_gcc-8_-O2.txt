
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__sprintf_chk@plt+0x2ef8>
  40100f:	test   rax,rax
  401012:	je     401016 <__snprintf_chk@plt-0x8a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <__sprintf_chk@plt+0x2f08>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <__sprintf_chk@plt+0x2f10>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <__snprintf_chk@plt-0x80>
  40109f:	nop

Disassembly of section .plt.sec:

00000000004010a0 <__snprintf_chk@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404018 <__sprintf_chk@plt+0x2f18>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <puts@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404020 <__sprintf_chk@plt+0x2f20>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <pow@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404028 <__sprintf_chk@plt+0x2f28>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <__stack_chk_fail@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404030 <__sprintf_chk@plt+0x2f30>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <strcmp@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404038 <__sprintf_chk@plt+0x2f38>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <__printf_chk@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404040 <__sprintf_chk@plt+0x2f40>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <__sprintf_chk@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404048 <__sprintf_chk@plt+0x2f48>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401110 <.text>:
  401110:	endbr64 
  401114:	push   r15
  401116:	lea    rdi,[rip+0x1033]        # 402150 <__sprintf_chk@plt+0x1050>
  40111d:	push   r14
  40111f:	lea    r14,[rip+0xede]        # 402004 <__sprintf_chk@plt+0xf04>
  401126:	push   r13
  401128:	push   r12
  40112a:	push   rbp
  40112b:	push   rbx
  40112c:	lea    rbx,[rip+0xed8]        # 40200b <__sprintf_chk@plt+0xf0b>
  401133:	sub    rsp,0xa58
  40113a:	mov    rax,QWORD PTR fs:0x28
  401143:	mov    QWORD PTR [rsp+0xa48],rax
  40114b:	xor    eax,eax
  40114d:	lea    rax,[rip+0xede]        # 402032 <__sprintf_chk@plt+0xf32>
  401154:	mov    QWORD PTR [rsp+0x1d0],rax
  40115c:	lea    rax,[rip+0xed5]        # 402038 <__sprintf_chk@plt+0xf38>
  401163:	mov    QWORD PTR [rsp+0x1d8],rax
  40116b:	lea    rax,[rip+0xece]        # 402040 <__sprintf_chk@plt+0xf40>
  401172:	mov    QWORD PTR [rsp+0x1e0],rax
  40117a:	lea    rax,[rip+0xec6]        # 402047 <__sprintf_chk@plt+0xf47>
  401181:	mov    QWORD PTR [rsp+0x1e8],rax
  401189:	lea    rax,[rip+0xebf]        # 40204f <__sprintf_chk@plt+0xf4f>
  401190:	mov    QWORD PTR [rsp+0x1f0],rax
  401198:	lea    rax,[rip+0xeb8]        # 402057 <__sprintf_chk@plt+0xf57>
  40119f:	mov    QWORD PTR [rsp+0x1f8],rax
  4011a7:	lea    rax,[rip+0xeb0]        # 40205e <__sprintf_chk@plt+0xf5e>
  4011ae:	mov    QWORD PTR [rsp+0x200],rax
  4011b6:	lea    rax,[rip+0xea8]        # 402065 <__sprintf_chk@plt+0xf65>
  4011bd:	mov    QWORD PTR [rsp+0x208],rax
  4011c5:	lea    rax,[rip+0xe9d]        # 402069 <__sprintf_chk@plt+0xf69>
  4011cc:	mov    QWORD PTR [rsp+0x210],rax
  4011d4:	lea    rax,[rip+0xe94]        # 40206f <__sprintf_chk@plt+0xf6f>
  4011db:	mov    QWORD PTR [rsp+0x218],rax
  4011e3:	lea    rax,[rip+0xe8b]        # 402075 <__sprintf_chk@plt+0xf75>
  4011ea:	mov    QWORD PTR [rsp+0x220],rax
  4011f2:	lea    rax,[rip+0xe81]        # 40207a <__sprintf_chk@plt+0xf7a>
  4011f9:	mov    QWORD PTR [rsp+0x228],rax
  401201:	lea    rax,[rip+0xe75]        # 40207d <__sprintf_chk@plt+0xf7d>
  401208:	mov    QWORD PTR [rsp+0x230],rax
  401210:	mov    rax,QWORD PTR [rip+0xfe9]        # 402200 <__sprintf_chk@plt+0x1100>
  401217:	mov    QWORD PTR [rsp+0x1c8],r14
  40121f:	mov    QWORD PTR [rsp+0x150],rax
  401227:	mov    rax,QWORD PTR [rip+0xfca]        # 4021f8 <__sprintf_chk@plt+0x10f8>
  40122e:	mov    QWORD PTR [rsp+0x1c0],rbx
  401236:	mov    QWORD PTR [rsp+0x158],rax
  40123e:	mov    rax,QWORD PTR [rip+0xfc3]        # 402208 <__sprintf_chk@plt+0x1108>
  401245:	mov    QWORD PTR [rsp+0x238],0x0
  401251:	mov    QWORD PTR [rsp+0x160],rax
  401259:	mov    rax,QWORD PTR [rip+0xfb0]        # 402210 <__sprintf_chk@plt+0x1110>
  401260:	lea    r15,[rsp+0x240]
  401268:	mov    QWORD PTR [rsp+0x168],rax
  401270:	mov    rax,QWORD PTR [rip+0xfa1]        # 402218 <__sprintf_chk@plt+0x1118>
  401277:	mov    QWORD PTR [rsp+0x1b8],0x0
  401283:	mov    QWORD PTR [rsp+0x170],rax
  40128b:	mov    rax,QWORD PTR [rip+0xf8e]        # 402220 <__sprintf_chk@plt+0x1120>
  401292:	mov    QWORD PTR [rsp+0xe0],0x0
  40129e:	mov    QWORD PTR [rsp+0x178],rax
  4012a6:	mov    rax,QWORD PTR [rip+0xf7b]        # 402228 <__sprintf_chk@plt+0x1128>
  4012ad:	mov    QWORD PTR [rsp+0x60],0xffffffffffffffff
  4012b6:	mov    QWORD PTR [rsp+0x180],rax
  4012be:	mov    rax,QWORD PTR [rip+0xf6b]        # 402230 <__sprintf_chk@plt+0x1130>
  4012c5:	mov    QWORD PTR [rsp+0x68],0x86
  4012ce:	mov    QWORD PTR [rsp+0x188],rax
  4012d6:	mov    rax,QWORD PTR [rip+0xf5b]        # 402238 <__sprintf_chk@plt+0x1138>
  4012dd:	mov    QWORD PTR [rsp+0x190],rax
  4012e5:	mov    rax,QWORD PTR [rip+0xf54]        # 402240 <__sprintf_chk@plt+0x1140>
  4012ec:	mov    QWORD PTR [rsp+0x198],rax
  4012f4:	mov    rax,QWORD PTR [rip+0xf4d]        # 402248 <__sprintf_chk@plt+0x1148>
  4012fb:	mov    QWORD PTR [rsp+0x1a0],rax
  401303:	mov    rax,QWORD PTR [rip+0xf46]        # 402250 <__sprintf_chk@plt+0x1150>
  40130a:	mov    QWORD PTR [rsp+0x1a8],rax
  401312:	mov    rax,QWORD PTR [rip+0xf3f]        # 402258 <__sprintf_chk@plt+0x1158>
  401319:	mov    QWORD PTR [rsp+0x1b0],rax
  401321:	lea    rax,[rip+0xcef]        # 402017 <__sprintf_chk@plt+0xf17>
  401328:	mov    QWORD PTR [rsp+0x90],rax
  401330:	lea    rax,[rip+0xcda]        # 402011 <__sprintf_chk@plt+0xf11>
  401337:	mov    QWORD PTR [rsp+0x98],rax
  40133f:	lea    rax,[rip+0xd3f]        # 402085 <__sprintf_chk@plt+0xf85>
  401346:	mov    QWORD PTR [rsp+0xa0],rax
  40134e:	lea    rax,[rip+0xd38]        # 40208d <__sprintf_chk@plt+0xf8d>
  401355:	mov    QWORD PTR [rsp+0xa8],rax
  40135d:	lea    rax,[rip+0xd2f]        # 402093 <__sprintf_chk@plt+0xf93>
  401364:	mov    QWORD PTR [rsp+0xb0],rax
  40136c:	lea    rax,[rip+0xd27]        # 40209a <__sprintf_chk@plt+0xf9a>
  401373:	mov    QWORD PTR [rsp+0xb8],rax
  40137b:	lea    rax,[rip+0xd20]        # 4020a2 <__sprintf_chk@plt+0xfa2>
  401382:	mov    QWORD PTR [rsp+0xc0],rax
  40138a:	lea    rax,[rip+0xd1a]        # 4020ab <__sprintf_chk@plt+0xfab>
  401391:	mov    QWORD PTR [rsp+0xc8],rax
  401399:	lea    rax,[rip+0xd12]        # 4020b2 <__sprintf_chk@plt+0xfb2>
  4013a0:	mov    QWORD PTR [rsp+0xd0],rax
  4013a8:	lea    rax,[rip+0xd07]        # 4020b6 <__sprintf_chk@plt+0xfb6>
  4013af:	mov    QWORD PTR [rsp+0xd8],rax
  4013b7:	lea    rax,[rip+0xc6e]        # 40202c <__sprintf_chk@plt+0xf2c>
  4013be:	mov    QWORD PTR [rsp+0x70],0x164cc
  4013c7:	mov    QWORD PTR [rsp+0xf0],rax
  4013cf:	lea    rax,[rip+0xc50]        # 402026 <__sprintf_chk@plt+0xf26>
  4013d6:	mov    QWORD PTR [rsp+0xf8],rax
  4013de:	lea    rax,[rip+0xcd4]        # 4020b9 <__sprintf_chk@plt+0xfb9>
  4013e5:	mov    QWORD PTR [rsp+0x100],rax
  4013ed:	lea    rax,[rip+0xccb]        # 4020bf <__sprintf_chk@plt+0xfbf>
  4013f4:	mov    QWORD PTR [rsp+0x108],rax
  4013fc:	lea    rax,[rip+0xcc2]        # 4020c5 <__sprintf_chk@plt+0xfc5>
  401403:	mov    QWORD PTR [rsp+0x110],rax
  40140b:	lea    rax,[rip+0xcb9]        # 4020cb <__sprintf_chk@plt+0xfcb>
  401412:	mov    QWORD PTR [rsp+0x118],rax
  40141a:	lea    rax,[rip+0xcb0]        # 4020d1 <__sprintf_chk@plt+0xfd1>
  401421:	mov    QWORD PTR [rsp+0x120],rax
  401429:	lea    rax,[rip+0xca4]        # 4020d4 <__sprintf_chk@plt+0xfd4>
  401430:	mov    QWORD PTR [rsp+0x128],rax
  401438:	lea    rax,[rip+0xc9a]        # 4020d9 <__sprintf_chk@plt+0xfd9>
  40143f:	mov    QWORD PTR [rsp+0x130],rax
  401447:	lea    rax,[rip+0xc91]        # 4020df <__sprintf_chk@plt+0xfdf>
  40144e:	mov    QWORD PTR [rsp+0x138],rax
  401456:	lea    rax,[rip+0xbc3]        # 402020 <__sprintf_chk@plt+0xf20>
  40145d:	mov    QWORD PTR [rsp+0x30],rax
  401462:	lea    rax,[rip+0xbb5]        # 40201e <__sprintf_chk@plt+0xf1e>
  401469:	mov    QWORD PTR [rsp+0x38],rax
  40146e:	lea    rax,[rip+0xcb8]        # 40212d <__sprintf_chk@plt+0x102d>
  401475:	mov    QWORD PTR [rsp+0x40],rax
  40147a:	lea    rax,[rip+0xc63]        # 4020e4 <__sprintf_chk@plt+0xfe4>
  401481:	mov    QWORD PTR [rsp+0x78],0x155
  40148a:	mov    QWORD PTR [rsp+0x80],0x83
  401496:	mov    QWORD PTR [rsp+0x88],0x0
  4014a2:	mov    QWORD PTR [rsp+0x140],0x0
  4014ae:	mov    QWORD PTR [rsp+0x48],rax
  4014b3:	mov    QWORD PTR [rsp+0x50],0x0
  4014bc:	call   4010b0 <puts@plt>
  4014c1:	lea    rax,[rsp+0x1d0]
  4014c9:	mov    QWORD PTR [rsp+0x20],rax
  4014ce:	lea    rax,[rsp+0x150]
  4014d6:	mov    DWORD PTR [rsp+0x10],0x0
  4014de:	mov    DWORD PTR [rsp+0x14],0x0
  4014e6:	mov    QWORD PTR [rsp+0x28],rax
  4014eb:	mov    QWORD PTR [rsp+0x18],r14
  4014f0:	lea    r14,[rsp+0x640]
  4014f8:	nop    DWORD PTR [rax+rax*1+0x0]
  401500:	mov    rax,QWORD PTR [rsp+0x28]
  401505:	lea    rbp,[rax+0x10]
  401509:	mov    rax,QWORD PTR [rip+0xce8]        # 4021f8 <__sprintf_chk@plt+0x10f8>
  401510:	mov    QWORD PTR [rsp+0x8],rax
  401515:	mov    rax,QWORD PTR [rip+0xce4]        # 402200 <__sprintf_chk@plt+0x1100>
  40151c:	mov    QWORD PTR [rsp],rax
  401520:	jmp    401581 <__sprintf_chk@plt+0x481>
  401522:	nop    WORD PTR [rax+rax*1+0x0]
  401528:	cmp    r13d,r12d
  40152b:	je     40154d <__sprintf_chk@plt+0x44d>
  40152d:	mov    r8,rbx
  401530:	mov    ecx,r13d
  401533:	mov    edx,r12d
  401536:	lea    rsi,[rip+0xbb7]        # 4020f4 <__sprintf_chk@plt+0xff4>
  40153d:	mov    edi,0x1
  401542:	xor    eax,eax
  401544:	call   4010f0 <__printf_chk@plt>
  401549:	inc    DWORD PTR [rsp+0x14]
  40154d:	vmovsd xmm2,QWORD PTR [rsp+0x8]
  401553:	vxorpd xmm3,xmm3,xmm3
  401557:	inc    DWORD PTR [rsp+0x10]
  40155b:	vucomisd xmm2,xmm3
  40155f:	jp     401567 <__sprintf_chk@plt+0x467>
  401561:	je     401628 <__sprintf_chk@plt+0x528>
  401567:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  40156c:	vmovsd xmm4,QWORD PTR [rsp+0x8]
  401572:	add    rbp,0x8
  401576:	vmovsd QWORD PTR [rsp],xmm4
  40157b:	vmovsd QWORD PTR [rsp+0x8],xmm0
  401581:	vmovsd xmm0,QWORD PTR [rsp]
  401586:	xor    esi,esi
  401588:	xor    edi,edi
  40158a:	mov    r8,rbx
  40158d:	mov    rcx,0xffffffffffffffff
  401594:	mov    edx,0x1
  401599:	mov    eax,0x1
  40159e:	call   4010a0 <__snprintf_chk@plt>
  4015a3:	vmovsd xmm0,QWORD PTR [rsp]
  4015a8:	mov    r8,rbx
  4015ab:	mov    ecx,0x400
  4015b0:	mov    edx,0x1
  4015b5:	mov    esi,0x400
  4015ba:	mov    rdi,r15
  4015bd:	mov    r12d,eax
  4015c0:	mov    eax,0x1
  4015c5:	call   4010a0 <__snprintf_chk@plt>
  4015ca:	vmovsd xmm0,QWORD PTR [rsp]
  4015cf:	mov    esi,0x1
  4015d4:	mov    rdi,r14
  4015d7:	mov    r13d,eax
  4015da:	mov    rcx,rbx
  4015dd:	mov    edx,0x400
  4015e2:	mov    eax,0x1
  4015e7:	call   401100 <__sprintf_chk@plt>
  4015ec:	mov    rsi,r14
  4015ef:	mov    rdi,r15
  4015f2:	call   4010e0 <strcmp@plt>
  4015f7:	test   eax,eax
  4015f9:	je     401528 <__sprintf_chk@plt+0x428>
  4015ff:	mov    r8,r14
  401602:	mov    rcx,r15
  401605:	mov    rdx,rbx
  401608:	lea    rsi,[rip+0xb79]        # 402188 <__sprintf_chk@plt+0x1088>
  40160f:	mov    edi,0x1
  401614:	xor    eax,eax
  401616:	call   4010f0 <__printf_chk@plt>
  40161b:	inc    DWORD PTR [rsp+0x14]
  40161f:	jmp    401528 <__sprintf_chk@plt+0x428>
  401624:	nop    DWORD PTR [rax+0x0]
  401628:	cmp    QWORD PTR [rsp+0x18],0x0
  40162e:	je     401650 <__sprintf_chk@plt+0x550>
  401630:	mov    rcx,QWORD PTR [rsp+0x20]
  401635:	mov    rbx,QWORD PTR [rsp+0x18]
  40163a:	mov    rax,QWORD PTR [rcx]
  40163d:	add    rcx,0x8
  401641:	mov    QWORD PTR [rsp+0x20],rcx
  401646:	mov    QWORD PTR [rsp+0x18],rax
  40164b:	jmp    401500 <__sprintf_chk@plt+0x400>
  401650:	lea    rax,[rsp+0xa0]
  401658:	mov    QWORD PTR [rsp+0x20],rax
  40165d:	lea    rax,[rip+0x9ad]        # 402011 <__sprintf_chk@plt+0xf11>
  401664:	mov    QWORD PTR [rsp+0x18],rax
  401669:	lea    rax,[rsp+0x60]
  40166e:	mov    QWORD PTR [rsp+0x28],rax
  401673:	mov    QWORD PTR [rsp+0x8],r14
  401678:	mov    QWORD PTR [rsp],r15
  40167c:	lea    rbp,[rip+0x994]        # 402017 <__sprintf_chk@plt+0xf17>
  401683:	nop    DWORD PTR [rax+rax*1+0x0]
  401688:	mov    rax,QWORD PTR [rsp+0x28]
  40168d:	mov    r12d,0x86
  401693:	lea    r13,[rax+0x10]
  401697:	mov    rbx,0xffffffffffffffff
  40169e:	jmp    4016e0 <__sprintf_chk@plt+0x5e0>
  4016a0:	cmp    r15d,r14d
  4016a3:	je     4016c5 <__sprintf_chk@plt+0x5c5>
  4016a5:	mov    r8,rbp
  4016a8:	mov    ecx,r15d
  4016ab:	mov    edx,r14d
  4016ae:	lea    rsi,[rip+0xa3f]        # 4020f4 <__sprintf_chk@plt+0xff4>
  4016b5:	mov    edi,0x1
  4016ba:	xor    eax,eax
  4016bc:	call   4010f0 <__printf_chk@plt>
  4016c1:	inc    DWORD PTR [rsp+0x14]
  4016c5:	inc    DWORD PTR [rsp+0x10]
  4016c9:	test   r12,r12
  4016cc:	je     401780 <__sprintf_chk@plt+0x680>
  4016d2:	mov    rax,QWORD PTR [r13+0x0]
  4016d6:	mov    rbx,r12
  4016d9:	add    r13,0x8
  4016dd:	mov    r12,rax
  4016e0:	mov    r9,rbx
  4016e3:	xor    esi,esi
  4016e5:	xor    edi,edi
  4016e7:	mov    r8,rbp
  4016ea:	mov    rcx,0xffffffffffffffff
  4016f1:	mov    edx,0x1
  4016f6:	xor    eax,eax
  4016f8:	call   4010a0 <__snprintf_chk@plt>
  4016fd:	mov    rdi,QWORD PTR [rsp]
  401701:	mov    r9,rbx
  401704:	mov    r8,rbp
  401707:	mov    ecx,0x400
  40170c:	mov    edx,0x1
  401711:	mov    esi,0x400
  401716:	mov    r14d,eax
  401719:	xor    eax,eax
  40171b:	call   4010a0 <__snprintf_chk@plt>
  401720:	mov    r8,rbx
  401723:	mov    rbx,QWORD PTR [rsp+0x8]
  401728:	mov    esi,0x1
  40172d:	mov    rdi,rbx
  401730:	mov    r15d,eax
  401733:	mov    rcx,rbp
  401736:	xor    eax,eax
  401738:	mov    edx,0x400
  40173d:	call   401100 <__sprintf_chk@plt>
  401742:	mov    rdi,QWORD PTR [rsp]
  401746:	mov    rsi,rbx
  401749:	call   4010e0 <strcmp@plt>
  40174e:	test   eax,eax
  401750:	je     4016a0 <__sprintf_chk@plt+0x5a0>
  401756:	mov    r8,QWORD PTR [rsp+0x8]
  40175b:	mov    rcx,QWORD PTR [rsp]
  40175f:	mov    rdx,rbp
  401762:	lea    rsi,[rip+0xa1f]        # 402188 <__sprintf_chk@plt+0x1088>
  401769:	mov    edi,0x1
  40176e:	xor    eax,eax
  401770:	call   4010f0 <__printf_chk@plt>
  401775:	inc    DWORD PTR [rsp+0x14]
  401779:	jmp    4016a0 <__sprintf_chk@plt+0x5a0>
  40177e:	xchg   ax,ax
  401780:	cmp    QWORD PTR [rsp+0x18],0x0
  401786:	je     4017b0 <__sprintf_chk@plt+0x6b0>
  401788:	mov    rdx,QWORD PTR [rsp+0x20]
  40178d:	mov    rbp,QWORD PTR [rsp+0x18]
  401792:	mov    rax,QWORD PTR [rdx]
  401795:	add    rdx,0x8
  401799:	mov    QWORD PTR [rsp+0x20],rdx
  40179e:	mov    QWORD PTR [rsp+0x18],rax
  4017a3:	jmp    401688 <__sprintf_chk@plt+0x588>
  4017a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4017b0:	lea    rax,[rsp+0x100]
  4017b8:	mov    QWORD PTR [rsp+0x20],rax
  4017bd:	lea    rax,[rip+0x862]        # 402026 <__sprintf_chk@plt+0xf26>
  4017c4:	mov    QWORD PTR [rsp+0x18],rax
  4017c9:	lea    rax,[rsp+0x30]
  4017ce:	mov    QWORD PTR [rsp+0x28],rax
  4017d3:	lea    r13,[rip+0x852]        # 40202c <__sprintf_chk@plt+0xf2c>
  4017da:	nop    WORD PTR [rax+rax*1+0x0]
  4017e0:	mov    rax,QWORD PTR [rsp+0x28]
  4017e5:	lea    rbp,[rip+0x832]        # 40201e <__sprintf_chk@plt+0xf1e>
  4017ec:	lea    r12,[rax+0x10]
  4017f0:	lea    rbx,[rip+0x829]        # 402020 <__sprintf_chk@plt+0xf20>
  4017f7:	mov    r9,rbx
  4017fa:	xor    esi,esi
  4017fc:	xor    edi,edi
  4017fe:	mov    r8,r13
  401801:	mov    rcx,0xffffffffffffffff
  401808:	mov    edx,0x1
  40180d:	xor    eax,eax
  40180f:	call   4010a0 <__snprintf_chk@plt>
  401814:	mov    rdi,QWORD PTR [rsp]
  401818:	mov    r9,rbx
  40181b:	mov    r8,r13
  40181e:	mov    ecx,0x400
  401823:	mov    edx,0x1
  401828:	mov    esi,0x400
  40182d:	mov    r14d,eax
  401830:	xor    eax,eax
  401832:	call   4010a0 <__snprintf_chk@plt>
  401837:	mov    r8,rbx
  40183a:	mov    rbx,QWORD PTR [rsp+0x8]
  40183f:	mov    esi,0x1
  401844:	mov    rdi,rbx
  401847:	mov    r15d,eax
  40184a:	mov    rcx,r13
  40184d:	xor    eax,eax
  40184f:	mov    edx,0x400
  401854:	call   401100 <__sprintf_chk@plt>
  401859:	mov    rdi,QWORD PTR [rsp]
  40185d:	mov    rsi,rbx
  401860:	call   4010e0 <strcmp@plt>
  401865:	test   eax,eax
  401867:	jne    4018b0 <__sprintf_chk@plt+0x7b0>
  401869:	cmp    r15d,r14d
  40186c:	je     40188e <__sprintf_chk@plt+0x78e>
  40186e:	mov    r8,r13
  401871:	mov    ecx,r15d
  401874:	mov    edx,r14d
  401877:	lea    rsi,[rip+0x876]        # 4020f4 <__sprintf_chk@plt+0xff4>
  40187e:	mov    edi,0x1
  401883:	xor    eax,eax
  401885:	call   4010f0 <__printf_chk@plt>
  40188a:	inc    DWORD PTR [rsp+0x14]
  40188e:	inc    DWORD PTR [rsp+0x10]
  401892:	test   rbp,rbp
  401895:	je     4018d8 <__sprintf_chk@plt+0x7d8>
  401897:	mov    rax,QWORD PTR [r12]
  40189b:	mov    rbx,rbp
  40189e:	add    r12,0x8
  4018a2:	mov    rbp,rax
  4018a5:	jmp    4017f7 <__sprintf_chk@plt+0x6f7>
  4018aa:	nop    WORD PTR [rax+rax*1+0x0]
  4018b0:	mov    r8,QWORD PTR [rsp+0x8]
  4018b5:	mov    rcx,QWORD PTR [rsp]
  4018b9:	mov    rdx,r13
  4018bc:	lea    rsi,[rip+0x8c5]        # 402188 <__sprintf_chk@plt+0x1088>
  4018c3:	mov    edi,0x1
  4018c8:	xor    eax,eax
  4018ca:	call   4010f0 <__printf_chk@plt>
  4018cf:	inc    DWORD PTR [rsp+0x14]
  4018d3:	jmp    401869 <__sprintf_chk@plt+0x769>
  4018d5:	nop    DWORD PTR [rax]
  4018d8:	mov    r13,QWORD PTR [rsp+0x18]
  4018dd:	test   r13,r13
  4018e0:	je     401900 <__sprintf_chk@plt+0x800>
  4018e2:	mov    rcx,QWORD PTR [rsp+0x20]
  4018e7:	mov    rax,QWORD PTR [rcx]
  4018ea:	add    rcx,0x8
  4018ee:	mov    QWORD PTR [rsp+0x20],rcx
  4018f3:	mov    QWORD PTR [rsp+0x18],rax
  4018f8:	jmp    4017e0 <__sprintf_chk@plt+0x6e0>
  4018fd:	nop    DWORD PTR [rax]
  401900:	mov    ecx,DWORD PTR [rsp+0x10]
  401904:	mov    edx,DWORD PTR [rsp+0x14]
  401908:	lea    rsi,[rip+0x803]        # 402112 <__sprintf_chk@plt+0x1012>
  40190f:	mov    edi,0x1
  401914:	xor    eax,eax
  401916:	mov    r14,QWORD PTR [rsp+0x8]
  40191b:	mov    r15,QWORD PTR [rsp]
  40191f:	call   4010f0 <__printf_chk@plt>
  401924:	lea    rdi,[rip+0x8a5]        # 4021d0 <__sprintf_chk@plt+0x10d0>
  40192b:	call   4010b0 <puts@plt>
  401930:	xor    ebx,ebx
  401932:	lea    rbp,[rip+0x6d2]        # 40200b <__sprintf_chk@plt+0xf0b>
  401939:	jmp    40194b <__sprintf_chk@plt+0x84b>
  40193b:	nop    DWORD PTR [rax+rax*1+0x0]
  401940:	inc    ebx
  401942:	cmp    ebx,0x64
  401945:	je     4019e0 <__sprintf_chk@plt+0x8e0>
  40194b:	vxorpd xmm1,xmm1,xmm1
  40194f:	vcvtsi2sd xmm1,xmm1,ebx
  401953:	mov    rax,QWORD PTR [rip+0x906]        # 402260 <__sprintf_chk@plt+0x1160>
  40195a:	vmovq  xmm0,rax
  40195f:	call   4010c0 <pow@plt>
  401964:	vmulsd xmm1,xmm0,QWORD PTR [rip+0x8fc]        # 402268 <__sprintf_chk@plt+0x1168>
  40196c:	mov    r8,rbp
  40196f:	mov    ecx,0x400
  401974:	mov    edx,0x1
  401979:	mov    esi,0x400
  40197e:	vmovapd xmm0,xmm1
  401982:	mov    rdi,r15
  401985:	mov    eax,0x1
  40198a:	vmovsd QWORD PTR [rsp],xmm1
  40198f:	call   4010a0 <__snprintf_chk@plt>
  401994:	vmovsd xmm1,QWORD PTR [rsp]
  401999:	mov    esi,0x1
  40199e:	mov    rdi,r14
  4019a1:	vmovapd xmm0,xmm1
  4019a5:	mov    rcx,rbp
  4019a8:	mov    edx,0x400
  4019ad:	mov    eax,0x1
  4019b2:	call   401100 <__sprintf_chk@plt>
  4019b7:	mov    rsi,r14
  4019ba:	mov    rdi,r15
  4019bd:	call   4010e0 <strcmp@plt>
  4019c2:	test   eax,eax
  4019c4:	je     401940 <__sprintf_chk@plt+0x840>
  4019ca:	lea    edx,[rbx-0x1]
  4019cd:	lea    rsi,[rip+0x75a]        # 40212e <__sprintf_chk@plt+0x102e>
  4019d4:	mov    edi,0x1
  4019d9:	xor    eax,eax
  4019db:	call   4010f0 <__printf_chk@plt>
  4019e0:	xor    eax,eax
  4019e2:	mov    rdx,QWORD PTR [rsp+0xa48]
  4019ea:	xor    rdx,QWORD PTR fs:0x28
  4019f3:	jne    401a07 <__sprintf_chk@plt+0x907>
  4019f5:	add    rsp,0xa58
  4019fc:	pop    rbx
  4019fd:	pop    rbp
  4019fe:	pop    r12
  401a00:	pop    r13
  401a02:	pop    r14
  401a04:	pop    r15
  401a06:	ret    
  401a07:	call   4010d0 <__stack_chk_fail@plt>
  401a0c:	nop    DWORD PTR [rax+0x0]
  401a10:	endbr64 
  401a14:	xor    ebp,ebp
  401a16:	mov    r9,rdx
  401a19:	pop    rsi
  401a1a:	mov    rdx,rsp
  401a1d:	and    rsp,0xfffffffffffffff0
  401a21:	push   rax
  401a22:	push   rsp
  401a23:	mov    r8,0x401b70
  401a2a:	mov    rcx,0x401b00
  401a31:	mov    rdi,0x401110
  401a38:	call   QWORD PTR [rip+0x25b2]        # 403ff0 <__sprintf_chk@plt+0x2ef0>
  401a3e:	hlt    
  401a3f:	nop
  401a40:	endbr64 
  401a44:	ret    
  401a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a4f:	nop
  401a50:	mov    eax,0x404060
  401a55:	cmp    rax,0x404060
  401a5b:	je     401a70 <__sprintf_chk@plt+0x970>
  401a5d:	mov    eax,0x0
  401a62:	test   rax,rax
  401a65:	je     401a70 <__sprintf_chk@plt+0x970>
  401a67:	mov    edi,0x404060
  401a6c:	jmp    rax
  401a6e:	xchg   ax,ax
  401a70:	ret    
  401a71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	mov    esi,0x404060
  401a85:	sub    rsi,0x404060
  401a8c:	sar    rsi,0x3
  401a90:	mov    rax,rsi
  401a93:	shr    rax,0x3f
  401a97:	add    rsi,rax
  401a9a:	sar    rsi,1
  401a9d:	je     401ab0 <__sprintf_chk@plt+0x9b0>
  401a9f:	mov    eax,0x0
  401aa4:	test   rax,rax
  401aa7:	je     401ab0 <__sprintf_chk@plt+0x9b0>
  401aa9:	mov    edi,0x404060
  401aae:	jmp    rax
  401ab0:	ret    
  401ab1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401abc:	nop    DWORD PTR [rax+0x0]
  401ac0:	endbr64 
  401ac4:	cmp    BYTE PTR [rip+0x2595],0x0        # 404060 <__sprintf_chk@plt+0x2f60>
  401acb:	jne    401ae0 <__sprintf_chk@plt+0x9e0>
  401acd:	push   rbp
  401ace:	mov    rbp,rsp
  401ad1:	call   401a50 <__sprintf_chk@plt+0x950>
  401ad6:	mov    BYTE PTR [rip+0x2583],0x1        # 404060 <__sprintf_chk@plt+0x2f60>
  401add:	pop    rbp
  401ade:	ret    
  401adf:	nop
  401ae0:	ret    
  401ae1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401aec:	nop    DWORD PTR [rax+0x0]
  401af0:	endbr64 
  401af4:	jmp    401a80 <__sprintf_chk@plt+0x980>
  401af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b00:	endbr64 
  401b04:	push   r15
  401b06:	lea    r15,[rip+0x22f3]        # 403e00 <__sprintf_chk@plt+0x2d00>
  401b0d:	push   r14
  401b0f:	mov    r14,rdx
  401b12:	push   r13
  401b14:	mov    r13,rsi
  401b17:	push   r12
  401b19:	mov    r12d,edi
  401b1c:	push   rbp
  401b1d:	lea    rbp,[rip+0x22e4]        # 403e08 <__sprintf_chk@plt+0x2d08>
  401b24:	push   rbx
  401b25:	sub    rbp,r15
  401b28:	sub    rsp,0x8
  401b2c:	call   401000 <__snprintf_chk@plt-0xa0>
  401b31:	sar    rbp,0x3
  401b35:	je     401b56 <__sprintf_chk@plt+0xa56>
  401b37:	xor    ebx,ebx
  401b39:	nop    DWORD PTR [rax+0x0]
  401b40:	mov    rdx,r14
  401b43:	mov    rsi,r13
  401b46:	mov    edi,r12d
  401b49:	call   QWORD PTR [r15+rbx*8]
  401b4d:	add    rbx,0x1
  401b51:	cmp    rbp,rbx
  401b54:	jne    401b40 <__sprintf_chk@plt+0xa40>
  401b56:	add    rsp,0x8
  401b5a:	pop    rbx
  401b5b:	pop    rbp
  401b5c:	pop    r12
  401b5e:	pop    r13
  401b60:	pop    r14
  401b62:	pop    r15
  401b64:	ret    
  401b65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b70:	endbr64 
  401b74:	ret    

Disassembly of section .fini:

0000000000401b78 <.fini>:
  401b78:	endbr64 
  401b7c:	sub    rsp,0x8
  401b80:	add    rsp,0x8
  401b84:	ret    
