
../repos/LuaJIT-2.0.5/src/host/minilua:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x2dfd9]        # 42ffe8 <__ctype_b_loc@plt+0x2dd18>
  40200f:	test   rax,rax
  402012:	je     402016 <__ctype_toupper_loc@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <__ctype_toupper_loc@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x2dfe2]        # 430008 <__ctype_b_loc@plt+0x2dd38>
  402026:	jmp    QWORD PTR [rip+0x2dfe4]        # 430010 <__ctype_b_loc@plt+0x2dd40>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <__ctype_toupper_loc@plt>:
  402030:	jmp    QWORD PTR [rip+0x2dfe2]        # 430018 <__ctype_b_loc@plt+0x2dd48>
  402036:	push   0x0
  40203b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0x2dfda]        # 430020 <__ctype_b_loc@plt+0x2dd50>
  402046:	push   0x1
  40204b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x2dfd2]        # 430028 <__ctype_b_loc@plt+0x2dd58>
  402056:	push   0x2
  40205b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402060 <strncpy@plt>:
  402060:	jmp    QWORD PTR [rip+0x2dfca]        # 430030 <__ctype_b_loc@plt+0x2dd60>
  402066:	push   0x3
  40206b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402070 <remove@plt>:
  402070:	jmp    QWORD PTR [rip+0x2dfc2]        # 430038 <__ctype_b_loc@plt+0x2dd68>
  402076:	push   0x4
  40207b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402080 <__isoc99_fscanf@plt>:
  402080:	jmp    QWORD PTR [rip+0x2dfba]        # 430040 <__ctype_b_loc@plt+0x2dd70>
  402086:	push   0x5
  40208b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402090 <ferror@plt>:
  402090:	jmp    QWORD PTR [rip+0x2dfb2]        # 430048 <__ctype_b_loc@plt+0x2dd78>
  402096:	push   0x6
  40209b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020a0 <fread@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x2dfaa]        # 430050 <__ctype_b_loc@plt+0x2dd80>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020b0 <strtod@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x2dfa2]        # 430058 <__ctype_b_loc@plt+0x2dd88>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020c0 <pow@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x2df9a]        # 430060 <__ctype_b_loc@plt+0x2dd90>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020d0 <fclose@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x2df92]        # 430068 <__ctype_b_loc@plt+0x2dd98>
  4020d6:	push   0xa
  4020db:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020e0 <strlen@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x2df8a]        # 430070 <__ctype_b_loc@plt+0x2dda0>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020f0 <strchr@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x2df82]        # 430078 <__ctype_b_loc@plt+0x2dda8>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402100 <memset@plt>:
  402100:	jmp    QWORD PTR [rip+0x2df7a]        # 430080 <__ctype_b_loc@plt+0x2ddb0>
  402106:	push   0xd
  40210b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402110 <freopen@plt>:
  402110:	jmp    QWORD PTR [rip+0x2df72]        # 430088 <__ctype_b_loc@plt+0x2ddb8>
  402116:	push   0xe
  40211b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402120 <strncat@plt>:
  402120:	jmp    QWORD PTR [rip+0x2df6a]        # 430090 <__ctype_b_loc@plt+0x2ddc0>
  402126:	push   0xf
  40212b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402130 <strcspn@plt>:
  402130:	jmp    QWORD PTR [rip+0x2df62]        # 430098 <__ctype_b_loc@plt+0x2ddc8>
  402136:	push   0x10
  40213b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402140 <memchr@plt>:
  402140:	jmp    QWORD PTR [rip+0x2df5a]        # 4300a0 <__ctype_b_loc@plt+0x2ddd0>
  402146:	push   0x11
  40214b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402150 <fgets@plt>:
  402150:	jmp    QWORD PTR [rip+0x2df52]        # 4300a8 <__ctype_b_loc@plt+0x2ddd8>
  402156:	push   0x12
  40215b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402160 <_setjmp@plt>:
  402160:	jmp    QWORD PTR [rip+0x2df4a]        # 4300b0 <__ctype_b_loc@plt+0x2dde0>
  402166:	push   0x13
  40216b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402170 <strcmp@plt>:
  402170:	jmp    QWORD PTR [rip+0x2df42]        # 4300b8 <__ctype_b_loc@plt+0x2dde8>
  402176:	push   0x14
  40217b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402180 <fprintf@plt>:
  402180:	jmp    QWORD PTR [rip+0x2df3a]        # 4300c0 <__ctype_b_loc@plt+0x2ddf0>
  402186:	push   0x15
  40218b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402190 <feof@plt>:
  402190:	jmp    QWORD PTR [rip+0x2df32]        # 4300c8 <__ctype_b_loc@plt+0x2ddf8>
  402196:	push   0x16
  40219b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021a0 <clearerr@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x2df2a]        # 4300d0 <__ctype_b_loc@plt+0x2de00>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021b0 <memcpy@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x2df22]        # 4300d8 <__ctype_b_loc@plt+0x2de08>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021c0 <malloc@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x2df1a]        # 4300e0 <__ctype_b_loc@plt+0x2de10>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021d0 <fflush@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x2df12]        # 4300e8 <__ctype_b_loc@plt+0x2de18>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021e0 <ungetc@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x2df0a]        # 4300f0 <__ctype_b_loc@plt+0x2de20>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021f0 <bcmp@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x2df02]        # 4300f8 <__ctype_b_loc@plt+0x2de28>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402200 <strcoll@plt>:
  402200:	jmp    QWORD PTR [rip+0x2defa]        # 430100 <__ctype_b_loc@plt+0x2de30>
  402206:	push   0x1d
  40220b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402210 <strpbrk@plt>:
  402210:	jmp    QWORD PTR [rip+0x2def2]        # 430108 <__ctype_b_loc@plt+0x2de38>
  402216:	push   0x1e
  40221b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402220 <realloc@plt>:
  402220:	jmp    QWORD PTR [rip+0x2deea]        # 430110 <__ctype_b_loc@plt+0x2de40>
  402226:	push   0x1f
  40222b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402230 <longjmp@plt>:
  402230:	jmp    QWORD PTR [rip+0x2dee2]        # 430118 <__ctype_b_loc@plt+0x2de48>
  402236:	push   0x20
  40223b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402240 <fopen@plt>:
  402240:	jmp    QWORD PTR [rip+0x2deda]        # 430120 <__ctype_b_loc@plt+0x2de50>
  402246:	push   0x21
  40224b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402250 <strtoul@plt>:
  402250:	jmp    QWORD PTR [rip+0x2ded2]        # 430128 <__ctype_b_loc@plt+0x2de58>
  402256:	push   0x22
  40225b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402260 <strcat@plt>:
  402260:	jmp    QWORD PTR [rip+0x2deca]        # 430130 <__ctype_b_loc@plt+0x2de60>
  402266:	push   0x23
  40226b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402270 <sprintf@plt>:
  402270:	jmp    QWORD PTR [rip+0x2dec2]        # 430138 <__ctype_b_loc@plt+0x2de68>
  402276:	push   0x24
  40227b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402280 <exit@plt>:
  402280:	jmp    QWORD PTR [rip+0x2deba]        # 430140 <__ctype_b_loc@plt+0x2de70>
  402286:	push   0x25
  40228b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402290 <fwrite@plt>:
  402290:	jmp    QWORD PTR [rip+0x2deb2]        # 430148 <__ctype_b_loc@plt+0x2de78>
  402296:	push   0x26
  40229b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022a0 <strerror@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x2deaa]        # 430150 <__ctype_b_loc@plt+0x2de80>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022b0 <getc@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x2dea2]        # 430158 <__ctype_b_loc@plt+0x2de88>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022c0 <__ctype_tolower_loc@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x2de9a]        # 430160 <__ctype_b_loc@plt+0x2de90>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022d0 <__ctype_b_loc@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x2de92]        # 430168 <__ctype_b_loc@plt+0x2de98>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

00000000004022e0 <.text>:
  4022e0:	endbr64 
  4022e4:	xor    ebp,ebp
  4022e6:	mov    r9,rdx
  4022e9:	pop    rsi
  4022ea:	mov    rdx,rsp
  4022ed:	and    rsp,0xfffffffffffffff0
  4022f1:	push   rax
  4022f2:	push   rsp
  4022f3:	mov    r8,0x4286c0
  4022fa:	mov    rcx,0x428650
  402301:	mov    rdi,0x4023d0
  402308:	call   QWORD PTR [rip+0x2dcd2]        # 42ffe0 <__ctype_b_loc@plt+0x2dd10>
  40230e:	hlt    
  40230f:	nop
  402310:	endbr64 
  402314:	ret    
  402315:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40231f:	nop
  402320:	mov    eax,0x430180
  402325:	cmp    rax,0x430180
  40232b:	je     402340 <__ctype_b_loc@plt+0x70>
  40232d:	mov    eax,0x0
  402332:	test   rax,rax
  402335:	je     402340 <__ctype_b_loc@plt+0x70>
  402337:	mov    edi,0x430180
  40233c:	jmp    rax
  40233e:	xchg   ax,ax
  402340:	ret    
  402341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40234c:	nop    DWORD PTR [rax+0x0]
  402350:	mov    esi,0x430180
  402355:	sub    rsi,0x430180
  40235c:	mov    rax,rsi
  40235f:	shr    rsi,0x3f
  402363:	sar    rax,0x3
  402367:	add    rsi,rax
  40236a:	sar    rsi,1
  40236d:	je     402380 <__ctype_b_loc@plt+0xb0>
  40236f:	mov    eax,0x0
  402374:	test   rax,rax
  402377:	je     402380 <__ctype_b_loc@plt+0xb0>
  402379:	mov    edi,0x430180
  40237e:	jmp    rax
  402380:	ret    
  402381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	endbr64 
  402394:	cmp    BYTE PTR [rip+0x2dde5],0x0        # 430180 <__ctype_b_loc@plt+0x2deb0>
  40239b:	jne    4023b0 <__ctype_b_loc@plt+0xe0>
  40239d:	push   rbp
  40239e:	mov    rbp,rsp
  4023a1:	call   402320 <__ctype_b_loc@plt+0x50>
  4023a6:	mov    BYTE PTR [rip+0x2ddd3],0x1        # 430180 <__ctype_b_loc@plt+0x2deb0>
  4023ad:	pop    rbp
  4023ae:	ret    
  4023af:	nop
  4023b0:	ret    
  4023b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023bc:	nop    DWORD PTR [rax+0x0]
  4023c0:	endbr64 
  4023c4:	jmp    402350 <__ctype_b_loc@plt+0x80>
  4023c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023d0:	push   rbp
  4023d1:	push   r15
  4023d3:	push   r14
  4023d5:	push   r13
  4023d7:	push   r12
  4023d9:	push   rbx
  4023da:	sub    rsp,0x38
  4023de:	mov    r15,rsi
  4023e1:	mov    DWORD PTR [rsp+0x4],edi
  4023e5:	mov    edi,0x268
  4023ea:	call   4021c0 <malloc@plt>
  4023ef:	test   rax,rax
  4023f2:	je     40257a <__ctype_b_loc@plt+0x2aa>
  4023f8:	mov    r13,rax
  4023fb:	add    rax,0xb8
  402401:	mov    QWORD PTR [r13+0x0],0x0
  402409:	mov    BYTE PTR [r13+0x8],0x8
  40240e:	mov    BYTE PTR [r13+0xd8],0x21
  402416:	mov    WORD PTR [r13+0x9],0x61
  40241d:	mov    QWORD PTR [r13+0x20],rax
  402421:	mov    QWORD PTR [r13+0x40],0x0
  402429:	mov    DWORD PTR [r13+0x58],0x0
  402431:	vxorps xmm0,xmm0,xmm0
  402435:	vmovups XMMWORD PTR [r13+0xa8],xmm0
  40243e:	mov    WORD PTR [r13+0x64],0x100
  402445:	vmovups XMMWORD PTR [r13+0x68],xmm0
  40244b:	mov    QWORD PTR [r13+0x98],0x0
  402456:	mov    QWORD PTR [r13+0x50],0x0
  40245e:	mov    DWORD PTR [r13+0x80],0x0
  402469:	vmovups XMMWORD PTR [r13+0x28],xmm0
  40246f:	mov    QWORD PTR [r13+0x5c],0x0
  402477:	lea    rax,[rip+0xdf2]        # 403270 <__ctype_b_loc@plt+0xfa0>
  40247e:	mov    QWORD PTR [r13+0xc8],rax
  402485:	mov    QWORD PTR [r13+0xd0],0x0
  402490:	mov    QWORD PTR [r13+0x168],r13
  402497:	lea    rax,[r13+0x170]
  40249e:	mov    QWORD PTR [r13+0x188],rax
  4024a5:	mov    QWORD PTR [r13+0x190],rax
  4024ac:	vmovups XMMWORD PTR [r13+0xb8],xmm0
  4024b5:	mov    DWORD PTR [r13+0x160],0x0
  4024c0:	mov    QWORD PTR [r13+0x110],0x0
  4024cb:	mov    QWORD PTR [r13+0x150],0x0
  4024d6:	mov    BYTE PTR [r13+0xd9],0x0
  4024de:	mov    rax,r13
  4024e1:	add    rax,0xe0
  4024e7:	vmovups XMMWORD PTR [r13+0x120],xmm0
  4024f0:	mov    QWORD PTR [r13+0xe0],r13
  4024f7:	mov    DWORD PTR [r13+0xdc],0x0
  402502:	mov    QWORD PTR [r13+0xe8],rax
  402509:	vxorps xmm0,xmm0,xmm0
  40250d:	vmovups YMMWORD PTR [r13+0xf0],ymm0
  402516:	mov    QWORD PTR [r13+0x130],0x268
  402521:	movabs rax,0xc8000000c8
  40252b:	mov    QWORD PTR [r13+0x148],rax
  402532:	mov    QWORD PTR [r13+0x140],0x0
  40253d:	vmovups YMMWORD PTR [r13+0x198],ymm0
  402546:	vmovups YMMWORD PTR [r13+0x1b8],ymm0
  40254f:	mov    QWORD PTR [r13+0x1d8],0x0
  40255a:	lea    rsi,[rip+0xe4f]        # 4033b0 <__ctype_b_loc@plt+0x10e0>
  402561:	mov    rdi,r13
  402564:	xor    edx,edx
  402566:	vzeroupper 
  402569:	call   403340 <__ctype_b_loc@plt+0x1070>
  40256e:	test   eax,eax
  402570:	je     40257f <__ctype_b_loc@plt+0x2af>
  402572:	mov    rdi,r13
  402575:	call   4035d0 <__ctype_b_loc@plt+0x1300>
  40257a:	xor    r13d,r13d
  40257d:	jmp    402591 <__ctype_b_loc@plt+0x2c1>
  40257f:	mov    rax,QWORD PTR [r13+0x20]
  402583:	lea    rcx,[rip+0xd06]        # 403290 <__ctype_b_loc@plt+0xfc0>
  40258a:	mov    QWORD PTR [rax+0x98],rcx
  402591:	lea    rbx,[rip+0x2d538]        # 42fad0 <__ctype_b_loc@plt+0x2d800>
  402598:	lea    rsi,[rip+0x9641]        # 40bbe0 <__ctype_b_loc@plt+0x9910>
  40259f:	jmp    4025f4 <__ctype_b_loc@plt+0x324>
  4025a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4025b0:	mov    r14,QWORD PTR [r13+0x10]
  4025b4:	mov    rdi,r13
  4025b7:	mov    rsi,rbp
  4025ba:	mov    rdx,r12
  4025bd:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4025c2:	mov    QWORD PTR [r14],rax
  4025c5:	mov    DWORD PTR [r14+0x8],0x4
  4025cd:	mov    rsi,QWORD PTR [r13+0x10]
  4025d1:	lea    rax,[rsi+0x10]
  4025d5:	mov    QWORD PTR [r13+0x10],rax
  4025d9:	add    rsi,0xfffffffffffffff0
  4025dd:	mov    rdi,r13
  4025e0:	xor    edx,edx
  4025e2:	call   405020 <__ctype_b_loc@plt+0x2d50>
  4025e7:	mov    rsi,QWORD PTR [rbx+0x18]
  4025eb:	add    rbx,0x10
  4025ef:	test   rsi,rsi
  4025f2:	je     40263d <__ctype_b_loc@plt+0x36d>
  4025f4:	mov    rdi,r13
  4025f7:	xor    edx,edx
  4025f9:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  4025fe:	mov    rbp,QWORD PTR [rbx]
  402601:	test   rbp,rbp
  402604:	je     402630 <__ctype_b_loc@plt+0x360>
  402606:	mov    rdi,rbp
  402609:	call   4020e0 <strlen@plt>
  40260e:	mov    r12,rax
  402611:	mov    rax,QWORD PTR [r13+0x20]
  402615:	mov    rcx,QWORD PTR [rax+0x78]
  402619:	cmp    rcx,QWORD PTR [rax+0x70]
  40261d:	jb     4025b0 <__ctype_b_loc@plt+0x2e0>
  40261f:	mov    rdi,r13
  402622:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  402627:	jmp    4025b0 <__ctype_b_loc@plt+0x2e0>
  402629:	nop    DWORD PTR [rax+0x0]
  402630:	mov    rsi,QWORD PTR [r13+0x10]
  402634:	mov    DWORD PTR [rsi+0x8],0x0
  40263b:	jmp    4025d1 <__ctype_b_loc@plt+0x301>
  40263d:	lea    rsi,[rip+0x283c1]        # 42aa05 <__ctype_b_loc@plt+0x28735>
  402644:	lea    rdx,[rip+0x2d1c5]        # 42f810 <__ctype_b_loc@plt+0x2d540>
  40264b:	mov    rdi,r13
  40264e:	call   402960 <__ctype_b_loc@plt+0x690>
  402653:	mov    eax,0x8
  402658:	cmp    DWORD PTR [rsp+0x4],0x2
  40265d:	jl     4028b5 <__ctype_b_loc@plt+0x5e5>
  402663:	mov    rax,QWORD PTR [r13+0x20]
  402667:	mov    rcx,QWORD PTR [rax+0x78]
  40266b:	cmp    rcx,QWORD PTR [rax+0x70]
  40266f:	jb     402679 <__ctype_b_loc@plt+0x3a9>
  402671:	mov    rdi,r13
  402674:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  402679:	mov    rbx,QWORD PTR [r13+0x10]
  40267d:	mov    rdi,r13
  402680:	xor    esi,esi
  402682:	mov    edx,0x1
  402687:	call   403700 <__ctype_b_loc@plt+0x1430>
  40268c:	mov    QWORD PTR [rbx],rax
  40268f:	mov    DWORD PTR [rbx+0x8],0x5
  402696:	mov    rax,QWORD PTR [r13+0x10]
  40269a:	lea    rbx,[rax+0x10]
  40269e:	mov    QWORD PTR [r13+0x10],rbx
  4026a2:	mov    rbp,QWORD PTR [r15+0x8]
  4026a6:	test   rbp,rbp
  4026a9:	je     4026ee <__ctype_b_loc@plt+0x41e>
  4026ab:	mov    rdi,rbp
  4026ae:	call   4020e0 <strlen@plt>
  4026b3:	mov    r12,rax
  4026b6:	mov    rax,QWORD PTR [r13+0x20]
  4026ba:	mov    rcx,QWORD PTR [rax+0x78]
  4026be:	cmp    rcx,QWORD PTR [rax+0x70]
  4026c2:	jb     4026d0 <__ctype_b_loc@plt+0x400>
  4026c4:	mov    rdi,r13
  4026c7:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4026cc:	mov    rbx,QWORD PTR [r13+0x10]
  4026d0:	mov    rdi,r13
  4026d3:	mov    rsi,rbp
  4026d6:	mov    rdx,r12
  4026d9:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4026de:	mov    QWORD PTR [rbx],rax
  4026e1:	mov    DWORD PTR [rbx+0x8],0x4
  4026e8:	mov    rbx,QWORD PTR [r13+0x10]
  4026ec:	jmp    4026f5 <__ctype_b_loc@plt+0x425>
  4026ee:	mov    DWORD PTR [rax+0x18],0x0
  4026f5:	add    rbx,0x10
  4026f9:	mov    QWORD PTR [r13+0x10],rbx
  4026fd:	mov    rdi,r13
  402700:	mov    esi,0xfffffffe
  402705:	xor    edx,edx
  402707:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  40270c:	lea    rbx,[r13+0x78]
  402710:	lea    rsi,[rip+0x27669]        # 429d80 <__ctype_b_loc@plt+0x27ab0>
  402717:	mov    edx,0x3
  40271c:	mov    rdi,r13
  40271f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402724:	mov    QWORD PTR [rsp+0x10],rax
  402729:	mov    DWORD PTR [rsp+0x18],0x4
  402731:	mov    rcx,QWORD PTR [r13+0x10]
  402735:	add    rcx,0xfffffffffffffff0
  402739:	lea    rdx,[rsp+0x10]
  40273e:	mov    rdi,r13
  402741:	mov    rsi,rbx
  402744:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  402749:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40274e:	mov    rsi,QWORD PTR [r15+0x8]
  402752:	mov    rdi,r13
  402755:	call   402d90 <__ctype_b_loc@plt+0xac0>
  40275a:	test   eax,eax
  40275c:	jne    4028c4 <__ctype_b_loc@plt+0x5f4>
  402762:	mov    eax,DWORD PTR [rsp+0x4]
  402766:	cmp    eax,0x2
  402769:	jle    4027fd <__ctype_b_loc@plt+0x52d>
  40276f:	mov    eax,eax
  402771:	mov    QWORD PTR [rsp+0x8],rax
  402776:	mov    r14d,0x2
  40277c:	jmp    4027b6 <__ctype_b_loc@plt+0x4e6>
  40277e:	xchg   ax,ax
  402780:	mov    r15,QWORD PTR [r13+0x10]
  402784:	mov    rdi,r13
  402787:	mov    rsi,rbp
  40278a:	mov    rdx,rbx
  40278d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402792:	mov    QWORD PTR [r15],rax
  402795:	mov    DWORD PTR [r15+0x8],0x4
  40279d:	mov    rax,QWORD PTR [r13+0x10]
  4027a1:	mov    r15,r12
  4027a4:	add    rax,0x10
  4027a8:	mov    QWORD PTR [r13+0x10],rax
  4027ac:	inc    r14
  4027af:	cmp    QWORD PTR [rsp+0x8],r14
  4027b4:	je     402801 <__ctype_b_loc@plt+0x531>
  4027b6:	mov    rbp,QWORD PTR [r15+r14*8]
  4027ba:	test   rbp,rbp
  4027bd:	je     4027f0 <__ctype_b_loc@plt+0x520>
  4027bf:	mov    r12,r15
  4027c2:	mov    rdi,rbp
  4027c5:	call   4020e0 <strlen@plt>
  4027ca:	mov    rbx,rax
  4027cd:	mov    rax,QWORD PTR [r13+0x20]
  4027d1:	mov    rcx,QWORD PTR [rax+0x78]
  4027d5:	cmp    rcx,QWORD PTR [rax+0x70]
  4027d9:	jb     402780 <__ctype_b_loc@plt+0x4b0>
  4027db:	mov    rdi,r13
  4027de:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4027e3:	jmp    402780 <__ctype_b_loc@plt+0x4b0>
  4027e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027ef:	nop
  4027f0:	mov    rax,QWORD PTR [r13+0x10]
  4027f4:	mov    DWORD PTR [rax+0x8],0x0
  4027fb:	jmp    4027a4 <__ctype_b_loc@plt+0x4d4>
  4027fd:	mov    rax,QWORD PTR [r13+0x10]
  402801:	mov    ecx,0x1
  402806:	sub    ecx,DWORD PTR [rsp+0x4]
  40280a:	movsxd rcx,ecx
  40280d:	shl    rcx,0x4
  402811:	add    rcx,rax
  402814:	mov    QWORD PTR [rsp+0x10],rcx
  402819:	mov    DWORD PTR [rsp+0x18],0x0
  402821:	sub    rcx,QWORD PTR [r13+0x40]
  402825:	lea    rsi,[rip+0x25de4]        # 428610 <__ctype_b_loc@plt+0x26340>
  40282c:	lea    rdx,[rsp+0x10]
  402831:	mov    rdi,r13
  402834:	xor    r8d,r8d
  402837:	call   410a80 <__ctype_b_loc@plt+0xe7b0>
  40283c:	test   eax,eax
  40283e:	jne    4028c4 <__ctype_b_loc@plt+0x5f4>
  402844:	mov    rax,QWORD PTR [r13+0x20]
  402848:	mov    rbx,QWORD PTR [rax+0xb0]
  40284f:	mov    rsi,QWORD PTR [rbx+0x40]
  402853:	mov    rdi,rbx
  402856:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  40285b:	mov    rdi,rbx
  40285e:	mov    esi,0x1
  402863:	call   40b7a0 <__ctype_b_loc@plt+0x94d0>
  402868:	mov    QWORD PTR [rbx+0xb0],0x0
  402873:	lea    rbp,[rip+0x25da6]        # 428620 <__ctype_b_loc@plt+0x26350>
  40287a:	nop    WORD PTR [rax+rax*1+0x0]
  402880:	mov    rax,QWORD PTR [rbx+0x50]
  402884:	mov    QWORD PTR [rbx+0x28],rax
  402888:	mov    rax,QWORD PTR [rax]
  40288b:	mov    QWORD PTR [rbx+0x10],rax
  40288f:	mov    QWORD PTR [rbx+0x18],rax
  402893:	mov    DWORD PTR [rbx+0x60],0x0
  40289a:	mov    rdi,rbx
  40289d:	mov    rsi,rbp
  4028a0:	xor    edx,edx
  4028a2:	call   403340 <__ctype_b_loc@plt+0x1070>
  4028a7:	test   eax,eax
  4028a9:	jne    402880 <__ctype_b_loc@plt+0x5b0>
  4028ab:	mov    rdi,rbx
  4028ae:	call   4035d0 <__ctype_b_loc@plt+0x1300>
  4028b3:	xor    eax,eax
  4028b5:	add    rsp,0x38
  4028b9:	pop    rbx
  4028ba:	pop    r12
  4028bc:	pop    r13
  4028be:	pop    r14
  4028c0:	pop    r15
  4028c2:	pop    rbp
  4028c3:	ret    
  4028c4:	mov    rax,QWORD PTR [rip+0x2d725]        # 42fff0 <__ctype_b_loc@plt+0x2dd20>
  4028cb:	mov    rbp,QWORD PTR [rax]
  4028ce:	mov    rbx,QWORD PTR [r13+0x10]
  4028d2:	mov    eax,DWORD PTR [rbx-0x8]
  4028d5:	cmp    eax,0x4
  4028d8:	je     402935 <__ctype_b_loc@plt+0x665>
  4028da:	cmp    eax,0x3
  4028dd:	jne    402942 <__ctype_b_loc@plt+0x672>
  4028df:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  4028e4:	lea    rsi,[rip+0x27536]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4028eb:	lea    r14,[rsp+0x10]
  4028f0:	mov    rdi,r14
  4028f3:	mov    al,0x1
  4028f5:	call   402270 <sprintf@plt>
  4028fa:	mov    rdi,r14
  4028fd:	call   4020e0 <strlen@plt>
  402902:	mov    rdi,r13
  402905:	mov    rsi,r14
  402908:	mov    rdx,rax
  40290b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402910:	mov    QWORD PTR [rbx-0x10],rax
  402914:	mov    DWORD PTR [rbx-0x8],0x4
  40291b:	mov    rax,QWORD PTR [r13+0x20]
  40291f:	mov    rcx,QWORD PTR [rax+0x78]
  402923:	cmp    rcx,QWORD PTR [rax+0x70]
  402927:	jb     402931 <__ctype_b_loc@plt+0x661>
  402929:	mov    rdi,r13
  40292c:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  402931:	mov    rbx,QWORD PTR [r13+0x10]
  402935:	add    rbx,0xfffffffffffffff0
  402939:	mov    rdx,QWORD PTR [rbx]
  40293c:	add    rdx,0x18
  402940:	jmp    402944 <__ctype_b_loc@plt+0x674>
  402942:	xor    edx,edx
  402944:	lea    rsi,[rip+0x27439]        # 429d84 <__ctype_b_loc@plt+0x27ab4>
  40294b:	mov    rdi,rbp
  40294e:	xor    eax,eax
  402950:	call   402180 <fprintf@plt>
  402955:	mov    eax,0x1
  40295a:	jmp    4028b5 <__ctype_b_loc@plt+0x5e5>
  40295f:	nop
  402960:	push   rbp
  402961:	push   r15
  402963:	push   r14
  402965:	push   r13
  402967:	push   r12
  402969:	push   rbx
  40296a:	sub    rsp,0x18
  40296e:	mov    r13,rdx
  402971:	mov    r14,rdi
  402974:	test   rsi,rsi
  402977:	je     402b01 <__ctype_b_loc@plt+0x831>
  40297d:	mov    r15,rsi
  402980:	cmp    QWORD PTR [r13+0x0],0x0
  402985:	je     40299e <__ctype_b_loc@plt+0x6ce>
  402987:	lea    rax,[r13+0x10]
  40298b:	xor    ebp,ebp
  40298d:	nop    DWORD PTR [rax]
  402990:	inc    ebp
  402992:	cmp    QWORD PTR [rax],0x0
  402996:	lea    rax,[rax+0x10]
  40299a:	jne    402990 <__ctype_b_loc@plt+0x6c0>
  40299c:	jmp    4029a0 <__ctype_b_loc@plt+0x6d0>
  40299e:	xor    ebp,ebp
  4029a0:	lea    rdx,[rip+0x28036]        # 42a9dd <__ctype_b_loc@plt+0x2870d>
  4029a7:	mov    rdi,r14
  4029aa:	mov    esi,0xffffd8f0
  4029af:	mov    ecx,0x1
  4029b4:	call   427790 <__ctype_b_loc@plt+0x254c0>
  4029b9:	mov    r12,QWORD PTR [r14+0x10]
  4029bd:	add    r12,0xfffffffffffffff0
  4029c1:	mov    rdi,r15
  4029c4:	call   4020e0 <strlen@plt>
  4029c9:	mov    rdi,r14
  4029cc:	mov    rsi,r15
  4029cf:	mov    rdx,rax
  4029d2:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4029d7:	mov    QWORD PTR [rsp+0x8],rax
  4029dc:	mov    DWORD PTR [rsp+0x10],0x4
  4029e4:	mov    rcx,QWORD PTR [r14+0x10]
  4029e8:	lea    rdx,[rsp+0x8]
  4029ed:	mov    rdi,r14
  4029f0:	mov    rsi,r12
  4029f3:	call   408610 <__ctype_b_loc@plt+0x6340>
  4029f8:	mov    rcx,QWORD PTR [r14+0x10]
  4029fc:	lea    rax,[rcx+0x10]
  402a00:	mov    QWORD PTR [r14+0x10],rax
  402a04:	lea    rdx,[rip+0x2710d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  402a0b:	cmp    rcx,rdx
  402a0e:	je     402a1a <__ctype_b_loc@plt+0x74a>
  402a10:	cmp    DWORD PTR [rcx+0x8],0x5
  402a14:	je     402ab1 <__ctype_b_loc@plt+0x7e1>
  402a1a:	mov    QWORD PTR [r14+0x10],rcx
  402a1e:	mov    rdi,r14
  402a21:	mov    esi,0xffffd8ee
  402a26:	mov    rdx,r15
  402a29:	mov    ecx,ebp
  402a2b:	call   427790 <__ctype_b_loc@plt+0x254c0>
  402a30:	test   rax,rax
  402a33:	je     402a49 <__ctype_b_loc@plt+0x779>
  402a35:	lea    rsi,[rip+0x27fa9]        # 42a9e5 <__ctype_b_loc@plt+0x28715>
  402a3c:	mov    rdi,r14
  402a3f:	mov    rdx,r15
  402a42:	xor    eax,eax
  402a44:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  402a49:	mov    rax,QWORD PTR [r14+0x10]
  402a4d:	mov    rcx,QWORD PTR [rax-0x10]
  402a51:	mov    QWORD PTR [rax],rcx
  402a54:	mov    ecx,DWORD PTR [rax-0x8]
  402a57:	mov    DWORD PTR [rax+0x8],ecx
  402a5a:	mov    rbp,QWORD PTR [r14+0x10]
  402a5e:	lea    rax,[rbp+0x10]
  402a62:	mov    QWORD PTR [r14+0x10],rax
  402a66:	add    rbp,0xffffffffffffffe0
  402a6a:	mov    rdi,r15
  402a6d:	call   4020e0 <strlen@plt>
  402a72:	mov    rdi,r14
  402a75:	mov    rsi,r15
  402a78:	mov    rdx,rax
  402a7b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402a80:	mov    QWORD PTR [rsp+0x8],rax
  402a85:	mov    DWORD PTR [rsp+0x10],0x4
  402a8d:	mov    rcx,QWORD PTR [r14+0x10]
  402a91:	add    rcx,0xfffffffffffffff0
  402a95:	lea    rdx,[rsp+0x8]
  402a9a:	mov    rdi,r14
  402a9d:	mov    rsi,rbp
  402aa0:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  402aa5:	mov    rax,QWORD PTR [r14+0x10]
  402aa9:	add    rax,0xfffffffffffffff0
  402aad:	mov    QWORD PTR [r14+0x10],rax
  402ab1:	add    rax,0xfffffffffffffff0
  402ab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402abf:	nop
  402ac0:	mov    rcx,QWORD PTR [rax]
  402ac3:	mov    QWORD PTR [rax-0x10],rcx
  402ac7:	mov    ecx,DWORD PTR [rax+0x8]
  402aca:	mov    DWORD PTR [rax-0x8],ecx
  402acd:	mov    rcx,QWORD PTR [r14+0x10]
  402ad1:	add    rax,0x10
  402ad5:	cmp    rax,rcx
  402ad8:	jb     402ac0 <__ctype_b_loc@plt+0x7f0>
  402ada:	lea    rax,[rcx-0x10]
  402ade:	mov    QWORD PTR [r14+0x10],rax
  402ae2:	mov    rax,QWORD PTR [rcx-0x20]
  402ae6:	mov    QWORD PTR [rcx-0x10],rax
  402aea:	mov    eax,DWORD PTR [rcx-0x18]
  402aed:	mov    DWORD PTR [rcx-0x8],eax
  402af0:	mov    rax,QWORD PTR [r14+0x10]
  402af4:	mov    rdx,QWORD PTR [rax]
  402af7:	mov    QWORD PTR [rcx-0x20],rdx
  402afb:	mov    eax,DWORD PTR [rax+0x8]
  402afe:	mov    DWORD PTR [rcx-0x18],eax
  402b01:	cmp    QWORD PTR [r13+0x0],0x0
  402b06:	je     402b83 <__ctype_b_loc@plt+0x8b3>
  402b08:	add    r13,0x10
  402b0c:	lea    r15,[rsp+0x8]
  402b11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b20:	mov    rsi,QWORD PTR [r13-0x8]
  402b24:	mov    rdi,r14
  402b27:	xor    edx,edx
  402b29:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  402b2e:	mov    rbp,QWORD PTR [r13-0x10]
  402b32:	mov    rbx,QWORD PTR [r14+0x10]
  402b36:	add    rbx,0xffffffffffffffe0
  402b3a:	mov    rdi,rbp
  402b3d:	call   4020e0 <strlen@plt>
  402b42:	mov    rdi,r14
  402b45:	mov    rsi,rbp
  402b48:	mov    rdx,rax
  402b4b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402b50:	mov    QWORD PTR [rsp+0x8],rax
  402b55:	mov    DWORD PTR [rsp+0x10],0x4
  402b5d:	mov    rcx,QWORD PTR [r14+0x10]
  402b61:	add    rcx,0xfffffffffffffff0
  402b65:	mov    rdi,r14
  402b68:	mov    rsi,rbx
  402b6b:	mov    rdx,r15
  402b6e:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  402b73:	add    QWORD PTR [r14+0x10],0xfffffffffffffff0
  402b78:	cmp    QWORD PTR [r13+0x0],0x0
  402b7d:	lea    r13,[r13+0x10]
  402b81:	jne    402b20 <__ctype_b_loc@plt+0x850>
  402b83:	add    rsp,0x18
  402b87:	pop    rbx
  402b88:	pop    r12
  402b8a:	pop    r13
  402b8c:	pop    r14
  402b8e:	pop    r15
  402b90:	pop    rbp
  402b91:	ret    
  402b92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	push   r15
  402ba2:	push   r14
  402ba4:	push   rbx
  402ba5:	sub    rsp,0x10
  402ba9:	mov    ecx,edx
  402bab:	mov    rbx,rdi
  402bae:	test   esi,esi
  402bb0:	jle    402bd8 <__ctype_b_loc@plt+0x908>
  402bb2:	mov    rax,QWORD PTR [rbx+0x18]
  402bb6:	movsxd rdx,esi
  402bb9:	shl    rdx,0x4
  402bbd:	add    rax,rdx
  402bc0:	add    rax,0xfffffffffffffff0
  402bc4:	cmp    rax,QWORD PTR [rbx+0x10]
  402bc8:	lea    r14,[rip+0x26f49]        # 429b18 <__ctype_b_loc@plt+0x27848>
  402bcf:	cmovb  r14,rax
  402bd3:	jmp    402c7c <__ctype_b_loc@plt+0x9ac>
  402bd8:	cmp    esi,0xffffd8f1
  402bde:	jl     402bf0 <__ctype_b_loc@plt+0x920>
  402be0:	movsxd r14,esi
  402be3:	shl    r14,0x4
  402be7:	add    r14,QWORD PTR [rbx+0x10]
  402beb:	jmp    402c7c <__ctype_b_loc@plt+0x9ac>
  402bf0:	cmp    esi,0xffffd8ee
  402bf6:	je     402c14 <__ctype_b_loc@plt+0x944>
  402bf8:	cmp    esi,0xffffd8ef
  402bfe:	je     402c1a <__ctype_b_loc@plt+0x94a>
  402c00:	cmp    esi,0xffffd8f0
  402c06:	jne    402c43 <__ctype_b_loc@plt+0x973>
  402c08:	mov    r14d,0xa0
  402c0e:	add    r14,QWORD PTR [rbx+0x20]
  402c12:	jmp    402c7c <__ctype_b_loc@plt+0x9ac>
  402c14:	lea    r14,[rbx+0x78]
  402c18:	jmp    402c7c <__ctype_b_loc@plt+0x9ac>
  402c1a:	mov    rax,QWORD PTR [rbx+0x28]
  402c1e:	mov    rax,QWORD PTR [rax+0x8]
  402c22:	mov    rax,QWORD PTR [rax]
  402c25:	lea    r14,[rbx+0x88]
  402c2c:	mov    rax,QWORD PTR [rax+0x18]
  402c30:	mov    QWORD PTR [rbx+0x88],rax
  402c37:	mov    DWORD PTR [rbx+0x90],0x5
  402c41:	jmp    402c7c <__ctype_b_loc@plt+0x9ac>
  402c43:	mov    rax,QWORD PTR [rbx+0x28]
  402c47:	mov    rax,QWORD PTR [rax+0x8]
  402c4b:	mov    rax,QWORD PTR [rax]
  402c4e:	mov    edx,0xffffd8ee
  402c53:	sub    edx,esi
  402c55:	movzx  edi,BYTE PTR [rax+0xb]
  402c59:	cmp    edx,edi
  402c5b:	jle    402c66 <__ctype_b_loc@plt+0x996>
  402c5d:	lea    r14,[rip+0x26eb4]        # 429b18 <__ctype_b_loc@plt+0x27848>
  402c64:	jmp    402c7c <__ctype_b_loc@plt+0x9ac>
  402c66:	mov    edx,0xffffd8ed
  402c6b:	sub    edx,esi
  402c6d:	movsxd rdx,edx
  402c70:	shl    rdx,0x4
  402c74:	lea    r14,[rax+rdx*1]
  402c78:	add    r14,0x28
  402c7c:	mov    r15,QWORD PTR [rbx+0x10]
  402c80:	mov    rsi,QWORD PTR [r14]
  402c83:	lea    eax,[rcx-0x1]
  402c86:	cmp    eax,DWORD PTR [rsi+0x38]
  402c89:	jae    402c97 <__ctype_b_loc@plt+0x9c7>
  402c8b:	cdqe   
  402c8d:	shl    rax,0x4
  402c91:	add    rax,QWORD PTR [rsi+0x18]
  402c95:	jmp    402d0c <__ctype_b_loc@plt+0xa3c>
  402c97:	vcvtsi2sd xmm0,xmm0,ecx
  402c9b:	test   ecx,ecx
  402c9d:	je     402cdd <__ctype_b_loc@plt+0xa0d>
  402c9f:	vmovq  rdx,xmm0
  402ca4:	mov    rax,rdx
  402ca7:	shr    rax,0x20
  402cab:	add    eax,edx
  402cad:	mov    dl,BYTE PTR [rsi+0xb]
  402cb0:	mov    rdi,0xffffffffffffffff
  402cb7:	shlx   rdi,rdi,rdx
  402cbc:	or     rdi,0x1
  402cc0:	xor    rdi,0xfffffffffffffffe
  402cc4:	xor    edx,edx
  402cc6:	div    rdi
  402cc9:	lea    rax,[rdx+rdx*4]
  402ccd:	shl    rax,0x3
  402cd1:	add    rax,QWORD PTR [rsi+0x20]
  402cd5:	cmp    DWORD PTR [rax+0x18],0x3
  402cd9:	jne    402cf0 <__ctype_b_loc@plt+0xa20>
  402cdb:	jmp    402cff <__ctype_b_loc@plt+0xa2f>
  402cdd:	mov    rax,QWORD PTR [rsi+0x20]
  402ce1:	cmp    DWORD PTR [rax+0x18],0x3
  402ce5:	je     402cff <__ctype_b_loc@plt+0xa2f>
  402ce7:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	mov    rax,QWORD PTR [rax+0x20]
  402cf4:	test   rax,rax
  402cf7:	je     402d1c <__ctype_b_loc@plt+0xa4c>
  402cf9:	cmp    DWORD PTR [rax+0x18],0x3
  402cfd:	jne    402cf0 <__ctype_b_loc@plt+0xa20>
  402cff:	vmovsd xmm1,QWORD PTR [rax+0x10]
  402d04:	vucomisd xmm1,xmm0
  402d08:	jne    402cf0 <__ctype_b_loc@plt+0xa20>
  402d0a:	jp     402cf0 <__ctype_b_loc@plt+0xa20>
  402d0c:	lea    rdx,[rip+0x26e05]        # 429b18 <__ctype_b_loc@plt+0x27848>
  402d13:	cmp    rax,rdx
  402d16:	jne    402d34 <__ctype_b_loc@plt+0xa64>
  402d18:	vcvtsi2sd xmm0,xmm2,ecx
  402d1c:	vmovq  QWORD PTR [rsp],xmm0
  402d21:	mov    DWORD PTR [rsp+0x8],0x3
  402d29:	mov    rdx,rsp
  402d2c:	mov    rdi,rbx
  402d2f:	call   409b60 <__ctype_b_loc@plt+0x7890>
  402d34:	mov    rcx,QWORD PTR [r15-0x10]
  402d38:	mov    QWORD PTR [rax],rcx
  402d3b:	mov    ecx,DWORD PTR [r15-0x8]
  402d3f:	mov    DWORD PTR [rax+0x8],ecx
  402d42:	mov    rax,QWORD PTR [rbx+0x10]
  402d46:	cmp    DWORD PTR [rax-0x8],0x4
  402d4a:	jl     402d7b <__ctype_b_loc@plt+0xaab>
  402d4c:	mov    rcx,QWORD PTR [rax-0x10]
  402d50:	test   BYTE PTR [rcx+0x9],0x3
  402d54:	je     402d7b <__ctype_b_loc@plt+0xaab>
  402d56:	mov    rcx,QWORD PTR [r14]
  402d59:	mov    dl,BYTE PTR [rcx+0x9]
  402d5c:	test   dl,0x4
  402d5f:	je     402d7b <__ctype_b_loc@plt+0xaab>
  402d61:	mov    rax,QWORD PTR [rbx+0x20]
  402d65:	and    dl,0xfb
  402d68:	mov    BYTE PTR [rcx+0x9],dl
  402d6b:	mov    rdx,QWORD PTR [rax+0x40]
  402d6f:	mov    QWORD PTR [rcx+0x30],rdx
  402d73:	mov    QWORD PTR [rax+0x40],rcx
  402d77:	mov    rax,QWORD PTR [rbx+0x10]
  402d7b:	add    rax,0xfffffffffffffff0
  402d7f:	mov    QWORD PTR [rbx+0x10],rax
  402d83:	add    rsp,0x10
  402d87:	pop    rbx
  402d88:	pop    r14
  402d8a:	pop    r15
  402d8c:	ret    
  402d8d:	nop    DWORD PTR [rax]
  402d90:	push   rbp
  402d91:	push   r15
  402d93:	push   r14
  402d95:	push   r13
  402d97:	push   r12
  402d99:	push   rbx
  402d9a:	sub    rsp,0x2078
  402da1:	mov    rbp,rsi
  402da4:	mov    r15,rdi
  402da7:	mov    rbx,QWORD PTR [rdi+0x10]
  402dab:	mov    r13,rbx
  402dae:	sub    r13,QWORD PTR [rdi+0x18]
  402db2:	mov    r14,r13
  402db5:	shr    r14,0x4
  402db9:	lea    r12d,[r14+0x1]
  402dbd:	mov    DWORD PTR [rsp+0x68],0x0
  402dc5:	test   rsi,rsi
  402dc8:	je     402e06 <__ctype_b_loc@plt+0xb36>
  402dca:	lea    rsi,[rip+0x27c93]        # 42aa64 <__ctype_b_loc@plt+0x28794>
  402dd1:	mov    rdi,r15
  402dd4:	mov    rdx,rbp
  402dd7:	xor    eax,eax
  402dd9:	call   410460 <__ctype_b_loc@plt+0xe190>
  402dde:	lea    rsi,[rip+0x27a2b]        # 42a810 <__ctype_b_loc@plt+0x28540>
  402de5:	mov    rdi,rbp
  402de8:	call   402240 <fopen@plt>
  402ded:	mov    rbx,rax
  402df0:	mov    QWORD PTR [rsp+0x70],rax
  402df5:	test   rax,rax
  402df8:	jne    402e52 <__ctype_b_loc@plt+0xb82>
  402dfa:	lea    rsi,[rip+0x27c6c]        # 42aa6d <__ctype_b_loc@plt+0x2879d>
  402e01:	jmp    403152 <__ctype_b_loc@plt+0xe82>
  402e06:	mov    rax,QWORD PTR [r15+0x20]
  402e0a:	mov    rcx,QWORD PTR [rax+0x78]
  402e0e:	cmp    rcx,QWORD PTR [rax+0x70]
  402e12:	jb     402e20 <__ctype_b_loc@plt+0xb50>
  402e14:	mov    rdi,r15
  402e17:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  402e1c:	mov    rbx,QWORD PTR [r15+0x10]
  402e20:	lea    rsi,[rip+0x27c36]        # 42aa5d <__ctype_b_loc@plt+0x2878d>
  402e27:	mov    edx,0x6
  402e2c:	mov    rdi,r15
  402e2f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402e34:	mov    QWORD PTR [rbx],rax
  402e37:	mov    DWORD PTR [rbx+0x8],0x4
  402e3e:	add    QWORD PTR [r15+0x10],0x10
  402e43:	mov    rax,QWORD PTR [rip+0x2d18e]        # 42ffd8 <__ctype_b_loc@plt+0x2dd08>
  402e4a:	mov    rbx,QWORD PTR [rax]
  402e4d:	mov    QWORD PTR [rsp+0x70],rbx
  402e52:	mov    rdi,rbx
  402e55:	call   4022b0 <getc@plt>
  402e5a:	cmp    eax,0x23
  402e5d:	jne    402e99 <__ctype_b_loc@plt+0xbc9>
  402e5f:	mov    DWORD PTR [rsp+0x68],0x1
  402e67:	nop    WORD PTR [rax+rax*1+0x0]
  402e70:	mov    rdi,rbx
  402e73:	call   4022b0 <getc@plt>
  402e78:	cmp    eax,0xa
  402e7b:	je     402e91 <__ctype_b_loc@plt+0xbc1>
  402e7d:	cmp    eax,0xffffffff
  402e80:	jne    402e70 <__ctype_b_loc@plt+0xba0>
  402e82:	test   rbp,rbp
  402e85:	setne  BYTE PTR [rsp+0xb]
  402e8a:	mov    eax,0xffffffff
  402e8f:	jmp    402ef5 <__ctype_b_loc@plt+0xc25>
  402e91:	mov    rdi,rbx
  402e94:	call   4022b0 <getc@plt>
  402e99:	test   rbp,rbp
  402e9c:	setne  cl
  402e9f:	je     402ef1 <__ctype_b_loc@plt+0xc21>
  402ea1:	cmp    eax,0x1b
  402ea4:	jne    402ef1 <__ctype_b_loc@plt+0xc21>
  402ea6:	lea    rsi,[rip+0x27bbb]        # 42aa68 <__ctype_b_loc@plt+0x28798>
  402ead:	mov    rdi,rbp
  402eb0:	mov    rdx,rbx
  402eb3:	call   402110 <freopen@plt>
  402eb8:	mov    QWORD PTR [rsp+0x70],rax
  402ebd:	test   rax,rax
  402ec0:	je     40314b <__ctype_b_loc@plt+0xe7b>
  402ec6:	mov    rbx,rax
  402ec9:	nop    DWORD PTR [rax+0x0]
  402ed0:	mov    rdi,rbx
  402ed3:	call   4022b0 <getc@plt>
  402ed8:	cmp    eax,0x1b
  402edb:	je     402ee2 <__ctype_b_loc@plt+0xc12>
  402edd:	cmp    eax,0xffffffff
  402ee0:	jne    402ed0 <__ctype_b_loc@plt+0xc00>
  402ee2:	mov    DWORD PTR [rsp+0x68],0x0
  402eea:	mov    BYTE PTR [rsp+0xb],0x1
  402eef:	jmp    402ef5 <__ctype_b_loc@plt+0xc25>
  402ef1:	mov    BYTE PTR [rsp+0xb],cl
  402ef5:	mov    edi,eax
  402ef7:	mov    rsi,rbx
  402efa:	call   4021e0 <ungetc@plt>
  402eff:	mov    rbx,QWORD PTR [r15+0x10]
  402f03:	mov    eax,DWORD PTR [rbx-0x8]
  402f06:	cmp    eax,0x4
  402f09:	mov    DWORD PTR [rsp+0xc],r12d
  402f0e:	je     402f71 <__ctype_b_loc@plt+0xca1>
  402f10:	cmp    eax,0x3
  402f13:	jne    402f81 <__ctype_b_loc@plt+0xcb1>
  402f15:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  402f1a:	lea    rsi,[rip+0x26f00]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  402f21:	lea    rbp,[rsp+0x10]
  402f26:	mov    rdi,rbp
  402f29:	mov    al,0x1
  402f2b:	call   402270 <sprintf@plt>
  402f30:	mov    rdi,rbp
  402f33:	call   4020e0 <strlen@plt>
  402f38:	mov    rdi,r15
  402f3b:	mov    rsi,rbp
  402f3e:	mov    rdx,rax
  402f41:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  402f46:	mov    QWORD PTR [rbx-0x10],rax
  402f4a:	mov    DWORD PTR [rbx-0x8],0x4
  402f51:	mov    rax,QWORD PTR [r15+0x20]
  402f55:	mov    rcx,QWORD PTR [rax+0x78]
  402f59:	cmp    rcx,QWORD PTR [rax+0x70]
  402f5d:	jb     402f67 <__ctype_b_loc@plt+0xc97>
  402f5f:	mov    rdi,r15
  402f62:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  402f67:	mov    rbx,QWORD PTR [r15+0x10]
  402f6b:	lea    rax,[rbx-0x10]
  402f6f:	jmp    402f78 <__ctype_b_loc@plt+0xca8>
  402f71:	mov    rax,rbx
  402f74:	add    rax,0xfffffffffffffff0
  402f78:	mov    rax,QWORD PTR [rax]
  402f7b:	add    rax,0x18
  402f7f:	jmp    402f83 <__ctype_b_loc@plt+0xcb3>
  402f81:	xor    eax,eax
  402f83:	test   rax,rax
  402f86:	lea    rcx,[rip+0x271e8]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  402f8d:	cmovne rcx,rax
  402f91:	mov    QWORD PTR [rsp+0x60],r15
  402f96:	lea    rax,[rip+0x25603]        # 4285a0 <__ctype_b_loc@plt+0x262d0>
  402f9d:	mov    QWORD PTR [rsp+0x50],rax
  402fa2:	lea    rax,[rsp+0x68]
  402fa7:	mov    QWORD PTR [rsp+0x58],rax
  402fac:	vxorps xmm0,xmm0,xmm0
  402fb0:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  402fb6:	lea    rax,[rsp+0x40]
  402fbb:	mov    QWORD PTR [rsp+0x10],rax
  402fc0:	mov    QWORD PTR [rsp+0x30],rcx
  402fc5:	mov    QWORD PTR [rsp+0x18],0x0
  402fce:	mov    QWORD PTR [rsp+0x28],0x0
  402fd7:	sub    rbx,QWORD PTR [r15+0x40]
  402fdb:	mov    r8,QWORD PTR [r15+0xb0]
  402fe2:	lea    rsi,[rip+0xdc67]        # 410c50 <__ctype_b_loc@plt+0xe980>
  402fe9:	lea    rdx,[rsp+0x10]
  402fee:	mov    rdi,r15
  402ff1:	mov    rcx,rbx
  402ff4:	call   410a80 <__ctype_b_loc@plt+0xe7b0>
  402ff9:	mov    r12d,eax
  402ffc:	mov    rsi,QWORD PTR [rsp+0x18]
  403001:	mov    rbx,QWORD PTR [rsp+0x28]
  403006:	mov    rbp,QWORD PTR [r15+0x20]
  40300a:	mov    rdi,QWORD PTR [rbp+0x18]
  40300e:	mov    rdx,rbx
  403011:	xor    ecx,ecx
  403013:	call   QWORD PTR [rbp+0x10]
  403016:	sub    QWORD PTR [rbp+0x78],rbx
  40301a:	mov    rbx,QWORD PTR [rsp+0x70]
  40301f:	mov    rdi,rbx
  403022:	call   402090 <ferror@plt>
  403027:	mov    ebp,eax
  403029:	cmp    BYTE PTR [rsp+0xb],0x0
  40302e:	je     403038 <__ctype_b_loc@plt+0xd68>
  403030:	mov    rdi,rbx
  403033:	call   4020d0 <fclose@plt>
  403038:	test   ebp,ebp
  40303a:	je     4030f7 <__ctype_b_loc@plt+0xe27>
  403040:	mov    rax,QWORD PTR [r15+0x10]
  403044:	cmp    r14d,0xffffffff
  403048:	jl     40311c <__ctype_b_loc@plt+0xe4c>
  40304e:	mov    rsi,QWORD PTR [r15+0x18]
  403052:	mov    edx,DWORD PTR [rsp+0xc]
  403056:	movsxd rdi,edx
  403059:	shl    rdi,0x4
  40305d:	lea    rcx,[rsi+rdi*1]
  403061:	cmp    rax,rcx
  403064:	jae    40313b <__ctype_b_loc@plt+0xe6b>
  40306a:	add    rsi,rdi
  40306d:	mov    rdi,rax
  403070:	not    rdi
  403073:	add    rdi,rsi
  403076:	mov    esi,edi
  403078:	shr    esi,0x4
  40307b:	inc    esi
  40307d:	and    rsi,0x7
  403081:	je     4030a0 <__ctype_b_loc@plt+0xdd0>
  403083:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40308d:	nop    DWORD PTR [rax]
  403090:	mov    DWORD PTR [rax+0x8],0x0
  403097:	add    rax,0x10
  40309b:	dec    rsi
  40309e:	jne    403090 <__ctype_b_loc@plt+0xdc0>
  4030a0:	cmp    rdi,0x70
  4030a4:	jb     4030f1 <__ctype_b_loc@plt+0xe21>
  4030a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030b0:	mov    DWORD PTR [rax+0x8],0x0
  4030b7:	mov    DWORD PTR [rax+0x18],0x0
  4030be:	mov    DWORD PTR [rax+0x28],0x0
  4030c5:	mov    DWORD PTR [rax+0x38],0x0
  4030cc:	mov    DWORD PTR [rax+0x48],0x0
  4030d3:	mov    DWORD PTR [rax+0x58],0x0
  4030da:	mov    DWORD PTR [rax+0x68],0x0
  4030e1:	mov    DWORD PTR [rax+0x78],0x0
  4030e8:	sub    rax,0xffffffffffffff80
  4030ec:	cmp    rax,rcx
  4030ef:	jb     4030b0 <__ctype_b_loc@plt+0xde0>
  4030f1:	mov    QWORD PTR [r15+0x10],rax
  4030f5:	jmp    40313b <__ctype_b_loc@plt+0xe6b>
  4030f7:	test   r14d,r14d
  4030fa:	js     403168 <__ctype_b_loc@plt+0xe98>
  4030fc:	shl    r13,0x1c
  403100:	sar    r13,0x1c
  403104:	add    r13,QWORD PTR [r15+0x18]
  403108:	cmp    r13,QWORD PTR [r15+0x10]
  40310c:	lea    rax,[rip+0x26a05]        # 429b18 <__ctype_b_loc@plt+0x27848>
  403113:	cmovb  rax,r13
  403117:	jmp    403219 <__ctype_b_loc@plt+0xf49>
  40311c:	shl    r13,0x1c
  403120:	movabs rcx,0x200000000
  40312a:	add    rcx,r13
  40312d:	sar    rcx,0x1c
  403131:	add    rax,rcx
  403134:	mov    rcx,rax
  403137:	mov    edx,DWORD PTR [rsp+0xc]
  40313b:	mov    QWORD PTR [r15+0x10],rcx
  40313f:	lea    rsi,[rip+0x26d1e]        # 429e64 <__ctype_b_loc@plt+0x27b94>
  403146:	mov    rdi,r15
  403149:	jmp    403158 <__ctype_b_loc@plt+0xe88>
  40314b:	lea    rsi,[rip+0x27919]        # 42aa6b <__ctype_b_loc@plt+0x2879b>
  403152:	mov    rdi,r15
  403155:	mov    edx,r12d
  403158:	call   428220 <__ctype_b_loc@plt+0x25f50>
  40315d:	mov    r12d,0x6
  403163:	jmp    403252 <__ctype_b_loc@plt+0xf82>
  403168:	cmp    r14d,0xffffd8f0
  40316f:	jl     403183 <__ctype_b_loc@plt+0xeb3>
  403171:	movsxd rax,DWORD PTR [rsp+0xc]
  403176:	shl    rax,0x4
  40317a:	add    rax,QWORD PTR [r15+0x10]
  40317e:	jmp    403219 <__ctype_b_loc@plt+0xf49>
  403183:	cmp    r14d,0xffffd8ed
  40318a:	je     4031a9 <__ctype_b_loc@plt+0xed9>
  40318c:	cmp    r14d,0xffffd8ee
  403193:	je     4031af <__ctype_b_loc@plt+0xedf>
  403195:	cmp    r14d,0xffffd8ef
  40319c:	jne    4031d9 <__ctype_b_loc@plt+0xf09>
  40319e:	mov    eax,0xa0
  4031a3:	add    rax,QWORD PTR [r15+0x20]
  4031a7:	jmp    403219 <__ctype_b_loc@plt+0xf49>
  4031a9:	lea    rax,[r15+0x78]
  4031ad:	jmp    403219 <__ctype_b_loc@plt+0xf49>
  4031af:	mov    rax,QWORD PTR [r15+0x28]
  4031b3:	mov    rax,QWORD PTR [rax+0x8]
  4031b7:	mov    rcx,QWORD PTR [rax]
  4031ba:	lea    rax,[r15+0x88]
  4031c1:	mov    rcx,QWORD PTR [rcx+0x18]
  4031c5:	mov    QWORD PTR [r15+0x88],rcx
  4031cc:	mov    DWORD PTR [r15+0x90],0x5
  4031d7:	jmp    403219 <__ctype_b_loc@plt+0xf49>
  4031d9:	mov    rax,QWORD PTR [r15+0x28]
  4031dd:	mov    rax,QWORD PTR [rax+0x8]
  4031e1:	mov    rax,QWORD PTR [rax]
  4031e4:	mov    ecx,0xffffd8ed
  4031e9:	sub    ecx,r14d
  4031ec:	movzx  edx,BYTE PTR [rax+0xb]
  4031f0:	cmp    ecx,edx
  4031f2:	jle    4031fd <__ctype_b_loc@plt+0xf2d>
  4031f4:	lea    rax,[rip+0x2691d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4031fb:	jmp    403219 <__ctype_b_loc@plt+0xf49>
  4031fd:	shl    r13,0x1c
  403201:	movabs rcx,0xffffd8ec00000000
  40320b:	sub    rcx,r13
  40320e:	sar    rcx,0x1c
  403212:	add    rax,rcx
  403215:	add    rax,0x28
  403219:	add    rax,0x10
  40321d:	mov    rcx,QWORD PTR [r15+0x10]
  403221:	cmp    rax,rcx
  403224:	jae    40324a <__ctype_b_loc@plt+0xf7a>
  403226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403230:	mov    rcx,QWORD PTR [rax]
  403233:	mov    QWORD PTR [rax-0x10],rcx
  403237:	mov    ecx,DWORD PTR [rax+0x8]
  40323a:	mov    DWORD PTR [rax-0x8],ecx
  40323d:	mov    rcx,QWORD PTR [r15+0x10]
  403241:	add    rax,0x10
  403245:	cmp    rax,rcx
  403248:	jb     403230 <__ctype_b_loc@plt+0xf60>
  40324a:	add    rcx,0xfffffffffffffff0
  40324e:	mov    QWORD PTR [r15+0x10],rcx
  403252:	mov    eax,r12d
  403255:	add    rsp,0x2078
  40325c:	pop    rbx
  40325d:	pop    r12
  40325f:	pop    r13
  403261:	pop    r14
  403263:	pop    r15
  403265:	pop    rbp
  403266:	ret    
  403267:	nop    WORD PTR [rax+rax*1+0x0]
  403270:	mov    rdi,rsi
  403273:	test   rcx,rcx
  403276:	je     403280 <__ctype_b_loc@plt+0xfb0>
  403278:	mov    rsi,rcx
  40327b:	jmp    402220 <realloc@plt>
  403280:	push   rax
  403281:	call   402040 <free@plt>
  403286:	xor    eax,eax
  403288:	pop    rcx
  403289:	ret    
  40328a:	nop    WORD PTR [rax+rax*1+0x0]
  403290:	push   r15
  403292:	push   r14
  403294:	push   r12
  403296:	push   rbx
  403297:	sub    rsp,0x28
  40329b:	mov    rax,QWORD PTR [rip+0x2cd4e]        # 42fff0 <__ctype_b_loc@plt+0x2dd20>
  4032a2:	mov    r14,QWORD PTR [rax]
  4032a5:	mov    rbx,QWORD PTR [rdi+0x10]
  4032a9:	mov    eax,DWORD PTR [rbx-0x8]
  4032ac:	cmp    eax,0x4
  4032af:	je     40330f <__ctype_b_loc@plt+0x103f>
  4032b1:	cmp    eax,0x3
  4032b4:	jne    40331c <__ctype_b_loc@plt+0x104c>
  4032b6:	mov    r12,rdi
  4032b9:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  4032be:	lea    rsi,[rip+0x26b5c]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4032c5:	mov    r15,rsp
  4032c8:	mov    rdi,r15
  4032cb:	mov    al,0x1
  4032cd:	call   402270 <sprintf@plt>
  4032d2:	mov    rdi,r15
  4032d5:	call   4020e0 <strlen@plt>
  4032da:	mov    rdi,r12
  4032dd:	mov    rsi,r15
  4032e0:	mov    rdx,rax
  4032e3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4032e8:	mov    QWORD PTR [rbx-0x10],rax
  4032ec:	mov    DWORD PTR [rbx-0x8],0x4
  4032f3:	mov    rax,QWORD PTR [r12+0x20]
  4032f8:	mov    rcx,QWORD PTR [rax+0x78]
  4032fc:	cmp    rcx,QWORD PTR [rax+0x70]
  403300:	jb     40330a <__ctype_b_loc@plt+0x103a>
  403302:	mov    rdi,r12
  403305:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40330a:	mov    rbx,QWORD PTR [r12+0x10]
  40330f:	add    rbx,0xfffffffffffffff0
  403313:	mov    rdx,QWORD PTR [rbx]
  403316:	add    rdx,0x18
  40331a:	jmp    40331e <__ctype_b_loc@plt+0x104e>
  40331c:	xor    edx,edx
  40331e:	lea    rsi,[rip+0x26d45]        # 42a06a <__ctype_b_loc@plt+0x27d9a>
  403325:	mov    rdi,r14
  403328:	xor    eax,eax
  40332a:	call   402180 <fprintf@plt>
  40332f:	xor    eax,eax
  403331:	add    rsp,0x28
  403335:	pop    rbx
  403336:	pop    r12
  403338:	pop    r14
  40333a:	pop    r15
  40333c:	ret    
  40333d:	nop    DWORD PTR [rax]
  403340:	push   r15
  403342:	push   r14
  403344:	push   rbx
  403345:	sub    rsp,0xe0
  40334c:	mov    r15,rdx
  40334f:	mov    r14,rsi
  403352:	mov    rbx,rdi
  403355:	mov    DWORD PTR [rsp+0xd8],0x0
  403360:	mov    rax,QWORD PTR [rdi+0xa8]
  403367:	mov    QWORD PTR [rsp+0x8],rax
  40336c:	lea    rax,[rsp+0x8]
  403371:	mov    QWORD PTR [rdi+0xa8],rax
  403378:	lea    rdi,[rsp+0x10]
  40337d:	call   402160 <_setjmp@plt>
  403382:	test   eax,eax
  403384:	jne    40338f <__ctype_b_loc@plt+0x10bf>
  403386:	mov    rdi,rbx
  403389:	mov    rsi,r15
  40338c:	call   r14
  40338f:	mov    rax,QWORD PTR [rsp+0x8]
  403394:	mov    QWORD PTR [rbx+0xa8],rax
  40339b:	mov    eax,DWORD PTR [rsp+0xd8]
  4033a2:	add    rsp,0xe0
  4033a9:	pop    rbx
  4033aa:	pop    r14
  4033ac:	pop    r15
  4033ae:	ret    
  4033af:	nop
  4033b0:	push   rbp
  4033b1:	push   r15
  4033b3:	push   r14
  4033b5:	push   r13
  4033b7:	push   r12
  4033b9:	push   rbx
  4033ba:	push   rax
  4033bb:	mov    r14,rdi
  4033be:	mov    r15,QWORD PTR [rdi+0x20]
  4033c2:	mov    rdi,QWORD PTR [r15+0x18]
  4033c6:	mov    ecx,0x140
  4033cb:	xor    esi,esi
  4033cd:	xor    edx,edx
  4033cf:	call   QWORD PTR [r15+0x10]
  4033d3:	test   rax,rax
  4033d6:	je     403575 <__ctype_b_loc@plt+0x12a5>
  4033dc:	add    QWORD PTR [r15+0x78],0x140
  4033e4:	mov    QWORD PTR [r14+0x50],rax
  4033e8:	mov    QWORD PTR [r14+0x28],rax
  4033ec:	mov    DWORD PTR [r14+0x5c],0x8
  4033f4:	add    rax,0x118
  4033fa:	mov    QWORD PTR [r14+0x48],rax
  4033fe:	mov    rbx,QWORD PTR [r14+0x20]
  403402:	mov    rdi,QWORD PTR [rbx+0x18]
  403406:	mov    ecx,0x2d0
  40340b:	xor    esi,esi
  40340d:	xor    edx,edx
  40340f:	call   QWORD PTR [rbx+0x10]
  403412:	test   rax,rax
  403415:	je     403575 <__ctype_b_loc@plt+0x12a5>
  40341b:	add    QWORD PTR [rbx+0x78],0x2d0
  403423:	mov    QWORD PTR [r14+0x40],rax
  403427:	mov    DWORD PTR [r14+0x58],0x2d
  40342f:	lea    rcx,[rax+0x270]
  403436:	mov    QWORD PTR [r14+0x38],rcx
  40343a:	mov    rcx,QWORD PTR [r14+0x28]
  40343e:	mov    QWORD PTR [rcx+0x8],rax
  403442:	lea    rdx,[rax+0x10]
  403446:	mov    QWORD PTR [r14+0x10],rdx
  40344a:	mov    DWORD PTR [rax+0x8],0x0
  403451:	mov    QWORD PTR [rcx],rdx
  403454:	mov    QWORD PTR [r14+0x18],rdx
  403458:	add    rax,0x150
  40345e:	mov    QWORD PTR [rcx+0x10],rax
  403462:	xor    ebx,ebx
  403464:	mov    rdi,r14
  403467:	xor    esi,esi
  403469:	mov    edx,0x2
  40346e:	call   403700 <__ctype_b_loc@plt+0x1430>
  403473:	mov    QWORD PTR [r14+0x78],rax
  403477:	mov    DWORD PTR [r14+0x80],0x5
  403482:	mov    rbp,QWORD PTR [r14+0x20]
  403486:	mov    rdi,r14
  403489:	xor    esi,esi
  40348b:	mov    edx,0x2
  403490:	call   403700 <__ctype_b_loc@plt+0x1430>
  403495:	mov    QWORD PTR [rbp+0xa0],rax
  40349c:	mov    DWORD PTR [rbp+0xa8],0x5
  4034a6:	mov    rdi,r14
  4034a9:	mov    esi,0x20
  4034ae:	call   403900 <__ctype_b_loc@plt+0x1630>
  4034b3:	lea    rbp,[rip+0x2c486]        # 42f940 <__ctype_b_loc@plt+0x2d670>
  4034ba:	nop    WORD PTR [rax+rax*1+0x0]
  4034c0:	mov    r12,QWORD PTR [rbx+rbp*1]
  4034c4:	mov    rdi,r12
  4034c7:	call   4020e0 <strlen@plt>
  4034cc:	mov    rdi,r14
  4034cf:	mov    rsi,r12
  4034d2:	mov    rdx,rax
  4034d5:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4034da:	mov    rcx,QWORD PTR [r14+0x20]
  4034de:	mov    QWORD PTR [rcx+rbx*1+0x128],rax
  4034e6:	mov    rax,QWORD PTR [r14+0x20]
  4034ea:	mov    rax,QWORD PTR [rax+rbx*1+0x128]
  4034f2:	or     BYTE PTR [rax+0x9],0x20
  4034f6:	add    rbx,0x8
  4034fa:	cmp    rbx,0x88
  403501:	jne    4034c0 <__ctype_b_loc@plt+0x11f0>
  403503:	mov    bpl,0x1
  403506:	xor    ebx,ebx
  403508:	lea    r13,[rip+0x2c4c1]        # 42f9d0 <__ctype_b_loc@plt+0x2d700>
  40350f:	nop
  403510:	mov    r12,QWORD PTR [rbx+r13*1]
  403514:	mov    rdi,r12
  403517:	call   4020e0 <strlen@plt>
  40351c:	mov    rdi,r14
  40351f:	mov    rsi,r12
  403522:	mov    rdx,rax
  403525:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40352a:	or     BYTE PTR [rax+0x9],0x20
  40352e:	mov    BYTE PTR [rax+0xa],bpl
  403532:	add    rbx,0x8
  403536:	inc    bpl
  403539:	cmp    rbx,0xa8
  403540:	jne    403510 <__ctype_b_loc@plt+0x1240>
  403542:	lea    rsi,[rip+0x26846]        # 429d8f <__ctype_b_loc@plt+0x27abf>
  403549:	mov    edx,0x11
  40354e:	mov    rdi,r14
  403551:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  403556:	or     BYTE PTR [rax+0x9],0x20
  40355a:	mov    rax,QWORD PTR [r15+0x78]
  40355e:	shl    rax,0x2
  403562:	mov    QWORD PTR [r15+0x70],rax
  403566:	add    rsp,0x8
  40356a:	pop    rbx
  40356b:	pop    r12
  40356d:	pop    r13
  40356f:	pop    r14
  403571:	pop    r15
  403573:	pop    rbp
  403574:	ret    
  403575:	mov    rdi,QWORD PTR [r14+0xa8]
  40357c:	test   rdi,rdi
  40357f:	jne    4035b8 <__ctype_b_loc@plt+0x12e8>
  403581:	mov    BYTE PTR [r14+0xa],0x4
  403586:	mov    rax,QWORD PTR [r14+0x20]
  40358a:	cmp    QWORD PTR [rax+0x98],0x0
  403592:	je     4035ae <__ctype_b_loc@plt+0x12de>
  403594:	mov    rdi,r14
  403597:	mov    esi,0x4
  40359c:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4035a1:	mov    rax,QWORD PTR [r14+0x20]
  4035a5:	mov    rdi,r14
  4035a8:	call   QWORD PTR [rax+0x98]
  4035ae:	mov    edi,0x1
  4035b3:	call   402280 <exit@plt>
  4035b8:	mov    DWORD PTR [rdi+0xd0],0x4
  4035c2:	add    rdi,0x8
  4035c6:	mov    esi,0x1
  4035cb:	call   402230 <longjmp@plt>
  4035d0:	push   r15
  4035d2:	push   r14
  4035d4:	push   r13
  4035d6:	push   r12
  4035d8:	push   rbx
  4035d9:	mov    r12,rdi
  4035dc:	mov    r15,QWORD PTR [rdi+0x20]
  4035e0:	mov    rsi,QWORD PTR [rdi+0x40]
  4035e4:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  4035e9:	mov    r14,QWORD PTR [r12+0x20]
  4035ee:	mov    BYTE PTR [r14+0x20],0x43
  4035f3:	lea    rsi,[r14+0x28]
  4035f7:	mov    rdi,r12
  4035fa:	mov    rdx,0xfffffffffffffffd
  403601:	call   40b290 <__ctype_b_loc@plt+0x8fc0>
  403606:	cmp    DWORD PTR [r14+0xc],0x0
  40360b:	jle    403645 <__ctype_b_loc@plt+0x1375>
  40360d:	xor    r13d,r13d
  403610:	xor    ebx,ebx
  403612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	mov    rsi,QWORD PTR [r14]
  403623:	add    rsi,r13
  403626:	mov    rdi,r12
  403629:	mov    rdx,0xfffffffffffffffd
  403630:	call   40b290 <__ctype_b_loc@plt+0x8fc0>
  403635:	inc    rbx
  403638:	movsxd rax,DWORD PTR [r14+0xc]
  40363c:	add    r13,0x8
  403640:	cmp    rbx,rax
  403643:	jl     403620 <__ctype_b_loc@plt+0x1350>
  403645:	mov    rbx,QWORD PTR [r12+0x20]
  40364a:	movsxd r14,DWORD PTR [rbx+0xc]
  40364e:	shl    r14,0x3
  403652:	mov    rsi,QWORD PTR [rbx]
  403655:	mov    rdi,QWORD PTR [rbx+0x18]
  403659:	mov    rdx,r14
  40365c:	xor    ecx,ecx
  40365e:	call   QWORD PTR [rbx+0x10]
  403661:	sub    QWORD PTR [rbx+0x78],r14
  403665:	mov    rsi,QWORD PTR [r15+0x58]
  403669:	mov    r14,QWORD PTR [r15+0x68]
  40366d:	mov    rbx,QWORD PTR [r12+0x20]
  403672:	mov    rdi,QWORD PTR [rbx+0x18]
  403676:	mov    rdx,r14
  403679:	xor    ecx,ecx
  40367b:	call   QWORD PTR [rbx+0x10]
  40367e:	sub    QWORD PTR [rbx+0x78],r14
  403682:	mov    QWORD PTR [r15+0x58],rax
  403686:	mov    QWORD PTR [r15+0x68],0x0
  40368e:	mov    rbx,QWORD PTR [r12+0x20]
  403693:	mov    rsi,QWORD PTR [r12+0x50]
  403698:	movsxd rax,DWORD PTR [r12+0x5c]
  40369d:	shl    rax,0x3
  4036a1:	lea    r14,[rax+rax*4]
  4036a5:	mov    rdi,QWORD PTR [rbx+0x18]
  4036a9:	mov    rdx,r14
  4036ac:	xor    ecx,ecx
  4036ae:	call   QWORD PTR [rbx+0x10]
  4036b1:	sub    QWORD PTR [rbx+0x78],r14
  4036b5:	mov    rbx,QWORD PTR [r12+0x20]
  4036ba:	mov    rsi,QWORD PTR [r12+0x40]
  4036bf:	movsxd r14,DWORD PTR [r12+0x58]
  4036c4:	shl    r14,0x4
  4036c8:	mov    rdi,QWORD PTR [rbx+0x18]
  4036cc:	mov    rdx,r14
  4036cf:	xor    ecx,ecx
  4036d1:	call   QWORD PTR [rbx+0x10]
  4036d4:	sub    QWORD PTR [rbx+0x78],r14
  4036d8:	mov    rax,QWORD PTR [r15+0x10]
  4036dc:	mov    rdi,QWORD PTR [r15+0x18]
  4036e0:	mov    edx,0x268
  4036e5:	mov    rsi,r12
  4036e8:	xor    ecx,ecx
  4036ea:	pop    rbx
  4036eb:	pop    r12
  4036ed:	pop    r13
  4036ef:	pop    r14
  4036f1:	pop    r15
  4036f3:	jmp    rax
  4036f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036ff:	nop
  403700:	push   rbp
  403701:	push   r15
  403703:	push   r14
  403705:	push   r13
  403707:	push   r12
  403709:	push   rbx
  40370a:	push   rax
  40370b:	mov    r14d,edx
  40370e:	mov    r13d,esi
  403711:	mov    r15,rdi
  403714:	mov    rbp,QWORD PTR [rdi+0x20]
  403718:	mov    rdi,QWORD PTR [rbp+0x18]
  40371c:	mov    ecx,0x40
  403721:	xor    esi,esi
  403723:	xor    edx,edx
  403725:	call   QWORD PTR [rbp+0x10]
  403728:	test   rax,rax
  40372b:	je     4038a5 <__ctype_b_loc@plt+0x15d5>
  403731:	mov    rbx,rax
  403734:	add    QWORD PTR [rbp+0x78],0x40
  403739:	mov    rax,QWORD PTR [r15+0x20]
  40373d:	mov    rcx,QWORD PTR [rax+0x28]
  403741:	mov    QWORD PTR [rbx],rcx
  403744:	mov    QWORD PTR [rax+0x28],rbx
  403748:	mov    al,BYTE PTR [rax+0x20]
  40374b:	and    al,0x3
  40374d:	mov    BYTE PTR [rbx+0x9],al
  403750:	mov    BYTE PTR [rbx+0x8],0x5
  403754:	vxorps xmm0,xmm0,xmm0
  403758:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  40375d:	mov    WORD PTR [rbx+0xa],0xff
  403763:	mov    DWORD PTR [rbx+0x38],0x0
  40376a:	lea    rax,[rip+0x263b7]        # 429b28 <__ctype_b_loc@plt+0x27858>
  403771:	mov    QWORD PTR [rbx+0x20],rax
  403775:	cmp    r13d,0xffffffff
  403779:	jl     4037b6 <__ctype_b_loc@plt+0x14e6>
  40377b:	mov    DWORD PTR [rsp+0x4],r14d
  403780:	movsxd rbp,r13d
  403783:	shl    rbp,0x4
  403787:	mov    r14,QWORD PTR [r15+0x20]
  40378b:	mov    rdi,QWORD PTR [r14+0x18]
  40378f:	xor    esi,esi
  403791:	xor    edx,edx
  403793:	mov    rcx,rbp
  403796:	call   QWORD PTR [r14+0x10]
  40379a:	mov    r12,rax
  40379d:	test   r13d,r13d
  4037a0:	je     4037ab <__ctype_b_loc@plt+0x14db>
  4037a2:	test   r12,r12
  4037a5:	je     4038a5 <__ctype_b_loc@plt+0x15d5>
  4037ab:	add    QWORD PTR [r14+0x78],rbp
  4037af:	mov    r14d,DWORD PTR [rsp+0x4]
  4037b4:	jmp    4037ca <__ctype_b_loc@plt+0x14fa>
  4037b6:	lea    rsi,[rip+0x265fc]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4037bd:	xor    r12d,r12d
  4037c0:	mov    rdi,r15
  4037c3:	xor    eax,eax
  4037c5:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4037ca:	mov    QWORD PTR [rbx+0x18],r12
  4037ce:	movsxd rcx,DWORD PTR [rbx+0x38]
  4037d2:	cmp    ecx,r13d
  4037d5:	jge    403881 <__ctype_b_loc@plt+0x15b1>
  4037db:	movsxd rax,r13d
  4037de:	mov    esi,r13d
  4037e1:	sub    esi,ecx
  4037e3:	mov    rdx,rcx
  4037e6:	not    rdx
  4037e9:	add    rdx,rax
  4037ec:	and    rsi,0x7
  4037f0:	je     403825 <__ctype_b_loc@plt+0x1555>
  4037f2:	mov    rdi,rcx
  4037f5:	shl    rdi,0x4
  4037f9:	add    rdi,r12
  4037fc:	add    rdi,0x8
  403800:	neg    rsi
  403803:	xor    ebp,ebp
  403805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40380f:	nop
  403810:	mov    DWORD PTR [rdi],0x0
  403816:	dec    rbp
  403819:	add    rdi,0x10
  40381d:	cmp    rsi,rbp
  403820:	jne    403810 <__ctype_b_loc@plt+0x1540>
  403822:	sub    rcx,rbp
  403825:	cmp    rdx,0x7
  403829:	jb     403881 <__ctype_b_loc@plt+0x15b1>
  40382b:	sub    rax,rcx
  40382e:	shl    rcx,0x4
  403832:	add    rcx,r12
  403835:	add    rcx,0x78
  403839:	nop    DWORD PTR [rax+0x0]
  403840:	mov    DWORD PTR [rcx-0x70],0x0
  403847:	mov    DWORD PTR [rcx-0x60],0x0
  40384e:	mov    DWORD PTR [rcx-0x50],0x0
  403855:	mov    DWORD PTR [rcx-0x40],0x0
  40385c:	mov    DWORD PTR [rcx-0x30],0x0
  403863:	mov    DWORD PTR [rcx-0x20],0x0
  40386a:	mov    DWORD PTR [rcx-0x10],0x0
  403871:	mov    DWORD PTR [rcx],0x0
  403877:	sub    rcx,0xffffffffffffff80
  40387b:	add    rax,0xfffffffffffffff8
  40387f:	jne    403840 <__ctype_b_loc@plt+0x1570>
  403881:	mov    DWORD PTR [rbx+0x38],r13d
  403885:	mov    rdi,r15
  403888:	mov    rsi,rbx
  40388b:	mov    edx,r14d
  40388e:	call   40a810 <__ctype_b_loc@plt+0x8540>
  403893:	mov    rax,rbx
  403896:	add    rsp,0x8
  40389a:	pop    rbx
  40389b:	pop    r12
  40389d:	pop    r13
  40389f:	pop    r14
  4038a1:	pop    r15
  4038a3:	pop    rbp
  4038a4:	ret    
  4038a5:	mov    rdi,QWORD PTR [r15+0xa8]
  4038ac:	test   rdi,rdi
  4038af:	jne    4038e8 <__ctype_b_loc@plt+0x1618>
  4038b1:	mov    BYTE PTR [r15+0xa],0x4
  4038b6:	mov    rax,QWORD PTR [r15+0x20]
  4038ba:	cmp    QWORD PTR [rax+0x98],0x0
  4038c2:	je     4038de <__ctype_b_loc@plt+0x160e>
  4038c4:	mov    rdi,r15
  4038c7:	mov    esi,0x4
  4038cc:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4038d1:	mov    rax,QWORD PTR [r15+0x20]
  4038d5:	mov    rdi,r15
  4038d8:	call   QWORD PTR [rax+0x98]
  4038de:	mov    edi,0x1
  4038e3:	call   402280 <exit@plt>
  4038e8:	mov    DWORD PTR [rdi+0xd0],0x4
  4038f2:	add    rdi,0x8
  4038f6:	mov    esi,0x1
  4038fb:	call   402230 <longjmp@plt>
  403900:	push   rbp
  403901:	push   r15
  403903:	push   r14
  403905:	push   r13
  403907:	push   r12
  403909:	push   rbx
  40390a:	push   rax
  40390b:	mov    r13,QWORD PTR [rdi+0x20]
  40390f:	cmp    BYTE PTR [r13+0x21],0x2
  403914:	je     403a09 <__ctype_b_loc@plt+0x1739>
  40391a:	mov    r14d,esi
  40391d:	mov    r15,rdi
  403920:	movsxd rbx,esi
  403923:	cmp    esi,0xffffffff
  403926:	jl     40396f <__ctype_b_loc@plt+0x169f>
  403928:	lea    r12,[rbx*8+0x0]
  403930:	mov    rdi,QWORD PTR [r13+0x18]
  403934:	xor    esi,esi
  403936:	xor    edx,edx
  403938:	mov    rcx,r12
  40393b:	call   QWORD PTR [r13+0x10]
  40393f:	mov    rbp,rax
  403942:	test   ebx,ebx
  403944:	je     40394f <__ctype_b_loc@plt+0x167f>
  403946:	test   rbp,rbp
  403949:	je     403a18 <__ctype_b_loc@plt+0x1748>
  40394f:	add    QWORD PTR [r13+0x78],r12
  403953:	mov    r13,QWORD PTR [r15+0x20]
  403957:	test   r14d,r14d
  40395a:	jle    403986 <__ctype_b_loc@plt+0x16b6>
  40395c:	mov    edx,r14d
  40395f:	shl    rdx,0x3
  403963:	mov    rdi,rbp
  403966:	xor    esi,esi
  403968:	call   402100 <memset@plt>
  40396d:	jmp    403986 <__ctype_b_loc@plt+0x16b6>
  40396f:	lea    rsi,[rip+0x26443]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  403976:	xor    ebp,ebp
  403978:	mov    rdi,r15
  40397b:	xor    eax,eax
  40397d:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  403982:	mov    r13,QWORD PTR [r15+0x20]
  403986:	movsxd r12,DWORD PTR [r13+0xc]
  40398a:	test   r12,r12
  40398d:	jle    4039e5 <__ctype_b_loc@plt+0x1715>
  40398f:	dec    rbx
  403992:	xor    eax,eax
  403994:	mov    ecx,r12d
  403997:	jmp    4039ab <__ctype_b_loc@plt+0x16db>
  403999:	nop    DWORD PTR [rax+0x0]
  4039a0:	inc    rax
  4039a3:	movsxd r12,ecx
  4039a6:	cmp    rax,r12
  4039a9:	jge    4039e5 <__ctype_b_loc@plt+0x1715>
  4039ab:	mov    rdx,QWORD PTR [r13+0x0]
  4039af:	mov    rdx,QWORD PTR [rdx+rax*8]
  4039b3:	test   rdx,rdx
  4039b6:	je     4039a0 <__ctype_b_loc@plt+0x16d0>
  4039b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039c0:	mov    rcx,QWORD PTR [rdx]
  4039c3:	movsxd rsi,DWORD PTR [rdx+0xc]
  4039c7:	and    rsi,rbx
  4039ca:	mov    rdi,QWORD PTR [rbp+rsi*8+0x0]
  4039cf:	mov    QWORD PTR [rdx],rdi
  4039d2:	mov    QWORD PTR [rbp+rsi*8+0x0],rdx
  4039d7:	mov    rdx,rcx
  4039da:	test   rcx,rcx
  4039dd:	jne    4039c0 <__ctype_b_loc@plt+0x16f0>
  4039df:	mov    ecx,DWORD PTR [r13+0xc]
  4039e3:	jmp    4039a0 <__ctype_b_loc@plt+0x16d0>
  4039e5:	mov    rsi,QWORD PTR [r13+0x0]
  4039e9:	shl    r12,0x3
  4039ed:	mov    rbx,QWORD PTR [r15+0x20]
  4039f1:	mov    rdi,QWORD PTR [rbx+0x18]
  4039f5:	mov    rdx,r12
  4039f8:	xor    ecx,ecx
  4039fa:	call   QWORD PTR [rbx+0x10]
  4039fd:	sub    QWORD PTR [rbx+0x78],r12
  403a01:	mov    DWORD PTR [r13+0xc],r14d
  403a05:	mov    QWORD PTR [r13+0x0],rbp
  403a09:	add    rsp,0x8
  403a0d:	pop    rbx
  403a0e:	pop    r12
  403a10:	pop    r13
  403a12:	pop    r14
  403a14:	pop    r15
  403a16:	pop    rbp
  403a17:	ret    
  403a18:	mov    rdi,QWORD PTR [r15+0xa8]
  403a1f:	test   rdi,rdi
  403a22:	jne    403a5b <__ctype_b_loc@plt+0x178b>
  403a24:	mov    BYTE PTR [r15+0xa],0x4
  403a29:	mov    rax,QWORD PTR [r15+0x20]
  403a2d:	cmp    QWORD PTR [rax+0x98],0x0
  403a35:	je     403a51 <__ctype_b_loc@plt+0x1781>
  403a37:	mov    rdi,r15
  403a3a:	mov    esi,0x4
  403a3f:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  403a44:	mov    rax,QWORD PTR [r15+0x20]
  403a48:	mov    rdi,r15
  403a4b:	call   QWORD PTR [rax+0x98]
  403a51:	mov    edi,0x1
  403a56:	call   402280 <exit@plt>
  403a5b:	mov    DWORD PTR [rdi+0xd0],0x4
  403a65:	add    rdi,0x8
  403a69:	mov    esi,0x1
  403a6e:	call   402230 <longjmp@plt>
  403a73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a7d:	nop    DWORD PTR [rax]
  403a80:	push   rbp
  403a81:	push   r15
  403a83:	push   r14
  403a85:	push   r13
  403a87:	push   r12
  403a89:	push   rbx
  403a8a:	push   rax
  403a8b:	mov    r12,rdx
  403a8e:	mov    r15,rsi
  403a91:	mov    r14,rdi
  403a94:	mov    rax,rdx
  403a97:	shr    rax,0x5
  403a9b:	cmp    rax,rdx
  403a9e:	jae    403ad0 <__ctype_b_loc@plt+0x1800>
  403aa0:	mov    rcx,rax
  403aa3:	not    rcx
  403aa6:	mov    rdx,r12
  403aa9:	mov    ebp,r12d
  403aac:	nop    DWORD PTR [rax+0x0]
  403ab0:	mov    esi,ebp
  403ab2:	shl    esi,0x5
  403ab5:	mov    edi,ebp
  403ab7:	shr    edi,0x2
  403aba:	add    edi,esi
  403abc:	movzx  esi,BYTE PTR [r15+rdx*1-0x1]
  403ac2:	add    esi,edi
  403ac4:	xor    ebp,esi
  403ac6:	add    rdx,rcx
  403ac9:	cmp    rdx,rax
  403acc:	ja     403ab0 <__ctype_b_loc@plt+0x17e0>
  403ace:	jmp    403ad3 <__ctype_b_loc@plt+0x1803>
  403ad0:	mov    ebp,r12d
  403ad3:	mov    r13,QWORD PTR [r14+0x20]
  403ad7:	mov    rax,QWORD PTR [r13+0x0]
  403adb:	movsxd rcx,DWORD PTR [r13+0xc]
  403adf:	dec    rcx
  403ae2:	movsxd rdx,ebp
  403ae5:	and    rdx,rcx
  403ae8:	mov    rbx,QWORD PTR [rax+rdx*8]
  403aec:	test   rbx,rbx
  403aef:	jne    403b08 <__ctype_b_loc@plt+0x1838>
  403af1:	jmp    403b3f <__ctype_b_loc@plt+0x186f>
  403af3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403afd:	nop    DWORD PTR [rax]
  403b00:	mov    rbx,QWORD PTR [rbx]
  403b03:	test   rbx,rbx
  403b06:	je     403b3f <__ctype_b_loc@plt+0x186f>
  403b08:	cmp    QWORD PTR [rbx+0x10],r12
  403b0c:	jne    403b00 <__ctype_b_loc@plt+0x1830>
  403b0e:	lea    rsi,[rbx+0x18]
  403b12:	mov    rdi,r15
  403b15:	mov    rdx,r12
  403b18:	call   4021f0 <bcmp@plt>
  403b1d:	test   eax,eax
  403b1f:	jne    403b00 <__ctype_b_loc@plt+0x1830>
  403b21:	mov    al,BYTE PTR [rbx+0x9]
  403b24:	mov    cl,BYTE PTR [r13+0x20]
  403b28:	not    cl
  403b2a:	and    cl,al
  403b2c:	test   cl,0x3
  403b2f:	je     403bf9 <__ctype_b_loc@plt+0x1929>
  403b35:	xor    al,0x3
  403b37:	mov    BYTE PTR [rbx+0x9],al
  403b3a:	jmp    403bf9 <__ctype_b_loc@plt+0x1929>
  403b3f:	lea    rax,[r12+0x1]
  403b44:	cmp    rax,0xffffffffffffffe6
  403b48:	jb     403b5f <__ctype_b_loc@plt+0x188f>
  403b4a:	lea    rsi,[rip+0x26268]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  403b51:	mov    rdi,r14
  403b54:	xor    eax,eax
  403b56:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  403b5b:	mov    r13,QWORD PTR [r14+0x20]
  403b5f:	mov    rdi,QWORD PTR [r13+0x18]
  403b63:	lea    rcx,[r12+0x19]
  403b68:	xor    esi,esi
  403b6a:	xor    edx,edx
  403b6c:	call   QWORD PTR [r13+0x10]
  403b70:	mov    rbx,rax
  403b73:	mov    rax,r12
  403b76:	add    rax,0x19
  403b7a:	je     403b85 <__ctype_b_loc@plt+0x18b5>
  403b7c:	test   rbx,rbx
  403b7f:	je     403c0b <__ctype_b_loc@plt+0x193b>
  403b85:	add    QWORD PTR [r13+0x78],rax
  403b89:	mov    QWORD PTR [rbx+0x10],r12
  403b8d:	mov    DWORD PTR [rbx+0xc],ebp
  403b90:	mov    rax,QWORD PTR [r14+0x20]
  403b94:	mov    al,BYTE PTR [rax+0x20]
  403b97:	and    al,0x3
  403b99:	mov    BYTE PTR [rbx+0x9],al
  403b9c:	mov    BYTE PTR [rbx+0x8],0x4
  403ba0:	mov    BYTE PTR [rbx+0xa],0x0
  403ba4:	mov    rdi,rbx
  403ba7:	add    rdi,0x18
  403bab:	mov    rsi,r15
  403bae:	mov    rdx,r12
  403bb1:	call   4021b0 <memcpy@plt>
  403bb6:	mov    BYTE PTR [rbx+r12*1+0x18],0x0
  403bbc:	mov    rax,QWORD PTR [r14+0x20]
  403bc0:	mov    ecx,DWORD PTR [rax+0xc]
  403bc3:	dec    ecx
  403bc5:	and    ecx,ebp
  403bc7:	mov    rdx,QWORD PTR [rax]
  403bca:	mov    rdx,QWORD PTR [rdx+rcx*8]
  403bce:	mov    QWORD PTR [rbx],rdx
  403bd1:	mov    rdx,QWORD PTR [rax]
  403bd4:	mov    QWORD PTR [rdx+rcx*8],rbx
  403bd8:	mov    ecx,DWORD PTR [rax+0x8]
  403bdb:	mov    esi,DWORD PTR [rax+0xc]
  403bde:	inc    ecx
  403be0:	mov    DWORD PTR [rax+0x8],ecx
  403be3:	cmp    ecx,esi
  403be5:	jbe    403bf9 <__ctype_b_loc@plt+0x1929>
  403be7:	cmp    esi,0x3ffffffe
  403bed:	jg     403bf9 <__ctype_b_loc@plt+0x1929>
  403bef:	add    esi,esi
  403bf1:	mov    rdi,r14
  403bf4:	call   403900 <__ctype_b_loc@plt+0x1630>
  403bf9:	mov    rax,rbx
  403bfc:	add    rsp,0x8
  403c00:	pop    rbx
  403c01:	pop    r12
  403c03:	pop    r13
  403c05:	pop    r14
  403c07:	pop    r15
  403c09:	pop    rbp
  403c0a:	ret    
  403c0b:	mov    rdi,QWORD PTR [r14+0xa8]
  403c12:	test   rdi,rdi
  403c15:	jne    403c4e <__ctype_b_loc@plt+0x197e>
  403c17:	mov    BYTE PTR [r14+0xa],0x4
  403c1c:	mov    rax,QWORD PTR [r14+0x20]
  403c20:	cmp    QWORD PTR [rax+0x98],0x0
  403c28:	je     403c44 <__ctype_b_loc@plt+0x1974>
  403c2a:	mov    rdi,r14
  403c2d:	mov    esi,0x4
  403c32:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  403c37:	mov    rax,QWORD PTR [r14+0x20]
  403c3b:	mov    rdi,r14
  403c3e:	call   QWORD PTR [rax+0x98]
  403c44:	mov    edi,0x1
  403c49:	call   402280 <exit@plt>
  403c4e:	mov    DWORD PTR [rdi+0xd0],0x4
  403c58:	add    rdi,0x8
  403c5c:	mov    esi,0x1
  403c61:	call   402230 <longjmp@plt>
  403c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c70:	push   rbx
  403c71:	mov    rbx,rdi
  403c74:	mov    rdi,QWORD PTR [rdi+0xa8]
  403c7b:	test   rdi,rdi
  403c7e:	jne    403cb1 <__ctype_b_loc@plt+0x19e1>
  403c80:	mov    BYTE PTR [rbx+0xa],sil
  403c84:	mov    rax,QWORD PTR [rbx+0x20]
  403c88:	cmp    QWORD PTR [rax+0x98],0x0
  403c90:	je     403ca7 <__ctype_b_loc@plt+0x19d7>
  403c92:	mov    rdi,rbx
  403c95:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  403c9a:	mov    rax,QWORD PTR [rbx+0x20]
  403c9e:	mov    rdi,rbx
  403ca1:	call   QWORD PTR [rax+0x98]
  403ca7:	mov    edi,0x1
  403cac:	call   402280 <exit@plt>
  403cb1:	mov    DWORD PTR [rdi+0xd0],esi
  403cb7:	add    rdi,0x8
  403cbb:	mov    esi,0x1
  403cc0:	call   402230 <longjmp@plt>
  403cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ccf:	nop
  403cd0:	push   r15
  403cd2:	push   r14
  403cd4:	push   r12
  403cd6:	push   rbx
  403cd7:	push   rax
  403cd8:	mov    r14d,esi
  403cdb:	mov    rbx,rdi
  403cde:	mov    rax,QWORD PTR [rdi+0x50]
  403ce2:	mov    QWORD PTR [rdi+0x28],rax
  403ce6:	mov    rsi,QWORD PTR [rax]
  403ce9:	mov    QWORD PTR [rdi+0x18],rsi
  403ced:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  403cf2:	mov    r15,QWORD PTR [rbx+0x18]
  403cf6:	lea    eax,[r14-0x2]
  403cfa:	cmp    eax,0x2
  403cfd:	jb     403d19 <__ctype_b_loc@plt+0x1a49>
  403cff:	cmp    r14d,0x5
  403d03:	je     403d29 <__ctype_b_loc@plt+0x1a59>
  403d05:	cmp    r14d,0x4
  403d09:	jne    403d49 <__ctype_b_loc@plt+0x1a79>
  403d0b:	lea    rsi,[rip+0x2607d]        # 429d8f <__ctype_b_loc@plt+0x27abf>
  403d12:	mov    edx,0x11
  403d17:	jmp    403d35 <__ctype_b_loc@plt+0x1a65>
  403d19:	mov    rax,QWORD PTR [rbx+0x10]
  403d1d:	mov    rcx,QWORD PTR [rax-0x10]
  403d21:	mov    QWORD PTR [r15],rcx
  403d24:	mov    eax,DWORD PTR [rax-0x8]
  403d27:	jmp    403d45 <__ctype_b_loc@plt+0x1a75>
  403d29:	lea    rsi,[rip+0x26071]        # 429da1 <__ctype_b_loc@plt+0x27ad1>
  403d30:	mov    edx,0x17
  403d35:	mov    rdi,rbx
  403d38:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  403d3d:	mov    QWORD PTR [r15],rax
  403d40:	mov    eax,0x4
  403d45:	mov    DWORD PTR [r15+0x8],eax
  403d49:	add    r15,0x10
  403d4d:	mov    QWORD PTR [rbx+0x10],r15
  403d51:	movzx  eax,WORD PTR [rbx+0x62]
  403d55:	mov    WORD PTR [rbx+0x60],ax
  403d59:	mov    BYTE PTR [rbx+0x65],0x1
  403d5d:	movsxd rax,DWORD PTR [rbx+0x5c]
  403d61:	cmp    rax,0x4e21
  403d67:	jl     403de3 <__ctype_b_loc@plt+0x1b13>
  403d69:	mov    rcx,QWORD PTR [rbx+0x28]
  403d6d:	mov    r14,QWORD PTR [rbx+0x50]
  403d71:	sub    rcx,r14
  403d74:	shr    rcx,0x3
  403d78:	imul   ecx,ecx,0xcccccccd
  403d7e:	cmp    ecx,0x4e1e
  403d84:	jg     403de3 <__ctype_b_loc@plt+0x1b13>
  403d86:	shl    rax,0x3
  403d8a:	lea    r15,[rax+rax*4]
  403d8e:	mov    r12,QWORD PTR [rbx+0x20]
  403d92:	mov    rdi,QWORD PTR [r12+0x18]
  403d97:	mov    ecx,0xc3500
  403d9c:	mov    rsi,r14
  403d9f:	mov    rdx,r15
  403da2:	call   QWORD PTR [r12+0x10]
  403da7:	test   rax,rax
  403daa:	je     403dfb <__ctype_b_loc@plt+0x1b2b>
  403dac:	mov    rcx,QWORD PTR [r12+0x78]
  403db1:	sub    rcx,r15
  403db4:	add    rcx,0xc3500
  403dbb:	mov    QWORD PTR [r12+0x78],rcx
  403dc0:	mov    QWORD PTR [rbx+0x50],rax
  403dc4:	mov    DWORD PTR [rbx+0x5c],0x4e20
  403dcb:	mov    rcx,QWORD PTR [rbx+0x28]
  403dcf:	sub    rcx,r14
  403dd2:	add    rcx,rax
  403dd5:	mov    QWORD PTR [rbx+0x28],rcx
  403dd9:	add    rax,0xc34d8
  403ddf:	mov    QWORD PTR [rbx+0x48],rax
  403de3:	vxorps xmm0,xmm0,xmm0
  403de7:	vmovups XMMWORD PTR [rbx+0xa8],xmm0
  403def:	add    rsp,0x8
  403df3:	pop    rbx
  403df4:	pop    r12
  403df6:	pop    r14
  403df8:	pop    r15
  403dfa:	ret    
  403dfb:	mov    rdi,QWORD PTR [rbx+0xa8]
  403e02:	test   rdi,rdi
  403e05:	jne    403e3d <__ctype_b_loc@plt+0x1b6d>
  403e07:	mov    BYTE PTR [rbx+0xa],0x4
  403e0b:	mov    rax,QWORD PTR [rbx+0x20]
  403e0f:	cmp    QWORD PTR [rax+0x98],0x0
  403e17:	je     403e33 <__ctype_b_loc@plt+0x1b63>
  403e19:	mov    rdi,rbx
  403e1c:	mov    esi,0x4
  403e21:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  403e26:	mov    rax,QWORD PTR [rbx+0x20]
  403e2a:	mov    rdi,rbx
  403e2d:	call   QWORD PTR [rax+0x98]
  403e33:	mov    edi,0x1
  403e38:	call   402280 <exit@plt>
  403e3d:	mov    DWORD PTR [rdi+0xd0],0x4
  403e47:	add    rdi,0x8
  403e4b:	mov    esi,0x1
  403e50:	call   402230 <longjmp@plt>
  403e55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e5f:	nop
  403e60:	push   r15
  403e62:	push   r14
  403e64:	push   r12
  403e66:	push   rbx
  403e67:	push   rax
  403e68:	mov    r14,rsi
  403e6b:	mov    rsi,QWORD PTR [rdi+0x98]
  403e72:	test   rsi,rsi
  403e75:	je     403fa9 <__ctype_b_loc@plt+0x1cd9>
  403e7b:	mov    r12,rdi
  403e7e:	mov    r15,QWORD PTR [rdi+0x20]
  403e82:	jmp    403eb9 <__ctype_b_loc@plt+0x1be9>
  403e84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e8e:	xchg   ax,ax
  403e90:	mov    rbx,QWORD PTR [r12+0x20]
  403e95:	mov    rdi,QWORD PTR [rbx+0x18]
  403e99:	mov    edx,0x28
  403e9e:	xor    ecx,ecx
  403ea0:	call   QWORD PTR [rbx+0x10]
  403ea3:	add    QWORD PTR [rbx+0x78],0xffffffffffffffd8
  403ea8:	mov    rsi,QWORD PTR [r12+0x98]
  403eb0:	test   rsi,rsi
  403eb3:	je     403fa9 <__ctype_b_loc@plt+0x1cd9>
  403eb9:	mov    rcx,QWORD PTR [rsi+0x10]
  403ebd:	cmp    rcx,r14
  403ec0:	jb     403fa9 <__ctype_b_loc@plt+0x1cd9>
  403ec6:	mov    rax,QWORD PTR [rsi]
  403ec9:	mov    QWORD PTR [r12+0x98],rax
  403ed1:	movzx  edx,BYTE PTR [r15+0x20]
  403ed6:	not    dl
  403ed8:	and    dl,BYTE PTR [rsi+0x9]
  403edb:	lea    rax,[rsi+0x18]
  403edf:	test   dl,0x3
  403ee2:	je     403f10 <__ctype_b_loc@plt+0x1c40>
  403ee4:	cmp    rcx,rax
  403ee7:	je     403e90 <__ctype_b_loc@plt+0x1bc0>
  403ee9:	mov    rax,QWORD PTR [rsi+0x18]
  403eed:	mov    rcx,QWORD PTR [rsi+0x20]
  403ef1:	mov    QWORD PTR [rcx+0x18],rax
  403ef5:	mov    rax,QWORD PTR [rsi+0x18]
  403ef9:	mov    rcx,QWORD PTR [rsi+0x20]
  403efd:	mov    QWORD PTR [rax+0x20],rcx
  403f01:	jmp    403e90 <__ctype_b_loc@plt+0x1bc0>
  403f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f0d:	nop    DWORD PTR [rax]
  403f10:	mov    rcx,QWORD PTR [rsi+0x18]
  403f14:	mov    rdx,QWORD PTR [rsi+0x20]
  403f18:	mov    QWORD PTR [rdx+0x18],rcx
  403f1c:	mov    rcx,QWORD PTR [rsi+0x18]
  403f20:	mov    rdx,QWORD PTR [rsi+0x20]
  403f24:	mov    QWORD PTR [rcx+0x20],rdx
  403f28:	mov    rcx,QWORD PTR [rsi+0x10]
  403f2c:	mov    rdx,QWORD PTR [rcx]
  403f2f:	mov    QWORD PTR [rsi+0x18],rdx
  403f33:	mov    edx,DWORD PTR [rcx+0x8]
  403f36:	mov    DWORD PTR [rsi+0x20],edx
  403f39:	mov    QWORD PTR [rsi+0x10],rax
  403f3d:	mov    rdi,QWORD PTR [r12+0x20]
  403f42:	mov    rcx,QWORD PTR [rdi+0x28]
  403f46:	mov    QWORD PTR [rsi],rcx
  403f49:	mov    QWORD PTR [rdi+0x28],rsi
  403f4d:	movzx  ebx,BYTE PTR [rsi+0x9]
  403f51:	test   bl,0x7
  403f54:	jne    403ea8 <__ctype_b_loc@plt+0x1bd8>
  403f5a:	cmp    BYTE PTR [rdi+0x21],0x1
  403f5e:	jne    403f96 <__ctype_b_loc@plt+0x1cc6>
  403f60:	mov    ecx,ebx
  403f62:	or     cl,0x4
  403f65:	mov    BYTE PTR [rsi+0x9],cl
  403f68:	cmp    edx,0x4
  403f6b:	jl     403ea8 <__ctype_b_loc@plt+0x1bd8>
  403f71:	mov    rax,QWORD PTR [rax]
  403f74:	test   BYTE PTR [rax+0x9],0x3
  403f78:	je     403ea8 <__ctype_b_loc@plt+0x1bd8>
  403f7e:	mov    rdi,QWORD PTR [r12+0x20]
  403f83:	cmp    BYTE PTR [rdi+0x21],0x1
  403f87:	jne    403f96 <__ctype_b_loc@plt+0x1cc6>
  403f89:	mov    rsi,rax
  403f8c:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  403f91:	jmp    403ea8 <__ctype_b_loc@plt+0x1bd8>
  403f96:	and    bl,0xf8
  403f99:	movzx  eax,BYTE PTR [rdi+0x20]
  403f9d:	and    al,0x3
  403f9f:	or     al,bl
  403fa1:	mov    BYTE PTR [rsi+0x9],al
  403fa4:	jmp    403ea8 <__ctype_b_loc@plt+0x1bd8>
  403fa9:	add    rsp,0x8
  403fad:	pop    rbx
  403fae:	pop    r12
  403fb0:	pop    r14
  403fb2:	pop    r15
  403fb4:	ret    
  403fb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fbf:	nop
  403fc0:	push   r14
  403fc2:	push   rbx
  403fc3:	push   rax
  403fc4:	mov    rbx,rsi
  403fc7:	mov    r14,rdi
  403fca:	mov    al,BYTE PTR [rsi+0x9]
  403fcd:	jmp    403fdc <__ctype_b_loc@plt+0x1d0c>
  403fcf:	nop
  403fd0:	mov    rbx,QWORD PTR [rbx+0x18]
  403fd4:	movzx  eax,BYTE PTR [rbx+0x9]
  403fd8:	test   al,0x3
  403fda:	je     404050 <__ctype_b_loc@plt+0x1d80>
  403fdc:	and    al,0xfc
  403fde:	mov    BYTE PTR [rbx+0x9],al
  403fe1:	movzx  ecx,BYTE PTR [rbx+0x8]
  403fe5:	cmp    cl,0x7
  403fe8:	jne    404008 <__ctype_b_loc@plt+0x1d38>
  403fea:	mov    rsi,QWORD PTR [rbx+0x10]
  403fee:	or     al,0x4
  403ff0:	mov    BYTE PTR [rbx+0x9],al
  403ff3:	test   rsi,rsi
  403ff6:	je     403fd0 <__ctype_b_loc@plt+0x1d00>
  403ff8:	test   BYTE PTR [rsi+0x9],0x3
  403ffc:	je     403fd0 <__ctype_b_loc@plt+0x1d00>
  403ffe:	mov    rdi,r14
  404001:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  404006:	jmp    403fd0 <__ctype_b_loc@plt+0x1d00>
  404008:	add    cl,0xfb
  40400b:	cmp    cl,0x5
  40400e:	ja     404050 <__ctype_b_loc@plt+0x1d80>
  404010:	movzx  eax,cl
  404013:	lea    rcx,[rip+0x24ff6]        # 429010 <__ctype_b_loc@plt+0x26d40>
  40401a:	movsxd rax,DWORD PTR [rcx+rax*4]
  40401e:	add    rax,rcx
  404021:	jmp    rax
  404023:	mov    rax,QWORD PTR [r14+0x38]
  404027:	mov    QWORD PTR [rbx+0x30],rax
  40402b:	jmp    40404c <__ctype_b_loc@plt+0x1d7c>
  40402d:	mov    rax,QWORD PTR [r14+0x38]
  404031:	mov    QWORD PTR [rbx+0x10],rax
  404035:	jmp    40404c <__ctype_b_loc@plt+0x1d7c>
  404037:	mov    rax,QWORD PTR [r14+0x38]
  40403b:	mov    QWORD PTR [rbx+0xa0],rax
  404042:	jmp    40404c <__ctype_b_loc@plt+0x1d7c>
  404044:	mov    rax,QWORD PTR [r14+0x38]
  404048:	mov    QWORD PTR [rbx+0x68],rax
  40404c:	mov    QWORD PTR [r14+0x38],rbx
  404050:	add    rsp,0x8
  404054:	pop    rbx
  404055:	pop    r14
  404057:	ret    
  404058:	mov    rax,QWORD PTR [rbx+0x10]
  40405c:	cmp    DWORD PTR [rax+0x8],0x4
  404060:	jl     404077 <__ctype_b_loc@plt+0x1da7>
  404062:	mov    rsi,QWORD PTR [rax]
  404065:	test   BYTE PTR [rsi+0x9],0x3
  404069:	je     404077 <__ctype_b_loc@plt+0x1da7>
  40406b:	mov    rdi,r14
  40406e:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  404073:	mov    rax,QWORD PTR [rbx+0x10]
  404077:	lea    rcx,[rbx+0x18]
  40407b:	cmp    rax,rcx
  40407e:	jne    404050 <__ctype_b_loc@plt+0x1d80>
  404080:	or     BYTE PTR [rbx+0x9],0x4
  404084:	jmp    404050 <__ctype_b_loc@plt+0x1d80>
  404086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404090:	push   rbp
  404091:	push   r15
  404093:	push   r14
  404095:	push   rbx
  404096:	sub    rsp,0x118
  40409d:	mov    rbx,rdi
  4040a0:	test   al,al
  4040a2:	je     4040e3 <__ctype_b_loc@plt+0x1e13>
  4040a4:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4040aa:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4040b0:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4040b6:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4040bf:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4040c8:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4040d1:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4040da:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4040e3:	mov    QWORD PTR [rsp+0x30],rdx
  4040e8:	mov    QWORD PTR [rsp+0x38],rcx
  4040ed:	mov    QWORD PTR [rsp+0x40],r8
  4040f2:	mov    QWORD PTR [rsp+0x48],r9
  4040f7:	lea    rax,[rsp+0x20]
  4040fc:	mov    QWORD PTR [rsp+0x10],rax
  404101:	lea    rax,[rsp+0x140]
  404109:	mov    QWORD PTR [rsp+0x8],rax
  40410e:	movabs rax,0x3000000010
  404118:	mov    QWORD PTR [rsp],rax
  40411c:	mov    rdx,rsp
  40411f:	mov    rdi,rbx
  404122:	call   4041f0 <__ctype_b_loc@plt+0x1f20>
  404127:	mov    r14,rax
  40412a:	mov    rax,QWORD PTR [rbx+0x28]
  40412e:	mov    rdx,QWORD PTR [rax+0x8]
  404132:	cmp    DWORD PTR [rdx+0x8],0x6
  404136:	jne    4041d1 <__ctype_b_loc@plt+0x1f01>
  40413c:	mov    rcx,QWORD PTR [rdx]
  40413f:	cmp    BYTE PTR [rcx+0xa],0x0
  404143:	jne    4041d1 <__ctype_b_loc@plt+0x1f01>
  404149:	mov    rcx,QWORD PTR [rbx+0x30]
  40414d:	mov    QWORD PTR [rax+0x18],rcx
  404151:	mov    rax,QWORD PTR [rdx]
  404154:	mov    rdx,QWORD PTR [rax+0x20]
  404158:	sub    rcx,QWORD PTR [rdx+0x18]
  40415c:	mov    rsi,rcx
  40415f:	shr    rsi,0x2
  404163:	test   esi,esi
  404165:	jle    40418b <__ctype_b_loc@plt+0x1ebb>
  404167:	mov    rdx,QWORD PTR [rdx+0x28]
  40416b:	test   rdx,rdx
  40416e:	je     404193 <__ctype_b_loc@plt+0x1ec3>
  404170:	shl    rcx,0x1e
  404174:	movabs rsi,0xffffffff00000000
  40417e:	add    rsi,rcx
  404181:	sar    rsi,0x1e
  404185:	mov    r15d,DWORD PTR [rdx+rsi*1]
  404189:	jmp    404196 <__ctype_b_loc@plt+0x1ec6>
  40418b:	mov    r15d,0xffffffff
  404191:	jmp    404196 <__ctype_b_loc@plt+0x1ec6>
  404193:	xor    r15d,r15d
  404196:	mov    rax,QWORD PTR [rax+0x20]
  40419a:	mov    rsi,QWORD PTR [rax+0x40]
  40419e:	add    rsi,0x18
  4041a2:	lea    rbp,[rsp+0xd0]
  4041aa:	mov    edx,0x3c
  4041af:	mov    rdi,rbp
  4041b2:	call   404710 <__ctype_b_loc@plt+0x2440>
  4041b7:	lea    rsi,[rip+0x25c22]        # 429de0 <__ctype_b_loc@plt+0x27b10>
  4041be:	mov    rdi,rbx
  4041c1:	mov    rdx,rbp
  4041c4:	mov    ecx,r15d
  4041c7:	mov    r8,r14
  4041ca:	xor    eax,eax
  4041cc:	call   404800 <__ctype_b_loc@plt+0x2530>
  4041d1:	mov    rdi,rbx
  4041d4:	call   4045f0 <__ctype_b_loc@plt+0x2320>
  4041d9:	add    rsp,0x118
  4041e0:	pop    rbx
  4041e1:	pop    r14
  4041e3:	pop    r15
  4041e5:	pop    rbp
  4041e6:	ret    
  4041e7:	nop    WORD PTR [rax+rax*1+0x0]
  4041f0:	push   rbp
  4041f1:	push   r15
  4041f3:	push   r14
  4041f5:	push   r13
  4041f7:	push   r12
  4041f9:	push   rbx
  4041fa:	sub    rsp,0x28
  4041fe:	mov    r14,rdx
  404201:	mov    r12,rsi
  404204:	mov    rbx,rdi
  404207:	mov    rbp,QWORD PTR [rdi+0x10]
  40420b:	lea    rsi,[rip+0x25e89]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  404212:	xor    edx,edx
  404214:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404219:	mov    QWORD PTR [rbp+0x0],rax
  40421d:	mov    DWORD PTR [rbp+0x8],0x4
  404224:	mov    rax,QWORD PTR [rbx+0x38]
  404228:	sub    rax,QWORD PTR [rbx+0x10]
  40422c:	cmp    rax,0x10
  404230:	jg     404248 <__ctype_b_loc@plt+0x1f78>
  404232:	mov    eax,DWORD PTR [rbx+0x58]
  404235:	lea    ecx,[rax+rax*1]
  404238:	lea    esi,[rax+0x1]
  40423b:	test   eax,eax
  40423d:	cmovg  esi,ecx
  404240:	mov    rdi,rbx
  404243:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  404248:	mov    rbp,QWORD PTR [rbx+0x10]
  40424c:	add    rbp,0x10
  404250:	mov    QWORD PTR [rbx+0x10],rbp
  404254:	mov    rdi,r12
  404257:	mov    esi,0x25
  40425c:	call   4020f0 <strchr@plt>
  404261:	test   rax,rax
  404264:	je     404546 <__ctype_b_loc@plt+0x2276>
  40426a:	mov    r15,rax
  40426d:	mov    r13d,0x1
  404273:	jmp    4042b8 <__ctype_b_loc@plt+0x1fe8>
  404275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40427f:	nop
  404280:	mov    rdi,rbx
  404283:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  404288:	mov    rbp,QWORD PTR [rbx+0x10]
  40428c:	add    rbp,0x10
  404290:	mov    QWORD PTR [rbx+0x10],rbp
  404294:	add    r13d,0x2
  404298:	mov    r12,r15
  40429b:	add    r12,0x2
  40429f:	mov    rdi,r12
  4042a2:	mov    esi,0x25
  4042a7:	call   4020f0 <strchr@plt>
  4042ac:	mov    r15,rax
  4042af:	test   rax,rax
  4042b2:	je     40454c <__ctype_b_loc@plt+0x227c>
  4042b8:	mov    rdx,r15
  4042bb:	sub    rdx,r12
  4042be:	mov    rdi,rbx
  4042c1:	mov    rsi,r12
  4042c4:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4042c9:	mov    QWORD PTR [rbp+0x0],rax
  4042cd:	mov    DWORD PTR [rbp+0x8],0x4
  4042d4:	mov    rax,QWORD PTR [rbx+0x38]
  4042d8:	sub    rax,QWORD PTR [rbx+0x10]
  4042dc:	cmp    rax,0x10
  4042e0:	jg     4042f8 <__ctype_b_loc@plt+0x2028>
  4042e2:	mov    eax,DWORD PTR [rbx+0x58]
  4042e5:	lea    ecx,[rax+0x1]
  4042e8:	lea    esi,[rax+rax*1]
  4042eb:	test   eax,eax
  4042ed:	cmovle esi,ecx
  4042f0:	mov    rdi,rbx
  4042f3:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4042f8:	mov    rbp,QWORD PTR [rbx+0x10]
  4042fc:	lea    rax,[rbp+0x10]
  404300:	mov    QWORD PTR [rbx+0x10],rax
  404304:	movzx  eax,BYTE PTR [r15+0x1]
  404309:	movsx  ecx,al
  40430c:	lea    edx,[rcx-0x63]
  40430f:	cmp    edx,0x10
  404312:	ja     404350 <__ctype_b_loc@plt+0x2080>
  404314:	lea    rcx,[rip+0x24d0d]        # 429028 <__ctype_b_loc@plt+0x26d58>
  40431b:	mov    rsi,rcx
  40431e:	movsxd rcx,DWORD PTR [rcx+rdx*4]
  404322:	add    rcx,rsi
  404325:	jmp    rcx
  404327:	movsxd rcx,DWORD PTR [r14]
  40432a:	cmp    rcx,0x28
  40432e:	ja     40441d <__ctype_b_loc@plt+0x214d>
  404334:	mov    rax,rcx
  404337:	add    rax,QWORD PTR [r14+0x10]
  40433b:	add    ecx,0x8
  40433e:	mov    DWORD PTR [r14],ecx
  404341:	jmp    404429 <__ctype_b_loc@plt+0x2159>
  404346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404350:	cmp    ecx,0x25
  404353:	jne    404366 <__ctype_b_loc@plt+0x2096>
  404355:	mov    edx,0x1
  40435a:	mov    rdi,rbx
  40435d:	lea    rsi,[rip+0x25aa4]        # 429e08 <__ctype_b_loc@plt+0x27b38>
  404364:	jmp    404387 <__ctype_b_loc@plt+0x20b7>
  404366:	mov    BYTE PTR [rsp],0x25
  40436a:	mov    BYTE PTR [rsp+0x1],al
  40436e:	mov    BYTE PTR [rsp+0x2],0x0
  404373:	mov    r12,rsp
  404376:	mov    rdi,r12
  404379:	call   4020e0 <strlen@plt>
  40437e:	mov    rdi,rbx
  404381:	mov    rsi,r12
  404384:	mov    rdx,rax
  404387:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40438c:	mov    QWORD PTR [rbp+0x10],rax
  404390:	mov    DWORD PTR [rbp+0x18],0x4
  404397:	jmp    404521 <__ctype_b_loc@plt+0x2251>
  40439c:	movsxd rcx,DWORD PTR [r14]
  40439f:	cmp    rcx,0x28
  4043a3:	ja     40443d <__ctype_b_loc@plt+0x216d>
  4043a9:	mov    rax,rcx
  4043ac:	add    rax,QWORD PTR [r14+0x10]
  4043b0:	add    ecx,0x8
  4043b3:	mov    DWORD PTR [r14],ecx
  4043b6:	jmp    404449 <__ctype_b_loc@plt+0x2179>
  4043bb:	movsxd rcx,DWORD PTR [r14+0x4]
  4043bf:	cmp    rcx,0xa0
  4043c6:	ja     404454 <__ctype_b_loc@plt+0x2184>
  4043cc:	mov    rax,rcx
  4043cf:	add    rax,QWORD PTR [r14+0x10]
  4043d3:	add    ecx,0x10
  4043d6:	mov    DWORD PTR [r14+0x4],ecx
  4043da:	jmp    404460 <__ctype_b_loc@plt+0x2190>
  4043df:	movsxd rcx,DWORD PTR [r14]
  4043e2:	cmp    rcx,0x28
  4043e6:	ja     404493 <__ctype_b_loc@plt+0x21c3>
  4043ec:	mov    rax,rcx
  4043ef:	add    rax,QWORD PTR [r14+0x10]
  4043f3:	add    ecx,0x8
  4043f6:	mov    DWORD PTR [r14],ecx
  4043f9:	jmp    40449f <__ctype_b_loc@plt+0x21cf>
  4043fe:	movsxd rcx,DWORD PTR [r14]
  404401:	cmp    rcx,0x28
  404405:	ja     4044dd <__ctype_b_loc@plt+0x220d>
  40440b:	mov    rax,rcx
  40440e:	add    rax,QWORD PTR [r14+0x10]
  404412:	add    ecx,0x8
  404415:	mov    DWORD PTR [r14],ecx
  404418:	jmp    4044e9 <__ctype_b_loc@plt+0x2219>
  40441d:	mov    rax,QWORD PTR [r14+0x8]
  404421:	lea    rcx,[rax+0x8]
  404425:	mov    QWORD PTR [r14+0x8],rcx
  404429:	movzx  eax,BYTE PTR [rax]
  40442c:	mov    BYTE PTR [rsp],al
  40442f:	mov    BYTE PTR [rsp+0x1],0x0
  404434:	mov    rbp,QWORD PTR [rbx+0x10]
  404438:	mov    r12,rsp
  40443b:	jmp    4044ba <__ctype_b_loc@plt+0x21ea>
  40443d:	mov    rax,QWORD PTR [r14+0x8]
  404441:	lea    rcx,[rax+0x8]
  404445:	mov    QWORD PTR [r14+0x8],rcx
  404449:	vcvtsi2sd xmm0,xmm1,DWORD PTR [rax]
  40444d:	vmovsd QWORD PTR [rbp+0x10],xmm0
  404452:	jmp    404467 <__ctype_b_loc@plt+0x2197>
  404454:	mov    rax,QWORD PTR [r14+0x8]
  404458:	lea    rcx,[rax+0x8]
  40445c:	mov    QWORD PTR [r14+0x8],rcx
  404460:	mov    rax,QWORD PTR [rax]
  404463:	mov    QWORD PTR [rbp+0x10],rax
  404467:	mov    DWORD PTR [rbp+0x18],0x3
  40446e:	mov    rax,QWORD PTR [rbx+0x38]
  404472:	sub    rax,QWORD PTR [rbx+0x10]
  404476:	cmp    rax,0x10
  40447a:	jg     404288 <__ctype_b_loc@plt+0x1fb8>
  404480:	mov    eax,DWORD PTR [rbx+0x58]
  404483:	lea    ecx,[rax+0x1]
  404486:	lea    esi,[rax+rax*1]
  404489:	test   eax,eax
  40448b:	cmovle esi,ecx
  40448e:	jmp    404280 <__ctype_b_loc@plt+0x1fb0>
  404493:	mov    rax,QWORD PTR [r14+0x8]
  404497:	lea    rcx,[rax+0x8]
  40449b:	mov    QWORD PTR [r14+0x8],rcx
  40449f:	mov    rdx,QWORD PTR [rax]
  4044a2:	mov    r12,rsp
  4044a5:	mov    rdi,r12
  4044a8:	lea    rsi,[rip+0x25956]        # 429e05 <__ctype_b_loc@plt+0x27b35>
  4044af:	xor    eax,eax
  4044b1:	call   402270 <sprintf@plt>
  4044b6:	mov    rbp,QWORD PTR [rbx+0x10]
  4044ba:	mov    rdi,r12
  4044bd:	call   4020e0 <strlen@plt>
  4044c2:	mov    rdi,rbx
  4044c5:	mov    rsi,r12
  4044c8:	mov    rdx,rax
  4044cb:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4044d0:	mov    QWORD PTR [rbp+0x0],rax
  4044d4:	mov    DWORD PTR [rbp+0x8],0x4
  4044db:	jmp    404521 <__ctype_b_loc@plt+0x2251>
  4044dd:	mov    rax,QWORD PTR [r14+0x8]
  4044e1:	lea    rcx,[rax+0x8]
  4044e5:	mov    QWORD PTR [r14+0x8],rcx
  4044e9:	mov    rbp,QWORD PTR [rax]
  4044ec:	test   rbp,rbp
  4044ef:	lea    rax,[rip+0x25908]        # 429dfe <__ctype_b_loc@plt+0x27b2e>
  4044f6:	cmove  rbp,rax
  4044fa:	mov    r12,QWORD PTR [rbx+0x10]
  4044fe:	mov    rdi,rbp
  404501:	call   4020e0 <strlen@plt>
  404506:	mov    rdi,rbx
  404509:	mov    rsi,rbp
  40450c:	mov    rdx,rax
  40450f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404514:	mov    QWORD PTR [r12],rax
  404518:	mov    DWORD PTR [r12+0x8],0x4
  404521:	mov    rax,QWORD PTR [rbx+0x38]
  404525:	sub    rax,QWORD PTR [rbx+0x10]
  404529:	cmp    rax,0x10
  40452d:	jg     404288 <__ctype_b_loc@plt+0x1fb8>
  404533:	mov    eax,DWORD PTR [rbx+0x58]
  404536:	lea    ecx,[rax+rax*1]
  404539:	lea    esi,[rax+0x1]
  40453c:	test   eax,eax
  40453e:	cmovg  esi,ecx
  404541:	jmp    404280 <__ctype_b_loc@plt+0x1fb0>
  404546:	mov    r13d,0x1
  40454c:	mov    rdi,r12
  40454f:	call   4020e0 <strlen@plt>
  404554:	mov    rdi,rbx
  404557:	mov    rsi,r12
  40455a:	mov    rdx,rax
  40455d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404562:	mov    QWORD PTR [rbp+0x0],rax
  404566:	mov    DWORD PTR [rbp+0x8],0x4
  40456d:	mov    rax,QWORD PTR [rbx+0x38]
  404571:	sub    rax,QWORD PTR [rbx+0x10]
  404575:	cmp    rax,0x10
  404579:	jg     404591 <__ctype_b_loc@plt+0x22c1>
  40457b:	mov    eax,DWORD PTR [rbx+0x58]
  40457e:	lea    ecx,[rax+rax*1]
  404581:	lea    esi,[rax+0x1]
  404584:	test   eax,eax
  404586:	cmovg  esi,ecx
  404589:	mov    rdi,rbx
  40458c:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  404591:	mov    rdx,QWORD PTR [rbx+0x10]
  404595:	add    rdx,0x10
  404599:	mov    QWORD PTR [rbx+0x10],rdx
  40459d:	lea    esi,[r13+0x1]
  4045a1:	sub    rdx,QWORD PTR [rbx+0x18]
  4045a5:	shr    rdx,0x4
  4045a9:	dec    edx
  4045ab:	mov    rdi,rbx
  4045ae:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  4045b3:	mov    rax,QWORD PTR [rbx+0x10]
  4045b7:	mov    ecx,r13d
  4045ba:	shl    rcx,0x4
  4045be:	mov    rdx,rax
  4045c1:	sub    rdx,rcx
  4045c4:	mov    QWORD PTR [rbx+0x10],rdx
  4045c8:	neg    rcx
  4045cb:	mov    rax,QWORD PTR [rax+rcx*1-0x10]
  4045d0:	add    rax,0x18
  4045d4:	add    rsp,0x28
  4045d8:	pop    rbx
  4045d9:	pop    r12
  4045db:	pop    r13
  4045dd:	pop    r14
  4045df:	pop    r15
  4045e1:	pop    rbp
  4045e2:	ret    
  4045e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045ed:	nop    DWORD PTR [rax]
  4045f0:	push   rbx
  4045f1:	mov    rbx,rdi
  4045f4:	mov    rax,QWORD PTR [rdi+0xb0]
  4045fb:	test   rax,rax
  4045fe:	je     404674 <__ctype_b_loc@plt+0x23a4>
  404600:	mov    rcx,QWORD PTR [rbx+0x40]
  404604:	cmp    DWORD PTR [rcx+rax*1+0x8],0x6
  404609:	jne    4046a8 <__ctype_b_loc@plt+0x23d8>
  40460f:	mov    rdx,QWORD PTR [rbx+0x10]
  404613:	mov    rsi,QWORD PTR [rdx-0x10]
  404617:	mov    QWORD PTR [rdx],rsi
  40461a:	mov    esi,DWORD PTR [rdx-0x8]
  40461d:	mov    DWORD PTR [rdx+0x8],esi
  404620:	mov    rdx,QWORD PTR [rbx+0x10]
  404624:	mov    rsi,QWORD PTR [rcx+rax*1]
  404628:	mov    QWORD PTR [rdx-0x10],rsi
  40462c:	mov    eax,DWORD PTR [rcx+rax*1+0x8]
  404630:	mov    DWORD PTR [rdx-0x8],eax
  404633:	mov    rax,QWORD PTR [rbx+0x38]
  404637:	sub    rax,QWORD PTR [rbx+0x10]
  40463b:	cmp    rax,0x10
  40463f:	jg     404657 <__ctype_b_loc@plt+0x2387>
  404641:	mov    eax,DWORD PTR [rbx+0x58]
  404644:	lea    ecx,[rax+0x1]
  404647:	lea    esi,[rax+rax*1]
  40464a:	test   eax,eax
  40464c:	cmovle esi,ecx
  40464f:	mov    rdi,rbx
  404652:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  404657:	mov    rsi,QWORD PTR [rbx+0x10]
  40465b:	lea    rax,[rsi+0x10]
  40465f:	mov    QWORD PTR [rbx+0x10],rax
  404663:	add    rsi,0xfffffffffffffff0
  404667:	mov    rdi,rbx
  40466a:	mov    edx,0x1
  40466f:	call   405020 <__ctype_b_loc@plt+0x2d50>
  404674:	mov    rdi,QWORD PTR [rbx+0xa8]
  40467b:	test   rdi,rdi
  40467e:	jne    40469c <__ctype_b_loc@plt+0x23cc>
  404680:	mov    BYTE PTR [rbx+0xa],0x2
  404684:	mov    rax,QWORD PTR [rbx+0x20]
  404688:	cmp    QWORD PTR [rax+0x98],0x0
  404690:	je     4046e0 <__ctype_b_loc@plt+0x2410>
  404692:	mov    rdi,rbx
  404695:	mov    esi,0x2
  40469a:	jmp    4046ce <__ctype_b_loc@plt+0x23fe>
  40469c:	mov    DWORD PTR [rdi+0xd0],0x2
  4046a6:	jmp    4046f4 <__ctype_b_loc@plt+0x2424>
  4046a8:	mov    rdi,QWORD PTR [rbx+0xa8]
  4046af:	test   rdi,rdi
  4046b2:	jne    4046ea <__ctype_b_loc@plt+0x241a>
  4046b4:	mov    BYTE PTR [rbx+0xa],0x5
  4046b8:	mov    rax,QWORD PTR [rbx+0x20]
  4046bc:	cmp    QWORD PTR [rax+0x98],0x0
  4046c4:	je     4046e0 <__ctype_b_loc@plt+0x2410>
  4046c6:	mov    rdi,rbx
  4046c9:	mov    esi,0x5
  4046ce:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4046d3:	mov    rax,QWORD PTR [rbx+0x20]
  4046d7:	mov    rdi,rbx
  4046da:	call   QWORD PTR [rax+0x98]
  4046e0:	mov    edi,0x1
  4046e5:	call   402280 <exit@plt>
  4046ea:	mov    DWORD PTR [rdi+0xd0],0x5
  4046f4:	add    rdi,0x8
  4046f8:	mov    esi,0x1
  4046fd:	call   402230 <longjmp@plt>
  404702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40470c:	nop    DWORD PTR [rax+0x0]
  404710:	push   r15
  404712:	push   r14
  404714:	push   rbx
  404715:	mov    rbx,rdx
  404718:	mov    r15,rsi
  40471b:	mov    r14,rdi
  40471e:	mov    al,BYTE PTR [rsi]
  404720:	cmp    al,0x40
  404722:	je     404744 <__ctype_b_loc@plt+0x2474>
  404724:	cmp    al,0x3d
  404726:	jne    40477f <__ctype_b_loc@plt+0x24af>
  404728:	inc    r15
  40472b:	mov    rdi,r14
  40472e:	mov    rsi,r15
  404731:	mov    rdx,rbx
  404734:	call   402060 <strncpy@plt>
  404739:	mov    BYTE PTR [rbx+r14*1-0x1],0x0
  40473f:	jmp    4047f4 <__ctype_b_loc@plt+0x2524>
  404744:	inc    r15
  404747:	add    rbx,0xfffffffffffffff8
  40474b:	mov    rdi,r15
  40474e:	call   4020e0 <strlen@plt>
  404753:	mov    BYTE PTR [r14],0x0
  404757:	sub    rax,rbx
  40475a:	jbe    40476f <__ctype_b_loc@plt+0x249f>
  40475c:	add    r15,rax
  40475f:	mov    rdi,r14
  404762:	call   4020e0 <strlen@plt>
  404767:	mov    DWORD PTR [r14+rax*1],0x2e2e2e
  40476f:	mov    rdi,r14
  404772:	mov    rsi,r15
  404775:	pop    rbx
  404776:	pop    r14
  404778:	pop    r15
  40477a:	jmp    402260 <strcat@plt>
  40477f:	lea    rsi,[rip+0x25668]        # 429dee <__ctype_b_loc@plt+0x27b1e>
  404786:	mov    rdi,r15
  404789:	call   402130 <strcspn@plt>
  40478e:	add    rbx,0xffffffffffffffef
  404792:	cmp    rax,rbx
  404795:	cmovbe rbx,rax
  404799:	movabs rax,0x20676e697274735b
  4047a3:	mov    QWORD PTR [r14],rax
  4047a6:	mov    WORD PTR [r14+0x8],0x22
  4047ad:	cmp    BYTE PTR [r15+rbx*1],0x0
  4047b2:	je     4047d4 <__ctype_b_loc@plt+0x2504>
  4047b4:	mov    rdi,r14
  4047b7:	mov    rsi,r15
  4047ba:	mov    rdx,rbx
  4047bd:	call   402120 <strncat@plt>
  4047c2:	mov    rdi,r14
  4047c5:	call   4020e0 <strlen@plt>
  4047ca:	mov    DWORD PTR [r14+rax*1],0x2e2e2e
  4047d2:	jmp    4047df <__ctype_b_loc@plt+0x250f>
  4047d4:	mov    rdi,r14
  4047d7:	mov    rsi,r15
  4047da:	call   402260 <strcat@plt>
  4047df:	mov    rdi,r14
  4047e2:	call   4020e0 <strlen@plt>
  4047e7:	mov    WORD PTR [r14+rax*1],0x5d22
  4047ee:	mov    BYTE PTR [r14+rax*1+0x2],0x0
  4047f4:	pop    rbx
  4047f5:	pop    r14
  4047f7:	pop    r15
  4047f9:	ret    
  4047fa:	nop    WORD PTR [rax+rax*1+0x0]
  404800:	sub    rsp,0xd8
  404807:	test   al,al
  404809:	je     40484a <__ctype_b_loc@plt+0x257a>
  40480b:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  404811:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  404817:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40481d:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  404826:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40482f:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  404838:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  404841:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40484a:	mov    QWORD PTR [rsp+0x30],rdx
  40484f:	mov    QWORD PTR [rsp+0x38],rcx
  404854:	mov    QWORD PTR [rsp+0x40],r8
  404859:	mov    QWORD PTR [rsp+0x48],r9
  40485e:	lea    rax,[rsp+0x20]
  404863:	mov    QWORD PTR [rsp+0x10],rax
  404868:	lea    rax,[rsp+0xe0]
  404870:	mov    QWORD PTR [rsp+0x8],rax
  404875:	movabs rax,0x3000000010
  40487f:	mov    QWORD PTR [rsp],rax
  404883:	mov    rdx,rsp
  404886:	call   4041f0 <__ctype_b_loc@plt+0x1f20>
  40488b:	add    rsp,0xd8
  404892:	ret    
  404893:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40489d:	nop    DWORD PTR [rax]
  4048a0:	push   rbp
  4048a1:	push   r15
  4048a3:	push   r14
  4048a5:	push   r13
  4048a7:	push   r12
  4048a9:	push   rbx
  4048aa:	sub    rsp,0x58
  4048ae:	mov    r13d,edx
  4048b1:	mov    ebx,esi
  4048b3:	mov    r15,rdi
  4048b6:	mov    QWORD PTR [rsp+0x10],rdi
  4048bb:	jmp    404911 <__ctype_b_loc@plt+0x2641>
  4048bd:	nop    DWORD PTR [rax]
  4048c0:	mov    rsi,QWORD PTR [r15+0x10]
  4048c4:	lea    rax,[rsi+0x30]
  4048c8:	mov    QWORD PTR [r15+0x10],rax
  4048cc:	mov    rdi,r15
  4048cf:	mov    edx,0x1
  4048d4:	call   405020 <__ctype_b_loc@plt+0x2d50>
  4048d9:	mov    rax,QWORD PTR [r15+0x10]
  4048dd:	mov    rcx,QWORD PTR [r15+0x40]
  4048e1:	lea    rdx,[rax-0x10]
  4048e5:	mov    QWORD PTR [r15+0x10],rdx
  4048e9:	mov    rdx,QWORD PTR [rax-0x10]
  4048ed:	mov    QWORD PTR [rcx+r14*1],rdx
  4048f1:	mov    eax,DWORD PTR [rax-0x8]
  4048f4:	mov    DWORD PTR [rcx+r14*1+0x8],eax
  4048f9:	mov    r12d,0x2
  4048ff:	dec    r12d
  404902:	sub    ebx,r12d
  404905:	sub    r13d,r12d
  404908:	cmp    ebx,0x1
  40490b:	jle    404de0 <__ctype_b_loc@plt+0x2b10>
  404911:	mov    DWORD PTR [rsp+0xc],ebx
  404915:	mov    r14,QWORD PTR [r15+0x18]
  404919:	movsxd rax,r13d
  40491c:	mov    QWORD PTR [rsp+0x20],rax
  404921:	shl    rax,0x4
  404925:	lea    r12,[r14+rax*1]
  404929:	add    r12,0x10
  40492d:	lea    rbp,[r14+rax*1]
  404931:	add    rbp,0xfffffffffffffff0
  404935:	movsxd rcx,DWORD PTR [r14+rax*1-0x8]
  40493a:	lea    eax,[rcx-0x3]
  40493d:	cmp    eax,0x1
  404940:	ja     404970 <__ctype_b_loc@plt+0x26a0>
  404942:	mov    edx,DWORD PTR [r12-0x8]
  404947:	cmp    edx,0x3
  40494a:	je     404ac1 <__ctype_b_loc@plt+0x27f1>
  404950:	cmp    edx,0x4
  404953:	jne    404970 <__ctype_b_loc@plt+0x26a0>
  404955:	mov    DWORD PTR [rsp+0x1c],r13d
  40495a:	mov    rax,QWORD PTR [r12-0x10]
  40495f:	jmp    404b07 <__ctype_b_loc@plt+0x2837>
  404964:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40496e:	xchg   ax,ax
  404970:	cmp    ecx,0x7
  404973:	je     404990 <__ctype_b_loc@plt+0x26c0>
  404975:	cmp    ecx,0x5
  404978:	mov    ebx,DWORD PTR [rsp+0xc]
  40497c:	jne    4049a0 <__ctype_b_loc@plt+0x26d0>
  40497e:	mov    rcx,QWORD PTR [rbp+0x0]
  404982:	add    rcx,0x10
  404986:	jmp    4049af <__ctype_b_loc@plt+0x26df>
  404988:	nop    DWORD PTR [rax+rax*1+0x0]
  404990:	mov    rcx,QWORD PTR [rbp+0x0]
  404994:	add    rcx,0x10
  404998:	mov    ebx,DWORD PTR [rsp+0xc]
  40499c:	jmp    4049af <__ctype_b_loc@plt+0x26df>
  40499e:	xchg   ax,ax
  4049a0:	mov    rdx,QWORD PTR [r15+0x20]
  4049a4:	lea    rcx,[rdx+rcx*8]
  4049a8:	add    rcx,0xe0
  4049af:	mov    rsi,QWORD PTR [rcx]
  4049b2:	lea    rcx,[rip+0x2515f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4049b9:	test   rsi,rsi
  4049bc:	je     404a17 <__ctype_b_loc@plt+0x2747>
  4049be:	mov    rcx,QWORD PTR [r15+0x20]
  4049c2:	mov    rdx,QWORD PTR [rcx+0x1a0]
  4049c9:	mov    cl,BYTE PTR [rsi+0xb]
  4049cc:	bzhi   ecx,DWORD PTR [rdx+0xc],ecx
  4049d2:	movsxd rcx,ecx
  4049d5:	lea    rcx,[rcx+rcx*4]
  4049d9:	shl    rcx,0x3
  4049dd:	add    rcx,QWORD PTR [rsi+0x20]
  4049e1:	cmp    DWORD PTR [rcx+0x18],0x4
  4049e5:	je     4049ff <__ctype_b_loc@plt+0x272f>
  4049e7:	nop    WORD PTR [rax+rax*1+0x0]
  4049f0:	mov    rcx,QWORD PTR [rcx+0x20]
  4049f4:	test   rcx,rcx
  4049f7:	je     404a10 <__ctype_b_loc@plt+0x2740>
  4049f9:	cmp    DWORD PTR [rcx+0x18],0x4
  4049fd:	jne    4049f0 <__ctype_b_loc@plt+0x2720>
  4049ff:	cmp    QWORD PTR [rcx+0x10],rdx
  404a03:	jne    4049f0 <__ctype_b_loc@plt+0x2720>
  404a05:	jmp    404a17 <__ctype_b_loc@plt+0x2747>
  404a07:	nop    WORD PTR [rax+rax*1+0x0]
  404a10:	lea    rcx,[rip+0x25101]        # 429b18 <__ctype_b_loc@plt+0x27848>
  404a17:	add    r12,0xfffffffffffffff0
  404a1b:	cmp    DWORD PTR [rcx+0x8],0x0
  404a1f:	je     404aa0 <__ctype_b_loc@plt+0x27d0>
  404a21:	cmp    DWORD PTR [rcx+0x8],0x0
  404a25:	je     404d10 <__ctype_b_loc@plt+0x2a40>
  404a2b:	mov    r14,rbp
  404a2e:	sub    r14,QWORD PTR [r15+0x40]
  404a32:	mov    rax,QWORD PTR [r15+0x10]
  404a36:	mov    rdx,QWORD PTR [rcx]
  404a39:	mov    QWORD PTR [rax],rdx
  404a3c:	mov    ecx,DWORD PTR [rcx+0x8]
  404a3f:	mov    DWORD PTR [rax+0x8],ecx
  404a42:	mov    rax,QWORD PTR [r15+0x10]
  404a46:	mov    rcx,QWORD PTR [rbp+0x0]
  404a4a:	mov    QWORD PTR [rax+0x10],rcx
  404a4e:	mov    ecx,DWORD PTR [rbp+0x8]
  404a51:	mov    DWORD PTR [rax+0x18],ecx
  404a54:	mov    rax,QWORD PTR [r15+0x10]
  404a58:	mov    rcx,QWORD PTR [r12]
  404a5c:	mov    QWORD PTR [rax+0x20],rcx
  404a60:	mov    ecx,DWORD PTR [r12+0x8]
  404a65:	mov    DWORD PTR [rax+0x28],ecx
  404a68:	mov    rax,QWORD PTR [r15+0x38]
  404a6c:	sub    rax,QWORD PTR [r15+0x10]
  404a70:	cmp    rax,0x30
  404a74:	jg     4048c0 <__ctype_b_loc@plt+0x25f0>
  404a7a:	mov    eax,DWORD PTR [r15+0x58]
  404a7e:	lea    ecx,[rax+rax*1]
  404a81:	lea    esi,[rax+0x3]
  404a84:	cmp    eax,0x3
  404a87:	cmovge esi,ecx
  404a8a:	mov    rdi,r15
  404a8d:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  404a92:	jmp    4048c0 <__ctype_b_loc@plt+0x25f0>
  404a97:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	movsxd rcx,DWORD PTR [r12+0x8]
  404aa5:	cmp    rcx,0x7
  404aa9:	je     404ab4 <__ctype_b_loc@plt+0x27e4>
  404aab:	cmp    ecx,0x5
  404aae:	jne    404c95 <__ctype_b_loc@plt+0x29c5>
  404ab4:	mov    rcx,QWORD PTR [r12]
  404ab8:	add    rcx,0x10
  404abc:	jmp    404ca4 <__ctype_b_loc@plt+0x29d4>
  404ac1:	mov    DWORD PTR [rsp+0x1c],r13d
  404ac6:	vmovsd xmm0,QWORD PTR [r12-0x10]
  404acd:	lea    rbx,[rsp+0x30]
  404ad2:	mov    rdi,rbx
  404ad5:	lea    rsi,[rip+0x25345]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  404adc:	mov    al,0x1
  404ade:	call   402270 <sprintf@plt>
  404ae3:	mov    rdi,rbx
  404ae6:	call   4020e0 <strlen@plt>
  404aeb:	mov    rdi,r15
  404aee:	mov    rsi,rbx
  404af1:	mov    rdx,rax
  404af4:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404af9:	mov    QWORD PTR [r12-0x10],rax
  404afe:	mov    DWORD PTR [r12-0x8],0x4
  404b07:	mov    r13,QWORD PTR [rax+0x10]
  404b0b:	test   r13,r13
  404b0e:	je     404bdd <__ctype_b_loc@plt+0x290d>
  404b14:	mov    QWORD PTR [rsp+0x28],r12
  404b19:	mov    r12d,0x1
  404b1f:	mov    eax,DWORD PTR [rsp+0xc]
  404b23:	cmp    eax,0x2
  404b26:	jl     404c38 <__ctype_b_loc@plt+0x2968>
  404b2c:	mov    r15d,eax
  404b2f:	mov    r12d,0x1
  404b35:	jmp    404b53 <__ctype_b_loc@plt+0x2883>
  404b37:	nop    WORD PTR [rax+rax*1+0x0]
  404b40:	add    r13,rbx
  404b43:	inc    r12
  404b46:	add    rbp,0xfffffffffffffff0
  404b4a:	cmp    r15,r12
  404b4d:	je     404c33 <__ctype_b_loc@plt+0x2963>
  404b53:	mov    eax,DWORD PTR [rbp+0x8]
  404b56:	cmp    eax,0x3
  404b59:	je     404b70 <__ctype_b_loc@plt+0x28a0>
  404b5b:	cmp    eax,0x4
  404b5e:	jne    404c33 <__ctype_b_loc@plt+0x2963>
  404b64:	mov    rax,QWORD PTR [rbp+0x0]
  404b68:	jmp    404bae <__ctype_b_loc@plt+0x28de>
  404b6a:	nop    WORD PTR [rax+rax*1+0x0]
  404b70:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  404b75:	lea    rbx,[rsp+0x30]
  404b7a:	mov    rdi,rbx
  404b7d:	lea    rsi,[rip+0x2529d]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  404b84:	mov    al,0x1
  404b86:	call   402270 <sprintf@plt>
  404b8b:	mov    rdi,rbx
  404b8e:	call   4020e0 <strlen@plt>
  404b93:	mov    rdi,QWORD PTR [rsp+0x10]
  404b98:	mov    rsi,rbx
  404b9b:	mov    rdx,rax
  404b9e:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404ba3:	mov    QWORD PTR [rbp+0x0],rax
  404ba7:	mov    DWORD PTR [rbp+0x8],0x4
  404bae:	mov    rbx,QWORD PTR [rax+0x10]
  404bb2:	mov    rax,0xfffffffffffffffd
  404bb9:	sub    rax,r13
  404bbc:	cmp    rbx,rax
  404bbf:	jb     404b40 <__ctype_b_loc@plt+0x2870>
  404bc5:	mov    rdi,QWORD PTR [rsp+0x10]
  404bca:	lea    rsi,[rip+0x25239]        # 429e0a <__ctype_b_loc@plt+0x27b3a>
  404bd1:	xor    eax,eax
  404bd3:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  404bd8:	jmp    404b40 <__ctype_b_loc@plt+0x2870>
  404bdd:	mov    r12d,0x2
  404be3:	cmp    DWORD PTR [rbp+0x8],0x3
  404be7:	mov    r13d,DWORD PTR [rsp+0x1c]
  404bec:	jne    404dd7 <__ctype_b_loc@plt+0x2b07>
  404bf2:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  404bf7:	lea    rbx,[rsp+0x30]
  404bfc:	mov    rdi,rbx
  404bff:	lea    rsi,[rip+0x2521b]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  404c06:	mov    al,0x1
  404c08:	call   402270 <sprintf@plt>
  404c0d:	mov    rdi,rbx
  404c10:	call   4020e0 <strlen@plt>
  404c15:	mov    rdi,r15
  404c18:	mov    rsi,rbx
  404c1b:	mov    rdx,rax
  404c1e:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404c23:	mov    QWORD PTR [rbp+0x0],rax
  404c27:	mov    DWORD PTR [rbp+0x8],0x4
  404c2e:	jmp    404dd7 <__ctype_b_loc@plt+0x2b07>
  404c33:	mov    r15,QWORD PTR [rsp+0x10]
  404c38:	mov    rbx,QWORD PTR [r15+0x20]
  404c3c:	mov    rbp,QWORD PTR [rbx+0x68]
  404c40:	cmp    rbp,r13
  404c43:	jae    404c8c <__ctype_b_loc@plt+0x29bc>
  404c45:	cmp    r13,0x20
  404c49:	mov    eax,0x20
  404c4e:	cmovbe r13,rax
  404c52:	lea    rax,[r13+0x1]
  404c56:	cmp    rax,0xfffffffffffffffd
  404c5a:	ja     404d43 <__ctype_b_loc@plt+0x2a73>
  404c60:	mov    rdi,QWORD PTR [rbx+0x18]
  404c64:	mov    rsi,QWORD PTR [rbx+0x58]
  404c68:	mov    rdx,rbp
  404c6b:	mov    rcx,r13
  404c6e:	call   QWORD PTR [rbx+0x10]
  404c71:	test   rax,rax
  404c74:	je     404def <__ctype_b_loc@plt+0x2b1f>
  404c7a:	mov    r15,rax
  404c7d:	mov    rax,r13
  404c80:	sub    rax,rbp
  404c83:	add    QWORD PTR [rbx+0x78],rax
  404c87:	jmp    404d57 <__ctype_b_loc@plt+0x2a87>
  404c8c:	mov    r15,QWORD PTR [rbx+0x58]
  404c90:	jmp    404d5f <__ctype_b_loc@plt+0x2a8f>
  404c95:	mov    rdx,QWORD PTR [r15+0x20]
  404c99:	lea    rcx,[rdx+rcx*8]
  404c9d:	add    rcx,0xe0
  404ca4:	mov    rsi,QWORD PTR [rcx]
  404ca7:	lea    rcx,[rip+0x24e6a]        # 429b18 <__ctype_b_loc@plt+0x27848>
  404cae:	test   rsi,rsi
  404cb1:	je     404a21 <__ctype_b_loc@plt+0x2751>
  404cb7:	mov    rcx,QWORD PTR [r15+0x20]
  404cbb:	mov    rdx,QWORD PTR [rcx+0x1a0]
  404cc2:	mov    cl,BYTE PTR [rsi+0xb]
  404cc5:	bzhi   ecx,DWORD PTR [rdx+0xc],ecx
  404ccb:	movsxd rcx,ecx
  404cce:	lea    rcx,[rcx+rcx*4]
  404cd2:	shl    rcx,0x3
  404cd6:	add    rcx,QWORD PTR [rsi+0x20]
  404cda:	cmp    DWORD PTR [rcx+0x18],0x4
  404cde:	je     404cef <__ctype_b_loc@plt+0x2a1f>
  404ce0:	mov    rcx,QWORD PTR [rcx+0x20]
  404ce4:	test   rcx,rcx
  404ce7:	je     404cfa <__ctype_b_loc@plt+0x2a2a>
  404ce9:	cmp    DWORD PTR [rcx+0x18],0x4
  404ced:	jne    404ce0 <__ctype_b_loc@plt+0x2a10>
  404cef:	cmp    QWORD PTR [rcx+0x10],rdx
  404cf3:	jne    404ce0 <__ctype_b_loc@plt+0x2a10>
  404cf5:	jmp    404a21 <__ctype_b_loc@plt+0x2751>
  404cfa:	lea    rcx,[rip+0x24e17]        # 429b18 <__ctype_b_loc@plt+0x27848>
  404d01:	cmp    DWORD PTR [rcx+0x8],0x0
  404d05:	jne    404a2b <__ctype_b_loc@plt+0x275b>
  404d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d10:	cmp    eax,0x2
  404d13:	cmovb  rbp,r12
  404d17:	movsxd rax,DWORD PTR [rbp+0x8]
  404d1b:	lea    rcx,[rip+0x2abbe]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  404d22:	mov    rcx,QWORD PTR [rcx+rax*8]
  404d26:	mov    rdi,r15
  404d29:	lea    rsi,[rip+0x25108]        # 429e38 <__ctype_b_loc@plt+0x27b68>
  404d30:	lea    rdx,[rip+0x25247]        # 429f7e <__ctype_b_loc@plt+0x27cae>
  404d37:	xor    eax,eax
  404d39:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  404d3e:	jmp    4048f9 <__ctype_b_loc@plt+0x2629>
  404d43:	mov    rdi,r15
  404d46:	lea    rsi,[rip+0x2506c]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  404d4d:	xor    eax,eax
  404d4f:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  404d54:	xor    r15d,r15d
  404d57:	mov    QWORD PTR [rbx+0x58],r15
  404d5b:	mov    QWORD PTR [rbx+0x68],r13
  404d5f:	mov    rax,QWORD PTR [rsp+0x20]
  404d64:	movsxd r13,r12d
  404d67:	sub    rax,r13
  404d6a:	shl    rax,0x4
  404d6e:	lea    rbx,[r14+rax*1]
  404d72:	add    rbx,0x10
  404d76:	xor    ebp,ebp
  404d78:	nop    DWORD PTR [rax+rax*1+0x0]
  404d80:	mov    r14,rbp
  404d83:	mov    rsi,QWORD PTR [rbx]
  404d86:	mov    rbp,QWORD PTR [rsi+0x10]
  404d8a:	lea    rdi,[r15+r14*1]
  404d8e:	add    rsi,0x18
  404d92:	mov    rdx,rbp
  404d95:	call   4021b0 <memcpy@plt>
  404d9a:	add    rbp,r14
  404d9d:	add    rbx,0x10
  404da1:	dec    r13
  404da4:	jg     404d80 <__ctype_b_loc@plt+0x2ab0>
  404da6:	mov    eax,r12d
  404da9:	shl    rax,0x4
  404dad:	mov    rbx,QWORD PTR [rsp+0x28]
  404db2:	sub    rbx,rax
  404db5:	mov    rdi,QWORD PTR [rsp+0x10]
  404dba:	mov    rsi,r15
  404dbd:	mov    r15,rdi
  404dc0:	mov    rdx,rbp
  404dc3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  404dc8:	mov    QWORD PTR [rbx],rax
  404dcb:	mov    DWORD PTR [rbx+0x8],0x4
  404dd2:	mov    r13d,DWORD PTR [rsp+0x1c]
  404dd7:	mov    ebx,DWORD PTR [rsp+0xc]
  404ddb:	jmp    4048ff <__ctype_b_loc@plt+0x262f>
  404de0:	add    rsp,0x58
  404de4:	pop    rbx
  404de5:	pop    r12
  404de7:	pop    r13
  404de9:	pop    r14
  404deb:	pop    r15
  404ded:	pop    rbp
  404dee:	ret    
  404def:	mov    rax,QWORD PTR [rsp+0x10]
  404df4:	mov    rdi,QWORD PTR [rax+0xa8]
  404dfb:	test   rdi,rdi
  404dfe:	jne    404e40 <__ctype_b_loc@plt+0x2b70>
  404e00:	mov    rax,QWORD PTR [rsp+0x10]
  404e05:	mov    BYTE PTR [rax+0xa],0x4
  404e09:	mov    rax,QWORD PTR [rax+0x20]
  404e0d:	cmp    QWORD PTR [rax+0x98],0x0
  404e15:	je     404e36 <__ctype_b_loc@plt+0x2b66>
  404e17:	mov    rbx,QWORD PTR [rsp+0x10]
  404e1c:	mov    rdi,rbx
  404e1f:	mov    esi,0x4
  404e24:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  404e29:	mov    rax,QWORD PTR [rbx+0x20]
  404e2d:	mov    rdi,rbx
  404e30:	call   QWORD PTR [rax+0x98]
  404e36:	mov    edi,0x1
  404e3b:	call   402280 <exit@plt>
  404e40:	mov    DWORD PTR [rdi+0xd0],0x4
  404e4a:	add    rdi,0x8
  404e4e:	mov    esi,0x1
  404e53:	call   402230 <longjmp@plt>
  404e58:	nop    DWORD PTR [rax+rax*1+0x0]
  404e60:	push   rbp
  404e61:	push   r15
  404e63:	push   r14
  404e65:	push   r13
  404e67:	push   r12
  404e69:	push   rbx
  404e6a:	sub    rsp,0x18
  404e6e:	mov    r15d,esi
  404e71:	mov    r14,rdi
  404e74:	mov    rbx,QWORD PTR [rdi+0x40]
  404e78:	lea    ebp,[r15+0x6]
  404e7c:	cmp    esi,0xfffffff9
  404e7f:	jl     404ed7 <__ctype_b_loc@plt+0x2c07>
  404e81:	movsxd r13,DWORD PTR [r14+0x58]
  404e85:	shl    r13,0x4
  404e89:	mov    DWORD PTR [rsp+0x4],ebp
  404e8d:	movsxd rbp,ebp
  404e90:	mov    QWORD PTR [rsp+0x8],rbp
  404e95:	shl    rbp,0x4
  404e99:	mov    rax,QWORD PTR [r14+0x20]
  404e9d:	mov    rdi,QWORD PTR [rax+0x18]
  404ea1:	mov    rsi,rbx
  404ea4:	mov    rdx,r13
  404ea7:	mov    rcx,rbp
  404eaa:	mov    QWORD PTR [rsp+0x10],rax
  404eaf:	call   QWORD PTR [rax+0x10]
  404eb2:	mov    r12,rax
  404eb5:	cmp    DWORD PTR [rsp+0x8],0x0
  404eba:	je     404ec5 <__ctype_b_loc@plt+0x2bf5>
  404ebc:	test   r12,r12
  404ebf:	je     404fbe <__ctype_b_loc@plt+0x2cee>
  404ec5:	sub    rbp,r13
  404ec8:	mov    rax,QWORD PTR [rsp+0x10]
  404ecd:	add    QWORD PTR [rax+0x78],rbp
  404ed1:	mov    ebp,DWORD PTR [rsp+0x4]
  404ed5:	jmp    404eeb <__ctype_b_loc@plt+0x2c1b>
  404ed7:	lea    rsi,[rip+0x24edb]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  404ede:	xor    r12d,r12d
  404ee1:	mov    rdi,r14
  404ee4:	xor    eax,eax
  404ee6:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  404eeb:	mov    QWORD PTR [r14+0x40],r12
  404eef:	mov    DWORD PTR [r14+0x58],ebp
  404ef3:	movsxd rax,r15d
  404ef6:	shl    rax,0x4
  404efa:	add    rax,r12
  404efd:	mov    QWORD PTR [r14+0x38],rax
  404f01:	mov    rax,QWORD PTR [r14+0x10]
  404f05:	mov    rcx,QWORD PTR [r14+0x98]
  404f0c:	sub    rax,rbx
  404f0f:	add    rax,r12
  404f12:	mov    QWORD PTR [r14+0x10],rax
  404f16:	test   rcx,rcx
  404f19:	je     404f5a <__ctype_b_loc@plt+0x2c8a>
  404f1b:	mov    rax,QWORD PTR [rcx]
  404f1e:	mov    rdx,QWORD PTR [rcx+0x10]
  404f22:	sub    rdx,rbx
  404f25:	add    r12,rdx
  404f28:	mov    QWORD PTR [rcx+0x10],r12
  404f2c:	test   rax,rax
  404f2f:	je     404f5a <__ctype_b_loc@plt+0x2c8a>
  404f31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f40:	mov    rcx,QWORD PTR [rax]
  404f43:	mov    rdx,QWORD PTR [rax+0x10]
  404f47:	sub    rdx,rbx
  404f4a:	add    rdx,QWORD PTR [r14+0x40]
  404f4e:	mov    QWORD PTR [rax+0x10],rdx
  404f52:	mov    rax,rcx
  404f55:	test   rcx,rcx
  404f58:	jne    404f40 <__ctype_b_loc@plt+0x2c70>
  404f5a:	mov    rcx,QWORD PTR [r14+0x50]
  404f5e:	mov    rdx,QWORD PTR [r14+0x28]
  404f62:	mov    rax,QWORD PTR [r14+0x40]
  404f66:	cmp    rcx,rdx
  404f69:	ja     404fa1 <__ctype_b_loc@plt+0x2cd1>
  404f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f70:	mov    rsi,QWORD PTR [rcx+0x10]
  404f74:	sub    rsi,rbx
  404f77:	add    rsi,rax
  404f7a:	mov    QWORD PTR [rcx+0x10],rsi
  404f7e:	mov    rsi,QWORD PTR [rcx]
  404f81:	mov    rdi,QWORD PTR [rcx+0x8]
  404f85:	sub    rsi,rbx
  404f88:	add    rsi,rax
  404f8b:	mov    QWORD PTR [rcx],rsi
  404f8e:	sub    rdi,rbx
  404f91:	add    rdi,rax
  404f94:	mov    QWORD PTR [rcx+0x8],rdi
  404f98:	add    rcx,0x28
  404f9c:	cmp    rcx,rdx
  404f9f:	jbe    404f70 <__ctype_b_loc@plt+0x2ca0>
  404fa1:	mov    rcx,QWORD PTR [r14+0x18]
  404fa5:	sub    rcx,rbx
  404fa8:	add    rax,rcx
  404fab:	mov    QWORD PTR [r14+0x18],rax
  404faf:	add    rsp,0x18
  404fb3:	pop    rbx
  404fb4:	pop    r12
  404fb6:	pop    r13
  404fb8:	pop    r14
  404fba:	pop    r15
  404fbc:	pop    rbp
  404fbd:	ret    
  404fbe:	mov    rdi,QWORD PTR [r14+0xa8]
  404fc5:	test   rdi,rdi
  404fc8:	jne    405001 <__ctype_b_loc@plt+0x2d31>
  404fca:	mov    BYTE PTR [r14+0xa],0x4
  404fcf:	mov    rax,QWORD PTR [r14+0x20]
  404fd3:	cmp    QWORD PTR [rax+0x98],0x0
  404fdb:	je     404ff7 <__ctype_b_loc@plt+0x2d27>
  404fdd:	mov    rdi,r14
  404fe0:	mov    esi,0x4
  404fe5:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  404fea:	mov    rax,QWORD PTR [r14+0x20]
  404fee:	mov    rdi,r14
  404ff1:	call   QWORD PTR [rax+0x98]
  404ff7:	mov    edi,0x1
  404ffc:	call   402280 <exit@plt>
  405001:	mov    DWORD PTR [rdi+0xd0],0x4
  40500b:	add    rdi,0x8
  40500f:	mov    esi,0x1
  405014:	call   402230 <longjmp@plt>
  405019:	nop    DWORD PTR [rax+0x0]
  405020:	push   rbp
  405021:	push   r15
  405023:	push   r14
  405025:	push   r13
  405027:	push   r12
  405029:	push   rbx
  40502a:	sub    rsp,0x88
  405031:	mov    ebx,edx
  405033:	mov    rbp,rsi
  405036:	mov    r13,rdi
  405039:	mov    eax,DWORD PTR [rdi+0x60]
  40503c:	inc    eax
  40503e:	mov    WORD PTR [rdi+0x60],ax
  405042:	movzx  eax,ax
  405045:	cmp    eax,0xc8
  40504a:	mov    QWORD PTR [rsp+0x10],rdi
  40504f:	jb     405071 <__ctype_b_loc@plt+0x2da1>
  405051:	jne    405066 <__ctype_b_loc@plt+0x2d96>
  405053:	lea    rsi,[rip+0x24dcd]        # 429e27 <__ctype_b_loc@plt+0x27b57>
  40505a:	mov    rdi,r13
  40505d:	xor    eax,eax
  40505f:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  405064:	jmp    405071 <__ctype_b_loc@plt+0x2da1>
  405066:	cmp    eax,0xe1
  40506b:	jae    40753d <__ctype_b_loc@plt+0x526d>
  405071:	mov    rdi,r13
  405074:	mov    rsi,rbp
  405077:	mov    edx,ebx
  405079:	call   407690 <__ctype_b_loc@plt+0x53c0>
  40507e:	test   eax,eax
  405080:	jne    407479 <__ctype_b_loc@plt+0x51a9>
  405086:	lea    rax,[r13+0x20]
  40508a:	mov    QWORD PTR [rsp+0x30],rax
  40508f:	lea    rax,[r13+0x98]
  405096:	mov    QWORD PTR [rsp+0x70],rax
  40509b:	mov    DWORD PTR [rsp+0x5c],0x1
  4050a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050ad:	nop    DWORD PTR [rax]
  4050b0:	mov    r11,QWORD PTR [r13+0x30]
  4050b4:	mov    r10,QWORD PTR [r13+0x18]
  4050b8:	mov    rax,QWORD PTR [r13+0x28]
  4050bc:	mov    rax,QWORD PTR [rax+0x8]
  4050c0:	mov    rax,QWORD PTR [rax]
  4050c3:	mov    QWORD PTR [rsp+0x50],rax
  4050c8:	mov    rax,QWORD PTR [rax+0x20]
  4050cc:	mov    rax,QWORD PTR [rax+0x10]
  4050d0:	mov    QWORD PTR [rsp+0x18],rax
  4050d5:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  4050d7:	mov    QWORD PTR [r13+0x30],r11
  4050db:	mov    rdi,r13
  4050de:	mov    rsi,r12
  4050e1:	mov    r8d,0x9
  4050e7:	mov    rbx,r11
  4050ea:	call   408f50 <__ctype_b_loc@plt+0x6c80>
  4050ef:	mov    r11,rbx
  4050f2:	mov    r10,QWORD PTR [r13+0x18]
  4050f6:	mov    rax,r11
  4050f9:	add    r11,0x4
  4050fd:	mov    ebx,DWORD PTR [rax]
  4050ff:	mov    ecx,ebx
  405101:	shr    ecx,0x6
  405104:	movzx  ebp,cl
  405107:	mov    r14,rbp
  40510a:	shl    r14,0x4
  40510e:	mov    ecx,ebx
  405110:	and    ecx,0x3f
  405113:	cmp    ecx,0x25
  405116:	ja     4050f6 <__ctype_b_loc@plt+0x2e26>
  405118:	lea    r12,[r10+r14*1]
  40511c:	lea    rdx,[rip+0x23f49]        # 42906c <__ctype_b_loc@plt+0x26d9c>
  405123:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405127:	add    rcx,rdx
  40512a:	jmp    rcx
  40512c:	shr    rbx,0x13
  405130:	and    ebx,0xfffffff0
  405133:	mov    rax,QWORD PTR [r10+rbx*1]
  405137:	mov    QWORD PTR [r12],rax
  40513b:	mov    eax,DWORD PTR [r10+rbx*1+0x8]
  405140:	mov    DWORD PTR [r10+r14*1+0x8],eax
  405145:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405147:	mov    QWORD PTR [rsp+0x20],r12
  40514c:	mov    QWORD PTR [rsp+0x28],r10
  405151:	mov    QWORD PTR [rsp+0x48],r11
  405156:	mov    r12,QWORD PTR [rsp+0x30]
  40515b:	mov    rax,QWORD PTR [rsp+0x50]
  405160:	mov    rcx,QWORD PTR [rax+0x18]
  405164:	mov    QWORD PTR [rsp+0x8],rcx
  405169:	mov    rax,QWORD PTR [rax+0x20]
  40516d:	mov    rax,QWORD PTR [rax+0x20]
  405171:	shr    ebx,0xe
  405174:	mov    rax,QWORD PTR [rax+rbx*8]
  405178:	mov    QWORD PTR [rsp+0x78],rax
  40517d:	mov    r13b,BYTE PTR [rax+0x70]
  405181:	movzx  ebx,r13b
  405185:	lea    rbp,[rbx*8+0x28]
  40518d:	mov    r15,QWORD PTR [r12]
  405191:	mov    rdi,QWORD PTR [r15+0x18]
  405195:	xor    esi,esi
  405197:	xor    edx,edx
  405199:	mov    rcx,rbp
  40519c:	call   QWORD PTR [r15+0x10]
  4051a0:	test   rax,rax
  4051a3:	je     4074b7 <__ctype_b_loc@plt+0x51e7>
  4051a9:	mov    rsi,rax
  4051ac:	add    QWORD PTR [r15+0x78],rbp
  4051b0:	mov    rax,QWORD PTR [r12]
  4051b4:	mov    rcx,QWORD PTR [rax+0x28]
  4051b8:	mov    QWORD PTR [rsi],rcx
  4051bb:	mov    QWORD PTR [rax+0x28],rsi
  4051bf:	mov    al,BYTE PTR [rax+0x20]
  4051c2:	and    al,0x3
  4051c4:	mov    BYTE PTR [rsi+0x9],al
  4051c7:	mov    BYTE PTR [rsi+0x8],0x6
  4051cb:	mov    BYTE PTR [rsi+0xa],0x0
  4051cf:	mov    rax,QWORD PTR [rsp+0x8]
  4051d4:	mov    QWORD PTR [rsi+0x18],rax
  4051d8:	mov    BYTE PTR [rsi+0xb],r13b
  4051dc:	test   r13b,r13b
  4051df:	je     405fc9 <__ctype_b_loc@plt+0x3cf9>
  4051e5:	lea    rdx,[rbx*8+0x0]
  4051ed:	mov    eax,ebx
  4051ef:	dec    eax
  4051f1:	shl    rax,0x3
  4051f5:	mov    rcx,rdx
  4051f8:	sub    rcx,rax
  4051fb:	lea    rdi,[rsi+rcx*1]
  4051ff:	add    rdi,0x20
  405203:	xor    ebp,ebp
  405205:	mov    QWORD PTR [rsp+0x8],rsi
  40520a:	xor    esi,esi
  40520c:	call   402100 <memset@plt>
  405211:	mov    rsi,QWORD PTR [rsp+0x8]
  405216:	mov    rax,QWORD PTR [rsp+0x78]
  40521b:	mov    QWORD PTR [rsi+0x20],rax
  40521f:	mov    r13,QWORD PTR [rsp+0x10]
  405224:	mov    r12,QWORD PTR [rsp+0x30]
  405229:	mov    r11,QWORD PTR [rsp+0x48]
  40522e:	mov    rdx,QWORD PTR [rsp+0x28]
  405233:	mov    QWORD PTR [rsp+0x60],rbx
  405238:	jmp    40525f <__ctype_b_loc@plt+0x2f8f>
  40523a:	nop    WORD PTR [rax+rax*1+0x0]
  405240:	mov    rax,QWORD PTR [rsp+0x50]
  405245:	mov    rax,QWORD PTR [rax+r15*8+0x28]
  40524a:	mov    QWORD PTR [rsi+rbp*8+0x28],rax
  40524f:	inc    rbp
  405252:	add    r11,0x4
  405256:	cmp    rbp,rbx
  405259:	je     405fe1 <__ctype_b_loc@plt+0x3d11>
  40525f:	mov    r15d,DWORD PTR [r11]
  405262:	mov    eax,r15d
  405265:	and    eax,0x3f
  405268:	shr    r15,0x17
  40526c:	cmp    eax,0x4
  40526f:	je     405240 <__ctype_b_loc@plt+0x2f70>
  405271:	shl    r15,0x4
  405275:	add    r15,rdx
  405278:	mov    r12,QWORD PTR [r12]
  40527c:	mov    r13,QWORD PTR [rsp+0x70]
  405281:	mov    rax,QWORD PTR [r13+0x0]
  405285:	test   rax,rax
  405288:	je     4052be <__ctype_b_loc@plt+0x2fee>
  40528a:	mov    rcx,QWORD PTR [rax+0x10]
  40528e:	mov    r13,QWORD PTR [rsp+0x70]
  405293:	cmp    rcx,r15
  405296:	jb     4052be <__ctype_b_loc@plt+0x2fee>
  405298:	nop    DWORD PTR [rax+rax*1+0x0]
  4052a0:	mov    r13,rax
  4052a3:	cmp    rcx,r15
  4052a6:	je     405354 <__ctype_b_loc@plt+0x3084>
  4052ac:	mov    rax,QWORD PTR [r13+0x0]
  4052b0:	test   rax,rax
  4052b3:	je     4052be <__ctype_b_loc@plt+0x2fee>
  4052b5:	mov    rcx,QWORD PTR [rax+0x10]
  4052b9:	cmp    rcx,r15
  4052bc:	jae    4052a0 <__ctype_b_loc@plt+0x2fd0>
  4052be:	mov    rbx,r14
  4052c1:	mov    r14,r11
  4052c4:	mov    rdi,QWORD PTR [r12+0x18]
  4052c9:	mov    ecx,0x28
  4052ce:	xor    esi,esi
  4052d0:	xor    edx,edx
  4052d2:	call   QWORD PTR [r12+0x10]
  4052d7:	test   rax,rax
  4052da:	je     4074b7 <__ctype_b_loc@plt+0x51e7>
  4052e0:	add    QWORD PTR [r12+0x78],0x28
  4052e6:	mov    BYTE PTR [rax+0x8],0xa
  4052ea:	mov    cl,BYTE PTR [r12+0x20]
  4052ef:	and    cl,0x3
  4052f2:	mov    BYTE PTR [rax+0x9],cl
  4052f5:	mov    QWORD PTR [rax+0x10],r15
  4052f9:	mov    rcx,QWORD PTR [r13+0x0]
  4052fd:	mov    QWORD PTR [rax],rcx
  405300:	mov    QWORD PTR [r13+0x0],rax
  405304:	lea    rcx,[r12+0xb8]
  40530c:	mov    QWORD PTR [rax+0x18],rcx
  405310:	mov    rcx,QWORD PTR [r12+0xd8]
  405318:	mov    QWORD PTR [rax+0x20],rcx
  40531c:	mov    QWORD PTR [rcx+0x18],rax
  405320:	mov    QWORD PTR [r12+0xd8],rax
  405328:	mov    r13,rax
  40532b:	mov    r12,QWORD PTR [rsp+0x30]
  405330:	mov    r11,r14
  405333:	mov    rdx,QWORD PTR [rsp+0x28]
  405338:	mov    r14,rbx
  40533b:	mov    rbx,QWORD PTR [rsp+0x60]
  405340:	mov    rsi,QWORD PTR [rsp+0x8]
  405345:	mov    QWORD PTR [rsi+rbp*8+0x28],r13
  40534a:	mov    r13,QWORD PTR [rsp+0x10]
  40534f:	jmp    40524f <__ctype_b_loc@plt+0x2f7f>
  405354:	mov    al,BYTE PTR [r13+0x9]
  405358:	mov    cl,BYTE PTR [r12+0x20]
  40535d:	not    cl
  40535f:	and    cl,al
  405361:	test   cl,0x3
  405364:	je     40536c <__ctype_b_loc@plt+0x309c>
  405366:	xor    al,0x3
  405368:	mov    BYTE PTR [r13+0x9],al
  40536c:	mov    r12,QWORD PTR [rsp+0x30]
  405371:	jmp    405345 <__ctype_b_loc@plt+0x3075>
  405373:	mov    ebp,ebx
  405375:	shr    ebp,0x17
  405378:	shr    ebx,0xe
  40537b:	and    ebx,0x1ff
  405381:	test   ebp,ebp
  405383:	je     40601b <__ctype_b_loc@plt+0x3d4b>
  405389:	test   ebx,ebx
  40538b:	je     40603c <__ctype_b_loc@plt+0x3d6c>
  405391:	cmp    DWORD PTR [r10+r14*1+0x8],0x5
  405397:	jne    4050f6 <__ctype_b_loc@plt+0x2e26>
  40539d:	jmp    406052 <__ctype_b_loc@plt+0x3d82>
  4053a2:	mov    rax,rbx
  4053a5:	shr    rax,0x13
  4053a9:	and    eax,0xfffffff0
  4053ac:	lea    rcx,[r10+rax*1]
  4053b0:	mov    eax,DWORD PTR [r10+rax*1+0x8]
  4053b5:	test   eax,eax
  4053b7:	je     406277 <__ctype_b_loc@plt+0x3fa7>
  4053bd:	cmp    eax,0x1
  4053c0:	jne    40627b <__ctype_b_loc@plt+0x3fab>
  4053c6:	cmp    DWORD PTR [rcx],0x0
  4053c9:	sete   dl
  4053cc:	jmp    40627d <__ctype_b_loc@plt+0x3fad>
  4053d1:	vmovsd xmm1,QWORD PTR [r12+0x10]
  4053d8:	vmovsd xmm2,QWORD PTR [r12+0x20]
  4053df:	vaddsd xmm0,xmm2,QWORD PTR [r12]
  4053e5:	vxorps xmm3,xmm3,xmm3
  4053e9:	vucomisd xmm2,xmm3
  4053ed:	jbe    405f44 <__ctype_b_loc@plt+0x3c74>
  4053f3:	vucomisd xmm1,xmm0
  4053f7:	jb     4050f6 <__ctype_b_loc@plt+0x2e26>
  4053fd:	jmp    405f4e <__ctype_b_loc@plt+0x3c7e>
  405402:	mov    rax,rbx
  405405:	shr    rax,0x13
  405409:	mov    edx,eax
  40540b:	and    edx,0xfffffff0
  40540e:	and    eax,0xff0
  405413:	mov    rsi,QWORD PTR [rsp+0x18]
  405418:	add    rax,rsi
  40541b:	add    rdx,r10
  40541e:	test   ebx,ebx
  405420:	cmovs  rdx,rax
  405424:	mov    rax,rbx
  405427:	shr    rax,0xa
  40542b:	mov    ecx,ebx
  40542d:	shr    ecx,0xe
  405430:	and    eax,0xff0
  405435:	add    rax,rsi
  405438:	and    ecx,0x1ff
  40543e:	shl    rcx,0x4
  405442:	add    rcx,r10
  405445:	test   ebx,0x400000
  40544b:	cmovne rcx,rax
  40544f:	cmp    DWORD PTR [rdx+0x8],0x3
  405453:	jne    4050d7 <__ctype_b_loc@plt+0x2e07>
  405459:	cmp    DWORD PTR [rcx+0x8],0x3
  40545d:	jne    4050d7 <__ctype_b_loc@plt+0x2e07>
  405463:	vmovsd xmm0,QWORD PTR [rdx]
  405467:	vmovsd xmm1,QWORD PTR [rcx]
  40546b:	vdivsd xmm2,xmm0,xmm1
  40546f:	vroundsd xmm2,xmm2,xmm2,0x9
  405475:	vmulsd xmm1,xmm1,xmm2
  405479:	vsubsd xmm0,xmm0,xmm1
  40547d:	jmp    405b67 <__ctype_b_loc@plt+0x3897>
  405482:	mov    rax,rbx
  405485:	shr    rax,0x13
  405489:	mov    edx,eax
  40548b:	and    edx,0xfffffff0
  40548e:	and    eax,0xff0
  405493:	mov    rsi,QWORD PTR [rsp+0x18]
  405498:	add    rax,rsi
  40549b:	add    rdx,r10
  40549e:	test   ebx,ebx
  4054a0:	cmovs  rdx,rax
  4054a4:	mov    rax,rbx
  4054a7:	shr    rax,0xa
  4054ab:	mov    ecx,ebx
  4054ad:	shr    ecx,0xe
  4054b0:	and    eax,0xff0
  4054b5:	add    rax,rsi
  4054b8:	and    ecx,0x1ff
  4054be:	shl    rcx,0x4
  4054c2:	add    rcx,r10
  4054c5:	test   ebx,0x400000
  4054cb:	cmovne rcx,rax
  4054cf:	cmp    DWORD PTR [rdx+0x8],0x3
  4054d3:	jne    405edb <__ctype_b_loc@plt+0x3c0b>
  4054d9:	cmp    DWORD PTR [rcx+0x8],0x3
  4054dd:	jne    405edb <__ctype_b_loc@plt+0x3c0b>
  4054e3:	vmovsd xmm0,QWORD PTR [rdx]
  4054e7:	vmulsd xmm0,xmm0,QWORD PTR [rcx]
  4054eb:	jmp    405b67 <__ctype_b_loc@plt+0x3897>
  4054f0:	mov    rax,rbx
  4054f3:	shr    rax,0x13
  4054f7:	and    eax,0xfffffff0
  4054fa:	lea    rsi,[r10+rax*1]
  4054fe:	mov    rcx,QWORD PTR [r10+rax*1]
  405502:	mov    QWORD PTR [r12+0x10],rcx
  405507:	mov    eax,DWORD PTR [r10+rax*1+0x8]
  40550c:	mov    DWORD PTR [r12+0x18],eax
  405511:	mov    QWORD PTR [r13+0x30],r11
  405515:	jmp    405b8c <__ctype_b_loc@plt+0x38bc>
  40551a:	shr    rbx,0x17
  40551e:	mov    rax,QWORD PTR [rsp+0x50]
  405523:	mov    rax,QWORD PTR [rax+rbx*8+0x28]
  405528:	mov    rax,QWORD PTR [rax+0x10]
  40552c:	mov    rcx,QWORD PTR [rax]
  40552f:	mov    QWORD PTR [r12],rcx
  405533:	mov    eax,DWORD PTR [rax+0x8]
  405536:	mov    DWORD PTR [r10+r14*1+0x8],eax
  40553b:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405540:	mov    rax,rbx
  405543:	shr    rax,0x13
  405547:	mov    edx,eax
  405549:	and    edx,0xfffffff0
  40554c:	and    eax,0xff0
  405551:	mov    rsi,QWORD PTR [rsp+0x18]
  405556:	add    rax,rsi
  405559:	add    rdx,r10
  40555c:	test   ebx,ebx
  40555e:	cmovs  rdx,rax
  405562:	mov    rax,rbx
  405565:	shr    rax,0xa
  405569:	mov    ecx,ebx
  40556b:	shr    ecx,0xe
  40556e:	and    eax,0xff0
  405573:	add    rax,rsi
  405576:	and    ecx,0x1ff
  40557c:	shl    rcx,0x4
  405580:	add    rcx,r10
  405583:	test   ebx,0x400000
  405589:	cmovne rcx,rax
  40558d:	cmp    DWORD PTR [rdx+0x8],0x3
  405591:	jne    405ef0 <__ctype_b_loc@plt+0x3c20>
  405597:	cmp    DWORD PTR [rcx+0x8],0x3
  40559b:	jne    405ef0 <__ctype_b_loc@plt+0x3c20>
  4055a1:	vmovsd xmm0,QWORD PTR [rdx]
  4055a5:	vaddsd xmm0,xmm0,QWORD PTR [rcx]
  4055a9:	jmp    405b67 <__ctype_b_loc@plt+0x3897>
  4055ae:	mov    QWORD PTR [r13+0x30],r11
  4055b2:	mov    rax,rbx
  4055b5:	shr    rax,0x13
  4055b9:	mov    edx,eax
  4055bb:	and    edx,0xfffffff0
  4055be:	and    eax,0xff0
  4055c3:	mov    rsi,QWORD PTR [rsp+0x18]
  4055c8:	add    rax,rsi
  4055cb:	add    rdx,r10
  4055ce:	test   ebx,ebx
  4055d0:	cmovs  rdx,rax
  4055d4:	mov    ecx,ebx
  4055d6:	shr    ecx,0xe
  4055d9:	movzx  eax,cl
  4055dc:	shl    rax,0x4
  4055e0:	add    rax,rsi
  4055e3:	and    ecx,0x1ff
  4055e9:	shl    rcx,0x4
  4055ed:	add    rcx,r10
  4055f0:	test   ebx,0x400000
  4055f6:	cmovne rcx,rax
  4055fa:	mov    rdi,r13
  4055fd:	mov    rsi,r12
  405600:	jmp    4058c9 <__ctype_b_loc@plt+0x35f9>
  405605:	mov    QWORD PTR [r13+0x30],r11
  405609:	mov    rcx,rbx
  40560c:	shr    rcx,0x13
  405610:	mov    eax,ecx
  405612:	and    eax,0xfffffff0
  405615:	and    ecx,0xff0
  40561b:	mov    rsi,QWORD PTR [rsp+0x18]
  405620:	add    rcx,rsi
  405623:	add    rax,r10
  405626:	test   ebx,ebx
  405628:	cmovs  rax,rcx
  40562c:	mov    rdx,rbx
  40562f:	shr    rdx,0xa
  405633:	mov    ecx,ebx
  405635:	shr    ecx,0xe
  405638:	and    edx,0xff0
  40563e:	add    rdx,rsi
  405641:	and    ecx,0x1ff
  405647:	shl    rcx,0x4
  40564b:	add    rcx,r10
  40564e:	test   ebx,0x400000
  405654:	cmovne rcx,rdx
  405658:	movsxd rdx,DWORD PTR [rax+0x8]
  40565c:	movsxd rsi,DWORD PTR [rcx+0x8]
  405660:	cmp    edx,esi
  405662:	jne    405f80 <__ctype_b_loc@plt+0x3cb0>
  405668:	lea    esi,[rdx-0x3]
  40566b:	cmp    esi,0x4
  40566e:	ja     406617 <__ctype_b_loc@plt+0x4347>
  405674:	lea    rdi,[rip+0x23a89]        # 429104 <__ctype_b_loc@plt+0x26e34>
  40567b:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  40567f:	add    rsi,rdi
  405682:	jmp    rsi
  405684:	mov    rsi,QWORD PTR [rax]
  405687:	add    rsi,0x10
  40568b:	mov    r15,QWORD PTR [rsp+0x30]
  405690:	jmp    40662a <__ctype_b_loc@plt+0x435a>
  405695:	mov    QWORD PTR [r13+0x30],r11
  405699:	mov    rax,rbx
  40569c:	shr    rax,0x13
  4056a0:	mov    esi,eax
  4056a2:	and    esi,0xfffffff0
  4056a5:	and    eax,0xff0
  4056aa:	mov    rcx,QWORD PTR [rsp+0x18]
  4056af:	add    rax,rcx
  4056b2:	add    rsi,r10
  4056b5:	test   ebx,ebx
  4056b7:	cmovs  rsi,rax
  4056bb:	mov    rax,rbx
  4056be:	shr    rax,0xa
  4056c2:	mov    edx,ebx
  4056c4:	shr    edx,0xe
  4056c7:	and    eax,0xff0
  4056cc:	add    rax,rcx
  4056cf:	and    edx,0x1ff
  4056d5:	shl    rdx,0x4
  4056d9:	add    rdx,r10
  4056dc:	test   ebx,0x400000
  4056e2:	cmovne rdx,rax
  4056e6:	mov    rdi,r13
  4056e9:	mov    rbx,r11
  4056ec:	call   409780 <__ctype_b_loc@plt+0x74b0>
  4056f1:	cmp    eax,ebp
  4056f3:	jne    405705 <__ctype_b_loc@plt+0x3435>
  4056f5:	mov    eax,DWORD PTR [rbx]
  4056f7:	shr    eax,0xe
  4056fa:	lea    rbx,[rbx+rax*4]
  4056fe:	add    rbx,0xfffffffffff80004
  405705:	mov    r11,rbx
  405708:	jmp    406d0b <__ctype_b_loc@plt+0x4a3b>
  40570d:	mov    QWORD PTR [r13+0x30],r11
  405711:	lea    rbp,[r10+r14*1]
  405715:	add    rbp,0x8
  405719:	mov    eax,DWORD PTR [r10+r14*1+0x8]
  40571e:	cmp    eax,0x3
  405721:	mov    QWORD PTR [rsp+0x28],r10
  405726:	je     406990 <__ctype_b_loc@plt+0x46c0>
  40572c:	mov    r15,r11
  40572f:	cmp    eax,0x4
  405732:	jne    4057d2 <__ctype_b_loc@plt+0x3502>
  405738:	mov    QWORD PTR [rsp+0x8],rbp
  40573d:	mov    r14,QWORD PTR [r12]
  405741:	add    r14,0x18
  405745:	lea    rsi,[rsp+0x38]
  40574a:	mov    rdi,r14
  40574d:	call   4020b0 <strtod@plt>
  405752:	mov    rbp,QWORD PTR [rsp+0x38]
  405757:	cmp    rbp,r14
  40575a:	je     4057cd <__ctype_b_loc@plt+0x34fd>
  40575c:	mov    QWORD PTR [rsp+0x20],r12
  405761:	mov    r12b,BYTE PTR [rbp+0x0]
  405765:	mov    eax,r12d
  405768:	or     al,0x20
  40576a:	cmp    al,0x78
  40576c:	jne    4057a2 <__ctype_b_loc@plt+0x34d2>
  40576e:	lea    rsi,[rsp+0x38]
  405773:	mov    rdi,r14
  405776:	mov    edx,0x10
  40577b:	call   402250 <strtoul@plt>
  405780:	vmovq  xmm0,rax
  405785:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x244e3]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  40578d:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x244eb]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  405795:	vhaddpd xmm0,xmm0,xmm0
  405799:	mov    rbp,QWORD PTR [rsp+0x38]
  40579e:	mov    r12b,BYTE PTR [rbp+0x0]
  4057a2:	test   r12b,r12b
  4057a5:	je     406822 <__ctype_b_loc@plt+0x4552>
  4057ab:	vmovapd XMMWORD PTR [rsp+0x60],xmm0
  4057b1:	call   4022d0 <__ctype_b_loc@plt>
  4057b6:	mov    rax,QWORD PTR [rax]
  4057b9:	movzx  ecx,r12b
  4057bd:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4057c2:	jne    40694e <__ctype_b_loc@plt+0x467e>
  4057c8:	mov    r12,QWORD PTR [rsp+0x20]
  4057cd:	mov    rbp,QWORD PTR [rsp+0x8]
  4057d2:	lea    rsi,[rip+0x246aa]        # 429e83 <__ctype_b_loc@plt+0x27bb3>
  4057d9:	jmp    406a4c <__ctype_b_loc@plt+0x477c>
  4057de:	mov    ecx,ebx
  4057e0:	shr    ecx,0x17
  4057e3:	mov    DWORD PTR [r12],ecx
  4057e7:	mov    DWORD PTR [r10+r14*1+0x8],0x1
  4057f0:	add    rax,0x8
  4057f4:	test   ebx,0x7fc000
  4057fa:	cmovne r11,rax
  4057fe:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405803:	mov    rax,rbx
  405806:	shr    rax,0x13
  40580a:	mov    edx,eax
  40580c:	and    edx,0xfffffff0
  40580f:	and    eax,0xff0
  405814:	mov    rsi,QWORD PTR [rsp+0x18]
  405819:	add    rax,rsi
  40581c:	add    rdx,r10
  40581f:	test   ebx,ebx
  405821:	cmovs  rdx,rax
  405825:	mov    rax,rbx
  405828:	shr    rax,0xa
  40582c:	mov    ecx,ebx
  40582e:	shr    ecx,0xe
  405831:	and    eax,0xff0
  405836:	add    rax,rsi
  405839:	and    ecx,0x1ff
  40583f:	shl    rcx,0x4
  405843:	add    rcx,r10
  405846:	test   ebx,0x400000
  40584c:	cmovne rcx,rax
  405850:	cmp    DWORD PTR [rdx+0x8],0x3
  405854:	jne    405f05 <__ctype_b_loc@plt+0x3c35>
  40585a:	cmp    DWORD PTR [rcx+0x8],0x3
  40585e:	jne    405f05 <__ctype_b_loc@plt+0x3c35>
  405864:	vmovsd xmm0,QWORD PTR [rdx]
  405868:	vdivsd xmm0,xmm0,QWORD PTR [rcx]
  40586c:	jmp    405b67 <__ctype_b_loc@plt+0x3897>
  405871:	shr    rbx,0x13
  405875:	and    ebx,0xfffffff0
  405878:	add    rbx,r10
  40587b:	nop    DWORD PTR [rax+rax*1+0x0]
  405880:	mov    DWORD PTR [rbx+0x8],0x0
  405887:	add    rbx,0xfffffffffffffff0
  40588b:	cmp    rbx,r12
  40588e:	jae    405880 <__ctype_b_loc@plt+0x35b0>
  405890:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405895:	mov    rax,QWORD PTR [rsp+0x50]
  40589a:	mov    rax,QWORD PTR [rax+0x18]
  40589e:	mov    QWORD PTR [rsp+0x38],rax
  4058a3:	mov    DWORD PTR [rsp+0x40],0x5
  4058ab:	mov    QWORD PTR [r13+0x30],r11
  4058af:	shr    ebx,0xe
  4058b2:	shl    rbx,0x4
  4058b6:	add    rbx,QWORD PTR [rsp+0x18]
  4058bb:	lea    rsi,[rsp+0x38]
  4058c0:	mov    rdi,r13
  4058c3:	mov    rdx,rbx
  4058c6:	mov    rcx,r12
  4058c9:	mov    rbx,r11
  4058cc:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  4058d1:	jmp    4050ef <__ctype_b_loc@plt+0x2e1f>
  4058d6:	shr    rbx,0xa
  4058da:	and    ebx,0xfffffff0
  4058dd:	mov    rcx,QWORD PTR [rsp+0x18]
  4058e2:	mov    rax,QWORD PTR [rcx+rbx*1]
  4058e6:	mov    QWORD PTR [r12],rax
  4058ea:	mov    eax,DWORD PTR [rcx+rbx*1+0x8]
  4058ee:	mov    DWORD PTR [r10+r14*1+0x8],eax
  4058f3:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  4058f8:	lea    rsi,[r12+0x30]
  4058fd:	mov    rax,QWORD PTR [r12+0x20]
  405902:	mov    QWORD PTR [r12+0x50],rax
  405907:	mov    eax,DWORD PTR [r12+0x28]
  40590c:	mov    DWORD PTR [r12+0x58],eax
  405911:	mov    rax,QWORD PTR [r12]
  405915:	mov    rcx,QWORD PTR [r12+0x10]
  40591a:	mov    QWORD PTR [r12+0x40],rcx
  40591f:	mov    ecx,DWORD PTR [r12+0x18]
  405924:	mov    DWORD PTR [r12+0x48],ecx
  405929:	mov    QWORD PTR [r12+0x30],rax
  40592e:	mov    eax,DWORD PTR [r10+r14*1+0x8]
  405933:	mov    DWORD PTR [r12+0x38],eax
  405938:	add    r12,0x60
  40593c:	mov    QWORD PTR [r13+0x10],r12
  405940:	mov    QWORD PTR [r13+0x30],r11
  405944:	shr    ebx,0xe
  405947:	and    ebx,0x1ff
  40594d:	mov    rdi,r13
  405950:	mov    edx,ebx
  405952:	mov    rbx,r11
  405955:	call   405020 <__ctype_b_loc@plt+0x2d50>
  40595a:	mov    r10,QWORD PTR [r13+0x18]
  40595e:	mov    rax,QWORD PTR [r13+0x28]
  405962:	mov    rax,QWORD PTR [rax+0x10]
  405966:	mov    QWORD PTR [r13+0x10],rax
  40596a:	mov    eax,DWORD PTR [r10+r14*1+0x38]
  40596f:	test   eax,eax
  405971:	je     405995 <__ctype_b_loc@plt+0x36c5>
  405973:	lea    rcx,[r10+r14*1]
  405977:	add    rcx,0x30
  40597b:	mov    rdx,QWORD PTR [rcx]
  40597e:	mov    QWORD PTR [rcx-0x10],rdx
  405982:	mov    DWORD PTR [rcx-0x8],eax
  405985:	mov    eax,DWORD PTR [rbx]
  405987:	shr    eax,0xe
  40598a:	lea    rbx,[rbx+rax*4]
  40598e:	add    rbx,0xfffffffffff80004
  405995:	mov    r11,rbx
  405998:	add    r11,0x4
  40599c:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  4059a1:	mov    rax,rbx
  4059a4:	shr    rax,0x13
  4059a8:	mov    edx,eax
  4059aa:	and    edx,0xfffffff0
  4059ad:	and    eax,0xff0
  4059b2:	mov    rsi,QWORD PTR [rsp+0x18]
  4059b7:	add    rax,rsi
  4059ba:	add    rdx,r10
  4059bd:	test   ebx,ebx
  4059bf:	cmovs  rdx,rax
  4059c3:	mov    rax,rbx
  4059c6:	shr    rax,0xa
  4059ca:	mov    ecx,ebx
  4059cc:	shr    ecx,0xe
  4059cf:	and    eax,0xff0
  4059d4:	add    rax,rsi
  4059d7:	and    ecx,0x1ff
  4059dd:	shl    rcx,0x4
  4059e1:	add    rcx,r10
  4059e4:	test   ebx,0x400000
  4059ea:	cmovne rcx,rax
  4059ee:	cmp    DWORD PTR [rdx+0x8],0x3
  4059f2:	jne    405f1a <__ctype_b_loc@plt+0x3c4a>
  4059f8:	cmp    DWORD PTR [rcx+0x8],0x3
  4059fc:	jne    405f1a <__ctype_b_loc@plt+0x3c4a>
  405a02:	vmovsd xmm0,QWORD PTR [rdx]
  405a06:	vmovsd xmm1,QWORD PTR [rcx]
  405a0a:	mov    rbx,r11
  405a0d:	mov    rbp,r10
  405a10:	call   4020c0 <pow@plt>
  405a15:	mov    r10,rbp
  405a18:	mov    r11,rbx
  405a1b:	jmp    405a58 <__ctype_b_loc@plt+0x3788>
  405a1d:	shr    rbx,0x13
  405a21:	and    ebx,0xfffffff0
  405a24:	lea    rax,[r10+rbx*1]
  405a28:	movsxd rcx,DWORD PTR [r10+rbx*1+0x8]
  405a2d:	cmp    rcx,0x4
  405a31:	je     4062b3 <__ctype_b_loc@plt+0x3fe3>
  405a37:	cmp    ecx,0x5
  405a3a:	jne    4062e3 <__ctype_b_loc@plt+0x4013>
  405a40:	mov    rdi,QWORD PTR [rax]
  405a43:	mov    rbx,r11
  405a46:	mov    rbp,r10
  405a49:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  405a4e:	mov    r10,rbp
  405a51:	mov    r11,rbx
  405a54:	vcvtsi2sd xmm0,xmm4,eax
  405a58:	vmovsd QWORD PTR [r12],xmm0
  405a5e:	mov    DWORD PTR [rbp+r14*1+0x8],0x3
  405a67:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405a6c:	shr    rbx,0xa
  405a70:	and    ebx,0xfffffff0
  405a73:	add    rbx,QWORD PTR [rsp+0x18]
  405a78:	mov    rax,QWORD PTR [rsp+0x50]
  405a7d:	mov    rax,QWORD PTR [rax+0x18]
  405a81:	mov    QWORD PTR [rsp+0x38],rax
  405a86:	mov    DWORD PTR [rsp+0x40],0x5
  405a8e:	mov    QWORD PTR [r13+0x30],r11
  405a92:	lea    rsi,[rsp+0x38]
  405a97:	mov    rdi,r13
  405a9a:	mov    rdx,rbx
  405a9d:	jmp    405bbc <__ctype_b_loc@plt+0x38ec>
  405aa2:	mov    edx,ebx
  405aa4:	shr    rbx,0x17
  405aa8:	shr    edx,0xe
  405aab:	and    edx,0x1ff
  405ab1:	mov    rbp,r11
  405ab4:	mov    QWORD PTR [r13+0x30],r11
  405ab8:	mov    esi,edx
  405aba:	sub    esi,ebx
  405abc:	inc    esi
  405abe:	mov    rdi,r13
  405ac1:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  405ac6:	mov    rax,QWORD PTR [r13+0x20]
  405aca:	mov    rcx,QWORD PTR [rax+0x78]
  405ace:	cmp    rcx,QWORD PTR [rax+0x70]
  405ad2:	jb     405adc <__ctype_b_loc@plt+0x380c>
  405ad4:	mov    rdi,r13
  405ad7:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  405adc:	mov    r10,QWORD PTR [r13+0x18]
  405ae0:	shl    rbx,0x4
  405ae4:	mov    rax,QWORD PTR [r10+rbx*1]
  405ae8:	mov    QWORD PTR [r10+r14*1],rax
  405aec:	mov    eax,DWORD PTR [r10+rbx*1+0x8]
  405af1:	mov    DWORD PTR [r10+r14*1+0x8],eax
  405af6:	mov    r11,rbp
  405af9:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405afe:	mov    rax,rbx
  405b01:	shr    rax,0x13
  405b05:	mov    edx,eax
  405b07:	and    edx,0xfffffff0
  405b0a:	and    eax,0xff0
  405b0f:	mov    rsi,QWORD PTR [rsp+0x18]
  405b14:	add    rax,rsi
  405b17:	add    rdx,r10
  405b1a:	test   ebx,ebx
  405b1c:	cmovs  rdx,rax
  405b20:	mov    rax,rbx
  405b23:	shr    rax,0xa
  405b27:	mov    ecx,ebx
  405b29:	shr    ecx,0xe
  405b2c:	and    eax,0xff0
  405b31:	add    rax,rsi
  405b34:	and    ecx,0x1ff
  405b3a:	shl    rcx,0x4
  405b3e:	add    rcx,r10
  405b41:	test   ebx,0x400000
  405b47:	cmovne rcx,rax
  405b4b:	cmp    DWORD PTR [rdx+0x8],0x3
  405b4f:	jne    405f2f <__ctype_b_loc@plt+0x3c5f>
  405b55:	cmp    DWORD PTR [rcx+0x8],0x3
  405b59:	jne    405f2f <__ctype_b_loc@plt+0x3c5f>
  405b5f:	vmovsd xmm0,QWORD PTR [rdx]
  405b63:	vsubsd xmm0,xmm0,QWORD PTR [rcx]
  405b67:	vmovsd QWORD PTR [r12],xmm0
  405b6d:	mov    DWORD PTR [r10+r14*1+0x8],0x3
  405b76:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405b7b:	mov    QWORD PTR [r13+0x30],r11
  405b7f:	mov    rsi,rbx
  405b82:	shr    rsi,0x13
  405b86:	and    esi,0xfffffff0
  405b89:	add    rsi,r10
  405b8c:	mov    rax,rbx
  405b8f:	shr    rax,0xa
  405b93:	mov    edx,ebx
  405b95:	shr    edx,0xe
  405b98:	and    eax,0xff0
  405b9d:	add    rax,QWORD PTR [rsp+0x18]
  405ba2:	and    edx,0x1ff
  405ba8:	shl    rdx,0x4
  405bac:	add    rdx,r10
  405baf:	test   ebx,0x400000
  405bb5:	cmovne rdx,rax
  405bb9:	mov    rdi,r13
  405bbc:	mov    rcx,r12
  405bbf:	mov    rbx,r11
  405bc2:	call   408610 <__ctype_b_loc@plt+0x6340>
  405bc7:	jmp    4050ef <__ctype_b_loc@plt+0x2e1f>
  405bcc:	shr    rbx,0x13
  405bd0:	and    ebx,0xfffffff0
  405bd3:	lea    rcx,[r10+rbx*1]
  405bd7:	cmp    DWORD PTR [r10+rbx*1+0x8],0x3
  405bdd:	jne    405fb1 <__ctype_b_loc@plt+0x3ce1>
  405be3:	vmovsd xmm0,QWORD PTR [rcx]
  405be7:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x240a1]        # 429c90 <__ctype_b_loc@plt+0x279c0>
  405bef:	jmp    4062cf <__ctype_b_loc@plt+0x3fff>
  405bf4:	mov    r15d,ebx
  405bf7:	mov    ecx,ebx
  405bf9:	shr    ecx,0x17
  405bfc:	mov    eax,ebx
  405bfe:	shr    eax,0x1a
  405c01:	and    eax,0x1f
  405c04:	je     405c13 <__ctype_b_loc@plt+0x3943>
  405c06:	and    ecx,0x7
  405c09:	or     ecx,0x8
  405c0c:	dec    al
  405c0e:	shlx   ecx,ecx,eax
  405c13:	mov    QWORD PTR [rsp+0x20],r12
  405c18:	shr    r15d,0xe
  405c1c:	shr    ebx,0x11
  405c1f:	and    ebx,0x1f
  405c22:	mov    r12d,ecx
  405c25:	mov    QWORD PTR [rsp+0x48],r11
  405c2a:	mov    QWORD PTR [rsp+0x28],r10
  405c2f:	mov    QWORD PTR [rsp+0x80],r14
  405c37:	je     40609b <__ctype_b_loc@plt+0x3dcb>
  405c3d:	and    r15d,0x7
  405c41:	or     r15d,0x8
  405c45:	dec    bl
  405c47:	shlx   r15d,r15d,ebx
  405c4c:	jmp    4060a2 <__ctype_b_loc@plt+0x3dd2>
  405c51:	shr    rbx,0x17
  405c55:	mov    rax,QWORD PTR [rsp+0x50]
  405c5a:	mov    rax,QWORD PTR [rax+rbx*8+0x28]
  405c5f:	mov    rcx,QWORD PTR [rax+0x10]
  405c63:	mov    rdx,QWORD PTR [r12]
  405c67:	mov    QWORD PTR [rcx],rdx
  405c6a:	mov    edx,DWORD PTR [r10+r14*1+0x8]
  405c6f:	mov    DWORD PTR [rcx+0x8],edx
  405c72:	cmp    DWORD PTR [r10+r14*1+0x8],0x4
  405c78:	jl     4050f6 <__ctype_b_loc@plt+0x2e26>
  405c7e:	mov    rsi,QWORD PTR [r12]
  405c82:	test   BYTE PTR [rsi+0x9],0x3
  405c86:	je     4050f6 <__ctype_b_loc@plt+0x2e26>
  405c8c:	mov    cl,BYTE PTR [rax+0x9]
  405c8f:	test   cl,0x4
  405c92:	je     4050f6 <__ctype_b_loc@plt+0x2e26>
  405c98:	mov    rdx,QWORD PTR [rsp+0x30]
  405c9d:	mov    rdi,QWORD PTR [rdx]
  405ca0:	cmp    BYTE PTR [rdi+0x21],0x1
  405ca4:	jne    406b20 <__ctype_b_loc@plt+0x4850>
  405caa:	mov    rbx,r11
  405cad:	mov    rbp,r10
  405cb0:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  405cb5:	jmp    405ed0 <__ctype_b_loc@plt+0x3c00>
  405cba:	shr    ebx,0x17
  405cbd:	mov    r15,QWORD PTR [r13+0x28]
  405cc1:	mov    rax,QWORD PTR [r15]
  405cc4:	sub    rax,QWORD PTR [r15+0x8]
  405cc8:	shr    rax,0x4
  405ccc:	mov    rcx,QWORD PTR [rsp+0x50]
  405cd1:	mov    rcx,QWORD PTR [rcx+0x20]
  405cd5:	movzx  ebp,BYTE PTR [rcx+0x71]
  405cd9:	not    ebp
  405cdb:	add    ebp,eax
  405cdd:	sub    ebx,0x1
  405ce0:	jae    405d32 <__ctype_b_loc@plt+0x3a62>
  405ce2:	mov    QWORD PTR [r13+0x30],r11
  405ce6:	mov    rax,QWORD PTR [r13+0x38]
  405cea:	sub    rax,QWORD PTR [r13+0x10]
  405cee:	mov    ecx,ebp
  405cf0:	shl    ecx,0x4
  405cf3:	movsxd rcx,ecx
  405cf6:	cmp    rax,rcx
  405cf9:	jg     405d18 <__ctype_b_loc@plt+0x3a48>
  405cfb:	mov    eax,DWORD PTR [r13+0x58]
  405cff:	lea    ecx,[rax+rax*1]
  405d02:	lea    esi,[rax+rbp*1]
  405d05:	cmp    eax,ebp
  405d07:	cmovge esi,ecx
  405d0a:	mov    rdi,r13
  405d0d:	mov    rbx,r11
  405d10:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  405d15:	mov    r11,rbx
  405d18:	mov    r10,QWORD PTR [r13+0x18]
  405d1c:	add    r14,r10
  405d1f:	movsxd rax,ebp
  405d22:	shl    rax,0x4
  405d26:	add    rax,r14
  405d29:	mov    QWORD PTR [r13+0x10],rax
  405d2d:	mov    ebx,ebp
  405d2f:	mov    r12,r14
  405d32:	test   ebx,ebx
  405d34:	jle    4050f6 <__ctype_b_loc@plt+0x2e26>
  405d3a:	movsxd rax,ebp
  405d3d:	mov    r9d,ebx
  405d40:	mov    r8d,r9d
  405d43:	and    r8d,0x1
  405d47:	cmp    ebx,0x1
  405d4a:	jne    406364 <__ctype_b_loc@plt+0x4094>
  405d50:	xor    ebx,ebx
  405d52:	jmp    4063d5 <__ctype_b_loc@plt+0x4105>
  405d57:	shr    rbx,0x17
  405d5b:	shl    rbx,0x4
  405d5f:	mov    eax,DWORD PTR [r10+rbx*1+0x8]
  405d64:	test   eax,eax
  405d66:	je     406301 <__ctype_b_loc@plt+0x4031>
  405d6c:	cmp    eax,0x1
  405d6f:	jne    406305 <__ctype_b_loc@plt+0x4035>
  405d75:	cmp    DWORD PTR [r10+rbx*1],0x0
  405d7a:	sete   al
  405d7d:	jmp    406307 <__ctype_b_loc@plt+0x4037>
  405d82:	mov    rcx,rbx
  405d85:	shr    rcx,0x13
  405d89:	mov    eax,ecx
  405d8b:	and    eax,0xfffffff0
  405d8e:	and    ecx,0xff0
  405d94:	mov    rsi,QWORD PTR [rsp+0x18]
  405d99:	add    rcx,rsi
  405d9c:	add    rax,r10
  405d9f:	test   ebx,ebx
  405da1:	cmovs  rax,rcx
  405da5:	mov    rdx,rbx
  405da8:	shr    rdx,0xa
  405dac:	mov    ecx,ebx
  405dae:	shr    ecx,0xe
  405db1:	and    edx,0xff0
  405db7:	add    rdx,rsi
  405dba:	and    ecx,0x1ff
  405dc0:	shl    rcx,0x4
  405dc4:	add    rcx,r10
  405dc7:	test   ebx,0x400000
  405dcd:	cmovne rcx,rdx
  405dd1:	mov    QWORD PTR [r13+0x30],r11
  405dd5:	mov    edx,DWORD PTR [rax+0x8]
  405dd8:	cmp    edx,DWORD PTR [rcx+0x8]
  405ddb:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  405de1:	cmp    edx,0x7
  405de4:	mov    rdi,QWORD PTR [rsp+0x30]
  405de9:	ja     405e00 <__ctype_b_loc@plt+0x3b30>
  405deb:	mov    edx,edx
  405ded:	lea    rsi,[rip+0x23344]        # 429138 <__ctype_b_loc@plt+0x26e68>
  405df4:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  405df8:	add    rdx,rsi
  405dfb:	mov    sil,0x1
  405dfe:	jmp    rdx
  405e00:	mov    rax,QWORD PTR [rax]
  405e03:	cmp    rax,QWORD PTR [rcx]
  405e06:	sete   sil
  405e0a:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  405e0f:	mov    ebp,ebx
  405e11:	shr    rbx,0x17
  405e15:	shr    ebp,0xe
  405e18:	and    ebp,0x1ff
  405e1e:	lea    edx,[rbp-0x1]
  405e21:	test   ebx,ebx
  405e23:	je     405e30 <__ctype_b_loc@plt+0x3b60>
  405e25:	shl    rbx,0x4
  405e29:	add    rbx,r12
  405e2c:	mov    QWORD PTR [r13+0x10],rbx
  405e30:	mov    rbx,r11
  405e33:	mov    QWORD PTR [r13+0x30],r11
  405e37:	mov    rdi,r13
  405e3a:	mov    rsi,r12
  405e3d:	call   407690 <__ctype_b_loc@plt+0x53c0>
  405e42:	cmp    eax,0x1
  405e45:	jne    4073e8 <__ctype_b_loc@plt+0x5118>
  405e4b:	test   ebp,ebp
  405e4d:	je     405e90 <__ctype_b_loc@plt+0x3bc0>
  405e4f:	mov    rax,QWORD PTR [r13+0x28]
  405e53:	mov    rax,QWORD PTR [rax+0x10]
  405e57:	mov    QWORD PTR [r13+0x10],rax
  405e5b:	jmp    405e90 <__ctype_b_loc@plt+0x3bc0>
  405e5d:	shr    rbx,0x17
  405e61:	test   ebx,ebx
  405e63:	je     405e70 <__ctype_b_loc@plt+0x3ba0>
  405e65:	shl    rbx,0x4
  405e69:	add    rbx,r12
  405e6c:	mov    QWORD PTR [r13+0x10],rbx
  405e70:	mov    rbx,r11
  405e73:	mov    QWORD PTR [r13+0x30],r11
  405e77:	mov    rdi,r13
  405e7a:	mov    rsi,r12
  405e7d:	mov    edx,0xffffffff
  405e82:	call   407690 <__ctype_b_loc@plt+0x53c0>
  405e87:	cmp    eax,0x1
  405e8a:	jne    4073f9 <__ctype_b_loc@plt+0x5129>
  405e90:	mov    r10,QWORD PTR [r13+0x18]
  405e94:	mov    r11,rbx
  405e97:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405e9c:	mov    eax,DWORD PTR [r10+r14*1+0x8]
  405ea1:	test   eax,eax
  405ea3:	je     40631c <__ctype_b_loc@plt+0x404c>
  405ea9:	cmp    eax,0x1
  405eac:	jne    406320 <__ctype_b_loc@plt+0x4050>
  405eb2:	cmp    DWORD PTR [r12],0x0
  405eb7:	sete   al
  405eba:	jmp    406322 <__ctype_b_loc@plt+0x4052>
  405ebf:	mov    rdi,r13
  405ec2:	mov    rsi,r12
  405ec5:	mov    rbx,r11
  405ec8:	mov    rbp,r10
  405ecb:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  405ed0:	mov    r10,rbp
  405ed3:	mov    r11,rbx
  405ed6:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405edb:	mov    QWORD PTR [r13+0x30],r11
  405edf:	mov    rdi,r13
  405ee2:	mov    rsi,r12
  405ee5:	mov    r8d,0x7
  405eeb:	jmp    4050e7 <__ctype_b_loc@plt+0x2e17>
  405ef0:	mov    QWORD PTR [r13+0x30],r11
  405ef4:	mov    rdi,r13
  405ef7:	mov    rsi,r12
  405efa:	mov    r8d,0x5
  405f00:	jmp    4050e7 <__ctype_b_loc@plt+0x2e17>
  405f05:	mov    QWORD PTR [r13+0x30],r11
  405f09:	mov    rdi,r13
  405f0c:	mov    rsi,r12
  405f0f:	mov    r8d,0x8
  405f15:	jmp    4050e7 <__ctype_b_loc@plt+0x2e17>
  405f1a:	mov    QWORD PTR [r13+0x30],r11
  405f1e:	mov    rdi,r13
  405f21:	mov    rsi,r12
  405f24:	mov    r8d,0xa
  405f2a:	jmp    4050e7 <__ctype_b_loc@plt+0x2e17>
  405f2f:	mov    QWORD PTR [r13+0x30],r11
  405f33:	mov    rdi,r13
  405f36:	mov    rsi,r12
  405f39:	mov    r8d,0x6
  405f3f:	jmp    4050e7 <__ctype_b_loc@plt+0x2e17>
  405f44:	vucomisd xmm0,xmm1
  405f48:	jb     4050f6 <__ctype_b_loc@plt+0x2e26>
  405f4e:	shr    ebx,0xe
  405f51:	lea    r11,[r11+rbx*4]
  405f55:	add    r11,0xfffffffffff80004
  405f5c:	vmovsd QWORD PTR [r12],xmm0
  405f62:	mov    DWORD PTR [r10+r14*1+0x8],0x3
  405f6b:	vmovsd QWORD PTR [r12+0x30],xmm0
  405f72:	mov    DWORD PTR [r12+0x38],0x3
  405f7b:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  405f80:	mov    r14,r11
  405f83:	lea    rax,[rip+0x29956]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  405f8a:	mov    rdx,QWORD PTR [rax+rdx*8]
  405f8e:	mov    rcx,QWORD PTR [rax+rsi*8]
  405f92:	mov    al,BYTE PTR [rdx+0x2]
  405f95:	cmp    al,BYTE PTR [rcx+0x2]
  405f98:	jne    40634c <__ctype_b_loc@plt+0x407c>
  405f9e:	lea    rsi,[rip+0x23f9a]        # 429f3f <__ctype_b_loc@plt+0x27c6f>
  405fa5:	xor    ebx,ebx
  405fa7:	mov    rdi,r13
  405faa:	xor    eax,eax
  405fac:	jmp    406ceb <__ctype_b_loc@plt+0x4a1b>
  405fb1:	mov    QWORD PTR [r13+0x30],r11
  405fb5:	mov    rdi,r13
  405fb8:	mov    rsi,r12
  405fbb:	mov    rdx,rcx
  405fbe:	mov    r8d,0xb
  405fc4:	jmp    4050e7 <__ctype_b_loc@plt+0x2e17>
  405fc9:	mov    rax,QWORD PTR [rsp+0x78]
  405fce:	mov    QWORD PTR [rsi+0x20],rax
  405fd2:	mov    r13,QWORD PTR [rsp+0x10]
  405fd7:	mov    r11,QWORD PTR [rsp+0x48]
  405fdc:	mov    rdx,QWORD PTR [rsp+0x28]
  405fe1:	mov    rax,QWORD PTR [rsp+0x20]
  405fe6:	mov    QWORD PTR [rax],rsi
  405fe9:	mov    DWORD PTR [rdx+r14*1+0x8],0x6
  405ff2:	mov    QWORD PTR [r13+0x30],r11
  405ff6:	mov    rax,QWORD PTR [r13+0x20]
  405ffa:	mov    rcx,QWORD PTR [rax+0x78]
  405ffe:	cmp    rcx,QWORD PTR [rax+0x70]
  406002:	jb     406012 <__ctype_b_loc@plt+0x3d42>
  406004:	mov    rdi,r13
  406007:	mov    rbx,r11
  40600a:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40600f:	mov    r11,rbx
  406012:	mov    r10,QWORD PTR [r13+0x18]
  406016:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  40601b:	mov    rbp,QWORD PTR [r13+0x10]
  40601f:	mov    rcx,QWORD PTR [r13+0x28]
  406023:	sub    rbp,r12
  406026:	shr    rbp,0x4
  40602a:	dec    ebp
  40602c:	mov    rcx,QWORD PTR [rcx+0x10]
  406030:	mov    QWORD PTR [r13+0x10],rcx
  406034:	test   ebx,ebx
  406036:	jne    405391 <__ctype_b_loc@plt+0x30c1>
  40603c:	mov    ebx,DWORD PTR [rax+0x4]
  40603f:	add    rax,0x8
  406043:	mov    r11,rax
  406046:	cmp    DWORD PTR [r10+r14*1+0x8],0x5
  40604c:	jne    4050f6 <__ctype_b_loc@plt+0x2e26>
  406052:	mov    rsi,QWORD PTR [r12]
  406056:	imul   eax,ebx,0x32
  406059:	lea    r15d,[rax+rbp*1]
  40605d:	add    r15d,0xffffffce
  406061:	cmp    r15d,DWORD PTR [rsi+0x38]
  406065:	mov    QWORD PTR [rsp+0x48],r11
  40606a:	mov    QWORD PTR [rsp+0x8],rsi
  40606f:	jle    4066cc <__ctype_b_loc@plt+0x43fc>
  406075:	lea    rax,[rip+0x23aac]        # 429b28 <__ctype_b_loc@plt+0x27858>
  40607c:	cmp    QWORD PTR [rsi+0x20],rax
  406080:	je     4066af <__ctype_b_loc@plt+0x43df>
  406086:	mov    rbx,r10
  406089:	mov    al,BYTE PTR [rsi+0xb]
  40608c:	mov    ecx,0x1
  406091:	shlx   rcx,rcx,rax
  406096:	jmp    4066b4 <__ctype_b_loc@plt+0x43e4>
  40609b:	and    r15d,0x1ff
  4060a2:	mov    r14,QWORD PTR [rsp+0x30]
  4060a7:	mov    rbp,QWORD PTR [r14]
  4060aa:	mov    rdi,QWORD PTR [rbp+0x18]
  4060ae:	mov    ecx,0x40
  4060b3:	xor    esi,esi
  4060b5:	xor    edx,edx
  4060b7:	call   QWORD PTR [rbp+0x10]
  4060ba:	test   rax,rax
  4060bd:	je     407519 <__ctype_b_loc@plt+0x5249>
  4060c3:	mov    rbx,rax
  4060c6:	add    QWORD PTR [rbp+0x78],0x40
  4060cb:	mov    rax,QWORD PTR [r14]
  4060ce:	mov    rcx,QWORD PTR [rax+0x28]
  4060d2:	mov    QWORD PTR [rbx],rcx
  4060d5:	mov    QWORD PTR [rax+0x28],rbx
  4060d9:	mov    al,BYTE PTR [rax+0x20]
  4060dc:	and    al,0x3
  4060de:	mov    BYTE PTR [rbx+0x9],al
  4060e1:	mov    BYTE PTR [rbx+0x8],0x5
  4060e5:	vxorpd xmm0,xmm0,xmm0
  4060e9:	vmovupd XMMWORD PTR [rbx+0x10],xmm0
  4060ee:	mov    WORD PTR [rbx+0xa],0xff
  4060f4:	mov    DWORD PTR [rbx+0x38],0x0
  4060fb:	lea    rax,[rip+0x23a26]        # 429b28 <__ctype_b_loc@plt+0x27858>
  406102:	mov    QWORD PTR [rbx+0x20],rax
  406106:	cmp    r12d,0xffffffff
  40610a:	jl     40614b <__ctype_b_loc@plt+0x3e7b>
  40610c:	mov    DWORD PTR [rsp+0x8],r15d
  406111:	movsxd rbp,r12d
  406114:	shl    rbp,0x4
  406118:	mov    r15,QWORD PTR [r14]
  40611b:	mov    rdi,QWORD PTR [r15+0x18]
  40611f:	xor    esi,esi
  406121:	xor    edx,edx
  406123:	mov    rcx,rbp
  406126:	call   QWORD PTR [r15+0x10]
  40612a:	test   r12d,r12d
  40612d:	je     406138 <__ctype_b_loc@plt+0x3e68>
  40612f:	test   rax,rax
  406132:	je     407519 <__ctype_b_loc@plt+0x5249>
  406138:	add    QWORD PTR [r15+0x78],rbp
  40613c:	mov    r14,QWORD PTR [rsp+0x80]
  406144:	mov    r15d,DWORD PTR [rsp+0x8]
  406149:	jmp    406166 <__ctype_b_loc@plt+0x3e96>
  40614b:	lea    rsi,[rip+0x23c67]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  406152:	mov    rdi,r13
  406155:	xor    eax,eax
  406157:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40615c:	xor    eax,eax
  40615e:	mov    r14,QWORD PTR [rsp+0x80]
  406166:	mov    QWORD PTR [rbx+0x18],rax
  40616a:	movsxd rcx,DWORD PTR [rbx+0x38]
  40616e:	cmp    ecx,r12d
  406171:	jge    406221 <__ctype_b_loc@plt+0x3f51>
  406177:	movsxd rdx,r12d
  40617a:	mov    esi,r12d
  40617d:	sub    esi,ecx
  40617f:	mov    r9,rcx
  406182:	not    r9
  406185:	add    r9,rdx
  406188:	and    rsi,0x7
  40618c:	je     4061c5 <__ctype_b_loc@plt+0x3ef5>
  40618e:	mov    rdi,rcx
  406191:	shl    rdi,0x4
  406195:	add    rdi,rax
  406198:	add    rdi,0x8
  40619c:	neg    rsi
  40619f:	xor    ebp,ebp
  4061a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4061b0:	mov    DWORD PTR [rdi],0x0
  4061b6:	dec    rbp
  4061b9:	add    rdi,0x10
  4061bd:	cmp    rsi,rbp
  4061c0:	jne    4061b0 <__ctype_b_loc@plt+0x3ee0>
  4061c2:	sub    rcx,rbp
  4061c5:	cmp    r9,0x7
  4061c9:	jb     406221 <__ctype_b_loc@plt+0x3f51>
  4061cb:	sub    rdx,rcx
  4061ce:	shl    rcx,0x4
  4061d2:	add    rcx,rax
  4061d5:	add    rcx,0x78
  4061d9:	nop    DWORD PTR [rax+0x0]
  4061e0:	mov    DWORD PTR [rcx-0x70],0x0
  4061e7:	mov    DWORD PTR [rcx-0x60],0x0
  4061ee:	mov    DWORD PTR [rcx-0x50],0x0
  4061f5:	mov    DWORD PTR [rcx-0x40],0x0
  4061fc:	mov    DWORD PTR [rcx-0x30],0x0
  406203:	mov    DWORD PTR [rcx-0x20],0x0
  40620a:	mov    DWORD PTR [rcx-0x10],0x0
  406211:	mov    DWORD PTR [rcx],0x0
  406217:	sub    rcx,0xffffffffffffff80
  40621b:	add    rdx,0xfffffffffffffff8
  40621f:	jne    4061e0 <__ctype_b_loc@plt+0x3f10>
  406221:	mov    DWORD PTR [rbx+0x38],r12d
  406225:	mov    rdi,r13
  406228:	mov    rsi,rbx
  40622b:	mov    edx,r15d
  40622e:	call   40a810 <__ctype_b_loc@plt+0x8540>
  406233:	mov    rax,QWORD PTR [rsp+0x20]
  406238:	mov    QWORD PTR [rax],rbx
  40623b:	mov    rax,QWORD PTR [rsp+0x28]
  406240:	mov    DWORD PTR [rax+r14*1+0x8],0x5
  406249:	mov    r11,QWORD PTR [rsp+0x48]
  40624e:	mov    QWORD PTR [r13+0x30],r11
  406252:	mov    rax,QWORD PTR [r13+0x20]
  406256:	mov    rcx,QWORD PTR [rax+0x78]
  40625a:	cmp    rcx,QWORD PTR [rax+0x70]
  40625e:	jb     40626e <__ctype_b_loc@plt+0x3f9e>
  406260:	mov    rdi,r13
  406263:	mov    rbx,r11
  406266:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40626b:	mov    r11,rbx
  40626e:	mov    r10,QWORD PTR [r13+0x18]
  406272:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  406277:	mov    dl,0x1
  406279:	jmp    40627d <__ctype_b_loc@plt+0x3fad>
  40627b:	xor    edx,edx
  40627d:	movzx  edx,dl
  406280:	shr    ebx,0xe
  406283:	and    ebx,0x1ff
  406289:	cmp    ebx,edx
  40628b:	je     4062aa <__ctype_b_loc@plt+0x3fda>
  40628d:	mov    rcx,QWORD PTR [rcx]
  406290:	mov    QWORD PTR [r12],rcx
  406294:	mov    DWORD PTR [r10+r14*1+0x8],eax
  406299:	mov    eax,DWORD PTR [r11]
  40629c:	shr    eax,0xe
  40629f:	lea    r11,[r11+rax*4]
  4062a3:	add    r11,0xfffffffffff80004
  4062aa:	add    r11,0x4
  4062ae:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  4062b3:	mov    rax,QWORD PTR [rax]
  4062b6:	vmovsd xmm0,QWORD PTR [rax+0x10]
  4062bb:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x239ad]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  4062c3:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x239b5]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  4062cb:	vhaddpd xmm0,xmm0,xmm0
  4062cf:	vmovlpd QWORD PTR [r12],xmm0
  4062d5:	mov    DWORD PTR [r10+r14*1+0x8],0x3
  4062de:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  4062e3:	mov    QWORD PTR [r13+0x30],r11
  4062e7:	cmp    ecx,0x7
  4062ea:	mov    r8,QWORD PTR [rsp+0x30]
  4062ef:	jne    406410 <__ctype_b_loc@plt+0x4140>
  4062f5:	mov    rdx,QWORD PTR [rax]
  4062f8:	add    rdx,0x10
  4062fc:	jmp    40641e <__ctype_b_loc@plt+0x414e>
  406301:	mov    al,0x1
  406303:	jmp    406307 <__ctype_b_loc@plt+0x4037>
  406305:	xor    eax,eax
  406307:	movzx  eax,al
  40630a:	mov    DWORD PTR [r12],eax
  40630e:	mov    DWORD PTR [r10+r14*1+0x8],0x1
  406317:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  40631c:	mov    al,0x1
  40631e:	jmp    406322 <__ctype_b_loc@plt+0x4052>
  406320:	xor    eax,eax
  406322:	movzx  eax,al
  406325:	shr    ebx,0xe
  406328:	and    ebx,0x1ff
  40632e:	cmp    ebx,eax
  406330:	je     406343 <__ctype_b_loc@plt+0x4073>
  406332:	mov    eax,DWORD PTR [r11]
  406335:	shr    eax,0xe
  406338:	lea    r11,[r11+rax*4]
  40633c:	add    r11,0xfffffffffff80004
  406343:	add    r11,0x4
  406347:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  40634c:	lea    rsi,[rip+0x23c0d]        # 429f60 <__ctype_b_loc@plt+0x27c90>
  406353:	xor    ebx,ebx
  406355:	mov    rdi,r13
  406358:	xor    eax,eax
  40635a:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40635f:	jmp    406cf0 <__ctype_b_loc@plt+0x4a20>
  406364:	mov    rsi,rax
  406367:	shl    rsi,0x4
  40636b:	neg    rsi
  40636e:	lea    rdi,[r12+0x18]
  406373:	sub    r9,r8
  406376:	xor    ebp,ebp
  406378:	jmp    40639c <__ctype_b_loc@plt+0x40cc>
  40637a:	nop    WORD PTR [rax+rax*1+0x0]
  406380:	mov    DWORD PTR [rdi],ebx
  406382:	add    rbp,0x2
  406386:	add    rsi,0x20
  40638a:	add    rdi,0x20
  40638e:	inc    rcx
  406391:	mov    rbx,rbp
  406394:	cmp    r9,rbp
  406397:	mov    rbp,rcx
  40639a:	je     4063d5 <__ctype_b_loc@plt+0x4105>
  40639c:	mov    ecx,0x0
  4063a1:	cmp    rbp,rax
  4063a4:	jge    4063b5 <__ctype_b_loc@plt+0x40e5>
  4063a6:	mov    rcx,QWORD PTR [r15]
  4063a9:	mov    rbx,QWORD PTR [rcx+rsi*1]
  4063ad:	mov    QWORD PTR [rdi-0x18],rbx
  4063b1:	mov    ecx,DWORD PTR [rcx+rsi*1+0x8]
  4063b5:	mov    DWORD PTR [rdi-0x10],ecx
  4063b8:	lea    rcx,[rbp+0x1]
  4063bc:	xor    ebx,ebx
  4063be:	cmp    rcx,rax
  4063c1:	jge    406380 <__ctype_b_loc@plt+0x40b0>
  4063c3:	mov    rbx,QWORD PTR [r15]
  4063c6:	mov    rdx,QWORD PTR [rbx+rsi*1+0x10]
  4063cb:	mov    QWORD PTR [rdi-0x8],rdx
  4063cf:	mov    ebx,DWORD PTR [rbx+rsi*1+0x18]
  4063d3:	jmp    406380 <__ctype_b_loc@plt+0x40b0>
  4063d5:	test   r8,r8
  4063d8:	je     4050f6 <__ctype_b_loc@plt+0x2e26>
  4063de:	xor    ecx,ecx
  4063e0:	cmp    rbx,rax
  4063e3:	jge    406402 <__ctype_b_loc@plt+0x4132>
  4063e5:	neg    rax
  4063e8:	shl    rax,0x4
  4063ec:	add    rax,QWORD PTR [r15]
  4063ef:	mov    rcx,rbx
  4063f2:	shl    rcx,0x4
  4063f6:	mov    rdx,QWORD PTR [rcx+rax*1]
  4063fa:	mov    QWORD PTR [r12+rcx*1],rdx
  4063fe:	mov    ecx,DWORD PTR [rcx+rax*1+0x8]
  406402:	shl    rbx,0x4
  406406:	mov    DWORD PTR [r12+rbx*1+0x8],ecx
  40640b:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  406410:	mov    rdx,QWORD PTR [r8]
  406413:	lea    rdx,[rdx+rcx*8]
  406417:	add    rdx,0xe0
  40641e:	mov    rbp,QWORD PTR [rdx]
  406421:	lea    rdx,[rip+0x236f0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  406428:	test   rbp,rbp
  40642b:	je     406478 <__ctype_b_loc@plt+0x41a8>
  40642d:	mov    rsi,QWORD PTR [r8]
  406430:	mov    rsi,QWORD PTR [rsi+0x188]
  406437:	mov    dil,BYTE PTR [rbp+0xb]
  40643b:	bzhi   edi,DWORD PTR [rsi+0xc],edi
  406441:	movsxd rdi,edi
  406444:	lea    rdi,[rdi+rdi*4]
  406448:	shl    rdi,0x3
  40644c:	add    rdi,QWORD PTR [rbp+0x20]
  406450:	cmp    DWORD PTR [rdi+0x18],0x4
  406454:	je     40646f <__ctype_b_loc@plt+0x419f>
  406456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406460:	mov    rdi,QWORD PTR [rdi+0x20]
  406464:	test   rdi,rdi
  406467:	je     406478 <__ctype_b_loc@plt+0x41a8>
  406469:	cmp    DWORD PTR [rdi+0x18],0x4
  40646d:	jne    406460 <__ctype_b_loc@plt+0x4190>
  40646f:	cmp    QWORD PTR [rdi+0x10],rsi
  406473:	jne    406460 <__ctype_b_loc@plt+0x4190>
  406475:	mov    rdx,rdi
  406478:	cmp    DWORD PTR [rdx+0x8],0x0
  40647c:	je     406539 <__ctype_b_loc@plt+0x4269>
  406482:	cmp    DWORD PTR [rdx+0x8],0x0
  406486:	je     4065a6 <__ctype_b_loc@plt+0x42d6>
  40648c:	mov    rbp,r11
  40648f:	sub    r12,QWORD PTR [r13+0x40]
  406493:	lea    rcx,[r10+rbx*1]
  406497:	add    rcx,0x8
  40649b:	mov    rsi,QWORD PTR [r13+0x10]
  40649f:	mov    rdi,QWORD PTR [rdx]
  4064a2:	mov    QWORD PTR [rsi],rdi
  4064a5:	mov    edx,DWORD PTR [rdx+0x8]
  4064a8:	mov    DWORD PTR [rsi+0x8],edx
  4064ab:	mov    rdx,QWORD PTR [r13+0x10]
  4064af:	mov    rax,QWORD PTR [rax]
  4064b2:	mov    QWORD PTR [rdx+0x10],rax
  4064b6:	mov    eax,DWORD PTR [rcx]
  4064b8:	mov    DWORD PTR [rdx+0x18],eax
  4064bb:	mov    rax,QWORD PTR [r13+0x10]
  4064bf:	mov    QWORD PTR [rax+0x20],0x0
  4064c7:	mov    DWORD PTR [rax+0x28],0x0
  4064ce:	mov    rax,QWORD PTR [r13+0x38]
  4064d2:	sub    rax,QWORD PTR [r13+0x10]
  4064d6:	cmp    rax,0x30
  4064da:	jg     4064f4 <__ctype_b_loc@plt+0x4224>
  4064dc:	mov    eax,DWORD PTR [r13+0x58]
  4064e0:	lea    ecx,[rax+rax*1]
  4064e3:	lea    esi,[rax+0x3]
  4064e6:	cmp    eax,0x3
  4064e9:	cmovge esi,ecx
  4064ec:	mov    rdi,r13
  4064ef:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4064f4:	mov    rsi,QWORD PTR [r13+0x10]
  4064f8:	lea    rax,[rsi+0x30]
  4064fc:	mov    QWORD PTR [r13+0x10],rax
  406500:	mov    rdi,r13
  406503:	mov    edx,0x1
  406508:	call   405020 <__ctype_b_loc@plt+0x2d50>
  40650d:	mov    rax,QWORD PTR [r13+0x10]
  406511:	mov    rcx,QWORD PTR [r13+0x40]
  406515:	lea    rdx,[rax-0x10]
  406519:	mov    QWORD PTR [r13+0x10],rdx
  40651d:	mov    rdx,QWORD PTR [rax-0x10]
  406521:	mov    QWORD PTR [rcx+r12*1],rdx
  406525:	mov    eax,DWORD PTR [rax-0x8]
  406528:	mov    DWORD PTR [rcx+r12*1+0x8],eax
  40652d:	mov    r10,QWORD PTR [r13+0x18]
  406531:	mov    r11,rbp
  406534:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  406539:	mov    rsi,QWORD PTR [r8]
  40653c:	mov    rbp,QWORD PTR [rsi+0xe0]
  406543:	lea    rdx,[rip+0x235ce]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40654a:	test   rbp,rbp
  40654d:	je     406482 <__ctype_b_loc@plt+0x41b2>
  406553:	mov    rsi,QWORD PTR [rsi+0x188]
  40655a:	mov    dil,BYTE PTR [rbp+0xb]
  40655e:	bzhi   edi,DWORD PTR [rsi+0xc],edi
  406564:	movsxd rdi,edi
  406567:	lea    rdi,[rdi+rdi*4]
  40656b:	shl    rdi,0x3
  40656f:	add    rdi,QWORD PTR [rbp+0x20]
  406573:	cmp    DWORD PTR [rdi+0x18],0x4
  406577:	je     406593 <__ctype_b_loc@plt+0x42c3>
  406579:	nop    DWORD PTR [rax+0x0]
  406580:	mov    rdi,QWORD PTR [rdi+0x20]
  406584:	test   rdi,rdi
  406587:	je     406482 <__ctype_b_loc@plt+0x41b2>
  40658d:	cmp    DWORD PTR [rdi+0x18],0x4
  406591:	jne    406580 <__ctype_b_loc@plt+0x42b0>
  406593:	cmp    QWORD PTR [rdi+0x10],rsi
  406597:	jne    406580 <__ctype_b_loc@plt+0x42b0>
  406599:	mov    rdx,rdi
  40659c:	cmp    DWORD PTR [rdx+0x8],0x0
  4065a0:	jne    40648c <__ctype_b_loc@plt+0x41bc>
  4065a6:	lea    rax,[rip+0x29333]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4065ad:	mov    rcx,QWORD PTR [rax+rcx*8]
  4065b1:	lea    rsi,[rip+0x23880]        # 429e38 <__ctype_b_loc@plt+0x27b68>
  4065b8:	lea    rdx,[rip+0x238b6]        # 429e75 <__ctype_b_loc@plt+0x27ba5>
  4065bf:	mov    rdi,r13
  4065c2:	xor    eax,eax
  4065c4:	mov    rbx,r11
  4065c7:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4065cc:	jmp    4050ef <__ctype_b_loc@plt+0x2e1f>
  4065d1:	vmovsd xmm0,QWORD PTR [rcx]
  4065d5:	vucomisd xmm0,QWORD PTR [rax]
  4065d9:	setae  bl
  4065dc:	jmp    406cf3 <__ctype_b_loc@plt+0x4a23>
  4065e1:	mov    QWORD PTR [rsp+0x48],r11
  4065e6:	mov    r12,QWORD PTR [rax]
  4065e9:	mov    rbx,QWORD PTR [rcx]
  4065ec:	lea    r15,[r12+0x18]
  4065f1:	lea    r14,[rbx+0x18]
  4065f5:	mov    rdi,r15
  4065f8:	mov    rsi,r14
  4065fb:	call   402200 <strcoll@plt>
  406600:	test   eax,eax
  406602:	je     406b33 <__ctype_b_loc@plt+0x4863>
  406608:	test   eax,eax
  40660a:	setle  bl
  40660d:	mov    r11,QWORD PTR [rsp+0x48]
  406612:	jmp    406cf3 <__ctype_b_loc@plt+0x4a23>
  406617:	mov    r15,QWORD PTR [rsp+0x30]
  40661c:	mov    rsi,QWORD PTR [r15]
  40661f:	lea    rsi,[rsi+rdx*8]
  406623:	add    rsi,0xe0
  40662a:	mov    rbx,QWORD PTR [rsi]
  40662d:	lea    r8,[rip+0x234e4]        # 429b18 <__ctype_b_loc@plt+0x27848>
  406634:	test   rbx,rbx
  406637:	je     406688 <__ctype_b_loc@plt+0x43b8>
  406639:	mov    rsi,QWORD PTR [r15]
  40663c:	mov    rdi,QWORD PTR [rsi+0x198]
  406643:	mov    sil,BYTE PTR [rbx+0xb]
  406647:	bzhi   esi,DWORD PTR [rdi+0xc],esi
  40664d:	movsxd rsi,esi
  406650:	lea    rsi,[rsi+rsi*4]
  406654:	shl    rsi,0x3
  406658:	add    rsi,QWORD PTR [rbx+0x20]
  40665c:	cmp    DWORD PTR [rsi+0x18],0x4
  406660:	je     40667f <__ctype_b_loc@plt+0x43af>
  406662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40666c:	nop    DWORD PTR [rax+0x0]
  406670:	mov    rsi,QWORD PTR [rsi+0x20]
  406674:	test   rsi,rsi
  406677:	je     406688 <__ctype_b_loc@plt+0x43b8>
  406679:	cmp    DWORD PTR [rsi+0x18],0x4
  40667d:	jne    406670 <__ctype_b_loc@plt+0x43a0>
  40667f:	cmp    QWORD PTR [rsi+0x10],rdi
  406683:	jne    406670 <__ctype_b_loc@plt+0x43a0>
  406685:	mov    r8,rsi
  406688:	mov    r10d,DWORD PTR [r8+0x8]
  40668c:	test   r10d,r10d
  40668f:	je     406b95 <__ctype_b_loc@plt+0x48c5>
  406695:	cmp    edx,0x7
  406698:	je     4066a3 <__ctype_b_loc@plt+0x43d3>
  40669a:	cmp    edx,0x5
  40669d:	jne    406a8b <__ctype_b_loc@plt+0x47bb>
  4066a3:	mov    rsi,QWORD PTR [rcx]
  4066a6:	add    rsi,0x10
  4066aa:	jmp    406a99 <__ctype_b_loc@plt+0x47c9>
  4066af:	mov    rbx,r10
  4066b2:	xor    ecx,ecx
  4066b4:	mov    rdi,r13
  4066b7:	mov    edx,r15d
  4066ba:	call   40a220 <__ctype_b_loc@plt+0x7f50>
  4066bf:	mov    rsi,QWORD PTR [rsp+0x8]
  4066c4:	mov    r11,QWORD PTR [rsp+0x48]
  4066c9:	mov    r10,rbx
  4066cc:	test   ebp,ebp
  4066ce:	jle    4050f6 <__ctype_b_loc@plt+0x2e26>
  4066d4:	movsxd rbp,ebp
  4066d7:	jmp    4066e9 <__ctype_b_loc@plt+0x4419>
  4066d9:	nop    DWORD PTR [rax+0x0]
  4066e0:	dec    rbp
  4066e3:	jle    4050f6 <__ctype_b_loc@plt+0x2e26>
  4066e9:	mov    ecx,r15d
  4066ec:	mov    rbx,rbp
  4066ef:	shl    rbx,0x4
  4066f3:	add    rbx,r12
  4066f6:	lea    r15d,[rcx-0x1]
  4066fa:	cmp    r15d,DWORD PTR [rsi+0x38]
  4066fe:	jae    406710 <__ctype_b_loc@plt+0x4440>
  406700:	movsxd rax,r15d
  406703:	shl    rax,0x4
  406707:	add    rax,QWORD PTR [rsi+0x18]
  40670b:	jmp    40677c <__ctype_b_loc@plt+0x44ac>
  40670d:	nop    DWORD PTR [rax]
  406710:	vcvtsi2sd xmm0,xmm4,ecx
  406714:	test   ecx,ecx
  406716:	je     406756 <__ctype_b_loc@plt+0x4486>
  406718:	vmovq  rdx,xmm0
  40671d:	mov    rax,rdx
  406720:	shr    rax,0x20
  406724:	add    eax,edx
  406726:	mov    dl,BYTE PTR [rsi+0xb]
  406729:	mov    rdi,0xffffffffffffffff
  406730:	shlx   rdi,rdi,rdx
  406735:	or     rdi,0x1
  406739:	xor    rdi,0xfffffffffffffffe
  40673d:	xor    edx,edx
  40673f:	div    rdi
  406742:	lea    rax,[rdx+rdx*4]
  406746:	shl    rax,0x3
  40674a:	add    rax,QWORD PTR [rsi+0x20]
  40674e:	cmp    DWORD PTR [rax+0x18],0x3
  406752:	jne    406760 <__ctype_b_loc@plt+0x4490>
  406754:	jmp    40676f <__ctype_b_loc@plt+0x449f>
  406756:	mov    rax,QWORD PTR [rsi+0x20]
  40675a:	cmp    DWORD PTR [rax+0x18],0x3
  40675e:	je     40676f <__ctype_b_loc@plt+0x449f>
  406760:	mov    rax,QWORD PTR [rax+0x20]
  406764:	test   rax,rax
  406767:	je     4067a0 <__ctype_b_loc@plt+0x44d0>
  406769:	cmp    DWORD PTR [rax+0x18],0x3
  40676d:	jne    406760 <__ctype_b_loc@plt+0x4490>
  40676f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  406774:	vucomisd xmm1,xmm0
  406778:	jne    406760 <__ctype_b_loc@plt+0x4490>
  40677a:	jp     406760 <__ctype_b_loc@plt+0x4490>
  40677c:	lea    rdx,[rip+0x23395]        # 429b18 <__ctype_b_loc@plt+0x27848>
  406783:	cmp    rax,rdx
  406786:	jne    4067d6 <__ctype_b_loc@plt+0x4506>
  406788:	mov    r14,r12
  40678b:	mov    r12,r10
  40678e:	vcvtsi2sd xmm0,xmm4,ecx
  406792:	jmp    4067a6 <__ctype_b_loc@plt+0x44d6>
  406794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40679e:	xchg   ax,ax
  4067a0:	mov    r14,r12
  4067a3:	mov    r12,r10
  4067a6:	vmovq  QWORD PTR [rsp+0x38],xmm0
  4067ac:	mov    DWORD PTR [rsp+0x40],0x3
  4067b4:	lea    rdx,[rsp+0x38]
  4067b9:	mov    r13,QWORD PTR [rsp+0x10]
  4067be:	mov    rdi,r13
  4067c1:	call   409b60 <__ctype_b_loc@plt+0x7890>
  4067c6:	mov    rsi,QWORD PTR [rsp+0x8]
  4067cb:	mov    r11,QWORD PTR [rsp+0x48]
  4067d0:	mov    r10,r12
  4067d3:	mov    r12,r14
  4067d6:	mov    rcx,QWORD PTR [rbx]
  4067d9:	mov    QWORD PTR [rax],rcx
  4067dc:	mov    ecx,DWORD PTR [rbx+0x8]
  4067df:	mov    DWORD PTR [rax+0x8],ecx
  4067e2:	cmp    DWORD PTR [rbx+0x8],0x4
  4067e6:	jl     4066e0 <__ctype_b_loc@plt+0x4410>
  4067ec:	mov    rax,QWORD PTR [rbx]
  4067ef:	test   BYTE PTR [rax+0x9],0x3
  4067f3:	je     4066e0 <__ctype_b_loc@plt+0x4410>
  4067f9:	mov    al,BYTE PTR [rsi+0x9]
  4067fc:	test   al,0x4
  4067fe:	je     4066e0 <__ctype_b_loc@plt+0x4410>
  406804:	mov    rcx,QWORD PTR [rsp+0x30]
  406809:	mov    rcx,QWORD PTR [rcx]
  40680c:	and    al,0xfb
  40680e:	mov    BYTE PTR [rsi+0x9],al
  406811:	mov    rax,QWORD PTR [rcx+0x40]
  406815:	mov    QWORD PTR [rsi+0x30],rax
  406819:	mov    QWORD PTR [rcx+0x40],rsi
  40681d:	jmp    4066e0 <__ctype_b_loc@plt+0x4410>
  406822:	mov    r12,QWORD PTR [rsp+0x20]
  406827:	mov    rbp,QWORD PTR [rsp+0x8]
  40682c:	jmp    40697b <__ctype_b_loc@plt+0x46ab>
  406831:	mov    eax,DWORD PTR [rax]
  406833:	cmp    eax,DWORD PTR [rcx]
  406835:	sete   sil
  406839:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  40683e:	mov    rsi,QWORD PTR [rax]
  406841:	mov    rdx,QWORD PTR [rcx]
  406844:	cmp    rsi,rdx
  406847:	je     407288 <__ctype_b_loc@plt+0x4fb8>
  40684d:	mov    rbx,QWORD PTR [rsi+0x10]
  406851:	test   rbx,rbx
  406854:	je     40711f <__ctype_b_loc@plt+0x4e4f>
  40685a:	mov    r10b,BYTE PTR [rbx+0xa]
  40685e:	test   r10b,0x10
  406862:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  406868:	mov    r9,QWORD PTR [rdx+0x10]
  40686c:	mov    rdx,QWORD PTR [rdi]
  40686f:	mov    rdi,QWORD PTR [rdx+0x148]
  406876:	mov    esi,DWORD PTR [rdi+0xc]
  406879:	mov    dl,BYTE PTR [rbx+0xb]
  40687c:	bzhi   edx,esi,edx
  406881:	movsxd rdx,edx
  406884:	lea    rdx,[rdx+rdx*4]
  406888:	shl    rdx,0x3
  40688c:	add    rdx,QWORD PTR [rbx+0x20]
  406890:	cmp    DWORD PTR [rdx+0x18],0x4
  406894:	je     4068b3 <__ctype_b_loc@plt+0x45e3>
  406896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068a0:	mov    rdx,QWORD PTR [rdx+0x20]
  4068a4:	test   rdx,rdx
  4068a7:	je     40703c <__ctype_b_loc@plt+0x4d6c>
  4068ad:	cmp    DWORD PTR [rdx+0x18],0x4
  4068b1:	jne    4068a0 <__ctype_b_loc@plt+0x45d0>
  4068b3:	cmp    QWORD PTR [rdx+0x10],rdi
  4068b7:	jne    4068a0 <__ctype_b_loc@plt+0x45d0>
  4068b9:	jmp    407043 <__ctype_b_loc@plt+0x4d73>
  4068be:	vmovsd xmm0,QWORD PTR [rcx]
  4068c2:	vcmpeqsd xmm0,xmm0,QWORD PTR [rax]
  4068c7:	vmovq  rsi,xmm0
  4068cc:	and    esi,0x1
  4068cf:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  4068d4:	mov    rsi,QWORD PTR [rax]
  4068d7:	mov    rdx,QWORD PTR [rcx]
  4068da:	cmp    rsi,rdx
  4068dd:	je     407288 <__ctype_b_loc@plt+0x4fb8>
  4068e3:	mov    rbx,QWORD PTR [rsi+0x10]
  4068e7:	test   rbx,rbx
  4068ea:	je     40711f <__ctype_b_loc@plt+0x4e4f>
  4068f0:	mov    r10b,BYTE PTR [rbx+0xa]
  4068f4:	test   r10b,0x10
  4068f8:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  4068fe:	mov    r9,QWORD PTR [rdx+0x10]
  406902:	mov    rdx,QWORD PTR [rdi]
  406905:	mov    rdi,QWORD PTR [rdx+0x148]
  40690c:	mov    esi,DWORD PTR [rdi+0xc]
  40690f:	mov    dl,BYTE PTR [rbx+0xb]
  406912:	bzhi   edx,esi,edx
  406917:	movsxd rdx,edx
  40691a:	lea    rdx,[rdx+rdx*4]
  40691e:	shl    rdx,0x3
  406922:	add    rdx,QWORD PTR [rbx+0x20]
  406926:	cmp    DWORD PTR [rdx+0x18],0x4
  40692a:	je     406943 <__ctype_b_loc@plt+0x4673>
  40692c:	nop    DWORD PTR [rax+0x0]
  406930:	mov    rdx,QWORD PTR [rdx+0x20]
  406934:	test   rdx,rdx
  406937:	je     4070b5 <__ctype_b_loc@plt+0x4de5>
  40693d:	cmp    DWORD PTR [rdx+0x18],0x4
  406941:	jne    406930 <__ctype_b_loc@plt+0x4660>
  406943:	cmp    QWORD PTR [rdx+0x10],rdi
  406947:	jne    406930 <__ctype_b_loc@plt+0x4660>
  406949:	jmp    4070bc <__ctype_b_loc@plt+0x4dec>
  40694e:	inc    rbp
  406951:	mov    r12,QWORD PTR [rsp+0x20]
  406956:	vmovapd xmm0,XMMWORD PTR [rsp+0x60]
  40695c:	nop    DWORD PTR [rax+0x0]
  406960:	movzx  ecx,BYTE PTR [rbp+0x0]
  406964:	inc    rbp
  406967:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40696c:	jne    406960 <__ctype_b_loc@plt+0x4690>
  40696e:	test   cl,cl
  406970:	mov    rbp,QWORD PTR [rsp+0x8]
  406975:	jne    4057d2 <__ctype_b_loc@plt+0x3502>
  40697b:	vmovsd QWORD PTR [r12],xmm0
  406981:	mov    DWORD PTR [rbp+0x0],0x3
  406988:	mov    r11,r15
  40698b:	mov    r10,QWORD PTR [rsp+0x28]
  406990:	mov    eax,DWORD PTR [r12+0x18]
  406995:	cmp    eax,0x3
  406998:	je     406d63 <__ctype_b_loc@plt+0x4a93>
  40699e:	mov    r15,r11
  4069a1:	cmp    eax,0x4
  4069a4:	jne    406a45 <__ctype_b_loc@plt+0x4775>
  4069aa:	mov    QWORD PTR [rsp+0x8],rbp
  4069af:	mov    r14,QWORD PTR [r12+0x10]
  4069b4:	add    r14,0x18
  4069b8:	lea    rsi,[rsp+0x38]
  4069bd:	mov    rdi,r14
  4069c0:	call   4020b0 <strtod@plt>
  4069c5:	mov    rbp,QWORD PTR [rsp+0x38]
  4069ca:	cmp    rbp,r14
  4069cd:	je     406a40 <__ctype_b_loc@plt+0x4770>
  4069cf:	mov    QWORD PTR [rsp+0x20],r12
  4069d4:	mov    r12b,BYTE PTR [rbp+0x0]
  4069d8:	mov    eax,r12d
  4069db:	or     al,0x20
  4069dd:	cmp    al,0x78
  4069df:	jne    406a15 <__ctype_b_loc@plt+0x4745>
  4069e1:	lea    rsi,[rsp+0x38]
  4069e6:	mov    rdi,r14
  4069e9:	mov    edx,0x10
  4069ee:	call   402250 <strtoul@plt>
  4069f3:	vmovq  xmm0,rax
  4069f8:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x23270]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  406a00:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x23278]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  406a08:	vhaddpd xmm0,xmm0,xmm0
  406a0c:	mov    rbp,QWORD PTR [rsp+0x38]
  406a11:	mov    r12b,BYTE PTR [rbp+0x0]
  406a15:	test   r12b,r12b
  406a18:	je     406cb4 <__ctype_b_loc@plt+0x49e4>
  406a1e:	vmovapd XMMWORD PTR [rsp+0x60],xmm0
  406a24:	call   4022d0 <__ctype_b_loc@plt>
  406a29:	mov    rax,QWORD PTR [rax]
  406a2c:	movzx  ecx,r12b
  406a30:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406a35:	jne    406d18 <__ctype_b_loc@plt+0x4a48>
  406a3b:	mov    r12,QWORD PTR [rsp+0x20]
  406a40:	mov    rbp,QWORD PTR [rsp+0x8]
  406a45:	lea    rsi,[rip+0x2345c]        # 429ea8 <__ctype_b_loc@plt+0x27bd8>
  406a4c:	mov    rdi,r13
  406a4f:	xor    eax,eax
  406a51:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  406a56:	mov    r11,r15
  406a59:	mov    r10,QWORD PTR [rsp+0x28]
  406a5e:	vmovsd xmm0,QWORD PTR [r12]
  406a64:	vsubsd xmm0,xmm0,QWORD PTR [r12+0x20]
  406a6b:	vmovsd QWORD PTR [r12],xmm0
  406a71:	mov    DWORD PTR [rbp+0x0],0x3
  406a78:	shr    ebx,0xe
  406a7b:	lea    r11,[r11+rbx*4]
  406a7f:	add    r11,0xfffffffffff80004
  406a86:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  406a8b:	mov    rsi,QWORD PTR [r15]
  406a8e:	lea    rsi,[rsi+rdx*8]
  406a92:	add    rsi,0xe0
  406a99:	mov    rdi,QWORD PTR [rsi]
  406a9c:	lea    r9,[rip+0x23075]        # 429b18 <__ctype_b_loc@plt+0x27848>
  406aa3:	test   rdi,rdi
  406aa6:	je     406ae8 <__ctype_b_loc@plt+0x4818>
  406aa8:	mov    rsi,QWORD PTR [r15]
  406aab:	mov    rsi,QWORD PTR [rsi+0x198]
  406ab2:	mov    bl,BYTE PTR [rdi+0xb]
  406ab5:	bzhi   ebx,DWORD PTR [rsi+0xc],ebx
  406abb:	movsxd rbx,ebx
  406abe:	lea    rbx,[rbx+rbx*4]
  406ac2:	shl    rbx,0x3
  406ac6:	add    rbx,QWORD PTR [rdi+0x20]
  406aca:	cmp    DWORD PTR [rbx+0x18],0x4
  406ace:	je     406adf <__ctype_b_loc@plt+0x480f>
  406ad0:	mov    rbx,QWORD PTR [rbx+0x20]
  406ad4:	test   rbx,rbx
  406ad7:	je     406ae8 <__ctype_b_loc@plt+0x4818>
  406ad9:	cmp    DWORD PTR [rbx+0x18],0x4
  406add:	jne    406ad0 <__ctype_b_loc@plt+0x4800>
  406adf:	cmp    QWORD PTR [rbx+0x10],rsi
  406ae3:	jne    406ad0 <__ctype_b_loc@plt+0x4800>
  406ae5:	mov    r9,rbx
  406ae8:	cmp    r10d,DWORD PTR [r9+0x8]
  406aec:	jne    406b95 <__ctype_b_loc@plt+0x48c5>
  406af2:	cmp    r10d,0x3
  406af6:	ja     406b89 <__ctype_b_loc@plt+0x48b9>
  406afc:	mov    esi,r10d
  406aff:	lea    rdi,[rip+0x22612]        # 429118 <__ctype_b_loc@plt+0x26e48>
  406b06:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  406b0a:	add    rsi,rdi
  406b0d:	jmp    rsi
  406b0f:	mov    esi,DWORD PTR [r8]
  406b12:	cmp    esi,DWORD PTR [r9]
  406b15:	jne    406b95 <__ctype_b_loc@plt+0x48c5>
  406b1b:	jmp    406e7c <__ctype_b_loc@plt+0x4bac>
  406b20:	and    cl,0xf8
  406b23:	mov    dl,BYTE PTR [rdi+0x20]
  406b26:	and    dl,0x3
  406b29:	or     dl,cl
  406b2b:	mov    BYTE PTR [rax+0x9],dl
  406b2e:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  406b33:	mov    rbx,QWORD PTR [rbx+0x10]
  406b37:	mov    r12,QWORD PTR [r12+0x10]
  406b3c:	nop    DWORD PTR [rax+0x0]
  406b40:	mov    rdi,r15
  406b43:	call   4020e0 <strlen@plt>
  406b48:	mov    rcx,rax
  406b4b:	cmp    rax,rbx
  406b4e:	je     407025 <__ctype_b_loc@plt+0x4d55>
  406b54:	cmp    rcx,r12
  406b57:	je     407032 <__ctype_b_loc@plt+0x4d62>
  406b5d:	lea    rax,[rcx+0x1]
  406b61:	add    r15,rcx
  406b64:	add    r15,0x1
  406b68:	sub    r12,rax
  406b6b:	add    r14,rcx
  406b6e:	add    r14,0x1
  406b72:	sub    rbx,rax
  406b75:	mov    rdi,r15
  406b78:	mov    rsi,r14
  406b7b:	call   402200 <strcoll@plt>
  406b80:	test   eax,eax
  406b82:	je     406b40 <__ctype_b_loc@plt+0x4870>
  406b84:	jmp    406608 <__ctype_b_loc@plt+0x4338>
  406b89:	mov    rsi,QWORD PTR [r8]
  406b8c:	cmp    rsi,QWORD PTR [r9]
  406b8f:	je     406e7c <__ctype_b_loc@plt+0x4bac>
  406b95:	cmp    edx,0x7
  406b98:	je     406b9f <__ctype_b_loc@plt+0x48cf>
  406b9a:	cmp    edx,0x5
  406b9d:	jne    406ba8 <__ctype_b_loc@plt+0x48d8>
  406b9f:	mov    rsi,QWORD PTR [rcx]
  406ba2:	add    rsi,0x10
  406ba6:	jmp    406bb6 <__ctype_b_loc@plt+0x48e6>
  406ba8:	mov    rsi,QWORD PTR [r15]
  406bab:	lea    rsi,[rsi+rdx*8]
  406baf:	add    rsi,0xe0
  406bb6:	mov    rbx,QWORD PTR [rsi]
  406bb9:	lea    r8,[rip+0x22f58]        # 429b18 <__ctype_b_loc@plt+0x27848>
  406bc0:	test   rbx,rbx
  406bc3:	je     406c08 <__ctype_b_loc@plt+0x4938>
  406bc5:	mov    rsi,QWORD PTR [r15]
  406bc8:	mov    rdi,QWORD PTR [rsi+0x190]
  406bcf:	mov    sil,BYTE PTR [rbx+0xb]
  406bd3:	bzhi   esi,DWORD PTR [rdi+0xc],esi
  406bd9:	movsxd rsi,esi
  406bdc:	lea    rsi,[rsi+rsi*4]
  406be0:	shl    rsi,0x3
  406be4:	add    rsi,QWORD PTR [rbx+0x20]
  406be8:	cmp    DWORD PTR [rsi+0x18],0x4
  406bec:	je     406bff <__ctype_b_loc@plt+0x492f>
  406bee:	xchg   ax,ax
  406bf0:	mov    rsi,QWORD PTR [rsi+0x20]
  406bf4:	test   rsi,rsi
  406bf7:	je     406c08 <__ctype_b_loc@plt+0x4938>
  406bf9:	cmp    DWORD PTR [rsi+0x18],0x4
  406bfd:	jne    406bf0 <__ctype_b_loc@plt+0x4920>
  406bff:	cmp    QWORD PTR [rsi+0x10],rdi
  406c03:	jne    406bf0 <__ctype_b_loc@plt+0x4920>
  406c05:	mov    r8,rsi
  406c08:	mov    r10d,DWORD PTR [r8+0x8]
  406c0c:	test   r10d,r10d
  406c0f:	je     406ccf <__ctype_b_loc@plt+0x49ff>
  406c15:	cmp    edx,0x7
  406c18:	je     406c1f <__ctype_b_loc@plt+0x494f>
  406c1a:	cmp    edx,0x5
  406c1d:	jne    406c28 <__ctype_b_loc@plt+0x4958>
  406c1f:	mov    rsi,QWORD PTR [rax]
  406c22:	add    rsi,0x10
  406c26:	jmp    406c36 <__ctype_b_loc@plt+0x4966>
  406c28:	mov    rsi,QWORD PTR [r15]
  406c2b:	lea    rsi,[rsi+rdx*8]
  406c2f:	add    rsi,0xe0
  406c36:	mov    rdi,QWORD PTR [rsi]
  406c39:	lea    r9,[rip+0x22ed8]        # 429b18 <__ctype_b_loc@plt+0x27848>
  406c40:	test   rdi,rdi
  406c43:	je     406c88 <__ctype_b_loc@plt+0x49b8>
  406c45:	mov    rsi,QWORD PTR [r15]
  406c48:	mov    rsi,QWORD PTR [rsi+0x190]
  406c4f:	mov    bl,BYTE PTR [rdi+0xb]
  406c52:	bzhi   ebx,DWORD PTR [rsi+0xc],ebx
  406c58:	movsxd rbx,ebx
  406c5b:	lea    rbx,[rbx+rbx*4]
  406c5f:	shl    rbx,0x3
  406c63:	add    rbx,QWORD PTR [rdi+0x20]
  406c67:	cmp    DWORD PTR [rbx+0x18],0x4
  406c6b:	je     406c7f <__ctype_b_loc@plt+0x49af>
  406c6d:	nop    DWORD PTR [rax]
  406c70:	mov    rbx,QWORD PTR [rbx+0x20]
  406c74:	test   rbx,rbx
  406c77:	je     406c88 <__ctype_b_loc@plt+0x49b8>
  406c79:	cmp    DWORD PTR [rbx+0x18],0x4
  406c7d:	jne    406c70 <__ctype_b_loc@plt+0x49a0>
  406c7f:	cmp    QWORD PTR [rbx+0x10],rsi
  406c83:	jne    406c70 <__ctype_b_loc@plt+0x49a0>
  406c85:	mov    r9,rbx
  406c88:	cmp    r10d,DWORD PTR [r9+0x8]
  406c8c:	jne    406ccf <__ctype_b_loc@plt+0x49ff>
  406c8e:	cmp    r10d,0x3
  406c92:	ja     406cc3 <__ctype_b_loc@plt+0x49f3>
  406c94:	mov    esi,r10d
  406c97:	lea    rdi,[rip+0x2248a]        # 429128 <__ctype_b_loc@plt+0x26e58>
  406c9e:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  406ca2:	add    rsi,rdi
  406ca5:	jmp    rsi
  406ca7:	mov    esi,DWORD PTR [r8]
  406caa:	cmp    esi,DWORD PTR [r9]
  406cad:	jne    406ccf <__ctype_b_loc@plt+0x49ff>
  406caf:	jmp    406f59 <__ctype_b_loc@plt+0x4c89>
  406cb4:	mov    r12,QWORD PTR [rsp+0x20]
  406cb9:	mov    rbp,QWORD PTR [rsp+0x8]
  406cbe:	jmp    406d4b <__ctype_b_loc@plt+0x4a7b>
  406cc3:	mov    rsi,QWORD PTR [r8]
  406cc6:	cmp    rsi,QWORD PTR [r9]
  406cc9:	je     406f59 <__ctype_b_loc@plt+0x4c89>
  406ccf:	lea    rax,[rip+0x28c0a]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  406cd6:	mov    rdx,QWORD PTR [rax+rdx*8]
  406cda:	lea    rsi,[rip+0x2325e]        # 429f3f <__ctype_b_loc@plt+0x27c6f>
  406ce1:	xor    ebx,ebx
  406ce3:	mov    rdi,r13
  406ce6:	xor    eax,eax
  406ce8:	mov    r14,r11
  406ceb:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  406cf0:	mov    r11,r14
  406cf3:	movzx  eax,bl
  406cf6:	cmp    ebp,eax
  406cf8:	jne    406d0b <__ctype_b_loc@plt+0x4a3b>
  406cfa:	mov    eax,DWORD PTR [r11]
  406cfd:	shr    eax,0xe
  406d00:	lea    r11,[r11+rax*4]
  406d04:	add    r11,0xfffffffffff80004
  406d0b:	mov    r10,QWORD PTR [r13+0x18]
  406d0f:	add    r11,0x4
  406d13:	jmp    4050f6 <__ctype_b_loc@plt+0x2e26>
  406d18:	inc    rbp
  406d1b:	mov    r12,QWORD PTR [rsp+0x20]
  406d20:	vmovapd xmm0,XMMWORD PTR [rsp+0x60]
  406d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d30:	movzx  ecx,BYTE PTR [rbp+0x0]
  406d34:	inc    rbp
  406d37:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406d3c:	jne    406d30 <__ctype_b_loc@plt+0x4a60>
  406d3e:	test   cl,cl
  406d40:	mov    rbp,QWORD PTR [rsp+0x8]
  406d45:	jne    406a45 <__ctype_b_loc@plt+0x4775>
  406d4b:	vmovsd QWORD PTR [r12+0x10],xmm0
  406d52:	mov    DWORD PTR [r12+0x18],0x3
  406d5b:	mov    r11,r15
  406d5e:	mov    r10,QWORD PTR [rsp+0x28]
  406d63:	mov    eax,DWORD PTR [r12+0x28]
  406d68:	cmp    eax,0x3
  406d6b:	je     406a5e <__ctype_b_loc@plt+0x478e>
  406d71:	mov    QWORD PTR [rsp+0x8],rbp
  406d76:	cmp    eax,0x4
  406d79:	jne    407508 <__ctype_b_loc@plt+0x5238>
  406d7f:	mov    r15,r11
  406d82:	mov    QWORD PTR [rsp+0x20],r12
  406d87:	mov    r14,QWORD PTR [r12+0x20]
  406d8c:	add    r14,0x18
  406d90:	lea    rsi,[rsp+0x38]
  406d95:	mov    rdi,r14
  406d98:	call   4020b0 <strtod@plt>
  406d9d:	mov    rbp,QWORD PTR [rsp+0x38]
  406da2:	cmp    rbp,r14
  406da5:	je     407508 <__ctype_b_loc@plt+0x5238>
  406dab:	mov    r12b,BYTE PTR [rbp+0x0]
  406daf:	mov    eax,r12d
  406db2:	or     al,0x20
  406db4:	cmp    al,0x78
  406db6:	jne    406dec <__ctype_b_loc@plt+0x4b1c>
  406db8:	lea    rsi,[rsp+0x38]
  406dbd:	mov    rdi,r14
  406dc0:	mov    edx,0x10
  406dc5:	call   402250 <strtoul@plt>
  406dca:	vmovq  xmm0,rax
  406dcf:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x22e99]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  406dd7:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x22ea1]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  406ddf:	vhaddpd xmm0,xmm0,xmm0
  406de3:	mov    rbp,QWORD PTR [rsp+0x38]
  406de8:	mov    r12b,BYTE PTR [rbp+0x0]
  406dec:	mov    r11,r15
  406def:	mov    r10,QWORD PTR [rsp+0x28]
  406df4:	test   r12b,r12b
  406df7:	je     406e47 <__ctype_b_loc@plt+0x4b77>
  406df9:	vmovapd XMMWORD PTR [rsp+0x60],xmm0
  406dff:	call   4022d0 <__ctype_b_loc@plt>
  406e04:	mov    rax,QWORD PTR [rax]
  406e07:	movzx  ecx,r12b
  406e0b:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406e10:	je     407508 <__ctype_b_loc@plt+0x5238>
  406e16:	inc    rbp
  406e19:	mov    r11,r15
  406e1c:	mov    r10,QWORD PTR [rsp+0x28]
  406e21:	mov    r12,QWORD PTR [rsp+0x20]
  406e26:	vmovapd xmm0,XMMWORD PTR [rsp+0x60]
  406e2c:	nop    DWORD PTR [rax+0x0]
  406e30:	movzx  ecx,BYTE PTR [rbp+0x0]
  406e34:	inc    rbp
  406e37:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406e3c:	jne    406e30 <__ctype_b_loc@plt+0x4b60>
  406e3e:	test   cl,cl
  406e40:	je     406e4c <__ctype_b_loc@plt+0x4b7c>
  406e42:	jmp    407508 <__ctype_b_loc@plt+0x5238>
  406e47:	mov    r12,QWORD PTR [rsp+0x20]
  406e4c:	vmovsd QWORD PTR [r12+0x20],xmm0
  406e53:	mov    DWORD PTR [r12+0x28],0x3
  406e5c:	mov    rbp,QWORD PTR [rsp+0x8]
  406e61:	jmp    406a5e <__ctype_b_loc@plt+0x478e>
  406e66:	vmovsd xmm0,QWORD PTR [r8]
  406e6b:	vucomisd xmm0,QWORD PTR [r9]
  406e70:	jne    406b95 <__ctype_b_loc@plt+0x48c5>
  406e76:	jp     406b95 <__ctype_b_loc@plt+0x48c5>
  406e7c:	mov    r14,r11
  406e7f:	mov    rdx,QWORD PTR [r13+0x10]
  406e83:	mov    rbx,rdx
  406e86:	sub    rbx,QWORD PTR [r13+0x40]
  406e8a:	mov    rsi,QWORD PTR [r8]
  406e8d:	mov    QWORD PTR [rdx],rsi
  406e90:	mov    esi,DWORD PTR [r8+0x8]
  406e94:	mov    DWORD PTR [rdx+0x8],esi
  406e97:	mov    rdx,QWORD PTR [r13+0x10]
  406e9b:	mov    rsi,QWORD PTR [rax]
  406e9e:	mov    QWORD PTR [rdx+0x10],rsi
  406ea2:	mov    eax,DWORD PTR [rax+0x8]
  406ea5:	mov    DWORD PTR [rdx+0x18],eax
  406ea8:	mov    rax,QWORD PTR [r13+0x10]
  406eac:	mov    rdx,QWORD PTR [rcx]
  406eaf:	mov    QWORD PTR [rax+0x20],rdx
  406eb3:	mov    ecx,DWORD PTR [rcx+0x8]
  406eb6:	mov    DWORD PTR [rax+0x28],ecx
  406eb9:	mov    rax,QWORD PTR [r13+0x38]
  406ebd:	sub    rax,QWORD PTR [r13+0x10]
  406ec1:	cmp    rax,0x30
  406ec5:	jg     406edf <__ctype_b_loc@plt+0x4c0f>
  406ec7:	mov    eax,DWORD PTR [r13+0x58]
  406ecb:	lea    ecx,[rax+0x3]
  406ece:	lea    esi,[rax+rax*1]
  406ed1:	cmp    eax,0x3
  406ed4:	cmovl  esi,ecx
  406ed7:	mov    rdi,r13
  406eda:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  406edf:	mov    rsi,QWORD PTR [r13+0x10]
  406ee3:	lea    rax,[rsi+0x30]
  406ee7:	mov    QWORD PTR [r13+0x10],rax
  406eeb:	mov    rdi,r13
  406eee:	mov    edx,0x1
  406ef3:	call   405020 <__ctype_b_loc@plt+0x2d50>
  406ef8:	mov    rax,QWORD PTR [r13+0x10]
  406efc:	mov    rcx,QWORD PTR [r13+0x40]
  406f00:	lea    rdx,[rax-0x10]
  406f04:	mov    QWORD PTR [r13+0x10],rdx
  406f08:	mov    rdx,QWORD PTR [rax-0x10]
  406f0c:	mov    QWORD PTR [rcx+rbx*1],rdx
  406f10:	mov    eax,DWORD PTR [rax-0x8]
  406f13:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  406f17:	mov    rax,QWORD PTR [r13+0x10]
  406f1b:	mov    ecx,DWORD PTR [rax+0x8]
  406f1e:	test   ecx,ecx
  406f20:	je     406f35 <__ctype_b_loc@plt+0x4c65>
  406f22:	cmp    ecx,0x1
  406f25:	mov    r11,r14
  406f28:	jne    406f3c <__ctype_b_loc@plt+0x4c6c>
  406f2a:	cmp    DWORD PTR [rax],0x0
  406f2d:	setne  bl
  406f30:	jmp    406cf3 <__ctype_b_loc@plt+0x4a23>
  406f35:	xor    ebx,ebx
  406f37:	jmp    406cf0 <__ctype_b_loc@plt+0x4a20>
  406f3c:	mov    bl,0x1
  406f3e:	jmp    406cf3 <__ctype_b_loc@plt+0x4a23>
  406f43:	vmovsd xmm0,QWORD PTR [r8]
  406f48:	vucomisd xmm0,QWORD PTR [r9]
  406f4d:	jne    406ccf <__ctype_b_loc@plt+0x49ff>
  406f53:	jp     406ccf <__ctype_b_loc@plt+0x49ff>
  406f59:	mov    r14,r11
  406f5c:	mov    rdx,QWORD PTR [r13+0x10]
  406f60:	mov    rbx,rdx
  406f63:	sub    rbx,QWORD PTR [r13+0x40]
  406f67:	mov    rsi,QWORD PTR [r8]
  406f6a:	mov    QWORD PTR [rdx],rsi
  406f6d:	mov    esi,DWORD PTR [r8+0x8]
  406f71:	mov    DWORD PTR [rdx+0x8],esi
  406f74:	mov    rdx,QWORD PTR [r13+0x10]
  406f78:	mov    rsi,QWORD PTR [rcx]
  406f7b:	mov    QWORD PTR [rdx+0x10],rsi
  406f7f:	mov    ecx,DWORD PTR [rcx+0x8]
  406f82:	mov    DWORD PTR [rdx+0x18],ecx
  406f85:	mov    rcx,QWORD PTR [r13+0x10]
  406f89:	mov    rdx,QWORD PTR [rax]
  406f8c:	mov    QWORD PTR [rcx+0x20],rdx
  406f90:	mov    eax,DWORD PTR [rax+0x8]
  406f93:	mov    DWORD PTR [rcx+0x28],eax
  406f96:	mov    rax,QWORD PTR [r13+0x38]
  406f9a:	sub    rax,QWORD PTR [r13+0x10]
  406f9e:	cmp    rax,0x30
  406fa2:	jg     406fbc <__ctype_b_loc@plt+0x4cec>
  406fa4:	mov    eax,DWORD PTR [r13+0x58]
  406fa8:	lea    ecx,[rax+0x3]
  406fab:	lea    esi,[rax+rax*1]
  406fae:	cmp    eax,0x3
  406fb1:	cmovl  esi,ecx
  406fb4:	mov    rdi,r13
  406fb7:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  406fbc:	mov    rsi,QWORD PTR [r13+0x10]
  406fc0:	lea    rax,[rsi+0x30]
  406fc4:	mov    QWORD PTR [r13+0x10],rax
  406fc8:	mov    rdi,r13
  406fcb:	mov    edx,0x1
  406fd0:	call   405020 <__ctype_b_loc@plt+0x2d50>
  406fd5:	mov    rax,QWORD PTR [r13+0x10]
  406fd9:	mov    rcx,QWORD PTR [r13+0x40]
  406fdd:	lea    rdx,[rax-0x10]
  406fe1:	mov    QWORD PTR [r13+0x10],rdx
  406fe5:	mov    rdx,QWORD PTR [rax-0x10]
  406fe9:	mov    QWORD PTR [rcx+rbx*1],rdx
  406fed:	mov    eax,DWORD PTR [rax-0x8]
  406ff0:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  406ff4:	mov    rcx,QWORD PTR [r13+0x10]
  406ff8:	mov    eax,DWORD PTR [rcx+0x8]
  406ffb:	test   eax,eax
  406ffd:	je     407011 <__ctype_b_loc@plt+0x4d41>
  406fff:	cmp    eax,0x1
  407002:	mov    r11,r14
  407005:	jne    407016 <__ctype_b_loc@plt+0x4d46>
  407007:	xor    eax,eax
  407009:	cmp    DWORD PTR [rcx],0x0
  40700c:	setne  al
  40700f:	jmp    40701b <__ctype_b_loc@plt+0x4d4b>
  407011:	mov    r11,r14
  407014:	jmp    40701b <__ctype_b_loc@plt+0x4d4b>
  407016:	mov    eax,0x1
  40701b:	test   eax,eax
  40701d:	sete   bl
  407020:	jmp    406cf3 <__ctype_b_loc@plt+0x4a23>
  407025:	xor    eax,eax
  407027:	cmp    rcx,r12
  40702a:	setne  al
  40702d:	jmp    406608 <__ctype_b_loc@plt+0x4338>
  407032:	mov    eax,0xffffffff
  407037:	jmp    406608 <__ctype_b_loc@plt+0x4338>
  40703c:	lea    rdx,[rip+0x22ad5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  407043:	mov    r8d,DWORD PTR [rdx+0x8]
  407047:	test   r8d,r8d
  40704a:	je     407117 <__ctype_b_loc@plt+0x4e47>
  407050:	test   rdx,rdx
  407053:	je     40711f <__ctype_b_loc@plt+0x4e4f>
  407059:	cmp    rbx,r9
  40705c:	je     4071cf <__ctype_b_loc@plt+0x4eff>
  407062:	test   r9,r9
  407065:	je     40711f <__ctype_b_loc@plt+0x4e4f>
  40706b:	mov    r10b,BYTE PTR [r9+0xa]
  40706f:	test   r10b,0x10
  407073:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  407079:	mov    bl,BYTE PTR [r9+0xb]
  40707d:	bzhi   esi,esi,ebx
  407082:	movsxd rsi,esi
  407085:	lea    rbx,[rsi+rsi*4]
  407089:	shl    rbx,0x3
  40708d:	add    rbx,QWORD PTR [r9+0x20]
  407091:	cmp    DWORD PTR [rbx+0x18],0x4
  407095:	je     4070aa <__ctype_b_loc@plt+0x4dda>
  407097:	mov    rbx,QWORD PTR [rbx+0x20]
  40709b:	test   rbx,rbx
  40709e:	je     407132 <__ctype_b_loc@plt+0x4e62>
  4070a4:	cmp    DWORD PTR [rbx+0x18],0x4
  4070a8:	jne    407097 <__ctype_b_loc@plt+0x4dc7>
  4070aa:	cmp    QWORD PTR [rbx+0x10],rdi
  4070ae:	jne    407097 <__ctype_b_loc@plt+0x4dc7>
  4070b0:	jmp    407139 <__ctype_b_loc@plt+0x4e69>
  4070b5:	lea    rdx,[rip+0x22a5c]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4070bc:	mov    r8d,DWORD PTR [rdx+0x8]
  4070c0:	test   r8d,r8d
  4070c3:	je     407117 <__ctype_b_loc@plt+0x4e47>
  4070c5:	test   rdx,rdx
  4070c8:	je     40711f <__ctype_b_loc@plt+0x4e4f>
  4070ca:	cmp    rbx,r9
  4070cd:	je     4071cf <__ctype_b_loc@plt+0x4eff>
  4070d3:	test   r9,r9
  4070d6:	je     40711f <__ctype_b_loc@plt+0x4e4f>
  4070d8:	mov    r10b,BYTE PTR [r9+0xa]
  4070dc:	test   r10b,0x10
  4070e0:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  4070e2:	mov    bl,BYTE PTR [r9+0xb]
  4070e6:	bzhi   esi,esi,ebx
  4070eb:	movsxd rsi,esi
  4070ee:	lea    rbx,[rsi+rsi*4]
  4070f2:	shl    rbx,0x3
  4070f6:	add    rbx,QWORD PTR [r9+0x20]
  4070fa:	cmp    DWORD PTR [rbx+0x18],0x4
  4070fe:	je     40710f <__ctype_b_loc@plt+0x4e3f>
  407100:	mov    rbx,QWORD PTR [rbx+0x20]
  407104:	test   rbx,rbx
  407107:	je     407165 <__ctype_b_loc@plt+0x4e95>
  407109:	cmp    DWORD PTR [rbx+0x18],0x4
  40710d:	jne    407100 <__ctype_b_loc@plt+0x4e30>
  40710f:	cmp    QWORD PTR [rbx+0x10],rdi
  407113:	jne    407100 <__ctype_b_loc@plt+0x4e30>
  407115:	jmp    40716c <__ctype_b_loc@plt+0x4e9c>
  407117:	or     r10b,0x10
  40711b:	mov    BYTE PTR [rbx+0xa],r10b
  40711f:	xor    esi,esi
  407121:	movzx  eax,sil
  407125:	cmp    ebp,eax
  407127:	jne    406d0b <__ctype_b_loc@plt+0x4a3b>
  40712d:	jmp    406cfa <__ctype_b_loc@plt+0x4a2a>
  407132:	lea    rbx,[rip+0x229df]        # 429b18 <__ctype_b_loc@plt+0x27848>
  407139:	mov    edi,DWORD PTR [rbx+0x8]
  40713c:	test   edi,edi
  40713e:	je     4071a0 <__ctype_b_loc@plt+0x4ed0>
  407140:	xor    esi,esi
  407142:	test   rbx,rbx
  407145:	je     407121 <__ctype_b_loc@plt+0x4e51>
  407147:	cmp    r8d,edi
  40714a:	jne    407121 <__ctype_b_loc@plt+0x4e51>
  40714c:	cmp    r8d,0x3
  407150:	ja     4071ad <__ctype_b_loc@plt+0x4edd>
  407152:	mov    esi,r8d
  407155:	lea    rdi,[rip+0x2200c]        # 429168 <__ctype_b_loc@plt+0x26e98>
  40715c:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  407160:	add    rsi,rdi
  407163:	jmp    rsi
  407165:	lea    rbx,[rip+0x229ac]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40716c:	mov    edi,DWORD PTR [rbx+0x8]
  40716f:	test   edi,edi
  407171:	je     4071a0 <__ctype_b_loc@plt+0x4ed0>
  407173:	xor    esi,esi
  407175:	test   rbx,rbx
  407178:	je     407121 <__ctype_b_loc@plt+0x4e51>
  40717a:	cmp    r8d,edi
  40717d:	jne    407121 <__ctype_b_loc@plt+0x4e51>
  40717f:	cmp    r8d,0x3
  407183:	ja     4071ad <__ctype_b_loc@plt+0x4edd>
  407185:	mov    esi,r8d
  407188:	lea    rdi,[rip+0x21fc9]        # 429158 <__ctype_b_loc@plt+0x26e88>
  40718f:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  407193:	add    rsi,rdi
  407196:	jmp    rsi
  407198:	mov    esi,DWORD PTR [rdx]
  40719a:	cmp    esi,DWORD PTR [rbx]
  40719c:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  40719e:	jmp    4071cf <__ctype_b_loc@plt+0x4eff>
  4071a0:	or     r10b,0x10
  4071a4:	mov    BYTE PTR [r9+0xa],r10b
  4071a8:	jmp    40711f <__ctype_b_loc@plt+0x4e4f>
  4071ad:	mov    rsi,QWORD PTR [rdx]
  4071b0:	cmp    rsi,QWORD PTR [rbx]
  4071b3:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  4071b9:	jmp    4071cf <__ctype_b_loc@plt+0x4eff>
  4071bb:	vmovsd xmm0,QWORD PTR [rdx]
  4071bf:	vucomisd xmm0,QWORD PTR [rbx]
  4071c3:	jne    40711f <__ctype_b_loc@plt+0x4e4f>
  4071c9:	jp     40711f <__ctype_b_loc@plt+0x4e4f>
  4071cf:	mov    r14,r11
  4071d2:	mov    rsi,QWORD PTR [r13+0x10]
  4071d6:	mov    rbx,rsi
  4071d9:	sub    rbx,QWORD PTR [r13+0x40]
  4071dd:	mov    rdi,QWORD PTR [rdx]
  4071e0:	mov    QWORD PTR [rsi],rdi
  4071e3:	mov    edx,DWORD PTR [rdx+0x8]
  4071e6:	mov    DWORD PTR [rsi+0x8],edx
  4071e9:	mov    rdx,QWORD PTR [r13+0x10]
  4071ed:	mov    rsi,QWORD PTR [rax]
  4071f0:	mov    QWORD PTR [rdx+0x10],rsi
  4071f4:	mov    eax,DWORD PTR [rax+0x8]
  4071f7:	mov    DWORD PTR [rdx+0x18],eax
  4071fa:	mov    rax,QWORD PTR [r13+0x10]
  4071fe:	mov    rdx,QWORD PTR [rcx]
  407201:	mov    QWORD PTR [rax+0x20],rdx
  407205:	mov    ecx,DWORD PTR [rcx+0x8]
  407208:	mov    DWORD PTR [rax+0x28],ecx
  40720b:	mov    rax,QWORD PTR [r13+0x38]
  40720f:	sub    rax,QWORD PTR [r13+0x10]
  407213:	cmp    rax,0x30
  407217:	jg     407231 <__ctype_b_loc@plt+0x4f61>
  407219:	mov    eax,DWORD PTR [r13+0x58]
  40721d:	lea    ecx,[rax+0x3]
  407220:	lea    esi,[rax+rax*1]
  407223:	cmp    eax,0x3
  407226:	cmovl  esi,ecx
  407229:	mov    rdi,r13
  40722c:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  407231:	mov    rsi,QWORD PTR [r13+0x10]
  407235:	lea    rax,[rsi+0x30]
  407239:	mov    QWORD PTR [r13+0x10],rax
  40723d:	mov    rdi,r13
  407240:	mov    edx,0x1
  407245:	call   405020 <__ctype_b_loc@plt+0x2d50>
  40724a:	mov    rax,QWORD PTR [r13+0x10]
  40724e:	mov    rcx,QWORD PTR [r13+0x40]
  407252:	lea    rdx,[rax-0x10]
  407256:	mov    QWORD PTR [r13+0x10],rdx
  40725a:	mov    rdx,QWORD PTR [rax-0x10]
  40725e:	mov    QWORD PTR [rcx+rbx*1],rdx
  407262:	mov    eax,DWORD PTR [rax-0x8]
  407265:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  407269:	mov    rax,QWORD PTR [r13+0x10]
  40726d:	mov    ecx,DWORD PTR [rax+0x8]
  407270:	test   ecx,ecx
  407272:	je     407290 <__ctype_b_loc@plt+0x4fc0>
  407274:	cmp    ecx,0x1
  407277:	mov    r11,r14
  40727a:	jne    407288 <__ctype_b_loc@plt+0x4fb8>
  40727c:	cmp    DWORD PTR [rax],0x0
  40727f:	setne  sil
  407283:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  407288:	mov    sil,0x1
  40728b:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  407290:	xor    esi,esi
  407292:	mov    r11,r14
  407295:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  40729a:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	shr    ebx,0x17
  4072a3:	je     4072b6 <__ctype_b_loc@plt+0x4fe6>
  4072a5:	mov    eax,ebx
  4072a7:	shl    rax,0x4
  4072ab:	add    rax,r12
  4072ae:	add    rax,0xfffffffffffffff0
  4072b2:	mov    QWORD PTR [r13+0x10],rax
  4072b6:	mov    rax,QWORD PTR [rsp+0x70]
  4072bb:	cmp    QWORD PTR [rax],0x0
  4072bf:	je     4072cc <__ctype_b_loc@plt+0x4ffc>
  4072c1:	mov    rdi,r13
  4072c4:	mov    rsi,r10
  4072c7:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  4072cc:	mov    rdx,QWORD PTR [r13+0x28]
  4072d0:	lea    rax,[rdx-0x28]
  4072d4:	mov    QWORD PTR [r13+0x28],rax
  4072d8:	mov    rsi,QWORD PTR [rdx-0x28]
  4072dc:	mov    rcx,QWORD PTR [rdx+0x8]
  4072e0:	mov    eax,DWORD PTR [rdx+0x20]
  4072e3:	mov    QWORD PTR [r13+0x18],rsi
  4072e7:	mov    rdx,QWORD PTR [rdx-0x10]
  4072eb:	mov    QWORD PTR [r13+0x30],rdx
  4072ef:	test   eax,eax
  4072f1:	je     4073c0 <__ctype_b_loc@plt+0x50f0>
  4072f7:	mov    edx,eax
  4072f9:	neg    edx
  4072fb:	mov    ebx,eax
  4072fd:	nop    DWORD PTR [rax]
  407300:	cmp    r12,QWORD PTR [r13+0x10]
  407304:	jae    407330 <__ctype_b_loc@plt+0x5060>
  407306:	mov    rsi,QWORD PTR [r12]
  40730a:	mov    QWORD PTR [rcx],rsi
  40730d:	mov    esi,DWORD PTR [r12+0x8]
  407312:	mov    DWORD PTR [rcx+0x8],esi
  407315:	add    rcx,0x10
  407319:	add    r12,0x10
  40731d:	add    bl,0x7
  407320:	inc    edx
  407322:	jne    407300 <__ctype_b_loc@plt+0x5030>
  407324:	jmp    4073c0 <__ctype_b_loc@plt+0x50f0>
  407329:	nop    DWORD PTR [rax+0x0]
  407330:	mov    esi,edx
  407332:	neg    esi
  407334:	test   esi,esi
  407336:	jle    4073c0 <__ctype_b_loc@plt+0x50f0>
  40733c:	mov    edi,edx
  40733e:	not    edi
  407340:	test   sil,0x7
  407344:	je     407363 <__ctype_b_loc@plt+0x5093>
  407346:	movzx  ebp,bl
  407349:	and    ebp,0x7
  40734c:	neg    ebp
  40734e:	xor    esi,esi
  407350:	mov    DWORD PTR [rcx+0x8],0x0
  407357:	add    rcx,0x10
  40735b:	dec    esi
  40735d:	cmp    ebp,esi
  40735f:	jne    407350 <__ctype_b_loc@plt+0x5080>
  407361:	sub    esi,edx
  407363:	cmp    edi,0x7
  407366:	jb     4073c0 <__ctype_b_loc@plt+0x50f0>
  407368:	nop    DWORD PTR [rax+rax*1+0x0]
  407370:	mov    DWORD PTR [rcx+0x8],0x0
  407377:	mov    DWORD PTR [rcx+0x18],0x0
  40737e:	mov    DWORD PTR [rcx+0x28],0x0
  407385:	mov    DWORD PTR [rcx+0x38],0x0
  40738c:	mov    DWORD PTR [rcx+0x48],0x0
  407393:	mov    DWORD PTR [rcx+0x58],0x0
  40739a:	mov    DWORD PTR [rcx+0x68],0x0
  4073a1:	mov    DWORD PTR [rcx+0x78],0x0
  4073a8:	add    rcx,0x80
  4073af:	add    esi,0xfffffff8
  4073b2:	jg     407370 <__ctype_b_loc@plt+0x50a0>
  4073b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073be:	xchg   ax,ax
  4073c0:	mov    QWORD PTR [r13+0x10],rcx
  4073c4:	dec    DWORD PTR [rsp+0x5c]
  4073c8:	je     407479 <__ctype_b_loc@plt+0x51a9>
  4073ce:	cmp    eax,0xffffffff
  4073d1:	je     4050b0 <__ctype_b_loc@plt+0x2de0>
  4073d7:	mov    rax,QWORD PTR [r13+0x28]
  4073db:	mov    rax,QWORD PTR [rax+0x10]
  4073df:	mov    QWORD PTR [r13+0x10],rax
  4073e3:	jmp    4050b0 <__ctype_b_loc@plt+0x2de0>
  4073e8:	test   eax,eax
  4073ea:	jne    407479 <__ctype_b_loc@plt+0x51a9>
  4073f0:	inc    DWORD PTR [rsp+0x5c]
  4073f4:	jmp    4050b0 <__ctype_b_loc@plt+0x2de0>
  4073f9:	test   eax,eax
  4073fb:	jne    407479 <__ctype_b_loc@plt+0x51a9>
  4073fd:	mov    r14,QWORD PTR [r13+0x28]
  407401:	mov    rbp,QWORD PTR [r14-0x20]
  407405:	mov    rbx,QWORD PTR [r14+0x8]
  407409:	cmp    QWORD PTR [r13+0x98],0x0
  407411:	mov    rax,rbp
  407414:	je     407426 <__ctype_b_loc@plt+0x5156>
  407416:	mov    rsi,QWORD PTR [r14-0x28]
  40741a:	mov    rdi,r13
  40741d:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  407422:	mov    rax,QWORD PTR [r14-0x20]
  407426:	mov    rcx,QWORD PTR [r14]
  407429:	sub    rcx,rbx
  40742c:	add    rcx,rax
  40742f:	mov    QWORD PTR [r14-0x28],rcx
  407433:	mov    QWORD PTR [r13+0x18],rcx
  407437:	cmp    rbx,QWORD PTR [r13+0x10]
  40743b:	jae    40745b <__ctype_b_loc@plt+0x518b>
  40743d:	nop    DWORD PTR [rax]
  407440:	mov    rax,QWORD PTR [rbx]
  407443:	mov    QWORD PTR [rbp+0x0],rax
  407447:	mov    eax,DWORD PTR [rbx+0x8]
  40744a:	mov    DWORD PTR [rbp+0x8],eax
  40744d:	add    rbp,0x10
  407451:	add    rbx,0x10
  407455:	cmp    rbx,QWORD PTR [r13+0x10]
  407459:	jb     407440 <__ctype_b_loc@plt+0x5170>
  40745b:	mov    QWORD PTR [r13+0x10],rbp
  40745f:	mov    QWORD PTR [r14-0x18],rbp
  407463:	mov    rax,QWORD PTR [r13+0x30]
  407467:	mov    QWORD PTR [r14-0x10],rax
  40746b:	inc    DWORD PTR [r14-0x4]
  40746f:	add    QWORD PTR [r13+0x28],0xffffffffffffffd8
  407474:	jmp    4050b0 <__ctype_b_loc@plt+0x2de0>
  407479:	dec    WORD PTR [r13+0x60]
  40747e:	mov    rax,QWORD PTR [r13+0x20]
  407482:	mov    rcx,QWORD PTR [rax+0x78]
  407486:	cmp    rcx,QWORD PTR [rax+0x70]
  40748a:	jae    40749e <__ctype_b_loc@plt+0x51ce>
  40748c:	add    rsp,0x88
  407493:	pop    rbx
  407494:	pop    r12
  407496:	pop    r13
  407498:	pop    r14
  40749a:	pop    r15
  40749c:	pop    rbp
  40749d:	ret    
  40749e:	mov    rdi,r13
  4074a1:	add    rsp,0x88
  4074a8:	pop    rbx
  4074a9:	pop    r12
  4074ab:	pop    r13
  4074ad:	pop    r14
  4074af:	pop    r15
  4074b1:	pop    rbp
  4074b2:	jmp    407f90 <__ctype_b_loc@plt+0x5cc0>
  4074b7:	mov    rax,QWORD PTR [rsp+0x10]
  4074bc:	mov    rdi,QWORD PTR [rax+0xa8]
  4074c3:	test   rdi,rdi
  4074c6:	jne    407525 <__ctype_b_loc@plt+0x5255>
  4074c8:	mov    rax,QWORD PTR [rsp+0x10]
  4074cd:	mov    BYTE PTR [rax+0xa],0x4
  4074d1:	mov    rax,QWORD PTR [rax+0x20]
  4074d5:	cmp    QWORD PTR [rax+0x98],0x0
  4074dd:	je     4074fe <__ctype_b_loc@plt+0x522e>
  4074df:	mov    rbx,QWORD PTR [rsp+0x10]
  4074e4:	mov    rdi,rbx
  4074e7:	mov    esi,0x4
  4074ec:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4074f1:	mov    rax,QWORD PTR [rbx+0x20]
  4074f5:	mov    rdi,rbx
  4074f8:	call   QWORD PTR [rax+0x98]
  4074fe:	mov    edi,0x1
  407503:	call   402280 <exit@plt>
  407508:	lea    rsi,[rip+0x229b6]        # 429ec5 <__ctype_b_loc@plt+0x27bf5>
  40750f:	mov    rdi,r13
  407512:	xor    eax,eax
  407514:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  407519:	mov    rdi,QWORD PTR [r13+0xa8]
  407520:	test   rdi,rdi
  407523:	je     4074c8 <__ctype_b_loc@plt+0x51f8>
  407525:	mov    DWORD PTR [rdi+0xd0],0x4
  40752f:	add    rdi,0x8
  407533:	mov    esi,0x1
  407538:	call   402230 <longjmp@plt>
  40753d:	mov    rdi,QWORD PTR [r13+0xa8]
  407544:	test   rdi,rdi
  407547:	jne    40767a <__ctype_b_loc@plt+0x53aa>
  40754d:	mov    rax,QWORD PTR [rsp+0x10]
  407552:	mov    BYTE PTR [rax+0xa],0x5
  407556:	mov    rax,QWORD PTR [rax+0x20]
  40755a:	cmp    QWORD PTR [rax+0x98],0x0
  407562:	je     4074fe <__ctype_b_loc@plt+0x522e>
  407564:	mov    rbp,QWORD PTR [rsp+0x10]
  407569:	lea    r14,[rbp+0xa8]
  407570:	mov    rax,QWORD PTR [rbp+0x50]
  407574:	mov    QWORD PTR [rbp+0x28],rax
  407578:	mov    rsi,QWORD PTR [rax]
  40757b:	mov    QWORD PTR [rbp+0x18],rsi
  40757f:	mov    rdi,rbp
  407582:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  407587:	mov    rbx,QWORD PTR [rbp+0x18]
  40758b:	lea    rsi,[rip+0x2280f]        # 429da1 <__ctype_b_loc@plt+0x27ad1>
  407592:	mov    edx,0x17
  407597:	mov    rdi,rbp
  40759a:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40759f:	mov    QWORD PTR [rbx],rax
  4075a2:	mov    DWORD PTR [rbx+0x8],0x4
  4075a9:	add    rbx,0x10
  4075ad:	mov    QWORD PTR [rbp+0x10],rbx
  4075b1:	movzx  eax,WORD PTR [rbp+0x62]
  4075b5:	mov    WORD PTR [rbp+0x60],ax
  4075b9:	mov    BYTE PTR [rbp+0x65],0x1
  4075bd:	movsxd rax,DWORD PTR [rbp+0x5c]
  4075c1:	cmp    rax,0x4e21
  4075c7:	jl     407663 <__ctype_b_loc@plt+0x5393>
  4075cd:	mov    rdx,QWORD PTR [rsp+0x10]
  4075d2:	mov    rcx,QWORD PTR [rdx+0x28]
  4075d6:	mov    r12,QWORD PTR [rdx+0x50]
  4075da:	sub    rcx,r12
  4075dd:	shr    rcx,0x3
  4075e1:	imul   ecx,ecx,0xcccccccd
  4075e7:	cmp    ecx,0x4e1e
  4075ed:	jg     407663 <__ctype_b_loc@plt+0x5393>
  4075ef:	shl    rax,0x3
  4075f3:	lea    r15,[rax+rax*4]
  4075f7:	mov    rax,QWORD PTR [rsp+0x10]
  4075fc:	mov    rbx,QWORD PTR [rax+0x20]
  407600:	mov    rdi,QWORD PTR [rbx+0x18]
  407604:	mov    ecx,0xc3500
  407609:	mov    rsi,r12
  40760c:	mov    rdx,r15
  40760f:	call   QWORD PTR [rbx+0x10]
  407612:	mov    rbp,rax
  407615:	test   rax,rax
  407618:	jne    407629 <__ctype_b_loc@plt+0x5359>
  40761a:	mov    rdi,QWORD PTR [rsp+0x10]
  40761f:	mov    esi,0x4
  407624:	call   403c70 <__ctype_b_loc@plt+0x19a0>
  407629:	mov    rax,QWORD PTR [rbx+0x78]
  40762d:	sub    rax,r15
  407630:	add    rax,0xc3500
  407636:	mov    QWORD PTR [rbx+0x78],rax
  40763a:	mov    rcx,QWORD PTR [rsp+0x10]
  40763f:	mov    QWORD PTR [rcx+0x50],rbp
  407643:	mov    DWORD PTR [rcx+0x5c],0x4e20
  40764a:	mov    rax,QWORD PTR [rcx+0x28]
  40764e:	sub    rax,r12
  407651:	add    rax,rbp
  407654:	mov    QWORD PTR [rcx+0x28],rax
  407658:	add    rbp,0xc34d8
  40765f:	mov    QWORD PTR [rcx+0x48],rbp
  407663:	vxorpd xmm0,xmm0,xmm0
  407667:	vmovupd XMMWORD PTR [r14],xmm0
  40766c:	mov    rdi,QWORD PTR [rsp+0x10]
  407671:	mov    rax,QWORD PTR [rdi+0x20]
  407675:	jmp    4074f8 <__ctype_b_loc@plt+0x5228>
  40767a:	mov    DWORD PTR [rdi+0xd0],0x5
  407684:	jmp    40752f <__ctype_b_loc@plt+0x525f>
  407689:	nop    DWORD PTR [rax+0x0]
  407690:	push   rbp
  407691:	push   r15
  407693:	push   r14
  407695:	push   r13
  407697:	push   r12
  407699:	push   rbx
  40769a:	sub    rsp,0x38
  40769e:	mov    r13d,edx
  4076a1:	mov    rbp,rsi
  4076a4:	mov    r12,rdi
  4076a7:	movsxd rax,DWORD PTR [rsi+0x8]
  4076ab:	cmp    rax,0x7
  4076af:	je     4076bf <__ctype_b_loc@plt+0x53ef>
  4076b1:	cmp    eax,0x6
  4076b4:	je     4077df <__ctype_b_loc@plt+0x550f>
  4076ba:	cmp    eax,0x5
  4076bd:	jne    4076c9 <__ctype_b_loc@plt+0x53f9>
  4076bf:	mov    rcx,QWORD PTR [rbp+0x0]
  4076c3:	add    rcx,0x10
  4076c7:	jmp    4076d9 <__ctype_b_loc@plt+0x5409>
  4076c9:	mov    rcx,QWORD PTR [r12+0x20]
  4076ce:	lea    rcx,[rcx+rax*8]
  4076d2:	add    rcx,0xe0
  4076d9:	mov    rsi,QWORD PTR [rcx]
  4076dc:	lea    r14,[rip+0x22435]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4076e3:	test   rsi,rsi
  4076e6:	je     407738 <__ctype_b_loc@plt+0x5468>
  4076e8:	mov    rcx,QWORD PTR [r12+0x20]
  4076ed:	mov    rcx,QWORD PTR [rcx+0x1a8]
  4076f4:	mov    dl,BYTE PTR [rsi+0xb]
  4076f7:	bzhi   edx,DWORD PTR [rcx+0xc],edx
  4076fd:	movsxd rdx,edx
  407700:	lea    rdx,[rdx+rdx*4]
  407704:	shl    rdx,0x3
  407708:	add    rdx,QWORD PTR [rsi+0x20]
  40770c:	cmp    DWORD PTR [rdx+0x18],0x4
  407710:	je     40772f <__ctype_b_loc@plt+0x545f>
  407712:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40771c:	nop    DWORD PTR [rax+0x0]
  407720:	mov    rdx,QWORD PTR [rdx+0x20]
  407724:	test   rdx,rdx
  407727:	je     407738 <__ctype_b_loc@plt+0x5468>
  407729:	cmp    DWORD PTR [rdx+0x18],0x4
  40772d:	jne    407720 <__ctype_b_loc@plt+0x5450>
  40772f:	cmp    QWORD PTR [rdx+0x10],rcx
  407733:	jne    407720 <__ctype_b_loc@plt+0x5450>
  407735:	mov    r14,rdx
  407738:	mov    rbx,rbp
  40773b:	sub    rbx,QWORD PTR [r12+0x40]
  407740:	cmp    DWORD PTR [r14+0x8],0x6
  407745:	je     40776a <__ctype_b_loc@plt+0x549a>
  407747:	lea    rcx,[rip+0x28192]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40774e:	mov    rcx,QWORD PTR [rcx+rax*8]
  407752:	lea    rsi,[rip+0x226df]        # 429e38 <__ctype_b_loc@plt+0x27b68>
  407759:	lea    rdx,[rip+0x22893]        # 429ff3 <__ctype_b_loc@plt+0x27d23>
  407760:	mov    rdi,r12
  407763:	xor    eax,eax
  407765:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40776a:	mov    rax,QWORD PTR [r12+0x10]
  40776f:	cmp    rax,rbp
  407772:	jbe    40779b <__ctype_b_loc@plt+0x54cb>
  407774:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40777e:	xchg   ax,ax
  407780:	mov    rcx,QWORD PTR [rax-0x10]
  407784:	mov    QWORD PTR [rax],rcx
  407787:	mov    ecx,DWORD PTR [rax-0x8]
  40778a:	mov    DWORD PTR [rax+0x8],ecx
  40778d:	add    rax,0xfffffffffffffff0
  407791:	cmp    rax,rbp
  407794:	ja     407780 <__ctype_b_loc@plt+0x54b0>
  407796:	mov    rax,QWORD PTR [r12+0x10]
  40779b:	mov    rcx,QWORD PTR [r12+0x38]
  4077a0:	sub    rcx,rax
  4077a3:	cmp    rcx,0x10
  4077a7:	jg     4077c1 <__ctype_b_loc@plt+0x54f1>
  4077a9:	mov    eax,DWORD PTR [r12+0x58]
  4077ae:	lea    ecx,[rax+rax*1]
  4077b1:	lea    esi,[rax+0x1]
  4077b4:	test   eax,eax
  4077b6:	cmovg  esi,ecx
  4077b9:	mov    rdi,r12
  4077bc:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4077c1:	add    QWORD PTR [r12+0x10],0x10
  4077c7:	mov    rax,QWORD PTR [r12+0x40]
  4077cc:	lea    rbp,[rax+rbx*1]
  4077d0:	mov    rcx,QWORD PTR [r14]
  4077d3:	mov    QWORD PTR [rax+rbx*1],rcx
  4077d7:	mov    ecx,DWORD PTR [r14+0x8]
  4077db:	mov    DWORD PTR [rax+rbx*1+0x8],ecx
  4077df:	mov    rbx,rbp
  4077e2:	mov    rax,QWORD PTR [rbp+0x0]
  4077e6:	mov    rcx,QWORD PTR [r12+0x28]
  4077eb:	mov    rdx,QWORD PTR [r12+0x30]
  4077f0:	sub    rbx,QWORD PTR [r12+0x40]
  4077f5:	mov    QWORD PTR [rcx+0x18],rdx
  4077f9:	cmp    BYTE PTR [rax+0xa],0x0
  4077fd:	je     4078c5 <__ctype_b_loc@plt+0x55f5>
  407803:	mov    rax,QWORD PTR [r12+0x38]
  407808:	sub    rax,QWORD PTR [r12+0x10]
  40780d:	cmp    rax,0x140
  407813:	jg     40782e <__ctype_b_loc@plt+0x555e>
  407815:	mov    eax,DWORD PTR [r12+0x58]
  40781a:	lea    ecx,[rax+0x14]
  40781d:	lea    esi,[rax+rax*1]
  407820:	cmp    eax,0x14
  407823:	cmovl  esi,ecx
  407826:	mov    rdi,r12
  407829:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  40782e:	mov    rax,QWORD PTR [r12+0x28]
  407833:	cmp    rax,QWORD PTR [r12+0x48]
  407838:	jne    407c55 <__ctype_b_loc@plt+0x5985>
  40783e:	movsxd r15,DWORD PTR [r12+0x5c]
  407843:	cmp    r15,0x4e21
  40784a:	jge    407ef7 <__ctype_b_loc@plt+0x5c27>
  407850:	mov    DWORD PTR [rsp+0xc],r13d
  407855:	lea    rbp,[r15+r15*1]
  407859:	mov    rsi,QWORD PTR [r12+0x50]
  40785e:	test   r15d,r15d
  407861:	mov    QWORD PTR [rsp+0x20],rsi
  407866:	js     407bea <__ctype_b_loc@plt+0x591a>
  40786c:	lea    rax,[r15*8+0x0]
  407874:	lea    rdx,[rax+rax*4]
  407878:	mov    QWORD PTR [rsp+0x10],rbp
  40787d:	lea    rax,[rbp*8+0x0]
  407885:	lea    rbp,[rax+rax*4]
  407889:	mov    r14,QWORD PTR [r12+0x20]
  40788e:	mov    rdi,QWORD PTR [r14+0x18]
  407892:	mov    QWORD PTR [rsp+0x18],rdx
  407897:	mov    rcx,rbp
  40789a:	call   QWORD PTR [r14+0x10]
  40789e:	mov    r13,rax
  4078a1:	test   r15d,r15d
  4078a4:	je     4078af <__ctype_b_loc@plt+0x55df>
  4078a6:	test   r13,r13
  4078a9:	je     407f23 <__ctype_b_loc@plt+0x5c53>
  4078af:	sub    rbp,QWORD PTR [rsp+0x18]
  4078b4:	add    QWORD PTR [r14+0x78],rbp
  4078b8:	mov    rbp,QWORD PTR [rsp+0x10]
  4078bd:	mov    rcx,rbp
  4078c0:	jmp    407c01 <__ctype_b_loc@plt+0x5931>
  4078c5:	mov    rbp,QWORD PTR [rax+0x20]
  4078c9:	mov    rcx,QWORD PTR [r12+0x38]
  4078ce:	sub    rcx,QWORD PTR [r12+0x10]
  4078d3:	movzx  eax,BYTE PTR [rbp+0x73]
  4078d7:	mov    rdx,rax
  4078da:	shl    rdx,0x4
  4078de:	cmp    rcx,rdx
  4078e1:	jg     4078fb <__ctype_b_loc@plt+0x562b>
  4078e3:	mov    ecx,DWORD PTR [r12+0x58]
  4078e8:	lea    edx,[rcx+rax*1]
  4078eb:	lea    esi,[rcx+rcx*1]
  4078ee:	cmp    ecx,eax
  4078f0:	cmovl  esi,edx
  4078f3:	mov    rdi,r12
  4078f6:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4078fb:	mov    r14,QWORD PTR [r12+0x40]
  407900:	add    r14,rbx
  407903:	cmp    BYTE PTR [rbp+0x72],0x0
  407907:	je     407b23 <__ctype_b_loc@plt+0x5853>
  40790d:	mov    r15,QWORD PTR [r12+0x10]
  407912:	mov    rsi,r15
  407915:	sub    rsi,r14
  407918:	shr    rsi,0x4
  40791c:	lea    ecx,[rsi-0x1]
  40791f:	movzx  eax,BYTE PTR [rbp+0x71]
  407923:	mov    edx,eax
  407925:	sub    edx,esi
  407927:	jl     4079b0 <__ctype_b_loc@plt+0x56e0>
  40792d:	lea    edi,[rdx+0x1]
  407930:	and    edi,0x7
  407933:	je     407956 <__ctype_b_loc@plt+0x5686>
  407935:	neg    edi
  407937:	xor    ecx,ecx
  407939:	nop    DWORD PTR [rax+0x0]
  407940:	mov    DWORD PTR [r15+0x8],0x0
  407948:	add    r15,0x10
  40794c:	dec    ecx
  40794e:	cmp    edi,ecx
  407950:	jne    407940 <__ctype_b_loc@plt+0x5670>
  407952:	not    ecx
  407954:	add    ecx,esi
  407956:	cmp    edx,0x7
  407959:	jb     4079a9 <__ctype_b_loc@plt+0x56d9>
  40795b:	mov    edx,eax
  40795d:	sub    edx,ecx
  40795f:	nop
  407960:	mov    DWORD PTR [r15+0x8],0x0
  407968:	mov    DWORD PTR [r15+0x18],0x0
  407970:	mov    DWORD PTR [r15+0x28],0x0
  407978:	mov    DWORD PTR [r15+0x38],0x0
  407980:	mov    DWORD PTR [r15+0x48],0x0
  407988:	mov    DWORD PTR [r15+0x58],0x0
  407990:	mov    DWORD PTR [r15+0x68],0x0
  407998:	mov    DWORD PTR [r15+0x78],0x0
  4079a0:	sub    r15,0xffffffffffffff80
  4079a4:	add    edx,0xfffffff8
  4079a7:	jne    407960 <__ctype_b_loc@plt+0x5690>
  4079a9:	mov    QWORD PTR [r12+0x10],r15
  4079ae:	mov    ecx,eax
  4079b0:	test   al,al
  4079b2:	je     407b19 <__ctype_b_loc@plt+0x5849>
  4079b8:	movsxd r8,ecx
  4079bb:	mov    rcx,r8
  4079be:	neg    rcx
  4079c1:	mov    rsi,r8
  4079c4:	shl    rsi,0x4
  4079c8:	mov    rdi,r15
  4079cb:	sub    rdi,rsi
  4079ce:	lea    rsi,[r15+0x10]
  4079d2:	mov    QWORD PTR [r12+0x10],rsi
  4079d7:	mov    rsi,QWORD PTR [rdi]
  4079da:	mov    QWORD PTR [r15],rsi
  4079dd:	shl    rcx,0x4
  4079e1:	mov    esi,DWORD PTR [r15+rcx*1+0x8]
  4079e6:	mov    DWORD PTR [r15+0x8],esi
  4079ea:	mov    DWORD PTR [r15+rcx*1+0x8],0x0
  4079f3:	cmp    al,0x1
  4079f5:	je     407b19 <__ctype_b_loc@plt+0x5849>
  4079fb:	mov    r9,rbp
  4079fe:	lea    ecx,[rax-0x1]
  407a01:	lea    rdi,[rax-0x2]
  407a05:	and    ecx,0x3
  407a08:	mov    esi,0x1
  407a0d:	cmp    rdi,0x3
  407a11:	jb     407ad8 <__ctype_b_loc@plt+0x5808>
  407a17:	mov    esi,0x4
  407a1c:	sub    rsi,r8
  407a1f:	shl    rsi,0x4
  407a23:	lea    rdi,[r15+rsi*1]
  407a27:	add    rdi,0x8
  407a2b:	sub    rax,rcx
  407a2e:	mov    esi,0x1
  407a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a3d:	nop    DWORD PTR [rax]
  407a40:	mov    rbp,QWORD PTR [r12+0x10]
  407a45:	lea    rdx,[rbp+0x10]
  407a49:	mov    QWORD PTR [r12+0x10],rdx
  407a4e:	mov    rdx,QWORD PTR [rdi-0x38]
  407a52:	mov    QWORD PTR [rbp+0x0],rdx
  407a56:	mov    edx,DWORD PTR [rdi-0x30]
  407a59:	mov    DWORD PTR [rbp+0x8],edx
  407a5c:	mov    DWORD PTR [rdi-0x30],0x0
  407a63:	mov    rdx,QWORD PTR [r12+0x10]
  407a68:	lea    rbp,[rdx+0x10]
  407a6c:	mov    QWORD PTR [r12+0x10],rbp
  407a71:	mov    rbp,QWORD PTR [rdi-0x28]
  407a75:	mov    QWORD PTR [rdx],rbp
  407a78:	mov    ebp,DWORD PTR [rdi-0x20]
  407a7b:	mov    DWORD PTR [rdx+0x8],ebp
  407a7e:	mov    DWORD PTR [rdi-0x20],0x0
  407a85:	mov    rdx,QWORD PTR [r12+0x10]
  407a8a:	lea    rbp,[rdx+0x10]
  407a8e:	mov    QWORD PTR [r12+0x10],rbp
  407a93:	mov    rbp,QWORD PTR [rdi-0x18]
  407a97:	mov    QWORD PTR [rdx],rbp
  407a9a:	mov    ebp,DWORD PTR [rdi-0x10]
  407a9d:	mov    DWORD PTR [rdx+0x8],ebp
  407aa0:	mov    DWORD PTR [rdi-0x10],0x0
  407aa7:	mov    rdx,QWORD PTR [r12+0x10]
  407aac:	lea    rbp,[rdx+0x10]
  407ab0:	mov    QWORD PTR [r12+0x10],rbp
  407ab5:	mov    rbp,QWORD PTR [rdi-0x8]
  407ab9:	mov    QWORD PTR [rdx],rbp
  407abc:	mov    ebp,DWORD PTR [rdi]
  407abe:	mov    DWORD PTR [rdx+0x8],ebp
  407ac1:	mov    DWORD PTR [rdi],0x0
  407ac7:	add    rsi,0x4
  407acb:	add    rdi,0x40
  407acf:	cmp    rax,rsi
  407ad2:	jne    407a40 <__ctype_b_loc@plt+0x5770>
  407ad8:	test   rcx,rcx
  407adb:	mov    rbp,r9
  407ade:	je     407b19 <__ctype_b_loc@plt+0x5849>
  407ae0:	sub    rsi,r8
  407ae3:	shl    rsi,0x4
  407ae7:	lea    rax,[r15+rsi*1]
  407aeb:	add    rax,0x8
  407aef:	nop
  407af0:	mov    rdx,QWORD PTR [r12+0x10]
  407af5:	lea    rsi,[rdx+0x10]
  407af9:	mov    QWORD PTR [r12+0x10],rsi
  407afe:	mov    rsi,QWORD PTR [rax-0x8]
  407b02:	mov    QWORD PTR [rdx],rsi
  407b05:	mov    esi,DWORD PTR [rax]
  407b07:	mov    DWORD PTR [rdx+0x8],esi
  407b0a:	mov    DWORD PTR [rax],0x0
  407b10:	add    rax,0x10
  407b14:	dec    rcx
  407b17:	jne    407af0 <__ctype_b_loc@plt+0x5820>
  407b19:	add    rbx,QWORD PTR [r12+0x40]
  407b1e:	mov    r14,rbx
  407b21:	jmp    407b42 <__ctype_b_loc@plt+0x5872>
  407b23:	lea    r15,[r14+0x10]
  407b27:	movzx  eax,BYTE PTR [rbp+0x71]
  407b2b:	shl    rax,0x4
  407b2f:	add    rax,r14
  407b32:	add    rax,0x10
  407b36:	cmp    QWORD PTR [r12+0x10],rax
  407b3b:	jbe    407b42 <__ctype_b_loc@plt+0x5872>
  407b3d:	mov    QWORD PTR [r12+0x10],rax
  407b42:	mov    rcx,QWORD PTR [r12+0x28]
  407b47:	cmp    rcx,QWORD PTR [r12+0x48]
  407b4c:	jne    407e25 <__ctype_b_loc@plt+0x5b55>
  407b52:	movsxd rbx,DWORD PTR [r12+0x5c]
  407b57:	cmp    rbx,0x4e21
  407b5e:	jge    407ef7 <__ctype_b_loc@plt+0x5c27>
  407b64:	mov    DWORD PTR [rsp+0xc],r13d
  407b69:	lea    rcx,[rbx+rbx*1]
  407b6d:	mov    rsi,QWORD PTR [r12+0x50]
  407b72:	test   ebx,ebx
  407b74:	mov    QWORD PTR [rsp+0x20],rsi
  407b79:	mov    QWORD PTR [rsp+0x10],rcx
  407b7e:	js     407db6 <__ctype_b_loc@plt+0x5ae6>
  407b84:	mov    QWORD PTR [rsp+0x18],rbp
  407b89:	lea    rax,[rbx*8+0x0]
  407b91:	lea    rdx,[rax+rax*4]
  407b95:	lea    rax,[rcx*8+0x0]
  407b9d:	lea    rbp,[rax+rax*4]
  407ba1:	mov    rax,QWORD PTR [r12+0x20]
  407ba6:	mov    rdi,QWORD PTR [rax+0x18]
  407baa:	mov    QWORD PTR [rsp+0x30],rdx
  407baf:	mov    rcx,rbp
  407bb2:	mov    QWORD PTR [rsp+0x28],rax
  407bb7:	call   QWORD PTR [rax+0x10]
  407bba:	mov    r13,rax
  407bbd:	test   ebx,ebx
  407bbf:	je     407bca <__ctype_b_loc@plt+0x58fa>
  407bc1:	test   r13,r13
  407bc4:	je     407f23 <__ctype_b_loc@plt+0x5c53>
  407bca:	sub    rbp,QWORD PTR [rsp+0x30]
  407bcf:	mov    rax,QWORD PTR [rsp+0x28]
  407bd4:	add    QWORD PTR [rax+0x78],rbp
  407bd8:	mov    rcx,QWORD PTR [rsp+0x10]
  407bdd:	mov    rax,rcx
  407be0:	mov    rbp,QWORD PTR [rsp+0x18]
  407be5:	jmp    407dd2 <__ctype_b_loc@plt+0x5b02>
  407bea:	lea    rsi,[rip+0x221c8]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  407bf1:	xor    r13d,r13d
  407bf4:	mov    rdi,r12
  407bf7:	xor    eax,eax
  407bf9:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  407bfe:	movsxd rcx,ebp
  407c01:	mov    QWORD PTR [r12+0x50],r13
  407c06:	mov    DWORD PTR [r12+0x5c],ebp
  407c0b:	mov    rax,QWORD PTR [r12+0x28]
  407c10:	sub    rax,QWORD PTR [rsp+0x20]
  407c15:	add    rax,r13
  407c18:	mov    QWORD PTR [r12+0x28],rax
  407c1d:	lea    rcx,[rcx+rcx*4]
  407c21:	lea    rcx,[rcx*8-0x28]
  407c29:	add    rcx,r13
  407c2c:	mov    QWORD PTR [r12+0x48],rcx
  407c31:	cmp    r15d,0x2711
  407c38:	mov    r13d,DWORD PTR [rsp+0xc]
  407c3d:	jl     407c55 <__ctype_b_loc@plt+0x5985>
  407c3f:	lea    rsi,[rip+0x221e3]        # 429e29 <__ctype_b_loc@plt+0x27b59>
  407c46:	mov    rdi,r12
  407c49:	xor    eax,eax
  407c4b:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  407c50:	mov    rax,QWORD PTR [r12+0x28]
  407c55:	lea    rcx,[rax+0x28]
  407c59:	mov    QWORD PTR [r12+0x28],rcx
  407c5e:	mov    rcx,QWORD PTR [r12+0x40]
  407c63:	lea    rdx,[rcx+rbx*1]
  407c67:	mov    QWORD PTR [rax+0x30],rdx
  407c6b:	lea    rdx,[rcx+rbx*1+0x10]
  407c70:	mov    QWORD PTR [rax+0x28],rdx
  407c74:	mov    QWORD PTR [r12+0x18],rdx
  407c79:	mov    edx,0x140
  407c7e:	add    rdx,QWORD PTR [r12+0x10]
  407c83:	mov    QWORD PTR [rax+0x38],rdx
  407c87:	mov    DWORD PTR [rax+0x48],r13d
  407c8b:	mov    rax,QWORD PTR [rcx+rbx*1]
  407c8f:	mov    rdi,r12
  407c92:	call   QWORD PTR [rax+0x20]
  407c95:	test   eax,eax
  407c97:	js     407d96 <__ctype_b_loc@plt+0x5ac6>
  407c9d:	mov    rsi,QWORD PTR [r12+0x10]
  407ca2:	mov    rdi,QWORD PTR [r12+0x28]
  407ca7:	lea    rcx,[rdi-0x28]
  407cab:	mov    QWORD PTR [r12+0x28],rcx
  407cb0:	mov    rbp,QWORD PTR [rdi-0x28]
  407cb4:	mov    rdx,QWORD PTR [rdi+0x8]
  407cb8:	mov    ecx,DWORD PTR [rdi+0x20]
  407cbb:	mov    QWORD PTR [r12+0x18],rbp
  407cc0:	mov    rdi,QWORD PTR [rdi-0x10]
  407cc4:	mov    QWORD PTR [r12+0x30],rdi
  407cc9:	test   ecx,ecx
  407ccb:	je     407da7 <__ctype_b_loc@plt+0x5ad7>
  407cd1:	test   eax,eax
  407cd3:	jle    407d10 <__ctype_b_loc@plt+0x5a40>
  407cd5:	cdqe   
  407cd7:	shl    rax,0x4
  407cdb:	sub    rsi,rax
  407cde:	xchg   ax,ax
  407ce0:	mov    rax,rdx
  407ce3:	mov    rdx,QWORD PTR [rsi]
  407ce6:	mov    QWORD PTR [rax],rdx
  407ce9:	mov    edx,DWORD PTR [rsi+0x8]
  407cec:	mov    DWORD PTR [rax+0x8],edx
  407cef:	cmp    ecx,0x1
  407cf2:	je     407da0 <__ctype_b_loc@plt+0x5ad0>
  407cf8:	dec    ecx
  407cfa:	add    rsi,0x10
  407cfe:	lea    rdx,[rax+0x10]
  407d02:	cmp    rsi,QWORD PTR [r12+0x10]
  407d07:	jb     407ce0 <__ctype_b_loc@plt+0x5a10>
  407d09:	add    rax,0x10
  407d0d:	mov    rdx,rax
  407d10:	test   ecx,ecx
  407d12:	jle    407da7 <__ctype_b_loc@plt+0x5ad7>
  407d18:	lea    eax,[rcx-0x1]
  407d1b:	mov    esi,ecx
  407d1d:	and    esi,0x7
  407d20:	je     407d43 <__ctype_b_loc@plt+0x5a73>
  407d22:	xor    edi,edi
  407d24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d2e:	xchg   ax,ax
  407d30:	mov    DWORD PTR [rdx+0x8],0x0
  407d37:	add    rdx,0x10
  407d3b:	inc    edi
  407d3d:	cmp    esi,edi
  407d3f:	jne    407d30 <__ctype_b_loc@plt+0x5a60>
  407d41:	sub    ecx,edi
  407d43:	cmp    eax,0x7
  407d46:	jb     407da7 <__ctype_b_loc@plt+0x5ad7>
  407d48:	nop    DWORD PTR [rax+rax*1+0x0]
  407d50:	mov    DWORD PTR [rdx+0x8],0x0
  407d57:	mov    DWORD PTR [rdx+0x18],0x0
  407d5e:	mov    DWORD PTR [rdx+0x28],0x0
  407d65:	mov    DWORD PTR [rdx+0x38],0x0
  407d6c:	mov    DWORD PTR [rdx+0x48],0x0
  407d73:	mov    DWORD PTR [rdx+0x58],0x0
  407d7a:	mov    DWORD PTR [rdx+0x68],0x0
  407d81:	mov    DWORD PTR [rdx+0x78],0x0
  407d88:	add    rdx,0x80
  407d8f:	add    ecx,0xfffffff8
  407d92:	jg     407d50 <__ctype_b_loc@plt+0x5a80>
  407d94:	jmp    407da7 <__ctype_b_loc@plt+0x5ad7>
  407d96:	mov    eax,0x2
  407d9b:	jmp    407ee8 <__ctype_b_loc@plt+0x5c18>
  407da0:	add    rax,0x10
  407da4:	mov    rdx,rax
  407da7:	mov    QWORD PTR [r12+0x10],rdx
  407dac:	mov    eax,0x1
  407db1:	jmp    407ee8 <__ctype_b_loc@plt+0x5c18>
  407db6:	lea    rsi,[rip+0x21ffc]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  407dbd:	xor    r13d,r13d
  407dc0:	mov    rdi,r12
  407dc3:	xor    eax,eax
  407dc5:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  407dca:	mov    rcx,QWORD PTR [rsp+0x10]
  407dcf:	movsxd rax,ecx
  407dd2:	mov    QWORD PTR [r12+0x50],r13
  407dd7:	mov    DWORD PTR [r12+0x5c],ecx
  407ddc:	mov    rcx,QWORD PTR [r12+0x28]
  407de1:	sub    rcx,QWORD PTR [rsp+0x20]
  407de6:	add    rcx,r13
  407de9:	mov    QWORD PTR [r12+0x28],rcx
  407dee:	lea    rax,[rax+rax*4]
  407df2:	lea    rax,[rax*8-0x28]
  407dfa:	add    rax,r13
  407dfd:	mov    QWORD PTR [r12+0x48],rax
  407e02:	cmp    ebx,0x2711
  407e08:	mov    r13d,DWORD PTR [rsp+0xc]
  407e0d:	jl     407e25 <__ctype_b_loc@plt+0x5b55>
  407e0f:	lea    rsi,[rip+0x22013]        # 429e29 <__ctype_b_loc@plt+0x27b59>
  407e16:	mov    rdi,r12
  407e19:	xor    eax,eax
  407e1b:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  407e20:	mov    rcx,QWORD PTR [r12+0x28]
  407e25:	lea    rax,[rcx+0x28]
  407e29:	mov    QWORD PTR [r12+0x28],rax
  407e2e:	mov    QWORD PTR [rcx+0x30],r14
  407e32:	mov    QWORD PTR [rcx+0x28],r15
  407e36:	mov    QWORD PTR [r12+0x18],r15
  407e3b:	movzx  eax,BYTE PTR [rbp+0x73]
  407e3f:	shl    rax,0x4
  407e43:	add    rax,r15
  407e46:	mov    QWORD PTR [rcx+0x38],rax
  407e4a:	mov    rdx,QWORD PTR [rbp+0x18]
  407e4e:	mov    QWORD PTR [r12+0x30],rdx
  407e53:	mov    DWORD PTR [rcx+0x4c],0x0
  407e5a:	mov    DWORD PTR [rcx+0x48],r13d
  407e5e:	mov    rcx,QWORD PTR [r12+0x10]
  407e63:	cmp    rcx,rax
  407e66:	jae    407ee1 <__ctype_b_loc@plt+0x5c11>
  407e68:	mov    rdx,rcx
  407e6b:	not    rdx
  407e6e:	add    rdx,rax
  407e71:	mov    esi,edx
  407e73:	shr    esi,0x4
  407e76:	inc    esi
  407e78:	and    rsi,0x7
  407e7c:	je     407e90 <__ctype_b_loc@plt+0x5bc0>
  407e7e:	xchg   ax,ax
  407e80:	mov    DWORD PTR [rcx+0x8],0x0
  407e87:	add    rcx,0x10
  407e8b:	dec    rsi
  407e8e:	jne    407e80 <__ctype_b_loc@plt+0x5bb0>
  407e90:	cmp    rdx,0x70
  407e94:	jb     407ee1 <__ctype_b_loc@plt+0x5c11>
  407e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ea0:	mov    DWORD PTR [rcx+0x8],0x0
  407ea7:	mov    DWORD PTR [rcx+0x18],0x0
  407eae:	mov    DWORD PTR [rcx+0x28],0x0
  407eb5:	mov    DWORD PTR [rcx+0x38],0x0
  407ebc:	mov    DWORD PTR [rcx+0x48],0x0
  407ec3:	mov    DWORD PTR [rcx+0x58],0x0
  407eca:	mov    DWORD PTR [rcx+0x68],0x0
  407ed1:	mov    DWORD PTR [rcx+0x78],0x0
  407ed8:	sub    rcx,0xffffffffffffff80
  407edc:	cmp    rcx,rax
  407edf:	jb     407ea0 <__ctype_b_loc@plt+0x5bd0>
  407ee1:	mov    QWORD PTR [r12+0x10],rax
  407ee6:	xor    eax,eax
  407ee8:	add    rsp,0x38
  407eec:	pop    rbx
  407eed:	pop    r12
  407eef:	pop    r13
  407ef1:	pop    r14
  407ef3:	pop    r15
  407ef5:	pop    rbp
  407ef6:	ret    
  407ef7:	mov    rdi,QWORD PTR [r12+0xa8]
  407eff:	test   rdi,rdi
  407f02:	jne    407f6a <__ctype_b_loc@plt+0x5c9a>
  407f04:	mov    BYTE PTR [r12+0xa],0x5
  407f0a:	mov    rax,QWORD PTR [r12+0x20]
  407f0f:	cmp    QWORD PTR [rax+0x98],0x0
  407f17:	je     407f60 <__ctype_b_loc@plt+0x5c90>
  407f19:	mov    rdi,r12
  407f1c:	mov    esi,0x5
  407f21:	jmp    407f4d <__ctype_b_loc@plt+0x5c7d>
  407f23:	mov    rdi,QWORD PTR [r12+0xa8]
  407f2b:	test   rdi,rdi
  407f2e:	jne    407f76 <__ctype_b_loc@plt+0x5ca6>
  407f30:	mov    BYTE PTR [r12+0xa],0x4
  407f36:	mov    rax,QWORD PTR [r12+0x20]
  407f3b:	cmp    QWORD PTR [rax+0x98],0x0
  407f43:	je     407f60 <__ctype_b_loc@plt+0x5c90>
  407f45:	mov    rdi,r12
  407f48:	mov    esi,0x4
  407f4d:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  407f52:	mov    rax,QWORD PTR [r12+0x20]
  407f57:	mov    rdi,r12
  407f5a:	call   QWORD PTR [rax+0x98]
  407f60:	mov    edi,0x1
  407f65:	call   402280 <exit@plt>
  407f6a:	mov    DWORD PTR [rdi+0xd0],0x5
  407f74:	jmp    407f80 <__ctype_b_loc@plt+0x5cb0>
  407f76:	mov    DWORD PTR [rdi+0xd0],0x4
  407f80:	add    rdi,0x8
  407f84:	mov    esi,0x1
  407f89:	call   402230 <longjmp@plt>
  407f8e:	xchg   ax,ax
  407f90:	push   rbp
  407f91:	push   r15
  407f93:	push   r14
  407f95:	push   r13
  407f97:	push   r12
  407f99:	push   rbx
  407f9a:	sub    rsp,0x18
  407f9e:	mov    r15,rdi
  407fa1:	mov    r14,QWORD PTR [rdi+0x20]
  407fa5:	mov    eax,DWORD PTR [r14+0x94]
  407fac:	add    eax,eax
  407fae:	lea    eax,[rax+rax*4]
  407fb1:	test   eax,eax
  407fb3:	movabs r13,0x7ffffffffffffffe
  407fbd:	cmovne r13,rax
  407fc1:	mov    rax,QWORD PTR [r14+0x78]
  407fc5:	sub    rax,QWORD PTR [r14+0x70]
  407fc9:	add    QWORD PTR [r14+0x88],rax
  407fd0:	lea    rbp,[rip+0x211a1]        # 429178 <__ctype_b_loc@plt+0x26ea8>
  407fd7:	mov    r12,r14
  407fda:	mov    QWORD PTR [rsp+0x8],r14
  407fdf:	mov    QWORD PTR [rsp],rdi
  407fe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fed:	nop    DWORD PTR [rax]
  407ff0:	movzx  eax,BYTE PTR [r12+0x21]
  407ff6:	cmp    rax,0x4
  407ffa:	ja     408220 <__ctype_b_loc@plt+0x5f50>
  408000:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  408005:	add    rax,rbp
  408008:	jmp    rax
  40800a:	vxorps xmm0,xmm0,xmm0
  40800e:	vmovups XMMWORD PTR [r12+0x38],xmm0
  408015:	mov    QWORD PTR [r12+0x48],0x0
  40801e:	mov    rsi,QWORD PTR [r12+0xb0]
  408026:	test   BYTE PTR [rsi+0x9],0x3
  40802a:	je     40803c <__ctype_b_loc@plt+0x5d6c>
  40802c:	mov    rdi,r12
  40802f:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  408034:	mov    rsi,QWORD PTR [r12+0xb0]
  40803c:	cmp    DWORD PTR [rsi+0x80],0x4
  408043:	jl     408057 <__ctype_b_loc@plt+0x5d87>
  408045:	mov    rsi,QWORD PTR [rsi+0x78]
  408049:	test   BYTE PTR [rsi+0x9],0x3
  40804d:	je     408057 <__ctype_b_loc@plt+0x5d87>
  40804f:	mov    rdi,r12
  408052:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  408057:	mov    rax,QWORD PTR [r15+0x20]
  40805b:	cmp    DWORD PTR [rax+0xa8],0x4
  408062:	jl     408079 <__ctype_b_loc@plt+0x5da9>
  408064:	mov    rsi,QWORD PTR [rax+0xa0]
  40806b:	test   BYTE PTR [rsi+0x9],0x3
  40806f:	je     408079 <__ctype_b_loc@plt+0x5da9>
  408071:	mov    rdi,r12
  408074:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  408079:	mov    rdi,r12
  40807c:	call   40b6a0 <__ctype_b_loc@plt+0x93d0>
  408081:	mov    BYTE PTR [r12+0x21],0x1
  408087:	jmp    408220 <__ctype_b_loc@plt+0x5f50>
  40808c:	cmp    QWORD PTR [r12+0x50],0x0
  408092:	je     408202 <__ctype_b_loc@plt+0x5f32>
  408098:	mov    rdi,r15
  40809b:	call   40b570 <__ctype_b_loc@plt+0x92a0>
  4080a0:	mov    rcx,QWORD PTR [r12+0x80]
  4080a8:	mov    eax,0x64
  4080ad:	cmp    rcx,0x65
  4080b1:	jb     408222 <__ctype_b_loc@plt+0x5f52>
  4080b7:	add    rcx,0xffffffffffffff9c
  4080bb:	mov    QWORD PTR [r12+0x80],rcx
  4080c3:	jmp    408222 <__ctype_b_loc@plt+0x5f52>
  4080c8:	mov    rbx,QWORD PTR [r12+0x78]
  4080cd:	movsxd rsi,DWORD PTR [r12+0x24]
  4080d2:	lea    eax,[rsi+0x1]
  4080d5:	mov    DWORD PTR [r12+0x24],eax
  4080da:	shl    rsi,0x3
  4080de:	add    rsi,QWORD PTR [r12]
  4080e2:	mov    rdi,r15
  4080e5:	mov    rdx,0xfffffffffffffffd
  4080ec:	call   40b290 <__ctype_b_loc@plt+0x8fc0>
  4080f1:	mov    eax,DWORD PTR [r12+0x24]
  4080f6:	cmp    eax,DWORD PTR [r12+0xc]
  4080fb:	jl     408103 <__ctype_b_loc@plt+0x5e33>
  4080fd:	mov    BYTE PTR [r12+0x21],0x3
  408103:	mov    rax,QWORD PTR [r12+0x78]
  408108:	sub    rax,rbx
  40810b:	add    QWORD PTR [r12+0x80],rax
  408113:	mov    eax,0xa
  408118:	jmp    408222 <__ctype_b_loc@plt+0x5f52>
  40811d:	mov    rsi,QWORD PTR [r12+0x30]
  408122:	mov    rbx,QWORD PTR [r12+0x78]
  408127:	mov    edx,0x28
  40812c:	mov    rdi,r15
  40812f:	call   40b290 <__ctype_b_loc@plt+0x8fc0>
  408134:	mov    QWORD PTR [r12+0x30],rax
  408139:	cmp    QWORD PTR [rax],0x0
  40813d:	jne    4081d9 <__ctype_b_loc@plt+0x5f09>
  408143:	mov    r14,QWORD PTR [r15+0x20]
  408147:	mov    esi,DWORD PTR [r14+0xc]
  40814b:	cmp    esi,0x41
  40814e:	jl     40816d <__ctype_b_loc@plt+0x5e9d>
  408150:	mov    eax,esi
  408152:	sar    eax,0x1f
  408155:	shr    eax,0x1e
  408158:	add    eax,esi
  40815a:	sar    eax,0x2
  40815d:	cmp    DWORD PTR [r14+0x8],eax
  408161:	jae    40816d <__ctype_b_loc@plt+0x5e9d>
  408163:	shr    esi,1
  408165:	mov    rdi,r15
  408168:	call   403900 <__ctype_b_loc@plt+0x1630>
  40816d:	mov    r15,QWORD PTR [r14+0x68]
  408171:	cmp    r15,0x41
  408175:	jb     4081c3 <__ctype_b_loc@plt+0x5ef3>
  408177:	mov    QWORD PTR [rsp+0x10],rbx
  40817c:	mov    rbx,r15
  40817f:	shr    rbx,1
  408182:	mov    rsi,QWORD PTR [r14+0x58]
  408186:	mov    rax,QWORD PTR [rsp]
  40818a:	mov    rax,QWORD PTR [rax+0x20]
  40818e:	mov    rdi,QWORD PTR [rax+0x18]
  408192:	mov    rdx,r15
  408195:	mov    rcx,rbx
  408198:	mov    rbp,rax
  40819b:	call   QWORD PTR [rax+0x10]
  40819e:	test   rbx,rbx
  4081a1:	je     4081ac <__ctype_b_loc@plt+0x5edc>
  4081a3:	test   rax,rax
  4081a6:	je     40859e <__ctype_b_loc@plt+0x62ce>
  4081ac:	mov    rcx,rbx
  4081af:	sub    rcx,r15
  4081b2:	add    QWORD PTR [rbp+0x78],rcx
  4081b6:	mov    QWORD PTR [r14+0x58],rax
  4081ba:	mov    QWORD PTR [r14+0x68],rbx
  4081be:	mov    rbx,QWORD PTR [rsp+0x10]
  4081c3:	mov    BYTE PTR [r12+0x21],0x4
  4081c9:	mov    r14,QWORD PTR [rsp+0x8]
  4081ce:	mov    r15,QWORD PTR [rsp]
  4081d2:	lea    rbp,[rip+0x20f9f]        # 429178 <__ctype_b_loc@plt+0x26ea8>
  4081d9:	mov    rax,QWORD PTR [r12+0x78]
  4081de:	sub    rax,rbx
  4081e1:	add    QWORD PTR [r12+0x80],rax
  4081e9:	mov    eax,0x190
  4081ee:	jmp    408222 <__ctype_b_loc@plt+0x5f52>
  4081f0:	cmp    QWORD PTR [r12+0x38],0x0
  4081f6:	je     408243 <__ctype_b_loc@plt+0x5f73>
  4081f8:	mov    rdi,r12
  4081fb:	call   40ab90 <__ctype_b_loc@plt+0x88c0>
  408200:	jmp    408222 <__ctype_b_loc@plt+0x5f52>
  408202:	mov    BYTE PTR [r12+0x21],0x0
  408208:	mov    QWORD PTR [r12+0x88],0x0
  408214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40821e:	xchg   ax,ax
  408220:	xor    eax,eax
  408222:	mov    cl,BYTE PTR [r14+0x21]
  408226:	test   cl,cl
  408228:	je     408533 <__ctype_b_loc@plt+0x6263>
  40822e:	sub    r13,rax
  408231:	test   r13,r13
  408234:	jle    408533 <__ctype_b_loc@plt+0x6263>
  40823a:	mov    r12,QWORD PTR [r15+0x20]
  40823e:	jmp    407ff0 <__ctype_b_loc@plt+0x5d20>
  408243:	lea    rbx,[r12+0xb8]
  40824b:	mov    rbp,QWORD PTR [r12+0xd8]
  408253:	cmp    rbp,rbx
  408256:	jne    408269 <__ctype_b_loc@plt+0x5f99>
  408258:	jmp    4082a0 <__ctype_b_loc@plt+0x5fd0>
  40825a:	nop    WORD PTR [rax+rax*1+0x0]
  408260:	mov    rbp,QWORD PTR [rbp+0x20]
  408264:	cmp    rbp,rbx
  408267:	je     408298 <__ctype_b_loc@plt+0x5fc8>
  408269:	test   BYTE PTR [rbp+0x9],0x7
  40826d:	jne    408260 <__ctype_b_loc@plt+0x5f90>
  40826f:	mov    rax,QWORD PTR [rbp+0x10]
  408273:	cmp    DWORD PTR [rax+0x8],0x4
  408277:	jl     408260 <__ctype_b_loc@plt+0x5f90>
  408279:	mov    rsi,QWORD PTR [rax]
  40827c:	test   BYTE PTR [rsi+0x9],0x3
  408280:	je     408260 <__ctype_b_loc@plt+0x5f90>
  408282:	mov    rdi,r12
  408285:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40828a:	jmp    408260 <__ctype_b_loc@plt+0x5f90>
  40828c:	nop    DWORD PTR [rax+0x0]
  408290:	mov    rdi,r12
  408293:	call   40ab90 <__ctype_b_loc@plt+0x88c0>
  408298:	cmp    QWORD PTR [r12+0x38],0x0
  40829e:	jne    408290 <__ctype_b_loc@plt+0x5fc0>
  4082a0:	mov    rax,QWORD PTR [r12+0x48]
  4082a5:	mov    QWORD PTR [r12+0x38],rax
  4082aa:	mov    QWORD PTR [r12+0x48],0x0
  4082b3:	test   BYTE PTR [r15+0x9],0x3
  4082b8:	je     4082c5 <__ctype_b_loc@plt+0x5ff5>
  4082ba:	mov    rdi,r12
  4082bd:	mov    rsi,r15
  4082c0:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  4082c5:	mov    rdi,r12
  4082c8:	call   40b6a0 <__ctype_b_loc@plt+0x93d0>
  4082cd:	cmp    QWORD PTR [r12+0x38],0x0
  4082d3:	je     4082f0 <__ctype_b_loc@plt+0x6020>
  4082d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082df:	nop
  4082e0:	mov    rdi,r12
  4082e3:	call   40ab90 <__ctype_b_loc@plt+0x88c0>
  4082e8:	cmp    QWORD PTR [r12+0x38],0x0
  4082ee:	jne    4082e0 <__ctype_b_loc@plt+0x6010>
  4082f0:	mov    rax,QWORD PTR [r12+0x40]
  4082f5:	mov    QWORD PTR [r12+0x38],rax
  4082fa:	mov    QWORD PTR [r12+0x40],0x0
  408303:	test   rax,rax
  408306:	je     408320 <__ctype_b_loc@plt+0x6050>
  408308:	nop    DWORD PTR [rax+rax*1+0x0]
  408310:	mov    rdi,r12
  408313:	call   40ab90 <__ctype_b_loc@plt+0x88c0>
  408318:	cmp    QWORD PTR [r12+0x38],0x0
  40831e:	jne    408310 <__ctype_b_loc@plt+0x6040>
  408320:	mov    rdi,r15
  408323:	xor    esi,esi
  408325:	call   40b7a0 <__ctype_b_loc@plt+0x94d0>
  40832a:	mov    r15,rax
  40832d:	mov    rbx,QWORD PTR [r12+0x50]
  408332:	test   rbx,rbx
  408335:	je     408369 <__ctype_b_loc@plt+0x6099>
  408337:	nop    WORD PTR [rax+rax*1+0x0]
  408340:	mov    rbx,QWORD PTR [rbx]
  408343:	movzx  eax,BYTE PTR [rbx+0x9]
  408347:	and    al,0xf8
  408349:	movzx  ecx,BYTE PTR [r12+0x20]
  40834f:	and    cl,0x3
  408352:	or     cl,al
  408354:	mov    BYTE PTR [rbx+0x9],cl
  408357:	mov    rdi,r12
  40835a:	mov    rsi,rbx
  40835d:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  408362:	cmp    rbx,QWORD PTR [r12+0x50]
  408367:	jne    408340 <__ctype_b_loc@plt+0x6070>
  408369:	cmp    QWORD PTR [r12+0x38],0x0
  40836f:	je     408395 <__ctype_b_loc@plt+0x60c5>
  408371:	xor    r14d,r14d
  408374:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40837e:	xchg   ax,ax
  408380:	mov    rdi,r12
  408383:	call   40ab90 <__ctype_b_loc@plt+0x88c0>
  408388:	add    r14,rax
  40838b:	cmp    QWORD PTR [r12+0x38],0x0
  408391:	jne    408380 <__ctype_b_loc@plt+0x60b0>
  408393:	jmp    408398 <__ctype_b_loc@plt+0x60c8>
  408395:	xor    r14d,r14d
  408398:	mov    rax,QWORD PTR [r12+0x48]
  40839d:	test   rax,rax
  4083a0:	jne    4083bd <__ctype_b_loc@plt+0x60ed>
  4083a2:	jmp    4084ea <__ctype_b_loc@plt+0x621a>
  4083a7:	nop    WORD PTR [rax+rax*1+0x0]
  4083b0:	mov    rax,QWORD PTR [rax+0x30]
  4083b4:	test   rax,rax
  4083b7:	je     4084ea <__ctype_b_loc@plt+0x621a>
  4083bd:	movsxd rcx,DWORD PTR [rax+0x38]
  4083c1:	test   rcx,rcx
  4083c4:	je     408430 <__ctype_b_loc@plt+0x6160>
  4083c6:	mov    dl,BYTE PTR [rax+0x9]
  4083c9:	and    dl,0x10
  4083cc:	je     408430 <__ctype_b_loc@plt+0x6160>
  4083ce:	mov    rdx,rcx
  4083d1:	shl    rdx,0x4
  4083d5:	add    rdx,0xfffffffffffffff8
  4083d9:	jmp    4083ef <__ctype_b_loc@plt+0x611f>
  4083db:	nop    DWORD PTR [rax+rax*1+0x0]
  4083e0:	and    bl,0xfc
  4083e3:	mov    BYTE PTR [rbp+0x9],bl
  4083e6:	add    rdx,0xfffffffffffffff0
  4083ea:	test   rcx,rcx
  4083ed:	je     408430 <__ctype_b_loc@plt+0x6160>
  4083ef:	dec    rcx
  4083f2:	mov    rsi,QWORD PTR [rax+0x18]
  4083f6:	mov    edi,DWORD PTR [rsi+rdx*1]
  4083f9:	cmp    edi,0x4
  4083fc:	jl     4083e6 <__ctype_b_loc@plt+0x6116>
  4083fe:	mov    rbp,QWORD PTR [rsi+rdx*1-0x8]
  408403:	movzx  ebx,BYTE PTR [rbp+0x9]
  408407:	je     4083e0 <__ctype_b_loc@plt+0x6110>
  408409:	test   bl,0x3
  40840c:	jne    408418 <__ctype_b_loc@plt+0x6148>
  40840e:	cmp    edi,0x7
  408411:	jne    4083e6 <__ctype_b_loc@plt+0x6116>
  408413:	and    bl,0x8
  408416:	je     4083e6 <__ctype_b_loc@plt+0x6116>
  408418:	mov    DWORD PTR [rsi+rdx*1],0x0
  40841f:	jmp    4083e6 <__ctype_b_loc@plt+0x6116>
  408421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40842b:	nop    DWORD PTR [rax+rax*1+0x0]
  408430:	mov    cl,BYTE PTR [rax+0xb]
  408433:	mov    edx,0x1
  408438:	shlx   rdx,rdx,rcx
  40843d:	test   edx,edx
  40843f:	je     4083b0 <__ctype_b_loc@plt+0x60e0>
  408445:	movsxd rcx,edx
  408448:	movsxd rdx,edx
  40844b:	lea    rdx,[rdx+rdx*4]
  40844f:	lea    rdx,[rdx*8-0x10]
  408457:	jmp    40846d <__ctype_b_loc@plt+0x619d>
  408459:	and    bl,0xfc
  40845c:	mov    BYTE PTR [rbp+0x9],bl
  40845f:	nop
  408460:	add    rdx,0xffffffffffffffd8
  408464:	test   rcx,rcx
  408467:	je     4083b0 <__ctype_b_loc@plt+0x60e0>
  40846d:	dec    rcx
  408470:	mov    rsi,QWORD PTR [rax+0x20]
  408474:	mov    edi,DWORD PTR [rsi+rdx*1-0x10]
  408478:	test   edi,edi
  40847a:	je     408460 <__ctype_b_loc@plt+0x6190>
  40847c:	cmp    DWORD PTR [rsi+rdx*1],0x4
  408480:	jl     4084b0 <__ctype_b_loc@plt+0x61e0>
  408482:	mov    rbp,QWORD PTR [rsi+rdx*1-0x8]
  408487:	movzx  ebx,BYTE PTR [rbp+0x9]
  40848b:	jne    40849e <__ctype_b_loc@plt+0x61ce>
  40848d:	and    bl,0xfc
  408490:	mov    BYTE PTR [rbp+0x9],bl
  408493:	mov    edi,DWORD PTR [rsi+rdx*1-0x10]
  408497:	cmp    edi,0x4
  40849a:	jl     408460 <__ctype_b_loc@plt+0x6190>
  40849c:	jmp    4084b5 <__ctype_b_loc@plt+0x61e5>
  40849e:	test   bl,0x3
  4084a1:	jne    4084d0 <__ctype_b_loc@plt+0x6200>
  4084a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084ad:	nop    DWORD PTR [rax]
  4084b0:	cmp    edi,0x4
  4084b3:	jl     408460 <__ctype_b_loc@plt+0x6190>
  4084b5:	mov    rbp,QWORD PTR [rsi+rdx*1-0x18]
  4084ba:	movzx  ebx,BYTE PTR [rbp+0x9]
  4084be:	je     408459 <__ctype_b_loc@plt+0x6189>
  4084c0:	test   bl,0x3
  4084c3:	jne    4084d0 <__ctype_b_loc@plt+0x6200>
  4084c5:	cmp    edi,0x7
  4084c8:	jne    408460 <__ctype_b_loc@plt+0x6190>
  4084ca:	and    bl,0x8
  4084cd:	je     408460 <__ctype_b_loc@plt+0x6190>
  4084cf:	nop
  4084d0:	mov    DWORD PTR [rsi+rdx*1-0x10],0x0
  4084d8:	cmp    DWORD PTR [rsi+rdx*1],0x4
  4084dc:	jl     408460 <__ctype_b_loc@plt+0x6190>
  4084de:	mov    DWORD PTR [rsi+rdx*1],0xb
  4084e5:	jmp    408460 <__ctype_b_loc@plt+0x6190>
  4084ea:	xor    BYTE PTR [r12+0x20],0x3
  4084f0:	mov    DWORD PTR [r12+0x24],0x0
  4084f9:	lea    rax,[r12+0x28]
  4084fe:	mov    QWORD PTR [r12+0x30],rax
  408503:	mov    BYTE PTR [r12+0x21],0x2
  408509:	mov    rax,QWORD PTR [r12+0x78]
  40850e:	add    r14,r15
  408511:	sub    rax,r14
  408514:	mov    QWORD PTR [r12+0x80],rax
  40851c:	xor    eax,eax
  40851e:	mov    r14,QWORD PTR [rsp+0x8]
  408523:	mov    r15,QWORD PTR [rsp]
  408527:	lea    rbp,[rip+0x20c4a]        # 429178 <__ctype_b_loc@plt+0x26ea8>
  40852e:	jmp    408222 <__ctype_b_loc@plt+0x5f52>
  408533:	test   cl,cl
  408535:	je     408551 <__ctype_b_loc@plt+0x6281>
  408537:	mov    rax,QWORD PTR [r14+0x88]
  40853e:	cmp    rax,0x3ff
  408544:	ja     40857a <__ctype_b_loc@plt+0x62aa>
  408546:	mov    eax,0x400
  40854b:	add    rax,QWORD PTR [r14+0x78]
  40854f:	jmp    40858b <__ctype_b_loc@plt+0x62bb>
  408551:	mov    rax,QWORD PTR [r14+0x80]
  408558:	shr    rax,0x2
  40855c:	movabs rcx,0x28f5c28f5c28f5c3
  408566:	mul    rcx
  408569:	shr    rdx,0x2
  40856d:	movsxd rax,DWORD PTR [r14+0x90]
  408574:	imul   rax,rdx
  408578:	jmp    40858b <__ctype_b_loc@plt+0x62bb>
  40857a:	add    rax,0xfffffffffffffc00
  408580:	mov    QWORD PTR [r14+0x88],rax
  408587:	mov    rax,QWORD PTR [r14+0x78]
  40858b:	mov    QWORD PTR [r14+0x70],rax
  40858f:	add    rsp,0x18
  408593:	pop    rbx
  408594:	pop    r12
  408596:	pop    r13
  408598:	pop    r14
  40859a:	pop    r15
  40859c:	pop    rbp
  40859d:	ret    
  40859e:	mov    rax,QWORD PTR [rsp]
  4085a2:	mov    rdi,QWORD PTR [rax+0xa8]
  4085a9:	test   rdi,rdi
  4085ac:	jne    4085ec <__ctype_b_loc@plt+0x631c>
  4085ae:	mov    rax,QWORD PTR [rsp]
  4085b2:	mov    BYTE PTR [rax+0xa],0x4
  4085b6:	mov    rax,QWORD PTR [rax+0x20]
  4085ba:	cmp    QWORD PTR [rax+0x98],0x0
  4085c2:	je     4085e2 <__ctype_b_loc@plt+0x6312>
  4085c4:	mov    rbx,QWORD PTR [rsp]
  4085c8:	mov    rdi,rbx
  4085cb:	mov    esi,0x4
  4085d0:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4085d5:	mov    rax,QWORD PTR [rbx+0x20]
  4085d9:	mov    rdi,rbx
  4085dc:	call   QWORD PTR [rax+0x98]
  4085e2:	mov    edi,0x1
  4085e7:	call   402280 <exit@plt>
  4085ec:	mov    DWORD PTR [rdi+0xd0],0x4
  4085f6:	add    rdi,0x8
  4085fa:	mov    esi,0x1
  4085ff:	call   402230 <longjmp@plt>
  408604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40860e:	xchg   ax,ax
  408610:	push   rbp
  408611:	push   r15
  408613:	push   r14
  408615:	push   r13
  408617:	push   r12
  408619:	push   rbx
  40861a:	sub    rsp,0x18
  40861e:	mov    QWORD PTR [rsp+0x10],rcx
  408623:	mov    r12,rdx
  408626:	mov    r15,rsi
  408629:	mov    ecx,DWORD PTR [rsi+0x8]
  40862c:	lea    r8,[rip+0x214e5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408633:	xor    r14d,r14d
  408636:	mov    QWORD PTR [rsp+0x8],rdi
  40863b:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	cmp    ecx,0x7
  408643:	je     4086c0 <__ctype_b_loc@plt+0x63f0>
  408645:	cmp    ecx,0x5
  408648:	jne    4086d0 <__ctype_b_loc@plt+0x6400>
  40864e:	mov    r13,QWORD PTR [r15]
  408651:	mov    ebp,DWORD PTR [r12+0x8]
  408656:	mov    rax,r8
  408659:	test   ebp,ebp
  40865b:	je     4088e1 <__ctype_b_loc@plt+0x6611>
  408661:	cmp    ebp,0x3
  408664:	je     4087a5 <__ctype_b_loc@plt+0x64d5>
  40866a:	cmp    ebp,0x4
  40866d:	jne    4087e9 <__ctype_b_loc@plt+0x6519>
  408673:	mov    rcx,QWORD PTR [r12]
  408677:	mov    al,BYTE PTR [r13+0xb]
  40867b:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  408681:	cdqe   
  408683:	lea    rax,[rax+rax*4]
  408687:	shl    rax,0x3
  40868b:	add    rax,QWORD PTR [r13+0x20]
  40868f:	lea    r8,[rip+0x21482]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408696:	cmp    DWORD PTR [rax+0x18],0x4
  40869a:	je     4086b3 <__ctype_b_loc@plt+0x63e3>
  40869c:	nop    DWORD PTR [rax+0x0]
  4086a0:	mov    rax,QWORD PTR [rax+0x20]
  4086a4:	test   rax,rax
  4086a7:	je     4088de <__ctype_b_loc@plt+0x660e>
  4086ad:	cmp    DWORD PTR [rax+0x18],0x4
  4086b1:	jne    4086a0 <__ctype_b_loc@plt+0x63d0>
  4086b3:	cmp    QWORD PTR [rax+0x10],rcx
  4086b7:	jne    4086a0 <__ctype_b_loc@plt+0x63d0>
  4086b9:	jmp    4088e1 <__ctype_b_loc@plt+0x6611>
  4086be:	xchg   ax,ax
  4086c0:	mov    rax,QWORD PTR [r15]
  4086c3:	add    rax,0x10
  4086c7:	jmp    4086e1 <__ctype_b_loc@plt+0x6411>
  4086c9:	nop    DWORD PTR [rax+0x0]
  4086d0:	mov    rax,QWORD PTR [rdi+0x20]
  4086d4:	movsxd rdx,ecx
  4086d7:	lea    rax,[rax+rdx*8]
  4086db:	add    rax,0xe0
  4086e1:	mov    rdx,QWORD PTR [rax]
  4086e4:	mov    rbp,r8
  4086e7:	test   rdx,rdx
  4086ea:	je     408743 <__ctype_b_loc@plt+0x6473>
  4086ec:	mov    rax,QWORD PTR [rdi+0x20]
  4086f0:	mov    rax,QWORD PTR [rax+0x128]
  4086f7:	mov    sil,BYTE PTR [rdx+0xb]
  4086fb:	bzhi   esi,DWORD PTR [rax+0xc],esi
  408701:	movsxd rsi,esi
  408704:	lea    rbp,[rsi+rsi*4]
  408708:	shl    rbp,0x3
  40870c:	add    rbp,QWORD PTR [rdx+0x20]
  408710:	cmp    DWORD PTR [rbp+0x18],0x4
  408714:	je     40872f <__ctype_b_loc@plt+0x645f>
  408716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408720:	mov    rbp,QWORD PTR [rbp+0x20]
  408724:	test   rbp,rbp
  408727:	je     408740 <__ctype_b_loc@plt+0x6470>
  408729:	cmp    DWORD PTR [rbp+0x18],0x4
  40872d:	jne    408720 <__ctype_b_loc@plt+0x6450>
  40872f:	cmp    QWORD PTR [rbp+0x10],rax
  408733:	jne    408720 <__ctype_b_loc@plt+0x6450>
  408735:	jmp    408743 <__ctype_b_loc@plt+0x6473>
  408737:	nop    WORD PTR [rax+rax*1+0x0]
  408740:	mov    rbp,r8
  408743:	mov    eax,DWORD PTR [rbp+0x8]
  408746:	test   eax,eax
  408748:	je     408760 <__ctype_b_loc@plt+0x6490>
  40874a:	mov    ecx,eax
  40874c:	cmp    ecx,0x6
  40874f:	jne    40896c <__ctype_b_loc@plt+0x669c>
  408755:	jmp    408998 <__ctype_b_loc@plt+0x66c8>
  40875a:	nop    WORD PTR [rax+rax*1+0x0]
  408760:	movsxd rax,ecx
  408763:	lea    rcx,[rip+0x27176]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40876a:	mov    rcx,QWORD PTR [rcx+rax*8]
  40876e:	mov    rdi,QWORD PTR [rsp+0x8]
  408773:	lea    rsi,[rip+0x216be]        # 429e38 <__ctype_b_loc@plt+0x27b68>
  40877a:	lea    rdx,[rip+0x22194]        # 42a915 <__ctype_b_loc@plt+0x28645>
  408781:	xor    eax,eax
  408783:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  408788:	lea    r8,[rip+0x21389]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40878f:	mov    rdi,QWORD PTR [rsp+0x8]
  408794:	mov    ecx,DWORD PTR [rbp+0x8]
  408797:	cmp    ecx,0x6
  40879a:	jne    40896c <__ctype_b_loc@plt+0x669c>
  4087a0:	jmp    408998 <__ctype_b_loc@plt+0x66c8>
  4087a5:	vmovsd xmm1,QWORD PTR [r12]
  4087ab:	vcvttsd2si eax,xmm1
  4087af:	vcvtsi2sd xmm0,xmm2,eax
  4087b3:	vucomisd xmm1,xmm0
  4087b7:	jne    4087e9 <__ctype_b_loc@plt+0x6519>
  4087b9:	jp     4087e9 <__ctype_b_loc@plt+0x6519>
  4087bb:	lea    ecx,[rax-0x1]
  4087be:	cmp    ecx,DWORD PTR [r13+0x38]
  4087c2:	jae    408866 <__ctype_b_loc@plt+0x6596>
  4087c8:	movsxd rax,ecx
  4087cb:	shl    rax,0x4
  4087cf:	add    rax,QWORD PTR [r13+0x18]
  4087d3:	lea    r8,[rip+0x2133e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4087da:	cmp    DWORD PTR [rax+0x8],0x0
  4087de:	je     4088eb <__ctype_b_loc@plt+0x661b>
  4087e4:	jmp    408a44 <__ctype_b_loc@plt+0x6774>
  4087e9:	mov    rdi,r13
  4087ec:	mov    rsi,r12
  4087ef:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  4087f4:	mov    rdi,QWORD PTR [rsp+0x8]
  4087f9:	lea    r8,[rip+0x21318]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408800:	cmp    DWORD PTR [rax+0x18],ebp
  408803:	jne    40881e <__ctype_b_loc@plt+0x654e>
  408805:	jmp    408830 <__ctype_b_loc@plt+0x6560>
  408807:	nop    WORD PTR [rax+rax*1+0x0]
  408810:	mov    rcx,QWORD PTR [rax+0x10]
  408814:	cmp    rcx,QWORD PTR [r12]
  408818:	je     4088e1 <__ctype_b_loc@plt+0x6611>
  40881e:	mov    rax,QWORD PTR [rax+0x20]
  408822:	test   rax,rax
  408825:	je     4088de <__ctype_b_loc@plt+0x660e>
  40882b:	cmp    DWORD PTR [rax+0x18],ebp
  40882e:	jne    40881e <__ctype_b_loc@plt+0x654e>
  408830:	cmp    ebp,0x3
  408833:	ja     408810 <__ctype_b_loc@plt+0x6540>
  408835:	mov    ecx,ebp
  408837:	lea    rdx,[rip+0x2094e]        # 42918c <__ctype_b_loc@plt+0x26ebc>
  40883e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408842:	add    rcx,rdx
  408845:	jmp    rcx
  408847:	mov    ecx,DWORD PTR [rax+0x10]
  40884a:	cmp    ecx,DWORD PTR [r12]
  40884e:	jne    40881e <__ctype_b_loc@plt+0x654e>
  408850:	jmp    4088e1 <__ctype_b_loc@plt+0x6611>
  408855:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40885a:	vucomisd xmm0,QWORD PTR [r12]
  408860:	jne    40881e <__ctype_b_loc@plt+0x654e>
  408862:	jp     40881e <__ctype_b_loc@plt+0x654e>
  408864:	jmp    4088e1 <__ctype_b_loc@plt+0x6611>
  408866:	test   eax,eax
  408868:	je     4088a3 <__ctype_b_loc@plt+0x65d3>
  40886a:	vmovq  rcx,xmm0
  40886f:	mov    rax,rcx
  408872:	shr    rax,0x20
  408876:	add    eax,ecx
  408878:	mov    cl,BYTE PTR [r13+0xb]
  40887c:	mov    rdx,0xffffffffffffffff
  408883:	shlx   rcx,rdx,rcx
  408888:	or     rcx,0x1
  40888c:	xor    rcx,0xfffffffffffffffe
  408890:	xor    edx,edx
  408892:	div    rcx
  408895:	lea    rax,[rdx+rdx*4]
  408899:	shl    rax,0x3
  40889d:	add    rax,QWORD PTR [r13+0x20]
  4088a1:	jmp    4088a7 <__ctype_b_loc@plt+0x65d7>
  4088a3:	mov    rax,QWORD PTR [r13+0x20]
  4088a7:	lea    r8,[rip+0x2126a]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4088ae:	cmp    DWORD PTR [rax+0x18],0x3
  4088b2:	je     4088cf <__ctype_b_loc@plt+0x65ff>
  4088b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088be:	xchg   ax,ax
  4088c0:	mov    rax,QWORD PTR [rax+0x20]
  4088c4:	test   rax,rax
  4088c7:	je     4088de <__ctype_b_loc@plt+0x660e>
  4088c9:	cmp    DWORD PTR [rax+0x18],0x3
  4088cd:	jne    4088c0 <__ctype_b_loc@plt+0x65f0>
  4088cf:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4088d4:	vucomisd xmm1,xmm0
  4088d8:	jne    4088c0 <__ctype_b_loc@plt+0x65f0>
  4088da:	jp     4088c0 <__ctype_b_loc@plt+0x65f0>
  4088dc:	jmp    4088e1 <__ctype_b_loc@plt+0x6611>
  4088de:	mov    rax,r8
  4088e1:	cmp    DWORD PTR [rax+0x8],0x0
  4088e5:	jne    408a44 <__ctype_b_loc@plt+0x6774>
  4088eb:	mov    rdx,QWORD PTR [r13+0x10]
  4088ef:	test   rdx,rdx
  4088f2:	je     408a44 <__ctype_b_loc@plt+0x6774>
  4088f8:	mov    bl,BYTE PTR [rdx+0xa]
  4088fb:	test   bl,0x1
  4088fe:	jne    408a44 <__ctype_b_loc@plt+0x6774>
  408904:	mov    rcx,QWORD PTR [rdi+0x20]
  408908:	mov    rcx,QWORD PTR [rcx+0x128]
  40890f:	mov    sil,BYTE PTR [rdx+0xb]
  408913:	bzhi   esi,DWORD PTR [rcx+0xc],esi
  408919:	movsxd rsi,esi
  40891c:	lea    rbp,[rsi+rsi*4]
  408920:	shl    rbp,0x3
  408924:	add    rbp,QWORD PTR [rdx+0x20]
  408928:	cmp    DWORD PTR [rbp+0x18],0x4
  40892c:	je     40893f <__ctype_b_loc@plt+0x666f>
  40892e:	xchg   ax,ax
  408930:	mov    rbp,QWORD PTR [rbp+0x20]
  408934:	test   rbp,rbp
  408937:	je     408950 <__ctype_b_loc@plt+0x6680>
  408939:	cmp    DWORD PTR [rbp+0x18],0x4
  40893d:	jne    408930 <__ctype_b_loc@plt+0x6660>
  40893f:	cmp    QWORD PTR [rbp+0x10],rcx
  408943:	jne    408930 <__ctype_b_loc@plt+0x6660>
  408945:	jmp    408953 <__ctype_b_loc@plt+0x6683>
  408947:	nop    WORD PTR [rax+rax*1+0x0]
  408950:	mov    rbp,r8
  408953:	mov    ecx,DWORD PTR [rbp+0x8]
  408956:	test   ecx,ecx
  408958:	je     408a3e <__ctype_b_loc@plt+0x676e>
  40895e:	test   rbp,rbp
  408961:	je     408a44 <__ctype_b_loc@plt+0x6774>
  408967:	cmp    ecx,0x6
  40896a:	je     408998 <__ctype_b_loc@plt+0x66c8>
  40896c:	inc    r14d
  40896f:	mov    r15,rbp
  408972:	cmp    r14d,0x64
  408976:	jne    408640 <__ctype_b_loc@plt+0x6370>
  40897c:	lea    rsi,[rip+0x2155e]        # 429ee1 <__ctype_b_loc@plt+0x27c11>
  408983:	xor    eax,eax
  408985:	add    rsp,0x18
  408989:	pop    rbx
  40898a:	pop    r12
  40898c:	pop    r13
  40898e:	pop    r14
  408990:	pop    r15
  408992:	pop    rbp
  408993:	jmp    404090 <__ctype_b_loc@plt+0x1dc0>
  408998:	mov    rbx,QWORD PTR [rsp+0x10]
  40899d:	sub    rbx,QWORD PTR [rdi+0x40]
  4089a1:	mov    rax,QWORD PTR [rdi+0x10]
  4089a5:	mov    rcx,QWORD PTR [rbp+0x0]
  4089a9:	mov    QWORD PTR [rax],rcx
  4089ac:	mov    ecx,DWORD PTR [rbp+0x8]
  4089af:	mov    DWORD PTR [rax+0x8],ecx
  4089b2:	mov    rax,QWORD PTR [rdi+0x10]
  4089b6:	mov    rcx,QWORD PTR [r15]
  4089b9:	mov    QWORD PTR [rax+0x10],rcx
  4089bd:	mov    ecx,DWORD PTR [r15+0x8]
  4089c1:	mov    DWORD PTR [rax+0x18],ecx
  4089c4:	mov    rax,QWORD PTR [rdi+0x10]
  4089c8:	mov    rcx,QWORD PTR [r12]
  4089cc:	mov    QWORD PTR [rax+0x20],rcx
  4089d0:	mov    ecx,DWORD PTR [r12+0x8]
  4089d5:	mov    DWORD PTR [rax+0x28],ecx
  4089d8:	mov    rax,QWORD PTR [rdi+0x38]
  4089dc:	sub    rax,QWORD PTR [rdi+0x10]
  4089e0:	cmp    rax,0x30
  4089e4:	jg     408a04 <__ctype_b_loc@plt+0x6734>
  4089e6:	mov    eax,DWORD PTR [rdi+0x58]
  4089e9:	lea    ecx,[rax+0x3]
  4089ec:	lea    esi,[rax+rax*1]
  4089ef:	cmp    eax,0x3
  4089f2:	cmovl  esi,ecx
  4089f5:	mov    rdi,QWORD PTR [rsp+0x8]
  4089fa:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4089ff:	mov    rdi,QWORD PTR [rsp+0x8]
  408a04:	mov    rsi,QWORD PTR [rdi+0x10]
  408a08:	lea    rax,[rsi+0x30]
  408a0c:	mov    QWORD PTR [rdi+0x10],rax
  408a10:	mov    rbp,rdi
  408a13:	mov    edx,0x1
  408a18:	call   405020 <__ctype_b_loc@plt+0x2d50>
  408a1d:	mov    rax,QWORD PTR [rbp+0x10]
  408a21:	mov    rcx,QWORD PTR [rbp+0x40]
  408a25:	lea    rdx,[rax-0x10]
  408a29:	mov    QWORD PTR [rbp+0x10],rdx
  408a2d:	mov    rdx,QWORD PTR [rax-0x10]
  408a31:	mov    QWORD PTR [rcx+rbx*1],rdx
  408a35:	mov    eax,DWORD PTR [rax-0x8]
  408a38:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  408a3c:	jmp    408a55 <__ctype_b_loc@plt+0x6785>
  408a3e:	or     bl,0x1
  408a41:	mov    BYTE PTR [rdx+0xa],bl
  408a44:	mov    rcx,QWORD PTR [rax]
  408a47:	mov    rdx,QWORD PTR [rsp+0x10]
  408a4c:	mov    QWORD PTR [rdx],rcx
  408a4f:	mov    eax,DWORD PTR [rax+0x8]
  408a52:	mov    DWORD PTR [rdx+0x8],eax
  408a55:	add    rsp,0x18
  408a59:	pop    rbx
  408a5a:	pop    r12
  408a5c:	pop    r13
  408a5e:	pop    r14
  408a60:	pop    r15
  408a62:	pop    rbp
  408a63:	ret    
  408a64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a6e:	xchg   ax,ax
  408a70:	push   rbp
  408a71:	push   r15
  408a73:	push   r14
  408a75:	push   r13
  408a77:	push   r12
  408a79:	push   rbx
  408a7a:	sub    rsp,0x28
  408a7e:	mov    QWORD PTR [rsp+0x10],rcx
  408a83:	mov    r12,rdx
  408a86:	mov    r15,rsi
  408a89:	mov    r14,rdi
  408a8c:	mov    ecx,DWORD PTR [rsi+0x8]
  408a8f:	lea    r8,[rip+0x21082]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408a96:	xor    ebp,ebp
  408a98:	mov    QWORD PTR [rsp+0x8],rdi
  408a9d:	nop    DWORD PTR [rax]
  408aa0:	cmp    ecx,0x7
  408aa3:	je     408b20 <__ctype_b_loc@plt+0x6850>
  408aa5:	cmp    ecx,0x5
  408aa8:	jne    408b30 <__ctype_b_loc@plt+0x6860>
  408aae:	mov    r13,QWORD PTR [r15]
  408ab1:	mov    r14d,DWORD PTR [r12+0x8]
  408ab6:	test   r14d,r14d
  408ab9:	je     408d50 <__ctype_b_loc@plt+0x6a80>
  408abf:	cmp    r14d,0x3
  408ac3:	je     408bfe <__ctype_b_loc@plt+0x692e>
  408ac9:	cmp    r14d,0x4
  408acd:	jne    408c31 <__ctype_b_loc@plt+0x6961>
  408ad3:	mov    rcx,QWORD PTR [r12]
  408ad7:	mov    al,BYTE PTR [r13+0xb]
  408adb:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  408ae1:	cdqe   
  408ae3:	lea    rax,[rax+rax*4]
  408ae7:	shl    rax,0x3
  408aeb:	add    rax,QWORD PTR [r13+0x20]
  408aef:	cmp    DWORD PTR [rax+0x18],0x4
  408af3:	je     408b13 <__ctype_b_loc@plt+0x6843>
  408af5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408aff:	nop
  408b00:	mov    rax,QWORD PTR [rax+0x20]
  408b04:	test   rax,rax
  408b07:	je     408d50 <__ctype_b_loc@plt+0x6a80>
  408b0d:	cmp    DWORD PTR [rax+0x18],0x4
  408b11:	jne    408b00 <__ctype_b_loc@plt+0x6830>
  408b13:	cmp    QWORD PTR [rax+0x10],rcx
  408b17:	jne    408b00 <__ctype_b_loc@plt+0x6830>
  408b19:	jmp    408d1c <__ctype_b_loc@plt+0x6a4c>
  408b1e:	xchg   ax,ax
  408b20:	mov    rax,QWORD PTR [r15]
  408b23:	add    rax,0x10
  408b27:	jmp    408b41 <__ctype_b_loc@plt+0x6871>
  408b29:	nop    DWORD PTR [rax+0x0]
  408b30:	mov    rax,QWORD PTR [r14+0x20]
  408b34:	movsxd rdx,ecx
  408b37:	lea    rax,[rax+rdx*8]
  408b3b:	add    rax,0xe0
  408b41:	mov    rdx,QWORD PTR [rax]
  408b44:	mov    rbx,r8
  408b47:	test   rdx,rdx
  408b4a:	je     408ba3 <__ctype_b_loc@plt+0x68d3>
  408b4c:	mov    rax,QWORD PTR [r14+0x20]
  408b50:	mov    rax,QWORD PTR [rax+0x130]
  408b57:	mov    sil,BYTE PTR [rdx+0xb]
  408b5b:	bzhi   esi,DWORD PTR [rax+0xc],esi
  408b61:	movsxd rsi,esi
  408b64:	lea    rbx,[rsi+rsi*4]
  408b68:	shl    rbx,0x3
  408b6c:	add    rbx,QWORD PTR [rdx+0x20]
  408b70:	cmp    DWORD PTR [rbx+0x18],0x4
  408b74:	je     408b8f <__ctype_b_loc@plt+0x68bf>
  408b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b80:	mov    rbx,QWORD PTR [rbx+0x20]
  408b84:	test   rbx,rbx
  408b87:	je     408ba0 <__ctype_b_loc@plt+0x68d0>
  408b89:	cmp    DWORD PTR [rbx+0x18],0x4
  408b8d:	jne    408b80 <__ctype_b_loc@plt+0x68b0>
  408b8f:	cmp    QWORD PTR [rbx+0x10],rax
  408b93:	jne    408b80 <__ctype_b_loc@plt+0x68b0>
  408b95:	jmp    408ba3 <__ctype_b_loc@plt+0x68d3>
  408b97:	nop    WORD PTR [rax+rax*1+0x0]
  408ba0:	mov    rbx,r8
  408ba3:	mov    eax,DWORD PTR [rbx+0x8]
  408ba6:	test   eax,eax
  408ba8:	je     408bc0 <__ctype_b_loc@plt+0x68f0>
  408baa:	mov    ecx,eax
  408bac:	cmp    ecx,0x6
  408baf:	jne    408e2c <__ctype_b_loc@plt+0x6b5c>
  408bb5:	jmp    408e5e <__ctype_b_loc@plt+0x6b8e>
  408bba:	nop    WORD PTR [rax+rax*1+0x0]
  408bc0:	movsxd rax,ecx
  408bc3:	lea    rcx,[rip+0x26d16]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  408bca:	mov    rcx,QWORD PTR [rcx+rax*8]
  408bce:	mov    rdi,r14
  408bd1:	lea    rsi,[rip+0x21260]        # 429e38 <__ctype_b_loc@plt+0x27b68>
  408bd8:	lea    rdx,[rip+0x21d36]        # 42a915 <__ctype_b_loc@plt+0x28645>
  408bdf:	xor    eax,eax
  408be1:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  408be6:	lea    r8,[rip+0x20f2b]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408bed:	mov    ecx,DWORD PTR [rbx+0x8]
  408bf0:	cmp    ecx,0x6
  408bf3:	jne    408e2c <__ctype_b_loc@plt+0x6b5c>
  408bf9:	jmp    408e5e <__ctype_b_loc@plt+0x6b8e>
  408bfe:	vmovsd xmm1,QWORD PTR [r12]
  408c04:	vcvttsd2si eax,xmm1
  408c08:	vcvtsi2sd xmm0,xmm2,eax
  408c0c:	vucomisd xmm1,xmm0
  408c10:	jne    408c31 <__ctype_b_loc@plt+0x6961>
  408c12:	jp     408c31 <__ctype_b_loc@plt+0x6961>
  408c14:	lea    ecx,[rax-0x1]
  408c17:	cmp    ecx,DWORD PTR [r13+0x38]
  408c1b:	jae    408ca9 <__ctype_b_loc@plt+0x69d9>
  408c21:	movsxd rax,ecx
  408c24:	shl    rax,0x4
  408c28:	add    rax,QWORD PTR [r13+0x18]
  408c2c:	jmp    408d1c <__ctype_b_loc@plt+0x6a4c>
  408c31:	mov    rdi,r13
  408c34:	mov    rsi,r12
  408c37:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  408c3c:	lea    r8,[rip+0x20ed5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408c43:	cmp    DWORD PTR [rax+0x18],r14d
  408c47:	jne    408c5e <__ctype_b_loc@plt+0x698e>
  408c49:	jmp    408c71 <__ctype_b_loc@plt+0x69a1>
  408c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c50:	mov    rcx,QWORD PTR [rax+0x10]
  408c54:	cmp    rcx,QWORD PTR [r12]
  408c58:	je     408d1c <__ctype_b_loc@plt+0x6a4c>
  408c5e:	mov    rax,QWORD PTR [rax+0x20]
  408c62:	test   rax,rax
  408c65:	je     408d50 <__ctype_b_loc@plt+0x6a80>
  408c6b:	cmp    DWORD PTR [rax+0x18],r14d
  408c6f:	jne    408c5e <__ctype_b_loc@plt+0x698e>
  408c71:	cmp    r14d,0x3
  408c75:	ja     408c50 <__ctype_b_loc@plt+0x6980>
  408c77:	mov    ecx,r14d
  408c7a:	lea    rdx,[rip+0x2051b]        # 42919c <__ctype_b_loc@plt+0x26ecc>
  408c81:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408c85:	add    rcx,rdx
  408c88:	jmp    rcx
  408c8a:	mov    ecx,DWORD PTR [rax+0x10]
  408c8d:	cmp    ecx,DWORD PTR [r12]
  408c91:	jne    408c5e <__ctype_b_loc@plt+0x698e>
  408c93:	jmp    408d1c <__ctype_b_loc@plt+0x6a4c>
  408c98:	vmovq  xmm0,QWORD PTR [rax+0x10]
  408c9d:	vucomisd xmm0,QWORD PTR [r12]
  408ca3:	jne    408c5e <__ctype_b_loc@plt+0x698e>
  408ca5:	jp     408c5e <__ctype_b_loc@plt+0x698e>
  408ca7:	jmp    408d1c <__ctype_b_loc@plt+0x6a4c>
  408ca9:	test   eax,eax
  408cab:	je     408cec <__ctype_b_loc@plt+0x6a1c>
  408cad:	vmovq  rcx,xmm0
  408cb2:	mov    rax,rcx
  408cb5:	shr    rax,0x20
  408cb9:	add    eax,ecx
  408cbb:	mov    cl,BYTE PTR [r13+0xb]
  408cbf:	mov    rdx,0xffffffffffffffff
  408cc6:	shlx   rcx,rdx,rcx
  408ccb:	or     rcx,0x1
  408ccf:	xor    rcx,0xfffffffffffffffe
  408cd3:	xor    edx,edx
  408cd5:	div    rcx
  408cd8:	lea    rax,[rdx+rdx*4]
  408cdc:	shl    rax,0x3
  408ce0:	add    rax,QWORD PTR [r13+0x20]
  408ce4:	cmp    DWORD PTR [rax+0x18],0x3
  408ce8:	jne    408d00 <__ctype_b_loc@plt+0x6a30>
  408cea:	jmp    408d0f <__ctype_b_loc@plt+0x6a3f>
  408cec:	mov    rax,QWORD PTR [r13+0x20]
  408cf0:	cmp    DWORD PTR [rax+0x18],0x3
  408cf4:	je     408d0f <__ctype_b_loc@plt+0x6a3f>
  408cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d00:	mov    rax,QWORD PTR [rax+0x20]
  408d04:	test   rax,rax
  408d07:	je     408d50 <__ctype_b_loc@plt+0x6a80>
  408d09:	cmp    DWORD PTR [rax+0x18],0x3
  408d0d:	jne    408d00 <__ctype_b_loc@plt+0x6a30>
  408d0f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  408d14:	vucomisd xmm1,xmm0
  408d18:	jne    408d00 <__ctype_b_loc@plt+0x6a30>
  408d1a:	jp     408d00 <__ctype_b_loc@plt+0x6a30>
  408d1c:	mov    BYTE PTR [r13+0xa],0x0
  408d21:	cmp    rax,r8
  408d24:	jne    408d92 <__ctype_b_loc@plt+0x6ac2>
  408d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d30:	cmp    r14d,0x3
  408d34:	je     408d5b <__ctype_b_loc@plt+0x6a8b>
  408d36:	test   r14d,r14d
  408d39:	mov    rbx,QWORD PTR [rsp+0x8]
  408d3e:	jne    408d7d <__ctype_b_loc@plt+0x6aad>
  408d40:	mov    rdi,rbx
  408d43:	lea    rsi,[rip+0x211b9]        # 429f03 <__ctype_b_loc@plt+0x27c33>
  408d4a:	jmp    408d76 <__ctype_b_loc@plt+0x6aa6>
  408d4c:	nop    DWORD PTR [rax+0x0]
  408d50:	mov    BYTE PTR [r13+0xa],0x0
  408d55:	cmp    r14d,0x3
  408d59:	jne    408d36 <__ctype_b_loc@plt+0x6a66>
  408d5b:	vmovq  xmm0,QWORD PTR [r12]
  408d61:	vucomisd xmm0,xmm0
  408d65:	mov    rbx,QWORD PTR [rsp+0x8]
  408d6a:	jnp    408d7d <__ctype_b_loc@plt+0x6aad>
  408d6c:	mov    rdi,rbx
  408d6f:	lea    rsi,[rip+0x211a0]        # 429f16 <__ctype_b_loc@plt+0x27c46>
  408d76:	xor    eax,eax
  408d78:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  408d7d:	mov    rdi,rbx
  408d80:	mov    rsi,r13
  408d83:	mov    rdx,r12
  408d86:	call   409b60 <__ctype_b_loc@plt+0x7890>
  408d8b:	lea    r8,[rip+0x20d86]        # 429b18 <__ctype_b_loc@plt+0x27848>
  408d92:	cmp    DWORD PTR [rax+0x8],0x0
  408d96:	mov    r14,QWORD PTR [rsp+0x8]
  408d9b:	jne    408ef0 <__ctype_b_loc@plt+0x6c20>
  408da1:	mov    rdx,QWORD PTR [r13+0x10]
  408da5:	test   rdx,rdx
  408da8:	je     408ef0 <__ctype_b_loc@plt+0x6c20>
  408dae:	mov    sil,BYTE PTR [rdx+0xa]
  408db2:	test   sil,0x2
  408db6:	jne    408ef0 <__ctype_b_loc@plt+0x6c20>
  408dbc:	mov    rcx,QWORD PTR [r14+0x20]
  408dc0:	mov    rcx,QWORD PTR [rcx+0x130]
  408dc7:	mov    dil,BYTE PTR [rdx+0xb]
  408dcb:	bzhi   edi,DWORD PTR [rcx+0xc],edi
  408dd1:	movsxd rdi,edi
  408dd4:	lea    rbx,[rdi+rdi*4]
  408dd8:	shl    rbx,0x3
  408ddc:	add    rbx,QWORD PTR [rdx+0x20]
  408de0:	cmp    DWORD PTR [rbx+0x18],0x4
  408de4:	je     408dff <__ctype_b_loc@plt+0x6b2f>
  408de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408df0:	mov    rbx,QWORD PTR [rbx+0x20]
  408df4:	test   rbx,rbx
  408df7:	je     408e10 <__ctype_b_loc@plt+0x6b40>
  408df9:	cmp    DWORD PTR [rbx+0x18],0x4
  408dfd:	jne    408df0 <__ctype_b_loc@plt+0x6b20>
  408dff:	cmp    QWORD PTR [rbx+0x10],rcx
  408e03:	jne    408df0 <__ctype_b_loc@plt+0x6b20>
  408e05:	jmp    408e13 <__ctype_b_loc@plt+0x6b43>
  408e07:	nop    WORD PTR [rax+rax*1+0x0]
  408e10:	mov    rbx,r8
  408e13:	mov    ecx,DWORD PTR [rbx+0x8]
  408e16:	test   ecx,ecx
  408e18:	je     408ee8 <__ctype_b_loc@plt+0x6c18>
  408e1e:	test   rbx,rbx
  408e21:	je     408ef0 <__ctype_b_loc@plt+0x6c20>
  408e27:	cmp    ecx,0x6
  408e2a:	je     408e5e <__ctype_b_loc@plt+0x6b8e>
  408e2c:	mov    rax,QWORD PTR [rbx]
  408e2f:	mov    QWORD PTR [rsp+0x18],rax
  408e34:	mov    DWORD PTR [rsp+0x20],ecx
  408e38:	inc    ebp
  408e3a:	lea    r15,[rsp+0x18]
  408e3f:	cmp    ebp,0x64
  408e42:	jne    408aa0 <__ctype_b_loc@plt+0x67d0>
  408e48:	lea    rsi,[rip+0x210a3]        # 429ef2 <__ctype_b_loc@plt+0x27c22>
  408e4f:	mov    rdi,r14
  408e52:	xor    eax,eax
  408e54:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  408e59:	jmp    408f33 <__ctype_b_loc@plt+0x6c63>
  408e5e:	mov    rax,QWORD PTR [r14+0x10]
  408e62:	mov    rcx,QWORD PTR [rbx]
  408e65:	mov    QWORD PTR [rax],rcx
  408e68:	mov    ecx,DWORD PTR [rbx+0x8]
  408e6b:	mov    DWORD PTR [rax+0x8],ecx
  408e6e:	mov    rax,QWORD PTR [r14+0x10]
  408e72:	mov    rcx,QWORD PTR [r15]
  408e75:	mov    QWORD PTR [rax+0x10],rcx
  408e79:	mov    ecx,DWORD PTR [r15+0x8]
  408e7d:	mov    DWORD PTR [rax+0x18],ecx
  408e80:	mov    rax,QWORD PTR [r14+0x10]
  408e84:	mov    rcx,QWORD PTR [r12]
  408e88:	mov    QWORD PTR [rax+0x20],rcx
  408e8c:	mov    ecx,DWORD PTR [r12+0x8]
  408e91:	mov    DWORD PTR [rax+0x28],ecx
  408e94:	mov    rax,QWORD PTR [r14+0x10]
  408e98:	mov    rdx,QWORD PTR [rsp+0x10]
  408e9d:	mov    rcx,QWORD PTR [rdx]
  408ea0:	mov    QWORD PTR [rax+0x30],rcx
  408ea4:	mov    ecx,DWORD PTR [rdx+0x8]
  408ea7:	mov    DWORD PTR [rax+0x38],ecx
  408eaa:	mov    rax,QWORD PTR [r14+0x38]
  408eae:	sub    rax,QWORD PTR [r14+0x10]
  408eb2:	cmp    rax,0x40
  408eb6:	jg     408ed0 <__ctype_b_loc@plt+0x6c00>
  408eb8:	mov    eax,DWORD PTR [r14+0x58]
  408ebc:	lea    ecx,[rax+rax*1]
  408ebf:	lea    esi,[rax+0x4]
  408ec2:	cmp    eax,0x4
  408ec5:	cmovge esi,ecx
  408ec8:	mov    rdi,r14
  408ecb:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  408ed0:	mov    rsi,QWORD PTR [r14+0x10]
  408ed4:	lea    rax,[rsi+0x40]
  408ed8:	mov    QWORD PTR [r14+0x10],rax
  408edc:	mov    rdi,r14
  408edf:	xor    edx,edx
  408ee1:	call   405020 <__ctype_b_loc@plt+0x2d50>
  408ee6:	jmp    408f33 <__ctype_b_loc@plt+0x6c63>
  408ee8:	or     sil,0x2
  408eec:	mov    BYTE PTR [rdx+0xa],sil
  408ef0:	mov    rdx,QWORD PTR [rsp+0x10]
  408ef5:	mov    rcx,QWORD PTR [rdx]
  408ef8:	mov    QWORD PTR [rax],rcx
  408efb:	mov    ecx,DWORD PTR [rdx+0x8]
  408efe:	mov    DWORD PTR [rax+0x8],ecx
  408f01:	mov    BYTE PTR [r13+0xa],0x0
  408f06:	cmp    DWORD PTR [rdx+0x8],0x4
  408f0a:	jl     408f33 <__ctype_b_loc@plt+0x6c63>
  408f0c:	mov    rax,QWORD PTR [rdx]
  408f0f:	test   BYTE PTR [rax+0x9],0x3
  408f13:	je     408f33 <__ctype_b_loc@plt+0x6c63>
  408f15:	mov    al,BYTE PTR [r13+0x9]
  408f19:	test   al,0x4
  408f1b:	je     408f33 <__ctype_b_loc@plt+0x6c63>
  408f1d:	mov    rcx,QWORD PTR [r14+0x20]
  408f21:	and    al,0xfb
  408f23:	mov    BYTE PTR [r13+0x9],al
  408f27:	mov    rax,QWORD PTR [rcx+0x40]
  408f2b:	mov    QWORD PTR [r13+0x30],rax
  408f2f:	mov    QWORD PTR [rcx+0x40],r13
  408f33:	add    rsp,0x28
  408f37:	pop    rbx
  408f38:	pop    r12
  408f3a:	pop    r13
  408f3c:	pop    r14
  408f3e:	pop    r15
  408f40:	pop    rbp
  408f41:	ret    
  408f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f4c:	nop    DWORD PTR [rax+0x0]
  408f50:	push   rbp
  408f51:	push   r15
  408f53:	push   r14
  408f55:	push   r13
  408f57:	push   r12
  408f59:	push   rbx
  408f5a:	sub    rsp,0x68
  408f5e:	mov    r12,rcx
  408f61:	mov    r15,rdx
  408f64:	mov    rbx,rsi
  408f67:	mov    r14,rdi
  408f6a:	mov    eax,DWORD PTR [rdx+0x8]
  408f6d:	mov    r13,rdx
  408f70:	cmp    eax,0x3
  408f73:	je     409059 <__ctype_b_loc@plt+0x6d89>
  408f79:	cmp    eax,0x4
  408f7c:	jne    409149 <__ctype_b_loc@plt+0x6e79>
  408f82:	mov    QWORD PTR [rsp+0x8],r8
  408f87:	mov    QWORD PTR [rsp+0x20],rbx
  408f8c:	mov    rbp,QWORD PTR [r15]
  408f8f:	add    rbp,0x18
  408f93:	lea    rsi,[rsp+0x10]
  408f98:	mov    rdi,rbp
  408f9b:	call   4020b0 <strtod@plt>
  408fa0:	mov    rbx,QWORD PTR [rsp+0x10]
  408fa5:	cmp    rbx,rbp
  408fa8:	je     40913b <__ctype_b_loc@plt+0x6e6b>
  408fae:	mov    r13b,BYTE PTR [rbx]
  408fb1:	mov    eax,r13d
  408fb4:	or     al,0x20
  408fb6:	cmp    al,0x78
  408fb8:	jne    408fed <__ctype_b_loc@plt+0x6d1d>
  408fba:	lea    rsi,[rsp+0x10]
  408fbf:	mov    rdi,rbp
  408fc2:	mov    edx,0x10
  408fc7:	call   402250 <strtoul@plt>
  408fcc:	vmovq  xmm0,rax
  408fd1:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x20c97]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  408fd9:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x20c9f]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  408fe1:	vhaddpd xmm0,xmm0,xmm0
  408fe5:	mov    rbx,QWORD PTR [rsp+0x10]
  408fea:	mov    r13b,BYTE PTR [rbx]
  408fed:	test   r13b,r13b
  408ff0:	je     40903c <__ctype_b_loc@plt+0x6d6c>
  408ff2:	vmovapd XMMWORD PTR [rsp+0x30],xmm0
  408ff8:	call   4022d0 <__ctype_b_loc@plt>
  408ffd:	mov    rax,QWORD PTR [rax]
  409000:	movzx  ecx,r13b
  409004:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  409009:	je     40913b <__ctype_b_loc@plt+0x6e6b>
  40900f:	inc    rbx
  409012:	mov    r8,QWORD PTR [rsp+0x8]
  409017:	vmovapd xmm0,XMMWORD PTR [rsp+0x30]
  40901d:	nop    DWORD PTR [rax]
  409020:	movzx  ecx,BYTE PTR [rbx]
  409023:	inc    rbx
  409026:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40902b:	jne    409020 <__ctype_b_loc@plt+0x6d50>
  40902d:	test   cl,cl
  40902f:	mov    rbx,QWORD PTR [rsp+0x20]
  409034:	jne    409145 <__ctype_b_loc@plt+0x6e75>
  40903a:	jmp    409046 <__ctype_b_loc@plt+0x6d76>
  40903c:	mov    rbx,QWORD PTR [rsp+0x20]
  409041:	mov    r8,QWORD PTR [rsp+0x8]
  409046:	vmovsd QWORD PTR [rsp+0x40],xmm0
  40904c:	mov    DWORD PTR [rsp+0x48],0x3
  409054:	lea    r13,[rsp+0x40]
  409059:	mov    eax,DWORD PTR [r12+0x8]
  40905e:	cmp    eax,0x4
  409061:	je     40909f <__ctype_b_loc@plt+0x6dcf>
  409063:	cmp    eax,0x3
  409066:	jne    409145 <__ctype_b_loc@plt+0x6e75>
  40906c:	vmovsd xmm2,QWORD PTR [r12]
  409072:	add    r8d,0xfffffffb
  409076:	cmp    r8d,0x6
  40907a:	ja     4094a9 <__ctype_b_loc@plt+0x71d9>
  409080:	vmovsd xmm0,QWORD PTR [r13+0x0]
  409086:	lea    rax,[rip+0x2011f]        # 4291ac <__ctype_b_loc@plt+0x26edc>
  40908d:	movsxd rcx,DWORD PTR [rax+r8*4]
  409091:	add    rcx,rax
  409094:	jmp    rcx
  409096:	vaddsd xmm0,xmm0,xmm2
  40909a:	jmp    40949e <__ctype_b_loc@plt+0x71ce>
  40909f:	mov    QWORD PTR [rsp+0x8],r8
  4090a4:	mov    QWORD PTR [rsp+0x20],rbx
  4090a9:	mov    rbp,QWORD PTR [r12]
  4090ad:	add    rbp,0x18
  4090b1:	lea    rsi,[rsp+0x10]
  4090b6:	mov    rdi,rbp
  4090b9:	call   4020b0 <strtod@plt>
  4090be:	mov    rbx,QWORD PTR [rsp+0x10]
  4090c3:	cmp    rbx,rbp
  4090c6:	je     40913b <__ctype_b_loc@plt+0x6e6b>
  4090c8:	mov    QWORD PTR [rsp+0x30],r12
  4090cd:	mov    r12b,BYTE PTR [rbx]
  4090d0:	mov    eax,r12d
  4090d3:	or     al,0x20
  4090d5:	cmp    al,0x78
  4090d7:	jne    40940c <__ctype_b_loc@plt+0x713c>
  4090dd:	lea    rsi,[rsp+0x10]
  4090e2:	mov    rdi,rbp
  4090e5:	mov    edx,0x10
  4090ea:	call   402250 <strtoul@plt>
  4090ef:	vmovq  xmm0,rax
  4090f4:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x20b74]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  4090fc:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x20b7c]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  409104:	vhaddpd xmm2,xmm0,xmm0
  409108:	mov    rbx,QWORD PTR [rsp+0x10]
  40910d:	mov    r12b,BYTE PTR [rbx]
  409110:	test   r12b,r12b
  409113:	je     409419 <__ctype_b_loc@plt+0x7149>
  409119:	vmovapd XMMWORD PTR [rsp+0x50],xmm2
  40911f:	call   4022d0 <__ctype_b_loc@plt>
  409124:	mov    rax,QWORD PTR [rax]
  409127:	movzx  ecx,r12b
  40912b:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  409130:	jne    409438 <__ctype_b_loc@plt+0x7168>
  409136:	mov    r12,QWORD PTR [rsp+0x30]
  40913b:	mov    rbx,QWORD PTR [rsp+0x20]
  409140:	mov    r8,QWORD PTR [rsp+0x8]
  409145:	mov    eax,DWORD PTR [r15+0x8]
  409149:	cmp    eax,0x7
  40914c:	je     409153 <__ctype_b_loc@plt+0x6e83>
  40914e:	cmp    eax,0x5
  409151:	jne    40915c <__ctype_b_loc@plt+0x6e8c>
  409153:	mov    rcx,QWORD PTR [r15]
  409156:	add    rcx,0x10
  40915a:	jmp    40916e <__ctype_b_loc@plt+0x6e9e>
  40915c:	mov    rcx,QWORD PTR [r14+0x20]
  409160:	movsxd rdx,eax
  409163:	lea    rcx,[rcx+rdx*8]
  409167:	add    rcx,0xe0
  40916e:	mov    rdi,QWORD PTR [rcx]
  409171:	lea    rcx,[rip+0x209a0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  409178:	test   rdi,rdi
  40917b:	je     4091c8 <__ctype_b_loc@plt+0x6ef8>
  40917d:	mov    rdx,QWORD PTR [r14+0x20]
  409181:	mov    esi,r8d
  409184:	mov    rdx,QWORD PTR [rdx+rsi*8+0x128]
  40918c:	mov    sil,BYTE PTR [rdi+0xb]
  409190:	bzhi   esi,DWORD PTR [rdx+0xc],esi
  409196:	movsxd rsi,esi
  409199:	lea    rsi,[rsi+rsi*4]
  40919d:	shl    rsi,0x3
  4091a1:	add    rsi,QWORD PTR [rdi+0x20]
  4091a5:	cmp    DWORD PTR [rsi+0x18],0x4
  4091a9:	je     4091bf <__ctype_b_loc@plt+0x6eef>
  4091ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4091b0:	mov    rsi,QWORD PTR [rsi+0x20]
  4091b4:	test   rsi,rsi
  4091b7:	je     4091c8 <__ctype_b_loc@plt+0x6ef8>
  4091b9:	cmp    DWORD PTR [rsi+0x18],0x4
  4091bd:	jne    4091b0 <__ctype_b_loc@plt+0x6ee0>
  4091bf:	cmp    QWORD PTR [rsi+0x10],rdx
  4091c3:	jne    4091b0 <__ctype_b_loc@plt+0x6ee0>
  4091c5:	mov    rcx,rsi
  4091c8:	cmp    DWORD PTR [rcx+0x8],0x0
  4091cc:	je     409279 <__ctype_b_loc@plt+0x6fa9>
  4091d2:	cmp    DWORD PTR [rcx+0x8],0x0
  4091d6:	je     409316 <__ctype_b_loc@plt+0x7046>
  4091dc:	sub    rbx,QWORD PTR [r14+0x40]
  4091e0:	mov    rax,QWORD PTR [r14+0x10]
  4091e4:	mov    rdx,QWORD PTR [rcx]
  4091e7:	mov    QWORD PTR [rax],rdx
  4091ea:	mov    ecx,DWORD PTR [rcx+0x8]
  4091ed:	mov    DWORD PTR [rax+0x8],ecx
  4091f0:	mov    rax,QWORD PTR [r14+0x10]
  4091f4:	mov    rcx,QWORD PTR [r15]
  4091f7:	mov    QWORD PTR [rax+0x10],rcx
  4091fb:	mov    ecx,DWORD PTR [r15+0x8]
  4091ff:	mov    DWORD PTR [rax+0x18],ecx
  409202:	mov    rax,QWORD PTR [r14+0x10]
  409206:	mov    rcx,QWORD PTR [r12]
  40920a:	mov    QWORD PTR [rax+0x20],rcx
  40920e:	mov    ecx,DWORD PTR [r12+0x8]
  409213:	mov    DWORD PTR [rax+0x28],ecx
  409216:	mov    rax,QWORD PTR [r14+0x38]
  40921a:	sub    rax,QWORD PTR [r14+0x10]
  40921e:	cmp    rax,0x30
  409222:	jg     40923c <__ctype_b_loc@plt+0x6f6c>
  409224:	mov    eax,DWORD PTR [r14+0x58]
  409228:	lea    ecx,[rax+rax*1]
  40922b:	lea    esi,[rax+0x3]
  40922e:	cmp    eax,0x3
  409231:	cmovge esi,ecx
  409234:	mov    rdi,r14
  409237:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  40923c:	mov    rsi,QWORD PTR [r14+0x10]
  409240:	lea    rax,[rsi+0x30]
  409244:	mov    QWORD PTR [r14+0x10],rax
  409248:	mov    rdi,r14
  40924b:	mov    edx,0x1
  409250:	call   405020 <__ctype_b_loc@plt+0x2d50>
  409255:	mov    rax,QWORD PTR [r14+0x10]
  409259:	mov    rcx,QWORD PTR [r14+0x40]
  40925d:	lea    rdx,[rax-0x10]
  409261:	mov    QWORD PTR [r14+0x10],rdx
  409265:	mov    rdx,QWORD PTR [rax-0x10]
  409269:	mov    QWORD PTR [rcx+rbx*1],rdx
  40926d:	mov    eax,DWORD PTR [rax-0x8]
  409270:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  409274:	jmp    4094a9 <__ctype_b_loc@plt+0x71d9>
  409279:	movsxd rcx,DWORD PTR [r12+0x8]
  40927e:	cmp    rcx,0x7
  409282:	je     409289 <__ctype_b_loc@plt+0x6fb9>
  409284:	cmp    ecx,0x5
  409287:	jne    409293 <__ctype_b_loc@plt+0x6fc3>
  409289:	mov    rcx,QWORD PTR [r12]
  40928d:	add    rcx,0x10
  409291:	jmp    4092a2 <__ctype_b_loc@plt+0x6fd2>
  409293:	mov    rdx,QWORD PTR [r14+0x20]
  409297:	lea    rcx,[rdx+rcx*8]
  40929b:	add    rcx,0xe0
  4092a2:	mov    rdi,QWORD PTR [rcx]
  4092a5:	lea    rcx,[rip+0x2086c]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4092ac:	test   rdi,rdi
  4092af:	je     4091d2 <__ctype_b_loc@plt+0x6f02>
  4092b5:	mov    rdx,QWORD PTR [r14+0x20]
  4092b9:	mov    esi,r8d
  4092bc:	mov    rdx,QWORD PTR [rdx+rsi*8+0x128]
  4092c4:	mov    sil,BYTE PTR [rdi+0xb]
  4092c8:	bzhi   esi,DWORD PTR [rdx+0xc],esi
  4092ce:	movsxd rsi,esi
  4092d1:	lea    rsi,[rsi+rsi*4]
  4092d5:	shl    rsi,0x3
  4092d9:	add    rsi,QWORD PTR [rdi+0x20]
  4092dd:	cmp    DWORD PTR [rsi+0x18],0x4
  4092e1:	je     409303 <__ctype_b_loc@plt+0x7033>
  4092e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092ed:	nop    DWORD PTR [rax]
  4092f0:	mov    rsi,QWORD PTR [rsi+0x20]
  4092f4:	test   rsi,rsi
  4092f7:	je     4091d2 <__ctype_b_loc@plt+0x6f02>
  4092fd:	cmp    DWORD PTR [rsi+0x18],0x4
  409301:	jne    4092f0 <__ctype_b_loc@plt+0x7020>
  409303:	cmp    QWORD PTR [rsi+0x10],rdx
  409307:	jne    4092f0 <__ctype_b_loc@plt+0x7020>
  409309:	mov    rcx,rsi
  40930c:	cmp    DWORD PTR [rcx+0x8],0x0
  409310:	jne    4091dc <__ctype_b_loc@plt+0x6f0c>
  409316:	mov    QWORD PTR [rsp+0x30],r12
  40931b:	mov    r12,r15
  40931e:	cmp    eax,0x3
  409321:	je     4093d4 <__ctype_b_loc@plt+0x7104>
  409327:	cmp    eax,0x4
  40932a:	jne    4093d1 <__ctype_b_loc@plt+0x7101>
  409330:	mov    rbp,QWORD PTR [r15]
  409333:	add    rbp,0x18
  409337:	lea    r12,[rsp+0x10]
  40933c:	mov    rdi,rbp
  40933f:	mov    rsi,r12
  409342:	call   4020b0 <strtod@plt>
  409347:	mov    rbx,QWORD PTR [rsp+0x10]
  40934c:	cmp    rbx,rbp
  40934f:	je     4093d1 <__ctype_b_loc@plt+0x7101>
  409355:	mov    r13b,BYTE PTR [rbx]
  409358:	mov    eax,r13d
  40935b:	or     al,0x20
  40935d:	cmp    al,0x78
  40935f:	jne    409394 <__ctype_b_loc@plt+0x70c4>
  409361:	lea    rsi,[rsp+0x10]
  409366:	mov    rdi,rbp
  409369:	mov    edx,0x10
  40936e:	call   402250 <strtoul@plt>
  409373:	vmovq  xmm0,rax
  409378:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x208f0]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  409380:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x208f8]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  409388:	vhaddpd xmm0,xmm0,xmm0
  40938c:	mov    rbx,QWORD PTR [rsp+0x10]
  409391:	mov    r13b,BYTE PTR [rbx]
  409394:	test   r13b,r13b
  409397:	je     409428 <__ctype_b_loc@plt+0x7158>
  40939d:	vmovapd XMMWORD PTR [rsp+0x20],xmm0
  4093a3:	call   4022d0 <__ctype_b_loc@plt>
  4093a8:	mov    rax,QWORD PTR [rax]
  4093ab:	movzx  ecx,r13b
  4093af:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4093b4:	je     4093d1 <__ctype_b_loc@plt+0x7101>
  4093b6:	inc    rbx
  4093b9:	vmovapd xmm0,XMMWORD PTR [rsp+0x20]
  4093bf:	nop
  4093c0:	movzx  ecx,BYTE PTR [rbx]
  4093c3:	inc    rbx
  4093c6:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4093cb:	jne    4093c0 <__ctype_b_loc@plt+0x70f0>
  4093cd:	test   cl,cl
  4093cf:	je     409428 <__ctype_b_loc@plt+0x7158>
  4093d1:	xor    r12d,r12d
  4093d4:	test   r12,r12
  4093d7:	mov    rax,QWORD PTR [rsp+0x30]
  4093dc:	cmove  rax,r15
  4093e0:	movsxd rax,DWORD PTR [rax+0x8]
  4093e4:	lea    rcx,[rip+0x264f5]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4093eb:	mov    rcx,QWORD PTR [rcx+rax*8]
  4093ef:	lea    rsi,[rip+0x20a42]        # 429e38 <__ctype_b_loc@plt+0x27b68>
  4093f6:	lea    rdx,[rip+0x20b2c]        # 429f29 <__ctype_b_loc@plt+0x27c59>
  4093fd:	mov    rdi,r14
  409400:	xor    eax,eax
  409402:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  409407:	jmp    4094a9 <__ctype_b_loc@plt+0x71d9>
  40940c:	vmovapd xmm2,xmm0
  409410:	test   r12b,r12b
  409413:	jne    409119 <__ctype_b_loc@plt+0x6e49>
  409419:	mov    rbx,QWORD PTR [rsp+0x20]
  40941e:	mov    r8,QWORD PTR [rsp+0x8]
  409423:	jmp    409072 <__ctype_b_loc@plt+0x6da2>
  409428:	vmovsd QWORD PTR [rsp+0x10],xmm0
  40942e:	mov    DWORD PTR [rsp+0x18],0x3
  409436:	jmp    4093d4 <__ctype_b_loc@plt+0x7104>
  409438:	inc    rbx
  40943b:	mov    r12,QWORD PTR [rsp+0x30]
  409440:	mov    r8,QWORD PTR [rsp+0x8]
  409445:	vmovapd xmm2,XMMWORD PTR [rsp+0x50]
  40944b:	nop    DWORD PTR [rax+rax*1+0x0]
  409450:	movzx  ecx,BYTE PTR [rbx]
  409453:	inc    rbx
  409456:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40945b:	jne    409450 <__ctype_b_loc@plt+0x7180>
  40945d:	test   cl,cl
  40945f:	mov    rbx,QWORD PTR [rsp+0x20]
  409464:	jne    409145 <__ctype_b_loc@plt+0x6e75>
  40946a:	jmp    409072 <__ctype_b_loc@plt+0x6da2>
  40946f:	vsubsd xmm0,xmm0,xmm2
  409473:	jmp    40949e <__ctype_b_loc@plt+0x71ce>
  409475:	vmulsd xmm0,xmm0,xmm2
  409479:	jmp    40949e <__ctype_b_loc@plt+0x71ce>
  40947b:	vdivsd xmm0,xmm0,xmm2
  40947f:	jmp    40949e <__ctype_b_loc@plt+0x71ce>
  409481:	vdivsd xmm1,xmm0,xmm2
  409485:	vroundsd xmm1,xmm1,xmm1,0x9
  40948b:	vmulsd xmm1,xmm2,xmm1
  40948f:	vsubsd xmm0,xmm0,xmm1
  409493:	jmp    40949e <__ctype_b_loc@plt+0x71ce>
  409495:	vmovapd xmm1,xmm2
  409499:	call   4020c0 <pow@plt>
  40949e:	vmovsd QWORD PTR [rbx],xmm0
  4094a2:	mov    DWORD PTR [rbx+0x8],0x3
  4094a9:	add    rsp,0x68
  4094ad:	pop    rbx
  4094ae:	pop    r12
  4094b0:	pop    r13
  4094b2:	pop    r14
  4094b4:	pop    r15
  4094b6:	pop    rbp
  4094b7:	ret    
  4094b8:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x207d0]        # 429c90 <__ctype_b_loc@plt+0x279c0>
  4094c0:	vmovlpd QWORD PTR [rbx],xmm0
  4094c4:	jmp    4094a2 <__ctype_b_loc@plt+0x71d2>
  4094c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094d0:	push   r14
  4094d2:	push   rbx
  4094d3:	mov    r9d,DWORD PTR [rdi+0x38]
  4094d7:	test   r9d,r9d
  4094da:	je     4094f3 <__ctype_b_loc@plt+0x7223>
  4094dc:	mov    rax,QWORD PTR [rdi+0x18]
  4094e0:	lea    ecx,[r9-0x1]
  4094e4:	shl    rcx,0x4
  4094e8:	cmp    DWORD PTR [rax+rcx*1+0x8],0x0
  4094ed:	je     40966d <__ctype_b_loc@plt+0x739d>
  4094f3:	mov    r8,QWORD PTR [rdi+0x20]
  4094f7:	lea    rax,[rip+0x2062a]        # 429b28 <__ctype_b_loc@plt+0x27858>
  4094fe:	cmp    r8,rax
  409501:	je     409665 <__ctype_b_loc@plt+0x7395>
  409507:	lea    eax,[r9+0x1]
  40950b:	lea    r10,[rip+0x20606]        # 429b18 <__ctype_b_loc@plt+0x27848>
  409512:	mov    r11,0xffffffffffffffff
  409519:	mov    esi,r9d
  40951c:	nop    DWORD PTR [rax+0x0]
  409520:	mov    ecx,eax
  409522:	lea    eax,[rcx-0x1]
  409525:	cmp    eax,r9d
  409528:	jae    409540 <__ctype_b_loc@plt+0x7270>
  40952a:	cdqe   
  40952c:	shl    rax,0x4
  409530:	add    rax,QWORD PTR [rdi+0x18]
  409534:	cmp    DWORD PTR [rax+0x8],0x0
  409538:	jne    4095ad <__ctype_b_loc@plt+0x72dd>
  40953a:	jmp    4096ab <__ctype_b_loc@plt+0x73db>
  40953f:	nop
  409540:	vcvtsi2sd xmm0,xmm2,ecx
  409544:	mov    rax,r8
  409547:	test   ecx,ecx
  409549:	je     409589 <__ctype_b_loc@plt+0x72b9>
  40954b:	vmovq  rdx,xmm0
  409550:	mov    rax,rdx
  409553:	shr    rax,0x20
  409557:	add    eax,edx
  409559:	movzx  edx,BYTE PTR [rdi+0xb]
  40955d:	shlx   rbx,r11,rdx
  409562:	or     rbx,0x1
  409566:	xor    rbx,0xfffffffffffffffe
  40956a:	xor    edx,edx
  40956c:	div    rbx
  40956f:	lea    rax,[rdx+rdx*4]
  409573:	lea    rax,[r8+rax*8]
  409577:	cmp    DWORD PTR [rax+0x18],0x3
  40957b:	je     40958f <__ctype_b_loc@plt+0x72bf>
  40957d:	nop    DWORD PTR [rax]
  409580:	mov    rax,QWORD PTR [rax+0x20]
  409584:	test   rax,rax
  409587:	je     4095a0 <__ctype_b_loc@plt+0x72d0>
  409589:	cmp    DWORD PTR [rax+0x18],0x3
  40958d:	jne    409580 <__ctype_b_loc@plt+0x72b0>
  40958f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  409594:	vucomisd xmm1,xmm0
  409598:	jne    409580 <__ctype_b_loc@plt+0x72b0>
  40959a:	jp     409580 <__ctype_b_loc@plt+0x72b0>
  40959c:	jmp    4095a3 <__ctype_b_loc@plt+0x72d3>
  40959e:	xchg   ax,ax
  4095a0:	mov    rax,r10
  4095a3:	cmp    DWORD PTR [rax+0x8],0x0
  4095a7:	je     4096ab <__ctype_b_loc@plt+0x73db>
  4095ad:	lea    eax,[rcx+rcx*1]
  4095b0:	mov    esi,ecx
  4095b2:	cmp    eax,0x7ffffffe
  4095b7:	jb     409520 <__ctype_b_loc@plt+0x7250>
  4095bd:	mov    ecx,0x1
  4095c2:	lea    r10,[rip+0x2054f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4095c9:	mov    r11,0xffffffffffffffff
  4095d0:	jmp    4095f7 <__ctype_b_loc@plt+0x7327>
  4095d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095dc:	nop    DWORD PTR [rax+0x0]
  4095e0:	movsxd rax,esi
  4095e3:	shl    rax,0x4
  4095e7:	add    rax,QWORD PTR [rdi+0x18]
  4095eb:	inc    ecx
  4095ed:	cmp    DWORD PTR [rax+0x8],0x0
  4095f1:	je     409778 <__ctype_b_loc@plt+0x74a8>
  4095f7:	lea    esi,[rcx-0x1]
  4095fa:	cmp    esi,r9d
  4095fd:	jb     4095e0 <__ctype_b_loc@plt+0x7310>
  4095ff:	vcvtsi2sd xmm0,xmm2,ecx
  409603:	mov    rax,r8
  409606:	test   ecx,ecx
  409608:	je     409649 <__ctype_b_loc@plt+0x7379>
  40960a:	vmovq  rdx,xmm0
  40960f:	mov    rax,rdx
  409612:	shr    rax,0x20
  409616:	add    eax,edx
  409618:	movzx  edx,BYTE PTR [rdi+0xb]
  40961c:	shlx   rbx,r11,rdx
  409621:	or     rbx,0x1
  409625:	xor    rbx,0xfffffffffffffffe
  409629:	xor    edx,edx
  40962b:	div    rbx
  40962e:	lea    rax,[rdx+rdx*4]
  409632:	lea    rax,[r8+rax*8]
  409636:	cmp    DWORD PTR [rax+0x18],0x3
  40963a:	je     40964f <__ctype_b_loc@plt+0x737f>
  40963c:	nop    DWORD PTR [rax+0x0]
  409640:	mov    rax,QWORD PTR [rax+0x20]
  409644:	test   rax,rax
  409647:	je     409660 <__ctype_b_loc@plt+0x7390>
  409649:	cmp    DWORD PTR [rax+0x18],0x3
  40964d:	jne    409640 <__ctype_b_loc@plt+0x7370>
  40964f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  409654:	vucomisd xmm1,xmm0
  409658:	jne    409640 <__ctype_b_loc@plt+0x7370>
  40965a:	jp     409640 <__ctype_b_loc@plt+0x7370>
  40965c:	jmp    4095eb <__ctype_b_loc@plt+0x731b>
  40965e:	xchg   ax,ax
  409660:	mov    rax,r10
  409663:	jmp    4095eb <__ctype_b_loc@plt+0x731b>
  409665:	mov    esi,r9d
  409668:	jmp    409778 <__ctype_b_loc@plt+0x74a8>
  40966d:	xor    esi,esi
  40966f:	cmp    r9d,0x2
  409673:	jb     409778 <__ctype_b_loc@plt+0x74a8>
  409679:	xor    ecx,ecx
  40967b:	jmp    409690 <__ctype_b_loc@plt+0x73c0>
  40967d:	nop    DWORD PTR [rax]
  409680:	mov    edx,r9d
  409683:	sub    edx,esi
  409685:	mov    ecx,esi
  409687:	cmp    edx,0x1
  40968a:	jbe    409778 <__ctype_b_loc@plt+0x74a8>
  409690:	lea    esi,[rcx+r9*1]
  409694:	shr    esi,1
  409696:	lea    edx,[rsi-0x1]
  409699:	shl    rdx,0x4
  40969d:	cmp    DWORD PTR [rax+rdx*1+0x8],0x0
  4096a2:	jne    409680 <__ctype_b_loc@plt+0x73b0>
  4096a4:	mov    r9d,esi
  4096a7:	mov    esi,ecx
  4096a9:	jmp    409680 <__ctype_b_loc@plt+0x73b0>
  4096ab:	mov    eax,ecx
  4096ad:	sub    eax,esi
  4096af:	cmp    eax,0x2
  4096b2:	jb     409778 <__ctype_b_loc@plt+0x74a8>
  4096b8:	lea    r10,[rip+0x20459]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4096bf:	mov    r11,0xffffffffffffffff
  4096c6:	jmp    4096f1 <__ctype_b_loc@plt+0x7421>
  4096c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4096d0:	cdqe   
  4096d2:	shl    rax,0x4
  4096d6:	add    rax,QWORD PTR [rdi+0x18]
  4096da:	cmp    DWORD PTR [rax+0x8],0x0
  4096de:	cmove  ecx,ebx
  4096e1:	cmovne esi,ebx
  4096e4:	mov    eax,ecx
  4096e6:	sub    eax,esi
  4096e8:	cmp    eax,0x1
  4096eb:	jbe    409778 <__ctype_b_loc@plt+0x74a8>
  4096f1:	lea    ebx,[rcx+rsi*1]
  4096f4:	shr    ebx,1
  4096f6:	lea    eax,[rbx-0x1]
  4096f9:	cmp    eax,r9d
  4096fc:	jb     4096d0 <__ctype_b_loc@plt+0x7400>
  4096fe:	vcvtsi2sd xmm0,xmm2,ebx
  409702:	mov    rax,r8
  409705:	test   ebx,ebx
  409707:	je     409749 <__ctype_b_loc@plt+0x7479>
  409709:	vmovq  rdx,xmm0
  40970e:	mov    rax,rdx
  409711:	shr    rax,0x20
  409715:	add    eax,edx
  409717:	movzx  edx,BYTE PTR [rdi+0xb]
  40971b:	shlx   r14,r11,rdx
  409720:	or     r14,0x1
  409724:	xor    r14,0xfffffffffffffffe
  409728:	xor    edx,edx
  40972a:	div    r14
  40972d:	lea    rax,[rdx+rdx*4]
  409731:	lea    rax,[r8+rax*8]
  409735:	cmp    DWORD PTR [rax+0x18],0x3
  409739:	je     40974f <__ctype_b_loc@plt+0x747f>
  40973b:	nop    DWORD PTR [rax+rax*1+0x0]
  409740:	mov    rax,QWORD PTR [rax+0x20]
  409744:	test   rax,rax
  409747:	je     409770 <__ctype_b_loc@plt+0x74a0>
  409749:	cmp    DWORD PTR [rax+0x18],0x3
  40974d:	jne    409740 <__ctype_b_loc@plt+0x7470>
  40974f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  409754:	vucomisd xmm1,xmm0
  409758:	jne    409740 <__ctype_b_loc@plt+0x7470>
  40975a:	jp     409740 <__ctype_b_loc@plt+0x7470>
  40975c:	jmp    4096da <__ctype_b_loc@plt+0x740a>
  409761:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40976b:	nop    DWORD PTR [rax+rax*1+0x0]
  409770:	mov    rax,r10
  409773:	jmp    4096da <__ctype_b_loc@plt+0x740a>
  409778:	mov    eax,esi
  40977a:	pop    rbx
  40977b:	pop    r14
  40977d:	ret    
  40977e:	xchg   ax,ax
  409780:	push   rbp
  409781:	push   r15
  409783:	push   r14
  409785:	push   r12
  409787:	push   rbx
  409788:	mov    rbx,rdi
  40978b:	movsxd rax,DWORD PTR [rsi+0x8]
  40978f:	movsxd rcx,DWORD PTR [rdx+0x8]
  409793:	cmp    eax,ecx
  409795:	jne    4097bf <__ctype_b_loc@plt+0x74ef>
  409797:	lea    ecx,[rax-0x3]
  40979a:	cmp    ecx,0x4
  40979d:	ja     409834 <__ctype_b_loc@plt+0x7564>
  4097a3:	lea    rdi,[rip+0x1fa1e]        # 4291c8 <__ctype_b_loc@plt+0x26ef8>
  4097aa:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  4097ae:	add    rcx,rdi
  4097b1:	jmp    rcx
  4097b3:	mov    rcx,QWORD PTR [rsi]
  4097b6:	add    rcx,0x10
  4097ba:	jmp    409843 <__ctype_b_loc@plt+0x7573>
  4097bf:	lea    rsi,[rip+0x2611a]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4097c6:	mov    rdx,QWORD PTR [rsi+rax*8]
  4097ca:	mov    rcx,QWORD PTR [rsi+rcx*8]
  4097ce:	mov    al,BYTE PTR [rdx+0x2]
  4097d1:	cmp    al,BYTE PTR [rcx+0x2]
  4097d4:	je     4099bc <__ctype_b_loc@plt+0x76ec>
  4097da:	lea    rsi,[rip+0x2077f]        # 429f60 <__ctype_b_loc@plt+0x27c90>
  4097e1:	xor    r15d,r15d
  4097e4:	mov    rdi,rbx
  4097e7:	xor    eax,eax
  4097e9:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4097ee:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  4097f3:	vmovsd xmm0,QWORD PTR [rdx]
  4097f7:	xor    r15d,r15d
  4097fa:	vucomisd xmm0,QWORD PTR [rsi]
  4097fe:	seta   r15b
  409802:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  409807:	mov    rbx,QWORD PTR [rsi]
  40980a:	mov    rbp,QWORD PTR [rdx]
  40980d:	lea    r12,[rbx+0x18]
  409811:	lea    r14,[rbp+0x18]
  409815:	mov    rdi,r12
  409818:	mov    rsi,r14
  40981b:	call   402200 <strcoll@plt>
  409820:	mov    r15d,eax
  409823:	test   eax,eax
  409825:	je     409958 <__ctype_b_loc@plt+0x7688>
  40982b:	shr    r15d,0x1f
  40982f:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  409834:	mov    rcx,QWORD PTR [rbx+0x20]
  409838:	lea    rcx,[rcx+rax*8]
  40983c:	add    rcx,0xe0
  409843:	mov    rbp,QWORD PTR [rcx]
  409846:	lea    r8,[rip+0x202cb]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40984d:	test   rbp,rbp
  409850:	je     409898 <__ctype_b_loc@plt+0x75c8>
  409852:	mov    rcx,QWORD PTR [rbx+0x20]
  409856:	mov    rdi,QWORD PTR [rcx+0x190]
  40985d:	mov    cl,BYTE PTR [rbp+0xb]
  409860:	bzhi   ecx,DWORD PTR [rdi+0xc],ecx
  409866:	movsxd rcx,ecx
  409869:	lea    rcx,[rcx+rcx*4]
  40986d:	shl    rcx,0x3
  409871:	add    rcx,QWORD PTR [rbp+0x20]
  409875:	cmp    DWORD PTR [rcx+0x18],0x4
  409879:	je     40988f <__ctype_b_loc@plt+0x75bf>
  40987b:	nop    DWORD PTR [rax+rax*1+0x0]
  409880:	mov    rcx,QWORD PTR [rcx+0x20]
  409884:	test   rcx,rcx
  409887:	je     409898 <__ctype_b_loc@plt+0x75c8>
  409889:	cmp    DWORD PTR [rcx+0x18],0x4
  40988d:	jne    409880 <__ctype_b_loc@plt+0x75b0>
  40988f:	cmp    QWORD PTR [rcx+0x10],rdi
  409893:	jne    409880 <__ctype_b_loc@plt+0x75b0>
  409895:	mov    r8,rcx
  409898:	mov    r10d,DWORD PTR [r8+0x8]
  40989c:	test   r10d,r10d
  40989f:	je     4099b1 <__ctype_b_loc@plt+0x76e1>
  4098a5:	cmp    eax,0x7
  4098a8:	je     4098af <__ctype_b_loc@plt+0x75df>
  4098aa:	cmp    eax,0x5
  4098ad:	jne    4098b8 <__ctype_b_loc@plt+0x75e8>
  4098af:	mov    rcx,QWORD PTR [rdx]
  4098b2:	add    rcx,0x10
  4098b6:	jmp    4098c7 <__ctype_b_loc@plt+0x75f7>
  4098b8:	mov    rcx,QWORD PTR [rbx+0x20]
  4098bc:	lea    rcx,[rcx+rax*8]
  4098c0:	add    rcx,0xe0
  4098c7:	mov    rdi,QWORD PTR [rcx]
  4098ca:	lea    r9,[rip+0x20247]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4098d1:	test   rdi,rdi
  4098d4:	je     409928 <__ctype_b_loc@plt+0x7658>
  4098d6:	mov    rcx,QWORD PTR [rbx+0x20]
  4098da:	mov    rcx,QWORD PTR [rcx+0x190]
  4098e1:	mov    bpl,BYTE PTR [rdi+0xb]
  4098e5:	bzhi   ebp,DWORD PTR [rcx+0xc],ebp
  4098eb:	movsxd rbp,ebp
  4098ee:	lea    rbp,[rbp+rbp*4+0x0]
  4098f3:	shl    rbp,0x3
  4098f7:	add    rbp,QWORD PTR [rdi+0x20]
  4098fb:	cmp    DWORD PTR [rbp+0x18],0x4
  4098ff:	je     40991f <__ctype_b_loc@plt+0x764f>
  409901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40990b:	nop    DWORD PTR [rax+rax*1+0x0]
  409910:	mov    rbp,QWORD PTR [rbp+0x20]
  409914:	test   rbp,rbp
  409917:	je     409928 <__ctype_b_loc@plt+0x7658>
  409919:	cmp    DWORD PTR [rbp+0x18],0x4
  40991d:	jne    409910 <__ctype_b_loc@plt+0x7640>
  40991f:	cmp    QWORD PTR [rbp+0x10],rcx
  409923:	jne    409910 <__ctype_b_loc@plt+0x7640>
  409925:	mov    r9,rbp
  409928:	cmp    r10d,DWORD PTR [r9+0x8]
  40992c:	jne    4099b1 <__ctype_b_loc@plt+0x76e1>
  409932:	cmp    r10d,0x3
  409936:	ja     4099a9 <__ctype_b_loc@plt+0x76d9>
  409938:	mov    ecx,r10d
  40993b:	lea    rdi,[rip+0x1f89a]        # 4291dc <__ctype_b_loc@plt+0x26f0c>
  409942:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  409946:	add    rcx,rdi
  409949:	jmp    rcx
  40994b:	mov    ecx,DWORD PTR [r8]
  40994e:	cmp    ecx,DWORD PTR [r9]
  409951:	jne    4099b1 <__ctype_b_loc@plt+0x76e1>
  409953:	jmp    4099ea <__ctype_b_loc@plt+0x771a>
  409958:	mov    rbp,QWORD PTR [rbp+0x10]
  40995c:	mov    rbx,QWORD PTR [rbx+0x10]
  409960:	mov    rdi,r12
  409963:	call   4020e0 <strlen@plt>
  409968:	cmp    rax,rbp
  40996b:	je     409ab2 <__ctype_b_loc@plt+0x77e2>
  409971:	cmp    rax,rbx
  409974:	je     409abe <__ctype_b_loc@plt+0x77ee>
  40997a:	lea    rcx,[rax+0x1]
  40997e:	add    r12,rax
  409981:	add    r12,0x1
  409985:	sub    rbx,rcx
  409988:	add    r14,rax
  40998b:	add    r14,0x1
  40998f:	sub    rbp,rcx
  409992:	mov    rdi,r12
  409995:	mov    rsi,r14
  409998:	call   402200 <strcoll@plt>
  40999d:	test   eax,eax
  40999f:	je     409960 <__ctype_b_loc@plt+0x7690>
  4099a1:	mov    r15d,eax
  4099a4:	jmp    40982b <__ctype_b_loc@plt+0x755b>
  4099a9:	mov    rcx,QWORD PTR [r8]
  4099ac:	cmp    rcx,QWORD PTR [r9]
  4099af:	je     4099ea <__ctype_b_loc@plt+0x771a>
  4099b1:	lea    rcx,[rip+0x25f28]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4099b8:	mov    rdx,QWORD PTR [rcx+rax*8]
  4099bc:	lea    rsi,[rip+0x2057c]        # 429f3f <__ctype_b_loc@plt+0x27c6f>
  4099c3:	xor    r15d,r15d
  4099c6:	mov    rdi,rbx
  4099c9:	xor    eax,eax
  4099cb:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4099d0:	mov    eax,r15d
  4099d3:	pop    rbx
  4099d4:	pop    r12
  4099d6:	pop    r14
  4099d8:	pop    r15
  4099da:	pop    rbp
  4099db:	ret    
  4099dc:	vmovsd xmm0,QWORD PTR [r8]
  4099e1:	vucomisd xmm0,QWORD PTR [r9]
  4099e6:	jne    4099b1 <__ctype_b_loc@plt+0x76e1>
  4099e8:	jp     4099b1 <__ctype_b_loc@plt+0x76e1>
  4099ea:	mov    rax,QWORD PTR [rbx+0x10]
  4099ee:	mov    rbp,rax
  4099f1:	sub    rbp,QWORD PTR [rbx+0x40]
  4099f5:	mov    rcx,QWORD PTR [r8]
  4099f8:	mov    QWORD PTR [rax],rcx
  4099fb:	mov    ecx,DWORD PTR [r8+0x8]
  4099ff:	mov    DWORD PTR [rax+0x8],ecx
  409a02:	mov    rax,QWORD PTR [rbx+0x10]
  409a06:	mov    rcx,QWORD PTR [rsi]
  409a09:	mov    QWORD PTR [rax+0x10],rcx
  409a0d:	mov    ecx,DWORD PTR [rsi+0x8]
  409a10:	mov    DWORD PTR [rax+0x18],ecx
  409a13:	mov    rax,QWORD PTR [rbx+0x10]
  409a17:	mov    rcx,QWORD PTR [rdx]
  409a1a:	mov    QWORD PTR [rax+0x20],rcx
  409a1e:	mov    ecx,DWORD PTR [rdx+0x8]
  409a21:	mov    DWORD PTR [rax+0x28],ecx
  409a24:	mov    rax,QWORD PTR [rbx+0x38]
  409a28:	sub    rax,QWORD PTR [rbx+0x10]
  409a2c:	cmp    rax,0x30
  409a30:	jg     409a49 <__ctype_b_loc@plt+0x7779>
  409a32:	mov    eax,DWORD PTR [rbx+0x58]
  409a35:	lea    ecx,[rax+0x3]
  409a38:	lea    esi,[rax+rax*1]
  409a3b:	cmp    eax,0x3
  409a3e:	cmovl  esi,ecx
  409a41:	mov    rdi,rbx
  409a44:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  409a49:	mov    rsi,QWORD PTR [rbx+0x10]
  409a4d:	lea    rax,[rsi+0x30]
  409a51:	mov    QWORD PTR [rbx+0x10],rax
  409a55:	mov    rdi,rbx
  409a58:	mov    edx,0x1
  409a5d:	call   405020 <__ctype_b_loc@plt+0x2d50>
  409a62:	mov    rax,QWORD PTR [rbx+0x10]
  409a66:	mov    rcx,QWORD PTR [rbx+0x40]
  409a6a:	lea    rdx,[rax-0x10]
  409a6e:	mov    QWORD PTR [rbx+0x10],rdx
  409a72:	mov    rdx,QWORD PTR [rax-0x10]
  409a76:	mov    QWORD PTR [rcx+rbp*1],rdx
  409a7a:	mov    eax,DWORD PTR [rax-0x8]
  409a7d:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  409a81:	mov    rax,QWORD PTR [rbx+0x10]
  409a85:	mov    r15d,DWORD PTR [rax+0x8]
  409a89:	test   r15d,r15d
  409a8c:	je     4099d0 <__ctype_b_loc@plt+0x7700>
  409a92:	cmp    r15d,0x1
  409a96:	jne    409aa7 <__ctype_b_loc@plt+0x77d7>
  409a98:	xor    r15d,r15d
  409a9b:	cmp    DWORD PTR [rax],0x0
  409a9e:	setne  r15b
  409aa2:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  409aa7:	mov    r15d,0x1
  409aad:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  409ab2:	xor    r15d,r15d
  409ab5:	shr    r15d,0x1f
  409ab9:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  409abe:	mov    r15d,0xffffffff
  409ac4:	shr    r15d,0x1f
  409ac8:	jmp    4099d0 <__ctype_b_loc@plt+0x7700>
  409acd:	nop    DWORD PTR [rax]
  409ad0:	mov    eax,DWORD PTR [rsi+0x8]
  409ad3:	dec    eax
  409ad5:	cmp    eax,0x3
  409ad8:	ja     409af4 <__ctype_b_loc@plt+0x7824>
  409ada:	lea    rcx,[rip+0x1f70b]        # 4291ec <__ctype_b_loc@plt+0x26f1c>
  409ae1:	movsxd rax,DWORD PTR [rcx+rax*4]
  409ae5:	add    rax,rcx
  409ae8:	jmp    rax
  409aea:	mov    al,BYTE PTR [rdi+0xb]
  409aed:	bzhi   eax,DWORD PTR [rsi],eax
  409af2:	jmp    409b39 <__ctype_b_loc@plt+0x7869>
  409af4:	mov    eax,DWORD PTR [rsi]
  409af6:	mov    cl,BYTE PTR [rdi+0xb]
  409af9:	mov    rdx,0xffffffffffffffff
  409b00:	shlx   rcx,rdx,rcx
  409b05:	or     rcx,0x1
  409b09:	xor    rcx,0xfffffffffffffffe
  409b0d:	xor    edx,edx
  409b0f:	div    rcx
  409b12:	lea    rax,[rdx+rdx*4]
  409b16:	jmp    409b3f <__ctype_b_loc@plt+0x786f>
  409b18:	vmovq  xmm0,QWORD PTR [rsi]
  409b1c:	vxorps xmm1,xmm1,xmm1
  409b20:	vucomisd xmm0,xmm1
  409b24:	jne    409b48 <__ctype_b_loc@plt+0x7878>
  409b26:	jp     409b48 <__ctype_b_loc@plt+0x7878>
  409b28:	mov    rax,QWORD PTR [rdi+0x20]
  409b2c:	ret    
  409b2d:	mov    rax,QWORD PTR [rsi]
  409b30:	mov    cl,BYTE PTR [rdi+0xb]
  409b33:	bzhi   eax,DWORD PTR [rax+0xc],ecx
  409b39:	cdqe   
  409b3b:	lea    rax,[rax+rax*4]
  409b3f:	shl    rax,0x3
  409b43:	add    rax,QWORD PTR [rdi+0x20]
  409b47:	ret    
  409b48:	vmovq  rcx,xmm0
  409b4d:	mov    rax,rcx
  409b50:	shr    rax,0x20
  409b54:	add    eax,ecx
  409b56:	jmp    409af6 <__ctype_b_loc@plt+0x7826>
  409b58:	nop    DWORD PTR [rax+rax*1+0x0]
  409b60:	push   rbp
  409b61:	mov    rbp,rsp
  409b64:	push   r15
  409b66:	push   r14
  409b68:	push   r13
  409b6a:	push   r12
  409b6c:	push   rbx
  409b6d:	and    rsp,0xffffffffffffffe0
  409b71:	sub    rsp,0xc0
  409b78:	mov    r15,rdx
  409b7b:	mov    r12,rsi
  409b7e:	mov    r13,rdi
  409b81:	mov    rdi,rsi
  409b84:	mov    rsi,rdx
  409b87:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  409b8c:	mov    r14,rax
  409b8f:	lea    rax,[rip+0x1ff92]        # 429b28 <__ctype_b_loc@plt+0x27858>
  409b96:	cmp    r14,rax
  409b99:	je     409ba6 <__ctype_b_loc@plt+0x78d6>
  409b9b:	cmp    DWORD PTR [r14+0x8],0x0
  409ba0:	je     409f40 <__ctype_b_loc@plt+0x7c70>
  409ba6:	mov    r9,QWORD PTR [r12+0x20]
  409bab:	mov    rax,QWORD PTR [r12+0x28]
  409bb0:	lea    rbx,[rax-0x28]
  409bb4:	mov    QWORD PTR [r12+0x28],rbx
  409bb9:	cmp    rax,r9
  409bbc:	jbe    409c16 <__ctype_b_loc@plt+0x7946>
  409bbe:	cmp    DWORD PTR [rax-0x10],0x0
  409bc2:	mov    rax,rbx
  409bc5:	jne    409bb0 <__ctype_b_loc@plt+0x78e0>
  409bc7:	lea    rsi,[r14+0x10]
  409bcb:	mov    rdi,r12
  409bce:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  409bd3:	cmp    rax,r14
  409bd6:	je     409f31 <__ctype_b_loc@plt+0x7c61>
  409bdc:	nop    DWORD PTR [rax+0x0]
  409be0:	mov    rcx,rax
  409be3:	mov    rax,QWORD PTR [rax+0x20]
  409be7:	cmp    rax,r14
  409bea:	jne    409be0 <__ctype_b_loc@plt+0x7910>
  409bec:	mov    QWORD PTR [rcx+0x20],rbx
  409bf0:	mov    rax,QWORD PTR [r14+0x20]
  409bf4:	mov    QWORD PTR [rbx+0x20],rax
  409bf8:	vmovdqu ymm0,YMMWORD PTR [r14]
  409bfd:	vmovdqu YMMWORD PTR [rbx],ymm0
  409c01:	mov    QWORD PTR [r14+0x20],0x0
  409c09:	mov    DWORD PTR [r14+0x8],0x0
  409c11:	jmp    409f40 <__ctype_b_loc@plt+0x7c70>
  409c16:	mov    QWORD PTR [rsp+0x18],r13
  409c1b:	vpxor  xmm15,xmm15,xmm15
  409c20:	vmovdqu YMMWORD PTR [rsp+0x7c],ymm15
  409c26:	vmovdqa YMMWORD PTR [rsp+0x60],ymm15
  409c2c:	vmovdqa YMMWORD PTR [rsp+0x40],ymm15
  409c32:	vmovdqa YMMWORD PTR [rsp+0x20],ymm15
  409c38:	mov    r10d,DWORD PTR [r12+0x38]
  409c3d:	xor    r11d,r11d
  409c40:	mov    ebx,0x1
  409c45:	mov    r8d,0x10
  409c4b:	vpbroadcastq ymm3,QWORD PTR [rip+0x200ec]        # 429d40 <__ctype_b_loc@plt+0x27a70>
  409c54:	vpbroadcastq ymm4,QWORD PTR [rip+0x200eb]        # 429d48 <__ctype_b_loc@plt+0x27a78>
  409c5d:	vpcmpeqd ymm5,ymm5,ymm5
  409c61:	vpbroadcastq ymm6,QWORD PTR [rip+0x200e6]        # 429d50 <__ctype_b_loc@plt+0x27a80>
  409c6a:	xor    ecx,ecx
  409c6c:	mov    r13d,0x1
  409c72:	jmp    409c97 <__ctype_b_loc@plt+0x79c7>
  409c74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c7e:	xchg   ax,ax
  409c80:	add    DWORD PTR [rsp+r11*4+0x20],edi
  409c85:	add    ecx,edi
  409c87:	inc    r11
  409c8a:	add    r13d,r13d
  409c8d:	cmp    r11,0x1f
  409c91:	je     409e08 <__ctype_b_loc@plt+0x7b38>
  409c97:	mov    eax,r13d
  409c9a:	cmp    r13d,r10d
  409c9d:	jle    409cab <__ctype_b_loc@plt+0x79db>
  409c9f:	mov    eax,r10d
  409ca2:	cmp    ebx,r10d
  409ca5:	jg     409e08 <__ctype_b_loc@plt+0x7b38>
  409cab:	xor    edi,edi
  409cad:	cmp    ebx,eax
  409caf:	jg     409c80 <__ctype_b_loc@plt+0x79b0>
  409cb1:	mov    rdx,QWORD PTR [r12+0x18]
  409cb6:	movsxd r14,ebx
  409cb9:	movsxd rsi,eax
  409cbc:	cmp    r14,rsi
  409cbf:	mov    rax,rsi
  409cc2:	cmovge rax,r14
  409cc6:	mov    rbx,rax
  409cc9:	sub    rbx,r14
  409ccc:	inc    rbx
  409ccf:	xor    edi,edi
  409cd1:	cmp    rbx,0x11
  409cd5:	jae    409ce0 <__ctype_b_loc@plt+0x7a10>
  409cd7:	mov    rbx,r14
  409cda:	jmp    409de2 <__ctype_b_loc@plt+0x7b12>
  409cdf:	nop
  409ce0:	mov    edi,ebx
  409ce2:	and    edi,0xf
  409ce5:	test   rdi,rdi
  409ce8:	cmove  rdi,r8
  409cec:	sub    rbx,rdi
  409cef:	add    rbx,r14
  409cf2:	vmovq  xmm7,r14
  409cf7:	vpbroadcastq ymm8,xmm7
  409cfc:	vpaddq ymm7,ymm8,YMMWORD PTR [rip+0x1ffbc]        # 429cc0 <__ctype_b_loc@plt+0x279f0>
  409d04:	vpaddq ymm8,ymm8,YMMWORD PTR [rip+0x1ffd4]        # 429ce0 <__ctype_b_loc@plt+0x27a10>
  409d0c:	add    rdi,r14
  409d0f:	not    rax
  409d12:	add    rax,rdi
  409d15:	vpxor  xmm9,xmm9,xmm9
  409d1a:	vpxor  xmm10,xmm10,xmm10
  409d1f:	nop
  409d20:	vpsllq ymm11,ymm7,0x4
  409d25:	vpsllq ymm12,ymm8,0x4
  409d2b:	vmovq  xmm1,rdx
  409d30:	vpbroadcastq ymm1,xmm1
  409d35:	vpaddq ymm12,ymm12,ymm1
  409d39:	vpaddq ymm14,ymm12,ymm3
  409d3d:	vpaddq ymm1,ymm11,ymm1
  409d41:	vpaddq ymm11,ymm1,ymm3
  409d45:	vpaddq ymm12,ymm12,ymm4
  409d49:	vpaddq ymm1,ymm1,ymm4
  409d4d:	vpcmpeqd xmm2,xmm2,xmm2
  409d51:	vpgatherqd xmm13,DWORD PTR [ymm11*1+0x0],xmm2
  409d5b:	vpcmpeqd xmm2,xmm2,xmm2
  409d5f:	vpgatherqd xmm11,DWORD PTR [ymm14*1+0x0],xmm2
  409d69:	vpcmpeqd xmm2,xmm2,xmm2
  409d6d:	vpgatherqd xmm0,DWORD PTR [ymm1*1+0x0],xmm2
  409d77:	vpcmpeqd xmm1,xmm1,xmm1
  409d7b:	vpgatherqd xmm2,DWORD PTR [ymm12*1+0x0],xmm1
  409d85:	vinserti128 ymm1,ymm11,xmm13,0x1
  409d8b:	vinserti128 ymm0,ymm2,xmm0,0x1
  409d91:	vpcmpeqd ymm1,ymm1,ymm15
  409d96:	vpaddd ymm1,ymm9,ymm1
  409d9a:	vpcmpeqd ymm0,ymm0,ymm15
  409d9f:	vpaddd ymm0,ymm10,ymm0
  409da3:	vpsubd ymm9,ymm1,ymm5
  409da7:	vpsubd ymm10,ymm0,ymm5
  409dab:	vpaddq ymm8,ymm8,ymm6
  409daf:	vpaddq ymm7,ymm7,ymm6
  409db3:	add    rax,0x10
  409db7:	jne    409d20 <__ctype_b_loc@plt+0x7a50>
  409dbd:	vpaddd ymm0,ymm10,ymm9
  409dc2:	vextracti128 xmm1,ymm0,0x1
  409dc8:	vpaddd xmm0,xmm0,xmm1
  409dcc:	vpshufd xmm1,xmm0,0x4e
  409dd1:	vpaddd xmm0,xmm0,xmm1
  409dd5:	vpshufd xmm1,xmm0,0xe5
  409dda:	vpaddd xmm0,xmm0,xmm1
  409dde:	vmovd  edi,xmm0
  409de2:	mov    rax,rbx
  409de5:	shl    rax,0x4
  409de9:	add    rax,rdx
  409dec:	add    rax,0xfffffffffffffff8
  409df0:	cmp    DWORD PTR [rax],0x1
  409df3:	sbb    edi,0xffffffff
  409df6:	add    rax,0x10
  409dfa:	cmp    rbx,rsi
  409dfd:	lea    rbx,[rbx+0x1]
  409e01:	jl     409df0 <__ctype_b_loc@plt+0x7b20>
  409e03:	jmp    409c80 <__ctype_b_loc@plt+0x79b0>
  409e08:	mov    al,BYTE PTR [r12+0xb]
  409e0d:	mov    edx,0x1
  409e12:	shlx   rax,rdx,rax
  409e17:	xor    r14d,r14d
  409e1a:	mov    r11d,0x0
  409e20:	mov    r8d,0x0
  409e26:	test   eax,eax
  409e28:	mov    rdi,QWORD PTR [rsp+0x18]
  409e2d:	je     409ed5 <__ctype_b_loc@plt+0x7c05>
  409e33:	cdqe   
  409e35:	xor    r8d,r8d
  409e38:	lea    r10,[rip+0x1fd11]        # 429b50 <__ctype_b_loc@plt+0x27880>
  409e3f:	xor    r11d,r11d
  409e42:	jmp    409e6b <__ctype_b_loc@plt+0x7b9b>
  409e44:	mov    esi,edx
  409e46:	mov    esi,esi
  409e48:	movzx  esi,BYTE PTR [rsi+r10*1]
  409e4d:	add    esi,ebx
  409e4f:	movsxd rsi,esi
  409e52:	inc    DWORD PTR [rsp+rsi*4+0x20]
  409e56:	mov    ebx,0x1
  409e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	add    r11d,ebx
  409e63:	inc    r8d
  409e66:	test   rax,rax
  409e69:	je     409ed5 <__ctype_b_loc@plt+0x7c05>
  409e6b:	dec    rax
  409e6e:	lea    rsi,[rax+rax*4]
  409e72:	cmp    DWORD PTR [r9+rsi*8+0x8],0x0
  409e78:	je     409e66 <__ctype_b_loc@plt+0x7b96>
  409e7a:	xor    ebx,ebx
  409e7c:	cmp    DWORD PTR [r9+rsi*8+0x18],0x3
  409e82:	jne    409e60 <__ctype_b_loc@plt+0x7b90>
  409e84:	vmovq  xmm0,QWORD PTR [r9+rsi*8+0x10]
  409e8b:	vcvttsd2si edx,xmm0
  409e8f:	vxorps xmm14,xmm14,xmm14
  409e94:	vcvtsi2sd xmm1,xmm14,edx
  409e98:	vucomisd xmm0,xmm1
  409e9c:	jne    409e60 <__ctype_b_loc@plt+0x7b90>
  409e9e:	jp     409e60 <__ctype_b_loc@plt+0x7b90>
  409ea0:	dec    edx
  409ea2:	cmp    edx,0x3fffffff
  409ea8:	ja     409e60 <__ctype_b_loc@plt+0x7b90>
  409eaa:	xor    ebx,ebx
  409eac:	cmp    edx,0x100
  409eb2:	jb     409e44 <__ctype_b_loc@plt+0x7b74>
  409eb4:	xor    ebx,ebx
  409eb6:	mov    esi,edx
  409eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ec0:	shr    esi,0x8
  409ec3:	add    ebx,0x8
  409ec6:	cmp    edx,0xffff
  409ecc:	mov    edx,esi
  409ece:	ja     409ec0 <__ctype_b_loc@plt+0x7bf0>
  409ed0:	jmp    409e46 <__ctype_b_loc@plt+0x7b76>
  409ed5:	add    r11d,ecx
  409ed8:	cmp    DWORD PTR [r15+0x8],0x3
  409edd:	jne    409fae <__ctype_b_loc@plt+0x7cde>
  409ee3:	vmovq  xmm0,QWORD PTR [r15]
  409ee8:	vcvttsd2si eax,xmm0
  409eec:	vxorps xmm14,xmm14,xmm14
  409ef1:	vcvtsi2sd xmm1,xmm14,eax
  409ef5:	vucomisd xmm0,xmm1
  409ef9:	jne    409fae <__ctype_b_loc@plt+0x7cde>
  409eff:	jp     409fae <__ctype_b_loc@plt+0x7cde>
  409f05:	dec    eax
  409f07:	cmp    eax,0x3fffffff
  409f0c:	ja     409fae <__ctype_b_loc@plt+0x7cde>
  409f12:	xor    edx,edx
  409f14:	cmp    eax,0x100
  409f19:	jb     409f91 <__ctype_b_loc@plt+0x7cc1>
  409f1b:	xor    edx,edx
  409f1d:	mov    esi,eax
  409f1f:	nop
  409f20:	shr    esi,0x8
  409f23:	add    edx,0x8
  409f26:	cmp    eax,0xffff
  409f2b:	mov    eax,esi
  409f2d:	ja     409f20 <__ctype_b_loc@plt+0x7c50>
  409f2f:	jmp    409f93 <__ctype_b_loc@plt+0x7cc3>
  409f31:	mov    rax,QWORD PTR [r14+0x20]
  409f35:	mov    QWORD PTR [rbx+0x20],rax
  409f39:	mov    QWORD PTR [r14+0x20],rbx
  409f3d:	mov    r14,rbx
  409f40:	mov    rax,QWORD PTR [r15]
  409f43:	mov    QWORD PTR [r14+0x10],rax
  409f47:	mov    eax,DWORD PTR [r15+0x8]
  409f4b:	mov    DWORD PTR [r14+0x18],eax
  409f4f:	cmp    DWORD PTR [r15+0x8],0x4
  409f54:	jl     40a1b0 <__ctype_b_loc@plt+0x7ee0>
  409f5a:	mov    rax,QWORD PTR [r15]
  409f5d:	test   BYTE PTR [rax+0x9],0x3
  409f61:	je     40a1b0 <__ctype_b_loc@plt+0x7ee0>
  409f67:	mov    al,BYTE PTR [r12+0x9]
  409f6c:	test   al,0x4
  409f6e:	je     40a1b0 <__ctype_b_loc@plt+0x7ee0>
  409f74:	mov    rcx,QWORD PTR [r13+0x20]
  409f78:	and    al,0xfb
  409f7a:	mov    BYTE PTR [r12+0x9],al
  409f7f:	mov    rax,QWORD PTR [rcx+0x40]
  409f83:	mov    QWORD PTR [r12+0x30],rax
  409f88:	mov    QWORD PTR [rcx+0x40],r12
  409f8c:	jmp    40a1b0 <__ctype_b_loc@plt+0x7ee0>
  409f91:	mov    esi,eax
  409f93:	mov    eax,esi
  409f95:	lea    rsi,[rip+0x1fbb4]        # 429b50 <__ctype_b_loc@plt+0x27880>
  409f9c:	movzx  eax,BYTE PTR [rax+rsi*1]
  409fa0:	add    eax,edx
  409fa2:	cdqe   
  409fa4:	inc    DWORD PTR [rsp+rax*4+0x20]
  409fa8:	mov    r14d,0x1
  409fae:	add    r11d,r14d
  409fb1:	jle    40a001 <__ctype_b_loc@plt+0x7d31>
  409fb3:	mov    esi,0x1
  409fb8:	xor    r14d,r14d
  409fbb:	lea    rbx,[rsp+0x20]
  409fc0:	xor    edx,edx
  409fc2:	xor    r9d,r9d
  409fc5:	xor    r10d,r10d
  409fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  409fd0:	mov    eax,DWORD PTR [rbx]
  409fd2:	test   eax,eax
  409fd4:	jle    409fe3 <__ctype_b_loc@plt+0x7d13>
  409fd6:	add    r10d,eax
  409fd9:	cmp    r10d,r14d
  409fdc:	cmovg  r9d,r10d
  409fe0:	cmovg  edx,esi
  409fe3:	cmp    r10d,r11d
  409fe6:	je     40a006 <__ctype_b_loc@plt+0x7d36>
  409fe8:	lea    eax,[rsi+rsi*1]
  409feb:	and    esi,0x7fffffff
  409ff1:	add    rbx,0x4
  409ff5:	mov    r14d,esi
  409ff8:	cmp    esi,r11d
  409ffb:	mov    esi,eax
  409ffd:	jl     409fd0 <__ctype_b_loc@plt+0x7d00>
  409fff:	jmp    40a006 <__ctype_b_loc@plt+0x7d36>
  40a001:	xor    r9d,r9d
  40a004:	xor    edx,edx
  40a006:	add    ecx,r8d
  40a009:	sub    ecx,r9d
  40a00c:	inc    ecx
  40a00e:	mov    rsi,r12
  40a011:	vzeroupper 
  40a014:	call   40a220 <__ctype_b_loc@plt+0x7f50>
  40a019:	mov    r13d,DWORD PTR [r15+0x8]
  40a01d:	test   r13d,r13d
  40a020:	je     40a1c5 <__ctype_b_loc@plt+0x7ef5>
  40a026:	cmp    r13d,0x3
  40a02a:	je     40a07f <__ctype_b_loc@plt+0x7daf>
  40a02c:	cmp    r13d,0x4
  40a030:	jne    40a0b8 <__ctype_b_loc@plt+0x7de8>
  40a036:	mov    rax,QWORD PTR [r15]
  40a039:	mov    cl,BYTE PTR [r12+0xb]
  40a03e:	bzhi   ecx,DWORD PTR [rax+0xc],ecx
  40a044:	movsxd rcx,ecx
  40a047:	lea    r14,[rcx+rcx*4]
  40a04b:	shl    r14,0x3
  40a04f:	add    r14,QWORD PTR [r12+0x20]
  40a054:	cmp    DWORD PTR [r14+0x18],0x4
  40a059:	je     40a074 <__ctype_b_loc@plt+0x7da4>
  40a05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a060:	mov    r14,QWORD PTR [r14+0x20]
  40a064:	test   r14,r14
  40a067:	je     40a1c5 <__ctype_b_loc@plt+0x7ef5>
  40a06d:	cmp    DWORD PTR [r14+0x18],0x4
  40a072:	jne    40a060 <__ctype_b_loc@plt+0x7d90>
  40a074:	cmp    QWORD PTR [r14+0x10],rax
  40a078:	jne    40a060 <__ctype_b_loc@plt+0x7d90>
  40a07a:	jmp    40a19e <__ctype_b_loc@plt+0x7ece>
  40a07f:	vmovq  xmm1,QWORD PTR [r15]
  40a084:	vcvttsd2si eax,xmm1
  40a088:	vxorps xmm14,xmm14,xmm14
  40a08d:	vcvtsi2sd xmm0,xmm14,eax
  40a091:	vucomisd xmm1,xmm0
  40a095:	jne    40a0b8 <__ctype_b_loc@plt+0x7de8>
  40a097:	jp     40a0b8 <__ctype_b_loc@plt+0x7de8>
  40a099:	lea    ecx,[rax-0x1]
  40a09c:	cmp    ecx,DWORD PTR [r12+0x38]
  40a0a1:	jae    40a12e <__ctype_b_loc@plt+0x7e5e>
  40a0a7:	movsxd r14,ecx
  40a0aa:	shl    r14,0x4
  40a0ae:	add    r14,QWORD PTR [r12+0x18]
  40a0b3:	jmp    40a19e <__ctype_b_loc@plt+0x7ece>
  40a0b8:	mov    rdi,r12
  40a0bb:	mov    rsi,r15
  40a0be:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40a0c3:	mov    r14,rax
  40a0c6:	mov    eax,r13d
  40a0c9:	lea    rcx,[rip+0x1f12c]        # 4291fc <__ctype_b_loc@plt+0x26f2c>
  40a0d0:	cmp    DWORD PTR [r14+0x18],r13d
  40a0d4:	jne    40a0ed <__ctype_b_loc@plt+0x7e1d>
  40a0d6:	jmp    40a100 <__ctype_b_loc@plt+0x7e30>
  40a0d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0e0:	mov    rdx,QWORD PTR [r14+0x10]
  40a0e4:	cmp    rdx,QWORD PTR [r15]
  40a0e7:	je     40a19e <__ctype_b_loc@plt+0x7ece>
  40a0ed:	mov    r14,QWORD PTR [r14+0x20]
  40a0f1:	test   r14,r14
  40a0f4:	je     40a1c5 <__ctype_b_loc@plt+0x7ef5>
  40a0fa:	cmp    DWORD PTR [r14+0x18],r13d
  40a0fe:	jne    40a0ed <__ctype_b_loc@plt+0x7e1d>
  40a100:	cmp    r13d,0x3
  40a104:	ja     40a0e0 <__ctype_b_loc@plt+0x7e10>
  40a106:	movsxd rdx,DWORD PTR [rcx+rax*4]
  40a10a:	add    rdx,rcx
  40a10d:	jmp    rdx
  40a10f:	mov    edx,DWORD PTR [r14+0x10]
  40a113:	cmp    edx,DWORD PTR [r15]
  40a116:	jne    40a0ed <__ctype_b_loc@plt+0x7e1d>
  40a118:	jmp    40a19e <__ctype_b_loc@plt+0x7ece>
  40a11d:	vmovq  xmm0,QWORD PTR [r14+0x10]
  40a123:	vucomisd xmm0,QWORD PTR [r15]
  40a128:	jne    40a0ed <__ctype_b_loc@plt+0x7e1d>
  40a12a:	jp     40a0ed <__ctype_b_loc@plt+0x7e1d>
  40a12c:	jmp    40a19e <__ctype_b_loc@plt+0x7ece>
  40a12e:	test   eax,eax
  40a130:	je     40a174 <__ctype_b_loc@plt+0x7ea4>
  40a132:	vmovq  rcx,xmm0
  40a137:	mov    rax,rcx
  40a13a:	shr    rax,0x20
  40a13e:	add    eax,ecx
  40a140:	mov    cl,BYTE PTR [r12+0xb]
  40a145:	mov    rdx,0xffffffffffffffff
  40a14c:	shlx   rcx,rdx,rcx
  40a151:	or     rcx,0x1
  40a155:	xor    rcx,0xfffffffffffffffe
  40a159:	xor    edx,edx
  40a15b:	div    rcx
  40a15e:	lea    r14,[rdx+rdx*4]
  40a162:	shl    r14,0x3
  40a166:	add    r14,QWORD PTR [r12+0x20]
  40a16b:	cmp    DWORD PTR [r14+0x18],0x3
  40a170:	jne    40a180 <__ctype_b_loc@plt+0x7eb0>
  40a172:	jmp    40a190 <__ctype_b_loc@plt+0x7ec0>
  40a174:	mov    r14,QWORD PTR [r12+0x20]
  40a179:	cmp    DWORD PTR [r14+0x18],0x3
  40a17e:	je     40a190 <__ctype_b_loc@plt+0x7ec0>
  40a180:	mov    r14,QWORD PTR [r14+0x20]
  40a184:	test   r14,r14
  40a187:	je     40a1c5 <__ctype_b_loc@plt+0x7ef5>
  40a189:	cmp    DWORD PTR [r14+0x18],0x3
  40a18e:	jne    40a180 <__ctype_b_loc@plt+0x7eb0>
  40a190:	vmovq  xmm1,QWORD PTR [r14+0x10]
  40a196:	vucomisd xmm1,xmm0
  40a19a:	jne    40a180 <__ctype_b_loc@plt+0x7eb0>
  40a19c:	jp     40a180 <__ctype_b_loc@plt+0x7eb0>
  40a19e:	mov    BYTE PTR [r12+0xa],0x0
  40a1a4:	lea    rax,[rip+0x1f96d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40a1ab:	cmp    r14,rax
  40a1ae:	je     40a1cb <__ctype_b_loc@plt+0x7efb>
  40a1b0:	mov    rax,r14
  40a1b3:	lea    rsp,[rbp-0x28]
  40a1b7:	pop    rbx
  40a1b8:	pop    r12
  40a1ba:	pop    r13
  40a1bc:	pop    r14
  40a1be:	pop    r15
  40a1c0:	pop    rbp
  40a1c1:	vzeroupper 
  40a1c4:	ret    
  40a1c5:	mov    BYTE PTR [r12+0xa],0x0
  40a1cb:	cmp    r13d,0x3
  40a1cf:	je     40a1e4 <__ctype_b_loc@plt+0x7f14>
  40a1d1:	test   r13d,r13d
  40a1d4:	mov    rbx,QWORD PTR [rsp+0x18]
  40a1d9:	jne    40a205 <__ctype_b_loc@plt+0x7f35>
  40a1db:	lea    rsi,[rip+0x1fd21]        # 429f03 <__ctype_b_loc@plt+0x27c33>
  40a1e2:	jmp    40a1fb <__ctype_b_loc@plt+0x7f2b>
  40a1e4:	vmovq  xmm0,QWORD PTR [r15]
  40a1e9:	vucomisd xmm0,xmm0
  40a1ed:	mov    rbx,QWORD PTR [rsp+0x18]
  40a1f2:	jnp    40a205 <__ctype_b_loc@plt+0x7f35>
  40a1f4:	lea    rsi,[rip+0x1fd1b]        # 429f16 <__ctype_b_loc@plt+0x27c46>
  40a1fb:	mov    rdi,rbx
  40a1fe:	xor    eax,eax
  40a200:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40a205:	mov    rdi,rbx
  40a208:	mov    rsi,r12
  40a20b:	mov    rdx,r15
  40a20e:	call   409b60 <__ctype_b_loc@plt+0x7890>
  40a213:	jmp    40a1b3 <__ctype_b_loc@plt+0x7ee3>
  40a215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a21f:	nop
  40a220:	push   rbp
  40a221:	push   r15
  40a223:	push   r14
  40a225:	push   r13
  40a227:	push   r12
  40a229:	push   rbx
  40a22a:	sub    rsp,0x38
  40a22e:	mov    r15d,ecx
  40a231:	mov    r14d,edx
  40a234:	mov    rbx,rsi
  40a237:	mov    QWORD PTR [rsp],rdi
  40a23b:	movsxd r12,DWORD PTR [rsi+0x38]
  40a23f:	movzx  eax,BYTE PTR [rsi+0xb]
  40a243:	mov    QWORD PTR [rsp+0x10],rax
  40a248:	mov    rax,QWORD PTR [rsi+0x20]
  40a24c:	mov    QWORD PTR [rsp+0x18],rax
  40a251:	cmp    r12d,edx
  40a254:	jge    40a385 <__ctype_b_loc@plt+0x80b5>
  40a25a:	cmp    r14d,0xffffffff
  40a25e:	jl     40a2b2 <__ctype_b_loc@plt+0x7fe2>
  40a260:	mov    DWORD PTR [rsp+0xc],r15d
  40a265:	mov    rsi,QWORD PTR [rbx+0x18]
  40a269:	mov    r13,r12
  40a26c:	shl    r13,0x4
  40a270:	movsxd rbp,r14d
  40a273:	shl    rbp,0x4
  40a277:	mov    rax,QWORD PTR [rsp]
  40a27b:	mov    r15d,r14d
  40a27e:	mov    r14,QWORD PTR [rax+0x20]
  40a282:	mov    rdi,QWORD PTR [r14+0x18]
  40a286:	mov    rdx,r13
  40a289:	mov    rcx,rbp
  40a28c:	call   QWORD PTR [r14+0x10]
  40a290:	mov    ecx,r15d
  40a293:	test   r15d,r15d
  40a296:	je     40a2a1 <__ctype_b_loc@plt+0x7fd1>
  40a298:	test   rax,rax
  40a29b:	je     40a79b <__ctype_b_loc@plt+0x84cb>
  40a2a1:	sub    rbp,r13
  40a2a4:	add    QWORD PTR [r14+0x78],rbp
  40a2a8:	mov    r14d,ecx
  40a2ab:	mov    r15d,DWORD PTR [rsp+0xc]
  40a2b0:	jmp    40a2c6 <__ctype_b_loc@plt+0x7ff6>
  40a2b2:	lea    rsi,[rip+0x1fb00]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  40a2b9:	mov    rdi,QWORD PTR [rsp]
  40a2bd:	xor    eax,eax
  40a2bf:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40a2c4:	xor    eax,eax
  40a2c6:	mov    QWORD PTR [rbx+0x18],rax
  40a2ca:	movsxd rcx,DWORD PTR [rbx+0x38]
  40a2ce:	cmp    ecx,r14d
  40a2d1:	jge    40a381 <__ctype_b_loc@plt+0x80b1>
  40a2d7:	movsxd rdx,r14d
  40a2da:	mov    esi,r14d
  40a2dd:	sub    esi,ecx
  40a2df:	mov    r8,rcx
  40a2e2:	not    r8
  40a2e5:	add    r8,rdx
  40a2e8:	and    rsi,0x7
  40a2ec:	je     40a325 <__ctype_b_loc@plt+0x8055>
  40a2ee:	mov    rdi,rcx
  40a2f1:	shl    rdi,0x4
  40a2f5:	add    rdi,rax
  40a2f8:	add    rdi,0x8
  40a2fc:	neg    rsi
  40a2ff:	xor    ebp,ebp
  40a301:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a30b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a310:	mov    DWORD PTR [rdi],0x0
  40a316:	dec    rbp
  40a319:	add    rdi,0x10
  40a31d:	cmp    rsi,rbp
  40a320:	jne    40a310 <__ctype_b_loc@plt+0x8040>
  40a322:	sub    rcx,rbp
  40a325:	cmp    r8,0x7
  40a329:	jb     40a381 <__ctype_b_loc@plt+0x80b1>
  40a32b:	sub    rdx,rcx
  40a32e:	shl    rcx,0x4
  40a332:	add    rcx,rax
  40a335:	add    rcx,0x78
  40a339:	nop    DWORD PTR [rax+0x0]
  40a340:	mov    DWORD PTR [rcx-0x70],0x0
  40a347:	mov    DWORD PTR [rcx-0x60],0x0
  40a34e:	mov    DWORD PTR [rcx-0x50],0x0
  40a355:	mov    DWORD PTR [rcx-0x40],0x0
  40a35c:	mov    DWORD PTR [rcx-0x30],0x0
  40a363:	mov    DWORD PTR [rcx-0x20],0x0
  40a36a:	mov    DWORD PTR [rcx-0x10],0x0
  40a371:	mov    DWORD PTR [rcx],0x0
  40a377:	sub    rcx,0xffffffffffffff80
  40a37b:	add    rdx,0xfffffffffffffff8
  40a37f:	jne    40a340 <__ctype_b_loc@plt+0x8070>
  40a381:	mov    DWORD PTR [rbx+0x38],r14d
  40a385:	mov    rdi,QWORD PTR [rsp]
  40a389:	mov    rsi,rbx
  40a38c:	mov    edx,r15d
  40a38f:	call   40a810 <__ctype_b_loc@plt+0x8540>
  40a394:	cmp    r12d,r14d
  40a397:	jle    40a507 <__ctype_b_loc@plt+0x8237>
  40a39d:	mov    DWORD PTR [rbx+0x38],r14d
  40a3a1:	mov    DWORD PTR [rsp+0xc],r14d
  40a3a6:	movsxd rax,r14d
  40a3a9:	mov    QWORD PTR [rsp+0x20],rax
  40a3ae:	jmp    40a3ec <__ctype_b_loc@plt+0x811c>
  40a3b0:	vcvtsi2sd xmm0,xmm2,ebp
  40a3b4:	vmovq  QWORD PTR [rsp+0x28],xmm0
  40a3ba:	mov    DWORD PTR [rsp+0x30],0x3
  40a3c2:	mov    rdi,QWORD PTR [rsp]
  40a3c6:	mov    rsi,rbx
  40a3c9:	lea    rdx,[rsp+0x28]
  40a3ce:	call   409b60 <__ctype_b_loc@plt+0x7890>
  40a3d3:	mov    rcx,QWORD PTR [r14+r13*1]
  40a3d7:	mov    QWORD PTR [rax],rcx
  40a3da:	mov    ecx,DWORD PTR [r15]
  40a3dd:	mov    DWORD PTR [rax+0x8],ecx
  40a3e0:	mov    rax,rbp
  40a3e3:	cmp    r12d,ebp
  40a3e6:	je     40a4a5 <__ctype_b_loc@plt+0x81d5>
  40a3ec:	mov    r14,QWORD PTR [rbx+0x18]
  40a3f0:	mov    r13,rax
  40a3f3:	shl    r13,0x4
  40a3f7:	lea    rbp,[rax+0x1]
  40a3fb:	cmp    DWORD PTR [r14+r13*1+0x8],0x0
  40a401:	je     40a3e0 <__ctype_b_loc@plt+0x8110>
  40a403:	lea    r15,[r14+r13*1]
  40a407:	add    r15,0x8
  40a40b:	cmp    DWORD PTR [rbx+0x38],eax
  40a40e:	jbe    40a420 <__ctype_b_loc@plt+0x8150>
  40a410:	lea    rax,[r14+r13*1]
  40a414:	jmp    40a490 <__ctype_b_loc@plt+0x81c0>
  40a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a420:	vcvtsi2sd xmm0,xmm2,ebp
  40a424:	test   ebp,ebp
  40a426:	je     40a466 <__ctype_b_loc@plt+0x8196>
  40a428:	vmovq  rcx,xmm0
  40a42d:	mov    rax,rcx
  40a430:	shr    rax,0x20
  40a434:	add    eax,ecx
  40a436:	mov    cl,BYTE PTR [rbx+0xb]
  40a439:	mov    rdx,0xffffffffffffffff
  40a440:	shlx   rcx,rdx,rcx
  40a445:	or     rcx,0x1
  40a449:	xor    rcx,0xfffffffffffffffe
  40a44d:	xor    edx,edx
  40a44f:	div    rcx
  40a452:	lea    rax,[rdx+rdx*4]
  40a456:	shl    rax,0x3
  40a45a:	add    rax,QWORD PTR [rbx+0x20]
  40a45e:	cmp    DWORD PTR [rax+0x18],0x3
  40a462:	jne    40a470 <__ctype_b_loc@plt+0x81a0>
  40a464:	jmp    40a483 <__ctype_b_loc@plt+0x81b3>
  40a466:	mov    rax,QWORD PTR [rbx+0x20]
  40a46a:	cmp    DWORD PTR [rax+0x18],0x3
  40a46e:	je     40a483 <__ctype_b_loc@plt+0x81b3>
  40a470:	mov    rax,QWORD PTR [rax+0x20]
  40a474:	test   rax,rax
  40a477:	je     40a3b4 <__ctype_b_loc@plt+0x80e4>
  40a47d:	cmp    DWORD PTR [rax+0x18],0x3
  40a481:	jne    40a470 <__ctype_b_loc@plt+0x81a0>
  40a483:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40a488:	vucomisd xmm1,xmm0
  40a48c:	jne    40a470 <__ctype_b_loc@plt+0x81a0>
  40a48e:	jp     40a470 <__ctype_b_loc@plt+0x81a0>
  40a490:	lea    rcx,[rip+0x1f681]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40a497:	cmp    rax,rcx
  40a49a:	jne    40a3d3 <__ctype_b_loc@plt+0x8103>
  40a4a0:	jmp    40a3b0 <__ctype_b_loc@plt+0x80e0>
  40a4a5:	mov    ebp,DWORD PTR [rsp+0xc]
  40a4a9:	cmp    ebp,0xffffffff
  40a4ac:	jl     40a4ee <__ctype_b_loc@plt+0x821e>
  40a4ae:	mov    rsi,QWORD PTR [rbx+0x18]
  40a4b2:	shl    r12,0x4
  40a4b6:	mov    rcx,QWORD PTR [rsp+0x20]
  40a4bb:	shl    rcx,0x4
  40a4bf:	mov    rax,QWORD PTR [rsp]
  40a4c3:	mov    r14,QWORD PTR [rax+0x20]
  40a4c7:	mov    rdi,QWORD PTR [r14+0x18]
  40a4cb:	mov    rdx,r12
  40a4ce:	mov    r15,rcx
  40a4d1:	call   QWORD PTR [r14+0x10]
  40a4d5:	mov    r13,rax
  40a4d8:	test   ebp,ebp
  40a4da:	je     40a4e5 <__ctype_b_loc@plt+0x8215>
  40a4dc:	test   r13,r13
  40a4df:	je     40a79b <__ctype_b_loc@plt+0x84cb>
  40a4e5:	sub    r15,r12
  40a4e8:	add    QWORD PTR [r14+0x78],r15
  40a4ec:	jmp    40a503 <__ctype_b_loc@plt+0x8233>
  40a4ee:	lea    rsi,[rip+0x1f8c4]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  40a4f5:	xor    r13d,r13d
  40a4f8:	mov    rdi,QWORD PTR [rsp]
  40a4fc:	xor    eax,eax
  40a4fe:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40a503:	mov    QWORD PTR [rbx+0x18],r13
  40a507:	mov    eax,0x1
  40a50c:	mov    rcx,QWORD PTR [rsp+0x10]
  40a511:	shlx   rax,rax,rcx
  40a516:	dec    eax
  40a518:	mov    rsi,QWORD PTR [rsp+0x18]
  40a51d:	js     40a759 <__ctype_b_loc@plt+0x8489>
  40a523:	movsxd r12,eax
  40a526:	lea    r13,[rip+0x1ecdf]        # 42920c <__ctype_b_loc@plt+0x26f3c>
  40a52d:	jmp    40a564 <__ctype_b_loc@plt+0x8294>
  40a52f:	nop
  40a530:	xor    eax,eax
  40a532:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40a537:	mov    rdi,QWORD PTR [rsp]
  40a53b:	mov    rsi,rbx
  40a53e:	mov    rdx,rbp
  40a541:	call   409b60 <__ctype_b_loc@plt+0x7890>
  40a546:	mov    rcx,QWORD PTR [r14-0x8]
  40a54a:	mov    QWORD PTR [rax],rcx
  40a54d:	mov    ecx,DWORD PTR [r14]
  40a550:	mov    DWORD PTR [rax+0x8],ecx
  40a553:	mov    rsi,QWORD PTR [rsp+0x18]
  40a558:	dec    r12
  40a55b:	test   r12d,r12d
  40a55e:	js     40a759 <__ctype_b_loc@plt+0x8489>
  40a564:	lea    rax,[r12+r12*4]
  40a568:	cmp    DWORD PTR [rsi+rax*8+0x8],0x0
  40a56d:	je     40a558 <__ctype_b_loc@plt+0x8288>
  40a56f:	lea    r14,[rsi+rax*8]
  40a573:	add    r14,0x8
  40a577:	lea    rbp,[rsi+rax*8]
  40a57b:	add    rbp,0x10
  40a57f:	mov    r15d,DWORD PTR [rsi+rax*8+0x18]
  40a584:	test   r15d,r15d
  40a587:	je     40a730 <__ctype_b_loc@plt+0x8460>
  40a58d:	cmp    r15d,0x3
  40a591:	je     40a5de <__ctype_b_loc@plt+0x830e>
  40a593:	cmp    r15d,0x4
  40a597:	jne    40a610 <__ctype_b_loc@plt+0x8340>
  40a599:	mov    rcx,QWORD PTR [rbp+0x0]
  40a59d:	mov    al,BYTE PTR [rbx+0xb]
  40a5a0:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  40a5a6:	cdqe   
  40a5a8:	lea    rax,[rax+rax*4]
  40a5ac:	shl    rax,0x3
  40a5b0:	add    rax,QWORD PTR [rbx+0x20]
  40a5b4:	cmp    DWORD PTR [rax+0x18],0x4
  40a5b8:	je     40a5d3 <__ctype_b_loc@plt+0x8303>
  40a5ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a5c0:	mov    rax,QWORD PTR [rax+0x20]
  40a5c4:	test   rax,rax
  40a5c7:	je     40a730 <__ctype_b_loc@plt+0x8460>
  40a5cd:	cmp    DWORD PTR [rax+0x18],0x4
  40a5d1:	jne    40a5c0 <__ctype_b_loc@plt+0x82f0>
  40a5d3:	cmp    QWORD PTR [rax+0x10],rcx
  40a5d7:	jne    40a5c0 <__ctype_b_loc@plt+0x82f0>
  40a5d9:	jmp    40a6f0 <__ctype_b_loc@plt+0x8420>
  40a5de:	vmovsd xmm1,QWORD PTR [rbp+0x0]
  40a5e3:	vcvttsd2si eax,xmm1
  40a5e7:	vcvtsi2sd xmm0,xmm2,eax
  40a5eb:	vucomisd xmm1,xmm0
  40a5ef:	jne    40a610 <__ctype_b_loc@plt+0x8340>
  40a5f1:	jp     40a610 <__ctype_b_loc@plt+0x8340>
  40a5f3:	lea    ecx,[rax-0x1]
  40a5f6:	cmp    ecx,DWORD PTR [rbx+0x38]
  40a5f9:	jae    40a681 <__ctype_b_loc@plt+0x83b1>
  40a5ff:	movsxd rax,ecx
  40a602:	shl    rax,0x4
  40a606:	add    rax,QWORD PTR [rbx+0x18]
  40a60a:	jmp    40a6f0 <__ctype_b_loc@plt+0x8420>
  40a60f:	nop
  40a610:	mov    rdi,rbx
  40a613:	mov    rsi,rbp
  40a616:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40a61b:	cmp    DWORD PTR [rax+0x18],r15d
  40a61f:	jne    40a63e <__ctype_b_loc@plt+0x836e>
  40a621:	jmp    40a651 <__ctype_b_loc@plt+0x8381>
  40a623:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a62d:	nop    DWORD PTR [rax]
  40a630:	mov    rcx,QWORD PTR [rax+0x10]
  40a634:	cmp    rcx,QWORD PTR [rbp+0x0]
  40a638:	je     40a6f0 <__ctype_b_loc@plt+0x8420>
  40a63e:	mov    rax,QWORD PTR [rax+0x20]
  40a642:	test   rax,rax
  40a645:	je     40a730 <__ctype_b_loc@plt+0x8460>
  40a64b:	cmp    DWORD PTR [rax+0x18],r15d
  40a64f:	jne    40a63e <__ctype_b_loc@plt+0x836e>
  40a651:	cmp    r15d,0x3
  40a655:	ja     40a630 <__ctype_b_loc@plt+0x8360>
  40a657:	mov    ecx,r15d
  40a65a:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  40a65f:	add    rcx,r13
  40a662:	jmp    rcx
  40a664:	mov    ecx,DWORD PTR [rax+0x10]
  40a667:	cmp    ecx,DWORD PTR [rbp+0x0]
  40a66a:	jne    40a63e <__ctype_b_loc@plt+0x836e>
  40a66c:	jmp    40a6f0 <__ctype_b_loc@plt+0x8420>
  40a671:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40a676:	vucomisd xmm0,QWORD PTR [rbp+0x0]
  40a67b:	jne    40a63e <__ctype_b_loc@plt+0x836e>
  40a67d:	jp     40a63e <__ctype_b_loc@plt+0x836e>
  40a67f:	jmp    40a6f0 <__ctype_b_loc@plt+0x8420>
  40a681:	test   eax,eax
  40a683:	je     40a6c3 <__ctype_b_loc@plt+0x83f3>
  40a685:	vmovq  rcx,xmm0
  40a68a:	mov    rax,rcx
  40a68d:	shr    rax,0x20
  40a691:	add    eax,ecx
  40a693:	mov    cl,BYTE PTR [rbx+0xb]
  40a696:	mov    rdx,0xffffffffffffffff
  40a69d:	shlx   rcx,rdx,rcx
  40a6a2:	or     rcx,0x1
  40a6a6:	xor    rcx,0xfffffffffffffffe
  40a6aa:	xor    edx,edx
  40a6ac:	div    rcx
  40a6af:	lea    rax,[rdx+rdx*4]
  40a6b3:	shl    rax,0x3
  40a6b7:	add    rax,QWORD PTR [rbx+0x20]
  40a6bb:	cmp    DWORD PTR [rax+0x18],0x3
  40a6bf:	jne    40a6d0 <__ctype_b_loc@plt+0x8400>
  40a6c1:	jmp    40a6df <__ctype_b_loc@plt+0x840f>
  40a6c3:	mov    rax,QWORD PTR [rbx+0x20]
  40a6c7:	cmp    DWORD PTR [rax+0x18],0x3
  40a6cb:	je     40a6df <__ctype_b_loc@plt+0x840f>
  40a6cd:	nop    DWORD PTR [rax]
  40a6d0:	mov    rax,QWORD PTR [rax+0x20]
  40a6d4:	test   rax,rax
  40a6d7:	je     40a730 <__ctype_b_loc@plt+0x8460>
  40a6d9:	cmp    DWORD PTR [rax+0x18],0x3
  40a6dd:	jne    40a6d0 <__ctype_b_loc@plt+0x8400>
  40a6df:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40a6e4:	vucomisd xmm1,xmm0
  40a6e8:	jne    40a6d0 <__ctype_b_loc@plt+0x8400>
  40a6ea:	jp     40a6d0 <__ctype_b_loc@plt+0x8400>
  40a6ec:	nop    DWORD PTR [rax+0x0]
  40a6f0:	mov    BYTE PTR [rbx+0xa],0x0
  40a6f4:	lea    rcx,[rip+0x1f41d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40a6fb:	cmp    rax,rcx
  40a6fe:	jne    40a546 <__ctype_b_loc@plt+0x8276>
  40a704:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a70e:	xchg   ax,ax
  40a710:	cmp    r15d,0x3
  40a714:	je     40a73a <__ctype_b_loc@plt+0x846a>
  40a716:	test   r15d,r15d
  40a719:	jne    40a537 <__ctype_b_loc@plt+0x8267>
  40a71f:	mov    rdi,QWORD PTR [rsp]
  40a723:	lea    rsi,[rip+0x1f7d9]        # 429f03 <__ctype_b_loc@plt+0x27c33>
  40a72a:	jmp    40a530 <__ctype_b_loc@plt+0x8260>
  40a72f:	nop
  40a730:	mov    BYTE PTR [rbx+0xa],0x0
  40a734:	cmp    r15d,0x3
  40a738:	jne    40a716 <__ctype_b_loc@plt+0x8446>
  40a73a:	vmovq  xmm0,QWORD PTR [rbp+0x0]
  40a73f:	vucomisd xmm0,xmm0
  40a743:	jnp    40a537 <__ctype_b_loc@plt+0x8267>
  40a749:	mov    rdi,QWORD PTR [rsp]
  40a74d:	lea    rsi,[rip+0x1f7c2]        # 429f16 <__ctype_b_loc@plt+0x27c46>
  40a754:	jmp    40a530 <__ctype_b_loc@plt+0x8260>
  40a759:	lea    rax,[rip+0x1f3c8]        # 429b28 <__ctype_b_loc@plt+0x27858>
  40a760:	cmp    rsi,rax
  40a763:	je     40a78c <__ctype_b_loc@plt+0x84bc>
  40a765:	mov    eax,0x28
  40a76a:	mov    rcx,QWORD PTR [rsp+0x10]
  40a76f:	shlx   rbx,rax,rcx
  40a774:	mov    rax,QWORD PTR [rsp]
  40a778:	mov    rbp,QWORD PTR [rax+0x20]
  40a77c:	mov    rdi,QWORD PTR [rbp+0x18]
  40a780:	mov    rdx,rbx
  40a783:	xor    ecx,ecx
  40a785:	call   QWORD PTR [rbp+0x10]
  40a788:	sub    QWORD PTR [rbp+0x78],rbx
  40a78c:	add    rsp,0x38
  40a790:	pop    rbx
  40a791:	pop    r12
  40a793:	pop    r13
  40a795:	pop    r14
  40a797:	pop    r15
  40a799:	pop    rbp
  40a79a:	ret    
  40a79b:	mov    rax,QWORD PTR [rsp]
  40a79f:	mov    rdi,QWORD PTR [rax+0xa8]
  40a7a6:	test   rdi,rdi
  40a7a9:	jne    40a7e9 <__ctype_b_loc@plt+0x8519>
  40a7ab:	mov    rax,QWORD PTR [rsp]
  40a7af:	mov    BYTE PTR [rax+0xa],0x4
  40a7b3:	mov    rax,QWORD PTR [rax+0x20]
  40a7b7:	cmp    QWORD PTR [rax+0x98],0x0
  40a7bf:	je     40a7df <__ctype_b_loc@plt+0x850f>
  40a7c1:	mov    rbx,QWORD PTR [rsp]
  40a7c5:	mov    rdi,rbx
  40a7c8:	mov    esi,0x4
  40a7cd:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  40a7d2:	mov    rax,QWORD PTR [rbx+0x20]
  40a7d6:	mov    rdi,rbx
  40a7d9:	call   QWORD PTR [rax+0x98]
  40a7df:	mov    edi,0x1
  40a7e4:	call   402280 <exit@plt>
  40a7e9:	mov    DWORD PTR [rdi+0xd0],0x4
  40a7f3:	add    rdi,0x8
  40a7f7:	mov    esi,0x1
  40a7fc:	call   402230 <longjmp@plt>
  40a801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a810:	push   rbp
  40a811:	push   r15
  40a813:	push   r14
  40a815:	push   r13
  40a817:	push   r12
  40a819:	push   rbx
  40a81a:	sub    rsp,0x18
  40a81e:	mov    r14,rsi
  40a821:	test   edx,edx
  40a823:	je     40a852 <__ctype_b_loc@plt+0x8582>
  40a825:	mov    r13,rdi
  40a828:	dec    edx
  40a82a:	mov    eax,0xffffffff
  40a82f:	cmp    edx,0x100
  40a835:	jb     40a868 <__ctype_b_loc@plt+0x8598>
  40a837:	mov    eax,0xffffffff
  40a83c:	mov    ecx,edx
  40a83e:	xchg   ax,ax
  40a840:	add    eax,0x8
  40a843:	shr    ecx,0x8
  40a846:	cmp    edx,0xffff
  40a84c:	mov    edx,ecx
  40a84e:	ja     40a840 <__ctype_b_loc@plt+0x8570>
  40a850:	jmp    40a86a <__ctype_b_loc@plt+0x859a>
  40a852:	lea    rbx,[rip+0x1f2cf]        # 429b28 <__ctype_b_loc@plt+0x27858>
  40a859:	mov    QWORD PTR [r14+0x20],rbx
  40a85d:	xor    r12d,r12d
  40a860:	xor    r15d,r15d
  40a863:	jmp    40aa39 <__ctype_b_loc@plt+0x8769>
  40a868:	mov    ecx,edx
  40a86a:	mov    ecx,ecx
  40a86c:	lea    rdx,[rip+0x1f2dd]        # 429b50 <__ctype_b_loc@plt+0x27880>
  40a873:	movzx  ecx,BYTE PTR [rcx+rdx*1]
  40a877:	mov    edx,eax
  40a879:	add    edx,ecx
  40a87b:	lea    r12d,[rax+rcx*1]
  40a87f:	add    r12d,0x1
  40a883:	cmp    edx,0x1e
  40a886:	jl     40a899 <__ctype_b_loc@plt+0x85c9>
  40a888:	lea    rsi,[rip+0x1fa80]        # 42a30f <__ctype_b_loc@plt+0x2803f>
  40a88f:	mov    rdi,r13
  40a892:	xor    eax,eax
  40a894:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40a899:	mov    eax,0x1
  40a89e:	shlx   rbp,rax,r12
  40a8a3:	mov    r15,rbp
  40a8a6:	shl    r15,0x20
  40a8aa:	movabs rax,0x100000000
  40a8b4:	add    rax,r15
  40a8b7:	sar    rax,0x20
  40a8bb:	movabs rcx,0x666666666666666
  40a8c5:	cmp    rax,rcx
  40a8c8:	ja     40a90e <__ctype_b_loc@plt+0x863e>
  40a8ca:	mov    QWORD PTR [rsp+0x10],r12
  40a8cf:	mov    rax,r15
  40a8d2:	sar    rax,0x1d
  40a8d6:	lea    r12,[rax+rax*4]
  40a8da:	mov    QWORD PTR [rsp+0x8],r13
  40a8df:	mov    r13,QWORD PTR [r13+0x20]
  40a8e3:	mov    rdi,QWORD PTR [r13+0x18]
  40a8e7:	xor    esi,esi
  40a8e9:	xor    edx,edx
  40a8eb:	mov    rcx,r12
  40a8ee:	call   QWORD PTR [r13+0x10]
  40a8f2:	mov    rbx,rax
  40a8f5:	test   r15,r15
  40a8f8:	je     40a903 <__ctype_b_loc@plt+0x8633>
  40a8fa:	test   rbx,rbx
  40a8fd:	je     40aa58 <__ctype_b_loc@plt+0x8788>
  40a903:	add    QWORD PTR [r13+0x78],r12
  40a907:	mov    r12,QWORD PTR [rsp+0x10]
  40a90c:	jmp    40a921 <__ctype_b_loc@plt+0x8651>
  40a90e:	lea    rsi,[rip+0x1f4a4]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  40a915:	xor    ebx,ebx
  40a917:	mov    rdi,r13
  40a91a:	xor    eax,eax
  40a91c:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40a921:	mov    QWORD PTR [r14+0x20],rbx
  40a925:	test   ebp,ebp
  40a927:	jle    40aa35 <__ctype_b_loc@plt+0x8765>
  40a92d:	mov    eax,ebp
  40a92f:	lea    rcx,[rax-0x1]
  40a933:	and    ebp,0x3
  40a936:	cmp    rcx,0x3
  40a93a:	jae    40a94d <__ctype_b_loc@plt+0x867d>
  40a93c:	xor    ecx,ecx
  40a93e:	cmp    r12d,0x1
  40a942:	jbe    40a9f7 <__ctype_b_loc@plt+0x8727>
  40a948:	jmp    40aa35 <__ctype_b_loc@plt+0x8765>
  40a94d:	sub    rax,rbp
  40a950:	xor    edx,edx
  40a952:	xor    ecx,ecx
  40a954:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a95e:	xchg   ax,ax
  40a960:	mov    QWORD PTR [rbx+rdx*1+0x20],0x0
  40a969:	mov    DWORD PTR [rbx+rdx*1+0x18],0x0
  40a971:	mov    DWORD PTR [rbx+rdx*1+0x8],0x0
  40a979:	mov    rsi,QWORD PTR [r14+0x20]
  40a97d:	mov    QWORD PTR [rsi+rdx*1+0x48],0x0
  40a986:	mov    DWORD PTR [rsi+rdx*1+0x40],0x0
  40a98e:	mov    DWORD PTR [rsi+rdx*1+0x30],0x0
  40a996:	mov    rsi,QWORD PTR [r14+0x20]
  40a99a:	mov    QWORD PTR [rsi+rdx*1+0x70],0x0
  40a9a3:	mov    DWORD PTR [rsi+rdx*1+0x68],0x0
  40a9ab:	mov    DWORD PTR [rsi+rdx*1+0x58],0x0
  40a9b3:	mov    rsi,QWORD PTR [r14+0x20]
  40a9b7:	mov    QWORD PTR [rsi+rdx*1+0x98],0x0
  40a9c3:	mov    DWORD PTR [rsi+rdx*1+0x90],0x0
  40a9ce:	mov    DWORD PTR [rsi+rdx*1+0x80],0x0
  40a9d9:	add    rcx,0x4
  40a9dd:	mov    rbx,QWORD PTR [r14+0x20]
  40a9e1:	add    rdx,0xa0
  40a9e8:	cmp    rax,rcx
  40a9eb:	jne    40a960 <__ctype_b_loc@plt+0x8690>
  40a9f1:	cmp    r12d,0x1
  40a9f5:	ja     40aa35 <__ctype_b_loc@plt+0x8765>
  40a9f7:	lea    rax,[rcx+rcx*4]
  40a9fb:	lea    rax,[rax*8+0x20]
  40aa03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa0d:	nop    DWORD PTR [rax]
  40aa10:	mov    QWORD PTR [rbx+rax*1],0x0
  40aa18:	mov    DWORD PTR [rbx+rax*1-0x8],0x0
  40aa20:	mov    DWORD PTR [rbx+rax*1-0x18],0x0
  40aa28:	mov    rbx,QWORD PTR [r14+0x20]
  40aa2c:	add    rax,0x28
  40aa30:	dec    rbp
  40aa33:	jne    40aa10 <__ctype_b_loc@plt+0x8740>
  40aa35:	sar    r15,0x20
  40aa39:	mov    BYTE PTR [r14+0xb],r12b
  40aa3d:	lea    rax,[r15+r15*4]
  40aa41:	lea    rax,[rbx+rax*8]
  40aa45:	mov    QWORD PTR [r14+0x28],rax
  40aa49:	add    rsp,0x18
  40aa4d:	pop    rbx
  40aa4e:	pop    r12
  40aa50:	pop    r13
  40aa52:	pop    r14
  40aa54:	pop    r15
  40aa56:	pop    rbp
  40aa57:	ret    
  40aa58:	mov    rax,QWORD PTR [rsp+0x8]
  40aa5d:	mov    rdi,QWORD PTR [rax+0xa8]
  40aa64:	test   rdi,rdi
  40aa67:	jne    40aaa9 <__ctype_b_loc@plt+0x87d9>
  40aa69:	mov    rax,QWORD PTR [rsp+0x8]
  40aa6e:	mov    BYTE PTR [rax+0xa],0x4
  40aa72:	mov    rax,QWORD PTR [rax+0x20]
  40aa76:	cmp    QWORD PTR [rax+0x98],0x0
  40aa7e:	je     40aa9f <__ctype_b_loc@plt+0x87cf>
  40aa80:	mov    rbx,QWORD PTR [rsp+0x8]
  40aa85:	mov    rdi,rbx
  40aa88:	mov    esi,0x4
  40aa8d:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  40aa92:	mov    rax,QWORD PTR [rbx+0x20]
  40aa96:	mov    rdi,rbx
  40aa99:	call   QWORD PTR [rax+0x98]
  40aa9f:	mov    edi,0x1
  40aaa4:	call   402280 <exit@plt>
  40aaa9:	mov    DWORD PTR [rdi+0xd0],0x4
  40aab3:	add    rdi,0x8
  40aab7:	mov    esi,0x1
  40aabc:	call   402230 <longjmp@plt>
  40aac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aad0:	push   r15
  40aad2:	push   r14
  40aad4:	push   r12
  40aad6:	push   rbx
  40aad7:	push   rax
  40aad8:	mov    r14,rsi
  40aadb:	mov    r15,rdi
  40aade:	mov    rsi,rsp
  40aae1:	call   4020b0 <strtod@plt>
  40aae6:	vmovsd QWORD PTR [r14],xmm0
  40aaeb:	mov    rbx,QWORD PTR [rsp]
  40aaef:	cmp    rbx,r15
  40aaf2:	je     40ab6e <__ctype_b_loc@plt+0x889e>
  40aaf4:	mov    r12b,BYTE PTR [rbx]
  40aaf7:	mov    eax,r12d
  40aafa:	or     al,0x20
  40aafc:	cmp    al,0x78
  40aafe:	jne    40ab35 <__ctype_b_loc@plt+0x8865>
  40ab00:	mov    rsi,rsp
  40ab03:	mov    rdi,r15
  40ab06:	mov    edx,0x10
  40ab0b:	call   402250 <strtoul@plt>
  40ab10:	vmovq  xmm0,rax
  40ab15:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1f153]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  40ab1d:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1f15b]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  40ab25:	vhaddpd xmm0,xmm0,xmm0
  40ab29:	vmovlpd QWORD PTR [r14],xmm0
  40ab2e:	mov    rbx,QWORD PTR [rsp]
  40ab32:	mov    r12b,BYTE PTR [rbx]
  40ab35:	test   r12b,r12b
  40ab38:	je     40ab72 <__ctype_b_loc@plt+0x88a2>
  40ab3a:	call   4022d0 <__ctype_b_loc@plt>
  40ab3f:	mov    rax,QWORD PTR [rax]
  40ab42:	movzx  ecx,r12b
  40ab46:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ab4b:	je     40ab64 <__ctype_b_loc@plt+0x8894>
  40ab4d:	nop    DWORD PTR [rax]
  40ab50:	movzx  r12d,BYTE PTR [rbx+0x1]
  40ab55:	inc    rbx
  40ab58:	test   BYTE PTR [rax+r12*2+0x1],0x20
  40ab5e:	jne    40ab50 <__ctype_b_loc@plt+0x8880>
  40ab60:	mov    QWORD PTR [rsp],rbx
  40ab64:	xor    eax,eax
  40ab66:	test   r12b,r12b
  40ab69:	sete   al
  40ab6c:	jmp    40ab77 <__ctype_b_loc@plt+0x88a7>
  40ab6e:	xor    eax,eax
  40ab70:	jmp    40ab77 <__ctype_b_loc@plt+0x88a7>
  40ab72:	mov    eax,0x1
  40ab77:	add    rsp,0x8
  40ab7b:	pop    rbx
  40ab7c:	pop    r12
  40ab7e:	pop    r14
  40ab80:	pop    r15
  40ab82:	ret    
  40ab83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab8d:	nop    DWORD PTR [rax]
  40ab90:	push   rbp
  40ab91:	push   r15
  40ab93:	push   r14
  40ab95:	push   r13
  40ab97:	push   r12
  40ab99:	push   rbx
  40ab9a:	sub    rsp,0x18
  40ab9e:	mov    r15,QWORD PTR [rdi+0x38]
  40aba2:	or     BYTE PTR [r15+0x9],0x4
  40aba7:	mov    cl,BYTE PTR [r15+0x8]
  40abab:	xor    eax,eax
  40abad:	add    cl,0xfb
  40abb0:	cmp    cl,0x4
  40abb3:	ja     40b221 <__ctype_b_loc@plt+0x8f51>
  40abb9:	mov    r14,rdi
  40abbc:	movzx  ecx,cl
  40abbf:	lea    rdx,[rip+0x1e656]        # 42921c <__ctype_b_loc@plt+0x26f4c>
  40abc6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40abca:	add    rcx,rdx
  40abcd:	jmp    rcx
  40abcf:	mov    rax,QWORD PTR [r15+0x30]
  40abd3:	mov    QWORD PTR [r14+0x38],rax
  40abd7:	mov    rsi,QWORD PTR [r15+0x10]
  40abdb:	test   rsi,rsi
  40abde:	je     40b0d9 <__ctype_b_loc@plt+0x8e09>
  40abe4:	test   BYTE PTR [rsi+0x9],0x3
  40abe8:	je     40abff <__ctype_b_loc@plt+0x892f>
  40abea:	mov    rdi,r14
  40abed:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40abf2:	mov    rsi,QWORD PTR [r15+0x10]
  40abf6:	test   rsi,rsi
  40abf9:	je     40b0d9 <__ctype_b_loc@plt+0x8e09>
  40abff:	mov    al,BYTE PTR [rsi+0xa]
  40ac02:	xor    ebx,ebx
  40ac04:	mov    DWORD PTR [rsp],0x0
  40ac0b:	test   al,0x8
  40ac0d:	jne    40b0e2 <__ctype_b_loc@plt+0x8e12>
  40ac13:	mov    rdx,QWORD PTR [r14+0x140]
  40ac1a:	mov    cl,BYTE PTR [rsi+0xb]
  40ac1d:	bzhi   ecx,DWORD PTR [rdx+0xc],ecx
  40ac23:	movsxd rcx,ecx
  40ac26:	lea    rdi,[rcx+rcx*4]
  40ac2a:	shl    rdi,0x3
  40ac2e:	add    rdi,QWORD PTR [rsi+0x20]
  40ac32:	lea    rcx,[rip+0x1eedf]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40ac39:	cmp    DWORD PTR [rdi+0x18],0x4
  40ac3d:	je     40ac4f <__ctype_b_loc@plt+0x897f>
  40ac3f:	nop
  40ac40:	mov    rdi,QWORD PTR [rdi+0x20]
  40ac44:	test   rdi,rdi
  40ac47:	je     40ac58 <__ctype_b_loc@plt+0x8988>
  40ac49:	cmp    DWORD PTR [rdi+0x18],0x4
  40ac4d:	jne    40ac40 <__ctype_b_loc@plt+0x8970>
  40ac4f:	cmp    QWORD PTR [rdi+0x10],rdx
  40ac53:	jne    40ac40 <__ctype_b_loc@plt+0x8970>
  40ac55:	mov    rcx,rdi
  40ac58:	mov    edx,DWORD PTR [rcx+0x8]
  40ac5b:	test   edx,edx
  40ac5d:	je     40b0d4 <__ctype_b_loc@plt+0x8e04>
  40ac63:	xor    ebx,ebx
  40ac65:	test   rcx,rcx
  40ac68:	je     40b0db <__ctype_b_loc@plt+0x8e0b>
  40ac6e:	mov    DWORD PTR [rsp],0x0
  40ac75:	cmp    edx,0x4
  40ac78:	jne    40b0e2 <__ctype_b_loc@plt+0x8e12>
  40ac7e:	mov    rbp,QWORD PTR [rcx]
  40ac81:	add    rbp,0x18
  40ac85:	mov    rdi,rbp
  40ac88:	mov    esi,0x6b
  40ac8d:	call   4020f0 <strchr@plt>
  40ac92:	mov    r12,rax
  40ac95:	xor    ebx,ebx
  40ac97:	test   rax,rax
  40ac9a:	setne  al
  40ac9d:	mov    DWORD PTR [rsp],eax
  40aca0:	mov    bl,al
  40aca2:	mov    rdi,rbp
  40aca5:	mov    esi,0x76
  40acaa:	call   4020f0 <strchr@plt>
  40acaf:	mov    rcx,r12
  40acb2:	or     rcx,rax
  40acb5:	je     40acde <__ctype_b_loc@plt+0x8a0e>
  40acb7:	xor    ecx,ecx
  40acb9:	test   rax,rax
  40acbc:	setne  cl
  40acbf:	mov    dl,BYTE PTR [r15+0x9]
  40acc3:	and    dl,0xe7
  40acc6:	shl    ecx,0x4
  40acc9:	lea    ecx,[rcx+rbx*8]
  40accc:	or     cl,dl
  40acce:	mov    BYTE PTR [r15+0x9],cl
  40acd2:	mov    rcx,QWORD PTR [r14+0x48]
  40acd6:	mov    QWORD PTR [r15+0x30],rcx
  40acda:	mov    QWORD PTR [r14+0x48],r15
  40acde:	test   r12,r12
  40ace1:	je     40acec <__ctype_b_loc@plt+0x8a1c>
  40ace3:	test   rax,rax
  40ace6:	jne    40b1ff <__ctype_b_loc@plt+0x8f2f>
  40acec:	test   rax,rax
  40acef:	je     40b0e2 <__ctype_b_loc@plt+0x8e12>
  40acf5:	mov    QWORD PTR [rsp+0x10],rbx
  40acfa:	mov    bpl,0x1
  40acfd:	mov    DWORD PTR [rsp+0xc],0x1
  40ad05:	jmp    40b135 <__ctype_b_loc@plt+0x8e65>
  40ad0a:	mov    rax,QWORD PTR [r15+0xa0]
  40ad11:	mov    QWORD PTR [r14+0x38],rax
  40ad15:	mov    rax,QWORD PTR [r14+0x40]
  40ad19:	mov    QWORD PTR [r15+0xa0],rax
  40ad20:	mov    QWORD PTR [r14+0x40],r15
  40ad24:	and    BYTE PTR [r15+0x9],0xfb
  40ad29:	cmp    DWORD PTR [r15+0x80],0x4
  40ad31:	jl     40ad45 <__ctype_b_loc@plt+0x8a75>
  40ad33:	mov    rsi,QWORD PTR [r15+0x78]
  40ad37:	test   BYTE PTR [rsi+0x9],0x3
  40ad3b:	je     40ad45 <__ctype_b_loc@plt+0x8a75>
  40ad3d:	mov    rdi,r14
  40ad40:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40ad45:	mov    rax,QWORD PTR [r15+0x10]
  40ad49:	mov    rcx,QWORD PTR [r15+0x28]
  40ad4d:	mov    rdx,QWORD PTR [r15+0x50]
  40ad51:	mov    rbp,rax
  40ad54:	cmp    rdx,rcx
  40ad57:	ja     40ad74 <__ctype_b_loc@plt+0x8aa4>
  40ad59:	mov    rbp,rax
  40ad5c:	nop    DWORD PTR [rax+0x0]
  40ad60:	mov    rsi,QWORD PTR [rdx+0x10]
  40ad64:	cmp    rbp,rsi
  40ad67:	cmovb  rbp,rsi
  40ad6b:	add    rdx,0x28
  40ad6f:	cmp    rdx,rcx
  40ad72:	jbe    40ad60 <__ctype_b_loc@plt+0x8a90>
  40ad74:	mov    rbx,QWORD PTR [r15+0x40]
  40ad78:	cmp    rbx,rax
  40ad7b:	jb     40ad89 <__ctype_b_loc@plt+0x8ab9>
  40ad7d:	jmp    40adbb <__ctype_b_loc@plt+0x8aeb>
  40ad7f:	nop
  40ad80:	add    rbx,0x10
  40ad84:	cmp    rbx,rax
  40ad87:	jae    40adbb <__ctype_b_loc@plt+0x8aeb>
  40ad89:	cmp    DWORD PTR [rbx+0x8],0x4
  40ad8d:	jl     40ad80 <__ctype_b_loc@plt+0x8ab0>
  40ad8f:	mov    rsi,QWORD PTR [rbx]
  40ad92:	test   BYTE PTR [rsi+0x9],0x3
  40ad96:	je     40ad80 <__ctype_b_loc@plt+0x8ab0>
  40ad98:	mov    rdi,r14
  40ad9b:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40ada0:	mov    rax,QWORD PTR [r15+0x10]
  40ada4:	jmp    40ad80 <__ctype_b_loc@plt+0x8ab0>
  40ada6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adb0:	mov    DWORD PTR [rbx+0x8],0x0
  40adb7:	add    rbx,0x10
  40adbb:	cmp    rbx,rbp
  40adbe:	jbe    40adb0 <__ctype_b_loc@plt+0x8ae0>
  40adc0:	movsxd rax,DWORD PTR [r15+0x5c]
  40adc4:	cmp    rax,0x4e20
  40adca:	jle    40af8a <__ctype_b_loc@plt+0x8cba>
  40add0:	mov    r13d,eax
  40add3:	jmp    40b0b6 <__ctype_b_loc@plt+0x8de6>
  40add8:	mov    rax,QWORD PTR [r15+0x10]
  40addc:	mov    QWORD PTR [r14+0x38],rax
  40ade0:	mov    rsi,QWORD PTR [r15+0x18]
  40ade4:	test   BYTE PTR [rsi+0x9],0x3
  40ade8:	je     40adf2 <__ctype_b_loc@plt+0x8b22>
  40adea:	mov    rdi,r14
  40aded:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40adf2:	cmp    BYTE PTR [r15+0xa],0x0
  40adf7:	je     40b02b <__ctype_b_loc@plt+0x8d5b>
  40adfd:	mov    al,BYTE PTR [r15+0xb]
  40ae01:	test   al,al
  40ae03:	je     40b075 <__ctype_b_loc@plt+0x8da5>
  40ae09:	lea    rbx,[r15+0x30]
  40ae0d:	xor    ebp,ebp
  40ae0f:	cmp    DWORD PTR [rbx],0x4
  40ae12:	jge    40ae38 <__ctype_b_loc@plt+0x8b68>
  40ae14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae1e:	xchg   ax,ax
  40ae20:	inc    rbp
  40ae23:	movzx  ecx,al
  40ae26:	add    rbx,0x10
  40ae2a:	cmp    rbp,rcx
  40ae2d:	jae    40b077 <__ctype_b_loc@plt+0x8da7>
  40ae33:	cmp    DWORD PTR [rbx],0x4
  40ae36:	jl     40ae20 <__ctype_b_loc@plt+0x8b50>
  40ae38:	mov    rsi,QWORD PTR [rbx-0x8]
  40ae3c:	test   BYTE PTR [rsi+0x9],0x3
  40ae40:	je     40ae20 <__ctype_b_loc@plt+0x8b50>
  40ae42:	mov    rdi,r14
  40ae45:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40ae4a:	mov    al,BYTE PTR [r15+0xb]
  40ae4e:	jmp    40ae20 <__ctype_b_loc@plt+0x8b50>
  40ae50:	mov    rax,QWORD PTR [r15+0x68]
  40ae54:	mov    QWORD PTR [r14+0x38],rax
  40ae58:	mov    rax,QWORD PTR [r15+0x40]
  40ae5c:	test   rax,rax
  40ae5f:	je     40ae65 <__ctype_b_loc@plt+0x8b95>
  40ae61:	and    BYTE PTR [rax+0x9],0xfc
  40ae65:	mov    eax,DWORD PTR [r15+0x4c]
  40ae69:	test   eax,eax
  40ae6b:	jle    40aeb2 <__ctype_b_loc@plt+0x8be2>
  40ae6d:	mov    ebx,0x8
  40ae72:	xor    ebp,ebp
  40ae74:	jmp    40ae8f <__ctype_b_loc@plt+0x8bbf>
  40ae76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae80:	inc    rbp
  40ae83:	movsxd rcx,eax
  40ae86:	add    rbx,0x10
  40ae8a:	cmp    rbp,rcx
  40ae8d:	jge    40aeb2 <__ctype_b_loc@plt+0x8be2>
  40ae8f:	mov    rcx,QWORD PTR [r15+0x10]
  40ae93:	cmp    DWORD PTR [rcx+rbx*1],0x4
  40ae97:	jl     40ae80 <__ctype_b_loc@plt+0x8bb0>
  40ae99:	mov    rsi,QWORD PTR [rcx+rbx*1-0x8]
  40ae9e:	test   BYTE PTR [rsi+0x9],0x3
  40aea2:	je     40ae80 <__ctype_b_loc@plt+0x8bb0>
  40aea4:	mov    rdi,r14
  40aea7:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40aeac:	mov    eax,DWORD PTR [r15+0x4c]
  40aeb0:	jmp    40ae80 <__ctype_b_loc@plt+0x8bb0>
  40aeb2:	mov    eax,DWORD PTR [r15+0x48]
  40aeb6:	test   eax,eax
  40aeb8:	jle    40aee2 <__ctype_b_loc@plt+0x8c12>
  40aeba:	xor    ecx,ecx
  40aebc:	jmp    40aecb <__ctype_b_loc@plt+0x8bfb>
  40aebe:	xchg   ax,ax
  40aec0:	inc    rcx
  40aec3:	movsxd rdx,eax
  40aec6:	cmp    rcx,rdx
  40aec9:	jge    40aee2 <__ctype_b_loc@plt+0x8c12>
  40aecb:	mov    rdx,QWORD PTR [r15+0x38]
  40aecf:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40aed3:	test   rdx,rdx
  40aed6:	je     40aec0 <__ctype_b_loc@plt+0x8bf0>
  40aed8:	and    BYTE PTR [rdx+0x9],0xfc
  40aedc:	mov    eax,DWORD PTR [r15+0x48]
  40aee0:	jmp    40aec0 <__ctype_b_loc@plt+0x8bf0>
  40aee2:	mov    eax,DWORD PTR [r15+0x58]
  40aee6:	test   eax,eax
  40aee8:	jle    40af1c <__ctype_b_loc@plt+0x8c4c>
  40aeea:	xor    ebx,ebx
  40aeec:	jmp    40aefb <__ctype_b_loc@plt+0x8c2b>
  40aeee:	xchg   ax,ax
  40aef0:	inc    rbx
  40aef3:	movsxd rcx,eax
  40aef6:	cmp    rbx,rcx
  40aef9:	jge    40af1c <__ctype_b_loc@plt+0x8c4c>
  40aefb:	mov    rcx,QWORD PTR [r15+0x20]
  40aeff:	mov    rsi,QWORD PTR [rcx+rbx*8]
  40af03:	test   rsi,rsi
  40af06:	je     40aef0 <__ctype_b_loc@plt+0x8c20>
  40af08:	test   BYTE PTR [rsi+0x9],0x3
  40af0c:	je     40aef0 <__ctype_b_loc@plt+0x8c20>
  40af0e:	mov    rdi,r14
  40af11:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40af16:	mov    eax,DWORD PTR [r15+0x58]
  40af1a:	jmp    40aef0 <__ctype_b_loc@plt+0x8c20>
  40af1c:	movsxd rcx,DWORD PTR [r15+0x5c]
  40af20:	test   rcx,rcx
  40af23:	jle    40af5a <__ctype_b_loc@plt+0x8c8a>
  40af25:	xor    eax,eax
  40af27:	mov    esi,ecx
  40af29:	xor    edx,edx
  40af2b:	jmp    40af3f <__ctype_b_loc@plt+0x8c6f>
  40af2d:	nop    DWORD PTR [rax]
  40af30:	inc    rdx
  40af33:	movsxd rcx,esi
  40af36:	add    rax,0x10
  40af3a:	cmp    rdx,rcx
  40af3d:	jge    40af56 <__ctype_b_loc@plt+0x8c86>
  40af3f:	mov    rcx,QWORD PTR [r15+0x30]
  40af43:	mov    rcx,QWORD PTR [rcx+rax*1]
  40af47:	test   rcx,rcx
  40af4a:	je     40af30 <__ctype_b_loc@plt+0x8c60>
  40af4c:	and    BYTE PTR [rcx+0x9],0xfc
  40af50:	mov    esi,DWORD PTR [r15+0x5c]
  40af54:	jmp    40af30 <__ctype_b_loc@plt+0x8c60>
  40af56:	mov    eax,DWORD PTR [r15+0x58]
  40af5a:	movsxd rdx,DWORD PTR [r15+0x50]
  40af5e:	cdqe   
  40af60:	movsxd rsi,DWORD PTR [r15+0x4c]
  40af64:	add    rsi,rcx
  40af67:	movsxd rcx,DWORD PTR [r15+0x54]
  40af6b:	movsxd rdi,DWORD PTR [r15+0x48]
  40af6f:	shl    rsi,0x4
  40af73:	add    rdi,rax
  40af76:	add    rcx,rdx
  40af79:	lea    rax,[rsi+rcx*4]
  40af7d:	lea    rax,[rax+rdi*8]
  40af81:	add    rax,0x78
  40af85:	jmp    40b221 <__ctype_b_loc@plt+0x8f51>
  40af8a:	sub    rbp,QWORD PTR [r15+0x40]
  40af8e:	cmp    eax,0x11
  40af91:	jl     40b091 <__ctype_b_loc@plt+0x8dc1>
  40af97:	mov    rcx,QWORD PTR [r15+0x28]
  40af9b:	mov    r14,QWORD PTR [r15+0x50]
  40af9f:	sub    rcx,r14
  40afa2:	shr    rcx,0x3
  40afa6:	imul   ecx,ecx,0x33333334
  40afac:	cmp    ecx,eax
  40afae:	jge    40b091 <__ctype_b_loc@plt+0x8dc1>
  40afb4:	mov    r13d,eax
  40afb7:	shr    r13d,1
  40afba:	and    r13d,0x7fff
  40afc1:	shl    rax,0x3
  40afc5:	lea    rdx,[rax+rax*4]
  40afc9:	lea    rax,[r13*8+0x0]
  40afd1:	lea    r12,[rax+rax*4]
  40afd5:	mov    rbx,QWORD PTR [r15+0x20]
  40afd9:	mov    rdi,QWORD PTR [rbx+0x18]
  40afdd:	mov    rsi,r14
  40afe0:	mov    QWORD PTR [rsp],rdx
  40afe4:	mov    rcx,r12
  40afe7:	call   QWORD PTR [rbx+0x10]
  40afea:	test   r13d,r13d
  40afed:	je     40aff8 <__ctype_b_loc@plt+0x8d28>
  40afef:	test   rax,rax
  40aff2:	je     40b230 <__ctype_b_loc@plt+0x8f60>
  40aff8:	sub    r12,QWORD PTR [rsp]
  40affc:	add    QWORD PTR [rbx+0x78],r12
  40b000:	mov    QWORD PTR [r15+0x50],rax
  40b004:	mov    DWORD PTR [r15+0x5c],r13d
  40b008:	mov    rcx,QWORD PTR [r15+0x28]
  40b00c:	sub    rcx,r14
  40b00f:	add    rcx,rax
  40b012:	mov    QWORD PTR [r15+0x28],rcx
  40b016:	mov    ecx,r13d
  40b019:	lea    rcx,[rcx+rcx*4]
  40b01d:	lea    rax,[rax+rcx*8]
  40b021:	add    rax,0xffffffffffffffd8
  40b025:	mov    QWORD PTR [r15+0x48],rax
  40b029:	jmp    40b094 <__ctype_b_loc@plt+0x8dc4>
  40b02b:	mov    rsi,QWORD PTR [r15+0x20]
  40b02f:	test   BYTE PTR [rsi+0x9],0x3
  40b033:	je     40b03d <__ctype_b_loc@plt+0x8d6d>
  40b035:	mov    rdi,r14
  40b038:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b03d:	mov    al,BYTE PTR [r15+0xb]
  40b041:	test   al,al
  40b043:	je     40b075 <__ctype_b_loc@plt+0x8da5>
  40b045:	xor    ebx,ebx
  40b047:	jmp    40b05b <__ctype_b_loc@plt+0x8d8b>
  40b049:	nop    DWORD PTR [rax+0x0]
  40b050:	inc    rbx
  40b053:	movzx  ecx,al
  40b056:	cmp    rbx,rcx
  40b059:	jae    40b077 <__ctype_b_loc@plt+0x8da7>
  40b05b:	mov    rsi,QWORD PTR [r15+rbx*8+0x28]
  40b060:	test   BYTE PTR [rsi+0x9],0x3
  40b064:	je     40b050 <__ctype_b_loc@plt+0x8d80>
  40b066:	mov    rdi,r14
  40b069:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b06e:	movzx  eax,BYTE PTR [r15+0xb]
  40b073:	jmp    40b050 <__ctype_b_loc@plt+0x8d80>
  40b075:	xor    eax,eax
  40b077:	movzx  eax,al
  40b07a:	cmp    BYTE PTR [r15+0xa],0x1
  40b07f:	mov    cl,0x4
  40b081:	sbb    cl,0x0
  40b084:	shlx   eax,eax,ecx
  40b089:	add    eax,0x28
  40b08c:	jmp    40b221 <__ctype_b_loc@plt+0x8f51>
  40b091:	mov    r13d,eax
  40b094:	shr    rbp,0x2
  40b098:	and    ebp,0xfffffffc
  40b09b:	mov    esi,DWORD PTR [r15+0x58]
  40b09f:	cmp    ebp,esi
  40b0a1:	jge    40b0b6 <__ctype_b_loc@plt+0x8de6>
  40b0a3:	cmp    esi,0x5b
  40b0a6:	jl     40b0b6 <__ctype_b_loc@plt+0x8de6>
  40b0a8:	shr    esi,1
  40b0aa:	mov    rdi,r15
  40b0ad:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  40b0b2:	mov    r13d,DWORD PTR [r15+0x5c]
  40b0b6:	movsxd rax,DWORD PTR [r15+0x58]
  40b0ba:	shl    rax,0x4
  40b0be:	movsxd rcx,r13d
  40b0c1:	lea    rcx,[rcx+rcx*4]
  40b0c5:	lea    rax,[rax+rcx*8]
  40b0c9:	add    rax,0xb8
  40b0cf:	jmp    40b221 <__ctype_b_loc@plt+0x8f51>
  40b0d4:	or     al,0x8
  40b0d6:	mov    BYTE PTR [rsi+0xa],al
  40b0d9:	xor    ebx,ebx
  40b0db:	mov    DWORD PTR [rsp],0x0
  40b0e2:	mov    QWORD PTR [rsp+0x10],rbx
  40b0e7:	movsxd rbp,DWORD PTR [r15+0x38]
  40b0eb:	test   rbp,rbp
  40b0ee:	je     40b12b <__ctype_b_loc@plt+0x8e5b>
  40b0f0:	mov    rbx,rbp
  40b0f3:	shl    rbx,0x4
  40b0f7:	add    rbx,0xfffffffffffffff8
  40b0fb:	jmp    40b109 <__ctype_b_loc@plt+0x8e39>
  40b0fd:	nop    DWORD PTR [rax]
  40b100:	add    rbx,0xfffffffffffffff0
  40b104:	test   rbp,rbp
  40b107:	je     40b12b <__ctype_b_loc@plt+0x8e5b>
  40b109:	dec    rbp
  40b10c:	mov    rax,QWORD PTR [r15+0x18]
  40b110:	cmp    DWORD PTR [rax+rbx*1],0x4
  40b114:	jl     40b100 <__ctype_b_loc@plt+0x8e30>
  40b116:	mov    rsi,QWORD PTR [rax+rbx*1-0x8]
  40b11b:	test   BYTE PTR [rsi+0x9],0x3
  40b11f:	je     40b100 <__ctype_b_loc@plt+0x8e30>
  40b121:	mov    rdi,r14
  40b124:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b129:	jmp    40b100 <__ctype_b_loc@plt+0x8e30>
  40b12b:	mov    DWORD PTR [rsp+0xc],0x0
  40b133:	xor    ebp,ebp
  40b135:	mov    al,BYTE PTR [r15+0xb]
  40b139:	mov    ecx,0x1
  40b13e:	shlx   rax,rcx,rax
  40b143:	test   eax,eax
  40b145:	mov    ecx,DWORD PTR [rsp]
  40b148:	je     40b1f4 <__ctype_b_loc@plt+0x8f24>
  40b14e:	movsxd r13,eax
  40b151:	cdqe   
  40b153:	lea    rax,[rax+rax*4]
  40b157:	lea    r12,[rax*8-0x10]
  40b15f:	jmp    40b179 <__ctype_b_loc@plt+0x8ea9>
  40b161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b16b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b170:	add    r12,0xffffffffffffffd8
  40b174:	test   r13,r13
  40b177:	je     40b1f4 <__ctype_b_loc@plt+0x8f24>
  40b179:	dec    r13
  40b17c:	mov    rbx,QWORD PTR [r15+0x20]
  40b180:	cmp    DWORD PTR [rbx+r12*1-0x10],0x0
  40b186:	je     40b1e0 <__ctype_b_loc@plt+0x8f10>
  40b188:	test   cl,cl
  40b18a:	jne    40b1b0 <__ctype_b_loc@plt+0x8ee0>
  40b18c:	cmp    DWORD PTR [rbx+r12*1],0x4
  40b191:	jl     40b1b0 <__ctype_b_loc@plt+0x8ee0>
  40b193:	mov    rsi,QWORD PTR [rbx+r12*1-0x8]
  40b198:	test   BYTE PTR [rsi+0x9],0x3
  40b19c:	je     40b1b0 <__ctype_b_loc@plt+0x8ee0>
  40b19e:	mov    rdi,r14
  40b1a1:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b1a6:	mov    ecx,DWORD PTR [rsp]
  40b1a9:	nop    DWORD PTR [rax+0x0]
  40b1b0:	test   bpl,bpl
  40b1b3:	jne    40b170 <__ctype_b_loc@plt+0x8ea0>
  40b1b5:	cmp    DWORD PTR [rbx+r12*1-0x10],0x4
  40b1bb:	jl     40b170 <__ctype_b_loc@plt+0x8ea0>
  40b1bd:	mov    rsi,QWORD PTR [rbx+r12*1-0x18]
  40b1c2:	test   BYTE PTR [rsi+0x9],0x3
  40b1c6:	je     40b170 <__ctype_b_loc@plt+0x8ea0>
  40b1c8:	mov    rdi,r14
  40b1cb:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b1d0:	mov    ecx,DWORD PTR [rsp]
  40b1d3:	jmp    40b170 <__ctype_b_loc@plt+0x8ea0>
  40b1d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1df:	nop
  40b1e0:	cmp    DWORD PTR [rbx+r12*1],0x4
  40b1e5:	jl     40b170 <__ctype_b_loc@plt+0x8ea0>
  40b1e7:	mov    DWORD PTR [rbx+r12*1],0xb
  40b1ef:	jmp    40b170 <__ctype_b_loc@plt+0x8ea0>
  40b1f4:	mov    rax,QWORD PTR [rsp+0x10]
  40b1f9:	or     DWORD PTR [rsp+0xc],eax
  40b1fd:	je     40b204 <__ctype_b_loc@plt+0x8f34>
  40b1ff:	and    BYTE PTR [r15+0x9],0xfb
  40b204:	movsxd rax,DWORD PTR [r15+0x38]
  40b208:	shl    rax,0x4
  40b20c:	mov    cl,BYTE PTR [r15+0xb]
  40b210:	mov    edx,0x28
  40b215:	shlx   rcx,rdx,rcx
  40b21a:	add    rax,rcx
  40b21d:	add    rax,0x40
  40b221:	add    rsp,0x18
  40b225:	pop    rbx
  40b226:	pop    r12
  40b228:	pop    r13
  40b22a:	pop    r14
  40b22c:	pop    r15
  40b22e:	pop    rbp
  40b22f:	ret    
  40b230:	mov    rdi,QWORD PTR [r15+0xa8]
  40b237:	test   rdi,rdi
  40b23a:	jne    40b273 <__ctype_b_loc@plt+0x8fa3>
  40b23c:	mov    BYTE PTR [r15+0xa],0x4
  40b241:	mov    rax,QWORD PTR [r15+0x20]
  40b245:	cmp    QWORD PTR [rax+0x98],0x0
  40b24d:	je     40b269 <__ctype_b_loc@plt+0x8f99>
  40b24f:	mov    rdi,r15
  40b252:	mov    esi,0x4
  40b257:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  40b25c:	mov    rax,QWORD PTR [r15+0x20]
  40b260:	mov    rdi,r15
  40b263:	call   QWORD PTR [rax+0x98]
  40b269:	mov    edi,0x1
  40b26e:	call   402280 <exit@plt>
  40b273:	mov    DWORD PTR [rdi+0xd0],0x4
  40b27d:	add    rdi,0x8
  40b281:	mov    esi,0x1
  40b286:	call   402230 <longjmp@plt>
  40b28b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b290:	push   rbp
  40b291:	push   r15
  40b293:	push   r14
  40b295:	push   r13
  40b297:	push   r12
  40b299:	push   rbx
  40b29a:	sub    rsp,0x18
  40b29e:	mov    r15,rsi
  40b2a1:	mov    rbx,QWORD PTR [rsi]
  40b2a4:	test   rbx,rbx
  40b2a7:	je     40b552 <__ctype_b_loc@plt+0x9282>
  40b2ad:	mov    r12,rdx
  40b2b0:	mov    r14,rdi
  40b2b3:	mov    rbp,QWORD PTR [rdi+0x20]
  40b2b7:	mov    r13b,BYTE PTR [rbp+0x20]
  40b2bb:	xor    r13b,0x3
  40b2bf:	inc    r12
  40b2c2:	mov    QWORD PTR [rsp+0x8],rbp
  40b2c7:	mov    BYTE PTR [rsp+0x7],r13b
  40b2cc:	dec    r12
  40b2cf:	jne    40b314 <__ctype_b_loc@plt+0x9044>
  40b2d1:	jmp    40b552 <__ctype_b_loc@plt+0x9282>
  40b2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2e0:	movzx  eax,BYTE PTR [rbx+0x9]
  40b2e4:	mov    ecx,eax
  40b2e6:	xor    cl,0x3
  40b2e9:	test   cl,r13b
  40b2ec:	je     40b340 <__ctype_b_loc@plt+0x9070>
  40b2ee:	and    al,0xf8
  40b2f0:	movzx  ecx,BYTE PTR [rbp+0x20]
  40b2f4:	and    cl,0x3
  40b2f7:	or     cl,al
  40b2f9:	mov    BYTE PTR [rbx+0x9],cl
  40b2fc:	mov    r15,rbx
  40b2ff:	mov    rbx,QWORD PTR [r15]
  40b302:	test   rbx,rbx
  40b305:	je     40b552 <__ctype_b_loc@plt+0x9282>
  40b30b:	dec    r12
  40b30e:	je     40b552 <__ctype_b_loc@plt+0x9282>
  40b314:	cmp    BYTE PTR [rbx+0x8],0x8
  40b318:	jne    40b2e0 <__ctype_b_loc@plt+0x9010>
  40b31a:	lea    rsi,[rbx+0x98]
  40b321:	mov    rdi,r14
  40b324:	mov    rdx,0xfffffffffffffffd
  40b32b:	call   40b290 <__ctype_b_loc@plt+0x8fc0>
  40b330:	jmp    40b2e0 <__ctype_b_loc@plt+0x9010>
  40b332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b33c:	nop    DWORD PTR [rax+0x0]
  40b340:	mov    rax,QWORD PTR [rbx]
  40b343:	mov    QWORD PTR [r15],rax
  40b346:	cmp    rbx,QWORD PTR [rbp+0x28]
  40b34a:	jne    40b353 <__ctype_b_loc@plt+0x9083>
  40b34c:	mov    rax,QWORD PTR [rbx]
  40b34f:	mov    QWORD PTR [rbp+0x28],rax
  40b353:	movzx  eax,BYTE PTR [rbx+0x8]
  40b357:	add    al,0xfc
  40b359:	cmp    al,0x6
  40b35b:	ja     40b2ff <__ctype_b_loc@plt+0x902f>
  40b35d:	movzx  eax,al
  40b360:	lea    rcx,[rip+0x1dec9]        # 429230 <__ctype_b_loc@plt+0x26f60>
  40b367:	movsxd rax,DWORD PTR [rcx+rax*4]
  40b36b:	add    rax,rcx
  40b36e:	jmp    rax
  40b370:	mov    rbp,QWORD PTR [r14+0x20]
  40b374:	dec    DWORD PTR [rbp+0x8]
  40b377:	mov    r13,QWORD PTR [rbx+0x10]
  40b37b:	add    r13,0x19
  40b37f:	jmp    40b459 <__ctype_b_loc@plt+0x9189>
  40b384:	mov    rsi,QWORD PTR [rbx+0x20]
  40b388:	lea    rax,[rip+0x1e799]        # 429b28 <__ctype_b_loc@plt+0x27858>
  40b38f:	cmp    rsi,rax
  40b392:	je     40b3b6 <__ctype_b_loc@plt+0x90e6>
  40b394:	movzx  eax,BYTE PTR [rbx+0xb]
  40b398:	mov    ecx,0x28
  40b39d:	shlx   r13,rcx,rax
  40b3a2:	mov    rbp,QWORD PTR [r14+0x20]
  40b3a6:	mov    rdi,QWORD PTR [rbp+0x18]
  40b3aa:	mov    rdx,r13
  40b3ad:	xor    ecx,ecx
  40b3af:	call   QWORD PTR [rbp+0x10]
  40b3b2:	sub    QWORD PTR [rbp+0x78],r13
  40b3b6:	mov    rsi,QWORD PTR [rbx+0x18]
  40b3ba:	movsxd r13,DWORD PTR [rbx+0x38]
  40b3be:	shl    r13,0x4
  40b3c2:	mov    rbp,QWORD PTR [r14+0x20]
  40b3c6:	mov    rdi,QWORD PTR [rbp+0x18]
  40b3ca:	mov    rdx,r13
  40b3cd:	xor    ecx,ecx
  40b3cf:	call   QWORD PTR [rbp+0x10]
  40b3d2:	sub    QWORD PTR [rbp+0x78],r13
  40b3d6:	mov    rbp,QWORD PTR [r14+0x20]
  40b3da:	mov    rdi,QWORD PTR [rbp+0x18]
  40b3de:	mov    edx,0x40
  40b3e3:	mov    rsi,rbx
  40b3e6:	xor    ecx,ecx
  40b3e8:	call   QWORD PTR [rbp+0x10]
  40b3eb:	add    QWORD PTR [rbp+0x78],0xffffffffffffffc0
  40b3f0:	mov    rbp,QWORD PTR [rsp+0x8]
  40b3f5:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b3fb:	jmp    40b2ff <__ctype_b_loc@plt+0x902f>
  40b400:	movzx  eax,BYTE PTR [rbx+0xb]
  40b404:	cmp    BYTE PTR [rbx+0xa],0x1
  40b408:	mov    cl,0x4
  40b40a:	sbb    cl,0x0
  40b40d:	shlx   r13,rax,rcx
  40b412:	add    r13,0x28
  40b416:	mov    QWORD PTR [rsp+0x10],r14
  40b41b:	mov    rax,QWORD PTR [rsp+0x10]
  40b420:	mov    r14,QWORD PTR [rax+0x20]
  40b424:	mov    rdi,QWORD PTR [r14+0x18]
  40b428:	mov    rsi,rbx
  40b42b:	mov    rdx,r13
  40b42e:	xor    ecx,ecx
  40b430:	call   QWORD PTR [r14+0x10]
  40b434:	sub    QWORD PTR [r14+0x78],r13
  40b438:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b43e:	mov    rbp,QWORD PTR [rsp+0x8]
  40b443:	mov    r14,QWORD PTR [rsp+0x10]
  40b448:	jmp    40b2ff <__ctype_b_loc@plt+0x902f>
  40b44d:	mov    r13,QWORD PTR [rbx+0x20]
  40b451:	add    r13,0x28
  40b455:	mov    rbp,QWORD PTR [r14+0x20]
  40b459:	mov    rdi,QWORD PTR [rbp+0x18]
  40b45d:	mov    rsi,rbx
  40b460:	mov    rdx,r13
  40b463:	xor    ecx,ecx
  40b465:	call   QWORD PTR [rbp+0x10]
  40b468:	sub    QWORD PTR [rbp+0x78],r13
  40b46c:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b472:	mov    rbp,QWORD PTR [rsp+0x8]
  40b477:	jmp    40b2ff <__ctype_b_loc@plt+0x902f>
  40b47c:	mov    rsi,QWORD PTR [rbx+0x40]
  40b480:	mov    rdi,rbx
  40b483:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  40b488:	mov    rsi,QWORD PTR [rbx+0x50]
  40b48c:	movsxd rax,DWORD PTR [rbx+0x5c]
  40b490:	shl    rax,0x3
  40b494:	lea    r13,[rax+rax*4]
  40b498:	mov    rbp,QWORD PTR [r14+0x20]
  40b49c:	mov    rdi,QWORD PTR [rbp+0x18]
  40b4a0:	mov    rdx,r13
  40b4a3:	xor    ecx,ecx
  40b4a5:	call   QWORD PTR [rbp+0x10]
  40b4a8:	sub    QWORD PTR [rbp+0x78],r13
  40b4ac:	mov    rsi,QWORD PTR [rbx+0x40]
  40b4b0:	movsxd r13,DWORD PTR [rbx+0x58]
  40b4b4:	shl    r13,0x4
  40b4b8:	mov    rbp,QWORD PTR [r14+0x20]
  40b4bc:	mov    rdi,QWORD PTR [rbp+0x18]
  40b4c0:	mov    rdx,r13
  40b4c3:	xor    ecx,ecx
  40b4c5:	call   QWORD PTR [rbp+0x10]
  40b4c8:	sub    QWORD PTR [rbp+0x78],r13
  40b4cc:	mov    rbp,QWORD PTR [rsp+0x8]
  40b4d1:	mov    r13,QWORD PTR [r14+0x20]
  40b4d5:	mov    rdi,QWORD PTR [r13+0x18]
  40b4d9:	mov    edx,0xb8
  40b4de:	mov    rsi,rbx
  40b4e1:	xor    ecx,ecx
  40b4e3:	call   QWORD PTR [r13+0x10]
  40b4e7:	add    QWORD PTR [r13+0x78],0xffffffffffffff48
  40b4ef:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b4f5:	jmp    40b2ff <__ctype_b_loc@plt+0x902f>
  40b4fa:	mov    rdi,r14
  40b4fd:	mov    rsi,rbx
  40b500:	call   40b8e0 <__ctype_b_loc@plt+0x9610>
  40b505:	jmp    40b2ff <__ctype_b_loc@plt+0x902f>
  40b50a:	lea    rax,[rbx+0x18]
  40b50e:	cmp    QWORD PTR [rbx+0x10],rax
  40b512:	je     40b52c <__ctype_b_loc@plt+0x925c>
  40b514:	mov    rax,QWORD PTR [rbx+0x18]
  40b518:	mov    rcx,QWORD PTR [rbx+0x20]
  40b51c:	mov    QWORD PTR [rcx+0x18],rax
  40b520:	mov    rax,QWORD PTR [rbx+0x18]
  40b524:	mov    rcx,QWORD PTR [rbx+0x20]
  40b528:	mov    QWORD PTR [rax+0x20],rcx
  40b52c:	mov    r13,QWORD PTR [r14+0x20]
  40b530:	mov    rdi,QWORD PTR [r13+0x18]
  40b534:	mov    edx,0x28
  40b539:	mov    rsi,rbx
  40b53c:	xor    ecx,ecx
  40b53e:	call   QWORD PTR [r13+0x10]
  40b542:	add    QWORD PTR [r13+0x78],0xffffffffffffffd8
  40b547:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b54d:	jmp    40b2ff <__ctype_b_loc@plt+0x902f>
  40b552:	mov    rax,r15
  40b555:	add    rsp,0x18
  40b559:	pop    rbx
  40b55a:	pop    r12
  40b55c:	pop    r13
  40b55e:	pop    r14
  40b560:	pop    r15
  40b562:	pop    rbp
  40b563:	ret    
  40b564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b56e:	xchg   ax,ax
  40b570:	push   rbp
  40b571:	push   r15
  40b573:	push   r14
  40b575:	push   rbx
  40b576:	push   rax
  40b577:	mov    r14,rdi
  40b57a:	mov    rbx,QWORD PTR [rdi+0x20]
  40b57e:	mov    rcx,QWORD PTR [rbx+0x50]
  40b582:	mov    rax,QWORD PTR [rcx]
  40b585:	cmp    rax,rcx
  40b588:	je     40b592 <__ctype_b_loc@plt+0x92c2>
  40b58a:	mov    rdx,QWORD PTR [rax]
  40b58d:	mov    QWORD PTR [rcx],rdx
  40b590:	jmp    40b59a <__ctype_b_loc@plt+0x92ca>
  40b592:	mov    QWORD PTR [rbx+0x50],0x0
  40b59a:	mov    rcx,QWORD PTR [rbx+0xb0]
  40b5a1:	mov    rcx,QWORD PTR [rcx]
  40b5a4:	mov    QWORD PTR [rax],rcx
  40b5a7:	mov    rcx,QWORD PTR [rbx+0xb0]
  40b5ae:	mov    QWORD PTR [rcx],rax
  40b5b1:	mov    cl,BYTE PTR [rax+0x9]
  40b5b4:	and    cl,0xf8
  40b5b7:	mov    dl,BYTE PTR [rbx+0x20]
  40b5ba:	and    dl,0x3
  40b5bd:	or     dl,cl
  40b5bf:	mov    BYTE PTR [rax+0x9],dl
  40b5c2:	mov    rcx,QWORD PTR [rax+0x10]
  40b5c6:	test   rcx,rcx
  40b5c9:	je     40b692 <__ctype_b_loc@plt+0x93c2>
  40b5cf:	mov    dl,BYTE PTR [rcx+0xa]
  40b5d2:	test   dl,0x4
  40b5d5:	jne    40b692 <__ctype_b_loc@plt+0x93c2>
  40b5db:	mov    rsi,QWORD PTR [r14+0x20]
  40b5df:	mov    rdi,QWORD PTR [rsi+0x138]
  40b5e6:	mov    sil,BYTE PTR [rcx+0xb]
  40b5ea:	bzhi   esi,DWORD PTR [rdi+0xc],esi
  40b5f0:	movsxd rsi,esi
  40b5f3:	lea    rsi,[rsi+rsi*4]
  40b5f7:	shl    rsi,0x3
  40b5fb:	add    rsi,QWORD PTR [rcx+0x20]
  40b5ff:	lea    r8,[rip+0x1e512]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40b606:	cmp    DWORD PTR [rsi+0x18],0x4
  40b60a:	je     40b61f <__ctype_b_loc@plt+0x934f>
  40b60c:	nop    DWORD PTR [rax+0x0]
  40b610:	mov    rsi,QWORD PTR [rsi+0x20]
  40b614:	test   rsi,rsi
  40b617:	je     40b628 <__ctype_b_loc@plt+0x9358>
  40b619:	cmp    DWORD PTR [rsi+0x18],0x4
  40b61d:	jne    40b610 <__ctype_b_loc@plt+0x9340>
  40b61f:	cmp    QWORD PTR [rsi+0x10],rdi
  40b623:	jne    40b610 <__ctype_b_loc@plt+0x9340>
  40b625:	mov    r8,rsi
  40b628:	cmp    DWORD PTR [r8+0x8],0x0
  40b62d:	je     40b68c <__ctype_b_loc@plt+0x93bc>
  40b62f:	test   r8,r8
  40b632:	je     40b692 <__ctype_b_loc@plt+0x93c2>
  40b634:	mov    bpl,BYTE PTR [r14+0x65]
  40b638:	mov    r15,QWORD PTR [rbx+0x70]
  40b63c:	mov    BYTE PTR [r14+0x65],0x0
  40b641:	mov    rcx,QWORD PTR [rbx+0x78]
  40b645:	add    rcx,rcx
  40b648:	mov    QWORD PTR [rbx+0x70],rcx
  40b64c:	mov    rcx,QWORD PTR [r14+0x10]
  40b650:	mov    rdx,QWORD PTR [r8]
  40b653:	mov    QWORD PTR [rcx],rdx
  40b656:	mov    edx,DWORD PTR [r8+0x8]
  40b65a:	mov    DWORD PTR [rcx+0x8],edx
  40b65d:	mov    rcx,QWORD PTR [r14+0x10]
  40b661:	mov    QWORD PTR [rcx+0x10],rax
  40b665:	mov    DWORD PTR [rcx+0x18],0x7
  40b66c:	mov    rsi,QWORD PTR [r14+0x10]
  40b670:	lea    rax,[rsi+0x20]
  40b674:	mov    QWORD PTR [r14+0x10],rax
  40b678:	mov    rdi,r14
  40b67b:	xor    edx,edx
  40b67d:	call   405020 <__ctype_b_loc@plt+0x2d50>
  40b682:	mov    BYTE PTR [r14+0x65],bpl
  40b686:	mov    QWORD PTR [rbx+0x70],r15
  40b68a:	jmp    40b692 <__ctype_b_loc@plt+0x93c2>
  40b68c:	or     dl,0x4
  40b68f:	mov    BYTE PTR [rcx+0xa],dl
  40b692:	add    rsp,0x8
  40b696:	pop    rbx
  40b697:	pop    r14
  40b699:	pop    r15
  40b69b:	pop    rbp
  40b69c:	ret    
  40b69d:	nop    DWORD PTR [rax]
  40b6a0:	push   rbx
  40b6a1:	mov    rbx,rdi
  40b6a4:	mov    rsi,QWORD PTR [rdi+0xe0]
  40b6ab:	test   rsi,rsi
  40b6ae:	je     40b6be <__ctype_b_loc@plt+0x93ee>
  40b6b0:	test   BYTE PTR [rsi+0x9],0x3
  40b6b4:	je     40b6be <__ctype_b_loc@plt+0x93ee>
  40b6b6:	mov    rdi,rbx
  40b6b9:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b6be:	mov    rsi,QWORD PTR [rbx+0xe8]
  40b6c5:	test   rsi,rsi
  40b6c8:	je     40b6d8 <__ctype_b_loc@plt+0x9408>
  40b6ca:	test   BYTE PTR [rsi+0x9],0x3
  40b6ce:	je     40b6d8 <__ctype_b_loc@plt+0x9408>
  40b6d0:	mov    rdi,rbx
  40b6d3:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b6d8:	mov    rsi,QWORD PTR [rbx+0xf0]
  40b6df:	test   rsi,rsi
  40b6e2:	je     40b6f2 <__ctype_b_loc@plt+0x9422>
  40b6e4:	test   BYTE PTR [rsi+0x9],0x3
  40b6e8:	je     40b6f2 <__ctype_b_loc@plt+0x9422>
  40b6ea:	mov    rdi,rbx
  40b6ed:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b6f2:	mov    rsi,QWORD PTR [rbx+0xf8]
  40b6f9:	test   rsi,rsi
  40b6fc:	je     40b70c <__ctype_b_loc@plt+0x943c>
  40b6fe:	test   BYTE PTR [rsi+0x9],0x3
  40b702:	je     40b70c <__ctype_b_loc@plt+0x943c>
  40b704:	mov    rdi,rbx
  40b707:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b70c:	mov    rsi,QWORD PTR [rbx+0x100]
  40b713:	test   rsi,rsi
  40b716:	je     40b726 <__ctype_b_loc@plt+0x9456>
  40b718:	test   BYTE PTR [rsi+0x9],0x3
  40b71c:	je     40b726 <__ctype_b_loc@plt+0x9456>
  40b71e:	mov    rdi,rbx
  40b721:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b726:	mov    rsi,QWORD PTR [rbx+0x108]
  40b72d:	test   rsi,rsi
  40b730:	je     40b740 <__ctype_b_loc@plt+0x9470>
  40b732:	test   BYTE PTR [rsi+0x9],0x3
  40b736:	je     40b740 <__ctype_b_loc@plt+0x9470>
  40b738:	mov    rdi,rbx
  40b73b:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b740:	mov    rsi,QWORD PTR [rbx+0x110]
  40b747:	test   rsi,rsi
  40b74a:	je     40b75a <__ctype_b_loc@plt+0x948a>
  40b74c:	test   BYTE PTR [rsi+0x9],0x3
  40b750:	je     40b75a <__ctype_b_loc@plt+0x948a>
  40b752:	mov    rdi,rbx
  40b755:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b75a:	mov    rsi,QWORD PTR [rbx+0x118]
  40b761:	test   rsi,rsi
  40b764:	je     40b774 <__ctype_b_loc@plt+0x94a4>
  40b766:	test   BYTE PTR [rsi+0x9],0x3
  40b76a:	je     40b774 <__ctype_b_loc@plt+0x94a4>
  40b76c:	mov    rdi,rbx
  40b76f:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b774:	mov    rsi,QWORD PTR [rbx+0x120]
  40b77b:	test   rsi,rsi
  40b77e:	je     40b78f <__ctype_b_loc@plt+0x94bf>
  40b780:	test   BYTE PTR [rsi+0x9],0x3
  40b784:	je     40b78f <__ctype_b_loc@plt+0x94bf>
  40b786:	mov    rdi,rbx
  40b789:	pop    rbx
  40b78a:	jmp    403fc0 <__ctype_b_loc@plt+0x1cf0>
  40b78f:	pop    rbx
  40b790:	ret    
  40b791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b79b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7a0:	push   rbp
  40b7a1:	push   r15
  40b7a3:	push   r14
  40b7a5:	push   rbx
  40b7a6:	mov    r9,QWORD PTR [rdi+0x20]
  40b7aa:	mov    r10,QWORD PTR [r9+0xb0]
  40b7b1:	mov    rdx,QWORD PTR [r10]
  40b7b4:	xor    eax,eax
  40b7b6:	test   rdx,rdx
  40b7b9:	je     40b8d2 <__ctype_b_loc@plt+0x9602>
  40b7bf:	lea    r8,[rip+0x1e352]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40b7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7d0:	test   esi,esi
  40b7d2:	setne  bl
  40b7d5:	mov    r15b,BYTE PTR [rdx+0x9]
  40b7d9:	test   r15b,0x3
  40b7dd:	setne  cl
  40b7e0:	test   r15b,0x8
  40b7e4:	jne    40b8b8 <__ctype_b_loc@plt+0x95e8>
  40b7ea:	or     bl,cl
  40b7ec:	je     40b8b8 <__ctype_b_loc@plt+0x95e8>
  40b7f2:	mov    r11,QWORD PTR [rdx+0x10]
  40b7f6:	test   r11,r11
  40b7f9:	je     40b8b0 <__ctype_b_loc@plt+0x95e0>
  40b7ff:	mov    r14b,BYTE PTR [r11+0xa]
  40b803:	test   r14b,0x4
  40b807:	jne    40b8b0 <__ctype_b_loc@plt+0x95e0>
  40b80d:	mov    rcx,QWORD PTR [rdi+0x20]
  40b811:	mov    rbp,QWORD PTR [rcx+0x138]
  40b818:	mov    cl,BYTE PTR [r11+0xb]
  40b81c:	bzhi   ecx,DWORD PTR [rbp+0xc],ecx
  40b822:	movsxd rcx,ecx
  40b825:	lea    rbx,[rcx+rcx*4]
  40b829:	shl    rbx,0x3
  40b82d:	add    rbx,QWORD PTR [r11+0x20]
  40b831:	cmp    DWORD PTR [rbx+0x18],0x4
  40b835:	je     40b84f <__ctype_b_loc@plt+0x957f>
  40b837:	nop    WORD PTR [rax+rax*1+0x0]
  40b840:	mov    rbx,QWORD PTR [rbx+0x20]
  40b844:	test   rbx,rbx
  40b847:	je     40b891 <__ctype_b_loc@plt+0x95c1>
  40b849:	cmp    DWORD PTR [rbx+0x18],0x4
  40b84d:	jne    40b840 <__ctype_b_loc@plt+0x9570>
  40b84f:	cmp    QWORD PTR [rbx+0x10],rbp
  40b853:	jne    40b840 <__ctype_b_loc@plt+0x9570>
  40b855:	cmp    DWORD PTR [rbx+0x8],0x0
  40b859:	je     40b89a <__ctype_b_loc@plt+0x95ca>
  40b85b:	test   rbx,rbx
  40b85e:	je     40b8b0 <__ctype_b_loc@plt+0x95e0>
  40b860:	mov    rcx,QWORD PTR [rdx]
  40b863:	mov    rbp,QWORD PTR [rdx+0x20]
  40b867:	add    rax,rbp
  40b86a:	add    rax,0x28
  40b86e:	or     r15b,0x8
  40b872:	mov    BYTE PTR [rdx+0x9],r15b
  40b876:	mov    QWORD PTR [r10],rcx
  40b879:	mov    rcx,QWORD PTR [r9+0x50]
  40b87d:	test   rcx,rcx
  40b880:	je     40b8c9 <__ctype_b_loc@plt+0x95f9>
  40b882:	mov    rcx,QWORD PTR [rcx]
  40b885:	mov    QWORD PTR [rdx],rcx
  40b888:	mov    rcx,QWORD PTR [r9+0x50]
  40b88c:	mov    QWORD PTR [rcx],rdx
  40b88f:	jmp    40b8cc <__ctype_b_loc@plt+0x95fc>
  40b891:	mov    rbx,r8
  40b894:	cmp    DWORD PTR [rbx+0x8],0x0
  40b898:	jne    40b85b <__ctype_b_loc@plt+0x958b>
  40b89a:	or     r14b,0x4
  40b89e:	mov    BYTE PTR [r11+0xa],r14b
  40b8a2:	mov    r15b,BYTE PTR [rdx+0x9]
  40b8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b8b0:	or     r15b,0x8
  40b8b4:	mov    BYTE PTR [rdx+0x9],r15b
  40b8b8:	mov    r10,rdx
  40b8bb:	mov    rdx,QWORD PTR [r10]
  40b8be:	test   rdx,rdx
  40b8c1:	jne    40b7d0 <__ctype_b_loc@plt+0x9500>
  40b8c7:	jmp    40b8d2 <__ctype_b_loc@plt+0x9602>
  40b8c9:	mov    QWORD PTR [rdx],rdx
  40b8cc:	mov    QWORD PTR [r9+0x50],rdx
  40b8d0:	jmp    40b8bb <__ctype_b_loc@plt+0x95eb>
  40b8d2:	pop    rbx
  40b8d3:	pop    r14
  40b8d5:	pop    r15
  40b8d7:	pop    rbp
  40b8d8:	ret    
  40b8d9:	nop    DWORD PTR [rax+0x0]
  40b8e0:	push   r15
  40b8e2:	push   r14
  40b8e4:	push   r12
  40b8e6:	push   rbx
  40b8e7:	push   rax
  40b8e8:	mov    r15,rsi
  40b8eb:	mov    r14,rdi
  40b8ee:	mov    rsi,QWORD PTR [rsi+0x18]
  40b8f2:	movsxd rbx,DWORD PTR [r15+0x50]
  40b8f6:	shl    rbx,0x2
  40b8fa:	mov    r12,QWORD PTR [rdi+0x20]
  40b8fe:	mov    rdi,QWORD PTR [r12+0x18]
  40b903:	mov    rdx,rbx
  40b906:	xor    ecx,ecx
  40b908:	call   QWORD PTR [r12+0x10]
  40b90d:	sub    QWORD PTR [r12+0x78],rbx
  40b912:	mov    rsi,QWORD PTR [r15+0x20]
  40b916:	movsxd rbx,DWORD PTR [r15+0x58]
  40b91a:	shl    rbx,0x3
  40b91e:	mov    r12,QWORD PTR [r14+0x20]
  40b922:	mov    rdi,QWORD PTR [r12+0x18]
  40b927:	mov    rdx,rbx
  40b92a:	xor    ecx,ecx
  40b92c:	call   QWORD PTR [r12+0x10]
  40b931:	sub    QWORD PTR [r12+0x78],rbx
  40b936:	mov    rsi,QWORD PTR [r15+0x10]
  40b93a:	movsxd rbx,DWORD PTR [r15+0x4c]
  40b93e:	shl    rbx,0x4
  40b942:	mov    r12,QWORD PTR [r14+0x20]
  40b946:	mov    rdi,QWORD PTR [r12+0x18]
  40b94b:	mov    rdx,rbx
  40b94e:	xor    ecx,ecx
  40b950:	call   QWORD PTR [r12+0x10]
  40b955:	sub    QWORD PTR [r12+0x78],rbx
  40b95a:	mov    rsi,QWORD PTR [r15+0x28]
  40b95e:	movsxd rbx,DWORD PTR [r15+0x54]
  40b962:	shl    rbx,0x2
  40b966:	mov    r12,QWORD PTR [r14+0x20]
  40b96a:	mov    rdi,QWORD PTR [r12+0x18]
  40b96f:	mov    rdx,rbx
  40b972:	xor    ecx,ecx
  40b974:	call   QWORD PTR [r12+0x10]
  40b979:	sub    QWORD PTR [r12+0x78],rbx
  40b97e:	mov    rsi,QWORD PTR [r15+0x30]
  40b982:	movsxd rbx,DWORD PTR [r15+0x5c]
  40b986:	shl    rbx,0x4
  40b98a:	mov    r12,QWORD PTR [r14+0x20]
  40b98e:	mov    rdi,QWORD PTR [r12+0x18]
  40b993:	mov    rdx,rbx
  40b996:	xor    ecx,ecx
  40b998:	call   QWORD PTR [r12+0x10]
  40b99d:	sub    QWORD PTR [r12+0x78],rbx
  40b9a2:	mov    rsi,QWORD PTR [r15+0x38]
  40b9a6:	movsxd rbx,DWORD PTR [r15+0x48]
  40b9aa:	shl    rbx,0x3
  40b9ae:	mov    r12,QWORD PTR [r14+0x20]
  40b9b2:	mov    rdi,QWORD PTR [r12+0x18]
  40b9b7:	mov    rdx,rbx
  40b9ba:	xor    ecx,ecx
  40b9bc:	call   QWORD PTR [r12+0x10]
  40b9c1:	sub    QWORD PTR [r12+0x78],rbx
  40b9c6:	mov    rbx,QWORD PTR [r14+0x20]
  40b9ca:	mov    rdi,QWORD PTR [rbx+0x18]
  40b9ce:	mov    edx,0x78
  40b9d3:	mov    rsi,r15
  40b9d6:	xor    ecx,ecx
  40b9d8:	call   QWORD PTR [rbx+0x10]
  40b9db:	add    QWORD PTR [rbx+0x78],0xffffffffffffff88
  40b9e0:	add    rsp,0x8
  40b9e4:	pop    rbx
  40b9e5:	pop    r12
  40b9e7:	pop    r14
  40b9e9:	pop    r15
  40b9eb:	ret    
  40b9ec:	nop    DWORD PTR [rax+0x0]
  40b9f0:	push   rbp
  40b9f1:	push   r15
  40b9f3:	push   r14
  40b9f5:	push   r13
  40b9f7:	push   r12
  40b9f9:	push   rbx
  40b9fa:	push   rax
  40b9fb:	mov    r15d,edx
  40b9fe:	mov    r14,rsi
  40ba01:	mov    rbx,rdi
  40ba04:	mov    rax,QWORD PTR [rdi+0x20]
  40ba08:	mov    rcx,QWORD PTR [rax+0x78]
  40ba0c:	cmp    rcx,QWORD PTR [rax+0x70]
  40ba10:	jb     40ba1a <__ctype_b_loc@plt+0x974a>
  40ba12:	mov    rdi,rbx
  40ba15:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40ba1a:	mov    rax,QWORD PTR [rbx+0x28]
  40ba1e:	cmp    rax,QWORD PTR [rbx+0x50]
  40ba22:	je     40ba31 <__ctype_b_loc@plt+0x9761>
  40ba24:	mov    rax,QWORD PTR [rax+0x8]
  40ba28:	mov    rax,QWORD PTR [rax]
  40ba2b:	add    rax,0x18
  40ba2f:	jmp    40ba35 <__ctype_b_loc@plt+0x9765>
  40ba31:	lea    rax,[rbx+0x78]
  40ba35:	mov    r12,QWORD PTR [rax]
  40ba38:	mov    eax,r15d
  40ba3b:	shl    eax,0x4
  40ba3e:	add    eax,0x28
  40ba41:	movsxd r13,eax
  40ba44:	mov    rbp,QWORD PTR [rbx+0x20]
  40ba48:	mov    rdi,QWORD PTR [rbp+0x18]
  40ba4c:	xor    esi,esi
  40ba4e:	xor    edx,edx
  40ba50:	mov    rcx,r13
  40ba53:	call   QWORD PTR [rbp+0x10]
  40ba56:	test   rax,rax
  40ba59:	je     40bb7f <__ctype_b_loc@plt+0x98af>
  40ba5f:	add    QWORD PTR [rbp+0x78],r13
  40ba63:	mov    rcx,QWORD PTR [rbx+0x20]
  40ba67:	mov    rdx,QWORD PTR [rcx+0x28]
  40ba6b:	mov    QWORD PTR [rax],rdx
  40ba6e:	mov    QWORD PTR [rcx+0x28],rax
  40ba72:	mov    cl,BYTE PTR [rcx+0x20]
  40ba75:	and    cl,0x3
  40ba78:	mov    BYTE PTR [rax+0x9],cl
  40ba7b:	mov    BYTE PTR [rax+0x8],0x6
  40ba7f:	mov    BYTE PTR [rax+0xa],0x1
  40ba83:	mov    QWORD PTR [rax+0x18],r12
  40ba87:	mov    BYTE PTR [rax+0xb],r15b
  40ba8b:	mov    QWORD PTR [rax+0x20],r14
  40ba8f:	mov    rdx,QWORD PTR [rbx+0x10]
  40ba93:	movsxd rcx,r15d
  40ba96:	mov    rdi,rcx
  40ba99:	shl    rdi,0x4
  40ba9d:	sub    rdx,rdi
  40baa0:	mov    QWORD PTR [rbx+0x10],rdx
  40baa4:	test   r15d,r15d
  40baa7:	je     40bb61 <__ctype_b_loc@plt+0x9891>
  40baad:	lea    r8,[rcx-0x1]
  40bab1:	mov    r9,rcx
  40bab4:	and    r9,0x3
  40bab8:	je     40bae5 <__ctype_b_loc@plt+0x9815>
  40baba:	xor    esi,esi
  40babc:	nop    DWORD PTR [rax+0x0]
  40bac0:	mov    rbp,QWORD PTR [rdx+rdi*1-0x10]
  40bac5:	mov    QWORD PTR [rax+rdi*1+0x18],rbp
  40baca:	mov    edx,DWORD PTR [rdx+rdi*1-0x8]
  40bace:	mov    DWORD PTR [rax+rdi*1+0x20],edx
  40bad2:	mov    rdx,QWORD PTR [rbx+0x10]
  40bad6:	inc    rsi
  40bad9:	add    rdi,0xfffffffffffffff0
  40badd:	cmp    r9,rsi
  40bae0:	jne    40bac0 <__ctype_b_loc@plt+0x97f0>
  40bae2:	sub    rcx,rsi
  40bae5:	cmp    r8,0x3
  40bae9:	jb     40bb61 <__ctype_b_loc@plt+0x9891>
  40baeb:	mov    rsi,rcx
  40baee:	shl    rsi,0x4
  40baf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bafc:	nop    DWORD PTR [rax+0x0]
  40bb00:	mov    rdi,QWORD PTR [rdx+rsi*1-0x10]
  40bb05:	mov    QWORD PTR [rax+rsi*1+0x18],rdi
  40bb0a:	mov    edx,DWORD PTR [rdx+rsi*1-0x8]
  40bb0e:	mov    DWORD PTR [rax+rsi*1+0x20],edx
  40bb12:	mov    rdx,QWORD PTR [rbx+0x10]
  40bb16:	mov    rdi,QWORD PTR [rdx+rsi*1-0x20]
  40bb1b:	mov    QWORD PTR [rax+rsi*1+0x8],rdi
  40bb20:	mov    edx,DWORD PTR [rdx+rsi*1-0x18]
  40bb24:	mov    DWORD PTR [rax+rsi*1+0x10],edx
  40bb28:	mov    rdx,QWORD PTR [rbx+0x10]
  40bb2c:	mov    rdi,QWORD PTR [rdx+rsi*1-0x30]
  40bb31:	mov    QWORD PTR [rax+rsi*1-0x8],rdi
  40bb36:	mov    edx,DWORD PTR [rdx+rsi*1-0x28]
  40bb3a:	mov    DWORD PTR [rax+rsi*1],edx
  40bb3d:	mov    rdx,QWORD PTR [rbx+0x10]
  40bb41:	mov    rdi,QWORD PTR [rdx+rsi*1-0x40]
  40bb46:	mov    QWORD PTR [rax+rsi*1-0x18],rdi
  40bb4b:	mov    edx,DWORD PTR [rdx+rsi*1-0x38]
  40bb4f:	mov    DWORD PTR [rax+rsi*1-0x10],edx
  40bb53:	add    rsi,0xffffffffffffffc0
  40bb57:	mov    rdx,QWORD PTR [rbx+0x10]
  40bb5b:	add    rcx,0xfffffffffffffffc
  40bb5f:	jne    40bb00 <__ctype_b_loc@plt+0x9830>
  40bb61:	mov    QWORD PTR [rdx],rax
  40bb64:	mov    DWORD PTR [rdx+0x8],0x6
  40bb6b:	add    QWORD PTR [rbx+0x10],0x10
  40bb70:	add    rsp,0x8
  40bb74:	pop    rbx
  40bb75:	pop    r12
  40bb77:	pop    r13
  40bb79:	pop    r14
  40bb7b:	pop    r15
  40bb7d:	pop    rbp
  40bb7e:	ret    
  40bb7f:	mov    rdi,QWORD PTR [rbx+0xa8]
  40bb86:	test   rdi,rdi
  40bb89:	jne    40bbc1 <__ctype_b_loc@plt+0x98f1>
  40bb8b:	mov    BYTE PTR [rbx+0xa],0x4
  40bb8f:	mov    rax,QWORD PTR [rbx+0x20]
  40bb93:	cmp    QWORD PTR [rax+0x98],0x0
  40bb9b:	je     40bbb7 <__ctype_b_loc@plt+0x98e7>
  40bb9d:	mov    rdi,rbx
  40bba0:	mov    esi,0x4
  40bba5:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  40bbaa:	mov    rax,QWORD PTR [rbx+0x20]
  40bbae:	mov    rdi,rbx
  40bbb1:	call   QWORD PTR [rax+0x98]
  40bbb7:	mov    edi,0x1
  40bbbc:	call   402280 <exit@plt>
  40bbc1:	mov    DWORD PTR [rdi+0xd0],0x4
  40bbcb:	add    rdi,0x8
  40bbcf:	mov    esi,0x1
  40bbd4:	call   402230 <longjmp@plt>
  40bbd9:	nop    DWORD PTR [rax+0x0]
  40bbe0:	push   r15
  40bbe2:	push   r14
  40bbe4:	push   rbx
  40bbe5:	sub    rsp,0x10
  40bbe9:	mov    rbx,rdi
  40bbec:	lea    r14,[rdi+0x78]
  40bbf0:	mov    rax,QWORD PTR [rdi+0x10]
  40bbf4:	mov    rcx,QWORD PTR [rdi+0x78]
  40bbf8:	mov    QWORD PTR [rax],rcx
  40bbfb:	mov    ecx,DWORD PTR [rdi+0x80]
  40bc01:	mov    DWORD PTR [rax+0x8],ecx
  40bc04:	add    QWORD PTR [rdi+0x10],0x10
  40bc09:	lea    r15,[rip+0x1e492]        # 42a0a2 <__ctype_b_loc@plt+0x27dd2>
  40bc10:	mov    edx,0x2
  40bc15:	mov    rsi,r15
  40bc18:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bc1d:	mov    QWORD PTR [rsp],rax
  40bc21:	mov    DWORD PTR [rsp+0x8],0x4
  40bc29:	mov    rcx,QWORD PTR [rbx+0x10]
  40bc2d:	add    rcx,0xfffffffffffffff0
  40bc31:	mov    rdx,rsp
  40bc34:	mov    rdi,rbx
  40bc37:	mov    rsi,r14
  40bc3a:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40bc3f:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40bc44:	lea    rdx,[rip+0x23ee5]        # 42fb30 <__ctype_b_loc@plt+0x2d860>
  40bc4b:	mov    rdi,rbx
  40bc4e:	mov    rsi,r15
  40bc51:	call   402960 <__ctype_b_loc@plt+0x690>
  40bc56:	mov    rax,QWORD PTR [rbx+0x20]
  40bc5a:	mov    rcx,QWORD PTR [rax+0x78]
  40bc5e:	cmp    rcx,QWORD PTR [rax+0x70]
  40bc62:	jb     40bc6c <__ctype_b_loc@plt+0x999c>
  40bc64:	mov    rdi,rbx
  40bc67:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40bc6c:	mov    r15,QWORD PTR [rbx+0x10]
  40bc70:	lea    rsi,[rip+0x1e42e]        # 42a0a5 <__ctype_b_loc@plt+0x27dd5>
  40bc77:	mov    edx,0x7
  40bc7c:	mov    rdi,rbx
  40bc7f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bc84:	mov    QWORD PTR [r15],rax
  40bc87:	mov    DWORD PTR [r15+0x8],0x4
  40bc8f:	add    QWORD PTR [rbx+0x10],0x10
  40bc94:	lea    rsi,[rip+0x1e412]        # 42a0ad <__ctype_b_loc@plt+0x27ddd>
  40bc9b:	mov    edx,0x8
  40bca0:	mov    rdi,rbx
  40bca3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bca8:	mov    QWORD PTR [rsp],rax
  40bcac:	mov    DWORD PTR [rsp+0x8],0x4
  40bcb4:	mov    rcx,QWORD PTR [rbx+0x10]
  40bcb8:	add    rcx,0xfffffffffffffff0
  40bcbc:	mov    rdx,rsp
  40bcbf:	mov    rdi,rbx
  40bcc2:	mov    rsi,r14
  40bcc5:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40bcca:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40bccf:	lea    rsi,[rip+0xf7a]        # 40cc50 <__ctype_b_loc@plt+0xa980>
  40bcd6:	mov    rdi,rbx
  40bcd9:	xor    edx,edx
  40bcdb:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40bce0:	lea    rsi,[rip+0xe79]        # 40cb60 <__ctype_b_loc@plt+0xa890>
  40bce7:	mov    rdi,rbx
  40bcea:	mov    edx,0x1
  40bcef:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40bcf4:	mov    r15,QWORD PTR [rbx+0x10]
  40bcf8:	add    r15,0xffffffffffffffe0
  40bcfc:	lea    rsi,[rip+0x1e3b3]        # 42a0b6 <__ctype_b_loc@plt+0x27de6>
  40bd03:	mov    edx,0x6
  40bd08:	mov    rdi,rbx
  40bd0b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bd10:	mov    QWORD PTR [rsp],rax
  40bd14:	mov    DWORD PTR [rsp+0x8],0x4
  40bd1c:	mov    rcx,QWORD PTR [rbx+0x10]
  40bd20:	add    rcx,0xfffffffffffffff0
  40bd24:	mov    rdx,rsp
  40bd27:	mov    rdi,rbx
  40bd2a:	mov    rsi,r15
  40bd2d:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40bd32:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40bd37:	lea    rsi,[rip+0x13d2]        # 40d110 <__ctype_b_loc@plt+0xae40>
  40bd3e:	mov    rdi,rbx
  40bd41:	xor    edx,edx
  40bd43:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40bd48:	lea    rsi,[rip+0x12e1]        # 40d030 <__ctype_b_loc@plt+0xad60>
  40bd4f:	mov    rdi,rbx
  40bd52:	mov    edx,0x1
  40bd57:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40bd5c:	mov    r15,QWORD PTR [rbx+0x10]
  40bd60:	add    r15,0xffffffffffffffe0
  40bd64:	lea    rsi,[rip+0x1e34c]        # 42a0b7 <__ctype_b_loc@plt+0x27de7>
  40bd6b:	mov    edx,0x5
  40bd70:	mov    rdi,rbx
  40bd73:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bd78:	mov    QWORD PTR [rsp],rax
  40bd7c:	mov    DWORD PTR [rsp+0x8],0x4
  40bd84:	mov    rcx,QWORD PTR [rbx+0x10]
  40bd88:	add    rcx,0xfffffffffffffff0
  40bd8c:	mov    rdx,rsp
  40bd8f:	mov    rdi,rbx
  40bd92:	mov    rsi,r15
  40bd95:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40bd9a:	mov    r15,QWORD PTR [rbx+0x10]
  40bd9e:	add    r15,0xfffffffffffffff0
  40bda2:	mov    QWORD PTR [rbx+0x10],r15
  40bda6:	mov    rax,QWORD PTR [rbx+0x20]
  40bdaa:	mov    rcx,QWORD PTR [rax+0x78]
  40bdae:	cmp    rcx,QWORD PTR [rax+0x70]
  40bdb2:	jb     40bdc0 <__ctype_b_loc@plt+0x9af0>
  40bdb4:	mov    rdi,rbx
  40bdb7:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40bdbc:	mov    r15,QWORD PTR [rbx+0x10]
  40bdc0:	mov    rdi,rbx
  40bdc3:	xor    esi,esi
  40bdc5:	mov    edx,0x1
  40bdca:	call   403700 <__ctype_b_loc@plt+0x1430>
  40bdcf:	mov    QWORD PTR [r15],rax
  40bdd2:	mov    DWORD PTR [r15+0x8],0x5
  40bdda:	mov    rax,QWORD PTR [rbx+0x10]
  40bdde:	lea    rcx,[rax+0x10]
  40bde2:	mov    QWORD PTR [rbx+0x10],rcx
  40bde6:	mov    rcx,QWORD PTR [rax]
  40bde9:	mov    QWORD PTR [rax+0x10],rcx
  40bded:	mov    ecx,DWORD PTR [rax+0x8]
  40bdf0:	mov    DWORD PTR [rax+0x18],ecx
  40bdf3:	add    QWORD PTR [rbx+0x10],0x10
  40bdf8:	mov    rdi,rbx
  40bdfb:	mov    esi,0xfffffffe
  40be00:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40be05:	mov    rax,QWORD PTR [rbx+0x20]
  40be09:	mov    rcx,QWORD PTR [rax+0x78]
  40be0d:	cmp    rcx,QWORD PTR [rax+0x70]
  40be11:	jb     40be1b <__ctype_b_loc@plt+0x9b4b>
  40be13:	mov    rdi,rbx
  40be16:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40be1b:	mov    r15,QWORD PTR [rbx+0x10]
  40be1f:	lea    rsi,[rip+0x1e297]        # 42a0bd <__ctype_b_loc@plt+0x27ded>
  40be26:	mov    edx,0x2
  40be2b:	mov    rdi,rbx
  40be2e:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40be33:	mov    QWORD PTR [r15],rax
  40be36:	mov    DWORD PTR [r15+0x8],0x4
  40be3e:	mov    r15,QWORD PTR [rbx+0x10]
  40be42:	lea    rax,[r15+0x10]
  40be46:	mov    QWORD PTR [rbx+0x10],rax
  40be4a:	add    r15,0xfffffffffffffff0
  40be4e:	lea    rsi,[rip+0x1e14d]        # 429fa2 <__ctype_b_loc@plt+0x27cd2>
  40be55:	mov    edx,0x6
  40be5a:	mov    rdi,rbx
  40be5d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40be62:	mov    QWORD PTR [rsp],rax
  40be66:	mov    DWORD PTR [rsp+0x8],0x4
  40be6e:	mov    rcx,QWORD PTR [rbx+0x10]
  40be72:	add    rcx,0xfffffffffffffff0
  40be76:	mov    rdx,rsp
  40be79:	mov    rdi,rbx
  40be7c:	mov    rsi,r15
  40be7f:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40be84:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40be89:	lea    rsi,[rip+0x1710]        # 40d5a0 <__ctype_b_loc@plt+0xb2d0>
  40be90:	mov    rdi,rbx
  40be93:	mov    edx,0x1
  40be98:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40be9d:	lea    rsi,[rip+0x1e21c]        # 42a0c0 <__ctype_b_loc@plt+0x27df0>
  40bea4:	mov    edx,0x8
  40bea9:	mov    rdi,rbx
  40beac:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40beb1:	mov    QWORD PTR [rsp],rax
  40beb5:	mov    DWORD PTR [rsp+0x8],0x4
  40bebd:	mov    rcx,QWORD PTR [rbx+0x10]
  40bec1:	add    rcx,0xfffffffffffffff0
  40bec5:	mov    rdx,rsp
  40bec8:	mov    rdi,rbx
  40becb:	mov    rsi,r14
  40bece:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40bed3:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40bed8:	mov    eax,0x1
  40bedd:	add    rsp,0x10
  40bee1:	pop    rbx
  40bee2:	pop    r14
  40bee4:	pop    r15
  40bee6:	ret    
  40bee7:	nop    WORD PTR [rax+rax*1+0x0]
  40bef0:	push   rax
  40bef1:	lea    rsi,[rip+0x1e712]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40bef8:	lea    rdx,[rip+0x23d01]        # 42fc00 <__ctype_b_loc@plt+0x2d930>
  40beff:	call   402960 <__ctype_b_loc@plt+0x690>
  40bf04:	mov    eax,0x1
  40bf09:	pop    rcx
  40bf0a:	ret    
  40bf0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf10:	push   r15
  40bf12:	push   r14
  40bf14:	push   r12
  40bf16:	push   rbx
  40bf17:	sub    rsp,0x18
  40bf1b:	mov    rbx,rdi
  40bf1e:	mov    r14d,0xa0
  40bf24:	add    r14,QWORD PTR [rdi+0x20]
  40bf28:	lea    rsi,[rip+0x1e7f7]        # 42a726 <__ctype_b_loc@plt+0x28456>
  40bf2f:	mov    edx,0x5
  40bf34:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bf39:	mov    QWORD PTR [rsp+0x8],rax
  40bf3e:	mov    DWORD PTR [rsp+0x10],0x4
  40bf46:	mov    rcx,QWORD PTR [rbx+0x10]
  40bf4a:	lea    rdx,[rsp+0x8]
  40bf4f:	mov    rdi,rbx
  40bf52:	mov    rsi,r14
  40bf55:	call   408610 <__ctype_b_loc@plt+0x6340>
  40bf5a:	mov    r14,QWORD PTR [rbx+0x10]
  40bf5e:	lea    rax,[r14+0x10]
  40bf62:	mov    QWORD PTR [rbx+0x10],rax
  40bf66:	lea    rcx,[rip+0x1dbab]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40bf6d:	cmp    r14,rcx
  40bf70:	je     40c023 <__ctype_b_loc@plt+0x9d53>
  40bf76:	cmp    DWORD PTR [r14+0x8],0x0
  40bf7b:	jne    40c023 <__ctype_b_loc@plt+0x9d53>
  40bf81:	mov    QWORD PTR [rbx+0x10],r14
  40bf85:	mov    rax,QWORD PTR [rbx+0x20]
  40bf89:	mov    rcx,QWORD PTR [rax+0x78]
  40bf8d:	cmp    rcx,QWORD PTR [rax+0x70]
  40bf91:	jb     40bf9f <__ctype_b_loc@plt+0x9ccf>
  40bf93:	mov    rdi,rbx
  40bf96:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40bf9b:	mov    r14,QWORD PTR [rbx+0x10]
  40bf9f:	mov    rdi,rbx
  40bfa2:	xor    esi,esi
  40bfa4:	xor    edx,edx
  40bfa6:	call   403700 <__ctype_b_loc@plt+0x1430>
  40bfab:	mov    QWORD PTR [r14],rax
  40bfae:	mov    DWORD PTR [r14+0x8],0x5
  40bfb6:	mov    rax,QWORD PTR [rbx+0x10]
  40bfba:	lea    rcx,[rax+0x10]
  40bfbe:	mov    QWORD PTR [rbx+0x10],rcx
  40bfc2:	mov    rcx,QWORD PTR [rax]
  40bfc5:	mov    QWORD PTR [rax+0x10],rcx
  40bfc9:	mov    ecx,DWORD PTR [rax+0x8]
  40bfcc:	mov    DWORD PTR [rax+0x18],ecx
  40bfcf:	add    QWORD PTR [rbx+0x10],0x10
  40bfd4:	mov    r14d,0xa0
  40bfda:	add    r14,QWORD PTR [rbx+0x20]
  40bfde:	lea    rsi,[rip+0x1e741]        # 42a726 <__ctype_b_loc@plt+0x28456>
  40bfe5:	mov    edx,0x5
  40bfea:	mov    rdi,rbx
  40bfed:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40bff2:	mov    QWORD PTR [rsp+0x8],rax
  40bff7:	mov    DWORD PTR [rsp+0x10],0x4
  40bfff:	mov    rcx,QWORD PTR [rbx+0x10]
  40c003:	add    rcx,0xfffffffffffffff0
  40c007:	lea    rdx,[rsp+0x8]
  40c00c:	mov    rdi,rbx
  40c00f:	mov    rsi,r14
  40c012:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c017:	mov    rax,QWORD PTR [rbx+0x10]
  40c01b:	add    rax,0xfffffffffffffff0
  40c01f:	mov    QWORD PTR [rbx+0x10],rax
  40c023:	mov    rcx,QWORD PTR [rax-0x10]
  40c027:	mov    QWORD PTR [rax],rcx
  40c02a:	mov    ecx,DWORD PTR [rax-0x8]
  40c02d:	mov    DWORD PTR [rax+0x8],ecx
  40c030:	mov    r14,QWORD PTR [rbx+0x10]
  40c034:	lea    rax,[r14+0x10]
  40c038:	mov    QWORD PTR [rbx+0x10],rax
  40c03c:	add    r14,0xfffffffffffffff0
  40c040:	lea    rsi,[rip+0x1df43]        # 429f8a <__ctype_b_loc@plt+0x27cba>
  40c047:	mov    edx,0x7
  40c04c:	mov    rdi,rbx
  40c04f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c054:	mov    QWORD PTR [rsp+0x8],rax
  40c059:	mov    DWORD PTR [rsp+0x10],0x4
  40c061:	mov    rcx,QWORD PTR [rbx+0x10]
  40c065:	add    rcx,0xfffffffffffffff0
  40c069:	lea    rdx,[rsp+0x8]
  40c06e:	mov    rdi,rbx
  40c071:	mov    rsi,r14
  40c074:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c079:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c07e:	lea    rsi,[rip+0x145fb]        # 420680 <__ctype_b_loc@plt+0x1e3b0>
  40c085:	mov    rdi,rbx
  40c088:	xor    edx,edx
  40c08a:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c08f:	mov    r15,QWORD PTR [rbx+0x10]
  40c093:	add    r15,0xffffffffffffffe0
  40c097:	lea    rsi,[rip+0x1e6b9]        # 42a757 <__ctype_b_loc@plt+0x28487>
  40c09e:	mov    edx,0x5
  40c0a3:	mov    rdi,rbx
  40c0a6:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c0ab:	mov    QWORD PTR [rsp+0x8],rax
  40c0b0:	mov    DWORD PTR [rsp+0x10],0x4
  40c0b8:	mov    rcx,QWORD PTR [rbx+0x10]
  40c0bc:	add    rcx,0xfffffffffffffff0
  40c0c0:	lea    r14,[rsp+0x8]
  40c0c5:	mov    rdi,rbx
  40c0c8:	mov    rsi,r15
  40c0cb:	mov    rdx,r14
  40c0ce:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c0d3:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c0d8:	lea    rsi,[rip+0x14741]        # 420820 <__ctype_b_loc@plt+0x1e550>
  40c0df:	mov    rdi,rbx
  40c0e2:	xor    edx,edx
  40c0e4:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c0e9:	mov    r15,QWORD PTR [rbx+0x10]
  40c0ed:	add    r15,0xffffffffffffffe0
  40c0f1:	lea    rsi,[rip+0x1e634]        # 42a72c <__ctype_b_loc@plt+0x2845c>
  40c0f8:	mov    edx,0x5
  40c0fd:	mov    rdi,rbx
  40c100:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c105:	mov    QWORD PTR [rsp+0x8],rax
  40c10a:	mov    DWORD PTR [rsp+0x10],0x4
  40c112:	mov    rcx,QWORD PTR [rbx+0x10]
  40c116:	add    rcx,0xfffffffffffffff0
  40c11a:	mov    rdi,rbx
  40c11d:	mov    rsi,r15
  40c120:	mov    rdx,r14
  40c123:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c128:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c12d:	lea    rsi,[rip+0x1478c]        # 4208c0 <__ctype_b_loc@plt+0x1e5f0>
  40c134:	mov    rdi,rbx
  40c137:	xor    edx,edx
  40c139:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c13e:	mov    r15,QWORD PTR [rbx+0x10]
  40c142:	add    r15,0xffffffffffffffe0
  40c146:	lea    rsi,[rip+0x1e0c3]        # 42a210 <__ctype_b_loc@plt+0x27f40>
  40c14d:	mov    edx,0x5
  40c152:	mov    rdi,rbx
  40c155:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c15a:	mov    QWORD PTR [rsp+0x8],rax
  40c15f:	mov    DWORD PTR [rsp+0x10],0x4
  40c167:	mov    rcx,QWORD PTR [rbx+0x10]
  40c16b:	add    rcx,0xfffffffffffffff0
  40c16f:	mov    rdi,rbx
  40c172:	mov    rsi,r15
  40c175:	mov    rdx,r14
  40c178:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c17d:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c182:	lea    rsi,[rip+0x147b7]        # 420940 <__ctype_b_loc@plt+0x1e670>
  40c189:	mov    rdi,rbx
  40c18c:	xor    edx,edx
  40c18e:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c193:	mov    r15,QWORD PTR [rbx+0x10]
  40c197:	add    r15,0xffffffffffffffe0
  40c19b:	lea    rsi,[rip+0x1dcc2]        # 429e64 <__ctype_b_loc@plt+0x27b94>
  40c1a2:	mov    edx,0x4
  40c1a7:	mov    rdi,rbx
  40c1aa:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c1af:	mov    QWORD PTR [rsp+0x8],rax
  40c1b4:	mov    DWORD PTR [rsp+0x10],0x4
  40c1bc:	mov    rcx,QWORD PTR [rbx+0x10]
  40c1c0:	add    rcx,0xfffffffffffffff0
  40c1c4:	mov    rdi,rbx
  40c1c7:	mov    rsi,r15
  40c1ca:	mov    rdx,r14
  40c1cd:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c1d2:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c1d7:	lea    rsi,[rip+0x147a2]        # 420980 <__ctype_b_loc@plt+0x1e6b0>
  40c1de:	mov    rdi,rbx
  40c1e1:	xor    edx,edx
  40c1e3:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c1e8:	mov    r15,QWORD PTR [rbx+0x10]
  40c1ec:	add    r15,0xffffffffffffffe0
  40c1f0:	lea    rsi,[rip+0x1e53b]        # 42a732 <__ctype_b_loc@plt+0x28462>
  40c1f7:	mov    edx,0x5
  40c1fc:	mov    rdi,rbx
  40c1ff:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c204:	mov    QWORD PTR [rsp+0x8],rax
  40c209:	mov    DWORD PTR [rsp+0x10],0x4
  40c211:	mov    rcx,QWORD PTR [rbx+0x10]
  40c215:	add    rcx,0xfffffffffffffff0
  40c219:	mov    rdi,rbx
  40c21c:	mov    rsi,r15
  40c21f:	mov    rdx,r14
  40c222:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c227:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c22c:	lea    rsi,[rip+0x1478d]        # 4209c0 <__ctype_b_loc@plt+0x1e6f0>
  40c233:	mov    rdi,rbx
  40c236:	xor    edx,edx
  40c238:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c23d:	mov    r15,QWORD PTR [rbx+0x10]
  40c241:	add    r15,0xffffffffffffffe0
  40c245:	lea    rsi,[rip+0x1dd51]        # 429f9d <__ctype_b_loc@plt+0x27ccd>
  40c24c:	mov    edx,0x4
  40c251:	mov    rdi,rbx
  40c254:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c259:	mov    QWORD PTR [rsp+0x8],rax
  40c25e:	mov    DWORD PTR [rsp+0x10],0x4
  40c266:	mov    rcx,QWORD PTR [rbx+0x10]
  40c26a:	add    rcx,0xfffffffffffffff0
  40c26e:	mov    rdi,rbx
  40c271:	mov    rsi,r15
  40c274:	mov    rdx,r14
  40c277:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c27c:	mov    r14,QWORD PTR [rbx+0x10]
  40c280:	add    r14,0xfffffffffffffff0
  40c284:	mov    QWORD PTR [rbx+0x10],r14
  40c288:	mov    rax,QWORD PTR [rbx+0x20]
  40c28c:	mov    rcx,QWORD PTR [rax+0x78]
  40c290:	cmp    rcx,QWORD PTR [rax+0x70]
  40c294:	jb     40c2a2 <__ctype_b_loc@plt+0x9fd2>
  40c296:	mov    rdi,rbx
  40c299:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40c29e:	mov    r14,QWORD PTR [rbx+0x10]
  40c2a2:	mov    rdi,rbx
  40c2a5:	xor    esi,esi
  40c2a7:	mov    edx,0x1
  40c2ac:	call   403700 <__ctype_b_loc@plt+0x1430>
  40c2b1:	mov    QWORD PTR [r14],rax
  40c2b4:	mov    DWORD PTR [r14+0x8],0x5
  40c2bc:	add    QWORD PTR [rbx+0x10],0x10
  40c2c1:	lea    rsi,[rip+0x14248]        # 420510 <__ctype_b_loc@plt+0x1e240>
  40c2c8:	mov    rdi,rbx
  40c2cb:	xor    edx,edx
  40c2cd:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c2d2:	mov    r14,QWORD PTR [rbx+0x10]
  40c2d6:	add    r14,0xffffffffffffffe0
  40c2da:	lea    rsi,[rip+0x1e474]        # 42a755 <__ctype_b_loc@plt+0x28485>
  40c2e1:	mov    edx,0x7
  40c2e6:	mov    rdi,rbx
  40c2e9:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c2ee:	mov    QWORD PTR [rsp+0x8],rax
  40c2f3:	mov    DWORD PTR [rsp+0x10],0x4
  40c2fb:	mov    rcx,QWORD PTR [rbx+0x10]
  40c2ff:	add    rcx,0xfffffffffffffff0
  40c303:	lea    rdx,[rsp+0x8]
  40c308:	mov    rdi,rbx
  40c30b:	mov    rsi,r14
  40c30e:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c313:	mov    rcx,QWORD PTR [rbx+0x10]
  40c317:	add    rcx,0xfffffffffffffff0
  40c31b:	mov    QWORD PTR [rbx+0x10],rcx
  40c31f:	mov    rax,QWORD PTR [rbx+0x28]
  40c323:	cmp    rax,QWORD PTR [rbx+0x50]
  40c327:	jne    40c342 <__ctype_b_loc@plt+0xa072>
  40c329:	lea    rsi,[rip+0x1e479]        # 42a7a9 <__ctype_b_loc@plt+0x284d9>
  40c330:	mov    rdi,rbx
  40c333:	xor    eax,eax
  40c335:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40c33a:	mov    rcx,QWORD PTR [rbx+0x10]
  40c33e:	mov    rax,QWORD PTR [rbx+0x28]
  40c342:	mov    rdx,QWORD PTR [rax+0x8]
  40c346:	mov    rdx,QWORD PTR [rdx]
  40c349:	mov    rdx,QWORD PTR [rdx+0x18]
  40c34d:	mov    QWORD PTR [rbx+0x88],rdx
  40c354:	mov    DWORD PTR [rbx+0x90],0x5
  40c35e:	mov    rax,QWORD PTR [rax+0x8]
  40c362:	mov    rax,QWORD PTR [rax]
  40c365:	mov    rcx,QWORD PTR [rcx-0x10]
  40c369:	mov    QWORD PTR [rax+0x18],rcx
  40c36d:	mov    rcx,QWORD PTR [rbx+0x10]
  40c371:	cmp    DWORD PTR [rcx-0x8],0x4
  40c375:	jl     40c3a8 <__ctype_b_loc@plt+0xa0d8>
  40c377:	mov    rsi,QWORD PTR [rcx-0x10]
  40c37b:	test   BYTE PTR [rsi+0x9],0x3
  40c37f:	je     40c3a8 <__ctype_b_loc@plt+0xa0d8>
  40c381:	mov    cl,BYTE PTR [rax+0x9]
  40c384:	test   cl,0x4
  40c387:	je     40c3a8 <__ctype_b_loc@plt+0xa0d8>
  40c389:	mov    rdi,QWORD PTR [rbx+0x20]
  40c38d:	cmp    BYTE PTR [rdi+0x21],0x1
  40c391:	jne    40c39a <__ctype_b_loc@plt+0xa0ca>
  40c393:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40c398:	jmp    40c3a8 <__ctype_b_loc@plt+0xa0d8>
  40c39a:	and    cl,0xf8
  40c39d:	mov    dl,BYTE PTR [rdi+0x20]
  40c3a0:	and    dl,0x3
  40c3a3:	or     dl,cl
  40c3a5:	mov    BYTE PTR [rax+0x9],dl
  40c3a8:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c3ad:	lea    rsi,[rip+0x1dce8]        # 42a09c <__ctype_b_loc@plt+0x27dcc>
  40c3b4:	lea    rdx,[rip+0x23895]        # 42fc50 <__ctype_b_loc@plt+0x2d980>
  40c3bb:	mov    rdi,rbx
  40c3be:	call   402960 <__ctype_b_loc@plt+0x690>
  40c3c3:	mov    rax,QWORD PTR [rbx+0x20]
  40c3c7:	mov    rcx,QWORD PTR [rax+0x78]
  40c3cb:	cmp    rcx,QWORD PTR [rax+0x70]
  40c3cf:	jb     40c3d9 <__ctype_b_loc@plt+0xa109>
  40c3d1:	mov    rdi,rbx
  40c3d4:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40c3d9:	mov    r14,QWORD PTR [rbx+0x10]
  40c3dd:	mov    rdi,rbx
  40c3e0:	xor    esi,esi
  40c3e2:	mov    edx,0x1
  40c3e7:	call   403700 <__ctype_b_loc@plt+0x1430>
  40c3ec:	mov    QWORD PTR [r14],rax
  40c3ef:	mov    DWORD PTR [r14+0x8],0x5
  40c3f7:	add    QWORD PTR [rbx+0x10],0x10
  40c3fc:	lea    rsi,[rip+0x1419d]        # 4205a0 <__ctype_b_loc@plt+0x1e2d0>
  40c403:	mov    rdi,rbx
  40c406:	xor    edx,edx
  40c408:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c40d:	mov    r14,QWORD PTR [rbx+0x10]
  40c411:	add    r14,0xffffffffffffffe0
  40c415:	lea    rsi,[rip+0x1e339]        # 42a755 <__ctype_b_loc@plt+0x28485>
  40c41c:	mov    edx,0x7
  40c421:	mov    rdi,rbx
  40c424:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c429:	mov    QWORD PTR [rsp+0x8],rax
  40c42e:	mov    DWORD PTR [rsp+0x10],0x4
  40c436:	mov    rcx,QWORD PTR [rbx+0x10]
  40c43a:	add    rcx,0xfffffffffffffff0
  40c43e:	lea    rdx,[rsp+0x8]
  40c443:	mov    rdi,rbx
  40c446:	mov    rsi,r14
  40c449:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c44e:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c453:	mov    rax,QWORD PTR [rip+0x23b7e]        # 42ffd8 <__ctype_b_loc@plt+0x2dd08>
  40c45a:	mov    r12,QWORD PTR [rax]
  40c45d:	mov    esi,0x8
  40c462:	mov    rdi,rbx
  40c465:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  40c46a:	mov    r14,rax
  40c46d:	mov    QWORD PTR [rax],0x0
  40c474:	mov    r15d,0xa0
  40c47a:	add    r15,QWORD PTR [rbx+0x20]
  40c47e:	lea    rsi,[rip+0x1e2a1]        # 42a726 <__ctype_b_loc@plt+0x28456>
  40c485:	mov    edx,0x5
  40c48a:	mov    rdi,rbx
  40c48d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c492:	mov    QWORD PTR [rsp+0x8],rax
  40c497:	mov    DWORD PTR [rsp+0x10],0x4
  40c49f:	mov    rcx,QWORD PTR [rbx+0x10]
  40c4a3:	lea    rdx,[rsp+0x8]
  40c4a8:	mov    rdi,rbx
  40c4ab:	mov    rsi,r15
  40c4ae:	call   408610 <__ctype_b_loc@plt+0x6340>
  40c4b3:	add    QWORD PTR [rbx+0x10],0x10
  40c4b8:	mov    rdi,rbx
  40c4bb:	mov    esi,0xfffffffe
  40c4c0:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40c4c5:	mov    QWORD PTR [r14],r12
  40c4c8:	mov    rax,QWORD PTR [rbx+0x10]
  40c4cc:	mov    rcx,QWORD PTR [rax-0x10]
  40c4d0:	mov    QWORD PTR [rax],rcx
  40c4d3:	mov    ecx,DWORD PTR [rax-0x8]
  40c4d6:	mov    DWORD PTR [rax+0x8],ecx
  40c4d9:	add    QWORD PTR [rbx+0x10],0x10
  40c4de:	mov    rdi,rbx
  40c4e1:	mov    esi,0xffffd8ef
  40c4e6:	mov    edx,0x1
  40c4eb:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  40c4f0:	mov    rax,QWORD PTR [rbx+0x10]
  40c4f4:	mov    rcx,QWORD PTR [rax-0x20]
  40c4f8:	mov    QWORD PTR [rax],rcx
  40c4fb:	mov    ecx,DWORD PTR [rax-0x18]
  40c4fe:	mov    DWORD PTR [rax+0x8],ecx
  40c501:	mov    rax,QWORD PTR [rbx+0x10]
  40c505:	lea    r14,[rax+0x10]
  40c509:	mov    QWORD PTR [rbx+0x10],r14
  40c50d:	mov    ecx,DWORD PTR [rax-0x8]
  40c510:	cmp    ecx,0x8
  40c513:	je     40c52c <__ctype_b_loc@plt+0xa25c>
  40c515:	cmp    ecx,0x7
  40c518:	je     40c51f <__ctype_b_loc@plt+0xa24f>
  40c51a:	cmp    ecx,0x6
  40c51d:	jne    40c57e <__ctype_b_loc@plt+0xa2ae>
  40c51f:	mov    rcx,QWORD PTR [rax-0x10]
  40c523:	mov    rdx,QWORD PTR [rax]
  40c526:	mov    QWORD PTR [rcx+0x18],rdx
  40c52a:	jmp    40c541 <__ctype_b_loc@plt+0xa271>
  40c52c:	mov    rcx,QWORD PTR [rax-0x10]
  40c530:	mov    rdx,QWORD PTR [rax]
  40c533:	mov    QWORD PTR [rcx+0x78],rdx
  40c537:	mov    DWORD PTR [rcx+0x80],0x5
  40c541:	mov    r14,QWORD PTR [rbx+0x10]
  40c545:	mov    rsi,QWORD PTR [r14-0x10]
  40c549:	test   BYTE PTR [rsi+0x9],0x3
  40c54d:	je     40c57e <__ctype_b_loc@plt+0xa2ae>
  40c54f:	mov    rax,QWORD PTR [rax-0x10]
  40c553:	mov    cl,BYTE PTR [rax+0x9]
  40c556:	test   cl,0x4
  40c559:	je     40c57e <__ctype_b_loc@plt+0xa2ae>
  40c55b:	mov    rdi,QWORD PTR [rbx+0x20]
  40c55f:	cmp    BYTE PTR [rdi+0x21],0x1
  40c563:	jne    40c56c <__ctype_b_loc@plt+0xa29c>
  40c565:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40c56a:	jmp    40c57a <__ctype_b_loc@plt+0xa2aa>
  40c56c:	and    cl,0xf8
  40c56f:	mov    dl,BYTE PTR [rdi+0x20]
  40c572:	and    dl,0x3
  40c575:	or     dl,cl
  40c577:	mov    BYTE PTR [rax+0x9],dl
  40c57a:	mov    r14,QWORD PTR [rbx+0x10]
  40c57e:	lea    rax,[r14-0x10]
  40c582:	mov    QWORD PTR [rbx+0x10],rax
  40c586:	add    r14,0xffffffffffffffc0
  40c58a:	lea    rsi,[rip+0x1e4cd]        # 42aa5e <__ctype_b_loc@plt+0x2878e>
  40c591:	mov    edx,0x5
  40c596:	mov    rdi,rbx
  40c599:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c59e:	mov    QWORD PTR [rsp+0x8],rax
  40c5a3:	mov    DWORD PTR [rsp+0x10],0x4
  40c5ab:	mov    rcx,QWORD PTR [rbx+0x10]
  40c5af:	add    rcx,0xfffffffffffffff0
  40c5b3:	lea    rdx,[rsp+0x8]
  40c5b8:	mov    rdi,rbx
  40c5bb:	mov    rsi,r14
  40c5be:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c5c3:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c5c8:	mov    rax,QWORD PTR [rip+0x23a01]        # 42ffd0 <__ctype_b_loc@plt+0x2dd00>
  40c5cf:	mov    r12,QWORD PTR [rax]
  40c5d2:	mov    esi,0x8
  40c5d7:	mov    rdi,rbx
  40c5da:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  40c5df:	mov    r14,rax
  40c5e2:	mov    QWORD PTR [rax],0x0
  40c5e9:	mov    r15d,0xa0
  40c5ef:	add    r15,QWORD PTR [rbx+0x20]
  40c5f3:	lea    rsi,[rip+0x1e12c]        # 42a726 <__ctype_b_loc@plt+0x28456>
  40c5fa:	mov    edx,0x5
  40c5ff:	mov    rdi,rbx
  40c602:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c607:	mov    QWORD PTR [rsp+0x8],rax
  40c60c:	mov    DWORD PTR [rsp+0x10],0x4
  40c614:	mov    rcx,QWORD PTR [rbx+0x10]
  40c618:	lea    rdx,[rsp+0x8]
  40c61d:	mov    rdi,rbx
  40c620:	mov    rsi,r15
  40c623:	call   408610 <__ctype_b_loc@plt+0x6340>
  40c628:	add    QWORD PTR [rbx+0x10],0x10
  40c62d:	mov    rdi,rbx
  40c630:	mov    esi,0xfffffffe
  40c635:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40c63a:	mov    QWORD PTR [r14],r12
  40c63d:	mov    rax,QWORD PTR [rbx+0x10]
  40c641:	mov    rcx,QWORD PTR [rax-0x10]
  40c645:	mov    QWORD PTR [rax],rcx
  40c648:	mov    ecx,DWORD PTR [rax-0x8]
  40c64b:	mov    DWORD PTR [rax+0x8],ecx
  40c64e:	add    QWORD PTR [rbx+0x10],0x10
  40c653:	mov    rdi,rbx
  40c656:	mov    esi,0xffffd8ef
  40c65b:	mov    edx,0x2
  40c660:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  40c665:	mov    rax,QWORD PTR [rbx+0x10]
  40c669:	mov    rcx,QWORD PTR [rax-0x20]
  40c66d:	mov    QWORD PTR [rax],rcx
  40c670:	mov    ecx,DWORD PTR [rax-0x18]
  40c673:	mov    DWORD PTR [rax+0x8],ecx
  40c676:	mov    rax,QWORD PTR [rbx+0x10]
  40c67a:	lea    r14,[rax+0x10]
  40c67e:	mov    QWORD PTR [rbx+0x10],r14
  40c682:	mov    ecx,DWORD PTR [rax-0x8]
  40c685:	cmp    ecx,0x8
  40c688:	je     40c6a1 <__ctype_b_loc@plt+0xa3d1>
  40c68a:	cmp    ecx,0x7
  40c68d:	je     40c694 <__ctype_b_loc@plt+0xa3c4>
  40c68f:	cmp    ecx,0x6
  40c692:	jne    40c6f3 <__ctype_b_loc@plt+0xa423>
  40c694:	mov    rcx,QWORD PTR [rax-0x10]
  40c698:	mov    rdx,QWORD PTR [rax]
  40c69b:	mov    QWORD PTR [rcx+0x18],rdx
  40c69f:	jmp    40c6b6 <__ctype_b_loc@plt+0xa3e6>
  40c6a1:	mov    rcx,QWORD PTR [rax-0x10]
  40c6a5:	mov    rdx,QWORD PTR [rax]
  40c6a8:	mov    QWORD PTR [rcx+0x78],rdx
  40c6ac:	mov    DWORD PTR [rcx+0x80],0x5
  40c6b6:	mov    r14,QWORD PTR [rbx+0x10]
  40c6ba:	mov    rsi,QWORD PTR [r14-0x10]
  40c6be:	test   BYTE PTR [rsi+0x9],0x3
  40c6c2:	je     40c6f3 <__ctype_b_loc@plt+0xa423>
  40c6c4:	mov    rax,QWORD PTR [rax-0x10]
  40c6c8:	mov    cl,BYTE PTR [rax+0x9]
  40c6cb:	test   cl,0x4
  40c6ce:	je     40c6f3 <__ctype_b_loc@plt+0xa423>
  40c6d0:	mov    rdi,QWORD PTR [rbx+0x20]
  40c6d4:	cmp    BYTE PTR [rdi+0x21],0x1
  40c6d8:	jne    40c6e1 <__ctype_b_loc@plt+0xa411>
  40c6da:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40c6df:	jmp    40c6ef <__ctype_b_loc@plt+0xa41f>
  40c6e1:	and    cl,0xf8
  40c6e4:	mov    dl,BYTE PTR [rdi+0x20]
  40c6e7:	and    dl,0x3
  40c6ea:	or     dl,cl
  40c6ec:	mov    BYTE PTR [rax+0x9],dl
  40c6ef:	mov    r14,QWORD PTR [rbx+0x10]
  40c6f3:	lea    rax,[r14-0x10]
  40c6f7:	mov    QWORD PTR [rbx+0x10],rax
  40c6fb:	add    r14,0xffffffffffffffc0
  40c6ff:	lea    rsi,[rip+0x1e00c]        # 42a712 <__ctype_b_loc@plt+0x28442>
  40c706:	mov    edx,0x6
  40c70b:	mov    rdi,rbx
  40c70e:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c713:	mov    QWORD PTR [rsp+0x8],rax
  40c718:	mov    DWORD PTR [rsp+0x10],0x4
  40c720:	mov    rcx,QWORD PTR [rbx+0x10]
  40c724:	add    rcx,0xfffffffffffffff0
  40c728:	lea    rdx,[rsp+0x8]
  40c72d:	mov    rdi,rbx
  40c730:	mov    rsi,r14
  40c733:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c738:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c73d:	mov    rax,QWORD PTR [rip+0x238ac]        # 42fff0 <__ctype_b_loc@plt+0x2dd20>
  40c744:	mov    r12,QWORD PTR [rax]
  40c747:	mov    esi,0x8
  40c74c:	mov    rdi,rbx
  40c74f:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  40c754:	mov    r14,rax
  40c757:	mov    QWORD PTR [rax],0x0
  40c75e:	mov    r15d,0xa0
  40c764:	add    r15,QWORD PTR [rbx+0x20]
  40c768:	lea    rsi,[rip+0x1dfb7]        # 42a726 <__ctype_b_loc@plt+0x28456>
  40c76f:	mov    edx,0x5
  40c774:	mov    rdi,rbx
  40c777:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c77c:	mov    QWORD PTR [rsp+0x8],rax
  40c781:	mov    DWORD PTR [rsp+0x10],0x4
  40c789:	mov    rcx,QWORD PTR [rbx+0x10]
  40c78d:	lea    rdx,[rsp+0x8]
  40c792:	mov    rdi,rbx
  40c795:	mov    rsi,r15
  40c798:	call   408610 <__ctype_b_loc@plt+0x6340>
  40c79d:	add    QWORD PTR [rbx+0x10],0x10
  40c7a2:	mov    rdi,rbx
  40c7a5:	mov    esi,0xfffffffe
  40c7aa:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40c7af:	mov    QWORD PTR [r14],r12
  40c7b2:	mov    rax,QWORD PTR [rbx+0x10]
  40c7b6:	mov    rcx,QWORD PTR [rax-0x20]
  40c7ba:	mov    QWORD PTR [rax],rcx
  40c7bd:	mov    ecx,DWORD PTR [rax-0x18]
  40c7c0:	mov    DWORD PTR [rax+0x8],ecx
  40c7c3:	mov    rax,QWORD PTR [rbx+0x10]
  40c7c7:	lea    r14,[rax+0x10]
  40c7cb:	mov    QWORD PTR [rbx+0x10],r14
  40c7cf:	mov    ecx,DWORD PTR [rax-0x8]
  40c7d2:	cmp    ecx,0x8
  40c7d5:	je     40c7ee <__ctype_b_loc@plt+0xa51e>
  40c7d7:	cmp    ecx,0x7
  40c7da:	je     40c7e1 <__ctype_b_loc@plt+0xa511>
  40c7dc:	cmp    ecx,0x6
  40c7df:	jne    40c840 <__ctype_b_loc@plt+0xa570>
  40c7e1:	mov    rcx,QWORD PTR [rax-0x10]
  40c7e5:	mov    rdx,QWORD PTR [rax]
  40c7e8:	mov    QWORD PTR [rcx+0x18],rdx
  40c7ec:	jmp    40c803 <__ctype_b_loc@plt+0xa533>
  40c7ee:	mov    rcx,QWORD PTR [rax-0x10]
  40c7f2:	mov    rdx,QWORD PTR [rax]
  40c7f5:	mov    QWORD PTR [rcx+0x78],rdx
  40c7f9:	mov    DWORD PTR [rcx+0x80],0x5
  40c803:	mov    r14,QWORD PTR [rbx+0x10]
  40c807:	mov    rsi,QWORD PTR [r14-0x10]
  40c80b:	test   BYTE PTR [rsi+0x9],0x3
  40c80f:	je     40c840 <__ctype_b_loc@plt+0xa570>
  40c811:	mov    rax,QWORD PTR [rax-0x10]
  40c815:	mov    cl,BYTE PTR [rax+0x9]
  40c818:	test   cl,0x4
  40c81b:	je     40c840 <__ctype_b_loc@plt+0xa570>
  40c81d:	mov    rdi,QWORD PTR [rbx+0x20]
  40c821:	cmp    BYTE PTR [rdi+0x21],0x1
  40c825:	jne    40c82e <__ctype_b_loc@plt+0xa55e>
  40c827:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40c82c:	jmp    40c83c <__ctype_b_loc@plt+0xa56c>
  40c82e:	and    cl,0xf8
  40c831:	mov    dl,BYTE PTR [rdi+0x20]
  40c834:	and    dl,0x3
  40c837:	or     dl,cl
  40c839:	mov    BYTE PTR [rax+0x9],dl
  40c83c:	mov    r14,QWORD PTR [rbx+0x10]
  40c840:	lea    rax,[r14-0x10]
  40c844:	mov    QWORD PTR [rbx+0x10],rax
  40c848:	add    r14,0xffffffffffffffc0
  40c84c:	lea    rsi,[rip+0x1dec6]        # 42a719 <__ctype_b_loc@plt+0x28449>
  40c853:	mov    edx,0x6
  40c858:	mov    rdi,rbx
  40c85b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c860:	mov    QWORD PTR [rsp+0x8],rax
  40c865:	mov    DWORD PTR [rsp+0x10],0x4
  40c86d:	mov    rcx,QWORD PTR [rbx+0x10]
  40c871:	add    rcx,0xfffffffffffffff0
  40c875:	lea    rdx,[rsp+0x8]
  40c87a:	mov    rdi,rbx
  40c87d:	mov    rsi,r14
  40c880:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c885:	mov    r14,QWORD PTR [rbx+0x10]
  40c889:	lea    rax,[r14-0x20]
  40c88d:	mov    QWORD PTR [rbx+0x10],rax
  40c891:	add    r14,0xffffffffffffffd0
  40c895:	lea    rsi,[rip+0x1de84]        # 42a720 <__ctype_b_loc@plt+0x28450>
  40c89c:	mov    edx,0x5
  40c8a1:	mov    rdi,rbx
  40c8a4:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c8a9:	mov    QWORD PTR [rsp+0x8],rax
  40c8ae:	mov    DWORD PTR [rsp+0x10],0x4
  40c8b6:	mov    rcx,QWORD PTR [rbx+0x10]
  40c8ba:	lea    rdx,[rsp+0x8]
  40c8bf:	mov    rdi,rbx
  40c8c2:	mov    rsi,r14
  40c8c5:	call   408610 <__ctype_b_loc@plt+0x6340>
  40c8ca:	mov    r14,QWORD PTR [rbx+0x10]
  40c8ce:	add    r14,0x10
  40c8d2:	mov    QWORD PTR [rbx+0x10],r14
  40c8d6:	mov    rax,QWORD PTR [rbx+0x20]
  40c8da:	mov    rcx,QWORD PTR [rax+0x78]
  40c8de:	cmp    rcx,QWORD PTR [rax+0x70]
  40c8e2:	jb     40c8f0 <__ctype_b_loc@plt+0xa620>
  40c8e4:	mov    rdi,rbx
  40c8e7:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40c8ec:	mov    r14,QWORD PTR [rbx+0x10]
  40c8f0:	mov    rdi,rbx
  40c8f3:	xor    esi,esi
  40c8f5:	mov    edx,0x1
  40c8fa:	call   403700 <__ctype_b_loc@plt+0x1430>
  40c8ff:	mov    QWORD PTR [r14],rax
  40c902:	mov    DWORD PTR [r14+0x8],0x5
  40c90a:	add    QWORD PTR [rbx+0x10],0x10
  40c90f:	lea    rsi,[rip+0x13cfa]        # 420610 <__ctype_b_loc@plt+0x1e340>
  40c916:	mov    rdi,rbx
  40c919:	xor    edx,edx
  40c91b:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  40c920:	mov    r14,QWORD PTR [rbx+0x10]
  40c924:	add    r14,0xffffffffffffffe0
  40c928:	lea    rsi,[rip+0x1de26]        # 42a755 <__ctype_b_loc@plt+0x28485>
  40c92f:	mov    edx,0x7
  40c934:	mov    rdi,rbx
  40c937:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40c93c:	mov    QWORD PTR [rsp+0x8],rax
  40c941:	mov    DWORD PTR [rsp+0x10],0x4
  40c949:	mov    rcx,QWORD PTR [rbx+0x10]
  40c94d:	add    rcx,0xfffffffffffffff0
  40c951:	lea    rdx,[rsp+0x8]
  40c956:	mov    rdi,rbx
  40c959:	mov    rsi,r14
  40c95c:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40c961:	mov    rax,QWORD PTR [rbx+0x10]
  40c965:	lea    rcx,[rax-0x10]
  40c969:	mov    QWORD PTR [rbx+0x10],rcx
  40c96d:	mov    edx,DWORD PTR [rax-0x28]
  40c970:	cmp    edx,0x8
  40c973:	je     40c98d <__ctype_b_loc@plt+0xa6bd>
  40c975:	cmp    edx,0x7
  40c978:	je     40c97f <__ctype_b_loc@plt+0xa6af>
  40c97a:	cmp    edx,0x6
  40c97d:	jne    40c9e0 <__ctype_b_loc@plt+0xa710>
  40c97f:	mov    rcx,QWORD PTR [rax-0x30]
  40c983:	mov    rdx,QWORD PTR [rax-0x20]
  40c987:	mov    QWORD PTR [rcx+0x18],rdx
  40c98b:	jmp    40c9a3 <__ctype_b_loc@plt+0xa6d3>
  40c98d:	mov    rcx,QWORD PTR [rax-0x30]
  40c991:	mov    rdx,QWORD PTR [rax-0x20]
  40c995:	mov    QWORD PTR [rcx+0x78],rdx
  40c999:	mov    DWORD PTR [rcx+0x80],0x5
  40c9a3:	mov    rcx,QWORD PTR [rbx+0x10]
  40c9a7:	mov    rsi,QWORD PTR [rcx-0x10]
  40c9ab:	test   BYTE PTR [rsi+0x9],0x3
  40c9af:	je     40c9e0 <__ctype_b_loc@plt+0xa710>
  40c9b1:	mov    rax,QWORD PTR [rax-0x30]
  40c9b5:	mov    dl,BYTE PTR [rax+0x9]
  40c9b8:	test   dl,0x4
  40c9bb:	je     40c9e0 <__ctype_b_loc@plt+0xa710>
  40c9bd:	mov    rdi,QWORD PTR [rbx+0x20]
  40c9c1:	cmp    BYTE PTR [rdi+0x21],0x1
  40c9c5:	jne    40c9ce <__ctype_b_loc@plt+0xa6fe>
  40c9c7:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40c9cc:	jmp    40c9dc <__ctype_b_loc@plt+0xa70c>
  40c9ce:	and    dl,0xf8
  40c9d1:	mov    cl,BYTE PTR [rdi+0x20]
  40c9d4:	and    cl,0x3
  40c9d7:	or     cl,dl
  40c9d9:	mov    BYTE PTR [rax+0x9],cl
  40c9dc:	mov    rcx,QWORD PTR [rbx+0x10]
  40c9e0:	add    rcx,0xffffffffffffffe0
  40c9e4:	mov    QWORD PTR [rbx+0x10],rcx
  40c9e8:	mov    eax,0x1
  40c9ed:	add    rsp,0x18
  40c9f1:	pop    rbx
  40c9f2:	pop    r12
  40c9f4:	pop    r14
  40c9f6:	pop    r15
  40c9f8:	ret    
  40c9f9:	nop    DWORD PTR [rax+0x0]
  40ca00:	push   rax
  40ca01:	lea    rsi,[rip+0x1d697]        # 42a09f <__ctype_b_loc@plt+0x27dcf>
  40ca08:	lea    rdx,[rip+0x232e1]        # 42fcf0 <__ctype_b_loc@plt+0x2da20>
  40ca0f:	call   402960 <__ctype_b_loc@plt+0x690>
  40ca14:	mov    eax,0x1
  40ca19:	pop    rcx
  40ca1a:	ret    
  40ca1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca20:	push   r14
  40ca22:	push   rbx
  40ca23:	sub    rsp,0x18
  40ca27:	mov    rbx,rdi
  40ca2a:	lea    rsi,[rip+0x1d838]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  40ca31:	lea    rdx,[rip+0x232e8]        # 42fd20 <__ctype_b_loc@plt+0x2da50>
  40ca38:	call   402960 <__ctype_b_loc@plt+0x690>
  40ca3d:	mov    rax,QWORD PTR [rbx+0x20]
  40ca41:	mov    rcx,QWORD PTR [rax+0x78]
  40ca45:	cmp    rcx,QWORD PTR [rax+0x70]
  40ca49:	jb     40ca53 <__ctype_b_loc@plt+0xa783>
  40ca4b:	mov    rdi,rbx
  40ca4e:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40ca53:	mov    r14,QWORD PTR [rbx+0x10]
  40ca57:	mov    rdi,rbx
  40ca5a:	xor    esi,esi
  40ca5c:	mov    edx,0x1
  40ca61:	call   403700 <__ctype_b_loc@plt+0x1430>
  40ca66:	mov    QWORD PTR [r14],rax
  40ca69:	mov    DWORD PTR [r14+0x8],0x5
  40ca71:	mov    r14,QWORD PTR [rbx+0x10]
  40ca75:	mov    rax,QWORD PTR [rbx+0x20]
  40ca79:	add    r14,0x10
  40ca7d:	mov    QWORD PTR [rbx+0x10],r14
  40ca81:	mov    rcx,QWORD PTR [rax+0x78]
  40ca85:	cmp    rcx,QWORD PTR [rax+0x70]
  40ca89:	jb     40ca97 <__ctype_b_loc@plt+0xa7c7>
  40ca8b:	mov    rdi,rbx
  40ca8e:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40ca93:	mov    r14,QWORD PTR [rbx+0x10]
  40ca97:	lea    rsi,[rip+0x1d5fd]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  40ca9e:	mov    rdi,rbx
  40caa1:	xor    edx,edx
  40caa3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40caa8:	mov    QWORD PTR [r14],rax
  40caab:	mov    DWORD PTR [r14+0x8],0x4
  40cab3:	mov    rax,QWORD PTR [rbx+0x10]
  40cab7:	lea    rcx,[rax+0x10]
  40cabb:	mov    QWORD PTR [rbx+0x10],rcx
  40cabf:	mov    rcx,QWORD PTR [rax-0x10]
  40cac3:	mov    QWORD PTR [rax+0x10],rcx
  40cac7:	mov    ecx,DWORD PTR [rax-0x8]
  40caca:	mov    DWORD PTR [rax+0x18],ecx
  40cacd:	add    QWORD PTR [rbx+0x10],0x10
  40cad2:	mov    rdi,rbx
  40cad5:	mov    esi,0xfffffffe
  40cada:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40cadf:	mov    rax,QWORD PTR [rbx+0x10]
  40cae3:	lea    rcx,[rax-0x10]
  40cae7:	mov    QWORD PTR [rbx+0x10],rcx
  40caeb:	mov    rcx,QWORD PTR [rax-0x30]
  40caef:	mov    QWORD PTR [rax-0x10],rcx
  40caf3:	mov    ecx,DWORD PTR [rax-0x28]
  40caf6:	mov    DWORD PTR [rax-0x8],ecx
  40caf9:	mov    r14,QWORD PTR [rbx+0x10]
  40cafd:	lea    rax,[r14+0x10]
  40cb01:	mov    QWORD PTR [rbx+0x10],rax
  40cb05:	add    r14,0xfffffffffffffff0
  40cb09:	lea    rsi,[rip+0x1d47a]        # 429f8a <__ctype_b_loc@plt+0x27cba>
  40cb10:	mov    edx,0x7
  40cb15:	mov    rdi,rbx
  40cb18:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40cb1d:	mov    QWORD PTR [rsp+0x8],rax
  40cb22:	mov    DWORD PTR [rsp+0x10],0x4
  40cb2a:	mov    rcx,QWORD PTR [rbx+0x10]
  40cb2e:	add    rcx,0xfffffffffffffff0
  40cb32:	lea    rdx,[rsp+0x8]
  40cb37:	mov    rdi,rbx
  40cb3a:	mov    rsi,r14
  40cb3d:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  40cb42:	mov    rax,QWORD PTR [rbx+0x10]
  40cb46:	add    rax,0xffffffffffffffe0
  40cb4a:	mov    QWORD PTR [rbx+0x10],rax
  40cb4e:	mov    eax,0x1
  40cb53:	add    rsp,0x18
  40cb57:	pop    rbx
  40cb58:	pop    r14
  40cb5a:	ret    
  40cb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb60:	push   r14
  40cb62:	push   rbx
  40cb63:	push   rax
  40cb64:	mov    rbx,rdi
  40cb67:	mov    rdx,QWORD PTR [rdi+0x18]
  40cb6b:	lea    r14,[rip+0x1cfa6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40cb72:	lea    rcx,[rip+0x1d65d]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40cb79:	cmp    rdx,r14
  40cb7c:	je     40cba1 <__ctype_b_loc@plt+0xa8d1>
  40cb7e:	mov    rax,QWORD PTR [rbx+0x10]
  40cb82:	cmp    rdx,rax
  40cb85:	jae    40cba1 <__ctype_b_loc@plt+0xa8d1>
  40cb87:	movsxd rdx,DWORD PTR [rdx+0x8]
  40cb8b:	cmp    rdx,0xffffffffffffffff
  40cb8f:	je     40cba1 <__ctype_b_loc@plt+0xa8d1>
  40cb91:	cmp    edx,0x5
  40cb94:	je     40cbcd <__ctype_b_loc@plt+0xa8fd>
  40cb96:	lea    rax,[rip+0x22d43]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40cb9d:	mov    rcx,QWORD PTR [rax+rdx*8]
  40cba1:	lea    rsi,[rip+0x1d61a]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40cba8:	lea    rdx,[rip+0x1da5b]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40cbaf:	mov    rdi,rbx
  40cbb2:	xor    eax,eax
  40cbb4:	call   410460 <__ctype_b_loc@plt+0xe190>
  40cbb9:	mov    rdi,rbx
  40cbbc:	mov    esi,0x1
  40cbc1:	mov    rdx,rax
  40cbc4:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40cbc9:	mov    rax,QWORD PTR [rbx+0x10]
  40cbcd:	mov    rcx,QWORD PTR [rbx+0x28]
  40cbd1:	mov    rcx,QWORD PTR [rcx+0x8]
  40cbd5:	mov    rcx,QWORD PTR [rcx]
  40cbd8:	cmp    BYTE PTR [rcx+0xb],0x0
  40cbdc:	lea    rcx,[rcx+0x28]
  40cbe0:	cmove  rcx,r14
  40cbe4:	mov    rdx,QWORD PTR [rcx]
  40cbe7:	mov    QWORD PTR [rax],rdx
  40cbea:	mov    ecx,DWORD PTR [rcx+0x8]
  40cbed:	mov    DWORD PTR [rax+0x8],ecx
  40cbf0:	mov    rax,QWORD PTR [rbx+0x10]
  40cbf4:	mov    rcx,QWORD PTR [rbx+0x18]
  40cbf8:	lea    rdx,[rax+0x10]
  40cbfc:	mov    QWORD PTR [rbx+0x10],rdx
  40cc00:	cmp    rcx,rdx
  40cc03:	cmovb  r14,rcx
  40cc07:	mov    rcx,QWORD PTR [r14]
  40cc0a:	mov    QWORD PTR [rax+0x10],rcx
  40cc0e:	mov    ecx,DWORD PTR [r14+0x8]
  40cc12:	mov    DWORD PTR [rax+0x18],ecx
  40cc15:	mov    rax,QWORD PTR [rbx+0x10]
  40cc19:	lea    rcx,[rax+0x10]
  40cc1d:	mov    QWORD PTR [rbx+0x10],rcx
  40cc21:	mov    QWORD PTR [rax+0x10],0x0
  40cc29:	mov    DWORD PTR [rax+0x18],0x3
  40cc30:	add    QWORD PTR [rbx+0x10],0x10
  40cc35:	mov    eax,0x3
  40cc3a:	add    rsp,0x8
  40cc3e:	pop    rbx
  40cc3f:	pop    r14
  40cc41:	ret    
  40cc42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc4c:	nop    DWORD PTR [rax+0x0]
  40cc50:	push   rbp
  40cc51:	push   r15
  40cc53:	push   r14
  40cc55:	push   r13
  40cc57:	push   r12
  40cc59:	push   rbx
  40cc5a:	sub    rsp,0x98
  40cc61:	mov    r15,rdi
  40cc64:	mov    rax,QWORD PTR [rdi+0x18]
  40cc68:	add    rax,0x10
  40cc6c:	cmp    rax,QWORD PTR [rdi+0x10]
  40cc70:	lea    r12,[rip+0x1cea1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40cc77:	cmovae rax,r12
  40cc7b:	mov    ecx,DWORD PTR [rax+0x8]
  40cc7e:	cmp    ecx,0x3
  40cc81:	je     40cd3c <__ctype_b_loc@plt+0xaa6c>
  40cc87:	cmp    ecx,0x4
  40cc8a:	jne    40cd4a <__ctype_b_loc@plt+0xaa7a>
  40cc90:	mov    r14,QWORD PTR [rax]
  40cc93:	add    r14,0x18
  40cc97:	lea    rsi,[rsp+0x20]
  40cc9c:	mov    rdi,r14
  40cc9f:	call   4020b0 <strtod@plt>
  40cca4:	mov    rbx,QWORD PTR [rsp+0x20]
  40cca9:	cmp    rbx,r14
  40ccac:	je     40cd4a <__ctype_b_loc@plt+0xaa7a>
  40ccb2:	mov    bpl,BYTE PTR [rbx]
  40ccb5:	mov    eax,ebp
  40ccb7:	or     al,0x20
  40ccb9:	cmp    al,0x78
  40ccbb:	jne    40ccf0 <__ctype_b_loc@plt+0xaa20>
  40ccbd:	lea    rsi,[rsp+0x20]
  40ccc2:	mov    rdi,r14
  40ccc5:	mov    edx,0x10
  40ccca:	call   402250 <strtoul@plt>
  40cccf:	vmovq  xmm0,rax
  40ccd4:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1cf94]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  40ccdc:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1cf9c]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  40cce4:	vhaddpd xmm0,xmm0,xmm0
  40cce8:	mov    rbx,QWORD PTR [rsp+0x20]
  40cced:	mov    bpl,BYTE PTR [rbx]
  40ccf0:	test   bpl,bpl
  40ccf3:	je     40cd31 <__ctype_b_loc@plt+0xaa61>
  40ccf5:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  40ccfb:	call   4022d0 <__ctype_b_loc@plt>
  40cd00:	mov    rax,QWORD PTR [rax]
  40cd03:	movzx  ecx,bpl
  40cd07:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cd0c:	je     40cd4a <__ctype_b_loc@plt+0xaa7a>
  40cd0e:	inc    rbx
  40cd11:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  40cd17:	nop    WORD PTR [rax+rax*1+0x0]
  40cd20:	movzx  ecx,BYTE PTR [rbx]
  40cd23:	inc    rbx
  40cd26:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cd2b:	jne    40cd20 <__ctype_b_loc@plt+0xaa50>
  40cd2d:	test   cl,cl
  40cd2f:	jne    40cd4a <__ctype_b_loc@plt+0xaa7a>
  40cd31:	lea    rax,[rsp+0x8]
  40cd36:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40cd3c:	vcvttsd2si rbx,QWORD PTR [rax]
  40cd41:	test   rbx,rbx
  40cd44:	jne    40ced1 <__ctype_b_loc@plt+0xac01>
  40cd4a:	mov    rax,QWORD PTR [r15+0x18]
  40cd4e:	add    rax,0x10
  40cd52:	cmp    rax,QWORD PTR [r15+0x10]
  40cd56:	lea    r13,[rip+0x1cdbb]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40cd5d:	cmovae rax,r13
  40cd61:	mov    ecx,DWORD PTR [rax+0x8]
  40cd64:	cmp    ecx,0x3
  40cd67:	je     40cecf <__ctype_b_loc@plt+0xabff>
  40cd6d:	cmp    ecx,0x4
  40cd70:	jne    40cdf5 <__ctype_b_loc@plt+0xab25>
  40cd76:	mov    r14,QWORD PTR [rax]
  40cd79:	add    r14,0x18
  40cd7d:	lea    rsi,[rsp+0x20]
  40cd82:	mov    rdi,r14
  40cd85:	call   4020b0 <strtod@plt>
  40cd8a:	mov    rbx,QWORD PTR [rsp+0x20]
  40cd8f:	cmp    rbx,r14
  40cd92:	je     40cdf5 <__ctype_b_loc@plt+0xab25>
  40cd94:	mov    bpl,BYTE PTR [rbx]
  40cd97:	mov    eax,ebp
  40cd99:	or     al,0x20
  40cd9b:	cmp    al,0x78
  40cd9d:	jne    40cdb9 <__ctype_b_loc@plt+0xaae9>
  40cd9f:	lea    rsi,[rsp+0x20]
  40cda4:	mov    rdi,r14
  40cda7:	mov    edx,0x10
  40cdac:	call   402250 <strtoul@plt>
  40cdb1:	mov    rbx,QWORD PTR [rsp+0x20]
  40cdb6:	mov    bpl,BYTE PTR [rbx]
  40cdb9:	test   bpl,bpl
  40cdbc:	je     40cecf <__ctype_b_loc@plt+0xabff>
  40cdc2:	call   4022d0 <__ctype_b_loc@plt>
  40cdc7:	mov    rax,QWORD PTR [rax]
  40cdca:	movzx  ecx,bpl
  40cdce:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cdd3:	je     40cdf5 <__ctype_b_loc@plt+0xab25>
  40cdd5:	inc    rbx
  40cdd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cde0:	movzx  ecx,BYTE PTR [rbx]
  40cde3:	inc    rbx
  40cde6:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cdeb:	jne    40cde0 <__ctype_b_loc@plt+0xab10>
  40cded:	test   cl,cl
  40cdef:	je     40cecf <__ctype_b_loc@plt+0xabff>
  40cdf5:	mov    rax,QWORD PTR [r15+0x18]
  40cdf9:	lea    rdx,[rax+0x10]
  40cdfd:	lea    rcx,[rip+0x1d3d2]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40ce04:	cmp    rdx,QWORD PTR [r15+0x10]
  40ce08:	jae    40ce24 <__ctype_b_loc@plt+0xab54>
  40ce0a:	cmp    rdx,r13
  40ce0d:	je     40ce24 <__ctype_b_loc@plt+0xab54>
  40ce0f:	movsxd rax,DWORD PTR [rax+0x18]
  40ce13:	cmp    rax,0xffffffffffffffff
  40ce17:	je     40ce24 <__ctype_b_loc@plt+0xab54>
  40ce19:	lea    rcx,[rip+0x22ac0]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40ce20:	mov    rcx,QWORD PTR [rcx+rax*8]
  40ce24:	lea    rsi,[rip+0x1d397]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40ce2b:	lea    rdx,[rip+0x1d06f]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  40ce32:	mov    rdi,r15
  40ce35:	xor    eax,eax
  40ce37:	call   410460 <__ctype_b_loc@plt+0xe190>
  40ce3c:	mov    r14,rax
  40ce3f:	mov    rax,QWORD PTR [r15+0x28]
  40ce43:	sub    rax,QWORD PTR [r15+0x50]
  40ce47:	jbe    40ceb6 <__ctype_b_loc@plt+0xabe6>
  40ce49:	shr    rax,0x3
  40ce4d:	imul   eax,eax,0xcccccccd
  40ce53:	mov    DWORD PTR [rsp+0x94],eax
  40ce5a:	lea    rsi,[rip+0x1cff6]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40ce61:	lea    rdx,[rsp+0x20]
  40ce66:	mov    rdi,r15
  40ce69:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40ce6e:	mov    rdi,QWORD PTR [rsp+0x30]
  40ce73:	lea    rsi,[rip+0x1d2d6]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40ce7a:	call   402170 <strcmp@plt>
  40ce7f:	cmp    eax,0x1
  40ce82:	mov    edx,0x2
  40ce87:	sbb    edx,0x0
  40ce8a:	mov    rcx,QWORD PTR [rsp+0x28]
  40ce8f:	test   rcx,rcx
  40ce92:	jne    40cea0 <__ctype_b_loc@plt+0xabd0>
  40ce94:	lea    rcx,[rip+0x1d2da]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40ce9b:	mov    QWORD PTR [rsp+0x28],rcx
  40cea0:	lea    rsi,[rip+0x1d2d0]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40cea7:	mov    rdi,r15
  40ceaa:	mov    r8,r14
  40cead:	xor    eax,eax
  40ceaf:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40ceb4:	jmp    40cecf <__ctype_b_loc@plt+0xabff>
  40ceb6:	lea    rsi,[rip+0x1d27d]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40cebd:	mov    rdi,r15
  40cec0:	mov    edx,0x2
  40cec5:	mov    rcx,r14
  40cec8:	xor    eax,eax
  40ceca:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40cecf:	xor    ebx,ebx
  40ced1:	mov    rdx,QWORD PTR [r15+0x18]
  40ced5:	lea    rcx,[rip+0x1d2fa]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40cedc:	cmp    rdx,r12
  40cedf:	je     40cf04 <__ctype_b_loc@plt+0xac34>
  40cee1:	mov    rax,QWORD PTR [r15+0x10]
  40cee5:	cmp    rdx,rax
  40cee8:	jae    40cf04 <__ctype_b_loc@plt+0xac34>
  40ceea:	movsxd rdx,DWORD PTR [rdx+0x8]
  40ceee:	cmp    rdx,0xffffffffffffffff
  40cef2:	je     40cf04 <__ctype_b_loc@plt+0xac34>
  40cef4:	cmp    edx,0x5
  40cef7:	je     40cf30 <__ctype_b_loc@plt+0xac60>
  40cef9:	lea    rax,[rip+0x229e0]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40cf00:	mov    rcx,QWORD PTR [rax+rdx*8]
  40cf04:	lea    rsi,[rip+0x1d2b7]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40cf0b:	lea    rdx,[rip+0x1d6f8]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40cf12:	mov    rdi,r15
  40cf15:	xor    eax,eax
  40cf17:	call   410460 <__ctype_b_loc@plt+0xe190>
  40cf1c:	mov    rdi,r15
  40cf1f:	mov    esi,0x1
  40cf24:	mov    rdx,rax
  40cf27:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40cf2c:	mov    rax,QWORD PTR [r15+0x10]
  40cf30:	lea    edx,[rbx+0x1]
  40cf33:	vcvtsi2sd xmm0,xmm1,edx
  40cf37:	vmovq  QWORD PTR [rax],xmm0
  40cf3b:	mov    DWORD PTR [rax+0x8],0x3
  40cf42:	mov    rcx,QWORD PTR [r15+0x10]
  40cf46:	mov    rax,QWORD PTR [r15+0x18]
  40cf4a:	lea    rsi,[rcx+0x10]
  40cf4e:	mov    QWORD PTR [r15+0x10],rsi
  40cf52:	cmp    rax,rsi
  40cf55:	cmovae rax,r12
  40cf59:	mov    rsi,QWORD PTR [rax]
  40cf5c:	cmp    DWORD PTR [rsi+0x38],ebx
  40cf5f:	jbe    40cf6e <__ctype_b_loc@plt+0xac9e>
  40cf61:	movsxd rax,ebx
  40cf64:	shl    rax,0x4
  40cf68:	add    rax,QWORD PTR [rsi+0x18]
  40cf6c:	jmp    40cfe1 <__ctype_b_loc@plt+0xad11>
  40cf6e:	test   edx,edx
  40cf70:	je     40cfb0 <__ctype_b_loc@plt+0xace0>
  40cf72:	vmovq  rdx,xmm0
  40cf77:	mov    rax,rdx
  40cf7a:	shr    rax,0x20
  40cf7e:	add    eax,edx
  40cf80:	mov    dl,BYTE PTR [rsi+0xb]
  40cf83:	mov    rdi,0xffffffffffffffff
  40cf8a:	shlx   rdi,rdi,rdx
  40cf8f:	or     rdi,0x1
  40cf93:	xor    rdi,0xfffffffffffffffe
  40cf97:	xor    edx,edx
  40cf99:	div    rdi
  40cf9c:	lea    rax,[rdx+rdx*4]
  40cfa0:	shl    rax,0x3
  40cfa4:	add    rax,QWORD PTR [rsi+0x20]
  40cfa8:	cmp    DWORD PTR [rax+0x18],0x3
  40cfac:	jne    40cfc0 <__ctype_b_loc@plt+0xacf0>
  40cfae:	jmp    40cfcf <__ctype_b_loc@plt+0xacff>
  40cfb0:	mov    rax,QWORD PTR [rsi+0x20]
  40cfb4:	cmp    DWORD PTR [rax+0x18],0x3
  40cfb8:	je     40cfcf <__ctype_b_loc@plt+0xacff>
  40cfba:	nop    WORD PTR [rax+rax*1+0x0]
  40cfc0:	mov    rax,QWORD PTR [rax+0x20]
  40cfc4:	test   rax,rax
  40cfc7:	je     40cfde <__ctype_b_loc@plt+0xad0e>
  40cfc9:	cmp    DWORD PTR [rax+0x18],0x3
  40cfcd:	jne    40cfc0 <__ctype_b_loc@plt+0xacf0>
  40cfcf:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40cfd4:	vucomisd xmm1,xmm0
  40cfd8:	jne    40cfc0 <__ctype_b_loc@plt+0xacf0>
  40cfda:	jp     40cfc0 <__ctype_b_loc@plt+0xacf0>
  40cfdc:	jmp    40cfe1 <__ctype_b_loc@plt+0xad11>
  40cfde:	mov    rax,r12
  40cfe1:	mov    rdx,QWORD PTR [rax]
  40cfe4:	mov    QWORD PTR [rcx+0x10],rdx
  40cfe8:	mov    eax,DWORD PTR [rax+0x8]
  40cfeb:	mov    DWORD PTR [rcx+0x18],eax
  40cfee:	mov    rcx,QWORD PTR [r15+0x10]
  40cff2:	lea    rax,[rcx+0x10]
  40cff6:	mov    QWORD PTR [r15+0x10],rax
  40cffa:	cmp    rcx,r12
  40cffd:	je     40d00c <__ctype_b_loc@plt+0xad3c>
  40cfff:	xor    eax,eax
  40d001:	cmp    DWORD PTR [rcx+0x8],0x0
  40d005:	setne  al
  40d008:	add    eax,eax
  40d00a:	jmp    40d011 <__ctype_b_loc@plt+0xad41>
  40d00c:	mov    eax,0x2
  40d011:	add    rsp,0x98
  40d018:	pop    rbx
  40d019:	pop    r12
  40d01b:	pop    r13
  40d01d:	pop    r14
  40d01f:	pop    r15
  40d021:	pop    rbp
  40d022:	ret    
  40d023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d02d:	nop    DWORD PTR [rax]
  40d030:	push   r14
  40d032:	push   rbx
  40d033:	push   rax
  40d034:	mov    rbx,rdi
  40d037:	mov    rdx,QWORD PTR [rdi+0x18]
  40d03b:	lea    r14,[rip+0x1cad6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40d042:	lea    rcx,[rip+0x1d18d]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40d049:	cmp    rdx,r14
  40d04c:	je     40d071 <__ctype_b_loc@plt+0xada1>
  40d04e:	mov    rax,QWORD PTR [rbx+0x10]
  40d052:	cmp    rdx,rax
  40d055:	jae    40d071 <__ctype_b_loc@plt+0xada1>
  40d057:	movsxd rdx,DWORD PTR [rdx+0x8]
  40d05b:	cmp    rdx,0xffffffffffffffff
  40d05f:	je     40d071 <__ctype_b_loc@plt+0xada1>
  40d061:	cmp    edx,0x5
  40d064:	je     40d09d <__ctype_b_loc@plt+0xadcd>
  40d066:	lea    rax,[rip+0x22873]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40d06d:	mov    rcx,QWORD PTR [rax+rdx*8]
  40d071:	lea    rsi,[rip+0x1d14a]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40d078:	lea    rdx,[rip+0x1d58b]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40d07f:	mov    rdi,rbx
  40d082:	xor    eax,eax
  40d084:	call   410460 <__ctype_b_loc@plt+0xe190>
  40d089:	mov    rdi,rbx
  40d08c:	mov    esi,0x1
  40d091:	mov    rdx,rax
  40d094:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40d099:	mov    rax,QWORD PTR [rbx+0x10]
  40d09d:	mov    rcx,QWORD PTR [rbx+0x28]
  40d0a1:	mov    rcx,QWORD PTR [rcx+0x8]
  40d0a5:	mov    rcx,QWORD PTR [rcx]
  40d0a8:	cmp    BYTE PTR [rcx+0xb],0x0
  40d0ac:	lea    rcx,[rcx+0x28]
  40d0b0:	cmove  rcx,r14
  40d0b4:	mov    rdx,QWORD PTR [rcx]
  40d0b7:	mov    QWORD PTR [rax],rdx
  40d0ba:	mov    ecx,DWORD PTR [rcx+0x8]
  40d0bd:	mov    DWORD PTR [rax+0x8],ecx
  40d0c0:	mov    rax,QWORD PTR [rbx+0x10]
  40d0c4:	mov    rcx,QWORD PTR [rbx+0x18]
  40d0c8:	lea    rdx,[rax+0x10]
  40d0cc:	mov    QWORD PTR [rbx+0x10],rdx
  40d0d0:	cmp    rcx,rdx
  40d0d3:	cmovb  r14,rcx
  40d0d7:	mov    rcx,QWORD PTR [r14]
  40d0da:	mov    QWORD PTR [rax+0x10],rcx
  40d0de:	mov    ecx,DWORD PTR [r14+0x8]
  40d0e2:	mov    DWORD PTR [rax+0x18],ecx
  40d0e5:	mov    rax,QWORD PTR [rbx+0x10]
  40d0e9:	mov    DWORD PTR [rax+0x18],0x0
  40d0f0:	add    rax,0x20
  40d0f4:	mov    QWORD PTR [rbx+0x10],rax
  40d0f8:	mov    eax,0x3
  40d0fd:	add    rsp,0x8
  40d101:	pop    rbx
  40d102:	pop    r14
  40d104:	ret    
  40d105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d10f:	nop
  40d110:	push   rbp
  40d111:	push   r15
  40d113:	push   r14
  40d115:	push   r13
  40d117:	push   r12
  40d119:	push   rbx
  40d11a:	push   rax
  40d11b:	mov    r14,rdi
  40d11e:	mov    r12,QWORD PTR [rdi+0x18]
  40d122:	lea    rax,[rip+0x1c9ef]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40d129:	lea    rcx,[rip+0x1d0a6]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40d130:	cmp    r12,rax
  40d133:	je     40d159 <__ctype_b_loc@plt+0xae89>
  40d135:	mov    rax,QWORD PTR [r14+0x10]
  40d139:	cmp    r12,rax
  40d13c:	jae    40d159 <__ctype_b_loc@plt+0xae89>
  40d13e:	movsxd rdx,DWORD PTR [r12+0x8]
  40d143:	cmp    rdx,0xffffffffffffffff
  40d147:	je     40d159 <__ctype_b_loc@plt+0xae89>
  40d149:	cmp    edx,0x5
  40d14c:	je     40d189 <__ctype_b_loc@plt+0xaeb9>
  40d14e:	lea    rax,[rip+0x2278b]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40d155:	mov    rcx,QWORD PTR [rax+rdx*8]
  40d159:	lea    rsi,[rip+0x1d062]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40d160:	lea    rdx,[rip+0x1d4a3]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40d167:	mov    rdi,r14
  40d16a:	xor    eax,eax
  40d16c:	call   410460 <__ctype_b_loc@plt+0xe190>
  40d171:	mov    rdi,r14
  40d174:	mov    esi,0x1
  40d179:	mov    rdx,rax
  40d17c:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40d181:	mov    rax,QWORD PTR [r14+0x10]
  40d185:	mov    r12,QWORD PTR [r14+0x18]
  40d189:	lea    rcx,[r12+0x20]
  40d18e:	cmp    rax,rcx
  40d191:	jae    40d215 <__ctype_b_loc@plt+0xaf45>
  40d197:	mov    rdx,r12
  40d19a:	sub    rdx,rax
  40d19d:	add    rdx,0x1f
  40d1a1:	mov    esi,edx
  40d1a3:	shr    esi,0x4
  40d1a6:	inc    esi
  40d1a8:	and    rsi,0x7
  40d1ac:	je     40d1c0 <__ctype_b_loc@plt+0xaef0>
  40d1ae:	xchg   ax,ax
  40d1b0:	mov    DWORD PTR [rax+0x8],0x0
  40d1b7:	add    rax,0x10
  40d1bb:	dec    rsi
  40d1be:	jne    40d1b0 <__ctype_b_loc@plt+0xaee0>
  40d1c0:	cmp    rdx,0x70
  40d1c4:	jb     40d211 <__ctype_b_loc@plt+0xaf41>
  40d1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1d0:	mov    DWORD PTR [rax+0x8],0x0
  40d1d7:	mov    DWORD PTR [rax+0x18],0x0
  40d1de:	mov    DWORD PTR [rax+0x28],0x0
  40d1e5:	mov    DWORD PTR [rax+0x38],0x0
  40d1ec:	mov    DWORD PTR [rax+0x48],0x0
  40d1f3:	mov    DWORD PTR [rax+0x58],0x0
  40d1fa:	mov    DWORD PTR [rax+0x68],0x0
  40d201:	mov    DWORD PTR [rax+0x78],0x0
  40d208:	sub    rax,0xffffffffffffff80
  40d20c:	cmp    rax,rcx
  40d20f:	jb     40d1d0 <__ctype_b_loc@plt+0xaf00>
  40d211:	mov    QWORD PTR [r14+0x10],rax
  40d215:	mov    QWORD PTR [r14+0x10],rcx
  40d219:	mov    rbx,QWORD PTR [r12]
  40d21d:	mov    ebp,DWORD PTR [r12+0x18]
  40d222:	test   ebp,ebp
  40d224:	je     40d2e1 <__ctype_b_loc@plt+0xb011>
  40d22a:	lea    r15,[r12+0x10]
  40d22f:	cmp    ebp,0x3
  40d232:	jne    40d259 <__ctype_b_loc@plt+0xaf89>
  40d234:	vmovsd xmm0,QWORD PTR [r15]
  40d239:	vcvttsd2si r13d,xmm0
  40d23d:	test   r13d,r13d
  40d240:	jle    40d259 <__ctype_b_loc@plt+0xaf89>
  40d242:	vcvtsi2sd xmm1,xmm1,r13d
  40d247:	vucomisd xmm0,xmm1
  40d24b:	jne    40d259 <__ctype_b_loc@plt+0xaf89>
  40d24d:	jp     40d259 <__ctype_b_loc@plt+0xaf89>
  40d24f:	cmp    DWORD PTR [rbx+0x38],r13d
  40d253:	jge    40d2ff <__ctype_b_loc@plt+0xb02f>
  40d259:	mov    rdi,rbx
  40d25c:	mov    rsi,r15
  40d25f:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40d264:	mov    ecx,ebp
  40d266:	lea    rdx,[rip+0x1bfdf]        # 42924c <__ctype_b_loc@plt+0x26f7c>
  40d26d:	jmp    40d279 <__ctype_b_loc@plt+0xafa9>
  40d26f:	nop
  40d270:	mov    rax,QWORD PTR [rax+0x20]
  40d274:	test   rax,rax
  40d277:	je     40d2e9 <__ctype_b_loc@plt+0xb019>
  40d279:	mov    esi,DWORD PTR [rax+0x18]
  40d27c:	cmp    esi,ebp
  40d27e:	jne    40d2a9 <__ctype_b_loc@plt+0xafd9>
  40d280:	cmp    ebp,0x3
  40d283:	ja     40d2a0 <__ctype_b_loc@plt+0xafd0>
  40d285:	movsxd rdi,DWORD PTR [rdx+rcx*4]
  40d289:	add    rdi,rdx
  40d28c:	jmp    rdi
  40d28e:	mov    edi,DWORD PTR [rax+0x10]
  40d291:	cmp    edi,DWORD PTR [r15]
  40d294:	jne    40d2a9 <__ctype_b_loc@plt+0xafd9>
  40d296:	jmp    40d2cc <__ctype_b_loc@plt+0xaffc>
  40d298:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2a0:	mov    rdi,QWORD PTR [rax+0x10]
  40d2a4:	cmp    rdi,QWORD PTR [r15]
  40d2a7:	je     40d2cc <__ctype_b_loc@plt+0xaffc>
  40d2a9:	cmp    ebp,0x4
  40d2ac:	jl     40d270 <__ctype_b_loc@plt+0xafa0>
  40d2ae:	cmp    esi,0xb
  40d2b1:	jne    40d270 <__ctype_b_loc@plt+0xafa0>
  40d2b3:	mov    rsi,QWORD PTR [rax+0x10]
  40d2b7:	cmp    rsi,QWORD PTR [r15]
  40d2ba:	jne    40d270 <__ctype_b_loc@plt+0xafa0>
  40d2bc:	jmp    40d2cc <__ctype_b_loc@plt+0xaffc>
  40d2be:	vmovsd xmm0,QWORD PTR [rax+0x10]
  40d2c3:	vucomisd xmm0,QWORD PTR [r15]
  40d2c8:	jne    40d2a9 <__ctype_b_loc@plt+0xafd9>
  40d2ca:	jp     40d2a9 <__ctype_b_loc@plt+0xafd9>
  40d2cc:	sub    rax,QWORD PTR [rbx+0x20]
  40d2d0:	shr    rax,0x3
  40d2d4:	imul   r13d,eax,0xcccccccd
  40d2db:	add    r13d,DWORD PTR [rbx+0x38]
  40d2df:	jmp    40d302 <__ctype_b_loc@plt+0xb032>
  40d2e1:	mov    r13d,0xffffffff
  40d2e7:	jmp    40d302 <__ctype_b_loc@plt+0xb032>
  40d2e9:	lea    rsi,[rip+0x1d34d]        # 42a63d <__ctype_b_loc@plt+0x2836d>
  40d2f0:	xor    r13d,r13d
  40d2f3:	mov    rdi,r14
  40d2f6:	xor    eax,eax
  40d2f8:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40d2fd:	jmp    40d302 <__ctype_b_loc@plt+0xb032>
  40d2ff:	dec    r13d
  40d302:	movsxd rdx,DWORD PTR [rbx+0x38]
  40d306:	movsxd rax,r13d
  40d309:	mov    rcx,rax
  40d30c:	shl    rcx,0x4
  40d310:	inc    rax
  40d313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d31d:	nop    DWORD PTR [rax]
  40d320:	cmp    rax,rdx
  40d323:	jge    40d364 <__ctype_b_loc@plt+0xb094>
  40d325:	mov    rsi,QWORD PTR [rbx+0x18]
  40d329:	inc    rax
  40d32c:	cmp    DWORD PTR [rsi+rcx*1+0x18],0x0
  40d331:	lea    rcx,[rcx+0x10]
  40d335:	je     40d320 <__ctype_b_loc@plt+0xb050>
  40d337:	vcvtsi2sd xmm0,xmm2,eax
  40d33b:	vmovsd QWORD PTR [r12+0x10],xmm0
  40d342:	mov    DWORD PTR [r12+0x18],0x3
  40d34b:	mov    rax,QWORD PTR [rbx+0x18]
  40d34f:	mov    rdx,QWORD PTR [rax+rcx*1]
  40d353:	mov    QWORD PTR [r12+0x20],rdx
  40d358:	add    rcx,rax
  40d35b:	add    rcx,0x8
  40d35f:	jmp    40d3f1 <__ctype_b_loc@plt+0xb121>
  40d364:	sub    eax,edx
  40d366:	mov    cl,BYTE PTR [rbx+0xb]
  40d369:	mov    edx,0x1
  40d36e:	shlx   rsi,rdx,rcx
  40d373:	cmp    eax,esi
  40d375:	jge    40d3b4 <__ctype_b_loc@plt+0xb0e4>
  40d377:	mov    rcx,QWORD PTR [rbx+0x20]
  40d37b:	movsxd rdi,eax
  40d37e:	lea    rax,[rdi*8+0x0]
  40d386:	lea    rdx,[rax+rax*4]
  40d38a:	mov    rax,0xfffffffffffffff8
  40d391:	sub    rax,rdx
  40d394:	movsxd rsi,esi
  40d397:	sub    rsi,rdi
  40d39a:	nop    WORD PTR [rax+rax*1+0x0]
  40d3a0:	cmp    DWORD PTR [rcx+rdx*1+0x8],0x0
  40d3a5:	jne    40d3ce <__ctype_b_loc@plt+0xb0fe>
  40d3a7:	add    rax,0xffffffffffffffd8
  40d3ab:	add    rdx,0x28
  40d3af:	dec    rsi
  40d3b2:	jne    40d3a0 <__ctype_b_loc@plt+0xb0d0>
  40d3b4:	mov    rcx,QWORD PTR [r14+0x10]
  40d3b8:	lea    rax,[rcx-0x10]
  40d3bc:	mov    QWORD PTR [r14+0x10],rax
  40d3c0:	mov    DWORD PTR [rcx-0x8],0x0
  40d3c7:	mov    eax,0x1
  40d3cc:	jmp    40d405 <__ctype_b_loc@plt+0xb135>
  40d3ce:	mov    rsi,QWORD PTR [rcx+rdx*1+0x10]
  40d3d3:	mov    QWORD PTR [r12+0x10],rsi
  40d3d8:	mov    ecx,DWORD PTR [rcx+rdx*1+0x18]
  40d3dc:	mov    DWORD PTR [r12+0x18],ecx
  40d3e1:	mov    rcx,QWORD PTR [rbx+0x20]
  40d3e5:	mov    rdx,QWORD PTR [rcx+rdx*1]
  40d3e9:	mov    QWORD PTR [r12+0x20],rdx
  40d3ee:	sub    rcx,rax
  40d3f1:	mov    eax,DWORD PTR [rcx]
  40d3f3:	mov    DWORD PTR [r12+0x28],eax
  40d3f8:	mov    rcx,QWORD PTR [r14+0x10]
  40d3fc:	add    rcx,0x10
  40d400:	mov    eax,0x2
  40d405:	mov    QWORD PTR [r14+0x10],rcx
  40d409:	add    rsp,0x8
  40d40d:	pop    rbx
  40d40e:	pop    r12
  40d410:	pop    r13
  40d412:	pop    r14
  40d414:	pop    r15
  40d416:	pop    rbp
  40d417:	ret    
  40d418:	nop    DWORD PTR [rax+rax*1+0x0]
  40d420:	push   rbx
  40d421:	mov    rbx,rdi
  40d424:	test   esi,esi
  40d426:	jle    40d44e <__ctype_b_loc@plt+0xb17e>
  40d428:	mov    rax,QWORD PTR [rbx+0x18]
  40d42c:	movsxd rcx,esi
  40d42f:	shl    rcx,0x4
  40d433:	add    rcx,rax
  40d436:	add    rcx,0xfffffffffffffff0
  40d43a:	cmp    rcx,QWORD PTR [rbx+0x10]
  40d43e:	lea    rax,[rip+0x1c6d3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40d445:	cmovb  rax,rcx
  40d449:	jmp    40d4f0 <__ctype_b_loc@plt+0xb220>
  40d44e:	cmp    esi,0xffffd8f1
  40d454:	jl     40d466 <__ctype_b_loc@plt+0xb196>
  40d456:	movsxd rax,esi
  40d459:	shl    rax,0x4
  40d45d:	add    rax,QWORD PTR [rbx+0x10]
  40d461:	jmp    40d4f0 <__ctype_b_loc@plt+0xb220>
  40d466:	cmp    esi,0xffffd8ee
  40d46c:	je     40d489 <__ctype_b_loc@plt+0xb1b9>
  40d46e:	cmp    esi,0xffffd8ef
  40d474:	je     40d48f <__ctype_b_loc@plt+0xb1bf>
  40d476:	cmp    esi,0xffffd8f0
  40d47c:	jne    40d4b8 <__ctype_b_loc@plt+0xb1e8>
  40d47e:	mov    eax,0xa0
  40d483:	add    rax,QWORD PTR [rbx+0x20]
  40d487:	jmp    40d4f0 <__ctype_b_loc@plt+0xb220>
  40d489:	lea    rax,[rbx+0x78]
  40d48d:	jmp    40d4f0 <__ctype_b_loc@plt+0xb220>
  40d48f:	mov    rax,QWORD PTR [rbx+0x28]
  40d493:	mov    rax,QWORD PTR [rax+0x8]
  40d497:	mov    rcx,QWORD PTR [rax]
  40d49a:	lea    rax,[rbx+0x88]
  40d4a1:	mov    rcx,QWORD PTR [rcx+0x18]
  40d4a5:	mov    QWORD PTR [rbx+0x88],rcx
  40d4ac:	mov    DWORD PTR [rbx+0x90],0x5
  40d4b6:	jmp    40d4f0 <__ctype_b_loc@plt+0xb220>
  40d4b8:	mov    rax,QWORD PTR [rbx+0x28]
  40d4bc:	mov    rax,QWORD PTR [rax+0x8]
  40d4c0:	mov    rax,QWORD PTR [rax]
  40d4c3:	mov    ecx,0xffffd8ee
  40d4c8:	sub    ecx,esi
  40d4ca:	movzx  edx,BYTE PTR [rax+0xb]
  40d4ce:	cmp    ecx,edx
  40d4d0:	jle    40d4db <__ctype_b_loc@plt+0xb20b>
  40d4d2:	lea    rax,[rip+0x1c63f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40d4d9:	jmp    40d4f0 <__ctype_b_loc@plt+0xb220>
  40d4db:	mov    ecx,0xffffd8ed
  40d4e0:	sub    ecx,esi
  40d4e2:	movsxd rcx,ecx
  40d4e5:	shl    rcx,0x4
  40d4e9:	add    rax,rcx
  40d4ec:	add    rax,0x28
  40d4f0:	mov    rcx,QWORD PTR [rbx+0x10]
  40d4f4:	cmp    DWORD PTR [rcx-0x8],0x0
  40d4f8:	je     40d500 <__ctype_b_loc@plt+0xb230>
  40d4fa:	mov    rsi,QWORD PTR [rcx-0x10]
  40d4fe:	jmp    40d502 <__ctype_b_loc@plt+0xb232>
  40d500:	xor    esi,esi
  40d502:	movsxd rcx,DWORD PTR [rax+0x8]
  40d506:	cmp    rcx,0x7
  40d50a:	je     40d546 <__ctype_b_loc@plt+0xb276>
  40d50c:	cmp    ecx,0x5
  40d50f:	jne    40d574 <__ctype_b_loc@plt+0xb2a4>
  40d511:	mov    rcx,QWORD PTR [rax]
  40d514:	mov    QWORD PTR [rcx+0x10],rsi
  40d518:	test   rsi,rsi
  40d51b:	je     40d580 <__ctype_b_loc@plt+0xb2b0>
  40d51d:	test   BYTE PTR [rsi+0x9],0x3
  40d521:	je     40d580 <__ctype_b_loc@plt+0xb2b0>
  40d523:	mov    rax,QWORD PTR [rax]
  40d526:	mov    cl,BYTE PTR [rax+0x9]
  40d529:	test   cl,0x4
  40d52c:	je     40d580 <__ctype_b_loc@plt+0xb2b0>
  40d52e:	mov    rdx,QWORD PTR [rbx+0x20]
  40d532:	and    cl,0xfb
  40d535:	mov    BYTE PTR [rax+0x9],cl
  40d538:	mov    rcx,QWORD PTR [rdx+0x40]
  40d53c:	mov    QWORD PTR [rax+0x30],rcx
  40d540:	mov    QWORD PTR [rdx+0x40],rax
  40d544:	jmp    40d580 <__ctype_b_loc@plt+0xb2b0>
  40d546:	mov    rcx,QWORD PTR [rax]
  40d549:	mov    QWORD PTR [rcx+0x10],rsi
  40d54d:	test   rsi,rsi
  40d550:	je     40d580 <__ctype_b_loc@plt+0xb2b0>
  40d552:	test   BYTE PTR [rsi+0x9],0x3
  40d556:	je     40d580 <__ctype_b_loc@plt+0xb2b0>
  40d558:	mov    rax,QWORD PTR [rax]
  40d55b:	mov    cl,BYTE PTR [rax+0x9]
  40d55e:	test   cl,0x4
  40d561:	je     40d580 <__ctype_b_loc@plt+0xb2b0>
  40d563:	mov    rdi,QWORD PTR [rbx+0x20]
  40d567:	cmp    BYTE PTR [rdi+0x21],0x1
  40d56b:	jne    40d587 <__ctype_b_loc@plt+0xb2b7>
  40d56d:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40d572:	jmp    40d580 <__ctype_b_loc@plt+0xb2b0>
  40d574:	mov    rax,QWORD PTR [rbx+0x20]
  40d578:	mov    QWORD PTR [rax+rcx*8+0xe0],rsi
  40d580:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40d585:	pop    rbx
  40d586:	ret    
  40d587:	and    cl,0xf8
  40d58a:	mov    dl,BYTE PTR [rdi+0x20]
  40d58d:	and    dl,0x3
  40d590:	or     dl,cl
  40d592:	mov    BYTE PTR [rax+0x9],dl
  40d595:	jmp    40d580 <__ctype_b_loc@plt+0xb2b0>
  40d597:	nop    WORD PTR [rax+rax*1+0x0]
  40d5a0:	push   rbp
  40d5a1:	push   r15
  40d5a3:	push   r14
  40d5a5:	push   r13
  40d5a7:	push   r12
  40d5a9:	push   rbx
  40d5aa:	push   rax
  40d5ab:	mov    rbx,rdi
  40d5ae:	mov    rcx,QWORD PTR [rdi+0x10]
  40d5b2:	mov    rdx,QWORD PTR [rdi+0x18]
  40d5b6:	lea    rax,[rdx+0x10]
  40d5ba:	cmp    rcx,rax
  40d5bd:	jae    40d5d4 <__ctype_b_loc@plt+0xb304>
  40d5bf:	nop
  40d5c0:	mov    DWORD PTR [rcx+0x8],0x0
  40d5c7:	cmp    rcx,rdx
  40d5ca:	lea    rcx,[rcx+0x10]
  40d5ce:	jb     40d5c0 <__ctype_b_loc@plt+0xb2f0>
  40d5d0:	mov    QWORD PTR [rbx+0x10],rcx
  40d5d4:	mov    QWORD PTR [rbx+0x10],rax
  40d5d8:	mov    rdi,rbx
  40d5db:	xor    esi,esi
  40d5dd:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  40d5e2:	mov    rbp,QWORD PTR [rbx+0x10]
  40d5e6:	mov    rdx,QWORD PTR [rbx+0x18]
  40d5ea:	cmp    rdx,rbp
  40d5ed:	lea    r12,[rip+0x1c524]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40d5f4:	mov    rax,r12
  40d5f7:	cmovb  rax,rdx
  40d5fb:	movsxd rcx,DWORD PTR [rax+0x8]
  40d5ff:	test   rcx,rcx
  40d602:	je     40db7a <__ctype_b_loc@plt+0xb8aa>
  40d608:	cmp    ecx,0x1
  40d60b:	jne    40d616 <__ctype_b_loc@plt+0xb346>
  40d60d:	cmp    DWORD PTR [rax],0x0
  40d610:	je     40db7a <__ctype_b_loc@plt+0xb8aa>
  40d616:	cmp    rdx,r12
  40d619:	je     40d72e <__ctype_b_loc@plt+0xb45e>
  40d61f:	cmp    rdx,rbp
  40d622:	jae    40d72e <__ctype_b_loc@plt+0xb45e>
  40d628:	cmp    DWORD PTR [rdx+0x8],0x1
  40d62c:	jne    40d72e <__ctype_b_loc@plt+0xb45e>
  40d632:	mov    rax,QWORD PTR [rbx+0x20]
  40d636:	mov    rcx,QWORD PTR [rax+0x78]
  40d63a:	cmp    rcx,QWORD PTR [rax+0x70]
  40d63e:	jb     40d64c <__ctype_b_loc@plt+0xb37c>
  40d640:	mov    rdi,rbx
  40d643:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40d648:	mov    rbp,QWORD PTR [rbx+0x10]
  40d64c:	mov    rdi,rbx
  40d64f:	xor    esi,esi
  40d651:	xor    edx,edx
  40d653:	call   403700 <__ctype_b_loc@plt+0x1430>
  40d658:	mov    QWORD PTR [rbp+0x0],rax
  40d65c:	mov    DWORD PTR [rbp+0x8],0x5
  40d663:	mov    rax,QWORD PTR [rbx+0x10]
  40d667:	lea    rcx,[rax+0x10]
  40d66b:	mov    QWORD PTR [rbx+0x10],rcx
  40d66f:	mov    rcx,QWORD PTR [rax]
  40d672:	mov    QWORD PTR [rax+0x10],rcx
  40d676:	mov    ecx,DWORD PTR [rax+0x8]
  40d679:	mov    DWORD PTR [rax+0x18],ecx
  40d67c:	mov    rax,QWORD PTR [rbx+0x10]
  40d680:	lea    rcx,[rax+0x10]
  40d684:	mov    QWORD PTR [rbx+0x10],rcx
  40d688:	mov    DWORD PTR [rax+0x10],0x1
  40d68f:	mov    DWORD PTR [rax+0x18],0x1
  40d696:	mov    rbp,QWORD PTR [rbx+0x10]
  40d69a:	mov    rax,QWORD PTR [rbx+0x28]
  40d69e:	lea    rcx,[rbp+0x10]
  40d6a2:	mov    QWORD PTR [rbx+0x10],rcx
  40d6a6:	mov    rax,QWORD PTR [rax+0x8]
  40d6aa:	mov    rax,QWORD PTR [rax]
  40d6ad:	cmp    BYTE PTR [rax+0xb],0x0
  40d6b1:	lea    rax,[rax+0x28]
  40d6b5:	cmove  rax,r12
  40d6b9:	mov    QWORD PTR [rsp],rax
  40d6bd:	mov    r14,QWORD PTR [rax]
  40d6c0:	lea    r15,[rbp-0x10]
  40d6c4:	mov    r13d,DWORD PTR [rbp-0x8]
  40d6c8:	test   r13d,r13d
  40d6cb:	je     40dad8 <__ctype_b_loc@plt+0xb808>
  40d6d1:	cmp    r13d,0x3
  40d6d5:	je     40d88d <__ctype_b_loc@plt+0xb5bd>
  40d6db:	cmp    r13d,0x4
  40d6df:	jne    40d8bf <__ctype_b_loc@plt+0xb5ef>
  40d6e5:	mov    rcx,QWORD PTR [r15]
  40d6e8:	mov    al,BYTE PTR [r14+0xb]
  40d6ec:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  40d6f2:	cdqe   
  40d6f4:	lea    rax,[rax+rax*4]
  40d6f8:	shl    rax,0x3
  40d6fc:	add    rax,QWORD PTR [r14+0x20]
  40d700:	cmp    DWORD PTR [rax+0x18],0x4
  40d704:	je     40d723 <__ctype_b_loc@plt+0xb453>
  40d706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d710:	mov    rax,QWORD PTR [rax+0x20]
  40d714:	test   rax,rax
  40d717:	je     40dad8 <__ctype_b_loc@plt+0xb808>
  40d71d:	cmp    DWORD PTR [rax+0x18],0x4
  40d721:	jne    40d710 <__ctype_b_loc@plt+0xb440>
  40d723:	cmp    QWORD PTR [rax+0x10],rcx
  40d727:	jne    40d710 <__ctype_b_loc@plt+0xb440>
  40d729:	jmp    40dacc <__ctype_b_loc@plt+0xb7fc>
  40d72e:	cmp    ecx,0x7
  40d731:	je     40d738 <__ctype_b_loc@plt+0xb468>
  40d733:	cmp    ecx,0x5
  40d736:	jne    40d741 <__ctype_b_loc@plt+0xb471>
  40d738:	mov    rax,QWORD PTR [rax]
  40d73b:	add    rax,0x10
  40d73f:	jmp    40d74f <__ctype_b_loc@plt+0xb47f>
  40d741:	mov    rax,QWORD PTR [rbx+0x20]
  40d745:	lea    rax,[rax+rcx*8]
  40d749:	add    rax,0xe0
  40d74f:	mov    rax,QWORD PTR [rax]
  40d752:	test   rax,rax
  40d755:	je     40da22 <__ctype_b_loc@plt+0xb752>
  40d75b:	mov    QWORD PTR [rbp+0x0],rax
  40d75f:	mov    DWORD PTR [rbp+0x8],0x5
  40d766:	mov    r14,QWORD PTR [rbx+0x10]
  40d76a:	mov    rax,QWORD PTR [rbx+0x28]
  40d76e:	lea    rcx,[r14+0x10]
  40d772:	mov    QWORD PTR [rbx+0x10],rcx
  40d776:	mov    rax,QWORD PTR [rax+0x8]
  40d77a:	mov    rax,QWORD PTR [rax]
  40d77d:	cmp    BYTE PTR [rax+0xb],0x0
  40d781:	lea    rax,[rax+0x28]
  40d785:	cmove  rax,r12
  40d789:	mov    ebp,DWORD PTR [r14+0x8]
  40d78d:	test   ebp,ebp
  40d78f:	je     40d9ef <__ctype_b_loc@plt+0xb71f>
  40d795:	mov    rdi,QWORD PTR [rax]
  40d798:	cmp    ebp,0x3
  40d79b:	je     40d7f1 <__ctype_b_loc@plt+0xb521>
  40d79d:	cmp    ebp,0x4
  40d7a0:	jne    40d822 <__ctype_b_loc@plt+0xb552>
  40d7a6:	mov    rax,QWORD PTR [r14]
  40d7a9:	mov    cl,BYTE PTR [rdi+0xb]
  40d7ac:	bzhi   ecx,DWORD PTR [rax+0xc],ecx
  40d7b2:	movsxd rcx,ecx
  40d7b5:	lea    rcx,[rcx+rcx*4]
  40d7b9:	shl    rcx,0x3
  40d7bd:	add    rcx,QWORD PTR [rdi+0x20]
  40d7c1:	cmp    DWORD PTR [rcx+0x18],0x4
  40d7c5:	je     40d7e3 <__ctype_b_loc@plt+0xb513>
  40d7c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d7d0:	mov    rcx,QWORD PTR [rcx+0x20]
  40d7d4:	test   rcx,rcx
  40d7d7:	je     40d9ef <__ctype_b_loc@plt+0xb71f>
  40d7dd:	cmp    DWORD PTR [rcx+0x18],0x4
  40d7e1:	jne    40d7d0 <__ctype_b_loc@plt+0xb500>
  40d7e3:	cmp    QWORD PTR [rcx+0x10],rax
  40d7e7:	jne    40d7d0 <__ctype_b_loc@plt+0xb500>
  40d7e9:	mov    r12,rcx
  40d7ec:	jmp    40d9ef <__ctype_b_loc@plt+0xb71f>
  40d7f1:	vmovsd xmm1,QWORD PTR [r14]
  40d7f6:	vcvttsd2si eax,xmm1
  40d7fa:	vcvtsi2sd xmm0,xmm0,eax
  40d7fe:	vucomisd xmm1,xmm0
  40d802:	jne    40d822 <__ctype_b_loc@plt+0xb552>
  40d804:	jp     40d822 <__ctype_b_loc@plt+0xb552>
  40d806:	lea    ecx,[rax-0x1]
  40d809:	cmp    ecx,DWORD PTR [rdi+0x38]
  40d80c:	jae    40d92b <__ctype_b_loc@plt+0xb65b>
  40d812:	movsxd r12,ecx
  40d815:	shl    r12,0x4
  40d819:	add    r12,QWORD PTR [rdi+0x18]
  40d81d:	jmp    40d9ef <__ctype_b_loc@plt+0xb71f>
  40d822:	mov    rsi,r14
  40d825:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40d82a:	mov    ecx,ebp
  40d82c:	lea    rdx,[rip+0x1ba39]        # 42926c <__ctype_b_loc@plt+0x26f9c>
  40d833:	cmp    DWORD PTR [rax+0x18],ebp
  40d836:	jne    40d84d <__ctype_b_loc@plt+0xb57d>
  40d838:	jmp    40d85f <__ctype_b_loc@plt+0xb58f>
  40d83a:	nop    WORD PTR [rax+rax*1+0x0]
  40d840:	mov    rsi,QWORD PTR [rax+0x10]
  40d844:	cmp    rsi,QWORD PTR [r14]
  40d847:	je     40d9ec <__ctype_b_loc@plt+0xb71c>
  40d84d:	mov    rax,QWORD PTR [rax+0x20]
  40d851:	test   rax,rax
  40d854:	je     40d9ef <__ctype_b_loc@plt+0xb71f>
  40d85a:	cmp    DWORD PTR [rax+0x18],ebp
  40d85d:	jne    40d84d <__ctype_b_loc@plt+0xb57d>
  40d85f:	cmp    ebp,0x3
  40d862:	ja     40d840 <__ctype_b_loc@plt+0xb570>
  40d864:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40d868:	add    rsi,rdx
  40d86b:	jmp    rsi
  40d86d:	mov    esi,DWORD PTR [rax+0x10]
  40d870:	cmp    esi,DWORD PTR [r14]
  40d873:	jne    40d84d <__ctype_b_loc@plt+0xb57d>
  40d875:	jmp    40d9ec <__ctype_b_loc@plt+0xb71c>
  40d87a:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40d87f:	vucomisd xmm0,QWORD PTR [r14]
  40d884:	jne    40d84d <__ctype_b_loc@plt+0xb57d>
  40d886:	jp     40d84d <__ctype_b_loc@plt+0xb57d>
  40d888:	jmp    40d9ec <__ctype_b_loc@plt+0xb71c>
  40d88d:	vmovsd xmm1,QWORD PTR [r15]
  40d892:	vcvttsd2si eax,xmm1
  40d896:	vcvtsi2sd xmm0,xmm0,eax
  40d89a:	vucomisd xmm1,xmm0
  40d89e:	jne    40d8bf <__ctype_b_loc@plt+0xb5ef>
  40d8a0:	jp     40d8bf <__ctype_b_loc@plt+0xb5ef>
  40d8a2:	lea    ecx,[rax-0x1]
  40d8a5:	cmp    ecx,DWORD PTR [r14+0x38]
  40d8a9:	jae    40d971 <__ctype_b_loc@plt+0xb6a1>
  40d8af:	movsxd rax,ecx
  40d8b2:	shl    rax,0x4
  40d8b6:	add    rax,QWORD PTR [r14+0x18]
  40d8ba:	jmp    40dacc <__ctype_b_loc@plt+0xb7fc>
  40d8bf:	mov    rdi,r14
  40d8c2:	mov    rsi,r15
  40d8c5:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40d8ca:	mov    ecx,r13d
  40d8cd:	lea    rdx,[rip+0x1b988]        # 42925c <__ctype_b_loc@plt+0x26f8c>
  40d8d4:	cmp    DWORD PTR [rax+0x18],r13d
  40d8d8:	jne    40d8e9 <__ctype_b_loc@plt+0xb619>
  40d8da:	jmp    40d8fc <__ctype_b_loc@plt+0xb62c>
  40d8dc:	mov    rsi,QWORD PTR [rax+0x10]
  40d8e0:	cmp    rsi,QWORD PTR [r15]
  40d8e3:	je     40dacc <__ctype_b_loc@plt+0xb7fc>
  40d8e9:	mov    rax,QWORD PTR [rax+0x20]
  40d8ed:	test   rax,rax
  40d8f0:	je     40dad8 <__ctype_b_loc@plt+0xb808>
  40d8f6:	cmp    DWORD PTR [rax+0x18],r13d
  40d8fa:	jne    40d8e9 <__ctype_b_loc@plt+0xb619>
  40d8fc:	cmp    r13d,0x3
  40d900:	ja     40d8dc <__ctype_b_loc@plt+0xb60c>
  40d902:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40d906:	add    rsi,rdx
  40d909:	jmp    rsi
  40d90b:	mov    esi,DWORD PTR [rax+0x10]
  40d90e:	cmp    esi,DWORD PTR [r15]
  40d911:	jne    40d8e9 <__ctype_b_loc@plt+0xb619>
  40d913:	jmp    40dacc <__ctype_b_loc@plt+0xb7fc>
  40d918:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40d91d:	vucomisd xmm0,QWORD PTR [r15]
  40d922:	jne    40d8e9 <__ctype_b_loc@plt+0xb619>
  40d924:	jp     40d8e9 <__ctype_b_loc@plt+0xb619>
  40d926:	jmp    40dacc <__ctype_b_loc@plt+0xb7fc>
  40d92b:	test   eax,eax
  40d92d:	je     40d9bf <__ctype_b_loc@plt+0xb6ef>
  40d933:	vmovq  rcx,xmm0
  40d938:	mov    rax,rcx
  40d93b:	shr    rax,0x20
  40d93f:	add    eax,ecx
  40d941:	mov    cl,BYTE PTR [rdi+0xb]
  40d944:	mov    rdx,0xffffffffffffffff
  40d94b:	shlx   rcx,rdx,rcx
  40d950:	or     rcx,0x1
  40d954:	xor    rcx,0xfffffffffffffffe
  40d958:	xor    edx,edx
  40d95a:	div    rcx
  40d95d:	lea    rax,[rdx+rdx*4]
  40d961:	shl    rax,0x3
  40d965:	add    rax,QWORD PTR [rdi+0x20]
  40d969:	cmp    DWORD PTR [rax+0x18],0x3
  40d96d:	jne    40d9d0 <__ctype_b_loc@plt+0xb700>
  40d96f:	jmp    40d9df <__ctype_b_loc@plt+0xb70f>
  40d971:	test   eax,eax
  40d973:	je     40da9c <__ctype_b_loc@plt+0xb7cc>
  40d979:	vmovq  rcx,xmm0
  40d97e:	mov    rax,rcx
  40d981:	shr    rax,0x20
  40d985:	add    eax,ecx
  40d987:	mov    cl,BYTE PTR [r14+0xb]
  40d98b:	mov    rdx,0xffffffffffffffff
  40d992:	shlx   rcx,rdx,rcx
  40d997:	or     rcx,0x1
  40d99b:	xor    rcx,0xfffffffffffffffe
  40d99f:	xor    edx,edx
  40d9a1:	div    rcx
  40d9a4:	lea    rax,[rdx+rdx*4]
  40d9a8:	shl    rax,0x3
  40d9ac:	add    rax,QWORD PTR [r14+0x20]
  40d9b0:	cmp    DWORD PTR [rax+0x18],0x3
  40d9b4:	jne    40dab0 <__ctype_b_loc@plt+0xb7e0>
  40d9ba:	jmp    40dabf <__ctype_b_loc@plt+0xb7ef>
  40d9bf:	mov    rax,QWORD PTR [rdi+0x20]
  40d9c3:	cmp    DWORD PTR [rax+0x18],0x3
  40d9c7:	je     40d9df <__ctype_b_loc@plt+0xb70f>
  40d9c9:	nop    DWORD PTR [rax+0x0]
  40d9d0:	mov    rax,QWORD PTR [rax+0x20]
  40d9d4:	test   rax,rax
  40d9d7:	je     40d9ef <__ctype_b_loc@plt+0xb71f>
  40d9d9:	cmp    DWORD PTR [rax+0x18],0x3
  40d9dd:	jne    40d9d0 <__ctype_b_loc@plt+0xb700>
  40d9df:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40d9e4:	vucomisd xmm1,xmm0
  40d9e8:	jne    40d9d0 <__ctype_b_loc@plt+0xb700>
  40d9ea:	jp     40d9d0 <__ctype_b_loc@plt+0xb700>
  40d9ec:	mov    r12,rax
  40d9ef:	mov    rax,QWORD PTR [r12]
  40d9f3:	mov    QWORD PTR [r14],rax
  40d9f6:	mov    eax,DWORD PTR [r12+0x8]
  40d9fb:	mov    DWORD PTR [r14+0x8],eax
  40d9ff:	mov    rax,QWORD PTR [rbx+0x10]
  40da03:	mov    ecx,DWORD PTR [rax-0x8]
  40da06:	add    rax,0xfffffffffffffff0
  40da0a:	cmp    ecx,0x1
  40da0d:	je     40da19 <__ctype_b_loc@plt+0xb749>
  40da0f:	test   ecx,ecx
  40da11:	jne    40da3c <__ctype_b_loc@plt+0xb76c>
  40da13:	mov    QWORD PTR [rbx+0x10],rax
  40da17:	jmp    40da22 <__ctype_b_loc@plt+0xb752>
  40da19:	cmp    DWORD PTR [rax],0x0
  40da1c:	mov    QWORD PTR [rbx+0x10],rax
  40da20:	jne    40da40 <__ctype_b_loc@plt+0xb770>
  40da22:	lea    rdx,[rip+0x1cc2a]        # 42a653 <__ctype_b_loc@plt+0x28383>
  40da29:	mov    rdi,rbx
  40da2c:	mov    esi,0x1
  40da31:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40da36:	mov    rax,QWORD PTR [rbx+0x10]
  40da3a:	jmp    40da40 <__ctype_b_loc@plt+0xb770>
  40da3c:	mov    QWORD PTR [rbx+0x10],rax
  40da40:	mov    rdx,QWORD PTR [rbx+0x18]
  40da44:	cmp    rdx,rax
  40da47:	lea    rcx,[rip+0x1c0ca]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40da4e:	cmovb  rcx,rdx
  40da52:	movsxd rdx,DWORD PTR [rcx+0x8]
  40da56:	cmp    rdx,0x7
  40da5a:	je     40da61 <__ctype_b_loc@plt+0xb791>
  40da5c:	cmp    edx,0x5
  40da5f:	jne    40da6a <__ctype_b_loc@plt+0xb79a>
  40da61:	mov    rcx,QWORD PTR [rcx]
  40da64:	add    rcx,0x10
  40da68:	jmp    40da79 <__ctype_b_loc@plt+0xb7a9>
  40da6a:	mov    rcx,QWORD PTR [rbx+0x20]
  40da6e:	lea    rcx,[rcx+rdx*8]
  40da72:	add    rcx,0xe0
  40da79:	mov    rcx,QWORD PTR [rcx]
  40da7c:	test   rcx,rcx
  40da7f:	je     40db6d <__ctype_b_loc@plt+0xb89d>
  40da85:	mov    QWORD PTR [rax],rcx
  40da88:	mov    DWORD PTR [rax+0x8],0x5
  40da8f:	mov    rax,QWORD PTR [rbx+0x10]
  40da93:	add    rax,0x10
  40da97:	jmp    40db69 <__ctype_b_loc@plt+0xb899>
  40da9c:	mov    rax,QWORD PTR [r14+0x20]
  40daa0:	cmp    DWORD PTR [rax+0x18],0x3
  40daa4:	je     40dabf <__ctype_b_loc@plt+0xb7ef>
  40daa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dab0:	mov    rax,QWORD PTR [rax+0x20]
  40dab4:	test   rax,rax
  40dab7:	je     40dad8 <__ctype_b_loc@plt+0xb808>
  40dab9:	cmp    DWORD PTR [rax+0x18],0x3
  40dabd:	jne    40dab0 <__ctype_b_loc@plt+0xb7e0>
  40dabf:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40dac4:	vucomisd xmm1,xmm0
  40dac8:	jne    40dab0 <__ctype_b_loc@plt+0xb7e0>
  40daca:	jp     40dab0 <__ctype_b_loc@plt+0xb7e0>
  40dacc:	mov    BYTE PTR [r14+0xa],0x0
  40dad1:	cmp    rax,r12
  40dad4:	jne    40db1b <__ctype_b_loc@plt+0xb84b>
  40dad6:	jmp    40dadd <__ctype_b_loc@plt+0xb80d>
  40dad8:	mov    BYTE PTR [r14+0xa],0x0
  40dadd:	cmp    r13d,0x3
  40dae1:	je     40daf1 <__ctype_b_loc@plt+0xb821>
  40dae3:	test   r13d,r13d
  40dae6:	jne    40db0d <__ctype_b_loc@plt+0xb83d>
  40dae8:	lea    rsi,[rip+0x1c414]        # 429f03 <__ctype_b_loc@plt+0x27c33>
  40daef:	jmp    40db03 <__ctype_b_loc@plt+0xb833>
  40daf1:	vmovq  xmm0,QWORD PTR [r15]
  40daf6:	vucomisd xmm0,xmm0
  40dafa:	jnp    40db0d <__ctype_b_loc@plt+0xb83d>
  40dafc:	lea    rsi,[rip+0x1c413]        # 429f16 <__ctype_b_loc@plt+0x27c46>
  40db03:	mov    rdi,rbx
  40db06:	xor    eax,eax
  40db08:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  40db0d:	mov    rdi,rbx
  40db10:	mov    rsi,r14
  40db13:	mov    rdx,r15
  40db16:	call   409b60 <__ctype_b_loc@plt+0x7890>
  40db1b:	mov    rcx,QWORD PTR [rbp+0x0]
  40db1f:	mov    QWORD PTR [rax],rcx
  40db22:	mov    ecx,DWORD PTR [rbp+0x8]
  40db25:	mov    DWORD PTR [rax+0x8],ecx
  40db28:	mov    rax,QWORD PTR [rbx+0x10]
  40db2c:	cmp    DWORD PTR [rax-0x8],0x4
  40db30:	jl     40db65 <__ctype_b_loc@plt+0xb895>
  40db32:	mov    rcx,QWORD PTR [rax-0x10]
  40db36:	test   BYTE PTR [rcx+0x9],0x3
  40db3a:	je     40db65 <__ctype_b_loc@plt+0xb895>
  40db3c:	mov    rcx,QWORD PTR [rsp]
  40db40:	mov    rcx,QWORD PTR [rcx]
  40db43:	mov    dl,BYTE PTR [rcx+0x9]
  40db46:	test   dl,0x4
  40db49:	je     40db65 <__ctype_b_loc@plt+0xb895>
  40db4b:	mov    rax,QWORD PTR [rbx+0x20]
  40db4f:	and    dl,0xfb
  40db52:	mov    BYTE PTR [rcx+0x9],dl
  40db55:	mov    rdx,QWORD PTR [rax+0x40]
  40db59:	mov    QWORD PTR [rcx+0x30],rdx
  40db5d:	mov    QWORD PTR [rax+0x40],rcx
  40db61:	mov    rax,QWORD PTR [rbx+0x10]
  40db65:	add    rax,0xffffffffffffffe0
  40db69:	mov    QWORD PTR [rbx+0x10],rax
  40db6d:	mov    rdi,rbx
  40db70:	mov    esi,0x2
  40db75:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40db7a:	mov    eax,0x1
  40db7f:	add    rsp,0x8
  40db83:	pop    rbx
  40db84:	pop    r12
  40db86:	pop    r13
  40db88:	pop    r14
  40db8a:	pop    r15
  40db8c:	pop    rbp
  40db8d:	ret    
  40db8e:	xchg   ax,ax
  40db90:	push   r15
  40db92:	push   r14
  40db94:	push   r12
  40db96:	push   rbx
  40db97:	sub    rsp,0x78
  40db9b:	mov    r15,rdi
  40db9e:	mov    r12,QWORD PTR [rdi+0x18]
  40dba2:	lea    r14,[rip+0x1bf6f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40dba9:	cmp    r12,r14
  40dbac:	je     40dbbf <__ctype_b_loc@plt+0xb8ef>
  40dbae:	mov    rbx,QWORD PTR [r15+0x10]
  40dbb2:	cmp    r12,rbx
  40dbb5:	jae    40dbbf <__ctype_b_loc@plt+0xb8ef>
  40dbb7:	cmp    DWORD PTR [r12+0x8],0xffffffff
  40dbbd:	jne    40dbdb <__ctype_b_loc@plt+0xb90b>
  40dbbf:	lea    rdx,[rip+0x1c565]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  40dbc6:	mov    rdi,r15
  40dbc9:	mov    esi,0x1
  40dbce:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40dbd3:	mov    rbx,QWORD PTR [r15+0x10]
  40dbd7:	mov    r12,QWORD PTR [r15+0x18]
  40dbdb:	cmp    r12,rbx
  40dbde:	mov    rax,r14
  40dbe1:	cmovb  rax,r12
  40dbe5:	mov    ecx,DWORD PTR [rax+0x8]
  40dbe8:	test   ecx,ecx
  40dbea:	je     40dc02 <__ctype_b_loc@plt+0xb932>
  40dbec:	cmp    ecx,0x1
  40dbef:	jne    40dbf6 <__ctype_b_loc@plt+0xb926>
  40dbf1:	cmp    DWORD PTR [rax],0x0
  40dbf4:	je     40dc02 <__ctype_b_loc@plt+0xb932>
  40dbf6:	sub    rbx,r12
  40dbf9:	shr    rbx,0x4
  40dbfd:	jmp    40dd72 <__ctype_b_loc@plt+0xbaa2>
  40dc02:	lea    rax,[r12+0x10]
  40dc07:	lea    rdx,[rip+0x1c50b]        # 42a119 <__ctype_b_loc@plt+0x27e49>
  40dc0e:	cmp    rax,rbx
  40dc11:	jae    40dd5f <__ctype_b_loc@plt+0xba8f>
  40dc17:	cmp    rax,r14
  40dc1a:	je     40dd5f <__ctype_b_loc@plt+0xba8f>
  40dc20:	movsxd rcx,DWORD PTR [r12+0x18]
  40dc25:	test   rcx,rcx
  40dc28:	jle    40dd5f <__ctype_b_loc@plt+0xba8f>
  40dc2e:	cmp    ecx,0x4
  40dc31:	je     40dca0 <__ctype_b_loc@plt+0xb9d0>
  40dc33:	cmp    ecx,0x3
  40dc36:	jne    40dcac <__ctype_b_loc@plt+0xb9dc>
  40dc38:	vmovsd xmm0,QWORD PTR [r12+0x10]
  40dc3f:	lea    rsi,[rip+0x1c1db]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  40dc46:	mov    rbx,rsp
  40dc49:	mov    rdi,rbx
  40dc4c:	mov    al,0x1
  40dc4e:	call   402270 <sprintf@plt>
  40dc53:	mov    rdi,rbx
  40dc56:	call   4020e0 <strlen@plt>
  40dc5b:	mov    rdi,r15
  40dc5e:	mov    rsi,rbx
  40dc61:	mov    rdx,rax
  40dc64:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40dc69:	mov    QWORD PTR [r12+0x10],rax
  40dc6e:	mov    DWORD PTR [r12+0x18],0x4
  40dc77:	mov    rax,QWORD PTR [r15+0x20]
  40dc7b:	mov    rcx,QWORD PTR [rax+0x78]
  40dc7f:	cmp    rcx,QWORD PTR [rax+0x70]
  40dc83:	jb     40dc8d <__ctype_b_loc@plt+0xb9bd>
  40dc85:	mov    rdi,r15
  40dc88:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40dc8d:	mov    rax,QWORD PTR [r15+0x18]
  40dc91:	add    rax,0x10
  40dc95:	cmp    rax,QWORD PTR [r15+0x10]
  40dc99:	cmovb  r14,rax
  40dc9d:	mov    rax,r14
  40dca0:	mov    rdx,QWORD PTR [rax]
  40dca3:	add    rdx,0x18
  40dca7:	jmp    40dd5f <__ctype_b_loc@plt+0xba8f>
  40dcac:	lea    rax,[rip+0x21c2d]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40dcb3:	mov    rcx,QWORD PTR [rax+rcx*8]
  40dcb7:	lea    rsi,[rip+0x1c504]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40dcbe:	lea    rdx,[rip+0x1c5a4]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  40dcc5:	mov    rdi,r15
  40dcc8:	xor    eax,eax
  40dcca:	call   410460 <__ctype_b_loc@plt+0xe190>
  40dccf:	mov    r14,rax
  40dcd2:	mov    rax,QWORD PTR [r15+0x28]
  40dcd6:	sub    rax,QWORD PTR [r15+0x50]
  40dcda:	jbe    40dd44 <__ctype_b_loc@plt+0xba74>
  40dcdc:	shr    rax,0x3
  40dce0:	imul   eax,eax,0xcccccccd
  40dce6:	mov    DWORD PTR [rsp+0x74],eax
  40dcea:	lea    rsi,[rip+0x1c166]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40dcf1:	mov    rdx,rsp
  40dcf4:	mov    rdi,r15
  40dcf7:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40dcfc:	mov    rdi,QWORD PTR [rsp+0x10]
  40dd01:	lea    rsi,[rip+0x1c448]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40dd08:	call   402170 <strcmp@plt>
  40dd0d:	cmp    eax,0x1
  40dd10:	mov    edx,0x2
  40dd15:	sbb    edx,0x0
  40dd18:	mov    rcx,QWORD PTR [rsp+0x8]
  40dd1d:	test   rcx,rcx
  40dd20:	jne    40dd2e <__ctype_b_loc@plt+0xba5e>
  40dd22:	lea    rcx,[rip+0x1c44c]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40dd29:	mov    QWORD PTR [rsp+0x8],rcx
  40dd2e:	lea    rsi,[rip+0x1c442]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40dd35:	mov    rdi,r15
  40dd38:	mov    r8,r14
  40dd3b:	xor    eax,eax
  40dd3d:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40dd42:	jmp    40dd5d <__ctype_b_loc@plt+0xba8d>
  40dd44:	lea    rsi,[rip+0x1c3ef]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40dd4b:	mov    rdi,r15
  40dd4e:	mov    edx,0x2
  40dd53:	mov    rcx,r14
  40dd56:	xor    eax,eax
  40dd58:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40dd5d:	xor    edx,edx
  40dd5f:	lea    rsi,[rip+0x1c081]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  40dd66:	xor    ebx,ebx
  40dd68:	mov    rdi,r15
  40dd6b:	xor    eax,eax
  40dd6d:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40dd72:	mov    eax,ebx
  40dd74:	add    rsp,0x78
  40dd78:	pop    rbx
  40dd79:	pop    r12
  40dd7b:	pop    r14
  40dd7d:	pop    r15
  40dd7f:	ret    
  40dd80:	push   r15
  40dd82:	push   r14
  40dd84:	push   rbx
  40dd85:	sub    rsp,0x80
  40dd8c:	mov    rbx,rdi
  40dd8f:	mov    edx,0x1
  40dd94:	mov    esi,0x2
  40dd99:	call   410640 <__ctype_b_loc@plt+0xe370>
  40dd9e:	mov    rsi,QWORD PTR [rbx+0x10]
  40dda2:	mov    rcx,QWORD PTR [rbx+0x18]
  40dda6:	lea    rdx,[rcx+0x10]
  40ddaa:	cmp    rsi,rdx
  40ddad:	jae    40ddc4 <__ctype_b_loc@plt+0xbaf4>
  40ddaf:	nop
  40ddb0:	mov    DWORD PTR [rsi+0x8],0x0
  40ddb7:	cmp    rsi,rcx
  40ddba:	lea    rsi,[rsi+0x10]
  40ddbe:	jb     40ddb0 <__ctype_b_loc@plt+0xbae0>
  40ddc0:	mov    QWORD PTR [rbx+0x10],rsi
  40ddc4:	mov    QWORD PTR [rbx+0x10],rdx
  40ddc8:	lea    r14,[rip+0x1bd49]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40ddcf:	cmp    rcx,r14
  40ddd2:	je     40df1e <__ctype_b_loc@plt+0xbc4e>
  40ddd8:	test   eax,eax
  40ddda:	jle    40df1e <__ctype_b_loc@plt+0xbc4e>
  40dde0:	mov    ecx,DWORD PTR [rcx+0x8]
  40dde3:	add    ecx,0xfffffffd
  40dde6:	cmp    ecx,0x1
  40dde9:	ja     40df1e <__ctype_b_loc@plt+0xbc4e>
  40ddef:	mov    rcx,QWORD PTR [rbx+0x28]
  40ddf3:	mov    rdx,QWORD PTR [rbx+0x50]
  40ddf7:	cmp    rcx,rdx
  40ddfa:	ja     40de1d <__ctype_b_loc@plt+0xbb4d>
  40ddfc:	jmp    40de82 <__ctype_b_loc@plt+0xbbb2>
  40de01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40de10:	add    rcx,0xffffffffffffffd8
  40de14:	test   eax,eax
  40de16:	jle    40de31 <__ctype_b_loc@plt+0xbb61>
  40de18:	cmp    rcx,rdx
  40de1b:	jbe    40de82 <__ctype_b_loc@plt+0xbbb2>
  40de1d:	dec    eax
  40de1f:	mov    rsi,QWORD PTR [rcx+0x8]
  40de23:	mov    rsi,QWORD PTR [rsi]
  40de26:	cmp    BYTE PTR [rsi+0xa],0x0
  40de2a:	jne    40de10 <__ctype_b_loc@plt+0xbb40>
  40de2c:	sub    eax,DWORD PTR [rcx+0x24]
  40de2f:	jmp    40de10 <__ctype_b_loc@plt+0xbb40>
  40de31:	xor    esi,esi
  40de33:	test   eax,eax
  40de35:	jne    40de46 <__ctype_b_loc@plt+0xbb76>
  40de37:	sub    rcx,rdx
  40de3a:	jbe    40de82 <__ctype_b_loc@plt+0xbbb2>
  40de3c:	shr    rcx,0x3
  40de40:	imul   esi,ecx,0xcccccccd
  40de46:	mov    DWORD PTR [rsp+0x7c],esi
  40de4a:	lea    rsi,[rip+0x1c366]        # 42a1b7 <__ctype_b_loc@plt+0x27ee7>
  40de51:	lea    rdx,[rsp+0x8]
  40de56:	mov    rdi,rbx
  40de59:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40de5e:	mov    ecx,DWORD PTR [rsp+0x30]
  40de62:	test   ecx,ecx
  40de64:	jle    40de82 <__ctype_b_loc@plt+0xbbb2>
  40de66:	lea    rdx,[rsp+0x40]
  40de6b:	lea    rsi,[rip+0x1c348]        # 42a1ba <__ctype_b_loc@plt+0x27eea>
  40de72:	mov    rdi,rbx
  40de75:	xor    eax,eax
  40de77:	call   410460 <__ctype_b_loc@plt+0xe190>
  40de7c:	mov    rax,QWORD PTR [rbx+0x10]
  40de80:	jmp    40dec4 <__ctype_b_loc@plt+0xbbf4>
  40de82:	mov    rax,QWORD PTR [rbx+0x20]
  40de86:	mov    rcx,QWORD PTR [rax+0x78]
  40de8a:	cmp    rcx,QWORD PTR [rax+0x70]
  40de8e:	jb     40de98 <__ctype_b_loc@plt+0xbbc8>
  40de90:	mov    rdi,rbx
  40de93:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40de98:	mov    r15,QWORD PTR [rbx+0x10]
  40de9c:	lea    rsi,[rip+0x1c1f8]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  40dea3:	mov    rdi,rbx
  40dea6:	xor    edx,edx
  40dea8:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40dead:	mov    QWORD PTR [r15],rax
  40deb0:	mov    DWORD PTR [r15+0x8],0x4
  40deb8:	mov    rax,QWORD PTR [rbx+0x10]
  40debc:	add    rax,0x10
  40dec0:	mov    QWORD PTR [rbx+0x10],rax
  40dec4:	mov    rcx,QWORD PTR [rbx+0x18]
  40dec8:	cmp    rcx,rax
  40decb:	cmovb  r14,rcx
  40decf:	mov    rcx,QWORD PTR [r14]
  40ded2:	mov    QWORD PTR [rax],rcx
  40ded5:	mov    ecx,DWORD PTR [r14+0x8]
  40ded9:	mov    DWORD PTR [rax+0x8],ecx
  40dedc:	mov    rdx,QWORD PTR [rbx+0x10]
  40dee0:	mov    rax,QWORD PTR [rbx+0x20]
  40dee4:	add    rdx,0x10
  40dee8:	mov    QWORD PTR [rbx+0x10],rdx
  40deec:	mov    rcx,QWORD PTR [rax+0x78]
  40def0:	cmp    rcx,QWORD PTR [rax+0x70]
  40def4:	jb     40df02 <__ctype_b_loc@plt+0xbc32>
  40def6:	mov    rdi,rbx
  40def9:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40defe:	mov    rdx,QWORD PTR [rbx+0x10]
  40df02:	sub    rdx,QWORD PTR [rbx+0x18]
  40df06:	shr    rdx,0x4
  40df0a:	dec    edx
  40df0c:	mov    rdi,rbx
  40df0f:	mov    esi,0x2
  40df14:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  40df19:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40df1e:	mov    rdi,rbx
  40df21:	call   4045f0 <__ctype_b_loc@plt+0x2320>
  40df26:	xor    eax,eax
  40df28:	add    rsp,0x80
  40df2f:	pop    rbx
  40df30:	pop    r14
  40df32:	pop    r15
  40df34:	ret    
  40df35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df3f:	nop
  40df40:	push   r15
  40df42:	push   r14
  40df44:	push   r12
  40df46:	push   rbx
  40df47:	sub    rsp,0x28
  40df4b:	mov    r14,rdi
  40df4e:	mov    rbx,QWORD PTR [rdi+0x18]
  40df52:	lea    r15,[rip+0x1bbbf]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40df59:	xor    r12d,r12d
  40df5c:	cmp    rbx,r15
  40df5f:	je     40e023 <__ctype_b_loc@plt+0xbd53>
  40df65:	cmp    rbx,QWORD PTR [r14+0x10]
  40df69:	jae    40e023 <__ctype_b_loc@plt+0xbd53>
  40df6f:	movsxd rax,DWORD PTR [rbx+0x8]
  40df73:	test   rax,rax
  40df76:	jle    40dfe8 <__ctype_b_loc@plt+0xbd18>
  40df78:	cmp    eax,0x4
  40df7b:	je     40dfdf <__ctype_b_loc@plt+0xbd0f>
  40df7d:	cmp    eax,0x3
  40df80:	jne    40dfed <__ctype_b_loc@plt+0xbd1d>
  40df82:	vmovsd xmm0,QWORD PTR [rbx]
  40df86:	lea    rsi,[rip+0x1be94]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  40df8d:	mov    r12,rsp
  40df90:	mov    rdi,r12
  40df93:	mov    al,0x1
  40df95:	call   402270 <sprintf@plt>
  40df9a:	mov    rdi,r12
  40df9d:	call   4020e0 <strlen@plt>
  40dfa2:	mov    rdi,r14
  40dfa5:	mov    rsi,r12
  40dfa8:	mov    rdx,rax
  40dfab:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40dfb0:	mov    QWORD PTR [rbx],rax
  40dfb3:	mov    DWORD PTR [rbx+0x8],0x4
  40dfba:	mov    rax,QWORD PTR [r14+0x20]
  40dfbe:	mov    rcx,QWORD PTR [rax+0x78]
  40dfc2:	cmp    rcx,QWORD PTR [rax+0x70]
  40dfc6:	jb     40dfd0 <__ctype_b_loc@plt+0xbd00>
  40dfc8:	mov    rdi,r14
  40dfcb:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40dfd0:	mov    rax,QWORD PTR [r14+0x18]
  40dfd4:	cmp    rax,QWORD PTR [r14+0x10]
  40dfd8:	cmovb  r15,rax
  40dfdc:	mov    rbx,r15
  40dfdf:	mov    r12,QWORD PTR [rbx]
  40dfe2:	add    r12,0x18
  40dfe6:	jmp    40e023 <__ctype_b_loc@plt+0xbd53>
  40dfe8:	xor    r12d,r12d
  40dfeb:	jmp    40e023 <__ctype_b_loc@plt+0xbd53>
  40dfed:	lea    rcx,[rip+0x218ec]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40dff4:	mov    rcx,QWORD PTR [rcx+rax*8]
  40dff8:	lea    rsi,[rip+0x1c1c3]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40dfff:	lea    rdx,[rip+0x1c263]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  40e006:	xor    r12d,r12d
  40e009:	mov    rdi,r14
  40e00c:	xor    eax,eax
  40e00e:	call   410460 <__ctype_b_loc@plt+0xe190>
  40e013:	mov    rdi,r14
  40e016:	mov    esi,0x1
  40e01b:	mov    rdx,rax
  40e01e:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40e023:	mov    rdi,r14
  40e026:	mov    rsi,r12
  40e029:	call   402d90 <__ctype_b_loc@plt+0xac0>
  40e02e:	test   eax,eax
  40e030:	je     40e07f <__ctype_b_loc@plt+0xbdaf>
  40e032:	mov    rax,QWORD PTR [r14+0x10]
  40e036:	mov    DWORD PTR [rax+0x8],0x0
  40e03d:	lea    rcx,[rax+0x10]
  40e041:	mov    QWORD PTR [r14+0x10],rcx
  40e045:	lea    rcx,[rax+0x20]
  40e049:	nop    DWORD PTR [rax+0x0]
  40e050:	mov    rdx,QWORD PTR [rcx-0x20]
  40e054:	mov    QWORD PTR [rcx-0x10],rdx
  40e058:	mov    edx,DWORD PTR [rcx-0x18]
  40e05b:	mov    DWORD PTR [rcx-0x8],edx
  40e05e:	add    rcx,0xfffffffffffffff0
  40e062:	cmp    rcx,rax
  40e065:	ja     40e050 <__ctype_b_loc@plt+0xbd80>
  40e067:	mov    rcx,QWORD PTR [r14+0x10]
  40e06b:	mov    rdx,QWORD PTR [rcx]
  40e06e:	mov    QWORD PTR [rax-0x10],rdx
  40e072:	mov    ecx,DWORD PTR [rcx+0x8]
  40e075:	mov    DWORD PTR [rax-0x8],ecx
  40e078:	mov    eax,0x2
  40e07d:	jmp    40e084 <__ctype_b_loc@plt+0xbdb4>
  40e07f:	mov    eax,0x1
  40e084:	add    rsp,0x28
  40e088:	pop    rbx
  40e089:	pop    r12
  40e08b:	pop    r14
  40e08d:	pop    r15
  40e08f:	ret    
  40e090:	push   rbp
  40e091:	push   r15
  40e093:	push   r14
  40e095:	push   r13
  40e097:	push   r12
  40e099:	push   rbx
  40e09a:	sub    rsp,0xb8
  40e0a1:	mov    r15,rdi
  40e0a4:	mov    rcx,QWORD PTR [rdi+0x10]
  40e0a8:	mov    rbp,QWORD PTR [rdi+0x18]
  40e0ac:	cmp    rbp,rcx
  40e0af:	lea    r13,[rip+0x1ba62]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40e0b6:	mov    rbx,r13
  40e0b9:	cmovb  rbx,rbp
  40e0bd:	mov    eax,DWORD PTR [rbx+0x8]
  40e0c0:	cmp    eax,0x4
  40e0c3:	je     40e12c <__ctype_b_loc@plt+0xbe5c>
  40e0c5:	cmp    eax,0x3
  40e0c8:	jne    40e139 <__ctype_b_loc@plt+0xbe69>
  40e0ca:	vmovsd xmm0,QWORD PTR [rbx]
  40e0ce:	lea    rsi,[rip+0x1bd4c]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  40e0d5:	lea    r14,[rsp+0x40]
  40e0da:	mov    rdi,r14
  40e0dd:	mov    al,0x1
  40e0df:	call   402270 <sprintf@plt>
  40e0e4:	mov    rdi,r14
  40e0e7:	call   4020e0 <strlen@plt>
  40e0ec:	mov    rdi,r15
  40e0ef:	mov    rsi,r14
  40e0f2:	mov    rdx,rax
  40e0f5:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40e0fa:	mov    QWORD PTR [rbx],rax
  40e0fd:	mov    DWORD PTR [rbx+0x8],0x4
  40e104:	mov    rax,QWORD PTR [r15+0x20]
  40e108:	mov    rcx,QWORD PTR [rax+0x78]
  40e10c:	cmp    rcx,QWORD PTR [rax+0x70]
  40e110:	jb     40e11a <__ctype_b_loc@plt+0xbe4a>
  40e112:	mov    rdi,r15
  40e115:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40e11a:	mov    rcx,QWORD PTR [r15+0x10]
  40e11e:	mov    rbp,QWORD PTR [r15+0x18]
  40e122:	cmp    rbp,rcx
  40e125:	mov    rbx,r13
  40e128:	cmovb  rbx,rbp
  40e12c:	mov    rbx,QWORD PTR [rbx]
  40e12f:	mov    r12,QWORD PTR [rbx+0x10]
  40e133:	add    rbx,0x18
  40e137:	jmp    40e197 <__ctype_b_loc@plt+0xbec7>
  40e139:	lea    rax,[rip+0x1c096]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40e140:	cmp    rbp,r13
  40e143:	je     40e15f <__ctype_b_loc@plt+0xbe8f>
  40e145:	cmp    rbp,rcx
  40e148:	jae    40e15f <__ctype_b_loc@plt+0xbe8f>
  40e14a:	movsxd rcx,DWORD PTR [rbp+0x8]
  40e14e:	cmp    rcx,0xffffffffffffffff
  40e152:	je     40e15f <__ctype_b_loc@plt+0xbe8f>
  40e154:	lea    rax,[rip+0x21785]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40e15b:	mov    rax,QWORD PTR [rax+rcx*8]
  40e15f:	lea    rsi,[rip+0x1c05c]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40e166:	lea    rdx,[rip+0x1c0fc]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  40e16d:	xor    ebx,ebx
  40e16f:	mov    rdi,r15
  40e172:	mov    rcx,rax
  40e175:	xor    eax,eax
  40e177:	call   410460 <__ctype_b_loc@plt+0xe190>
  40e17c:	mov    rdi,r15
  40e17f:	mov    esi,0x1
  40e184:	mov    rdx,rax
  40e187:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40e18c:	mov    rcx,QWORD PTR [r15+0x10]
  40e190:	mov    rbp,QWORD PTR [r15+0x18]
  40e194:	xor    r12d,r12d
  40e197:	lea    rax,[rbp+0x10]
  40e19b:	mov    rdx,rbx
  40e19e:	cmp    rax,rcx
  40e1a1:	jae    40e2fb <__ctype_b_loc@plt+0xc02b>
  40e1a7:	cmp    rax,r13
  40e1aa:	je     40e2fb <__ctype_b_loc@plt+0xc02b>
  40e1b0:	movsxd rdx,DWORD PTR [rbp+0x18]
  40e1b4:	test   rdx,rdx
  40e1b7:	jle    40e237 <__ctype_b_loc@plt+0xbf67>
  40e1b9:	cmp    edx,0x4
  40e1bc:	je     40e22b <__ctype_b_loc@plt+0xbf5b>
  40e1be:	cmp    edx,0x3
  40e1c1:	jne    40e23f <__ctype_b_loc@plt+0xbf6f>
  40e1c3:	vmovsd xmm0,QWORD PTR [rbp+0x10]
  40e1c8:	lea    rsi,[rip+0x1bc52]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  40e1cf:	lea    r14,[rsp+0x40]
  40e1d4:	mov    rdi,r14
  40e1d7:	mov    al,0x1
  40e1d9:	call   402270 <sprintf@plt>
  40e1de:	mov    rdi,r14
  40e1e1:	call   4020e0 <strlen@plt>
  40e1e6:	mov    rdi,r15
  40e1e9:	mov    rsi,r14
  40e1ec:	mov    rdx,rax
  40e1ef:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40e1f4:	mov    QWORD PTR [rbp+0x10],rax
  40e1f8:	mov    DWORD PTR [rbp+0x18],0x4
  40e1ff:	mov    rax,QWORD PTR [r15+0x20]
  40e203:	mov    rcx,QWORD PTR [rax+0x78]
  40e207:	cmp    rcx,QWORD PTR [rax+0x70]
  40e20b:	jb     40e215 <__ctype_b_loc@plt+0xbf45>
  40e20d:	mov    rdi,r15
  40e210:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40e215:	mov    rcx,QWORD PTR [r15+0x10]
  40e219:	mov    rax,QWORD PTR [r15+0x18]
  40e21d:	add    rax,0x10
  40e221:	cmp    rax,rcx
  40e224:	cmovb  r13,rax
  40e228:	mov    rax,r13
  40e22b:	mov    rdx,QWORD PTR [rax]
  40e22e:	add    rdx,0x18
  40e232:	jmp    40e2fb <__ctype_b_loc@plt+0xc02b>
  40e237:	mov    rdx,rbx
  40e23a:	jmp    40e2fb <__ctype_b_loc@plt+0xc02b>
  40e23f:	lea    rax,[rip+0x2169a]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40e246:	mov    rcx,QWORD PTR [rax+rdx*8]
  40e24a:	lea    rsi,[rip+0x1bf71]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40e251:	lea    rdx,[rip+0x1c011]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  40e258:	mov    rdi,r15
  40e25b:	xor    eax,eax
  40e25d:	call   410460 <__ctype_b_loc@plt+0xe190>
  40e262:	mov    r14,rax
  40e265:	mov    rax,QWORD PTR [r15+0x28]
  40e269:	sub    rax,QWORD PTR [r15+0x50]
  40e26d:	jbe    40e2dc <__ctype_b_loc@plt+0xc00c>
  40e26f:	shr    rax,0x3
  40e273:	imul   eax,eax,0xcccccccd
  40e279:	mov    DWORD PTR [rsp+0xb4],eax
  40e280:	lea    rsi,[rip+0x1bbd0]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40e287:	lea    rdx,[rsp+0x40]
  40e28c:	mov    rdi,r15
  40e28f:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40e294:	mov    rdi,QWORD PTR [rsp+0x50]
  40e299:	lea    rsi,[rip+0x1beb0]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40e2a0:	call   402170 <strcmp@plt>
  40e2a5:	cmp    eax,0x1
  40e2a8:	mov    edx,0x2
  40e2ad:	sbb    edx,0x0
  40e2b0:	mov    rcx,QWORD PTR [rsp+0x48]
  40e2b5:	test   rcx,rcx
  40e2b8:	jne    40e2c6 <__ctype_b_loc@plt+0xbff6>
  40e2ba:	lea    rcx,[rip+0x1beb4]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40e2c1:	mov    QWORD PTR [rsp+0x48],rcx
  40e2c6:	lea    rsi,[rip+0x1beaa]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40e2cd:	mov    rdi,r15
  40e2d0:	mov    r8,r14
  40e2d3:	xor    eax,eax
  40e2d5:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40e2da:	jmp    40e2f5 <__ctype_b_loc@plt+0xc025>
  40e2dc:	lea    rsi,[rip+0x1be57]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40e2e3:	mov    rdi,r15
  40e2e6:	mov    edx,0x2
  40e2eb:	mov    rcx,r14
  40e2ee:	xor    eax,eax
  40e2f0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40e2f5:	mov    rcx,QWORD PTR [r15+0x10]
  40e2f9:	xor    edx,edx
  40e2fb:	mov    QWORD PTR [rsp],rbx
  40e2ff:	mov    QWORD PTR [rsp+0x8],r12
  40e304:	test   rdx,rdx
  40e307:	lea    rax,[rip+0x1be67]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40e30e:	cmovne rax,rdx
  40e312:	mov    QWORD PTR [rsp+0x30],r15
  40e317:	lea    rdx,[rip+0x2742]        # 410a60 <__ctype_b_loc@plt+0xe790>
  40e31e:	mov    QWORD PTR [rsp+0x20],rdx
  40e323:	mov    rdx,rsp
  40e326:	mov    QWORD PTR [rsp+0x28],rdx
  40e32b:	vxorps xmm0,xmm0,xmm0
  40e32f:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40e335:	lea    rdx,[rsp+0x10]
  40e33a:	mov    QWORD PTR [rsp+0x40],rdx
  40e33f:	mov    QWORD PTR [rsp+0x60],rax
  40e344:	mov    QWORD PTR [rsp+0x48],0x0
  40e34d:	mov    QWORD PTR [rsp+0x58],0x0
  40e356:	sub    rcx,QWORD PTR [r15+0x40]
  40e35a:	mov    r8,QWORD PTR [r15+0xb0]
  40e361:	lea    rsi,[rip+0x28e8]        # 410c50 <__ctype_b_loc@plt+0xe980>
  40e368:	lea    rdx,[rsp+0x40]
  40e36d:	mov    rdi,r15
  40e370:	call   410a80 <__ctype_b_loc@plt+0xe7b0>
  40e375:	mov    r14d,eax
  40e378:	mov    rsi,QWORD PTR [rsp+0x48]
  40e37d:	mov    rbx,QWORD PTR [rsp+0x58]
  40e382:	mov    rbp,QWORD PTR [r15+0x20]
  40e386:	mov    rdi,QWORD PTR [rbp+0x18]
  40e38a:	mov    rdx,rbx
  40e38d:	xor    ecx,ecx
  40e38f:	call   QWORD PTR [rbp+0x10]
  40e392:	sub    QWORD PTR [rbp+0x78],rbx
  40e396:	test   r14d,r14d
  40e399:	je     40e3ef <__ctype_b_loc@plt+0xc11f>
  40e39b:	mov    rax,QWORD PTR [r15+0x10]
  40e39f:	mov    DWORD PTR [rax+0x8],0x0
  40e3a6:	lea    rcx,[rax+0x10]
  40e3aa:	mov    QWORD PTR [r15+0x10],rcx
  40e3ae:	lea    rcx,[rax+0x20]
  40e3b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3bc:	nop    DWORD PTR [rax+0x0]
  40e3c0:	mov    rdx,QWORD PTR [rcx-0x20]
  40e3c4:	mov    QWORD PTR [rcx-0x10],rdx
  40e3c8:	mov    edx,DWORD PTR [rcx-0x18]
  40e3cb:	mov    DWORD PTR [rcx-0x8],edx
  40e3ce:	add    rcx,0xfffffffffffffff0
  40e3d2:	cmp    rcx,rax
  40e3d5:	ja     40e3c0 <__ctype_b_loc@plt+0xc0f0>
  40e3d7:	mov    rcx,QWORD PTR [r15+0x10]
  40e3db:	mov    rdx,QWORD PTR [rcx]
  40e3de:	mov    QWORD PTR [rax-0x10],rdx
  40e3e2:	mov    ecx,DWORD PTR [rcx+0x8]
  40e3e5:	mov    DWORD PTR [rax-0x8],ecx
  40e3e8:	mov    eax,0x2
  40e3ed:	jmp    40e3f4 <__ctype_b_loc@plt+0xc124>
  40e3ef:	mov    eax,0x1
  40e3f4:	add    rsp,0xb8
  40e3fb:	pop    rbx
  40e3fc:	pop    r12
  40e3fe:	pop    r13
  40e400:	pop    r14
  40e402:	pop    r15
  40e404:	pop    rbp
  40e405:	ret    
  40e406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e410:	push   r14
  40e412:	push   rbx
  40e413:	sub    rsp,0x18
  40e417:	mov    r14,rdi
  40e41a:	mov    rdx,QWORD PTR [rdi+0x18]
  40e41e:	lea    rbx,[rip+0x1b6f3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40e425:	cmp    rdx,rbx
  40e428:	je     40e439 <__ctype_b_loc@plt+0xc169>
  40e42a:	mov    rax,QWORD PTR [r14+0x10]
  40e42e:	cmp    rdx,rax
  40e431:	jae    40e439 <__ctype_b_loc@plt+0xc169>
  40e433:	cmp    DWORD PTR [rdx+0x8],0xffffffff
  40e437:	jne    40e455 <__ctype_b_loc@plt+0xc185>
  40e439:	lea    rdx,[rip+0x1bceb]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  40e440:	mov    rdi,r14
  40e443:	mov    esi,0x1
  40e448:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40e44d:	mov    rax,QWORD PTR [r14+0x10]
  40e451:	mov    rdx,QWORD PTR [r14+0x18]
  40e455:	mov    rcx,rax
  40e458:	sub    rcx,rdx
  40e45b:	shl    rcx,0x1c
  40e45f:	neg    rcx
  40e462:	sar    rcx,0x1c
  40e466:	add    rcx,rax
  40e469:	mov    QWORD PTR [rsp+0x8],rcx
  40e46e:	mov    DWORD PTR [rsp+0x10],0xffffffff
  40e476:	sub    rcx,QWORD PTR [r14+0x40]
  40e47a:	lea    rsi,[rip+0x1a18f]        # 428610 <__ctype_b_loc@plt+0x26340>
  40e481:	lea    rdx,[rsp+0x8]
  40e486:	mov    rdi,r14
  40e489:	xor    r8d,r8d
  40e48c:	call   410a80 <__ctype_b_loc@plt+0xe7b0>
  40e491:	mov    rcx,QWORD PTR [r14+0x10]
  40e495:	mov    rdx,QWORD PTR [r14+0x28]
  40e499:	cmp    rcx,QWORD PTR [rdx+0x10]
  40e49d:	jb     40e4a3 <__ctype_b_loc@plt+0xc1d3>
  40e49f:	mov    QWORD PTR [rdx+0x10],rcx
  40e4a3:	xor    edx,edx
  40e4a5:	test   eax,eax
  40e4a7:	sete   dl
  40e4aa:	mov    DWORD PTR [rcx],edx
  40e4ac:	mov    DWORD PTR [rcx+0x8],0x1
  40e4b3:	mov    rax,QWORD PTR [r14+0x10]
  40e4b7:	mov    rcx,QWORD PTR [r14+0x18]
  40e4bb:	add    rax,0x10
  40e4bf:	mov    QWORD PTR [r14+0x10],rax
  40e4c3:	cmp    rcx,rax
  40e4c6:	cmovb  rbx,rcx
  40e4ca:	cmp    rax,rbx
  40e4cd:	jbe    40e4ea <__ctype_b_loc@plt+0xc21a>
  40e4cf:	nop
  40e4d0:	mov    rcx,QWORD PTR [rax-0x10]
  40e4d4:	mov    QWORD PTR [rax],rcx
  40e4d7:	mov    ecx,DWORD PTR [rax-0x8]
  40e4da:	mov    DWORD PTR [rax+0x8],ecx
  40e4dd:	add    rax,0xfffffffffffffff0
  40e4e1:	cmp    rax,rbx
  40e4e4:	ja     40e4d0 <__ctype_b_loc@plt+0xc200>
  40e4e6:	mov    rax,QWORD PTR [r14+0x10]
  40e4ea:	mov    rcx,QWORD PTR [rax]
  40e4ed:	mov    QWORD PTR [rbx],rcx
  40e4f0:	mov    eax,DWORD PTR [rax+0x8]
  40e4f3:	mov    DWORD PTR [rbx+0x8],eax
  40e4f6:	mov    rax,QWORD PTR [r14+0x10]
  40e4fa:	sub    rax,QWORD PTR [r14+0x18]
  40e4fe:	shr    rax,0x4
  40e502:	add    rsp,0x18
  40e506:	pop    rbx
  40e507:	pop    r14
  40e509:	ret    
  40e50a:	nop    WORD PTR [rax+rax*1+0x0]
  40e510:	push   rbp
  40e511:	push   r15
  40e513:	push   r14
  40e515:	push   rbx
  40e516:	sub    rsp,0x78
  40e51a:	mov    rbx,rdi
  40e51d:	mov    r15,QWORD PTR [rdi+0x18]
  40e521:	lea    r14,[rip+0x1b5f0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40e528:	lea    rcx,[rip+0x1bca7]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40e52f:	cmp    r15,r14
  40e532:	je     40e557 <__ctype_b_loc@plt+0xc287>
  40e534:	mov    rax,QWORD PTR [rbx+0x10]
  40e538:	cmp    r15,rax
  40e53b:	jae    40e557 <__ctype_b_loc@plt+0xc287>
  40e53d:	movsxd rdx,DWORD PTR [r15+0x8]
  40e541:	cmp    rdx,0xffffffffffffffff
  40e545:	je     40e557 <__ctype_b_loc@plt+0xc287>
  40e547:	cmp    edx,0x5
  40e54a:	je     40e587 <__ctype_b_loc@plt+0xc2b7>
  40e54c:	lea    rax,[rip+0x2138d]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40e553:	mov    rcx,QWORD PTR [rax+rdx*8]
  40e557:	lea    rsi,[rip+0x1bc64]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40e55e:	lea    rdx,[rip+0x1c0a5]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40e565:	mov    rdi,rbx
  40e568:	xor    eax,eax
  40e56a:	call   410460 <__ctype_b_loc@plt+0xe190>
  40e56f:	mov    rdi,rbx
  40e572:	mov    esi,0x1
  40e577:	mov    rdx,rax
  40e57a:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40e57f:	mov    rax,QWORD PTR [rbx+0x10]
  40e583:	mov    r15,QWORD PTR [rbx+0x18]
  40e587:	lea    rcx,[r15+0x10]
  40e58b:	cmp    rcx,rax
  40e58e:	jae    40e5a0 <__ctype_b_loc@plt+0xc2d0>
  40e590:	cmp    rcx,r14
  40e593:	je     40e5a0 <__ctype_b_loc@plt+0xc2d0>
  40e595:	cmp    DWORD PTR [r15+0x18],0xffffffff
  40e59a:	jne    40e63b <__ctype_b_loc@plt+0xc36b>
  40e5a0:	mov    rax,QWORD PTR [rbx+0x28]
  40e5a4:	sub    rax,QWORD PTR [rbx+0x50]
  40e5a8:	jbe    40e616 <__ctype_b_loc@plt+0xc346>
  40e5aa:	shr    rax,0x3
  40e5ae:	imul   eax,eax,0xcccccccd
  40e5b4:	mov    DWORD PTR [rsp+0x74],eax
  40e5b8:	lea    rsi,[rip+0x1b898]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40e5bf:	mov    rdx,rsp
  40e5c2:	mov    rdi,rbx
  40e5c5:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40e5ca:	mov    rdi,QWORD PTR [rsp+0x10]
  40e5cf:	lea    rsi,[rip+0x1bb7a]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40e5d6:	call   402170 <strcmp@plt>
  40e5db:	cmp    eax,0x1
  40e5de:	mov    edx,0x2
  40e5e3:	sbb    edx,0x0
  40e5e6:	mov    rcx,QWORD PTR [rsp+0x8]
  40e5eb:	test   rcx,rcx
  40e5ee:	jne    40e5fc <__ctype_b_loc@plt+0xc32c>
  40e5f0:	lea    rcx,[rip+0x1bb7e]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40e5f7:	mov    QWORD PTR [rsp+0x8],rcx
  40e5fc:	lea    rsi,[rip+0x1bb74]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40e603:	lea    r8,[rip+0x1bb21]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  40e60a:	mov    rdi,rbx
  40e60d:	xor    eax,eax
  40e60f:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40e614:	jmp    40e633 <__ctype_b_loc@plt+0xc363>
  40e616:	lea    rsi,[rip+0x1bb1d]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40e61d:	lea    rcx,[rip+0x1bb07]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  40e624:	mov    rdi,rbx
  40e627:	mov    edx,0x2
  40e62c:	xor    eax,eax
  40e62e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40e633:	mov    rax,QWORD PTR [rbx+0x10]
  40e637:	mov    r15,QWORD PTR [rbx+0x18]
  40e63b:	lea    rcx,[r15+0x20]
  40e63f:	cmp    rax,rcx
  40e642:	jae    40e6c5 <__ctype_b_loc@plt+0xc3f5>
  40e648:	mov    rdx,r15
  40e64b:	sub    rdx,rax
  40e64e:	add    rdx,0x1f
  40e652:	mov    esi,edx
  40e654:	shr    esi,0x4
  40e657:	inc    esi
  40e659:	and    rsi,0x7
  40e65d:	je     40e670 <__ctype_b_loc@plt+0xc3a0>
  40e65f:	nop
  40e660:	mov    DWORD PTR [rax+0x8],0x0
  40e667:	add    rax,0x10
  40e66b:	dec    rsi
  40e66e:	jne    40e660 <__ctype_b_loc@plt+0xc390>
  40e670:	cmp    rdx,0x70
  40e674:	jb     40e6c1 <__ctype_b_loc@plt+0xc3f1>
  40e676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e680:	mov    DWORD PTR [rax+0x8],0x0
  40e687:	mov    DWORD PTR [rax+0x18],0x0
  40e68e:	mov    DWORD PTR [rax+0x28],0x0
  40e695:	mov    DWORD PTR [rax+0x38],0x0
  40e69c:	mov    DWORD PTR [rax+0x48],0x0
  40e6a3:	mov    DWORD PTR [rax+0x58],0x0
  40e6aa:	mov    DWORD PTR [rax+0x68],0x0
  40e6b1:	mov    DWORD PTR [rax+0x78],0x0
  40e6b8:	sub    rax,0xffffffffffffff80
  40e6bc:	cmp    rax,rcx
  40e6bf:	jb     40e680 <__ctype_b_loc@plt+0xc3b0>
  40e6c1:	mov    QWORD PTR [rbx+0x10],rax
  40e6c5:	mov    QWORD PTR [rbx+0x10],rcx
  40e6c9:	mov    ebp,DWORD PTR [r15+0x18]
  40e6cd:	test   ebp,ebp
  40e6cf:	je     40e83f <__ctype_b_loc@plt+0xc56f>
  40e6d5:	mov    rdi,QWORD PTR [r15]
  40e6d8:	lea    rbx,[r15+0x10]
  40e6dc:	cmp    ebp,0x3
  40e6df:	je     40e731 <__ctype_b_loc@plt+0xc461>
  40e6e1:	cmp    ebp,0x4
  40e6e4:	jne    40e75d <__ctype_b_loc@plt+0xc48d>
  40e6e6:	mov    rax,QWORD PTR [rbx]
  40e6e9:	mov    cl,BYTE PTR [rdi+0xb]
  40e6ec:	bzhi   ecx,DWORD PTR [rax+0xc],ecx
  40e6f2:	movsxd rcx,ecx
  40e6f5:	lea    rcx,[rcx+rcx*4]
  40e6f9:	shl    rcx,0x3
  40e6fd:	add    rcx,QWORD PTR [rdi+0x20]
  40e701:	cmp    DWORD PTR [rcx+0x18],0x4
  40e705:	je     40e723 <__ctype_b_loc@plt+0xc453>
  40e707:	nop    WORD PTR [rax+rax*1+0x0]
  40e710:	mov    rcx,QWORD PTR [rcx+0x20]
  40e714:	test   rcx,rcx
  40e717:	je     40e83f <__ctype_b_loc@plt+0xc56f>
  40e71d:	cmp    DWORD PTR [rcx+0x18],0x4
  40e721:	jne    40e710 <__ctype_b_loc@plt+0xc440>
  40e723:	cmp    QWORD PTR [rcx+0x10],rax
  40e727:	jne    40e710 <__ctype_b_loc@plt+0xc440>
  40e729:	mov    r14,rcx
  40e72c:	jmp    40e83f <__ctype_b_loc@plt+0xc56f>
  40e731:	vmovsd xmm1,QWORD PTR [rbx]
  40e735:	vcvttsd2si eax,xmm1
  40e739:	vcvtsi2sd xmm0,xmm0,eax
  40e73d:	vucomisd xmm1,xmm0
  40e741:	jne    40e75d <__ctype_b_loc@plt+0xc48d>
  40e743:	jp     40e75d <__ctype_b_loc@plt+0xc48d>
  40e745:	lea    ecx,[rax-0x1]
  40e748:	cmp    ecx,DWORD PTR [rdi+0x38]
  40e74b:	jae    40e7c8 <__ctype_b_loc@plt+0xc4f8>
  40e74d:	movsxd r14,ecx
  40e750:	shl    r14,0x4
  40e754:	add    r14,QWORD PTR [rdi+0x18]
  40e758:	jmp    40e83f <__ctype_b_loc@plt+0xc56f>
  40e75d:	mov    rsi,rbx
  40e760:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40e765:	mov    ecx,ebp
  40e767:	lea    rdx,[rip+0x1ab0e]        # 42927c <__ctype_b_loc@plt+0x26fac>
  40e76e:	cmp    DWORD PTR [rax+0x18],ebp
  40e771:	jne    40e78d <__ctype_b_loc@plt+0xc4bd>
  40e773:	jmp    40e79f <__ctype_b_loc@plt+0xc4cf>
  40e775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e77f:	nop
  40e780:	mov    rsi,QWORD PTR [rax+0x10]
  40e784:	cmp    rsi,QWORD PTR [rbx]
  40e787:	je     40e83c <__ctype_b_loc@plt+0xc56c>
  40e78d:	mov    rax,QWORD PTR [rax+0x20]
  40e791:	test   rax,rax
  40e794:	je     40e83f <__ctype_b_loc@plt+0xc56f>
  40e79a:	cmp    DWORD PTR [rax+0x18],ebp
  40e79d:	jne    40e78d <__ctype_b_loc@plt+0xc4bd>
  40e79f:	cmp    ebp,0x3
  40e7a2:	ja     40e780 <__ctype_b_loc@plt+0xc4b0>
  40e7a4:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40e7a8:	add    rsi,rdx
  40e7ab:	jmp    rsi
  40e7ad:	mov    esi,DWORD PTR [rax+0x10]
  40e7b0:	cmp    esi,DWORD PTR [rbx]
  40e7b2:	jne    40e78d <__ctype_b_loc@plt+0xc4bd>
  40e7b4:	jmp    40e83c <__ctype_b_loc@plt+0xc56c>
  40e7b9:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40e7be:	vucomisd xmm0,QWORD PTR [rbx]
  40e7c2:	jne    40e78d <__ctype_b_loc@plt+0xc4bd>
  40e7c4:	jp     40e78d <__ctype_b_loc@plt+0xc4bd>
  40e7c6:	jmp    40e83c <__ctype_b_loc@plt+0xc56c>
  40e7c8:	test   eax,eax
  40e7ca:	je     40e80a <__ctype_b_loc@plt+0xc53a>
  40e7cc:	vmovq  rcx,xmm0
  40e7d1:	mov    rax,rcx
  40e7d4:	shr    rax,0x20
  40e7d8:	add    eax,ecx
  40e7da:	mov    cl,BYTE PTR [rdi+0xb]
  40e7dd:	mov    rdx,0xffffffffffffffff
  40e7e4:	shlx   rcx,rdx,rcx
  40e7e9:	or     rcx,0x1
  40e7ed:	xor    rcx,0xfffffffffffffffe
  40e7f1:	xor    edx,edx
  40e7f3:	div    rcx
  40e7f6:	lea    rax,[rdx+rdx*4]
  40e7fa:	shl    rax,0x3
  40e7fe:	add    rax,QWORD PTR [rdi+0x20]
  40e802:	cmp    DWORD PTR [rax+0x18],0x3
  40e806:	jne    40e820 <__ctype_b_loc@plt+0xc550>
  40e808:	jmp    40e82f <__ctype_b_loc@plt+0xc55f>
  40e80a:	mov    rax,QWORD PTR [rdi+0x20]
  40e80e:	cmp    DWORD PTR [rax+0x18],0x3
  40e812:	je     40e82f <__ctype_b_loc@plt+0xc55f>
  40e814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e81e:	xchg   ax,ax
  40e820:	mov    rax,QWORD PTR [rax+0x20]
  40e824:	test   rax,rax
  40e827:	je     40e83f <__ctype_b_loc@plt+0xc56f>
  40e829:	cmp    DWORD PTR [rax+0x18],0x3
  40e82d:	jne    40e820 <__ctype_b_loc@plt+0xc550>
  40e82f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40e834:	vucomisd xmm1,xmm0
  40e838:	jne    40e820 <__ctype_b_loc@plt+0xc550>
  40e83a:	jp     40e820 <__ctype_b_loc@plt+0xc550>
  40e83c:	mov    r14,rax
  40e83f:	mov    rax,QWORD PTR [r14]
  40e842:	mov    QWORD PTR [r15+0x10],rax
  40e846:	mov    eax,DWORD PTR [r14+0x8]
  40e84a:	mov    DWORD PTR [r15+0x18],eax
  40e84e:	mov    eax,0x1
  40e853:	add    rsp,0x78
  40e857:	pop    rbx
  40e858:	pop    r14
  40e85a:	pop    r15
  40e85c:	pop    rbp
  40e85d:	ret    
  40e85e:	xchg   ax,ax
  40e860:	push   rbp
  40e861:	push   r15
  40e863:	push   r14
  40e865:	push   r13
  40e867:	push   r12
  40e869:	push   rbx
  40e86a:	sub    rsp,0x98
  40e871:	mov    r12,rdi
  40e874:	mov    rdx,QWORD PTR [rdi+0x10]
  40e878:	mov    rax,QWORD PTR [rdi+0x18]
  40e87c:	lea    rsi,[rax+0x10]
  40e880:	lea    rcx,[rip+0x1b94f]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40e887:	cmp    rsi,rdx
  40e88a:	jae    40e8b6 <__ctype_b_loc@plt+0xc5e6>
  40e88c:	lea    rdi,[rip+0x1b285]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40e893:	cmp    rsi,rdi
  40e896:	je     40e8b6 <__ctype_b_loc@plt+0xc5e6>
  40e898:	movsxd rsi,DWORD PTR [rax+0x18]
  40e89c:	cmp    rsi,0xffffffffffffffff
  40e8a0:	je     40e8b6 <__ctype_b_loc@plt+0xc5e6>
  40e8a2:	cmp    esi,0x5
  40e8a5:	je     40e96a <__ctype_b_loc@plt+0xc69a>
  40e8ab:	lea    rax,[rip+0x2102e]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40e8b2:	mov    rcx,QWORD PTR [rax+rsi*8]
  40e8b6:	lea    rsi,[rip+0x1b905]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40e8bd:	lea    rdx,[rip+0x1bd46]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40e8c4:	mov    rdi,r12
  40e8c7:	xor    eax,eax
  40e8c9:	call   410460 <__ctype_b_loc@plt+0xe190>
  40e8ce:	mov    r14,rax
  40e8d1:	mov    rax,QWORD PTR [r12+0x28]
  40e8d6:	sub    rax,QWORD PTR [r12+0x50]
  40e8db:	jbe    40e947 <__ctype_b_loc@plt+0xc677>
  40e8dd:	shr    rax,0x3
  40e8e1:	imul   eax,eax,0xcccccccd
  40e8e7:	mov    DWORD PTR [rsp+0x7c],eax
  40e8eb:	lea    rsi,[rip+0x1b565]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40e8f2:	lea    rdx,[rsp+0x8]
  40e8f7:	mov    rdi,r12
  40e8fa:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40e8ff:	mov    rdi,QWORD PTR [rsp+0x18]
  40e904:	lea    rsi,[rip+0x1b845]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40e90b:	call   402170 <strcmp@plt>
  40e910:	cmp    eax,0x1
  40e913:	mov    edx,0x2
  40e918:	sbb    edx,0x0
  40e91b:	mov    rcx,QWORD PTR [rsp+0x10]
  40e920:	test   rcx,rcx
  40e923:	jne    40e931 <__ctype_b_loc@plt+0xc661>
  40e925:	lea    rcx,[rip+0x1b849]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40e92c:	mov    QWORD PTR [rsp+0x10],rcx
  40e931:	lea    rsi,[rip+0x1b83f]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40e938:	mov    rdi,r12
  40e93b:	mov    r8,r14
  40e93e:	xor    eax,eax
  40e940:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40e945:	jmp    40e960 <__ctype_b_loc@plt+0xc690>
  40e947:	lea    rsi,[rip+0x1b7ec]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40e94e:	mov    rdi,r12
  40e951:	mov    edx,0x2
  40e956:	mov    rcx,r14
  40e959:	xor    eax,eax
  40e95b:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40e960:	mov    rdx,QWORD PTR [r12+0x10]
  40e965:	mov    rax,QWORD PTR [r12+0x18]
  40e96a:	lea    r13,[rip+0x1b1a7]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40e971:	cmp    rax,r13
  40e974:	je     40e9a0 <__ctype_b_loc@plt+0xc6d0>
  40e976:	cmp    rax,rdx
  40e979:	jae    40e9a0 <__ctype_b_loc@plt+0xc6d0>
  40e97b:	cmp    DWORD PTR [rax+0x8],0x6
  40e97f:	jne    40e9a0 <__ctype_b_loc@plt+0xc6d0>
  40e981:	mov    rcx,QWORD PTR [rax]
  40e984:	mov    QWORD PTR [rdx],rcx
  40e987:	mov    eax,DWORD PTR [rax+0x8]
  40e98a:	mov    DWORD PTR [rdx+0x8],eax
  40e98d:	mov    rax,QWORD PTR [r12+0x10]
  40e992:	add    rax,0x10
  40e996:	mov    QWORD PTR [r12+0x10],rax
  40e99b:	jmp    40ec4f <__ctype_b_loc@plt+0xc97f>
  40e9a0:	cmp    rax,rdx
  40e9a3:	cmovae rax,r13
  40e9a7:	mov    ecx,DWORD PTR [rax+0x8]
  40e9aa:	cmp    ecx,0x3
  40e9ad:	je     40ea69 <__ctype_b_loc@plt+0xc799>
  40e9b3:	cmp    ecx,0x4
  40e9b6:	jne    40eac9 <__ctype_b_loc@plt+0xc7f9>
  40e9bc:	mov    r14,QWORD PTR [rax]
  40e9bf:	add    r14,0x18
  40e9c3:	lea    rsi,[rsp+0x8]
  40e9c8:	mov    rdi,r14
  40e9cb:	call   4020b0 <strtod@plt>
  40e9d0:	mov    rbx,QWORD PTR [rsp+0x8]
  40e9d5:	cmp    rbx,r14
  40e9d8:	je     40eac9 <__ctype_b_loc@plt+0xc7f9>
  40e9de:	mov    bpl,BYTE PTR [rbx]
  40e9e1:	mov    eax,ebp
  40e9e3:	or     al,0x20
  40e9e5:	cmp    al,0x78
  40e9e7:	jne    40ea1c <__ctype_b_loc@plt+0xc74c>
  40e9e9:	lea    rsi,[rsp+0x8]
  40e9ee:	mov    rdi,r14
  40e9f1:	mov    edx,0x10
  40e9f6:	call   402250 <strtoul@plt>
  40e9fb:	vmovq  xmm0,rax
  40ea00:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1b268]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  40ea08:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1b270]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  40ea10:	vhaddpd xmm0,xmm0,xmm0
  40ea14:	mov    rbx,QWORD PTR [rsp+0x8]
  40ea19:	mov    bpl,BYTE PTR [rbx]
  40ea1c:	test   bpl,bpl
  40ea1f:	je     40ea61 <__ctype_b_loc@plt+0xc791>
  40ea21:	vmovapd XMMWORD PTR [rsp+0x80],xmm0
  40ea2a:	call   4022d0 <__ctype_b_loc@plt>
  40ea2f:	mov    rax,QWORD PTR [rax]
  40ea32:	movzx  ecx,bpl
  40ea36:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ea3b:	je     40eac9 <__ctype_b_loc@plt+0xc7f9>
  40ea41:	inc    rbx
  40ea44:	vmovapd xmm0,XMMWORD PTR [rsp+0x80]
  40ea4d:	nop    DWORD PTR [rax]
  40ea50:	movzx  ecx,BYTE PTR [rbx]
  40ea53:	inc    rbx
  40ea56:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ea5b:	jne    40ea50 <__ctype_b_loc@plt+0xc780>
  40ea5d:	test   cl,cl
  40ea5f:	jne    40eac9 <__ctype_b_loc@plt+0xc7f9>
  40ea61:	mov    rax,rsp
  40ea64:	vmovsd QWORD PTR [rsp],xmm0
  40ea69:	vcvttsd2si r14,QWORD PTR [rax]
  40ea6e:	test   r14,r14
  40ea71:	je     40eac9 <__ctype_b_loc@plt+0xc7f9>
  40ea73:	test   r14d,r14d
  40ea76:	js     40ebb6 <__ctype_b_loc@plt+0xc8e6>
  40ea7c:	mov    rax,QWORD PTR [r12+0x28]
  40ea81:	test   r14d,r14d
  40ea84:	je     40ebe0 <__ctype_b_loc@plt+0xc910>
  40ea8a:	mov    rdx,QWORD PTR [r12+0x50]
  40ea8f:	mov    ecx,r14d
  40ea92:	cmp    rax,rdx
  40ea95:	ja     40eab5 <__ctype_b_loc@plt+0xc7e5>
  40ea97:	jmp    40ebfa <__ctype_b_loc@plt+0xc92a>
  40ea9c:	nop    DWORD PTR [rax+0x0]
  40eaa0:	add    rax,0xffffffffffffffd8
  40eaa4:	test   ecx,ecx
  40eaa6:	jle    40ebd2 <__ctype_b_loc@plt+0xc902>
  40eaac:	cmp    rax,rdx
  40eaaf:	jbe    40ebfa <__ctype_b_loc@plt+0xc92a>
  40eab5:	dec    ecx
  40eab7:	mov    rsi,QWORD PTR [rax+0x8]
  40eabb:	mov    rsi,QWORD PTR [rsi]
  40eabe:	cmp    BYTE PTR [rsi+0xa],0x0
  40eac2:	jne    40eaa0 <__ctype_b_loc@plt+0xc7d0>
  40eac4:	sub    ecx,DWORD PTR [rax+0x24]
  40eac7:	jmp    40eaa0 <__ctype_b_loc@plt+0xc7d0>
  40eac9:	mov    rax,QWORD PTR [r12+0x18]
  40eace:	cmp    rax,QWORD PTR [r12+0x10]
  40ead3:	cmovae rax,r13
  40ead7:	mov    ecx,DWORD PTR [rax+0x8]
  40eada:	xor    r14d,r14d
  40eadd:	cmp    ecx,0x3
  40eae0:	je     40ebca <__ctype_b_loc@plt+0xc8fa>
  40eae6:	cmp    ecx,0x4
  40eae9:	jne    40eb61 <__ctype_b_loc@plt+0xc891>
  40eaeb:	mov    r15,QWORD PTR [rax]
  40eaee:	add    r15,0x18
  40eaf2:	lea    rsi,[rsp+0x8]
  40eaf7:	mov    rdi,r15
  40eafa:	call   4020b0 <strtod@plt>
  40eaff:	mov    rbx,QWORD PTR [rsp+0x8]
  40eb04:	cmp    rbx,r15
  40eb07:	je     40eb61 <__ctype_b_loc@plt+0xc891>
  40eb09:	mov    bpl,BYTE PTR [rbx]
  40eb0c:	mov    eax,ebp
  40eb0e:	or     al,0x20
  40eb10:	cmp    al,0x78
  40eb12:	jne    40eb2e <__ctype_b_loc@plt+0xc85e>
  40eb14:	lea    rsi,[rsp+0x8]
  40eb19:	mov    rdi,r15
  40eb1c:	mov    edx,0x10
  40eb21:	call   402250 <strtoul@plt>
  40eb26:	mov    rbx,QWORD PTR [rsp+0x8]
  40eb2b:	mov    bpl,BYTE PTR [rbx]
  40eb2e:	test   bpl,bpl
  40eb31:	je     40ebca <__ctype_b_loc@plt+0xc8fa>
  40eb37:	call   4022d0 <__ctype_b_loc@plt>
  40eb3c:	mov    rax,QWORD PTR [rax]
  40eb3f:	movzx  ecx,bpl
  40eb43:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40eb48:	je     40eb61 <__ctype_b_loc@plt+0xc891>
  40eb4a:	inc    rbx
  40eb4d:	nop    DWORD PTR [rax]
  40eb50:	movzx  ecx,BYTE PTR [rbx]
  40eb53:	inc    rbx
  40eb56:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40eb5b:	jne    40eb50 <__ctype_b_loc@plt+0xc880>
  40eb5d:	test   cl,cl
  40eb5f:	je     40ebca <__ctype_b_loc@plt+0xc8fa>
  40eb61:	mov    rax,QWORD PTR [r12+0x18]
  40eb66:	lea    rcx,[rip+0x1b669]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40eb6d:	cmp    rax,r13
  40eb70:	je     40eb8e <__ctype_b_loc@plt+0xc8be>
  40eb72:	cmp    rax,QWORD PTR [r12+0x10]
  40eb77:	jae    40eb8e <__ctype_b_loc@plt+0xc8be>
  40eb79:	movsxd rax,DWORD PTR [rax+0x8]
  40eb7d:	cmp    rax,0xffffffffffffffff
  40eb81:	je     40eb8e <__ctype_b_loc@plt+0xc8be>
  40eb83:	lea    rcx,[rip+0x20d56]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40eb8a:	mov    rcx,QWORD PTR [rcx+rax*8]
  40eb8e:	lea    rsi,[rip+0x1b62d]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40eb95:	lea    rdx,[rip+0x1b305]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  40eb9c:	xor    r14d,r14d
  40eb9f:	mov    rdi,r12
  40eba2:	xor    eax,eax
  40eba4:	call   410460 <__ctype_b_loc@plt+0xe190>
  40eba9:	mov    rdi,r12
  40ebac:	mov    esi,0x1
  40ebb1:	mov    rdx,rax
  40ebb4:	jmp    40ebc5 <__ctype_b_loc@plt+0xc8f5>
  40ebb6:	lea    rdx,[rip+0x1b9b2]        # 42a56f <__ctype_b_loc@plt+0x2829f>
  40ebbd:	mov    rdi,r12
  40ebc0:	mov    esi,0x1
  40ebc5:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40ebca:	mov    rax,QWORD PTR [r12+0x28]
  40ebcf:	mov    ecx,r14d
  40ebd2:	test   ecx,ecx
  40ebd4:	je     40ebe3 <__ctype_b_loc@plt+0xc913>
  40ebd6:	mov    DWORD PTR [rsp+0x7c],0x0
  40ebde:	jmp    40ec0e <__ctype_b_loc@plt+0xc93e>
  40ebe0:	xor    r14d,r14d
  40ebe3:	sub    rax,QWORD PTR [r12+0x50]
  40ebe8:	jbe    40ebfa <__ctype_b_loc@plt+0xc92a>
  40ebea:	shr    rax,0x3
  40ebee:	imul   eax,eax,0xcccccccd
  40ebf4:	mov    DWORD PTR [rsp+0x7c],eax
  40ebf8:	jmp    40ec0e <__ctype_b_loc@plt+0xc93e>
  40ebfa:	lea    rdx,[rip+0x1b989]        # 42a58a <__ctype_b_loc@plt+0x282ba>
  40ec01:	mov    rdi,r12
  40ec04:	mov    esi,0x1
  40ec09:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40ec0e:	lea    rsi,[rip+0x1be35]        # 42aa4a <__ctype_b_loc@plt+0x2877a>
  40ec15:	lea    rdx,[rsp+0x8]
  40ec1a:	mov    rdi,r12
  40ec1d:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40ec22:	mov    rax,QWORD PTR [r12+0x10]
  40ec27:	lea    rcx,[rax-0x10]
  40ec2b:	cmp    rcx,r13
  40ec2e:	je     40ec4f <__ctype_b_loc@plt+0xc97f>
  40ec30:	cmp    DWORD PTR [rax-0x8],0x0
  40ec34:	jne    40ec4f <__ctype_b_loc@plt+0xc97f>
  40ec36:	lea    rsi,[rip+0x1b95b]        # 42a598 <__ctype_b_loc@plt+0x282c8>
  40ec3d:	mov    rdi,r12
  40ec40:	mov    edx,r14d
  40ec43:	xor    eax,eax
  40ec45:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40ec4a:	mov    rax,QWORD PTR [r12+0x10]
  40ec4f:	mov    rcx,QWORD PTR [r12+0x18]
  40ec54:	add    rcx,0x10
  40ec58:	cmp    rcx,rax
  40ec5b:	cmovae rcx,r13
  40ec5f:	mov    rdx,QWORD PTR [rcx]
  40ec62:	mov    QWORD PTR [rax],rdx
  40ec65:	mov    ecx,DWORD PTR [rcx+0x8]
  40ec68:	mov    DWORD PTR [rax+0x8],ecx
  40ec6b:	mov    rax,QWORD PTR [r12+0x10]
  40ec70:	mov    rcx,QWORD PTR [r12+0x18]
  40ec75:	add    rax,0x10
  40ec79:	mov    QWORD PTR [r12+0x10],rax
  40ec7e:	cmp    rcx,rax
  40ec81:	cmovb  r13,rcx
  40ec85:	mov    eax,DWORD PTR [r13+0x8]
  40ec89:	cmp    eax,0x3
  40ec8c:	je     40ed25 <__ctype_b_loc@plt+0xca55>
  40ec92:	cmp    eax,0x4
  40ec95:	jne    40edb9 <__ctype_b_loc@plt+0xcae9>
  40ec9b:	mov    r14,QWORD PTR [r13+0x0]
  40ec9f:	add    r14,0x18
  40eca3:	lea    rsi,[rsp+0x8]
  40eca8:	mov    rdi,r14
  40ecab:	call   4020b0 <strtod@plt>
  40ecb0:	mov    rbx,QWORD PTR [rsp+0x8]
  40ecb5:	cmp    rbx,r14
  40ecb8:	je     40edb9 <__ctype_b_loc@plt+0xcae9>
  40ecbe:	mov    bpl,BYTE PTR [rbx]
  40ecc1:	mov    eax,ebp
  40ecc3:	or     al,0x20
  40ecc5:	cmp    al,0x78
  40ecc7:	jne    40ece3 <__ctype_b_loc@plt+0xca13>
  40ecc9:	lea    rsi,[rsp+0x8]
  40ecce:	mov    rdi,r14
  40ecd1:	mov    edx,0x10
  40ecd6:	call   402250 <strtoul@plt>
  40ecdb:	mov    rbx,QWORD PTR [rsp+0x8]
  40ece0:	mov    bpl,BYTE PTR [rbx]
  40ece3:	test   bpl,bpl
  40ece6:	je     40ed25 <__ctype_b_loc@plt+0xca55>
  40ece8:	call   4022d0 <__ctype_b_loc@plt>
  40eced:	mov    rax,QWORD PTR [rax]
  40ecf0:	movzx  ecx,bpl
  40ecf4:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ecf9:	je     40edb9 <__ctype_b_loc@plt+0xcae9>
  40ecff:	inc    rbx
  40ed02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed0c:	nop    DWORD PTR [rax+0x0]
  40ed10:	movzx  ecx,BYTE PTR [rbx]
  40ed13:	inc    rbx
  40ed16:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ed1b:	jne    40ed10 <__ctype_b_loc@plt+0xca40>
  40ed1d:	test   cl,cl
  40ed1f:	jne    40edb9 <__ctype_b_loc@plt+0xcae9>
  40ed25:	mov    rdi,r12
  40ed28:	mov    esi,0x1
  40ed2d:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  40ed32:	vxorps xmm1,xmm1,xmm1
  40ed36:	vucomisd xmm0,xmm1
  40ed3a:	jne    40edb9 <__ctype_b_loc@plt+0xcae9>
  40ed3c:	jp     40edb9 <__ctype_b_loc@plt+0xcae9>
  40ed3e:	mov    rax,QWORD PTR [r12+0x10]
  40ed43:	mov    QWORD PTR [rax],r12
  40ed46:	mov    DWORD PTR [rax+0x8],0x8
  40ed4d:	mov    rax,QWORD PTR [r12+0x10]
  40ed52:	lea    rcx,[rax+0x10]
  40ed56:	mov    QWORD PTR [r12+0x10],rcx
  40ed5b:	lea    rcx,[rax+0x20]
  40ed5f:	nop
  40ed60:	mov    rdx,QWORD PTR [rcx-0x20]
  40ed64:	mov    QWORD PTR [rcx-0x10],rdx
  40ed68:	mov    edx,DWORD PTR [rcx-0x18]
  40ed6b:	mov    DWORD PTR [rcx-0x8],edx
  40ed6e:	add    rcx,0xfffffffffffffff0
  40ed72:	cmp    rcx,rax
  40ed75:	ja     40ed60 <__ctype_b_loc@plt+0xca90>
  40ed77:	mov    rcx,QWORD PTR [r12+0x10]
  40ed7c:	mov    rdx,QWORD PTR [rcx]
  40ed7f:	mov    QWORD PTR [rax-0x10],rdx
  40ed83:	mov    ecx,DWORD PTR [rcx+0x8]
  40ed86:	mov    DWORD PTR [rax-0x8],ecx
  40ed89:	mov    rax,QWORD PTR [r12+0x10]
  40ed8e:	mov    ecx,DWORD PTR [rax-0x18]
  40ed91:	cmp    ecx,0x8
  40ed94:	je     40ee51 <__ctype_b_loc@plt+0xcb81>
  40ed9a:	cmp    ecx,0x7
  40ed9d:	je     40eda8 <__ctype_b_loc@plt+0xcad8>
  40ed9f:	cmp    ecx,0x6
  40eda2:	jne    40ee94 <__ctype_b_loc@plt+0xcbc4>
  40eda8:	mov    rcx,QWORD PTR [rax-0x20]
  40edac:	mov    rdx,QWORD PTR [rax-0x10]
  40edb0:	mov    QWORD PTR [rcx+0x18],rdx
  40edb4:	jmp    40ee67 <__ctype_b_loc@plt+0xcb97>
  40edb9:	mov    rax,QWORD PTR [r12+0x10]
  40edbe:	mov    ecx,DWORD PTR [rax-0x18]
  40edc1:	cmp    ecx,0x8
  40edc4:	je     40eddc <__ctype_b_loc@plt+0xcb0c>
  40edc6:	cmp    ecx,0x7
  40edc9:	je     40edf4 <__ctype_b_loc@plt+0xcb24>
  40edcb:	cmp    ecx,0x6
  40edce:	jne    40ee35 <__ctype_b_loc@plt+0xcb65>
  40edd0:	mov    rcx,QWORD PTR [rax-0x20]
  40edd4:	cmp    BYTE PTR [rcx+0xa],0x0
  40edd8:	jne    40ee3e <__ctype_b_loc@plt+0xcb6e>
  40edda:	jmp    40edf8 <__ctype_b_loc@plt+0xcb28>
  40eddc:	mov    rcx,QWORD PTR [rax-0x20]
  40ede0:	mov    rdx,QWORD PTR [rax-0x10]
  40ede4:	mov    QWORD PTR [rcx+0x78],rdx
  40ede8:	mov    DWORD PTR [rcx+0x80],0x5
  40edf2:	jmp    40ee00 <__ctype_b_loc@plt+0xcb30>
  40edf4:	mov    rcx,QWORD PTR [rax-0x20]
  40edf8:	mov    rdx,QWORD PTR [rax-0x10]
  40edfc:	mov    QWORD PTR [rcx+0x18],rdx
  40ee00:	mov    rcx,QWORD PTR [r12+0x10]
  40ee05:	mov    rsi,QWORD PTR [rcx-0x10]
  40ee09:	test   BYTE PTR [rsi+0x9],0x3
  40ee0d:	je     40eeac <__ctype_b_loc@plt+0xcbdc>
  40ee13:	mov    rax,QWORD PTR [rax-0x20]
  40ee17:	mov    dl,BYTE PTR [rax+0x9]
  40ee1a:	test   dl,0x4
  40ee1d:	je     40eeac <__ctype_b_loc@plt+0xcbdc>
  40ee23:	mov    rdi,QWORD PTR [r12+0x20]
  40ee28:	cmp    BYTE PTR [rdi+0x21],0x1
  40ee2c:	jne    40ee99 <__ctype_b_loc@plt+0xcbc9>
  40ee2e:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40ee33:	jmp    40eea7 <__ctype_b_loc@plt+0xcbd7>
  40ee35:	add    rax,0xfffffffffffffff0
  40ee39:	mov    QWORD PTR [r12+0x10],rax
  40ee3e:	lea    rsi,[rip+0x1b6f6]        # 42a53b <__ctype_b_loc@plt+0x2826b>
  40ee45:	mov    rdi,r12
  40ee48:	xor    eax,eax
  40ee4a:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40ee4f:	jmp    40eeb5 <__ctype_b_loc@plt+0xcbe5>
  40ee51:	mov    rcx,QWORD PTR [rax-0x20]
  40ee55:	mov    rdx,QWORD PTR [rax-0x10]
  40ee59:	mov    QWORD PTR [rcx+0x78],rdx
  40ee5d:	mov    DWORD PTR [rcx+0x80],0x5
  40ee67:	mov    rcx,QWORD PTR [r12+0x10]
  40ee6c:	mov    rsi,QWORD PTR [rcx-0x10]
  40ee70:	test   BYTE PTR [rsi+0x9],0x3
  40ee74:	je     40eecf <__ctype_b_loc@plt+0xcbff>
  40ee76:	mov    rax,QWORD PTR [rax-0x20]
  40ee7a:	mov    dl,BYTE PTR [rax+0x9]
  40ee7d:	test   dl,0x4
  40ee80:	je     40eecf <__ctype_b_loc@plt+0xcbff>
  40ee82:	mov    rdi,QWORD PTR [r12+0x20]
  40ee87:	cmp    BYTE PTR [rdi+0x21],0x1
  40ee8b:	jne    40eebc <__ctype_b_loc@plt+0xcbec>
  40ee8d:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  40ee92:	jmp    40eeca <__ctype_b_loc@plt+0xcbfa>
  40ee94:	mov    rcx,rax
  40ee97:	jmp    40eecf <__ctype_b_loc@plt+0xcbff>
  40ee99:	and    dl,0xf8
  40ee9c:	mov    cl,BYTE PTR [rdi+0x20]
  40ee9f:	and    cl,0x3
  40eea2:	or     cl,dl
  40eea4:	mov    BYTE PTR [rax+0x9],cl
  40eea7:	mov    rcx,QWORD PTR [r12+0x10]
  40eeac:	add    rcx,0xfffffffffffffff0
  40eeb0:	mov    QWORD PTR [r12+0x10],rcx
  40eeb5:	mov    eax,0x1
  40eeba:	jmp    40eeda <__ctype_b_loc@plt+0xcc0a>
  40eebc:	and    dl,0xf8
  40eebf:	mov    cl,BYTE PTR [rdi+0x20]
  40eec2:	and    cl,0x3
  40eec5:	or     cl,dl
  40eec7:	mov    BYTE PTR [rax+0x9],cl
  40eeca:	mov    rcx,QWORD PTR [r12+0x10]
  40eecf:	add    rcx,0xfffffffffffffff0
  40eed3:	mov    QWORD PTR [r12+0x10],rcx
  40eed8:	xor    eax,eax
  40eeda:	add    rsp,0x98
  40eee1:	pop    rbx
  40eee2:	pop    r12
  40eee4:	pop    r13
  40eee6:	pop    r14
  40eee8:	pop    r15
  40eeea:	pop    rbp
  40eeeb:	ret    
  40eeec:	nop    DWORD PTR [rax+0x0]
  40eef0:	push   rbp
  40eef1:	push   r15
  40eef3:	push   r14
  40eef5:	push   rbx
  40eef6:	sub    rsp,0x78
  40eefa:	mov    rbx,rdi
  40eefd:	mov    rdx,QWORD PTR [rdi+0x10]
  40ef01:	mov    rax,QWORD PTR [rdi+0x18]
  40ef05:	lea    rcx,[rax+0x10]
  40ef09:	mov    ebp,0xffffffff
  40ef0e:	cmp    rcx,rdx
  40ef11:	jae    40ef22 <__ctype_b_loc@plt+0xcc52>
  40ef13:	lea    rsi,[rip+0x1abfe]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40ef1a:	cmp    rcx,rsi
  40ef1d:	je     40ef22 <__ctype_b_loc@plt+0xcc52>
  40ef1f:	mov    ebp,DWORD PTR [rax+0x18]
  40ef22:	lea    r15,[rip+0x1abef]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40ef29:	lea    rcx,[rip+0x1b2a6]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40ef30:	cmp    rax,r15
  40ef33:	je     40ef54 <__ctype_b_loc@plt+0xcc84>
  40ef35:	cmp    rax,rdx
  40ef38:	jae    40ef54 <__ctype_b_loc@plt+0xcc84>
  40ef3a:	movsxd rax,DWORD PTR [rax+0x8]
  40ef3e:	cmp    rax,0xffffffffffffffff
  40ef42:	je     40ef54 <__ctype_b_loc@plt+0xcc84>
  40ef44:	cmp    eax,0x5
  40ef47:	je     40ef7c <__ctype_b_loc@plt+0xccac>
  40ef49:	lea    rcx,[rip+0x20990]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40ef50:	mov    rcx,QWORD PTR [rcx+rax*8]
  40ef54:	lea    rsi,[rip+0x1b267]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40ef5b:	lea    rdx,[rip+0x1b6a8]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40ef62:	mov    rdi,rbx
  40ef65:	xor    eax,eax
  40ef67:	call   410460 <__ctype_b_loc@plt+0xe190>
  40ef6c:	mov    rdi,rbx
  40ef6f:	mov    esi,0x1
  40ef74:	mov    rdx,rax
  40ef77:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40ef7c:	test   ebp,ebp
  40ef7e:	je     40f020 <__ctype_b_loc@plt+0xcd50>
  40ef84:	cmp    ebp,0x5
  40ef87:	je     40f020 <__ctype_b_loc@plt+0xcd50>
  40ef8d:	mov    rax,QWORD PTR [rbx+0x28]
  40ef91:	sub    rax,QWORD PTR [rbx+0x50]
  40ef95:	jbe    40f003 <__ctype_b_loc@plt+0xcd33>
  40ef97:	shr    rax,0x3
  40ef9b:	imul   eax,eax,0xcccccccd
  40efa1:	mov    DWORD PTR [rsp+0x74],eax
  40efa5:	lea    rsi,[rip+0x1aeab]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40efac:	mov    rdx,rsp
  40efaf:	mov    rdi,rbx
  40efb2:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40efb7:	mov    rdi,QWORD PTR [rsp+0x10]
  40efbc:	lea    rsi,[rip+0x1b18d]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40efc3:	call   402170 <strcmp@plt>
  40efc8:	cmp    eax,0x1
  40efcb:	mov    edx,0x2
  40efd0:	sbb    edx,0x0
  40efd3:	mov    rcx,QWORD PTR [rsp+0x8]
  40efd8:	test   rcx,rcx
  40efdb:	jne    40efe9 <__ctype_b_loc@plt+0xcd19>
  40efdd:	lea    rcx,[rip+0x1b191]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40efe4:	mov    QWORD PTR [rsp+0x8],rcx
  40efe9:	lea    rsi,[rip+0x1b187]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40eff0:	lea    r8,[rip+0x1b5d3]        # 42a5ca <__ctype_b_loc@plt+0x282fa>
  40eff7:	mov    rdi,rbx
  40effa:	xor    eax,eax
  40effc:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40f001:	jmp    40f020 <__ctype_b_loc@plt+0xcd50>
  40f003:	lea    rsi,[rip+0x1b130]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40f00a:	lea    rcx,[rip+0x1b5b9]        # 42a5ca <__ctype_b_loc@plt+0x282fa>
  40f011:	mov    rdi,rbx
  40f014:	mov    edx,0x2
  40f019:	xor    eax,eax
  40f01b:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40f020:	mov    rax,QWORD PTR [rbx+0x10]
  40f024:	mov    rcx,QWORD PTR [rbx+0x18]
  40f028:	cmp    rcx,rax
  40f02b:	cmovae rcx,r15
  40f02f:	movsxd rdx,DWORD PTR [rcx+0x8]
  40f033:	cmp    rdx,0x7
  40f037:	je     40f03e <__ctype_b_loc@plt+0xcd6e>
  40f039:	cmp    edx,0x5
  40f03c:	jne    40f047 <__ctype_b_loc@plt+0xcd77>
  40f03e:	mov    rcx,QWORD PTR [rcx]
  40f041:	add    rcx,0x10
  40f045:	jmp    40f056 <__ctype_b_loc@plt+0xcd86>
  40f047:	mov    rcx,QWORD PTR [rbx+0x20]
  40f04b:	lea    rcx,[rcx+rdx*8]
  40f04f:	add    rcx,0xe0
  40f056:	mov    rcx,QWORD PTR [rcx]
  40f059:	test   rcx,rcx
  40f05c:	je     40f2a1 <__ctype_b_loc@plt+0xcfd1>
  40f062:	mov    QWORD PTR [rax],rcx
  40f065:	mov    DWORD PTR [rax+0x8],0x5
  40f06c:	mov    rbp,QWORD PTR [rbx+0x10]
  40f070:	mov    rax,QWORD PTR [rbx+0x20]
  40f074:	add    rbp,0x10
  40f078:	mov    QWORD PTR [rbx+0x10],rbp
  40f07c:	mov    rcx,QWORD PTR [rax+0x78]
  40f080:	cmp    rcx,QWORD PTR [rax+0x70]
  40f084:	jb     40f092 <__ctype_b_loc@plt+0xcdc2>
  40f086:	mov    rdi,rbx
  40f089:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40f08e:	mov    rbp,QWORD PTR [rbx+0x10]
  40f092:	lea    rsi,[rip+0x1b547]        # 42a5e0 <__ctype_b_loc@plt+0x28310>
  40f099:	mov    edx,0xb
  40f09e:	mov    rdi,rbx
  40f0a1:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40f0a6:	mov    QWORD PTR [rbp+0x0],rax
  40f0aa:	mov    DWORD PTR [rbp+0x8],0x4
  40f0b1:	mov    r14,QWORD PTR [rbx+0x10]
  40f0b5:	lea    rax,[r14+0x10]
  40f0b9:	mov    QWORD PTR [rbx+0x10],rax
  40f0bd:	mov    ebp,DWORD PTR [r14+0x8]
  40f0c1:	mov    rax,r15
  40f0c4:	test   ebp,ebp
  40f0c6:	je     40f231 <__ctype_b_loc@plt+0xcf61>
  40f0cc:	mov    rdi,QWORD PTR [r14-0x10]
  40f0d0:	cmp    ebp,0x3
  40f0d3:	je     40f11e <__ctype_b_loc@plt+0xce4e>
  40f0d5:	cmp    ebp,0x4
  40f0d8:	jne    40f14b <__ctype_b_loc@plt+0xce7b>
  40f0da:	mov    rcx,QWORD PTR [r14]
  40f0dd:	mov    al,BYTE PTR [rdi+0xb]
  40f0e0:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  40f0e6:	cdqe   
  40f0e8:	lea    rax,[rax+rax*4]
  40f0ec:	shl    rax,0x3
  40f0f0:	add    rax,QWORD PTR [rdi+0x20]
  40f0f4:	cmp    DWORD PTR [rax+0x18],0x4
  40f0f8:	je     40f113 <__ctype_b_loc@plt+0xce43>
  40f0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40f100:	mov    rax,QWORD PTR [rax+0x20]
  40f104:	test   rax,rax
  40f107:	je     40f22e <__ctype_b_loc@plt+0xcf5e>
  40f10d:	cmp    DWORD PTR [rax+0x18],0x4
  40f111:	jne    40f100 <__ctype_b_loc@plt+0xce30>
  40f113:	cmp    QWORD PTR [rax+0x10],rcx
  40f117:	jne    40f100 <__ctype_b_loc@plt+0xce30>
  40f119:	jmp    40f231 <__ctype_b_loc@plt+0xcf61>
  40f11e:	vmovsd xmm1,QWORD PTR [r14]
  40f123:	vcvttsd2si eax,xmm1
  40f127:	vcvtsi2sd xmm0,xmm0,eax
  40f12b:	vucomisd xmm1,xmm0
  40f12f:	jne    40f14b <__ctype_b_loc@plt+0xce7b>
  40f131:	jp     40f14b <__ctype_b_loc@plt+0xce7b>
  40f133:	lea    ecx,[rax-0x1]
  40f136:	cmp    ecx,DWORD PTR [rdi+0x38]
  40f139:	jae    40f1ba <__ctype_b_loc@plt+0xceea>
  40f13b:	movsxd rax,ecx
  40f13e:	shl    rax,0x4
  40f142:	add    rax,QWORD PTR [rdi+0x18]
  40f146:	jmp    40f231 <__ctype_b_loc@plt+0xcf61>
  40f14b:	mov    rsi,r14
  40f14e:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  40f153:	mov    ecx,ebp
  40f155:	lea    rdx,[rip+0x1a130]        # 42928c <__ctype_b_loc@plt+0x26fbc>
  40f15c:	cmp    DWORD PTR [rax+0x18],ebp
  40f15f:	jne    40f17d <__ctype_b_loc@plt+0xcead>
  40f161:	jmp    40f18f <__ctype_b_loc@plt+0xcebf>
  40f163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f16d:	nop    DWORD PTR [rax]
  40f170:	mov    rsi,QWORD PTR [rax+0x10]
  40f174:	cmp    rsi,QWORD PTR [r14]
  40f177:	je     40f231 <__ctype_b_loc@plt+0xcf61>
  40f17d:	mov    rax,QWORD PTR [rax+0x20]
  40f181:	test   rax,rax
  40f184:	je     40f22e <__ctype_b_loc@plt+0xcf5e>
  40f18a:	cmp    DWORD PTR [rax+0x18],ebp
  40f18d:	jne    40f17d <__ctype_b_loc@plt+0xcead>
  40f18f:	cmp    ebp,0x3
  40f192:	ja     40f170 <__ctype_b_loc@plt+0xcea0>
  40f194:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40f198:	add    rsi,rdx
  40f19b:	jmp    rsi
  40f19d:	mov    esi,DWORD PTR [rax+0x10]
  40f1a0:	cmp    esi,DWORD PTR [r14]
  40f1a3:	jne    40f17d <__ctype_b_loc@plt+0xcead>
  40f1a5:	jmp    40f231 <__ctype_b_loc@plt+0xcf61>
  40f1aa:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40f1af:	vucomisd xmm0,QWORD PTR [r14]
  40f1b4:	jne    40f17d <__ctype_b_loc@plt+0xcead>
  40f1b6:	jp     40f17d <__ctype_b_loc@plt+0xcead>
  40f1b8:	jmp    40f231 <__ctype_b_loc@plt+0xcf61>
  40f1ba:	test   eax,eax
  40f1bc:	je     40f1fc <__ctype_b_loc@plt+0xcf2c>
  40f1be:	vmovq  rcx,xmm0
  40f1c3:	mov    rax,rcx
  40f1c6:	shr    rax,0x20
  40f1ca:	add    eax,ecx
  40f1cc:	mov    cl,BYTE PTR [rdi+0xb]
  40f1cf:	mov    rdx,0xffffffffffffffff
  40f1d6:	shlx   rcx,rdx,rcx
  40f1db:	or     rcx,0x1
  40f1df:	xor    rcx,0xfffffffffffffffe
  40f1e3:	xor    edx,edx
  40f1e5:	div    rcx
  40f1e8:	lea    rax,[rdx+rdx*4]
  40f1ec:	shl    rax,0x3
  40f1f0:	add    rax,QWORD PTR [rdi+0x20]
  40f1f4:	cmp    DWORD PTR [rax+0x18],0x3
  40f1f8:	jne    40f210 <__ctype_b_loc@plt+0xcf40>
  40f1fa:	jmp    40f21f <__ctype_b_loc@plt+0xcf4f>
  40f1fc:	mov    rax,QWORD PTR [rdi+0x20]
  40f200:	cmp    DWORD PTR [rax+0x18],0x3
  40f204:	je     40f21f <__ctype_b_loc@plt+0xcf4f>
  40f206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f210:	mov    rax,QWORD PTR [rax+0x20]
  40f214:	test   rax,rax
  40f217:	je     40f22e <__ctype_b_loc@plt+0xcf5e>
  40f219:	cmp    DWORD PTR [rax+0x18],0x3
  40f21d:	jne    40f210 <__ctype_b_loc@plt+0xcf40>
  40f21f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40f224:	vucomisd xmm1,xmm0
  40f228:	jne    40f210 <__ctype_b_loc@plt+0xcf40>
  40f22a:	jp     40f210 <__ctype_b_loc@plt+0xcf40>
  40f22c:	jmp    40f231 <__ctype_b_loc@plt+0xcf61>
  40f22e:	mov    rax,r15
  40f231:	mov    rcx,QWORD PTR [rax]
  40f234:	mov    QWORD PTR [r14],rcx
  40f237:	mov    eax,DWORD PTR [rax+0x8]
  40f23a:	mov    DWORD PTR [r14+0x8],eax
  40f23e:	mov    rax,QWORD PTR [rbx+0x10]
  40f242:	lea    rcx,[rax-0x10]
  40f246:	cmp    rcx,r15
  40f249:	je     40f260 <__ctype_b_loc@plt+0xcf90>
  40f24b:	cmp    DWORD PTR [rax-0x8],0x0
  40f24f:	je     40f299 <__ctype_b_loc@plt+0xcfc9>
  40f251:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f260:	mov    rax,QWORD PTR [rcx]
  40f263:	mov    QWORD PTR [rcx-0x10],rax
  40f267:	mov    eax,DWORD PTR [rcx+0x8]
  40f26a:	mov    DWORD PTR [rcx-0x8],eax
  40f26d:	mov    rax,QWORD PTR [rbx+0x10]
  40f271:	add    rcx,0x10
  40f275:	cmp    rcx,rax
  40f278:	jb     40f260 <__ctype_b_loc@plt+0xcf90>
  40f27a:	add    rax,0xfffffffffffffff0
  40f27e:	mov    QWORD PTR [rbx+0x10],rax
  40f282:	lea    rsi,[rip+0x1b363]        # 42a5ec <__ctype_b_loc@plt+0x2831c>
  40f289:	mov    rdi,rbx
  40f28c:	xor    eax,eax
  40f28e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40f293:	mov    rax,QWORD PTR [rbx+0x10]
  40f297:	jmp    40f2a1 <__ctype_b_loc@plt+0xcfd1>
  40f299:	add    rax,0xffffffffffffffe0
  40f29d:	mov    QWORD PTR [rbx+0x10],rax
  40f2a1:	mov    rdx,QWORD PTR [rbx+0x18]
  40f2a5:	lea    rcx,[rdx+0x20]
  40f2a9:	cmp    rax,rcx
  40f2ac:	jae    40f335 <__ctype_b_loc@plt+0xd065>
  40f2b2:	sub    rdx,rax
  40f2b5:	add    rdx,0x1f
  40f2b9:	mov    esi,edx
  40f2bb:	shr    esi,0x4
  40f2be:	inc    esi
  40f2c0:	and    rsi,0x7
  40f2c4:	je     40f2e0 <__ctype_b_loc@plt+0xd010>
  40f2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f2d0:	mov    DWORD PTR [rax+0x8],0x0
  40f2d7:	add    rax,0x10
  40f2db:	dec    rsi
  40f2de:	jne    40f2d0 <__ctype_b_loc@plt+0xd000>
  40f2e0:	cmp    rdx,0x70
  40f2e4:	jb     40f331 <__ctype_b_loc@plt+0xd061>
  40f2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f2f0:	mov    DWORD PTR [rax+0x8],0x0
  40f2f7:	mov    DWORD PTR [rax+0x18],0x0
  40f2fe:	mov    DWORD PTR [rax+0x28],0x0
  40f305:	mov    DWORD PTR [rax+0x38],0x0
  40f30c:	mov    DWORD PTR [rax+0x48],0x0
  40f313:	mov    DWORD PTR [rax+0x58],0x0
  40f31a:	mov    DWORD PTR [rax+0x68],0x0
  40f321:	mov    DWORD PTR [rax+0x78],0x0
  40f328:	sub    rax,0xffffffffffffff80
  40f32c:	cmp    rax,rcx
  40f32f:	jb     40f2f0 <__ctype_b_loc@plt+0xd020>
  40f331:	mov    QWORD PTR [rbx+0x10],rax
  40f335:	mov    QWORD PTR [rbx+0x10],rcx
  40f339:	mov    rdi,rbx
  40f33c:	mov    esi,0x1
  40f341:	call   40d420 <__ctype_b_loc@plt+0xb150>
  40f346:	mov    eax,0x1
  40f34b:	add    rsp,0x78
  40f34f:	pop    rbx
  40f350:	pop    r14
  40f352:	pop    r15
  40f354:	pop    rbp
  40f355:	ret    
  40f356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f360:	push   rbp
  40f361:	push   r15
  40f363:	push   r14
  40f365:	push   r13
  40f367:	push   r12
  40f369:	push   rbx
  40f36a:	sub    rsp,0x88
  40f371:	mov    r13,rdi
  40f374:	mov    edx,0xa
  40f379:	mov    esi,0x2
  40f37e:	call   410640 <__ctype_b_loc@plt+0xe370>
  40f383:	mov    r14,rax
  40f386:	mov    rdx,QWORD PTR [r13+0x10]
  40f38a:	mov    rax,QWORD PTR [r13+0x18]
  40f38e:	cmp    r14d,0xa
  40f392:	jne    40f47f <__ctype_b_loc@plt+0xd1af>
  40f398:	lea    rbx,[rip+0x1a779]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40f39f:	cmp    rax,rbx
  40f3a2:	je     40f3af <__ctype_b_loc@plt+0xd0df>
  40f3a4:	cmp    rax,rdx
  40f3a7:	jae    40f3af <__ctype_b_loc@plt+0xd0df>
  40f3a9:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40f3ad:	jne    40f3cb <__ctype_b_loc@plt+0xd0fb>
  40f3af:	lea    rdx,[rip+0x1ad75]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  40f3b6:	mov    rdi,r13
  40f3b9:	mov    esi,0x1
  40f3be:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40f3c3:	mov    rdx,QWORD PTR [r13+0x10]
  40f3c7:	mov    rax,QWORD PTR [r13+0x18]
  40f3cb:	cmp    rax,rdx
  40f3ce:	cmovb  rbx,rax
  40f3d2:	mov    eax,DWORD PTR [rbx+0x8]
  40f3d5:	cmp    eax,0x3
  40f3d8:	je     40f465 <__ctype_b_loc@plt+0xd195>
  40f3de:	cmp    eax,0x4
  40f3e1:	jne    40f647 <__ctype_b_loc@plt+0xd377>
  40f3e7:	mov    r14,QWORD PTR [rbx]
  40f3ea:	add    r14,0x18
  40f3ee:	lea    rsi,[rsp+0x10]
  40f3f3:	mov    rdi,r14
  40f3f6:	call   4020b0 <strtod@plt>
  40f3fb:	mov    rbx,QWORD PTR [rsp+0x10]
  40f400:	cmp    rbx,r14
  40f403:	je     40f647 <__ctype_b_loc@plt+0xd377>
  40f409:	mov    bpl,BYTE PTR [rbx]
  40f40c:	mov    eax,ebp
  40f40e:	or     al,0x20
  40f410:	cmp    al,0x78
  40f412:	jne    40f42e <__ctype_b_loc@plt+0xd15e>
  40f414:	lea    rsi,[rsp+0x10]
  40f419:	mov    rdi,r14
  40f41c:	mov    edx,0x10
  40f421:	call   402250 <strtoul@plt>
  40f426:	mov    rbx,QWORD PTR [rsp+0x10]
  40f42b:	mov    bpl,BYTE PTR [rbx]
  40f42e:	test   bpl,bpl
  40f431:	je     40f465 <__ctype_b_loc@plt+0xd195>
  40f433:	call   4022d0 <__ctype_b_loc@plt>
  40f438:	mov    rax,QWORD PTR [rax]
  40f43b:	movzx  ecx,bpl
  40f43f:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f444:	je     40f647 <__ctype_b_loc@plt+0xd377>
  40f44a:	inc    rbx
  40f44d:	nop    DWORD PTR [rax]
  40f450:	movzx  ecx,BYTE PTR [rbx]
  40f453:	inc    rbx
  40f456:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f45b:	jne    40f450 <__ctype_b_loc@plt+0xd180>
  40f45d:	test   cl,cl
  40f45f:	jne    40f647 <__ctype_b_loc@plt+0xd377>
  40f465:	mov    rdi,r13
  40f468:	mov    esi,0x1
  40f46d:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  40f472:	mov    rax,QWORD PTR [r13+0x10]
  40f476:	vmovsd QWORD PTR [rax],xmm0
  40f47a:	jmp    40f67d <__ctype_b_loc@plt+0xd3ad>
  40f47f:	cmp    rax,rdx
  40f482:	lea    r12,[rip+0x1a68f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40f489:	mov    rbx,r12
  40f48c:	cmovb  rbx,rax
  40f490:	mov    ecx,DWORD PTR [rbx+0x8]
  40f493:	cmp    ecx,0x4
  40f496:	je     40f4fc <__ctype_b_loc@plt+0xd22c>
  40f498:	cmp    ecx,0x3
  40f49b:	jne    40f505 <__ctype_b_loc@plt+0xd235>
  40f49d:	vmovsd xmm0,QWORD PTR [rbx]
  40f4a1:	lea    rsi,[rip+0x1a979]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  40f4a8:	lea    r15,[rsp+0x10]
  40f4ad:	mov    rdi,r15
  40f4b0:	mov    al,0x1
  40f4b2:	call   402270 <sprintf@plt>
  40f4b7:	mov    rdi,r15
  40f4ba:	call   4020e0 <strlen@plt>
  40f4bf:	mov    rdi,r13
  40f4c2:	mov    rsi,r15
  40f4c5:	mov    rdx,rax
  40f4c8:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40f4cd:	mov    QWORD PTR [rbx],rax
  40f4d0:	mov    DWORD PTR [rbx+0x8],0x4
  40f4d7:	mov    rax,QWORD PTR [r13+0x20]
  40f4db:	mov    rcx,QWORD PTR [rax+0x78]
  40f4df:	cmp    rcx,QWORD PTR [rax+0x70]
  40f4e3:	jb     40f4ed <__ctype_b_loc@plt+0xd21d>
  40f4e5:	mov    rdi,r13
  40f4e8:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40f4ed:	mov    rax,QWORD PTR [r13+0x18]
  40f4f1:	cmp    rax,QWORD PTR [r13+0x10]
  40f4f5:	cmovb  r12,rax
  40f4f9:	mov    rbx,r12
  40f4fc:	mov    r15,QWORD PTR [rbx]
  40f4ff:	add    r15,0x18
  40f503:	jmp    40f556 <__ctype_b_loc@plt+0xd286>
  40f505:	lea    rcx,[rip+0x1acca]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40f50c:	cmp    rax,r12
  40f50f:	je     40f52b <__ctype_b_loc@plt+0xd25b>
  40f511:	cmp    rax,rdx
  40f514:	jae    40f52b <__ctype_b_loc@plt+0xd25b>
  40f516:	movsxd rax,DWORD PTR [rax+0x8]
  40f51a:	cmp    rax,0xffffffffffffffff
  40f51e:	je     40f52b <__ctype_b_loc@plt+0xd25b>
  40f520:	lea    rcx,[rip+0x203b9]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40f527:	mov    rcx,QWORD PTR [rcx+rax*8]
  40f52b:	lea    rsi,[rip+0x1ac90]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40f532:	lea    rdx,[rip+0x1ad30]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  40f539:	xor    r15d,r15d
  40f53c:	mov    rdi,r13
  40f53f:	xor    eax,eax
  40f541:	call   410460 <__ctype_b_loc@plt+0xe190>
  40f546:	mov    rdi,r13
  40f549:	mov    esi,0x1
  40f54e:	mov    rdx,rax
  40f551:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40f556:	lea    eax,[r14-0x2]
  40f55a:	cmp    eax,0x23
  40f55d:	jb     40f5fb <__ctype_b_loc@plt+0xd32b>
  40f563:	mov    rax,QWORD PTR [r13+0x28]
  40f567:	sub    rax,QWORD PTR [r13+0x50]
  40f56b:	jbe    40f5de <__ctype_b_loc@plt+0xd30e>
  40f56d:	shr    rax,0x3
  40f571:	imul   eax,eax,0xcccccccd
  40f577:	mov    DWORD PTR [rsp+0x84],eax
  40f57e:	lea    rsi,[rip+0x1a8d2]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40f585:	lea    rdx,[rsp+0x10]
  40f58a:	mov    rdi,r13
  40f58d:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40f592:	mov    rdi,QWORD PTR [rsp+0x20]
  40f597:	lea    rsi,[rip+0x1abb2]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40f59e:	call   402170 <strcmp@plt>
  40f5a3:	cmp    eax,0x1
  40f5a6:	mov    edx,0x2
  40f5ab:	sbb    edx,0x0
  40f5ae:	mov    rcx,QWORD PTR [rsp+0x18]
  40f5b3:	test   rcx,rcx
  40f5b6:	jne    40f5c4 <__ctype_b_loc@plt+0xd2f4>
  40f5b8:	lea    rcx,[rip+0x1abb6]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40f5bf:	mov    QWORD PTR [rsp+0x18],rcx
  40f5c4:	lea    rsi,[rip+0x1abac]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40f5cb:	lea    r8,[rip+0x1b03e]        # 42a610 <__ctype_b_loc@plt+0x28340>
  40f5d2:	mov    rdi,r13
  40f5d5:	xor    eax,eax
  40f5d7:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40f5dc:	jmp    40f5fb <__ctype_b_loc@plt+0xd32b>
  40f5de:	lea    rsi,[rip+0x1ab55]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40f5e5:	lea    rcx,[rip+0x1b024]        # 42a610 <__ctype_b_loc@plt+0x28340>
  40f5ec:	mov    rdi,r13
  40f5ef:	mov    edx,0x2
  40f5f4:	xor    eax,eax
  40f5f6:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40f5fb:	lea    rsi,[rsp+0x8]
  40f600:	mov    rdi,r15
  40f603:	mov    edx,r14d
  40f606:	call   402250 <strtoul@plt>
  40f60b:	mov    rbx,QWORD PTR [rsp+0x8]
  40f610:	cmp    r15,rbx
  40f613:	je     40f647 <__ctype_b_loc@plt+0xd377>
  40f615:	mov    r14,rax
  40f618:	call   4022d0 <__ctype_b_loc@plt>
  40f61d:	mov    rcx,QWORD PTR [rax]
  40f620:	movzx  eax,BYTE PTR [rbx]
  40f623:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  40f628:	je     40f643 <__ctype_b_loc@plt+0xd373>
  40f62a:	nop    WORD PTR [rax+rax*1+0x0]
  40f630:	movzx  eax,BYTE PTR [rbx+0x1]
  40f634:	inc    rbx
  40f637:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  40f63c:	jne    40f630 <__ctype_b_loc@plt+0xd360>
  40f63e:	mov    QWORD PTR [rsp+0x8],rbx
  40f643:	test   al,al
  40f645:	je     40f65c <__ctype_b_loc@plt+0xd38c>
  40f647:	mov    rax,QWORD PTR [r13+0x10]
  40f64b:	mov    DWORD PTR [rax+0x8],0x0
  40f652:	add    rax,0x10
  40f656:	mov    QWORD PTR [r13+0x10],rax
  40f65a:	jmp    40f689 <__ctype_b_loc@plt+0xd3b9>
  40f65c:	vmovq  xmm0,r14
  40f661:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1a607]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  40f669:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1a60f]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  40f671:	vhaddpd xmm0,xmm0,xmm0
  40f675:	mov    rax,QWORD PTR [r13+0x10]
  40f679:	vmovlpd QWORD PTR [rax],xmm0
  40f67d:	mov    DWORD PTR [rax+0x8],0x3
  40f684:	add    QWORD PTR [r13+0x10],0x10
  40f689:	mov    eax,0x1
  40f68e:	add    rsp,0x88
  40f695:	pop    rbx
  40f696:	pop    r12
  40f698:	pop    r13
  40f69a:	pop    r14
  40f69c:	pop    r15
  40f69e:	pop    rbp
  40f69f:	ret    
  40f6a0:	push   r15
  40f6a2:	push   r14
  40f6a4:	push   r12
  40f6a6:	push   rbx
  40f6a7:	push   rax
  40f6a8:	mov    rbx,rdi
  40f6ab:	mov    rax,QWORD PTR [rdi+0x18]
  40f6af:	lea    r15,[rip+0x1a462]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40f6b6:	cmp    rax,r15
  40f6b9:	je     40f6ca <__ctype_b_loc@plt+0xd3fa>
  40f6bb:	mov    r12,QWORD PTR [rbx+0x10]
  40f6bf:	cmp    rax,r12
  40f6c2:	jae    40f6ca <__ctype_b_loc@plt+0xd3fa>
  40f6c4:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40f6c8:	jne    40f6e6 <__ctype_b_loc@plt+0xd416>
  40f6ca:	lea    rdx,[rip+0x1aa5a]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  40f6d1:	mov    rdi,rbx
  40f6d4:	mov    esi,0x1
  40f6d9:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40f6de:	mov    r12,QWORD PTR [rbx+0x10]
  40f6e2:	mov    rax,QWORD PTR [rbx+0x18]
  40f6e6:	lea    r14,[rip+0x1aae9]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40f6ed:	cmp    rax,r15
  40f6f0:	je     40f70c <__ctype_b_loc@plt+0xd43c>
  40f6f2:	cmp    rax,r12
  40f6f5:	jae    40f70c <__ctype_b_loc@plt+0xd43c>
  40f6f7:	movsxd rax,DWORD PTR [rax+0x8]
  40f6fb:	cmp    rax,0xffffffffffffffff
  40f6ff:	je     40f70c <__ctype_b_loc@plt+0xd43c>
  40f701:	lea    rcx,[rip+0x201d8]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40f708:	mov    r14,QWORD PTR [rcx+rax*8]
  40f70c:	mov    rdi,r14
  40f70f:	call   4020e0 <strlen@plt>
  40f714:	mov    r15,rax
  40f717:	mov    rax,QWORD PTR [rbx+0x20]
  40f71b:	mov    rcx,QWORD PTR [rax+0x78]
  40f71f:	cmp    rcx,QWORD PTR [rax+0x70]
  40f723:	jb     40f731 <__ctype_b_loc@plt+0xd461>
  40f725:	mov    rdi,rbx
  40f728:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40f72d:	mov    r12,QWORD PTR [rbx+0x10]
  40f731:	mov    rdi,rbx
  40f734:	mov    rsi,r14
  40f737:	mov    rdx,r15
  40f73a:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40f73f:	mov    QWORD PTR [r12],rax
  40f743:	mov    DWORD PTR [r12+0x8],0x4
  40f74c:	add    QWORD PTR [rbx+0x10],0x10
  40f751:	mov    eax,0x1
  40f756:	add    rsp,0x8
  40f75a:	pop    rbx
  40f75b:	pop    r12
  40f75d:	pop    r14
  40f75f:	pop    r15
  40f761:	ret    
  40f762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f76c:	nop    DWORD PTR [rax+0x0]
  40f770:	push   rbp
  40f771:	push   r15
  40f773:	push   r14
  40f775:	push   r13
  40f777:	push   r12
  40f779:	push   rbx
  40f77a:	sub    rsp,0x98
  40f781:	mov    rbp,rdi
  40f784:	mov    rax,QWORD PTR [rdi+0x18]
  40f788:	lea    r12,[rip+0x1a389]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40f78f:	lea    rcx,[rip+0x1aa40]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40f796:	cmp    rax,r12
  40f799:	je     40f7bb <__ctype_b_loc@plt+0xd4eb>
  40f79b:	cmp    rax,QWORD PTR [rbp+0x10]
  40f79f:	jae    40f7bb <__ctype_b_loc@plt+0xd4eb>
  40f7a1:	movsxd rax,DWORD PTR [rax+0x8]
  40f7a5:	cmp    rax,0xffffffffffffffff
  40f7a9:	je     40f7bb <__ctype_b_loc@plt+0xd4eb>
  40f7ab:	cmp    eax,0x5
  40f7ae:	je     40f7e3 <__ctype_b_loc@plt+0xd513>
  40f7b0:	lea    rcx,[rip+0x20129]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40f7b7:	mov    rcx,QWORD PTR [rcx+rax*8]
  40f7bb:	lea    rsi,[rip+0x1aa00]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40f7c2:	lea    rdx,[rip+0x1ae41]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  40f7c9:	mov    rdi,rbp
  40f7cc:	xor    eax,eax
  40f7ce:	call   410460 <__ctype_b_loc@plt+0xe190>
  40f7d3:	mov    rdi,rbp
  40f7d6:	mov    esi,0x1
  40f7db:	mov    rdx,rax
  40f7de:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  40f7e3:	mov    edx,0x1
  40f7e8:	mov    rdi,rbp
  40f7eb:	mov    esi,0x2
  40f7f0:	call   410640 <__ctype_b_loc@plt+0xe370>
  40f7f5:	mov    r14,rax
  40f7f8:	mov    rdx,QWORD PTR [rbp+0x10]
  40f7fc:	mov    rcx,QWORD PTR [rbp+0x18]
  40f800:	lea    rax,[rcx+0x20]
  40f804:	cmp    rax,rdx
  40f807:	jae    40fa4d <__ctype_b_loc@plt+0xd77d>
  40f80d:	cmp    rax,r12
  40f810:	je     40fa4d <__ctype_b_loc@plt+0xd77d>
  40f816:	mov    esi,DWORD PTR [rcx+0x28]
  40f819:	test   esi,esi
  40f81b:	jle    40fa4d <__ctype_b_loc@plt+0xd77d>
  40f821:	cmp    esi,0x3
  40f824:	je     40f8dc <__ctype_b_loc@plt+0xd60c>
  40f82a:	cmp    esi,0x4
  40f82d:	jne    40f8ea <__ctype_b_loc@plt+0xd61a>
  40f833:	mov    r15,QWORD PTR [rax]
  40f836:	add    r15,0x18
  40f83a:	lea    rsi,[rsp+0x20]
  40f83f:	mov    rdi,r15
  40f842:	call   4020b0 <strtod@plt>
  40f847:	mov    rbx,QWORD PTR [rsp+0x20]
  40f84c:	cmp    rbx,r15
  40f84f:	je     40f8ea <__ctype_b_loc@plt+0xd61a>
  40f855:	mov    r13b,BYTE PTR [rbx]
  40f858:	mov    eax,r13d
  40f85b:	or     al,0x20
  40f85d:	cmp    al,0x78
  40f85f:	jne    40f894 <__ctype_b_loc@plt+0xd5c4>
  40f861:	lea    rsi,[rsp+0x20]
  40f866:	mov    rdi,r15
  40f869:	mov    edx,0x10
  40f86e:	call   402250 <strtoul@plt>
  40f873:	vmovq  xmm0,rax
  40f878:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1a3f0]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  40f880:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1a3f8]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  40f888:	vhaddpd xmm0,xmm0,xmm0
  40f88c:	mov    rbx,QWORD PTR [rsp+0x20]
  40f891:	mov    r13b,BYTE PTR [rbx]
  40f894:	test   r13b,r13b
  40f897:	je     40f8d1 <__ctype_b_loc@plt+0xd601>
  40f899:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  40f89f:	call   4022d0 <__ctype_b_loc@plt>
  40f8a4:	mov    rax,QWORD PTR [rax]
  40f8a7:	movzx  ecx,r13b
  40f8ab:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f8b0:	je     40f8ea <__ctype_b_loc@plt+0xd61a>
  40f8b2:	inc    rbx
  40f8b5:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  40f8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f8c0:	movzx  ecx,BYTE PTR [rbx]
  40f8c3:	inc    rbx
  40f8c6:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f8cb:	jne    40f8c0 <__ctype_b_loc@plt+0xd5f0>
  40f8cd:	test   cl,cl
  40f8cf:	jne    40f8ea <__ctype_b_loc@plt+0xd61a>
  40f8d1:	lea    rax,[rsp+0x8]
  40f8d6:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40f8dc:	vcvttsd2si r13,QWORD PTR [rax]
  40f8e1:	test   r13,r13
  40f8e4:	jne    40faf8 <__ctype_b_loc@plt+0xd828>
  40f8ea:	mov    rax,QWORD PTR [rbp+0x18]
  40f8ee:	add    rax,0x20
  40f8f2:	cmp    rax,QWORD PTR [rbp+0x10]
  40f8f6:	cmovae rax,r12
  40f8fa:	mov    ecx,DWORD PTR [rax+0x8]
  40f8fd:	cmp    ecx,0x3
  40f900:	je     40faf5 <__ctype_b_loc@plt+0xd825>
  40f906:	cmp    ecx,0x4
  40f909:	jne    40f985 <__ctype_b_loc@plt+0xd6b5>
  40f90b:	mov    r15,QWORD PTR [rax]
  40f90e:	add    r15,0x18
  40f912:	lea    rsi,[rsp+0x20]
  40f917:	mov    rdi,r15
  40f91a:	call   4020b0 <strtod@plt>
  40f91f:	mov    rbx,QWORD PTR [rsp+0x20]
  40f924:	cmp    rbx,r15
  40f927:	je     40f985 <__ctype_b_loc@plt+0xd6b5>
  40f929:	mov    r13b,BYTE PTR [rbx]
  40f92c:	mov    eax,r13d
  40f92f:	or     al,0x20
  40f931:	cmp    al,0x78
  40f933:	jne    40f94f <__ctype_b_loc@plt+0xd67f>
  40f935:	lea    rsi,[rsp+0x20]
  40f93a:	mov    rdi,r15
  40f93d:	mov    edx,0x10
  40f942:	call   402250 <strtoul@plt>
  40f947:	mov    rbx,QWORD PTR [rsp+0x20]
  40f94c:	mov    r13b,BYTE PTR [rbx]
  40f94f:	test   r13b,r13b
  40f952:	je     40faf5 <__ctype_b_loc@plt+0xd825>
  40f958:	call   4022d0 <__ctype_b_loc@plt>
  40f95d:	mov    rax,QWORD PTR [rax]
  40f960:	movzx  ecx,r13b
  40f964:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f969:	je     40f985 <__ctype_b_loc@plt+0xd6b5>
  40f96b:	inc    rbx
  40f96e:	xchg   ax,ax
  40f970:	movzx  ecx,BYTE PTR [rbx]
  40f973:	inc    rbx
  40f976:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f97b:	jne    40f970 <__ctype_b_loc@plt+0xd6a0>
  40f97d:	test   cl,cl
  40f97f:	je     40faf5 <__ctype_b_loc@plt+0xd825>
  40f985:	mov    rax,QWORD PTR [rbp+0x18]
  40f989:	lea    rdx,[rax+0x20]
  40f98d:	lea    rcx,[rip+0x1a842]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  40f994:	cmp    rdx,QWORD PTR [rbp+0x10]
  40f998:	jae    40f9b4 <__ctype_b_loc@plt+0xd6e4>
  40f99a:	cmp    rdx,r12
  40f99d:	je     40f9b4 <__ctype_b_loc@plt+0xd6e4>
  40f99f:	movsxd rax,DWORD PTR [rax+0x28]
  40f9a3:	cmp    rax,0xffffffffffffffff
  40f9a7:	je     40f9b4 <__ctype_b_loc@plt+0xd6e4>
  40f9a9:	lea    rcx,[rip+0x1ff30]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  40f9b0:	mov    rcx,QWORD PTR [rcx+rax*8]
  40f9b4:	lea    rsi,[rip+0x1a807]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  40f9bb:	lea    rdx,[rip+0x1a4df]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  40f9c2:	mov    rdi,rbp
  40f9c5:	xor    eax,eax
  40f9c7:	call   410460 <__ctype_b_loc@plt+0xe190>
  40f9cc:	mov    r15,rax
  40f9cf:	mov    rax,QWORD PTR [rbp+0x28]
  40f9d3:	sub    rax,QWORD PTR [rbp+0x50]
  40f9d7:	jbe    40fadc <__ctype_b_loc@plt+0xd80c>
  40f9dd:	shr    rax,0x3
  40f9e1:	imul   eax,eax,0xcccccccd
  40f9e7:	mov    DWORD PTR [rsp+0x94],eax
  40f9ee:	lea    rsi,[rip+0x1a462]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40f9f5:	lea    rdx,[rsp+0x20]
  40f9fa:	mov    rdi,rbp
  40f9fd:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40fa02:	mov    rdi,QWORD PTR [rsp+0x30]
  40fa07:	lea    rsi,[rip+0x1a742]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40fa0e:	call   402170 <strcmp@plt>
  40fa13:	cmp    eax,0x1
  40fa16:	mov    edx,0x3
  40fa1b:	sbb    edx,0x0
  40fa1e:	mov    rcx,QWORD PTR [rsp+0x28]
  40fa23:	test   rcx,rcx
  40fa26:	jne    40fa34 <__ctype_b_loc@plt+0xd764>
  40fa28:	lea    rcx,[rip+0x1a746]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40fa2f:	mov    QWORD PTR [rsp+0x28],rcx
  40fa34:	lea    rsi,[rip+0x1a73c]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40fa3b:	mov    rdi,rbp
  40fa3e:	mov    r8,r15
  40fa41:	xor    eax,eax
  40fa43:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40fa48:	jmp    40faf5 <__ctype_b_loc@plt+0xd825>
  40fa4d:	cmp    rcx,rdx
  40fa50:	lea    rbx,[rip+0x1a0c1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40fa57:	cmovb  rbx,rcx
  40fa5b:	mov    eax,DWORD PTR [rbx+0x8]
  40fa5e:	xor    r13d,r13d
  40fa61:	add    eax,0xfffffffd
  40fa64:	cmp    eax,0x4
  40fa67:	ja     40faf8 <__ctype_b_loc@plt+0xd828>
  40fa6d:	lea    rcx,[rip+0x19828]        # 42929c <__ctype_b_loc@plt+0x26fcc>
  40fa74:	movsxd rax,DWORD PTR [rcx+rax*4]
  40fa78:	add    rax,rcx
  40fa7b:	jmp    rax
  40fa7d:	vmovsd xmm0,QWORD PTR [rbx]
  40fa81:	lea    rsi,[rip+0x1a399]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  40fa88:	lea    r15,[rsp+0x20]
  40fa8d:	mov    rdi,r15
  40fa90:	mov    al,0x1
  40fa92:	call   402270 <sprintf@plt>
  40fa97:	mov    rdi,r15
  40fa9a:	call   4020e0 <strlen@plt>
  40fa9f:	mov    rdi,rbp
  40faa2:	mov    rsi,r15
  40faa5:	mov    rdx,rax
  40faa8:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40faad:	mov    QWORD PTR [rbx],rax
  40fab0:	mov    DWORD PTR [rbx+0x8],0x4
  40fab7:	mov    r13,QWORD PTR [rax+0x10]
  40fabb:	jmp    40faf8 <__ctype_b_loc@plt+0xd828>
  40fabd:	mov    rax,QWORD PTR [rbx]
  40fac0:	mov    r13,QWORD PTR [rax+0x10]
  40fac4:	jmp    40faf8 <__ctype_b_loc@plt+0xd828>
  40fac6:	mov    rdi,QWORD PTR [rbx]
  40fac9:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  40face:	movsxd r13,eax
  40fad1:	jmp    40faf8 <__ctype_b_loc@plt+0xd828>
  40fad3:	mov    rax,QWORD PTR [rbx]
  40fad6:	mov    r13,QWORD PTR [rax+0x20]
  40fada:	jmp    40faf8 <__ctype_b_loc@plt+0xd828>
  40fadc:	lea    rsi,[rip+0x1a657]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40fae3:	mov    rdi,rbp
  40fae6:	mov    edx,0x3
  40faeb:	mov    rcx,r15
  40faee:	xor    eax,eax
  40faf0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40faf5:	xor    r13d,r13d
  40faf8:	xor    r15d,r15d
  40fafb:	mov    eax,r13d
  40fafe:	sub    eax,r14d
  40fb01:	jl     40fb40 <__ctype_b_loc@plt+0xd870>
  40fb03:	cmp    eax,0x1f3f
  40fb08:	ja     40fb2c <__ctype_b_loc@plt+0xd85c>
  40fb0a:	lea    r15d,[rax+0x1]
  40fb0e:	mov    rcx,QWORD PTR [rbp+0x10]
  40fb12:	mov    rdx,rcx
  40fb15:	sub    rdx,QWORD PTR [rbp+0x18]
  40fb19:	sar    rdx,0x4
  40fb1d:	movsxd rbx,r15d
  40fb20:	add    rdx,rbx
  40fb23:	cmp    rdx,0x1f40
  40fb2a:	jle    40fb55 <__ctype_b_loc@plt+0xd885>
  40fb2c:	lea    rsi,[rip+0x1aaef]        # 42a622 <__ctype_b_loc@plt+0x28352>
  40fb33:	xor    r15d,r15d
  40fb36:	mov    rdi,rbp
  40fb39:	xor    eax,eax
  40fb3b:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40fb40:	mov    eax,r15d
  40fb43:	add    rsp,0x98
  40fb4a:	pop    rbx
  40fb4b:	pop    r12
  40fb4d:	pop    r13
  40fb4f:	pop    r14
  40fb51:	pop    r15
  40fb53:	pop    rbp
  40fb54:	ret    
  40fb55:	mov    rdx,QWORD PTR [rbp+0x38]
  40fb59:	sub    rdx,rcx
  40fb5c:	mov    ecx,r15d
  40fb5f:	shl    ecx,0x4
  40fb62:	movsxd rcx,ecx
  40fb65:	cmp    rdx,rcx
  40fb68:	jg     40fb81 <__ctype_b_loc@plt+0xd8b1>
  40fb6a:	mov    ecx,DWORD PTR [rbp+0x58]
  40fb6d:	lea    edx,[rcx+r15*1]
  40fb71:	lea    esi,[rcx+rcx*1]
  40fb74:	cmp    ecx,eax
  40fb76:	cmovle esi,edx
  40fb79:	mov    rdi,rbp
  40fb7c:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  40fb81:	mov    rcx,QWORD PTR [rbp+0x10]
  40fb85:	mov    rax,QWORD PTR [rbp+0x28]
  40fb89:	shl    rbx,0x4
  40fb8d:	add    rbx,rcx
  40fb90:	cmp    QWORD PTR [rax+0x10],rbx
  40fb94:	jae    40fb9a <__ctype_b_loc@plt+0xd8ca>
  40fb96:	mov    QWORD PTR [rax+0x10],rbx
  40fb9a:	mov    rax,QWORD PTR [rbp+0x18]
  40fb9e:	cmp    rax,rcx
  40fba1:	cmovae rax,r12
  40fba5:	mov    rsi,QWORD PTR [rax]
  40fba8:	lea    eax,[r14-0x1]
  40fbac:	cmp    eax,DWORD PTR [rsi+0x38]
  40fbaf:	jae    40fbc1 <__ctype_b_loc@plt+0xd8f1>
  40fbb1:	movsxd r12,eax
  40fbb4:	shl    r12,0x4
  40fbb8:	add    r12,QWORD PTR [rsi+0x18]
  40fbbc:	jmp    40fc3f <__ctype_b_loc@plt+0xd96f>
  40fbc1:	vcvtsi2sd xmm0,xmm1,r14d
  40fbc6:	test   r14d,r14d
  40fbc9:	je     40fc09 <__ctype_b_loc@plt+0xd939>
  40fbcb:	vmovq  rdx,xmm0
  40fbd0:	mov    rax,rdx
  40fbd3:	shr    rax,0x20
  40fbd7:	add    eax,edx
  40fbd9:	mov    dl,BYTE PTR [rsi+0xb]
  40fbdc:	mov    rdi,0xffffffffffffffff
  40fbe3:	shlx   rdi,rdi,rdx
  40fbe8:	or     rdi,0x1
  40fbec:	xor    rdi,0xfffffffffffffffe
  40fbf0:	xor    edx,edx
  40fbf2:	div    rdi
  40fbf5:	lea    rax,[rdx+rdx*4]
  40fbf9:	shl    rax,0x3
  40fbfd:	add    rax,QWORD PTR [rsi+0x20]
  40fc01:	cmp    DWORD PTR [rax+0x18],0x3
  40fc05:	jne    40fc20 <__ctype_b_loc@plt+0xd950>
  40fc07:	jmp    40fc2f <__ctype_b_loc@plt+0xd95f>
  40fc09:	mov    rax,QWORD PTR [rsi+0x20]
  40fc0d:	cmp    DWORD PTR [rax+0x18],0x3
  40fc11:	je     40fc2f <__ctype_b_loc@plt+0xd95f>
  40fc13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc1d:	nop    DWORD PTR [rax]
  40fc20:	mov    rax,QWORD PTR [rax+0x20]
  40fc24:	test   rax,rax
  40fc27:	je     40fc3f <__ctype_b_loc@plt+0xd96f>
  40fc29:	cmp    DWORD PTR [rax+0x18],0x3
  40fc2d:	jne    40fc20 <__ctype_b_loc@plt+0xd950>
  40fc2f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40fc34:	vucomisd xmm1,xmm0
  40fc38:	jne    40fc20 <__ctype_b_loc@plt+0xd950>
  40fc3a:	jp     40fc20 <__ctype_b_loc@plt+0xd950>
  40fc3c:	mov    r12,rax
  40fc3f:	mov    rax,QWORD PTR [r12]
  40fc43:	mov    QWORD PTR [rcx],rax
  40fc46:	mov    eax,DWORD PTR [r12+0x8]
  40fc4b:	mov    DWORD PTR [rcx+0x8],eax
  40fc4e:	mov    rcx,QWORD PTR [rbp+0x10]
  40fc52:	add    rcx,0x10
  40fc56:	mov    QWORD PTR [rbp+0x10],rcx
  40fc5a:	cmp    r13d,r14d
  40fc5d:	jle    40fb40 <__ctype_b_loc@plt+0xd870>
  40fc63:	movsxd rdi,r14d
  40fc66:	movsxd r10,r13d
  40fc69:	lea    r8,[rip+0x19ea8]        # 429b18 <__ctype_b_loc@plt+0x27848>
  40fc70:	mov    r9,0xffffffffffffffff
  40fc77:	jmp    40fca9 <__ctype_b_loc@plt+0xd9d9>
  40fc79:	nop    DWORD PTR [rax+0x0]
  40fc80:	shl    rax,0x4
  40fc84:	add    rax,QWORD PTR [rbx+0x18]
  40fc88:	mov    rdx,QWORD PTR [rax]
  40fc8b:	mov    QWORD PTR [rcx],rdx
  40fc8e:	mov    eax,DWORD PTR [rax+0x8]
  40fc91:	mov    DWORD PTR [rcx+0x8],eax
  40fc94:	mov    rcx,QWORD PTR [rbp+0x10]
  40fc98:	add    rcx,0x10
  40fc9c:	mov    QWORD PTR [rbp+0x10],rcx
  40fca0:	cmp    rdi,r10
  40fca3:	je     40fb40 <__ctype_b_loc@plt+0xd870>
  40fca9:	mov    rax,rdi
  40fcac:	inc    rdi
  40fcaf:	mov    rdx,QWORD PTR [rbp+0x18]
  40fcb3:	cmp    rdx,rcx
  40fcb6:	cmovae rdx,r8
  40fcba:	mov    rbx,QWORD PTR [rdx]
  40fcbd:	cmp    DWORD PTR [rbx+0x38],eax
  40fcc0:	ja     40fc80 <__ctype_b_loc@plt+0xd9b0>
  40fcc2:	vcvtsi2sd xmm0,xmm2,edi
  40fcc6:	test   rdi,rdi
  40fcc9:	je     40fd02 <__ctype_b_loc@plt+0xda32>
  40fccb:	vmovq  rdx,xmm0
  40fcd0:	mov    rax,rdx
  40fcd3:	shr    rax,0x20
  40fcd7:	add    eax,edx
  40fcd9:	mov    dl,BYTE PTR [rbx+0xb]
  40fcdc:	shlx   rsi,r9,rdx
  40fce1:	or     rsi,0x1
  40fce5:	xor    rsi,0xfffffffffffffffe
  40fce9:	xor    edx,edx
  40fceb:	div    rsi
  40fcee:	lea    rax,[rdx+rdx*4]
  40fcf2:	shl    rax,0x3
  40fcf6:	add    rax,QWORD PTR [rbx+0x20]
  40fcfa:	cmp    DWORD PTR [rax+0x18],0x3
  40fcfe:	jne    40fd10 <__ctype_b_loc@plt+0xda40>
  40fd00:	jmp    40fd1f <__ctype_b_loc@plt+0xda4f>
  40fd02:	mov    rax,QWORD PTR [rbx+0x20]
  40fd06:	cmp    DWORD PTR [rax+0x18],0x3
  40fd0a:	je     40fd1f <__ctype_b_loc@plt+0xda4f>
  40fd0c:	nop    DWORD PTR [rax+0x0]
  40fd10:	mov    rax,QWORD PTR [rax+0x20]
  40fd14:	test   rax,rax
  40fd17:	je     40fd40 <__ctype_b_loc@plt+0xda70>
  40fd19:	cmp    DWORD PTR [rax+0x18],0x3
  40fd1d:	jne    40fd10 <__ctype_b_loc@plt+0xda40>
  40fd1f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40fd24:	vucomisd xmm1,xmm0
  40fd28:	jne    40fd10 <__ctype_b_loc@plt+0xda40>
  40fd2a:	jp     40fd10 <__ctype_b_loc@plt+0xda40>
  40fd2c:	jmp    40fc88 <__ctype_b_loc@plt+0xd9b8>
  40fd31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd40:	mov    rax,r8
  40fd43:	jmp    40fc88 <__ctype_b_loc@plt+0xd9b8>
  40fd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd50:	push   r15
  40fd52:	push   r14
  40fd54:	push   rbx
  40fd55:	sub    rsp,0x150
  40fd5c:	mov    r14,rsi
  40fd5f:	mov    rbx,rdi
  40fd62:	test   al,al
  40fd64:	je     40fda5 <__ctype_b_loc@plt+0xdad5>
  40fd66:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40fd6c:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40fd72:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40fd78:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40fd81:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40fd8a:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40fd93:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40fd9c:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40fda5:	mov    QWORD PTR [rsp+0x30],rdx
  40fdaa:	mov    QWORD PTR [rsp+0x38],rcx
  40fdaf:	mov    QWORD PTR [rsp+0x40],r8
  40fdb4:	mov    QWORD PTR [rsp+0x48],r9
  40fdb9:	lea    rax,[rsp+0x20]
  40fdbe:	mov    QWORD PTR [rsp+0x10],rax
  40fdc3:	lea    rax,[rsp+0x170]
  40fdcb:	mov    QWORD PTR [rsp+0x8],rax
  40fdd0:	movabs rax,0x3000000010
  40fdda:	mov    QWORD PTR [rsp],rax
  40fdde:	mov    rax,QWORD PTR [rbx+0x28]
  40fde2:	mov    rcx,QWORD PTR [rbx+0x50]
  40fde6:	mov    edx,0x1
  40fdeb:	cmp    rax,rcx
  40fdee:	ja     40fe0d <__ctype_b_loc@plt+0xdb3d>
  40fdf0:	jmp    40fe7a <__ctype_b_loc@plt+0xdbaa>
  40fdf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdff:	nop
  40fe00:	add    rax,0xffffffffffffffd8
  40fe04:	test   edx,edx
  40fe06:	jle    40fe21 <__ctype_b_loc@plt+0xdb51>
  40fe08:	cmp    rax,rcx
  40fe0b:	jbe    40fe7a <__ctype_b_loc@plt+0xdbaa>
  40fe0d:	dec    edx
  40fe0f:	mov    rsi,QWORD PTR [rax+0x8]
  40fe13:	mov    rsi,QWORD PTR [rsi]
  40fe16:	cmp    BYTE PTR [rsi+0xa],0x0
  40fe1a:	jne    40fe00 <__ctype_b_loc@plt+0xdb30>
  40fe1c:	sub    edx,DWORD PTR [rax+0x24]
  40fe1f:	jmp    40fe00 <__ctype_b_loc@plt+0xdb30>
  40fe21:	xor    esi,esi
  40fe23:	test   edx,edx
  40fe25:	jne    40fe36 <__ctype_b_loc@plt+0xdb66>
  40fe27:	sub    rax,rcx
  40fe2a:	jbe    40fe7a <__ctype_b_loc@plt+0xdbaa>
  40fe2c:	shr    rax,0x3
  40fe30:	imul   esi,eax,0xcccccccd
  40fe36:	mov    DWORD PTR [rsp+0x14c],esi
  40fe3d:	lea    rsi,[rip+0x1a373]        # 42a1b7 <__ctype_b_loc@plt+0x27ee7>
  40fe44:	lea    rdx,[rsp+0xd8]
  40fe4c:	mov    rdi,rbx
  40fe4f:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40fe54:	mov    ecx,DWORD PTR [rsp+0x100]
  40fe5b:	test   ecx,ecx
  40fe5d:	jle    40fe7a <__ctype_b_loc@plt+0xdbaa>
  40fe5f:	lea    rdx,[rsp+0x110]
  40fe67:	lea    rsi,[rip+0x1a34c]        # 42a1ba <__ctype_b_loc@plt+0x27eea>
  40fe6e:	mov    rdi,rbx
  40fe71:	xor    eax,eax
  40fe73:	call   410460 <__ctype_b_loc@plt+0xe190>
  40fe78:	jmp    40feb5 <__ctype_b_loc@plt+0xdbe5>
  40fe7a:	mov    rax,QWORD PTR [rbx+0x20]
  40fe7e:	mov    rcx,QWORD PTR [rax+0x78]
  40fe82:	cmp    rcx,QWORD PTR [rax+0x70]
  40fe86:	jb     40fe90 <__ctype_b_loc@plt+0xdbc0>
  40fe88:	mov    rdi,rbx
  40fe8b:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40fe90:	mov    r15,QWORD PTR [rbx+0x10]
  40fe94:	lea    rsi,[rip+0x1a200]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  40fe9b:	mov    rdi,rbx
  40fe9e:	xor    edx,edx
  40fea0:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  40fea5:	mov    QWORD PTR [r15],rax
  40fea8:	mov    DWORD PTR [r15+0x8],0x4
  40feb0:	add    QWORD PTR [rbx+0x10],0x10
  40feb5:	mov    rax,QWORD PTR [rbx+0x20]
  40feb9:	mov    rcx,QWORD PTR [rax+0x78]
  40febd:	cmp    rcx,QWORD PTR [rax+0x70]
  40fec1:	jb     40fecb <__ctype_b_loc@plt+0xdbfb>
  40fec3:	mov    rdi,rbx
  40fec6:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40fecb:	mov    rdx,rsp
  40fece:	mov    rdi,rbx
  40fed1:	mov    rsi,r14
  40fed4:	call   4041f0 <__ctype_b_loc@plt+0x1f20>
  40fed9:	mov    rax,QWORD PTR [rbx+0x20]
  40fedd:	mov    rcx,QWORD PTR [rax+0x78]
  40fee1:	cmp    rcx,QWORD PTR [rax+0x70]
  40fee5:	jb     40feef <__ctype_b_loc@plt+0xdc1f>
  40fee7:	mov    rdi,rbx
  40feea:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  40feef:	mov    rdx,QWORD PTR [rbx+0x10]
  40fef3:	sub    rdx,QWORD PTR [rbx+0x18]
  40fef7:	shr    rdx,0x4
  40fefb:	dec    edx
  40fefd:	mov    rdi,rbx
  40ff00:	mov    esi,0x2
  40ff05:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  40ff0a:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40ff0f:	mov    rdi,rbx
  40ff12:	call   4045f0 <__ctype_b_loc@plt+0x2320>
  40ff17:	add    rsp,0x150
  40ff1e:	pop    rbx
  40ff1f:	pop    r14
  40ff21:	pop    r15
  40ff23:	ret    
  40ff24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff2e:	xchg   ax,ax
  40ff30:	push   rbp
  40ff31:	push   r14
  40ff33:	push   rbx
  40ff34:	sub    rsp,0x80
  40ff3b:	mov    r14,rdx
  40ff3e:	mov    ebp,esi
  40ff40:	mov    rbx,rdi
  40ff43:	mov    rax,QWORD PTR [rdi+0x28]
  40ff47:	sub    rax,QWORD PTR [rdi+0x50]
  40ff4b:	jbe    40ffb6 <__ctype_b_loc@plt+0xdce6>
  40ff4d:	shr    rax,0x3
  40ff51:	imul   eax,eax,0xcccccccd
  40ff57:	mov    DWORD PTR [rsp+0x7c],eax
  40ff5b:	lea    rsi,[rip+0x19ef5]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  40ff62:	lea    rdx,[rsp+0x8]
  40ff67:	mov    rdi,rbx
  40ff6a:	call   410000 <__ctype_b_loc@plt+0xdd30>
  40ff6f:	mov    rdi,QWORD PTR [rsp+0x18]
  40ff74:	lea    rsi,[rip+0x1a1d5]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  40ff7b:	call   402170 <strcmp@plt>
  40ff80:	test   eax,eax
  40ff82:	jne    40ff88 <__ctype_b_loc@plt+0xdcb8>
  40ff84:	dec    ebp
  40ff86:	je     40ffd8 <__ctype_b_loc@plt+0xdd08>
  40ff88:	mov    rcx,QWORD PTR [rsp+0x10]
  40ff8d:	test   rcx,rcx
  40ff90:	jne    40ff9e <__ctype_b_loc@plt+0xdcce>
  40ff92:	lea    rcx,[rip+0x1a1dc]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  40ff99:	mov    QWORD PTR [rsp+0x10],rcx
  40ff9e:	lea    rsi,[rip+0x1a1d2]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  40ffa5:	mov    rdi,rbx
  40ffa8:	mov    edx,ebp
  40ffaa:	mov    r8,r14
  40ffad:	xor    eax,eax
  40ffaf:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40ffb4:	jmp    40ffcc <__ctype_b_loc@plt+0xdcfc>
  40ffb6:	lea    rsi,[rip+0x1a17d]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  40ffbd:	mov    rdi,rbx
  40ffc0:	mov    edx,ebp
  40ffc2:	mov    rcx,r14
  40ffc5:	xor    eax,eax
  40ffc7:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40ffcc:	add    rsp,0x80
  40ffd3:	pop    rbx
  40ffd4:	pop    r14
  40ffd6:	pop    rbp
  40ffd7:	ret    
  40ffd8:	mov    rdx,QWORD PTR [rsp+0x10]
  40ffdd:	lea    rsi,[rip+0x1a173]        # 42a157 <__ctype_b_loc@plt+0x27e87>
  40ffe4:	mov    rdi,rbx
  40ffe7:	mov    rcx,r14
  40ffea:	xor    eax,eax
  40ffec:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  40fff1:	jmp    40ffcc <__ctype_b_loc@plt+0xdcfc>
  40fff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fffd:	nop    DWORD PTR [rax]
  410000:	push   rbp
  410001:	push   r15
  410003:	push   r14
  410005:	push   r13
  410007:	push   r12
  410009:	push   rbx
  41000a:	sub    rsp,0x48
  41000e:	mov    rbx,rdx
  410011:	mov    rbp,rsi
  410014:	mov    r15,rdi
  410017:	cmp    BYTE PTR [rsi],0x3e
  41001a:	jne    4101e0 <__ctype_b_loc@plt+0xdf10>
  410020:	mov    rax,QWORD PTR [r15+0x10]
  410024:	inc    rbp
  410027:	mov    r13,QWORD PTR [rax-0x10]
  41002b:	add    rax,0xfffffffffffffff0
  41002f:	mov    QWORD PTR [rsp+0x8],r15
  410034:	mov    QWORD PTR [r15+0x10],rax
  410038:	xor    r15d,r15d
  41003b:	test   r13,r13
  41003e:	je     41020b <__ctype_b_loc@plt+0xdf3b>
  410044:	mov    al,BYTE PTR [rbp+0x0]
  410047:	test   al,al
  410049:	je     41027b <__ctype_b_loc@plt+0xdfab>
  41004f:	lea    rcx,[rbx+0x38]
  410053:	mov    QWORD PTR [rsp+0x18],rcx
  410058:	mov    QWORD PTR [rsp+0x10],rbp
  41005d:	lea    r12,[rbp+0x1]
  410061:	lea    r14,[rip+0x19248]        # 4292b0 <__ctype_b_loc@plt+0x26fe0>
  410068:	lea    rbp,[rip+0x1a138]        # 42a1a7 <__ctype_b_loc@plt+0x27ed7>
  41006f:	lea    rcx,[rip+0x1a025]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  410076:	vmovq  xmm0,rcx
  41007b:	vpslldq xmm0,xmm0,0x8
  410080:	vmovdqa XMMWORD PTR [rsp+0x30],xmm0
  410086:	jmp    4100b0 <__ctype_b_loc@plt+0xdde0>
  410088:	nop    DWORD PTR [rax+rax*1+0x0]
  410090:	vmovdqa xmm0,XMMWORD PTR [rsp+0x30]
  410096:	vmovdqu XMMWORD PTR [rbx+0x8],xmm0
  41009b:	nop    DWORD PTR [rax+rax*1+0x0]
  4100a0:	movzx  eax,BYTE PTR [r12]
  4100a5:	inc    r12
  4100a8:	test   al,al
  4100aa:	je     410272 <__ctype_b_loc@plt+0xdfa2>
  4100b0:	movsx  eax,al
  4100b3:	add    eax,0xffffffad
  4100b6:	cmp    eax,0x22
  4100b9:	ja     4100a0 <__ctype_b_loc@plt+0xddd0>
  4100bb:	movsxd rax,DWORD PTR [r14+rax*4]
  4100bf:	add    rax,r14
  4100c2:	jmp    rax
  4100c4:	cmp    BYTE PTR [r13+0xa],0x0
  4100c9:	je     41012d <__ctype_b_loc@plt+0xde5d>
  4100cb:	mov    rsi,rbp
  4100ce:	mov    QWORD PTR [rbx+0x20],rbp
  4100d2:	mov    DWORD PTR [rbx+0x30],0xffffffff
  4100d9:	mov    eax,0xffffffff
  4100de:	lea    rcx,[rip+0x1a0c7]        # 42a1ac <__ctype_b_loc@plt+0x27edc>
  4100e5:	jmp    410162 <__ctype_b_loc@plt+0xde92>
  4100e7:	nop    WORD PTR [rax+rax*1+0x0]
  4100f0:	mov    eax,0xffffffff
  4100f5:	test   r15,r15
  4100f8:	je     41010d <__ctype_b_loc@plt+0xde3d>
  4100fa:	mov    rsi,QWORD PTR [r15+0x8]
  4100fe:	cmp    DWORD PTR [rsi+0x8],0x6
  410102:	jne    41010d <__ctype_b_loc@plt+0xde3d>
  410104:	mov    rdx,QWORD PTR [rsi]
  410107:	cmp    BYTE PTR [rdx+0xa],0x0
  41010b:	je     41017d <__ctype_b_loc@plt+0xdead>
  41010d:	mov    DWORD PTR [rbx+0x28],eax
  410110:	jmp    4100a0 <__ctype_b_loc@plt+0xddd0>
  410112:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41011c:	nop    DWORD PTR [rax+0x0]
  410120:	movzx  eax,BYTE PTR [r13+0xb]
  410125:	mov    DWORD PTR [rbx+0x2c],eax
  410128:	jmp    4100a0 <__ctype_b_loc@plt+0xddd0>
  41012d:	mov    rax,QWORD PTR [r13+0x20]
  410131:	mov    rsi,QWORD PTR [rax+0x40]
  410135:	add    rsi,0x18
  410139:	mov    QWORD PTR [rbx+0x20],rsi
  41013d:	mov    rax,QWORD PTR [r13+0x20]
  410141:	mov    ecx,DWORD PTR [rax+0x60]
  410144:	mov    DWORD PTR [rbx+0x30],ecx
  410147:	mov    rax,QWORD PTR [r13+0x20]
  41014b:	mov    eax,DWORD PTR [rax+0x64]
  41014e:	test   ecx,ecx
  410150:	lea    rcx,[rip+0x1a05c]        # 42a1b3 <__ctype_b_loc@plt+0x27ee3>
  410157:	lea    rdx,[rip+0x1a050]        # 42a1ae <__ctype_b_loc@plt+0x27ede>
  41015e:	cmove  rcx,rdx
  410162:	mov    DWORD PTR [rbx+0x34],eax
  410165:	mov    QWORD PTR [rbx+0x18],rcx
  410169:	mov    edx,0x3c
  41016e:	mov    rdi,QWORD PTR [rsp+0x18]
  410173:	call   404710 <__ctype_b_loc@plt+0x2440>
  410178:	jmp    4100a0 <__ctype_b_loc@plt+0xddd0>
  41017d:	mov    rcx,QWORD PTR [rsp+0x8]
  410182:	cmp    QWORD PTR [rcx+0x28],r15
  410186:	je     41018e <__ctype_b_loc@plt+0xdebe>
  410188:	mov    rcx,QWORD PTR [r15+0x18]
  41018c:	jmp    410199 <__ctype_b_loc@plt+0xdec9>
  41018e:	mov    rcx,QWORD PTR [rcx+0x30]
  410192:	mov    QWORD PTR [r15+0x18],rcx
  410196:	mov    rdx,QWORD PTR [rsi]
  410199:	mov    rdx,QWORD PTR [rdx+0x20]
  41019d:	sub    rcx,QWORD PTR [rdx+0x18]
  4101a1:	mov    rsi,rcx
  4101a4:	shr    rsi,0x2
  4101a8:	test   esi,esi
  4101aa:	jle    41010d <__ctype_b_loc@plt+0xde3d>
  4101b0:	mov    rax,QWORD PTR [rdx+0x28]
  4101b4:	test   rax,rax
  4101b7:	je     4101d6 <__ctype_b_loc@plt+0xdf06>
  4101b9:	shl    rcx,0x1e
  4101bd:	movabs rdx,0xffffffff00000000
  4101c7:	add    rcx,rdx
  4101ca:	sar    rcx,0x1e
  4101ce:	mov    eax,DWORD PTR [rax+rcx*1]
  4101d1:	jmp    41010d <__ctype_b_loc@plt+0xde3d>
  4101d6:	xor    eax,eax
  4101d8:	mov    DWORD PTR [rbx+0x28],eax
  4101db:	jmp    4100a0 <__ctype_b_loc@plt+0xddd0>
  4101e0:	movsxd rax,DWORD PTR [rbx+0x74]
  4101e4:	test   rax,rax
  4101e7:	je     410210 <__ctype_b_loc@plt+0xdf40>
  4101e9:	mov    QWORD PTR [rsp+0x8],r15
  4101ee:	mov    rcx,QWORD PTR [r15+0x50]
  4101f2:	lea    rax,[rax+rax*4]
  4101f6:	lea    r15,[rcx+rax*8]
  4101fa:	mov    rax,QWORD PTR [rcx+rax*8+0x8]
  4101ff:	mov    r13,QWORD PTR [rax]
  410202:	test   r13,r13
  410205:	jne    410044 <__ctype_b_loc@plt+0xdd74>
  41020b:	mov    r15,QWORD PTR [rsp+0x8]
  410210:	mov    DWORD PTR [rbx+0x28],0xffffffff
  410217:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
  41021f:	lea    rsi,[rip+0x19f74]        # 42a19a <__ctype_b_loc@plt+0x27eca>
  410226:	vmovq  xmm0,rsi
  41022b:	lea    rax,[rip+0x19f63]        # 42a195 <__ctype_b_loc@plt+0x27ec5>
  410232:	vmovq  xmm1,rax
  410237:	vpunpcklqdq xmm0,xmm1,xmm0
  41023b:	vmovdqu XMMWORD PTR [rbx+0x18],xmm0
  410240:	lea    rax,[rip+0x19e54]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  410247:	vmovq  xmm0,rax
  41024c:	vpbroadcastq xmm0,xmm0
  410251:	vmovdqu XMMWORD PTR [rbx+0x8],xmm0
  410256:	lea    rdi,[rbx+0x38]
  41025a:	mov    edx,0x3c
  41025f:	call   404710 <__ctype_b_loc@plt+0x2440>
  410264:	mov    DWORD PTR [rbx+0x2c],0x0
  41026b:	mov    bl,0x1
  41026d:	xor    r13d,r13d
  410270:	jmp    410282 <__ctype_b_loc@plt+0xdfb2>
  410272:	xor    ebx,ebx
  410274:	mov    rbp,QWORD PTR [rsp+0x10]
  410279:	jmp    41027d <__ctype_b_loc@plt+0xdfad>
  41027b:	xor    ebx,ebx
  41027d:	mov    r15,QWORD PTR [rsp+0x8]
  410282:	mov    rdi,rbp
  410285:	mov    esi,0x66
  41028a:	call   4020f0 <strchr@plt>
  41028f:	test   rax,rax
  410292:	je     4102d3 <__ctype_b_loc@plt+0xe003>
  410294:	mov    rax,QWORD PTR [r15+0x10]
  410298:	xor    ecx,ecx
  41029a:	test   bl,bl
  41029c:	jne    4102a6 <__ctype_b_loc@plt+0xdfd6>
  41029e:	mov    QWORD PTR [rax],r13
  4102a1:	mov    ecx,0x6
  4102a6:	mov    DWORD PTR [rax+0x8],ecx
  4102a9:	mov    rax,QWORD PTR [r15+0x38]
  4102ad:	sub    rax,QWORD PTR [r15+0x10]
  4102b1:	cmp    rax,0x10
  4102b5:	jg     4102ce <__ctype_b_loc@plt+0xdffe>
  4102b7:	mov    eax,DWORD PTR [r15+0x58]
  4102bb:	lea    ecx,[rax+0x1]
  4102be:	lea    esi,[rax+rax*1]
  4102c1:	test   eax,eax
  4102c3:	cmovle esi,ecx
  4102c6:	mov    rdi,r15
  4102c9:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4102ce:	add    QWORD PTR [r15+0x10],0x10
  4102d3:	mov    rdi,rbp
  4102d6:	mov    esi,0x4c
  4102db:	call   4020f0 <strchr@plt>
  4102e0:	test   rax,rax
  4102e3:	je     410324 <__ctype_b_loc@plt+0xe054>
  4102e5:	test   bl,bl
  4102e7:	jne    4102f0 <__ctype_b_loc@plt+0xe020>
  4102e9:	cmp    BYTE PTR [r13+0xa],0x0
  4102ee:	je     410333 <__ctype_b_loc@plt+0xe063>
  4102f0:	mov    rax,QWORD PTR [r15+0x10]
  4102f4:	mov    DWORD PTR [rax+0x8],0x0
  4102fb:	mov    rcx,QWORD PTR [r15+0x38]
  4102ff:	sub    rcx,rax
  410302:	cmp    rcx,0x10
  410306:	jg     41031f <__ctype_b_loc@plt+0xe04f>
  410308:	mov    eax,DWORD PTR [r15+0x58]
  41030c:	lea    ecx,[rax+rax*1]
  41030f:	lea    esi,[rax+0x1]
  410312:	test   eax,eax
  410314:	cmovg  esi,ecx
  410317:	mov    rdi,r15
  41031a:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  41031f:	add    QWORD PTR [r15+0x10],0x10
  410324:	add    rsp,0x48
  410328:	pop    rbx
  410329:	pop    r12
  41032b:	pop    r13
  41032d:	pop    r14
  41032f:	pop    r15
  410331:	pop    rbp
  410332:	ret    
  410333:	mov    rdi,r15
  410336:	xor    esi,esi
  410338:	xor    edx,edx
  41033a:	call   403700 <__ctype_b_loc@plt+0x1430>
  41033f:	mov    rbx,rax
  410342:	mov    rax,QWORD PTR [r13+0x20]
  410346:	cmp    DWORD PTR [rax+0x54],0x0
  41034a:	jle    410442 <__ctype_b_loc@plt+0xe172>
  410350:	mov    r12,QWORD PTR [rax+0x28]
  410354:	xor    ebp,ebp
  410356:	lea    r14,[rip+0x197bb]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41035d:	jmp    41039f <__ctype_b_loc@plt+0xe0cf>
  41035f:	nop
  410360:	vmovq  QWORD PTR [rsp+0x20],xmm0
  410366:	mov    DWORD PTR [rsp+0x28],0x3
  41036e:	mov    rdi,r15
  410371:	mov    rsi,rbx
  410374:	lea    rdx,[rsp+0x20]
  410379:	call   409b60 <__ctype_b_loc@plt+0x7890>
  41037e:	mov    DWORD PTR [rax],0x1
  410384:	mov    DWORD PTR [rax+0x8],0x1
  41038b:	inc    rbp
  41038e:	mov    rax,QWORD PTR [r13+0x20]
  410392:	movsxd rax,DWORD PTR [rax+0x54]
  410396:	cmp    rbp,rax
  410399:	jge    410442 <__ctype_b_loc@plt+0xe172>
  41039f:	mov    ecx,DWORD PTR [r12+rbp*4]
  4103a3:	lea    eax,[rcx-0x1]
  4103a6:	cmp    eax,DWORD PTR [rbx+0x38]
  4103a9:	jae    4103c0 <__ctype_b_loc@plt+0xe0f0>
  4103ab:	cdqe   
  4103ad:	shl    rax,0x4
  4103b1:	add    rax,QWORD PTR [rbx+0x18]
  4103b5:	cmp    rax,r14
  4103b8:	jne    41037e <__ctype_b_loc@plt+0xe0ae>
  4103ba:	jmp    410439 <__ctype_b_loc@plt+0xe169>
  4103bc:	nop    DWORD PTR [rax+0x0]
  4103c0:	vcvtsi2sd xmm0,xmm2,ecx
  4103c4:	test   ecx,ecx
  4103c6:	je     410406 <__ctype_b_loc@plt+0xe136>
  4103c8:	vmovq  rdx,xmm0
  4103cd:	mov    rax,rdx
  4103d0:	shr    rax,0x20
  4103d4:	add    eax,edx
  4103d6:	mov    dl,BYTE PTR [rbx+0xb]
  4103d9:	mov    rsi,0xffffffffffffffff
  4103e0:	shlx   rsi,rsi,rdx
  4103e5:	or     rsi,0x1
  4103e9:	xor    rsi,0xfffffffffffffffe
  4103ed:	xor    edx,edx
  4103ef:	div    rsi
  4103f2:	lea    rax,[rdx+rdx*4]
  4103f6:	shl    rax,0x3
  4103fa:	add    rax,QWORD PTR [rbx+0x20]
  4103fe:	cmp    DWORD PTR [rax+0x18],0x3
  410402:	jne    410410 <__ctype_b_loc@plt+0xe140>
  410404:	jmp    410423 <__ctype_b_loc@plt+0xe153>
  410406:	mov    rax,QWORD PTR [rbx+0x20]
  41040a:	cmp    DWORD PTR [rax+0x18],0x3
  41040e:	je     410423 <__ctype_b_loc@plt+0xe153>
  410410:	mov    rax,QWORD PTR [rax+0x20]
  410414:	test   rax,rax
  410417:	je     410360 <__ctype_b_loc@plt+0xe090>
  41041d:	cmp    DWORD PTR [rax+0x18],0x3
  410421:	jne    410410 <__ctype_b_loc@plt+0xe140>
  410423:	vmovq  xmm1,QWORD PTR [rax+0x10]
  410428:	vucomisd xmm1,xmm0
  41042c:	jne    410410 <__ctype_b_loc@plt+0xe140>
  41042e:	jp     410410 <__ctype_b_loc@plt+0xe140>
  410430:	cmp    rax,r14
  410433:	jne    41037e <__ctype_b_loc@plt+0xe0ae>
  410439:	vcvtsi2sd xmm0,xmm2,ecx
  41043d:	jmp    410360 <__ctype_b_loc@plt+0xe090>
  410442:	mov    rax,QWORD PTR [r15+0x10]
  410446:	mov    QWORD PTR [rax],rbx
  410449:	mov    DWORD PTR [rax+0x8],0x5
  410450:	mov    rax,QWORD PTR [r15+0x10]
  410454:	jmp    4102fb <__ctype_b_loc@plt+0xe02b>
  410459:	nop    DWORD PTR [rax+0x0]
  410460:	push   r14
  410462:	push   rbx
  410463:	sub    rsp,0xd8
  41046a:	mov    r14,rsi
  41046d:	mov    rbx,rdi
  410470:	test   al,al
  410472:	je     4104b3 <__ctype_b_loc@plt+0xe1e3>
  410474:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41047a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  410480:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  410486:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  41048f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  410498:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4104a1:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4104aa:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4104b3:	mov    QWORD PTR [rsp+0x30],rdx
  4104b8:	mov    QWORD PTR [rsp+0x38],rcx
  4104bd:	mov    QWORD PTR [rsp+0x40],r8
  4104c2:	mov    QWORD PTR [rsp+0x48],r9
  4104c7:	mov    rax,QWORD PTR [rbx+0x20]
  4104cb:	mov    rcx,QWORD PTR [rax+0x78]
  4104cf:	cmp    rcx,QWORD PTR [rax+0x70]
  4104d3:	jb     4104dd <__ctype_b_loc@plt+0xe20d>
  4104d5:	mov    rdi,rbx
  4104d8:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4104dd:	lea    rax,[rsp+0x20]
  4104e2:	mov    QWORD PTR [rsp+0x10],rax
  4104e7:	lea    rax,[rsp+0xf0]
  4104ef:	mov    QWORD PTR [rsp+0x8],rax
  4104f4:	movabs rax,0x3000000010
  4104fe:	mov    QWORD PTR [rsp],rax
  410502:	mov    rdx,rsp
  410505:	mov    rdi,rbx
  410508:	mov    rsi,r14
  41050b:	call   4041f0 <__ctype_b_loc@plt+0x1f20>
  410510:	add    rsp,0xd8
  410517:	pop    rbx
  410518:	pop    r14
  41051a:	ret    
  41051b:	nop    DWORD PTR [rax+rax*1+0x0]
  410520:	push   rbp
  410521:	push   rbx
  410522:	push   rax
  410523:	mov    ebp,esi
  410525:	mov    rbx,rdi
  410528:	test   esi,esi
  41052a:	jle    410554 <__ctype_b_loc@plt+0xe284>
  41052c:	mov    rax,QWORD PTR [rbx+0x18]
  410530:	movsxd rcx,ebp
  410533:	shl    rcx,0x4
  410537:	add    rax,rcx
  41053a:	add    rax,0xfffffffffffffff0
  41053e:	cmp    rax,QWORD PTR [rbx+0x10]
  410542:	jb     4105f1 <__ctype_b_loc@plt+0xe321>
  410548:	lea    rcx,[rip+0x19c87]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41054f:	jmp    410619 <__ctype_b_loc@plt+0xe349>
  410554:	cmp    ebp,0xffffd8f1
  41055a:	jl     41056c <__ctype_b_loc@plt+0xe29c>
  41055c:	movsxd rax,ebp
  41055f:	shl    rax,0x4
  410563:	add    rax,QWORD PTR [rbx+0x10]
  410567:	jmp    4105f1 <__ctype_b_loc@plt+0xe321>
  41056c:	cmp    ebp,0xffffd8ee
  410572:	je     41058f <__ctype_b_loc@plt+0xe2bf>
  410574:	cmp    ebp,0xffffd8ef
  41057a:	je     410595 <__ctype_b_loc@plt+0xe2c5>
  41057c:	cmp    ebp,0xffffd8f0
  410582:	jne    4105be <__ctype_b_loc@plt+0xe2ee>
  410584:	mov    eax,0xa0
  410589:	add    rax,QWORD PTR [rbx+0x20]
  41058d:	jmp    4105f1 <__ctype_b_loc@plt+0xe321>
  41058f:	lea    rax,[rbx+0x78]
  410593:	jmp    4105f1 <__ctype_b_loc@plt+0xe321>
  410595:	mov    rax,QWORD PTR [rbx+0x28]
  410599:	mov    rax,QWORD PTR [rax+0x8]
  41059d:	mov    rcx,QWORD PTR [rax]
  4105a0:	lea    rax,[rbx+0x88]
  4105a7:	mov    rcx,QWORD PTR [rcx+0x18]
  4105ab:	mov    QWORD PTR [rbx+0x88],rcx
  4105b2:	mov    DWORD PTR [rbx+0x90],0x5
  4105bc:	jmp    4105f1 <__ctype_b_loc@plt+0xe321>
  4105be:	mov    rax,QWORD PTR [rbx+0x28]
  4105c2:	mov    rax,QWORD PTR [rax+0x8]
  4105c6:	mov    rax,QWORD PTR [rax]
  4105c9:	mov    ecx,0xffffd8ee
  4105ce:	sub    ecx,ebp
  4105d0:	movzx  esi,BYTE PTR [rax+0xb]
  4105d4:	cmp    ecx,esi
  4105d6:	jg     410548 <__ctype_b_loc@plt+0xe278>
  4105dc:	mov    ecx,0xffffd8ed
  4105e1:	sub    ecx,ebp
  4105e3:	movsxd rcx,ecx
  4105e6:	shl    rcx,0x4
  4105ea:	add    rax,rcx
  4105ed:	add    rax,0x28
  4105f1:	lea    rcx,[rip+0x19bde]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  4105f8:	lea    rsi,[rip+0x19519]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4105ff:	cmp    rax,rsi
  410602:	je     410619 <__ctype_b_loc@plt+0xe349>
  410604:	movsxd rax,DWORD PTR [rax+0x8]
  410608:	cmp    rax,0xffffffffffffffff
  41060c:	je     410619 <__ctype_b_loc@plt+0xe349>
  41060e:	lea    rcx,[rip+0x1f2cb]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  410615:	mov    rcx,QWORD PTR [rcx+rax*8]
  410619:	lea    rsi,[rip+0x19ba2]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  410620:	mov    rdi,rbx
  410623:	xor    eax,eax
  410625:	call   410460 <__ctype_b_loc@plt+0xe190>
  41062a:	mov    rdi,rbx
  41062d:	mov    esi,ebp
  41062f:	mov    rdx,rax
  410632:	add    rsp,0x8
  410636:	pop    rbx
  410637:	pop    rbp
  410638:	jmp    40ff30 <__ctype_b_loc@plt+0xdc60>
  41063d:	nop    DWORD PTR [rax]
  410640:	push   rbp
  410641:	push   r15
  410643:	push   r14
  410645:	push   r12
  410647:	push   rbx
  410648:	sub    rsp,0x20
  41064c:	mov    rax,rdx
  41064f:	mov    ebp,esi
  410651:	mov    r14,rdi
  410654:	test   esi,esi
  410656:	jle    410679 <__ctype_b_loc@plt+0xe3a9>
  410658:	mov    rcx,QWORD PTR [r14+0x18]
  41065c:	movsxd rdx,ebp
  41065f:	shl    rdx,0x4
  410663:	add    rdx,rcx
  410666:	add    rdx,0xfffffffffffffff0
  41066a:	cmp    rdx,QWORD PTR [r14+0x10]
  41066e:	jb     410717 <__ctype_b_loc@plt+0xe447>
  410674:	jmp    410a44 <__ctype_b_loc@plt+0xe774>
  410679:	cmp    ebp,0xffffd8f1
  41067f:	jl     410691 <__ctype_b_loc@plt+0xe3c1>
  410681:	movsxd rdx,ebp
  410684:	shl    rdx,0x4
  410688:	add    rdx,QWORD PTR [r14+0x10]
  41068c:	jmp    410717 <__ctype_b_loc@plt+0xe447>
  410691:	cmp    ebp,0xffffd8ee
  410697:	je     4106b4 <__ctype_b_loc@plt+0xe3e4>
  410699:	cmp    ebp,0xffffd8ef
  41069f:	je     4106ba <__ctype_b_loc@plt+0xe3ea>
  4106a1:	cmp    ebp,0xffffd8f0
  4106a7:	jne    4106e4 <__ctype_b_loc@plt+0xe414>
  4106a9:	mov    edx,0xa0
  4106ae:	add    rdx,QWORD PTR [r14+0x20]
  4106b2:	jmp    410717 <__ctype_b_loc@plt+0xe447>
  4106b4:	lea    rdx,[r14+0x78]
  4106b8:	jmp    410717 <__ctype_b_loc@plt+0xe447>
  4106ba:	mov    rcx,QWORD PTR [r14+0x28]
  4106be:	mov    rcx,QWORD PTR [rcx+0x8]
  4106c2:	mov    rcx,QWORD PTR [rcx]
  4106c5:	lea    rdx,[r14+0x88]
  4106cc:	mov    rcx,QWORD PTR [rcx+0x18]
  4106d0:	mov    QWORD PTR [r14+0x88],rcx
  4106d7:	mov    DWORD PTR [r14+0x90],0x5
  4106e2:	jmp    410717 <__ctype_b_loc@plt+0xe447>
  4106e4:	mov    rcx,QWORD PTR [r14+0x28]
  4106e8:	mov    rcx,QWORD PTR [rcx+0x8]
  4106ec:	mov    rcx,QWORD PTR [rcx]
  4106ef:	mov    edx,0xffffd8ee
  4106f4:	sub    edx,ebp
  4106f6:	movzx  esi,BYTE PTR [rcx+0xb]
  4106fa:	cmp    edx,esi
  4106fc:	jg     410a44 <__ctype_b_loc@plt+0xe774>
  410702:	mov    edx,0xffffd8ed
  410707:	sub    edx,ebp
  410709:	movsxd rdx,edx
  41070c:	shl    rdx,0x4
  410710:	add    rdx,rcx
  410713:	add    rdx,0x28
  410717:	lea    rcx,[rip+0x193fa]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41071e:	cmp    rdx,rcx
  410721:	je     410a44 <__ctype_b_loc@plt+0xe774>
  410727:	cmp    DWORD PTR [rdx+0x8],0x0
  41072b:	jle    410a44 <__ctype_b_loc@plt+0xe774>
  410731:	test   ebp,ebp
  410733:	jle    410758 <__ctype_b_loc@plt+0xe488>
  410735:	mov    rax,QWORD PTR [r14+0x18]
  410739:	movsxd rcx,ebp
  41073c:	shl    rcx,0x4
  410740:	add    rax,rcx
  410743:	add    rax,0xfffffffffffffff0
  410747:	cmp    rax,QWORD PTR [r14+0x10]
  41074b:	lea    rcx,[rip+0x193c6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  410752:	cmovb  rcx,rax
  410756:	jmp    41076f <__ctype_b_loc@plt+0xe49f>
  410758:	cmp    ebp,0xffffd8f1
  41075e:	jl     41087c <__ctype_b_loc@plt+0xe5ac>
  410764:	movsxd rcx,ebp
  410767:	shl    rcx,0x4
  41076b:	add    rcx,QWORD PTR [r14+0x10]
  41076f:	mov    eax,DWORD PTR [rcx+0x8]
  410772:	cmp    eax,0x3
  410775:	je     41082c <__ctype_b_loc@plt+0xe55c>
  41077b:	cmp    eax,0x4
  41077e:	jne    41083a <__ctype_b_loc@plt+0xe56a>
  410784:	mov    r15,QWORD PTR [rcx]
  410787:	add    r15,0x18
  41078b:	mov    rsi,rsp
  41078e:	mov    rdi,r15
  410791:	call   4020b0 <strtod@plt>
  410796:	mov    rbx,QWORD PTR [rsp]
  41079a:	cmp    rbx,r15
  41079d:	je     41083a <__ctype_b_loc@plt+0xe56a>
  4107a3:	mov    r12b,BYTE PTR [rbx]
  4107a6:	mov    eax,r12d
  4107a9:	or     al,0x20
  4107ab:	cmp    al,0x78
  4107ad:	jne    4107df <__ctype_b_loc@plt+0xe50f>
  4107af:	mov    rsi,rsp
  4107b2:	mov    rdi,r15
  4107b5:	mov    edx,0x10
  4107ba:	call   402250 <strtoul@plt>
  4107bf:	vmovq  xmm0,rax
  4107c4:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x194a4]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  4107cc:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x194ac]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  4107d4:	vhaddpd xmm0,xmm0,xmm0
  4107d8:	mov    rbx,QWORD PTR [rsp]
  4107dc:	mov    r12b,BYTE PTR [rbx]
  4107df:	test   r12b,r12b
  4107e2:	je     410821 <__ctype_b_loc@plt+0xe551>
  4107e4:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  4107ea:	call   4022d0 <__ctype_b_loc@plt>
  4107ef:	mov    rax,QWORD PTR [rax]
  4107f2:	movzx  ecx,r12b
  4107f6:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4107fb:	je     41083a <__ctype_b_loc@plt+0xe56a>
  4107fd:	inc    rbx
  410800:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  410806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410810:	movzx  ecx,BYTE PTR [rbx]
  410813:	inc    rbx
  410816:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41081b:	jne    410810 <__ctype_b_loc@plt+0xe540>
  41081d:	test   cl,cl
  41081f:	jne    41083a <__ctype_b_loc@plt+0xe56a>
  410821:	lea    rcx,[rsp+0x8]
  410826:	vmovsd QWORD PTR [rsp+0x8],xmm0
  41082c:	vcvttsd2si rax,QWORD PTR [rcx]
  410831:	test   rax,rax
  410834:	jne    410a44 <__ctype_b_loc@plt+0xe774>
  41083a:	test   ebp,ebp
  41083c:	jle    410864 <__ctype_b_loc@plt+0xe594>
  41083e:	mov    rax,QWORD PTR [r14+0x18]
  410842:	movsxd rcx,ebp
  410845:	shl    rcx,0x4
  410849:	add    rcx,rax
  41084c:	add    rcx,0xfffffffffffffff0
  410850:	cmp    rcx,QWORD PTR [r14+0x10]
  410854:	lea    rax,[rip+0x192bd]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41085b:	cmovb  rax,rcx
  41085f:	jmp    4109aa <__ctype_b_loc@plt+0xe6da>
  410864:	cmp    ebp,0xffffd8f1
  41086a:	jl     4108a2 <__ctype_b_loc@plt+0xe5d2>
  41086c:	movsxd rax,ebp
  41086f:	shl    rax,0x4
  410873:	add    rax,QWORD PTR [r14+0x10]
  410877:	jmp    4109aa <__ctype_b_loc@plt+0xe6da>
  41087c:	cmp    ebp,0xffffd8ee
  410882:	je     4108d4 <__ctype_b_loc@plt+0xe604>
  410884:	cmp    ebp,0xffffd8ef
  41088a:	je     4108dd <__ctype_b_loc@plt+0xe60d>
  41088c:	cmp    ebp,0xffffd8f0
  410892:	jne    41090a <__ctype_b_loc@plt+0xe63a>
  410894:	mov    ecx,0xa0
  410899:	add    rcx,QWORD PTR [r14+0x20]
  41089d:	jmp    41076f <__ctype_b_loc@plt+0xe49f>
  4108a2:	cmp    ebp,0xffffd8ee
  4108a8:	je     410942 <__ctype_b_loc@plt+0xe672>
  4108ae:	cmp    ebp,0xffffd8ef
  4108b4:	je     410948 <__ctype_b_loc@plt+0xe678>
  4108ba:	cmp    ebp,0xffffd8f0
  4108c0:	jne    410972 <__ctype_b_loc@plt+0xe6a2>
  4108c6:	mov    eax,0xa0
  4108cb:	add    rax,QWORD PTR [r14+0x20]
  4108cf:	jmp    4109aa <__ctype_b_loc@plt+0xe6da>
  4108d4:	lea    rcx,[r14+0x78]
  4108d8:	jmp    41076f <__ctype_b_loc@plt+0xe49f>
  4108dd:	mov    rax,QWORD PTR [r14+0x28]
  4108e1:	mov    rax,QWORD PTR [rax+0x8]
  4108e5:	mov    rax,QWORD PTR [rax]
  4108e8:	lea    rcx,[r14+0x88]
  4108ef:	mov    rax,QWORD PTR [rax+0x18]
  4108f3:	mov    QWORD PTR [r14+0x88],rax
  4108fa:	mov    DWORD PTR [r14+0x90],0x5
  410905:	jmp    41076f <__ctype_b_loc@plt+0xe49f>
  41090a:	mov    rax,QWORD PTR [r14+0x28]
  41090e:	mov    rax,QWORD PTR [rax+0x8]
  410912:	mov    rax,QWORD PTR [rax]
  410915:	mov    edx,0xffffd8ee
  41091a:	sub    edx,ebp
  41091c:	movzx  esi,BYTE PTR [rax+0xb]
  410920:	cmp    edx,esi
  410922:	jg     41076f <__ctype_b_loc@plt+0xe49f>
  410928:	mov    ecx,0xffffd8ed
  41092d:	sub    ecx,ebp
  41092f:	movsxd rcx,ecx
  410932:	shl    rcx,0x4
  410936:	add    rcx,rax
  410939:	add    rcx,0x28
  41093d:	jmp    41076f <__ctype_b_loc@plt+0xe49f>
  410942:	lea    rax,[r14+0x78]
  410946:	jmp    4109aa <__ctype_b_loc@plt+0xe6da>
  410948:	mov    rax,QWORD PTR [r14+0x28]
  41094c:	mov    rax,QWORD PTR [rax+0x8]
  410950:	mov    rcx,QWORD PTR [rax]
  410953:	lea    rax,[r14+0x88]
  41095a:	mov    rcx,QWORD PTR [rcx+0x18]
  41095e:	mov    QWORD PTR [r14+0x88],rcx
  410965:	mov    DWORD PTR [r14+0x90],0x5
  410970:	jmp    4109aa <__ctype_b_loc@plt+0xe6da>
  410972:	mov    rax,QWORD PTR [r14+0x28]
  410976:	mov    rax,QWORD PTR [rax+0x8]
  41097a:	mov    rax,QWORD PTR [rax]
  41097d:	mov    ecx,0xffffd8ee
  410982:	sub    ecx,ebp
  410984:	movzx  edx,BYTE PTR [rax+0xb]
  410988:	cmp    ecx,edx
  41098a:	jle    410995 <__ctype_b_loc@plt+0xe6c5>
  41098c:	lea    rax,[rip+0x19185]        # 429b18 <__ctype_b_loc@plt+0x27848>
  410993:	jmp    4109aa <__ctype_b_loc@plt+0xe6da>
  410995:	mov    ecx,0xffffd8ed
  41099a:	sub    ecx,ebp
  41099c:	movsxd rcx,ecx
  41099f:	shl    rcx,0x4
  4109a3:	add    rax,rcx
  4109a6:	add    rax,0x28
  4109aa:	mov    ecx,DWORD PTR [rax+0x8]
  4109ad:	cmp    ecx,0x3
  4109b0:	je     410a42 <__ctype_b_loc@plt+0xe772>
  4109b6:	cmp    ecx,0x4
  4109b9:	jne    410a31 <__ctype_b_loc@plt+0xe761>
  4109bb:	mov    r15,QWORD PTR [rax]
  4109be:	add    r15,0x18
  4109c2:	mov    rsi,rsp
  4109c5:	mov    rdi,r15
  4109c8:	call   4020b0 <strtod@plt>
  4109cd:	mov    rbx,QWORD PTR [rsp]
  4109d1:	cmp    rbx,r15
  4109d4:	je     410a31 <__ctype_b_loc@plt+0xe761>
  4109d6:	mov    r12b,BYTE PTR [rbx]
  4109d9:	mov    eax,r12d
  4109dc:	or     al,0x20
  4109de:	cmp    al,0x78
  4109e0:	jne    4109f9 <__ctype_b_loc@plt+0xe729>
  4109e2:	mov    rsi,rsp
  4109e5:	mov    rdi,r15
  4109e8:	mov    edx,0x10
  4109ed:	call   402250 <strtoul@plt>
  4109f2:	mov    rbx,QWORD PTR [rsp]
  4109f6:	mov    r12b,BYTE PTR [rbx]
  4109f9:	test   r12b,r12b
  4109fc:	je     410a42 <__ctype_b_loc@plt+0xe772>
  4109fe:	call   4022d0 <__ctype_b_loc@plt>
  410a03:	mov    rax,QWORD PTR [rax]
  410a06:	movzx  ecx,r12b
  410a0a:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  410a0f:	je     410a31 <__ctype_b_loc@plt+0xe761>
  410a11:	inc    rbx
  410a14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a1e:	xchg   ax,ax
  410a20:	movzx  ecx,BYTE PTR [rbx]
  410a23:	inc    rbx
  410a26:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  410a2b:	jne    410a20 <__ctype_b_loc@plt+0xe750>
  410a2d:	test   cl,cl
  410a2f:	je     410a42 <__ctype_b_loc@plt+0xe772>
  410a31:	lea    rdx,[rip+0x19469]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  410a38:	mov    rdi,r14
  410a3b:	mov    esi,ebp
  410a3d:	call   410520 <__ctype_b_loc@plt+0xe250>
  410a42:	xor    eax,eax
  410a44:	add    rsp,0x20
  410a48:	pop    rbx
  410a49:	pop    r12
  410a4b:	pop    r14
  410a4d:	pop    r15
  410a4f:	pop    rbp
  410a50:	ret    
  410a51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  410a60:	mov    rax,QWORD PTR [rsi+0x8]
  410a64:	test   rax,rax
  410a67:	je     410a78 <__ctype_b_loc@plt+0xe7a8>
  410a69:	mov    QWORD PTR [rdx],rax
  410a6c:	mov    QWORD PTR [rsi+0x8],0x0
  410a74:	mov    rax,QWORD PTR [rsi]
  410a77:	ret    
  410a78:	xor    eax,eax
  410a7a:	ret    
  410a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  410a80:	push   rbp
  410a81:	push   r15
  410a83:	push   r14
  410a85:	push   r13
  410a87:	push   r12
  410a89:	push   rbx
  410a8a:	sub    rsp,0x18
  410a8e:	mov    r15,rcx
  410a91:	mov    rbx,rdi
  410a94:	movzx  r13d,WORD PTR [rdi+0x60]
  410a99:	mov    r12,QWORD PTR [rdi+0x28]
  410a9d:	mov    rbp,QWORD PTR [rdi+0x50]
  410aa1:	mov    al,BYTE PTR [rdi+0x65]
  410aa4:	mov    BYTE PTR [rsp+0xf],al
  410aa8:	mov    rax,QWORD PTR [rdi+0xb0]
  410aaf:	mov    QWORD PTR [rsp+0x10],rax
  410ab4:	mov    QWORD PTR [rdi+0xb0],r8
  410abb:	call   403340 <__ctype_b_loc@plt+0x1070>
  410ac0:	mov    r14d,eax
  410ac3:	test   eax,eax
  410ac5:	je     410bd8 <__ctype_b_loc@plt+0xe908>
  410acb:	sub    r12,rbp
  410ace:	add    r15,QWORD PTR [rbx+0x40]
  410ad2:	mov    rdi,rbx
  410ad5:	mov    rsi,r15
  410ad8:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  410add:	lea    eax,[r14-0x2]
  410ae1:	cmp    eax,0x2
  410ae4:	jb     410b00 <__ctype_b_loc@plt+0xe830>
  410ae6:	cmp    r14d,0x5
  410aea:	je     410b10 <__ctype_b_loc@plt+0xe840>
  410aec:	cmp    r14d,0x4
  410af0:	jne    410b30 <__ctype_b_loc@plt+0xe860>
  410af2:	lea    rsi,[rip+0x19296]        # 429d8f <__ctype_b_loc@plt+0x27abf>
  410af9:	mov    edx,0x11
  410afe:	jmp    410b1c <__ctype_b_loc@plt+0xe84c>
  410b00:	mov    rax,QWORD PTR [rbx+0x10]
  410b04:	mov    rcx,QWORD PTR [rax-0x10]
  410b08:	mov    QWORD PTR [r15],rcx
  410b0b:	mov    eax,DWORD PTR [rax-0x8]
  410b0e:	jmp    410b2c <__ctype_b_loc@plt+0xe85c>
  410b10:	lea    rsi,[rip+0x1928a]        # 429da1 <__ctype_b_loc@plt+0x27ad1>
  410b17:	mov    edx,0x17
  410b1c:	mov    rdi,rbx
  410b1f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  410b24:	mov    QWORD PTR [r15],rax
  410b27:	mov    eax,0x4
  410b2c:	mov    DWORD PTR [r15+0x8],eax
  410b30:	add    r15,0x10
  410b34:	mov    QWORD PTR [rbx+0x10],r15
  410b38:	mov    WORD PTR [rbx+0x60],r13w
  410b3d:	mov    r15,QWORD PTR [rbx+0x50]
  410b41:	lea    rax,[r15+r12*1]
  410b45:	mov    QWORD PTR [rbx+0x28],rax
  410b49:	mov    rax,QWORD PTR [r15+r12*1]
  410b4d:	mov    QWORD PTR [rbx+0x18],rax
  410b51:	mov    rax,QWORD PTR [r15+r12*1+0x18]
  410b56:	mov    QWORD PTR [rbx+0x30],rax
  410b5a:	mov    al,BYTE PTR [rsp+0xf]
  410b5e:	mov    BYTE PTR [rbx+0x65],al
  410b61:	movsxd rax,DWORD PTR [rbx+0x5c]
  410b65:	cmp    rax,0x4e21
  410b6b:	jl     410bd8 <__ctype_b_loc@plt+0xe908>
  410b6d:	shr    r12,0x3
  410b71:	imul   ecx,r12d,0xcccccccd
  410b78:	cmp    ecx,0x4e1e
  410b7e:	jg     410bd8 <__ctype_b_loc@plt+0xe908>
  410b80:	shl    rax,0x3
  410b84:	lea    r12,[rax+rax*4]
  410b88:	mov    rbp,QWORD PTR [rbx+0x20]
  410b8c:	mov    rdi,QWORD PTR [rbp+0x18]
  410b90:	mov    ecx,0xc3500
  410b95:	mov    rsi,r15
  410b98:	mov    rdx,r12
  410b9b:	call   QWORD PTR [rbp+0x10]
  410b9e:	test   rax,rax
  410ba1:	je     410bf6 <__ctype_b_loc@plt+0xe926>
  410ba3:	mov    rcx,QWORD PTR [rbp+0x78]
  410ba7:	sub    rcx,r12
  410baa:	add    rcx,0xc3500
  410bb1:	mov    QWORD PTR [rbp+0x78],rcx
  410bb5:	mov    QWORD PTR [rbx+0x50],rax
  410bb9:	mov    DWORD PTR [rbx+0x5c],0x4e20
  410bc0:	mov    rcx,QWORD PTR [rbx+0x28]
  410bc4:	sub    rcx,r15
  410bc7:	add    rcx,rax
  410bca:	mov    QWORD PTR [rbx+0x28],rcx
  410bce:	add    rax,0xc34d8
  410bd4:	mov    QWORD PTR [rbx+0x48],rax
  410bd8:	mov    rax,QWORD PTR [rsp+0x10]
  410bdd:	mov    QWORD PTR [rbx+0xb0],rax
  410be4:	mov    eax,r14d
  410be7:	add    rsp,0x18
  410beb:	pop    rbx
  410bec:	pop    r12
  410bee:	pop    r13
  410bf0:	pop    r14
  410bf2:	pop    r15
  410bf4:	pop    rbp
  410bf5:	ret    
  410bf6:	mov    rdi,QWORD PTR [rbx+0xa8]
  410bfd:	test   rdi,rdi
  410c00:	jne    410c38 <__ctype_b_loc@plt+0xe968>
  410c02:	mov    BYTE PTR [rbx+0xa],0x4
  410c06:	mov    rax,QWORD PTR [rbx+0x20]
  410c0a:	cmp    QWORD PTR [rax+0x98],0x0
  410c12:	je     410c2e <__ctype_b_loc@plt+0xe95e>
  410c14:	mov    rdi,rbx
  410c17:	mov    esi,0x4
  410c1c:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  410c21:	mov    rax,QWORD PTR [rbx+0x20]
  410c25:	mov    rdi,rbx
  410c28:	call   QWORD PTR [rax+0x98]
  410c2e:	mov    edi,0x1
  410c33:	call   402280 <exit@plt>
  410c38:	mov    DWORD PTR [rdi+0xd0],0x4
  410c42:	add    rdi,0x8
  410c46:	mov    esi,0x1
  410c4b:	call   402230 <longjmp@plt>
  410c50:	push   rbp
  410c51:	push   r15
  410c53:	push   r14
  410c55:	push   r13
  410c57:	push   r12
  410c59:	push   rbx
  410c5a:	sub    rsp,0x2c8
  410c61:	mov    rbx,rsi
  410c64:	mov    r15,rdi
  410c67:	mov    rax,QWORD PTR [rdi+0x20]
  410c6b:	mov    rcx,QWORD PTR [rax+0x78]
  410c6f:	cmp    rcx,QWORD PTR [rax+0x70]
  410c73:	jb     410c7d <__ctype_b_loc@plt+0xe9ad>
  410c75:	mov    rdi,r15
  410c78:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  410c7d:	mov    r14,QWORD PTR [rbx]
  410c80:	mov    rbp,QWORD PTR [rbx+0x20]
  410c84:	lea    rax,[rbx+0x8]
  410c88:	mov    QWORD PTR [rsp+0x50],rax
  410c8d:	mov    rdi,rbp
  410c90:	call   4020e0 <strlen@plt>
  410c95:	mov    rdi,r15
  410c98:	mov    rsi,rbp
  410c9b:	mov    rdx,rax
  410c9e:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  410ca3:	mov    BYTE PTR [rsp+0x60],0x2e
  410ca8:	mov    QWORD PTR [rsp+0x40],r15
  410cad:	mov    DWORD PTR [rsp+0x28],0x11f
  410cb5:	mov    QWORD PTR [rsp+0x48],r14
  410cba:	mov    QWORD PTR [rsp+0x38],0x0
  410cc3:	movabs rcx,0x100000001
  410ccd:	mov    QWORD PTR [rsp+0xc],rcx
  410cd2:	mov    QWORD PTR [rsp+0x58],rax
  410cd7:	mov    rsi,QWORD PTR [rbx+0x8]
  410cdb:	mov    r12,QWORD PTR [rbx+0x18]
  410cdf:	mov    rbp,QWORD PTR [r15+0x20]
  410ce3:	mov    rdi,QWORD PTR [rbp+0x18]
  410ce7:	mov    ecx,0x20
  410cec:	mov    rdx,r12
  410cef:	call   QWORD PTR [rbp+0x10]
  410cf2:	test   rax,rax
  410cf5:	je     41101d <__ctype_b_loc@plt+0xed4d>
  410cfb:	mov    rcx,QWORD PTR [rbp+0x78]
  410cff:	sub    rcx,r12
  410d02:	add    rcx,0x20
  410d06:	mov    QWORD PTR [rbp+0x78],rcx
  410d0a:	mov    QWORD PTR [rbx+0x8],rax
  410d0e:	mov    QWORD PTR [rbx+0x18],0x20
  410d16:	sub    QWORD PTR [r14],0x1
  410d1a:	jae    410d4f <__ctype_b_loc@plt+0xea7f>
  410d1c:	mov    rsi,QWORD PTR [r14+0x18]
  410d20:	mov    rdi,QWORD PTR [r14+0x20]
  410d24:	lea    rdx,[rsp+0x70]
  410d29:	call   QWORD PTR [r14+0x10]
  410d2d:	mov    ecx,0xffffffff
  410d32:	test   rax,rax
  410d35:	je     410d5e <__ctype_b_loc@plt+0xea8e>
  410d37:	mov    rdx,QWORD PTR [rsp+0x70]
  410d3c:	test   rdx,rdx
  410d3f:	je     410d5e <__ctype_b_loc@plt+0xea8e>
  410d41:	dec    rdx
  410d44:	mov    QWORD PTR [r14],rdx
  410d47:	mov    rcx,rax
  410d4a:	inc    rcx
  410d4d:	jmp    410d57 <__ctype_b_loc@plt+0xea87>
  410d4f:	mov    rax,QWORD PTR [r14+0x8]
  410d53:	lea    rcx,[rax+0x1]
  410d57:	mov    QWORD PTR [r14+0x8],rcx
  410d5b:	movzx  ecx,BYTE PTR [rax]
  410d5e:	mov    DWORD PTR [rsp+0x8],ecx
  410d62:	lea    rbx,[rsp+0x8]
  410d67:	lea    rsi,[rsp+0x70]
  410d6c:	mov    rdi,rbx
  410d6f:	call   411080 <__ctype_b_loc@plt+0xedb0>
  410d74:	mov    rax,QWORD PTR [rsp+0x70]
  410d79:	mov    BYTE PTR [rax+0x72],0x2
  410d7d:	mov    eax,DWORD PTR [rsp+0xc]
  410d81:	mov    ecx,DWORD PTR [rsp+0x28]
  410d85:	mov    DWORD PTR [rsp+0x10],eax
  410d89:	cmp    ecx,0x11f
  410d8f:	jne    410da6 <__ctype_b_loc@plt+0xead6>
  410d91:	lea    rsi,[rsp+0x20]
  410d96:	lea    rdi,[rsp+0x8]
  410d9b:	call   411660 <__ctype_b_loc@plt+0xf390>
  410da0:	mov    DWORD PTR [rsp+0x18],eax
  410da4:	jmp    410db9 <__ctype_b_loc@plt+0xeae9>
  410da6:	vmovups xmm0,XMMWORD PTR [rbx+0x20]
  410dab:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  410db1:	mov    DWORD PTR [rsp+0x28],0x11f
  410db9:	mov    rax,QWORD PTR [rsp+0x40]
  410dbe:	mov    ecx,DWORD PTR [rax+0x60]
  410dc1:	inc    ecx
  410dc3:	mov    WORD PTR [rax+0x60],cx
  410dc7:	movzx  eax,cx
  410dca:	cmp    eax,0xc9
  410dcf:	jb     410de4 <__ctype_b_loc@plt+0xeb14>
  410dd1:	lea    rsi,[rip+0x194df]        # 42a2b7 <__ctype_b_loc@plt+0x27fe7>
  410dd8:	lea    rdi,[rsp+0x8]
  410ddd:	xor    edx,edx
  410ddf:	call   413660 <__ctype_b_loc@plt+0x11390>
  410de4:	lea    r13,[rsp+0x18]
  410de9:	lea    r12,[rsp+0x20]
  410dee:	lea    rbx,[rsp+0x8]
  410df3:	mov    r14d,0x8010007
  410df9:	jmp    410e1f <__ctype_b_loc@plt+0xeb4f>
  410dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  410e00:	mov    rdi,rbx
  410e03:	mov    rsi,r12
  410e06:	call   411660 <__ctype_b_loc@plt+0xf390>
  410e0b:	mov    DWORD PTR [rsp+0x18],eax
  410e0f:	mov    rax,QWORD PTR [rsp+0x38]
  410e14:	movzx  ecx,BYTE PTR [rax+0x4a]
  410e18:	mov    DWORD PTR [rax+0x3c],ecx
  410e1b:	test   ebp,ebp
  410e1d:	jne    410e73 <__ctype_b_loc@plt+0xeba3>
  410e1f:	mov    eax,DWORD PTR [rsp+0x18]
  410e23:	lea    ecx,[rax-0x104]
  410e29:	cmp    ecx,0x1b
  410e2c:	ja     410e34 <__ctype_b_loc@plt+0xeb64>
  410e2e:	bt     r14d,ecx
  410e32:	jb     410e77 <__ctype_b_loc@plt+0xeba7>
  410e34:	mov    rdi,rbx
  410e37:	call   4142e0 <__ctype_b_loc@plt+0x12010>
  410e3c:	mov    ebp,eax
  410e3e:	cmp    DWORD PTR [rsp+0x18],0x3b
  410e43:	jne    410e0f <__ctype_b_loc@plt+0xeb3f>
  410e45:	mov    eax,DWORD PTR [rsp+0xc]
  410e49:	mov    ecx,DWORD PTR [rsp+0x28]
  410e4d:	mov    DWORD PTR [rsp+0x10],eax
  410e51:	cmp    ecx,0x11f
  410e57:	je     410e00 <__ctype_b_loc@plt+0xeb30>
  410e59:	lea    rax,[rsp+0x8]
  410e5e:	vmovups xmm0,XMMWORD PTR [rax+0x20]
  410e63:	vmovups XMMWORD PTR [r13+0x0],xmm0
  410e69:	mov    DWORD PTR [rsp+0x28],0x11f
  410e71:	jmp    410e0f <__ctype_b_loc@plt+0xeb3f>
  410e73:	mov    eax,DWORD PTR [rsp+0x18]
  410e77:	mov    rdi,QWORD PTR [rsp+0x40]
  410e7c:	dec    WORD PTR [rdi+0x60]
  410e80:	cmp    eax,0x11f
  410e85:	je     410ead <__ctype_b_loc@plt+0xebdd>
  410e87:	lea    rsi,[rip+0x19607]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  410e8e:	lea    rdx,[rip+0x191cf]        # 42a064 <__ctype_b_loc@plt+0x27d94>
  410e95:	xor    eax,eax
  410e97:	call   404800 <__ctype_b_loc@plt+0x2530>
  410e9c:	mov    edx,DWORD PTR [rsp+0x18]
  410ea0:	lea    rdi,[rsp+0x8]
  410ea5:	mov    rsi,rax
  410ea8:	call   413660 <__ctype_b_loc@plt+0x11390>
  410ead:	lea    rdi,[rsp+0x8]
  410eb2:	call   411230 <__ctype_b_loc@plt+0xef60>
  410eb7:	mov    r13,QWORD PTR [rsp+0x70]
  410ebc:	mov    al,BYTE PTR [r13+0x70]
  410ec0:	mov    BYTE PTR [rsp+0x7],al
  410ec4:	movzx  r12d,al
  410ec8:	mov    rbp,QWORD PTR [r15+0x20]
  410ecc:	mov    rax,QWORD PTR [r15+0x78]
  410ed0:	mov    QWORD PTR [rsp+0x68],rax
  410ed5:	lea    rbx,[r12*8+0x28]
  410edd:	mov    rdi,QWORD PTR [rbp+0x18]
  410ee1:	xor    esi,esi
  410ee3:	xor    edx,edx
  410ee5:	mov    rcx,rbx
  410ee8:	call   QWORD PTR [rbp+0x10]
  410eeb:	test   rax,rax
  410eee:	je     41101d <__ctype_b_loc@plt+0xed4d>
  410ef4:	mov    r14,rax
  410ef7:	add    QWORD PTR [rbp+0x78],rbx
  410efb:	mov    rax,QWORD PTR [r15+0x20]
  410eff:	mov    rcx,QWORD PTR [rax+0x28]
  410f03:	mov    QWORD PTR [r14],rcx
  410f06:	mov    QWORD PTR [rax+0x28],r14
  410f0a:	mov    al,BYTE PTR [rax+0x20]
  410f0d:	and    al,0x3
  410f0f:	mov    BYTE PTR [r14+0x9],al
  410f13:	mov    BYTE PTR [r14+0x8],0x6
  410f18:	mov    BYTE PTR [r14+0xa],0x0
  410f1d:	mov    rax,QWORD PTR [rsp+0x68]
  410f22:	mov    QWORD PTR [r14+0x18],rax
  410f26:	mov    al,BYTE PTR [rsp+0x7]
  410f2a:	mov    BYTE PTR [r14+0xb],al
  410f2e:	test   al,al
  410f30:	je     410f56 <__ctype_b_loc@plt+0xec86>
  410f32:	lea    rdx,[r12*8+0x0]
  410f3a:	dec    r12d
  410f3d:	shl    r12,0x3
  410f41:	mov    rax,rdx
  410f44:	sub    rax,r12
  410f47:	lea    rdi,[rax+r14*1]
  410f4b:	add    rdi,0x20
  410f4f:	xor    esi,esi
  410f51:	call   402100 <memset@plt>
  410f56:	mov    QWORD PTR [r14+0x20],r13
  410f5a:	cmp    BYTE PTR [r13+0x70],0x0
  410f5f:	je     410fd3 <__ctype_b_loc@plt+0xed03>
  410f61:	xor    ebp,ebp
  410f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f6d:	nop    DWORD PTR [rax]
  410f70:	mov    rbx,QWORD PTR [r15+0x20]
  410f74:	mov    rdi,QWORD PTR [rbx+0x18]
  410f78:	mov    ecx,0x28
  410f7d:	xor    esi,esi
  410f7f:	xor    edx,edx
  410f81:	call   QWORD PTR [rbx+0x10]
  410f84:	test   rax,rax
  410f87:	je     41101d <__ctype_b_loc@plt+0xed4d>
  410f8d:	add    QWORD PTR [rbx+0x78],0x28
  410f92:	mov    rcx,QWORD PTR [r15+0x20]
  410f96:	mov    rdx,QWORD PTR [rcx+0x28]
  410f9a:	mov    QWORD PTR [rax],rdx
  410f9d:	mov    QWORD PTR [rcx+0x28],rax
  410fa1:	movzx  ecx,BYTE PTR [rcx+0x20]
  410fa5:	and    cl,0x3
  410fa8:	mov    BYTE PTR [rax+0x9],cl
  410fab:	mov    BYTE PTR [rax+0x8],0xa
  410faf:	mov    rcx,rax
  410fb2:	add    rcx,0x18
  410fb6:	mov    QWORD PTR [rax+0x10],rcx
  410fba:	mov    DWORD PTR [rax+0x20],0x0
  410fc1:	mov    QWORD PTR [r14+rbp*8+0x28],rax
  410fc6:	inc    rbp
  410fc9:	movzx  eax,BYTE PTR [r13+0x70]
  410fce:	cmp    rbp,rax
  410fd1:	jb     410f70 <__ctype_b_loc@plt+0xeca0>
  410fd3:	mov    rax,QWORD PTR [r15+0x10]
  410fd7:	mov    QWORD PTR [rax],r14
  410fda:	mov    DWORD PTR [rax+0x8],0x6
  410fe1:	mov    rax,QWORD PTR [r15+0x38]
  410fe5:	sub    rax,QWORD PTR [r15+0x10]
  410fe9:	cmp    rax,0x10
  410fed:	jg     411006 <__ctype_b_loc@plt+0xed36>
  410fef:	mov    eax,DWORD PTR [r15+0x58]
  410ff3:	lea    ecx,[rax+0x1]
  410ff6:	lea    esi,[rax+rax*1]
  410ff9:	test   eax,eax
  410ffb:	cmovle esi,ecx
  410ffe:	mov    rdi,r15
  411001:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  411006:	add    QWORD PTR [r15+0x10],0x10
  41100b:	add    rsp,0x2c8
  411012:	pop    rbx
  411013:	pop    r12
  411015:	pop    r13
  411017:	pop    r14
  411019:	pop    r15
  41101b:	pop    rbp
  41101c:	ret    
  41101d:	mov    rdi,QWORD PTR [r15+0xa8]
  411024:	test   rdi,rdi
  411027:	jne    411060 <__ctype_b_loc@plt+0xed90>
  411029:	mov    BYTE PTR [r15+0xa],0x4
  41102e:	mov    rax,QWORD PTR [r15+0x20]
  411032:	cmp    QWORD PTR [rax+0x98],0x0
  41103a:	je     411056 <__ctype_b_loc@plt+0xed86>
  41103c:	mov    rdi,r15
  41103f:	mov    esi,0x4
  411044:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  411049:	mov    rax,QWORD PTR [r15+0x20]
  41104d:	mov    rdi,r15
  411050:	call   QWORD PTR [rax+0x98]
  411056:	mov    edi,0x1
  41105b:	call   402280 <exit@plt>
  411060:	mov    DWORD PTR [rdi+0xd0],0x4
  41106a:	add    rdi,0x8
  41106e:	mov    esi,0x1
  411073:	call   402230 <longjmp@plt>
  411078:	nop    DWORD PTR [rax+rax*1+0x0]
  411080:	push   r15
  411082:	push   r14
  411084:	push   r13
  411086:	push   r12
  411088:	push   rbx
  411089:	mov    r15,rsi
  41108c:	mov    r12,rdi
  41108f:	mov    r14,QWORD PTR [rdi+0x38]
  411093:	mov    r13,QWORD PTR [r14+0x20]
  411097:	mov    rdi,QWORD PTR [r13+0x18]
  41109b:	mov    ecx,0x78
  4110a0:	xor    esi,esi
  4110a2:	xor    edx,edx
  4110a4:	call   QWORD PTR [r13+0x10]
  4110a8:	test   rax,rax
  4110ab:	je     4111d3 <__ctype_b_loc@plt+0xef03>
  4110b1:	mov    rbx,rax
  4110b4:	add    QWORD PTR [r13+0x78],0x78
  4110b9:	mov    rax,QWORD PTR [r14+0x20]
  4110bd:	mov    rcx,QWORD PTR [rax+0x28]
  4110c1:	mov    QWORD PTR [rbx],rcx
  4110c4:	mov    QWORD PTR [rax+0x28],rbx
  4110c8:	mov    al,BYTE PTR [rax+0x20]
  4110cb:	and    al,0x3
  4110cd:	mov    BYTE PTR [rbx+0x9],al
  4110d0:	mov    BYTE PTR [rbx+0x8],0x9
  4110d4:	vxorps xmm0,xmm0,xmm0
  4110d8:	vmovups YMMWORD PTR [rbx+0x10],ymm0
  4110dd:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  4110e2:	vmovups YMMWORD PTR [rbx+0x48],ymm0
  4110e7:	mov    DWORD PTR [rbx+0x70],0x0
  4110ee:	mov    QWORD PTR [r15],rbx
  4110f1:	mov    rax,QWORD PTR [r12+0x30]
  4110f6:	mov    QWORD PTR [r15+0x10],rax
  4110fa:	mov    QWORD PTR [r15+0x18],r12
  4110fe:	mov    QWORD PTR [r15+0x20],r14
  411102:	mov    QWORD PTR [r12+0x30],r15
  411107:	movabs rax,0xffffffff00000000
  411111:	mov    QWORD PTR [r15+0x30],rax
  411115:	mov    DWORD PTR [r15+0x38],0xffffffff
  41111d:	mov    QWORD PTR [r15+0x28],0x0
  411125:	mov    QWORD PTR [r15+0x3c],0x0
  41112d:	mov    QWORD PTR [r15+0x43],0x0
  411135:	mov    rax,QWORD PTR [r12+0x50]
  41113a:	mov    QWORD PTR [rbx+0x40],rax
  41113e:	mov    BYTE PTR [rbx+0x73],0x2
  411142:	mov    rdi,r14
  411145:	xor    esi,esi
  411147:	xor    edx,edx
  411149:	vzeroupper 
  41114c:	call   403700 <__ctype_b_loc@plt+0x1430>
  411151:	mov    QWORD PTR [r15+0x8],rax
  411155:	mov    rcx,QWORD PTR [r14+0x10]
  411159:	mov    QWORD PTR [rcx],rax
  41115c:	mov    DWORD PTR [rcx+0x8],0x5
  411163:	mov    rax,QWORD PTR [r14+0x38]
  411167:	sub    rax,QWORD PTR [r14+0x10]
  41116b:	cmp    rax,0x10
  41116f:	jg     411188 <__ctype_b_loc@plt+0xeeb8>
  411171:	mov    eax,DWORD PTR [r14+0x58]
  411175:	lea    ecx,[rax+0x1]
  411178:	lea    esi,[rax+rax*1]
  41117b:	test   eax,eax
  41117d:	cmovle esi,ecx
  411180:	mov    rdi,r14
  411183:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  411188:	mov    rax,QWORD PTR [r14+0x10]
  41118c:	lea    rcx,[rax+0x10]
  411190:	mov    QWORD PTR [r14+0x10],rcx
  411194:	mov    QWORD PTR [rax+0x10],rbx
  411198:	mov    DWORD PTR [rax+0x18],0x9
  41119f:	mov    rax,QWORD PTR [r14+0x38]
  4111a3:	sub    rax,QWORD PTR [r14+0x10]
  4111a7:	cmp    rax,0x10
  4111ab:	jg     4111c4 <__ctype_b_loc@plt+0xeef4>
  4111ad:	mov    eax,DWORD PTR [r14+0x58]
  4111b1:	lea    ecx,[rax+0x1]
  4111b4:	lea    esi,[rax+rax*1]
  4111b7:	test   eax,eax
  4111b9:	cmovle esi,ecx
  4111bc:	mov    rdi,r14
  4111bf:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  4111c4:	add    QWORD PTR [r14+0x10],0x10
  4111c9:	pop    rbx
  4111ca:	pop    r12
  4111cc:	pop    r13
  4111ce:	pop    r14
  4111d0:	pop    r15
  4111d2:	ret    
  4111d3:	mov    rdi,QWORD PTR [r14+0xa8]
  4111da:	test   rdi,rdi
  4111dd:	jne    411216 <__ctype_b_loc@plt+0xef46>
  4111df:	mov    BYTE PTR [r14+0xa],0x4
  4111e4:	mov    rax,QWORD PTR [r14+0x20]
  4111e8:	cmp    QWORD PTR [rax+0x98],0x0
  4111f0:	je     41120c <__ctype_b_loc@plt+0xef3c>
  4111f2:	mov    rdi,r14
  4111f5:	mov    esi,0x4
  4111fa:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4111ff:	mov    rax,QWORD PTR [r14+0x20]
  411203:	mov    rdi,r14
  411206:	call   QWORD PTR [rax+0x98]
  41120c:	mov    edi,0x1
  411211:	call   402280 <exit@plt>
  411216:	mov    DWORD PTR [rdi+0xd0],0x4
  411220:	add    rdi,0x8
  411224:	mov    esi,0x1
  411229:	call   402230 <longjmp@plt>
  41122e:	xchg   ax,ax
  411230:	push   rbp
  411231:	push   r15
  411233:	push   r14
  411235:	push   r13
  411237:	push   r12
  411239:	push   rbx
  41123a:	sub    rsp,0x18
  41123e:	mov    r15,QWORD PTR [rdi+0x30]
  411242:	mov    QWORD PTR [rsp+0x10],rdi
  411247:	mov    rbx,QWORD PTR [rdi+0x38]
  41124b:	mov    r14,QWORD PTR [r15]
  41124e:	movzx  eax,BYTE PTR [r15+0x4a]
  411253:	test   rax,rax
  411256:	mov    QWORD PTR [rsp],rbx
  41125a:	je     41131d <__ctype_b_loc@plt+0xf04d>
  411260:	mov    ecx,DWORD PTR [r15+0x30]
  411264:	mov    rdx,QWORD PTR [r14+0x30]
  411268:	lea    esi,[rax-0x1]
  41126b:	mov    ebx,eax
  41126d:	and    bl,0x3
  411270:	je     41129f <__ctype_b_loc@plt+0xefcf>
  411272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41127c:	nop    DWORD PTR [rax+0x0]
  411280:	lea    edi,[rax-0x1]
  411283:	movzx  edi,dil
  411287:	movzx  edi,WORD PTR [r15+rdi*2+0xc4]
  411290:	shl    rdi,0x4
  411294:	mov    DWORD PTR [rdx+rdi*1+0xc],ecx
  411298:	dec    rax
  41129b:	dec    bl
  41129d:	jne    411280 <__ctype_b_loc@plt+0xefb0>
  41129f:	cmp    sil,0x3
  4112a3:	jb     411314 <__ctype_b_loc@plt+0xf044>
  4112a5:	add    rax,0xfd
  4112ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4112b0:	lea    esi,[rax+0x2]
  4112b3:	movzx  esi,sil
  4112b7:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  4112c0:	shl    rsi,0x4
  4112c4:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  4112c8:	lea    esi,[rax+0x1]
  4112cb:	movzx  esi,sil
  4112cf:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  4112d8:	shl    rsi,0x4
  4112dc:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  4112e0:	movzx  esi,al
  4112e3:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  4112ec:	shl    rsi,0x4
  4112f0:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  4112f4:	lea    esi,[rax-0x1]
  4112f7:	movzx  esi,sil
  4112fb:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  411304:	shl    rsi,0x4
  411308:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  41130c:	add    rax,0xfffffffffffffffc
  411310:	cmp    al,0xfd
  411312:	jne    4112b0 <__ctype_b_loc@plt+0xefe0>
  411314:	mov    BYTE PTR [r15+0x4a],0x0
  411319:	mov    rbx,QWORD PTR [rsp]
  41131d:	mov    rax,QWORD PTR [r15+0x18]
  411321:	mov    edx,DWORD PTR [rax+0x8]
  411324:	mov    rdi,r15
  411327:	mov    esi,0x80001e
  41132c:	call   419020 <__ctype_b_loc@plt+0x16d50>
  411331:	movsxd r12,DWORD PTR [r15+0x30]
  411335:	cmp    r12,0xffffffffffffffff
  411339:	jl     411381 <__ctype_b_loc@plt+0xf0b1>
  41133b:	mov    DWORD PTR [rsp+0xc],r12d
  411340:	mov    rsi,QWORD PTR [r14+0x18]
  411344:	movsxd rbp,DWORD PTR [r14+0x50]
  411348:	shl    rbp,0x2
  41134c:	shl    r12,0x2
  411350:	mov    rbx,QWORD PTR [rbx+0x20]
  411354:	mov    rdi,QWORD PTR [rbx+0x18]
  411358:	mov    rdx,rbp
  41135b:	mov    rcx,r12
  41135e:	call   QWORD PTR [rbx+0x10]
  411361:	mov    r13,rax
  411364:	cmp    DWORD PTR [rsp+0xc],0x0
  411369:	je     411374 <__ctype_b_loc@plt+0xf0a4>
  41136b:	test   r13,r13
  41136e:	je     4115f1 <__ctype_b_loc@plt+0xf321>
  411374:	sub    r12,rbp
  411377:	add    QWORD PTR [rbx+0x78],r12
  41137b:	mov    rbx,QWORD PTR [rsp]
  41137f:	jmp    411395 <__ctype_b_loc@plt+0xf0c5>
  411381:	lea    rsi,[rip+0x18a31]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  411388:	xor    r13d,r13d
  41138b:	mov    rdi,rbx
  41138e:	xor    eax,eax
  411390:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  411395:	mov    QWORD PTR [r14+0x18],r13
  411399:	movsxd r12,DWORD PTR [r15+0x30]
  41139d:	mov    DWORD PTR [r14+0x50],r12d
  4113a1:	cmp    r12,0xffffffffffffffff
  4113a5:	jl     4113ed <__ctype_b_loc@plt+0xf11d>
  4113a7:	mov    DWORD PTR [rsp+0xc],r12d
  4113ac:	mov    rsi,QWORD PTR [r14+0x28]
  4113b0:	movsxd rbp,DWORD PTR [r14+0x54]
  4113b4:	shl    rbp,0x2
  4113b8:	shl    r12,0x2
  4113bc:	mov    rbx,QWORD PTR [rbx+0x20]
  4113c0:	mov    rdi,QWORD PTR [rbx+0x18]
  4113c4:	mov    rdx,rbp
  4113c7:	mov    rcx,r12
  4113ca:	call   QWORD PTR [rbx+0x10]
  4113cd:	mov    r13,rax
  4113d0:	cmp    DWORD PTR [rsp+0xc],0x0
  4113d5:	je     4113e0 <__ctype_b_loc@plt+0xf110>
  4113d7:	test   r13,r13
  4113da:	je     4115f1 <__ctype_b_loc@plt+0xf321>
  4113e0:	sub    r12,rbp
  4113e3:	add    QWORD PTR [rbx+0x78],r12
  4113e7:	mov    rbx,QWORD PTR [rsp]
  4113eb:	jmp    411401 <__ctype_b_loc@plt+0xf131>
  4113ed:	lea    rsi,[rip+0x189c5]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4113f4:	xor    r13d,r13d
  4113f7:	mov    rdi,rbx
  4113fa:	xor    eax,eax
  4113fc:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  411401:	mov    QWORD PTR [r14+0x28],r13
  411405:	mov    eax,DWORD PTR [r15+0x30]
  411409:	mov    DWORD PTR [r14+0x54],eax
  41140d:	movsxd r12,DWORD PTR [r15+0x40]
  411411:	cmp    r12,0xffffffffffffffff
  411415:	jl     41145d <__ctype_b_loc@plt+0xf18d>
  411417:	mov    DWORD PTR [rsp+0xc],r12d
  41141c:	mov    rsi,QWORD PTR [r14+0x10]
  411420:	movsxd rbp,DWORD PTR [r14+0x4c]
  411424:	shl    rbp,0x4
  411428:	shl    r12,0x4
  41142c:	mov    rbx,QWORD PTR [rbx+0x20]
  411430:	mov    rdi,QWORD PTR [rbx+0x18]
  411434:	mov    rdx,rbp
  411437:	mov    rcx,r12
  41143a:	call   QWORD PTR [rbx+0x10]
  41143d:	mov    r13,rax
  411440:	cmp    DWORD PTR [rsp+0xc],0x0
  411445:	je     411450 <__ctype_b_loc@plt+0xf180>
  411447:	test   r13,r13
  41144a:	je     4115f1 <__ctype_b_loc@plt+0xf321>
  411450:	sub    r12,rbp
  411453:	add    QWORD PTR [rbx+0x78],r12
  411457:	mov    rbx,QWORD PTR [rsp]
  41145b:	jmp    411471 <__ctype_b_loc@plt+0xf1a1>
  41145d:	lea    rsi,[rip+0x18955]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  411464:	xor    r13d,r13d
  411467:	mov    rdi,rbx
  41146a:	xor    eax,eax
  41146c:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  411471:	mov    QWORD PTR [r14+0x10],r13
  411475:	mov    eax,DWORD PTR [r15+0x40]
  411479:	mov    DWORD PTR [r14+0x4c],eax
  41147d:	movsxd r12,DWORD PTR [r15+0x44]
  411481:	cmp    r12,0xffffffffffffffff
  411485:	jl     4114cd <__ctype_b_loc@plt+0xf1fd>
  411487:	mov    DWORD PTR [rsp+0xc],r12d
  41148c:	mov    rsi,QWORD PTR [r14+0x20]
  411490:	movsxd rbp,DWORD PTR [r14+0x58]
  411494:	shl    rbp,0x3
  411498:	shl    r12,0x3
  41149c:	mov    rbx,QWORD PTR [rbx+0x20]
  4114a0:	mov    rdi,QWORD PTR [rbx+0x18]
  4114a4:	mov    rdx,rbp
  4114a7:	mov    rcx,r12
  4114aa:	call   QWORD PTR [rbx+0x10]
  4114ad:	mov    r13,rax
  4114b0:	cmp    DWORD PTR [rsp+0xc],0x0
  4114b5:	je     4114c0 <__ctype_b_loc@plt+0xf1f0>
  4114b7:	test   r13,r13
  4114ba:	je     4115f1 <__ctype_b_loc@plt+0xf321>
  4114c0:	sub    r12,rbp
  4114c3:	add    QWORD PTR [rbx+0x78],r12
  4114c7:	mov    rbx,QWORD PTR [rsp]
  4114cb:	jmp    4114e1 <__ctype_b_loc@plt+0xf211>
  4114cd:	lea    rsi,[rip+0x188e5]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4114d4:	xor    r13d,r13d
  4114d7:	mov    rdi,rbx
  4114da:	xor    eax,eax
  4114dc:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4114e1:	mov    QWORD PTR [r14+0x20],r13
  4114e5:	mov    eax,DWORD PTR [r15+0x44]
  4114e9:	mov    DWORD PTR [r14+0x58],eax
  4114ed:	movsx  r12,WORD PTR [r15+0x48]
  4114f2:	lea    rax,[r12+0x1]
  4114f7:	shr    rax,0x3c
  4114fb:	jne    411545 <__ctype_b_loc@plt+0xf275>
  4114fd:	mov    WORD PTR [rsp+0xc],r12w
  411503:	mov    rsi,QWORD PTR [r14+0x30]
  411507:	movsxd rbp,DWORD PTR [r14+0x5c]
  41150b:	shl    rbp,0x4
  41150f:	shl    r12,0x4
  411513:	mov    rbx,QWORD PTR [rbx+0x20]
  411517:	mov    rdi,QWORD PTR [rbx+0x18]
  41151b:	mov    rdx,rbp
  41151e:	mov    rcx,r12
  411521:	call   QWORD PTR [rbx+0x10]
  411524:	mov    r13,rax
  411527:	cmp    WORD PTR [rsp+0xc],0x0
  41152d:	je     411538 <__ctype_b_loc@plt+0xf268>
  41152f:	test   r13,r13
  411532:	je     4115f1 <__ctype_b_loc@plt+0xf321>
  411538:	sub    r12,rbp
  41153b:	add    QWORD PTR [rbx+0x78],r12
  41153f:	mov    rbx,QWORD PTR [rsp]
  411543:	jmp    411559 <__ctype_b_loc@plt+0xf289>
  411545:	lea    rsi,[rip+0x1886d]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  41154c:	xor    r13d,r13d
  41154f:	mov    rdi,rbx
  411552:	xor    eax,eax
  411554:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  411559:	mov    QWORD PTR [r14+0x30],r13
  41155d:	movsx  eax,WORD PTR [r15+0x48]
  411562:	mov    DWORD PTR [r14+0x5c],eax
  411566:	movzx  r13d,BYTE PTR [r14+0x70]
  41156b:	mov    rsi,QWORD PTR [r14+0x38]
  41156f:	movsxd r12,DWORD PTR [r14+0x48]
  411573:	shl    r12,0x3
  411577:	lea    rbp,[r13*8+0x0]
  41157f:	mov    rbx,QWORD PTR [rbx+0x20]
  411583:	mov    rdi,QWORD PTR [rbx+0x18]
  411587:	mov    rdx,r12
  41158a:	mov    rcx,rbp
  41158d:	call   QWORD PTR [rbx+0x10]
  411590:	test   r13,r13
  411593:	je     41159a <__ctype_b_loc@plt+0xf2ca>
  411595:	test   rax,rax
  411598:	je     4115f1 <__ctype_b_loc@plt+0xf321>
  41159a:	sub    rbp,r12
  41159d:	add    QWORD PTR [rbx+0x78],rbp
  4115a1:	mov    QWORD PTR [r14+0x38],rax
  4115a5:	movzx  eax,BYTE PTR [r14+0x70]
  4115aa:	mov    DWORD PTR [r14+0x48],eax
  4115ae:	mov    rax,QWORD PTR [r15+0x10]
  4115b2:	mov    rdi,QWORD PTR [rsp+0x10]
  4115b7:	mov    QWORD PTR [rdi+0x30],rax
  4115bb:	mov    eax,0xfffffee3
  4115c0:	add    eax,DWORD PTR [rdi+0x10]
  4115c3:	cmp    eax,0x1
  4115c6:	ja     4115d9 <__ctype_b_loc@plt+0xf309>
  4115c8:	mov    rsi,QWORD PTR [rdi+0x18]
  4115cc:	mov    rdx,QWORD PTR [rsi+0x10]
  4115d0:	add    rsi,0x18
  4115d4:	call   414230 <__ctype_b_loc@plt+0x11f60>
  4115d9:	mov    rax,QWORD PTR [rsp]
  4115dd:	add    QWORD PTR [rax+0x10],0xffffffffffffffe0
  4115e2:	add    rsp,0x18
  4115e6:	pop    rbx
  4115e7:	pop    r12
  4115e9:	pop    r13
  4115eb:	pop    r14
  4115ed:	pop    r15
  4115ef:	pop    rbp
  4115f0:	ret    
  4115f1:	mov    rax,QWORD PTR [rsp]
  4115f5:	mov    rdi,QWORD PTR [rax+0xa8]
  4115fc:	test   rdi,rdi
  4115ff:	jne    41163f <__ctype_b_loc@plt+0xf36f>
  411601:	mov    rax,QWORD PTR [rsp]
  411605:	mov    BYTE PTR [rax+0xa],0x4
  411609:	mov    rax,QWORD PTR [rax+0x20]
  41160d:	cmp    QWORD PTR [rax+0x98],0x0
  411615:	je     411635 <__ctype_b_loc@plt+0xf365>
  411617:	mov    rbx,QWORD PTR [rsp]
  41161b:	mov    rdi,rbx
  41161e:	mov    esi,0x4
  411623:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  411628:	mov    rax,QWORD PTR [rbx+0x20]
  41162c:	mov    rdi,rbx
  41162f:	call   QWORD PTR [rax+0x98]
  411635:	mov    edi,0x1
  41163a:	call   402280 <exit@plt>
  41163f:	mov    DWORD PTR [rdi+0xd0],0x4
  411649:	add    rdi,0x8
  41164d:	mov    esi,0x1
  411652:	call   402230 <longjmp@plt>
  411657:	nop    WORD PTR [rax+rax*1+0x0]
  411660:	push   rbp
  411661:	push   r15
  411663:	push   r14
  411665:	push   r13
  411667:	push   r12
  411669:	push   rbx
  41166a:	sub    rsp,0x38
  41166e:	mov    QWORD PTR [rsp+0x28],rsi
  411673:	mov    r12,rdi
  411676:	mov    rax,QWORD PTR [rdi+0x48]
  41167a:	mov    QWORD PTR [rax+0x8],0x0
  411682:	lea    r14,[rdi+0x40]
  411686:	mov    r15,rsp
  411689:	lea    rbp,[rip+0x17cac]        # 42933c <__ctype_b_loc@plt+0x2706c>
  411690:	mov    r13d,0x4801
  411696:	mov    QWORD PTR [rsp+0x20],rdi
  41169b:	jmp    4116a8 <__ctype_b_loc@plt+0xf3d8>
  41169d:	nop    DWORD PTR [rax]
  4116a0:	mov    rdi,r12
  4116a3:	call   412c60 <__ctype_b_loc@plt+0x10990>
  4116a8:	mov    ebx,DWORD PTR [r12]
  4116ac:	lea    ecx,[rbx+0x1]
  4116af:	cmp    ecx,0x5c
  4116b2:	ja     41170a <__ctype_b_loc@plt+0xf43a>
  4116b4:	mov    eax,0x11f
  4116b9:	movsxd rcx,DWORD PTR [rbp+rcx*4+0x0]
  4116be:	add    rcx,rbp
  4116c1:	jmp    rcx
  4116c3:	mov    rbx,QWORD PTR [r14]
  4116c6:	sub    QWORD PTR [rbx],0x1
  4116ca:	jae    411786 <__ctype_b_loc@plt+0xf4b6>
  4116d0:	mov    rsi,QWORD PTR [rbx+0x18]
  4116d4:	mov    rdi,QWORD PTR [rbx+0x20]
  4116d8:	mov    rdx,r15
  4116db:	call   QWORD PTR [rbx+0x10]
  4116de:	mov    ecx,0xffffffff
  4116e3:	test   rax,rax
  4116e6:	je     411795 <__ctype_b_loc@plt+0xf4c5>
  4116ec:	mov    rdx,QWORD PTR [rsp]
  4116f0:	test   rdx,rdx
  4116f3:	je     411795 <__ctype_b_loc@plt+0xf4c5>
  4116f9:	dec    rdx
  4116fc:	mov    QWORD PTR [rbx],rdx
  4116ff:	mov    rcx,rax
  411702:	inc    rcx
  411705:	jmp    41178e <__ctype_b_loc@plt+0xf4be>
  41170a:	cmp    ebx,0x7e
  41170d:	je     411c67 <__ctype_b_loc@plt+0xf997>
  411713:	movsxd r13,ebx
  411716:	call   4022d0 <__ctype_b_loc@plt>
  41171b:	mov    r12,rax
  41171e:	mov    rax,QWORD PTR [rax]
  411721:	movzx  eax,WORD PTR [rax+r13*2]
  411726:	test   eax,0x2000
  41172b:	je     4118b7 <__ctype_b_loc@plt+0xf5e7>
  411731:	mov    rbx,QWORD PTR [r14]
  411734:	sub    QWORD PTR [rbx],0x1
  411738:	mov    r13d,0x4801
  41173e:	jae    4117da <__ctype_b_loc@plt+0xf50a>
  411744:	mov    rsi,QWORD PTR [rbx+0x18]
  411748:	mov    rdi,QWORD PTR [rbx+0x20]
  41174c:	mov    rdx,r15
  41174f:	call   QWORD PTR [rbx+0x10]
  411752:	mov    ecx,0xffffffff
  411757:	test   rax,rax
  41175a:	mov    r12,QWORD PTR [rsp+0x20]
  41175f:	je     41177d <__ctype_b_loc@plt+0xf4ad>
  411761:	mov    rdx,QWORD PTR [rsp]
  411765:	test   rdx,rdx
  411768:	je     41177d <__ctype_b_loc@plt+0xf4ad>
  41176a:	dec    rdx
  41176d:	mov    QWORD PTR [rbx],rdx
  411770:	mov    rcx,rax
  411773:	inc    rcx
  411776:	mov    QWORD PTR [rbx+0x8],rcx
  41177a:	movzx  ecx,BYTE PTR [rax]
  41177d:	mov    DWORD PTR [r12],ecx
  411781:	jmp    4116a8 <__ctype_b_loc@plt+0xf3d8>
  411786:	mov    rax,QWORD PTR [rbx+0x8]
  41178a:	lea    rcx,[rax+0x1]
  41178e:	mov    QWORD PTR [rbx+0x8],rcx
  411792:	movzx  ecx,BYTE PTR [rax]
  411795:	mov    DWORD PTR [r12],ecx
  411799:	cmp    ecx,0x2d
  41179c:	jne    411930 <__ctype_b_loc@plt+0xf660>
  4117a2:	mov    rbx,QWORD PTR [r14]
  4117a5:	sub    QWORD PTR [rbx],0x1
  4117a9:	jae    4117f7 <__ctype_b_loc@plt+0xf527>
  4117ab:	mov    rsi,QWORD PTR [rbx+0x18]
  4117af:	mov    rdi,QWORD PTR [rbx+0x20]
  4117b3:	mov    rdx,r15
  4117b6:	call   QWORD PTR [rbx+0x10]
  4117b9:	mov    ecx,0xffffffff
  4117be:	test   rax,rax
  4117c1:	je     411806 <__ctype_b_loc@plt+0xf536>
  4117c3:	mov    rdx,QWORD PTR [rsp]
  4117c7:	test   rdx,rdx
  4117ca:	je     411806 <__ctype_b_loc@plt+0xf536>
  4117cc:	dec    rdx
  4117cf:	mov    QWORD PTR [rbx],rdx
  4117d2:	mov    rcx,rax
  4117d5:	inc    rcx
  4117d8:	jmp    4117ff <__ctype_b_loc@plt+0xf52f>
  4117da:	mov    rax,QWORD PTR [rbx+0x8]
  4117de:	lea    rcx,[rax+0x1]
  4117e2:	mov    QWORD PTR [rbx+0x8],rcx
  4117e6:	movzx  eax,BYTE PTR [rax]
  4117e9:	mov    r12,QWORD PTR [rsp+0x20]
  4117ee:	mov    DWORD PTR [r12],eax
  4117f2:	jmp    4116a8 <__ctype_b_loc@plt+0xf3d8>
  4117f7:	mov    rax,QWORD PTR [rbx+0x8]
  4117fb:	lea    rcx,[rax+0x1]
  4117ff:	mov    QWORD PTR [rbx+0x8],rcx
  411803:	movzx  ecx,BYTE PTR [rax]
  411806:	mov    DWORD PTR [r12],ecx
  41180a:	cmp    ecx,0x5b
  41180d:	jne    411863 <__ctype_b_loc@plt+0xf593>
  41180f:	mov    rdi,r12
  411812:	call   412d50 <__ctype_b_loc@plt+0x10a80>
  411817:	mov    rcx,QWORD PTR [r12+0x48]
  41181c:	mov    QWORD PTR [rcx+0x8],0x0
  411824:	test   eax,eax
  411826:	js     411846 <__ctype_b_loc@plt+0xf576>
  411828:	mov    rdi,r12
  41182b:	xor    esi,esi
  41182d:	mov    edx,eax
  41182f:	call   413060 <__ctype_b_loc@plt+0x10d90>
  411834:	mov    rax,QWORD PTR [r12+0x48]
  411839:	mov    QWORD PTR [rax+0x8],0x0
  411841:	jmp    4116a8 <__ctype_b_loc@plt+0xf3d8>
  411846:	mov    ecx,DWORD PTR [r12]
  41184a:	jmp    411863 <__ctype_b_loc@plt+0xf593>
  41184c:	nop    DWORD PTR [rax+0x0]
  411850:	mov    rax,QWORD PTR [rbx+0x8]
  411854:	lea    rcx,[rax+0x1]
  411858:	mov    QWORD PTR [rbx+0x8],rcx
  41185c:	movzx  ecx,BYTE PTR [rax]
  41185f:	mov    DWORD PTR [r12],ecx
  411863:	inc    ecx
  411865:	cmp    ecx,0xe
  411868:	ja     411874 <__ctype_b_loc@plt+0xf5a4>
  41186a:	bt     r13d,ecx
  41186e:	jb     4116a8 <__ctype_b_loc@plt+0xf3d8>
  411874:	mov    rbx,QWORD PTR [r14]
  411877:	sub    QWORD PTR [rbx],0x1
  41187b:	jae    411850 <__ctype_b_loc@plt+0xf580>
  41187d:	mov    rsi,QWORD PTR [rbx+0x18]
  411881:	mov    rdi,QWORD PTR [rbx+0x20]
  411885:	mov    rdx,r15
  411888:	call   QWORD PTR [rbx+0x10]
  41188b:	mov    ecx,0xffffffff
  411890:	test   rax,rax
  411893:	je     4118b1 <__ctype_b_loc@plt+0xf5e1>
  411895:	mov    rdx,QWORD PTR [rsp]
  411899:	test   rdx,rdx
  41189c:	je     4118b1 <__ctype_b_loc@plt+0xf5e1>
  41189e:	dec    rdx
  4118a1:	mov    QWORD PTR [rbx],rdx
  4118a4:	mov    rcx,rax
  4118a7:	inc    rcx
  4118aa:	mov    QWORD PTR [rbx+0x8],rcx
  4118ae:	movzx  ecx,BYTE PTR [rax]
  4118b1:	mov    DWORD PTR [r12],ecx
  4118b5:	jmp    411863 <__ctype_b_loc@plt+0xf593>
  4118b7:	test   eax,0x800
  4118bc:	jne    4119a8 <__ctype_b_loc@plt+0xf6d8>
  4118c2:	mov    r15,r14
  4118c5:	mov    r14,rbx
  4118c8:	cmp    r14d,0x5f
  4118cc:	je     411ae2 <__ctype_b_loc@plt+0xf812>
  4118d2:	and    eax,0x400
  4118d7:	jne    411ae2 <__ctype_b_loc@plt+0xf812>
  4118dd:	mov    rbx,QWORD PTR [r15]
  4118e0:	sub    QWORD PTR [rbx],0x1
  4118e4:	jae    411ee0 <__ctype_b_loc@plt+0xfc10>
  4118ea:	mov    rsi,QWORD PTR [rbx+0x18]
  4118ee:	mov    rdi,QWORD PTR [rbx+0x20]
  4118f2:	mov    rdx,rsp
  4118f5:	call   QWORD PTR [rbx+0x10]
  4118f8:	mov    ecx,0xffffffff
  4118fd:	test   rax,rax
  411900:	je     411eef <__ctype_b_loc@plt+0xfc1f>
  411906:	mov    rdx,QWORD PTR [rsp]
  41190a:	test   rdx,rdx
  41190d:	mov    r15,QWORD PTR [rsp+0x20]
  411912:	je     411ef4 <__ctype_b_loc@plt+0xfc24>
  411918:	dec    rdx
  41191b:	mov    QWORD PTR [rbx],rdx
  41191e:	mov    rcx,rax
  411921:	inc    rcx
  411924:	mov    QWORD PTR [rbx+0x8],rcx
  411928:	movzx  ecx,BYTE PTR [rax]
  41192b:	jmp    411ef4 <__ctype_b_loc@plt+0xfc24>
  411930:	mov    eax,0x2d
  411935:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  41193a:	movabs rdx,0x7ffffffffffffffd
  411944:	mov    r13,QWORD PTR [r12+0x48]
  411949:	mov    rax,QWORD PTR [r13+0x8]
  41194d:	mov    rbp,QWORD PTR [r13+0x10]
  411951:	lea    rcx,[rax+0x1]
  411955:	cmp    rcx,rbp
  411958:	mov    QWORD PTR [rsp+0x8],rbx
  41195d:	jbe    411a2c <__ctype_b_loc@plt+0xf75c>
  411963:	cmp    rbp,rdx
  411966:	jbe    41197d <__ctype_b_loc@plt+0xf6ad>
  411968:	lea    rsi,[rip+0x1891b]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  41196f:	mov    rdi,r12
  411972:	xor    edx,edx
  411974:	call   413660 <__ctype_b_loc@plt+0x11390>
  411979:	mov    rbp,QWORD PTR [r13+0x10]
  41197d:	mov    rbx,rbp
  411980:	add    rbx,rbp
  411983:	mov    rdi,QWORD PTR [r12+0x38]
  411988:	cmp    rbx,0xfffffffffffffffe
  41198c:	jne    411d16 <__ctype_b_loc@plt+0xfa46>
  411992:	lea    rsi,[rip+0x18420]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  411999:	xor    r15d,r15d
  41199c:	xor    eax,eax
  41199e:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4119a3:	jmp    411d4f <__ctype_b_loc@plt+0xfa7f>
  4119a8:	mov    rdi,QWORD PTR [rsp+0x20]
  4119ad:	mov    rsi,QWORD PTR [rsp+0x28]
  4119b2:	call   4138b0 <__ctype_b_loc@plt+0x115e0>
  4119b7:	mov    eax,0x11c
  4119bc:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  4119c1:	mov    rbx,QWORD PTR [r14]
  4119c4:	sub    QWORD PTR [rbx],0x1
  4119c8:	jae    411cae <__ctype_b_loc@plt+0xf9de>
  4119ce:	mov    rsi,QWORD PTR [rbx+0x18]
  4119d2:	mov    rdi,QWORD PTR [rbx+0x20]
  4119d6:	mov    rdx,rsp
  4119d9:	call   QWORD PTR [rbx+0x10]
  4119dc:	mov    ecx,0xffffffff
  4119e1:	test   rax,rax
  4119e4:	je     411cbd <__ctype_b_loc@plt+0xf9ed>
  4119ea:	mov    rdx,QWORD PTR [rsp]
  4119ee:	test   rdx,rdx
  4119f1:	je     411cbd <__ctype_b_loc@plt+0xf9ed>
  4119f7:	dec    rdx
  4119fa:	mov    QWORD PTR [rbx],rdx
  4119fd:	mov    rcx,rax
  411a00:	inc    rcx
  411a03:	jmp    411cb6 <__ctype_b_loc@plt+0xf9e6>
  411a08:	mov    rdi,r12
  411a0b:	call   412d50 <__ctype_b_loc@plt+0x10a80>
  411a10:	test   eax,eax
  411a12:	js     411e15 <__ctype_b_loc@plt+0xfb45>
  411a18:	mov    rdi,r12
  411a1b:	mov    rsi,QWORD PTR [rsp+0x28]
  411a20:	mov    edx,eax
  411a22:	call   413060 <__ctype_b_loc@plt+0x10d90>
  411a27:	jmp    412bb0 <__ctype_b_loc@plt+0x108e0>
  411a2c:	mov    r15,QWORD PTR [r13+0x0]
  411a30:	jmp    411d64 <__ctype_b_loc@plt+0xfa94>
  411a35:	mov    rbx,QWORD PTR [r14]
  411a38:	sub    QWORD PTR [rbx],0x1
  411a3c:	jae    411da4 <__ctype_b_loc@plt+0xfad4>
  411a42:	mov    rsi,QWORD PTR [rbx+0x18]
  411a46:	mov    rdi,QWORD PTR [rbx+0x20]
  411a4a:	mov    rdx,rsp
  411a4d:	call   QWORD PTR [rbx+0x10]
  411a50:	mov    ecx,0xffffffff
  411a55:	test   rax,rax
  411a58:	je     411db3 <__ctype_b_loc@plt+0xfae3>
  411a5e:	mov    rdx,QWORD PTR [rsp]
  411a62:	test   rdx,rdx
  411a65:	je     411db3 <__ctype_b_loc@plt+0xfae3>
  411a6b:	dec    rdx
  411a6e:	mov    QWORD PTR [rbx],rdx
  411a71:	mov    rcx,rax
  411a74:	inc    rcx
  411a77:	jmp    411dac <__ctype_b_loc@plt+0xfadc>
  411a7c:	mov    r13,QWORD PTR [r12+0x48]
  411a81:	mov    rax,QWORD PTR [r13+0x8]
  411a85:	mov    rbx,QWORD PTR [r13+0x10]
  411a89:	lea    rcx,[rax+0x1]
  411a8d:	cmp    rcx,rbx
  411a90:	jbe    411e0c <__ctype_b_loc@plt+0xfb3c>
  411a96:	movabs rax,0x7ffffffffffffffd
  411aa0:	cmp    rbx,rax
  411aa3:	jbe    411aba <__ctype_b_loc@plt+0xf7ea>
  411aa5:	lea    rsi,[rip+0x187de]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  411aac:	mov    rdi,r12
  411aaf:	xor    edx,edx
  411ab1:	call   413660 <__ctype_b_loc@plt+0x11390>
  411ab6:	mov    rbx,QWORD PTR [r13+0x10]
  411aba:	lea    r15,[rbx+rbx*1]
  411abe:	mov    rdi,QWORD PTR [r12+0x38]
  411ac3:	cmp    r15,0xfffffffffffffffe
  411ac7:	jne    411fa1 <__ctype_b_loc@plt+0xfcd1>
  411acd:	lea    rsi,[rip+0x182e5]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  411ad4:	xor    ebp,ebp
  411ad6:	xor    eax,eax
  411ad8:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  411add:	jmp    411fda <__ctype_b_loc@plt+0xfd0a>
  411ae2:	mov    QWORD PTR [rsp+0x30],r15
  411ae7:	nop    WORD PTR [rax+rax*1+0x0]
  411af0:	mov    rax,QWORD PTR [rsp+0x20]
  411af5:	mov    rbx,QWORD PTR [rax+0x48]
  411af9:	mov    rcx,QWORD PTR [rbx+0x8]
  411afd:	mov    r13,QWORD PTR [rbx+0x10]
  411b01:	lea    rdx,[rcx+0x1]
  411b05:	cmp    rdx,r13
  411b08:	jbe    411b60 <__ctype_b_loc@plt+0xf890>
  411b0a:	movabs rax,0x7ffffffffffffffd
  411b14:	cmp    r13,rax
  411b17:	jbe    411b30 <__ctype_b_loc@plt+0xf860>
  411b19:	mov    rdi,QWORD PTR [rsp+0x20]
  411b1e:	lea    rsi,[rip+0x18765]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  411b25:	xor    edx,edx
  411b27:	call   413660 <__ctype_b_loc@plt+0x11390>
  411b2c:	mov    r13,QWORD PTR [rbx+0x10]
  411b30:	mov    rbp,r13
  411b33:	add    rbp,r13
  411b36:	mov    rax,QWORD PTR [rsp+0x20]
  411b3b:	mov    rdi,QWORD PTR [rax+0x38]
  411b3f:	cmp    rbp,0xfffffffffffffffe
  411b43:	jne    411b70 <__ctype_b_loc@plt+0xf8a0>
  411b45:	lea    rsi,[rip+0x1826d]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  411b4c:	xor    eax,eax
  411b4e:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  411b53:	xor    eax,eax
  411b55:	jmp    411ba3 <__ctype_b_loc@plt+0xf8d3>
  411b57:	nop    WORD PTR [rax+rax*1+0x0]
  411b60:	mov    rax,QWORD PTR [rbx]
  411b63:	jmp    411bb2 <__ctype_b_loc@plt+0xf8e2>
  411b65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411b6f:	nop
  411b70:	mov    rsi,QWORD PTR [rbx]
  411b73:	mov    QWORD PTR [rsp+0x8],rdi
  411b78:	mov    rax,QWORD PTR [rdi+0x20]
  411b7c:	mov    rdi,QWORD PTR [rax+0x18]
  411b80:	mov    rdx,r13
  411b83:	mov    rcx,rbp
  411b86:	mov    r15,rax
  411b89:	call   QWORD PTR [rax+0x10]
  411b8c:	test   rbp,rbp
  411b8f:	je     411b9a <__ctype_b_loc@plt+0xf8ca>
  411b91:	test   rax,rax
  411b94:	je     412305 <__ctype_b_loc@plt+0x10035>
  411b9a:	add    QWORD PTR [r15+0x78],r13
  411b9e:	mov    r15,QWORD PTR [rsp+0x30]
  411ba3:	mov    QWORD PTR [rbx],rax
  411ba6:	mov    QWORD PTR [rbx+0x10],rbp
  411baa:	mov    rcx,QWORD PTR [rbx+0x8]
  411bae:	lea    rdx,[rcx+0x1]
  411bb2:	mov    QWORD PTR [rbx+0x8],rdx
  411bb6:	mov    BYTE PTR [rax+rcx*1],r14b
  411bba:	mov    rbp,QWORD PTR [r15]
  411bbd:	sub    QWORD PTR [rbp+0x0],0x1
  411bc2:	jae    411c00 <__ctype_b_loc@plt+0xf930>
  411bc4:	mov    rsi,QWORD PTR [rbp+0x18]
  411bc8:	mov    rdi,QWORD PTR [rbp+0x20]
  411bcc:	mov    rdx,rsp
  411bcf:	call   QWORD PTR [rbp+0x10]
  411bd2:	mov    r14d,0xffffffff
  411bd8:	test   rax,rax
  411bdb:	je     411c10 <__ctype_b_loc@plt+0xf940>
  411bdd:	mov    rcx,QWORD PTR [rsp]
  411be1:	test   rcx,rcx
  411be4:	je     411c10 <__ctype_b_loc@plt+0xf940>
  411be6:	dec    rcx
  411be9:	mov    QWORD PTR [rbp+0x0],rcx
  411bed:	mov    rcx,rax
  411bf0:	inc    rcx
  411bf3:	jmp    411c08 <__ctype_b_loc@plt+0xf938>
  411bf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411bff:	nop
  411c00:	mov    rax,QWORD PTR [rbp+0x8]
  411c04:	lea    rcx,[rax+0x1]
  411c08:	mov    QWORD PTR [rbp+0x8],rcx
  411c0c:	movzx  r14d,BYTE PTR [rax]
  411c10:	mov    rax,QWORD PTR [rsp+0x20]
  411c15:	mov    DWORD PTR [rax],r14d
  411c18:	cmp    r14d,0x5f
  411c1c:	je     411af0 <__ctype_b_loc@plt+0xf820>
  411c22:	mov    rax,QWORD PTR [r12]
  411c26:	movsxd rcx,r14d
  411c29:	movzx  eax,WORD PTR [rax+rcx*2]
  411c2d:	and    eax,0x8
  411c30:	test   ax,ax
  411c33:	jne    411af0 <__ctype_b_loc@plt+0xf820>
  411c39:	mov    rdi,QWORD PTR [rsp+0x20]
  411c3e:	mov    rax,QWORD PTR [rdi+0x48]
  411c42:	mov    rsi,QWORD PTR [rax]
  411c45:	mov    rdx,QWORD PTR [rax+0x8]
  411c49:	call   414230 <__ctype_b_loc@plt+0x11f60>
  411c4e:	mov    rcx,rax
  411c51:	movzx  eax,BYTE PTR [rax+0xa]
  411c55:	test   eax,eax
  411c57:	je     4120f3 <__ctype_b_loc@plt+0xfe23>
  411c5d:	or     eax,0x100
  411c62:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  411c67:	mov    rbx,QWORD PTR [r14]
  411c6a:	sub    QWORD PTR [rbx],0x1
  411c6e:	jae    411eff <__ctype_b_loc@plt+0xfc2f>
  411c74:	mov    rsi,QWORD PTR [rbx+0x18]
  411c78:	mov    rdi,QWORD PTR [rbx+0x20]
  411c7c:	mov    rdx,rsp
  411c7f:	call   QWORD PTR [rbx+0x10]
  411c82:	mov    ecx,0xffffffff
  411c87:	test   rax,rax
  411c8a:	je     411f0e <__ctype_b_loc@plt+0xfc3e>
  411c90:	mov    rdx,QWORD PTR [rsp]
  411c94:	test   rdx,rdx
  411c97:	je     411f0e <__ctype_b_loc@plt+0xfc3e>
  411c9d:	dec    rdx
  411ca0:	mov    QWORD PTR [rbx],rdx
  411ca3:	mov    rcx,rax
  411ca6:	inc    rcx
  411ca9:	jmp    411f07 <__ctype_b_loc@plt+0xfc37>
  411cae:	mov    rax,QWORD PTR [rbx+0x8]
  411cb2:	lea    rcx,[rax+0x1]
  411cb6:	mov    QWORD PTR [rbx+0x8],rcx
  411cba:	movzx  ecx,BYTE PTR [rax]
  411cbd:	mov    DWORD PTR [r12],ecx
  411cc1:	mov    eax,0x3c
  411cc6:	cmp    ecx,0x3d
  411cc9:	jne    412bb5 <__ctype_b_loc@plt+0x108e5>
  411ccf:	mov    rbx,QWORD PTR [r14]
  411cd2:	sub    QWORD PTR [rbx],0x1
  411cd6:	jae    411f67 <__ctype_b_loc@plt+0xfc97>
  411cdc:	mov    rsi,QWORD PTR [rbx+0x18]
  411ce0:	mov    rdi,QWORD PTR [rbx+0x20]
  411ce4:	mov    rdx,rsp
  411ce7:	call   QWORD PTR [rbx+0x10]
  411cea:	mov    ecx,0xffffffff
  411cef:	test   rax,rax
  411cf2:	je     411f76 <__ctype_b_loc@plt+0xfca6>
  411cf8:	mov    rdx,QWORD PTR [rsp]
  411cfc:	test   rdx,rdx
  411cff:	je     411f76 <__ctype_b_loc@plt+0xfca6>
  411d05:	dec    rdx
  411d08:	mov    QWORD PTR [rbx],rdx
  411d0b:	mov    rcx,rax
  411d0e:	inc    rcx
  411d11:	jmp    411f6f <__ctype_b_loc@plt+0xfc9f>
  411d16:	mov    rsi,QWORD PTR [r13+0x0]
  411d1a:	mov    QWORD PTR [rsp+0x10],rdi
  411d1f:	mov    rax,QWORD PTR [rdi+0x20]
  411d23:	mov    rdi,QWORD PTR [rax+0x18]
  411d27:	mov    rdx,rbp
  411d2a:	mov    rcx,rbx
  411d2d:	mov    QWORD PTR [rsp+0x18],rax
  411d32:	call   QWORD PTR [rax+0x10]
  411d35:	mov    r15,rax
  411d38:	test   rbx,rbx
  411d3b:	je     411d46 <__ctype_b_loc@plt+0xfa76>
  411d3d:	test   r15,r15
  411d40:	je     412bf3 <__ctype_b_loc@plt+0x10923>
  411d46:	mov    rax,QWORD PTR [rsp+0x18]
  411d4b:	add    QWORD PTR [rax+0x78],rbp
  411d4f:	mov    QWORD PTR [r13+0x0],r15
  411d53:	mov    QWORD PTR [r13+0x10],rbx
  411d57:	mov    rax,QWORD PTR [r13+0x8]
  411d5b:	lea    rcx,[rax+0x1]
  411d5f:	mov    rbx,QWORD PTR [rsp+0x8]
  411d64:	mov    QWORD PTR [r13+0x8],rcx
  411d68:	mov    BYTE PTR [r15+rax*1],bl
  411d6c:	mov    r15,QWORD PTR [r14]
  411d6f:	sub    QWORD PTR [r15],0x1
  411d73:	jae    411d97 <__ctype_b_loc@plt+0xfac7>
  411d75:	mov    rsi,QWORD PTR [r15+0x18]
  411d79:	mov    rdi,QWORD PTR [r15+0x20]
  411d7d:	mov    rdx,rsp
  411d80:	call   QWORD PTR [r15+0x10]
  411d84:	mov    ebp,0xffffffff
  411d89:	test   rax,rax
  411d8c:	jne    41233f <__ctype_b_loc@plt+0x1006f>
  411d92:	jmp    412374 <__ctype_b_loc@plt+0x100a4>
  411d97:	mov    rax,QWORD PTR [r15+0x8]
  411d9b:	lea    rcx,[rax+0x1]
  411d9f:	jmp    412354 <__ctype_b_loc@plt+0x10084>
  411da4:	mov    rax,QWORD PTR [rbx+0x8]
  411da8:	lea    rcx,[rax+0x1]
  411dac:	mov    QWORD PTR [rbx+0x8],rcx
  411db0:	movzx  ecx,BYTE PTR [rax]
  411db3:	mov    DWORD PTR [r12],ecx
  411db7:	mov    eax,0x3e
  411dbc:	cmp    ecx,0x3d
  411dbf:	jne    412bb5 <__ctype_b_loc@plt+0x108e5>
  411dc5:	mov    rbx,QWORD PTR [r14]
  411dc8:	sub    QWORD PTR [rbx],0x1
  411dcc:	jae    411f84 <__ctype_b_loc@plt+0xfcb4>
  411dd2:	mov    rsi,QWORD PTR [rbx+0x18]
  411dd6:	mov    rdi,QWORD PTR [rbx+0x20]
  411dda:	mov    rdx,rsp
  411ddd:	call   QWORD PTR [rbx+0x10]
  411de0:	mov    ecx,0xffffffff
  411de5:	test   rax,rax
  411de8:	je     411f93 <__ctype_b_loc@plt+0xfcc3>
  411dee:	mov    rdx,QWORD PTR [rsp]
  411df2:	test   rdx,rdx
  411df5:	je     411f93 <__ctype_b_loc@plt+0xfcc3>
  411dfb:	dec    rdx
  411dfe:	mov    QWORD PTR [rbx],rdx
  411e01:	mov    rcx,rax
  411e04:	inc    rcx
  411e07:	jmp    411f8c <__ctype_b_loc@plt+0xfcbc>
  411e0c:	mov    rbp,QWORD PTR [r13+0x0]
  411e10:	jmp    411fea <__ctype_b_loc@plt+0xfd1a>
  411e15:	cmp    eax,0xffffffff
  411e18:	je     412105 <__ctype_b_loc@plt+0xfe35>
  411e1e:	lea    rsi,[rip+0x183ba]        # 42a1df <__ctype_b_loc@plt+0x27f0f>
  411e25:	mov    rdi,r12
  411e28:	mov    edx,0x11e
  411e2d:	call   413660 <__ctype_b_loc@plt+0x11390>
  411e32:	mov    rbx,QWORD PTR [r14]
  411e35:	sub    QWORD PTR [rbx],0x1
  411e39:	jae    411e6a <__ctype_b_loc@plt+0xfb9a>
  411e3b:	mov    rsi,QWORD PTR [rbx+0x18]
  411e3f:	mov    rdi,QWORD PTR [rbx+0x20]
  411e43:	mov    rdx,rsp
  411e46:	call   QWORD PTR [rbx+0x10]
  411e49:	mov    ecx,0xffffffff
  411e4e:	test   rax,rax
  411e51:	je     411e79 <__ctype_b_loc@plt+0xfba9>
  411e53:	mov    rdx,QWORD PTR [rsp]
  411e57:	test   rdx,rdx
  411e5a:	je     411e79 <__ctype_b_loc@plt+0xfba9>
  411e5c:	dec    rdx
  411e5f:	mov    QWORD PTR [rbx],rdx
  411e62:	mov    rcx,rax
  411e65:	inc    rcx
  411e68:	jmp    411e72 <__ctype_b_loc@plt+0xfba2>
  411e6a:	mov    rax,QWORD PTR [rbx+0x8]
  411e6e:	lea    rcx,[rax+0x1]
  411e72:	mov    QWORD PTR [rbx+0x8],rcx
  411e76:	movzx  ecx,BYTE PTR [rax]
  411e79:	mov    DWORD PTR [r12],ecx
  411e7d:	mov    eax,0x3d
  411e82:	cmp    ecx,0x3d
  411e85:	jne    412bb5 <__ctype_b_loc@plt+0x108e5>
  411e8b:	mov    rbx,QWORD PTR [r14]
  411e8e:	sub    QWORD PTR [rbx],0x1
  411e92:	jae    411ec3 <__ctype_b_loc@plt+0xfbf3>
  411e94:	mov    rsi,QWORD PTR [rbx+0x18]
  411e98:	mov    rdi,QWORD PTR [rbx+0x20]
  411e9c:	mov    rdx,rsp
  411e9f:	call   QWORD PTR [rbx+0x10]
  411ea2:	mov    ecx,0xffffffff
  411ea7:	test   rax,rax
  411eaa:	je     411ed2 <__ctype_b_loc@plt+0xfc02>
  411eac:	mov    rdx,QWORD PTR [rsp]
  411eb0:	test   rdx,rdx
  411eb3:	je     411ed2 <__ctype_b_loc@plt+0xfc02>
  411eb5:	dec    rdx
  411eb8:	mov    QWORD PTR [rbx],rdx
  411ebb:	mov    rcx,rax
  411ebe:	inc    rcx
  411ec1:	jmp    411ecb <__ctype_b_loc@plt+0xfbfb>
  411ec3:	mov    rax,QWORD PTR [rbx+0x8]
  411ec7:	lea    rcx,[rax+0x1]
  411ecb:	mov    QWORD PTR [rbx+0x8],rcx
  411ecf:	movzx  ecx,BYTE PTR [rax]
  411ed2:	mov    DWORD PTR [r12],ecx
  411ed6:	mov    eax,0x118
  411edb:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  411ee0:	mov    rax,QWORD PTR [rbx+0x8]
  411ee4:	lea    rcx,[rax+0x1]
  411ee8:	mov    QWORD PTR [rbx+0x8],rcx
  411eec:	movzx  ecx,BYTE PTR [rax]
  411eef:	mov    r15,QWORD PTR [rsp+0x20]
  411ef4:	mov    DWORD PTR [r15],ecx
  411ef7:	mov    eax,r14d
  411efa:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  411eff:	mov    rax,QWORD PTR [rbx+0x8]
  411f03:	lea    rcx,[rax+0x1]
  411f07:	mov    QWORD PTR [rbx+0x8],rcx
  411f0b:	movzx  ecx,BYTE PTR [rax]
  411f0e:	mov    DWORD PTR [r12],ecx
  411f12:	mov    eax,0x7e
  411f17:	cmp    ecx,0x3d
  411f1a:	jne    412bb5 <__ctype_b_loc@plt+0x108e5>
  411f20:	mov    rbx,QWORD PTR [r14]
  411f23:	sub    QWORD PTR [rbx],0x1
  411f27:	jae    41210f <__ctype_b_loc@plt+0xfe3f>
  411f2d:	mov    rsi,QWORD PTR [rbx+0x18]
  411f31:	mov    rdi,QWORD PTR [rbx+0x20]
  411f35:	mov    rdx,rsp
  411f38:	call   QWORD PTR [rbx+0x10]
  411f3b:	mov    ecx,0xffffffff
  411f40:	test   rax,rax
  411f43:	je     41211e <__ctype_b_loc@plt+0xfe4e>
  411f49:	mov    rdx,QWORD PTR [rsp]
  411f4d:	test   rdx,rdx
  411f50:	je     41211e <__ctype_b_loc@plt+0xfe4e>
  411f56:	dec    rdx
  411f59:	mov    QWORD PTR [rbx],rdx
  411f5c:	mov    rcx,rax
  411f5f:	inc    rcx
  411f62:	jmp    412117 <__ctype_b_loc@plt+0xfe47>
  411f67:	mov    rax,QWORD PTR [rbx+0x8]
  411f6b:	lea    rcx,[rax+0x1]
  411f6f:	mov    QWORD PTR [rbx+0x8],rcx
  411f73:	movzx  ecx,BYTE PTR [rax]
  411f76:	mov    DWORD PTR [r12],ecx
  411f7a:	mov    eax,0x11a
  411f7f:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  411f84:	mov    rax,QWORD PTR [rbx+0x8]
  411f88:	lea    rcx,[rax+0x1]
  411f8c:	mov    QWORD PTR [rbx+0x8],rcx
  411f90:	movzx  ecx,BYTE PTR [rax]
  411f93:	mov    DWORD PTR [r12],ecx
  411f97:	mov    eax,0x119
  411f9c:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  411fa1:	mov    rsi,QWORD PTR [r13+0x0]
  411fa5:	mov    QWORD PTR [rsp+0x18],rdi
  411faa:	mov    rax,QWORD PTR [rdi+0x20]
  411fae:	mov    rdi,QWORD PTR [rax+0x18]
  411fb2:	mov    rdx,rbx
  411fb5:	mov    rcx,r15
  411fb8:	mov    QWORD PTR [rsp+0x8],rax
  411fbd:	call   QWORD PTR [rax+0x10]
  411fc0:	mov    rbp,rax
  411fc3:	test   r15,r15
  411fc6:	je     411fd1 <__ctype_b_loc@plt+0xfd01>
  411fc8:	test   rbp,rbp
  411fcb:	je     412bc4 <__ctype_b_loc@plt+0x108f4>
  411fd1:	mov    rax,QWORD PTR [rsp+0x8]
  411fd6:	add    QWORD PTR [rax+0x78],rbx
  411fda:	mov    QWORD PTR [r13+0x0],rbp
  411fde:	mov    QWORD PTR [r13+0x10],r15
  411fe2:	mov    rax,QWORD PTR [r13+0x8]
  411fe6:	lea    rcx,[rax+0x1]
  411fea:	mov    QWORD PTR [r13+0x8],rcx
  411fee:	mov    BYTE PTR [rbp+rax*1+0x0],0x2e
  411ff3:	mov    rbx,QWORD PTR [r14]
  411ff6:	sub    QWORD PTR [rbx],0x1
  411ffa:	jae    41202c <__ctype_b_loc@plt+0xfd5c>
  411ffc:	mov    rsi,QWORD PTR [rbx+0x18]
  412000:	mov    rdi,QWORD PTR [rbx+0x20]
  412004:	mov    rdx,rsp
  412007:	call   QWORD PTR [rbx+0x10]
  41200a:	mov    r13d,0xffffffff
  412010:	test   rax,rax
  412013:	je     41203c <__ctype_b_loc@plt+0xfd6c>
  412015:	mov    rcx,QWORD PTR [rsp]
  412019:	test   rcx,rcx
  41201c:	je     41203c <__ctype_b_loc@plt+0xfd6c>
  41201e:	dec    rcx
  412021:	mov    QWORD PTR [rbx],rcx
  412024:	mov    rcx,rax
  412027:	inc    rcx
  41202a:	jmp    412034 <__ctype_b_loc@plt+0xfd64>
  41202c:	mov    rax,QWORD PTR [rbx+0x8]
  412030:	lea    rcx,[rax+0x1]
  412034:	mov    QWORD PTR [rbx+0x8],rcx
  412038:	movzx  r13d,BYTE PTR [rax]
  41203c:	mov    DWORD PTR [r12],r13d
  412040:	movzx  eax,r13b
  412044:	cmp    eax,0x3f
  412047:	ja     4120c8 <__ctype_b_loc@plt+0xfdf8>
  412049:	movabs rcx,0x400000000001
  412053:	mov    eax,0x1
  412058:	shlx   rax,rax,r13
  41205d:	and    rax,rcx
  412060:	je     4120c8 <__ctype_b_loc@plt+0xfdf8>
  412062:	mov    r15,QWORD PTR [r12+0x48]
  412067:	mov    rax,QWORD PTR [r15+0x8]
  41206b:	mov    rbp,QWORD PTR [r15+0x10]
  41206f:	lea    rcx,[rax+0x1]
  412073:	cmp    rcx,rbp
  412076:	jbe    4120eb <__ctype_b_loc@plt+0xfe1b>
  412078:	movabs rax,0x7ffffffffffffffd
  412082:	cmp    rbp,rax
  412085:	jbe    41209c <__ctype_b_loc@plt+0xfdcc>
  412087:	lea    rsi,[rip+0x181fc]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  41208e:	mov    rdi,r12
  412091:	xor    edx,edx
  412093:	call   413660 <__ctype_b_loc@plt+0x11390>
  412098:	mov    rbp,QWORD PTR [r15+0x10]
  41209c:	mov    rcx,rbp
  41209f:	add    rcx,rbp
  4120a2:	mov    rdi,QWORD PTR [r12+0x38]
  4120a7:	cmp    rcx,0xfffffffffffffffe
  4120ab:	jne    41212c <__ctype_b_loc@plt+0xfe5c>
  4120ad:	lea    rsi,[rip+0x17d05]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4120b4:	xor    ebx,ebx
  4120b6:	xor    eax,eax
  4120b8:	mov    rbp,rcx
  4120bb:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4120c0:	mov    rcx,rbp
  4120c3:	jmp    412167 <__ctype_b_loc@plt+0xfe97>
  4120c8:	call   4022d0 <__ctype_b_loc@plt>
  4120cd:	mov    rcx,QWORD PTR [rax]
  4120d0:	movsxd rdx,r13d
  4120d3:	mov    eax,0x2e
  4120d8:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  4120dd:	je     412bb5 <__ctype_b_loc@plt+0x108e5>
  4120e3:	mov    rdi,r12
  4120e6:	jmp    4119ad <__ctype_b_loc@plt+0xf6dd>
  4120eb:	mov    rbx,QWORD PTR [r15]
  4120ee:	jmp    412176 <__ctype_b_loc@plt+0xfea6>
  4120f3:	mov    rax,QWORD PTR [rsp+0x28]
  4120f8:	mov    QWORD PTR [rax],rcx
  4120fb:	mov    eax,0x11d
  412100:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  412105:	mov    eax,0x5b
  41210a:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  41210f:	mov    rax,QWORD PTR [rbx+0x8]
  412113:	lea    rcx,[rax+0x1]
  412117:	mov    QWORD PTR [rbx+0x8],rcx
  41211b:	movzx  ecx,BYTE PTR [rax]
  41211e:	mov    DWORD PTR [r12],ecx
  412122:	mov    eax,0x11b
  412127:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  41212c:	mov    rsi,QWORD PTR [r15]
  41212f:	mov    QWORD PTR [rsp+0x8],rdi
  412134:	mov    rax,QWORD PTR [rdi+0x20]
  412138:	mov    rdi,QWORD PTR [rax+0x18]
  41213c:	mov    rdx,rbp
  41213f:	mov    rbx,rcx
  412142:	mov    QWORD PTR [rsp+0x28],rax
  412147:	call   QWORD PTR [rax+0x10]
  41214a:	mov    rcx,rbx
  41214d:	mov    rbx,rax
  412150:	test   rcx,rcx
  412153:	je     41215e <__ctype_b_loc@plt+0xfe8e>
  412155:	test   rbx,rbx
  412158:	je     412305 <__ctype_b_loc@plt+0x10035>
  41215e:	mov    rax,QWORD PTR [rsp+0x28]
  412163:	add    QWORD PTR [rax+0x78],rbp
  412167:	mov    QWORD PTR [r15],rbx
  41216a:	mov    QWORD PTR [r15+0x10],rcx
  41216e:	mov    rax,QWORD PTR [r15+0x8]
  412172:	lea    rcx,[rax+0x1]
  412176:	mov    QWORD PTR [r15+0x8],rcx
  41217a:	mov    BYTE PTR [rbx+rax*1],r13b
  41217e:	mov    rbx,QWORD PTR [r14]
  412181:	sub    QWORD PTR [rbx],0x1
  412185:	jae    4121b7 <__ctype_b_loc@plt+0xfee7>
  412187:	mov    rsi,QWORD PTR [rbx+0x18]
  41218b:	mov    rdi,QWORD PTR [rbx+0x20]
  41218f:	mov    rdx,rsp
  412192:	call   QWORD PTR [rbx+0x10]
  412195:	mov    r13d,0xffffffff
  41219b:	test   rax,rax
  41219e:	je     4121c7 <__ctype_b_loc@plt+0xfef7>
  4121a0:	mov    rcx,QWORD PTR [rsp]
  4121a4:	test   rcx,rcx
  4121a7:	je     4121c7 <__ctype_b_loc@plt+0xfef7>
  4121a9:	dec    rcx
  4121ac:	mov    QWORD PTR [rbx],rcx
  4121af:	mov    rcx,rax
  4121b2:	inc    rcx
  4121b5:	jmp    4121bf <__ctype_b_loc@plt+0xfeef>
  4121b7:	mov    rax,QWORD PTR [rbx+0x8]
  4121bb:	lea    rcx,[rax+0x1]
  4121bf:	mov    QWORD PTR [rbx+0x8],rcx
  4121c3:	movzx  r13d,BYTE PTR [rax]
  4121c7:	mov    DWORD PTR [r12],r13d
  4121cb:	movzx  ecx,r13b
  4121cf:	mov    eax,0x116
  4121d4:	cmp    ecx,0x3f
  4121d7:	ja     412bb5 <__ctype_b_loc@plt+0x108e5>
  4121dd:	mov    ecx,0x1
  4121e2:	shlx   rcx,rcx,r13
  4121e7:	movabs rdx,0x400000000001
  4121f1:	and    rcx,rdx
  4121f4:	je     412bb5 <__ctype_b_loc@plt+0x108e5>
  4121fa:	mov    r15,QWORD PTR [r12+0x48]
  4121ff:	mov    rax,QWORD PTR [r15+0x8]
  412203:	mov    rbp,QWORD PTR [r15+0x10]
  412207:	lea    rcx,[rax+0x1]
  41220b:	cmp    rcx,rbp
  41220e:	jbe    41225d <__ctype_b_loc@plt+0xff8d>
  412210:	movabs rax,0x7ffffffffffffffd
  41221a:	cmp    rbp,rax
  41221d:	jbe    412234 <__ctype_b_loc@plt+0xff64>
  41221f:	lea    rsi,[rip+0x18064]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  412226:	mov    rdi,r12
  412229:	xor    edx,edx
  41222b:	call   413660 <__ctype_b_loc@plt+0x11390>
  412230:	mov    rbp,QWORD PTR [r15+0x10]
  412234:	mov    rcx,rbp
  412237:	add    rcx,rbp
  41223a:	mov    rdi,QWORD PTR [r12+0x38]
  41223f:	cmp    rcx,0xfffffffffffffffe
  412243:	jne    412262 <__ctype_b_loc@plt+0xff92>
  412245:	lea    rsi,[rip+0x17b6d]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  41224c:	xor    ebx,ebx
  41224e:	xor    eax,eax
  412250:	mov    rbp,rcx
  412253:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412258:	mov    rcx,rbp
  41225b:	jmp    412299 <__ctype_b_loc@plt+0xffc9>
  41225d:	mov    rbx,QWORD PTR [r15]
  412260:	jmp    4122a8 <__ctype_b_loc@plt+0xffd8>
  412262:	mov    rsi,QWORD PTR [r15]
  412265:	mov    QWORD PTR [rsp+0x8],rdi
  41226a:	mov    rax,QWORD PTR [rdi+0x20]
  41226e:	mov    rdi,QWORD PTR [rax+0x18]
  412272:	mov    rdx,rbp
  412275:	mov    rbx,rcx
  412278:	mov    QWORD PTR [rsp+0x28],rax
  41227d:	call   QWORD PTR [rax+0x10]
  412280:	mov    rcx,rbx
  412283:	mov    rbx,rax
  412286:	test   rcx,rcx
  412289:	je     412290 <__ctype_b_loc@plt+0xffc0>
  41228b:	test   rbx,rbx
  41228e:	je     412305 <__ctype_b_loc@plt+0x10035>
  412290:	mov    rax,QWORD PTR [rsp+0x28]
  412295:	add    QWORD PTR [rax+0x78],rbp
  412299:	mov    QWORD PTR [r15],rbx
  41229c:	mov    QWORD PTR [r15+0x10],rcx
  4122a0:	mov    rax,QWORD PTR [r15+0x8]
  4122a4:	lea    rcx,[rax+0x1]
  4122a8:	mov    QWORD PTR [r15+0x8],rcx
  4122ac:	mov    BYTE PTR [rbx+rax*1],r13b
  4122b0:	mov    rbx,QWORD PTR [r14]
  4122b3:	sub    QWORD PTR [rbx],0x1
  4122b7:	jae    4122e8 <__ctype_b_loc@plt+0x10018>
  4122b9:	mov    rsi,QWORD PTR [rbx+0x18]
  4122bd:	mov    rdi,QWORD PTR [rbx+0x20]
  4122c1:	mov    rdx,rsp
  4122c4:	call   QWORD PTR [rbx+0x10]
  4122c7:	mov    ecx,0xffffffff
  4122cc:	test   rax,rax
  4122cf:	je     4122f7 <__ctype_b_loc@plt+0x10027>
  4122d1:	mov    rdx,QWORD PTR [rsp]
  4122d5:	test   rdx,rdx
  4122d8:	je     4122f7 <__ctype_b_loc@plt+0x10027>
  4122da:	dec    rdx
  4122dd:	mov    QWORD PTR [rbx],rdx
  4122e0:	mov    rcx,rax
  4122e3:	inc    rcx
  4122e6:	jmp    4122f0 <__ctype_b_loc@plt+0x10020>
  4122e8:	mov    rax,QWORD PTR [rbx+0x8]
  4122ec:	lea    rcx,[rax+0x1]
  4122f0:	mov    QWORD PTR [rbx+0x8],rcx
  4122f4:	movzx  ecx,BYTE PTR [rax]
  4122f7:	mov    DWORD PTR [r12],ecx
  4122fb:	mov    eax,0x117
  412300:	jmp    412bb5 <__ctype_b_loc@plt+0x108e5>
  412305:	mov    rax,QWORD PTR [rsp+0x8]
  41230a:	mov    rdi,QWORD PTR [rax+0xa8]
  412311:	test   rdi,rdi
  412314:	jne    412c44 <__ctype_b_loc@plt+0x10974>
  41231a:	mov    rax,QWORD PTR [rsp+0x8]
  41231f:	mov    BYTE PTR [rax+0xa],0x4
  412323:	mov    rax,QWORD PTR [rax+0x20]
  412327:	cmp    QWORD PTR [rax+0x98],0x0
  41232f:	je     412c3a <__ctype_b_loc@plt+0x1096a>
  412335:	mov    rbx,QWORD PTR [rsp+0x8]
  41233a:	jmp    412c20 <__ctype_b_loc@plt+0x10950>
  41233f:	mov    rcx,QWORD PTR [rsp]
  412343:	test   rcx,rcx
  412346:	je     412374 <__ctype_b_loc@plt+0x100a4>
  412348:	dec    rcx
  41234b:	mov    QWORD PTR [r15],rcx
  41234e:	mov    rcx,rax
  412351:	inc    rcx
  412354:	mov    QWORD PTR [r15+0x8],rcx
  412358:	movzx  ebp,BYTE PTR [rax]
  41235b:	jmp    412374 <__ctype_b_loc@plt+0x100a4>
  41235d:	nop    DWORD PTR [rax]
  412360:	mov    rax,QWORD PTR [r15+0x8]
  412364:	lea    rcx,[rax+0x1]
  412368:	mov    QWORD PTR [r15+0x8],rcx
  41236c:	movzx  ebp,BYTE PTR [rax]
  41236f:	mov    rbx,QWORD PTR [rsp+0x8]
  412374:	mov    DWORD PTR [r12],ebp
  412378:	cmp    ebp,ebx
  41237a:	je     412a88 <__ctype_b_loc@plt+0x107b8>
  412380:	cmp    ebp,0xc
  412383:	jg     4123a0 <__ctype_b_loc@plt+0x100d0>
  412385:	cmp    ebp,0xffffffff
  412388:	je     412415 <__ctype_b_loc@plt+0x10145>
  41238e:	cmp    ebp,0xa
  412391:	je     4123f0 <__ctype_b_loc@plt+0x10120>
  412393:	jmp    4129a0 <__ctype_b_loc@plt+0x106d0>
  412398:	nop    DWORD PTR [rax+rax*1+0x0]
  4123a0:	cmp    ebp,0xd
  4123a3:	je     4123f0 <__ctype_b_loc@plt+0x10120>
  4123a5:	cmp    ebp,0x5c
  4123a8:	jne    4129a0 <__ctype_b_loc@plt+0x106d0>
  4123ae:	mov    rbp,QWORD PTR [r14]
  4123b1:	sub    QWORD PTR [rbp+0x0],0x1
  4123b6:	jae    41243a <__ctype_b_loc@plt+0x1016a>
  4123bc:	mov    rsi,QWORD PTR [rbp+0x18]
  4123c0:	mov    rdi,QWORD PTR [rbp+0x20]
  4123c4:	mov    rdx,rsp
  4123c7:	call   QWORD PTR [rbp+0x10]
  4123ca:	mov    r15d,0xffffffff
  4123d0:	test   rax,rax
  4123d3:	je     41244a <__ctype_b_loc@plt+0x1017a>
  4123d5:	mov    rcx,QWORD PTR [rsp]
  4123d9:	test   rcx,rcx
  4123dc:	je     41244a <__ctype_b_loc@plt+0x1017a>
  4123de:	dec    rcx
  4123e1:	mov    QWORD PTR [rbp+0x0],rcx
  4123e5:	mov    rcx,rax
  4123e8:	inc    rcx
  4123eb:	jmp    412442 <__ctype_b_loc@plt+0x10172>
  4123ed:	nop    DWORD PTR [rax]
  4123f0:	mov    rdi,r12
  4123f3:	lea    rsi,[rip+0x17e64]        # 42a25e <__ctype_b_loc@plt+0x27f8e>
  4123fa:	mov    edx,0x11e
  4123ff:	call   413660 <__ctype_b_loc@plt+0x11390>
  412404:	mov    ebp,DWORD PTR [r12]
  412408:	cmp    ebp,ebx
  41240a:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  412410:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  412415:	mov    rdi,r12
  412418:	lea    rsi,[rip+0x17e3f]        # 42a25e <__ctype_b_loc@plt+0x27f8e>
  41241f:	mov    edx,0x11f
  412424:	call   413660 <__ctype_b_loc@plt+0x11390>
  412429:	mov    ebp,DWORD PTR [r12]
  41242d:	cmp    ebp,ebx
  41242f:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  412435:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  41243a:	mov    rax,QWORD PTR [rbp+0x8]
  41243e:	lea    rcx,[rax+0x1]
  412442:	mov    QWORD PTR [rbp+0x8],rcx
  412446:	movzx  r15d,BYTE PTR [rax]
  41244a:	mov    DWORD PTR [r12],r15d
  41244e:	cmp    r15d,0x60
  412452:	jle    41247c <__ctype_b_loc@plt+0x101ac>
  412454:	lea    eax,[r15-0x61]
  412458:	cmp    eax,0x15
  41245b:	ja     412622 <__ctype_b_loc@plt+0x10352>
  412461:	mov    sil,0x7
  412464:	lea    rcx,[rip+0x17045]        # 4294b0 <__ctype_b_loc@plt+0x271e0>
  41246b:	movsxd rax,DWORD PTR [rcx+rax*4]
  41246f:	add    rax,rcx
  412472:	jmp    rax
  412474:	mov    sil,0x8
  412477:	jmp    412515 <__ctype_b_loc@plt+0x10245>
  41247c:	cmp    r15d,0xffffffff
  412480:	je     412707 <__ctype_b_loc@plt+0x10437>
  412486:	cmp    r15d,0xa
  41248a:	je     412496 <__ctype_b_loc@plt+0x101c6>
  41248c:	cmp    r15d,0xd
  412490:	jne    412622 <__ctype_b_loc@plt+0x10352>
  412496:	mov    r15,QWORD PTR [r12+0x48]
  41249b:	mov    rcx,QWORD PTR [r15+0x8]
  41249f:	mov    r13,QWORD PTR [r15+0x10]
  4124a3:	lea    rdx,[rcx+0x1]
  4124a7:	cmp    rdx,r13
  4124aa:	jbe    41261a <__ctype_b_loc@plt+0x1034a>
  4124b0:	movabs rax,0x7ffffffffffffffd
  4124ba:	cmp    r13,rax
  4124bd:	jbe    4124d4 <__ctype_b_loc@plt+0x10204>
  4124bf:	mov    rdi,r12
  4124c2:	lea    rsi,[rip+0x17dc1]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  4124c9:	xor    edx,edx
  4124cb:	call   413660 <__ctype_b_loc@plt+0x11390>
  4124d0:	mov    r13,QWORD PTR [r15+0x10]
  4124d4:	mov    rbp,r13
  4124d7:	add    rbp,r13
  4124da:	mov    rdi,QWORD PTR [r12+0x38]
  4124df:	cmp    rbp,0xfffffffffffffffe
  4124e3:	jne    4126b8 <__ctype_b_loc@plt+0x103e8>
  4124e9:	lea    rsi,[rip+0x178c9]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4124f0:	xor    eax,eax
  4124f2:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4124f7:	xor    eax,eax
  4124f9:	jmp    4126e3 <__ctype_b_loc@plt+0x10413>
  4124fe:	mov    sil,0xb
  412501:	jmp    412515 <__ctype_b_loc@plt+0x10245>
  412503:	mov    sil,0xa
  412506:	jmp    412515 <__ctype_b_loc@plt+0x10245>
  412508:	mov    sil,0x9
  41250b:	jmp    412515 <__ctype_b_loc@plt+0x10245>
  41250d:	mov    sil,0xc
  412510:	jmp    412515 <__ctype_b_loc@plt+0x10245>
  412512:	mov    sil,0xd
  412515:	mov    r13,QWORD PTR [r12+0x48]
  41251a:	mov    rcx,QWORD PTR [r13+0x8]
  41251e:	mov    rbx,QWORD PTR [r13+0x10]
  412522:	lea    rdx,[rcx+0x1]
  412526:	cmp    rdx,rbx
  412529:	jbe    412575 <__ctype_b_loc@plt+0x102a5>
  41252b:	mov    BYTE PTR [rsp+0x18],sil
  412530:	movabs rax,0x7ffffffffffffffd
  41253a:	cmp    rbx,rax
  41253d:	jbe    412554 <__ctype_b_loc@plt+0x10284>
  41253f:	mov    rdi,r12
  412542:	lea    rsi,[rip+0x17d41]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  412549:	xor    edx,edx
  41254b:	call   413660 <__ctype_b_loc@plt+0x11390>
  412550:	mov    rbx,QWORD PTR [r13+0x10]
  412554:	lea    rbp,[rbx+rbx*1]
  412558:	mov    rdi,QWORD PTR [r12+0x38]
  41255d:	cmp    rbp,0xfffffffffffffffe
  412561:	jne    41257b <__ctype_b_loc@plt+0x102ab>
  412563:	lea    rsi,[rip+0x1784f]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  41256a:	xor    eax,eax
  41256c:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412571:	xor    eax,eax
  412573:	jmp    4125a8 <__ctype_b_loc@plt+0x102d8>
  412575:	mov    rax,QWORD PTR [r13+0x0]
  412579:	jmp    4125bd <__ctype_b_loc@plt+0x102ed>
  41257b:	mov    rsi,QWORD PTR [r13+0x0]
  41257f:	mov    QWORD PTR [rsp+0x10],rdi
  412584:	mov    r15,QWORD PTR [rdi+0x20]
  412588:	mov    rdi,QWORD PTR [r15+0x18]
  41258c:	mov    rdx,rbx
  41258f:	mov    rcx,rbp
  412592:	call   QWORD PTR [r15+0x10]
  412596:	test   rbp,rbp
  412599:	je     4125a4 <__ctype_b_loc@plt+0x102d4>
  41259b:	test   rax,rax
  41259e:	je     412bf3 <__ctype_b_loc@plt+0x10923>
  4125a4:	add    QWORD PTR [r15+0x78],rbx
  4125a8:	mov    sil,BYTE PTR [rsp+0x18]
  4125ad:	mov    QWORD PTR [r13+0x0],rax
  4125b1:	mov    QWORD PTR [r13+0x10],rbp
  4125b5:	mov    rcx,QWORD PTR [r13+0x8]
  4125b9:	lea    rdx,[rcx+0x1]
  4125bd:	mov    QWORD PTR [r13+0x8],rdx
  4125c1:	mov    BYTE PTR [rax+rcx*1],sil
  4125c5:	mov    rbp,QWORD PTR [r14]
  4125c8:	sub    QWORD PTR [rbp+0x0],0x1
  4125cd:	jae    4128ec <__ctype_b_loc@plt+0x1061c>
  4125d3:	mov    rsi,QWORD PTR [rbp+0x18]
  4125d7:	mov    rdi,QWORD PTR [rbp+0x20]
  4125db:	mov    rdx,rsp
  4125de:	call   QWORD PTR [rbp+0x10]
  4125e1:	mov    ecx,0xffffffff
  4125e6:	test   rax,rax
  4125e9:	je     41269e <__ctype_b_loc@plt+0x103ce>
  4125ef:	mov    rdx,QWORD PTR [rsp]
  4125f3:	test   rdx,rdx
  4125f6:	mov    rbx,QWORD PTR [rsp+0x8]
  4125fb:	je     4126a3 <__ctype_b_loc@plt+0x103d3>
  412601:	dec    rdx
  412604:	mov    QWORD PTR [rbp+0x0],rdx
  412608:	mov    rcx,rax
  41260b:	inc    rcx
  41260e:	mov    QWORD PTR [rbp+0x8],rcx
  412612:	movzx  ecx,BYTE PTR [rax]
  412615:	jmp    4126a3 <__ctype_b_loc@plt+0x103d3>
  41261a:	mov    rax,QWORD PTR [r15]
  41261d:	jmp    4126f2 <__ctype_b_loc@plt+0x10422>
  412622:	call   4022d0 <__ctype_b_loc@plt>
  412627:	mov    rdx,QWORD PTR [rax]
  41262a:	movsxd rcx,r15d
  41262d:	test   BYTE PTR [rdx+rcx*2+0x1],0x8
  412632:	jne    412718 <__ctype_b_loc@plt+0x10448>
  412638:	mov    r13,QWORD PTR [r12+0x48]
  41263d:	mov    rcx,QWORD PTR [r13+0x8]
  412641:	mov    rbx,QWORD PTR [r13+0x10]
  412645:	lea    rdx,[rcx+0x1]
  412649:	cmp    rdx,rbx
  41264c:	jbe    41283f <__ctype_b_loc@plt+0x1056f>
  412652:	movabs rax,0x7ffffffffffffffd
  41265c:	cmp    rbx,rax
  41265f:	jbe    412676 <__ctype_b_loc@plt+0x103a6>
  412661:	mov    rdi,r12
  412664:	lea    rsi,[rip+0x17c1f]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  41266b:	xor    edx,edx
  41266d:	call   413660 <__ctype_b_loc@plt+0x11390>
  412672:	mov    rbx,QWORD PTR [r13+0x10]
  412676:	lea    rbp,[rbx+rbx*1]
  41267a:	mov    rdi,QWORD PTR [r12+0x38]
  41267f:	cmp    rbp,0xfffffffffffffffe
  412683:	jne    41284d <__ctype_b_loc@plt+0x1057d>
  412689:	lea    rsi,[rip+0x17729]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  412690:	xor    eax,eax
  412692:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412697:	xor    eax,eax
  412699:	jmp    412883 <__ctype_b_loc@plt+0x105b3>
  41269e:	mov    rbx,QWORD PTR [rsp+0x8]
  4126a3:	mov    DWORD PTR [r12],ecx
  4126a7:	mov    ebp,DWORD PTR [r12]
  4126ab:	cmp    ebp,ebx
  4126ad:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  4126b3:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  4126b8:	mov    rsi,QWORD PTR [r15]
  4126bb:	mov    QWORD PTR [rsp+0x18],rdi
  4126c0:	mov    rbx,QWORD PTR [rdi+0x20]
  4126c4:	mov    rdi,QWORD PTR [rbx+0x18]
  4126c8:	mov    rdx,r13
  4126cb:	mov    rcx,rbp
  4126ce:	call   QWORD PTR [rbx+0x10]
  4126d1:	test   rbp,rbp
  4126d4:	je     4126df <__ctype_b_loc@plt+0x1040f>
  4126d6:	test   rax,rax
  4126d9:	je     412bc4 <__ctype_b_loc@plt+0x108f4>
  4126df:	add    QWORD PTR [rbx+0x78],r13
  4126e3:	mov    QWORD PTR [r15],rax
  4126e6:	mov    QWORD PTR [r15+0x10],rbp
  4126ea:	mov    rcx,QWORD PTR [r15+0x8]
  4126ee:	lea    rdx,[rcx+0x1]
  4126f2:	mov    rbx,QWORD PTR [rsp+0x8]
  4126f7:	mov    QWORD PTR [r15+0x8],rdx
  4126fb:	mov    BYTE PTR [rax+rcx*1],0xa
  4126ff:	mov    rdi,r12
  412702:	call   412c60 <__ctype_b_loc@plt+0x10990>
  412707:	mov    ebp,DWORD PTR [r12]
  41270b:	cmp    ebp,ebx
  41270d:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  412713:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  412718:	xor    r13d,r13d
  41271b:	mov    ebx,0x3
  412720:	mov    QWORD PTR [rsp+0x10],rax
  412725:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41272f:	nop
  412730:	lea    esi,[r13+r13*4+0x0]
  412735:	mov    ebp,r15d
  412738:	mov    r13,QWORD PTR [r14]
  41273b:	sub    QWORD PTR [r13+0x0],0x1
  412740:	jae    412790 <__ctype_b_loc@plt+0x104c0>
  412742:	mov    QWORD PTR [rsp+0x18],rsi
  412747:	mov    rsi,QWORD PTR [r13+0x18]
  41274b:	mov    rdi,QWORD PTR [r13+0x20]
  41274f:	mov    rdx,rsp
  412752:	call   QWORD PTR [r13+0x10]
  412756:	mov    r15d,0xffffffff
  41275c:	test   rax,rax
  41275f:	je     41277f <__ctype_b_loc@plt+0x104af>
  412761:	mov    rcx,QWORD PTR [rsp]
  412765:	test   rcx,rcx
  412768:	je     41277f <__ctype_b_loc@plt+0x104af>
  41276a:	dec    rcx
  41276d:	mov    QWORD PTR [r13+0x0],rcx
  412771:	mov    rcx,rax
  412774:	inc    rcx
  412777:	mov    QWORD PTR [r13+0x8],rcx
  41277b:	movzx  r15d,BYTE PTR [rax]
  41277f:	mov    rax,QWORD PTR [rsp+0x10]
  412784:	mov    rsi,QWORD PTR [rsp+0x18]
  412789:	jmp    4127a0 <__ctype_b_loc@plt+0x104d0>
  41278b:	nop    DWORD PTR [rax+rax*1+0x0]
  412790:	mov    rdx,QWORD PTR [r13+0x8]
  412794:	lea    rcx,[rdx+0x1]
  412798:	mov    QWORD PTR [r13+0x8],rcx
  41279c:	movzx  r15d,BYTE PTR [rdx]
  4127a0:	lea    r13d,[rbp+rsi*2-0x30]
  4127a5:	mov    DWORD PTR [r12],r15d
  4127a9:	dec    ebx
  4127ab:	je     4127be <__ctype_b_loc@plt+0x104ee>
  4127ad:	mov    rdx,QWORD PTR [rax]
  4127b0:	movsxd rcx,r15d
  4127b3:	test   BYTE PTR [rdx+rcx*2+0x1],0x8
  4127b8:	jne    412730 <__ctype_b_loc@plt+0x10460>
  4127be:	cmp    r13d,0x100
  4127c5:	jl     4127db <__ctype_b_loc@plt+0x1050b>
  4127c7:	mov    rdi,r12
  4127ca:	lea    rsi,[rip+0x17a9f]        # 42a270 <__ctype_b_loc@plt+0x27fa0>
  4127d1:	mov    edx,0x11e
  4127d6:	call   413660 <__ctype_b_loc@plt+0x11390>
  4127db:	mov    rbx,QWORD PTR [r12+0x48]
  4127e0:	mov    rcx,QWORD PTR [rbx+0x8]
  4127e4:	mov    rbp,QWORD PTR [rbx+0x10]
  4127e8:	lea    rdx,[rcx+0x1]
  4127ec:	cmp    rdx,rbp
  4127ef:	jbe    412845 <__ctype_b_loc@plt+0x10575>
  4127f1:	movabs rax,0x7ffffffffffffffd
  4127fb:	cmp    rbp,rax
  4127fe:	jbe    412815 <__ctype_b_loc@plt+0x10545>
  412800:	mov    rdi,r12
  412803:	lea    rsi,[rip+0x17a80]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  41280a:	xor    edx,edx
  41280c:	call   413660 <__ctype_b_loc@plt+0x11390>
  412811:	mov    rbp,QWORD PTR [rbx+0x10]
  412815:	mov    r15,rbp
  412818:	add    r15,rbp
  41281b:	mov    rdi,QWORD PTR [r12+0x38]
  412820:	cmp    r15,0xfffffffffffffffe
  412824:	jne    412915 <__ctype_b_loc@plt+0x10645>
  41282a:	lea    rsi,[rip+0x17588]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  412831:	xor    eax,eax
  412833:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412838:	xor    eax,eax
  41283a:	jmp    41294a <__ctype_b_loc@plt+0x1067a>
  41283f:	mov    rax,QWORD PTR [r13+0x0]
  412843:	jmp    412893 <__ctype_b_loc@plt+0x105c3>
  412845:	mov    rax,QWORD PTR [rbx]
  412848:	jmp    412959 <__ctype_b_loc@plt+0x10689>
  41284d:	mov    rsi,QWORD PTR [r13+0x0]
  412851:	mov    QWORD PTR [rsp+0x10],rdi
  412856:	mov    rax,QWORD PTR [rdi+0x20]
  41285a:	mov    rdi,QWORD PTR [rax+0x18]
  41285e:	mov    rdx,rbx
  412861:	mov    rcx,rbp
  412864:	mov    QWORD PTR [rsp+0x18],rax
  412869:	call   QWORD PTR [rax+0x10]
  41286c:	test   rbp,rbp
  41286f:	je     41287a <__ctype_b_loc@plt+0x105aa>
  412871:	test   rax,rax
  412874:	je     412bf3 <__ctype_b_loc@plt+0x10923>
  41287a:	mov    rcx,QWORD PTR [rsp+0x18]
  41287f:	add    QWORD PTR [rcx+0x78],rbx
  412883:	mov    QWORD PTR [r13+0x0],rax
  412887:	mov    QWORD PTR [r13+0x10],rbp
  41288b:	mov    rcx,QWORD PTR [r13+0x8]
  41288f:	lea    rdx,[rcx+0x1]
  412893:	mov    QWORD PTR [r13+0x8],rdx
  412897:	mov    BYTE PTR [rax+rcx*1],r15b
  41289b:	mov    rbp,QWORD PTR [r14]
  41289e:	sub    QWORD PTR [rbp+0x0],0x1
  4128a3:	jae    4128ec <__ctype_b_loc@plt+0x1061c>
  4128a5:	mov    rsi,QWORD PTR [rbp+0x18]
  4128a9:	mov    rdi,QWORD PTR [rbp+0x20]
  4128ad:	mov    rdx,rsp
  4128b0:	call   QWORD PTR [rbp+0x10]
  4128b3:	mov    ecx,0xffffffff
  4128b8:	test   rax,rax
  4128bb:	je     412977 <__ctype_b_loc@plt+0x106a7>
  4128c1:	mov    rdx,QWORD PTR [rsp]
  4128c5:	test   rdx,rdx
  4128c8:	mov    rbx,QWORD PTR [rsp+0x8]
  4128cd:	je     41297c <__ctype_b_loc@plt+0x106ac>
  4128d3:	dec    rdx
  4128d6:	mov    QWORD PTR [rbp+0x0],rdx
  4128da:	mov    rcx,rax
  4128dd:	inc    rcx
  4128e0:	mov    QWORD PTR [rbp+0x8],rcx
  4128e4:	movzx  ecx,BYTE PTR [rax]
  4128e7:	jmp    41297c <__ctype_b_loc@plt+0x106ac>
  4128ec:	mov    rax,QWORD PTR [rbp+0x8]
  4128f0:	lea    rcx,[rax+0x1]
  4128f4:	mov    QWORD PTR [rbp+0x8],rcx
  4128f8:	movzx  eax,BYTE PTR [rax]
  4128fb:	mov    DWORD PTR [r12],eax
  4128ff:	mov    rbx,QWORD PTR [rsp+0x8]
  412904:	mov    ebp,DWORD PTR [r12]
  412908:	cmp    ebp,ebx
  41290a:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  412910:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  412915:	mov    rsi,QWORD PTR [rbx]
  412918:	mov    QWORD PTR [rsp+0x10],rdi
  41291d:	mov    rax,QWORD PTR [rdi+0x20]
  412921:	mov    rdi,QWORD PTR [rax+0x18]
  412925:	mov    rdx,rbp
  412928:	mov    rcx,r15
  41292b:	mov    QWORD PTR [rsp+0x18],rax
  412930:	call   QWORD PTR [rax+0x10]
  412933:	test   r15,r15
  412936:	je     412941 <__ctype_b_loc@plt+0x10671>
  412938:	test   rax,rax
  41293b:	je     412bf3 <__ctype_b_loc@plt+0x10923>
  412941:	mov    rcx,QWORD PTR [rsp+0x18]
  412946:	add    QWORD PTR [rcx+0x78],rbp
  41294a:	mov    QWORD PTR [rbx],rax
  41294d:	mov    QWORD PTR [rbx+0x10],r15
  412951:	mov    rcx,QWORD PTR [rbx+0x8]
  412955:	lea    rdx,[rcx+0x1]
  412959:	mov    QWORD PTR [rbx+0x8],rdx
  41295d:	mov    BYTE PTR [rax+rcx*1],r13b
  412961:	mov    rbx,QWORD PTR [rsp+0x8]
  412966:	mov    ebp,DWORD PTR [r12]
  41296a:	cmp    ebp,ebx
  41296c:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  412972:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  412977:	mov    rbx,QWORD PTR [rsp+0x8]
  41297c:	mov    DWORD PTR [r12],ecx
  412980:	mov    ebp,DWORD PTR [r12]
  412984:	cmp    ebp,ebx
  412986:	jne    412380 <__ctype_b_loc@plt+0x100b0>
  41298c:	jmp    412a88 <__ctype_b_loc@plt+0x107b8>
  412991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41299b:	nop    DWORD PTR [rax+rax*1+0x0]
  4129a0:	mov    r13,QWORD PTR [r12+0x48]
  4129a5:	mov    rcx,QWORD PTR [r13+0x8]
  4129a9:	mov    rbx,QWORD PTR [r13+0x10]
  4129ad:	lea    rdx,[rcx+0x1]
  4129b1:	cmp    rdx,rbx
  4129b4:	jbe    412a00 <__ctype_b_loc@plt+0x10730>
  4129b6:	movabs rax,0x7ffffffffffffffd
  4129c0:	cmp    rbx,rax
  4129c3:	jbe    4129da <__ctype_b_loc@plt+0x1070a>
  4129c5:	mov    rdi,r12
  4129c8:	lea    rsi,[rip+0x178bb]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  4129cf:	xor    edx,edx
  4129d1:	call   413660 <__ctype_b_loc@plt+0x11390>
  4129d6:	mov    rbx,QWORD PTR [r13+0x10]
  4129da:	lea    r15,[rbx+rbx*1]
  4129de:	mov    rdi,QWORD PTR [r12+0x38]
  4129e3:	cmp    r15,0xfffffffffffffffe
  4129e7:	jne    412a06 <__ctype_b_loc@plt+0x10736>
  4129e9:	lea    rsi,[rip+0x173c9]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4129f0:	xor    eax,eax
  4129f2:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4129f7:	xor    eax,eax
  4129f9:	jmp    412a3c <__ctype_b_loc@plt+0x1076c>
  4129fb:	nop    DWORD PTR [rax+rax*1+0x0]
  412a00:	mov    rax,QWORD PTR [r13+0x0]
  412a04:	jmp    412a4c <__ctype_b_loc@plt+0x1077c>
  412a06:	mov    rsi,QWORD PTR [r13+0x0]
  412a0a:	mov    QWORD PTR [rsp+0x10],rdi
  412a0f:	mov    rax,QWORD PTR [rdi+0x20]
  412a13:	mov    rdi,QWORD PTR [rax+0x18]
  412a17:	mov    rdx,rbx
  412a1a:	mov    rcx,r15
  412a1d:	mov    QWORD PTR [rsp+0x18],rax
  412a22:	call   QWORD PTR [rax+0x10]
  412a25:	test   r15,r15
  412a28:	je     412a33 <__ctype_b_loc@plt+0x10763>
  412a2a:	test   rax,rax
  412a2d:	je     412bf3 <__ctype_b_loc@plt+0x10923>
  412a33:	mov    rcx,QWORD PTR [rsp+0x18]
  412a38:	add    QWORD PTR [rcx+0x78],rbx
  412a3c:	mov    QWORD PTR [r13+0x0],rax
  412a40:	mov    QWORD PTR [r13+0x10],r15
  412a44:	mov    rcx,QWORD PTR [r13+0x8]
  412a48:	lea    rdx,[rcx+0x1]
  412a4c:	mov    QWORD PTR [r13+0x8],rdx
  412a50:	mov    BYTE PTR [rax+rcx*1],bpl
  412a54:	mov    r15,QWORD PTR [r14]
  412a57:	sub    QWORD PTR [r15],0x1
  412a5b:	jae    412360 <__ctype_b_loc@plt+0x10090>
  412a61:	mov    rsi,QWORD PTR [r15+0x18]
  412a65:	mov    rdi,QWORD PTR [r15+0x20]
  412a69:	mov    rdx,rsp
  412a6c:	call   QWORD PTR [r15+0x10]
  412a70:	mov    ebp,0xffffffff
  412a75:	test   rax,rax
  412a78:	mov    rbx,QWORD PTR [rsp+0x8]
  412a7d:	jne    41233f <__ctype_b_loc@plt+0x1006f>
  412a83:	jmp    412374 <__ctype_b_loc@plt+0x100a4>
  412a88:	mov    r13,QWORD PTR [r12+0x48]
  412a8d:	mov    rax,QWORD PTR [r13+0x8]
  412a91:	mov    rbp,QWORD PTR [r13+0x10]
  412a95:	lea    rcx,[rax+0x1]
  412a99:	cmp    rcx,rbp
  412a9c:	jbe    412ae6 <__ctype_b_loc@plt+0x10816>
  412a9e:	movabs rax,0x7ffffffffffffffd
  412aa8:	cmp    rbp,rax
  412aab:	jbe    412ac2 <__ctype_b_loc@plt+0x107f2>
  412aad:	lea    rsi,[rip+0x177d6]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  412ab4:	mov    rdi,r12
  412ab7:	xor    edx,edx
  412ab9:	call   413660 <__ctype_b_loc@plt+0x11390>
  412abe:	mov    rbp,QWORD PTR [r13+0x10]
  412ac2:	mov    rbx,rbp
  412ac5:	add    rbx,rbp
  412ac8:	mov    rdi,QWORD PTR [r12+0x38]
  412acd:	cmp    rbx,0xfffffffffffffffe
  412ad1:	jne    412aec <__ctype_b_loc@plt+0x1081c>
  412ad3:	lea    rsi,[rip+0x172df]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  412ada:	xor    r15d,r15d
  412add:	xor    eax,eax
  412adf:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412ae4:	jmp    412b25 <__ctype_b_loc@plt+0x10855>
  412ae6:	mov    r15,QWORD PTR [r13+0x0]
  412aea:	jmp    412b3a <__ctype_b_loc@plt+0x1086a>
  412aec:	mov    rsi,QWORD PTR [r13+0x0]
  412af0:	mov    QWORD PTR [rsp+0x10],rdi
  412af5:	mov    rax,QWORD PTR [rdi+0x20]
  412af9:	mov    rdi,QWORD PTR [rax+0x18]
  412afd:	mov    rdx,rbp
  412b00:	mov    rcx,rbx
  412b03:	mov    QWORD PTR [rsp+0x18],rax
  412b08:	call   QWORD PTR [rax+0x10]
  412b0b:	mov    r15,rax
  412b0e:	test   rbx,rbx
  412b11:	je     412b1c <__ctype_b_loc@plt+0x1084c>
  412b13:	test   r15,r15
  412b16:	je     412bf3 <__ctype_b_loc@plt+0x10923>
  412b1c:	mov    rax,QWORD PTR [rsp+0x18]
  412b21:	add    QWORD PTR [rax+0x78],rbp
  412b25:	mov    QWORD PTR [r13+0x0],r15
  412b29:	mov    QWORD PTR [r13+0x10],rbx
  412b2d:	mov    rax,QWORD PTR [r13+0x8]
  412b31:	lea    rcx,[rax+0x1]
  412b35:	mov    rbx,QWORD PTR [rsp+0x8]
  412b3a:	mov    QWORD PTR [r13+0x8],rcx
  412b3e:	mov    BYTE PTR [r15+rax*1],bl
  412b42:	mov    rbx,QWORD PTR [r14]
  412b45:	sub    QWORD PTR [rbx],0x1
  412b49:	jae    412b7a <__ctype_b_loc@plt+0x108aa>
  412b4b:	mov    rsi,QWORD PTR [rbx+0x18]
  412b4f:	mov    rdi,QWORD PTR [rbx+0x20]
  412b53:	mov    rdx,rsp
  412b56:	call   QWORD PTR [rbx+0x10]
  412b59:	mov    ecx,0xffffffff
  412b5e:	test   rax,rax
  412b61:	je     412b89 <__ctype_b_loc@plt+0x108b9>
  412b63:	mov    rdx,QWORD PTR [rsp]
  412b67:	test   rdx,rdx
  412b6a:	je     412b89 <__ctype_b_loc@plt+0x108b9>
  412b6c:	dec    rdx
  412b6f:	mov    QWORD PTR [rbx],rdx
  412b72:	mov    rcx,rax
  412b75:	inc    rcx
  412b78:	jmp    412b82 <__ctype_b_loc@plt+0x108b2>
  412b7a:	mov    rax,QWORD PTR [rbx+0x8]
  412b7e:	lea    rcx,[rax+0x1]
  412b82:	mov    QWORD PTR [rbx+0x8],rcx
  412b86:	movzx  ecx,BYTE PTR [rax]
  412b89:	mov    DWORD PTR [r12],ecx
  412b8d:	mov    rax,QWORD PTR [r12+0x48]
  412b92:	mov    rsi,QWORD PTR [rax]
  412b95:	mov    rdx,QWORD PTR [rax+0x8]
  412b99:	inc    rsi
  412b9c:	add    rdx,0xfffffffffffffffe
  412ba0:	mov    rdi,r12
  412ba3:	call   414230 <__ctype_b_loc@plt+0x11f60>
  412ba8:	mov    rcx,QWORD PTR [rsp+0x28]
  412bad:	mov    QWORD PTR [rcx],rax
  412bb0:	mov    eax,0x11e
  412bb5:	add    rsp,0x38
  412bb9:	pop    rbx
  412bba:	pop    r12
  412bbc:	pop    r13
  412bbe:	pop    r14
  412bc0:	pop    r15
  412bc2:	pop    rbp
  412bc3:	ret    
  412bc4:	mov    rax,QWORD PTR [rsp+0x18]
  412bc9:	mov    rdi,QWORD PTR [rax+0xa8]
  412bd0:	test   rdi,rdi
  412bd3:	jne    412c44 <__ctype_b_loc@plt+0x10974>
  412bd5:	mov    rax,QWORD PTR [rsp+0x18]
  412bda:	mov    BYTE PTR [rax+0xa],0x4
  412bde:	mov    rax,QWORD PTR [rax+0x20]
  412be2:	cmp    QWORD PTR [rax+0x98],0x0
  412bea:	je     412c3a <__ctype_b_loc@plt+0x1096a>
  412bec:	mov    rbx,QWORD PTR [rsp+0x18]
  412bf1:	jmp    412c20 <__ctype_b_loc@plt+0x10950>
  412bf3:	mov    rax,QWORD PTR [rsp+0x10]
  412bf8:	mov    rdi,QWORD PTR [rax+0xa8]
  412bff:	test   rdi,rdi
  412c02:	jne    412c44 <__ctype_b_loc@plt+0x10974>
  412c04:	mov    rax,QWORD PTR [rsp+0x10]
  412c09:	mov    BYTE PTR [rax+0xa],0x4
  412c0d:	mov    rax,QWORD PTR [rax+0x20]
  412c11:	cmp    QWORD PTR [rax+0x98],0x0
  412c19:	je     412c3a <__ctype_b_loc@plt+0x1096a>
  412c1b:	mov    rbx,QWORD PTR [rsp+0x10]
  412c20:	mov    rdi,rbx
  412c23:	mov    esi,0x4
  412c28:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  412c2d:	mov    rax,QWORD PTR [rbx+0x20]
  412c31:	mov    rdi,rbx
  412c34:	call   QWORD PTR [rax+0x98]
  412c3a:	mov    edi,0x1
  412c3f:	call   402280 <exit@plt>
  412c44:	mov    DWORD PTR [rdi+0xd0],0x4
  412c4e:	add    rdi,0x8
  412c52:	mov    esi,0x1
  412c57:	call   402230 <longjmp@plt>
  412c5c:	nop    DWORD PTR [rax+0x0]
  412c60:	push   rbp
  412c61:	push   r14
  412c63:	push   rbx
  412c64:	sub    rsp,0x10
  412c68:	mov    rbx,rdi
  412c6b:	mov    r14d,DWORD PTR [rdi]
  412c6e:	mov    rbp,QWORD PTR [rdi+0x40]
  412c72:	sub    QWORD PTR [rbp+0x0],0x1
  412c77:	jae    412cac <__ctype_b_loc@plt+0x109dc>
  412c79:	mov    rsi,QWORD PTR [rbp+0x18]
  412c7d:	mov    rdi,QWORD PTR [rbp+0x20]
  412c81:	lea    rdx,[rsp+0x8]
  412c86:	call   QWORD PTR [rbp+0x10]
  412c89:	mov    ecx,0xffffffff
  412c8e:	test   rax,rax
  412c91:	je     412cbb <__ctype_b_loc@plt+0x109eb>
  412c93:	mov    rdx,QWORD PTR [rsp+0x8]
  412c98:	test   rdx,rdx
  412c9b:	je     412cbb <__ctype_b_loc@plt+0x109eb>
  412c9d:	dec    rdx
  412ca0:	mov    QWORD PTR [rbp+0x0],rdx
  412ca4:	mov    rcx,rax
  412ca7:	inc    rcx
  412caa:	jmp    412cb4 <__ctype_b_loc@plt+0x109e4>
  412cac:	mov    rax,QWORD PTR [rbp+0x8]
  412cb0:	lea    rcx,[rax+0x1]
  412cb4:	mov    QWORD PTR [rbp+0x8],rcx
  412cb8:	movzx  ecx,BYTE PTR [rax]
  412cbb:	mov    DWORD PTR [rbx],ecx
  412cbd:	cmp    ecx,0xd
  412cc0:	je     412cc7 <__ctype_b_loc@plt+0x109f7>
  412cc2:	cmp    ecx,0xa
  412cc5:	jne    412d1b <__ctype_b_loc@plt+0x10a4b>
  412cc7:	cmp    ecx,r14d
  412cca:	je     412d1b <__ctype_b_loc@plt+0x10a4b>
  412ccc:	mov    rbp,QWORD PTR [rbx+0x40]
  412cd0:	sub    QWORD PTR [rbp+0x0],0x1
  412cd5:	jae    412d0a <__ctype_b_loc@plt+0x10a3a>
  412cd7:	mov    rsi,QWORD PTR [rbp+0x18]
  412cdb:	mov    rdi,QWORD PTR [rbp+0x20]
  412cdf:	lea    rdx,[rsp+0x8]
  412ce4:	call   QWORD PTR [rbp+0x10]
  412ce7:	mov    ecx,0xffffffff
  412cec:	test   rax,rax
  412cef:	je     412d19 <__ctype_b_loc@plt+0x10a49>
  412cf1:	mov    rdx,QWORD PTR [rsp+0x8]
  412cf6:	test   rdx,rdx
  412cf9:	je     412d19 <__ctype_b_loc@plt+0x10a49>
  412cfb:	dec    rdx
  412cfe:	mov    QWORD PTR [rbp+0x0],rdx
  412d02:	mov    rcx,rax
  412d05:	inc    rcx
  412d08:	jmp    412d12 <__ctype_b_loc@plt+0x10a42>
  412d0a:	mov    rax,QWORD PTR [rbp+0x8]
  412d0e:	lea    rcx,[rax+0x1]
  412d12:	mov    QWORD PTR [rbp+0x8],rcx
  412d16:	movzx  ecx,BYTE PTR [rax]
  412d19:	mov    DWORD PTR [rbx],ecx
  412d1b:	mov    eax,DWORD PTR [rbx+0x4]
  412d1e:	lea    ecx,[rax+0x1]
  412d21:	mov    DWORD PTR [rbx+0x4],ecx
  412d24:	cmp    eax,0x7ffffffc
  412d29:	jl     412d3d <__ctype_b_loc@plt+0x10a6d>
  412d2b:	mov    edx,DWORD PTR [rbx+0x10]
  412d2e:	lea    rsi,[rip+0x174c8]        # 42a1fd <__ctype_b_loc@plt+0x27f2d>
  412d35:	mov    rdi,rbx
  412d38:	call   413660 <__ctype_b_loc@plt+0x11390>
  412d3d:	add    rsp,0x10
  412d41:	pop    rbx
  412d42:	pop    r14
  412d44:	pop    rbp
  412d45:	ret    
  412d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d50:	push   rbp
  412d51:	push   r15
  412d53:	push   r14
  412d55:	push   r13
  412d57:	push   r12
  412d59:	push   rbx
  412d5a:	sub    rsp,0x28
  412d5e:	mov    r13d,DWORD PTR [rdi]
  412d61:	mov    QWORD PTR [rsp+0x8],rdi
  412d66:	mov    rbp,QWORD PTR [rdi+0x48]
  412d6a:	mov    rax,QWORD PTR [rbp+0x8]
  412d6e:	mov    rbx,QWORD PTR [rbp+0x10]
  412d72:	lea    rcx,[rax+0x1]
  412d76:	cmp    rcx,rbx
  412d79:	jbe    412dc7 <__ctype_b_loc@plt+0x10af7>
  412d7b:	movabs rax,0x7ffffffffffffffd
  412d85:	cmp    rbx,rax
  412d88:	jbe    412da1 <__ctype_b_loc@plt+0x10ad1>
  412d8a:	lea    rsi,[rip+0x174f9]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  412d91:	mov    rdi,QWORD PTR [rsp+0x8]
  412d96:	xor    edx,edx
  412d98:	call   413660 <__ctype_b_loc@plt+0x11390>
  412d9d:	mov    rbx,QWORD PTR [rbp+0x10]
  412da1:	lea    r15,[rbx+rbx*1]
  412da5:	mov    rax,QWORD PTR [rsp+0x8]
  412daa:	mov    rdi,QWORD PTR [rax+0x38]
  412dae:	cmp    r15,0xfffffffffffffffe
  412db2:	jne    412dcd <__ctype_b_loc@plt+0x10afd>
  412db4:	lea    rsi,[rip+0x16ffe]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  412dbb:	xor    r12d,r12d
  412dbe:	xor    eax,eax
  412dc0:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412dc5:	jmp    412dfd <__ctype_b_loc@plt+0x10b2d>
  412dc7:	mov    r12,QWORD PTR [rbp+0x0]
  412dcb:	jmp    412e0d <__ctype_b_loc@plt+0x10b3d>
  412dcd:	mov    rsi,QWORD PTR [rbp+0x0]
  412dd1:	mov    QWORD PTR [rsp+0x10],rdi
  412dd6:	mov    r14,QWORD PTR [rdi+0x20]
  412dda:	mov    rdi,QWORD PTR [r14+0x18]
  412dde:	mov    rdx,rbx
  412de1:	mov    rcx,r15
  412de4:	call   QWORD PTR [r14+0x10]
  412de8:	mov    r12,rax
  412deb:	test   r15,r15
  412dee:	je     412df9 <__ctype_b_loc@plt+0x10b29>
  412df0:	test   r12,r12
  412df3:	je     413012 <__ctype_b_loc@plt+0x10d42>
  412df9:	add    QWORD PTR [r14+0x78],rbx
  412dfd:	mov    QWORD PTR [rbp+0x0],r12
  412e01:	mov    QWORD PTR [rbp+0x10],r15
  412e05:	mov    rax,QWORD PTR [rbp+0x8]
  412e09:	lea    rcx,[rax+0x1]
  412e0d:	mov    QWORD PTR [rbp+0x8],rcx
  412e11:	mov    BYTE PTR [r12+rax*1],r13b
  412e15:	mov    rax,QWORD PTR [rsp+0x8]
  412e1a:	mov    rbx,QWORD PTR [rax+0x40]
  412e1e:	sub    QWORD PTR [rbx],0x1
  412e22:	mov    DWORD PTR [rsp+0x24],r13d
  412e27:	jae    412e67 <__ctype_b_loc@plt+0x10b97>
  412e29:	mov    rsi,QWORD PTR [rbx+0x18]
  412e2d:	mov    rdi,QWORD PTR [rbx+0x20]
  412e31:	lea    rdx,[rsp+0x18]
  412e36:	call   QWORD PTR [rbx+0x10]
  412e39:	mov    ecx,0xffffffff
  412e3e:	test   rax,rax
  412e41:	je     412e76 <__ctype_b_loc@plt+0x10ba6>
  412e43:	mov    rdx,QWORD PTR [rsp+0x18]
  412e48:	test   rdx,rdx
  412e4b:	mov    r13,QWORD PTR [rsp+0x8]
  412e50:	je     412e7b <__ctype_b_loc@plt+0x10bab>
  412e52:	dec    rdx
  412e55:	mov    QWORD PTR [rbx],rdx
  412e58:	mov    rcx,rax
  412e5b:	inc    rcx
  412e5e:	mov    QWORD PTR [rbx+0x8],rcx
  412e62:	movzx  ecx,BYTE PTR [rax]
  412e65:	jmp    412e7b <__ctype_b_loc@plt+0x10bab>
  412e67:	mov    rax,QWORD PTR [rbx+0x8]
  412e6b:	lea    rcx,[rax+0x1]
  412e6f:	mov    QWORD PTR [rbx+0x8],rcx
  412e73:	movzx  ecx,BYTE PTR [rax]
  412e76:	mov    r13,QWORD PTR [rsp+0x8]
  412e7b:	mov    DWORD PTR [r13+0x0],ecx
  412e7f:	xor    r15d,r15d
  412e82:	cmp    ecx,0x3d
  412e85:	jne    412fb3 <__ctype_b_loc@plt+0x10ce3>
  412e8b:	xor    r15d,r15d
  412e8e:	jmp    412eaf <__ctype_b_loc@plt+0x10bdf>
  412e90:	mov    rax,QWORD PTR [rbx+0x8]
  412e94:	lea    rcx,[rax+0x1]
  412e98:	mov    QWORD PTR [rbx+0x8],rcx
  412e9c:	movzx  ecx,BYTE PTR [rax]
  412e9f:	mov    DWORD PTR [r13+0x0],ecx
  412ea3:	inc    r15d
  412ea6:	cmp    ecx,0x3d
  412ea9:	jne    412fb3 <__ctype_b_loc@plt+0x10ce3>
  412eaf:	mov    r12,QWORD PTR [r13+0x48]
  412eb3:	mov    rcx,QWORD PTR [r12+0x8]
  412eb8:	mov    r14,QWORD PTR [r12+0x10]
  412ebd:	lea    rdx,[rcx+0x1]
  412ec1:	cmp    rdx,r14
  412ec4:	jbe    412f10 <__ctype_b_loc@plt+0x10c40>
  412ec6:	movabs rax,0x7ffffffffffffffd
  412ed0:	cmp    r14,rax
  412ed3:	jbe    412eeb <__ctype_b_loc@plt+0x10c1b>
  412ed5:	mov    rdi,r13
  412ed8:	lea    rsi,[rip+0x173ab]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  412edf:	xor    edx,edx
  412ee1:	call   413660 <__ctype_b_loc@plt+0x11390>
  412ee6:	mov    r14,QWORD PTR [r12+0x10]
  412eeb:	lea    rbp,[r14+r14*1]
  412eef:	mov    rbx,QWORD PTR [r13+0x38]
  412ef3:	cmp    rbp,0xfffffffffffffffe
  412ef7:	jne    412f20 <__ctype_b_loc@plt+0x10c50>
  412ef9:	mov    rdi,rbx
  412efc:	lea    rsi,[rip+0x16eb6]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  412f03:	xor    eax,eax
  412f05:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  412f0a:	xor    eax,eax
  412f0c:	jmp    412f4d <__ctype_b_loc@plt+0x10c7d>
  412f0e:	xchg   ax,ax
  412f10:	mov    rax,QWORD PTR [r12]
  412f14:	jmp    412f5f <__ctype_b_loc@plt+0x10c8f>
  412f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f20:	mov    rsi,QWORD PTR [r12]
  412f24:	mov    r13,QWORD PTR [rbx+0x20]
  412f28:	mov    rdi,QWORD PTR [r13+0x18]
  412f2c:	mov    rdx,r14
  412f2f:	mov    rcx,rbp
  412f32:	call   QWORD PTR [r13+0x10]
  412f36:	test   rbp,rbp
  412f39:	je     412f44 <__ctype_b_loc@plt+0x10c74>
  412f3b:	test   rax,rax
  412f3e:	je     412fd0 <__ctype_b_loc@plt+0x10d00>
  412f44:	add    QWORD PTR [r13+0x78],r14
  412f48:	mov    r13,QWORD PTR [rsp+0x8]
  412f4d:	mov    QWORD PTR [r12],rax
  412f51:	mov    QWORD PTR [r12+0x10],rbp
  412f56:	mov    rcx,QWORD PTR [r12+0x8]
  412f5b:	lea    rdx,[rcx+0x1]
  412f5f:	mov    QWORD PTR [r12+0x8],rdx
  412f64:	mov    BYTE PTR [rax+rcx*1],0x3d
  412f68:	mov    rbx,QWORD PTR [r13+0x40]
  412f6c:	sub    QWORD PTR [rbx],0x1
  412f70:	jae    412e90 <__ctype_b_loc@plt+0x10bc0>
  412f76:	mov    rsi,QWORD PTR [rbx+0x18]
  412f7a:	mov    rdi,QWORD PTR [rbx+0x20]
  412f7e:	lea    rdx,[rsp+0x18]
  412f83:	call   QWORD PTR [rbx+0x10]
  412f86:	mov    ecx,0xffffffff
  412f8b:	test   rax,rax
  412f8e:	je     412e9f <__ctype_b_loc@plt+0x10bcf>
  412f94:	mov    rdx,QWORD PTR [rsp+0x18]
  412f99:	test   rdx,rdx
  412f9c:	je     412e9f <__ctype_b_loc@plt+0x10bcf>
  412fa2:	dec    rdx
  412fa5:	mov    QWORD PTR [rbx],rdx
  412fa8:	mov    rcx,rax
  412fab:	inc    rcx
  412fae:	jmp    412e98 <__ctype_b_loc@plt+0x10bc8>
  412fb3:	xor    eax,eax
  412fb5:	cmp    ecx,DWORD PTR [rsp+0x24]
  412fb9:	setne  al
  412fbc:	neg    eax
  412fbe:	xor    eax,r15d
  412fc1:	add    rsp,0x28
  412fc5:	pop    rbx
  412fc6:	pop    r12
  412fc8:	pop    r13
  412fca:	pop    r14
  412fcc:	pop    r15
  412fce:	pop    rbp
  412fcf:	ret    
  412fd0:	mov    rdi,QWORD PTR [rbx+0xa8]
  412fd7:	test   rdi,rdi
  412fda:	jne    413041 <__ctype_b_loc@plt+0x10d71>
  412fdc:	mov    BYTE PTR [rbx+0xa],0x4
  412fe0:	mov    rax,QWORD PTR [rbx+0x20]
  412fe4:	cmp    QWORD PTR [rax+0x98],0x0
  412fec:	je     413008 <__ctype_b_loc@plt+0x10d38>
  412fee:	mov    rdi,rbx
  412ff1:	mov    esi,0x4
  412ff6:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  412ffb:	mov    rax,QWORD PTR [rbx+0x20]
  412fff:	mov    rdi,rbx
  413002:	call   QWORD PTR [rax+0x98]
  413008:	mov    edi,0x1
  41300d:	call   402280 <exit@plt>
  413012:	mov    rax,QWORD PTR [rsp+0x10]
  413017:	mov    rdi,QWORD PTR [rax+0xa8]
  41301e:	test   rdi,rdi
  413021:	jne    413041 <__ctype_b_loc@plt+0x10d71>
  413023:	mov    rax,QWORD PTR [rsp+0x10]
  413028:	mov    BYTE PTR [rax+0xa],0x4
  41302c:	mov    rax,QWORD PTR [rax+0x20]
  413030:	cmp    QWORD PTR [rax+0x98],0x0
  413038:	je     413008 <__ctype_b_loc@plt+0x10d38>
  41303a:	mov    rbx,QWORD PTR [rsp+0x10]
  41303f:	jmp    412fee <__ctype_b_loc@plt+0x10d1e>
  413041:	mov    DWORD PTR [rdi+0xd0],0x4
  41304b:	add    rdi,0x8
  41304f:	mov    esi,0x1
  413054:	call   402230 <longjmp@plt>
  413059:	nop    DWORD PTR [rax+0x0]
  413060:	push   rbp
  413061:	push   r15
  413063:	push   r14
  413065:	push   r13
  413067:	push   r12
  413069:	push   rbx
  41306a:	sub    rsp,0x28
  41306e:	mov    QWORD PTR [rsp+0x20],rdx
  413073:	mov    r14,rsi
  413076:	mov    r13,rdi
  413079:	movabs rdx,0x7ffffffffffffffd
  413083:	mov    ebx,DWORD PTR [rdi]
  413085:	mov    r15,QWORD PTR [rdi+0x48]
  413089:	mov    rax,QWORD PTR [r15+0x8]
  41308d:	mov    r12,QWORD PTR [r15+0x10]
  413091:	lea    rcx,[rax+0x1]
  413095:	cmp    rcx,r12
  413098:	mov    QWORD PTR [rsp+0x18],rdi
  41309d:	jbe    4130dc <__ctype_b_loc@plt+0x10e0c>
  41309f:	cmp    r12,rdx
  4130a2:	jbe    4130b9 <__ctype_b_loc@plt+0x10de9>
  4130a4:	lea    rsi,[rip+0x171df]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  4130ab:	mov    rdi,r13
  4130ae:	xor    edx,edx
  4130b0:	call   413660 <__ctype_b_loc@plt+0x11390>
  4130b5:	mov    r12,QWORD PTR [r15+0x10]
  4130b9:	mov    rax,r13
  4130bc:	lea    r13,[r12+r12*1]
  4130c0:	mov    rdi,QWORD PTR [rax+0x38]
  4130c4:	cmp    r13,0xfffffffffffffffe
  4130c8:	jne    4130e1 <__ctype_b_loc@plt+0x10e11>
  4130ca:	lea    rsi,[rip+0x16ce8]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4130d1:	xor    ebp,ebp
  4130d3:	xor    eax,eax
  4130d5:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4130da:	jmp    413116 <__ctype_b_loc@plt+0x10e46>
  4130dc:	mov    rbp,QWORD PTR [r15]
  4130df:	jmp    41312a <__ctype_b_loc@plt+0x10e5a>
  4130e1:	mov    DWORD PTR [rsp+0x8],ebx
  4130e5:	mov    rsi,QWORD PTR [r15]
  4130e8:	mov    QWORD PTR [rsp],rdi
  4130ec:	mov    rbx,QWORD PTR [rdi+0x20]
  4130f0:	mov    rdi,QWORD PTR [rbx+0x18]
  4130f4:	mov    rdx,r12
  4130f7:	mov    rcx,r13
  4130fa:	call   QWORD PTR [rbx+0x10]
  4130fd:	mov    rbp,rax
  413100:	test   r13,r13
  413103:	je     41310e <__ctype_b_loc@plt+0x10e3e>
  413105:	test   rbp,rbp
  413108:	je     413607 <__ctype_b_loc@plt+0x11337>
  41310e:	add    QWORD PTR [rbx+0x78],r12
  413112:	mov    ebx,DWORD PTR [rsp+0x8]
  413116:	mov    QWORD PTR [r15],rbp
  413119:	mov    QWORD PTR [r15+0x10],r13
  41311d:	mov    rax,QWORD PTR [r15+0x8]
  413121:	lea    rcx,[rax+0x1]
  413125:	mov    r13,QWORD PTR [rsp+0x18]
  41312a:	mov    QWORD PTR [r15+0x8],rcx
  41312e:	mov    BYTE PTR [rbp+rax*1+0x0],bl
  413132:	mov    rbx,QWORD PTR [r13+0x40]
  413136:	sub    QWORD PTR [rbx],0x1
  41313a:	jae    41316e <__ctype_b_loc@plt+0x10e9e>
  41313c:	mov    rsi,QWORD PTR [rbx+0x18]
  413140:	mov    rdi,QWORD PTR [rbx+0x20]
  413144:	lea    rdx,[rsp+0x10]
  413149:	call   QWORD PTR [rbx+0x10]
  41314c:	mov    ecx,0xffffffff
  413151:	test   rax,rax
  413154:	je     41317d <__ctype_b_loc@plt+0x10ead>
  413156:	mov    rdx,QWORD PTR [rsp+0x10]
  41315b:	test   rdx,rdx
  41315e:	je     41317d <__ctype_b_loc@plt+0x10ead>
  413160:	dec    rdx
  413163:	mov    QWORD PTR [rbx],rdx
  413166:	mov    rcx,rax
  413169:	inc    rcx
  41316c:	jmp    413176 <__ctype_b_loc@plt+0x10ea6>
  41316e:	mov    rax,QWORD PTR [rbx+0x8]
  413172:	lea    rcx,[rax+0x1]
  413176:	mov    QWORD PTR [rbx+0x8],rcx
  41317a:	movzx  ecx,BYTE PTR [rax]
  41317d:	mov    DWORD PTR [r13+0x0],ecx
  413181:	cmp    ecx,0xd
  413184:	je     41318b <__ctype_b_loc@plt+0x10ebb>
  413186:	cmp    ecx,0xa
  413189:	jne    413193 <__ctype_b_loc@plt+0x10ec3>
  41318b:	mov    rdi,r13
  41318e:	call   412c60 <__ctype_b_loc@plt+0x10990>
  413193:	test   r14,r14
  413196:	lea    rax,[rip+0x17090]        # 42a22d <__ctype_b_loc@plt+0x27f5d>
  41319d:	lea    rcx,[rip+0x17072]        # 42a216 <__ctype_b_loc@plt+0x27f46>
  4131a4:	cmove  rcx,rax
  4131a8:	mov    QWORD PTR [rsp],rcx
  4131ac:	mov    QWORD PTR [rsp+0x8],r14
  4131b1:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  4131b3:	mov    rdi,r13
  4131b6:	mov    rsi,QWORD PTR [rsp]
  4131ba:	mov    edx,0x11f
  4131bf:	call   413660 <__ctype_b_loc@plt+0x11390>
  4131c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131ce:	xchg   ax,ax
  4131d0:	mov    r12d,DWORD PTR [r13+0x0]
  4131d4:	cmp    r12d,0xc
  4131d8:	jg     4131f0 <__ctype_b_loc@plt+0x10f20>
  4131da:	cmp    r12d,0xffffffff
  4131de:	je     4131b3 <__ctype_b_loc@plt+0x10ee3>
  4131e0:	cmp    r12d,0xa
  4131e4:	je     413210 <__ctype_b_loc@plt+0x10f40>
  4131e6:	jmp    413277 <__ctype_b_loc@plt+0x10fa7>
  4131eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4131f0:	cmp    r12d,0xd
  4131f4:	je     413210 <__ctype_b_loc@plt+0x10f40>
  4131f6:	cmp    r12d,0x5d
  4131fa:	jne    413277 <__ctype_b_loc@plt+0x10fa7>
  4131fc:	mov    rdi,r13
  4131ff:	call   412d50 <__ctype_b_loc@plt+0x10a80>
  413204:	cmp    eax,DWORD PTR [rsp+0x20]
  413208:	jne    4131d0 <__ctype_b_loc@plt+0x10f00>
  41320a:	jmp    41347b <__ctype_b_loc@plt+0x111ab>
  41320f:	nop
  413210:	mov    rbx,QWORD PTR [r13+0x48]
  413214:	mov    rcx,QWORD PTR [rbx+0x8]
  413218:	mov    r15,QWORD PTR [rbx+0x10]
  41321c:	lea    rdx,[rcx+0x1]
  413220:	cmp    rdx,r15
  413223:	jbe    4132e9 <__ctype_b_loc@plt+0x11019>
  413229:	movabs rax,0x7ffffffffffffffd
  413233:	cmp    r15,rax
  413236:	jbe    41324d <__ctype_b_loc@plt+0x10f7d>
  413238:	mov    rdi,r13
  41323b:	lea    rsi,[rip+0x17048]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  413242:	xor    edx,edx
  413244:	call   413660 <__ctype_b_loc@plt+0x11390>
  413249:	mov    r15,QWORD PTR [rbx+0x10]
  41324d:	lea    rbp,[r15+r15*1]
  413251:	mov    r13,QWORD PTR [r13+0x38]
  413255:	cmp    rbp,0xfffffffffffffffe
  413259:	jne    4132ee <__ctype_b_loc@plt+0x1101e>
  41325f:	mov    rdi,r13
  413262:	lea    rsi,[rip+0x16b50]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413269:	xor    eax,eax
  41326b:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  413270:	xor    eax,eax
  413272:	jmp    41331a <__ctype_b_loc@plt+0x1104a>
  413277:	test   r14,r14
  41327a:	je     413358 <__ctype_b_loc@plt+0x11088>
  413280:	mov    r14,QWORD PTR [r13+0x48]
  413284:	mov    rcx,QWORD PTR [r14+0x8]
  413288:	mov    rbp,QWORD PTR [r14+0x10]
  41328c:	lea    rdx,[rcx+0x1]
  413290:	cmp    rdx,rbp
  413293:	jbe    4133a2 <__ctype_b_loc@plt+0x110d2>
  413299:	movabs rax,0x7ffffffffffffffd
  4132a3:	cmp    rbp,rax
  4132a6:	jbe    4132bd <__ctype_b_loc@plt+0x10fed>
  4132a8:	mov    rdi,r13
  4132ab:	lea    rsi,[rip+0x16fd8]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  4132b2:	xor    edx,edx
  4132b4:	call   413660 <__ctype_b_loc@plt+0x11390>
  4132b9:	mov    rbp,QWORD PTR [r14+0x10]
  4132bd:	mov    r15,rbp
  4132c0:	add    r15,rbp
  4132c3:	mov    r13,QWORD PTR [r13+0x38]
  4132c7:	cmp    r15,0xfffffffffffffffe
  4132cb:	jne    4133bf <__ctype_b_loc@plt+0x110ef>
  4132d1:	mov    rdi,r13
  4132d4:	lea    rsi,[rip+0x16ade]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4132db:	xor    eax,eax
  4132dd:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4132e2:	xor    eax,eax
  4132e4:	jmp    4133e5 <__ctype_b_loc@plt+0x11115>
  4132e9:	mov    rax,QWORD PTR [rbx]
  4132ec:	jmp    41332e <__ctype_b_loc@plt+0x1105e>
  4132ee:	mov    rsi,QWORD PTR [rbx]
  4132f1:	mov    r14,QWORD PTR [r13+0x20]
  4132f5:	mov    rdi,QWORD PTR [r14+0x18]
  4132f9:	mov    rdx,r15
  4132fc:	mov    rcx,rbp
  4132ff:	call   QWORD PTR [r14+0x10]
  413303:	test   rbp,rbp
  413306:	je     413311 <__ctype_b_loc@plt+0x11041>
  413308:	test   rax,rax
  41330b:	je     4135c4 <__ctype_b_loc@plt+0x112f4>
  413311:	add    QWORD PTR [r14+0x78],r15
  413315:	mov    r14,QWORD PTR [rsp+0x8]
  41331a:	mov    QWORD PTR [rbx],rax
  41331d:	mov    QWORD PTR [rbx+0x10],rbp
  413321:	mov    rcx,QWORD PTR [rbx+0x8]
  413325:	lea    rdx,[rcx+0x1]
  413329:	mov    r13,QWORD PTR [rsp+0x18]
  41332e:	mov    QWORD PTR [rbx+0x8],rdx
  413332:	mov    BYTE PTR [rax+rcx*1],0xa
  413336:	mov    rdi,r13
  413339:	call   412c60 <__ctype_b_loc@plt+0x10990>
  41333e:	test   r14,r14
  413341:	jne    4131d0 <__ctype_b_loc@plt+0x10f00>
  413347:	mov    rax,QWORD PTR [r13+0x48]
  41334b:	mov    QWORD PTR [rax+0x8],0x0
  413353:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  413358:	mov    rbx,QWORD PTR [r13+0x40]
  41335c:	sub    QWORD PTR [rbx],0x1
  413360:	jae    4133a7 <__ctype_b_loc@plt+0x110d7>
  413362:	mov    rsi,QWORD PTR [rbx+0x18]
  413366:	mov    rdi,QWORD PTR [rbx+0x20]
  41336a:	lea    rdx,[rsp+0x10]
  41336f:	call   QWORD PTR [rbx+0x10]
  413372:	mov    ecx,0xffffffff
  413377:	test   rax,rax
  41337a:	je     413399 <__ctype_b_loc@plt+0x110c9>
  41337c:	mov    rdx,QWORD PTR [rsp+0x10]
  413381:	test   rdx,rdx
  413384:	je     413399 <__ctype_b_loc@plt+0x110c9>
  413386:	dec    rdx
  413389:	mov    QWORD PTR [rbx],rdx
  41338c:	mov    rcx,rax
  41338f:	inc    rcx
  413392:	mov    QWORD PTR [rbx+0x8],rcx
  413396:	movzx  ecx,BYTE PTR [rax]
  413399:	mov    DWORD PTR [r13+0x0],ecx
  41339d:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  4133a2:	mov    rax,QWORD PTR [r14]
  4133a5:	jmp    4133f9 <__ctype_b_loc@plt+0x11129>
  4133a7:	mov    rax,QWORD PTR [rbx+0x8]
  4133ab:	lea    rcx,[rax+0x1]
  4133af:	mov    QWORD PTR [rbx+0x8],rcx
  4133b3:	movzx  eax,BYTE PTR [rax]
  4133b6:	mov    DWORD PTR [r13+0x0],eax
  4133ba:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  4133bf:	mov    rsi,QWORD PTR [r14]
  4133c2:	mov    rbx,QWORD PTR [r13+0x20]
  4133c6:	mov    rdi,QWORD PTR [rbx+0x18]
  4133ca:	mov    rdx,rbp
  4133cd:	mov    rcx,r15
  4133d0:	call   QWORD PTR [rbx+0x10]
  4133d3:	test   r15,r15
  4133d6:	je     4133e1 <__ctype_b_loc@plt+0x11111>
  4133d8:	test   rax,rax
  4133db:	je     4135c4 <__ctype_b_loc@plt+0x112f4>
  4133e1:	add    QWORD PTR [rbx+0x78],rbp
  4133e5:	mov    QWORD PTR [r14],rax
  4133e8:	mov    QWORD PTR [r14+0x10],r15
  4133ec:	mov    rcx,QWORD PTR [r14+0x8]
  4133f0:	lea    rdx,[rcx+0x1]
  4133f4:	mov    r13,QWORD PTR [rsp+0x18]
  4133f9:	mov    QWORD PTR [r14+0x8],rdx
  4133fd:	mov    BYTE PTR [rax+rcx*1],r12b
  413401:	mov    rbx,QWORD PTR [r13+0x40]
  413405:	sub    QWORD PTR [rbx],0x1
  413409:	jae    413450 <__ctype_b_loc@plt+0x11180>
  41340b:	mov    rsi,QWORD PTR [rbx+0x18]
  41340f:	mov    rdi,QWORD PTR [rbx+0x20]
  413413:	lea    rdx,[rsp+0x10]
  413418:	call   QWORD PTR [rbx+0x10]
  41341b:	mov    ecx,0xffffffff
  413420:	test   rax,rax
  413423:	je     41346d <__ctype_b_loc@plt+0x1119d>
  413425:	mov    rdx,QWORD PTR [rsp+0x10]
  41342a:	test   rdx,rdx
  41342d:	mov    r14,QWORD PTR [rsp+0x8]
  413432:	je     413447 <__ctype_b_loc@plt+0x11177>
  413434:	dec    rdx
  413437:	mov    QWORD PTR [rbx],rdx
  41343a:	mov    rcx,rax
  41343d:	inc    rcx
  413440:	mov    QWORD PTR [rbx+0x8],rcx
  413444:	movzx  ecx,BYTE PTR [rax]
  413447:	mov    DWORD PTR [r13+0x0],ecx
  41344b:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  413450:	mov    rax,QWORD PTR [rbx+0x8]
  413454:	lea    rcx,[rax+0x1]
  413458:	mov    QWORD PTR [rbx+0x8],rcx
  41345c:	movzx  eax,BYTE PTR [rax]
  41345f:	mov    DWORD PTR [r13+0x0],eax
  413463:	mov    r14,QWORD PTR [rsp+0x8]
  413468:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  41346d:	mov    r14,QWORD PTR [rsp+0x8]
  413472:	mov    DWORD PTR [r13+0x0],ecx
  413476:	jmp    4131d0 <__ctype_b_loc@plt+0x10f00>
  41347b:	mov    ebx,DWORD PTR [r13+0x0]
  41347f:	mov    r15,QWORD PTR [r13+0x48]
  413483:	mov    rax,QWORD PTR [r15+0x8]
  413487:	mov    r12,QWORD PTR [r15+0x10]
  41348b:	lea    rcx,[rax+0x1]
  41348f:	cmp    rcx,r12
  413492:	jbe    4134db <__ctype_b_loc@plt+0x1120b>
  413494:	movabs rax,0x7ffffffffffffffd
  41349e:	cmp    r12,rax
  4134a1:	jbe    4134b8 <__ctype_b_loc@plt+0x111e8>
  4134a3:	lea    rsi,[rip+0x16de0]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  4134aa:	mov    rdi,r13
  4134ad:	xor    edx,edx
  4134af:	call   413660 <__ctype_b_loc@plt+0x11390>
  4134b4:	mov    r12,QWORD PTR [r15+0x10]
  4134b8:	mov    rax,r13
  4134bb:	lea    r13,[r12+r12*1]
  4134bf:	mov    rdi,QWORD PTR [rax+0x38]
  4134c3:	cmp    r13,0xfffffffffffffffe
  4134c7:	jne    4134e0 <__ctype_b_loc@plt+0x11210>
  4134c9:	lea    rsi,[rip+0x168e9]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  4134d0:	xor    ebp,ebp
  4134d2:	xor    eax,eax
  4134d4:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  4134d9:	jmp    413515 <__ctype_b_loc@plt+0x11245>
  4134db:	mov    rbp,QWORD PTR [r15]
  4134de:	jmp    413529 <__ctype_b_loc@plt+0x11259>
  4134e0:	mov    DWORD PTR [rsp+0x8],ebx
  4134e4:	mov    rsi,QWORD PTR [r15]
  4134e7:	mov    QWORD PTR [rsp],rdi
  4134eb:	mov    rbx,QWORD PTR [rdi+0x20]
  4134ef:	mov    rdi,QWORD PTR [rbx+0x18]
  4134f3:	mov    rdx,r12
  4134f6:	mov    rcx,r13
  4134f9:	call   QWORD PTR [rbx+0x10]
  4134fc:	mov    rbp,rax
  4134ff:	test   r13,r13
  413502:	je     41350d <__ctype_b_loc@plt+0x1123d>
  413504:	test   rbp,rbp
  413507:	je     413607 <__ctype_b_loc@plt+0x11337>
  41350d:	add    QWORD PTR [rbx+0x78],r12
  413511:	mov    ebx,DWORD PTR [rsp+0x8]
  413515:	mov    QWORD PTR [r15],rbp
  413518:	mov    QWORD PTR [r15+0x10],r13
  41351c:	mov    rax,QWORD PTR [r15+0x8]
  413520:	lea    rcx,[rax+0x1]
  413524:	mov    r13,QWORD PTR [rsp+0x18]
  413529:	mov    QWORD PTR [r15+0x8],rcx
  41352d:	mov    BYTE PTR [rbp+rax*1+0x0],bl
  413531:	mov    rbx,QWORD PTR [r13+0x40]
  413535:	sub    QWORD PTR [rbx],0x1
  413539:	jae    41356d <__ctype_b_loc@plt+0x1129d>
  41353b:	mov    rsi,QWORD PTR [rbx+0x18]
  41353f:	mov    rdi,QWORD PTR [rbx+0x20]
  413543:	lea    rdx,[rsp+0x10]
  413548:	call   QWORD PTR [rbx+0x10]
  41354b:	mov    ecx,0xffffffff
  413550:	test   rax,rax
  413553:	je     41357c <__ctype_b_loc@plt+0x112ac>
  413555:	mov    rdx,QWORD PTR [rsp+0x10]
  41355a:	test   rdx,rdx
  41355d:	je     41357c <__ctype_b_loc@plt+0x112ac>
  41355f:	dec    rdx
  413562:	mov    QWORD PTR [rbx],rdx
  413565:	mov    rcx,rax
  413568:	inc    rcx
  41356b:	jmp    413575 <__ctype_b_loc@plt+0x112a5>
  41356d:	mov    rax,QWORD PTR [rbx+0x8]
  413571:	lea    rcx,[rax+0x1]
  413575:	mov    QWORD PTR [rbx+0x8],rcx
  413579:	movzx  ecx,BYTE PTR [rax]
  41357c:	mov    DWORD PTR [r13+0x0],ecx
  413580:	test   r14,r14
  413583:	je     4135b5 <__ctype_b_loc@plt+0x112e5>
  413585:	mov    rax,QWORD PTR [r13+0x48]
  413589:	mov    rdi,QWORD PTR [rsp+0x20]
  41358e:	movsxd rcx,edi
  413591:	mov    rsi,QWORD PTR [rax]
  413594:	mov    rdx,QWORD PTR [rax+0x8]
  413598:	add    rsi,rcx
  41359b:	add    rsi,0x2
  41359f:	lea    eax,[rdi+rdi*1]
  4135a2:	add    eax,0x4
  4135a5:	cdqe   
  4135a7:	sub    rdx,rax
  4135aa:	mov    rdi,r13
  4135ad:	call   414230 <__ctype_b_loc@plt+0x11f60>
  4135b2:	mov    QWORD PTR [r14],rax
  4135b5:	add    rsp,0x28
  4135b9:	pop    rbx
  4135ba:	pop    r12
  4135bc:	pop    r13
  4135be:	pop    r14
  4135c0:	pop    r15
  4135c2:	pop    rbp
  4135c3:	ret    
  4135c4:	mov    rdi,QWORD PTR [r13+0xa8]
  4135cb:	test   rdi,rdi
  4135ce:	jne    413647 <__ctype_b_loc@plt+0x11377>
  4135d0:	mov    BYTE PTR [r13+0xa],0x4
  4135d5:	mov    rax,QWORD PTR [r13+0x20]
  4135d9:	cmp    QWORD PTR [rax+0x98],0x0
  4135e1:	je     4135fd <__ctype_b_loc@plt+0x1132d>
  4135e3:	mov    rdi,r13
  4135e6:	mov    esi,0x4
  4135eb:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4135f0:	mov    rax,QWORD PTR [r13+0x20]
  4135f4:	mov    rdi,r13
  4135f7:	call   QWORD PTR [rax+0x98]
  4135fd:	mov    edi,0x1
  413602:	call   402280 <exit@plt>
  413607:	mov    rax,QWORD PTR [rsp]
  41360b:	mov    rdi,QWORD PTR [rax+0xa8]
  413612:	test   rdi,rdi
  413615:	jne    413647 <__ctype_b_loc@plt+0x11377>
  413617:	mov    rax,QWORD PTR [rsp]
  41361b:	mov    BYTE PTR [rax+0xa],0x4
  41361f:	mov    rax,QWORD PTR [rax+0x20]
  413623:	cmp    QWORD PTR [rax+0x98],0x0
  41362b:	je     4135fd <__ctype_b_loc@plt+0x1132d>
  41362d:	mov    rbx,QWORD PTR [rsp]
  413631:	mov    rdi,rbx
  413634:	mov    esi,0x4
  413639:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41363e:	mov    rax,QWORD PTR [rbx+0x20]
  413642:	mov    rdi,rbx
  413645:	jmp    4135f7 <__ctype_b_loc@plt+0x11327>
  413647:	mov    DWORD PTR [rdi+0xd0],0x4
  413651:	add    rdi,0x8
  413655:	mov    esi,0x1
  41365a:	call   402230 <longjmp@plt>
  41365f:	nop
  413660:	push   rbp
  413661:	push   r15
  413663:	push   r14
  413665:	push   r13
  413667:	push   r12
  413669:	push   rbx
  41366a:	sub    rsp,0x78
  41366e:	mov    r13d,edx
  413671:	mov    rbp,rsi
  413674:	mov    r12,rdi
  413677:	mov    rsi,QWORD PTR [rdi+0x50]
  41367b:	add    rsi,0x18
  41367f:	lea    rbx,[rsp+0x20]
  413684:	mov    edx,0x50
  413689:	mov    rdi,rbx
  41368c:	call   404710 <__ctype_b_loc@plt+0x2440>
  413691:	mov    rdi,QWORD PTR [r12+0x38]
  413696:	mov    ecx,DWORD PTR [r12+0x4]
  41369b:	lea    rsi,[rip+0x1673e]        # 429de0 <__ctype_b_loc@plt+0x27b10>
  4136a2:	mov    rdx,rbx
  4136a5:	mov    r8,rbp
  4136a8:	xor    eax,eax
  4136aa:	call   404800 <__ctype_b_loc@plt+0x2530>
  4136af:	test   r13d,r13d
  4136b2:	je     41383b <__ctype_b_loc@plt+0x1156b>
  4136b8:	mov    r14,rax
  4136bb:	mov    rbp,QWORD PTR [r12+0x38]
  4136c0:	lea    eax,[r13-0x11c]
  4136c7:	cmp    eax,0x2
  4136ca:	ja     413733 <__ctype_b_loc@plt+0x11463>
  4136cc:	mov    r15,QWORD PTR [r12+0x48]
  4136d1:	mov    rax,QWORD PTR [r15+0x8]
  4136d5:	mov    rbx,QWORD PTR [r15+0x10]
  4136d9:	lea    rcx,[rax+0x1]
  4136dd:	cmp    rcx,rbx
  4136e0:	jbe    41375d <__ctype_b_loc@plt+0x1148d>
  4136e2:	movabs rax,0x7ffffffffffffffe
  4136ec:	mov    QWORD PTR [rsp+0x18],rbp
  4136f1:	mov    rdi,rbp
  4136f4:	cmp    rbx,rax
  4136f7:	jb     413713 <__ctype_b_loc@plt+0x11443>
  4136f9:	lea    rsi,[rip+0x16b8a]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  413700:	mov    rdi,r12
  413703:	xor    edx,edx
  413705:	call   413660 <__ctype_b_loc@plt+0x11390>
  41370a:	mov    rbx,QWORD PTR [r15+0x10]
  41370e:	mov    rdi,QWORD PTR [r12+0x38]
  413713:	lea    rbp,[rbx+rbx*1]
  413717:	cmp    rbp,0xfffffffffffffffe
  41371b:	jne    41377c <__ctype_b_loc@plt+0x114ac>
  41371d:	lea    rsi,[rip+0x16695]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413724:	xor    r13d,r13d
  413727:	xor    eax,eax
  413729:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41372e:	jmp    413801 <__ctype_b_loc@plt+0x11531>
  413733:	cmp    r13d,0x100
  41373a:	jg     413765 <__ctype_b_loc@plt+0x11495>
  41373c:	call   4022d0 <__ctype_b_loc@plt>
  413741:	mov    rax,QWORD PTR [rax]
  413744:	movsxd rcx,r13d
  413747:	test   BYTE PTR [rax+rcx*2],0x2
  41374b:	jne    4137df <__ctype_b_loc@plt+0x1150f>
  413751:	lea    rsi,[rip+0x16b03]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  413758:	jmp    4137e6 <__ctype_b_loc@plt+0x11516>
  41375d:	mov    r13,QWORD PTR [r15]
  413760:	jmp    413815 <__ctype_b_loc@plt+0x11545>
  413765:	movsxd rax,r13d
  413768:	lea    rcx,[rip+0x1c261]        # 42f9d0 <__ctype_b_loc@plt+0x2d700>
  41376f:	mov    rcx,QWORD PTR [rcx+rax*8-0x808]
  413777:	jmp    413827 <__ctype_b_loc@plt+0x11557>
  41377c:	mov    rsi,QWORD PTR [r15]
  41377f:	mov    QWORD PTR [rsp+0x8],rdi
  413784:	mov    rax,QWORD PTR [rdi+0x20]
  413788:	mov    rdi,QWORD PTR [rax+0x18]
  41378c:	mov    rdx,rbx
  41378f:	mov    rcx,rbp
  413792:	mov    QWORD PTR [rsp+0x10],rax
  413797:	call   QWORD PTR [rax+0x10]
  41379a:	mov    r13,rax
  41379d:	test   rbp,rbp
  4137a0:	je     4137f8 <__ctype_b_loc@plt+0x11528>
  4137a2:	test   r13,r13
  4137a5:	jne    4137f8 <__ctype_b_loc@plt+0x11528>
  4137a7:	mov    rbx,QWORD PTR [rsp+0x8]
  4137ac:	mov    rdi,QWORD PTR [rbx+0xa8]
  4137b3:	test   rdi,rdi
  4137b6:	jne    41389a <__ctype_b_loc@plt+0x115ca>
  4137bc:	mov    BYTE PTR [rbx+0xa],0x4
  4137c0:	mov    rax,QWORD PTR [rbx+0x20]
  4137c4:	cmp    QWORD PTR [rax+0x98],0x0
  4137cc:	je     413878 <__ctype_b_loc@plt+0x115a8>
  4137d2:	mov    rdi,rbx
  4137d5:	mov    esi,0x4
  4137da:	jmp    413866 <__ctype_b_loc@plt+0x11596>
  4137df:	lea    rsi,[rip+0x16a6c]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  4137e6:	mov    rdi,rbp
  4137e9:	mov    edx,r13d
  4137ec:	xor    eax,eax
  4137ee:	call   404800 <__ctype_b_loc@plt+0x2530>
  4137f3:	mov    rcx,rax
  4137f6:	jmp    413827 <__ctype_b_loc@plt+0x11557>
  4137f8:	mov    rax,QWORD PTR [rsp+0x10]
  4137fd:	add    QWORD PTR [rax+0x78],rbx
  413801:	mov    QWORD PTR [r15],r13
  413804:	mov    QWORD PTR [r15+0x10],rbp
  413808:	mov    rax,QWORD PTR [r15+0x8]
  41380c:	lea    rcx,[rax+0x1]
  413810:	mov    rbp,QWORD PTR [rsp+0x18]
  413815:	mov    QWORD PTR [r15+0x8],rcx
  413819:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  41381f:	mov    rax,QWORD PTR [r12+0x48]
  413824:	mov    rcx,QWORD PTR [rax]
  413827:	lea    rsi,[rip+0x16a17]        # 42a245 <__ctype_b_loc@plt+0x27f75>
  41382e:	mov    rdi,rbp
  413831:	mov    rdx,r14
  413834:	xor    eax,eax
  413836:	call   404800 <__ctype_b_loc@plt+0x2530>
  41383b:	mov    rbx,QWORD PTR [r12+0x38]
  413840:	mov    rdi,QWORD PTR [rbx+0xa8]
  413847:	test   rdi,rdi
  41384a:	jne    413882 <__ctype_b_loc@plt+0x115b2>
  41384c:	mov    BYTE PTR [rbx+0xa],0x3
  413850:	mov    rax,QWORD PTR [rbx+0x20]
  413854:	cmp    QWORD PTR [rax+0x98],0x0
  41385c:	je     413878 <__ctype_b_loc@plt+0x115a8>
  41385e:	mov    rdi,rbx
  413861:	mov    esi,0x3
  413866:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41386b:	mov    rax,QWORD PTR [rbx+0x20]
  41386f:	mov    rdi,rbx
  413872:	call   QWORD PTR [rax+0x98]
  413878:	mov    edi,0x1
  41387d:	call   402280 <exit@plt>
  413882:	mov    DWORD PTR [rdi+0xd0],0x3
  41388c:	add    rdi,0x8
  413890:	mov    esi,0x1
  413895:	call   402230 <longjmp@plt>
  41389a:	mov    DWORD PTR [rdi+0xd0],0x4
  4138a4:	jmp    41388c <__ctype_b_loc@plt+0x115bc>
  4138a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4138b0:	push   rbp
  4138b1:	push   r15
  4138b3:	push   r14
  4138b5:	push   r13
  4138b7:	push   r12
  4138b9:	push   rbx
  4138ba:	sub    rsp,0x38
  4138be:	mov    QWORD PTR [rsp+0x28],rsi
  4138c3:	mov    r15,rdi
  4138c6:	mov    r14d,DWORD PTR [rdi]
  4138c9:	mov    QWORD PTR [rsp+0x18],rdi
  4138ce:	xchg   ax,ax
  4138d0:	mov    r13,QWORD PTR [r15+0x48]
  4138d4:	mov    rcx,QWORD PTR [r13+0x8]
  4138d8:	mov    rbp,QWORD PTR [r13+0x10]
  4138dc:	lea    rdx,[rcx+0x1]
  4138e0:	cmp    rdx,rbp
  4138e3:	jbe    413930 <__ctype_b_loc@plt+0x11660>
  4138e5:	movabs rax,0x7ffffffffffffffd
  4138ef:	cmp    rbp,rax
  4138f2:	jbe    413909 <__ctype_b_loc@plt+0x11639>
  4138f4:	mov    rdi,r15
  4138f7:	lea    rsi,[rip+0x1698c]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  4138fe:	xor    edx,edx
  413900:	call   413660 <__ctype_b_loc@plt+0x11390>
  413905:	mov    rbp,QWORD PTR [r13+0x10]
  413909:	mov    rbx,rbp
  41390c:	add    rbx,rbp
  41390f:	mov    r12,QWORD PTR [r15+0x38]
  413913:	cmp    rbx,0xfffffffffffffffe
  413917:	jne    413940 <__ctype_b_loc@plt+0x11670>
  413919:	mov    rdi,r12
  41391c:	lea    rsi,[rip+0x16496]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413923:	xor    eax,eax
  413925:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41392a:	xor    eax,eax
  41392c:	jmp    41396e <__ctype_b_loc@plt+0x1169e>
  41392e:	xchg   ax,ax
  413930:	mov    rax,QWORD PTR [r13+0x0]
  413934:	jmp    41397e <__ctype_b_loc@plt+0x116ae>
  413936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413940:	mov    rsi,QWORD PTR [r13+0x0]
  413944:	mov    r15,QWORD PTR [r12+0x20]
  413949:	mov    rdi,QWORD PTR [r15+0x18]
  41394d:	mov    rdx,rbp
  413950:	mov    rcx,rbx
  413953:	call   QWORD PTR [r15+0x10]
  413957:	test   rbx,rbx
  41395a:	je     413965 <__ctype_b_loc@plt+0x11695>
  41395c:	test   rax,rax
  41395f:	je     413c06 <__ctype_b_loc@plt+0x11936>
  413965:	add    QWORD PTR [r15+0x78],rbp
  413969:	mov    r15,QWORD PTR [rsp+0x18]
  41396e:	mov    QWORD PTR [r13+0x0],rax
  413972:	mov    QWORD PTR [r13+0x10],rbx
  413976:	mov    rcx,QWORD PTR [r13+0x8]
  41397a:	lea    rdx,[rcx+0x1]
  41397e:	mov    QWORD PTR [r13+0x8],rdx
  413982:	mov    BYTE PTR [rax+rcx*1],r14b
  413986:	mov    rbx,QWORD PTR [r15+0x40]
  41398a:	sub    QWORD PTR [rbx],0x1
  41398e:	jae    4139d0 <__ctype_b_loc@plt+0x11700>
  413990:	mov    rsi,QWORD PTR [rbx+0x18]
  413994:	mov    rdi,QWORD PTR [rbx+0x20]
  413998:	lea    rdx,[rsp+0x10]
  41399d:	call   QWORD PTR [rbx+0x10]
  4139a0:	mov    r14d,0xffffffff
  4139a6:	test   rax,rax
  4139a9:	je     4139e0 <__ctype_b_loc@plt+0x11710>
  4139ab:	mov    rcx,QWORD PTR [rsp+0x10]
  4139b0:	test   rcx,rcx
  4139b3:	je     4139e0 <__ctype_b_loc@plt+0x11710>
  4139b5:	dec    rcx
  4139b8:	mov    QWORD PTR [rbx],rcx
  4139bb:	mov    rcx,rax
  4139be:	inc    rcx
  4139c1:	jmp    4139d8 <__ctype_b_loc@plt+0x11708>
  4139c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139cd:	nop    DWORD PTR [rax]
  4139d0:	mov    rax,QWORD PTR [rbx+0x8]
  4139d4:	lea    rcx,[rax+0x1]
  4139d8:	mov    QWORD PTR [rbx+0x8],rcx
  4139dc:	movzx  r14d,BYTE PTR [rax]
  4139e0:	mov    DWORD PTR [r15],r14d
  4139e3:	call   4022d0 <__ctype_b_loc@plt>
  4139e8:	cmp    r14d,0x2e
  4139ec:	je     4138d0 <__ctype_b_loc@plt+0x11600>
  4139f2:	mov    rbx,rax
  4139f5:	mov    rax,QWORD PTR [rax]
  4139f8:	movsxd rcx,r14d
  4139fb:	movzx  eax,WORD PTR [rax+rcx*2]
  4139ff:	and    eax,0x800
  413a04:	test   ax,ax
  413a07:	jne    4138d0 <__ctype_b_loc@plt+0x11600>
  413a0d:	lea    rdi,[rip+0x1688f]        # 42a2a3 <__ctype_b_loc@plt+0x27fd3>
  413a14:	mov    edx,0x3
  413a19:	mov    esi,r14d
  413a1c:	call   402140 <memchr@plt>
  413a21:	test   rax,rax
  413a24:	mov    QWORD PTR [rsp+0x30],rbx
  413a29:	je     413ce8 <__ctype_b_loc@plt+0x11a18>
  413a2f:	mov    rbp,QWORD PTR [r15+0x48]
  413a33:	mov    rax,QWORD PTR [rbp+0x8]
  413a37:	mov    r13,QWORD PTR [rbp+0x10]
  413a3b:	lea    rcx,[rax+0x1]
  413a3f:	cmp    rcx,r13
  413a42:	jbe    413a8a <__ctype_b_loc@plt+0x117ba>
  413a44:	movabs rax,0x7ffffffffffffffd
  413a4e:	cmp    r13,rax
  413a51:	jbe    413a68 <__ctype_b_loc@plt+0x11798>
  413a53:	lea    rsi,[rip+0x16830]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  413a5a:	mov    rdi,r15
  413a5d:	xor    edx,edx
  413a5f:	call   413660 <__ctype_b_loc@plt+0x11390>
  413a64:	mov    r13,QWORD PTR [rbp+0x10]
  413a68:	mov    r12,r13
  413a6b:	add    r12,r13
  413a6e:	mov    rdi,QWORD PTR [r15+0x38]
  413a72:	cmp    r12,0xfffffffffffffffe
  413a76:	jne    413a90 <__ctype_b_loc@plt+0x117c0>
  413a78:	lea    rsi,[rip+0x1633a]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413a7f:	xor    ebx,ebx
  413a81:	xor    eax,eax
  413a83:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  413a88:	jmp    413ac5 <__ctype_b_loc@plt+0x117f5>
  413a8a:	mov    rbx,QWORD PTR [rbp+0x0]
  413a8e:	jmp    413ad5 <__ctype_b_loc@plt+0x11805>
  413a90:	mov    rsi,QWORD PTR [rbp+0x0]
  413a94:	mov    QWORD PTR [rsp+0x8],rdi
  413a99:	mov    r15,QWORD PTR [rdi+0x20]
  413a9d:	mov    rdi,QWORD PTR [r15+0x18]
  413aa1:	mov    rdx,r13
  413aa4:	mov    rcx,r12
  413aa7:	call   QWORD PTR [r15+0x10]
  413aab:	mov    rbx,rax
  413aae:	test   r12,r12
  413ab1:	je     413abc <__ctype_b_loc@plt+0x117ec>
  413ab3:	test   rbx,rbx
  413ab6:	je     413c43 <__ctype_b_loc@plt+0x11973>
  413abc:	add    QWORD PTR [r15+0x78],r13
  413ac0:	mov    r15,QWORD PTR [rsp+0x18]
  413ac5:	mov    QWORD PTR [rbp+0x0],rbx
  413ac9:	mov    QWORD PTR [rbp+0x10],r12
  413acd:	mov    rax,QWORD PTR [rbp+0x8]
  413ad1:	lea    rcx,[rax+0x1]
  413ad5:	mov    QWORD PTR [rbp+0x8],rcx
  413ad9:	mov    BYTE PTR [rbx+rax*1],r14b
  413add:	mov    rbx,QWORD PTR [r15+0x40]
  413ae1:	sub    QWORD PTR [rbx],0x1
  413ae5:	jae    413b1a <__ctype_b_loc@plt+0x1184a>
  413ae7:	mov    rsi,QWORD PTR [rbx+0x18]
  413aeb:	mov    rdi,QWORD PTR [rbx+0x20]
  413aef:	lea    rdx,[rsp+0x10]
  413af4:	call   QWORD PTR [rbx+0x10]
  413af7:	mov    r14d,0xffffffff
  413afd:	test   rax,rax
  413b00:	je     413b2a <__ctype_b_loc@plt+0x1185a>
  413b02:	mov    rcx,QWORD PTR [rsp+0x10]
  413b07:	test   rcx,rcx
  413b0a:	je     413b2a <__ctype_b_loc@plt+0x1185a>
  413b0c:	dec    rcx
  413b0f:	mov    QWORD PTR [rbx],rcx
  413b12:	mov    rcx,rax
  413b15:	inc    rcx
  413b18:	jmp    413b22 <__ctype_b_loc@plt+0x11852>
  413b1a:	mov    rax,QWORD PTR [rbx+0x8]
  413b1e:	lea    rcx,[rax+0x1]
  413b22:	mov    QWORD PTR [rbx+0x8],rcx
  413b26:	movzx  r14d,BYTE PTR [rax]
  413b2a:	mov    DWORD PTR [r15],r14d
  413b2d:	movzx  eax,r14b
  413b31:	cmp    eax,0x3f
  413b34:	ja     413ce8 <__ctype_b_loc@plt+0x11a18>
  413b3a:	mov    eax,0x1
  413b3f:	shlx   rax,rax,r14
  413b44:	movabs rcx,0x280000000001
  413b4e:	and    rcx,rax
  413b51:	je     413ce8 <__ctype_b_loc@plt+0x11a18>
  413b57:	mov    rbp,QWORD PTR [r15+0x48]
  413b5b:	mov    rax,QWORD PTR [rbp+0x8]
  413b5f:	mov    r13,QWORD PTR [rbp+0x10]
  413b63:	lea    rcx,[rax+0x1]
  413b67:	cmp    rcx,r13
  413b6a:	jbe    413bb2 <__ctype_b_loc@plt+0x118e2>
  413b6c:	movabs rax,0x7ffffffffffffffd
  413b76:	cmp    r13,rax
  413b79:	jbe    413b90 <__ctype_b_loc@plt+0x118c0>
  413b7b:	lea    rsi,[rip+0x16708]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  413b82:	mov    rdi,r15
  413b85:	xor    edx,edx
  413b87:	call   413660 <__ctype_b_loc@plt+0x11390>
  413b8c:	mov    r13,QWORD PTR [rbp+0x10]
  413b90:	mov    r12,r13
  413b93:	add    r12,r13
  413b96:	mov    rdi,QWORD PTR [r15+0x38]
  413b9a:	cmp    r12,0xfffffffffffffffe
  413b9e:	jne    413bb8 <__ctype_b_loc@plt+0x118e8>
  413ba0:	lea    rsi,[rip+0x16212]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413ba7:	xor    ebx,ebx
  413ba9:	xor    eax,eax
  413bab:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  413bb0:	jmp    413be9 <__ctype_b_loc@plt+0x11919>
  413bb2:	mov    rbx,QWORD PTR [rbp+0x0]
  413bb6:	jmp    413bf9 <__ctype_b_loc@plt+0x11929>
  413bb8:	mov    rsi,QWORD PTR [rbp+0x0]
  413bbc:	mov    QWORD PTR [rsp+0x8],rdi
  413bc1:	mov    r15,QWORD PTR [rdi+0x20]
  413bc5:	mov    rdi,QWORD PTR [r15+0x18]
  413bc9:	mov    rdx,r13
  413bcc:	mov    rcx,r12
  413bcf:	call   QWORD PTR [r15+0x10]
  413bd3:	mov    rbx,rax
  413bd6:	test   r12,r12
  413bd9:	je     413be0 <__ctype_b_loc@plt+0x11910>
  413bdb:	test   rbx,rbx
  413bde:	je     413c43 <__ctype_b_loc@plt+0x11973>
  413be0:	add    QWORD PTR [r15+0x78],r13
  413be4:	mov    r15,QWORD PTR [rsp+0x18]
  413be9:	mov    QWORD PTR [rbp+0x0],rbx
  413bed:	mov    QWORD PTR [rbp+0x10],r12
  413bf1:	mov    rax,QWORD PTR [rbp+0x8]
  413bf5:	lea    rcx,[rax+0x1]
  413bf9:	mov    QWORD PTR [rbp+0x8],rcx
  413bfd:	mov    BYTE PTR [rbx+rax*1],r14b
  413c01:	jmp    413c98 <__ctype_b_loc@plt+0x119c8>
  413c06:	mov    rdi,QWORD PTR [r12+0xa8]
  413c0e:	test   rdi,rdi
  413c11:	jne    414216 <__ctype_b_loc@plt+0x11f46>
  413c17:	mov    BYTE PTR [r12+0xa],0x4
  413c1d:	mov    rax,QWORD PTR [r12+0x20]
  413c22:	cmp    QWORD PTR [rax+0x98],0x0
  413c2a:	je     413c8e <__ctype_b_loc@plt+0x119be>
  413c2c:	mov    rdi,r12
  413c2f:	mov    esi,0x4
  413c34:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  413c39:	mov    rax,QWORD PTR [r12+0x20]
  413c3e:	mov    rdi,r12
  413c41:	jmp    413c88 <__ctype_b_loc@plt+0x119b8>
  413c43:	mov    rax,QWORD PTR [rsp+0x8]
  413c48:	mov    rdi,QWORD PTR [rax+0xa8]
  413c4f:	test   rdi,rdi
  413c52:	jne    414216 <__ctype_b_loc@plt+0x11f46>
  413c58:	mov    rax,QWORD PTR [rsp+0x8]
  413c5d:	mov    BYTE PTR [rax+0xa],0x4
  413c61:	mov    rax,QWORD PTR [rax+0x20]
  413c65:	cmp    QWORD PTR [rax+0x98],0x0
  413c6d:	je     413c8e <__ctype_b_loc@plt+0x119be>
  413c6f:	mov    rbx,QWORD PTR [rsp+0x8]
  413c74:	mov    rdi,rbx
  413c77:	mov    esi,0x4
  413c7c:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  413c81:	mov    rax,QWORD PTR [rbx+0x20]
  413c85:	mov    rdi,rbx
  413c88:	call   QWORD PTR [rax+0x98]
  413c8e:	mov    edi,0x1
  413c93:	call   402280 <exit@plt>
  413c98:	mov    rbx,QWORD PTR [r15+0x40]
  413c9c:	sub    QWORD PTR [rbx],0x1
  413ca0:	jae    413cd5 <__ctype_b_loc@plt+0x11a05>
  413ca2:	mov    rsi,QWORD PTR [rbx+0x18]
  413ca6:	mov    rdi,QWORD PTR [rbx+0x20]
  413caa:	lea    rdx,[rsp+0x10]
  413caf:	call   QWORD PTR [rbx+0x10]
  413cb2:	mov    r14d,0xffffffff
  413cb8:	test   rax,rax
  413cbb:	je     413ce5 <__ctype_b_loc@plt+0x11a15>
  413cbd:	mov    rcx,QWORD PTR [rsp+0x10]
  413cc2:	test   rcx,rcx
  413cc5:	je     413ce5 <__ctype_b_loc@plt+0x11a15>
  413cc7:	dec    rcx
  413cca:	mov    QWORD PTR [rbx],rcx
  413ccd:	mov    rcx,rax
  413cd0:	inc    rcx
  413cd3:	jmp    413cdd <__ctype_b_loc@plt+0x11a0d>
  413cd5:	mov    rax,QWORD PTR [rbx+0x8]
  413cd9:	lea    rcx,[rax+0x1]
  413cdd:	mov    QWORD PTR [rbx+0x8],rcx
  413ce1:	movzx  r14d,BYTE PTR [rax]
  413ce5:	mov    DWORD PTR [r15],r14d
  413ce8:	mov    r12,QWORD PTR [r15+0x48]
  413cec:	lea    rbp,[r12+0x8]
  413cf1:	mov    rcx,QWORD PTR [r12+0x8]
  413cf6:	mov    r13,QWORD PTR [r12+0x10]
  413cfb:	lea    rdx,[rcx+0x1]
  413cff:	lea    rbx,[r12+0x10]
  413d04:	cmp    rdx,r13
  413d07:	seta   al
  413d0a:	cmp    r14d,0x5f
  413d0e:	je     413d2b <__ctype_b_loc@plt+0x11a5b>
  413d10:	mov    rsi,QWORD PTR [rsp+0x30]
  413d15:	mov    rsi,QWORD PTR [rsi]
  413d18:	movsxd rdi,r14d
  413d1b:	movzx  esi,WORD PTR [rsi+rdi*2]
  413d1f:	and    esi,0x8
  413d22:	test   si,si
  413d25:	je     413dd9 <__ctype_b_loc@plt+0x11b09>
  413d2b:	test   al,0x1
  413d2d:	je     413d81 <__ctype_b_loc@plt+0x11ab1>
  413d2f:	mov    QWORD PTR [rsp+0x8],rbp
  413d34:	movabs rax,0x7ffffffffffffffd
  413d3e:	cmp    r13,rax
  413d41:	jbe    413d57 <__ctype_b_loc@plt+0x11a87>
  413d43:	mov    rdi,r15
  413d46:	lea    rsi,[rip+0x1653d]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  413d4d:	xor    edx,edx
  413d4f:	call   413660 <__ctype_b_loc@plt+0x11390>
  413d54:	mov    r13,QWORD PTR [rbx]
  413d57:	mov    QWORD PTR [rsp+0x20],rbx
  413d5c:	mov    rbx,r13
  413d5f:	add    rbx,r13
  413d62:	mov    r15,QWORD PTR [r15+0x38]
  413d66:	cmp    rbx,0xfffffffffffffffe
  413d6a:	jne    413d87 <__ctype_b_loc@plt+0x11ab7>
  413d6c:	mov    rdi,r15
  413d6f:	lea    rsi,[rip+0x16043]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413d76:	xor    eax,eax
  413d78:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  413d7d:	xor    eax,eax
  413d7f:	jmp    413dae <__ctype_b_loc@plt+0x11ade>
  413d81:	mov    rax,QWORD PTR [r12]
  413d85:	jmp    413dcc <__ctype_b_loc@plt+0x11afc>
  413d87:	mov    rsi,QWORD PTR [r12]
  413d8b:	mov    rbp,QWORD PTR [r15+0x20]
  413d8f:	mov    rdi,QWORD PTR [rbp+0x18]
  413d93:	mov    rdx,r13
  413d96:	mov    rcx,rbx
  413d99:	call   QWORD PTR [rbp+0x10]
  413d9c:	test   rbx,rbx
  413d9f:	je     413daa <__ctype_b_loc@plt+0x11ada>
  413da1:	test   rax,rax
  413da4:	je     41419f <__ctype_b_loc@plt+0x11ecf>
  413daa:	add    QWORD PTR [rbp+0x78],r13
  413dae:	mov    rbp,QWORD PTR [rsp+0x8]
  413db3:	mov    QWORD PTR [r12],rax
  413db7:	mov    rcx,QWORD PTR [rsp+0x20]
  413dbc:	mov    QWORD PTR [rcx],rbx
  413dbf:	mov    rcx,QWORD PTR [rbp+0x0]
  413dc3:	lea    rdx,[rcx+0x1]
  413dc7:	mov    r15,QWORD PTR [rsp+0x18]
  413dcc:	mov    QWORD PTR [rbp+0x0],rdx
  413dd0:	mov    BYTE PTR [rax+rcx*1],r14b
  413dd4:	jmp    413c98 <__ctype_b_loc@plt+0x119c8>
  413dd9:	test   al,al
  413ddb:	je     413e2f <__ctype_b_loc@plt+0x11b5f>
  413ddd:	mov    QWORD PTR [rsp+0x8],rbp
  413de2:	movabs rax,0x7ffffffffffffffd
  413dec:	cmp    r13,rax
  413def:	jbe    413e05 <__ctype_b_loc@plt+0x11b35>
  413df1:	lea    rsi,[rip+0x16492]        # 42a28a <__ctype_b_loc@plt+0x27fba>
  413df8:	mov    rdi,r15
  413dfb:	xor    edx,edx
  413dfd:	call   413660 <__ctype_b_loc@plt+0x11390>
  413e02:	mov    r13,QWORD PTR [rbx]
  413e05:	mov    QWORD PTR [rsp+0x20],rbx
  413e0a:	mov    r14,r13
  413e0d:	add    r14,r13
  413e10:	mov    rbp,QWORD PTR [r15+0x38]
  413e14:	cmp    r14,0xfffffffffffffffe
  413e18:	jne    413e35 <__ctype_b_loc@plt+0x11b65>
  413e1a:	lea    rsi,[rip+0x15f98]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  413e21:	xor    ebx,ebx
  413e23:	mov    rdi,rbp
  413e26:	xor    eax,eax
  413e28:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  413e2d:	jmp    413e65 <__ctype_b_loc@plt+0x11b95>
  413e2f:	mov    rbx,QWORD PTR [r12]
  413e33:	jmp    413e7e <__ctype_b_loc@plt+0x11bae>
  413e35:	mov    rsi,QWORD PTR [r12]
  413e39:	mov    r15,QWORD PTR [rbp+0x20]
  413e3d:	mov    rdi,QWORD PTR [r15+0x18]
  413e41:	mov    rdx,r13
  413e44:	mov    rcx,r14
  413e47:	call   QWORD PTR [r15+0x10]
  413e4b:	mov    rbx,rax
  413e4e:	test   r14,r14
  413e51:	je     413e5c <__ctype_b_loc@plt+0x11b8c>
  413e53:	test   rbx,rbx
  413e56:	je     4141db <__ctype_b_loc@plt+0x11f0b>
  413e5c:	add    QWORD PTR [r15+0x78],r13
  413e60:	mov    r15,QWORD PTR [rsp+0x18]
  413e65:	mov    rbp,QWORD PTR [rsp+0x8]
  413e6a:	mov    QWORD PTR [r12],rbx
  413e6e:	mov    rax,QWORD PTR [rsp+0x20]
  413e73:	mov    QWORD PTR [rax],r14
  413e76:	mov    rcx,QWORD PTR [rbp+0x0]
  413e7a:	lea    rdx,[rcx+0x1]
  413e7e:	mov    rsi,QWORD PTR [rsp+0x28]
  413e83:	mov    QWORD PTR [rbp+0x0],rdx
  413e87:	mov    BYTE PTR [rbx+rcx*1],0x0
  413e8b:	mov    rax,QWORD PTR [r15+0x48]
  413e8f:	mov    rdi,QWORD PTR [rax]
  413e92:	mov    r9,QWORD PTR [rax+0x8]
  413e96:	test   r9,r9
  413e99:	je     414170 <__ctype_b_loc@plt+0x11ea0>
  413e9f:	mov    al,BYTE PTR [r15+0x58]
  413ea3:	cmp    r9,0x20
  413ea7:	jae    413eb1 <__ctype_b_loc@plt+0x11be1>
  413ea9:	mov    rcx,r9
  413eac:	jmp    414158 <__ctype_b_loc@plt+0x11e88>
  413eb1:	mov    r8,r9
  413eb4:	and    r8,0xffffffffffffffe0
  413eb8:	mov    rcx,r9
  413ebb:	sub    rcx,r8
  413ebe:	lea    rbp,[r9+rdi*1]
  413ec2:	add    rbp,0xffffffffffffffe0
  413ec6:	mov    r10,r8
  413ec9:	neg    r10
  413ecc:	xor    ebx,ebx
  413ece:	vmovdqa ymm0,YMMWORD PTR [rip+0x15e2a]        # 429d00 <__ctype_b_loc@plt+0x27a30>
  413ed6:	vmovdqa xmm1,XMMWORD PTR [rip+0x15e42]        # 429d20 <__ctype_b_loc@plt+0x27a50>
  413ede:	vmovdqa xmm2,XMMWORD PTR [rip+0x15e4a]        # 429d30 <__ctype_b_loc@plt+0x27a60>
  413ee6:	jmp    413efd <__ctype_b_loc@plt+0x11c2d>
  413ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ef0:	add    rbx,0xffffffffffffffe0
  413ef4:	cmp    r10,rbx
  413ef7:	je     414141 <__ctype_b_loc@plt+0x11e71>
  413efd:	vmovdqu ymm3,YMMWORD PTR [rbp+rbx*1+0x0]
  413f03:	vpshufb ymm3,ymm3,ymm0
  413f08:	vpermq ymm3,ymm3,0x4e
  413f0e:	vpcmpeqb xmm4,xmm3,xmm1
  413f12:	vpextrb edx,xmm4,0x0
  413f18:	test   dl,0x1
  413f1b:	je     413f21 <__ctype_b_loc@plt+0x11c51>
  413f1d:	mov    BYTE PTR [rbp+rbx*1+0x1f],al
  413f21:	vpcmpeqb xmm4,xmm3,xmm1
  413f25:	vpextrb edx,xmm4,0x1
  413f2b:	test   dl,0x1
  413f2e:	je     413f34 <__ctype_b_loc@plt+0x11c64>
  413f30:	mov    BYTE PTR [rbp+rbx*1+0x1e],al
  413f34:	vpcmpeqb xmm4,xmm3,xmm1
  413f38:	vpextrb edx,xmm4,0x2
  413f3e:	test   dl,0x1
  413f41:	je     413f47 <__ctype_b_loc@plt+0x11c77>
  413f43:	mov    BYTE PTR [rbp+rbx*1+0x1d],al
  413f47:	vpcmpeqb xmm4,xmm3,xmm1
  413f4b:	vpextrb edx,xmm4,0x3
  413f51:	test   dl,0x1
  413f54:	je     413f5a <__ctype_b_loc@plt+0x11c8a>
  413f56:	mov    BYTE PTR [rbp+rbx*1+0x1c],al
  413f5a:	vpcmpeqb xmm4,xmm3,xmm1
  413f5e:	vpextrb edx,xmm4,0x4
  413f64:	test   dl,0x1
  413f67:	je     413f6d <__ctype_b_loc@plt+0x11c9d>
  413f69:	mov    BYTE PTR [rbp+rbx*1+0x1b],al
  413f6d:	vpcmpeqb xmm4,xmm3,xmm1
  413f71:	vpextrb edx,xmm4,0x5
  413f77:	test   dl,0x1
  413f7a:	je     413f80 <__ctype_b_loc@plt+0x11cb0>
  413f7c:	mov    BYTE PTR [rbp+rbx*1+0x1a],al
  413f80:	vpcmpeqb xmm4,xmm3,xmm1
  413f84:	vpextrb edx,xmm4,0x6
  413f8a:	test   dl,0x1
  413f8d:	je     413f93 <__ctype_b_loc@plt+0x11cc3>
  413f8f:	mov    BYTE PTR [rbp+rbx*1+0x19],al
  413f93:	vpcmpeqb xmm4,xmm3,xmm1
  413f97:	vpextrb edx,xmm4,0x7
  413f9d:	test   dl,0x1
  413fa0:	je     413fa6 <__ctype_b_loc@plt+0x11cd6>
  413fa2:	mov    BYTE PTR [rbp+rbx*1+0x18],al
  413fa6:	vpcmpeqb xmm4,xmm3,xmm1
  413faa:	vpextrb edx,xmm4,0x8
  413fb0:	test   dl,0x1
  413fb3:	je     413fb9 <__ctype_b_loc@plt+0x11ce9>
  413fb5:	mov    BYTE PTR [rbp+rbx*1+0x17],al
  413fb9:	vpcmpeqb xmm4,xmm3,xmm1
  413fbd:	vpextrb edx,xmm4,0x9
  413fc3:	test   dl,0x1
  413fc6:	je     413fcc <__ctype_b_loc@plt+0x11cfc>
  413fc8:	mov    BYTE PTR [rbp+rbx*1+0x16],al
  413fcc:	vpcmpeqb xmm4,xmm3,xmm1
  413fd0:	vpextrb edx,xmm4,0xa
  413fd6:	test   dl,0x1
  413fd9:	je     413fdf <__ctype_b_loc@plt+0x11d0f>
  413fdb:	mov    BYTE PTR [rbp+rbx*1+0x15],al
  413fdf:	vpcmpeqb xmm4,xmm3,xmm1
  413fe3:	vpextrb edx,xmm4,0xb
  413fe9:	test   dl,0x1
  413fec:	je     413ff2 <__ctype_b_loc@plt+0x11d22>
  413fee:	mov    BYTE PTR [rbp+rbx*1+0x14],al
  413ff2:	vpcmpeqb xmm4,xmm3,xmm1
  413ff6:	vpextrb edx,xmm4,0xc
  413ffc:	test   dl,0x1
  413fff:	je     414005 <__ctype_b_loc@plt+0x11d35>
  414001:	mov    BYTE PTR [rbp+rbx*1+0x13],al
  414005:	vpcmpeqb xmm4,xmm3,xmm1
  414009:	vpextrb edx,xmm4,0xd
  41400f:	test   dl,0x1
  414012:	je     414018 <__ctype_b_loc@plt+0x11d48>
  414014:	mov    BYTE PTR [rbp+rbx*1+0x12],al
  414018:	vpcmpeqb xmm4,xmm3,xmm1
  41401c:	vpextrb edx,xmm4,0xe
  414022:	test   dl,0x1
  414025:	je     41402b <__ctype_b_loc@plt+0x11d5b>
  414027:	mov    BYTE PTR [rbp+rbx*1+0x11],al
  41402b:	vpcmpeqb xmm4,xmm3,xmm1
  41402f:	vpextrb edx,xmm4,0xf
  414035:	test   dl,0x1
  414038:	je     41403e <__ctype_b_loc@plt+0x11d6e>
  41403a:	mov    BYTE PTR [rbp+rbx*1+0x10],al
  41403e:	vextracti128 xmm3,ymm3,0x1
  414044:	vpcmpeqb xmm3,xmm3,xmm2
  414048:	vpextrb edx,xmm3,0x0
  41404e:	test   dl,0x1
  414051:	je     414057 <__ctype_b_loc@plt+0x11d87>
  414053:	mov    BYTE PTR [rbp+rbx*1+0xf],al
  414057:	vpextrb edx,xmm3,0x1
  41405d:	test   dl,0x1
  414060:	je     414066 <__ctype_b_loc@plt+0x11d96>
  414062:	mov    BYTE PTR [rbp+rbx*1+0xe],al
  414066:	vpextrb edx,xmm3,0x2
  41406c:	test   dl,0x1
  41406f:	je     414075 <__ctype_b_loc@plt+0x11da5>
  414071:	mov    BYTE PTR [rbp+rbx*1+0xd],al
  414075:	vpextrb edx,xmm3,0x3
  41407b:	test   dl,0x1
  41407e:	je     414084 <__ctype_b_loc@plt+0x11db4>
  414080:	mov    BYTE PTR [rbp+rbx*1+0xc],al
  414084:	vpextrb edx,xmm3,0x4
  41408a:	test   dl,0x1
  41408d:	je     414093 <__ctype_b_loc@plt+0x11dc3>
  41408f:	mov    BYTE PTR [rbp+rbx*1+0xb],al
  414093:	vpextrb edx,xmm3,0x5
  414099:	test   dl,0x1
  41409c:	je     4140a2 <__ctype_b_loc@plt+0x11dd2>
  41409e:	mov    BYTE PTR [rbp+rbx*1+0xa],al
  4140a2:	vpextrb edx,xmm3,0x6
  4140a8:	test   dl,0x1
  4140ab:	je     4140b1 <__ctype_b_loc@plt+0x11de1>
  4140ad:	mov    BYTE PTR [rbp+rbx*1+0x9],al
  4140b1:	vpextrb edx,xmm3,0x7
  4140b7:	test   dl,0x1
  4140ba:	je     4140c0 <__ctype_b_loc@plt+0x11df0>
  4140bc:	mov    BYTE PTR [rbp+rbx*1+0x8],al
  4140c0:	vpextrb edx,xmm3,0x8
  4140c6:	test   dl,0x1
  4140c9:	je     4140cf <__ctype_b_loc@plt+0x11dff>
  4140cb:	mov    BYTE PTR [rbp+rbx*1+0x7],al
  4140cf:	vpextrb edx,xmm3,0x9
  4140d5:	test   dl,0x1
  4140d8:	je     4140de <__ctype_b_loc@plt+0x11e0e>
  4140da:	mov    BYTE PTR [rbp+rbx*1+0x6],al
  4140de:	vpextrb edx,xmm3,0xa
  4140e4:	test   dl,0x1
  4140e7:	je     4140ed <__ctype_b_loc@plt+0x11e1d>
  4140e9:	mov    BYTE PTR [rbp+rbx*1+0x5],al
  4140ed:	vpextrb edx,xmm3,0xb
  4140f3:	test   dl,0x1
  4140f6:	je     4140fc <__ctype_b_loc@plt+0x11e2c>
  4140f8:	mov    BYTE PTR [rbp+rbx*1+0x4],al
  4140fc:	vpextrb edx,xmm3,0xc
  414102:	test   dl,0x1
  414105:	je     41410b <__ctype_b_loc@plt+0x11e3b>
  414107:	mov    BYTE PTR [rbp+rbx*1+0x3],al
  41410b:	vpextrb edx,xmm3,0xd
  414111:	test   dl,0x1
  414114:	je     41411a <__ctype_b_loc@plt+0x11e4a>
  414116:	mov    BYTE PTR [rbp+rbx*1+0x2],al
  41411a:	vpextrb edx,xmm3,0xe
  414120:	test   dl,0x1
  414123:	je     414129 <__ctype_b_loc@plt+0x11e59>
  414125:	mov    BYTE PTR [rbp+rbx*1+0x1],al
  414129:	vpextrb edx,xmm3,0xf
  41412f:	test   dl,0x1
  414132:	je     413ef0 <__ctype_b_loc@plt+0x11c20>
  414138:	mov    BYTE PTR [rbp+rbx*1+0x0],al
  41413c:	jmp    413ef0 <__ctype_b_loc@plt+0x11c20>
  414141:	cmp    r9,r8
  414144:	jne    414158 <__ctype_b_loc@plt+0x11e88>
  414146:	jmp    414169 <__ctype_b_loc@plt+0x11e99>
  414148:	nop    DWORD PTR [rax+rax*1+0x0]
  414150:	mov    rcx,rdx
  414153:	test   rdx,rdx
  414156:	je     414169 <__ctype_b_loc@plt+0x11e99>
  414158:	lea    rdx,[rcx-0x1]
  41415c:	cmp    BYTE PTR [rdi+rcx*1-0x1],0x2e
  414161:	jne    414150 <__ctype_b_loc@plt+0x11e80>
  414163:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  414167:	jmp    414150 <__ctype_b_loc@plt+0x11e80>
  414169:	mov    rax,QWORD PTR [r15+0x48]
  41416d:	mov    rdi,QWORD PTR [rax]
  414170:	vzeroupper 
  414173:	call   40aad0 <__ctype_b_loc@plt+0x8800>
  414178:	test   eax,eax
  41417a:	jne    414190 <__ctype_b_loc@plt+0x11ec0>
  41417c:	lea    rsi,[rip+0x16123]        # 42a2a6 <__ctype_b_loc@plt+0x27fd6>
  414183:	mov    rdi,r15
  414186:	mov    edx,0x11c
  41418b:	call   413660 <__ctype_b_loc@plt+0x11390>
  414190:	add    rsp,0x38
  414194:	pop    rbx
  414195:	pop    r12
  414197:	pop    r13
  414199:	pop    r14
  41419b:	pop    r15
  41419d:	pop    rbp
  41419e:	ret    
  41419f:	mov    rdi,QWORD PTR [r15+0xa8]
  4141a6:	test   rdi,rdi
  4141a9:	jne    414216 <__ctype_b_loc@plt+0x11f46>
  4141ab:	mov    BYTE PTR [r15+0xa],0x4
  4141b0:	mov    rax,QWORD PTR [r15+0x20]
  4141b4:	cmp    QWORD PTR [rax+0x98],0x0
  4141bc:	je     413c8e <__ctype_b_loc@plt+0x119be>
  4141c2:	mov    rdi,r15
  4141c5:	mov    esi,0x4
  4141ca:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4141cf:	mov    rax,QWORD PTR [r15+0x20]
  4141d3:	mov    rdi,r15
  4141d6:	jmp    413c88 <__ctype_b_loc@plt+0x119b8>
  4141db:	mov    rdi,QWORD PTR [rbp+0xa8]
  4141e2:	test   rdi,rdi
  4141e5:	jne    414216 <__ctype_b_loc@plt+0x11f46>
  4141e7:	mov    BYTE PTR [rbp+0xa],0x4
  4141eb:	mov    rax,QWORD PTR [rbp+0x20]
  4141ef:	cmp    QWORD PTR [rax+0x98],0x0
  4141f7:	je     413c8e <__ctype_b_loc@plt+0x119be>
  4141fd:	mov    rdi,rbp
  414200:	mov    esi,0x4
  414205:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41420a:	mov    rax,QWORD PTR [rbp+0x20]
  41420e:	mov    rdi,rbp
  414211:	jmp    413c88 <__ctype_b_loc@plt+0x119b8>
  414216:	mov    DWORD PTR [rdi+0xd0],0x4
  414220:	add    rdi,0x8
  414224:	mov    esi,0x1
  414229:	call   402230 <longjmp@plt>
  41422e:	xchg   ax,ax
  414230:	push   r15
  414232:	push   r14
  414234:	push   rbx
  414235:	sub    rsp,0x10
  414239:	mov    r15,rdi
  41423c:	mov    r14,QWORD PTR [rdi+0x38]
  414240:	mov    rdi,r14
  414243:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  414248:	mov    rbx,rax
  41424b:	mov    rax,QWORD PTR [r15+0x30]
  41424f:	mov    rsi,QWORD PTR [rax+0x8]
  414253:	mov    al,BYTE PTR [rsi+0xb]
  414256:	bzhi   eax,DWORD PTR [rbx+0xc],eax
  41425c:	cdqe   
  41425e:	lea    rax,[rax+rax*4]
  414262:	shl    rax,0x3
  414266:	add    rax,QWORD PTR [rsi+0x20]
  41426a:	cmp    DWORD PTR [rax+0x18],0x4
  41426e:	je     41427f <__ctype_b_loc@plt+0x11faf>
  414270:	mov    rax,QWORD PTR [rax+0x20]
  414274:	test   rax,rax
  414277:	je     414291 <__ctype_b_loc@plt+0x11fc1>
  414279:	cmp    DWORD PTR [rax+0x18],0x4
  41427d:	jne    414270 <__ctype_b_loc@plt+0x11fa0>
  41427f:	cmp    QWORD PTR [rax+0x10],rbx
  414283:	jne    414270 <__ctype_b_loc@plt+0x11fa0>
  414285:	lea    rcx,[rip+0x1588c]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41428c:	cmp    rax,rcx
  41428f:	jne    4142a8 <__ctype_b_loc@plt+0x11fd8>
  414291:	mov    QWORD PTR [rsp],rbx
  414295:	mov    DWORD PTR [rsp+0x8],0x4
  41429d:	mov    rdx,rsp
  4142a0:	mov    rdi,r14
  4142a3:	call   409b60 <__ctype_b_loc@plt+0x7890>
  4142a8:	cmp    DWORD PTR [rax+0x8],0x0
  4142ac:	jne    4142d1 <__ctype_b_loc@plt+0x12001>
  4142ae:	mov    DWORD PTR [rax],0x1
  4142b4:	mov    DWORD PTR [rax+0x8],0x1
  4142bb:	mov    rax,QWORD PTR [r14+0x20]
  4142bf:	mov    rcx,QWORD PTR [rax+0x78]
  4142c3:	cmp    rcx,QWORD PTR [rax+0x70]
  4142c7:	jb     4142d1 <__ctype_b_loc@plt+0x12001>
  4142c9:	mov    rdi,r14
  4142cc:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4142d1:	mov    rax,rbx
  4142d4:	add    rsp,0x10
  4142d8:	pop    rbx
  4142d9:	pop    r14
  4142db:	pop    r15
  4142dd:	ret    
  4142de:	xchg   ax,ax
  4142e0:	push   rbp
  4142e1:	push   r15
  4142e3:	push   r14
  4142e5:	push   r13
  4142e7:	push   r12
  4142e9:	push   rbx
  4142ea:	sub    rsp,0x98
  4142f1:	mov    r12,rdi
  4142f4:	mov    eax,0xfffffefe
  4142f9:	add    eax,DWORD PTR [rdi+0x10]
  4142fc:	cmp    eax,0x13
  4142ff:	ja     414371 <__ctype_b_loc@plt+0x120a1>
  414301:	mov    r14d,DWORD PTR [r12+0x4]
  414306:	lea    rcx,[rip+0x151fb]        # 429508 <__ctype_b_loc@plt+0x27238>
  41430d:	movsxd rax,DWORD PTR [rcx+rax*4]
  414311:	add    rax,rcx
  414314:	jmp    rax
  414316:	mov    DWORD PTR [r12+0x8],r14d
  41431b:	cmp    DWORD PTR [r12+0x20],0x11f
  414324:	jne    4146fe <__ctype_b_loc@plt+0x1242e>
  41432a:	lea    rsi,[r12+0x18]
  41432f:	mov    rdi,r12
  414332:	call   411660 <__ctype_b_loc@plt+0xf390>
  414337:	mov    DWORD PTR [r12+0x10],eax
  41433c:	jmp    414717 <__ctype_b_loc@plt+0x12447>
  414341:	mov    DWORD PTR [r12+0x8],r14d
  414346:	lea    rbx,[r12+0x20]
  41434b:	cmp    DWORD PTR [r12+0x20],0x11f
  414354:	jne    414729 <__ctype_b_loc@plt+0x12459>
  41435a:	lea    rsi,[r12+0x18]
  41435f:	mov    rdi,r12
  414362:	call   411660 <__ctype_b_loc@plt+0xf390>
  414367:	mov    DWORD PTR [r12+0x10],eax
  41436c:	jmp    41473d <__ctype_b_loc@plt+0x1246d>
  414371:	mov    rbx,QWORD PTR [r12+0x30]
  414376:	lea    rsi,[rsp+0x28]
  41437b:	mov    rdi,r12
  41437e:	call   41aa80 <__ctype_b_loc@plt+0x187b0>
  414383:	cmp    DWORD PTR [rsp+0x28],0xd
  414388:	jne    414784 <__ctype_b_loc@plt+0x124b4>
  41438e:	mov    rax,QWORD PTR [rbx]
  414391:	mov    rax,QWORD PTR [rax+0x18]
  414395:	movsxd rcx,DWORD PTR [rsp+0x30]
  41439a:	mov    edx,0xff803fff
  41439f:	and    edx,DWORD PTR [rax+rcx*4]
  4143a2:	or     edx,0x4000
  4143a8:	mov    DWORD PTR [rax+rcx*4],edx
  4143ab:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  4143b0:	mov    r15,QWORD PTR [r12+0x30]
  4143b5:	mov    DWORD PTR [rsp+0x70],0xffffffff
  4143bd:	mov    BYTE PTR [rsp+0x76],0x1
  4143c2:	mov    al,BYTE PTR [r15+0x4a]
  4143c6:	mov    BYTE PTR [rsp+0x74],al
  4143ca:	mov    BYTE PTR [rsp+0x75],0x0
  4143cf:	mov    rax,QWORD PTR [r15+0x28]
  4143d3:	mov    QWORD PTR [rsp+0x68],rax
  4143d8:	lea    rax,[rsp+0x68]
  4143dd:	mov    QWORD PTR [r15+0x28],rax
  4143e1:	mov    DWORD PTR [r12+0x8],r14d
  4143e6:	lea    rbp,[r12+0x20]
  4143eb:	cmp    DWORD PTR [r12+0x20],0x11f
  4143f4:	jne    4147a4 <__ctype_b_loc@plt+0x124d4>
  4143fa:	lea    rsi,[r12+0x18]
  4143ff:	mov    rdi,r12
  414402:	call   411660 <__ctype_b_loc@plt+0xf390>
  414407:	mov    DWORD PTR [r12+0x10],eax
  41440c:	cmp    eax,0x11d
  414411:	jne    4147c5 <__ctype_b_loc@plt+0x124f5>
  414417:	jmp    4147ef <__ctype_b_loc@plt+0x1251f>
  41441c:	mov    DWORD PTR [r12+0x8],r14d
  414421:	lea    rbp,[r12+0x20]
  414426:	cmp    DWORD PTR [r12+0x20],0x11f
  41442f:	jne    414827 <__ctype_b_loc@plt+0x12557>
  414435:	lea    rsi,[r12+0x18]
  41443a:	mov    rdi,r12
  41443d:	call   411660 <__ctype_b_loc@plt+0xf390>
  414442:	mov    DWORD PTR [r12+0x10],eax
  414447:	cmp    eax,0x11d
  41444c:	jne    414848 <__ctype_b_loc@plt+0x12578>
  414452:	jmp    414872 <__ctype_b_loc@plt+0x125a2>
  414457:	mov    rbx,r12
  41445a:	mov    r12,QWORD PTR [r12+0x30]
  41445f:	mov    DWORD PTR [rbx+0x8],r14d
  414463:	lea    rax,[rbx+0x20]
  414467:	cmp    DWORD PTR [rbx+0x20],0x11f
  41446e:	jne    4148a7 <__ctype_b_loc@plt+0x125d7>
  414474:	mov    r15,rax
  414477:	lea    rsi,[rbx+0x18]
  41447b:	mov    rdi,rbx
  41447e:	call   411660 <__ctype_b_loc@plt+0xf390>
  414483:	mov    DWORD PTR [rbx+0x10],eax
  414486:	jmp    4148ba <__ctype_b_loc@plt+0x125ea>
  41448b:	mov    DWORD PTR [r12+0x8],r14d
  414490:	lea    rbp,[r12+0x20]
  414495:	cmp    DWORD PTR [r12+0x20],0x11f
  41449e:	jne    414952 <__ctype_b_loc@plt+0x12682>
  4144a4:	lea    rsi,[r12+0x18]
  4144a9:	mov    rdi,r12
  4144ac:	call   411660 <__ctype_b_loc@plt+0xf390>
  4144b1:	mov    DWORD PTR [r12+0x10],eax
  4144b6:	cmp    eax,0x109
  4144bb:	je     414977 <__ctype_b_loc@plt+0x126a7>
  4144c1:	mov    QWORD PTR [rsp+0x8],rbp
  4144c6:	lea    rcx,[r12+0x18]
  4144cb:	mov    QWORD PTR [rsp+0x10],rcx
  4144d0:	lea    rcx,[r12+0x10]
  4144d5:	mov    QWORD PTR [rsp+0x18],rcx
  4144da:	mov    rbp,0xffffffffffffffff
  4144e1:	lea    r13,[rip+0x15fad]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  4144e8:	lea    r14,[rip+0x15b65]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  4144ef:	xor    r15d,r15d
  4144f2:	cmp    eax,0x11d
  4144f7:	je     41455a <__ctype_b_loc@plt+0x1228a>
  4144f9:	nop    DWORD PTR [rax+0x0]
  414500:	mov    rdi,QWORD PTR [r12+0x38]
  414505:	mov    rsi,r13
  414508:	mov    rdx,r14
  41450b:	xor    eax,eax
  41450d:	call   404800 <__ctype_b_loc@plt+0x2530>
  414512:	mov    edx,DWORD PTR [r12+0x10]
  414517:	mov    rdi,r12
  41451a:	mov    rsi,rax
  41451d:	call   413660 <__ctype_b_loc@plt+0x11390>
  414522:	jmp    41455a <__ctype_b_loc@plt+0x1228a>
  414524:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41452e:	xchg   ax,ax
  414530:	mov    rax,QWORD PTR [rsp+0x8]
  414535:	vmovups xmm0,XMMWORD PTR [rax]
  414539:	mov    rax,QWORD PTR [rsp+0x18]
  41453e:	vmovups XMMWORD PTR [rax],xmm0
  414542:	mov    DWORD PTR [r12+0x20],0x11f
  41454b:	mov    eax,DWORD PTR [r12+0x10]
  414550:	dec    rbp
  414553:	cmp    eax,0x11d
  414558:	jne    414500 <__ctype_b_loc@plt+0x12230>
  41455a:	mov    rbx,QWORD PTR [r12+0x18]
  41455f:	mov    eax,DWORD PTR [r12+0x4]
  414564:	mov    DWORD PTR [r12+0x8],eax
  414569:	cmp    DWORD PTR [r12+0x20],0x11f
  414572:	jne    414590 <__ctype_b_loc@plt+0x122c0>
  414574:	mov    rdi,r12
  414577:	mov    rsi,QWORD PTR [rsp+0x10]
  41457c:	call   411660 <__ctype_b_loc@plt+0xf390>
  414581:	mov    DWORD PTR [r12+0x10],eax
  414586:	jmp    4145a8 <__ctype_b_loc@plt+0x122d8>
  414588:	nop    DWORD PTR [rax+rax*1+0x0]
  414590:	mov    rax,QWORD PTR [rsp+0x8]
  414595:	vmovups xmm0,XMMWORD PTR [rax]
  414599:	mov    rcx,QWORD PTR [rsp+0x18]
  41459e:	vmovups XMMWORD PTR [rcx],xmm0
  4145a2:	mov    DWORD PTR [rax],0x11f
  4145a8:	mov    rdi,r12
  4145ab:	mov    rsi,rbx
  4145ae:	mov    edx,r15d
  4145b1:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  4145b6:	mov    eax,DWORD PTR [r12+0x10]
  4145bb:	cmp    eax,0x2c
  4145be:	jne    4149a9 <__ctype_b_loc@plt+0x126d9>
  4145c4:	inc    r15d
  4145c7:	mov    eax,DWORD PTR [r12+0x4]
  4145cc:	mov    ecx,DWORD PTR [r12+0x20]
  4145d1:	mov    DWORD PTR [r12+0x8],eax
  4145d6:	cmp    ecx,0x11f
  4145dc:	jne    414530 <__ctype_b_loc@plt+0x12260>
  4145e2:	mov    rdi,r12
  4145e5:	mov    rsi,QWORD PTR [rsp+0x10]
  4145ea:	call   411660 <__ctype_b_loc@plt+0xf390>
  4145ef:	mov    DWORD PTR [r12+0x10],eax
  4145f4:	jmp    414550 <__ctype_b_loc@plt+0x12280>
  4145f9:	mov    rbx,QWORD PTR [r12+0x30]
  4145fe:	mov    edx,DWORD PTR [rbx+0x30]
  414601:	mov    DWORD PTR [rbx+0x34],edx
  414604:	mov    DWORD PTR [rsp+0x70],0xffffffff
  41460c:	mov    BYTE PTR [rsp+0x76],0x1
  414611:	mov    al,BYTE PTR [rbx+0x4a]
  414614:	mov    BYTE PTR [rsp+0x74],al
  414618:	mov    BYTE PTR [rsp+0x75],0x0
  41461d:	mov    rcx,QWORD PTR [rbx+0x28]
  414621:	mov    QWORD PTR [rsp+0x68],rcx
  414626:	mov    DWORD PTR [rsp+0x90],0xffffffff
  414631:	mov    BYTE PTR [rsp+0x94],al
  414638:	mov    WORD PTR [rsp+0x95],0x0
  414642:	lea    rax,[rsp+0x68]
  414647:	mov    QWORD PTR [rsp+0x88],rax
  41464f:	lea    rax,[rsp+0x88]
  414657:	mov    QWORD PTR [rbx+0x28],rax
  41465b:	mov    DWORD PTR [r12+0x8],r14d
  414660:	lea    rbp,[r12+0x20]
  414665:	cmp    DWORD PTR [r12+0x20],0x11f
  41466e:	mov    DWORD PTR [rsp+0x10],edx
  414672:	jne    4149e9 <__ctype_b_loc@plt+0x12719>
  414678:	lea    rsi,[r12+0x18]
  41467d:	mov    rdi,r12
  414680:	call   411660 <__ctype_b_loc@plt+0xf390>
  414685:	mov    DWORD PTR [r12+0x10],eax
  41468a:	jmp    4149fe <__ctype_b_loc@plt+0x1272e>
  41468f:	mov    rbx,QWORD PTR [r12+0x30]
  414694:	mov    DWORD PTR [r12+0x8],r14d
  414699:	lea    r15,[r12+0x20]
  41469e:	cmp    DWORD PTR [r12+0x20],0x11f
  4146a7:	jne    414aca <__ctype_b_loc@plt+0x127fa>
  4146ad:	lea    rsi,[r12+0x18]
  4146b2:	mov    rdi,r12
  4146b5:	call   411660 <__ctype_b_loc@plt+0xf390>
  4146ba:	mov    DWORD PTR [r12+0x10],eax
  4146bf:	jmp    414ae4 <__ctype_b_loc@plt+0x12814>
  4146c4:	mov    r15,QWORD PTR [r12+0x30]
  4146c9:	mov    DWORD PTR [r12+0x8],r14d
  4146ce:	lea    r13,[r12+0x20]
  4146d3:	cmp    DWORD PTR [r12+0x20],0x11f
  4146dc:	mov    DWORD PTR [rsp+0x44],r14d
  4146e1:	jne    414b31 <__ctype_b_loc@plt+0x12861>
  4146e7:	lea    rsi,[r12+0x18]
  4146ec:	mov    rdi,r12
  4146ef:	call   411660 <__ctype_b_loc@plt+0xf390>
  4146f4:	mov    DWORD PTR [r12+0x10],eax
  4146f9:	jmp    414b47 <__ctype_b_loc@plt+0x12877>
  4146fe:	lea    rax,[r12+0x20]
  414703:	vmovups xmm0,XMMWORD PTR [rax]
  414707:	vmovups XMMWORD PTR [r12+0x10],xmm0
  41470e:	mov    DWORD PTR [r12+0x20],0x11f
  414717:	mov    rdi,r12
  41471a:	call   4174f0 <__ctype_b_loc@plt+0x15220>
  41471f:	mov    ebp,0x1
  414724:	jmp    416f71 <__ctype_b_loc@plt+0x14ca1>
  414729:	vmovups xmm0,XMMWORD PTR [rbx]
  41472d:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414734:	mov    DWORD PTR [r12+0x20],0x11f
  41473d:	mov    rdi,r12
  414740:	call   4170e0 <__ctype_b_loc@plt+0x14e10>
  414745:	mov    eax,DWORD PTR [r12+0x4]
  41474a:	cmp    DWORD PTR [r12+0x10],0x106
  414753:	jne    414c11 <__ctype_b_loc@plt+0x12941>
  414759:	mov    DWORD PTR [r12+0x8],eax
  41475e:	cmp    DWORD PTR [r12+0x20],0x11f
  414767:	jne    4156c9 <__ctype_b_loc@plt+0x133f9>
  41476d:	lea    rsi,[r12+0x18]
  414772:	mov    rdi,r12
  414775:	call   411660 <__ctype_b_loc@plt+0xf390>
  41477a:	mov    DWORD PTR [r12+0x10],eax
  41477f:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  414784:	mov    QWORD PTR [rsp+0x20],0x0
  41478d:	lea    rsi,[rsp+0x20]
  414792:	mov    rdi,r12
  414795:	mov    edx,0x1
  41479a:	call   41d020 <__ctype_b_loc@plt+0x1ad50>
  41479f:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  4147a4:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  4147a9:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4147b0:	mov    DWORD PTR [r12+0x20],0x11f
  4147b9:	mov    eax,DWORD PTR [r12+0x10]
  4147be:	cmp    eax,0x11d
  4147c3:	je     4147ef <__ctype_b_loc@plt+0x1251f>
  4147c5:	mov    rdi,QWORD PTR [r12+0x38]
  4147ca:	lea    rsi,[rip+0x15cc4]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  4147d1:	lea    rdx,[rip+0x1587c]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  4147d8:	xor    eax,eax
  4147da:	call   404800 <__ctype_b_loc@plt+0x2530>
  4147df:	mov    edx,DWORD PTR [r12+0x10]
  4147e4:	mov    rdi,r12
  4147e7:	mov    rsi,rax
  4147ea:	call   413660 <__ctype_b_loc@plt+0x11390>
  4147ef:	lea    r13,[r12+0x18]
  4147f4:	mov    rbx,QWORD PTR [r12+0x18]
  4147f9:	mov    eax,DWORD PTR [r12+0x4]
  4147fe:	mov    DWORD PTR [r12+0x8],eax
  414803:	cmp    DWORD PTR [r12+0x20],0x11f
  41480c:	jne    414c3b <__ctype_b_loc@plt+0x1296b>
  414812:	mov    rdi,r12
  414815:	mov    rsi,r13
  414818:	call   411660 <__ctype_b_loc@plt+0xf390>
  41481d:	mov    DWORD PTR [r12+0x10],eax
  414822:	jmp    414c55 <__ctype_b_loc@plt+0x12985>
  414827:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  41482c:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414833:	mov    DWORD PTR [r12+0x20],0x11f
  41483c:	mov    eax,DWORD PTR [r12+0x10]
  414841:	cmp    eax,0x11d
  414846:	je     414872 <__ctype_b_loc@plt+0x125a2>
  414848:	mov    rdi,QWORD PTR [r12+0x38]
  41484d:	lea    rsi,[rip+0x15c41]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  414854:	lea    rdx,[rip+0x157f9]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  41485b:	xor    eax,eax
  41485d:	call   404800 <__ctype_b_loc@plt+0x2530>
  414862:	mov    edx,DWORD PTR [r12+0x10]
  414867:	mov    rdi,r12
  41486a:	mov    rsi,rax
  41486d:	call   413660 <__ctype_b_loc@plt+0x11390>
  414872:	mov    rbx,QWORD PTR [r12+0x18]
  414877:	mov    eax,DWORD PTR [r12+0x4]
  41487c:	mov    DWORD PTR [r12+0x8],eax
  414881:	cmp    DWORD PTR [r12+0x20],0x11f
  41488a:	jne    414d9c <__ctype_b_loc@plt+0x12acc>
  414890:	lea    rsi,[r12+0x18]
  414895:	mov    rdi,r12
  414898:	call   411660 <__ctype_b_loc@plt+0xf390>
  41489d:	mov    DWORD PTR [r12+0x10],eax
  4148a2:	jmp    414db1 <__ctype_b_loc@plt+0x12ae1>
  4148a7:	mov    r15,rax
  4148aa:	vmovups xmm0,XMMWORD PTR [rax]
  4148ae:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  4148b3:	mov    DWORD PTR [rbx+0x20],0x11f
  4148ba:	mov    DWORD PTR [rsp+0x44],r14d
  4148bf:	lea    rsi,[rsp+0x20]
  4148c4:	mov    rbp,rbx
  4148c7:	mov    rdi,rbx
  4148ca:	xor    edx,edx
  4148cc:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  4148d1:	cmp    DWORD PTR [rsp+0x20],0x1
  4148d6:	jne    4148e0 <__ctype_b_loc@plt+0x12610>
  4148d8:	mov    DWORD PTR [rsp+0x20],0x3
  4148e0:	mov    rbx,rbp
  4148e3:	mov    rdi,QWORD PTR [rbp+0x30]
  4148e7:	lea    rsi,[rsp+0x20]
  4148ec:	call   4176d0 <__ctype_b_loc@plt+0x15400>
  4148f1:	mov    r14d,DWORD PTR [rsp+0x34]
  4148f6:	cmp    DWORD PTR [rbp+0x10],0x112
  4148fd:	je     414926 <__ctype_b_loc@plt+0x12656>
  4148ff:	mov    rdi,QWORD PTR [rbx+0x38]
  414903:	lea    rsi,[rip+0x15b8b]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41490a:	lea    rdx,[rip+0x15718]        # 42a029 <__ctype_b_loc@plt+0x27d59>
  414911:	xor    eax,eax
  414913:	call   404800 <__ctype_b_loc@plt+0x2530>
  414918:	mov    edx,DWORD PTR [rbx+0x10]
  41491b:	mov    rdi,rbx
  41491e:	mov    rsi,rax
  414921:	call   413660 <__ctype_b_loc@plt+0x11390>
  414926:	mov    eax,DWORD PTR [rbx+0x4]
  414929:	mov    ecx,DWORD PTR [rbx+0x20]
  41492c:	mov    DWORD PTR [rbx+0x8],eax
  41492f:	cmp    ecx,0x11f
  414935:	mov    rbp,r15
  414938:	jne    414e37 <__ctype_b_loc@plt+0x12b67>
  41493e:	lea    rsi,[rbx+0x18]
  414942:	mov    rdi,rbx
  414945:	call   411660 <__ctype_b_loc@plt+0xf390>
  41494a:	mov    DWORD PTR [rbx+0x10],eax
  41494d:	jmp    414e48 <__ctype_b_loc@plt+0x12b78>
  414952:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414957:	vmovups XMMWORD PTR [r12+0x10],xmm0
  41495e:	mov    DWORD PTR [r12+0x20],0x11f
  414967:	mov    eax,DWORD PTR [r12+0x10]
  41496c:	cmp    eax,0x109
  414971:	jne    4144c1 <__ctype_b_loc@plt+0x121f1>
  414977:	mov    eax,DWORD PTR [r12+0x4]
  41497c:	mov    ecx,DWORD PTR [r12+0x20]
  414981:	mov    DWORD PTR [r12+0x8],eax
  414986:	cmp    ecx,0x11f
  41498c:	jne    4156e2 <__ctype_b_loc@plt+0x13412>
  414992:	lea    rsi,[r12+0x18]
  414997:	mov    rdi,r12
  41499a:	call   411660 <__ctype_b_loc@plt+0xf390>
  41499f:	mov    DWORD PTR [r12+0x10],eax
  4149a4:	jmp    4156fc <__ctype_b_loc@plt+0x1342c>
  4149a9:	cmp    eax,0x3d
  4149ac:	mov    QWORD PTR [rsp+0x48],rbp
  4149b1:	jne    415767 <__ctype_b_loc@plt+0x13497>
  4149b7:	mov    eax,DWORD PTR [r12+0x4]
  4149bc:	mov    ecx,DWORD PTR [r12+0x20]
  4149c1:	mov    DWORD PTR [r12+0x8],eax
  4149c6:	cmp    ecx,0x11f
  4149cc:	jne    416253 <__ctype_b_loc@plt+0x13f83>
  4149d2:	mov    rdi,r12
  4149d5:	mov    rsi,QWORD PTR [rsp+0x10]
  4149da:	call   411660 <__ctype_b_loc@plt+0xf390>
  4149df:	mov    DWORD PTR [r12+0x10],eax
  4149e4:	jmp    41626b <__ctype_b_loc@plt+0x13f9b>
  4149e9:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  4149ee:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4149f5:	mov    DWORD PTR [r12+0x20],0x11f
  4149fe:	mov    QWORD PTR [rsp+0x8],rbx
  414a03:	mov    DWORD PTR [rsp+0x44],r14d
  414a08:	mov    rax,QWORD PTR [r12+0x38]
  414a0d:	mov    ecx,DWORD PTR [rax+0x60]
  414a10:	inc    ecx
  414a12:	mov    WORD PTR [rax+0x60],cx
  414a16:	movzx  eax,cx
  414a19:	cmp    eax,0xc9
  414a1e:	jb     414a31 <__ctype_b_loc@plt+0x12761>
  414a20:	lea    rsi,[rip+0x15890]        # 42a2b7 <__ctype_b_loc@plt+0x27fe7>
  414a27:	mov    rdi,r12
  414a2a:	xor    edx,edx
  414a2c:	call   413660 <__ctype_b_loc@plt+0x11390>
  414a31:	lea    r14,[r12+0x10]
  414a36:	lea    r15,[r12+0x18]
  414a3b:	mov    r13d,0x8010007
  414a41:	jmp    414a74 <__ctype_b_loc@plt+0x127a4>
  414a43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a4d:	nop    DWORD PTR [rax]
  414a50:	mov    rdi,r12
  414a53:	mov    rsi,r15
  414a56:	call   411660 <__ctype_b_loc@plt+0xf390>
  414a5b:	mov    DWORD PTR [r12+0x10],eax
  414a60:	mov    rax,QWORD PTR [r12+0x30]
  414a65:	movzx  ecx,BYTE PTR [rax+0x4a]
  414a69:	mov    DWORD PTR [rax+0x3c],ecx
  414a6c:	test   ebx,ebx
  414a6e:	jne    41550b <__ctype_b_loc@plt+0x1323b>
  414a74:	mov    eax,DWORD PTR [r12+0x10]
  414a79:	lea    ecx,[rax-0x104]
  414a7f:	cmp    ecx,0x1b
  414a82:	ja     414a8e <__ctype_b_loc@plt+0x127be>
  414a84:	bt     r13d,ecx
  414a88:	jb     415510 <__ctype_b_loc@plt+0x13240>
  414a8e:	mov    rdi,r12
  414a91:	call   4142e0 <__ctype_b_loc@plt+0x12010>
  414a96:	mov    ebx,eax
  414a98:	cmp    DWORD PTR [r12+0x10],0x3b
  414a9e:	jne    414a60 <__ctype_b_loc@plt+0x12790>
  414aa0:	mov    eax,DWORD PTR [r12+0x4]
  414aa5:	mov    ecx,DWORD PTR [r12+0x20]
  414aaa:	mov    DWORD PTR [r12+0x8],eax
  414aaf:	cmp    ecx,0x11f
  414ab5:	je     414a50 <__ctype_b_loc@plt+0x12780>
  414ab7:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414abc:	vmovups XMMWORD PTR [r14],xmm0
  414ac1:	mov    DWORD PTR [rbp+0x0],0x11f
  414ac8:	jmp    414a60 <__ctype_b_loc@plt+0x12790>
  414aca:	vmovups xmm0,XMMWORD PTR [r15]
  414acf:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414ad6:	mov    DWORD PTR [r12+0x20],0x11f
  414adf:	mov    eax,DWORD PTR [r12+0x10]
  414ae4:	xor    edx,edx
  414ae6:	lea    ecx,[rax-0x104]
  414aec:	cmp    ecx,0x1b
  414aef:	ja     41557b <__ctype_b_loc@plt+0x132ab>
  414af5:	mov    esi,0x8010007
  414afa:	bt     esi,ecx
  414afd:	jae    41557b <__ctype_b_loc@plt+0x132ab>
  414b03:	xor    ebp,ebp
  414b05:	shl    edx,0x6
  414b08:	shl    ebp,0x17
  414b0b:	add    ebp,0x800000
  414b11:	or     ebp,edx
  414b13:	or     ebp,0x1e
  414b16:	mov    rax,QWORD PTR [rbx+0x18]
  414b1a:	mov    edx,DWORD PTR [rax+0x8]
  414b1d:	mov    rdi,rbx
  414b20:	mov    esi,ebp
  414b22:	call   419020 <__ctype_b_loc@plt+0x16d50>
  414b27:	mov    ebp,0x1
  414b2c:	jmp    416f71 <__ctype_b_loc@plt+0x14ca1>
  414b31:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  414b37:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414b3e:	mov    DWORD PTR [r12+0x20],0x11f
  414b47:	mov    r14d,DWORD PTR [r15+0x30]
  414b4b:	mov    DWORD PTR [r15+0x34],r14d
  414b4f:	lea    rsi,[rsp+0x20]
  414b54:	mov    rdi,r12
  414b57:	xor    edx,edx
  414b59:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  414b5e:	cmp    DWORD PTR [rsp+0x20],0x1
  414b63:	jne    414b6d <__ctype_b_loc@plt+0x1289d>
  414b65:	mov    DWORD PTR [rsp+0x20],0x3
  414b6d:	mov    rdi,QWORD PTR [r12+0x30]
  414b72:	lea    rbx,[rsp+0x20]
  414b77:	mov    rsi,rbx
  414b7a:	call   4176d0 <__ctype_b_loc@plt+0x15400>
  414b7f:	mov    ebp,DWORD PTR [rsp+0x34]
  414b83:	mov    DWORD PTR [rsp+0x28],0xffffffff
  414b8b:	mov    BYTE PTR [rsp+0x2e],0x1
  414b90:	mov    al,BYTE PTR [r15+0x4a]
  414b94:	mov    BYTE PTR [rsp+0x2c],al
  414b98:	mov    BYTE PTR [rsp+0x2d],0x0
  414b9d:	mov    rax,QWORD PTR [r15+0x28]
  414ba1:	mov    QWORD PTR [rsp+0x20],rax
  414ba6:	mov    QWORD PTR [r15+0x28],rbx
  414baa:	cmp    DWORD PTR [r12+0x10],0x103
  414bb3:	je     414bdf <__ctype_b_loc@plt+0x1290f>
  414bb5:	mov    rdi,QWORD PTR [r12+0x38]
  414bba:	lea    rsi,[rip+0x158d4]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  414bc1:	lea    rdx,[rip+0x15430]        # 429ff8 <__ctype_b_loc@plt+0x27d28>
  414bc8:	xor    eax,eax
  414bca:	call   404800 <__ctype_b_loc@plt+0x2530>
  414bcf:	mov    edx,DWORD PTR [r12+0x10]
  414bd4:	mov    rdi,r12
  414bd7:	mov    rsi,rax
  414bda:	call   413660 <__ctype_b_loc@plt+0x11390>
  414bdf:	mov    eax,DWORD PTR [r12+0x4]
  414be4:	mov    ecx,DWORD PTR [r12+0x20]
  414be9:	mov    DWORD PTR [r12+0x8],eax
  414bee:	cmp    ecx,0x11f
  414bf4:	jne    4151ce <__ctype_b_loc@plt+0x12efe>
  414bfa:	lea    rsi,[r12+0x18]
  414bff:	mov    rdi,r12
  414c02:	call   411660 <__ctype_b_loc@plt+0xf390>
  414c07:	mov    DWORD PTR [r12+0x10],eax
  414c0c:	jmp    4151e4 <__ctype_b_loc@plt+0x12f14>
  414c11:	mov    rdi,QWORD PTR [r12+0x38]
  414c16:	cmp    eax,r14d
  414c19:	jne    415777 <__ctype_b_loc@plt+0x134a7>
  414c1f:	lea    rsi,[rip+0x1586f]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  414c26:	lea    rdx,[rip+0x153da]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  414c2d:	xor    ebp,ebp
  414c2f:	xor    eax,eax
  414c31:	call   404800 <__ctype_b_loc@plt+0x2530>
  414c36:	jmp    415798 <__ctype_b_loc@plt+0x134c8>
  414c3b:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414c40:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414c47:	mov    DWORD PTR [r12+0x20],0x11f
  414c50:	mov    eax,DWORD PTR [r12+0x10]
  414c55:	cmp    eax,0x2c
  414c58:	mov    QWORD PTR [rsp+0x8],rbp
  414c5d:	je     415240 <__ctype_b_loc@plt+0x12f70>
  414c63:	cmp    eax,0x10b
  414c68:	je     415240 <__ctype_b_loc@plt+0x12f70>
  414c6e:	cmp    eax,0x3d
  414c71:	jne    4157a5 <__ctype_b_loc@plt+0x134d5>
  414c77:	mov    QWORD PTR [rsp+0x10],r13
  414c7c:	mov    DWORD PTR [rsp+0x44],r14d
  414c81:	mov    r13,QWORD PTR [r12+0x30]
  414c86:	mov    eax,DWORD PTR [r13+0x3c]
  414c8a:	mov    DWORD PTR [rsp+0x18],eax
  414c8e:	lea    rsi,[rip+0x15823]        # 42a4b8 <__ctype_b_loc@plt+0x281e8>
  414c95:	mov    edx,0xb
  414c9a:	mov    rdi,r12
  414c9d:	call   414230 <__ctype_b_loc@plt+0x11f60>
  414ca2:	mov    rdi,r12
  414ca5:	mov    rsi,rax
  414ca8:	xor    edx,edx
  414caa:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  414caf:	lea    rsi,[rip+0x1580e]        # 42a4c4 <__ctype_b_loc@plt+0x281f4>
  414cb6:	mov    edx,0xb
  414cbb:	mov    rdi,r12
  414cbe:	call   414230 <__ctype_b_loc@plt+0x11f60>
  414cc3:	mov    rdi,r12
  414cc6:	mov    rsi,rax
  414cc9:	mov    edx,0x1
  414cce:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  414cd3:	lea    rsi,[rip+0x157f6]        # 42a4d0 <__ctype_b_loc@plt+0x28200>
  414cda:	mov    edx,0xa
  414cdf:	mov    rdi,r12
  414ce2:	call   414230 <__ctype_b_loc@plt+0x11f60>
  414ce7:	mov    rdi,r12
  414cea:	mov    rsi,rax
  414ced:	mov    edx,0x2
  414cf2:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  414cf7:	mov    rdi,r12
  414cfa:	mov    rsi,rbx
  414cfd:	mov    edx,0x3
  414d02:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  414d07:	cmp    DWORD PTR [r12+0x10],0x3d
  414d0d:	je     414d67 <__ctype_b_loc@plt+0x12a97>
  414d0f:	mov    rbx,QWORD PTR [r12+0x38]
  414d14:	call   4022d0 <__ctype_b_loc@plt>
  414d19:	mov    rax,QWORD PTR [rax]
  414d1c:	movzx  eax,WORD PTR [rax+0x7a]
  414d20:	test   al,0x2
  414d22:	lea    rax,[rip+0x15532]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  414d29:	lea    rsi,[rip+0x15522]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  414d30:	cmove  rsi,rax
  414d34:	mov    rdi,rbx
  414d37:	mov    edx,0x3d
  414d3c:	xor    eax,eax
  414d3e:	call   404800 <__ctype_b_loc@plt+0x2530>
  414d43:	lea    rsi,[rip+0x1574b]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  414d4a:	mov    rdi,rbx
  414d4d:	mov    rdx,rax
  414d50:	xor    eax,eax
  414d52:	call   404800 <__ctype_b_loc@plt+0x2530>
  414d57:	mov    edx,DWORD PTR [r12+0x10]
  414d5c:	mov    rdi,r12
  414d5f:	mov    rsi,rax
  414d62:	call   413660 <__ctype_b_loc@plt+0x11390>
  414d67:	mov    eax,DWORD PTR [r12+0x4]
  414d6c:	mov    ecx,DWORD PTR [r12+0x20]
  414d71:	mov    DWORD PTR [r12+0x8],eax
  414d76:	mov    r14,r15
  414d79:	cmp    ecx,0x11f
  414d7f:	jne    4164c4 <__ctype_b_loc@plt+0x141f4>
  414d85:	mov    rdi,r12
  414d88:	mov    rsi,QWORD PTR [rsp+0x10]
  414d8d:	call   411660 <__ctype_b_loc@plt+0xf390>
  414d92:	mov    DWORD PTR [r12+0x10],eax
  414d97:	jmp    4164dd <__ctype_b_loc@plt+0x1420d>
  414d9c:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414da1:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414da8:	mov    DWORD PTR [r12+0x20],0x11f
  414db1:	mov    rbp,QWORD PTR [r12+0x30]
  414db6:	lea    rdx,[rsp+0x20]
  414dbb:	mov    rdi,rbp
  414dbe:	mov    rsi,rbx
  414dc1:	mov    ecx,0x1
  414dc6:	call   41bda0 <__ctype_b_loc@plt+0x19ad0>
  414dcb:	cmp    eax,0x8
  414dce:	jne    414df1 <__ctype_b_loc@plt+0x12b21>
  414dd0:	mov    QWORD PTR [rsp+0x68],rbx
  414dd5:	mov    DWORD PTR [rsp+0x70],0x4
  414ddd:	lea    rdx,[rsp+0x68]
  414de2:	mov    rdi,rbp
  414de5:	mov    rsi,rdx
  414de8:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  414ded:	mov    DWORD PTR [rsp+0x28],eax
  414df1:	lea    rbx,[rsp+0x20]
  414df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e00:	mov    eax,DWORD PTR [r12+0x10]
  414e05:	cmp    eax,0x2e
  414e08:	jne    414e17 <__ctype_b_loc@plt+0x12b47>
  414e0a:	mov    rdi,r12
  414e0d:	mov    rsi,rbx
  414e10:	call   41b7a0 <__ctype_b_loc@plt+0x194d0>
  414e15:	jmp    414e00 <__ctype_b_loc@plt+0x12b30>
  414e17:	cmp    eax,0x3a
  414e1a:	jne    4153f2 <__ctype_b_loc@plt+0x13122>
  414e20:	lea    rsi,[rsp+0x20]
  414e25:	mov    rdi,r12
  414e28:	call   41b7a0 <__ctype_b_loc@plt+0x194d0>
  414e2d:	mov    edx,0x1
  414e32:	jmp    4153f4 <__ctype_b_loc@plt+0x13124>
  414e37:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414e3c:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  414e41:	mov    DWORD PTR [rbx+0x20],0x11f
  414e48:	mov    rdi,rbx
  414e4b:	call   4170e0 <__ctype_b_loc@plt+0x14e10>
  414e50:	lea    rax,[rbx+0x10]
  414e54:	mov    QWORD PTR [rsp+0x10],rax
  414e59:	lea    rax,[rbx+0x18]
  414e5d:	mov    QWORD PTR [rsp+0x18],rax
  414e62:	mov    r15d,0xffffffff
  414e68:	mov    QWORD PTR [rsp+0x8],r12
  414e6d:	mov    QWORD PTR [rsp+0x50],rbp
  414e72:	mov    QWORD PTR [rsp+0x58],rbx
  414e77:	jmp    414e98 <__ctype_b_loc@plt+0x12bc8>
  414e79:	nop    DWORD PTR [rax+0x0]
  414e80:	mov    rdi,rbx
  414e83:	mov    rsi,QWORD PTR [rsp+0x18]
  414e88:	call   411660 <__ctype_b_loc@plt+0xf390>
  414e8d:	mov    DWORD PTR [rbx+0x10],eax
  414e90:	mov    rdi,rbx
  414e93:	call   4170e0 <__ctype_b_loc@plt+0x14e10>
  414e98:	mov    eax,DWORD PTR [rbx+0x10]
  414e9b:	cmp    eax,0x105
  414ea0:	jne    415111 <__ctype_b_loc@plt+0x12e41>
  414ea6:	mov    rdi,r12
  414ea9:	call   417600 <__ctype_b_loc@plt+0x15330>
  414eae:	cmp    eax,0xffffffff
  414eb1:	je     414f73 <__ctype_b_loc@plt+0x12ca3>
  414eb7:	mov    r13d,eax
  414eba:	cmp    r15d,0xffffffff
  414ebe:	je     414f70 <__ctype_b_loc@plt+0x12ca0>
  414ec4:	mov    QWORD PTR [rsp+0x48],r14
  414ec9:	mov    rax,QWORD PTR [r12]
  414ecd:	mov    rbx,QWORD PTR [rax+0x18]
  414ed1:	mov    r14d,r15d
  414ed4:	mov    edx,r15d
  414ed7:	nop    WORD PTR [rax+rax*1+0x0]
  414ee0:	mov    ecx,edx
  414ee2:	movsxd r15,edx
  414ee5:	mov    eax,DWORD PTR [rbx+r15*4]
  414ee9:	mov    edx,eax
  414eeb:	shr    edx,0xe
  414eee:	lea    esi,[rdx-0x1ffff]
  414ef4:	cmp    esi,0xffffffff
  414ef7:	lea    edx,[r15+rdx*1-0x1fffe]
  414eff:	cmove  edx,esi
  414f02:	cmp    edx,0xffffffff
  414f05:	jne    414ee0 <__ctype_b_loc@plt+0x12c10>
  414f07:	not    ecx
  414f09:	add    r13d,ecx
  414f0c:	mov    ecx,r13d
  414f0f:	neg    ecx
  414f11:	cmovl  ecx,r13d
  414f15:	cmp    ecx,0x20000
  414f1b:	jl     414f39 <__ctype_b_loc@plt+0x12c69>
  414f1d:	mov    rax,QWORD PTR [rsp+0x8]
  414f22:	mov    rdi,QWORD PTR [rax+0x18]
  414f26:	mov    edx,DWORD PTR [rdi+0x10]
  414f29:	lea    rsi,[rip+0x153bb]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  414f30:	call   413660 <__ctype_b_loc@plt+0x11390>
  414f35:	mov    eax,DWORD PTR [rbx+r15*4]
  414f39:	and    eax,0x3fff
  414f3e:	shl    r13d,0xe
  414f42:	lea    eax,[rax+r13*1]
  414f46:	add    eax,0x7fffc000
  414f4b:	mov    DWORD PTR [rbx+r15*4],eax
  414f4f:	mov    r12,QWORD PTR [rsp+0x8]
  414f54:	mov    r15d,r14d
  414f57:	mov    rbp,QWORD PTR [rsp+0x50]
  414f5c:	mov    r14,QWORD PTR [rsp+0x48]
  414f61:	jmp    414f73 <__ctype_b_loc@plt+0x12ca3>
  414f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f6d:	nop    DWORD PTR [rax]
  414f70:	mov    r15d,r13d
  414f73:	mov    eax,DWORD PTR [r12+0x30]
  414f78:	mov    DWORD PTR [r12+0x34],eax
  414f7d:	cmp    r14d,0xffffffff
  414f81:	je     415035 <__ctype_b_loc@plt+0x12d65>
  414f87:	mov    edx,DWORD PTR [r12+0x38]
  414f8c:	cmp    edx,0xffffffff
  414f8f:	je     415030 <__ctype_b_loc@plt+0x12d60>
  414f95:	mov    r13d,r15d
  414f98:	mov    r15,rbp
  414f9b:	mov    rax,QWORD PTR [r12]
  414f9f:	mov    rbx,QWORD PTR [rax+0x18]
  414fa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fad:	nop    DWORD PTR [rax]
  414fb0:	mov    ecx,edx
  414fb2:	movsxd rbp,edx
  414fb5:	mov    eax,DWORD PTR [rbx+rbp*4]
  414fb8:	mov    edx,eax
  414fba:	shr    edx,0xe
  414fbd:	lea    esi,[rdx-0x1ffff]
  414fc3:	cmp    esi,0xffffffff
  414fc6:	lea    edx,[rbp+rdx*1-0x1fffe]
  414fcd:	cmove  edx,esi
  414fd0:	cmp    edx,0xffffffff
  414fd3:	jne    414fb0 <__ctype_b_loc@plt+0x12ce0>
  414fd5:	not    ecx
  414fd7:	add    r14d,ecx
  414fda:	mov    ecx,r14d
  414fdd:	neg    ecx
  414fdf:	cmovl  ecx,r14d
  414fe3:	cmp    ecx,0x20000
  414fe9:	jl     415006 <__ctype_b_loc@plt+0x12d36>
  414feb:	mov    rax,QWORD PTR [rsp+0x8]
  414ff0:	mov    rdi,QWORD PTR [rax+0x18]
  414ff4:	mov    edx,DWORD PTR [rdi+0x10]
  414ff7:	lea    rsi,[rip+0x152ed]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  414ffe:	call   413660 <__ctype_b_loc@plt+0x11390>
  415003:	mov    eax,DWORD PTR [rbx+rbp*4]
  415006:	and    eax,0x3fff
  41500b:	shl    r14d,0xe
  41500f:	lea    eax,[r14+rax*1]
  415013:	add    eax,0x7fffc000
  415018:	mov    DWORD PTR [rbx+rbp*4],eax
  41501b:	mov    rbp,r15
  41501e:	mov    r12,QWORD PTR [rsp+0x8]
  415023:	mov    r15d,r13d
  415026:	jmp    415035 <__ctype_b_loc@plt+0x12d65>
  415028:	nop    DWORD PTR [rax+rax*1+0x0]
  415030:	mov    DWORD PTR [r12+0x38],r14d
  415035:	mov    rbx,QWORD PTR [rsp+0x58]
  41503a:	mov    eax,DWORD PTR [rbx+0x4]
  41503d:	mov    ecx,DWORD PTR [rbx+0x20]
  415040:	mov    DWORD PTR [rbx+0x8],eax
  415043:	cmp    ecx,0x11f
  415049:	jne    415060 <__ctype_b_loc@plt+0x12d90>
  41504b:	mov    r13,rbp
  41504e:	mov    rdi,rbx
  415051:	mov    rsi,QWORD PTR [rsp+0x18]
  415056:	call   411660 <__ctype_b_loc@plt+0xf390>
  41505b:	mov    DWORD PTR [rbx+0x10],eax
  41505e:	jmp    415078 <__ctype_b_loc@plt+0x12da8>
  415060:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415065:	mov    rax,QWORD PTR [rsp+0x10]
  41506a:	vmovups XMMWORD PTR [rax],xmm0
  41506e:	mov    r13,rbp
  415071:	mov    DWORD PTR [rbp+0x0],0x11f
  415078:	lea    rbp,[rsp+0x20]
  41507d:	mov    rdi,rbx
  415080:	mov    rsi,rbp
  415083:	xor    edx,edx
  415085:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41508a:	cmp    DWORD PTR [rsp+0x20],0x1
  41508f:	jne    415099 <__ctype_b_loc@plt+0x12dc9>
  415091:	mov    DWORD PTR [rsp+0x20],0x3
  415099:	mov    rbx,QWORD PTR [rsp+0x58]
  41509e:	mov    rdi,QWORD PTR [rbx+0x30]
  4150a2:	mov    rsi,rbp
  4150a5:	call   4176d0 <__ctype_b_loc@plt+0x15400>
  4150aa:	mov    r14d,DWORD PTR [rsp+0x34]
  4150af:	cmp    DWORD PTR [rbx+0x10],0x112
  4150b6:	je     4150df <__ctype_b_loc@plt+0x12e0f>
  4150b8:	mov    rdi,QWORD PTR [rbx+0x38]
  4150bc:	lea    rsi,[rip+0x153d2]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  4150c3:	lea    rdx,[rip+0x14f5f]        # 42a029 <__ctype_b_loc@plt+0x27d59>
  4150ca:	xor    eax,eax
  4150cc:	call   404800 <__ctype_b_loc@plt+0x2530>
  4150d1:	mov    edx,DWORD PTR [rbx+0x10]
  4150d4:	mov    rdi,rbx
  4150d7:	mov    rsi,rax
  4150da:	call   413660 <__ctype_b_loc@plt+0x11390>
  4150df:	mov    eax,DWORD PTR [rbx+0x4]
  4150e2:	mov    ecx,DWORD PTR [rbx+0x20]
  4150e5:	mov    DWORD PTR [rbx+0x8],eax
  4150e8:	cmp    ecx,0x11f
  4150ee:	mov    rbp,r13
  4150f1:	je     414e80 <__ctype_b_loc@plt+0x12bb0>
  4150f7:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  4150fc:	mov    rax,QWORD PTR [rsp+0x10]
  415101:	vmovups XMMWORD PTR [rax],xmm0
  415105:	mov    DWORD PTR [rbp+0x0],0x11f
  41510c:	jmp    414e90 <__ctype_b_loc@plt+0x12bc0>
  415111:	cmp    eax,0x104
  415116:	jne    415433 <__ctype_b_loc@plt+0x13163>
  41511c:	mov    ebp,r15d
  41511f:	mov    rdi,r12
  415122:	call   417600 <__ctype_b_loc@plt+0x15330>
  415127:	cmp    eax,0xffffffff
  41512a:	je     4151c6 <__ctype_b_loc@plt+0x12ef6>
  415130:	mov    r15d,eax
  415133:	cmp    ebp,0xffffffff
  415136:	je     416787 <__ctype_b_loc@plt+0x144b7>
  41513c:	mov    edx,ebp
  41513e:	mov    rax,QWORD PTR [r12]
  415142:	mov    r13,QWORD PTR [rax+0x18]
  415146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415150:	mov    ecx,edx
  415152:	movsxd rbx,edx
  415155:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  41515a:	mov    edx,eax
  41515c:	shr    edx,0xe
  41515f:	lea    esi,[rdx-0x1ffff]
  415165:	cmp    esi,0xffffffff
  415168:	lea    edx,[rbx+rdx*1-0x1fffe]
  41516f:	cmove  edx,esi
  415172:	cmp    edx,0xffffffff
  415175:	jne    415150 <__ctype_b_loc@plt+0x12e80>
  415177:	not    ecx
  415179:	add    r15d,ecx
  41517c:	mov    ecx,r15d
  41517f:	neg    ecx
  415181:	cmovl  ecx,r15d
  415185:	cmp    ecx,0x20000
  41518b:	jl     4151aa <__ctype_b_loc@plt+0x12eda>
  41518d:	mov    rax,QWORD PTR [rsp+0x8]
  415192:	mov    rdi,QWORD PTR [rax+0x18]
  415196:	mov    edx,DWORD PTR [rdi+0x10]
  415199:	lea    rsi,[rip+0x1514b]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4151a0:	call   413660 <__ctype_b_loc@plt+0x11390>
  4151a5:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  4151aa:	and    eax,0x3fff
  4151af:	shl    r15d,0xe
  4151b3:	lea    eax,[r15+rax*1]
  4151b7:	add    eax,0x7fffc000
  4151bc:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  4151c1:	mov    r12,QWORD PTR [rsp+0x8]
  4151c6:	mov    r15d,ebp
  4151c9:	jmp    416787 <__ctype_b_loc@plt+0x144b7>
  4151ce:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  4151d4:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4151db:	mov    DWORD PTR [r12+0x20],0x11f
  4151e4:	mov    rdi,r12
  4151e7:	call   4170e0 <__ctype_b_loc@plt+0x14e10>
  4151ec:	mov    rdi,r15
  4151ef:	call   417600 <__ctype_b_loc@plt+0x15330>
  4151f4:	mov    rdi,r15
  4151f7:	mov    esi,eax
  4151f9:	mov    edx,r14d
  4151fc:	call   41c380 <__ctype_b_loc@plt+0x1a0b0>
  415201:	mov    eax,DWORD PTR [r12+0x4]
  415206:	cmp    DWORD PTR [r12+0x10],0x106
  41520f:	jne    4154de <__ctype_b_loc@plt+0x1320e>
  415215:	mov    DWORD PTR [r12+0x8],eax
  41521a:	cmp    DWORD PTR [r12+0x20],0x11f
  415223:	jne    4157bb <__ctype_b_loc@plt+0x134eb>
  415229:	lea    rsi,[r12+0x18]
  41522e:	mov    rdi,r12
  415231:	call   411660 <__ctype_b_loc@plt+0xf390>
  415236:	mov    DWORD PTR [r12+0x10],eax
  41523b:	jmp    415879 <__ctype_b_loc@plt+0x135a9>
  415240:	mov    QWORD PTR [rsp+0x50],r15
  415245:	mov    rax,QWORD PTR [r12+0x30]
  41524a:	mov    QWORD PTR [rsp+0x48],rax
  41524f:	mov    eax,DWORD PTR [rax+0x3c]
  415252:	mov    DWORD PTR [rsp+0x84],eax
  415259:	lea    rsi,[rip+0x1527b]        # 42a4db <__ctype_b_loc@plt+0x2820b>
  415260:	mov    edx,0xf
  415265:	mov    rdi,r12
  415268:	call   414230 <__ctype_b_loc@plt+0x11f60>
  41526d:	mov    rdi,r12
  415270:	mov    rsi,rax
  415273:	xor    edx,edx
  415275:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  41527a:	lea    rsi,[rip+0x1526a]        # 42a4eb <__ctype_b_loc@plt+0x2821b>
  415281:	mov    edx,0xb
  415286:	mov    rdi,r12
  415289:	call   414230 <__ctype_b_loc@plt+0x11f60>
  41528e:	mov    r15d,0x1
  415294:	mov    rdi,r12
  415297:	mov    rsi,rax
  41529a:	mov    edx,0x1
  41529f:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  4152a4:	lea    rsi,[rip+0x1524c]        # 42a4f7 <__ctype_b_loc@plt+0x28227>
  4152ab:	mov    edx,0xd
  4152b0:	mov    rdi,r12
  4152b3:	call   414230 <__ctype_b_loc@plt+0x11f60>
  4152b8:	mov    rdi,r12
  4152bb:	mov    rsi,rax
  4152be:	mov    edx,0x2
  4152c3:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  4152c8:	mov    rdi,r12
  4152cb:	mov    rsi,rbx
  4152ce:	mov    edx,0x3
  4152d3:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  4152d8:	mov    eax,DWORD PTR [r12+0x10]
  4152dd:	cmp    eax,0x2c
  4152e0:	mov    DWORD PTR [rsp+0x44],r14d
  4152e5:	jne    4157df <__ctype_b_loc@plt+0x1350f>
  4152eb:	lea    rbx,[r12+0x10]
  4152f0:	mov    r14d,0x4
  4152f6:	jmp    415333 <__ctype_b_loc@plt+0x13063>
  4152f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415300:	mov    rdi,r12
  415303:	mov    rsi,r13
  415306:	call   411660 <__ctype_b_loc@plt+0xf390>
  41530b:	mov    DWORD PTR [r12+0x10],eax
  415310:	lea    r15d,[r14+0x1]
  415314:	mov    rdi,r12
  415317:	mov    rsi,rbp
  41531a:	mov    edx,r14d
  41531d:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  415322:	mov    eax,DWORD PTR [r12+0x10]
  415327:	mov    r14d,r15d
  41532a:	cmp    eax,0x2c
  41532d:	jne    4157d6 <__ctype_b_loc@plt+0x13506>
  415333:	mov    eax,DWORD PTR [r12+0x4]
  415338:	mov    ecx,DWORD PTR [r12+0x20]
  41533d:	mov    DWORD PTR [r12+0x8],eax
  415342:	cmp    ecx,0x11f
  415348:	jne    415370 <__ctype_b_loc@plt+0x130a0>
  41534a:	mov    rdi,r12
  41534d:	mov    rsi,r13
  415350:	call   411660 <__ctype_b_loc@plt+0xf390>
  415355:	mov    DWORD PTR [r12+0x10],eax
  41535a:	cmp    eax,0x11d
  41535f:	jne    415392 <__ctype_b_loc@plt+0x130c2>
  415361:	jmp    4153bc <__ctype_b_loc@plt+0x130ec>
  415363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41536d:	nop    DWORD PTR [rax]
  415370:	mov    rax,QWORD PTR [rsp+0x8]
  415375:	vmovups xmm0,XMMWORD PTR [rax]
  415379:	vmovups XMMWORD PTR [rbx],xmm0
  41537d:	mov    DWORD PTR [r12+0x20],0x11f
  415386:	mov    eax,DWORD PTR [r12+0x10]
  41538b:	cmp    eax,0x11d
  415390:	je     4153bc <__ctype_b_loc@plt+0x130ec>
  415392:	mov    rdi,QWORD PTR [r12+0x38]
  415397:	lea    rsi,[rip+0x150f7]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41539e:	lea    rdx,[rip+0x14caf]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  4153a5:	xor    eax,eax
  4153a7:	call   404800 <__ctype_b_loc@plt+0x2530>
  4153ac:	mov    edx,DWORD PTR [r12+0x10]
  4153b1:	mov    rdi,r12
  4153b4:	mov    rsi,rax
  4153b7:	call   413660 <__ctype_b_loc@plt+0x11390>
  4153bc:	mov    rbp,QWORD PTR [r12+0x18]
  4153c1:	mov    eax,DWORD PTR [r12+0x4]
  4153c6:	mov    DWORD PTR [r12+0x8],eax
  4153cb:	cmp    DWORD PTR [r12+0x20],0x11f
  4153d4:	je     415300 <__ctype_b_loc@plt+0x13030>
  4153da:	mov    rax,QWORD PTR [rsp+0x8]
  4153df:	vmovups xmm0,XMMWORD PTR [rax]
  4153e3:	vmovups XMMWORD PTR [rbx],xmm0
  4153e7:	mov    DWORD PTR [rax],0x11f
  4153ed:	jmp    415310 <__ctype_b_loc@plt+0x13040>
  4153f2:	xor    edx,edx
  4153f4:	lea    rbx,[rsp+0x68]
  4153f9:	mov    rdi,r12
  4153fc:	mov    rsi,rbx
  4153ff:	mov    ecx,r14d
  415402:	call   41a1c0 <__ctype_b_loc@plt+0x17ef0>
  415407:	mov    rdi,QWORD PTR [r12+0x30]
  41540c:	lea    rsi,[rsp+0x20]
  415411:	mov    rdx,rbx
  415414:	call   41cdb0 <__ctype_b_loc@plt+0x1aae0>
  415419:	mov    rax,QWORD PTR [r12+0x30]
  41541e:	mov    rcx,QWORD PTR [rax]
  415421:	mov    rcx,QWORD PTR [rcx+0x28]
  415425:	movsxd rax,DWORD PTR [rax+0x30]
  415429:	mov    DWORD PTR [rcx+rax*4-0x4],r14d
  41542e:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  415433:	cmp    r14d,0xffffffff
  415437:	je     41689b <__ctype_b_loc@plt+0x145cb>
  41543d:	cmp    r15d,0xffffffff
  415441:	je     416840 <__ctype_b_loc@plt+0x14570>
  415447:	mov    rdi,r14
  41544a:	mov    r14,rbp
  41544d:	mov    rax,QWORD PTR [r12]
  415451:	mov    edx,r15d
  415454:	mov    r15,QWORD PTR [rax+0x18]
  415458:	mov    ebp,edx
  41545a:	nop    WORD PTR [rax+rax*1+0x0]
  415460:	mov    ecx,edx
  415462:	movsxd rbx,edx
  415465:	mov    eax,DWORD PTR [r15+rbx*4]
  415469:	mov    edx,eax
  41546b:	shr    edx,0xe
  41546e:	lea    esi,[rdx-0x1ffff]
  415474:	cmp    esi,0xffffffff
  415477:	lea    edx,[rbx+rdx*1-0x1fffe]
  41547e:	cmove  edx,esi
  415481:	cmp    edx,0xffffffff
  415484:	jne    415460 <__ctype_b_loc@plt+0x13190>
  415486:	not    ecx
  415488:	add    edi,ecx
  41548a:	mov    ecx,edi
  41548c:	neg    ecx
  41548e:	mov    r13,rdi
  415491:	cmovl  ecx,edi
  415494:	cmp    ecx,0x20000
  41549a:	jl     4154b8 <__ctype_b_loc@plt+0x131e8>
  41549c:	mov    rax,QWORD PTR [rsp+0x8]
  4154a1:	mov    rdi,QWORD PTR [rax+0x18]
  4154a5:	mov    edx,DWORD PTR [rdi+0x10]
  4154a8:	lea    rsi,[rip+0x14e3c]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4154af:	call   413660 <__ctype_b_loc@plt+0x11390>
  4154b4:	mov    eax,DWORD PTR [r15+rbx*4]
  4154b8:	and    eax,0x3fff
  4154bd:	shl    r13d,0xe
  4154c1:	lea    eax,[rax+r13*1]
  4154c5:	add    eax,0x7fffc000
  4154ca:	mov    DWORD PTR [r15+rbx*4],eax
  4154ce:	mov    r12,QWORD PTR [rsp+0x8]
  4154d3:	mov    r15d,ebp
  4154d6:	mov    rbp,r14
  4154d9:	jmp    41689b <__ctype_b_loc@plt+0x145cb>
  4154de:	mov    rdi,QWORD PTR [r12+0x38]
  4154e3:	mov    r8d,DWORD PTR [rsp+0x44]
  4154e8:	cmp    eax,r8d
  4154eb:	jne    41584d <__ctype_b_loc@plt+0x1357d>
  4154f1:	lea    rsi,[rip+0x14f9d]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  4154f8:	lea    rdx,[rip+0x14b08]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  4154ff:	xor    eax,eax
  415501:	call   404800 <__ctype_b_loc@plt+0x2530>
  415506:	jmp    415869 <__ctype_b_loc@plt+0x13599>
  41550b:	mov    eax,DWORD PTR [r12+0x10]
  415510:	mov    rdi,QWORD PTR [r12+0x38]
  415515:	dec    WORD PTR [rdi+0x60]
  415519:	mov    ecx,DWORD PTR [r12+0x4]
  41551e:	cmp    eax,0x114
  415523:	mov    r13,QWORD PTR [rsp+0x8]
  415528:	jne    415553 <__ctype_b_loc@plt+0x13283>
  41552a:	mov    DWORD PTR [r12+0x8],ecx
  41552f:	cmp    DWORD PTR [r12+0x20],0x11f
  415538:	jne    415a22 <__ctype_b_loc@plt+0x13752>
  41553e:	mov    rdi,r12
  415541:	mov    rsi,r15
  415544:	call   411660 <__ctype_b_loc@plt+0xf390>
  415549:	mov    DWORD PTR [r12+0x10],eax
  41554e:	jmp    415a61 <__ctype_b_loc@plt+0x13791>
  415553:	mov    r8d,DWORD PTR [rsp+0x44]
  415558:	cmp    ecx,r8d
  41555b:	jne    415a35 <__ctype_b_loc@plt+0x13765>
  415561:	lea    rsi,[rip+0x14f2d]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  415568:	lea    rdx,[rip+0x14ac4]        # 42a033 <__ctype_b_loc@plt+0x27d63>
  41556f:	xor    eax,eax
  415571:	call   404800 <__ctype_b_loc@plt+0x2530>
  415576:	jmp    415a51 <__ctype_b_loc@plt+0x13781>
  41557b:	mov    ebp,0x0
  415580:	cmp    eax,0x3b
  415583:	je     414b05 <__ctype_b_loc@plt+0x12835>
  415589:	mov    QWORD PTR [rsp+0x18],rbx
  41558e:	lea    rsi,[rsp+0x20]
  415593:	mov    rdi,r12
  415596:	xor    edx,edx
  415598:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41559d:	mov    ebp,0x1
  4155a2:	cmp    DWORD PTR [r12+0x10],0x2c
  4155a8:	jne    416206 <__ctype_b_loc@plt+0x13f36>
  4155ae:	lea    rax,[r12+0x10]
  4155b3:	mov    QWORD PTR [rsp+0x8],rax
  4155b8:	lea    rax,[r12+0x18]
  4155bd:	mov    QWORD PTR [rsp+0x10],rax
  4155c2:	mov    ebp,0x1
  4155c7:	lea    rbx,[rsp+0x20]
  4155cc:	jmp    415605 <__ctype_b_loc@plt+0x13335>
  4155ce:	mov    BYTE PTR [rax+0x73],r14b
  4155d2:	mov    r14d,ecx
  4155d5:	mov    DWORD PTR [r13+0x3c],r14d
  4155d9:	dec    r14d
  4155dc:	mov    rdi,r13
  4155df:	mov    rsi,rbx
  4155e2:	mov    edx,r14d
  4155e5:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  4155ea:	mov    rdi,r12
  4155ed:	mov    rsi,rbx
  4155f0:	xor    edx,edx
  4155f2:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  4155f7:	inc    ebp
  4155f9:	cmp    DWORD PTR [r12+0x10],0x2c
  4155ff:	jne    416206 <__ctype_b_loc@plt+0x13f36>
  415605:	mov    eax,DWORD PTR [r12+0x4]
  41560a:	mov    ecx,DWORD PTR [r12+0x20]
  41560f:	mov    DWORD PTR [r12+0x8],eax
  415614:	cmp    ecx,0x11f
  41561a:	jne    415630 <__ctype_b_loc@plt+0x13360>
  41561c:	mov    rdi,r12
  41561f:	mov    rsi,QWORD PTR [rsp+0x10]
  415624:	call   411660 <__ctype_b_loc@plt+0xf390>
  415629:	mov    DWORD PTR [r12+0x10],eax
  41562e:	jmp    415645 <__ctype_b_loc@plt+0x13375>
  415630:	vmovups xmm0,XMMWORD PTR [r15]
  415635:	mov    rax,QWORD PTR [rsp+0x8]
  41563a:	vmovups XMMWORD PTR [rax],xmm0
  41563e:	mov    DWORD PTR [r15],0x11f
  415645:	mov    r13,QWORD PTR [r12+0x30]
  41564a:	mov    rdi,r13
  41564d:	mov    rsi,rbx
  415650:	call   418a00 <__ctype_b_loc@plt+0x16730>
  415655:	cmp    DWORD PTR [rsp+0x20],0xc
  41565a:	jne    415680 <__ctype_b_loc@plt+0x133b0>
  41565c:	mov    eax,DWORD PTR [rsp+0x28]
  415660:	test   eax,0x100
  415665:	jne    415680 <__ctype_b_loc@plt+0x133b0>
  415667:	movzx  ecx,BYTE PTR [r13+0x4a]
  41566c:	cmp    eax,ecx
  41566e:	jl     415680 <__ctype_b_loc@plt+0x133b0>
  415670:	dec    DWORD PTR [r13+0x3c]
  415674:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41567e:	xchg   ax,ax
  415680:	mov    edx,DWORD PTR [r13+0x3c]
  415684:	lea    r14d,[rdx+0x1]
  415688:	mov    rax,QWORD PTR [r13+0x0]
  41568c:	movzx  ecx,BYTE PTR [rax+0x73]
  415690:	cmp    edx,ecx
  415692:	jl     4155d5 <__ctype_b_loc@plt+0x13305>
  415698:	mov    ecx,r14d
  41569b:	cmp    edx,0xf9
  4156a1:	jl     4155ce <__ctype_b_loc@plt+0x132fe>
  4156a7:	mov    rdi,QWORD PTR [r13+0x18]
  4156ab:	mov    edx,DWORD PTR [rdi+0x10]
  4156ae:	lea    rsi,[rip+0x14c69]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  4156b5:	call   413660 <__ctype_b_loc@plt+0x11390>
  4156ba:	mov    rax,QWORD PTR [r13+0x0]
  4156be:	mov    ecx,DWORD PTR [r13+0x3c]
  4156c2:	inc    ecx
  4156c4:	jmp    4155ce <__ctype_b_loc@plt+0x132fe>
  4156c9:	vmovups xmm0,XMMWORD PTR [rbx]
  4156cd:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4156d4:	mov    DWORD PTR [r12+0x20],0x11f
  4156dd:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  4156e2:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  4156e7:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4156ee:	mov    DWORD PTR [r12+0x20],0x11f
  4156f7:	mov    eax,DWORD PTR [r12+0x10]
  4156fc:	mov    rbx,QWORD PTR [r12+0x30]
  415701:	cmp    eax,0x11d
  415706:	je     415732 <__ctype_b_loc@plt+0x13462>
  415708:	mov    rdi,QWORD PTR [r12+0x38]
  41570d:	lea    rsi,[rip+0x14d81]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  415714:	lea    rdx,[rip+0x14939]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  41571b:	xor    eax,eax
  41571d:	call   404800 <__ctype_b_loc@plt+0x2530>
  415722:	mov    edx,DWORD PTR [r12+0x10]
  415727:	mov    rdi,r12
  41572a:	mov    rsi,rax
  41572d:	call   413660 <__ctype_b_loc@plt+0x11390>
  415732:	mov    r15,QWORD PTR [r12+0x18]
  415737:	mov    eax,DWORD PTR [r12+0x4]
  41573c:	mov    DWORD PTR [r12+0x8],eax
  415741:	cmp    DWORD PTR [r12+0x20],0x11f
  41574a:	jne    415cee <__ctype_b_loc@plt+0x13a1e>
  415750:	lea    rsi,[r12+0x18]
  415755:	mov    rdi,r12
  415758:	call   411660 <__ctype_b_loc@plt+0xf390>
  41575d:	mov    DWORD PTR [r12+0x10],eax
  415762:	jmp    415d03 <__ctype_b_loc@plt+0x13a33>
  415767:	mov    DWORD PTR [rsp+0x20],0x0
  41576f:	xor    r14d,r14d
  415772:	jmp    4163a7 <__ctype_b_loc@plt+0x140d7>
  415777:	lea    rsi,[rip+0x14cee]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  41577e:	lea    rdx,[rip+0x14882]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  415785:	lea    rcx,[rip+0x1486c]        # 429ff8 <__ctype_b_loc@plt+0x27d28>
  41578c:	xor    ebp,ebp
  41578e:	mov    r8d,r14d
  415791:	xor    eax,eax
  415793:	call   404800 <__ctype_b_loc@plt+0x2530>
  415798:	mov    edx,DWORD PTR [r12+0x10]
  41579d:	mov    rdi,r12
  4157a0:	jmp    4169dd <__ctype_b_loc@plt+0x1470d>
  4157a5:	lea    rsi,[rip+0x14cf7]        # 42a4a3 <__ctype_b_loc@plt+0x281d3>
  4157ac:	mov    rdi,r12
  4157af:	mov    edx,eax
  4157b1:	call   413660 <__ctype_b_loc@plt+0x11390>
  4157b6:	jmp    416d32 <__ctype_b_loc@plt+0x14a62>
  4157bb:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  4157c1:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4157c8:	mov    DWORD PTR [r12+0x20],0x11f
  4157d1:	jmp    415879 <__ctype_b_loc@plt+0x135a9>
  4157d6:	add    r15d,0xfffffffd
  4157da:	mov    rbp,QWORD PTR [rsp+0x8]
  4157df:	cmp    eax,0x10b
  4157e4:	je     415810 <__ctype_b_loc@plt+0x13540>
  4157e6:	mov    rdi,QWORD PTR [r12+0x38]
  4157eb:	lea    rsi,[rip+0x14ca3]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  4157f2:	lea    rdx,[rip+0x149b7]        # 42a1b0 <__ctype_b_loc@plt+0x27ee0>
  4157f9:	xor    eax,eax
  4157fb:	call   404800 <__ctype_b_loc@plt+0x2530>
  415800:	mov    edx,DWORD PTR [r12+0x10]
  415805:	mov    rdi,r12
  415808:	mov    rsi,rax
  41580b:	call   413660 <__ctype_b_loc@plt+0x11390>
  415810:	mov    ecx,DWORD PTR [r12+0x4]
  415815:	mov    eax,DWORD PTR [r12+0x20]
  41581a:	mov    DWORD PTR [r12+0x8],ecx
  41581f:	cmp    eax,0x11f
  415824:	mov    QWORD PTR [rsp+0x10],r13
  415829:	jne    415dde <__ctype_b_loc@plt+0x13b0e>
  41582f:	mov    rdi,r12
  415832:	mov    rsi,r13
  415835:	call   411660 <__ctype_b_loc@plt+0xf390>
  41583a:	mov    DWORD PTR [r12+0x10],eax
  41583f:	mov    eax,DWORD PTR [r12+0x4]
  415844:	mov    DWORD PTR [rsp+0x64],eax
  415848:	jmp    415df7 <__ctype_b_loc@plt+0x13b27>
  41584d:	lea    rsi,[rip+0x14c18]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  415854:	lea    rdx,[rip+0x147ac]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  41585b:	lea    rcx,[rip+0x147d7]        # 42a039 <__ctype_b_loc@plt+0x27d69>
  415862:	xor    eax,eax
  415864:	call   404800 <__ctype_b_loc@plt+0x2530>
  415869:	mov    edx,DWORD PTR [r12+0x10]
  41586e:	mov    rdi,r12
  415871:	mov    rsi,rax
  415874:	call   413660 <__ctype_b_loc@plt+0x11390>
  415879:	mov    r12,rbp
  41587c:	mov    r8,QWORD PTR [r15+0x18]
  415880:	mov    r14,QWORD PTR [r15+0x28]
  415884:	mov    rax,QWORD PTR [r14]
  415887:	mov    QWORD PTR [r15+0x28],rax
  41588b:	mov    cl,BYTE PTR [r14+0xc]
  41588f:	mov    rdx,QWORD PTR [r8+0x30]
  415893:	movzx  esi,BYTE PTR [rdx+0x4a]
  415897:	cmp    sil,cl
  41589a:	jbe    415961 <__ctype_b_loc@plt+0x13691>
  4158a0:	mov    edi,DWORD PTR [rdx+0x30]
  4158a3:	mov    rax,QWORD PTR [rdx]
  4158a6:	mov    rax,QWORD PTR [rax+0x30]
  4158aa:	mov    ebx,esi
  4158ac:	sub    bl,cl
  4158ae:	mov    r9d,ecx
  4158b1:	not    r9b
  4158b4:	add    r9b,sil
  4158b7:	and    bl,0x3
  4158ba:	je     4158de <__ctype_b_loc@plt+0x1360e>
  4158bc:	nop    DWORD PTR [rax+0x0]
  4158c0:	lea    ebp,[rsi-0x1]
  4158c3:	movzx  ebp,bpl
  4158c7:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  4158cf:	shl    rbp,0x4
  4158d3:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  4158d7:	dec    rsi
  4158da:	dec    bl
  4158dc:	jne    4158c0 <__ctype_b_loc@plt+0x135f0>
  4158de:	cmp    r9b,0x3
  4158e2:	jb     41595e <__ctype_b_loc@plt+0x1368e>
  4158e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4158ee:	xchg   ax,ax
  4158f0:	lea    ebp,[rsi-0x1]
  4158f3:	movzx  ebp,bpl
  4158f7:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  4158ff:	shl    rbp,0x4
  415903:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  415907:	lea    ebp,[rsi+0xfe]
  41590d:	movzx  ebp,bpl
  415911:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  415919:	shl    rbp,0x4
  41591d:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  415921:	lea    ebp,[rsi+0xfd]
  415927:	movzx  ebp,bpl
  41592b:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  415933:	shl    rbp,0x4
  415937:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41593b:	lea    ebp,[rsi+0xfc]
  415941:	movzx  ebp,bpl
  415945:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41594d:	shl    rbp,0x4
  415951:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  415955:	add    rsi,0xfffffffffffffffc
  415959:	cmp    sil,cl
  41595c:	ja     4158f0 <__ctype_b_loc@plt+0x13620>
  41595e:	mov    BYTE PTR [rdx+0x4a],cl
  415961:	cmp    BYTE PTR [r14+0xd],0x0
  415966:	je     41597d <__ctype_b_loc@plt+0x136ad>
  415968:	movzx  esi,cl
  41596b:	shl    esi,0x6
  41596e:	or     esi,0x23
  415971:	mov    edx,DWORD PTR [r8+0x8]
  415975:	mov    rdi,r15
  415978:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41597d:	movzx  eax,BYTE PTR [r15+0x4a]
  415982:	mov    DWORD PTR [r15+0x3c],eax
  415986:	mov    r14d,DWORD PTR [r14+0x8]
  41598a:	mov    eax,DWORD PTR [r15+0x30]
  41598e:	mov    DWORD PTR [r15+0x34],eax
  415992:	cmp    r14d,0xffffffff
  415996:	je     415fb2 <__ctype_b_loc@plt+0x13ce2>
  41599c:	mov    edx,DWORD PTR [r15+0x38]
  4159a0:	cmp    edx,0xffffffff
  4159a3:	je     415fae <__ctype_b_loc@plt+0x13cde>
  4159a9:	mov    rax,QWORD PTR [r15]
  4159ac:	mov    rbp,QWORD PTR [rax+0x18]
  4159b0:	mov    ecx,edx
  4159b2:	movsxd rbx,edx
  4159b5:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4159b9:	mov    edx,eax
  4159bb:	shr    edx,0xe
  4159be:	lea    esi,[rdx-0x1ffff]
  4159c4:	cmp    esi,0xffffffff
  4159c7:	lea    edx,[rbx+rdx*1-0x1fffe]
  4159ce:	cmove  edx,esi
  4159d1:	cmp    edx,0xffffffff
  4159d4:	jne    4159b0 <__ctype_b_loc@plt+0x136e0>
  4159d6:	not    ecx
  4159d8:	add    r14d,ecx
  4159db:	mov    ecx,r14d
  4159de:	neg    ecx
  4159e0:	cmovl  ecx,r14d
  4159e4:	cmp    ecx,0x20000
  4159ea:	jl     415a03 <__ctype_b_loc@plt+0x13733>
  4159ec:	mov    rdi,QWORD PTR [r15+0x18]
  4159f0:	mov    edx,DWORD PTR [rdi+0x10]
  4159f3:	lea    rsi,[rip+0x148f1]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4159fa:	call   413660 <__ctype_b_loc@plt+0x11390>
  4159ff:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  415a03:	and    eax,0x3fff
  415a08:	shl    r14d,0xe
  415a0c:	lea    eax,[r14+rax*1]
  415a10:	add    eax,0x7fffc000
  415a15:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  415a19:	mov    eax,DWORD PTR [r15+0x30]
  415a1d:	jmp    415fb2 <__ctype_b_loc@plt+0x13ce2>
  415a22:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415a27:	vmovups XMMWORD PTR [r14],xmm0
  415a2c:	mov    DWORD PTR [rbp+0x0],0x11f
  415a33:	jmp    415a61 <__ctype_b_loc@plt+0x13791>
  415a35:	lea    rsi,[rip+0x14a30]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  415a3c:	lea    rdx,[rip+0x145f0]        # 42a033 <__ctype_b_loc@plt+0x27d63>
  415a43:	lea    rcx,[rip+0x145d1]        # 42a01b <__ctype_b_loc@plt+0x27d4b>
  415a4a:	xor    eax,eax
  415a4c:	call   404800 <__ctype_b_loc@plt+0x2530>
  415a51:	mov    edx,DWORD PTR [r12+0x10]
  415a56:	mov    rdi,r12
  415a59:	mov    rsi,rax
  415a5c:	call   413660 <__ctype_b_loc@plt+0x11390>
  415a61:	lea    rsi,[rsp+0x20]
  415a66:	mov    rdi,r12
  415a69:	xor    edx,edx
  415a6b:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  415a70:	cmp    DWORD PTR [rsp+0x20],0x1
  415a75:	jne    415a7f <__ctype_b_loc@plt+0x137af>
  415a77:	mov    DWORD PTR [rsp+0x20],0x3
  415a7f:	mov    rdi,QWORD PTR [r12+0x30]
  415a84:	lea    rsi,[rsp+0x20]
  415a89:	call   4176d0 <__ctype_b_loc@plt+0x15400>
  415a8e:	mov    r15d,DWORD PTR [rsp+0x34]
  415a93:	cmp    BYTE PTR [rsp+0x95],0x0
  415a9b:	je     415b4c <__ctype_b_loc@plt+0x1387c>
  415aa1:	mov    rdi,r12
  415aa4:	call   4174f0 <__ctype_b_loc@plt+0x15220>
  415aa9:	mov    rax,QWORD PTR [r12+0x30]
  415aae:	mov    ecx,DWORD PTR [rax+0x30]
  415ab1:	mov    DWORD PTR [rax+0x34],ecx
  415ab4:	cmp    r15d,0xffffffff
  415ab8:	je     416048 <__ctype_b_loc@plt+0x13d78>
  415abe:	mov    esi,DWORD PTR [rax+0x38]
  415ac1:	cmp    esi,0xffffffff
  415ac4:	je     416044 <__ctype_b_loc@plt+0x13d74>
  415aca:	mov    rcx,QWORD PTR [rax]
  415acd:	mov    rbx,QWORD PTR [rcx+0x18]
  415ad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415adb:	nop    DWORD PTR [rax+rax*1+0x0]
  415ae0:	mov    edx,esi
  415ae2:	movsxd rbp,esi
  415ae5:	mov    ecx,DWORD PTR [rbx+rbp*4]
  415ae8:	mov    esi,ecx
  415aea:	shr    esi,0xe
  415aed:	lea    edi,[rsi-0x1ffff]
  415af3:	cmp    edi,0xffffffff
  415af6:	lea    esi,[rbp+rsi*1-0x1fffe]
  415afd:	cmove  esi,edi
  415b00:	cmp    esi,0xffffffff
  415b03:	jne    415ae0 <__ctype_b_loc@plt+0x13810>
  415b05:	not    edx
  415b07:	add    r15d,edx
  415b0a:	mov    edx,r15d
  415b0d:	neg    edx
  415b0f:	cmovl  edx,r15d
  415b13:	cmp    edx,0x20000
  415b19:	jl     415b31 <__ctype_b_loc@plt+0x13861>
  415b1b:	mov    rdi,QWORD PTR [rax+0x18]
  415b1f:	mov    edx,DWORD PTR [rdi+0x10]
  415b22:	lea    rsi,[rip+0x147c2]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  415b29:	call   413660 <__ctype_b_loc@plt+0x11390>
  415b2e:	mov    ecx,DWORD PTR [rbx+rbp*4]
  415b31:	and    ecx,0x3fff
  415b37:	shl    r15d,0xe
  415b3b:	lea    eax,[r15+rcx*1]
  415b3f:	add    eax,0x7fffc000
  415b44:	mov    DWORD PTR [rbx+rbp*4],eax
  415b47:	jmp    416048 <__ctype_b_loc@plt+0x13d78>
  415b4c:	mov    r8,QWORD PTR [r13+0x18]
  415b50:	mov    r14,QWORD PTR [r13+0x28]
  415b54:	mov    rax,QWORD PTR [r14]
  415b57:	mov    QWORD PTR [r13+0x28],rax
  415b5b:	mov    cl,BYTE PTR [r14+0xc]
  415b5f:	mov    rdx,QWORD PTR [r8+0x30]
  415b63:	movzx  esi,BYTE PTR [rdx+0x4a]
  415b67:	cmp    sil,cl
  415b6a:	jbe    415c2d <__ctype_b_loc@plt+0x1395d>
  415b70:	mov    edi,DWORD PTR [rdx+0x30]
  415b73:	mov    rax,QWORD PTR [rdx]
  415b76:	mov    rbp,QWORD PTR [rax+0x30]
  415b7a:	mov    ebx,esi
  415b7c:	sub    bl,cl
  415b7e:	mov    r9d,ecx
  415b81:	not    r9b
  415b84:	add    r9b,sil
  415b87:	and    bl,0x3
  415b8a:	je     415bad <__ctype_b_loc@plt+0x138dd>
  415b8c:	nop    DWORD PTR [rax+0x0]
  415b90:	lea    eax,[rsi-0x1]
  415b93:	movzx  eax,al
  415b96:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415b9e:	shl    rax,0x4
  415ba2:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415ba6:	dec    rsi
  415ba9:	dec    bl
  415bab:	jne    415b90 <__ctype_b_loc@plt+0x138c0>
  415bad:	cmp    r9b,0x3
  415bb1:	jb     415c2a <__ctype_b_loc@plt+0x1395a>
  415bb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bbd:	nop    DWORD PTR [rax]
  415bc0:	lea    eax,[rsi-0x1]
  415bc3:	movzx  eax,al
  415bc6:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415bce:	shl    rax,0x4
  415bd2:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415bd6:	lea    eax,[rsi+0xfe]
  415bdc:	movzx  eax,al
  415bdf:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415be7:	shl    rax,0x4
  415beb:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415bef:	lea    eax,[rsi+0xfd]
  415bf5:	movzx  eax,al
  415bf8:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415c00:	shl    rax,0x4
  415c04:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415c08:	lea    eax,[rsi+0xfc]
  415c0e:	movzx  eax,al
  415c11:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415c19:	shl    rax,0x4
  415c1d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415c21:	add    rsi,0xfffffffffffffffc
  415c25:	cmp    sil,cl
  415c28:	ja     415bc0 <__ctype_b_loc@plt+0x138f0>
  415c2a:	mov    BYTE PTR [rdx+0x4a],cl
  415c2d:	cmp    BYTE PTR [r14+0xd],0x0
  415c32:	je     415c49 <__ctype_b_loc@plt+0x13979>
  415c34:	movzx  esi,cl
  415c37:	shl    esi,0x6
  415c3a:	or     esi,0x23
  415c3d:	mov    edx,DWORD PTR [r8+0x8]
  415c41:	mov    rdi,r13
  415c44:	call   419020 <__ctype_b_loc@plt+0x16d50>
  415c49:	movzx  eax,BYTE PTR [r13+0x4a]
  415c4e:	mov    DWORD PTR [r13+0x3c],eax
  415c52:	mov    r14d,DWORD PTR [r14+0x8]
  415c56:	mov    eax,DWORD PTR [r13+0x30]
  415c5a:	mov    DWORD PTR [r13+0x34],eax
  415c5e:	cmp    r14d,0xffffffff
  415c62:	je     4169ee <__ctype_b_loc@plt+0x1471e>
  415c68:	mov    edx,DWORD PTR [r13+0x38]
  415c6c:	cmp    edx,0xffffffff
  415c6f:	je     4169ea <__ctype_b_loc@plt+0x1471a>
  415c75:	mov    rax,QWORD PTR [r13+0x0]
  415c79:	mov    rbp,QWORD PTR [rax+0x18]
  415c7d:	nop    DWORD PTR [rax]
  415c80:	mov    ecx,edx
  415c82:	movsxd rbx,edx
  415c85:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  415c89:	mov    edx,eax
  415c8b:	shr    edx,0xe
  415c8e:	lea    esi,[rdx-0x1ffff]
  415c94:	cmp    esi,0xffffffff
  415c97:	lea    edx,[rbx+rdx*1-0x1fffe]
  415c9e:	cmove  edx,esi
  415ca1:	cmp    edx,0xffffffff
  415ca4:	jne    415c80 <__ctype_b_loc@plt+0x139b0>
  415ca6:	not    ecx
  415ca8:	add    r14d,ecx
  415cab:	mov    ecx,r14d
  415cae:	neg    ecx
  415cb0:	cmovl  ecx,r14d
  415cb4:	cmp    ecx,0x20000
  415cba:	jl     415cd3 <__ctype_b_loc@plt+0x13a03>
  415cbc:	mov    rdi,QWORD PTR [r13+0x18]
  415cc0:	mov    edx,DWORD PTR [rdi+0x10]
  415cc3:	lea    rsi,[rip+0x14621]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  415cca:	call   413660 <__ctype_b_loc@plt+0x11390>
  415ccf:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  415cd3:	and    eax,0x3fff
  415cd8:	shl    r14d,0xe
  415cdc:	lea    eax,[r14+rax*1]
  415ce0:	add    eax,0x7fffc000
  415ce5:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  415ce9:	jmp    4169ee <__ctype_b_loc@plt+0x1471e>
  415cee:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415cf3:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415cfa:	mov    DWORD PTR [r12+0x20],0x11f
  415d03:	xor    ebp,ebp
  415d05:	mov    rdi,r12
  415d08:	mov    rsi,r15
  415d0b:	xor    edx,edx
  415d0d:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  415d12:	mov    edx,DWORD PTR [rbx+0x3c]
  415d15:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
  415d1e:	mov    DWORD PTR [rsp+0x20],0x6
  415d26:	mov    DWORD PTR [rsp+0x28],edx
  415d2a:	lea    r14d,[rdx+0x1]
  415d2e:	mov    rax,QWORD PTR [rbx]
  415d31:	movzx  ecx,BYTE PTR [rax+0x73]
  415d35:	cmp    edx,ecx
  415d37:	jl     415d66 <__ctype_b_loc@plt+0x13a96>
  415d39:	mov    ecx,r14d
  415d3c:	cmp    edx,0xf9
  415d42:	jl     415d5f <__ctype_b_loc@plt+0x13a8f>
  415d44:	mov    rdi,QWORD PTR [rbx+0x18]
  415d48:	mov    edx,DWORD PTR [rdi+0x10]
  415d4b:	lea    rsi,[rip+0x145cc]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  415d52:	call   413660 <__ctype_b_loc@plt+0x11390>
  415d57:	mov    rax,QWORD PTR [rbx]
  415d5a:	mov    ecx,DWORD PTR [rbx+0x3c]
  415d5d:	inc    ecx
  415d5f:	mov    BYTE PTR [rax+0x73],r14b
  415d63:	mov    r14d,ecx
  415d66:	mov    DWORD PTR [rbx+0x3c],r14d
  415d6a:	mov    rax,QWORD PTR [r12+0x30]
  415d6f:	mov    cl,BYTE PTR [rax+0x4a]
  415d72:	inc    cl
  415d74:	mov    BYTE PTR [rax+0x4a],cl
  415d77:	mov    edx,DWORD PTR [rax+0x30]
  415d7a:	mov    rsi,QWORD PTR [rax]
  415d7d:	mov    rsi,QWORD PTR [rsi+0x30]
  415d81:	movzx  ecx,cl
  415d84:	movzx  eax,WORD PTR [rax+rcx*2+0xc2]
  415d8c:	shl    rax,0x4
  415d90:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  415d94:	mov    ecx,DWORD PTR [r12+0x4]
  415d99:	lea    r14,[rsp+0x68]
  415d9e:	mov    rdi,r12
  415da1:	mov    rsi,r14
  415da4:	xor    edx,edx
  415da6:	call   41a1c0 <__ctype_b_loc@plt+0x17ef0>
  415dab:	lea    rsi,[rsp+0x20]
  415db0:	mov    rdi,rbx
  415db3:	mov    rdx,r14
  415db6:	call   41cdb0 <__ctype_b_loc@plt+0x1aae0>
  415dbb:	mov    eax,DWORD PTR [rbx+0x30]
  415dbe:	mov    rcx,QWORD PTR [rbx]
  415dc1:	mov    rcx,QWORD PTR [rcx+0x30]
  415dc5:	movzx  edx,BYTE PTR [rbx+0x4a]
  415dc9:	movzx  edx,WORD PTR [rbx+rdx*2+0xc2]
  415dd1:	shl    rdx,0x4
  415dd5:	mov    DWORD PTR [rcx+rdx*1+0x8],eax
  415dd9:	jmp    416f71 <__ctype_b_loc@plt+0x14ca1>
  415dde:	mov    DWORD PTR [rsp+0x64],ecx
  415de2:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415de7:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415dee:	mov    DWORD PTR [r12+0x20],0x11f
  415df7:	lea    rsi,[rsp+0x20]
  415dfc:	mov    rdi,r12
  415dff:	xor    edx,edx
  415e01:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  415e06:	mov    r13d,0x1
  415e0c:	cmp    DWORD PTR [r12+0x10],0x2c
  415e12:	jne    415f25 <__ctype_b_loc@plt+0x13c55>
  415e18:	lea    rax,[r12+0x10]
  415e1d:	mov    QWORD PTR [rsp+0x18],rax
  415e22:	mov    r13d,0x1
  415e28:	lea    r14,[rsp+0x20]
  415e2d:	jmp    415e63 <__ctype_b_loc@plt+0x13b93>
  415e2f:	nop
  415e30:	mov    BYTE PTR [rax+0x73],bl
  415e33:	mov    ebx,ecx
  415e35:	mov    DWORD PTR [rbp+0x3c],ebx
  415e38:	dec    ebx
  415e3a:	mov    rdi,rbp
  415e3d:	mov    rsi,r14
  415e40:	mov    edx,ebx
  415e42:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  415e47:	mov    rdi,r12
  415e4a:	mov    rsi,r14
  415e4d:	xor    edx,edx
  415e4f:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  415e54:	inc    r13d
  415e57:	cmp    DWORD PTR [r12+0x10],0x2c
  415e5d:	jne    415f25 <__ctype_b_loc@plt+0x13c55>
  415e63:	mov    eax,DWORD PTR [r12+0x4]
  415e68:	mov    ecx,DWORD PTR [r12+0x20]
  415e6d:	mov    DWORD PTR [r12+0x8],eax
  415e72:	cmp    ecx,0x11f
  415e78:	jne    415e90 <__ctype_b_loc@plt+0x13bc0>
  415e7a:	mov    rdi,r12
  415e7d:	mov    rsi,QWORD PTR [rsp+0x10]
  415e82:	call   411660 <__ctype_b_loc@plt+0xf390>
  415e87:	mov    DWORD PTR [r12+0x10],eax
  415e8c:	jmp    415ea8 <__ctype_b_loc@plt+0x13bd8>
  415e8e:	xchg   ax,ax
  415e90:	mov    rax,QWORD PTR [rsp+0x8]
  415e95:	vmovups xmm0,XMMWORD PTR [rax]
  415e99:	mov    rcx,QWORD PTR [rsp+0x18]
  415e9e:	vmovups XMMWORD PTR [rcx],xmm0
  415ea2:	mov    DWORD PTR [rax],0x11f
  415ea8:	mov    rbp,QWORD PTR [r12+0x30]
  415ead:	mov    rdi,rbp
  415eb0:	mov    rsi,r14
  415eb3:	call   418a00 <__ctype_b_loc@plt+0x16730>
  415eb8:	cmp    DWORD PTR [rsp+0x20],0xc
  415ebd:	jne    415ee0 <__ctype_b_loc@plt+0x13c10>
  415ebf:	mov    eax,DWORD PTR [rsp+0x28]
  415ec3:	test   eax,0x100
  415ec8:	jne    415ee0 <__ctype_b_loc@plt+0x13c10>
  415eca:	movzx  ecx,BYTE PTR [rbp+0x4a]
  415ece:	cmp    eax,ecx
  415ed0:	jl     415ee0 <__ctype_b_loc@plt+0x13c10>
  415ed2:	dec    DWORD PTR [rbp+0x3c]
  415ed5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415edf:	nop
  415ee0:	mov    edx,DWORD PTR [rbp+0x3c]
  415ee3:	lea    ebx,[rdx+0x1]
  415ee6:	mov    rax,QWORD PTR [rbp+0x0]
  415eea:	movzx  ecx,BYTE PTR [rax+0x73]
  415eee:	cmp    edx,ecx
  415ef0:	jl     415e35 <__ctype_b_loc@plt+0x13b65>
  415ef6:	mov    ecx,ebx
  415ef8:	cmp    edx,0xf9
  415efe:	jl     415e30 <__ctype_b_loc@plt+0x13b60>
  415f04:	mov    rdi,QWORD PTR [rbp+0x18]
  415f08:	mov    edx,DWORD PTR [rdi+0x10]
  415f0b:	lea    rsi,[rip+0x1440c]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  415f12:	call   413660 <__ctype_b_loc@plt+0x11390>
  415f17:	mov    rax,QWORD PTR [rbp+0x0]
  415f1b:	mov    ecx,DWORD PTR [rbp+0x3c]
  415f1e:	inc    ecx
  415f20:	jmp    415e30 <__ctype_b_loc@plt+0x13b60>
  415f25:	lea    rcx,[rsp+0x20]
  415f2a:	mov    rdi,r12
  415f2d:	mov    esi,0x3
  415f32:	mov    edx,r13d
  415f35:	call   41cb10 <__ctype_b_loc@plt+0x1a840>
  415f3a:	mov    rax,QWORD PTR [rsp+0x48]
  415f3f:	mov    ebx,DWORD PTR [rax+0x3c]
  415f42:	add    ebx,0x3
  415f45:	mov    rax,QWORD PTR [rax]
  415f48:	movzx  ecx,BYTE PTR [rax+0x73]
  415f4c:	cmp    ebx,ecx
  415f4e:	mov    r14d,DWORD PTR [rsp+0x44]
  415f53:	mov    rbp,QWORD PTR [rsp+0x8]
  415f58:	mov    r13,QWORD PTR [rsp+0x10]
  415f5d:	jle    415f8b <__ctype_b_loc@plt+0x13cbb>
  415f5f:	cmp    ebx,0xfa
  415f65:	jl     415f88 <__ctype_b_loc@plt+0x13cb8>
  415f67:	mov    rbp,QWORD PTR [rsp+0x48]
  415f6c:	mov    rdi,QWORD PTR [rbp+0x18]
  415f70:	mov    edx,DWORD PTR [rdi+0x10]
  415f73:	lea    rsi,[rip+0x143a4]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  415f7a:	call   413660 <__ctype_b_loc@plt+0x11390>
  415f7f:	mov    rax,QWORD PTR [rbp+0x0]
  415f83:	mov    rbp,QWORD PTR [rsp+0x8]
  415f88:	mov    BYTE PTR [rax+0x73],bl
  415f8b:	mov    rdi,r12
  415f8e:	mov    esi,DWORD PTR [rsp+0x84]
  415f95:	mov    edx,DWORD PTR [rsp+0x64]
  415f99:	mov    ecx,r15d
  415f9c:	xor    r8d,r8d
  415f9f:	call   41c5c0 <__ctype_b_loc@plt+0x1a2f0>
  415fa4:	mov    r15,QWORD PTR [rsp+0x50]
  415fa9:	jmp    416d32 <__ctype_b_loc@plt+0x14a62>
  415fae:	mov    DWORD PTR [r15+0x38],r14d
  415fb2:	mov    DWORD PTR [r15+0x34],eax
  415fb6:	cmp    r12d,0xffffffff
  415fba:	je     416f6f <__ctype_b_loc@plt+0x14c9f>
  415fc0:	mov    edx,DWORD PTR [r15+0x38]
  415fc4:	cmp    edx,0xffffffff
  415fc7:	je     41603b <__ctype_b_loc@plt+0x13d6b>
  415fc9:	mov    rax,QWORD PTR [r15]
  415fcc:	mov    rbx,QWORD PTR [rax+0x18]
  415fd0:	mov    ecx,edx
  415fd2:	movsxd rbp,edx
  415fd5:	mov    eax,DWORD PTR [rbx+rbp*4]
  415fd8:	mov    edx,eax
  415fda:	shr    edx,0xe
  415fdd:	lea    esi,[rdx-0x1ffff]
  415fe3:	cmp    esi,0xffffffff
  415fe6:	lea    edx,[rbp+rdx*1-0x1fffe]
  415fed:	cmove  edx,esi
  415ff0:	cmp    edx,0xffffffff
  415ff3:	jne    415fd0 <__ctype_b_loc@plt+0x13d00>
  415ff5:	not    ecx
  415ff7:	add    r12d,ecx
  415ffa:	mov    ecx,r12d
  415ffd:	neg    ecx
  415fff:	cmovl  ecx,r12d
  416003:	cmp    ecx,0x20000
  416009:	jl     416021 <__ctype_b_loc@plt+0x13d51>
  41600b:	mov    rdi,QWORD PTR [r15+0x18]
  41600f:	mov    edx,DWORD PTR [rdi+0x10]
  416012:	lea    rsi,[rip+0x142d2]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  416019:	call   413660 <__ctype_b_loc@plt+0x11390>
  41601e:	mov    eax,DWORD PTR [rbx+rbp*4]
  416021:	and    eax,0x3fff
  416026:	shl    r12d,0xe
  41602a:	lea    eax,[r12+rax*1]
  41602e:	add    eax,0x7fffc000
  416033:	mov    DWORD PTR [rbx+rbp*4],eax
  416036:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  41603b:	mov    DWORD PTR [r15+0x38],r12d
  41603f:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  416044:	mov    DWORD PTR [rax+0x38],r15d
  416048:	mov    r8,QWORD PTR [r13+0x18]
  41604c:	mov    r14,QWORD PTR [r13+0x28]
  416050:	mov    rax,QWORD PTR [r14]
  416053:	mov    QWORD PTR [r13+0x28],rax
  416057:	mov    cl,BYTE PTR [r14+0xc]
  41605b:	mov    rdx,QWORD PTR [r8+0x30]
  41605f:	movzx  esi,BYTE PTR [rdx+0x4a]
  416063:	cmp    sil,cl
  416066:	jbe    41612d <__ctype_b_loc@plt+0x13e5d>
  41606c:	mov    edi,DWORD PTR [rdx+0x30]
  41606f:	mov    rax,QWORD PTR [rdx]
  416072:	mov    rbp,QWORD PTR [rax+0x30]
  416076:	mov    ebx,esi
  416078:	sub    bl,cl
  41607a:	mov    r9d,ecx
  41607d:	not    r9b
  416080:	add    r9b,sil
  416083:	and    bl,0x3
  416086:	je     4160ad <__ctype_b_loc@plt+0x13ddd>
  416088:	nop    DWORD PTR [rax+rax*1+0x0]
  416090:	lea    eax,[rsi-0x1]
  416093:	movzx  eax,al
  416096:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41609e:	shl    rax,0x4
  4160a2:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4160a6:	dec    rsi
  4160a9:	dec    bl
  4160ab:	jne    416090 <__ctype_b_loc@plt+0x13dc0>
  4160ad:	cmp    r9b,0x3
  4160b1:	jb     41612a <__ctype_b_loc@plt+0x13e5a>
  4160b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160bd:	nop    DWORD PTR [rax]
  4160c0:	lea    eax,[rsi-0x1]
  4160c3:	movzx  eax,al
  4160c6:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  4160ce:	shl    rax,0x4
  4160d2:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4160d6:	lea    eax,[rsi+0xfe]
  4160dc:	movzx  eax,al
  4160df:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  4160e7:	shl    rax,0x4
  4160eb:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4160ef:	lea    eax,[rsi+0xfd]
  4160f5:	movzx  eax,al
  4160f8:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416100:	shl    rax,0x4
  416104:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416108:	lea    eax,[rsi+0xfc]
  41610e:	movzx  eax,al
  416111:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416119:	shl    rax,0x4
  41611d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416121:	add    rsi,0xfffffffffffffffc
  416125:	cmp    sil,cl
  416128:	ja     4160c0 <__ctype_b_loc@plt+0x13df0>
  41612a:	mov    BYTE PTR [rdx+0x4a],cl
  41612d:	cmp    BYTE PTR [r14+0xd],0x0
  416132:	je     416149 <__ctype_b_loc@plt+0x13e79>
  416134:	movzx  esi,cl
  416137:	shl    esi,0x6
  41613a:	or     esi,0x23
  41613d:	mov    edx,DWORD PTR [r8+0x8]
  416141:	mov    rdi,r13
  416144:	call   419020 <__ctype_b_loc@plt+0x16d50>
  416149:	movzx  eax,BYTE PTR [r13+0x4a]
  41614e:	mov    DWORD PTR [r13+0x3c],eax
  416152:	mov    r14d,DWORD PTR [r14+0x8]
  416156:	mov    eax,DWORD PTR [r13+0x30]
  41615a:	mov    DWORD PTR [r13+0x34],eax
  41615e:	cmp    r14d,0xffffffff
  416162:	je     4161ef <__ctype_b_loc@plt+0x13f1f>
  416168:	mov    edx,DWORD PTR [r13+0x38]
  41616c:	cmp    edx,0xffffffff
  41616f:	je     4161eb <__ctype_b_loc@plt+0x13f1b>
  416171:	mov    rax,QWORD PTR [r13+0x0]
  416175:	mov    rbp,QWORD PTR [rax+0x18]
  416179:	nop    DWORD PTR [rax+0x0]
  416180:	mov    ecx,edx
  416182:	movsxd rbx,edx
  416185:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416189:	mov    edx,eax
  41618b:	shr    edx,0xe
  41618e:	lea    esi,[rdx-0x1ffff]
  416194:	cmp    esi,0xffffffff
  416197:	lea    edx,[rbx+rdx*1-0x1fffe]
  41619e:	cmove  edx,esi
  4161a1:	cmp    edx,0xffffffff
  4161a4:	jne    416180 <__ctype_b_loc@plt+0x13eb0>
  4161a6:	not    ecx
  4161a8:	add    r14d,ecx
  4161ab:	mov    ecx,r14d
  4161ae:	neg    ecx
  4161b0:	cmovl  ecx,r14d
  4161b4:	cmp    ecx,0x20000
  4161ba:	jl     4161d3 <__ctype_b_loc@plt+0x13f03>
  4161bc:	mov    rdi,QWORD PTR [r13+0x18]
  4161c0:	mov    edx,DWORD PTR [rdi+0x10]
  4161c3:	lea    rsi,[rip+0x14121]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4161ca:	call   413660 <__ctype_b_loc@plt+0x11390>
  4161cf:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4161d3:	and    eax,0x3fff
  4161d8:	shl    r14d,0xe
  4161dc:	lea    eax,[r14+rax*1]
  4161e0:	add    eax,0x7fffc000
  4161e5:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  4161e9:	jmp    4161ef <__ctype_b_loc@plt+0x13f1f>
  4161eb:	mov    DWORD PTR [r13+0x38],r14d
  4161ef:	mov    rbx,QWORD PTR [r12+0x30]
  4161f4:	mov    rdi,r13
  4161f7:	call   417600 <__ctype_b_loc@plt+0x15330>
  4161fc:	mov    rdi,rbx
  4161ff:	mov    esi,eax
  416201:	jmp    4169f6 <__ctype_b_loc@plt+0x14726>
  416206:	mov    eax,DWORD PTR [rsp+0x20]
  41620a:	lea    ecx,[rax-0xd]
  41620d:	cmp    ecx,0x1
  416210:	ja     416b82 <__ctype_b_loc@plt+0x148b2>
  416216:	cmp    eax,0xe
  416219:	mov    rbx,QWORD PTR [rsp+0x18]
  41621e:	je     417006 <__ctype_b_loc@plt+0x14d36>
  416224:	cmp    eax,0xd
  416227:	jne    41708c <__ctype_b_loc@plt+0x14dbc>
  41622d:	mov    rax,QWORD PTR [rbx]
  416230:	mov    rax,QWORD PTR [rax+0x18]
  416234:	movsxd rcx,DWORD PTR [rsp+0x28]
  416239:	and    DWORD PTR [rax+rcx*4],0xff803fff
  416240:	mov    eax,0xd
  416245:	cmp    ebp,0x1
  416248:	je     417091 <__ctype_b_loc@plt+0x14dc1>
  41624e:	jmp    4170ae <__ctype_b_loc@plt+0x14dde>
  416253:	mov    rax,QWORD PTR [rsp+0x8]
  416258:	vmovups xmm0,XMMWORD PTR [rax]
  41625c:	mov    rcx,QWORD PTR [rsp+0x18]
  416261:	vmovups XMMWORD PTR [rcx],xmm0
  416265:	mov    DWORD PTR [rax],0x11f
  41626b:	lea    rsi,[rsp+0x20]
  416270:	mov    rdi,r12
  416273:	xor    edx,edx
  416275:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41627a:	mov    r14d,0x1
  416280:	cmp    DWORD PTR [r12+0x10],0x2c
  416286:	jne    4163a7 <__ctype_b_loc@plt+0x140d7>
  41628c:	mov    r14d,0x1
  416292:	jmp    4162da <__ctype_b_loc@plt+0x1400a>
  416294:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41629e:	xchg   ax,ax
  4162a0:	mov    BYTE PTR [rax+0x73],bpl
  4162a4:	mov    ebp,ecx
  4162a6:	mov    DWORD PTR [r13+0x3c],ebp
  4162aa:	dec    ebp
  4162ac:	mov    rdi,r13
  4162af:	lea    rbx,[rsp+0x20]
  4162b4:	mov    rsi,rbx
  4162b7:	mov    edx,ebp
  4162b9:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  4162be:	mov    rdi,r12
  4162c1:	mov    rsi,rbx
  4162c4:	xor    edx,edx
  4162c6:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  4162cb:	inc    r14d
  4162ce:	cmp    DWORD PTR [r12+0x10],0x2c
  4162d4:	jne    4163a7 <__ctype_b_loc@plt+0x140d7>
  4162da:	mov    eax,DWORD PTR [r12+0x4]
  4162df:	mov    ecx,DWORD PTR [r12+0x20]
  4162e4:	mov    DWORD PTR [r12+0x8],eax
  4162e9:	cmp    ecx,0x11f
  4162ef:	jne    416310 <__ctype_b_loc@plt+0x14040>
  4162f1:	mov    rdi,r12
  4162f4:	mov    rsi,QWORD PTR [rsp+0x10]
  4162f9:	call   411660 <__ctype_b_loc@plt+0xf390>
  4162fe:	mov    DWORD PTR [r12+0x10],eax
  416303:	jmp    416328 <__ctype_b_loc@plt+0x14058>
  416305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41630f:	nop
  416310:	mov    rax,QWORD PTR [rsp+0x8]
  416315:	vmovups xmm0,XMMWORD PTR [rax]
  416319:	mov    rcx,QWORD PTR [rsp+0x18]
  41631e:	vmovups XMMWORD PTR [rcx],xmm0
  416322:	mov    DWORD PTR [rax],0x11f
  416328:	mov    r13,QWORD PTR [r12+0x30]
  41632d:	mov    rdi,r13
  416330:	lea    rsi,[rsp+0x20]
  416335:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41633a:	cmp    DWORD PTR [rsp+0x20],0xc
  41633f:	jne    416360 <__ctype_b_loc@plt+0x14090>
  416341:	mov    eax,DWORD PTR [rsp+0x28]
  416345:	test   eax,0x100
  41634a:	jne    416360 <__ctype_b_loc@plt+0x14090>
  41634c:	movzx  ecx,BYTE PTR [r13+0x4a]
  416351:	cmp    eax,ecx
  416353:	jl     416360 <__ctype_b_loc@plt+0x14090>
  416355:	dec    DWORD PTR [r13+0x3c]
  416359:	nop    DWORD PTR [rax+0x0]
  416360:	mov    edx,DWORD PTR [r13+0x3c]
  416364:	lea    ebp,[rdx+0x1]
  416367:	mov    rax,QWORD PTR [r13+0x0]
  41636b:	movzx  ecx,BYTE PTR [rax+0x73]
  41636f:	cmp    edx,ecx
  416371:	jl     4162a6 <__ctype_b_loc@plt+0x13fd6>
  416377:	mov    ecx,ebp
  416379:	cmp    edx,0xf9
  41637f:	jl     4162a0 <__ctype_b_loc@plt+0x13fd0>
  416385:	mov    rdi,QWORD PTR [r13+0x18]
  416389:	mov    edx,DWORD PTR [rdi+0x10]
  41638c:	lea    rsi,[rip+0x13f8b]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416393:	call   413660 <__ctype_b_loc@plt+0x11390>
  416398:	mov    rax,QWORD PTR [r13+0x0]
  41639c:	mov    ecx,DWORD PTR [r13+0x3c]
  4163a0:	inc    ecx
  4163a2:	jmp    4162a0 <__ctype_b_loc@plt+0x13fd0>
  4163a7:	mov    rax,QWORD PTR [rsp+0x48]
  4163ac:	mov    rbp,rax
  4163af:	neg    rbp
  4163b2:	lea    rcx,[rsp+0x20]
  4163b7:	mov    rdi,r12
  4163ba:	mov    esi,ebp
  4163bc:	mov    edx,r14d
  4163bf:	mov    r14,rax
  4163c2:	call   41cb10 <__ctype_b_loc@plt+0x1a840>
  4163c7:	mov    rsi,QWORD PTR [r12+0x30]
  4163cc:	movzx  r8d,BYTE PTR [rsi+0x4a]
  4163d1:	mov    eax,r8d
  4163d4:	sub    eax,r14d
  4163d7:	mov    BYTE PTR [rsi+0x4a],al
  4163da:	mov    eax,DWORD PTR [rsi+0x30]
  4163dd:	mov    rcx,QWORD PTR [rsi]
  4163e0:	mov    rcx,QWORD PTR [rcx+0x30]
  4163e4:	mov    edi,ebp
  4163e6:	and    edi,0x7
  4163e9:	je     416426 <__ctype_b_loc@plt+0x14156>
  4163eb:	mov    edx,r8d
  4163ee:	sub    edx,r14d
  4163f1:	movzx  edx,dl
  4163f4:	lea    rbx,[rsi+rdx*2]
  4163f8:	add    rbx,0xc4
  4163ff:	mov    rbp,r14
  416402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41640c:	nop    DWORD PTR [rax+0x0]
  416410:	movzx  edx,WORD PTR [rbx+rbp*2]
  416414:	shl    rdx,0x4
  416418:	mov    DWORD PTR [rcx+rdx*1+0x8],eax
  41641c:	inc    rbp
  41641f:	dec    edi
  416421:	jne    416410 <__ctype_b_loc@plt+0x14140>
  416423:	neg    rbp
  416426:	cmp    r15d,0x7
  41642a:	jb     416f6f <__ctype_b_loc@plt+0x14c9f>
  416430:	mov    edx,0x7
  416435:	sub    rdx,rbp
  416438:	lea    rdx,[rsi+rdx*2]
  41643c:	sub    r8d,r14d
  41643f:	movzx  esi,r8b
  416443:	lea    rdx,[rdx+rsi*2]
  416447:	add    rdx,0xc4
  41644e:	xor    esi,esi
  416450:	movzx  edi,WORD PTR [rdx+rsi*2-0xe]
  416455:	shl    rdi,0x4
  416459:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  41645d:	movzx  edi,WORD PTR [rdx+rsi*2-0xc]
  416462:	shl    rdi,0x4
  416466:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  41646a:	movzx  edi,WORD PTR [rdx+rsi*2-0xa]
  41646f:	shl    rdi,0x4
  416473:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  416477:	movzx  edi,WORD PTR [rdx+rsi*2-0x8]
  41647c:	shl    rdi,0x4
  416480:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  416484:	movzx  edi,WORD PTR [rdx+rsi*2-0x6]
  416489:	shl    rdi,0x4
  41648d:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  416491:	movzx  edi,WORD PTR [rdx+rsi*2-0x4]
  416496:	shl    rdi,0x4
  41649a:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  41649e:	movzx  edi,WORD PTR [rdx+rsi*2-0x2]
  4164a3:	shl    rdi,0x4
  4164a7:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4164ab:	movzx  edi,WORD PTR [rdx+rsi*2]
  4164af:	shl    rdi,0x4
  4164b3:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4164b7:	add    rsi,0x8
  4164bb:	cmp    ebp,esi
  4164bd:	jne    416450 <__ctype_b_loc@plt+0x14180>
  4164bf:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  4164c4:	mov    rax,QWORD PTR [rsp+0x8]
  4164c9:	vmovups xmm0,XMMWORD PTR [rax]
  4164cd:	vmovups XMMWORD PTR [r12+0x10],xmm0
  4164d4:	mov    DWORD PTR [r12+0x20],0x11f
  4164dd:	lea    rbx,[rsp+0x20]
  4164e2:	mov    rdi,r12
  4164e5:	mov    rsi,rbx
  4164e8:	xor    edx,edx
  4164ea:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  4164ef:	mov    r15,QWORD PTR [r12+0x30]
  4164f4:	mov    rdi,r15
  4164f7:	mov    rsi,rbx
  4164fa:	call   418a00 <__ctype_b_loc@plt+0x16730>
  4164ff:	cmp    DWORD PTR [rsp+0x20],0xc
  416504:	jne    41651e <__ctype_b_loc@plt+0x1424e>
  416506:	mov    eax,DWORD PTR [rsp+0x28]
  41650a:	test   eax,0x100
  41650f:	jne    41651e <__ctype_b_loc@plt+0x1424e>
  416511:	movzx  ecx,BYTE PTR [r15+0x4a]
  416516:	cmp    eax,ecx
  416518:	jl     41651e <__ctype_b_loc@plt+0x1424e>
  41651a:	dec    DWORD PTR [r15+0x3c]
  41651e:	mov    edx,DWORD PTR [r15+0x3c]
  416522:	lea    ebp,[rdx+0x1]
  416525:	mov    rax,QWORD PTR [r15]
  416528:	movzx  ecx,BYTE PTR [rax+0x73]
  41652c:	cmp    edx,ecx
  41652e:	jl     41655c <__ctype_b_loc@plt+0x1428c>
  416530:	mov    ecx,ebp
  416532:	cmp    edx,0xf9
  416538:	jl     416556 <__ctype_b_loc@plt+0x14286>
  41653a:	mov    rdi,QWORD PTR [r15+0x18]
  41653e:	mov    edx,DWORD PTR [rdi+0x10]
  416541:	lea    rsi,[rip+0x13dd6]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416548:	call   413660 <__ctype_b_loc@plt+0x11390>
  41654d:	mov    rax,QWORD PTR [r15]
  416550:	mov    ecx,DWORD PTR [r15+0x3c]
  416554:	inc    ecx
  416556:	mov    BYTE PTR [rax+0x73],bpl
  41655a:	mov    ebp,ecx
  41655c:	mov    DWORD PTR [r15+0x3c],ebp
  416560:	dec    ebp
  416562:	lea    rsi,[rsp+0x20]
  416567:	mov    rdi,r15
  41656a:	mov    edx,ebp
  41656c:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  416571:	cmp    DWORD PTR [r12+0x10],0x2c
  416577:	je     4165d1 <__ctype_b_loc@plt+0x14301>
  416579:	mov    rbx,QWORD PTR [r12+0x38]
  41657e:	call   4022d0 <__ctype_b_loc@plt>
  416583:	mov    rax,QWORD PTR [rax]
  416586:	movzx  eax,WORD PTR [rax+0x58]
  41658a:	test   al,0x2
  41658c:	lea    rax,[rip+0x13cc8]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  416593:	lea    rsi,[rip+0x13cb8]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41659a:	cmove  rsi,rax
  41659e:	mov    rdi,rbx
  4165a1:	mov    edx,0x2c
  4165a6:	xor    eax,eax
  4165a8:	call   404800 <__ctype_b_loc@plt+0x2530>
  4165ad:	lea    rsi,[rip+0x13ee1]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  4165b4:	mov    rdi,rbx
  4165b7:	mov    rdx,rax
  4165ba:	xor    eax,eax
  4165bc:	call   404800 <__ctype_b_loc@plt+0x2530>
  4165c1:	mov    edx,DWORD PTR [r12+0x10]
  4165c6:	mov    rdi,r12
  4165c9:	mov    rsi,rax
  4165cc:	call   413660 <__ctype_b_loc@plt+0x11390>
  4165d1:	mov    eax,DWORD PTR [r12+0x4]
  4165d6:	mov    ecx,DWORD PTR [r12+0x20]
  4165db:	mov    DWORD PTR [r12+0x8],eax
  4165e0:	cmp    ecx,0x11f
  4165e6:	jne    4165fc <__ctype_b_loc@plt+0x1432c>
  4165e8:	mov    rdi,r12
  4165eb:	mov    rsi,QWORD PTR [rsp+0x10]
  4165f0:	call   411660 <__ctype_b_loc@plt+0xf390>
  4165f5:	mov    DWORD PTR [r12+0x10],eax
  4165fa:	jmp    416615 <__ctype_b_loc@plt+0x14345>
  4165fc:	mov    rax,QWORD PTR [rsp+0x8]
  416601:	vmovups xmm0,XMMWORD PTR [rax]
  416605:	vmovups XMMWORD PTR [r12+0x10],xmm0
  41660c:	mov    DWORD PTR [r12+0x20],0x11f
  416615:	lea    rbx,[rsp+0x20]
  41661a:	mov    rdi,r12
  41661d:	mov    rsi,rbx
  416620:	xor    edx,edx
  416622:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  416627:	mov    r15,QWORD PTR [r12+0x30]
  41662c:	mov    rdi,r15
  41662f:	mov    rsi,rbx
  416632:	call   418a00 <__ctype_b_loc@plt+0x16730>
  416637:	cmp    DWORD PTR [rsp+0x20],0xc
  41663c:	jne    416656 <__ctype_b_loc@plt+0x14386>
  41663e:	mov    eax,DWORD PTR [rsp+0x28]
  416642:	test   eax,0x100
  416647:	jne    416656 <__ctype_b_loc@plt+0x14386>
  416649:	movzx  ecx,BYTE PTR [r15+0x4a]
  41664e:	cmp    eax,ecx
  416650:	jl     416656 <__ctype_b_loc@plt+0x14386>
  416652:	dec    DWORD PTR [r15+0x3c]
  416656:	mov    edx,DWORD PTR [r15+0x3c]
  41665a:	lea    ebp,[rdx+0x1]
  41665d:	mov    rax,QWORD PTR [r15]
  416660:	movzx  ecx,BYTE PTR [rax+0x73]
  416664:	cmp    edx,ecx
  416666:	jl     416694 <__ctype_b_loc@plt+0x143c4>
  416668:	mov    ecx,ebp
  41666a:	cmp    edx,0xf9
  416670:	jl     41668e <__ctype_b_loc@plt+0x143be>
  416672:	mov    rdi,QWORD PTR [r15+0x18]
  416676:	mov    edx,DWORD PTR [rdi+0x10]
  416679:	lea    rsi,[rip+0x13c9e]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416680:	call   413660 <__ctype_b_loc@plt+0x11390>
  416685:	mov    rax,QWORD PTR [r15]
  416688:	mov    ecx,DWORD PTR [r15+0x3c]
  41668c:	inc    ecx
  41668e:	mov    BYTE PTR [rax+0x73],bpl
  416692:	mov    ebp,ecx
  416694:	mov    DWORD PTR [r15+0x3c],ebp
  416698:	dec    ebp
  41669a:	lea    rsi,[rsp+0x20]
  41669f:	mov    rdi,r15
  4166a2:	mov    edx,ebp
  4166a4:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  4166a9:	cmp    DWORD PTR [r12+0x10],0x2c
  4166af:	jne    4166eb <__ctype_b_loc@plt+0x1441b>
  4166b1:	mov    eax,DWORD PTR [r12+0x4]
  4166b6:	mov    ecx,DWORD PTR [r12+0x20]
  4166bb:	mov    DWORD PTR [r12+0x8],eax
  4166c0:	cmp    ecx,0x11f
  4166c6:	jne    416c5e <__ctype_b_loc@plt+0x1498e>
  4166cc:	mov    rdi,r12
  4166cf:	mov    r13,QWORD PTR [rsp+0x10]
  4166d4:	mov    rsi,r13
  4166d7:	call   411660 <__ctype_b_loc@plt+0xf390>
  4166dc:	mov    DWORD PTR [r12+0x10],eax
  4166e1:	mov    rbp,QWORD PTR [rsp+0x8]
  4166e6:	jmp    416c7d <__ctype_b_loc@plt+0x149ad>
  4166eb:	mov    ebx,DWORD PTR [r13+0x3c]
  4166ef:	movabs rax,0x3ff0000000000000
  4166f9:	mov    QWORD PTR [rsp+0x20],rax
  4166fe:	mov    DWORD PTR [rsp+0x28],0x3
  416706:	lea    rdx,[rsp+0x20]
  41670b:	mov    rdi,r13
  41670e:	mov    rsi,rdx
  416711:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  416716:	shl    ebx,0x6
  416719:	shl    eax,0xe
  41671c:	or     ebx,eax
  41671e:	or     ebx,0x1
  416721:	mov    rax,QWORD PTR [r13+0x18]
  416725:	mov    edx,DWORD PTR [rax+0x8]
  416728:	mov    rdi,r13
  41672b:	mov    esi,ebx
  41672d:	call   419020 <__ctype_b_loc@plt+0x16d50>
  416732:	mov    edx,DWORD PTR [r13+0x3c]
  416736:	lea    ebx,[rdx+0x1]
  416739:	mov    rax,QWORD PTR [r13+0x0]
  41673d:	movzx  ecx,BYTE PTR [rax+0x73]
  416741:	cmp    edx,ecx
  416743:	mov    r15,r14
  416746:	jl     416774 <__ctype_b_loc@plt+0x144a4>
  416748:	mov    ecx,ebx
  41674a:	cmp    edx,0xf9
  416750:	jl     41676f <__ctype_b_loc@plt+0x1449f>
  416752:	mov    rdi,QWORD PTR [r13+0x18]
  416756:	mov    edx,DWORD PTR [rdi+0x10]
  416759:	lea    rsi,[rip+0x13bbe]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416760:	call   413660 <__ctype_b_loc@plt+0x11390>
  416765:	mov    rax,QWORD PTR [r13+0x0]
  416769:	mov    ecx,DWORD PTR [r13+0x3c]
  41676d:	inc    ecx
  41676f:	mov    BYTE PTR [rax+0x73],bl
  416772:	mov    ebx,ecx
  416774:	mov    DWORD PTR [r13+0x3c],ebx
  416778:	mov    rbp,QWORD PTR [rsp+0x8]
  41677d:	mov    r13,QWORD PTR [rsp+0x10]
  416782:	jmp    416d13 <__ctype_b_loc@plt+0x14a43>
  416787:	mov    eax,DWORD PTR [r12+0x30]
  41678c:	mov    DWORD PTR [r12+0x34],eax
  416791:	cmp    r14d,0xffffffff
  416795:	mov    rbp,QWORD PTR [rsp+0x50]
  41679a:	je     416856 <__ctype_b_loc@plt+0x14586>
  4167a0:	mov    edx,DWORD PTR [r12+0x38]
  4167a5:	cmp    edx,0xffffffff
  4167a8:	je     416851 <__ctype_b_loc@plt+0x14581>
  4167ae:	mov    ebp,r15d
  4167b1:	mov    rax,QWORD PTR [r12]
  4167b5:	mov    r15,QWORD PTR [rax+0x18]
  4167b9:	nop    DWORD PTR [rax+0x0]
  4167c0:	mov    ecx,edx
  4167c2:	movsxd rbx,edx
  4167c5:	mov    eax,DWORD PTR [r15+rbx*4]
  4167c9:	mov    edx,eax
  4167cb:	shr    edx,0xe
  4167ce:	lea    esi,[rdx-0x1ffff]
  4167d4:	cmp    esi,0xffffffff
  4167d7:	lea    edx,[rbx+rdx*1-0x1fffe]
  4167de:	cmove  edx,esi
  4167e1:	cmp    edx,0xffffffff
  4167e4:	jne    4167c0 <__ctype_b_loc@plt+0x144f0>
  4167e6:	not    ecx
  4167e8:	mov    rdx,r14
  4167eb:	add    edx,ecx
  4167ed:	mov    ecx,edx
  4167ef:	neg    ecx
  4167f1:	mov    r14,rdx
  4167f4:	cmovl  ecx,edx
  4167f7:	cmp    ecx,0x20000
  4167fd:	jl     41681b <__ctype_b_loc@plt+0x1454b>
  4167ff:	mov    rax,QWORD PTR [rsp+0x8]
  416804:	mov    rdi,QWORD PTR [rax+0x18]
  416808:	mov    edx,DWORD PTR [rdi+0x10]
  41680b:	lea    rsi,[rip+0x13ad9]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  416812:	call   413660 <__ctype_b_loc@plt+0x11390>
  416817:	mov    eax,DWORD PTR [r15+rbx*4]
  41681b:	and    eax,0x3fff
  416820:	shl    r14d,0xe
  416824:	lea    eax,[r14+rax*1]
  416828:	add    eax,0x7fffc000
  41682d:	mov    DWORD PTR [r15+rbx*4],eax
  416831:	mov    r12,QWORD PTR [rsp+0x8]
  416836:	mov    r15d,ebp
  416839:	mov    rbp,QWORD PTR [rsp+0x50]
  41683e:	jmp    416856 <__ctype_b_loc@plt+0x14586>
  416840:	mov    eax,DWORD PTR [r12+0x30]
  416845:	mov    DWORD PTR [r12+0x34],eax
  41684a:	mov    r13,QWORD PTR [rsp+0x58]
  41684f:	jmp    4168b7 <__ctype_b_loc@plt+0x145e7>
  416851:	mov    DWORD PTR [r12+0x38],r14d
  416856:	mov    rbx,QWORD PTR [rsp+0x58]
  41685b:	mov    eax,DWORD PTR [rbx+0x4]
  41685e:	mov    ecx,DWORD PTR [rbx+0x20]
  416861:	mov    DWORD PTR [rbx+0x8],eax
  416864:	cmp    ecx,0x11f
  41686a:	jne    41687e <__ctype_b_loc@plt+0x145ae>
  41686c:	mov    rdi,rbx
  41686f:	mov    rsi,QWORD PTR [rsp+0x18]
  416874:	call   411660 <__ctype_b_loc@plt+0xf390>
  416879:	mov    DWORD PTR [rbx+0x10],eax
  41687c:	jmp    416893 <__ctype_b_loc@plt+0x145c3>
  41687e:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  416883:	mov    rax,QWORD PTR [rsp+0x10]
  416888:	vmovups XMMWORD PTR [rax],xmm0
  41688c:	mov    DWORD PTR [rbp+0x0],0x11f
  416893:	mov    rdi,rbx
  416896:	call   4170e0 <__ctype_b_loc@plt+0x14e10>
  41689b:	mov    eax,DWORD PTR [r12+0x30]
  4168a0:	mov    DWORD PTR [r12+0x34],eax
  4168a5:	mov    r14d,r15d
  4168a8:	cmp    r15d,0xffffffff
  4168ac:	mov    r13,QWORD PTR [rsp+0x58]
  4168b1:	je     416945 <__ctype_b_loc@plt+0x14675>
  4168b7:	mov    edx,DWORD PTR [r12+0x38]
  4168bc:	cmp    edx,0xffffffff
  4168bf:	je     416940 <__ctype_b_loc@plt+0x14670>
  4168c5:	mov    rax,QWORD PTR [r12]
  4168c9:	mov    r15,QWORD PTR [rax+0x18]
  4168cd:	nop    DWORD PTR [rax]
  4168d0:	mov    ecx,edx
  4168d2:	movsxd rbx,edx
  4168d5:	mov    eax,DWORD PTR [r15+rbx*4]
  4168d9:	mov    edx,eax
  4168db:	shr    edx,0xe
  4168de:	lea    esi,[rdx-0x1ffff]
  4168e4:	cmp    esi,0xffffffff
  4168e7:	lea    edx,[rbx+rdx*1-0x1fffe]
  4168ee:	cmove  edx,esi
  4168f1:	cmp    edx,0xffffffff
  4168f4:	jne    4168d0 <__ctype_b_loc@plt+0x14600>
  4168f6:	not    ecx
  4168f8:	add    r14d,ecx
  4168fb:	mov    ecx,r14d
  4168fe:	neg    ecx
  416900:	cmovl  ecx,r14d
  416904:	cmp    ecx,0x20000
  41690a:	jl     416928 <__ctype_b_loc@plt+0x14658>
  41690c:	mov    rax,QWORD PTR [rsp+0x8]
  416911:	mov    rdi,QWORD PTR [rax+0x18]
  416915:	mov    edx,DWORD PTR [rdi+0x10]
  416918:	lea    rsi,[rip+0x139cc]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41691f:	call   413660 <__ctype_b_loc@plt+0x11390>
  416924:	mov    eax,DWORD PTR [r15+rbx*4]
  416928:	and    eax,0x3fff
  41692d:	shl    r14d,0xe
  416931:	lea    eax,[r14+rax*1]
  416935:	add    eax,0x7fffc000
  41693a:	mov    DWORD PTR [r15+rbx*4],eax
  41693e:	jmp    416945 <__ctype_b_loc@plt+0x14675>
  416940:	mov    DWORD PTR [r12+0x38],r14d
  416945:	mov    eax,DWORD PTR [r13+0x4]
  416949:	cmp    DWORD PTR [r13+0x10],0x106
  416951:	jne    416977 <__ctype_b_loc@plt+0x146a7>
  416953:	mov    DWORD PTR [r13+0x8],eax
  416957:	cmp    DWORD PTR [r13+0x20],0x11f
  41695f:	jne    41699e <__ctype_b_loc@plt+0x146ce>
  416961:	mov    rdi,r13
  416964:	mov    rsi,QWORD PTR [rsp+0x18]
  416969:	call   411660 <__ctype_b_loc@plt+0xf390>
  41696e:	mov    DWORD PTR [r13+0x10],eax
  416972:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  416977:	mov    rdi,QWORD PTR [r13+0x38]
  41697b:	mov    r8d,DWORD PTR [rsp+0x44]
  416980:	cmp    eax,r8d
  416983:	jne    4169b8 <__ctype_b_loc@plt+0x146e8>
  416985:	lea    rsi,[rip+0x13b09]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41698c:	lea    rdx,[rip+0x13674]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  416993:	xor    ebp,ebp
  416995:	xor    eax,eax
  416997:	call   404800 <__ctype_b_loc@plt+0x2530>
  41699c:	jmp    4169d6 <__ctype_b_loc@plt+0x14706>
  41699e:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  4169a3:	mov    rax,QWORD PTR [rsp+0x10]
  4169a8:	vmovups XMMWORD PTR [rax],xmm0
  4169ac:	mov    DWORD PTR [rbp+0x0],0x11f
  4169b3:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  4169b8:	lea    rsi,[rip+0x13aad]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  4169bf:	lea    rdx,[rip+0x13641]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  4169c6:	lea    rcx,[rip+0x13637]        # 42a004 <__ctype_b_loc@plt+0x27d34>
  4169cd:	xor    ebp,ebp
  4169cf:	xor    eax,eax
  4169d1:	call   404800 <__ctype_b_loc@plt+0x2530>
  4169d6:	mov    edx,DWORD PTR [r13+0x10]
  4169da:	mov    rdi,r13
  4169dd:	mov    rsi,rax
  4169e0:	call   413660 <__ctype_b_loc@plt+0x11390>
  4169e5:	jmp    416f71 <__ctype_b_loc@plt+0x14ca1>
  4169ea:	mov    DWORD PTR [r13+0x38],r14d
  4169ee:	mov    rdi,QWORD PTR [r12+0x30]
  4169f3:	mov    esi,r15d
  4169f6:	mov    edx,DWORD PTR [rsp+0x10]
  4169fa:	call   41c380 <__ctype_b_loc@plt+0x1a0b0>
  4169ff:	mov    r8,QWORD PTR [r13+0x18]
  416a03:	mov    r14,QWORD PTR [r13+0x28]
  416a07:	mov    rax,QWORD PTR [r14]
  416a0a:	mov    QWORD PTR [r13+0x28],rax
  416a0e:	mov    cl,BYTE PTR [r14+0xc]
  416a12:	mov    rdx,QWORD PTR [r8+0x30]
  416a16:	movzx  esi,BYTE PTR [rdx+0x4a]
  416a1a:	cmp    sil,cl
  416a1d:	jbe    416add <__ctype_b_loc@plt+0x1480d>
  416a23:	mov    edi,DWORD PTR [rdx+0x30]
  416a26:	mov    rax,QWORD PTR [rdx]
  416a29:	mov    rbp,QWORD PTR [rax+0x30]
  416a2d:	mov    ebx,esi
  416a2f:	sub    bl,cl
  416a31:	mov    r9d,ecx
  416a34:	not    r9b
  416a37:	add    r9b,sil
  416a3a:	and    bl,0x3
  416a3d:	je     416a5d <__ctype_b_loc@plt+0x1478d>
  416a3f:	nop
  416a40:	lea    eax,[rsi-0x1]
  416a43:	movzx  eax,al
  416a46:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416a4e:	shl    rax,0x4
  416a52:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416a56:	dec    rsi
  416a59:	dec    bl
  416a5b:	jne    416a40 <__ctype_b_loc@plt+0x14770>
  416a5d:	cmp    r9b,0x3
  416a61:	jb     416ada <__ctype_b_loc@plt+0x1480a>
  416a63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a6d:	nop    DWORD PTR [rax]
  416a70:	lea    eax,[rsi-0x1]
  416a73:	movzx  eax,al
  416a76:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416a7e:	shl    rax,0x4
  416a82:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416a86:	lea    eax,[rsi+0xfe]
  416a8c:	movzx  eax,al
  416a8f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416a97:	shl    rax,0x4
  416a9b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416a9f:	lea    eax,[rsi+0xfd]
  416aa5:	movzx  eax,al
  416aa8:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416ab0:	shl    rax,0x4
  416ab4:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416ab8:	lea    eax,[rsi+0xfc]
  416abe:	movzx  eax,al
  416ac1:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416ac9:	shl    rax,0x4
  416acd:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416ad1:	add    rsi,0xfffffffffffffffc
  416ad5:	cmp    sil,cl
  416ad8:	ja     416a70 <__ctype_b_loc@plt+0x147a0>
  416ada:	mov    BYTE PTR [rdx+0x4a],cl
  416add:	cmp    BYTE PTR [r14+0xd],0x0
  416ae2:	je     416af9 <__ctype_b_loc@plt+0x14829>
  416ae4:	movzx  esi,cl
  416ae7:	shl    esi,0x6
  416aea:	or     esi,0x23
  416aed:	mov    edx,DWORD PTR [r8+0x8]
  416af1:	mov    rdi,r13
  416af4:	call   419020 <__ctype_b_loc@plt+0x16d50>
  416af9:	movzx  eax,BYTE PTR [r13+0x4a]
  416afe:	mov    DWORD PTR [r13+0x3c],eax
  416b02:	mov    r14d,DWORD PTR [r14+0x8]
  416b06:	mov    eax,DWORD PTR [r13+0x30]
  416b0a:	mov    DWORD PTR [r13+0x34],eax
  416b0e:	cmp    r14d,0xffffffff
  416b12:	je     416f6f <__ctype_b_loc@plt+0x14c9f>
  416b18:	mov    edx,DWORD PTR [r13+0x38]
  416b1c:	cmp    edx,0xffffffff
  416b1f:	je     416b79 <__ctype_b_loc@plt+0x148a9>
  416b21:	mov    rax,QWORD PTR [r13+0x0]
  416b25:	mov    rbp,QWORD PTR [rax+0x18]
  416b29:	nop    DWORD PTR [rax+0x0]
  416b30:	mov    ecx,edx
  416b32:	movsxd rbx,edx
  416b35:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416b39:	mov    edx,eax
  416b3b:	shr    edx,0xe
  416b3e:	lea    esi,[rdx-0x1ffff]
  416b44:	cmp    esi,0xffffffff
  416b47:	lea    edx,[rbx+rdx*1-0x1fffe]
  416b4e:	cmove  edx,esi
  416b51:	cmp    edx,0xffffffff
  416b54:	jne    416b30 <__ctype_b_loc@plt+0x14860>
  416b56:	not    ecx
  416b58:	add    r14d,ecx
  416b5b:	mov    ecx,r14d
  416b5e:	neg    ecx
  416b60:	cmovl  ecx,r14d
  416b64:	cmp    ecx,0x20000
  416b6a:	jl     416f53 <__ctype_b_loc@plt+0x14c83>
  416b70:	mov    rdi,QWORD PTR [r13+0x18]
  416b74:	jmp    416f40 <__ctype_b_loc@plt+0x14c70>
  416b79:	mov    DWORD PTR [r13+0x38],r14d
  416b7d:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  416b82:	lea    rsi,[rsp+0x20]
  416b87:	mov    rbx,QWORD PTR [rsp+0x18]
  416b8c:	mov    rdi,rbx
  416b8f:	call   418a00 <__ctype_b_loc@plt+0x16730>
  416b94:	mov    eax,DWORD PTR [rsp+0x20]
  416b98:	cmp    ebp,0x1
  416b9b:	jne    416f85 <__ctype_b_loc@plt+0x14cb5>
  416ba1:	cmp    eax,0xc
  416ba4:	jne    416bc9 <__ctype_b_loc@plt+0x148f9>
  416ba6:	mov    edx,DWORD PTR [rsp+0x28]
  416baa:	mov    eax,DWORD PTR [rsp+0x30]
  416bae:	mov    ebp,0x1
  416bb3:	cmp    eax,DWORD PTR [rsp+0x34]
  416bb7:	je     414b05 <__ctype_b_loc@plt+0x12835>
  416bbd:	movzx  eax,BYTE PTR [rbx+0x4a]
  416bc1:	cmp    edx,eax
  416bc3:	jge    4170bc <__ctype_b_loc@plt+0x14dec>
  416bc9:	lea    rsi,[rsp+0x20]
  416bce:	mov    rdi,rbx
  416bd1:	call   418a00 <__ctype_b_loc@plt+0x16730>
  416bd6:	cmp    DWORD PTR [rsp+0x20],0xc
  416bdb:	jne    416bf3 <__ctype_b_loc@plt+0x14923>
  416bdd:	mov    eax,DWORD PTR [rsp+0x28]
  416be1:	test   eax,0x100
  416be6:	jne    416bf3 <__ctype_b_loc@plt+0x14923>
  416be8:	movzx  ecx,BYTE PTR [rbx+0x4a]
  416bec:	cmp    eax,ecx
  416bee:	jl     416bf3 <__ctype_b_loc@plt+0x14923>
  416bf0:	dec    DWORD PTR [rbx+0x3c]
  416bf3:	mov    edx,DWORD PTR [rbx+0x3c]
  416bf6:	mov    rax,rbx
  416bf9:	lea    ebx,[rdx+0x1]
  416bfc:	mov    rax,QWORD PTR [rax]
  416bff:	movzx  ecx,BYTE PTR [rax+0x73]
  416c03:	cmp    edx,ecx
  416c05:	jl     416c37 <__ctype_b_loc@plt+0x14967>
  416c07:	mov    ecx,ebx
  416c09:	cmp    edx,0xf9
  416c0f:	jl     416c32 <__ctype_b_loc@plt+0x14962>
  416c11:	mov    rbp,QWORD PTR [rsp+0x18]
  416c16:	mov    rdi,QWORD PTR [rbp+0x18]
  416c1a:	mov    edx,DWORD PTR [rdi+0x10]
  416c1d:	lea    rsi,[rip+0x136fa]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416c24:	call   413660 <__ctype_b_loc@plt+0x11390>
  416c29:	mov    rax,QWORD PTR [rbp+0x0]
  416c2d:	mov    ecx,DWORD PTR [rbp+0x3c]
  416c30:	inc    ecx
  416c32:	mov    BYTE PTR [rax+0x73],bl
  416c35:	mov    ebx,ecx
  416c37:	mov    rdi,QWORD PTR [rsp+0x18]
  416c3c:	mov    DWORD PTR [rdi+0x3c],ebx
  416c3f:	dec    ebx
  416c41:	lea    rsi,[rsp+0x20]
  416c46:	mov    edx,ebx
  416c48:	mov    rbx,rdi
  416c4b:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  416c50:	mov    ebp,0x1
  416c55:	mov    edx,DWORD PTR [rsp+0x28]
  416c59:	jmp    414b05 <__ctype_b_loc@plt+0x12835>
  416c5e:	mov    rbp,QWORD PTR [rsp+0x8]
  416c63:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  416c68:	vmovups XMMWORD PTR [r12+0x10],xmm0
  416c6f:	mov    DWORD PTR [r12+0x20],0x11f
  416c78:	mov    r13,QWORD PTR [rsp+0x10]
  416c7d:	lea    rbx,[rsp+0x20]
  416c82:	mov    rdi,r12
  416c85:	mov    rsi,rbx
  416c88:	xor    edx,edx
  416c8a:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  416c8f:	mov    r15,QWORD PTR [r12+0x30]
  416c94:	mov    rdi,r15
  416c97:	mov    rsi,rbx
  416c9a:	call   418a00 <__ctype_b_loc@plt+0x16730>
  416c9f:	cmp    DWORD PTR [rsp+0x20],0xc
  416ca4:	jne    416cbe <__ctype_b_loc@plt+0x149ee>
  416ca6:	mov    eax,DWORD PTR [rsp+0x28]
  416caa:	test   eax,0x100
  416caf:	jne    416cbe <__ctype_b_loc@plt+0x149ee>
  416cb1:	movzx  ecx,BYTE PTR [r15+0x4a]
  416cb6:	cmp    eax,ecx
  416cb8:	jl     416cbe <__ctype_b_loc@plt+0x149ee>
  416cba:	dec    DWORD PTR [r15+0x3c]
  416cbe:	mov    edx,DWORD PTR [r15+0x3c]
  416cc2:	lea    ebx,[rdx+0x1]
  416cc5:	mov    rax,QWORD PTR [r15]
  416cc8:	movzx  ecx,BYTE PTR [rax+0x73]
  416ccc:	cmp    edx,ecx
  416cce:	jl     416cfb <__ctype_b_loc@plt+0x14a2b>
  416cd0:	mov    ecx,ebx
  416cd2:	cmp    edx,0xf9
  416cd8:	jl     416cf6 <__ctype_b_loc@plt+0x14a26>
  416cda:	mov    rdi,QWORD PTR [r15+0x18]
  416cde:	mov    edx,DWORD PTR [rdi+0x10]
  416ce1:	lea    rsi,[rip+0x13636]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416ce8:	call   413660 <__ctype_b_loc@plt+0x11390>
  416ced:	mov    rax,QWORD PTR [r15]
  416cf0:	mov    ecx,DWORD PTR [r15+0x3c]
  416cf4:	inc    ecx
  416cf6:	mov    BYTE PTR [rax+0x73],bl
  416cf9:	mov    ebx,ecx
  416cfb:	mov    DWORD PTR [r15+0x3c],ebx
  416cff:	dec    ebx
  416d01:	lea    rsi,[rsp+0x20]
  416d06:	mov    rdi,r15
  416d09:	mov    edx,ebx
  416d0b:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  416d10:	mov    r15,r14
  416d13:	mov    rdi,r12
  416d16:	mov    esi,DWORD PTR [rsp+0x18]
  416d1a:	mov    r14d,DWORD PTR [rsp+0x44]
  416d1f:	mov    edx,r14d
  416d22:	mov    ecx,0x1
  416d27:	mov    r8d,0x1
  416d2d:	call   41c5c0 <__ctype_b_loc@plt+0x1a2f0>
  416d32:	mov    eax,DWORD PTR [r12+0x4]
  416d37:	cmp    DWORD PTR [r12+0x10],0x106
  416d40:	jne    416d64 <__ctype_b_loc@plt+0x14a94>
  416d42:	mov    DWORD PTR [r12+0x8],eax
  416d47:	cmp    DWORD PTR [r12+0x20],0x11f
  416d50:	jne    416d85 <__ctype_b_loc@plt+0x14ab5>
  416d52:	mov    rdi,r12
  416d55:	mov    rsi,r13
  416d58:	call   411660 <__ctype_b_loc@plt+0xf390>
  416d5d:	mov    DWORD PTR [r12+0x10],eax
  416d62:	jmp    416dcb <__ctype_b_loc@plt+0x14afb>
  416d64:	mov    rdi,QWORD PTR [r12+0x38]
  416d69:	cmp    eax,r14d
  416d6c:	jne    416d9c <__ctype_b_loc@plt+0x14acc>
  416d6e:	lea    rsi,[rip+0x13720]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  416d75:	lea    rdx,[rip+0x1328b]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  416d7c:	xor    eax,eax
  416d7e:	call   404800 <__ctype_b_loc@plt+0x2530>
  416d83:	jmp    416dbb <__ctype_b_loc@plt+0x14aeb>
  416d85:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  416d8a:	vmovups XMMWORD PTR [r12+0x10],xmm0
  416d91:	mov    DWORD PTR [r12+0x20],0x11f
  416d9a:	jmp    416dcb <__ctype_b_loc@plt+0x14afb>
  416d9c:	lea    rsi,[rip+0x136c9]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  416da3:	lea    rdx,[rip+0x1325d]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  416daa:	lea    rcx,[rip+0x13260]        # 42a011 <__ctype_b_loc@plt+0x27d41>
  416db1:	mov    r8d,r14d
  416db4:	xor    eax,eax
  416db6:	call   404800 <__ctype_b_loc@plt+0x2530>
  416dbb:	mov    edx,DWORD PTR [r12+0x10]
  416dc0:	mov    rdi,r12
  416dc3:	mov    rsi,rax
  416dc6:	call   413660 <__ctype_b_loc@plt+0x11390>
  416dcb:	mov    r8,QWORD PTR [r15+0x18]
  416dcf:	mov    r14,QWORD PTR [r15+0x28]
  416dd3:	mov    rax,QWORD PTR [r14]
  416dd6:	mov    QWORD PTR [r15+0x28],rax
  416dda:	mov    cl,BYTE PTR [r14+0xc]
  416dde:	mov    rdx,QWORD PTR [r8+0x30]
  416de2:	movzx  esi,BYTE PTR [rdx+0x4a]
  416de6:	cmp    sil,cl
  416de9:	jbe    416ead <__ctype_b_loc@plt+0x14bdd>
  416def:	mov    edi,DWORD PTR [rdx+0x30]
  416df2:	mov    rax,QWORD PTR [rdx]
  416df5:	mov    rbp,QWORD PTR [rax+0x30]
  416df9:	mov    ebx,esi
  416dfb:	sub    bl,cl
  416dfd:	mov    r9d,ecx
  416e00:	not    r9b
  416e03:	add    r9b,sil
  416e06:	and    bl,0x3
  416e09:	je     416e2d <__ctype_b_loc@plt+0x14b5d>
  416e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e10:	lea    eax,[rsi-0x1]
  416e13:	movzx  eax,al
  416e16:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416e1e:	shl    rax,0x4
  416e22:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416e26:	dec    rsi
  416e29:	dec    bl
  416e2b:	jne    416e10 <__ctype_b_loc@plt+0x14b40>
  416e2d:	cmp    r9b,0x3
  416e31:	jb     416eaa <__ctype_b_loc@plt+0x14bda>
  416e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e3d:	nop    DWORD PTR [rax]
  416e40:	lea    eax,[rsi-0x1]
  416e43:	movzx  eax,al
  416e46:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416e4e:	shl    rax,0x4
  416e52:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416e56:	lea    eax,[rsi+0xfe]
  416e5c:	movzx  eax,al
  416e5f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416e67:	shl    rax,0x4
  416e6b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416e6f:	lea    eax,[rsi+0xfd]
  416e75:	movzx  eax,al
  416e78:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416e80:	shl    rax,0x4
  416e84:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416e88:	lea    eax,[rsi+0xfc]
  416e8e:	movzx  eax,al
  416e91:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416e99:	shl    rax,0x4
  416e9d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416ea1:	add    rsi,0xfffffffffffffffc
  416ea5:	cmp    sil,cl
  416ea8:	ja     416e40 <__ctype_b_loc@plt+0x14b70>
  416eaa:	mov    BYTE PTR [rdx+0x4a],cl
  416ead:	cmp    BYTE PTR [r14+0xd],0x0
  416eb2:	je     416ec9 <__ctype_b_loc@plt+0x14bf9>
  416eb4:	movzx  esi,cl
  416eb7:	shl    esi,0x6
  416eba:	or     esi,0x23
  416ebd:	mov    edx,DWORD PTR [r8+0x8]
  416ec1:	mov    rdi,r15
  416ec4:	call   419020 <__ctype_b_loc@plt+0x16d50>
  416ec9:	movzx  eax,BYTE PTR [r15+0x4a]
  416ece:	mov    DWORD PTR [r15+0x3c],eax
  416ed2:	mov    r14d,DWORD PTR [r14+0x8]
  416ed6:	mov    eax,DWORD PTR [r15+0x30]
  416eda:	mov    DWORD PTR [r15+0x34],eax
  416ede:	cmp    r14d,0xffffffff
  416ee2:	je     416f6f <__ctype_b_loc@plt+0x14c9f>
  416ee8:	mov    edx,DWORD PTR [r15+0x38]
  416eec:	cmp    edx,0xffffffff
  416eef:	je     416f6b <__ctype_b_loc@plt+0x14c9b>
  416ef1:	mov    rax,QWORD PTR [r15]
  416ef4:	mov    rbp,QWORD PTR [rax+0x18]
  416ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  416f00:	mov    ecx,edx
  416f02:	movsxd rbx,edx
  416f05:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416f09:	mov    edx,eax
  416f0b:	shr    edx,0xe
  416f0e:	lea    esi,[rdx-0x1ffff]
  416f14:	cmp    esi,0xffffffff
  416f17:	lea    edx,[rbx+rdx*1-0x1fffe]
  416f1e:	cmove  edx,esi
  416f21:	cmp    edx,0xffffffff
  416f24:	jne    416f00 <__ctype_b_loc@plt+0x14c30>
  416f26:	not    ecx
  416f28:	add    r14d,ecx
  416f2b:	mov    ecx,r14d
  416f2e:	neg    ecx
  416f30:	cmovl  ecx,r14d
  416f34:	cmp    ecx,0x20000
  416f3a:	jl     416f53 <__ctype_b_loc@plt+0x14c83>
  416f3c:	mov    rdi,QWORD PTR [r15+0x18]
  416f40:	mov    edx,DWORD PTR [rdi+0x10]
  416f43:	lea    rsi,[rip+0x133a1]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  416f4a:	call   413660 <__ctype_b_loc@plt+0x11390>
  416f4f:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416f53:	and    eax,0x3fff
  416f58:	shl    r14d,0xe
  416f5c:	lea    eax,[r14+rax*1]
  416f60:	add    eax,0x7fffc000
  416f65:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  416f69:	jmp    416f6f <__ctype_b_loc@plt+0x14c9f>
  416f6b:	mov    DWORD PTR [r15+0x38],r14d
  416f6f:	xor    ebp,ebp
  416f71:	mov    eax,ebp
  416f73:	add    rsp,0x98
  416f7a:	pop    rbx
  416f7b:	pop    r12
  416f7d:	pop    r13
  416f7f:	pop    r14
  416f81:	pop    r15
  416f83:	pop    rbp
  416f84:	ret    
  416f85:	cmp    eax,0xc
  416f88:	jne    416fa0 <__ctype_b_loc@plt+0x14cd0>
  416f8a:	mov    eax,DWORD PTR [rsp+0x28]
  416f8e:	test   eax,0x100
  416f93:	jne    416fa0 <__ctype_b_loc@plt+0x14cd0>
  416f95:	movzx  ecx,BYTE PTR [rbx+0x4a]
  416f99:	cmp    eax,ecx
  416f9b:	jl     416fa0 <__ctype_b_loc@plt+0x14cd0>
  416f9d:	dec    DWORD PTR [rbx+0x3c]
  416fa0:	mov    edx,DWORD PTR [rbx+0x3c]
  416fa3:	mov    rax,rbx
  416fa6:	lea    ebx,[rdx+0x1]
  416fa9:	mov    rax,QWORD PTR [rax]
  416fac:	movzx  ecx,BYTE PTR [rax+0x73]
  416fb0:	cmp    edx,ecx
  416fb2:	jl     416fe4 <__ctype_b_loc@plt+0x14d14>
  416fb4:	mov    ecx,ebx
  416fb6:	cmp    edx,0xf9
  416fbc:	jl     416fdf <__ctype_b_loc@plt+0x14d0f>
  416fbe:	mov    r14,QWORD PTR [rsp+0x18]
  416fc3:	mov    rdi,QWORD PTR [r14+0x18]
  416fc7:	mov    edx,DWORD PTR [rdi+0x10]
  416fca:	lea    rsi,[rip+0x1334d]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  416fd1:	call   413660 <__ctype_b_loc@plt+0x11390>
  416fd6:	mov    rax,QWORD PTR [r14]
  416fd9:	mov    ecx,DWORD PTR [r14+0x3c]
  416fdd:	inc    ecx
  416fdf:	mov    BYTE PTR [rax+0x73],bl
  416fe2:	mov    ebx,ecx
  416fe4:	mov    rdi,QWORD PTR [rsp+0x18]
  416fe9:	mov    DWORD PTR [rdi+0x3c],ebx
  416fec:	dec    ebx
  416fee:	lea    rsi,[rsp+0x20]
  416ff3:	mov    edx,ebx
  416ff5:	mov    rbx,rdi
  416ff8:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  416ffd:	movzx  edx,BYTE PTR [rbx+0x4a]
  417001:	jmp    414b05 <__ctype_b_loc@plt+0x12835>
  417006:	mov    rcx,QWORD PTR [rbx]
  417009:	mov    rax,QWORD PTR [rcx+0x18]
  41700d:	movsxd rdx,DWORD PTR [rsp+0x28]
  417012:	and    DWORD PTR [rax+rdx*4],0x7fffff
  417019:	movsxd rdx,DWORD PTR [rsp+0x28]
  41701e:	mov    esi,0xffffc03f
  417023:	and    esi,DWORD PTR [rax+rdx*4]
  417026:	mov    edi,DWORD PTR [rbx+0x3c]
  417029:	movzx  edi,dil
  41702d:	shl    edi,0x6
  417030:	or     edi,esi
  417032:	mov    DWORD PTR [rax+rdx*4],edi
  417035:	mov    esi,DWORD PTR [rbx+0x3c]
  417038:	lea    ebx,[rsi+0x1]
  41703b:	movzx  edx,BYTE PTR [rcx+0x73]
  41703f:	mov    eax,0xe
  417044:	cmp    esi,edx
  417046:	jl     417081 <__ctype_b_loc@plt+0x14db1>
  417048:	mov    eax,0xe
  41704d:	mov    edx,ebx
  41704f:	cmp    esi,0xf9
  417055:	jl     41707c <__ctype_b_loc@plt+0x14dac>
  417057:	mov    r14,QWORD PTR [rsp+0x18]
  41705c:	mov    rdi,QWORD PTR [r14+0x18]
  417060:	mov    edx,DWORD PTR [rdi+0x10]
  417063:	lea    rsi,[rip+0x132b4]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41706a:	call   413660 <__ctype_b_loc@plt+0x11390>
  41706f:	mov    rcx,QWORD PTR [r14]
  417072:	mov    edx,DWORD PTR [r14+0x3c]
  417076:	inc    edx
  417078:	mov    eax,DWORD PTR [rsp+0x20]
  41707c:	mov    BYTE PTR [rcx+0x73],bl
  41707f:	mov    ebx,edx
  417081:	mov    rcx,QWORD PTR [rsp+0x18]
  417086:	mov    DWORD PTR [rcx+0x3c],ebx
  417089:	mov    rbx,rcx
  41708c:	cmp    ebp,0x1
  41708f:	jne    4170ae <__ctype_b_loc@plt+0x14dde>
  417091:	cmp    eax,0xd
  417094:	jne    4170ae <__ctype_b_loc@plt+0x14dde>
  417096:	mov    rax,QWORD PTR [rbx]
  417099:	mov    rax,QWORD PTR [rax+0x18]
  41709d:	movsxd rcx,DWORD PTR [rsp+0x28]
  4170a2:	mov    edx,DWORD PTR [rax+rcx*4]
  4170a5:	and    edx,0xffffffc0
  4170a8:	or     edx,0x1d
  4170ab:	mov    DWORD PTR [rax+rcx*4],edx
  4170ae:	movzx  edx,BYTE PTR [rbx+0x4a]
  4170b2:	mov    ebp,0xffffffff
  4170b7:	jmp    414b05 <__ctype_b_loc@plt+0x12835>
  4170bc:	lea    rsi,[rsp+0x20]
  4170c1:	mov    rdi,rbx
  4170c4:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  4170c9:	mov    edx,DWORD PTR [rsp+0x28]
  4170cd:	jmp    414b05 <__ctype_b_loc@plt+0x12835>
  4170d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170dc:	nop    DWORD PTR [rax+0x0]
  4170e0:	push   rbp
  4170e1:	push   r15
  4170e3:	push   r14
  4170e5:	push   r13
  4170e7:	push   r12
  4170e9:	push   rbx
  4170ea:	sub    rsp,0x18
  4170ee:	mov    rbx,rdi
  4170f1:	mov    rcx,QWORD PTR [rdi+0x30]
  4170f5:	mov    DWORD PTR [rsp+0x8],0xffffffff
  4170fd:	mov    BYTE PTR [rsp+0xe],0x0
  417102:	mov    al,BYTE PTR [rcx+0x4a]
  417105:	mov    BYTE PTR [rsp+0xc],al
  417109:	mov    BYTE PTR [rsp+0xd],0x0
  41710e:	mov    rax,QWORD PTR [rcx+0x28]
  417112:	mov    QWORD PTR [rsp],rax
  417116:	mov    rax,rsp
  417119:	mov    QWORD PTR [rsp+0x10],rcx
  41711e:	mov    QWORD PTR [rcx+0x28],rax
  417122:	mov    rax,QWORD PTR [rdi+0x38]
  417126:	mov    ecx,DWORD PTR [rax+0x60]
  417129:	inc    ecx
  41712b:	mov    WORD PTR [rax+0x60],cx
  41712f:	movzx  eax,cx
  417132:	cmp    eax,0xc9
  417137:	jb     41714a <__ctype_b_loc@plt+0x14e7a>
  417139:	lea    rsi,[rip+0x13177]        # 42a2b7 <__ctype_b_loc@plt+0x27fe7>
  417140:	mov    rdi,rbx
  417143:	xor    edx,edx
  417145:	call   413660 <__ctype_b_loc@plt+0x11390>
  41714a:	lea    r12,[rbx+0x20]
  41714e:	lea    r13,[rbx+0x10]
  417152:	lea    r15,[rbx+0x18]
  417156:	mov    r14d,0xfffffefc
  41715c:	jmp    41717d <__ctype_b_loc@plt+0x14ead>
  41715e:	xchg   ax,ax
  417160:	mov    rdi,rbx
  417163:	mov    rsi,r15
  417166:	call   411660 <__ctype_b_loc@plt+0xf390>
  41716b:	mov    DWORD PTR [rbx+0x10],eax
  41716e:	mov    rax,QWORD PTR [rbx+0x30]
  417172:	movzx  ecx,BYTE PTR [rax+0x4a]
  417176:	mov    DWORD PTR [rax+0x3c],ecx
  417179:	test   ebp,ebp
  41717b:	jne    4171c9 <__ctype_b_loc@plt+0x14ef9>
  41717d:	mov    eax,DWORD PTR [rbx+0x10]
  417180:	add    eax,r14d
  417183:	cmp    eax,0x1b
  417186:	ja     417192 <__ctype_b_loc@plt+0x14ec2>
  417188:	mov    ecx,0x8010007
  41718d:	bt     ecx,eax
  417190:	jb     4171c9 <__ctype_b_loc@plt+0x14ef9>
  417192:	mov    rdi,rbx
  417195:	call   4142e0 <__ctype_b_loc@plt+0x12010>
  41719a:	mov    ebp,eax
  41719c:	cmp    DWORD PTR [rbx+0x10],0x3b
  4171a0:	jne    41716e <__ctype_b_loc@plt+0x14e9e>
  4171a2:	mov    eax,DWORD PTR [rbx+0x4]
  4171a5:	mov    ecx,DWORD PTR [rbx+0x20]
  4171a8:	mov    DWORD PTR [rbx+0x8],eax
  4171ab:	cmp    ecx,0x11f
  4171b1:	je     417160 <__ctype_b_loc@plt+0x14e90>
  4171b3:	vmovups xmm0,XMMWORD PTR [r12]
  4171b9:	vmovups XMMWORD PTR [r13+0x0],xmm0
  4171bf:	mov    DWORD PTR [r12],0x11f
  4171c7:	jmp    41716e <__ctype_b_loc@plt+0x14e9e>
  4171c9:	mov    rax,QWORD PTR [rbx+0x38]
  4171cd:	dec    WORD PTR [rax+0x60]
  4171d1:	mov    r12,QWORD PTR [rsp+0x10]
  4171d6:	mov    r8,QWORD PTR [r12+0x18]
  4171db:	mov    r14,QWORD PTR [r12+0x28]
  4171e0:	mov    rax,QWORD PTR [r14]
  4171e3:	mov    QWORD PTR [r12+0x28],rax
  4171e8:	mov    cl,BYTE PTR [r14+0xc]
  4171ec:	mov    rdx,QWORD PTR [r8+0x30]
  4171f0:	movzx  esi,BYTE PTR [rdx+0x4a]
  4171f4:	cmp    sil,cl
  4171f7:	jbe    4172bd <__ctype_b_loc@plt+0x14fed>
  4171fd:	mov    edi,DWORD PTR [rdx+0x30]
  417200:	mov    rax,QWORD PTR [rdx]
  417203:	mov    rbp,QWORD PTR [rax+0x30]
  417207:	mov    ebx,esi
  417209:	sub    bl,cl
  41720b:	mov    r9d,ecx
  41720e:	not    r9b
  417211:	add    r9b,sil
  417214:	and    bl,0x3
  417217:	je     41723d <__ctype_b_loc@plt+0x14f6d>
  417219:	nop    DWORD PTR [rax+0x0]
  417220:	lea    eax,[rsi-0x1]
  417223:	movzx  eax,al
  417226:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41722e:	shl    rax,0x4
  417232:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417236:	dec    rsi
  417239:	dec    bl
  41723b:	jne    417220 <__ctype_b_loc@plt+0x14f50>
  41723d:	cmp    r9b,0x3
  417241:	jb     4172ba <__ctype_b_loc@plt+0x14fea>
  417243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41724d:	nop    DWORD PTR [rax]
  417250:	lea    eax,[rsi-0x1]
  417253:	movzx  eax,al
  417256:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41725e:	shl    rax,0x4
  417262:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417266:	lea    eax,[rsi+0xfe]
  41726c:	movzx  eax,al
  41726f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417277:	shl    rax,0x4
  41727b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  41727f:	lea    eax,[rsi+0xfd]
  417285:	movzx  eax,al
  417288:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417290:	shl    rax,0x4
  417294:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417298:	lea    eax,[rsi+0xfc]
  41729e:	movzx  eax,al
  4172a1:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  4172a9:	shl    rax,0x4
  4172ad:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4172b1:	add    rsi,0xfffffffffffffffc
  4172b5:	cmp    sil,cl
  4172b8:	ja     417250 <__ctype_b_loc@plt+0x14f80>
  4172ba:	mov    BYTE PTR [rdx+0x4a],cl
  4172bd:	cmp    BYTE PTR [r14+0xd],0x0
  4172c2:	je     4172d9 <__ctype_b_loc@plt+0x15009>
  4172c4:	movzx  esi,cl
  4172c7:	shl    esi,0x6
  4172ca:	or     esi,0x23
  4172cd:	mov    edx,DWORD PTR [r8+0x8]
  4172d1:	mov    rdi,r12
  4172d4:	call   419020 <__ctype_b_loc@plt+0x16d50>
  4172d9:	movzx  eax,BYTE PTR [r12+0x4a]
  4172df:	mov    DWORD PTR [r12+0x3c],eax
  4172e4:	mov    r15d,DWORD PTR [r14+0x8]
  4172e8:	mov    eax,DWORD PTR [r12+0x30]
  4172ed:	mov    DWORD PTR [r12+0x34],eax
  4172f2:	cmp    r15d,0xffffffff
  4172f6:	je     417381 <__ctype_b_loc@plt+0x150b1>
  4172fc:	mov    edx,DWORD PTR [r12+0x38]
  417301:	cmp    edx,0xffffffff
  417304:	je     41737c <__ctype_b_loc@plt+0x150ac>
  417306:	mov    rax,QWORD PTR [r12]
  41730a:	mov    rbp,QWORD PTR [rax+0x18]
  41730e:	xchg   ax,ax
  417310:	mov    ecx,edx
  417312:	movsxd rbx,edx
  417315:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417319:	mov    edx,eax
  41731b:	shr    edx,0xe
  41731e:	lea    esi,[rdx-0x1ffff]
  417324:	cmp    esi,0xffffffff
  417327:	lea    edx,[rbx+rdx*1-0x1fffe]
  41732e:	cmove  edx,esi
  417331:	cmp    edx,0xffffffff
  417334:	jne    417310 <__ctype_b_loc@plt+0x15040>
  417336:	not    ecx
  417338:	add    r15d,ecx
  41733b:	mov    ecx,r15d
  41733e:	neg    ecx
  417340:	cmovl  ecx,r15d
  417344:	cmp    ecx,0x20000
  41734a:	jl     417364 <__ctype_b_loc@plt+0x15094>
  41734c:	mov    rdi,QWORD PTR [r12+0x18]
  417351:	mov    edx,DWORD PTR [rdi+0x10]
  417354:	lea    rsi,[rip+0x12f90]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41735b:	call   413660 <__ctype_b_loc@plt+0x11390>
  417360:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417364:	and    eax,0x3fff
  417369:	shl    r15d,0xe
  41736d:	lea    eax,[r15+rax*1]
  417371:	add    eax,0x7fffc000
  417376:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  41737a:	jmp    417381 <__ctype_b_loc@plt+0x150b1>
  41737c:	mov    DWORD PTR [r12+0x38],r15d
  417381:	add    rsp,0x18
  417385:	pop    rbx
  417386:	pop    r12
  417388:	pop    r13
  41738a:	pop    r14
  41738c:	pop    r15
  41738e:	pop    rbp
  41738f:	ret    
  417390:	push   rbp
  417391:	push   r15
  417393:	push   r14
  417395:	push   r13
  417397:	push   r12
  417399:	push   rbx
  41739a:	push   rax
  41739b:	mov    rbx,rdi
  41739e:	mov    eax,DWORD PTR [rdi+0x4]
  4173a1:	cmp    DWORD PTR [rdi+0x10],esi
  4173a4:	jne    4173c3 <__ctype_b_loc@plt+0x150f3>
  4173a6:	mov    DWORD PTR [rbx+0x8],eax
  4173a9:	cmp    DWORD PTR [rbx+0x20],0x11f
  4173b0:	jne    4173e4 <__ctype_b_loc@plt+0x15114>
  4173b2:	lea    rsi,[rbx+0x18]
  4173b6:	mov    rdi,rbx
  4173b9:	call   411660 <__ctype_b_loc@plt+0xf390>
  4173be:	mov    DWORD PTR [rbx+0x10],eax
  4173c1:	jmp    4173f8 <__ctype_b_loc@plt+0x15128>
  4173c3:	mov    r15d,ecx
  4173c6:	mov    ebp,esi
  4173c8:	cmp    eax,ecx
  4173ca:	jne    417407 <__ctype_b_loc@plt+0x15137>
  4173cc:	mov    rdi,rbx
  4173cf:	mov    esi,ebp
  4173d1:	add    rsp,0x8
  4173d5:	pop    rbx
  4173d6:	pop    r12
  4173d8:	pop    r13
  4173da:	pop    r14
  4173dc:	pop    r15
  4173de:	pop    rbp
  4173df:	jmp    41c540 <__ctype_b_loc@plt+0x1a270>
  4173e4:	lea    rax,[rbx+0x20]
  4173e8:	vmovups xmm0,XMMWORD PTR [rax]
  4173ec:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  4173f1:	mov    DWORD PTR [rbx+0x20],0x11f
  4173f8:	add    rsp,0x8
  4173fc:	pop    rbx
  4173fd:	pop    r12
  4173ff:	pop    r13
  417401:	pop    r14
  417403:	pop    r15
  417405:	pop    rbp
  417406:	ret    
  417407:	mov    r13d,edx
  41740a:	mov    r14,QWORD PTR [rbx+0x38]
  41740e:	cmp    ebp,0x100
  417414:	jg     417430 <__ctype_b_loc@plt+0x15160>
  417416:	call   4022d0 <__ctype_b_loc@plt>
  41741b:	mov    rax,QWORD PTR [rax]
  41741e:	movsxd rcx,ebp
  417421:	test   BYTE PTR [rax+rcx*2],0x2
  417425:	jne    41745f <__ctype_b_loc@plt+0x1518f>
  417427:	lea    rsi,[rip+0x12e2d]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41742e:	jmp    417466 <__ctype_b_loc@plt+0x15196>
  417430:	movsxd rax,ebp
  417433:	lea    rcx,[rip+0x18596]        # 42f9d0 <__ctype_b_loc@plt+0x2d700>
  41743a:	mov    r12,QWORD PTR [rcx+rax*8-0x808]
  417442:	cmp    r13d,0x100
  417449:	jle    41747e <__ctype_b_loc@plt+0x151ae>
  41744b:	movsxd rax,r13d
  41744e:	lea    rcx,[rip+0x1857b]        # 42f9d0 <__ctype_b_loc@plt+0x2d700>
  417455:	mov    rcx,QWORD PTR [rcx+rax*8-0x808]
  41745d:	jmp    4174b0 <__ctype_b_loc@plt+0x151e0>
  41745f:	lea    rsi,[rip+0x12dec]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  417466:	mov    rdi,r14
  417469:	mov    edx,ebp
  41746b:	xor    eax,eax
  41746d:	call   404800 <__ctype_b_loc@plt+0x2530>
  417472:	mov    r12,rax
  417475:	cmp    r13d,0x100
  41747c:	jg     41744b <__ctype_b_loc@plt+0x1517b>
  41747e:	call   4022d0 <__ctype_b_loc@plt>
  417483:	mov    rax,QWORD PTR [rax]
  417486:	movsxd rcx,r13d
  417489:	test   BYTE PTR [rax+rcx*2],0x2
  41748d:	mov    rdi,QWORD PTR [rbx+0x38]
  417491:	jne    41749c <__ctype_b_loc@plt+0x151cc>
  417493:	lea    rsi,[rip+0x12dc1]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41749a:	jmp    4174a3 <__ctype_b_loc@plt+0x151d3>
  41749c:	lea    rsi,[rip+0x12daf]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  4174a3:	mov    edx,r13d
  4174a6:	xor    eax,eax
  4174a8:	call   404800 <__ctype_b_loc@plt+0x2530>
  4174ad:	mov    rcx,rax
  4174b0:	lea    rsi,[rip+0x12fb5]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  4174b7:	mov    rdi,r14
  4174ba:	mov    rdx,r12
  4174bd:	mov    r8d,r15d
  4174c0:	xor    eax,eax
  4174c2:	call   404800 <__ctype_b_loc@plt+0x2530>
  4174c7:	mov    edx,DWORD PTR [rbx+0x10]
  4174ca:	mov    rdi,rbx
  4174cd:	mov    rsi,rax
  4174d0:	add    rsp,0x8
  4174d4:	pop    rbx
  4174d5:	pop    r12
  4174d7:	pop    r13
  4174d9:	pop    r14
  4174db:	pop    r15
  4174dd:	pop    rbp
  4174de:	jmp    413660 <__ctype_b_loc@plt+0x11390>
  4174e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4174ed:	nop    DWORD PTR [rax]
  4174f0:	push   rbp
  4174f1:	push   r15
  4174f3:	push   r14
  4174f5:	push   r12
  4174f7:	push   rbx
  4174f8:	mov    r14,QWORD PTR [rdi+0x30]
  4174fc:	mov    rbx,QWORD PTR [r14+0x28]
  417500:	xor    ebp,ebp
  417502:	test   rbx,rbx
  417505:	je     417524 <__ctype_b_loc@plt+0x15254>
  417507:	nop    WORD PTR [rax+rax*1+0x0]
  417510:	cmp    BYTE PTR [rbx+0xe],0x0
  417514:	jne    417535 <__ctype_b_loc@plt+0x15265>
  417516:	movzx  eax,BYTE PTR [rbx+0xd]
  41751a:	or     ebp,eax
  41751c:	mov    rbx,QWORD PTR [rbx]
  41751f:	test   rbx,rbx
  417522:	jne    417510 <__ctype_b_loc@plt+0x15240>
  417524:	mov    edx,DWORD PTR [rdi+0x10]
  417527:	lea    rsi,[rip+0x12fd7]        # 42a505 <__ctype_b_loc@plt+0x28235>
  41752e:	call   413660 <__ctype_b_loc@plt+0x11390>
  417533:	xor    ebx,ebx
  417535:	test   ebp,ebp
  417537:	je     417552 <__ctype_b_loc@plt+0x15282>
  417539:	movzx  esi,BYTE PTR [rbx+0xc]
  41753d:	shl    esi,0x6
  417540:	or     esi,0x23
  417543:	mov    rax,QWORD PTR [r14+0x18]
  417547:	mov    edx,DWORD PTR [rax+0x8]
  41754a:	mov    rdi,r14
  41754d:	call   419020 <__ctype_b_loc@plt+0x16d50>
  417552:	mov    rdi,r14
  417555:	call   417600 <__ctype_b_loc@plt+0x15330>
  41755a:	cmp    eax,0xffffffff
  41755d:	je     4175ef <__ctype_b_loc@plt+0x1531f>
  417563:	mov    r15d,eax
  417566:	mov    edx,DWORD PTR [rbx+0x8]
  417569:	cmp    edx,0xffffffff
  41756c:	je     4175eb <__ctype_b_loc@plt+0x1531b>
  417572:	mov    rax,QWORD PTR [r14]
  417575:	mov    r12,QWORD PTR [rax+0x18]
  417579:	nop    DWORD PTR [rax+0x0]
  417580:	mov    ecx,edx
  417582:	movsxd rbx,edx
  417585:	mov    eax,DWORD PTR [r12+rbx*4]
  417589:	mov    edx,eax
  41758b:	shr    edx,0xe
  41758e:	lea    esi,[rdx-0x1ffff]
  417594:	cmp    esi,0xffffffff
  417597:	lea    edx,[rbx+rdx*1-0x1fffe]
  41759e:	cmove  edx,esi
  4175a1:	cmp    edx,0xffffffff
  4175a4:	jne    417580 <__ctype_b_loc@plt+0x152b0>
  4175a6:	not    ecx
  4175a8:	add    r15d,ecx
  4175ab:	mov    ecx,r15d
  4175ae:	neg    ecx
  4175b0:	cmovl  ecx,r15d
  4175b4:	cmp    ecx,0x20000
  4175ba:	jl     4175d3 <__ctype_b_loc@plt+0x15303>
  4175bc:	mov    rdi,QWORD PTR [r14+0x18]
  4175c0:	mov    edx,DWORD PTR [rdi+0x10]
  4175c3:	lea    rsi,[rip+0x12d21]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4175ca:	call   413660 <__ctype_b_loc@plt+0x11390>
  4175cf:	mov    eax,DWORD PTR [r12+rbx*4]
  4175d3:	and    eax,0x3fff
  4175d8:	shl    r15d,0xe
  4175dc:	lea    eax,[r15+rax*1]
  4175e0:	add    eax,0x7fffc000
  4175e5:	mov    DWORD PTR [r12+rbx*4],eax
  4175e9:	jmp    4175ef <__ctype_b_loc@plt+0x1531f>
  4175eb:	mov    DWORD PTR [rbx+0x8],r15d
  4175ef:	pop    rbx
  4175f0:	pop    r12
  4175f2:	pop    r14
  4175f4:	pop    r15
  4175f6:	pop    rbp
  4175f7:	ret    
  4175f8:	nop    DWORD PTR [rax+rax*1+0x0]
  417600:	push   rbp
  417601:	push   r15
  417603:	push   r14
  417605:	push   r12
  417607:	push   rbx
  417608:	mov    r12,rdi
  41760b:	mov    r15d,DWORD PTR [rdi+0x38]
  41760f:	mov    DWORD PTR [rdi+0x38],0xffffffff
  417616:	mov    rax,QWORD PTR [rdi+0x18]
  41761a:	mov    edx,DWORD PTR [rax+0x8]
  41761d:	mov    esi,0x7fff8016
  417622:	call   419020 <__ctype_b_loc@plt+0x16d50>
  417627:	mov    r14d,eax
  41762a:	cmp    r15d,0xffffffff
  41762e:	je     4176bf <__ctype_b_loc@plt+0x153ef>
  417634:	cmp    r14d,0xffffffff
  417638:	je     4176bc <__ctype_b_loc@plt+0x153ec>
  41763e:	mov    rax,QWORD PTR [r12]
  417642:	mov    rbp,QWORD PTR [rax+0x18]
  417646:	mov    edx,r14d
  417649:	nop    DWORD PTR [rax+0x0]
  417650:	mov    ecx,edx
  417652:	movsxd rbx,edx
  417655:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417659:	mov    edx,eax
  41765b:	shr    edx,0xe
  41765e:	lea    esi,[rdx-0x1ffff]
  417664:	cmp    esi,0xffffffff
  417667:	lea    edx,[rbx+rdx*1-0x1fffe]
  41766e:	cmove  edx,esi
  417671:	cmp    edx,0xffffffff
  417674:	jne    417650 <__ctype_b_loc@plt+0x15380>
  417676:	not    ecx
  417678:	add    r15d,ecx
  41767b:	mov    ecx,r15d
  41767e:	neg    ecx
  417680:	cmovl  ecx,r15d
  417684:	cmp    ecx,0x20000
  41768a:	jl     4176a4 <__ctype_b_loc@plt+0x153d4>
  41768c:	mov    rdi,QWORD PTR [r12+0x18]
  417691:	mov    edx,DWORD PTR [rdi+0x10]
  417694:	lea    rsi,[rip+0x12c50]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41769b:	call   413660 <__ctype_b_loc@plt+0x11390>
  4176a0:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4176a4:	and    eax,0x3fff
  4176a9:	shl    r15d,0xe
  4176ad:	lea    eax,[r15+rax*1]
  4176b1:	add    eax,0x7fffc000
  4176b6:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  4176ba:	jmp    4176bf <__ctype_b_loc@plt+0x153ef>
  4176bc:	mov    r14d,r15d
  4176bf:	mov    eax,r14d
  4176c2:	pop    rbx
  4176c3:	pop    r12
  4176c5:	pop    r14
  4176c7:	pop    r15
  4176c9:	pop    rbp
  4176ca:	ret    
  4176cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4176d0:	push   r15
  4176d2:	push   r14
  4176d4:	push   r13
  4176d6:	push   r12
  4176d8:	push   rbx
  4176d9:	mov    r14,rsi
  4176dc:	mov    r12,rdi
  4176df:	call   418a00 <__ctype_b_loc@plt+0x16730>
  4176e4:	mov    eax,DWORD PTR [r14]
  4176e7:	lea    ecx,[rax-0x4]
  4176ea:	cmp    ecx,0x2
  4176ed:	jb     417803 <__ctype_b_loc@plt+0x15533>
  4176f3:	cmp    eax,0x2
  4176f6:	je     417803 <__ctype_b_loc@plt+0x15533>
  4176fc:	cmp    eax,0xa
  4176ff:	jne    417731 <__ctype_b_loc@plt+0x15461>
  417701:	movsxd rcx,DWORD PTR [r14+0x8]
  417705:	mov    rdx,QWORD PTR [r12]
  417709:	lea    rax,[rcx*4+0x0]
  417711:	add    rax,QWORD PTR [rdx+0x18]
  417715:	test   rcx,rcx
  417718:	jle    41772d <__ctype_b_loc@plt+0x1545d>
  41771a:	mov    ecx,DWORD PTR [rax-0x4]
  41771d:	movabs rdx,0x20f800000
  417727:	bt     rdx,rcx
  41772b:	jb     41774c <__ctype_b_loc@plt+0x1547c>
  41772d:	mov    ecx,DWORD PTR [rax]
  41772f:	jmp    417750 <__ctype_b_loc@plt+0x15480>
  417731:	mov    rdi,r12
  417734:	mov    rsi,r14
  417737:	xor    edx,edx
  417739:	call   41c1a0 <__ctype_b_loc@plt+0x19ed0>
  41773e:	mov    r15d,eax
  417741:	cmp    r15d,0xffffffff
  417745:	jne    417779 <__ctype_b_loc@plt+0x154a9>
  417747:	jmp    417803 <__ctype_b_loc@plt+0x15533>
  41774c:	add    rax,0xfffffffffffffffc
  417750:	mov    edx,ecx
  417752:	and    edx,0xffffc03f
  417758:	xor    esi,esi
  41775a:	test   ecx,0x3fc0
  417760:	sete   sil
  417764:	shl    esi,0x6
  417767:	or     esi,edx
  417769:	mov    DWORD PTR [rax],esi
  41776b:	mov    r15d,DWORD PTR [r14+0x8]
  41776f:	cmp    r15d,0xffffffff
  417773:	je     417803 <__ctype_b_loc@plt+0x15533>
  417779:	mov    edx,DWORD PTR [r14+0x14]
  41777d:	cmp    edx,0xffffffff
  417780:	je     4177ff <__ctype_b_loc@plt+0x1552f>
  417782:	mov    rax,QWORD PTR [r12]
  417786:	mov    r13,QWORD PTR [rax+0x18]
  41778a:	nop    WORD PTR [rax+rax*1+0x0]
  417790:	mov    ecx,edx
  417792:	movsxd rbx,edx
  417795:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  41779a:	mov    edx,eax
  41779c:	shr    edx,0xe
  41779f:	lea    esi,[rdx-0x1ffff]
  4177a5:	cmp    esi,0xffffffff
  4177a8:	lea    edx,[rbx+rdx*1-0x1fffe]
  4177af:	cmove  edx,esi
  4177b2:	cmp    edx,0xffffffff
  4177b5:	jne    417790 <__ctype_b_loc@plt+0x154c0>
  4177b7:	not    ecx
  4177b9:	add    r15d,ecx
  4177bc:	mov    ecx,r15d
  4177bf:	neg    ecx
  4177c1:	cmovl  ecx,r15d
  4177c5:	cmp    ecx,0x20000
  4177cb:	jl     4177e6 <__ctype_b_loc@plt+0x15516>
  4177cd:	mov    rdi,QWORD PTR [r12+0x18]
  4177d2:	mov    edx,DWORD PTR [rdi+0x10]
  4177d5:	lea    rsi,[rip+0x12b0f]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4177dc:	call   413660 <__ctype_b_loc@plt+0x11390>
  4177e1:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  4177e6:	and    eax,0x3fff
  4177eb:	shl    r15d,0xe
  4177ef:	lea    eax,[r15+rax*1]
  4177f3:	add    eax,0x7fffc000
  4177f8:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  4177fd:	jmp    417803 <__ctype_b_loc@plt+0x15533>
  4177ff:	mov    DWORD PTR [r14+0x14],r15d
  417803:	mov    r15d,DWORD PTR [r14+0x10]
  417807:	mov    eax,DWORD PTR [r12+0x30]
  41780c:	mov    DWORD PTR [r12+0x34],eax
  417811:	cmp    r15d,0xffffffff
  417815:	je     4178a4 <__ctype_b_loc@plt+0x155d4>
  41781b:	mov    edx,DWORD PTR [r12+0x38]
  417820:	cmp    edx,0xffffffff
  417823:	je     41789f <__ctype_b_loc@plt+0x155cf>
  417825:	mov    rax,QWORD PTR [r12]
  417829:	mov    r13,QWORD PTR [rax+0x18]
  41782d:	nop    DWORD PTR [rax]
  417830:	mov    ecx,edx
  417832:	movsxd rbx,edx
  417835:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  41783a:	mov    edx,eax
  41783c:	shr    edx,0xe
  41783f:	lea    esi,[rdx-0x1ffff]
  417845:	cmp    esi,0xffffffff
  417848:	lea    edx,[rbx+rdx*1-0x1fffe]
  41784f:	cmove  edx,esi
  417852:	cmp    edx,0xffffffff
  417855:	jne    417830 <__ctype_b_loc@plt+0x15560>
  417857:	not    ecx
  417859:	add    r15d,ecx
  41785c:	mov    ecx,r15d
  41785f:	neg    ecx
  417861:	cmovl  ecx,r15d
  417865:	cmp    ecx,0x20000
  41786b:	jl     417886 <__ctype_b_loc@plt+0x155b6>
  41786d:	mov    rdi,QWORD PTR [r12+0x18]
  417872:	mov    edx,DWORD PTR [rdi+0x10]
  417875:	lea    rsi,[rip+0x12a6f]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41787c:	call   413660 <__ctype_b_loc@plt+0x11390>
  417881:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  417886:	and    eax,0x3fff
  41788b:	shl    r15d,0xe
  41788f:	lea    eax,[r15+rax*1]
  417893:	add    eax,0x7fffc000
  417898:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  41789d:	jmp    4178a4 <__ctype_b_loc@plt+0x155d4>
  41789f:	mov    DWORD PTR [r12+0x38],r15d
  4178a4:	mov    DWORD PTR [r14+0x10],0xffffffff
  4178ac:	pop    rbx
  4178ad:	pop    r12
  4178af:	pop    r13
  4178b1:	pop    r14
  4178b3:	pop    r15
  4178b5:	ret    
  4178b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4178c0:	push   rbp
  4178c1:	push   r15
  4178c3:	push   r14
  4178c5:	push   r13
  4178c7:	push   r12
  4178c9:	push   rbx
  4178ca:	sub    rsp,0x48
  4178ce:	mov    DWORD PTR [rsp+0x2c],edx
  4178d2:	mov    r15,rsi
  4178d5:	mov    rbx,rdi
  4178d8:	mov    rax,QWORD PTR [rdi+0x38]
  4178dc:	mov    ecx,DWORD PTR [rax+0x60]
  4178df:	inc    ecx
  4178e1:	mov    WORD PTR [rax+0x60],cx
  4178e5:	movzx  eax,cx
  4178e8:	cmp    eax,0xc9
  4178ed:	jb     417900 <__ctype_b_loc@plt+0x15630>
  4178ef:	lea    rsi,[rip+0x129c1]        # 42a2b7 <__ctype_b_loc@plt+0x27fe7>
  4178f6:	mov    rdi,rbx
  4178f9:	xor    edx,edx
  4178fb:	call   413660 <__ctype_b_loc@plt+0x11390>
  417900:	mov    eax,DWORD PTR [rbx+0x10]
  417903:	cmp    eax,0x106
  417908:	mov    QWORD PTR [rsp+0x8],rbx
  41790d:	mov    QWORD PTR [rsp],r15
  417911:	jle    41794a <__ctype_b_loc@plt+0x1567a>
  417913:	add    eax,0xfffffef9
  417918:	cmp    eax,0x17
  41791b:	ja     417c4c <__ctype_b_loc@plt+0x1597c>
  417921:	mov    ebx,0x1
  417926:	lea    rcx,[rip+0x11c2b]        # 429558 <__ctype_b_loc@plt+0x27288>
  41792d:	movsxd rax,DWORD PTR [rcx+rax*4]
  417931:	add    rax,rcx
  417934:	jmp    rax
  417936:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  41793e:	mov    DWORD PTR [r15],0x3
  417945:	jmp    4179ca <__ctype_b_loc@plt+0x156fa>
  41794a:	cmp    eax,0x23
  41794d:	je     417add <__ctype_b_loc@plt+0x1580d>
  417953:	cmp    eax,0x2d
  417956:	je     417ae4 <__ctype_b_loc@plt+0x15814>
  41795c:	cmp    eax,0x7b
  41795f:	jne    417c4c <__ctype_b_loc@plt+0x1597c>
  417965:	mov    rbx,QWORD PTR [rsp+0x8]
  41796a:	mov    rdi,rbx
  41796d:	mov    rsi,r15
  417970:	call   419b40 <__ctype_b_loc@plt+0x17870>
  417975:	jmp    417fc9 <__ctype_b_loc@plt+0x15cf9>
  41797a:	mov    rbx,QWORD PTR [rsp+0x8]
  41797f:	mov    ecx,DWORD PTR [rbx+0x4]
  417982:	mov    eax,DWORD PTR [rbx+0x20]
  417985:	mov    DWORD PTR [rbx+0x8],ecx
  417988:	cmp    eax,0x11f
  41798d:	jne    417d7c <__ctype_b_loc@plt+0x15aac>
  417993:	lea    rsi,[rbx+0x18]
  417997:	mov    rdi,rbx
  41799a:	call   411660 <__ctype_b_loc@plt+0xf390>
  41799f:	mov    DWORD PTR [rbx+0x10],eax
  4179a2:	mov    ecx,DWORD PTR [rbx+0x4]
  4179a5:	jmp    417d90 <__ctype_b_loc@plt+0x15ac0>
  4179aa:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  4179b2:	mov    DWORD PTR [r15],0x1
  4179b9:	jmp    4179ca <__ctype_b_loc@plt+0x156fa>
  4179bb:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  4179c3:	mov    DWORD PTR [r15],0x2
  4179ca:	mov    DWORD PTR [r15+0x8],0x0
  4179d2:	mov    rbx,QWORD PTR [rsp+0x8]
  4179d7:	jmp    417a9f <__ctype_b_loc@plt+0x157cf>
  4179dc:	mov    rax,QWORD PTR [rsp+0x8]
  4179e1:	mov    rbx,QWORD PTR [rax+0x30]
  4179e5:	mov    rax,QWORD PTR [rbx]
  4179e8:	mov    cl,BYTE PTR [rax+0x72]
  4179eb:	test   cl,cl
  4179ed:	jne    417a0b <__ctype_b_loc@plt+0x1573b>
  4179ef:	lea    rsi,[rip+0x1294b]        # 42a341 <__ctype_b_loc@plt+0x28071>
  4179f6:	mov    rdi,QWORD PTR [rsp+0x8]
  4179fb:	mov    edx,0x117
  417a00:	call   413660 <__ctype_b_loc@plt+0x11390>
  417a05:	mov    rax,QWORD PTR [rbx]
  417a08:	mov    cl,BYTE PTR [rax+0x72]
  417a0b:	and    cl,0xfb
  417a0e:	mov    BYTE PTR [rax+0x72],cl
  417a11:	mov    rax,QWORD PTR [rbx+0x18]
  417a15:	mov    edx,DWORD PTR [rax+0x8]
  417a18:	mov    rdi,rbx
  417a1b:	mov    esi,0x800025
  417a20:	call   419020 <__ctype_b_loc@plt+0x16d50>
  417a25:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417a2d:	mov    DWORD PTR [r15],0xe
  417a34:	mov    DWORD PTR [r15+0x8],eax
  417a38:	mov    rbx,QWORD PTR [rsp+0x8]
  417a3d:	jmp    417a9f <__ctype_b_loc@plt+0x157cf>
  417a3f:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417a47:	mov    DWORD PTR [r15],0x5
  417a4e:	mov    DWORD PTR [r15+0x8],0x0
  417a56:	mov    rbx,QWORD PTR [rsp+0x8]
  417a5b:	mov    rax,QWORD PTR [rbx+0x18]
  417a5f:	mov    QWORD PTR [r15+0x8],rax
  417a63:	jmp    417a9f <__ctype_b_loc@plt+0x157cf>
  417a65:	mov    rbx,QWORD PTR [rsp+0x8]
  417a6a:	mov    rax,QWORD PTR [rbx+0x18]
  417a6e:	mov    rdi,QWORD PTR [rbx+0x30]
  417a72:	mov    QWORD PTR [rsp+0x10],rax
  417a77:	mov    DWORD PTR [rsp+0x18],0x4
  417a7f:	lea    rdx,[rsp+0x10]
  417a84:	mov    rsi,rdx
  417a87:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  417a8c:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417a94:	mov    DWORD PTR [r15],0x4
  417a9b:	mov    DWORD PTR [r15+0x8],eax
  417a9f:	mov    eax,DWORD PTR [rbx+0x4]
  417aa2:	mov    ecx,DWORD PTR [rbx+0x20]
  417aa5:	mov    DWORD PTR [rbx+0x8],eax
  417aa8:	cmp    ecx,0x11f
  417aae:	jne    417ac4 <__ctype_b_loc@plt+0x157f4>
  417ab0:	lea    rsi,[rbx+0x18]
  417ab4:	mov    rdi,rbx
  417ab7:	call   411660 <__ctype_b_loc@plt+0xf390>
  417abc:	mov    DWORD PTR [rbx+0x10],eax
  417abf:	jmp    417fcc <__ctype_b_loc@plt+0x15cfc>
  417ac4:	lea    rax,[rbx+0x20]
  417ac8:	vmovups xmm0,XMMWORD PTR [rax]
  417acc:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  417ad1:	mov    DWORD PTR [rbx+0x20],0x11f
  417ad8:	jmp    417fc9 <__ctype_b_loc@plt+0x15cf9>
  417add:	mov    ebx,0x2
  417ae2:	jmp    417ae6 <__ctype_b_loc@plt+0x15816>
  417ae4:	xor    ebx,ebx
  417ae6:	mov    rbp,QWORD PTR [rsp+0x8]
  417aeb:	mov    eax,DWORD PTR [rbp+0x4]
  417aee:	mov    ecx,DWORD PTR [rbp+0x20]
  417af1:	mov    DWORD PTR [rbp+0x8],eax
  417af4:	cmp    ecx,0x11f
  417afa:	jne    417b0d <__ctype_b_loc@plt+0x1583d>
  417afc:	lea    rsi,[rbp+0x18]
  417b00:	mov    rdi,rbp
  417b03:	call   411660 <__ctype_b_loc@plt+0xf390>
  417b08:	mov    DWORD PTR [rbp+0x10],eax
  417b0b:	jmp    417b21 <__ctype_b_loc@plt+0x15851>
  417b0d:	lea    rax,[rbp+0x20]
  417b11:	vmovups xmm0,XMMWORD PTR [rax]
  417b15:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  417b1a:	mov    DWORD PTR [rbp+0x20],0x11f
  417b21:	mov    rdi,rbp
  417b24:	mov    rsi,r15
  417b27:	mov    edx,0x8
  417b2c:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  417b31:	mov    r15,QWORD PTR [rbp+0x30]
  417b35:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
  417b3e:	mov    DWORD PTR [rsp+0x10],0x5
  417b46:	mov    QWORD PTR [rsp+0x18],0x0
  417b4f:	cmp    ebx,0x2
  417b52:	je     417cab <__ctype_b_loc@plt+0x159db>
  417b58:	cmp    ebx,0x1
  417b5b:	je     417c61 <__ctype_b_loc@plt+0x15991>
  417b61:	test   ebx,ebx
  417b63:	mov    rbx,QWORD PTR [rsp+0x8]
  417b68:	jne    417fc5 <__ctype_b_loc@plt+0x15cf5>
  417b6e:	mov    rbp,QWORD PTR [rsp]
  417b72:	cmp    DWORD PTR [rbp+0x0],0x5
  417b76:	jne    417b88 <__ctype_b_loc@plt+0x158b8>
  417b78:	cmp    DWORD PTR [rbp+0x10],0xffffffff
  417b7c:	jne    417b88 <__ctype_b_loc@plt+0x158b8>
  417b7e:	cmp    DWORD PTR [rbp+0x14],0xffffffff
  417b82:	je     417c3a <__ctype_b_loc@plt+0x1596a>
  417b88:	mov    rdi,r15
  417b8b:	mov    rsi,rbp
  417b8e:	call   418a00 <__ctype_b_loc@plt+0x16730>
  417b93:	cmp    DWORD PTR [rbp+0x0],0xc
  417b97:	jne    417bb5 <__ctype_b_loc@plt+0x158e5>
  417b99:	mov    eax,DWORD PTR [rbp+0x10]
  417b9c:	cmp    eax,DWORD PTR [rbp+0x14]
  417b9f:	je     417c3a <__ctype_b_loc@plt+0x1596a>
  417ba5:	mov    edx,DWORD PTR [rbp+0x8]
  417ba8:	movzx  eax,BYTE PTR [r15+0x4a]
  417bad:	cmp    edx,eax
  417baf:	jge    417db1 <__ctype_b_loc@plt+0x15ae1>
  417bb5:	mov    rdi,r15
  417bb8:	mov    rsi,rbp
  417bbb:	call   418a00 <__ctype_b_loc@plt+0x16730>
  417bc0:	cmp    DWORD PTR [rbp+0x0],0xc
  417bc4:	jne    417be1 <__ctype_b_loc@plt+0x15911>
  417bc6:	mov    rax,QWORD PTR [rsp]
  417bca:	mov    eax,DWORD PTR [rax+0x8]
  417bcd:	test   eax,0x100
  417bd2:	jne    417be1 <__ctype_b_loc@plt+0x15911>
  417bd4:	movzx  ecx,BYTE PTR [r15+0x4a]
  417bd9:	cmp    eax,ecx
  417bdb:	jl     417be1 <__ctype_b_loc@plt+0x15911>
  417bdd:	dec    DWORD PTR [r15+0x3c]
  417be1:	mov    edx,DWORD PTR [r15+0x3c]
  417be5:	lea    ebx,[rdx+0x1]
  417be8:	mov    rax,QWORD PTR [r15]
  417beb:	movzx  ecx,BYTE PTR [rax+0x73]
  417bef:	cmp    edx,ecx
  417bf1:	jl     417c1e <__ctype_b_loc@plt+0x1594e>
  417bf3:	mov    ecx,ebx
  417bf5:	cmp    edx,0xf9
  417bfb:	jl     417c19 <__ctype_b_loc@plt+0x15949>
  417bfd:	mov    rdi,QWORD PTR [r15+0x18]
  417c01:	mov    edx,DWORD PTR [rdi+0x10]
  417c04:	lea    rsi,[rip+0x12713]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  417c0b:	call   413660 <__ctype_b_loc@plt+0x11390>
  417c10:	mov    rax,QWORD PTR [r15]
  417c13:	mov    ecx,DWORD PTR [r15+0x3c]
  417c17:	inc    ecx
  417c19:	mov    BYTE PTR [rax+0x73],bl
  417c1c:	mov    ebx,ecx
  417c1e:	mov    DWORD PTR [r15+0x3c],ebx
  417c22:	dec    ebx
  417c24:	mov    rdi,r15
  417c27:	mov    rbp,QWORD PTR [rsp]
  417c2b:	mov    rsi,rbp
  417c2e:	mov    edx,ebx
  417c30:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  417c35:	mov    rbx,QWORD PTR [rsp+0x8]
  417c3a:	lea    rcx,[rsp+0x10]
  417c3f:	mov    rdi,r15
  417c42:	mov    esi,0x12
  417c47:	jmp    417d6f <__ctype_b_loc@plt+0x15a9f>
  417c4c:	mov    rbx,QWORD PTR [rsp+0x8]
  417c51:	mov    rdi,rbx
  417c54:	mov    rsi,r15
  417c57:	call   41aa80 <__ctype_b_loc@plt+0x187b0>
  417c5c:	jmp    417fc9 <__ctype_b_loc@plt+0x15cf9>
  417c61:	movabs rbp,0x20f800000
  417c6b:	mov    rdi,r15
  417c6e:	mov    rbx,QWORD PTR [rsp]
  417c72:	mov    rsi,rbx
  417c75:	call   418a00 <__ctype_b_loc@plt+0x16730>
  417c7a:	mov    eax,DWORD PTR [rbx]
  417c7c:	dec    eax
  417c7e:	cmp    eax,0xb
  417c81:	mov    rbx,QWORD PTR [rsp+0x8]
  417c86:	ja     417eb9 <__ctype_b_loc@plt+0x15be9>
  417c8c:	lea    rcx,[rip+0x11925]        # 4295b8 <__ctype_b_loc@plt+0x272e8>
  417c93:	movsxd rax,DWORD PTR [rcx+rax*4]
  417c97:	add    rax,rcx
  417c9a:	jmp    rax
  417c9c:	mov    rax,QWORD PTR [rsp]
  417ca0:	mov    DWORD PTR [rax],0x3
  417ca6:	jmp    417eb9 <__ctype_b_loc@plt+0x15be9>
  417cab:	mov    rdi,r15
  417cae:	mov    rbp,QWORD PTR [rsp]
  417cb2:	mov    rsi,rbp
  417cb5:	call   418a00 <__ctype_b_loc@plt+0x16730>
  417cba:	cmp    DWORD PTR [rbp+0x0],0xc
  417cbe:	jne    417cdd <__ctype_b_loc@plt+0x15a0d>
  417cc0:	mov    eax,DWORD PTR [rbp+0x10]
  417cc3:	cmp    eax,DWORD PTR [rbp+0x14]
  417cc6:	mov    rbx,QWORD PTR [rsp+0x8]
  417ccb:	je     417d62 <__ctype_b_loc@plt+0x15a92>
  417cd1:	mov    ebx,DWORD PTR [rbp+0x8]
  417cd4:	movzx  eax,BYTE PTR [r15+0x4a]
  417cd9:	cmp    ebx,eax
  417cdb:	jge    417d50 <__ctype_b_loc@plt+0x15a80>
  417cdd:	mov    rdi,r15
  417ce0:	mov    rsi,rbp
  417ce3:	call   418a00 <__ctype_b_loc@plt+0x16730>
  417ce8:	cmp    DWORD PTR [rbp+0x0],0xc
  417cec:	jne    417d09 <__ctype_b_loc@plt+0x15a39>
  417cee:	mov    rax,QWORD PTR [rsp]
  417cf2:	mov    eax,DWORD PTR [rax+0x8]
  417cf5:	test   eax,0x100
  417cfa:	jne    417d09 <__ctype_b_loc@plt+0x15a39>
  417cfc:	movzx  ecx,BYTE PTR [r15+0x4a]
  417d01:	cmp    eax,ecx
  417d03:	jl     417d09 <__ctype_b_loc@plt+0x15a39>
  417d05:	dec    DWORD PTR [r15+0x3c]
  417d09:	mov    edx,DWORD PTR [r15+0x3c]
  417d0d:	lea    ebx,[rdx+0x1]
  417d10:	mov    rax,QWORD PTR [r15]
  417d13:	movzx  ecx,BYTE PTR [rax+0x73]
  417d17:	cmp    edx,ecx
  417d19:	jl     417d46 <__ctype_b_loc@plt+0x15a76>
  417d1b:	mov    ecx,ebx
  417d1d:	cmp    edx,0xf9
  417d23:	jl     417d41 <__ctype_b_loc@plt+0x15a71>
  417d25:	mov    rdi,QWORD PTR [r15+0x18]
  417d29:	mov    edx,DWORD PTR [rdi+0x10]
  417d2c:	lea    rsi,[rip+0x125eb]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  417d33:	call   413660 <__ctype_b_loc@plt+0x11390>
  417d38:	mov    rax,QWORD PTR [r15]
  417d3b:	mov    ecx,DWORD PTR [r15+0x3c]
  417d3f:	inc    ecx
  417d41:	mov    BYTE PTR [rax+0x73],bl
  417d44:	mov    ebx,ecx
  417d46:	mov    DWORD PTR [r15+0x3c],ebx
  417d4a:	dec    ebx
  417d4c:	mov    rbp,QWORD PTR [rsp]
  417d50:	mov    rdi,r15
  417d53:	mov    rsi,rbp
  417d56:	mov    edx,ebx
  417d58:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  417d5d:	mov    rbx,QWORD PTR [rsp+0x8]
  417d62:	lea    rcx,[rsp+0x10]
  417d67:	mov    rdi,r15
  417d6a:	mov    esi,0x14
  417d6f:	mov    rdx,rbp
  417d72:	call   418810 <__ctype_b_loc@plt+0x16540>
  417d77:	jmp    417fc5 <__ctype_b_loc@plt+0x15cf5>
  417d7c:	lea    rax,[rbx+0x20]
  417d80:	vmovups xmm0,XMMWORD PTR [rax]
  417d84:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  417d89:	mov    DWORD PTR [rbx+0x20],0x11f
  417d90:	mov    rdi,rbx
  417d93:	mov    rsi,r15
  417d96:	xor    edx,edx
  417d98:	call   41a1c0 <__ctype_b_loc@plt+0x17ef0>
  417d9d:	jmp    417fc9 <__ctype_b_loc@plt+0x15cf9>
  417da2:	mov    rax,QWORD PTR [rsp]
  417da6:	mov    DWORD PTR [rax],0x2
  417dac:	jmp    417eb9 <__ctype_b_loc@plt+0x15be9>
  417db1:	mov    rdi,r15
  417db4:	mov    rsi,rbp
  417db7:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  417dbc:	jmp    417c3a <__ctype_b_loc@plt+0x1596a>
  417dc1:	mov    rax,QWORD PTR [rsp]
  417dc5:	movsxd rcx,DWORD PTR [rax+0x8]
  417dc9:	mov    rdx,QWORD PTR [r15]
  417dcc:	lea    rax,[rcx*4+0x0]
  417dd4:	add    rax,QWORD PTR [rdx+0x18]
  417dd8:	test   rcx,rcx
  417ddb:	jle    417dea <__ctype_b_loc@plt+0x15b1a>
  417ddd:	mov    ecx,DWORD PTR [rax-0x4]
  417de0:	bt     rbp,rcx
  417de4:	jb     417e9a <__ctype_b_loc@plt+0x15bca>
  417dea:	mov    ecx,DWORD PTR [rax]
  417dec:	jmp    417e9e <__ctype_b_loc@plt+0x15bce>
  417df1:	mov    edx,DWORD PTR [r15+0x3c]
  417df5:	lea    r14d,[rdx+0x1]
  417df9:	mov    rax,QWORD PTR [r15]
  417dfc:	movzx  ecx,BYTE PTR [rax+0x73]
  417e00:	cmp    edx,ecx
  417e02:	jl     417e32 <__ctype_b_loc@plt+0x15b62>
  417e04:	mov    ecx,r14d
  417e07:	cmp    edx,0xf9
  417e0d:	jl     417e2b <__ctype_b_loc@plt+0x15b5b>
  417e0f:	mov    rdi,QWORD PTR [r15+0x18]
  417e13:	mov    edx,DWORD PTR [rdi+0x10]
  417e16:	lea    rsi,[rip+0x12501]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  417e1d:	call   413660 <__ctype_b_loc@plt+0x11390>
  417e22:	mov    rax,QWORD PTR [r15]
  417e25:	mov    ecx,DWORD PTR [r15+0x3c]
  417e29:	inc    ecx
  417e2b:	mov    BYTE PTR [rax+0x73],r14b
  417e2f:	mov    r14d,ecx
  417e32:	mov    DWORD PTR [r15+0x3c],r14d
  417e36:	dec    r14d
  417e39:	mov    rdi,r15
  417e3c:	mov    rbx,QWORD PTR [rsp]
  417e40:	mov    rsi,rbx
  417e43:	mov    edx,r14d
  417e46:	call   419320 <__ctype_b_loc@plt+0x17050>
  417e4b:	cmp    DWORD PTR [rbx],0xc
  417e4e:	mov    rbx,QWORD PTR [rsp+0x8]
  417e53:	jne    417e70 <__ctype_b_loc@plt+0x15ba0>
  417e55:	mov    rax,QWORD PTR [rsp]
  417e59:	mov    eax,DWORD PTR [rax+0x8]
  417e5c:	test   eax,0x100
  417e61:	jne    417e70 <__ctype_b_loc@plt+0x15ba0>
  417e63:	movzx  ecx,BYTE PTR [r15+0x4a]
  417e68:	cmp    eax,ecx
  417e6a:	jl     417e70 <__ctype_b_loc@plt+0x15ba0>
  417e6c:	dec    DWORD PTR [r15+0x3c]
  417e70:	mov    r14,QWORD PTR [rsp]
  417e74:	mov    esi,DWORD PTR [r14+0x8]
  417e78:	shl    esi,0x17
  417e7b:	or     esi,0x13
  417e7e:	mov    rax,QWORD PTR [r15+0x18]
  417e82:	mov    edx,DWORD PTR [rax+0x8]
  417e85:	mov    rdi,r15
  417e88:	call   419020 <__ctype_b_loc@plt+0x16d50>
  417e8d:	mov    DWORD PTR [r14+0x8],eax
  417e91:	mov    DWORD PTR [r14],0xb
  417e98:	jmp    417eb9 <__ctype_b_loc@plt+0x15be9>
  417e9a:	add    rax,0xfffffffffffffffc
  417e9e:	mov    edx,ecx
  417ea0:	and    edx,0xffffc03f
  417ea6:	xor    esi,esi
  417ea8:	test   ecx,0x3fc0
  417eae:	sete   sil
  417eb2:	shl    esi,0x6
  417eb5:	or     esi,edx
  417eb7:	mov    DWORD PTR [rax],esi
  417eb9:	mov    rdx,QWORD PTR [rsp]
  417ebd:	mov    ecx,DWORD PTR [rdx+0x10]
  417ec0:	mov    eax,DWORD PTR [rdx+0x14]
  417ec3:	mov    DWORD PTR [rdx+0x14],ecx
  417ec6:	mov    DWORD PTR [rdx+0x10],eax
  417ec9:	cmp    ecx,0xffffffff
  417ecc:	je     417f4c <__ctype_b_loc@plt+0x15c7c>
  417ed2:	mov    rax,QWORD PTR [r15]
  417ed5:	mov    rax,QWORD PTR [rax+0x18]
  417ed9:	jmp    417f02 <__ctype_b_loc@plt+0x15c32>
  417edb:	nop    DWORD PTR [rax+rax*1+0x0]
  417ee0:	mov    edx,DWORD PTR [rdx]
  417ee2:	shr    edx,0xe
  417ee5:	lea    esi,[rdx-0x1ffff]
  417eeb:	cmp    esi,0xffffffff
  417eee:	lea    ecx,[rcx+rdx*1-0x1fffe]
  417ef5:	cmove  ecx,esi
  417ef8:	cmp    ecx,0xffffffff
  417efb:	mov    rbx,QWORD PTR [rsp+0x8]
  417f00:	je     417f45 <__ctype_b_loc@plt+0x15c75>
  417f02:	movsxd rsi,ecx
  417f05:	lea    rdx,[rax+rsi*4]
  417f09:	test   esi,esi
  417f0b:	jle    417f16 <__ctype_b_loc@plt+0x15c46>
  417f0d:	mov    esi,DWORD PTR [rdx-0x4]
  417f10:	bt     rbp,rsi
  417f14:	jb     417f20 <__ctype_b_loc@plt+0x15c50>
  417f16:	mov    esi,DWORD PTR [rdx]
  417f18:	mov    rdi,rdx
  417f1b:	jmp    417f24 <__ctype_b_loc@plt+0x15c54>
  417f1d:	nop    DWORD PTR [rax]
  417f20:	lea    rdi,[rdx-0x4]
  417f24:	mov    ebx,esi
  417f26:	and    ebx,0x3f
  417f29:	cmp    ebx,0x1b
  417f2c:	jne    417ee0 <__ctype_b_loc@plt+0x15c10>
  417f2e:	mov    ebx,esi
  417f30:	shr    ebx,0x11
  417f33:	and    ebx,0xffffffc0
  417f36:	and    esi,0x7fc000
  417f3c:	or     esi,ebx
  417f3e:	or     esi,0x1a
  417f41:	mov    DWORD PTR [rdi],esi
  417f43:	jmp    417ee0 <__ctype_b_loc@plt+0x15c10>
  417f45:	mov    rax,QWORD PTR [rsp]
  417f49:	mov    eax,DWORD PTR [rax+0x10]
  417f4c:	cmp    eax,0xffffffff
  417f4f:	je     417fc5 <__ctype_b_loc@plt+0x15cf5>
  417f51:	mov    rcx,QWORD PTR [r15]
  417f54:	mov    rcx,QWORD PTR [rcx+0x18]
  417f58:	jmp    417f82 <__ctype_b_loc@plt+0x15cb2>
  417f5a:	nop    WORD PTR [rax+rax*1+0x0]
  417f60:	mov    edx,DWORD PTR [rdx]
  417f62:	shr    edx,0xe
  417f65:	lea    esi,[rdx-0x1ffff]
  417f6b:	cmp    esi,0xffffffff
  417f6e:	lea    eax,[rax+rdx*1-0x1fffe]
  417f75:	cmove  eax,esi
  417f78:	cmp    eax,0xffffffff
  417f7b:	mov    rbx,QWORD PTR [rsp+0x8]
  417f80:	je     417fc5 <__ctype_b_loc@plt+0x15cf5>
  417f82:	movsxd rsi,eax
  417f85:	lea    rdx,[rcx+rsi*4]
  417f89:	test   esi,esi
  417f8b:	jle    417f96 <__ctype_b_loc@plt+0x15cc6>
  417f8d:	mov    esi,DWORD PTR [rdx-0x4]
  417f90:	bt     rbp,rsi
  417f94:	jb     417fa0 <__ctype_b_loc@plt+0x15cd0>
  417f96:	mov    esi,DWORD PTR [rdx]
  417f98:	mov    rdi,rdx
  417f9b:	jmp    417fa4 <__ctype_b_loc@plt+0x15cd4>
  417f9d:	nop    DWORD PTR [rax]
  417fa0:	lea    rdi,[rdx-0x4]
  417fa4:	mov    ebx,esi
  417fa6:	and    ebx,0x3f
  417fa9:	cmp    ebx,0x1b
  417fac:	jne    417f60 <__ctype_b_loc@plt+0x15c90>
  417fae:	mov    ebx,esi
  417fb0:	shr    ebx,0x11
  417fb3:	and    ebx,0xffffffc0
  417fb6:	and    esi,0x7fc000
  417fbc:	or     esi,ebx
  417fbe:	or     esi,0x1a
  417fc1:	mov    DWORD PTR [rdi],esi
  417fc3:	jmp    417f60 <__ctype_b_loc@plt+0x15c90>
  417fc5:	mov    r15,QWORD PTR [rsp]
  417fc9:	mov    eax,DWORD PTR [rbx+0x10]
  417fcc:	mov    ebp,0xf
  417fd1:	lea    ecx,[rax-0x25]
  417fd4:	cmp    ecx,0x39
  417fd7:	ja     417ff2 <__ctype_b_loc@plt+0x15d22>
  417fd9:	xor    eax,eax
  417fdb:	lea    rdx,[rip+0x11606]        # 4295e8 <__ctype_b_loc@plt+0x27318>
  417fe2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417fe6:	add    rcx,rdx
  417fe9:	jmp    rcx
  417feb:	mov    eax,0x4
  417ff0:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  417ff2:	add    eax,0xfffffeff
  417ff7:	cmp    eax,0x1a
  417ffa:	ja     4187ec <__ctype_b_loc@plt+0x1651c>
  418000:	lea    rcx,[rip+0x116c9]        # 4296d0 <__ctype_b_loc@plt+0x27400>
  418007:	movsxd rax,DWORD PTR [rcx+rax*4]
  41800b:	add    rax,rcx
  41800e:	jmp    rax
  418010:	mov    eax,0xd
  418015:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418017:	mov    eax,0x2
  41801c:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  41801e:	mov    eax,0x1
  418023:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418025:	mov    eax,0x3
  41802a:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  41802c:	mov    eax,0x9
  418031:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418033:	mov    eax,0xb
  418038:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  41803a:	mov    eax,0x5
  41803f:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418041:	mov    eax,0xe
  418046:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418048:	mov    eax,0x6
  41804d:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  41804f:	mov    eax,0x8
  418054:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418056:	mov    eax,0xc
  41805b:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  41805d:	mov    eax,0xa
  418062:	jmp    418069 <__ctype_b_loc@plt+0x15d99>
  418064:	mov    eax,0x7
  418069:	lea    rcx,[rbx+0x20]
  41806d:	mov    QWORD PTR [rsp+0x40],rcx
  418072:	lea    rcx,[rbx+0x10]
  418076:	mov    QWORD PTR [rsp+0x38],rcx
  41807b:	lea    rcx,[rbx+0x18]
  41807f:	mov    QWORD PTR [rsp+0x30],rcx
  418084:	lea    r12,[rip+0x11bc5]        # 429c50 <__ctype_b_loc@plt+0x27980>
  41808b:	mov    ebp,eax
  41808d:	jmp    4180be <__ctype_b_loc@plt+0x15dee>
  41808f:	mov    rdi,r15
  418092:	mov    esi,0xc
  418097:	nop    WORD PTR [rax+rax*1+0x0]
  4180a0:	mov    r15,QWORD PTR [rsp]
  4180a4:	mov    rdx,r15
  4180a7:	lea    rcx,[rsp+0x10]
  4180ac:	call   418810 <__ctype_b_loc@plt+0x16540>
  4180b1:	mov    ebp,r13d
  4180b4:	cmp    r13d,0xf
  4180b8:	je     4187e7 <__ctype_b_loc@plt+0x16517>
  4180be:	mov    r14d,ebp
  4180c1:	movzx  eax,BYTE PTR [r12+r14*2]
  4180c6:	cmp    eax,DWORD PTR [rsp+0x2c]
  4180ca:	jbe    4187ec <__ctype_b_loc@plt+0x1651c>
  4180d0:	mov    eax,DWORD PTR [rbx+0x4]
  4180d3:	mov    ecx,DWORD PTR [rbx+0x20]
  4180d6:	mov    DWORD PTR [rbx+0x8],eax
  4180d9:	cmp    ecx,0x11f
  4180df:	jne    418100 <__ctype_b_loc@plt+0x15e30>
  4180e1:	mov    rdi,rbx
  4180e4:	mov    rsi,QWORD PTR [rsp+0x30]
  4180e9:	call   411660 <__ctype_b_loc@plt+0xf390>
  4180ee:	mov    DWORD PTR [rbx+0x10],eax
  4180f1:	jmp    418118 <__ctype_b_loc@plt+0x15e48>
  4180f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4180fd:	nop    DWORD PTR [rax]
  418100:	mov    rax,QWORD PTR [rsp+0x40]
  418105:	vmovups xmm0,XMMWORD PTR [rax]
  418109:	mov    rcx,QWORD PTR [rsp+0x38]
  41810e:	vmovups XMMWORD PTR [rcx],xmm0
  418112:	mov    DWORD PTR [rax],0x11f
  418118:	mov    r12,QWORD PTR [rbx+0x30]
  41811c:	cmp    ebp,0xe
  41811f:	ja     418150 <__ctype_b_loc@plt+0x15e80>
  418121:	lea    rax,[rip+0x11614]        # 42973c <__ctype_b_loc@plt+0x2746c>
  418128:	mov    rcx,rax
  41812b:	movsxd rax,DWORD PTR [rax+r14*4]
  41812f:	add    rax,rcx
  418132:	jmp    rax
  418134:	cmp    DWORD PTR [r15],0x5
  418138:	jne    418150 <__ctype_b_loc@plt+0x15e80>
  41813a:	cmp    DWORD PTR [r15+0x10],0xffffffff
  41813f:	jne    418150 <__ctype_b_loc@plt+0x15e80>
  418141:	cmp    DWORD PTR [r15+0x14],0xffffffff
  418146:	je     41815b <__ctype_b_loc@plt+0x15e8b>
  418148:	nop    DWORD PTR [rax+rax*1+0x0]
  418150:	mov    rdi,r12
  418153:	mov    rsi,r15
  418156:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41815b:	lea    r12,[rip+0x11aee]        # 429c50 <__ctype_b_loc@plt+0x27980>
  418162:	movzx  edx,BYTE PTR [r12+r14*2+0x1]
  418168:	mov    rdi,rbx
  41816b:	lea    rsi,[rsp+0x10]
  418170:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  418175:	mov    r13d,eax
  418178:	cmp    ebp,0xe
  41817b:	ja     4180b1 <__ctype_b_loc@plt+0x15de1>
  418181:	mov    r15,QWORD PTR [rbx+0x30]
  418185:	lea    rax,[rip+0x115ec]        # 429778 <__ctype_b_loc@plt+0x274a8>
  41818c:	mov    rcx,rax
  41818f:	movsxd rax,DWORD PTR [rax+r14*4]
  418193:	add    rax,rcx
  418196:	jmp    rax
  418198:	mov    rdi,r15
  41819b:	mov    esi,0xd
  4181a0:	jmp    4180a0 <__ctype_b_loc@plt+0x15dd0>
  4181a5:	mov    rdi,r12
  4181a8:	mov    rsi,r15
  4181ab:	call   418a00 <__ctype_b_loc@plt+0x16730>
  4181b0:	cmp    DWORD PTR [r15],0xc
  4181b4:	jne    4181d0 <__ctype_b_loc@plt+0x15f00>
  4181b6:	mov    eax,DWORD PTR [r15+0x8]
  4181ba:	test   eax,0x100
  4181bf:	jne    4181d0 <__ctype_b_loc@plt+0x15f00>
  4181c1:	movzx  ecx,BYTE PTR [r12+0x4a]
  4181c7:	cmp    eax,ecx
  4181c9:	jl     4181d0 <__ctype_b_loc@plt+0x15f00>
  4181cb:	dec    DWORD PTR [r12+0x3c]
  4181d0:	mov    edx,DWORD PTR [r12+0x3c]
  4181d5:	lea    ebp,[rdx+0x1]
  4181d8:	mov    rax,QWORD PTR [r12]
  4181dc:	movzx  ecx,BYTE PTR [rax+0x73]
  4181e0:	cmp    edx,ecx
  4181e2:	jl     418213 <__ctype_b_loc@plt+0x15f43>
  4181e4:	mov    ecx,ebp
  4181e6:	cmp    edx,0xf9
  4181ec:	jl     41820d <__ctype_b_loc@plt+0x15f3d>
  4181ee:	mov    rdi,QWORD PTR [r12+0x18]
  4181f3:	mov    edx,DWORD PTR [rdi+0x10]
  4181f6:	lea    rsi,[rip+0x12121]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  4181fd:	call   413660 <__ctype_b_loc@plt+0x11390>
  418202:	mov    rax,QWORD PTR [r12]
  418206:	mov    ecx,DWORD PTR [r12+0x3c]
  41820b:	inc    ecx
  41820d:	mov    BYTE PTR [rax+0x73],bpl
  418211:	mov    ebp,ecx
  418213:	mov    DWORD PTR [r12+0x3c],ebp
  418218:	dec    ebp
  41821a:	mov    rdi,r12
  41821d:	mov    rsi,r15
  418220:	mov    edx,ebp
  418222:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  418227:	lea    r12,[rip+0x11a22]        # 429c50 <__ctype_b_loc@plt+0x27980>
  41822e:	movzx  edx,BYTE PTR [r12+r14*2+0x1]
  418234:	mov    rdi,rbx
  418237:	lea    rsi,[rsp+0x10]
  41823c:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  418241:	mov    r13d,eax
  418244:	mov    r15,QWORD PTR [rbx+0x30]
  418248:	mov    ebx,DWORD PTR [rsp+0x20]
  41824c:	mov    ebp,DWORD PTR [rsp+0x24]
  418250:	mov    rdi,r15
  418253:	lea    rsi,[rsp+0x10]
  418258:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41825d:	cmp    ebx,ebp
  41825f:	je     418309 <__ctype_b_loc@plt+0x16039>
  418265:	cmp    DWORD PTR [rsp+0x10],0xc
  41826a:	jne    41828b <__ctype_b_loc@plt+0x15fbb>
  41826c:	mov    eax,DWORD PTR [rsp+0x20]
  418270:	cmp    eax,DWORD PTR [rsp+0x24]
  418274:	je     418309 <__ctype_b_loc@plt+0x16039>
  41827a:	mov    edx,DWORD PTR [rsp+0x18]
  41827e:	movzx  eax,BYTE PTR [r15+0x4a]
  418283:	cmp    edx,eax
  418285:	jge    4187da <__ctype_b_loc@plt+0x1650a>
  41828b:	mov    rdi,r15
  41828e:	lea    rsi,[rsp+0x10]
  418293:	call   418a00 <__ctype_b_loc@plt+0x16730>
  418298:	cmp    DWORD PTR [rsp+0x10],0xc
  41829d:	jne    4182b7 <__ctype_b_loc@plt+0x15fe7>
  41829f:	mov    eax,DWORD PTR [rsp+0x18]
  4182a3:	test   eax,0x100
  4182a8:	jne    4182b7 <__ctype_b_loc@plt+0x15fe7>
  4182aa:	movzx  ecx,BYTE PTR [r15+0x4a]
  4182af:	cmp    eax,ecx
  4182b1:	jl     4182b7 <__ctype_b_loc@plt+0x15fe7>
  4182b3:	dec    DWORD PTR [r15+0x3c]
  4182b7:	mov    edx,DWORD PTR [r15+0x3c]
  4182bb:	lea    ebx,[rdx+0x1]
  4182be:	mov    rax,QWORD PTR [r15]
  4182c1:	movzx  ecx,BYTE PTR [rax+0x73]
  4182c5:	cmp    edx,ecx
  4182c7:	jl     4182f4 <__ctype_b_loc@plt+0x16024>
  4182c9:	mov    ecx,ebx
  4182cb:	cmp    edx,0xf9
  4182d1:	jl     4182ef <__ctype_b_loc@plt+0x1601f>
  4182d3:	mov    rdi,QWORD PTR [r15+0x18]
  4182d7:	mov    edx,DWORD PTR [rdi+0x10]
  4182da:	lea    rsi,[rip+0x1203d]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  4182e1:	call   413660 <__ctype_b_loc@plt+0x11390>
  4182e6:	mov    rax,QWORD PTR [r15]
  4182e9:	mov    ecx,DWORD PTR [r15+0x3c]
  4182ed:	inc    ecx
  4182ef:	mov    BYTE PTR [rax+0x73],bl
  4182f2:	mov    ebx,ecx
  4182f4:	mov    DWORD PTR [r15+0x3c],ebx
  4182f8:	dec    ebx
  4182fa:	mov    rdi,r15
  4182fd:	lea    rsi,[rsp+0x10]
  418302:	mov    edx,ebx
  418304:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  418309:	cmp    DWORD PTR [rsp+0x10],0xb
  41830e:	jne    41837c <__ctype_b_loc@plt+0x160ac>
  418310:	mov    rax,QWORD PTR [r15]
  418313:	mov    rax,QWORD PTR [rax+0x18]
  418317:	movsxd rcx,DWORD PTR [rsp+0x18]
  41831c:	mov    edx,DWORD PTR [rax+rcx*4]
  41831f:	mov    esi,edx
  418321:	and    esi,0x3f
  418324:	cmp    esi,0x15
  418327:	jne    41837c <__ctype_b_loc@plt+0x160ac>
  418329:	mov    rsi,QWORD PTR [rsp]
  41832d:	cmp    DWORD PTR [rsi],0xc
  418330:	mov    rbx,QWORD PTR [rsp+0x8]
  418335:	jne    418352 <__ctype_b_loc@plt+0x16082>
  418337:	mov    esi,DWORD PTR [rsi+0x8]
  41833a:	test   esi,0x100
  418340:	jne    418352 <__ctype_b_loc@plt+0x16082>
  418342:	movzx  edi,BYTE PTR [r15+0x4a]
  418347:	cmp    esi,edi
  418349:	jl     418352 <__ctype_b_loc@plt+0x16082>
  41834b:	dec    DWORD PTR [r15+0x3c]
  41834f:	mov    edx,DWORD PTR [rax+rcx*4]
  418352:	and    edx,0x7fffff
  418358:	mov    r15,QWORD PTR [rsp]
  41835c:	mov    esi,DWORD PTR [r15+0x8]
  418360:	shl    esi,0x17
  418363:	or     esi,edx
  418365:	mov    DWORD PTR [rax+rcx*4],esi
  418368:	mov    DWORD PTR [r15],0xb
  41836f:	mov    eax,DWORD PTR [rsp+0x18]
  418373:	mov    DWORD PTR [r15+0x8],eax
  418377:	jmp    4180b1 <__ctype_b_loc@plt+0x15de1>
  41837c:	mov    rdi,r15
  41837f:	lea    rsi,[rsp+0x10]
  418384:	call   418a00 <__ctype_b_loc@plt+0x16730>
  418389:	cmp    DWORD PTR [rsp+0x10],0xc
  41838e:	jne    4183a8 <__ctype_b_loc@plt+0x160d8>
  418390:	mov    eax,DWORD PTR [rsp+0x18]
  418394:	test   eax,0x100
  418399:	jne    4183a8 <__ctype_b_loc@plt+0x160d8>
  41839b:	movzx  ecx,BYTE PTR [r15+0x4a]
  4183a0:	cmp    eax,ecx
  4183a2:	jl     4183a8 <__ctype_b_loc@plt+0x160d8>
  4183a4:	dec    DWORD PTR [r15+0x3c]
  4183a8:	mov    edx,DWORD PTR [r15+0x3c]
  4183ac:	lea    ebx,[rdx+0x1]
  4183af:	mov    rax,QWORD PTR [r15]
  4183b2:	movzx  ecx,BYTE PTR [rax+0x73]
  4183b6:	cmp    edx,ecx
  4183b8:	jl     4183e5 <__ctype_b_loc@plt+0x16115>
  4183ba:	mov    ecx,ebx
  4183bc:	cmp    edx,0xf9
  4183c2:	jl     4183e0 <__ctype_b_loc@plt+0x16110>
  4183c4:	mov    rdi,QWORD PTR [r15+0x18]
  4183c8:	mov    edx,DWORD PTR [rdi+0x10]
  4183cb:	lea    rsi,[rip+0x11f4c]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  4183d2:	call   413660 <__ctype_b_loc@plt+0x11390>
  4183d7:	mov    rax,QWORD PTR [r15]
  4183da:	mov    ecx,DWORD PTR [r15+0x3c]
  4183de:	inc    ecx
  4183e0:	mov    BYTE PTR [rax+0x73],bl
  4183e3:	mov    ebx,ecx
  4183e5:	mov    DWORD PTR [r15+0x3c],ebx
  4183e9:	dec    ebx
  4183eb:	mov    rdi,r15
  4183ee:	lea    rbp,[rsp+0x10]
  4183f3:	mov    rsi,rbp
  4183f6:	mov    edx,ebx
  4183f8:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  4183fd:	mov    rdi,r15
  418400:	mov    esi,0x15
  418405:	mov    r15,QWORD PTR [rsp]
  418409:	mov    rdx,r15
  41840c:	mov    rcx,rbp
  41840f:	call   418810 <__ctype_b_loc@plt+0x16540>
  418414:	mov    rbx,QWORD PTR [rsp+0x8]
  418419:	jmp    4180b1 <__ctype_b_loc@plt+0x15de1>
  41841e:	mov    rdi,r12
  418421:	mov    rsi,r15
  418424:	call   4176d0 <__ctype_b_loc@plt+0x15400>
  418429:	lea    r12,[rip+0x11820]        # 429c50 <__ctype_b_loc@plt+0x27980>
  418430:	movzx  edx,BYTE PTR [r12+r14*2+0x1]
  418436:	mov    rdi,rbx
  418439:	lea    rsi,[rsp+0x10]
  41843e:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  418443:	mov    r13d,eax
  418446:	mov    r15,QWORD PTR [rbx+0x30]
  41844a:	mov    rdi,r15
  41844d:	lea    rsi,[rsp+0x10]
  418452:	call   418a00 <__ctype_b_loc@plt+0x16730>
  418457:	mov    rax,QWORD PTR [rsp]
  41845b:	mov    r14d,DWORD PTR [rax+0x14]
  41845f:	cmp    r14d,0xffffffff
  418463:	je     4186f9 <__ctype_b_loc@plt+0x16429>
  418469:	mov    edx,DWORD PTR [rsp+0x24]
  41846d:	cmp    edx,0xffffffff
  418470:	je     418633 <__ctype_b_loc@plt+0x16363>
  418476:	mov    rax,QWORD PTR [r15]
  418479:	mov    rbp,QWORD PTR [rax+0x18]
  41847d:	nop    DWORD PTR [rax]
  418480:	mov    ecx,edx
  418482:	movsxd rbx,edx
  418485:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418489:	mov    edx,eax
  41848b:	shr    edx,0xe
  41848e:	lea    esi,[rdx-0x1ffff]
  418494:	cmp    esi,0xffffffff
  418497:	lea    edx,[rbx+rdx*1-0x1fffe]
  41849e:	cmove  edx,esi
  4184a1:	cmp    edx,0xffffffff
  4184a4:	jne    418480 <__ctype_b_loc@plt+0x161b0>
  4184a6:	jmp    4185e6 <__ctype_b_loc@plt+0x16316>
  4184ab:	mov    rdi,r12
  4184ae:	mov    rsi,r15
  4184b1:	call   418a00 <__ctype_b_loc@plt+0x16730>
  4184b6:	mov    eax,DWORD PTR [r15]
  4184b9:	cmp    eax,0x1
  4184bc:	je     41871a <__ctype_b_loc@plt+0x1644a>
  4184c2:	cmp    eax,0x3
  4184c5:	je     41871a <__ctype_b_loc@plt+0x1644a>
  4184cb:	cmp    eax,0xa
  4184ce:	jne    41863d <__ctype_b_loc@plt+0x1636d>
  4184d4:	mov    rax,QWORD PTR [rsp]
  4184d8:	mov    r15d,DWORD PTR [rax+0x8]
  4184dc:	cmp    r15d,0xffffffff
  4184e0:	jne    41865b <__ctype_b_loc@plt+0x1638b>
  4184e6:	jmp    41871a <__ctype_b_loc@plt+0x1644a>
  4184eb:	mov    rdi,r15
  4184ee:	mov    esi,0xe
  4184f3:	jmp    4180a0 <__ctype_b_loc@plt+0x15dd0>
  4184f8:	mov    rdi,r15
  4184fb:	mov    esi,0xf
  418500:	jmp    4180a0 <__ctype_b_loc@plt+0x15dd0>
  418505:	mov    rdi,r15
  418508:	mov    esi,0x10
  41850d:	jmp    4180a0 <__ctype_b_loc@plt+0x15dd0>
  418512:	mov    rdi,r15
  418515:	mov    esi,0x11
  41851a:	jmp    4180a0 <__ctype_b_loc@plt+0x15dd0>
  41851f:	mov    rdi,r15
  418522:	mov    esi,0x17
  418527:	jmp    418568 <__ctype_b_loc@plt+0x16298>
  418529:	mov    rdi,r15
  41852c:	mov    esi,0x17
  418531:	mov    edx,0x1
  418536:	jmp    41856a <__ctype_b_loc@plt+0x1629a>
  418538:	mov    rdi,r15
  41853b:	mov    esi,0x18
  418540:	mov    edx,0x1
  418545:	jmp    41856a <__ctype_b_loc@plt+0x1629a>
  418547:	mov    rdi,r15
  41854a:	mov    esi,0x19
  41854f:	mov    edx,0x1
  418554:	jmp    41856a <__ctype_b_loc@plt+0x1629a>
  418556:	mov    rdi,r15
  418559:	mov    esi,0x18
  41855e:	jmp    418568 <__ctype_b_loc@plt+0x16298>
  418560:	mov    rdi,r15
  418563:	mov    esi,0x19
  418568:	xor    edx,edx
  41856a:	mov    r15,QWORD PTR [rsp]
  41856e:	mov    rcx,r15
  418571:	lea    r8,[rsp+0x10]
  418576:	call   41c2b0 <__ctype_b_loc@plt+0x19fe0>
  41857b:	jmp    4180b1 <__ctype_b_loc@plt+0x15de1>
  418580:	mov    rdi,r15
  418583:	lea    rsi,[rsp+0x10]
  418588:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41858d:	mov    rax,QWORD PTR [rsp]
  418591:	mov    r14d,DWORD PTR [rax+0x10]
  418595:	cmp    r14d,0xffffffff
  418599:	je     4186f9 <__ctype_b_loc@plt+0x16429>
  41859f:	mov    edx,DWORD PTR [rsp+0x20]
  4185a3:	cmp    edx,0xffffffff
  4185a6:	je     4186f4 <__ctype_b_loc@plt+0x16424>
  4185ac:	mov    rax,QWORD PTR [r15]
  4185af:	mov    rbp,QWORD PTR [rax+0x18]
  4185b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4185bd:	nop    DWORD PTR [rax]
  4185c0:	mov    ecx,edx
  4185c2:	movsxd rbx,edx
  4185c5:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4185c9:	mov    edx,eax
  4185cb:	shr    edx,0xe
  4185ce:	lea    esi,[rdx-0x1ffff]
  4185d4:	cmp    esi,0xffffffff
  4185d7:	lea    edx,[rbx+rdx*1-0x1fffe]
  4185de:	cmove  edx,esi
  4185e1:	cmp    edx,0xffffffff
  4185e4:	jne    4185c0 <__ctype_b_loc@plt+0x162f0>
  4185e6:	not    ecx
  4185e8:	add    r14d,ecx
  4185eb:	mov    ecx,r14d
  4185ee:	neg    ecx
  4185f0:	cmovl  ecx,r14d
  4185f4:	cmp    ecx,0x20000
  4185fa:	jl     418613 <__ctype_b_loc@plt+0x16343>
  4185fc:	mov    rdi,QWORD PTR [r15+0x18]
  418600:	mov    edx,DWORD PTR [rdi+0x10]
  418603:	lea    rsi,[rip+0x11ce1]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41860a:	call   413660 <__ctype_b_loc@plt+0x11390>
  41860f:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418613:	and    eax,0x3fff
  418618:	shl    r14d,0xe
  41861c:	lea    eax,[r14+rax*1]
  418620:	add    eax,0x7fffc000
  418625:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  418629:	mov    rbx,QWORD PTR [rsp+0x8]
  41862e:	jmp    4186f9 <__ctype_b_loc@plt+0x16429>
  418633:	mov    DWORD PTR [rsp+0x24],r14d
  418638:	jmp    4186f9 <__ctype_b_loc@plt+0x16429>
  41863d:	mov    rdi,r12
  418640:	mov    rsi,QWORD PTR [rsp]
  418644:	mov    edx,0x1
  418649:	call   41c1a0 <__ctype_b_loc@plt+0x19ed0>
  41864e:	mov    r15d,eax
  418651:	cmp    r15d,0xffffffff
  418655:	je     41871a <__ctype_b_loc@plt+0x1644a>
  41865b:	mov    rax,QWORD PTR [rsp]
  41865f:	mov    edx,DWORD PTR [rax+0x10]
  418662:	cmp    edx,0xffffffff
  418665:	je     418716 <__ctype_b_loc@plt+0x16446>
  41866b:	mov    rax,QWORD PTR [r12]
  41866f:	mov    r13,QWORD PTR [rax+0x18]
  418673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41867d:	nop    DWORD PTR [rax]
  418680:	mov    ecx,edx
  418682:	movsxd rbx,edx
  418685:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  41868a:	mov    edx,eax
  41868c:	shr    edx,0xe
  41868f:	lea    esi,[rdx-0x1ffff]
  418695:	cmp    esi,0xffffffff
  418698:	lea    edx,[rbx+rdx*1-0x1fffe]
  41869f:	cmove  edx,esi
  4186a2:	cmp    edx,0xffffffff
  4186a5:	jne    418680 <__ctype_b_loc@plt+0x163b0>
  4186a7:	not    ecx
  4186a9:	add    r15d,ecx
  4186ac:	mov    ecx,r15d
  4186af:	neg    ecx
  4186b1:	cmovl  ecx,r15d
  4186b5:	cmp    ecx,0x20000
  4186bb:	jl     4186d6 <__ctype_b_loc@plt+0x16406>
  4186bd:	mov    rdi,QWORD PTR [r12+0x18]
  4186c2:	mov    edx,DWORD PTR [rdi+0x10]
  4186c5:	lea    rsi,[rip+0x11c1f]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  4186cc:	call   413660 <__ctype_b_loc@plt+0x11390>
  4186d1:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  4186d6:	and    eax,0x3fff
  4186db:	shl    r15d,0xe
  4186df:	lea    eax,[r15+rax*1]
  4186e3:	add    eax,0x7fffc000
  4186e8:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  4186ed:	mov    rbx,QWORD PTR [rsp+0x8]
  4186f2:	jmp    41871a <__ctype_b_loc@plt+0x1644a>
  4186f4:	mov    DWORD PTR [rsp+0x20],r14d
  4186f9:	mov    rax,QWORD PTR [rsp+0x20]
  4186fe:	mov    r15,QWORD PTR [rsp]
  418702:	mov    QWORD PTR [r15+0x10],rax
  418706:	vmovups xmm0,XMMWORD PTR [rsp+0x10]
  41870c:	vmovups XMMWORD PTR [r15],xmm0
  418711:	jmp    4180b1 <__ctype_b_loc@plt+0x15de1>
  418716:	mov    DWORD PTR [rax+0x10],r15d
  41871a:	mov    rax,QWORD PTR [rsp]
  41871e:	mov    r15d,DWORD PTR [rax+0x14]
  418722:	mov    eax,DWORD PTR [r12+0x30]
  418727:	mov    DWORD PTR [r12+0x34],eax
  41872c:	cmp    r15d,0xffffffff
  418730:	je     4187c9 <__ctype_b_loc@plt+0x164f9>
  418736:	mov    edx,DWORD PTR [r12+0x38]
  41873b:	cmp    edx,0xffffffff
  41873e:	je     4187c4 <__ctype_b_loc@plt+0x164f4>
  418744:	mov    rax,QWORD PTR [r12]
  418748:	mov    r13,QWORD PTR [rax+0x18]
  41874c:	nop    DWORD PTR [rax+0x0]
  418750:	mov    ecx,edx
  418752:	movsxd rbx,edx
  418755:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  41875a:	mov    edx,eax
  41875c:	shr    edx,0xe
  41875f:	lea    esi,[rdx-0x1ffff]
  418765:	cmp    esi,0xffffffff
  418768:	lea    edx,[rbx+rdx*1-0x1fffe]
  41876f:	cmove  edx,esi
  418772:	cmp    edx,0xffffffff
  418775:	jne    418750 <__ctype_b_loc@plt+0x16480>
  418777:	not    ecx
  418779:	add    r15d,ecx
  41877c:	mov    ecx,r15d
  41877f:	neg    ecx
  418781:	cmovl  ecx,r15d
  418785:	cmp    ecx,0x20000
  41878b:	jl     4187a6 <__ctype_b_loc@plt+0x164d6>
  41878d:	mov    rdi,QWORD PTR [r12+0x18]
  418792:	mov    edx,DWORD PTR [rdi+0x10]
  418795:	lea    rsi,[rip+0x11b4f]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41879c:	call   413660 <__ctype_b_loc@plt+0x11390>
  4187a1:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  4187a6:	and    eax,0x3fff
  4187ab:	shl    r15d,0xe
  4187af:	lea    eax,[r15+rax*1]
  4187b3:	add    eax,0x7fffc000
  4187b8:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  4187bd:	mov    rbx,QWORD PTR [rsp+0x8]
  4187c2:	jmp    4187c9 <__ctype_b_loc@plt+0x164f9>
  4187c4:	mov    DWORD PTR [r12+0x38],r15d
  4187c9:	mov    r15,QWORD PTR [rsp]
  4187cd:	mov    DWORD PTR [r15+0x14],0xffffffff
  4187d5:	jmp    41815b <__ctype_b_loc@plt+0x15e8b>
  4187da:	mov    rdi,r15
  4187dd:	lea    rsi,[rsp+0x10]
  4187e2:	jmp    418304 <__ctype_b_loc@plt+0x16034>
  4187e7:	mov    ebp,0xf
  4187ec:	mov    rax,QWORD PTR [rbx+0x38]
  4187f0:	dec    WORD PTR [rax+0x60]
  4187f4:	mov    eax,ebp
  4187f6:	add    rsp,0x48
  4187fa:	pop    rbx
  4187fb:	pop    r12
  4187fd:	pop    r13
  4187ff:	pop    r14
  418801:	pop    r15
  418803:	pop    rbp
  418804:	ret    
  418805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41880f:	nop
  418810:	push   rbp
  418811:	push   r15
  418813:	push   r14
  418815:	push   r12
  418817:	push   rbx
  418818:	mov    r12,rcx
  41881b:	mov    rbx,rdx
  41881e:	mov    r15d,esi
  418821:	mov    r14,rdi
  418824:	cmp    DWORD PTR [rdx],0x5
  418827:	jne    418850 <__ctype_b_loc@plt+0x16580>
  418829:	cmp    DWORD PTR [rbx+0x10],0xffffffff
  41882d:	jne    418850 <__ctype_b_loc@plt+0x16580>
  41882f:	cmp    DWORD PTR [rbx+0x14],0xffffffff
  418833:	jne    418850 <__ctype_b_loc@plt+0x16580>
  418835:	cmp    DWORD PTR [r12],0x5
  41883a:	jne    418850 <__ctype_b_loc@plt+0x16580>
  41883c:	cmp    DWORD PTR [r12+0x10],0xffffffff
  418842:	jne    418850 <__ctype_b_loc@plt+0x16580>
  418844:	cmp    DWORD PTR [r12+0x14],0xffffffff
  41884a:	je     418919 <__ctype_b_loc@plt+0x16649>
  418850:	xor    ebp,ebp
  418852:	cmp    r15d,0x12
  418856:	je     41886b <__ctype_b_loc@plt+0x1659b>
  418858:	cmp    r15d,0x14
  41885c:	je     41886b <__ctype_b_loc@plt+0x1659b>
  41885e:	mov    rdi,r14
  418861:	mov    rsi,r12
  418864:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  418869:	mov    ebp,eax
  41886b:	mov    rdi,r14
  41886e:	mov    rsi,rbx
  418871:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  418876:	cmp    eax,ebp
  418878:	jle    4188ad <__ctype_b_loc@plt+0x165dd>
  41887a:	cmp    DWORD PTR [rbx],0xc
  41887d:	jne    418897 <__ctype_b_loc@plt+0x165c7>
  41887f:	mov    ecx,DWORD PTR [rbx+0x8]
  418882:	test   ecx,0x100
  418888:	jne    418897 <__ctype_b_loc@plt+0x165c7>
  41888a:	movzx  edx,BYTE PTR [r14+0x4a]
  41888f:	cmp    ecx,edx
  418891:	jl     418897 <__ctype_b_loc@plt+0x165c7>
  418893:	dec    DWORD PTR [r14+0x3c]
  418897:	cmp    DWORD PTR [r12],0xc
  41889c:	jne    4188eb <__ctype_b_loc@plt+0x1661b>
  41889e:	mov    ecx,DWORD PTR [r12+0x8]
  4188a3:	test   ecx,0x100
  4188a9:	je     4188de <__ctype_b_loc@plt+0x1660e>
  4188ab:	jmp    4188eb <__ctype_b_loc@plt+0x1661b>
  4188ad:	cmp    DWORD PTR [r12],0xc
  4188b2:	jne    4188ce <__ctype_b_loc@plt+0x165fe>
  4188b4:	mov    ecx,DWORD PTR [r12+0x8]
  4188b9:	test   ecx,0x100
  4188bf:	jne    4188ce <__ctype_b_loc@plt+0x165fe>
  4188c1:	movzx  edx,BYTE PTR [r14+0x4a]
  4188c6:	cmp    ecx,edx
  4188c8:	jl     4188ce <__ctype_b_loc@plt+0x165fe>
  4188ca:	dec    DWORD PTR [r14+0x3c]
  4188ce:	cmp    DWORD PTR [rbx],0xc
  4188d1:	jne    4188eb <__ctype_b_loc@plt+0x1661b>
  4188d3:	mov    ecx,DWORD PTR [rbx+0x8]
  4188d6:	test   ecx,0x100
  4188dc:	jne    4188eb <__ctype_b_loc@plt+0x1661b>
  4188de:	movzx  edx,BYTE PTR [r14+0x4a]
  4188e3:	cmp    ecx,edx
  4188e5:	jl     4188eb <__ctype_b_loc@plt+0x1661b>
  4188e7:	dec    DWORD PTR [r14+0x3c]
  4188eb:	shl    eax,0x17
  4188ee:	shl    ebp,0xe
  4188f1:	or     ebp,r15d
  4188f4:	or     ebp,eax
  4188f6:	mov    rax,QWORD PTR [r14+0x18]
  4188fa:	mov    edx,DWORD PTR [rax+0x8]
  4188fd:	mov    rdi,r14
  418900:	mov    esi,ebp
  418902:	call   419020 <__ctype_b_loc@plt+0x16d50>
  418907:	mov    DWORD PTR [rbx+0x8],eax
  41890a:	mov    DWORD PTR [rbx],0xb
  418910:	pop    rbx
  418911:	pop    r12
  418913:	pop    r14
  418915:	pop    r15
  418917:	pop    rbp
  418918:	ret    
  418919:	vxorpd xmm0,xmm0,xmm0
  41891d:	lea    eax,[r15-0xc]
  418921:	cmp    eax,0x8
  418924:	ja     4189ef <__ctype_b_loc@plt+0x1671f>
  41892a:	vmovsd xmm2,QWORD PTR [rbx+0x8]
  41892f:	vmovsd xmm1,QWORD PTR [r12+0x8]
  418936:	xor    ebp,ebp
  418938:	lea    rcx,[rip+0x10e75]        # 4297b4 <__ctype_b_loc@plt+0x274e4>
  41893f:	movsxd rax,DWORD PTR [rcx+rax*4]
  418943:	add    rax,rcx
  418946:	jmp    rax
  418948:	vaddsd xmm0,xmm2,xmm1
  41894c:	vucomisd xmm0,xmm0
  418950:	jnp    4189ef <__ctype_b_loc@plt+0x1671f>
  418956:	jmp    418850 <__ctype_b_loc@plt+0x16580>
  41895b:	vsubsd xmm0,xmm2,xmm1
  41895f:	vucomisd xmm0,xmm0
  418963:	jnp    4189ef <__ctype_b_loc@plt+0x1671f>
  418969:	jmp    418850 <__ctype_b_loc@plt+0x16580>
  41896e:	vmulsd xmm0,xmm2,xmm1
  418972:	vucomisd xmm0,xmm0
  418976:	jnp    4189ef <__ctype_b_loc@plt+0x1671f>
  418978:	jmp    418850 <__ctype_b_loc@plt+0x16580>
  41897d:	vxorpd xmm0,xmm0,xmm0
  418981:	vucomisd xmm1,xmm0
  418985:	jne    41898d <__ctype_b_loc@plt+0x166bd>
  418987:	jnp    41885e <__ctype_b_loc@plt+0x1658e>
  41898d:	vdivsd xmm0,xmm2,xmm1
  418991:	vucomisd xmm0,xmm0
  418995:	jnp    4189ef <__ctype_b_loc@plt+0x1671f>
  418997:	jmp    418850 <__ctype_b_loc@plt+0x16580>
  41899c:	vxorpd xmm0,xmm0,xmm0
  4189a0:	vucomisd xmm1,xmm0
  4189a4:	jne    4189ac <__ctype_b_loc@plt+0x166dc>
  4189a6:	jnp    41885e <__ctype_b_loc@plt+0x1658e>
  4189ac:	vdivsd xmm0,xmm2,xmm1
  4189b0:	vroundsd xmm0,xmm0,xmm0,0x9
  4189b6:	vmulsd xmm0,xmm1,xmm0
  4189ba:	vsubsd xmm0,xmm2,xmm0
  4189be:	vucomisd xmm0,xmm0
  4189c2:	jnp    4189ef <__ctype_b_loc@plt+0x1671f>
  4189c4:	jmp    418850 <__ctype_b_loc@plt+0x16580>
  4189c9:	vmovapd xmm0,xmm2
  4189cd:	call   4020c0 <pow@plt>
  4189d2:	vucomisd xmm0,xmm0
  4189d6:	jnp    4189ef <__ctype_b_loc@plt+0x1671f>
  4189d8:	jmp    418850 <__ctype_b_loc@plt+0x16580>
  4189dd:	vxorpd xmm0,xmm2,XMMWORD PTR [rip+0x112ab]        # 429c90 <__ctype_b_loc@plt+0x279c0>
  4189e5:	vucomisd xmm0,xmm0
  4189e9:	jp     418850 <__ctype_b_loc@plt+0x16580>
  4189ef:	vmovsd QWORD PTR [rbx+0x8],xmm0
  4189f4:	jmp    418910 <__ctype_b_loc@plt+0x16640>
  4189f9:	nop    DWORD PTR [rax+0x0]
  418a00:	push   rbx
  418a01:	mov    eax,DWORD PTR [rsi]
  418a03:	add    eax,0xfffffffa
  418a06:	cmp    eax,0x8
  418a09:	ja     418aae <__ctype_b_loc@plt+0x167de>
  418a0f:	mov    rbx,rsi
  418a12:	lea    rcx,[rip+0x10dbf]        # 4297d8 <__ctype_b_loc@plt+0x27508>
  418a19:	movsxd rax,DWORD PTR [rcx+rax*4]
  418a1d:	add    rax,rcx
  418a20:	jmp    rax
  418a22:	mov    DWORD PTR [rbx],0xc
  418a28:	pop    rbx
  418a29:	ret    
  418a2a:	mov    esi,DWORD PTR [rbx+0x8]
  418a2d:	shl    esi,0x17
  418a30:	or     esi,0x4
  418a33:	jmp    418a7b <__ctype_b_loc@plt+0x167ab>
  418a35:	mov    esi,DWORD PTR [rbx+0x8]
  418a38:	shl    esi,0xe
  418a3b:	or     esi,0x5
  418a3e:	jmp    418a7b <__ctype_b_loc@plt+0x167ab>
  418a40:	mov    eax,DWORD PTR [rbx+0xc]
  418a43:	test   eax,0x100
  418a48:	jne    418a55 <__ctype_b_loc@plt+0x16785>
  418a4a:	movzx  ecx,BYTE PTR [rdi+0x4a]
  418a4e:	cmp    eax,ecx
  418a50:	jl     418a55 <__ctype_b_loc@plt+0x16785>
  418a52:	dec    DWORD PTR [rdi+0x3c]
  418a55:	mov    eax,DWORD PTR [rbx+0x8]
  418a58:	test   eax,0x100
  418a5d:	jne    418a6d <__ctype_b_loc@plt+0x1679d>
  418a5f:	movzx  ecx,BYTE PTR [rdi+0x4a]
  418a63:	cmp    eax,ecx
  418a65:	jl     418a6d <__ctype_b_loc@plt+0x1679d>
  418a67:	dec    DWORD PTR [rdi+0x3c]
  418a6a:	mov    eax,DWORD PTR [rbx+0x8]
  418a6d:	mov    esi,DWORD PTR [rbx+0xc]
  418a70:	shl    eax,0x17
  418a73:	shl    esi,0xe
  418a76:	or     esi,eax
  418a78:	or     esi,0x6
  418a7b:	mov    rax,QWORD PTR [rdi+0x18]
  418a7f:	mov    edx,DWORD PTR [rax+0x8]
  418a82:	call   419020 <__ctype_b_loc@plt+0x16d50>
  418a87:	mov    DWORD PTR [rbx+0x8],eax
  418a8a:	jmp    418aa8 <__ctype_b_loc@plt+0x167d8>
  418a8c:	mov    rax,QWORD PTR [rdi]
  418a8f:	mov    rax,QWORD PTR [rax+0x18]
  418a93:	movsxd rcx,DWORD PTR [rbx+0x8]
  418a97:	mov    edx,0x7fffff
  418a9c:	and    edx,DWORD PTR [rax+rcx*4]
  418a9f:	or     edx,0x1000000
  418aa5:	mov    DWORD PTR [rax+rcx*4],edx
  418aa8:	mov    DWORD PTR [rbx],0xb
  418aae:	pop    rbx
  418aaf:	ret    
  418ab0:	mov    DWORD PTR [rbx],0xc
  418ab6:	mov    rax,QWORD PTR [rdi]
  418ab9:	mov    rax,QWORD PTR [rax+0x18]
  418abd:	movsxd rcx,DWORD PTR [rbx+0x8]
  418ac1:	mov    eax,DWORD PTR [rax+rcx*4]
  418ac4:	shr    eax,0x6
  418ac7:	movzx  eax,al
  418aca:	mov    DWORD PTR [rbx+0x8],eax
  418acd:	pop    rbx
  418ace:	ret    
  418acf:	nop
  418ad0:	push   rbp
  418ad1:	push   r15
  418ad3:	push   r14
  418ad5:	push   r13
  418ad7:	push   r12
  418ad9:	push   rbx
  418ada:	sub    rsp,0x18
  418ade:	mov    rbx,rsi
  418ae1:	mov    r15,rdi
  418ae4:	mov    DWORD PTR [rsp+0x8],edx
  418ae8:	call   419320 <__ctype_b_loc@plt+0x17050>
  418aed:	cmp    DWORD PTR [rbx],0xa
  418af0:	jne    418b92 <__ctype_b_loc@plt+0x168c2>
  418af6:	mov    r14d,DWORD PTR [rbx+0x8]
  418afa:	cmp    r14d,0xffffffff
  418afe:	je     418b92 <__ctype_b_loc@plt+0x168c2>
  418b04:	mov    edx,DWORD PTR [rbx+0x10]
  418b07:	cmp    edx,0xffffffff
  418b0a:	je     418b8e <__ctype_b_loc@plt+0x168be>
  418b10:	mov    r12,rbx
  418b13:	mov    rax,QWORD PTR [r15]
  418b16:	mov    rbp,QWORD PTR [rax+0x18]
  418b1a:	nop    WORD PTR [rax+rax*1+0x0]
  418b20:	mov    ecx,edx
  418b22:	movsxd rbx,edx
  418b25:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418b29:	mov    edx,eax
  418b2b:	shr    edx,0xe
  418b2e:	lea    esi,[rdx-0x1ffff]
  418b34:	cmp    esi,0xffffffff
  418b37:	lea    edx,[rbx+rdx*1-0x1fffe]
  418b3e:	cmove  edx,esi
  418b41:	cmp    edx,0xffffffff
  418b44:	jne    418b20 <__ctype_b_loc@plt+0x16850>
  418b46:	not    ecx
  418b48:	add    r14d,ecx
  418b4b:	mov    ecx,r14d
  418b4e:	neg    ecx
  418b50:	cmovl  ecx,r14d
  418b54:	cmp    ecx,0x20000
  418b5a:	jl     418b73 <__ctype_b_loc@plt+0x168a3>
  418b5c:	mov    rdi,QWORD PTR [r15+0x18]
  418b60:	mov    edx,DWORD PTR [rdi+0x10]
  418b63:	lea    rsi,[rip+0x11781]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  418b6a:	call   413660 <__ctype_b_loc@plt+0x11390>
  418b6f:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418b73:	and    eax,0x3fff
  418b78:	shl    r14d,0xe
  418b7c:	lea    eax,[r14+rax*1]
  418b80:	add    eax,0x7fffc000
  418b85:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  418b89:	mov    rbx,r12
  418b8c:	jmp    418b92 <__ctype_b_loc@plt+0x168c2>
  418b8e:	mov    DWORD PTR [rbx+0x10],r14d
  418b92:	mov    edx,DWORD PTR [rbx+0x10]
  418b95:	mov    eax,DWORD PTR [rbx+0x14]
  418b98:	cmp    edx,eax
  418b9a:	mov    r8d,DWORD PTR [rsp+0x8]
  418b9f:	je     418ffc <__ctype_b_loc@plt+0x16d2c>
  418ba5:	cmp    edx,0xffffffff
  418ba8:	je     418c08 <__ctype_b_loc@plt+0x16938>
  418baa:	mov    rcx,QWORD PTR [r15]
  418bad:	mov    rcx,QWORD PTR [rcx+0x18]
  418bb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  418bc0:	movsxd rdx,edx
  418bc3:	test   edx,edx
  418bc5:	jle    418bdb <__ctype_b_loc@plt+0x1690b>
  418bc7:	mov    esi,DWORD PTR [rcx+rdx*4-0x4]
  418bcb:	movabs rdi,0x20f800000
  418bd5:	bt     rdi,rsi
  418bd9:	jb     418bde <__ctype_b_loc@plt+0x1690e>
  418bdb:	mov    esi,DWORD PTR [rcx+rdx*4]
  418bde:	and    esi,0x3f
  418be1:	cmp    esi,0x1b
  418be4:	jne    418c70 <__ctype_b_loc@plt+0x169a0>
  418bea:	mov    esi,DWORD PTR [rcx+rdx*4]
  418bed:	shr    esi,0xe
  418bf0:	lea    edi,[rsi-0x1ffff]
  418bf6:	cmp    edi,0xffffffff
  418bf9:	lea    edx,[rdx+rsi*1-0x1fffe]
  418c00:	cmove  edx,edi
  418c03:	cmp    edx,0xffffffff
  418c06:	jne    418bc0 <__ctype_b_loc@plt+0x168f0>
  418c08:	mov    DWORD PTR [rsp+0x10],0xffffffff
  418c10:	cmp    eax,0xffffffff
  418c13:	je     418c63 <__ctype_b_loc@plt+0x16993>
  418c15:	mov    rcx,QWORD PTR [r15]
  418c18:	mov    rcx,QWORD PTR [rcx+0x18]
  418c1c:	nop    DWORD PTR [rax+0x0]
  418c20:	cdqe   
  418c22:	test   eax,eax
  418c24:	jle    418c3a <__ctype_b_loc@plt+0x1696a>
  418c26:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
  418c2a:	movabs rsi,0x20f800000
  418c34:	bt     rsi,rdx
  418c38:	jb     418c3d <__ctype_b_loc@plt+0x1696d>
  418c3a:	mov    edx,DWORD PTR [rcx+rax*4]
  418c3d:	and    edx,0x3f
  418c40:	cmp    edx,0x1b
  418c43:	jne    418c70 <__ctype_b_loc@plt+0x169a0>
  418c45:	mov    edx,DWORD PTR [rcx+rax*4]
  418c48:	shr    edx,0xe
  418c4b:	lea    esi,[rdx-0x1ffff]
  418c51:	cmp    esi,0xffffffff
  418c54:	lea    eax,[rax+rdx*1-0x1fffe]
  418c5b:	cmove  eax,esi
  418c5e:	cmp    eax,0xffffffff
  418c61:	jne    418c20 <__ctype_b_loc@plt+0x16950>
  418c63:	mov    DWORD PTR [rsp+0xc],0xffffffff
  418c6b:	jmp    418d81 <__ctype_b_loc@plt+0x16ab1>
  418c70:	mov    r13d,0xffffffff
  418c76:	cmp    DWORD PTR [rbx],0xa
  418c79:	je     418c8b <__ctype_b_loc@plt+0x169bb>
  418c7b:	mov    rdi,r15
  418c7e:	call   417600 <__ctype_b_loc@plt+0x15330>
  418c83:	mov    r8d,DWORD PTR [rsp+0x8]
  418c88:	mov    r13d,eax
  418c8b:	mov    eax,DWORD PTR [r15+0x30]
  418c8f:	mov    DWORD PTR [r15+0x34],eax
  418c93:	mov    ebp,r8d
  418c96:	shl    ebp,0x6
  418c99:	mov    esi,ebp
  418c9b:	or     esi,0x4002
  418ca1:	mov    rax,QWORD PTR [r15+0x18]
  418ca5:	mov    edx,DWORD PTR [rax+0x8]
  418ca8:	mov    rdi,r15
  418cab:	call   419020 <__ctype_b_loc@plt+0x16d50>
  418cb0:	mov    DWORD PTR [rsp+0xc],eax
  418cb4:	mov    eax,DWORD PTR [r15+0x30]
  418cb8:	mov    DWORD PTR [r15+0x34],eax
  418cbc:	or     ebp,0x800002
  418cc2:	mov    rax,QWORD PTR [r15+0x18]
  418cc6:	mov    edx,DWORD PTR [rax+0x8]
  418cc9:	mov    rdi,r15
  418ccc:	mov    esi,ebp
  418cce:	call   419020 <__ctype_b_loc@plt+0x16d50>
  418cd3:	mov    DWORD PTR [rsp+0x10],eax
  418cd7:	mov    eax,DWORD PTR [r15+0x30]
  418cdb:	mov    DWORD PTR [r15+0x34],eax
  418cdf:	cmp    r13d,0xffffffff
  418ce3:	je     418d7c <__ctype_b_loc@plt+0x16aac>
  418ce9:	mov    edx,DWORD PTR [r15+0x38]
  418ced:	cmp    edx,0xffffffff
  418cf0:	je     418d78 <__ctype_b_loc@plt+0x16aa8>
  418cf6:	mov    r14,rbx
  418cf9:	mov    rax,QWORD PTR [r15]
  418cfc:	mov    rbp,QWORD PTR [rax+0x18]
  418d00:	mov    ecx,edx
  418d02:	movsxd rbx,edx
  418d05:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418d09:	mov    edx,eax
  418d0b:	shr    edx,0xe
  418d0e:	lea    esi,[rdx-0x1ffff]
  418d14:	cmp    esi,0xffffffff
  418d17:	lea    edx,[rbx+rdx*1-0x1fffe]
  418d1e:	cmove  edx,esi
  418d21:	cmp    edx,0xffffffff
  418d24:	jne    418d00 <__ctype_b_loc@plt+0x16a30>
  418d26:	not    ecx
  418d28:	add    r13d,ecx
  418d2b:	mov    ecx,r13d
  418d2e:	neg    ecx
  418d30:	cmovl  ecx,r13d
  418d34:	cmp    ecx,0x20000
  418d3a:	mov    r8d,DWORD PTR [rsp+0x8]
  418d3f:	jl     418d5d <__ctype_b_loc@plt+0x16a8d>
  418d41:	mov    rdi,QWORD PTR [r15+0x18]
  418d45:	mov    edx,DWORD PTR [rdi+0x10]
  418d48:	lea    rsi,[rip+0x1159c]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  418d4f:	call   413660 <__ctype_b_loc@plt+0x11390>
  418d54:	mov    r8d,DWORD PTR [rsp+0x8]
  418d59:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418d5d:	and    eax,0x3fff
  418d62:	shl    r13d,0xe
  418d66:	lea    eax,[rax+r13*1]
  418d6a:	add    eax,0x7fffc000
  418d6f:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  418d73:	mov    rbx,r14
  418d76:	jmp    418d81 <__ctype_b_loc@plt+0x16ab1>
  418d78:	mov    DWORD PTR [r15+0x38],r13d
  418d7c:	mov    r8d,DWORD PTR [rsp+0x8]
  418d81:	mov    r13d,DWORD PTR [r15+0x30]
  418d85:	mov    DWORD PTR [r15+0x34],r13d
  418d89:	mov    r14d,DWORD PTR [rbx+0x14]
  418d8d:	cmp    r14d,0xffffffff
  418d91:	je     418ecf <__ctype_b_loc@plt+0x16bff>
  418d97:	movzx  eax,r8b
  418d9b:	shl    eax,0x6
  418d9e:	mov    DWORD PTR [rsp+0x14],eax
  418da2:	jmp    418dee <__ctype_b_loc@plt+0x16b1e>
  418da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418dae:	xchg   ax,ax
  418db0:	mov    rdi,QWORD PTR [r15+0x18]
  418db4:	mov    edx,DWORD PTR [rdi+0x10]
  418db7:	lea    rsi,[rip+0x1152d]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  418dbe:	call   413660 <__ctype_b_loc@plt+0x11390>
  418dc3:	mov    r8d,DWORD PTR [rsp+0x8]
  418dc8:	mov    eax,DWORD PTR [r12]
  418dcc:	and    eax,0x3fff
  418dd1:	shl    r14d,0xe
  418dd5:	lea    eax,[r14+rax*1]
  418dd9:	add    eax,0x7fffc000
  418dde:	mov    DWORD PTR [r12],eax
  418de2:	mov    r14d,ebp
  418de5:	cmp    ebp,0xffffffff
  418de8:	je     418ecf <__ctype_b_loc@plt+0x16bff>
  418dee:	mov    rax,QWORD PTR [r15]
  418df1:	mov    rax,QWORD PTR [rax+0x18]
  418df5:	movsxd rcx,r14d
  418df8:	lea    r12,[rax+rcx*4]
  418dfc:	mov    eax,DWORD PTR [rax+rcx*4]
  418dff:	mov    edx,eax
  418e01:	shr    edx,0xe
  418e04:	lea    esi,[rdx-0x1ffff]
  418e0a:	cmp    esi,0xffffffff
  418e0d:	lea    ebp,[rcx+rdx*1-0x1fffe]
  418e14:	cmove  ebp,esi
  418e17:	test   ecx,ecx
  418e19:	jle    418e30 <__ctype_b_loc@plt+0x16b60>
  418e1b:	mov    ecx,DWORD PTR [r12-0x4]
  418e20:	movabs rdx,0x20f800000
  418e2a:	bt     rdx,rcx
  418e2e:	jb     418e40 <__ctype_b_loc@plt+0x16b70>
  418e30:	mov    ecx,eax
  418e32:	mov    rdx,r12
  418e35:	jmp    418e45 <__ctype_b_loc@plt+0x16b75>
  418e37:	nop    WORD PTR [rax+rax*1+0x0]
  418e40:	lea    rdx,[r12-0x4]
  418e45:	mov    esi,ecx
  418e47:	and    esi,0x3f
  418e4a:	cmp    esi,0x1b
  418e4d:	jne    418e70 <__ctype_b_loc@plt+0x16ba0>
  418e4f:	mov    eax,ecx
  418e51:	shr    eax,0x17
  418e54:	cmp    r8d,0xff
  418e5b:	je     418ea0 <__ctype_b_loc@plt+0x16bd0>
  418e5d:	cmp    eax,r8d
  418e60:	je     418ea0 <__ctype_b_loc@plt+0x16bd0>
  418e62:	and    ecx,0xffffc03f
  418e68:	or     ecx,DWORD PTR [rsp+0x14]
  418e6c:	jmp    418eae <__ctype_b_loc@plt+0x16bde>
  418e6e:	xchg   ax,ax
  418e70:	not    r14d
  418e73:	add    r14d,DWORD PTR [rsp+0xc]
  418e78:	mov    ecx,r14d
  418e7b:	neg    ecx
  418e7d:	cmovl  ecx,r14d
  418e81:	cmp    ecx,0x20000
  418e87:	jl     418dcc <__ctype_b_loc@plt+0x16afc>
  418e8d:	jmp    418db0 <__ctype_b_loc@plt+0x16ae0>
  418e92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e9c:	nop    DWORD PTR [rax+0x0]
  418ea0:	shl    eax,0x6
  418ea3:	and    ecx,0x7fc000
  418ea9:	or     ecx,eax
  418eab:	or     ecx,0x1a
  418eae:	mov    DWORD PTR [rdx],ecx
  418eb0:	not    r14d
  418eb3:	add    r14d,r13d
  418eb6:	mov    eax,r14d
  418eb9:	neg    eax
  418ebb:	cmovl  eax,r14d
  418ebf:	cmp    eax,0x1ffff
  418ec4:	jg     418db0 <__ctype_b_loc@plt+0x16ae0>
  418eca:	jmp    418dc8 <__ctype_b_loc@plt+0x16af8>
  418ecf:	mov    ebp,DWORD PTR [rbx+0x10]
  418ed2:	cmp    ebp,0xffffffff
  418ed5:	je     418ffc <__ctype_b_loc@plt+0x16d2c>
  418edb:	movzx  eax,r8b
  418edf:	shl    eax,0x6
  418ee2:	mov    DWORD PTR [rsp+0xc],eax
  418ee6:	jmp    418f2d <__ctype_b_loc@plt+0x16c5d>
  418ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  418ef0:	mov    rdi,QWORD PTR [r15+0x18]
  418ef4:	mov    edx,DWORD PTR [rdi+0x10]
  418ef7:	lea    rsi,[rip+0x113ed]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  418efe:	call   413660 <__ctype_b_loc@plt+0x11390>
  418f03:	mov    r8d,DWORD PTR [rsp+0x8]
  418f08:	mov    eax,DWORD PTR [r12]
  418f0c:	and    eax,0x3fff
  418f11:	shl    ebp,0xe
  418f14:	lea    eax,[rax+rbp*1]
  418f17:	add    eax,0x7fffc000
  418f1c:	mov    DWORD PTR [r12],eax
  418f20:	mov    ebp,r14d
  418f23:	cmp    r14d,0xffffffff
  418f27:	je     418ffc <__ctype_b_loc@plt+0x16d2c>
  418f2d:	mov    rax,QWORD PTR [r15]
  418f30:	mov    rax,QWORD PTR [rax+0x18]
  418f34:	movsxd rcx,ebp
  418f37:	lea    r12,[rax+rcx*4]
  418f3b:	mov    eax,DWORD PTR [rax+rcx*4]
  418f3e:	mov    edx,eax
  418f40:	shr    edx,0xe
  418f43:	lea    esi,[rdx-0x1ffff]
  418f49:	cmp    esi,0xffffffff
  418f4c:	lea    r14d,[rcx+rdx*1-0x1fffe]
  418f54:	cmove  r14d,esi
  418f58:	test   ecx,ecx
  418f5a:	jle    418f71 <__ctype_b_loc@plt+0x16ca1>
  418f5c:	mov    ecx,DWORD PTR [r12-0x4]
  418f61:	movabs rdx,0x20f800000
  418f6b:	bt     rdx,rcx
  418f6f:	jb     418f80 <__ctype_b_loc@plt+0x16cb0>
  418f71:	mov    ecx,eax
  418f73:	mov    rdx,r12
  418f76:	jmp    418f85 <__ctype_b_loc@plt+0x16cb5>
  418f78:	nop    DWORD PTR [rax+rax*1+0x0]
  418f80:	lea    rdx,[r12-0x4]
  418f85:	mov    esi,ecx
  418f87:	and    esi,0x3f
  418f8a:	cmp    esi,0x1b
  418f8d:	jne    418fb0 <__ctype_b_loc@plt+0x16ce0>
  418f8f:	mov    eax,ecx
  418f91:	shr    eax,0x17
  418f94:	cmp    r8d,0xff
  418f9b:	je     418fd0 <__ctype_b_loc@plt+0x16d00>
  418f9d:	cmp    eax,r8d
  418fa0:	je     418fd0 <__ctype_b_loc@plt+0x16d00>
  418fa2:	and    ecx,0xffffc03f
  418fa8:	or     ecx,DWORD PTR [rsp+0xc]
  418fac:	jmp    418fde <__ctype_b_loc@plt+0x16d0e>
  418fae:	xchg   ax,ax
  418fb0:	not    ebp
  418fb2:	add    ebp,DWORD PTR [rsp+0x10]
  418fb6:	mov    ecx,ebp
  418fb8:	neg    ecx
  418fba:	cmovl  ecx,ebp
  418fbd:	cmp    ecx,0x20000
  418fc3:	jl     418f0c <__ctype_b_loc@plt+0x16c3c>
  418fc9:	jmp    418ef0 <__ctype_b_loc@plt+0x16c20>
  418fce:	xchg   ax,ax
  418fd0:	shl    eax,0x6
  418fd3:	and    ecx,0x7fc000
  418fd9:	or     ecx,eax
  418fdb:	or     ecx,0x1a
  418fde:	mov    DWORD PTR [rdx],ecx
  418fe0:	not    ebp
  418fe2:	add    ebp,r13d
  418fe5:	mov    eax,ebp
  418fe7:	neg    eax
  418fe9:	cmovl  eax,ebp
  418fec:	cmp    eax,0x1ffff
  418ff1:	jg     418ef0 <__ctype_b_loc@plt+0x16c20>
  418ff7:	jmp    418f08 <__ctype_b_loc@plt+0x16c38>
  418ffc:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  419004:	mov    DWORD PTR [rbx+0x8],r8d
  419008:	mov    DWORD PTR [rbx],0xc
  41900e:	add    rsp,0x18
  419012:	pop    rbx
  419013:	pop    r12
  419015:	pop    r13
  419017:	pop    r14
  419019:	pop    r15
  41901b:	pop    rbp
  41901c:	ret    
  41901d:	nop    DWORD PTR [rax]
  419020:	push   rbp
  419021:	push   r15
  419023:	push   r14
  419025:	push   r13
  419027:	push   r12
  419029:	push   rbx
  41902a:	sub    rsp,0x18
  41902e:	mov    DWORD PTR [rsp+0x14],edx
  419032:	mov    DWORD PTR [rsp+0x10],esi
  419036:	mov    r13,rdi
  419039:	mov    r14,QWORD PTR [rdi]
  41903c:	mov    ebx,DWORD PTR [rdi+0x38]
  41903f:	mov    ebp,DWORD PTR [rdi+0x30]
  419042:	cmp    ebx,0xffffffff
  419045:	mov    QWORD PTR [rsp+0x8],r14
  41904a:	je     419137 <__ctype_b_loc@plt+0x16e67>
  419050:	movabs r12,0x20f800000
  41905a:	mov    rax,r14
  41905d:	nop    DWORD PTR [rax]
  419060:	mov    rax,QWORD PTR [rax+0x18]
  419064:	movsxd rcx,ebx
  419067:	lea    r15,[rax+rcx*4]
  41906b:	mov    eax,DWORD PTR [rax+rcx*4]
  41906e:	mov    edx,eax
  419070:	shr    edx,0xe
  419073:	lea    esi,[rdx-0x1ffff]
  419079:	cmp    esi,0xffffffff
  41907c:	lea    r14d,[rcx+rdx*1-0x1fffe]
  419084:	cmove  r14d,esi
  419088:	test   ecx,ecx
  41908a:	jle    419096 <__ctype_b_loc@plt+0x16dc6>
  41908c:	mov    ecx,DWORD PTR [r15-0x4]
  419090:	bt     r12,rcx
  419094:	jb     4190a0 <__ctype_b_loc@plt+0x16dd0>
  419096:	mov    ecx,eax
  419098:	mov    rdx,r15
  41909b:	jmp    4190a4 <__ctype_b_loc@plt+0x16dd4>
  41909d:	nop    DWORD PTR [rax]
  4190a0:	lea    rdx,[r15-0x4]
  4190a4:	mov    esi,ecx
  4190a6:	and    esi,0x3f
  4190a9:	cmp    esi,0x1b
  4190ac:	jne    4190e0 <__ctype_b_loc@plt+0x16e10>
  4190ae:	mov    eax,ecx
  4190b0:	shr    eax,0x11
  4190b3:	and    eax,0xffffffc0
  4190b6:	and    ecx,0x7fc000
  4190bc:	or     ecx,eax
  4190be:	or     ecx,0x1a
  4190c1:	mov    DWORD PTR [rdx],ecx
  4190c3:	not    ebx
  4190c5:	add    ebx,ebp
  4190c7:	mov    eax,ebx
  4190c9:	neg    eax
  4190cb:	cmovl  eax,ebx
  4190ce:	cmp    eax,0x1ffff
  4190d3:	jg     4190f3 <__ctype_b_loc@plt+0x16e23>
  4190d5:	jmp    419106 <__ctype_b_loc@plt+0x16e36>
  4190d7:	nop    WORD PTR [rax+rax*1+0x0]
  4190e0:	not    ebx
  4190e2:	add    ebx,ebp
  4190e4:	mov    ecx,ebx
  4190e6:	neg    ecx
  4190e8:	cmovl  ecx,ebx
  4190eb:	cmp    ecx,0x20000
  4190f1:	jl     419109 <__ctype_b_loc@plt+0x16e39>
  4190f3:	mov    rdi,QWORD PTR [r13+0x18]
  4190f7:	mov    edx,DWORD PTR [rdi+0x10]
  4190fa:	lea    rsi,[rip+0x111ea]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  419101:	call   413660 <__ctype_b_loc@plt+0x11390>
  419106:	mov    eax,DWORD PTR [r15]
  419109:	and    eax,0x3fff
  41910e:	shl    ebx,0xe
  419111:	lea    eax,[rbx+rax*1]
  419114:	add    eax,0x7fffc000
  419119:	mov    DWORD PTR [r15],eax
  41911c:	cmp    r14d,0xffffffff
  419120:	je     41912e <__ctype_b_loc@plt+0x16e5e>
  419122:	mov    rax,QWORD PTR [r13+0x0]
  419126:	mov    ebx,r14d
  419129:	jmp    419060 <__ctype_b_loc@plt+0x16d90>
  41912e:	mov    ebp,DWORD PTR [r13+0x30]
  419132:	mov    r14,QWORD PTR [rsp+0x8]
  419137:	mov    DWORD PTR [r13+0x38],0xffffffff
  41913f:	mov    eax,DWORD PTR [r14+0x50]
  419143:	cmp    ebp,eax
  419145:	jge    419150 <__ctype_b_loc@plt+0x16e80>
  419147:	mov    rax,QWORD PTR [r14+0x18]
  41914b:	jmp    4191da <__ctype_b_loc@plt+0x16f0a>
  419150:	mov    r15,QWORD PTR [r13+0x20]
  419154:	mov    rsi,QWORD PTR [r14+0x18]
  419158:	cmp    eax,0x3ffffffe
  41915d:	jge    41916f <__ctype_b_loc@plt+0x16e9f>
  41915f:	lea    ecx,[rax+rax*1]
  419162:	cmp    ecx,0x3
  419165:	mov    ebx,0x4
  41916a:	cmovg  ebx,ecx
  41916d:	jmp    419196 <__ctype_b_loc@plt+0x16ec6>
  41916f:	mov    ebx,0x7ffffffd
  419174:	cmp    eax,0x7ffffffd
  419179:	jl     419196 <__ctype_b_loc@plt+0x16ec6>
  41917b:	mov    rbp,rsi
  41917e:	lea    rsi,[rip+0x11153]        # 42a2d8 <__ctype_b_loc@plt+0x28008>
  419185:	mov    rdi,r15
  419188:	xor    eax,eax
  41918a:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41918f:	mov    rsi,rbp
  419192:	mov    eax,DWORD PTR [r14+0x50]
  419196:	movsxd rbp,eax
  419199:	shl    rbp,0x2
  41919d:	mov    r14d,ebx
  4191a0:	shl    r14,0x2
  4191a4:	mov    r12,QWORD PTR [r15+0x20]
  4191a8:	mov    rdi,QWORD PTR [r12+0x18]
  4191ad:	mov    rdx,rbp
  4191b0:	mov    rcx,r14
  4191b3:	call   QWORD PTR [r12+0x10]
  4191b8:	test   rax,rax
  4191bb:	je     4192a2 <__ctype_b_loc@plt+0x16fd2>
  4191c1:	sub    r14,rbp
  4191c4:	add    QWORD PTR [r12+0x78],r14
  4191c9:	mov    r14,QWORD PTR [rsp+0x8]
  4191ce:	mov    DWORD PTR [r14+0x50],ebx
  4191d2:	mov    QWORD PTR [r14+0x18],rax
  4191d6:	mov    ebp,DWORD PTR [r13+0x30]
  4191da:	movsxd rcx,ebp
  4191dd:	mov    edx,DWORD PTR [rsp+0x10]
  4191e1:	mov    DWORD PTR [rax+rcx*4],edx
  4191e4:	mov    ecx,DWORD PTR [r13+0x30]
  4191e8:	mov    eax,DWORD PTR [r14+0x54]
  4191ec:	cmp    ecx,eax
  4191ee:	jge    4191f9 <__ctype_b_loc@plt+0x16f29>
  4191f0:	mov    rax,QWORD PTR [r14+0x28]
  4191f4:	jmp    41927e <__ctype_b_loc@plt+0x16fae>
  4191f9:	mov    r12,QWORD PTR [r13+0x20]
  4191fd:	mov    rsi,QWORD PTR [r14+0x28]
  419201:	cmp    eax,0x3ffffffe
  419206:	jge    419218 <__ctype_b_loc@plt+0x16f48>
  419208:	lea    ecx,[rax+rax*1]
  41920b:	cmp    ecx,0x3
  41920e:	mov    ebx,0x4
  419213:	cmovg  ebx,ecx
  419216:	jmp    41923f <__ctype_b_loc@plt+0x16f6f>
  419218:	mov    ebx,0x7ffffffd
  41921d:	cmp    eax,0x7ffffffd
  419222:	jl     41923f <__ctype_b_loc@plt+0x16f6f>
  419224:	mov    rbp,rsi
  419227:	lea    rsi,[rip+0x110aa]        # 42a2d8 <__ctype_b_loc@plt+0x28008>
  41922e:	mov    rdi,r12
  419231:	xor    eax,eax
  419233:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  419238:	mov    rsi,rbp
  41923b:	mov    eax,DWORD PTR [r14+0x54]
  41923f:	movsxd r14,eax
  419242:	shl    r14,0x2
  419246:	mov    ebp,ebx
  419248:	shl    rbp,0x2
  41924c:	mov    r15,QWORD PTR [r12+0x20]
  419251:	mov    rdi,QWORD PTR [r15+0x18]
  419255:	mov    rdx,r14
  419258:	mov    rcx,rbp
  41925b:	call   QWORD PTR [r15+0x10]
  41925f:	test   rax,rax
  419262:	je     4192b3 <__ctype_b_loc@plt+0x16fe3>
  419264:	sub    rbp,r14
  419267:	add    QWORD PTR [r15+0x78],rbp
  41926b:	mov    r12,QWORD PTR [rsp+0x8]
  419270:	mov    DWORD PTR [r12+0x54],ebx
  419275:	mov    QWORD PTR [r12+0x28],rax
  41927a:	mov    ecx,DWORD PTR [r13+0x30]
  41927e:	movsxd rcx,ecx
  419281:	mov    edx,DWORD PTR [rsp+0x14]
  419285:	mov    DWORD PTR [rax+rcx*4],edx
  419288:	mov    eax,DWORD PTR [r13+0x30]
  41928c:	lea    ecx,[rax+0x1]
  41928f:	mov    DWORD PTR [r13+0x30],ecx
  419293:	add    rsp,0x18
  419297:	pop    rbx
  419298:	pop    r12
  41929a:	pop    r13
  41929c:	pop    r14
  41929e:	pop    r15
  4192a0:	pop    rbp
  4192a1:	ret    
  4192a2:	mov    rdi,QWORD PTR [r15+0xa8]
  4192a9:	test   rdi,rdi
  4192ac:	jne    4192fc <__ctype_b_loc@plt+0x1702c>
  4192ae:	mov    rbx,r15
  4192b1:	jmp    4192c3 <__ctype_b_loc@plt+0x16ff3>
  4192b3:	mov    rdi,QWORD PTR [r12+0xa8]
  4192bb:	test   rdi,rdi
  4192be:	jne    4192fc <__ctype_b_loc@plt+0x1702c>
  4192c0:	mov    rbx,r12
  4192c3:	mov    rax,rbx
  4192c6:	mov    BYTE PTR [rbx+0xa],0x4
  4192ca:	mov    rax,QWORD PTR [rbx+0x20]
  4192ce:	cmp    QWORD PTR [rax+0x98],0x0
  4192d6:	je     4192f2 <__ctype_b_loc@plt+0x17022>
  4192d8:	mov    rdi,rbx
  4192db:	mov    esi,0x4
  4192e0:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4192e5:	mov    rax,QWORD PTR [rbx+0x20]
  4192e9:	mov    rdi,rbx
  4192ec:	call   QWORD PTR [rax+0x98]
  4192f2:	mov    edi,0x1
  4192f7:	call   402280 <exit@plt>
  4192fc:	mov    DWORD PTR [rdi+0xd0],0x4
  419306:	add    rdi,0x8
  41930a:	mov    esi,0x1
  41930f:	call   402230 <longjmp@plt>
  419314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41931e:	xchg   ax,ax
  419320:	push   rbp
  419321:	push   r14
  419323:	push   rbx
  419324:	sub    rsp,0x10
  419328:	mov    r14d,edx
  41932b:	mov    rbx,rsi
  41932e:	mov    rbp,rdi
  419331:	call   418a00 <__ctype_b_loc@plt+0x16730>
  419336:	mov    eax,DWORD PTR [rbx]
  419338:	lea    ecx,[rax-0x1]
  41933b:	cmp    ecx,0xb
  41933e:	ja     419488 <__ctype_b_loc@plt+0x171b8>
  419344:	lea    rdx,[rip+0x104b1]        # 4297fc <__ctype_b_loc@plt+0x2752c>
  41934b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41934f:	add    rcx,rdx
  419352:	jmp    rcx
  419354:	xor    esi,esi
  419356:	cmp    eax,0x2
  419359:	sete   sil
  41935d:	mov    eax,r14d
  419360:	shl    eax,0x6
  419363:	shl    esi,0x17
  419366:	or     esi,eax
  419368:	or     esi,0x2
  41936b:	jmp    41946f <__ctype_b_loc@plt+0x1719f>
  419370:	movsxd rax,DWORD PTR [rbp+0x30]
  419374:	cmp    eax,DWORD PTR [rbp+0x34]
  419377:	jle    41945e <__ctype_b_loc@plt+0x1718e>
  41937d:	test   eax,eax
  41937f:	je     419455 <__ctype_b_loc@plt+0x17185>
  419385:	mov    rcx,QWORD PTR [rbp+0x0]
  419389:	mov    rcx,QWORD PTR [rcx+0x18]
  41938d:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
  419391:	mov    esi,edx
  419393:	and    esi,0x3f
  419396:	cmp    esi,0x3
  419399:	jne    41945e <__ctype_b_loc@plt+0x1718e>
  41939f:	mov    esi,edx
  4193a1:	shr    esi,0x6
  4193a4:	movzx  esi,sil
  4193a8:	cmp    esi,r14d
  4193ab:	jg     41945e <__ctype_b_loc@plt+0x1718e>
  4193b1:	mov    esi,edx
  4193b3:	shr    esi,0x17
  4193b6:	lea    edi,[rsi+0x1]
  4193b9:	cmp    edi,r14d
  4193bc:	jl     41945e <__ctype_b_loc@plt+0x1718e>
  4193c2:	cmp    esi,r14d
  4193c5:	jge    41947e <__ctype_b_loc@plt+0x171ae>
  4193cb:	and    edx,0x7fffff
  4193d1:	mov    esi,r14d
  4193d4:	shl    esi,0x17
  4193d7:	or     esi,edx
  4193d9:	mov    DWORD PTR [rcx+rax*4-0x4],esi
  4193dd:	jmp    41947e <__ctype_b_loc@plt+0x171ae>
  4193e2:	mov    esi,DWORD PTR [rbx+0x8]
  4193e5:	mov    eax,r14d
  4193e8:	shl    eax,0x6
  4193eb:	shl    esi,0xe
  4193ee:	jmp    419417 <__ctype_b_loc@plt+0x17147>
  4193f0:	mov    rax,QWORD PTR [rbx+0x8]
  4193f4:	mov    QWORD PTR [rsp],rax
  4193f8:	mov    DWORD PTR [rsp+0x8],0x3
  419400:	mov    rdx,rsp
  419403:	mov    rdi,rbp
  419406:	mov    rsi,rdx
  419409:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  41940e:	mov    esi,r14d
  419411:	shl    esi,0x6
  419414:	shl    eax,0xe
  419417:	or     esi,eax
  419419:	or     esi,0x1
  41941c:	jmp    41946f <__ctype_b_loc@plt+0x1719f>
  41941e:	mov    rax,QWORD PTR [rbp+0x0]
  419422:	mov    rax,QWORD PTR [rax+0x18]
  419426:	movsxd rcx,DWORD PTR [rbx+0x8]
  41942a:	mov    edx,0xffffc03f
  41942f:	and    edx,DWORD PTR [rax+rcx*4]
  419432:	movzx  esi,r14b
  419436:	shl    esi,0x6
  419439:	or     esi,edx
  41943b:	mov    DWORD PTR [rax+rcx*4],esi
  41943e:	jmp    41947e <__ctype_b_loc@plt+0x171ae>
  419440:	mov    esi,DWORD PTR [rbx+0x8]
  419443:	cmp    esi,r14d
  419446:	je     41947e <__ctype_b_loc@plt+0x171ae>
  419448:	mov    eax,r14d
  41944b:	shl    eax,0x6
  41944e:	shl    esi,0x17
  419451:	or     esi,eax
  419453:	jmp    41946f <__ctype_b_loc@plt+0x1719f>
  419455:	movzx  eax,BYTE PTR [rbp+0x4a]
  419459:	cmp    eax,r14d
  41945c:	jle    41947e <__ctype_b_loc@plt+0x171ae>
  41945e:	mov    eax,r14d
  419461:	shl    eax,0x6
  419464:	mov    esi,r14d
  419467:	shl    esi,0x17
  41946a:	or     esi,eax
  41946c:	or     esi,0x3
  41946f:	mov    rax,QWORD PTR [rbp+0x18]
  419473:	mov    edx,DWORD PTR [rax+0x8]
  419476:	mov    rdi,rbp
  419479:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41947e:	mov    DWORD PTR [rbx+0x8],r14d
  419482:	mov    DWORD PTR [rbx],0xc
  419488:	add    rsp,0x10
  41948c:	pop    rbx
  41948d:	pop    r14
  41948f:	pop    rbp
  419490:	ret    
  419491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41949b:	nop    DWORD PTR [rax+rax*1+0x0]
  4194a0:	push   rbp
  4194a1:	push   r15
  4194a3:	push   r14
  4194a5:	push   r13
  4194a7:	push   r12
  4194a9:	push   rbx
  4194aa:	sub    rsp,0x18
  4194ae:	mov    r15,rdx
  4194b1:	mov    rbx,rsi
  4194b4:	mov    r12,rdi
  4194b7:	mov    r13,QWORD PTR [rdi+0x8]
  4194bb:	mov    r14,QWORD PTR [rdi+0x20]
  4194bf:	mov    ebp,DWORD PTR [rsi+0x8]
  4194c2:	test   ebp,ebp
  4194c4:	je     41964c <__ctype_b_loc@plt+0x1737c>
  4194ca:	cmp    ebp,0x3
  4194cd:	je     41951e <__ctype_b_loc@plt+0x1724e>
  4194cf:	cmp    ebp,0x4
  4194d2:	jne    41954b <__ctype_b_loc@plt+0x1727b>
  4194d4:	mov    rcx,QWORD PTR [rbx]
  4194d7:	mov    al,BYTE PTR [r13+0xb]
  4194db:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  4194e1:	cdqe   
  4194e3:	lea    rax,[rax+rax*4]
  4194e7:	shl    rax,0x3
  4194eb:	add    rax,QWORD PTR [r13+0x20]
  4194ef:	cmp    DWORD PTR [rax+0x18],0x4
  4194f3:	je     419513 <__ctype_b_loc@plt+0x17243>
  4194f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194ff:	nop
  419500:	mov    rax,QWORD PTR [rax+0x20]
  419504:	test   rax,rax
  419507:	je     41964c <__ctype_b_loc@plt+0x1737c>
  41950d:	cmp    DWORD PTR [rax+0x18],0x4
  419511:	jne    419500 <__ctype_b_loc@plt+0x17230>
  419513:	cmp    QWORD PTR [rax+0x10],rcx
  419517:	jne    419500 <__ctype_b_loc@plt+0x17230>
  419519:	jmp    41962c <__ctype_b_loc@plt+0x1735c>
  41951e:	vmovsd xmm1,QWORD PTR [rbx]
  419522:	vcvttsd2si eax,xmm1
  419526:	vcvtsi2sd xmm0,xmm0,eax
  41952a:	vucomisd xmm1,xmm0
  41952e:	jne    41954b <__ctype_b_loc@plt+0x1727b>
  419530:	jp     41954b <__ctype_b_loc@plt+0x1727b>
  419532:	lea    ecx,[rax-0x1]
  419535:	cmp    ecx,DWORD PTR [r13+0x38]
  419539:	jae    4195b8 <__ctype_b_loc@plt+0x172e8>
  41953b:	movsxd rax,ecx
  41953e:	shl    rax,0x4
  419542:	add    rax,QWORD PTR [r13+0x18]
  419546:	jmp    41962c <__ctype_b_loc@plt+0x1735c>
  41954b:	mov    rdi,r13
  41954e:	mov    rsi,rbx
  419551:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  419556:	mov    ecx,ebp
  419558:	lea    rdx,[rip+0x102cd]        # 42982c <__ctype_b_loc@plt+0x2755c>
  41955f:	cmp    DWORD PTR [rax+0x18],ebp
  419562:	jne    41957d <__ctype_b_loc@plt+0x172ad>
  419564:	jmp    41958f <__ctype_b_loc@plt+0x172bf>
  419566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419570:	mov    rsi,QWORD PTR [rax+0x10]
  419574:	cmp    rsi,QWORD PTR [rbx]
  419577:	je     41962c <__ctype_b_loc@plt+0x1735c>
  41957d:	mov    rax,QWORD PTR [rax+0x20]
  419581:	test   rax,rax
  419584:	je     41964c <__ctype_b_loc@plt+0x1737c>
  41958a:	cmp    DWORD PTR [rax+0x18],ebp
  41958d:	jne    41957d <__ctype_b_loc@plt+0x172ad>
  41958f:	cmp    ebp,0x3
  419592:	ja     419570 <__ctype_b_loc@plt+0x172a0>
  419594:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  419598:	add    rsi,rdx
  41959b:	jmp    rsi
  41959d:	mov    esi,DWORD PTR [rax+0x10]
  4195a0:	cmp    esi,DWORD PTR [rbx]
  4195a2:	jne    41957d <__ctype_b_loc@plt+0x172ad>
  4195a4:	jmp    41962c <__ctype_b_loc@plt+0x1735c>
  4195a9:	vmovq  xmm0,QWORD PTR [rax+0x10]
  4195ae:	vucomisd xmm0,QWORD PTR [rbx]
  4195b2:	jne    41957d <__ctype_b_loc@plt+0x172ad>
  4195b4:	jp     41957d <__ctype_b_loc@plt+0x172ad>
  4195b6:	jmp    41962c <__ctype_b_loc@plt+0x1735c>
  4195b8:	test   eax,eax
  4195ba:	je     4195fb <__ctype_b_loc@plt+0x1732b>
  4195bc:	vmovq  rcx,xmm0
  4195c1:	mov    rax,rcx
  4195c4:	shr    rax,0x20
  4195c8:	add    eax,ecx
  4195ca:	mov    cl,BYTE PTR [r13+0xb]
  4195ce:	mov    rdx,0xffffffffffffffff
  4195d5:	shlx   rcx,rdx,rcx
  4195da:	or     rcx,0x1
  4195de:	xor    rcx,0xfffffffffffffffe
  4195e2:	xor    edx,edx
  4195e4:	div    rcx
  4195e7:	lea    rax,[rdx+rdx*4]
  4195eb:	shl    rax,0x3
  4195ef:	add    rax,QWORD PTR [r13+0x20]
  4195f3:	cmp    DWORD PTR [rax+0x18],0x3
  4195f7:	jne    419610 <__ctype_b_loc@plt+0x17340>
  4195f9:	jmp    41961f <__ctype_b_loc@plt+0x1734f>
  4195fb:	mov    rax,QWORD PTR [r13+0x20]
  4195ff:	cmp    DWORD PTR [rax+0x18],0x3
  419603:	je     41961f <__ctype_b_loc@plt+0x1734f>
  419605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41960f:	nop
  419610:	mov    rax,QWORD PTR [rax+0x20]
  419614:	test   rax,rax
  419617:	je     41964c <__ctype_b_loc@plt+0x1737c>
  419619:	cmp    DWORD PTR [rax+0x18],0x3
  41961d:	jne    419610 <__ctype_b_loc@plt+0x17340>
  41961f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  419624:	vucomisd xmm1,xmm0
  419628:	jne    419610 <__ctype_b_loc@plt+0x17340>
  41962a:	jp     419610 <__ctype_b_loc@plt+0x17340>
  41962c:	mov    BYTE PTR [r13+0xa],0x0
  419631:	lea    rcx,[rip+0x104e0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  419638:	cmp    rax,rcx
  41963b:	je     419651 <__ctype_b_loc@plt+0x17381>
  41963d:	cmp    DWORD PTR [rax+0x8],0x3
  419641:	jne    419692 <__ctype_b_loc@plt+0x173c2>
  419643:	vcvttsd2si eax,QWORD PTR [rax]
  419647:	jmp    419871 <__ctype_b_loc@plt+0x175a1>
  41964c:	mov    BYTE PTR [r13+0xa],0x0
  419651:	cmp    ebp,0x3
  419654:	je     419663 <__ctype_b_loc@plt+0x17393>
  419656:	test   ebp,ebp
  419658:	jne    41967e <__ctype_b_loc@plt+0x173ae>
  41965a:	lea    rsi,[rip+0x108a2]        # 429f03 <__ctype_b_loc@plt+0x27c33>
  419661:	jmp    419674 <__ctype_b_loc@plt+0x173a4>
  419663:	vmovq  xmm0,QWORD PTR [rbx]
  419667:	vucomisd xmm0,xmm0
  41966b:	jnp    41967e <__ctype_b_loc@plt+0x173ae>
  41966d:	lea    rsi,[rip+0x108a2]        # 429f16 <__ctype_b_loc@plt+0x27c46>
  419674:	mov    rdi,r14
  419677:	xor    eax,eax
  419679:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41967e:	mov    rdi,r14
  419681:	mov    rsi,r13
  419684:	mov    rdx,rbx
  419687:	call   409b60 <__ctype_b_loc@plt+0x7890>
  41968c:	cmp    DWORD PTR [rax+0x8],0x3
  419690:	je     419643 <__ctype_b_loc@plt+0x17373>
  419692:	mov    QWORD PTR [rsp+0x10],r15
  419697:	mov    rbx,QWORD PTR [r12]
  41969b:	movsxd r15,DWORD PTR [rbx+0x4c]
  41969f:	vcvtsi2sd xmm0,xmm2,DWORD PTR [r12+0x40]
  4196a6:	vmovq  QWORD PTR [rax],xmm0
  4196aa:	mov    DWORD PTR [rax+0x8],0x3
  4196b1:	mov    ecx,DWORD PTR [rbx+0x4c]
  4196b4:	cmp    DWORD PTR [r12+0x40],ecx
  4196b9:	jge    4196cd <__ctype_b_loc@plt+0x173fd>
  4196bb:	mov    rax,QWORD PTR [rbx+0x10]
  4196bf:	cmp    r15d,ecx
  4196c2:	jl     419769 <__ctype_b_loc@plt+0x17499>
  4196c8:	jmp    419814 <__ctype_b_loc@plt+0x17544>
  4196cd:	mov    rsi,QWORD PTR [rbx+0x10]
  4196d1:	cmp    ecx,0x1ffff
  4196d7:	mov    QWORD PTR [rsp+0x8],rbx
  4196dc:	jge    4196f0 <__ctype_b_loc@plt+0x17420>
  4196de:	lea    eax,[rcx+rcx*1]
  4196e1:	cmp    eax,0x3
  4196e4:	mov    r13d,0x4
  4196ea:	cmovg  r13d,eax
  4196ee:	jmp    419718 <__ctype_b_loc@plt+0x17448>
  4196f0:	mov    r13d,0x3ffff
  4196f6:	cmp    ecx,0x3ffff
  4196fc:	jl     419718 <__ctype_b_loc@plt+0x17448>
  4196fe:	mov    rbp,rsi
  419701:	lea    rsi,[rip+0x10bfe]        # 42a306 <__ctype_b_loc@plt+0x28036>
  419708:	mov    rdi,r14
  41970b:	xor    eax,eax
  41970d:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  419712:	mov    rsi,rbp
  419715:	mov    ecx,DWORD PTR [rbx+0x4c]
  419718:	movsxd rbx,ecx
  41971b:	shl    rbx,0x4
  41971f:	mov    ebp,r13d
  419722:	shl    rbp,0x4
  419726:	mov    QWORD PTR [rsp],r14
  41972a:	mov    r14,QWORD PTR [r14+0x20]
  41972e:	mov    rdi,QWORD PTR [r14+0x18]
  419732:	mov    rdx,rbx
  419735:	mov    rcx,rbp
  419738:	call   QWORD PTR [r14+0x10]
  41973c:	test   rax,rax
  41973f:	je     419880 <__ctype_b_loc@plt+0x175b0>
  419745:	sub    rbp,rbx
  419748:	add    QWORD PTR [r14+0x78],rbp
  41974c:	mov    rbx,QWORD PTR [rsp+0x8]
  419751:	mov    DWORD PTR [rbx+0x4c],r13d
  419755:	mov    QWORD PTR [rbx+0x10],rax
  419759:	mov    ecx,r13d
  41975c:	mov    r14,QWORD PTR [rsp]
  419760:	cmp    r15d,ecx
  419763:	jge    419814 <__ctype_b_loc@plt+0x17544>
  419769:	movsxd rdx,ecx
  41976c:	sub    ecx,r15d
  41976f:	mov    rsi,r15
  419772:	not    rsi
  419775:	add    rsi,rdx
  419778:	and    rcx,0x7
  41977c:	je     4197b5 <__ctype_b_loc@plt+0x174e5>
  41977e:	mov    rdi,r15
  419781:	shl    rdi,0x4
  419785:	add    rdi,rax
  419788:	add    rdi,0x8
  41978c:	neg    rcx
  41978f:	xor    ebp,ebp
  419791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41979b:	nop    DWORD PTR [rax+rax*1+0x0]
  4197a0:	mov    DWORD PTR [rdi],0x0
  4197a6:	add    rdi,0x10
  4197aa:	dec    rbp
  4197ad:	cmp    rcx,rbp
  4197b0:	jne    4197a0 <__ctype_b_loc@plt+0x174d0>
  4197b2:	sub    r15,rbp
  4197b5:	cmp    rsi,0x7
  4197b9:	jb     419814 <__ctype_b_loc@plt+0x17544>
  4197bb:	mov    rcx,r15
  4197be:	shl    rcx,0x4
  4197c2:	add    rcx,rax
  4197c5:	add    rcx,0x78
  4197c9:	nop    DWORD PTR [rax+0x0]
  4197d0:	mov    DWORD PTR [rcx-0x70],0x0
  4197d7:	mov    DWORD PTR [rcx-0x60],0x0
  4197de:	mov    DWORD PTR [rcx-0x50],0x0
  4197e5:	mov    DWORD PTR [rcx-0x40],0x0
  4197ec:	mov    DWORD PTR [rcx-0x30],0x0
  4197f3:	mov    DWORD PTR [rcx-0x20],0x0
  4197fa:	mov    DWORD PTR [rcx-0x10],0x0
  419801:	add    r15,0x8
  419805:	mov    DWORD PTR [rcx],0x0
  41980b:	sub    rcx,0xffffffffffffff80
  41980f:	cmp    r15,rdx
  419812:	jl     4197d0 <__ctype_b_loc@plt+0x17500>
  419814:	movsxd rcx,DWORD PTR [r12+0x40]
  419819:	shl    rcx,0x4
  41981d:	mov    rsi,QWORD PTR [rsp+0x10]
  419822:	mov    rdx,QWORD PTR [rsi]
  419825:	mov    QWORD PTR [rax+rcx*1],rdx
  419829:	mov    edx,DWORD PTR [rsi+0x8]
  41982c:	mov    DWORD PTR [rax+rcx*1+0x8],edx
  419830:	cmp    DWORD PTR [rsi+0x8],0x4
  419834:	jl     419864 <__ctype_b_loc@plt+0x17594>
  419836:	mov    rsi,QWORD PTR [rsi]
  419839:	test   BYTE PTR [rsi+0x9],0x3
  41983d:	je     419864 <__ctype_b_loc@plt+0x17594>
  41983f:	mov    al,BYTE PTR [rbx+0x9]
  419842:	test   al,0x4
  419844:	je     419864 <__ctype_b_loc@plt+0x17594>
  419846:	mov    rdi,QWORD PTR [r14+0x20]
  41984a:	cmp    BYTE PTR [rdi+0x21],0x1
  41984e:	jne    419857 <__ctype_b_loc@plt+0x17587>
  419850:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  419855:	jmp    419864 <__ctype_b_loc@plt+0x17594>
  419857:	and    al,0xf8
  419859:	mov    cl,BYTE PTR [rdi+0x20]
  41985c:	and    cl,0x3
  41985f:	or     cl,al
  419861:	mov    BYTE PTR [rbx+0x9],cl
  419864:	mov    eax,DWORD PTR [r12+0x40]
  419869:	lea    ecx,[rax+0x1]
  41986c:	mov    DWORD PTR [r12+0x40],ecx
  419871:	add    rsp,0x18
  419875:	pop    rbx
  419876:	pop    r12
  419878:	pop    r13
  41987a:	pop    r14
  41987c:	pop    r15
  41987e:	pop    rbp
  41987f:	ret    
  419880:	mov    rax,QWORD PTR [rsp]
  419884:	mov    rdi,QWORD PTR [rax+0xa8]
  41988b:	test   rdi,rdi
  41988e:	jne    4198ce <__ctype_b_loc@plt+0x175fe>
  419890:	mov    rax,QWORD PTR [rsp]
  419894:	mov    BYTE PTR [rax+0xa],0x4
  419898:	mov    rax,QWORD PTR [rax+0x20]
  41989c:	cmp    QWORD PTR [rax+0x98],0x0
  4198a4:	je     4198c4 <__ctype_b_loc@plt+0x175f4>
  4198a6:	mov    rbx,QWORD PTR [rsp]
  4198aa:	mov    rdi,rbx
  4198ad:	mov    esi,0x4
  4198b2:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  4198b7:	mov    rax,QWORD PTR [rbx+0x20]
  4198bb:	mov    rdi,rbx
  4198be:	call   QWORD PTR [rax+0x98]
  4198c4:	mov    edi,0x1
  4198c9:	call   402280 <exit@plt>
  4198ce:	mov    DWORD PTR [rdi+0xd0],0x4
  4198d8:	add    rdi,0x8
  4198dc:	mov    esi,0x1
  4198e1:	call   402230 <longjmp@plt>
  4198e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4198f0:	push   rbp
  4198f1:	push   r15
  4198f3:	push   r14
  4198f5:	push   rbx
  4198f6:	sub    rsp,0x28
  4198fa:	mov    r15,rsi
  4198fd:	mov    r14,rdi
  419900:	mov    ebp,DWORD PTR [rsi+0x10]
  419903:	mov    ebx,DWORD PTR [rsi+0x14]
  419906:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41990b:	cmp    ebp,ebx
  41990d:	je     4199b2 <__ctype_b_loc@plt+0x176e2>
  419913:	cmp    DWORD PTR [r15],0xc
  419917:	jne    419938 <__ctype_b_loc@plt+0x17668>
  419919:	mov    eax,DWORD PTR [r15+0x10]
  41991d:	cmp    eax,DWORD PTR [r15+0x14]
  419921:	je     4199b2 <__ctype_b_loc@plt+0x176e2>
  419927:	mov    edx,DWORD PTR [r15+0x8]
  41992b:	movzx  eax,BYTE PTR [r14+0x4a]
  419930:	cmp    edx,eax
  419932:	jge    419b2e <__ctype_b_loc@plt+0x1785e>
  419938:	mov    rdi,r14
  41993b:	mov    rsi,r15
  41993e:	call   418a00 <__ctype_b_loc@plt+0x16730>
  419943:	cmp    DWORD PTR [r15],0xc
  419947:	jne    419961 <__ctype_b_loc@plt+0x17691>
  419949:	mov    eax,DWORD PTR [r15+0x8]
  41994d:	test   eax,0x100
  419952:	jne    419961 <__ctype_b_loc@plt+0x17691>
  419954:	movzx  ecx,BYTE PTR [r14+0x4a]
  419959:	cmp    eax,ecx
  41995b:	jl     419961 <__ctype_b_loc@plt+0x17691>
  41995d:	dec    DWORD PTR [r14+0x3c]
  419961:	mov    edx,DWORD PTR [r14+0x3c]
  419965:	lea    ebp,[rdx+0x1]
  419968:	mov    rax,QWORD PTR [r14]
  41996b:	movzx  ecx,BYTE PTR [rax+0x73]
  41996f:	cmp    edx,ecx
  419971:	jl     41999f <__ctype_b_loc@plt+0x176cf>
  419973:	mov    ecx,ebp
  419975:	cmp    edx,0xf9
  41997b:	jl     419999 <__ctype_b_loc@plt+0x176c9>
  41997d:	mov    rdi,QWORD PTR [r14+0x18]
  419981:	mov    edx,DWORD PTR [rdi+0x10]
  419984:	lea    rsi,[rip+0x10993]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41998b:	call   413660 <__ctype_b_loc@plt+0x11390>
  419990:	mov    rax,QWORD PTR [r14]
  419993:	mov    ecx,DWORD PTR [r14+0x3c]
  419997:	inc    ecx
  419999:	mov    BYTE PTR [rax+0x73],bpl
  41999d:	mov    ebp,ecx
  41999f:	mov    DWORD PTR [r14+0x3c],ebp
  4199a3:	dec    ebp
  4199a5:	mov    rdi,r14
  4199a8:	mov    rsi,r15
  4199ab:	mov    edx,ebp
  4199ad:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  4199b2:	mov    eax,DWORD PTR [r15]
  4199b5:	lea    ecx,[rax-0x1]
  4199b8:	cmp    ecx,0x3
  4199bb:	jb     4199c7 <__ctype_b_loc@plt+0x176f7>
  4199bd:	cmp    eax,0x4
  4199c0:	je     419a0e <__ctype_b_loc@plt+0x1773e>
  4199c2:	cmp    eax,0x5
  4199c5:	jne    419a1d <__ctype_b_loc@plt+0x1774d>
  4199c7:	cmp    DWORD PTR [r14+0x40],0xff
  4199cf:	jg     419a1d <__ctype_b_loc@plt+0x1774d>
  4199d1:	cmp    eax,0x5
  4199d4:	je     419acd <__ctype_b_loc@plt+0x177fd>
  4199da:	cmp    eax,0x1
  4199dd:	jne    419ae5 <__ctype_b_loc@plt+0x17815>
  4199e3:	lea    rsi,[rsp+0x8]
  4199e8:	mov    DWORD PTR [rsp+0x20],0x0
  4199f0:	mov    rax,QWORD PTR [r14+0x8]
  4199f4:	mov    QWORD PTR [rsp+0x8],rax
  4199f9:	mov    DWORD PTR [rsp+0x10],0x5
  419a01:	lea    rdx,[rsp+0x18]
  419a06:	mov    rdi,r14
  419a09:	jmp    419b04 <__ctype_b_loc@plt+0x17834>
  419a0e:	mov    eax,DWORD PTR [r15+0x8]
  419a12:	cmp    eax,0xff
  419a17:	jle    419b14 <__ctype_b_loc@plt+0x17844>
  419a1d:	mov    rdi,r14
  419a20:	mov    rsi,r15
  419a23:	call   418a00 <__ctype_b_loc@plt+0x16730>
  419a28:	cmp    DWORD PTR [r15],0xc
  419a2c:	jne    419a4d <__ctype_b_loc@plt+0x1777d>
  419a2e:	mov    eax,DWORD PTR [r15+0x8]
  419a32:	mov    ecx,DWORD PTR [r15+0x10]
  419a36:	cmp    ecx,DWORD PTR [r15+0x14]
  419a3a:	je     419b19 <__ctype_b_loc@plt+0x17849>
  419a40:	movzx  ecx,BYTE PTR [r14+0x4a]
  419a45:	cmp    eax,ecx
  419a47:	jge    419b24 <__ctype_b_loc@plt+0x17854>
  419a4d:	mov    rdi,r14
  419a50:	mov    rsi,r15
  419a53:	call   418a00 <__ctype_b_loc@plt+0x16730>
  419a58:	cmp    DWORD PTR [r15],0xc
  419a5c:	jne    419a76 <__ctype_b_loc@plt+0x177a6>
  419a5e:	mov    eax,DWORD PTR [r15+0x8]
  419a62:	test   eax,0x100
  419a67:	jne    419a76 <__ctype_b_loc@plt+0x177a6>
  419a69:	movzx  ecx,BYTE PTR [r14+0x4a]
  419a6e:	cmp    eax,ecx
  419a70:	jl     419a76 <__ctype_b_loc@plt+0x177a6>
  419a72:	dec    DWORD PTR [r14+0x3c]
  419a76:	mov    edx,DWORD PTR [r14+0x3c]
  419a7a:	lea    ebp,[rdx+0x1]
  419a7d:	mov    rax,QWORD PTR [r14]
  419a80:	movzx  ecx,BYTE PTR [rax+0x73]
  419a84:	cmp    edx,ecx
  419a86:	jl     419ab4 <__ctype_b_loc@plt+0x177e4>
  419a88:	mov    ecx,ebp
  419a8a:	cmp    edx,0xf9
  419a90:	jl     419aae <__ctype_b_loc@plt+0x177de>
  419a92:	mov    rdi,QWORD PTR [r14+0x18]
  419a96:	mov    edx,DWORD PTR [rdi+0x10]
  419a99:	lea    rsi,[rip+0x1087e]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  419aa0:	call   413660 <__ctype_b_loc@plt+0x11390>
  419aa5:	mov    rax,QWORD PTR [r14]
  419aa8:	mov    ecx,DWORD PTR [r14+0x3c]
  419aac:	inc    ecx
  419aae:	mov    BYTE PTR [rax+0x73],bpl
  419ab2:	mov    ebp,ecx
  419ab4:	mov    DWORD PTR [r14+0x3c],ebp
  419ab8:	dec    ebp
  419aba:	mov    rdi,r14
  419abd:	mov    rsi,r15
  419ac0:	mov    edx,ebp
  419ac2:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  419ac7:	mov    eax,DWORD PTR [r15+0x8]
  419acb:	jmp    419b19 <__ctype_b_loc@plt+0x17849>
  419acd:	mov    rax,QWORD PTR [r15+0x8]
  419ad1:	lea    rdx,[rsp+0x8]
  419ad6:	mov    QWORD PTR [rsp+0x8],rax
  419adb:	mov    DWORD PTR [rsp+0x10],0x3
  419ae3:	jmp    419afe <__ctype_b_loc@plt+0x1782e>
  419ae5:	xor    ecx,ecx
  419ae7:	cmp    eax,0x2
  419aea:	sete   cl
  419aed:	lea    rdx,[rsp+0x8]
  419af2:	mov    DWORD PTR [rsp+0x8],ecx
  419af6:	mov    DWORD PTR [rsp+0x10],0x1
  419afe:	mov    rdi,r14
  419b01:	mov    rsi,rdx
  419b04:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  419b09:	mov    DWORD PTR [r15+0x8],eax
  419b0d:	mov    DWORD PTR [r15],0x4
  419b14:	or     eax,0x100
  419b19:	add    rsp,0x28
  419b1d:	pop    rbx
  419b1e:	pop    r14
  419b20:	pop    r15
  419b22:	pop    rbp
  419b23:	ret    
  419b24:	mov    rdi,r14
  419b27:	mov    rsi,r15
  419b2a:	mov    edx,eax
  419b2c:	jmp    419ac2 <__ctype_b_loc@plt+0x177f2>
  419b2e:	mov    rdi,r14
  419b31:	mov    rsi,r15
  419b34:	jmp    4199ad <__ctype_b_loc@plt+0x176dd>
  419b39:	nop    DWORD PTR [rax+0x0]
  419b40:	push   rbp
  419b41:	push   r15
  419b43:	push   r14
  419b45:	push   r13
  419b47:	push   r12
  419b49:	push   rbx
  419b4a:	sub    rsp,0x58
  419b4e:	mov    r14,rsi
  419b51:	mov    rbp,rdi
  419b54:	mov    r15,QWORD PTR [rdi+0x30]
  419b58:	mov    eax,DWORD PTR [rdi+0x4]
  419b5b:	mov    DWORD PTR [rsp+0x38],eax
  419b5f:	mov    rax,QWORD PTR [r15+0x18]
  419b63:	mov    edx,DWORD PTR [rax+0x8]
  419b66:	mov    rdi,r15
  419b69:	mov    esi,0xa
  419b6e:	call   419020 <__ctype_b_loc@plt+0x16d50>
  419b73:	mov    DWORD PTR [rsp+0x30],0x0
  419b7b:	mov    QWORD PTR [rsp+0x28],0x0
  419b84:	mov    QWORD PTR [rsp+0x20],r14
  419b89:	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
  419b91:	mov    DWORD PTR [r14],0xb
  419b98:	mov    DWORD PTR [rsp+0x3c],eax
  419b9c:	mov    DWORD PTR [r14+0x8],eax
  419ba0:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  419ba9:	mov    DWORD PTR [rsp+0x8],0x0
  419bb1:	mov    DWORD PTR [rsp+0x10],0x0
  419bb9:	mov    r12,QWORD PTR [rbp+0x30]
  419bbd:	mov    rdi,r12
  419bc0:	mov    rsi,r14
  419bc3:	call   418a00 <__ctype_b_loc@plt+0x16730>
  419bc8:	cmp    DWORD PTR [r14],0xc
  419bcc:	jne    419be8 <__ctype_b_loc@plt+0x17918>
  419bce:	mov    eax,DWORD PTR [r14+0x8]
  419bd2:	test   eax,0x100
  419bd7:	jne    419be8 <__ctype_b_loc@plt+0x17918>
  419bd9:	movzx  ecx,BYTE PTR [r12+0x4a]
  419bdf:	cmp    eax,ecx
  419be1:	jl     419be8 <__ctype_b_loc@plt+0x17918>
  419be3:	dec    DWORD PTR [r12+0x3c]
  419be8:	mov    edx,DWORD PTR [r12+0x3c]
  419bed:	lea    ebx,[rdx+0x1]
  419bf0:	mov    rax,QWORD PTR [r12]
  419bf4:	movzx  ecx,BYTE PTR [rax+0x73]
  419bf8:	cmp    edx,ecx
  419bfa:	jl     419c2a <__ctype_b_loc@plt+0x1795a>
  419bfc:	mov    ecx,ebx
  419bfe:	cmp    edx,0xf9
  419c04:	jl     419c25 <__ctype_b_loc@plt+0x17955>
  419c06:	mov    rdi,QWORD PTR [r12+0x18]
  419c0b:	mov    edx,DWORD PTR [rdi+0x10]
  419c0e:	lea    rsi,[rip+0x10709]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  419c15:	call   413660 <__ctype_b_loc@plt+0x11390>
  419c1a:	mov    rax,QWORD PTR [r12]
  419c1e:	mov    ecx,DWORD PTR [r12+0x3c]
  419c23:	inc    ecx
  419c25:	mov    BYTE PTR [rax+0x73],bl
  419c28:	mov    ebx,ecx
  419c2a:	mov    DWORD PTR [r12+0x3c],ebx
  419c2f:	dec    ebx
  419c31:	mov    rdi,r12
  419c34:	mov    rsi,r14
  419c37:	mov    edx,ebx
  419c39:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  419c3e:	cmp    DWORD PTR [rbp+0x10],0x7b
  419c42:	je     419c9c <__ctype_b_loc@plt+0x179cc>
  419c44:	mov    rbx,QWORD PTR [rbp+0x38]
  419c48:	call   4022d0 <__ctype_b_loc@plt>
  419c4d:	mov    rax,QWORD PTR [rax]
  419c50:	movzx  eax,WORD PTR [rax+0xf6]
  419c57:	test   al,0x2
  419c59:	lea    rax,[rip+0x105fb]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  419c60:	lea    rsi,[rip+0x105eb]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  419c67:	cmove  rsi,rax
  419c6b:	mov    rdi,rbx
  419c6e:	mov    edx,0x7b
  419c73:	xor    eax,eax
  419c75:	call   404800 <__ctype_b_loc@plt+0x2530>
  419c7a:	lea    rsi,[rip+0x10814]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  419c81:	mov    rdi,rbx
  419c84:	mov    rdx,rax
  419c87:	xor    eax,eax
  419c89:	call   404800 <__ctype_b_loc@plt+0x2530>
  419c8e:	mov    edx,DWORD PTR [rbp+0x10]
  419c91:	mov    rdi,rbp
  419c94:	mov    rsi,rax
  419c97:	call   413660 <__ctype_b_loc@plt+0x11390>
  419c9c:	mov    eax,DWORD PTR [rbp+0x4]
  419c9f:	mov    ecx,DWORD PTR [rbp+0x20]
  419ca2:	mov    DWORD PTR [rbp+0x8],eax
  419ca5:	lea    r12,[rbp+0x20]
  419ca9:	cmp    ecx,0x11f
  419caf:	jne    419cca <__ctype_b_loc@plt+0x179fa>
  419cb1:	lea    rsi,[rbp+0x18]
  419cb5:	mov    rdi,rbp
  419cb8:	call   411660 <__ctype_b_loc@plt+0xf390>
  419cbd:	mov    DWORD PTR [rbp+0x10],eax
  419cc0:	cmp    eax,0x7d
  419cc3:	jne    419ce8 <__ctype_b_loc@plt+0x17a18>
  419cc5:	jmp    419ede <__ctype_b_loc@plt+0x17c0e>
  419cca:	vmovups xmm0,XMMWORD PTR [r12]
  419cd0:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  419cd5:	mov    DWORD PTR [rbp+0x20],0x11f
  419cdc:	mov    eax,DWORD PTR [rbp+0x10]
  419cdf:	cmp    eax,0x7d
  419ce2:	je     419ede <__ctype_b_loc@plt+0x17c0e>
  419ce8:	lea    rax,[rbp+0x28]
  419cec:	mov    QWORD PTR [rsp+0x48],rax
  419cf1:	lea    rax,[rbp+0x10]
  419cf5:	mov    QWORD PTR [rsp+0x50],rax
  419cfa:	lea    rax,[rbp+0x18]
  419cfe:	mov    QWORD PTR [rsp+0x40],rax
  419d03:	xor    eax,eax
  419d05:	lea    r14,[rsp+0x8]
  419d0a:	test   eax,eax
  419d0c:	je     419e2f <__ctype_b_loc@plt+0x17b5f>
  419d12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d1c:	nop    DWORD PTR [rax+0x0]
  419d20:	mov    rdi,r15
  419d23:	mov    rsi,r14
  419d26:	call   418a00 <__ctype_b_loc@plt+0x16730>
  419d2b:	cmp    DWORD PTR [rsp+0x8],0xc
  419d30:	jne    419d50 <__ctype_b_loc@plt+0x17a80>
  419d32:	mov    eax,DWORD PTR [rsp+0x10]
  419d36:	test   eax,0x100
  419d3b:	jne    419d50 <__ctype_b_loc@plt+0x17a80>
  419d3d:	movzx  ecx,BYTE PTR [r15+0x4a]
  419d42:	cmp    eax,ecx
  419d44:	jge    419ecf <__ctype_b_loc@plt+0x17bff>
  419d4a:	nop    WORD PTR [rax+rax*1+0x0]
  419d50:	mov    ecx,DWORD PTR [r15+0x3c]
  419d54:	lea    ebx,[rcx+0x1]
  419d57:	mov    rax,QWORD PTR [r15]
  419d5a:	movzx  edx,BYTE PTR [rax+0x73]
  419d5e:	cmp    ecx,edx
  419d60:	jl     419d8d <__ctype_b_loc@plt+0x17abd>
  419d62:	mov    edx,ebx
  419d64:	cmp    ecx,0xf9
  419d6a:	jl     419d88 <__ctype_b_loc@plt+0x17ab8>
  419d6c:	mov    rdi,QWORD PTR [r15+0x18]
  419d70:	mov    edx,DWORD PTR [rdi+0x10]
  419d73:	lea    rsi,[rip+0x105a4]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  419d7a:	call   413660 <__ctype_b_loc@plt+0x11390>
  419d7f:	mov    rax,QWORD PTR [r15]
  419d82:	mov    edx,DWORD PTR [r15+0x3c]
  419d86:	inc    edx
  419d88:	mov    BYTE PTR [rax+0x73],bl
  419d8b:	mov    ebx,edx
  419d8d:	mov    DWORD PTR [r15+0x3c],ebx
  419d91:	dec    ebx
  419d93:	mov    rdi,r15
  419d96:	mov    rsi,r14
  419d99:	mov    edx,ebx
  419d9b:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  419da0:	mov    DWORD PTR [rsp+0x8],0x0
  419da8:	cmp    DWORD PTR [rsp+0x30],0x32
  419dad:	jne    419e2f <__ctype_b_loc@plt+0x17b5f>
  419db3:	mov    rax,QWORD PTR [rsp+0x20]
  419db8:	mov    r13d,DWORD PTR [rax+0x8]
  419dbc:	mov    eax,DWORD PTR [rsp+0x2c]
  419dc0:	dec    eax
  419dc2:	cdqe   
  419dc4:	imul   rax,rax,0x51eb851f
  419dcb:	mov    rcx,rax
  419dce:	sar    rcx,0x24
  419dd2:	shr    rax,0x3f
  419dd6:	lea    ebx,[rcx+rax*1]
  419dd9:	add    ebx,0x1
  419ddc:	mov    esi,r13d
  419ddf:	shl    esi,0x6
  419de2:	or     esi,0x19000022
  419de8:	cmp    ebx,0x1ff
  419dee:	jg     419e00 <__ctype_b_loc@plt+0x17b30>
  419df0:	shl    ebx,0xe
  419df3:	or     ebx,esi
  419df5:	jmp    419e0f <__ctype_b_loc@plt+0x17b3f>
  419df7:	nop    WORD PTR [rax+rax*1+0x0]
  419e00:	mov    rax,QWORD PTR [r15+0x18]
  419e04:	mov    edx,DWORD PTR [rax+0x8]
  419e07:	mov    rdi,r15
  419e0a:	call   419020 <__ctype_b_loc@plt+0x16d50>
  419e0f:	mov    rax,QWORD PTR [r15+0x18]
  419e13:	mov    edx,DWORD PTR [rax+0x8]
  419e16:	mov    rdi,r15
  419e19:	mov    esi,ebx
  419e1b:	call   419020 <__ctype_b_loc@plt+0x16d50>
  419e20:	inc    r13d
  419e23:	mov    DWORD PTR [r15+0x3c],r13d
  419e27:	mov    DWORD PTR [rsp+0x30],0x0
  419e2f:	mov    eax,DWORD PTR [rbp+0x10]
  419e32:	cmp    eax,0x5b
  419e35:	je     419e53 <__ctype_b_loc@plt+0x17b83>
  419e37:	cmp    eax,0x11d
  419e3c:	jne    419e60 <__ctype_b_loc@plt+0x17b90>
  419e3e:	mov    rdi,rbp
  419e41:	mov    rsi,QWORD PTR [rsp+0x48]
  419e46:	call   411660 <__ctype_b_loc@plt+0xf390>
  419e4b:	mov    DWORD PTR [rbp+0x20],eax
  419e4e:	cmp    eax,0x3d
  419e51:	jne    419e60 <__ctype_b_loc@plt+0x17b90>
  419e53:	mov    rdi,rbp
  419e56:	mov    rsi,r14
  419e59:	call   41b0a0 <__ctype_b_loc@plt+0x18dd0>
  419e5e:	jmp    419e6b <__ctype_b_loc@plt+0x17b9b>
  419e60:	mov    rdi,rbp
  419e63:	mov    rsi,r14
  419e66:	call   41b010 <__ctype_b_loc@plt+0x18d40>
  419e6b:	mov    eax,DWORD PTR [rbp+0x10]
  419e6e:	cmp    eax,0x3b
  419e71:	je     419e78 <__ctype_b_loc@plt+0x17ba8>
  419e73:	cmp    eax,0x2c
  419e76:	jne    419ede <__ctype_b_loc@plt+0x17c0e>
  419e78:	mov    eax,DWORD PTR [rbp+0x4]
  419e7b:	mov    ecx,DWORD PTR [rbp+0x20]
  419e7e:	mov    DWORD PTR [rbp+0x8],eax
  419e81:	cmp    ecx,0x11f
  419e87:	jne    419ea0 <__ctype_b_loc@plt+0x17bd0>
  419e89:	mov    rdi,rbp
  419e8c:	mov    rsi,QWORD PTR [rsp+0x40]
  419e91:	call   411660 <__ctype_b_loc@plt+0xf390>
  419e96:	mov    DWORD PTR [rbp+0x10],eax
  419e99:	cmp    eax,0x7d
  419e9c:	jne    419ebe <__ctype_b_loc@plt+0x17bee>
  419e9e:	jmp    419ede <__ctype_b_loc@plt+0x17c0e>
  419ea0:	vmovups xmm0,XMMWORD PTR [r12]
  419ea6:	mov    rax,QWORD PTR [rsp+0x50]
  419eab:	vmovups XMMWORD PTR [rax],xmm0
  419eaf:	mov    DWORD PTR [rbp+0x20],0x11f
  419eb6:	mov    eax,DWORD PTR [rbp+0x10]
  419eb9:	cmp    eax,0x7d
  419ebc:	je     419ede <__ctype_b_loc@plt+0x17c0e>
  419ebe:	mov    eax,DWORD PTR [rsp+0x8]
  419ec2:	test   eax,eax
  419ec4:	jne    419d20 <__ctype_b_loc@plt+0x17a50>
  419eca:	jmp    419e2f <__ctype_b_loc@plt+0x17b5f>
  419ecf:	mov    ecx,DWORD PTR [r15+0x3c]
  419ed3:	dec    ecx
  419ed5:	mov    DWORD PTR [r15+0x3c],ecx
  419ed9:	jmp    419d54 <__ctype_b_loc@plt+0x17a84>
  419ede:	mov    rdi,rbp
  419ee1:	mov    esi,0x7d
  419ee6:	mov    edx,0x7b
  419eeb:	mov    ecx,DWORD PTR [rsp+0x38]
  419eef:	call   417390 <__ctype_b_loc@plt+0x150c0>
  419ef4:	mov    eax,DWORD PTR [rsp+0x30]
  419ef8:	test   eax,eax
  419efa:	je     41a105 <__ctype_b_loc@plt+0x17e35>
  419f00:	mov    ecx,DWORD PTR [rsp+0x8]
  419f04:	test   ecx,ecx
  419f06:	je     41a08d <__ctype_b_loc@plt+0x17dbd>
  419f0c:	cmp    ecx,0xe
  419f0f:	je     419f2f <__ctype_b_loc@plt+0x17c5f>
  419f11:	cmp    ecx,0xd
  419f14:	jne    41a00b <__ctype_b_loc@plt+0x17d3b>
  419f1a:	mov    rax,QWORD PTR [r15]
  419f1d:	mov    rax,QWORD PTR [rax+0x18]
  419f21:	movsxd rcx,DWORD PTR [rsp+0x10]
  419f26:	and    DWORD PTR [rax+rcx*4],0xff803fff
  419f2d:	jmp    419f9d <__ctype_b_loc@plt+0x17ccd>
  419f2f:	mov    rax,QWORD PTR [r15]
  419f32:	mov    rcx,QWORD PTR [rax+0x18]
  419f36:	movsxd rdx,DWORD PTR [rsp+0x10]
  419f3b:	and    DWORD PTR [rcx+rdx*4],0x7fffff
  419f42:	movsxd rdx,DWORD PTR [rsp+0x10]
  419f47:	mov    esi,0xffffc03f
  419f4c:	and    esi,DWORD PTR [rcx+rdx*4]
  419f4f:	mov    edi,DWORD PTR [r15+0x3c]
  419f53:	movzx  edi,dil
  419f57:	shl    edi,0x6
  419f5a:	or     edi,esi
  419f5c:	mov    DWORD PTR [rcx+rdx*4],edi
  419f5f:	mov    edx,DWORD PTR [r15+0x3c]
  419f63:	lea    ebx,[rdx+0x1]
  419f66:	movzx  ecx,BYTE PTR [rax+0x73]
  419f6a:	cmp    edx,ecx
  419f6c:	jl     419f99 <__ctype_b_loc@plt+0x17cc9>
  419f6e:	mov    ecx,ebx
  419f70:	cmp    edx,0xf9
  419f76:	jl     419f94 <__ctype_b_loc@plt+0x17cc4>
  419f78:	mov    rdi,QWORD PTR [r15+0x18]
  419f7c:	mov    edx,DWORD PTR [rdi+0x10]
  419f7f:	lea    rsi,[rip+0x10398]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  419f86:	call   413660 <__ctype_b_loc@plt+0x11390>
  419f8b:	mov    rax,QWORD PTR [r15]
  419f8e:	mov    ecx,DWORD PTR [r15+0x3c]
  419f92:	inc    ecx
  419f94:	mov    BYTE PTR [rax+0x73],bl
  419f97:	mov    ebx,ecx
  419f99:	mov    DWORD PTR [r15+0x3c],ebx
  419f9d:	mov    rax,QWORD PTR [rsp+0x20]
  419fa2:	mov    ebp,DWORD PTR [rax+0x8]
  419fa5:	mov    eax,DWORD PTR [rsp+0x2c]
  419fa9:	dec    eax
  419fab:	cdqe   
  419fad:	imul   rax,rax,0x51eb851f
  419fb4:	mov    rcx,rax
  419fb7:	sar    rcx,0x24
  419fbb:	shr    rax,0x3f
  419fbf:	lea    ebx,[rcx+rax*1]
  419fc2:	add    ebx,0x1
  419fc5:	mov    esi,ebp
  419fc7:	shl    esi,0x6
  419fca:	or     esi,0x22
  419fcd:	cmp    ebx,0x1ff
  419fd3:	jg     419fdc <__ctype_b_loc@plt+0x17d0c>
  419fd5:	shl    ebx,0xe
  419fd8:	or     ebx,esi
  419fda:	jmp    419feb <__ctype_b_loc@plt+0x17d1b>
  419fdc:	mov    rax,QWORD PTR [r15+0x18]
  419fe0:	mov    edx,DWORD PTR [rax+0x8]
  419fe3:	mov    rdi,r15
  419fe6:	call   419020 <__ctype_b_loc@plt+0x16d50>
  419feb:	mov    rax,QWORD PTR [r15+0x18]
  419fef:	mov    edx,DWORD PTR [rax+0x8]
  419ff2:	mov    rdi,r15
  419ff5:	mov    esi,ebx
  419ff7:	call   419020 <__ctype_b_loc@plt+0x16d50>
  419ffc:	inc    ebp
  419ffe:	mov    DWORD PTR [r15+0x3c],ebp
  41a002:	dec    DWORD PTR [rsp+0x2c]
  41a006:	jmp    41a105 <__ctype_b_loc@plt+0x17e35>
  41a00b:	lea    rsi,[rsp+0x8]
  41a010:	mov    rdi,r15
  41a013:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41a018:	cmp    DWORD PTR [rsp+0x8],0xc
  41a01d:	jne    41a037 <__ctype_b_loc@plt+0x17d67>
  41a01f:	mov    eax,DWORD PTR [rsp+0x10]
  41a023:	test   eax,0x100
  41a028:	jne    41a037 <__ctype_b_loc@plt+0x17d67>
  41a02a:	movzx  ecx,BYTE PTR [r15+0x4a]
  41a02f:	cmp    eax,ecx
  41a031:	jl     41a037 <__ctype_b_loc@plt+0x17d67>
  41a033:	dec    DWORD PTR [r15+0x3c]
  41a037:	mov    edx,DWORD PTR [r15+0x3c]
  41a03b:	lea    ebx,[rdx+0x1]
  41a03e:	mov    rax,QWORD PTR [r15]
  41a041:	movzx  ecx,BYTE PTR [rax+0x73]
  41a045:	cmp    edx,ecx
  41a047:	jl     41a074 <__ctype_b_loc@plt+0x17da4>
  41a049:	mov    ecx,ebx
  41a04b:	cmp    edx,0xf9
  41a051:	jl     41a06f <__ctype_b_loc@plt+0x17d9f>
  41a053:	mov    rdi,QWORD PTR [r15+0x18]
  41a057:	mov    edx,DWORD PTR [rdi+0x10]
  41a05a:	lea    rsi,[rip+0x102bd]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41a061:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a066:	mov    rax,QWORD PTR [r15]
  41a069:	mov    ecx,DWORD PTR [r15+0x3c]
  41a06d:	inc    ecx
  41a06f:	mov    BYTE PTR [rax+0x73],bl
  41a072:	mov    ebx,ecx
  41a074:	mov    DWORD PTR [r15+0x3c],ebx
  41a078:	dec    ebx
  41a07a:	lea    rsi,[rsp+0x8]
  41a07f:	mov    rdi,r15
  41a082:	mov    edx,ebx
  41a084:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41a089:	mov    eax,DWORD PTR [rsp+0x30]
  41a08d:	mov    rcx,QWORD PTR [rsp+0x20]
  41a092:	mov    ebp,DWORD PTR [rcx+0x8]
  41a095:	mov    ecx,DWORD PTR [rsp+0x2c]
  41a099:	dec    ecx
  41a09b:	movsxd rcx,ecx
  41a09e:	imul   rcx,rcx,0x51eb851f
  41a0a5:	mov    rdx,rcx
  41a0a8:	sar    rdx,0x24
  41a0ac:	shr    rcx,0x3f
  41a0b0:	lea    ebx,[rdx+rcx*1]
  41a0b3:	add    ebx,0x1
  41a0b6:	mov    ecx,ebp
  41a0b8:	shl    ecx,0x6
  41a0bb:	mov    edx,eax
  41a0bd:	shl    edx,0x17
  41a0c0:	or     edx,0x22
  41a0c3:	cmp    eax,0xffffffff
  41a0c6:	mov    esi,0x22
  41a0cb:	cmovne esi,edx
  41a0ce:	or     esi,ecx
  41a0d0:	cmp    ebx,0x1ff
  41a0d6:	jg     41a0df <__ctype_b_loc@plt+0x17e0f>
  41a0d8:	shl    ebx,0xe
  41a0db:	or     ebx,esi
  41a0dd:	jmp    41a0ee <__ctype_b_loc@plt+0x17e1e>
  41a0df:	mov    rax,QWORD PTR [r15+0x18]
  41a0e3:	mov    edx,DWORD PTR [rax+0x8]
  41a0e6:	mov    rdi,r15
  41a0e9:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41a0ee:	mov    rax,QWORD PTR [r15+0x18]
  41a0f2:	mov    edx,DWORD PTR [rax+0x8]
  41a0f5:	mov    rdi,r15
  41a0f8:	mov    esi,ebx
  41a0fa:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41a0ff:	inc    ebp
  41a101:	mov    DWORD PTR [r15+0x3c],ebp
  41a105:	mov    rax,QWORD PTR [r15]
  41a108:	mov    rax,QWORD PTR [rax+0x18]
  41a10c:	movsxd rcx,DWORD PTR [rsp+0x3c]
  41a111:	mov    edi,0x7fffff
  41a116:	and    edi,DWORD PTR [rax+rcx*4]
  41a119:	mov    esi,DWORD PTR [rsp+0x2c]
  41a11d:	mov    edx,0x8
  41a122:	cmp    esi,0x10
  41a125:	jb     41a142 <__ctype_b_loc@plt+0x17e72>
  41a127:	mov    ebp,0x8
  41a12c:	nop    DWORD PTR [rax+0x0]
  41a130:	inc    esi
  41a132:	mov    ebx,esi
  41a134:	shr    ebx,1
  41a136:	add    ebp,0x8
  41a139:	cmp    esi,0x1f
  41a13c:	mov    esi,ebx
  41a13e:	ja     41a130 <__ctype_b_loc@plt+0x17e60>
  41a140:	jmp    41a149 <__ctype_b_loc@plt+0x17e79>
  41a142:	mov    ebx,esi
  41a144:	mov    ebp,0x8
  41a149:	lea    esi,[rbx+0x1f8]
  41a14f:	or     esi,ebp
  41a151:	cmp    ebx,0x8
  41a154:	cmovb  esi,ebx
  41a157:	shl    esi,0x17
  41a15a:	or     esi,edi
  41a15c:	mov    DWORD PTR [rax+rcx*4],esi
  41a15f:	and    esi,0xff803fff
  41a165:	mov    ebp,DWORD PTR [rsp+0x28]
  41a169:	cmp    ebp,0x10
  41a16c:	jb     41a192 <__ctype_b_loc@plt+0x17ec2>
  41a16e:	mov    edx,0x8
  41a173:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a17d:	nop    DWORD PTR [rax]
  41a180:	inc    ebp
  41a182:	mov    edi,ebp
  41a184:	shr    edi,1
  41a186:	add    edx,0x8
  41a189:	cmp    ebp,0x1f
  41a18c:	mov    ebp,edi
  41a18e:	ja     41a180 <__ctype_b_loc@plt+0x17eb0>
  41a190:	jmp    41a194 <__ctype_b_loc@plt+0x17ec4>
  41a192:	mov    edi,ebp
  41a194:	lea    ebp,[rdi+0x1f8]
  41a19a:	or     ebp,edx
  41a19c:	cmp    edi,0x8
  41a19f:	cmovb  ebp,edi
  41a1a2:	shl    ebp,0xe
  41a1a5:	and    ebp,0x7fc000
  41a1ab:	or     ebp,esi
  41a1ad:	mov    DWORD PTR [rax+rcx*4],ebp
  41a1b0:	add    rsp,0x58
  41a1b4:	pop    rbx
  41a1b5:	pop    r12
  41a1b7:	pop    r13
  41a1b9:	pop    r14
  41a1bb:	pop    r15
  41a1bd:	pop    rbp
  41a1be:	ret    
  41a1bf:	nop
  41a1c0:	push   rbp
  41a1c1:	push   r15
  41a1c3:	push   r14
  41a1c5:	push   r13
  41a1c7:	push   r12
  41a1c9:	push   rbx
  41a1ca:	sub    rsp,0x288
  41a1d1:	mov    ebp,ecx
  41a1d3:	mov    r14d,edx
  41a1d6:	mov    r13,rsi
  41a1d9:	mov    rbx,rdi
  41a1dc:	lea    rsi,[rsp+0x30]
  41a1e1:	call   411080 <__ctype_b_loc@plt+0xedb0>
  41a1e6:	mov    rax,QWORD PTR [rsp+0x30]
  41a1eb:	mov    DWORD PTR [rsp+0x2c],ebp
  41a1ef:	mov    DWORD PTR [rax+0x60],ebp
  41a1f2:	cmp    DWORD PTR [rbx+0x10],0x28
  41a1f6:	je     41a24d <__ctype_b_loc@plt+0x17f7d>
  41a1f8:	mov    rbp,QWORD PTR [rbx+0x38]
  41a1fc:	call   4022d0 <__ctype_b_loc@plt>
  41a201:	mov    rax,QWORD PTR [rax]
  41a204:	movzx  eax,WORD PTR [rax+0x50]
  41a208:	test   al,0x2
  41a20a:	lea    rax,[rip+0x1004a]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41a211:	lea    rsi,[rip+0x1003a]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41a218:	cmove  rsi,rax
  41a21c:	mov    rdi,rbp
  41a21f:	mov    edx,0x28
  41a224:	xor    eax,eax
  41a226:	call   404800 <__ctype_b_loc@plt+0x2530>
  41a22b:	lea    rsi,[rip+0x10263]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41a232:	mov    rdi,rbp
  41a235:	mov    rdx,rax
  41a238:	xor    eax,eax
  41a23a:	call   404800 <__ctype_b_loc@plt+0x2530>
  41a23f:	mov    edx,DWORD PTR [rbx+0x10]
  41a242:	mov    rdi,rbx
  41a245:	mov    rsi,rax
  41a248:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a24d:	mov    eax,DWORD PTR [rbx+0x4]
  41a250:	mov    ecx,DWORD PTR [rbx+0x20]
  41a253:	mov    DWORD PTR [rbx+0x8],eax
  41a256:	lea    rax,[rbx+0x20]
  41a25a:	cmp    ecx,0x11f
  41a260:	mov    QWORD PTR [rsp],rax
  41a264:	jne    41a2cb <__ctype_b_loc@plt+0x17ffb>
  41a266:	lea    rsi,[rbx+0x18]
  41a26a:	mov    rdi,rbx
  41a26d:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a272:	mov    DWORD PTR [rbx+0x10],eax
  41a275:	test   r14d,r14d
  41a278:	je     41a2e0 <__ctype_b_loc@plt+0x18010>
  41a27a:	lea    rsi,[rip+0x1014c]        # 42a3cd <__ctype_b_loc@plt+0x280fd>
  41a281:	mov    edx,0x4
  41a286:	mov    rdi,rbx
  41a289:	call   414230 <__ctype_b_loc@plt+0x11f60>
  41a28e:	mov    rdi,rbx
  41a291:	mov    rsi,rax
  41a294:	xor    edx,edx
  41a296:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  41a29b:	mov    rsi,QWORD PTR [rbx+0x30]
  41a29f:	mov    al,BYTE PTR [rsi+0x4a]
  41a2a2:	inc    al
  41a2a4:	mov    BYTE PTR [rsi+0x4a],al
  41a2a7:	mov    ecx,DWORD PTR [rsi+0x30]
  41a2aa:	mov    rbp,QWORD PTR [rsi]
  41a2ad:	mov    rdx,QWORD PTR [rbp+0x30]
  41a2b1:	movzx  eax,al
  41a2b4:	mov    QWORD PTR [rsp+0x18],rsi
  41a2b9:	movzx  eax,WORD PTR [rsi+rax*2+0xc2]
  41a2c1:	shl    rax,0x4
  41a2c5:	mov    DWORD PTR [rdx+rax*1+0x8],ecx
  41a2c9:	jmp    41a2ec <__ctype_b_loc@plt+0x1801c>
  41a2cb:	vmovups xmm0,XMMWORD PTR [rax]
  41a2cf:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41a2d4:	mov    DWORD PTR [rbx+0x20],0x11f
  41a2db:	test   r14d,r14d
  41a2de:	jne    41a27a <__ctype_b_loc@plt+0x17faa>
  41a2e0:	mov    rax,QWORD PTR [rbx+0x30]
  41a2e4:	mov    QWORD PTR [rsp+0x18],rax
  41a2e9:	mov    rbp,QWORD PTR [rax]
  41a2ec:	mov    r14,QWORD PTR [rsp]
  41a2f0:	mov    BYTE PTR [rbp+0x72],0x0
  41a2f4:	mov    edx,DWORD PTR [rbx+0x10]
  41a2f7:	xor    eax,eax
  41a2f9:	mov    r12d,0x0
  41a2ff:	cmp    edx,0x29
  41a302:	mov    QWORD PTR [rsp+0x20],rbp
  41a307:	mov    QWORD PTR [rsp+0x8],r13
  41a30c:	je     41a461 <__ctype_b_loc@plt+0x18191>
  41a312:	lea    rax,[rbx+0x18]
  41a316:	mov    QWORD PTR [rsp+0x10],rax
  41a31b:	lea    r13,[rbx+0x10]
  41a31f:	xor    r12d,r12d
  41a322:	cmp    edx,0x11d
  41a328:	jne    41a34d <__ctype_b_loc@plt+0x1807d>
  41a32a:	jmp    41a370 <__ctype_b_loc@plt+0x180a0>
  41a32c:	nop    DWORD PTR [rax+0x0]
  41a330:	vmovups xmm0,XMMWORD PTR [r14]
  41a335:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41a33b:	mov    DWORD PTR [rbx+0x20],0x11f
  41a342:	mov    edx,DWORD PTR [rbx+0x10]
  41a345:	cmp    edx,0x11d
  41a34b:	je     41a370 <__ctype_b_loc@plt+0x180a0>
  41a34d:	cmp    edx,0x117
  41a353:	je     41a416 <__ctype_b_loc@plt+0x18146>
  41a359:	mov    rdi,rbx
  41a35c:	lea    rsi,[rip+0x10088]        # 42a3eb <__ctype_b_loc@plt+0x2811b>
  41a363:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a368:	jmp    41a3d1 <__ctype_b_loc@plt+0x18101>
  41a36a:	nop    WORD PTR [rax+rax*1+0x0]
  41a370:	mov    r15,QWORD PTR [rbx+0x18]
  41a374:	mov    eax,DWORD PTR [rbx+0x4]
  41a377:	mov    DWORD PTR [rbx+0x8],eax
  41a37a:	cmp    DWORD PTR [rbx+0x20],0x11f
  41a381:	jne    41a3a0 <__ctype_b_loc@plt+0x180d0>
  41a383:	mov    rdi,rbx
  41a386:	mov    rsi,QWORD PTR [rsp+0x10]
  41a38b:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a390:	mov    DWORD PTR [rbx+0x10],eax
  41a393:	jmp    41a3b2 <__ctype_b_loc@plt+0x180e2>
  41a395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a39f:	nop
  41a3a0:	vmovups xmm0,XMMWORD PTR [r14]
  41a3a5:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41a3ab:	mov    DWORD PTR [r14],0x11f
  41a3b2:	lea    r14d,[r12+0x1]
  41a3b7:	mov    rdi,rbx
  41a3ba:	mov    rsi,r15
  41a3bd:	mov    edx,r12d
  41a3c0:	call   41b4a0 <__ctype_b_loc@plt+0x191d0>
  41a3c5:	mov    r12d,r14d
  41a3c8:	mov    r14,QWORD PTR [rsp]
  41a3cc:	mov    rbp,QWORD PTR [rsp+0x20]
  41a3d1:	mov    al,BYTE PTR [rbp+0x72]
  41a3d4:	test   al,al
  41a3d6:	jne    41a43b <__ctype_b_loc@plt+0x1816b>
  41a3d8:	cmp    DWORD PTR [rbx+0x10],0x2c
  41a3dc:	jne    41a439 <__ctype_b_loc@plt+0x18169>
  41a3de:	mov    eax,DWORD PTR [rbx+0x4]
  41a3e1:	mov    ecx,DWORD PTR [rbx+0x20]
  41a3e4:	mov    DWORD PTR [rbx+0x8],eax
  41a3e7:	cmp    ecx,0x11f
  41a3ed:	jne    41a330 <__ctype_b_loc@plt+0x18060>
  41a3f3:	mov    rdi,rbx
  41a3f6:	mov    rsi,QWORD PTR [rsp+0x10]
  41a3fb:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a400:	mov    edx,eax
  41a402:	mov    DWORD PTR [rbx+0x10],eax
  41a405:	cmp    edx,0x11d
  41a40b:	jne    41a34d <__ctype_b_loc@plt+0x1807d>
  41a411:	jmp    41a370 <__ctype_b_loc@plt+0x180a0>
  41a416:	mov    eax,DWORD PTR [rbx+0x4]
  41a419:	mov    ecx,DWORD PTR [rbx+0x20]
  41a41c:	mov    DWORD PTR [rbx+0x8],eax
  41a41f:	cmp    ecx,0x11f
  41a425:	jne    41a442 <__ctype_b_loc@plt+0x18172>
  41a427:	mov    rdi,rbx
  41a42a:	mov    rsi,QWORD PTR [rsp+0x10]
  41a42f:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a434:	mov    DWORD PTR [rbx+0x10],eax
  41a437:	jmp    41a454 <__ctype_b_loc@plt+0x18184>
  41a439:	xor    eax,eax
  41a43b:	mov    r13,QWORD PTR [rsp+0x8]
  41a440:	jmp    41a461 <__ctype_b_loc@plt+0x18191>
  41a442:	vmovups xmm0,XMMWORD PTR [r14]
  41a447:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41a44d:	mov    DWORD PTR [r14],0x11f
  41a454:	mov    r13,QWORD PTR [rsp+0x8]
  41a459:	mov    al,BYTE PTR [rbp+0x72]
  41a45c:	or     al,0x2
  41a45e:	mov    BYTE PTR [rbp+0x72],al
  41a461:	mov    r10,QWORD PTR [rbx+0x30]
  41a465:	mov    sil,BYTE PTR [r10+0x4a]
  41a469:	add    sil,r12b
  41a46c:	mov    BYTE PTR [r10+0x4a],sil
  41a470:	test   r12d,r12d
  41a473:	je     41a570 <__ctype_b_loc@plt+0x182a0>
  41a479:	mov    ecx,DWORD PTR [r10+0x30]
  41a47d:	mov    rdx,QWORD PTR [r10]
  41a480:	mov    rdx,QWORD PTR [rdx+0x30]
  41a484:	movsxd r11,r12d
  41a487:	movzx  r8d,sil
  41a48b:	lea    r9d,[r12-0x1]
  41a490:	test   r12b,0x7
  41a494:	je     41a4d7 <__ctype_b_loc@plt+0x18207>
  41a496:	lea    rsi,[r8+r8*1]
  41a49a:	lea    rdi,[r11+r11*1]
  41a49e:	sub    rsi,rdi
  41a4a1:	lea    rdi,[rsi+r10*1]
  41a4a5:	add    rdi,0xc4
  41a4ac:	and    r12d,0x7
  41a4b0:	xor    esi,esi
  41a4b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a4bc:	nop    DWORD PTR [rax+0x0]
  41a4c0:	movzx  ebp,WORD PTR [rdi+rsi*2]
  41a4c4:	shl    rbp,0x4
  41a4c8:	mov    DWORD PTR [rdx+rbp*1+0x8],ecx
  41a4cc:	inc    rsi
  41a4cf:	cmp    r12d,esi
  41a4d2:	jne    41a4c0 <__ctype_b_loc@plt+0x181f0>
  41a4d4:	sub    r11,rsi
  41a4d7:	cmp    r9d,0x7
  41a4db:	jb     41a570 <__ctype_b_loc@plt+0x182a0>
  41a4e1:	add    r8,r8
  41a4e4:	lea    rsi,[r11+r11*1]
  41a4e8:	sub    r8,rsi
  41a4eb:	lea    rdi,[r8+r10*1]
  41a4ef:	add    rdi,0xd2
  41a4f6:	xor    ebp,ebp
  41a4f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a500:	movzx  esi,WORD PTR [rdi+rbp*2-0xe]
  41a505:	shl    rsi,0x4
  41a509:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a50d:	movzx  esi,WORD PTR [rdi+rbp*2-0xc]
  41a512:	shl    rsi,0x4
  41a516:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a51a:	movzx  esi,WORD PTR [rdi+rbp*2-0xa]
  41a51f:	shl    rsi,0x4
  41a523:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a527:	movzx  esi,WORD PTR [rdi+rbp*2-0x8]
  41a52c:	shl    rsi,0x4
  41a530:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a534:	movzx  esi,WORD PTR [rdi+rbp*2-0x6]
  41a539:	shl    rsi,0x4
  41a53d:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a541:	movzx  esi,WORD PTR [rdi+rbp*2-0x4]
  41a546:	shl    rsi,0x4
  41a54a:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a54e:	movzx  esi,WORD PTR [rdi+rbp*2-0x2]
  41a553:	shl    rsi,0x4
  41a557:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a55b:	movzx  esi,WORD PTR [rdi+rbp*2]
  41a55f:	shl    rsi,0x4
  41a563:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41a567:	add    rbp,0x8
  41a56b:	cmp    r11d,ebp
  41a56e:	jne    41a500 <__ctype_b_loc@plt+0x18230>
  41a570:	mov    r12,QWORD PTR [rsp+0x18]
  41a575:	movzx  r15d,BYTE PTR [r12+0x4a]
  41a57b:	and    al,0x1
  41a57d:	mov    ecx,r15d
  41a580:	sub    cl,al
  41a582:	mov    rax,QWORD PTR [rsp+0x20]
  41a587:	mov    BYTE PTR [rax+0x71],cl
  41a58a:	mov    ebp,DWORD PTR [r12+0x3c]
  41a58f:	add    ebp,r15d
  41a592:	mov    rax,QWORD PTR [r12]
  41a596:	movzx  ecx,BYTE PTR [rax+0x73]
  41a59a:	cmp    ebp,ecx
  41a59c:	jle    41a5ce <__ctype_b_loc@plt+0x182fe>
  41a59e:	mov    ecx,ebp
  41a5a0:	cmp    ebp,0xfa
  41a5a6:	jl     41a5c8 <__ctype_b_loc@plt+0x182f8>
  41a5a8:	mov    rdi,QWORD PTR [r12+0x18]
  41a5ad:	mov    edx,DWORD PTR [rdi+0x10]
  41a5b0:	lea    rsi,[rip+0xfd67]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41a5b7:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a5bc:	mov    rax,QWORD PTR [r12]
  41a5c0:	add    r15d,DWORD PTR [r12+0x3c]
  41a5c5:	mov    ecx,r15d
  41a5c8:	mov    BYTE PTR [rax+0x73],bpl
  41a5cc:	mov    ebp,ecx
  41a5ce:	mov    DWORD PTR [r12+0x3c],ebp
  41a5d3:	cmp    DWORD PTR [rbx+0x10],0x29
  41a5d7:	je     41a62e <__ctype_b_loc@plt+0x1835e>
  41a5d9:	mov    rbp,QWORD PTR [rbx+0x38]
  41a5dd:	call   4022d0 <__ctype_b_loc@plt>
  41a5e2:	mov    rax,QWORD PTR [rax]
  41a5e5:	movzx  eax,WORD PTR [rax+0x52]
  41a5e9:	test   al,0x2
  41a5eb:	lea    rax,[rip+0xfc69]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41a5f2:	lea    rsi,[rip+0xfc59]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41a5f9:	cmove  rsi,rax
  41a5fd:	mov    rdi,rbp
  41a600:	mov    edx,0x29
  41a605:	xor    eax,eax
  41a607:	call   404800 <__ctype_b_loc@plt+0x2530>
  41a60c:	lea    rsi,[rip+0xfe82]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41a613:	mov    rdi,rbp
  41a616:	mov    rdx,rax
  41a619:	xor    eax,eax
  41a61b:	call   404800 <__ctype_b_loc@plt+0x2530>
  41a620:	mov    edx,DWORD PTR [rbx+0x10]
  41a623:	mov    rdi,rbx
  41a626:	mov    rsi,rax
  41a629:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a62e:	mov    eax,DWORD PTR [rbx+0x4]
  41a631:	mov    ecx,DWORD PTR [rbx+0x20]
  41a634:	mov    DWORD PTR [rbx+0x8],eax
  41a637:	cmp    ecx,0x11f
  41a63d:	jne    41a650 <__ctype_b_loc@plt+0x18380>
  41a63f:	lea    rsi,[rbx+0x18]
  41a643:	mov    rdi,rbx
  41a646:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a64b:	mov    DWORD PTR [rbx+0x10],eax
  41a64e:	jmp    41a661 <__ctype_b_loc@plt+0x18391>
  41a650:	vmovups xmm0,XMMWORD PTR [r14]
  41a655:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41a65a:	mov    DWORD PTR [rbx+0x20],0x11f
  41a661:	mov    rax,QWORD PTR [rbx+0x38]
  41a665:	mov    ecx,DWORD PTR [rax+0x60]
  41a668:	inc    ecx
  41a66a:	mov    WORD PTR [rax+0x60],cx
  41a66e:	movzx  eax,cx
  41a671:	cmp    eax,0xc9
  41a676:	jb     41a689 <__ctype_b_loc@plt+0x183b9>
  41a678:	lea    rsi,[rip+0xfc38]        # 42a2b7 <__ctype_b_loc@plt+0x27fe7>
  41a67f:	mov    rdi,rbx
  41a682:	xor    edx,edx
  41a684:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a689:	lea    r14,[rbx+0x10]
  41a68d:	lea    r12,[rbx+0x18]
  41a691:	mov    r15d,0x8010007
  41a697:	jmp    41a6bd <__ctype_b_loc@plt+0x183ed>
  41a699:	nop    DWORD PTR [rax+0x0]
  41a6a0:	mov    rdi,rbx
  41a6a3:	mov    rsi,r12
  41a6a6:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a6ab:	mov    DWORD PTR [rbx+0x10],eax
  41a6ae:	mov    rax,QWORD PTR [rbx+0x30]
  41a6b2:	movzx  ecx,BYTE PTR [rax+0x4a]
  41a6b6:	mov    DWORD PTR [rax+0x3c],ecx
  41a6b9:	test   ebp,ebp
  41a6bb:	jne    41a707 <__ctype_b_loc@plt+0x18437>
  41a6bd:	mov    eax,DWORD PTR [rbx+0x10]
  41a6c0:	lea    ecx,[rax-0x104]
  41a6c6:	cmp    ecx,0x1b
  41a6c9:	ja     41a6d1 <__ctype_b_loc@plt+0x18401>
  41a6cb:	bt     r15d,ecx
  41a6cf:	jb     41a70a <__ctype_b_loc@plt+0x1843a>
  41a6d1:	mov    rdi,rbx
  41a6d4:	call   4142e0 <__ctype_b_loc@plt+0x12010>
  41a6d9:	mov    ebp,eax
  41a6db:	cmp    DWORD PTR [rbx+0x10],0x3b
  41a6df:	jne    41a6ae <__ctype_b_loc@plt+0x183de>
  41a6e1:	mov    eax,DWORD PTR [rbx+0x4]
  41a6e4:	mov    ecx,DWORD PTR [rbx+0x20]
  41a6e7:	mov    DWORD PTR [rbx+0x8],eax
  41a6ea:	cmp    ecx,0x11f
  41a6f0:	je     41a6a0 <__ctype_b_loc@plt+0x183d0>
  41a6f2:	mov    rax,QWORD PTR [rsp]
  41a6f6:	vmovups xmm0,XMMWORD PTR [rax]
  41a6fa:	vmovups XMMWORD PTR [r14],xmm0
  41a6ff:	mov    DWORD PTR [rax],0x11f
  41a705:	jmp    41a6ae <__ctype_b_loc@plt+0x183de>
  41a707:	mov    eax,DWORD PTR [rbx+0x10]
  41a70a:	mov    rdi,QWORD PTR [rbx+0x38]
  41a70e:	dec    WORD PTR [rdi+0x60]
  41a712:	mov    ecx,DWORD PTR [rbx+0x4]
  41a715:	mov    rdx,QWORD PTR [rsp+0x30]
  41a71a:	mov    DWORD PTR [rdx+0x64],ecx
  41a71d:	cmp    eax,0x106
  41a722:	jne    41a740 <__ctype_b_loc@plt+0x18470>
  41a724:	mov    DWORD PTR [rbx+0x8],ecx
  41a727:	cmp    DWORD PTR [rbx+0x20],0x11f
  41a72e:	jne    41a761 <__ctype_b_loc@plt+0x18491>
  41a730:	mov    rdi,rbx
  41a733:	mov    rsi,r12
  41a736:	call   411660 <__ctype_b_loc@plt+0xf390>
  41a73b:	mov    DWORD PTR [rbx+0x10],eax
  41a73e:	jmp    41a7a0 <__ctype_b_loc@plt+0x184d0>
  41a740:	mov    r8d,DWORD PTR [rsp+0x2c]
  41a745:	cmp    ecx,r8d
  41a748:	jne    41a776 <__ctype_b_loc@plt+0x184a6>
  41a74a:	lea    rsi,[rip+0xfd44]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41a751:	lea    rdx,[rip+0xf8af]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  41a758:	xor    eax,eax
  41a75a:	call   404800 <__ctype_b_loc@plt+0x2530>
  41a75f:	jmp    41a792 <__ctype_b_loc@plt+0x184c2>
  41a761:	mov    rax,QWORD PTR [rsp]
  41a765:	vmovups xmm0,XMMWORD PTR [rax]
  41a769:	vmovups XMMWORD PTR [r14],xmm0
  41a76e:	mov    DWORD PTR [rax],0x11f
  41a774:	jmp    41a7a0 <__ctype_b_loc@plt+0x184d0>
  41a776:	lea    rsi,[rip+0xfcef]        # 42a46c <__ctype_b_loc@plt+0x2819c>
  41a77d:	lea    rdx,[rip+0xf883]        # 42a007 <__ctype_b_loc@plt+0x27d37>
  41a784:	lea    rcx,[rip+0xfbd8]        # 42a363 <__ctype_b_loc@plt+0x28093>
  41a78b:	xor    eax,eax
  41a78d:	call   404800 <__ctype_b_loc@plt+0x2530>
  41a792:	mov    edx,DWORD PTR [rbx+0x10]
  41a795:	mov    rdi,rbx
  41a798:	mov    rsi,rax
  41a79b:	call   413660 <__ctype_b_loc@plt+0x11390>
  41a7a0:	mov    rdi,rbx
  41a7a3:	call   411230 <__ctype_b_loc@plt+0xef60>
  41a7a8:	mov    rbp,QWORD PTR [rbx+0x30]
  41a7ac:	mov    r15,QWORD PTR [rbp+0x0]
  41a7b0:	mov    ecx,DWORD PTR [r15+0x58]
  41a7b4:	cmp    DWORD PTR [rbp+0x44],ecx
  41a7b7:	jl     41a940 <__ctype_b_loc@plt+0x18670>
  41a7bd:	mov    r12,QWORD PTR [rbx+0x38]
  41a7c1:	mov    rsi,QWORD PTR [r15+0x20]
  41a7c5:	cmp    ecx,0x1ffff
  41a7cb:	mov    QWORD PTR [rsp+0x20],rcx
  41a7d0:	jge    41a7e4 <__ctype_b_loc@plt+0x18514>
  41a7d2:	lea    eax,[rcx+rcx*1]
  41a7d5:	cmp    eax,0x3
  41a7d8:	mov    r14d,0x4
  41a7de:	cmovg  r14d,eax
  41a7e2:	jmp    41a7f2 <__ctype_b_loc@plt+0x18522>
  41a7e4:	mov    r14d,0x3ffff
  41a7ea:	cmp    ecx,0x3ffff
  41a7f0:	jge    41a7f6 <__ctype_b_loc@plt+0x18526>
  41a7f2:	mov    eax,ecx
  41a7f4:	jmp    41a811 <__ctype_b_loc@plt+0x18541>
  41a7f6:	mov    r13,rsi
  41a7f9:	lea    rsi,[rip+0xfb06]        # 42a306 <__ctype_b_loc@plt+0x28036>
  41a800:	mov    rdi,r12
  41a803:	xor    eax,eax
  41a805:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41a80a:	mov    rsi,r13
  41a80d:	mov    eax,DWORD PTR [r15+0x58]
  41a811:	mov    DWORD PTR [rsp+0x10],r14d
  41a816:	movsxd r13,eax
  41a819:	shl    r13,0x3
  41a81d:	mov    eax,r14d
  41a820:	mov    QWORD PTR [rsp],rax
  41a824:	lea    r14,[rax*8+0x0]
  41a82c:	mov    QWORD PTR [rsp+0x18],r12
  41a831:	mov    r12,QWORD PTR [r12+0x20]
  41a836:	mov    rdi,QWORD PTR [r12+0x18]
  41a83b:	mov    rdx,r13
  41a83e:	mov    rcx,r14
  41a841:	call   QWORD PTR [r12+0x10]
  41a846:	test   rax,rax
  41a849:	je     41aa17 <__ctype_b_loc@plt+0x18747>
  41a84f:	sub    r14,r13
  41a852:	add    QWORD PTR [r12+0x78],r14
  41a857:	mov    ecx,DWORD PTR [rsp+0x10]
  41a85b:	mov    DWORD PTR [r15+0x58],ecx
  41a85f:	mov    QWORD PTR [r15+0x20],rax
  41a863:	mov    rdx,QWORD PTR [rsp+0x20]
  41a868:	cmp    edx,ecx
  41a86a:	mov    r13,QWORD PTR [rsp+0x8]
  41a86f:	mov    rdi,QWORD PTR [rsp]
  41a873:	jge    41a940 <__ctype_b_loc@plt+0x18670>
  41a879:	movsxd rsi,edx
  41a87c:	lea    rcx,[rsi+0x1]
  41a880:	mov    QWORD PTR [rax+rsi*8],0x0
  41a888:	cmp    rcx,rdi
  41a88b:	je     41a940 <__ctype_b_loc@plt+0x18670>
  41a891:	not    edx
  41a893:	add    edx,edi
  41a895:	mov    rax,rdi
  41a898:	sub    rax,rsi
  41a89b:	add    rax,0xfffffffffffffffe
  41a89f:	and    rdx,0x7
  41a8a3:	je     41a8c4 <__ctype_b_loc@plt+0x185f4>
  41a8a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8af:	nop
  41a8b0:	mov    rsi,QWORD PTR [r15+0x20]
  41a8b4:	mov    QWORD PTR [rsi+rcx*8],0x0
  41a8bc:	inc    rcx
  41a8bf:	dec    rdx
  41a8c2:	jne    41a8b0 <__ctype_b_loc@plt+0x185e0>
  41a8c4:	cmp    rax,0x7
  41a8c8:	jb     41a940 <__ctype_b_loc@plt+0x18670>
  41a8ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a8d0:	mov    rax,QWORD PTR [r15+0x20]
  41a8d4:	mov    QWORD PTR [rax+rcx*8],0x0
  41a8dc:	mov    rax,QWORD PTR [r15+0x20]
  41a8e0:	mov    QWORD PTR [rax+rcx*8+0x8],0x0
  41a8e9:	mov    rax,QWORD PTR [r15+0x20]
  41a8ed:	mov    QWORD PTR [rax+rcx*8+0x10],0x0
  41a8f6:	mov    rax,QWORD PTR [r15+0x20]
  41a8fa:	mov    QWORD PTR [rax+rcx*8+0x18],0x0
  41a903:	mov    rax,QWORD PTR [r15+0x20]
  41a907:	mov    QWORD PTR [rax+rcx*8+0x20],0x0
  41a910:	mov    rax,QWORD PTR [r15+0x20]
  41a914:	mov    QWORD PTR [rax+rcx*8+0x28],0x0
  41a91d:	mov    rax,QWORD PTR [r15+0x20]
  41a921:	mov    QWORD PTR [rax+rcx*8+0x30],0x0
  41a92a:	mov    rax,QWORD PTR [r15+0x20]
  41a92e:	mov    QWORD PTR [rax+rcx*8+0x38],0x0
  41a937:	add    rcx,0x8
  41a93b:	cmp    rdi,rcx
  41a93e:	jne    41a8d0 <__ctype_b_loc@plt+0x18600>
  41a940:	mov    rax,QWORD PTR [rsp+0x30]
  41a945:	mov    rcx,QWORD PTR [r15+0x20]
  41a949:	movsxd rdx,DWORD PTR [rbp+0x44]
  41a94d:	lea    esi,[rdx+0x1]
  41a950:	mov    DWORD PTR [rbp+0x44],esi
  41a953:	mov    QWORD PTR [rcx+rdx*8],rax
  41a957:	mov    rsi,QWORD PTR [rsp+0x30]
  41a95c:	test   BYTE PTR [rsi+0x9],0x3
  41a960:	je     41a98d <__ctype_b_loc@plt+0x186bd>
  41a962:	mov    al,BYTE PTR [r15+0x9]
  41a966:	test   al,0x4
  41a968:	je     41a98d <__ctype_b_loc@plt+0x186bd>
  41a96a:	mov    rcx,QWORD PTR [rbx+0x38]
  41a96e:	mov    rdi,QWORD PTR [rcx+0x20]
  41a972:	cmp    BYTE PTR [rdi+0x21],0x1
  41a976:	jne    41a97f <__ctype_b_loc@plt+0x186af>
  41a978:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  41a97d:	jmp    41a98d <__ctype_b_loc@plt+0x186bd>
  41a97f:	and    al,0xf8
  41a981:	mov    cl,BYTE PTR [rdi+0x20]
  41a984:	and    cl,0x3
  41a987:	or     cl,al
  41a989:	mov    BYTE PTR [r15+0x9],cl
  41a98d:	mov    esi,DWORD PTR [rbp+0x44]
  41a990:	shl    esi,0xe
  41a993:	add    esi,0xffffc024
  41a999:	mov    rax,QWORD PTR [rbp+0x18]
  41a99d:	mov    edx,DWORD PTR [rax+0x8]
  41a9a0:	mov    rdi,rbp
  41a9a3:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41a9a8:	mov    QWORD PTR [r13+0x10],0xffffffffffffffff
  41a9b0:	mov    DWORD PTR [r13+0x0],0xb
  41a9b8:	mov    DWORD PTR [r13+0x8],eax
  41a9bc:	mov    rax,QWORD PTR [rsp+0x30]
  41a9c1:	cmp    BYTE PTR [rax+0x70],0x0
  41a9c5:	je     41aa05 <__ctype_b_loc@plt+0x18735>
  41a9c7:	xor    ebx,ebx
  41a9c9:	nop    DWORD PTR [rax+0x0]
  41a9d0:	xor    eax,eax
  41a9d2:	cmp    BYTE PTR [rsp+rbx*2+0x7b],0x6
  41a9d7:	setne  al
  41a9da:	movzx  ecx,BYTE PTR [rsp+rbx*2+0x7c]
  41a9df:	shl    ecx,0x17
  41a9e2:	lea    esi,[rcx+rax*4]
  41a9e5:	mov    rax,QWORD PTR [rbp+0x18]
  41a9e9:	mov    edx,DWORD PTR [rax+0x8]
  41a9ec:	mov    rdi,rbp
  41a9ef:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41a9f4:	inc    rbx
  41a9f7:	mov    rax,QWORD PTR [rsp+0x30]
  41a9fc:	movzx  eax,BYTE PTR [rax+0x70]
  41aa00:	cmp    rbx,rax
  41aa03:	jb     41a9d0 <__ctype_b_loc@plt+0x18700>
  41aa05:	add    rsp,0x288
  41aa0c:	pop    rbx
  41aa0d:	pop    r12
  41aa0f:	pop    r13
  41aa11:	pop    r14
  41aa13:	pop    r15
  41aa15:	pop    rbp
  41aa16:	ret    
  41aa17:	mov    rax,QWORD PTR [rsp+0x18]
  41aa1c:	mov    rdi,QWORD PTR [rax+0xa8]
  41aa23:	test   rdi,rdi
  41aa26:	jne    41aa61 <__ctype_b_loc@plt+0x18791>
  41aa28:	mov    rbx,rax
  41aa2b:	mov    BYTE PTR [rbx+0xa],0x4
  41aa2f:	mov    rax,QWORD PTR [rbx+0x20]
  41aa33:	cmp    QWORD PTR [rax+0x98],0x0
  41aa3b:	je     41aa57 <__ctype_b_loc@plt+0x18787>
  41aa3d:	mov    rdi,rbx
  41aa40:	mov    esi,0x4
  41aa45:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41aa4a:	mov    rax,QWORD PTR [rbx+0x20]
  41aa4e:	mov    rdi,rbx
  41aa51:	call   QWORD PTR [rax+0x98]
  41aa57:	mov    edi,0x1
  41aa5c:	call   402280 <exit@plt>
  41aa61:	mov    DWORD PTR [rdi+0xd0],0x4
  41aa6b:	add    rdi,0x8
  41aa6f:	mov    esi,0x1
  41aa74:	call   402230 <longjmp@plt>
  41aa79:	nop    DWORD PTR [rax+0x0]
  41aa80:	push   rbp
  41aa81:	push   r15
  41aa83:	push   r14
  41aa85:	push   r13
  41aa87:	push   r12
  41aa89:	push   rbx
  41aa8a:	sub    rsp,0x38
  41aa8e:	mov    r15,rsi
  41aa91:	mov    r14,rdi
  41aa94:	mov    rbx,QWORD PTR [rdi+0x30]
  41aa98:	mov    edx,DWORD PTR [rdi+0x10]
  41aa9b:	cmp    edx,0x11d
  41aaa1:	je     41aacd <__ctype_b_loc@plt+0x187fd>
  41aaa3:	cmp    edx,0x28
  41aaa6:	jne    41aaf9 <__ctype_b_loc@plt+0x18829>
  41aaa8:	mov    ebp,DWORD PTR [r14+0x4]
  41aaac:	mov    eax,DWORD PTR [r14+0x20]
  41aab0:	mov    DWORD PTR [r14+0x8],ebp
  41aab4:	cmp    eax,0x11f
  41aab9:	jne    41ab0d <__ctype_b_loc@plt+0x1883d>
  41aabb:	lea    rsi,[r14+0x18]
  41aabf:	mov    rdi,r14
  41aac2:	call   411660 <__ctype_b_loc@plt+0xf390>
  41aac7:	mov    DWORD PTR [r14+0x10],eax
  41aacb:	jmp    41ab23 <__ctype_b_loc@plt+0x18853>
  41aacd:	mov    r12,QWORD PTR [r14+0x18]
  41aad1:	mov    eax,DWORD PTR [r14+0x4]
  41aad5:	mov    DWORD PTR [r14+0x8],eax
  41aad9:	cmp    DWORD PTR [r14+0x20],0x11f
  41aae1:	jne    41ab52 <__ctype_b_loc@plt+0x18882>
  41aae3:	lea    rsi,[r14+0x18]
  41aae7:	mov    rdi,r14
  41aaea:	call   411660 <__ctype_b_loc@plt+0xf390>
  41aaef:	mov    DWORD PTR [r14+0x10],eax
  41aaf3:	mov    rbp,QWORD PTR [r14+0x30]
  41aaf7:	jmp    41ab6b <__ctype_b_loc@plt+0x1889b>
  41aaf9:	lea    rsi,[rip+0xf904]        # 42a404 <__ctype_b_loc@plt+0x28134>
  41ab00:	mov    rdi,r14
  41ab03:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ab08:	jmp    41aba4 <__ctype_b_loc@plt+0x188d4>
  41ab0d:	lea    rax,[r14+0x20]
  41ab11:	vmovups xmm0,XMMWORD PTR [rax]
  41ab15:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41ab1b:	mov    DWORD PTR [r14+0x20],0x11f
  41ab23:	mov    rdi,r14
  41ab26:	mov    rsi,r15
  41ab29:	xor    edx,edx
  41ab2b:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41ab30:	mov    rdi,r14
  41ab33:	mov    esi,0x29
  41ab38:	mov    edx,0x28
  41ab3d:	mov    ecx,ebp
  41ab3f:	call   417390 <__ctype_b_loc@plt+0x150c0>
  41ab44:	mov    rdi,QWORD PTR [r14+0x30]
  41ab48:	mov    rsi,r15
  41ab4b:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41ab50:	jmp    41aba4 <__ctype_b_loc@plt+0x188d4>
  41ab52:	lea    rax,[r14+0x20]
  41ab56:	vmovups xmm0,XMMWORD PTR [rax]
  41ab5a:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41ab60:	mov    DWORD PTR [r14+0x20],0x11f
  41ab68:	mov    rbp,rbx
  41ab6b:	mov    rdi,rbp
  41ab6e:	mov    rsi,r12
  41ab71:	mov    rdx,r15
  41ab74:	mov    ecx,0x1
  41ab79:	call   41bda0 <__ctype_b_loc@plt+0x19ad0>
  41ab7e:	cmp    eax,0x8
  41ab81:	jne    41aba4 <__ctype_b_loc@plt+0x188d4>
  41ab83:	mov    QWORD PTR [rsp+0x8],r12
  41ab88:	mov    DWORD PTR [rsp+0x10],0x4
  41ab90:	lea    rdx,[rsp+0x8]
  41ab95:	mov    rdi,rbp
  41ab98:	mov    rsi,rdx
  41ab9b:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  41aba0:	mov    DWORD PTR [r15+0x8],eax
  41aba4:	lea    rax,[r14+0x20]
  41aba8:	mov    QWORD PTR [rsp+0x30],rax
  41abad:	lea    rax,[r14+0x10]
  41abb1:	mov    QWORD PTR [rsp+0x28],rax
  41abb6:	lea    rax,[r14+0x18]
  41abba:	mov    QWORD PTR [rsp+0x20],rax
  41abbf:	lea    r13,[rsp+0x8]
  41abc4:	jmp    41abf3 <__ctype_b_loc@plt+0x18923>
  41abc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abd0:	mov    BYTE PTR [rax+0x73],bpl
  41abd4:	mov    ebp,edx
  41abd6:	mov    DWORD PTR [rbx+0x3c],ebp
  41abd9:	dec    ebp
  41abdb:	mov    rdi,rbx
  41abde:	mov    rsi,r15
  41abe1:	mov    edx,ebp
  41abe3:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41abe8:	mov    rdi,r14
  41abeb:	mov    rsi,r15
  41abee:	call   41b960 <__ctype_b_loc@plt+0x19690>
  41abf3:	mov    eax,DWORD PTR [r14+0x10]
  41abf7:	cmp    eax,0x5a
  41abfa:	jg     41ac50 <__ctype_b_loc@plt+0x18980>
  41abfc:	cmp    eax,0x28
  41abff:	je     41ac69 <__ctype_b_loc@plt+0x18999>
  41ac01:	cmp    eax,0x2e
  41ac04:	je     41ace3 <__ctype_b_loc@plt+0x18a13>
  41ac0a:	cmp    eax,0x3a
  41ac0d:	jne    41b000 <__ctype_b_loc@plt+0x18d30>
  41ac13:	mov    eax,DWORD PTR [r14+0x4]
  41ac17:	mov    ecx,DWORD PTR [r14+0x20]
  41ac1b:	mov    DWORD PTR [r14+0x8],eax
  41ac1f:	cmp    ecx,0x11f
  41ac25:	jne    41adba <__ctype_b_loc@plt+0x18aea>
  41ac2b:	mov    rdi,r14
  41ac2e:	mov    rsi,QWORD PTR [rsp+0x20]
  41ac33:	call   411660 <__ctype_b_loc@plt+0xf390>
  41ac38:	mov    DWORD PTR [r14+0x10],eax
  41ac3c:	cmp    eax,0x11d
  41ac41:	jne    41addf <__ctype_b_loc@plt+0x18b0f>
  41ac47:	jmp    41ae07 <__ctype_b_loc@plt+0x18b37>
  41ac4c:	nop    DWORD PTR [rax+0x0]
  41ac50:	cmp    eax,0x5b
  41ac53:	je     41acf3 <__ctype_b_loc@plt+0x18a23>
  41ac59:	cmp    eax,0x7b
  41ac5c:	je     41ac69 <__ctype_b_loc@plt+0x18999>
  41ac5e:	cmp    eax,0x11e
  41ac63:	jne    41b000 <__ctype_b_loc@plt+0x18d30>
  41ac69:	mov    rdi,rbx
  41ac6c:	mov    rsi,r15
  41ac6f:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41ac74:	cmp    DWORD PTR [r15],0xc
  41ac78:	jne    41aca0 <__ctype_b_loc@plt+0x189d0>
  41ac7a:	mov    eax,DWORD PTR [r15+0x8]
  41ac7e:	test   eax,0x100
  41ac83:	jne    41aca0 <__ctype_b_loc@plt+0x189d0>
  41ac85:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41ac89:	cmp    eax,ecx
  41ac8b:	jge    41afd9 <__ctype_b_loc@plt+0x18d09>
  41ac91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aca0:	mov    ecx,DWORD PTR [rbx+0x3c]
  41aca3:	lea    ebp,[rcx+0x1]
  41aca6:	mov    rax,QWORD PTR [rbx]
  41aca9:	movzx  edx,BYTE PTR [rax+0x73]
  41acad:	cmp    ecx,edx
  41acaf:	jl     41abd6 <__ctype_b_loc@plt+0x18906>
  41acb5:	mov    edx,ebp
  41acb7:	cmp    ecx,0xf9
  41acbd:	jl     41abd0 <__ctype_b_loc@plt+0x18900>
  41acc3:	mov    rdi,QWORD PTR [rbx+0x18]
  41acc7:	mov    edx,DWORD PTR [rdi+0x10]
  41acca:	lea    rsi,[rip+0xf64d]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41acd1:	call   413660 <__ctype_b_loc@plt+0x11390>
  41acd6:	mov    rax,QWORD PTR [rbx]
  41acd9:	mov    edx,DWORD PTR [rbx+0x3c]
  41acdc:	inc    edx
  41acde:	jmp    41abd0 <__ctype_b_loc@plt+0x18900>
  41ace3:	mov    rdi,r14
  41ace6:	mov    rsi,r15
  41ace9:	call   41b7a0 <__ctype_b_loc@plt+0x194d0>
  41acee:	jmp    41abf3 <__ctype_b_loc@plt+0x18923>
  41acf3:	mov    rdi,rbx
  41acf6:	mov    rsi,r15
  41acf9:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41acfe:	cmp    DWORD PTR [r15],0xc
  41ad02:	jne    41ad1e <__ctype_b_loc@plt+0x18a4e>
  41ad04:	mov    eax,DWORD PTR [r15+0x10]
  41ad08:	cmp    eax,DWORD PTR [r15+0x14]
  41ad0c:	je     41ad94 <__ctype_b_loc@plt+0x18ac4>
  41ad12:	mov    ebp,DWORD PTR [r15+0x8]
  41ad16:	movzx  eax,BYTE PTR [rbx+0x4a]
  41ad1a:	cmp    ebp,eax
  41ad1c:	jge    41ad87 <__ctype_b_loc@plt+0x18ab7>
  41ad1e:	mov    rdi,rbx
  41ad21:	mov    rsi,r15
  41ad24:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41ad29:	cmp    DWORD PTR [r15],0xc
  41ad2d:	jne    41ad46 <__ctype_b_loc@plt+0x18a76>
  41ad2f:	mov    eax,DWORD PTR [r15+0x8]
  41ad33:	test   eax,0x100
  41ad38:	jne    41ad46 <__ctype_b_loc@plt+0x18a76>
  41ad3a:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41ad3e:	cmp    eax,ecx
  41ad40:	jge    41afe6 <__ctype_b_loc@plt+0x18d16>
  41ad46:	mov    ecx,DWORD PTR [rbx+0x3c]
  41ad49:	lea    ebp,[rcx+0x1]
  41ad4c:	mov    rax,QWORD PTR [rbx]
  41ad4f:	movzx  edx,BYTE PTR [rax+0x73]
  41ad53:	cmp    ecx,edx
  41ad55:	jl     41ad82 <__ctype_b_loc@plt+0x18ab2>
  41ad57:	mov    edx,ebp
  41ad59:	cmp    ecx,0xf9
  41ad5f:	jl     41ad7c <__ctype_b_loc@plt+0x18aac>
  41ad61:	mov    rdi,QWORD PTR [rbx+0x18]
  41ad65:	mov    edx,DWORD PTR [rdi+0x10]
  41ad68:	lea    rsi,[rip+0xf5af]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41ad6f:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ad74:	mov    rax,QWORD PTR [rbx]
  41ad77:	mov    edx,DWORD PTR [rbx+0x3c]
  41ad7a:	inc    edx
  41ad7c:	mov    BYTE PTR [rax+0x73],bpl
  41ad80:	mov    ebp,edx
  41ad82:	mov    DWORD PTR [rbx+0x3c],ebp
  41ad85:	dec    ebp
  41ad87:	mov    rdi,rbx
  41ad8a:	mov    rsi,r15
  41ad8d:	mov    edx,ebp
  41ad8f:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41ad94:	mov    rdi,r14
  41ad97:	mov    rsi,r13
  41ad9a:	call   41b2d0 <__ctype_b_loc@plt+0x19000>
  41ad9f:	mov    rdi,rbx
  41ada2:	mov    rsi,r13
  41ada5:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41adaa:	mov    DWORD PTR [r15+0xc],eax
  41adae:	mov    DWORD PTR [r15],0x9
  41adb5:	jmp    41abf3 <__ctype_b_loc@plt+0x18923>
  41adba:	mov    rax,QWORD PTR [rsp+0x30]
  41adbf:	vmovups xmm0,XMMWORD PTR [rax]
  41adc3:	mov    rax,QWORD PTR [rsp+0x28]
  41adc8:	vmovups XMMWORD PTR [rax],xmm0
  41adcc:	mov    DWORD PTR [r14+0x20],0x11f
  41add4:	mov    eax,DWORD PTR [r14+0x10]
  41add8:	cmp    eax,0x11d
  41addd:	je     41ae07 <__ctype_b_loc@plt+0x18b37>
  41addf:	mov    rdi,QWORD PTR [r14+0x38]
  41ade3:	lea    rsi,[rip+0xf6ab]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41adea:	lea    rdx,[rip+0xf263]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  41adf1:	xor    eax,eax
  41adf3:	call   404800 <__ctype_b_loc@plt+0x2530>
  41adf8:	mov    edx,DWORD PTR [r14+0x10]
  41adfc:	mov    rdi,r14
  41adff:	mov    rsi,rax
  41ae02:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ae07:	mov    rbp,QWORD PTR [r14+0x18]
  41ae0b:	mov    eax,DWORD PTR [r14+0x4]
  41ae0f:	mov    DWORD PTR [r14+0x8],eax
  41ae13:	cmp    DWORD PTR [r14+0x20],0x11f
  41ae1b:	jne    41ae30 <__ctype_b_loc@plt+0x18b60>
  41ae1d:	mov    rdi,r14
  41ae20:	mov    rsi,QWORD PTR [rsp+0x20]
  41ae25:	call   411660 <__ctype_b_loc@plt+0xf390>
  41ae2a:	mov    DWORD PTR [r14+0x10],eax
  41ae2e:	jmp    41ae48 <__ctype_b_loc@plt+0x18b78>
  41ae30:	mov    rax,QWORD PTR [rsp+0x30]
  41ae35:	vmovups xmm0,XMMWORD PTR [rax]
  41ae39:	mov    rcx,QWORD PTR [rsp+0x28]
  41ae3e:	vmovups XMMWORD PTR [rcx],xmm0
  41ae42:	mov    DWORD PTR [rax],0x11f
  41ae48:	mov    rdi,QWORD PTR [r14+0x30]
  41ae4c:	mov    QWORD PTR [rsp+0x8],rbp
  41ae51:	mov    DWORD PTR [rsp+0x10],0x4
  41ae59:	mov    rsi,r13
  41ae5c:	mov    rdx,r13
  41ae5f:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  41ae64:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41ae6d:	mov    DWORD PTR [rsp+0x8],0x4
  41ae75:	mov    DWORD PTR [rsp+0x10],eax
  41ae79:	mov    rdi,rbx
  41ae7c:	mov    rsi,r15
  41ae7f:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41ae84:	cmp    DWORD PTR [r15],0xc
  41ae88:	jne    41aea4 <__ctype_b_loc@plt+0x18bd4>
  41ae8a:	mov    eax,DWORD PTR [r15+0x10]
  41ae8e:	cmp    eax,DWORD PTR [r15+0x14]
  41ae92:	je     41af1a <__ctype_b_loc@plt+0x18c4a>
  41ae98:	mov    ebp,DWORD PTR [r15+0x8]
  41ae9c:	movzx  eax,BYTE PTR [rbx+0x4a]
  41aea0:	cmp    ebp,eax
  41aea2:	jge    41af0d <__ctype_b_loc@plt+0x18c3d>
  41aea4:	mov    rdi,rbx
  41aea7:	mov    rsi,r15
  41aeaa:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41aeaf:	cmp    DWORD PTR [r15],0xc
  41aeb3:	jne    41aecc <__ctype_b_loc@plt+0x18bfc>
  41aeb5:	mov    eax,DWORD PTR [r15+0x8]
  41aeb9:	test   eax,0x100
  41aebe:	jne    41aecc <__ctype_b_loc@plt+0x18bfc>
  41aec0:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41aec4:	cmp    eax,ecx
  41aec6:	jge    41aff3 <__ctype_b_loc@plt+0x18d23>
  41aecc:	mov    ecx,DWORD PTR [rbx+0x3c]
  41aecf:	lea    ebp,[rcx+0x1]
  41aed2:	mov    rax,QWORD PTR [rbx]
  41aed5:	movzx  edx,BYTE PTR [rax+0x73]
  41aed9:	cmp    ecx,edx
  41aedb:	jl     41af08 <__ctype_b_loc@plt+0x18c38>
  41aedd:	mov    edx,ebp
  41aedf:	cmp    ecx,0xf9
  41aee5:	jl     41af02 <__ctype_b_loc@plt+0x18c32>
  41aee7:	mov    rdi,QWORD PTR [rbx+0x18]
  41aeeb:	mov    edx,DWORD PTR [rdi+0x10]
  41aeee:	lea    rsi,[rip+0xf429]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41aef5:	call   413660 <__ctype_b_loc@plt+0x11390>
  41aefa:	mov    rax,QWORD PTR [rbx]
  41aefd:	mov    edx,DWORD PTR [rbx+0x3c]
  41af00:	inc    edx
  41af02:	mov    BYTE PTR [rax+0x73],bpl
  41af06:	mov    ebp,edx
  41af08:	mov    DWORD PTR [rbx+0x3c],ebp
  41af0b:	dec    ebp
  41af0d:	mov    rdi,rbx
  41af10:	mov    rsi,r15
  41af13:	mov    edx,ebp
  41af15:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41af1a:	cmp    DWORD PTR [r15],0xc
  41af1e:	jne    41af36 <__ctype_b_loc@plt+0x18c66>
  41af20:	mov    eax,DWORD PTR [r15+0x8]
  41af24:	test   eax,0x100
  41af29:	jne    41af36 <__ctype_b_loc@plt+0x18c66>
  41af2b:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41af2f:	cmp    eax,ecx
  41af31:	jl     41af36 <__ctype_b_loc@plt+0x18c66>
  41af33:	dec    DWORD PTR [rbx+0x3c]
  41af36:	mov    r12d,DWORD PTR [rbx+0x3c]
  41af3a:	lea    ebp,[r12+0x2]
  41af3f:	mov    rax,QWORD PTR [rbx]
  41af42:	movzx  ecx,BYTE PTR [rax+0x73]
  41af46:	cmp    ebp,ecx
  41af48:	jle    41af76 <__ctype_b_loc@plt+0x18ca6>
  41af4a:	mov    ecx,ebp
  41af4c:	cmp    ebp,0xfa
  41af52:	jl     41af70 <__ctype_b_loc@plt+0x18ca0>
  41af54:	mov    rdi,QWORD PTR [rbx+0x18]
  41af58:	mov    edx,DWORD PTR [rdi+0x10]
  41af5b:	lea    rsi,[rip+0xf3bc]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41af62:	call   413660 <__ctype_b_loc@plt+0x11390>
  41af67:	mov    rax,QWORD PTR [rbx]
  41af6a:	mov    ecx,DWORD PTR [rbx+0x3c]
  41af6d:	add    ecx,0x2
  41af70:	mov    BYTE PTR [rax+0x73],bpl
  41af74:	mov    ebp,ecx
  41af76:	mov    DWORD PTR [rbx+0x3c],ebp
  41af79:	mov    ebp,DWORD PTR [r15+0x8]
  41af7d:	mov    rdi,rbx
  41af80:	mov    rsi,r13
  41af83:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41af88:	mov    ecx,r12d
  41af8b:	shl    ecx,0x6
  41af8e:	shl    ebp,0x17
  41af91:	or     ebp,ecx
  41af93:	shl    eax,0xe
  41af96:	or     ebp,eax
  41af98:	or     ebp,0xb
  41af9b:	mov    rax,QWORD PTR [rbx+0x18]
  41af9f:	mov    edx,DWORD PTR [rax+0x8]
  41afa2:	mov    rdi,rbx
  41afa5:	mov    esi,ebp
  41afa7:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41afac:	cmp    DWORD PTR [rsp+0x8],0xc
  41afb1:	jne    41afc9 <__ctype_b_loc@plt+0x18cf9>
  41afb3:	mov    eax,DWORD PTR [rsp+0x10]
  41afb7:	test   eax,0x100
  41afbc:	jne    41afc9 <__ctype_b_loc@plt+0x18cf9>
  41afbe:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41afc2:	cmp    eax,ecx
  41afc4:	jl     41afc9 <__ctype_b_loc@plt+0x18cf9>
  41afc6:	dec    DWORD PTR [rbx+0x3c]
  41afc9:	mov    DWORD PTR [r15+0x8],r12d
  41afcd:	mov    DWORD PTR [r15],0xc
  41afd4:	jmp    41abe8 <__ctype_b_loc@plt+0x18918>
  41afd9:	mov    ecx,DWORD PTR [rbx+0x3c]
  41afdc:	dec    ecx
  41afde:	mov    DWORD PTR [rbx+0x3c],ecx
  41afe1:	jmp    41aca3 <__ctype_b_loc@plt+0x189d3>
  41afe6:	mov    ecx,DWORD PTR [rbx+0x3c]
  41afe9:	dec    ecx
  41afeb:	mov    DWORD PTR [rbx+0x3c],ecx
  41afee:	jmp    41ad49 <__ctype_b_loc@plt+0x18a79>
  41aff3:	mov    ecx,DWORD PTR [rbx+0x3c]
  41aff6:	dec    ecx
  41aff8:	mov    DWORD PTR [rbx+0x3c],ecx
  41affb:	jmp    41aecf <__ctype_b_loc@plt+0x18bff>
  41b000:	add    rsp,0x38
  41b004:	pop    rbx
  41b005:	pop    r12
  41b007:	pop    r13
  41b009:	pop    r14
  41b00b:	pop    r15
  41b00d:	pop    rbp
  41b00e:	ret    
  41b00f:	nop
  41b010:	push   r14
  41b012:	push   rbx
  41b013:	push   rax
  41b014:	mov    r14,rsi
  41b017:	mov    rbx,rdi
  41b01a:	xor    edx,edx
  41b01c:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41b021:	mov    eax,DWORD PTR [r14+0x24]
  41b025:	cmp    eax,0x7ffffffe
  41b02a:	jl     41b086 <__ctype_b_loc@plt+0x18db6>
  41b02c:	mov    rbx,QWORD PTR [rbx+0x30]
  41b030:	mov    rax,QWORD PTR [rbx]
  41b033:	mov    rdi,QWORD PTR [rbx+0x20]
  41b037:	mov    edx,DWORD PTR [rax+0x60]
  41b03a:	test   edx,edx
  41b03c:	je     41b05a <__ctype_b_loc@plt+0x18d8a>
  41b03e:	lea    rsi,[rip+0xf360]        # 42a3a5 <__ctype_b_loc@plt+0x280d5>
  41b045:	lea    r8,[rip+0xf320]        # 42a36c <__ctype_b_loc@plt+0x2809c>
  41b04c:	mov    ecx,0x7ffffffd
  41b051:	xor    eax,eax
  41b053:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b058:	jmp    41b074 <__ctype_b_loc@plt+0x18da4>
  41b05a:	lea    rsi,[rip+0xf322]        # 42a383 <__ctype_b_loc@plt+0x280b3>
  41b061:	lea    rcx,[rip+0xf304]        # 42a36c <__ctype_b_loc@plt+0x2809c>
  41b068:	mov    edx,0x7ffffffd
  41b06d:	xor    eax,eax
  41b06f:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b074:	mov    rdi,QWORD PTR [rbx+0x18]
  41b078:	mov    rsi,rax
  41b07b:	xor    edx,edx
  41b07d:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b082:	mov    eax,DWORD PTR [r14+0x24]
  41b086:	inc    eax
  41b088:	mov    DWORD PTR [r14+0x24],eax
  41b08c:	inc    DWORD PTR [r14+0x28]
  41b090:	add    rsp,0x8
  41b094:	pop    rbx
  41b095:	pop    r14
  41b097:	ret    
  41b098:	nop    DWORD PTR [rax+rax*1+0x0]
  41b0a0:	push   rbp
  41b0a1:	push   r15
  41b0a3:	push   r14
  41b0a5:	push   r13
  41b0a7:	push   r12
  41b0a9:	push   rbx
  41b0aa:	sub    rsp,0x38
  41b0ae:	mov    r14,rsi
  41b0b1:	mov    rbx,rdi
  41b0b4:	mov    r15,QWORD PTR [rdi+0x30]
  41b0b8:	mov    r13d,DWORD PTR [r15+0x3c]
  41b0bc:	cmp    DWORD PTR [rdi+0x10],0x11d
  41b0c3:	jne    41b0fd <__ctype_b_loc@plt+0x18e2d>
  41b0c5:	cmp    DWORD PTR [r14+0x20],0x7ffffffe
  41b0cd:	jl     41b167 <__ctype_b_loc@plt+0x18e97>
  41b0d3:	mov    rax,QWORD PTR [r15]
  41b0d6:	mov    rdi,QWORD PTR [r15+0x20]
  41b0da:	mov    edx,DWORD PTR [rax+0x60]
  41b0dd:	test   edx,edx
  41b0df:	je     41b10f <__ctype_b_loc@plt+0x18e3f>
  41b0e1:	lea    rsi,[rip+0xf2bd]        # 42a3a5 <__ctype_b_loc@plt+0x280d5>
  41b0e8:	lea    r8,[rip+0xf27d]        # 42a36c <__ctype_b_loc@plt+0x2809c>
  41b0ef:	mov    ecx,0x7ffffffd
  41b0f4:	xor    eax,eax
  41b0f6:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b0fb:	jmp    41b129 <__ctype_b_loc@plt+0x18e59>
  41b0fd:	lea    rsi,[rsp+0x8]
  41b102:	mov    rdi,rbx
  41b105:	call   41b2d0 <__ctype_b_loc@plt+0x19000>
  41b10a:	jmp    41b1d2 <__ctype_b_loc@plt+0x18f02>
  41b10f:	lea    rsi,[rip+0xf26d]        # 42a383 <__ctype_b_loc@plt+0x280b3>
  41b116:	lea    rcx,[rip+0xf24f]        # 42a36c <__ctype_b_loc@plt+0x2809c>
  41b11d:	mov    edx,0x7ffffffd
  41b122:	xor    eax,eax
  41b124:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b129:	mov    rdi,QWORD PTR [r15+0x18]
  41b12d:	mov    rsi,rax
  41b130:	xor    edx,edx
  41b132:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b137:	cmp    DWORD PTR [rbx+0x10],0x11d
  41b13e:	je     41b167 <__ctype_b_loc@plt+0x18e97>
  41b140:	mov    rdi,QWORD PTR [rbx+0x38]
  41b144:	lea    rsi,[rip+0xf34a]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41b14b:	lea    rdx,[rip+0xef02]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  41b152:	xor    eax,eax
  41b154:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b159:	mov    edx,DWORD PTR [rbx+0x10]
  41b15c:	mov    rdi,rbx
  41b15f:	mov    rsi,rax
  41b162:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b167:	mov    rbp,QWORD PTR [rbx+0x18]
  41b16b:	mov    eax,DWORD PTR [rbx+0x4]
  41b16e:	mov    DWORD PTR [rbx+0x8],eax
  41b171:	cmp    DWORD PTR [rbx+0x20],0x11f
  41b178:	jne    41b18b <__ctype_b_loc@plt+0x18ebb>
  41b17a:	lea    rsi,[rbx+0x18]
  41b17e:	mov    rdi,rbx
  41b181:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b186:	mov    DWORD PTR [rbx+0x10],eax
  41b189:	jmp    41b19f <__ctype_b_loc@plt+0x18ecf>
  41b18b:	lea    rax,[rbx+0x20]
  41b18f:	vmovups xmm0,XMMWORD PTR [rax]
  41b193:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b198:	mov    DWORD PTR [rbx+0x20],0x11f
  41b19f:	mov    rdi,QWORD PTR [rbx+0x30]
  41b1a3:	mov    QWORD PTR [rsp+0x8],rbp
  41b1a8:	mov    DWORD PTR [rsp+0x10],0x4
  41b1b0:	lea    rdx,[rsp+0x8]
  41b1b5:	mov    rsi,rdx
  41b1b8:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  41b1bd:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41b1c6:	mov    DWORD PTR [rsp+0x8],0x4
  41b1ce:	mov    DWORD PTR [rsp+0x10],eax
  41b1d2:	inc    DWORD PTR [r14+0x20]
  41b1d6:	cmp    DWORD PTR [rbx+0x10],0x3d
  41b1da:	je     41b231 <__ctype_b_loc@plt+0x18f61>
  41b1dc:	mov    r12,QWORD PTR [rbx+0x38]
  41b1e0:	call   4022d0 <__ctype_b_loc@plt>
  41b1e5:	mov    rax,QWORD PTR [rax]
  41b1e8:	movzx  eax,WORD PTR [rax+0x7a]
  41b1ec:	test   al,0x2
  41b1ee:	lea    rax,[rip+0xf066]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41b1f5:	lea    rsi,[rip+0xf056]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41b1fc:	cmove  rsi,rax
  41b200:	mov    rdi,r12
  41b203:	mov    edx,0x3d
  41b208:	xor    eax,eax
  41b20a:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b20f:	lea    rsi,[rip+0xf27f]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41b216:	mov    rdi,r12
  41b219:	mov    rdx,rax
  41b21c:	xor    eax,eax
  41b21e:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b223:	mov    edx,DWORD PTR [rbx+0x10]
  41b226:	mov    rdi,rbx
  41b229:	mov    rsi,rax
  41b22c:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b231:	mov    eax,DWORD PTR [rbx+0x4]
  41b234:	mov    ecx,DWORD PTR [rbx+0x20]
  41b237:	mov    DWORD PTR [rbx+0x8],eax
  41b23a:	cmp    ecx,0x11f
  41b240:	jne    41b253 <__ctype_b_loc@plt+0x18f83>
  41b242:	lea    rsi,[rbx+0x18]
  41b246:	mov    rdi,rbx
  41b249:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b24e:	mov    DWORD PTR [rbx+0x10],eax
  41b251:	jmp    41b267 <__ctype_b_loc@plt+0x18f97>
  41b253:	lea    rax,[rbx+0x20]
  41b257:	vmovups xmm0,XMMWORD PTR [rax]
  41b25b:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b260:	mov    DWORD PTR [rbx+0x20],0x11f
  41b267:	lea    rsi,[rsp+0x8]
  41b26c:	mov    rdi,r15
  41b26f:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41b274:	mov    ebp,eax
  41b276:	lea    r12,[rsp+0x20]
  41b27b:	mov    rdi,rbx
  41b27e:	mov    rsi,r12
  41b281:	xor    edx,edx
  41b283:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41b288:	mov    rax,QWORD PTR [r14+0x18]
  41b28c:	mov    ebx,DWORD PTR [rax+0x8]
  41b28f:	mov    rdi,r15
  41b292:	mov    rsi,r12
  41b295:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41b29a:	shl    ebx,0x6
  41b29d:	shl    ebp,0x17
  41b2a0:	shl    eax,0xe
  41b2a3:	or     eax,ebp
  41b2a5:	or     ebx,eax
  41b2a7:	or     ebx,0x9
  41b2aa:	mov    rax,QWORD PTR [r15+0x18]
  41b2ae:	mov    edx,DWORD PTR [rax+0x8]
  41b2b1:	mov    rdi,r15
  41b2b4:	mov    esi,ebx
  41b2b6:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41b2bb:	mov    DWORD PTR [r15+0x3c],r13d
  41b2bf:	add    rsp,0x38
  41b2c3:	pop    rbx
  41b2c4:	pop    r12
  41b2c6:	pop    r13
  41b2c8:	pop    r14
  41b2ca:	pop    r15
  41b2cc:	pop    rbp
  41b2cd:	ret    
  41b2ce:	xchg   ax,ax
  41b2d0:	push   rbp
  41b2d1:	push   r15
  41b2d3:	push   r14
  41b2d5:	push   r13
  41b2d7:	push   r12
  41b2d9:	push   rbx
  41b2da:	push   rax
  41b2db:	mov    r14,rsi
  41b2de:	mov    rbx,rdi
  41b2e1:	mov    eax,DWORD PTR [rdi+0x4]
  41b2e4:	mov    ecx,DWORD PTR [rdi+0x20]
  41b2e7:	mov    DWORD PTR [rdi+0x8],eax
  41b2ea:	lea    r12,[rdi+0x20]
  41b2ee:	cmp    ecx,0x11f
  41b2f4:	jne    41b307 <__ctype_b_loc@plt+0x19037>
  41b2f6:	lea    rsi,[rbx+0x18]
  41b2fa:	mov    rdi,rbx
  41b2fd:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b302:	mov    DWORD PTR [rbx+0x10],eax
  41b305:	jmp    41b319 <__ctype_b_loc@plt+0x19049>
  41b307:	vmovups xmm0,XMMWORD PTR [r12]
  41b30d:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b312:	mov    DWORD PTR [rbx+0x20],0x11f
  41b319:	mov    rdi,rbx
  41b31c:	mov    rsi,r14
  41b31f:	xor    edx,edx
  41b321:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41b326:	mov    r15,QWORD PTR [rbx+0x30]
  41b32a:	mov    r13d,DWORD PTR [r14+0x10]
  41b32e:	mov    ebp,DWORD PTR [r14+0x14]
  41b332:	mov    rdi,r15
  41b335:	mov    rsi,r14
  41b338:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41b33d:	cmp    r13d,ebp
  41b340:	je     41b3e5 <__ctype_b_loc@plt+0x19115>
  41b346:	cmp    DWORD PTR [r14],0xc
  41b34a:	jne    41b36b <__ctype_b_loc@plt+0x1909b>
  41b34c:	mov    eax,DWORD PTR [r14+0x10]
  41b350:	cmp    eax,DWORD PTR [r14+0x14]
  41b354:	je     41b3e5 <__ctype_b_loc@plt+0x19115>
  41b35a:	mov    edx,DWORD PTR [r14+0x8]
  41b35e:	movzx  eax,BYTE PTR [r15+0x4a]
  41b363:	cmp    edx,eax
  41b365:	jge    41b486 <__ctype_b_loc@plt+0x191b6>
  41b36b:	mov    rdi,r15
  41b36e:	mov    rsi,r14
  41b371:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41b376:	cmp    DWORD PTR [r14],0xc
  41b37a:	jne    41b394 <__ctype_b_loc@plt+0x190c4>
  41b37c:	mov    eax,DWORD PTR [r14+0x8]
  41b380:	test   eax,0x100
  41b385:	jne    41b394 <__ctype_b_loc@plt+0x190c4>
  41b387:	movzx  ecx,BYTE PTR [r15+0x4a]
  41b38c:	cmp    eax,ecx
  41b38e:	jl     41b394 <__ctype_b_loc@plt+0x190c4>
  41b390:	dec    DWORD PTR [r15+0x3c]
  41b394:	mov    edx,DWORD PTR [r15+0x3c]
  41b398:	lea    ebp,[rdx+0x1]
  41b39b:	mov    rax,QWORD PTR [r15]
  41b39e:	movzx  ecx,BYTE PTR [rax+0x73]
  41b3a2:	cmp    edx,ecx
  41b3a4:	jl     41b3d2 <__ctype_b_loc@plt+0x19102>
  41b3a6:	mov    ecx,ebp
  41b3a8:	cmp    edx,0xf9
  41b3ae:	jl     41b3cc <__ctype_b_loc@plt+0x190fc>
  41b3b0:	mov    rdi,QWORD PTR [r15+0x18]
  41b3b4:	mov    edx,DWORD PTR [rdi+0x10]
  41b3b7:	lea    rsi,[rip+0xef60]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41b3be:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b3c3:	mov    rax,QWORD PTR [r15]
  41b3c6:	mov    ecx,DWORD PTR [r15+0x3c]
  41b3ca:	inc    ecx
  41b3cc:	mov    BYTE PTR [rax+0x73],bpl
  41b3d0:	mov    ebp,ecx
  41b3d2:	mov    DWORD PTR [r15+0x3c],ebp
  41b3d6:	dec    ebp
  41b3d8:	mov    rdi,r15
  41b3db:	mov    rsi,r14
  41b3de:	mov    edx,ebp
  41b3e0:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41b3e5:	cmp    DWORD PTR [rbx+0x10],0x5d
  41b3e9:	je     41b443 <__ctype_b_loc@plt+0x19173>
  41b3eb:	mov    rbp,QWORD PTR [rbx+0x38]
  41b3ef:	call   4022d0 <__ctype_b_loc@plt>
  41b3f4:	mov    rax,QWORD PTR [rax]
  41b3f7:	movzx  eax,WORD PTR [rax+0xba]
  41b3fe:	test   al,0x2
  41b400:	lea    rax,[rip+0xee54]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41b407:	lea    rsi,[rip+0xee44]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41b40e:	cmove  rsi,rax
  41b412:	mov    rdi,rbp
  41b415:	mov    edx,0x5d
  41b41a:	xor    eax,eax
  41b41c:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b421:	lea    rsi,[rip+0xf06d]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41b428:	mov    rdi,rbp
  41b42b:	mov    rdx,rax
  41b42e:	xor    eax,eax
  41b430:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b435:	mov    edx,DWORD PTR [rbx+0x10]
  41b438:	mov    rdi,rbx
  41b43b:	mov    rsi,rax
  41b43e:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b443:	mov    eax,DWORD PTR [rbx+0x4]
  41b446:	mov    ecx,DWORD PTR [rbx+0x20]
  41b449:	mov    DWORD PTR [rbx+0x8],eax
  41b44c:	cmp    ecx,0x11f
  41b452:	jne    41b465 <__ctype_b_loc@plt+0x19195>
  41b454:	lea    rsi,[rbx+0x18]
  41b458:	mov    rdi,rbx
  41b45b:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b460:	mov    DWORD PTR [rbx+0x10],eax
  41b463:	jmp    41b477 <__ctype_b_loc@plt+0x191a7>
  41b465:	vmovups xmm0,XMMWORD PTR [r12]
  41b46b:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b470:	mov    DWORD PTR [rbx+0x20],0x11f
  41b477:	add    rsp,0x8
  41b47b:	pop    rbx
  41b47c:	pop    r12
  41b47e:	pop    r13
  41b480:	pop    r14
  41b482:	pop    r15
  41b484:	pop    rbp
  41b485:	ret    
  41b486:	mov    rdi,r15
  41b489:	mov    rsi,r14
  41b48c:	jmp    41b3e0 <__ctype_b_loc@plt+0x19110>
  41b491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b49b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b4a0:	push   rbp
  41b4a1:	push   r15
  41b4a3:	push   r14
  41b4a5:	push   r13
  41b4a7:	push   r12
  41b4a9:	push   rbx
  41b4aa:	sub    rsp,0x38
  41b4ae:	mov    r13,rsi
  41b4b1:	mov    rbp,rdi
  41b4b4:	mov    r15,QWORD PTR [rdi+0x30]
  41b4b8:	movzx  eax,BYTE PTR [r15+0x4a]
  41b4bd:	add    eax,edx
  41b4bf:	mov    rbx,r15
  41b4c2:	cmp    eax,0xc8
  41b4c7:	jl     41b525 <__ctype_b_loc@plt+0x19255>
  41b4c9:	mov    r14d,edx
  41b4cc:	mov    rax,QWORD PTR [r15]
  41b4cf:	mov    rdi,QWORD PTR [r15+0x20]
  41b4d3:	mov    edx,DWORD PTR [rax+0x60]
  41b4d6:	test   edx,edx
  41b4d8:	je     41b4f6 <__ctype_b_loc@plt+0x19226>
  41b4da:	lea    rsi,[rip+0xeec4]        # 42a3a5 <__ctype_b_loc@plt+0x280d5>
  41b4e1:	lea    r8,[rip+0xeef3]        # 42a3db <__ctype_b_loc@plt+0x2810b>
  41b4e8:	mov    ecx,0xc8
  41b4ed:	xor    eax,eax
  41b4ef:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b4f4:	jmp    41b510 <__ctype_b_loc@plt+0x19240>
  41b4f6:	lea    rsi,[rip+0xee86]        # 42a383 <__ctype_b_loc@plt+0x280b3>
  41b4fd:	lea    rcx,[rip+0xeed7]        # 42a3db <__ctype_b_loc@plt+0x2810b>
  41b504:	mov    edx,0xc8
  41b509:	xor    eax,eax
  41b50b:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b510:	mov    rdi,QWORD PTR [r15+0x18]
  41b514:	mov    rsi,rax
  41b517:	xor    edx,edx
  41b519:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b51e:	mov    rbx,QWORD PTR [rbp+0x30]
  41b522:	mov    edx,r14d
  41b525:	mov    r10,QWORD PTR [rbx]
  41b528:	mov    r12d,DWORD PTR [r10+0x5c]
  41b52c:	movsx  eax,WORD PTR [rbx+0x48]
  41b530:	cmp    r12d,eax
  41b533:	jle    41b53e <__ctype_b_loc@plt+0x1926e>
  41b535:	mov    rax,QWORD PTR [r10+0x30]
  41b539:	jmp    41b6c9 <__ctype_b_loc@plt+0x193f9>
  41b53e:	mov    QWORD PTR [rsp+0x28],r13
  41b543:	mov    rcx,QWORD PTR [rbp+0x38]
  41b547:	mov    rsi,QWORD PTR [r10+0x30]
  41b54b:	cmp    r12d,0x3fff
  41b552:	mov    QWORD PTR [rsp+0x30],r15
  41b557:	mov    DWORD PTR [rsp+0x4],edx
  41b55b:	mov    QWORD PTR [rsp+0x20],rbp
  41b560:	mov    QWORD PTR [rsp+0x18],rbx
  41b565:	mov    QWORD PTR [rsp+0x8],r10
  41b56a:	jge    41b57f <__ctype_b_loc@plt+0x192af>
  41b56c:	lea    eax,[r12+r12*1]
  41b570:	cmp    eax,0x3
  41b573:	mov    r13d,0x4
  41b579:	cmovg  r13d,eax
  41b57d:	jmp    41b58e <__ctype_b_loc@plt+0x192be>
  41b57f:	mov    r13d,0x7fff
  41b585:	cmp    r12d,0x7fff
  41b58c:	jge    41b593 <__ctype_b_loc@plt+0x192c3>
  41b58e:	mov    eax,r12d
  41b591:	jmp    41b5b8 <__ctype_b_loc@plt+0x192e8>
  41b593:	mov    rbp,rsi
  41b596:	lea    rsi,[rip+0xee35]        # 42a3d2 <__ctype_b_loc@plt+0x28102>
  41b59d:	mov    rbx,rcx
  41b5a0:	mov    rdi,rcx
  41b5a3:	xor    eax,eax
  41b5a5:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41b5aa:	mov    rsi,rbp
  41b5ad:	mov    rcx,rbx
  41b5b0:	mov    rax,QWORD PTR [rsp+0x8]
  41b5b5:	mov    eax,DWORD PTR [rax+0x5c]
  41b5b8:	mov    QWORD PTR [rsp+0x10],rcx
  41b5bd:	movsxd rbp,eax
  41b5c0:	shl    rbp,0x4
  41b5c4:	mov    r14d,r13d
  41b5c7:	mov    rbx,r14
  41b5ca:	shl    rbx,0x4
  41b5ce:	mov    r15,QWORD PTR [rcx+0x20]
  41b5d2:	mov    rdi,QWORD PTR [r15+0x18]
  41b5d6:	mov    rdx,rbp
  41b5d9:	mov    rcx,rbx
  41b5dc:	call   QWORD PTR [r15+0x10]
  41b5e0:	test   rax,rax
  41b5e3:	je     41b73d <__ctype_b_loc@plt+0x1946d>
  41b5e9:	sub    rbx,rbp
  41b5ec:	add    QWORD PTR [r15+0x78],rbx
  41b5f0:	mov    r10,QWORD PTR [rsp+0x8]
  41b5f5:	mov    DWORD PTR [r10+0x5c],r13d
  41b5f9:	mov    QWORD PTR [r10+0x30],rax
  41b5fd:	cmp    r12d,r13d
  41b600:	mov    r15,QWORD PTR [rsp+0x30]
  41b605:	mov    edx,DWORD PTR [rsp+0x4]
  41b609:	mov    r13,QWORD PTR [rsp+0x28]
  41b60e:	mov    rbp,QWORD PTR [rsp+0x20]
  41b613:	mov    rbx,QWORD PTR [rsp+0x18]
  41b618:	jge    41b6c9 <__ctype_b_loc@plt+0x193f9>
  41b61e:	movsxd r9,r12d
  41b621:	mov    esi,r14d
  41b624:	sub    esi,r12d
  41b627:	mov    rcx,r9
  41b62a:	not    rcx
  41b62d:	add    rcx,r14
  41b630:	and    rsi,0x7
  41b634:	je     41b669 <__ctype_b_loc@plt+0x19399>
  41b636:	mov    r8,rbp
  41b639:	mov    rdi,r9
  41b63c:	shl    rdi,0x4
  41b640:	add    rdi,rax
  41b643:	neg    rsi
  41b646:	xor    ebp,ebp
  41b648:	nop    DWORD PTR [rax+rax*1+0x0]
  41b650:	mov    QWORD PTR [rdi],0x0
  41b657:	add    rdi,0x10
  41b65b:	dec    rbp
  41b65e:	cmp    rsi,rbp
  41b661:	jne    41b650 <__ctype_b_loc@plt+0x19380>
  41b663:	sub    r9,rbp
  41b666:	mov    rbp,r8
  41b669:	cmp    rcx,0x7
  41b66d:	jb     41b6c9 <__ctype_b_loc@plt+0x193f9>
  41b66f:	sub    r14,r9
  41b672:	shl    r9,0x4
  41b676:	lea    rcx,[r9+rax*1]
  41b67a:	add    rcx,0x70
  41b67e:	xchg   ax,ax
  41b680:	mov    QWORD PTR [rcx-0x70],0x0
  41b688:	mov    QWORD PTR [rcx-0x60],0x0
  41b690:	mov    QWORD PTR [rcx-0x50],0x0
  41b698:	mov    QWORD PTR [rcx-0x40],0x0
  41b6a0:	mov    QWORD PTR [rcx-0x30],0x0
  41b6a8:	mov    QWORD PTR [rcx-0x20],0x0
  41b6b0:	mov    QWORD PTR [rcx-0x10],0x0
  41b6b8:	mov    QWORD PTR [rcx],0x0
  41b6bf:	sub    rcx,0xffffffffffffff80
  41b6c3:	add    r14,0xfffffffffffffff8
  41b6c7:	jne    41b680 <__ctype_b_loc@plt+0x193b0>
  41b6c9:	movsx  rcx,WORD PTR [rbx+0x48]
  41b6ce:	shl    rcx,0x4
  41b6d2:	mov    QWORD PTR [rax+rcx*1],r13
  41b6d6:	test   BYTE PTR [r13+0x9],0x3
  41b6db:	je     41b70f <__ctype_b_loc@plt+0x1943f>
  41b6dd:	mov    al,BYTE PTR [r10+0x9]
  41b6e1:	test   al,0x4
  41b6e3:	je     41b70f <__ctype_b_loc@plt+0x1943f>
  41b6e5:	mov    rcx,QWORD PTR [rbp+0x38]
  41b6e9:	mov    rdi,QWORD PTR [rcx+0x20]
  41b6ed:	cmp    BYTE PTR [rdi+0x21],0x1
  41b6f1:	jne    41b701 <__ctype_b_loc@plt+0x19431>
  41b6f3:	mov    rsi,r13
  41b6f6:	mov    ebp,edx
  41b6f8:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  41b6fd:	mov    edx,ebp
  41b6ff:	jmp    41b70f <__ctype_b_loc@plt+0x1943f>
  41b701:	and    al,0xf8
  41b703:	mov    cl,BYTE PTR [rdi+0x20]
  41b706:	and    cl,0x3
  41b709:	or     cl,al
  41b70b:	mov    BYTE PTR [r10+0x9],cl
  41b70f:	mov    eax,DWORD PTR [rbx+0x48]
  41b712:	mov    ecx,eax
  41b714:	inc    ecx
  41b716:	mov    WORD PTR [rbx+0x48],cx
  41b71a:	movzx  ecx,BYTE PTR [r15+0x4a]
  41b71f:	movsxd rdx,edx
  41b722:	add    rdx,rcx
  41b725:	mov    WORD PTR [r15+rdx*2+0xc4],ax
  41b72e:	add    rsp,0x38
  41b732:	pop    rbx
  41b733:	pop    r12
  41b735:	pop    r13
  41b737:	pop    r14
  41b739:	pop    r15
  41b73b:	pop    rbp
  41b73c:	ret    
  41b73d:	mov    rax,QWORD PTR [rsp+0x10]
  41b742:	mov    rdi,QWORD PTR [rax+0xa8]
  41b749:	test   rdi,rdi
  41b74c:	jne    41b787 <__ctype_b_loc@plt+0x194b7>
  41b74e:	mov    rbx,rax
  41b751:	mov    BYTE PTR [rbx+0xa],0x4
  41b755:	mov    rax,QWORD PTR [rbx+0x20]
  41b759:	cmp    QWORD PTR [rax+0x98],0x0
  41b761:	je     41b77d <__ctype_b_loc@plt+0x194ad>
  41b763:	mov    rdi,rbx
  41b766:	mov    esi,0x4
  41b76b:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41b770:	mov    rax,QWORD PTR [rbx+0x20]
  41b774:	mov    rdi,rbx
  41b777:	call   QWORD PTR [rax+0x98]
  41b77d:	mov    edi,0x1
  41b782:	call   402280 <exit@plt>
  41b787:	mov    DWORD PTR [rdi+0xd0],0x4
  41b791:	add    rdi,0x8
  41b795:	mov    esi,0x1
  41b79a:	call   402230 <longjmp@plt>
  41b79f:	nop
  41b7a0:	push   rbp
  41b7a1:	push   r15
  41b7a3:	push   r14
  41b7a5:	push   r12
  41b7a7:	push   rbx
  41b7a8:	sub    rsp,0x20
  41b7ac:	mov    r15,rsi
  41b7af:	mov    rbx,rdi
  41b7b2:	mov    r14,QWORD PTR [rdi+0x30]
  41b7b6:	mov    rdi,r14
  41b7b9:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41b7be:	cmp    DWORD PTR [r15],0xc
  41b7c2:	jne    41b7df <__ctype_b_loc@plt+0x1950f>
  41b7c4:	mov    eax,DWORD PTR [r15+0x10]
  41b7c8:	cmp    eax,DWORD PTR [r15+0x14]
  41b7cc:	je     41b859 <__ctype_b_loc@plt+0x19589>
  41b7d2:	mov    ebp,DWORD PTR [r15+0x8]
  41b7d6:	movzx  eax,BYTE PTR [r14+0x4a]
  41b7db:	cmp    ebp,eax
  41b7dd:	jge    41b84c <__ctype_b_loc@plt+0x1957c>
  41b7df:	mov    rdi,r14
  41b7e2:	mov    rsi,r15
  41b7e5:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41b7ea:	cmp    DWORD PTR [r15],0xc
  41b7ee:	jne    41b808 <__ctype_b_loc@plt+0x19538>
  41b7f0:	mov    eax,DWORD PTR [r15+0x8]
  41b7f4:	test   eax,0x100
  41b7f9:	jne    41b808 <__ctype_b_loc@plt+0x19538>
  41b7fb:	movzx  ecx,BYTE PTR [r14+0x4a]
  41b800:	cmp    eax,ecx
  41b802:	jl     41b808 <__ctype_b_loc@plt+0x19538>
  41b804:	dec    DWORD PTR [r14+0x3c]
  41b808:	mov    edx,DWORD PTR [r14+0x3c]
  41b80c:	lea    ebp,[rdx+0x1]
  41b80f:	mov    rax,QWORD PTR [r14]
  41b812:	movzx  ecx,BYTE PTR [rax+0x73]
  41b816:	cmp    edx,ecx
  41b818:	jl     41b846 <__ctype_b_loc@plt+0x19576>
  41b81a:	mov    ecx,ebp
  41b81c:	cmp    edx,0xf9
  41b822:	jl     41b840 <__ctype_b_loc@plt+0x19570>
  41b824:	mov    rdi,QWORD PTR [r14+0x18]
  41b828:	mov    edx,DWORD PTR [rdi+0x10]
  41b82b:	lea    rsi,[rip+0xeaec]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41b832:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b837:	mov    rax,QWORD PTR [r14]
  41b83a:	mov    ecx,DWORD PTR [r14+0x3c]
  41b83e:	inc    ecx
  41b840:	mov    BYTE PTR [rax+0x73],bpl
  41b844:	mov    ebp,ecx
  41b846:	mov    DWORD PTR [r14+0x3c],ebp
  41b84a:	dec    ebp
  41b84c:	mov    rdi,r14
  41b84f:	mov    rsi,r15
  41b852:	mov    edx,ebp
  41b854:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41b859:	mov    eax,DWORD PTR [rbx+0x4]
  41b85c:	mov    ecx,DWORD PTR [rbx+0x20]
  41b85f:	mov    DWORD PTR [rbx+0x8],eax
  41b862:	lea    r12,[rbx+0x20]
  41b866:	cmp    ecx,0x11f
  41b86c:	jne    41b886 <__ctype_b_loc@plt+0x195b6>
  41b86e:	lea    rsi,[rbx+0x18]
  41b872:	mov    rdi,rbx
  41b875:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b87a:	mov    DWORD PTR [rbx+0x10],eax
  41b87d:	cmp    eax,0x11d
  41b882:	jne    41b8a2 <__ctype_b_loc@plt+0x195d2>
  41b884:	jmp    41b8c9 <__ctype_b_loc@plt+0x195f9>
  41b886:	vmovups xmm0,XMMWORD PTR [r12]
  41b88c:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b891:	mov    DWORD PTR [rbx+0x20],0x11f
  41b898:	mov    eax,DWORD PTR [rbx+0x10]
  41b89b:	cmp    eax,0x11d
  41b8a0:	je     41b8c9 <__ctype_b_loc@plt+0x195f9>
  41b8a2:	mov    rdi,QWORD PTR [rbx+0x38]
  41b8a6:	lea    rsi,[rip+0xebe8]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41b8ad:	lea    rdx,[rip+0xe7a0]        # 42a054 <__ctype_b_loc@plt+0x27d84>
  41b8b4:	xor    eax,eax
  41b8b6:	call   404800 <__ctype_b_loc@plt+0x2530>
  41b8bb:	mov    edx,DWORD PTR [rbx+0x10]
  41b8be:	mov    rdi,rbx
  41b8c1:	mov    rsi,rax
  41b8c4:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b8c9:	mov    rbp,QWORD PTR [rbx+0x18]
  41b8cd:	mov    eax,DWORD PTR [rbx+0x4]
  41b8d0:	mov    DWORD PTR [rbx+0x8],eax
  41b8d3:	cmp    DWORD PTR [rbx+0x20],0x11f
  41b8da:	jne    41b8ed <__ctype_b_loc@plt+0x1961d>
  41b8dc:	lea    rsi,[rbx+0x18]
  41b8e0:	mov    rdi,rbx
  41b8e3:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b8e8:	mov    DWORD PTR [rbx+0x10],eax
  41b8eb:	jmp    41b8ff <__ctype_b_loc@plt+0x1962f>
  41b8ed:	vmovups xmm0,XMMWORD PTR [r12]
  41b8f3:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b8f8:	mov    DWORD PTR [rbx+0x20],0x11f
  41b8ff:	mov    rdi,QWORD PTR [rbx+0x30]
  41b903:	mov    QWORD PTR [rsp+0x8],rbp
  41b908:	mov    DWORD PTR [rsp+0x10],0x4
  41b910:	lea    rdx,[rsp+0x8]
  41b915:	mov    rsi,rdx
  41b918:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  41b91d:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41b926:	mov    DWORD PTR [rsp+0x8],0x4
  41b92e:	mov    DWORD PTR [rsp+0x10],eax
  41b932:	lea    rsi,[rsp+0x8]
  41b937:	mov    rdi,r14
  41b93a:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41b93f:	mov    DWORD PTR [r15+0xc],eax
  41b943:	mov    DWORD PTR [r15],0x9
  41b94a:	add    rsp,0x20
  41b94e:	pop    rbx
  41b94f:	pop    r12
  41b951:	pop    r14
  41b953:	pop    r15
  41b955:	pop    rbp
  41b956:	ret    
  41b957:	nop    WORD PTR [rax+rax*1+0x0]
  41b960:	push   rbp
  41b961:	push   r15
  41b963:	push   r14
  41b965:	push   r13
  41b967:	push   r12
  41b969:	push   rbx
  41b96a:	sub    rsp,0x38
  41b96e:	mov    r15,rsi
  41b971:	mov    rbp,rdi
  41b974:	mov    r13,QWORD PTR [rdi+0x30]
  41b978:	mov    r14d,DWORD PTR [rdi+0x4]
  41b97c:	mov    edx,DWORD PTR [rdi+0x10]
  41b97f:	cmp    edx,0x11e
  41b985:	je     41bb37 <__ctype_b_loc@plt+0x19867>
  41b98b:	cmp    edx,0x7b
  41b98e:	je     41bb27 <__ctype_b_loc@plt+0x19857>
  41b994:	cmp    edx,0x28
  41b997:	jne    41bb92 <__ctype_b_loc@plt+0x198c2>
  41b99d:	mov    QWORD PTR [rsp+0x20],r15
  41b9a2:	mov    eax,r14d
  41b9a5:	mov    DWORD PTR [rsp+0x1c],r14d
  41b9aa:	cmp    r14d,DWORD PTR [rbp+0x8]
  41b9ae:	je     41b9c7 <__ctype_b_loc@plt+0x196f7>
  41b9b0:	lea    rsi,[rip+0xea68]        # 42a41f <__ctype_b_loc@plt+0x2814f>
  41b9b7:	mov    rdi,rbp
  41b9ba:	mov    edx,0x28
  41b9bf:	call   413660 <__ctype_b_loc@plt+0x11390>
  41b9c4:	mov    eax,DWORD PTR [rbp+0x4]
  41b9c7:	mov    DWORD PTR [rbp+0x8],eax
  41b9ca:	lea    r15,[rbp+0x20]
  41b9ce:	cmp    DWORD PTR [rbp+0x20],0x11f
  41b9d5:	jne    41bba6 <__ctype_b_loc@plt+0x198d6>
  41b9db:	lea    rsi,[rbp+0x18]
  41b9df:	mov    rdi,rbp
  41b9e2:	call   411660 <__ctype_b_loc@plt+0xf390>
  41b9e7:	mov    DWORD PTR [rbp+0x10],eax
  41b9ea:	cmp    eax,0x29
  41b9ed:	je     41bbc3 <__ctype_b_loc@plt+0x198f3>
  41b9f3:	mov    rsi,rsp
  41b9f6:	mov    rdi,rbp
  41b9f9:	xor    edx,edx
  41b9fb:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41ba00:	cmp    DWORD PTR [rbp+0x10],0x2c
  41ba04:	jne    41bbd9 <__ctype_b_loc@plt+0x19909>
  41ba0a:	lea    rax,[rbp+0x10]
  41ba0e:	mov    QWORD PTR [rsp+0x30],rax
  41ba13:	lea    rax,[rbp+0x18]
  41ba17:	mov    QWORD PTR [rsp+0x28],rax
  41ba1c:	mov    rbx,rsp
  41ba1f:	jmp    41ba63 <__ctype_b_loc@plt+0x19793>
  41ba21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba30:	mov    BYTE PTR [rax+0x73],r12b
  41ba34:	mov    r12d,ecx
  41ba37:	mov    DWORD PTR [r14+0x3c],r12d
  41ba3b:	dec    r12d
  41ba3e:	mov    rdi,r14
  41ba41:	mov    rsi,rbx
  41ba44:	mov    edx,r12d
  41ba47:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41ba4c:	mov    rdi,rbp
  41ba4f:	mov    rsi,rbx
  41ba52:	xor    edx,edx
  41ba54:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41ba59:	cmp    DWORD PTR [rbp+0x10],0x2c
  41ba5d:	jne    41bbd9 <__ctype_b_loc@plt+0x19909>
  41ba63:	mov    eax,DWORD PTR [rbp+0x4]
  41ba66:	mov    ecx,DWORD PTR [rbp+0x20]
  41ba69:	mov    DWORD PTR [rbp+0x8],eax
  41ba6c:	cmp    ecx,0x11f
  41ba72:	jne    41ba90 <__ctype_b_loc@plt+0x197c0>
  41ba74:	mov    rdi,rbp
  41ba77:	mov    rsi,QWORD PTR [rsp+0x28]
  41ba7c:	call   411660 <__ctype_b_loc@plt+0xf390>
  41ba81:	mov    DWORD PTR [rbp+0x10],eax
  41ba84:	jmp    41baa5 <__ctype_b_loc@plt+0x197d5>
  41ba86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba90:	vmovups xmm0,XMMWORD PTR [r15]
  41ba95:	mov    rax,QWORD PTR [rsp+0x30]
  41ba9a:	vmovups XMMWORD PTR [rax],xmm0
  41ba9e:	mov    DWORD PTR [r15],0x11f
  41baa5:	mov    r14,QWORD PTR [rbp+0x30]
  41baa9:	mov    rdi,r14
  41baac:	mov    rsi,rbx
  41baaf:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41bab4:	cmp    DWORD PTR [rsp],0xc
  41bab8:	jne    41bae0 <__ctype_b_loc@plt+0x19810>
  41baba:	mov    eax,DWORD PTR [rsp+0x8]
  41babe:	test   eax,0x100
  41bac3:	jne    41bae0 <__ctype_b_loc@plt+0x19810>
  41bac5:	movzx  ecx,BYTE PTR [r14+0x4a]
  41baca:	cmp    eax,ecx
  41bacc:	jl     41bae0 <__ctype_b_loc@plt+0x19810>
  41bace:	dec    DWORD PTR [r14+0x3c]
  41bad2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41badc:	nop    DWORD PTR [rax+0x0]
  41bae0:	mov    edx,DWORD PTR [r14+0x3c]
  41bae4:	lea    r12d,[rdx+0x1]
  41bae8:	mov    rax,QWORD PTR [r14]
  41baeb:	movzx  ecx,BYTE PTR [rax+0x73]
  41baef:	cmp    edx,ecx
  41baf1:	jl     41ba37 <__ctype_b_loc@plt+0x19767>
  41baf7:	mov    ecx,r12d
  41bafa:	cmp    edx,0xf9
  41bb00:	jl     41ba30 <__ctype_b_loc@plt+0x19760>
  41bb06:	mov    rdi,QWORD PTR [r14+0x18]
  41bb0a:	mov    edx,DWORD PTR [rdi+0x10]
  41bb0d:	lea    rsi,[rip+0xe80a]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41bb14:	call   413660 <__ctype_b_loc@plt+0x11390>
  41bb19:	mov    rax,QWORD PTR [r14]
  41bb1c:	mov    ecx,DWORD PTR [r14+0x3c]
  41bb20:	inc    ecx
  41bb22:	jmp    41ba30 <__ctype_b_loc@plt+0x19760>
  41bb27:	mov    rsi,rsp
  41bb2a:	mov    rdi,rbp
  41bb2d:	call   419b40 <__ctype_b_loc@plt+0x17870>
  41bb32:	jmp    41bcab <__ctype_b_loc@plt+0x199db>
  41bb37:	mov    rax,QWORD PTR [rbp+0x18]
  41bb3b:	mov    QWORD PTR [rsp],rax
  41bb3f:	mov    DWORD PTR [rsp+0x8],0x4
  41bb47:	mov    rdx,rsp
  41bb4a:	mov    rdi,r13
  41bb4d:	mov    rsi,rdx
  41bb50:	call   4194a0 <__ctype_b_loc@plt+0x171d0>
  41bb55:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  41bb5e:	mov    DWORD PTR [rsp],0x4
  41bb65:	mov    DWORD PTR [rsp+0x8],eax
  41bb69:	mov    eax,DWORD PTR [rbp+0x4]
  41bb6c:	mov    ecx,DWORD PTR [rbp+0x20]
  41bb6f:	mov    DWORD PTR [rbp+0x8],eax
  41bb72:	cmp    ecx,0x11f
  41bb78:	jne    41bc0d <__ctype_b_loc@plt+0x1993d>
  41bb7e:	lea    rsi,[rbp+0x18]
  41bb82:	mov    rdi,rbp
  41bb85:	call   411660 <__ctype_b_loc@plt+0xf390>
  41bb8a:	mov    DWORD PTR [rbp+0x10],eax
  41bb8d:	jmp    41bcab <__ctype_b_loc@plt+0x199db>
  41bb92:	lea    rsi,[rip+0xe8b7]        # 42a450 <__ctype_b_loc@plt+0x28180>
  41bb99:	mov    rdi,rbp
  41bb9c:	call   413660 <__ctype_b_loc@plt+0x11390>
  41bba1:	jmp    41bd8e <__ctype_b_loc@plt+0x19abe>
  41bba6:	vmovups xmm0,XMMWORD PTR [r15]
  41bbab:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  41bbb0:	mov    DWORD PTR [rbp+0x20],0x11f
  41bbb7:	mov    eax,DWORD PTR [rbp+0x10]
  41bbba:	cmp    eax,0x29
  41bbbd:	jne    41b9f3 <__ctype_b_loc@plt+0x19723>
  41bbc3:	mov    DWORD PTR [rsp],0x0
  41bbca:	mov    r14d,DWORD PTR [rsp+0x1c]
  41bbcf:	mov    r15,QWORD PTR [rsp+0x20]
  41bbd4:	jmp    41bc96 <__ctype_b_loc@plt+0x199c6>
  41bbd9:	mov    eax,DWORD PTR [rsp]
  41bbdc:	cmp    eax,0xe
  41bbdf:	mov    r14d,DWORD PTR [rsp+0x1c]
  41bbe4:	mov    r15,QWORD PTR [rsp+0x20]
  41bbe9:	je     41bc26 <__ctype_b_loc@plt+0x19956>
  41bbeb:	cmp    eax,0xd
  41bbee:	jne    41bc96 <__ctype_b_loc@plt+0x199c6>
  41bbf4:	mov    rax,QWORD PTR [r13+0x0]
  41bbf8:	mov    rax,QWORD PTR [rax+0x18]
  41bbfc:	movsxd rcx,DWORD PTR [rsp+0x8]
  41bc01:	and    DWORD PTR [rax+rcx*4],0xff803fff
  41bc08:	jmp    41bc96 <__ctype_b_loc@plt+0x199c6>
  41bc0d:	lea    rax,[rbp+0x20]
  41bc11:	vmovups xmm0,XMMWORD PTR [rax]
  41bc15:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  41bc1a:	mov    DWORD PTR [rbp+0x20],0x11f
  41bc21:	jmp    41bcab <__ctype_b_loc@plt+0x199db>
  41bc26:	mov    rax,QWORD PTR [r13+0x0]
  41bc2a:	mov    rcx,QWORD PTR [rax+0x18]
  41bc2e:	movsxd rdx,DWORD PTR [rsp+0x8]
  41bc33:	and    DWORD PTR [rcx+rdx*4],0x7fffff
  41bc3a:	movsxd rdx,DWORD PTR [rsp+0x8]
  41bc3f:	mov    esi,0xffffc03f
  41bc44:	and    esi,DWORD PTR [rcx+rdx*4]
  41bc47:	mov    edi,DWORD PTR [r13+0x3c]
  41bc4b:	movzx  edi,dil
  41bc4f:	shl    edi,0x6
  41bc52:	or     edi,esi
  41bc54:	mov    DWORD PTR [rcx+rdx*4],edi
  41bc57:	mov    edx,DWORD PTR [r13+0x3c]
  41bc5b:	lea    ebx,[rdx+0x1]
  41bc5e:	movzx  ecx,BYTE PTR [rax+0x73]
  41bc62:	cmp    edx,ecx
  41bc64:	jl     41bc92 <__ctype_b_loc@plt+0x199c2>
  41bc66:	mov    ecx,ebx
  41bc68:	cmp    edx,0xf9
  41bc6e:	jl     41bc8d <__ctype_b_loc@plt+0x199bd>
  41bc70:	mov    rdi,QWORD PTR [r13+0x18]
  41bc74:	mov    edx,DWORD PTR [rdi+0x10]
  41bc77:	lea    rsi,[rip+0xe6a0]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41bc7e:	call   413660 <__ctype_b_loc@plt+0x11390>
  41bc83:	mov    rax,QWORD PTR [r13+0x0]
  41bc87:	mov    ecx,DWORD PTR [r13+0x3c]
  41bc8b:	inc    ecx
  41bc8d:	mov    BYTE PTR [rax+0x73],bl
  41bc90:	mov    ebx,ecx
  41bc92:	mov    DWORD PTR [r13+0x3c],ebx
  41bc96:	mov    rdi,rbp
  41bc99:	mov    esi,0x29
  41bc9e:	mov    edx,0x28
  41bca3:	mov    ecx,r14d
  41bca6:	call   417390 <__ctype_b_loc@plt+0x150c0>
  41bcab:	mov    ebp,DWORD PTR [r15+0x8]
  41bcaf:	xor    eax,eax
  41bcb1:	mov    ecx,DWORD PTR [rsp]
  41bcb4:	lea    edx,[rcx-0xd]
  41bcb7:	cmp    edx,0x2
  41bcba:	jb     41bd48 <__ctype_b_loc@plt+0x19a78>
  41bcc0:	test   ecx,ecx
  41bcc2:	je     41bd3f <__ctype_b_loc@plt+0x19a6f>
  41bcc4:	mov    rsi,rsp
  41bcc7:	mov    rdi,r13
  41bcca:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41bccf:	cmp    DWORD PTR [rsp],0xc
  41bcd3:	jne    41bced <__ctype_b_loc@plt+0x19a1d>
  41bcd5:	mov    eax,DWORD PTR [rsp+0x8]
  41bcd9:	test   eax,0x100
  41bcde:	jne    41bced <__ctype_b_loc@plt+0x19a1d>
  41bce0:	movzx  ecx,BYTE PTR [r13+0x4a]
  41bce5:	cmp    eax,ecx
  41bce7:	jl     41bced <__ctype_b_loc@plt+0x19a1d>
  41bce9:	dec    DWORD PTR [r13+0x3c]
  41bced:	mov    edx,DWORD PTR [r13+0x3c]
  41bcf1:	lea    ebx,[rdx+0x1]
  41bcf4:	mov    rax,QWORD PTR [r13+0x0]
  41bcf8:	movzx  ecx,BYTE PTR [rax+0x73]
  41bcfc:	cmp    edx,ecx
  41bcfe:	jl     41bd2c <__ctype_b_loc@plt+0x19a5c>
  41bd00:	mov    ecx,ebx
  41bd02:	cmp    edx,0xf9
  41bd08:	jl     41bd27 <__ctype_b_loc@plt+0x19a57>
  41bd0a:	mov    rdi,QWORD PTR [r13+0x18]
  41bd0e:	mov    edx,DWORD PTR [rdi+0x10]
  41bd11:	lea    rsi,[rip+0xe606]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41bd18:	call   413660 <__ctype_b_loc@plt+0x11390>
  41bd1d:	mov    rax,QWORD PTR [r13+0x0]
  41bd21:	mov    ecx,DWORD PTR [r13+0x3c]
  41bd25:	inc    ecx
  41bd27:	mov    BYTE PTR [rax+0x73],bl
  41bd2a:	mov    ebx,ecx
  41bd2c:	mov    DWORD PTR [r13+0x3c],ebx
  41bd30:	dec    ebx
  41bd32:	mov    rsi,rsp
  41bd35:	mov    rdi,r13
  41bd38:	mov    edx,ebx
  41bd3a:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41bd3f:	mov    eax,DWORD PTR [r13+0x3c]
  41bd43:	sub    eax,ebp
  41bd45:	shl    eax,0x17
  41bd48:	mov    esi,ebp
  41bd4a:	shl    esi,0x6
  41bd4d:	or     esi,eax
  41bd4f:	or     esi,0x801c
  41bd55:	mov    rax,QWORD PTR [r13+0x18]
  41bd59:	mov    edx,DWORD PTR [rax+0x8]
  41bd5c:	mov    rdi,r13
  41bd5f:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41bd64:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  41bd6c:	mov    DWORD PTR [r15],0xd
  41bd73:	mov    DWORD PTR [r15+0x8],eax
  41bd77:	mov    rax,QWORD PTR [r13+0x0]
  41bd7b:	mov    rax,QWORD PTR [rax+0x28]
  41bd7f:	movsxd rcx,DWORD PTR [r13+0x30]
  41bd83:	mov    DWORD PTR [rax+rcx*4-0x4],r14d
  41bd88:	inc    ebp
  41bd8a:	mov    DWORD PTR [r13+0x3c],ebp
  41bd8e:	add    rsp,0x38
  41bd92:	pop    rbx
  41bd93:	pop    r12
  41bd95:	pop    r13
  41bd97:	pop    r14
  41bd99:	pop    r15
  41bd9b:	pop    rbp
  41bd9c:	ret    
  41bd9d:	nop    DWORD PTR [rax]
  41bda0:	push   rbp
  41bda1:	push   r15
  41bda3:	push   r14
  41bda5:	push   r13
  41bda7:	push   r12
  41bda9:	push   rbx
  41bdaa:	sub    rsp,0x28
  41bdae:	mov    r14,rdx
  41bdb1:	test   rdi,rdi
  41bdb4:	je     41beb1 <__ctype_b_loc@plt+0x19be1>
  41bdba:	mov    r15,rsi
  41bdbd:	mov    rbx,rdi
  41bdc0:	movzx  edx,BYTE PTR [rdi+0x4a]
  41bdc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdce:	xchg   ax,ax
  41bdd0:	test   rdx,rdx
  41bdd3:	jle    41be49 <__ctype_b_loc@plt+0x19b79>
  41bdd5:	mov    rax,QWORD PTR [rbx]
  41bdd8:	mov    rax,QWORD PTR [rax+0x30]
  41bddc:	movzx  esi,WORD PTR [rbx+rdx*2+0xc2]
  41bde4:	dec    rdx
  41bde7:	shl    rsi,0x4
  41bdeb:	cmp    QWORD PTR [rax+rsi*1],r15
  41bdef:	jne    41bdd0 <__ctype_b_loc@plt+0x19b00>
  41bdf1:	test   edx,edx
  41bdf3:	js     41be49 <__ctype_b_loc@plt+0x19b79>
  41bdf5:	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
  41bdfd:	mov    DWORD PTR [r14],0x6
  41be04:	mov    DWORD PTR [r14+0x8],edx
  41be08:	mov    eax,0x6
  41be0d:	test   ecx,ecx
  41be0f:	jne    41c124 <__ctype_b_loc@plt+0x19e54>
  41be15:	mov    rcx,QWORD PTR [rbx+0x28]
  41be19:	test   rcx,rcx
  41be1c:	je     41c124 <__ctype_b_loc@plt+0x19e54>
  41be22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be2c:	nop    DWORD PTR [rax+0x0]
  41be30:	movzx  esi,BYTE PTR [rcx+0xc]
  41be34:	cmp    esi,edx
  41be36:	jle    41bf04 <__ctype_b_loc@plt+0x19c34>
  41be3c:	mov    rcx,QWORD PTR [rcx]
  41be3f:	test   rcx,rcx
  41be42:	jne    41be30 <__ctype_b_loc@plt+0x19b60>
  41be44:	jmp    41c124 <__ctype_b_loc@plt+0x19e54>
  41be49:	mov    rdi,QWORD PTR [rbx+0x10]
  41be4d:	mov    rsi,r15
  41be50:	mov    rdx,r14
  41be53:	xor    ecx,ecx
  41be55:	call   41bda0 <__ctype_b_loc@plt+0x19ad0>
  41be5a:	mov    ecx,eax
  41be5c:	mov    eax,0x8
  41be61:	cmp    ecx,0x8
  41be64:	je     41c124 <__ctype_b_loc@plt+0x19e54>
  41be6a:	mov    r13,QWORD PTR [rbx]
  41be6d:	mov    ebp,DWORD PTR [r13+0x48]
  41be71:	movzx  eax,BYTE PTR [r13+0x70]
  41be76:	test   rax,rax
  41be79:	je     41befe <__ctype_b_loc@plt+0x19c2e>
  41be7f:	mov    edx,DWORD PTR [r14]
  41be82:	xor    ecx,ecx
  41be84:	jmp    41be98 <__ctype_b_loc@plt+0x19bc8>
  41be86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be90:	inc    rcx
  41be93:	cmp    rax,rcx
  41be96:	je     41bed2 <__ctype_b_loc@plt+0x19c02>
  41be98:	movzx  esi,BYTE PTR [rbx+rcx*2+0x4b]
  41be9d:	cmp    edx,esi
  41be9f:	jne    41be90 <__ctype_b_loc@plt+0x19bc0>
  41bea1:	movzx  esi,BYTE PTR [rbx+rcx*2+0x4c]
  41bea6:	cmp    DWORD PTR [r14+0x8],esi
  41beaa:	jne    41be90 <__ctype_b_loc@plt+0x19bc0>
  41beac:	jmp    41c114 <__ctype_b_loc@plt+0x19e44>
  41beb1:	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
  41beb9:	mov    DWORD PTR [r14],0x8
  41bec0:	mov    DWORD PTR [r14+0x8],0xff
  41bec8:	mov    eax,0x8
  41becd:	jmp    41c124 <__ctype_b_loc@plt+0x19e54>
  41bed2:	cmp    al,0x3b
  41bed4:	jbe    41bf00 <__ctype_b_loc@plt+0x19c30>
  41bed6:	mov    edx,DWORD PTR [r13+0x60]
  41beda:	mov    rdi,QWORD PTR [rbx+0x20]
  41bede:	test   edx,edx
  41bee0:	je     41bf0d <__ctype_b_loc@plt+0x19c3d>
  41bee2:	lea    rsi,[rip+0xe4bc]        # 42a3a5 <__ctype_b_loc@plt+0x280d5>
  41bee9:	lea    r8,[rip+0xe526]        # 42a416 <__ctype_b_loc@plt+0x28146>
  41bef0:	mov    ecx,0x3c
  41bef5:	xor    eax,eax
  41bef7:	call   404800 <__ctype_b_loc@plt+0x2530>
  41befc:	jmp    41bf27 <__ctype_b_loc@plt+0x19c57>
  41befe:	xor    eax,eax
  41bf00:	mov    ecx,ebp
  41bf02:	jmp    41bf3d <__ctype_b_loc@plt+0x19c6d>
  41bf04:	mov    BYTE PTR [rcx+0xd],0x1
  41bf08:	jmp    41c124 <__ctype_b_loc@plt+0x19e54>
  41bf0d:	lea    rsi,[rip+0xe46f]        # 42a383 <__ctype_b_loc@plt+0x280b3>
  41bf14:	lea    rcx,[rip+0xe4fb]        # 42a416 <__ctype_b_loc@plt+0x28146>
  41bf1b:	mov    edx,0x3c
  41bf20:	xor    eax,eax
  41bf22:	call   404800 <__ctype_b_loc@plt+0x2530>
  41bf27:	mov    rdi,QWORD PTR [rbx+0x18]
  41bf2b:	mov    rsi,rax
  41bf2e:	xor    edx,edx
  41bf30:	call   413660 <__ctype_b_loc@plt+0x11390>
  41bf35:	mov    al,BYTE PTR [r13+0x70]
  41bf39:	mov    ecx,DWORD PTR [r13+0x48]
  41bf3d:	movzx  eax,al
  41bf40:	cmp    ecx,eax
  41bf42:	jle    41bf55 <__ctype_b_loc@plt+0x19c85>
  41bf44:	mov    rax,QWORD PTR [r13+0x38]
  41bf48:	cmp    ebp,ecx
  41bf4a:	jl     41c009 <__ctype_b_loc@plt+0x19d39>
  41bf50:	jmp    41c0b0 <__ctype_b_loc@plt+0x19de0>
  41bf55:	mov    rdx,QWORD PTR [rbx+0x20]
  41bf59:	mov    rsi,QWORD PTR [r13+0x38]
  41bf5d:	cmp    ecx,0x3ffffffe
  41bf63:	mov    DWORD PTR [rsp+0x14],ebp
  41bf67:	jge    41bf7b <__ctype_b_loc@plt+0x19cab>
  41bf69:	lea    eax,[rcx+rcx*1]
  41bf6c:	cmp    eax,0x3
  41bf6f:	mov    r12d,0x4
  41bf75:	cmovg  r12d,eax
  41bf79:	jmp    41bfae <__ctype_b_loc@plt+0x19cde>
  41bf7b:	mov    r12d,0x7ffffffd
  41bf81:	cmp    ecx,0x7ffffffd
  41bf87:	jl     41bfae <__ctype_b_loc@plt+0x19cde>
  41bf89:	mov    QWORD PTR [rsp+0x8],rsi
  41bf8e:	lea    rsi,[rip+0xe106]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  41bf95:	mov    rbp,rdx
  41bf98:	mov    rdi,rdx
  41bf9b:	xor    eax,eax
  41bf9d:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41bfa2:	mov    rsi,QWORD PTR [rsp+0x8]
  41bfa7:	mov    rdx,rbp
  41bfaa:	mov    ecx,DWORD PTR [r13+0x48]
  41bfae:	mov    QWORD PTR [rsp+0x18],rdx
  41bfb3:	movsxd rbp,ecx
  41bfb6:	shl    rbp,0x3
  41bfba:	mov    DWORD PTR [rsp+0x8],r12d
  41bfbf:	mov    r12d,r12d
  41bfc2:	shl    r12,0x3
  41bfc6:	mov    rax,QWORD PTR [rdx+0x20]
  41bfca:	mov    rdi,QWORD PTR [rax+0x18]
  41bfce:	mov    rdx,rbp
  41bfd1:	mov    rcx,r12
  41bfd4:	mov    QWORD PTR [rsp+0x20],rax
  41bfd9:	call   QWORD PTR [rax+0x10]
  41bfdc:	test   rax,rax
  41bfdf:	je     41c133 <__ctype_b_loc@plt+0x19e63>
  41bfe5:	sub    r12,rbp
  41bfe8:	mov    rcx,QWORD PTR [rsp+0x20]
  41bfed:	add    QWORD PTR [rcx+0x78],r12
  41bff1:	mov    ecx,DWORD PTR [rsp+0x8]
  41bff5:	mov    DWORD PTR [r13+0x48],ecx
  41bff9:	mov    QWORD PTR [r13+0x38],rax
  41bffd:	mov    ebp,DWORD PTR [rsp+0x14]
  41c001:	cmp    ebp,ecx
  41c003:	jge    41c0b0 <__ctype_b_loc@plt+0x19de0>
  41c009:	movsxd rdx,ebp
  41c00c:	movsxd rsi,ecx
  41c00f:	sub    ecx,ebp
  41c011:	mov    rdi,rdx
  41c014:	not    rdi
  41c017:	add    rdi,rsi
  41c01a:	and    rcx,0x7
  41c01e:	je     41c034 <__ctype_b_loc@plt+0x19d64>
  41c020:	mov    QWORD PTR [rax+rdx*8],0x0
  41c028:	inc    rdx
  41c02b:	mov    rax,QWORD PTR [r13+0x38]
  41c02f:	dec    rcx
  41c032:	jne    41c020 <__ctype_b_loc@plt+0x19d50>
  41c034:	cmp    rdi,0x7
  41c038:	jb     41c0b0 <__ctype_b_loc@plt+0x19de0>
  41c03a:	nop    WORD PTR [rax+rax*1+0x0]
  41c040:	mov    QWORD PTR [rax+rdx*8],0x0
  41c048:	mov    rax,QWORD PTR [r13+0x38]
  41c04c:	mov    QWORD PTR [rax+rdx*8+0x8],0x0
  41c055:	mov    rax,QWORD PTR [r13+0x38]
  41c059:	mov    QWORD PTR [rax+rdx*8+0x10],0x0
  41c062:	mov    rax,QWORD PTR [r13+0x38]
  41c066:	mov    QWORD PTR [rax+rdx*8+0x18],0x0
  41c06f:	mov    rax,QWORD PTR [r13+0x38]
  41c073:	mov    QWORD PTR [rax+rdx*8+0x20],0x0
  41c07c:	mov    rax,QWORD PTR [r13+0x38]
  41c080:	mov    QWORD PTR [rax+rdx*8+0x28],0x0
  41c089:	mov    rax,QWORD PTR [r13+0x38]
  41c08d:	mov    QWORD PTR [rax+rdx*8+0x30],0x0
  41c096:	mov    rax,QWORD PTR [r13+0x38]
  41c09a:	mov    QWORD PTR [rax+rdx*8+0x38],0x0
  41c0a3:	add    rdx,0x8
  41c0a7:	mov    rax,QWORD PTR [r13+0x38]
  41c0ab:	cmp    rsi,rdx
  41c0ae:	jne    41c040 <__ctype_b_loc@plt+0x19d70>
  41c0b0:	mov    cl,BYTE PTR [r13+0x70]
  41c0b4:	movzx  edx,cl
  41c0b7:	mov    QWORD PTR [rax+rdx*8],r15
  41c0bb:	test   BYTE PTR [r15+0x9],0x3
  41c0c0:	je     41c0fb <__ctype_b_loc@plt+0x19e2b>
  41c0c2:	mov    r8b,BYTE PTR [r13+0x9]
  41c0c6:	test   r8b,0x4
  41c0ca:	je     41c0fb <__ctype_b_loc@plt+0x19e2b>
  41c0cc:	mov    rsi,QWORD PTR [rbx+0x20]
  41c0d0:	mov    rdi,QWORD PTR [rsi+0x20]
  41c0d4:	cmp    BYTE PTR [rdi+0x21],0x1
  41c0d8:	jne    41c0eb <__ctype_b_loc@plt+0x19e1b>
  41c0da:	mov    rsi,r15
  41c0dd:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  41c0e2:	mov    cl,BYTE PTR [r13+0x70]
  41c0e6:	movzx  edx,cl
  41c0e9:	jmp    41c0fb <__ctype_b_loc@plt+0x19e2b>
  41c0eb:	and    r8b,0xf8
  41c0ef:	mov    al,BYTE PTR [rdi+0x20]
  41c0f2:	and    al,0x3
  41c0f4:	or     al,r8b
  41c0f7:	mov    BYTE PTR [r13+0x9],al
  41c0fb:	mov    al,BYTE PTR [r14]
  41c0fe:	mov    BYTE PTR [rbx+rdx*2+0x4b],al
  41c102:	mov    al,BYTE PTR [r14+0x8]
  41c106:	mov    BYTE PTR [rbx+rdx*2+0x4c],al
  41c10a:	lea    eax,[rcx+0x1]
  41c10d:	mov    BYTE PTR [r13+0x70],al
  41c111:	movzx  ecx,cl
  41c114:	mov    DWORD PTR [r14+0x8],ecx
  41c118:	mov    DWORD PTR [r14],0x7
  41c11f:	mov    eax,0x7
  41c124:	add    rsp,0x28
  41c128:	pop    rbx
  41c129:	pop    r12
  41c12b:	pop    r13
  41c12d:	pop    r14
  41c12f:	pop    r15
  41c131:	pop    rbp
  41c132:	ret    
  41c133:	mov    rax,QWORD PTR [rsp+0x18]
  41c138:	mov    rdi,QWORD PTR [rax+0xa8]
  41c13f:	test   rdi,rdi
  41c142:	jne    41c17d <__ctype_b_loc@plt+0x19ead>
  41c144:	mov    rbx,rax
  41c147:	mov    BYTE PTR [rbx+0xa],0x4
  41c14b:	mov    rax,QWORD PTR [rbx+0x20]
  41c14f:	cmp    QWORD PTR [rax+0x98],0x0
  41c157:	je     41c173 <__ctype_b_loc@plt+0x19ea3>
  41c159:	mov    rdi,rbx
  41c15c:	mov    esi,0x4
  41c161:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41c166:	mov    rax,QWORD PTR [rbx+0x20]
  41c16a:	mov    rdi,rbx
  41c16d:	call   QWORD PTR [rax+0x98]
  41c173:	mov    edi,0x1
  41c178:	call   402280 <exit@plt>
  41c17d:	mov    DWORD PTR [rdi+0xd0],0x4
  41c187:	add    rdi,0x8
  41c18b:	mov    esi,0x1
  41c190:	call   402230 <longjmp@plt>
  41c195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c19f:	nop
  41c1a0:	push   rbp
  41c1a1:	push   r15
  41c1a3:	push   r14
  41c1a5:	push   rbx
  41c1a6:	push   rax
  41c1a7:	mov    ebp,edx
  41c1a9:	mov    r14,rsi
  41c1ac:	mov    rbx,rdi
  41c1af:	mov    eax,DWORD PTR [rsi]
  41c1b1:	cmp    eax,0xc
  41c1b4:	je     41c259 <__ctype_b_loc@plt+0x19f89>
  41c1ba:	cmp    eax,0xb
  41c1bd:	jne    41c1ff <__ctype_b_loc@plt+0x19f2f>
  41c1bf:	mov    rax,QWORD PTR [rbx]
  41c1c2:	mov    rax,QWORD PTR [rax+0x18]
  41c1c6:	movsxd rcx,DWORD PTR [r14+0x8]
  41c1ca:	mov    eax,DWORD PTR [rax+rcx*4]
  41c1cd:	mov    ecx,eax
  41c1cf:	and    ecx,0x3f
  41c1d2:	cmp    ecx,0x13
  41c1d5:	jne    41c1ff <__ctype_b_loc@plt+0x19f2f>
  41c1d7:	dec    DWORD PTR [rbx+0x30]
  41c1da:	shr    eax,0x11
  41c1dd:	and    eax,0xffffffc0
  41c1e0:	xor    esi,esi
  41c1e2:	test   ebp,ebp
  41c1e4:	sete   sil
  41c1e8:	shl    esi,0xe
  41c1eb:	or     esi,eax
  41c1ed:	or     esi,0x1a
  41c1f0:	mov    rax,QWORD PTR [rbx+0x18]
  41c1f4:	mov    edx,DWORD PTR [rax+0x8]
  41c1f7:	mov    rdi,rbx
  41c1fa:	jmp    41c28d <__ctype_b_loc@plt+0x19fbd>
  41c1ff:	mov    edx,DWORD PTR [rbx+0x3c]
  41c202:	lea    r15d,[rdx+0x1]
  41c206:	mov    rax,QWORD PTR [rbx]
  41c209:	movzx  ecx,BYTE PTR [rax+0x73]
  41c20d:	cmp    edx,ecx
  41c20f:	jl     41c23e <__ctype_b_loc@plt+0x19f6e>
  41c211:	mov    ecx,r15d
  41c214:	cmp    edx,0xf9
  41c21a:	jl     41c237 <__ctype_b_loc@plt+0x19f67>
  41c21c:	mov    rdi,QWORD PTR [rbx+0x18]
  41c220:	mov    edx,DWORD PTR [rdi+0x10]
  41c223:	lea    rsi,[rip+0xe0f4]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41c22a:	call   413660 <__ctype_b_loc@plt+0x11390>
  41c22f:	mov    rax,QWORD PTR [rbx]
  41c232:	mov    ecx,DWORD PTR [rbx+0x3c]
  41c235:	inc    ecx
  41c237:	mov    BYTE PTR [rax+0x73],r15b
  41c23b:	mov    r15d,ecx
  41c23e:	mov    DWORD PTR [rbx+0x3c],r15d
  41c242:	dec    r15d
  41c245:	mov    rdi,rbx
  41c248:	mov    rsi,r14
  41c24b:	mov    edx,r15d
  41c24e:	call   419320 <__ctype_b_loc@plt+0x17050>
  41c253:	cmp    DWORD PTR [r14],0xc
  41c257:	jne    41c26f <__ctype_b_loc@plt+0x19f9f>
  41c259:	mov    eax,DWORD PTR [r14+0x8]
  41c25d:	test   eax,0x100
  41c262:	jne    41c26f <__ctype_b_loc@plt+0x19f9f>
  41c264:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41c268:	cmp    eax,ecx
  41c26a:	jl     41c26f <__ctype_b_loc@plt+0x19f9f>
  41c26c:	dec    DWORD PTR [rbx+0x3c]
  41c26f:	mov    eax,DWORD PTR [r14+0x8]
  41c273:	shl    eax,0x17
  41c276:	shl    ebp,0xe
  41c279:	or     ebp,eax
  41c27b:	or     ebp,0x3fdb
  41c281:	mov    rax,QWORD PTR [rbx+0x18]
  41c285:	mov    edx,DWORD PTR [rax+0x8]
  41c288:	mov    rdi,rbx
  41c28b:	mov    esi,ebp
  41c28d:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41c292:	mov    rdi,rbx
  41c295:	add    rsp,0x8
  41c299:	pop    rbx
  41c29a:	pop    r14
  41c29c:	pop    r15
  41c29e:	pop    rbp
  41c29f:	jmp    417600 <__ctype_b_loc@plt+0x15330>
  41c2a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2ae:	xchg   ax,ax
  41c2b0:	push   rbp
  41c2b1:	push   r15
  41c2b3:	push   r14
  41c2b5:	push   r13
  41c2b7:	push   r12
  41c2b9:	push   rbx
  41c2ba:	push   rax
  41c2bb:	mov    rbp,r8
  41c2be:	mov    r14,rcx
  41c2c1:	mov    r13d,edx
  41c2c4:	mov    r15d,esi
  41c2c7:	mov    rbx,rdi
  41c2ca:	mov    rsi,rcx
  41c2cd:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41c2d2:	mov    r12d,eax
  41c2d5:	mov    rdi,rbx
  41c2d8:	mov    rsi,rbp
  41c2db:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41c2e0:	cmp    DWORD PTR [rbp+0x0],0xc
  41c2e4:	jne    41c2fc <__ctype_b_loc@plt+0x1a02c>
  41c2e6:	mov    ecx,DWORD PTR [rbp+0x8]
  41c2e9:	test   ecx,0x100
  41c2ef:	jne    41c2fc <__ctype_b_loc@plt+0x1a02c>
  41c2f1:	movzx  edx,BYTE PTR [rbx+0x4a]
  41c2f5:	cmp    ecx,edx
  41c2f7:	jl     41c2fc <__ctype_b_loc@plt+0x1a02c>
  41c2f9:	dec    DWORD PTR [rbx+0x3c]
  41c2fc:	cmp    DWORD PTR [r14],0xc
  41c300:	jne    41c319 <__ctype_b_loc@plt+0x1a049>
  41c302:	mov    ecx,DWORD PTR [r14+0x8]
  41c306:	test   ecx,0x100
  41c30c:	jne    41c319 <__ctype_b_loc@plt+0x1a049>
  41c30e:	movzx  edx,BYTE PTR [rbx+0x4a]
  41c312:	cmp    ecx,edx
  41c314:	jl     41c319 <__ctype_b_loc@plt+0x1a049>
  41c316:	dec    DWORD PTR [rbx+0x3c]
  41c319:	test   r13d,r13d
  41c31c:	sete   cl
  41c31f:	cmp    r15d,0x17
  41c323:	setne  dl
  41c326:	shl    r13d,0x6
  41c32a:	test   dl,cl
  41c32c:	mov    ecx,r12d
  41c32f:	cmovne ecx,eax
  41c332:	cmovne eax,r12d
  41c336:	mov    edx,0x40
  41c33b:	cmove  edx,r13d
  41c33f:	or     edx,r15d
  41c342:	shl    ecx,0x17
  41c345:	or     ecx,edx
  41c347:	shl    eax,0xe
  41c34a:	or     eax,ecx
  41c34c:	mov    rcx,QWORD PTR [rbx+0x18]
  41c350:	mov    edx,DWORD PTR [rcx+0x8]
  41c353:	mov    rdi,rbx
  41c356:	mov    esi,eax
  41c358:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41c35d:	mov    rdi,rbx
  41c360:	call   417600 <__ctype_b_loc@plt+0x15330>
  41c365:	mov    DWORD PTR [r14+0x8],eax
  41c369:	mov    DWORD PTR [r14],0xa
  41c370:	add    rsp,0x8
  41c374:	pop    rbx
  41c375:	pop    r12
  41c377:	pop    r13
  41c379:	pop    r14
  41c37b:	pop    r15
  41c37d:	pop    rbp
  41c37e:	ret    
  41c37f:	nop
  41c380:	push   rbp
  41c381:	push   r15
  41c383:	push   r14
  41c385:	push   r13
  41c387:	push   r12
  41c389:	push   rbx
  41c38a:	push   rax
  41c38b:	mov    r13d,edx
  41c38e:	mov    ebx,esi
  41c390:	mov    r14,rdi
  41c393:	cmp    DWORD PTR [rdi+0x30],edx
  41c396:	jne    41c430 <__ctype_b_loc@plt+0x1a160>
  41c39c:	mov    DWORD PTR [r14+0x34],r13d
  41c3a0:	cmp    ebx,0xffffffff
  41c3a3:	je     41c531 <__ctype_b_loc@plt+0x1a261>
  41c3a9:	mov    ecx,DWORD PTR [r14+0x38]
  41c3ad:	cmp    ecx,0xffffffff
  41c3b0:	je     41c52d <__ctype_b_loc@plt+0x1a25d>
  41c3b6:	mov    rax,QWORD PTR [r14]
  41c3b9:	mov    r15,QWORD PTR [rax+0x18]
  41c3bd:	nop    DWORD PTR [rax]
  41c3c0:	mov    r12d,ecx
  41c3c3:	movsxd rbp,ecx
  41c3c6:	mov    eax,DWORD PTR [r15+rbp*4]
  41c3ca:	mov    ecx,eax
  41c3cc:	shr    ecx,0xe
  41c3cf:	lea    edx,[rcx-0x1ffff]
  41c3d5:	cmp    edx,0xffffffff
  41c3d8:	lea    ecx,[rbp+rcx*1-0x1fffe]
  41c3df:	cmove  ecx,edx
  41c3e2:	cmp    ecx,0xffffffff
  41c3e5:	jne    41c3c0 <__ctype_b_loc@plt+0x1a0f0>
  41c3e7:	not    r12d
  41c3ea:	add    r12d,ebx
  41c3ed:	mov    ecx,r12d
  41c3f0:	neg    ecx
  41c3f2:	cmovl  ecx,r12d
  41c3f6:	cmp    ecx,0x20000
  41c3fc:	jl     41c415 <__ctype_b_loc@plt+0x1a145>
  41c3fe:	mov    rdi,QWORD PTR [r14+0x18]
  41c402:	mov    edx,DWORD PTR [rdi+0x10]
  41c405:	lea    rsi,[rip+0xdedf]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41c40c:	call   413660 <__ctype_b_loc@plt+0x11390>
  41c411:	mov    eax,DWORD PTR [r15+rbp*4]
  41c415:	and    eax,0x3fff
  41c41a:	shl    r12d,0xe
  41c41e:	lea    eax,[r12+rax*1]
  41c422:	add    eax,0x7fffc000
  41c427:	mov    DWORD PTR [r15+rbp*4],eax
  41c42b:	jmp    41c531 <__ctype_b_loc@plt+0x1a261>
  41c430:	cmp    ebx,0xffffffff
  41c433:	je     41c531 <__ctype_b_loc@plt+0x1a261>
  41c439:	movabs r12,0x20f800000
  41c443:	jmp    41c486 <__ctype_b_loc@plt+0x1a1b6>
  41c445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c44f:	nop
  41c450:	mov    rdi,QWORD PTR [r14+0x18]
  41c454:	mov    edx,DWORD PTR [rdi+0x10]
  41c457:	lea    rsi,[rip+0xde8d]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41c45e:	call   413660 <__ctype_b_loc@plt+0x11390>
  41c463:	mov    eax,DWORD PTR [rbp+0x0]
  41c466:	and    eax,0x3fff
  41c46b:	shl    ebx,0xe
  41c46e:	lea    eax,[rbx+rax*1]
  41c471:	add    eax,0x7fffc000
  41c476:	mov    DWORD PTR [rbp+0x0],eax
  41c479:	mov    ebx,r15d
  41c47c:	cmp    r15d,0xffffffff
  41c480:	je     41c531 <__ctype_b_loc@plt+0x1a261>
  41c486:	mov    rax,QWORD PTR [r14]
  41c489:	mov    rax,QWORD PTR [rax+0x18]
  41c48d:	movsxd rcx,ebx
  41c490:	lea    rbp,[rax+rcx*4]
  41c494:	mov    eax,DWORD PTR [rax+rcx*4]
  41c497:	mov    edx,eax
  41c499:	shr    edx,0xe
  41c49c:	lea    esi,[rdx-0x1ffff]
  41c4a2:	cmp    esi,0xffffffff
  41c4a5:	lea    r15d,[rcx+rdx*1-0x1fffe]
  41c4ad:	cmove  r15d,esi
  41c4b1:	test   ecx,ecx
  41c4b3:	jle    41c4be <__ctype_b_loc@plt+0x1a1ee>
  41c4b5:	mov    ecx,DWORD PTR [rbp-0x4]
  41c4b8:	bt     r12,rcx
  41c4bc:	jb     41c4d0 <__ctype_b_loc@plt+0x1a200>
  41c4be:	mov    ecx,eax
  41c4c0:	mov    rdx,rbp
  41c4c3:	jmp    41c4d4 <__ctype_b_loc@plt+0x1a204>
  41c4c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4cf:	nop
  41c4d0:	lea    rdx,[rbp-0x4]
  41c4d4:	mov    esi,ecx
  41c4d6:	and    esi,0x3f
  41c4d9:	cmp    esi,0x1b
  41c4dc:	jne    41c510 <__ctype_b_loc@plt+0x1a240>
  41c4de:	mov    eax,ecx
  41c4e0:	shr    eax,0x11
  41c4e3:	and    eax,0xffffffc0
  41c4e6:	and    ecx,0x7fc000
  41c4ec:	or     ecx,eax
  41c4ee:	or     ecx,0x1a
  41c4f1:	mov    DWORD PTR [rdx],ecx
  41c4f3:	not    ebx
  41c4f5:	add    ebx,r13d
  41c4f8:	mov    eax,ebx
  41c4fa:	neg    eax
  41c4fc:	cmovl  eax,ebx
  41c4ff:	cmp    eax,0x1ffff
  41c504:	jg     41c450 <__ctype_b_loc@plt+0x1a180>
  41c50a:	jmp    41c463 <__ctype_b_loc@plt+0x1a193>
  41c50f:	nop
  41c510:	not    ebx
  41c512:	add    ebx,r13d
  41c515:	mov    ecx,ebx
  41c517:	neg    ecx
  41c519:	cmovl  ecx,ebx
  41c51c:	cmp    ecx,0x20000
  41c522:	jge    41c450 <__ctype_b_loc@plt+0x1a180>
  41c528:	jmp    41c466 <__ctype_b_loc@plt+0x1a196>
  41c52d:	mov    DWORD PTR [r14+0x38],ebx
  41c531:	add    rsp,0x8
  41c535:	pop    rbx
  41c536:	pop    r12
  41c538:	pop    r13
  41c53a:	pop    r14
  41c53c:	pop    r15
  41c53e:	pop    rbp
  41c53f:	ret    
  41c540:	push   rbp
  41c541:	push   r14
  41c543:	push   rbx
  41c544:	mov    ebp,esi
  41c546:	mov    rbx,rdi
  41c549:	mov    r14,QWORD PTR [rdi+0x38]
  41c54d:	cmp    esi,0x100
  41c553:	jg     41c56f <__ctype_b_loc@plt+0x1a29f>
  41c555:	call   4022d0 <__ctype_b_loc@plt>
  41c55a:	mov    rax,QWORD PTR [rax]
  41c55d:	movsxd rcx,ebp
  41c560:	test   BYTE PTR [rax+rcx*2],0x2
  41c564:	jne    41c583 <__ctype_b_loc@plt+0x1a2b3>
  41c566:	lea    rsi,[rip+0xdcee]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41c56d:	jmp    41c58a <__ctype_b_loc@plt+0x1a2ba>
  41c56f:	movsxd rax,ebp
  41c572:	lea    rcx,[rip+0x13457]        # 42f9d0 <__ctype_b_loc@plt+0x2d700>
  41c579:	mov    rdx,QWORD PTR [rcx+rax*8-0x808]
  41c581:	jmp    41c599 <__ctype_b_loc@plt+0x1a2c9>
  41c583:	lea    rsi,[rip+0xdcc8]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41c58a:	mov    rdi,r14
  41c58d:	mov    edx,ebp
  41c58f:	xor    eax,eax
  41c591:	call   404800 <__ctype_b_loc@plt+0x2530>
  41c596:	mov    rdx,rax
  41c599:	lea    rsi,[rip+0xdef5]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41c5a0:	mov    rdi,r14
  41c5a3:	xor    eax,eax
  41c5a5:	call   404800 <__ctype_b_loc@plt+0x2530>
  41c5aa:	mov    edx,DWORD PTR [rbx+0x10]
  41c5ad:	mov    rdi,rbx
  41c5b0:	mov    rsi,rax
  41c5b3:	pop    rbx
  41c5b4:	pop    r14
  41c5b6:	pop    rbp
  41c5b7:	jmp    413660 <__ctype_b_loc@plt+0x11390>
  41c5bc:	nop    DWORD PTR [rax+0x0]
  41c5c0:	push   rbp
  41c5c1:	push   r15
  41c5c3:	push   r14
  41c5c5:	push   r13
  41c5c7:	push   r12
  41c5c9:	push   rbx
  41c5ca:	sub    rsp,0x28
  41c5ce:	mov    ebx,r8d
  41c5d1:	mov    r15d,ecx
  41c5d4:	mov    DWORD PTR [rsp+0x14],edx
  41c5d8:	mov    DWORD PTR [rsp+0xc],esi
  41c5dc:	mov    r14,rdi
  41c5df:	mov    r13,QWORD PTR [rdi+0x30]
  41c5e3:	mov    al,BYTE PTR [r13+0x4a]
  41c5e7:	add    al,0x3
  41c5e9:	mov    BYTE PTR [r13+0x4a],al
  41c5ed:	mov    ecx,DWORD PTR [r13+0x30]
  41c5f1:	mov    rdx,QWORD PTR [r13+0x0]
  41c5f5:	mov    rdx,QWORD PTR [rdx+0x30]
  41c5f9:	movzx  eax,al
  41c5fc:	movzx  esi,WORD PTR [r13+rax*2+0xbe]
  41c605:	shl    rsi,0x4
  41c609:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41c60d:	movzx  esi,WORD PTR [r13+rax*2+0xc0]
  41c616:	shl    rsi,0x4
  41c61a:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41c61e:	movzx  eax,WORD PTR [r13+rax*2+0xc2]
  41c627:	shl    rax,0x4
  41c62b:	mov    DWORD PTR [rdx+rax*1+0x8],ecx
  41c62f:	cmp    DWORD PTR [rdi+0x10],0x103
  41c636:	je     41c660 <__ctype_b_loc@plt+0x1a390>
  41c638:	mov    rdi,QWORD PTR [r14+0x38]
  41c63c:	lea    rsi,[rip+0xde52]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41c643:	lea    rdx,[rip+0xd9ae]        # 429ff8 <__ctype_b_loc@plt+0x27d28>
  41c64a:	xor    eax,eax
  41c64c:	call   404800 <__ctype_b_loc@plt+0x2530>
  41c651:	mov    edx,DWORD PTR [r14+0x10]
  41c655:	mov    rdi,r14
  41c658:	mov    rsi,rax
  41c65b:	call   413660 <__ctype_b_loc@plt+0x11390>
  41c660:	mov    eax,DWORD PTR [r14+0x4]
  41c664:	mov    ecx,DWORD PTR [r14+0x20]
  41c668:	mov    DWORD PTR [r14+0x8],eax
  41c66c:	cmp    ecx,0x11f
  41c672:	jne    41c686 <__ctype_b_loc@plt+0x1a3b6>
  41c674:	lea    rsi,[r14+0x18]
  41c678:	mov    rdi,r14
  41c67b:	call   411660 <__ctype_b_loc@plt+0xf390>
  41c680:	mov    DWORD PTR [r14+0x10],eax
  41c684:	jmp    41c69c <__ctype_b_loc@plt+0x1a3cc>
  41c686:	lea    rax,[r14+0x20]
  41c68a:	vmovups xmm0,XMMWORD PTR [rax]
  41c68e:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41c694:	mov    DWORD PTR [r14+0x20],0x11f
  41c69c:	test   ebx,ebx
  41c69e:	mov    DWORD PTR [rsp+0x10],ebx
  41c6a2:	je     41c6c2 <__ctype_b_loc@plt+0x1a3f2>
  41c6a4:	mov    esi,DWORD PTR [rsp+0xc]
  41c6a8:	shl    esi,0x6
  41c6ab:	or     esi,0x7fff8020
  41c6b1:	mov    rax,QWORD PTR [r13+0x18]
  41c6b5:	mov    edx,DWORD PTR [rax+0x8]
  41c6b8:	mov    rdi,r13
  41c6bb:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41c6c0:	jmp    41c6ca <__ctype_b_loc@plt+0x1a3fa>
  41c6c2:	mov    rdi,r13
  41c6c5:	call   417600 <__ctype_b_loc@plt+0x15330>
  41c6ca:	mov    DWORD PTR [rsp+0x8],eax
  41c6ce:	mov    DWORD PTR [rsp+0x20],0xffffffff
  41c6d6:	mov    BYTE PTR [rsp+0x26],0x0
  41c6db:	mov    al,BYTE PTR [r13+0x4a]
  41c6df:	mov    BYTE PTR [rsp+0x24],al
  41c6e3:	mov    BYTE PTR [rsp+0x25],0x0
  41c6e8:	mov    rax,QWORD PTR [r13+0x28]
  41c6ec:	mov    QWORD PTR [rsp+0x18],rax
  41c6f1:	lea    rax,[rsp+0x18]
  41c6f6:	mov    QWORD PTR [r13+0x28],rax
  41c6fa:	mov    r10,QWORD PTR [r14+0x30]
  41c6fe:	mov    bl,BYTE PTR [r10+0x4a]
  41c702:	add    bl,r15b
  41c705:	mov    BYTE PTR [r10+0x4a],bl
  41c709:	test   r15d,r15d
  41c70c:	je     41c7ff <__ctype_b_loc@plt+0x1a52f>
  41c712:	mov    eax,DWORD PTR [r10+0x30]
  41c716:	mov    rcx,QWORD PTR [r10]
  41c719:	mov    rcx,QWORD PTR [rcx+0x30]
  41c71d:	movsxd rdx,r15d
  41c720:	movzx  r9d,bl
  41c724:	lea    r8d,[r15-0x1]
  41c728:	test   r15b,0x7
  41c72c:	je     41c766 <__ctype_b_loc@plt+0x1a496>
  41c72e:	lea    rdi,[r9+r9*1]
  41c732:	lea    rbp,[rdx+rdx*1]
  41c736:	sub    rdi,rbp
  41c739:	lea    rbx,[rdi+r10*1]
  41c73d:	add    rbx,0xc4
  41c744:	mov    ebp,r15d
  41c747:	and    ebp,0x7
  41c74a:	xor    edi,edi
  41c74c:	nop    DWORD PTR [rax+0x0]
  41c750:	movzx  esi,WORD PTR [rbx+rdi*2]
  41c754:	shl    rsi,0x4
  41c758:	mov    DWORD PTR [rcx+rsi*1+0x8],eax
  41c75c:	inc    rdi
  41c75f:	cmp    ebp,edi
  41c761:	jne    41c750 <__ctype_b_loc@plt+0x1a480>
  41c763:	sub    rdx,rdi
  41c766:	cmp    r8d,0x7
  41c76a:	jb     41c7ff <__ctype_b_loc@plt+0x1a52f>
  41c770:	add    r9,r9
  41c773:	lea    rsi,[rdx+rdx*1]
  41c777:	sub    r9,rsi
  41c77a:	lea    rsi,[r9+r10*1]
  41c77e:	add    rsi,0xd2
  41c785:	xor    edi,edi
  41c787:	nop    WORD PTR [rax+rax*1+0x0]
  41c790:	movzx  ebp,WORD PTR [rsi+rdi*2-0xe]
  41c795:	shl    rbp,0x4
  41c799:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c79d:	movzx  ebp,WORD PTR [rsi+rdi*2-0xc]
  41c7a2:	shl    rbp,0x4
  41c7a6:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7aa:	movzx  ebp,WORD PTR [rsi+rdi*2-0xa]
  41c7af:	shl    rbp,0x4
  41c7b3:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7b7:	movzx  ebp,WORD PTR [rsi+rdi*2-0x8]
  41c7bc:	shl    rbp,0x4
  41c7c0:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7c4:	movzx  ebp,WORD PTR [rsi+rdi*2-0x6]
  41c7c9:	shl    rbp,0x4
  41c7cd:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7d1:	movzx  ebp,WORD PTR [rsi+rdi*2-0x4]
  41c7d6:	shl    rbp,0x4
  41c7da:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7de:	movzx  ebp,WORD PTR [rsi+rdi*2-0x2]
  41c7e3:	shl    rbp,0x4
  41c7e7:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7eb:	movzx  ebp,WORD PTR [rsi+rdi*2]
  41c7ef:	shl    rbp,0x4
  41c7f3:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  41c7f7:	add    rdi,0x8
  41c7fb:	cmp    edx,edi
  41c7fd:	jne    41c790 <__ctype_b_loc@plt+0x1a4c0>
  41c7ff:	mov    ebx,DWORD PTR [r13+0x3c]
  41c803:	add    ebx,r15d
  41c806:	mov    rax,QWORD PTR [r13+0x0]
  41c80a:	movzx  ecx,BYTE PTR [rax+0x73]
  41c80e:	cmp    ebx,ecx
  41c810:	jle    41c83f <__ctype_b_loc@plt+0x1a56f>
  41c812:	mov    ecx,ebx
  41c814:	cmp    ebx,0xfa
  41c81a:	jl     41c83a <__ctype_b_loc@plt+0x1a56a>
  41c81c:	mov    rdi,QWORD PTR [r13+0x18]
  41c820:	mov    edx,DWORD PTR [rdi+0x10]
  41c823:	lea    rsi,[rip+0xdaf4]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41c82a:	call   413660 <__ctype_b_loc@plt+0x11390>
  41c82f:	mov    rax,QWORD PTR [r13+0x0]
  41c833:	mov    ecx,DWORD PTR [r13+0x3c]
  41c837:	add    ecx,r15d
  41c83a:	mov    BYTE PTR [rax+0x73],bl
  41c83d:	mov    ebx,ecx
  41c83f:	mov    DWORD PTR [r13+0x3c],ebx
  41c843:	mov    rdi,r14
  41c846:	call   4170e0 <__ctype_b_loc@plt+0x14e10>
  41c84b:	mov    r8,QWORD PTR [r13+0x18]
  41c84f:	mov    r14,QWORD PTR [r13+0x28]
  41c853:	mov    rax,QWORD PTR [r14]
  41c856:	mov    QWORD PTR [r13+0x28],rax
  41c85a:	mov    cl,BYTE PTR [r14+0xc]
  41c85e:	mov    rdx,QWORD PTR [r8+0x30]
  41c862:	movzx  esi,BYTE PTR [rdx+0x4a]
  41c866:	cmp    sil,cl
  41c869:	jbe    41c931 <__ctype_b_loc@plt+0x1a661>
  41c86f:	mov    edi,DWORD PTR [rdx+0x30]
  41c872:	mov    rax,QWORD PTR [rdx]
  41c875:	mov    rax,QWORD PTR [rax+0x30]
  41c879:	mov    ebx,esi
  41c87b:	sub    bl,cl
  41c87d:	mov    r9d,ecx
  41c880:	not    r9b
  41c883:	add    r9b,sil
  41c886:	and    bl,0x3
  41c889:	je     41c8ae <__ctype_b_loc@plt+0x1a5de>
  41c88b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c890:	lea    ebp,[rsi-0x1]
  41c893:	movzx  ebp,bpl
  41c897:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41c89f:	shl    rbp,0x4
  41c8a3:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41c8a7:	dec    rsi
  41c8aa:	dec    bl
  41c8ac:	jne    41c890 <__ctype_b_loc@plt+0x1a5c0>
  41c8ae:	cmp    r9b,0x3
  41c8b2:	jb     41c92e <__ctype_b_loc@plt+0x1a65e>
  41c8b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8be:	xchg   ax,ax
  41c8c0:	lea    ebp,[rsi-0x1]
  41c8c3:	movzx  ebp,bpl
  41c8c7:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41c8cf:	shl    rbp,0x4
  41c8d3:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41c8d7:	lea    ebp,[rsi+0xfe]
  41c8dd:	movzx  ebp,bpl
  41c8e1:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41c8e9:	shl    rbp,0x4
  41c8ed:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41c8f1:	lea    ebp,[rsi+0xfd]
  41c8f7:	movzx  ebp,bpl
  41c8fb:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41c903:	shl    rbp,0x4
  41c907:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41c90b:	lea    ebp,[rsi+0xfc]
  41c911:	movzx  ebp,bpl
  41c915:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41c91d:	shl    rbp,0x4
  41c921:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41c925:	add    rsi,0xfffffffffffffffc
  41c929:	cmp    sil,cl
  41c92c:	ja     41c8c0 <__ctype_b_loc@plt+0x1a5f0>
  41c92e:	mov    BYTE PTR [rdx+0x4a],cl
  41c931:	cmp    BYTE PTR [r14+0xd],0x0
  41c936:	mov    r12d,DWORD PTR [rsp+0x10]
  41c93b:	je     41c952 <__ctype_b_loc@plt+0x1a682>
  41c93d:	movzx  esi,cl
  41c940:	shl    esi,0x6
  41c943:	or     esi,0x23
  41c946:	mov    edx,DWORD PTR [r8+0x8]
  41c94a:	mov    rdi,r13
  41c94d:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41c952:	movzx  eax,BYTE PTR [r13+0x4a]
  41c957:	mov    DWORD PTR [r13+0x3c],eax
  41c95b:	mov    r14d,DWORD PTR [r14+0x8]
  41c95f:	mov    eax,DWORD PTR [r13+0x30]
  41c963:	mov    DWORD PTR [r13+0x34],eax
  41c967:	cmp    r14d,0xffffffff
  41c96b:	je     41ca05 <__ctype_b_loc@plt+0x1a735>
  41c971:	mov    edx,DWORD PTR [r13+0x38]
  41c975:	cmp    edx,0xffffffff
  41c978:	je     41ca01 <__ctype_b_loc@plt+0x1a731>
  41c97e:	mov    rax,QWORD PTR [r13+0x0]
  41c982:	mov    rbx,QWORD PTR [rax+0x18]
  41c986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c990:	mov    ecx,edx
  41c992:	movsxd rbp,edx
  41c995:	mov    eax,DWORD PTR [rbx+rbp*4]
  41c998:	mov    edx,eax
  41c99a:	shr    edx,0xe
  41c99d:	lea    esi,[rdx-0x1ffff]
  41c9a3:	cmp    esi,0xffffffff
  41c9a6:	lea    edx,[rbp+rdx*1-0x1fffe]
  41c9ad:	cmove  edx,esi
  41c9b0:	cmp    edx,0xffffffff
  41c9b3:	jne    41c990 <__ctype_b_loc@plt+0x1a6c0>
  41c9b5:	not    ecx
  41c9b7:	add    r14d,ecx
  41c9ba:	mov    ecx,r14d
  41c9bd:	neg    ecx
  41c9bf:	cmovl  ecx,r14d
  41c9c3:	cmp    ecx,0x20000
  41c9c9:	jl     41c9e1 <__ctype_b_loc@plt+0x1a711>
  41c9cb:	mov    rdi,QWORD PTR [r13+0x18]
  41c9cf:	mov    edx,DWORD PTR [rdi+0x10]
  41c9d2:	lea    rsi,[rip+0xd912]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41c9d9:	call   413660 <__ctype_b_loc@plt+0x11390>
  41c9de:	mov    eax,DWORD PTR [rbx+rbp*4]
  41c9e1:	and    eax,0x3fff
  41c9e6:	shl    r14d,0xe
  41c9ea:	lea    eax,[r14+rax*1]
  41c9ee:	add    eax,0x7fffc000
  41c9f3:	mov    DWORD PTR [rbx+rbp*4],eax
  41c9f6:	mov    eax,DWORD PTR [r13+0x30]
  41c9fa:	mov    r12d,DWORD PTR [rsp+0x10]
  41c9ff:	jmp    41ca05 <__ctype_b_loc@plt+0x1a735>
  41ca01:	mov    DWORD PTR [r13+0x38],r14d
  41ca05:	mov    ebx,DWORD PTR [rsp+0x8]
  41ca09:	mov    esi,DWORD PTR [rsp+0xc]
  41ca0d:	mov    DWORD PTR [r13+0x34],eax
  41ca11:	cmp    ebx,0xffffffff
  41ca14:	je     41caa9 <__ctype_b_loc@plt+0x1a7d9>
  41ca1a:	mov    ecx,DWORD PTR [r13+0x38]
  41ca1e:	cmp    ecx,0xffffffff
  41ca21:	je     41caa5 <__ctype_b_loc@plt+0x1a7d5>
  41ca27:	mov    rax,QWORD PTR [r13+0x0]
  41ca2b:	mov    r14,QWORD PTR [rax+0x18]
  41ca2f:	nop
  41ca30:	mov    ebx,ecx
  41ca32:	movsxd rbp,ecx
  41ca35:	mov    eax,DWORD PTR [r14+rbp*4]
  41ca39:	mov    ecx,eax
  41ca3b:	shr    ecx,0xe
  41ca3e:	lea    edx,[rcx-0x1ffff]
  41ca44:	cmp    edx,0xffffffff
  41ca47:	lea    ecx,[rbp+rcx*1-0x1fffe]
  41ca4e:	cmove  ecx,edx
  41ca51:	cmp    ecx,0xffffffff
  41ca54:	jne    41ca30 <__ctype_b_loc@plt+0x1a760>
  41ca56:	not    ebx
  41ca58:	add    ebx,DWORD PTR [rsp+0x8]
  41ca5c:	mov    ecx,ebx
  41ca5e:	neg    ecx
  41ca60:	cmovl  ecx,ebx
  41ca63:	cmp    ecx,0x20000
  41ca69:	jl     41ca82 <__ctype_b_loc@plt+0x1a7b2>
  41ca6b:	mov    rdi,QWORD PTR [r13+0x18]
  41ca6f:	mov    edx,DWORD PTR [rdi+0x10]
  41ca72:	lea    rsi,[rip+0xd872]        # 42a2eb <__ctype_b_loc@plt+0x2801b>
  41ca79:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ca7e:	mov    eax,DWORD PTR [r14+rbp*4]
  41ca82:	and    eax,0x3fff
  41ca87:	shl    ebx,0xe
  41ca8a:	lea    eax,[rbx+rax*1]
  41ca8d:	add    eax,0x7fffc000
  41ca92:	mov    DWORD PTR [r14+rbp*4],eax
  41ca96:	mov    r12d,DWORD PTR [rsp+0x10]
  41ca9b:	mov    ebx,DWORD PTR [rsp+0x8]
  41ca9f:	mov    esi,DWORD PTR [rsp+0xc]
  41caa3:	jmp    41caa9 <__ctype_b_loc@plt+0x1a7d9>
  41caa5:	mov    DWORD PTR [r13+0x38],ebx
  41caa9:	shl    esi,0x6
  41caac:	test   r12d,r12d
  41caaf:	je     41cab9 <__ctype_b_loc@plt+0x1a7e9>
  41cab1:	or     esi,0x7fff801f
  41cab7:	jmp    41cac3 <__ctype_b_loc@plt+0x1a7f3>
  41cab9:	shl    r15d,0xe
  41cabd:	or     esi,r15d
  41cac0:	or     esi,0x21
  41cac3:	mov    ebp,DWORD PTR [rsp+0x14]
  41cac7:	mov    rax,QWORD PTR [r13+0x18]
  41cacb:	mov    edx,DWORD PTR [rax+0x8]
  41cace:	mov    rdi,r13
  41cad1:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41cad6:	mov    rcx,QWORD PTR [r13+0x0]
  41cada:	mov    rcx,QWORD PTR [rcx+0x28]
  41cade:	movsxd rdx,DWORD PTR [r13+0x30]
  41cae2:	mov    DWORD PTR [rcx+rdx*4-0x4],ebp
  41cae6:	test   r12d,r12d
  41cae9:	jne    41caf3 <__ctype_b_loc@plt+0x1a823>
  41caeb:	mov    rdi,r13
  41caee:	call   417600 <__ctype_b_loc@plt+0x15330>
  41caf3:	inc    ebx
  41caf5:	mov    rdi,r13
  41caf8:	mov    esi,eax
  41cafa:	mov    edx,ebx
  41cafc:	call   41c380 <__ctype_b_loc@plt+0x1a0b0>
  41cb01:	add    rsp,0x28
  41cb05:	pop    rbx
  41cb06:	pop    r12
  41cb08:	pop    r13
  41cb0a:	pop    r14
  41cb0c:	pop    r15
  41cb0e:	pop    rbp
  41cb0f:	ret    
  41cb10:	push   rbp
  41cb11:	push   r15
  41cb13:	push   r14
  41cb15:	push   rbx
  41cb16:	push   rax
  41cb17:	mov    r15,rcx
  41cb1a:	mov    ebx,esi
  41cb1c:	mov    r14,QWORD PTR [rdi+0x30]
  41cb20:	sub    ebx,edx
  41cb22:	mov    eax,DWORD PTR [rcx]
  41cb24:	lea    ecx,[rax-0xd]
  41cb27:	cmp    ecx,0x2
  41cb2a:	jae    41cb7c <__ctype_b_loc@plt+0x1a8ac>
  41cb2c:	cmp    ebx,0xfffffffe
  41cb2f:	mov    ebp,0xffffffff
  41cb34:	cmovg  ebp,ebx
  41cb37:	lea    ecx,[rbp+0x1]
  41cb3a:	cmp    eax,0xe
  41cb3d:	je     41cc48 <__ctype_b_loc@plt+0x1a978>
  41cb43:	cmp    eax,0xd
  41cb46:	jne    41cb6f <__ctype_b_loc@plt+0x1a89f>
  41cb48:	mov    rax,QWORD PTR [r14]
  41cb4b:	mov    rax,QWORD PTR [rax+0x18]
  41cb4f:	movsxd rdx,DWORD PTR [r15+0x8]
  41cb53:	mov    esi,0xff803fff
  41cb58:	and    esi,DWORD PTR [rax+rdx*4]
  41cb5b:	shl    ecx,0xe
  41cb5e:	add    ecx,0x4000
  41cb64:	and    ecx,0x7fc000
  41cb6a:	or     ecx,esi
  41cb6c:	mov    DWORD PTR [rax+rdx*4],ecx
  41cb6f:	test   ebp,ebp
  41cb71:	jg     41ccc8 <__ctype_b_loc@plt+0x1a9f8>
  41cb77:	jmp    41cd08 <__ctype_b_loc@plt+0x1aa38>
  41cb7c:	test   eax,eax
  41cb7e:	je     41cbfa <__ctype_b_loc@plt+0x1a92a>
  41cb80:	mov    rdi,r14
  41cb83:	mov    rsi,r15
  41cb86:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41cb8b:	cmp    DWORD PTR [r15],0xc
  41cb8f:	jne    41cba9 <__ctype_b_loc@plt+0x1a8d9>
  41cb91:	mov    eax,DWORD PTR [r15+0x8]
  41cb95:	test   eax,0x100
  41cb9a:	jne    41cba9 <__ctype_b_loc@plt+0x1a8d9>
  41cb9c:	movzx  ecx,BYTE PTR [r14+0x4a]
  41cba1:	cmp    eax,ecx
  41cba3:	jl     41cba9 <__ctype_b_loc@plt+0x1a8d9>
  41cba5:	dec    DWORD PTR [r14+0x3c]
  41cba9:	mov    edx,DWORD PTR [r14+0x3c]
  41cbad:	lea    ebp,[rdx+0x1]
  41cbb0:	mov    rax,QWORD PTR [r14]
  41cbb3:	movzx  ecx,BYTE PTR [rax+0x73]
  41cbb7:	cmp    edx,ecx
  41cbb9:	jl     41cbe7 <__ctype_b_loc@plt+0x1a917>
  41cbbb:	mov    ecx,ebp
  41cbbd:	cmp    edx,0xf9
  41cbc3:	jl     41cbe1 <__ctype_b_loc@plt+0x1a911>
  41cbc5:	mov    rdi,QWORD PTR [r14+0x18]
  41cbc9:	mov    edx,DWORD PTR [rdi+0x10]
  41cbcc:	lea    rsi,[rip+0xd74b]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41cbd3:	call   413660 <__ctype_b_loc@plt+0x11390>
  41cbd8:	mov    rax,QWORD PTR [r14]
  41cbdb:	mov    ecx,DWORD PTR [r14+0x3c]
  41cbdf:	inc    ecx
  41cbe1:	mov    BYTE PTR [rax+0x73],bpl
  41cbe5:	mov    ebp,ecx
  41cbe7:	mov    DWORD PTR [r14+0x3c],ebp
  41cbeb:	dec    ebp
  41cbed:	mov    rdi,r14
  41cbf0:	mov    rsi,r15
  41cbf3:	mov    edx,ebp
  41cbf5:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41cbfa:	test   ebx,ebx
  41cbfc:	jle    41cd08 <__ctype_b_loc@plt+0x1aa38>
  41cc02:	mov    r15d,DWORD PTR [r14+0x3c]
  41cc06:	lea    ebp,[r15+rbx*1]
  41cc0a:	mov    rcx,QWORD PTR [r14]
  41cc0d:	movzx  eax,BYTE PTR [rcx+0x73]
  41cc11:	cmp    ebp,eax
  41cc13:	jle    41cd13 <__ctype_b_loc@plt+0x1aa43>
  41cc19:	mov    eax,ebp
  41cc1b:	cmp    ebp,0xfa
  41cc21:	jl     41cc3f <__ctype_b_loc@plt+0x1a96f>
  41cc23:	mov    rdi,QWORD PTR [r14+0x18]
  41cc27:	mov    edx,DWORD PTR [rdi+0x10]
  41cc2a:	lea    rsi,[rip+0xd6ed]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41cc31:	call   413660 <__ctype_b_loc@plt+0x11390>
  41cc36:	mov    rcx,QWORD PTR [r14]
  41cc39:	add    ebx,DWORD PTR [r14+0x3c]
  41cc3d:	mov    eax,ebx
  41cc3f:	mov    BYTE PTR [rcx+0x73],bpl
  41cc43:	jmp    41cd15 <__ctype_b_loc@plt+0x1aa45>
  41cc48:	mov    rax,QWORD PTR [r14]
  41cc4b:	mov    rdx,QWORD PTR [rax+0x18]
  41cc4f:	movsxd rsi,DWORD PTR [r15+0x8]
  41cc53:	mov    edi,0x7fffff
  41cc58:	and    edi,DWORD PTR [rdx+rsi*4]
  41cc5b:	shl    ecx,0x17
  41cc5e:	lea    ecx,[rcx+rdi*1]
  41cc61:	add    ecx,0x800000
  41cc67:	mov    DWORD PTR [rdx+rsi*4],ecx
  41cc6a:	movsxd rcx,DWORD PTR [r15+0x8]
  41cc6e:	mov    esi,0xffffc03f
  41cc73:	and    esi,DWORD PTR [rdx+rcx*4]
  41cc76:	mov    edi,DWORD PTR [r14+0x3c]
  41cc7a:	movzx  edi,dil
  41cc7e:	shl    edi,0x6
  41cc81:	or     edi,esi
  41cc83:	mov    DWORD PTR [rdx+rcx*4],edi
  41cc86:	mov    edx,DWORD PTR [r14+0x3c]
  41cc8a:	lea    ebx,[rdx+0x1]
  41cc8d:	movzx  ecx,BYTE PTR [rax+0x73]
  41cc91:	cmp    edx,ecx
  41cc93:	jl     41ccc0 <__ctype_b_loc@plt+0x1a9f0>
  41cc95:	mov    ecx,ebx
  41cc97:	cmp    edx,0xf9
  41cc9d:	jl     41ccbb <__ctype_b_loc@plt+0x1a9eb>
  41cc9f:	mov    rdi,QWORD PTR [r14+0x18]
  41cca3:	mov    edx,DWORD PTR [rdi+0x10]
  41cca6:	lea    rsi,[rip+0xd671]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41ccad:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ccb2:	mov    rax,QWORD PTR [r14]
  41ccb5:	mov    ecx,DWORD PTR [r14+0x3c]
  41ccb9:	inc    ecx
  41ccbb:	mov    BYTE PTR [rax+0x73],bl
  41ccbe:	mov    ebx,ecx
  41ccc0:	mov    DWORD PTR [r14+0x3c],ebx
  41ccc4:	test   ebp,ebp
  41ccc6:	jle    41cd08 <__ctype_b_loc@plt+0x1aa38>
  41ccc8:	mov    ebx,DWORD PTR [r14+0x3c]
  41cccc:	add    ebx,ebp
  41ccce:	mov    rax,QWORD PTR [r14]
  41ccd1:	movzx  ecx,BYTE PTR [rax+0x73]
  41ccd5:	cmp    ebx,ecx
  41ccd7:	jle    41cd04 <__ctype_b_loc@plt+0x1aa34>
  41ccd9:	mov    ecx,ebx
  41ccdb:	cmp    ebx,0xfa
  41cce1:	jl     41ccff <__ctype_b_loc@plt+0x1aa2f>
  41cce3:	mov    rdi,QWORD PTR [r14+0x18]
  41cce7:	mov    edx,DWORD PTR [rdi+0x10]
  41ccea:	lea    rsi,[rip+0xd62d]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41ccf1:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ccf6:	mov    rax,QWORD PTR [r14]
  41ccf9:	add    ebp,DWORD PTR [r14+0x3c]
  41ccfd:	mov    ecx,ebp
  41ccff:	mov    BYTE PTR [rax+0x73],bl
  41cd02:	mov    ebx,ecx
  41cd04:	mov    DWORD PTR [r14+0x3c],ebx
  41cd08:	add    rsp,0x8
  41cd0c:	pop    rbx
  41cd0d:	pop    r14
  41cd0f:	pop    r15
  41cd11:	pop    rbp
  41cd12:	ret    
  41cd13:	mov    eax,ebp
  41cd15:	mov    DWORD PTR [r14+0x3c],eax
  41cd19:	movsxd rax,DWORD PTR [r14+0x30]
  41cd1d:	cmp    eax,DWORD PTR [r14+0x34]
  41cd21:	jle    41cd75 <__ctype_b_loc@plt+0x1aaa5>
  41cd23:	test   eax,eax
  41cd25:	je     41cd6b <__ctype_b_loc@plt+0x1aa9b>
  41cd27:	mov    rcx,QWORD PTR [rcx+0x18]
  41cd2b:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
  41cd2f:	mov    esi,edx
  41cd31:	and    esi,0x3f
  41cd34:	cmp    esi,0x3
  41cd37:	jne    41cd75 <__ctype_b_loc@plt+0x1aaa5>
  41cd39:	mov    esi,edx
  41cd3b:	shr    esi,0x6
  41cd3e:	movzx  esi,sil
  41cd42:	cmp    esi,r15d
  41cd45:	jg     41cd75 <__ctype_b_loc@plt+0x1aaa5>
  41cd47:	mov    esi,edx
  41cd49:	shr    esi,0x17
  41cd4c:	lea    edi,[rsi+0x1]
  41cd4f:	cmp    edi,r15d
  41cd52:	jl     41cd75 <__ctype_b_loc@plt+0x1aaa5>
  41cd54:	dec    ebp
  41cd56:	cmp    ebp,esi
  41cd58:	jle    41cd08 <__ctype_b_loc@plt+0x1aa38>
  41cd5a:	and    edx,0x7fffff
  41cd60:	shl    ebp,0x17
  41cd63:	or     ebp,edx
  41cd65:	mov    DWORD PTR [rcx+rax*4-0x4],ebp
  41cd69:	jmp    41cd08 <__ctype_b_loc@plt+0x1aa38>
  41cd6b:	movzx  eax,BYTE PTR [r14+0x4a]
  41cd70:	cmp    r15d,eax
  41cd73:	jge    41cd08 <__ctype_b_loc@plt+0x1aa38>
  41cd75:	shl    r15d,0x6
  41cd79:	shl    ebp,0x17
  41cd7c:	add    ebp,0xff800000
  41cd82:	or     ebp,r15d
  41cd85:	or     ebp,0x3
  41cd88:	mov    rax,QWORD PTR [r14+0x18]
  41cd8c:	mov    edx,DWORD PTR [rax+0x8]
  41cd8f:	mov    rdi,r14
  41cd92:	mov    esi,ebp
  41cd94:	add    rsp,0x8
  41cd98:	pop    rbx
  41cd99:	pop    r14
  41cd9b:	pop    r15
  41cd9d:	pop    rbp
  41cd9e:	jmp    419020 <__ctype_b_loc@plt+0x16d50>
  41cda3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdad:	nop    DWORD PTR [rax]
  41cdb0:	push   rbp
  41cdb1:	push   r15
  41cdb3:	push   r14
  41cdb5:	push   rbx
  41cdb6:	push   rax
  41cdb7:	mov    rbx,rdx
  41cdba:	mov    r14,rdi
  41cdbd:	mov    eax,DWORD PTR [rsi]
  41cdbf:	add    eax,0xfffffffa
  41cdc2:	cmp    eax,0x3
  41cdc5:	ja     41cfc8 <__ctype_b_loc@plt+0x1acf8>
  41cdcb:	mov    r15,rsi
  41cdce:	lea    rcx,[rip+0xca67]        # 42983c <__ctype_b_loc@plt+0x2756c>
  41cdd5:	movsxd rax,DWORD PTR [rcx+rax*4]
  41cdd9:	add    rax,rcx
  41cddc:	jmp    rax
  41cdde:	cmp    DWORD PTR [rbx],0xc
  41cde1:	jne    41cdfa <__ctype_b_loc@plt+0x1ab2a>
  41cde3:	mov    eax,DWORD PTR [rbx+0x8]
  41cde6:	test   eax,0x100
  41cdeb:	jne    41cdfa <__ctype_b_loc@plt+0x1ab2a>
  41cded:	movzx  ecx,BYTE PTR [r14+0x4a]
  41cdf2:	cmp    eax,ecx
  41cdf4:	jl     41cdfa <__ctype_b_loc@plt+0x1ab2a>
  41cdf6:	dec    DWORD PTR [r14+0x3c]
  41cdfa:	mov    edx,DWORD PTR [r15+0x8]
  41cdfe:	mov    rdi,r14
  41ce01:	mov    rsi,rbx
  41ce04:	add    rsp,0x8
  41ce08:	pop    rbx
  41ce09:	pop    r14
  41ce0b:	pop    r15
  41ce0d:	pop    rbp
  41ce0e:	jmp    418ad0 <__ctype_b_loc@plt+0x16800>
  41ce13:	mov    rdi,r14
  41ce16:	mov    rsi,rbx
  41ce19:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41ce1e:	cmp    DWORD PTR [rbx],0xc
  41ce21:	jne    41ce3f <__ctype_b_loc@plt+0x1ab6f>
  41ce23:	mov    edx,DWORD PTR [rbx+0x8]
  41ce26:	mov    eax,DWORD PTR [rbx+0x10]
  41ce29:	cmp    eax,DWORD PTR [rbx+0x14]
  41ce2c:	je     41cebe <__ctype_b_loc@plt+0x1abee>
  41ce32:	movzx  eax,BYTE PTR [r14+0x4a]
  41ce37:	cmp    edx,eax
  41ce39:	jge    41cfef <__ctype_b_loc@plt+0x1ad1f>
  41ce3f:	mov    rdi,r14
  41ce42:	mov    rsi,rbx
  41ce45:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41ce4a:	cmp    DWORD PTR [rbx],0xc
  41ce4d:	jne    41ce66 <__ctype_b_loc@plt+0x1ab96>
  41ce4f:	mov    eax,DWORD PTR [rbx+0x8]
  41ce52:	test   eax,0x100
  41ce57:	jne    41ce66 <__ctype_b_loc@plt+0x1ab96>
  41ce59:	movzx  ecx,BYTE PTR [r14+0x4a]
  41ce5e:	cmp    eax,ecx
  41ce60:	jl     41ce66 <__ctype_b_loc@plt+0x1ab96>
  41ce62:	dec    DWORD PTR [r14+0x3c]
  41ce66:	mov    edx,DWORD PTR [r14+0x3c]
  41ce6a:	lea    ebp,[rdx+0x1]
  41ce6d:	mov    rax,QWORD PTR [r14]
  41ce70:	movzx  ecx,BYTE PTR [rax+0x73]
  41ce74:	cmp    edx,ecx
  41ce76:	jl     41cea4 <__ctype_b_loc@plt+0x1abd4>
  41ce78:	mov    ecx,ebp
  41ce7a:	cmp    edx,0xf9
  41ce80:	jl     41ce9e <__ctype_b_loc@plt+0x1abce>
  41ce82:	mov    rdi,QWORD PTR [r14+0x18]
  41ce86:	mov    edx,DWORD PTR [rdi+0x10]
  41ce89:	lea    rsi,[rip+0xd48e]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41ce90:	call   413660 <__ctype_b_loc@plt+0x11390>
  41ce95:	mov    rax,QWORD PTR [r14]
  41ce98:	mov    ecx,DWORD PTR [r14+0x3c]
  41ce9c:	inc    ecx
  41ce9e:	mov    BYTE PTR [rax+0x73],bpl
  41cea2:	mov    ebp,ecx
  41cea4:	mov    DWORD PTR [r14+0x3c],ebp
  41cea8:	dec    ebp
  41ceaa:	mov    rdi,r14
  41cead:	mov    rsi,rbx
  41ceb0:	mov    edx,ebp
  41ceb2:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41ceb7:	lea    rbp,[rbx+0x8]
  41cebb:	mov    edx,DWORD PTR [rbp+0x0]
  41cebe:	mov    eax,DWORD PTR [r15+0x8]
  41cec2:	shl    edx,0x6
  41cec5:	shl    eax,0x17
  41cec8:	or     eax,edx
  41ceca:	mov    esi,0x8
  41cecf:	jmp    41cfb7 <__ctype_b_loc@plt+0x1ace7>
  41ced4:	mov    rdi,r14
  41ced7:	mov    rsi,rbx
  41ceda:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41cedf:	cmp    DWORD PTR [rbx],0xc
  41cee2:	jne    41cf00 <__ctype_b_loc@plt+0x1ac30>
  41cee4:	mov    edx,DWORD PTR [rbx+0x8]
  41cee7:	mov    eax,DWORD PTR [rbx+0x10]
  41ceea:	cmp    eax,DWORD PTR [rbx+0x14]
  41ceed:	je     41cf7f <__ctype_b_loc@plt+0x1acaf>
  41cef3:	movzx  eax,BYTE PTR [r14+0x4a]
  41cef8:	cmp    edx,eax
  41cefa:	jge    41d003 <__ctype_b_loc@plt+0x1ad33>
  41cf00:	mov    rdi,r14
  41cf03:	mov    rsi,rbx
  41cf06:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41cf0b:	cmp    DWORD PTR [rbx],0xc
  41cf0e:	jne    41cf27 <__ctype_b_loc@plt+0x1ac57>
  41cf10:	mov    eax,DWORD PTR [rbx+0x8]
  41cf13:	test   eax,0x100
  41cf18:	jne    41cf27 <__ctype_b_loc@plt+0x1ac57>
  41cf1a:	movzx  ecx,BYTE PTR [r14+0x4a]
  41cf1f:	cmp    eax,ecx
  41cf21:	jl     41cf27 <__ctype_b_loc@plt+0x1ac57>
  41cf23:	dec    DWORD PTR [r14+0x3c]
  41cf27:	mov    edx,DWORD PTR [r14+0x3c]
  41cf2b:	lea    ebp,[rdx+0x1]
  41cf2e:	mov    rax,QWORD PTR [r14]
  41cf31:	movzx  ecx,BYTE PTR [rax+0x73]
  41cf35:	cmp    edx,ecx
  41cf37:	jl     41cf65 <__ctype_b_loc@plt+0x1ac95>
  41cf39:	mov    ecx,ebp
  41cf3b:	cmp    edx,0xf9
  41cf41:	jl     41cf5f <__ctype_b_loc@plt+0x1ac8f>
  41cf43:	mov    rdi,QWORD PTR [r14+0x18]
  41cf47:	mov    edx,DWORD PTR [rdi+0x10]
  41cf4a:	lea    rsi,[rip+0xd3cd]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41cf51:	call   413660 <__ctype_b_loc@plt+0x11390>
  41cf56:	mov    rax,QWORD PTR [r14]
  41cf59:	mov    ecx,DWORD PTR [r14+0x3c]
  41cf5d:	inc    ecx
  41cf5f:	mov    BYTE PTR [rax+0x73],bpl
  41cf63:	mov    ebp,ecx
  41cf65:	mov    DWORD PTR [r14+0x3c],ebp
  41cf69:	dec    ebp
  41cf6b:	mov    rdi,r14
  41cf6e:	mov    rsi,rbx
  41cf71:	mov    edx,ebp
  41cf73:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41cf78:	lea    rbp,[rbx+0x8]
  41cf7c:	mov    edx,DWORD PTR [rbp+0x0]
  41cf7f:	mov    eax,DWORD PTR [r15+0x8]
  41cf83:	shl    edx,0x6
  41cf86:	shl    eax,0xe
  41cf89:	or     eax,edx
  41cf8b:	mov    esi,0x7
  41cf90:	jmp    41cfb7 <__ctype_b_loc@plt+0x1ace7>
  41cf92:	mov    rdi,r14
  41cf95:	mov    rsi,rbx
  41cf98:	call   4198f0 <__ctype_b_loc@plt+0x17620>
  41cf9d:	mov    ecx,DWORD PTR [r15+0x8]
  41cfa1:	mov    edx,DWORD PTR [r15+0xc]
  41cfa5:	shl    ecx,0x6
  41cfa8:	shl    edx,0x17
  41cfab:	shl    eax,0xe
  41cfae:	or     eax,ecx
  41cfb0:	or     eax,edx
  41cfb2:	mov    esi,0x9
  41cfb7:	or     esi,eax
  41cfb9:	mov    rax,QWORD PTR [r14+0x18]
  41cfbd:	mov    edx,DWORD PTR [rax+0x8]
  41cfc0:	mov    rdi,r14
  41cfc3:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41cfc8:	cmp    DWORD PTR [rbx],0xc
  41cfcb:	jne    41cfe4 <__ctype_b_loc@plt+0x1ad14>
  41cfcd:	mov    eax,DWORD PTR [rbx+0x8]
  41cfd0:	test   eax,0x100
  41cfd5:	jne    41cfe4 <__ctype_b_loc@plt+0x1ad14>
  41cfd7:	movzx  ecx,BYTE PTR [r14+0x4a]
  41cfdc:	cmp    eax,ecx
  41cfde:	jl     41cfe4 <__ctype_b_loc@plt+0x1ad14>
  41cfe0:	dec    DWORD PTR [r14+0x3c]
  41cfe4:	add    rsp,0x8
  41cfe8:	pop    rbx
  41cfe9:	pop    r14
  41cfeb:	pop    r15
  41cfed:	pop    rbp
  41cfee:	ret    
  41cfef:	lea    rbp,[rbx+0x8]
  41cff3:	mov    rdi,r14
  41cff6:	mov    rsi,rbx
  41cff9:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41cffe:	jmp    41cebb <__ctype_b_loc@plt+0x1abeb>
  41d003:	lea    rbp,[rbx+0x8]
  41d007:	mov    rdi,r14
  41d00a:	mov    rsi,rbx
  41d00d:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41d012:	jmp    41cf7c <__ctype_b_loc@plt+0x1acac>
  41d017:	nop    WORD PTR [rax+rax*1+0x0]
  41d020:	push   rbp
  41d021:	push   r15
  41d023:	push   r14
  41d025:	push   r13
  41d027:	push   r12
  41d029:	push   rbx
  41d02a:	sub    rsp,0x48
  41d02e:	mov    r12d,edx
  41d031:	mov    rbp,rsi
  41d034:	mov    rbx,rdi
  41d037:	mov    eax,DWORD PTR [rsi+0x8]
  41d03a:	add    eax,0xfffffffa
  41d03d:	cmp    eax,0x4
  41d040:	jb     41d054 <__ctype_b_loc@plt+0x1ad84>
  41d042:	mov    edx,DWORD PTR [rbx+0x10]
  41d045:	lea    rsi,[rip+0xd4ca]        # 42a516 <__ctype_b_loc@plt+0x28246>
  41d04c:	mov    rdi,rbx
  41d04f:	call   413660 <__ctype_b_loc@plt+0x11390>
  41d054:	lea    r15,[rbp+0x8]
  41d058:	mov    eax,DWORD PTR [rbx+0x10]
  41d05b:	cmp    eax,0x3d
  41d05e:	je     41d0e7 <__ctype_b_loc@plt+0x1ae17>
  41d064:	cmp    eax,0x2c
  41d067:	jne    41d092 <__ctype_b_loc@plt+0x1adc2>
  41d069:	mov    eax,DWORD PTR [rbx+0x4]
  41d06c:	mov    ecx,DWORD PTR [rbx+0x20]
  41d06f:	mov    DWORD PTR [rbx+0x8],eax
  41d072:	cmp    ecx,0x11f
  41d078:	jne    41d2e2 <__ctype_b_loc@plt+0x1b012>
  41d07e:	lea    rsi,[rbx+0x18]
  41d082:	mov    rdi,rbx
  41d085:	call   411660 <__ctype_b_loc@plt+0xf390>
  41d08a:	mov    DWORD PTR [rbx+0x10],eax
  41d08d:	jmp    41d2f6 <__ctype_b_loc@plt+0x1b026>
  41d092:	mov    rbp,QWORD PTR [rbx+0x38]
  41d096:	call   4022d0 <__ctype_b_loc@plt>
  41d09b:	mov    rax,QWORD PTR [rax]
  41d09e:	movzx  eax,WORD PTR [rax+0x7a]
  41d0a2:	test   al,0x2
  41d0a4:	lea    rax,[rip+0xd1b0]        # 42a25b <__ctype_b_loc@plt+0x27f8b>
  41d0ab:	lea    rsi,[rip+0xd1a0]        # 42a252 <__ctype_b_loc@plt+0x27f82>
  41d0b2:	cmove  rsi,rax
  41d0b6:	mov    rdi,rbp
  41d0b9:	mov    edx,0x3d
  41d0be:	xor    eax,eax
  41d0c0:	call   404800 <__ctype_b_loc@plt+0x2530>
  41d0c5:	lea    rsi,[rip+0xd3c9]        # 42a495 <__ctype_b_loc@plt+0x281c5>
  41d0cc:	mov    rdi,rbp
  41d0cf:	mov    rdx,rax
  41d0d2:	xor    eax,eax
  41d0d4:	call   404800 <__ctype_b_loc@plt+0x2530>
  41d0d9:	mov    edx,DWORD PTR [rbx+0x10]
  41d0dc:	mov    rdi,rbx
  41d0df:	mov    rsi,rax
  41d0e2:	call   413660 <__ctype_b_loc@plt+0x11390>
  41d0e7:	mov    DWORD PTR [rsp+0x2c],r12d
  41d0ec:	mov    QWORD PTR [rsp+0x30],r15
  41d0f1:	mov    eax,DWORD PTR [rbx+0x4]
  41d0f4:	mov    ecx,DWORD PTR [rbx+0x20]
  41d0f7:	mov    DWORD PTR [rbx+0x8],eax
  41d0fa:	lea    r12,[rbx+0x20]
  41d0fe:	cmp    ecx,0x11f
  41d104:	jne    41d117 <__ctype_b_loc@plt+0x1ae47>
  41d106:	lea    rsi,[rbx+0x18]
  41d10a:	mov    rdi,rbx
  41d10d:	call   411660 <__ctype_b_loc@plt+0xf390>
  41d112:	mov    DWORD PTR [rbx+0x10],eax
  41d115:	jmp    41d129 <__ctype_b_loc@plt+0x1ae59>
  41d117:	vmovups xmm0,XMMWORD PTR [r12]
  41d11d:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41d122:	mov    DWORD PTR [rbx+0x20],0x11f
  41d129:	lea    rsi,[rsp+0x8]
  41d12e:	mov    rdi,rbx
  41d131:	xor    edx,edx
  41d133:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41d138:	mov    ebp,0x1
  41d13d:	cmp    DWORD PTR [rbx+0x10],0x2c
  41d141:	jne    41d267 <__ctype_b_loc@plt+0x1af97>
  41d147:	lea    rax,[rbx+0x10]
  41d14b:	mov    QWORD PTR [rsp+0x40],rax
  41d150:	lea    rax,[rbx+0x18]
  41d154:	mov    QWORD PTR [rsp+0x38],rax
  41d159:	mov    ebp,0x1
  41d15e:	lea    r13,[rsp+0x8]
  41d163:	jmp    41d1a5 <__ctype_b_loc@plt+0x1aed5>
  41d165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d16f:	nop
  41d170:	mov    BYTE PTR [rax+0x73],r14b
  41d174:	mov    r14d,ecx
  41d177:	mov    DWORD PTR [r15+0x3c],r14d
  41d17b:	dec    r14d
  41d17e:	mov    rdi,r15
  41d181:	mov    rsi,r13
  41d184:	mov    edx,r14d
  41d187:	call   418ad0 <__ctype_b_loc@plt+0x16800>
  41d18c:	mov    rdi,rbx
  41d18f:	mov    rsi,r13
  41d192:	xor    edx,edx
  41d194:	call   4178c0 <__ctype_b_loc@plt+0x155f0>
  41d199:	inc    ebp
  41d19b:	cmp    DWORD PTR [rbx+0x10],0x2c
  41d19f:	jne    41d267 <__ctype_b_loc@plt+0x1af97>
  41d1a5:	mov    eax,DWORD PTR [rbx+0x4]
  41d1a8:	mov    ecx,DWORD PTR [rbx+0x20]
  41d1ab:	mov    DWORD PTR [rbx+0x8],eax
  41d1ae:	cmp    ecx,0x11f
  41d1b4:	jne    41d1d0 <__ctype_b_loc@plt+0x1af00>
  41d1b6:	mov    rdi,rbx
  41d1b9:	mov    rsi,QWORD PTR [rsp+0x38]
  41d1be:	call   411660 <__ctype_b_loc@plt+0xf390>
  41d1c3:	mov    DWORD PTR [rbx+0x10],eax
  41d1c6:	jmp    41d1e7 <__ctype_b_loc@plt+0x1af17>
  41d1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d1d0:	vmovups xmm0,XMMWORD PTR [r12]
  41d1d6:	mov    rax,QWORD PTR [rsp+0x40]
  41d1db:	vmovups XMMWORD PTR [rax],xmm0
  41d1df:	mov    DWORD PTR [r12],0x11f
  41d1e7:	mov    r15,QWORD PTR [rbx+0x30]
  41d1eb:	mov    rdi,r15
  41d1ee:	mov    rsi,r13
  41d1f1:	call   418a00 <__ctype_b_loc@plt+0x16730>
  41d1f6:	cmp    DWORD PTR [rsp+0x8],0xc
  41d1fb:	jne    41d220 <__ctype_b_loc@plt+0x1af50>
  41d1fd:	mov    eax,DWORD PTR [rsp+0x10]
  41d201:	test   eax,0x100
  41d206:	jne    41d220 <__ctype_b_loc@plt+0x1af50>
  41d208:	movzx  ecx,BYTE PTR [r15+0x4a]
  41d20d:	cmp    eax,ecx
  41d20f:	jl     41d220 <__ctype_b_loc@plt+0x1af50>
  41d211:	dec    DWORD PTR [r15+0x3c]
  41d215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d21f:	nop
  41d220:	mov    edx,DWORD PTR [r15+0x3c]
  41d224:	lea    r14d,[rdx+0x1]
  41d228:	mov    rax,QWORD PTR [r15]
  41d22b:	movzx  ecx,BYTE PTR [rax+0x73]
  41d22f:	cmp    edx,ecx
  41d231:	jl     41d177 <__ctype_b_loc@plt+0x1aea7>
  41d237:	mov    ecx,r14d
  41d23a:	cmp    edx,0xf9
  41d240:	jl     41d170 <__ctype_b_loc@plt+0x1aea0>
  41d246:	mov    rdi,QWORD PTR [r15+0x18]
  41d24a:	mov    edx,DWORD PTR [rdi+0x10]
  41d24d:	lea    rsi,[rip+0xd0ca]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41d254:	call   413660 <__ctype_b_loc@plt+0x11390>
  41d259:	mov    rax,QWORD PTR [r15]
  41d25c:	mov    ecx,DWORD PTR [r15+0x3c]
  41d260:	inc    ecx
  41d262:	jmp    41d170 <__ctype_b_loc@plt+0x1aea0>
  41d267:	mov    r14d,DWORD PTR [rsp+0x2c]
  41d26c:	cmp    ebp,r14d
  41d26f:	jne    41d2b2 <__ctype_b_loc@plt+0x1afe2>
  41d271:	mov    rdi,QWORD PTR [rbx+0x30]
  41d275:	mov    eax,DWORD PTR [rsp+0x8]
  41d279:	cmp    eax,0xe
  41d27c:	mov    r15,QWORD PTR [rsp+0x30]
  41d281:	je     41d406 <__ctype_b_loc@plt+0x1b136>
  41d287:	cmp    eax,0xd
  41d28a:	jne    41d486 <__ctype_b_loc@plt+0x1b1b6>
  41d290:	mov    DWORD PTR [rsp+0x8],0xc
  41d298:	mov    rax,QWORD PTR [rdi]
  41d29b:	mov    rax,QWORD PTR [rax+0x18]
  41d29f:	movsxd rcx,DWORD PTR [rsp+0x10]
  41d2a4:	mov    eax,DWORD PTR [rax+rcx*4]
  41d2a7:	shr    eax,0x6
  41d2aa:	movzx  eax,al
  41d2ad:	jmp    41d482 <__ctype_b_loc@plt+0x1b1b2>
  41d2b2:	lea    rcx,[rsp+0x8]
  41d2b7:	mov    rdi,rbx
  41d2ba:	mov    esi,r14d
  41d2bd:	mov    edx,ebp
  41d2bf:	call   41cb10 <__ctype_b_loc@plt+0x1a840>
  41d2c4:	cmp    ebp,r14d
  41d2c7:	mov    r15,QWORD PTR [rsp+0x30]
  41d2cc:	jle    41d468 <__ctype_b_loc@plt+0x1b198>
  41d2d2:	mov    rax,QWORD PTR [rbx+0x30]
  41d2d6:	sub    r14d,ebp
  41d2d9:	add    DWORD PTR [rax+0x3c],r14d
  41d2dd:	jmp    41d468 <__ctype_b_loc@plt+0x1b198>
  41d2e2:	lea    rax,[rbx+0x20]
  41d2e6:	vmovups xmm0,XMMWORD PTR [rax]
  41d2ea:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41d2ef:	mov    DWORD PTR [rbx+0x20],0x11f
  41d2f6:	mov    QWORD PTR [rsp+0x8],rbp
  41d2fb:	lea    rsi,[rsp+0x10]
  41d300:	mov    rdi,rbx
  41d303:	call   41aa80 <__ctype_b_loc@plt+0x187b0>
  41d308:	cmp    DWORD PTR [rsp+0x10],0x6
  41d30d:	jne    41d3c8 <__ctype_b_loc@plt+0x1b0f8>
  41d313:	mov    r14,QWORD PTR [rbx+0x30]
  41d317:	mov    eax,DWORD PTR [r14+0x3c]
  41d31b:	xor    ecx,ecx
  41d31d:	cmp    DWORD PTR [rbp+0x8],0x9
  41d321:	je     41d33f <__ctype_b_loc@plt+0x1b06f>
  41d323:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d32d:	nop    DWORD PTR [rax]
  41d330:	mov    rbp,QWORD PTR [rbp+0x0]
  41d334:	test   rbp,rbp
  41d337:	je     41d363 <__ctype_b_loc@plt+0x1b093>
  41d339:	cmp    DWORD PTR [rbp+0x8],0x9
  41d33d:	jne    41d330 <__ctype_b_loc@plt+0x1b060>
  41d33f:	mov    edx,DWORD PTR [rsp+0x18]
  41d343:	cmp    DWORD PTR [rbp+0x10],edx
  41d346:	jne    41d354 <__ctype_b_loc@plt+0x1b084>
  41d348:	mov    DWORD PTR [rbp+0x10],eax
  41d34b:	mov    ecx,0x1
  41d350:	mov    edx,DWORD PTR [rsp+0x18]
  41d354:	cmp    DWORD PTR [rbp+0x14],edx
  41d357:	jne    41d330 <__ctype_b_loc@plt+0x1b060>
  41d359:	mov    DWORD PTR [rbp+0x14],eax
  41d35c:	mov    ecx,0x1
  41d361:	jmp    41d330 <__ctype_b_loc@plt+0x1b060>
  41d363:	test   ecx,ecx
  41d365:	je     41d3c8 <__ctype_b_loc@plt+0x1b0f8>
  41d367:	mov    eax,DWORD PTR [r14+0x3c]
  41d36b:	mov    esi,DWORD PTR [rsp+0x18]
  41d36f:	shl    eax,0x6
  41d372:	shl    esi,0x17
  41d375:	or     esi,eax
  41d377:	mov    rax,QWORD PTR [r14+0x18]
  41d37b:	mov    edx,DWORD PTR [rax+0x8]
  41d37e:	mov    rdi,r14
  41d381:	call   419020 <__ctype_b_loc@plt+0x16d50>
  41d386:	mov    edx,DWORD PTR [r14+0x3c]
  41d38a:	lea    ebp,[rdx+0x1]
  41d38d:	mov    rax,QWORD PTR [r14]
  41d390:	movzx  ecx,BYTE PTR [rax+0x73]
  41d394:	cmp    edx,ecx
  41d396:	jl     41d3c4 <__ctype_b_loc@plt+0x1b0f4>
  41d398:	mov    ecx,ebp
  41d39a:	cmp    edx,0xf9
  41d3a0:	jl     41d3be <__ctype_b_loc@plt+0x1b0ee>
  41d3a2:	mov    rdi,QWORD PTR [r14+0x18]
  41d3a6:	mov    edx,DWORD PTR [rdi+0x10]
  41d3a9:	lea    rsi,[rip+0xcf6e]        # 42a31e <__ctype_b_loc@plt+0x2804e>
  41d3b0:	call   413660 <__ctype_b_loc@plt+0x11390>
  41d3b5:	mov    rax,QWORD PTR [r14]
  41d3b8:	mov    ecx,DWORD PTR [r14+0x3c]
  41d3bc:	inc    ecx
  41d3be:	mov    BYTE PTR [rax+0x73],bpl
  41d3c2:	mov    ebp,ecx
  41d3c4:	mov    DWORD PTR [r14+0x3c],ebp
  41d3c8:	mov    rax,QWORD PTR [rbx+0x38]
  41d3cc:	movzx  eax,WORD PTR [rax+0x60]
  41d3d0:	mov    ecx,0xc8
  41d3d5:	sub    ecx,eax
  41d3d7:	cmp    ecx,r12d
  41d3da:	jge    41d455 <__ctype_b_loc@plt+0x1b185>
  41d3dc:	mov    rbp,QWORD PTR [rbx+0x30]
  41d3e0:	mov    rax,QWORD PTR [rbp+0x0]
  41d3e4:	mov    rdi,QWORD PTR [rbp+0x20]
  41d3e8:	mov    edx,DWORD PTR [rax+0x60]
  41d3eb:	test   edx,edx
  41d3ed:	je     41d42d <__ctype_b_loc@plt+0x1b15d>
  41d3ef:	lea    rsi,[rip+0xcfaf]        # 42a3a5 <__ctype_b_loc@plt+0x280d5>
  41d3f6:	lea    r8,[rip+0xd126]        # 42a523 <__ctype_b_loc@plt+0x28253>
  41d3fd:	xor    eax,eax
  41d3ff:	call   404800 <__ctype_b_loc@plt+0x2530>
  41d404:	jmp    41d447 <__ctype_b_loc@plt+0x1b177>
  41d406:	mov    rax,QWORD PTR [rdi]
  41d409:	mov    rax,QWORD PTR [rax+0x18]
  41d40d:	movsxd rcx,DWORD PTR [rsp+0x10]
  41d412:	mov    edx,0x7fffff
  41d417:	and    edx,DWORD PTR [rax+rcx*4]
  41d41a:	or     edx,0x1000000
  41d420:	mov    DWORD PTR [rax+rcx*4],edx
  41d423:	mov    DWORD PTR [rsp+0x8],0xb
  41d42b:	jmp    41d486 <__ctype_b_loc@plt+0x1b1b6>
  41d42d:	lea    rsi,[rip+0xcf4f]        # 42a383 <__ctype_b_loc@plt+0x280b3>
  41d434:	lea    rax,[rip+0xd0e8]        # 42a523 <__ctype_b_loc@plt+0x28253>
  41d43b:	mov    edx,ecx
  41d43d:	mov    rcx,rax
  41d440:	xor    eax,eax
  41d442:	call   404800 <__ctype_b_loc@plt+0x2530>
  41d447:	mov    rsi,rax
  41d44a:	mov    rdi,QWORD PTR [rbp+0x18]
  41d44e:	xor    edx,edx
  41d450:	call   413660 <__ctype_b_loc@plt+0x11390>
  41d455:	inc    r12d
  41d458:	lea    rsi,[rsp+0x8]
  41d45d:	mov    rdi,rbx
  41d460:	mov    edx,r12d
  41d463:	call   41d020 <__ctype_b_loc@plt+0x1ad50>
  41d468:	mov    rdi,QWORD PTR [rbx+0x30]
  41d46c:	mov    eax,DWORD PTR [rdi+0x3c]
  41d46f:	dec    eax
  41d471:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41d47a:	mov    DWORD PTR [rsp+0x8],0xc
  41d482:	mov    DWORD PTR [rsp+0x10],eax
  41d486:	lea    rdx,[rsp+0x8]
  41d48b:	mov    rsi,r15
  41d48e:	call   41cdb0 <__ctype_b_loc@plt+0x1aae0>
  41d493:	add    rsp,0x48
  41d497:	pop    rbx
  41d498:	pop    r12
  41d49a:	pop    r13
  41d49c:	pop    r14
  41d49e:	pop    r15
  41d4a0:	pop    rbp
  41d4a1:	ret    
  41d4a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4ac:	nop    DWORD PTR [rax+0x0]
  41d4b0:	push   rbp
  41d4b1:	push   r14
  41d4b3:	push   rbx
  41d4b4:	sub    rsp,0x20
  41d4b8:	test   esi,esi
  41d4ba:	jle    41d4e2 <__ctype_b_loc@plt+0x1b212>
  41d4bc:	mov    rax,QWORD PTR [rdi+0x18]
  41d4c0:	movsxd rcx,esi
  41d4c3:	shl    rcx,0x4
  41d4c7:	add    rcx,rax
  41d4ca:	add    rcx,0xfffffffffffffff0
  41d4ce:	cmp    rcx,QWORD PTR [rdi+0x10]
  41d4d2:	lea    rax,[rip+0xc63f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41d4d9:	cmovb  rax,rcx
  41d4dd:	jmp    41d587 <__ctype_b_loc@plt+0x1b2b7>
  41d4e2:	cmp    esi,0xffffd8f1
  41d4e8:	jl     41d4fa <__ctype_b_loc@plt+0x1b22a>
  41d4ea:	movsxd rax,esi
  41d4ed:	shl    rax,0x4
  41d4f1:	add    rax,QWORD PTR [rdi+0x10]
  41d4f5:	jmp    41d587 <__ctype_b_loc@plt+0x1b2b7>
  41d4fa:	cmp    esi,0xffffd8ee
  41d500:	je     41d51d <__ctype_b_loc@plt+0x1b24d>
  41d502:	cmp    esi,0xffffd8ef
  41d508:	je     41d526 <__ctype_b_loc@plt+0x1b256>
  41d50a:	cmp    esi,0xffffd8f0
  41d510:	jne    41d54f <__ctype_b_loc@plt+0x1b27f>
  41d512:	mov    eax,0xa0
  41d517:	add    rax,QWORD PTR [rdi+0x20]
  41d51b:	jmp    41d587 <__ctype_b_loc@plt+0x1b2b7>
  41d51d:	add    rdi,0x78
  41d521:	mov    rax,rdi
  41d524:	jmp    41d587 <__ctype_b_loc@plt+0x1b2b7>
  41d526:	mov    rax,QWORD PTR [rdi+0x28]
  41d52a:	mov    rax,QWORD PTR [rax+0x8]
  41d52e:	mov    rcx,QWORD PTR [rax]
  41d531:	lea    rax,[rdi+0x88]
  41d538:	mov    rcx,QWORD PTR [rcx+0x18]
  41d53c:	mov    QWORD PTR [rdi+0x88],rcx
  41d543:	mov    DWORD PTR [rdi+0x90],0x5
  41d54d:	jmp    41d587 <__ctype_b_loc@plt+0x1b2b7>
  41d54f:	mov    rax,QWORD PTR [rdi+0x28]
  41d553:	mov    rax,QWORD PTR [rax+0x8]
  41d557:	mov    rax,QWORD PTR [rax]
  41d55a:	mov    ecx,0xffffd8ee
  41d55f:	sub    ecx,esi
  41d561:	movzx  edx,BYTE PTR [rax+0xb]
  41d565:	cmp    ecx,edx
  41d567:	jle    41d572 <__ctype_b_loc@plt+0x1b2a2>
  41d569:	lea    rax,[rip+0xc5a8]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41d570:	jmp    41d587 <__ctype_b_loc@plt+0x1b2b7>
  41d572:	mov    ecx,0xffffd8ed
  41d577:	sub    ecx,esi
  41d579:	movsxd rcx,ecx
  41d57c:	shl    rcx,0x4
  41d580:	add    rax,rcx
  41d583:	add    rax,0x28
  41d587:	mov    ecx,DWORD PTR [rax+0x8]
  41d58a:	vxorpd xmm0,xmm0,xmm0
  41d58e:	cmp    ecx,0x4
  41d591:	je     41d5a9 <__ctype_b_loc@plt+0x1b2d9>
  41d593:	cmp    ecx,0x3
  41d596:	jne    41d632 <__ctype_b_loc@plt+0x1b362>
  41d59c:	vmovsd xmm1,QWORD PTR [rax]
  41d5a0:	vmovapd xmm0,xmm1
  41d5a4:	jmp    41d632 <__ctype_b_loc@plt+0x1b362>
  41d5a9:	mov    r14,QWORD PTR [rax]
  41d5ac:	add    r14,0x18
  41d5b0:	lea    rsi,[rsp+0x8]
  41d5b5:	mov    rdi,r14
  41d5b8:	call   4020b0 <strtod@plt>
  41d5bd:	mov    rbx,QWORD PTR [rsp+0x8]
  41d5c2:	cmp    rbx,r14
  41d5c5:	je     41d62e <__ctype_b_loc@plt+0x1b35e>
  41d5c7:	mov    bpl,BYTE PTR [rbx]
  41d5ca:	mov    eax,ebp
  41d5cc:	or     al,0x20
  41d5ce:	cmp    al,0x78
  41d5d0:	jne    41d60c <__ctype_b_loc@plt+0x1b33c>
  41d5d2:	lea    rsi,[rsp+0x8]
  41d5d7:	mov    rdi,r14
  41d5da:	mov    edx,0x10
  41d5df:	call   402250 <strtoul@plt>
  41d5e4:	vmovq  xmm0,rax
  41d5e9:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xc67f]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  41d5f1:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xc687]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  41d5f9:	vhaddpd xmm1,xmm0,xmm0
  41d5fd:	mov    rbx,QWORD PTR [rsp+0x8]
  41d602:	mov    bpl,BYTE PTR [rbx]
  41d605:	test   bpl,bpl
  41d608:	jne    41d615 <__ctype_b_loc@plt+0x1b345>
  41d60a:	jmp    41d5a0 <__ctype_b_loc@plt+0x1b2d0>
  41d60c:	vmovapd xmm1,xmm0
  41d610:	test   bpl,bpl
  41d613:	je     41d5a0 <__ctype_b_loc@plt+0x1b2d0>
  41d615:	vmovapd XMMWORD PTR [rsp+0x10],xmm1
  41d61b:	call   4022d0 <__ctype_b_loc@plt>
  41d620:	mov    rax,QWORD PTR [rax]
  41d623:	movzx  ecx,bpl
  41d627:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41d62c:	jne    41d63b <__ctype_b_loc@plt+0x1b36b>
  41d62e:	vxorpd xmm0,xmm0,xmm0
  41d632:	add    rsp,0x20
  41d636:	pop    rbx
  41d637:	pop    r14
  41d639:	pop    rbp
  41d63a:	ret    
  41d63b:	inc    rbx
  41d63e:	vxorpd xmm0,xmm0,xmm0
  41d642:	vmovapd xmm1,XMMWORD PTR [rsp+0x10]
  41d648:	nop    DWORD PTR [rax+rax*1+0x0]
  41d650:	movzx  ecx,BYTE PTR [rbx]
  41d653:	inc    rbx
  41d656:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41d65b:	jne    41d650 <__ctype_b_loc@plt+0x1b380>
  41d65d:	test   cl,cl
  41d65f:	jne    41d632 <__ctype_b_loc@plt+0x1b362>
  41d661:	jmp    41d5a0 <__ctype_b_loc@plt+0x1b2d0>
  41d666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d670:	push   r15
  41d672:	push   r14
  41d674:	push   r12
  41d676:	push   rbx
  41d677:	push   rax
  41d678:	mov    r14,rsi
  41d67b:	mov    rbx,rdi
  41d67e:	mov    rax,QWORD PTR [rdi+0x20]
  41d682:	mov    rcx,QWORD PTR [rax+0x78]
  41d686:	cmp    rcx,QWORD PTR [rax+0x70]
  41d68a:	jb     41d694 <__ctype_b_loc@plt+0x1b3c4>
  41d68c:	mov    rdi,rbx
  41d68f:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41d694:	mov    rax,QWORD PTR [rbx+0x28]
  41d698:	cmp    rax,QWORD PTR [rbx+0x50]
  41d69c:	je     41d6ab <__ctype_b_loc@plt+0x1b3db>
  41d69e:	mov    rax,QWORD PTR [rax+0x8]
  41d6a2:	mov    rax,QWORD PTR [rax]
  41d6a5:	add    rax,0x18
  41d6a9:	jmp    41d6af <__ctype_b_loc@plt+0x1b3df>
  41d6ab:	lea    rax,[rbx+0x78]
  41d6af:	mov    r15,QWORD PTR [rax]
  41d6b2:	cmp    r14,0xffffffffffffffd6
  41d6b6:	jb     41d6c9 <__ctype_b_loc@plt+0x1b3f9>
  41d6b8:	lea    rsi,[rip+0xc6fa]        # 429db9 <__ctype_b_loc@plt+0x27ae9>
  41d6bf:	mov    rdi,rbx
  41d6c2:	xor    eax,eax
  41d6c4:	call   404090 <__ctype_b_loc@plt+0x1dc0>
  41d6c9:	mov    r12,QWORD PTR [rbx+0x20]
  41d6cd:	mov    rdi,QWORD PTR [r12+0x18]
  41d6d2:	lea    rcx,[r14+0x28]
  41d6d6:	xor    esi,esi
  41d6d8:	xor    edx,edx
  41d6da:	call   QWORD PTR [r12+0x10]
  41d6df:	mov    rcx,r14
  41d6e2:	add    rcx,0x28
  41d6e6:	je     41d6ed <__ctype_b_loc@plt+0x1b41d>
  41d6e8:	test   rax,rax
  41d6eb:	je     41d755 <__ctype_b_loc@plt+0x1b485>
  41d6ed:	add    QWORD PTR [r12+0x78],rcx
  41d6f2:	mov    rcx,QWORD PTR [rbx+0x20]
  41d6f6:	mov    cl,BYTE PTR [rcx+0x20]
  41d6f9:	and    cl,0x3
  41d6fc:	mov    BYTE PTR [rax+0x9],cl
  41d6ff:	mov    BYTE PTR [rax+0x8],0x7
  41d703:	mov    QWORD PTR [rax+0x20],r14
  41d707:	mov    QWORD PTR [rax+0x10],0x0
  41d70f:	mov    QWORD PTR [rax+0x18],r15
  41d713:	mov    rcx,QWORD PTR [rbx+0x20]
  41d717:	mov    rcx,QWORD PTR [rcx+0xb0]
  41d71e:	mov    rcx,QWORD PTR [rcx]
  41d721:	mov    QWORD PTR [rax],rcx
  41d724:	mov    rcx,QWORD PTR [rbx+0x20]
  41d728:	mov    rcx,QWORD PTR [rcx+0xb0]
  41d72f:	mov    QWORD PTR [rcx],rax
  41d732:	mov    rcx,QWORD PTR [rbx+0x10]
  41d736:	mov    QWORD PTR [rcx],rax
  41d739:	mov    DWORD PTR [rcx+0x8],0x7
  41d740:	add    QWORD PTR [rbx+0x10],0x10
  41d745:	add    rax,0x28
  41d749:	add    rsp,0x8
  41d74d:	pop    rbx
  41d74e:	pop    r12
  41d750:	pop    r14
  41d752:	pop    r15
  41d754:	ret    
  41d755:	mov    rdi,QWORD PTR [rbx+0xa8]
  41d75c:	test   rdi,rdi
  41d75f:	jne    41d797 <__ctype_b_loc@plt+0x1b4c7>
  41d761:	mov    BYTE PTR [rbx+0xa],0x4
  41d765:	mov    rax,QWORD PTR [rbx+0x20]
  41d769:	cmp    QWORD PTR [rax+0x98],0x0
  41d771:	je     41d78d <__ctype_b_loc@plt+0x1b4bd>
  41d773:	mov    rdi,rbx
  41d776:	mov    esi,0x4
  41d77b:	call   403cd0 <__ctype_b_loc@plt+0x1a00>
  41d780:	mov    rax,QWORD PTR [rbx+0x20]
  41d784:	mov    rdi,rbx
  41d787:	call   QWORD PTR [rax+0x98]
  41d78d:	mov    edi,0x1
  41d792:	call   402280 <exit@plt>
  41d797:	mov    DWORD PTR [rdi+0xd0],0x4
  41d7a1:	add    rdi,0x8
  41d7a5:	mov    esi,0x1
  41d7aa:	call   402230 <longjmp@plt>
  41d7af:	nop
  41d7b0:	push   rbp
  41d7b1:	push   r15
  41d7b3:	push   r14
  41d7b5:	push   r13
  41d7b7:	push   r12
  41d7b9:	push   rbx
  41d7ba:	sub    rsp,0x2048
  41d7c1:	mov    r12,rdi
  41d7c4:	mov    rax,QWORD PTR [rdi+0x10]
  41d7c8:	mov    rbx,QWORD PTR [rdi+0x18]
  41d7cc:	lea    rcx,[rbx+0x10]
  41d7d0:	xor    r13d,r13d
  41d7d3:	lea    rdx,[rip+0xc8c1]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  41d7da:	mov    QWORD PTR [rsp+0x10],rdx
  41d7df:	cmp    rcx,rax
  41d7e2:	jae    41d962 <__ctype_b_loc@plt+0x1b692>
  41d7e8:	lea    r15,[rip+0xc329]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41d7ef:	cmp    rcx,r15
  41d7f2:	je     41d962 <__ctype_b_loc@plt+0x1b692>
  41d7f8:	movsxd rdx,DWORD PTR [rbx+0x18]
  41d7fc:	test   rdx,rdx
  41d7ff:	jle    41d88e <__ctype_b_loc@plt+0x1b5be>
  41d805:	cmp    edx,0x4
  41d808:	je     41d87e <__ctype_b_loc@plt+0x1b5ae>
  41d80a:	cmp    edx,0x3
  41d80d:	jne    41d896 <__ctype_b_loc@plt+0x1b5c6>
  41d813:	vmovsd xmm0,QWORD PTR [rbx+0x10]
  41d818:	lea    rsi,[rip+0xc602]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41d81f:	lea    rbp,[rsp+0x30]
  41d824:	mov    rdi,rbp
  41d827:	mov    al,0x1
  41d829:	call   402270 <sprintf@plt>
  41d82e:	mov    rdi,rbp
  41d831:	call   4020e0 <strlen@plt>
  41d836:	mov    rdi,r12
  41d839:	mov    rsi,rbp
  41d83c:	mov    rdx,rax
  41d83f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41d844:	mov    QWORD PTR [rbx+0x10],rax
  41d848:	mov    DWORD PTR [rbx+0x18],0x4
  41d84f:	mov    rax,QWORD PTR [r12+0x20]
  41d854:	mov    rcx,QWORD PTR [rax+0x78]
  41d858:	cmp    rcx,QWORD PTR [rax+0x70]
  41d85c:	jb     41d866 <__ctype_b_loc@plt+0x1b596>
  41d85e:	mov    rdi,r12
  41d861:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41d866:	mov    rax,QWORD PTR [r12+0x10]
  41d86b:	mov    rbx,QWORD PTR [r12+0x18]
  41d870:	lea    rcx,[rbx+0x10]
  41d874:	cmp    rcx,rax
  41d877:	cmovb  r15,rcx
  41d87b:	mov    rcx,r15
  41d87e:	mov    rcx,QWORD PTR [rcx]
  41d881:	mov    r13,QWORD PTR [rcx+0x10]
  41d885:	add    rcx,0x18
  41d889:	jmp    41d95d <__ctype_b_loc@plt+0x1b68d>
  41d88e:	xor    r13d,r13d
  41d891:	jmp    41d962 <__ctype_b_loc@plt+0x1b692>
  41d896:	lea    rax,[rip+0x12043]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41d89d:	mov    rcx,QWORD PTR [rax+rdx*8]
  41d8a1:	lea    rsi,[rip+0xc91a]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41d8a8:	lea    rdx,[rip+0xc9ba]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  41d8af:	mov    rdi,r12
  41d8b2:	xor    eax,eax
  41d8b4:	call   410460 <__ctype_b_loc@plt+0xe190>
  41d8b9:	mov    rbx,rax
  41d8bc:	mov    rax,QWORD PTR [r12+0x28]
  41d8c1:	sub    rax,QWORD PTR [r12+0x50]
  41d8c6:	jbe    41d935 <__ctype_b_loc@plt+0x1b665>
  41d8c8:	shr    rax,0x3
  41d8cc:	imul   eax,eax,0xcccccccd
  41d8d2:	mov    DWORD PTR [rsp+0xa4],eax
  41d8d9:	lea    rsi,[rip+0xc577]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  41d8e0:	lea    rdx,[rsp+0x30]
  41d8e5:	mov    rdi,r12
  41d8e8:	call   410000 <__ctype_b_loc@plt+0xdd30>
  41d8ed:	mov    rdi,QWORD PTR [rsp+0x40]
  41d8f2:	lea    rsi,[rip+0xc857]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  41d8f9:	call   402170 <strcmp@plt>
  41d8fe:	cmp    eax,0x1
  41d901:	mov    edx,0x2
  41d906:	sbb    edx,0x0
  41d909:	mov    rcx,QWORD PTR [rsp+0x38]
  41d90e:	test   rcx,rcx
  41d911:	jne    41d91f <__ctype_b_loc@plt+0x1b64f>
  41d913:	lea    rcx,[rip+0xc85b]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  41d91a:	mov    QWORD PTR [rsp+0x38],rcx
  41d91f:	lea    rsi,[rip+0xc851]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  41d926:	mov    rdi,r12
  41d929:	mov    r8,rbx
  41d92c:	xor    eax,eax
  41d92e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41d933:	jmp    41d94e <__ctype_b_loc@plt+0x1b67e>
  41d935:	lea    rsi,[rip+0xc7fe]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  41d93c:	mov    rdi,r12
  41d93f:	mov    edx,0x2
  41d944:	mov    rcx,rbx
  41d947:	xor    eax,eax
  41d949:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41d94e:	mov    rax,QWORD PTR [r12+0x10]
  41d953:	mov    rbx,QWORD PTR [r12+0x18]
  41d958:	xor    r13d,r13d
  41d95b:	xor    ecx,ecx
  41d95d:	mov    QWORD PTR [rsp+0x10],rcx
  41d962:	lea    r14,[rip+0xc1af]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41d969:	lea    rcx,[rip+0xc866]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41d970:	cmp    rbx,r14
  41d973:	je     41d994 <__ctype_b_loc@plt+0x1b6c4>
  41d975:	cmp    rbx,rax
  41d978:	jae    41d994 <__ctype_b_loc@plt+0x1b6c4>
  41d97a:	movsxd rax,DWORD PTR [rbx+0x8]
  41d97e:	cmp    rax,0xffffffffffffffff
  41d982:	je     41d994 <__ctype_b_loc@plt+0x1b6c4>
  41d984:	cmp    eax,0x5
  41d987:	je     41d9bc <__ctype_b_loc@plt+0x1b6ec>
  41d989:	lea    rcx,[rip+0x11f50]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41d990:	mov    rcx,QWORD PTR [rcx+rax*8]
  41d994:	lea    rsi,[rip+0xc827]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41d99b:	lea    rdx,[rip+0xcc68]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  41d9a2:	mov    rdi,r12
  41d9a5:	xor    eax,eax
  41d9a7:	call   410460 <__ctype_b_loc@plt+0xe190>
  41d9ac:	mov    rdi,r12
  41d9af:	mov    esi,0x1
  41d9b4:	mov    rdx,rax
  41d9b7:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  41d9bc:	mov    edx,0x1
  41d9c1:	mov    rdi,r12
  41d9c4:	mov    esi,0x3
  41d9c9:	call   410640 <__ctype_b_loc@plt+0xe370>
  41d9ce:	mov    rbp,rax
  41d9d1:	mov    rdx,QWORD PTR [r12+0x10]
  41d9d6:	mov    rcx,QWORD PTR [r12+0x18]
  41d9db:	lea    rax,[rcx+0x30]
  41d9df:	cmp    rax,rdx
  41d9e2:	jae    41daab <__ctype_b_loc@plt+0x1b7db>
  41d9e8:	cmp    rax,r14
  41d9eb:	je     41daab <__ctype_b_loc@plt+0x1b7db>
  41d9f1:	mov    esi,DWORD PTR [rcx+0x38]
  41d9f4:	test   esi,esi
  41d9f6:	jle    41daab <__ctype_b_loc@plt+0x1b7db>
  41d9fc:	cmp    esi,0x3
  41d9ff:	je     41db8c <__ctype_b_loc@plt+0x1b8bc>
  41da05:	cmp    esi,0x4
  41da08:	jne    41db9a <__ctype_b_loc@plt+0x1b8ca>
  41da0e:	mov    r15,QWORD PTR [rax]
  41da11:	add    r15,0x18
  41da15:	lea    rsi,[rsp+0x30]
  41da1a:	mov    rdi,r15
  41da1d:	call   4020b0 <strtod@plt>
  41da22:	mov    rbx,QWORD PTR [rsp+0x30]
  41da27:	cmp    rbx,r15
  41da2a:	je     41db45 <__ctype_b_loc@plt+0x1b875>
  41da30:	mov    QWORD PTR [rsp+0x8],r12
  41da35:	mov    r12b,BYTE PTR [rbx]
  41da38:	mov    eax,r12d
  41da3b:	or     al,0x20
  41da3d:	cmp    al,0x78
  41da3f:	jne    41da74 <__ctype_b_loc@plt+0x1b7a4>
  41da41:	lea    rsi,[rsp+0x30]
  41da46:	mov    rdi,r15
  41da49:	mov    edx,0x10
  41da4e:	call   402250 <strtoul@plt>
  41da53:	vmovq  xmm0,rax
  41da58:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xc210]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  41da60:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xc218]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  41da68:	vhaddpd xmm0,xmm0,xmm0
  41da6c:	mov    rbx,QWORD PTR [rsp+0x30]
  41da71:	mov    r12b,BYTE PTR [rbx]
  41da74:	lea    r14,[rip+0xc09d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41da7b:	test   r12b,r12b
  41da7e:	je     41db4e <__ctype_b_loc@plt+0x1b87e>
  41da84:	vmovapd XMMWORD PTR [rsp+0x20],xmm0
  41da8a:	call   4022d0 <__ctype_b_loc@plt>
  41da8f:	mov    rax,QWORD PTR [rax]
  41da92:	movzx  ecx,r12b
  41da96:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41da9b:	jne    41db55 <__ctype_b_loc@plt+0x1b885>
  41daa1:	mov    r12,QWORD PTR [rsp+0x8]
  41daa6:	jmp    41db9a <__ctype_b_loc@plt+0x1b8ca>
  41daab:	cmp    rcx,rdx
  41daae:	lea    rbx,[rip+0xc063]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41dab5:	cmovb  rbx,rcx
  41dab9:	mov    eax,DWORD PTR [rbx+0x8]
  41dabc:	xor    edx,edx
  41dabe:	add    eax,0xfffffffd
  41dac1:	cmp    eax,0x4
  41dac4:	ja     41dd12 <__ctype_b_loc@plt+0x1ba42>
  41daca:	lea    rcx,[rip+0xbd7b]        # 42984c <__ctype_b_loc@plt+0x2757c>
  41dad1:	movsxd rax,DWORD PTR [rcx+rax*4]
  41dad5:	add    rax,rcx
  41dad8:	jmp    rax
  41dada:	vmovsd xmm0,QWORD PTR [rbx]
  41dade:	lea    rsi,[rip+0xc33c]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41dae5:	lea    r15,[rsp+0x30]
  41daea:	mov    rdi,r15
  41daed:	mov    al,0x1
  41daef:	call   402270 <sprintf@plt>
  41daf4:	mov    rdi,r15
  41daf7:	call   4020e0 <strlen@plt>
  41dafc:	mov    rdi,r12
  41daff:	mov    rsi,r15
  41db02:	mov    rdx,rax
  41db05:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41db0a:	mov    QWORD PTR [rbx],rax
  41db0d:	mov    DWORD PTR [rbx+0x8],0x4
  41db14:	mov    rdx,QWORD PTR [rax+0x10]
  41db18:	jmp    41dd12 <__ctype_b_loc@plt+0x1ba42>
  41db1d:	mov    rax,QWORD PTR [rbx]
  41db20:	mov    rdx,QWORD PTR [rax+0x10]
  41db24:	jmp    41dd12 <__ctype_b_loc@plt+0x1ba42>
  41db29:	mov    rdi,QWORD PTR [rbx]
  41db2c:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41db31:	movsxd rdx,eax
  41db34:	jmp    41dd12 <__ctype_b_loc@plt+0x1ba42>
  41db39:	mov    rax,QWORD PTR [rbx]
  41db3c:	mov    rdx,QWORD PTR [rax+0x20]
  41db40:	jmp    41dd12 <__ctype_b_loc@plt+0x1ba42>
  41db45:	lea    r14,[rip+0xbfcc]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41db4c:	jmp    41db9a <__ctype_b_loc@plt+0x1b8ca>
  41db4e:	mov    r12,QWORD PTR [rsp+0x8]
  41db53:	jmp    41db81 <__ctype_b_loc@plt+0x1b8b1>
  41db55:	inc    rbx
  41db58:	mov    r12,QWORD PTR [rsp+0x8]
  41db5d:	vmovapd xmm0,XMMWORD PTR [rsp+0x20]
  41db63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db6d:	nop    DWORD PTR [rax]
  41db70:	movzx  ecx,BYTE PTR [rbx]
  41db73:	inc    rbx
  41db76:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41db7b:	jne    41db70 <__ctype_b_loc@plt+0x1b8a0>
  41db7d:	test   cl,cl
  41db7f:	jne    41db9a <__ctype_b_loc@plt+0x1b8ca>
  41db81:	lea    rax,[rsp+0x18]
  41db86:	vmovsd QWORD PTR [rsp+0x18],xmm0
  41db8c:	vcvttsd2si rdx,QWORD PTR [rax]
  41db91:	test   rdx,rdx
  41db94:	jne    41dd12 <__ctype_b_loc@plt+0x1ba42>
  41db9a:	mov    rax,QWORD PTR [r12+0x18]
  41db9f:	add    rax,0x30
  41dba3:	cmp    rax,QWORD PTR [r12+0x10]
  41dba8:	cmovae rax,r14
  41dbac:	mov    ecx,DWORD PTR [rax+0x8]
  41dbaf:	cmp    ecx,0x3
  41dbb2:	je     41dd10 <__ctype_b_loc@plt+0x1ba40>
  41dbb8:	cmp    ecx,0x4
  41dbbb:	jne    41dc32 <__ctype_b_loc@plt+0x1b962>
  41dbbd:	mov    r15,QWORD PTR [rax]
  41dbc0:	add    r15,0x18
  41dbc4:	lea    rsi,[rsp+0x30]
  41dbc9:	mov    rdi,r15
  41dbcc:	call   4020b0 <strtod@plt>
  41dbd1:	mov    rbx,QWORD PTR [rsp+0x30]
  41dbd6:	cmp    rbx,r15
  41dbd9:	je     41dc2b <__ctype_b_loc@plt+0x1b95b>
  41dbdb:	mov    QWORD PTR [rsp+0x8],r12
  41dbe0:	mov    r12b,BYTE PTR [rbx]
  41dbe3:	mov    eax,r12d
  41dbe6:	or     al,0x20
  41dbe8:	cmp    al,0x78
  41dbea:	jne    41dc06 <__ctype_b_loc@plt+0x1b936>
  41dbec:	lea    rsi,[rsp+0x30]
  41dbf1:	mov    rdi,r15
  41dbf4:	mov    edx,0x10
  41dbf9:	call   402250 <strtoul@plt>
  41dbfe:	mov    rbx,QWORD PTR [rsp+0x30]
  41dc03:	mov    r12b,BYTE PTR [rbx]
  41dc06:	test   r12b,r12b
  41dc09:	je     41e004 <__ctype_b_loc@plt+0x1bd34>
  41dc0f:	call   4022d0 <__ctype_b_loc@plt>
  41dc14:	mov    rax,QWORD PTR [rax]
  41dc17:	movzx  ecx,r12b
  41dc1b:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41dc20:	jne    41e010 <__ctype_b_loc@plt+0x1bd40>
  41dc26:	mov    r12,QWORD PTR [rsp+0x8]
  41dc2b:	lea    r14,[rip+0xbee6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41dc32:	mov    rax,QWORD PTR [r12+0x18]
  41dc37:	lea    rdx,[rax+0x30]
  41dc3b:	lea    rcx,[rip+0xc594]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41dc42:	cmp    rdx,QWORD PTR [r12+0x10]
  41dc47:	jae    41dc63 <__ctype_b_loc@plt+0x1b993>
  41dc49:	cmp    rdx,r14
  41dc4c:	je     41dc63 <__ctype_b_loc@plt+0x1b993>
  41dc4e:	movsxd rax,DWORD PTR [rax+0x38]
  41dc52:	cmp    rax,0xffffffffffffffff
  41dc56:	je     41dc63 <__ctype_b_loc@plt+0x1b993>
  41dc58:	lea    rcx,[rip+0x11c81]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41dc5f:	mov    rcx,QWORD PTR [rcx+rax*8]
  41dc63:	lea    rsi,[rip+0xc558]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41dc6a:	lea    rdx,[rip+0xc230]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  41dc71:	mov    rdi,r12
  41dc74:	xor    eax,eax
  41dc76:	call   410460 <__ctype_b_loc@plt+0xe190>
  41dc7b:	mov    rbx,rax
  41dc7e:	mov    rax,QWORD PTR [r12+0x28]
  41dc83:	sub    rax,QWORD PTR [r12+0x50]
  41dc88:	jbe    41dcf7 <__ctype_b_loc@plt+0x1ba27>
  41dc8a:	shr    rax,0x3
  41dc8e:	imul   eax,eax,0xcccccccd
  41dc94:	mov    DWORD PTR [rsp+0xa4],eax
  41dc9b:	lea    rsi,[rip+0xc1b5]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  41dca2:	lea    rdx,[rsp+0x30]
  41dca7:	mov    rdi,r12
  41dcaa:	call   410000 <__ctype_b_loc@plt+0xdd30>
  41dcaf:	mov    rdi,QWORD PTR [rsp+0x40]
  41dcb4:	lea    rsi,[rip+0xc495]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  41dcbb:	call   402170 <strcmp@plt>
  41dcc0:	cmp    eax,0x1
  41dcc3:	mov    edx,0x4
  41dcc8:	sbb    edx,0x0
  41dccb:	mov    rcx,QWORD PTR [rsp+0x38]
  41dcd0:	test   rcx,rcx
  41dcd3:	jne    41dce1 <__ctype_b_loc@plt+0x1ba11>
  41dcd5:	lea    rcx,[rip+0xc499]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  41dcdc:	mov    QWORD PTR [rsp+0x38],rcx
  41dce1:	lea    rsi,[rip+0xc48f]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  41dce8:	mov    rdi,r12
  41dceb:	mov    r8,rbx
  41dcee:	xor    eax,eax
  41dcf0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41dcf5:	jmp    41dd10 <__ctype_b_loc@plt+0x1ba40>
  41dcf7:	lea    rsi,[rip+0xc43c]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  41dcfe:	mov    rdi,r12
  41dd01:	mov    edx,0x4
  41dd06:	mov    rcx,rbx
  41dd09:	xor    eax,eax
  41dd0b:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41dd10:	xor    edx,edx
  41dd12:	mov    QWORD PTR [rsp+0x40],r12
  41dd17:	lea    rax,[rsp+0x48]
  41dd1c:	mov    QWORD PTR [rsp+0x30],rax
  41dd21:	mov    DWORD PTR [rsp+0x38],0x0
  41dd29:	cmp    ebp,edx
  41dd2b:	mov    QWORD PTR [rsp+0x8],rdx
  41dd30:	jge    41decc <__ctype_b_loc@plt+0x1bbfc>
  41dd36:	lea    r15,[rsp+0x2048]
  41dd3e:	movsxd rbx,ebp
  41dd41:	lea    rbp,[rip+0xbdd0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41dd48:	jmp    41dd63 <__ctype_b_loc@plt+0x1ba93>
  41dd4a:	nop    WORD PTR [rax+rax*1+0x0]
  41dd50:	inc    rbx
  41dd53:	mov    rdx,QWORD PTR [rsp+0x8]
  41dd58:	cmp    ebx,edx
  41dd5a:	mov    r12,r14
  41dd5d:	je     41ded2 <__ctype_b_loc@plt+0x1bc02>
  41dd63:	mov    rcx,QWORD PTR [r12+0x10]
  41dd68:	mov    rax,QWORD PTR [r12+0x18]
  41dd6d:	cmp    rax,rcx
  41dd70:	cmovae rax,rbp
  41dd74:	mov    rsi,QWORD PTR [rax]
  41dd77:	lea    eax,[rbx-0x1]
  41dd7a:	cmp    eax,DWORD PTR [rsi+0x38]
  41dd7d:	jae    41dd90 <__ctype_b_loc@plt+0x1bac0>
  41dd7f:	cdqe   
  41dd81:	shl    rax,0x4
  41dd85:	add    rax,QWORD PTR [rsi+0x18]
  41dd89:	jmp    41de13 <__ctype_b_loc@plt+0x1bb43>
  41dd8e:	xchg   ax,ax
  41dd90:	vcvtsi2sd xmm0,xmm2,ebx
  41dd94:	test   rbx,rbx
  41dd97:	je     41ddd7 <__ctype_b_loc@plt+0x1bb07>
  41dd99:	vmovq  rdx,xmm0
  41dd9e:	mov    rax,rdx
  41dda1:	shr    rax,0x20
  41dda5:	add    eax,edx
  41dda7:	mov    dl,BYTE PTR [rsi+0xb]
  41ddaa:	mov    rdi,0xffffffffffffffff
  41ddb1:	shlx   rdi,rdi,rdx
  41ddb6:	or     rdi,0x1
  41ddba:	xor    rdi,0xfffffffffffffffe
  41ddbe:	xor    edx,edx
  41ddc0:	div    rdi
  41ddc3:	lea    rax,[rdx+rdx*4]
  41ddc7:	shl    rax,0x3
  41ddcb:	add    rax,QWORD PTR [rsi+0x20]
  41ddcf:	cmp    DWORD PTR [rax+0x18],0x3
  41ddd3:	jne    41ddf0 <__ctype_b_loc@plt+0x1bb20>
  41ddd5:	jmp    41ddff <__ctype_b_loc@plt+0x1bb2f>
  41ddd7:	mov    rax,QWORD PTR [rsi+0x20]
  41dddb:	cmp    DWORD PTR [rax+0x18],0x3
  41dddf:	je     41ddff <__ctype_b_loc@plt+0x1bb2f>
  41dde1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ddf0:	mov    rax,QWORD PTR [rax+0x20]
  41ddf4:	test   rax,rax
  41ddf7:	je     41de10 <__ctype_b_loc@plt+0x1bb40>
  41ddf9:	cmp    DWORD PTR [rax+0x18],0x3
  41ddfd:	jne    41ddf0 <__ctype_b_loc@plt+0x1bb20>
  41ddff:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41de04:	vucomisd xmm1,xmm0
  41de08:	jne    41ddf0 <__ctype_b_loc@plt+0x1bb20>
  41de0a:	jp     41ddf0 <__ctype_b_loc@plt+0x1bb20>
  41de0c:	jmp    41de13 <__ctype_b_loc@plt+0x1bb43>
  41de0e:	xchg   ax,ax
  41de10:	mov    rax,rbp
  41de13:	mov    rdx,QWORD PTR [rax]
  41de16:	mov    QWORD PTR [rcx],rdx
  41de19:	mov    eax,DWORD PTR [rax+0x8]
  41de1c:	mov    DWORD PTR [rcx+0x8],eax
  41de1f:	mov    rax,QWORD PTR [r12+0x10]
  41de24:	lea    rcx,[rax+0x10]
  41de28:	mov    QWORD PTR [r12+0x10],rcx
  41de2d:	lea    rdx,[rip+0xc3a2]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41de34:	cmp    rax,rbp
  41de37:	je     41de5c <__ctype_b_loc@plt+0x1bb8c>
  41de39:	movsxd rax,DWORD PTR [rax+0x8]
  41de3d:	lea    ecx,[rax-0x3]
  41de40:	cmp    ecx,0x2
  41de43:	jb     41de6f <__ctype_b_loc@plt+0x1bb9f>
  41de45:	lea    rdx,[rip+0xc38a]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41de4c:	cmp    eax,0xffffffff
  41de4f:	je     41de5c <__ctype_b_loc@plt+0x1bb8c>
  41de51:	lea    rcx,[rip+0x11a88]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41de58:	mov    rdx,QWORD PTR [rcx+rax*8]
  41de5c:	mov    rdi,r12
  41de5f:	lea    rsi,[rip+0xc81a]        # 42a680 <__ctype_b_loc@plt+0x283b0>
  41de66:	mov    ecx,ebx
  41de68:	xor    eax,eax
  41de6a:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41de6f:	mov    r14,r12
  41de72:	lea    rdi,[rsp+0x30]
  41de77:	call   41ec70 <__ctype_b_loc@plt+0x1c9a0>
  41de7c:	test   r13,r13
  41de7f:	je     41dd50 <__ctype_b_loc@plt+0x1ba80>
  41de85:	xor    r12d,r12d
  41de88:	jmp    41deb1 <__ctype_b_loc@plt+0x1bbe1>
  41de8a:	nop    WORD PTR [rax+rax*1+0x0]
  41de90:	mov    rcx,QWORD PTR [rsp+0x10]
  41de95:	movzx  ecx,BYTE PTR [rcx+r12*1]
  41de9a:	lea    rdx,[rax+0x1]
  41de9e:	mov    QWORD PTR [rsp+0x30],rdx
  41dea3:	mov    BYTE PTR [rax],cl
  41dea5:	inc    r12
  41dea8:	cmp    r13,r12
  41deab:	je     41dd50 <__ctype_b_loc@plt+0x1ba80>
  41deb1:	mov    rax,QWORD PTR [rsp+0x30]
  41deb6:	cmp    rax,r15
  41deb9:	jb     41de90 <__ctype_b_loc@plt+0x1bbc0>
  41debb:	lea    rdi,[rsp+0x30]
  41dec0:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  41dec5:	mov    rax,QWORD PTR [rsp+0x30]
  41deca:	jmp    41de90 <__ctype_b_loc@plt+0x1bbc0>
  41decc:	jne    41dfe3 <__ctype_b_loc@plt+0x1bd13>
  41ded2:	mov    rcx,QWORD PTR [r12+0x10]
  41ded7:	mov    rax,QWORD PTR [r12+0x18]
  41dedc:	cmp    rax,rcx
  41dedf:	lea    rbp,[rip+0xbc32]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41dee6:	cmovae rax,rbp
  41deea:	mov    rsi,QWORD PTR [rax]
  41deed:	lea    eax,[rdx-0x1]
  41def0:	cmp    eax,DWORD PTR [rsi+0x38]
  41def3:	jae    41df04 <__ctype_b_loc@plt+0x1bc34>
  41def5:	cdqe   
  41def7:	shl    rax,0x4
  41defb:	add    rax,QWORD PTR [rsi+0x18]
  41deff:	jmp    41df81 <__ctype_b_loc@plt+0x1bcb1>
  41df04:	vcvtsi2sd xmm0,xmm2,edx
  41df08:	test   edx,edx
  41df0a:	je     41df4a <__ctype_b_loc@plt+0x1bc7a>
  41df0c:	vmovq  rdx,xmm0
  41df11:	mov    rax,rdx
  41df14:	shr    rax,0x20
  41df18:	add    eax,edx
  41df1a:	mov    dl,BYTE PTR [rsi+0xb]
  41df1d:	mov    rdi,0xffffffffffffffff
  41df24:	shlx   rdi,rdi,rdx
  41df29:	or     rdi,0x1
  41df2d:	xor    rdi,0xfffffffffffffffe
  41df31:	xor    edx,edx
  41df33:	div    rdi
  41df36:	lea    rax,[rdx+rdx*4]
  41df3a:	shl    rax,0x3
  41df3e:	add    rax,QWORD PTR [rsi+0x20]
  41df42:	cmp    DWORD PTR [rax+0x18],0x3
  41df46:	jne    41df60 <__ctype_b_loc@plt+0x1bc90>
  41df48:	jmp    41df6f <__ctype_b_loc@plt+0x1bc9f>
  41df4a:	mov    rax,QWORD PTR [rsi+0x20]
  41df4e:	cmp    DWORD PTR [rax+0x18],0x3
  41df52:	je     41df6f <__ctype_b_loc@plt+0x1bc9f>
  41df54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df5e:	xchg   ax,ax
  41df60:	mov    rax,QWORD PTR [rax+0x20]
  41df64:	test   rax,rax
  41df67:	je     41df7e <__ctype_b_loc@plt+0x1bcae>
  41df69:	cmp    DWORD PTR [rax+0x18],0x3
  41df6d:	jne    41df60 <__ctype_b_loc@plt+0x1bc90>
  41df6f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41df74:	vucomisd xmm1,xmm0
  41df78:	jne    41df60 <__ctype_b_loc@plt+0x1bc90>
  41df7a:	jp     41df60 <__ctype_b_loc@plt+0x1bc90>
  41df7c:	jmp    41df81 <__ctype_b_loc@plt+0x1bcb1>
  41df7e:	mov    rax,rbp
  41df81:	mov    rdx,QWORD PTR [rax]
  41df84:	mov    QWORD PTR [rcx],rdx
  41df87:	mov    eax,DWORD PTR [rax+0x8]
  41df8a:	mov    DWORD PTR [rcx+0x8],eax
  41df8d:	mov    rax,QWORD PTR [r12+0x10]
  41df92:	lea    rcx,[rax+0x10]
  41df96:	mov    QWORD PTR [r12+0x10],rcx
  41df9b:	lea    rdx,[rip+0xc234]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41dfa2:	cmp    rax,rbp
  41dfa5:	je     41dfc3 <__ctype_b_loc@plt+0x1bcf3>
  41dfa7:	movsxd rax,DWORD PTR [rax+0x8]
  41dfab:	lea    ecx,[rax-0x3]
  41dfae:	cmp    ecx,0x2
  41dfb1:	jb     41dfd9 <__ctype_b_loc@plt+0x1bd09>
  41dfb3:	cmp    eax,0xffffffff
  41dfb6:	je     41dfc3 <__ctype_b_loc@plt+0x1bcf3>
  41dfb8:	lea    rcx,[rip+0x11921]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41dfbf:	mov    rdx,QWORD PTR [rcx+rax*8]
  41dfc3:	lea    rsi,[rip+0xc6b6]        # 42a680 <__ctype_b_loc@plt+0x283b0>
  41dfca:	mov    rdi,r12
  41dfcd:	mov    rcx,QWORD PTR [rsp+0x8]
  41dfd2:	xor    eax,eax
  41dfd4:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41dfd9:	lea    rdi,[rsp+0x30]
  41dfde:	call   41ec70 <__ctype_b_loc@plt+0x1c9a0>
  41dfe3:	lea    rdi,[rsp+0x30]
  41dfe8:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  41dfed:	mov    eax,0x1
  41dff2:	add    rsp,0x2048
  41dff9:	pop    rbx
  41dffa:	pop    r12
  41dffc:	pop    r13
  41dffe:	pop    r14
  41e000:	pop    r15
  41e002:	pop    rbp
  41e003:	ret    
  41e004:	xor    edx,edx
  41e006:	mov    r12,QWORD PTR [rsp+0x8]
  41e00b:	jmp    41dd12 <__ctype_b_loc@plt+0x1ba42>
  41e010:	inc    rbx
  41e013:	mov    r12,QWORD PTR [rsp+0x8]
  41e018:	lea    r14,[rip+0xbaf9]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e01f:	nop
  41e020:	movzx  ecx,BYTE PTR [rbx]
  41e023:	inc    rbx
  41e026:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e02b:	jne    41e020 <__ctype_b_loc@plt+0x1bd50>
  41e02d:	test   cl,cl
  41e02f:	jne    41dc32 <__ctype_b_loc@plt+0x1b962>
  41e035:	jmp    41dd10 <__ctype_b_loc@plt+0x1ba40>
  41e03a:	nop    WORD PTR [rax+rax*1+0x0]
  41e040:	push   rbp
  41e041:	push   r15
  41e043:	push   r14
  41e045:	push   r13
  41e047:	push   r12
  41e049:	push   rbx
  41e04a:	sub    rsp,0x98
  41e051:	mov    r13,rdi
  41e054:	mov    rbp,QWORD PTR [rdi+0x18]
  41e058:	lea    r12,[rip+0xbab9]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e05f:	lea    rcx,[rip+0xc170]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41e066:	cmp    rbp,r12
  41e069:	je     41e08e <__ctype_b_loc@plt+0x1bdbe>
  41e06b:	mov    r14,QWORD PTR [r13+0x10]
  41e06f:	cmp    rbp,r14
  41e072:	jae    41e08e <__ctype_b_loc@plt+0x1bdbe>
  41e074:	movsxd rax,DWORD PTR [rbp+0x8]
  41e078:	cmp    rax,0xffffffffffffffff
  41e07c:	je     41e08e <__ctype_b_loc@plt+0x1bdbe>
  41e07e:	cmp    eax,0x5
  41e081:	je     41e0be <__ctype_b_loc@plt+0x1bdee>
  41e083:	lea    rcx,[rip+0x11856]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41e08a:	mov    rcx,QWORD PTR [rcx+rax*8]
  41e08e:	lea    rsi,[rip+0xc12d]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41e095:	lea    rdx,[rip+0xc56e]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  41e09c:	mov    rdi,r13
  41e09f:	xor    eax,eax
  41e0a1:	call   410460 <__ctype_b_loc@plt+0xe190>
  41e0a6:	mov    rdi,r13
  41e0a9:	mov    esi,0x1
  41e0ae:	mov    rdx,rax
  41e0b1:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  41e0b6:	mov    r14,QWORD PTR [r13+0x10]
  41e0ba:	mov    rbp,QWORD PTR [r13+0x18]
  41e0be:	cmp    rbp,r14
  41e0c1:	mov    rbx,r12
  41e0c4:	cmovb  rbx,rbp
  41e0c8:	mov    eax,DWORD PTR [rbx+0x8]
  41e0cb:	xor    r15d,r15d
  41e0ce:	add    eax,0xfffffffd
  41e0d1:	cmp    eax,0x4
  41e0d4:	ja     41e14b <__ctype_b_loc@plt+0x1be7b>
  41e0d6:	lea    rcx,[rip+0xb783]        # 429860 <__ctype_b_loc@plt+0x27590>
  41e0dd:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e0e1:	add    rax,rcx
  41e0e4:	jmp    rax
  41e0e6:	vmovsd xmm0,QWORD PTR [rbx]
  41e0ea:	lea    rsi,[rip+0xbd30]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41e0f1:	lea    rbp,[rsp+0x20]
  41e0f6:	mov    rdi,rbp
  41e0f9:	mov    al,0x1
  41e0fb:	call   402270 <sprintf@plt>
  41e100:	mov    rdi,rbp
  41e103:	call   4020e0 <strlen@plt>
  41e108:	mov    rdi,r13
  41e10b:	mov    rsi,rbp
  41e10e:	mov    rdx,rax
  41e111:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41e116:	mov    QWORD PTR [rbx],rax
  41e119:	mov    DWORD PTR [rbx+0x8],0x4
  41e120:	mov    r15,QWORD PTR [rax+0x10]
  41e124:	mov    r14,QWORD PTR [r13+0x10]
  41e128:	mov    rbp,QWORD PTR [r13+0x18]
  41e12c:	jmp    41e14b <__ctype_b_loc@plt+0x1be7b>
  41e12e:	mov    rax,QWORD PTR [rbx]
  41e131:	mov    r15,QWORD PTR [rax+0x10]
  41e135:	jmp    41e14b <__ctype_b_loc@plt+0x1be7b>
  41e137:	mov    rdi,QWORD PTR [rbx]
  41e13a:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41e13f:	movsxd r15,eax
  41e142:	jmp    41e14b <__ctype_b_loc@plt+0x1be7b>
  41e144:	mov    rax,QWORD PTR [rbx]
  41e147:	mov    r15,QWORD PTR [rax+0x20]
  41e14b:	mov    rax,r14
  41e14e:	sub    rax,rbp
  41e151:	lea    ebx,[r15+0x1]
  41e155:	shr    rax,0x4
  41e159:	cmp    eax,0x2
  41e15c:	je     41e52b <__ctype_b_loc@plt+0x1c25b>
  41e162:	cmp    eax,0x3
  41e165:	jne    41e211 <__ctype_b_loc@plt+0x1bf41>
  41e16b:	add    rbp,0x10
  41e16f:	cmp    rbp,r14
  41e172:	cmovae rbp,r12
  41e176:	mov    eax,DWORD PTR [rbp+0x8]
  41e179:	cmp    eax,0x3
  41e17c:	je     41e260 <__ctype_b_loc@plt+0x1bf90>
  41e182:	cmp    eax,0x4
  41e185:	jne    41e26f <__ctype_b_loc@plt+0x1bf9f>
  41e18b:	mov    DWORD PTR [rsp+0x4],ebx
  41e18f:	mov    rbp,QWORD PTR [rbp+0x0]
  41e193:	add    rbp,0x18
  41e197:	lea    rsi,[rsp+0x20]
  41e19c:	mov    rdi,rbp
  41e19f:	call   4020b0 <strtod@plt>
  41e1a4:	mov    rbx,QWORD PTR [rsp+0x20]
  41e1a9:	cmp    rbx,rbp
  41e1ac:	je     41e20b <__ctype_b_loc@plt+0x1bf3b>
  41e1ae:	mov    r14b,BYTE PTR [rbx]
  41e1b1:	mov    eax,r14d
  41e1b4:	or     al,0x20
  41e1b6:	cmp    al,0x78
  41e1b8:	jne    41e1ed <__ctype_b_loc@plt+0x1bf1d>
  41e1ba:	lea    rsi,[rsp+0x20]
  41e1bf:	mov    rdi,rbp
  41e1c2:	mov    edx,0x10
  41e1c7:	call   402250 <strtoul@plt>
  41e1cc:	vmovq  xmm0,rax
  41e1d1:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xba97]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  41e1d9:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xba9f]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  41e1e1:	vhaddpd xmm0,xmm0,xmm0
  41e1e5:	mov    rbx,QWORD PTR [rsp+0x20]
  41e1ea:	mov    r14b,BYTE PTR [rbx]
  41e1ed:	test   r14b,r14b
  41e1f0:	je     41e227 <__ctype_b_loc@plt+0x1bf57>
  41e1f2:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  41e1f8:	call   4022d0 <__ctype_b_loc@plt>
  41e1fd:	mov    rax,QWORD PTR [rax]
  41e200:	movzx  ecx,r14b
  41e204:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e209:	jne    41e22d <__ctype_b_loc@plt+0x1bf5d>
  41e20b:	mov    ebx,DWORD PTR [rsp+0x4]
  41e20f:	jmp    41e26f <__ctype_b_loc@plt+0x1bf9f>
  41e211:	lea    rsi,[rip+0xc49d]        # 42a6b5 <__ctype_b_loc@plt+0x283e5>
  41e218:	mov    rdi,r13
  41e21b:	xor    eax,eax
  41e21d:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41e222:	jmp    41e53a <__ctype_b_loc@plt+0x1c26a>
  41e227:	mov    ebx,DWORD PTR [rsp+0x4]
  41e22b:	jmp    41e255 <__ctype_b_loc@plt+0x1bf85>
  41e22d:	inc    rbx
  41e230:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  41e236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e240:	movzx  ecx,BYTE PTR [rbx]
  41e243:	inc    rbx
  41e246:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e24b:	jne    41e240 <__ctype_b_loc@plt+0x1bf70>
  41e24d:	test   cl,cl
  41e24f:	mov    ebx,DWORD PTR [rsp+0x4]
  41e253:	jne    41e26f <__ctype_b_loc@plt+0x1bf9f>
  41e255:	lea    rbp,[rsp+0x8]
  41e25a:	vmovsd QWORD PTR [rsp+0x8],xmm0
  41e260:	vcvttsd2si r14,QWORD PTR [rbp+0x0]
  41e266:	test   r14,r14
  41e269:	jne    41e426 <__ctype_b_loc@plt+0x1c156>
  41e26f:	mov    rax,QWORD PTR [r13+0x18]
  41e273:	add    rax,0x10
  41e277:	cmp    rax,QWORD PTR [r13+0x10]
  41e27b:	lea    rbp,[rip+0xb896]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e282:	cmovae rax,rbp
  41e286:	mov    ecx,DWORD PTR [rax+0x8]
  41e289:	cmp    ecx,0x3
  41e28c:	je     41e423 <__ctype_b_loc@plt+0x1c153>
  41e292:	cmp    ecx,0x4
  41e295:	jne    41e349 <__ctype_b_loc@plt+0x1c079>
  41e29b:	mov    DWORD PTR [rsp+0x4],ebx
  41e29f:	mov    r14,QWORD PTR [rax]
  41e2a2:	add    r14,0x18
  41e2a6:	lea    rsi,[rsp+0x20]
  41e2ab:	mov    rdi,r14
  41e2ae:	call   4020b0 <strtod@plt>
  41e2b3:	mov    rbx,QWORD PTR [rsp+0x20]
  41e2b8:	cmp    rbx,r14
  41e2bb:	je     41e307 <__ctype_b_loc@plt+0x1c037>
  41e2bd:	mov    bpl,BYTE PTR [rbx]
  41e2c0:	mov    eax,ebp
  41e2c2:	or     al,0x20
  41e2c4:	cmp    al,0x78
  41e2c6:	jne    41e2e2 <__ctype_b_loc@plt+0x1c012>
  41e2c8:	lea    rsi,[rsp+0x20]
  41e2cd:	mov    rdi,r14
  41e2d0:	mov    edx,0x10
  41e2d5:	call   402250 <strtoul@plt>
  41e2da:	mov    rbx,QWORD PTR [rsp+0x20]
  41e2df:	mov    bpl,BYTE PTR [rbx]
  41e2e2:	test   bpl,bpl
  41e2e5:	je     41e30d <__ctype_b_loc@plt+0x1c03d>
  41e2e7:	call   4022d0 <__ctype_b_loc@plt>
  41e2ec:	mov    rax,QWORD PTR [rax]
  41e2ef:	movzx  ecx,bpl
  41e2f3:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e2f8:	jne    41e322 <__ctype_b_loc@plt+0x1c052>
  41e2fa:	mov    ebx,DWORD PTR [rsp+0x4]
  41e2fe:	lea    rbp,[rip+0xb813]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e305:	jmp    41e349 <__ctype_b_loc@plt+0x1c079>
  41e307:	mov    ebx,DWORD PTR [rsp+0x4]
  41e30b:	jmp    41e349 <__ctype_b_loc@plt+0x1c079>
  41e30d:	xor    r14d,r14d
  41e310:	mov    ebx,DWORD PTR [rsp+0x4]
  41e314:	cmp    r15d,r14d
  41e317:	jge    41e42f <__ctype_b_loc@plt+0x1c15f>
  41e31d:	jmp    41e528 <__ctype_b_loc@plt+0x1c258>
  41e322:	inc    rbx
  41e325:	lea    rbp,[rip+0xb7ec]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e32c:	nop    DWORD PTR [rax+0x0]
  41e330:	movzx  ecx,BYTE PTR [rbx]
  41e333:	inc    rbx
  41e336:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e33b:	jne    41e330 <__ctype_b_loc@plt+0x1c060>
  41e33d:	test   cl,cl
  41e33f:	mov    ebx,DWORD PTR [rsp+0x4]
  41e343:	je     41e423 <__ctype_b_loc@plt+0x1c153>
  41e349:	mov    rax,QWORD PTR [r13+0x18]
  41e34d:	lea    rdx,[rax+0x10]
  41e351:	lea    rcx,[rip+0xbe7e]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41e358:	cmp    rdx,QWORD PTR [r13+0x10]
  41e35c:	jae    41e378 <__ctype_b_loc@plt+0x1c0a8>
  41e35e:	cmp    rdx,rbp
  41e361:	je     41e378 <__ctype_b_loc@plt+0x1c0a8>
  41e363:	movsxd rax,DWORD PTR [rax+0x18]
  41e367:	cmp    rax,0xffffffffffffffff
  41e36b:	je     41e378 <__ctype_b_loc@plt+0x1c0a8>
  41e36d:	lea    rcx,[rip+0x1156c]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41e374:	mov    rcx,QWORD PTR [rcx+rax*8]
  41e378:	lea    rsi,[rip+0xbe43]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41e37f:	lea    rdx,[rip+0xbb1b]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  41e386:	mov    rdi,r13
  41e389:	xor    eax,eax
  41e38b:	call   410460 <__ctype_b_loc@plt+0xe190>
  41e390:	mov    r14,rax
  41e393:	mov    rax,QWORD PTR [r13+0x28]
  41e397:	sub    rax,QWORD PTR [r13+0x50]
  41e39b:	jbe    41e40a <__ctype_b_loc@plt+0x1c13a>
  41e39d:	shr    rax,0x3
  41e3a1:	imul   eax,eax,0xcccccccd
  41e3a7:	mov    DWORD PTR [rsp+0x94],eax
  41e3ae:	lea    rsi,[rip+0xbaa2]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  41e3b5:	lea    rdx,[rsp+0x20]
  41e3ba:	mov    rdi,r13
  41e3bd:	call   410000 <__ctype_b_loc@plt+0xdd30>
  41e3c2:	mov    rdi,QWORD PTR [rsp+0x30]
  41e3c7:	lea    rsi,[rip+0xbd82]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  41e3ce:	call   402170 <strcmp@plt>
  41e3d3:	cmp    eax,0x1
  41e3d6:	mov    edx,0x2
  41e3db:	sbb    edx,0x0
  41e3de:	mov    rcx,QWORD PTR [rsp+0x28]
  41e3e3:	test   rcx,rcx
  41e3e6:	jne    41e3f4 <__ctype_b_loc@plt+0x1c124>
  41e3e8:	lea    rcx,[rip+0xbd86]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  41e3ef:	mov    QWORD PTR [rsp+0x28],rcx
  41e3f4:	lea    rsi,[rip+0xbd7c]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  41e3fb:	mov    rdi,r13
  41e3fe:	mov    r8,r14
  41e401:	xor    eax,eax
  41e403:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41e408:	jmp    41e423 <__ctype_b_loc@plt+0x1c153>
  41e40a:	lea    rsi,[rip+0xbd29]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  41e411:	mov    rdi,r13
  41e414:	mov    edx,0x2
  41e419:	mov    rcx,r14
  41e41c:	xor    eax,eax
  41e41e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41e423:	xor    r14d,r14d
  41e426:	cmp    r15d,r14d
  41e429:	jl     41e528 <__ctype_b_loc@plt+0x1c258>
  41e42f:	cmp    ebx,r14d
  41e432:	cmovl  ebx,r14d
  41e436:	movsxd rbp,ebx
  41e439:	movsxd r15,r14d
  41e43c:	jmp    41e473 <__ctype_b_loc@plt+0x1c1a3>
  41e43e:	xchg   ax,ax
  41e440:	cdqe   
  41e442:	shl    rax,0x4
  41e446:	add    rax,QWORD PTR [rdi+0x18]
  41e44a:	mov    rdx,QWORD PTR [rax]
  41e44d:	mov    QWORD PTR [rsi],rdx
  41e450:	mov    eax,DWORD PTR [rax+0x8]
  41e453:	mov    DWORD PTR [rsi+0x8],eax
  41e456:	add    QWORD PTR [r13+0x10],0x10
  41e45b:	mov    rdi,r13
  41e45e:	mov    esi,0x1
  41e463:	mov    edx,ecx
  41e465:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41e46a:	cmp    rbp,r15
  41e46d:	jle    41e528 <__ctype_b_loc@plt+0x1c258>
  41e473:	mov    rsi,QWORD PTR [r13+0x10]
  41e477:	mov    rax,QWORD PTR [r13+0x18]
  41e47b:	cmp    rax,rsi
  41e47e:	cmovae rax,r12
  41e482:	mov    rdi,QWORD PTR [rax]
  41e485:	mov    ecx,ebp
  41e487:	dec    rbp
  41e48a:	lea    eax,[rcx-0x2]
  41e48d:	cmp    eax,DWORD PTR [rdi+0x38]
  41e490:	jb     41e440 <__ctype_b_loc@plt+0x1c170>
  41e492:	vcvtsi2sd xmm0,xmm2,ebp
  41e496:	test   ebp,ebp
  41e498:	je     41e4d8 <__ctype_b_loc@plt+0x1c208>
  41e49a:	vmovq  rdx,xmm0
  41e49f:	mov    rax,rdx
  41e4a2:	shr    rax,0x20
  41e4a6:	add    eax,edx
  41e4a8:	mov    dl,BYTE PTR [rdi+0xb]
  41e4ab:	mov    rbx,0xffffffffffffffff
  41e4b2:	shlx   rbx,rbx,rdx
  41e4b7:	or     rbx,0x1
  41e4bb:	xor    rbx,0xfffffffffffffffe
  41e4bf:	xor    edx,edx
  41e4c1:	div    rbx
  41e4c4:	lea    rax,[rdx+rdx*4]
  41e4c8:	shl    rax,0x3
  41e4cc:	add    rax,QWORD PTR [rdi+0x20]
  41e4d0:	cmp    DWORD PTR [rax+0x18],0x3
  41e4d4:	jne    41e4f0 <__ctype_b_loc@plt+0x1c220>
  41e4d6:	jmp    41e4ff <__ctype_b_loc@plt+0x1c22f>
  41e4d8:	mov    rax,QWORD PTR [rdi+0x20]
  41e4dc:	cmp    DWORD PTR [rax+0x18],0x3
  41e4e0:	je     41e4ff <__ctype_b_loc@plt+0x1c22f>
  41e4e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e4ec:	nop    DWORD PTR [rax+0x0]
  41e4f0:	mov    rax,QWORD PTR [rax+0x20]
  41e4f4:	test   rax,rax
  41e4f7:	je     41e520 <__ctype_b_loc@plt+0x1c250>
  41e4f9:	cmp    DWORD PTR [rax+0x18],0x3
  41e4fd:	jne    41e4f0 <__ctype_b_loc@plt+0x1c220>
  41e4ff:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41e504:	vucomisd xmm1,xmm0
  41e508:	jne    41e4f0 <__ctype_b_loc@plt+0x1c220>
  41e50a:	jp     41e4f0 <__ctype_b_loc@plt+0x1c220>
  41e50c:	jmp    41e44a <__ctype_b_loc@plt+0x1c17a>
  41e511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e51b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e520:	mov    rax,r12
  41e523:	jmp    41e44a <__ctype_b_loc@plt+0x1c17a>
  41e528:	mov    ebx,r14d
  41e52b:	mov    rdi,r13
  41e52e:	mov    esi,0x1
  41e533:	mov    edx,ebx
  41e535:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41e53a:	xor    eax,eax
  41e53c:	add    rsp,0x98
  41e543:	pop    rbx
  41e544:	pop    r12
  41e546:	pop    r13
  41e548:	pop    r14
  41e54a:	pop    r15
  41e54c:	pop    rbp
  41e54d:	ret    
  41e54e:	xchg   ax,ax
  41e550:	push   rbp
  41e551:	push   r15
  41e553:	push   r14
  41e555:	push   r13
  41e557:	push   r12
  41e559:	push   rbx
  41e55a:	sub    rsp,0x28
  41e55e:	mov    r13,rdi
  41e561:	mov    rbp,QWORD PTR [rdi+0x18]
  41e565:	lea    r12,[rip+0xb5ac]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e56c:	lea    rcx,[rip+0xbc63]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41e573:	cmp    rbp,r12
  41e576:	je     41e59b <__ctype_b_loc@plt+0x1c2cb>
  41e578:	mov    rax,QWORD PTR [r13+0x10]
  41e57c:	cmp    rbp,rax
  41e57f:	jae    41e59b <__ctype_b_loc@plt+0x1c2cb>
  41e581:	movsxd rdx,DWORD PTR [rbp+0x8]
  41e585:	cmp    rdx,0xffffffffffffffff
  41e589:	je     41e59b <__ctype_b_loc@plt+0x1c2cb>
  41e58b:	cmp    edx,0x5
  41e58e:	je     41e5cb <__ctype_b_loc@plt+0x1c2fb>
  41e590:	lea    rax,[rip+0x11349]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41e597:	mov    rcx,QWORD PTR [rax+rdx*8]
  41e59b:	lea    rsi,[rip+0xbc20]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41e5a2:	lea    rdx,[rip+0xc061]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  41e5a9:	mov    rdi,r13
  41e5ac:	xor    eax,eax
  41e5ae:	call   410460 <__ctype_b_loc@plt+0xe190>
  41e5b3:	mov    rdi,r13
  41e5b6:	mov    esi,0x1
  41e5bb:	mov    rdx,rax
  41e5be:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  41e5c3:	mov    rax,QWORD PTR [r13+0x10]
  41e5c7:	mov    rbp,QWORD PTR [r13+0x18]
  41e5cb:	cmp    rbp,rax
  41e5ce:	cmovae rbp,r12
  41e5d2:	mov    eax,DWORD PTR [rbp+0x8]
  41e5d5:	xor    r15d,r15d
  41e5d8:	xor    r14d,r14d
  41e5db:	add    eax,0xfffffffd
  41e5de:	cmp    eax,0x4
  41e5e1:	ja     41e64f <__ctype_b_loc@plt+0x1c37f>
  41e5e3:	lea    rcx,[rip+0xb28a]        # 429874 <__ctype_b_loc@plt+0x275a4>
  41e5ea:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e5ee:	add    rax,rcx
  41e5f1:	jmp    rax
  41e5f3:	vmovq  xmm0,QWORD PTR [rbp+0x0]
  41e5f8:	lea    rsi,[rip+0xb822]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41e5ff:	mov    r14,rsp
  41e602:	mov    rdi,r14
  41e605:	mov    al,0x1
  41e607:	call   402270 <sprintf@plt>
  41e60c:	mov    rdi,r14
  41e60f:	call   4020e0 <strlen@plt>
  41e614:	mov    rdi,r13
  41e617:	mov    rsi,r14
  41e61a:	mov    rdx,rax
  41e61d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41e622:	mov    QWORD PTR [rbp+0x0],rax
  41e626:	mov    DWORD PTR [rbp+0x8],0x4
  41e62d:	jmp    41e633 <__ctype_b_loc@plt+0x1c363>
  41e62f:	mov    rax,QWORD PTR [rbp+0x0]
  41e633:	mov    r14,QWORD PTR [rax+0x10]
  41e637:	jmp    41e64f <__ctype_b_loc@plt+0x1c37f>
  41e639:	mov    rdi,QWORD PTR [rbp+0x0]
  41e63d:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41e642:	movsxd r14,eax
  41e645:	jmp    41e64f <__ctype_b_loc@plt+0x1c37f>
  41e647:	mov    rax,QWORD PTR [rbp+0x0]
  41e64b:	mov    r14,QWORD PTR [rax+0x20]
  41e64f:	movsxd rdx,r14d
  41e652:	mov    rdi,r13
  41e655:	mov    esi,0x2
  41e65a:	call   410640 <__ctype_b_loc@plt+0xe370>
  41e65f:	mov    rcx,rax
  41e662:	test   ecx,ecx
  41e664:	jle    41e83d <__ctype_b_loc@plt+0x1c56d>
  41e66a:	cmp    ecx,r14d
  41e66d:	jg     41e83d <__ctype_b_loc@plt+0x1c56d>
  41e673:	mov    rsi,QWORD PTR [r13+0x10]
  41e677:	mov    rax,QWORD PTR [r13+0x18]
  41e67b:	cmp    rax,rsi
  41e67e:	cmovae rax,r12
  41e682:	mov    rdi,QWORD PTR [rax]
  41e685:	lea    eax,[rcx-0x1]
  41e688:	cmp    eax,DWORD PTR [rdi+0x38]
  41e68b:	jae    41e69a <__ctype_b_loc@plt+0x1c3ca>
  41e68d:	movsxd r12,eax
  41e690:	shl    r12,0x4
  41e694:	add    r12,QWORD PTR [rdi+0x18]
  41e698:	jmp    41e6ff <__ctype_b_loc@plt+0x1c42f>
  41e69a:	vcvtsi2sd xmm0,xmm1,ecx
  41e69e:	vmovq  rdx,xmm0
  41e6a3:	mov    rax,rdx
  41e6a6:	shr    rax,0x20
  41e6aa:	add    eax,edx
  41e6ac:	mov    dl,BYTE PTR [rdi+0xb]
  41e6af:	mov    rbp,0xffffffffffffffff
  41e6b6:	shlx   rbp,rbp,rdx
  41e6bb:	or     rbp,0x1
  41e6bf:	xor    rbp,0xfffffffffffffffe
  41e6c3:	xor    edx,edx
  41e6c5:	div    rbp
  41e6c8:	lea    rax,[rdx+rdx*4]
  41e6cc:	shl    rax,0x3
  41e6d0:	add    rax,QWORD PTR [rdi+0x20]
  41e6d4:	cmp    DWORD PTR [rax+0x18],0x3
  41e6d8:	je     41e6ef <__ctype_b_loc@plt+0x1c41f>
  41e6da:	nop    WORD PTR [rax+rax*1+0x0]
  41e6e0:	mov    rax,QWORD PTR [rax+0x20]
  41e6e4:	test   rax,rax
  41e6e7:	je     41e6ff <__ctype_b_loc@plt+0x1c42f>
  41e6e9:	cmp    DWORD PTR [rax+0x18],0x3
  41e6ed:	jne    41e6e0 <__ctype_b_loc@plt+0x1c410>
  41e6ef:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41e6f4:	vucomisd xmm1,xmm0
  41e6f8:	jne    41e6e0 <__ctype_b_loc@plt+0x1c410>
  41e6fa:	jp     41e6e0 <__ctype_b_loc@plt+0x1c410>
  41e6fc:	mov    r12,rax
  41e6ff:	mov    rax,QWORD PTR [r12]
  41e703:	mov    QWORD PTR [rsi],rax
  41e706:	mov    eax,DWORD PTR [r12+0x8]
  41e70b:	mov    DWORD PTR [rsi+0x8],eax
  41e70e:	mov    rsi,QWORD PTR [r13+0x10]
  41e712:	add    rsi,0x10
  41e716:	mov    QWORD PTR [r13+0x10],rsi
  41e71a:	cmp    ecx,r14d
  41e71d:	jge    41e818 <__ctype_b_loc@plt+0x1c548>
  41e723:	movsxd rbp,ecx
  41e726:	lea    r15,[rip+0xb3eb]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e72d:	mov    r12,0xffffffffffffffff
  41e734:	jmp    41e778 <__ctype_b_loc@plt+0x1c4a8>
  41e736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e740:	mov    rax,rcx
  41e743:	shl    rax,0x4
  41e747:	add    rax,QWORD PTR [rdi+0x18]
  41e74b:	mov    rdx,QWORD PTR [rax]
  41e74e:	mov    QWORD PTR [rsi],rdx
  41e751:	mov    eax,DWORD PTR [rax+0x8]
  41e754:	mov    DWORD PTR [rsi+0x8],eax
  41e757:	add    QWORD PTR [r13+0x10],0x10
  41e75c:	mov    rdi,r13
  41e75f:	mov    esi,0x1
  41e764:	mov    edx,ecx
  41e766:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41e76b:	mov    rsi,QWORD PTR [r13+0x10]
  41e76f:	cmp    ebp,r14d
  41e772:	je     41e818 <__ctype_b_loc@plt+0x1c548>
  41e778:	mov    rcx,rbp
  41e77b:	inc    rbp
  41e77e:	mov    rax,QWORD PTR [r13+0x18]
  41e782:	cmp    rax,rsi
  41e785:	cmovae rax,r15
  41e789:	mov    rdi,QWORD PTR [rax]
  41e78c:	cmp    DWORD PTR [rdi+0x38],ecx
  41e78f:	ja     41e740 <__ctype_b_loc@plt+0x1c470>
  41e791:	vcvtsi2sd xmm0,xmm2,ebp
  41e795:	test   ebp,ebp
  41e797:	je     41e7d0 <__ctype_b_loc@plt+0x1c500>
  41e799:	vmovq  rdx,xmm0
  41e79e:	mov    rax,rdx
  41e7a1:	shr    rax,0x20
  41e7a5:	add    eax,edx
  41e7a7:	mov    dl,BYTE PTR [rdi+0xb]
  41e7aa:	shlx   rbx,r12,rdx
  41e7af:	or     rbx,0x1
  41e7b3:	xor    rbx,0xfffffffffffffffe
  41e7b7:	xor    edx,edx
  41e7b9:	div    rbx
  41e7bc:	lea    rax,[rdx+rdx*4]
  41e7c0:	shl    rax,0x3
  41e7c4:	add    rax,QWORD PTR [rdi+0x20]
  41e7c8:	cmp    DWORD PTR [rax+0x18],0x3
  41e7cc:	jne    41e7e0 <__ctype_b_loc@plt+0x1c510>
  41e7ce:	jmp    41e7ef <__ctype_b_loc@plt+0x1c51f>
  41e7d0:	mov    rax,QWORD PTR [rdi+0x20]
  41e7d4:	cmp    DWORD PTR [rax+0x18],0x3
  41e7d8:	je     41e7ef <__ctype_b_loc@plt+0x1c51f>
  41e7da:	nop    WORD PTR [rax+rax*1+0x0]
  41e7e0:	mov    rax,QWORD PTR [rax+0x20]
  41e7e4:	test   rax,rax
  41e7e7:	je     41e810 <__ctype_b_loc@plt+0x1c540>
  41e7e9:	cmp    DWORD PTR [rax+0x18],0x3
  41e7ed:	jne    41e7e0 <__ctype_b_loc@plt+0x1c510>
  41e7ef:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41e7f4:	vucomisd xmm1,xmm0
  41e7f8:	jne    41e7e0 <__ctype_b_loc@plt+0x1c510>
  41e7fa:	jp     41e7e0 <__ctype_b_loc@plt+0x1c510>
  41e7fc:	jmp    41e74b <__ctype_b_loc@plt+0x1c47b>
  41e801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e80b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e810:	mov    rax,r15
  41e813:	jmp    41e74b <__ctype_b_loc@plt+0x1c47b>
  41e818:	mov    DWORD PTR [rsi+0x8],0x0
  41e81f:	add    rsi,0x10
  41e823:	mov    QWORD PTR [r13+0x10],rsi
  41e827:	mov    r15d,0x1
  41e82d:	mov    rdi,r13
  41e830:	mov    esi,0x1
  41e835:	mov    edx,r14d
  41e838:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41e83d:	mov    eax,r15d
  41e840:	add    rsp,0x28
  41e844:	pop    rbx
  41e845:	pop    r12
  41e847:	pop    r13
  41e849:	pop    r14
  41e84b:	pop    r15
  41e84d:	pop    rbp
  41e84e:	ret    
  41e84f:	nop
  41e850:	push   rbp
  41e851:	push   r15
  41e853:	push   r14
  41e855:	push   r13
  41e857:	push   r12
  41e859:	push   rbx
  41e85a:	sub    rsp,0x78
  41e85e:	mov    r12,rdi
  41e861:	mov    rbx,QWORD PTR [rdi+0x18]
  41e865:	lea    r15,[rip+0xb2ac]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41e86c:	lea    rcx,[rip+0xb963]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  41e873:	cmp    rbx,r15
  41e876:	je     41e89c <__ctype_b_loc@plt+0x1c5cc>
  41e878:	mov    r13,QWORD PTR [r12+0x10]
  41e87d:	cmp    rbx,r13
  41e880:	jae    41e89c <__ctype_b_loc@plt+0x1c5cc>
  41e882:	movsxd rax,DWORD PTR [rbx+0x8]
  41e886:	cmp    rax,0xffffffffffffffff
  41e88a:	je     41e89c <__ctype_b_loc@plt+0x1c5cc>
  41e88c:	cmp    eax,0x5
  41e88f:	je     41e8ce <__ctype_b_loc@plt+0x1c5fe>
  41e891:	lea    rcx,[rip+0x11048]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41e898:	mov    rcx,QWORD PTR [rcx+rax*8]
  41e89c:	lea    rsi,[rip+0xb91f]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41e8a3:	lea    rdx,[rip+0xbd60]        # 42a60a <__ctype_b_loc@plt+0x2833a>
  41e8aa:	mov    rdi,r12
  41e8ad:	xor    eax,eax
  41e8af:	call   410460 <__ctype_b_loc@plt+0xe190>
  41e8b4:	mov    rdi,r12
  41e8b7:	mov    esi,0x1
  41e8bc:	mov    rdx,rax
  41e8bf:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  41e8c4:	mov    r13,QWORD PTR [r12+0x10]
  41e8c9:	mov    rbx,QWORD PTR [r12+0x18]
  41e8ce:	cmp    rbx,r13
  41e8d1:	mov    rbp,r15
  41e8d4:	cmovb  rbp,rbx
  41e8d8:	mov    eax,DWORD PTR [rbp+0x8]
  41e8db:	xor    r14d,r14d
  41e8de:	add    eax,0xfffffffd
  41e8e1:	cmp    eax,0x4
  41e8e4:	ja     41e960 <__ctype_b_loc@plt+0x1c690>
  41e8e6:	lea    rcx,[rip+0xaf9b]        # 429888 <__ctype_b_loc@plt+0x275b8>
  41e8ed:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e8f1:	add    rax,rcx
  41e8f4:	jmp    rax
  41e8f6:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  41e8fb:	lea    rsi,[rip+0xb51f]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41e902:	mov    r14,rsp
  41e905:	mov    rdi,r14
  41e908:	mov    al,0x1
  41e90a:	call   402270 <sprintf@plt>
  41e90f:	mov    rdi,r14
  41e912:	call   4020e0 <strlen@plt>
  41e917:	mov    rdi,r12
  41e91a:	mov    rsi,r14
  41e91d:	mov    rdx,rax
  41e920:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41e925:	mov    QWORD PTR [rbp+0x0],rax
  41e929:	mov    DWORD PTR [rbp+0x8],0x4
  41e930:	mov    r14,QWORD PTR [rax+0x10]
  41e934:	mov    r13,QWORD PTR [r12+0x10]
  41e939:	mov    rbx,QWORD PTR [r12+0x18]
  41e93e:	jmp    41e960 <__ctype_b_loc@plt+0x1c690>
  41e940:	mov    rax,QWORD PTR [rbp+0x0]
  41e944:	mov    r14,QWORD PTR [rax+0x10]
  41e948:	jmp    41e960 <__ctype_b_loc@plt+0x1c690>
  41e94a:	mov    rdi,QWORD PTR [rbp+0x0]
  41e94e:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41e953:	movsxd r14,eax
  41e956:	jmp    41e960 <__ctype_b_loc@plt+0x1c690>
  41e958:	mov    rax,QWORD PTR [rbp+0x0]
  41e95c:	mov    r14,QWORD PTR [rax+0x20]
  41e960:	mov    rax,r13
  41e963:	sub    rax,rbx
  41e966:	cmp    rax,0x1f180
  41e96c:	jle    41e98d <__ctype_b_loc@plt+0x1c6bd>
  41e96e:	lea    rsi,[rip+0xbd66]        # 42a6db <__ctype_b_loc@plt+0x2840b>
  41e975:	lea    rdx,[rip+0xb71f]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  41e97c:	mov    rdi,r12
  41e97f:	xor    eax,eax
  41e981:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41e986:	mov    rax,QWORD PTR [r12+0x10]
  41e98b:	jmp    41e9d1 <__ctype_b_loc@plt+0x1c701>
  41e98d:	mov    rax,QWORD PTR [r12+0x38]
  41e992:	sub    rax,r13
  41e995:	cmp    rax,0x280
  41e99b:	jg     41e9b6 <__ctype_b_loc@plt+0x1c6e6>
  41e99d:	mov    eax,DWORD PTR [r12+0x58]
  41e9a2:	lea    ecx,[rax+0x28]
  41e9a5:	lea    esi,[rax+rax*1]
  41e9a8:	cmp    eax,0x28
  41e9ab:	cmovl  esi,ecx
  41e9ae:	mov    rdi,r12
  41e9b1:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  41e9b6:	mov    rax,QWORD PTR [r12+0x10]
  41e9bb:	mov    rcx,QWORD PTR [r12+0x28]
  41e9c0:	lea    rdx,[rax+0x280]
  41e9c7:	cmp    QWORD PTR [rcx+0x10],rdx
  41e9cb:	jae    41e9d1 <__ctype_b_loc@plt+0x1c701>
  41e9cd:	mov    QWORD PTR [rcx+0x10],rdx
  41e9d1:	mov    rcx,QWORD PTR [r12+0x18]
  41e9d6:	lea    rdx,[rcx+0x10]
  41e9da:	cmp    rdx,rax
  41e9dd:	jae    41eabf <__ctype_b_loc@plt+0x1c7ef>
  41e9e3:	cmp    rdx,r15
  41e9e6:	je     41eabf <__ctype_b_loc@plt+0x1c7ef>
  41e9ec:	movsxd rdx,DWORD PTR [rcx+0x18]
  41e9f0:	test   rdx,rdx
  41e9f3:	jle    41eabf <__ctype_b_loc@plt+0x1c7ef>
  41e9f9:	cmp    edx,0x6
  41e9fc:	je     41eabf <__ctype_b_loc@plt+0x1c7ef>
  41ea02:	lea    rax,[rip+0x10ed7]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  41ea09:	mov    rcx,QWORD PTR [rax+rdx*8]
  41ea0d:	lea    rsi,[rip+0xb7ae]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  41ea14:	lea    rdx,[rip+0xb948]        # 42a363 <__ctype_b_loc@plt+0x28093>
  41ea1b:	mov    rdi,r12
  41ea1e:	xor    eax,eax
  41ea20:	call   410460 <__ctype_b_loc@plt+0xe190>
  41ea25:	mov    r15,rax
  41ea28:	mov    rax,QWORD PTR [r12+0x28]
  41ea2d:	sub    rax,QWORD PTR [r12+0x50]
  41ea32:	jbe    41ea9c <__ctype_b_loc@plt+0x1c7cc>
  41ea34:	shr    rax,0x3
  41ea38:	imul   eax,eax,0xcccccccd
  41ea3e:	mov    DWORD PTR [rsp+0x74],eax
  41ea42:	lea    rsi,[rip+0xb40e]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  41ea49:	mov    rdx,rsp
  41ea4c:	mov    rdi,r12
  41ea4f:	call   410000 <__ctype_b_loc@plt+0xdd30>
  41ea54:	mov    rdi,QWORD PTR [rsp+0x10]
  41ea59:	lea    rsi,[rip+0xb6f0]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  41ea60:	call   402170 <strcmp@plt>
  41ea65:	cmp    eax,0x1
  41ea68:	mov    edx,0x2
  41ea6d:	sbb    edx,0x0
  41ea70:	mov    rcx,QWORD PTR [rsp+0x8]
  41ea75:	test   rcx,rcx
  41ea78:	jne    41ea86 <__ctype_b_loc@plt+0x1c7b6>
  41ea7a:	lea    rcx,[rip+0xb6f4]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  41ea81:	mov    QWORD PTR [rsp+0x8],rcx
  41ea86:	lea    rsi,[rip+0xb6ea]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  41ea8d:	mov    rdi,r12
  41ea90:	mov    r8,r15
  41ea93:	xor    eax,eax
  41ea95:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41ea9a:	jmp    41eab5 <__ctype_b_loc@plt+0x1c7e5>
  41ea9c:	lea    rsi,[rip+0xb697]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  41eaa3:	mov    rdi,r12
  41eaa6:	mov    edx,0x2
  41eaab:	mov    rcx,r15
  41eaae:	xor    eax,eax
  41eab0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41eab5:	mov    rax,QWORD PTR [r12+0x10]
  41eaba:	mov    rcx,QWORD PTR [r12+0x18]
  41eabf:	lea    rdx,[rcx+0x20]
  41eac3:	cmp    rax,rdx
  41eac6:	jae    41eb46 <__ctype_b_loc@plt+0x1c876>
  41eac8:	sub    rcx,rax
  41eacb:	add    rcx,0x1f
  41eacf:	mov    esi,ecx
  41ead1:	shr    esi,0x4
  41ead4:	inc    esi
  41ead6:	and    rsi,0x7
  41eada:	je     41eaf0 <__ctype_b_loc@plt+0x1c820>
  41eadc:	nop    DWORD PTR [rax+0x0]
  41eae0:	mov    DWORD PTR [rax+0x8],0x0
  41eae7:	add    rax,0x10
  41eaeb:	dec    rsi
  41eaee:	jne    41eae0 <__ctype_b_loc@plt+0x1c810>
  41eaf0:	cmp    rcx,0x70
  41eaf4:	jb     41eb41 <__ctype_b_loc@plt+0x1c871>
  41eaf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb00:	mov    DWORD PTR [rax+0x8],0x0
  41eb07:	mov    DWORD PTR [rax+0x18],0x0
  41eb0e:	mov    DWORD PTR [rax+0x28],0x0
  41eb15:	mov    DWORD PTR [rax+0x38],0x0
  41eb1c:	mov    DWORD PTR [rax+0x48],0x0
  41eb23:	mov    DWORD PTR [rax+0x58],0x0
  41eb2a:	mov    DWORD PTR [rax+0x68],0x0
  41eb31:	mov    DWORD PTR [rax+0x78],0x0
  41eb38:	sub    rax,0xffffffffffffff80
  41eb3c:	cmp    rax,rdx
  41eb3f:	jb     41eb00 <__ctype_b_loc@plt+0x1c830>
  41eb41:	mov    QWORD PTR [r12+0x10],rax
  41eb46:	mov    QWORD PTR [r12+0x10],rdx
  41eb4b:	mov    rdi,r12
  41eb4e:	mov    esi,0x1
  41eb53:	mov    edx,r14d
  41eb56:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  41eb5b:	xor    eax,eax
  41eb5d:	add    rsp,0x78
  41eb61:	pop    rbx
  41eb62:	pop    r12
  41eb64:	pop    r13
  41eb66:	pop    r14
  41eb68:	pop    r15
  41eb6a:	pop    rbp
  41eb6b:	ret    
  41eb6c:	nop    DWORD PTR [rax+0x0]
  41eb70:	push   rbp
  41eb71:	push   r15
  41eb73:	push   r14
  41eb75:	push   r12
  41eb77:	push   rbx
  41eb78:	mov    r14,rdi
  41eb7b:	mov    rbp,QWORD PTR [rdi]
  41eb7e:	lea    r15,[rdi+0x18]
  41eb82:	sub    rbp,r15
  41eb85:	je     41ebd4 <__ctype_b_loc@plt+0x1c904>
  41eb87:	mov    rbx,QWORD PTR [r14+0x10]
  41eb8b:	mov    rax,QWORD PTR [rbx+0x20]
  41eb8f:	mov    rcx,QWORD PTR [rax+0x78]
  41eb93:	cmp    rcx,QWORD PTR [rax+0x70]
  41eb97:	jb     41eba1 <__ctype_b_loc@plt+0x1c8d1>
  41eb99:	mov    rdi,rbx
  41eb9c:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41eba1:	mov    r12,QWORD PTR [rbx+0x10]
  41eba5:	mov    rdi,rbx
  41eba8:	mov    rsi,r15
  41ebab:	mov    rdx,rbp
  41ebae:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41ebb3:	mov    QWORD PTR [r12],rax
  41ebb7:	mov    DWORD PTR [r12+0x8],0x4
  41ebc0:	add    QWORD PTR [rbx+0x10],0x10
  41ebc5:	mov    QWORD PTR [r14],r15
  41ebc8:	mov    ebp,DWORD PTR [r14+0x8]
  41ebcc:	inc    ebp
  41ebce:	mov    DWORD PTR [r14+0x8],ebp
  41ebd2:	jmp    41ebd8 <__ctype_b_loc@plt+0x1c908>
  41ebd4:	mov    ebp,DWORD PTR [r14+0x8]
  41ebd8:	mov    rbx,QWORD PTR [r14+0x10]
  41ebdc:	cmp    ebp,0x2
  41ebdf:	jl     41ec23 <__ctype_b_loc@plt+0x1c953>
  41ebe1:	mov    rax,QWORD PTR [rbx+0x20]
  41ebe5:	mov    rcx,QWORD PTR [rax+0x78]
  41ebe9:	cmp    rcx,QWORD PTR [rax+0x70]
  41ebed:	jb     41ebf7 <__ctype_b_loc@plt+0x1c927>
  41ebef:	mov    rdi,rbx
  41ebf2:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41ebf7:	lea    r15,[rbx+0x10]
  41ebfb:	mov    rdx,QWORD PTR [rbx+0x10]
  41ebff:	sub    rdx,QWORD PTR [rbx+0x18]
  41ec03:	shr    rdx,0x4
  41ec07:	dec    edx
  41ec09:	mov    rdi,rbx
  41ec0c:	mov    esi,ebp
  41ec0e:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  41ec13:	movsxd rcx,ebp
  41ec16:	shl    rcx,0x4
  41ec1a:	mov    rax,QWORD PTR [rbx+0x10]
  41ec1e:	sub    rax,rcx
  41ec21:	jmp    41ec4f <__ctype_b_loc@plt+0x1c97f>
  41ec23:	test   ebp,ebp
  41ec25:	jne    41ec56 <__ctype_b_loc@plt+0x1c986>
  41ec27:	mov    rbp,QWORD PTR [rbx+0x10]
  41ec2b:	lea    rsi,[rip+0xb469]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  41ec32:	mov    rdi,rbx
  41ec35:	xor    edx,edx
  41ec37:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41ec3c:	mov    QWORD PTR [rbp+0x0],rax
  41ec40:	mov    DWORD PTR [rbp+0x8],0x4
  41ec47:	mov    rax,QWORD PTR [rbx+0x10]
  41ec4b:	lea    r15,[rbx+0x10]
  41ec4f:	add    rax,0x10
  41ec53:	mov    QWORD PTR [r15],rax
  41ec56:	mov    DWORD PTR [r14+0x8],0x1
  41ec5e:	pop    rbx
  41ec5f:	pop    r12
  41ec61:	pop    r14
  41ec63:	pop    r15
  41ec65:	pop    rbp
  41ec66:	ret    
  41ec67:	nop    WORD PTR [rax+rax*1+0x0]
  41ec70:	push   rbp
  41ec71:	push   r15
  41ec73:	push   r14
  41ec75:	push   r13
  41ec77:	push   r12
  41ec79:	push   rbx
  41ec7a:	sub    rsp,0x48
  41ec7e:	mov    r15,QWORD PTR [rdi+0x10]
  41ec82:	mov    rbp,QWORD PTR [r15+0x10]
  41ec86:	mov    eax,DWORD PTR [rbp-0x8]
  41ec89:	cmp    eax,0x4
  41ec8c:	mov    QWORD PTR [rsp+0x8],rdi
  41ec91:	je     41ed01 <__ctype_b_loc@plt+0x1ca31>
  41ec93:	xor    r13d,r13d
  41ec96:	mov    esi,0x0
  41ec9b:	cmp    eax,0x3
  41ec9e:	jne    41ed11 <__ctype_b_loc@plt+0x1ca41>
  41eca0:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41eca5:	lea    rsi,[rip+0xb175]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41ecac:	lea    rbx,[rsp+0x20]
  41ecb1:	mov    rdi,rbx
  41ecb4:	mov    al,0x1
  41ecb6:	call   402270 <sprintf@plt>
  41ecbb:	mov    rdi,rbx
  41ecbe:	call   4020e0 <strlen@plt>
  41ecc3:	mov    rdi,r15
  41ecc6:	mov    rsi,rbx
  41ecc9:	mov    rdx,rax
  41eccc:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41ecd1:	mov    QWORD PTR [rbp-0x10],rax
  41ecd5:	mov    DWORD PTR [rbp-0x8],0x4
  41ecdc:	mov    rax,QWORD PTR [r15+0x20]
  41ece0:	mov    rcx,QWORD PTR [rax+0x78]
  41ece4:	cmp    rcx,QWORD PTR [rax+0x70]
  41ece8:	jb     41ecf2 <__ctype_b_loc@plt+0x1ca22>
  41ecea:	mov    rdi,r15
  41eced:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41ecf2:	mov    rbp,QWORD PTR [r15+0x10]
  41ecf6:	add    rbp,0xfffffffffffffff0
  41ecfa:	mov    rdi,QWORD PTR [rsp+0x8]
  41ecff:	jmp    41ed05 <__ctype_b_loc@plt+0x1ca35>
  41ed01:	add    rbp,0xfffffffffffffff0
  41ed05:	mov    rsi,QWORD PTR [rbp+0x0]
  41ed09:	mov    r13,QWORD PTR [rsi+0x10]
  41ed0d:	add    rsi,0x18
  41ed11:	mov    rbx,QWORD PTR [rdi]
  41ed14:	lea    r12,[rdi+0x18]
  41ed18:	mov    rax,r12
  41ed1b:	sub    rax,rbx
  41ed1e:	add    rax,0x2000
  41ed24:	cmp    r13,rax
  41ed27:	jbe    41ee26 <__ctype_b_loc@plt+0x1cb56>
  41ed2d:	sub    rbx,r12
  41ed30:	je     41eda9 <__ctype_b_loc@plt+0x1cad9>
  41ed32:	mov    r13,QWORD PTR [rdi+0x10]
  41ed36:	mov    rax,QWORD PTR [r13+0x20]
  41ed3a:	mov    rcx,QWORD PTR [rax+0x78]
  41ed3e:	cmp    rcx,QWORD PTR [rax+0x70]
  41ed42:	jb     41ed4c <__ctype_b_loc@plt+0x1ca7c>
  41ed44:	mov    rdi,r13
  41ed47:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41ed4c:	mov    rbp,QWORD PTR [r13+0x10]
  41ed50:	mov    rdi,r13
  41ed53:	mov    rsi,r12
  41ed56:	mov    rdx,rbx
  41ed59:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41ed5e:	mov    QWORD PTR [rbp+0x0],rax
  41ed62:	mov    DWORD PTR [rbp+0x8],0x4
  41ed69:	add    QWORD PTR [r13+0x10],0x10
  41ed6e:	mov    rdi,QWORD PTR [rsp+0x8]
  41ed73:	mov    QWORD PTR [rdi],r12
  41ed76:	inc    DWORD PTR [rdi+0x8]
  41ed79:	mov    rax,QWORD PTR [r15+0x10]
  41ed7d:	mov    rcx,QWORD PTR [rax-0x10]
  41ed81:	mov    QWORD PTR [rax],rcx
  41ed84:	mov    ecx,DWORD PTR [rax-0x8]
  41ed87:	mov    DWORD PTR [rax+0x8],ecx
  41ed8a:	mov    rcx,QWORD PTR [rax-0x20]
  41ed8e:	mov    QWORD PTR [rax-0x10],rcx
  41ed92:	mov    ecx,DWORD PTR [rax-0x18]
  41ed95:	mov    DWORD PTR [rax-0x8],ecx
  41ed98:	mov    rcx,QWORD PTR [r15+0x10]
  41ed9c:	mov    rdx,QWORD PTR [rcx]
  41ed9f:	mov    QWORD PTR [rax-0x20],rdx
  41eda3:	mov    ecx,DWORD PTR [rcx+0x8]
  41eda6:	mov    DWORD PTR [rax-0x18],ecx
  41eda9:	mov    eax,DWORD PTR [rdi+0x8]
  41edac:	lea    ecx,[rax+0x1]
  41edaf:	mov    DWORD PTR [rdi+0x8],ecx
  41edb2:	test   eax,eax
  41edb4:	jle    41f0aa <__ctype_b_loc@plt+0x1cdda>
  41edba:	mov    r15,QWORD PTR [rdi+0x10]
  41edbe:	mov    rbx,QWORD PTR [r15+0x10]
  41edc2:	mov    eax,DWORD PTR [rbx-0x8]
  41edc5:	xor    ebp,ebp
  41edc7:	add    eax,0xfffffffd
  41edca:	cmp    eax,0x4
  41edcd:	ja     41ee67 <__ctype_b_loc@plt+0x1cb97>
  41edd3:	lea    rcx,[rip+0xaac2]        # 42989c <__ctype_b_loc@plt+0x275cc>
  41edda:	movsxd rax,DWORD PTR [rcx+rax*4]
  41edde:	add    rax,rcx
  41ede1:	jmp    rax
  41ede3:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  41ede8:	lea    rsi,[rip+0xb032]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41edef:	lea    rbp,[rsp+0x20]
  41edf4:	mov    rdi,rbp
  41edf7:	mov    al,0x1
  41edf9:	call   402270 <sprintf@plt>
  41edfe:	mov    rdi,rbp
  41ee01:	call   4020e0 <strlen@plt>
  41ee06:	mov    rdi,r15
  41ee09:	mov    rsi,rbp
  41ee0c:	mov    rdx,rax
  41ee0f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41ee14:	mov    rdi,QWORD PTR [rsp+0x8]
  41ee19:	mov    QWORD PTR [rbx-0x10],rax
  41ee1d:	mov    DWORD PTR [rbx-0x8],0x4
  41ee24:	jmp    41ee46 <__ctype_b_loc@plt+0x1cb76>
  41ee26:	mov    rbp,rdi
  41ee29:	mov    rdi,rbx
  41ee2c:	mov    rdx,r13
  41ee2f:	call   4021b0 <memcpy@plt>
  41ee34:	add    QWORD PTR [rbp+0x0],r13
  41ee38:	add    QWORD PTR [r15+0x10],0xfffffffffffffff0
  41ee3d:	jmp    41f0aa <__ctype_b_loc@plt+0x1cdda>
  41ee42:	mov    rax,QWORD PTR [rbx-0x10]
  41ee46:	mov    rbp,QWORD PTR [rax+0x10]
  41ee4a:	jmp    41ee67 <__ctype_b_loc@plt+0x1cb97>
  41ee4c:	mov    rdi,QWORD PTR [rbx-0x10]
  41ee50:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41ee55:	mov    rdi,QWORD PTR [rsp+0x8]
  41ee5a:	movsxd rbp,eax
  41ee5d:	jmp    41ee67 <__ctype_b_loc@plt+0x1cb97>
  41ee5f:	mov    rax,QWORD PTR [rbx-0x10]
  41ee63:	mov    rbp,QWORD PTR [rax+0x20]
  41ee67:	lea    rax,[r15+0x78]
  41ee6b:	mov    QWORD PTR [rsp+0x18],rax
  41ee70:	lea    rax,[r15+0x88]
  41ee77:	mov    QWORD PTR [rsp+0x10],rax
  41ee7c:	mov    r14d,0x1
  41ee82:	lea    r13,[rip+0xaa27]        # 4298b0 <__ctype_b_loc@plt+0x275e0>
  41ee89:	nop    DWORD PTR [rax+0x0]
  41ee90:	mov    eax,r14d
  41ee93:	not    eax
  41ee95:	cmp    r14d,0x270e
  41ee9c:	ja     41ef10 <__ctype_b_loc@plt+0x1cc40>
  41ee9e:	movsxd r12,eax
  41eea1:	shl    r12,0x4
  41eea5:	add    r12,QWORD PTR [r15+0x10]
  41eea9:	mov    eax,DWORD PTR [r12+0x8]
  41eeae:	add    eax,0xfffffffd
  41eeb1:	cmp    eax,0x4
  41eeb4:	ja     41efe1 <__ctype_b_loc@plt+0x1cd11>
  41eeba:	movsxd rcx,DWORD PTR [r13+rax*4+0x0]
  41eebf:	add    rcx,r13
  41eec2:	xor    eax,eax
  41eec4:	jmp    rcx
  41eec6:	vmovsd xmm0,QWORD PTR [r12]
  41eecc:	lea    rbx,[rsp+0x20]
  41eed1:	mov    rdi,rbx
  41eed4:	lea    rsi,[rip+0xaf46]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41eedb:	mov    al,0x1
  41eedd:	call   402270 <sprintf@plt>
  41eee2:	mov    rdi,rbx
  41eee5:	call   4020e0 <strlen@plt>
  41eeea:	mov    rdi,r15
  41eeed:	mov    rsi,rbx
  41eef0:	mov    rdx,rax
  41eef3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41eef8:	mov    rdi,QWORD PTR [rsp+0x8]
  41eefd:	mov    QWORD PTR [r12],rax
  41ef01:	mov    DWORD PTR [r12+0x8],0x4
  41ef0a:	jmp    41ef44 <__ctype_b_loc@plt+0x1cc74>
  41ef0c:	nop    DWORD PTR [rax+0x0]
  41ef10:	mov    r12,QWORD PTR [rsp+0x18]
  41ef15:	cmp    eax,0xffffd8ee
  41ef1a:	je     41eea9 <__ctype_b_loc@plt+0x1cbd9>
  41ef1c:	cmp    eax,0xffffd8ef
  41ef21:	je     41ef7a <__ctype_b_loc@plt+0x1ccaa>
  41ef23:	cmp    eax,0xffffd8f0
  41ef28:	jne    41efa5 <__ctype_b_loc@plt+0x1ccd5>
  41ef2a:	mov    r12,QWORD PTR [r15+0x20]
  41ef2e:	mov    eax,0xa0
  41ef33:	add    r12,rax
  41ef36:	jmp    41eea9 <__ctype_b_loc@plt+0x1cbd9>
  41ef3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef40:	mov    rax,QWORD PTR [r12]
  41ef44:	mov    rax,QWORD PTR [rax+0x10]
  41ef48:	jmp    41eff0 <__ctype_b_loc@plt+0x1cd20>
  41ef4d:	nop    DWORD PTR [rax]
  41ef50:	mov    rdi,QWORD PTR [r12]
  41ef54:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41ef59:	mov    rdi,QWORD PTR [rsp+0x8]
  41ef5e:	cdqe   
  41ef60:	jmp    41eff0 <__ctype_b_loc@plt+0x1cd20>
  41ef65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef6f:	nop
  41ef70:	mov    rax,QWORD PTR [r12]
  41ef74:	mov    rax,QWORD PTR [rax+0x20]
  41ef78:	jmp    41eff0 <__ctype_b_loc@plt+0x1cd20>
  41ef7a:	mov    rax,QWORD PTR [r15+0x28]
  41ef7e:	mov    rax,QWORD PTR [rax+0x8]
  41ef82:	mov    rax,QWORD PTR [rax]
  41ef85:	mov    rax,QWORD PTR [rax+0x18]
  41ef89:	mov    QWORD PTR [r15+0x88],rax
  41ef90:	mov    DWORD PTR [r15+0x90],0x5
  41ef9b:	mov    r12,QWORD PTR [rsp+0x10]
  41efa0:	jmp    41eea9 <__ctype_b_loc@plt+0x1cbd9>
  41efa5:	mov    rax,QWORD PTR [r15+0x28]
  41efa9:	mov    rax,QWORD PTR [rax+0x8]
  41efad:	mov    rax,QWORD PTR [rax]
  41efb0:	lea    ecx,[r14-0x2711]
  41efb7:	movzx  edx,BYTE PTR [rax+0xb]
  41efbb:	lea    r12,[rip+0xab56]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41efc2:	cmp    ecx,edx
  41efc4:	jg     41eea9 <__ctype_b_loc@plt+0x1cbd9>
  41efca:	movsxd rcx,r14d
  41efcd:	shl    rcx,0x4
  41efd1:	lea    r12,[rcx+rax*1]
  41efd5:	add    r12,0xfffffffffffd8f08
  41efdc:	jmp    41eea9 <__ctype_b_loc@plt+0x1cbd9>
  41efe1:	xor    eax,eax
  41efe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41efed:	nop    DWORD PTR [rax]
  41eff0:	mov    ecx,DWORD PTR [rdi+0x8]
  41eff3:	mov    edx,ecx
  41eff5:	sub    edx,r14d
  41eff8:	cmp    edx,0x8
  41effb:	setg   dl
  41effe:	cmp    rbp,rax
  41f001:	seta   bl
  41f004:	or     bl,dl
  41f006:	mov    edx,0x0
  41f00b:	cmove  rax,rdx
  41f00f:	movzx  edx,bl
  41f012:	add    r14d,edx
  41f015:	test   dl,dl
  41f017:	je     41f025 <__ctype_b_loc@plt+0x1cd55>
  41f019:	add    rbp,rax
  41f01c:	cmp    r14d,ecx
  41f01f:	jl     41ee90 <__ctype_b_loc@plt+0x1cbc0>
  41f025:	cmp    r14d,0x2
  41f029:	jb     41f06a <__ctype_b_loc@plt+0x1cd9a>
  41f02b:	mov    rax,QWORD PTR [r15+0x20]
  41f02f:	mov    rcx,QWORD PTR [rax+0x78]
  41f033:	cmp    rcx,QWORD PTR [rax+0x70]
  41f037:	jb     41f041 <__ctype_b_loc@plt+0x1cd71>
  41f039:	mov    rdi,r15
  41f03c:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41f041:	mov    rdx,QWORD PTR [r15+0x10]
  41f045:	sub    rdx,QWORD PTR [r15+0x18]
  41f049:	shr    rdx,0x4
  41f04d:	dec    edx
  41f04f:	mov    rdi,r15
  41f052:	mov    esi,r14d
  41f055:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  41f05a:	movsxd rcx,r14d
  41f05d:	shl    rcx,0x4
  41f061:	mov    rax,QWORD PTR [r15+0x10]
  41f065:	sub    rax,rcx
  41f068:	jmp    41f092 <__ctype_b_loc@plt+0x1cdc2>
  41f06a:	test   r14d,r14d
  41f06d:	jne    41f09f <__ctype_b_loc@plt+0x1cdcf>
  41f06f:	mov    rbx,QWORD PTR [r15+0x10]
  41f073:	lea    rsi,[rip+0xb021]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  41f07a:	mov    rdi,r15
  41f07d:	xor    edx,edx
  41f07f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41f084:	mov    QWORD PTR [rbx],rax
  41f087:	mov    DWORD PTR [rbx+0x8],0x4
  41f08e:	mov    rax,QWORD PTR [r15+0x10]
  41f092:	add    rax,0x10
  41f096:	mov    QWORD PTR [r15+0x10],rax
  41f09a:	mov    rdi,QWORD PTR [rsp+0x8]
  41f09f:	mov    eax,DWORD PTR [rdi+0x8]
  41f0a2:	sub    eax,r14d
  41f0a5:	inc    eax
  41f0a7:	mov    DWORD PTR [rdi+0x8],eax
  41f0aa:	add    rsp,0x48
  41f0ae:	pop    rbx
  41f0af:	pop    r12
  41f0b1:	pop    r13
  41f0b3:	pop    r14
  41f0b5:	pop    r15
  41f0b7:	pop    rbp
  41f0b8:	ret    
  41f0b9:	nop    DWORD PTR [rax+0x0]
  41f0c0:	push   rbp
  41f0c1:	push   r15
  41f0c3:	push   r14
  41f0c5:	push   r13
  41f0c7:	push   r12
  41f0c9:	push   rbx
  41f0ca:	sub    rsp,0x48
  41f0ce:	mov    rbx,QWORD PTR [rdi]
  41f0d1:	lea    r15,[rdi+0x18]
  41f0d5:	sub    rbx,r15
  41f0d8:	je     41f415 <__ctype_b_loc@plt+0x1d145>
  41f0de:	mov    QWORD PTR [rsp],rdi
  41f0e2:	mov    rbp,QWORD PTR [rdi+0x10]
  41f0e6:	mov    rax,QWORD PTR [rbp+0x20]
  41f0ea:	mov    rcx,QWORD PTR [rax+0x78]
  41f0ee:	cmp    rcx,QWORD PTR [rax+0x70]
  41f0f2:	jb     41f0fc <__ctype_b_loc@plt+0x1ce2c>
  41f0f4:	mov    rdi,rbp
  41f0f7:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41f0fc:	mov    r14,QWORD PTR [rbp+0x10]
  41f100:	mov    rdi,rbp
  41f103:	mov    rsi,r15
  41f106:	mov    rdx,rbx
  41f109:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41f10e:	mov    QWORD PTR [r14],rax
  41f111:	mov    DWORD PTR [r14+0x8],0x4
  41f119:	add    QWORD PTR [rbp+0x10],0x10
  41f11e:	mov    rsi,QWORD PTR [rsp]
  41f122:	mov    QWORD PTR [rsi],r15
  41f125:	mov    eax,DWORD PTR [rsi+0x8]
  41f128:	lea    ecx,[rax+0x1]
  41f12b:	mov    DWORD PTR [rsi+0x8],ecx
  41f12e:	test   eax,eax
  41f130:	jle    41f415 <__ctype_b_loc@plt+0x1d145>
  41f136:	mov    r12,QWORD PTR [rsi+0x10]
  41f13a:	mov    rbp,QWORD PTR [r12+0x10]
  41f13f:	mov    eax,DWORD PTR [rbp-0x8]
  41f142:	xor    r13d,r13d
  41f145:	add    eax,0xfffffffd
  41f148:	cmp    eax,0x4
  41f14b:	mov    QWORD PTR [rsp+0x8],r15
  41f150:	ja     41f1c8 <__ctype_b_loc@plt+0x1cef8>
  41f152:	lea    rcx,[rip+0xa76b]        # 4298c4 <__ctype_b_loc@plt+0x275f4>
  41f159:	movsxd rax,DWORD PTR [rcx+rax*4]
  41f15d:	add    rax,rcx
  41f160:	jmp    rax
  41f162:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41f167:	lea    rsi,[rip+0xacb3]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41f16e:	lea    rbx,[rsp+0x20]
  41f173:	mov    rdi,rbx
  41f176:	mov    al,0x1
  41f178:	call   402270 <sprintf@plt>
  41f17d:	mov    rdi,rbx
  41f180:	call   4020e0 <strlen@plt>
  41f185:	mov    rdi,r12
  41f188:	mov    rsi,rbx
  41f18b:	mov    rdx,rax
  41f18e:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41f193:	mov    rsi,QWORD PTR [rsp]
  41f197:	mov    QWORD PTR [rbp-0x10],rax
  41f19b:	mov    DWORD PTR [rbp-0x8],0x4
  41f1a2:	jmp    41f1a8 <__ctype_b_loc@plt+0x1ced8>
  41f1a4:	mov    rax,QWORD PTR [rbp-0x10]
  41f1a8:	mov    r13,QWORD PTR [rax+0x10]
  41f1ac:	jmp    41f1c8 <__ctype_b_loc@plt+0x1cef8>
  41f1ae:	mov    rdi,QWORD PTR [rbp-0x10]
  41f1b2:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41f1b7:	mov    rsi,QWORD PTR [rsp]
  41f1bb:	movsxd r13,eax
  41f1be:	jmp    41f1c8 <__ctype_b_loc@plt+0x1cef8>
  41f1c0:	mov    rax,QWORD PTR [rbp-0x10]
  41f1c4:	mov    r13,QWORD PTR [rax+0x20]
  41f1c8:	lea    rax,[r12+0x78]
  41f1cd:	mov    QWORD PTR [rsp+0x18],rax
  41f1d2:	lea    rax,[r12+0x88]
  41f1da:	mov    QWORD PTR [rsp+0x10],rax
  41f1df:	mov    r15d,0x1
  41f1e5:	lea    rbp,[rip+0xa6ec]        # 4298d8 <__ctype_b_loc@plt+0x27608>
  41f1ec:	nop    DWORD PTR [rax+0x0]
  41f1f0:	mov    eax,r15d
  41f1f3:	not    eax
  41f1f5:	cmp    r15d,0x270e
  41f1fc:	ja     41f270 <__ctype_b_loc@plt+0x1cfa0>
  41f1fe:	movsxd r14,eax
  41f201:	shl    r14,0x4
  41f205:	add    r14,QWORD PTR [r12+0x10]
  41f20a:	mov    eax,DWORD PTR [r14+0x8]
  41f20e:	add    eax,0xfffffffd
  41f211:	cmp    eax,0x4
  41f214:	ja     41f344 <__ctype_b_loc@plt+0x1d074>
  41f21a:	movsxd rcx,DWORD PTR [rbp+rax*4+0x0]
  41f21f:	add    rcx,rbp
  41f222:	xor    eax,eax
  41f224:	jmp    rcx
  41f226:	vmovsd xmm0,QWORD PTR [r14]
  41f22b:	lea    rbx,[rsp+0x20]
  41f230:	mov    rdi,rbx
  41f233:	lea    rsi,[rip+0xabe7]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  41f23a:	mov    al,0x1
  41f23c:	call   402270 <sprintf@plt>
  41f241:	mov    rdi,rbx
  41f244:	call   4020e0 <strlen@plt>
  41f249:	mov    rdi,r12
  41f24c:	mov    rsi,rbx
  41f24f:	mov    rdx,rax
  41f252:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41f257:	mov    rsi,QWORD PTR [rsp]
  41f25b:	mov    QWORD PTR [r14],rax
  41f25e:	mov    DWORD PTR [r14+0x8],0x4
  41f266:	jmp    41f2a3 <__ctype_b_loc@plt+0x1cfd3>
  41f268:	nop    DWORD PTR [rax+rax*1+0x0]
  41f270:	mov    r14,QWORD PTR [rsp+0x18]
  41f275:	cmp    eax,0xffffd8ee
  41f27a:	je     41f20a <__ctype_b_loc@plt+0x1cf3a>
  41f27c:	cmp    eax,0xffffd8ef
  41f281:	je     41f2d9 <__ctype_b_loc@plt+0x1d009>
  41f283:	cmp    eax,0xffffd8f0
  41f288:	jne    41f307 <__ctype_b_loc@plt+0x1d037>
  41f28a:	mov    r14,QWORD PTR [r12+0x20]
  41f28f:	mov    eax,0xa0
  41f294:	add    r14,rax
  41f297:	jmp    41f20a <__ctype_b_loc@plt+0x1cf3a>
  41f29c:	nop    DWORD PTR [rax+0x0]
  41f2a0:	mov    rax,QWORD PTR [r14]
  41f2a3:	mov    rax,QWORD PTR [rax+0x10]
  41f2a7:	jmp    41f350 <__ctype_b_loc@plt+0x1d080>
  41f2ac:	nop    DWORD PTR [rax+0x0]
  41f2b0:	mov    rdi,QWORD PTR [r14]
  41f2b3:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  41f2b8:	mov    rsi,QWORD PTR [rsp]
  41f2bc:	cdqe   
  41f2be:	jmp    41f350 <__ctype_b_loc@plt+0x1d080>
  41f2c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2cd:	nop    DWORD PTR [rax]
  41f2d0:	mov    rax,QWORD PTR [r14]
  41f2d3:	mov    rax,QWORD PTR [rax+0x20]
  41f2d7:	jmp    41f350 <__ctype_b_loc@plt+0x1d080>
  41f2d9:	mov    rax,QWORD PTR [r12+0x28]
  41f2de:	mov    rax,QWORD PTR [rax+0x8]
  41f2e2:	mov    rax,QWORD PTR [rax]
  41f2e5:	mov    rax,QWORD PTR [rax+0x18]
  41f2e9:	mov    QWORD PTR [r12+0x88],rax
  41f2f1:	mov    DWORD PTR [r12+0x90],0x5
  41f2fd:	mov    r14,QWORD PTR [rsp+0x10]
  41f302:	jmp    41f20a <__ctype_b_loc@plt+0x1cf3a>
  41f307:	mov    rax,QWORD PTR [r12+0x28]
  41f30c:	mov    rax,QWORD PTR [rax+0x8]
  41f310:	mov    rax,QWORD PTR [rax]
  41f313:	lea    ecx,[r15-0x2711]
  41f31a:	movzx  edx,BYTE PTR [rax+0xb]
  41f31e:	lea    r14,[rip+0xa7f3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f325:	cmp    ecx,edx
  41f327:	jg     41f20a <__ctype_b_loc@plt+0x1cf3a>
  41f32d:	movsxd rcx,r15d
  41f330:	shl    rcx,0x4
  41f334:	lea    r14,[rcx+rax*1]
  41f338:	add    r14,0xfffffffffffd8f08
  41f33f:	jmp    41f20a <__ctype_b_loc@plt+0x1cf3a>
  41f344:	xor    eax,eax
  41f346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f350:	mov    ecx,DWORD PTR [rsi+0x8]
  41f353:	mov    edx,ecx
  41f355:	sub    edx,r15d
  41f358:	cmp    edx,0x8
  41f35b:	setg   dl
  41f35e:	cmp    r13,rax
  41f361:	seta   bl
  41f364:	or     bl,dl
  41f366:	mov    edx,0x0
  41f36b:	cmove  rax,rdx
  41f36f:	movzx  edx,bl
  41f372:	add    r15d,edx
  41f375:	test   dl,dl
  41f377:	je     41f385 <__ctype_b_loc@plt+0x1d0b5>
  41f379:	add    r13,rax
  41f37c:	cmp    r15d,ecx
  41f37f:	jl     41f1f0 <__ctype_b_loc@plt+0x1cf20>
  41f385:	cmp    r15d,0x2
  41f389:	jb     41f3ce <__ctype_b_loc@plt+0x1d0fe>
  41f38b:	mov    rax,QWORD PTR [r12+0x20]
  41f390:	mov    rcx,QWORD PTR [rax+0x78]
  41f394:	cmp    rcx,QWORD PTR [rax+0x70]
  41f398:	jb     41f3a2 <__ctype_b_loc@plt+0x1d0d2>
  41f39a:	mov    rdi,r12
  41f39d:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  41f3a2:	mov    rdx,QWORD PTR [r12+0x10]
  41f3a7:	sub    rdx,QWORD PTR [r12+0x18]
  41f3ac:	shr    rdx,0x4
  41f3b0:	dec    edx
  41f3b2:	mov    rdi,r12
  41f3b5:	mov    esi,r15d
  41f3b8:	call   4048a0 <__ctype_b_loc@plt+0x25d0>
  41f3bd:	movsxd rcx,r15d
  41f3c0:	shl    rcx,0x4
  41f3c4:	mov    rax,QWORD PTR [r12+0x10]
  41f3c9:	sub    rax,rcx
  41f3cc:	jmp    41f3f8 <__ctype_b_loc@plt+0x1d128>
  41f3ce:	test   r15d,r15d
  41f3d1:	jne    41f405 <__ctype_b_loc@plt+0x1d135>
  41f3d3:	mov    rbx,QWORD PTR [r12+0x10]
  41f3d8:	lea    rsi,[rip+0xacbc]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  41f3df:	mov    rdi,r12
  41f3e2:	xor    edx,edx
  41f3e4:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  41f3e9:	mov    QWORD PTR [rbx],rax
  41f3ec:	mov    DWORD PTR [rbx+0x8],0x4
  41f3f3:	mov    rax,QWORD PTR [r12+0x10]
  41f3f8:	add    rax,0x10
  41f3fc:	mov    QWORD PTR [r12+0x10],rax
  41f401:	mov    rsi,QWORD PTR [rsp]
  41f405:	mov    eax,DWORD PTR [rsi+0x8]
  41f408:	sub    eax,r15d
  41f40b:	inc    eax
  41f40d:	mov    DWORD PTR [rsi+0x8],eax
  41f410:	mov    r15,QWORD PTR [rsp+0x8]
  41f415:	mov    rax,r15
  41f418:	add    rsp,0x48
  41f41c:	pop    rbx
  41f41d:	pop    r12
  41f41f:	pop    r13
  41f421:	pop    r14
  41f423:	pop    r15
  41f425:	pop    rbp
  41f426:	ret    
  41f427:	nop    WORD PTR [rax+rax*1+0x0]
  41f430:	push   r14
  41f432:	push   rbx
  41f433:	push   rax
  41f434:	mov    rbx,rdi
  41f437:	cmp    esi,0x1f40
  41f43d:	jg     41f45d <__ctype_b_loc@plt+0x1d18d>
  41f43f:	mov    rax,QWORD PTR [rbx+0x10]
  41f443:	mov    rcx,rax
  41f446:	sub    rcx,QWORD PTR [rbx+0x18]
  41f44a:	sar    rcx,0x4
  41f44e:	movsxd r14,esi
  41f451:	add    rcx,r14
  41f454:	cmp    rcx,0x1f40
  41f45b:	jle    41f475 <__ctype_b_loc@plt+0x1d1a5>
  41f45d:	lea    rsi,[rip+0xb277]        # 42a6db <__ctype_b_loc@plt+0x2840b>
  41f464:	mov    rdi,rbx
  41f467:	xor    eax,eax
  41f469:	add    rsp,0x8
  41f46d:	pop    rbx
  41f46e:	pop    r14
  41f470:	jmp    40fd50 <__ctype_b_loc@plt+0xda80>
  41f475:	test   esi,esi
  41f477:	jle    41f4ba <__ctype_b_loc@plt+0x1d1ea>
  41f479:	mov    rcx,QWORD PTR [rbx+0x38]
  41f47d:	sub    rcx,rax
  41f480:	mov    eax,esi
  41f482:	shl    eax,0x4
  41f485:	cdqe   
  41f487:	cmp    rcx,rax
  41f48a:	jg     41f4a4 <__ctype_b_loc@plt+0x1d1d4>
  41f48c:	mov    ecx,DWORD PTR [rbx+0x58]
  41f48f:	lea    edx,[rcx+rsi*1]
  41f492:	lea    eax,[rcx+rcx*1]
  41f495:	cmp    ecx,esi
  41f497:	cmovl  eax,edx
  41f49a:	mov    rdi,rbx
  41f49d:	mov    esi,eax
  41f49f:	call   404e60 <__ctype_b_loc@plt+0x2b90>
  41f4a4:	mov    rax,QWORD PTR [rbx+0x28]
  41f4a8:	shl    r14,0x4
  41f4ac:	add    r14,QWORD PTR [rbx+0x10]
  41f4b0:	cmp    QWORD PTR [rax+0x10],r14
  41f4b4:	jae    41f4ba <__ctype_b_loc@plt+0x1d1ea>
  41f4b6:	mov    QWORD PTR [rax+0x10],r14
  41f4ba:	add    rsp,0x8
  41f4be:	pop    rbx
  41f4bf:	pop    r14
  41f4c1:	ret    
  41f4c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f4cc:	nop    DWORD PTR [rax+0x0]
  41f4d0:	push   rbp
  41f4d1:	push   r15
  41f4d3:	push   r14
  41f4d5:	push   r13
  41f4d7:	push   r12
  41f4d9:	push   rbx
  41f4da:	sub    rsp,0x38
  41f4de:	cmp    edx,esi
  41f4e0:	jle    42009a <__ctype_b_loc@plt+0x1ddca>
  41f4e6:	mov    r12d,edx
  41f4e9:	mov    r15d,esi
  41f4ec:	mov    rbx,rdi
  41f4ef:	jmp    41f582 <__ctype_b_loc@plt+0x1d2b2>
  41f4f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f4fe:	xchg   ax,ax
  41f500:	movsxd rax,ebp
  41f503:	shl    rax,0x4
  41f507:	add    rax,QWORD PTR [rsi+0x18]
  41f50b:	mov    rdx,QWORD PTR [rax]
  41f50e:	mov    QWORD PTR [rcx+0x10],rdx
  41f512:	mov    eax,DWORD PTR [rax+0x8]
  41f515:	mov    DWORD PTR [rcx+0x18],eax
  41f518:	add    QWORD PTR [rbx+0x10],0x10
  41f51d:	mov    rdi,rbx
  41f520:	mov    esi,0x1
  41f525:	mov    edx,DWORD PTR [rsp+0xc]
  41f529:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f52e:	mov    rdi,rbx
  41f531:	mov    esi,0x1
  41f536:	mov    edx,r14d
  41f539:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f53e:	mov    eax,r12d
  41f541:	sub    eax,r14d
  41f544:	sub    r14d,r15d
  41f547:	lea    esi,[rbp+0x2]
  41f54a:	cmp    r14d,eax
  41f54d:	mov    r14d,r15d
  41f550:	cmovl  r14d,esi
  41f554:	mov    rax,r15
  41f557:	mov    r15d,ebp
  41f55a:	cmovl  r15d,r12d
  41f55e:	cmovl  r12d,ebp
  41f562:	cmovl  esi,eax
  41f565:	mov    rdi,rbx
  41f568:	mov    edx,r12d
  41f56b:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  41f570:	mov    r12d,r15d
  41f573:	mov    eax,r14d
  41f576:	cmp    r15d,r14d
  41f579:	mov    r15,rax
  41f57c:	jle    42009a <__ctype_b_loc@plt+0x1ddca>
  41f582:	mov    rcx,QWORD PTR [rbx+0x10]
  41f586:	mov    rax,QWORD PTR [rbx+0x18]
  41f58a:	cmp    rax,rcx
  41f58d:	lea    rdx,[rip+0xa584]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f594:	cmovae rax,rdx
  41f598:	mov    rsi,QWORD PTR [rax]
  41f59b:	lea    eax,[r15-0x1]
  41f59f:	cmp    eax,DWORD PTR [rsi+0x38]
  41f5a2:	mov    DWORD PTR [rsp+0x18],eax
  41f5a6:	jae    41f5c0 <__ctype_b_loc@plt+0x1d2f0>
  41f5a8:	cdqe   
  41f5aa:	shl    rax,0x4
  41f5ae:	add    rax,QWORD PTR [rsi+0x18]
  41f5b2:	jmp    41f647 <__ctype_b_loc@plt+0x1d377>
  41f5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41f5c0:	vcvtsi2sd xmm0,xmm2,r15d
  41f5c5:	test   r15d,r15d
  41f5c8:	je     41f608 <__ctype_b_loc@plt+0x1d338>
  41f5ca:	vmovq  rdx,xmm0
  41f5cf:	mov    rax,rdx
  41f5d2:	shr    rax,0x20
  41f5d6:	add    eax,edx
  41f5d8:	mov    dl,BYTE PTR [rsi+0xb]
  41f5db:	mov    rdi,0xffffffffffffffff
  41f5e2:	shlx   rdi,rdi,rdx
  41f5e7:	or     rdi,0x1
  41f5eb:	xor    rdi,0xfffffffffffffffe
  41f5ef:	xor    edx,edx
  41f5f1:	div    rdi
  41f5f4:	lea    rax,[rdx+rdx*4]
  41f5f8:	shl    rax,0x3
  41f5fc:	add    rax,QWORD PTR [rsi+0x20]
  41f600:	cmp    DWORD PTR [rax+0x18],0x3
  41f604:	jne    41f620 <__ctype_b_loc@plt+0x1d350>
  41f606:	jmp    41f62f <__ctype_b_loc@plt+0x1d35f>
  41f608:	mov    rax,QWORD PTR [rsi+0x20]
  41f60c:	cmp    DWORD PTR [rax+0x18],0x3
  41f610:	je     41f62f <__ctype_b_loc@plt+0x1d35f>
  41f612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f61c:	nop    DWORD PTR [rax+0x0]
  41f620:	mov    rax,QWORD PTR [rax+0x20]
  41f624:	test   rax,rax
  41f627:	je     41f640 <__ctype_b_loc@plt+0x1d370>
  41f629:	cmp    DWORD PTR [rax+0x18],0x3
  41f62d:	jne    41f620 <__ctype_b_loc@plt+0x1d350>
  41f62f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41f634:	vucomisd xmm1,xmm0
  41f638:	jne    41f620 <__ctype_b_loc@plt+0x1d350>
  41f63a:	jp     41f620 <__ctype_b_loc@plt+0x1d350>
  41f63c:	jmp    41f647 <__ctype_b_loc@plt+0x1d377>
  41f63e:	xchg   ax,ax
  41f640:	lea    rax,[rip+0xa4d1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f647:	mov    rdx,QWORD PTR [rax]
  41f64a:	mov    QWORD PTR [rcx],rdx
  41f64d:	mov    eax,DWORD PTR [rax+0x8]
  41f650:	mov    DWORD PTR [rcx+0x8],eax
  41f653:	mov    rcx,QWORD PTR [rbx+0x10]
  41f657:	mov    rax,QWORD PTR [rbx+0x18]
  41f65b:	lea    rdx,[rcx+0x10]
  41f65f:	mov    QWORD PTR [rbx+0x10],rdx
  41f663:	cmp    rax,rdx
  41f666:	lea    rdx,[rip+0xa4ab]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f66d:	cmovae rax,rdx
  41f671:	mov    rsi,QWORD PTR [rax]
  41f674:	lea    ebp,[r12-0x1]
  41f679:	cmp    ebp,DWORD PTR [rsi+0x38]
  41f67c:	jae    41f690 <__ctype_b_loc@plt+0x1d3c0>
  41f67e:	movsxd rax,ebp
  41f681:	shl    rax,0x4
  41f685:	add    rax,QWORD PTR [rsi+0x18]
  41f689:	jmp    41f717 <__ctype_b_loc@plt+0x1d447>
  41f68e:	xchg   ax,ax
  41f690:	vcvtsi2sd xmm0,xmm2,r12d
  41f695:	test   r12d,r12d
  41f698:	je     41f6d8 <__ctype_b_loc@plt+0x1d408>
  41f69a:	vmovq  rdx,xmm0
  41f69f:	mov    rax,rdx
  41f6a2:	shr    rax,0x20
  41f6a6:	add    eax,edx
  41f6a8:	mov    dl,BYTE PTR [rsi+0xb]
  41f6ab:	mov    rdi,0xffffffffffffffff
  41f6b2:	shlx   rdi,rdi,rdx
  41f6b7:	or     rdi,0x1
  41f6bb:	xor    rdi,0xfffffffffffffffe
  41f6bf:	xor    edx,edx
  41f6c1:	div    rdi
  41f6c4:	lea    rax,[rdx+rdx*4]
  41f6c8:	shl    rax,0x3
  41f6cc:	add    rax,QWORD PTR [rsi+0x20]
  41f6d0:	cmp    DWORD PTR [rax+0x18],0x3
  41f6d4:	jne    41f6f0 <__ctype_b_loc@plt+0x1d420>
  41f6d6:	jmp    41f6ff <__ctype_b_loc@plt+0x1d42f>
  41f6d8:	mov    rax,QWORD PTR [rsi+0x20]
  41f6dc:	cmp    DWORD PTR [rax+0x18],0x3
  41f6e0:	je     41f6ff <__ctype_b_loc@plt+0x1d42f>
  41f6e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f6ec:	nop    DWORD PTR [rax+0x0]
  41f6f0:	mov    rax,QWORD PTR [rax+0x20]
  41f6f4:	test   rax,rax
  41f6f7:	je     41f710 <__ctype_b_loc@plt+0x1d440>
  41f6f9:	cmp    DWORD PTR [rax+0x18],0x3
  41f6fd:	jne    41f6f0 <__ctype_b_loc@plt+0x1d420>
  41f6ff:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41f704:	vucomisd xmm1,xmm0
  41f708:	jne    41f6f0 <__ctype_b_loc@plt+0x1d420>
  41f70a:	jp     41f6f0 <__ctype_b_loc@plt+0x1d420>
  41f70c:	jmp    41f717 <__ctype_b_loc@plt+0x1d447>
  41f70e:	xchg   ax,ax
  41f710:	lea    rax,[rip+0xa401]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f717:	mov    rdx,QWORD PTR [rax]
  41f71a:	mov    QWORD PTR [rcx+0x10],rdx
  41f71e:	mov    eax,DWORD PTR [rax+0x8]
  41f721:	mov    DWORD PTR [rcx+0x18],eax
  41f724:	add    QWORD PTR [rbx+0x10],0x10
  41f729:	mov    rdi,rbx
  41f72c:	mov    esi,0xffffffff
  41f731:	mov    edx,0xfffffffe
  41f736:	call   4200b0 <__ctype_b_loc@plt+0x1dde0>
  41f73b:	test   eax,eax
  41f73d:	mov    DWORD PTR [rsp+0xc],ebp
  41f741:	je     41f770 <__ctype_b_loc@plt+0x1d4a0>
  41f743:	mov    rdi,rbx
  41f746:	mov    esi,0x1
  41f74b:	mov    edx,r15d
  41f74e:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f753:	mov    rdi,rbx
  41f756:	mov    esi,0x1
  41f75b:	mov    edx,r12d
  41f75e:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f763:	jmp    41f775 <__ctype_b_loc@plt+0x1d4a5>
  41f765:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f76f:	nop
  41f770:	add    QWORD PTR [rbx+0x10],0xffffffffffffffe0
  41f775:	mov    ebp,r12d
  41f778:	sub    ebp,r15d
  41f77b:	cmp    ebp,0x1
  41f77e:	je     42009a <__ctype_b_loc@plt+0x1ddca>
  41f784:	lea    r14d,[r12+r15*1]
  41f788:	mov    r13d,r14d
  41f78b:	shr    r13d,0x1f
  41f78f:	add    r13d,r14d
  41f792:	sar    r13d,1
  41f795:	mov    rcx,QWORD PTR [rbx+0x10]
  41f799:	mov    rax,QWORD PTR [rbx+0x18]
  41f79d:	cmp    rax,rcx
  41f7a0:	lea    rdx,[rip+0xa371]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f7a7:	cmovae rax,rdx
  41f7ab:	mov    rsi,QWORD PTR [rax]
  41f7ae:	lea    edx,[r13-0x1]
  41f7b2:	cmp    edx,DWORD PTR [rsi+0x38]
  41f7b5:	mov    DWORD PTR [rsp+0x10],edx
  41f7b9:	jae    41f7d0 <__ctype_b_loc@plt+0x1d500>
  41f7bb:	movsxd rax,edx
  41f7be:	shl    rax,0x4
  41f7c2:	add    rax,QWORD PTR [rsi+0x18]
  41f7c6:	jmp    41f857 <__ctype_b_loc@plt+0x1d587>
  41f7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7d0:	vcvtsi2sd xmm0,xmm2,r13d
  41f7d5:	lea    eax,[r14+0x1]
  41f7d9:	cmp    eax,0x2
  41f7dc:	ja     41f7f0 <__ctype_b_loc@plt+0x1d520>
  41f7de:	mov    rax,QWORD PTR [rsi+0x20]
  41f7e2:	cmp    DWORD PTR [rax+0x18],0x3
  41f7e6:	jne    41f830 <__ctype_b_loc@plt+0x1d560>
  41f7e8:	jmp    41f83f <__ctype_b_loc@plt+0x1d56f>
  41f7ea:	nop    WORD PTR [rax+rax*1+0x0]
  41f7f0:	vmovq  rdx,xmm0
  41f7f5:	mov    rax,rdx
  41f7f8:	shr    rax,0x20
  41f7fc:	add    eax,edx
  41f7fe:	mov    dl,BYTE PTR [rsi+0xb]
  41f801:	mov    rdi,0xffffffffffffffff
  41f808:	shlx   rdi,rdi,rdx
  41f80d:	or     rdi,0x1
  41f811:	xor    rdi,0xfffffffffffffffe
  41f815:	xor    edx,edx
  41f817:	div    rdi
  41f81a:	lea    rax,[rdx+rdx*4]
  41f81e:	shl    rax,0x3
  41f822:	add    rax,QWORD PTR [rsi+0x20]
  41f826:	cmp    DWORD PTR [rax+0x18],0x3
  41f82a:	je     41f83f <__ctype_b_loc@plt+0x1d56f>
  41f82c:	nop    DWORD PTR [rax+0x0]
  41f830:	mov    rax,QWORD PTR [rax+0x20]
  41f834:	test   rax,rax
  41f837:	je     41f850 <__ctype_b_loc@plt+0x1d580>
  41f839:	cmp    DWORD PTR [rax+0x18],0x3
  41f83d:	jne    41f830 <__ctype_b_loc@plt+0x1d560>
  41f83f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41f844:	vucomisd xmm1,xmm0
  41f848:	jne    41f830 <__ctype_b_loc@plt+0x1d560>
  41f84a:	jp     41f830 <__ctype_b_loc@plt+0x1d560>
  41f84c:	jmp    41f857 <__ctype_b_loc@plt+0x1d587>
  41f84e:	xchg   ax,ax
  41f850:	lea    rax,[rip+0xa2c1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f857:	mov    rdx,QWORD PTR [rax]
  41f85a:	mov    QWORD PTR [rcx],rdx
  41f85d:	mov    eax,DWORD PTR [rax+0x8]
  41f860:	mov    DWORD PTR [rcx+0x8],eax
  41f863:	mov    rcx,QWORD PTR [rbx+0x10]
  41f867:	mov    rax,QWORD PTR [rbx+0x18]
  41f86b:	lea    rdx,[rcx+0x10]
  41f86f:	mov    QWORD PTR [rbx+0x10],rdx
  41f873:	cmp    rax,rdx
  41f876:	lea    rdx,[rip+0xa29b]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f87d:	cmovae rax,rdx
  41f881:	mov    rsi,QWORD PTR [rax]
  41f884:	mov    eax,DWORD PTR [rsp+0x18]
  41f888:	cmp    eax,DWORD PTR [rsi+0x38]
  41f88b:	jae    41f8a0 <__ctype_b_loc@plt+0x1d5d0>
  41f88d:	cdqe   
  41f88f:	shl    rax,0x4
  41f893:	add    rax,QWORD PTR [rsi+0x18]
  41f897:	jmp    41f927 <__ctype_b_loc@plt+0x1d657>
  41f89c:	nop    DWORD PTR [rax+0x0]
  41f8a0:	vcvtsi2sd xmm0,xmm2,r15d
  41f8a5:	test   r15d,r15d
  41f8a8:	je     41f8e8 <__ctype_b_loc@plt+0x1d618>
  41f8aa:	vmovq  rdx,xmm0
  41f8af:	mov    rax,rdx
  41f8b2:	shr    rax,0x20
  41f8b6:	add    eax,edx
  41f8b8:	mov    dl,BYTE PTR [rsi+0xb]
  41f8bb:	mov    rdi,0xffffffffffffffff
  41f8c2:	shlx   rdi,rdi,rdx
  41f8c7:	or     rdi,0x1
  41f8cb:	xor    rdi,0xfffffffffffffffe
  41f8cf:	xor    edx,edx
  41f8d1:	div    rdi
  41f8d4:	lea    rax,[rdx+rdx*4]
  41f8d8:	shl    rax,0x3
  41f8dc:	add    rax,QWORD PTR [rsi+0x20]
  41f8e0:	cmp    DWORD PTR [rax+0x18],0x3
  41f8e4:	jne    41f900 <__ctype_b_loc@plt+0x1d630>
  41f8e6:	jmp    41f90f <__ctype_b_loc@plt+0x1d63f>
  41f8e8:	mov    rax,QWORD PTR [rsi+0x20]
  41f8ec:	cmp    DWORD PTR [rax+0x18],0x3
  41f8f0:	je     41f90f <__ctype_b_loc@plt+0x1d63f>
  41f8f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f8fc:	nop    DWORD PTR [rax+0x0]
  41f900:	mov    rax,QWORD PTR [rax+0x20]
  41f904:	test   rax,rax
  41f907:	je     41f920 <__ctype_b_loc@plt+0x1d650>
  41f909:	cmp    DWORD PTR [rax+0x18],0x3
  41f90d:	jne    41f900 <__ctype_b_loc@plt+0x1d630>
  41f90f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41f914:	vucomisd xmm1,xmm0
  41f918:	jne    41f900 <__ctype_b_loc@plt+0x1d630>
  41f91a:	jp     41f900 <__ctype_b_loc@plt+0x1d630>
  41f91c:	jmp    41f927 <__ctype_b_loc@plt+0x1d657>
  41f91e:	xchg   ax,ax
  41f920:	lea    rax,[rip+0xa1f1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f927:	mov    rdx,QWORD PTR [rax]
  41f92a:	mov    QWORD PTR [rcx+0x10],rdx
  41f92e:	mov    eax,DWORD PTR [rax+0x8]
  41f931:	mov    DWORD PTR [rcx+0x18],eax
  41f934:	add    QWORD PTR [rbx+0x10],0x10
  41f939:	mov    rdi,rbx
  41f93c:	mov    esi,0xfffffffe
  41f941:	mov    edx,0xffffffff
  41f946:	call   4200b0 <__ctype_b_loc@plt+0x1dde0>
  41f94b:	test   eax,eax
  41f94d:	je     41f970 <__ctype_b_loc@plt+0x1d6a0>
  41f94f:	mov    rdi,rbx
  41f952:	mov    esi,0x1
  41f957:	mov    edx,r13d
  41f95a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f95f:	mov    rdi,rbx
  41f962:	mov    esi,0x1
  41f967:	mov    edx,r15d
  41f96a:	jmp    41fa6c <__ctype_b_loc@plt+0x1d79c>
  41f96f:	nop
  41f970:	mov    rcx,QWORD PTR [rbx+0x10]
  41f974:	mov    rax,QWORD PTR [rbx+0x18]
  41f978:	lea    rdx,[rcx-0x10]
  41f97c:	mov    QWORD PTR [rbx+0x10],rdx
  41f980:	cmp    rax,rdx
  41f983:	lea    rdx,[rip+0xa18e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41f98a:	cmovae rax,rdx
  41f98e:	mov    rsi,QWORD PTR [rax]
  41f991:	mov    eax,DWORD PTR [rsp+0xc]
  41f995:	cmp    eax,DWORD PTR [rsi+0x38]
  41f998:	jae    41f9a6 <__ctype_b_loc@plt+0x1d6d6>
  41f99a:	cdqe   
  41f99c:	shl    rax,0x4
  41f9a0:	add    rax,QWORD PTR [rsi+0x18]
  41f9a4:	jmp    41fa25 <__ctype_b_loc@plt+0x1d755>
  41f9a6:	vcvtsi2sd xmm0,xmm2,r12d
  41f9ab:	test   r12d,r12d
  41f9ae:	je     41f9ee <__ctype_b_loc@plt+0x1d71e>
  41f9b0:	vmovq  rdx,xmm0
  41f9b5:	mov    rax,rdx
  41f9b8:	shr    rax,0x20
  41f9bc:	add    eax,edx
  41f9be:	mov    dl,BYTE PTR [rsi+0xb]
  41f9c1:	mov    rdi,0xffffffffffffffff
  41f9c8:	shlx   rdi,rdi,rdx
  41f9cd:	or     rdi,0x1
  41f9d1:	xor    rdi,0xfffffffffffffffe
  41f9d5:	xor    edx,edx
  41f9d7:	div    rdi
  41f9da:	lea    rax,[rdx+rdx*4]
  41f9de:	shl    rax,0x3
  41f9e2:	add    rax,QWORD PTR [rsi+0x20]
  41f9e6:	cmp    DWORD PTR [rax+0x18],0x3
  41f9ea:	jne    41fa00 <__ctype_b_loc@plt+0x1d730>
  41f9ec:	jmp    41fa0f <__ctype_b_loc@plt+0x1d73f>
  41f9ee:	mov    rax,QWORD PTR [rsi+0x20]
  41f9f2:	cmp    DWORD PTR [rax+0x18],0x3
  41f9f6:	je     41fa0f <__ctype_b_loc@plt+0x1d73f>
  41f9f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa00:	mov    rax,QWORD PTR [rax+0x20]
  41fa04:	test   rax,rax
  41fa07:	je     41fa1e <__ctype_b_loc@plt+0x1d74e>
  41fa09:	cmp    DWORD PTR [rax+0x18],0x3
  41fa0d:	jne    41fa00 <__ctype_b_loc@plt+0x1d730>
  41fa0f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41fa14:	vucomisd xmm1,xmm0
  41fa18:	jne    41fa00 <__ctype_b_loc@plt+0x1d730>
  41fa1a:	jp     41fa00 <__ctype_b_loc@plt+0x1d730>
  41fa1c:	jmp    41fa25 <__ctype_b_loc@plt+0x1d755>
  41fa1e:	lea    rax,[rip+0xa0f3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fa25:	mov    rdx,QWORD PTR [rax]
  41fa28:	mov    QWORD PTR [rcx-0x10],rdx
  41fa2c:	mov    eax,DWORD PTR [rax+0x8]
  41fa2f:	mov    DWORD PTR [rcx-0x8],eax
  41fa32:	add    QWORD PTR [rbx+0x10],0x10
  41fa37:	mov    rdi,rbx
  41fa3a:	mov    esi,0xffffffff
  41fa3f:	mov    edx,0xfffffffe
  41fa44:	call   4200b0 <__ctype_b_loc@plt+0x1dde0>
  41fa49:	test   eax,eax
  41fa4b:	je     42008c <__ctype_b_loc@plt+0x1ddbc>
  41fa51:	mov    rdi,rbx
  41fa54:	mov    esi,0x1
  41fa59:	mov    edx,r13d
  41fa5c:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41fa61:	mov    rdi,rbx
  41fa64:	mov    esi,0x1
  41fa69:	mov    edx,r12d
  41fa6c:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41fa71:	cmp    ebp,0x2
  41fa74:	je     42009a <__ctype_b_loc@plt+0x1ddca>
  41fa7a:	mov    rcx,QWORD PTR [rbx+0x10]
  41fa7e:	mov    rax,QWORD PTR [rbx+0x18]
  41fa82:	cmp    rax,rcx
  41fa85:	lea    rdx,[rip+0xa08c]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fa8c:	cmovae rax,rdx
  41fa90:	mov    rsi,QWORD PTR [rax]
  41fa93:	mov    eax,DWORD PTR [rsp+0x10]
  41fa97:	cmp    eax,DWORD PTR [rsi+0x38]
  41fa9a:	mov    ebp,DWORD PTR [rsp+0xc]
  41fa9e:	jae    41fab0 <__ctype_b_loc@plt+0x1d7e0>
  41faa0:	cdqe   
  41faa2:	shl    rax,0x4
  41faa6:	add    rax,QWORD PTR [rsi+0x18]
  41faaa:	jmp    41fb37 <__ctype_b_loc@plt+0x1d867>
  41faaf:	nop
  41fab0:	vcvtsi2sd xmm0,xmm2,r13d
  41fab5:	inc    r14d
  41fab8:	cmp    r14d,0x2
  41fabc:	ja     41fad0 <__ctype_b_loc@plt+0x1d800>
  41fabe:	mov    rax,QWORD PTR [rsi+0x20]
  41fac2:	cmp    DWORD PTR [rax+0x18],0x3
  41fac6:	jne    41fb10 <__ctype_b_loc@plt+0x1d840>
  41fac8:	jmp    41fb1f <__ctype_b_loc@plt+0x1d84f>
  41faca:	nop    WORD PTR [rax+rax*1+0x0]
  41fad0:	vmovq  rdx,xmm0
  41fad5:	mov    rax,rdx
  41fad8:	shr    rax,0x20
  41fadc:	add    eax,edx
  41fade:	mov    dl,BYTE PTR [rsi+0xb]
  41fae1:	mov    rdi,0xffffffffffffffff
  41fae8:	shlx   rdi,rdi,rdx
  41faed:	or     rdi,0x1
  41faf1:	xor    rdi,0xfffffffffffffffe
  41faf5:	xor    edx,edx
  41faf7:	div    rdi
  41fafa:	lea    rax,[rdx+rdx*4]
  41fafe:	shl    rax,0x3
  41fb02:	add    rax,QWORD PTR [rsi+0x20]
  41fb06:	cmp    DWORD PTR [rax+0x18],0x3
  41fb0a:	je     41fb1f <__ctype_b_loc@plt+0x1d84f>
  41fb0c:	nop    DWORD PTR [rax+0x0]
  41fb10:	mov    rax,QWORD PTR [rax+0x20]
  41fb14:	test   rax,rax
  41fb17:	je     41fb30 <__ctype_b_loc@plt+0x1d860>
  41fb19:	cmp    DWORD PTR [rax+0x18],0x3
  41fb1d:	jne    41fb10 <__ctype_b_loc@plt+0x1d840>
  41fb1f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41fb24:	vucomisd xmm1,xmm0
  41fb28:	jne    41fb10 <__ctype_b_loc@plt+0x1d840>
  41fb2a:	jp     41fb10 <__ctype_b_loc@plt+0x1d840>
  41fb2c:	jmp    41fb37 <__ctype_b_loc@plt+0x1d867>
  41fb2e:	xchg   ax,ax
  41fb30:	lea    rax,[rip+0x9fe1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fb37:	mov    rdx,QWORD PTR [rax]
  41fb3a:	mov    QWORD PTR [rcx],rdx
  41fb3d:	mov    eax,DWORD PTR [rax+0x8]
  41fb40:	mov    DWORD PTR [rcx+0x8],eax
  41fb43:	mov    rax,QWORD PTR [rbx+0x10]
  41fb47:	lea    rcx,[rax+0x10]
  41fb4b:	mov    QWORD PTR [rbx+0x10],rcx
  41fb4f:	mov    rcx,QWORD PTR [rax]
  41fb52:	mov    QWORD PTR [rax+0x10],rcx
  41fb56:	mov    ecx,DWORD PTR [rax+0x8]
  41fb59:	mov    DWORD PTR [rax+0x18],ecx
  41fb5c:	mov    rcx,QWORD PTR [rbx+0x10]
  41fb60:	mov    rax,QWORD PTR [rbx+0x18]
  41fb64:	lea    rdx,[rcx+0x10]
  41fb68:	mov    QWORD PTR [rbx+0x10],rdx
  41fb6c:	cmp    rax,rdx
  41fb6f:	lea    rdx,[rip+0x9fa2]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fb76:	cmovae rax,rdx
  41fb7a:	mov    rsi,QWORD PTR [rax]
  41fb7d:	lea    edx,[r12-0x2]
  41fb82:	movsxd rax,edx
  41fb85:	mov    DWORD PTR [rsp+0x24],edx
  41fb89:	cmp    edx,DWORD PTR [rsi+0x38]
  41fb8c:	mov    QWORD PTR [rsp+0x30],rax
  41fb91:	jae    41fba0 <__ctype_b_loc@plt+0x1d8d0>
  41fb93:	shl    rax,0x4
  41fb97:	add    rax,QWORD PTR [rsi+0x18]
  41fb9b:	jmp    41fc17 <__ctype_b_loc@plt+0x1d947>
  41fb9d:	nop    DWORD PTR [rax]
  41fba0:	vcvtsi2sd xmm0,xmm2,ebp
  41fba4:	test   ebp,ebp
  41fba6:	je     41fbe6 <__ctype_b_loc@plt+0x1d916>
  41fba8:	vmovq  rdx,xmm0
  41fbad:	mov    rax,rdx
  41fbb0:	shr    rax,0x20
  41fbb4:	add    eax,edx
  41fbb6:	mov    dl,BYTE PTR [rsi+0xb]
  41fbb9:	mov    rdi,0xffffffffffffffff
  41fbc0:	shlx   rdi,rdi,rdx
  41fbc5:	or     rdi,0x1
  41fbc9:	xor    rdi,0xfffffffffffffffe
  41fbcd:	xor    edx,edx
  41fbcf:	div    rdi
  41fbd2:	lea    rax,[rdx+rdx*4]
  41fbd6:	shl    rax,0x3
  41fbda:	add    rax,QWORD PTR [rsi+0x20]
  41fbde:	cmp    DWORD PTR [rax+0x18],0x3
  41fbe2:	jne    41fbf0 <__ctype_b_loc@plt+0x1d920>
  41fbe4:	jmp    41fbff <__ctype_b_loc@plt+0x1d92f>
  41fbe6:	mov    rax,QWORD PTR [rsi+0x20]
  41fbea:	cmp    DWORD PTR [rax+0x18],0x3
  41fbee:	je     41fbff <__ctype_b_loc@plt+0x1d92f>
  41fbf0:	mov    rax,QWORD PTR [rax+0x20]
  41fbf4:	test   rax,rax
  41fbf7:	je     41fc10 <__ctype_b_loc@plt+0x1d940>
  41fbf9:	cmp    DWORD PTR [rax+0x18],0x3
  41fbfd:	jne    41fbf0 <__ctype_b_loc@plt+0x1d920>
  41fbff:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41fc04:	vucomisd xmm1,xmm0
  41fc08:	jne    41fbf0 <__ctype_b_loc@plt+0x1d920>
  41fc0a:	jp     41fbf0 <__ctype_b_loc@plt+0x1d920>
  41fc0c:	jmp    41fc17 <__ctype_b_loc@plt+0x1d947>
  41fc0e:	xchg   ax,ax
  41fc10:	lea    rax,[rip+0x9f01]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fc17:	mov    rdx,QWORD PTR [rax]
  41fc1a:	mov    QWORD PTR [rcx+0x10],rdx
  41fc1e:	mov    eax,DWORD PTR [rax+0x8]
  41fc21:	mov    DWORD PTR [rcx+0x18],eax
  41fc24:	add    QWORD PTR [rbx+0x10],0x10
  41fc29:	mov    rdi,rbx
  41fc2c:	mov    esi,0x1
  41fc31:	mov    edx,r13d
  41fc34:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41fc39:	mov    rdi,rbx
  41fc3c:	mov    esi,0x1
  41fc41:	mov    edx,ebp
  41fc43:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41fc48:	mov    QWORD PTR [rsp+0x10],r12
  41fc4d:	movsxd r13,r12d
  41fc50:	mov    r14,r15
  41fc53:	movsxd r15,r14d
  41fc56:	mov    QWORD PTR [rsp+0x28],r14
  41fc5b:	mov    r12d,ebp
  41fc5e:	mov    QWORD PTR [rsp+0x18],r13
  41fc63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc6d:	nop    DWORD PTR [rax]
  41fc70:	movsxd rbp,r14d
  41fc73:	mov    rcx,QWORD PTR [rbx+0x10]
  41fc77:	jmp    41fc8f <__ctype_b_loc@plt+0x1d9bf>
  41fc79:	nop    DWORD PTR [rax+0x0]
  41fc80:	mov    rcx,QWORD PTR [rbx+0x10]
  41fc84:	add    rcx,0xfffffffffffffff0
  41fc88:	mov    QWORD PTR [rbx+0x10],rcx
  41fc8c:	mov    rbp,r14
  41fc8f:	lea    r14,[rbp+0x1]
  41fc93:	mov    rax,QWORD PTR [rbx+0x18]
  41fc97:	cmp    rax,rcx
  41fc9a:	lea    rdx,[rip+0x9e77]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fca1:	cmovae rax,rdx
  41fca5:	mov    rsi,QWORD PTR [rax]
  41fca8:	cmp    DWORD PTR [rsi+0x38],ebp
  41fcab:	jbe    41fcc0 <__ctype_b_loc@plt+0x1d9f0>
  41fcad:	mov    rax,rbp
  41fcb0:	shl    rax,0x4
  41fcb4:	add    rax,QWORD PTR [rsi+0x18]
  41fcb8:	jmp    41fd47 <__ctype_b_loc@plt+0x1da77>
  41fcbd:	nop    DWORD PTR [rax]
  41fcc0:	vcvtsi2sd xmm0,xmm2,r14d
  41fcc5:	test   r14d,r14d
  41fcc8:	je     41fd08 <__ctype_b_loc@plt+0x1da38>
  41fcca:	vmovq  rdx,xmm0
  41fccf:	mov    rax,rdx
  41fcd2:	shr    rax,0x20
  41fcd6:	add    eax,edx
  41fcd8:	mov    dl,BYTE PTR [rsi+0xb]
  41fcdb:	mov    rdi,0xffffffffffffffff
  41fce2:	shlx   rdi,rdi,rdx
  41fce7:	or     rdi,0x1
  41fceb:	xor    rdi,0xfffffffffffffffe
  41fcef:	xor    edx,edx
  41fcf1:	div    rdi
  41fcf4:	lea    rax,[rdx+rdx*4]
  41fcf8:	shl    rax,0x3
  41fcfc:	add    rax,QWORD PTR [rsi+0x20]
  41fd00:	cmp    DWORD PTR [rax+0x18],0x3
  41fd04:	jne    41fd20 <__ctype_b_loc@plt+0x1da50>
  41fd06:	jmp    41fd2f <__ctype_b_loc@plt+0x1da5f>
  41fd08:	mov    rax,QWORD PTR [rsi+0x20]
  41fd0c:	cmp    DWORD PTR [rax+0x18],0x3
  41fd10:	je     41fd2f <__ctype_b_loc@plt+0x1da5f>
  41fd12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd1c:	nop    DWORD PTR [rax+0x0]
  41fd20:	mov    rax,QWORD PTR [rax+0x20]
  41fd24:	test   rax,rax
  41fd27:	je     41fd40 <__ctype_b_loc@plt+0x1da70>
  41fd29:	cmp    DWORD PTR [rax+0x18],0x3
  41fd2d:	jne    41fd20 <__ctype_b_loc@plt+0x1da50>
  41fd2f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41fd34:	vucomisd xmm1,xmm0
  41fd38:	jne    41fd20 <__ctype_b_loc@plt+0x1da50>
  41fd3a:	jp     41fd20 <__ctype_b_loc@plt+0x1da50>
  41fd3c:	jmp    41fd47 <__ctype_b_loc@plt+0x1da77>
  41fd3e:	xchg   ax,ax
  41fd40:	lea    rax,[rip+0x9dd1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fd47:	mov    rdx,QWORD PTR [rax]
  41fd4a:	mov    QWORD PTR [rcx],rdx
  41fd4d:	mov    eax,DWORD PTR [rax+0x8]
  41fd50:	mov    DWORD PTR [rcx+0x8],eax
  41fd53:	add    QWORD PTR [rbx+0x10],0x10
  41fd58:	mov    rdi,rbx
  41fd5b:	mov    esi,0xffffffff
  41fd60:	mov    edx,0xfffffffe
  41fd65:	call   4200b0 <__ctype_b_loc@plt+0x1dde0>
  41fd6a:	test   eax,eax
  41fd6c:	je     41fd90 <__ctype_b_loc@plt+0x1dac0>
  41fd6e:	cmp    rbp,r13
  41fd71:	jl     41fc80 <__ctype_b_loc@plt+0x1d9b0>
  41fd77:	mov    rdi,rbx
  41fd7a:	lea    rsi,[rip+0xa96e]        # 42a6ef <__ctype_b_loc@plt+0x2841f>
  41fd81:	xor    eax,eax
  41fd83:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41fd88:	jmp    41fc80 <__ctype_b_loc@plt+0x1d9b0>
  41fd8d:	nop    DWORD PTR [rax]
  41fd90:	movsxd r13,r12d
  41fd93:	mov    rcx,QWORD PTR [rbx+0x10]
  41fd97:	jmp    41fdaf <__ctype_b_loc@plt+0x1dadf>
  41fd99:	nop    DWORD PTR [rax+0x0]
  41fda0:	mov    rcx,QWORD PTR [rbx+0x10]
  41fda4:	add    rcx,0xfffffffffffffff0
  41fda8:	mov    QWORD PTR [rbx+0x10],rcx
  41fdac:	mov    r13,r12
  41fdaf:	lea    r12,[r13-0x1]
  41fdb3:	mov    rax,QWORD PTR [rbx+0x18]
  41fdb7:	cmp    rax,rcx
  41fdba:	lea    rdx,[rip+0x9d57]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fdc1:	cmovae rax,rdx
  41fdc5:	mov    rsi,QWORD PTR [rax]
  41fdc8:	lea    eax,[r13-0x2]
  41fdcc:	cmp    eax,DWORD PTR [rsi+0x38]
  41fdcf:	jae    41fde0 <__ctype_b_loc@plt+0x1db10>
  41fdd1:	cdqe   
  41fdd3:	shl    rax,0x4
  41fdd7:	add    rax,QWORD PTR [rsi+0x18]
  41fddb:	jmp    41fe67 <__ctype_b_loc@plt+0x1db97>
  41fde0:	vcvtsi2sd xmm0,xmm2,r12d
  41fde5:	test   r12d,r12d
  41fde8:	je     41fe28 <__ctype_b_loc@plt+0x1db58>
  41fdea:	vmovq  rdx,xmm0
  41fdef:	mov    rax,rdx
  41fdf2:	shr    rax,0x20
  41fdf6:	add    eax,edx
  41fdf8:	mov    dl,BYTE PTR [rsi+0xb]
  41fdfb:	mov    rdi,0xffffffffffffffff
  41fe02:	shlx   rdi,rdi,rdx
  41fe07:	or     rdi,0x1
  41fe0b:	xor    rdi,0xfffffffffffffffe
  41fe0f:	xor    edx,edx
  41fe11:	div    rdi
  41fe14:	lea    rax,[rdx+rdx*4]
  41fe18:	shl    rax,0x3
  41fe1c:	add    rax,QWORD PTR [rsi+0x20]
  41fe20:	cmp    DWORD PTR [rax+0x18],0x3
  41fe24:	jne    41fe40 <__ctype_b_loc@plt+0x1db70>
  41fe26:	jmp    41fe4f <__ctype_b_loc@plt+0x1db7f>
  41fe28:	mov    rax,QWORD PTR [rsi+0x20]
  41fe2c:	cmp    DWORD PTR [rax+0x18],0x3
  41fe30:	je     41fe4f <__ctype_b_loc@plt+0x1db7f>
  41fe32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe3c:	nop    DWORD PTR [rax+0x0]
  41fe40:	mov    rax,QWORD PTR [rax+0x20]
  41fe44:	test   rax,rax
  41fe47:	je     41fe60 <__ctype_b_loc@plt+0x1db90>
  41fe49:	cmp    DWORD PTR [rax+0x18],0x3
  41fe4d:	jne    41fe40 <__ctype_b_loc@plt+0x1db70>
  41fe4f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41fe54:	vucomisd xmm1,xmm0
  41fe58:	jne    41fe40 <__ctype_b_loc@plt+0x1db70>
  41fe5a:	jp     41fe40 <__ctype_b_loc@plt+0x1db70>
  41fe5c:	jmp    41fe67 <__ctype_b_loc@plt+0x1db97>
  41fe5e:	xchg   ax,ax
  41fe60:	lea    rax,[rip+0x9cb1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fe67:	mov    rdx,QWORD PTR [rax]
  41fe6a:	mov    QWORD PTR [rcx],rdx
  41fe6d:	mov    eax,DWORD PTR [rax+0x8]
  41fe70:	mov    DWORD PTR [rcx+0x8],eax
  41fe73:	add    QWORD PTR [rbx+0x10],0x10
  41fe78:	mov    rdi,rbx
  41fe7b:	mov    esi,0xfffffffd
  41fe80:	mov    edx,0xffffffff
  41fe85:	call   4200b0 <__ctype_b_loc@plt+0x1dde0>
  41fe8a:	test   eax,eax
  41fe8c:	je     41feb0 <__ctype_b_loc@plt+0x1dbe0>
  41fe8e:	cmp    r13,r15
  41fe91:	jg     41fda0 <__ctype_b_loc@plt+0x1dad0>
  41fe97:	mov    rdi,rbx
  41fe9a:	lea    rsi,[rip+0xa84e]        # 42a6ef <__ctype_b_loc@plt+0x2841f>
  41fea1:	xor    eax,eax
  41fea3:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  41fea8:	jmp    41fda0 <__ctype_b_loc@plt+0x1dad0>
  41fead:	nop    DWORD PTR [rax]
  41feb0:	cmp    r13d,r14d
  41feb3:	jle    41fee0 <__ctype_b_loc@plt+0x1dc10>
  41feb5:	mov    rdi,rbx
  41feb8:	mov    esi,0x1
  41febd:	mov    edx,r14d
  41fec0:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41fec5:	mov    rdi,rbx
  41fec8:	mov    esi,0x1
  41fecd:	mov    edx,r12d
  41fed0:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41fed5:	mov    r13,QWORD PTR [rsp+0x18]
  41feda:	jmp    41fc70 <__ctype_b_loc@plt+0x1d9a0>
  41fedf:	nop
  41fee0:	mov    rcx,QWORD PTR [rbx+0x10]
  41fee4:	mov    rax,QWORD PTR [rbx+0x18]
  41fee8:	lea    rdx,[rcx-0x30]
  41feec:	mov    QWORD PTR [rbx+0x10],rdx
  41fef0:	cmp    rax,rdx
  41fef3:	lea    rdx,[rip+0x9c1e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41fefa:	cmovae rax,rdx
  41fefe:	mov    rsi,QWORD PTR [rax]
  41ff01:	mov    eax,DWORD PTR [rsp+0x24]
  41ff05:	cmp    eax,DWORD PTR [rsi+0x38]
  41ff08:	jae    41ff30 <__ctype_b_loc@plt+0x1dc60>
  41ff0a:	mov    rdx,QWORD PTR [rsp+0x30]
  41ff0f:	shl    rdx,0x4
  41ff13:	add    rdx,QWORD PTR [rsi+0x18]
  41ff17:	mov    r12,QWORD PTR [rsp+0x10]
  41ff1c:	mov    r15,QWORD PTR [rsp+0x28]
  41ff21:	jmp    41ffba <__ctype_b_loc@plt+0x1dcea>
  41ff26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff30:	mov    eax,DWORD PTR [rsp+0xc]
  41ff34:	vcvtsi2sd xmm0,xmm2,eax
  41ff38:	test   eax,eax
  41ff3a:	mov    r12,QWORD PTR [rsp+0x10]
  41ff3f:	mov    r15,QWORD PTR [rsp+0x28]
  41ff44:	je     41ff84 <__ctype_b_loc@plt+0x1dcb4>
  41ff46:	vmovq  rdx,xmm0
  41ff4b:	mov    rax,rdx
  41ff4e:	shr    rax,0x20
  41ff52:	add    eax,edx
  41ff54:	mov    dl,BYTE PTR [rsi+0xb]
  41ff57:	mov    rdi,0xffffffffffffffff
  41ff5e:	shlx   rdi,rdi,rdx
  41ff63:	or     rdi,0x1
  41ff67:	xor    rdi,0xfffffffffffffffe
  41ff6b:	xor    edx,edx
  41ff6d:	div    rdi
  41ff70:	lea    rdx,[rdx+rdx*4]
  41ff74:	shl    rdx,0x3
  41ff78:	add    rdx,QWORD PTR [rsi+0x20]
  41ff7c:	cmp    DWORD PTR [rdx+0x18],0x3
  41ff80:	jne    41ff90 <__ctype_b_loc@plt+0x1dcc0>
  41ff82:	jmp    41ff9f <__ctype_b_loc@plt+0x1dccf>
  41ff84:	mov    rdx,QWORD PTR [rsi+0x20]
  41ff88:	cmp    DWORD PTR [rdx+0x18],0x3
  41ff8c:	je     41ff9f <__ctype_b_loc@plt+0x1dccf>
  41ff8e:	xchg   ax,ax
  41ff90:	mov    rdx,QWORD PTR [rdx+0x20]
  41ff94:	test   rdx,rdx
  41ff97:	je     41ffb0 <__ctype_b_loc@plt+0x1dce0>
  41ff99:	cmp    DWORD PTR [rdx+0x18],0x3
  41ff9d:	jne    41ff90 <__ctype_b_loc@plt+0x1dcc0>
  41ff9f:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  41ffa4:	vucomisd xmm1,xmm0
  41ffa8:	jne    41ff90 <__ctype_b_loc@plt+0x1dcc0>
  41ffaa:	jp     41ff90 <__ctype_b_loc@plt+0x1dcc0>
  41ffac:	jmp    41ffba <__ctype_b_loc@plt+0x1dcea>
  41ffae:	xchg   ax,ax
  41ffb0:	lea    rax,[rip+0x9b61]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41ffb7:	mov    rdx,rax
  41ffba:	mov    rax,QWORD PTR [rdx]
  41ffbd:	mov    QWORD PTR [rcx-0x30],rax
  41ffc1:	mov    eax,DWORD PTR [rdx+0x8]
  41ffc4:	mov    DWORD PTR [rcx-0x28],eax
  41ffc7:	mov    rcx,QWORD PTR [rbx+0x10]
  41ffcb:	mov    rax,QWORD PTR [rbx+0x18]
  41ffcf:	lea    rdx,[rcx+0x10]
  41ffd3:	mov    QWORD PTR [rbx+0x10],rdx
  41ffd7:	cmp    rax,rdx
  41ffda:	lea    rdx,[rip+0x9b37]        # 429b18 <__ctype_b_loc@plt+0x27848>
  41ffe1:	cmovae rax,rdx
  41ffe5:	mov    rsi,QWORD PTR [rax]
  41ffe8:	cmp    DWORD PTR [rsi+0x38],ebp
  41ffeb:	ja     41f500 <__ctype_b_loc@plt+0x1d230>
  41fff1:	vcvtsi2sd xmm0,xmm2,r14d
  41fff6:	test   r14d,r14d
  41fff9:	je     420039 <__ctype_b_loc@plt+0x1dd69>
  41fffb:	vmovq  rdx,xmm0
  420000:	mov    rax,rdx
  420003:	shr    rax,0x20
  420007:	add    eax,edx
  420009:	mov    dl,BYTE PTR [rsi+0xb]
  42000c:	mov    rdi,0xffffffffffffffff
  420013:	shlx   rdi,rdi,rdx
  420018:	or     rdi,0x1
  42001c:	xor    rdi,0xfffffffffffffffe
  420020:	xor    edx,edx
  420022:	div    rdi
  420025:	lea    rax,[rdx+rdx*4]
  420029:	shl    rax,0x3
  42002d:	add    rax,QWORD PTR [rsi+0x20]
  420031:	cmp    DWORD PTR [rax+0x18],0x3
  420035:	jne    420050 <__ctype_b_loc@plt+0x1dd80>
  420037:	jmp    42005f <__ctype_b_loc@plt+0x1dd8f>
  420039:	mov    rax,QWORD PTR [rsi+0x20]
  42003d:	cmp    DWORD PTR [rax+0x18],0x3
  420041:	je     42005f <__ctype_b_loc@plt+0x1dd8f>
  420043:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42004d:	nop    DWORD PTR [rax]
  420050:	mov    rax,QWORD PTR [rax+0x20]
  420054:	test   rax,rax
  420057:	je     420080 <__ctype_b_loc@plt+0x1ddb0>
  420059:	cmp    DWORD PTR [rax+0x18],0x3
  42005d:	jne    420050 <__ctype_b_loc@plt+0x1dd80>
  42005f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  420064:	vucomisd xmm1,xmm0
  420068:	jne    420050 <__ctype_b_loc@plt+0x1dd80>
  42006a:	jp     420050 <__ctype_b_loc@plt+0x1dd80>
  42006c:	jmp    41f50b <__ctype_b_loc@plt+0x1d23b>
  420071:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42007b:	nop    DWORD PTR [rax+rax*1+0x0]
  420080:	lea    rax,[rip+0x9a91]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420087:	jmp    41f50b <__ctype_b_loc@plt+0x1d23b>
  42008c:	add    QWORD PTR [rbx+0x10],0xffffffffffffffe0
  420091:	cmp    ebp,0x2
  420094:	jne    41fa7a <__ctype_b_loc@plt+0x1d7aa>
  42009a:	add    rsp,0x38
  42009e:	pop    rbx
  42009f:	pop    r12
  4200a1:	pop    r13
  4200a3:	pop    r14
  4200a5:	pop    r15
  4200a7:	pop    rbp
  4200a8:	ret    
  4200a9:	nop    DWORD PTR [rax+0x0]
  4200b0:	push   rbx
  4200b1:	mov    r9d,esi
  4200b4:	mov    rbx,rdi
  4200b7:	mov    rcx,QWORD PTR [rdi+0x10]
  4200bb:	mov    r8,QWORD PTR [rdi+0x18]
  4200bf:	lea    rdi,[r8+0x10]
  4200c3:	lea    rsi,[rip+0x9a4e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4200ca:	cmp    rdi,rsi
  4200cd:	je     4200db <__ctype_b_loc@plt+0x1de0b>
  4200cf:	cmp    rdi,rcx
  4200d2:	jae    4200db <__ctype_b_loc@plt+0x1de0b>
  4200d4:	cmp    DWORD PTR [r8+0x18],0x0
  4200d9:	je     420145 <__ctype_b_loc@plt+0x1de75>
  4200db:	cmp    rdi,rcx
  4200de:	lea    rsi,[rip+0x9a33]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4200e5:	cmovae rdi,rsi
  4200e9:	mov    rax,QWORD PTR [rdi]
  4200ec:	mov    QWORD PTR [rcx],rax
  4200ef:	mov    eax,DWORD PTR [rdi+0x8]
  4200f2:	mov    DWORD PTR [rcx+0x8],eax
  4200f5:	mov    rcx,QWORD PTR [rbx+0x10]
  4200f9:	lea    rdi,[rcx+0x10]
  4200fd:	mov    QWORD PTR [rbx+0x10],rdi
  420101:	mov    eax,r9d
  420104:	dec    eax
  420106:	jle    42012d <__ctype_b_loc@plt+0x1de5d>
  420108:	mov    rax,QWORD PTR [rbx+0x18]
  42010c:	movsxd rsi,r9d
  42010f:	shl    rsi,0x4
  420113:	add    rax,rsi
  420116:	add    rax,0xffffffffffffffe0
  42011a:	cmp    rax,rdi
  42011d:	lea    rsi,[rip+0x99f4]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420124:	cmovb  rsi,rax
  420128:	jmp    420234 <__ctype_b_loc@plt+0x1df64>
  42012d:	cmp    eax,0xffffd8f1
  420132:	jl     420189 <__ctype_b_loc@plt+0x1deb9>
  420134:	cdqe   
  420136:	shl    rax,0x4
  42013a:	add    rdi,rax
  42013d:	mov    rsi,rdi
  420140:	jmp    420234 <__ctype_b_loc@plt+0x1df64>
  420145:	test   r9d,r9d
  420148:	jle    4201b2 <__ctype_b_loc@plt+0x1dee2>
  42014a:	movsxd rax,r9d
  42014d:	shl    rax,0x4
  420151:	add    rax,r8
  420154:	add    rax,0xfffffffffffffff0
  420158:	cmp    rax,rcx
  42015b:	lea    rsi,[rip+0x99b6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420162:	cmovb  rsi,rax
  420166:	test   edx,edx
  420168:	jg     4204cf <__ctype_b_loc@plt+0x1e1ff>
  42016e:	cmp    edx,0xffffd8f1
  420174:	jl     420311 <__ctype_b_loc@plt+0x1e041>
  42017a:	movsxd rax,edx
  42017d:	shl    rax,0x4
  420181:	add    rcx,rax
  420184:	jmp    4204eb <__ctype_b_loc@plt+0x1e21b>
  420189:	cmp    r9d,0xffffd8ef
  420190:	je     4201d3 <__ctype_b_loc@plt+0x1df03>
  420192:	cmp    r9d,0xffffd8f0
  420199:	je     4201d9 <__ctype_b_loc@plt+0x1df09>
  42019b:	cmp    r9d,0xffffd8f1
  4201a2:	jne    420202 <__ctype_b_loc@plt+0x1df32>
  4201a4:	mov    esi,0xa0
  4201a9:	add    rsi,QWORD PTR [rbx+0x20]
  4201ad:	jmp    420234 <__ctype_b_loc@plt+0x1df64>
  4201b2:	cmp    r9d,0xffffd8f1
  4201b9:	jl     420343 <__ctype_b_loc@plt+0x1e073>
  4201bf:	movsxd rsi,r9d
  4201c2:	shl    rsi,0x4
  4201c6:	add    rsi,rcx
  4201c9:	test   edx,edx
  4201cb:	jg     4204cf <__ctype_b_loc@plt+0x1e1ff>
  4201d1:	jmp    42016e <__ctype_b_loc@plt+0x1de9e>
  4201d3:	lea    rsi,[rbx+0x78]
  4201d7:	jmp    420234 <__ctype_b_loc@plt+0x1df64>
  4201d9:	mov    rax,QWORD PTR [rbx+0x28]
  4201dd:	mov    rax,QWORD PTR [rax+0x8]
  4201e1:	mov    rax,QWORD PTR [rax]
  4201e4:	lea    rsi,[rbx+0x88]
  4201eb:	mov    rax,QWORD PTR [rax+0x18]
  4201ef:	mov    QWORD PTR [rbx+0x88],rax
  4201f6:	mov    DWORD PTR [rbx+0x90],0x5
  420200:	jmp    420234 <__ctype_b_loc@plt+0x1df64>
  420202:	mov    rax,QWORD PTR [rbx+0x28]
  420206:	mov    rax,QWORD PTR [rax+0x8]
  42020a:	mov    r8,QWORD PTR [rax]
  42020d:	mov    eax,0xffffd8ef
  420212:	sub    eax,r9d
  420215:	movzx  edi,BYTE PTR [r8+0xb]
  42021a:	cmp    eax,edi
  42021c:	jg     420234 <__ctype_b_loc@plt+0x1df64>
  42021e:	mov    eax,0xffffd8ee
  420223:	sub    eax,r9d
  420226:	cdqe   
  420228:	shl    rax,0x4
  42022c:	lea    rsi,[r8+rax*1]
  420230:	add    rsi,0x28
  420234:	mov    rax,QWORD PTR [rsi]
  420237:	mov    QWORD PTR [rcx+0x10],rax
  42023b:	mov    eax,DWORD PTR [rsi+0x8]
  42023e:	mov    DWORD PTR [rcx+0x18],eax
  420241:	mov    rax,QWORD PTR [rbx+0x10]
  420245:	lea    rcx,[rax+0x10]
  420249:	mov    QWORD PTR [rbx+0x10],rcx
  42024d:	mov    esi,edx
  42024f:	add    esi,0xfffffffe
  420252:	jle    420279 <__ctype_b_loc@plt+0x1dfa9>
  420254:	mov    rsi,QWORD PTR [rbx+0x18]
  420258:	movsxd rdx,edx
  42025b:	shl    rdx,0x4
  42025f:	add    rdx,rsi
  420262:	add    rdx,0xffffffffffffffd0
  420266:	cmp    rdx,rcx
  420269:	lea    rcx,[rip+0x98a8]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420270:	cmovb  rcx,rdx
  420274:	jmp    420395 <__ctype_b_loc@plt+0x1e0c5>
  420279:	cmp    esi,0xffffd8f1
  42027f:	jl     420290 <__ctype_b_loc@plt+0x1dfc0>
  420281:	movsxd rdx,esi
  420284:	shl    rdx,0x4
  420288:	add    rcx,rdx
  42028b:	jmp    420395 <__ctype_b_loc@plt+0x1e0c5>
  420290:	cmp    edx,0xffffd8f0
  420296:	je     4202b6 <__ctype_b_loc@plt+0x1dfe6>
  420298:	cmp    edx,0xffffd8f1
  42029e:	je     4202bf <__ctype_b_loc@plt+0x1dfef>
  4202a0:	cmp    edx,0xffffd8f2
  4202a6:	jne    4202eb <__ctype_b_loc@plt+0x1e01b>
  4202a8:	mov    ecx,0xa0
  4202ad:	add    rcx,QWORD PTR [rbx+0x20]
  4202b1:	jmp    420395 <__ctype_b_loc@plt+0x1e0c5>
  4202b6:	lea    rcx,[rbx+0x78]
  4202ba:	jmp    420395 <__ctype_b_loc@plt+0x1e0c5>
  4202bf:	mov    rcx,QWORD PTR [rbx+0x28]
  4202c3:	mov    rcx,QWORD PTR [rcx+0x8]
  4202c7:	mov    rdx,QWORD PTR [rcx]
  4202ca:	lea    rcx,[rbx+0x88]
  4202d1:	mov    rdx,QWORD PTR [rdx+0x18]
  4202d5:	mov    QWORD PTR [rbx+0x88],rdx
  4202dc:	mov    DWORD PTR [rbx+0x90],0x5
  4202e6:	jmp    420395 <__ctype_b_loc@plt+0x1e0c5>
  4202eb:	mov    rcx,QWORD PTR [rbx+0x28]
  4202ef:	mov    rcx,QWORD PTR [rcx+0x8]
  4202f3:	mov    rcx,QWORD PTR [rcx]
  4202f6:	mov    esi,0xffffd8f0
  4202fb:	sub    esi,edx
  4202fd:	movzx  edi,BYTE PTR [rcx+0xb]
  420301:	cmp    esi,edi
  420303:	jle    420380 <__ctype_b_loc@plt+0x1e0b0>
  420305:	lea    rcx,[rip+0x980c]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42030c:	jmp    420395 <__ctype_b_loc@plt+0x1e0c5>
  420311:	cmp    edx,0xffffd8ee
  420317:	je     4203e8 <__ctype_b_loc@plt+0x1e118>
  42031d:	cmp    edx,0xffffd8ef
  420323:	je     4203f1 <__ctype_b_loc@plt+0x1e121>
  420329:	cmp    edx,0xffffd8f0
  42032f:	jne    42041d <__ctype_b_loc@plt+0x1e14d>
  420335:	mov    ecx,0xa0
  42033a:	add    rcx,QWORD PTR [rbx+0x20]
  42033e:	jmp    4204eb <__ctype_b_loc@plt+0x1e21b>
  420343:	cmp    r9d,0xffffd8ee
  42034a:	je     420458 <__ctype_b_loc@plt+0x1e188>
  420350:	cmp    r9d,0xffffd8ef
  420357:	je     420465 <__ctype_b_loc@plt+0x1e195>
  42035d:	cmp    r9d,0xffffd8f0
  420364:	jne    420495 <__ctype_b_loc@plt+0x1e1c5>
  42036a:	mov    esi,0xa0
  42036f:	add    rsi,QWORD PTR [rbx+0x20]
  420373:	test   edx,edx
  420375:	jg     4204cf <__ctype_b_loc@plt+0x1e1ff>
  42037b:	jmp    42016e <__ctype_b_loc@plt+0x1de9e>
  420380:	mov    esi,0xffffd8ef
  420385:	sub    esi,edx
  420387:	movsxd rdx,esi
  42038a:	shl    rdx,0x4
  42038e:	add    rcx,rdx
  420391:	add    rcx,0x28
  420395:	mov    rdx,QWORD PTR [rcx]
  420398:	mov    QWORD PTR [rax+0x10],rdx
  42039c:	mov    ecx,DWORD PTR [rcx+0x8]
  42039f:	mov    DWORD PTR [rax+0x18],ecx
  4203a2:	mov    rsi,QWORD PTR [rbx+0x10]
  4203a6:	lea    rax,[rsi+0x10]
  4203aa:	mov    QWORD PTR [rbx+0x10],rax
  4203ae:	add    rsi,0xffffffffffffffe0
  4203b2:	mov    rdi,rbx
  4203b5:	mov    edx,0x1
  4203ba:	call   405020 <__ctype_b_loc@plt+0x2d50>
  4203bf:	mov    rcx,QWORD PTR [rbx+0x10]
  4203c3:	mov    eax,DWORD PTR [rcx-0x8]
  4203c6:	add    rcx,0xfffffffffffffff0
  4203ca:	test   eax,eax
  4203cc:	je     4203e2 <__ctype_b_loc@plt+0x1e112>
  4203ce:	cmp    eax,0x1
  4203d1:	jne    4203dd <__ctype_b_loc@plt+0x1e10d>
  4203d3:	xor    eax,eax
  4203d5:	cmp    DWORD PTR [rcx],0x0
  4203d8:	setne  al
  4203db:	jmp    4203e2 <__ctype_b_loc@plt+0x1e112>
  4203dd:	mov    eax,0x1
  4203e2:	mov    QWORD PTR [rbx+0x10],rcx
  4203e6:	pop    rbx
  4203e7:	ret    
  4203e8:	lea    rcx,[rbx+0x78]
  4203ec:	jmp    4204eb <__ctype_b_loc@plt+0x1e21b>
  4203f1:	mov    rax,QWORD PTR [rbx+0x28]
  4203f5:	mov    rax,QWORD PTR [rax+0x8]
  4203f9:	mov    rax,QWORD PTR [rax]
  4203fc:	lea    rcx,[rbx+0x88]
  420403:	mov    rax,QWORD PTR [rax+0x18]
  420407:	mov    QWORD PTR [rbx+0x88],rax
  42040e:	mov    DWORD PTR [rbx+0x90],0x5
  420418:	jmp    4204eb <__ctype_b_loc@plt+0x1e21b>
  42041d:	mov    rax,QWORD PTR [rbx+0x28]
  420421:	mov    rax,QWORD PTR [rax+0x8]
  420425:	mov    r8,QWORD PTR [rax]
  420428:	mov    edi,0xffffd8ee
  42042d:	sub    edi,edx
  42042f:	movzx  ecx,BYTE PTR [r8+0xb]
  420434:	xor    eax,eax
  420436:	cmp    edi,ecx
  420438:	jg     42050a <__ctype_b_loc@plt+0x1e23a>
  42043e:	mov    eax,0xffffd8ed
  420443:	sub    eax,edx
  420445:	cdqe   
  420447:	shl    rax,0x4
  42044b:	lea    rcx,[r8+rax*1]
  42044f:	add    rcx,0x28
  420453:	jmp    4204eb <__ctype_b_loc@plt+0x1e21b>
  420458:	lea    rsi,[rbx+0x78]
  42045c:	test   edx,edx
  42045e:	jg     4204cf <__ctype_b_loc@plt+0x1e1ff>
  420460:	jmp    42016e <__ctype_b_loc@plt+0x1de9e>
  420465:	mov    rax,QWORD PTR [rbx+0x28]
  420469:	mov    rax,QWORD PTR [rax+0x8]
  42046d:	mov    rax,QWORD PTR [rax]
  420470:	lea    rsi,[rbx+0x88]
  420477:	mov    rax,QWORD PTR [rax+0x18]
  42047b:	mov    QWORD PTR [rbx+0x88],rax
  420482:	mov    DWORD PTR [rbx+0x90],0x5
  42048c:	test   edx,edx
  42048e:	jg     4204cf <__ctype_b_loc@plt+0x1e1ff>
  420490:	jmp    42016e <__ctype_b_loc@plt+0x1de9e>
  420495:	mov    rax,QWORD PTR [rbx+0x28]
  420499:	mov    rax,QWORD PTR [rax+0x8]
  42049d:	mov    r10,QWORD PTR [rax]
  4204a0:	mov    eax,0xffffd8ee
  4204a5:	sub    eax,r9d
  4204a8:	movzx  edi,BYTE PTR [r10+0xb]
  4204ad:	cmp    eax,edi
  4204af:	jg     4204c7 <__ctype_b_loc@plt+0x1e1f7>
  4204b1:	mov    eax,0xffffd8ed
  4204b6:	sub    eax,r9d
  4204b9:	cdqe   
  4204bb:	shl    rax,0x4
  4204bf:	lea    rsi,[r10+rax*1]
  4204c3:	add    rsi,0x28
  4204c7:	test   edx,edx
  4204c9:	jle    42016e <__ctype_b_loc@plt+0x1de9e>
  4204cf:	movsxd rax,edx
  4204d2:	shl    rax,0x4
  4204d6:	add    rax,r8
  4204d9:	add    rax,0xfffffffffffffff0
  4204dd:	cmp    rax,rcx
  4204e0:	lea    rcx,[rip+0x9631]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4204e7:	cmovb  rcx,rax
  4204eb:	lea    rdx,[rip+0x9626]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4204f2:	xor    eax,eax
  4204f4:	cmp    rsi,rdx
  4204f7:	je     42050a <__ctype_b_loc@plt+0x1e23a>
  4204f9:	cmp    rcx,rdx
  4204fc:	je     42050a <__ctype_b_loc@plt+0x1e23a>
  4204fe:	mov    rdi,rbx
  420501:	mov    rdx,rcx
  420504:	pop    rbx
  420505:	jmp    409780 <__ctype_b_loc@plt+0x74b0>
  42050a:	pop    rbx
  42050b:	ret    
  42050c:	nop    DWORD PTR [rax+0x0]
  420510:	push   rbp
  420511:	push   r14
  420513:	push   rbx
  420514:	mov    r14,rdi
  420517:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  42051c:	mov    rbx,rax
  42051f:	mov    rdi,QWORD PTR [rax]
  420522:	call   4020d0 <fclose@plt>
  420527:	mov    ebp,eax
  420529:	mov    QWORD PTR [rbx],0x0
  420530:	call   402050 <__errno_location@plt>
  420535:	mov    rcx,QWORD PTR [r14+0x10]
  420539:	test   ebp,ebp
  42053b:	je     42057c <__ctype_b_loc@plt+0x1e2ac>
  42053d:	mov    ebx,DWORD PTR [rax]
  42053f:	mov    DWORD PTR [rcx+0x8],0x0
  420546:	add    rcx,0x10
  42054a:	mov    QWORD PTR [r14+0x10],rcx
  42054e:	mov    edi,ebx
  420550:	call   4022a0 <strerror@plt>
  420555:	lea    rsi,[rip+0x988b]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  42055c:	mov    rdi,r14
  42055f:	mov    rdx,rax
  420562:	xor    eax,eax
  420564:	call   410460 <__ctype_b_loc@plt+0xe190>
  420569:	mov    rcx,QWORD PTR [r14+0x10]
  42056d:	vcvtsi2sd xmm0,xmm0,ebx
  420571:	vmovsd QWORD PTR [rcx],xmm0
  420575:	mov    eax,0x3
  42057a:	jmp    420587 <__ctype_b_loc@plt+0x1e2b7>
  42057c:	mov    DWORD PTR [rcx],0x1
  420582:	mov    eax,0x1
  420587:	mov    DWORD PTR [rcx+0x8],eax
  42058a:	add    QWORD PTR [r14+0x10],0x10
  42058f:	pop    rbx
  420590:	pop    r14
  420592:	pop    rbp
  420593:	ret    
  420594:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42059e:	xchg   ax,ax
  4205a0:	push   r14
  4205a2:	push   rbx
  4205a3:	push   rax
  4205a4:	mov    r14,rdi
  4205a7:	mov    rbx,QWORD PTR [rdi+0x10]
  4205ab:	mov    DWORD PTR [rbx+0x8],0x0
  4205b2:	add    rbx,0x10
  4205b6:	mov    QWORD PTR [rdi+0x10],rbx
  4205ba:	mov    rax,QWORD PTR [rdi+0x20]
  4205be:	mov    rcx,QWORD PTR [rax+0x78]
  4205c2:	cmp    rcx,QWORD PTR [rax+0x70]
  4205c6:	jb     4205d4 <__ctype_b_loc@plt+0x1e304>
  4205c8:	mov    rdi,r14
  4205cb:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4205d0:	mov    rbx,QWORD PTR [r14+0x10]
  4205d4:	lea    rsi,[rip+0xa20d]        # 42a7e8 <__ctype_b_loc@plt+0x28518>
  4205db:	mov    edx,0x1a
  4205e0:	mov    rdi,r14
  4205e3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4205e8:	mov    QWORD PTR [rbx],rax
  4205eb:	mov    DWORD PTR [rbx+0x8],0x4
  4205f2:	add    QWORD PTR [r14+0x10],0x10
  4205f7:	mov    eax,0x2
  4205fc:	add    rsp,0x8
  420600:	pop    rbx
  420601:	pop    r14
  420603:	ret    
  420604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42060e:	xchg   ax,ax
  420610:	push   rbp
  420611:	push   rbx
  420612:	push   rax
  420613:	mov    rbx,rdi
  420616:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  42061b:	mov    QWORD PTR [rax],0x0
  420622:	call   402050 <__errno_location@plt>
  420627:	mov    ebp,DWORD PTR [rax]
  420629:	mov    rax,QWORD PTR [rbx+0x10]
  42062d:	mov    DWORD PTR [rax+0x8],0x0
  420634:	add    rax,0x10
  420638:	mov    QWORD PTR [rbx+0x10],rax
  42063c:	mov    edi,ebp
  42063e:	call   4022a0 <strerror@plt>
  420643:	lea    rsi,[rip+0x979d]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  42064a:	mov    rdi,rbx
  42064d:	mov    rdx,rax
  420650:	xor    eax,eax
  420652:	call   410460 <__ctype_b_loc@plt+0xe190>
  420657:	mov    rax,QWORD PTR [rbx+0x10]
  42065b:	vcvtsi2sd xmm0,xmm0,ebp
  42065f:	vmovsd QWORD PTR [rax],xmm0
  420663:	mov    DWORD PTR [rax+0x8],0x3
  42066a:	add    QWORD PTR [rbx+0x10],0x10
  42066f:	mov    eax,0x3
  420674:	add    rsp,0x8
  420678:	pop    rbx
  420679:	pop    rbp
  42067a:	ret    
  42067b:	nop    DWORD PTR [rax+rax*1+0x0]
  420680:	push   r14
  420682:	push   rbx
  420683:	sub    rsp,0x18
  420687:	mov    rbx,rdi
  42068a:	mov    rcx,QWORD PTR [rdi+0x10]
  42068e:	mov    rax,QWORD PTR [rdi+0x18]
  420692:	lea    r14,[rip+0x947f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420699:	cmp    rax,r14
  42069c:	je     4206ad <__ctype_b_loc@plt+0x1e3dd>
  42069e:	cmp    rax,rcx
  4206a1:	jae    4206ad <__ctype_b_loc@plt+0x1e3dd>
  4206a3:	cmp    DWORD PTR [rax+0x8],0xffffffff
  4206a7:	jne    420752 <__ctype_b_loc@plt+0x1e482>
  4206ad:	mov    rax,QWORD PTR [rbx+0x28]
  4206b1:	mov    rax,QWORD PTR [rax+0x8]
  4206b5:	mov    rax,QWORD PTR [rax]
  4206b8:	mov    rsi,QWORD PTR [rax+0x18]
  4206bc:	mov    QWORD PTR [rbx+0x88],rsi
  4206c3:	mov    DWORD PTR [rbx+0x90],0x5
  4206cd:	cmp    DWORD PTR [rsi+0x38],0x2
  4206d1:	jb     4206dd <__ctype_b_loc@plt+0x1e40d>
  4206d3:	mov    rax,QWORD PTR [rsi+0x18]
  4206d7:	add    rax,0x10
  4206db:	jmp    420741 <__ctype_b_loc@plt+0x1e471>
  4206dd:	mov    al,BYTE PTR [rsi+0xb]
  4206e0:	mov    rdx,0xffffffffffffffff
  4206e7:	shlx   rdi,rdx,rax
  4206ec:	or     rdi,0x1
  4206f0:	xor    rdi,0xfffffffffffffffe
  4206f4:	mov    eax,0x40000000
  4206f9:	xor    edx,edx
  4206fb:	div    rdi
  4206fe:	lea    rax,[rdx+rdx*4]
  420702:	shl    rax,0x3
  420706:	add    rax,QWORD PTR [rsi+0x20]
  42070a:	vmovsd xmm0,QWORD PTR [rip+0x9646]        # 429d58 <__ctype_b_loc@plt+0x27a88>
  420712:	cmp    DWORD PTR [rax+0x18],0x3
  420716:	je     42072f <__ctype_b_loc@plt+0x1e45f>
  420718:	nop    DWORD PTR [rax+rax*1+0x0]
  420720:	mov    rax,QWORD PTR [rax+0x20]
  420724:	test   rax,rax
  420727:	je     42073e <__ctype_b_loc@plt+0x1e46e>
  420729:	cmp    DWORD PTR [rax+0x18],0x3
  42072d:	jne    420720 <__ctype_b_loc@plt+0x1e450>
  42072f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  420734:	vucomisd xmm1,xmm0
  420738:	jne    420720 <__ctype_b_loc@plt+0x1e450>
  42073a:	jp     420720 <__ctype_b_loc@plt+0x1e450>
  42073c:	jmp    420741 <__ctype_b_loc@plt+0x1e471>
  42073e:	mov    rax,r14
  420741:	mov    rdx,QWORD PTR [rax]
  420744:	mov    QWORD PTR [rcx],rdx
  420747:	mov    eax,DWORD PTR [rax+0x8]
  42074a:	mov    DWORD PTR [rcx+0x8],eax
  42074d:	add    QWORD PTR [rbx+0x10],0x10
  420752:	mov    rdi,rbx
  420755:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  42075a:	cmp    QWORD PTR [rax],0x0
  42075e:	jne    420771 <__ctype_b_loc@plt+0x1e4a1>
  420760:	lea    rsi,[rip+0x9fd1]        # 42a738 <__ctype_b_loc@plt+0x28468>
  420767:	mov    rdi,rbx
  42076a:	xor    eax,eax
  42076c:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  420771:	mov    rax,QWORD PTR [rbx+0x10]
  420775:	mov    rcx,QWORD PTR [rbx+0x18]
  420779:	cmp    rcx,rax
  42077c:	cmovb  r14,rcx
  420780:	mov    edx,DWORD PTR [r14+0x8]
  420784:	cmp    edx,0x8
  420787:	je     4207a6 <__ctype_b_loc@plt+0x1e4d6>
  420789:	cmp    edx,0x7
  42078c:	je     420795 <__ctype_b_loc@plt+0x1e4c5>
  42078e:	xor    ecx,ecx
  420790:	cmp    edx,0x6
  420793:	jne    4207b6 <__ctype_b_loc@plt+0x1e4e6>
  420795:	mov    rcx,QWORD PTR [r14]
  420798:	mov    rcx,QWORD PTR [rcx+0x18]
  42079c:	mov    QWORD PTR [rax],rcx
  42079f:	mov    ecx,0x5
  4207a4:	jmp    4207b6 <__ctype_b_loc@plt+0x1e4e6>
  4207a6:	mov    rcx,QWORD PTR [r14]
  4207a9:	mov    rdx,QWORD PTR [rcx+0x78]
  4207ad:	mov    QWORD PTR [rax],rdx
  4207b0:	mov    ecx,DWORD PTR [rcx+0x80]
  4207b6:	mov    DWORD PTR [rax+0x8],ecx
  4207b9:	mov    r14,QWORD PTR [rbx+0x10]
  4207bd:	lea    rax,[r14+0x10]
  4207c1:	mov    QWORD PTR [rbx+0x10],rax
  4207c5:	lea    rsi,[rip+0x9f89]        # 42a755 <__ctype_b_loc@plt+0x28485>
  4207cc:	mov    edx,0x7
  4207d1:	mov    rdi,rbx
  4207d4:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4207d9:	mov    QWORD PTR [rsp+0x8],rax
  4207de:	mov    DWORD PTR [rsp+0x10],0x4
  4207e6:	mov    rcx,QWORD PTR [rbx+0x10]
  4207ea:	lea    rdx,[rsp+0x8]
  4207ef:	mov    rdi,rbx
  4207f2:	mov    rsi,r14
  4207f5:	call   408610 <__ctype_b_loc@plt+0x6340>
  4207fa:	mov    rax,QWORD PTR [rbx+0x10]
  4207fe:	lea    rcx,[rax+0x10]
  420802:	mov    QWORD PTR [rbx+0x10],rcx
  420806:	mov    rax,QWORD PTR [rax]
  420809:	mov    rdi,rbx
  42080c:	add    rsp,0x18
  420810:	pop    rbx
  420811:	pop    r14
  420813:	jmp    QWORD PTR [rax+0x20]
  420816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420820:	push   rbp
  420821:	push   r14
  420823:	push   rbx
  420824:	mov    rbx,rdi
  420827:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  42082c:	mov    rdi,QWORD PTR [rax]
  42082f:	test   rdi,rdi
  420832:	jne    42084b <__ctype_b_loc@plt+0x1e57b>
  420834:	mov    r14,rax
  420837:	lea    rsi,[rip+0x9efa]        # 42a738 <__ctype_b_loc@plt+0x28468>
  42083e:	mov    rdi,rbx
  420841:	xor    eax,eax
  420843:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  420848:	mov    rdi,QWORD PTR [r14]
  42084b:	call   4021d0 <fflush@plt>
  420850:	mov    ebp,eax
  420852:	call   402050 <__errno_location@plt>
  420857:	mov    rcx,QWORD PTR [rbx+0x10]
  42085b:	test   ebp,ebp
  42085d:	je     42089e <__ctype_b_loc@plt+0x1e5ce>
  42085f:	mov    ebp,DWORD PTR [rax]
  420861:	mov    DWORD PTR [rcx+0x8],0x0
  420868:	add    rcx,0x10
  42086c:	mov    QWORD PTR [rbx+0x10],rcx
  420870:	mov    edi,ebp
  420872:	call   4022a0 <strerror@plt>
  420877:	lea    rsi,[rip+0x9569]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  42087e:	mov    rdi,rbx
  420881:	mov    rdx,rax
  420884:	xor    eax,eax
  420886:	call   410460 <__ctype_b_loc@plt+0xe190>
  42088b:	mov    rcx,QWORD PTR [rbx+0x10]
  42088f:	vcvtsi2sd xmm0,xmm0,ebp
  420893:	vmovsd QWORD PTR [rcx],xmm0
  420897:	mov    eax,0x3
  42089c:	jmp    4208a9 <__ctype_b_loc@plt+0x1e5d9>
  42089e:	mov    DWORD PTR [rcx],0x1
  4208a4:	mov    eax,0x1
  4208a9:	mov    DWORD PTR [rcx+0x8],eax
  4208ac:	add    QWORD PTR [rbx+0x10],0x10
  4208b1:	pop    rbx
  4208b2:	pop    r14
  4208b4:	pop    rbp
  4208b5:	ret    
  4208b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4208c0:	push   rbx
  4208c1:	mov    rbx,rdi
  4208c4:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  4208c9:	cmp    QWORD PTR [rax],0x0
  4208cd:	jne    4208e0 <__ctype_b_loc@plt+0x1e610>
  4208cf:	lea    rsi,[rip+0x9e62]        # 42a738 <__ctype_b_loc@plt+0x28468>
  4208d6:	mov    rdi,rbx
  4208d9:	xor    eax,eax
  4208db:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4208e0:	mov    rax,QWORD PTR [rbx+0x10]
  4208e4:	mov    rcx,QWORD PTR [rbx+0x18]
  4208e8:	cmp    rcx,rax
  4208eb:	lea    rdx,[rip+0x9226]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4208f2:	cmovb  rdx,rcx
  4208f6:	mov    rcx,QWORD PTR [rdx]
  4208f9:	mov    QWORD PTR [rax],rcx
  4208fc:	mov    ecx,DWORD PTR [rdx+0x8]
  4208ff:	mov    DWORD PTR [rax+0x8],ecx
  420902:	mov    rax,QWORD PTR [rbx+0x10]
  420906:	lea    rcx,[rax+0x10]
  42090a:	mov    QWORD PTR [rbx+0x10],rcx
  42090e:	mov    DWORD PTR [rax+0x10],0x0
  420915:	mov    DWORD PTR [rax+0x18],0x1
  42091c:	add    QWORD PTR [rbx+0x10],0x10
  420921:	lea    rsi,[rip+0x2e8]        # 420c10 <__ctype_b_loc@plt+0x1e940>
  420928:	mov    rdi,rbx
  42092b:	mov    edx,0x2
  420930:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  420935:	mov    eax,0x1
  42093a:	pop    rbx
  42093b:	ret    
  42093c:	nop    DWORD PTR [rax+0x0]
  420940:	push   r14
  420942:	push   rbx
  420943:	push   rax
  420944:	mov    rbx,rdi
  420947:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  42094c:	mov    rsi,QWORD PTR [rax]
  42094f:	test   rsi,rsi
  420952:	jne    42096b <__ctype_b_loc@plt+0x1e69b>
  420954:	mov    r14,rax
  420957:	lea    rsi,[rip+0x9dda]        # 42a738 <__ctype_b_loc@plt+0x28468>
  42095e:	mov    rdi,rbx
  420961:	xor    eax,eax
  420963:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  420968:	mov    rsi,QWORD PTR [r14]
  42096b:	mov    rdi,rbx
  42096e:	mov    edx,0x2
  420973:	add    rsp,0x8
  420977:	pop    rbx
  420978:	pop    r14
  42097a:	jmp    420fc0 <__ctype_b_loc@plt+0x1ecf0>
  42097f:	nop
  420980:	push   r14
  420982:	push   rbx
  420983:	push   rax
  420984:	mov    rbx,rdi
  420987:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  42098c:	mov    rsi,QWORD PTR [rax]
  42098f:	test   rsi,rsi
  420992:	jne    4209ab <__ctype_b_loc@plt+0x1e6db>
  420994:	mov    r14,rax
  420997:	lea    rsi,[rip+0x9d9a]        # 42a738 <__ctype_b_loc@plt+0x28468>
  42099e:	mov    rdi,rbx
  4209a1:	xor    eax,eax
  4209a3:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4209a8:	mov    rsi,QWORD PTR [r14]
  4209ab:	mov    rdi,rbx
  4209ae:	mov    edx,0x2
  4209b3:	add    rsp,0x8
  4209b7:	pop    rbx
  4209b8:	pop    r14
  4209ba:	jmp    4218d0 <__ctype_b_loc@plt+0x1f600>
  4209bf:	nop
  4209c0:	push   r14
  4209c2:	push   rbx
  4209c3:	sub    rsp,0x18
  4209c7:	mov    rbx,rdi
  4209ca:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  4209cf:	cmp    QWORD PTR [rax],0x0
  4209d3:	je     420a7d <__ctype_b_loc@plt+0x1e7ad>
  4209d9:	mov    rax,QWORD PTR [rbx+0x10]
  4209dd:	mov    rdx,QWORD PTR [rbx+0x18]
  4209e1:	cmp    rdx,rax
  4209e4:	lea    rcx,[rip+0x912d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4209eb:	cmovb  rcx,rdx
  4209ef:	mov    esi,DWORD PTR [rcx+0x8]
  4209f2:	cmp    esi,0x8
  4209f5:	je     420a14 <__ctype_b_loc@plt+0x1e744>
  4209f7:	cmp    esi,0x7
  4209fa:	je     420a03 <__ctype_b_loc@plt+0x1e733>
  4209fc:	xor    edx,edx
  4209fe:	cmp    esi,0x6
  420a01:	jne    420a24 <__ctype_b_loc@plt+0x1e754>
  420a03:	mov    rcx,QWORD PTR [rcx]
  420a06:	mov    rcx,QWORD PTR [rcx+0x18]
  420a0a:	mov    QWORD PTR [rax],rcx
  420a0d:	mov    edx,0x5
  420a12:	jmp    420a24 <__ctype_b_loc@plt+0x1e754>
  420a14:	mov    rcx,QWORD PTR [rcx]
  420a17:	mov    rdx,QWORD PTR [rcx+0x78]
  420a1b:	mov    QWORD PTR [rax],rdx
  420a1e:	mov    edx,DWORD PTR [rcx+0x80]
  420a24:	mov    DWORD PTR [rax+0x8],edx
  420a27:	mov    r14,QWORD PTR [rbx+0x10]
  420a2b:	lea    rax,[r14+0x10]
  420a2f:	mov    QWORD PTR [rbx+0x10],rax
  420a33:	lea    rsi,[rip+0x9d1b]        # 42a755 <__ctype_b_loc@plt+0x28485>
  420a3a:	mov    edx,0x7
  420a3f:	mov    rdi,rbx
  420a42:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  420a47:	mov    QWORD PTR [rsp+0x8],rax
  420a4c:	mov    DWORD PTR [rsp+0x10],0x4
  420a54:	mov    rcx,QWORD PTR [rbx+0x10]
  420a58:	lea    rdx,[rsp+0x8]
  420a5d:	mov    rdi,rbx
  420a60:	mov    rsi,r14
  420a63:	call   408610 <__ctype_b_loc@plt+0x6340>
  420a68:	mov    rax,QWORD PTR [rbx+0x10]
  420a6c:	lea    rcx,[rax+0x10]
  420a70:	mov    QWORD PTR [rbx+0x10],rcx
  420a74:	mov    rax,QWORD PTR [rax]
  420a77:	mov    rdi,rbx
  420a7a:	call   QWORD PTR [rax+0x20]
  420a7d:	xor    eax,eax
  420a7f:	add    rsp,0x18
  420a83:	pop    rbx
  420a84:	pop    r14
  420a86:	ret    
  420a87:	nop    WORD PTR [rax+rax*1+0x0]
  420a90:	push   r15
  420a92:	push   r14
  420a94:	push   r12
  420a96:	push   rbx
  420a97:	sub    rsp,0x18
  420a9b:	mov    rbx,rdi
  420a9e:	mov    rax,QWORD PTR [rdi+0x10]
  420aa2:	mov    rcx,QWORD PTR [rdi+0x18]
  420aa6:	cmp    rcx,rax
  420aa9:	lea    r12,[rip+0x9068]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420ab0:	cmovae rcx,r12
  420ab4:	mov    edx,DWORD PTR [rcx+0x8]
  420ab7:	cmp    edx,0x7
  420aba:	je     420adc <__ctype_b_loc@plt+0x1e80c>
  420abc:	cmp    edx,0x2
  420abf:	jne    420b8c <__ctype_b_loc@plt+0x1e8bc>
  420ac5:	mov    r14,QWORD PTR [rcx]
  420ac8:	test   r14,r14
  420acb:	je     420b8c <__ctype_b_loc@plt+0x1e8bc>
  420ad1:	mov    ecx,0xf0
  420ad6:	add    rcx,QWORD PTR [rbx+0x20]
  420ada:	jmp    420ae7 <__ctype_b_loc@plt+0x1e817>
  420adc:	mov    rcx,QWORD PTR [rcx]
  420adf:	lea    r14,[rcx+0x28]
  420ae3:	add    rcx,0x10
  420ae7:	mov    rcx,QWORD PTR [rcx]
  420aea:	test   rcx,rcx
  420aed:	je     420b8c <__ctype_b_loc@plt+0x1e8bc>
  420af3:	mov    QWORD PTR [rax],rcx
  420af6:	mov    DWORD PTR [rax+0x8],0x5
  420afd:	add    QWORD PTR [rbx+0x10],0x10
  420b02:	mov    r15d,0xa0
  420b08:	add    r15,QWORD PTR [rbx+0x20]
  420b0c:	lea    rsi,[rip+0x9c13]        # 42a726 <__ctype_b_loc@plt+0x28456>
  420b13:	mov    edx,0x5
  420b18:	mov    rdi,rbx
  420b1b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  420b20:	mov    QWORD PTR [rsp+0x8],rax
  420b25:	mov    DWORD PTR [rsp+0x10],0x4
  420b2d:	mov    rcx,QWORD PTR [rbx+0x10]
  420b31:	lea    rdx,[rsp+0x8]
  420b36:	mov    rdi,rbx
  420b39:	mov    rsi,r15
  420b3c:	call   408610 <__ctype_b_loc@plt+0x6340>
  420b41:	mov    rdx,QWORD PTR [rbx+0x10]
  420b45:	lea    rax,[rdx+0x10]
  420b49:	mov    QWORD PTR [rbx+0x10],rax
  420b4d:	cmp    rdx,r12
  420b50:	je     420b8c <__ctype_b_loc@plt+0x1e8bc>
  420b52:	lea    rcx,[rdx-0x10]
  420b56:	cmp    rcx,r12
  420b59:	je     420b8c <__ctype_b_loc@plt+0x1e8bc>
  420b5b:	mov    esi,DWORD PTR [rdx+0x8]
  420b5e:	cmp    esi,DWORD PTR [rdx-0x8]
  420b61:	jne    420b8c <__ctype_b_loc@plt+0x1e8bc>
  420b63:	cmp    esi,0x3
  420b66:	ja     420b83 <__ctype_b_loc@plt+0x1e8b3>
  420b68:	mov    esi,esi
  420b6a:	lea    rdi,[rip+0x8d7b]        # 4298ec <__ctype_b_loc@plt+0x2761c>
  420b71:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  420b75:	add    rsi,rdi
  420b78:	jmp    rsi
  420b7a:	mov    esi,DWORD PTR [rdx]
  420b7c:	cmp    esi,DWORD PTR [rdx-0x10]
  420b7f:	jne    420b8c <__ctype_b_loc@plt+0x1e8bc>
  420b81:	jmp    420bfd <__ctype_b_loc@plt+0x1e92d>
  420b83:	mov    rsi,QWORD PTR [rdx]
  420b86:	cmp    rsi,QWORD PTR [rdx-0x10]
  420b8a:	je     420bfd <__ctype_b_loc@plt+0x1e92d>
  420b8c:	mov    rdx,QWORD PTR [rbx+0x18]
  420b90:	lea    rcx,[rip+0x963f]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  420b97:	cmp    rdx,r12
  420b9a:	je     420bb6 <__ctype_b_loc@plt+0x1e8e6>
  420b9c:	cmp    rdx,rax
  420b9f:	jae    420bb6 <__ctype_b_loc@plt+0x1e8e6>
  420ba1:	movsxd rax,DWORD PTR [rdx+0x8]
  420ba5:	cmp    rax,0xffffffffffffffff
  420ba9:	je     420bb6 <__ctype_b_loc@plt+0x1e8e6>
  420bab:	lea    rcx,[rip+0xed2e]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  420bb2:	mov    rcx,QWORD PTR [rcx+rax*8]
  420bb6:	lea    rsi,[rip+0x9605]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  420bbd:	lea    rdx,[rip+0x9b62]        # 42a726 <__ctype_b_loc@plt+0x28456>
  420bc4:	xor    r14d,r14d
  420bc7:	mov    rdi,rbx
  420bca:	xor    eax,eax
  420bcc:	call   410460 <__ctype_b_loc@plt+0xe190>
  420bd1:	mov    rdi,rbx
  420bd4:	mov    esi,0x1
  420bd9:	mov    rdx,rax
  420bdc:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  420be1:	mov    rax,r14
  420be4:	add    rsp,0x18
  420be8:	pop    rbx
  420be9:	pop    r12
  420beb:	pop    r14
  420bed:	pop    r15
  420bef:	ret    
  420bf0:	vmovsd xmm0,QWORD PTR [rdx]
  420bf4:	vucomisd xmm0,QWORD PTR [rdx-0x10]
  420bf9:	jne    420b8c <__ctype_b_loc@plt+0x1e8bc>
  420bfb:	jp     420b8c <__ctype_b_loc@plt+0x1e8bc>
  420bfd:	mov    QWORD PTR [rbx+0x10],rcx
  420c01:	jmp    420be1 <__ctype_b_loc@plt+0x1e911>
  420c03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c0d:	nop    DWORD PTR [rax]
  420c10:	push   rbp
  420c11:	push   r15
  420c13:	push   r14
  420c15:	push   rbx
  420c16:	sub    rsp,0x18
  420c1a:	mov    r14,rdi
  420c1d:	mov    rax,QWORD PTR [rdi+0x28]
  420c21:	mov    rax,QWORD PTR [rax+0x8]
  420c25:	mov    rax,QWORD PTR [rax]
  420c28:	cmp    BYTE PTR [rax+0xb],0x0
  420c2c:	lea    rax,[rax+0x28]
  420c30:	lea    r15,[rip+0x8ee1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  420c37:	cmove  rax,r15
  420c3b:	mov    ecx,DWORD PTR [rax+0x8]
  420c3e:	cmp    ecx,0x2
  420c41:	je     420c51 <__ctype_b_loc@plt+0x1e981>
  420c43:	cmp    ecx,0x7
  420c46:	jne    420c56 <__ctype_b_loc@plt+0x1e986>
  420c48:	mov    rax,QWORD PTR [rax]
  420c4b:	add    rax,0x28
  420c4f:	jmp    420c58 <__ctype_b_loc@plt+0x1e988>
  420c51:	mov    rax,QWORD PTR [rax]
  420c54:	jmp    420c58 <__ctype_b_loc@plt+0x1e988>
  420c56:	xor    eax,eax
  420c58:	mov    rbp,QWORD PTR [rax]
  420c5b:	test   rbp,rbp
  420c5e:	jne    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420c60:	lea    rsi,[rip+0x9af6]        # 42a75d <__ctype_b_loc@plt+0x2848d>
  420c67:	mov    rdi,r14
  420c6a:	xor    eax,eax
  420c6c:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  420c71:	mov    rdi,r14
  420c74:	mov    rsi,rbp
  420c77:	call   420e60 <__ctype_b_loc@plt+0x1eb90>
  420c7c:	mov    ebx,eax
  420c7e:	mov    rdi,rbp
  420c81:	call   402090 <ferror@plt>
  420c86:	test   eax,eax
  420c88:	je     420cb1 <__ctype_b_loc@plt+0x1e9e1>
  420c8a:	call   402050 <__errno_location@plt>
  420c8f:	mov    edi,DWORD PTR [rax]
  420c91:	call   4022a0 <strerror@plt>
  420c96:	lea    rsi,[rip+0x914a]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  420c9d:	xor    ebp,ebp
  420c9f:	mov    rdi,r14
  420ca2:	mov    rdx,rax
  420ca5:	xor    eax,eax
  420ca7:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  420cac:	jmp    420e4c <__ctype_b_loc@plt+0x1eb7c>
  420cb1:	mov    ebp,0x1
  420cb6:	test   ebx,ebx
  420cb8:	jne    420e4c <__ctype_b_loc@plt+0x1eb7c>
  420cbe:	mov    rax,QWORD PTR [r14+0x28]
  420cc2:	mov    rax,QWORD PTR [rax+0x8]
  420cc6:	mov    rcx,QWORD PTR [rax]
  420cc9:	cmp    BYTE PTR [rcx+0xb],0x2
  420ccd:	lea    rcx,[rcx+0x38]
  420cd1:	cmovb  rcx,r15
  420cd5:	mov    ebp,DWORD PTR [rcx+0x8]
  420cd8:	test   ebp,ebp
  420cda:	je     420e4c <__ctype_b_loc@plt+0x1eb7c>
  420ce0:	cmp    ebp,0x1
  420ce3:	jne    420cee <__ctype_b_loc@plt+0x1ea1e>
  420ce5:	cmp    DWORD PTR [rcx],0x0
  420ce8:	je     420e4a <__ctype_b_loc@plt+0x1eb7a>
  420cee:	mov    rdx,QWORD PTR [r14+0x10]
  420cf2:	mov    rcx,QWORD PTR [r14+0x18]
  420cf6:	cmp    rdx,rcx
  420cf9:	jae    420d85 <__ctype_b_loc@plt+0x1eab5>
  420cff:	mov    rsi,rdx
  420d02:	not    rsi
  420d05:	add    rsi,rcx
  420d08:	mov    edi,esi
  420d0a:	shr    edi,0x4
  420d0d:	inc    edi
  420d0f:	and    rdi,0x7
  420d13:	je     420d30 <__ctype_b_loc@plt+0x1ea60>
  420d15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d1f:	nop
  420d20:	mov    DWORD PTR [rdx+0x8],0x0
  420d27:	add    rdx,0x10
  420d2b:	dec    rdi
  420d2e:	jne    420d20 <__ctype_b_loc@plt+0x1ea50>
  420d30:	cmp    rsi,0x70
  420d34:	jb     420d81 <__ctype_b_loc@plt+0x1eab1>
  420d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d40:	mov    DWORD PTR [rdx+0x8],0x0
  420d47:	mov    DWORD PTR [rdx+0x18],0x0
  420d4e:	mov    DWORD PTR [rdx+0x28],0x0
  420d55:	mov    DWORD PTR [rdx+0x38],0x0
  420d5c:	mov    DWORD PTR [rdx+0x48],0x0
  420d63:	mov    DWORD PTR [rdx+0x58],0x0
  420d6a:	mov    DWORD PTR [rdx+0x68],0x0
  420d71:	mov    DWORD PTR [rdx+0x78],0x0
  420d78:	sub    rdx,0xffffffffffffff80
  420d7c:	cmp    rdx,rcx
  420d7f:	jb     420d40 <__ctype_b_loc@plt+0x1ea70>
  420d81:	mov    QWORD PTR [r14+0x10],rdx
  420d85:	mov    QWORD PTR [r14+0x10],rcx
  420d89:	mov    rax,QWORD PTR [rax]
  420d8c:	cmp    BYTE PTR [rax+0xb],0x0
  420d90:	lea    rax,[rax+0x28]
  420d94:	cmove  rax,r15
  420d98:	mov    rdx,QWORD PTR [rax]
  420d9b:	mov    QWORD PTR [rcx],rdx
  420d9e:	mov    eax,DWORD PTR [rax+0x8]
  420da1:	mov    DWORD PTR [rcx+0x8],eax
  420da4:	mov    rax,QWORD PTR [r14+0x10]
  420da8:	mov    rdx,QWORD PTR [r14+0x18]
  420dac:	lea    rcx,[rax+0x10]
  420db0:	mov    QWORD PTR [r14+0x10],rcx
  420db4:	cmp    rdx,rcx
  420db7:	cmovb  r15,rdx
  420dbb:	mov    esi,DWORD PTR [r15+0x8]
  420dbf:	cmp    esi,0x8
  420dc2:	je     420de1 <__ctype_b_loc@plt+0x1eb11>
  420dc4:	cmp    esi,0x7
  420dc7:	je     420dd0 <__ctype_b_loc@plt+0x1eb00>
  420dc9:	xor    edx,edx
  420dcb:	cmp    esi,0x6
  420dce:	jne    420df1 <__ctype_b_loc@plt+0x1eb21>
  420dd0:	mov    rdx,QWORD PTR [r15]
  420dd3:	mov    rdx,QWORD PTR [rdx+0x18]
  420dd7:	mov    QWORD PTR [rcx],rdx
  420dda:	mov    edx,0x5
  420ddf:	jmp    420df1 <__ctype_b_loc@plt+0x1eb21>
  420de1:	mov    rdx,QWORD PTR [r15]
  420de4:	mov    rsi,QWORD PTR [rdx+0x78]
  420de8:	mov    QWORD PTR [rcx],rsi
  420deb:	mov    edx,DWORD PTR [rdx+0x80]
  420df1:	mov    DWORD PTR [rax+0x18],edx
  420df4:	mov    rbx,QWORD PTR [r14+0x10]
  420df8:	lea    rax,[rbx+0x10]
  420dfc:	mov    QWORD PTR [r14+0x10],rax
  420e00:	lea    rsi,[rip+0x994e]        # 42a755 <__ctype_b_loc@plt+0x28485>
  420e07:	mov    edx,0x7
  420e0c:	mov    rdi,r14
  420e0f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  420e14:	mov    QWORD PTR [rsp+0x8],rax
  420e19:	mov    DWORD PTR [rsp+0x10],0x4
  420e21:	mov    rcx,QWORD PTR [r14+0x10]
  420e25:	lea    rdx,[rsp+0x8]
  420e2a:	mov    rdi,r14
  420e2d:	mov    rsi,rbx
  420e30:	call   408610 <__ctype_b_loc@plt+0x6340>
  420e35:	mov    rax,QWORD PTR [r14+0x10]
  420e39:	lea    rcx,[rax+0x10]
  420e3d:	mov    QWORD PTR [r14+0x10],rcx
  420e41:	mov    rax,QWORD PTR [rax]
  420e44:	mov    rdi,r14
  420e47:	call   QWORD PTR [rax+0x20]
  420e4a:	xor    ebp,ebp
  420e4c:	mov    eax,ebp
  420e4e:	add    rsp,0x18
  420e52:	pop    rbx
  420e53:	pop    r14
  420e55:	pop    r15
  420e57:	pop    rbp
  420e58:	ret    
  420e59:	nop    DWORD PTR [rax+0x0]
  420e60:	push   r15
  420e62:	push   r14
  420e64:	push   r12
  420e66:	push   rbx
  420e67:	sub    rsp,0x2038
  420e6e:	mov    r15,rsi
  420e71:	mov    r14,rdi
  420e74:	mov    QWORD PTR [rsp+0x30],rdi
  420e79:	lea    rax,[rsp+0x38]
  420e7e:	mov    QWORD PTR [rsp+0x20],rax
  420e83:	mov    DWORD PTR [rsp+0x28],0x0
  420e8b:	lea    rdi,[rsp+0x20]
  420e90:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  420e95:	mov    rbx,rax
  420e98:	mov    rdi,rax
  420e9b:	mov    esi,0x2000
  420ea0:	mov    rdx,r15
  420ea3:	call   402150 <fgets@plt>
  420ea8:	test   rax,rax
  420eab:	je     420f15 <__ctype_b_loc@plt+0x1ec45>
  420ead:	lea    r12,[rsp+0x20]
  420eb2:	jmp    420ee5 <__ctype_b_loc@plt+0x1ec15>
  420eb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ebe:	xchg   ax,ax
  420ec0:	add    QWORD PTR [rsp+0x20],rax
  420ec5:	mov    rdi,r12
  420ec8:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  420ecd:	mov    rbx,rax
  420ed0:	mov    rdi,rax
  420ed3:	mov    esi,0x2000
  420ed8:	mov    rdx,r15
  420edb:	call   402150 <fgets@plt>
  420ee0:	test   rax,rax
  420ee3:	je     420f15 <__ctype_b_loc@plt+0x1ec45>
  420ee5:	mov    rdi,rbx
  420ee8:	call   4020e0 <strlen@plt>
  420eed:	test   rax,rax
  420ef0:	je     420ec0 <__ctype_b_loc@plt+0x1ebf0>
  420ef2:	cmp    BYTE PTR [rbx+rax*1-0x1],0xa
  420ef7:	jne    420ec0 <__ctype_b_loc@plt+0x1ebf0>
  420ef9:	dec    rax
  420efc:	add    QWORD PTR [rsp+0x20],rax
  420f01:	lea    rdi,[rsp+0x20]
  420f06:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  420f0b:	mov    eax,0x1
  420f10:	jmp    420fa4 <__ctype_b_loc@plt+0x1ecd4>
  420f15:	lea    rdi,[rsp+0x20]
  420f1a:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  420f1f:	mov    rbx,QWORD PTR [r14+0x10]
  420f23:	mov    eax,DWORD PTR [rbx-0x8]
  420f26:	xor    ecx,ecx
  420f28:	add    eax,0xfffffffd
  420f2b:	cmp    eax,0x4
  420f2e:	ja     420f9c <__ctype_b_loc@plt+0x1eccc>
  420f30:	lea    rdx,[rip+0x89c5]        # 4298fc <__ctype_b_loc@plt+0x2762c>
  420f37:	movsxd rax,DWORD PTR [rdx+rax*4]
  420f3b:	add    rax,rdx
  420f3e:	jmp    rax
  420f40:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  420f45:	lea    rsi,[rip+0x8ed5]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  420f4c:	mov    r15,rsp
  420f4f:	mov    rdi,r15
  420f52:	mov    al,0x1
  420f54:	call   402270 <sprintf@plt>
  420f59:	mov    rdi,r15
  420f5c:	call   4020e0 <strlen@plt>
  420f61:	mov    rdi,r14
  420f64:	mov    rsi,r15
  420f67:	mov    rdx,rax
  420f6a:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  420f6f:	mov    QWORD PTR [rbx-0x10],rax
  420f73:	mov    DWORD PTR [rbx-0x8],0x4
  420f7a:	jmp    420f80 <__ctype_b_loc@plt+0x1ecb0>
  420f7c:	mov    rax,QWORD PTR [rbx-0x10]
  420f80:	mov    rcx,QWORD PTR [rax+0x10]
  420f84:	jmp    420f9c <__ctype_b_loc@plt+0x1eccc>
  420f86:	mov    rdi,QWORD PTR [rbx-0x10]
  420f8a:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  420f8f:	movsxd rcx,eax
  420f92:	jmp    420f9c <__ctype_b_loc@plt+0x1eccc>
  420f94:	mov    rax,QWORD PTR [rbx-0x10]
  420f98:	mov    rcx,QWORD PTR [rax+0x20]
  420f9c:	xor    eax,eax
  420f9e:	test   rcx,rcx
  420fa1:	setne  al
  420fa4:	add    rsp,0x2038
  420fab:	pop    rbx
  420fac:	pop    r12
  420fae:	pop    r14
  420fb0:	pop    r15
  420fb2:	ret    
  420fb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420fbd:	nop    DWORD PTR [rax]
  420fc0:	push   rbp
  420fc1:	push   r15
  420fc3:	push   r14
  420fc5:	push   r13
  420fc7:	push   r12
  420fc9:	push   rbx
  420fca:	sub    rsp,0x68
  420fce:	mov    ebx,edx
  420fd0:	mov    rbp,rsi
  420fd3:	mov    r12,rdi
  420fd6:	mov    r13,QWORD PTR [rdi+0x10]
  420fda:	sub    r13,QWORD PTR [rdi+0x18]
  420fde:	shr    r13,0x4
  420fe2:	mov    rdi,rsi
  420fe5:	call   4021a0 <clearerr@plt>
  420fea:	cmp    r13d,0x1
  420fee:	mov    QWORD PTR [rsp+0x20],rbx
  420ff3:	jne    42100c <__ctype_b_loc@plt+0x1ed3c>
  420ff5:	mov    rdi,r12
  420ff8:	mov    rsi,rbp
  420ffb:	call   420e60 <__ctype_b_loc@plt+0x1eb90>
  421000:	mov    r14d,eax
  421003:	lea    r15d,[rbx+0x1]
  421007:	jmp    4216f7 <__ctype_b_loc@plt+0x1f427>
  42100c:	lea    esi,[r13+0x13]
  421010:	lea    rdx,[rip+0x975d]        # 42a774 <__ctype_b_loc@plt+0x284a4>
  421017:	mov    rdi,r12
  42101a:	call   41f430 <__ctype_b_loc@plt+0x1d160>
  42101f:	add    r13d,0xfffffffe
  421023:	lea    rax,[r12+0x78]
  421028:	mov    QWORD PTR [rsp+0x18],rax
  42102d:	lea    rax,[r12+0x88]
  421035:	mov    QWORD PTR [rsp+0x8],rax
  42103a:	movsxd r15,ebx
  42103d:	mov    QWORD PTR [rsp+0x10],rbp
  421042:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42104c:	nop    DWORD PTR [rax+0x0]
  421050:	test   r15,r15
  421053:	jle    421080 <__ctype_b_loc@plt+0x1edb0>
  421055:	mov    rcx,QWORD PTR [r12+0x10]
  42105a:	mov    rdx,QWORD PTR [r12+0x18]
  42105f:	lea    rbx,[r15-0x1]
  421063:	mov    rax,rbx
  421066:	shl    rax,0x4
  42106a:	add    rax,rdx
  42106d:	cmp    rax,rcx
  421070:	jb     421130 <__ctype_b_loc@plt+0x1ee60>
  421076:	jmp    421197 <__ctype_b_loc@plt+0x1eec7>
  42107b:	nop    DWORD PTR [rax+rax*1+0x0]
  421080:	cmp    r15,0xffffffffffffd8f1
  421087:	jl     42109a <__ctype_b_loc@plt+0x1edca>
  421089:	mov    rax,r15
  42108c:	shl    rax,0x4
  421090:	add    rax,QWORD PTR [r12+0x10]
  421095:	jmp    421130 <__ctype_b_loc@plt+0x1ee60>
  42109a:	mov    rax,QWORD PTR [rsp+0x18]
  42109f:	cmp    r15d,0xffffd8ee
  4210a6:	je     421130 <__ctype_b_loc@plt+0x1ee60>
  4210ac:	cmp    r15d,0xffffd8ef
  4210b3:	je     4210cd <__ctype_b_loc@plt+0x1edfd>
  4210b5:	cmp    r15d,0xffffd8f0
  4210bc:	jne    4210f8 <__ctype_b_loc@plt+0x1ee28>
  4210be:	mov    rax,QWORD PTR [r12+0x20]
  4210c3:	mov    ecx,0xa0
  4210c8:	add    rax,rcx
  4210cb:	jmp    421130 <__ctype_b_loc@plt+0x1ee60>
  4210cd:	mov    rax,QWORD PTR [r12+0x28]
  4210d2:	mov    rax,QWORD PTR [rax+0x8]
  4210d6:	mov    rax,QWORD PTR [rax]
  4210d9:	mov    rax,QWORD PTR [rax+0x18]
  4210dd:	mov    QWORD PTR [r12+0x88],rax
  4210e5:	mov    DWORD PTR [r12+0x90],0x5
  4210f1:	mov    rax,QWORD PTR [rsp+0x8]
  4210f6:	jmp    421130 <__ctype_b_loc@plt+0x1ee60>
  4210f8:	mov    rax,QWORD PTR [r12+0x28]
  4210fd:	mov    rax,QWORD PTR [rax+0x8]
  421101:	mov    rax,QWORD PTR [rax]
  421104:	mov    rcx,0xffffffffffffd8ee
  42110b:	sub    rcx,r15
  42110e:	movzx  edx,BYTE PTR [rax+0xb]
  421112:	cmp    rcx,rdx
  421115:	jg     421271 <__ctype_b_loc@plt+0x1efa1>
  42111b:	mov    rcx,0xffffffffffffd8ed
  421122:	sub    rcx,r15
  421125:	shl    rcx,0x4
  421129:	add    rax,rcx
  42112c:	add    rax,0x28
  421130:	lea    rcx,[rip+0x89e1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421137:	cmp    rax,rcx
  42113a:	je     421180 <__ctype_b_loc@plt+0x1eeb0>
  42113c:	cmp    DWORD PTR [rax+0x8],0x3
  421140:	jne    421180 <__ctype_b_loc@plt+0x1eeb0>
  421142:	test   r15,r15
  421145:	jle    4213a0 <__ctype_b_loc@plt+0x1f0d0>
  42114b:	mov    rax,QWORD PTR [r12+0x18]
  421150:	mov    rcx,r15
  421153:	shl    rcx,0x4
  421157:	add    rax,rcx
  42115a:	add    rax,0xfffffffffffffff0
  42115e:	cmp    rax,QWORD PTR [r12+0x10]
  421163:	lea    rcx,[rip+0x89ae]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42116a:	cmovae rax,rcx
  42116e:	jmp    421590 <__ctype_b_loc@plt+0x1f2c0>
  421173:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42117d:	nop    DWORD PTR [rax]
  421180:	test   r15,r15
  421183:	jle    421257 <__ctype_b_loc@plt+0x1ef87>
  421189:	mov    rcx,QWORD PTR [r12+0x10]
  42118e:	mov    rdx,QWORD PTR [r12+0x18]
  421193:	lea    rbx,[r15-0x1]
  421197:	shl    rbx,0x4
  42119b:	add    rbx,rdx
  42119e:	cmp    rbx,rcx
  4211a1:	lea    rax,[rip+0x8970]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4211a8:	cmovae rbx,rax
  4211ac:	mov    eax,DWORD PTR [rbx+0x8]
  4211af:	cmp    eax,0x4
  4211b2:	je     4212d0 <__ctype_b_loc@plt+0x1f000>
  4211b8:	cmp    eax,0x3
  4211bb:	jne    421250 <__ctype_b_loc@plt+0x1ef80>
  4211c1:	mov    r14,rbp
  4211c4:	vmovsd xmm0,QWORD PTR [rbx]
  4211c8:	lea    rbp,[rsp+0x30]
  4211cd:	mov    rdi,rbp
  4211d0:	lea    rsi,[rip+0x8c4a]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4211d7:	mov    al,0x1
  4211d9:	call   402270 <sprintf@plt>
  4211de:	mov    rdi,rbp
  4211e1:	call   4020e0 <strlen@plt>
  4211e6:	mov    rdi,r12
  4211e9:	mov    rsi,rbp
  4211ec:	mov    rdx,rax
  4211ef:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4211f4:	mov    QWORD PTR [rbx],rax
  4211f7:	mov    DWORD PTR [rbx+0x8],0x4
  4211fe:	mov    rax,QWORD PTR [r12+0x20]
  421203:	mov    rcx,QWORD PTR [rax+0x78]
  421207:	cmp    rcx,QWORD PTR [rax+0x70]
  42120b:	jb     421215 <__ctype_b_loc@plt+0x1ef45>
  42120d:	mov    rdi,r12
  421210:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  421215:	test   r15,r15
  421218:	mov    rbp,r14
  42121b:	jle    4212af <__ctype_b_loc@plt+0x1efdf>
  421221:	mov    rax,QWORD PTR [r12+0x18]
  421226:	mov    rcx,r15
  421229:	shl    rcx,0x4
  42122d:	lea    rbx,[rcx+rax*1]
  421231:	add    rbx,0xfffffffffffffff0
  421235:	cmp    rbx,QWORD PTR [r12+0x10]
  42123a:	lea    rax,[rip+0x88d7]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421241:	cmovae rbx,rax
  421245:	jmp    4212d0 <__ctype_b_loc@plt+0x1f000>
  42124a:	nop    WORD PTR [rax+rax*1+0x0]
  421250:	xor    ebx,ebx
  421252:	jmp    4212dd <__ctype_b_loc@plt+0x1f00d>
  421257:	cmp    r15,0xffffffffffffd8f0
  42125e:	jle    421271 <__ctype_b_loc@plt+0x1efa1>
  421260:	mov    rbx,r15
  421263:	shl    rbx,0x4
  421267:	add    rbx,QWORD PTR [r12+0x10]
  42126c:	jmp    4211ac <__ctype_b_loc@plt+0x1eedc>
  421271:	mov    rbx,QWORD PTR [rsp+0x18]
  421276:	cmp    r15d,0xffffd8ee
  42127d:	je     4211ac <__ctype_b_loc@plt+0x1eedc>
  421283:	cmp    r15d,0xffffd8ef
  42128a:	je     421436 <__ctype_b_loc@plt+0x1f166>
  421290:	cmp    r15d,0xffffd8f0
  421297:	jne    421464 <__ctype_b_loc@plt+0x1f194>
  42129d:	mov    rbx,QWORD PTR [r12+0x20]
  4212a2:	mov    eax,0xa0
  4212a7:	add    rbx,rax
  4212aa:	jmp    4211ac <__ctype_b_loc@plt+0x1eedc>
  4212af:	cmp    r15,0xffffffffffffd8f1
  4212b6:	jl     4213ba <__ctype_b_loc@plt+0x1f0ea>
  4212bc:	mov    rbx,r15
  4212bf:	shl    rbx,0x4
  4212c3:	add    rbx,QWORD PTR [r12+0x10]
  4212c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4212d0:	mov    rax,QWORD PTR [rbx]
  4212d3:	cmp    BYTE PTR [rax+0x18],0x2a
  4212d7:	lea    rbx,[rax+0x18]
  4212db:	je     4212ef <__ctype_b_loc@plt+0x1f01f>
  4212dd:	mov    rdi,r12
  4212e0:	mov    esi,r15d
  4212e3:	lea    rdx,[rip+0x949d]        # 42a787 <__ctype_b_loc@plt+0x284b7>
  4212ea:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  4212ef:	movsx  eax,BYTE PTR [rbx+0x1]
  4212f3:	cmp    eax,0x61
  4212f6:	je     421350 <__ctype_b_loc@plt+0x1f080>
  4212f8:	cmp    eax,0x6c
  4212fb:	je     421370 <__ctype_b_loc@plt+0x1f0a0>
  4212fd:	cmp    eax,0x6e
  421300:	jne    421779 <__ctype_b_loc@plt+0x1f4a9>
  421306:	mov    rdi,rbp
  421309:	lea    rsi,[rip+0x9495]        # 42a7a5 <__ctype_b_loc@plt+0x284d5>
  421310:	lea    rdx,[rsp+0x30]
  421315:	xor    eax,eax
  421317:	call   402080 <__isoc99_fscanf@plt>
  42131c:	cmp    eax,0x1
  42131f:	jne    421383 <__ctype_b_loc@plt+0x1f0b3>
  421321:	mov    rax,QWORD PTR [rsp+0x30]
  421326:	mov    rcx,QWORD PTR [r12+0x10]
  42132b:	mov    QWORD PTR [rcx],rax
  42132e:	mov    DWORD PTR [rcx+0x8],0x3
  421335:	mov    rax,QWORD PTR [r12+0x10]
  42133a:	mov    r14d,0x1
  421340:	jmp    421392 <__ctype_b_loc@plt+0x1f0c2>
  421342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42134c:	nop    DWORD PTR [rax+0x0]
  421350:	mov    rdi,r12
  421353:	mov    rsi,rbp
  421356:	mov    rdx,0xffffffffffffffff
  42135d:	call   4217a0 <__ctype_b_loc@plt+0x1f4d0>
  421362:	mov    r14d,0x1
  421368:	jmp    4216e0 <__ctype_b_loc@plt+0x1f410>
  42136d:	nop    DWORD PTR [rax]
  421370:	mov    rdi,r12
  421373:	mov    rsi,rbp
  421376:	call   420e60 <__ctype_b_loc@plt+0x1eb90>
  42137b:	mov    r14d,eax
  42137e:	jmp    4216e0 <__ctype_b_loc@plt+0x1f410>
  421383:	mov    rax,QWORD PTR [r12+0x10]
  421388:	mov    DWORD PTR [rax+0x8],0x0
  42138f:	xor    r14d,r14d
  421392:	add    rax,0x10
  421396:	mov    QWORD PTR [r12+0x10],rax
  42139b:	jmp    4216e0 <__ctype_b_loc@plt+0x1f410>
  4213a0:	cmp    r15,0xffffffffffffd8f1
  4213a7:	jl     4213f8 <__ctype_b_loc@plt+0x1f128>
  4213a9:	mov    rax,r15
  4213ac:	shl    rax,0x4
  4213b0:	add    rax,QWORD PTR [r12+0x10]
  4213b5:	jmp    421590 <__ctype_b_loc@plt+0x1f2c0>
  4213ba:	mov    rbx,QWORD PTR [rsp+0x18]
  4213bf:	cmp    r15d,0xffffd8ee
  4213c6:	je     4212d0 <__ctype_b_loc@plt+0x1f000>
  4213cc:	cmp    r15d,0xffffd8ef
  4213d3:	je     4214a9 <__ctype_b_loc@plt+0x1f1d9>
  4213d9:	cmp    r15d,0xffffd8f0
  4213e0:	jne    4214d7 <__ctype_b_loc@plt+0x1f207>
  4213e6:	mov    rbx,QWORD PTR [r12+0x20]
  4213eb:	mov    eax,0xa0
  4213f0:	add    rbx,rax
  4213f3:	jmp    4212d0 <__ctype_b_loc@plt+0x1f000>
  4213f8:	mov    rax,QWORD PTR [rsp+0x18]
  4213fd:	cmp    r15d,0xffffd8ee
  421404:	je     421590 <__ctype_b_loc@plt+0x1f2c0>
  42140a:	cmp    r15d,0xffffd8ef
  421411:	je     42151c <__ctype_b_loc@plt+0x1f24c>
  421417:	cmp    r15d,0xffffd8f0
  42141e:	jne    421547 <__ctype_b_loc@plt+0x1f277>
  421424:	mov    rax,QWORD PTR [r12+0x20]
  421429:	mov    ecx,0xa0
  42142e:	add    rax,rcx
  421431:	jmp    421590 <__ctype_b_loc@plt+0x1f2c0>
  421436:	mov    rax,QWORD PTR [r12+0x28]
  42143b:	mov    rax,QWORD PTR [rax+0x8]
  42143f:	mov    rax,QWORD PTR [rax]
  421442:	mov    rax,QWORD PTR [rax+0x18]
  421446:	mov    QWORD PTR [r12+0x88],rax
  42144e:	mov    DWORD PTR [r12+0x90],0x5
  42145a:	mov    rbx,QWORD PTR [rsp+0x8]
  42145f:	jmp    4211ac <__ctype_b_loc@plt+0x1eedc>
  421464:	mov    rax,QWORD PTR [r12+0x28]
  421469:	mov    rax,QWORD PTR [rax+0x8]
  42146d:	mov    rax,QWORD PTR [rax]
  421470:	mov    rcx,0xffffffffffffd8ee
  421477:	sub    rcx,r15
  42147a:	movzx  edx,BYTE PTR [rax+0xb]
  42147e:	lea    rbx,[rip+0x8693]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421485:	cmp    rcx,rdx
  421488:	jg     4211ac <__ctype_b_loc@plt+0x1eedc>
  42148e:	mov    rcx,0xffffffffffffd8ed
  421495:	sub    rcx,r15
  421498:	shl    rcx,0x4
  42149c:	lea    rbx,[rax+rcx*1]
  4214a0:	add    rbx,0x28
  4214a4:	jmp    4211ac <__ctype_b_loc@plt+0x1eedc>
  4214a9:	mov    rax,QWORD PTR [r12+0x28]
  4214ae:	mov    rax,QWORD PTR [rax+0x8]
  4214b2:	mov    rax,QWORD PTR [rax]
  4214b5:	mov    rax,QWORD PTR [rax+0x18]
  4214b9:	mov    QWORD PTR [r12+0x88],rax
  4214c1:	mov    DWORD PTR [r12+0x90],0x5
  4214cd:	mov    rbx,QWORD PTR [rsp+0x8]
  4214d2:	jmp    4212d0 <__ctype_b_loc@plt+0x1f000>
  4214d7:	mov    rax,QWORD PTR [r12+0x28]
  4214dc:	mov    rax,QWORD PTR [rax+0x8]
  4214e0:	mov    rax,QWORD PTR [rax]
  4214e3:	mov    rcx,0xffffffffffffd8ee
  4214ea:	sub    rcx,r15
  4214ed:	movzx  edx,BYTE PTR [rax+0xb]
  4214f1:	lea    rbx,[rip+0x8620]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4214f8:	cmp    rcx,rdx
  4214fb:	jg     4212d0 <__ctype_b_loc@plt+0x1f000>
  421501:	mov    rcx,0xffffffffffffd8ed
  421508:	sub    rcx,r15
  42150b:	shl    rcx,0x4
  42150f:	lea    rbx,[rax+rcx*1]
  421513:	add    rbx,0x28
  421517:	jmp    4212d0 <__ctype_b_loc@plt+0x1f000>
  42151c:	mov    rax,QWORD PTR [r12+0x28]
  421521:	mov    rax,QWORD PTR [rax+0x8]
  421525:	mov    rax,QWORD PTR [rax]
  421528:	mov    rax,QWORD PTR [rax+0x18]
  42152c:	mov    QWORD PTR [r12+0x88],rax
  421534:	mov    DWORD PTR [r12+0x90],0x5
  421540:	mov    rax,QWORD PTR [rsp+0x8]
  421545:	jmp    421590 <__ctype_b_loc@plt+0x1f2c0>
  421547:	mov    rax,QWORD PTR [r12+0x28]
  42154c:	mov    rax,QWORD PTR [rax+0x8]
  421550:	mov    rcx,QWORD PTR [rax]
  421553:	mov    rdx,0xffffffffffffd8ee
  42155a:	sub    rdx,r15
  42155d:	movzx  esi,BYTE PTR [rcx+0xb]
  421561:	lea    rax,[rip+0x85b0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421568:	cmp    rdx,rsi
  42156b:	jg     421590 <__ctype_b_loc@plt+0x1f2c0>
  42156d:	mov    rax,0xffffffffffffd8ed
  421574:	sub    rax,r15
  421577:	shl    rax,0x4
  42157b:	add    rax,rcx
  42157e:	add    rax,0x28
  421582:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42158c:	nop    DWORD PTR [rax+0x0]
  421590:	mov    ecx,DWORD PTR [rax+0x8]
  421593:	cmp    ecx,0x3
  421596:	je     42165c <__ctype_b_loc@plt+0x1f38c>
  42159c:	cmp    ecx,0x4
  42159f:	jne    42167b <__ctype_b_loc@plt+0x1f3ab>
  4215a5:	mov    rbp,QWORD PTR [rax]
  4215a8:	add    rbp,0x18
  4215ac:	mov    rdi,rbp
  4215af:	lea    rsi,[rsp+0x30]
  4215b4:	call   4020b0 <strtod@plt>
  4215b9:	mov    rbx,QWORD PTR [rsp+0x30]
  4215be:	cmp    rbx,rbp
  4215c1:	je     421676 <__ctype_b_loc@plt+0x1f3a6>
  4215c7:	mov    r14b,BYTE PTR [rbx]
  4215ca:	mov    eax,r14d
  4215cd:	or     al,0x20
  4215cf:	cmp    al,0x78
  4215d1:	jne    421606 <__ctype_b_loc@plt+0x1f336>
  4215d3:	mov    rdi,rbp
  4215d6:	lea    rsi,[rsp+0x30]
  4215db:	mov    edx,0x10
  4215e0:	call   402250 <strtoul@plt>
  4215e5:	vmovq  xmm0,rax
  4215ea:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x867e]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  4215f2:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x8686]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  4215fa:	vhaddpd xmm0,xmm0,xmm0
  4215fe:	mov    rbx,QWORD PTR [rsp+0x30]
  421603:	mov    r14b,BYTE PTR [rbx]
  421606:	mov    rbp,QWORD PTR [rsp+0x10]
  42160b:	test   r14b,r14b
  42160e:	je     421651 <__ctype_b_loc@plt+0x1f381>
  421610:	vmovapd XMMWORD PTR [rsp+0x50],xmm0
  421616:	call   4022d0 <__ctype_b_loc@plt>
  42161b:	mov    rax,QWORD PTR [rax]
  42161e:	movzx  ecx,r14b
  421622:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  421627:	je     42167b <__ctype_b_loc@plt+0x1f3ab>
  421629:	inc    rbx
  42162c:	vmovapd xmm0,XMMWORD PTR [rsp+0x50]
  421632:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42163c:	nop    DWORD PTR [rax+0x0]
  421640:	movzx  ecx,BYTE PTR [rbx]
  421643:	inc    rbx
  421646:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42164b:	jne    421640 <__ctype_b_loc@plt+0x1f370>
  42164d:	test   cl,cl
  42164f:	jne    42167b <__ctype_b_loc@plt+0x1f3ab>
  421651:	vmovsd QWORD PTR [rsp+0x28],xmm0
  421657:	lea    rax,[rsp+0x28]
  42165c:	vcvttsd2si rdx,QWORD PTR [rax]
  421661:	test   rdx,rdx
  421664:	je     42167b <__ctype_b_loc@plt+0x1f3ab>
  421666:	mov    rdi,r12
  421669:	mov    rsi,rbp
  42166c:	call   4217a0 <__ctype_b_loc@plt+0x1f4d0>
  421671:	jmp    42137b <__ctype_b_loc@plt+0x1f0ab>
  421676:	mov    rbp,QWORD PTR [rsp+0x10]
  42167b:	mov    rdi,rbp
  42167e:	call   4022b0 <getc@plt>
  421683:	mov    rsi,rbp
  421686:	mov    ebp,eax
  421688:	mov    edi,eax
  42168a:	call   4021e0 <ungetc@plt>
  42168f:	mov    rax,QWORD PTR [r12+0x20]
  421694:	mov    rcx,QWORD PTR [rax+0x78]
  421698:	cmp    rcx,QWORD PTR [rax+0x70]
  42169c:	jb     4216a6 <__ctype_b_loc@plt+0x1f3d6>
  42169e:	mov    rdi,r12
  4216a1:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4216a6:	mov    rbx,QWORD PTR [r12+0x10]
  4216ab:	mov    rdi,r12
  4216ae:	xor    esi,esi
  4216b0:	xor    edx,edx
  4216b2:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4216b7:	mov    QWORD PTR [rbx],rax
  4216ba:	mov    DWORD PTR [rbx+0x8],0x4
  4216c1:	add    QWORD PTR [r12+0x10],0x10
  4216c7:	xor    r14d,r14d
  4216ca:	cmp    ebp,0xffffffff
  4216cd:	setne  r14b
  4216d1:	mov    rbp,QWORD PTR [rsp+0x10]
  4216d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216e0:	inc    r15
  4216e3:	add    r13d,0xffffffff
  4216e7:	setb   al
  4216ea:	test   r14d,r14d
  4216ed:	je     4216f7 <__ctype_b_loc@plt+0x1f427>
  4216ef:	test   al,al
  4216f1:	jne    421050 <__ctype_b_loc@plt+0x1ed80>
  4216f7:	mov    rdi,rbp
  4216fa:	call   402090 <ferror@plt>
  4216ff:	test   eax,eax
  421701:	je     42175c <__ctype_b_loc@plt+0x1f48c>
  421703:	call   402050 <__errno_location@plt>
  421708:	mov    ebx,DWORD PTR [rax]
  42170a:	mov    rax,QWORD PTR [r12+0x10]
  42170f:	mov    DWORD PTR [rax+0x8],0x0
  421716:	add    rax,0x10
  42171a:	mov    QWORD PTR [r12+0x10],rax
  42171f:	mov    edi,ebx
  421721:	call   4022a0 <strerror@plt>
  421726:	lea    rsi,[rip+0x86ba]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  42172d:	mov    rdi,r12
  421730:	mov    rdx,rax
  421733:	xor    eax,eax
  421735:	call   410460 <__ctype_b_loc@plt+0xe190>
  42173a:	mov    rax,QWORD PTR [r12+0x10]
  42173f:	vcvtsi2sd xmm0,xmm1,ebx
  421743:	vmovsd QWORD PTR [rax],xmm0
  421747:	mov    DWORD PTR [rax+0x8],0x3
  42174e:	add    QWORD PTR [r12+0x10],0x10
  421754:	mov    r15d,0x3
  42175a:	jmp    42178e <__ctype_b_loc@plt+0x1f4be>
  42175c:	test   r14d,r14d
  42175f:	jne    421772 <__ctype_b_loc@plt+0x1f4a2>
  421761:	mov    rax,QWORD PTR [r12+0x10]
  421766:	mov    DWORD PTR [rax-0x8],0x0
  42176d:	mov    QWORD PTR [r12+0x10],rax
  421772:	sub    r15d,DWORD PTR [rsp+0x20]
  421777:	jmp    42178e <__ctype_b_loc@plt+0x1f4be>
  421779:	lea    rdx,[rip+0x9016]        # 42a796 <__ctype_b_loc@plt+0x284c6>
  421780:	mov    rdi,r12
  421783:	mov    esi,r15d
  421786:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  42178b:	xor    r15d,r15d
  42178e:	mov    eax,r15d
  421791:	add    rsp,0x68
  421795:	pop    rbx
  421796:	pop    r12
  421798:	pop    r13
  42179a:	pop    r14
  42179c:	pop    r15
  42179e:	pop    rbp
  42179f:	ret    
  4217a0:	push   rbp
  4217a1:	push   r15
  4217a3:	push   r14
  4217a5:	push   r13
  4217a7:	push   r12
  4217a9:	push   rbx
  4217aa:	sub    rsp,0x2038
  4217b1:	mov    rbx,rdx
  4217b4:	mov    r15,rsi
  4217b7:	mov    r14,rdi
  4217ba:	mov    QWORD PTR [rsp+0x30],rdi
  4217bf:	lea    rax,[rsp+0x38]
  4217c4:	mov    QWORD PTR [rsp+0x20],rax
  4217c9:	mov    DWORD PTR [rsp+0x28],0x0
  4217d1:	mov    ebp,0x2000
  4217d6:	lea    r12,[rsp+0x20]
  4217db:	nop    DWORD PTR [rax+rax*1+0x0]
  4217e0:	mov    rdi,r12
  4217e3:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4217e8:	mov    r13,rbx
  4217eb:	cmp    rbp,rbx
  4217ee:	ja     4217f3 <__ctype_b_loc@plt+0x1f523>
  4217f0:	mov    r13,rbp
  4217f3:	mov    esi,0x1
  4217f8:	mov    rdi,rax
  4217fb:	mov    rdx,r13
  4217fe:	mov    rcx,r15
  421801:	call   4020a0 <fread@plt>
  421806:	add    QWORD PTR [rsp+0x20],rax
  42180b:	sub    rbx,rax
  42180e:	cmp    rax,r13
  421811:	jne    42181b <__ctype_b_loc@plt+0x1f54b>
  421813:	mov    rbp,r13
  421816:	test   rbx,rbx
  421819:	jne    4217e0 <__ctype_b_loc@plt+0x1f510>
  42181b:	lea    rdi,[rsp+0x20]
  421820:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  421825:	test   rbx,rbx
  421828:	je     421887 <__ctype_b_loc@plt+0x1f5b7>
  42182a:	mov    rbx,QWORD PTR [r14+0x10]
  42182e:	mov    eax,DWORD PTR [rbx-0x8]
  421831:	xor    ecx,ecx
  421833:	add    eax,0xfffffffd
  421836:	cmp    eax,0x4
  421839:	ja     4218ae <__ctype_b_loc@plt+0x1f5de>
  42183b:	lea    rdx,[rip+0x80ce]        # 429910 <__ctype_b_loc@plt+0x27640>
  421842:	movsxd rax,DWORD PTR [rdx+rax*4]
  421846:	add    rax,rdx
  421849:	jmp    rax
  42184b:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  421850:	lea    rsi,[rip+0x85ca]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  421857:	mov    r15,rsp
  42185a:	mov    rdi,r15
  42185d:	mov    al,0x1
  42185f:	call   402270 <sprintf@plt>
  421864:	mov    rdi,r15
  421867:	call   4020e0 <strlen@plt>
  42186c:	mov    rdi,r14
  42186f:	mov    rsi,r15
  421872:	mov    rdx,rax
  421875:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42187a:	mov    QWORD PTR [rbx-0x10],rax
  42187e:	mov    DWORD PTR [rbx-0x8],0x4
  421885:	jmp    421892 <__ctype_b_loc@plt+0x1f5c2>
  421887:	mov    eax,0x1
  42188c:	jmp    4218b6 <__ctype_b_loc@plt+0x1f5e6>
  42188e:	mov    rax,QWORD PTR [rbx-0x10]
  421892:	mov    rcx,QWORD PTR [rax+0x10]
  421896:	jmp    4218ae <__ctype_b_loc@plt+0x1f5de>
  421898:	mov    rdi,QWORD PTR [rbx-0x10]
  42189c:	call   4094d0 <__ctype_b_loc@plt+0x7200>
  4218a1:	movsxd rcx,eax
  4218a4:	jmp    4218ae <__ctype_b_loc@plt+0x1f5de>
  4218a6:	mov    rax,QWORD PTR [rbx-0x10]
  4218aa:	mov    rcx,QWORD PTR [rax+0x20]
  4218ae:	xor    eax,eax
  4218b0:	test   rcx,rcx
  4218b3:	setne  al
  4218b6:	add    rsp,0x2038
  4218bd:	pop    rbx
  4218be:	pop    r12
  4218c0:	pop    r13
  4218c2:	pop    r14
  4218c4:	pop    r15
  4218c6:	pop    rbp
  4218c7:	ret    
  4218c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4218d0:	push   rbp
  4218d1:	push   r15
  4218d3:	push   r14
  4218d5:	push   r13
  4218d7:	push   r12
  4218d9:	push   rbx
  4218da:	sub    rsp,0x78
  4218de:	mov    QWORD PTR [rsp+0x30],rsi
  4218e3:	mov    r8,rdi
  4218e6:	mov    rbx,QWORD PTR [rdi+0x10]
  4218ea:	mov    r9,rbx
  4218ed:	sub    r9,QWORD PTR [rdi+0x18]
  4218f1:	shr    r9,0x4
  4218f5:	cmp    r9d,0x1
  4218f9:	je     421d8f <__ctype_b_loc@plt+0x1fabf>
  4218ff:	lea    rax,[r8+0x78]
  421903:	mov    QWORD PTR [rsp+0x20],rax
  421908:	lea    rax,[r8+0x88]
  42190f:	mov    QWORD PTR [rsp+0x18],rax
  421914:	movsxd r13,edx
  421917:	mov    eax,r13d
  42191a:	mov    QWORD PTR [rsp+0x10],rax
  42191f:	mov    r15,r13
  421922:	shl    r15,0x4
  421926:	mov    r12,0xffffffffffffd8ee
  42192d:	sub    r12,r13
  421930:	mov    rdi,0xfffffffffffd8ef8
  421937:	sub    rdi,r15
  42193a:	add    r15,0xfffffffffffffff0
  42193e:	dec    r9d
  421941:	mov    esi,0x1
  421946:	xor    r14d,r14d
  421949:	mov    QWORD PTR [rsp+0x38],r13
  42194e:	mov    QWORD PTR [rsp+0x8],r8
  421953:	mov    QWORD PTR [rsp+0x28],r9
  421958:	jmp    4219a4 <__ctype_b_loc@plt+0x1f6d4>
  42195a:	nop    WORD PTR [rax+rax*1+0x0]
  421960:	mov    esi,0x1
  421965:	mov    rdx,rbp
  421968:	mov    rcx,QWORD PTR [rsp+0x30]
  42196d:	call   402290 <fwrite@plt>
  421972:	mov    r8,QWORD PTR [rsp+0x8]
  421977:	cmp    rax,rbp
  42197a:	sete   al
  42197d:	mov    r9,QWORD PTR [rsp+0x28]
  421982:	mov    rdi,QWORD PTR [rsp+0x40]
  421987:	movzx  esi,al
  42198a:	inc    r13
  42198d:	inc    r14
  421990:	add    r15,0x10
  421994:	dec    r12
  421997:	add    rdi,0xfffffffffffffff0
  42199b:	cmp    r9d,r14d
  42199e:	je     421d7a <__ctype_b_loc@plt+0x1faaa>
  4219a4:	mov    rax,QWORD PTR [rsp+0x38]
  4219a9:	lea    rbp,[rax+r14*1]
  4219ad:	test   rbp,rbp
  4219b0:	jle    4219e0 <__ctype_b_loc@plt+0x1f710>
  4219b2:	mov    rcx,QWORD PTR [r8+0x10]
  4219b6:	mov    rax,QWORD PTR [r8+0x18]
  4219ba:	lea    rbx,[r13-0x1]
  4219be:	lea    rdx,[rax+r15*1]
  4219c2:	cmp    rdx,rcx
  4219c5:	jae    421a6e <__ctype_b_loc@plt+0x1f79e>
  4219cb:	shl    rbx,0x4
  4219cf:	add    rax,rbx
  4219d2:	jmp    4219f8 <__ctype_b_loc@plt+0x1f728>
  4219d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4219de:	xchg   ax,ax
  4219e0:	cmp    rbp,0xffffffffffffd8f1
  4219e7:	jl     421b62 <__ctype_b_loc@plt+0x1f892>
  4219ed:	mov    rax,r13
  4219f0:	shl    rax,0x4
  4219f4:	add    rax,QWORD PTR [r8+0x10]
  4219f8:	lea    rcx,[rip+0x8119]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4219ff:	cmp    rax,rcx
  421a02:	je     421a50 <__ctype_b_loc@plt+0x1f780>
  421a04:	cmp    DWORD PTR [rax+0x8],0x3
  421a08:	jne    421a50 <__ctype_b_loc@plt+0x1f780>
  421a0a:	test   esi,esi
  421a0c:	je     421be9 <__ctype_b_loc@plt+0x1f919>
  421a12:	mov    rax,QWORD PTR [rsp+0x10]
  421a17:	lea    esi,[rax+r14*1]
  421a1b:	mov    rbx,rdi
  421a1e:	mov    rdi,r8
  421a21:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  421a26:	mov    rdi,QWORD PTR [rsp+0x30]
  421a2b:	lea    rsi,[rip+0x83ef]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  421a32:	mov    al,0x1
  421a34:	call   402180 <fprintf@plt>
  421a39:	mov    rdi,rbx
  421a3c:	mov    r9,QWORD PTR [rsp+0x28]
  421a41:	mov    r8,QWORD PTR [rsp+0x8]
  421a46:	test   eax,eax
  421a48:	setg   al
  421a4b:	jmp    421987 <__ctype_b_loc@plt+0x1f6b7>
  421a50:	test   rbp,rbp
  421a53:	jle    421ba5 <__ctype_b_loc@plt+0x1f8d5>
  421a59:	mov    rcx,QWORD PTR [r8+0x10]
  421a5d:	mov    rax,QWORD PTR [r8+0x18]
  421a61:	mov    rdx,QWORD PTR [rsp+0x38]
  421a66:	lea    rbx,[rdx+r14*1]
  421a6a:	add    rbx,0xffffffffffffffff
  421a6e:	shl    rbx,0x4
  421a72:	add    rbx,rax
  421a75:	cmp    rbx,rcx
  421a78:	lea    rax,[rip+0x8099]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421a7f:	cmovae rbx,rax
  421a83:	mov    eax,DWORD PTR [rbx+0x8]
  421a86:	cmp    eax,0x4
  421a89:	mov    QWORD PTR [rsp+0x40],rdi
  421a8e:	je     421d60 <__ctype_b_loc@plt+0x1fa90>
  421a94:	mov    DWORD PTR [rsp+0x4],esi
  421a98:	cmp    eax,0x3
  421a9b:	jne    421b30 <__ctype_b_loc@plt+0x1f860>
  421aa1:	mov    QWORD PTR [rsp+0x48],rbp
  421aa6:	vmovsd xmm0,QWORD PTR [rbx]
  421aaa:	lea    rbp,[rsp+0x50]
  421aaf:	mov    rdi,rbp
  421ab2:	lea    rsi,[rip+0x8368]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  421ab9:	mov    al,0x1
  421abb:	call   402270 <sprintf@plt>
  421ac0:	mov    rdi,rbp
  421ac3:	call   4020e0 <strlen@plt>
  421ac8:	mov    rdi,QWORD PTR [rsp+0x8]
  421acd:	mov    rsi,rbp
  421ad0:	mov    rdx,rax
  421ad3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  421ad8:	mov    r8,QWORD PTR [rsp+0x8]
  421add:	mov    QWORD PTR [rbx],rax
  421ae0:	mov    DWORD PTR [rbx+0x8],0x4
  421ae7:	mov    rax,QWORD PTR [r8+0x20]
  421aeb:	mov    rcx,QWORD PTR [rax+0x78]
  421aef:	cmp    rcx,QWORD PTR [rax+0x70]
  421af3:	jb     421b02 <__ctype_b_loc@plt+0x1f832>
  421af5:	mov    rdi,r8
  421af8:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  421afd:	mov    r8,QWORD PTR [rsp+0x8]
  421b02:	mov    rax,QWORD PTR [rsp+0x48]
  421b07:	test   rax,rax
  421b0a:	jle    421bbe <__ctype_b_loc@plt+0x1f8ee>
  421b10:	mov    rbx,QWORD PTR [r8+0x18]
  421b14:	add    rbx,r15
  421b17:	cmp    rbx,QWORD PTR [r8+0x10]
  421b1b:	lea    rax,[rip+0x7ff6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421b22:	cmovae rbx,rax
  421b26:	mov    esi,DWORD PTR [rsp+0x4]
  421b2a:	jmp    421d60 <__ctype_b_loc@plt+0x1fa90>
  421b2f:	nop
  421b30:	mov    rax,QWORD PTR [rsp+0x10]
  421b35:	lea    esi,[rax+r14*1]
  421b39:	mov    rdi,r8
  421b3c:	lea    rdx,[rip+0x8726]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  421b43:	call   410520 <__ctype_b_loc@plt+0xe250>
  421b48:	mov    r8,QWORD PTR [rsp+0x8]
  421b4d:	xor    edi,edi
  421b4f:	xor    ebp,ebp
  421b51:	mov    esi,DWORD PTR [rsp+0x4]
  421b55:	test   esi,esi
  421b57:	jne    421960 <__ctype_b_loc@plt+0x1f690>
  421b5d:	jmp    421d73 <__ctype_b_loc@plt+0x1faa3>
  421b62:	mov    rax,QWORD PTR [rsp+0x10]
  421b67:	lea    ecx,[rax+r14*1]
  421b6b:	mov    rax,QWORD PTR [rsp+0x20]
  421b70:	cmp    ecx,0xffffd8ee
  421b76:	je     4219f8 <__ctype_b_loc@plt+0x1f728>
  421b7c:	cmp    ecx,0xffffd8ef
  421b82:	je     421c2f <__ctype_b_loc@plt+0x1f95f>
  421b88:	cmp    ecx,0xffffd8f0
  421b8e:	jne    421c5a <__ctype_b_loc@plt+0x1f98a>
  421b94:	mov    rax,QWORD PTR [r8+0x20]
  421b98:	mov    ecx,0xa0
  421b9d:	add    rax,rcx
  421ba0:	jmp    4219f8 <__ctype_b_loc@plt+0x1f728>
  421ba5:	cmp    rbp,0xffffffffffffd8f0
  421bac:	jle    421bdb <__ctype_b_loc@plt+0x1f90b>
  421bae:	mov    rbx,r13
  421bb1:	shl    rbx,0x4
  421bb5:	add    rbx,QWORD PTR [r8+0x10]
  421bb9:	jmp    421a83 <__ctype_b_loc@plt+0x1f7b3>
  421bbe:	cmp    rax,0xffffffffffffd8f1
  421bc4:	mov    esi,DWORD PTR [rsp+0x4]
  421bc8:	jl     421bf0 <__ctype_b_loc@plt+0x1f920>
  421bca:	mov    rax,QWORD PTR [r8+0x10]
  421bce:	lea    rbx,[rax+r15*1]
  421bd2:	add    rbx,0x10
  421bd6:	jmp    421d60 <__ctype_b_loc@plt+0x1fa90>
  421bdb:	mov    rax,QWORD PTR [rsp+0x10]
  421be0:	lea    ecx,[rax+r14*1]
  421be4:	jmp    421c75 <__ctype_b_loc@plt+0x1f9a5>
  421be9:	xor    eax,eax
  421beb:	jmp    421987 <__ctype_b_loc@plt+0x1f6b7>
  421bf0:	mov    rax,QWORD PTR [rsp+0x10]
  421bf5:	add    eax,r14d
  421bf8:	mov    rbx,QWORD PTR [rsp+0x20]
  421bfd:	cmp    eax,0xffffd8ee
  421c02:	je     421d60 <__ctype_b_loc@plt+0x1fa90>
  421c08:	cmp    eax,0xffffd8ef
  421c0d:	je     421d04 <__ctype_b_loc@plt+0x1fa34>
  421c13:	cmp    eax,0xffffd8f0
  421c18:	jne    421d2c <__ctype_b_loc@plt+0x1fa5c>
  421c1e:	mov    rbx,QWORD PTR [r8+0x20]
  421c22:	mov    eax,0xa0
  421c27:	add    rbx,rax
  421c2a:	jmp    421d60 <__ctype_b_loc@plt+0x1fa90>
  421c2f:	mov    rax,QWORD PTR [r8+0x28]
  421c33:	mov    rax,QWORD PTR [rax+0x8]
  421c37:	mov    rax,QWORD PTR [rax]
  421c3a:	mov    rax,QWORD PTR [rax+0x18]
  421c3e:	mov    QWORD PTR [r8+0x88],rax
  421c45:	mov    DWORD PTR [r8+0x90],0x5
  421c50:	mov    rax,QWORD PTR [rsp+0x18]
  421c55:	jmp    4219f8 <__ctype_b_loc@plt+0x1f728>
  421c5a:	mov    rax,QWORD PTR [r8+0x28]
  421c5e:	mov    rax,QWORD PTR [rax+0x8]
  421c62:	mov    rax,QWORD PTR [rax]
  421c65:	movzx  edx,BYTE PTR [rax+0xb]
  421c69:	mov    ecx,r13d
  421c6c:	cmp    r12,rdx
  421c6f:	jle    421cfc <__ctype_b_loc@plt+0x1fa2c>
  421c75:	mov    rbx,QWORD PTR [rsp+0x20]
  421c7a:	cmp    ecx,0xffffd8ee
  421c80:	je     421a83 <__ctype_b_loc@plt+0x1f7b3>
  421c86:	cmp    ecx,0xffffd8ef
  421c8c:	je     421ca7 <__ctype_b_loc@plt+0x1f9d7>
  421c8e:	cmp    ecx,0xffffd8f0
  421c94:	jne    421cd2 <__ctype_b_loc@plt+0x1fa02>
  421c96:	mov    rbx,QWORD PTR [r8+0x20]
  421c9a:	mov    eax,0xa0
  421c9f:	add    rbx,rax
  421ca2:	jmp    421a83 <__ctype_b_loc@plt+0x1f7b3>
  421ca7:	mov    rax,QWORD PTR [r8+0x28]
  421cab:	mov    rax,QWORD PTR [rax+0x8]
  421caf:	mov    rax,QWORD PTR [rax]
  421cb2:	mov    rax,QWORD PTR [rax+0x18]
  421cb6:	mov    QWORD PTR [r8+0x88],rax
  421cbd:	mov    DWORD PTR [r8+0x90],0x5
  421cc8:	mov    rbx,QWORD PTR [rsp+0x18]
  421ccd:	jmp    421a83 <__ctype_b_loc@plt+0x1f7b3>
  421cd2:	mov    rax,QWORD PTR [r8+0x28]
  421cd6:	mov    rax,QWORD PTR [rax+0x8]
  421cda:	mov    rax,QWORD PTR [rax]
  421cdd:	movzx  ecx,BYTE PTR [rax+0xb]
  421ce1:	lea    rbx,[rip+0x7e30]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421ce8:	cmp    r12,rcx
  421ceb:	jg     421a83 <__ctype_b_loc@plt+0x1f7b3>
  421cf1:	add    rax,rdi
  421cf4:	mov    rbx,rax
  421cf7:	jmp    421a83 <__ctype_b_loc@plt+0x1f7b3>
  421cfc:	add    rax,rdi
  421cff:	jmp    4219f8 <__ctype_b_loc@plt+0x1f728>
  421d04:	mov    rax,QWORD PTR [r8+0x28]
  421d08:	mov    rax,QWORD PTR [rax+0x8]
  421d0c:	mov    rax,QWORD PTR [rax]
  421d0f:	mov    rax,QWORD PTR [rax+0x18]
  421d13:	mov    QWORD PTR [r8+0x88],rax
  421d1a:	mov    DWORD PTR [r8+0x90],0x5
  421d25:	mov    rbx,QWORD PTR [rsp+0x18]
  421d2a:	jmp    421d60 <__ctype_b_loc@plt+0x1fa90>
  421d2c:	mov    rax,QWORD PTR [r8+0x28]
  421d30:	mov    rax,QWORD PTR [rax+0x8]
  421d34:	mov    rax,QWORD PTR [rax]
  421d37:	movzx  ecx,BYTE PTR [rax+0xb]
  421d3b:	lea    rbx,[rip+0x7dd6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421d42:	cmp    r12,rcx
  421d45:	jg     421d60 <__ctype_b_loc@plt+0x1fa90>
  421d47:	mov    rcx,0xffffffffffffd8ed
  421d4e:	sub    rcx,r13
  421d51:	shl    rcx,0x4
  421d55:	lea    rbx,[rax+rcx*1]
  421d59:	add    rbx,0x28
  421d5d:	nop    DWORD PTR [rax]
  421d60:	mov    rdi,QWORD PTR [rbx]
  421d63:	mov    rbp,QWORD PTR [rdi+0x10]
  421d67:	add    rdi,0x18
  421d6b:	test   esi,esi
  421d6d:	jne    421960 <__ctype_b_loc@plt+0x1f690>
  421d73:	xor    eax,eax
  421d75:	jmp    42197d <__ctype_b_loc@plt+0x1f6ad>
  421d7a:	mov    rbx,QWORD PTR [r8+0x10]
  421d7e:	mov    r15,r8
  421d81:	mov    ebp,esi
  421d83:	call   402050 <__errno_location@plt>
  421d88:	test   ebp,ebp
  421d8a:	je     421d9c <__ctype_b_loc@plt+0x1facc>
  421d8c:	mov    r8,r15
  421d8f:	mov    DWORD PTR [rbx],0x1
  421d95:	mov    eax,0x1
  421d9a:	jmp    421ddf <__ctype_b_loc@plt+0x1fb0f>
  421d9c:	mov    r14d,DWORD PTR [rax]
  421d9f:	mov    DWORD PTR [rbx+0x8],0x0
  421da6:	add    rbx,0x10
  421daa:	mov    QWORD PTR [r15+0x10],rbx
  421dae:	mov    edi,r14d
  421db1:	call   4022a0 <strerror@plt>
  421db6:	lea    rsi,[rip+0x802a]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  421dbd:	mov    rdi,r15
  421dc0:	mov    rdx,rax
  421dc3:	xor    eax,eax
  421dc5:	call   410460 <__ctype_b_loc@plt+0xe190>
  421dca:	mov    rbx,QWORD PTR [r15+0x10]
  421dce:	vcvtsi2sd xmm0,xmm1,r14d
  421dd3:	vmovsd QWORD PTR [rbx],xmm0
  421dd7:	mov    eax,0x3
  421ddc:	mov    r8,r15
  421ddf:	mov    DWORD PTR [rbx+0x8],eax
  421de2:	add    QWORD PTR [r8+0x10],0x10
  421de7:	add    rsp,0x78
  421deb:	pop    rbx
  421dec:	pop    r12
  421dee:	pop    r13
  421df0:	pop    r14
  421df2:	pop    r15
  421df4:	pop    rbp
  421df5:	ret    
  421df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e00:	push   r14
  421e02:	push   rbx
  421e03:	push   rax
  421e04:	mov    r14,rdi
  421e07:	mov    rax,QWORD PTR [rdi+0x28]
  421e0b:	mov    rax,QWORD PTR [rax+0x8]
  421e0f:	mov    rax,QWORD PTR [rax]
  421e12:	mov    rcx,QWORD PTR [rax+0x18]
  421e16:	mov    QWORD PTR [rdi+0x88],rcx
  421e1d:	mov    DWORD PTR [rdi+0x90],0x5
  421e27:	cmp    DWORD PTR [rcx+0x38],0x2
  421e2b:	jb     421e37 <__ctype_b_loc@plt+0x1fb67>
  421e2d:	mov    rax,QWORD PTR [rcx+0x18]
  421e31:	add    rax,0x10
  421e35:	jmp    421e9f <__ctype_b_loc@plt+0x1fbcf>
  421e37:	mov    al,BYTE PTR [rcx+0xb]
  421e3a:	mov    rdx,0xffffffffffffffff
  421e41:	shlx   rsi,rdx,rax
  421e46:	or     rsi,0x1
  421e4a:	xor    rsi,0xfffffffffffffffe
  421e4e:	mov    eax,0x40000000
  421e53:	xor    edx,edx
  421e55:	div    rsi
  421e58:	lea    rdx,[rdx+rdx*4]
  421e5c:	shl    rdx,0x3
  421e60:	add    rdx,QWORD PTR [rcx+0x20]
  421e64:	vmovsd xmm0,QWORD PTR [rip+0x7eec]        # 429d58 <__ctype_b_loc@plt+0x27a88>
  421e6c:	lea    rax,[rip+0x7ca5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421e73:	cmp    DWORD PTR [rdx+0x18],0x3
  421e77:	je     421e8f <__ctype_b_loc@plt+0x1fbbf>
  421e79:	nop    DWORD PTR [rax+0x0]
  421e80:	mov    rdx,QWORD PTR [rdx+0x20]
  421e84:	test   rdx,rdx
  421e87:	je     421e9f <__ctype_b_loc@plt+0x1fbcf>
  421e89:	cmp    DWORD PTR [rdx+0x18],0x3
  421e8d:	jne    421e80 <__ctype_b_loc@plt+0x1fbb0>
  421e8f:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  421e94:	vucomisd xmm1,xmm0
  421e98:	jne    421e80 <__ctype_b_loc@plt+0x1fbb0>
  421e9a:	jp     421e80 <__ctype_b_loc@plt+0x1fbb0>
  421e9c:	mov    rax,rdx
  421e9f:	mov    rcx,QWORD PTR [r14+0x10]
  421ea3:	mov    rdx,QWORD PTR [rax]
  421ea6:	mov    QWORD PTR [rcx],rdx
  421ea9:	mov    eax,DWORD PTR [rax+0x8]
  421eac:	mov    DWORD PTR [rcx+0x8],eax
  421eaf:	mov    rax,QWORD PTR [r14+0x10]
  421eb3:	lea    rcx,[rax+0x10]
  421eb7:	mov    QWORD PTR [r14+0x10],rcx
  421ebb:	mov    ecx,DWORD PTR [rax+0x8]
  421ebe:	cmp    ecx,0x2
  421ec1:	je     421ed1 <__ctype_b_loc@plt+0x1fc01>
  421ec3:	cmp    ecx,0x7
  421ec6:	jne    421ed6 <__ctype_b_loc@plt+0x1fc06>
  421ec8:	mov    rax,QWORD PTR [rax]
  421ecb:	add    rax,0x28
  421ecf:	jmp    421ed8 <__ctype_b_loc@plt+0x1fc08>
  421ed1:	mov    rax,QWORD PTR [rax]
  421ed4:	jmp    421ed8 <__ctype_b_loc@plt+0x1fc08>
  421ed6:	xor    eax,eax
  421ed8:	mov    rbx,QWORD PTR [rax]
  421edb:	test   rbx,rbx
  421ede:	jne    421ef8 <__ctype_b_loc@plt+0x1fc28>
  421ee0:	lea    rsi,[rip+0x88e6]        # 42a7cd <__ctype_b_loc@plt+0x284fd>
  421ee7:	lea    rdx,[rip+0x88d8]        # 42a7c6 <__ctype_b_loc@plt+0x284f6>
  421eee:	mov    rdi,r14
  421ef1:	xor    eax,eax
  421ef3:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  421ef8:	mov    rdi,rbx
  421efb:	call   4021d0 <fflush@plt>
  421f00:	mov    ebx,eax
  421f02:	call   402050 <__errno_location@plt>
  421f07:	mov    rcx,QWORD PTR [r14+0x10]
  421f0b:	test   ebx,ebx
  421f0d:	je     421f4e <__ctype_b_loc@plt+0x1fc7e>
  421f0f:	mov    ebx,DWORD PTR [rax]
  421f11:	mov    DWORD PTR [rcx+0x8],0x0
  421f18:	add    rcx,0x10
  421f1c:	mov    QWORD PTR [r14+0x10],rcx
  421f20:	mov    edi,ebx
  421f22:	call   4022a0 <strerror@plt>
  421f27:	lea    rsi,[rip+0x7eb9]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  421f2e:	mov    rdi,r14
  421f31:	mov    rdx,rax
  421f34:	xor    eax,eax
  421f36:	call   410460 <__ctype_b_loc@plt+0xe190>
  421f3b:	mov    rcx,QWORD PTR [r14+0x10]
  421f3f:	vcvtsi2sd xmm0,xmm2,ebx
  421f43:	vmovsd QWORD PTR [rcx],xmm0
  421f47:	mov    eax,0x3
  421f4c:	jmp    421f59 <__ctype_b_loc@plt+0x1fc89>
  421f4e:	mov    DWORD PTR [rcx],0x1
  421f54:	mov    eax,0x1
  421f59:	mov    DWORD PTR [rcx+0x8],eax
  421f5c:	add    QWORD PTR [r14+0x10],0x10
  421f61:	add    rsp,0x8
  421f65:	pop    rbx
  421f66:	pop    r14
  421f68:	ret    
  421f69:	nop    DWORD PTR [rax+0x0]
  421f70:	push   rax
  421f71:	lea    rdx,[rip+0x8898]        # 42a810 <__ctype_b_loc@plt+0x28540>
  421f78:	mov    esi,0x1
  421f7d:	call   422ae0 <__ctype_b_loc@plt+0x20810>
  421f82:	mov    eax,0x1
  421f87:	pop    rcx
  421f88:	ret    
  421f89:	nop    DWORD PTR [rax+0x0]
  421f90:	push   rbp
  421f91:	push   r15
  421f93:	push   r14
  421f95:	push   r13
  421f97:	push   r12
  421f99:	push   rbx
  421f9a:	sub    rsp,0x28
  421f9e:	mov    rbp,rdi
  421fa1:	mov    rcx,QWORD PTR [rdi+0x10]
  421fa5:	mov    rbx,QWORD PTR [rdi+0x18]
  421fa9:	lea    r13,[rip+0x7b68]        # 429b18 <__ctype_b_loc@plt+0x27848>
  421fb0:	cmp    rbx,r13
  421fb3:	je     42203b <__ctype_b_loc@plt+0x1fd6b>
  421fb9:	cmp    rbx,rcx
  421fbc:	jae    42203b <__ctype_b_loc@plt+0x1fd6b>
  421fbe:	movsxd rax,DWORD PTR [rbx+0x8]
  421fc2:	test   rax,rax
  421fc5:	jle    42203b <__ctype_b_loc@plt+0x1fd6b>
  421fc7:	cmp    eax,0x4
  421fca:	je     42202f <__ctype_b_loc@plt+0x1fd5f>
  421fcc:	cmp    eax,0x3
  421fcf:	jne    42211c <__ctype_b_loc@plt+0x1fe4c>
  421fd5:	vmovsd xmm0,QWORD PTR [rbx]
  421fd9:	lea    rsi,[rip+0x7e41]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  421fe0:	mov    r14,rsp
  421fe3:	mov    rdi,r14
  421fe6:	mov    al,0x1
  421fe8:	call   402270 <sprintf@plt>
  421fed:	mov    rdi,r14
  421ff0:	call   4020e0 <strlen@plt>
  421ff5:	mov    rdi,rbp
  421ff8:	mov    rsi,r14
  421ffb:	mov    rdx,rax
  421ffe:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  422003:	mov    QWORD PTR [rbx],rax
  422006:	mov    DWORD PTR [rbx+0x8],0x4
  42200d:	mov    rax,QWORD PTR [rbp+0x20]
  422011:	mov    rcx,QWORD PTR [rax+0x78]
  422015:	cmp    rcx,QWORD PTR [rax+0x70]
  422019:	jb     422023 <__ctype_b_loc@plt+0x1fd53>
  42201b:	mov    rdi,rbp
  42201e:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  422023:	mov    rbx,QWORD PTR [rbp+0x18]
  422027:	cmp    rbx,QWORD PTR [rbp+0x10]
  42202b:	cmovae rbx,r13
  42202f:	mov    r14,QWORD PTR [rbx]
  422032:	add    r14,0x18
  422036:	jmp    422152 <__ctype_b_loc@plt+0x1fe82>
  42203b:	mov    rax,QWORD PTR [rbp+0x28]
  42203f:	mov    rax,QWORD PTR [rax+0x8]
  422043:	mov    rax,QWORD PTR [rax]
  422046:	mov    rsi,QWORD PTR [rax+0x18]
  42204a:	mov    QWORD PTR [rbp+0x88],rsi
  422051:	mov    DWORD PTR [rbp+0x90],0x5
  42205b:	cmp    DWORD PTR [rsi+0x38],0x0
  42205f:	je     422067 <__ctype_b_loc@plt+0x1fd97>
  422061:	mov    rax,QWORD PTR [rsi+0x18]
  422065:	jmp    4220cf <__ctype_b_loc@plt+0x1fdff>
  422067:	mov    al,BYTE PTR [rsi+0xb]
  42206a:	mov    rdx,0xffffffffffffffff
  422071:	shlx   rdi,rdx,rax
  422076:	or     rdi,0x1
  42207a:	xor    rdi,0xfffffffffffffffe
  42207e:	mov    eax,0x3ff00000
  422083:	xor    edx,edx
  422085:	div    rdi
  422088:	lea    rdx,[rdx+rdx*4]
  42208c:	shl    rdx,0x3
  422090:	add    rdx,QWORD PTR [rsi+0x20]
  422094:	vmovsd xmm0,QWORD PTR [rip+0x7cc4]        # 429d60 <__ctype_b_loc@plt+0x27a90>
  42209c:	lea    rax,[rip+0x7a75]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4220a3:	cmp    DWORD PTR [rdx+0x18],0x3
  4220a7:	je     4220bf <__ctype_b_loc@plt+0x1fdef>
  4220a9:	nop    DWORD PTR [rax+0x0]
  4220b0:	mov    rdx,QWORD PTR [rdx+0x20]
  4220b4:	test   rdx,rdx
  4220b7:	je     4220cf <__ctype_b_loc@plt+0x1fdff>
  4220b9:	cmp    DWORD PTR [rdx+0x18],0x3
  4220bd:	jne    4220b0 <__ctype_b_loc@plt+0x1fde0>
  4220bf:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  4220c4:	vucomisd xmm1,xmm0
  4220c8:	jne    4220b0 <__ctype_b_loc@plt+0x1fde0>
  4220ca:	jp     4220b0 <__ctype_b_loc@plt+0x1fde0>
  4220cc:	mov    rax,rdx
  4220cf:	mov    rdx,QWORD PTR [rax]
  4220d2:	mov    QWORD PTR [rcx],rdx
  4220d5:	mov    eax,DWORD PTR [rax+0x8]
  4220d8:	mov    DWORD PTR [rcx+0x8],eax
  4220db:	add    QWORD PTR [rbp+0x10],0x10
  4220e0:	mov    rdi,rbp
  4220e3:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  4220e8:	cmp    QWORD PTR [rax],0x0
  4220ec:	jne    4220ff <__ctype_b_loc@plt+0x1fe2f>
  4220ee:	lea    rsi,[rip+0x8643]        # 42a738 <__ctype_b_loc@plt+0x28468>
  4220f5:	mov    rdi,rbp
  4220f8:	xor    eax,eax
  4220fa:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4220ff:	mov    rax,QWORD PTR [rbp+0x10]
  422103:	mov    rcx,QWORD PTR [rbp+0x18]
  422107:	cmp    rcx,rax
  42210a:	lea    r13,[rip+0x7a07]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422111:	cmovb  r13,rcx
  422115:	xor    ecx,ecx
  422117:	jmp    4222c7 <__ctype_b_loc@plt+0x1fff7>
  42211c:	lea    rcx,[rip+0xd7bd]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  422123:	mov    rcx,QWORD PTR [rcx+rax*8]
  422127:	lea    rsi,[rip+0x8094]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  42212e:	lea    rdx,[rip+0x8134]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  422135:	xor    r14d,r14d
  422138:	mov    rdi,rbp
  42213b:	xor    eax,eax
  42213d:	call   410460 <__ctype_b_loc@plt+0xe190>
  422142:	mov    rdi,rbp
  422145:	mov    esi,0x1
  42214a:	mov    rdx,rax
  42214d:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  422152:	mov    esi,0x8
  422157:	mov    rdi,rbp
  42215a:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  42215f:	mov    r15,rax
  422162:	mov    QWORD PTR [rax],0x0
  422169:	mov    r12d,0xa0
  42216f:	add    r12,QWORD PTR [rbp+0x20]
  422173:	lea    rsi,[rip+0x85ac]        # 42a726 <__ctype_b_loc@plt+0x28456>
  42217a:	mov    edx,0x5
  42217f:	mov    rdi,rbp
  422182:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  422187:	mov    QWORD PTR [rsp],rax
  42218b:	mov    DWORD PTR [rsp+0x8],0x4
  422193:	mov    rcx,QWORD PTR [rbp+0x10]
  422197:	mov    rdx,rsp
  42219a:	mov    rdi,rbp
  42219d:	mov    rsi,r12
  4221a0:	call   408610 <__ctype_b_loc@plt+0x6340>
  4221a5:	add    QWORD PTR [rbp+0x10],0x10
  4221aa:	mov    rdi,rbp
  4221ad:	mov    esi,0xfffffffe
  4221b2:	call   40d420 <__ctype_b_loc@plt+0xb150>
  4221b7:	lea    rsi,[rip+0x8652]        # 42a810 <__ctype_b_loc@plt+0x28540>
  4221be:	mov    rdi,r14
  4221c1:	call   402240 <fopen@plt>
  4221c6:	mov    QWORD PTR [r15],rax
  4221c9:	test   rax,rax
  4221cc:	jne    4221d9 <__ctype_b_loc@plt+0x1ff09>
  4221ce:	mov    rdi,rbp
  4221d1:	mov    rsi,r14
  4221d4:	call   422d50 <__ctype_b_loc@plt+0x20a80>
  4221d9:	mov    rax,QWORD PTR [rbp+0x10]
  4221dd:	mov    rsi,QWORD PTR [rbp+0x18]
  4221e1:	mov    rcx,rax
  4221e4:	sub    rcx,rsi
  4221e7:	mov    rdx,rcx
  4221ea:	shr    rdx,0x4
  4221ee:	test   edx,edx
  4221f0:	jle    42221d <__ctype_b_loc@plt+0x1ff4d>
  4221f2:	shl    rcx,0x1c
  4221f6:	movabs rdx,0xffffffff00000000
  422200:	add    rdx,rcx
  422203:	sar    rdx,0x1c
  422207:	add    rsi,rdx
  42220a:	cmp    rsi,rax
  42220d:	lea    r13,[rip+0x7904]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422214:	cmovb  r13,rsi
  422218:	jmp    4222c2 <__ctype_b_loc@plt+0x1fff2>
  42221d:	cmp    edx,0xffffd8f1
  422223:	jl     422238 <__ctype_b_loc@plt+0x1ff68>
  422225:	shl    rcx,0x1c
  422229:	sar    rcx,0x1c
  42222d:	add    rcx,rax
  422230:	mov    r13,rcx
  422233:	jmp    4222c2 <__ctype_b_loc@plt+0x1fff2>
  422238:	cmp    edx,0xffffd8ee
  42223e:	je     42225c <__ctype_b_loc@plt+0x1ff8c>
  422240:	cmp    edx,0xffffd8ef
  422246:	je     422262 <__ctype_b_loc@plt+0x1ff92>
  422248:	cmp    edx,0xffffd8f0
  42224e:	jne    42228b <__ctype_b_loc@plt+0x1ffbb>
  422250:	mov    r13d,0xa0
  422256:	add    r13,QWORD PTR [rbp+0x20]
  42225a:	jmp    4222c2 <__ctype_b_loc@plt+0x1fff2>
  42225c:	lea    r13,[rbp+0x78]
  422260:	jmp    4222c2 <__ctype_b_loc@plt+0x1fff2>
  422262:	mov    rcx,QWORD PTR [rbp+0x28]
  422266:	mov    rcx,QWORD PTR [rcx+0x8]
  42226a:	mov    rcx,QWORD PTR [rcx]
  42226d:	lea    r13,[rbp+0x88]
  422274:	mov    rcx,QWORD PTR [rcx+0x18]
  422278:	mov    QWORD PTR [rbp+0x88],rcx
  42227f:	mov    DWORD PTR [rbp+0x90],0x5
  422289:	jmp    4222c2 <__ctype_b_loc@plt+0x1fff2>
  42228b:	mov    rsi,QWORD PTR [rbp+0x28]
  42228f:	mov    rsi,QWORD PTR [rsi+0x8]
  422293:	mov    rsi,QWORD PTR [rsi]
  422296:	mov    edi,0xffffd8ee
  42229b:	sub    edi,edx
  42229d:	movzx  edx,BYTE PTR [rsi+0xb]
  4222a1:	cmp    edi,edx
  4222a3:	jg     4222c2 <__ctype_b_loc@plt+0x1fff2>
  4222a5:	shl    rcx,0x1c
  4222a9:	movabs rdx,0xffffd8ed00000000
  4222b3:	sub    rdx,rcx
  4222b6:	sar    rdx,0x1c
  4222ba:	lea    r13,[rsi+rdx*1]
  4222be:	add    r13,0x28
  4222c2:	mov    ecx,0x1
  4222c7:	mov    rdx,QWORD PTR [r13+0x0]
  4222cb:	mov    QWORD PTR [rax],rdx
  4222ce:	mov    edx,DWORD PTR [r13+0x8]
  4222d2:	mov    DWORD PTR [rax+0x8],edx
  4222d5:	mov    rax,QWORD PTR [rbp+0x10]
  4222d9:	lea    rdx,[rax+0x10]
  4222dd:	mov    QWORD PTR [rbp+0x10],rdx
  4222e1:	mov    DWORD PTR [rax+0x10],ecx
  4222e4:	mov    DWORD PTR [rax+0x18],0x1
  4222eb:	add    QWORD PTR [rbp+0x10],0x10
  4222f0:	lea    rsi,[rip+0xffffffffffffe919]        # 420c10 <__ctype_b_loc@plt+0x1e940>
  4222f7:	mov    rdi,rbp
  4222fa:	mov    edx,0x2
  4222ff:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  422304:	mov    eax,0x1
  422309:	add    rsp,0x28
  42230d:	pop    rbx
  42230e:	pop    r12
  422310:	pop    r13
  422312:	pop    r14
  422314:	pop    r15
  422316:	pop    rbp
  422317:	ret    
  422318:	nop    DWORD PTR [rax+rax*1+0x0]
  422320:	push   rbp
  422321:	push   r15
  422323:	push   r14
  422325:	push   r13
  422327:	push   r12
  422329:	push   rbx
  42232a:	sub    rsp,0x88
  422331:	mov    r12,rdi
  422334:	mov    rax,QWORD PTR [rdi+0x10]
  422338:	mov    r13,QWORD PTR [rdi+0x18]
  42233c:	cmp    r13,rax
  42233f:	lea    r14,[rip+0x77d2]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422346:	mov    rbx,r14
  422349:	cmovb  rbx,r13
  42234d:	mov    ecx,DWORD PTR [rbx+0x8]
  422350:	cmp    ecx,0x4
  422353:	je     4223bf <__ctype_b_loc@plt+0x200ef>
  422355:	cmp    ecx,0x3
  422358:	jne    4223d0 <__ctype_b_loc@plt+0x20100>
  42235a:	vmovsd xmm0,QWORD PTR [rbx]
  42235e:	lea    rsi,[rip+0x7abc]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  422365:	lea    rbp,[rsp+0x10]
  42236a:	mov    rdi,rbp
  42236d:	mov    al,0x1
  42236f:	call   402270 <sprintf@plt>
  422374:	mov    rdi,rbp
  422377:	call   4020e0 <strlen@plt>
  42237c:	mov    rdi,r12
  42237f:	mov    rsi,rbp
  422382:	mov    rdx,rax
  422385:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42238a:	mov    QWORD PTR [rbx],rax
  42238d:	mov    DWORD PTR [rbx+0x8],0x4
  422394:	mov    rax,QWORD PTR [r12+0x20]
  422399:	mov    rcx,QWORD PTR [rax+0x78]
  42239d:	cmp    rcx,QWORD PTR [rax+0x70]
  4223a1:	jb     4223ab <__ctype_b_loc@plt+0x200db>
  4223a3:	mov    rdi,r12
  4223a6:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4223ab:	mov    rax,QWORD PTR [r12+0x10]
  4223b0:	mov    r13,QWORD PTR [r12+0x18]
  4223b5:	cmp    r13,rax
  4223b8:	mov    rbx,r14
  4223bb:	cmovb  rbx,r13
  4223bf:	mov    rbx,QWORD PTR [rbx]
  4223c2:	add    rbx,0x18
  4223c6:	mov    DWORD PTR [rsp+0x4],0x0
  4223ce:	jmp    422430 <__ctype_b_loc@plt+0x20160>
  4223d0:	lea    rcx,[rip+0x7dff]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  4223d7:	cmp    r13,r14
  4223da:	je     4223f6 <__ctype_b_loc@plt+0x20126>
  4223dc:	cmp    r13,rax
  4223df:	jae    4223f6 <__ctype_b_loc@plt+0x20126>
  4223e1:	movsxd rax,DWORD PTR [r13+0x8]
  4223e5:	cmp    rax,0xffffffffffffffff
  4223e9:	je     4223f6 <__ctype_b_loc@plt+0x20126>
  4223eb:	lea    rcx,[rip+0xd4ee]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4223f2:	mov    rcx,QWORD PTR [rcx+rax*8]
  4223f6:	lea    rsi,[rip+0x7dc5]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  4223fd:	lea    rdx,[rip+0x7e65]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  422404:	xor    ebx,ebx
  422406:	mov    rdi,r12
  422409:	xor    eax,eax
  42240b:	call   410460 <__ctype_b_loc@plt+0xe190>
  422410:	mov    rdi,r12
  422413:	mov    esi,0x1
  422418:	mov    rdx,rax
  42241b:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  422420:	mov    rax,QWORD PTR [r12+0x10]
  422425:	mov    r13,QWORD PTR [r12+0x18]
  42242a:	mov    cl,0x1
  42242c:	mov    DWORD PTR [rsp+0x4],ecx
  422430:	lea    rcx,[r13+0x10]
  422434:	lea    r15,[rip+0x83d5]        # 42a810 <__ctype_b_loc@plt+0x28540>
  42243b:	cmp    rcx,rax
  42243e:	mov    QWORD PTR [rsp+0x8],rbx
  422443:	jae    42259a <__ctype_b_loc@plt+0x202ca>
  422449:	cmp    rcx,r14
  42244c:	je     42259a <__ctype_b_loc@plt+0x202ca>
  422452:	movsxd rax,DWORD PTR [r13+0x18]
  422456:	test   rax,rax
  422459:	jle    42259a <__ctype_b_loc@plt+0x202ca>
  42245f:	cmp    eax,0x4
  422462:	je     4224d3 <__ctype_b_loc@plt+0x20203>
  422464:	cmp    eax,0x3
  422467:	jne    4224df <__ctype_b_loc@plt+0x2020f>
  422469:	vmovsd xmm0,QWORD PTR [r13+0x10]
  42246f:	lea    rsi,[rip+0x79ab]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  422476:	lea    rbp,[rsp+0x10]
  42247b:	mov    rdi,rbp
  42247e:	mov    al,0x1
  422480:	call   402270 <sprintf@plt>
  422485:	mov    rdi,rbp
  422488:	call   4020e0 <strlen@plt>
  42248d:	mov    rdi,r12
  422490:	mov    rsi,rbp
  422493:	mov    rdx,rax
  422496:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42249b:	mov    QWORD PTR [r13+0x10],rax
  42249f:	mov    DWORD PTR [r13+0x18],0x4
  4224a7:	mov    rax,QWORD PTR [r12+0x20]
  4224ac:	mov    rcx,QWORD PTR [rax+0x78]
  4224b0:	cmp    rcx,QWORD PTR [rax+0x70]
  4224b4:	jb     4224be <__ctype_b_loc@plt+0x201ee>
  4224b6:	mov    rdi,r12
  4224b9:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4224be:	mov    rax,QWORD PTR [r12+0x18]
  4224c3:	add    rax,0x10
  4224c7:	cmp    rax,QWORD PTR [r12+0x10]
  4224cc:	cmovb  r14,rax
  4224d0:	mov    rcx,r14
  4224d3:	mov    r15,QWORD PTR [rcx]
  4224d6:	add    r15,0x18
  4224da:	jmp    42259a <__ctype_b_loc@plt+0x202ca>
  4224df:	lea    rcx,[rip+0xd3fa]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4224e6:	mov    rcx,QWORD PTR [rcx+rax*8]
  4224ea:	lea    rsi,[rip+0x7cd1]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  4224f1:	lea    rdx,[rip+0x7d71]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  4224f8:	mov    rdi,r12
  4224fb:	xor    eax,eax
  4224fd:	call   410460 <__ctype_b_loc@plt+0xe190>
  422502:	mov    r15,rax
  422505:	mov    rax,QWORD PTR [r12+0x28]
  42250a:	sub    rax,QWORD PTR [r12+0x50]
  42250f:	jbe    42257e <__ctype_b_loc@plt+0x202ae>
  422511:	shr    rax,0x3
  422515:	imul   eax,eax,0xcccccccd
  42251b:	mov    DWORD PTR [rsp+0x84],eax
  422522:	lea    rsi,[rip+0x792e]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  422529:	lea    rdx,[rsp+0x10]
  42252e:	mov    rdi,r12
  422531:	call   410000 <__ctype_b_loc@plt+0xdd30>
  422536:	mov    rdi,QWORD PTR [rsp+0x20]
  42253b:	lea    rsi,[rip+0x7c0e]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  422542:	call   402170 <strcmp@plt>
  422547:	cmp    eax,0x1
  42254a:	mov    edx,0x2
  42254f:	sbb    edx,0x0
  422552:	mov    rcx,QWORD PTR [rsp+0x18]
  422557:	test   rcx,rcx
  42255a:	jne    422568 <__ctype_b_loc@plt+0x20298>
  42255c:	lea    rcx,[rip+0x7c12]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  422563:	mov    QWORD PTR [rsp+0x18],rcx
  422568:	lea    rsi,[rip+0x7c08]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  42256f:	mov    rdi,r12
  422572:	mov    r8,r15
  422575:	xor    eax,eax
  422577:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  42257c:	jmp    422597 <__ctype_b_loc@plt+0x202c7>
  42257e:	lea    rsi,[rip+0x7bb5]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  422585:	mov    rdi,r12
  422588:	mov    edx,0x2
  42258d:	mov    rcx,r15
  422590:	xor    eax,eax
  422592:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  422597:	xor    r15d,r15d
  42259a:	mov    esi,0x8
  42259f:	mov    rdi,r12
  4225a2:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  4225a7:	mov    rbp,rax
  4225aa:	mov    QWORD PTR [rax],0x0
  4225b1:	mov    ebx,0xa0
  4225b6:	add    rbx,QWORD PTR [r12+0x20]
  4225bb:	lea    rsi,[rip+0x8164]        # 42a726 <__ctype_b_loc@plt+0x28456>
  4225c2:	mov    edx,0x5
  4225c7:	mov    rdi,r12
  4225ca:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4225cf:	mov    QWORD PTR [rsp+0x10],rax
  4225d4:	mov    DWORD PTR [rsp+0x18],0x4
  4225dc:	mov    rcx,QWORD PTR [r12+0x10]
  4225e1:	lea    rdx,[rsp+0x10]
  4225e6:	mov    rdi,r12
  4225e9:	mov    rsi,rbx
  4225ec:	call   408610 <__ctype_b_loc@plt+0x6340>
  4225f1:	add    QWORD PTR [r12+0x10],0x10
  4225f7:	mov    rdi,r12
  4225fa:	mov    esi,0xfffffffe
  4225ff:	call   40d420 <__ctype_b_loc@plt+0xb150>
  422604:	mov    rbx,QWORD PTR [rsp+0x8]
  422609:	mov    rdi,rbx
  42260c:	mov    rsi,r15
  42260f:	call   402240 <fopen@plt>
  422614:	mov    rcx,rax
  422617:	mov    QWORD PTR [rbp+0x0],rax
  42261b:	mov    eax,0x1
  422620:	test   rcx,rcx
  422623:	jne    42269b <__ctype_b_loc@plt+0x203cb>
  422625:	call   402050 <__errno_location@plt>
  42262a:	mov    ebp,DWORD PTR [rax]
  42262c:	mov    rax,QWORD PTR [r12+0x10]
  422631:	mov    DWORD PTR [rax+0x8],0x0
  422638:	add    rax,0x10
  42263c:	mov    QWORD PTR [r12+0x10],rax
  422641:	mov    edi,ebp
  422643:	call   4022a0 <strerror@plt>
  422648:	cmp    BYTE PTR [rsp+0x4],0x0
  42264d:	je     422665 <__ctype_b_loc@plt+0x20395>
  42264f:	lea    rsi,[rip+0x7791]        # 429de7 <__ctype_b_loc@plt+0x27b17>
  422656:	mov    rdi,r12
  422659:	mov    rdx,rax
  42265c:	xor    eax,eax
  42265e:	call   410460 <__ctype_b_loc@plt+0xe190>
  422663:	jmp    42267c <__ctype_b_loc@plt+0x203ac>
  422665:	lea    rsi,[rip+0x8410]        # 42aa7c <__ctype_b_loc@plt+0x287ac>
  42266c:	mov    rdi,r12
  42266f:	mov    rdx,rbx
  422672:	mov    rcx,rax
  422675:	xor    eax,eax
  422677:	call   410460 <__ctype_b_loc@plt+0xe190>
  42267c:	mov    rax,QWORD PTR [r12+0x10]
  422681:	vcvtsi2sd xmm0,xmm1,ebp
  422685:	vmovsd QWORD PTR [rax],xmm0
  422689:	mov    DWORD PTR [rax+0x8],0x3
  422690:	add    QWORD PTR [r12+0x10],0x10
  422696:	mov    eax,0x3
  42269b:	add    rsp,0x88
  4226a2:	pop    rbx
  4226a3:	pop    r12
  4226a5:	pop    r13
  4226a7:	pop    r14
  4226a9:	pop    r15
  4226ab:	pop    rbp
  4226ac:	ret    
  4226ad:	nop    DWORD PTR [rax]
  4226b0:	push   rax
  4226b1:	lea    rdx,[rip+0x7c64]        # 42a31c <__ctype_b_loc@plt+0x2804c>
  4226b8:	mov    esi,0x2
  4226bd:	call   422ae0 <__ctype_b_loc@plt+0x20810>
  4226c2:	mov    eax,0x1
  4226c7:	pop    rcx
  4226c8:	ret    
  4226c9:	nop    DWORD PTR [rax+0x0]
  4226d0:	push   r14
  4226d2:	push   rbx
  4226d3:	push   rax
  4226d4:	mov    r14,rdi
  4226d7:	mov    rax,QWORD PTR [rdi+0x28]
  4226db:	mov    rax,QWORD PTR [rax+0x8]
  4226df:	mov    rax,QWORD PTR [rax]
  4226e2:	mov    rcx,QWORD PTR [rax+0x18]
  4226e6:	mov    QWORD PTR [rdi+0x88],rcx
  4226ed:	mov    DWORD PTR [rdi+0x90],0x5
  4226f7:	cmp    DWORD PTR [rcx+0x38],0x0
  4226fb:	je     422703 <__ctype_b_loc@plt+0x20433>
  4226fd:	mov    rax,QWORD PTR [rcx+0x18]
  422701:	jmp    42276f <__ctype_b_loc@plt+0x2049f>
  422703:	mov    al,BYTE PTR [rcx+0xb]
  422706:	mov    rdx,0xffffffffffffffff
  42270d:	shlx   rsi,rdx,rax
  422712:	or     rsi,0x1
  422716:	xor    rsi,0xfffffffffffffffe
  42271a:	mov    eax,0x3ff00000
  42271f:	xor    edx,edx
  422721:	div    rsi
  422724:	lea    rdx,[rdx+rdx*4]
  422728:	shl    rdx,0x3
  42272c:	add    rdx,QWORD PTR [rcx+0x20]
  422730:	vmovsd xmm0,QWORD PTR [rip+0x7628]        # 429d60 <__ctype_b_loc@plt+0x27a90>
  422738:	lea    rax,[rip+0x73d9]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42273f:	cmp    DWORD PTR [rdx+0x18],0x3
  422743:	je     42275f <__ctype_b_loc@plt+0x2048f>
  422745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42274f:	nop
  422750:	mov    rdx,QWORD PTR [rdx+0x20]
  422754:	test   rdx,rdx
  422757:	je     42276f <__ctype_b_loc@plt+0x2049f>
  422759:	cmp    DWORD PTR [rdx+0x18],0x3
  42275d:	jne    422750 <__ctype_b_loc@plt+0x20480>
  42275f:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  422764:	vucomisd xmm1,xmm0
  422768:	jne    422750 <__ctype_b_loc@plt+0x20480>
  42276a:	jp     422750 <__ctype_b_loc@plt+0x20480>
  42276c:	mov    rax,rdx
  42276f:	mov    rcx,QWORD PTR [r14+0x10]
  422773:	mov    rdx,QWORD PTR [rax]
  422776:	mov    QWORD PTR [rcx],rdx
  422779:	mov    eax,DWORD PTR [rax+0x8]
  42277c:	mov    DWORD PTR [rcx+0x8],eax
  42277f:	mov    rax,QWORD PTR [r14+0x10]
  422783:	lea    rcx,[rax+0x10]
  422787:	mov    QWORD PTR [r14+0x10],rcx
  42278b:	mov    ecx,DWORD PTR [rax+0x8]
  42278e:	cmp    ecx,0x2
  422791:	je     4227a1 <__ctype_b_loc@plt+0x204d1>
  422793:	cmp    ecx,0x7
  422796:	jne    4227a6 <__ctype_b_loc@plt+0x204d6>
  422798:	mov    rax,QWORD PTR [rax]
  42279b:	add    rax,0x28
  42279f:	jmp    4227a8 <__ctype_b_loc@plt+0x204d8>
  4227a1:	mov    rax,QWORD PTR [rax]
  4227a4:	jmp    4227a8 <__ctype_b_loc@plt+0x204d8>
  4227a6:	xor    eax,eax
  4227a8:	mov    rbx,QWORD PTR [rax]
  4227ab:	test   rbx,rbx
  4227ae:	jne    4227c8 <__ctype_b_loc@plt+0x204f8>
  4227b0:	lea    rsi,[rip+0x8016]        # 42a7cd <__ctype_b_loc@plt+0x284fd>
  4227b7:	lea    rdx,[rip+0x8002]        # 42a7c0 <__ctype_b_loc@plt+0x284f0>
  4227be:	mov    rdi,r14
  4227c1:	xor    eax,eax
  4227c3:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4227c8:	mov    rdi,r14
  4227cb:	mov    rsi,rbx
  4227ce:	mov    edx,0x1
  4227d3:	add    rsp,0x8
  4227d7:	pop    rbx
  4227d8:	pop    r14
  4227da:	jmp    420fc0 <__ctype_b_loc@plt+0x1ecf0>
  4227df:	nop
  4227e0:	push   r15
  4227e2:	push   r14
  4227e4:	push   r12
  4227e6:	push   rbx
  4227e7:	sub    rsp,0x18
  4227eb:	mov    r14,rdi
  4227ee:	mov    rax,QWORD PTR [rdi+0x18]
  4227f2:	lea    r15,[rip+0x731f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4227f9:	cmp    rax,r15
  4227fc:	je     42280d <__ctype_b_loc@plt+0x2053d>
  4227fe:	mov    rcx,QWORD PTR [r14+0x10]
  422802:	cmp    rax,rcx
  422805:	jae    42280d <__ctype_b_loc@plt+0x2053d>
  422807:	cmp    DWORD PTR [rax+0x8],0xffffffff
  42280b:	jne    422829 <__ctype_b_loc@plt+0x20559>
  42280d:	lea    rdx,[rip+0x7917]        # 42a12b <__ctype_b_loc@plt+0x27e5b>
  422814:	mov    rdi,r14
  422817:	mov    esi,0x1
  42281c:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  422821:	mov    rcx,QWORD PTR [r14+0x10]
  422825:	mov    rax,QWORD PTR [r14+0x18]
  422829:	cmp    rax,rcx
  42282c:	cmovae rax,r15
  422830:	mov    ecx,DWORD PTR [rax+0x8]
  422833:	cmp    ecx,0x2
  422836:	je     422846 <__ctype_b_loc@plt+0x20576>
  422838:	cmp    ecx,0x7
  42283b:	jne    42284b <__ctype_b_loc@plt+0x2057b>
  42283d:	mov    r12,QWORD PTR [rax]
  422840:	add    r12,0x28
  422844:	jmp    42284e <__ctype_b_loc@plt+0x2057e>
  422846:	mov    r12,QWORD PTR [rax]
  422849:	jmp    42284e <__ctype_b_loc@plt+0x2057e>
  42284b:	xor    r12d,r12d
  42284e:	mov    ebx,0xa0
  422853:	add    rbx,QWORD PTR [r14+0x20]
  422857:	lea    rsi,[rip+0x7ec8]        # 42a726 <__ctype_b_loc@plt+0x28456>
  42285e:	mov    edx,0x5
  422863:	mov    rdi,r14
  422866:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42286b:	mov    QWORD PTR [rsp+0x8],rax
  422870:	mov    DWORD PTR [rsp+0x10],0x4
  422878:	mov    rcx,QWORD PTR [r14+0x10]
  42287c:	lea    rdx,[rsp+0x8]
  422881:	mov    rdi,r14
  422884:	mov    rsi,rbx
  422887:	call   408610 <__ctype_b_loc@plt+0x6340>
  42288c:	mov    rax,QWORD PTR [r14+0x10]
  422890:	lea    rbx,[rax+0x10]
  422894:	mov    QWORD PTR [r14+0x10],rbx
  422898:	test   r12,r12
  42289b:	je     422931 <__ctype_b_loc@plt+0x20661>
  4228a1:	mov    rcx,QWORD PTR [r14+0x18]
  4228a5:	cmp    rcx,rbx
  4228a8:	cmovae rcx,r15
  4228ac:	movsxd rdx,DWORD PTR [rcx+0x8]
  4228b0:	cmp    rdx,0x7
  4228b4:	je     4228bb <__ctype_b_loc@plt+0x205eb>
  4228b6:	cmp    edx,0x5
  4228b9:	jne    4228c4 <__ctype_b_loc@plt+0x205f4>
  4228bb:	mov    rcx,QWORD PTR [rcx]
  4228be:	add    rcx,0x10
  4228c2:	jmp    4228d3 <__ctype_b_loc@plt+0x20603>
  4228c4:	mov    rcx,QWORD PTR [r14+0x20]
  4228c8:	lea    rcx,[rcx+rdx*8]
  4228cc:	add    rcx,0xe0
  4228d3:	mov    rcx,QWORD PTR [rcx]
  4228d6:	test   rcx,rcx
  4228d9:	je     422931 <__ctype_b_loc@plt+0x20661>
  4228db:	mov    QWORD PTR [rax+0x10],rcx
  4228df:	mov    DWORD PTR [rax+0x18],0x5
  4228e6:	mov    rax,QWORD PTR [r14+0x10]
  4228ea:	lea    rbx,[rax+0x10]
  4228ee:	mov    QWORD PTR [r14+0x10],rbx
  4228f2:	cmp    rax,r15
  4228f5:	je     422931 <__ctype_b_loc@plt+0x20661>
  4228f7:	lea    rcx,[rax-0x10]
  4228fb:	cmp    rcx,r15
  4228fe:	je     422931 <__ctype_b_loc@plt+0x20661>
  422900:	mov    ecx,DWORD PTR [rax-0x8]
  422903:	cmp    ecx,DWORD PTR [rax+0x8]
  422906:	jne    422931 <__ctype_b_loc@plt+0x20661>
  422908:	cmp    ecx,0x3
  42290b:	ja     422928 <__ctype_b_loc@plt+0x20658>
  42290d:	mov    ecx,ecx
  42290f:	lea    rdx,[rip+0x700e]        # 429924 <__ctype_b_loc@plt+0x27654>
  422916:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42291a:	add    rcx,rdx
  42291d:	jmp    rcx
  42291f:	mov    ecx,DWORD PTR [rax-0x10]
  422922:	cmp    ecx,DWORD PTR [rax]
  422924:	jne    422931 <__ctype_b_loc@plt+0x20661>
  422926:	jmp    42295e <__ctype_b_loc@plt+0x2068e>
  422928:	mov    rcx,QWORD PTR [rax-0x10]
  42292c:	cmp    rcx,QWORD PTR [rax]
  42292f:	je     42295e <__ctype_b_loc@plt+0x2068e>
  422931:	mov    DWORD PTR [rbx+0x8],0x0
  422938:	add    rbx,0x10
  42293c:	mov    QWORD PTR [r14+0x10],rbx
  422940:	mov    eax,0x1
  422945:	add    rsp,0x18
  422949:	pop    rbx
  42294a:	pop    r12
  42294c:	pop    r14
  42294e:	pop    r15
  422950:	ret    
  422951:	vmovsd xmm0,QWORD PTR [rax-0x10]
  422956:	vucomisd xmm0,QWORD PTR [rax]
  42295a:	jne    422931 <__ctype_b_loc@plt+0x20661>
  42295c:	jp     422931 <__ctype_b_loc@plt+0x20661>
  42295e:	cmp    QWORD PTR [r12],0x0
  422963:	mov    rcx,QWORD PTR [r14+0x20]
  422967:	mov    rax,QWORD PTR [rcx+0x70]
  42296b:	mov    rcx,QWORD PTR [rcx+0x78]
  42296f:	je     422990 <__ctype_b_loc@plt+0x206c0>
  422971:	cmp    rcx,rax
  422974:	jb     422982 <__ctype_b_loc@plt+0x206b2>
  422976:	mov    rdi,r14
  422979:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42297e:	mov    rbx,QWORD PTR [r14+0x10]
  422982:	lea    rsi,[rip+0x7dc7]        # 42a750 <__ctype_b_loc@plt+0x28480>
  422989:	mov    edx,0x4
  42298e:	jmp    4229ad <__ctype_b_loc@plt+0x206dd>
  422990:	cmp    rcx,rax
  422993:	jb     4229a1 <__ctype_b_loc@plt+0x206d1>
  422995:	mov    rdi,r14
  422998:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42299d:	mov    rbx,QWORD PTR [r14+0x10]
  4229a1:	lea    rsi,[rip+0x7da1]        # 42a749 <__ctype_b_loc@plt+0x28479>
  4229a8:	mov    edx,0xb
  4229ad:	mov    rdi,r14
  4229b0:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4229b5:	mov    QWORD PTR [rbx],rax
  4229b8:	mov    DWORD PTR [rbx+0x8],0x4
  4229bf:	mov    rbx,QWORD PTR [r14+0x10]
  4229c3:	jmp    422938 <__ctype_b_loc@plt+0x20668>
  4229c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4229d0:	push   r14
  4229d2:	push   rbx
  4229d3:	push   rax
  4229d4:	mov    r14,rdi
  4229d7:	mov    rax,QWORD PTR [rdi+0x28]
  4229db:	mov    rax,QWORD PTR [rax+0x8]
  4229df:	mov    rax,QWORD PTR [rax]
  4229e2:	mov    rcx,QWORD PTR [rax+0x18]
  4229e6:	mov    QWORD PTR [rdi+0x88],rcx
  4229ed:	mov    DWORD PTR [rdi+0x90],0x5
  4229f7:	cmp    DWORD PTR [rcx+0x38],0x2
  4229fb:	jb     422a07 <__ctype_b_loc@plt+0x20737>
  4229fd:	mov    rax,QWORD PTR [rcx+0x18]
  422a01:	add    rax,0x10
  422a05:	jmp    422a6f <__ctype_b_loc@plt+0x2079f>
  422a07:	mov    al,BYTE PTR [rcx+0xb]
  422a0a:	mov    rdx,0xffffffffffffffff
  422a11:	shlx   rsi,rdx,rax
  422a16:	or     rsi,0x1
  422a1a:	xor    rsi,0xfffffffffffffffe
  422a1e:	mov    eax,0x40000000
  422a23:	xor    edx,edx
  422a25:	div    rsi
  422a28:	lea    rdx,[rdx+rdx*4]
  422a2c:	shl    rdx,0x3
  422a30:	add    rdx,QWORD PTR [rcx+0x20]
  422a34:	vmovsd xmm0,QWORD PTR [rip+0x731c]        # 429d58 <__ctype_b_loc@plt+0x27a88>
  422a3c:	lea    rax,[rip+0x70d5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422a43:	cmp    DWORD PTR [rdx+0x18],0x3
  422a47:	je     422a5f <__ctype_b_loc@plt+0x2078f>
  422a49:	nop    DWORD PTR [rax+0x0]
  422a50:	mov    rdx,QWORD PTR [rdx+0x20]
  422a54:	test   rdx,rdx
  422a57:	je     422a6f <__ctype_b_loc@plt+0x2079f>
  422a59:	cmp    DWORD PTR [rdx+0x18],0x3
  422a5d:	jne    422a50 <__ctype_b_loc@plt+0x20780>
  422a5f:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  422a64:	vucomisd xmm1,xmm0
  422a68:	jne    422a50 <__ctype_b_loc@plt+0x20780>
  422a6a:	jp     422a50 <__ctype_b_loc@plt+0x20780>
  422a6c:	mov    rax,rdx
  422a6f:	mov    rcx,QWORD PTR [r14+0x10]
  422a73:	mov    rdx,QWORD PTR [rax]
  422a76:	mov    QWORD PTR [rcx],rdx
  422a79:	mov    eax,DWORD PTR [rax+0x8]
  422a7c:	mov    DWORD PTR [rcx+0x8],eax
  422a7f:	mov    rax,QWORD PTR [r14+0x10]
  422a83:	lea    rcx,[rax+0x10]
  422a87:	mov    QWORD PTR [r14+0x10],rcx
  422a8b:	mov    ecx,DWORD PTR [rax+0x8]
  422a8e:	cmp    ecx,0x2
  422a91:	je     422aa1 <__ctype_b_loc@plt+0x207d1>
  422a93:	cmp    ecx,0x7
  422a96:	jne    422aa6 <__ctype_b_loc@plt+0x207d6>
  422a98:	mov    rax,QWORD PTR [rax]
  422a9b:	add    rax,0x28
  422a9f:	jmp    422aa8 <__ctype_b_loc@plt+0x207d8>
  422aa1:	mov    rax,QWORD PTR [rax]
  422aa4:	jmp    422aa8 <__ctype_b_loc@plt+0x207d8>
  422aa6:	xor    eax,eax
  422aa8:	mov    rbx,QWORD PTR [rax]
  422aab:	test   rbx,rbx
  422aae:	jne    422ac8 <__ctype_b_loc@plt+0x207f8>
  422ab0:	lea    rsi,[rip+0x7d16]        # 42a7cd <__ctype_b_loc@plt+0x284fd>
  422ab7:	lea    rdx,[rip+0x7d08]        # 42a7c6 <__ctype_b_loc@plt+0x284f6>
  422abe:	mov    rdi,r14
  422ac1:	xor    eax,eax
  422ac3:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  422ac8:	mov    rdi,r14
  422acb:	mov    rsi,rbx
  422ace:	mov    edx,0x1
  422ad3:	add    rsp,0x8
  422ad7:	pop    rbx
  422ad8:	pop    r14
  422ada:	jmp    4218d0 <__ctype_b_loc@plt+0x1f600>
  422adf:	nop
  422ae0:	push   rbp
  422ae1:	push   r15
  422ae3:	push   r14
  422ae5:	push   r13
  422ae7:	push   r12
  422ae9:	push   rbx
  422aea:	sub    rsp,0x38
  422aee:	mov    r14d,esi
  422af1:	mov    rbx,rdi
  422af4:	mov    rbp,QWORD PTR [rdi+0x18]
  422af8:	lea    r15,[rip+0x7019]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422aff:	cmp    rbp,r15
  422b02:	je     422c76 <__ctype_b_loc@plt+0x209a6>
  422b08:	cmp    rbp,QWORD PTR [rbx+0x10]
  422b0c:	jae    422c76 <__ctype_b_loc@plt+0x209a6>
  422b12:	mov    eax,DWORD PTR [rbp+0x8]
  422b15:	test   eax,eax
  422b17:	jle    422c76 <__ctype_b_loc@plt+0x209a6>
  422b1d:	cmp    eax,0x4
  422b20:	je     422b90 <__ctype_b_loc@plt+0x208c0>
  422b22:	cmp    eax,0x3
  422b25:	jne    422c27 <__ctype_b_loc@plt+0x20957>
  422b2b:	mov    QWORD PTR [rsp+0x8],rdx
  422b30:	vmovq  xmm0,QWORD PTR [rbp+0x0]
  422b35:	lea    rsi,[rip+0x72e5]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  422b3c:	lea    r12,[rsp+0x10]
  422b41:	mov    rdi,r12
  422b44:	mov    al,0x1
  422b46:	call   402270 <sprintf@plt>
  422b4b:	mov    rdi,r12
  422b4e:	call   4020e0 <strlen@plt>
  422b53:	mov    rdi,rbx
  422b56:	mov    rsi,r12
  422b59:	mov    rdx,rax
  422b5c:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  422b61:	mov    QWORD PTR [rbp+0x0],rax
  422b65:	mov    DWORD PTR [rbp+0x8],0x4
  422b6c:	mov    rax,QWORD PTR [rbx+0x20]
  422b70:	mov    rcx,QWORD PTR [rax+0x78]
  422b74:	cmp    rcx,QWORD PTR [rax+0x70]
  422b78:	jb     422b82 <__ctype_b_loc@plt+0x208b2>
  422b7a:	mov    rdi,rbx
  422b7d:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  422b82:	mov    rbp,QWORD PTR [rbx+0x18]
  422b86:	cmp    rbp,QWORD PTR [rbx+0x10]
  422b8a:	cmovae rbp,r15
  422b8e:	jmp    422b95 <__ctype_b_loc@plt+0x208c5>
  422b90:	mov    QWORD PTR [rsp+0x8],rdx
  422b95:	mov    r12,QWORD PTR [rbp+0x0]
  422b99:	add    r12,0x18
  422b9d:	mov    esi,0x8
  422ba2:	mov    rdi,rbx
  422ba5:	call   41d670 <__ctype_b_loc@plt+0x1b3a0>
  422baa:	mov    r13,rax
  422bad:	mov    QWORD PTR [rax],0x0
  422bb4:	mov    ebp,0xa0
  422bb9:	add    rbp,QWORD PTR [rbx+0x20]
  422bbd:	lea    rsi,[rip+0x7b62]        # 42a726 <__ctype_b_loc@plt+0x28456>
  422bc4:	mov    edx,0x5
  422bc9:	mov    rdi,rbx
  422bcc:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  422bd1:	mov    QWORD PTR [rsp+0x10],rax
  422bd6:	mov    DWORD PTR [rsp+0x18],0x4
  422bde:	mov    rcx,QWORD PTR [rbx+0x10]
  422be2:	lea    rdx,[rsp+0x10]
  422be7:	mov    rdi,rbx
  422bea:	mov    rsi,rbp
  422bed:	call   408610 <__ctype_b_loc@plt+0x6340>
  422bf2:	add    QWORD PTR [rbx+0x10],0x10
  422bf7:	mov    rdi,rbx
  422bfa:	mov    esi,0xfffffffe
  422bff:	call   40d420 <__ctype_b_loc@plt+0xb150>
  422c04:	mov    rdi,r12
  422c07:	mov    rsi,QWORD PTR [rsp+0x8]
  422c0c:	call   402240 <fopen@plt>
  422c11:	mov    QWORD PTR [r13+0x0],rax
  422c15:	test   rax,rax
  422c18:	jne    422c66 <__ctype_b_loc@plt+0x20996>
  422c1a:	mov    rdi,rbx
  422c1d:	mov    rsi,r12
  422c20:	call   422d50 <__ctype_b_loc@plt+0x20a80>
  422c25:	jmp    422c66 <__ctype_b_loc@plt+0x20996>
  422c27:	mov    rdi,rbx
  422c2a:	call   420a90 <__ctype_b_loc@plt+0x1e7c0>
  422c2f:	cmp    QWORD PTR [rax],0x0
  422c33:	jne    422c46 <__ctype_b_loc@plt+0x20976>
  422c35:	lea    rsi,[rip+0x7afc]        # 42a738 <__ctype_b_loc@plt+0x28468>
  422c3c:	mov    rdi,rbx
  422c3f:	xor    eax,eax
  422c41:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  422c46:	mov    rax,QWORD PTR [rbx+0x10]
  422c4a:	mov    rcx,QWORD PTR [rbx+0x18]
  422c4e:	cmp    rcx,rax
  422c51:	cmovae rcx,r15
  422c55:	mov    rdx,QWORD PTR [rcx]
  422c58:	mov    QWORD PTR [rax],rdx
  422c5b:	mov    ecx,DWORD PTR [rcx+0x8]
  422c5e:	mov    DWORD PTR [rax+0x8],ecx
  422c61:	add    QWORD PTR [rbx+0x10],0x10
  422c66:	mov    rdi,rbx
  422c69:	mov    esi,0xffffd8ef
  422c6e:	mov    edx,r14d
  422c71:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  422c76:	mov    rax,QWORD PTR [rbx+0x28]
  422c7a:	mov    rax,QWORD PTR [rax+0x8]
  422c7e:	mov    rax,QWORD PTR [rax]
  422c81:	mov    rcx,QWORD PTR [rax+0x18]
  422c85:	mov    QWORD PTR [rbx+0x88],rcx
  422c8c:	mov    DWORD PTR [rbx+0x90],0x5
  422c96:	lea    eax,[r14-0x1]
  422c9a:	cmp    eax,DWORD PTR [rcx+0x38]
  422c9d:	jae    422cac <__ctype_b_loc@plt+0x209dc>
  422c9f:	movsxd r15,eax
  422ca2:	shl    r15,0x4
  422ca6:	add    r15,QWORD PTR [rcx+0x18]
  422caa:	jmp    422d1f <__ctype_b_loc@plt+0x20a4f>
  422cac:	vcvtsi2sd xmm0,xmm1,r14d
  422cb1:	test   r14d,r14d
  422cb4:	je     422cf4 <__ctype_b_loc@plt+0x20a24>
  422cb6:	vmovq  rdx,xmm0
  422cbb:	mov    rax,rdx
  422cbe:	shr    rax,0x20
  422cc2:	add    eax,edx
  422cc4:	mov    dl,BYTE PTR [rcx+0xb]
  422cc7:	mov    rsi,0xffffffffffffffff
  422cce:	shlx   rsi,rsi,rdx
  422cd3:	or     rsi,0x1
  422cd7:	xor    rsi,0xfffffffffffffffe
  422cdb:	xor    edx,edx
  422cdd:	div    rsi
  422ce0:	lea    rax,[rdx+rdx*4]
  422ce4:	shl    rax,0x3
  422ce8:	add    rax,QWORD PTR [rcx+0x20]
  422cec:	cmp    DWORD PTR [rax+0x18],0x3
  422cf0:	jne    422d00 <__ctype_b_loc@plt+0x20a30>
  422cf2:	jmp    422d0f <__ctype_b_loc@plt+0x20a3f>
  422cf4:	mov    rax,QWORD PTR [rcx+0x20]
  422cf8:	cmp    DWORD PTR [rax+0x18],0x3
  422cfc:	je     422d0f <__ctype_b_loc@plt+0x20a3f>
  422cfe:	xchg   ax,ax
  422d00:	mov    rax,QWORD PTR [rax+0x20]
  422d04:	test   rax,rax
  422d07:	je     422d1f <__ctype_b_loc@plt+0x20a4f>
  422d09:	cmp    DWORD PTR [rax+0x18],0x3
  422d0d:	jne    422d00 <__ctype_b_loc@plt+0x20a30>
  422d0f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  422d14:	vucomisd xmm1,xmm0
  422d18:	jne    422d00 <__ctype_b_loc@plt+0x20a30>
  422d1a:	jp     422d00 <__ctype_b_loc@plt+0x20a30>
  422d1c:	mov    r15,rax
  422d1f:	mov    rax,QWORD PTR [rbx+0x10]
  422d23:	mov    rcx,QWORD PTR [r15]
  422d26:	mov    QWORD PTR [rax],rcx
  422d29:	mov    ecx,DWORD PTR [r15+0x8]
  422d2d:	mov    DWORD PTR [rax+0x8],ecx
  422d30:	add    QWORD PTR [rbx+0x10],0x10
  422d35:	add    rsp,0x38
  422d39:	pop    rbx
  422d3a:	pop    r12
  422d3c:	pop    r13
  422d3e:	pop    r14
  422d40:	pop    r15
  422d42:	pop    rbp
  422d43:	ret    
  422d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d4e:	xchg   ax,ax
  422d50:	push   r15
  422d52:	push   r14
  422d54:	push   r12
  422d56:	push   rbx
  422d57:	sub    rsp,0x28
  422d5b:	mov    r15,rsi
  422d5e:	mov    r14,rdi
  422d61:	call   402050 <__errno_location@plt>
  422d66:	mov    edi,DWORD PTR [rax]
  422d68:	call   4022a0 <strerror@plt>
  422d6d:	lea    rsi,[rip+0x7d08]        # 42aa7c <__ctype_b_loc@plt+0x287ac>
  422d74:	xor    r12d,r12d
  422d77:	mov    rdi,r14
  422d7a:	mov    rdx,r15
  422d7d:	mov    rcx,rax
  422d80:	xor    eax,eax
  422d82:	call   410460 <__ctype_b_loc@plt+0xe190>
  422d87:	mov    rbx,QWORD PTR [r14+0x10]
  422d8b:	mov    eax,DWORD PTR [rbx-0x8]
  422d8e:	cmp    eax,0x4
  422d91:	je     422dec <__ctype_b_loc@plt+0x20b1c>
  422d93:	cmp    eax,0x3
  422d96:	jne    422df7 <__ctype_b_loc@plt+0x20b27>
  422d98:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  422d9d:	lea    rsi,[rip+0x707d]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  422da4:	mov    r15,rsp
  422da7:	mov    rdi,r15
  422daa:	mov    al,0x1
  422dac:	call   402270 <sprintf@plt>
  422db1:	mov    rdi,r15
  422db4:	call   4020e0 <strlen@plt>
  422db9:	mov    rdi,r14
  422dbc:	mov    rsi,r15
  422dbf:	mov    rdx,rax
  422dc2:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  422dc7:	mov    QWORD PTR [rbx-0x10],rax
  422dcb:	mov    DWORD PTR [rbx-0x8],0x4
  422dd2:	mov    rax,QWORD PTR [r14+0x20]
  422dd6:	mov    rcx,QWORD PTR [rax+0x78]
  422dda:	cmp    rcx,QWORD PTR [rax+0x70]
  422dde:	jb     422de8 <__ctype_b_loc@plt+0x20b18>
  422de0:	mov    rdi,r14
  422de3:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  422de8:	mov    rbx,QWORD PTR [r14+0x10]
  422dec:	add    rbx,0xfffffffffffffff0
  422df0:	mov    r12,QWORD PTR [rbx]
  422df3:	add    r12,0x18
  422df7:	mov    rdi,r14
  422dfa:	mov    esi,0x1
  422dff:	mov    rdx,r12
  422e02:	add    rsp,0x28
  422e06:	pop    rbx
  422e07:	pop    r12
  422e09:	pop    r14
  422e0b:	pop    r15
  422e0d:	jmp    40ff30 <__ctype_b_loc@plt+0xdc60>
  422e12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e1c:	nop    DWORD PTR [rax+0x0]
  422e20:	push   rax
  422e21:	mov    esi,0x1
  422e26:	xor    edx,edx
  422e28:	call   410640 <__ctype_b_loc@plt+0xe370>
  422e2d:	mov    edi,eax
  422e2f:	call   402280 <exit@plt>
  422e34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e3e:	xchg   ax,ax
  422e40:	push   rbp
  422e41:	push   r15
  422e43:	push   r14
  422e45:	push   rbx
  422e46:	sub    rsp,0x28
  422e4a:	mov    r14,rdi
  422e4d:	mov    rdx,QWORD PTR [rdi+0x10]
  422e51:	mov    rax,QWORD PTR [rdi+0x18]
  422e55:	cmp    rax,rdx
  422e58:	lea    rbx,[rip+0x6cb9]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422e5f:	mov    rbp,rbx
  422e62:	cmovb  rbp,rax
  422e66:	mov    ecx,DWORD PTR [rbp+0x8]
  422e69:	cmp    ecx,0x4
  422e6c:	je     422ed2 <__ctype_b_loc@plt+0x20c02>
  422e6e:	cmp    ecx,0x3
  422e71:	jne    422edc <__ctype_b_loc@plt+0x20c0c>
  422e73:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  422e78:	lea    rsi,[rip+0x6fa2]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  422e7f:	mov    r15,rsp
  422e82:	mov    rdi,r15
  422e85:	mov    al,0x1
  422e87:	call   402270 <sprintf@plt>
  422e8c:	mov    rdi,r15
  422e8f:	call   4020e0 <strlen@plt>
  422e94:	mov    rdi,r14
  422e97:	mov    rsi,r15
  422e9a:	mov    rdx,rax
  422e9d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  422ea2:	mov    QWORD PTR [rbp+0x0],rax
  422ea6:	mov    DWORD PTR [rbp+0x8],0x4
  422ead:	mov    rax,QWORD PTR [r14+0x20]
  422eb1:	mov    rcx,QWORD PTR [rax+0x78]
  422eb5:	cmp    rcx,QWORD PTR [rax+0x70]
  422eb9:	jb     422ec3 <__ctype_b_loc@plt+0x20bf3>
  422ebb:	mov    rdi,r14
  422ebe:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  422ec3:	mov    rax,QWORD PTR [r14+0x18]
  422ec7:	cmp    rax,QWORD PTR [r14+0x10]
  422ecb:	cmovb  rbx,rax
  422ecf:	mov    rbp,rbx
  422ed2:	mov    rbx,QWORD PTR [rbp+0x0]
  422ed6:	add    rbx,0x18
  422eda:	jmp    422f2c <__ctype_b_loc@plt+0x20c5c>
  422edc:	lea    rcx,[rip+0x72f3]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  422ee3:	cmp    rax,rbx
  422ee6:	je     422f02 <__ctype_b_loc@plt+0x20c32>
  422ee8:	cmp    rax,rdx
  422eeb:	jae    422f02 <__ctype_b_loc@plt+0x20c32>
  422eed:	movsxd rax,DWORD PTR [rax+0x8]
  422ef1:	cmp    rax,0xffffffffffffffff
  422ef5:	je     422f02 <__ctype_b_loc@plt+0x20c32>
  422ef7:	lea    rcx,[rip+0xc9e2]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  422efe:	mov    rcx,QWORD PTR [rcx+rax*8]
  422f02:	lea    rsi,[rip+0x72b9]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  422f09:	lea    rdx,[rip+0x7359]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  422f10:	xor    ebx,ebx
  422f12:	mov    rdi,r14
  422f15:	xor    eax,eax
  422f17:	call   410460 <__ctype_b_loc@plt+0xe190>
  422f1c:	mov    rdi,r14
  422f1f:	mov    esi,0x1
  422f24:	mov    rdx,rax
  422f27:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  422f2c:	mov    rdi,rbx
  422f2f:	call   402070 <remove@plt>
  422f34:	mov    ebp,eax
  422f36:	call   402050 <__errno_location@plt>
  422f3b:	mov    rcx,QWORD PTR [r14+0x10]
  422f3f:	test   ebp,ebp
  422f41:	je     422f85 <__ctype_b_loc@plt+0x20cb5>
  422f43:	mov    ebp,DWORD PTR [rax]
  422f45:	mov    DWORD PTR [rcx+0x8],0x0
  422f4c:	add    rcx,0x10
  422f50:	mov    QWORD PTR [r14+0x10],rcx
  422f54:	mov    edi,ebp
  422f56:	call   4022a0 <strerror@plt>
  422f5b:	lea    rsi,[rip+0x7b1a]        # 42aa7c <__ctype_b_loc@plt+0x287ac>
  422f62:	mov    rdi,r14
  422f65:	mov    rdx,rbx
  422f68:	mov    rcx,rax
  422f6b:	xor    eax,eax
  422f6d:	call   410460 <__ctype_b_loc@plt+0xe190>
  422f72:	mov    rcx,QWORD PTR [r14+0x10]
  422f76:	vcvtsi2sd xmm0,xmm1,ebp
  422f7a:	vmovsd QWORD PTR [rcx],xmm0
  422f7e:	mov    eax,0x3
  422f83:	jmp    422f90 <__ctype_b_loc@plt+0x20cc0>
  422f85:	mov    DWORD PTR [rcx],0x1
  422f8b:	mov    eax,0x1
  422f90:	mov    DWORD PTR [rcx+0x8],eax
  422f93:	add    QWORD PTR [r14+0x10],0x10
  422f98:	add    rsp,0x28
  422f9c:	pop    rbx
  422f9d:	pop    r14
  422f9f:	pop    r15
  422fa1:	pop    rbp
  422fa2:	ret    
  422fa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fad:	nop    DWORD PTR [rax]
  422fb0:	push   rbp
  422fb1:	push   r15
  422fb3:	push   r14
  422fb5:	push   r13
  422fb7:	push   r12
  422fb9:	push   rbx
  422fba:	sub    rsp,0x38
  422fbe:	mov    rbx,rdi
  422fc1:	mov    rdx,QWORD PTR [rdi+0x10]
  422fc5:	mov    rax,QWORD PTR [rdi+0x18]
  422fc9:	cmp    rax,rdx
  422fcc:	lea    r15,[rip+0x6b45]        # 429b18 <__ctype_b_loc@plt+0x27848>
  422fd3:	mov    rbp,r15
  422fd6:	cmovb  rbp,rax
  422fda:	mov    ecx,DWORD PTR [rbp+0x8]
  422fdd:	cmp    ecx,0x4
  422fe0:	je     423048 <__ctype_b_loc@plt+0x20d78>
  422fe2:	cmp    ecx,0x3
  422fe5:	jne    42305b <__ctype_b_loc@plt+0x20d8b>
  422fe7:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  422fec:	lea    rsi,[rip+0x6e2e]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  422ff3:	lea    r14,[rsp+0x10]
  422ff8:	mov    rdi,r14
  422ffb:	mov    al,0x1
  422ffd:	call   402270 <sprintf@plt>
  423002:	mov    rdi,r14
  423005:	call   4020e0 <strlen@plt>
  42300a:	mov    rdi,rbx
  42300d:	mov    rsi,r14
  423010:	mov    rdx,rax
  423013:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  423018:	mov    QWORD PTR [rbp+0x0],rax
  42301c:	mov    DWORD PTR [rbp+0x8],0x4
  423023:	mov    rax,QWORD PTR [rbx+0x20]
  423027:	mov    rcx,QWORD PTR [rax+0x78]
  42302b:	cmp    rcx,QWORD PTR [rax+0x70]
  42302f:	jb     423039 <__ctype_b_loc@plt+0x20d69>
  423031:	mov    rdi,rbx
  423034:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  423039:	mov    rax,QWORD PTR [rbx+0x18]
  42303d:	cmp    rax,QWORD PTR [rbx+0x10]
  423041:	cmovb  r15,rax
  423045:	mov    rbp,r15
  423048:	mov    rax,QWORD PTR [rbp+0x0]
  42304c:	mov    r12,QWORD PTR [rax+0x10]
  423050:	add    rax,0x18
  423054:	mov    QWORD PTR [rsp+0x8],rax
  423059:	jmp    4230b3 <__ctype_b_loc@plt+0x20de3>
  42305b:	lea    rcx,[rip+0x7174]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  423062:	cmp    rax,r15
  423065:	je     423081 <__ctype_b_loc@plt+0x20db1>
  423067:	cmp    rax,rdx
  42306a:	jae    423081 <__ctype_b_loc@plt+0x20db1>
  42306c:	movsxd rax,DWORD PTR [rax+0x8]
  423070:	cmp    rax,0xffffffffffffffff
  423074:	je     423081 <__ctype_b_loc@plt+0x20db1>
  423076:	lea    rcx,[rip+0xc863]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  42307d:	mov    rcx,QWORD PTR [rcx+rax*8]
  423081:	lea    rsi,[rip+0x713a]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  423088:	lea    rdx,[rip+0x71da]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  42308f:	xor    eax,eax
  423091:	mov    QWORD PTR [rsp+0x8],rax
  423096:	mov    rdi,rbx
  423099:	xor    eax,eax
  42309b:	call   410460 <__ctype_b_loc@plt+0xe190>
  4230a0:	mov    rdi,rbx
  4230a3:	mov    esi,0x1
  4230a8:	mov    rdx,rax
  4230ab:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  4230b0:	xor    r12d,r12d
  4230b3:	mov    r13d,0x1
  4230b9:	mov    edx,0x1
  4230be:	mov    rdi,rbx
  4230c1:	mov    esi,0x2
  4230c6:	call   410640 <__ctype_b_loc@plt+0xe370>
  4230cb:	lea    r14,[r12+0x1]
  4230d0:	mov    rbp,rax
  4230d3:	sar    rbp,0x3f
  4230d7:	and    rbp,r14
  4230da:	add    rbp,rax
  4230dd:	mov    rax,rbp
  4230e0:	sar    rax,0x3f
  4230e4:	andn   r15,rax,rbp
  4230e9:	mov    rdi,rbx
  4230ec:	mov    esi,0x3
  4230f1:	mov    rdx,r15
  4230f4:	call   410640 <__ctype_b_loc@plt+0xe370>
  4230f9:	mov    rcx,rax
  4230fc:	sar    rcx,0x3f
  423100:	and    rcx,r14
  423103:	add    rcx,rax
  423106:	mov    rax,rcx
  423109:	sar    rax,0x3f
  42310d:	andn   rax,rax,rcx
  423112:	cmp    r15,0x1
  423116:	cmovle rbp,r13
  42311a:	cmp    rax,r12
  42311d:	cmova  rax,r12
  423121:	xor    r15d,r15d
  423124:	cmp    rax,rbp
  423127:	jl     423287 <__ctype_b_loc@plt+0x20fb7>
  42312d:	mov    r15d,eax
  423130:	sub    r15d,ebp
  423133:	inc    r15d
  423136:	movsxd r12,r15d
  423139:	lea    rcx,[r12+rbp*1]
  42313d:	cmp    rcx,rax
  423140:	jg     423153 <__ctype_b_loc@plt+0x20e83>
  423142:	lea    rsi,[rip+0x76ea]        # 42a833 <__ctype_b_loc@plt+0x28563>
  423149:	mov    rdi,rbx
  42314c:	xor    eax,eax
  42314e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  423153:	lea    rdx,[rip+0x76d9]        # 42a833 <__ctype_b_loc@plt+0x28563>
  42315a:	mov    rdi,rbx
  42315d:	mov    esi,r15d
  423160:	call   41f430 <__ctype_b_loc@plt+0x1d160>
  423165:	test   r15d,r15d
  423168:	jle    423287 <__ctype_b_loc@plt+0x20fb7>
  42316e:	mov    rcx,QWORD PTR [rbx+0x10]
  423172:	lea    rdx,[r12-0x1]
  423177:	mov    eax,r15d
  42317a:	and    eax,0x3
  42317d:	cmp    rdx,0x3
  423181:	jae    423198 <__ctype_b_loc@plt+0x20ec8>
  423183:	xor    edx,edx
  423185:	mov    r8,QWORD PTR [rsp+0x8]
  42318a:	test   rax,rax
  42318d:	jne    423244 <__ctype_b_loc@plt+0x20f74>
  423193:	jmp    423287 <__ctype_b_loc@plt+0x20fb7>
  423198:	mov    r8,QWORD PTR [rsp+0x8]
  42319d:	lea    rsi,[r8+rbp*1]
  4231a1:	sub    r12,rax
  4231a4:	xor    edx,edx
  4231a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231b0:	movzx  edi,BYTE PTR [rsi+rdx*1-0x1]
  4231b5:	vcvtsi2sd xmm0,xmm1,edi
  4231b9:	vmovsd QWORD PTR [rcx],xmm0
  4231bd:	mov    DWORD PTR [rcx+0x8],0x3
  4231c4:	mov    rcx,QWORD PTR [rbx+0x10]
  4231c8:	lea    rdi,[rcx+0x10]
  4231cc:	mov    QWORD PTR [rbx+0x10],rdi
  4231d0:	movzx  edi,BYTE PTR [rsi+rdx*1]
  4231d4:	vcvtsi2sd xmm0,xmm1,edi
  4231d8:	vmovsd QWORD PTR [rcx+0x10],xmm0
  4231dd:	mov    DWORD PTR [rcx+0x18],0x3
  4231e4:	mov    rcx,QWORD PTR [rbx+0x10]
  4231e8:	lea    rdi,[rcx+0x10]
  4231ec:	mov    QWORD PTR [rbx+0x10],rdi
  4231f0:	movzx  edi,BYTE PTR [rsi+rdx*1+0x1]
  4231f5:	vcvtsi2sd xmm0,xmm1,edi
  4231f9:	vmovsd QWORD PTR [rcx+0x10],xmm0
  4231fe:	mov    DWORD PTR [rcx+0x18],0x3
  423205:	mov    rcx,QWORD PTR [rbx+0x10]
  423209:	lea    rdi,[rcx+0x10]
  42320d:	mov    QWORD PTR [rbx+0x10],rdi
  423211:	movzx  edi,BYTE PTR [rsi+rdx*1+0x2]
  423216:	vcvtsi2sd xmm0,xmm1,edi
  42321a:	vmovsd QWORD PTR [rcx+0x10],xmm0
  42321f:	mov    DWORD PTR [rcx+0x18],0x3
  423226:	mov    rcx,QWORD PTR [rbx+0x10]
  42322a:	add    rcx,0x10
  42322e:	mov    QWORD PTR [rbx+0x10],rcx
  423232:	add    rdx,0x4
  423236:	cmp    r12,rdx
  423239:	jne    4231b0 <__ctype_b_loc@plt+0x20ee0>
  42323f:	test   rax,rax
  423242:	je     423287 <__ctype_b_loc@plt+0x20fb7>
  423244:	add    rbp,rdx
  423247:	lea    rdx,[r8+rbp*1]
  42324b:	add    rdx,0xffffffffffffffff
  42324f:	xor    esi,esi
  423251:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42325b:	nop    DWORD PTR [rax+rax*1+0x0]
  423260:	movzx  edi,BYTE PTR [rdx+rsi*1]
  423264:	vcvtsi2sd xmm0,xmm1,edi
  423268:	vmovsd QWORD PTR [rcx],xmm0
  42326c:	mov    DWORD PTR [rcx+0x8],0x3
  423273:	mov    rcx,QWORD PTR [rbx+0x10]
  423277:	add    rcx,0x10
  42327b:	mov    QWORD PTR [rbx+0x10],rcx
  42327f:	inc    rsi
  423282:	cmp    rax,rsi
  423285:	jne    423260 <__ctype_b_loc@plt+0x20f90>
  423287:	mov    eax,r15d
  42328a:	add    rsp,0x38
  42328e:	pop    rbx
  42328f:	pop    r12
  423291:	pop    r13
  423293:	pop    r14
  423295:	pop    r15
  423297:	pop    rbp
  423298:	ret    
  423299:	nop    DWORD PTR [rax+0x0]
  4232a0:	push   rbp
  4232a1:	push   r15
  4232a3:	push   r14
  4232a5:	push   r13
  4232a7:	push   r12
  4232a9:	push   rbx
  4232aa:	sub    rsp,0x2048
  4232b1:	mov    rcx,QWORD PTR [rdi+0x10]
  4232b5:	mov    rax,QWORD PTR [rdi+0x18]
  4232b9:	mov    r13,rcx
  4232bc:	sub    r13,rax
  4232bf:	shr    r13,0x4
  4232c3:	mov    QWORD PTR [rsp+0x40],rdi
  4232c8:	lea    rdx,[rsp+0x48]
  4232cd:	mov    QWORD PTR [rsp+0x30],rdx
  4232d2:	mov    DWORD PTR [rsp+0x38],0x0
  4232da:	test   r13d,r13d
  4232dd:	jle    423537 <__ctype_b_loc@plt+0x21267>
  4232e3:	mov    r14,rdi
  4232e6:	inc    r13d
  4232e9:	mov    r12d,0x1
  4232ef:	lea    r15,[rip+0x6822]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4232f6:	mov    QWORD PTR [rsp+0x10],r13
  4232fb:	nop    DWORD PTR [rax+rax*1+0x0]
  423300:	lea    rbx,[r12-0x1]
  423305:	shl    rbx,0x4
  423309:	add    rax,rbx
  42330c:	cmp    rax,rcx
  42330f:	cmovae rax,r15
  423313:	mov    ecx,DWORD PTR [rax+0x8]
  423316:	cmp    ecx,0x3
  423319:	je     4233fd <__ctype_b_loc@plt+0x2112d>
  42331f:	cmp    ecx,0x4
  423322:	jne    423430 <__ctype_b_loc@plt+0x21160>
  423328:	mov    r15,QWORD PTR [rax]
  42332b:	add    r15,0x18
  42332f:	mov    rdi,r15
  423332:	lea    rsi,[rsp+0x8]
  423337:	call   4020b0 <strtod@plt>
  42333c:	mov    rbp,QWORD PTR [rsp+0x8]
  423341:	cmp    rbp,r15
  423344:	je     4233b3 <__ctype_b_loc@plt+0x210e3>
  423346:	mov    r13b,BYTE PTR [rbp+0x0]
  42334a:	mov    eax,r13d
  42334d:	or     al,0x20
  42334f:	cmp    al,0x78
  423351:	jne    423387 <__ctype_b_loc@plt+0x210b7>
  423353:	mov    rdi,r15
  423356:	lea    rsi,[rsp+0x8]
  42335b:	mov    edx,0x10
  423360:	call   402250 <strtoul@plt>
  423365:	vmovq  xmm0,rax
  42336a:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x68fe]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  423372:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x6906]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  42337a:	vhaddpd xmm0,xmm0,xmm0
  42337e:	mov    rbp,QWORD PTR [rsp+0x8]
  423383:	mov    r13b,BYTE PTR [rbp+0x0]
  423387:	lea    r15,[rip+0x678a]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42338e:	test   r13b,r13b
  423391:	je     4233bc <__ctype_b_loc@plt+0x210ec>
  423393:	vmovapd XMMWORD PTR [rsp+0x20],xmm0
  423399:	call   4022d0 <__ctype_b_loc@plt>
  42339e:	mov    rax,QWORD PTR [rax]
  4233a1:	movzx  ecx,r13b
  4233a5:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4233aa:	jne    4233c3 <__ctype_b_loc@plt+0x210f3>
  4233ac:	mov    r13,QWORD PTR [rsp+0x10]
  4233b1:	jmp    423430 <__ctype_b_loc@plt+0x21160>
  4233b3:	lea    r15,[rip+0x675e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4233ba:	jmp    423430 <__ctype_b_loc@plt+0x21160>
  4233bc:	mov    r13,QWORD PTR [rsp+0x10]
  4233c1:	jmp    4233f2 <__ctype_b_loc@plt+0x21122>
  4233c3:	inc    rbp
  4233c6:	mov    r13,QWORD PTR [rsp+0x10]
  4233cb:	vmovapd xmm0,XMMWORD PTR [rsp+0x20]
  4233d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233db:	nop    DWORD PTR [rax+rax*1+0x0]
  4233e0:	movzx  ecx,BYTE PTR [rbp+0x0]
  4233e4:	inc    rbp
  4233e7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4233ec:	jne    4233e0 <__ctype_b_loc@plt+0x21110>
  4233ee:	test   cl,cl
  4233f0:	jne    423430 <__ctype_b_loc@plt+0x21160>
  4233f2:	vmovsd QWORD PTR [rsp+0x18],xmm0
  4233f8:	lea    rax,[rsp+0x18]
  4233fd:	vcvttsd2si rbp,QWORD PTR [rax]
  423402:	test   rbp,rbp
  423405:	je     423430 <__ctype_b_loc@plt+0x21160>
  423407:	cmp    ebp,0x100
  42340d:	jb     4234bf <__ctype_b_loc@plt+0x211ef>
  423413:	mov    rdi,r14
  423416:	mov    esi,r12d
  423419:	lea    rdx,[rip+0x7429]        # 42a849 <__ctype_b_loc@plt+0x28579>
  423420:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  423425:	jmp    4234bf <__ctype_b_loc@plt+0x211ef>
  42342a:	nop    WORD PTR [rax+rax*1+0x0]
  423430:	add    rbx,QWORD PTR [r14+0x18]
  423434:	cmp    rbx,QWORD PTR [r14+0x10]
  423438:	cmovae rbx,r15
  42343c:	mov    eax,DWORD PTR [rbx+0x8]
  42343f:	cmp    eax,0x3
  423442:	je     4234bd <__ctype_b_loc@plt+0x211ed>
  423444:	cmp    eax,0x4
  423447:	jne    4234ab <__ctype_b_loc@plt+0x211db>
  423449:	mov    r15,QWORD PTR [rbx]
  42344c:	add    r15,0x18
  423450:	mov    rdi,r15
  423453:	lea    rsi,[rsp+0x8]
  423458:	call   4020b0 <strtod@plt>
  42345d:	mov    rbx,QWORD PTR [rsp+0x8]
  423462:	cmp    rbx,r15
  423465:	je     4234a4 <__ctype_b_loc@plt+0x211d4>
  423467:	mov    bpl,BYTE PTR [rbx]
  42346a:	mov    eax,ebp
  42346c:	or     al,0x20
  42346e:	cmp    al,0x78
  423470:	jne    42348c <__ctype_b_loc@plt+0x211bc>
  423472:	mov    rdi,r15
  423475:	lea    rsi,[rsp+0x8]
  42347a:	mov    edx,0x10
  42347f:	call   402250 <strtoul@plt>
  423484:	mov    rbx,QWORD PTR [rsp+0x8]
  423489:	mov    bpl,BYTE PTR [rbx]
  42348c:	test   bpl,bpl
  42348f:	je     423501 <__ctype_b_loc@plt+0x21231>
  423491:	call   4022d0 <__ctype_b_loc@plt>
  423496:	mov    rax,QWORD PTR [rax]
  423499:	movzx  ecx,bpl
  42349d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4234a2:	jne    42350c <__ctype_b_loc@plt+0x2123c>
  4234a4:	lea    r15,[rip+0x666d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4234ab:	mov    rdi,r14
  4234ae:	mov    esi,r12d
  4234b1:	lea    rdx,[rip+0x69e9]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  4234b8:	call   410520 <__ctype_b_loc@plt+0xe250>
  4234bd:	xor    ebp,ebp
  4234bf:	mov    rax,QWORD PTR [rsp+0x30]
  4234c4:	lea    rcx,[rsp+0x2048]
  4234cc:	cmp    rax,rcx
  4234cf:	jb     4234e0 <__ctype_b_loc@plt+0x21210>
  4234d1:	lea    rdi,[rsp+0x30]
  4234d6:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4234db:	mov    rax,QWORD PTR [rsp+0x30]
  4234e0:	lea    rcx,[rax+0x1]
  4234e4:	mov    QWORD PTR [rsp+0x30],rcx
  4234e9:	mov    BYTE PTR [rax],bpl
  4234ec:	inc    r12
  4234ef:	cmp    r12,r13
  4234f2:	je     423537 <__ctype_b_loc@plt+0x21267>
  4234f4:	mov    rcx,QWORD PTR [r14+0x10]
  4234f8:	mov    rax,QWORD PTR [r14+0x18]
  4234fc:	jmp    423300 <__ctype_b_loc@plt+0x21030>
  423501:	xor    ebp,ebp
  423503:	lea    r15,[rip+0x660e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42350a:	jmp    4234bf <__ctype_b_loc@plt+0x211ef>
  42350c:	inc    rbx
  42350f:	lea    r15,[rip+0x6602]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423520:	movzx  ecx,BYTE PTR [rbx]
  423523:	inc    rbx
  423526:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42352b:	jne    423520 <__ctype_b_loc@plt+0x21250>
  42352d:	test   cl,cl
  42352f:	jne    4234ab <__ctype_b_loc@plt+0x211db>
  423535:	jmp    4234bd <__ctype_b_loc@plt+0x211ed>
  423537:	lea    rdi,[rsp+0x30]
  42353c:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  423541:	mov    eax,0x1
  423546:	add    rsp,0x2048
  42354d:	pop    rbx
  42354e:	pop    r12
  423550:	pop    r13
  423552:	pop    r14
  423554:	pop    r15
  423556:	pop    rbp
  423557:	ret    
  423558:	nop    DWORD PTR [rax+rax*1+0x0]
  423560:	mov    esi,0x1
  423565:	jmp    426350 <__ctype_b_loc@plt+0x24080>
  42356a:	nop    WORD PTR [rax+rax*1+0x0]
  423570:	push   rbp
  423571:	push   r15
  423573:	push   r14
  423575:	push   r13
  423577:	push   r12
  423579:	push   rbx
  42357a:	sub    rsp,0x2298
  423581:	mov    rdx,QWORD PTR [rdi+0x10]
  423585:	mov    QWORD PTR [rsp+0x8],rdi
  42358a:	mov    rax,QWORD PTR [rdi+0x18]
  42358e:	mov    rcx,rdx
  423591:	sub    rcx,rax
  423594:	mov    QWORD PTR [rsp+0x70],rcx
  423599:	lea    rbp,[rip+0x6578]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4235a0:	cmova  rbp,rax
  4235a4:	mov    ecx,DWORD PTR [rbp+0x8]
  4235a7:	cmp    ecx,0x4
  4235aa:	je     423622 <__ctype_b_loc@plt+0x21352>
  4235ac:	cmp    ecx,0x3
  4235af:	jne    423635 <__ctype_b_loc@plt+0x21365>
  4235b5:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4235ba:	lea    rsi,[rip+0x6860]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4235c1:	lea    r14,[rsp+0x280]
  4235c9:	mov    rdi,r14
  4235cc:	mov    al,0x1
  4235ce:	call   402270 <sprintf@plt>
  4235d3:	mov    rdi,r14
  4235d6:	call   4020e0 <strlen@plt>
  4235db:	mov    rbx,QWORD PTR [rsp+0x8]
  4235e0:	mov    rdi,rbx
  4235e3:	mov    rsi,r14
  4235e6:	mov    rdx,rax
  4235e9:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4235ee:	mov    QWORD PTR [rbp+0x0],rax
  4235f2:	mov    DWORD PTR [rbp+0x8],0x4
  4235f9:	mov    rax,QWORD PTR [rbx+0x20]
  4235fd:	mov    rcx,QWORD PTR [rax+0x78]
  423601:	cmp    rcx,QWORD PTR [rax+0x70]
  423605:	jb     42360f <__ctype_b_loc@plt+0x2133f>
  423607:	mov    rdi,rbx
  42360a:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42360f:	mov    rbp,QWORD PTR [rbx+0x18]
  423613:	cmp    rbp,QWORD PTR [rbx+0x10]
  423617:	lea    rax,[rip+0x64fa]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42361e:	cmovae rbp,rax
  423622:	mov    r15,QWORD PTR [rbp+0x0]
  423626:	mov    rbx,QWORD PTR [r15+0x10]
  42362a:	add    r15,0x18
  42362e:	mov    rbp,QWORD PTR [rsp+0x8]
  423633:	jmp    42369b <__ctype_b_loc@plt+0x213cb>
  423635:	lea    rcx,[rip+0x6b9a]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  42363c:	lea    rsi,[rip+0x64d5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423643:	cmp    rax,rsi
  423646:	je     423669 <__ctype_b_loc@plt+0x21399>
  423648:	cmp    rax,rdx
  42364b:	mov    rbp,QWORD PTR [rsp+0x8]
  423650:	jae    42366e <__ctype_b_loc@plt+0x2139e>
  423652:	movsxd rax,DWORD PTR [rax+0x8]
  423656:	cmp    rax,0xffffffffffffffff
  42365a:	je     42366e <__ctype_b_loc@plt+0x2139e>
  42365c:	lea    rcx,[rip+0xc27d]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  423663:	mov    rcx,QWORD PTR [rcx+rax*8]
  423667:	jmp    42366e <__ctype_b_loc@plt+0x2139e>
  423669:	mov    rbp,QWORD PTR [rsp+0x8]
  42366e:	lea    rsi,[rip+0x6b4d]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  423675:	lea    rdx,[rip+0x6bed]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  42367c:	xor    r15d,r15d
  42367f:	mov    rdi,rbp
  423682:	xor    eax,eax
  423684:	call   410460 <__ctype_b_loc@plt+0xe190>
  423689:	mov    rdi,rbp
  42368c:	mov    esi,0x1
  423691:	mov    rdx,rax
  423694:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  423699:	xor    ebx,ebx
  42369b:	mov    QWORD PTR [rsp+0x290],rbp
  4236a3:	lea    rax,[rsp+0x298]
  4236ab:	mov    QWORD PTR [rsp+0x280],rax
  4236b3:	mov    DWORD PTR [rsp+0x288],0x0
  4236be:	test   rbx,rbx
  4236c1:	jle    424aff <__ctype_b_loc@plt+0x2282f>
  4236c7:	shr    QWORD PTR [rsp+0x70],0x4
  4236cd:	add    rbx,r15
  4236d0:	lea    r12,[rsp+0x2298]
  4236d8:	lea    rax,[rbp+0x78]
  4236dc:	mov    QWORD PTR [rsp+0x28],rax
  4236e1:	lea    rax,[rbp+0x88]
  4236e8:	mov    QWORD PTR [rsp+0x20],rax
  4236ed:	mov    eax,0x1
  4236f2:	mov    QWORD PTR [rsp+0x18],rax
  4236f7:	lea    r14,[rsp+0x280]
  4236ff:	jmp    42372a <__ctype_b_loc@plt+0x2145a>
  423701:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42370b:	nop    DWORD PTR [rax+rax*1+0x0]
  423710:	inc    r15
  423713:	lea    rdx,[rcx+0x1]
  423717:	mov    QWORD PTR [rsp+0x280],rdx
  42371f:	mov    BYTE PTR [rcx],al
  423721:	cmp    r15,rbx
  423724:	jae    424aff <__ctype_b_loc@plt+0x2282f>
  42372a:	mov    al,BYTE PTR [r15]
  42372d:	cmp    al,0x25
  42372f:	jne    4237b0 <__ctype_b_loc@plt+0x214e0>
  423731:	mov    r14,rbx
  423734:	lea    r13,[r15+0x1]
  423738:	mov    bl,BYTE PTR [r15+0x1]
  42373c:	cmp    bl,0x25
  42373f:	jne    4237e0 <__ctype_b_loc@plt+0x21510>
  423745:	mov    rax,QWORD PTR [rsp+0x280]
  42374d:	mov    cl,0x25
  42374f:	lea    rdx,[rsp+0x2298]
  423757:	cmp    rax,rdx
  42375a:	jb     423775 <__ctype_b_loc@plt+0x214a5>
  42375c:	lea    rdi,[rsp+0x280]
  423764:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  423769:	mov    cl,BYTE PTR [r13+0x0]
  42376d:	mov    rax,QWORD PTR [rsp+0x280]
  423775:	add    r15,0x2
  423779:	lea    rdx,[rax+0x1]
  42377d:	mov    QWORD PTR [rsp+0x280],rdx
  423785:	mov    BYTE PTR [rax],cl
  423787:	mov    rbx,r14
  42378a:	lea    r14,[rsp+0x280]
  423792:	lea    r12,[rsp+0x2298]
  42379a:	cmp    r15,rbx
  42379d:	jb     42372a <__ctype_b_loc@plt+0x2145a>
  42379f:	jmp    424aff <__ctype_b_loc@plt+0x2282f>
  4237a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4237ae:	xchg   ax,ax
  4237b0:	mov    rcx,QWORD PTR [rsp+0x280]
  4237b8:	cmp    rcx,r12
  4237bb:	jb     423710 <__ctype_b_loc@plt+0x21440>
  4237c1:	mov    rdi,r14
  4237c4:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4237c9:	mov    al,BYTE PTR [r15]
  4237cc:	mov    rcx,QWORD PTR [rsp+0x280]
  4237d4:	jmp    423710 <__ctype_b_loc@plt+0x21440>
  4237d9:	nop    DWORD PTR [rax+0x0]
  4237e0:	mov    r12,QWORD PTR [rsp+0x18]
  4237e5:	lea    eax,[r12+0x1]
  4237ea:	mov    DWORD PTR [rsp+0x4],eax
  4237ee:	cmp    r12d,DWORD PTR [rsp+0x70]
  4237f3:	jl     42380c <__ctype_b_loc@plt+0x2153c>
  4237f5:	mov    rdi,rbp
  4237f8:	mov    esi,DWORD PTR [rsp+0x4]
  4237fc:	lea    rdx,[rip+0x69d3]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  423803:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  423808:	mov    bl,BYTE PTR [r13+0x0]
  42380c:	test   bl,bl
  42380e:	mov    ecx,0x1
  423813:	movabs rdx,0x1280900000001
  42381d:	je     42384e <__ctype_b_loc@plt+0x2157e>
  42381f:	mov    rbp,r13
  423822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42382c:	nop    DWORD PTR [rax+0x0]
  423830:	cmp    bl,0x3f
  423833:	ja     423853 <__ctype_b_loc@plt+0x21583>
  423835:	shlx   rax,rcx,rbx
  42383a:	and    rax,rdx
  42383d:	je     423853 <__ctype_b_loc@plt+0x21583>
  42383f:	movzx  ebx,BYTE PTR [rbp+0x1]
  423843:	inc    rbp
  423846:	test   bl,bl
  423848:	jne    423830 <__ctype_b_loc@plt+0x21560>
  42384a:	xor    ebx,ebx
  42384c:	jmp    423853 <__ctype_b_loc@plt+0x21583>
  42384e:	xor    ebx,ebx
  423850:	mov    rbp,r13
  423853:	mov    rax,rbp
  423856:	sub    rax,r13
  423859:	cmp    rax,0x6
  42385d:	jb     423875 <__ctype_b_loc@plt+0x215a5>
  42385f:	mov    rdi,QWORD PTR [rsp+0x8]
  423864:	lea    rsi,[rip+0x70e5]        # 42a950 <__ctype_b_loc@plt+0x28680>
  42386b:	xor    eax,eax
  42386d:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  423872:	mov    bl,BYTE PTR [rbp+0x0]
  423875:	call   4022d0 <__ctype_b_loc@plt>
  42387a:	mov    QWORD PTR [rsp+0x48],rax
  42387f:	mov    rax,QWORD PTR [rax]
  423882:	movzx  ecx,bl
  423885:	lea    rdx,[rbp+0x1]
  423889:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  42388e:	cmove  rdx,rbp
  423892:	movzx  ecx,BYTE PTR [rdx]
  423895:	lea    r15,[rdx+0x1]
  423899:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  42389e:	cmove  r15,rdx
  4238a2:	mov    cl,BYTE PTR [r15]
  4238a5:	cmp    cl,0x2e
  4238a8:	jne    4238df <__ctype_b_loc@plt+0x2160f>
  4238aa:	lea    rcx,[r15+0x1]
  4238ae:	movzx  edx,BYTE PTR [r15+0x1]
  4238b3:	lea    rsi,[r15+0x2]
  4238b7:	xor    edi,edi
  4238b9:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  4238be:	sete   dil
  4238c2:	cmove  rsi,rcx
  4238c6:	neg    rdi
  4238c9:	movzx  ecx,BYTE PTR [r15+rdi*1+0x2]
  4238cf:	lea    r15,[rsi+0x1]
  4238d3:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  4238d8:	cmove  r15,rsi
  4238dc:	mov    cl,BYTE PTR [r15]
  4238df:	mov    rbp,QWORD PTR [rsp+0x8]
  4238e4:	movzx  ecx,cl
  4238e7:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  4238ec:	je     4238ff <__ctype_b_loc@plt+0x2162f>
  4238ee:	mov    rdi,rbp
  4238f1:	lea    rsi,[rip+0x7078]        # 42a970 <__ctype_b_loc@plt+0x286a0>
  4238f8:	xor    eax,eax
  4238fa:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4238ff:	mov    BYTE PTR [rsp+0x30],0x25
  423904:	mov    rbx,r15
  423907:	sub    rbx,r13
  42390a:	lea    rdx,[rbx+0x1]
  42390e:	lea    rdi,[rsp+0x31]
  423913:	mov    rsi,r13
  423916:	call   402060 <strncpy@plt>
  42391b:	mov    BYTE PTR [rsp+rbx*1+0x32],0x0
  423920:	movsx  edx,BYTE PTR [r15]
  423924:	lea    eax,[rdx-0x45]
  423927:	cmp    eax,0x33
  42392a:	ja     424b25 <__ctype_b_loc@plt+0x22855>
  423930:	inc    r15
  423933:	lea    rcx,[rip+0x5ffa]        # 429934 <__ctype_b_loc@plt+0x27664>
  42393a:	movsxd rax,DWORD PTR [rcx+rax*4]
  42393e:	add    rax,rcx
  423941:	jmp    rax
  423943:	mov    rdi,rbp
  423946:	mov    ebx,DWORD PTR [rsp+0x4]
  42394a:	mov    esi,ebx
  42394c:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  423951:	vucomisd xmm0,QWORD PTR [rip+0x6417]        # 429d70 <__ctype_b_loc@plt+0x27aa0>
  423959:	mov    r13,r14
  42395c:	lea    r14,[rsp+0x280]
  423964:	lea    r12,[rsp+0x2298]
  42396c:	jne    423f7e <__ctype_b_loc@plt+0x21cae>
  423972:	jp     423f7e <__ctype_b_loc@plt+0x21cae>
  423978:	mov    rdi,QWORD PTR [rsp+0x18]
  42397d:	test   edi,edi
  42397f:	js     423aa6 <__ctype_b_loc@plt+0x217d6>
  423985:	movsxd rax,edi
  423988:	shl    rax,0x4
  42398c:	add    rax,QWORD PTR [rbp+0x18]
  423990:	cmp    rax,QWORD PTR [rbp+0x10]
  423994:	lea    rcx,[rip+0x617d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42399b:	cmovae rax,rcx
  42399f:	jmp    423ef2 <__ctype_b_loc@plt+0x21c22>
  4239a4:	lea    rdi,[rsp+0x30]
  4239a9:	call   4020e0 <strlen@plt>
  4239ae:	mov    cl,BYTE PTR [rsp+rax*1+0x2f]
  4239b2:	mov    WORD PTR [rsp+rax*1+0x2f],0x6c
  4239b9:	mov    BYTE PTR [rsp+rax*1+0x30],cl
  4239bd:	mov    BYTE PTR [rsp+rax*1+0x31],0x0
  4239c2:	mov    rdi,rbp
  4239c5:	mov    ebx,DWORD PTR [rsp+0x4]
  4239c9:	mov    esi,ebx
  4239cb:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  4239d0:	vmovapd xmm2,xmm0
  4239d4:	vucomisd xmm0,QWORD PTR [rip+0x6394]        # 429d70 <__ctype_b_loc@plt+0x27aa0>
  4239dc:	mov    r13,r14
  4239df:	lea    r14,[rsp+0x280]
  4239e7:	lea    r12,[rsp+0x2298]
  4239ef:	jne    424101 <__ctype_b_loc@plt+0x21e31>
  4239f5:	jp     424101 <__ctype_b_loc@plt+0x21e31>
  4239fb:	mov    rdi,QWORD PTR [rsp+0x18]
  423a00:	test   edi,edi
  423a02:	js     423b7d <__ctype_b_loc@plt+0x218ad>
  423a08:	movsxd rax,edi
  423a0b:	shl    rax,0x4
  423a0f:	add    rax,QWORD PTR [rbp+0x18]
  423a13:	cmp    rax,QWORD PTR [rbp+0x10]
  423a17:	lea    rcx,[rip+0x60fa]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423a1e:	cmovae rax,rcx
  423a22:	jmp    424075 <__ctype_b_loc@plt+0x21da5>
  423a27:	lea    rdi,[rsp+0x30]
  423a2c:	call   4020e0 <strlen@plt>
  423a31:	mov    cl,BYTE PTR [rsp+rax*1+0x2f]
  423a35:	mov    WORD PTR [rsp+rax*1+0x2f],0x6c
  423a3c:	mov    BYTE PTR [rsp+rax*1+0x30],cl
  423a40:	mov    BYTE PTR [rsp+rax*1+0x31],0x0
  423a45:	mov    rdi,rbp
  423a48:	mov    ebx,DWORD PTR [rsp+0x4]
  423a4c:	mov    esi,ebx
  423a4e:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  423a53:	vucomisd xmm0,QWORD PTR [rip+0x6315]        # 429d70 <__ctype_b_loc@plt+0x27aa0>
  423a5b:	mov    r13,r14
  423a5e:	lea    r14,[rsp+0x280]
  423a66:	lea    r12,[rsp+0x2298]
  423a6e:	jne    4242ef <__ctype_b_loc@plt+0x2201f>
  423a74:	jp     4242ef <__ctype_b_loc@plt+0x2201f>
  423a7a:	mov    rdi,QWORD PTR [rsp+0x18]
  423a7f:	test   edi,edi
  423a81:	js     423bcf <__ctype_b_loc@plt+0x218ff>
  423a87:	movsxd rax,edi
  423a8a:	shl    rax,0x4
  423a8e:	add    rax,QWORD PTR [rbp+0x18]
  423a92:	cmp    rax,QWORD PTR [rbp+0x10]
  423a96:	lea    rcx,[rip+0x607b]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423a9d:	cmovae rax,rcx
  423aa1:	jmp    424230 <__ctype_b_loc@plt+0x21f60>
  423aa6:	cmp    edi,0xffffd8f0
  423aac:	jl     423b95 <__ctype_b_loc@plt+0x218c5>
  423ab2:	movsxd rax,ebx
  423ab5:	shl    rax,0x4
  423ab9:	add    rax,QWORD PTR [rbp+0x10]
  423abd:	jmp    423ef2 <__ctype_b_loc@plt+0x21c22>
  423ac2:	mov    rdi,rbp
  423ac5:	mov    ebx,DWORD PTR [rsp+0x4]
  423ac9:	mov    esi,ebx
  423acb:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  423ad0:	vucomisd xmm0,QWORD PTR [rip+0x6298]        # 429d70 <__ctype_b_loc@plt+0x27aa0>
  423ad8:	mov    r13,r14
  423adb:	lea    r14,[rsp+0x280]
  423ae3:	lea    r12,[rsp+0x2298]
  423aeb:	jne    42417a <__ctype_b_loc@plt+0x21eaa>
  423af1:	jp     42417a <__ctype_b_loc@plt+0x21eaa>
  423af7:	mov    rdi,QWORD PTR [rsp+0x18]
  423afc:	test   edi,edi
  423afe:	js     423d13 <__ctype_b_loc@plt+0x21a43>
  423b04:	movsxd rax,edi
  423b07:	shl    rax,0x4
  423b0b:	add    rax,QWORD PTR [rbp+0x18]
  423b0f:	cmp    rax,QWORD PTR [rbp+0x10]
  423b13:	lea    rcx,[rip+0x5ffe]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423b1a:	cmovae rax,rcx
  423b1e:	jmp    423d2a <__ctype_b_loc@plt+0x21a5a>
  423b23:	test   r12d,r12d
  423b26:	js     423c25 <__ctype_b_loc@plt+0x21955>
  423b2c:	movsxd rbx,r12d
  423b2f:	shl    rbx,0x4
  423b33:	add    rbx,QWORD PTR [rbp+0x18]
  423b37:	cmp    rbx,QWORD PTR [rbp+0x10]
  423b3b:	lea    rax,[rip+0x5fd6]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423b42:	cmovae rbx,rax
  423b46:	mov    r13d,DWORD PTR [rsp+0x4]
  423b4b:	jmp    4243df <__ctype_b_loc@plt+0x2210f>
  423b50:	test   r12d,r12d
  423b53:	js     423c47 <__ctype_b_loc@plt+0x21977>
  423b59:	movsxd rbx,r12d
  423b5c:	shl    rbx,0x4
  423b60:	add    rbx,QWORD PTR [rbp+0x18]
  423b64:	cmp    rbx,QWORD PTR [rbp+0x10]
  423b68:	lea    rax,[rip+0x5fa9]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423b6f:	cmovae rbx,rax
  423b73:	mov    r12d,DWORD PTR [rsp+0x4]
  423b78:	jmp    423c64 <__ctype_b_loc@plt+0x21994>
  423b7d:	cmp    edi,0xffffd8f0
  423b83:	jl     423beb <__ctype_b_loc@plt+0x2191b>
  423b85:	movsxd rax,ebx
  423b88:	shl    rax,0x4
  423b8c:	add    rax,QWORD PTR [rbp+0x10]
  423b90:	jmp    424075 <__ctype_b_loc@plt+0x21da5>
  423b95:	mov    rax,QWORD PTR [rsp+0x28]
  423b9a:	cmp    edi,0xffffd8ed
  423ba0:	je     423ef2 <__ctype_b_loc@plt+0x21c22>
  423ba6:	cmp    edi,0xffffd8ee
  423bac:	je     423e96 <__ctype_b_loc@plt+0x21bc6>
  423bb2:	cmp    edi,0xffffd8ef
  423bb8:	jne    423ebd <__ctype_b_loc@plt+0x21bed>
  423bbe:	mov    rax,QWORD PTR [rbp+0x20]
  423bc2:	mov    ecx,0xa0
  423bc7:	add    rax,rcx
  423bca:	jmp    423ef2 <__ctype_b_loc@plt+0x21c22>
  423bcf:	cmp    edi,0xffffd8f0
  423bd5:	jl     423dda <__ctype_b_loc@plt+0x21b0a>
  423bdb:	movsxd rax,ebx
  423bde:	shl    rax,0x4
  423be2:	add    rax,QWORD PTR [rbp+0x10]
  423be6:	jmp    424230 <__ctype_b_loc@plt+0x21f60>
  423beb:	mov    rax,QWORD PTR [rsp+0x28]
  423bf0:	cmp    edi,0xffffd8ed
  423bf6:	je     424075 <__ctype_b_loc@plt+0x21da5>
  423bfc:	cmp    edi,0xffffd8ee
  423c02:	je     424019 <__ctype_b_loc@plt+0x21d49>
  423c08:	cmp    edi,0xffffd8ef
  423c0e:	jne    424040 <__ctype_b_loc@plt+0x21d70>
  423c14:	mov    rax,QWORD PTR [rbp+0x20]
  423c18:	mov    ecx,0xa0
  423c1d:	add    rax,rcx
  423c20:	jmp    424075 <__ctype_b_loc@plt+0x21da5>
  423c25:	cmp    r12d,0xffffd8f0
  423c2c:	mov    r13d,DWORD PTR [rsp+0x4]
  423c31:	jl     423e14 <__ctype_b_loc@plt+0x21b44>
  423c37:	movsxd rbx,r13d
  423c3a:	shl    rbx,0x4
  423c3e:	add    rbx,QWORD PTR [rbp+0x10]
  423c42:	jmp    4243df <__ctype_b_loc@plt+0x2210f>
  423c47:	cmp    r12d,0xffffd8f0
  423c4e:	jl     423e51 <__ctype_b_loc@plt+0x21b81>
  423c54:	mov    r12d,DWORD PTR [rsp+0x4]
  423c59:	movsxd rbx,r12d
  423c5c:	shl    rbx,0x4
  423c60:	add    rbx,QWORD PTR [rbp+0x10]
  423c64:	mov    eax,DWORD PTR [rbx+0x8]
  423c67:	cmp    eax,0x4
  423c6a:	mov    QWORD PTR [rsp+0x78],r14
  423c6f:	je     42480d <__ctype_b_loc@plt+0x2253d>
  423c75:	cmp    eax,0x3
  423c78:	jne    423cf6 <__ctype_b_loc@plt+0x21a26>
  423c7a:	vmovsd xmm0,QWORD PTR [rbx]
  423c7e:	lea    r14,[rsp+0x50]
  423c83:	mov    rdi,r14
  423c86:	lea    rsi,[rip+0x6194]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  423c8d:	mov    al,0x1
  423c8f:	call   402270 <sprintf@plt>
  423c94:	mov    rdi,r14
  423c97:	call   4020e0 <strlen@plt>
  423c9c:	mov    rdi,rbp
  423c9f:	mov    rsi,r14
  423ca2:	mov    rdx,rax
  423ca5:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  423caa:	mov    QWORD PTR [rbx],rax
  423cad:	mov    DWORD PTR [rbx+0x8],0x4
  423cb4:	mov    rax,QWORD PTR [rbp+0x20]
  423cb8:	mov    rcx,QWORD PTR [rax+0x78]
  423cbc:	cmp    rcx,QWORD PTR [rax+0x70]
  423cc0:	jb     423cca <__ctype_b_loc@plt+0x219fa>
  423cc2:	mov    rdi,rbp
  423cc5:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  423cca:	mov    rsi,QWORD PTR [rsp+0x18]
  423ccf:	test   esi,esi
  423cd1:	js     423fc3 <__ctype_b_loc@plt+0x21cf3>
  423cd7:	movsxd rbx,esi
  423cda:	shl    rbx,0x4
  423cde:	add    rbx,QWORD PTR [rbp+0x18]
  423ce2:	cmp    rbx,QWORD PTR [rbp+0x10]
  423ce6:	lea    rax,[rip+0x5e2b]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423ced:	cmovae rbx,rax
  423cf1:	jmp    42480d <__ctype_b_loc@plt+0x2253d>
  423cf6:	mov    rdi,rbp
  423cf9:	mov    esi,r12d
  423cfc:	lea    rdx,[rip+0x6566]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  423d03:	call   410520 <__ctype_b_loc@plt+0xe250>
  423d08:	xor    r13d,r13d
  423d0b:	xor    r14d,r14d
  423d0e:	jmp    424818 <__ctype_b_loc@plt+0x22548>
  423d13:	cmp    edi,0xffffd8f0
  423d19:	jl     423fdf <__ctype_b_loc@plt+0x21d0f>
  423d1f:	movsxd rax,ebx
  423d22:	shl    rax,0x4
  423d26:	add    rax,QWORD PTR [rbp+0x10]
  423d2a:	mov    ecx,DWORD PTR [rax+0x8]
  423d2d:	cmp    ecx,0x3
  423d30:	je     42417a <__ctype_b_loc@plt+0x21eaa>
  423d36:	cmp    ecx,0x4
  423d39:	vmovsd QWORD PTR [rsp+0x10],xmm0
  423d3f:	jne    424163 <__ctype_b_loc@plt+0x21e93>
  423d45:	mov    rbp,QWORD PTR [rax]
  423d48:	add    rbp,0x18
  423d4c:	mov    rdi,rbp
  423d4f:	lea    rsi,[rsp+0x50]
  423d54:	call   4020b0 <strtod@plt>
  423d59:	mov    rax,QWORD PTR [rsp+0x50]
  423d5e:	cmp    rax,rbp
  423d61:	je     42415e <__ctype_b_loc@plt+0x21e8e>
  423d67:	mov    dl,BYTE PTR [rax]
  423d69:	mov    ecx,edx
  423d6b:	or     cl,0x20
  423d6e:	cmp    cl,0x78
  423d71:	jne    423d8c <__ctype_b_loc@plt+0x21abc>
  423d73:	mov    rdi,rbp
  423d76:	lea    rsi,[rsp+0x50]
  423d7b:	mov    edx,0x10
  423d80:	call   402250 <strtoul@plt>
  423d85:	mov    rax,QWORD PTR [rsp+0x50]
  423d8a:	mov    dl,BYTE PTR [rax]
  423d8c:	test   dl,dl
  423d8e:	je     424174 <__ctype_b_loc@plt+0x21ea4>
  423d94:	mov    rcx,QWORD PTR [rsp+0x48]
  423d99:	mov    rcx,QWORD PTR [rcx]
  423d9c:	movzx  edx,dl
  423d9f:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  423da4:	mov    rbp,QWORD PTR [rsp+0x8]
  423da9:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  423daf:	je     424163 <__ctype_b_loc@plt+0x21e93>
  423db5:	inc    rax
  423db8:	nop    DWORD PTR [rax+rax*1+0x0]
  423dc0:	movzx  edx,BYTE PTR [rax]
  423dc3:	inc    rax
  423dc6:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  423dcb:	jne    423dc0 <__ctype_b_loc@plt+0x21af0>
  423dcd:	test   dl,dl
  423dcf:	jne    424163 <__ctype_b_loc@plt+0x21e93>
  423dd5:	jmp    42417a <__ctype_b_loc@plt+0x21eaa>
  423dda:	mov    rax,QWORD PTR [rsp+0x28]
  423ddf:	cmp    edi,0xffffd8ed
  423de5:	je     424230 <__ctype_b_loc@plt+0x21f60>
  423deb:	cmp    edi,0xffffd8ee
  423df1:	je     4241d4 <__ctype_b_loc@plt+0x21f04>
  423df7:	cmp    edi,0xffffd8ef
  423dfd:	jne    4241fb <__ctype_b_loc@plt+0x21f2b>
  423e03:	mov    rax,QWORD PTR [rbp+0x20]
  423e07:	mov    ecx,0xa0
  423e0c:	add    rax,rcx
  423e0f:	jmp    424230 <__ctype_b_loc@plt+0x21f60>
  423e14:	mov    rbx,QWORD PTR [rsp+0x28]
  423e19:	cmp    r12d,0xffffd8ed
  423e20:	je     4243df <__ctype_b_loc@plt+0x2210f>
  423e26:	cmp    r12d,0xffffd8ee
  423e2d:	je     42437f <__ctype_b_loc@plt+0x220af>
  423e33:	cmp    r12d,0xffffd8ef
  423e3a:	jne    4243a6 <__ctype_b_loc@plt+0x220d6>
  423e40:	mov    rbx,QWORD PTR [rbp+0x20]
  423e44:	mov    eax,0xa0
  423e49:	add    rbx,rax
  423e4c:	jmp    4243df <__ctype_b_loc@plt+0x2210f>
  423e51:	mov    rbx,QWORD PTR [rsp+0x28]
  423e56:	cmp    r12d,0xffffd8ed
  423e5d:	mov    r12d,DWORD PTR [rsp+0x4]
  423e62:	je     423c64 <__ctype_b_loc@plt+0x21994>
  423e68:	mov    rdx,QWORD PTR [rsp+0x18]
  423e6d:	cmp    edx,0xffffd8ee
  423e73:	je     4245ee <__ctype_b_loc@plt+0x2231e>
  423e79:	cmp    edx,0xffffd8ef
  423e7f:	jne    424618 <__ctype_b_loc@plt+0x22348>
  423e85:	mov    rbx,QWORD PTR [rbp+0x20]
  423e89:	mov    eax,0xa0
  423e8e:	add    rbx,rax
  423e91:	jmp    423c64 <__ctype_b_loc@plt+0x21994>
  423e96:	mov    rax,QWORD PTR [rbp+0x28]
  423e9a:	mov    rax,QWORD PTR [rax+0x8]
  423e9e:	mov    rax,QWORD PTR [rax]
  423ea1:	mov    rax,QWORD PTR [rax+0x18]
  423ea5:	mov    QWORD PTR [rbp+0x88],rax
  423eac:	mov    DWORD PTR [rbp+0x90],0x5
  423eb6:	mov    rax,QWORD PTR [rsp+0x20]
  423ebb:	jmp    423ef2 <__ctype_b_loc@plt+0x21c22>
  423ebd:	mov    rax,QWORD PTR [rbp+0x28]
  423ec1:	mov    rax,QWORD PTR [rax+0x8]
  423ec5:	mov    rcx,QWORD PTR [rax]
  423ec8:	mov    edx,0xffffd8ed
  423ecd:	sub    edx,edi
  423ecf:	movzx  esi,BYTE PTR [rcx+0xb]
  423ed3:	lea    rax,[rip+0x5c3e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  423eda:	cmp    edx,esi
  423edc:	jg     423ef2 <__ctype_b_loc@plt+0x21c22>
  423ede:	mov    eax,0xffffd8ec
  423ee3:	sub    eax,edi
  423ee5:	cdqe   
  423ee7:	shl    rax,0x4
  423eeb:	add    rax,rcx
  423eee:	add    rax,0x28
  423ef2:	mov    ecx,DWORD PTR [rax+0x8]
  423ef5:	cmp    ecx,0x3
  423ef8:	je     423f7e <__ctype_b_loc@plt+0x21cae>
  423efe:	cmp    ecx,0x4
  423f01:	vmovsd QWORD PTR [rsp+0x10],xmm0
  423f07:	jne    423f67 <__ctype_b_loc@plt+0x21c97>
  423f09:	mov    rbp,QWORD PTR [rax]
  423f0c:	add    rbp,0x18
  423f10:	mov    rdi,rbp
  423f13:	lea    rsi,[rsp+0x50]
  423f18:	call   4020b0 <strtod@plt>
  423f1d:	mov    rax,QWORD PTR [rsp+0x50]
  423f22:	cmp    rax,rbp
  423f25:	je     423f62 <__ctype_b_loc@plt+0x21c92>
  423f27:	mov    dl,BYTE PTR [rax]
  423f29:	mov    ecx,edx
  423f2b:	or     cl,0x20
  423f2e:	cmp    cl,0x78
  423f31:	jne    423f4c <__ctype_b_loc@plt+0x21c7c>
  423f33:	mov    rdi,rbp
  423f36:	lea    rsi,[rsp+0x50]
  423f3b:	mov    edx,0x10
  423f40:	call   402250 <strtoul@plt>
  423f45:	mov    rax,QWORD PTR [rsp+0x50]
  423f4a:	mov    dl,BYTE PTR [rax]
  423f4c:	test   dl,dl
  423f4e:	je     423f78 <__ctype_b_loc@plt+0x21ca8>
  423f50:	mov    rcx,QWORD PTR [rsp+0x48]
  423f55:	mov    rcx,QWORD PTR [rcx]
  423f58:	movzx  edx,dl
  423f5b:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  423f60:	jne    423f9a <__ctype_b_loc@plt+0x21cca>
  423f62:	mov    rbp,QWORD PTR [rsp+0x8]
  423f67:	mov    rdi,rbp
  423f6a:	mov    esi,ebx
  423f6c:	lea    rdx,[rip+0x5f2e]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  423f73:	call   410520 <__ctype_b_loc@plt+0xe250>
  423f78:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  423f7e:	lea    rbx,[rsp+0x80]
  423f86:	mov    rdi,rbx
  423f89:	lea    rsi,[rsp+0x30]
  423f8e:	mov    al,0x1
  423f90:	call   402270 <sprintf@plt>
  423f95:	jmp    42430b <__ctype_b_loc@plt+0x2203b>
  423f9a:	inc    rax
  423f9d:	mov    rbp,QWORD PTR [rsp+0x8]
  423fa2:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  423fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  423fb0:	movzx  edx,BYTE PTR [rax]
  423fb3:	inc    rax
  423fb6:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  423fbb:	jne    423fb0 <__ctype_b_loc@plt+0x21ce0>
  423fbd:	test   dl,dl
  423fbf:	jne    423f67 <__ctype_b_loc@plt+0x21c97>
  423fc1:	jmp    423f7e <__ctype_b_loc@plt+0x21cae>
  423fc3:	cmp    esi,0xffffd8f0
  423fc9:	jl     42419a <__ctype_b_loc@plt+0x21eca>
  423fcf:	movsxd rbx,r12d
  423fd2:	shl    rbx,0x4
  423fd6:	add    rbx,QWORD PTR [rbp+0x10]
  423fda:	jmp    42480d <__ctype_b_loc@plt+0x2253d>
  423fdf:	mov    rax,QWORD PTR [rsp+0x28]
  423fe4:	cmp    edi,0xffffd8ed
  423fea:	je     423d2a <__ctype_b_loc@plt+0x21a5a>
  423ff0:	cmp    edi,0xffffd8ee
  423ff6:	je     42465a <__ctype_b_loc@plt+0x2238a>
  423ffc:	cmp    edi,0xffffd8ef
  424002:	jne    424684 <__ctype_b_loc@plt+0x223b4>
  424008:	mov    rax,QWORD PTR [rbp+0x20]
  42400c:	mov    ecx,0xa0
  424011:	add    rax,rcx
  424014:	jmp    423d2a <__ctype_b_loc@plt+0x21a5a>
  424019:	mov    rax,QWORD PTR [rbp+0x28]
  42401d:	mov    rax,QWORD PTR [rax+0x8]
  424021:	mov    rax,QWORD PTR [rax]
  424024:	mov    rax,QWORD PTR [rax+0x18]
  424028:	mov    QWORD PTR [rbp+0x88],rax
  42402f:	mov    DWORD PTR [rbp+0x90],0x5
  424039:	mov    rax,QWORD PTR [rsp+0x20]
  42403e:	jmp    424075 <__ctype_b_loc@plt+0x21da5>
  424040:	mov    rax,QWORD PTR [rbp+0x28]
  424044:	mov    rax,QWORD PTR [rax+0x8]
  424048:	mov    rcx,QWORD PTR [rax]
  42404b:	mov    edx,0xffffd8ed
  424050:	sub    edx,edi
  424052:	movzx  esi,BYTE PTR [rcx+0xb]
  424056:	lea    rax,[rip+0x5abb]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42405d:	cmp    edx,esi
  42405f:	jg     424075 <__ctype_b_loc@plt+0x21da5>
  424061:	mov    eax,0xffffd8ec
  424066:	sub    eax,edi
  424068:	cdqe   
  42406a:	shl    rax,0x4
  42406e:	add    rax,rcx
  424071:	add    rax,0x28
  424075:	mov    ecx,DWORD PTR [rax+0x8]
  424078:	cmp    ecx,0x3
  42407b:	je     424101 <__ctype_b_loc@plt+0x21e31>
  424081:	cmp    ecx,0x4
  424084:	vmovsd QWORD PTR [rsp+0x10],xmm2
  42408a:	jne    4240ea <__ctype_b_loc@plt+0x21e1a>
  42408c:	mov    rbp,QWORD PTR [rax]
  42408f:	add    rbp,0x18
  424093:	mov    rdi,rbp
  424096:	lea    rsi,[rsp+0x50]
  42409b:	call   4020b0 <strtod@plt>
  4240a0:	mov    rax,QWORD PTR [rsp+0x50]
  4240a5:	cmp    rax,rbp
  4240a8:	je     4240e5 <__ctype_b_loc@plt+0x21e15>
  4240aa:	mov    dl,BYTE PTR [rax]
  4240ac:	mov    ecx,edx
  4240ae:	or     cl,0x20
  4240b1:	cmp    cl,0x78
  4240b4:	jne    4240cf <__ctype_b_loc@plt+0x21dff>
  4240b6:	mov    rdi,rbp
  4240b9:	lea    rsi,[rsp+0x50]
  4240be:	mov    edx,0x10
  4240c3:	call   402250 <strtoul@plt>
  4240c8:	mov    rax,QWORD PTR [rsp+0x50]
  4240cd:	mov    dl,BYTE PTR [rax]
  4240cf:	test   dl,dl
  4240d1:	je     4240fb <__ctype_b_loc@plt+0x21e2b>
  4240d3:	mov    rcx,QWORD PTR [rsp+0x48]
  4240d8:	mov    rcx,QWORD PTR [rcx]
  4240db:	movzx  edx,dl
  4240de:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  4240e3:	jne    424135 <__ctype_b_loc@plt+0x21e65>
  4240e5:	mov    rbp,QWORD PTR [rsp+0x8]
  4240ea:	mov    rdi,rbp
  4240ed:	mov    esi,ebx
  4240ef:	lea    rdx,[rip+0x5dab]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  4240f6:	call   410520 <__ctype_b_loc@plt+0xe250>
  4240fb:	vmovsd xmm2,QWORD PTR [rsp+0x10]
  424101:	vmovsd xmm0,QWORD PTR [rip+0x5c5f]        # 429d68 <__ctype_b_loc@plt+0x27a98>
  424109:	vmovapd xmm1,xmm0
  42410d:	vsubsd xmm0,xmm2,xmm0
  424111:	vcvttsd2si rax,xmm0
  424116:	movabs rcx,0x8000000000000000
  424120:	xor    rax,rcx
  424123:	vcvttsd2si rdx,xmm2
  424128:	vucomisd xmm2,xmm1
  42412c:	cmovae rdx,rax
  424130:	jmp    4242f4 <__ctype_b_loc@plt+0x22024>
  424135:	inc    rax
  424138:	nop    DWORD PTR [rax+rax*1+0x0]
  424140:	movzx  edx,BYTE PTR [rax]
  424143:	inc    rax
  424146:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  42414b:	jne    424140 <__ctype_b_loc@plt+0x21e70>
  42414d:	test   dl,dl
  42414f:	mov    rbp,QWORD PTR [rsp+0x8]
  424154:	vmovsd xmm2,QWORD PTR [rsp+0x10]
  42415a:	jne    4240ea <__ctype_b_loc@plt+0x21e1a>
  42415c:	jmp    424101 <__ctype_b_loc@plt+0x21e31>
  42415e:	mov    rbp,QWORD PTR [rsp+0x8]
  424163:	mov    rdi,rbp
  424166:	mov    esi,ebx
  424168:	lea    rdx,[rip+0x5d32]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  42416f:	call   410520 <__ctype_b_loc@plt+0xe250>
  424174:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  42417a:	vcvttsd2si edx,xmm0
  42417e:	lea    rbx,[rsp+0x80]
  424186:	mov    rdi,rbx
  424189:	lea    rsi,[rsp+0x30]
  42418e:	xor    eax,eax
  424190:	call   402270 <sprintf@plt>
  424195:	jmp    42430b <__ctype_b_loc@plt+0x2203b>
  42419a:	mov    rbx,QWORD PTR [rsp+0x28]
  42419f:	cmp    esi,0xffffd8ed
  4241a5:	je     42480d <__ctype_b_loc@plt+0x2253d>
  4241ab:	cmp    esi,0xffffd8ee
  4241b1:	je     424740 <__ctype_b_loc@plt+0x22470>
  4241b7:	cmp    esi,0xffffd8ef
  4241bd:	jne    4247d6 <__ctype_b_loc@plt+0x22506>
  4241c3:	mov    rbx,QWORD PTR [rbp+0x20]
  4241c7:	mov    eax,0xa0
  4241cc:	add    rbx,rax
  4241cf:	jmp    42480d <__ctype_b_loc@plt+0x2253d>
  4241d4:	mov    rax,QWORD PTR [rbp+0x28]
  4241d8:	mov    rax,QWORD PTR [rax+0x8]
  4241dc:	mov    rax,QWORD PTR [rax]
  4241df:	mov    rax,QWORD PTR [rax+0x18]
  4241e3:	mov    QWORD PTR [rbp+0x88],rax
  4241ea:	mov    DWORD PTR [rbp+0x90],0x5
  4241f4:	mov    rax,QWORD PTR [rsp+0x20]
  4241f9:	jmp    424230 <__ctype_b_loc@plt+0x21f60>
  4241fb:	mov    rax,QWORD PTR [rbp+0x28]
  4241ff:	mov    rax,QWORD PTR [rax+0x8]
  424203:	mov    rcx,QWORD PTR [rax]
  424206:	mov    edx,0xffffd8ed
  42420b:	sub    edx,edi
  42420d:	movzx  esi,BYTE PTR [rcx+0xb]
  424211:	lea    rax,[rip+0x5900]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424218:	cmp    edx,esi
  42421a:	jg     424230 <__ctype_b_loc@plt+0x21f60>
  42421c:	mov    eax,0xffffd8ec
  424221:	sub    eax,edi
  424223:	cdqe   
  424225:	shl    rax,0x4
  424229:	add    rax,rcx
  42422c:	add    rax,0x28
  424230:	mov    ecx,DWORD PTR [rax+0x8]
  424233:	cmp    ecx,0x3
  424236:	je     4242ef <__ctype_b_loc@plt+0x2201f>
  42423c:	cmp    ecx,0x4
  42423f:	vmovsd QWORD PTR [rsp+0x10],xmm0
  424245:	jne    4242d8 <__ctype_b_loc@plt+0x22008>
  42424b:	mov    rbp,QWORD PTR [rax]
  42424e:	add    rbp,0x18
  424252:	mov    rdi,rbp
  424255:	lea    rsi,[rsp+0x50]
  42425a:	call   4020b0 <strtod@plt>
  42425f:	mov    rax,QWORD PTR [rsp+0x50]
  424264:	cmp    rax,rbp
  424267:	je     4242d3 <__ctype_b_loc@plt+0x22003>
  424269:	mov    dl,BYTE PTR [rax]
  42426b:	mov    ecx,edx
  42426d:	or     cl,0x20
  424270:	cmp    cl,0x78
  424273:	jne    42428e <__ctype_b_loc@plt+0x21fbe>
  424275:	mov    rdi,rbp
  424278:	lea    rsi,[rsp+0x50]
  42427d:	mov    edx,0x10
  424282:	call   402250 <strtoul@plt>
  424287:	mov    rax,QWORD PTR [rsp+0x50]
  42428c:	mov    dl,BYTE PTR [rax]
  42428e:	test   dl,dl
  424290:	je     4242e9 <__ctype_b_loc@plt+0x22019>
  424292:	mov    rcx,QWORD PTR [rsp+0x48]
  424297:	mov    rcx,QWORD PTR [rcx]
  42429a:	movzx  edx,dl
  42429d:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  4242a2:	mov    rbp,QWORD PTR [rsp+0x8]
  4242a7:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  4242ad:	je     4242d8 <__ctype_b_loc@plt+0x22008>
  4242af:	inc    rax
  4242b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242bc:	nop    DWORD PTR [rax+0x0]
  4242c0:	movzx  edx,BYTE PTR [rax]
  4242c3:	inc    rax
  4242c6:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  4242cb:	jne    4242c0 <__ctype_b_loc@plt+0x21ff0>
  4242cd:	test   dl,dl
  4242cf:	jne    4242d8 <__ctype_b_loc@plt+0x22008>
  4242d1:	jmp    4242ef <__ctype_b_loc@plt+0x2201f>
  4242d3:	mov    rbp,QWORD PTR [rsp+0x8]
  4242d8:	mov    rdi,rbp
  4242db:	mov    esi,ebx
  4242dd:	lea    rdx,[rip+0x5bbd]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  4242e4:	call   410520 <__ctype_b_loc@plt+0xe250>
  4242e9:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  4242ef:	vcvttsd2si rdx,xmm0
  4242f4:	lea    rbx,[rsp+0x80]
  4242fc:	mov    rdi,rbx
  4242ff:	lea    rsi,[rsp+0x30]
  424304:	xor    eax,eax
  424306:	call   402270 <sprintf@plt>
  42430b:	mov    rdi,rbx
  42430e:	call   4020e0 <strlen@plt>
  424313:	test   rax,rax
  424316:	je     424360 <__ctype_b_loc@plt+0x22090>
  424318:	mov    rbp,rax
  42431b:	xor    ebx,ebx
  42431d:	jmp    42433e <__ctype_b_loc@plt+0x2206e>
  42431f:	nop
  424320:	movzx  ecx,BYTE PTR [rsp+rbx*1+0x80]
  424328:	lea    rdx,[rax+0x1]
  42432c:	mov    QWORD PTR [rsp+0x280],rdx
  424334:	mov    BYTE PTR [rax],cl
  424336:	inc    rbx
  424339:	cmp    rbp,rbx
  42433c:	je     424360 <__ctype_b_loc@plt+0x22090>
  42433e:	mov    rax,QWORD PTR [rsp+0x280]
  424346:	cmp    rax,r12
  424349:	jb     424320 <__ctype_b_loc@plt+0x22050>
  42434b:	mov    rdi,r14
  42434e:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424353:	mov    rax,QWORD PTR [rsp+0x280]
  42435b:	jmp    424320 <__ctype_b_loc@plt+0x22050>
  42435d:	nop    DWORD PTR [rax]
  424360:	mov    eax,DWORD PTR [rsp+0x4]
  424364:	mov    QWORD PTR [rsp+0x18],rax
  424369:	mov    rbp,QWORD PTR [rsp+0x8]
  42436e:	mov    rbx,r13
  424371:	cmp    r15,rbx
  424374:	jb     42372a <__ctype_b_loc@plt+0x2145a>
  42437a:	jmp    424aff <__ctype_b_loc@plt+0x2282f>
  42437f:	mov    rax,QWORD PTR [rbp+0x28]
  424383:	mov    rax,QWORD PTR [rax+0x8]
  424387:	mov    rax,QWORD PTR [rax]
  42438a:	mov    rax,QWORD PTR [rax+0x18]
  42438e:	mov    QWORD PTR [rbp+0x88],rax
  424395:	mov    DWORD PTR [rbp+0x90],0x5
  42439f:	mov    rbx,QWORD PTR [rsp+0x20]
  4243a4:	jmp    4243df <__ctype_b_loc@plt+0x2210f>
  4243a6:	mov    rax,QWORD PTR [rbp+0x28]
  4243aa:	mov    rax,QWORD PTR [rax+0x8]
  4243ae:	mov    rax,QWORD PTR [rax]
  4243b1:	mov    ecx,0xffffd8ed
  4243b6:	sub    ecx,r12d
  4243b9:	movzx  edx,BYTE PTR [rax+0xb]
  4243bd:	lea    rbx,[rip+0x5754]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4243c4:	cmp    ecx,edx
  4243c6:	jg     4243df <__ctype_b_loc@plt+0x2210f>
  4243c8:	mov    ecx,0xffffd8ec
  4243cd:	sub    ecx,r12d
  4243d0:	movsxd rcx,ecx
  4243d3:	shl    rcx,0x4
  4243d7:	lea    rbx,[rax+rcx*1]
  4243db:	add    rbx,0x28
  4243df:	mov    eax,DWORD PTR [rbx+0x8]
  4243e2:	cmp    eax,0x4
  4243e5:	je     42447b <__ctype_b_loc@plt+0x221ab>
  4243eb:	cmp    eax,0x3
  4243ee:	jne    42449b <__ctype_b_loc@plt+0x221cb>
  4243f4:	vmovsd xmm0,QWORD PTR [rbx]
  4243f8:	lea    r12,[rsp+0x50]
  4243fd:	mov    rdi,r12
  424400:	lea    rsi,[rip+0x5a1a]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  424407:	mov    al,0x1
  424409:	call   402270 <sprintf@plt>
  42440e:	mov    rdi,r12
  424411:	call   4020e0 <strlen@plt>
  424416:	mov    rdi,rbp
  424419:	mov    rsi,r12
  42441c:	mov    rdx,rax
  42441f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  424424:	mov    QWORD PTR [rbx],rax
  424427:	mov    DWORD PTR [rbx+0x8],0x4
  42442e:	mov    rax,QWORD PTR [rbp+0x20]
  424432:	mov    rcx,QWORD PTR [rax+0x78]
  424436:	cmp    rcx,QWORD PTR [rax+0x70]
  42443a:	mov    rbx,r14
  42443d:	jb     424447 <__ctype_b_loc@plt+0x22177>
  42443f:	mov    rdi,rbp
  424442:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  424447:	mov    rax,QWORD PTR [rsp+0x18]
  42444c:	test   eax,eax
  42444e:	lea    r14,[rsp+0x280]
  424456:	mov    r13,rbx
  424459:	js     424550 <__ctype_b_loc@plt+0x22280>
  42445f:	movsxd rbx,eax
  424462:	shl    rbx,0x4
  424466:	add    rbx,QWORD PTR [rbp+0x18]
  42446a:	cmp    rbx,QWORD PTR [rbp+0x10]
  42446e:	lea    rax,[rip+0x56a3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424475:	cmovae rbx,rax
  424479:	jmp    424486 <__ctype_b_loc@plt+0x221b6>
  42447b:	mov    r13,r14
  42447e:	lea    r14,[rsp+0x280]
  424486:	lea    r12,[rsp+0x2298]
  42448e:	mov    rbp,QWORD PTR [rbx]
  424491:	mov    rbx,QWORD PTR [rbp+0x10]
  424495:	add    rbp,0x18
  424499:	jmp    4244c4 <__ctype_b_loc@plt+0x221f4>
  42449b:	mov    rdi,rbp
  42449e:	mov    esi,r13d
  4244a1:	lea    rdx,[rip+0x5dc1]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  4244a8:	call   410520 <__ctype_b_loc@plt+0xe250>
  4244ad:	xor    ebp,ebp
  4244af:	xor    ebx,ebx
  4244b1:	mov    r13,r14
  4244b4:	lea    r14,[rsp+0x280]
  4244bc:	lea    r12,[rsp+0x2298]
  4244c4:	lea    rdi,[rsp+0x30]
  4244c9:	mov    esi,0x2e
  4244ce:	call   4020f0 <strchr@plt>
  4244d3:	cmp    rbx,0x64
  4244d7:	jb     424513 <__ctype_b_loc@plt+0x22243>
  4244d9:	test   rax,rax
  4244dc:	jne    424513 <__ctype_b_loc@plt+0x22243>
  4244de:	mov    rdi,QWORD PTR [rsp+0x18]
  4244e3:	test   edi,edi
  4244e5:	js     42452b <__ctype_b_loc@plt+0x2225b>
  4244e7:	movsxd rax,edi
  4244ea:	shl    rax,0x4
  4244ee:	mov    rbp,QWORD PTR [rsp+0x8]
  4244f3:	add    rax,QWORD PTR [rbp+0x18]
  4244f7:	cmp    rax,QWORD PTR [rbp+0x10]
  4244fb:	lea    rcx,[rip+0x5616]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424502:	cmovae rax,rcx
  424506:	mov    rbx,r13
  424509:	mov    r13d,DWORD PTR [rsp+0x4]
  42450e:	jmp    42471e <__ctype_b_loc@plt+0x2244e>
  424513:	lea    rdi,[rsp+0x80]
  42451b:	lea    rsi,[rsp+0x30]
  424520:	mov    rdx,rbp
  424523:	mov    rbx,rdi
  424526:	jmp    424304 <__ctype_b_loc@plt+0x22034>
  42452b:	cmp    edi,0xffffd8f0
  424531:	mov    rbp,QWORD PTR [rsp+0x8]
  424536:	mov    rbx,r13
  424539:	jl     424571 <__ctype_b_loc@plt+0x222a1>
  42453b:	mov    r13d,DWORD PTR [rsp+0x4]
  424540:	movsxd rax,r13d
  424543:	shl    rax,0x4
  424547:	add    rax,QWORD PTR [rbp+0x10]
  42454b:	jmp    42471e <__ctype_b_loc@plt+0x2244e>
  424550:	cmp    eax,0xffffd8f0
  424555:	lea    r12,[rsp+0x2298]
  42455d:	jl     4245b0 <__ctype_b_loc@plt+0x222e0>
  42455f:	movsxd rbx,DWORD PTR [rsp+0x4]
  424564:	shl    rbx,0x4
  424568:	add    rbx,QWORD PTR [rbp+0x10]
  42456c:	jmp    42448e <__ctype_b_loc@plt+0x221be>
  424571:	mov    rax,QWORD PTR [rsp+0x28]
  424576:	cmp    edi,0xffffd8ed
  42457c:	mov    r13d,DWORD PTR [rsp+0x4]
  424581:	je     42471e <__ctype_b_loc@plt+0x2244e>
  424587:	cmp    edi,0xffffd8ee
  42458d:	je     4246c2 <__ctype_b_loc@plt+0x223f2>
  424593:	cmp    edi,0xffffd8ef
  424599:	jne    4246e9 <__ctype_b_loc@plt+0x22419>
  42459f:	mov    rax,QWORD PTR [rbp+0x20]
  4245a3:	mov    ecx,0xa0
  4245a8:	add    rax,rcx
  4245ab:	jmp    42471e <__ctype_b_loc@plt+0x2244e>
  4245b0:	mov    rbx,QWORD PTR [rsp+0x28]
  4245b5:	cmp    eax,0xffffd8ed
  4245ba:	je     42448e <__ctype_b_loc@plt+0x221be>
  4245c0:	mov    rdx,QWORD PTR [rsp+0x18]
  4245c5:	cmp    edx,0xffffd8ee
  4245cb:	je     42476a <__ctype_b_loc@plt+0x2249a>
  4245d1:	cmp    edx,0xffffd8ef
  4245d7:	jne    424794 <__ctype_b_loc@plt+0x224c4>
  4245dd:	mov    rbx,QWORD PTR [rbp+0x20]
  4245e1:	mov    eax,0xa0
  4245e6:	add    rbx,rax
  4245e9:	jmp    42448e <__ctype_b_loc@plt+0x221be>
  4245ee:	mov    rax,QWORD PTR [rbp+0x28]
  4245f2:	mov    rax,QWORD PTR [rax+0x8]
  4245f6:	mov    rax,QWORD PTR [rax]
  4245f9:	mov    rax,QWORD PTR [rax+0x18]
  4245fd:	mov    QWORD PTR [rbp+0x88],rax
  424604:	mov    DWORD PTR [rbp+0x90],0x5
  42460e:	mov    rbx,QWORD PTR [rsp+0x20]
  424613:	jmp    423c64 <__ctype_b_loc@plt+0x21994>
  424618:	mov    rax,QWORD PTR [rbp+0x28]
  42461c:	mov    rax,QWORD PTR [rax+0x8]
  424620:	mov    rax,QWORD PTR [rax]
  424623:	mov    ecx,0xffffd8ed
  424628:	sub    ecx,edx
  42462a:	movzx  edx,BYTE PTR [rax+0xb]
  42462e:	lea    rbx,[rip+0x54e3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424635:	cmp    ecx,edx
  424637:	jg     423c64 <__ctype_b_loc@plt+0x21994>
  42463d:	mov    ecx,0xffffd8ec
  424642:	sub    ecx,DWORD PTR [rsp+0x18]
  424646:	movsxd rcx,ecx
  424649:	shl    rcx,0x4
  42464d:	lea    rbx,[rax+rcx*1]
  424651:	add    rbx,0x28
  424655:	jmp    423c64 <__ctype_b_loc@plt+0x21994>
  42465a:	mov    rax,QWORD PTR [rbp+0x28]
  42465e:	mov    rax,QWORD PTR [rax+0x8]
  424662:	mov    rax,QWORD PTR [rax]
  424665:	mov    rax,QWORD PTR [rax+0x18]
  424669:	mov    QWORD PTR [rbp+0x88],rax
  424670:	mov    DWORD PTR [rbp+0x90],0x5
  42467a:	mov    rax,QWORD PTR [rsp+0x20]
  42467f:	jmp    423d2a <__ctype_b_loc@plt+0x21a5a>
  424684:	mov    rax,QWORD PTR [rbp+0x28]
  424688:	mov    rax,QWORD PTR [rax+0x8]
  42468c:	mov    rcx,QWORD PTR [rax]
  42468f:	mov    edx,0xffffd8ed
  424694:	sub    edx,edi
  424696:	movzx  esi,BYTE PTR [rcx+0xb]
  42469a:	lea    rax,[rip+0x5477]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4246a1:	cmp    edx,esi
  4246a3:	jg     423d2a <__ctype_b_loc@plt+0x21a5a>
  4246a9:	mov    eax,0xffffd8ec
  4246ae:	sub    eax,edi
  4246b0:	cdqe   
  4246b2:	shl    rax,0x4
  4246b6:	add    rax,rcx
  4246b9:	add    rax,0x28
  4246bd:	jmp    423d2a <__ctype_b_loc@plt+0x21a5a>
  4246c2:	mov    rax,QWORD PTR [rbp+0x28]
  4246c6:	mov    rax,QWORD PTR [rax+0x8]
  4246ca:	mov    rax,QWORD PTR [rax]
  4246cd:	mov    rax,QWORD PTR [rax+0x18]
  4246d1:	mov    QWORD PTR [rbp+0x88],rax
  4246d8:	mov    DWORD PTR [rbp+0x90],0x5
  4246e2:	mov    rax,QWORD PTR [rsp+0x20]
  4246e7:	jmp    42471e <__ctype_b_loc@plt+0x2244e>
  4246e9:	mov    rax,QWORD PTR [rbp+0x28]
  4246ed:	mov    rax,QWORD PTR [rax+0x8]
  4246f1:	mov    rcx,QWORD PTR [rax]
  4246f4:	mov    edx,0xffffd8ed
  4246f9:	sub    edx,edi
  4246fb:	movzx  esi,BYTE PTR [rcx+0xb]
  4246ff:	lea    rax,[rip+0x5412]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424706:	cmp    edx,esi
  424708:	jg     42471e <__ctype_b_loc@plt+0x2244e>
  42470a:	mov    eax,0xffffd8ec
  42470f:	sub    eax,edi
  424711:	cdqe   
  424713:	shl    rax,0x4
  424717:	add    rax,rcx
  42471a:	add    rax,0x28
  42471e:	mov    rcx,QWORD PTR [rbp+0x10]
  424722:	mov    rdx,QWORD PTR [rax]
  424725:	mov    QWORD PTR [rcx],rdx
  424728:	mov    eax,DWORD PTR [rax+0x8]
  42472b:	mov    DWORD PTR [rcx+0x8],eax
  42472e:	add    QWORD PTR [rbp+0x10],0x10
  424733:	mov    rdi,r14
  424736:	call   41ec70 <__ctype_b_loc@plt+0x1c9a0>
  42473b:	jmp    424aee <__ctype_b_loc@plt+0x2281e>
  424740:	mov    rax,QWORD PTR [rbp+0x28]
  424744:	mov    rax,QWORD PTR [rax+0x8]
  424748:	mov    rax,QWORD PTR [rax]
  42474b:	mov    rax,QWORD PTR [rax+0x18]
  42474f:	mov    QWORD PTR [rbp+0x88],rax
  424756:	mov    DWORD PTR [rbp+0x90],0x5
  424760:	mov    rbx,QWORD PTR [rsp+0x20]
  424765:	jmp    42480d <__ctype_b_loc@plt+0x2253d>
  42476a:	mov    rax,QWORD PTR [rbp+0x28]
  42476e:	mov    rax,QWORD PTR [rax+0x8]
  424772:	mov    rax,QWORD PTR [rax]
  424775:	mov    rax,QWORD PTR [rax+0x18]
  424779:	mov    QWORD PTR [rbp+0x88],rax
  424780:	mov    DWORD PTR [rbp+0x90],0x5
  42478a:	mov    rbx,QWORD PTR [rsp+0x20]
  42478f:	jmp    42448e <__ctype_b_loc@plt+0x221be>
  424794:	mov    rax,QWORD PTR [rbp+0x28]
  424798:	mov    rax,QWORD PTR [rax+0x8]
  42479c:	mov    rax,QWORD PTR [rax]
  42479f:	mov    ecx,0xffffd8ed
  4247a4:	sub    ecx,edx
  4247a6:	movzx  edx,BYTE PTR [rax+0xb]
  4247aa:	lea    rbx,[rip+0x5367]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4247b1:	cmp    ecx,edx
  4247b3:	jg     42448e <__ctype_b_loc@plt+0x221be>
  4247b9:	mov    ecx,0xffffd8ec
  4247be:	sub    ecx,DWORD PTR [rsp+0x18]
  4247c2:	movsxd rcx,ecx
  4247c5:	shl    rcx,0x4
  4247c9:	lea    rbx,[rax+rcx*1]
  4247cd:	add    rbx,0x28
  4247d1:	jmp    42448e <__ctype_b_loc@plt+0x221be>
  4247d6:	mov    rax,QWORD PTR [rbp+0x28]
  4247da:	mov    rax,QWORD PTR [rax+0x8]
  4247de:	mov    rax,QWORD PTR [rax]
  4247e1:	mov    ecx,0xffffd8ed
  4247e6:	sub    ecx,esi
  4247e8:	movzx  edx,BYTE PTR [rax+0xb]
  4247ec:	lea    rbx,[rip+0x5325]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4247f3:	cmp    ecx,edx
  4247f5:	jg     42480d <__ctype_b_loc@plt+0x2253d>
  4247f7:	mov    ecx,0xffffd8ec
  4247fc:	sub    ecx,esi
  4247fe:	movsxd rcx,ecx
  424801:	shl    rcx,0x4
  424805:	lea    rbx,[rax+rcx*1]
  424809:	add    rbx,0x28
  42480d:	mov    r13,QWORD PTR [rbx]
  424810:	mov    r14,QWORD PTR [r13+0x10]
  424814:	add    r13,0x18
  424818:	mov    rax,QWORD PTR [rsp+0x280]
  424820:	lea    rcx,[rsp+0x2298]
  424828:	cmp    rax,rcx
  42482b:	jb     424842 <__ctype_b_loc@plt+0x22572>
  42482d:	lea    rdi,[rsp+0x280]
  424835:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  42483a:	mov    rax,QWORD PTR [rsp+0x280]
  424842:	lea    rcx,[rax+0x1]
  424846:	mov    QWORD PTR [rsp+0x280],rcx
  42484e:	mov    BYTE PTR [rax],0x22
  424851:	test   r14,r14
  424854:	je     424a9b <__ctype_b_loc@plt+0x227cb>
  42485a:	xor    ebx,ebx
  42485c:	jmp    424880 <__ctype_b_loc@plt+0x225b0>
  42485e:	xchg   ax,ax
  424860:	movzx  ecx,BYTE PTR [r13+rbx*1+0x0]
  424866:	lea    rdx,[rax+0x1]
  42486a:	mov    QWORD PTR [rsp+0x280],rdx
  424872:	mov    BYTE PTR [rax],cl
  424874:	inc    rbx
  424877:	cmp    r14,rbx
  42487a:	je     424a9b <__ctype_b_loc@plt+0x227cb>
  424880:	movzx  eax,BYTE PTR [r13+rbx*1+0x0]
  424886:	movsx  ecx,al
  424889:	cmp    ecx,0x22
  42488c:	ja     424980 <__ctype_b_loc@plt+0x226b0>
  424892:	lea    rdx,[rip+0x516b]        # 429a04 <__ctype_b_loc@plt+0x27734>
  424899:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42489d:	add    rcx,rdx
  4248a0:	jmp    rcx
  4248a2:	mov    rax,QWORD PTR [rsp+0x280]
  4248aa:	lea    r12,[rsp+0x2298]
  4248b2:	cmp    rax,r12
  4248b5:	jb     4248cc <__ctype_b_loc@plt+0x225fc>
  4248b7:	lea    rdi,[rsp+0x280]
  4248bf:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4248c4:	mov    rax,QWORD PTR [rsp+0x280]
  4248cc:	lea    rcx,[rax+0x1]
  4248d0:	mov    QWORD PTR [rsp+0x280],rcx
  4248d8:	mov    BYTE PTR [rax],0x5c
  4248db:	mov    rax,QWORD PTR [rsp+0x280]
  4248e3:	cmp    rax,r12
  4248e6:	jb     4248fd <__ctype_b_loc@plt+0x2262d>
  4248e8:	lea    rdi,[rsp+0x280]
  4248f0:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4248f5:	mov    rax,QWORD PTR [rsp+0x280]
  4248fd:	lea    rcx,[rax+0x1]
  424901:	mov    QWORD PTR [rsp+0x280],rcx
  424909:	mov    BYTE PTR [rax],0x30
  42490c:	mov    rax,QWORD PTR [rsp+0x280]
  424914:	cmp    rax,r12
  424917:	jb     42492e <__ctype_b_loc@plt+0x2265e>
  424919:	lea    rdi,[rsp+0x280]
  424921:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424926:	mov    rax,QWORD PTR [rsp+0x280]
  42492e:	lea    rcx,[rax+0x1]
  424932:	mov    QWORD PTR [rsp+0x280],rcx
  42493a:	mov    BYTE PTR [rax],0x30
  42493d:	mov    rax,QWORD PTR [rsp+0x280]
  424945:	cmp    rax,r12
  424948:	jb     42495f <__ctype_b_loc@plt+0x2268f>
  42494a:	lea    rdi,[rsp+0x280]
  424952:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424957:	mov    rax,QWORD PTR [rsp+0x280]
  42495f:	lea    rcx,[rax+0x1]
  424963:	mov    QWORD PTR [rsp+0x280],rcx
  42496b:	mov    BYTE PTR [rax],0x30
  42496e:	jmp    424874 <__ctype_b_loc@plt+0x225a4>
  424973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42497d:	nop    DWORD PTR [rax]
  424980:	cmp    ecx,0x5c
  424983:	jne    4249e9 <__ctype_b_loc@plt+0x22719>
  424985:	mov    rax,QWORD PTR [rsp+0x280]
  42498d:	lea    rbp,[rsp+0x2298]
  424995:	cmp    rax,rbp
  424998:	jb     4249af <__ctype_b_loc@plt+0x226df>
  42499a:	lea    rdi,[rsp+0x280]
  4249a2:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4249a7:	mov    rax,QWORD PTR [rsp+0x280]
  4249af:	lea    rcx,[rax+0x1]
  4249b3:	mov    QWORD PTR [rsp+0x280],rcx
  4249bb:	mov    BYTE PTR [rax],0x5c
  4249be:	mov    rax,QWORD PTR [rsp+0x280]
  4249c6:	cmp    rax,rbp
  4249c9:	jb     424860 <__ctype_b_loc@plt+0x22590>
  4249cf:	lea    rdi,[rsp+0x280]
  4249d7:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4249dc:	mov    rax,QWORD PTR [rsp+0x280]
  4249e4:	jmp    424860 <__ctype_b_loc@plt+0x22590>
  4249e9:	mov    rcx,QWORD PTR [rsp+0x280]
  4249f1:	lea    rdx,[rsp+0x2298]
  4249f9:	cmp    rcx,rdx
  4249fc:	jb     424a19 <__ctype_b_loc@plt+0x22749>
  4249fe:	lea    rdi,[rsp+0x280]
  424a06:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424a0b:	movzx  eax,BYTE PTR [r13+rbx*1+0x0]
  424a11:	mov    rcx,QWORD PTR [rsp+0x280]
  424a19:	lea    rdx,[rcx+0x1]
  424a1d:	mov    QWORD PTR [rsp+0x280],rdx
  424a25:	mov    BYTE PTR [rcx],al
  424a27:	jmp    424874 <__ctype_b_loc@plt+0x225a4>
  424a2c:	mov    rax,QWORD PTR [rsp+0x280]
  424a34:	lea    rbp,[rsp+0x2298]
  424a3c:	cmp    rax,rbp
  424a3f:	jb     424a56 <__ctype_b_loc@plt+0x22786>
  424a41:	lea    rdi,[rsp+0x280]
  424a49:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424a4e:	mov    rax,QWORD PTR [rsp+0x280]
  424a56:	lea    rcx,[rax+0x1]
  424a5a:	mov    QWORD PTR [rsp+0x280],rcx
  424a62:	mov    BYTE PTR [rax],0x5c
  424a65:	mov    rax,QWORD PTR [rsp+0x280]
  424a6d:	cmp    rax,rbp
  424a70:	jb     424a87 <__ctype_b_loc@plt+0x227b7>
  424a72:	lea    rdi,[rsp+0x280]
  424a7a:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424a7f:	mov    rax,QWORD PTR [rsp+0x280]
  424a87:	lea    rcx,[rax+0x1]
  424a8b:	mov    QWORD PTR [rsp+0x280],rcx
  424a93:	mov    BYTE PTR [rax],0x72
  424a96:	jmp    424874 <__ctype_b_loc@plt+0x225a4>
  424a9b:	mov    rax,QWORD PTR [rsp+0x280]
  424aa3:	lea    rcx,[rsp+0x2298]
  424aab:	cmp    rax,rcx
  424aae:	lea    r14,[rsp+0x280]
  424ab6:	jb     424ac8 <__ctype_b_loc@plt+0x227f8>
  424ab8:	mov    rdi,r14
  424abb:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  424ac0:	mov    rax,QWORD PTR [rsp+0x280]
  424ac8:	lea    rcx,[rax+0x1]
  424acc:	mov    QWORD PTR [rsp+0x280],rcx
  424ad4:	mov    BYTE PTR [rax],0x22
  424ad7:	mov    rbp,QWORD PTR [rsp+0x8]
  424adc:	lea    r12,[rsp+0x2298]
  424ae4:	mov    r13d,DWORD PTR [rsp+0x4]
  424ae9:	mov    rbx,QWORD PTR [rsp+0x78]
  424aee:	mov    eax,r13d
  424af1:	mov    QWORD PTR [rsp+0x18],rax
  424af6:	cmp    r15,rbx
  424af9:	jb     42372a <__ctype_b_loc@plt+0x2145a>
  424aff:	lea    rdi,[rsp+0x280]
  424b07:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  424b0c:	mov    ebx,0x1
  424b11:	mov    eax,ebx
  424b13:	add    rsp,0x2298
  424b1a:	pop    rbx
  424b1b:	pop    r12
  424b1d:	pop    r13
  424b1f:	pop    r14
  424b21:	pop    r15
  424b23:	pop    rbp
  424b24:	ret    
  424b25:	lea    rsi,[rip+0x5e02]        # 42a92e <__ctype_b_loc@plt+0x2865e>
  424b2c:	xor    ebx,ebx
  424b2e:	mov    rdi,rbp
  424b31:	xor    eax,eax
  424b33:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  424b38:	jmp    424b11 <__ctype_b_loc@plt+0x22841>
  424b3a:	nop    WORD PTR [rax+rax*1+0x0]
  424b40:	push   r15
  424b42:	push   r14
  424b44:	push   r12
  424b46:	push   rbx
  424b47:	sub    rsp,0x78
  424b4b:	mov    r12,rdi
  424b4e:	mov    rdx,QWORD PTR [rdi+0x10]
  424b52:	mov    rax,QWORD PTR [rdi+0x18]
  424b56:	cmp    rax,rdx
  424b59:	lea    r15,[rip+0x4fb8]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424b60:	mov    rbx,r15
  424b63:	cmovb  rbx,rax
  424b67:	mov    ecx,DWORD PTR [rbx+0x8]
  424b6a:	cmp    ecx,0x4
  424b6d:	je     424c17 <__ctype_b_loc@plt+0x22947>
  424b73:	cmp    ecx,0x3
  424b76:	jne    424bc9 <__ctype_b_loc@plt+0x228f9>
  424b78:	vmovsd xmm0,QWORD PTR [rbx]
  424b7c:	lea    rsi,[rip+0x529e]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  424b83:	mov    r14,rsp
  424b86:	mov    rdi,r14
  424b89:	mov    al,0x1
  424b8b:	call   402270 <sprintf@plt>
  424b90:	mov    rdi,r14
  424b93:	call   4020e0 <strlen@plt>
  424b98:	mov    rdi,r12
  424b9b:	mov    rsi,r14
  424b9e:	mov    rdx,rax
  424ba1:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  424ba6:	mov    QWORD PTR [rbx],rax
  424ba9:	mov    DWORD PTR [rbx+0x8],0x4
  424bb0:	mov    rax,QWORD PTR [r12+0x20]
  424bb5:	mov    rcx,QWORD PTR [rax+0x78]
  424bb9:	cmp    rcx,QWORD PTR [rax+0x70]
  424bbd:	jb     424c17 <__ctype_b_loc@plt+0x22947>
  424bbf:	mov    rdi,r12
  424bc2:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  424bc7:	jmp    424c17 <__ctype_b_loc@plt+0x22947>
  424bc9:	lea    rcx,[rip+0x5606]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  424bd0:	cmp    rax,r15
  424bd3:	je     424bef <__ctype_b_loc@plt+0x2291f>
  424bd5:	cmp    rax,rdx
  424bd8:	jae    424bef <__ctype_b_loc@plt+0x2291f>
  424bda:	movsxd rax,DWORD PTR [rax+0x8]
  424bde:	cmp    rax,0xffffffffffffffff
  424be2:	je     424bef <__ctype_b_loc@plt+0x2291f>
  424be4:	lea    rcx,[rip+0xacf5]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  424beb:	mov    rcx,QWORD PTR [rcx+rax*8]
  424bef:	lea    rsi,[rip+0x55cc]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  424bf6:	lea    rdx,[rip+0x566c]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  424bfd:	mov    rdi,r12
  424c00:	xor    eax,eax
  424c02:	call   410460 <__ctype_b_loc@plt+0xe190>
  424c07:	mov    rdi,r12
  424c0a:	mov    esi,0x1
  424c0f:	mov    rdx,rax
  424c12:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  424c17:	mov    rsi,QWORD PTR [r12+0x10]
  424c1c:	mov    rax,QWORD PTR [r12+0x18]
  424c21:	lea    rdx,[rax+0x10]
  424c25:	cmp    rdx,rsi
  424c28:	mov    rbx,r15
  424c2b:	cmovb  rbx,rdx
  424c2f:	mov    ecx,DWORD PTR [rbx+0x8]
  424c32:	cmp    ecx,0x4
  424c35:	je     424d66 <__ctype_b_loc@plt+0x22a96>
  424c3b:	cmp    ecx,0x3
  424c3e:	jne    424c98 <__ctype_b_loc@plt+0x229c8>
  424c40:	vmovsd xmm0,QWORD PTR [rbx]
  424c44:	lea    rsi,[rip+0x51d6]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  424c4b:	mov    r14,rsp
  424c4e:	mov    rdi,r14
  424c51:	mov    al,0x1
  424c53:	call   402270 <sprintf@plt>
  424c58:	mov    rdi,r14
  424c5b:	call   4020e0 <strlen@plt>
  424c60:	mov    rdi,r12
  424c63:	mov    rsi,r14
  424c66:	mov    rdx,rax
  424c69:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  424c6e:	mov    QWORD PTR [rbx],rax
  424c71:	mov    DWORD PTR [rbx+0x8],0x4
  424c78:	mov    rax,QWORD PTR [r12+0x20]
  424c7d:	mov    rcx,QWORD PTR [rax+0x78]
  424c81:	cmp    rcx,QWORD PTR [rax+0x70]
  424c85:	jb     424d66 <__ctype_b_loc@plt+0x22a96>
  424c8b:	mov    rdi,r12
  424c8e:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  424c93:	jmp    424d66 <__ctype_b_loc@plt+0x22a96>
  424c98:	lea    rcx,[rip+0x5537]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  424c9f:	cmp    rdx,rsi
  424ca2:	jae    424cbe <__ctype_b_loc@plt+0x229ee>
  424ca4:	cmp    rdx,r15
  424ca7:	je     424cbe <__ctype_b_loc@plt+0x229ee>
  424ca9:	movsxd rax,DWORD PTR [rax+0x18]
  424cad:	cmp    rax,0xffffffffffffffff
  424cb1:	je     424cbe <__ctype_b_loc@plt+0x229ee>
  424cb3:	lea    rcx,[rip+0xac26]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  424cba:	mov    rcx,QWORD PTR [rcx+rax*8]
  424cbe:	lea    rsi,[rip+0x54fd]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  424cc5:	lea    rdx,[rip+0x559d]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  424ccc:	mov    rdi,r12
  424ccf:	xor    eax,eax
  424cd1:	call   410460 <__ctype_b_loc@plt+0xe190>
  424cd6:	mov    r14,rax
  424cd9:	mov    rax,QWORD PTR [r12+0x28]
  424cde:	sub    rax,QWORD PTR [r12+0x50]
  424ce3:	jbe    424d4d <__ctype_b_loc@plt+0x22a7d>
  424ce5:	shr    rax,0x3
  424ce9:	imul   eax,eax,0xcccccccd
  424cef:	mov    DWORD PTR [rsp+0x74],eax
  424cf3:	lea    rsi,[rip+0x515d]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  424cfa:	mov    rdx,rsp
  424cfd:	mov    rdi,r12
  424d00:	call   410000 <__ctype_b_loc@plt+0xdd30>
  424d05:	mov    rdi,QWORD PTR [rsp+0x10]
  424d0a:	lea    rsi,[rip+0x543f]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  424d11:	call   402170 <strcmp@plt>
  424d16:	cmp    eax,0x1
  424d19:	mov    edx,0x2
  424d1e:	sbb    edx,0x0
  424d21:	mov    rcx,QWORD PTR [rsp+0x8]
  424d26:	test   rcx,rcx
  424d29:	jne    424d37 <__ctype_b_loc@plt+0x22a67>
  424d2b:	lea    rcx,[rip+0x5443]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  424d32:	mov    QWORD PTR [rsp+0x8],rcx
  424d37:	lea    rsi,[rip+0x5439]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  424d3e:	mov    rdi,r12
  424d41:	mov    r8,r14
  424d44:	xor    eax,eax
  424d46:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  424d4b:	jmp    424d66 <__ctype_b_loc@plt+0x22a96>
  424d4d:	lea    rsi,[rip+0x53e6]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  424d54:	mov    rdi,r12
  424d57:	mov    edx,0x2
  424d5c:	mov    rcx,r14
  424d5f:	xor    eax,eax
  424d61:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  424d66:	mov    rdx,QWORD PTR [r12+0x10]
  424d6b:	mov    rax,QWORD PTR [r12+0x18]
  424d70:	lea    rcx,[rax+0x20]
  424d74:	cmp    rdx,rcx
  424d77:	jae    424e06 <__ctype_b_loc@plt+0x22b36>
  424d7d:	mov    rsi,rax
  424d80:	sub    rsi,rdx
  424d83:	add    rsi,0x1f
  424d87:	mov    edi,esi
  424d89:	shr    edi,0x4
  424d8c:	inc    edi
  424d8e:	and    rdi,0x7
  424d92:	je     424db0 <__ctype_b_loc@plt+0x22ae0>
  424d94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d9e:	xchg   ax,ax
  424da0:	mov    DWORD PTR [rdx+0x8],0x0
  424da7:	add    rdx,0x10
  424dab:	dec    rdi
  424dae:	jne    424da0 <__ctype_b_loc@plt+0x22ad0>
  424db0:	cmp    rsi,0x70
  424db4:	jb     424e01 <__ctype_b_loc@plt+0x22b31>
  424db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424dc0:	mov    DWORD PTR [rdx+0x8],0x0
  424dc7:	mov    DWORD PTR [rdx+0x18],0x0
  424dce:	mov    DWORD PTR [rdx+0x28],0x0
  424dd5:	mov    DWORD PTR [rdx+0x38],0x0
  424ddc:	mov    DWORD PTR [rdx+0x48],0x0
  424de3:	mov    DWORD PTR [rdx+0x58],0x0
  424dea:	mov    DWORD PTR [rdx+0x68],0x0
  424df1:	mov    DWORD PTR [rdx+0x78],0x0
  424df8:	sub    rdx,0xffffffffffffff80
  424dfc:	cmp    rdx,rcx
  424dff:	jb     424dc0 <__ctype_b_loc@plt+0x22af0>
  424e01:	mov    QWORD PTR [r12+0x10],rdx
  424e06:	mov    QWORD PTR [r12+0x10],rcx
  424e0b:	mov    QWORD PTR [rax+0x20],0x0
  424e13:	mov    DWORD PTR [rax+0x28],0x3
  424e1a:	add    QWORD PTR [r12+0x10],0x10
  424e20:	lea    rsi,[rip+0x25c9]        # 4273f0 <__ctype_b_loc@plt+0x25120>
  424e27:	mov    rdi,r12
  424e2a:	mov    edx,0x3
  424e2f:	call   40b9f0 <__ctype_b_loc@plt+0x9720>
  424e34:	mov    eax,0x1
  424e39:	add    rsp,0x78
  424e3d:	pop    rbx
  424e3e:	pop    r12
  424e40:	pop    r14
  424e42:	pop    r15
  424e44:	ret    
  424e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e4f:	nop
  424e50:	push   rbp
  424e51:	push   r15
  424e53:	push   r14
  424e55:	push   r13
  424e57:	push   r12
  424e59:	push   rbx
  424e5a:	sub    rsp,0x2288
  424e61:	mov    r12,rdi
  424e64:	mov    rdx,QWORD PTR [rdi+0x10]
  424e68:	mov    rax,QWORD PTR [rdi+0x18]
  424e6c:	cmp    rax,rdx
  424e6f:	lea    rbp,[rip+0x4ca2]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424e76:	cmovb  rbp,rax
  424e7a:	mov    ecx,DWORD PTR [rbp+0x8]
  424e7d:	cmp    ecx,0x4
  424e80:	je     424ef5 <__ctype_b_loc@plt+0x22c25>
  424e82:	cmp    ecx,0x3
  424e85:	jne    424f03 <__ctype_b_loc@plt+0x22c33>
  424e87:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  424e8c:	lea    rsi,[rip+0x4f8e]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  424e93:	lea    rbx,[rsp+0x270]
  424e9b:	mov    rdi,rbx
  424e9e:	mov    al,0x1
  424ea0:	call   402270 <sprintf@plt>
  424ea5:	mov    rdi,rbx
  424ea8:	call   4020e0 <strlen@plt>
  424ead:	mov    rdi,r12
  424eb0:	mov    rsi,rbx
  424eb3:	mov    rdx,rax
  424eb6:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  424ebb:	mov    QWORD PTR [rbp+0x0],rax
  424ebf:	mov    DWORD PTR [rbp+0x8],0x4
  424ec6:	mov    rax,QWORD PTR [r12+0x20]
  424ecb:	mov    rcx,QWORD PTR [rax+0x78]
  424ecf:	cmp    rcx,QWORD PTR [rax+0x70]
  424ed3:	jb     424edd <__ctype_b_loc@plt+0x22c0d>
  424ed5:	mov    rdi,r12
  424ed8:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  424edd:	mov    rdx,QWORD PTR [r12+0x10]
  424ee2:	mov    rax,QWORD PTR [r12+0x18]
  424ee7:	cmp    rax,rdx
  424eea:	lea    rbp,[rip+0x4c27]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424ef1:	cmovb  rbp,rax
  424ef5:	mov    r14,QWORD PTR [rbp+0x0]
  424ef9:	mov    r15,QWORD PTR [r14+0x10]
  424efd:	add    r14,0x18
  424f01:	jmp    424f68 <__ctype_b_loc@plt+0x22c98>
  424f03:	lea    rcx,[rip+0x52cc]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  424f0a:	lea    rsi,[rip+0x4c07]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424f11:	cmp    rax,rsi
  424f14:	je     424f30 <__ctype_b_loc@plt+0x22c60>
  424f16:	cmp    rax,rdx
  424f19:	jae    424f30 <__ctype_b_loc@plt+0x22c60>
  424f1b:	movsxd rax,DWORD PTR [rax+0x8]
  424f1f:	cmp    rax,0xffffffffffffffff
  424f23:	je     424f30 <__ctype_b_loc@plt+0x22c60>
  424f25:	lea    rcx,[rip+0xa9b4]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  424f2c:	mov    rcx,QWORD PTR [rcx+rax*8]
  424f30:	lea    rsi,[rip+0x528b]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  424f37:	lea    rdx,[rip+0x532b]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  424f3e:	xor    r14d,r14d
  424f41:	mov    rdi,r12
  424f44:	xor    eax,eax
  424f46:	call   410460 <__ctype_b_loc@plt+0xe190>
  424f4b:	mov    rdi,r12
  424f4e:	mov    esi,0x1
  424f53:	mov    rdx,rax
  424f56:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  424f5b:	mov    rdx,QWORD PTR [r12+0x10]
  424f60:	mov    rax,QWORD PTR [r12+0x18]
  424f65:	xor    r15d,r15d
  424f68:	lea    rsi,[rax+0x10]
  424f6c:	cmp    rsi,rdx
  424f6f:	lea    rbx,[rip+0x4ba2]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424f76:	cmovb  rbx,rsi
  424f7a:	mov    ecx,DWORD PTR [rbx+0x8]
  424f7d:	cmp    ecx,0x4
  424f80:	je     424ff7 <__ctype_b_loc@plt+0x22d27>
  424f82:	cmp    ecx,0x3
  424f85:	jne    425003 <__ctype_b_loc@plt+0x22d33>
  424f87:	vmovsd xmm0,QWORD PTR [rbx]
  424f8b:	lea    rsi,[rip+0x4e8f]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  424f92:	lea    rbp,[rsp+0x270]
  424f9a:	mov    rdi,rbp
  424f9d:	mov    al,0x1
  424f9f:	call   402270 <sprintf@plt>
  424fa4:	mov    rdi,rbp
  424fa7:	call   4020e0 <strlen@plt>
  424fac:	mov    rdi,r12
  424faf:	mov    rsi,rbp
  424fb2:	mov    rdx,rax
  424fb5:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  424fba:	mov    QWORD PTR [rbx],rax
  424fbd:	mov    DWORD PTR [rbx+0x8],0x4
  424fc4:	mov    rax,QWORD PTR [r12+0x20]
  424fc9:	mov    rcx,QWORD PTR [rax+0x78]
  424fcd:	cmp    rcx,QWORD PTR [rax+0x70]
  424fd1:	jb     424fdb <__ctype_b_loc@plt+0x22d0b>
  424fd3:	mov    rdi,r12
  424fd6:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  424fdb:	mov    rdx,QWORD PTR [r12+0x10]
  424fe0:	mov    rax,QWORD PTR [r12+0x18]
  424fe5:	lea    rbx,[rax+0x10]
  424fe9:	cmp    rbx,rdx
  424fec:	lea    rcx,[rip+0x4b25]        # 429b18 <__ctype_b_loc@plt+0x27848>
  424ff3:	cmovae rbx,rcx
  424ff7:	mov    rbp,QWORD PTR [rbx]
  424ffa:	add    rbp,0x18
  424ffe:	jmp    4250f5 <__ctype_b_loc@plt+0x22e25>
  425003:	lea    rcx,[rip+0x51cc]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  42500a:	cmp    rsi,rdx
  42500d:	jae    425030 <__ctype_b_loc@plt+0x22d60>
  42500f:	lea    rdx,[rip+0x4b02]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425016:	cmp    rsi,rdx
  425019:	je     425030 <__ctype_b_loc@plt+0x22d60>
  42501b:	movsxd rax,DWORD PTR [rax+0x18]
  42501f:	cmp    rax,0xffffffffffffffff
  425023:	je     425030 <__ctype_b_loc@plt+0x22d60>
  425025:	lea    rcx,[rip+0xa8b4]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  42502c:	mov    rcx,QWORD PTR [rcx+rax*8]
  425030:	lea    rsi,[rip+0x518b]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  425037:	lea    rdx,[rip+0x522b]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  42503e:	mov    rdi,r12
  425041:	xor    eax,eax
  425043:	call   410460 <__ctype_b_loc@plt+0xe190>
  425048:	mov    rbp,rax
  42504b:	mov    rax,QWORD PTR [r12+0x28]
  425050:	sub    rax,QWORD PTR [r12+0x50]
  425055:	jbe    4250d0 <__ctype_b_loc@plt+0x22e00>
  425057:	shr    rax,0x3
  42505b:	imul   eax,eax,0xcccccccd
  425061:	mov    DWORD PTR [rsp+0x2e4],eax
  425068:	lea    rsi,[rip+0x4de8]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  42506f:	lea    rdx,[rsp+0x270]
  425077:	mov    rdi,r12
  42507a:	call   410000 <__ctype_b_loc@plt+0xdd30>
  42507f:	mov    rdi,QWORD PTR [rsp+0x280]
  425087:	lea    rsi,[rip+0x50c2]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  42508e:	call   402170 <strcmp@plt>
  425093:	cmp    eax,0x1
  425096:	mov    edx,0x2
  42509b:	sbb    edx,0x0
  42509e:	mov    rcx,QWORD PTR [rsp+0x278]
  4250a6:	test   rcx,rcx
  4250a9:	jne    4250ba <__ctype_b_loc@plt+0x22dea>
  4250ab:	lea    rcx,[rip+0x50c3]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  4250b2:	mov    QWORD PTR [rsp+0x278],rcx
  4250ba:	lea    rsi,[rip+0x50b6]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  4250c1:	mov    rdi,r12
  4250c4:	mov    r8,rbp
  4250c7:	xor    eax,eax
  4250c9:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4250ce:	jmp    4250e9 <__ctype_b_loc@plt+0x22e19>
  4250d0:	lea    rsi,[rip+0x5063]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  4250d7:	mov    rdi,r12
  4250da:	mov    edx,0x2
  4250df:	mov    rcx,rbp
  4250e2:	xor    eax,eax
  4250e4:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4250e9:	mov    rdx,QWORD PTR [r12+0x10]
  4250ee:	mov    rax,QWORD PTR [r12+0x18]
  4250f3:	xor    ebp,ebp
  4250f5:	lea    rcx,[rax+0x20]
  4250f9:	xor    ebx,ebx
  4250fb:	cmp    rcx,rdx
  4250fe:	jae    425118 <__ctype_b_loc@plt+0x22e48>
  425100:	lea    rdx,[rip+0x4a11]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425107:	cmp    rcx,rdx
  42510a:	je     425118 <__ctype_b_loc@plt+0x22e48>
  42510c:	mov    eax,DWORD PTR [rax+0x28]
  42510f:	add    eax,0xfffffffd
  425112:	cmp    eax,0x4
  425115:	setb   bl
  425118:	lea    rdx,[r15+0x1]
  42511c:	mov    rdi,r12
  42511f:	mov    esi,0x4
  425124:	call   410640 <__ctype_b_loc@plt+0xe370>
  425129:	mov    QWORD PTR [rsp+0x10],rax
  42512e:	mov    al,BYTE PTR [rbp+0x0]
  425131:	lea    rcx,[rbp+0x1]
  425135:	mov    BYTE PTR [rsp+0xb],al
  425139:	cmp    al,0x5e
  42513b:	cmovne rcx,rbp
  42513f:	mov    QWORD PTR [rsp+0x28],rcx
  425144:	test   bl,bl
  425146:	jne    4251f2 <__ctype_b_loc@plt+0x22f22>
  42514c:	mov    rax,QWORD PTR [r12+0x28]
  425151:	sub    rax,QWORD PTR [r12+0x50]
  425156:	jbe    4251d5 <__ctype_b_loc@plt+0x22f05>
  425158:	shr    rax,0x3
  42515c:	imul   eax,eax,0xcccccccd
  425162:	mov    DWORD PTR [rsp+0x2e4],eax
  425169:	lea    rsi,[rip+0x4ce7]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  425170:	lea    rdx,[rsp+0x270]
  425178:	mov    rdi,r12
  42517b:	call   410000 <__ctype_b_loc@plt+0xdd30>
  425180:	mov    rdi,QWORD PTR [rsp+0x280]
  425188:	lea    rsi,[rip+0x4fc1]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  42518f:	call   402170 <strcmp@plt>
  425194:	cmp    eax,0x1
  425197:	mov    edx,0x3
  42519c:	sbb    edx,0x0
  42519f:	mov    rcx,QWORD PTR [rsp+0x278]
  4251a7:	test   rcx,rcx
  4251aa:	jne    4251bb <__ctype_b_loc@plt+0x22eeb>
  4251ac:	lea    rcx,[rip+0x4fc2]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  4251b3:	mov    QWORD PTR [rsp+0x278],rcx
  4251bb:	lea    rsi,[rip+0x4fb5]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  4251c2:	lea    r8,[rip+0x57d4]        # 42a99d <__ctype_b_loc@plt+0x286cd>
  4251c9:	mov    rdi,r12
  4251cc:	xor    eax,eax
  4251ce:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4251d3:	jmp    4251f2 <__ctype_b_loc@plt+0x22f22>
  4251d5:	lea    rsi,[rip+0x4f5e]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  4251dc:	lea    rcx,[rip+0x57ba]        # 42a99d <__ctype_b_loc@plt+0x286cd>
  4251e3:	mov    rdi,r12
  4251e6:	mov    edx,0x3
  4251eb:	xor    eax,eax
  4251ed:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4251f2:	mov    QWORD PTR [rsp+0x280],r12
  4251fa:	lea    rax,[rsp+0x288]
  425202:	mov    QWORD PTR [rsp+0x270],rax
  42520a:	mov    DWORD PTR [rsp+0x278],0x0
  425215:	mov    QWORD PTR [rsp+0x18],r12
  42521a:	mov    QWORD PTR [rsp+0x60],r12
  42521f:	mov    QWORD PTR [rsp+0x50],r14
  425224:	add    r15,r14
  425227:	mov    QWORD PTR [rsp+0x58],r15
  42522c:	xor    ebx,ebx
  42522e:	lea    r12,[rip+0x48e3]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425235:	mov    rbp,QWORD PTR [rsp+0x10]
  42523a:	cmp    ebx,ebp
  42523c:	jl     42527d <__ctype_b_loc@plt+0x22fad>
  42523e:	jmp    4256c0 <__ctype_b_loc@plt+0x233f0>
  425243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42524d:	nop    DWORD PTR [rax]
  425250:	mov    cl,BYTE PTR [r14]
  425253:	inc    r14
  425256:	lea    rdx,[rax+0x1]
  42525a:	mov    QWORD PTR [rsp+0x270],rdx
  425262:	mov    BYTE PTR [rax],cl
  425264:	mov    r13,r14
  425267:	mov    r14,r13
  42526a:	cmp    BYTE PTR [rsp+0xb],0x5e
  42526f:	je     4256c3 <__ctype_b_loc@plt+0x233f3>
  425275:	cmp    ebx,ebp
  425277:	jge    4256c0 <__ctype_b_loc@plt+0x233f0>
  42527d:	mov    DWORD PTR [rsp+0x68],0x0
  425285:	lea    rdi,[rsp+0x50]
  42528a:	mov    rsi,r14
  42528d:	mov    rdx,QWORD PTR [rsp+0x28]
  425292:	call   426900 <__ctype_b_loc@plt+0x24630>
  425297:	mov    r13,rax
  42529a:	test   rax,rax
  42529d:	je     425667 <__ctype_b_loc@plt+0x23397>
  4252a3:	inc    ebx
  4252a5:	mov    DWORD PTR [rsp+0xc],ebx
  4252a9:	mov    r15,QWORD PTR [rsp+0x60]
  4252ae:	mov    rcx,QWORD PTR [r15+0x10]
  4252b2:	mov    rbx,QWORD PTR [r15+0x18]
  4252b6:	lea    rax,[rbx+0x20]
  4252ba:	cmp    rax,rcx
  4252bd:	jae    4255b0 <__ctype_b_loc@plt+0x232e0>
  4252c3:	cmp    rax,r12
  4252c6:	je     4255b0 <__ctype_b_loc@plt+0x232e0>
  4252cc:	mov    edx,DWORD PTR [rbx+0x28]
  4252cf:	add    edx,0xfffffffd
  4252d2:	cmp    edx,0x3
  4252d5:	ja     4255b0 <__ctype_b_loc@plt+0x232e0>
  4252db:	lea    rsi,[rip+0x47ae]        # 429a90 <__ctype_b_loc@plt+0x277c0>
  4252e2:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  4252e6:	add    rdx,rsi
  4252e9:	jmp    rdx
  4252eb:	vmovsd xmm0,QWORD PTR [rbx+0x20]
  4252f0:	lea    rax,[rsp+0x30]
  4252f5:	mov    rdi,rax
  4252f8:	lea    rsi,[rip+0x4b22]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4252ff:	mov    al,0x1
  425301:	call   402270 <sprintf@plt>
  425306:	lea    rdi,[rsp+0x30]
  42530b:	call   4020e0 <strlen@plt>
  425310:	mov    rdi,r15
  425313:	lea    rsi,[rsp+0x30]
  425318:	mov    rdx,rax
  42531b:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  425320:	mov    QWORD PTR [rbx+0x20],rax
  425324:	mov    DWORD PTR [rbx+0x28],0x4
  42532b:	mov    rax,QWORD PTR [r15+0x20]
  42532f:	mov    rcx,QWORD PTR [rax+0x78]
  425333:	cmp    rcx,QWORD PTR [rax+0x70]
  425337:	jb     425341 <__ctype_b_loc@plt+0x23071>
  425339:	mov    rdi,r15
  42533c:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  425341:	mov    rax,QWORD PTR [r15+0x18]
  425345:	add    rax,0x20
  425349:	cmp    rax,QWORD PTR [r15+0x10]
  42534d:	cmovae rax,r12
  425351:	mov    r12,QWORD PTR [rax]
  425354:	mov    r15,QWORD PTR [r12+0x10]
  425359:	test   r15,r15
  42535c:	je     4256aa <__ctype_b_loc@plt+0x233da>
  425362:	mov    rbx,r13
  425365:	sub    rbx,r14
  425368:	xor    ebp,ebp
  42536a:	mov    QWORD PTR [rsp+0x20],r15
  42536f:	jmp    42539a <__ctype_b_loc@plt+0x230ca>
  425371:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42537b:	nop    DWORD PTR [rax+rax*1+0x0]
  425380:	lea    rdx,[rcx+0x1]
  425384:	mov    QWORD PTR [rsp+0x270],rdx
  42538c:	mov    BYTE PTR [rcx],al
  42538e:	inc    rbp
  425391:	cmp    rbp,r15
  425394:	jae    4254d9 <__ctype_b_loc@plt+0x23209>
  42539a:	mov    al,BYTE PTR [r12+rbp*1+0x18]
  42539f:	cmp    al,0x25
  4253a1:	jne    425400 <__ctype_b_loc@plt+0x23130>
  4253a3:	call   4022d0 <__ctype_b_loc@plt>
  4253a8:	mov    rcx,QWORD PTR [rax]
  4253ab:	movzx  eax,BYTE PTR [r12+rbp*1+0x19]
  4253b1:	inc    rbp
  4253b4:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  4253b9:	jne    425440 <__ctype_b_loc@plt+0x23170>
  4253bf:	mov    rcx,QWORD PTR [rsp+0x270]
  4253c7:	lea    rdx,[rsp+0x2288]
  4253cf:	cmp    rcx,rdx
  4253d2:	jb     4253ee <__ctype_b_loc@plt+0x2311e>
  4253d4:	lea    rdi,[rsp+0x270]
  4253dc:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4253e1:	mov    al,BYTE PTR [r12+rbp*1+0x18]
  4253e6:	mov    rcx,QWORD PTR [rsp+0x270]
  4253ee:	lea    rdx,[rcx+0x1]
  4253f2:	mov    QWORD PTR [rsp+0x270],rdx
  4253fa:	mov    BYTE PTR [rcx],al
  4253fc:	jmp    42538e <__ctype_b_loc@plt+0x230be>
  4253fe:	xchg   ax,ax
  425400:	mov    rcx,QWORD PTR [rsp+0x270]
  425408:	lea    rdx,[rsp+0x2288]
  425410:	cmp    rcx,rdx
  425413:	jb     425380 <__ctype_b_loc@plt+0x230b0>
  425419:	lea    rdi,[rsp+0x270]
  425421:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  425426:	mov    al,BYTE PTR [r12+rbp*1+0x18]
  42542b:	mov    rcx,QWORD PTR [rsp+0x270]
  425433:	jmp    425380 <__ctype_b_loc@plt+0x230b0>
  425438:	nop    DWORD PTR [rax+rax*1+0x0]
  425440:	cmp    al,0x30
  425442:	jne    4254a7 <__ctype_b_loc@plt+0x231d7>
  425444:	test   rbx,rbx
  425447:	je     42538e <__ctype_b_loc@plt+0x230be>
  42544d:	xor    r15d,r15d
  425450:	jmp    42547b <__ctype_b_loc@plt+0x231ab>
  425452:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42545c:	nop    DWORD PTR [rax+0x0]
  425460:	movzx  ecx,BYTE PTR [r14+r15*1]
  425465:	lea    rdx,[rax+0x1]
  425469:	mov    QWORD PTR [rsp+0x270],rdx
  425471:	mov    BYTE PTR [rax],cl
  425473:	inc    r15
  425476:	cmp    rbx,r15
  425479:	je     4254cf <__ctype_b_loc@plt+0x231ff>
  42547b:	mov    rax,QWORD PTR [rsp+0x270]
  425483:	lea    rcx,[rsp+0x2288]
  42548b:	cmp    rax,rcx
  42548e:	jb     425460 <__ctype_b_loc@plt+0x23190>
  425490:	lea    rdi,[rsp+0x270]
  425498:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  42549d:	mov    rax,QWORD PTR [rsp+0x270]
  4254a5:	jmp    425460 <__ctype_b_loc@plt+0x23190>
  4254a7:	movsx  esi,al
  4254aa:	add    esi,0xffffffcf
  4254ad:	lea    rdi,[rsp+0x50]
  4254b2:	mov    rdx,r14
  4254b5:	mov    rcx,r13
  4254b8:	call   4272d0 <__ctype_b_loc@plt+0x25000>
  4254bd:	lea    rdi,[rsp+0x270]
  4254c5:	call   41ec70 <__ctype_b_loc@plt+0x1c9a0>
  4254ca:	jmp    42538e <__ctype_b_loc@plt+0x230be>
  4254cf:	mov    r15,QWORD PTR [rsp+0x20]
  4254d4:	jmp    42538e <__ctype_b_loc@plt+0x230be>
  4254d9:	lea    r12,[rip+0x4638]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4254e0:	mov    rbp,QWORD PTR [rsp+0x10]
  4254e5:	jmp    4256b1 <__ctype_b_loc@plt+0x233e1>
  4254ea:	lea    rdi,[rsp+0x50]
  4254ef:	xor    esi,esi
  4254f1:	mov    rdx,r14
  4254f4:	mov    rcx,r13
  4254f7:	call   4272d0 <__ctype_b_loc@plt+0x25000>
  4254fc:	mov    rcx,QWORD PTR [r15+0x10]
  425500:	mov    rsi,QWORD PTR [r15+0x18]
  425504:	add    rsi,0x20
  425508:	cmp    rsi,rcx
  42550b:	cmovae rsi,r12
  42550f:	add    rcx,0xfffffffffffffff0
  425513:	mov    rdi,r15
  425516:	mov    rdx,rcx
  425519:	call   408610 <__ctype_b_loc@plt+0x6340>
  42551e:	jmp    4255b0 <__ctype_b_loc@plt+0x232e0>
  425523:	mov    rax,QWORD PTR [rbx+0x20]
  425527:	mov    QWORD PTR [rcx],rax
  42552a:	mov    eax,DWORD PTR [rbx+0x28]
  42552d:	mov    DWORD PTR [rcx+0x8],eax
  425530:	add    QWORD PTR [r15+0x10],0x10
  425535:	mov    eax,DWORD PTR [rsp+0x68]
  425539:	test   eax,eax
  42553b:	mov    r12d,eax
  42553e:	mov    ecx,0x1
  425543:	cmove  r12d,ecx
  425547:	test   r14,r14
  42554a:	cmove  r12d,eax
  42554e:	mov    rdi,QWORD PTR [rsp+0x60]
  425553:	mov    esi,r12d
  425556:	lea    rdx,[rip+0x5328]        # 42a885 <__ctype_b_loc@plt+0x285b5>
  42555d:	call   41f430 <__ctype_b_loc@plt+0x1d160>
  425562:	test   r12d,r12d
  425565:	lea    rbx,[rsp+0x50]
  42556a:	jle    425587 <__ctype_b_loc@plt+0x232b7>
  42556c:	xor    ebp,ebp
  42556e:	xchg   ax,ax
  425570:	mov    rdi,rbx
  425573:	mov    esi,ebp
  425575:	mov    rdx,r14
  425578:	mov    rcx,r13
  42557b:	call   4272d0 <__ctype_b_loc@plt+0x25000>
  425580:	inc    ebp
  425582:	cmp    r12d,ebp
  425585:	jne    425570 <__ctype_b_loc@plt+0x232a0>
  425587:	not    r12d
  42558a:	movsxd rsi,r12d
  42558d:	shl    rsi,0x4
  425591:	add    rsi,QWORD PTR [r15+0x10]
  425595:	mov    rdi,r15
  425598:	mov    edx,0x1
  42559d:	call   405020 <__ctype_b_loc@plt+0x2d50>
  4255a2:	lea    r12,[rip+0x456f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4255a9:	mov    rbp,QWORD PTR [rsp+0x10]
  4255ae:	xchg   ax,ax
  4255b0:	mov    rbx,QWORD PTR [r15+0x10]
  4255b4:	movsxd rax,DWORD PTR [rbx-0x8]
  4255b8:	add    rbx,0xfffffffffffffff0
  4255bc:	test   rax,rax
  4255bf:	je     425610 <__ctype_b_loc@plt+0x23340>
  4255c1:	cmp    eax,0x1
  4255c4:	jne    4255cb <__ctype_b_loc@plt+0x232fb>
  4255c6:	cmp    DWORD PTR [rbx],0x0
  4255c9:	je     425610 <__ctype_b_loc@plt+0x23340>
  4255cb:	lea    rdx,[rip+0x4c04]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  4255d2:	cmp    rbx,r12
  4255d5:	mov    ebx,DWORD PTR [rsp+0xc]
  4255d9:	je     4255fa <__ctype_b_loc@plt+0x2332a>
  4255db:	lea    ecx,[rax-0x3]
  4255de:	cmp    ecx,0x2
  4255e1:	jb     42565a <__ctype_b_loc@plt+0x2338a>
  4255e3:	lea    rdx,[rip+0x4bec]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  4255ea:	cmp    eax,0xffffffff
  4255ed:	je     4255fa <__ctype_b_loc@plt+0x2332a>
  4255ef:	lea    rcx,[rip+0xa2ea]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4255f6:	mov    rdx,QWORD PTR [rcx+rax*8]
  4255fa:	mov    rdi,r15
  4255fd:	lea    rsi,[rip+0x53b8]        # 42a9bc <__ctype_b_loc@plt+0x286ec>
  425604:	xor    eax,eax
  425606:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  42560b:	jmp    42565a <__ctype_b_loc@plt+0x2338a>
  42560d:	nop    DWORD PTR [rax]
  425610:	mov    QWORD PTR [r15+0x10],rbx
  425614:	mov    rbp,r13
  425617:	sub    rbp,r14
  42561a:	mov    rax,QWORD PTR [r15+0x20]
  42561e:	mov    rcx,QWORD PTR [rax+0x78]
  425622:	cmp    rcx,QWORD PTR [rax+0x70]
  425626:	jb     425634 <__ctype_b_loc@plt+0x23364>
  425628:	mov    rdi,r15
  42562b:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  425630:	mov    rbx,QWORD PTR [r15+0x10]
  425634:	mov    rdi,r15
  425637:	mov    rsi,r14
  42563a:	mov    rdx,rbp
  42563d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  425642:	mov    QWORD PTR [rbx],rax
  425645:	mov    DWORD PTR [rbx+0x8],0x4
  42564c:	add    QWORD PTR [r15+0x10],0x10
  425651:	mov    rbp,QWORD PTR [rsp+0x10]
  425656:	mov    ebx,DWORD PTR [rsp+0xc]
  42565a:	lea    rdi,[rsp+0x270]
  425662:	call   41ec70 <__ctype_b_loc@plt+0x1c9a0>
  425667:	cmp    r13,r14
  42566a:	ja     425267 <__ctype_b_loc@plt+0x22f97>
  425670:	cmp    r14,QWORD PTR [rsp+0x58]
  425675:	jae    4256c0 <__ctype_b_loc@plt+0x233f0>
  425677:	mov    rax,QWORD PTR [rsp+0x270]
  42567f:	lea    rcx,[rsp+0x2288]
  425687:	cmp    rax,rcx
  42568a:	jb     425250 <__ctype_b_loc@plt+0x22f80>
  425690:	lea    rdi,[rsp+0x270]
  425698:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  42569d:	mov    rax,QWORD PTR [rsp+0x270]
  4256a5:	jmp    425250 <__ctype_b_loc@plt+0x22f80>
  4256aa:	lea    r12,[rip+0x4467]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4256b1:	mov    ebx,DWORD PTR [rsp+0xc]
  4256b5:	cmp    r13,r14
  4256b8:	ja     425267 <__ctype_b_loc@plt+0x22f97>
  4256be:	jmp    425670 <__ctype_b_loc@plt+0x233a0>
  4256c0:	mov    r13,r14
  4256c3:	mov    r15d,ebx
  4256c6:	mov    rbp,QWORD PTR [rsp+0x58]
  4256cb:	sub    rbp,r13
  4256ce:	je     425723 <__ctype_b_loc@plt+0x23453>
  4256d0:	xor    ebx,ebx
  4256d2:	lea    r14,[rsp+0x270]
  4256da:	jmp    4256fc <__ctype_b_loc@plt+0x2342c>
  4256dc:	nop    DWORD PTR [rax+0x0]
  4256e0:	movzx  ecx,BYTE PTR [r13+rbx*1+0x0]
  4256e6:	lea    rdx,[rax+0x1]
  4256ea:	mov    QWORD PTR [rsp+0x270],rdx
  4256f2:	mov    BYTE PTR [rax],cl
  4256f4:	inc    rbx
  4256f7:	cmp    rbp,rbx
  4256fa:	je     425723 <__ctype_b_loc@plt+0x23453>
  4256fc:	mov    rax,QWORD PTR [rsp+0x270]
  425704:	lea    rcx,[rsp+0x2288]
  42570c:	cmp    rax,rcx
  42570f:	jb     4256e0 <__ctype_b_loc@plt+0x23410>
  425711:	mov    rdi,r14
  425714:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  425719:	mov    rax,QWORD PTR [rsp+0x270]
  425721:	jmp    4256e0 <__ctype_b_loc@plt+0x23410>
  425723:	lea    rdi,[rsp+0x270]
  42572b:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  425730:	mov    rcx,QWORD PTR [rsp+0x18]
  425735:	mov    rax,QWORD PTR [rcx+0x10]
  425739:	vcvtsi2sd xmm0,xmm1,r15d
  42573e:	vmovsd QWORD PTR [rax],xmm0
  425742:	mov    DWORD PTR [rax+0x8],0x3
  425749:	add    QWORD PTR [rcx+0x10],0x10
  42574e:	mov    eax,0x2
  425753:	add    rsp,0x2288
  42575a:	pop    rbx
  42575b:	pop    r12
  42575d:	pop    r13
  42575f:	pop    r14
  425761:	pop    r15
  425763:	pop    rbp
  425764:	ret    
  425765:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42576f:	nop
  425770:	push   rbp
  425771:	push   r15
  425773:	push   r14
  425775:	push   r13
  425777:	push   r12
  425779:	push   rbx
  42577a:	sub    rsp,0x2018
  425781:	mov    r15,rdi
  425784:	mov    rdx,QWORD PTR [rdi+0x10]
  425788:	mov    rax,QWORD PTR [rdi+0x18]
  42578c:	cmp    rax,rdx
  42578f:	lea    r12,[rip+0x4382]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425796:	mov    rbx,r12
  425799:	cmovb  rbx,rax
  42579d:	mov    ecx,DWORD PTR [rbx+0x8]
  4257a0:	cmp    ecx,0x4
  4257a3:	je     425807 <__ctype_b_loc@plt+0x23537>
  4257a5:	cmp    ecx,0x3
  4257a8:	jne    425815 <__ctype_b_loc@plt+0x23545>
  4257aa:	vmovsd xmm0,QWORD PTR [rbx]
  4257ae:	lea    rsi,[rip+0x466c]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4257b5:	mov    r14,rsp
  4257b8:	mov    rdi,r14
  4257bb:	mov    al,0x1
  4257bd:	call   402270 <sprintf@plt>
  4257c2:	mov    rdi,r14
  4257c5:	call   4020e0 <strlen@plt>
  4257ca:	mov    rdi,r15
  4257cd:	mov    rsi,r14
  4257d0:	mov    rdx,rax
  4257d3:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4257d8:	mov    QWORD PTR [rbx],rax
  4257db:	mov    DWORD PTR [rbx+0x8],0x4
  4257e2:	mov    rax,QWORD PTR [r15+0x20]
  4257e6:	mov    rcx,QWORD PTR [rax+0x78]
  4257ea:	cmp    rcx,QWORD PTR [rax+0x70]
  4257ee:	jb     4257f8 <__ctype_b_loc@plt+0x23528>
  4257f0:	mov    rdi,r15
  4257f3:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4257f8:	mov    rax,QWORD PTR [r15+0x18]
  4257fc:	cmp    rax,QWORD PTR [r15+0x10]
  425800:	cmovb  r12,rax
  425804:	mov    rbx,r12
  425807:	mov    r12,QWORD PTR [rbx]
  42580a:	mov    r13,QWORD PTR [r12+0x10]
  42580f:	add    r12,0x18
  425813:	jmp    425869 <__ctype_b_loc@plt+0x23599>
  425815:	lea    rcx,[rip+0x49ba]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  42581c:	cmp    rax,r12
  42581f:	je     42583b <__ctype_b_loc@plt+0x2356b>
  425821:	cmp    rax,rdx
  425824:	jae    42583b <__ctype_b_loc@plt+0x2356b>
  425826:	movsxd rax,DWORD PTR [rax+0x8]
  42582a:	cmp    rax,0xffffffffffffffff
  42582e:	je     42583b <__ctype_b_loc@plt+0x2356b>
  425830:	lea    rcx,[rip+0xa0a9]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  425837:	mov    rcx,QWORD PTR [rcx+rax*8]
  42583b:	lea    rsi,[rip+0x4980]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  425842:	lea    rdx,[rip+0x4a20]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  425849:	xor    r12d,r12d
  42584c:	mov    rdi,r15
  42584f:	xor    eax,eax
  425851:	call   410460 <__ctype_b_loc@plt+0xe190>
  425856:	mov    rdi,r15
  425859:	mov    esi,0x1
  42585e:	mov    rdx,rax
  425861:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  425866:	xor    r13d,r13d
  425869:	mov    QWORD PTR [rsp+0x10],r15
  42586e:	lea    rbp,[rsp+0x18]
  425873:	mov    QWORD PTR [rsp],rbp
  425877:	mov    DWORD PTR [rsp+0x8],0x0
  42587f:	test   r13,r13
  425882:	je     4258db <__ctype_b_loc@plt+0x2360b>
  425884:	lea    r15,[rsp+0x2018]
  42588c:	dec    r13
  42588f:	xor    ebx,ebx
  425891:	mov    r14,rsp
  425894:	cmp    rbp,r15
  425897:	jb     4258ac <__ctype_b_loc@plt+0x235dc>
  425899:	nop    DWORD PTR [rax+0x0]
  4258a0:	mov    rdi,r14
  4258a3:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4258a8:	mov    rbp,QWORD PTR [rsp]
  4258ac:	call   4022c0 <__ctype_tolower_loc@plt>
  4258b1:	mov    rax,QWORD PTR [rax]
  4258b4:	movzx  ecx,BYTE PTR [r12+rbx*1]
  4258b9:	movzx  eax,BYTE PTR [rax+rcx*4]
  4258bd:	lea    rcx,[rbp+0x1]
  4258c1:	mov    QWORD PTR [rsp],rcx
  4258c5:	mov    BYTE PTR [rbp+0x0],al
  4258c8:	cmp    r13,rbx
  4258cb:	je     4258db <__ctype_b_loc@plt+0x2360b>
  4258cd:	inc    rbx
  4258d0:	mov    rbp,QWORD PTR [rsp]
  4258d4:	cmp    rbp,r15
  4258d7:	jae    4258a0 <__ctype_b_loc@plt+0x235d0>
  4258d9:	jmp    4258ac <__ctype_b_loc@plt+0x235dc>
  4258db:	mov    rdi,rsp
  4258de:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  4258e3:	mov    eax,0x1
  4258e8:	add    rsp,0x2018
  4258ef:	pop    rbx
  4258f0:	pop    r12
  4258f2:	pop    r13
  4258f4:	pop    r14
  4258f6:	pop    r15
  4258f8:	pop    rbp
  4258f9:	ret    
  4258fa:	nop    WORD PTR [rax+rax*1+0x0]
  425900:	xor    esi,esi
  425902:	jmp    426350 <__ctype_b_loc@plt+0x24080>
  425907:	nop    WORD PTR [rax+rax*1+0x0]
  425910:	push   rbp
  425911:	push   r15
  425913:	push   r14
  425915:	push   r13
  425917:	push   r12
  425919:	push   rbx
  42591a:	sub    rsp,0x2038
  425921:	mov    r15,rdi
  425924:	mov    rdx,QWORD PTR [rdi+0x10]
  425928:	mov    rax,QWORD PTR [rdi+0x18]
  42592c:	cmp    rax,rdx
  42592f:	lea    rbx,[rip+0x41e2]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425936:	mov    rbp,rbx
  425939:	cmovb  rbp,rax
  42593d:	mov    ecx,DWORD PTR [rbp+0x8]
  425940:	cmp    ecx,0x4
  425943:	je     4259b4 <__ctype_b_loc@plt+0x236e4>
  425945:	cmp    ecx,0x3
  425948:	jne    4259c3 <__ctype_b_loc@plt+0x236f3>
  42594a:	mov    r14,rbx
  42594d:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  425952:	lea    rsi,[rip+0x44c8]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  425959:	lea    rbx,[rsp+0x20]
  42595e:	mov    rdi,rbx
  425961:	mov    al,0x1
  425963:	call   402270 <sprintf@plt>
  425968:	mov    rdi,rbx
  42596b:	call   4020e0 <strlen@plt>
  425970:	mov    rdi,r15
  425973:	mov    rsi,rbx
  425976:	mov    rdx,rax
  425979:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42597e:	mov    QWORD PTR [rbp+0x0],rax
  425982:	mov    DWORD PTR [rbp+0x8],0x4
  425989:	mov    rax,QWORD PTR [r15+0x20]
  42598d:	mov    rcx,QWORD PTR [rax+0x78]
  425991:	cmp    rcx,QWORD PTR [rax+0x70]
  425995:	jb     42599f <__ctype_b_loc@plt+0x236cf>
  425997:	mov    rdi,r15
  42599a:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42599f:	mov    rdx,QWORD PTR [r15+0x10]
  4259a3:	mov    rax,QWORD PTR [r15+0x18]
  4259a7:	cmp    rax,rdx
  4259aa:	mov    rbx,r14
  4259ad:	mov    rbp,r14
  4259b0:	cmovb  rbp,rax
  4259b4:	mov    r12,QWORD PTR [rbp+0x0]
  4259b8:	mov    r13,QWORD PTR [r12+0x10]
  4259bd:	add    r12,0x18
  4259c1:	jmp    425a1f <__ctype_b_loc@plt+0x2374f>
  4259c3:	lea    rcx,[rip+0x480c]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  4259ca:	cmp    rax,rbx
  4259cd:	je     4259e9 <__ctype_b_loc@plt+0x23719>
  4259cf:	cmp    rax,rdx
  4259d2:	jae    4259e9 <__ctype_b_loc@plt+0x23719>
  4259d4:	movsxd rax,DWORD PTR [rax+0x8]
  4259d8:	cmp    rax,0xffffffffffffffff
  4259dc:	je     4259e9 <__ctype_b_loc@plt+0x23719>
  4259de:	lea    rcx,[rip+0x9efb]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  4259e5:	mov    rcx,QWORD PTR [rcx+rax*8]
  4259e9:	lea    rsi,[rip+0x47d2]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  4259f0:	lea    rdx,[rip+0x4872]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  4259f7:	xor    r12d,r12d
  4259fa:	mov    rdi,r15
  4259fd:	xor    eax,eax
  4259ff:	call   410460 <__ctype_b_loc@plt+0xe190>
  425a04:	mov    rdi,r15
  425a07:	mov    esi,0x1
  425a0c:	mov    rdx,rax
  425a0f:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  425a14:	mov    rdx,QWORD PTR [r15+0x10]
  425a18:	mov    rax,QWORD PTR [r15+0x18]
  425a1c:	xor    r13d,r13d
  425a1f:	add    rax,0x10
  425a23:	cmp    rax,rdx
  425a26:	cmovae rax,rbx
  425a2a:	mov    ecx,DWORD PTR [rax+0x8]
  425a2d:	cmp    ecx,0x3
  425a30:	je     425aed <__ctype_b_loc@plt+0x2381d>
  425a36:	cmp    ecx,0x4
  425a39:	jne    425b04 <__ctype_b_loc@plt+0x23834>
  425a3f:	mov    rbx,QWORD PTR [rax]
  425a42:	add    rbx,0x18
  425a46:	lea    rsi,[rsp+0x20]
  425a4b:	mov    rdi,rbx
  425a4e:	call   4020b0 <strtod@plt>
  425a53:	mov    rbp,QWORD PTR [rsp+0x20]
  425a58:	cmp    rbp,rbx
  425a5b:	je     425afd <__ctype_b_loc@plt+0x2382d>
  425a61:	mov    r14b,BYTE PTR [rbp+0x0]
  425a65:	mov    eax,r14d
  425a68:	or     al,0x20
  425a6a:	cmp    al,0x78
  425a6c:	jne    425aa2 <__ctype_b_loc@plt+0x237d2>
  425a6e:	lea    rsi,[rsp+0x20]
  425a73:	mov    rdi,rbx
  425a76:	mov    edx,0x10
  425a7b:	call   402250 <strtoul@plt>
  425a80:	vmovq  xmm0,rax
  425a85:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x41e3]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  425a8d:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x41eb]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  425a95:	vhaddpd xmm0,xmm0,xmm0
  425a99:	mov    rbp,QWORD PTR [rsp+0x20]
  425a9e:	mov    r14b,BYTE PTR [rbp+0x0]
  425aa2:	lea    rbx,[rip+0x406f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425aa9:	test   r14b,r14b
  425aac:	je     425ae2 <__ctype_b_loc@plt+0x23812>
  425aae:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  425ab4:	call   4022d0 <__ctype_b_loc@plt>
  425ab9:	mov    rax,QWORD PTR [rax]
  425abc:	movzx  ecx,r14b
  425ac0:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425ac5:	je     425b04 <__ctype_b_loc@plt+0x23834>
  425ac7:	inc    rbp
  425aca:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  425ad0:	movzx  ecx,BYTE PTR [rbp+0x0]
  425ad4:	inc    rbp
  425ad7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425adc:	jne    425ad0 <__ctype_b_loc@plt+0x23800>
  425ade:	test   cl,cl
  425ae0:	jne    425b04 <__ctype_b_loc@plt+0x23834>
  425ae2:	lea    rax,[rsp+0x8]
  425ae7:	vmovsd QWORD PTR [rsp+0x8],xmm0
  425aed:	vcvttsd2si r14,QWORD PTR [rax]
  425af2:	test   r14,r14
  425af5:	jne    425c6f <__ctype_b_loc@plt+0x2399f>
  425afb:	jmp    425b04 <__ctype_b_loc@plt+0x23834>
  425afd:	lea    rbx,[rip+0x4014]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425b04:	mov    rax,QWORD PTR [r15+0x18]
  425b08:	add    rax,0x10
  425b0c:	cmp    rax,QWORD PTR [r15+0x10]
  425b10:	cmovae rax,rbx
  425b14:	mov    ecx,DWORD PTR [rax+0x8]
  425b17:	cmp    ecx,0x3
  425b1a:	je     425c6c <__ctype_b_loc@plt+0x2399c>
  425b20:	cmp    ecx,0x4
  425b23:	jne    425b92 <__ctype_b_loc@plt+0x238c2>
  425b25:	mov    rbx,QWORD PTR [rax]
  425b28:	add    rbx,0x18
  425b2c:	lea    rsi,[rsp+0x20]
  425b31:	mov    rdi,rbx
  425b34:	call   4020b0 <strtod@plt>
  425b39:	mov    rbp,QWORD PTR [rsp+0x20]
  425b3e:	cmp    rbp,rbx
  425b41:	je     425b8b <__ctype_b_loc@plt+0x238bb>
  425b43:	mov    r14b,BYTE PTR [rbp+0x0]
  425b47:	mov    eax,r14d
  425b4a:	or     al,0x20
  425b4c:	cmp    al,0x78
  425b4e:	jne    425b6b <__ctype_b_loc@plt+0x2389b>
  425b50:	lea    rsi,[rsp+0x20]
  425b55:	mov    rdi,rbx
  425b58:	mov    edx,0x10
  425b5d:	call   402250 <strtoul@plt>
  425b62:	mov    rbp,QWORD PTR [rsp+0x20]
  425b67:	mov    r14b,BYTE PTR [rbp+0x0]
  425b6b:	test   r14b,r14b
  425b6e:	je     425c6c <__ctype_b_loc@plt+0x2399c>
  425b74:	call   4022d0 <__ctype_b_loc@plt>
  425b79:	mov    rax,QWORD PTR [rax]
  425b7c:	movzx  ecx,r14b
  425b80:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425b85:	jne    425d12 <__ctype_b_loc@plt+0x23a42>
  425b8b:	lea    rbx,[rip+0x3f86]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425b92:	mov    rax,QWORD PTR [r15+0x18]
  425b96:	lea    rdx,[rax+0x10]
  425b9a:	lea    rcx,[rip+0x4635]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  425ba1:	cmp    rdx,QWORD PTR [r15+0x10]
  425ba5:	jae    425bc1 <__ctype_b_loc@plt+0x238f1>
  425ba7:	cmp    rdx,rbx
  425baa:	je     425bc1 <__ctype_b_loc@plt+0x238f1>
  425bac:	movsxd rax,DWORD PTR [rax+0x18]
  425bb0:	cmp    rax,0xffffffffffffffff
  425bb4:	je     425bc1 <__ctype_b_loc@plt+0x238f1>
  425bb6:	lea    rcx,[rip+0x9d23]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  425bbd:	mov    rcx,QWORD PTR [rcx+rax*8]
  425bc1:	lea    rsi,[rip+0x45fa]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  425bc8:	lea    rdx,[rip+0x42d2]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  425bcf:	mov    rdi,r15
  425bd2:	xor    eax,eax
  425bd4:	call   410460 <__ctype_b_loc@plt+0xe190>
  425bd9:	mov    r14,rax
  425bdc:	mov    rax,QWORD PTR [r15+0x28]
  425be0:	sub    rax,QWORD PTR [r15+0x50]
  425be4:	jbe    425c53 <__ctype_b_loc@plt+0x23983>
  425be6:	shr    rax,0x3
  425bea:	imul   eax,eax,0xcccccccd
  425bf0:	mov    DWORD PTR [rsp+0x94],eax
  425bf7:	lea    rsi,[rip+0x4259]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  425bfe:	lea    rdx,[rsp+0x20]
  425c03:	mov    rdi,r15
  425c06:	call   410000 <__ctype_b_loc@plt+0xdd30>
  425c0b:	mov    rdi,QWORD PTR [rsp+0x30]
  425c10:	lea    rsi,[rip+0x4539]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  425c17:	call   402170 <strcmp@plt>
  425c1c:	cmp    eax,0x1
  425c1f:	mov    edx,0x2
  425c24:	sbb    edx,0x0
  425c27:	mov    rcx,QWORD PTR [rsp+0x28]
  425c2c:	test   rcx,rcx
  425c2f:	jne    425c3d <__ctype_b_loc@plt+0x2396d>
  425c31:	lea    rcx,[rip+0x453d]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  425c38:	mov    QWORD PTR [rsp+0x28],rcx
  425c3d:	lea    rsi,[rip+0x4533]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  425c44:	mov    rdi,r15
  425c47:	mov    r8,r14
  425c4a:	xor    eax,eax
  425c4c:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  425c51:	jmp    425c6c <__ctype_b_loc@plt+0x2399c>
  425c53:	lea    rsi,[rip+0x44e0]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  425c5a:	mov    rdi,r15
  425c5d:	mov    edx,0x2
  425c62:	mov    rcx,r14
  425c65:	xor    eax,eax
  425c67:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  425c6c:	xor    r14d,r14d
  425c6f:	mov    QWORD PTR [rsp+0x30],r15
  425c74:	lea    rax,[rsp+0x38]
  425c79:	mov    QWORD PTR [rsp+0x20],rax
  425c7e:	mov    DWORD PTR [rsp+0x28],0x0
  425c86:	test   r14d,r14d
  425c89:	jle    425cf1 <__ctype_b_loc@plt+0x23a21>
  425c8b:	lea    rbp,[rsp+0x2038]
  425c93:	lea    r15,[rsp+0x20]
  425c98:	jmp    425ca5 <__ctype_b_loc@plt+0x239d5>
  425c9a:	nop    WORD PTR [rax+rax*1+0x0]
  425ca0:	test   r14d,r14d
  425ca3:	jle    425cf1 <__ctype_b_loc@plt+0x23a21>
  425ca5:	dec    r14d
  425ca8:	test   r13,r13
  425cab:	je     425ca0 <__ctype_b_loc@plt+0x239d0>
  425cad:	xor    ebx,ebx
  425caf:	jmp    425cd8 <__ctype_b_loc@plt+0x23a08>
  425cb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  425cc0:	movzx  ecx,BYTE PTR [r12+rbx*1]
  425cc5:	lea    rdx,[rax+0x1]
  425cc9:	mov    QWORD PTR [rsp+0x20],rdx
  425cce:	mov    BYTE PTR [rax],cl
  425cd0:	inc    rbx
  425cd3:	cmp    r13,rbx
  425cd6:	je     425ca0 <__ctype_b_loc@plt+0x239d0>
  425cd8:	mov    rax,QWORD PTR [rsp+0x20]
  425cdd:	cmp    rax,rbp
  425ce0:	jb     425cc0 <__ctype_b_loc@plt+0x239f0>
  425ce2:	mov    rdi,r15
  425ce5:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  425cea:	mov    rax,QWORD PTR [rsp+0x20]
  425cef:	jmp    425cc0 <__ctype_b_loc@plt+0x239f0>
  425cf1:	lea    rdi,[rsp+0x20]
  425cf6:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  425cfb:	mov    eax,0x1
  425d00:	add    rsp,0x2038
  425d07:	pop    rbx
  425d08:	pop    r12
  425d0a:	pop    r13
  425d0c:	pop    r14
  425d0e:	pop    r15
  425d10:	pop    rbp
  425d11:	ret    
  425d12:	inc    rbp
  425d15:	lea    rbx,[rip+0x3dfc]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425d1c:	nop    DWORD PTR [rax+0x0]
  425d20:	movzx  ecx,BYTE PTR [rbp+0x0]
  425d24:	inc    rbp
  425d27:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425d2c:	jne    425d20 <__ctype_b_loc@plt+0x23a50>
  425d2e:	test   cl,cl
  425d30:	jne    425b92 <__ctype_b_loc@plt+0x238c2>
  425d36:	jmp    425c6c <__ctype_b_loc@plt+0x2399c>
  425d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  425d40:	push   rbp
  425d41:	push   r15
  425d43:	push   r14
  425d45:	push   r13
  425d47:	push   r12
  425d49:	push   rbx
  425d4a:	sub    rsp,0x98
  425d51:	mov    r15,rdi
  425d54:	mov    rdx,QWORD PTR [rdi+0x10]
  425d58:	mov    rax,QWORD PTR [rdi+0x18]
  425d5c:	cmp    rax,rdx
  425d5f:	lea    r14,[rip+0x3db2]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425d66:	mov    rbp,r14
  425d69:	cmovb  rbp,rax
  425d6d:	mov    ecx,DWORD PTR [rbp+0x8]
  425d70:	cmp    ecx,0x4
  425d73:	je     425dde <__ctype_b_loc@plt+0x23b0e>
  425d75:	cmp    ecx,0x3
  425d78:	jne    425ded <__ctype_b_loc@plt+0x23b1d>
  425d7a:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  425d7f:	lea    rsi,[rip+0x409b]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  425d86:	lea    rbx,[rsp+0x20]
  425d8b:	mov    rdi,rbx
  425d8e:	mov    al,0x1
  425d90:	call   402270 <sprintf@plt>
  425d95:	mov    rdi,rbx
  425d98:	call   4020e0 <strlen@plt>
  425d9d:	mov    rdi,r15
  425da0:	mov    rsi,rbx
  425da3:	mov    rdx,rax
  425da6:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  425dab:	mov    QWORD PTR [rbp+0x0],rax
  425daf:	mov    DWORD PTR [rbp+0x8],0x4
  425db6:	mov    rax,QWORD PTR [r15+0x20]
  425dba:	mov    rcx,QWORD PTR [rax+0x78]
  425dbe:	cmp    rcx,QWORD PTR [rax+0x70]
  425dc2:	jb     425dcc <__ctype_b_loc@plt+0x23afc>
  425dc4:	mov    rdi,r15
  425dc7:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  425dcc:	mov    rdx,QWORD PTR [r15+0x10]
  425dd0:	mov    rax,QWORD PTR [r15+0x18]
  425dd4:	cmp    rax,rdx
  425dd7:	mov    rbp,r14
  425dda:	cmovb  rbp,rax
  425dde:	mov    r12,QWORD PTR [rbp+0x0]
  425de2:	mov    r13,QWORD PTR [r12+0x10]
  425de7:	add    r12,0x18
  425deb:	jmp    425e49 <__ctype_b_loc@plt+0x23b79>
  425ded:	lea    rcx,[rip+0x43e2]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  425df4:	cmp    rax,r14
  425df7:	je     425e13 <__ctype_b_loc@plt+0x23b43>
  425df9:	cmp    rax,rdx
  425dfc:	jae    425e13 <__ctype_b_loc@plt+0x23b43>
  425dfe:	movsxd rax,DWORD PTR [rax+0x8]
  425e02:	cmp    rax,0xffffffffffffffff
  425e06:	je     425e13 <__ctype_b_loc@plt+0x23b43>
  425e08:	lea    rcx,[rip+0x9ad1]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  425e0f:	mov    rcx,QWORD PTR [rcx+rax*8]
  425e13:	lea    rsi,[rip+0x43a8]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  425e1a:	lea    rdx,[rip+0x4448]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  425e21:	xor    r12d,r12d
  425e24:	mov    rdi,r15
  425e27:	xor    eax,eax
  425e29:	call   410460 <__ctype_b_loc@plt+0xe190>
  425e2e:	mov    rdi,r15
  425e31:	mov    esi,0x1
  425e36:	mov    rdx,rax
  425e39:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  425e3e:	mov    rdx,QWORD PTR [r15+0x10]
  425e42:	mov    rax,QWORD PTR [r15+0x18]
  425e46:	xor    r13d,r13d
  425e49:	add    rax,0x10
  425e4d:	cmp    rax,rdx
  425e50:	cmovae rax,r14
  425e54:	mov    ecx,DWORD PTR [rax+0x8]
  425e57:	cmp    ecx,0x3
  425e5a:	je     425f34 <__ctype_b_loc@plt+0x23c64>
  425e60:	cmp    ecx,0x4
  425e63:	jne    425f51 <__ctype_b_loc@plt+0x23c81>
  425e69:	mov    rbx,QWORD PTR [rax]
  425e6c:	add    rbx,0x18
  425e70:	lea    rsi,[rsp+0x20]
  425e75:	mov    rdi,rbx
  425e78:	call   4020b0 <strtod@plt>
  425e7d:	mov    rbp,QWORD PTR [rsp+0x20]
  425e82:	cmp    rbp,rbx
  425e85:	je     425f51 <__ctype_b_loc@plt+0x23c81>
  425e8b:	mov    r14b,BYTE PTR [rbp+0x0]
  425e8f:	mov    eax,r14d
  425e92:	or     al,0x20
  425e94:	cmp    al,0x78
  425e96:	jne    425ecc <__ctype_b_loc@plt+0x23bfc>
  425e98:	lea    rsi,[rsp+0x20]
  425e9d:	mov    rdi,rbx
  425ea0:	mov    edx,0x10
  425ea5:	call   402250 <strtoul@plt>
  425eaa:	vmovq  xmm0,rax
  425eaf:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x3db9]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  425eb7:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x3dc1]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  425ebf:	vhaddpd xmm0,xmm0,xmm0
  425ec3:	mov    rbp,QWORD PTR [rsp+0x20]
  425ec8:	mov    r14b,BYTE PTR [rbp+0x0]
  425ecc:	test   r14b,r14b
  425ecf:	je     425ef3 <__ctype_b_loc@plt+0x23c23>
  425ed1:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  425ed7:	call   4022d0 <__ctype_b_loc@plt>
  425edc:	mov    rax,QWORD PTR [rax]
  425edf:	movzx  ecx,r14b
  425ee3:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425ee8:	jne    425efc <__ctype_b_loc@plt+0x23c2c>
  425eea:	lea    r14,[rip+0x3c27]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425ef1:	jmp    425f51 <__ctype_b_loc@plt+0x23c81>
  425ef3:	lea    r14,[rip+0x3c1e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425efa:	jmp    425f29 <__ctype_b_loc@plt+0x23c59>
  425efc:	inc    rbp
  425eff:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  425f05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425f0f:	nop
  425f10:	movzx  ecx,BYTE PTR [rbp+0x0]
  425f14:	inc    rbp
  425f17:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425f1c:	jne    425f10 <__ctype_b_loc@plt+0x23c40>
  425f1e:	test   cl,cl
  425f20:	lea    r14,[rip+0x3bf1]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425f27:	jne    425f51 <__ctype_b_loc@plt+0x23c81>
  425f29:	lea    rax,[rsp+0x8]
  425f2e:	vmovsd QWORD PTR [rsp+0x8],xmm0
  425f34:	vcvttsd2si rbp,QWORD PTR [rax]
  425f39:	test   rbp,rbp
  425f3c:	je     425f51 <__ctype_b_loc@plt+0x23c81>
  425f3e:	lea    rbx,[r13+0x1]
  425f42:	mov    rax,rbp
  425f45:	sar    rax,0x3f
  425f49:	and    rax,rbx
  425f4c:	jmp    4260e8 <__ctype_b_loc@plt+0x23e18>
  425f51:	mov    rax,QWORD PTR [r15+0x18]
  425f55:	add    rax,0x10
  425f59:	cmp    rax,QWORD PTR [r15+0x10]
  425f5d:	cmovae rax,r14
  425f61:	mov    ecx,DWORD PTR [rax+0x8]
  425f64:	cmp    ecx,0x3
  425f67:	je     4260e0 <__ctype_b_loc@plt+0x23e10>
  425f6d:	cmp    ecx,0x4
  425f70:	jne    426006 <__ctype_b_loc@plt+0x23d36>
  425f76:	mov    rbx,QWORD PTR [rax]
  425f79:	add    rbx,0x18
  425f7d:	lea    rsi,[rsp+0x20]
  425f82:	mov    rdi,rbx
  425f85:	call   4020b0 <strtod@plt>
  425f8a:	mov    rbp,QWORD PTR [rsp+0x20]
  425f8f:	cmp    rbp,rbx
  425f92:	je     426006 <__ctype_b_loc@plt+0x23d36>
  425f94:	mov    r14b,BYTE PTR [rbp+0x0]
  425f98:	mov    eax,r14d
  425f9b:	or     al,0x20
  425f9d:	cmp    al,0x78
  425f9f:	jne    425fbc <__ctype_b_loc@plt+0x23cec>
  425fa1:	lea    rsi,[rsp+0x20]
  425fa6:	mov    rdi,rbx
  425fa9:	mov    edx,0x10
  425fae:	call   402250 <strtoul@plt>
  425fb3:	mov    rbp,QWORD PTR [rsp+0x20]
  425fb8:	mov    r14b,BYTE PTR [rbp+0x0]
  425fbc:	test   r14b,r14b
  425fbf:	je     4260e0 <__ctype_b_loc@plt+0x23e10>
  425fc5:	call   4022d0 <__ctype_b_loc@plt>
  425fca:	mov    rax,QWORD PTR [rax]
  425fcd:	movzx  ecx,r14b
  425fd1:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425fd6:	jne    425fe1 <__ctype_b_loc@plt+0x23d11>
  425fd8:	lea    r14,[rip+0x3b39]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425fdf:	jmp    426006 <__ctype_b_loc@plt+0x23d36>
  425fe1:	inc    rbp
  425fe4:	lea    r14,[rip+0x3b2d]        # 429b18 <__ctype_b_loc@plt+0x27848>
  425feb:	nop    DWORD PTR [rax+rax*1+0x0]
  425ff0:	movzx  ecx,BYTE PTR [rbp+0x0]
  425ff4:	inc    rbp
  425ff7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  425ffc:	jne    425ff0 <__ctype_b_loc@plt+0x23d20>
  425ffe:	test   cl,cl
  426000:	je     4260e0 <__ctype_b_loc@plt+0x23e10>
  426006:	mov    rax,QWORD PTR [r15+0x18]
  42600a:	lea    rdx,[rax+0x10]
  42600e:	lea    rcx,[rip+0x41c1]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  426015:	cmp    rdx,QWORD PTR [r15+0x10]
  426019:	jae    426035 <__ctype_b_loc@plt+0x23d65>
  42601b:	cmp    rdx,r14
  42601e:	je     426035 <__ctype_b_loc@plt+0x23d65>
  426020:	movsxd rax,DWORD PTR [rax+0x18]
  426024:	cmp    rax,0xffffffffffffffff
  426028:	je     426035 <__ctype_b_loc@plt+0x23d65>
  42602a:	lea    rcx,[rip+0x98af]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  426031:	mov    rcx,QWORD PTR [rcx+rax*8]
  426035:	lea    rsi,[rip+0x4186]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  42603c:	lea    rdx,[rip+0x3e5e]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  426043:	mov    rdi,r15
  426046:	xor    eax,eax
  426048:	call   410460 <__ctype_b_loc@plt+0xe190>
  42604d:	mov    r14,rax
  426050:	mov    rax,QWORD PTR [r15+0x28]
  426054:	sub    rax,QWORD PTR [r15+0x50]
  426058:	jbe    4260c7 <__ctype_b_loc@plt+0x23df7>
  42605a:	shr    rax,0x3
  42605e:	imul   eax,eax,0xcccccccd
  426064:	mov    DWORD PTR [rsp+0x94],eax
  42606b:	lea    rsi,[rip+0x3de5]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  426072:	lea    rdx,[rsp+0x20]
  426077:	mov    rdi,r15
  42607a:	call   410000 <__ctype_b_loc@plt+0xdd30>
  42607f:	mov    rdi,QWORD PTR [rsp+0x30]
  426084:	lea    rsi,[rip+0x40c5]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  42608b:	call   402170 <strcmp@plt>
  426090:	cmp    eax,0x1
  426093:	mov    edx,0x2
  426098:	sbb    edx,0x0
  42609b:	mov    rcx,QWORD PTR [rsp+0x28]
  4260a0:	test   rcx,rcx
  4260a3:	jne    4260b1 <__ctype_b_loc@plt+0x23de1>
  4260a5:	lea    rcx,[rip+0x40c9]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  4260ac:	mov    QWORD PTR [rsp+0x28],rcx
  4260b1:	lea    rsi,[rip+0x40bf]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  4260b8:	mov    rdi,r15
  4260bb:	mov    r8,r14
  4260be:	xor    eax,eax
  4260c0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4260c5:	jmp    4260e0 <__ctype_b_loc@plt+0x23e10>
  4260c7:	lea    rsi,[rip+0x406c]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  4260ce:	mov    rdi,r15
  4260d1:	mov    edx,0x2
  4260d6:	mov    rcx,r14
  4260d9:	xor    eax,eax
  4260db:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4260e0:	lea    rbx,[r13+0x1]
  4260e4:	xor    ebp,ebp
  4260e6:	xor    eax,eax
  4260e8:	add    rbp,rax
  4260eb:	mov    rdi,r15
  4260ee:	mov    esi,0x3
  4260f3:	mov    rdx,0xffffffffffffffff
  4260fa:	call   410640 <__ctype_b_loc@plt+0xe370>
  4260ff:	mov    rcx,rax
  426102:	sar    rcx,0x3f
  426106:	and    rcx,rbx
  426109:	add    rcx,rax
  42610c:	mov    rax,rcx
  42610f:	sar    rax,0x3f
  426113:	andn   rbx,rax,rcx
  426118:	test   rbp,rbp
  42611b:	mov    eax,0x1
  426120:	cmovg  rax,rbp
  426124:	cmp    rbx,r13
  426127:	cmovg  rbx,r13
  42612b:	sub    rbx,rax
  42612e:	jge    426158 <__ctype_b_loc@plt+0x23e88>
  426130:	mov    rax,QWORD PTR [r15+0x20]
  426134:	mov    rcx,QWORD PTR [rax+0x78]
  426138:	cmp    rcx,QWORD PTR [rax+0x70]
  42613c:	jb     426146 <__ctype_b_loc@plt+0x23e76>
  42613e:	mov    rdi,r15
  426141:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  426146:	mov    rbp,QWORD PTR [r15+0x10]
  42614a:	lea    rsi,[rip+0x3f4a]        # 42a09b <__ctype_b_loc@plt+0x27dcb>
  426151:	mov    rdi,r15
  426154:	xor    edx,edx
  426156:	jmp    426186 <__ctype_b_loc@plt+0x23eb6>
  426158:	lea    r14,[r12+rax*1]
  42615c:	add    r14,0xffffffffffffffff
  426160:	inc    rbx
  426163:	mov    rax,QWORD PTR [r15+0x20]
  426167:	mov    rcx,QWORD PTR [rax+0x78]
  42616b:	cmp    rcx,QWORD PTR [rax+0x70]
  42616f:	jb     426179 <__ctype_b_loc@plt+0x23ea9>
  426171:	mov    rdi,r15
  426174:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  426179:	mov    rbp,QWORD PTR [r15+0x10]
  42617d:	mov    rdi,r15
  426180:	mov    rsi,r14
  426183:	mov    rdx,rbx
  426186:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42618b:	mov    QWORD PTR [rbp+0x0],rax
  42618f:	mov    DWORD PTR [rbp+0x8],0x4
  426196:	add    QWORD PTR [r15+0x10],0x10
  42619b:	mov    eax,0x1
  4261a0:	add    rsp,0x98
  4261a7:	pop    rbx
  4261a8:	pop    r12
  4261aa:	pop    r13
  4261ac:	pop    r14
  4261ae:	pop    r15
  4261b0:	pop    rbp
  4261b1:	ret    
  4261b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4261bc:	nop    DWORD PTR [rax+0x0]
  4261c0:	push   rbp
  4261c1:	push   r15
  4261c3:	push   r14
  4261c5:	push   r13
  4261c7:	push   r12
  4261c9:	push   rbx
  4261ca:	sub    rsp,0x2018
  4261d1:	mov    r15,rdi
  4261d4:	mov    rdx,QWORD PTR [rdi+0x10]
  4261d8:	mov    rax,QWORD PTR [rdi+0x18]
  4261dc:	cmp    rax,rdx
  4261df:	lea    r12,[rip+0x3932]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4261e6:	mov    rbx,r12
  4261e9:	cmovb  rbx,rax
  4261ed:	mov    ecx,DWORD PTR [rbx+0x8]
  4261f0:	cmp    ecx,0x4
  4261f3:	je     426257 <__ctype_b_loc@plt+0x23f87>
  4261f5:	cmp    ecx,0x3
  4261f8:	jne    426265 <__ctype_b_loc@plt+0x23f95>
  4261fa:	vmovsd xmm0,QWORD PTR [rbx]
  4261fe:	lea    rsi,[rip+0x3c1c]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  426205:	mov    r14,rsp
  426208:	mov    rdi,r14
  42620b:	mov    al,0x1
  42620d:	call   402270 <sprintf@plt>
  426212:	mov    rdi,r14
  426215:	call   4020e0 <strlen@plt>
  42621a:	mov    rdi,r15
  42621d:	mov    rsi,r14
  426220:	mov    rdx,rax
  426223:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  426228:	mov    QWORD PTR [rbx],rax
  42622b:	mov    DWORD PTR [rbx+0x8],0x4
  426232:	mov    rax,QWORD PTR [r15+0x20]
  426236:	mov    rcx,QWORD PTR [rax+0x78]
  42623a:	cmp    rcx,QWORD PTR [rax+0x70]
  42623e:	jb     426248 <__ctype_b_loc@plt+0x23f78>
  426240:	mov    rdi,r15
  426243:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  426248:	mov    rax,QWORD PTR [r15+0x18]
  42624c:	cmp    rax,QWORD PTR [r15+0x10]
  426250:	cmovb  r12,rax
  426254:	mov    rbx,r12
  426257:	mov    r12,QWORD PTR [rbx]
  42625a:	mov    r13,QWORD PTR [r12+0x10]
  42625f:	add    r12,0x18
  426263:	jmp    4262b9 <__ctype_b_loc@plt+0x23fe9>
  426265:	lea    rcx,[rip+0x3f6a]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  42626c:	cmp    rax,r12
  42626f:	je     42628b <__ctype_b_loc@plt+0x23fbb>
  426271:	cmp    rax,rdx
  426274:	jae    42628b <__ctype_b_loc@plt+0x23fbb>
  426276:	movsxd rax,DWORD PTR [rax+0x8]
  42627a:	cmp    rax,0xffffffffffffffff
  42627e:	je     42628b <__ctype_b_loc@plt+0x23fbb>
  426280:	lea    rcx,[rip+0x9659]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  426287:	mov    rcx,QWORD PTR [rcx+rax*8]
  42628b:	lea    rsi,[rip+0x3f30]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  426292:	lea    rdx,[rip+0x3fd0]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  426299:	xor    r12d,r12d
  42629c:	mov    rdi,r15
  42629f:	xor    eax,eax
  4262a1:	call   410460 <__ctype_b_loc@plt+0xe190>
  4262a6:	mov    rdi,r15
  4262a9:	mov    esi,0x1
  4262ae:	mov    rdx,rax
  4262b1:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  4262b6:	xor    r13d,r13d
  4262b9:	mov    QWORD PTR [rsp+0x10],r15
  4262be:	lea    rbp,[rsp+0x18]
  4262c3:	mov    QWORD PTR [rsp],rbp
  4262c7:	mov    DWORD PTR [rsp+0x8],0x0
  4262cf:	test   r13,r13
  4262d2:	je     42632b <__ctype_b_loc@plt+0x2405b>
  4262d4:	lea    r15,[rsp+0x2018]
  4262dc:	dec    r13
  4262df:	xor    ebx,ebx
  4262e1:	mov    r14,rsp
  4262e4:	cmp    rbp,r15
  4262e7:	jb     4262fc <__ctype_b_loc@plt+0x2402c>
  4262e9:	nop    DWORD PTR [rax+0x0]
  4262f0:	mov    rdi,r14
  4262f3:	call   41f0c0 <__ctype_b_loc@plt+0x1cdf0>
  4262f8:	mov    rbp,QWORD PTR [rsp]
  4262fc:	call   402030 <__ctype_toupper_loc@plt>
  426301:	mov    rax,QWORD PTR [rax]
  426304:	movzx  ecx,BYTE PTR [r12+rbx*1]
  426309:	movzx  eax,BYTE PTR [rax+rcx*4]
  42630d:	lea    rcx,[rbp+0x1]
  426311:	mov    QWORD PTR [rsp],rcx
  426315:	mov    BYTE PTR [rbp+0x0],al
  426318:	cmp    r13,rbx
  42631b:	je     42632b <__ctype_b_loc@plt+0x2405b>
  42631d:	inc    rbx
  426320:	mov    rbp,QWORD PTR [rsp]
  426324:	cmp    rbp,r15
  426327:	jae    4262f0 <__ctype_b_loc@plt+0x24020>
  426329:	jmp    4262fc <__ctype_b_loc@plt+0x2402c>
  42632b:	mov    rdi,rsp
  42632e:	call   41eb70 <__ctype_b_loc@plt+0x1c8a0>
  426333:	mov    eax,0x1
  426338:	add    rsp,0x2018
  42633f:	pop    rbx
  426340:	pop    r12
  426342:	pop    r13
  426344:	pop    r14
  426346:	pop    r15
  426348:	pop    rbp
  426349:	ret    
  42634a:	nop    WORD PTR [rax+rax*1+0x0]
  426350:	push   rbp
  426351:	push   r15
  426353:	push   r14
  426355:	push   r13
  426357:	push   r12
  426359:	push   rbx
  42635a:	sub    rsp,0x258
  426361:	mov    DWORD PTR [rsp+0xc],esi
  426365:	mov    r15,rdi
  426368:	mov    rdx,QWORD PTR [rdi+0x10]
  42636c:	mov    rax,QWORD PTR [rdi+0x18]
  426370:	cmp    rax,rdx
  426373:	lea    r14,[rip+0x379e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42637a:	mov    rbp,r14
  42637d:	cmovb  rbp,rax
  426381:	mov    ecx,DWORD PTR [rbp+0x8]
  426384:	cmp    ecx,0x4
  426387:	je     4263f2 <__ctype_b_loc@plt+0x24122>
  426389:	cmp    ecx,0x3
  42638c:	jne    426405 <__ctype_b_loc@plt+0x24135>
  42638e:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  426393:	lea    rsi,[rip+0x3a87]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  42639a:	lea    rbx,[rsp+0x30]
  42639f:	mov    rdi,rbx
  4263a2:	mov    al,0x1
  4263a4:	call   402270 <sprintf@plt>
  4263a9:	mov    rdi,rbx
  4263ac:	call   4020e0 <strlen@plt>
  4263b1:	mov    rdi,r15
  4263b4:	mov    rsi,rbx
  4263b7:	mov    rdx,rax
  4263ba:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4263bf:	mov    QWORD PTR [rbp+0x0],rax
  4263c3:	mov    DWORD PTR [rbp+0x8],0x4
  4263ca:	mov    rax,QWORD PTR [r15+0x20]
  4263ce:	mov    rcx,QWORD PTR [rax+0x78]
  4263d2:	cmp    rcx,QWORD PTR [rax+0x70]
  4263d6:	jb     4263e0 <__ctype_b_loc@plt+0x24110>
  4263d8:	mov    rdi,r15
  4263db:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4263e0:	mov    rdx,QWORD PTR [r15+0x10]
  4263e4:	mov    rax,QWORD PTR [r15+0x18]
  4263e8:	cmp    rax,rdx
  4263eb:	mov    rbp,r14
  4263ee:	cmovb  rbp,rax
  4263f2:	mov    rcx,QWORD PTR [rbp+0x0]
  4263f6:	mov    r13,QWORD PTR [rcx+0x10]
  4263fa:	add    rcx,0x18
  4263fe:	mov    QWORD PTR [rsp+0x18],rcx
  426403:	jmp    426465 <__ctype_b_loc@plt+0x24195>
  426405:	lea    rcx,[rip+0x3dca]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  42640c:	cmp    rax,r14
  42640f:	je     42642b <__ctype_b_loc@plt+0x2415b>
  426411:	cmp    rax,rdx
  426414:	jae    42642b <__ctype_b_loc@plt+0x2415b>
  426416:	movsxd rax,DWORD PTR [rax+0x8]
  42641a:	cmp    rax,0xffffffffffffffff
  42641e:	je     42642b <__ctype_b_loc@plt+0x2415b>
  426420:	lea    rcx,[rip+0x94b9]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  426427:	mov    rcx,QWORD PTR [rcx+rax*8]
  42642b:	lea    rsi,[rip+0x3d90]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  426432:	lea    rdx,[rip+0x3e30]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  426439:	xor    eax,eax
  42643b:	mov    QWORD PTR [rsp+0x18],rax
  426440:	mov    rdi,r15
  426443:	xor    eax,eax
  426445:	call   410460 <__ctype_b_loc@plt+0xe190>
  42644a:	mov    rdi,r15
  42644d:	mov    esi,0x1
  426452:	mov    rdx,rax
  426455:	call   40ff30 <__ctype_b_loc@plt+0xdc60>
  42645a:	mov    rdx,QWORD PTR [r15+0x10]
  42645e:	mov    rax,QWORD PTR [r15+0x18]
  426462:	xor    r13d,r13d
  426465:	lea    rsi,[rax+0x10]
  426469:	cmp    rsi,rdx
  42646c:	mov    rbp,r14
  42646f:	cmovb  rbp,rsi
  426473:	mov    ecx,DWORD PTR [rbp+0x8]
  426476:	cmp    ecx,0x4
  426479:	je     4264e2 <__ctype_b_loc@plt+0x24212>
  42647b:	cmp    ecx,0x3
  42647e:	jne    4264f4 <__ctype_b_loc@plt+0x24224>
  426480:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  426485:	lea    rsi,[rip+0x3995]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  42648c:	lea    rbx,[rsp+0x30]
  426491:	mov    rdi,rbx
  426494:	mov    al,0x1
  426496:	call   402270 <sprintf@plt>
  42649b:	mov    rdi,rbx
  42649e:	call   4020e0 <strlen@plt>
  4264a3:	mov    rdi,r15
  4264a6:	mov    rsi,rbx
  4264a9:	mov    rdx,rax
  4264ac:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4264b1:	mov    QWORD PTR [rbp+0x0],rax
  4264b5:	mov    DWORD PTR [rbp+0x8],0x4
  4264bc:	mov    rax,QWORD PTR [r15+0x20]
  4264c0:	mov    rcx,QWORD PTR [rax+0x78]
  4264c4:	cmp    rcx,QWORD PTR [rax+0x70]
  4264c8:	jb     4264d2 <__ctype_b_loc@plt+0x24202>
  4264ca:	mov    rdi,r15
  4264cd:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4264d2:	mov    rbp,QWORD PTR [r15+0x18]
  4264d6:	add    rbp,0x10
  4264da:	cmp    rbp,QWORD PTR [r15+0x10]
  4264de:	cmovae rbp,r14
  4264e2:	mov    r12,QWORD PTR [rbp+0x0]
  4264e6:	mov    rbp,QWORD PTR [r12+0x10]
  4264eb:	add    r12,0x18
  4264ef:	jmp    4265ca <__ctype_b_loc@plt+0x242fa>
  4264f4:	lea    rcx,[rip+0x3cdb]        # 42a1d6 <__ctype_b_loc@plt+0x27f06>
  4264fb:	cmp    rsi,rdx
  4264fe:	jae    42651a <__ctype_b_loc@plt+0x2424a>
  426500:	cmp    rsi,r14
  426503:	je     42651a <__ctype_b_loc@plt+0x2424a>
  426505:	movsxd rax,DWORD PTR [rax+0x18]
  426509:	cmp    rax,0xffffffffffffffff
  42650d:	je     42651a <__ctype_b_loc@plt+0x2424a>
  42650f:	lea    rcx,[rip+0x93ca]        # 42f8e0 <__ctype_b_loc@plt+0x2d610>
  426516:	mov    rcx,QWORD PTR [rcx+rax*8]
  42651a:	lea    rsi,[rip+0x3ca1]        # 42a1c2 <__ctype_b_loc@plt+0x27ef2>
  426521:	lea    rdx,[rip+0x3d41]        # 42a269 <__ctype_b_loc@plt+0x27f99>
  426528:	mov    rdi,r15
  42652b:	xor    eax,eax
  42652d:	call   410460 <__ctype_b_loc@plt+0xe190>
  426532:	mov    rbx,rax
  426535:	mov    rax,QWORD PTR [r15+0x28]
  426539:	sub    rax,QWORD PTR [r15+0x50]
  42653d:	jbe    4265ac <__ctype_b_loc@plt+0x242dc>
  42653f:	shr    rax,0x3
  426543:	imul   eax,eax,0xcccccccd
  426549:	mov    DWORD PTR [rsp+0xa4],eax
  426550:	lea    rsi,[rip+0x3900]        # 429e57 <__ctype_b_loc@plt+0x27b87>
  426557:	lea    rdx,[rsp+0x30]
  42655c:	mov    rdi,r15
  42655f:	call   410000 <__ctype_b_loc@plt+0xdd30>
  426564:	mov    rdi,QWORD PTR [rsp+0x40]
  426569:	lea    rsi,[rip+0x3be0]        # 42a150 <__ctype_b_loc@plt+0x27e80>
  426570:	call   402170 <strcmp@plt>
  426575:	cmp    eax,0x1
  426578:	mov    edx,0x2
  42657d:	sbb    edx,0x0
  426580:	mov    rcx,QWORD PTR [rsp+0x38]
  426585:	test   rcx,rcx
  426588:	jne    426596 <__ctype_b_loc@plt+0x242c6>
  42658a:	lea    rcx,[rip+0x3be4]        # 42a175 <__ctype_b_loc@plt+0x27ea5>
  426591:	mov    QWORD PTR [rsp+0x38],rcx
  426596:	lea    rsi,[rip+0x3bda]        # 42a177 <__ctype_b_loc@plt+0x27ea7>
  42659d:	mov    rdi,r15
  4265a0:	mov    r8,rbx
  4265a3:	xor    eax,eax
  4265a5:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4265aa:	jmp    4265c5 <__ctype_b_loc@plt+0x242f5>
  4265ac:	lea    rsi,[rip+0x3b87]        # 42a13a <__ctype_b_loc@plt+0x27e6a>
  4265b3:	mov    rdi,r15
  4265b6:	mov    edx,0x2
  4265bb:	mov    rcx,rbx
  4265be:	xor    eax,eax
  4265c0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4265c5:	xor    r12d,r12d
  4265c8:	xor    ebp,ebp
  4265ca:	mov    edx,0x1
  4265cf:	mov    rdi,r15
  4265d2:	mov    esi,0x3
  4265d7:	call   410640 <__ctype_b_loc@plt+0xe370>
  4265dc:	lea    rcx,[r13+0x1]
  4265e0:	mov    rdx,rax
  4265e3:	sar    rdx,0x3f
  4265e7:	and    rdx,rcx
  4265ea:	add    rdx,rax
  4265ed:	mov    rax,rdx
  4265f0:	sar    rax,0x3f
  4265f4:	andn   rax,rax,rdx
  4265f9:	lea    rcx,[rax-0x1]
  4265fd:	cmp    rcx,r13
  426600:	cmova  rcx,r13
  426604:	xor    ebx,ebx
  426606:	test   rax,rax
  426609:	cmovg  rbx,rcx
  42660d:	cmp    DWORD PTR [rsp+0xc],0x0
  426612:	mov    QWORD PTR [rsp+0x10],r15
  426617:	je     426667 <__ctype_b_loc@plt+0x24397>
  426619:	mov    rcx,QWORD PTR [r15+0x10]
  42661d:	mov    rax,QWORD PTR [r15+0x18]
  426621:	add    rax,0x30
  426625:	cmp    rax,rcx
  426628:	cmovb  r14,rax
  42662c:	mov    eax,DWORD PTR [r14+0x8]
  426630:	test   eax,eax
  426632:	je     426647 <__ctype_b_loc@plt+0x24377>
  426634:	cmp    eax,0x1
  426637:	jne    4266dd <__ctype_b_loc@plt+0x2440d>
  42663d:	cmp    DWORD PTR [r14],0x0
  426641:	jne    4266dd <__ctype_b_loc@plt+0x2440d>
  426647:	lea    rsi,[rip+0x4209]        # 42a857 <__ctype_b_loc@plt+0x28587>
  42664e:	mov    rdi,r12
  426651:	mov    r14,rbp
  426654:	mov    rbp,rcx
  426657:	call   402210 <strpbrk@plt>
  42665c:	mov    rcx,rbp
  42665f:	mov    rbp,r14
  426662:	test   rax,rax
  426665:	je     4266dd <__ctype_b_loc@plt+0x2440d>
  426667:	mov    rax,r15
  42666a:	mov    r15b,BYTE PTR [r12]
  42666e:	lea    r14,[r12+0x1]
  426673:	cmp    r15b,0x5e
  426677:	cmovne r14,r12
  42667b:	mov    rcx,QWORD PTR [rsp+0x18]
  426680:	add    rbx,rcx
  426683:	mov    QWORD PTR [rsp+0x40],rax
  426688:	mov    QWORD PTR [rsp+0x30],rcx
  42668d:	add    r13,rcx
  426690:	mov    QWORD PTR [rsp+0x38],r13
  426695:	lea    r12,[rsp+0x30]
  42669a:	nop    WORD PTR [rax+rax*1+0x0]
  4266a0:	mov    DWORD PTR [rsp+0x48],0x0
  4266a8:	mov    rdi,r12
  4266ab:	mov    rsi,rbx
  4266ae:	mov    rdx,r14
  4266b1:	call   426900 <__ctype_b_loc@plt+0x24630>
  4266b6:	test   rax,rax
  4266b9:	jne    42676b <__ctype_b_loc@plt+0x2449b>
  4266bf:	cmp    rbx,QWORD PTR [rsp+0x38]
  4266c4:	jae    4266cf <__ctype_b_loc@plt+0x243ff>
  4266c6:	inc    rbx
  4266c9:	cmp    r15b,0x5e
  4266cd:	jne    4266a0 <__ctype_b_loc@plt+0x243d0>
  4266cf:	mov    rax,QWORD PTR [rsp+0x10]
  4266d4:	mov    rcx,QWORD PTR [rax+0x10]
  4266d8:	jmp    426819 <__ctype_b_loc@plt+0x24549>
  4266dd:	mov    rax,QWORD PTR [rsp+0x18]
  4266e2:	lea    r15,[rax+rbx*1]
  4266e6:	test   rbp,rbp
  4266e9:	je     42680b <__ctype_b_loc@plt+0x2453b>
  4266ef:	sub    r13,rbx
  4266f2:	cmp    rbp,r13
  4266f5:	ja     426814 <__ctype_b_loc@plt+0x24544>
  4266fb:	lea    rbx,[rbp-0x1]
  4266ff:	sub    r13,rbx
  426702:	je     426814 <__ctype_b_loc@plt+0x24544>
  426708:	mov    QWORD PTR [rsp+0x20],rcx
  42670d:	mov    QWORD PTR [rsp+0x28],rbp
  426712:	movsx  eax,BYTE PTR [r12]
  426717:	mov    DWORD PTR [rsp+0xc],eax
  42671b:	inc    r12
  42671e:	xchg   ax,ax
  426720:	mov    rdi,r15
  426723:	mov    esi,DWORD PTR [rsp+0xc]
  426727:	mov    rdx,r13
  42672a:	call   402140 <memchr@plt>
  42672f:	test   rax,rax
  426732:	je     42675c <__ctype_b_loc@plt+0x2448c>
  426734:	mov    r14,rax
  426737:	lea    rbp,[rax+0x1]
  42673b:	mov    rdi,rbp
  42673e:	mov    rsi,r12
  426741:	mov    rdx,rbx
  426744:	call   4021f0 <bcmp@plt>
  426749:	test   eax,eax
  42674b:	je     42689b <__ctype_b_loc@plt+0x245cb>
  426751:	add    r13,r15
  426754:	mov    r15,rbp
  426757:	sub    r13,rbp
  42675a:	jne    426720 <__ctype_b_loc@plt+0x24450>
  42675c:	mov    rax,QWORD PTR [rsp+0x10]
  426761:	mov    rcx,QWORD PTR [rsp+0x20]
  426766:	jmp    426819 <__ctype_b_loc@plt+0x24549>
  42676b:	mov    rbp,rax
  42676e:	cmp    DWORD PTR [rsp+0xc],0x0
  426773:	je     426843 <__ctype_b_loc@plt+0x24573>
  426779:	mov    rax,QWORD PTR [rsp+0x18]
  42677e:	mov    rsi,rax
  426781:	sub    rbx,rax
  426784:	inc    rbx
  426787:	vcvtsi2sd xmm0,xmm1,rbx
  42678c:	mov    rdx,QWORD PTR [rsp+0x10]
  426791:	mov    rax,QWORD PTR [rdx+0x10]
  426795:	vmovsd QWORD PTR [rax],xmm0
  426799:	mov    DWORD PTR [rax+0x8],0x3
  4267a0:	mov    rax,QWORD PTR [rdx+0x10]
  4267a4:	lea    rcx,[rax+0x10]
  4267a8:	mov    QWORD PTR [rdx+0x10],rcx
  4267ac:	sub    rbp,rsi
  4267af:	vcvtsi2sd xmm0,xmm1,rbp
  4267b4:	vmovsd QWORD PTR [rax+0x10],xmm0
  4267b9:	mov    DWORD PTR [rax+0x18],0x3
  4267c0:	add    QWORD PTR [rdx+0x10],0x10
  4267c5:	mov    r14d,DWORD PTR [rsp+0x48]
  4267ca:	mov    rdi,QWORD PTR [rsp+0x40]
  4267cf:	lea    rdx,[rip+0x40af]        # 42a885 <__ctype_b_loc@plt+0x285b5>
  4267d6:	mov    esi,r14d
  4267d9:	call   41f430 <__ctype_b_loc@plt+0x1d160>
  4267de:	test   r14d,r14d
  4267e1:	jle    426805 <__ctype_b_loc@plt+0x24535>
  4267e3:	xor    ebx,ebx
  4267e5:	lea    rbp,[rsp+0x30]
  4267ea:	nop    WORD PTR [rax+rax*1+0x0]
  4267f0:	mov    rdi,rbp
  4267f3:	mov    esi,ebx
  4267f5:	xor    edx,edx
  4267f7:	xor    ecx,ecx
  4267f9:	call   4272d0 <__ctype_b_loc@plt+0x25000>
  4267fe:	inc    ebx
  426800:	cmp    r14d,ebx
  426803:	jne    4267f0 <__ctype_b_loc@plt+0x24520>
  426805:	add    r14d,0x2
  426809:	jmp    42682e <__ctype_b_loc@plt+0x2455e>
  42680b:	test   r15,r15
  42680e:	jne    4268a8 <__ctype_b_loc@plt+0x245d8>
  426814:	mov    rax,QWORD PTR [rsp+0x10]
  426819:	mov    DWORD PTR [rcx+0x8],0x0
  426820:	add    rcx,0x10
  426824:	mov    QWORD PTR [rax+0x10],rcx
  426828:	mov    r14d,0x1
  42682e:	mov    eax,r14d
  426831:	add    rsp,0x258
  426838:	pop    rbx
  426839:	pop    r12
  42683b:	pop    r13
  42683d:	pop    r14
  42683f:	pop    r15
  426841:	pop    rbp
  426842:	ret    
  426843:	mov    eax,DWORD PTR [rsp+0x48]
  426847:	test   eax,eax
  426849:	mov    r14d,0x1
  42684f:	cmovne r14d,eax
  426853:	test   rbx,rbx
  426856:	cmove  r14d,eax
  42685a:	mov    rdi,QWORD PTR [rsp+0x40]
  42685f:	lea    rdx,[rip+0x401f]        # 42a885 <__ctype_b_loc@plt+0x285b5>
  426866:	mov    esi,r14d
  426869:	call   41f430 <__ctype_b_loc@plt+0x1d160>
  42686e:	test   r14d,r14d
  426871:	jle    42682e <__ctype_b_loc@plt+0x2455e>
  426873:	xor    r15d,r15d
  426876:	lea    r12,[rsp+0x30]
  42687b:	nop    DWORD PTR [rax+rax*1+0x0]
  426880:	mov    rdi,r12
  426883:	mov    esi,r15d
  426886:	mov    rdx,rbx
  426889:	mov    rcx,rbp
  42688c:	call   4272d0 <__ctype_b_loc@plt+0x25000>
  426891:	inc    r15d
  426894:	cmp    r14d,r15d
  426897:	jne    426880 <__ctype_b_loc@plt+0x245b0>
  426899:	jmp    42682e <__ctype_b_loc@plt+0x2455e>
  42689b:	mov    r15,r14
  42689e:	mov    rbp,QWORD PTR [rsp+0x28]
  4268a3:	mov    rcx,QWORD PTR [rsp+0x20]
  4268a8:	sub    r15,QWORD PTR [rsp+0x18]
  4268ad:	lea    rax,[r15+0x1]
  4268b1:	vcvtsi2sd xmm0,xmm1,rax
  4268b6:	vmovsd QWORD PTR [rcx],xmm0
  4268ba:	mov    DWORD PTR [rcx+0x8],0x3
  4268c1:	mov    rdx,QWORD PTR [rsp+0x10]
  4268c6:	mov    rax,QWORD PTR [rdx+0x10]
  4268ca:	lea    rcx,[rax+0x10]
  4268ce:	mov    QWORD PTR [rdx+0x10],rcx
  4268d2:	add    r15,rbp
  4268d5:	vcvtsi2sd xmm0,xmm1,r15
  4268da:	vmovsd QWORD PTR [rax+0x10],xmm0
  4268df:	mov    DWORD PTR [rax+0x18],0x3
  4268e6:	add    QWORD PTR [rdx+0x10],0x10
  4268eb:	mov    r14d,0x2
  4268f1:	jmp    42682e <__ctype_b_loc@plt+0x2455e>
  4268f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426900:	push   rbp
  426901:	push   r15
  426903:	push   r14
  426905:	push   r13
  426907:	push   r12
  426909:	push   rbx
  42690a:	sub    rsp,0x28
  42690e:	mov    rbx,rdx
  426911:	mov    r13,rsi
  426914:	mov    r12,rdi
  426917:	lea    rbp,[rip+0x3fc7]        # 42a8e5 <__ctype_b_loc@plt+0x28615>
  42691e:	mov    QWORD PTR [rsp+0x20],rdi
  426923:	lea    rax,[r13+0x1]
  426927:	mov    QWORD PTR [rsp+0x10],rax
  42692c:	mov    QWORD PTR [rsp+0x18],r13
  426931:	jmp    42695e <__ctype_b_loc@plt+0x2468e>
  426933:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42693d:	nop    DWORD PTR [rax]
  426940:	xor    r15d,0x1
  426944:	test   r15d,r15d
  426947:	mov    r12,QWORD PTR [rsp+0x20]
  42694c:	mov    r13,QWORD PTR [rsp+0x18]
  426951:	lea    rbp,[rip+0x3f8d]        # 42a8e5 <__ctype_b_loc@plt+0x28615>
  426958:	je     426f6f <__ctype_b_loc@plt+0x24c9f>
  42695e:	mov    r14,rbx
  426961:	mov    al,BYTE PTR [rbx]
  426963:	movsx  ecx,al
  426966:	cmp    ecx,0x25
  426969:	jne    426bc8 <__ctype_b_loc@plt+0x248f8>
  42696f:	movsx  eax,BYTE PTR [r14+0x1]
  426974:	cmp    eax,0x66
  426977:	jne    426bf3 <__ctype_b_loc@plt+0x24923>
  42697d:	cmp    BYTE PTR [r14+0x2],0x5b
  426982:	jne    426990 <__ctype_b_loc@plt+0x246c0>
  426984:	lea    r15,[r14+0x3]
  426988:	jmp    4269e0 <__ctype_b_loc@plt+0x24710>
  42698a:	nop    WORD PTR [rax+rax*1+0x0]
  426990:	mov    rdi,QWORD PTR [r12+0x10]
  426995:	lea    rsi,[rip+0x3ec6]        # 42a862 <__ctype_b_loc@plt+0x28592>
  42699c:	xor    eax,eax
  42699e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4269a3:	movsx  eax,BYTE PTR [r14+0x2]
  4269a8:	lea    r15,[r14+0x3]
  4269ac:	cmp    eax,0x5b
  4269af:	je     4269e0 <__ctype_b_loc@plt+0x24710>
  4269b1:	cmp    eax,0x25
  4269b4:	jne    426a45 <__ctype_b_loc@plt+0x24775>
  4269ba:	cmp    BYTE PTR [r15],0x0
  4269be:	jne    4269d3 <__ctype_b_loc@plt+0x24703>
  4269c0:	mov    rdi,QWORD PTR [r12+0x10]
  4269c5:	lea    rsi,[rip+0x3ef6]        # 42a8c2 <__ctype_b_loc@plt+0x285f2>
  4269cc:	xor    eax,eax
  4269ce:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  4269d3:	lea    rbx,[r14+0x4]
  4269d7:	jmp    426a50 <__ctype_b_loc@plt+0x24780>
  4269d9:	nop    DWORD PTR [rax+0x0]
  4269e0:	lea    rbx,[r14+0x4]
  4269e4:	xor    eax,eax
  4269e6:	cmp    BYTE PTR [r14+0x3],0x5e
  4269eb:	sete   al
  4269ee:	cmovne rbx,r15
  4269f2:	mov    al,BYTE PTR [rax+r14*1+0x3]
  4269f7:	test   al,al
  4269f9:	jne    426a1f <__ctype_b_loc@plt+0x2474f>
  4269fb:	jmp    426a0e <__ctype_b_loc@plt+0x2473e>
  4269fd:	nop    DWORD PTR [rax]
  426a00:	mov    rbx,rcx
  426a03:	movzx  eax,BYTE PTR [rcx]
  426a06:	cmp    al,0x5d
  426a08:	je     426a40 <__ctype_b_loc@plt+0x24770>
  426a0a:	test   al,al
  426a0c:	jne    426a1f <__ctype_b_loc@plt+0x2474f>
  426a0e:	mov    rdi,QWORD PTR [r12+0x10]
  426a13:	mov    rsi,rbp
  426a16:	xor    eax,eax
  426a18:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426a1d:	mov    al,BYTE PTR [rbx]
  426a1f:	lea    rcx,[rbx+0x1]
  426a23:	cmp    al,0x25
  426a25:	jne    426a00 <__ctype_b_loc@plt+0x24730>
  426a27:	cmp    BYTE PTR [rbx+0x1],0x0
  426a2b:	je     426a00 <__ctype_b_loc@plt+0x24730>
  426a2d:	add    rbx,0x2
  426a31:	mov    rcx,rbx
  426a34:	jmp    426a00 <__ctype_b_loc@plt+0x24730>
  426a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a40:	inc    rbx
  426a43:	jmp    426a50 <__ctype_b_loc@plt+0x24780>
  426a45:	mov    rbx,r15
  426a48:	nop    DWORD PTR [rax+rax*1+0x0]
  426a50:	add    r14,0x2
  426a54:	cmp    r13,QWORD PTR [r12]
  426a58:	je     426a60 <__ctype_b_loc@plt+0x24790>
  426a5a:	mov    bpl,BYTE PTR [r13-0x1]
  426a5e:	jmp    426a62 <__ctype_b_loc@plt+0x24792>
  426a60:	xor    ebp,ebp
  426a62:	lea    r13,[rbx-0x1]
  426a66:	xor    eax,eax
  426a68:	cmp    BYTE PTR [r15],0x5e
  426a6c:	setne  al
  426a6f:	mov    DWORD PTR [rsp+0x8],eax
  426a73:	cmove  r14,r15
  426a77:	lea    r12,[r14+0x1]
  426a7b:	cmp    r12,r13
  426a7e:	jae    426bb0 <__ctype_b_loc@plt+0x248e0>
  426a84:	movzx  eax,bpl
  426a88:	mov    DWORD PTR [rsp+0xc],eax
  426a8c:	mov    rax,r12
  426a8f:	mov    r15,r14
  426a92:	jmp    426ab4 <__ctype_b_loc@plt+0x247e4>
  426a94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a9e:	xchg   ax,ax
  426aa0:	cmp    cl,bpl
  426aa3:	je     426b10 <__ctype_b_loc@plt+0x24840>
  426aa5:	mov    r15,rax
  426aa8:	inc    rax
  426aab:	cmp    rax,r13
  426aae:	jae    426bb0 <__ctype_b_loc@plt+0x248e0>
  426ab4:	movzx  ecx,BYTE PTR [r15+0x1]
  426ab9:	movzx  esi,BYTE PTR [r15+0x2]
  426abe:	cmp    cl,0x25
  426ac1:	jne    426ae0 <__ctype_b_loc@plt+0x24810>
  426ac3:	mov    edi,DWORD PTR [rsp+0xc]
  426ac7:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  426acc:	test   eax,eax
  426ace:	jne    426b10 <__ctype_b_loc@plt+0x24840>
  426ad0:	add    r15,0x2
  426ad4:	mov    rax,r15
  426ad7:	jmp    426aa5 <__ctype_b_loc@plt+0x247d5>
  426ad9:	nop    DWORD PTR [rax+0x0]
  426ae0:	cmp    sil,0x2d
  426ae4:	jne    426aa0 <__ctype_b_loc@plt+0x247d0>
  426ae6:	add    r15,0x3
  426aea:	cmp    r15,r13
  426aed:	jae    426aa0 <__ctype_b_loc@plt+0x247d0>
  426aef:	cmp    cl,bpl
  426af2:	jbe    426af9 <__ctype_b_loc@plt+0x24829>
  426af4:	mov    rax,r15
  426af7:	jmp    426aa5 <__ctype_b_loc@plt+0x247d5>
  426af9:	mov    rax,r15
  426afc:	cmp    BYTE PTR [r15],bpl
  426aff:	jb     426aa5 <__ctype_b_loc@plt+0x247d5>
  426b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  426b10:	mov    r15d,DWORD PTR [rsp+0x8]
  426b15:	mov    eax,r15d
  426b18:	test   eax,eax
  426b1a:	jne    426f6f <__ctype_b_loc@plt+0x24c9f>
  426b20:	cmp    r12,r13
  426b23:	jae    426940 <__ctype_b_loc@plt+0x24670>
  426b29:	mov    rax,QWORD PTR [rsp+0x18]
  426b2e:	movzx  ebp,BYTE PTR [rax]
  426b31:	jmp    426b58 <__ctype_b_loc@plt+0x24888>
  426b33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b3d:	nop    DWORD PTR [rax]
  426b40:	cmp    al,bpl
  426b43:	je     426944 <__ctype_b_loc@plt+0x24674>
  426b49:	mov    r14,r12
  426b4c:	inc    r12
  426b4f:	cmp    r12,r13
  426b52:	jae    426940 <__ctype_b_loc@plt+0x24670>
  426b58:	movzx  eax,BYTE PTR [r14+0x1]
  426b5d:	movzx  esi,BYTE PTR [r14+0x2]
  426b62:	cmp    al,0x25
  426b64:	jne    426b80 <__ctype_b_loc@plt+0x248b0>
  426b66:	mov    edi,ebp
  426b68:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  426b6d:	test   eax,eax
  426b6f:	jne    426944 <__ctype_b_loc@plt+0x24674>
  426b75:	add    r14,0x2
  426b79:	mov    r12,r14
  426b7c:	jmp    426b49 <__ctype_b_loc@plt+0x24879>
  426b7e:	xchg   ax,ax
  426b80:	cmp    sil,0x2d
  426b84:	jne    426b40 <__ctype_b_loc@plt+0x24870>
  426b86:	add    r14,0x3
  426b8a:	cmp    r14,r13
  426b8d:	jae    426b40 <__ctype_b_loc@plt+0x24870>
  426b8f:	cmp    al,bpl
  426b92:	jbe    426b99 <__ctype_b_loc@plt+0x248c9>
  426b94:	mov    r12,r14
  426b97:	jmp    426b49 <__ctype_b_loc@plt+0x24879>
  426b99:	mov    r12,r14
  426b9c:	cmp    BYTE PTR [r14],bpl
  426b9f:	jb     426b49 <__ctype_b_loc@plt+0x24879>
  426ba1:	jmp    426944 <__ctype_b_loc@plt+0x24674>
  426ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426bb0:	mov    r15d,DWORD PTR [rsp+0x8]
  426bb5:	mov    eax,r15d
  426bb8:	xor    eax,0x1
  426bbb:	test   eax,eax
  426bbd:	je     426b20 <__ctype_b_loc@plt+0x24850>
  426bc3:	jmp    426f6f <__ctype_b_loc@plt+0x24c9f>
  426bc8:	cmp    ecx,0x27
  426bcb:	jg     426c52 <__ctype_b_loc@plt+0x24982>
  426bd1:	test   ecx,ecx
  426bd3:	je     426e31 <__ctype_b_loc@plt+0x24b61>
  426bd9:	cmp    ecx,0x24
  426bdc:	jne    426c64 <__ctype_b_loc@plt+0x24994>
  426be2:	cmp    BYTE PTR [r14+0x1],0x0
  426be7:	je     427079 <__ctype_b_loc@plt+0x24da9>
  426bed:	lea    rbx,[r14+0x1]
  426bf1:	jmp    426c2d <__ctype_b_loc@plt+0x2495d>
  426bf3:	cmp    eax,0x62
  426bf6:	je     426d02 <__ctype_b_loc@plt+0x24a32>
  426bfc:	movzx  ebx,al
  426bff:	call   4022d0 <__ctype_b_loc@plt>
  426c04:	mov    rax,QWORD PTR [rax]
  426c07:	test   BYTE PTR [rax+rbx*2+0x1],0x8
  426c0c:	jne    426daf <__ctype_b_loc@plt+0x24adf>
  426c12:	test   bl,bl
  426c14:	jne    426c29 <__ctype_b_loc@plt+0x24959>
  426c16:	mov    rdi,QWORD PTR [r12+0x10]
  426c1b:	lea    rsi,[rip+0x3ca0]        # 42a8c2 <__ctype_b_loc@plt+0x285f2>
  426c22:	xor    eax,eax
  426c24:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426c29:	lea    rbx,[r14+0x2]
  426c2d:	mov    r15,QWORD PTR [r12+0x8]
  426c32:	cmp    r13,r15
  426c35:	jae    426cc6 <__ctype_b_loc@plt+0x249f6>
  426c3b:	movzx  edi,BYTE PTR [r13+0x0]
  426c40:	mov    rsi,r14
  426c43:	mov    rdx,rbx
  426c46:	call   427090 <__ctype_b_loc@plt+0x24dc0>
  426c4b:	test   eax,eax
  426c4d:	setne  al
  426c50:	jmp    426cc8 <__ctype_b_loc@plt+0x249f8>
  426c52:	cmp    ecx,0x29
  426c55:	je     426e39 <__ctype_b_loc@plt+0x24b69>
  426c5b:	cmp    ecx,0x28
  426c5e:	je     426e88 <__ctype_b_loc@plt+0x24bb8>
  426c64:	lea    rbx,[r14+0x1]
  426c68:	cmp    al,0x5b
  426c6a:	jne    426c2d <__ctype_b_loc@plt+0x2495d>
  426c6c:	lea    rax,[r14+0x2]
  426c70:	xor    ecx,ecx
  426c72:	cmp    BYTE PTR [r14+0x1],0x5e
  426c77:	sete   cl
  426c7a:	cmove  rbx,rax
  426c7e:	mov    al,BYTE PTR [rcx+r14*1+0x1]
  426c83:	test   al,al
  426c85:	jne    426caf <__ctype_b_loc@plt+0x249df>
  426c87:	jmp    426c9e <__ctype_b_loc@plt+0x249ce>
  426c89:	nop    DWORD PTR [rax+0x0]
  426c90:	mov    rbx,rcx
  426c93:	movzx  eax,BYTE PTR [rcx]
  426c96:	cmp    al,0x5d
  426c98:	je     426cfa <__ctype_b_loc@plt+0x24a2a>
  426c9a:	test   al,al
  426c9c:	jne    426caf <__ctype_b_loc@plt+0x249df>
  426c9e:	mov    rdi,QWORD PTR [r12+0x10]
  426ca3:	mov    rsi,rbp
  426ca6:	xor    eax,eax
  426ca8:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426cad:	mov    al,BYTE PTR [rbx]
  426caf:	lea    rcx,[rbx+0x1]
  426cb3:	cmp    al,0x25
  426cb5:	jne    426c90 <__ctype_b_loc@plt+0x249c0>
  426cb7:	cmp    BYTE PTR [rbx+0x1],0x0
  426cbb:	je     426c90 <__ctype_b_loc@plt+0x249c0>
  426cbd:	add    rbx,0x2
  426cc1:	mov    rcx,rbx
  426cc4:	jmp    426c90 <__ctype_b_loc@plt+0x249c0>
  426cc6:	xor    eax,eax
  426cc8:	movsx  ecx,BYTE PTR [rbx]
  426ccb:	cmp    ecx,0x3f
  426cce:	jne    426d82 <__ctype_b_loc@plt+0x24ab2>
  426cd4:	test   al,al
  426cd6:	je     426cf2 <__ctype_b_loc@plt+0x24a22>
  426cd8:	lea    rdx,[rbx+0x1]
  426cdc:	mov    rdi,r12
  426cdf:	mov    rsi,QWORD PTR [rsp+0x10]
  426ce4:	call   426900 <__ctype_b_loc@plt+0x24630>
  426ce9:	test   rax,rax
  426cec:	jne    426f71 <__ctype_b_loc@plt+0x24ca1>
  426cf2:	inc    rbx
  426cf5:	jmp    42695e <__ctype_b_loc@plt+0x2468e>
  426cfa:	inc    rbx
  426cfd:	jmp    426c2d <__ctype_b_loc@plt+0x2495d>
  426d02:	mov    al,BYTE PTR [r14+0x2]
  426d06:	test   al,al
  426d08:	je     426d11 <__ctype_b_loc@plt+0x24a41>
  426d0a:	cmp    BYTE PTR [r14+0x3],0x0
  426d0f:	jne    426d28 <__ctype_b_loc@plt+0x24a58>
  426d11:	mov    rdi,QWORD PTR [r12+0x10]
  426d16:	lea    rsi,[rip+0x3b92]        # 42a8af <__ctype_b_loc@plt+0x285df>
  426d1d:	xor    eax,eax
  426d1f:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426d24:	mov    al,BYTE PTR [r14+0x2]
  426d28:	cmp    BYTE PTR [r13+0x0],al
  426d2c:	jne    426f6f <__ctype_b_loc@plt+0x24c9f>
  426d32:	inc    r13
  426d35:	mov    rcx,QWORD PTR [r12+0x8]
  426d3a:	cmp    r13,rcx
  426d3d:	jae    426f6f <__ctype_b_loc@plt+0x24c9f>
  426d43:	mov    dl,BYTE PTR [r14+0x3]
  426d47:	mov    esi,0x1
  426d4c:	jmp    426d66 <__ctype_b_loc@plt+0x24a96>
  426d4e:	xchg   ax,ax
  426d50:	xor    edi,edi
  426d52:	cmp    bl,al
  426d54:	sete   dil
  426d58:	add    esi,edi
  426d5a:	inc    r13
  426d5d:	cmp    rcx,r13
  426d60:	je     426f6f <__ctype_b_loc@plt+0x24c9f>
  426d66:	movzx  ebx,BYTE PTR [r13+0x0]
  426d6b:	cmp    bl,dl
  426d6d:	jne    426d50 <__ctype_b_loc@plt+0x24a80>
  426d6f:	dec    esi
  426d71:	jne    426d5a <__ctype_b_loc@plt+0x24a8a>
  426d73:	inc    r13
  426d76:	add    r14,0x4
  426d7a:	mov    rbx,r14
  426d7d:	jmp    426923 <__ctype_b_loc@plt+0x24653>
  426d82:	cmp    ecx,0x2a
  426d85:	je     426fd9 <__ctype_b_loc@plt+0x24d09>
  426d8b:	cmp    ecx,0x2b
  426d8e:	je     426f80 <__ctype_b_loc@plt+0x24cb0>
  426d94:	cmp    ecx,0x2d
  426d97:	je     427032 <__ctype_b_loc@plt+0x24d62>
  426d9d:	mov    r13,QWORD PTR [rsp+0x10]
  426da2:	test   al,al
  426da4:	jne    426923 <__ctype_b_loc@plt+0x24653>
  426daa:	jmp    426f6f <__ctype_b_loc@plt+0x24c9f>
  426daf:	add    ebx,0xffffffcf
  426db2:	js     426dcd <__ctype_b_loc@plt+0x24afd>
  426db4:	cmp    ebx,DWORD PTR [r12+0x18]
  426db9:	jge    426dcd <__ctype_b_loc@plt+0x24afd>
  426dbb:	movsxd rax,ebx
  426dbe:	shl    rax,0x4
  426dc2:	mov    r15,QWORD PTR [r12+rax*1+0x28]
  426dc7:	cmp    r15,0xffffffffffffffff
  426dcb:	jne    426de7 <__ctype_b_loc@plt+0x24b17>
  426dcd:	mov    rdi,QWORD PTR [r12+0x10]
  426dd2:	xor    ebx,ebx
  426dd4:	lea    rsi,[rip+0x3b2a]        # 42a905 <__ctype_b_loc@plt+0x28635>
  426ddb:	xor    eax,eax
  426ddd:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426de2:	mov    r15,QWORD PTR [r12+0x28]
  426de7:	mov    rax,QWORD PTR [r12+0x8]
  426dec:	sub    rax,r13
  426def:	cmp    rax,r15
  426df2:	jb     426f6f <__ctype_b_loc@plt+0x24c9f>
  426df8:	movsxd rax,ebx
  426dfb:	shl    rax,0x4
  426dff:	mov    rdi,QWORD PTR [r12+rax*1+0x20]
  426e04:	mov    rsi,r13
  426e07:	mov    rdx,r15
  426e0a:	call   4021f0 <bcmp@plt>
  426e0f:	add    r13,r15
  426e12:	je     426f6f <__ctype_b_loc@plt+0x24c9f>
  426e18:	test   eax,eax
  426e1a:	mov    eax,0x0
  426e1f:	jne    426f71 <__ctype_b_loc@plt+0x24ca1>
  426e25:	add    r14,0x2
  426e29:	mov    rbx,r14
  426e2c:	jmp    426923 <__ctype_b_loc@plt+0x24653>
  426e31:	mov    rax,r13
  426e34:	jmp    426f71 <__ctype_b_loc@plt+0x24ca1>
  426e39:	inc    r14
  426e3c:	movsxd rcx,DWORD PTR [r12+0x18]
  426e41:	mov    rbx,rcx
  426e44:	shl    rbx,0x20
  426e48:	lea    rax,[rcx+0x1]
  426e4c:	shl    rcx,0x4
  426e50:	add    rcx,r12
  426e53:	add    rcx,0x18
  426e57:	movabs rdx,0xffffffff00000000
  426e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  426e70:	dec    rax
  426e73:	jle    426ecf <__ctype_b_loc@plt+0x24bff>
  426e75:	add    rbx,rdx
  426e78:	cmp    QWORD PTR [rcx],0xffffffffffffffff
  426e7c:	lea    rcx,[rcx-0x10]
  426e80:	jne    426e70 <__ctype_b_loc@plt+0x24ba0>
  426e82:	sar    rbx,0x20
  426e86:	jmp    426ee4 <__ctype_b_loc@plt+0x24c14>
  426e88:	cmp    BYTE PTR [r14+0x1],0x29
  426e8d:	jne    426f19 <__ctype_b_loc@plt+0x24c49>
  426e93:	add    r14,0x2
  426e97:	movsxd rbx,DWORD PTR [r12+0x18]
  426e9c:	cmp    rbx,0x20
  426ea0:	jl     426eb5 <__ctype_b_loc@plt+0x24be5>
  426ea2:	mov    rdi,QWORD PTR [r12+0x10]
  426ea7:	lea    rsi,[rip+0x39d7]        # 42a885 <__ctype_b_loc@plt+0x285b5>
  426eae:	xor    eax,eax
  426eb0:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426eb5:	mov    rax,rbx
  426eb8:	shl    rax,0x4
  426ebc:	mov    QWORD PTR [r12+rax*1+0x20],r13
  426ec1:	mov    QWORD PTR [r12+rax*1+0x28],0xfffffffffffffffe
  426eca:	jmp    426f4f <__ctype_b_loc@plt+0x24c7f>
  426ecf:	mov    rdi,QWORD PTR [r12+0x10]
  426ed4:	lea    rsi,[rip+0x39bc]        # 42a897 <__ctype_b_loc@plt+0x285c7>
  426edb:	xor    ebx,ebx
  426edd:	xor    eax,eax
  426edf:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426ee4:	shl    rbx,0x4
  426ee8:	mov    rax,r13
  426eeb:	sub    rax,QWORD PTR [r12+rbx*1+0x20]
  426ef0:	mov    QWORD PTR [r12+rbx*1+0x28],rax
  426ef5:	mov    rdi,r12
  426ef8:	mov    rsi,r13
  426efb:	mov    rdx,r14
  426efe:	call   426900 <__ctype_b_loc@plt+0x24630>
  426f03:	test   rax,rax
  426f06:	jne    426f71 <__ctype_b_loc@plt+0x24ca1>
  426f08:	lea    rax,[r12+rbx*1]
  426f0c:	add    rax,0x28
  426f10:	mov    QWORD PTR [rax],0xffffffffffffffff
  426f17:	jmp    426f6f <__ctype_b_loc@plt+0x24c9f>
  426f19:	inc    r14
  426f1c:	movsxd rbx,DWORD PTR [r12+0x18]
  426f21:	cmp    rbx,0x20
  426f25:	jl     426f3a <__ctype_b_loc@plt+0x24c6a>
  426f27:	mov    rdi,QWORD PTR [r12+0x10]
  426f2c:	lea    rsi,[rip+0x3952]        # 42a885 <__ctype_b_loc@plt+0x285b5>
  426f33:	xor    eax,eax
  426f35:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  426f3a:	mov    rax,rbx
  426f3d:	shl    rax,0x4
  426f41:	mov    QWORD PTR [r12+rax*1+0x20],r13
  426f46:	mov    QWORD PTR [r12+rax*1+0x28],0xffffffffffffffff
  426f4f:	lea    eax,[rbx+0x1]
  426f52:	mov    DWORD PTR [r12+0x18],eax
  426f57:	mov    rdi,r12
  426f5a:	mov    rsi,r13
  426f5d:	mov    rdx,r14
  426f60:	call   426900 <__ctype_b_loc@plt+0x24630>
  426f65:	test   rax,rax
  426f68:	jne    426f71 <__ctype_b_loc@plt+0x24ca1>
  426f6a:	dec    DWORD PTR [r12+0x18]
  426f6f:	xor    eax,eax
  426f71:	add    rsp,0x28
  426f75:	pop    rbx
  426f76:	pop    r12
  426f78:	pop    r13
  426f7a:	pop    r14
  426f7c:	pop    r15
  426f7e:	pop    rbp
  426f7f:	ret    
  426f80:	test   al,al
  426f82:	je     426f6f <__ctype_b_loc@plt+0x24c9f>
  426f84:	inc    r13
  426f87:	xor    ebp,ebp
  426f89:	cmp    r13,r15
  426f8c:	jae    426fb6 <__ctype_b_loc@plt+0x24ce6>
  426f8e:	movzx  edi,BYTE PTR [r13+rbp*1+0x0]
  426f94:	mov    rsi,r14
  426f97:	mov    rdx,rbx
  426f9a:	call   427090 <__ctype_b_loc@plt+0x24dc0>
  426f9f:	test   eax,eax
  426fa1:	je     426fb6 <__ctype_b_loc@plt+0x24ce6>
  426fa3:	lea    rax,[rbp*1+0x1]
  426fab:	add    rax,r13
  426fae:	inc    rbp
  426fb1:	cmp    rax,r15
  426fb4:	jb     426f8e <__ctype_b_loc@plt+0x24cbe>
  426fb6:	inc    rbx
  426fb9:	test   rbp,rbp
  426fbc:	js     426f6f <__ctype_b_loc@plt+0x24c9f>
  426fbe:	mov    rsi,r13
  426fc1:	add    rsi,rbp
  426fc4:	mov    rdi,r12
  426fc7:	mov    rdx,rbx
  426fca:	call   426900 <__ctype_b_loc@plt+0x24630>
  426fcf:	dec    rbp
  426fd2:	test   rax,rax
  426fd5:	je     426fb9 <__ctype_b_loc@plt+0x24ce9>
  426fd7:	jmp    426f71 <__ctype_b_loc@plt+0x24ca1>
  426fd9:	xor    ebp,ebp
  426fdb:	cmp    r13,r15
  426fde:	jae    427008 <__ctype_b_loc@plt+0x24d38>
  426fe0:	movzx  edi,BYTE PTR [r13+rbp*1+0x0]
  426fe6:	mov    rsi,r14
  426fe9:	mov    rdx,rbx
  426fec:	call   427090 <__ctype_b_loc@plt+0x24dc0>
  426ff1:	test   eax,eax
  426ff3:	je     427008 <__ctype_b_loc@plt+0x24d38>
  426ff5:	lea    rax,[rbp*1+0x1]
  426ffd:	add    rax,r13
  427000:	inc    rbp
  427003:	cmp    rax,r15
  427006:	jb     426fe0 <__ctype_b_loc@plt+0x24d10>
  427008:	inc    rbx
  42700b:	test   rbp,rbp
  42700e:	js     426f6f <__ctype_b_loc@plt+0x24c9f>
  427014:	mov    rsi,r13
  427017:	add    rsi,rbp
  42701a:	mov    rdi,r12
  42701d:	mov    rdx,rbx
  427020:	call   426900 <__ctype_b_loc@plt+0x24630>
  427025:	dec    rbp
  427028:	test   rax,rax
  42702b:	je     42700b <__ctype_b_loc@plt+0x24d3b>
  42702d:	jmp    426f71 <__ctype_b_loc@plt+0x24ca1>
  427032:	lea    r15,[rbx+0x1]
  427036:	mov    rdi,r12
  427039:	mov    rsi,r13
  42703c:	mov    rdx,r15
  42703f:	call   426900 <__ctype_b_loc@plt+0x24630>
  427044:	test   rax,rax
  427047:	jne    426f71 <__ctype_b_loc@plt+0x24ca1>
  42704d:	cmp    r13,QWORD PTR [r12+0x8]
  427052:	jae    426f6f <__ctype_b_loc@plt+0x24c9f>
  427058:	movzx  edi,BYTE PTR [r13+0x0]
  42705d:	mov    rsi,r14
  427060:	mov    rdx,rbx
  427063:	call   427090 <__ctype_b_loc@plt+0x24dc0>
  427068:	inc    r13
  42706b:	test   eax,eax
  42706d:	mov    eax,0x0
  427072:	jne    427036 <__ctype_b_loc@plt+0x24d66>
  427074:	jmp    426f71 <__ctype_b_loc@plt+0x24ca1>
  427079:	xor    eax,eax
  42707b:	cmp    r13,QWORD PTR [r12+0x8]
  427080:	cmove  rax,r13
  427084:	jmp    426f71 <__ctype_b_loc@plt+0x24ca1>
  427089:	nop    DWORD PTR [rax+0x0]
  427090:	push   rbp
  427091:	push   r15
  427093:	push   r14
  427095:	push   rbx
  427096:	push   rax
  427097:	mov    r15d,edi
  42709a:	movsx  eax,BYTE PTR [rsi]
  42709d:	cmp    eax,0x5b
  4270a0:	je     4270ca <__ctype_b_loc@plt+0x24dfa>
  4270a2:	cmp    eax,0x2e
  4270a5:	je     427167 <__ctype_b_loc@plt+0x24e97>
  4270ab:	cmp    eax,0x25
  4270ae:	jne    42716f <__ctype_b_loc@plt+0x24e9f>
  4270b4:	movzx  esi,BYTE PTR [rsi+0x1]
  4270b8:	mov    edi,r15d
  4270bb:	add    rsp,0x8
  4270bf:	pop    rbx
  4270c0:	pop    r14
  4270c2:	pop    r15
  4270c4:	pop    rbp
  4270c5:	jmp    427190 <__ctype_b_loc@plt+0x24ec0>
  4270ca:	mov    rbx,rdx
  4270cd:	dec    rbx
  4270d0:	lea    rbp,[rsi+0x1]
  4270d4:	xor    r14d,r14d
  4270d7:	cmp    BYTE PTR [rsi+0x1],0x5e
  4270db:	setne  r14b
  4270df:	cmovne rbp,rsi
  4270e3:	lea    rax,[rbp+0x1]
  4270e7:	cmp    rax,rbx
  4270ea:	jb     427110 <__ctype_b_loc@plt+0x24e40>
  4270ec:	jmp    42717e <__ctype_b_loc@plt+0x24eae>
  4270f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4270fb:	nop    DWORD PTR [rax+rax*1+0x0]
  427100:	cmp    ecx,r15d
  427103:	je     427182 <__ctype_b_loc@plt+0x24eb2>
  427105:	mov    rbp,rax
  427108:	inc    rax
  42710b:	cmp    rax,rbx
  42710e:	jae    42717e <__ctype_b_loc@plt+0x24eae>
  427110:	movzx  ecx,BYTE PTR [rbp+0x1]
  427114:	movzx  esi,BYTE PTR [rbp+0x2]
  427118:	cmp    ecx,0x25
  42711b:	jne    427140 <__ctype_b_loc@plt+0x24e70>
  42711d:	mov    edi,r15d
  427120:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  427125:	test   eax,eax
  427127:	jne    427182 <__ctype_b_loc@plt+0x24eb2>
  427129:	add    rbp,0x2
  42712d:	mov    rax,rbp
  427130:	jmp    427105 <__ctype_b_loc@plt+0x24e35>
  427132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42713c:	nop    DWORD PTR [rax+0x0]
  427140:	cmp    sil,0x2d
  427144:	jne    427100 <__ctype_b_loc@plt+0x24e30>
  427146:	add    rbp,0x3
  42714a:	cmp    rbp,rbx
  42714d:	jae    427100 <__ctype_b_loc@plt+0x24e30>
  42714f:	cmp    ecx,r15d
  427152:	jle    427159 <__ctype_b_loc@plt+0x24e89>
  427154:	mov    rax,rbp
  427157:	jmp    427105 <__ctype_b_loc@plt+0x24e35>
  427159:	movzx  ecx,BYTE PTR [rbp+0x0]
  42715d:	mov    rax,rbp
  427160:	cmp    ecx,r15d
  427163:	jl     427105 <__ctype_b_loc@plt+0x24e35>
  427165:	jmp    427182 <__ctype_b_loc@plt+0x24eb2>
  427167:	mov    r14d,0x1
  42716d:	jmp    427182 <__ctype_b_loc@plt+0x24eb2>
  42716f:	movzx  eax,al
  427172:	xor    r14d,r14d
  427175:	cmp    eax,r15d
  427178:	sete   r14b
  42717c:	jmp    427182 <__ctype_b_loc@plt+0x24eb2>
  42717e:	xor    r14d,0x1
  427182:	mov    eax,r14d
  427185:	add    rsp,0x8
  427189:	pop    rbx
  42718a:	pop    r14
  42718c:	pop    r15
  42718e:	pop    rbp
  42718f:	ret    
  427190:	push   rbp
  427191:	push   r14
  427193:	push   rbx
  427194:	mov    ebx,esi
  427196:	mov    ebp,edi
  427198:	lea    ecx,[rbx+0x80]
  42719e:	movsxd r14,esi
  4271a1:	mov    eax,esi
  4271a3:	cmp    ecx,0x17f
  4271a9:	ja     4271b7 <__ctype_b_loc@plt+0x24ee7>
  4271ab:	call   4022c0 <__ctype_tolower_loc@plt>
  4271b0:	mov    rax,QWORD PTR [rax]
  4271b3:	mov    eax,DWORD PTR [rax+r14*4]
  4271b7:	add    eax,0xffffff9f
  4271ba:	cmp    eax,0x19
  4271bd:	ja     4271e9 <__ctype_b_loc@plt+0x24f19>
  4271bf:	lea    rcx,[rip+0x28da]        # 429aa0 <__ctype_b_loc@plt+0x277d0>
  4271c6:	movsxd rax,DWORD PTR [rcx+rax*4]
  4271ca:	add    rax,rcx
  4271cd:	jmp    rax
  4271cf:	call   4022d0 <__ctype_b_loc@plt>
  4271d4:	mov    rcx,QWORD PTR [rax]
  4271d7:	movsxd rdx,ebp
  4271da:	movzx  ebx,WORD PTR [rcx+rdx*2]
  4271de:	and    ebx,0x400
  4271e4:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  4271e9:	xor    eax,eax
  4271eb:	cmp    ebx,ebp
  4271ed:	sete   al
  4271f0:	jmp    4272c9 <__ctype_b_loc@plt+0x24ff9>
  4271f5:	call   4022d0 <__ctype_b_loc@plt>
  4271fa:	mov    rcx,QWORD PTR [rax]
  4271fd:	movsxd rdx,ebp
  427200:	movzx  ebx,WORD PTR [rcx+rdx*2]
  427204:	and    ebx,0x2
  427207:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  42720c:	call   4022d0 <__ctype_b_loc@plt>
  427211:	mov    rcx,QWORD PTR [rax]
  427214:	movsxd rdx,ebp
  427217:	movzx  ebx,WORD PTR [rcx+rdx*2]
  42721b:	and    ebx,0x800
  427221:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  427226:	call   4022d0 <__ctype_b_loc@plt>
  42722b:	mov    rcx,QWORD PTR [rax]
  42722e:	movsxd rdx,ebp
  427231:	movzx  ebx,WORD PTR [rcx+rdx*2]
  427235:	and    ebx,0x200
  42723b:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  42723d:	call   4022d0 <__ctype_b_loc@plt>
  427242:	mov    rcx,QWORD PTR [rax]
  427245:	movsxd rdx,ebp
  427248:	movzx  ebx,WORD PTR [rcx+rdx*2]
  42724c:	and    ebx,0x4
  42724f:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  427251:	call   4022d0 <__ctype_b_loc@plt>
  427256:	mov    rcx,QWORD PTR [rax]
  427259:	movsxd rdx,ebp
  42725c:	movzx  ebx,WORD PTR [rcx+rdx*2]
  427260:	and    ebx,0x2000
  427266:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  427268:	call   4022d0 <__ctype_b_loc@plt>
  42726d:	mov    rcx,QWORD PTR [rax]
  427270:	movsxd rdx,ebp
  427273:	movzx  ebx,WORD PTR [rcx+rdx*2]
  427277:	and    ebx,0x100
  42727d:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  42727f:	call   4022d0 <__ctype_b_loc@plt>
  427284:	mov    rcx,QWORD PTR [rax]
  427287:	movsxd rdx,ebp
  42728a:	movzx  ebx,WORD PTR [rcx+rdx*2]
  42728e:	and    ebx,0x8
  427291:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  427293:	call   4022d0 <__ctype_b_loc@plt>
  427298:	mov    rcx,QWORD PTR [rax]
  42729b:	movsxd rdx,ebp
  42729e:	movzx  ebx,WORD PTR [rcx+rdx*2]
  4272a2:	and    ebx,0x1000
  4272a8:	jmp    4272b6 <__ctype_b_loc@plt+0x24fe6>
  4272aa:	xor    ebx,ebx
  4272ac:	test   ebp,ebp
  4272ae:	sete   bl
  4272b1:	call   4022d0 <__ctype_b_loc@plt>
  4272b6:	mov    rcx,QWORD PTR [rax]
  4272b9:	xor    eax,eax
  4272bb:	test   ebx,ebx
  4272bd:	sete   al
  4272c0:	test   BYTE PTR [rcx+r14*2+0x1],0x2
  4272c6:	cmovne eax,ebx
  4272c9:	pop    rbx
  4272ca:	pop    r14
  4272cc:	pop    rbp
  4272cd:	ret    
  4272ce:	xchg   ax,ax
  4272d0:	push   r15
  4272d2:	push   r14
  4272d4:	push   r12
  4272d6:	push   rbx
  4272d7:	push   rax
  4272d8:	mov    rbx,rdi
  4272db:	cmp    DWORD PTR [rdi+0x18],esi
  4272de:	jle    42731d <__ctype_b_loc@plt+0x2504d>
  4272e0:	movsxd r12,esi
  4272e3:	shl    r12,0x4
  4272e7:	mov    r14,QWORD PTR [rbx+r12*1+0x28]
  4272ec:	cmp    r14,0xffffffffffffffff
  4272f0:	je     427341 <__ctype_b_loc@plt+0x25071>
  4272f2:	mov    r15,QWORD PTR [rbx+0x10]
  4272f6:	mov    r12,QWORD PTR [rbx+r12*1+0x20]
  4272fb:	cmp    r14,0xfffffffffffffffe
  4272ff:	jne    42735c <__ctype_b_loc@plt+0x2508c>
  427301:	sub    r12,QWORD PTR [rbx]
  427304:	inc    r12
  427307:	mov    rax,QWORD PTR [r15+0x10]
  42730b:	vcvtsi2sd xmm0,xmm0,r12
  427310:	vmovsd QWORD PTR [rax],xmm0
  427314:	mov    DWORD PTR [rax+0x8],0x3
  42731b:	jmp    42738e <__ctype_b_loc@plt+0x250be>
  42731d:	mov    rbx,QWORD PTR [rbx+0x10]
  427321:	test   esi,esi
  427323:	je     427395 <__ctype_b_loc@plt+0x250c5>
  427325:	lea    rsi,[rip+0x35d9]        # 42a905 <__ctype_b_loc@plt+0x28635>
  42732c:	mov    rdi,rbx
  42732f:	xor    eax,eax
  427331:	add    rsp,0x8
  427335:	pop    rbx
  427336:	pop    r12
  427338:	pop    r14
  42733a:	pop    r15
  42733c:	jmp    40fd50 <__ctype_b_loc@plt+0xda80>
  427341:	mov    rdi,QWORD PTR [rbx+0x10]
  427345:	lea    rsi,[rip+0x35cf]        # 42a91b <__ctype_b_loc@plt+0x2864b>
  42734c:	xor    eax,eax
  42734e:	call   40fd50 <__ctype_b_loc@plt+0xda80>
  427353:	mov    r15,QWORD PTR [rbx+0x10]
  427357:	mov    r12,QWORD PTR [rbx+r12*1+0x20]
  42735c:	mov    rax,QWORD PTR [r15+0x20]
  427360:	mov    rcx,QWORD PTR [rax+0x78]
  427364:	cmp    rcx,QWORD PTR [rax+0x70]
  427368:	jb     427372 <__ctype_b_loc@plt+0x250a2>
  42736a:	mov    rdi,r15
  42736d:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  427372:	mov    rbx,QWORD PTR [r15+0x10]
  427376:	mov    rdi,r15
  427379:	mov    rsi,r12
  42737c:	mov    rdx,r14
  42737f:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  427384:	mov    QWORD PTR [rbx],rax
  427387:	mov    DWORD PTR [rbx+0x8],0x4
  42738e:	add    QWORD PTR [r15+0x10],0x10
  427393:	jmp    4273d8 <__ctype_b_loc@plt+0x25108>
  427395:	mov    r14,rcx
  427398:	mov    r15,rdx
  42739b:	sub    r14,rdx
  42739e:	mov    rax,QWORD PTR [rbx+0x20]
  4273a2:	mov    rcx,QWORD PTR [rax+0x78]
  4273a6:	cmp    rcx,QWORD PTR [rax+0x70]
  4273aa:	jb     4273b4 <__ctype_b_loc@plt+0x250e4>
  4273ac:	mov    rdi,rbx
  4273af:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4273b4:	mov    r12,QWORD PTR [rbx+0x10]
  4273b8:	mov    rdi,rbx
  4273bb:	mov    rsi,r15
  4273be:	mov    rdx,r14
  4273c1:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4273c6:	mov    QWORD PTR [r12],rax
  4273ca:	mov    DWORD PTR [r12+0x8],0x4
  4273d3:	add    QWORD PTR [rbx+0x10],0x10
  4273d8:	add    rsp,0x8
  4273dc:	pop    rbx
  4273dd:	pop    r12
  4273df:	pop    r14
  4273e1:	pop    r15
  4273e3:	ret    
  4273e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4273ee:	xchg   ax,ax
  4273f0:	push   rbp
  4273f1:	push   r15
  4273f3:	push   r14
  4273f5:	push   r13
  4273f7:	push   r12
  4273f9:	push   rbx
  4273fa:	sub    rsp,0x248
  427401:	mov    r13,rdi
  427404:	mov    rax,QWORD PTR [rdi+0x28]
  427408:	mov    rax,QWORD PTR [rax+0x8]
  42740c:	mov    rbx,QWORD PTR [rax]
  42740f:	mov    cl,BYTE PTR [rbx+0xb]
  427412:	lea    rbp,[rbx+0x28]
  427416:	test   cl,cl
  427418:	lea    rsi,[rip+0x26f9]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42741f:	cmove  rbp,rsi
  427423:	mov    edx,DWORD PTR [rbp+0x8]
  427426:	cmp    edx,0x4
  427429:	je     4274aa <__ctype_b_loc@plt+0x251da>
  42742b:	xor    r12d,r12d
  42742e:	mov    r14d,0x0
  427434:	cmp    edx,0x3
  427437:	jne    4274b6 <__ctype_b_loc@plt+0x251e6>
  427439:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  42743e:	lea    rsi,[rip+0x29dc]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  427445:	lea    rbx,[rsp+0x20]
  42744a:	mov    rdi,rbx
  42744d:	mov    al,0x1
  42744f:	call   402270 <sprintf@plt>
  427454:	mov    rdi,rbx
  427457:	call   4020e0 <strlen@plt>
  42745c:	mov    rdi,r13
  42745f:	mov    rsi,rbx
  427462:	mov    rdx,rax
  427465:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42746a:	mov    QWORD PTR [rbp+0x0],rax
  42746e:	mov    DWORD PTR [rbp+0x8],0x4
  427475:	mov    rax,QWORD PTR [r13+0x20]
  427479:	mov    rcx,QWORD PTR [rax+0x78]
  42747d:	cmp    rcx,QWORD PTR [rax+0x70]
  427481:	jb     42748b <__ctype_b_loc@plt+0x251bb>
  427483:	mov    rdi,r13
  427486:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42748b:	mov    rax,QWORD PTR [r13+0x28]
  42748f:	mov    rax,QWORD PTR [rax+0x8]
  427493:	mov    rbx,QWORD PTR [rax]
  427496:	mov    cl,BYTE PTR [rbx+0xb]
  427499:	lea    rbp,[rbx+0x28]
  42749d:	test   cl,cl
  42749f:	lea    rsi,[rip+0x2672]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4274a6:	cmove  rbp,rsi
  4274aa:	mov    r14,QWORD PTR [rbp+0x0]
  4274ae:	mov    r12,QWORD PTR [r14+0x10]
  4274b2:	add    r14,0x18
  4274b6:	add    rbx,0x38
  4274ba:	cmp    cl,0x2
  4274bd:	cmovb  rbx,rsi
  4274c1:	mov    ecx,DWORD PTR [rbx+0x8]
  4274c4:	cmp    ecx,0x4
  4274c7:	je     42753c <__ctype_b_loc@plt+0x2526c>
  4274c9:	cmp    ecx,0x3
  4274cc:	jne    427545 <__ctype_b_loc@plt+0x25275>
  4274ce:	vmovsd xmm0,QWORD PTR [rbx]
  4274d2:	lea    rsi,[rip+0x2948]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  4274d9:	lea    r15,[rsp+0x20]
  4274de:	mov    rdi,r15
  4274e1:	mov    al,0x1
  4274e3:	call   402270 <sprintf@plt>
  4274e8:	mov    rdi,r15
  4274eb:	call   4020e0 <strlen@plt>
  4274f0:	mov    rdi,r13
  4274f3:	mov    rsi,r15
  4274f6:	mov    rdx,rax
  4274f9:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4274fe:	mov    QWORD PTR [rbx],rax
  427501:	mov    DWORD PTR [rbx+0x8],0x4
  427508:	mov    rax,QWORD PTR [r13+0x20]
  42750c:	mov    rcx,QWORD PTR [rax+0x78]
  427510:	cmp    rcx,QWORD PTR [rax+0x70]
  427514:	jb     42751e <__ctype_b_loc@plt+0x2524e>
  427516:	mov    rdi,r13
  427519:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42751e:	mov    rax,QWORD PTR [r13+0x28]
  427522:	mov    rax,QWORD PTR [rax+0x8]
  427526:	mov    rcx,QWORD PTR [rax]
  427529:	cmp    BYTE PTR [rcx+0xb],0x2
  42752d:	lea    rbx,[rcx+0x38]
  427531:	lea    rsi,[rip+0x25e0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  427538:	cmovb  rbx,rsi
  42753c:	mov    r15,QWORD PTR [rbx]
  42753f:	add    r15,0x18
  427543:	jmp    427548 <__ctype_b_loc@plt+0x25278>
  427545:	xor    r15d,r15d
  427548:	mov    QWORD PTR [rsp+0x30],r13
  42754d:	mov    QWORD PTR [rsp+0x20],r14
  427552:	add    r12,r14
  427555:	mov    QWORD PTR [rsp+0x28],r12
  42755a:	mov    rax,QWORD PTR [rax]
  42755d:	cmp    BYTE PTR [rax+0xb],0x3
  427561:	lea    rbx,[rax+0x48]
  427565:	cmovb  rbx,rsi
  427569:	mov    eax,DWORD PTR [rbx+0x8]
  42756c:	cmp    eax,0x3
  42756f:	mov    QWORD PTR [rsp+0x8],r13
  427574:	je     42762b <__ctype_b_loc@plt+0x2535b>
  42757a:	cmp    eax,0x4
  42757d:	jne    427622 <__ctype_b_loc@plt+0x25352>
  427583:	mov    r12,QWORD PTR [rbx]
  427586:	add    r12,0x18
  42758a:	mov    rbx,rsp
  42758d:	mov    rdi,r12
  427590:	mov    rsi,rbx
  427593:	call   4020b0 <strtod@plt>
  427598:	mov    rbp,QWORD PTR [rsp]
  42759c:	cmp    rbp,r12
  42759f:	je     427622 <__ctype_b_loc@plt+0x25352>
  4275a5:	mov    r13b,BYTE PTR [rbp+0x0]
  4275a9:	mov    eax,r13d
  4275ac:	or     al,0x20
  4275ae:	cmp    al,0x78
  4275b0:	jne    4275e3 <__ctype_b_loc@plt+0x25313>
  4275b2:	mov    rsi,rsp
  4275b5:	mov    rdi,r12
  4275b8:	mov    edx,0x10
  4275bd:	call   402250 <strtoul@plt>
  4275c2:	vmovq  xmm0,rax
  4275c7:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x26a1]        # 429c70 <__ctype_b_loc@plt+0x279a0>
  4275cf:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x26a9]        # 429c80 <__ctype_b_loc@plt+0x279b0>
  4275d7:	vhaddpd xmm0,xmm0,xmm0
  4275db:	mov    rbp,QWORD PTR [rsp]
  4275df:	mov    r13b,BYTE PTR [rbp+0x0]
  4275e3:	test   r13b,r13b
  4275e6:	je     427626 <__ctype_b_loc@plt+0x25356>
  4275e8:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  4275ee:	call   4022d0 <__ctype_b_loc@plt>
  4275f3:	mov    rax,QWORD PTR [rax]
  4275f6:	movzx  ecx,r13b
  4275fa:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4275ff:	je     427622 <__ctype_b_loc@plt+0x25352>
  427601:	inc    rbp
  427604:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  42760a:	nop    WORD PTR [rax+rax*1+0x0]
  427610:	movzx  ecx,BYTE PTR [rbp+0x0]
  427614:	inc    rbp
  427617:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42761c:	jne    427610 <__ctype_b_loc@plt+0x25340>
  42761e:	test   cl,cl
  427620:	je     427626 <__ctype_b_loc@plt+0x25356>
  427622:	xor    ebx,ebx
  427624:	jmp    427630 <__ctype_b_loc@plt+0x25360>
  427626:	vmovsd QWORD PTR [rsp],xmm0
  42762b:	vcvttsd2si rbx,QWORD PTR [rbx]
  427630:	add    rbx,r14
  427633:	xor    r13d,r13d
  427636:	cmp    rbx,QWORD PTR [rsp+0x28]
  42763b:	ja     427777 <__ctype_b_loc@plt+0x254a7>
  427641:	lea    rbp,[rsp+0x20]
  427646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427650:	mov    DWORD PTR [rsp+0x38],0x0
  427658:	mov    rdi,rbp
  42765b:	mov    rsi,rbx
  42765e:	mov    rdx,r15
  427661:	call   426900 <__ctype_b_loc@plt+0x24630>
  427666:	test   rax,rax
  427669:	jne    42767a <__ctype_b_loc@plt+0x253aa>
  42766b:	inc    rbx
  42766e:	cmp    rbx,QWORD PTR [rsp+0x28]
  427673:	jbe    427650 <__ctype_b_loc@plt+0x25380>
  427675:	jmp    427777 <__ctype_b_loc@plt+0x254a7>
  42767a:	mov    r12,rax
  42767d:	sub    rax,r14
  427680:	xor    ecx,ecx
  427682:	cmp    rbx,r12
  427685:	sete   cl
  427688:	add    rcx,rax
  42768b:	mov    rbp,QWORD PTR [rsp+0x8]
  427690:	mov    rax,QWORD PTR [rbp+0x10]
  427694:	vcvtsi2sd xmm0,xmm1,rcx
  427699:	vmovsd QWORD PTR [rax],xmm0
  42769d:	mov    DWORD PTR [rax+0x8],0x3
  4276a4:	mov    rax,QWORD PTR [rbp+0x10]
  4276a8:	mov    rcx,QWORD PTR [rbp+0x28]
  4276ac:	lea    rdx,[rax+0x10]
  4276b0:	mov    QWORD PTR [rbp+0x10],rdx
  4276b4:	mov    rcx,QWORD PTR [rcx+0x8]
  4276b8:	mov    rcx,QWORD PTR [rcx]
  4276bb:	cmp    BYTE PTR [rcx+0xb],0x3
  4276bf:	lea    rcx,[rcx+0x48]
  4276c3:	lea    rdx,[rip+0x244e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4276ca:	cmovb  rcx,rdx
  4276ce:	mov    rdx,QWORD PTR [rax]
  4276d1:	mov    QWORD PTR [rcx],rdx
  4276d4:	mov    eax,DWORD PTR [rax+0x8]
  4276d7:	mov    DWORD PTR [rcx+0x8],eax
  4276da:	mov    rax,QWORD PTR [rbp+0x10]
  4276de:	cmp    DWORD PTR [rax-0x8],0x4
  4276e2:	jl     427720 <__ctype_b_loc@plt+0x25450>
  4276e4:	mov    rsi,QWORD PTR [rax-0x10]
  4276e8:	test   BYTE PTR [rsi+0x9],0x3
  4276ec:	je     427720 <__ctype_b_loc@plt+0x25450>
  4276ee:	mov    rax,QWORD PTR [rbp+0x28]
  4276f2:	mov    rax,QWORD PTR [rax+0x8]
  4276f6:	mov    rax,QWORD PTR [rax]
  4276f9:	mov    cl,BYTE PTR [rax+0x9]
  4276fc:	test   cl,0x4
  4276ff:	je     427720 <__ctype_b_loc@plt+0x25450>
  427701:	mov    rdi,QWORD PTR [rbp+0x20]
  427705:	cmp    BYTE PTR [rdi+0x21],0x1
  427709:	jne    427712 <__ctype_b_loc@plt+0x25442>
  42770b:	call   403fc0 <__ctype_b_loc@plt+0x1cf0>
  427710:	jmp    427720 <__ctype_b_loc@plt+0x25450>
  427712:	and    cl,0xf8
  427715:	mov    dl,BYTE PTR [rdi+0x20]
  427718:	and    dl,0x3
  42771b:	or     dl,cl
  42771d:	mov    BYTE PTR [rax+0x9],dl
  427720:	add    QWORD PTR [rbp+0x10],0xfffffffffffffff0
  427725:	mov    eax,DWORD PTR [rsp+0x38]
  427729:	test   eax,eax
  42772b:	mov    r13d,0x1
  427731:	cmovne r13d,eax
  427735:	test   rbx,rbx
  427738:	cmove  r13d,eax
  42773c:	mov    rdi,QWORD PTR [rsp+0x30]
  427741:	lea    rdx,[rip+0x313d]        # 42a885 <__ctype_b_loc@plt+0x285b5>
  427748:	mov    esi,r13d
  42774b:	call   41f430 <__ctype_b_loc@plt+0x1d160>
  427750:	test   r13d,r13d
  427753:	jle    427777 <__ctype_b_loc@plt+0x254a7>
  427755:	xor    ebp,ebp
  427757:	lea    r14,[rsp+0x20]
  42775c:	nop    DWORD PTR [rax+0x0]
  427760:	mov    rdi,r14
  427763:	mov    esi,ebp
  427765:	mov    rdx,rbx
  427768:	mov    rcx,r12
  42776b:	call   4272d0 <__ctype_b_loc@plt+0x25000>
  427770:	inc    ebp
  427772:	cmp    r13d,ebp
  427775:	jne    427760 <__ctype_b_loc@plt+0x25490>
  427777:	mov    eax,r13d
  42777a:	add    rsp,0x248
  427781:	pop    rbx
  427782:	pop    r12
  427784:	pop    r13
  427786:	pop    r14
  427788:	pop    r15
  42778a:	pop    rbp
  42778b:	ret    
  42778c:	nop    DWORD PTR [rax+0x0]
  427790:	push   rbp
  427791:	push   r15
  427793:	push   r14
  427795:	push   r13
  427797:	push   r12
  427799:	push   rbx
  42779a:	push   rax
  42779b:	mov    DWORD PTR [rsp+0x4],ecx
  42779f:	mov    r15,rdx
  4277a2:	mov    rbx,rdi
  4277a5:	test   esi,esi
  4277a7:	jle    4277cf <__ctype_b_loc@plt+0x254ff>
  4277a9:	mov    rax,QWORD PTR [rbx+0x18]
  4277ad:	movsxd rcx,esi
  4277b0:	shl    rcx,0x4
  4277b4:	add    rcx,rax
  4277b7:	add    rcx,0xfffffffffffffff0
  4277bb:	cmp    rcx,QWORD PTR [rbx+0x10]
  4277bf:	lea    rax,[rip+0x2352]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4277c6:	cmovb  rax,rcx
  4277ca:	jmp    427871 <__ctype_b_loc@plt+0x255a1>
  4277cf:	cmp    esi,0xffffd8f1
  4277d5:	jl     4277e7 <__ctype_b_loc@plt+0x25517>
  4277d7:	movsxd rax,esi
  4277da:	shl    rax,0x4
  4277de:	add    rax,QWORD PTR [rbx+0x10]
  4277e2:	jmp    427871 <__ctype_b_loc@plt+0x255a1>
  4277e7:	cmp    esi,0xffffd8ee
  4277ed:	je     42780a <__ctype_b_loc@plt+0x2553a>
  4277ef:	cmp    esi,0xffffd8ef
  4277f5:	je     427810 <__ctype_b_loc@plt+0x25540>
  4277f7:	cmp    esi,0xffffd8f0
  4277fd:	jne    427839 <__ctype_b_loc@plt+0x25569>
  4277ff:	mov    eax,0xa0
  427804:	add    rax,QWORD PTR [rbx+0x20]
  427808:	jmp    427871 <__ctype_b_loc@plt+0x255a1>
  42780a:	lea    rax,[rbx+0x78]
  42780e:	jmp    427871 <__ctype_b_loc@plt+0x255a1>
  427810:	mov    rax,QWORD PTR [rbx+0x28]
  427814:	mov    rax,QWORD PTR [rax+0x8]
  427818:	mov    rcx,QWORD PTR [rax]
  42781b:	lea    rax,[rbx+0x88]
  427822:	mov    rcx,QWORD PTR [rcx+0x18]
  427826:	mov    QWORD PTR [rbx+0x88],rcx
  42782d:	mov    DWORD PTR [rbx+0x90],0x5
  427837:	jmp    427871 <__ctype_b_loc@plt+0x255a1>
  427839:	mov    rax,QWORD PTR [rbx+0x28]
  42783d:	mov    rax,QWORD PTR [rax+0x8]
  427841:	mov    rax,QWORD PTR [rax]
  427844:	mov    ecx,0xffffd8ee
  427849:	sub    ecx,esi
  42784b:	movzx  edx,BYTE PTR [rax+0xb]
  42784f:	cmp    ecx,edx
  427851:	jle    42785c <__ctype_b_loc@plt+0x2558c>
  427853:	lea    rax,[rip+0x22be]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42785a:	jmp    427871 <__ctype_b_loc@plt+0x255a1>
  42785c:	mov    ecx,0xffffd8ed
  427861:	sub    ecx,esi
  427863:	movsxd rcx,ecx
  427866:	shl    rcx,0x4
  42786a:	add    rax,rcx
  42786d:	add    rax,0x28
  427871:	mov    rcx,QWORD PTR [rbx+0x10]
  427875:	mov    rdx,QWORD PTR [rax]
  427878:	mov    QWORD PTR [rcx],rdx
  42787b:	mov    eax,DWORD PTR [rax+0x8]
  42787e:	mov    DWORD PTR [rcx+0x8],eax
  427881:	mov    rbp,QWORD PTR [rbx+0x10]
  427885:	add    rbp,0x10
  427889:	mov    QWORD PTR [rbx+0x10],rbp
  42788d:	nop    DWORD PTR [rax]
  427890:	mov    rdi,r15
  427893:	mov    esi,0x2e
  427898:	call   4020f0 <strchr@plt>
  42789d:	mov    r13,rax
  4278a0:	test   rax,rax
  4278a3:	jne    4278b3 <__ctype_b_loc@plt+0x255e3>
  4278a5:	mov    rdi,r15
  4278a8:	call   4020e0 <strlen@plt>
  4278ad:	mov    r13,rax
  4278b0:	add    r13,r15
  4278b3:	mov    r12,r13
  4278b6:	sub    r12,r15
  4278b9:	mov    rax,QWORD PTR [rbx+0x20]
  4278bd:	mov    rcx,QWORD PTR [rax+0x78]
  4278c1:	cmp    rcx,QWORD PTR [rax+0x70]
  4278c5:	jb     4278d3 <__ctype_b_loc@plt+0x25603>
  4278c7:	mov    rdi,rbx
  4278ca:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  4278cf:	mov    rbp,QWORD PTR [rbx+0x10]
  4278d3:	mov    rdi,rbx
  4278d6:	mov    rsi,r15
  4278d9:	mov    rdx,r12
  4278dc:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  4278e1:	mov    QWORD PTR [rbp+0x0],rax
  4278e5:	mov    DWORD PTR [rbp+0x8],0x4
  4278ec:	mov    rbp,QWORD PTR [rbx+0x10]
  4278f0:	lea    rax,[rbp+0x10]
  4278f4:	mov    QWORD PTR [rbx+0x10],rax
  4278f8:	mov    r14d,DWORD PTR [rbp+0x8]
  4278fc:	lea    rdx,[rip+0x2215]        # 429b18 <__ctype_b_loc@plt+0x27848>
  427903:	mov    rax,rdx
  427906:	test   r14d,r14d
  427909:	je     427aa3 <__ctype_b_loc@plt+0x257d3>
  42790f:	mov    rdi,QWORD PTR [rbp-0x10]
  427913:	cmp    r14d,0x3
  427917:	je     427970 <__ctype_b_loc@plt+0x256a0>
  427919:	cmp    r14d,0x4
  42791d:	jne    4279b0 <__ctype_b_loc@plt+0x256e0>
  427923:	mov    rcx,QWORD PTR [rbp+0x0]
  427927:	mov    al,BYTE PTR [rdi+0xb]
  42792a:	bzhi   eax,DWORD PTR [rcx+0xc],eax
  427930:	cdqe   
  427932:	lea    rax,[rax+rax*4]
  427936:	shl    rax,0x3
  42793a:	add    rax,QWORD PTR [rdi+0x20]
  42793e:	cmp    DWORD PTR [rax+0x18],0x4
  427942:	je     427963 <__ctype_b_loc@plt+0x25693>
  427944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42794e:	xchg   ax,ax
  427950:	mov    rax,QWORD PTR [rax+0x20]
  427954:	test   rax,rax
  427957:	je     427aa0 <__ctype_b_loc@plt+0x257d0>
  42795d:	cmp    DWORD PTR [rax+0x18],0x4
  427961:	jne    427950 <__ctype_b_loc@plt+0x25680>
  427963:	cmp    QWORD PTR [rax+0x10],rcx
  427967:	jne    427950 <__ctype_b_loc@plt+0x25680>
  427969:	jmp    427aa3 <__ctype_b_loc@plt+0x257d3>
  42796e:	xchg   ax,ax
  427970:	vmovsd xmm1,QWORD PTR [rbp+0x0]
  427975:	vcvttsd2si eax,xmm1
  427979:	vcvtsi2sd xmm0,xmm2,eax
  42797d:	vucomisd xmm1,xmm0
  427981:	jne    4279b0 <__ctype_b_loc@plt+0x256e0>
  427983:	jp     4279b0 <__ctype_b_loc@plt+0x256e0>
  427985:	lea    ecx,[rax-0x1]
  427988:	cmp    ecx,DWORD PTR [rdi+0x38]
  42798b:	jae    427a27 <__ctype_b_loc@plt+0x25757>
  427991:	movsxd rax,ecx
  427994:	shl    rax,0x4
  427998:	add    rax,QWORD PTR [rdi+0x18]
  42799c:	lea    rdx,[rip+0x2175]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4279a3:	jmp    427aa3 <__ctype_b_loc@plt+0x257d3>
  4279a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4279b0:	mov    rsi,rbp
  4279b3:	call   409ad0 <__ctype_b_loc@plt+0x7800>
  4279b8:	lea    rdx,[rip+0x2159]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4279bf:	cmp    DWORD PTR [rax+0x18],r14d
  4279c3:	jne    4279de <__ctype_b_loc@plt+0x2570e>
  4279c5:	jmp    4279f1 <__ctype_b_loc@plt+0x25721>
  4279c7:	nop    WORD PTR [rax+rax*1+0x0]
  4279d0:	mov    rcx,QWORD PTR [rax+0x10]
  4279d4:	cmp    rcx,QWORD PTR [rbp+0x0]
  4279d8:	je     427aa3 <__ctype_b_loc@plt+0x257d3>
  4279de:	mov    rax,QWORD PTR [rax+0x20]
  4279e2:	test   rax,rax
  4279e5:	je     427aa0 <__ctype_b_loc@plt+0x257d0>
  4279eb:	cmp    DWORD PTR [rax+0x18],r14d
  4279ef:	jne    4279de <__ctype_b_loc@plt+0x2570e>
  4279f1:	cmp    r14d,0x3
  4279f5:	ja     4279d0 <__ctype_b_loc@plt+0x25700>
  4279f7:	mov    ecx,r14d
  4279fa:	lea    rsi,[rip+0x2107]        # 429b08 <__ctype_b_loc@plt+0x27838>
  427a01:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  427a05:	add    rcx,rsi
  427a08:	jmp    rcx
  427a0a:	mov    ecx,DWORD PTR [rax+0x10]
  427a0d:	cmp    ecx,DWORD PTR [rbp+0x0]
  427a10:	jne    4279de <__ctype_b_loc@plt+0x2570e>
  427a12:	jmp    427aa3 <__ctype_b_loc@plt+0x257d3>
  427a17:	vmovq  xmm0,QWORD PTR [rax+0x10]
  427a1c:	vucomisd xmm0,QWORD PTR [rbp+0x0]
  427a21:	jne    4279de <__ctype_b_loc@plt+0x2570e>
  427a23:	jp     4279de <__ctype_b_loc@plt+0x2570e>
  427a25:	jmp    427aa3 <__ctype_b_loc@plt+0x257d3>
  427a27:	test   eax,eax
  427a29:	je     427a63 <__ctype_b_loc@plt+0x25793>
  427a2b:	vmovq  rcx,xmm0
  427a30:	mov    rax,rcx
  427a33:	shr    rax,0x20
  427a37:	add    eax,ecx
  427a39:	mov    cl,BYTE PTR [rdi+0xb]
  427a3c:	mov    rdx,0xffffffffffffffff
  427a43:	shlx   rcx,rdx,rcx
  427a48:	or     rcx,0x1
  427a4c:	xor    rcx,0xfffffffffffffffe
  427a50:	xor    edx,edx
  427a52:	div    rcx
  427a55:	lea    rax,[rdx+rdx*4]
  427a59:	shl    rax,0x3
  427a5d:	add    rax,QWORD PTR [rdi+0x20]
  427a61:	jmp    427a67 <__ctype_b_loc@plt+0x25797>
  427a63:	mov    rax,QWORD PTR [rdi+0x20]
  427a67:	lea    rdx,[rip+0x20aa]        # 429b18 <__ctype_b_loc@plt+0x27848>
  427a6e:	cmp    DWORD PTR [rax+0x18],0x3
  427a72:	je     427a8f <__ctype_b_loc@plt+0x257bf>
  427a74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a7e:	xchg   ax,ax
  427a80:	mov    rax,QWORD PTR [rax+0x20]
  427a84:	test   rax,rax
  427a87:	je     427aa0 <__ctype_b_loc@plt+0x257d0>
  427a89:	cmp    DWORD PTR [rax+0x18],0x3
  427a8d:	jne    427a80 <__ctype_b_loc@plt+0x257b0>
  427a8f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  427a94:	vucomisd xmm1,xmm0
  427a98:	jne    427a80 <__ctype_b_loc@plt+0x257b0>
  427a9a:	jp     427a80 <__ctype_b_loc@plt+0x257b0>
  427a9c:	jmp    427aa3 <__ctype_b_loc@plt+0x257d3>
  427a9e:	xchg   ax,ax
  427aa0:	mov    rax,rdx
  427aa3:	mov    rcx,QWORD PTR [rax]
  427aa6:	mov    QWORD PTR [rbp+0x0],rcx
  427aaa:	mov    eax,DWORD PTR [rax+0x8]
  427aad:	mov    DWORD PTR [rbp+0x8],eax
  427ab0:	mov    rax,QWORD PTR [rbx+0x10]
  427ab4:	lea    rbp,[rax-0x10]
  427ab8:	cmp    rbp,rdx
  427abb:	je     427be6 <__ctype_b_loc@plt+0x25916>
  427ac1:	mov    ecx,DWORD PTR [rax-0x8]
  427ac4:	cmp    ecx,0x5
  427ac7:	je     427b9f <__ctype_b_loc@plt+0x258cf>
  427acd:	test   ecx,ecx
  427acf:	jne    427be6 <__ctype_b_loc@plt+0x25916>
  427ad5:	mov    QWORD PTR [rbx+0x10],rbp
  427ad9:	cmp    BYTE PTR [r13+0x0],0x2e
  427ade:	mov    r14d,DWORD PTR [rsp+0x4]
  427ae3:	mov    eax,0x1
  427ae8:	cmove  r14d,eax
  427aec:	mov    rax,QWORD PTR [rbx+0x20]
  427af0:	mov    rcx,QWORD PTR [rax+0x78]
  427af4:	cmp    rcx,QWORD PTR [rax+0x70]
  427af8:	jb     427b06 <__ctype_b_loc@plt+0x25836>
  427afa:	mov    rdi,rbx
  427afd:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  427b02:	mov    rbp,QWORD PTR [rbx+0x10]
  427b06:	mov    rdi,rbx
  427b09:	xor    esi,esi
  427b0b:	mov    edx,r14d
  427b0e:	call   403700 <__ctype_b_loc@plt+0x1430>
  427b13:	mov    QWORD PTR [rbp+0x0],rax
  427b17:	mov    DWORD PTR [rbp+0x8],0x5
  427b1e:	mov    rbp,QWORD PTR [rbx+0x10]
  427b22:	mov    rax,QWORD PTR [rbx+0x20]
  427b26:	add    rbp,0x10
  427b2a:	mov    QWORD PTR [rbx+0x10],rbp
  427b2e:	mov    rcx,QWORD PTR [rax+0x78]
  427b32:	cmp    rcx,QWORD PTR [rax+0x70]
  427b36:	jb     427b44 <__ctype_b_loc@plt+0x25874>
  427b38:	mov    rdi,rbx
  427b3b:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  427b40:	mov    rbp,QWORD PTR [rbx+0x10]
  427b44:	mov    rdi,rbx
  427b47:	mov    rsi,r15
  427b4a:	mov    rdx,r12
  427b4d:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  427b52:	mov    QWORD PTR [rbp+0x0],rax
  427b56:	mov    DWORD PTR [rbp+0x8],0x4
  427b5d:	mov    rax,QWORD PTR [rbx+0x10]
  427b61:	lea    rcx,[rax+0x10]
  427b65:	mov    QWORD PTR [rbx+0x10],rcx
  427b69:	mov    rcx,QWORD PTR [rax-0x10]
  427b6d:	mov    QWORD PTR [rax+0x10],rcx
  427b71:	mov    ecx,DWORD PTR [rax-0x8]
  427b74:	mov    DWORD PTR [rax+0x18],ecx
  427b77:	mov    rcx,QWORD PTR [rbx+0x10]
  427b7b:	lea    rax,[rcx+0x10]
  427b7f:	mov    QWORD PTR [rbx+0x10],rax
  427b83:	lea    rsi,[rcx-0x30]
  427b87:	lea    rdx,[rcx-0x10]
  427b8b:	mov    rdi,rbx
  427b8e:	call   408a70 <__ctype_b_loc@plt+0x67a0>
  427b93:	mov    rax,QWORD PTR [rbx+0x10]
  427b97:	add    rax,0xffffffffffffffe0
  427b9b:	mov    QWORD PTR [rbx+0x10],rax
  427b9f:	add    rax,0xfffffffffffffff0
  427ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427bad:	nop    DWORD PTR [rax]
  427bb0:	mov    rcx,QWORD PTR [rax]
  427bb3:	mov    QWORD PTR [rax-0x10],rcx
  427bb7:	mov    ecx,DWORD PTR [rax+0x8]
  427bba:	mov    DWORD PTR [rax-0x8],ecx
  427bbd:	mov    rbp,QWORD PTR [rbx+0x10]
  427bc1:	add    rax,0x10
  427bc5:	cmp    rax,rbp
  427bc8:	jb     427bb0 <__ctype_b_loc@plt+0x258e0>
  427bca:	add    rbp,0xfffffffffffffff0
  427bce:	mov    QWORD PTR [rbx+0x10],rbp
  427bd2:	cmp    BYTE PTR [r13+0x0],0x2e
  427bd7:	lea    r15,[r13+0x1]
  427bdb:	je     427890 <__ctype_b_loc@plt+0x255c0>
  427be1:	xor    r15d,r15d
  427be4:	jmp    427bee <__ctype_b_loc@plt+0x2591e>
  427be6:	add    rax,0xffffffffffffffe0
  427bea:	mov    QWORD PTR [rbx+0x10],rax
  427bee:	mov    rax,r15
  427bf1:	add    rsp,0x8
  427bf5:	pop    rbx
  427bf6:	pop    r12
  427bf8:	pop    r13
  427bfa:	pop    r14
  427bfc:	pop    r15
  427bfe:	pop    rbp
  427bff:	ret    
  427c00:	push   rbx
  427c01:	mov    rbx,rdi
  427c04:	mov    esi,0x1
  427c09:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427c0e:	vcvtsi2sd xmm0,xmm0,eax
  427c12:	mov    rax,QWORD PTR [rbx+0x10]
  427c16:	vmovsd QWORD PTR [rax],xmm0
  427c1a:	mov    DWORD PTR [rax+0x8],0x3
  427c21:	add    QWORD PTR [rbx+0x10],0x10
  427c26:	mov    eax,0x1
  427c2b:	pop    rbx
  427c2c:	ret    
  427c2d:	nop    DWORD PTR [rax]
  427c30:	push   rbx
  427c31:	mov    rbx,rdi
  427c34:	mov    esi,0x1
  427c39:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427c3e:	not    eax
  427c40:	vcvtsi2sd xmm0,xmm0,eax
  427c44:	mov    rax,QWORD PTR [rbx+0x10]
  427c48:	vmovsd QWORD PTR [rax],xmm0
  427c4c:	mov    DWORD PTR [rax+0x8],0x3
  427c53:	add    QWORD PTR [rbx+0x10],0x10
  427c58:	mov    eax,0x1
  427c5d:	pop    rbx
  427c5e:	ret    
  427c5f:	nop
  427c60:	push   rbp
  427c61:	push   r14
  427c63:	push   rbx
  427c64:	mov    r14,rdi
  427c67:	mov    esi,0x1
  427c6c:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427c71:	mov    ebp,eax
  427c73:	mov    rax,QWORD PTR [r14+0x10]
  427c77:	mov    rbx,rax
  427c7a:	sub    rbx,QWORD PTR [r14+0x18]
  427c7e:	shr    rbx,0x4
  427c82:	cmp    ebx,0x2
  427c85:	jl     427ca7 <__ctype_b_loc@plt+0x259d7>
  427c87:	nop    WORD PTR [rax+rax*1+0x0]
  427c90:	mov    rdi,r14
  427c93:	mov    esi,ebx
  427c95:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427c9a:	and    ebp,eax
  427c9c:	dec    ebx
  427c9e:	cmp    ebx,0x1
  427ca1:	jg     427c90 <__ctype_b_loc@plt+0x259c0>
  427ca3:	mov    rax,QWORD PTR [r14+0x10]
  427ca7:	vcvtsi2sd xmm0,xmm0,ebp
  427cab:	vmovsd QWORD PTR [rax],xmm0
  427caf:	mov    DWORD PTR [rax+0x8],0x3
  427cb6:	add    QWORD PTR [r14+0x10],0x10
  427cbb:	mov    eax,0x1
  427cc0:	pop    rbx
  427cc1:	pop    r14
  427cc3:	pop    rbp
  427cc4:	ret    
  427cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427ccf:	nop
  427cd0:	push   rbp
  427cd1:	push   r14
  427cd3:	push   rbx
  427cd4:	mov    r14,rdi
  427cd7:	mov    esi,0x1
  427cdc:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427ce1:	mov    ebp,eax
  427ce3:	mov    rax,QWORD PTR [r14+0x10]
  427ce7:	mov    rbx,rax
  427cea:	sub    rbx,QWORD PTR [r14+0x18]
  427cee:	shr    rbx,0x4
  427cf2:	cmp    ebx,0x2
  427cf5:	jl     427d17 <__ctype_b_loc@plt+0x25a47>
  427cf7:	nop    WORD PTR [rax+rax*1+0x0]
  427d00:	mov    rdi,r14
  427d03:	mov    esi,ebx
  427d05:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427d0a:	or     ebp,eax
  427d0c:	dec    ebx
  427d0e:	cmp    ebx,0x1
  427d11:	jg     427d00 <__ctype_b_loc@plt+0x25a30>
  427d13:	mov    rax,QWORD PTR [r14+0x10]
  427d17:	vcvtsi2sd xmm0,xmm0,ebp
  427d1b:	vmovsd QWORD PTR [rax],xmm0
  427d1f:	mov    DWORD PTR [rax+0x8],0x3
  427d26:	add    QWORD PTR [r14+0x10],0x10
  427d2b:	mov    eax,0x1
  427d30:	pop    rbx
  427d31:	pop    r14
  427d33:	pop    rbp
  427d34:	ret    
  427d35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d3f:	nop
  427d40:	push   rbp
  427d41:	push   r14
  427d43:	push   rbx
  427d44:	mov    r14,rdi
  427d47:	mov    esi,0x1
  427d4c:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427d51:	mov    ebp,eax
  427d53:	mov    rax,QWORD PTR [r14+0x10]
  427d57:	mov    rbx,rax
  427d5a:	sub    rbx,QWORD PTR [r14+0x18]
  427d5e:	shr    rbx,0x4
  427d62:	cmp    ebx,0x2
  427d65:	jl     427d87 <__ctype_b_loc@plt+0x25ab7>
  427d67:	nop    WORD PTR [rax+rax*1+0x0]
  427d70:	mov    rdi,r14
  427d73:	mov    esi,ebx
  427d75:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427d7a:	xor    ebp,eax
  427d7c:	dec    ebx
  427d7e:	cmp    ebx,0x1
  427d81:	jg     427d70 <__ctype_b_loc@plt+0x25aa0>
  427d83:	mov    rax,QWORD PTR [r14+0x10]
  427d87:	vcvtsi2sd xmm0,xmm0,ebp
  427d8b:	vmovsd QWORD PTR [rax],xmm0
  427d8f:	mov    DWORD PTR [rax+0x8],0x3
  427d96:	add    QWORD PTR [r14+0x10],0x10
  427d9b:	mov    eax,0x1
  427da0:	pop    rbx
  427da1:	pop    r14
  427da3:	pop    rbp
  427da4:	ret    
  427da5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427daf:	nop
  427db0:	push   rbp
  427db1:	push   rbx
  427db2:	push   rax
  427db3:	mov    rbx,rdi
  427db6:	mov    esi,0x1
  427dbb:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427dc0:	mov    ebp,eax
  427dc2:	mov    rdi,rbx
  427dc5:	mov    esi,0x2
  427dca:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427dcf:	shlx   eax,ebp,eax
  427dd4:	vcvtsi2sd xmm0,xmm0,eax
  427dd8:	mov    rax,QWORD PTR [rbx+0x10]
  427ddc:	vmovsd QWORD PTR [rax],xmm0
  427de0:	mov    DWORD PTR [rax+0x8],0x3
  427de7:	add    QWORD PTR [rbx+0x10],0x10
  427dec:	mov    eax,0x1
  427df1:	add    rsp,0x8
  427df5:	pop    rbx
  427df6:	pop    rbp
  427df7:	ret    
  427df8:	nop    DWORD PTR [rax+rax*1+0x0]
  427e00:	push   rbp
  427e01:	push   rbx
  427e02:	push   rax
  427e03:	mov    rbx,rdi
  427e06:	mov    esi,0x1
  427e0b:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427e10:	mov    ebp,eax
  427e12:	mov    rdi,rbx
  427e15:	mov    esi,0x2
  427e1a:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427e1f:	shrx   eax,ebp,eax
  427e24:	vcvtsi2sd xmm0,xmm0,eax
  427e28:	mov    rax,QWORD PTR [rbx+0x10]
  427e2c:	vmovsd QWORD PTR [rax],xmm0
  427e30:	mov    DWORD PTR [rax+0x8],0x3
  427e37:	add    QWORD PTR [rbx+0x10],0x10
  427e3c:	mov    eax,0x1
  427e41:	add    rsp,0x8
  427e45:	pop    rbx
  427e46:	pop    rbp
  427e47:	ret    
  427e48:	nop    DWORD PTR [rax+rax*1+0x0]
  427e50:	push   rbp
  427e51:	push   rbx
  427e52:	push   rax
  427e53:	mov    rbx,rdi
  427e56:	mov    esi,0x1
  427e5b:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427e60:	mov    ebp,eax
  427e62:	mov    rdi,rbx
  427e65:	mov    esi,0x2
  427e6a:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427e6f:	sarx   eax,ebp,eax
  427e74:	vcvtsi2sd xmm0,xmm0,eax
  427e78:	mov    rax,QWORD PTR [rbx+0x10]
  427e7c:	vmovsd QWORD PTR [rax],xmm0
  427e80:	mov    DWORD PTR [rax+0x8],0x3
  427e87:	add    QWORD PTR [rbx+0x10],0x10
  427e8c:	mov    eax,0x1
  427e91:	add    rsp,0x8
  427e95:	pop    rbx
  427e96:	pop    rbp
  427e97:	ret    
  427e98:	nop    DWORD PTR [rax+rax*1+0x0]
  427ea0:	push   rbp
  427ea1:	push   rbx
  427ea2:	push   rax
  427ea3:	mov    rbx,rdi
  427ea6:	mov    esi,0x1
  427eab:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427eb0:	mov    ebp,eax
  427eb2:	mov    rdi,rbx
  427eb5:	mov    esi,0x2
  427eba:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427ebf:	mov    ecx,eax
  427ec1:	rol    ebp,cl
  427ec3:	vcvtsi2sd xmm0,xmm0,ebp
  427ec7:	mov    rax,QWORD PTR [rbx+0x10]
  427ecb:	vmovsd QWORD PTR [rax],xmm0
  427ecf:	mov    DWORD PTR [rax+0x8],0x3
  427ed6:	add    QWORD PTR [rbx+0x10],0x10
  427edb:	mov    eax,0x1
  427ee0:	add    rsp,0x8
  427ee4:	pop    rbx
  427ee5:	pop    rbp
  427ee6:	ret    
  427ee7:	nop    WORD PTR [rax+rax*1+0x0]
  427ef0:	push   rbp
  427ef1:	push   rbx
  427ef2:	push   rax
  427ef3:	mov    rbx,rdi
  427ef6:	mov    esi,0x1
  427efb:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427f00:	mov    ebp,eax
  427f02:	mov    rdi,rbx
  427f05:	mov    esi,0x2
  427f0a:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427f0f:	mov    ecx,eax
  427f11:	ror    ebp,cl
  427f13:	vcvtsi2sd xmm0,xmm0,ebp
  427f17:	mov    rax,QWORD PTR [rbx+0x10]
  427f1b:	vmovsd QWORD PTR [rax],xmm0
  427f1f:	mov    DWORD PTR [rax+0x8],0x3
  427f26:	add    QWORD PTR [rbx+0x10],0x10
  427f2b:	mov    eax,0x1
  427f30:	add    rsp,0x8
  427f34:	pop    rbx
  427f35:	pop    rbp
  427f36:	ret    
  427f37:	nop    WORD PTR [rax+rax*1+0x0]
  427f40:	push   rbx
  427f41:	mov    rbx,rdi
  427f44:	mov    esi,0x1
  427f49:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427f4e:	bswap  eax
  427f50:	vcvtsi2sd xmm0,xmm0,eax
  427f54:	mov    rax,QWORD PTR [rbx+0x10]
  427f58:	vmovsd QWORD PTR [rax],xmm0
  427f5c:	mov    DWORD PTR [rax+0x8],0x3
  427f63:	add    QWORD PTR [rbx+0x10],0x10
  427f68:	mov    eax,0x1
  427f6d:	pop    rbx
  427f6e:	ret    
  427f6f:	nop
  427f70:	push   rbp
  427f71:	push   r15
  427f73:	push   r14
  427f75:	push   rbx
  427f76:	push   rax
  427f77:	mov    r14,rdi
  427f7a:	mov    esi,0x1
  427f7f:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427f84:	mov    ebx,eax
  427f86:	mov    rcx,QWORD PTR [r14+0x18]
  427f8a:	lea    rdx,[rcx+0x10]
  427f8e:	mov    ebp,0x8
  427f93:	mov    eax,0x8
  427f98:	cmp    rdx,QWORD PTR [r14+0x10]
  427f9c:	jae    427fc7 <__ctype_b_loc@plt+0x25cf7>
  427f9e:	lea    rsi,[rip+0x1b73]        # 429b18 <__ctype_b_loc@plt+0x27848>
  427fa5:	mov    eax,0x8
  427faa:	cmp    rdx,rsi
  427fad:	je     427fc7 <__ctype_b_loc@plt+0x25cf7>
  427faf:	cmp    DWORD PTR [rcx+0x18],0xffffffff
  427fb3:	mov    eax,0x8
  427fb8:	je     427fc7 <__ctype_b_loc@plt+0x25cf7>
  427fba:	mov    rdi,r14
  427fbd:	mov    esi,0x2
  427fc2:	call   428060 <__ctype_b_loc@plt+0x25d90>
  427fc7:	mov    ecx,eax
  427fc9:	neg    ecx
  427fcb:	cmovl  ecx,eax
  427fce:	test   eax,eax
  427fd0:	lea    rdx,[rip+0x2a75]        # 42aa4c <__ctype_b_loc@plt+0x2877c>
  427fd7:	lea    rax,[rip+0x2a5d]        # 42aa3b <__ctype_b_loc@plt+0x2876b>
  427fde:	cmovs  rax,rdx
  427fe2:	cmp    ecx,0x9
  427fe5:	cmovl  ebp,ecx
  427fe8:	mov    r15d,ebp
  427feb:	test   ecx,ecx
  427fed:	jle    428015 <__ctype_b_loc@plt+0x25d45>
  427fef:	mov    rcx,r15
  427ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427ffc:	nop    DWORD PTR [rax+0x0]
  428000:	mov    edx,ebx
  428002:	and    edx,0xf
  428005:	shr    ebx,0x4
  428008:	movzx  edx,BYTE PTR [rax+rdx*1]
  42800c:	mov    BYTE PTR [rsp+rcx*1-0x1],dl
  428010:	dec    rcx
  428013:	jg     428000 <__ctype_b_loc@plt+0x25d30>
  428015:	mov    rax,QWORD PTR [r14+0x20]
  428019:	mov    rcx,QWORD PTR [rax+0x78]
  42801d:	cmp    rcx,QWORD PTR [rax+0x70]
  428021:	jb     42802b <__ctype_b_loc@plt+0x25d5b>
  428023:	mov    rdi,r14
  428026:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42802b:	mov    rbx,QWORD PTR [r14+0x10]
  42802f:	mov    rsi,rsp
  428032:	mov    rdi,r14
  428035:	mov    rdx,r15
  428038:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42803d:	mov    QWORD PTR [rbx],rax
  428040:	mov    DWORD PTR [rbx+0x8],0x4
  428047:	add    QWORD PTR [r14+0x10],0x10
  42804c:	mov    eax,0x1
  428051:	add    rsp,0x8
  428055:	pop    rbx
  428056:	pop    r14
  428058:	pop    r15
  42805a:	pop    rbp
  42805b:	ret    
  42805c:	nop    DWORD PTR [rax+0x0]
  428060:	push   rbp
  428061:	push   r15
  428063:	push   r14
  428065:	push   r13
  428067:	push   r12
  428069:	push   rbx
  42806a:	push   rax
  42806b:	mov    r12d,esi
  42806e:	mov    r15,rdi
  428071:	call   41d4b0 <__ctype_b_loc@plt+0x1b1e0>
  428076:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x1cfa]        # 429d78 <__ctype_b_loc@plt+0x27aa8>
  42807e:	vmovq  r14,xmm0
  428083:	vxorps xmm1,xmm1,xmm1
  428087:	vucomisd xmm0,xmm1
  42808b:	jne    428204 <__ctype_b_loc@plt+0x25f34>
  428091:	jp     428204 <__ctype_b_loc@plt+0x25f34>
  428097:	test   r12d,r12d
  42809a:	jle    4280c2 <__ctype_b_loc@plt+0x25df2>
  42809c:	mov    rax,QWORD PTR [r15+0x18]
  4280a0:	movsxd rcx,r12d
  4280a3:	shl    rcx,0x4
  4280a7:	add    rcx,rax
  4280aa:	add    rcx,0xfffffffffffffff0
  4280ae:	cmp    rcx,QWORD PTR [r15+0x10]
  4280b2:	lea    rax,[rip+0x1a5f]        # 429b18 <__ctype_b_loc@plt+0x27848>
  4280b9:	cmovb  rax,rcx
  4280bd:	jmp    42816b <__ctype_b_loc@plt+0x25e9b>
  4280c2:	cmp    r12d,0xffffd8f1
  4280c9:	jl     4280db <__ctype_b_loc@plt+0x25e0b>
  4280cb:	movsxd rax,r12d
  4280ce:	shl    rax,0x4
  4280d2:	add    rax,QWORD PTR [r15+0x10]
  4280d6:	jmp    42816b <__ctype_b_loc@plt+0x25e9b>
  4280db:	cmp    r12d,0xffffd8ee
  4280e2:	je     428101 <__ctype_b_loc@plt+0x25e31>
  4280e4:	cmp    r12d,0xffffd8ef
  4280eb:	je     428107 <__ctype_b_loc@plt+0x25e37>
  4280ed:	cmp    r12d,0xffffd8f0
  4280f4:	jne    428131 <__ctype_b_loc@plt+0x25e61>
  4280f6:	mov    eax,0xa0
  4280fb:	add    rax,QWORD PTR [r15+0x20]
  4280ff:	jmp    42816b <__ctype_b_loc@plt+0x25e9b>
  428101:	lea    rax,[r15+0x78]
  428105:	jmp    42816b <__ctype_b_loc@plt+0x25e9b>
  428107:	mov    rax,QWORD PTR [r15+0x28]
  42810b:	mov    rax,QWORD PTR [rax+0x8]
  42810f:	mov    rcx,QWORD PTR [rax]
  428112:	lea    rax,[r15+0x88]
  428119:	mov    rcx,QWORD PTR [rcx+0x18]
  42811d:	mov    QWORD PTR [r15+0x88],rcx
  428124:	mov    DWORD PTR [r15+0x90],0x5
  42812f:	jmp    42816b <__ctype_b_loc@plt+0x25e9b>
  428131:	mov    rax,QWORD PTR [r15+0x28]
  428135:	mov    rax,QWORD PTR [rax+0x8]
  428139:	mov    rax,QWORD PTR [rax]
  42813c:	mov    ecx,0xffffd8ee
  428141:	sub    ecx,r12d
  428144:	movzx  edx,BYTE PTR [rax+0xb]
  428148:	cmp    ecx,edx
  42814a:	jle    428155 <__ctype_b_loc@plt+0x25e85>
  42814c:	lea    rax,[rip+0x19c5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  428153:	jmp    42816b <__ctype_b_loc@plt+0x25e9b>
  428155:	mov    ecx,0xffffd8ed
  42815a:	sub    ecx,r12d
  42815d:	movsxd rcx,ecx
  428160:	shl    rcx,0x4
  428164:	add    rax,rcx
  428167:	add    rax,0x28
  42816b:	mov    ecx,DWORD PTR [rax+0x8]
  42816e:	cmp    ecx,0x3
  428171:	je     428204 <__ctype_b_loc@plt+0x25f34>
  428177:	cmp    ecx,0x4
  42817a:	jne    4281f2 <__ctype_b_loc@plt+0x25f22>
  42817c:	mov    rbx,QWORD PTR [rax]
  42817f:	add    rbx,0x18
  428183:	mov    rsi,rsp
  428186:	mov    rdi,rbx
  428189:	call   4020b0 <strtod@plt>
  42818e:	mov    rbp,QWORD PTR [rsp]
  428192:	cmp    rbp,rbx
  428195:	je     4281f2 <__ctype_b_loc@plt+0x25f22>
  428197:	mov    r13b,BYTE PTR [rbp+0x0]
  42819b:	mov    eax,r13d
  42819e:	or     al,0x20
  4281a0:	cmp    al,0x78
  4281a2:	jne    4281bc <__ctype_b_loc@plt+0x25eec>
  4281a4:	mov    rsi,rsp
  4281a7:	mov    rdi,rbx
  4281aa:	mov    edx,0x10
  4281af:	call   402250 <strtoul@plt>
  4281b4:	mov    rbp,QWORD PTR [rsp]
  4281b8:	mov    r13b,BYTE PTR [rbp+0x0]
  4281bc:	test   r13b,r13b
  4281bf:	je     428204 <__ctype_b_loc@plt+0x25f34>
  4281c1:	call   4022d0 <__ctype_b_loc@plt>
  4281c6:	mov    rax,QWORD PTR [rax]
  4281c9:	movzx  ecx,r13b
  4281cd:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4281d2:	je     4281f2 <__ctype_b_loc@plt+0x25f22>
  4281d4:	inc    rbp
  4281d7:	nop    WORD PTR [rax+rax*1+0x0]
  4281e0:	movzx  ecx,BYTE PTR [rbp+0x0]
  4281e4:	inc    rbp
  4281e7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4281ec:	jne    4281e0 <__ctype_b_loc@plt+0x25f10>
  4281ee:	test   cl,cl
  4281f0:	je     428204 <__ctype_b_loc@plt+0x25f34>
  4281f2:	lea    rdx,[rip+0x1ca8]        # 429ea1 <__ctype_b_loc@plt+0x27bd1>
  4281f9:	mov    rdi,r15
  4281fc:	mov    esi,r12d
  4281ff:	call   410520 <__ctype_b_loc@plt+0xe250>
  428204:	mov    eax,r14d
  428207:	add    rsp,0x8
  42820b:	pop    rbx
  42820c:	pop    r12
  42820e:	pop    r13
  428210:	pop    r14
  428212:	pop    r15
  428214:	pop    rbp
  428215:	ret    
  428216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428220:	push   rbp
  428221:	push   r15
  428223:	push   r14
  428225:	push   r13
  428227:	push   r12
  428229:	push   rbx
  42822a:	sub    rsp,0x28
  42822e:	mov    r13d,edx
  428231:	mov    r14,rsi
  428234:	mov    rbx,rdi
  428237:	call   402050 <__errno_location@plt>
  42823c:	mov    edi,DWORD PTR [rax]
  42823e:	call   4022a0 <strerror@plt>
  428243:	mov    r15,rax
  428246:	test   r13d,r13d
  428249:	jle    428271 <__ctype_b_loc@plt+0x25fa1>
  42824b:	mov    rax,QWORD PTR [rbx+0x18]
  42824f:	movsxd rcx,r13d
  428252:	shl    rcx,0x4
  428256:	add    rax,rcx
  428259:	add    rax,0xfffffffffffffff0
  42825d:	cmp    rax,QWORD PTR [rbx+0x10]
  428261:	lea    rbp,[rip+0x18b0]        # 429b18 <__ctype_b_loc@plt+0x27848>
  428268:	cmovb  rbp,rax
  42826c:	jmp    42831a <__ctype_b_loc@plt+0x2604a>
  428271:	cmp    r13d,0xffffd8f1
  428278:	jl     42828a <__ctype_b_loc@plt+0x25fba>
  42827a:	movsxd rbp,r13d
  42827d:	shl    rbp,0x4
  428281:	add    rbp,QWORD PTR [rbx+0x10]
  428285:	jmp    42831a <__ctype_b_loc@plt+0x2604a>
  42828a:	cmp    r13d,0xffffd8ee
  428291:	je     4282d9 <__ctype_b_loc@plt+0x26009>
  428293:	cmp    r13d,0xffffd8ef
  42829a:	je     4282b0 <__ctype_b_loc@plt+0x25fe0>
  42829c:	cmp    r13d,0xffffd8f0
  4282a3:	jne    4282df <__ctype_b_loc@plt+0x2600f>
  4282a5:	mov    ebp,0xa0
  4282aa:	add    rbp,QWORD PTR [rbx+0x20]
  4282ae:	jmp    42831a <__ctype_b_loc@plt+0x2604a>
  4282b0:	mov    rax,QWORD PTR [rbx+0x28]
  4282b4:	mov    rax,QWORD PTR [rax+0x8]
  4282b8:	mov    rax,QWORD PTR [rax]
  4282bb:	lea    rbp,[rbx+0x88]
  4282c2:	mov    rax,QWORD PTR [rax+0x18]
  4282c6:	mov    QWORD PTR [rbx+0x88],rax
  4282cd:	mov    DWORD PTR [rbx+0x90],0x5
  4282d7:	jmp    42831a <__ctype_b_loc@plt+0x2604a>
  4282d9:	lea    rbp,[rbx+0x78]
  4282dd:	jmp    42831a <__ctype_b_loc@plt+0x2604a>
  4282df:	mov    rax,QWORD PTR [rbx+0x28]
  4282e3:	mov    rax,QWORD PTR [rax+0x8]
  4282e7:	mov    rax,QWORD PTR [rax]
  4282ea:	mov    ecx,0xffffd8ee
  4282ef:	sub    ecx,r13d
  4282f2:	movzx  edx,BYTE PTR [rax+0xb]
  4282f6:	cmp    ecx,edx
  4282f8:	jle    428303 <__ctype_b_loc@plt+0x26033>
  4282fa:	lea    rbp,[rip+0x1817]        # 429b18 <__ctype_b_loc@plt+0x27848>
  428301:	jmp    42831a <__ctype_b_loc@plt+0x2604a>
  428303:	mov    ecx,0xffffd8ed
  428308:	sub    ecx,r13d
  42830b:	movsxd rcx,ecx
  42830e:	shl    rcx,0x4
  428312:	lea    rbp,[rax+rcx*1]
  428316:	add    rbp,0x28
  42831a:	mov    eax,DWORD PTR [rbp+0x8]
  42831d:	cmp    eax,0x4
  428320:	je     428456 <__ctype_b_loc@plt+0x26186>
  428326:	cmp    eax,0x3
  428329:	jne    4283a6 <__ctype_b_loc@plt+0x260d6>
  42832b:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  428330:	lea    rsi,[rip+0x1aea]        # 429e21 <__ctype_b_loc@plt+0x27b51>
  428337:	mov    r12,rsp
  42833a:	mov    rdi,r12
  42833d:	mov    al,0x1
  42833f:	call   402270 <sprintf@plt>
  428344:	mov    rdi,r12
  428347:	call   4020e0 <strlen@plt>
  42834c:	mov    rdi,rbx
  42834f:	mov    rsi,r12
  428352:	mov    rdx,rax
  428355:	call   403a80 <__ctype_b_loc@plt+0x17b0>
  42835a:	mov    QWORD PTR [rbp+0x0],rax
  42835e:	mov    DWORD PTR [rbp+0x8],0x4
  428365:	mov    rax,QWORD PTR [rbx+0x20]
  428369:	mov    rcx,QWORD PTR [rax+0x78]
  42836d:	cmp    rcx,QWORD PTR [rax+0x70]
  428371:	jb     42837b <__ctype_b_loc@plt+0x260ab>
  428373:	mov    rdi,rbx
  428376:	call   407f90 <__ctype_b_loc@plt+0x5cc0>
  42837b:	test   r13d,r13d
  42837e:	jle    4283ad <__ctype_b_loc@plt+0x260dd>
  428380:	mov    rax,QWORD PTR [rbx+0x18]
  428384:	movsxd rcx,r13d
  428387:	shl    rcx,0x4
  42838b:	add    rax,rcx
  42838e:	add    rax,0xfffffffffffffff0
  428392:	cmp    rax,QWORD PTR [rbx+0x10]
  428396:	lea    rbp,[rip+0x177b]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42839d:	cmovb  rbp,rax
  4283a1:	jmp    428456 <__ctype_b_loc@plt+0x26186>
  4283a6:	xor    ecx,ecx
  4283a8:	jmp    42845e <__ctype_b_loc@plt+0x2618e>
  4283ad:	cmp    r13d,0xffffd8f1
  4283b4:	jl     4283c6 <__ctype_b_loc@plt+0x260f6>
  4283b6:	movsxd rbp,r13d
  4283b9:	shl    rbp,0x4
  4283bd:	add    rbp,QWORD PTR [rbx+0x10]
  4283c1:	jmp    428456 <__ctype_b_loc@plt+0x26186>
  4283c6:	cmp    r13d,0xffffd8ee
  4283cd:	je     4283ec <__ctype_b_loc@plt+0x2611c>
  4283cf:	cmp    r13d,0xffffd8ef
  4283d6:	je     4283f2 <__ctype_b_loc@plt+0x26122>
  4283d8:	cmp    r13d,0xffffd8f0
  4283df:	jne    42841b <__ctype_b_loc@plt+0x2614b>
  4283e1:	mov    ebp,0xa0
  4283e6:	add    rbp,QWORD PTR [rbx+0x20]
  4283ea:	jmp    428456 <__ctype_b_loc@plt+0x26186>
  4283ec:	lea    rbp,[rbx+0x78]
  4283f0:	jmp    428456 <__ctype_b_loc@plt+0x26186>
  4283f2:	mov    rax,QWORD PTR [rbx+0x28]
  4283f6:	mov    rax,QWORD PTR [rax+0x8]
  4283fa:	mov    rax,QWORD PTR [rax]
  4283fd:	lea    rbp,[rbx+0x88]
  428404:	mov    rax,QWORD PTR [rax+0x18]
  428408:	mov    QWORD PTR [rbx+0x88],rax
  42840f:	mov    DWORD PTR [rbx+0x90],0x5
  428419:	jmp    428456 <__ctype_b_loc@plt+0x26186>
  42841b:	mov    rax,QWORD PTR [rbx+0x28]
  42841f:	mov    rax,QWORD PTR [rax+0x8]
  428423:	mov    rax,QWORD PTR [rax]
  428426:	mov    ecx,0xffffd8ee
  42842b:	sub    ecx,r13d
  42842e:	movzx  edx,BYTE PTR [rax+0xb]
  428432:	cmp    ecx,edx
  428434:	jle    42843f <__ctype_b_loc@plt+0x2616f>
  428436:	lea    rbp,[rip+0x16db]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42843d:	jmp    428456 <__ctype_b_loc@plt+0x26186>
  42843f:	mov    ecx,0xffffd8ed
  428444:	sub    ecx,r13d
  428447:	movsxd rcx,ecx
  42844a:	shl    rcx,0x4
  42844e:	lea    rbp,[rax+rcx*1]
  428452:	add    rbp,0x28
  428456:	mov    rcx,QWORD PTR [rbp+0x0]
  42845a:	add    rcx,0x18
  42845e:	inc    rcx
  428461:	lea    rsi,[rip+0x260a]        # 42aa72 <__ctype_b_loc@plt+0x287a2>
  428468:	mov    rdi,rbx
  42846b:	mov    rdx,r14
  42846e:	mov    r8,r15
  428471:	xor    eax,eax
  428473:	call   410460 <__ctype_b_loc@plt+0xe190>
  428478:	test   r13d,r13d
  42847b:	jle    4284a3 <__ctype_b_loc@plt+0x261d3>
  42847d:	mov    rax,QWORD PTR [rbx+0x18]
  428481:	movsxd rcx,r13d
  428484:	shl    rcx,0x4
  428488:	add    rcx,rax
  42848b:	add    rcx,0xfffffffffffffff0
  42848f:	cmp    rcx,QWORD PTR [rbx+0x10]
  428493:	lea    rax,[rip+0x167e]        # 429b18 <__ctype_b_loc@plt+0x27848>
  42849a:	cmovb  rax,rcx
  42849e:	jmp    42854b <__ctype_b_loc@plt+0x2627b>
  4284a3:	cmp    r13d,0xffffd8f1
  4284aa:	jl     4284bc <__ctype_b_loc@plt+0x261ec>
  4284ac:	movsxd rax,r13d
  4284af:	shl    rax,0x4
  4284b3:	add    rax,QWORD PTR [rbx+0x10]
  4284b7:	jmp    42854b <__ctype_b_loc@plt+0x2627b>
  4284bc:	cmp    r13d,0xffffd8ee
  4284c3:	je     42850b <__ctype_b_loc@plt+0x2623b>
  4284c5:	cmp    r13d,0xffffd8ef
  4284cc:	je     4284e2 <__ctype_b_loc@plt+0x26212>
  4284ce:	cmp    r13d,0xffffd8f0
  4284d5:	jne    428511 <__ctype_b_loc@plt+0x26241>
  4284d7:	mov    eax,0xa0
  4284dc:	add    rax,QWORD PTR [rbx+0x20]
  4284e0:	jmp    42854b <__ctype_b_loc@plt+0x2627b>
  4284e2:	mov    rax,QWORD PTR [rbx+0x28]
  4284e6:	mov    rax,QWORD PTR [rax+0x8]
  4284ea:	mov    rcx,QWORD PTR [rax]
  4284ed:	lea    rax,[rbx+0x88]
  4284f4:	mov    rcx,QWORD PTR [rcx+0x18]
  4284f8:	mov    QWORD PTR [rbx+0x88],rcx
  4284ff:	mov    DWORD PTR [rbx+0x90],0x5
  428509:	jmp    42854b <__ctype_b_loc@plt+0x2627b>
  42850b:	lea    rax,[rbx+0x78]
  42850f:	jmp    42854b <__ctype_b_loc@plt+0x2627b>
  428511:	mov    rax,QWORD PTR [rbx+0x28]
  428515:	mov    rax,QWORD PTR [rax+0x8]
  428519:	mov    rax,QWORD PTR [rax]
  42851c:	mov    ecx,0xffffd8ee
  428521:	sub    ecx,r13d
  428524:	movzx  edx,BYTE PTR [rax+0xb]
  428528:	cmp    ecx,edx
  42852a:	jle    428535 <__ctype_b_loc@plt+0x26265>
  42852c:	lea    rax,[rip+0x15e5]        # 429b18 <__ctype_b_loc@plt+0x27848>
  428533:	jmp    42854b <__ctype_b_loc@plt+0x2627b>
  428535:	mov    ecx,0xffffd8ed
  42853a:	sub    ecx,r13d
  42853d:	movsxd rcx,ecx
  428540:	shl    rcx,0x4
  428544:	add    rax,rcx
  428547:	add    rax,0x28
  42854b:	add    rax,0x10
  42854f:	mov    rcx,QWORD PTR [rbx+0x10]
  428553:	cmp    rax,rcx
  428556:	jae    42857a <__ctype_b_loc@plt+0x262aa>
  428558:	nop    DWORD PTR [rax+rax*1+0x0]
  428560:	mov    rcx,QWORD PTR [rax]
  428563:	mov    QWORD PTR [rax-0x10],rcx
  428567:	mov    ecx,DWORD PTR [rax+0x8]
  42856a:	mov    DWORD PTR [rax-0x8],ecx
  42856d:	mov    rcx,QWORD PTR [rbx+0x10]
  428571:	add    rax,0x10
  428575:	cmp    rax,rcx
  428578:	jb     428560 <__ctype_b_loc@plt+0x26290>
  42857a:	add    rcx,0xfffffffffffffff0
  42857e:	mov    QWORD PTR [rbx+0x10],rcx
  428582:	add    rsp,0x28
  428586:	pop    rbx
  428587:	pop    r12
  428589:	pop    r13
  42858b:	pop    r14
  42858d:	pop    r15
  42858f:	pop    rbp
  428590:	ret    
  428591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42859b:	nop    DWORD PTR [rax+rax*1+0x0]
  4285a0:	push   r14
  4285a2:	push   rbx
  4285a3:	push   rax
  4285a4:	mov    r14,rdx
  4285a7:	mov    rbx,rsi
  4285aa:	cmp    DWORD PTR [rsi],0x0
  4285ad:	je     4285c5 <__ctype_b_loc@plt+0x262f5>
  4285af:	mov    DWORD PTR [rbx],0x0
  4285b5:	mov    QWORD PTR [r14],0x1
  4285bc:	lea    rbx,[rip+0x1ad7]        # 42a09a <__ctype_b_loc@plt+0x27dca>
  4285c3:	jmp    4285fa <__ctype_b_loc@plt+0x2632a>
  4285c5:	mov    rdi,QWORD PTR [rbx+0x8]
  4285c9:	call   402190 <feof@plt>
  4285ce:	test   eax,eax
  4285d0:	je     4285d6 <__ctype_b_loc@plt+0x26306>
  4285d2:	xor    ebx,ebx
  4285d4:	jmp    4285fa <__ctype_b_loc@plt+0x2632a>
  4285d6:	mov    rcx,QWORD PTR [rbx+0x8]
  4285da:	add    rbx,0x10
  4285de:	mov    esi,0x1
  4285e3:	mov    edx,0x2000
  4285e8:	mov    rdi,rbx
  4285eb:	call   4020a0 <fread@plt>
  4285f0:	mov    QWORD PTR [r14],rax
  4285f3:	test   rax,rax
  4285f6:	cmove  rbx,rax
  4285fa:	mov    rax,rbx
  4285fd:	add    rsp,0x8
  428601:	pop    rbx
  428602:	pop    r14
  428604:	ret    
  428605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42860f:	nop
  428610:	mov    rax,QWORD PTR [rsi]
  428613:	mov    edx,DWORD PTR [rsi+0x8]
  428616:	mov    rsi,rax
  428619:	jmp    405020 <__ctype_b_loc@plt+0x2d50>
  42861e:	xchg   ax,ax
  428620:	push   rbx
  428621:	mov    rax,QWORD PTR [rdi+0x20]
  428625:	cmp    QWORD PTR [rax+0x50],0x0
  42862a:	je     428643 <__ctype_b_loc@plt+0x26373>
  42862c:	mov    rbx,rdi
  42862f:	nop
  428630:	mov    rdi,rbx
  428633:	call   40b570 <__ctype_b_loc@plt+0x92a0>
  428638:	mov    rax,QWORD PTR [rbx+0x20]
  42863c:	cmp    QWORD PTR [rax+0x50],0x0
  428641:	jne    428630 <__ctype_b_loc@plt+0x26360>
  428643:	pop    rbx
  428644:	ret    
  428645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42864f:	nop
  428650:	endbr64 
  428654:	push   r15
  428656:	lea    r15,[rip+0x71a3]        # 42f800 <__ctype_b_loc@plt+0x2d530>
  42865d:	push   r14
  42865f:	mov    r14,rdx
  428662:	push   r13
  428664:	mov    r13,rsi
  428667:	push   r12
  428669:	mov    r12d,edi
  42866c:	push   rbp
  42866d:	lea    rbp,[rip+0x7194]        # 42f808 <__ctype_b_loc@plt+0x2d538>
  428674:	push   rbx
  428675:	sub    rbp,r15
  428678:	sub    rsp,0x8
  42867c:	call   402000 <__ctype_toupper_loc@plt-0x30>
  428681:	sar    rbp,0x3
  428685:	je     4286a6 <__ctype_b_loc@plt+0x263d6>
  428687:	xor    ebx,ebx
  428689:	nop    DWORD PTR [rax+0x0]
  428690:	mov    rdx,r14
  428693:	mov    rsi,r13
  428696:	mov    edi,r12d
  428699:	call   QWORD PTR [r15+rbx*8]
  42869d:	add    rbx,0x1
  4286a1:	cmp    rbp,rbx
  4286a4:	jne    428690 <__ctype_b_loc@plt+0x263c0>
  4286a6:	add    rsp,0x8
  4286aa:	pop    rbx
  4286ab:	pop    rbp
  4286ac:	pop    r12
  4286ae:	pop    r13
  4286b0:	pop    r14
  4286b2:	pop    r15
  4286b4:	ret    
  4286b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4286c0:	endbr64 
  4286c4:	ret    

Disassembly of section .fini:

00000000004286c8 <.fini>:
  4286c8:	endbr64 
  4286cc:	sub    rsp,0x8
  4286d0:	add    rsp,0x8
  4286d4:	ret    
