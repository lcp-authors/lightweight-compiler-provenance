
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x9fe1]        # 40bff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <getenv@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <getenv@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x9fe2]        # 40c008 <_IO_stdin_used@@Base+0x4008>
  402026:	jmp    QWORD PTR [rip+0x9fe4]        # 40c010 <_IO_stdin_used@@Base+0x4010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <getenv@plt>:
  402030:	jmp    QWORD PTR [rip+0x9fe2]        # 40c018 <getenv@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <getenv@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0x9fda]        # 40c020 <free@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <getenv@plt-0x10>

0000000000402050 <__vfprintf_chk@plt>:
  402050:	jmp    QWORD PTR [rip+0x9fd2]        # 40c028 <__vfprintf_chk@GLIBC_2.3.4>
  402056:	push   0x2
  40205b:	jmp    402020 <getenv@plt-0x10>

0000000000402060 <abort@plt>:
  402060:	jmp    QWORD PTR [rip+0x9fca]        # 40c030 <abort@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <getenv@plt-0x10>

0000000000402070 <__errno_location@plt>:
  402070:	jmp    QWORD PTR [rip+0x9fc2]        # 40c038 <__errno_location@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <getenv@plt-0x10>

0000000000402080 <strcpy@plt>:
  402080:	jmp    QWORD PTR [rip+0x9fba]        # 40c040 <strcpy@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <getenv@plt-0x10>

0000000000402090 <mkdir@plt>:
  402090:	jmp    QWORD PTR [rip+0x9fb2]        # 40c048 <mkdir@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <getenv@plt-0x10>

00000000004020a0 <puts@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x9faa]        # 40c050 <puts@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <getenv@plt-0x10>

00000000004020b0 <fread@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x9fa2]        # 40c058 <fread@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <getenv@plt-0x10>

00000000004020c0 <fcntl@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x9f9a]        # 40c060 <fcntl@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <getenv@plt-0x10>

00000000004020d0 <getpid@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x9f92]        # 40c068 <getpid@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <getenv@plt-0x10>

00000000004020e0 <fclose@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x9f8a]        # 40c070 <fclose@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <getenv@plt-0x10>

00000000004020f0 <strlen@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x9f82]        # 40c078 <strlen@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <getenv@plt-0x10>

0000000000402100 <__stack_chk_fail@plt>:
  402100:	jmp    QWORD PTR [rip+0x9f7a]        # 40c080 <__stack_chk_fail@GLIBC_2.4>
  402106:	push   0xd
  40210b:	jmp    402020 <getenv@plt-0x10>

0000000000402110 <setbuf@plt>:
  402110:	jmp    QWORD PTR [rip+0x9f72]        # 40c088 <setbuf@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <getenv@plt-0x10>

0000000000402120 <__assert_fail@plt>:
  402120:	jmp    QWORD PTR [rip+0x9f6a]        # 40c090 <__assert_fail@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <getenv@plt-0x10>

0000000000402130 <strnlen@plt>:
  402130:	jmp    QWORD PTR [rip+0x9f62]        # 40c098 <strnlen@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <getenv@plt-0x10>

0000000000402140 <close@plt>:
  402140:	jmp    QWORD PTR [rip+0x9f5a]        # 40c0a0 <close@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <getenv@plt-0x10>

0000000000402150 <ftell@plt>:
  402150:	jmp    QWORD PTR [rip+0x9f52]        # 40c0a8 <ftell@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <getenv@plt-0x10>

0000000000402160 <strtol@plt>:
  402160:	jmp    QWORD PTR [rip+0x9f4a]        # 40c0b0 <strtol@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <getenv@plt-0x10>

0000000000402170 <memcpy@plt>:
  402170:	jmp    QWORD PTR [rip+0x9f42]        # 40c0b8 <memcpy@GLIBC_2.14>
  402176:	push   0x14
  40217b:	jmp    402020 <getenv@plt-0x10>

0000000000402180 <malloc@plt>:
  402180:	jmp    QWORD PTR [rip+0x9f3a]        # 40c0c0 <malloc@GLIBC_2.2.5>
  402186:	push   0x15
  40218b:	jmp    402020 <getenv@plt-0x10>

0000000000402190 <fflush@plt>:
  402190:	jmp    QWORD PTR [rip+0x9f32]        # 40c0c8 <fflush@GLIBC_2.2.5>
  402196:	push   0x16
  40219b:	jmp    402020 <getenv@plt-0x10>

00000000004021a0 <__fxstat@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x9f2a]        # 40c0d0 <__fxstat@GLIBC_2.2.5>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <getenv@plt-0x10>

00000000004021b0 <fseek@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x9f22]        # 40c0d8 <fseek@GLIBC_2.2.5>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <getenv@plt-0x10>

00000000004021c0 <fdopen@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x9f1a]        # 40c0e0 <fdopen@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <getenv@plt-0x10>

00000000004021d0 <__printf_chk@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x9f12]        # 40c0e8 <__printf_chk@GLIBC_2.3.4>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <getenv@plt-0x10>

00000000004021e0 <open@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x9f0a]        # 40c0f0 <open@GLIBC_2.2.5>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <getenv@plt-0x10>

00000000004021f0 <access@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x9f02]        # 40c0f8 <access@GLIBC_2.2.5>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <getenv@plt-0x10>

0000000000402200 <__cxa_atexit@plt>:
  402200:	jmp    QWORD PTR [rip+0x9efa]        # 40c100 <__cxa_atexit@GLIBC_2.2.5>
  402206:	push   0x1d
  40220b:	jmp    402020 <getenv@plt-0x10>

0000000000402210 <exit@plt>:
  402210:	jmp    QWORD PTR [rip+0x9ef2]        # 40c108 <exit@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <getenv@plt-0x10>

0000000000402220 <fwrite@plt>:
  402220:	jmp    QWORD PTR [rip+0x9eea]        # 40c110 <fwrite@GLIBC_2.2.5>
  402226:	push   0x1f
  40222b:	jmp    402020 <getenv@plt-0x10>

0000000000402230 <__fprintf_chk@plt>:
  402230:	jmp    QWORD PTR [rip+0x9ee2]        # 40c118 <__fprintf_chk@GLIBC_2.3.4>
  402236:	push   0x20
  40223b:	jmp    402020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000402240 <main@@Base>:
  402240:	push   rbx
  402241:	mov    rbx,QWORD PTR [rip+0x9d98]        # 40bfe0 <stdout@GLIBC_2.2.5>
  402248:	xor    esi,esi
  40224a:	add    QWORD PTR [rip+0xbbce],0x1        # 40de20 <__bss_start@@Base+0x6b0>
  402252:	mov    rdi,QWORD PTR [rbx]
  402255:	call   402110 <setbuf@plt>
  40225a:	mov    rcx,QWORD PTR [rbx]
  40225d:	lea    rdi,[rip+0x61c3]        # 408427 <_IO_stdin_used@@Base+0x427>
  402264:	mov    edx,0xe
  402269:	mov    esi,0x1
  40226e:	add    QWORD PTR [rip+0xbbb2],0x1        # 40de28 <__bss_start@@Base+0x6b8>
  402276:	call   402220 <fwrite@plt>
  40227b:	mov    rcx,QWORD PTR [rbx]
  40227e:	lea    rdi,[rip+0x61b1]        # 408436 <_IO_stdin_used@@Base+0x436>
  402285:	mov    edx,0xe
  40228a:	mov    esi,0x1
  40228f:	add    QWORD PTR [rip+0xbb99],0x1        # 40de30 <__bss_start@@Base+0x6c0>
  402297:	call   402220 <fwrite@plt>
  40229c:	mov    rcx,QWORD PTR [rbx]
  40229f:	lea    rdi,[rip+0x619f]        # 408445 <_IO_stdin_used@@Base+0x445>
  4022a6:	mov    edx,0xf
  4022ab:	mov    esi,0x1
  4022b0:	add    QWORD PTR [rip+0xbb80],0x1        # 40de38 <__bss_start@@Base+0x6c8>
  4022b8:	call   402220 <fwrite@plt>
  4022bd:	xor    edi,edi
  4022bf:	add    QWORD PTR [rip+0xbb79],0x1        # 40de40 <__bss_start@@Base+0x6d0>
  4022c7:	call   402190 <fflush@plt>
  4022cc:	lea    rcx,[rip+0x6182]        # 408455 <_IO_stdin_used@@Base+0x455>
  4022d3:	lea    rdx,[rip+0x6191]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4022da:	lea    rsi,[rip+0x6196]        # 408477 <_IO_stdin_used@@Base+0x477>
  4022e1:	mov    edi,0x1
  4022e6:	xor    eax,eax
  4022e8:	add    QWORD PTR [rip+0xbb58],0x1        # 40de48 <__bss_start@@Base+0x6d8>
  4022f0:	call   4021d0 <__printf_chk@plt>
  4022f5:	xor    eax,eax
  4022f7:	add    QWORD PTR [rip+0xbb51],0x1        # 40de50 <__bss_start@@Base+0x6e0>
  4022ff:	call   402ae0 <setup@@Base>
  402304:	xor    eax,eax
  402306:	add    QWORD PTR [rip+0xbb4a],0x1        # 40de58 <__bss_start@@Base+0x6e8>
  40230e:	call   402b10 <no_int_as_first_stuff@@Base>
  402313:	lea    rdi,[rip+0x616f]        # 408489 <_IO_stdin_used@@Base+0x489>
  40231a:	add    QWORD PTR [rip+0xbb3e],0x1        # 40de60 <__bss_start@@Base+0x6f0>
  402322:	call   4020a0 <puts@plt>
  402327:	lea    rcx,[rip+0x5d7a]        # 4080a8 <_IO_stdin_used@@Base+0xa8>
  40232e:	lea    rdx,[rip+0x6136]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402335:	lea    rsi,[rip+0x613b]        # 408477 <_IO_stdin_used@@Base+0x477>
  40233c:	mov    edi,0x1
  402341:	xor    eax,eax
  402343:	add    QWORD PTR [rip+0xbb1d],0x1        # 40de68 <__bss_start@@Base+0x6f8>
  40234b:	call   4021d0 <__printf_chk@plt>
  402350:	xor    eax,eax
  402352:	add    QWORD PTR [rip+0xbb16],0x1        # 40de70 <__bss_start@@Base+0x700>
  40235a:	call   402ae0 <setup@@Base>
  40235f:	xor    eax,eax
  402361:	add    QWORD PTR [rip+0xbb0f],0x1        # 40de78 <__bss_start@@Base+0x708>
  402369:	call   402c00 <int_but_not_followed_by_function@@Base>
  40236e:	lea    rdi,[rip+0x6114]        # 408489 <_IO_stdin_used@@Base+0x489>
  402375:	add    QWORD PTR [rip+0xbb03],0x1        # 40de80 <__bss_start@@Base+0x710>
  40237d:	call   4020a0 <puts@plt>
  402382:	lea    rcx,[rip+0x5d47]        # 4080d0 <_IO_stdin_used@@Base+0xd0>
  402389:	lea    rdx,[rip+0x60db]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402390:	lea    rsi,[rip+0x60e0]        # 408477 <_IO_stdin_used@@Base+0x477>
  402397:	mov    edi,0x1
  40239c:	xor    eax,eax
  40239e:	add    QWORD PTR [rip+0xbae2],0x1        # 40de88 <__bss_start@@Base+0x718>
  4023a6:	call   4021d0 <__printf_chk@plt>
  4023ab:	xor    eax,eax
  4023ad:	add    QWORD PTR [rip+0xbadb],0x1        # 40de90 <__bss_start@@Base+0x720>
  4023b5:	call   402ae0 <setup@@Base>
  4023ba:	xor    eax,eax
  4023bc:	add    QWORD PTR [rip+0xbad4],0x1        # 40de98 <__bss_start@@Base+0x728>
  4023c4:	call   4033b0 <boolean_unary_operator_is_read_properly@@Base>
  4023c9:	lea    rdi,[rip+0x60b9]        # 408489 <_IO_stdin_used@@Base+0x489>
  4023d0:	add    QWORD PTR [rip+0xbac8],0x1        # 40dea0 <__bss_start@@Base+0x730>
  4023d8:	call   4020a0 <puts@plt>
  4023dd:	lea    rcx,[rip+0x5d14]        # 4080f8 <_IO_stdin_used@@Base+0xf8>
  4023e4:	lea    rdx,[rip+0x6080]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4023eb:	lea    rsi,[rip+0x6085]        # 408477 <_IO_stdin_used@@Base+0x477>
  4023f2:	mov    edi,0x1
  4023f7:	xor    eax,eax
  4023f9:	add    QWORD PTR [rip+0xbaa7],0x1        # 40dea8 <__bss_start@@Base+0x738>
  402401:	call   4021d0 <__printf_chk@plt>
  402406:	xor    eax,eax
  402408:	add    QWORD PTR [rip+0xbaa0],0x1        # 40deb0 <__bss_start@@Base+0x740>
  402410:	call   402ae0 <setup@@Base>
  402415:	xor    eax,eax
  402417:	add    QWORD PTR [rip+0xba99],0x1        # 40deb8 <__bss_start@@Base+0x748>
  40241f:	call   4031b0 <boolean_binary_operator_is_read_properly@@Base>
  402424:	lea    rdi,[rip+0x605e]        # 408489 <_IO_stdin_used@@Base+0x489>
  40242b:	add    QWORD PTR [rip+0xba8d],0x1        # 40dec0 <__bss_start@@Base+0x750>
  402433:	call   4020a0 <puts@plt>
  402438:	lea    rcx,[rip+0x5ce9]        # 408128 <_IO_stdin_used@@Base+0x128>
  40243f:	lea    rdx,[rip+0x6025]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402446:	lea    rsi,[rip+0x602a]        # 408477 <_IO_stdin_used@@Base+0x477>
  40244d:	mov    edi,0x1
  402452:	xor    eax,eax
  402454:	add    QWORD PTR [rip+0xba6c],0x1        # 40dec8 <__bss_start@@Base+0x758>
  40245c:	call   4021d0 <__printf_chk@plt>
  402461:	xor    eax,eax
  402463:	add    QWORD PTR [rip+0xba65],0x1        # 40ded0 <__bss_start@@Base+0x760>
  40246b:	call   402ae0 <setup@@Base>
  402470:	xor    eax,eax
  402472:	add    QWORD PTR [rip+0xba5e],0x1        # 40ded8 <__bss_start@@Base+0x768>
  40247a:	call   402d30 <boolean_expression_is_read_properly@@Base>
  40247f:	lea    rdi,[rip+0x6003]        # 408489 <_IO_stdin_used@@Base+0x489>
  402486:	add    QWORD PTR [rip+0xba52],0x1        # 40dee0 <__bss_start@@Base+0x770>
  40248e:	call   4020a0 <puts@plt>
  402493:	lea    rcx,[rip+0x5ff8]        # 408492 <_IO_stdin_used@@Base+0x492>
  40249a:	lea    rdx,[rip+0x5fca]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4024a1:	lea    rsi,[rip+0x5fcf]        # 408477 <_IO_stdin_used@@Base+0x477>
  4024a8:	mov    edi,0x1
  4024ad:	xor    eax,eax
  4024af:	add    QWORD PTR [rip+0xba31],0x1        # 40dee8 <__bss_start@@Base+0x778>
  4024b7:	call   4021d0 <__printf_chk@plt>
  4024bc:	xor    eax,eax
  4024be:	add    QWORD PTR [rip+0xba2a],0x1        # 40def0 <__bss_start@@Base+0x780>
  4024c6:	call   402ae0 <setup@@Base>
  4024cb:	xor    eax,eax
  4024cd:	add    QWORD PTR [rip+0xba23],0x1        # 40def8 <__bss_start@@Base+0x788>
  4024d5:	call   402f10 <boolean_expression_complex@@Base>
  4024da:	lea    rdi,[rip+0x5fa8]        # 408489 <_IO_stdin_used@@Base+0x489>
  4024e1:	add    QWORD PTR [rip+0xba17],0x1        # 40df00 <__bss_start@@Base+0x790>
  4024e9:	call   4020a0 <puts@plt>
  4024ee:	lea    rcx,[rip+0x5fb8]        # 4084ad <_IO_stdin_used@@Base+0x4ad>
  4024f5:	lea    rdx,[rip+0x5f6f]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4024fc:	lea    rsi,[rip+0x5f74]        # 408477 <_IO_stdin_used@@Base+0x477>
  402503:	mov    edi,0x1
  402508:	xor    eax,eax
  40250a:	add    QWORD PTR [rip+0xb9f6],0x1        # 40df08 <__bss_start@@Base+0x798>
  402512:	call   4021d0 <__printf_chk@plt>
  402517:	xor    eax,eax
  402519:	add    QWORD PTR [rip+0xb9ef],0x1        # 40df10 <__bss_start@@Base+0x7a0>
  402521:	call   402ae0 <setup@@Base>
  402526:	xor    eax,eax
  402528:	add    QWORD PTR [rip+0xb9e8],0x1        # 40df18 <__bss_start@@Base+0x7a8>
  402530:	call   403590 <if_statement_only@@Base>
  402535:	lea    rdi,[rip+0x5f4d]        # 408489 <_IO_stdin_used@@Base+0x489>
  40253c:	add    QWORD PTR [rip+0xb9dc],0x1        # 40df20 <__bss_start@@Base+0x7b0>
  402544:	call   4020a0 <puts@plt>
  402549:	lea    rcx,[rip+0x5f6f]        # 4084bf <_IO_stdin_used@@Base+0x4bf>
  402550:	lea    rdx,[rip+0x5f14]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402557:	lea    rsi,[rip+0x5f19]        # 408477 <_IO_stdin_used@@Base+0x477>
  40255e:	mov    edi,0x1
  402563:	xor    eax,eax
  402565:	add    QWORD PTR [rip+0xb9bb],0x1        # 40df28 <__bss_start@@Base+0x7b8>
  40256d:	call   4021d0 <__printf_chk@plt>
  402572:	xor    eax,eax
  402574:	add    QWORD PTR [rip+0xb9b4],0x1        # 40df30 <__bss_start@@Base+0x7c0>
  40257c:	call   402ae0 <setup@@Base>
  402581:	add    QWORD PTR [rip+0xb9af],0x1        # 40df38 <__bss_start@@Base+0x7c8>
  402589:	xor    eax,eax
  40258b:	call   4037e0 <if_else_statements@@Base>
  402590:	lea    rdi,[rip+0x5ef2]        # 408489 <_IO_stdin_used@@Base+0x489>
  402597:	add    QWORD PTR [rip+0xb9a1],0x1        # 40df40 <__bss_start@@Base+0x7d0>
  40259f:	call   4020a0 <puts@plt>
  4025a4:	lea    rcx,[rip+0x5ba5]        # 408150 <_IO_stdin_used@@Base+0x150>
  4025ab:	lea    rdx,[rip+0x5eb9]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4025b2:	lea    rsi,[rip+0x5ebe]        # 408477 <_IO_stdin_used@@Base+0x477>
  4025b9:	mov    edi,0x1
  4025be:	xor    eax,eax
  4025c0:	add    QWORD PTR [rip+0xb980],0x1        # 40df48 <__bss_start@@Base+0x7d8>
  4025c8:	call   4021d0 <__printf_chk@plt>
  4025cd:	xor    eax,eax
  4025cf:	add    QWORD PTR [rip+0xb979],0x1        # 40df50 <__bss_start@@Base+0x7e0>
  4025d7:	call   402ae0 <setup@@Base>
  4025dc:	xor    eax,eax
  4025de:	add    QWORD PTR [rip+0xb972],0x1        # 40df58 <__bss_start@@Base+0x7e8>
  4025e6:	call   403ee0 <if_statement_inside_if_statement@@Base>
  4025eb:	lea    rdi,[rip+0x5e97]        # 408489 <_IO_stdin_used@@Base+0x489>
  4025f2:	add    QWORD PTR [rip+0xb966],0x1        # 40df60 <__bss_start@@Base+0x7f0>
  4025fa:	call   4020a0 <puts@plt>
  4025ff:	lea    rcx,[rip+0x5b72]        # 408178 <_IO_stdin_used@@Base+0x178>
  402606:	lea    rdx,[rip+0x5e5e]        # 40846b <_IO_stdin_used@@Base+0x46b>
  40260d:	lea    rsi,[rip+0x5e63]        # 408477 <_IO_stdin_used@@Base+0x477>
  402614:	mov    edi,0x1
  402619:	xor    eax,eax
  40261b:	add    QWORD PTR [rip+0xb945],0x1        # 40df68 <__bss_start@@Base+0x7f8>
  402623:	call   4021d0 <__printf_chk@plt>
  402628:	xor    eax,eax
  40262a:	add    QWORD PTR [rip+0xb93e],0x1        # 40df70 <__bss_start@@Base+0x800>
  402632:	call   402ae0 <setup@@Base>
  402637:	xor    eax,eax
  402639:	add    QWORD PTR [rip+0xb937],0x1        # 40df78 <__bss_start@@Base+0x808>
  402641:	call   4042a0 <if_statement_inside_else_statement@@Base>
  402646:	lea    rdi,[rip+0x5e3c]        # 408489 <_IO_stdin_used@@Base+0x489>
  40264d:	add    QWORD PTR [rip+0xb92b],0x1        # 40df80 <__bss_start@@Base+0x810>
  402655:	call   4020a0 <puts@plt>
  40265a:	lea    rcx,[rip+0x5e71]        # 4084d2 <_IO_stdin_used@@Base+0x4d2>
  402661:	lea    rdx,[rip+0x5e03]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402668:	lea    rsi,[rip+0x5e08]        # 408477 <_IO_stdin_used@@Base+0x477>
  40266f:	mov    edi,0x1
  402674:	xor    eax,eax
  402676:	add    QWORD PTR [rip+0xb90a],0x1        # 40df88 <__bss_start@@Base+0x818>
  40267e:	call   4021d0 <__printf_chk@plt>
  402683:	xor    eax,eax
  402685:	add    QWORD PTR [rip+0xb903],0x1        # 40df90 <__bss_start@@Base+0x820>
  40268d:	call   402ae0 <setup@@Base>
  402692:	add    QWORD PTR [rip+0xb8fe],0x1        # 40df98 <__bss_start@@Base+0x828>
  40269a:	xor    eax,eax
  40269c:	call   403cf0 <body_with_one_return@@Base>
  4026a1:	lea    rdi,[rip+0x5de1]        # 408489 <_IO_stdin_used@@Base+0x489>
  4026a8:	add    QWORD PTR [rip+0xb8f0],0x1        # 40dfa0 <__bss_start@@Base+0x830>
  4026b0:	call   4020a0 <puts@plt>
  4026b5:	lea    rcx,[rip+0x5e2b]        # 4084e7 <_IO_stdin_used@@Base+0x4e7>
  4026bc:	lea    rdx,[rip+0x5da8]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4026c3:	lea    rsi,[rip+0x5dad]        # 408477 <_IO_stdin_used@@Base+0x477>
  4026ca:	mov    edi,0x1
  4026cf:	xor    eax,eax
  4026d1:	add    QWORD PTR [rip+0xb8cf],0x1        # 40dfa8 <__bss_start@@Base+0x838>
  4026d9:	call   4021d0 <__printf_chk@plt>
  4026de:	xor    eax,eax
  4026e0:	add    QWORD PTR [rip+0xb8c8],0x1        # 40dfb0 <__bss_start@@Base+0x840>
  4026e8:	call   402ae0 <setup@@Base>
  4026ed:	xor    eax,eax
  4026ef:	add    QWORD PTR [rip+0xb8c1],0x1        # 40dfb8 <__bss_start@@Base+0x848>
  4026f7:	call   403a70 <body_with_two_returns@@Base>
  4026fc:	lea    rdi,[rip+0x5d86]        # 408489 <_IO_stdin_used@@Base+0x489>
  402703:	add    QWORD PTR [rip+0xb8b5],0x1        # 40dfc0 <__bss_start@@Base+0x850>
  40270b:	call   4020a0 <puts@plt>
  402710:	lea    rdi,[rip+0x5de6]        # 4084fd <_IO_stdin_used@@Base+0x4fd>
  402717:	add    QWORD PTR [rip+0xb8a9],0x1        # 40dfc8 <__bss_start@@Base+0x858>
  40271f:	call   4020a0 <puts@plt>
  402724:	lea    rdi,[rip+0x5de1]        # 40850c <_IO_stdin_used@@Base+0x50c>
  40272b:	add    QWORD PTR [rip+0xb89d],0x1        # 40dfd0 <__bss_start@@Base+0x860>
  402733:	call   4020a0 <puts@plt>
  402738:	lea    rdi,[rip+0x5ce8]        # 408427 <_IO_stdin_used@@Base+0x427>
  40273f:	add    QWORD PTR [rip+0xb891],0x1        # 40dfd8 <__bss_start@@Base+0x868>
  402747:	call   4020a0 <puts@plt>
  40274c:	xor    eax,eax
  40274e:	add    QWORD PTR [rip+0xb88a],0x1        # 40dfe0 <__bss_start@@Base+0x870>
  402756:	pop    rbx
  402757:	ret    
  402758:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	lea    rdi,[rip+0x9ef9]        # 40c660 <__data_start@@Base+0x540>
  402767:	jmp    4078e0 <__gcov_sort_n_vals@@Base+0x1640>
  40276c:	nop    DWORD PTR [rax+0x0]
  402770:	lea    rdi,[rip+0xa6c9]        # 40ce40 <__data_start@@Base+0xd20>
  402777:	jmp    4078e0 <__gcov_sort_n_vals@@Base+0x1640>
  40277c:	nop    DWORD PTR [rax+0x0]
  402780:	lea    rdi,[rip+0xabb9]        # 40d340 <__data_start@@Base+0x1220>
  402787:	jmp    4078e0 <__gcov_sort_n_vals@@Base+0x1640>
  40278c:	nop    DWORD PTR [rax+0x0]
  402790:	lea    rdi,[rip+0xaf49]        # 40d6e0 <__data_start@@Base+0x15c0>
  402797:	jmp    4078e0 <__gcov_sort_n_vals@@Base+0x1640>
  40279c:	nop    DWORD PTR [rax+0x0]

00000000004027a0 <_start@@Base>:
  4027a0:	endbr64 
  4027a4:	xor    ebp,ebp
  4027a6:	mov    r9,rdx
  4027a9:	pop    rsi
  4027aa:	mov    rdx,rsp
  4027ad:	and    rsp,0xfffffffffffffff0
  4027b1:	push   rax
  4027b2:	push   rsp
  4027b3:	mov    r8,0x407a50
  4027ba:	mov    rcx,0x4079e0
  4027c1:	mov    rdi,0x402240
  4027c8:	call   QWORD PTR [rip+0x981a]        # 40bfe8 <__libc_start_main@GLIBC_2.2.5>
  4027ce:	hlt    
  4027cf:	nop
  4027d0:	endbr64 
  4027d4:	ret    
  4027d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027df:	nop
  4027e0:	mov    eax,0x40d777
  4027e5:	push   rbp
  4027e6:	sub    rax,0x40d770
  4027ec:	cmp    rax,0xe
  4027f0:	mov    rbp,rsp
  4027f3:	jbe    402810 <_start@@Base+0x70>
  4027f5:	mov    eax,0x0
  4027fa:	test   rax,rax
  4027fd:	je     402810 <_start@@Base+0x70>
  4027ff:	pop    rbp
  402800:	mov    edi,0x40d770
  402805:	jmp    rax
  402807:	nop    WORD PTR [rax+rax*1+0x0]
  402810:	pop    rbp
  402811:	ret    
  402812:	nop    DWORD PTR [rax+0x0]
  402816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402820:	mov    esi,0x40d770
  402825:	push   rbp
  402826:	sub    rsi,0x40d770
  40282d:	sar    rsi,0x3
  402831:	mov    rbp,rsp
  402834:	mov    rax,rsi
  402837:	shr    rax,0x3f
  40283b:	add    rsi,rax
  40283e:	sar    rsi,1
  402841:	je     402858 <_start@@Base+0xb8>
  402843:	mov    eax,0x0
  402848:	test   rax,rax
  40284b:	je     402858 <_start@@Base+0xb8>
  40284d:	pop    rbp
  40284e:	mov    edi,0x40d770
  402853:	jmp    rax
  402855:	nop    DWORD PTR [rax]
  402858:	pop    rbp
  402859:	ret    
  40285a:	nop    WORD PTR [rax+rax*1+0x0]
  402860:	cmp    BYTE PTR [rip+0xaf19],0x0        # 40d780 <__bss_start@@Base+0x10>
  402867:	jne    40287a <_start@@Base+0xda>
  402869:	push   rbp
  40286a:	mov    rbp,rsp
  40286d:	call   4027e0 <_start@@Base+0x40>
  402872:	pop    rbp
  402873:	mov    BYTE PTR [rip+0xaf06],0x1        # 40d780 <__bss_start@@Base+0x10>
  40287a:	repz ret 
  40287c:	nop    DWORD PTR [rax+0x0]
  402880:	mov    edi,0x40be08
  402885:	cmp    QWORD PTR [rdi],0x0
  402889:	jne    402890 <_start@@Base+0xf0>
  40288b:	jmp    402820 <_start@@Base+0x80>
  40288d:	nop    DWORD PTR [rax]
  402890:	mov    eax,0x0
  402895:	test   rax,rax
  402898:	je     40288b <_start@@Base+0xeb>
  40289a:	push   rbp
  40289b:	mov    rbp,rsp
  40289e:	call   rax
  4028a0:	pop    rbp
  4028a1:	jmp    402820 <_start@@Base+0x80>
  4028a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004028b0 <push_back@@Base>:
  4028b0:	mov    rax,0x40e720
  4028b7:	mov    edx,DWORD PTR [rax+0x330]
  4028bd:	mov    QWORD PTR [rax],rdi
  4028c0:	mov    QWORD PTR [rax+0x198],rsi
  4028c7:	cmp    edx,0x31
  4028ca:	jbe    402940 <push_back@@Base+0x90>
  4028cc:	add    DWORD PTR [rax+0x338],0x1
  4028d3:	add    QWORD PTR [rip+0xaf0d],0x1        # 40d7e8 <__bss_start@@Base+0x78>
  4028db:	mov    rcx,0x40ec60
  4028e2:	add    edx,0x1
  4028e5:	mov    DWORD PTR [rax+0x330],edx
  4028eb:	mov    edx,DWORD PTR [rcx+0x190]
  4028f1:	cmp    edx,0x31
  4028f4:	ja     402914 <push_back@@Base+0x64>
  4028f6:	lea    r8d,[rdx+0x1]
  4028fa:	add    QWORD PTR [rip+0xaeee],0x1        # 40d7f0 <__bss_start@@Base+0x80>
  402902:	mov    DWORD PTR [rcx+0x190],r8d
  402909:	mov    r8,0x4028b0
  402910:	mov    QWORD PTR [rcx+rdx*8],r8
  402914:	mov    rax,QWORD PTR [rax+0x340]
  40291b:	test   rax,rax
  40291e:	je     40293a <push_back@@Base+0x8a>
  402920:	sub    rsp,0x8
  402924:	add    QWORD PTR [rip+0xaecc],0x1        # 40d7f8 <__bss_start@@Base+0x88>
  40292c:	call   rax
  40292e:	add    QWORD PTR [rip+0xaeca],0x1        # 40d800 <__bss_start@@Base+0x90>
  402936:	add    rsp,0x8
  40293a:	repz ret 
  40293c:	nop    DWORD PTR [rax+0x0]
  402940:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
  402945:	mov    edx,DWORD PTR [rax+0x330]
  40294b:	add    QWORD PTR [rip+0xae8d],0x1        # 40d7e0 <__bss_start@@Base+0x70>
  402953:	mov    QWORD PTR [rax+rdx*8+0x1a0],rsi
  40295b:	mov    edx,DWORD PTR [rax+0x330]
  402961:	jmp    4028db <push_back@@Base+0x2b>
  402966:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402970 <next@@Base>:
  402970:	mov    rax,0x40ea80
  402977:	mov    edx,DWORD PTR [rax+0x198]
  40297d:	mov    QWORD PTR [rax],rdi
  402980:	cmp    edx,0x31
  402983:	jbe    402a38 <next@@Base+0xc8>
  402989:	add    DWORD PTR [rax+0x1a0],0x1
  402990:	add    QWORD PTR [rip+0xae08],0x1        # 40d7a0 <__bss_start@@Base+0x30>
  402998:	mov    rcx,0x40ec60
  40299f:	add    edx,0x1
  4029a2:	mov    DWORD PTR [rax+0x198],edx
  4029a8:	mov    edx,DWORD PTR [rcx+0x190]
  4029ae:	cmp    edx,0x31
  4029b1:	ja     4029cf <next@@Base+0x5f>
  4029b3:	lea    esi,[rdx+0x1]
  4029b6:	add    QWORD PTR [rip+0xadea],0x1        # 40d7a8 <__bss_start@@Base+0x38>
  4029be:	mov    DWORD PTR [rcx+0x190],esi
  4029c4:	mov    rsi,0x402970
  4029cb:	mov    QWORD PTR [rcx+rdx*8],rsi
  4029cf:	mov    rdx,QWORD PTR [rax+0x1c0]
  4029d6:	test   rdx,rdx
  4029d9:	je     402a00 <next@@Base+0x90>
  4029db:	sub    rsp,0x8
  4029df:	add    QWORD PTR [rip+0xadc9],0x1        # 40d7b0 <__bss_start@@Base+0x40>
  4029e7:	call   rdx
  4029e9:	add    QWORD PTR [rip+0xadc7],0x1        # 40d7b8 <__bss_start@@Base+0x48>
  4029f1:	add    rsp,0x8
  4029f5:	ret    
  4029f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a00:	movsxd rdx,DWORD PTR [rax+0x1b0]
  402a07:	test   edx,edx
  402a09:	je     402a50 <next@@Base+0xe0>
  402a0b:	movsxd rcx,DWORD PTR [rax+0x1b4]
  402a12:	cmp    edx,ecx
  402a14:	jle    402a60 <next@@Base+0xf0>
  402a16:	mov    rdx,QWORD PTR [rax+0x1b8]
  402a1d:	lea    esi,[rcx+0x1]
  402a20:	add    QWORD PTR [rip+0xad98],0x1        # 40d7c0 <__bss_start@@Base+0x50>
  402a28:	mov    DWORD PTR [rax+0x1b4],esi
  402a2e:	mov    rax,QWORD PTR [rdx+rcx*8]
  402a32:	ret    
  402a33:	nop    DWORD PTR [rax+rax*1+0x0]
  402a38:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
  402a3d:	mov    edx,DWORD PTR [rax+0x198]
  402a43:	jmp    402998 <next@@Base+0x28>
  402a48:	nop    DWORD PTR [rax+rax*1+0x0]
  402a50:	mov    rax,QWORD PTR [rax+0x1a8]
  402a57:	add    QWORD PTR [rip+0xad71],0x1        # 40d7d0 <__bss_start@@Base+0x60>
  402a5f:	ret    
  402a60:	mov    rax,QWORD PTR [rax+0x1b8]
  402a67:	add    QWORD PTR [rip+0xad59],0x1        # 40d7c8 <__bss_start@@Base+0x58>
  402a6f:	mov    rax,QWORD PTR [rax+rdx*8-0x8]
  402a74:	ret    
  402a75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402a80 <next_reset@@Base>:
  402a80:	mov    rdx,0x40ea80
  402a87:	mov    ecx,0x39
  402a8c:	xor    eax,eax
  402a8e:	add    QWORD PTR [rip+0xad42],0x1        # 40d7d8 <__bss_start@@Base+0x68>
  402a96:	mov    rdi,rdx
  402a99:	rep stos QWORD PTR es:[rdi],rax
  402a9c:	mov    DWORD PTR [rdx+0x19c],0x32
  402aa6:	ret    
  402aa7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402ab0 <push_back_reset@@Base>:
  402ab0:	mov    rdx,0x40e720
  402ab7:	mov    ecx,0x69
  402abc:	xor    eax,eax
  402abe:	add    QWORD PTR [rip+0xad42],0x1        # 40d808 <__bss_start@@Base+0x98>
  402ac6:	mov    rdi,rdx
  402ac9:	rep stos QWORD PTR es:[rdi],rax
  402acc:	mov    DWORD PTR [rdx+0x334],0x32
  402ad6:	ret    
  402ad7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402ae0 <setup@@Base>:
  402ae0:	sub    rsp,0x8
  402ae4:	xor    eax,eax
  402ae6:	add    QWORD PTR [rip+0xad22],0x1        # 40d810 <__bss_start@@Base+0xa0>
  402aee:	call   402a80 <next_reset@@Base>
  402af3:	xor    eax,eax
  402af5:	add    QWORD PTR [rip+0xad1b],0x1        # 40d818 <__bss_start@@Base+0xa8>
  402afd:	call   402ab0 <push_back_reset@@Base>
  402b02:	add    QWORD PTR [rip+0xad16],0x1        # 40d820 <__bss_start@@Base+0xb0>
  402b0a:	add    rsp,0x8
  402b0e:	ret    
  402b0f:	nop

0000000000402b10 <no_int_as_first_stuff@@Base>:
  402b10:	push   r12
  402b12:	push   rbp
  402b13:	push   rbx
  402b14:	sub    rsp,0x30
  402b18:	add    QWORD PTR [rip+0xad20],0x1        # 40d840 <__bss_start@@Base+0xd0>
  402b20:	lea    rbp,[rsp+0x8]
  402b25:	lea    rsi,[rsp+0x10]
  402b2a:	mov    rax,QWORD PTR fs:0x28
  402b33:	mov    QWORD PTR [rsp+0x28],rax
  402b38:	xor    eax,eax
  402b3a:	mov    rdi,rbp
  402b3d:	call   404f00 <init_grammar@@Base>
  402b42:	mov    edi,0x4
  402b47:	add    QWORD PTR [rip+0xacf9],0x1        # 40d848 <__bss_start@@Base+0xd8>
  402b4f:	call   402180 <malloc@plt>
  402b54:	mov    rdi,rax
  402b57:	mov    r12,rax
  402b5a:	call   4046f0 <init_token_opar@@Base>
  402b5f:	mov    rbx,0x40ea80
  402b66:	mov    rdi,rbp
  402b69:	add    QWORD PTR [rip+0xacdf],0x1        # 40d850 <__bss_start@@Base+0xe0>
  402b71:	mov    QWORD PTR [rbx+0x1a8],r12
  402b78:	call   405750 <read_function_ast_node@@Base>
  402b7d:	cmp    DWORD PTR [rbx+0x198],0x1
  402b84:	jne    402bac <no_int_as_first_stuff@@Base+0x9c>
  402b86:	test   rax,rax
  402b89:	jne    402bd8 <no_int_as_first_stuff@@Base+0xc8>
  402b8b:	add    QWORD PTR [rip+0xaccd],0x1        # 40d860 <__bss_start@@Base+0xf0>
  402b93:	mov    rax,QWORD PTR [rsp+0x28]
  402b98:	xor    rax,QWORD PTR fs:0x28
  402ba1:	jne    402bd3 <no_int_as_first_stuff@@Base+0xc3>
  402ba3:	add    rsp,0x30
  402ba7:	pop    rbx
  402ba8:	pop    rbp
  402ba9:	pop    r12
  402bab:	ret    
  402bac:	lea    rcx,[rip+0x5b7d]        # 408730 <_IO_stdin_used@@Base+0x730>
  402bb3:	lea    rsi,[rip+0x544e]        # 408008 <_IO_stdin_used@@Base+0x8>
  402bba:	lea    rdi,[rip+0x565f]        # 408220 <_IO_stdin_used@@Base+0x220>
  402bc1:	mov    edx,0x29
  402bc6:	add    QWORD PTR [rip+0xac8a],0x1        # 40d858 <__bss_start@@Base+0xe8>
  402bce:	call   402120 <__assert_fail@plt>
  402bd3:	call   402100 <__stack_chk_fail@plt>
  402bd8:	lea    rcx,[rip+0x5b51]        # 408730 <_IO_stdin_used@@Base+0x730>
  402bdf:	lea    rsi,[rip+0x5422]        # 408008 <_IO_stdin_used@@Base+0x8>
  402be6:	lea    rdi,[rip+0x564d]        # 40823a <_IO_stdin_used@@Base+0x23a>
  402bed:	mov    edx,0x2a
  402bf2:	add    QWORD PTR [rip+0xac6e],0x1        # 40d868 <__bss_start@@Base+0xf8>
  402bfa:	call   402120 <__assert_fail@plt>
  402bff:	nop

0000000000402c00 <int_but_not_followed_by_function@@Base>:
  402c00:	push   r12
  402c02:	push   rbp
  402c03:	push   rbx
  402c04:	sub    rsp,0x30
  402c08:	add    QWORD PTR [rip+0xac70],0x1        # 40d880 <__bss_start@@Base+0x110>
  402c10:	lea    r12,[rsp+0x8]
  402c15:	lea    rsi,[rsp+0x10]
  402c1a:	mov    rax,QWORD PTR fs:0x28
  402c23:	mov    QWORD PTR [rsp+0x28],rax
  402c28:	xor    eax,eax
  402c2a:	mov    rdi,r12
  402c2d:	call   404f00 <init_grammar@@Base>
  402c32:	mov    edi,0x10
  402c37:	add    QWORD PTR [rip+0xac49],0x1        # 40d888 <__bss_start@@Base+0x118>
  402c3f:	call   402180 <malloc@plt>
  402c44:	mov    edi,0x4
  402c49:	mov    rbp,rax
  402c4c:	call   402180 <malloc@plt>
  402c51:	mov    rdi,rax
  402c54:	mov    QWORD PTR [rbp+0x0],rax
  402c58:	call   4046a0 <init_token_int_type@@Base>
  402c5d:	mov    edi,0x4
  402c62:	add    QWORD PTR [rip+0xac26],0x1        # 40d890 <__bss_start@@Base+0x120>
  402c6a:	call   402180 <malloc@plt>
  402c6f:	mov    rdi,rax
  402c72:	mov    QWORD PTR [rbp+0x8],rax
  402c76:	call   4046f0 <init_token_opar@@Base>
  402c7b:	mov    rbx,0x40ea80
  402c82:	mov    rdi,r12
  402c85:	add    QWORD PTR [rip+0xac0b],0x1        # 40d898 <__bss_start@@Base+0x128>
  402c8d:	mov    QWORD PTR [rbx+0x1b8],rbp
  402c94:	mov    DWORD PTR [rbx+0x1b0],0x2
  402c9e:	call   405750 <read_function_ast_node@@Base>
  402ca3:	cmp    DWORD PTR [rbx+0x198],0x2
  402caa:	jne    402cd2 <int_but_not_followed_by_function@@Base+0xd2>
  402cac:	test   rax,rax
  402caf:	jne    402cfe <int_but_not_followed_by_function@@Base+0xfe>
  402cb1:	add    QWORD PTR [rip+0xabef],0x1        # 40d8a8 <__bss_start@@Base+0x138>
  402cb9:	mov    rax,QWORD PTR [rsp+0x28]
  402cbe:	xor    rax,QWORD PTR fs:0x28
  402cc7:	jne    402cf9 <int_but_not_followed_by_function@@Base+0xf9>
  402cc9:	add    rsp,0x30
  402ccd:	pop    rbx
  402cce:	pop    rbp
  402ccf:	pop    r12
  402cd1:	ret    
  402cd2:	lea    rcx,[rip+0x5a27]        # 408700 <_IO_stdin_used@@Base+0x700>
  402cd9:	lea    rsi,[rip+0x5328]        # 408008 <_IO_stdin_used@@Base+0x8>
  402ce0:	lea    rdi,[rip+0x555f]        # 408246 <_IO_stdin_used@@Base+0x246>
  402ce7:	mov    edx,0x43
  402cec:	add    QWORD PTR [rip+0xabac],0x1        # 40d8a0 <__bss_start@@Base+0x130>
  402cf4:	call   402120 <__assert_fail@plt>
  402cf9:	call   402100 <__stack_chk_fail@plt>
  402cfe:	lea    rcx,[rip+0x59fb]        # 408700 <_IO_stdin_used@@Base+0x700>
  402d05:	lea    rsi,[rip+0x52fc]        # 408008 <_IO_stdin_used@@Base+0x8>
  402d0c:	lea    rdi,[rip+0x5527]        # 40823a <_IO_stdin_used@@Base+0x23a>
  402d13:	mov    edx,0x44
  402d18:	add    QWORD PTR [rip+0xab90],0x1        # 40d8b0 <__bss_start@@Base+0x140>
  402d20:	call   402120 <__assert_fail@plt>
  402d25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402d30 <boolean_expression_is_read_properly@@Base>:
  402d30:	push   r12
  402d32:	push   rbp
  402d33:	mov    edi,0x3
  402d38:	push   rbx
  402d39:	sub    rsp,0x30
  402d3d:	add    QWORD PTR [rip+0xab7b],0x1        # 40d8c0 <__bss_start@@Base+0x150>
  402d45:	lea    r12,[rsp+0x8]
  402d4a:	mov    rax,QWORD PTR fs:0x28
  402d53:	mov    QWORD PTR [rsp+0x28],rax
  402d58:	xor    eax,eax
  402d5a:	call   402180 <malloc@plt>
  402d5f:	lea    rsi,[rsp+0x10]
  402d64:	mov    BYTE PTR [rax],0x21
  402d67:	mov    rdi,r12
  402d6a:	mov    BYTE PTR [rax+0x1],0x3d
  402d6e:	mov    BYTE PTR [rax+0x2],0x0
  402d72:	mov    rbp,rax
  402d75:	call   404f00 <init_grammar@@Base>
  402d7a:	mov    edi,0x28
  402d7f:	add    QWORD PTR [rip+0xab41],0x1        # 40d8c8 <__bss_start@@Base+0x158>
  402d87:	call   402180 <malloc@plt>
  402d8c:	mov    edi,0x8
  402d91:	mov    rbx,rax
  402d94:	call   402180 <malloc@plt>
  402d99:	mov    esi,0x2
  402d9e:	mov    rdi,rax
  402da1:	mov    QWORD PTR [rbx],rax
  402da4:	call   4046b0 <init_token_int_value@@Base>
  402da9:	mov    edi,0x8
  402dae:	add    QWORD PTR [rip+0xab1a],0x1        # 40d8d0 <__bss_start@@Base+0x160>
  402db6:	call   402180 <malloc@plt>
  402dbb:	mov    esi,0x2
  402dc0:	mov    rdi,rax
  402dc3:	mov    QWORD PTR [rbx+0x8],rax
  402dc7:	call   4046b0 <init_token_int_value@@Base>
  402dcc:	mov    edi,0x10
  402dd1:	add    QWORD PTR [rip+0xaaff],0x1        # 40d8d8 <__bss_start@@Base+0x168>
  402dd9:	call   402180 <malloc@plt>
  402dde:	mov    rsi,rbp
  402de1:	mov    rdi,rax
  402de4:	mov    QWORD PTR [rbx+0x10],rax
  402de8:	call   404780 <init_token_boolean_op@@Base>
  402ded:	mov    edi,0x8
  402df2:	add    QWORD PTR [rip+0xaae6],0x1        # 40d8e0 <__bss_start@@Base+0x170>
  402dfa:	call   402180 <malloc@plt>
  402dff:	mov    esi,0x1
  402e04:	mov    rdi,rax
  402e07:	mov    QWORD PTR [rbx+0x18],rax
  402e0b:	call   4046b0 <init_token_int_value@@Base>
  402e10:	mov    edi,0x4
  402e15:	add    QWORD PTR [rip+0xaacb],0x1        # 40d8e8 <__bss_start@@Base+0x178>
  402e1d:	call   402180 <malloc@plt>
  402e22:	mov    rdi,rax
  402e25:	mov    QWORD PTR [rbx+0x20],rax
  402e29:	call   404700 <init_token_cpar@@Base>
  402e2e:	mov    rbp,0x40ea80
  402e35:	mov    rdi,r12
  402e38:	add    QWORD PTR [rip+0xaab0],0x1        # 40d8f0 <__bss_start@@Base+0x180>
  402e40:	mov    QWORD PTR [rbp+0x1b8],rbx
  402e47:	mov    DWORD PTR [rbp+0x1b0],0x5
  402e51:	call   405370 <read_boolean_expression@@Base>
  402e56:	cmp    DWORD PTR [rbp+0x198],0x5
  402e5d:	jne    402e95 <boolean_expression_is_read_properly@@Base+0x165>
  402e5f:	mov    rdx,0x40e720
  402e66:	cmp    DWORD PTR [rdx+0x330],0x1
  402e6d:	jne    402ee8 <boolean_expression_is_read_properly@@Base+0x1b8>
  402e6f:	cmp    DWORD PTR [rax],0x5
  402e72:	jne    402ec1 <boolean_expression_is_read_properly@@Base+0x191>
  402e74:	add    QWORD PTR [rip+0xaa8c],0x1        # 40d908 <__bss_start@@Base+0x198>
  402e7c:	mov    rax,QWORD PTR [rsp+0x28]
  402e81:	xor    rax,QWORD PTR fs:0x28
  402e8a:	jne    402ebc <boolean_expression_is_read_properly@@Base+0x18c>
  402e8c:	add    rsp,0x30
  402e90:	pop    rbx
  402e91:	pop    rbp
  402e92:	pop    r12
  402e94:	ret    
  402e95:	lea    rcx,[rip+0x5824]        # 4086c0 <_IO_stdin_used@@Base+0x6c0>
  402e9c:	lea    rsi,[rip+0x5165]        # 408008 <_IO_stdin_used@@Base+0x8>
  402ea3:	lea    rdi,[rip+0x53b6]        # 408260 <_IO_stdin_used@@Base+0x260>
  402eaa:	mov    edx,0x69
  402eaf:	add    QWORD PTR [rip+0xaa41],0x1        # 40d8f8 <__bss_start@@Base+0x188>
  402eb7:	call   402120 <__assert_fail@plt>
  402ebc:	call   402100 <__stack_chk_fail@plt>
  402ec1:	lea    rcx,[rip+0x57f8]        # 4086c0 <_IO_stdin_used@@Base+0x6c0>
  402ec8:	lea    rsi,[rip+0x5139]        # 408008 <_IO_stdin_used@@Base+0x8>
  402ecf:	lea    rdi,[rip+0x51b2]        # 408088 <_IO_stdin_used@@Base+0x88>
  402ed6:	mov    edx,0x6b
  402edb:	add    QWORD PTR [rip+0xaa2d],0x1        # 40d910 <__bss_start@@Base+0x1a0>
  402ee3:	call   402120 <__assert_fail@plt>
  402ee8:	lea    rcx,[rip+0x57d1]        # 4086c0 <_IO_stdin_used@@Base+0x6c0>
  402eef:	lea    rsi,[rip+0x5112]        # 408008 <_IO_stdin_used@@Base+0x8>
  402ef6:	lea    rdi,[rip+0x516b]        # 408068 <_IO_stdin_used@@Base+0x68>
  402efd:	mov    edx,0x6a
  402f02:	add    QWORD PTR [rip+0xa9f6],0x1        # 40d900 <__bss_start@@Base+0x190>
  402f0a:	call   402120 <__assert_fail@plt>
  402f0f:	nop

0000000000402f10 <boolean_expression_complex@@Base>:
  402f10:	push   r14
  402f12:	push   r13
  402f14:	mov    edi,0x3
  402f19:	push   r12
  402f1b:	push   rbp
  402f1c:	push   rbx
  402f1d:	sub    rsp,0x30
  402f21:	add    QWORD PTR [rip+0xa9f7],0x1        # 40d920 <__bss_start@@Base+0x1b0>
  402f29:	mov    rax,QWORD PTR fs:0x28
  402f32:	mov    QWORD PTR [rsp+0x28],rax
  402f37:	xor    eax,eax
  402f39:	call   402180 <malloc@plt>
  402f3e:	mov    edi,0x3
  402f43:	mov    r13,rax
  402f46:	lea    r14,[rsp+0x8]
  402f4b:	call   402180 <malloc@plt>
  402f50:	mov    edi,0x3
  402f55:	mov    r12,rax
  402f58:	call   402180 <malloc@plt>
  402f5d:	lea    rsi,[rsp+0x10]
  402f62:	mov    BYTE PTR [rax],0x3d
  402f65:	mov    BYTE PTR [rax+0x1],0x3d
  402f69:	mov    BYTE PTR [rax+0x2],0x0
  402f6d:	mov    rdi,r14
  402f70:	mov    rbp,rax
  402f73:	mov    BYTE PTR [r13+0x0],0x3c
  402f78:	mov    BYTE PTR [r13+0x1],0x3d
  402f7d:	mov    BYTE PTR [r13+0x2],0x0
  402f82:	mov    BYTE PTR [r12],0x26
  402f87:	mov    BYTE PTR [r12+0x1],0x26
  402f8d:	mov    BYTE PTR [r12+0x2],0x0
  402f93:	call   404f00 <init_grammar@@Base>
  402f98:	mov    edi,0x50
  402f9d:	add    QWORD PTR [rip+0xa983],0x1        # 40d928 <__bss_start@@Base+0x1b8>
  402fa5:	call   402180 <malloc@plt>
  402faa:	mov    edi,0x8
  402faf:	mov    rbx,rax
  402fb2:	call   402180 <malloc@plt>
  402fb7:	mov    esi,0x2
  402fbc:	mov    rdi,rax
  402fbf:	mov    QWORD PTR [rbx],rax
  402fc2:	call   4046b0 <init_token_int_value@@Base>
  402fc7:	mov    edi,0x8
  402fcc:	add    QWORD PTR [rip+0xa95c],0x1        # 40d930 <__bss_start@@Base+0x1c0>
  402fd4:	call   402180 <malloc@plt>
  402fd9:	mov    esi,0x2
  402fde:	mov    rdi,rax
  402fe1:	mov    QWORD PTR [rbx+0x8],rax
  402fe5:	call   4046b0 <init_token_int_value@@Base>
  402fea:	mov    edi,0x10
  402fef:	add    QWORD PTR [rip+0xa941],0x1        # 40d938 <__bss_start@@Base+0x1c8>
  402ff7:	call   402180 <malloc@plt>
  402ffc:	mov    rsi,r13
  402fff:	mov    rdi,rax
  403002:	mov    QWORD PTR [rbx+0x10],rax
  403006:	call   404780 <init_token_boolean_op@@Base>
  40300b:	mov    edi,0x8
  403010:	add    QWORD PTR [rip+0xa928],0x1        # 40d940 <__bss_start@@Base+0x1d0>
  403018:	call   402180 <malloc@plt>
  40301d:	mov    esi,0x1
  403022:	mov    rdi,rax
  403025:	mov    QWORD PTR [rbx+0x18],rax
  403029:	call   4046b0 <init_token_int_value@@Base>
  40302e:	mov    edi,0x10
  403033:	add    QWORD PTR [rip+0xa90d],0x1        # 40d948 <__bss_start@@Base+0x1d8>
  40303b:	call   402180 <malloc@plt>
  403040:	mov    rsi,r12
  403043:	mov    rdi,rax
  403046:	mov    QWORD PTR [rbx+0x20],rax
  40304a:	call   404780 <init_token_boolean_op@@Base>
  40304f:	mov    edi,0x8
  403054:	add    QWORD PTR [rip+0xa8f4],0x1        # 40d950 <__bss_start@@Base+0x1e0>
  40305c:	call   402180 <malloc@plt>
  403061:	mov    esi,0x4
  403066:	mov    rdi,rax
  403069:	mov    QWORD PTR [rbx+0x28],rax
  40306d:	call   4046b0 <init_token_int_value@@Base>
  403072:	mov    edi,0x8
  403077:	add    QWORD PTR [rip+0xa8d9],0x1        # 40d958 <__bss_start@@Base+0x1e8>
  40307f:	call   402180 <malloc@plt>
  403084:	mov    esi,0x4
  403089:	mov    rdi,rax
  40308c:	mov    QWORD PTR [rbx+0x30],rax
  403090:	call   4046b0 <init_token_int_value@@Base>
  403095:	mov    edi,0x10
  40309a:	add    QWORD PTR [rip+0xa8be],0x1        # 40d960 <__bss_start@@Base+0x1f0>
  4030a2:	call   402180 <malloc@plt>
  4030a7:	mov    rsi,rbp
  4030aa:	mov    rdi,rax
  4030ad:	mov    QWORD PTR [rbx+0x38],rax
  4030b1:	call   404780 <init_token_boolean_op@@Base>
  4030b6:	mov    edi,0x8
  4030bb:	add    QWORD PTR [rip+0xa8a5],0x1        # 40d968 <__bss_start@@Base+0x1f8>
  4030c3:	call   402180 <malloc@plt>
  4030c8:	mov    esi,0x4
  4030cd:	mov    rdi,rax
  4030d0:	mov    QWORD PTR [rbx+0x40],rax
  4030d4:	call   4046b0 <init_token_int_value@@Base>
  4030d9:	mov    edi,0x4
  4030de:	add    QWORD PTR [rip+0xa88a],0x1        # 40d970 <__bss_start@@Base+0x200>
  4030e6:	call   402180 <malloc@plt>
  4030eb:	mov    rdi,rax
  4030ee:	mov    QWORD PTR [rbx+0x48],rax
  4030f2:	call   404700 <init_token_cpar@@Base>
  4030f7:	mov    rbp,0x40ea80
  4030fe:	mov    rdi,r14
  403101:	add    QWORD PTR [rip+0xa86f],0x1        # 40d978 <__bss_start@@Base+0x208>
  403109:	mov    QWORD PTR [rbp+0x1b8],rbx
  403110:	mov    DWORD PTR [rbp+0x1b0],0xa
  40311a:	call   405370 <read_boolean_expression@@Base>
  40311f:	cmp    DWORD PTR [rbp+0x198],0xa
  403126:	jne    403152 <boolean_expression_complex@@Base+0x242>
  403128:	cmp    DWORD PTR [rax],0x5
  40312b:	jne    40317e <boolean_expression_complex@@Base+0x26e>
  40312d:	add    QWORD PTR [rip+0xa853],0x1        # 40d988 <__bss_start@@Base+0x218>
  403135:	mov    rax,QWORD PTR [rsp+0x28]
  40313a:	xor    rax,QWORD PTR fs:0x28
  403143:	jne    403179 <boolean_expression_complex@@Base+0x269>
  403145:	add    rsp,0x30
  403149:	pop    rbx
  40314a:	pop    rbp
  40314b:	pop    r12
  40314d:	pop    r13
  40314f:	pop    r14
  403151:	ret    
  403152:	lea    rcx,[rip+0x5537]        # 408690 <_IO_stdin_used@@Base+0x690>
  403159:	lea    rsi,[rip+0x4ea8]        # 408008 <_IO_stdin_used@@Base+0x8>
  403160:	lea    rdi,[rip+0x5113]        # 40827a <_IO_stdin_used@@Base+0x27a>
  403167:	mov    edx,0xa6
  40316c:	add    QWORD PTR [rip+0xa80c],0x1        # 40d980 <__bss_start@@Base+0x210>
  403174:	call   402120 <__assert_fail@plt>
  403179:	call   402100 <__stack_chk_fail@plt>
  40317e:	lea    rcx,[rip+0x550b]        # 408690 <_IO_stdin_used@@Base+0x690>
  403185:	lea    rsi,[rip+0x4e7c]        # 408008 <_IO_stdin_used@@Base+0x8>
  40318c:	lea    rdi,[rip+0x4ef5]        # 408088 <_IO_stdin_used@@Base+0x88>
  403193:	mov    edx,0xa7
  403198:	add    QWORD PTR [rip+0xa7f0],0x1        # 40d990 <__bss_start@@Base+0x220>
  4031a0:	call   402120 <__assert_fail@plt>
  4031a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004031b0 <boolean_binary_operator_is_read_properly@@Base>:
  4031b0:	push   r12
  4031b2:	push   rbp
  4031b3:	mov    edi,0x3
  4031b8:	push   rbx
  4031b9:	sub    rsp,0x30
  4031bd:	add    QWORD PTR [rip+0xa7db],0x1        # 40d9a0 <__bss_start@@Base+0x230>
  4031c5:	lea    r12,[rsp+0x8]
  4031ca:	mov    rax,QWORD PTR fs:0x28
  4031d3:	mov    QWORD PTR [rsp+0x28],rax
  4031d8:	xor    eax,eax
  4031da:	call   402180 <malloc@plt>
  4031df:	lea    rsi,[rsp+0x10]
  4031e4:	mov    BYTE PTR [rax],0x21
  4031e7:	mov    rdi,r12
  4031ea:	mov    BYTE PTR [rax+0x1],0x3d
  4031ee:	mov    BYTE PTR [rax+0x2],0x0
  4031f2:	mov    rbp,rax
  4031f5:	call   404f00 <init_grammar@@Base>
  4031fa:	mov    edi,0x18
  4031ff:	add    QWORD PTR [rip+0xa7a1],0x1        # 40d9a8 <__bss_start@@Base+0x238>
  403207:	call   402180 <malloc@plt>
  40320c:	mov    edi,0x8
  403211:	mov    rbx,rax
  403214:	call   402180 <malloc@plt>
  403219:	mov    esi,0x2
  40321e:	mov    rdi,rax
  403221:	mov    QWORD PTR [rbx],rax
  403224:	call   4046b0 <init_token_int_value@@Base>
  403229:	mov    edi,0x10
  40322e:	add    QWORD PTR [rip+0xa77a],0x1        # 40d9b0 <__bss_start@@Base+0x240>
  403236:	call   402180 <malloc@plt>
  40323b:	mov    rsi,rbp
  40323e:	mov    rdi,rax
  403241:	mov    QWORD PTR [rbx+0x8],rax
  403245:	call   404780 <init_token_boolean_op@@Base>
  40324a:	mov    edi,0x8
  40324f:	add    QWORD PTR [rip+0xa761],0x1        # 40d9b8 <__bss_start@@Base+0x248>
  403257:	call   402180 <malloc@plt>
  40325c:	mov    esi,0x1
  403261:	mov    rdi,rax
  403264:	mov    QWORD PTR [rbx+0x10],rax
  403268:	call   4046b0 <init_token_int_value@@Base>
  40326d:	mov    rbp,0x40ea80
  403274:	mov    rdi,r12
  403277:	add    QWORD PTR [rip+0xa741],0x1        # 40d9c0 <__bss_start@@Base+0x250>
  40327f:	mov    QWORD PTR [rbp+0x1b8],rbx
  403286:	mov    DWORD PTR [rbp+0x1b0],0x3
  403290:	call   405120 <read_boolean_binary_expression@@Base>
  403295:	cmp    DWORD PTR [rbp+0x198],0x3
  40329c:	jne    4032e4 <boolean_binary_operator_is_read_properly@@Base+0x134>
  40329e:	cmp    DWORD PTR [rax],0x5
  4032a1:	jne    403385 <boolean_binary_operator_is_read_properly@@Base+0x1d5>
  4032a7:	mov    rdx,QWORD PTR [rax+0x10]
  4032ab:	cmp    DWORD PTR [rdx],0x1
  4032ae:	jne    40335e <boolean_binary_operator_is_read_properly@@Base+0x1ae>
  4032b4:	cmp    DWORD PTR [rax+0x20],0x1
  4032b8:	jne    403337 <boolean_binary_operator_is_read_properly@@Base+0x187>
  4032ba:	mov    rax,QWORD PTR [rax+0x18]
  4032be:	cmp    DWORD PTR [rax],0x1
  4032c1:	jne    403310 <boolean_binary_operator_is_read_properly@@Base+0x160>
  4032c3:	add    QWORD PTR [rip+0xa71d],0x1        # 40d9e8 <__bss_start@@Base+0x278>
  4032cb:	mov    rax,QWORD PTR [rsp+0x28]
  4032d0:	xor    rax,QWORD PTR fs:0x28
  4032d9:	jne    40330b <boolean_binary_operator_is_read_properly@@Base+0x15b>
  4032db:	add    rsp,0x30
  4032df:	pop    rbx
  4032e0:	pop    rbp
  4032e1:	pop    r12
  4032e3:	ret    
  4032e4:	lea    rcx,[rip+0x5375]        # 408660 <_IO_stdin_used@@Base+0x660>
  4032eb:	lea    rsi,[rip+0x4d16]        # 408008 <_IO_stdin_used@@Base+0x8>
  4032f2:	lea    rdi,[rip+0x4f9c]        # 408295 <_IO_stdin_used@@Base+0x295>
  4032f9:	mov    edx,0xc8
  4032fe:	add    QWORD PTR [rip+0xa6c2],0x1        # 40d9c8 <__bss_start@@Base+0x258>
  403306:	call   402120 <__assert_fail@plt>
  40330b:	call   402100 <__stack_chk_fail@plt>
  403310:	lea    rcx,[rip+0x5349]        # 408660 <_IO_stdin_used@@Base+0x660>
  403317:	lea    rsi,[rip+0x4cea]        # 408008 <_IO_stdin_used@@Base+0x8>
  40331e:	lea    rdi,[rip+0x4fbe]        # 4082e3 <_IO_stdin_used@@Base+0x2e3>
  403325:	mov    edx,0xcd
  40332a:	add    QWORD PTR [rip+0xa6be],0x1        # 40d9f0 <__bss_start@@Base+0x280>
  403332:	call   402120 <__assert_fail@plt>
  403337:	lea    rcx,[rip+0x5322]        # 408660 <_IO_stdin_used@@Base+0x660>
  40333e:	lea    rsi,[rip+0x4cc3]        # 408008 <_IO_stdin_used@@Base+0x8>
  403345:	lea    rdi,[rip+0x4f7e]        # 4082ca <_IO_stdin_used@@Base+0x2ca>
  40334c:	mov    edx,0xcc
  403351:	add    QWORD PTR [rip+0xa687],0x1        # 40d9e0 <__bss_start@@Base+0x270>
  403359:	call   402120 <__assert_fail@plt>
  40335e:	lea    rcx,[rip+0x52fb]        # 408660 <_IO_stdin_used@@Base+0x660>
  403365:	lea    rsi,[rip+0x4c9c]        # 408008 <_IO_stdin_used@@Base+0x8>
  40336c:	lea    rdi,[rip+0x4f3c]        # 4082af <_IO_stdin_used@@Base+0x2af>
  403373:	mov    edx,0xcb
  403378:	add    QWORD PTR [rip+0xa658],0x1        # 40d9d8 <__bss_start@@Base+0x268>
  403380:	call   402120 <__assert_fail@plt>
  403385:	lea    rcx,[rip+0x52d4]        # 408660 <_IO_stdin_used@@Base+0x660>
  40338c:	lea    rsi,[rip+0x4c75]        # 408008 <_IO_stdin_used@@Base+0x8>
  403393:	lea    rdi,[rip+0x4cee]        # 408088 <_IO_stdin_used@@Base+0x88>
  40339a:	mov    edx,0xc9
  40339f:	add    QWORD PTR [rip+0xa629],0x1        # 40d9d0 <__bss_start@@Base+0x260>
  4033a7:	call   402120 <__assert_fail@plt>
  4033ac:	nop    DWORD PTR [rax+0x0]

00000000004033b0 <boolean_unary_operator_is_read_properly@@Base>:
  4033b0:	push   r12
  4033b2:	push   rbp
  4033b3:	mov    edi,0x2
  4033b8:	push   rbx
  4033b9:	sub    rsp,0x30
  4033bd:	add    QWORD PTR [rip+0xa63b],0x1        # 40da00 <__bss_start@@Base+0x290>
  4033c5:	lea    r12,[rsp+0x8]
  4033ca:	mov    rax,QWORD PTR fs:0x28
  4033d3:	mov    QWORD PTR [rsp+0x28],rax
  4033d8:	xor    eax,eax
  4033da:	call   402180 <malloc@plt>
  4033df:	lea    rsi,[rsp+0x10]
  4033e4:	mov    BYTE PTR [rax],0x21
  4033e7:	mov    rdi,r12
  4033ea:	mov    BYTE PTR [rax+0x1],0x0
  4033ee:	mov    rbx,rax
  4033f1:	call   404f00 <init_grammar@@Base>
  4033f6:	mov    edi,0x10
  4033fb:	add    QWORD PTR [rip+0xa605],0x1        # 40da08 <__bss_start@@Base+0x298>
  403403:	call   402180 <malloc@plt>
  403408:	mov    edi,0x10
  40340d:	mov    rbp,rax
  403410:	call   402180 <malloc@plt>
  403415:	mov    rsi,rbx
  403418:	mov    rdi,rax
  40341b:	mov    QWORD PTR [rbp+0x0],rax
  40341f:	call   404780 <init_token_boolean_op@@Base>
  403424:	mov    edi,0x8
  403429:	add    QWORD PTR [rip+0xa5df],0x1        # 40da10 <__bss_start@@Base+0x2a0>
  403431:	call   402180 <malloc@plt>
  403436:	mov    esi,0x1
  40343b:	mov    rdi,rax
  40343e:	mov    QWORD PTR [rbp+0x8],rax
  403442:	call   4046b0 <init_token_int_value@@Base>
  403447:	mov    rbx,0x40ea80
  40344e:	mov    rdi,r12
  403451:	add    QWORD PTR [rip+0xa5bf],0x1        # 40da18 <__bss_start@@Base+0x2a8>
  403459:	mov    QWORD PTR [rbx+0x1b8],rbp
  403460:	mov    DWORD PTR [rbx+0x1b0],0x2
  40346a:	call   404ff0 <read_boolean_unary_expression@@Base>
  40346f:	cmp    DWORD PTR [rbx+0x198],0x2
  403476:	jne    4034bc <boolean_unary_operator_is_read_properly@@Base+0x10c>
  403478:	cmp    DWORD PTR [rax],0x5
  40347b:	jne    40355d <boolean_unary_operator_is_read_properly@@Base+0x1ad>
  403481:	mov    rdx,QWORD PTR [rax+0x10]
  403485:	cmp    DWORD PTR [rdx],0x1
  403488:	jne    403536 <boolean_unary_operator_is_read_properly@@Base+0x186>
  40348e:	cmp    DWORD PTR [rax+0x20],0x8
  403492:	jne    40350f <boolean_unary_operator_is_read_properly@@Base+0x15f>
  403494:	cmp    QWORD PTR [rax+0x18],0x0
  403499:	jne    4034e8 <boolean_unary_operator_is_read_properly@@Base+0x138>
  40349b:	add    QWORD PTR [rip+0xa59d],0x1        # 40da40 <__bss_start@@Base+0x2d0>
  4034a3:	mov    rax,QWORD PTR [rsp+0x28]
  4034a8:	xor    rax,QWORD PTR fs:0x28
  4034b1:	jne    4034e3 <boolean_unary_operator_is_read_properly@@Base+0x133>
  4034b3:	add    rsp,0x30
  4034b7:	pop    rbx
  4034b8:	pop    rbp
  4034b9:	pop    r12
  4034bb:	ret    
  4034bc:	lea    rcx,[rip+0x515d]        # 408620 <_IO_stdin_used@@Base+0x620>
  4034c3:	lea    rsi,[rip+0x4b3e]        # 408008 <_IO_stdin_used@@Base+0x8>
  4034ca:	lea    rdi,[rip+0x4d75]        # 408246 <_IO_stdin_used@@Base+0x246>
  4034d1:	mov    edx,0xeb
  4034d6:	add    QWORD PTR [rip+0xa542],0x1        # 40da20 <__bss_start@@Base+0x2b0>
  4034de:	call   402120 <__assert_fail@plt>
  4034e3:	call   402100 <__stack_chk_fail@plt>
  4034e8:	lea    rcx,[rip+0x5131]        # 408620 <_IO_stdin_used@@Base+0x620>
  4034ef:	lea    rsi,[rip+0x4b12]        # 408008 <_IO_stdin_used@@Base+0x8>
  4034f6:	lea    rdi,[rip+0x4e16]        # 408313 <_IO_stdin_used@@Base+0x313>
  4034fd:	mov    edx,0xf0
  403502:	add    QWORD PTR [rip+0xa53e],0x1        # 40da48 <__bss_start@@Base+0x2d8>
  40350a:	call   402120 <__assert_fail@plt>
  40350f:	lea    rcx,[rip+0x510a]        # 408620 <_IO_stdin_used@@Base+0x620>
  403516:	lea    rsi,[rip+0x4aeb]        # 408008 <_IO_stdin_used@@Base+0x8>
  40351d:	lea    rdi,[rip+0x4ddb]        # 4082ff <_IO_stdin_used@@Base+0x2ff>
  403524:	mov    edx,0xef
  403529:	add    QWORD PTR [rip+0xa507],0x1        # 40da38 <__bss_start@@Base+0x2c8>
  403531:	call   402120 <__assert_fail@plt>
  403536:	lea    rcx,[rip+0x50e3]        # 408620 <_IO_stdin_used@@Base+0x620>
  40353d:	lea    rsi,[rip+0x4ac4]        # 408008 <_IO_stdin_used@@Base+0x8>
  403544:	lea    rdi,[rip+0x4d64]        # 4082af <_IO_stdin_used@@Base+0x2af>
  40354b:	mov    edx,0xee
  403550:	add    QWORD PTR [rip+0xa4d8],0x1        # 40da30 <__bss_start@@Base+0x2c0>
  403558:	call   402120 <__assert_fail@plt>
  40355d:	lea    rcx,[rip+0x50bc]        # 408620 <_IO_stdin_used@@Base+0x620>
  403564:	lea    rsi,[rip+0x4a9d]        # 408008 <_IO_stdin_used@@Base+0x8>
  40356b:	lea    rdi,[rip+0x4b16]        # 408088 <_IO_stdin_used@@Base+0x88>
  403572:	mov    edx,0xec
  403577:	add    QWORD PTR [rip+0xa4a9],0x1        # 40da28 <__bss_start@@Base+0x2b8>
  40357f:	call   402120 <__assert_fail@plt>
  403584:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40358f:	nop

0000000000403590 <if_statement_only@@Base>:
  403590:	push   r12
  403592:	push   rbp
  403593:	push   rbx
  403594:	sub    rsp,0x30
  403598:	add    QWORD PTR [rip+0xa4c0],0x1        # 40da60 <__bss_start@@Base+0x2f0>
  4035a0:	lea    r12,[rsp+0x8]
  4035a5:	lea    rsi,[rsp+0x10]
  4035aa:	mov    rax,QWORD PTR fs:0x28
  4035b3:	mov    QWORD PTR [rsp+0x28],rax
  4035b8:	xor    eax,eax
  4035ba:	mov    rdi,r12
  4035bd:	call   404f00 <init_grammar@@Base>
  4035c2:	mov    edi,0x3
  4035c7:	add    QWORD PTR [rip+0xa499],0x1        # 40da68 <__bss_start@@Base+0x2f8>
  4035cf:	call   402180 <malloc@plt>
  4035d4:	mov    edi,0x48
  4035d9:	mov    BYTE PTR [rax],0x21
  4035dc:	mov    BYTE PTR [rax+0x1],0x3d
  4035e0:	mov    BYTE PTR [rax+0x2],0x0
  4035e4:	mov    rbp,rax
  4035e7:	call   402180 <malloc@plt>
  4035ec:	mov    edi,0x4
  4035f1:	mov    rbx,rax
  4035f4:	call   402180 <malloc@plt>
  4035f9:	mov    rdi,rax
  4035fc:	mov    QWORD PTR [rbx],rax
  4035ff:	call   4046f0 <init_token_opar@@Base>
  403604:	mov    edi,0x8
  403609:	add    QWORD PTR [rip+0xa45f],0x1        # 40da70 <__bss_start@@Base+0x300>
  403611:	call   402180 <malloc@plt>
  403616:	mov    esi,0x1
  40361b:	mov    rdi,rax
  40361e:	mov    QWORD PTR [rbx+0x8],rax
  403622:	call   4046b0 <init_token_int_value@@Base>
  403627:	mov    edi,0x8
  40362c:	add    QWORD PTR [rip+0xa444],0x1        # 40da78 <__bss_start@@Base+0x308>
  403634:	call   402180 <malloc@plt>
  403639:	mov    esi,0x1
  40363e:	mov    rdi,rax
  403641:	mov    QWORD PTR [rbx+0x10],rax
  403645:	call   4046b0 <init_token_int_value@@Base>
  40364a:	mov    edi,0x10
  40364f:	add    QWORD PTR [rip+0xa429],0x1        # 40da80 <__bss_start@@Base+0x310>
  403657:	call   402180 <malloc@plt>
  40365c:	mov    rsi,rbp
  40365f:	mov    rdi,rax
  403662:	mov    QWORD PTR [rbx+0x18],rax
  403666:	call   404780 <init_token_boolean_op@@Base>
  40366b:	mov    edi,0x8
  403670:	add    QWORD PTR [rip+0xa410],0x1        # 40da88 <__bss_start@@Base+0x318>
  403678:	call   402180 <malloc@plt>
  40367d:	mov    esi,0x1
  403682:	mov    rdi,rax
  403685:	mov    QWORD PTR [rbx+0x20],rax
  403689:	call   4046b0 <init_token_int_value@@Base>
  40368e:	mov    edi,0x4
  403693:	add    QWORD PTR [rip+0xa3f5],0x1        # 40da90 <__bss_start@@Base+0x320>
  40369b:	call   402180 <malloc@plt>
  4036a0:	mov    rdi,rax
  4036a3:	mov    QWORD PTR [rbx+0x28],rax
  4036a7:	call   404700 <init_token_cpar@@Base>
  4036ac:	mov    edi,0x4
  4036b1:	add    QWORD PTR [rip+0xa3df],0x1        # 40da98 <__bss_start@@Base+0x328>
  4036b9:	call   402180 <malloc@plt>
  4036be:	mov    rdi,rax
  4036c1:	mov    QWORD PTR [rbx+0x30],rax
  4036c5:	call   404710 <init_token_obra@@Base>
  4036ca:	mov    edi,0x4
  4036cf:	add    QWORD PTR [rip+0xa3c9],0x1        # 40daa0 <__bss_start@@Base+0x330>
  4036d7:	call   402180 <malloc@plt>
  4036dc:	mov    rdi,rax
  4036df:	mov    QWORD PTR [rbx+0x38],rax
  4036e3:	call   404720 <init_token_cbra@@Base>
  4036e8:	mov    edi,0x4
  4036ed:	add    QWORD PTR [rip+0xa3b3],0x1        # 40daa8 <__bss_start@@Base+0x338>
  4036f5:	call   402180 <malloc@plt>
  4036fa:	mov    rdi,rax
  4036fd:	mov    QWORD PTR [rbx+0x40],rax
  403701:	call   404750 <init_token_eof@@Base>
  403706:	mov    rbp,0x40ea80
  40370d:	mov    rdi,r12
  403710:	add    QWORD PTR [rip+0xa398],0x1        # 40dab0 <__bss_start@@Base+0x340>
  403718:	mov    QWORD PTR [rbp+0x1b8],rbx
  40371f:	mov    DWORD PTR [rbp+0x1b0],0x9
  403729:	call   4054f0 <read_if_statement@@Base>
  40372e:	cmp    DWORD PTR [rbp+0x198],0x9
  403735:	jne    403762 <if_statement_only@@Base+0x1d2>
  403737:	test   rax,rax
  40373a:	je     4037b5 <if_statement_only@@Base+0x225>
  40373c:	cmp    DWORD PTR [rax],0x4
  40373f:	jne    40378e <if_statement_only@@Base+0x1fe>
  403741:	add    QWORD PTR [rip+0xa37f],0x1        # 40dac8 <__bss_start@@Base+0x358>
  403749:	mov    rax,QWORD PTR [rsp+0x28]
  40374e:	xor    rax,QWORD PTR fs:0x28
  403757:	jne    403789 <if_statement_only@@Base+0x1f9>
  403759:	add    rsp,0x30
  40375d:	pop    rbx
  40375e:	pop    rbp
  40375f:	pop    r12
  403761:	ret    
  403762:	lea    rcx,[rip+0x4e87]        # 4085f0 <_IO_stdin_used@@Base+0x5f0>
  403769:	lea    rsi,[rip+0x4898]        # 408008 <_IO_stdin_used@@Base+0x8>
  403770:	lea    rdi,[rip+0x4bb1]        # 408328 <_IO_stdin_used@@Base+0x328>
  403777:	mov    edx,0x11b
  40377c:	add    QWORD PTR [rip+0xa334],0x1        # 40dab8 <__bss_start@@Base+0x348>
  403784:	call   402120 <__assert_fail@plt>
  403789:	call   402100 <__stack_chk_fail@plt>
  40378e:	lea    rcx,[rip+0x4e5b]        # 4085f0 <_IO_stdin_used@@Base+0x5f0>
  403795:	lea    rsi,[rip+0x486c]        # 408008 <_IO_stdin_used@@Base+0x8>
  40379c:	lea    rdi,[rip+0x4bab]        # 40834e <_IO_stdin_used@@Base+0x34e>
  4037a3:	mov    edx,0x11d
  4037a8:	add    QWORD PTR [rip+0xa320],0x1        # 40dad0 <__bss_start@@Base+0x360>
  4037b0:	call   402120 <__assert_fail@plt>
  4037b5:	lea    rcx,[rip+0x4e34]        # 4085f0 <_IO_stdin_used@@Base+0x5f0>
  4037bc:	lea    rsi,[rip+0x4845]        # 408008 <_IO_stdin_used@@Base+0x8>
  4037c3:	lea    rdi,[rip+0x4b78]        # 408342 <_IO_stdin_used@@Base+0x342>
  4037ca:	mov    edx,0x11c
  4037cf:	add    QWORD PTR [rip+0xa2e9],0x1        # 40dac0 <__bss_start@@Base+0x350>
  4037d7:	call   402120 <__assert_fail@plt>
  4037dc:	nop    DWORD PTR [rax+0x0]

00000000004037e0 <if_else_statements@@Base>:
  4037e0:	push   r12
  4037e2:	push   rbp
  4037e3:	push   rbx
  4037e4:	sub    rsp,0x30
  4037e8:	add    QWORD PTR [rip+0xa2f0],0x1        # 40dae0 <__bss_start@@Base+0x370>
  4037f0:	lea    r12,[rsp+0x8]
  4037f5:	lea    rsi,[rsp+0x10]
  4037fa:	mov    rax,QWORD PTR fs:0x28
  403803:	mov    QWORD PTR [rsp+0x28],rax
  403808:	xor    eax,eax
  40380a:	mov    rdi,r12
  40380d:	call   404f00 <init_grammar@@Base>
  403812:	mov    edi,0x3
  403817:	add    QWORD PTR [rip+0xa2c9],0x1        # 40dae8 <__bss_start@@Base+0x378>
  40381f:	call   402180 <malloc@plt>
  403824:	mov    edi,0x58
  403829:	mov    BYTE PTR [rax],0x21
  40382c:	mov    BYTE PTR [rax+0x1],0x3d
  403830:	mov    BYTE PTR [rax+0x2],0x0
  403834:	mov    rbp,rax
  403837:	call   402180 <malloc@plt>
  40383c:	mov    edi,0x4
  403841:	mov    rbx,rax
  403844:	call   402180 <malloc@plt>
  403849:	mov    rdi,rax
  40384c:	mov    QWORD PTR [rbx],rax
  40384f:	call   4046f0 <init_token_opar@@Base>
  403854:	mov    edi,0x8
  403859:	add    QWORD PTR [rip+0xa28f],0x1        # 40daf0 <__bss_start@@Base+0x380>
  403861:	call   402180 <malloc@plt>
  403866:	mov    esi,0x1
  40386b:	mov    rdi,rax
  40386e:	mov    QWORD PTR [rbx+0x8],rax
  403872:	call   4046b0 <init_token_int_value@@Base>
  403877:	mov    edi,0x8
  40387c:	add    QWORD PTR [rip+0xa274],0x1        # 40daf8 <__bss_start@@Base+0x388>
  403884:	call   402180 <malloc@plt>
  403889:	mov    esi,0x1
  40388e:	mov    rdi,rax
  403891:	mov    QWORD PTR [rbx+0x10],rax
  403895:	call   4046b0 <init_token_int_value@@Base>
  40389a:	mov    edi,0x10
  40389f:	add    QWORD PTR [rip+0xa259],0x1        # 40db00 <__bss_start@@Base+0x390>
  4038a7:	call   402180 <malloc@plt>
  4038ac:	mov    rsi,rbp
  4038af:	mov    rdi,rax
  4038b2:	mov    QWORD PTR [rbx+0x18],rax
  4038b6:	call   404780 <init_token_boolean_op@@Base>
  4038bb:	mov    edi,0x8
  4038c0:	add    QWORD PTR [rip+0xa240],0x1        # 40db08 <__bss_start@@Base+0x398>
  4038c8:	call   402180 <malloc@plt>
  4038cd:	mov    esi,0x1
  4038d2:	mov    rdi,rax
  4038d5:	mov    QWORD PTR [rbx+0x20],rax
  4038d9:	call   4046b0 <init_token_int_value@@Base>
  4038de:	mov    edi,0x4
  4038e3:	add    QWORD PTR [rip+0xa225],0x1        # 40db10 <__bss_start@@Base+0x3a0>
  4038eb:	call   402180 <malloc@plt>
  4038f0:	mov    rdi,rax
  4038f3:	mov    QWORD PTR [rbx+0x28],rax
  4038f7:	call   404700 <init_token_cpar@@Base>
  4038fc:	mov    edi,0x4
  403901:	add    QWORD PTR [rip+0xa20f],0x1        # 40db18 <__bss_start@@Base+0x3a8>
  403909:	call   402180 <malloc@plt>
  40390e:	mov    rdi,rax
  403911:	mov    QWORD PTR [rbx+0x30],rax
  403915:	call   404710 <init_token_obra@@Base>
  40391a:	mov    edi,0x4
  40391f:	add    QWORD PTR [rip+0xa1f9],0x1        # 40db20 <__bss_start@@Base+0x3b0>
  403927:	call   402180 <malloc@plt>
  40392c:	mov    rdi,rax
  40392f:	mov    QWORD PTR [rbx+0x38],rax
  403933:	call   404720 <init_token_cbra@@Base>
  403938:	mov    edi,0x4
  40393d:	add    QWORD PTR [rip+0xa1e3],0x1        # 40db28 <__bss_start@@Base+0x3b8>
  403945:	call   402180 <malloc@plt>
  40394a:	mov    rdi,rax
  40394d:	mov    QWORD PTR [rbx+0x40],rax
  403951:	call   404770 <init_token_else@@Base>
  403956:	mov    edi,0x4
  40395b:	add    QWORD PTR [rip+0xa1cd],0x1        # 40db30 <__bss_start@@Base+0x3c0>
  403963:	call   402180 <malloc@plt>
  403968:	mov    rdi,rax
  40396b:	mov    QWORD PTR [rbx+0x48],rax
  40396f:	call   404710 <init_token_obra@@Base>
  403974:	mov    edi,0x4
  403979:	add    QWORD PTR [rip+0xa1b7],0x1        # 40db38 <__bss_start@@Base+0x3c8>
  403981:	call   402180 <malloc@plt>
  403986:	mov    rdi,rax
  403989:	mov    QWORD PTR [rbx+0x50],rax
  40398d:	call   404720 <init_token_cbra@@Base>
  403992:	mov    rbp,0x40ea80
  403999:	mov    rdi,r12
  40399c:	add    QWORD PTR [rip+0xa19c],0x1        # 40db40 <__bss_start@@Base+0x3d0>
  4039a4:	mov    QWORD PTR [rbp+0x1b8],rbx
  4039ab:	mov    DWORD PTR [rbp+0x1b0],0xb
  4039b5:	call   4054f0 <read_if_statement@@Base>
  4039ba:	cmp    DWORD PTR [rbp+0x198],0xb
  4039c1:	jne    4039ee <if_else_statements@@Base+0x20e>
  4039c3:	test   rax,rax
  4039c6:	je     403a41 <if_else_statements@@Base+0x261>
  4039c8:	cmp    DWORD PTR [rax],0x4
  4039cb:	jne    403a1a <if_else_statements@@Base+0x23a>
  4039cd:	add    QWORD PTR [rip+0xa183],0x1        # 40db58 <__bss_start@@Base+0x3e8>
  4039d5:	mov    rax,QWORD PTR [rsp+0x28]
  4039da:	xor    rax,QWORD PTR fs:0x28
  4039e3:	jne    403a15 <if_else_statements@@Base+0x235>
  4039e5:	add    rsp,0x30
  4039e9:	pop    rbx
  4039ea:	pop    rbp
  4039eb:	pop    r12
  4039ed:	ret    
  4039ee:	lea    rcx,[rip+0x4bdb]        # 4085d0 <_IO_stdin_used@@Base+0x5d0>
  4039f5:	lea    rsi,[rip+0x460c]        # 408008 <_IO_stdin_used@@Base+0x8>
  4039fc:	lea    rdi,[rip+0x495d]        # 408360 <_IO_stdin_used@@Base+0x360>
  403a03:	mov    edx,0x14c
  403a08:	add    QWORD PTR [rip+0xa138],0x1        # 40db48 <__bss_start@@Base+0x3d8>
  403a10:	call   402120 <__assert_fail@plt>
  403a15:	call   402100 <__stack_chk_fail@plt>
  403a1a:	lea    rcx,[rip+0x4baf]        # 4085d0 <_IO_stdin_used@@Base+0x5d0>
  403a21:	lea    rsi,[rip+0x45e0]        # 408008 <_IO_stdin_used@@Base+0x8>
  403a28:	lea    rdi,[rip+0x491f]        # 40834e <_IO_stdin_used@@Base+0x34e>
  403a2f:	mov    edx,0x14e
  403a34:	add    QWORD PTR [rip+0xa124],0x1        # 40db60 <__bss_start@@Base+0x3f0>
  403a3c:	call   402120 <__assert_fail@plt>
  403a41:	lea    rcx,[rip+0x4b88]        # 4085d0 <_IO_stdin_used@@Base+0x5d0>
  403a48:	lea    rsi,[rip+0x45b9]        # 408008 <_IO_stdin_used@@Base+0x8>
  403a4f:	lea    rdi,[rip+0x48ec]        # 408342 <_IO_stdin_used@@Base+0x342>
  403a56:	mov    edx,0x14d
  403a5b:	add    QWORD PTR [rip+0xa0ed],0x1        # 40db50 <__bss_start@@Base+0x3e0>
  403a63:	call   402120 <__assert_fail@plt>
  403a68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a70 <body_with_two_returns@@Base>:
  403a70:	push   r12
  403a72:	push   rbp
  403a73:	push   rbx
  403a74:	sub    rsp,0x30
  403a78:	add    QWORD PTR [rip+0xa100],0x1        # 40db80 <__bss_start@@Base+0x410>
  403a80:	lea    r12,[rsp+0x8]
  403a85:	lea    rsi,[rsp+0x10]
  403a8a:	mov    rax,QWORD PTR fs:0x28
  403a93:	mov    QWORD PTR [rsp+0x28],rax
  403a98:	xor    eax,eax
  403a9a:	mov    rdi,r12
  403a9d:	call   404f00 <init_grammar@@Base>
  403aa2:	mov    edi,0x40
  403aa7:	add    QWORD PTR [rip+0xa0d9],0x1        # 40db88 <__bss_start@@Base+0x418>
  403aaf:	call   402180 <malloc@plt>
  403ab4:	mov    edi,0x4
  403ab9:	mov    rbx,rax
  403abc:	call   402180 <malloc@plt>
  403ac1:	mov    rdi,rax
  403ac4:	mov    QWORD PTR [rbx],rax
  403ac7:	call   404710 <init_token_obra@@Base>
  403acc:	mov    edi,0x4
  403ad1:	add    QWORD PTR [rip+0xa0b7],0x1        # 40db90 <__bss_start@@Base+0x420>
  403ad9:	call   402180 <malloc@plt>
  403ade:	mov    rdi,rax
  403ae1:	mov    QWORD PTR [rbx+0x8],rax
  403ae5:	call   404730 <init_token_return@@Base>
  403aea:	mov    edi,0x8
  403aef:	add    QWORD PTR [rip+0xa0a1],0x1        # 40db98 <__bss_start@@Base+0x428>
  403af7:	call   402180 <malloc@plt>
  403afc:	mov    esi,0x1
  403b01:	mov    rdi,rax
  403b04:	mov    QWORD PTR [rbx+0x10],rax
  403b08:	call   4046b0 <init_token_int_value@@Base>
  403b0d:	mov    edi,0x4
  403b12:	add    QWORD PTR [rip+0xa086],0x1        # 40dba0 <__bss_start@@Base+0x430>
  403b1a:	call   402180 <malloc@plt>
  403b1f:	mov    rdi,rax
  403b22:	mov    QWORD PTR [rbx+0x18],rax
  403b26:	call   404740 <init_token_semicolon@@Base>
  403b2b:	mov    edi,0x4
  403b30:	add    QWORD PTR [rip+0xa070],0x1        # 40dba8 <__bss_start@@Base+0x438>
  403b38:	call   402180 <malloc@plt>
  403b3d:	mov    rdi,rax
  403b40:	mov    QWORD PTR [rbx+0x20],rax
  403b44:	call   404730 <init_token_return@@Base>
  403b49:	mov    edi,0x8
  403b4e:	add    QWORD PTR [rip+0xa05a],0x1        # 40dbb0 <__bss_start@@Base+0x440>
  403b56:	call   402180 <malloc@plt>
  403b5b:	mov    esi,0x1
  403b60:	mov    rdi,rax
  403b63:	mov    QWORD PTR [rbx+0x28],rax
  403b67:	call   4046b0 <init_token_int_value@@Base>
  403b6c:	mov    edi,0x4
  403b71:	add    QWORD PTR [rip+0xa03f],0x1        # 40dbb8 <__bss_start@@Base+0x448>
  403b79:	call   402180 <malloc@plt>
  403b7e:	mov    rdi,rax
  403b81:	mov    QWORD PTR [rbx+0x30],rax
  403b85:	call   404740 <init_token_semicolon@@Base>
  403b8a:	mov    edi,0x4
  403b8f:	add    QWORD PTR [rip+0xa029],0x1        # 40dbc0 <__bss_start@@Base+0x450>
  403b97:	call   402180 <malloc@plt>
  403b9c:	mov    rdi,rax
  403b9f:	mov    QWORD PTR [rbx+0x38],rax
  403ba3:	call   404720 <init_token_cbra@@Base>
  403ba8:	mov    rbp,0x40ea80
  403baf:	mov    rdi,r12
  403bb2:	add    QWORD PTR [rip+0xa00e],0x1        # 40dbc8 <__bss_start@@Base+0x458>
  403bba:	mov    QWORD PTR [rbp+0x1b8],rbx
  403bc1:	mov    DWORD PTR [rbp+0x1b0],0x8
  403bcb:	call   4055f0 <read_body@@Base>
  403bd0:	cmp    DWORD PTR [rbp+0x198],0x8
  403bd7:	jne    403c1c <body_with_two_returns@@Base+0x1ac>
  403bd9:	test   rax,rax
  403bdc:	je     403cbd <body_with_two_returns@@Base+0x24d>
  403be2:	cmp    DWORD PTR [rax],0x3
  403be5:	jne    403c96 <body_with_two_returns@@Base+0x226>
  403beb:	mov    rax,QWORD PTR [rax+0x8]
  403bef:	cmp    DWORD PTR [rax],0x3
  403bf2:	jne    403c6f <body_with_two_returns@@Base+0x1ff>
  403bf4:	cmp    QWORD PTR [rax+0x8],0x0
  403bf9:	jne    403c48 <body_with_two_returns@@Base+0x1d8>
  403bfb:	add    QWORD PTR [rip+0x9fed],0x1        # 40dbf0 <__bss_start@@Base+0x480>
  403c03:	mov    rax,QWORD PTR [rsp+0x28]
  403c08:	xor    rax,QWORD PTR fs:0x28
  403c11:	jne    403c43 <body_with_two_returns@@Base+0x1d3>
  403c13:	add    rsp,0x30
  403c17:	pop    rbx
  403c18:	pop    rbp
  403c19:	pop    r12
  403c1b:	ret    
  403c1c:	lea    rcx,[rip+0x498d]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403c23:	lea    rsi,[rip+0x43de]        # 408008 <_IO_stdin_used@@Base+0x8>
  403c2a:	lea    rdi,[rip+0x474a]        # 40837b <_IO_stdin_used@@Base+0x37b>
  403c31:	mov    edx,0x173
  403c36:	add    QWORD PTR [rip+0x9f92],0x1        # 40dbd0 <__bss_start@@Base+0x460>
  403c3e:	call   402120 <__assert_fail@plt>
  403c43:	call   402100 <__stack_chk_fail@plt>
  403c48:	lea    rcx,[rip+0x4961]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403c4f:	lea    rsi,[rip+0x43b2]        # 408008 <_IO_stdin_used@@Base+0x8>
  403c56:	lea    rdi,[rip+0x476a]        # 4083c7 <_IO_stdin_used@@Base+0x3c7>
  403c5d:	mov    edx,0x177
  403c62:	add    QWORD PTR [rip+0x9f8e],0x1        # 40dbf8 <__bss_start@@Base+0x488>
  403c6a:	call   402120 <__assert_fail@plt>
  403c6f:	lea    rcx,[rip+0x493a]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403c76:	lea    rsi,[rip+0x438b]        # 408008 <_IO_stdin_used@@Base+0x8>
  403c7d:	lea    rdi,[rip+0x4727]        # 4083ab <_IO_stdin_used@@Base+0x3ab>
  403c84:	mov    edx,0x176
  403c89:	add    QWORD PTR [rip+0x9f57],0x1        # 40dbe8 <__bss_start@@Base+0x478>
  403c91:	call   402120 <__assert_fail@plt>
  403c96:	lea    rcx,[rip+0x4913]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403c9d:	lea    rsi,[rip+0x4364]        # 408008 <_IO_stdin_used@@Base+0x8>
  403ca4:	lea    rdi,[rip+0x46ea]        # 408395 <_IO_stdin_used@@Base+0x395>
  403cab:	mov    edx,0x175
  403cb0:	add    QWORD PTR [rip+0x9f28],0x1        # 40dbe0 <__bss_start@@Base+0x470>
  403cb8:	call   402120 <__assert_fail@plt>
  403cbd:	lea    rcx,[rip+0x48ec]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403cc4:	lea    rsi,[rip+0x433d]        # 408008 <_IO_stdin_used@@Base+0x8>
  403ccb:	lea    rdi,[rip+0x4670]        # 408342 <_IO_stdin_used@@Base+0x342>
  403cd2:	mov    edx,0x174
  403cd7:	add    QWORD PTR [rip+0x9ef9],0x1        # 40dbd8 <__bss_start@@Base+0x468>
  403cdf:	call   402120 <__assert_fail@plt>
  403ce4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403cef:	nop

0000000000403cf0 <body_with_one_return@@Base>:
  403cf0:	push   r12
  403cf2:	push   rbp
  403cf3:	push   rbx
  403cf4:	sub    rsp,0x30
  403cf8:	add    QWORD PTR [rip+0x9f00],0x1        # 40dc00 <__bss_start@@Base+0x490>
  403d00:	lea    r12,[rsp+0x8]
  403d05:	lea    rsi,[rsp+0x10]
  403d0a:	mov    rax,QWORD PTR fs:0x28
  403d13:	mov    QWORD PTR [rsp+0x28],rax
  403d18:	xor    eax,eax
  403d1a:	mov    rdi,r12
  403d1d:	call   404f00 <init_grammar@@Base>
  403d22:	mov    edi,0x28
  403d27:	add    QWORD PTR [rip+0x9ed9],0x1        # 40dc08 <__bss_start@@Base+0x498>
  403d2f:	call   402180 <malloc@plt>
  403d34:	mov    edi,0x4
  403d39:	mov    rbx,rax
  403d3c:	call   402180 <malloc@plt>
  403d41:	mov    rdi,rax
  403d44:	mov    QWORD PTR [rbx],rax
  403d47:	call   404710 <init_token_obra@@Base>
  403d4c:	mov    edi,0x4
  403d51:	add    QWORD PTR [rip+0x9eb7],0x1        # 40dc10 <__bss_start@@Base+0x4a0>
  403d59:	call   402180 <malloc@plt>
  403d5e:	mov    rdi,rax
  403d61:	mov    QWORD PTR [rbx+0x8],rax
  403d65:	call   404730 <init_token_return@@Base>
  403d6a:	mov    edi,0x8
  403d6f:	add    QWORD PTR [rip+0x9ea1],0x1        # 40dc18 <__bss_start@@Base+0x4a8>
  403d77:	call   402180 <malloc@plt>
  403d7c:	mov    esi,0x1
  403d81:	mov    rdi,rax
  403d84:	mov    QWORD PTR [rbx+0x10],rax
  403d88:	call   4046b0 <init_token_int_value@@Base>
  403d8d:	mov    edi,0x4
  403d92:	add    QWORD PTR [rip+0x9e86],0x1        # 40dc20 <__bss_start@@Base+0x4b0>
  403d9a:	call   402180 <malloc@plt>
  403d9f:	mov    rdi,rax
  403da2:	mov    QWORD PTR [rbx+0x18],rax
  403da6:	call   404740 <init_token_semicolon@@Base>
  403dab:	mov    edi,0x4
  403db0:	add    QWORD PTR [rip+0x9e70],0x1        # 40dc28 <__bss_start@@Base+0x4b8>
  403db8:	call   402180 <malloc@plt>
  403dbd:	mov    rdi,rax
  403dc0:	mov    QWORD PTR [rbx+0x20],rax
  403dc4:	call   404720 <init_token_cbra@@Base>
  403dc9:	mov    rbp,0x40ea80
  403dd0:	mov    rdi,r12
  403dd3:	add    QWORD PTR [rip+0x9e55],0x1        # 40dc30 <__bss_start@@Base+0x4c0>
  403ddb:	mov    QWORD PTR [rbp+0x1b8],rbx
  403de2:	mov    DWORD PTR [rbp+0x1b0],0x5
  403dec:	call   4055f0 <read_body@@Base>
  403df1:	cmp    DWORD PTR [rbp+0x198],0x5
  403df8:	jne    403e30 <body_with_one_return@@Base+0x140>
  403dfa:	test   rax,rax
  403dfd:	je     403eaa <body_with_one_return@@Base+0x1ba>
  403e03:	cmp    DWORD PTR [rax],0x3
  403e06:	jne    403e83 <body_with_one_return@@Base+0x193>
  403e08:	cmp    QWORD PTR [rax+0x8],0x0
  403e0d:	jne    403e5c <body_with_one_return@@Base+0x16c>
  403e0f:	add    QWORD PTR [rip+0x9e39],0x1        # 40dc50 <__bss_start@@Base+0x4e0>
  403e17:	mov    rax,QWORD PTR [rsp+0x28]
  403e1c:	xor    rax,QWORD PTR fs:0x28
  403e25:	jne    403e57 <body_with_one_return@@Base+0x167>
  403e27:	add    rsp,0x30
  403e2b:	pop    rbx
  403e2c:	pop    rbp
  403e2d:	pop    r12
  403e2f:	ret    
  403e30:	lea    rcx,[rip+0x4759]        # 408590 <_IO_stdin_used@@Base+0x590>
  403e37:	lea    rsi,[rip+0x41ca]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e3e:	lea    rdi,[rip+0x441b]        # 408260 <_IO_stdin_used@@Base+0x260>
  403e45:	mov    edx,0x196
  403e4a:	add    QWORD PTR [rip+0x9de6],0x1        # 40dc38 <__bss_start@@Base+0x4c8>
  403e52:	call   402120 <__assert_fail@plt>
  403e57:	call   402100 <__stack_chk_fail@plt>
  403e5c:	lea    rcx,[rip+0x472d]        # 408590 <_IO_stdin_used@@Base+0x590>
  403e63:	lea    rsi,[rip+0x419e]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e6a:	lea    rdi,[rip+0x456e]        # 4083df <_IO_stdin_used@@Base+0x3df>
  403e71:	mov    edx,0x199
  403e76:	add    QWORD PTR [rip+0x9dda],0x1        # 40dc58 <__bss_start@@Base+0x4e8>
  403e7e:	call   402120 <__assert_fail@plt>
  403e83:	lea    rcx,[rip+0x4706]        # 408590 <_IO_stdin_used@@Base+0x590>
  403e8a:	lea    rsi,[rip+0x4177]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e91:	lea    rdi,[rip+0x44fd]        # 408395 <_IO_stdin_used@@Base+0x395>
  403e98:	mov    edx,0x198
  403e9d:	add    QWORD PTR [rip+0x9da3],0x1        # 40dc48 <__bss_start@@Base+0x4d8>
  403ea5:	call   402120 <__assert_fail@plt>
  403eaa:	lea    rcx,[rip+0x46df]        # 408590 <_IO_stdin_used@@Base+0x590>
  403eb1:	lea    rsi,[rip+0x4150]        # 408008 <_IO_stdin_used@@Base+0x8>
  403eb8:	lea    rdi,[rip+0x4483]        # 408342 <_IO_stdin_used@@Base+0x342>
  403ebf:	mov    edx,0x197
  403ec4:	add    QWORD PTR [rip+0x9d74],0x1        # 40dc40 <__bss_start@@Base+0x4d0>
  403ecc:	call   402120 <__assert_fail@plt>
  403ed1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403edc:	nop    DWORD PTR [rax+0x0]

0000000000403ee0 <if_statement_inside_if_statement@@Base>:
  403ee0:	push   r13
  403ee2:	push   r12
  403ee4:	push   rbp
  403ee5:	push   rbx
  403ee6:	sub    rsp,0x38
  403eea:	add    QWORD PTR [rip+0x9d6e],0x1        # 40dc60 <__bss_start@@Base+0x4f0>
  403ef2:	lea    r13,[rsp+0x8]
  403ef7:	lea    rsi,[rsp+0x10]
  403efc:	mov    rax,QWORD PTR fs:0x28
  403f05:	mov    QWORD PTR [rsp+0x28],rax
  403f0a:	xor    eax,eax
  403f0c:	mov    rdi,r13
  403f0f:	call   404f00 <init_grammar@@Base>
  403f14:	mov    edi,0x3
  403f19:	add    QWORD PTR [rip+0x9d47],0x1        # 40dc68 <__bss_start@@Base+0x4f8>
  403f21:	call   402180 <malloc@plt>
  403f26:	mov    edi,0x3
  403f2b:	mov    r12,rax
  403f2e:	call   402180 <malloc@plt>
  403f33:	mov    edi,0x98
  403f38:	mov    BYTE PTR [rax],0x21
  403f3b:	mov    rbp,rax
  403f3e:	mov    BYTE PTR [rax+0x1],0x3d
  403f42:	mov    BYTE PTR [rax+0x2],0x0
  403f46:	mov    BYTE PTR [r12],0x21
  403f4b:	mov    BYTE PTR [r12+0x1],0x3d
  403f51:	mov    BYTE PTR [r12+0x2],0x0
  403f57:	call   402180 <malloc@plt>
  403f5c:	mov    edi,0x4
  403f61:	mov    rbx,rax
  403f64:	call   402180 <malloc@plt>
  403f69:	mov    rdi,rax
  403f6c:	mov    QWORD PTR [rbx],rax
  403f6f:	call   4046f0 <init_token_opar@@Base>
  403f74:	mov    edi,0x8
  403f79:	add    QWORD PTR [rip+0x9cef],0x1        # 40dc70 <__bss_start@@Base+0x500>
  403f81:	call   402180 <malloc@plt>
  403f86:	mov    esi,0x1
  403f8b:	mov    rdi,rax
  403f8e:	mov    QWORD PTR [rbx+0x8],rax
  403f92:	call   4046b0 <init_token_int_value@@Base>
  403f97:	mov    edi,0x8
  403f9c:	add    QWORD PTR [rip+0x9cd4],0x1        # 40dc78 <__bss_start@@Base+0x508>
  403fa4:	call   402180 <malloc@plt>
  403fa9:	mov    esi,0x1
  403fae:	mov    rdi,rax
  403fb1:	mov    QWORD PTR [rbx+0x10],rax
  403fb5:	call   4046b0 <init_token_int_value@@Base>
  403fba:	mov    edi,0x10
  403fbf:	add    QWORD PTR [rip+0x9cb9],0x1        # 40dc80 <__bss_start@@Base+0x510>
  403fc7:	call   402180 <malloc@plt>
  403fcc:	mov    rsi,r12
  403fcf:	mov    rdi,rax
  403fd2:	mov    QWORD PTR [rbx+0x18],rax
  403fd6:	call   404780 <init_token_boolean_op@@Base>
  403fdb:	mov    edi,0x8
  403fe0:	add    QWORD PTR [rip+0x9ca0],0x1        # 40dc88 <__bss_start@@Base+0x518>
  403fe8:	call   402180 <malloc@plt>
  403fed:	mov    esi,0x1
  403ff2:	mov    rdi,rax
  403ff5:	mov    QWORD PTR [rbx+0x20],rax
  403ff9:	call   4046b0 <init_token_int_value@@Base>
  403ffe:	mov    edi,0x4
  404003:	add    QWORD PTR [rip+0x9c85],0x1        # 40dc90 <__bss_start@@Base+0x520>
  40400b:	call   402180 <malloc@plt>
  404010:	mov    rdi,rax
  404013:	mov    QWORD PTR [rbx+0x28],rax
  404017:	call   404700 <init_token_cpar@@Base>
  40401c:	mov    edi,0x4
  404021:	add    QWORD PTR [rip+0x9c6f],0x1        # 40dc98 <__bss_start@@Base+0x528>
  404029:	call   402180 <malloc@plt>
  40402e:	mov    rdi,rax
  404031:	mov    QWORD PTR [rbx+0x30],rax
  404035:	call   404710 <init_token_obra@@Base>
  40403a:	mov    edi,0x4
  40403f:	add    QWORD PTR [rip+0x9c59],0x1        # 40dca0 <__bss_start@@Base+0x530>
  404047:	call   402180 <malloc@plt>
  40404c:	mov    rdi,rax
  40404f:	mov    QWORD PTR [rbx+0x38],rax
  404053:	call   404760 <init_token_if@@Base>
  404058:	mov    edi,0x4
  40405d:	add    QWORD PTR [rip+0x9c43],0x1        # 40dca8 <__bss_start@@Base+0x538>
  404065:	call   402180 <malloc@plt>
  40406a:	mov    rdi,rax
  40406d:	mov    QWORD PTR [rbx+0x40],rax
  404071:	call   4046f0 <init_token_opar@@Base>
  404076:	mov    edi,0x8
  40407b:	add    QWORD PTR [rip+0x9c2d],0x1        # 40dcb0 <__bss_start@@Base+0x540>
  404083:	call   402180 <malloc@plt>
  404088:	mov    esi,0x1
  40408d:	mov    rdi,rax
  404090:	mov    QWORD PTR [rbx+0x48],rax
  404094:	call   4046b0 <init_token_int_value@@Base>
  404099:	mov    edi,0x8
  40409e:	add    QWORD PTR [rip+0x9c12],0x1        # 40dcb8 <__bss_start@@Base+0x548>
  4040a6:	call   402180 <malloc@plt>
  4040ab:	mov    esi,0x1
  4040b0:	mov    rdi,rax
  4040b3:	mov    QWORD PTR [rbx+0x50],rax
  4040b7:	call   4046b0 <init_token_int_value@@Base>
  4040bc:	mov    edi,0x10
  4040c1:	add    QWORD PTR [rip+0x9bf7],0x1        # 40dcc0 <__bss_start@@Base+0x550>
  4040c9:	call   402180 <malloc@plt>
  4040ce:	mov    rsi,rbp
  4040d1:	mov    rdi,rax
  4040d4:	mov    QWORD PTR [rbx+0x58],rax
  4040d8:	call   404780 <init_token_boolean_op@@Base>
  4040dd:	mov    edi,0x8
  4040e2:	add    QWORD PTR [rip+0x9bde],0x1        # 40dcc8 <__bss_start@@Base+0x558>
  4040ea:	call   402180 <malloc@plt>
  4040ef:	mov    esi,0x1
  4040f4:	mov    rdi,rax
  4040f7:	mov    QWORD PTR [rbx+0x60],rax
  4040fb:	call   4046b0 <init_token_int_value@@Base>
  404100:	mov    edi,0x4
  404105:	add    QWORD PTR [rip+0x9bc3],0x1        # 40dcd0 <__bss_start@@Base+0x560>
  40410d:	call   402180 <malloc@plt>
  404112:	mov    rdi,rax
  404115:	mov    QWORD PTR [rbx+0x68],rax
  404119:	call   404700 <init_token_cpar@@Base>
  40411e:	mov    edi,0x4
  404123:	add    QWORD PTR [rip+0x9bad],0x1        # 40dcd8 <__bss_start@@Base+0x568>
  40412b:	call   402180 <malloc@plt>
  404130:	mov    rdi,rax
  404133:	mov    QWORD PTR [rbx+0x70],rax
  404137:	call   404710 <init_token_obra@@Base>
  40413c:	mov    edi,0x4
  404141:	add    QWORD PTR [rip+0x9b97],0x1        # 40dce0 <__bss_start@@Base+0x570>
  404149:	call   402180 <malloc@plt>
  40414e:	mov    rdi,rax
  404151:	mov    QWORD PTR [rbx+0x78],rax
  404155:	call   404720 <init_token_cbra@@Base>
  40415a:	mov    edi,0x4
  40415f:	add    QWORD PTR [rip+0x9b81],0x1        # 40dce8 <__bss_start@@Base+0x578>
  404167:	call   402180 <malloc@plt>
  40416c:	mov    rdi,rax
  40416f:	mov    QWORD PTR [rbx+0x80],rax
  404176:	call   404720 <init_token_cbra@@Base>
  40417b:	mov    edi,0x4
  404180:	add    QWORD PTR [rip+0x9b68],0x1        # 40dcf0 <__bss_start@@Base+0x580>
  404188:	call   402180 <malloc@plt>
  40418d:	mov    rdi,rax
  404190:	mov    QWORD PTR [rbx+0x88],rax
  404197:	call   404720 <init_token_cbra@@Base>
  40419c:	mov    edi,0x4
  4041a1:	add    QWORD PTR [rip+0x9b4f],0x1        # 40dcf8 <__bss_start@@Base+0x588>
  4041a9:	call   402180 <malloc@plt>
  4041ae:	mov    rdi,rax
  4041b1:	mov    QWORD PTR [rbx+0x90],rax
  4041b8:	call   404750 <init_token_eof@@Base>
  4041bd:	mov    rbp,0x40ea80
  4041c4:	mov    rdi,r13
  4041c7:	add    QWORD PTR [rip+0x9b31],0x1        # 40dd00 <__bss_start@@Base+0x590>
  4041cf:	mov    QWORD PTR [rbp+0x1b8],rbx
  4041d6:	mov    DWORD PTR [rbp+0x1b0],0x13
  4041e0:	call   4054f0 <read_if_statement@@Base>
  4041e5:	cmp    DWORD PTR [rbp+0x198],0x13
  4041ec:	jne    40421b <if_statement_inside_if_statement@@Base+0x33b>
  4041ee:	test   rax,rax
  4041f1:	je     40426e <if_statement_inside_if_statement@@Base+0x38e>
  4041f3:	cmp    DWORD PTR [rax],0x4
  4041f6:	jne    404247 <if_statement_inside_if_statement@@Base+0x367>
  4041f8:	add    QWORD PTR [rip+0x9b18],0x1        # 40dd18 <__bss_start@@Base+0x5a8>
  404200:	mov    rax,QWORD PTR [rsp+0x28]
  404205:	xor    rax,QWORD PTR fs:0x28
  40420e:	jne    404242 <if_statement_inside_if_statement@@Base+0x362>
  404210:	add    rsp,0x38
  404214:	pop    rbx
  404215:	pop    rbp
  404216:	pop    r12
  404218:	pop    r13
  40421a:	ret    
  40421b:	lea    rcx,[rip+0x433e]        # 408560 <_IO_stdin_used@@Base+0x560>
  404222:	lea    rsi,[rip+0x3ddf]        # 408008 <_IO_stdin_used@@Base+0x8>
  404229:	lea    rdi,[rip+0x41c1]        # 4083f1 <_IO_stdin_used@@Base+0x3f1>
  404230:	mov    edx,0x1e0
  404235:	add    QWORD PTR [rip+0x9acb],0x1        # 40dd08 <__bss_start@@Base+0x598>
  40423d:	call   402120 <__assert_fail@plt>
  404242:	call   402100 <__stack_chk_fail@plt>
  404247:	lea    rcx,[rip+0x4312]        # 408560 <_IO_stdin_used@@Base+0x560>
  40424e:	lea    rsi,[rip+0x3db3]        # 408008 <_IO_stdin_used@@Base+0x8>
  404255:	lea    rdi,[rip+0x40f2]        # 40834e <_IO_stdin_used@@Base+0x34e>
  40425c:	mov    edx,0x1e2
  404261:	add    QWORD PTR [rip+0x9ab7],0x1        # 40dd20 <__bss_start@@Base+0x5b0>
  404269:	call   402120 <__assert_fail@plt>
  40426e:	lea    rcx,[rip+0x42eb]        # 408560 <_IO_stdin_used@@Base+0x560>
  404275:	lea    rsi,[rip+0x3d8c]        # 408008 <_IO_stdin_used@@Base+0x8>
  40427c:	lea    rdi,[rip+0x40bf]        # 408342 <_IO_stdin_used@@Base+0x342>
  404283:	mov    edx,0x1e1
  404288:	add    QWORD PTR [rip+0x9a80],0x1        # 40dd10 <__bss_start@@Base+0x5a0>
  404290:	call   402120 <__assert_fail@plt>
  404295:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004042a0 <if_statement_inside_else_statement@@Base>:
  4042a0:	push   r13
  4042a2:	push   r12
  4042a4:	push   rbp
  4042a5:	push   rbx
  4042a6:	sub    rsp,0x38
  4042aa:	add    QWORD PTR [rip+0x9a8e],0x1        # 40dd40 <__bss_start@@Base+0x5d0>
  4042b2:	lea    r13,[rsp+0x8]
  4042b7:	lea    rsi,[rsp+0x10]
  4042bc:	mov    rax,QWORD PTR fs:0x28
  4042c5:	mov    QWORD PTR [rsp+0x28],rax
  4042ca:	xor    eax,eax
  4042cc:	mov    rdi,r13
  4042cf:	call   404f00 <init_grammar@@Base>
  4042d4:	mov    edi,0x3
  4042d9:	add    QWORD PTR [rip+0x9a67],0x1        # 40dd48 <__bss_start@@Base+0x5d8>
  4042e1:	call   402180 <malloc@plt>
  4042e6:	mov    edi,0x3
  4042eb:	mov    r12,rax
  4042ee:	call   402180 <malloc@plt>
  4042f3:	mov    edi,0xa8
  4042f8:	mov    BYTE PTR [rax],0x21
  4042fb:	mov    rbp,rax
  4042fe:	mov    BYTE PTR [rax+0x1],0x3d
  404302:	mov    BYTE PTR [rax+0x2],0x0
  404306:	mov    BYTE PTR [r12],0x21
  40430b:	mov    BYTE PTR [r12+0x1],0x3d
  404311:	mov    BYTE PTR [r12+0x2],0x0
  404317:	call   402180 <malloc@plt>
  40431c:	mov    edi,0x4
  404321:	mov    rbx,rax
  404324:	call   402180 <malloc@plt>
  404329:	mov    rdi,rax
  40432c:	mov    QWORD PTR [rbx],rax
  40432f:	call   4046f0 <init_token_opar@@Base>
  404334:	mov    edi,0x8
  404339:	add    QWORD PTR [rip+0x9a0f],0x1        # 40dd50 <__bss_start@@Base+0x5e0>
  404341:	call   402180 <malloc@plt>
  404346:	mov    esi,0x1
  40434b:	mov    rdi,rax
  40434e:	mov    QWORD PTR [rbx+0x8],rax
  404352:	call   4046b0 <init_token_int_value@@Base>
  404357:	mov    edi,0x8
  40435c:	add    QWORD PTR [rip+0x99f4],0x1        # 40dd58 <__bss_start@@Base+0x5e8>
  404364:	call   402180 <malloc@plt>
  404369:	mov    esi,0x1
  40436e:	mov    rdi,rax
  404371:	mov    QWORD PTR [rbx+0x10],rax
  404375:	call   4046b0 <init_token_int_value@@Base>
  40437a:	mov    edi,0x10
  40437f:	add    QWORD PTR [rip+0x99d9],0x1        # 40dd60 <__bss_start@@Base+0x5f0>
  404387:	call   402180 <malloc@plt>
  40438c:	mov    rsi,r12
  40438f:	mov    rdi,rax
  404392:	mov    QWORD PTR [rbx+0x18],rax
  404396:	call   404780 <init_token_boolean_op@@Base>
  40439b:	mov    edi,0x8
  4043a0:	add    QWORD PTR [rip+0x99c0],0x1        # 40dd68 <__bss_start@@Base+0x5f8>
  4043a8:	call   402180 <malloc@plt>
  4043ad:	mov    esi,0x1
  4043b2:	mov    rdi,rax
  4043b5:	mov    QWORD PTR [rbx+0x20],rax
  4043b9:	call   4046b0 <init_token_int_value@@Base>
  4043be:	mov    edi,0x4
  4043c3:	add    QWORD PTR [rip+0x99a5],0x1        # 40dd70 <__bss_start@@Base+0x600>
  4043cb:	call   402180 <malloc@plt>
  4043d0:	mov    rdi,rax
  4043d3:	mov    QWORD PTR [rbx+0x28],rax
  4043d7:	call   404700 <init_token_cpar@@Base>
  4043dc:	mov    edi,0x4
  4043e1:	add    QWORD PTR [rip+0x998f],0x1        # 40dd78 <__bss_start@@Base+0x608>
  4043e9:	call   402180 <malloc@plt>
  4043ee:	mov    rdi,rax
  4043f1:	mov    QWORD PTR [rbx+0x30],rax
  4043f5:	call   404710 <init_token_obra@@Base>
  4043fa:	mov    edi,0x4
  4043ff:	add    QWORD PTR [rip+0x9979],0x1        # 40dd80 <__bss_start@@Base+0x610>
  404407:	call   402180 <malloc@plt>
  40440c:	mov    rdi,rax
  40440f:	mov    QWORD PTR [rbx+0x38],rax
  404413:	call   404720 <init_token_cbra@@Base>
  404418:	mov    edi,0x4
  40441d:	add    QWORD PTR [rip+0x9963],0x1        # 40dd88 <__bss_start@@Base+0x618>
  404425:	call   402180 <malloc@plt>
  40442a:	mov    rdi,rax
  40442d:	mov    QWORD PTR [rbx+0x40],rax
  404431:	call   404770 <init_token_else@@Base>
  404436:	mov    edi,0x4
  40443b:	add    QWORD PTR [rip+0x994d],0x1        # 40dd90 <__bss_start@@Base+0x620>
  404443:	call   402180 <malloc@plt>
  404448:	mov    rdi,rax
  40444b:	mov    QWORD PTR [rbx+0x48],rax
  40444f:	call   404710 <init_token_obra@@Base>
  404454:	mov    edi,0x4
  404459:	add    QWORD PTR [rip+0x9937],0x1        # 40dd98 <__bss_start@@Base+0x628>
  404461:	call   402180 <malloc@plt>
  404466:	mov    rdi,rax
  404469:	mov    QWORD PTR [rbx+0x50],rax
  40446d:	call   404760 <init_token_if@@Base>
  404472:	mov    edi,0x4
  404477:	add    QWORD PTR [rip+0x9921],0x1        # 40dda0 <__bss_start@@Base+0x630>
  40447f:	call   402180 <malloc@plt>
  404484:	mov    rdi,rax
  404487:	mov    QWORD PTR [rbx+0x58],rax
  40448b:	call   4046f0 <init_token_opar@@Base>
  404490:	mov    edi,0x8
  404495:	add    QWORD PTR [rip+0x990b],0x1        # 40dda8 <__bss_start@@Base+0x638>
  40449d:	call   402180 <malloc@plt>
  4044a2:	mov    esi,0x1
  4044a7:	mov    rdi,rax
  4044aa:	mov    QWORD PTR [rbx+0x60],rax
  4044ae:	call   4046b0 <init_token_int_value@@Base>
  4044b3:	mov    edi,0x8
  4044b8:	add    QWORD PTR [rip+0x98f0],0x1        # 40ddb0 <__bss_start@@Base+0x640>
  4044c0:	call   402180 <malloc@plt>
  4044c5:	mov    esi,0x1
  4044ca:	mov    rdi,rax
  4044cd:	mov    QWORD PTR [rbx+0x68],rax
  4044d1:	call   4046b0 <init_token_int_value@@Base>
  4044d6:	mov    edi,0x10
  4044db:	add    QWORD PTR [rip+0x98d5],0x1        # 40ddb8 <__bss_start@@Base+0x648>
  4044e3:	call   402180 <malloc@plt>
  4044e8:	mov    rsi,rbp
  4044eb:	mov    rdi,rax
  4044ee:	mov    QWORD PTR [rbx+0x70],rax
  4044f2:	call   404780 <init_token_boolean_op@@Base>
  4044f7:	mov    edi,0x8
  4044fc:	add    QWORD PTR [rip+0x98bc],0x1        # 40ddc0 <__bss_start@@Base+0x650>
  404504:	call   402180 <malloc@plt>
  404509:	mov    esi,0x1
  40450e:	mov    rdi,rax
  404511:	mov    QWORD PTR [rbx+0x78],rax
  404515:	call   4046b0 <init_token_int_value@@Base>
  40451a:	mov    edi,0x4
  40451f:	add    QWORD PTR [rip+0x98a1],0x1        # 40ddc8 <__bss_start@@Base+0x658>
  404527:	call   402180 <malloc@plt>
  40452c:	mov    rdi,rax
  40452f:	mov    QWORD PTR [rbx+0x80],rax
  404536:	call   404700 <init_token_cpar@@Base>
  40453b:	mov    edi,0x4
  404540:	add    QWORD PTR [rip+0x9888],0x1        # 40ddd0 <__bss_start@@Base+0x660>
  404548:	call   402180 <malloc@plt>
  40454d:	mov    rdi,rax
  404550:	mov    QWORD PTR [rbx+0x88],rax
  404557:	call   404710 <init_token_obra@@Base>
  40455c:	mov    edi,0x4
  404561:	add    QWORD PTR [rip+0x986f],0x1        # 40ddd8 <__bss_start@@Base+0x668>
  404569:	call   402180 <malloc@plt>
  40456e:	mov    rdi,rax
  404571:	mov    QWORD PTR [rbx+0x90],rax
  404578:	call   404720 <init_token_cbra@@Base>
  40457d:	mov    edi,0x4
  404582:	add    QWORD PTR [rip+0x9856],0x1        # 40dde0 <__bss_start@@Base+0x670>
  40458a:	call   402180 <malloc@plt>
  40458f:	mov    rdi,rax
  404592:	mov    QWORD PTR [rbx+0x98],rax
  404599:	call   404720 <init_token_cbra@@Base>
  40459e:	mov    edi,0x4
  4045a3:	add    QWORD PTR [rip+0x983d],0x1        # 40dde8 <__bss_start@@Base+0x678>
  4045ab:	call   402180 <malloc@plt>
  4045b0:	mov    rdi,rax
  4045b3:	mov    QWORD PTR [rbx+0xa0],rax
  4045ba:	call   404720 <init_token_cbra@@Base>
  4045bf:	mov    rbp,0x40ea80
  4045c6:	mov    rdi,r13
  4045c9:	add    QWORD PTR [rip+0x981f],0x1        # 40ddf0 <__bss_start@@Base+0x680>
  4045d1:	mov    QWORD PTR [rbp+0x1b8],rbx
  4045d8:	mov    DWORD PTR [rbp+0x1b0],0x15
  4045e2:	call   4054f0 <read_if_statement@@Base>
  4045e7:	cmp    DWORD PTR [rbp+0x198],0x15
  4045ee:	jne    40461d <if_statement_inside_else_statement@@Base+0x37d>
  4045f0:	test   rax,rax
  4045f3:	je     404670 <if_statement_inside_else_statement@@Base+0x3d0>
  4045f5:	cmp    DWORD PTR [rax],0x4
  4045f8:	jne    404649 <if_statement_inside_else_statement@@Base+0x3a9>
  4045fa:	add    QWORD PTR [rip+0x9806],0x1        # 40de08 <__bss_start@@Base+0x698>
  404602:	mov    rax,QWORD PTR [rsp+0x28]
  404607:	xor    rax,QWORD PTR fs:0x28
  404610:	jne    404644 <if_statement_inside_else_statement@@Base+0x3a4>
  404612:	add    rsp,0x38
  404616:	pop    rbx
  404617:	pop    rbp
  404618:	pop    r12
  40461a:	pop    r13
  40461c:	ret    
  40461d:	lea    rcx,[rip+0x3efc]        # 408520 <_IO_stdin_used@@Base+0x520>
  404624:	lea    rsi,[rip+0x39dd]        # 408008 <_IO_stdin_used@@Base+0x8>
  40462b:	lea    rdi,[rip+0x3dda]        # 40840c <_IO_stdin_used@@Base+0x40c>
  404632:	mov    edx,0x22e
  404637:	add    QWORD PTR [rip+0x97b9],0x1        # 40ddf8 <__bss_start@@Base+0x688>
  40463f:	call   402120 <__assert_fail@plt>
  404644:	call   402100 <__stack_chk_fail@plt>
  404649:	lea    rcx,[rip+0x3ed0]        # 408520 <_IO_stdin_used@@Base+0x520>
  404650:	lea    rsi,[rip+0x39b1]        # 408008 <_IO_stdin_used@@Base+0x8>
  404657:	lea    rdi,[rip+0x3cf0]        # 40834e <_IO_stdin_used@@Base+0x34e>
  40465e:	mov    edx,0x230
  404663:	add    QWORD PTR [rip+0x97a5],0x1        # 40de10 <__bss_start@@Base+0x6a0>
  40466b:	call   402120 <__assert_fail@plt>
  404670:	lea    rcx,[rip+0x3ea9]        # 408520 <_IO_stdin_used@@Base+0x520>
  404677:	lea    rsi,[rip+0x398a]        # 408008 <_IO_stdin_used@@Base+0x8>
  40467e:	lea    rdi,[rip+0x3cbd]        # 408342 <_IO_stdin_used@@Base+0x342>
  404685:	mov    edx,0x22f
  40468a:	add    QWORD PTR [rip+0x976e],0x1        # 40de00 <__bss_start@@Base+0x690>
  404692:	call   402120 <__assert_fail@plt>
  404697:	nop    WORD PTR [rax+rax*1+0x0]

00000000004046a0 <init_token_int_type@@Base>:
  4046a0:	add    QWORD PTR [rip+0x9948],0x1        # 40dff0 <__bss_start@@Base+0x880>
  4046a8:	mov    DWORD PTR [rdi],0x0
  4046ae:	ret    
  4046af:	nop

00000000004046b0 <init_token_int_value@@Base>:
  4046b0:	add    QWORD PTR [rip+0x9940],0x1        # 40dff8 <__bss_start@@Base+0x888>
  4046b8:	mov    DWORD PTR [rdi],0x1
  4046be:	mov    DWORD PTR [rdi+0x4],esi
  4046c1:	ret    
  4046c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4046cd:	nop    DWORD PTR [rax]

00000000004046d0 <init_token_function@@Base>:
  4046d0:	add    QWORD PTR [rip+0x9928],0x1        # 40e000 <__bss_start@@Base+0x890>
  4046d8:	mov    DWORD PTR [rdi],0x2
  4046de:	mov    QWORD PTR [rdi+0x8],rsi
  4046e2:	ret    
  4046e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4046ee:	xchg   ax,ax

00000000004046f0 <init_token_opar@@Base>:
  4046f0:	add    QWORD PTR [rip+0x9910],0x1        # 40e008 <__bss_start@@Base+0x898>
  4046f8:	mov    DWORD PTR [rdi],0x3
  4046fe:	ret    
  4046ff:	nop

0000000000404700 <init_token_cpar@@Base>:
  404700:	add    QWORD PTR [rip+0x9908],0x1        # 40e010 <__bss_start@@Base+0x8a0>
  404708:	mov    DWORD PTR [rdi],0x4
  40470e:	ret    
  40470f:	nop

0000000000404710 <init_token_obra@@Base>:
  404710:	add    QWORD PTR [rip+0x9900],0x1        # 40e018 <__bss_start@@Base+0x8a8>
  404718:	mov    DWORD PTR [rdi],0x5
  40471e:	ret    
  40471f:	nop

0000000000404720 <init_token_cbra@@Base>:
  404720:	add    QWORD PTR [rip+0x98f8],0x1        # 40e020 <__bss_start@@Base+0x8b0>
  404728:	mov    DWORD PTR [rdi],0x6
  40472e:	ret    
  40472f:	nop

0000000000404730 <init_token_return@@Base>:
  404730:	add    QWORD PTR [rip+0x98f0],0x1        # 40e028 <__bss_start@@Base+0x8b8>
  404738:	mov    DWORD PTR [rdi],0x7
  40473e:	ret    
  40473f:	nop

0000000000404740 <init_token_semicolon@@Base>:
  404740:	add    QWORD PTR [rip+0x98e8],0x1        # 40e030 <__bss_start@@Base+0x8c0>
  404748:	mov    DWORD PTR [rdi],0x8
  40474e:	ret    
  40474f:	nop

0000000000404750 <init_token_eof@@Base>:
  404750:	add    QWORD PTR [rip+0x98e0],0x1        # 40e038 <__bss_start@@Base+0x8c8>
  404758:	mov    DWORD PTR [rdi],0x9
  40475e:	ret    
  40475f:	nop

0000000000404760 <init_token_if@@Base>:
  404760:	add    QWORD PTR [rip+0x98d8],0x1        # 40e040 <__bss_start@@Base+0x8d0>
  404768:	mov    DWORD PTR [rdi],0xa
  40476e:	ret    
  40476f:	nop

0000000000404770 <init_token_else@@Base>:
  404770:	add    QWORD PTR [rip+0x98d0],0x1        # 40e048 <__bss_start@@Base+0x8d8>
  404778:	mov    DWORD PTR [rdi],0xb
  40477e:	ret    
  40477f:	nop

0000000000404780 <init_token_boolean_op@@Base>:
  404780:	add    QWORD PTR [rip+0x98c8],0x1        # 40e050 <__bss_start@@Base+0x8e0>
  404788:	mov    DWORD PTR [rdi],0xc
  40478e:	mov    QWORD PTR [rdi+0x8],rsi
  404792:	ret    
  404793:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40479e:	xchg   ax,ax

00000000004047a0 <free_token_int_type@@Base>:
  4047a0:	add    QWORD PTR [rip+0x98b0],0x1        # 40e058 <__bss_start@@Base+0x8e8>
  4047a8:	jmp    402040 <free@plt>
  4047ad:	nop    DWORD PTR [rax]

00000000004047b0 <free_token_int_value@@Base>:
  4047b0:	add    QWORD PTR [rip+0x98a8],0x1        # 40e060 <__bss_start@@Base+0x8f0>
  4047b8:	jmp    402040 <free@plt>
  4047bd:	nop    DWORD PTR [rax]

00000000004047c0 <free_token_function@@Base>:
  4047c0:	add    QWORD PTR [rip+0x98a0],0x1        # 40e068 <__bss_start@@Base+0x8f8>
  4047c8:	jmp    402040 <free@plt>
  4047cd:	nop    DWORD PTR [rax]

00000000004047d0 <free_token_opar@@Base>:
  4047d0:	add    QWORD PTR [rip+0x9898],0x1        # 40e070 <__bss_start@@Base+0x900>
  4047d8:	jmp    402040 <free@plt>
  4047dd:	nop    DWORD PTR [rax]

00000000004047e0 <free_token_cpar@@Base>:
  4047e0:	add    QWORD PTR [rip+0x9890],0x1        # 40e078 <__bss_start@@Base+0x908>
  4047e8:	jmp    402040 <free@plt>
  4047ed:	nop    DWORD PTR [rax]

00000000004047f0 <free_token_obra@@Base>:
  4047f0:	add    QWORD PTR [rip+0x9888],0x1        # 40e080 <__bss_start@@Base+0x910>
  4047f8:	jmp    402040 <free@plt>
  4047fd:	nop    DWORD PTR [rax]

0000000000404800 <free_token_cbra@@Base>:
  404800:	add    QWORD PTR [rip+0x9880],0x1        # 40e088 <__bss_start@@Base+0x918>
  404808:	jmp    402040 <free@plt>
  40480d:	nop    DWORD PTR [rax]

0000000000404810 <free_token_return@@Base>:
  404810:	add    QWORD PTR [rip+0x9878],0x1        # 40e090 <__bss_start@@Base+0x920>
  404818:	jmp    402040 <free@plt>
  40481d:	nop    DWORD PTR [rax]

0000000000404820 <free_token_semicolon@@Base>:
  404820:	add    QWORD PTR [rip+0x9870],0x1        # 40e098 <__bss_start@@Base+0x928>
  404828:	jmp    402040 <free@plt>
  40482d:	nop    DWORD PTR [rax]

0000000000404830 <free_token_eof@@Base>:
  404830:	add    QWORD PTR [rip+0x9868],0x1        # 40e0a0 <__bss_start@@Base+0x930>
  404838:	jmp    402040 <free@plt>
  40483d:	nop    DWORD PTR [rax]

0000000000404840 <free_token_if@@Base>:
  404840:	add    QWORD PTR [rip+0x9860],0x1        # 40e0a8 <__bss_start@@Base+0x938>
  404848:	jmp    402040 <free@plt>
  40484d:	nop    DWORD PTR [rax]

0000000000404850 <free_token_else@@Base>:
  404850:	add    QWORD PTR [rip+0x9858],0x1        # 40e0b0 <__bss_start@@Base+0x940>
  404858:	jmp    402040 <free@plt>
  40485d:	nop    DWORD PTR [rax]

0000000000404860 <free_token_boolean_op@@Base>:
  404860:	push   rbx
  404861:	mov    rbx,rdi
  404864:	mov    rdi,QWORD PTR [rdi+0x8]
  404868:	add    QWORD PTR [rip+0x9850],0x1        # 40e0c0 <__bss_start@@Base+0x950>
  404870:	test   rdi,rdi
  404873:	je     404882 <free_token_boolean_op@@Base+0x22>
  404875:	call   402040 <free@plt>
  40487a:	add    QWORD PTR [rip+0x9846],0x1        # 40e0c8 <__bss_start@@Base+0x958>
  404882:	mov    rdi,rbx
  404885:	pop    rbx
  404886:	jmp    402040 <free@plt>
  40488b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404890 <init_ast_base@@Base>:
  404890:	add    QWORD PTR [rip+0x9848],0x1        # 40e0e0 <__bss_start@@Base+0x970>
  404898:	mov    DWORD PTR [rdi],esi
  40489a:	mov    QWORD PTR [rdi+0x8],rdx
  40489e:	ret    
  40489f:	nop

00000000004048a0 <init_ast_base_single@@Base>:
  4048a0:	sub    rsp,0x8
  4048a4:	xor    edx,edx
  4048a6:	add    QWORD PTR [rip+0x9842],0x1        # 40e0f0 <__bss_start@@Base+0x980>
  4048ae:	call   404890 <init_ast_base@@Base>
  4048b3:	add    QWORD PTR [rip+0x983d],0x1        # 40e0f8 <__bss_start@@Base+0x988>
  4048bb:	add    rsp,0x8
  4048bf:	ret    

00000000004048c0 <init_node_id@@Base>:
  4048c0:	push   rbp
  4048c1:	push   rbx
  4048c2:	mov    rbp,rsi
  4048c5:	mov    rbx,rdi
  4048c8:	xor    esi,esi
  4048ca:	sub    rsp,0x8
  4048ce:	add    QWORD PTR [rip+0x982a],0x1        # 40e100 <__bss_start@@Base+0x990>
  4048d6:	call   4048a0 <init_ast_base_single@@Base>
  4048db:	mov    QWORD PTR [rbx+0x10],rbp
  4048df:	add    QWORD PTR [rip+0x9821],0x1        # 40e108 <__bss_start@@Base+0x998>
  4048e7:	add    rsp,0x8
  4048eb:	pop    rbx
  4048ec:	pop    rbp
  4048ed:	ret    
  4048ee:	xchg   ax,ax

00000000004048f0 <init_node_int@@Base>:
  4048f0:	push   rbp
  4048f1:	push   rbx
  4048f2:	mov    ebp,esi
  4048f4:	mov    rbx,rdi
  4048f7:	mov    esi,0x1
  4048fc:	sub    rsp,0x8
  404900:	add    QWORD PTR [rip+0x9808],0x1        # 40e110 <__bss_start@@Base+0x9a0>
  404908:	call   4048a0 <init_ast_base_single@@Base>
  40490d:	mov    DWORD PTR [rbx+0x10],ebp
  404910:	add    QWORD PTR [rip+0x9800],0x1        # 40e118 <__bss_start@@Base+0x9a8>
  404918:	add    rsp,0x8
  40491c:	pop    rbx
  40491d:	pop    rbp
  40491e:	ret    
  40491f:	nop

0000000000404920 <init_node_function@@Base>:
  404920:	push   r12
  404922:	push   rbp
  404923:	mov    r12,rsi
  404926:	push   rbx
  404927:	mov    rbp,rdx
  40492a:	mov    rbx,rdi
  40492d:	mov    esi,0x2
  404932:	add    QWORD PTR [rip+0x97e6],0x1        # 40e120 <__bss_start@@Base+0x9b0>
  40493a:	call   4048a0 <init_ast_base_single@@Base>
  40493f:	mov    QWORD PTR [rbx+0x10],r12
  404943:	mov    QWORD PTR [rbx+0x18],rbp
  404947:	add    QWORD PTR [rip+0x97d9],0x1        # 40e128 <__bss_start@@Base+0x9b8>
  40494f:	pop    rbx
  404950:	pop    rbp
  404951:	pop    r12
  404953:	ret    
  404954:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40495f:	nop

0000000000404960 <init_node_return@@Base>:
  404960:	push   rbp
  404961:	push   rbx
  404962:	mov    rbp,rsi
  404965:	mov    rbx,rdi
  404968:	mov    esi,0x3
  40496d:	sub    rsp,0x8
  404971:	add    QWORD PTR [rip+0x97b7],0x1        # 40e130 <__bss_start@@Base+0x9c0>
  404979:	call   4048a0 <init_ast_base_single@@Base>
  40497e:	mov    QWORD PTR [rbx+0x10],rbp
  404982:	add    QWORD PTR [rip+0x97ae],0x1        # 40e138 <__bss_start@@Base+0x9c8>
  40498a:	add    rsp,0x8
  40498e:	pop    rbx
  40498f:	pop    rbp
  404990:	ret    
  404991:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40499c:	nop    DWORD PTR [rax+0x0]

00000000004049a0 <init_node_if@@Base>:
  4049a0:	push   r13
  4049a2:	push   r12
  4049a4:	mov    r13,rsi
  4049a7:	push   rbp
  4049a8:	push   rbx
  4049a9:	mov    r12,rdx
  4049ac:	mov    rbx,rdi
  4049af:	mov    rbp,rcx
  4049b2:	mov    esi,0x4
  4049b7:	sub    rsp,0x8
  4049bb:	add    QWORD PTR [rip+0x977d],0x1        # 40e140 <__bss_start@@Base+0x9d0>
  4049c3:	call   4048a0 <init_ast_base_single@@Base>
  4049c8:	mov    QWORD PTR [rbx+0x10],r13
  4049cc:	mov    QWORD PTR [rbx+0x18],r12
  4049d0:	mov    QWORD PTR [rbx+0x20],rbp
  4049d4:	add    QWORD PTR [rip+0x976c],0x1        # 40e148 <__bss_start@@Base+0x9d8>
  4049dc:	add    rsp,0x8
  4049e0:	pop    rbx
  4049e1:	pop    rbp
  4049e2:	pop    r12
  4049e4:	pop    r13
  4049e6:	ret    
  4049e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004049f0 <init_node_boolean_operator@@Base>:
  4049f0:	push   r13
  4049f2:	push   r12
  4049f4:	mov    r13d,esi
  4049f7:	push   rbp
  4049f8:	push   rbx
  4049f9:	mov    r12,rdx
  4049fc:	mov    rbx,rdi
  4049ff:	mov    rbp,rcx
  404a02:	xor    esi,esi
  404a04:	sub    rsp,0x8
  404a08:	add    QWORD PTR [rip+0x9740],0x1        # 40e150 <__bss_start@@Base+0x9e0>
  404a10:	call   4048a0 <init_ast_base_single@@Base>
  404a15:	mov    DWORD PTR [rbx+0x20],r13d
  404a19:	mov    QWORD PTR [rbx+0x10],r12
  404a1d:	mov    QWORD PTR [rbx+0x18],rbp
  404a21:	mov    DWORD PTR [rbx],0x5
  404a27:	add    QWORD PTR [rip+0x9729],0x1        # 40e158 <__bss_start@@Base+0x9e8>
  404a2f:	add    rsp,0x8
  404a33:	pop    rbx
  404a34:	pop    rbp
  404a35:	pop    r12
  404a37:	pop    r13
  404a39:	ret    
  404a3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404a40 <free_node_boolean_operator@@Base>:
  404a40:	push   rbx
  404a41:	mov    rbx,rdi
  404a44:	mov    rdi,QWORD PTR [rdi+0x8]
  404a48:	add    QWORD PTR [rip+0x9850],0x1        # 40e2a0 <__bss_start@@Base+0xb30>
  404a50:	test   rdi,rdi
  404a53:	je     404a6a <free_node_boolean_operator@@Base+0x2a>
  404a55:	add    QWORD PTR [rip+0x984b],0x1        # 40e2a8 <__bss_start@@Base+0xb38>
  404a5d:	call   404aa0 <free_node@@Base>
  404a62:	add    QWORD PTR [rip+0x9846],0x1        # 40e2b0 <__bss_start@@Base+0xb40>
  404a6a:	mov    rdi,QWORD PTR [rbx+0x10]
  404a6e:	call   404aa0 <free_node@@Base>
  404a73:	mov    rdi,QWORD PTR [rbx+0x18]
  404a77:	add    QWORD PTR [rip+0x9839],0x1        # 40e2b8 <__bss_start@@Base+0xb48>
  404a7f:	call   404aa0 <free_node@@Base>
  404a84:	mov    rdi,rbx
  404a87:	add    QWORD PTR [rip+0x9831],0x1        # 40e2c0 <__bss_start@@Base+0xb50>
  404a8f:	pop    rbx
  404a90:	jmp    402040 <free@plt>
  404a95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404aa0 <free_node@@Base>:
  404aa0:	sub    rsp,0x8
  404aa4:	cmp    DWORD PTR [rdi],0x5
  404aa7:	ja     404b80 <free_node@@Base+0xe0>
  404aad:	mov    eax,DWORD PTR [rdi]
  404aaf:	lea    rdx,[rip+0x3dd6]        # 40888c <_IO_stdin_used@@Base+0x88c>
  404ab6:	movsxd rax,DWORD PTR [rdx+rax*4]
  404aba:	add    rax,rdx
  404abd:	jmp    rax
  404abf:	nop
  404ac0:	add    QWORD PTR [rip+0x96c0],0x1        # 40e188 <__bss_start@@Base+0xa18>
  404ac8:	call   404bc0 <free_node_if@@Base>
  404acd:	add    QWORD PTR [rip+0x96db],0x1        # 40e1b0 <__bss_start@@Base+0xa40>
  404ad5:	add    rsp,0x8
  404ad9:	ret    
  404ada:	nop    WORD PTR [rax+rax*1+0x0]
  404ae0:	add    QWORD PTR [rip+0x96a8],0x1        # 40e190 <__bss_start@@Base+0xa20>
  404ae8:	call   404a40 <free_node_boolean_operator@@Base>
  404aed:	add    QWORD PTR [rip+0x96c3],0x1        # 40e1b8 <__bss_start@@Base+0xa48>
  404af5:	add    rsp,0x8
  404af9:	ret    
  404afa:	nop    WORD PTR [rax+rax*1+0x0]
  404b00:	add    QWORD PTR [rip+0x9660],0x1        # 40e168 <__bss_start@@Base+0x9f8>
  404b08:	call   404cf0 <free_node_id@@Base>
  404b0d:	add    QWORD PTR [rip+0x96b3],0x1        # 40e1c8 <__bss_start@@Base+0xa58>
  404b15:	add    rsp,0x8
  404b19:	ret    
  404b1a:	nop    WORD PTR [rax+rax*1+0x0]
  404b20:	add    QWORD PTR [rip+0x9648],0x1        # 40e170 <__bss_start@@Base+0xa00>
  404b28:	call   404cb0 <free_node_int@@Base>
  404b2d:	add    QWORD PTR [rip+0x9663],0x1        # 40e198 <__bss_start@@Base+0xa28>
  404b35:	add    rsp,0x8
  404b39:	ret    
  404b3a:	nop    WORD PTR [rax+rax*1+0x0]
  404b40:	add    QWORD PTR [rip+0x9630],0x1        # 40e178 <__bss_start@@Base+0xa08>
  404b48:	call   404c70 <free_node_function@@Base>
  404b4d:	add    QWORD PTR [rip+0x964b],0x1        # 40e1a0 <__bss_start@@Base+0xa30>
  404b55:	add    rsp,0x8
  404b59:	ret    
  404b5a:	nop    WORD PTR [rax+rax*1+0x0]
  404b60:	add    QWORD PTR [rip+0x9618],0x1        # 40e180 <__bss_start@@Base+0xa10>
  404b68:	call   404c30 <free_node_return@@Base>
  404b6d:	add    QWORD PTR [rip+0x9633],0x1        # 40e1a8 <__bss_start@@Base+0xa38>
  404b75:	add    rsp,0x8
  404b79:	ret    
  404b7a:	nop    WORD PTR [rax+rax*1+0x0]
  404b80:	mov    rax,QWORD PTR [rip+0x7471]        # 40bff8 <stderr@GLIBC_2.2.5>
  404b87:	lea    rdi,[rip+0x3c32]        # 4087c0 <_IO_stdin_used@@Base+0x7c0>
  404b8e:	mov    edx,0x1f
  404b93:	mov    esi,0x1
  404b98:	add    QWORD PTR [rip+0x95c0],0x1        # 40e160 <__bss_start@@Base+0x9f0>
  404ba0:	mov    rcx,QWORD PTR [rax]
  404ba3:	call   402220 <fwrite@plt>
  404ba8:	mov    edi,0x1
  404bad:	add    QWORD PTR [rip+0x960b],0x1        # 40e1c0 <__bss_start@@Base+0xa50>
  404bb5:	call   402210 <exit@plt>
  404bba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404bc0 <free_node_if@@Base>:
  404bc0:	push   rbx
  404bc1:	mov    rbx,rdi
  404bc4:	mov    rdi,QWORD PTR [rdi+0x8]
  404bc8:	add    QWORD PTR [rip+0x9690],0x1        # 40e260 <__bss_start@@Base+0xaf0>
  404bd0:	test   rdi,rdi
  404bd3:	je     404bea <free_node_if@@Base+0x2a>
  404bd5:	add    QWORD PTR [rip+0x968b],0x1        # 40e268 <__bss_start@@Base+0xaf8>
  404bdd:	call   404aa0 <free_node@@Base>
  404be2:	add    QWORD PTR [rip+0x9686],0x1        # 40e270 <__bss_start@@Base+0xb00>
  404bea:	mov    rdi,QWORD PTR [rbx+0x10]
  404bee:	call   404aa0 <free_node@@Base>
  404bf3:	mov    rdi,QWORD PTR [rbx+0x18]
  404bf7:	add    QWORD PTR [rip+0x9679],0x1        # 40e278 <__bss_start@@Base+0xb08>
  404bff:	call   404aa0 <free_node@@Base>
  404c04:	mov    rdi,QWORD PTR [rbx+0x20]
  404c08:	add    QWORD PTR [rip+0x9670],0x1        # 40e280 <__bss_start@@Base+0xb10>
  404c10:	call   404aa0 <free_node@@Base>
  404c15:	mov    rdi,rbx
  404c18:	add    QWORD PTR [rip+0x9668],0x1        # 40e288 <__bss_start@@Base+0xb18>
  404c20:	pop    rbx
  404c21:	jmp    402040 <free@plt>
  404c26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404c30 <free_node_return@@Base>:
  404c30:	push   rbx
  404c31:	mov    rbx,rdi
  404c34:	mov    rdi,QWORD PTR [rdi+0x8]
  404c38:	add    QWORD PTR [rip+0x95f0],0x1        # 40e230 <__bss_start@@Base+0xac0>
  404c40:	test   rdi,rdi
  404c43:	je     404c5a <free_node_return@@Base+0x2a>
  404c45:	add    QWORD PTR [rip+0x95eb],0x1        # 40e238 <__bss_start@@Base+0xac8>
  404c4d:	call   404aa0 <free_node@@Base>
  404c52:	add    QWORD PTR [rip+0x95e6],0x1        # 40e240 <__bss_start@@Base+0xad0>
  404c5a:	mov    rdi,rbx
  404c5d:	pop    rbx
  404c5e:	jmp    402040 <free@plt>
  404c63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c6e:	xchg   ax,ax

0000000000404c70 <free_node_function@@Base>:
  404c70:	push   rbx
  404c71:	mov    rbx,rdi
  404c74:	mov    rdi,QWORD PTR [rdi+0x8]
  404c78:	add    QWORD PTR [rip+0x9590],0x1        # 40e210 <__bss_start@@Base+0xaa0>
  404c80:	test   rdi,rdi
  404c83:	je     404c9a <free_node_function@@Base+0x2a>
  404c85:	add    QWORD PTR [rip+0x958b],0x1        # 40e218 <__bss_start@@Base+0xaa8>
  404c8d:	call   404aa0 <free_node@@Base>
  404c92:	add    QWORD PTR [rip+0x9586],0x1        # 40e220 <__bss_start@@Base+0xab0>
  404c9a:	mov    rdi,QWORD PTR [rbx+0x10]
  404c9e:	call   402040 <free@plt>
  404ca3:	mov    rdi,rbx
  404ca6:	pop    rbx
  404ca7:	jmp    402040 <free@plt>
  404cac:	nop    DWORD PTR [rax+0x0]

0000000000404cb0 <free_node_int@@Base>:
  404cb0:	push   rbx
  404cb1:	mov    rbx,rdi
  404cb4:	mov    rdi,QWORD PTR [rdi+0x8]
  404cb8:	add    QWORD PTR [rip+0x9530],0x1        # 40e1f0 <__bss_start@@Base+0xa80>
  404cc0:	test   rdi,rdi
  404cc3:	je     404cda <free_node_int@@Base+0x2a>
  404cc5:	add    QWORD PTR [rip+0x952b],0x1        # 40e1f8 <__bss_start@@Base+0xa88>
  404ccd:	call   404aa0 <free_node@@Base>
  404cd2:	add    QWORD PTR [rip+0x9526],0x1        # 40e200 <__bss_start@@Base+0xa90>
  404cda:	mov    rdi,rbx
  404cdd:	pop    rbx
  404cde:	jmp    402040 <free@plt>
  404ce3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404cee:	xchg   ax,ax

0000000000404cf0 <free_node_id@@Base>:
  404cf0:	push   rbx
  404cf1:	mov    rbx,rdi
  404cf4:	mov    rdi,QWORD PTR [rdi+0x8]
  404cf8:	add    QWORD PTR [rip+0x94d0],0x1        # 40e1d0 <__bss_start@@Base+0xa60>
  404d00:	test   rdi,rdi
  404d03:	je     404d1a <free_node_id@@Base+0x2a>
  404d05:	add    QWORD PTR [rip+0x94cb],0x1        # 40e1d8 <__bss_start@@Base+0xa68>
  404d0d:	call   404aa0 <free_node@@Base>
  404d12:	add    QWORD PTR [rip+0x94c6],0x1        # 40e1e0 <__bss_start@@Base+0xa70>
  404d1a:	mov    rdi,rbx
  404d1d:	pop    rbx
  404d1e:	jmp    402040 <free@plt>
  404d23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d2e:	xchg   ax,ax

0000000000404d30 <get_boolean_op_value@@Base>:
  404d30:	push   rbx
  404d31:	mov    rbx,QWORD PTR [rdi+0x8]
  404d35:	mov    esi,0x2
  404d3a:	add    QWORD PTR [rip+0x959e],0x1        # 40e2e0 <__bss_start@@Base+0xb70>
  404d42:	mov    rdi,rbx
  404d45:	call   402130 <strnlen@plt>
  404d4a:	cmp    rax,0x2
  404d4e:	je     404db0 <get_boolean_op_value@@Base+0x80>
  404d50:	movzx  eax,BYTE PTR [rbx]
  404d53:	add    QWORD PTR [rip+0x9595],0x1        # 40e2f0 <__bss_start@@Base+0xb80>
  404d5b:	cmp    al,0x3c
  404d5d:	je     404e30 <get_boolean_op_value@@Base+0x100>
  404d63:	cmp    al,0x3e
  404d65:	je     404e10 <get_boolean_op_value@@Base+0xe0>
  404d6b:	cmp    al,0x21
  404d6d:	je     404e28 <get_boolean_op_value@@Base+0xf8>
  404d73:	mov    rax,QWORD PTR [rip+0x727e]        # 40bff8 <stderr@GLIBC_2.2.5>
  404d7a:	lea    rdx,[rip+0x3a5f]        # 4087e0 <_IO_stdin_used@@Base+0x7e0>
  404d81:	mov    rcx,rbx
  404d84:	mov    esi,0x1
  404d89:	add    QWORD PTR [rip+0x959f],0x1        # 40e330 <__bss_start@@Base+0xbc0>
  404d91:	mov    rdi,QWORD PTR [rax]
  404d94:	xor    eax,eax
  404d96:	call   402230 <__fprintf_chk@plt>
  404d9b:	mov    edi,0x1
  404da0:	add    QWORD PTR [rip+0x95a0],0x1        # 40e348 <__bss_start@@Base+0xbd8>
  404da8:	call   402210 <exit@plt>
  404dad:	nop    DWORD PTR [rax]
  404db0:	add    QWORD PTR [rip+0x9530],0x1        # 40e2e8 <__bss_start@@Base+0xb78>
  404db8:	lea    rdi,[rip+0x3ae5]        # 4088a4 <_IO_stdin_used@@Base+0x8a4>
  404dbf:	mov    ecx,0x2
  404dc4:	mov    rsi,rbx
  404dc7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404dc9:	je     404e20 <get_boolean_op_value@@Base+0xf0>
  404dcb:	add    QWORD PTR [rip+0x9525],0x1        # 40e2f8 <__bss_start@@Base+0xb88>
  404dd3:	lea    rdi,[rip+0x3acd]        # 4088a7 <_IO_stdin_used@@Base+0x8a7>
  404dda:	mov    ecx,0x2
  404ddf:	mov    rsi,rbx
  404de2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404de4:	je     404e40 <get_boolean_op_value@@Base+0x110>
  404de6:	lea    rdi,[rip+0x3abd]        # 4088aa <_IO_stdin_used@@Base+0x8aa>
  404ded:	mov    ecx,0x2
  404df2:	mov    rsi,rbx
  404df5:	add    QWORD PTR [rip+0x9503],0x1        # 40e300 <__bss_start@@Base+0xb90>
  404dfd:	mov    eax,0x2
  404e02:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404e04:	seta   cl
  404e07:	setb   dl
  404e0a:	cmp    cl,dl
  404e0c:	jne    404e50 <get_boolean_op_value@@Base+0x120>
  404e0e:	pop    rbx
  404e0f:	ret    
  404e10:	mov    eax,0x7
  404e15:	add    QWORD PTR [rip+0x9523],0x1        # 40e340 <__bss_start@@Base+0xbd0>
  404e1d:	pop    rbx
  404e1e:	ret    
  404e1f:	nop
  404e20:	xor    eax,eax
  404e22:	pop    rbx
  404e23:	ret    
  404e24:	nop    DWORD PTR [rax+0x0]
  404e28:	mov    eax,0x8
  404e2d:	pop    rbx
  404e2e:	ret    
  404e2f:	nop
  404e30:	mov    eax,0x6
  404e35:	add    QWORD PTR [rip+0x94fb],0x1        # 40e338 <__bss_start@@Base+0xbc8>
  404e3d:	pop    rbx
  404e3e:	ret    
  404e3f:	nop
  404e40:	mov    eax,0x1
  404e45:	pop    rbx
  404e46:	ret    
  404e47:	nop    WORD PTR [rax+rax*1+0x0]
  404e50:	lea    rdi,[rip+0x3a56]        # 4088ad <_IO_stdin_used@@Base+0x8ad>
  404e57:	mov    ecx,0x2
  404e5c:	mov    rsi,rbx
  404e5f:	add    QWORD PTR [rip+0x94a1],0x1        # 40e308 <__bss_start@@Base+0xb98>
  404e67:	mov    eax,0x3
  404e6c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404e6e:	seta   cl
  404e71:	setb   dl
  404e74:	cmp    cl,dl
  404e76:	je     404e0e <get_boolean_op_value@@Base+0xde>
  404e78:	lea    rdi,[rip+0x3a31]        # 4088b0 <_IO_stdin_used@@Base+0x8b0>
  404e7f:	mov    ecx,0x2
  404e84:	mov    rsi,rbx
  404e87:	add    QWORD PTR [rip+0x9481],0x1        # 40e310 <__bss_start@@Base+0xba0>
  404e8f:	mov    eax,0x4
  404e94:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404e96:	seta   cl
  404e99:	setb   dl
  404e9c:	cmp    cl,dl
  404e9e:	je     404e0e <get_boolean_op_value@@Base+0xde>
  404ea4:	add    QWORD PTR [rip+0x946c],0x1        # 40e318 <__bss_start@@Base+0xba8>
  404eac:	lea    rdi,[rip+0x3a00]        # 4088b3 <_IO_stdin_used@@Base+0x8b3>
  404eb3:	mov    ecx,0x2
  404eb8:	mov    rsi,rbx
  404ebb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404ebd:	jne    404ec6 <get_boolean_op_value@@Base+0x196>
  404ebf:	mov    eax,0x5
  404ec4:	pop    rbx
  404ec5:	ret    
  404ec6:	mov    rax,QWORD PTR [rip+0x712b]        # 40bff8 <stderr@GLIBC_2.2.5>
  404ecd:	lea    rdx,[rip+0x390c]        # 4087e0 <_IO_stdin_used@@Base+0x7e0>
  404ed4:	mov    rcx,rbx
  404ed7:	mov    esi,0x1
  404edc:	add    QWORD PTR [rip+0x943c],0x1        # 40e320 <__bss_start@@Base+0xbb0>
  404ee4:	mov    rdi,QWORD PTR [rax]
  404ee7:	xor    eax,eax
  404ee9:	call   402230 <__fprintf_chk@plt>
  404eee:	mov    edi,0x1
  404ef3:	add    QWORD PTR [rip+0x942d],0x1        # 40e328 <__bss_start@@Base+0xbb8>
  404efb:	call   402210 <exit@plt>

0000000000404f00 <init_grammar@@Base>:
  404f00:	add    QWORD PTR [rip+0x9458],0x1        # 40e360 <__bss_start@@Base+0xbf0>
  404f08:	mov    QWORD PTR [rdi],rsi
  404f0b:	ret    
  404f0c:	nop    DWORD PTR [rax+0x0]

0000000000404f10 <destroy_grammar@@Base>:
  404f10:	add    QWORD PTR [rip+0x9450],0x1        # 40e368 <__bss_start@@Base+0xbf8>
  404f18:	ret    
  404f19:	nop    DWORD PTR [rax+0x0]

0000000000404f20 <read_return_expression@@Base>:
  404f20:	push   r12
  404f22:	push   rbp
  404f23:	mov    rbp,rdi
  404f26:	push   rbx
  404f27:	mov    rdi,QWORD PTR [rdi]
  404f2a:	add    QWORD PTR [rip+0x954e],0x1        # 40e480 <__bss_start@@Base+0xd10>
  404f32:	call   402970 <next@@Base>
  404f37:	add    QWORD PTR [rip+0x9549],0x1        # 40e488 <__bss_start@@Base+0xd18>
  404f3f:	cmp    DWORD PTR [rax],0x1
  404f42:	jne    404fe0 <read_return_expression@@Base+0xc0>
  404f48:	mov    rbx,rax
  404f4b:	mov    edi,0x18
  404f50:	add    QWORD PTR [rip+0x9538],0x1        # 40e490 <__bss_start@@Base+0xd20>
  404f58:	call   402180 <malloc@plt>
  404f5d:	mov    esi,DWORD PTR [rbx+0x4]
  404f60:	mov    rdi,rax
  404f63:	mov    r12,rax
  404f66:	call   4048f0 <init_node_int@@Base>
  404f6b:	mov    rdi,rbx
  404f6e:	add    QWORD PTR [rip+0x9522],0x1        # 40e498 <__bss_start@@Base+0xd28>
  404f76:	call   4047b0 <free_token_int_value@@Base>
  404f7b:	mov    edi,0x18
  404f80:	add    QWORD PTR [rip+0x9518],0x1        # 40e4a0 <__bss_start@@Base+0xd30>
  404f88:	call   402180 <malloc@plt>
  404f8d:	mov    rsi,r12
  404f90:	mov    rdi,rax
  404f93:	mov    rbx,rax
  404f96:	call   404960 <init_node_return@@Base>
  404f9b:	mov    rdi,QWORD PTR [rbp+0x0]
  404f9f:	add    QWORD PTR [rip+0x9501],0x1        # 40e4a8 <__bss_start@@Base+0xd38>
  404fa7:	call   402970 <next@@Base>
  404fac:	add    QWORD PTR [rip+0x94fc],0x1        # 40e4b0 <__bss_start@@Base+0xd40>
  404fb4:	cmp    DWORD PTR [rax],0x8
  404fb7:	jne    404fe0 <read_return_expression@@Base+0xc0>
  404fb9:	mov    rdi,rax
  404fbc:	add    QWORD PTR [rip+0x94f4],0x1        # 40e4b8 <__bss_start@@Base+0xd48>
  404fc4:	call   404820 <free_token_semicolon@@Base>
  404fc9:	mov    rax,rbx
  404fcc:	add    QWORD PTR [rip+0x94ec],0x1        # 40e4c0 <__bss_start@@Base+0xd50>
  404fd4:	pop    rbx
  404fd5:	pop    rbp
  404fd6:	pop    r12
  404fd8:	ret    
  404fd9:	nop    DWORD PTR [rax+0x0]
  404fe0:	xor    ebx,ebx
  404fe2:	mov    rax,rbx
  404fe5:	pop    rbx
  404fe6:	pop    rbp
  404fe7:	pop    r12
  404fe9:	ret    
  404fea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404ff0 <read_boolean_unary_expression@@Base>:
  404ff0:	push   r13
  404ff2:	push   r12
  404ff4:	mov    r12,rdi
  404ff7:	push   rbp
  404ff8:	push   rbx
  404ff9:	mov    edi,0x28
  404ffe:	sub    rsp,0x8
  405002:	add    QWORD PTR [rip+0x9696],0x1        # 40e6a0 <__bss_start@@Base+0xf30>
  40500a:	call   402180 <malloc@plt>
  40500f:	mov    rdi,QWORD PTR [r12]
  405013:	mov    rbp,rax
  405016:	call   402970 <next@@Base>
  40501b:	cmp    DWORD PTR [rax],0xc
  40501e:	jne    4050c8 <read_boolean_unary_expression@@Base+0xd8>
  405024:	mov    rbx,rax
  405027:	mov    rdi,rax
  40502a:	add    QWORD PTR [rip+0x967e],0x1        # 40e6b0 <__bss_start@@Base+0xf40>
  405032:	call   404d30 <get_boolean_op_value@@Base>
  405037:	mov    rdi,rbx
  40503a:	mov    r13d,eax
  40503d:	add    QWORD PTR [rip+0x967b],0x1        # 40e6c0 <__bss_start@@Base+0xf50>
  405045:	call   404860 <free_token_boolean_op@@Base>
  40504a:	mov    rdi,QWORD PTR [r12]
  40504e:	add    QWORD PTR [rip+0x9672],0x1        # 40e6c8 <__bss_start@@Base+0xf58>
  405056:	call   402970 <next@@Base>
  40505b:	cmp    DWORD PTR [rax],0x1
  40505e:	mov    rbx,rax
  405061:	jne    4050f0 <read_boolean_unary_expression@@Base+0x100>
  405067:	mov    edi,0x18
  40506c:	add    QWORD PTR [rip+0x9664],0x1        # 40e6d8 <__bss_start@@Base+0xf68>
  405074:	call   402180 <malloc@plt>
  405079:	mov    esi,DWORD PTR [rbx+0x4]
  40507c:	mov    rdi,rax
  40507f:	mov    r12,rax
  405082:	call   4048f0 <init_node_int@@Base>
  405087:	mov    rdi,rbx
  40508a:	add    QWORD PTR [rip+0x9656],0x1        # 40e6e8 <__bss_start@@Base+0xf78>
  405092:	call   4047b0 <free_token_int_value@@Base>
  405097:	mov    rdx,r12
  40509a:	mov    esi,r13d
  40509d:	mov    rdi,rbp
  4050a0:	xor    ecx,ecx
  4050a2:	add    QWORD PTR [rip+0x9646],0x1        # 40e6f0 <__bss_start@@Base+0xf80>
  4050aa:	call   4049f0 <init_node_boolean_operator@@Base>
  4050af:	add    QWORD PTR [rip+0x9641],0x1        # 40e6f8 <__bss_start@@Base+0xf88>
  4050b7:	add    rsp,0x8
  4050bb:	mov    rax,rbp
  4050be:	pop    rbx
  4050bf:	pop    rbp
  4050c0:	pop    r12
  4050c2:	pop    r13
  4050c4:	ret    
  4050c5:	nop    DWORD PTR [rax]
  4050c8:	mov    rdi,rbp
  4050cb:	add    QWORD PTR [rip+0x95d5],0x1        # 40e6a8 <__bss_start@@Base+0xf38>
  4050d3:	xor    ebp,ebp
  4050d5:	call   404a40 <free_node_boolean_operator@@Base>
  4050da:	add    QWORD PTR [rip+0x95d6],0x1        # 40e6b8 <__bss_start@@Base+0xf48>
  4050e2:	add    rsp,0x8
  4050e6:	mov    rax,rbp
  4050e9:	pop    rbx
  4050ea:	pop    rbp
  4050eb:	pop    r12
  4050ed:	pop    r13
  4050ef:	ret    
  4050f0:	mov    rdi,rbp
  4050f3:	add    QWORD PTR [rip+0x95d5],0x1        # 40e6d0 <__bss_start@@Base+0xf60>
  4050fb:	xor    ebp,ebp
  4050fd:	call   404a40 <free_node_boolean_operator@@Base>
  405102:	add    QWORD PTR [rip+0x95d6],0x1        # 40e6e0 <__bss_start@@Base+0xf70>
  40510a:	add    rsp,0x8
  40510e:	mov    rax,rbp
  405111:	pop    rbx
  405112:	pop    rbp
  405113:	pop    r12
  405115:	pop    r13
  405117:	ret    
  405118:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405120 <read_boolean_binary_expression@@Base>:
  405120:	push   r13
  405122:	push   r12
  405124:	push   rbp
  405125:	push   rbx
  405126:	mov    rbx,rdi
  405129:	sub    rsp,0x18
  40512d:	mov    rdi,QWORD PTR [rdi]
  405130:	add    QWORD PTR [rip+0x94c8],0x1        # 40e600 <__bss_start@@Base+0xe90>
  405138:	call   402970 <next@@Base>
  40513d:	mov    edx,DWORD PTR [rax]
  40513f:	mov    rbp,rax
  405142:	cmp    edx,0x1
  405145:	je     405190 <read_boolean_binary_expression@@Base+0x70>
  405147:	add    QWORD PTR [rip+0x94b9],0x1        # 40e608 <__bss_start@@Base+0xe98>
  40514f:	xor    eax,eax
  405151:	cmp    edx,0xc
  405154:	jne    405181 <read_boolean_binary_expression@@Base+0x61>
  405156:	mov    rdi,QWORD PTR [rbx]
  405159:	mov    rsi,rbp
  40515c:	add    QWORD PTR [rip+0x94b4],0x1        # 40e618 <__bss_start@@Base+0xea8>
  405164:	call   4028b0 <push_back@@Base>
  405169:	mov    rdi,rbx
  40516c:	add    QWORD PTR [rip+0x94ac],0x1        # 40e620 <__bss_start@@Base+0xeb0>
  405174:	call   404ff0 <read_boolean_unary_expression@@Base>
  405179:	add    QWORD PTR [rip+0x94a7],0x1        # 40e628 <__bss_start@@Base+0xeb8>
  405181:	add    rsp,0x18
  405185:	pop    rbx
  405186:	pop    rbp
  405187:	pop    r12
  405189:	pop    r13
  40518b:	ret    
  40518c:	nop    DWORD PTR [rax+0x0]
  405190:	mov    edi,0x18
  405195:	add    QWORD PTR [rip+0x9473],0x1        # 40e610 <__bss_start@@Base+0xea0>
  40519d:	call   402180 <malloc@plt>
  4051a2:	mov    esi,DWORD PTR [rbp+0x4]
  4051a5:	mov    rdi,rax
  4051a8:	mov    r12,rax
  4051ab:	call   4048f0 <init_node_int@@Base>
  4051b0:	mov    rdi,rbp
  4051b3:	add    QWORD PTR [rip+0x9475],0x1        # 40e630 <__bss_start@@Base+0xec0>
  4051bb:	call   4047b0 <free_token_int_value@@Base>
  4051c0:	mov    rdi,QWORD PTR [rbx]
  4051c3:	add    QWORD PTR [rip+0x946d],0x1        # 40e638 <__bss_start@@Base+0xec8>
  4051cb:	call   402970 <next@@Base>
  4051d0:	cmp    DWORD PTR [rax],0xc
  4051d3:	mov    rbp,rax
  4051d6:	jne    405288 <read_boolean_binary_expression@@Base+0x168>
  4051dc:	mov    rdi,rax
  4051df:	add    QWORD PTR [rip+0x9461],0x1        # 40e648 <__bss_start@@Base+0xed8>
  4051e7:	call   404d30 <get_boolean_op_value@@Base>
  4051ec:	mov    rdi,rbp
  4051ef:	mov    r13d,eax
  4051f2:	add    QWORD PTR [rip+0x945e],0x1        # 40e658 <__bss_start@@Base+0xee8>
  4051fa:	call   404860 <free_token_boolean_op@@Base>
  4051ff:	mov    rdi,QWORD PTR [rbx]
  405202:	add    QWORD PTR [rip+0x9456],0x1        # 40e660 <__bss_start@@Base+0xef0>
  40520a:	call   402970 <next@@Base>
  40520f:	cmp    DWORD PTR [rax],0x1
  405212:	mov    rbx,rax
  405215:	jne    4052b0 <read_boolean_binary_expression@@Base+0x190>
  40521b:	mov    edi,0x18
  405220:	add    QWORD PTR [rip+0x9448],0x1        # 40e670 <__bss_start@@Base+0xf00>
  405228:	call   402180 <malloc@plt>
  40522d:	mov    esi,DWORD PTR [rbx+0x4]
  405230:	mov    rdi,rax
  405233:	mov    rbp,rax
  405236:	call   4048f0 <init_node_int@@Base>
  40523b:	mov    rdi,rbx
  40523e:	add    QWORD PTR [rip+0x943a],0x1        # 40e680 <__bss_start@@Base+0xf10>
  405246:	call   4047b0 <free_token_int_value@@Base>
  40524b:	mov    edi,0x28
  405250:	add    QWORD PTR [rip+0x9430],0x1        # 40e688 <__bss_start@@Base+0xf18>
  405258:	call   402180 <malloc@plt>
  40525d:	mov    rcx,rbp
  405260:	mov    rdi,rax
  405263:	mov    rdx,r12
  405266:	mov    esi,r13d
  405269:	mov    QWORD PTR [rsp+0x8],rax
  40526e:	call   4049f0 <init_node_boolean_operator@@Base>
  405273:	add    QWORD PTR [rip+0x9415],0x1        # 40e690 <__bss_start@@Base+0xf20>
  40527b:	mov    rax,QWORD PTR [rsp+0x8]
  405280:	jmp    405181 <read_boolean_binary_expression@@Base+0x61>
  405285:	nop    DWORD PTR [rax]
  405288:	mov    rdi,r12
  40528b:	add    QWORD PTR [rip+0x93ad],0x1        # 40e640 <__bss_start@@Base+0xed0>
  405293:	call   404aa0 <free_node@@Base>
  405298:	add    QWORD PTR [rip+0x93b0],0x1        # 40e650 <__bss_start@@Base+0xee0>
  4052a0:	xor    eax,eax
  4052a2:	jmp    405181 <read_boolean_binary_expression@@Base+0x61>
  4052a7:	nop    WORD PTR [rax+rax*1+0x0]
  4052b0:	mov    rdi,r12
  4052b3:	add    QWORD PTR [rip+0x93ad],0x1        # 40e668 <__bss_start@@Base+0xef8>
  4052bb:	call   404aa0 <free_node@@Base>
  4052c0:	add    QWORD PTR [rip+0x93b0],0x1        # 40e678 <__bss_start@@Base+0xf08>
  4052c8:	xor    eax,eax
  4052ca:	jmp    405181 <read_boolean_binary_expression@@Base+0x61>
  4052cf:	nop

00000000004052d0 <read_single_boolean_expression@@Base>:
  4052d0:	push   r13
  4052d2:	push   r12
  4052d4:	push   rbp
  4052d5:	push   rbx
  4052d6:	sub    rsp,0x8
  4052da:	test   rsi,rsi
  4052dd:	je     405340 <read_single_boolean_expression@@Base+0x70>
  4052df:	mov    eax,DWORD PTR [rdx]
  4052e1:	mov    rbp,rdx
  4052e4:	test   eax,eax
  4052e6:	je     40535a <read_single_boolean_expression@@Base+0x8a>
  4052e8:	mov    r12d,ecx
  4052eb:	add    QWORD PTR [rip+0x92dd],0x1        # 40e5d0 <__bss_start@@Base+0xe60>
  4052f3:	call   405120 <read_boolean_binary_expression@@Base>
  4052f8:	mov    edi,0x28
  4052fd:	mov    r13,rax
  405300:	add    QWORD PTR [rip+0x92d8],0x1        # 40e5e0 <__bss_start@@Base+0xe70>
  405308:	call   402180 <malloc@plt>
  40530d:	mov    rcx,r13
  405310:	xor    edx,edx
  405312:	mov    esi,r12d
  405315:	mov    rdi,rax
  405318:	mov    rbx,rax
  40531b:	call   4049f0 <init_node_boolean_operator@@Base>
  405320:	add    QWORD PTR [rip+0x92c0],0x1        # 40e5e8 <__bss_start@@Base+0xe78>
  405328:	mov    DWORD PTR [rbp+0x0],0x0
  40532f:	add    rsp,0x8
  405333:	mov    rax,rbx
  405336:	pop    rbx
  405337:	pop    rbp
  405338:	pop    r12
  40533a:	pop    r13
  40533c:	ret    
  40533d:	nop    DWORD PTR [rax]
  405340:	add    QWORD PTR [rip+0x9278],0x1        # 40e5c0 <__bss_start@@Base+0xe50>
  405348:	call   405120 <read_boolean_binary_expression@@Base>
  40534d:	add    QWORD PTR [rip+0x9273],0x1        # 40e5c8 <__bss_start@@Base+0xe58>
  405355:	mov    rbx,rax
  405358:	jmp    40532f <read_single_boolean_expression@@Base+0x5f>
  40535a:	add    QWORD PTR [rip+0x9276],0x1        # 40e5d8 <__bss_start@@Base+0xe68>
  405362:	mov    eax,DWORD PTR ds:0x4
  405369:	ud2    
  40536b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405370 <read_boolean_expression@@Base>:
  405370:	push   r13
  405372:	push   r12
  405374:	push   rbp
  405375:	push   rbx
  405376:	mov    rbx,rdi
  405379:	xor    ebp,ebp
  40537b:	sub    rsp,0x18
  40537f:	mov    rdi,QWORD PTR [rdi]
  405382:	add    QWORD PTR [rip+0x91b6],0x1        # 40e540 <__bss_start@@Base+0xdd0>
  40538a:	mov    rax,QWORD PTR fs:0x28
  405393:	mov    QWORD PTR [rsp+0x8],rax
  405398:	xor    eax,eax
  40539a:	mov    DWORD PTR [rsp+0x4],0x0
  4053a2:	call   402970 <next@@Base>
  4053a7:	mov    edx,DWORD PTR [rax]
  4053a9:	add    QWORD PTR [rip+0x9197],0x1        # 40e548 <__bss_start@@Base+0xdd8>
  4053b1:	cmp    edx,0x4
  4053b4:	je     405447 <read_boolean_expression@@Base+0xd7>
  4053ba:	lea    r12,[rsp+0x4]
  4053bf:	add    QWORD PTR [rip+0x91c9],0x1        # 40e590 <__bss_start@@Base+0xe20>
  4053c7:	cmp    edx,0x3
  4053ca:	je     405410 <read_boolean_expression@@Base+0xa0>
  4053cc:	cmp    edx,0xc
  4053cf:	je     4054c0 <read_boolean_expression@@Base+0x150>
  4053d5:	cmp    edx,0x1
  4053d8:	je     405480 <read_boolean_expression@@Base+0x110>
  4053de:	mov    rax,QWORD PTR [rip+0x6c13]        # 40bff8 <stderr@GLIBC_2.2.5>
  4053e5:	lea    rdi,[rip+0x34cc]        # 4088b8 <_IO_stdin_used@@Base+0x8b8>
  4053ec:	mov    edx,0x21
  4053f1:	mov    esi,0x1
  4053f6:	mov    rcx,QWORD PTR [rax]
  4053f9:	call   402220 <fwrite@plt>
  4053fe:	mov    edi,0x1
  405403:	add    QWORD PTR [rip+0x9175],0x1        # 40e580 <__bss_start@@Base+0xe10>
  40540b:	call   402210 <exit@plt>
  405410:	mov    rsi,rbp
  405413:	mov    ecx,r13d
  405416:	mov    rdx,r12
  405419:	mov    rdi,rbx
  40541c:	add    QWORD PTR [rip+0x9134],0x1        # 40e558 <__bss_start@@Base+0xde8>
  405424:	call   4052d0 <read_single_boolean_expression@@Base>
  405429:	add    QWORD PTR [rip+0x9147],0x1        # 40e578 <__bss_start@@Base+0xe08>
  405431:	mov    rbp,rax
  405434:	mov    rdi,QWORD PTR [rbx]
  405437:	call   402970 <next@@Base>
  40543c:	mov    edx,DWORD PTR [rax]
  40543e:	cmp    edx,0x4
  405441:	jne    4053bf <read_boolean_expression@@Base+0x4f>
  405447:	mov    rdi,rax
  40544a:	add    QWORD PTR [rip+0x9146],0x1        # 40e598 <__bss_start@@Base+0xe28>
  405452:	call   4047e0 <free_token_cpar@@Base>
  405457:	add    QWORD PTR [rip+0x9141],0x1        # 40e5a0 <__bss_start@@Base+0xe30>
  40545f:	mov    rax,rbp
  405462:	mov    rcx,QWORD PTR [rsp+0x8]
  405467:	xor    rcx,QWORD PTR fs:0x28
  405470:	jne    4054e8 <read_boolean_expression@@Base+0x178>
  405472:	add    rsp,0x18
  405476:	pop    rbx
  405477:	pop    rbp
  405478:	pop    r12
  40547a:	pop    r13
  40547c:	ret    
  40547d:	nop    DWORD PTR [rax]
  405480:	mov    rdi,QWORD PTR [rbx]
  405483:	mov    rsi,rax
  405486:	add    QWORD PTR [rip+0x90c2],0x1        # 40e550 <__bss_start@@Base+0xde0>
  40548e:	call   4028b0 <push_back@@Base>
  405493:	mov    rsi,rbp
  405496:	mov    ecx,r13d
  405499:	mov    rdx,r12
  40549c:	mov    rdi,rbx
  40549f:	add    QWORD PTR [rip+0x90c1],0x1        # 40e568 <__bss_start@@Base+0xdf8>
  4054a7:	call   4052d0 <read_single_boolean_expression@@Base>
  4054ac:	add    QWORD PTR [rip+0x90d4],0x1        # 40e588 <__bss_start@@Base+0xe18>
  4054b4:	mov    rbp,rax
  4054b7:	jmp    405434 <read_boolean_expression@@Base+0xc4>
  4054bc:	nop    DWORD PTR [rax+0x0]
  4054c0:	mov    rdi,rax
  4054c3:	add    QWORD PTR [rip+0x9095],0x1        # 40e560 <__bss_start@@Base+0xdf0>
  4054cb:	call   404d30 <get_boolean_op_value@@Base>
  4054d0:	mov    DWORD PTR [rsp+0x4],0x1
  4054d8:	mov    r13d,eax
  4054db:	add    QWORD PTR [rip+0x908d],0x1        # 40e570 <__bss_start@@Base+0xe00>
  4054e3:	jmp    405434 <read_boolean_expression@@Base+0xc4>
  4054e8:	call   402100 <__stack_chk_fail@plt>
  4054ed:	nop    DWORD PTR [rax]

00000000004054f0 <read_if_statement@@Base>:
  4054f0:	push   r13
  4054f2:	push   r12
  4054f4:	push   rbp
  4054f5:	push   rbx
  4054f6:	mov    rbx,rdi
  4054f9:	xor    ebp,ebp
  4054fb:	sub    rsp,0x8
  4054ff:	mov    rdi,QWORD PTR [rdi]
  405502:	add    QWORD PTR [rip+0x8fd6],0x1        # 40e4e0 <__bss_start@@Base+0xd70>
  40550a:	call   402970 <next@@Base>
  40550f:	add    QWORD PTR [rip+0x8fd1],0x1        # 40e4e8 <__bss_start@@Base+0xd78>
  405517:	cmp    DWORD PTR [rax],0x3
  40551a:	jne    4055ae <read_if_statement@@Base+0xbe>
  405520:	mov    rdi,rax
  405523:	add    QWORD PTR [rip+0x8fc5],0x1        # 40e4f0 <__bss_start@@Base+0xd80>
  40552b:	call   4047d0 <free_token_opar@@Base>
  405530:	mov    rdi,rbx
  405533:	add    QWORD PTR [rip+0x8fbd],0x1        # 40e4f8 <__bss_start@@Base+0xd88>
  40553b:	call   405370 <read_boolean_expression@@Base>
  405540:	mov    rdi,rbx
  405543:	add    QWORD PTR [rip+0x8fb5],0x1        # 40e500 <__bss_start@@Base+0xd90>
  40554b:	mov    r12,rax
  40554e:	call   4055f0 <read_body@@Base>
  405553:	mov    rdi,QWORD PTR [rbx]
  405556:	mov    r13,rax
  405559:	add    QWORD PTR [rip+0x8fa7],0x1        # 40e508 <__bss_start@@Base+0xd98>
  405561:	call   402970 <next@@Base>
  405566:	cmp    DWORD PTR [rax],0xb
  405569:	je     4055c0 <read_if_statement@@Base+0xd0>
  40556b:	mov    rdi,QWORD PTR [rbx]
  40556e:	mov    rsi,rax
  405571:	add    QWORD PTR [rip+0x8f9f],0x1        # 40e518 <__bss_start@@Base+0xda8>
  405579:	xor    ebx,ebx
  40557b:	call   4028b0 <push_back@@Base>
  405580:	add    QWORD PTR [rip+0x8fa8],0x1        # 40e530 <__bss_start@@Base+0xdc0>
  405588:	mov    edi,0x28
  40558d:	call   402180 <malloc@plt>
  405592:	mov    rcx,rbx
  405595:	mov    rdx,r13
  405598:	mov    rsi,r12
  40559b:	mov    rdi,rax
  40559e:	mov    rbp,rax
  4055a1:	call   4049a0 <init_node_if@@Base>
  4055a6:	add    QWORD PTR [rip+0x8f8a],0x1        # 40e538 <__bss_start@@Base+0xdc8>
  4055ae:	add    rsp,0x8
  4055b2:	mov    rax,rbp
  4055b5:	pop    rbx
  4055b6:	pop    rbp
  4055b7:	pop    r12
  4055b9:	pop    r13
  4055bb:	ret    
  4055bc:	nop    DWORD PTR [rax+0x0]
  4055c0:	mov    rdi,rax
  4055c3:	add    QWORD PTR [rip+0x8f45],0x1        # 40e510 <__bss_start@@Base+0xda0>
  4055cb:	call   404850 <free_token_else@@Base>
  4055d0:	mov    rdi,rbx
  4055d3:	add    QWORD PTR [rip+0x8f45],0x1        # 40e520 <__bss_start@@Base+0xdb0>
  4055db:	call   4055f0 <read_body@@Base>
  4055e0:	add    QWORD PTR [rip+0x8f40],0x1        # 40e528 <__bss_start@@Base+0xdb8>
  4055e8:	mov    rbx,rax
  4055eb:	jmp    405588 <read_if_statement@@Base+0x98>
  4055ed:	nop    DWORD PTR [rax]

00000000004055f0 <read_body@@Base>:
  4055f0:	push   r13
  4055f2:	push   r12
  4055f4:	push   rbp
  4055f5:	push   rbx
  4055f6:	mov    rbx,rdi
  4055f9:	xor    ebp,ebp
  4055fb:	sub    rsp,0x8
  4055ff:	mov    rdi,QWORD PTR [rdi]
  405602:	add    QWORD PTR [rip+0x8df6],0x1        # 40e400 <__bss_start@@Base+0xc90>
  40560a:	call   402970 <next@@Base>
  40560f:	add    QWORD PTR [rip+0x8df1],0x1        # 40e408 <__bss_start@@Base+0xc98>
  405617:	cmp    DWORD PTR [rax],0x5
  40561a:	jne    4056d2 <read_body@@Base+0xe2>
  405620:	mov    rdi,rax
  405623:	add    QWORD PTR [rip+0x8de5],0x1        # 40e410 <__bss_start@@Base+0xca0>
  40562b:	call   4047f0 <free_token_obra@@Base>
  405630:	mov    rdi,QWORD PTR [rbx]
  405633:	add    QWORD PTR [rip+0x8ddd],0x1        # 40e418 <__bss_start@@Base+0xca8>
  40563b:	call   402970 <next@@Base>
  405640:	mov    edx,DWORD PTR [rax]
  405642:	add    QWORD PTR [rip+0x8dd6],0x1        # 40e420 <__bss_start@@Base+0xcb0>
  40564a:	cmp    edx,0x6
  40564d:	je     4056ba <read_body@@Base+0xca>
  40564f:	xor    r13d,r13d
  405652:	add    QWORD PTR [rip+0x8e0e],0x1        # 40e468 <__bss_start@@Base+0xcf8>
  40565a:	cmp    edx,0x7
  40565d:	je     405708 <read_body@@Base+0x118>
  405663:	cmp    edx,0xa
  405666:	jne    4056e0 <read_body@@Base+0xf0>
  405668:	mov    rdi,rax
  40566b:	add    QWORD PTR [rip+0x8dbd],0x1        # 40e430 <__bss_start@@Base+0xcc0>
  405673:	call   404840 <free_token_if@@Base>
  405678:	mov    rdi,rbx
  40567b:	add    QWORD PTR [rip+0x8dbd],0x1        # 40e440 <__bss_start@@Base+0xcd0>
  405683:	call   4054f0 <read_if_statement@@Base>
  405688:	add    QWORD PTR [rip+0x8db8],0x1        # 40e448 <__bss_start@@Base+0xcd8>
  405690:	test   rbp,rbp
  405693:	mov    r12,rax
  405696:	je     40573c <read_body@@Base+0x14c>
  40569c:	add    QWORD PTR [rip+0x8dbc],0x1        # 40e460 <__bss_start@@Base+0xcf0>
  4056a4:	mov    QWORD PTR [r13+0x8],r12
  4056a8:	mov    rdi,QWORD PTR [rbx]
  4056ab:	mov    r13,r12
  4056ae:	call   402970 <next@@Base>
  4056b3:	mov    edx,DWORD PTR [rax]
  4056b5:	cmp    edx,0x6
  4056b8:	jne    405652 <read_body@@Base+0x62>
  4056ba:	mov    rdi,rax
  4056bd:	add    QWORD PTR [rip+0x8dab],0x1        # 40e470 <__bss_start@@Base+0xd00>
  4056c5:	call   404800 <free_token_cbra@@Base>
  4056ca:	add    QWORD PTR [rip+0x8da6],0x1        # 40e478 <__bss_start@@Base+0xd08>
  4056d2:	add    rsp,0x8
  4056d6:	mov    rax,rbp
  4056d9:	pop    rbx
  4056da:	pop    rbp
  4056db:	pop    r12
  4056dd:	pop    r13
  4056df:	ret    
  4056e0:	mov    rdi,QWORD PTR [rbx]
  4056e3:	mov    rsi,rax
  4056e6:	call   4028b0 <push_back@@Base>
  4056eb:	add    QWORD PTR [rip+0x8d5d],0x1        # 40e450 <__bss_start@@Base+0xce0>
  4056f3:	add    rsp,0x8
  4056f7:	mov    rax,rbp
  4056fa:	pop    rbx
  4056fb:	pop    rbp
  4056fc:	pop    r12
  4056fe:	pop    r13
  405700:	ret    
  405701:	nop    DWORD PTR [rax+0x0]
  405708:	mov    rdi,rax
  40570b:	add    QWORD PTR [rip+0x8d15],0x1        # 40e428 <__bss_start@@Base+0xcb8>
  405713:	call   404810 <free_token_return@@Base>
  405718:	mov    rdi,rbx
  40571b:	add    QWORD PTR [rip+0x8d15],0x1        # 40e438 <__bss_start@@Base+0xcc8>
  405723:	call   404f20 <read_return_expression@@Base>
  405728:	add    QWORD PTR [rip+0x8d28],0x1        # 40e458 <__bss_start@@Base+0xce8>
  405730:	test   rbp,rbp
  405733:	mov    r12,rax
  405736:	jne    40569c <read_body@@Base+0xac>
  40573c:	mov    rbp,r12
  40573f:	jmp    4056a8 <read_body@@Base+0xb8>
  405744:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40574f:	nop

0000000000405750 <read_function_ast_node@@Base>:
  405750:	push   rbp
  405751:	push   rbx
  405752:	mov    rbx,rdi
  405755:	sub    rsp,0x18
  405759:	mov    rdi,QWORD PTR [rdi]
  40575c:	add    QWORD PTR [rip+0x8c1c],0x1        # 40e380 <__bss_start@@Base+0xc10>
  405764:	call   402970 <next@@Base>
  405769:	mov    edx,DWORD PTR [rax]
  40576b:	add    QWORD PTR [rip+0x8c15],0x1        # 40e388 <__bss_start@@Base+0xc18>
  405773:	test   edx,edx
  405775:	jne    405870 <read_function_ast_node@@Base+0x120>
  40577b:	mov    rdi,rax
  40577e:	add    QWORD PTR [rip+0x8c0a],0x1        # 40e390 <__bss_start@@Base+0xc20>
  405786:	call   4047a0 <free_token_int_type@@Base>
  40578b:	mov    rdi,QWORD PTR [rbx]
  40578e:	add    QWORD PTR [rip+0x8c02],0x1        # 40e398 <__bss_start@@Base+0xc28>
  405796:	call   402970 <next@@Base>
  40579b:	add    QWORD PTR [rip+0x8bfd],0x1        # 40e3a0 <__bss_start@@Base+0xc30>
  4057a3:	mov    rbp,rax
  4057a6:	cmp    DWORD PTR [rax],0x2
  4057a9:	jne    405870 <read_function_ast_node@@Base+0x120>
  4057af:	mov    rdi,QWORD PTR [rbx]
  4057b2:	add    QWORD PTR [rip+0x8bee],0x1        # 40e3a8 <__bss_start@@Base+0xc38>
  4057ba:	call   402970 <next@@Base>
  4057bf:	add    QWORD PTR [rip+0x8be9],0x1        # 40e3b0 <__bss_start@@Base+0xc40>
  4057c7:	cmp    DWORD PTR [rax],0x3
  4057ca:	jne    405870 <read_function_ast_node@@Base+0x120>
  4057d0:	mov    rdi,rax
  4057d3:	add    QWORD PTR [rip+0x8bdd],0x1        # 40e3b8 <__bss_start@@Base+0xc48>
  4057db:	call   4047d0 <free_token_opar@@Base>
  4057e0:	mov    rdi,QWORD PTR [rbx]
  4057e3:	add    QWORD PTR [rip+0x8bd5],0x1        # 40e3c0 <__bss_start@@Base+0xc50>
  4057eb:	call   402970 <next@@Base>
  4057f0:	add    QWORD PTR [rip+0x8bd0],0x1        # 40e3c8 <__bss_start@@Base+0xc58>
  4057f8:	cmp    DWORD PTR [rax],0x4
  4057fb:	jne    405870 <read_function_ast_node@@Base+0x120>
  4057fd:	mov    rdi,rax
  405800:	add    QWORD PTR [rip+0x8bc8],0x1        # 40e3d0 <__bss_start@@Base+0xc60>
  405808:	call   4047e0 <free_token_cpar@@Base>
  40580d:	mov    rdi,rbx
  405810:	add    QWORD PTR [rip+0x8bc0],0x1        # 40e3d8 <__bss_start@@Base+0xc68>
  405818:	call   4055f0 <read_body@@Base>
  40581d:	mov    edi,0x20
  405822:	mov    rbx,rax
  405825:	add    QWORD PTR [rip+0x8bb3],0x1        # 40e3e0 <__bss_start@@Base+0xc70>
  40582d:	call   402180 <malloc@plt>
  405832:	mov    rsi,QWORD PTR [rbp+0x8]
  405836:	mov    rdi,rax
  405839:	mov    rdx,rbx
  40583c:	mov    QWORD PTR [rsp+0x8],rax
  405841:	call   404920 <init_node_function@@Base>
  405846:	mov    rdi,rbp
  405849:	add    QWORD PTR [rip+0x8b97],0x1        # 40e3e8 <__bss_start@@Base+0xc78>
  405851:	call   4047c0 <free_token_function@@Base>
  405856:	mov    rax,QWORD PTR [rsp+0x8]
  40585b:	add    QWORD PTR [rip+0x8b8d],0x1        # 40e3f0 <__bss_start@@Base+0xc80>
  405863:	add    rsp,0x18
  405867:	pop    rbx
  405868:	pop    rbp
  405869:	ret    
  40586a:	nop    WORD PTR [rax+rax*1+0x0]
  405870:	add    rsp,0x18
  405874:	xor    eax,eax
  405876:	pop    rbx
  405877:	pop    rbp
  405878:	ret    
  405879:	nop    DWORD PTR [rax+0x0]

0000000000405880 <build_ast@@Base>:
  405880:	sub    rsp,0x8
  405884:	add    QWORD PTR [rip+0x8ae4],0x1        # 40e370 <__bss_start@@Base+0xc00>
  40588c:	call   405750 <read_function_ast_node@@Base>
  405891:	add    QWORD PTR [rip+0x8adf],0x1        # 40e378 <__bss_start@@Base+0xc08>
  405899:	add    rsp,0x8
  40589d:	ret    
  40589e:	xchg   ax,ax
  4058a0:	test   esi,esi
  4058a2:	je     4058cf <build_ast@@Base+0x4f>
  4058a4:	lea    eax,[rsi-0x1]
  4058a7:	push   rbp
  4058a8:	push   rbx
  4058a9:	mov    rbx,rdi
  4058ac:	lea    rbp,[rdi+rax*8+0x8]
  4058b1:	sub    rsp,0x8
  4058b5:	nop    DWORD PTR [rax]
  4058b8:	call   405f90 <build_ast@@Base+0x710>
  4058bd:	add    QWORD PTR [rbx],rax
  4058c0:	add    rbx,0x8
  4058c4:	cmp    rbx,rbp
  4058c7:	jne    4058b8 <build_ast@@Base+0x38>
  4058c9:	add    rsp,0x8
  4058cd:	pop    rbx
  4058ce:	pop    rbp
  4058cf:	repz ret 
  4058d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058db:	nop    DWORD PTR [rax+rax*1+0x0]
  4058e0:	push   rbp
  4058e1:	push   rbx
  4058e2:	lea    esi,[rdi*4+0x0]
  4058e9:	mov    ebp,edi
  4058eb:	mov    edx,0x1
  4058f0:	sub    rsp,0x8
  4058f4:	mov    rbx,0x40ee20
  4058fb:	mov    rcx,QWORD PTR [rbx]
  4058fe:	lea    rdi,[rbx+0x20]
  405902:	call   402220 <fwrite@plt>
  405907:	cmp    rax,0x1
  40590b:	je     405914 <build_ast@@Base+0x94>
  40590d:	mov    DWORD PTR [rbx+0x18],0x1
  405914:	add    DWORD PTR [rbx+0x8],ebp
  405917:	sub    DWORD PTR [rbx+0xc],ebp
  40591a:	add    rsp,0x8
  40591e:	pop    rbx
  40591f:	pop    rbp
  405920:	ret    
  405921:	nop    DWORD PTR [rax+rax*1+0x0]
  405926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405930:	push   rbp
  405931:	push   rbx
  405932:	mov    ebp,edi
  405934:	sub    rsp,0x8
  405938:	mov    rbx,0x40ee20
  40593f:	mov    eax,DWORD PTR [rbx+0xc]
  405942:	cmp    eax,0x3ff
  405947:	ja     405960 <build_ast@@Base+0xe0>
  405949:	add    ebp,eax
  40594b:	lea    rax,[rbx+rax*4+0x20]
  405950:	mov    DWORD PTR [rbx+0xc],ebp
  405953:	add    rsp,0x8
  405957:	pop    rbx
  405958:	pop    rbp
  405959:	ret    
  40595a:	nop    WORD PTR [rax+rax*1+0x0]
  405960:	mov    edi,0x400
  405965:	call   4058e0 <build_ast@@Base+0x60>
  40596a:	mov    eax,DWORD PTR [rbx+0xc]
  40596d:	test   eax,eax
  40596f:	je     405949 <build_ast@@Base+0xc9>
  405971:	mov    edx,DWORD PTR [rbx+0x1020]
  405977:	mov    DWORD PTR [rbx+0x20],edx
  40597a:	jmp    405949 <build_ast@@Base+0xc9>
  40597c:	nop    DWORD PTR [rax+0x0]
  405980:	push   rbp
  405981:	push   rbx
  405982:	mov    ebp,edi
  405984:	sub    rsp,0x8
  405988:	mov    rbx,0x40ee20
  40598f:	mov    edi,DWORD PTR [rbx+0xc]
  405992:	mov    eax,DWORD PTR [rbx+0x10]
  405995:	sub    eax,edi
  405997:	cmp    eax,ebp
  405999:	jae    4059db <build_ast@@Base+0x15b>
  40599b:	add    DWORD PTR [rbx+0x8],edi
  40599e:	test   eax,eax
  4059a0:	je     4059a9 <build_ast@@Base+0x129>
  4059a2:	mov    edx,DWORD PTR [rbx+rdi*4+0x20]
  4059a6:	mov    DWORD PTR [rbx+0x20],edx
  4059a9:	mov    rcx,QWORD PTR [rbx]
  4059ac:	lea    rdi,[rbx+rax*4+0x20]
  4059b1:	mov    edx,0x1000
  4059b6:	mov    esi,0x1
  4059bb:	mov    DWORD PTR [rbx+0xc],0x0
  4059c2:	mov    DWORD PTR [rbx+0x10],eax
  4059c5:	call   4020b0 <fread@plt>
  4059ca:	shr    rax,0x2
  4059ce:	add    eax,DWORD PTR [rbx+0x10]
  4059d1:	cmp    ebp,eax
  4059d3:	mov    DWORD PTR [rbx+0x10],eax
  4059d6:	ja     4059f0 <build_ast@@Base+0x170>
  4059d8:	mov    edi,DWORD PTR [rbx+0xc]
  4059db:	mov    eax,edi
  4059dd:	add    edi,ebp
  4059df:	lea    rax,[rbx+rax*4+0x20]
  4059e4:	mov    DWORD PTR [rbx+0xc],edi
  4059e7:	add    rsp,0x8
  4059eb:	pop    rbx
  4059ec:	pop    rbp
  4059ed:	ret    
  4059ee:	xchg   ax,ax
  4059f0:	sub    ebp,eax
  4059f2:	mov    DWORD PTR [rbx+0x10],0x0
  4059f9:	add    DWORD PTR [rbx+0x14],ebp
  4059fc:	xor    eax,eax
  4059fe:	jmp    4059e7 <build_ast@@Base+0x167>
  405a00:	sub    rsp,0xd8
  405a07:	test   al,al
  405a09:	mov    QWORD PTR [rsp+0x28],rsi
  405a0e:	mov    QWORD PTR [rsp+0x30],rdx
  405a13:	mov    QWORD PTR [rsp+0x38],rcx
  405a18:	mov    QWORD PTR [rsp+0x40],r8
  405a1d:	mov    QWORD PTR [rsp+0x48],r9
  405a22:	je     405a5b <build_ast@@Base+0x1db>
  405a24:	movaps XMMWORD PTR [rsp+0x50],xmm0
  405a29:	movaps XMMWORD PTR [rsp+0x60],xmm1
  405a2e:	movaps XMMWORD PTR [rsp+0x70],xmm2
  405a33:	movaps XMMWORD PTR [rsp+0x80],xmm3
  405a3b:	movaps XMMWORD PTR [rsp+0x90],xmm4
  405a43:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  405a4b:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  405a53:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  405a5b:	lea    rax,[rsp+0xe0]
  405a63:	mov    rdx,rdi
  405a66:	lea    rcx,[rsp+0x8]
  405a6b:	mov    esi,0x1
  405a70:	mov    QWORD PTR [rsp+0x10],rax
  405a75:	lea    rax,[rsp+0x20]
  405a7a:	mov    DWORD PTR [rsp+0x8],0x8
  405a82:	mov    DWORD PTR [rsp+0xc],0x30
  405a8a:	mov    QWORD PTR [rsp+0x18],rax
  405a8f:	mov    rax,QWORD PTR [rip+0x6562]        # 40bff8 <stderr@GLIBC_2.2.5>
  405a96:	mov    rdi,QWORD PTR [rax]
  405a99:	call   402050 <__vfprintf_chk@plt>
  405a9e:	add    rsp,0xd8
  405aa5:	ret    
  405aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ab0:	test   rsi,rsi
  405ab3:	push   r14
  405ab5:	push   r13
  405ab7:	push   r12
  405ab9:	push   rbp
  405aba:	push   rbx
  405abb:	je     405b12 <build_ast@@Base+0x292>
  405abd:	test   edx,edx
  405abf:	mov    rbp,rsi
  405ac2:	mov    r13,QWORD PTR [rsi]
  405ac5:	je     405afe <build_ast@@Base+0x27e>
  405ac7:	lea    eax,[rdx-0x1]
  405aca:	lea    r14,[rdi+0x20]
  405ace:	lea    r12,[rdi+rax*8+0x28]
  405ad3:	xor    eax,eax
  405ad5:	nop    DWORD PTR [rax]
  405ad8:	cmp    QWORD PTR [r14],0x0
  405adc:	je     405af5 <build_ast@@Base+0x275>
  405ade:	lea    ebx,[rax+0x1]
  405ae1:	add    rax,0x2
  405ae5:	shl    rax,0x4
  405ae9:	mov    rdi,QWORD PTR [rbp+rax*1+0x10]
  405aee:	call   402040 <free@plt>
  405af3:	mov    eax,ebx
  405af5:	add    r14,0x8
  405af9:	cmp    r14,r12
  405afc:	jne    405ad8 <build_ast@@Base+0x258>
  405afe:	mov    rdi,rbp
  405b01:	call   402040 <free@plt>
  405b06:	pop    rbx
  405b07:	mov    rax,r13
  405b0a:	pop    rbp
  405b0b:	pop    r12
  405b0d:	pop    r13
  405b0f:	pop    r14
  405b11:	ret    
  405b12:	xor    r13d,r13d
  405b15:	jmp    405b06 <build_ast@@Base+0x286>
  405b17:	nop    WORD PTR [rax+rax*1+0x0]
  405b20:	cmp    esi,0x3630342a
  405b26:	je     405b90 <build_ast@@Base+0x310>
  405b28:	mov    rax,rdx
  405b2b:	mov    edx,esi
  405b2d:	sub    rsp,0x18
  405b31:	shr    edx,0x18
  405b34:	mov    BYTE PTR [rsp+0xb],sil
  405b39:	mov    BYTE PTR [rsp+0xc],0x36
  405b3e:	mov    BYTE PTR [rsp+0x8],dl
  405b42:	mov    edx,esi
  405b44:	mov    BYTE PTR [rsp+0xd],0x30
  405b49:	shr    edx,0x10
  405b4c:	mov    BYTE PTR [rsp+0xe],0x34
  405b51:	mov    BYTE PTR [rsp+0xf],0x2a
  405b56:	mov    BYTE PTR [rsp+0x9],dl
  405b5a:	mov    edx,esi
  405b5c:	shr    edx,0x8
  405b5f:	test   rax,rax
  405b62:	mov    BYTE PTR [rsp+0xa],dl
  405b66:	je     405ba0 <build_ast@@Base+0x320>
  405b68:	lea    rcx,[rsp+0x8]
  405b6d:	lea    rdx,[rsp+0xc]
  405b72:	lea    rdi,[rip+0x2ddf]        # 408958 <_IO_stdin_used@@Base+0x958>
  405b79:	mov    rsi,rax
  405b7c:	xor    eax,eax
  405b7e:	call   405a00 <build_ast@@Base+0x180>
  405b83:	xor    eax,eax
  405b85:	add    rsp,0x18
  405b89:	ret    
  405b8a:	nop    WORD PTR [rax+rax*1+0x0]
  405b90:	mov    eax,0x1
  405b95:	ret    
  405b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ba0:	mov    rax,QWORD PTR [rdi]
  405ba3:	jmp    405b68 <build_ast@@Base+0x2e8>
  405ba5:	nop
  405ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bb0:	mov    rax,0x40ee20
  405bb7:	xor    edx,edx
  405bb9:	xor    esi,esi
  405bbb:	mov    rdi,QWORD PTR [rax]
  405bbe:	mov    DWORD PTR [rax+0x1c],0xffffffff
  405bc5:	mov    DWORD PTR [rax+0x8],0x0
  405bcc:	mov    DWORD PTR [rax+0xc],0x0
  405bd3:	jmp    4021b0 <fseek@plt>
  405bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  405be0:	push   r12
  405be2:	push   rbp
  405be3:	xor    eax,eax
  405be5:	push   rbx
  405be6:	mov    rbp,rdi
  405be9:	sub    rsp,0xb0
  405bf0:	mov    WORD PTR [rsp+0x2],ax
  405bf5:	mov    QWORD PTR [rsp+0x8],0x0
  405bfe:	mov    QWORD PTR [rsp+0x10],0x0
  405c07:	call   4020d0 <getpid@plt>
  405c0c:	mov    rbx,0x40ee20
  405c13:	mov    edx,0x1
  405c18:	mov    DWORD PTR [rsp+0x18],eax
  405c1c:	mov    WORD PTR [rsp],dx
  405c20:	xor    eax,eax
  405c22:	mov    edx,0x1b6
  405c27:	mov    esi,0x42
  405c2c:	mov    rdi,rbp
  405c2f:	mov    DWORD PTR [rbx+0x8],0x0
  405c36:	mov    DWORD PTR [rbx+0x10],0x0
  405c3d:	mov    DWORD PTR [rbx+0xc],0x0
  405c44:	mov    DWORD PTR [rbx+0x14],0xffffffff
  405c4b:	mov    DWORD PTR [rbx+0x18],0x0
  405c52:	call   4021e0 <open@plt>
  405c57:	test   eax,eax
  405c59:	js     405cd0 <build_ast@@Base+0x450>
  405c5b:	mov    ebp,eax
  405c5d:	mov    r12,rsp
  405c60:	xor    eax,eax
  405c62:	mov    rdx,r12
  405c65:	mov    esi,0x7
  405c6a:	mov    edi,ebp
  405c6c:	call   4020c0 <fcntl@plt>
  405c71:	test   eax,eax
  405c73:	je     405c7f <build_ast@@Base+0x3ff>
  405c75:	call   402070 <__errno_location@plt>
  405c7a:	cmp    DWORD PTR [rax],0x4
  405c7d:	je     405c60 <build_ast@@Base+0x3e0>
  405c7f:	lea    rsi,[rip+0x2e74]        # 408afa <_IO_stdin_used@@Base+0xafa>
  405c86:	mov    edi,ebp
  405c88:	call   4021c0 <fdopen@plt>
  405c8d:	test   rax,rax
  405c90:	mov    QWORD PTR [rbx],rax
  405c93:	je     405ce0 <build_ast@@Base+0x460>
  405c95:	lea    rdx,[rsp+0x20]
  405c9a:	mov    esi,ebp
  405c9c:	mov    edi,0x1
  405ca1:	call   4021a0 <__fxstat@plt>
  405ca6:	test   eax,eax
  405ca8:	js     405cf0 <build_ast@@Base+0x470>
  405caa:	mov    rdi,QWORD PTR [rbx]
  405cad:	xor    esi,esi
  405caf:	mov    DWORD PTR [rbx+0x1c],0x1
  405cb6:	call   402110 <setbuf@plt>
  405cbb:	mov    eax,0x1
  405cc0:	add    rsp,0xb0
  405cc7:	pop    rbx
  405cc8:	pop    rbp
  405cc9:	pop    r12
  405ccb:	ret    
  405ccc:	nop    DWORD PTR [rax+0x0]
  405cd0:	add    rsp,0xb0
  405cd7:	xor    eax,eax
  405cd9:	pop    rbx
  405cda:	pop    rbp
  405cdb:	pop    r12
  405cdd:	ret    
  405cde:	xchg   ax,ax
  405ce0:	mov    edi,ebp
  405ce2:	call   402140 <close@plt>
  405ce7:	xor    eax,eax
  405ce9:	jmp    405cc0 <build_ast@@Base+0x440>
  405ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  405cf0:	mov    rdi,QWORD PTR [rbx]
  405cf3:	call   4020e0 <fclose@plt>
  405cf8:	mov    QWORD PTR [rbx],0x0
  405cff:	xor    eax,eax
  405d01:	jmp    405cc0 <build_ast@@Base+0x440>
  405d03:	nop    DWORD PTR [rax]
  405d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d10:	push   rbx
  405d11:	mov    rbx,0x40ee20
  405d18:	mov    rdi,QWORD PTR [rbx]
  405d1b:	test   rdi,rdi
  405d1e:	je     405d3a <build_ast@@Base+0x4ba>
  405d20:	mov    eax,DWORD PTR [rbx+0xc]
  405d23:	test   eax,eax
  405d25:	jne    405d50 <build_ast@@Base+0x4d0>
  405d27:	call   4020e0 <fclose@plt>
  405d2c:	mov    QWORD PTR [rbx],0x0
  405d33:	mov    DWORD PTR [rbx+0x10],0x0
  405d3a:	mov    eax,DWORD PTR [rbx+0x18]
  405d3d:	mov    DWORD PTR [rbx+0x1c],0x0
  405d44:	pop    rbx
  405d45:	ret    
  405d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d50:	mov    edx,DWORD PTR [rbx+0x1c]
  405d53:	test   edx,edx
  405d55:	jns    405d27 <build_ast@@Base+0x4a7>
  405d57:	mov    edi,eax
  405d59:	call   4058e0 <build_ast@@Base+0x60>
  405d5e:	mov    rdi,QWORD PTR [rbx]
  405d61:	jmp    405d27 <build_ast@@Base+0x4a7>
  405d63:	nop    DWORD PTR [rax]
  405d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d70:	push   rbx
  405d71:	mov    ebx,edi
  405d73:	mov    edi,0x1
  405d78:	call   405930 <build_ast@@Base+0xb0>
  405d7d:	mov    DWORD PTR [rax],ebx
  405d7f:	pop    rbx
  405d80:	ret    
  405d81:	nop    DWORD PTR [rax+rax*1+0x0]
  405d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d90:	push   rbx
  405d91:	mov    rbx,rdi
  405d94:	mov    edi,0x2
  405d99:	call   405930 <build_ast@@Base+0xb0>
  405d9e:	mov    DWORD PTR [rax],ebx
  405da0:	sar    rbx,0x20
  405da4:	mov    DWORD PTR [rax+0x4],ebx
  405da7:	pop    rbx
  405da8:	ret    
  405da9:	nop    DWORD PTR [rax+0x0]
  405db0:	push   rbp
  405db1:	push   rbx
  405db2:	mov    ebp,edi
  405db4:	mov    ebx,esi
  405db6:	mov    edi,0x2
  405dbb:	sub    rsp,0x8
  405dbf:	call   405930 <build_ast@@Base+0xb0>
  405dc4:	mov    DWORD PTR [rax],ebp
  405dc6:	mov    DWORD PTR [rax+0x4],ebx
  405dc9:	add    rsp,0x8
  405dcd:	pop    rbx
  405dce:	pop    rbp
  405dcf:	ret    
  405dd0:	push   r15
  405dd2:	push   r14
  405dd4:	mov    r14d,edi
  405dd7:	push   r13
  405dd9:	push   r12
  405ddb:	push   rbp
  405ddc:	push   rbx
  405ddd:	mov    rbp,rsi
  405de0:	sub    rsp,0x28
  405de4:	lea    rax,[rsp+0x20]
  405de9:	mov    r15,rsp
  405dec:	mov    r13,rsp
  405def:	nop
  405df0:	mov    DWORD PTR [r13+0x0],0x0
  405df8:	add    r13,0x4
  405dfc:	cmp    rax,r13
  405dff:	jne    405df0 <build_ast@@Base+0x570>
  405e01:	lea    rbx,[rbp+0x28]
  405e05:	xor    r12d,r12d
  405e08:	xor    ecx,ecx
  405e0a:	mov    edi,0x1
  405e0f:	mov    rax,rbx
  405e12:	nop    WORD PTR [rax+rax*1+0x0]
  405e18:	mov    edx,DWORD PTR [rax]
  405e1a:	test   edx,edx
  405e1c:	je     405e2e <build_ast@@Base+0x5ae>
  405e1e:	mov    edx,ecx
  405e20:	mov    esi,edi
  405e22:	add    r12d,0x1
  405e26:	shr    edx,0x5
  405e29:	shl    esi,cl
  405e2b:	or     DWORD PTR [rsp+rdx*4],esi
  405e2e:	add    ecx,0x1
  405e31:	add    rax,0x18
  405e35:	cmp    ecx,0xfc
  405e3b:	jne    405e18 <build_ast@@Base+0x598>
  405e3d:	mov    edi,0x2
  405e42:	call   405930 <build_ast@@Base+0xb0>
  405e47:	lea    edx,[r12+r12*4+0x11]
  405e4c:	mov    DWORD PTR [rax],r14d
  405e4f:	mov    edi,0x1
  405e54:	mov    DWORD PTR [rax+0x4],edx
  405e57:	mov    r12d,DWORD PTR [rbp+0x0]
  405e5b:	call   405930 <build_ast@@Base+0xb0>
  405e60:	mov    edi,0x1
  405e65:	mov    DWORD PTR [rax],r12d
  405e68:	mov    r12d,DWORD PTR [rbp+0x8]
  405e6c:	call   405930 <build_ast@@Base+0xb0>
  405e71:	mov    edi,0x1
  405e76:	mov    DWORD PTR [rax],r12d
  405e79:	mov    r12d,DWORD PTR [rbp+0xc]
  405e7d:	call   405930 <build_ast@@Base+0xb0>
  405e82:	mov    edi,0x2
  405e87:	mov    DWORD PTR [rax],r12d
  405e8a:	mov    r12,QWORD PTR [rbp+0x10]
  405e8e:	call   405930 <build_ast@@Base+0xb0>
  405e93:	mov    edi,0x2
  405e98:	mov    DWORD PTR [rax],r12d
  405e9b:	sar    r12,0x20
  405e9f:	mov    DWORD PTR [rax+0x4],r12d
  405ea3:	mov    r12,QWORD PTR [rbp+0x18]
  405ea7:	call   405930 <build_ast@@Base+0xb0>
  405eac:	mov    edi,0x2
  405eb1:	mov    DWORD PTR [rax],r12d
  405eb4:	sar    r12,0x20
  405eb8:	mov    DWORD PTR [rax+0x4],r12d
  405ebc:	mov    r12,QWORD PTR [rbp+0x20]
  405ec0:	call   405930 <build_ast@@Base+0xb0>
  405ec5:	mov    DWORD PTR [rax],r12d
  405ec8:	sar    r12,0x20
  405ecc:	mov    DWORD PTR [rax+0x4],r12d
  405ed0:	mov    r12d,DWORD PTR [r15]
  405ed3:	mov    edi,0x1
  405ed8:	add    r15,0x4
  405edc:	call   405930 <build_ast@@Base+0xb0>
  405ee1:	cmp    r15,r13
  405ee4:	mov    DWORD PTR [rax],r12d
  405ee7:	jne    405ed0 <build_ast@@Base+0x650>
  405ee9:	lea    r13,[rbp+0x17c8]
  405ef0:	jmp    405f01 <build_ast@@Base+0x681>
  405ef2:	nop    WORD PTR [rax+rax*1+0x0]
  405ef8:	add    rbx,0x18
  405efc:	cmp    rbx,r13
  405eff:	je     405f4e <build_ast@@Base+0x6ce>
  405f01:	mov    ebp,DWORD PTR [rbx]
  405f03:	test   ebp,ebp
  405f05:	je     405ef8 <build_ast@@Base+0x678>
  405f07:	mov    edi,0x1
  405f0c:	add    rbx,0x18
  405f10:	call   405930 <build_ast@@Base+0xb0>
  405f15:	mov    r12,QWORD PTR [rbx-0x10]
  405f19:	mov    edi,0x2
  405f1e:	mov    DWORD PTR [rax],ebp
  405f20:	call   405930 <build_ast@@Base+0xb0>
  405f25:	mov    edi,0x2
  405f2a:	mov    DWORD PTR [rax],r12d
  405f2d:	sar    r12,0x20
  405f31:	mov    DWORD PTR [rax+0x4],r12d
  405f35:	mov    r12,QWORD PTR [rbx-0x8]
  405f39:	call   405930 <build_ast@@Base+0xb0>
  405f3e:	mov    DWORD PTR [rax],r12d
  405f41:	sar    r12,0x20
  405f45:	cmp    rbx,r13
  405f48:	mov    DWORD PTR [rax+0x4],r12d
  405f4c:	jne    405f01 <build_ast@@Base+0x681>
  405f4e:	add    rsp,0x28
  405f52:	pop    rbx
  405f53:	pop    rbp
  405f54:	pop    r12
  405f56:	pop    r13
  405f58:	pop    r14
  405f5a:	pop    r15
  405f5c:	ret    
  405f5d:	nop    DWORD PTR [rax]
  405f60:	sub    rsp,0x8
  405f64:	mov    edi,0x1
  405f69:	call   405980 <build_ast@@Base+0x100>
  405f6e:	test   rax,rax
  405f71:	je     405f80 <build_ast@@Base+0x700>
  405f73:	mov    eax,DWORD PTR [rax]
  405f75:	add    rsp,0x8
  405f79:	ret    
  405f7a:	nop    WORD PTR [rax+rax*1+0x0]
  405f80:	xor    eax,eax
  405f82:	add    rsp,0x8
  405f86:	ret    
  405f87:	nop    WORD PTR [rax+rax*1+0x0]
  405f90:	sub    rsp,0x8
  405f94:	mov    edi,0x2
  405f99:	call   405980 <build_ast@@Base+0x100>
  405f9e:	test   rax,rax
  405fa1:	je     405fb0 <build_ast@@Base+0x730>
  405fa3:	mov    rax,QWORD PTR [rax]
  405fa6:	add    rsp,0x8
  405faa:	ret    
  405fab:	nop    DWORD PTR [rax+rax*1+0x0]
  405fb0:	xor    eax,eax
  405fb2:	add    rsp,0x8
  405fb6:	ret    
  405fb7:	nop    WORD PTR [rax+rax*1+0x0]
  405fc0:	push   r15
  405fc2:	push   r14
  405fc4:	push   r13
  405fc6:	push   r12
  405fc8:	mov    r12,rdi
  405fcb:	push   rbp
  405fcc:	push   rbx
  405fcd:	mov    edi,0x1
  405fd2:	sub    rsp,0x28
  405fd6:	call   405980 <build_ast@@Base+0x100>
  405fdb:	test   rax,rax
  405fde:	je     40621f <build_ast@@Base+0x99f>
  405fe4:	mov    eax,DWORD PTR [rax]
  405fe6:	mov    DWORD PTR [r12],eax
  405fea:	mov    edi,0x1
  405fef:	call   405980 <build_ast@@Base+0x100>
  405ff4:	test   rax,rax
  405ff7:	je     406226 <build_ast@@Base+0x9a6>
  405ffd:	mov    eax,DWORD PTR [rax]
  405fff:	mov    DWORD PTR [r12+0x8],eax
  406004:	mov    edi,0x1
  406009:	call   405980 <build_ast@@Base+0x100>
  40600e:	test   rax,rax
  406011:	je     40622d <build_ast@@Base+0x9ad>
  406017:	mov    eax,DWORD PTR [rax]
  406019:	mov    DWORD PTR [r12+0xc],eax
  40601e:	mov    edi,0x2
  406023:	call   405980 <build_ast@@Base+0x100>
  406028:	test   rax,rax
  40602b:	je     406234 <build_ast@@Base+0x9b4>
  406031:	mov    rax,QWORD PTR [rax]
  406034:	mov    QWORD PTR [r12+0x10],rax
  406039:	mov    edi,0x2
  40603e:	call   405980 <build_ast@@Base+0x100>
  406043:	test   rax,rax
  406046:	je     40623b <build_ast@@Base+0x9bb>
  40604c:	mov    rax,QWORD PTR [rax]
  40604f:	mov    QWORD PTR [r12+0x18],rax
  406054:	mov    edi,0x2
  406059:	call   405980 <build_ast@@Base+0x100>
  40605e:	test   rax,rax
  406061:	je     406242 <build_ast@@Base+0x9c2>
  406067:	mov    rax,QWORD PTR [rax]
  40606a:	lea    rdi,[r12+0x30]
  40606f:	mov    QWORD PTR [r12+0x20],rax
  406074:	mov    eax,r12d
  406077:	mov    QWORD PTR [r12+0x28],0x0
  406080:	mov    QWORD PTR [r12+0x17c0],0x0
  40608c:	mov    rbx,rsp
  40608f:	and    rdi,0xfffffffffffffff8
  406093:	lea    r13,[rsp+0x20]
  406098:	xor    r15d,r15d
  40609b:	sub    eax,edi
  40609d:	lea    ecx,[rax+0x17c8]
  4060a3:	xor    eax,eax
  4060a5:	shr    ecx,0x3
  4060a8:	rep stos QWORD PTR es:[rdi],rax
  4060ab:	jmp    4060c9 <build_ast@@Base+0x849>
  4060ad:	nop    DWORD PTR [rax]
  4060b0:	mov    edi,DWORD PTR [rax]
  4060b2:	add    rbx,0x4
  4060b6:	mov    rbp,rdi
  4060b9:	call   407980 <__gcov_sort_n_vals@@Base+0x16e0>
  4060be:	mov    DWORD PTR [rbx-0x4],ebp
  4060c1:	add    r15d,eax
  4060c4:	cmp    rbx,r13
  4060c7:	je     4060f0 <build_ast@@Base+0x870>
  4060c9:	mov    edi,0x1
  4060ce:	call   405980 <build_ast@@Base+0x100>
  4060d3:	test   rax,rax
  4060d6:	jne    4060b0 <build_ast@@Base+0x830>
  4060d8:	xor    ebp,ebp
  4060da:	add    rbx,0x4
  4060de:	add    r15d,eax
  4060e1:	mov    DWORD PTR [rbx-0x4],ebp
  4060e4:	cmp    rbx,r13
  4060e7:	jne    4060c9 <build_ast@@Base+0x849>
  4060e9:	nop    DWORD PTR [rax+0x0]
  4060f0:	xor    ebx,ebx
  4060f2:	xor    ebp,ebp
  4060f4:	xor    r14d,r14d
  4060f7:	test   r15d,r15d
  4060fa:	lea    r13d,[r15-0x1]
  4060fe:	je     4061c7 <build_ast@@Base+0x947>
  406104:	nop    DWORD PTR [rax+0x0]
  406108:	test   ebx,ebx
  40610a:	je     406112 <build_ast@@Base+0x892>
  40610c:	jmp    406146 <build_ast@@Base+0x8c6>
  40610e:	xchg   ax,ax
  406110:	mov    ebp,ecx
  406112:	cmp    ebp,0x7
  406115:	jbe    406125 <build_ast@@Base+0x8a5>
  406117:	lea    rdi,[rip+0x28b2]        # 4089d0 <_IO_stdin_used@@Base+0x9d0>
  40611e:	xor    eax,eax
  406120:	call   405a00 <build_ast@@Base+0x180>
  406125:	mov    eax,ebp
  406127:	lea    ecx,[rbp+0x1]
  40612a:	mov    ebx,DWORD PTR [rsp+rax*4]
  40612d:	test   ebx,ebx
  40612f:	je     406110 <build_ast@@Base+0x890>
  406131:	mov    r14d,ebp
  406134:	mov    ebp,ecx
  406136:	shl    r14d,0x5
  40613a:	test   bl,0x1
  40613d:	jne    40614b <build_ast@@Base+0x8cb>
  40613f:	nop
  406140:	add    r14d,0x1
  406144:	shr    ebx,1
  406146:	test   bl,0x1
  406149:	je     406140 <build_ast@@Base+0x8c0>
  40614b:	cmp    r14d,0xfb
  406152:	ja     4061e0 <build_ast@@Base+0x960>
  406158:	mov    edi,0x1
  40615d:	call   405980 <build_ast@@Base+0x100>
  406162:	test   rax,rax
  406165:	je     406201 <build_ast@@Base+0x981>
  40616b:	mov    ecx,DWORD PTR [rax]
  40616d:	mov    r15d,r14d
  406170:	mov    edi,0x2
  406175:	lea    rax,[r15+r15*2]
  406179:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40617e:	call   405980 <build_ast@@Base+0x100>
  406183:	test   rax,rax
  406186:	je     406218 <build_ast@@Base+0x998>
  40618c:	mov    rcx,QWORD PTR [rax]
  40618f:	lea    rax,[r15+r15*2]
  406193:	mov    edi,0x2
  406198:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  40619d:	call   405980 <build_ast@@Base+0x100>
  4061a2:	test   rax,rax
  4061a5:	je     406210 <build_ast@@Base+0x990>
  4061a7:	mov    rcx,QWORD PTR [rax]
  4061aa:	lea    rax,[r15+r15*2]
  4061ae:	sub    r13d,0x1
  4061b2:	shr    ebx,1
  4061b4:	add    r14d,0x1
  4061b8:	cmp    r13d,0xffffffff
  4061bc:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  4061c1:	jne    406108 <build_ast@@Base+0x888>
  4061c7:	add    rsp,0x28
  4061cb:	pop    rbx
  4061cc:	pop    rbp
  4061cd:	pop    r12
  4061cf:	pop    r13
  4061d1:	pop    r14
  4061d3:	pop    r15
  4061d5:	ret    
  4061d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061e0:	lea    rdi,[rip+0x27a9]        # 408990 <_IO_stdin_used@@Base+0x990>
  4061e7:	xor    eax,eax
  4061e9:	call   405a00 <build_ast@@Base+0x180>
  4061ee:	mov    edi,0x1
  4061f3:	call   405980 <build_ast@@Base+0x100>
  4061f8:	test   rax,rax
  4061fb:	jne    40616b <build_ast@@Base+0x8eb>
  406201:	xor    ecx,ecx
  406203:	jmp    40616d <build_ast@@Base+0x8ed>
  406208:	nop    DWORD PTR [rax+rax*1+0x0]
  406210:	xor    ecx,ecx
  406212:	jmp    4061aa <build_ast@@Base+0x92a>
  406214:	nop    DWORD PTR [rax+0x0]
  406218:	xor    ecx,ecx
  40621a:	jmp    40618f <build_ast@@Base+0x90f>
  40621f:	xor    eax,eax
  406221:	jmp    405fe6 <build_ast@@Base+0x766>
  406226:	xor    eax,eax
  406228:	jmp    405fff <build_ast@@Base+0x77f>
  40622d:	xor    eax,eax
  40622f:	jmp    406019 <build_ast@@Base+0x799>
  406234:	xor    eax,eax
  406236:	jmp    406034 <build_ast@@Base+0x7b4>
  40623b:	xor    eax,eax
  40623d:	jmp    40604f <build_ast@@Base+0x7cf>
  406242:	xor    eax,eax
  406244:	jmp    40606a <build_ast@@Base+0x7ea>
  406249:	nop    DWORD PTR [rax+0x0]
  406250:	push   rbp
  406251:	push   rbx
  406252:	mov    ebx,edi
  406254:	sub    rsp,0x8
  406258:	mov    rbp,0x40ee20
  40625f:	mov    edi,DWORD PTR [rbp+0xc]
  406262:	test   edi,edi
  406264:	je     40626b <build_ast@@Base+0x9eb>
  406266:	call   4058e0 <build_ast@@Base+0x60>
  40626b:	mov    rdi,QWORD PTR [rbp+0x0]
  40626f:	lea    esi,[rbx*4+0x0]
  406276:	xor    edx,edx
  406278:	call   4021b0 <fseek@plt>
  40627d:	mov    rdi,QWORD PTR [rbp+0x0]
  406281:	call   402150 <ftell@plt>
  406286:	sar    rax,0x2
  40628a:	mov    DWORD PTR [rbp+0x8],eax
  40628d:	add    rsp,0x8
  406291:	pop    rbx
  406292:	pop    rbp
  406293:	ret    
  406294:	xchg   ax,ax
  406296:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004062a0 <__gcov_sort_n_vals@@Base>:
  4062a0:	cmp    esi,0x2
  4062a3:	jle    40632d <__gcov_sort_n_vals@@Base+0x8d>
  4062a9:	sub    esi,0x3
  4062ac:	push   rbp
  4062ad:	lea    r9,[rdi+0x8]
  4062b1:	shr    esi,1
  4062b3:	push   rbx
  4062b4:	xor    r11d,r11d
  4062b7:	mov    eax,esi
  4062b9:	xor    r10d,r10d
  4062bc:	lea    rbp,[rax+rax*1+0x2]
  4062c1:	nop    DWORD PTR [rax+0x0]
  4062c8:	mov    rsi,QWORD PTR [r9+0x10]
  4062cc:	cmp    rsi,QWORD PTR [r9]
  4062cf:	mov    edx,r10d
  4062d2:	mov    rbx,QWORD PTR [r9+0x8]
  4062d6:	mov    rax,r10
  4062d9:	jle    40630d <__gcov_sort_n_vals@@Base+0x6d>
  4062db:	lea    r8,[r9+r11*1]
  4062df:	jmp    4062f3 <__gcov_sort_n_vals@@Base+0x53>
  4062e1:	nop    DWORD PTR [rax+0x0]
  4062e8:	sub    rax,0x2
  4062ec:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  4062f1:	jle    40630d <__gcov_sort_n_vals@@Base+0x6d>
  4062f3:	mov    rcx,QWORD PTR [rdi+rax*8]
  4062f7:	sub    edx,0x2
  4062fa:	mov    QWORD PTR [rdi+rax*8+0x10],rcx
  4062ff:	mov    rcx,QWORD PTR [r8+rax*8]
  406303:	mov    QWORD PTR [rdi+rax*8+0x18],rcx
  406308:	jns    4062e8 <__gcov_sort_n_vals@@Base+0x48>
  40630a:	movsxd rax,edx
  40630d:	add    r10,0x2
  406311:	add    rax,0x2
  406315:	add    r9,0x10
  406319:	sub    r11,0x10
  40631d:	cmp    rbp,r10
  406320:	mov    QWORD PTR [rdi+rax*8],rbx
  406324:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  406329:	jne    4062c8 <__gcov_sort_n_vals@@Base+0x28>
  40632b:	pop    rbx
  40632c:	pop    rbp
  40632d:	repz ret 
  40632f:	nop
  406330:	push   r15
  406332:	push   r14
  406334:	xor    eax,eax
  406336:	push   r13
  406338:	push   r12
  40633a:	mov    r13,rdi
  40633d:	push   rbp
  40633e:	push   rbx
  40633f:	mov    ecx,0x2f9
  406344:	sub    rsp,0x4808
  40634b:	test   r13,r13
  40634e:	lea    rdi,[rsp+0x90]
  406356:	mov    DWORD PTR [rsp+0x6c],esi
  40635a:	mov    QWORD PTR [rsp+0x8],rdi
  40635f:	rep stos QWORD PTR es:[rdi],rax
  406362:	je     407649 <__gcov_sort_n_vals@@Base+0x13a9>
  406368:	mov    rbx,r13
  40636b:	xor    ebp,ebp
  40636d:	mov    QWORD PTR [rsp+0x10],0x0
  406376:	xor    r15d,r15d
  406379:	mov    QWORD PTR [rsp+0x18],r13
  40637e:	mov    rdi,QWORD PTR [rbx+0x18]
  406382:	call   4020f0 <strlen@plt>
  406387:	mov    rsi,QWORD PTR [rsp+0x10]
  40638c:	mov    ecx,DWORD PTR [rbx+0x10]
  40638f:	mov    edx,0x20
  406394:	cmp    rsi,rax
  406397:	cmovae rax,rsi
  40639b:	mov    QWORD PTR [rsp+0x10],rax
  4063a0:	mov    eax,ecx
  4063a2:	add    ecx,ecx
  4063a4:	xor    eax,r15d
  4063a7:	add    r15d,r15d
  4063aa:	sar    eax,0x1f
  4063ad:	and    eax,0x4c11db7
  4063b2:	xor    r15d,eax
  4063b5:	sub    edx,0x1
  4063b8:	jne    4063a0 <__gcov_sort_n_vals@@Base+0x100>
  4063ba:	mov    edi,DWORD PTR [rbx+0x70]
  4063bd:	mov    edx,0x20
  4063c2:	mov    ecx,edi
  4063c4:	nop    DWORD PTR [rax+0x0]
  4063c8:	mov    eax,ecx
  4063ca:	add    ecx,ecx
  4063cc:	xor    eax,r15d
  4063cf:	add    r15d,r15d
  4063d2:	sar    eax,0x1f
  4063d5:	and    eax,0x4c11db7
  4063da:	xor    r15d,eax
  4063dd:	sub    edx,0x1
  4063e0:	jne    4063c8 <__gcov_sort_n_vals@@Base+0x128>
  4063e2:	test   edi,edi
  4063e4:	je     406540 <__gcov_sort_n_vals@@Base+0x2a0>
  4063ea:	mov    r8,QWORD PTR [rbx+0x78]
  4063ee:	lea    eax,[rdi-0x1]
  4063f1:	mov    r12d,DWORD PTR [rsp+0x98]
  4063f9:	mov    rcx,QWORD PTR [rsp+0xa0]
  406401:	mov    rsi,QWORD PTR [rsp+0xa8]
  406409:	xor    r9d,r9d
  40640c:	xor    r13d,r13d
  40640f:	xor    r11d,r11d
  406412:	lea    r10,[r8+rax*8+0x8]
  406417:	nop    WORD PTR [rax+rax*1+0x0]
  406420:	mov    rdi,QWORD PTR [r8]
  406423:	test   rdi,rdi
  406426:	je     40691c <__gcov_sort_n_vals@@Base+0x67c>
  40642c:	cmp    QWORD PTR [rdi],rbx
  40642f:	je     40690c <__gcov_sort_n_vals@@Base+0x66c>
  406435:	xor    edi,edi
  406437:	xor    edx,edx
  406439:	mov    r14d,0x20
  40643f:	nop
  406440:	mov    eax,r15d
  406443:	add    r15d,r15d
  406446:	xor    eax,edx
  406448:	add    edx,edx
  40644a:	sar    eax,0x1f
  40644d:	and    eax,0x4c11db7
  406452:	xor    r15d,eax
  406455:	sub    r14d,0x1
  406459:	jne    406440 <__gcov_sort_n_vals@@Base+0x1a0>
  40645b:	test   rdi,rdi
  40645e:	je     406914 <__gcov_sort_n_vals@@Base+0x674>
  406464:	mov    r14d,DWORD PTR [rdi+0xc]
  406468:	mov    edx,0x20
  40646d:	nop    DWORD PTR [rax]
  406470:	mov    eax,r15d
  406473:	add    r15d,r15d
  406476:	xor    eax,r14d
  406479:	add    r14d,r14d
  40647c:	sar    eax,0x1f
  40647f:	and    eax,0x4c11db7
  406484:	xor    r15d,eax
  406487:	sub    edx,0x1
  40648a:	jne    406470 <__gcov_sort_n_vals@@Base+0x1d0>
  40648c:	test   rdi,rdi
  40648f:	je     406514 <__gcov_sort_n_vals@@Base+0x274>
  406495:	cmp    QWORD PTR [rbx+0x20],0x0
  40649a:	je     406514 <__gcov_sort_n_vals@@Base+0x274>
  40649c:	mov    r12d,DWORD PTR [rdi+0x18]
  4064a0:	mov    edx,0x20
  4064a5:	add    ebp,r12d
  4064a8:	mov    r11d,r12d
  4064ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4064b0:	mov    eax,r15d
  4064b3:	add    r15d,r15d
  4064b6:	xor    eax,r11d
  4064b9:	add    r11d,r11d
  4064bc:	sar    eax,0x1f
  4064bf:	and    eax,0x4c11db7
  4064c4:	xor    r15d,eax
  4064c7:	sub    edx,0x1
  4064ca:	jne    4064b0 <__gcov_sort_n_vals@@Base+0x210>
  4064cc:	test   r12d,r12d
  4064cf:	je     4069a0 <__gcov_sort_n_vals@@Base+0x700>
  4064d5:	mov    rax,QWORD PTR [rdi+0x20]
  4064d9:	lea    edx,[r12-0x1]
  4064de:	lea    rdi,[rax+rdx*8+0x8]
  4064e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4064e8:	mov    rdx,QWORD PTR [rax]
  4064eb:	add    rcx,rdx
  4064ee:	cmp    rsi,rdx
  4064f1:	jge    4064fc <__gcov_sort_n_vals@@Base+0x25c>
  4064f3:	mov    rsi,rdx
  4064f6:	mov    r9d,0x1
  4064fc:	add    rax,0x8
  406500:	cmp    rax,rdi
  406503:	jne    4064e8 <__gcov_sort_n_vals@@Base+0x248>
  406505:	mov    r12d,ebp
  406508:	mov    r13d,0x1
  40650e:	mov    r11d,0x1
  406514:	add    r8,0x8
  406518:	cmp    r10,r8
  40651b:	jne    406420 <__gcov_sort_n_vals@@Base+0x180>
  406521:	test   r11b,r11b
  406524:	jne    407622 <__gcov_sort_n_vals@@Base+0x1382>
  40652a:	test   r13b,r13b
  40652d:	je     406537 <__gcov_sort_n_vals@@Base+0x297>
  40652f:	mov    QWORD PTR [rsp+0xa0],rcx
  406537:	test   r9b,r9b
  40653a:	jne    40762f <__gcov_sort_n_vals@@Base+0x138f>
  406540:	mov    rbx,QWORD PTR [rbx+0x8]
  406544:	test   rbx,rbx
  406547:	jne    40637e <__gcov_sort_n_vals@@Base+0xde>
  40654d:	mov    r14,QWORD PTR [rsp+0x10]
  406552:	mov    r13,QWORD PTR [rsp+0x18]
  406557:	add    r14,0x2
  40655b:	test   ebp,ebp
  40655d:	je     406692 <__gcov_sort_n_vals@@Base+0x3f2>
  406563:	mov    rbx,QWORD PTR [rsp+0x8]
  406568:	mov    rcx,QWORD PTR [rsp+0xa8]
  406570:	mov    rax,rbx
  406573:	lea    rdx,[rbx+0x17c8]
  40657a:	add    rax,0x28
  40657e:	xchg   ax,ax
  406580:	mov    DWORD PTR [rax],0x0
  406586:	mov    QWORD PTR [rax+0x8],rcx
  40658a:	add    rax,0x18
  40658e:	mov    QWORD PTR [rax-0x8],0x0
  406596:	cmp    rdx,rax
  406599:	jne    406580 <__gcov_sort_n_vals@@Base+0x2e0>
  40659b:	mov    rax,QWORD PTR [rsp+0x8]
  4065a0:	mov    r10,r13
  4065a3:	mov    r12d,0x3f
  4065a9:	mov    ebp,0x3d
  4065ae:	mov    ebx,0x4000003e
  4065b3:	lea    r8,[rax+0x28]
  4065b7:	cmp    QWORD PTR [r10+0x20],0x0
  4065bc:	je     406685 <__gcov_sort_n_vals@@Base+0x3e5>
  4065c2:	mov    eax,DWORD PTR [r10+0x70]
  4065c6:	test   eax,eax
  4065c8:	je     406685 <__gcov_sort_n_vals@@Base+0x3e5>
  4065ce:	mov    rdi,QWORD PTR [r10+0x78]
  4065d2:	sub    eax,0x1
  4065d5:	lea    r11,[rdi+rax*8+0x8]
  4065da:	jmp    4065ed <__gcov_sort_n_vals@@Base+0x34d>
  4065dc:	nop    DWORD PTR [rax+0x0]
  4065e0:	add    rdi,0x8
  4065e4:	cmp    r11,rdi
  4065e7:	je     406685 <__gcov_sort_n_vals@@Base+0x3e5>
  4065ed:	mov    rax,QWORD PTR [rdi]
  4065f0:	test   rax,rax
  4065f3:	je     4065e0 <__gcov_sort_n_vals@@Base+0x340>
  4065f5:	cmp    QWORD PTR [rax],r10
  4065f8:	jne    4065e0 <__gcov_sort_n_vals@@Base+0x340>
  4065fa:	mov    edx,DWORD PTR [rax+0x18]
  4065fd:	test   edx,edx
  4065ff:	je     4065e0 <__gcov_sort_n_vals@@Base+0x340>
  406601:	mov    rsi,QWORD PTR [rax+0x20]
  406605:	lea    eax,[rdx-0x1]
  406608:	mov    QWORD PTR [rsp+0x10],rdi
  40660d:	lea    r9,[rsi+rax*8+0x8]
  406612:	nop    WORD PTR [rax+rax*1+0x0]
  406618:	mov    rdx,QWORD PTR [rsi]
  40661b:	test   rdx,rdx
  40661e:	je     406928 <__gcov_sort_n_vals@@Base+0x688>
  406624:	bsr    rax,rdx
  406628:	mov    ecx,r12d
  40662b:	xor    rax,0x3f
  40662f:	sub    ecx,eax
  406631:	cmp    ecx,0x1
  406634:	jbe    406928 <__gcov_sort_n_vals@@Base+0x688>
  40663a:	mov    ecx,ebp
  40663c:	mov    rdi,rdx
  40663f:	sub    ecx,eax
  406641:	shr    rdi,cl
  406644:	mov    rcx,rdi
  406647:	mov    edi,ebx
  406649:	and    ecx,0x3
  40664c:	sub    edi,eax
  40664e:	lea    eax,[rcx+rdi*4]
  406651:	lea    rax,[rax+rax*2]
  406655:	lea    rax,[r8+rax*8]
  406659:	add    DWORD PTR [rax],0x1
  40665c:	add    QWORD PTR [rax+0x10],rdx
  406660:	cmp    rdx,QWORD PTR [rax+0x8]
  406664:	jge    40666a <__gcov_sort_n_vals@@Base+0x3ca>
  406666:	mov    QWORD PTR [rax+0x8],rdx
  40666a:	add    rsi,0x8
  40666e:	cmp    rsi,r9
  406671:	jne    406618 <__gcov_sort_n_vals@@Base+0x378>
  406673:	mov    rdi,QWORD PTR [rsp+0x10]
  406678:	add    rdi,0x8
  40667c:	cmp    r11,rdi
  40667f:	jne    4065ed <__gcov_sort_n_vals@@Base+0x34d>
  406685:	mov    r10,QWORD PTR [r10+0x8]
  406689:	test   r10,r10
  40668c:	jne    4065b7 <__gcov_sort_n_vals@@Base+0x317>
  406692:	lea    rdi,[rip+0x24b3]        # 408b4c <_IO_stdin_used@@Base+0xb4c>
  406699:	call   402030 <getenv@plt>
  40669e:	test   rax,rax
  4066a1:	je     407585 <__gcov_sort_n_vals@@Base+0x12e5>
  4066a7:	xor    esi,esi
  4066a9:	mov    edx,0xa
  4066ae:	mov    rdi,rax
  4066b1:	call   402160 <strtol@plt>
  4066b6:	mov    edx,0x0
  4066bb:	test   eax,eax
  4066bd:	lea    rdi,[rip+0x249a]        # 408b5e <_IO_stdin_used@@Base+0xb5e>
  4066c4:	cmovns edx,eax
  4066c7:	mov    DWORD PTR [rsp+0x3c],edx
  4066cb:	call   402030 <getenv@plt>
  4066d0:	test   rax,rax
  4066d3:	mov    rbx,rax
  4066d6:	je     407568 <__gcov_sort_n_vals@@Base+0x12c8>
  4066dc:	mov    rdi,rax
  4066df:	call   4020f0 <strlen@plt>
  4066e4:	test   rax,rax
  4066e7:	mov    QWORD PTR [rsp+0x20],rax
  4066ec:	je     407568 <__gcov_sort_n_vals@@Base+0x12c8>
  4066f2:	mov    rsi,QWORD PTR [rsp+0x20]
  4066f7:	mov    rax,rsi
  4066fa:	sub    rax,0x1
  4066fe:	cmp    BYTE PTR [rbx+rsi*1-0x1],0x2f
  406703:	je     40760f <__gcov_sort_n_vals@@Base+0x136f>
  406709:	mov    rbp,QWORD PTR [rsp+0x20]
  40670e:	lea    rdi,[r14+rbp*1]
  406712:	call   402180 <malloc@plt>
  406717:	mov    rdx,rbp
  40671a:	mov    rsi,rbx
  40671d:	mov    rdi,rax
  406720:	call   402170 <memcpy@plt>
  406725:	mov    QWORD PTR [rsp+0x10],rax
  40672a:	test   r13,r13
  40672d:	je     4068f1 <__gcov_sort_n_vals@@Base+0x651>
  406733:	mov    rax,QWORD PTR [rsp+0x10]
  406738:	add    rax,QWORD PTR [rsp+0x20]
  40673d:	mov    r12,r13
  406740:	mov    DWORD PTR [rsp+0x60],r15d
  406745:	mov    QWORD PTR [rsp+0x58],rax
  40674a:	add    rax,0x1
  40674e:	mov    QWORD PTR [rsp+0x80],rax
  406756:	lea    rax,[rsp+0x1860]
  40675e:	mov    QWORD PTR [rsp+0x30],rax
  406763:	cmp    QWORD PTR [r12+0x68],0x0
  406769:	mov    QWORD PTR [rip+0x7f94],0x0        # 40e708 <__bss_start@@Base+0xf98>
  406774:	mov    QWORD PTR [rip+0x7f81],0x0        # 40e700 <__bss_start@@Base+0xf90>
  40677f:	je     4067ce <__gcov_sort_n_vals@@Base+0x52e>
  406781:	mov    r11d,DWORD PTR [r12+0x70]
  406786:	test   r11d,r11d
  406789:	je     4067ce <__gcov_sort_n_vals@@Base+0x52e>
  40678b:	xor    r13d,r13d
  40678e:	xor    ebp,ebp
  406790:	mov    rax,QWORD PTR [r12+0x78]
  406795:	mov    rcx,QWORD PTR [rax+r13*1]
  406799:	xor    eax,eax
  40679b:	add    rcx,0x18
  40679f:	nop
  4067a0:	cmp    QWORD PTR [r12+rax*8+0x20],0x0
  4067a6:	je     4067b6 <__gcov_sort_n_vals@@Base+0x516>
  4067a8:	cmp    rax,0x9
  4067ac:	je     406930 <__gcov_sort_n_vals@@Base+0x690>
  4067b2:	add    rcx,0x10
  4067b6:	add    rax,0x1
  4067ba:	cmp    rax,0xa
  4067be:	jne    4067a0 <__gcov_sort_n_vals@@Base+0x500>
  4067c0:	add    ebp,0x1
  4067c3:	add    r13,0x8
  4067c7:	cmp    DWORD PTR [r12+0x70],ebp
  4067cc:	jne    406790 <__gcov_sort_n_vals@@Base+0x4f0>
  4067ce:	mov    ebx,DWORD PTR [rsp+0x3c]
  4067d2:	mov    rsi,QWORD PTR [r12+0x18]
  4067d7:	mov    rdi,QWORD PTR [rsp+0x58]
  4067dc:	test   ebx,ebx
  4067de:	je     406825 <__gcov_sort_n_vals@@Base+0x585>
  4067e0:	movzx  edx,BYTE PTR [rsi]
  4067e3:	mov    rax,rsi
  4067e6:	cmp    dl,0x2f
  4067e9:	je     406a20 <__gcov_sort_n_vals@@Base+0x780>
  4067ef:	test   dl,dl
  4067f1:	je     406825 <__gcov_sort_n_vals@@Base+0x585>
  4067f3:	mov    ecx,DWORD PTR [rsp+0x3c]
  4067f7:	jmp    40680f <__gcov_sort_n_vals@@Base+0x56f>
  4067f9:	nop    DWORD PTR [rax+0x0]
  406800:	add    rax,0x1
  406804:	movzx  edx,BYTE PTR [rax]
  406807:	test   dl,dl
  406809:	je     406825 <__gcov_sort_n_vals@@Base+0x585>
  40680b:	test   ecx,ecx
  40680d:	je     406825 <__gcov_sort_n_vals@@Base+0x585>
  40680f:	cmp    dl,0x2f
  406812:	jne    406800 <__gcov_sort_n_vals@@Base+0x560>
  406814:	mov    rsi,rax
  406817:	add    rax,0x1
  40681b:	movzx  edx,BYTE PTR [rax]
  40681e:	sub    ecx,0x1
  406821:	test   dl,dl
  406823:	jne    40680b <__gcov_sort_n_vals@@Base+0x56b>
  406825:	cmp    QWORD PTR [rsp+0x20],0x0
  40682b:	je     406842 <__gcov_sort_n_vals@@Base+0x5a2>
  40682d:	cmp    BYTE PTR [rsi],0x2f
  406830:	je     406842 <__gcov_sort_n_vals@@Base+0x5a2>
  406832:	mov    rax,QWORD PTR [rsp+0x58]
  406837:	mov    rdi,QWORD PTR [rsp+0x80]
  40683f:	mov    BYTE PTR [rax],0x2f
  406842:	call   402080 <strcpy@plt>
  406847:	mov    rdi,QWORD PTR [rsp+0x10]
  40684c:	call   405be0 <build_ast@@Base+0x360>
  406851:	test   eax,eax
  406853:	je     4069ae <__gcov_sort_n_vals@@Base+0x70e>
  406859:	mov    edi,0x1
  40685e:	call   405980 <build_ast@@Base+0x100>
  406863:	test   rax,rax
  406866:	je     406f2e <__gcov_sort_n_vals@@Base+0xc8e>
  40686c:	mov    eax,DWORD PTR [rax]
  40686e:	test   eax,eax
  406870:	je     406f2e <__gcov_sort_n_vals@@Base+0xc8e>
  406876:	cmp    eax,0x67636461
  40687b:	je     406aa0 <__gcov_sort_n_vals@@Base+0x800>
  406881:	mov    rsi,QWORD PTR [rsp+0x10]
  406886:	lea    rdi,[rip+0x21cb]        # 408a58 <_IO_stdin_used@@Base+0xa58>
  40688d:	xor    eax,eax
  40688f:	call   405a00 <build_ast@@Base+0x180>
  406894:	mov    rax,QWORD PTR [rip+0x7e6d]        # 40e708 <__bss_start@@Base+0xf98>
  40689b:	test   rax,rax
  40689e:	je     4068bc <__gcov_sort_n_vals@@Base+0x61c>
  4068a0:	mov    edx,0xa
  4068a5:	mov    rsi,rax
  4068a8:	mov    rdi,r12
  4068ab:	call   405ab0 <build_ast@@Base+0x230>
  4068b0:	test   rax,rax
  4068b3:	mov    QWORD PTR [rip+0x7e4e],rax        # 40e708 <__bss_start@@Base+0xf98>
  4068ba:	jne    4068a0 <__gcov_sort_n_vals@@Base+0x600>
  4068bc:	call   405d10 <build_ast@@Base+0x490>
  4068c1:	test   eax,eax
  4068c3:	je     4068e3 <__gcov_sort_n_vals@@Base+0x643>
  4068c5:	lea    rax,[rip+0x2144]        # 408a10 <_IO_stdin_used@@Base+0xa10>
  4068cc:	lea    rdi,[rip+0x225b]        # 408b2e <_IO_stdin_used@@Base+0xb2e>
  4068d3:	mov    rsi,QWORD PTR [rsp+0x10]
  4068d8:	cmovs  rdi,rax
  4068dc:	xor    eax,eax
  4068de:	call   405a00 <build_ast@@Base+0x180>
  4068e3:	mov    r12,QWORD PTR [r12+0x8]
  4068e8:	test   r12,r12
  4068eb:	jne    406763 <__gcov_sort_n_vals@@Base+0x4c3>
  4068f1:	mov    rdi,QWORD PTR [rsp+0x10]
  4068f6:	add    rsp,0x4808
  4068fd:	pop    rbx
  4068fe:	pop    rbp
  4068ff:	pop    r12
  406901:	pop    r13
  406903:	pop    r14
  406905:	pop    r15
  406907:	jmp    402040 <free@plt>
  40690c:	mov    edx,DWORD PTR [rdi+0x10]
  40690f:	jmp    406439 <__gcov_sort_n_vals@@Base+0x199>
  406914:	xor    r14d,r14d
  406917:	jmp    406468 <__gcov_sort_n_vals@@Base+0x1c8>
  40691c:	xor    edx,edx
  40691e:	jmp    406439 <__gcov_sort_n_vals@@Base+0x199>
  406923:	nop    DWORD PTR [rax+rax*1+0x0]
  406928:	mov    eax,edx
  40692a:	jmp    406651 <__gcov_sort_n_vals@@Base+0x3b1>
  40692f:	nop
  406930:	mov    r14d,DWORD PTR [rcx]
  406933:	mov    eax,0x38e38e39
  406938:	imul   r14d
  40693b:	mov    eax,r14d
  40693e:	sar    eax,0x1f
  406941:	sar    edx,1
  406943:	mov    ebx,edx
  406945:	sub    ebx,eax
  406947:	lea    eax,[rbx+rbx*8]
  40694a:	mov    ebx,r14d
  40694d:	sub    ebx,eax
  40694f:	jne    40760a <__gcov_sort_n_vals@@Base+0x136a>
  406955:	mov    r15,QWORD PTR [rcx+0x8]
  406959:	add    r15,0x8
  40695d:	test   r14d,r14d
  406960:	jle    4067c0 <__gcov_sort_n_vals@@Base+0x520>
  406966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406970:	mov    rdi,r15
  406973:	mov    esi,0x8
  406978:	add    ebx,0x9
  40697b:	call   4062a0 <__gcov_sort_n_vals@@Base>
  406980:	add    r15,0x48
  406984:	cmp    r14d,ebx
  406987:	jg     406970 <__gcov_sort_n_vals@@Base+0x6d0>
  406989:	add    ebp,0x1
  40698c:	add    r13,0x8
  406990:	cmp    DWORD PTR [r12+0x70],ebp
  406995:	jne    406790 <__gcov_sort_n_vals@@Base+0x4f0>
  40699b:	jmp    4067ce <__gcov_sort_n_vals@@Base+0x52e>
  4069a0:	mov    r12d,ebp
  4069a3:	mov    r11d,0x1
  4069a9:	jmp    406514 <__gcov_sort_n_vals@@Base+0x274>
  4069ae:	mov    rbx,QWORD PTR [rsp+0x10]
  4069b3:	movzx  eax,BYTE PTR [rbx]
  4069b6:	cmp    al,0x2f
  4069b8:	je     406a90 <__gcov_sort_n_vals@@Base+0x7f0>
  4069be:	test   al,al
  4069c0:	je     4069ff <__gcov_sort_n_vals@@Base+0x75f>
  4069c2:	mov    rbp,QWORD PTR [rsp+0x10]
  4069c7:	jmp    4069db <__gcov_sort_n_vals@@Base+0x73b>
  4069c9:	nop    DWORD PTR [rax+0x0]
  4069d0:	add    rbx,0x1
  4069d4:	movzx  eax,BYTE PTR [rbx]
  4069d7:	test   al,al
  4069d9:	je     4069ff <__gcov_sort_n_vals@@Base+0x75f>
  4069db:	cmp    al,0x2f
  4069dd:	jne    4069d0 <__gcov_sort_n_vals@@Base+0x730>
  4069df:	xor    esi,esi
  4069e1:	mov    BYTE PTR [rbx],0x0
  4069e4:	mov    rdi,rbp
  4069e7:	call   4021f0 <access@plt>
  4069ec:	cmp    eax,0xffffffff
  4069ef:	je     406a2d <__gcov_sort_n_vals@@Base+0x78d>
  4069f1:	mov    BYTE PTR [rbx],0x2f
  4069f4:	add    rbx,0x1
  4069f8:	movzx  eax,BYTE PTR [rbx]
  4069fb:	test   al,al
  4069fd:	jne    4069db <__gcov_sort_n_vals@@Base+0x73b>
  4069ff:	mov    rdi,QWORD PTR [rsp+0x10]
  406a04:	call   405be0 <build_ast@@Base+0x360>
  406a09:	test   eax,eax
  406a0b:	jne    406859 <__gcov_sort_n_vals@@Base+0x5b9>
  406a11:	mov    rcx,QWORD PTR [rsp+0x10]
  406a16:	lea    rdx,[rip+0x2160]        # 408b7d <_IO_stdin_used@@Base+0xb7d>
  406a1d:	jmp    406a6c <__gcov_sort_n_vals@@Base+0x7cc>
  406a1f:	nop
  406a20:	lea    rax,[rsi+0x1]
  406a24:	movzx  edx,BYTE PTR [rsi+0x1]
  406a28:	jmp    4067ef <__gcov_sort_n_vals@@Base+0x54f>
  406a2d:	mov    esi,0x1ed
  406a32:	mov    rdi,rbp
  406a35:	call   402090 <mkdir@plt>
  406a3a:	cmp    eax,0xffffffff
  406a3d:	jne    4069f1 <__gcov_sort_n_vals@@Base+0x751>
  406a3f:	call   402070 <__errno_location@plt>
  406a44:	cmp    DWORD PTR [rax],0x11
  406a47:	je     4069f1 <__gcov_sort_n_vals@@Base+0x751>
  406a49:	mov    r14,QWORD PTR [rsp+0x10]
  406a4e:	lea    rdi,[rip+0x1fdb]        # 408a30 <_IO_stdin_used@@Base+0xa30>
  406a55:	xor    eax,eax
  406a57:	mov    rsi,r14
  406a5a:	call   405a00 <build_ast@@Base+0x180>
  406a5f:	lea    rdx,[rip+0x2104]        # 408b6a <_IO_stdin_used@@Base+0xb6a>
  406a66:	mov    BYTE PTR [rbx],0x2f
  406a69:	mov    rcx,r14
  406a6c:	mov    rax,QWORD PTR [rip+0x5585]        # 40bff8 <stderr@GLIBC_2.2.5>
  406a73:	mov    esi,0x1
  406a78:	mov    rdi,QWORD PTR [rax]
  406a7b:	xor    eax,eax
  406a7d:	call   402230 <__fprintf_chk@plt>
  406a82:	jmp    4068e3 <__gcov_sort_n_vals@@Base+0x643>
  406a87:	nop    WORD PTR [rax+rax*1+0x0]
  406a90:	mov    rax,rbx
  406a93:	lea    rbx,[rbx+0x1]
  406a97:	movzx  eax,BYTE PTR [rax+0x1]
  406a9b:	jmp    4069be <__gcov_sort_n_vals@@Base+0x71e>
  406aa0:	mov    edi,0x1
  406aa5:	call   405980 <build_ast@@Base+0x100>
  406aaa:	test   rax,rax
  406aad:	je     4075e4 <__gcov_sort_n_vals@@Base+0x1344>
  406ab3:	mov    esi,DWORD PTR [rax]
  406ab5:	lea    rax,[r12+0x18]
  406aba:	mov    rdx,QWORD PTR [rsp+0x10]
  406abf:	mov    rdi,rax
  406ac2:	mov    QWORD PTR [rsp+0x78],rax
  406ac7:	call   405b20 <build_ast@@Base+0x2a0>
  406acc:	test   eax,eax
  406ace:	je     406894 <__gcov_sort_n_vals@@Base+0x5f4>
  406ad4:	mov    edi,0x1
  406ad9:	call   405980 <build_ast@@Base+0x100>
  406ade:	test   rax,rax
  406ae1:	je     4075eb <__gcov_sort_n_vals@@Base+0x134b>
  406ae7:	mov    eax,DWORD PTR [rax]
  406ae9:	cmp    DWORD PTR [r12+0x10],eax
  406aee:	jne    406f2e <__gcov_sort_n_vals@@Base+0xc8e>
  406af4:	mov    r15,0x40ee20
  406afb:	lea    rbx,[rip+0x7bfe]        # 40e700 <__bss_start@@Base+0xf90>
  406b02:	lea    rbp,[rsp+0x3030]
  406b0a:	xor    r13d,r13d
  406b0d:	mov    eax,DWORD PTR [r15+0xc]
  406b11:	add    eax,DWORD PTR [r15+0x8]
  406b15:	mov    edi,0x1
  406b1a:	mov    DWORD PTR [rsp+0x28],eax
  406b1e:	call   405980 <build_ast@@Base+0x100>
  406b23:	test   rax,rax
  406b26:	je     406bc8 <__gcov_sort_n_vals@@Base+0x928>
  406b2c:	mov    eax,DWORD PTR [rax]
  406b2e:	cmp    eax,0xa3000000
  406b33:	jne    4075da <__gcov_sort_n_vals@@Base+0x133a>
  406b39:	mov    edi,0x1
  406b3e:	call   405980 <build_ast@@Base+0x100>
  406b43:	mov    rdi,rbp
  406b46:	call   405fc0 <build_ast@@Base+0x740>
  406b4b:	cmp    QWORD PTR [r15],0x0
  406b4f:	je     406f0f <__gcov_sort_n_vals@@Base+0xc6f>
  406b55:	mov    eax,DWORD PTR [r15+0x18]
  406b59:	test   eax,eax
  406b5b:	jne    406f04 <__gcov_sort_n_vals@@Base+0xc64>
  406b61:	test   r13d,r13d
  406b64:	jne    406b9d <__gcov_sort_n_vals@@Base+0x8fd>
  406b66:	mov    eax,DWORD PTR [rsp+0x60]
  406b6a:	cmp    DWORD PTR [rsp+0x3030],eax
  406b71:	jne    406b0d <__gcov_sort_n_vals@@Base+0x86d>
  406b73:	mov    eax,DWORD PTR [rsp+0x98]
  406b7a:	cmp    DWORD PTR [rsp+0x3038],eax
  406b81:	jne    406b0d <__gcov_sort_n_vals@@Base+0x86d>
  406b83:	mov    ecx,0x2f9
  406b88:	mov    rdi,QWORD PTR [rsp+0x30]
  406b8d:	mov    rsi,rbp
  406b90:	mov    r13d,DWORD PTR [rsp+0x28]
  406b95:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  406b98:	jmp    406b0d <__gcov_sort_n_vals@@Base+0x86d>
  406b9d:	mov    edi,0x17d0
  406ba2:	call   402180 <malloc@plt>
  406ba7:	mov    ecx,0x2f9
  406bac:	mov    QWORD PTR [rbx],rax
  406baf:	lea    rdi,[rax+0x8]
  406bb3:	mov    rsi,rbp
  406bb6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  406bb9:	mov    QWORD PTR [rax],0x0
  406bc0:	mov    rbx,QWORD PTR [rbx]
  406bc3:	jmp    406b0d <__gcov_sort_n_vals@@Base+0x86d>
  406bc8:	mov    DWORD PTR [rsp+0x18],r13d
  406bcd:	xor    eax,eax
  406bcf:	lea    rbx,[rip+0x7b32]        # 40e708 <__bss_start@@Base+0xf98>
  406bd6:	mov    QWORD PTR [rsp+0x48],0x0
  406bdf:	mov    QWORD PTR [rsp+0x70],r15
  406be4:	mov    QWORD PTR [rsp+0x50],rbx
  406be9:	mov    rbx,QWORD PTR [rsp+0x48]
  406bee:	cmp    ebx,DWORD PTR [r12+0x70]
  406bf3:	mov    DWORD PTR [rsp+0x88],ebx
  406bfa:	mov    DWORD PTR [rsp+0x64],ebx
  406bfe:	je     407735 <__gcov_sort_n_vals@@Base+0x1495>
  406c04:	mov    rdx,QWORD PTR [r12+0x78]
  406c09:	mov    rbx,QWORD PTR [rsp+0x48]
  406c0e:	cmp    eax,0x1000000
  406c13:	mov    rbx,QWORD PTR [rdx+rbx*8]
  406c17:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  406c1d:	mov    edi,0x1
  406c22:	call   405980 <build_ast@@Base+0x100>
  406c27:	test   rax,rax
  406c2a:	je     406de9 <__gcov_sort_n_vals@@Base+0xb49>
  406c30:	mov    eax,DWORD PTR [rax]
  406c32:	test   eax,eax
  406c34:	je     406de9 <__gcov_sort_n_vals@@Base+0xb49>
  406c3a:	cmp    eax,0x3
  406c3d:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  406c43:	test   rbx,rbx
  406c46:	je     406c51 <__gcov_sort_n_vals@@Base+0x9b1>
  406c48:	cmp    QWORD PTR [rbx],r12
  406c4b:	je     407689 <__gcov_sort_n_vals@@Base+0x13e9>
  406c51:	mov    rcx,QWORD PTR [rsp+0x78]
  406c56:	lea    rdx,[r12+0x68]
  406c5b:	xor    eax,eax
  406c5d:	cmp    QWORD PTR [rdx],0x1
  406c61:	sbb    eax,0xffffffff
  406c64:	sub    rdx,0x8
  406c68:	cmp    rdx,rcx
  406c6b:	jne    406c5d <__gcov_sort_n_vals@@Base+0x9bd>
  406c6d:	shl    eax,0x4
  406c70:	lea    edi,[rax+0x38]
  406c73:	mov    DWORD PTR [rsp+0x40],edi
  406c77:	call   402180 <malloc@plt>
  406c7c:	test   rax,rax
  406c7f:	mov    r13,rax
  406c82:	mov    ecx,DWORD PTR [rsp+0x40]
  406c86:	je     406e7c <__gcov_sort_n_vals@@Base+0xbdc>
  406c8c:	mov    QWORD PTR [rax],0x0
  406c93:	mov    eax,DWORD PTR [rsp+0x64]
  406c97:	mov    edi,0x1
  406c9c:	mov    DWORD PTR [r13+0x8],eax
  406ca0:	call   405980 <build_ast@@Base+0x100>
  406ca5:	test   rax,rax
  406ca8:	je     407682 <__gcov_sort_n_vals@@Base+0x13e2>
  406cae:	mov    eax,DWORD PTR [rax]
  406cb0:	mov    DWORD PTR [r13+0x18],eax
  406cb4:	mov    edi,0x1
  406cb9:	call   405980 <build_ast@@Base+0x100>
  406cbe:	test   rax,rax
  406cc1:	je     40767b <__gcov_sort_n_vals@@Base+0x13db>
  406cc7:	mov    eax,DWORD PTR [rax]
  406cc9:	mov    DWORD PTR [r13+0x1c],eax
  406ccd:	mov    edi,0x1
  406cd2:	call   405980 <build_ast@@Base+0x100>
  406cd7:	test   rax,rax
  406cda:	je     407674 <__gcov_sort_n_vals@@Base+0x13d4>
  406ce0:	mov    eax,DWORD PTR [rax]
  406ce2:	mov    DWORD PTR [r13+0x20],eax
  406ce6:	mov    r14d,0x1a10000
  406cec:	xor    ebx,ebx
  406cee:	mov    DWORD PTR [rsp+0x68],0x0
  406cf6:	mov    QWORD PTR [rsp+0x40],r13
  406cfb:	cmp    QWORD PTR [r12+rbx*8+0x20],0x0
  406d01:	mov    ebp,ebx
  406d03:	je     406dbf <__gcov_sort_n_vals@@Base+0xb1f>
  406d09:	mov    edi,0x1
  406d0e:	call   405980 <build_ast@@Base+0x100>
  406d13:	test   rax,rax
  406d16:	je     406e09 <__gcov_sort_n_vals@@Base+0xb69>
  406d1c:	cmp    r14d,DWORD PTR [rax]
  406d1f:	jne    406e09 <__gcov_sort_n_vals@@Base+0xb69>
  406d25:	mov    edi,0x1
  406d2a:	call   405980 <build_ast@@Base+0x100>
  406d2f:	test   rax,rax
  406d32:	je     406e70 <__gcov_sort_n_vals@@Base+0xbd0>
  406d38:	mov    esi,DWORD PTR [rax]
  406d3a:	shr    esi,1
  406d3c:	lea    edi,[rsi*8+0x0]
  406d43:	mov    r15,rdi
  406d46:	mov    DWORD PTR [rsp+0x8c],esi
  406d4d:	call   402180 <malloc@plt>
  406d52:	test   rax,rax
  406d55:	mov    r13,rax
  406d58:	je     407665 <__gcov_sort_n_vals@@Base+0x13c5>
  406d5e:	mov    eax,DWORD PTR [rsp+0x68]
  406d62:	mov    esi,DWORD PTR [rsp+0x8c]
  406d69:	shl    rax,0x4
  406d6d:	add    rax,QWORD PTR [rsp+0x40]
  406d72:	test   esi,esi
  406d74:	mov    DWORD PTR [rax+0x28],esi
  406d77:	mov    QWORD PTR [rax+0x30],r13
  406d7b:	lea    eax,[rsi-0x1]
  406d7e:	lea    rbp,[r13+rax*8+0x8]
  406d83:	jne    406d9c <__gcov_sort_n_vals@@Base+0xafc>
  406d85:	jmp    406dba <__gcov_sort_n_vals@@Base+0xb1a>
  406d87:	nop    WORD PTR [rax+rax*1+0x0]
  406d90:	mov    rax,QWORD PTR [rax]
  406d93:	cmp    rbp,r13
  406d96:	mov    QWORD PTR [r13-0x8],rax
  406d9a:	je     406dba <__gcov_sort_n_vals@@Base+0xb1a>
  406d9c:	mov    edi,0x2
  406da1:	add    r13,0x8
  406da5:	call   405980 <build_ast@@Base+0x100>
  406daa:	test   rax,rax
  406dad:	jne    406d90 <__gcov_sort_n_vals@@Base+0xaf0>
  406daf:	xor    eax,eax
  406db1:	cmp    rbp,r13
  406db4:	mov    QWORD PTR [r13-0x8],rax
  406db8:	jne    406d9c <__gcov_sort_n_vals@@Base+0xafc>
  406dba:	add    DWORD PTR [rsp+0x68],0x1
  406dbf:	add    r14d,0x20000
  406dc6:	add    rbx,0x1
  406dca:	cmp    r14d,0x1b50000
  406dd1:	jne    406cfb <__gcov_sort_n_vals@@Base+0xa5b>
  406dd7:	mov    r13,QWORD PTR [rsp+0x40]
  406ddc:	mov    rax,QWORD PTR [rsp+0x50]
  406de1:	mov    QWORD PTR [rsp+0x50],r13
  406de6:	mov    QWORD PTR [rax],r13
  406de9:	mov    edi,0x1
  406dee:	call   405980 <build_ast@@Base+0x100>
  406df3:	test   rax,rax
  406df6:	je     406ea0 <__gcov_sort_n_vals@@Base+0xc00>
  406dfc:	mov    eax,DWORD PTR [rax]
  406dfe:	add    QWORD PTR [rsp+0x48],0x1
  406e04:	jmp    406be9 <__gcov_sort_n_vals@@Base+0x949>
  406e09:	mov    r13,QWORD PTR [rsp+0x40]
  406e0e:	lea    rcx,[rip+0x1cf9]        # 408b0e <_IO_stdin_used@@Base+0xb0e>
  406e15:	mov    edx,DWORD PTR [rsp+0x64]
  406e19:	mov    rsi,QWORD PTR [rsp+0x10]
  406e1e:	lea    rdi,[rip+0x1c83]        # 408aa8 <_IO_stdin_used@@Base+0xaa8>
  406e25:	mov    r8d,ebp
  406e28:	xor    eax,eax
  406e2a:	call   405a00 <build_ast@@Base+0x180>
  406e2f:	mov    edx,ebx
  406e31:	mov    rsi,r13
  406e34:	mov    rdi,r12
  406e37:	call   405ab0 <build_ast@@Base+0x230>
  406e3c:	test   rax,rax
  406e3f:	mov    QWORD PTR [rsp+0x50],rax
  406e44:	jne    406de9 <__gcov_sort_n_vals@@Base+0xb49>
  406e46:	mov    ecx,DWORD PTR [rsp+0x88]
  406e4d:	mov    rsi,QWORD PTR [rsp+0x10]
  406e52:	lea    rdx,[rip+0x1d3e]        # 408b97 <_IO_stdin_used@@Base+0xb97>
  406e59:	lea    rdi,[rip+0x1c20]        # 408a80 <_IO_stdin_used@@Base+0xa80>
  406e60:	xor    eax,eax
  406e62:	call   405a00 <build_ast@@Base+0x180>
  406e67:	jmp    406894 <__gcov_sort_n_vals@@Base+0x5f4>
  406e6c:	nop    DWORD PTR [rax+0x0]
  406e70:	xor    edi,edi
  406e72:	xor    r15d,r15d
  406e75:	xor    esi,esi
  406e77:	jmp    406d46 <__gcov_sort_n_vals@@Base+0xaa6>
  406e7c:	mov    ebx,0xffffffff
  406e81:	test   ecx,ecx
  406e83:	je     407657 <__gcov_sort_n_vals@@Base+0x13b7>
  406e89:	mov    ebp,ecx
  406e8b:	lea    rcx,[rip+0x1c6c]        # 408afe <_IO_stdin_used@@Base+0xafe>
  406e92:	jmp    406e15 <__gcov_sort_n_vals@@Base+0xb75>
  406e97:	nop    WORD PTR [rax+rax*1+0x0]
  406ea0:	xor    eax,eax
  406ea2:	jmp    406dfe <__gcov_sort_n_vals@@Base+0xb5e>
  406ea7:	mov    edi,0x1
  406eac:	call   405980 <build_ast@@Base+0x100>
  406eb1:	test   rax,rax
  406eb4:	je     406e46 <__gcov_sort_n_vals@@Base+0xba6>
  406eb6:	xor    r15d,r15d
  406eb9:	mov    eax,DWORD PTR [rax]
  406ebb:	cmp    ebp,r15d
  406ebe:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  406ec0:	mov    esi,DWORD PTR [rbx]
  406ec2:	lea    edx,[rsi+rsi*1]
  406ec5:	cmp    edx,eax
  406ec7:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  406ecd:	mov    rdi,QWORD PTR [rbx+0x8]
  406ed1:	add    rbx,0x10
  406ed5:	call   r14
  406ed8:	add    ebp,0x20000
  406ede:	add    r13,0x8
  406ee2:	cmp    ebp,0x1b50000
  406ee8:	jne    4076e9 <__gcov_sort_n_vals@@Base+0x1449>
  406eee:	mov    rax,QWORD PTR [rsp+0x70]
  406ef3:	cmp    QWORD PTR [rax],0x0
  406ef7:	je     406f0f <__gcov_sort_n_vals@@Base+0xc6f>
  406ef9:	mov    eax,DWORD PTR [rax+0x18]
  406efc:	test   eax,eax
  406efe:	je     406de9 <__gcov_sort_n_vals@@Base+0xb49>
  406f04:	test   eax,eax
  406f06:	lea    rdx,[rip+0x1c12]        # 408b1f <_IO_stdin_used@@Base+0xb1f>
  406f0d:	js     406f16 <__gcov_sort_n_vals@@Base+0xc76>
  406f0f:	lea    rdx,[rip+0x1c12]        # 408b28 <_IO_stdin_used@@Base+0xb28>
  406f16:	mov    rsi,QWORD PTR [rsp+0x10]
  406f1b:	lea    rdi,[rip+0x1c7e]        # 408ba0 <_IO_stdin_used@@Base+0xba0>
  406f22:	xor    eax,eax
  406f24:	call   405a00 <build_ast@@Base+0x180>
  406f29:	jmp    406894 <__gcov_sort_n_vals@@Base+0x5f4>
  406f2e:	mov    r15,0x40ee20
  406f35:	xor    edx,edx
  406f37:	xor    esi,esi
  406f39:	mov    rdi,QWORD PTR [r15]
  406f3c:	mov    DWORD PTR [r15+0x1c],0xffffffff
  406f44:	mov    DWORD PTR [r15+0x8],0x0
  406f4c:	mov    DWORD PTR [r15+0xc],0x0
  406f54:	call   4021b0 <fseek@plt>
  406f59:	mov    rdi,QWORD PTR [rsp+0x30]
  406f5e:	xor    eax,eax
  406f60:	mov    ecx,0x2f9
  406f65:	rep stos QWORD PTR es:[rdi],rax
  406f68:	cmp    QWORD PTR [r12+0x20],0x0
  406f6e:	je     407510 <__gcov_sort_n_vals@@Base+0x1270>
  406f74:	mov    DWORD PTR [rsp+0x28],0x0
  406f7c:	xor    eax,eax
  406f7e:	mov    DWORD PTR [rsp+0x18],0x0
  406f86:	mov    r9d,DWORD PTR [rsp+0x6c]
  406f8b:	test   r9d,r9d
  406f8e:	jne    406f9a <__gcov_sort_n_vals@@Base+0xcfa>
  406f90:	lea    edx,[rax+0x1]
  406f93:	mov    DWORD PTR [rsp+0x186c],edx
  406f9a:	test   eax,eax
  406f9c:	je     407489 <__gcov_sort_n_vals@@Base+0x11e9>
  406fa2:	mov    rax,QWORD PTR [rsp+0xa0]
  406faa:	add    QWORD PTR [rsp+0x1870],rax
  406fb2:	mov    rax,QWORD PTR [rsp+0xa8]
  406fba:	cmp    QWORD PTR [rsp+0x1878],rax
  406fc2:	jl     4075fd <__gcov_sort_n_vals@@Base+0x135d>
  406fc8:	lea    rdi,[rsp+0x3030]
  406fd0:	add    QWORD PTR [rsp+0x1880],rax
  406fd8:	mov    ecx,0x2f4
  406fdd:	xor    eax,eax
  406fdf:	xor    r11d,r11d
  406fe2:	xor    r14d,r14d
  406fe5:	mov    QWORD PTR [rsp+0x40],rdi
  406fea:	mov    esi,0xfb
  406fef:	mov    r8d,0xfb
  406ff5:	rep stos QWORD PTR es:[rdi],rax
  406ff8:	mov    rax,QWORD PTR [rsp+0x30]
  406ffd:	xor    edi,edi
  406fff:	lea    rbp,[rax+0x17b0]
  407006:	mov    rax,QWORD PTR [rsp+0x8]
  40700b:	lea    r15,[rax+0x28]
  40700f:	mov    r10d,DWORD PTR [rbp+0x0]
  407013:	mov    rbx,QWORD PTR [rbp+0x10]
  407017:	mov    ecx,r14d
  40701a:	test   r10d,r10d
  40701d:	je     4073af <__gcov_sort_n_vals@@Base+0x110f>
  407023:	nop    DWORD PTR [rax+rax*1+0x0]
  407028:	test   edi,edi
  40702a:	jne    407320 <__gcov_sort_n_vals@@Base+0x1080>
  407030:	test   esi,esi
  407032:	js     40707a <__gcov_sort_n_vals@@Base+0xdda>
  407034:	movsxd rax,esi
  407037:	lea    rax,[rax+rax*2]
  40703b:	shl    rax,0x3
  40703f:	lea    rdx,[r15+rax*1]
  407043:	mov    edi,DWORD PTR [rdx]
  407045:	test   edi,edi
  407047:	jne    407480 <__gcov_sort_n_vals@@Base+0x11e0>
  40704d:	mov    rdi,QWORD PTR [rsp+0x8]
  407052:	lea    rax,[rdi+rax*1+0x10]
  407057:	jmp    407072 <__gcov_sort_n_vals@@Base+0xdd2>
  407059:	nop    DWORD PTR [rax+0x0]
  407060:	mov    rdx,rax
  407063:	sub    rax,0x18
  407067:	mov    edi,DWORD PTR [rax+0x18]
  40706a:	test   edi,edi
  40706c:	jne    407480 <__gcov_sort_n_vals@@Base+0x11e0>
  407072:	sub    esi,0x1
  407075:	cmp    esi,0xffffffff
  407078:	jne    407060 <__gcov_sort_n_vals@@Base+0xdc0>
  40707a:	movsxd rdx,r8d
  40707d:	movsxd r14,ecx
  407080:	mov    rcx,QWORD PTR [rbp+0x8]
  407084:	lea    rax,[rdx+rdx*2]
  407088:	shl    rax,0x3
  40708c:	add    DWORD PTR [rsp+rax*1+0x3030],r10d
  407094:	add    QWORD PTR [rsp+rax*1+0x3040],rbx
  40709c:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  4070a4:	test   rax,rax
  4070a7:	je     4070ae <__gcov_sort_n_vals@@Base+0xe0e>
  4070a9:	cmp    rax,rcx
  4070ac:	jle    4070ba <__gcov_sort_n_vals@@Base+0xe1a>
  4070ae:	lea    rax,[rdx+rdx*2]
  4070b2:	mov    QWORD PTR [rsp+rax*8+0x3038],rcx
  4070ba:	lea    rax,[rdx+rdx*2]
  4070be:	mov    rbx,QWORD PTR [rsp+0x30]
  4070c3:	shl    rax,0x3
  4070c7:	lea    rdx,[rbx+rax*1+0x10]
  4070cc:	mov    rbx,QWORD PTR [rsp+0x40]
  4070d1:	lea    rax,[rbx+rax*1-0x18]
  4070d6:	jmp    40710a <__gcov_sort_n_vals@@Base+0xe6a>
  4070d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4070e0:	mov    ecx,DWORD PTR [rdx]
  4070e2:	add    DWORD PTR [rax],ecx
  4070e4:	mov    rcx,QWORD PTR [rdx+0x10]
  4070e8:	add    QWORD PTR [rax+0x10],rcx
  4070ec:	mov    rcx,QWORD PTR [rax+0x8]
  4070f0:	mov    rsi,QWORD PTR [rdx+0x8]
  4070f4:	test   rcx,rcx
  4070f7:	je     4070fe <__gcov_sort_n_vals@@Base+0xe5e>
  4070f9:	cmp    rcx,rsi
  4070fc:	jle    407102 <__gcov_sort_n_vals@@Base+0xe62>
  4070fe:	mov    QWORD PTR [rax+0x8],rsi
  407102:	sub    rdx,0x18
  407106:	sub    rax,0x18
  40710a:	sub    r8d,0x1
  40710e:	jns    4070e0 <__gcov_sort_n_vals@@Base+0xe40>
  407110:	lea    rax,[r14+r14*2]
  407114:	lea    rdi,[rsp+0x1888]
  40711c:	mov    ecx,0x2f4
  407121:	mov    rsi,QWORD PTR [rsp+0x40]
  407126:	add    QWORD PTR [rsp+rax*8+0x3040],r11
  40712e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  407131:	mov    r8d,DWORD PTR [rsp+0x28]
  407136:	mov    eax,DWORD PTR [rsp+0x60]
  40713a:	test   r8d,r8d
  40713d:	mov    DWORD PTR [rsp+0x1860],eax
  407144:	je     407523 <__gcov_sort_n_vals@@Base+0x1283>
  40714a:	mov    edi,DWORD PTR [rsp+0x18]
  40714e:	test   edi,edi
  407150:	jne    407557 <__gcov_sort_n_vals@@Base+0x12b7>
  407156:	mov    rsi,QWORD PTR [rsp+0x30]
  40715b:	mov    edi,0xa3000000
  407160:	mov    ebx,0xa3000000
  407165:	call   405dd0 <build_ast@@Base+0x550>
  40716a:	mov    rbp,QWORD PTR [rip+0x758f]        # 40e700 <__bss_start@@Base+0xf90>
  407171:	test   rbp,rbp
  407174:	je     40719c <__gcov_sort_n_vals@@Base+0xefc>
  407176:	lea    rsi,[rbp+0x8]
  40717a:	mov    edi,ebx
  40717c:	call   405dd0 <build_ast@@Base+0x550>
  407181:	mov    rdi,QWORD PTR [rip+0x7578]        # 40e700 <__bss_start@@Base+0xf90>
  407188:	mov    rbp,QWORD PTR [rdi]
  40718b:	call   402040 <free@plt>
  407190:	test   rbp,rbp
  407193:	mov    QWORD PTR [rip+0x7566],rbp        # 40e700 <__bss_start@@Base+0xf90>
  40719a:	jne    407176 <__gcov_sort_n_vals@@Base+0xed6>
  40719c:	mov    esi,DWORD PTR [r12+0x70]
  4071a1:	mov    DWORD PTR [rsp+0x18],0x0
  4071a9:	test   esi,esi
  4071ab:	je     4074fb <__gcov_sort_n_vals@@Base+0x125b>
  4071b1:	mov    QWORD PTR [rsp+0x28],r12
  4071b6:	jmp    407206 <__gcov_sort_n_vals@@Base+0xf66>
  4071b8:	mov    rbx,QWORD PTR [rsp+0x28]
  4071bd:	mov    eax,DWORD PTR [rsp+0x18]
  4071c1:	mov    rdx,QWORD PTR [rbx+0x78]
  4071c5:	mov    rbp,QWORD PTR [rdx+rax*8]
  4071c9:	test   rbp,rbp
  4071cc:	je     4071d8 <__gcov_sort_n_vals@@Base+0xf38>
  4071ce:	cmp    QWORD PTR [rbp+0x0],rbx
  4071d2:	je     4074eb <__gcov_sort_n_vals@@Base+0x124b>
  4071d8:	mov    edi,0x2
  4071dd:	call   405930 <build_ast@@Base+0xb0>
  4071e2:	mov    DWORD PTR [rax],0x1000000
  4071e8:	mov    DWORD PTR [rax+0x4],0x0
  4071ef:	mov    rbx,QWORD PTR [rsp+0x28]
  4071f4:	add    DWORD PTR [rsp+0x18],0x1
  4071f9:	mov    eax,DWORD PTR [rsp+0x18]
  4071fd:	cmp    eax,DWORD PTR [rbx+0x70]
  407200:	je     4074f8 <__gcov_sort_n_vals@@Base+0x1258>
  407206:	mov    rbp,QWORD PTR [rip+0x74fb]        # 40e708 <__bss_start@@Base+0xf98>
  40720d:	test   rbp,rbp
  407210:	je     4071b8 <__gcov_sort_n_vals@@Base+0xf18>
  407212:	mov    eax,DWORD PTR [rsp+0x18]
  407216:	cmp    DWORD PTR [rbp+0x8],eax
  407219:	jne    4071b8 <__gcov_sort_n_vals@@Base+0xf18>
  40721b:	add    rbp,0x10
  40721f:	mov    DWORD PTR [rsp+0x40],0x1
  407227:	mov    edi,0x2
  40722c:	add    rbp,0x18
  407230:	mov    r13d,0x1a10000
  407236:	call   405930 <build_ast@@Base+0xb0>
  40723b:	mov    DWORD PTR [rax],0x1000000
  407241:	mov    DWORD PTR [rax+0x4],0x3
  407248:	mov    edi,0x1
  40724d:	mov    ebx,DWORD PTR [rbp-0x10]
  407250:	call   405930 <build_ast@@Base+0xb0>
  407255:	mov    edi,0x1
  40725a:	mov    DWORD PTR [rax],ebx
  40725c:	mov    ebx,DWORD PTR [rbp-0xc]
  40725f:	call   405930 <build_ast@@Base+0xb0>
  407264:	mov    edi,0x1
  407269:	mov    DWORD PTR [rax],ebx
  40726b:	mov    ebx,DWORD PTR [rbp-0x8]
  40726e:	call   405930 <build_ast@@Base+0xb0>
  407273:	mov    DWORD PTR [rax],ebx
  407275:	mov    rax,QWORD PTR [rsp+0x28]
  40727a:	lea    r14,[rax+0x20]
  40727e:	xchg   ax,ax
  407280:	cmp    QWORD PTR [r14],0x0
  407284:	je     4072d4 <__gcov_sort_n_vals@@Base+0x1034>
  407286:	mov    ebx,DWORD PTR [rbp+0x0]
  407289:	mov    edi,0x2
  40728e:	call   405930 <build_ast@@Base+0xb0>
  407293:	mov    r15,QWORD PTR [rbp+0x8]
  407297:	mov    DWORD PTR [rax],r13d
  40729a:	lea    edx,[rbx+rbx*1]
  40729d:	test   ebx,ebx
  40729f:	mov    DWORD PTR [rax+0x4],edx
  4072a2:	lea    eax,[rbx-0x1]
  4072a5:	lea    r12,[r15+rax*8+0x8]
  4072aa:	je     4072d0 <__gcov_sort_n_vals@@Base+0x1030>
  4072ac:	nop    DWORD PTR [rax+0x0]
  4072b0:	add    r15,0x8
  4072b4:	mov    rbx,QWORD PTR [r15-0x8]
  4072b8:	mov    edi,0x2
  4072bd:	call   405930 <build_ast@@Base+0xb0>
  4072c2:	mov    DWORD PTR [rax],ebx
  4072c4:	sar    rbx,0x20
  4072c8:	cmp    r12,r15
  4072cb:	mov    DWORD PTR [rax+0x4],ebx
  4072ce:	jne    4072b0 <__gcov_sort_n_vals@@Base+0x1010>
  4072d0:	add    rbp,0x10
  4072d4:	add    r13d,0x20000
  4072db:	add    r14,0x8
  4072df:	cmp    r13d,0x1b50000
  4072e6:	jne    407280 <__gcov_sort_n_vals@@Base+0xfe0>
  4072e8:	mov    ecx,DWORD PTR [rsp+0x40]
  4072ec:	test   ecx,ecx
  4072ee:	je     4071ef <__gcov_sort_n_vals@@Base+0xf4f>
  4072f4:	mov    rsi,QWORD PTR [rip+0x740d]        # 40e708 <__bss_start@@Base+0xf98>
  4072fb:	mov    rdi,QWORD PTR [rsp+0x28]
  407300:	mov    edx,0xa
  407305:	call   405ab0 <build_ast@@Base+0x230>
  40730a:	mov    QWORD PTR [rip+0x73f7],rax        # 40e708 <__bss_start@@Base+0xf98>
  407311:	jmp    4071ef <__gcov_sort_n_vals@@Base+0xf4f>
  407316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407320:	movsxd rax,esi
  407323:	lea    rax,[rax+rax*2]
  407327:	lea    rdx,[r15+rax*8]
  40732b:	mov    r9,QWORD PTR [rdx+0x8]
  40732f:	add    r9,QWORD PTR [rbp+0x8]
  407333:	cmp    r10d,edi
  407336:	ja     407450 <__gcov_sort_n_vals@@Base+0x11b0>
  40733c:	cmp    r10d,edi
  40733f:	jae    4075f2 <__gcov_sort_n_vals@@Base+0x1352>
  407345:	mov    eax,r10d
  407348:	mov    ecx,edi
  40734a:	imul   rax,r11
  40734e:	cqo    
  407350:	idiv   rcx
  407353:	sub    r11,rax
  407356:	sub    edi,r10d
  407359:	mov    r14d,r10d
  40735c:	mov    r13,rbx
  40735f:	xor    r10d,r10d
  407362:	xor    ebx,ebx
  407364:	add    r13,rax
  407367:	test   r9,r9
  40736a:	jne    407410 <__gcov_sort_n_vals@@Base+0x1170>
  407370:	mov    ecx,r9d
  407373:	movsxd rdx,ecx
  407376:	lea    rax,[rdx+rdx*2]
  40737a:	shl    rax,0x3
  40737e:	add    DWORD PTR [rsp+rax*1+0x3030],r14d
  407386:	add    QWORD PTR [rsp+rax*1+0x3040],r13
  40738e:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  407396:	test   rax,rax
  407399:	je     407400 <__gcov_sort_n_vals@@Base+0x1160>
  40739b:	cmp    rax,r9
  40739e:	jg     407400 <__gcov_sort_n_vals@@Base+0x1160>
  4073a0:	cmp    edi,0x1
  4073a3:	sbb    esi,0x0
  4073a6:	test   r10d,r10d
  4073a9:	jne    407028 <__gcov_sort_n_vals@@Base+0xd88>
  4073af:	sub    r8d,0x1
  4073b3:	sub    rbp,0x18
  4073b7:	movsxd r14,ecx
  4073ba:	cmp    r8d,0xffffffff
  4073be:	jne    40700f <__gcov_sort_n_vals@@Base+0xd6f>
  4073c4:	cmp    edi,0x1
  4073c7:	adc    esi,0xffffffff
  4073ca:	test   esi,esi
  4073cc:	js     407110 <__gcov_sort_n_vals@@Base+0xe70>
  4073d2:	mov    rbx,QWORD PTR [rsp+0x8]
  4073d7:	movsxd rsi,esi
  4073da:	lea    rax,[rsi+rsi*2]
  4073de:	lea    rdx,[rbx+0x20]
  4073e2:	lea    rax,[rbx+rax*8+0x38]
  4073e7:	add    r11,QWORD PTR [rax]
  4073ea:	sub    rax,0x18
  4073ee:	cmp    rdx,rax
  4073f1:	jne    4073e7 <__gcov_sort_n_vals@@Base+0x1147>
  4073f3:	jmp    407110 <__gcov_sort_n_vals@@Base+0xe70>
  4073f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407400:	lea    rax,[rdx+rdx*2]
  407404:	mov    QWORD PTR [rsp+rax*8+0x3038],r9
  40740c:	jmp    4073a0 <__gcov_sort_n_vals@@Base+0x1100>
  40740e:	xchg   ax,ax
  407410:	bsr    rax,r9
  407414:	mov    edx,0x3f
  407419:	xor    rax,0x3f
  40741d:	sub    edx,eax
  40741f:	cmp    edx,0x1
  407422:	jbe    407370 <__gcov_sort_n_vals@@Base+0x10d0>
  407428:	mov    ecx,0x3d
  40742d:	mov    rdx,r9
  407430:	sub    ecx,eax
  407432:	shr    rdx,cl
  407435:	mov    ecx,0x4000003e
  40743a:	and    edx,0x3
  40743d:	sub    ecx,eax
  40743f:	lea    ecx,[rdx+rcx*4]
  407442:	jmp    407373 <__gcov_sort_n_vals@@Base+0x10d3>
  407447:	nop    WORD PTR [rax+rax*1+0x0]
  407450:	mov    eax,edi
  407452:	mov    ecx,r10d
  407455:	mov    r14d,edi
  407458:	imul   rax,rbx
  40745c:	sub    r10d,edi
  40745f:	xor    edi,edi
  407461:	cqo    
  407463:	idiv   rcx
  407466:	mov    r13,rax
  407469:	sub    rbx,rax
  40746c:	mov    rax,r11
  40746f:	xor    r11d,r11d
  407472:	jmp    407364 <__gcov_sort_n_vals@@Base+0x10c4>
  407477:	nop    WORD PTR [rax+rax*1+0x0]
  407480:	mov    r11,QWORD PTR [rdx+0x10]
  407484:	jmp    40732b <__gcov_sort_n_vals@@Base+0x108b>
  407489:	mov    eax,DWORD PTR [rsp+0x98]
  407490:	mov    DWORD PTR [rsp+0x1868],eax
  407497:	mov    rax,QWORD PTR [rsp+0xa0]
  40749f:	add    QWORD PTR [rsp+0x1870],rax
  4074a7:	mov    rax,QWORD PTR [rsp+0xa8]
  4074af:	cmp    QWORD PTR [rsp+0x1878],rax
  4074b7:	jge    4074c1 <__gcov_sort_n_vals@@Base+0x1221>
  4074b9:	mov    QWORD PTR [rsp+0x1878],rax
  4074c1:	add    QWORD PTR [rsp+0x1880],rax
  4074c9:	mov    rax,QWORD PTR [rsp+0x30]
  4074ce:	mov    ecx,0x2f4
  4074d3:	mov    rbx,QWORD PTR [rsp+0x8]
  4074d8:	add    rax,0x28
  4074dc:	lea    rsi,[rbx+0x28]
  4074e0:	mov    rdi,rax
  4074e3:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4074e6:	jmp    407131 <__gcov_sort_n_vals@@Base+0xe91>
  4074eb:	mov    DWORD PTR [rsp+0x40],0x0
  4074f3:	jmp    407227 <__gcov_sort_n_vals@@Base+0xf87>
  4074f8:	mov    r12,rbx
  4074fb:	mov    edi,0x1
  407500:	call   405930 <build_ast@@Base+0xb0>
  407505:	mov    DWORD PTR [rax],0x0
  40750b:	jmp    406894 <__gcov_sort_n_vals@@Base+0x5f4>
  407510:	mov    eax,DWORD PTR [rsp+0x60]
  407514:	mov    DWORD PTR [rsp+0x18],0x0
  40751c:	mov    DWORD PTR [rsp+0x1860],eax
  407523:	mov    edi,0x2
  407528:	call   405930 <build_ast@@Base+0xb0>
  40752d:	mov    edi,0x1
  407532:	mov    DWORD PTR [rax],0x67636461
  407538:	mov    DWORD PTR [rax+0x4],0x3630342a
  40753f:	mov    ebx,DWORD PTR [r12+0x10]
  407544:	call   405930 <build_ast@@Base+0xb0>
  407549:	mov    edi,DWORD PTR [rsp+0x18]
  40754d:	mov    DWORD PTR [rax],ebx
  40754f:	test   edi,edi
  407551:	je     407156 <__gcov_sort_n_vals@@Base+0xeb6>
  407557:	mov    edi,DWORD PTR [rsp+0x18]
  40755b:	call   406250 <build_ast@@Base+0x9d0>
  407560:	jmp    407156 <__gcov_sort_n_vals@@Base+0xeb6>
  407565:	nop    DWORD PTR [rax]
  407568:	mov    ebp,DWORD PTR [rsp+0x3c]
  40756c:	test   ebp,ebp
  40756e:	je     4075b7 <__gcov_sort_n_vals@@Base+0x1317>
  407570:	mov    QWORD PTR [rsp+0x20],0x1
  407579:	lea    rbx,[rip+0x15ca]        # 408b4a <_IO_stdin_used@@Base+0xb4a>
  407580:	jmp    406709 <__gcov_sort_n_vals@@Base+0x469>
  407585:	lea    rdi,[rip+0x15d2]        # 408b5e <_IO_stdin_used@@Base+0xb5e>
  40758c:	call   402030 <getenv@plt>
  407591:	test   rax,rax
  407594:	mov    rbx,rax
  407597:	je     4075b7 <__gcov_sort_n_vals@@Base+0x1317>
  407599:	mov    rdi,rax
  40759c:	call   4020f0 <strlen@plt>
  4075a1:	test   rax,rax
  4075a4:	mov    QWORD PTR [rsp+0x20],rax
  4075a9:	mov    DWORD PTR [rsp+0x3c],0x0
  4075b1:	jne    4066f2 <__gcov_sort_n_vals@@Base+0x452>
  4075b7:	mov    rdi,r14
  4075ba:	call   402180 <malloc@plt>
  4075bf:	mov    DWORD PTR [rsp+0x3c],0x0
  4075c7:	mov    QWORD PTR [rsp+0x10],rax
  4075cc:	mov    QWORD PTR [rsp+0x20],0x0
  4075d5:	jmp    40672a <__gcov_sort_n_vals@@Base+0x48a>
  4075da:	mov    DWORD PTR [rsp+0x18],r13d
  4075df:	jmp    406bcf <__gcov_sort_n_vals@@Base+0x92f>
  4075e4:	xor    esi,esi
  4075e6:	jmp    406ab5 <__gcov_sort_n_vals@@Base+0x815>
  4075eb:	xor    eax,eax
  4075ed:	jmp    406ae9 <__gcov_sort_n_vals@@Base+0x849>
  4075f2:	mov    rax,r11
  4075f5:	xor    r11d,r11d
  4075f8:	jmp    407356 <__gcov_sort_n_vals@@Base+0x10b6>
  4075fd:	mov    QWORD PTR [rsp+0x1878],rax
  407605:	jmp    406fc8 <__gcov_sort_n_vals@@Base+0xd28>
  40760a:	call   402060 <abort@plt>
  40760f:	test   rax,rax
  407612:	je     407568 <__gcov_sort_n_vals@@Base+0x12c8>
  407618:	mov    QWORD PTR [rsp+0x20],rax
  40761d:	jmp    406709 <__gcov_sort_n_vals@@Base+0x469>
  407622:	mov    DWORD PTR [rsp+0x98],r12d
  40762a:	jmp    40652a <__gcov_sort_n_vals@@Base+0x28a>
  40762f:	mov    rbx,QWORD PTR [rbx+0x8]
  407633:	mov    QWORD PTR [rsp+0xa8],rsi
  40763b:	test   rbx,rbx
  40763e:	jne    40637e <__gcov_sort_n_vals@@Base+0xde>
  407644:	jmp    40654d <__gcov_sort_n_vals@@Base+0x2ad>
  407649:	mov    r14d,0x2
  40764f:	xor    r15d,r15d
  407652:	jmp    406692 <__gcov_sort_n_vals@@Base+0x3f2>
  407657:	mov    ebp,ebx
  407659:	lea    rcx,[rip+0x14ae]        # 408b0e <_IO_stdin_used@@Base+0xb0e>
  407660:	jmp    406e15 <__gcov_sort_n_vals@@Base+0xb75>
  407665:	mov    ecx,r15d
  407668:	mov    r13,QWORD PTR [rsp+0x40]
  40766d:	mov    ebx,ebp
  40766f:	jmp    406e81 <__gcov_sort_n_vals@@Base+0xbe1>
  407674:	xor    eax,eax
  407676:	jmp    406ce2 <__gcov_sort_n_vals@@Base+0xa42>
  40767b:	xor    eax,eax
  40767d:	jmp    406cc9 <__gcov_sort_n_vals@@Base+0xa29>
  407682:	xor    eax,eax
  407684:	jmp    406cb0 <__gcov_sort_n_vals@@Base+0xa10>
  407689:	mov    edi,0x1
  40768e:	call   405980 <build_ast@@Base+0x100>
  407693:	test   rax,rax
  407696:	je     40772e <__gcov_sort_n_vals@@Base+0x148e>
  40769c:	mov    eax,DWORD PTR [rax]
  40769e:	cmp    DWORD PTR [rbx+0x8],eax
  4076a1:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  4076a7:	mov    edi,0x1
  4076ac:	call   405980 <build_ast@@Base+0x100>
  4076b1:	test   rax,rax
  4076b4:	je     40772a <__gcov_sort_n_vals@@Base+0x148a>
  4076b6:	mov    eax,DWORD PTR [rax]
  4076b8:	cmp    DWORD PTR [rbx+0xc],eax
  4076bb:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  4076c1:	mov    edi,0x1
  4076c6:	call   405980 <build_ast@@Base+0x100>
  4076cb:	test   rax,rax
  4076ce:	je     407726 <__gcov_sort_n_vals@@Base+0x1486>
  4076d0:	mov    eax,DWORD PTR [rax]
  4076d2:	cmp    DWORD PTR [rbx+0x10],eax
  4076d5:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  4076db:	lea    r13,[r12+0x20]
  4076e0:	add    rbx,0x18
  4076e4:	mov    ebp,0x1a10000
  4076e9:	mov    r14,QWORD PTR [r13+0x0]
  4076ed:	test   r14,r14
  4076f0:	je     406ed8 <__gcov_sort_n_vals@@Base+0xc38>
  4076f6:	mov    edi,0x1
  4076fb:	call   405980 <build_ast@@Base+0x100>
  407700:	test   rax,rax
  407703:	je     406ea7 <__gcov_sort_n_vals@@Base+0xc07>
  407709:	mov    edi,0x1
  40770e:	mov    r15d,DWORD PTR [rax]
  407711:	call   405980 <build_ast@@Base+0x100>
  407716:	test   rax,rax
  407719:	jne    406eb9 <__gcov_sort_n_vals@@Base+0xc19>
  40771f:	xor    eax,eax
  407721:	jmp    406ebb <__gcov_sort_n_vals@@Base+0xc1b>
  407726:	xor    eax,eax
  407728:	jmp    4076d2 <__gcov_sort_n_vals@@Base+0x1432>
  40772a:	xor    eax,eax
  40772c:	jmp    4076b8 <__gcov_sort_n_vals@@Base+0x1418>
  40772e:	xor    eax,eax
  407730:	jmp    40769e <__gcov_sort_n_vals@@Base+0x13fe>
  407735:	test   eax,eax
  407737:	mov    r15,QWORD PTR [rsp+0x70]
  40773c:	jne    406e46 <__gcov_sort_n_vals@@Base+0xba6>
  407742:	mov    rdi,QWORD PTR [r15]
  407745:	xor    edx,edx
  407747:	xor    esi,esi
  407749:	mov    DWORD PTR [r15+0x1c],0xffffffff
  407751:	mov    DWORD PTR [r15+0x8],0x0
  407759:	mov    DWORD PTR [r15+0xc],0x0
  407761:	call   4021b0 <fseek@plt>
  407766:	mov    r10d,DWORD PTR [rsp+0x18]
  40776b:	test   r10d,r10d
  40776e:	je     4077ac <__gcov_sort_n_vals@@Base+0x150c>
  407770:	cmp    QWORD PTR [r12+0x20],0x0
  407776:	mov    eax,DWORD PTR [rsp+0x186c]
  40777d:	jne    406f86 <__gcov_sort_n_vals@@Base+0xce6>
  407783:	test   eax,eax
  407785:	jne    4077de <__gcov_sort_n_vals@@Base+0x153e>
  407787:	mov    eax,DWORD PTR [rsp+0x60]
  40778b:	mov    DWORD PTR [rsp+0x1860],eax
  407792:	mov    eax,DWORD PTR [rsp+0x28]
  407796:	test   eax,eax
  407798:	je     407523 <__gcov_sort_n_vals@@Base+0x1283>
  40779e:	mov    edi,DWORD PTR [rsp+0x18]
  4077a2:	call   406250 <build_ast@@Base+0x9d0>
  4077a7:	jmp    407156 <__gcov_sort_n_vals@@Base+0xeb6>
  4077ac:	mov    rdi,QWORD PTR [rsp+0x30]
  4077b1:	xor    eax,eax
  4077b3:	mov    ecx,0x2f9
  4077b8:	rep stos QWORD PTR es:[rdi],rax
  4077bb:	mov    eax,DWORD PTR [rsp+0x28]
  4077bf:	cmp    QWORD PTR [r12+0x20],0x0
  4077c5:	je     4077f6 <__gcov_sort_n_vals@@Base+0x1556>
  4077c7:	mov    edx,DWORD PTR [rsp+0x6c]
  4077cb:	mov    DWORD PTR [rsp+0x18],eax
  4077cf:	test   edx,edx
  4077d1:	jne    407489 <__gcov_sort_n_vals@@Base+0x11e9>
  4077d7:	xor    eax,eax
  4077d9:	jmp    406f90 <__gcov_sort_n_vals@@Base+0xcf0>
  4077de:	mov    rsi,QWORD PTR [rsp+0x10]
  4077e3:	lea    rdi,[rip+0x12e6]        # 408ad0 <_IO_stdin_used@@Base+0xad0>
  4077ea:	xor    eax,eax
  4077ec:	call   405a00 <build_ast@@Base+0x180>
  4077f1:	jmp    406894 <__gcov_sort_n_vals@@Base+0x5f4>
  4077f6:	mov    DWORD PTR [rsp+0x18],eax
  4077fa:	jmp    407131 <__gcov_sort_n_vals@@Base+0xe91>
  4077ff:	nop
  407800:	movzx  esi,BYTE PTR [rip+0x7601]        # 40ee08 <fff@@Base+0x1a8>
  407807:	test   sil,0x1
  40780b:	je     407838 <__gcov_sort_n_vals@@Base+0x1598>
  40780d:	mov    rax,QWORD PTR [rip+0x75fc]        # 40ee10 <fff@@Base+0x1b0>
  407814:	test   rax,rax
  407817:	je     407824 <__gcov_sort_n_vals@@Base+0x1584>
  407819:	mov    rdx,QWORD PTR [rip+0x75f8]        # 40ee18 <fff@@Base+0x1b8>
  407820:	mov    QWORD PTR [rax+0x18],rdx
  407824:	mov    rdx,QWORD PTR [rip+0x75ed]        # 40ee18 <fff@@Base+0x1b8>
  40782b:	test   rdx,rdx
  40782e:	je     407888 <__gcov_sort_n_vals@@Base+0x15e8>
  407830:	mov    QWORD PTR [rdx+0x10],rax
  407834:	ret    
  407835:	nop    DWORD PTR [rax]
  407838:	sub    rsp,0x8
  40783c:	mov    rdi,QWORD PTR [rip+0x75bd]        # 40ee00 <fff@@Base+0x1a0>
  407843:	shr    sil,1
  407846:	and    esi,0x1
  407849:	call   406330 <__gcov_sort_n_vals@@Base+0x90>
  40784e:	mov    rax,QWORD PTR [rip+0x75bb]        # 40ee10 <fff@@Base+0x1b0>
  407855:	or     BYTE PTR [rip+0x75ac],0x3        # 40ee08 <fff@@Base+0x1a8>
  40785c:	test   rax,rax
  40785f:	je     40786c <__gcov_sort_n_vals@@Base+0x15cc>
  407861:	mov    rdx,QWORD PTR [rip+0x75b0]        # 40ee18 <fff@@Base+0x1b8>
  407868:	mov    QWORD PTR [rax+0x18],rdx
  40786c:	mov    rdx,QWORD PTR [rip+0x75a5]        # 40ee18 <fff@@Base+0x1b8>
  407873:	test   rdx,rdx
  407876:	je     407898 <__gcov_sort_n_vals@@Base+0x15f8>
  407878:	mov    QWORD PTR [rdx+0x10],rax
  40787c:	add    rsp,0x8
  407880:	ret    
  407881:	nop    DWORD PTR [rax+0x0]
  407888:	mov    rdx,0x40d760
  40788f:	mov    QWORD PTR [rdx+0x8],rax
  407893:	ret    
  407894:	nop    DWORD PTR [rax+0x0]
  407898:	mov    rdx,0x40d760
  40789f:	mov    QWORD PTR [rdx+0x8],rax
  4078a3:	jmp    40787c <__gcov_sort_n_vals@@Base+0x15dc>
  4078a5:	nop
  4078a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078b0:	movzx  esi,BYTE PTR [rdi+0x8]
  4078b4:	test   sil,0x1
  4078b8:	je     4078c0 <__gcov_sort_n_vals@@Base+0x1620>
  4078ba:	ret    
  4078bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4078c0:	push   rbx
  4078c1:	mov    rbx,rdi
  4078c4:	mov    rdi,QWORD PTR [rdi]
  4078c7:	shr    sil,1
  4078ca:	and    esi,0x1
  4078cd:	call   406330 <__gcov_sort_n_vals@@Base+0x90>
  4078d2:	or     BYTE PTR [rbx+0x8],0x3
  4078d6:	pop    rbx
  4078d7:	ret    
  4078d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4078e0:	mov    esi,DWORD PTR [rdi]
  4078e2:	test   esi,esi
  4078e4:	je     4078ed <__gcov_sort_n_vals@@Base+0x164d>
  4078e6:	mov    eax,DWORD PTR [rdi+0x70]
  4078e9:	test   eax,eax
  4078eb:	jne    4078f0 <__gcov_sort_n_vals@@Base+0x1650>
  4078ed:	ret    
  4078ee:	xchg   ax,ax
  4078f0:	push   r12
  4078f2:	push   rbp
  4078f3:	xor    edx,edx
  4078f5:	push   rbx
  4078f6:	mov    rbx,rdi
  4078f9:	lea    rdi,[rdi+0x18]
  4078fd:	call   405b20 <build_ast@@Base+0x2a0>
  407902:	test   eax,eax
  407904:	je     407924 <__gcov_sort_n_vals@@Base+0x1684>
  407906:	mov    rax,QWORD PTR [rip+0x74f3]        # 40ee00 <fff@@Base+0x1a0>
  40790d:	lea    rbp,[rip+0x74ec]        # 40ee00 <fff@@Base+0x1a0>
  407914:	test   rax,rax
  407917:	je     407929 <__gcov_sort_n_vals@@Base+0x1689>
  407919:	mov    QWORD PTR [rbx+0x8],rax
  40791d:	mov    QWORD PTR [rip+0x74dc],rbx        # 40ee00 <fff@@Base+0x1a0>
  407924:	pop    rbx
  407925:	pop    rbp
  407926:	pop    r12
  407928:	ret    
  407929:	mov    r12,0x40d760
  407930:	lea    rdx,[rip+0x1282]        # 408bb9 <_IO_stdin_used@@Base+0xbb9>
  407937:	mov    edi,0x18
  40793c:	mov    esi,DWORD PTR [r12]
  407940:	call   405b20 <build_ast@@Base+0x2a0>
  407945:	test   eax,eax
  407947:	je     407963 <__gcov_sort_n_vals@@Base+0x16c3>
  407949:	mov    rax,QWORD PTR [r12+0x8]
  40794e:	test   rax,rax
  407951:	mov    QWORD PTR [rip+0x74b8],rax        # 40ee10 <fff@@Base+0x1b0>
  407958:	je     40795e <__gcov_sort_n_vals@@Base+0x16be>
  40795a:	mov    QWORD PTR [rax+0x18],rbp
  40795e:	mov    QWORD PTR [r12+0x8],rbp
  407963:	lea    rdi,[rip+0xfffffffffffffe96]        # 407800 <__gcov_sort_n_vals@@Base+0x1560>
  40796a:	call   407a60 <__libc_csu_fini@@Base+0x10>
  40796f:	mov    rax,QWORD PTR [rip+0x748a]        # 40ee00 <fff@@Base+0x1a0>
  407976:	jmp    407919 <__gcov_sort_n_vals@@Base+0x1679>
  407978:	nop    DWORD PTR [rax+rax*1+0x0]
  407980:	mov    rax,rdi
  407983:	movabs rdx,0x5555555555555555
  40798d:	shr    rax,1
  407990:	and    rax,rdx
  407993:	movabs rdx,0x3333333333333333
  40799d:	sub    rdi,rax
  4079a0:	mov    rax,rdi
  4079a3:	shr    rdi,0x2
  4079a7:	and    rax,rdx
  4079aa:	and    rdi,rdx
  4079ad:	movabs rdx,0xf0f0f0f0f0f0f0f
  4079b7:	add    rdi,rax
  4079ba:	mov    rax,rdi
  4079bd:	shr    rax,0x4
  4079c1:	add    rax,rdi
  4079c4:	and    rax,rdx
  4079c7:	movabs rdx,0x101010101010101
  4079d1:	imul   rax,rdx
  4079d5:	shr    rax,0x38
  4079d9:	ret    
  4079da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004079e0 <__libc_csu_init@@Base>:
  4079e0:	endbr64 
  4079e4:	push   r15
  4079e6:	lea    r15,[rip+0x43eb]        # 40bdd8 <_IO_stdin_used@@Base+0x3dd8>
  4079ed:	push   r14
  4079ef:	mov    r14,rdx
  4079f2:	push   r13
  4079f4:	mov    r13,rsi
  4079f7:	push   r12
  4079f9:	mov    r12d,edi
  4079fc:	push   rbp
  4079fd:	lea    rbp,[rip+0x43fc]        # 40be00 <_IO_stdin_used@@Base+0x3e00>
  407a04:	push   rbx
  407a05:	sub    rbp,r15
  407a08:	sub    rsp,0x8
  407a0c:	call   402000 <getenv@plt-0x30>
  407a11:	sar    rbp,0x3
  407a15:	je     407a36 <__libc_csu_init@@Base+0x56>
  407a17:	xor    ebx,ebx
  407a19:	nop    DWORD PTR [rax+0x0]
  407a20:	mov    rdx,r14
  407a23:	mov    rsi,r13
  407a26:	mov    edi,r12d
  407a29:	call   QWORD PTR [r15+rbx*8]
  407a2d:	add    rbx,0x1
  407a31:	cmp    rbp,rbx
  407a34:	jne    407a20 <__libc_csu_init@@Base+0x40>
  407a36:	add    rsp,0x8
  407a3a:	pop    rbx
  407a3b:	pop    rbp
  407a3c:	pop    r12
  407a3e:	pop    r13
  407a40:	pop    r14
  407a42:	pop    r15
  407a44:	ret    
  407a45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000407a50 <__libc_csu_fini@@Base>:
  407a50:	endbr64 
  407a54:	ret    
  407a55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a5f:	nop
  407a60:	endbr64 
  407a64:	mov    rdx,QWORD PTR [rip+0x46bd]        # 40c128 <__data_start@@Base+0x8>
  407a6b:	xor    esi,esi
  407a6d:	jmp    402200 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000407a74 <.fini>:
  407a74:	endbr64 
  407a78:	sub    rsp,0x8
  407a7c:	add    rsp,0x8
  407a80:	ret    
