
../repos/prog2/3.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 404ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <putchar@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <putchar@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x3fe4]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <putchar@plt>:
  401030:	jmp    QWORD PTR [rip+0x3fe2]        # 405018 <putchar@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <putchar@plt-0x10>

0000000000401040 <puts@plt>:
  401040:	jmp    QWORD PTR [rip+0x3fda]        # 405020 <puts@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <putchar@plt-0x10>

0000000000401050 <strlen@plt>:
  401050:	jmp    QWORD PTR [rip+0x3fd2]        # 405028 <strlen@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <putchar@plt-0x10>

0000000000401060 <printf@plt>:
  401060:	jmp    QWORD PTR [rip+0x3fca]        # 405030 <printf@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <putchar@plt-0x10>

Disassembly of section .text:

0000000000401070 <_start@@Base>:
  401070:	endbr64 
  401074:	xor    ebp,ebp
  401076:	mov    r9,rdx
  401079:	pop    rsi
  40107a:	mov    rdx,rsp
  40107d:	and    rsp,0xfffffffffffffff0
  401081:	push   rax
  401082:	push   rsp
  401083:	mov    r8,0x402950
  40108a:	mov    rcx,0x4028e0
  401091:	mov    rdi,0x401e20
  401098:	call   QWORD PTR [rip+0x3f52]        # 404ff0 <__libc_start_main@GLIBC_2.2.5>
  40109e:	hlt    
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	ret    
  4010a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010af:	nop
  4010b0:	mov    eax,0x405048
  4010b5:	cmp    rax,0x405048
  4010bb:	je     4010d0 <_start@@Base+0x60>
  4010bd:	mov    eax,0x0
  4010c2:	test   rax,rax
  4010c5:	je     4010d0 <_start@@Base+0x60>
  4010c7:	mov    edi,0x405048
  4010cc:	jmp    rax
  4010ce:	xchg   ax,ax
  4010d0:	ret    
  4010d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010dc:	nop    DWORD PTR [rax+0x0]
  4010e0:	mov    esi,0x405048
  4010e5:	sub    rsi,0x405048
  4010ec:	mov    rax,rsi
  4010ef:	shr    rsi,0x3f
  4010f3:	sar    rax,0x3
  4010f7:	add    rsi,rax
  4010fa:	sar    rsi,1
  4010fd:	je     401110 <_start@@Base+0xa0>
  4010ff:	mov    eax,0x0
  401104:	test   rax,rax
  401107:	je     401110 <_start@@Base+0xa0>
  401109:	mov    edi,0x405048
  40110e:	jmp    rax
  401110:	ret    
  401111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40111c:	nop    DWORD PTR [rax+0x0]
  401120:	endbr64 
  401124:	cmp    BYTE PTR [rip+0x3f1d],0x0        # 405048 <__bss_start@@Base>
  40112b:	jne    401140 <_start@@Base+0xd0>
  40112d:	push   rbp
  40112e:	mov    rbp,rsp
  401131:	call   4010b0 <_start@@Base+0x40>
  401136:	mov    BYTE PTR [rip+0x3f0b],0x1        # 405048 <__bss_start@@Base>
  40113d:	pop    rbp
  40113e:	ret    
  40113f:	nop
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	jmp    4010e0 <_start@@Base+0x70>
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401160 <comp_int_asc@@Base>:
  401160:	mov    eax,DWORD PTR [rdi]
  401162:	mov    ecx,DWORD PTR [rsi]
  401164:	xor    edx,edx
  401166:	cmp    eax,ecx
  401168:	setg   dl
  40116b:	cmp    ecx,eax
  40116d:	mov    eax,0xffffffff
  401172:	cmovle eax,edx
  401175:	ret    
  401176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401180 <get_elem@@Base>:
  401180:	imul   esi,edx
  401183:	movsxd rax,esi
  401186:	add    rax,rdi
  401189:	ret    
  40118a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401190 <swap@@Base>:
  401190:	test   edx,edx
  401192:	jle    4013de <swap@@Base+0x24e>
  401198:	mov    r8d,edx
  40119b:	cmp    edx,0x40
  40119e:	jb     4011ba <swap@@Base+0x2a>
  4011a0:	lea    rax,[rsi+r8*1]
  4011a4:	cmp    rax,rdi
  4011a7:	jbe    401252 <swap@@Base+0xc2>
  4011ad:	lea    rax,[rdi+r8*1]
  4011b1:	cmp    rax,rsi
  4011b4:	jbe    401252 <swap@@Base+0xc2>
  4011ba:	xor    ecx,ecx
  4011bc:	mov    r9,rcx
  4011bf:	not    r9
  4011c2:	add    r9,r8
  4011c5:	mov    rdx,r8
  4011c8:	and    rdx,0x3
  4011cc:	je     4011e8 <swap@@Base+0x58>
  4011ce:	xchg   ax,ax
  4011d0:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  4011d5:	movzx  eax,BYTE PTR [rsi+rcx*1]
  4011d9:	mov    BYTE PTR [rdi+rcx*1],al
  4011dc:	mov    BYTE PTR [rsi+rcx*1],r10b
  4011e0:	inc    rcx
  4011e3:	dec    rdx
  4011e6:	jne    4011d0 <swap@@Base+0x40>
  4011e8:	cmp    r9,0x3
  4011ec:	jb     4013de <swap@@Base+0x24e>
  4011f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	movzx  eax,BYTE PTR [rdi+rcx*1]
  401204:	movzx  edx,BYTE PTR [rsi+rcx*1]
  401208:	mov    BYTE PTR [rdi+rcx*1],dl
  40120b:	mov    BYTE PTR [rsi+rcx*1],al
  40120e:	movzx  eax,BYTE PTR [rdi+rcx*1+0x1]
  401213:	movzx  edx,BYTE PTR [rsi+rcx*1+0x1]
  401218:	mov    BYTE PTR [rdi+rcx*1+0x1],dl
  40121c:	mov    BYTE PTR [rsi+rcx*1+0x1],al
  401220:	movzx  eax,BYTE PTR [rdi+rcx*1+0x2]
  401225:	movzx  edx,BYTE PTR [rsi+rcx*1+0x2]
  40122a:	mov    BYTE PTR [rdi+rcx*1+0x2],dl
  40122e:	mov    BYTE PTR [rsi+rcx*1+0x2],al
  401232:	movzx  eax,BYTE PTR [rdi+rcx*1+0x3]
  401237:	movzx  edx,BYTE PTR [rsi+rcx*1+0x3]
  40123c:	mov    BYTE PTR [rdi+rcx*1+0x3],dl
  401240:	mov    BYTE PTR [rsi+rcx*1+0x3],al
  401244:	add    rcx,0x4
  401248:	cmp    r8,rcx
  40124b:	jne    401200 <swap@@Base+0x70>
  40124d:	jmp    4013de <swap@@Base+0x24e>
  401252:	mov    ecx,r8d
  401255:	and    ecx,0xffffffc0
  401258:	lea    rdx,[rcx-0x40]
  40125c:	mov    rax,rdx
  40125f:	shr    rax,0x6
  401263:	inc    rax
  401266:	mov    r9d,eax
  401269:	and    r9d,0x3
  40126d:	cmp    rdx,0xc0
  401274:	jae    401286 <swap@@Base+0xf6>
  401276:	xor    eax,eax
  401278:	test   r9,r9
  40127b:	jne    401391 <swap@@Base+0x201>
  401281:	jmp    4013d5 <swap@@Base+0x245>
  401286:	mov    rdx,r9
  401289:	sub    rdx,rax
  40128c:	xor    eax,eax
  40128e:	xchg   ax,ax
  401290:	vmovups ymm0,YMMWORD PTR [rdi+rax*1]
  401295:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0x20]
  40129b:	vmovups ymm2,YMMWORD PTR [rsi+rax*1]
  4012a0:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x20]
  4012a6:	vmovups YMMWORD PTR [rdi+rax*1],ymm2
  4012ab:	vmovups YMMWORD PTR [rdi+rax*1+0x20],ymm3
  4012b1:	vmovups YMMWORD PTR [rsi+rax*1],ymm0
  4012b6:	vmovups YMMWORD PTR [rsi+rax*1+0x20],ymm1
  4012bc:	vmovups ymm0,YMMWORD PTR [rdi+rax*1+0x40]
  4012c2:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0x60]
  4012c8:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x40]
  4012ce:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x60]
  4012d4:	vmovups YMMWORD PTR [rdi+rax*1+0x40],ymm2
  4012da:	vmovups YMMWORD PTR [rdi+rax*1+0x60],ymm3
  4012e0:	vmovups YMMWORD PTR [rsi+rax*1+0x40],ymm0
  4012e6:	vmovups YMMWORD PTR [rsi+rax*1+0x60],ymm1
  4012ec:	vmovups ymm0,YMMWORD PTR [rdi+rax*1+0x80]
  4012f5:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0xa0]
  4012fe:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x80]
  401307:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0xa0]
  401310:	vmovups YMMWORD PTR [rdi+rax*1+0x80],ymm2
  401319:	vmovups YMMWORD PTR [rdi+rax*1+0xa0],ymm3
  401322:	vmovups YMMWORD PTR [rsi+rax*1+0x80],ymm0
  40132b:	vmovups YMMWORD PTR [rsi+rax*1+0xa0],ymm1
  401334:	vmovups ymm0,YMMWORD PTR [rdi+rax*1+0xc0]
  40133d:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0xe0]
  401346:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0xc0]
  40134f:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0xe0]
  401358:	vmovups YMMWORD PTR [rdi+rax*1+0xc0],ymm2
  401361:	vmovups YMMWORD PTR [rdi+rax*1+0xe0],ymm3
  40136a:	vmovups YMMWORD PTR [rsi+rax*1+0xc0],ymm0
  401373:	vmovups YMMWORD PTR [rsi+rax*1+0xe0],ymm1
  40137c:	add    rax,0x100
  401382:	add    rdx,0x4
  401386:	jne    401290 <swap@@Base+0x100>
  40138c:	test   r9,r9
  40138f:	je     4013d5 <swap@@Base+0x245>
  401391:	add    rax,0x20
  401395:	neg    r9
  401398:	nop    DWORD PTR [rax+rax*1+0x0]
  4013a0:	vmovups ymm0,YMMWORD PTR [rdi+rax*1-0x20]
  4013a6:	vmovups ymm1,YMMWORD PTR [rdi+rax*1]
  4013ab:	vmovups ymm2,YMMWORD PTR [rsi+rax*1-0x20]
  4013b1:	vmovups ymm3,YMMWORD PTR [rsi+rax*1]
  4013b6:	vmovups YMMWORD PTR [rdi+rax*1-0x20],ymm2
  4013bc:	vmovups YMMWORD PTR [rdi+rax*1],ymm3
  4013c1:	vmovups YMMWORD PTR [rsi+rax*1-0x20],ymm0
  4013c7:	vmovups YMMWORD PTR [rsi+rax*1],ymm1
  4013cc:	add    rax,0x40
  4013d0:	inc    r9
  4013d3:	jne    4013a0 <swap@@Base+0x210>
  4013d5:	cmp    rcx,r8
  4013d8:	jne    4011bc <swap@@Base+0x2c>
  4013de:	vzeroupper 
  4013e1:	ret    
  4013e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013ec:	nop    DWORD PTR [rax+0x0]

00000000004013f0 <sort@@Base>:
  4013f0:	push   rbp
  4013f1:	push   r15
  4013f3:	push   r14
  4013f5:	push   r13
  4013f7:	push   r12
  4013f9:	push   rbx
  4013fa:	sub    rsp,0x98
  401401:	mov    QWORD PTR [rsp+0x90],rcx
  401409:	mov    DWORD PTR [rsp+0xc],edx
  40140d:	mov    QWORD PTR [rsp+0x10],rdi
  401412:	test   esi,esi
  401414:	jle    4017db <sort@@Base+0x3eb>
  40141a:	mov    eax,DWORD PTR [rsp+0xc]
  40141e:	mov    r8d,eax
  401421:	movsxd r13,eax
  401424:	movsxd rax,esi
  401427:	mov    QWORD PTR [rsp+0x68],rax
  40142c:	mov    eax,esi
  40142e:	mov    QWORD PTR [rsp+0x28],rax
  401433:	mov    eax,r8d
  401436:	and    eax,0xffffffc0
  401439:	mov    QWORD PTR [rsp+0x58],rax
  40143e:	add    rax,0xffffffffffffffc0
  401442:	mov    QWORD PTR [rsp+0x50],rax
  401447:	shr    rax,0x6
  40144b:	inc    rax
  40144e:	mov    ecx,eax
  401450:	and    ecx,0x3
  401453:	mov    edx,r8d
  401456:	and    edx,0x3
  401459:	mov    QWORD PTR [rsp+0x60],rdx
  40145e:	mov    r12,QWORD PTR [rsp+0x10]
  401463:	lea    rdx,[r12+r13*1]
  401467:	mov    QWORD PTR [rsp+0x20],rdx
  40146c:	lea    r15,[r12+0xe0]
  401474:	mov    rdx,rcx
  401477:	sub    rdx,rax
  40147a:	mov    QWORD PTR [rsp+0x40],rdx
  40147f:	lea    r9,[r12+0x20]
  401484:	mov    QWORD PTR [rsp+0x48],rcx
  401489:	shl    rcx,0x6
  40148d:	mov    QWORD PTR [rsp+0x18],rcx
  401492:	mov    eax,0x1
  401497:	mov    QWORD PTR [rsp+0x38],rax
  40149c:	xor    edx,edx
  40149e:	mov    QWORD PTR [rsp+0x70],r8
  4014a3:	jmp    4014d6 <sort@@Base+0xe6>
  4014a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014af:	nop
  4014b0:	inc    QWORD PTR [rsp+0x38]
  4014b5:	add    QWORD PTR [rsp+0x20],r13
  4014ba:	add    r15,r13
  4014bd:	add    r9,r13
  4014c0:	add    r12,r13
  4014c3:	mov    rdx,QWORD PTR [rsp+0x80]
  4014cb:	cmp    rdx,QWORD PTR [rsp+0x28]
  4014d0:	je     4017db <sort@@Base+0x3eb>
  4014d6:	mov    QWORD PTR [rsp+0x88],r9
  4014de:	mov    rcx,rdx
  4014e1:	imul   rcx,r13
  4014e5:	mov    rax,QWORD PTR [rsp+0x10]
  4014ea:	mov    QWORD PTR [rsp+0x78],rcx
  4014ef:	add    rcx,rax
  4014f2:	inc    rdx
  4014f5:	mov    QWORD PTR [rsp+0x30],rcx
  4014fa:	mov    QWORD PTR [rsp+0x80],rdx
  401502:	cmp    rdx,QWORD PTR [rsp+0x68]
  401507:	jge    401550 <sort@@Base+0x160>
  401509:	mov    r14,QWORD PTR [rsp+0x28]
  40150e:	mov    rbp,QWORD PTR [rsp+0x20]
  401513:	mov    rbx,QWORD PTR [rsp+0x30]
  401518:	jmp    401530 <sort@@Base+0x140>
  40151a:	nop    WORD PTR [rax+rax*1+0x0]
  401520:	add    rbp,r13
  401523:	dec    r14
  401526:	mov    rbx,rcx
  401529:	cmp    QWORD PTR [rsp+0x38],r14
  40152e:	je     401550 <sort@@Base+0x160>
  401530:	mov    rdi,rbp
  401533:	mov    rsi,rbx
  401536:	vzeroupper 
  401539:	call   QWORD PTR [rsp+0x90]
  401540:	mov    rcx,rbp
  401543:	test   eax,eax
  401545:	js     401520 <sort@@Base+0x130>
  401547:	mov    rcx,rbx
  40154a:	jmp    401520 <sort@@Base+0x130>
  40154c:	nop    DWORD PTR [rax+0x0]
  401550:	cmp    DWORD PTR [rsp+0xc],0x0
  401555:	mov    r8,QWORD PTR [rsp+0x70]
  40155a:	mov    r9,QWORD PTR [rsp+0x88]
  401562:	jle    4014b0 <sort@@Base+0xc0>
  401568:	cmp    DWORD PTR [rsp+0xc],0x40
  40156d:	jb     401594 <sort@@Base+0x1a4>
  40156f:	mov    rax,QWORD PTR [rsp+0x78]
  401574:	add    rax,r8
  401577:	add    rax,QWORD PTR [rsp+0x10]
  40157c:	cmp    rcx,rax
  40157f:	jae    40163a <sort@@Base+0x24a>
  401585:	lea    rax,[rcx+r8*1]
  401589:	cmp    QWORD PTR [rsp+0x30],rax
  40158e:	jae    40163a <sort@@Base+0x24a>
  401594:	xor    eax,eax
  401596:	mov    rbp,rax
  401599:	not    rbp
  40159c:	add    rbp,r8
  40159f:	mov    rsi,QWORD PTR [rsp+0x60]
  4015a4:	test   rsi,rsi
  4015a7:	je     4015c8 <sort@@Base+0x1d8>
  4015a9:	nop    DWORD PTR [rax+0x0]
  4015b0:	movzx  ebx,BYTE PTR [rcx+rax*1]
  4015b4:	movzx  edx,BYTE PTR [r12+rax*1]
  4015b9:	mov    BYTE PTR [rcx+rax*1],dl
  4015bc:	mov    BYTE PTR [r12+rax*1],bl
  4015c0:	inc    rax
  4015c3:	dec    rsi
  4015c6:	jne    4015b0 <sort@@Base+0x1c0>
  4015c8:	cmp    rbp,0x3
  4015cc:	jb     4014b0 <sort@@Base+0xc0>
  4015d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015dc:	nop    DWORD PTR [rax+0x0]
  4015e0:	movzx  edx,BYTE PTR [rcx+rax*1]
  4015e4:	movzx  ebx,BYTE PTR [r12+rax*1]
  4015e9:	mov    BYTE PTR [rcx+rax*1],bl
  4015ec:	mov    BYTE PTR [r12+rax*1],dl
  4015f0:	movzx  edx,BYTE PTR [rcx+rax*1+0x1]
  4015f5:	movzx  ebx,BYTE PTR [r12+rax*1+0x1]
  4015fb:	mov    BYTE PTR [rcx+rax*1+0x1],bl
  4015ff:	mov    BYTE PTR [r12+rax*1+0x1],dl
  401604:	movzx  edx,BYTE PTR [rcx+rax*1+0x2]
  401609:	movzx  ebx,BYTE PTR [r12+rax*1+0x2]
  40160f:	mov    BYTE PTR [rcx+rax*1+0x2],bl
  401613:	mov    BYTE PTR [r12+rax*1+0x2],dl
  401618:	movzx  edx,BYTE PTR [rcx+rax*1+0x3]
  40161d:	movzx  ebx,BYTE PTR [r12+rax*1+0x3]
  401623:	mov    BYTE PTR [rcx+rax*1+0x3],bl
  401627:	mov    BYTE PTR [r12+rax*1+0x3],dl
  40162c:	add    rax,0x4
  401630:	cmp    r8,rax
  401633:	jne    4015e0 <sort@@Base+0x1f0>
  401635:	jmp    4014b0 <sort@@Base+0xc0>
  40163a:	cmp    QWORD PTR [rsp+0x50],0xc0
  401643:	jae    40165d <sort@@Base+0x26d>
  401645:	xor    eax,eax
  401647:	mov    rbp,QWORD PTR [rsp+0x18]
  40164c:	cmp    QWORD PTR [rsp+0x48],0x0
  401652:	jne    40177e <sort@@Base+0x38e>
  401658:	jmp    4017c5 <sort@@Base+0x3d5>
  40165d:	mov    rdx,QWORD PTR [rsp+0x40]
  401662:	xor    eax,eax
  401664:	mov    rbp,QWORD PTR [rsp+0x18]
  401669:	nop    DWORD PTR [rax+0x0]
  401670:	vmovups ymm0,YMMWORD PTR [rcx+rax*1]
  401675:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0x20]
  40167b:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0xe0]
  401685:	vmovups ymm3,YMMWORD PTR [r15+rax*1-0xc0]
  40168f:	vmovups YMMWORD PTR [rcx+rax*1],ymm2
  401694:	vmovups YMMWORD PTR [rcx+rax*1+0x20],ymm3
  40169a:	vmovups YMMWORD PTR [r15+rax*1-0xe0],ymm0
  4016a4:	vmovups YMMWORD PTR [r15+rax*1-0xc0],ymm1
  4016ae:	vmovups ymm0,YMMWORD PTR [rcx+rax*1+0x40]
  4016b4:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0x60]
  4016ba:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0xa0]
  4016c4:	vmovups ymm3,YMMWORD PTR [r15+rax*1-0x80]
  4016cb:	vmovups YMMWORD PTR [rcx+rax*1+0x40],ymm2
  4016d1:	vmovups YMMWORD PTR [rcx+rax*1+0x60],ymm3
  4016d7:	vmovups YMMWORD PTR [r15+rax*1-0xa0],ymm0
  4016e1:	vmovups YMMWORD PTR [r15+rax*1-0x80],ymm1
  4016e8:	vmovups ymm0,YMMWORD PTR [rcx+rax*1+0x80]
  4016f1:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0xa0]
  4016fa:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0x60]
  401701:	vmovups ymm3,YMMWORD PTR [r15+rax*1-0x40]
  401708:	vmovups YMMWORD PTR [rcx+rax*1+0x80],ymm2
  401711:	vmovups YMMWORD PTR [rcx+rax*1+0xa0],ymm3
  40171a:	vmovups YMMWORD PTR [r15+rax*1-0x60],ymm0
  401721:	vmovups YMMWORD PTR [r15+rax*1-0x40],ymm1
  401728:	vmovups ymm0,YMMWORD PTR [rcx+rax*1+0xc0]
  401731:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0xe0]
  40173a:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0x20]
  401741:	vmovups ymm3,YMMWORD PTR [r15+rax*1]
  401747:	vmovups YMMWORD PTR [rcx+rax*1+0xc0],ymm2
  401750:	vmovups YMMWORD PTR [rcx+rax*1+0xe0],ymm3
  401759:	vmovups YMMWORD PTR [r15+rax*1-0x20],ymm0
  401760:	vmovups YMMWORD PTR [r15+rax*1],ymm1
  401766:	add    rax,0x100
  40176c:	add    rdx,0x4
  401770:	jne    401670 <sort@@Base+0x280>
  401776:	cmp    QWORD PTR [rsp+0x48],0x0
  40177c:	je     4017c5 <sort@@Base+0x3d5>
  40177e:	lea    rdx,[r9+rax*1]
  401782:	add    rax,rcx
  401785:	add    rax,0x20
  401789:	xor    esi,esi
  40178b:	nop    DWORD PTR [rax+rax*1+0x0]
  401790:	vmovups ymm0,YMMWORD PTR [rax+rsi*1-0x20]
  401796:	vmovups ymm1,YMMWORD PTR [rax+rsi*1]
  40179b:	vmovups ymm2,YMMWORD PTR [rdx+rsi*1-0x20]
  4017a1:	vmovups ymm3,YMMWORD PTR [rdx+rsi*1]
  4017a6:	vmovups YMMWORD PTR [rax+rsi*1-0x20],ymm2
  4017ac:	vmovups YMMWORD PTR [rax+rsi*1],ymm3
  4017b1:	vmovups YMMWORD PTR [rdx+rsi*1-0x20],ymm0
  4017b7:	vmovups YMMWORD PTR [rdx+rsi*1],ymm1
  4017bc:	add    rsi,0x40
  4017c0:	cmp    rbp,rsi
  4017c3:	jne    401790 <sort@@Base+0x3a0>
  4017c5:	mov    rdx,QWORD PTR [rsp+0x58]
  4017ca:	mov    rax,rdx
  4017cd:	cmp    rdx,r8
  4017d0:	je     4014b0 <sort@@Base+0xc0>
  4017d6:	jmp    401596 <sort@@Base+0x1a6>
  4017db:	add    rsp,0x98
  4017e2:	pop    rbx
  4017e3:	pop    r12
  4017e5:	pop    r13
  4017e7:	pop    r14
  4017e9:	pop    r15
  4017eb:	pop    rbp
  4017ec:	vzeroupper 
  4017ef:	ret    

00000000004017f0 <linear_search@@Base>:
  4017f0:	push   rbp
  4017f1:	push   r15
  4017f3:	push   r14
  4017f5:	push   r13
  4017f7:	push   r12
  4017f9:	push   rbx
  4017fa:	sub    rsp,0x18
  4017fe:	mov    DWORD PTR [rsp+0xc],ecx
  401802:	xor    eax,eax
  401804:	test   edx,edx
  401806:	jle    40184c <linear_search@@Base+0x5c>
  401808:	mov    r13,r8
  40180b:	mov    rbp,rdi
  40180e:	movsxd r14,edx
  401811:	mov    r15d,edx
  401814:	mov    QWORD PTR [rsp+0x10],rsi
  401819:	mov    rbx,rsi
  40181c:	xor    r12d,r12d
  40181f:	nop
  401820:	mov    rdi,rbx
  401823:	mov    rsi,rbp
  401826:	call   r13
  401829:	test   eax,eax
  40182b:	je     40183e <linear_search@@Base+0x4e>
  40182d:	add    r12d,DWORD PTR [rsp+0xc]
  401832:	add    rbx,r14
  401835:	dec    r15
  401838:	jne    401820 <linear_search@@Base+0x30>
  40183a:	xor    eax,eax
  40183c:	jmp    40184c <linear_search@@Base+0x5c>
  40183e:	movsxd rax,r12d
  401841:	mov    rcx,QWORD PTR [rsp+0x10]
  401846:	add    rcx,rax
  401849:	mov    rax,rcx
  40184c:	add    rsp,0x18
  401850:	pop    rbx
  401851:	pop    r12
  401853:	pop    r13
  401855:	pop    r14
  401857:	pop    r15
  401859:	pop    rbp
  40185a:	ret    
  40185b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401860 <binary_search@@Base>:
  401860:	push   rbp
  401861:	push   r15
  401863:	push   r14
  401865:	push   r13
  401867:	push   r12
  401869:	push   rbx
  40186a:	sub    rsp,0x18
  40186e:	mov    DWORD PTR [rsp+0xc],ecx
  401872:	mov    QWORD PTR [rsp+0x10],rsi
  401877:	test   edx,edx
  401879:	jle    4018e2 <binary_search@@Base+0x82>
  40187b:	mov    r12,r8
  40187e:	mov    ebx,edx
  401880:	mov    r13,rdi
  401883:	dec    ebx
  401885:	xor    r14d,r14d
  401888:	jmp    40189b <binary_search@@Base+0x3b>
  40188a:	nop    WORD PTR [rax+rax*1+0x0]
  401890:	inc    r15d
  401893:	mov    r14d,r15d
  401896:	cmp    r14d,ebx
  401899:	jg     4018e2 <binary_search@@Base+0x82>
  40189b:	lea    eax,[rbx+r14*1]
  40189f:	mov    r15d,eax
  4018a2:	shr    r15d,0x1f
  4018a6:	add    r15d,eax
  4018a9:	sar    r15d,1
  4018ac:	mov    eax,r15d
  4018af:	imul   eax,DWORD PTR [rsp+0xc]
  4018b4:	movsxd rbp,eax
  4018b7:	add    rbp,QWORD PTR [rsp+0x10]
  4018bc:	mov    rdi,r13
  4018bf:	mov    rsi,rbp
  4018c2:	call   r12
  4018c5:	test   eax,eax
  4018c7:	jne    4018e4 <binary_search@@Base+0x84>
  4018c9:	mov    rdi,r13
  4018cc:	mov    rsi,rbp
  4018cf:	call   r12
  4018d2:	cmp    eax,0xffffffff
  4018d5:	jne    401890 <binary_search@@Base+0x30>
  4018d7:	dec    r15d
  4018da:	mov    ebx,r15d
  4018dd:	cmp    r14d,ebx
  4018e0:	jle    40189b <binary_search@@Base+0x3b>
  4018e2:	xor    ebp,ebp
  4018e4:	mov    rax,rbp
  4018e7:	add    rsp,0x18
  4018eb:	pop    rbx
  4018ec:	pop    r12
  4018ee:	pop    r13
  4018f0:	pop    r14
  4018f2:	pop    r15
  4018f4:	pop    rbp
  4018f5:	ret    
  4018f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401900 <insertion_sort@@Base>:
  401900:	push   rbp
  401901:	push   r15
  401903:	push   r14
  401905:	push   r13
  401907:	push   r12
  401909:	push   rbx
  40190a:	sub    rsp,0xd8
  401911:	mov    QWORD PTR [rsp+0xd0],rcx
  401919:	mov    DWORD PTR [rsp+0x4],edx
  40191d:	cmp    esi,0x2
  401920:	jl     401dde <insertion_sort@@Base+0x4de>
  401926:	mov    rbx,rdi
  401929:	mov    eax,DWORD PTR [rsp+0x4]
  40192d:	mov    r9d,eax
  401930:	movsxd rcx,eax
  401933:	mov    eax,esi
  401935:	mov    QWORD PTR [rsp+0x40],rax
  40193a:	lea    rax,[rcx+r9*1]
  40193e:	mov    QWORD PTR [rsp+0x38],rax
  401943:	mov    eax,r9d
  401946:	and    eax,0xffffffc0
  401949:	mov    QWORD PTR [rsp+0x90],rax
  401951:	add    rax,0xffffffffffffffc0
  401955:	mov    QWORD PTR [rsp+0x88],rax
  40195d:	shr    rax,0x6
  401961:	inc    rax
  401964:	mov    edx,eax
  401966:	and    edx,0x3
  401969:	mov    esi,r9d
  40196c:	and    esi,0x3
  40196f:	mov    QWORD PTR [rsp+0xc0],rsi
  401977:	lea    rbp,[rcx+rdi*1]
  40197b:	add    rbp,0xe0
  401982:	mov    rsi,rcx
  401985:	neg    rsi
  401988:	mov    QWORD PTR [rsp+0xc8],rsi
  401990:	lea    r14,[rdi+0xe0]
  401997:	mov    rsi,rdx
  40199a:	sub    rsi,rax
  40199d:	mov    QWORD PTR [rsp+0x48],rsi
  4019a2:	lea    rsi,[rdi+0x20]
  4019a6:	add    rdi,rcx
  4019a9:	add    rdi,0x20
  4019ad:	mov    QWORD PTR [rsp+0x80],rdx
  4019b5:	shl    rdx,0x6
  4019b9:	mov    QWORD PTR [rsp+0x10],rdx
  4019be:	lea    rax,[rcx+0x3]
  4019c2:	mov    QWORD PTR [rsp+0x98],rax
  4019ca:	mov    r10d,0x1
  4019d0:	xor    eax,eax
  4019d2:	mov    r15,rbx
  4019d5:	mov    QWORD PTR [rsp+0x8],rcx
  4019da:	jmp    401a23 <insertion_sort@@Base+0x123>
  4019dc:	nop    DWORD PTR [rax+0x0]
  4019e0:	inc    r10
  4019e3:	mov    rax,QWORD PTR [rsp+0x58]
  4019e8:	inc    rax
  4019eb:	mov    rcx,QWORD PTR [rsp+0x8]
  4019f0:	mov    rbp,QWORD PTR [rsp+0x78]
  4019f5:	add    rbp,rcx
  4019f8:	mov    r14,QWORD PTR [rsp+0x70]
  4019fd:	add    r14,rcx
  401a00:	mov    rsi,QWORD PTR [rsp+0x68]
  401a05:	add    rsi,rcx
  401a08:	mov    rdi,QWORD PTR [rsp+0x60]
  401a0d:	add    rdi,rcx
  401a10:	mov    r15,QWORD PTR [rsp+0x50]
  401a15:	add    r15,rcx
  401a18:	cmp    r10,QWORD PTR [rsp+0x40]
  401a1d:	je     401dde <insertion_sort@@Base+0x4de>
  401a23:	mov    QWORD PTR [rsp+0x58],rax
  401a28:	mov    rdx,rax
  401a2b:	imul   rdx,rcx
  401a2f:	lea    rax,[rdx+rcx*1]
  401a33:	mov    QWORD PTR [rsp+0xb8],rax
  401a3b:	mov    rax,QWORD PTR [rsp+0x38]
  401a40:	add    rax,rdx
  401a43:	mov    QWORD PTR [rsp+0xa0],rax
  401a4b:	mov    QWORD PTR [rsp+0xa8],rdx
  401a53:	lea    rax,[rdx+r9*1]
  401a57:	mov    QWORD PTR [rsp+0xb0],rax
  401a5f:	mov    QWORD PTR [rsp+0x50],r15
  401a64:	mov    QWORD PTR [rsp+0x60],rdi
  401a69:	mov    QWORD PTR [rsp+0x20],rdi
  401a6e:	mov    QWORD PTR [rsp+0x68],rsi
  401a73:	mov    QWORD PTR [rsp+0x28],rsi
  401a78:	mov    QWORD PTR [rsp+0x70],r14
  401a7d:	mov    QWORD PTR [rsp+0x78],rbp
  401a82:	xor    eax,eax
  401a84:	mov    QWORD PTR [rsp+0x18],rax
  401a89:	mov    QWORD PTR [rsp+0x30],r10
  401a8e:	jmp    401ac5 <insertion_sort@@Base+0x1c5>
  401a90:	inc    r13
  401a93:	mov    rax,QWORD PTR [rsp+0xc8]
  401a9b:	add    rbp,rax
  401a9e:	add    r14,rax
  401aa1:	add    r12,rax
  401aa4:	mov    QWORD PTR [rsp+0x28],r12
  401aa9:	add    r11,rax
  401aac:	mov    QWORD PTR [rsp+0x20],r11
  401ab1:	add    r15,rax
  401ab4:	mov    QWORD PTR [rsp+0x18],r13
  401ab9:	cmp    r13d,r10d
  401abc:	mov    rbx,r8
  401abf:	je     4019e0 <insertion_sort@@Base+0xe0>
  401ac5:	mov    rsi,QWORD PTR [rsp+0x30]
  401aca:	mov    rdi,rsi
  401acd:	mov    rax,QWORD PTR [rsp+0x8]
  401ad2:	imul   rdi,rax
  401ad6:	add    rdi,rbx
  401ad9:	dec    rsi
  401adc:	mov    QWORD PTR [rsp+0x30],rsi
  401ae1:	imul   rsi,rax
  401ae5:	add    rsi,rbx
  401ae8:	mov    r12,r9
  401aeb:	mov    r13,r10
  401aee:	vzeroupper 
  401af1:	call   QWORD PTR [rsp+0xd0]
  401af8:	mov    r10,r13
  401afb:	mov    r9,r12
  401afe:	cmp    eax,0xffffffff
  401b01:	jne    4019e0 <insertion_sort@@Base+0xe0>
  401b07:	mov    r8,rbx
  401b0a:	cmp    DWORD PTR [rsp+0x4],0x0
  401b0f:	mov    r11,QWORD PTR [rsp+0x20]
  401b14:	mov    r12,QWORD PTR [rsp+0x28]
  401b19:	mov    r13,QWORD PTR [rsp+0x18]
  401b1e:	jle    401a90 <insertion_sort@@Base+0x190>
  401b24:	cmp    DWORD PTR [rsp+0x4],0x40
  401b29:	jb     401b81 <insertion_sort@@Base+0x281>
  401b2b:	mov    rax,r13
  401b2e:	imul   rax,QWORD PTR [rsp+0x8]
  401b34:	mov    rcx,QWORD PTR [rsp+0xb8]
  401b3c:	sub    rcx,rax
  401b3f:	add    rcx,r8
  401b42:	mov    rdx,QWORD PTR [rsp+0xb0]
  401b4a:	sub    rdx,rax
  401b4d:	add    rdx,r8
  401b50:	cmp    rcx,rdx
  401b53:	jae    401c3a <insertion_sort@@Base+0x33a>
  401b59:	mov    rsi,r8
  401b5c:	mov    rcx,QWORD PTR [rsp+0xa0]
  401b64:	sub    rcx,rax
  401b67:	add    rcx,r8
  401b6a:	mov    rdx,QWORD PTR [rsp+0xa8]
  401b72:	sub    rdx,rax
  401b75:	add    rdx,r8
  401b78:	cmp    rdx,rcx
  401b7b:	jae    401c3a <insertion_sort@@Base+0x33a>
  401b81:	xor    eax,eax
  401b83:	mov    rdi,rax
  401b86:	not    rdi
  401b89:	add    rdi,r9
  401b8c:	mov    rsi,QWORD PTR [rsp+0xc0]
  401b94:	test   rsi,rsi
  401b97:	je     401bc8 <insertion_sort@@Base+0x2c8>
  401b99:	mov    rcx,QWORD PTR [rsp+0x8]
  401b9e:	lea    rdx,[r15+rcx*1]
  401ba2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bac:	nop    DWORD PTR [rax+0x0]
  401bb0:	movzx  ecx,BYTE PTR [rdx+rax*1]
  401bb4:	movzx  ebx,BYTE PTR [r15+rax*1]
  401bb9:	mov    BYTE PTR [rdx+rax*1],bl
  401bbc:	mov    BYTE PTR [r15+rax*1],cl
  401bc0:	inc    rax
  401bc3:	dec    rsi
  401bc6:	jne    401bb0 <insertion_sort@@Base+0x2b0>
  401bc8:	cmp    rdi,0x3
  401bcc:	jb     401a90 <insertion_sort@@Base+0x190>
  401bd2:	mov    rcx,QWORD PTR [rsp+0x98]
  401bda:	add    rcx,r15
  401bdd:	nop    DWORD PTR [rax]
  401be0:	movzx  edx,BYTE PTR [rcx+rax*1-0x3]
  401be5:	movzx  ebx,BYTE PTR [r15+rax*1]
  401bea:	mov    BYTE PTR [rcx+rax*1-0x3],bl
  401bee:	mov    BYTE PTR [r15+rax*1],dl
  401bf2:	movzx  edx,BYTE PTR [rcx+rax*1-0x2]
  401bf7:	movzx  ebx,BYTE PTR [r15+rax*1+0x1]
  401bfd:	mov    BYTE PTR [rcx+rax*1-0x2],bl
  401c01:	mov    BYTE PTR [r15+rax*1+0x1],dl
  401c06:	movzx  edx,BYTE PTR [rcx+rax*1-0x1]
  401c0b:	movzx  ebx,BYTE PTR [r15+rax*1+0x2]
  401c11:	mov    BYTE PTR [rcx+rax*1-0x1],bl
  401c15:	mov    BYTE PTR [r15+rax*1+0x2],dl
  401c1a:	movzx  edx,BYTE PTR [rcx+rax*1]
  401c1e:	movzx  ebx,BYTE PTR [r15+rax*1+0x3]
  401c24:	mov    BYTE PTR [rcx+rax*1],bl
  401c27:	mov    BYTE PTR [r15+rax*1+0x3],dl
  401c2c:	add    rax,0x4
  401c30:	cmp    r9,rax
  401c33:	jne    401be0 <insertion_sort@@Base+0x2e0>
  401c35:	jmp    401a90 <insertion_sort@@Base+0x190>
  401c3a:	cmp    QWORD PTR [rsp+0x88],0xc0
  401c46:	jae    401c63 <insertion_sort@@Base+0x363>
  401c48:	xor    eax,eax
  401c4a:	mov    rsi,QWORD PTR [rsp+0x10]
  401c4f:	cmp    QWORD PTR [rsp+0x80],0x0
  401c58:	jne    401d7d <insertion_sort@@Base+0x47d>
  401c5e:	jmp    401dc5 <insertion_sort@@Base+0x4c5>
  401c63:	mov    rcx,QWORD PTR [rsp+0x48]
  401c68:	xor    eax,eax
  401c6a:	mov    rsi,QWORD PTR [rsp+0x10]
  401c6f:	nop
  401c70:	vmovups ymm0,YMMWORD PTR [rbp+rax*1-0xe0]
  401c79:	vmovups ymm1,YMMWORD PTR [rbp+rax*1-0xc0]
  401c82:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0xe0]
  401c8c:	vmovups ymm3,YMMWORD PTR [r14+rax*1-0xc0]
  401c96:	vmovups YMMWORD PTR [rbp+rax*1-0xe0],ymm2
  401c9f:	vmovups YMMWORD PTR [rbp+rax*1-0xc0],ymm3
  401ca8:	vmovups YMMWORD PTR [r14+rax*1-0xe0],ymm0
  401cb2:	vmovups YMMWORD PTR [r14+rax*1-0xc0],ymm1
  401cbc:	vmovups ymm0,YMMWORD PTR [rbp+rax*1-0xa0]
  401cc5:	vmovups ymm1,YMMWORD PTR [rbp+rax*1-0x80]
  401ccb:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0xa0]
  401cd5:	vmovups ymm3,YMMWORD PTR [r14+rax*1-0x80]
  401cdc:	vmovups YMMWORD PTR [rbp+rax*1-0xa0],ymm2
  401ce5:	vmovups YMMWORD PTR [rbp+rax*1-0x80],ymm3
  401ceb:	vmovups YMMWORD PTR [r14+rax*1-0xa0],ymm0
  401cf5:	vmovups YMMWORD PTR [r14+rax*1-0x80],ymm1
  401cfc:	vmovups ymm0,YMMWORD PTR [rbp+rax*1-0x60]
  401d02:	vmovups ymm1,YMMWORD PTR [rbp+rax*1-0x40]
  401d08:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0x60]
  401d0f:	vmovups ymm3,YMMWORD PTR [r14+rax*1-0x40]
  401d16:	vmovups YMMWORD PTR [rbp+rax*1-0x60],ymm2
  401d1c:	vmovups YMMWORD PTR [rbp+rax*1-0x40],ymm3
  401d22:	vmovups YMMWORD PTR [r14+rax*1-0x60],ymm0
  401d29:	vmovups YMMWORD PTR [r14+rax*1-0x40],ymm1
  401d30:	vmovups ymm0,YMMWORD PTR [rbp+rax*1-0x20]
  401d36:	vmovups ymm1,YMMWORD PTR [rbp+rax*1+0x0]
  401d3c:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0x20]
  401d43:	vmovups ymm3,YMMWORD PTR [r14+rax*1]
  401d49:	vmovups YMMWORD PTR [rbp+rax*1-0x20],ymm2
  401d4f:	vmovups YMMWORD PTR [rbp+rax*1+0x0],ymm3
  401d55:	vmovups YMMWORD PTR [r14+rax*1-0x20],ymm0
  401d5c:	vmovups YMMWORD PTR [r14+rax*1],ymm1
  401d62:	add    rax,0x100
  401d68:	add    rcx,0x4
  401d6c:	jne    401c70 <insertion_sort@@Base+0x370>
  401d72:	cmp    QWORD PTR [rsp+0x80],0x0
  401d7b:	je     401dc5 <insertion_sort@@Base+0x4c5>
  401d7d:	lea    rcx,[r12+rax*1]
  401d81:	add    rax,r11
  401d84:	xor    edx,edx
  401d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d90:	vmovups ymm0,YMMWORD PTR [rax+rdx*1-0x20]
  401d96:	vmovups ymm1,YMMWORD PTR [rax+rdx*1]
  401d9b:	vmovups ymm2,YMMWORD PTR [rcx-0x20]
  401da0:	vmovups ymm3,YMMWORD PTR [rcx]
  401da4:	vmovups YMMWORD PTR [rax+rdx*1-0x20],ymm2
  401daa:	vmovups YMMWORD PTR [rax+rdx*1],ymm3
  401daf:	vmovups YMMWORD PTR [rcx-0x20],ymm0
  401db4:	vmovups YMMWORD PTR [rcx],ymm1
  401db8:	add    rcx,0x40
  401dbc:	add    rdx,0x40
  401dc0:	cmp    rsi,rdx
  401dc3:	jne    401d90 <insertion_sort@@Base+0x490>
  401dc5:	mov    rcx,QWORD PTR [rsp+0x90]
  401dcd:	mov    rax,rcx
  401dd0:	cmp    rcx,r9
  401dd3:	je     401a90 <insertion_sort@@Base+0x190>
  401dd9:	jmp    401b83 <insertion_sort@@Base+0x283>
  401dde:	add    rsp,0xd8
  401de5:	pop    rbx
  401de6:	pop    r12
  401de8:	pop    r13
  401dea:	pop    r14
  401dec:	pop    r15
  401dee:	pop    rbp
  401def:	vzeroupper 
  401df2:	ret    
  401df3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dfd:	nop    DWORD PTR [rax]

0000000000401e00 <comp_char_desc@@Base>:
  401e00:	mov    al,BYTE PTR [rdi]
  401e02:	mov    cl,BYTE PTR [rsi]
  401e04:	xor    edx,edx
  401e06:	cmp    al,cl
  401e08:	setg   dl
  401e0b:	neg    edx
  401e0d:	cmp    al,cl
  401e0f:	mov    eax,0x1
  401e14:	cmovge eax,edx
  401e17:	ret    
  401e18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401e20 <main@@Base>:
  401e20:	push   rbp
  401e21:	push   r15
  401e23:	push   r14
  401e25:	push   r13
  401e27:	push   r12
  401e29:	push   rbx
  401e2a:	sub    rsp,0x28
  401e2e:	mov    r14,QWORD PTR [rip+0x11eb]        # 403020 <_IO_stdin_used@@Base+0x20>
  401e35:	mov    QWORD PTR [rsp+0x10],r14
  401e3a:	vmovaps xmm0,XMMWORD PTR [rip+0x11ce]        # 403010 <_IO_stdin_used@@Base+0x10>
  401e42:	vmovaps XMMWORD PTR [rsp],xmm0
  401e47:	lea    rdi,[rip+0x11da]        # 403028 <_IO_stdin_used@@Base+0x28>
  401e4e:	call   401040 <puts@plt>
  401e53:	lea    rdi,[rip+0x11dc]        # 403036 <_IO_stdin_used@@Base+0x36>
  401e5a:	xor    ebx,ebx
  401e5c:	xor    eax,eax
  401e5e:	call   401060 <printf@plt>
  401e63:	lea    r15,[rip+0x11d3]        # 40303d <_IO_stdin_used@@Base+0x3d>
  401e6a:	mov    rdi,r15
  401e6d:	mov    esi,0x3
  401e72:	xor    eax,eax
  401e74:	call   401060 <printf@plt>
  401e79:	mov    rdi,r15
  401e7c:	mov    esi,0xfffffffe
  401e81:	xor    eax,eax
  401e83:	call   401060 <printf@plt>
  401e88:	mov    rdi,r15
  401e8b:	mov    esi,0x4
  401e90:	xor    eax,eax
  401e92:	call   401060 <printf@plt>
  401e97:	mov    rdi,r15
  401e9a:	mov    esi,0x5
  401e9f:	xor    eax,eax
  401ea1:	call   401060 <printf@plt>
  401ea6:	mov    rdi,r15
  401ea9:	mov    esi,0x9
  401eae:	xor    eax,eax
  401eb0:	call   401060 <printf@plt>
  401eb5:	mov    rdi,r15
  401eb8:	mov    esi,0x1
  401ebd:	xor    eax,eax
  401ebf:	call   401060 <printf@plt>
  401ec4:	mov    edi,0xa
  401ec9:	call   401030 <putchar@plt>
  401ece:	lea    r11,[rsp+0x4]
  401ed3:	mov    r10d,0x1
  401ed9:	mov    rcx,0xffffffffffffffff
  401ee0:	jmp    401f00 <main@@Base+0xe0>
  401ee2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401eec:	nop    DWORD PTR [rax+0x0]
  401ef0:	neg    rdx
  401ef3:	cmp    r9,0x7
  401ef7:	jb     401f60 <main@@Base+0x140>
  401ef9:	jmp    402067 <main@@Base+0x247>
  401efe:	xchg   ax,ax
  401f00:	lea    rsi,[rsp+rbx*4]
  401f04:	lea    r8,[rbx+0x1]
  401f08:	mov    rdi,rsi
  401f0b:	cmp    r8,0x5
  401f0f:	ja     401f60 <main@@Base+0x140>
  401f11:	mov    r9d,0x4
  401f17:	sub    r9,rbx
  401f1a:	mov    eax,0x5
  401f1f:	sub    eax,ebx
  401f21:	test   al,0x7
  401f23:	je     401f4e <main@@Base+0x12e>
  401f25:	mov    rax,r11
  401f28:	mov    rdx,rcx
  401f2b:	mov    rbx,rsi
  401f2e:	jmp    401f40 <main@@Base+0x120>
  401f30:	dec    rdx
  401f33:	add    rax,0x4
  401f37:	mov    rbx,rdi
  401f3a:	cmp    rdx,0xfffffffffffffffa
  401f3e:	je     401ef0 <main@@Base+0xd0>
  401f40:	mov    ebp,DWORD PTR [rbx]
  401f42:	mov    rdi,rax
  401f45:	cmp    ebp,DWORD PTR [rax]
  401f47:	jg     401f30 <main@@Base+0x110>
  401f49:	mov    rdi,rbx
  401f4c:	jmp    401f30 <main@@Base+0x110>
  401f4e:	mov    rdx,r10
  401f51:	mov    rdi,rsi
  401f54:	cmp    r9,0x7
  401f58:	jae    402067 <main@@Base+0x247>
  401f5e:	xchg   ax,ax
  401f60:	mov    al,BYTE PTR [rdi]
  401f62:	mov    dl,BYTE PTR [rsi]
  401f64:	mov    BYTE PTR [rdi],dl
  401f66:	mov    BYTE PTR [rsi],al
  401f68:	mov    al,BYTE PTR [rdi+0x1]
  401f6b:	mov    dl,BYTE PTR [rsi+0x1]
  401f6e:	mov    BYTE PTR [rdi+0x1],dl
  401f71:	mov    BYTE PTR [rsi+0x1],al
  401f74:	mov    al,BYTE PTR [rdi+0x2]
  401f77:	mov    dl,BYTE PTR [rsi+0x2]
  401f7a:	mov    BYTE PTR [rdi+0x2],dl
  401f7d:	mov    BYTE PTR [rsi+0x2],al
  401f80:	mov    al,BYTE PTR [rdi+0x3]
  401f83:	mov    dl,BYTE PTR [rsi+0x3]
  401f86:	mov    BYTE PTR [rdi+0x3],dl
  401f89:	mov    BYTE PTR [rsi+0x3],al
  401f8c:	inc    r10
  401f8f:	dec    rcx
  401f92:	add    r11,0x4
  401f96:	mov    rbx,r8
  401f99:	cmp    r8,0x6
  401f9d:	jne    401f00 <main@@Base+0xe0>
  401fa3:	lea    rdi,[rip+0x1097]        # 403041 <_IO_stdin_used@@Base+0x41>
  401faa:	xor    eax,eax
  401fac:	call   401060 <printf@plt>
  401fb1:	mov    esi,DWORD PTR [rsp]
  401fb4:	lea    rbx,[rip+0x1082]        # 40303d <_IO_stdin_used@@Base+0x3d>
  401fbb:	mov    rdi,rbx
  401fbe:	xor    eax,eax
  401fc0:	call   401060 <printf@plt>
  401fc5:	mov    esi,DWORD PTR [rsp+0x4]
  401fc9:	mov    rdi,rbx
  401fcc:	xor    eax,eax
  401fce:	call   401060 <printf@plt>
  401fd3:	mov    esi,DWORD PTR [rsp+0x8]
  401fd7:	mov    rdi,rbx
  401fda:	xor    eax,eax
  401fdc:	call   401060 <printf@plt>
  401fe1:	mov    esi,DWORD PTR [rsp+0xc]
  401fe5:	mov    rdi,rbx
  401fe8:	xor    eax,eax
  401fea:	call   401060 <printf@plt>
  401fef:	mov    esi,DWORD PTR [rsp+0x10]
  401ff3:	mov    rdi,rbx
  401ff6:	xor    eax,eax
  401ff8:	call   401060 <printf@plt>
  401ffd:	mov    esi,DWORD PTR [rsp+0x14]
  402001:	mov    rdi,rbx
  402004:	xor    eax,eax
  402006:	call   401060 <printf@plt>
  40200b:	mov    edi,0xa
  402010:	call   401030 <putchar@plt>
  402015:	vmovaps xmm0,XMMWORD PTR [rip+0xff3]        # 403010 <_IO_stdin_used@@Base+0x10>
  40201d:	vmovaps XMMWORD PTR [rsp],xmm0
  402022:	mov    QWORD PTR [rsp+0x10],r14
  402027:	lea    rdi,[rip+0x101b]        # 403049 <_IO_stdin_used@@Base+0x49>
  40202e:	call   401040 <puts@plt>
  402033:	mov    edx,0x4
  402038:	cmp    DWORD PTR [rsp+0x18],0x4
  40203d:	je     40204f <main@@Base+0x22f>
  40203f:	mov    edx,0x5
  402044:	cmp    DWORD PTR [rsp+0x1e],0x4
  402049:	jne    4020d2 <main@@Base+0x2b2>
  40204f:	lea    rdi,[rip+0xffd]        # 403053 <_IO_stdin_used@@Base+0x53>
  402056:	mov    esi,0x4
  40205b:	xor    eax,eax
  40205d:	call   401060 <printf@plt>
  402062:	jmp    4020e5 <main@@Base+0x2c5>
  402067:	lea    rax,[rsp+rdx*4]
  40206b:	jmp    402077 <main@@Base+0x257>
  40206d:	nop    DWORD PTR [rax]
  402070:	add    rax,0x20
  402074:	mov    rdi,rcx
  402077:	mov    edx,DWORD PTR [rdi]
  402079:	mov    rcx,rax
  40207c:	cmp    edx,DWORD PTR [rax]
  40207e:	jg     402083 <main@@Base+0x263>
  402080:	mov    rcx,rdi
  402083:	mov    edx,DWORD PTR [rcx]
  402085:	cmp    edx,DWORD PTR [rax+0x4]
  402088:	jle    40208e <main@@Base+0x26e>
  40208a:	lea    rcx,[rax+0x4]
  40208e:	mov    edx,DWORD PTR [rcx]
  402090:	cmp    edx,DWORD PTR [rax+0x8]
  402093:	jle    402099 <main@@Base+0x279>
  402095:	lea    rcx,[rax+0x8]
  402099:	mov    edx,DWORD PTR [rcx]
  40209b:	cmp    edx,DWORD PTR [rax+0xc]
  40209e:	jle    4020a4 <main@@Base+0x284>
  4020a0:	lea    rcx,[rax+0xc]
  4020a4:	mov    edx,DWORD PTR [rcx]
  4020a6:	cmp    edx,DWORD PTR [rax+0x10]
  4020a9:	jle    4020af <main@@Base+0x28f>
  4020ab:	lea    rcx,[rax+0x10]
  4020af:	mov    edx,DWORD PTR [rcx]
  4020b1:	cmp    edx,DWORD PTR [rax+0x14]
  4020b4:	jle    4020ba <main@@Base+0x29a>
  4020b6:	lea    rcx,[rax+0x14]
  4020ba:	mov    edx,DWORD PTR [rcx]
  4020bc:	cmp    edx,DWORD PTR [rax+0x18]
  4020bf:	jle    4020c5 <main@@Base+0x2a5>
  4020c1:	lea    rcx,[rax+0x18]
  4020c5:	mov    edx,DWORD PTR [rcx]
  4020c7:	cmp    edx,DWORD PTR [rax+0x1c]
  4020ca:	jle    402070 <main@@Base+0x250>
  4020cc:	lea    rcx,[rax+0x1c]
  4020d0:	jmp    402070 <main@@Base+0x250>
  4020d2:	lea    rdi,[rip+0xfa7]        # 403080 <_IO_stdin_used@@Base+0x80>
  4020d9:	mov    esi,0x4
  4020de:	xor    eax,eax
  4020e0:	call   401060 <printf@plt>
  4020e5:	mov    QWORD PTR [rsp+0x10],r14
  4020ea:	vmovaps xmm0,XMMWORD PTR [rip+0xf1e]        # 403010 <_IO_stdin_used@@Base+0x10>
  4020f2:	vmovaps XMMWORD PTR [rsp],xmm0
  4020f7:	lea    r11,[rsp+0x4]
  4020fc:	mov    r10d,0x1
  402102:	mov    rsi,0xffffffffffffffff
  402109:	xor    edx,edx
  40210b:	jmp    402120 <main@@Base+0x300>
  40210d:	nop    DWORD PTR [rax]
  402110:	neg    rdx
  402113:	cmp    r8,0x7
  402117:	jb     402180 <main@@Base+0x360>
  402119:	jmp    402233 <main@@Base+0x413>
  40211e:	xchg   ax,ax
  402120:	lea    rcx,[rsp+rdx*4]
  402124:	lea    r9,[rdx+0x1]
  402128:	mov    rdi,rcx
  40212b:	cmp    r9,0x5
  40212f:	ja     402180 <main@@Base+0x360>
  402131:	mov    r8d,0x4
  402137:	sub    r8,rdx
  40213a:	mov    eax,0x5
  40213f:	sub    eax,edx
  402141:	test   al,0x7
  402143:	je     40216e <main@@Base+0x34e>
  402145:	mov    rax,r11
  402148:	mov    rdx,rsi
  40214b:	mov    rbx,rcx
  40214e:	jmp    402160 <main@@Base+0x340>
  402150:	dec    rdx
  402153:	add    rax,0x4
  402157:	mov    rbx,rdi
  40215a:	cmp    rdx,0xfffffffffffffffa
  40215e:	je     402110 <main@@Base+0x2f0>
  402160:	mov    ebp,DWORD PTR [rbx]
  402162:	mov    rdi,rax
  402165:	cmp    ebp,DWORD PTR [rax]
  402167:	jg     402150 <main@@Base+0x330>
  402169:	mov    rdi,rbx
  40216c:	jmp    402150 <main@@Base+0x330>
  40216e:	mov    rdx,r10
  402171:	mov    rdi,rcx
  402174:	cmp    r8,0x7
  402178:	jae    402233 <main@@Base+0x413>
  40217e:	xchg   ax,ax
  402180:	mov    al,BYTE PTR [rdi]
  402182:	mov    dl,BYTE PTR [rcx]
  402184:	mov    BYTE PTR [rdi],dl
  402186:	mov    BYTE PTR [rcx],al
  402188:	mov    al,BYTE PTR [rdi+0x1]
  40218b:	mov    dl,BYTE PTR [rcx+0x1]
  40218e:	mov    BYTE PTR [rdi+0x1],dl
  402191:	mov    BYTE PTR [rcx+0x1],al
  402194:	mov    al,BYTE PTR [rdi+0x2]
  402197:	mov    dl,BYTE PTR [rcx+0x2]
  40219a:	mov    BYTE PTR [rdi+0x2],dl
  40219d:	mov    BYTE PTR [rcx+0x2],al
  4021a0:	mov    al,BYTE PTR [rdi+0x3]
  4021a3:	mov    dl,BYTE PTR [rcx+0x3]
  4021a6:	mov    BYTE PTR [rdi+0x3],dl
  4021a9:	mov    BYTE PTR [rcx+0x3],al
  4021ac:	inc    r10
  4021af:	dec    rsi
  4021b2:	add    r11,0x4
  4021b6:	mov    rdx,r9
  4021b9:	cmp    r9,0x6
  4021bd:	jne    402120 <main@@Base+0x300>
  4021c3:	lea    rdi,[rip+0xed8]        # 4030a2 <_IO_stdin_used@@Base+0xa2>
  4021ca:	call   401040 <puts@plt>
  4021cf:	xor    ebp,ebp
  4021d1:	mov    ecx,0x5
  4021d6:	jmp    4021e8 <main@@Base+0x3c8>
  4021d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021e0:	inc    esi
  4021e2:	mov    ebp,esi
  4021e4:	cmp    ebp,ecx
  4021e6:	jg     40221b <main@@Base+0x3fb>
  4021e8:	lea    edx,[rcx+rbp*1]
  4021eb:	mov    esi,edx
  4021ed:	shr    esi,0x1f
  4021f0:	add    esi,edx
  4021f2:	sar    esi,1
  4021f4:	movsxd rdx,esi
  4021f7:	mov    edi,DWORD PTR [rsp+rdx*4]
  4021fa:	cmp    edi,0x4
  4021fd:	setg   bl
  402200:	cmp    edi,0x3
  402203:	setg   al
  402206:	cmp    bl,al
  402208:	je     4022a2 <main@@Base+0x482>
  40220e:	cmp    edi,0x4
  402211:	jle    4021e0 <main@@Base+0x3c0>
  402213:	dec    esi
  402215:	mov    ecx,esi
  402217:	cmp    ebp,ecx
  402219:	jle    4021e8 <main@@Base+0x3c8>
  40221b:	lea    rdi,[rip+0xe5e]        # 403080 <_IO_stdin_used@@Base+0x80>
  402222:	mov    esi,0x4
  402227:	xor    eax,eax
  402229:	call   401060 <printf@plt>
  40222e:	jmp    4022b5 <main@@Base+0x495>
  402233:	lea    rax,[rsp+rdx*4]
  402237:	jmp    402247 <main@@Base+0x427>
  402239:	nop    DWORD PTR [rax+0x0]
  402240:	add    rax,0x20
  402244:	mov    rdi,rcx
  402247:	mov    edx,DWORD PTR [rdi]
  402249:	mov    rcx,rax
  40224c:	cmp    edx,DWORD PTR [rax]
  40224e:	jg     402253 <main@@Base+0x433>
  402250:	mov    rcx,rdi
  402253:	mov    edx,DWORD PTR [rcx]
  402255:	cmp    edx,DWORD PTR [rax+0x4]
  402258:	jle    40225e <main@@Base+0x43e>
  40225a:	lea    rcx,[rax+0x4]
  40225e:	mov    edx,DWORD PTR [rcx]
  402260:	cmp    edx,DWORD PTR [rax+0x8]
  402263:	jle    402269 <main@@Base+0x449>
  402265:	lea    rcx,[rax+0x8]
  402269:	mov    edx,DWORD PTR [rcx]
  40226b:	cmp    edx,DWORD PTR [rax+0xc]
  40226e:	jle    402274 <main@@Base+0x454>
  402270:	lea    rcx,[rax+0xc]
  402274:	mov    edx,DWORD PTR [rcx]
  402276:	cmp    edx,DWORD PTR [rax+0x10]
  402279:	jle    40227f <main@@Base+0x45f>
  40227b:	lea    rcx,[rax+0x10]
  40227f:	mov    edx,DWORD PTR [rcx]
  402281:	cmp    edx,DWORD PTR [rax+0x14]
  402284:	jle    40228a <main@@Base+0x46a>
  402286:	lea    rcx,[rax+0x14]
  40228a:	mov    edx,DWORD PTR [rcx]
  40228c:	cmp    edx,DWORD PTR [rax+0x18]
  40228f:	jle    402295 <main@@Base+0x475>
  402291:	lea    rcx,[rax+0x18]
  402295:	mov    edx,DWORD PTR [rcx]
  402297:	cmp    edx,DWORD PTR [rax+0x1c]
  40229a:	jle    402240 <main@@Base+0x420>
  40229c:	lea    rcx,[rax+0x1c]
  4022a0:	jmp    402240 <main@@Base+0x420>
  4022a2:	lea    rdi,[rip+0xdaa]        # 403053 <_IO_stdin_used@@Base+0x53>
  4022a9:	mov    esi,0x4
  4022ae:	xor    eax,eax
  4022b0:	call   401060 <printf@plt>
  4022b5:	mov    QWORD PTR [rsp+0x10],r14
  4022ba:	vmovaps xmm0,XMMWORD PTR [rip+0xd4e]        # 403010 <_IO_stdin_used@@Base+0x10>
  4022c2:	vmovaps XMMWORD PTR [rsp],xmm0
  4022c7:	lea    rdi,[rip+0xdde]        # 4030ac <_IO_stdin_used@@Base+0xac>
  4022ce:	call   401040 <puts@plt>
  4022d3:	lea    rdi,[rip+0xd5c]        # 403036 <_IO_stdin_used@@Base+0x36>
  4022da:	xor    eax,eax
  4022dc:	call   401060 <printf@plt>
  4022e1:	lea    rbx,[rip+0xd55]        # 40303d <_IO_stdin_used@@Base+0x3d>
  4022e8:	mov    rdi,rbx
  4022eb:	mov    esi,0x3
  4022f0:	xor    eax,eax
  4022f2:	call   401060 <printf@plt>
  4022f7:	mov    rdi,rbx
  4022fa:	mov    esi,0xfffffffe
  4022ff:	xor    eax,eax
  402301:	call   401060 <printf@plt>
  402306:	mov    rdi,rbx
  402309:	mov    esi,0x4
  40230e:	xor    eax,eax
  402310:	call   401060 <printf@plt>
  402315:	mov    rdi,rbx
  402318:	mov    esi,0x5
  40231d:	xor    eax,eax
  40231f:	call   401060 <printf@plt>
  402324:	mov    rdi,rbx
  402327:	mov    esi,0x9
  40232c:	xor    eax,eax
  40232e:	call   401060 <printf@plt>
  402333:	mov    rdi,rbx
  402336:	mov    esi,0x1
  40233b:	xor    eax,eax
  40233d:	call   401060 <printf@plt>
  402342:	mov    edi,0xa
  402347:	call   401030 <putchar@plt>
  40234c:	mov    eax,DWORD PTR [rsp]
  40234f:	cmp    eax,0xffffffff
  402352:	jl     402383 <main@@Base+0x563>
  402354:	mov    cl,BYTE PTR [rsp+0x4]
  402358:	mov    BYTE PTR [rsp+0x4],al
  40235c:	mov    BYTE PTR [rsp],cl
  40235f:	mov    al,BYTE PTR [rsp+0x5]
  402363:	mov    cl,BYTE PTR [rsp+0x1]
  402367:	mov    BYTE PTR [rsp+0x5],cl
  40236b:	mov    BYTE PTR [rsp+0x1],al
  40236f:	movzx  eax,WORD PTR [rsp+0x6]
  402374:	movzx  ecx,WORD PTR [rsp+0x2]
  402379:	mov    WORD PTR [rsp+0x6],cx
  40237e:	mov    WORD PTR [rsp+0x2],ax
  402383:	mov    ecx,DWORD PTR [rsp+0x4]
  402387:	mov    eax,DWORD PTR [rsp+0x8]
  40238b:	cmp    ecx,eax
  40238d:	jle    4023f1 <main@@Base+0x5d1>
  40238f:	mov    BYTE PTR [rsp+0x8],cl
  402393:	mov    BYTE PTR [rsp+0x4],al
  402397:	mov    al,BYTE PTR [rsp+0x9]
  40239b:	mov    cl,BYTE PTR [rsp+0x5]
  40239f:	mov    BYTE PTR [rsp+0x9],cl
  4023a3:	mov    BYTE PTR [rsp+0x5],al
  4023a7:	movzx  eax,WORD PTR [rsp+0xa]
  4023ac:	movzx  ecx,WORD PTR [rsp+0x6]
  4023b1:	mov    WORD PTR [rsp+0xa],cx
  4023b6:	mov    WORD PTR [rsp+0x6],ax
  4023bb:	mov    eax,DWORD PTR [rsp+0x4]
  4023bf:	mov    ecx,DWORD PTR [rsp]
  4023c2:	cmp    ecx,eax
  4023c4:	jle    4023f1 <main@@Base+0x5d1>
  4023c6:	mov    BYTE PTR [rsp+0x4],cl
  4023ca:	mov    BYTE PTR [rsp],al
  4023cd:	mov    al,BYTE PTR [rsp+0x5]
  4023d1:	mov    cl,BYTE PTR [rsp+0x1]
  4023d5:	mov    BYTE PTR [rsp+0x5],cl
  4023d9:	mov    BYTE PTR [rsp+0x1],al
  4023dd:	movzx  eax,WORD PTR [rsp+0x6]
  4023e2:	movzx  ecx,WORD PTR [rsp+0x2]
  4023e7:	mov    WORD PTR [rsp+0x6],cx
  4023ec:	mov    WORD PTR [rsp+0x2],ax
  4023f1:	mov    ecx,DWORD PTR [rsp+0x8]
  4023f5:	mov    eax,DWORD PTR [rsp+0xc]
  4023f9:	cmp    ecx,eax
  4023fb:	jle    40249b <main@@Base+0x67b>
  402401:	mov    BYTE PTR [rsp+0xc],cl
  402405:	mov    BYTE PTR [rsp+0x8],al
  402409:	mov    al,BYTE PTR [rsp+0xd]
  40240d:	mov    cl,BYTE PTR [rsp+0x9]
  402411:	mov    BYTE PTR [rsp+0xd],cl
  402415:	mov    BYTE PTR [rsp+0x9],al
  402419:	movzx  eax,WORD PTR [rsp+0xe]
  40241e:	movzx  ecx,WORD PTR [rsp+0xa]
  402423:	mov    WORD PTR [rsp+0xe],cx
  402428:	mov    WORD PTR [rsp+0xa],ax
  40242d:	mov    eax,DWORD PTR [rsp+0x8]
  402431:	mov    ecx,DWORD PTR [rsp+0x4]
  402435:	cmp    ecx,eax
  402437:	jle    40249b <main@@Base+0x67b>
  402439:	mov    BYTE PTR [rsp+0x8],cl
  40243d:	mov    BYTE PTR [rsp+0x4],al
  402441:	mov    al,BYTE PTR [rsp+0x9]
  402445:	mov    cl,BYTE PTR [rsp+0x5]
  402449:	mov    BYTE PTR [rsp+0x9],cl
  40244d:	mov    BYTE PTR [rsp+0x5],al
  402451:	movzx  eax,WORD PTR [rsp+0xa]
  402456:	movzx  ecx,WORD PTR [rsp+0x6]
  40245b:	mov    WORD PTR [rsp+0xa],cx
  402460:	mov    WORD PTR [rsp+0x6],ax
  402465:	mov    eax,DWORD PTR [rsp+0x4]
  402469:	mov    ecx,DWORD PTR [rsp]
  40246c:	cmp    ecx,eax
  40246e:	jle    40249b <main@@Base+0x67b>
  402470:	mov    BYTE PTR [rsp+0x4],cl
  402474:	mov    BYTE PTR [rsp],al
  402477:	mov    al,BYTE PTR [rsp+0x5]
  40247b:	mov    cl,BYTE PTR [rsp+0x1]
  40247f:	mov    BYTE PTR [rsp+0x5],cl
  402483:	mov    BYTE PTR [rsp+0x1],al
  402487:	movzx  eax,WORD PTR [rsp+0x6]
  40248c:	movzx  ecx,WORD PTR [rsp+0x2]
  402491:	mov    WORD PTR [rsp+0x6],cx
  402496:	mov    WORD PTR [rsp+0x2],ax
  40249b:	mov    ecx,DWORD PTR [rsp+0xc]
  40249f:	mov    eax,DWORD PTR [rsp+0x10]
  4024a3:	cmp    ecx,eax
  4024a5:	jle    402581 <main@@Base+0x761>
  4024ab:	mov    BYTE PTR [rsp+0x10],cl
  4024af:	mov    BYTE PTR [rsp+0xc],al
  4024b3:	mov    al,BYTE PTR [rsp+0x11]
  4024b7:	mov    cl,BYTE PTR [rsp+0xd]
  4024bb:	mov    BYTE PTR [rsp+0x11],cl
  4024bf:	mov    BYTE PTR [rsp+0xd],al
  4024c3:	movzx  eax,WORD PTR [rsp+0x12]
  4024c8:	movzx  ecx,WORD PTR [rsp+0xe]
  4024cd:	mov    WORD PTR [rsp+0x12],cx
  4024d2:	mov    WORD PTR [rsp+0xe],ax
  4024d7:	mov    eax,DWORD PTR [rsp+0xc]
  4024db:	mov    ecx,DWORD PTR [rsp+0x8]
  4024df:	cmp    ecx,eax
  4024e1:	jle    402581 <main@@Base+0x761>
  4024e7:	mov    BYTE PTR [rsp+0xc],cl
  4024eb:	mov    BYTE PTR [rsp+0x8],al
  4024ef:	mov    al,BYTE PTR [rsp+0xd]
  4024f3:	mov    cl,BYTE PTR [rsp+0x9]
  4024f7:	mov    BYTE PTR [rsp+0xd],cl
  4024fb:	mov    BYTE PTR [rsp+0x9],al
  4024ff:	movzx  eax,WORD PTR [rsp+0xe]
  402504:	movzx  ecx,WORD PTR [rsp+0xa]
  402509:	mov    WORD PTR [rsp+0xe],cx
  40250e:	mov    WORD PTR [rsp+0xa],ax
  402513:	mov    eax,DWORD PTR [rsp+0x8]
  402517:	mov    ecx,DWORD PTR [rsp+0x4]
  40251b:	cmp    ecx,eax
  40251d:	jle    402581 <main@@Base+0x761>
  40251f:	mov    BYTE PTR [rsp+0x8],cl
  402523:	mov    BYTE PTR [rsp+0x4],al
  402527:	mov    al,BYTE PTR [rsp+0x9]
  40252b:	mov    cl,BYTE PTR [rsp+0x5]
  40252f:	mov    BYTE PTR [rsp+0x9],cl
  402533:	mov    BYTE PTR [rsp+0x5],al
  402537:	movzx  eax,WORD PTR [rsp+0xa]
  40253c:	movzx  ecx,WORD PTR [rsp+0x6]
  402541:	mov    WORD PTR [rsp+0xa],cx
  402546:	mov    WORD PTR [rsp+0x6],ax
  40254b:	mov    eax,DWORD PTR [rsp+0x4]
  40254f:	mov    ecx,DWORD PTR [rsp]
  402552:	cmp    ecx,eax
  402554:	jle    402581 <main@@Base+0x761>
  402556:	mov    BYTE PTR [rsp+0x4],cl
  40255a:	mov    BYTE PTR [rsp],al
  40255d:	mov    al,BYTE PTR [rsp+0x5]
  402561:	mov    cl,BYTE PTR [rsp+0x1]
  402565:	mov    BYTE PTR [rsp+0x5],cl
  402569:	mov    BYTE PTR [rsp+0x1],al
  40256d:	movzx  eax,WORD PTR [rsp+0x6]
  402572:	movzx  ecx,WORD PTR [rsp+0x2]
  402577:	mov    WORD PTR [rsp+0x6],cx
  40257c:	mov    WORD PTR [rsp+0x2],ax
  402581:	mov    ecx,DWORD PTR [rsp+0x10]
  402585:	mov    eax,DWORD PTR [rsp+0x14]
  402589:	cmp    ecx,eax
  40258b:	jle    4026a3 <main@@Base+0x883>
  402591:	mov    BYTE PTR [rsp+0x14],cl
  402595:	mov    BYTE PTR [rsp+0x10],al
  402599:	mov    al,BYTE PTR [rsp+0x15]
  40259d:	mov    cl,BYTE PTR [rsp+0x11]
  4025a1:	mov    BYTE PTR [rsp+0x15],cl
  4025a5:	mov    BYTE PTR [rsp+0x11],al
  4025a9:	movzx  eax,WORD PTR [rsp+0x16]
  4025ae:	movzx  ecx,WORD PTR [rsp+0x12]
  4025b3:	mov    WORD PTR [rsp+0x16],cx
  4025b8:	mov    WORD PTR [rsp+0x12],ax
  4025bd:	mov    eax,DWORD PTR [rsp+0x10]
  4025c1:	mov    ecx,DWORD PTR [rsp+0xc]
  4025c5:	cmp    ecx,eax
  4025c7:	jle    4026a3 <main@@Base+0x883>
  4025cd:	mov    BYTE PTR [rsp+0x10],cl
  4025d1:	mov    BYTE PTR [rsp+0xc],al
  4025d5:	mov    al,BYTE PTR [rsp+0x11]
  4025d9:	mov    cl,BYTE PTR [rsp+0xd]
  4025dd:	mov    BYTE PTR [rsp+0x11],cl
  4025e1:	mov    BYTE PTR [rsp+0xd],al
  4025e5:	movzx  eax,WORD PTR [rsp+0x12]
  4025ea:	movzx  ecx,WORD PTR [rsp+0xe]
  4025ef:	mov    WORD PTR [rsp+0x12],cx
  4025f4:	mov    WORD PTR [rsp+0xe],ax
  4025f9:	mov    eax,DWORD PTR [rsp+0xc]
  4025fd:	mov    ecx,DWORD PTR [rsp+0x8]
  402601:	cmp    ecx,eax
  402603:	jle    4026a3 <main@@Base+0x883>
  402609:	mov    BYTE PTR [rsp+0xc],cl
  40260d:	mov    BYTE PTR [rsp+0x8],al
  402611:	mov    al,BYTE PTR [rsp+0xd]
  402615:	mov    cl,BYTE PTR [rsp+0x9]
  402619:	mov    BYTE PTR [rsp+0xd],cl
  40261d:	mov    BYTE PTR [rsp+0x9],al
  402621:	movzx  eax,WORD PTR [rsp+0xe]
  402626:	movzx  ecx,WORD PTR [rsp+0xa]
  40262b:	mov    WORD PTR [rsp+0xe],cx
  402630:	mov    WORD PTR [rsp+0xa],ax
  402635:	mov    eax,DWORD PTR [rsp+0x8]
  402639:	mov    ecx,DWORD PTR [rsp+0x4]
  40263d:	cmp    ecx,eax
  40263f:	jle    4026a3 <main@@Base+0x883>
  402641:	mov    BYTE PTR [rsp+0x8],cl
  402645:	mov    BYTE PTR [rsp+0x4],al
  402649:	mov    al,BYTE PTR [rsp+0x9]
  40264d:	mov    cl,BYTE PTR [rsp+0x5]
  402651:	mov    BYTE PTR [rsp+0x9],cl
  402655:	mov    BYTE PTR [rsp+0x5],al
  402659:	movzx  eax,WORD PTR [rsp+0xa]
  40265e:	movzx  ecx,WORD PTR [rsp+0x6]
  402663:	mov    WORD PTR [rsp+0xa],cx
  402668:	mov    WORD PTR [rsp+0x6],ax
  40266d:	mov    eax,DWORD PTR [rsp+0x4]
  402671:	mov    ecx,DWORD PTR [rsp]
  402674:	cmp    ecx,eax
  402676:	jle    4026a3 <main@@Base+0x883>
  402678:	mov    BYTE PTR [rsp+0x4],cl
  40267c:	mov    BYTE PTR [rsp],al
  40267f:	mov    al,BYTE PTR [rsp+0x5]
  402683:	mov    cl,BYTE PTR [rsp+0x1]
  402687:	mov    BYTE PTR [rsp+0x5],cl
  40268b:	mov    BYTE PTR [rsp+0x1],al
  40268f:	movzx  eax,WORD PTR [rsp+0x6]
  402694:	movzx  ecx,WORD PTR [rsp+0x2]
  402699:	mov    WORD PTR [rsp+0x6],cx
  40269e:	mov    WORD PTR [rsp+0x2],ax
  4026a3:	lea    rdi,[rip+0x997]        # 403041 <_IO_stdin_used@@Base+0x41>
  4026aa:	xor    eax,eax
  4026ac:	call   401060 <printf@plt>
  4026b1:	mov    esi,DWORD PTR [rsp]
  4026b4:	lea    rbx,[rip+0x982]        # 40303d <_IO_stdin_used@@Base+0x3d>
  4026bb:	mov    rdi,rbx
  4026be:	xor    eax,eax
  4026c0:	call   401060 <printf@plt>
  4026c5:	mov    esi,DWORD PTR [rsp+0x4]
  4026c9:	mov    rdi,rbx
  4026cc:	xor    eax,eax
  4026ce:	call   401060 <printf@plt>
  4026d3:	mov    esi,DWORD PTR [rsp+0x8]
  4026d7:	mov    rdi,rbx
  4026da:	xor    eax,eax
  4026dc:	call   401060 <printf@plt>
  4026e1:	mov    esi,DWORD PTR [rsp+0xc]
  4026e5:	mov    rdi,rbx
  4026e8:	xor    eax,eax
  4026ea:	call   401060 <printf@plt>
  4026ef:	mov    esi,DWORD PTR [rsp+0x10]
  4026f3:	mov    rdi,rbx
  4026f6:	xor    eax,eax
  4026f8:	call   401060 <printf@plt>
  4026fd:	mov    esi,DWORD PTR [rsp+0x14]
  402701:	mov    rdi,rbx
  402704:	xor    eax,eax
  402706:	call   401060 <printf@plt>
  40270b:	mov    edi,0xa
  402710:	call   401030 <putchar@plt>
  402715:	lea    rdi,[rip+0x99a]        # 4030b6 <_IO_stdin_used@@Base+0xb6>
  40271c:	call   401040 <puts@plt>
  402721:	mov    BYTE PTR [rsp+0x24],0x0
  402726:	mov    DWORD PTR [rsp+0x20],0x615a6241
  40272e:	lea    rdi,[rip+0x901]        # 403036 <_IO_stdin_used@@Base+0x36>
  402735:	xor    eax,eax
  402737:	call   401060 <printf@plt>
  40273c:	lea    rbx,[rsp+0x20]
  402741:	mov    rdi,rbx
  402744:	call   401040 <puts@plt>
  402749:	mov    rdi,rbx
  40274c:	call   401050 <strlen@plt>
  402751:	test   eax,eax
  402753:	jle    4028af <main@@Base+0xa8f>
  402759:	movsxd r9,eax
  40275c:	mov    r10d,r9d
  40275f:	lea    r8,[r10-0x2]
  402763:	lea    rdi,[rsp+0x21]
  402768:	mov    r13d,0x1
  40276e:	mov    r12,0xffffffffffffffff
  402775:	xor    r11d,r11d
  402778:	jmp    40279c <main@@Base+0x97c>
  40277a:	nop    WORD PTR [rax+rax*1+0x0]
  402780:	mov    cl,BYTE PTR [rdx]
  402782:	mov    bl,BYTE PTR [r15]
  402785:	mov    BYTE PTR [rdx],bl
  402787:	mov    BYTE PTR [r15],cl
  40278a:	inc    r13
  40278d:	dec    r12
  402790:	inc    rdi
  402793:	cmp    r11,r10
  402796:	je     4028af <main@@Base+0xa8f>
  40279c:	mov    rsi,r11
  40279f:	lea    r15,[rsp+r11*1]
  4027a3:	add    r15,0x20
  4027a7:	inc    r11
  4027aa:	mov    rdx,r15
  4027ad:	cmp    r11,r9
  4027b0:	jge    402780 <main@@Base+0x960>
  4027b2:	mov    rbp,r8
  4027b5:	sub    rbp,rsi
  4027b8:	not    esi
  4027ba:	add    esi,eax
  4027bc:	mov    rbx,r13
  4027bf:	mov    rdx,r15
  4027c2:	and    rsi,0x7
  4027c6:	je     4027f3 <main@@Base+0x9d3>
  4027c8:	xor    ebx,ebx
  4027ca:	mov    rdx,r15
  4027cd:	jmp    4027d8 <main@@Base+0x9b8>
  4027cf:	nop
  4027d0:	inc    rbx
  4027d3:	cmp    rsi,rbx
  4027d6:	je     4027f0 <main@@Base+0x9d0>
  4027d8:	movzx  ecx,BYTE PTR [rdi+rbx*1]
  4027dc:	cmp    cl,BYTE PTR [rdx]
  4027de:	jle    4027d0 <main@@Base+0x9b0>
  4027e0:	lea    rdx,[rdi+rbx*1]
  4027e4:	jmp    4027d0 <main@@Base+0x9b0>
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	sub    rbx,r12
  4027f3:	cmp    rbp,0x7
  4027f7:	jb     402780 <main@@Base+0x960>
  4027f9:	lea    rsi,[rsp+0x20]
  4027fe:	mov    rbp,r10
  402801:	jmp    402821 <main@@Base+0xa01>
  402803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40280d:	nop    DWORD PTR [rax]
  402810:	add    rbp,0xfffffffffffffff8
  402814:	add    rsi,0x8
  402818:	cmp    rbx,rbp
  40281b:	je     402780 <main@@Base+0x960>
  402821:	movzx  r14d,BYTE PTR [rsi+rbx*1]
  402826:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x1]
  40282b:	cmp    r14b,BYTE PTR [rdx]
  40282e:	jle    402834 <main@@Base+0xa14>
  402830:	lea    rdx,[rsi+rbx*1]
  402834:	cmp    cl,BYTE PTR [rdx]
  402836:	jle    402840 <main@@Base+0xa20>
  402838:	lea    rdx,[rsi+rbx*1]
  40283c:	add    rdx,0x1
  402840:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x2]
  402845:	cmp    cl,BYTE PTR [rdx]
  402847:	jle    402851 <main@@Base+0xa31>
  402849:	lea    rdx,[rsi+rbx*1]
  40284d:	add    rdx,0x2
  402851:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x3]
  402856:	cmp    cl,BYTE PTR [rdx]
  402858:	jle    402862 <main@@Base+0xa42>
  40285a:	lea    rdx,[rsi+rbx*1]
  40285e:	add    rdx,0x3
  402862:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x4]
  402867:	cmp    cl,BYTE PTR [rdx]
  402869:	jle    402873 <main@@Base+0xa53>
  40286b:	lea    rdx,[rsi+rbx*1]
  40286f:	add    rdx,0x4
  402873:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x5]
  402878:	cmp    cl,BYTE PTR [rdx]
  40287a:	jle    402884 <main@@Base+0xa64>
  40287c:	lea    rdx,[rsi+rbx*1]
  402880:	add    rdx,0x5
  402884:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x6]
  402889:	cmp    cl,BYTE PTR [rdx]
  40288b:	jle    402895 <main@@Base+0xa75>
  40288d:	lea    rdx,[rsi+rbx*1]
  402891:	add    rdx,0x6
  402895:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x7]
  40289a:	cmp    cl,BYTE PTR [rdx]
  40289c:	jle    402810 <main@@Base+0x9f0>
  4028a2:	lea    rdx,[rsi+rbx*1]
  4028a6:	add    rdx,0x7
  4028aa:	jmp    402810 <main@@Base+0x9f0>
  4028af:	lea    rdi,[rip+0x78b]        # 403041 <_IO_stdin_used@@Base+0x41>
  4028b6:	xor    eax,eax
  4028b8:	call   401060 <printf@plt>
  4028bd:	lea    rdi,[rsp+0x20]
  4028c2:	call   401040 <puts@plt>
  4028c7:	xor    eax,eax
  4028c9:	add    rsp,0x28
  4028cd:	pop    rbx
  4028ce:	pop    r12
  4028d0:	pop    r13
  4028d2:	pop    r14
  4028d4:	pop    r15
  4028d6:	pop    rbp
  4028d7:	ret    
  4028d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028e0 <__libc_csu_init@@Base>:
  4028e0:	endbr64 
  4028e4:	push   r15
  4028e6:	lea    r15,[rip+0x2513]        # 404e00 <_IO_stdin_used@@Base+0x1e00>
  4028ed:	push   r14
  4028ef:	mov    r14,rdx
  4028f2:	push   r13
  4028f4:	mov    r13,rsi
  4028f7:	push   r12
  4028f9:	mov    r12d,edi
  4028fc:	push   rbp
  4028fd:	lea    rbp,[rip+0x2504]        # 404e08 <_IO_stdin_used@@Base+0x1e08>
  402904:	push   rbx
  402905:	sub    rbp,r15
  402908:	sub    rsp,0x8
  40290c:	call   401000 <putchar@plt-0x30>
  402911:	sar    rbp,0x3
  402915:	je     402936 <__libc_csu_init@@Base+0x56>
  402917:	xor    ebx,ebx
  402919:	nop    DWORD PTR [rax+0x0]
  402920:	mov    rdx,r14
  402923:	mov    rsi,r13
  402926:	mov    edi,r12d
  402929:	call   QWORD PTR [r15+rbx*8]
  40292d:	add    rbx,0x1
  402931:	cmp    rbp,rbx
  402934:	jne    402920 <__libc_csu_init@@Base+0x40>
  402936:	add    rsp,0x8
  40293a:	pop    rbx
  40293b:	pop    rbp
  40293c:	pop    r12
  40293e:	pop    r13
  402940:	pop    r14
  402942:	pop    r15
  402944:	ret    
  402945:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402950 <__libc_csu_fini@@Base>:
  402950:	endbr64 
  402954:	ret    

Disassembly of section .fini:

0000000000402958 <.fini>:
  402958:	endbr64 
  40295c:	sub    rsp,0x8
  402960:	add    rsp,0x8
  402964:	ret    
