
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test/monster_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x1afe1]        # 41eff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x12a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <.plt>:
  404020:	push   QWORD PTR [rip+0x1afe2]        # 41f008 <flatcc_builder_padding_base@@Base+0x4e88>
  404026:	bnd jmp QWORD PTR [rip+0x1afe3]        # 41f010 <flatcc_builder_padding_base@@Base+0x4e90>
  40402d:	nop    DWORD PTR [rax]
  404030:	endbr64 
  404034:	push   0x0
  404039:	bnd jmp 404020 <free@plt-0x120>
  40403f:	nop
  404040:	endbr64 
  404044:	push   0x1
  404049:	bnd jmp 404020 <free@plt-0x120>
  40404f:	nop
  404050:	endbr64 
  404054:	push   0x2
  404059:	bnd jmp 404020 <free@plt-0x120>
  40405f:	nop
  404060:	endbr64 
  404064:	push   0x3
  404069:	bnd jmp 404020 <free@plt-0x120>
  40406f:	nop
  404070:	endbr64 
  404074:	push   0x4
  404079:	bnd jmp 404020 <free@plt-0x120>
  40407f:	nop
  404080:	endbr64 
  404084:	push   0x5
  404089:	bnd jmp 404020 <free@plt-0x120>
  40408f:	nop
  404090:	endbr64 
  404094:	push   0x6
  404099:	bnd jmp 404020 <free@plt-0x120>
  40409f:	nop
  4040a0:	endbr64 
  4040a4:	push   0x7
  4040a9:	bnd jmp 404020 <free@plt-0x120>
  4040af:	nop
  4040b0:	endbr64 
  4040b4:	push   0x8
  4040b9:	bnd jmp 404020 <free@plt-0x120>
  4040bf:	nop
  4040c0:	endbr64 
  4040c4:	push   0x9
  4040c9:	bnd jmp 404020 <free@plt-0x120>
  4040cf:	nop
  4040d0:	endbr64 
  4040d4:	push   0xa
  4040d9:	bnd jmp 404020 <free@plt-0x120>
  4040df:	nop
  4040e0:	endbr64 
  4040e4:	push   0xb
  4040e9:	bnd jmp 404020 <free@plt-0x120>
  4040ef:	nop
  4040f0:	endbr64 
  4040f4:	push   0xc
  4040f9:	bnd jmp 404020 <free@plt-0x120>
  4040ff:	nop
  404100:	endbr64 
  404104:	push   0xd
  404109:	bnd jmp 404020 <free@plt-0x120>
  40410f:	nop
  404110:	endbr64 
  404114:	push   0xe
  404119:	bnd jmp 404020 <free@plt-0x120>
  40411f:	nop
  404120:	endbr64 
  404124:	push   0xf
  404129:	bnd jmp 404020 <free@plt-0x120>
  40412f:	nop
  404130:	endbr64 
  404134:	push   0x10
  404139:	bnd jmp 404020 <free@plt-0x120>
  40413f:	nop

Disassembly of section .plt.sec:

0000000000404140 <free@plt>:
  404140:	endbr64 
  404144:	bnd jmp QWORD PTR [rip+0x1aecd]        # 41f018 <free@GLIBC_2.2.5>
  40414b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404150 <strncpy@plt>:
  404150:	endbr64 
  404154:	bnd jmp QWORD PTR [rip+0x1aec5]        # 41f020 <strncpy@GLIBC_2.2.5>
  40415b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404160 <strncmp@plt>:
  404160:	endbr64 
  404164:	bnd jmp QWORD PTR [rip+0x1aebd]        # 41f028 <strncmp@GLIBC_2.2.5>
  40416b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404170 <strlen@plt>:
  404170:	endbr64 
  404174:	bnd jmp QWORD PTR [rip+0x1aeb5]        # 41f030 <strlen@GLIBC_2.2.5>
  40417b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404180 <__stack_chk_fail@plt>:
  404180:	endbr64 
  404184:	bnd jmp QWORD PTR [rip+0x1aead]        # 41f038 <__stack_chk_fail@GLIBC_2.4>
  40418b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404190 <gettimeofday@plt>:
  404190:	endbr64 
  404194:	bnd jmp QWORD PTR [rip+0x1aea5]        # 41f040 <gettimeofday@GLIBC_2.2.5>
  40419b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041a0 <__assert_fail@plt>:
  4041a0:	endbr64 
  4041a4:	bnd jmp QWORD PTR [rip+0x1ae9d]        # 41f048 <__assert_fail@GLIBC_2.2.5>
  4041ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041b0 <memset@plt>:
  4041b0:	endbr64 
  4041b4:	bnd jmp QWORD PTR [rip+0x1ae95]        # 41f050 <memset@GLIBC_2.2.5>
  4041bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041c0 <memchr@plt>:
  4041c0:	endbr64 
  4041c4:	bnd jmp QWORD PTR [rip+0x1ae8d]        # 41f058 <memchr@GLIBC_2.2.5>
  4041cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041d0 <memcmp@plt>:
  4041d0:	endbr64 
  4041d4:	bnd jmp QWORD PTR [rip+0x1ae85]        # 41f060 <memcmp@GLIBC_2.2.5>
  4041db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041e0 <strcmp@plt>:
  4041e0:	endbr64 
  4041e4:	bnd jmp QWORD PTR [rip+0x1ae7d]        # 41f068 <strcmp@GLIBC_2.2.5>
  4041eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041f0 <memcpy@plt>:
  4041f0:	endbr64 
  4041f4:	bnd jmp QWORD PTR [rip+0x1ae75]        # 41f070 <memcpy@GLIBC_2.14>
  4041fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404200 <malloc@plt>:
  404200:	endbr64 
  404204:	bnd jmp QWORD PTR [rip+0x1ae6d]        # 41f078 <malloc@GLIBC_2.2.5>
  40420b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404210 <realloc@plt>:
  404210:	endbr64 
  404214:	bnd jmp QWORD PTR [rip+0x1ae65]        # 41f080 <realloc@GLIBC_2.2.5>
  40421b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404220 <__printf_chk@plt>:
  404220:	endbr64 
  404224:	bnd jmp QWORD PTR [rip+0x1ae5d]        # 41f088 <__printf_chk@GLIBC_2.3.4>
  40422b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404230 <__fprintf_chk@plt>:
  404230:	endbr64 
  404234:	bnd jmp QWORD PTR [rip+0x1ae55]        # 41f090 <__fprintf_chk@GLIBC_2.3.4>
  40423b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404240 <posix_memalign@plt>:
  404240:	endbr64 
  404244:	bnd jmp QWORD PTR [rip+0x1ae4d]        # 41f098 <posix_memalign@GLIBC_2.2.5>
  40424b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000404250 <main@@Base-0x20>:
  404250:	mov    eax,DWORD PTR ds:0x0
  404257:	ud2    
  404259:	vmovss xmm0,DWORD PTR ds:0x0
  404262:	ud2    
  404264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40426e:	xchg   ax,ax

0000000000404270 <main@@Base>:
  404270:	endbr64 
  404274:	push   rbp
  404275:	push   rbx
  404276:	sub    rsp,0x198
  40427d:	mov    rbx,rsp
  404280:	mov    rdi,rbx
  404283:	mov    rax,QWORD PTR fs:0x28
  40428c:	mov    QWORD PTR [rsp+0x188],rax
  404294:	xor    eax,eax
  404296:	call   40fa80 <flatcc_builder_init@@Base>
  40429b:	mov    edi,0x1
  4042a0:	xor    eax,eax
  4042a2:	lea    rsi,[rip+0x12763]        # 416a0c <_IO_stdin_used@@Base+0xa0c>
  4042a9:	call   404220 <__printf_chk@plt>
  4042ae:	mov    rdi,rbx
  4042b1:	call   406c70 <test_table_with_emptystruct@@Base>
  4042b6:	test   eax,eax
  4042b8:	jne    404427 <main@@Base+0x1b7>
  4042be:	mov    rdi,rbx
  4042c1:	call   4061e0 <test_enums@@Base>
  4042c6:	test   eax,eax
  4042c8:	jne    404427 <main@@Base+0x1b7>
  4042ce:	mov    rdi,rbx
  4042d1:	call   406700 <test_empty_monster@@Base>
  4042d6:	test   eax,eax
  4042d8:	jne    404427 <main@@Base+0x1b7>
  4042de:	mov    rdi,rbx
  4042e1:	call   408610 <test_monster@@Base>
  4042e6:	test   eax,eax
  4042e8:	jne    404427 <main@@Base+0x1b7>
  4042ee:	mov    rdi,rbx
  4042f1:	call   4086e0 <test_monster_with_size@@Base>
  4042f6:	test   eax,eax
  4042f8:	jne    404427 <main@@Base+0x1b7>
  4042fe:	mov    rdi,rbx
  404301:	call   408820 <test_string@@Base>
  404306:	test   eax,eax
  404308:	jne    404427 <main@@Base+0x1b7>
  40430e:	mov    rdi,rbx
  404311:	call   40e990 <test_struct_buffer@@Base>
  404316:	test   eax,eax
  404318:	jne    404427 <main@@Base+0x1b7>
  40431e:	mov    rdi,rbx
  404321:	call   406890 <test_typed_empty_monster@@Base>
  404326:	test   eax,eax
  404328:	jne    404427 <main@@Base+0x1b7>
  40432e:	mov    rdi,rbx
  404331:	call   406d80 <test_typed_table_with_emptystruct@@Base>
  404336:	test   eax,eax
  404338:	jne    404427 <main@@Base+0x1b7>
  40433e:	mov    rdi,rbx
  404341:	call   40ebc0 <test_typed_struct_buffer@@Base>
  404346:	test   eax,eax
  404348:	jne    404427 <main@@Base+0x1b7>
  40434e:	mov    rdi,rbx
  404351:	call   40bb80 <test_clone_slice@@Base>
  404356:	test   eax,eax
  404358:	jne    404427 <main@@Base+0x1b7>
  40435e:	mov    rdi,rbx
  404361:	call   40dae0 <test_add_set_defaults@@Base>
  404366:	test   eax,eax
  404368:	jne    404427 <main@@Base+0x1b7>
  40436e:	mov    rdi,rbx
  404371:	call   40c730 <test_create_add_field@@Base>
  404376:	test   eax,eax
  404378:	jne    404427 <main@@Base+0x1b7>
  40437e:	mov    rdi,rbx
  404381:	call   40c9d0 <test_union_vector@@Base>
  404386:	test   eax,eax
  404388:	jne    404427 <main@@Base+0x1b7>
  40438e:	mov    rdi,rbx
  404391:	call   40b6d0 <test_basic_sort@@Base>
  404396:	test   eax,eax
  404398:	jne    404427 <main@@Base+0x1b7>
  40439e:	mov    rdi,rbx
  4043a1:	call   408ab0 <test_sort_find@@Base>
  4043a6:	test   eax,eax
  4043a8:	jne    404427 <main@@Base+0x1b7>
  4043aa:	mov    rdi,rbx
  4043ad:	call   409f70 <test_scan@@Base>
  4043b2:	test   eax,eax
  4043b4:	jne    404427 <main@@Base+0x1b7>
  4043b6:	mov    rdi,rbx
  4043b9:	call   40de50 <test_nested_buffer@@Base>
  4043be:	test   eax,eax
  4043c0:	jne    404427 <main@@Base+0x1b7>
  4043c2:	mov    rdi,rbx
  4043c5:	call   40e1c0 <test_nested_buffer_first@@Base>
  4043ca:	test   eax,eax
  4043cc:	jne    404427 <main@@Base+0x1b7>
  4043ce:	mov    rdi,rbx
  4043d1:	call   40e530 <test_nested_buffer_using_nest@@Base>
  4043d6:	test   eax,eax
  4043d8:	jne    404427 <main@@Base+0x1b7>
  4043da:	mov    rdi,rbx
  4043dd:	call   40e980 <verify_include@@Base>
  4043e2:	test   eax,eax
  4043e4:	jne    404427 <main@@Base+0x1b7>
  4043e6:	mov    rdi,rbx
  4043e9:	call   4061f0 <test_type_aliases@@Base>
  4043ee:	test   eax,eax
  4043f0:	jne    404427 <main@@Base+0x1b7>
  4043f2:	mov    rdi,rbx
  4043f5:	call   40cdc0 <test_mixed_type_union@@Base>
  4043fa:	mov    ebp,eax
  4043fc:	test   eax,eax
  4043fe:	jne    404427 <main@@Base+0x1b7>
  404400:	mov    rdi,rbx
  404403:	call   40fc40 <flatcc_builder_clear@@Base>
  404408:	mov    rdx,QWORD PTR [rsp+0x188]
  404410:	xor    rdx,QWORD PTR fs:0x28
  404419:	mov    eax,ebp
  40441b:	jne    40443f <main@@Base+0x1cf>
  40441d:	add    rsp,0x198
  404424:	pop    rbx
  404425:	pop    rbp
  404426:	ret    
  404427:	lea    rsi,[rip+0x125fa]        # 416a28 <_IO_stdin_used@@Base+0xa28>
  40442e:	mov    edi,0x1
  404433:	xor    eax,eax
  404435:	call   404220 <__printf_chk@plt>
  40443a:	or     ebp,0xffffffff
  40443d:	jmp    404408 <main@@Base+0x198>
  40443f:	call   404180 <__stack_chk_fail@plt>
  404444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40444e:	xchg   ax,ax

0000000000404450 <_start@@Base>:
  404450:	endbr64 
  404454:	xor    ebp,ebp
  404456:	mov    r9,rdx
  404459:	pop    rsi
  40445a:	mov    rdx,rsp
  40445d:	and    rsp,0xfffffffffffffff0
  404461:	push   rax
  404462:	push   rsp
  404463:	mov    r8,0x4152d0
  40446a:	mov    rcx,0x415260
  404471:	mov    rdi,0x404270
  404478:	call   QWORD PTR [rip+0x1ab6a]        # 41efe8 <__libc_start_main@GLIBC_2.2.5>
  40447e:	hlt    
  40447f:	nop
  404480:	endbr64 
  404484:	ret    
  404485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40448f:	nop
  404490:	mov    eax,0x41f0b0
  404495:	cmp    rax,0x41f0b0
  40449b:	je     4044b0 <_start@@Base+0x60>
  40449d:	mov    eax,0x0
  4044a2:	test   rax,rax
  4044a5:	je     4044b0 <_start@@Base+0x60>
  4044a7:	mov    edi,0x41f0b0
  4044ac:	jmp    rax
  4044ae:	xchg   ax,ax
  4044b0:	ret    
  4044b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044bc:	nop    DWORD PTR [rax+0x0]
  4044c0:	mov    esi,0x41f0b0
  4044c5:	sub    rsi,0x41f0b0
  4044cc:	sar    rsi,0x3
  4044d0:	mov    rax,rsi
  4044d3:	shr    rax,0x3f
  4044d7:	add    rsi,rax
  4044da:	sar    rsi,1
  4044dd:	je     4044f0 <_start@@Base+0xa0>
  4044df:	mov    eax,0x0
  4044e4:	test   rax,rax
  4044e7:	je     4044f0 <_start@@Base+0xa0>
  4044e9:	mov    edi,0x41f0b0
  4044ee:	jmp    rax
  4044f0:	ret    
  4044f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044fc:	nop    DWORD PTR [rax+0x0]
  404500:	endbr64 
  404504:	cmp    BYTE PTR [rip+0x1aba5],0x0        # 41f0b0 <__bss_start@@Base>
  40450b:	jne    404520 <_start@@Base+0xd0>
  40450d:	push   rbp
  40450e:	mov    rbp,rsp
  404511:	call   404490 <_start@@Base+0x40>
  404516:	mov    BYTE PTR [rip+0x1ab93],0x1        # 41f0b0 <__bss_start@@Base>
  40451d:	pop    rbp
  40451e:	ret    
  40451f:	nop
  404520:	ret    
  404521:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40452c:	nop    DWORD PTR [rax+0x0]
  404530:	endbr64 
  404534:	jmp    4044c0 <_start@@Base+0x70>
  404536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404540:	endbr64 
  404544:	xor    eax,eax
  404546:	ret    
  404547:	nop    WORD PTR [rax+rax*1+0x0]
  404550:	endbr64 
  404554:	mov    ecx,0x4
  404559:	mov    edx,0x4
  40455e:	xor    esi,esi
  404560:	jmp    413c10 <flatcc_verify_field@@Base>
  404565:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404570:	endbr64 
  404574:	mov    ecx,0x1
  404579:	xor    edx,edx
  40457b:	xor    esi,esi
  40457d:	jmp    413c10 <flatcc_verify_field@@Base>
  404582:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40458d:	nop    DWORD PTR [rax]
  404590:	push   r15
  404592:	push   r14
  404594:	push   r13
  404596:	mov    r13,rsi
  404599:	mov    esi,0x1
  40459e:	push   r12
  4045a0:	push   rbp
  4045a1:	mov    rbp,rcx
  4045a4:	mov    rcx,rdi
  4045a7:	push   rbx
  4045a8:	mov    rdi,rbp
  4045ab:	mov    rbx,rdx
  4045ae:	sub    rsp,0x48
  4045b2:	mov    QWORD PTR [rsp+0x10],rdx
  4045b7:	lea    rdx,[rip+0x11a46]        # 416004 <_IO_stdin_used@@Base+0x4>
  4045be:	mov    rax,QWORD PTR fs:0x28
  4045c7:	mov    QWORD PTR [rsp+0x38],rax
  4045cc:	xor    eax,eax
  4045ce:	call   404230 <__fprintf_chk@plt>
  4045d3:	test   ebx,ebx
  4045d5:	je     404738 <_start@@Base+0x2e8>
  4045db:	mov    rax,QWORD PTR [rsp+0x10]
  4045e0:	mov    r12d,ebx
  4045e3:	dec    eax
  4045e5:	mov    QWORD PTR [rsp],rax
  4045e9:	lea    rax,[rsp+0x20]
  4045ee:	xor    r15d,r15d
  4045f1:	mov    QWORD PTR [rsp+0x8],rax
  4045f6:	mov    r14d,0x2e
  4045fc:	jmp    404668 <_start@@Base+0x218>
  4045fe:	xchg   ax,ax
  404600:	test   r15d,r15d
  404603:	jne    404698 <_start@@Base+0x248>
  404609:	mov    ecx,r9d
  40460c:	lea    rdx,[rip+0x119fc]        # 41600f <_IO_stdin_used@@Base+0xf>
  404613:	mov    esi,0x1
  404618:	mov    rdi,rbp
  40461b:	xor    eax,eax
  40461d:	call   404230 <__fprintf_chk@plt>
  404622:	movzx  ecx,BYTE PTR [r13+r15*1+0x0]
  404628:	lea    rdx,[rip+0x119e8]        # 416017 <_IO_stdin_used@@Base+0x17>
  40462f:	xor    eax,eax
  404631:	mov    esi,0x1
  404636:	mov    rdi,rbp
  404639:	call   404230 <__fprintf_chk@plt>
  40463e:	movzx  eax,BYTE PTR [r13+r15*1+0x0]
  404644:	lea    edx,[rax-0x20]
  404647:	cmp    dl,0x5f
  40464a:	cmovae eax,r14d
  40464e:	mov    edx,ebx
  404650:	inc    ebx
  404652:	mov    BYTE PTR [rsp+rdx*1+0x20],al
  404656:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  40465b:	lea    rax,[r15+0x1]
  40465f:	cmp    QWORD PTR [rsp],r15
  404663:	je     4046c8 <_start@@Base+0x278>
  404665:	mov    r15,rax
  404668:	mov    ebx,r15d
  40466b:	mov    r9d,r15d
  40466e:	and    ebx,0xf
  404671:	je     404600 <_start@@Base+0x1b0>
  404673:	test   r15b,0x7
  404677:	jne    404622 <_start@@Base+0x1d2>
  404679:	lea    rdx,[rip+0x1199f]        # 41601f <_IO_stdin_used@@Base+0x1f>
  404680:	mov    esi,0x1
  404685:	mov    rdi,rbp
  404688:	xor    eax,eax
  40468a:	call   404230 <__fprintf_chk@plt>
  40468f:	jmp    404622 <_start@@Base+0x1d2>
  404691:	nop    DWORD PTR [rax+0x0]
  404698:	mov    rcx,QWORD PTR [rsp+0x8]
  40469d:	lea    rdx,[rip+0x11965]        # 416009 <_IO_stdin_used@@Base+0x9>
  4046a4:	mov    esi,0x1
  4046a9:	mov    rdi,rbp
  4046ac:	xor    eax,eax
  4046ae:	mov    DWORD PTR [rsp+0x1c],r15d
  4046b3:	call   404230 <__fprintf_chk@plt>
  4046b8:	mov    r9d,DWORD PTR [rsp+0x1c]
  4046bd:	jmp    404609 <_start@@Base+0x1b9>
  4046c2:	nop    WORD PTR [rax+rax*1+0x0]
  4046c8:	test   BYTE PTR [rsp+0x10],0xf
  4046cd:	je     4046fb <_start@@Base+0x2ab>
  4046cf:	lea    rbx,[rip+0x11947]        # 41601d <_IO_stdin_used@@Base+0x1d>
  4046d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046e0:	mov    rdx,rbx
  4046e3:	mov    esi,0x1
  4046e8:	mov    rdi,rbp
  4046eb:	xor    eax,eax
  4046ed:	inc    r12d
  4046f0:	call   404230 <__fprintf_chk@plt>
  4046f5:	test   r12b,0xf
  4046f9:	jne    4046e0 <_start@@Base+0x290>
  4046fb:	mov    rcx,QWORD PTR [rsp+0x8]
  404700:	xor    eax,eax
  404702:	lea    rdx,[rip+0x11900]        # 416009 <_IO_stdin_used@@Base+0x9>
  404709:	mov    esi,0x1
  40470e:	mov    rdi,rbp
  404711:	call   404230 <__fprintf_chk@plt>
  404716:	mov    rax,QWORD PTR [rsp+0x38]
  40471b:	xor    rax,QWORD PTR fs:0x28
  404724:	jne    404744 <_start@@Base+0x2f4>
  404726:	add    rsp,0x48
  40472a:	pop    rbx
  40472b:	pop    rbp
  40472c:	pop    r12
  40472e:	pop    r13
  404730:	pop    r14
  404732:	pop    r15
  404734:	ret    
  404735:	nop    DWORD PTR [rax]
  404738:	lea    rax,[rsp+0x20]
  40473d:	mov    QWORD PTR [rsp+0x8],rax
  404742:	jmp    4046fb <_start@@Base+0x2ab>
  404744:	call   404180 <__stack_chk_fail@plt>
  404749:	nop    DWORD PTR [rax+0x0]
  404750:	push   rbp
  404751:	push   rbx
  404752:	mov    rbx,rdi
  404755:	sub    rsp,0x8
  404759:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40475e:	test   eax,eax
  404760:	je     404788 <_start@@Base+0x338>
  404762:	mov    esi,0x3
  404767:	mov    rdi,rbx
  40476a:	mov    ebp,eax
  40476c:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  404771:	test   rax,rax
  404774:	je     404788 <_start@@Base+0x338>
  404776:	mov    DWORD PTR [rax],ebp
  404778:	xor    eax,eax
  40477a:	add    rsp,0x8
  40477e:	pop    rbx
  40477f:	pop    rbp
  404780:	ret    
  404781:	nop    DWORD PTR [rax+0x0]
  404788:	mov    eax,0xffffffff
  40478d:	jmp    40477a <_start@@Base+0x32a>
  40478f:	nop
  404790:	sub    rsp,0x28
  404794:	mov    rdi,rsp
  404797:	xor    esi,esi
  404799:	mov    rax,QWORD PTR fs:0x28
  4047a2:	mov    QWORD PTR [rsp+0x18],rax
  4047a7:	xor    eax,eax
  4047a9:	call   404190 <gettimeofday@plt>
  4047ae:	mov    rdx,QWORD PTR [rip+0x1a90b]        # 41f0c0 <__bss_start@@Base+0x10>
  4047b5:	test   rdx,rdx
  4047b8:	jne    4047cc <_start@@Base+0x37c>
  4047ba:	vmovdqa xmm0,XMMWORD PTR [rsp]
  4047bf:	vmovq  rdx,xmm0
  4047c4:	vmovaps XMMWORD PTR [rip+0x1a8f4],xmm0        # 41f0c0 <__bss_start@@Base+0x10>
  4047cc:	mov    rax,QWORD PTR [rsp+0x8]
  4047d1:	vxorpd xmm0,xmm0,xmm0
  4047d5:	sub    rax,QWORD PTR [rip+0x1a8ec]        # 41f0c8 <__bss_start@@Base+0x18>
  4047dc:	vcvtsi2sd xmm0,xmm0,rax
  4047e1:	mov    rax,QWORD PTR [rsp]
  4047e5:	vxorpd xmm1,xmm1,xmm1
  4047e9:	sub    rax,rdx
  4047ec:	vcvtsi2sd xmm1,xmm1,rax
  4047f1:	mov    rax,QWORD PTR [rsp+0x18]
  4047f6:	xor    rax,QWORD PTR fs:0x28
  4047ff:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14e39]        # 419640 <_IO_stdin_used@@Base+0x3640>
  404807:	vaddsd xmm0,xmm0,xmm1
  40480b:	jne    404812 <_start@@Base+0x3c2>
  40480d:	add    rsp,0x28
  404811:	ret    
  404812:	call   404180 <__stack_chk_fail@plt>
  404817:	nop    WORD PTR [rax+rax*1+0x0]
  404820:	push   rax
  404821:	pop    rax
  404822:	lea    rcx,[rip+0x14de7]        # 419610 <_IO_stdin_used@@Base+0x3610>
  404829:	mov    edx,0x2b9
  40482e:	lea    rsi,[rip+0x12203]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404835:	lea    rdi,[rip+0x1227c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40483c:	sub    rsp,0x8
  404840:	call   4041a0 <__assert_fail@plt>
  404845:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404850:	push   rax
  404851:	pop    rax
  404852:	lea    rcx,[rip+0x14d87]        # 4195e0 <_IO_stdin_used@@Base+0x35e0>
  404859:	mov    edx,0x2b9
  40485e:	lea    rsi,[rip+0x121d3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404865:	lea    rdi,[rip+0x1224c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40486c:	sub    rsp,0x8
  404870:	call   4041a0 <__assert_fail@plt>
  404875:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404880:	push   rax
  404881:	pop    rax
  404882:	lea    rcx,[rip+0x14d17]        # 4195a0 <_IO_stdin_used@@Base+0x35a0>
  404889:	mov    edx,0x2b8
  40488e:	lea    rsi,[rip+0x121a3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404895:	lea    rdi,[rip+0x1221c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40489c:	sub    rsp,0x8
  4048a0:	call   4041a0 <__assert_fail@plt>
  4048a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048b0:	push   rax
  4048b1:	pop    rax
  4048b2:	lea    rcx,[rip+0x14cb7]        # 419570 <_IO_stdin_used@@Base+0x3570>
  4048b9:	mov    edx,0x2b8
  4048be:	lea    rsi,[rip+0x12173]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4048c5:	lea    rdi,[rip+0x121ec]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4048cc:	sub    rsp,0x8
  4048d0:	call   4041a0 <__assert_fail@plt>
  4048d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048e0:	push   rax
  4048e1:	pop    rax
  4048e2:	lea    rcx,[rip+0x14bb7]        # 4194a0 <_IO_stdin_used@@Base+0x34a0>
  4048e9:	mov    edx,0x2c2
  4048ee:	lea    rsi,[rip+0x12143]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4048f5:	lea    rdi,[rip+0x121bc]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4048fc:	sub    rsp,0x8
  404900:	call   4041a0 <__assert_fail@plt>
  404905:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404910:	push   rax
  404911:	pop    rax
  404912:	lea    rcx,[rip+0x14b57]        # 419470 <_IO_stdin_used@@Base+0x3470>
  404919:	mov    edx,0x18b
  40491e:	lea    rsi,[rip+0x121bb]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  404925:	lea    rdi,[rip+0x1223c]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  40492c:	sub    rsp,0x8
  404930:	call   4041a0 <__assert_fail@plt>
  404935:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404940:	push   rax
  404941:	pop    rax
  404942:	lea    rcx,[rip+0x14b07]        # 419450 <_IO_stdin_used@@Base+0x3450>
  404949:	mov    edx,0x2ba
  40494e:	lea    rsi,[rip+0x120e3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404955:	lea    rdi,[rip+0x1215c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40495c:	sub    rsp,0x8
  404960:	call   4041a0 <__assert_fail@plt>
  404965:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404970:	push   rax
  404971:	pop    rax
  404972:	lea    rcx,[rip+0x14aa7]        # 419420 <_IO_stdin_used@@Base+0x3420>
  404979:	mov    edx,0x2ba
  40497e:	lea    rsi,[rip+0x120b3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404985:	lea    rdi,[rip+0x1212c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40498c:	sub    rsp,0x8
  404990:	call   4041a0 <__assert_fail@plt>
  404995:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4049a0:	push   rax
  4049a1:	pop    rax
  4049a2:	lea    rcx,[rip+0x14a47]        # 4193f0 <_IO_stdin_used@@Base+0x33f0>
  4049a9:	mov    edx,0x2ce
  4049ae:	lea    rsi,[rip+0x12083]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4049b5:	lea    rdi,[rip+0x120fc]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4049bc:	sub    rsp,0x8
  4049c0:	call   4041a0 <__assert_fail@plt>
  4049c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4049d0:	push   rax
  4049d1:	pop    rax
  4049d2:	lea    rcx,[rip+0x149e7]        # 4193c0 <_IO_stdin_used@@Base+0x33c0>
  4049d9:	mov    edx,0x2c8
  4049de:	lea    rsi,[rip+0x12053]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4049e5:	lea    rdi,[rip+0x120cc]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4049ec:	sub    rsp,0x8
  4049f0:	call   4041a0 <__assert_fail@plt>
  4049f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a00:	push   rax
  404a01:	pop    rax
  404a02:	lea    rcx,[rip+0x14987]        # 419390 <_IO_stdin_used@@Base+0x3390>
  404a09:	mov    edx,0x6c
  404a0e:	lea    rsi,[rip+0x120cb]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  404a15:	lea    rdi,[rip+0x1214c]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  404a1c:	sub    rsp,0x8
  404a20:	call   4041a0 <__assert_fail@plt>
  404a25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a30:	push   rax
  404a31:	pop    rax
  404a32:	lea    rcx,[rip+0x14927]        # 419360 <_IO_stdin_used@@Base+0x3360>
  404a39:	mov    edx,0x2ca
  404a3e:	lea    rsi,[rip+0x11ff3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404a45:	lea    rdi,[rip+0x1206c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404a4c:	sub    rsp,0x8
  404a50:	call   4041a0 <__assert_fail@plt>
  404a55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a60:	push   rax
  404a61:	pop    rax
  404a62:	lea    rcx,[rip+0x148b7]        # 419320 <_IO_stdin_used@@Base+0x3320>
  404a69:	mov    edx,0x2c7
  404a6e:	lea    rsi,[rip+0x11fc3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404a75:	lea    rdi,[rip+0x1203c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404a7c:	sub    rsp,0x8
  404a80:	call   4041a0 <__assert_fail@plt>
  404a85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a90:	push   rax
  404a91:	pop    rax
  404a92:	lea    rcx,[rip+0x14857]        # 4192f0 <_IO_stdin_used@@Base+0x32f0>
  404a99:	mov    edx,0x2b5
  404a9e:	lea    rsi,[rip+0x11f93]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404aa5:	lea    rdi,[rip+0x120bc]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  404aac:	sub    rsp,0x8
  404ab0:	call   4041a0 <__assert_fail@plt>
  404ab5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404ac0:	push   rax
  404ac1:	pop    rax
  404ac2:	lea    rcx,[rip+0x147f7]        # 4192c0 <_IO_stdin_used@@Base+0x32c0>
  404ac9:	mov    edx,0x2cd
  404ace:	lea    rsi,[rip+0x11f63]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404ad5:	lea    rdi,[rip+0x11fdc]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404adc:	sub    rsp,0x8
  404ae0:	call   4041a0 <__assert_fail@plt>
  404ae5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404af0:	test   rdi,rdi
  404af3:	je     404b14 <_start@@Base+0x6c4>
  404af5:	movsxd rax,DWORD PTR [rdi]
  404af8:	mov    rdx,rdi
  404afb:	sub    rdx,rax
  404afe:	xor    eax,eax
  404b00:	cmp    WORD PTR [rdx],0x13
  404b04:	jbe    404b13 <_start@@Base+0x6c3>
  404b06:	movzx  edx,WORD PTR [rdx+0x12]
  404b0a:	test   dx,dx
  404b0d:	je     404b13 <_start@@Base+0x6c3>
  404b0f:	movzx  eax,BYTE PTR [rdi+rdx*1]
  404b13:	ret    
  404b14:	push   rax
  404b15:	call   404ac0 <_start@@Base+0x670>
  404b1a:	nop    WORD PTR [rax+rax*1+0x0]
  404b20:	push   rax
  404b21:	pop    rax
  404b22:	lea    rcx,[rip+0x14767]        # 419290 <_IO_stdin_used@@Base+0x3290>
  404b29:	mov    edx,0x2cd
  404b2e:	lea    rsi,[rip+0x11f03]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404b35:	lea    rdi,[rip+0x11f7c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404b3c:	sub    rsp,0x8
  404b40:	call   4041a0 <__assert_fail@plt>
  404b45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404b50:	test   rdi,rdi
  404b53:	je     404b78 <_start@@Base+0x728>
  404b55:	movsxd rax,DWORD PTR [rdi]
  404b58:	mov    rdx,rdi
  404b5b:	sub    rdx,rax
  404b5e:	xor    eax,eax
  404b60:	cmp    WORD PTR [rdx],0x15
  404b64:	jbe    404b77 <_start@@Base+0x727>
  404b66:	movzx  edx,WORD PTR [rdx+0x14]
  404b6a:	test   dx,dx
  404b6d:	je     404b77 <_start@@Base+0x727>
  404b6f:	add    rdi,rdx
  404b72:	mov    eax,DWORD PTR [rdi]
  404b74:	add    rax,rdi
  404b77:	ret    
  404b78:	push   rax
  404b79:	call   404b20 <_start@@Base+0x6d0>
  404b7e:	xchg   ax,ax
  404b80:	push   rax
  404b81:	pop    rax
  404b82:	lea    rcx,[rip+0x146e7]        # 419270 <_IO_stdin_used@@Base+0x3270>
  404b89:	mov    edx,0x2bb
  404b8e:	lea    rsi,[rip+0x11ea3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404b95:	lea    rdi,[rip+0x11f1c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404b9c:	sub    rsp,0x8
  404ba0:	call   4041a0 <__assert_fail@plt>
  404ba5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404bb0:	sub    rsp,0x8
  404bb4:	test   rdi,rdi
  404bb7:	je     404bff <_start@@Base+0x7af>
  404bb9:	movsxd rax,DWORD PTR [rdi]
  404bbc:	mov    rdx,rdi
  404bbf:	sub    rdx,rax
  404bc2:	cmp    WORD PTR [rdx],0xb
  404bc6:	jbe    404be0 <_start@@Base+0x790>
  404bc8:	movzx  eax,WORD PTR [rdx+0xa]
  404bcc:	test   ax,ax
  404bcf:	je     404be0 <_start@@Base+0x790>
  404bd1:	add    rdi,rax
  404bd4:	mov    eax,DWORD PTR [rdi]
  404bd6:	add    rsp,0x8
  404bda:	lea    rax,[rdi+rax*1+0x4]
  404bdf:	ret    
  404be0:	lea    rcx,[rip+0x14689]        # 419270 <_IO_stdin_used@@Base+0x3270>
  404be7:	mov    edx,0x2bb
  404bec:	lea    rsi,[rip+0x11e45]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404bf3:	lea    rdi,[rip+0x11fa6]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  404bfa:	call   4041a0 <__assert_fail@plt>
  404bff:	call   404b80 <_start@@Base+0x730>
  404c04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c0f:	nop
  404c10:	push   rax
  404c11:	pop    rax
  404c12:	lea    rcx,[rip+0x14627]        # 419240 <_IO_stdin_used@@Base+0x3240>
  404c19:	mov    edx,0x2d2
  404c1e:	lea    rsi,[rip+0x11e13]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404c25:	lea    rdi,[rip+0x11e8c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404c2c:	sub    rsp,0x8
  404c30:	call   4041a0 <__assert_fail@plt>
  404c35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c40:	push   rax
  404c41:	pop    rax
  404c42:	lea    rcx,[rip+0x14457]        # 4190a0 <_IO_stdin_used@@Base+0x30a0>
  404c49:	mov    edx,0x26d
  404c4e:	lea    rsi,[rip+0x11de3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404c55:	lea    rdi,[rip+0x11e5c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404c5c:	sub    rsp,0x8
  404c60:	call   4041a0 <__assert_fail@plt>
  404c65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c70:	push   rax
  404c71:	pop    rax
  404c72:	lea    rcx,[rip+0x143f7]        # 419070 <_IO_stdin_used@@Base+0x3070>
  404c79:	mov    edx,0x26d
  404c7e:	lea    rsi,[rip+0x11db3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404c85:	lea    rdi,[rip+0x11e2c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404c8c:	sub    rsp,0x8
  404c90:	call   4041a0 <__assert_fail@plt>
  404c95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404ca0:	push   rax
  404ca1:	pop    rax
  404ca2:	lea    rcx,[rip+0x143a7]        # 419050 <_IO_stdin_used@@Base+0x3050>
  404ca9:	mov    edx,0x75
  404cae:	lea    rsi,[rip+0x11e2b]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  404cb5:	lea    rdi,[rip+0x11eac]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  404cbc:	sub    rsp,0x8
  404cc0:	call   4041a0 <__assert_fail@plt>
  404cc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404cd0:	push   rax
  404cd1:	pop    rax
  404cd2:	lea    rcx,[rip+0x14317]        # 418ff0 <_IO_stdin_used@@Base+0x2ff0>
  404cd9:	mov    edx,0x195
  404cde:	lea    rsi,[rip+0x11dfb]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  404ce5:	lea    rdi,[rip+0x11e7c]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  404cec:	sub    rsp,0x8
  404cf0:	call   4041a0 <__assert_fail@plt>
  404cf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d00:	push   rax
  404d01:	pop    rax
  404d02:	lea    rcx,[rip+0x14247]        # 418f50 <_IO_stdin_used@@Base+0x2f50>
  404d09:	mov    edx,0x335
  404d0e:	lea    rsi,[rip+0x11d23]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404d15:	lea    rdi,[rip+0x11d9c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404d1c:	sub    rsp,0x8
  404d20:	call   4041a0 <__assert_fail@plt>
  404d25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d30:	push   rax
  404d31:	pop    rax
  404d32:	lea    rcx,[rip+0x141f7]        # 418f30 <_IO_stdin_used@@Base+0x2f30>
  404d39:	mov    edx,0x335
  404d3e:	lea    rsi,[rip+0x11cf3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404d45:	lea    rdi,[rip+0x11d6c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404d4c:	sub    rsp,0x8
  404d50:	call   4041a0 <__assert_fail@plt>
  404d55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404d60:	test   rdi,rdi
  404d63:	je     404d83 <_start@@Base+0x933>
  404d65:	movsxd rax,DWORD PTR [rdi]
  404d68:	mov    rdx,rdi
  404d6b:	sub    rdx,rax
  404d6e:	xor    eax,eax
  404d70:	cmp    WORD PTR [rdx],0x5
  404d74:	jbe    404d82 <_start@@Base+0x932>
  404d76:	movzx  edx,WORD PTR [rdx+0x4]
  404d7a:	test   dx,dx
  404d7d:	je     404d82 <_start@@Base+0x932>
  404d7f:	mov    eax,DWORD PTR [rdi+rdx*1]
  404d82:	ret    
  404d83:	push   rax
  404d84:	lea    rcx,[rip+0x14155]        # 418ee0 <_IO_stdin_used@@Base+0x2ee0>
  404d8b:	mov    edx,0x302
  404d90:	lea    rsi,[rip+0x11ca1]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404d97:	lea    rdi,[rip+0x11d1a]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404d9e:	call   4041a0 <__assert_fail@plt>
  404da3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404dae:	xchg   ax,ax
  404db0:	push   rax
  404db1:	pop    rax
  404db2:	lea    rcx,[rip+0x140f7]        # 418eb0 <_IO_stdin_used@@Base+0x2eb0>
  404db9:	mov    edx,0x337
  404dbe:	lea    rsi,[rip+0x11c73]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404dc5:	lea    rdi,[rip+0x11cec]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404dcc:	sub    rsp,0x8
  404dd0:	call   4041a0 <__assert_fail@plt>
  404dd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404de0:	sub    rsp,0x8
  404de4:	test   rdi,rdi
  404de7:	je     404e2e <_start@@Base+0x9de>
  404de9:	mov    eax,DWORD PTR [rdi-0x4]
  404dec:	cmp    rax,rdx
  404def:	jbe    404e2e <_start@@Base+0x9de>
  404df1:	movzx  ecx,BYTE PTR [rdi+rdx*1]
  404df5:	test   cl,cl
  404df7:	je     404e20 <_start@@Base+0x9d0>
  404df9:	lea    rdi,[rsi+rdx*4]
  404dfd:	test   rsi,rsi
  404e00:	je     404e29 <_start@@Base+0x9d9>
  404e02:	mov    eax,DWORD PTR [rsi-0x4]
  404e05:	cmp    rdx,rax
  404e08:	jae    404e29 <_start@@Base+0x9d9>
  404e0a:	mov    edx,DWORD PTR [rdi]
  404e0c:	xor    eax,eax
  404e0e:	mov    al,cl
  404e10:	add    rdx,rdi
  404e13:	add    rsp,0x8
  404e17:	ret    
  404e18:	nop    DWORD PTR [rax+rax*1+0x0]
  404e20:	xor    eax,eax
  404e22:	xor    edx,edx
  404e24:	add    rsp,0x8
  404e28:	ret    
  404e29:	call   404ca0 <_start@@Base+0x850>
  404e2e:	lea    rcx,[rip+0x1401b]        # 418e50 <_IO_stdin_used@@Base+0x2e50>
  404e35:	mov    edx,0x305
  404e3a:	lea    rsi,[rip+0x11bf7]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404e41:	lea    rdi,[rip+0x11d80]        # 416bc8 <_IO_stdin_used@@Base+0xbc8>
  404e48:	call   4041a0 <__assert_fail@plt>
  404e4d:	nop    DWORD PTR [rax]
  404e50:	push   rax
  404e51:	pop    rax
  404e52:	lea    rcx,[rip+0x13fc7]        # 418e20 <_IO_stdin_used@@Base+0x2e20>
  404e59:	mov    edx,0x2c1
  404e5e:	lea    rsi,[rip+0x11bd3]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  404e65:	lea    rdi,[rip+0x11c4c]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  404e6c:	sub    rsp,0x8
  404e70:	call   4041a0 <__assert_fail@plt>
  404e75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404e80:	push   rax
  404e81:	pop    rax
  404e82:	lea    rcx,[rip+0x14687]        # 419510 <_IO_stdin_used@@Base+0x3510>
  404e89:	mov    edx,0xeb
  404e8e:	lea    rsi,[rip+0x11d53]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  404e95:	lea    rdi,[rip+0x11dcc]        # 416c68 <_IO_stdin_used@@Base+0xc68>
  404e9c:	sub    rsp,0x8
  404ea0:	call   4041a0 <__assert_fail@plt>
  404ea5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404eb0:	push   rax
  404eb1:	pop    rax
  404eb2:	lea    rcx,[rip+0x14317]        # 4191d0 <_IO_stdin_used@@Base+0x31d0>
  404eb9:	mov    edx,0xdd
  404ebe:	lea    rsi,[rip+0x11d23]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  404ec5:	lea    rdi,[rip+0x11e44]        # 416d10 <_IO_stdin_used@@Base+0xd10>
  404ecc:	sub    rsp,0x8
  404ed0:	call   4041a0 <__assert_fail@plt>
  404ed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404ee0:	endbr64 
  404ee4:	push   rbx
  404ee5:	xor    esi,esi
  404ee7:	mov    ecx,0x8
  404eec:	mov    edx,0x8
  404ef1:	mov    rbx,rdi
  404ef4:	call   413c10 <flatcc_verify_field@@Base>
  404ef9:	test   eax,eax
  404efb:	je     404f00 <_start@@Base+0xab0>
  404efd:	pop    rbx
  404efe:	ret    
  404eff:	nop
  404f00:	mov    rdi,rbx
  404f03:	mov    ecx,0x4
  404f08:	mov    edx,0x4
  404f0d:	mov    esi,0x1
  404f12:	pop    rbx
  404f13:	jmp    413c10 <flatcc_verify_field@@Base>
  404f18:	nop    DWORD PTR [rax+rax*1+0x0]
  404f20:	endbr64 
  404f24:	push   rbx
  404f25:	xor    esi,esi
  404f27:	mov    ecx,0x1
  404f2c:	mov    edx,0x1
  404f31:	mov    rbx,rdi
  404f34:	call   413c10 <flatcc_verify_field@@Base>
  404f39:	test   eax,eax
  404f3b:	je     404f40 <_start@@Base+0xaf0>
  404f3d:	pop    rbx
  404f3e:	ret    
  404f3f:	nop
  404f40:	mov    ecx,0x1
  404f45:	mov    edx,0x1
  404f4a:	mov    esi,0x1
  404f4f:	mov    rdi,rbx
  404f52:	call   413c10 <flatcc_verify_field@@Base>
  404f57:	test   eax,eax
  404f59:	jne    404f3d <_start@@Base+0xaed>
  404f5b:	mov    ecx,0x1
  404f60:	mov    edx,0x1
  404f65:	mov    esi,0x2
  404f6a:	mov    rdi,rbx
  404f6d:	call   413c10 <flatcc_verify_field@@Base>
  404f72:	test   eax,eax
  404f74:	jne    404f3d <_start@@Base+0xaed>
  404f76:	mov    rdi,rbx
  404f79:	mov    ecx,0x1
  404f7e:	mov    edx,0x1
  404f83:	mov    esi,0x3
  404f88:	pop    rbx
  404f89:	jmp    413c10 <flatcc_verify_field@@Base>
  404f8e:	xchg   ax,ax
  404f90:	endbr64 
  404f94:	push   rbx
  404f95:	xor    esi,esi
  404f97:	mov    ecx,0x1
  404f9c:	mov    edx,0x1
  404fa1:	mov    rbx,rdi
  404fa4:	call   413c10 <flatcc_verify_field@@Base>
  404fa9:	test   eax,eax
  404fab:	je     404fb0 <_start@@Base+0xb60>
  404fad:	pop    rbx
  404fae:	ret    
  404faf:	nop
  404fb0:	mov    ecx,0x1
  404fb5:	mov    edx,0x1
  404fba:	mov    esi,0x1
  404fbf:	mov    rdi,rbx
  404fc2:	call   413c10 <flatcc_verify_field@@Base>
  404fc7:	test   eax,eax
  404fc9:	jne    404fad <_start@@Base+0xb5d>
  404fcb:	mov    ecx,0x2
  404fd0:	mov    edx,0x2
  404fd5:	mov    esi,0x2
  404fda:	mov    rdi,rbx
  404fdd:	call   413c10 <flatcc_verify_field@@Base>
  404fe2:	test   eax,eax
  404fe4:	jne    404fad <_start@@Base+0xb5d>
  404fe6:	mov    ecx,0x2
  404feb:	mov    edx,0x2
  404ff0:	mov    esi,0x3
  404ff5:	mov    rdi,rbx
  404ff8:	call   413c10 <flatcc_verify_field@@Base>
  404ffd:	test   eax,eax
  404fff:	jne    404fad <_start@@Base+0xb5d>
  405001:	mov    ecx,0x4
  405006:	mov    edx,0x4
  40500b:	mov    esi,0x4
  405010:	mov    rdi,rbx
  405013:	call   413c10 <flatcc_verify_field@@Base>
  405018:	test   eax,eax
  40501a:	jne    404fad <_start@@Base+0xb5d>
  40501c:	mov    ecx,0x4
  405021:	mov    edx,0x4
  405026:	mov    esi,0x5
  40502b:	mov    rdi,rbx
  40502e:	call   413c10 <flatcc_verify_field@@Base>
  405033:	test   eax,eax
  405035:	jne    404fad <_start@@Base+0xb5d>
  40503b:	mov    ecx,0x8
  405040:	mov    edx,0x8
  405045:	mov    esi,0x6
  40504a:	mov    rdi,rbx
  40504d:	call   413c10 <flatcc_verify_field@@Base>
  405052:	test   eax,eax
  405054:	jne    404fad <_start@@Base+0xb5d>
  40505a:	mov    ecx,0x8
  40505f:	mov    edx,0x8
  405064:	mov    esi,0x7
  405069:	mov    rdi,rbx
  40506c:	call   413c10 <flatcc_verify_field@@Base>
  405071:	test   eax,eax
  405073:	jne    404fad <_start@@Base+0xb5d>
  405079:	mov    ecx,0x4
  40507e:	mov    edx,0x4
  405083:	mov    esi,0x8
  405088:	mov    rdi,rbx
  40508b:	call   413c10 <flatcc_verify_field@@Base>
  405090:	test   eax,eax
  405092:	jne    404fad <_start@@Base+0xb5d>
  405098:	mov    ecx,0x8
  40509d:	mov    edx,0x8
  4050a2:	mov    esi,0x9
  4050a7:	mov    rdi,rbx
  4050aa:	call   413c10 <flatcc_verify_field@@Base>
  4050af:	test   eax,eax
  4050b1:	jne    404fad <_start@@Base+0xb5d>
  4050b7:	xor    edx,edx
  4050b9:	mov    r9d,0xffffffff
  4050bf:	mov    r8d,0x1
  4050c5:	mov    ecx,0x1
  4050ca:	mov    esi,0xa
  4050cf:	mov    rdi,rbx
  4050d2:	call   413d10 <flatcc_verify_vector_field@@Base>
  4050d7:	test   eax,eax
  4050d9:	jne    404fad <_start@@Base+0xb5d>
  4050df:	mov    rdi,rbx
  4050e2:	mov    r9d,0x1fffffff
  4050e8:	mov    r8d,0x8
  4050ee:	mov    ecx,0x8
  4050f3:	xor    edx,edx
  4050f5:	mov    esi,0xb
  4050fa:	pop    rbx
  4050fb:	jmp    413d10 <flatcc_verify_vector_field@@Base>
  405100:	endbr64 
  405104:	push   rbx
  405105:	xor    edx,edx
  405107:	xor    esi,esi
  405109:	mov    rbx,rdi
  40510c:	call   413c60 <flatcc_verify_string_field@@Base>
  405111:	test   eax,eax
  405113:	je     405120 <_start@@Base+0xcd0>
  405115:	pop    rbx
  405116:	ret    
  405117:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	mov    ecx,0x8
  405125:	mov    edx,0x8
  40512a:	mov    esi,0x1
  40512f:	mov    rdi,rbx
  405132:	call   413c10 <flatcc_verify_field@@Base>
  405137:	test   eax,eax
  405139:	jne    405115 <_start@@Base+0xcc5>
  40513b:	mov    rdi,rbx
  40513e:	mov    ecx,0x2
  405143:	mov    edx,0x2
  405148:	mov    esi,0x2
  40514d:	pop    rbx
  40514e:	jmp    413c10 <flatcc_verify_field@@Base>
  405153:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40515e:	xchg   ax,ax
  405160:	endbr64 
  405164:	push   rbx
  405165:	xor    edx,edx
  405167:	xor    esi,esi
  405169:	mov    rbx,rdi
  40516c:	call   413c60 <flatcc_verify_string_field@@Base>
  405171:	test   eax,eax
  405173:	je     405180 <_start@@Base+0xd30>
  405175:	pop    rbx
  405176:	ret    
  405177:	nop    WORD PTR [rax+rax*1+0x0]
  405180:	mov    ecx,0x4
  405185:	mov    edx,0x4
  40518a:	mov    esi,0x1
  40518f:	mov    rdi,rbx
  405192:	call   413c10 <flatcc_verify_field@@Base>
  405197:	test   eax,eax
  405199:	jne    405175 <_start@@Base+0xd25>
  40519b:	xor    edx,edx
  40519d:	mov    esi,0x2
  4051a2:	mov    rdi,rbx
  4051a5:	call   413c60 <flatcc_verify_string_field@@Base>
  4051aa:	test   eax,eax
  4051ac:	jne    405175 <_start@@Base+0xd25>
  4051ae:	mov    ecx,0x8
  4051b3:	mov    edx,0x8
  4051b8:	mov    esi,0x3
  4051bd:	mov    rdi,rbx
  4051c0:	call   413c10 <flatcc_verify_field@@Base>
  4051c5:	test   eax,eax
  4051c7:	jne    405175 <_start@@Base+0xd25>
  4051c9:	xor    edx,edx
  4051cb:	mov    esi,0x4
  4051d0:	mov    rdi,rbx
  4051d3:	call   413c60 <flatcc_verify_string_field@@Base>
  4051d8:	test   eax,eax
  4051da:	jne    405175 <_start@@Base+0xd25>
  4051dc:	mov    ecx,0x8
  4051e1:	mov    edx,0x8
  4051e6:	mov    esi,0x5
  4051eb:	mov    rdi,rbx
  4051ee:	call   413c10 <flatcc_verify_field@@Base>
  4051f3:	test   eax,eax
  4051f5:	jne    405175 <_start@@Base+0xd25>
  4051fb:	mov    ecx,0x4
  405200:	mov    edx,0x4
  405205:	mov    esi,0x6
  40520a:	mov    rdi,rbx
  40520d:	call   413c10 <flatcc_verify_field@@Base>
  405212:	test   eax,eax
  405214:	jne    405175 <_start@@Base+0xd25>
  40521a:	mov    ecx,0x8
  40521f:	mov    edx,0x8
  405224:	mov    esi,0x7
  405229:	mov    rdi,rbx
  40522c:	call   413c10 <flatcc_verify_field@@Base>
  405231:	test   eax,eax
  405233:	jne    405175 <_start@@Base+0xd25>
  405239:	mov    rdi,rbx
  40523c:	mov    ecx,0x4
  405241:	mov    edx,0x4
  405246:	mov    esi,0x8
  40524b:	pop    rbx
  40524c:	jmp    413c10 <flatcc_verify_field@@Base>
  405251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40525c:	nop    DWORD PTR [rax+0x0]
  405260:	endbr64 
  405264:	push   rbx
  405265:	xor    edx,edx
  405267:	xor    esi,esi
  405269:	lea    rcx,[rip+0xfffffffffffffef0]        # 405160 <_start@@Base+0xd10>
  405270:	mov    rbx,rdi
  405273:	call   413fa0 <flatcc_verify_table_field@@Base>
  405278:	test   eax,eax
  40527a:	je     405280 <_start@@Base+0xe30>
  40527c:	pop    rbx
  40527d:	ret    
  40527e:	xchg   ax,ax
  405280:	xor    edx,edx
  405282:	lea    rcx,[rip+0x8d7]        # 405b60 <_start@@Base+0x1710>
  405289:	mov    esi,0x1
  40528e:	mov    rdi,rbx
  405291:	call   413fa0 <flatcc_verify_table_field@@Base>
  405296:	test   eax,eax
  405298:	jne    40527c <_start@@Base+0xe2c>
  40529a:	mov    rdi,rbx
  40529d:	lea    rcx,[rip+0xfffffffffffffc3c]        # 404ee0 <_start@@Base+0xa90>
  4052a4:	xor    edx,edx
  4052a6:	mov    esi,0x2
  4052ab:	pop    rbx
  4052ac:	jmp    413fa0 <flatcc_verify_table_field@@Base>
  4052b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4052bc:	nop    DWORD PTR [rax+0x0]
  4052c0:	endbr64 
  4052c4:	push   rbx
  4052c5:	xor    esi,esi
  4052c7:	mov    ecx,0x10
  4052cc:	mov    edx,0x20
  4052d1:	mov    rbx,rdi
  4052d4:	call   413c10 <flatcc_verify_field@@Base>
  4052d9:	test   eax,eax
  4052db:	je     4052e0 <_start@@Base+0xe90>
  4052dd:	pop    rbx
  4052de:	ret    
  4052df:	nop
  4052e0:	mov    ecx,0x2
  4052e5:	mov    edx,0x2
  4052ea:	mov    esi,0x2
  4052ef:	mov    rdi,rbx
  4052f2:	call   413c10 <flatcc_verify_field@@Base>
  4052f7:	test   eax,eax
  4052f9:	jne    4052dd <_start@@Base+0xe8d>
  4052fb:	mov    ecx,0x2
  405300:	mov    edx,0x2
  405305:	mov    esi,0x1
  40530a:	mov    rdi,rbx
  40530d:	call   413c10 <flatcc_verify_field@@Base>
  405312:	test   eax,eax
  405314:	jne    4052dd <_start@@Base+0xe8d>
  405316:	mov    edx,0x1
  40531b:	mov    esi,0x3
  405320:	mov    rdi,rbx
  405323:	call   413c60 <flatcc_verify_string_field@@Base>
  405328:	test   eax,eax
  40532a:	jne    4052dd <_start@@Base+0xe8d>
  40532c:	mov    ecx,0x1
  405331:	mov    edx,0x1
  405336:	mov    esi,0x6
  40533b:	mov    rdi,rbx
  40533e:	call   413c10 <flatcc_verify_field@@Base>
  405343:	test   eax,eax
  405345:	jne    4052dd <_start@@Base+0xe8d>
  405347:	xor    edx,edx
  405349:	mov    r9d,0xffffffff
  40534f:	mov    r8d,0x1
  405355:	mov    ecx,0x1
  40535a:	mov    esi,0x5
  40535f:	mov    rdi,rbx
  405362:	call   413d10 <flatcc_verify_vector_field@@Base>
  405367:	test   eax,eax
  405369:	jne    4052dd <_start@@Base+0xe8d>
  40536f:	xor    edx,edx
  405371:	lea    rcx,[rip+0xffffffffffffff48]        # 4052c0 <_start@@Base+0xe70>
  405378:	mov    esi,0xb
  40537d:	mov    rdi,rbx
  405380:	call   414120 <flatcc_verify_table_vector_field@@Base>
  405385:	test   eax,eax
  405387:	jne    4052dd <_start@@Base+0xe8d>
  40538d:	xor    edx,edx
  40538f:	mov    esi,0xa
  405394:	mov    rdi,rbx
  405397:	call   413de0 <flatcc_verify_string_vector_field@@Base>
  40539c:	test   eax,eax
  40539e:	jne    4052dd <_start@@Base+0xe8d>
  4053a4:	xor    edx,edx
  4053a6:	mov    esi,0x1c
  4053ab:	mov    rdi,rbx
  4053ae:	call   413de0 <flatcc_verify_string_vector_field@@Base>
  4053b3:	test   eax,eax
  4053b5:	jne    4052dd <_start@@Base+0xe8d>
  4053bb:	xor    edx,edx
  4053bd:	mov    r9d,0xffffffff
  4053c3:	mov    r8d,0x1
  4053c9:	mov    ecx,0x1
  4053ce:	mov    esi,0x18
  4053d3:	mov    rdi,rbx
  4053d6:	call   413d10 <flatcc_verify_vector_field@@Base>
  4053db:	test   eax,eax
  4053dd:	jne    4052dd <_start@@Base+0xe8d>
  4053e3:	xor    edx,edx
  4053e5:	mov    r9d,0x1fffffff
  4053eb:	mov    r8d,0x4
  4053f1:	mov    ecx,0x8
  4053f6:	mov    esi,0x1d
  4053fb:	mov    rdi,rbx
  4053fe:	call   413d10 <flatcc_verify_vector_field@@Base>
  405403:	test   eax,eax
  405405:	jne    4052dd <_start@@Base+0xe8d>
  40540b:	xor    edx,edx
  40540d:	lea    rcx,[rip+0xfffffffffffffeac]        # 4052c0 <_start@@Base+0xe70>
  405414:	mov    esi,0xc
  405419:	mov    rdi,rbx
  40541c:	call   413fa0 <flatcc_verify_table_field@@Base>
  405421:	test   eax,eax
  405423:	jne    4052dd <_start@@Base+0xe8d>
  405429:	xor    edx,edx
  40542b:	lea    rcx,[rip+0x34e]        # 405780 <_start@@Base+0x1330>
  405432:	mov    esi,0x8
  405437:	mov    rdi,rbx
  40543a:	call   414dc0 <flatcc_verify_union_field@@Base>
  40543f:	test   eax,eax
  405441:	jne    4052dd <_start@@Base+0xe8d>
  405447:	xor    edx,edx
  405449:	mov    r9d,0x3fffffff
  40544f:	mov    r8d,0x2
  405455:	mov    ecx,0x4
  40545a:	mov    esi,0x9
  40545f:	mov    rdi,rbx
  405462:	call   413d10 <flatcc_verify_vector_field@@Base>
  405467:	test   eax,eax
  405469:	jne    4052dd <_start@@Base+0xe8d>
  40546f:	xor    edx,edx
  405471:	mov    r9d,0x3fffffff
  405477:	mov    r8d,0x2
  40547d:	mov    ecx,0x4
  405482:	mov    esi,0x1f
  405487:	mov    rdi,rbx
  40548a:	call   413d10 <flatcc_verify_vector_field@@Base>
  40548f:	test   eax,eax
  405491:	jne    4052dd <_start@@Base+0xe8d>
  405497:	xor    ecx,ecx
  405499:	xor    edx,edx
  40549b:	lea    r9,[rip+0xfffffffffffffe1e]        # 4052c0 <_start@@Base+0xe70>
  4054a2:	mov    r8d,0x1
  4054a8:	mov    esi,0xd
  4054ad:	mov    rdi,rbx
  4054b0:	call   414be0 <flatcc_verify_table_as_nested_root@@Base>
  4054b5:	test   eax,eax
  4054b7:	jne    4052dd <_start@@Base+0xe8d>
  4054bd:	xor    edx,edx
  4054bf:	lea    rcx,[rip+0xfffffffffffffc3a]        # 405100 <_start@@Base+0xcb0>
  4054c6:	mov    esi,0xe
  4054cb:	mov    rdi,rbx
  4054ce:	call   413fa0 <flatcc_verify_table_field@@Base>
  4054d3:	test   eax,eax
  4054d5:	jne    4052dd <_start@@Base+0xe8d>
  4054db:	mov    ecx,0x1
  4054e0:	mov    edx,0x1
  4054e5:	mov    esi,0xf
  4054ea:	mov    rdi,rbx
  4054ed:	call   413c10 <flatcc_verify_field@@Base>
  4054f2:	test   eax,eax
  4054f4:	jne    4052dd <_start@@Base+0xe8d>
  4054fa:	mov    ecx,0x4
  4054ff:	mov    edx,0x4
  405504:	mov    esi,0x10
  405509:	mov    rdi,rbx
  40550c:	call   413c10 <flatcc_verify_field@@Base>
  405511:	test   eax,eax
  405513:	jne    4052dd <_start@@Base+0xe8d>
  405519:	mov    ecx,0x4
  40551e:	mov    edx,0x4
  405523:	mov    esi,0x11
  405528:	mov    rdi,rbx
  40552b:	call   413c10 <flatcc_verify_field@@Base>
  405530:	test   eax,eax
  405532:	jne    4052dd <_start@@Base+0xe8d>
  405538:	mov    ecx,0x8
  40553d:	mov    edx,0x8
  405542:	mov    esi,0x12
  405547:	mov    rdi,rbx
  40554a:	call   413c10 <flatcc_verify_field@@Base>
  40554f:	test   eax,eax
  405551:	jne    4052dd <_start@@Base+0xe8d>
  405557:	mov    ecx,0x8
  40555c:	mov    edx,0x8
  405561:	mov    esi,0x13
  405566:	mov    rdi,rbx
  405569:	call   413c10 <flatcc_verify_field@@Base>
  40556e:	test   eax,eax
  405570:	jne    4052dd <_start@@Base+0xe8d>
  405576:	mov    ecx,0x4
  40557b:	mov    edx,0x4
  405580:	mov    esi,0x14
  405585:	mov    rdi,rbx
  405588:	call   413c10 <flatcc_verify_field@@Base>
  40558d:	test   eax,eax
  40558f:	jne    4052dd <_start@@Base+0xe8d>
  405595:	mov    ecx,0x4
  40559a:	mov    edx,0x4
  40559f:	mov    esi,0x15
  4055a4:	mov    rdi,rbx
  4055a7:	call   413c10 <flatcc_verify_field@@Base>
  4055ac:	test   eax,eax
  4055ae:	jne    4052dd <_start@@Base+0xe8d>
  4055b4:	mov    ecx,0x8
  4055b9:	mov    edx,0x8
  4055be:	mov    esi,0x16
  4055c3:	mov    rdi,rbx
  4055c6:	call   413c10 <flatcc_verify_field@@Base>
  4055cb:	test   eax,eax
  4055cd:	jne    4052dd <_start@@Base+0xe8d>
  4055d3:	mov    ecx,0x8
  4055d8:	mov    edx,0x8
  4055dd:	mov    esi,0x17
  4055e2:	mov    rdi,rbx
  4055e5:	call   413c10 <flatcc_verify_field@@Base>
  4055ea:	test   eax,eax
  4055ec:	jne    4052dd <_start@@Base+0xe8d>
  4055f2:	mov    ecx,0x4
  4055f7:	mov    edx,0x4
  4055fc:	mov    esi,0x19
  405601:	mov    rdi,rbx
  405604:	call   413c10 <flatcc_verify_field@@Base>
  405609:	test   eax,eax
  40560b:	jne    4052dd <_start@@Base+0xe8d>
  405611:	mov    ecx,0x4
  405616:	mov    edx,0x4
  40561b:	mov    esi,0x1a
  405620:	mov    rdi,rbx
  405623:	call   413c10 <flatcc_verify_field@@Base>
  405628:	test   eax,eax
  40562a:	jne    4052dd <_start@@Base+0xe8d>
  405630:	mov    ecx,0x4
  405635:	mov    edx,0x4
  40563a:	mov    esi,0x1b
  40563f:	mov    rdi,rbx
  405642:	call   413c10 <flatcc_verify_field@@Base>
  405647:	test   eax,eax
  405649:	jne    4052dd <_start@@Base+0xe8d>
  40564f:	xor    edx,edx
  405651:	mov    r9d,0xffffffff
  405657:	mov    r8d,0x1
  40565d:	mov    ecx,0x1
  405662:	mov    esi,0x1e
  405667:	mov    rdi,rbx
  40566a:	call   413d10 <flatcc_verify_vector_field@@Base>
  40566f:	test   eax,eax
  405671:	jne    4052dd <_start@@Base+0xe8d>
  405677:	xor    edx,edx
  405679:	mov    r9d,0x1fffffff
  40567f:	mov    r8d,0x8
  405685:	mov    ecx,0x8
  40568a:	mov    esi,0x20
  40568f:	mov    rdi,rbx
  405692:	call   413d10 <flatcc_verify_vector_field@@Base>
  405697:	test   eax,eax
  405699:	jne    4052dd <_start@@Base+0xe8d>
  40569f:	xor    edx,edx
  4056a1:	mov    r9d,0x1fffffff
  4056a7:	mov    r8d,0x8
  4056ad:	mov    ecx,0x8
  4056b2:	mov    esi,0x21
  4056b7:	mov    rdi,rbx
  4056ba:	call   413d10 <flatcc_verify_vector_field@@Base>
  4056bf:	test   eax,eax
  4056c1:	jne    4052dd <_start@@Base+0xe8d>
  4056c7:	xor    edx,edx
  4056c9:	lea    rcx,[rip+0xffffffffffffee70]        # 404540 <_start@@Base+0xf0>
  4056d0:	mov    esi,0x22
  4056d5:	mov    rdi,rbx
  4056d8:	call   413fa0 <flatcc_verify_table_field@@Base>
  4056dd:	test   eax,eax
  4056df:	jne    4052dd <_start@@Base+0xe8d>
  4056e5:	mov    rdi,rbx
  4056e8:	lea    rcx,[rip+0x11]        # 405700 <_start@@Base+0x12b0>
  4056ef:	xor    edx,edx
  4056f1:	mov    esi,0x23
  4056f6:	pop    rbx
  4056f7:	jmp    413fa0 <flatcc_verify_table_field@@Base>
  4056fc:	nop    DWORD PTR [rax+0x0]
  405700:	endbr64 
  405704:	push   rbx
  405705:	xor    edx,edx
  405707:	xor    esi,esi
  405709:	mov    r9d,0xffffffff
  40570f:	mov    r8d,0x1
  405715:	mov    ecx,0x1
  40571a:	mov    rbx,rdi
  40571d:	call   413d10 <flatcc_verify_vector_field@@Base>
  405722:	test   eax,eax
  405724:	je     405730 <_start@@Base+0x12e0>
  405726:	pop    rbx
  405727:	ret    
  405728:	nop    DWORD PTR [rax+rax*1+0x0]
  405730:	xor    edx,edx
  405732:	mov    r9d,0xffffffff
  405738:	mov    r8d,0x1
  40573e:	mov    ecx,0x1
  405743:	mov    esi,0x1
  405748:	mov    rdi,rbx
  40574b:	call   413d10 <flatcc_verify_vector_field@@Base>
  405750:	test   eax,eax
  405752:	jne    405726 <_start@@Base+0x12d6>
  405754:	mov    rdi,rbx
  405757:	lea    r9,[rip+0xfffffffffffffb62]        # 4052c0 <_start@@Base+0xe70>
  40575e:	mov    r8d,0x1
  405764:	xor    ecx,ecx
  405766:	xor    edx,edx
  405768:	mov    esi,0x2
  40576d:	pop    rbx
  40576e:	jmp    414be0 <flatcc_verify_table_as_nested_root@@Base>
  405773:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40577e:	xchg   ax,ax
  405780:	endbr64 
  405784:	movzx  eax,BYTE PTR [rdi+0x10]
  405788:	cmp    al,0x2
  40578a:	je     4057c0 <_start@@Base+0x1370>
  40578c:	jbe    4057a8 <_start@@Base+0x1358>
  40578e:	cmp    al,0x3
  405790:	je     4057d0 <_start@@Base+0x1380>
  405792:	cmp    al,0x4
  405794:	jne    4057e0 <_start@@Base+0x1390>
  405796:	lea    rsi,[rip+0x53]        # 4057f0 <_start@@Base+0x13a0>
  40579d:	jmp    414480 <flatcc_verify_union_table@@Base>
  4057a2:	nop    WORD PTR [rax+rax*1+0x0]
  4057a8:	cmp    al,0x1
  4057aa:	jne    4057e0 <_start@@Base+0x1390>
  4057ac:	lea    rsi,[rip+0xfffffffffffffb0d]        # 4052c0 <_start@@Base+0xe70>
  4057b3:	jmp    414480 <flatcc_verify_union_table@@Base>
  4057b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4057c0:	lea    rsi,[rip+0xfffffffffffff759]        # 404f20 <_start@@Base+0xad0>
  4057c7:	jmp    414480 <flatcc_verify_union_table@@Base>
  4057cc:	nop    DWORD PTR [rax+0x0]
  4057d0:	lea    rsi,[rip+0x379]        # 405b50 <_start@@Base+0x1700>
  4057d7:	jmp    414480 <flatcc_verify_union_table@@Base>
  4057dc:	nop    DWORD PTR [rax+0x0]
  4057e0:	xor    eax,eax
  4057e2:	ret    
  4057e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4057ee:	xchg   ax,ax
  4057f0:	endbr64 
  4057f4:	push   rbx
  4057f5:	xor    edx,edx
  4057f7:	xor    esi,esi
  4057f9:	lea    rcx,[rip+0xfffffffffffffa60]        # 405260 <_start@@Base+0xe10>
  405800:	mov    rbx,rdi
  405803:	call   413fa0 <flatcc_verify_table_field@@Base>
  405808:	test   eax,eax
  40580a:	je     405810 <_start@@Base+0x13c0>
  40580c:	pop    rbx
  40580d:	ret    
  40580e:	xchg   ax,ax
  405810:	xor    edx,edx
  405812:	lea    rcx,[rip+0x37]        # 405850 <_start@@Base+0x1400>
  405819:	mov    esi,0x1
  40581e:	mov    rdi,rbx
  405821:	call   413fa0 <flatcc_verify_table_field@@Base>
  405826:	test   eax,eax
  405828:	jne    40580c <_start@@Base+0x13bc>
  40582a:	mov    rdi,rbx
  40582d:	lea    rcx,[rip+0xffffffffffffff4c]        # 405780 <_start@@Base+0x1330>
  405834:	xor    edx,edx
  405836:	mov    esi,0x3
  40583b:	pop    rbx
  40583c:	jmp    414f30 <flatcc_verify_union_vector_field@@Base>
  405841:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40584c:	nop    DWORD PTR [rax+0x0]
  405850:	endbr64 
  405854:	push   rbx
  405855:	xor    edx,edx
  405857:	lea    rcx,[rip+0x82]        # 4058e0 <_start@@Base+0x1490>
  40585e:	mov    esi,0x1
  405863:	mov    rbx,rdi
  405866:	call   414dc0 <flatcc_verify_union_field@@Base>
  40586b:	test   eax,eax
  40586d:	je     405878 <_start@@Base+0x1428>
  40586f:	pop    rbx
  405870:	ret    
  405871:	nop    DWORD PTR [rax+0x0]
  405878:	xor    edx,edx
  40587a:	lea    rcx,[rip+0x5f]        # 4058e0 <_start@@Base+0x1490>
  405881:	mov    esi,0x3
  405886:	mov    rdi,rbx
  405889:	call   414dc0 <flatcc_verify_union_field@@Base>
  40588e:	test   eax,eax
  405890:	jne    40586f <_start@@Base+0x141f>
  405892:	xor    edx,edx
  405894:	lea    rcx,[rip+0x45]        # 4058e0 <_start@@Base+0x1490>
  40589b:	mov    esi,0x5
  4058a0:	mov    rdi,rbx
  4058a3:	call   414dc0 <flatcc_verify_union_field@@Base>
  4058a8:	test   eax,eax
  4058aa:	jne    40586f <_start@@Base+0x141f>
  4058ac:	xor    edx,edx
  4058ae:	lea    rcx,[rip+0x2b]        # 4058e0 <_start@@Base+0x1490>
  4058b5:	mov    esi,0x7
  4058ba:	mov    rdi,rbx
  4058bd:	call   414dc0 <flatcc_verify_union_field@@Base>
  4058c2:	test   eax,eax
  4058c4:	jne    40586f <_start@@Base+0x141f>
  4058c6:	mov    rdi,rbx
  4058c9:	lea    rcx,[rip+0x10]        # 4058e0 <_start@@Base+0x1490>
  4058d0:	xor    edx,edx
  4058d2:	mov    esi,0x9
  4058d7:	pop    rbx
  4058d8:	jmp    414f30 <flatcc_verify_union_vector_field@@Base>
  4058dd:	nop    DWORD PTR [rax]
  4058e0:	endbr64 
  4058e4:	movzx  eax,BYTE PTR [rdi+0x10]
  4058e8:	cmp    al,0xa
  4058ea:	ja     405910 <_start@@Base+0x14c0>
  4058ec:	cmp    al,0x9
  4058ee:	jae    405920 <_start@@Base+0x14d0>
  4058f0:	cmp    al,0x2
  4058f2:	je     405938 <_start@@Base+0x14e8>
  4058f4:	cmp    al,0x8
  4058f6:	jne    405930 <_start@@Base+0x14e0>
  4058f8:	mov    edx,0x2
  4058fd:	mov    esi,0x2
  405902:	jmp    4145a0 <flatcc_verify_union_struct@@Base>
  405907:	nop    WORD PTR [rax+rax*1+0x0]
  405910:	cmp    al,0xb
  405912:	je     405918 <_start@@Base+0x14c8>
  405914:	cmp    al,0xff
  405916:	jne    405930 <_start@@Base+0x14e0>
  405918:	jmp    4145f0 <flatcc_verify_union_string@@Base>
  40591d:	nop    DWORD PTR [rax]
  405920:	mov    edx,0x4
  405925:	mov    esi,0x4
  40592a:	jmp    4145a0 <flatcc_verify_union_struct@@Base>
  40592f:	nop
  405930:	xor    eax,eax
  405932:	ret    
  405933:	nop    DWORD PTR [rax+rax*1+0x0]
  405938:	lea    rsi,[rip+0xffffffffffffec11]        # 404550 <_start@@Base+0x100>
  40593f:	jmp    414480 <flatcc_verify_union_table@@Base>
  405944:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40594f:	nop
  405950:	push   rbx
  405951:	vsubsd xmm4,xmm1,xmm0
  405955:	mov    rdx,rdi
  405958:	sub    rsp,0x10
  40595c:	mov    rbx,rsi
  40595f:	mov    edi,0x1
  405964:	lea    rsi,[rip+0x106b6]        # 416021 <_IO_stdin_used@@Base+0x21>
  40596b:	xor    eax,eax
  40596d:	vmovsd QWORD PTR [rsp+0x8],xmm4
  405973:	call   404220 <__printf_chk@plt>
  405978:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40597e:	lea    rsi,[rip+0x106ab]        # 416030 <_IO_stdin_used@@Base+0x30>
  405985:	mov    edi,0x1
  40598a:	mov    eax,0x1
  40598f:	call   404220 <__printf_chk@plt>
  405994:	mov    edx,0xf4240
  405999:	lea    rsi,[rip+0x106a8]        # 416048 <_IO_stdin_used@@Base+0x48>
  4059a0:	mov    edi,0x1
  4059a5:	xor    eax,eax
  4059a7:	call   404220 <__printf_chk@plt>
  4059ac:	xor    eax,eax
  4059ae:	mov    rdx,rbx
  4059b1:	lea    rsi,[rip+0x106a0]        # 416058 <_IO_stdin_used@@Base+0x58>
  4059b8:	mov    edi,0x1
  4059bd:	call   404220 <__printf_chk@plt>
  4059c2:	test   rbx,rbx
  4059c5:	js     405ae0 <_start@@Base+0x1690>
  4059cb:	vxorpd xmm0,xmm0,xmm0
  4059cf:	vcvtsi2sd xmm0,xmm0,rbx
  4059d4:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13c64]        # 419640 <_IO_stdin_used@@Base+0x3640>
  4059dc:	lea    rsi,[rip+0x10688]        # 41606b <_IO_stdin_used@@Base+0x6b>
  4059e3:	mov    edi,0x1
  4059e8:	mov    eax,0x1
  4059ed:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x13c4b]        # 419640 <_IO_stdin_used@@Base+0x3640>
  4059f5:	vdivsd xmm0,xmm0,QWORD PTR [rsp+0x8]
  4059fb:	call   404220 <__printf_chk@plt>
  405a00:	vmovsd xmm5,QWORD PTR [rip+0x13c38]        # 419640 <_IO_stdin_used@@Base+0x3640>
  405a08:	lea    rsi,[rip+0x113a1]        # 416db0 <_IO_stdin_used@@Base+0xdb0>
  405a0f:	mov    edi,0x1
  405a14:	mov    eax,0x1
  405a19:	vdivsd xmm0,xmm5,QWORD PTR [rsp+0x8]
  405a1f:	call   404220 <__printf_chk@plt>
  405a24:	vmovsd xmm0,QWORD PTR [rip+0x13c1c]        # 419648 <_IO_stdin_used@@Base+0x3648>
  405a2c:	lea    rdx,[rip+0x10650]        # 416083 <_IO_stdin_used@@Base+0x83>
  405a33:	lea    rsi,[rip+0x1139e]        # 416dd8 <_IO_stdin_used@@Base+0xdd8>
  405a3a:	mov    edi,0x1
  405a3f:	mov    eax,0x1
  405a44:	vdivsd xmm0,xmm0,QWORD PTR [rsp+0x8]
  405a4a:	call   404220 <__printf_chk@plt>
  405a4f:	vmovsd xmm1,QWORD PTR [rip+0x13bf9]        # 419650 <_IO_stdin_used@@Base+0x3650>
  405a57:	vmovsd xmm2,QWORD PTR [rip+0x13bf9]        # 419658 <_IO_stdin_used@@Base+0x3658>
  405a5f:	vmulsd xmm0,xmm1,QWORD PTR [rsp+0x8]
  405a65:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x13bd3]        # 419640 <_IO_stdin_used@@Base+0x3640>
  405a6d:	vcomisd xmm2,xmm0
  405a71:	ja     405b00 <_start@@Base+0x16b0>
  405a77:	vmovsd xmm6,QWORD PTR [rip+0x13bc1]        # 419640 <_IO_stdin_used@@Base+0x3640>
  405a7f:	vcomisd xmm6,xmm0
  405a83:	ja     405ab8 <_start@@Base+0x1668>
  405a85:	vcomisd xmm1,xmm0
  405a89:	jbe    405b20 <_start@@Base+0x16d0>
  405a8f:	lea    rsi,[rip+0x10625]        # 4160bb <_IO_stdin_used@@Base+0xbb>
  405a96:	mov    edi,0x1
  405a9b:	mov    eax,0x1
  405aa0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x13b98]        # 419640 <_IO_stdin_used@@Base+0x3640>
  405aa8:	call   404220 <__printf_chk@plt>
  405aad:	add    rsp,0x10
  405ab1:	xor    eax,eax
  405ab3:	pop    rbx
  405ab4:	ret    
  405ab5:	nop    DWORD PTR [rax]
  405ab8:	vdivsd xmm0,xmm0,xmm2
  405abc:	lea    rsi,[rip+0x105e0]        # 4160a3 <_IO_stdin_used@@Base+0xa3>
  405ac3:	mov    edi,0x1
  405ac8:	mov    eax,0x1
  405acd:	call   404220 <__printf_chk@plt>
  405ad2:	add    rsp,0x10
  405ad6:	xor    eax,eax
  405ad8:	pop    rbx
  405ad9:	ret    
  405ada:	nop    WORD PTR [rax+rax*1+0x0]
  405ae0:	mov    rax,rbx
  405ae3:	shr    rax,1
  405ae6:	and    ebx,0x1
  405ae9:	or     rax,rbx
  405aec:	vxorpd xmm0,xmm0,xmm0
  405af0:	vcvtsi2sd xmm0,xmm0,rax
  405af5:	vaddsd xmm0,xmm0,xmm0
  405af9:	jmp    4059d4 <_start@@Base+0x1584>
  405afe:	xchg   ax,ax
  405b00:	lea    rsi,[rip+0x10584]        # 41608b <_IO_stdin_used@@Base+0x8b>
  405b07:	mov    edi,0x1
  405b0c:	mov    eax,0x1
  405b11:	call   404220 <__printf_chk@plt>
  405b16:	add    rsp,0x10
  405b1a:	xor    eax,eax
  405b1c:	pop    rbx
  405b1d:	ret    
  405b1e:	xchg   ax,ax
  405b20:	vdivsd xmm0,xmm0,xmm1
  405b24:	lea    rsi,[rip+0x105a8]        # 4160d3 <_IO_stdin_used@@Base+0xd3>
  405b2b:	mov    edi,0x1
  405b30:	mov    eax,0x1
  405b35:	call   404220 <__printf_chk@plt>
  405b3a:	add    rsp,0x10
  405b3e:	xor    eax,eax
  405b40:	pop    rbx
  405b41:	ret    
  405b42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b4d:	nop    DWORD PTR [rax]
  405b50:	endbr64 
  405b54:	xor    eax,eax
  405b56:	ret    
  405b57:	nop    WORD PTR [rax+rax*1+0x0]
  405b60:	endbr64 
  405b64:	push   rbx
  405b65:	xor    esi,esi
  405b67:	mov    ecx,0x8
  405b6c:	mov    edx,0x8
  405b71:	mov    rbx,rdi
  405b74:	call   413c10 <flatcc_verify_field@@Base>
  405b79:	test   eax,eax
  405b7b:	je     405b80 <_start@@Base+0x1730>
  405b7d:	pop    rbx
  405b7e:	ret    
  405b7f:	nop
  405b80:	mov    rdi,rbx
  405b83:	mov    ecx,0x4
  405b88:	mov    edx,0x4
  405b8d:	mov    esi,0x1
  405b92:	pop    rbx
  405b93:	jmp    413c10 <flatcc_verify_field@@Base>
  405b98:	nop    DWORD PTR [rax+rax*1+0x0]
  405ba0:	push   r15
  405ba2:	push   r14
  405ba4:	push   r13
  405ba6:	push   r12
  405ba8:	push   rbp
  405ba9:	push   rbx
  405baa:	sub    rsp,0x8
  405bae:	test   rdi,rdi
  405bb1:	je     405d08 <_start@@Base+0x18b8>
  405bb7:	mov    ebx,DWORD PTR [rdi-0x4]
  405bba:	test   rbx,rbx
  405bbd:	je     405d08 <_start@@Base+0x18b8>
  405bc3:	mov    eax,DWORD PTR [rdi]
  405bc5:	mov    r12,rsi
  405bc8:	mov    rbp,rdi
  405bcb:	add    rax,rdi
  405bce:	je     405d2c <_start@@Base+0x18dc>
  405bd4:	movsxd rdx,DWORD PTR [rax]
  405bd7:	mov    rcx,rax
  405bda:	sub    rcx,rdx
  405bdd:	cmp    WORD PTR [rcx],0xb
  405be1:	jbe    405d0d <_start@@Base+0x18bd>
  405be7:	movzx  edx,WORD PTR [rcx+0xa]
  405beb:	test   dx,dx
  405bee:	je     405d0d <_start@@Base+0x18bd>
  405bf4:	lea    r13,[rdi+0x4]
  405bf8:	xor    r14d,r14d
  405bfb:	jmp    405c3a <_start@@Base+0x17ea>
  405bfd:	nop    DWORD PTR [rax]
  405c00:	cmp    rbx,r14
  405c03:	je     405d08 <_start@@Base+0x18b8>
  405c09:	mov    eax,DWORD PTR [r13+0x0]
  405c0d:	add    rax,r13
  405c10:	je     405d2c <_start@@Base+0x18dc>
  405c16:	movsxd rdx,DWORD PTR [rax]
  405c19:	mov    rsi,rax
  405c1c:	sub    rsi,rdx
  405c1f:	cmp    WORD PTR [rsi],0xb
  405c23:	jbe    405d0d <_start@@Base+0x18bd>
  405c29:	movzx  edx,WORD PTR [rsi+0xa]
  405c2d:	add    r13,0x4
  405c31:	test   dx,dx
  405c34:	je     405d0d <_start@@Base+0x18bd>
  405c3a:	add    rax,rdx
  405c3d:	mov    edx,DWORD PTR [rax]
  405c3f:	mov    rsi,r12
  405c42:	lea    rdi,[rax+rdx*1+0x4]
  405c47:	call   4041e0 <strcmp@plt>
  405c4c:	inc    r14
  405c4f:	test   eax,eax
  405c51:	jne    405c00 <_start@@Base+0x17b0>
  405c53:	xor    r13d,r13d
  405c56:	inc    r13
  405c59:	cmp    r14,rbx
  405c5c:	jae    405cf1 <_start@@Base+0x18a1>
  405c62:	nop    WORD PTR [rax+rax*1+0x0]
  405c68:	lea    rcx,[r14*4+0x0]
  405c70:	lea    rax,[rbp+rcx*1+0x0]
  405c75:	mov    edx,DWORD PTR [rax]
  405c77:	add    rax,rdx
  405c7a:	je     405d2c <_start@@Base+0x18dc>
  405c80:	movsxd rdx,DWORD PTR [rax]
  405c83:	mov    rsi,rax
  405c86:	sub    rsi,rdx
  405c89:	cmp    WORD PTR [rsi],0xb
  405c8d:	jbe    405d0d <_start@@Base+0x18bd>
  405c8f:	movzx  edx,WORD PTR [rsi+0xa]
  405c93:	test   dx,dx
  405c96:	je     405d0d <_start@@Base+0x18bd>
  405c98:	lea    r15,[rbp+rcx*1+0x4]
  405c9d:	jmp    405ccc <_start@@Base+0x187c>
  405c9f:	nop
  405ca0:	inc    r14
  405ca3:	cmp    r14,rbx
  405ca6:	jae    405cf1 <_start@@Base+0x18a1>
  405ca8:	mov    eax,DWORD PTR [r15]
  405cab:	add    rax,r15
  405cae:	je     405d2c <_start@@Base+0x18dc>
  405cb0:	movsxd rdx,DWORD PTR [rax]
  405cb3:	mov    rcx,rax
  405cb6:	sub    rcx,rdx
  405cb9:	cmp    WORD PTR [rcx],0xb
  405cbd:	jbe    405d0d <_start@@Base+0x18bd>
  405cbf:	movzx  edx,WORD PTR [rcx+0xa]
  405cc3:	add    r15,0x4
  405cc7:	test   dx,dx
  405cca:	je     405d0d <_start@@Base+0x18bd>
  405ccc:	add    rax,rdx
  405ccf:	mov    edx,DWORD PTR [rax]
  405cd1:	mov    rsi,r12
  405cd4:	lea    rdi,[rax+rdx*1+0x4]
  405cd9:	call   4041e0 <strcmp@plt>
  405cde:	test   eax,eax
  405ce0:	jne    405ca0 <_start@@Base+0x1850>
  405ce2:	inc    r14
  405ce5:	inc    r13
  405ce8:	cmp    r14,rbx
  405ceb:	jb     405c68 <_start@@Base+0x1818>
  405cf1:	add    rsp,0x8
  405cf5:	pop    rbx
  405cf6:	pop    rbp
  405cf7:	pop    r12
  405cf9:	mov    rax,r13
  405cfc:	pop    r13
  405cfe:	pop    r14
  405d00:	pop    r15
  405d02:	ret    
  405d03:	nop    DWORD PTR [rax+rax*1+0x0]
  405d08:	xor    r13d,r13d
  405d0b:	jmp    405cf1 <_start@@Base+0x18a1>
  405d0d:	lea    rcx,[rip+0x1355c]        # 419270 <_IO_stdin_used@@Base+0x3270>
  405d14:	mov    edx,0x2bb
  405d19:	lea    rsi,[rip+0x10d18]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405d20:	lea    rdi,[rip+0x10e79]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  405d27:	call   4041a0 <__assert_fail@plt>
  405d2c:	lea    rcx,[rip+0x1353d]        # 419270 <_IO_stdin_used@@Base+0x3270>
  405d33:	mov    edx,0x2bb
  405d38:	lea    rsi,[rip+0x10cf9]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405d3f:	lea    rdi,[rip+0x10d72]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  405d46:	call   4041a0 <__assert_fail@plt>
  405d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d50:	push   r13
  405d52:	mov    r13,rdx
  405d55:	push   r12
  405d57:	mov    r12,rdi
  405d5a:	push   rbp
  405d5b:	mov    rbp,rcx
  405d5e:	push   rbx
  405d5f:	mov    rbx,rsi
  405d62:	sub    rsp,0x8
  405d66:	jmp    405dcb <_start@@Base+0x197b>
  405d68:	nop    DWORD PTR [rax+rax*1+0x0]
  405d70:	mov    eax,DWORD PTR [r12-0x4]
  405d75:	cmp    r13,rax
  405d78:	mov    rdx,rax
  405d7b:	cmovbe rdx,r13
  405d7f:	cmp    rbx,rdx
  405d82:	jae    405dd0 <_start@@Base+0x1980>
  405d84:	lea    rcx,[r12+rbx*4]
  405d88:	cmp    rbx,rax
  405d8b:	jae    405e34 <_start@@Base+0x19e4>
  405d91:	mov    eax,DWORD PTR [r12+rbx*4]
  405d95:	add    rcx,rax
  405d98:	je     405e15 <_start@@Base+0x19c5>
  405d9a:	movsxd rax,DWORD PTR [rcx]
  405d9d:	mov    rsi,rcx
  405da0:	sub    rsi,rax
  405da3:	cmp    WORD PTR [rsi],0xb
  405da7:	jbe    405df6 <_start@@Base+0x19a6>
  405da9:	movzx  eax,WORD PTR [rsi+0xa]
  405dad:	test   ax,ax
  405db0:	je     405df6 <_start@@Base+0x19a6>
  405db2:	add    rcx,rax
  405db5:	mov    eax,DWORD PTR [rcx]
  405db7:	mov    rsi,rbp
  405dba:	lea    rdi,[rcx+rax*1+0x4]
  405dbf:	call   4041e0 <strcmp@plt>
  405dc4:	test   eax,eax
  405dc6:	je     405de8 <_start@@Base+0x1998>
  405dc8:	inc    rbx
  405dcb:	test   r12,r12
  405dce:	jne    405d70 <_start@@Base+0x1920>
  405dd0:	add    rsp,0x8
  405dd4:	pop    rbx
  405dd5:	pop    rbp
  405dd6:	pop    r12
  405dd8:	mov    rax,0xffffffffffffffff
  405ddf:	pop    r13
  405de1:	ret    
  405de2:	nop    WORD PTR [rax+rax*1+0x0]
  405de8:	add    rsp,0x8
  405dec:	mov    rax,rbx
  405def:	pop    rbx
  405df0:	pop    rbp
  405df1:	pop    r12
  405df3:	pop    r13
  405df5:	ret    
  405df6:	lea    rcx,[rip+0x13473]        # 419270 <_IO_stdin_used@@Base+0x3270>
  405dfd:	mov    edx,0x2bb
  405e02:	lea    rsi,[rip+0x10c2f]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405e09:	lea    rdi,[rip+0x10d90]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  405e10:	call   4041a0 <__assert_fail@plt>
  405e15:	lea    rcx,[rip+0x13454]        # 419270 <_IO_stdin_used@@Base+0x3270>
  405e1c:	mov    edx,0x2bb
  405e21:	lea    rsi,[rip+0x10c10]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405e28:	lea    rdi,[rip+0x10c89]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  405e2f:	call   4041a0 <__assert_fail@plt>
  405e34:	lea    rcx,[rip+0x134b5]        # 4192f0 <_IO_stdin_used@@Base+0x32f0>
  405e3b:	mov    edx,0x2b5
  405e40:	lea    rsi,[rip+0x10bf1]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405e47:	lea    rdi,[rip+0x10d1a]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  405e4e:	call   4041a0 <__assert_fail@plt>
  405e53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405e5e:	xchg   ax,ax
  405e60:	push   r14
  405e62:	push   r13
  405e64:	push   r12
  405e66:	push   rbp
  405e67:	push   rbx
  405e68:	test   rdi,rdi
  405e6b:	je     405ee8 <_start@@Base+0x1a98>
  405e6d:	mov    r12d,DWORD PTR [rdi-0x4]
  405e71:	mov    rbp,rcx
  405e74:	cmp    rdx,r12
  405e77:	cmova  rdx,r12
  405e7b:	mov    rbx,rsi
  405e7e:	lea    r13,[rdi+rdx*4-0x4]
  405e83:	nop    DWORD PTR [rax+rax*1+0x0]
  405e88:	lea    r14,[rdx-0x1]
  405e8c:	cmp    rdx,rbx
  405e8f:	jbe    405ee8 <_start@@Base+0x1a98>
  405e91:	cmp    r14,r12
  405e94:	jae    405f39 <_start@@Base+0x1ae9>
  405e9a:	mov    eax,DWORD PTR [r13+0x0]
  405e9e:	add    rax,r13
  405ea1:	je     405f1a <_start@@Base+0x1aca>
  405ea3:	movsxd rdx,DWORD PTR [rax]
  405ea6:	mov    rcx,rax
  405ea9:	sub    rcx,rdx
  405eac:	cmp    WORD PTR [rcx],0xb
  405eb0:	jbe    405efb <_start@@Base+0x1aab>
  405eb2:	movzx  edx,WORD PTR [rcx+0xa]
  405eb6:	test   dx,dx
  405eb9:	je     405efb <_start@@Base+0x1aab>
  405ebb:	add    rax,rdx
  405ebe:	mov    edx,DWORD PTR [rax]
  405ec0:	mov    rsi,rbp
  405ec3:	lea    rdi,[rax+rdx*1+0x4]
  405ec8:	call   4041e0 <strcmp@plt>
  405ecd:	sub    r13,0x4
  405ed1:	mov    rdx,r14
  405ed4:	test   eax,eax
  405ed6:	jne    405e88 <_start@@Base+0x1a38>
  405ed8:	pop    rbx
  405ed9:	pop    rbp
  405eda:	pop    r12
  405edc:	pop    r13
  405ede:	mov    rax,r14
  405ee1:	pop    r14
  405ee3:	ret    
  405ee4:	nop    DWORD PTR [rax+0x0]
  405ee8:	pop    rbx
  405ee9:	pop    rbp
  405eea:	pop    r12
  405eec:	mov    r14,0xffffffffffffffff
  405ef3:	pop    r13
  405ef5:	mov    rax,r14
  405ef8:	pop    r14
  405efa:	ret    
  405efb:	lea    rcx,[rip+0x1336e]        # 419270 <_IO_stdin_used@@Base+0x3270>
  405f02:	mov    edx,0x2bb
  405f07:	lea    rsi,[rip+0x10b2a]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405f0e:	lea    rdi,[rip+0x10c8b]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  405f15:	call   4041a0 <__assert_fail@plt>
  405f1a:	lea    rcx,[rip+0x1334f]        # 419270 <_IO_stdin_used@@Base+0x3270>
  405f21:	mov    edx,0x2bb
  405f26:	lea    rsi,[rip+0x10b0b]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405f2d:	lea    rdi,[rip+0x10b84]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  405f34:	call   4041a0 <__assert_fail@plt>
  405f39:	lea    rcx,[rip+0x133b0]        # 4192f0 <_IO_stdin_used@@Base+0x32f0>
  405f40:	mov    edx,0x2b5
  405f45:	lea    rsi,[rip+0x10aec]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  405f4c:	lea    rdi,[rip+0x10c15]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  405f53:	call   4041a0 <__assert_fail@plt>
  405f58:	nop    DWORD PTR [rax+rax*1+0x0]
  405f60:	push   r15
  405f62:	push   r14
  405f64:	push   r13
  405f66:	push   r12
  405f68:	push   rbp
  405f69:	push   rbx
  405f6a:	sub    rsp,0x8
  405f6e:	test   rdi,rdi
  405f71:	je     406078 <_start@@Base+0x1c28>
  405f77:	mov    r12d,DWORD PTR [rdi-0x4]
  405f7b:	test   r12,r12
  405f7e:	je     406078 <_start@@Base+0x1c28>
  405f84:	mov    rbp,rsi
  405f87:	mov    rbx,rdi
  405f8a:	lea    r13,[r12-0x1]
  405f8f:	xor    r15d,r15d
  405f92:	mov    r14,r13
  405f95:	cmp    r15,r13
  405f98:	jae    406048 <_start@@Base+0x1bf8>
  405f9e:	sub    r14,r15
  405fa1:	shr    r14,1
  405fa4:	add    r14,r15
  405fa7:	lea    rax,[rbx+r14*4]
  405fab:	cmp    r12,r14
  405fae:	jbe    4060b0 <_start@@Base+0x1c60>
  405fb4:	mov    edx,DWORD PTR [rax]
  405fb6:	add    rax,rdx
  405fb9:	je     4060cf <_start@@Base+0x1c7f>
  405fbf:	movsxd rdx,DWORD PTR [rax]
  405fc2:	mov    rcx,rax
  405fc5:	sub    rcx,rdx
  405fc8:	cmp    WORD PTR [rcx],0xb
  405fcc:	ja     406019 <_start@@Base+0x1bc9>
  405fce:	jmp    406091 <_start@@Base+0x1c41>
  405fd3:	nop    DWORD PTR [rax+rax*1+0x0]
  405fd8:	cmp    r15,r14
  405fdb:	jae    406048 <_start@@Base+0x1bf8>
  405fdd:	mov    rdx,r14
  405fe0:	sub    rdx,r15
  405fe3:	shr    rdx,1
  405fe6:	add    rdx,r15
  405fe9:	lea    rax,[rbx+rdx*4]
  405fed:	cmp    rdx,r12
  405ff0:	jae    4060b0 <_start@@Base+0x1c60>
  405ff6:	mov    ecx,DWORD PTR [rax]
  405ff8:	add    rax,rcx
  405ffb:	je     4060cf <_start@@Base+0x1c7f>
  406001:	movsxd rcx,DWORD PTR [rax]
  406004:	mov    rsi,rax
  406007:	sub    rsi,rcx
  40600a:	cmp    WORD PTR [rsi],0xb
  40600e:	mov    rcx,rsi
  406011:	mov    r13,r14
  406014:	jbe    406091 <_start@@Base+0x1c41>
  406016:	mov    r14,rdx
  406019:	movzx  edx,WORD PTR [rcx+0xa]
  40601d:	test   dx,dx
  406020:	je     406091 <_start@@Base+0x1c41>
  406022:	add    rax,rdx
  406025:	mov    edx,DWORD PTR [rax]
  406027:	mov    rsi,rbp
  40602a:	lea    rdi,[rax+rdx*1+0x4]
  40602f:	call   4041e0 <strcmp@plt>
  406034:	test   eax,eax
  406036:	jns    405fd8 <_start@@Base+0x1b88>
  406038:	lea    r15,[r14+0x1]
  40603c:	jmp    405f92 <_start@@Base+0x1b42>
  406041:	nop    DWORD PTR [rax+0x0]
  406048:	cmp    r15,r14
  40604b:	jne    406078 <_start@@Base+0x1c28>
  40604d:	lea    rax,[rbx+r15*4]
  406051:	cmp    r15,r12
  406054:	jae    4060ee <_start@@Base+0x1c9e>
  40605a:	mov    edi,DWORD PTR [rax]
  40605c:	add    rdi,rax
  40605f:	call   404bb0 <_start@@Base+0x760>
  406064:	mov    rdi,rax
  406067:	mov    rsi,rbp
  40606a:	call   4041e0 <strcmp@plt>
  40606f:	test   eax,eax
  406071:	je     40607f <_start@@Base+0x1c2f>
  406073:	nop    DWORD PTR [rax+rax*1+0x0]
  406078:	mov    r15,0xffffffffffffffff
  40607f:	add    rsp,0x8
  406083:	pop    rbx
  406084:	pop    rbp
  406085:	pop    r12
  406087:	pop    r13
  406089:	pop    r14
  40608b:	mov    rax,r15
  40608e:	pop    r15
  406090:	ret    
  406091:	lea    rcx,[rip+0x131d8]        # 419270 <_IO_stdin_used@@Base+0x3270>
  406098:	mov    edx,0x2bb
  40609d:	lea    rsi,[rip+0x10994]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4060a4:	lea    rdi,[rip+0x10af5]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  4060ab:	call   4041a0 <__assert_fail@plt>
  4060b0:	lea    rcx,[rip+0x13239]        # 4192f0 <_IO_stdin_used@@Base+0x32f0>
  4060b7:	mov    edx,0x2b5
  4060bc:	lea    rsi,[rip+0x10975]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4060c3:	lea    rdi,[rip+0x10a9e]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  4060ca:	call   4041a0 <__assert_fail@plt>
  4060cf:	lea    rcx,[rip+0x1319a]        # 419270 <_IO_stdin_used@@Base+0x3270>
  4060d6:	mov    edx,0x2bb
  4060db:	lea    rsi,[rip+0x10956]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4060e2:	lea    rdi,[rip+0x109cf]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4060e9:	call   4041a0 <__assert_fail@plt>
  4060ee:	call   404a90 <_start@@Base+0x640>
  4060f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4060fe:	xchg   ax,ax

0000000000406100 <verify_empty_monster@@Base>:
  406100:	endbr64 
  406104:	sub    rsp,0x8
  406108:	test   rdi,rdi
  40610b:	je     40611b <verify_empty_monster@@Base+0x1b>
  40610d:	mov    eax,DWORD PTR [rdi]
  40610f:	add    rax,rdi
  406112:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  406119:	je     406140 <verify_empty_monster@@Base+0x40>
  40611b:	lea    rsi,[rip+0xffc8]        # 4160ea <_IO_stdin_used@@Base+0xea>
  406122:	mov    edi,0x1
  406127:	xor    eax,eax
  406129:	call   404220 <__printf_chk@plt>
  40612e:	mov    eax,0xffffffff
  406133:	add    rsp,0x8
  406137:	ret    
  406138:	nop    DWORD PTR [rax+rax*1+0x0]
  406140:	test   rax,rax
  406143:	je     40611b <verify_empty_monster@@Base+0x1b>
  406145:	movsxd rdx,DWORD PTR [rax]
  406148:	mov    rsi,rax
  40614b:	sub    rsi,rdx
  40614e:	movzx  ecx,WORD PTR [rsi]
  406151:	mov    rdx,rsi
  406154:	cmp    cx,0x9
  406158:	jbe    406188 <verify_empty_monster@@Base+0x88>
  40615a:	movzx  ecx,WORD PTR [rsi+0x8]
  40615e:	test   cx,cx
  406161:	je     406190 <verify_empty_monster@@Base+0x90>
  406163:	cmp    WORD PTR [rax+rcx*1],0x64
  406168:	jne    4061b8 <verify_empty_monster@@Base+0xb8>
  40616a:	lea    rsi,[rip+0xffac]        # 41611d <_IO_stdin_used@@Base+0x11d>
  406171:	mov    edi,0x1
  406176:	xor    eax,eax
  406178:	call   404220 <__printf_chk@plt>
  40617d:	mov    eax,0xffffffff
  406182:	jmp    406133 <verify_empty_monster@@Base+0x33>
  406184:	nop    DWORD PTR [rax+0x0]
  406188:	xor    eax,eax
  40618a:	cmp    cx,0x5
  40618e:	jbe    406133 <verify_empty_monster@@Base+0x33>
  406190:	xor    eax,eax
  406192:	cmp    WORD PTR [rdx+0x4],0x0
  406197:	je     406133 <verify_empty_monster@@Base+0x33>
  406199:	lea    rsi,[rip+0xff61]        # 416101 <_IO_stdin_used@@Base+0x101>
  4061a0:	mov    edi,0x1
  4061a5:	call   404220 <__printf_chk@plt>
  4061aa:	mov    eax,0xffffffff
  4061af:	jmp    406133 <verify_empty_monster@@Base+0x33>
  4061b1:	nop    DWORD PTR [rax+0x0]
  4061b8:	lea    rsi,[rip+0x10c41]        # 416e00 <_IO_stdin_used@@Base+0xe00>
  4061bf:	mov    edi,0x1
  4061c4:	xor    eax,eax
  4061c6:	call   404220 <__printf_chk@plt>
  4061cb:	mov    eax,0xffffffff
  4061d0:	jmp    406133 <verify_empty_monster@@Base+0x33>
  4061d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004061e0 <test_enums@@Base>:
  4061e0:	endbr64 
  4061e4:	xor    eax,eax
  4061e6:	ret    
  4061e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004061f0 <test_type_aliases@@Base>:
  4061f0:	endbr64 
  4061f4:	push   r14
  4061f6:	push   r13
  4061f8:	push   r12
  4061fa:	push   rbp
  4061fb:	push   rbx
  4061fc:	mov    rbx,rdi
  4061ff:	sub    rsp,0x10
  406203:	mov    rax,QWORD PTR fs:0x28
  40620c:	mov    QWORD PTR [rsp+0x8],rax
  406211:	xor    eax,eax
  406213:	call   40fc30 <flatcc_builder_reset@@Base>
  406218:	xor    edx,edx
  40621a:	xor    esi,esi
  40621c:	mov    r9d,0xffffffff
  406222:	mov    r8d,0x1
  406228:	mov    ecx,0x1
  40622d:	mov    rdi,rbx
  406230:	call   411be0 <flatcc_builder_create_vector@@Base>
  406235:	xor    edx,edx
  406237:	xor    esi,esi
  406239:	mov    ecx,0x8
  40623e:	mov    rdi,rbx
  406241:	mov    r9d,0x1fffffff
  406247:	mov    r8d,0x8
  40624d:	mov    r12d,eax
  406250:	call   411be0 <flatcc_builder_create_vector@@Base>
  406255:	xor    ecx,ecx
  406257:	xor    edx,edx
  406259:	lea    rsi,[rip+0xfedb]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406260:	mov    rdi,rbx
  406263:	mov    r13d,eax
  406266:	call   410430 <flatcc_builder_start_buffer@@Base>
  40626b:	test   eax,eax
  40626d:	je     406488 <test_type_aliases@@Base+0x298>
  406273:	mov    rdi,rbx
  406276:	mov    rsi,rsp
  406279:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40627e:	mov    rsi,QWORD PTR [rsp]
  406282:	lea    rcx,[rip+0xffffffffffffed07]        # 404f90 <_start@@Base+0xb40>
  406289:	lea    rdx,[rip+0xfeab]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406290:	mov    rdi,rax
  406293:	mov    rbx,rax
  406296:	call   414860 <flatcc_verify_table_as_root@@Base>
  40629b:	mov    ebp,eax
  40629d:	test   eax,eax
  40629f:	jne    406690 <test_type_aliases@@Base+0x4a0>
  4062a5:	test   rbx,rbx
  4062a8:	je     4062b3 <test_type_aliases@@Base+0xc3>
  4062aa:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  4062b1:	je     4062d8 <test_type_aliases@@Base+0xe8>
  4062b3:	lea    rcx,[rip+0x13276]        # 419530 <_IO_stdin_used@@Base+0x3530>
  4062ba:	mov    edx,0x2ed
  4062bf:	lea    rsi,[rip+0x10772]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4062c6:	lea    rdi,[rip+0x107eb]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4062cd:	call   4041a0 <__assert_fail@plt>
  4062d2:	nop    WORD PTR [rax+rax*1+0x0]
  4062d8:	mov    eax,DWORD PTR [rbx]
  4062da:	add    rax,rbx
  4062dd:	je     4062b3 <test_type_aliases@@Base+0xc3>
  4062df:	movsxd rdx,DWORD PTR [rax]
  4062e2:	mov    rcx,rax
  4062e5:	sub    rcx,rdx
  4062e8:	mov    rdx,rcx
  4062eb:	movzx  ecx,WORD PTR [rcx]
  4062ee:	cmp    cx,0x5
  4062f2:	ja     406340 <test_type_aliases@@Base+0x150>
  4062f4:	nop    DWORD PTR [rax+0x0]
  4062f8:	lea    rsi,[rip+0x10c09]        # 416f08 <_IO_stdin_used@@Base+0xf08>
  4062ff:	mov    edi,0x1
  406304:	xor    eax,eax
  406306:	call   404220 <__printf_chk@plt>
  40630b:	mov    ebp,0xffffffff
  406310:	mov    rdi,rbx
  406313:	call   413290 <flatcc_builder_aligned_free@@Base>
  406318:	mov    rcx,QWORD PTR [rsp+0x8]
  40631d:	xor    rcx,QWORD PTR fs:0x28
  406326:	mov    eax,ebp
  406328:	jne    4066cf <test_type_aliases@@Base+0x4df>
  40632e:	add    rsp,0x10
  406332:	pop    rbx
  406333:	pop    rbp
  406334:	pop    r12
  406336:	pop    r13
  406338:	pop    r14
  40633a:	ret    
  40633b:	nop    DWORD PTR [rax+rax*1+0x0]
  406340:	movzx  esi,WORD PTR [rdx+0x4]
  406344:	test   si,si
  406347:	je     4062f8 <test_type_aliases@@Base+0x108>
  406349:	cmp    BYTE PTR [rax+rsi*1],0x80
  40634d:	jne    4062f8 <test_type_aliases@@Base+0x108>
  40634f:	cmp    cx,0x9
  406353:	jbe    4062f8 <test_type_aliases@@Base+0x108>
  406355:	movzx  esi,WORD PTR [rdx+0x8]
  406359:	test   si,si
  40635c:	je     4062f8 <test_type_aliases@@Base+0x108>
  40635e:	cmp    WORD PTR [rax+rsi*1],0x8000
  406364:	jne    4062f8 <test_type_aliases@@Base+0x108>
  406366:	cmp    cx,0xd
  40636a:	jbe    4062f8 <test_type_aliases@@Base+0x108>
  40636c:	movzx  esi,WORD PTR [rdx+0xc]
  406370:	test   si,si
  406373:	je     4062f8 <test_type_aliases@@Base+0x108>
  406375:	cmp    DWORD PTR [rax+rsi*1],0x80000000
  40637c:	jne    4062f8 <test_type_aliases@@Base+0x108>
  406382:	cmp    cx,0x11
  406386:	jbe    4062f8 <test_type_aliases@@Base+0x108>
  40638c:	movzx  esi,WORD PTR [rdx+0x10]
  406390:	test   si,si
  406393:	je     4062f8 <test_type_aliases@@Base+0x108>
  406399:	movabs rdi,0x8000000000000000
  4063a3:	cmp    QWORD PTR [rax+rsi*1],rdi
  4063a7:	jne    4062f8 <test_type_aliases@@Base+0x108>
  4063ad:	movzx  esi,WORD PTR [rdx+0x6]
  4063b1:	test   si,si
  4063b4:	je     4062f8 <test_type_aliases@@Base+0x108>
  4063ba:	cmp    BYTE PTR [rax+rsi*1],0xff
  4063be:	jne    4062f8 <test_type_aliases@@Base+0x108>
  4063c4:	movzx  esi,WORD PTR [rdx+0xa]
  4063c8:	test   si,si
  4063cb:	je     4062f8 <test_type_aliases@@Base+0x108>
  4063d1:	cmp    WORD PTR [rax+rsi*1],0xffff
  4063d6:	jne    4062f8 <test_type_aliases@@Base+0x108>
  4063dc:	movzx  esi,WORD PTR [rdx+0xe]
  4063e0:	test   si,si
  4063e3:	je     4062f8 <test_type_aliases@@Base+0x108>
  4063e9:	cmp    DWORD PTR [rax+rsi*1],0xffffffff
  4063ed:	jne    4062f8 <test_type_aliases@@Base+0x108>
  4063f3:	cmp    cx,0x13
  4063f7:	jbe    4062f8 <test_type_aliases@@Base+0x108>
  4063fd:	movzx  esi,WORD PTR [rdx+0x12]
  406401:	test   si,si
  406404:	je     4062f8 <test_type_aliases@@Base+0x108>
  40640a:	cmp    QWORD PTR [rax+rsi*1],0xffffffffffffffff
  40640f:	jne    4062f8 <test_type_aliases@@Base+0x108>
  406415:	cmp    cx,0x15
  406419:	jbe    4062f8 <test_type_aliases@@Base+0x108>
  40641f:	movzx  esi,WORD PTR [rdx+0x14]
  406423:	test   si,si
  406426:	je     4062f8 <test_type_aliases@@Base+0x108>
  40642c:	vmovss xmm0,DWORD PTR [rax+rsi*1]
  406431:	mov    edi,0x0
  406436:	vucomiss xmm0,DWORD PTR [rip+0x1323a]        # 419678 <_IO_stdin_used@@Base+0x3678>
  40643e:	setnp  sil
  406442:	cmovne esi,edi
  406445:	test   sil,sil
  406448:	je     4062f8 <test_type_aliases@@Base+0x108>
  40644e:	cmp    cx,0x17
  406452:	jbe    4062f8 <test_type_aliases@@Base+0x108>
  406458:	movzx  edx,WORD PTR [rdx+0x16]
  40645c:	test   dx,dx
  40645f:	je     4062f8 <test_type_aliases@@Base+0x108>
  406465:	vmovsd xmm0,QWORD PTR [rip+0x131f3]        # 419660 <_IO_stdin_used@@Base+0x3660>
  40646d:	vucomisd xmm0,QWORD PTR [rax+rdx*1]
  406472:	jp     4062f8 <test_type_aliases@@Base+0x108>
  406478:	je     406310 <test_type_aliases@@Base+0x120>
  40647e:	jmp    4062f8 <test_type_aliases@@Base+0x108>
  406483:	nop    DWORD PTR [rax+rax*1+0x0]
  406488:	mov    esi,0xc
  40648d:	mov    rdi,rbx
  406490:	mov    ebp,eax
  406492:	call   4110d0 <flatcc_builder_start_table@@Base>
  406497:	test   eax,eax
  406499:	jne    406679 <test_type_aliases@@Base+0x489>
  40649f:	mov    ecx,0x8
  4064a4:	mov    edx,0x8
  4064a9:	mov    esi,0x6
  4064ae:	mov    rdi,rbx
  4064b1:	call   412950 <flatcc_builder_table_add@@Base>
  4064b6:	test   rax,rax
  4064b9:	je     406679 <test_type_aliases@@Base+0x489>
  4064bf:	movabs rcx,0x8000000000000000
  4064c9:	mov    QWORD PTR [rax],rcx
  4064cc:	mov    edx,0x8
  4064d1:	mov    ecx,0x8
  4064d6:	mov    esi,0x7
  4064db:	mov    rdi,rbx
  4064de:	call   412950 <flatcc_builder_table_add@@Base>
  4064e3:	test   rax,rax
  4064e6:	je     406679 <test_type_aliases@@Base+0x489>
  4064ec:	mov    r14,0xffffffffffffffff
  4064f3:	mov    QWORD PTR [rax],r14
  4064f6:	mov    ecx,0x8
  4064fb:	mov    edx,0x8
  406500:	mov    esi,0x9
  406505:	mov    rdi,rbx
  406508:	call   412950 <flatcc_builder_table_add@@Base>
  40650d:	test   rax,rax
  406510:	je     406679 <test_type_aliases@@Base+0x489>
  406516:	mov    rcx,QWORD PTR [rip+0x13143]        # 419660 <_IO_stdin_used@@Base+0x3660>
  40651d:	mov    edx,0x4
  406522:	mov    QWORD PTR [rax],rcx
  406525:	mov    esi,0x4
  40652a:	mov    ecx,0x4
  40652f:	mov    rdi,rbx
  406532:	call   412950 <flatcc_builder_table_add@@Base>
  406537:	test   rax,rax
  40653a:	je     406679 <test_type_aliases@@Base+0x489>
  406540:	mov    DWORD PTR [rax],0x80000000
  406546:	mov    ecx,0x4
  40654b:	mov    edx,0x4
  406550:	mov    esi,0x5
  406555:	mov    rdi,rbx
  406558:	call   412950 <flatcc_builder_table_add@@Base>
  40655d:	test   rax,rax
  406560:	je     406679 <test_type_aliases@@Base+0x489>
  406566:	mov    DWORD PTR [rax],r14d
  406569:	mov    ecx,0x4
  40656e:	mov    edx,0x4
  406573:	mov    esi,0x8
  406578:	mov    rdi,rbx
  40657b:	call   412950 <flatcc_builder_table_add@@Base>
  406580:	test   rax,rax
  406583:	je     406679 <test_type_aliases@@Base+0x489>
  406589:	mov    DWORD PTR [rax],0x40133333
  40658f:	test   r12d,r12d
  406592:	je     406679 <test_type_aliases@@Base+0x489>
  406598:	mov    esi,0xa
  40659d:	mov    rdi,rbx
  4065a0:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4065a5:	test   rax,rax
  4065a8:	je     406679 <test_type_aliases@@Base+0x489>
  4065ae:	mov    DWORD PTR [rax],r12d
  4065b1:	test   r13d,r13d
  4065b4:	je     406679 <test_type_aliases@@Base+0x489>
  4065ba:	mov    esi,0xb
  4065bf:	mov    rdi,rbx
  4065c2:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4065c7:	test   rax,rax
  4065ca:	je     406679 <test_type_aliases@@Base+0x489>
  4065d0:	mov    DWORD PTR [rax],r13d
  4065d3:	mov    ecx,0x2
  4065d8:	mov    edx,0x2
  4065dd:	mov    esi,0x2
  4065e2:	mov    rdi,rbx
  4065e5:	call   412950 <flatcc_builder_table_add@@Base>
  4065ea:	test   rax,rax
  4065ed:	je     406679 <test_type_aliases@@Base+0x489>
  4065f3:	mov    ecx,0xffff8000
  4065f8:	mov    WORD PTR [rax],cx
  4065fb:	mov    edx,0x2
  406600:	mov    ecx,0x2
  406605:	mov    esi,0x3
  40660a:	mov    rdi,rbx
  40660d:	call   412950 <flatcc_builder_table_add@@Base>
  406612:	test   rax,rax
  406615:	je     406679 <test_type_aliases@@Base+0x489>
  406617:	mov    edx,0xffffffff
  40661c:	mov    WORD PTR [rax],dx
  40661f:	xor    esi,esi
  406621:	mov    ecx,0x1
  406626:	mov    edx,0x1
  40662b:	mov    rdi,rbx
  40662e:	call   412950 <flatcc_builder_table_add@@Base>
  406633:	test   rax,rax
  406636:	je     406679 <test_type_aliases@@Base+0x489>
  406638:	mov    BYTE PTR [rax],0x80
  40663b:	mov    ecx,0x1
  406640:	mov    edx,0x1
  406645:	mov    esi,0x1
  40664a:	mov    rdi,rbx
  40664d:	call   412950 <flatcc_builder_table_add@@Base>
  406652:	test   rax,rax
  406655:	je     406679 <test_type_aliases@@Base+0x489>
  406657:	mov    BYTE PTR [rax],0xff
  40665a:	xor    edx,edx
  40665c:	lea    rsi,[rip+0x12fcb]        # 41962e <_IO_stdin_used@@Base+0x362e>
  406663:	mov    rdi,rbx
  406666:	call   4119c0 <flatcc_builder_check_required@@Base>
  40666b:	test   eax,eax
  40666d:	je     4066d4 <test_type_aliases@@Base+0x4e4>
  40666f:	mov    rdi,rbx
  406672:	call   411a50 <flatcc_builder_end_table@@Base>
  406677:	mov    ebp,eax
  406679:	mov    esi,ebp
  40667b:	mov    rdi,rbx
  40667e:	call   410510 <flatcc_builder_end_buffer@@Base>
  406683:	jmp    406273 <test_type_aliases@@Base+0x83>
  406688:	nop    DWORD PTR [rax+rax*1+0x0]
  406690:	mov    rax,QWORD PTR [rip+0x18961]        # 41eff8 <stderr@GLIBC_2.2.5>
  406697:	mov    rdx,QWORD PTR [rsp]
  40669b:	mov    rcx,QWORD PTR [rax]
  40669e:	mov    rsi,rbx
  4066a1:	lea    rdi,[rip+0xfa98]        # 416140 <_IO_stdin_used@@Base+0x140>
  4066a8:	call   404590 <_start@@Base+0x140>
  4066ad:	mov    edi,ebp
  4066af:	call   413990 <flatcc_verify_error_string@@Base>
  4066b4:	mov    rdx,rax
  4066b7:	lea    rsi,[rip+0x1081a]        # 416ed8 <_IO_stdin_used@@Base+0xed8>
  4066be:	mov    edi,0x1
  4066c3:	xor    eax,eax
  4066c5:	call   404220 <__printf_chk@plt>
  4066ca:	jmp    406310 <test_type_aliases@@Base+0x120>
  4066cf:	call   404180 <__stack_chk_fail@plt>
  4066d4:	lea    rcx,[rip+0x12e75]        # 419550 <_IO_stdin_used@@Base+0x3550>
  4066db:	mov    edx,0xed
  4066e0:	lea    rsi,[rip+0x10501]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  4066e7:	lea    rdi,[rip+0x1073a]        # 416e28 <_IO_stdin_used@@Base+0xe28>
  4066ee:	call   4041a0 <__assert_fail@plt>
  4066f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4066fe:	xchg   ax,ax

0000000000406700 <test_empty_monster@@Base>:
  406700:	endbr64 
  406704:	push   rbp
  406705:	push   rbx
  406706:	mov    rbx,rdi
  406709:	sub    rsp,0x18
  40670d:	mov    rax,QWORD PTR fs:0x28
  406716:	mov    QWORD PTR [rsp+0x8],rax
  40671b:	xor    eax,eax
  40671d:	call   40fc30 <flatcc_builder_reset@@Base>
  406722:	xor    ecx,ecx
  406724:	xor    edx,edx
  406726:	lea    rsi,[rip+0xfa0e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40672d:	mov    rdi,rbx
  406730:	call   410430 <flatcc_builder_start_buffer@@Base>
  406735:	mov    esi,0x24
  40673a:	mov    rdi,rbx
  40673d:	call   4110d0 <flatcc_builder_start_table@@Base>
  406742:	lea    rsi,[rip+0xfa0a]        # 416153 <_IO_stdin_used@@Base+0x153>
  406749:	mov    rdi,rbx
  40674c:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  406751:	test   eax,eax
  406753:	je     40676b <test_empty_monster@@Base+0x6b>
  406755:	mov    esi,0x3
  40675a:	mov    rdi,rbx
  40675d:	mov    ebp,eax
  40675f:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  406764:	test   rax,rax
  406767:	je     40676b <test_empty_monster@@Base+0x6b>
  406769:	mov    DWORD PTR [rax],ebp
  40676b:	mov    edx,0x1
  406770:	lea    rsi,[rip+0x12eb9]        # 419630 <_IO_stdin_used@@Base+0x3630>
  406777:	mov    rdi,rbx
  40677a:	call   4119c0 <flatcc_builder_check_required@@Base>
  40677f:	test   eax,eax
  406781:	je     406881 <test_empty_monster@@Base+0x181>
  406787:	mov    rdi,rbx
  40678a:	call   411a50 <flatcc_builder_end_table@@Base>
  40678f:	mov    esi,eax
  406791:	mov    rdi,rbx
  406794:	call   410510 <flatcc_builder_end_buffer@@Base>
  406799:	mov    rdi,rbx
  40679c:	mov    rsi,rsp
  40679f:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  4067a4:	mov    rbx,rax
  4067a7:	mov    rax,QWORD PTR [rip+0x1884a]        # 41eff8 <stderr@GLIBC_2.2.5>
  4067ae:	mov    rdx,QWORD PTR [rsp]
  4067b2:	mov    rcx,QWORD PTR [rax]
  4067b5:	mov    rsi,rbx
  4067b8:	lea    rdi,[rip+0xf99e]        # 41615d <_IO_stdin_used@@Base+0x15d>
  4067bf:	call   404590 <_start@@Base+0x140>
  4067c4:	mov    rdi,rbx
  4067c7:	call   406100 <verify_empty_monster@@Base>
  4067cc:	mov    ebp,eax
  4067ce:	test   eax,eax
  4067d0:	je     406800 <test_empty_monster@@Base+0x100>
  4067d2:	mov    rdi,rbx
  4067d5:	call   413290 <flatcc_builder_aligned_free@@Base>
  4067da:	mov    rcx,QWORD PTR [rsp+0x8]
  4067df:	xor    rcx,QWORD PTR fs:0x28
  4067e8:	mov    eax,ebp
  4067ea:	jne    406886 <test_empty_monster@@Base+0x186>
  4067f0:	add    rsp,0x18
  4067f4:	pop    rbx
  4067f5:	pop    rbp
  4067f6:	ret    
  4067f7:	nop    WORD PTR [rax+rax*1+0x0]
  406800:	mov    rsi,QWORD PTR [rsp]
  406804:	lea    rcx,[rip+0xffffffffffffeab5]        # 4052c0 <_start@@Base+0xe70>
  40680b:	lea    rdx,[rip+0xf929]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406812:	mov    rdi,rbx
  406815:	call   414860 <flatcc_verify_table_as_root@@Base>
  40681a:	mov    ebp,eax
  40681c:	test   eax,eax
  40681e:	jne    40685a <test_empty_monster@@Base+0x15a>
  406820:	mov    rax,QWORD PTR [rsp]
  406824:	lea    rcx,[rip+0xffffffffffffea95]        # 4052c0 <_start@@Base+0xe70>
  40682b:	lea    rsi,[rax-0x1]
  40682f:	lea    rdx,[rip+0xf905]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406836:	mov    rdi,rbx
  406839:	call   414860 <flatcc_verify_table_as_root@@Base>
  40683e:	test   eax,eax
  406840:	jne    4067d2 <test_empty_monster@@Base+0xd2>
  406842:	lea    rsi,[rip+0x10717]        # 416f60 <_IO_stdin_used@@Base+0xf60>
  406849:	mov    edi,0x1
  40684e:	call   404220 <__printf_chk@plt>
  406853:	mov    ebp,0xffffffff
  406858:	jmp    4067da <test_empty_monster@@Base+0xda>
  40685a:	mov    edi,eax
  40685c:	call   413990 <flatcc_verify_error_string@@Base>
  406861:	mov    rdx,rax
  406864:	lea    rsi,[rip+0x106cd]        # 416f38 <_IO_stdin_used@@Base+0xf38>
  40686b:	mov    edi,0x1
  406870:	xor    eax,eax
  406872:	call   404220 <__printf_chk@plt>
  406877:	mov    ebp,0xffffffff
  40687c:	jmp    4067da <test_empty_monster@@Base+0xda>
  406881:	call   404e80 <_start@@Base+0xa30>
  406886:	call   404180 <__stack_chk_fail@plt>
  40688b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406890 <test_typed_empty_monster@@Base>:
  406890:	endbr64 
  406894:	push   rbp
  406895:	push   rbx
  406896:	mov    rbx,rdi
  406899:	sub    rsp,0x28
  40689d:	mov    rax,QWORD PTR fs:0x28
  4068a6:	mov    QWORD PTR [rsp+0x18],rax
  4068ab:	xor    eax,eax
  4068ad:	mov    DWORD PTR [rsp+0x14],0x0
  4068b5:	call   40fc30 <flatcc_builder_reset@@Base>
  4068ba:	xor    ecx,ecx
  4068bc:	xor    edx,edx
  4068be:	lea    rsi,[rip+0xf8c3]        # 416188 <_IO_stdin_used@@Base+0x188>
  4068c5:	mov    rdi,rbx
  4068c8:	call   410430 <flatcc_builder_start_buffer@@Base>
  4068cd:	mov    esi,0x24
  4068d2:	mov    rdi,rbx
  4068d5:	call   4110d0 <flatcc_builder_start_table@@Base>
  4068da:	lea    rsi,[rip+0xf872]        # 416153 <_IO_stdin_used@@Base+0x153>
  4068e1:	mov    rdi,rbx
  4068e4:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  4068e9:	test   eax,eax
  4068eb:	je     406903 <test_typed_empty_monster@@Base+0x73>
  4068ed:	mov    esi,0x3
  4068f2:	mov    rdi,rbx
  4068f5:	mov    ebp,eax
  4068f7:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4068fc:	test   rax,rax
  4068ff:	je     406903 <test_typed_empty_monster@@Base+0x73>
  406901:	mov    DWORD PTR [rax],ebp
  406903:	mov    edx,0x1
  406908:	lea    rsi,[rip+0x12d21]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40690f:	mov    rdi,rbx
  406912:	call   4119c0 <flatcc_builder_check_required@@Base>
  406917:	test   eax,eax
  406919:	je     406bd7 <test_typed_empty_monster@@Base+0x347>
  40691f:	mov    rdi,rbx
  406922:	call   411a50 <flatcc_builder_end_table@@Base>
  406927:	mov    esi,eax
  406929:	mov    rdi,rbx
  40692c:	call   410510 <flatcc_builder_end_buffer@@Base>
  406931:	mov    rdi,rbx
  406934:	lea    rsi,[rsp+0x8]
  406939:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40693e:	mov    rbx,rax
  406941:	mov    rax,QWORD PTR [rip+0x186b0]        # 41eff8 <stderr@GLIBC_2.2.5>
  406948:	mov    rdx,QWORD PTR [rsp+0x8]
  40694d:	mov    rcx,QWORD PTR [rax]
  406950:	mov    rsi,rbx
  406953:	lea    rdi,[rip+0xf833]        # 41618d <_IO_stdin_used@@Base+0x18d>
  40695a:	call   404590 <_start@@Base+0x140>
  40695f:	mov    edi,DWORD PTR [rbx+0x4]
  406962:	mov    esi,0x79
  406967:	lea    rcx,[rip+0xf803]        # 416171 <_IO_stdin_used@@Base+0x171>
  40696e:	mov    eax,0x811c9dc5
  406973:	mov    edx,0x4d
  406978:	jmp    406988 <test_typed_empty_monster@@Base+0xf8>
  40697a:	nop    WORD PTR [rax+rax*1+0x0]
  406980:	movsx  edx,sil
  406984:	movzx  esi,BYTE PTR [rcx+0x1]
  406988:	xor    eax,edx
  40698a:	imul   eax,eax,0x1000193
  406990:	inc    rcx
  406993:	test   sil,sil
  406996:	jne    406980 <test_typed_empty_monster@@Base+0xf0>
  406998:	test   eax,eax
  40699a:	je     406af0 <test_typed_empty_monster@@Base+0x260>
  4069a0:	cmp    eax,edi
  4069a2:	jne    406b57 <test_typed_empty_monster@@Base+0x2c7>
  4069a8:	cmp    eax,0x330ef481
  4069ad:	jne    406af8 <test_typed_empty_monster@@Base+0x268>
  4069b3:	mov    rdi,rbx
  4069b6:	call   406100 <verify_empty_monster@@Base>
  4069bb:	test   eax,eax
  4069bd:	je     406bb7 <test_typed_empty_monster@@Base+0x327>
  4069c3:	mov    rsi,QWORD PTR [rsp+0x8]
  4069c8:	lea    rcx,[rip+0xffffffffffffe8f1]        # 4052c0 <_start@@Base+0xe70>
  4069cf:	lea    rdx,[rip+0xf7b2]        # 416188 <_IO_stdin_used@@Base+0x188>
  4069d6:	mov    rdi,rbx
  4069d9:	call   414860 <flatcc_verify_table_as_root@@Base>
  4069de:	mov    ebp,eax
  4069e0:	test   eax,eax
  4069e2:	jne    406b38 <test_typed_empty_monster@@Base+0x2a8>
  4069e8:	mov    rsi,QWORD PTR [rsp+0x8]
  4069ed:	lea    rcx,[rip+0xffffffffffffe8cc]        # 4052c0 <_start@@Base+0xe70>
  4069f4:	lea    rdx,[rip+0xf78d]        # 416188 <_IO_stdin_used@@Base+0x188>
  4069fb:	mov    rdi,rbx
  4069fe:	call   414860 <flatcc_verify_table_as_root@@Base>
  406a03:	mov    ebp,eax
  406a05:	test   eax,eax
  406a07:	jne    406b38 <test_typed_empty_monster@@Base+0x2a8>
  406a0d:	mov    rsi,QWORD PTR [rsp+0x8]
  406a12:	lea    rcx,[rip+0xffffffffffffe8a7]        # 4052c0 <_start@@Base+0xe70>
  406a19:	mov    edx,0x330ef481
  406a1e:	mov    rdi,rbx
  406a21:	call   4149b0 <flatcc_verify_table_as_typed_root@@Base>
  406a26:	mov    ebp,eax
  406a28:	test   eax,eax
  406a2a:	jne    406b95 <test_typed_empty_monster@@Base+0x305>
  406a30:	mov    esi,0x79
  406a35:	lea    rcx,[rip+0xf735]        # 416171 <_IO_stdin_used@@Base+0x171>
  406a3c:	mov    edx,0x811c9dc5
  406a41:	mov    eax,0x4d
  406a46:	jmp    406a58 <test_typed_empty_monster@@Base+0x1c8>
  406a48:	nop    DWORD PTR [rax+rax*1+0x0]
  406a50:	movsx  eax,sil
  406a54:	movzx  esi,BYTE PTR [rcx+0x1]
  406a58:	xor    edx,eax
  406a5a:	imul   edx,edx,0x1000193
  406a60:	inc    rcx
  406a63:	test   sil,sil
  406a66:	jne    406a50 <test_typed_empty_monster@@Base+0x1c0>
  406a68:	test   edx,edx
  406a6a:	mov    eax,0x811c9dc5
  406a6f:	cmove  edx,eax
  406a72:	mov    rsi,QWORD PTR [rsp+0x8]
  406a77:	lea    rcx,[rip+0xffffffffffffe842]        # 4052c0 <_start@@Base+0xe70>
  406a7e:	mov    rdi,rbx
  406a81:	call   4149b0 <flatcc_verify_table_as_typed_root@@Base>
  406a86:	mov    ebp,eax
  406a88:	test   eax,eax
  406a8a:	jne    406b73 <test_typed_empty_monster@@Base+0x2e3>
  406a90:	mov    rsi,QWORD PTR [rsp+0x8]
  406a95:	lea    rdx,[rsp+0x14]
  406a9a:	lea    rcx,[rip+0xffffffffffffe81f]        # 4052c0 <_start@@Base+0xe70>
  406aa1:	mov    rdi,rbx
  406aa4:	mov    DWORD PTR [rsp+0x14],0x330ef481
  406aac:	call   414860 <flatcc_verify_table_as_root@@Base>
  406ab1:	mov    ebp,eax
  406ab3:	test   eax,eax
  406ab5:	jne    406b38 <test_typed_empty_monster@@Base+0x2a8>
  406abb:	mov    rsi,QWORD PTR [rsp+0x8]
  406ac0:	lea    rcx,[rip+0xffffffffffffe7f9]        # 4052c0 <_start@@Base+0xe70>
  406ac7:	lea    rdx,[rip+0xf66d]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406ace:	mov    rdi,rbx
  406ad1:	call   414860 <flatcc_verify_table_as_root@@Base>
  406ad6:	test   eax,eax
  406ad8:	jne    406b10 <test_typed_empty_monster@@Base+0x280>
  406ada:	lea    rsi,[rip+0x105ff]        # 4170e0 <_IO_stdin_used@@Base+0x10e0>
  406ae1:	mov    edi,0x1
  406ae6:	call   404220 <__printf_chk@plt>
  406aeb:	jmp    406b10 <test_typed_empty_monster@@Base+0x280>
  406aed:	nop    DWORD PTR [rax]
  406af0:	cmp    edi,0x811c9dc5
  406af6:	jne    406b57 <test_typed_empty_monster@@Base+0x2c7>
  406af8:	lea    rsi,[rip+0x104c9]        # 416fc8 <_IO_stdin_used@@Base+0xfc8>
  406aff:	mov    edi,0x1
  406b04:	xor    eax,eax
  406b06:	call   404220 <__printf_chk@plt>
  406b0b:	mov    ebp,0xffffffff
  406b10:	mov    rdi,rbx
  406b13:	call   413290 <flatcc_builder_aligned_free@@Base>
  406b18:	mov    rbx,QWORD PTR [rsp+0x18]
  406b1d:	xor    rbx,QWORD PTR fs:0x28
  406b26:	mov    eax,ebp
  406b28:	jne    406bd2 <test_typed_empty_monster@@Base+0x342>
  406b2e:	add    rsp,0x28
  406b32:	pop    rbx
  406b33:	pop    rbp
  406b34:	ret    
  406b35:	nop    DWORD PTR [rax]
  406b38:	mov    edi,ebp
  406b3a:	call   413990 <flatcc_verify_error_string@@Base>
  406b3f:	mov    rdx,rax
  406b42:	lea    rsi,[rip+0x104ef]        # 417038 <_IO_stdin_used@@Base+0x1038>
  406b49:	mov    edi,0x1
  406b4e:	xor    eax,eax
  406b50:	call   404220 <__printf_chk@plt>
  406b55:	jmp    406b10 <test_typed_empty_monster@@Base+0x280>
  406b57:	mov    edx,edi
  406b59:	lea    rsi,[rip+0x10430]        # 416f90 <_IO_stdin_used@@Base+0xf90>
  406b60:	mov    edi,0x1
  406b65:	xor    eax,eax
  406b67:	call   404220 <__printf_chk@plt>
  406b6c:	mov    ebp,0xffffffff
  406b71:	jmp    406b10 <test_typed_empty_monster@@Base+0x280>
  406b73:	mov    edi,eax
  406b75:	call   413990 <flatcc_verify_error_string@@Base>
  406b7a:	mov    rdx,rax
  406b7d:	lea    rsi,[rip+0x1051c]        # 4170a0 <_IO_stdin_used@@Base+0x10a0>
  406b84:	mov    edi,0x1
  406b89:	xor    eax,eax
  406b8b:	call   404220 <__printf_chk@plt>
  406b90:	jmp    406b10 <test_typed_empty_monster@@Base+0x280>
  406b95:	mov    edi,eax
  406b97:	call   413990 <flatcc_verify_error_string@@Base>
  406b9c:	mov    rdx,rax
  406b9f:	lea    rsi,[rip+0x104c2]        # 417068 <_IO_stdin_used@@Base+0x1068>
  406ba6:	mov    edi,0x1
  406bab:	xor    eax,eax
  406bad:	call   404220 <__printf_chk@plt>
  406bb2:	jmp    406b10 <test_typed_empty_monster@@Base+0x280>
  406bb7:	lea    rsi,[rip+0x1043a]        # 416ff8 <_IO_stdin_used@@Base+0xff8>
  406bbe:	mov    edi,0x1
  406bc3:	call   404220 <__printf_chk@plt>
  406bc8:	mov    ebp,0xffffffff
  406bcd:	jmp    406b10 <test_typed_empty_monster@@Base+0x280>
  406bd2:	call   404180 <__stack_chk_fail@plt>
  406bd7:	call   404e80 <_start@@Base+0xa30>
  406bdc:	nop    DWORD PTR [rax+0x0]

0000000000406be0 <verify_table_with_emptystruct@@Base>:
  406be0:	endbr64 
  406be4:	sub    rsp,0x8
  406be8:	test   rdi,rdi
  406beb:	je     406bf6 <verify_table_with_emptystruct@@Base+0x16>
  406bed:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  406bf4:	je     406c18 <verify_table_with_emptystruct@@Base+0x38>
  406bf6:	lea    rsi,[rip+0x10533]        # 417130 <_IO_stdin_used@@Base+0x1130>
  406bfd:	mov    edi,0x1
  406c02:	xor    eax,eax
  406c04:	call   404220 <__printf_chk@plt>
  406c09:	mov    eax,0xffffffff
  406c0e:	add    rsp,0x8
  406c12:	ret    
  406c13:	nop    DWORD PTR [rax+rax*1+0x0]
  406c18:	mov    eax,DWORD PTR [rdi]
  406c1a:	add    rdi,rax
  406c1d:	je     406bf6 <verify_table_with_emptystruct@@Base+0x16>
  406c1f:	movsxd rax,DWORD PTR [rdi]
  406c22:	mov    rdx,rdi
  406c25:	sub    rdx,rax
  406c28:	cmp    WORD PTR [rdx],0x5
  406c2c:	jbe    406c48 <verify_table_with_emptystruct@@Base+0x68>
  406c2e:	movzx  eax,WORD PTR [rdx+0x4]
  406c32:	test   ax,ax
  406c35:	je     406c48 <verify_table_with_emptystruct@@Base+0x68>
  406c37:	add    rdi,rax
  406c3a:	je     406c48 <verify_table_with_emptystruct@@Base+0x68>
  406c3c:	xor    eax,eax
  406c3e:	add    rsp,0x8
  406c42:	ret    
  406c43:	nop    DWORD PTR [rax+rax*1+0x0]
  406c48:	lea    rsi,[rip+0xf558]        # 4161a7 <_IO_stdin_used@@Base+0x1a7>
  406c4f:	mov    edi,0x1
  406c54:	xor    eax,eax
  406c56:	call   404220 <__printf_chk@plt>
  406c5b:	mov    eax,0xffffffff
  406c60:	jmp    406c0e <verify_table_with_emptystruct@@Base+0x2e>
  406c62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406c6d:	nop    DWORD PTR [rax]

0000000000406c70 <test_table_with_emptystruct@@Base>:
  406c70:	endbr64 
  406c74:	push   rbp
  406c75:	push   rbx
  406c76:	mov    rbx,rdi
  406c79:	sub    rsp,0x18
  406c7d:	mov    rax,QWORD PTR fs:0x28
  406c86:	mov    QWORD PTR [rsp+0x8],rax
  406c8b:	xor    eax,eax
  406c8d:	call   40fc30 <flatcc_builder_reset@@Base>
  406c92:	xor    ecx,ecx
  406c94:	xor    edx,edx
  406c96:	lea    rsi,[rip+0xf49e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406c9d:	mov    rdi,rbx
  406ca0:	call   410430 <flatcc_builder_start_buffer@@Base>
  406ca5:	test   eax,eax
  406ca7:	je     406d00 <test_table_with_emptystruct@@Base+0x90>
  406ca9:	mov    rdi,rbx
  406cac:	mov    rsi,rsp
  406caf:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  406cb4:	mov    rbx,rax
  406cb7:	mov    rax,QWORD PTR [rip+0x1833a]        # 41eff8 <stderr@GLIBC_2.2.5>
  406cbe:	mov    rdx,QWORD PTR [rsp]
  406cc2:	mov    rcx,QWORD PTR [rax]
  406cc5:	mov    rsi,rbx
  406cc8:	lea    rdi,[rip+0xf4ff]        # 4161ce <_IO_stdin_used@@Base+0x1ce>
  406ccf:	call   404590 <_start@@Base+0x140>
  406cd4:	mov    rdi,rbx
  406cd7:	call   406be0 <verify_table_with_emptystruct@@Base>
  406cdc:	mov    rdi,rbx
  406cdf:	mov    ebp,eax
  406ce1:	call   413290 <flatcc_builder_aligned_free@@Base>
  406ce6:	mov    rcx,QWORD PTR [rsp+0x8]
  406ceb:	xor    rcx,QWORD PTR fs:0x28
  406cf4:	mov    eax,ebp
  406cf6:	jne    406d57 <test_table_with_emptystruct@@Base+0xe7>
  406cf8:	add    rsp,0x18
  406cfc:	pop    rbx
  406cfd:	pop    rbp
  406cfe:	ret    
  406cff:	nop
  406d00:	mov    esi,0x1
  406d05:	mov    rdi,rbx
  406d08:	mov    ebp,eax
  406d0a:	call   4110d0 <flatcc_builder_start_table@@Base>
  406d0f:	test   eax,eax
  406d11:	jne    406d48 <test_table_with_emptystruct@@Base+0xd8>
  406d13:	xor    edx,edx
  406d15:	xor    esi,esi
  406d17:	mov    ecx,0x1
  406d1c:	mov    rdi,rbx
  406d1f:	call   412950 <flatcc_builder_table_add@@Base>
  406d24:	test   rax,rax
  406d27:	je     406d48 <test_table_with_emptystruct@@Base+0xd8>
  406d29:	xor    edx,edx
  406d2b:	lea    rsi,[rip+0x12908]        # 41963a <_IO_stdin_used@@Base+0x363a>
  406d32:	mov    rdi,rbx
  406d35:	call   4119c0 <flatcc_builder_check_required@@Base>
  406d3a:	test   eax,eax
  406d3c:	je     406d5c <test_table_with_emptystruct@@Base+0xec>
  406d3e:	mov    rdi,rbx
  406d41:	call   411a50 <flatcc_builder_end_table@@Base>
  406d46:	mov    ebp,eax
  406d48:	mov    esi,ebp
  406d4a:	mov    rdi,rbx
  406d4d:	call   410510 <flatcc_builder_end_buffer@@Base>
  406d52:	jmp    406ca9 <test_table_with_emptystruct@@Base+0x39>
  406d57:	call   404180 <__stack_chk_fail@plt>
  406d5c:	lea    rcx,[rip+0x1277d]        # 4194e0 <_IO_stdin_used@@Base+0x34e0>
  406d63:	mov    edx,0xd7
  406d68:	lea    rsi,[rip+0xfe79]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  406d6f:	lea    rdi,[rip+0x103e2]        # 417158 <_IO_stdin_used@@Base+0x1158>
  406d76:	call   4041a0 <__assert_fail@plt>
  406d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406d80 <test_typed_table_with_emptystruct@@Base>:
  406d80:	endbr64 
  406d84:	push   rbp
  406d85:	push   rbx
  406d86:	mov    rbx,rdi
  406d89:	sub    rsp,0x18
  406d8d:	mov    rax,QWORD PTR fs:0x28
  406d96:	mov    QWORD PTR [rsp+0x8],rax
  406d9b:	xor    eax,eax
  406d9d:	call   40fc30 <flatcc_builder_reset@@Base>
  406da2:	xor    ecx,ecx
  406da4:	xor    edx,edx
  406da6:	lea    rsi,[rip+0xf416]        # 4161c3 <_IO_stdin_used@@Base+0x1c3>
  406dad:	mov    rdi,rbx
  406db0:	call   410430 <flatcc_builder_start_buffer@@Base>
  406db5:	test   eax,eax
  406db7:	je     406e98 <test_typed_table_with_emptystruct@@Base+0x118>
  406dbd:	mov    rdi,rbx
  406dc0:	mov    rsi,rsp
  406dc3:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  406dc8:	mov    rbx,rax
  406dcb:	mov    rax,QWORD PTR [rip+0x18226]        # 41eff8 <stderr@GLIBC_2.2.5>
  406dd2:	mov    rdx,QWORD PTR [rsp]
  406dd6:	mov    rcx,QWORD PTR [rax]
  406dd9:	mov    rsi,rbx
  406ddc:	lea    rdi,[rip+0xf3e5]        # 4161c8 <_IO_stdin_used@@Base+0x1c8>
  406de3:	call   404590 <_start@@Base+0x140>
  406de8:	mov    rsi,QWORD PTR [rsp]
  406dec:	lea    rcx,[rip+0xffffffffffffd77d]        # 404570 <_start@@Base+0x120>
  406df3:	lea    rdx,[rip+0xf3c9]        # 4161c3 <_IO_stdin_used@@Base+0x1c3>
  406dfa:	mov    rdi,rbx
  406dfd:	call   414860 <flatcc_verify_table_as_root@@Base>
  406e02:	test   eax,eax
  406e04:	jne    406f20 <test_typed_table_with_emptystruct@@Base+0x1a0>
  406e0a:	mov    rsi,QWORD PTR [rsp]
  406e0e:	lea    rcx,[rip+0xffffffffffffd75b]        # 404570 <_start@@Base+0x120>
  406e15:	lea    rdx,[rip+0xf3a7]        # 4161c3 <_IO_stdin_used@@Base+0x1c3>
  406e1c:	mov    rdi,rbx
  406e1f:	call   414860 <flatcc_verify_table_as_root@@Base>
  406e24:	test   eax,eax
  406e26:	jne    406f40 <test_typed_table_with_emptystruct@@Base+0x1c0>
  406e2c:	mov    rsi,QWORD PTR [rsp]
  406e30:	lea    rcx,[rip+0xffffffffffffd739]        # 404570 <_start@@Base+0x120>
  406e37:	mov    edx,0xb0dd37b6
  406e3c:	mov    rdi,rbx
  406e3f:	call   4149b0 <flatcc_verify_table_as_typed_root@@Base>
  406e44:	test   eax,eax
  406e46:	jne    406f5d <test_typed_table_with_emptystruct@@Base+0x1dd>
  406e4c:	test   rbx,rbx
  406e4f:	je     406f7a <test_typed_table_with_emptystruct@@Base+0x1fa>
  406e55:	cmp    DWORD PTR [rbx+0x4],0xb0dd37b6
  406e5c:	je     406ef8 <test_typed_table_with_emptystruct@@Base+0x178>
  406e62:	lea    rsi,[rip+0xf3b3]        # 41621c <_IO_stdin_used@@Base+0x21c>
  406e69:	mov    edi,0x1
  406e6e:	xor    eax,eax
  406e70:	call   404220 <__printf_chk@plt>
  406e75:	mov    eax,0xffffffff
  406e7a:	mov    rcx,QWORD PTR [rsp+0x8]
  406e7f:	xor    rcx,QWORD PTR fs:0x28
  406e88:	jne    406f97 <test_typed_table_with_emptystruct@@Base+0x217>
  406e8e:	add    rsp,0x18
  406e92:	pop    rbx
  406e93:	pop    rbp
  406e94:	ret    
  406e95:	nop    DWORD PTR [rax]
  406e98:	mov    esi,0x1
  406e9d:	mov    rdi,rbx
  406ea0:	mov    ebp,eax
  406ea2:	call   4110d0 <flatcc_builder_start_table@@Base>
  406ea7:	test   eax,eax
  406ea9:	jne    406ee4 <test_typed_table_with_emptystruct@@Base+0x164>
  406eab:	xor    edx,edx
  406ead:	xor    esi,esi
  406eaf:	mov    ecx,0x1
  406eb4:	mov    rdi,rbx
  406eb7:	call   412950 <flatcc_builder_table_add@@Base>
  406ebc:	test   rax,rax
  406ebf:	je     406ee4 <test_typed_table_with_emptystruct@@Base+0x164>
  406ec1:	xor    edx,edx
  406ec3:	lea    rsi,[rip+0x12770]        # 41963a <_IO_stdin_used@@Base+0x363a>
  406eca:	mov    rdi,rbx
  406ecd:	call   4119c0 <flatcc_builder_check_required@@Base>
  406ed2:	test   eax,eax
  406ed4:	je     406f9c <test_typed_table_with_emptystruct@@Base+0x21c>
  406eda:	mov    rdi,rbx
  406edd:	call   411a50 <flatcc_builder_end_table@@Base>
  406ee2:	mov    ebp,eax
  406ee4:	mov    esi,ebp
  406ee6:	mov    rdi,rbx
  406ee9:	call   410510 <flatcc_builder_end_buffer@@Base>
  406eee:	jmp    406dbd <test_typed_table_with_emptystruct@@Base+0x3d>
  406ef3:	nop    DWORD PTR [rax+rax*1+0x0]
  406ef8:	mov    edx,DWORD PTR [rbx]
  406efa:	add    rbx,rdx
  406efd:	jne    406e7a <test_typed_table_with_emptystruct@@Base+0xfa>
  406f03:	lea    rsi,[rip+0x10356]        # 417260 <_IO_stdin_used@@Base+0x1260>
  406f0a:	mov    edi,0x1
  406f0f:	xor    eax,eax
  406f11:	call   404220 <__printf_chk@plt>
  406f16:	mov    eax,0xffffffff
  406f1b:	jmp    406e7a <test_typed_table_with_emptystruct@@Base+0xfa>
  406f20:	lea    rsi,[rip+0x102f1]        # 417218 <_IO_stdin_used@@Base+0x1218>
  406f27:	mov    edi,0x1
  406f2c:	xor    eax,eax
  406f2e:	call   404220 <__printf_chk@plt>
  406f33:	mov    eax,0xffffffff
  406f38:	jmp    406e7a <test_typed_table_with_emptystruct@@Base+0xfa>
  406f3d:	nop    DWORD PTR [rax]
  406f40:	lea    rsi,[rip+0xf29f]        # 4161e6 <_IO_stdin_used@@Base+0x1e6>
  406f47:	mov    edi,0x1
  406f4c:	xor    eax,eax
  406f4e:	call   404220 <__printf_chk@plt>
  406f53:	mov    eax,0xffffffff
  406f58:	jmp    406e7a <test_typed_table_with_emptystruct@@Base+0xfa>
  406f5d:	lea    rsi,[rip+0x102d4]        # 417238 <_IO_stdin_used@@Base+0x1238>
  406f64:	mov    edi,0x1
  406f69:	xor    eax,eax
  406f6b:	call   404220 <__printf_chk@plt>
  406f70:	mov    eax,0xffffffff
  406f75:	jmp    406e7a <test_typed_table_with_emptystruct@@Base+0xfa>
  406f7a:	lea    rsi,[rip+0xf282]        # 416203 <_IO_stdin_used@@Base+0x203>
  406f81:	mov    edi,0x1
  406f86:	xor    eax,eax
  406f88:	call   404220 <__printf_chk@plt>
  406f8d:	mov    eax,0xffffffff
  406f92:	jmp    406e7a <test_typed_table_with_emptystruct@@Base+0xfa>
  406f97:	call   404180 <__stack_chk_fail@plt>
  406f9c:	lea    rcx,[rip+0x1253d]        # 4194e0 <_IO_stdin_used@@Base+0x34e0>
  406fa3:	mov    edx,0xd7
  406fa8:	lea    rsi,[rip+0xfc39]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  406faf:	lea    rdi,[rip+0x101a2]        # 417158 <_IO_stdin_used@@Base+0x1158>
  406fb6:	call   4041a0 <__assert_fail@plt>
  406fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406fc0 <verify_monster@@Base>:
  406fc0:	endbr64 
  406fc4:	push   r15
  406fc6:	mov    edx,0x10
  406fcb:	mov    ecx,0x30
  406fd0:	push   r14
  406fd2:	mov    esi,0x50
  406fd7:	mov    r8d,0x70
  406fdd:	push   r13
  406fdf:	mov    r9d,0x191
  406fe5:	push   r12
  406fe7:	push   rbp
  406fe8:	push   rbx
  406fe9:	sub    rsp,0x58
  406fed:	mov    rax,QWORD PTR fs:0x28
  406ff6:	mov    QWORD PTR [rsp+0x48],rax
  406ffb:	xor    eax,eax
  406ffd:	movabs rax,0x100000000
  407007:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  40700e:	mov    WORD PTR [rsp+0x30],dx
  407013:	mov    BYTE PTR [rsp+0x32],0x20
  407018:	mov    WORD PTR [rsp+0x34],cx
  40701d:	mov    BYTE PTR [rsp+0x36],0x40
  407022:	mov    WORD PTR [rsp+0x38],si
  407027:	mov    BYTE PTR [rsp+0x3a],0x60
  40702c:	mov    WORD PTR [rsp+0x3c],r8w
  407032:	mov    BYTE PTR [rsp+0x3e],0x80
  407037:	mov    WORD PTR [rsp+0x40],r9w
  40703d:	mov    BYTE PTR [rsp+0x42],0x91
  407042:	mov    QWORD PTR [rsp+0x20],rax
  407047:	mov    QWORD PTR [rsp+0x28],0x1
  407050:	je     407090 <verify_monster@@Base+0xd0>
  407052:	lea    rsi,[rip+0x10247]        # 4172a0 <_IO_stdin_used@@Base+0x12a0>
  407059:	mov    edi,0x1
  40705e:	xor    eax,eax
  407060:	call   404220 <__printf_chk@plt>
  407065:	mov    eax,0xffffffff
  40706a:	mov    rsi,QWORD PTR [rsp+0x48]
  40706f:	xor    rsi,QWORD PTR fs:0x28
  407078:	jne    407a40 <verify_monster@@Base+0xa80>
  40707e:	add    rsp,0x58
  407082:	pop    rbx
  407083:	pop    rbp
  407084:	pop    r12
  407086:	pop    r13
  407088:	pop    r14
  40708a:	pop    r15
  40708c:	ret    
  40708d:	nop    DWORD PTR [rax]
  407090:	mov    ebp,DWORD PTR [rdi]
  407092:	add    rbp,rdi
  407095:	je     407288 <verify_monster@@Base+0x2c8>
  40709b:	movsxd rax,DWORD PTR [rbp+0x0]
  40709f:	mov    rbx,rbp
  4070a2:	sub    rbx,rax
  4070a5:	cmp    WORD PTR [rbx],0x9
  4070a9:	jbe    407300 <verify_monster@@Base+0x340>
  4070af:	movzx  edx,WORD PTR [rbx+0x8]
  4070b3:	test   dx,dx
  4070b6:	je     407300 <verify_monster@@Base+0x340>
  4070bc:	cmp    WORD PTR [rbp+rdx*1+0x0],0x50
  4070c2:	jne    407300 <verify_monster@@Base+0x340>
  4070c8:	movzx  ebx,WORD PTR [rbx+0x4]
  4070cc:	test   bx,bx
  4070cf:	je     407a25 <verify_monster@@Base+0xa65>
  4070d5:	add    rbx,rbp
  4070d8:	je     407a25 <verify_monster@@Base+0xa65>
  4070de:	test   bl,0xf
  4070e1:	jne    4072a8 <verify_monster@@Base+0x2e8>
  4070e7:	vmovss xmm0,DWORD PTR [rbx+0x8]
  4070ec:	vucomiss xmm0,DWORD PTR [rip+0x12588]        # 41967c <_IO_stdin_used@@Base+0x367c>
  4070f4:	jp     4079b7 <verify_monster@@Base+0x9f7>
  4070fa:	jne    4079b7 <verify_monster@@Base+0x9f7>
  407100:	vmovss xmm0,DWORD PTR [rip+0x12578]        # 419680 <_IO_stdin_used@@Base+0x3680>
  407108:	vucomiss xmm0,DWORD PTR [rbx]
  40710c:	jp     407848 <verify_monster@@Base+0x888>
  407112:	jne    407848 <verify_monster@@Base+0x888>
  407118:	vmovss xmm0,DWORD PTR [rbx+0x4]
  40711d:	vucomiss xmm0,DWORD PTR [rip+0x1255f]        # 419684 <_IO_stdin_used@@Base+0x3684>
  407125:	jp     407848 <verify_monster@@Base+0x888>
  40712b:	jne    407848 <verify_monster@@Base+0x888>
  407131:	movabs rax,0x400000003f800000
  40713b:	vpxor  xmm0,xmm0,xmm0
  40713f:	mov    QWORD PTR [rsp],rax
  407143:	movzx  eax,BYTE PTR [rbx+0x18]
  407147:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  40714d:	vmovsd xmm0,QWORD PTR [rbx+0x10]
  407152:	mov    BYTE PTR [rsp+0x18],al
  407156:	movzx  eax,WORD PTR [rbx+0x1a]
  40715a:	vucomisd xmm0,QWORD PTR [rip+0x12506]        # 419668 <_IO_stdin_used@@Base+0x3668>
  407162:	mov    WORD PTR [rsp+0x1a],ax
  407167:	movzx  eax,BYTE PTR [rbx+0x1c]
  40716b:	mov    DWORD PTR [rsp+0x1c],0x0
  407173:	mov    DWORD PTR [rsp+0x8],0xc04ccccd
  40717b:	vmovsd QWORD PTR [rsp+0x10],xmm0
  407181:	mov    BYTE PTR [rsp+0x1c],al
  407185:	jp     407882 <verify_monster@@Base+0x8c2>
  40718b:	jne    407882 <verify_monster@@Base+0x8c2>
  407191:	mov    eax,DWORD PTR [rbx+0x1a]
  407194:	test   eax,eax
  407196:	jne    407882 <verify_monster@@Base+0x8c2>
  40719c:	mov    rdi,rbp
  40719f:	call   404bb0 <_start@@Base+0x760>
  4071a4:	test   rax,rax
  4071a7:	je     4078fa <verify_monster@@Base+0x93a>
  4071ad:	mov    ecx,0xa
  4071b2:	lea    rdi,[rip+0xef9a]        # 416153 <_IO_stdin_used@@Base+0x153>
  4071b9:	mov    rsi,rax
  4071bc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4071be:	seta   dl
  4071c1:	sbb    dl,0x0
  4071c4:	test   dl,dl
  4071c6:	jne    4078fa <verify_monster@@Base+0x93a>
  4071cc:	cmp    DWORD PTR [rax-0x4],0x9
  4071d0:	jne    40789f <verify_monster@@Base+0x8df>
  4071d6:	movsxd rax,DWORD PTR [rbp+0x0]
  4071da:	mov    rbx,rbp
  4071dd:	sub    rbx,rax
  4071e0:	movzx  r12d,WORD PTR [rbx]
  4071e4:	cmp    r12w,0x11
  4071e9:	jbe    4078c0 <verify_monster@@Base+0x900>
  4071ef:	movzx  eax,WORD PTR [rbx+0x10]
  4071f3:	test   ax,ax
  4071f6:	je     4078c0 <verify_monster@@Base+0x900>
  4071fc:	cmp    BYTE PTR [rbp+rax*1+0x0],0x2
  407201:	jne    4078c0 <verify_monster@@Base+0x900>
  407207:	movzx  eax,WORD PTR [rbx+0xe]
  40720b:	test   ax,ax
  40720e:	je     4072c0 <verify_monster@@Base+0x300>
  407214:	add    rax,rbp
  407217:	mov    edx,DWORD PTR [rax]
  407219:	lea    rcx,[rax+rdx*1+0x4]
  40721e:	test   rcx,rcx
  407221:	je     4072c0 <verify_monster@@Base+0x300>
  407227:	cmp    DWORD PTR [rcx-0x4],0xa
  40722b:	jne    4072c0 <verify_monster@@Base+0x300>
  407231:	xor    edx,edx
  407233:	nop    DWORD PTR [rax+rax*1+0x0]
  407238:	movzx  eax,BYTE PTR [rcx+rdx*1]
  40723c:	cmp    rax,rdx
  40723f:	jne    4072e0 <verify_monster@@Base+0x320>
  407245:	inc    rdx
  407248:	cmp    rdx,0xa
  40724c:	jne    407238 <verify_monster@@Base+0x278>
  40724e:	movzx  eax,WORD PTR [rbx+0x6]
  407252:	test   ax,ax
  407255:	je     407320 <verify_monster@@Base+0x360>
  40725b:	cmp    WORD PTR [rbp+rax*1+0x0],0x96
  407262:	jne    407917 <verify_monster@@Base+0x957>
  407268:	lea    rsi,[rip+0xf159]        # 4163c8 <_IO_stdin_used@@Base+0x3c8>
  40726f:	mov    edi,0x1
  407274:	xor    eax,eax
  407276:	call   404220 <__printf_chk@plt>
  40727b:	mov    eax,0xffffffff
  407280:	jmp    40706a <verify_monster@@Base+0xaa>
  407285:	nop    DWORD PTR [rax]
  407288:	lea    rsi,[rip+0xee5b]        # 4160ea <_IO_stdin_used@@Base+0xea>
  40728f:	mov    edi,0x1
  407294:	xor    eax,eax
  407296:	call   404220 <__printf_chk@plt>
  40729b:	mov    eax,0xffffffff
  4072a0:	jmp    40706a <verify_monster@@Base+0xaa>
  4072a5:	nop    DWORD PTR [rax]
  4072a8:	lea    rsi,[rip+0x10021]        # 4172d0 <_IO_stdin_used@@Base+0x12d0>
  4072af:	mov    edi,0x1
  4072b4:	xor    eax,eax
  4072b6:	call   404220 <__printf_chk@plt>
  4072bb:	jmp    4070e7 <verify_monster@@Base+0x127>
  4072c0:	lea    rsi,[rip+0xefc2]        # 416289 <_IO_stdin_used@@Base+0x289>
  4072c7:	mov    edi,0x1
  4072cc:	xor    eax,eax
  4072ce:	call   404220 <__printf_chk@plt>
  4072d3:	mov    eax,0xffffffff
  4072d8:	jmp    40706a <verify_monster@@Base+0xaa>
  4072dd:	nop    DWORD PTR [rax]
  4072e0:	lea    rsi,[rip+0xefbf]        # 4162a6 <_IO_stdin_used@@Base+0x2a6>
  4072e7:	mov    edi,0x1
  4072ec:	xor    eax,eax
  4072ee:	call   404220 <__printf_chk@plt>
  4072f3:	mov    eax,0xffffffff
  4072f8:	jmp    40706a <verify_monster@@Base+0xaa>
  4072fd:	nop    DWORD PTR [rax]
  407300:	lea    rsi,[rip+0xfaf9]        # 416e00 <_IO_stdin_used@@Base+0xe00>
  407307:	mov    edi,0x1
  40730c:	xor    eax,eax
  40730e:	call   404220 <__printf_chk@plt>
  407313:	mov    eax,0xffffffff
  407318:	jmp    40706a <verify_monster@@Base+0xaa>
  40731d:	nop    DWORD PTR [rax]
  407320:	cmp    WORD PTR [rbx+0x8],0x0
  407325:	je     4079ef <verify_monster@@Base+0xa2f>
  40732b:	cmp    WORD PTR [rbx+0x4],0x0
  407330:	je     4079d4 <verify_monster@@Base+0xa14>
  407336:	cmp    r12w,0x17
  40733b:	jbe    407620 <verify_monster@@Base+0x660>
  407341:	movzx  eax,WORD PTR [rbx+0x16]
  407345:	test   ax,ax
  407348:	je     407620 <verify_monster@@Base+0x660>
  40734e:	add    rax,rbp
  407351:	mov    edx,DWORD PTR [rax]
  407353:	lea    rax,[rax+rdx*1+0x4]
  407358:	test   rax,rax
  40735b:	je     407620 <verify_monster@@Base+0x660>
  407361:	cmp    DWORD PTR [rax-0x4],0x5
  407365:	jne    407620 <verify_monster@@Base+0x660>
  40736b:	lea    rcx,[rsp+0x30]
  407370:	xor    edx,edx
  407372:	movzx  esi,WORD PTR [rcx]
  407375:	test   rax,rax
  407378:	je     407610 <verify_monster@@Base+0x650>
  40737e:	cmp    si,WORD PTR [rax]
  407381:	jne    407640 <verify_monster@@Base+0x680>
  407387:	movzx  edi,BYTE PTR [rcx+0x2]
  40738b:	movzx  esi,BYTE PTR [rax+0x2]
  40738f:	cmp    sil,dil
  407392:	jne    407640 <verify_monster@@Base+0x680>
  407398:	inc    rdx
  40739b:	add    rcx,0x4
  40739f:	add    rax,0x4
  4073a3:	cmp    rdx,0x5
  4073a7:	jne    407372 <verify_monster@@Base+0x3b2>
  4073a9:	cmp    r12w,0x1b
  4073ae:	jbe    407660 <verify_monster@@Base+0x6a0>
  4073b4:	movzx  eax,WORD PTR [rbx+0x1a]
  4073b8:	test   ax,ax
  4073bb:	je     407660 <verify_monster@@Base+0x6a0>
  4073c1:	add    rax,rbp
  4073c4:	mov    edx,DWORD PTR [rax]
  4073c6:	lea    r15,[rax+rdx*1+0x4]
  4073cb:	test   r15,r15
  4073ce:	je     407660 <verify_monster@@Base+0x6a0>
  4073d4:	cmp    DWORD PTR [r15-0x4],0x8
  4073d9:	jne    407660 <verify_monster@@Base+0x6a0>
  4073df:	mov    eax,DWORD PTR [r15+0x14]
  4073e3:	lea    r13,[r15+rax*1+0x14]
  4073e8:	test   r13,r13
  4073eb:	je     407c40 <verify_monster@@Base+0xc80>
  4073f1:	mov    rdi,r13
  4073f4:	call   404bb0 <_start@@Base+0x760>
  4073f9:	lea    r14,[rip+0xeee9]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  407400:	mov    rsi,rax
  407403:	mov    ecx,0x8
  407408:	mov    rdi,r14
  40740b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40740d:	seta   al
  407410:	sbb    al,0x0
  407412:	test   al,al
  407414:	jne    407b17 <verify_monster@@Base+0xb57>
  40741a:	mov    eax,DWORD PTR [r15+0x4]
  40741e:	lea    rax,[r15+rax*1+0x4]
  407423:	cmp    r13,rax
  407426:	jne    407a0a <verify_monster@@Base+0xa4a>
  40742c:	mov    rdi,r13
  40742f:	call   404bb0 <_start@@Base+0x760>
  407434:	mov    rsi,rax
  407437:	mov    ecx,0x8
  40743c:	mov    rdi,r14
  40743f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407441:	seta   cl
  407444:	sbb    cl,0x0
  407447:	test   cl,cl
  407449:	jne    407af9 <verify_monster@@Base+0xb39>
  40744f:	mov    eax,DWORD PTR [r15+0x8]
  407453:	lea    r13,[rip+0xee97]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40745a:	lea    rdi,[r15+rax*1+0x8]
  40745f:	call   404bb0 <_start@@Base+0x760>
  407464:	mov    rsi,rax
  407467:	mov    ecx,0x6
  40746c:	mov    rdi,r13
  40746f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407471:	seta   cl
  407474:	sbb    cl,0x0
  407477:	test   cl,cl
  407479:	jne    407adb <verify_monster@@Base+0xb1b>
  40747f:	mov    edi,DWORD PTR [r15]
  407482:	add    rdi,r15
  407485:	call   404bb0 <_start@@Base+0x760>
  40748a:	mov    rsi,rax
  40748d:	mov    ecx,0x9
  407492:	lea    rdi,[rip+0xee5e]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  407499:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40749b:	seta   cl
  40749e:	sbb    cl,0x0
  4074a1:	test   cl,cl
  4074a3:	jne    407abd <verify_monster@@Base+0xafd>
  4074a9:	mov    eax,DWORD PTR [r15+0xc]
  4074ad:	lea    rdi,[r15+rax*1+0xc]
  4074b2:	call   404bb0 <_start@@Base+0x760>
  4074b7:	mov    rsi,rax
  4074ba:	mov    ecx,0x8
  4074bf:	mov    rdi,r14
  4074c2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4074c4:	seta   cl
  4074c7:	sbb    cl,0x0
  4074ca:	test   cl,cl
  4074cc:	jne    407a9f <verify_monster@@Base+0xadf>
  4074d2:	mov    eax,DWORD PTR [r15+0x10]
  4074d6:	lea    rdi,[r15+rax*1+0x10]
  4074db:	call   404bb0 <_start@@Base+0x760>
  4074e0:	mov    rsi,rax
  4074e3:	mov    ecx,0x6
  4074e8:	mov    rdi,r13
  4074eb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4074ed:	seta   cl
  4074f0:	sbb    cl,0x0
  4074f3:	test   cl,cl
  4074f5:	jne    407a81 <verify_monster@@Base+0xac1>
  4074fb:	mov    eax,DWORD PTR [r15+0x18]
  4074ff:	lea    rdi,[r15+rax*1+0x18]
  407504:	call   404bb0 <_start@@Base+0x760>
  407509:	mov    rsi,rax
  40750c:	mov    ecx,0x9
  407511:	lea    rdi,[rip+0xeddf]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  407518:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40751a:	seta   cl
  40751d:	sbb    cl,0x0
  407520:	test   cl,cl
  407522:	jne    407a63 <verify_monster@@Base+0xaa3>
  407528:	mov    eax,DWORD PTR [r15+0x1c]
  40752c:	lea    rdi,[r15+rax*1+0x1c]
  407531:	call   404bb0 <_start@@Base+0x760>
  407536:	mov    rsi,rax
  407539:	mov    ecx,0x6
  40753e:	mov    rdi,r13
  407541:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407543:	seta   cl
  407546:	sbb    cl,0x0
  407549:	test   cl,cl
  40754b:	jne    407a45 <verify_monster@@Base+0xa85>
  407551:	movzx  eax,WORD PTR [rbx+0x18]
  407555:	test   ax,ax
  407558:	je     40767d <verify_monster@@Base+0x6bd>
  40755e:	add    rax,rbp
  407561:	mov    edx,DWORD PTR [rax]
  407563:	lea    rax,[rax+rdx*1+0x4]
  407568:	test   rax,rax
  40756b:	je     40767d <verify_monster@@Base+0x6bd>
  407571:	cmp    DWORD PTR [rax-0x4],0x3
  407575:	jne    40767d <verify_monster@@Base+0x6bd>
  40757b:	mov    edx,DWORD PTR [rax]
  40757d:	mov    ecx,0x6
  407582:	lea    rsi,[rax+rdx*1+0x4]
  407587:	lea    rdi,[rip+0xed72]        # 416300 <_IO_stdin_used@@Base+0x300>
  40758e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407590:	seta   dl
  407593:	sbb    dl,0x0
  407596:	test   dl,dl
  407598:	jne    407b9e <verify_monster@@Base+0xbde>
  40759e:	mov    edx,DWORD PTR [rax+0x4]
  4075a1:	lea    rdx,[rax+rdx*1+0x8]
  4075a6:	test   rdx,rdx
  4075a9:	je     407865 <verify_monster@@Base+0x8a5>
  4075af:	cmp    DWORD PTR [rdx-0x4],0x2
  4075b3:	jne    407865 <verify_monster@@Base+0x8a5>
  4075b9:	cmp    WORD PTR [rdx],0x2c
  4075bd:	jne    407bef <verify_monster@@Base+0xc2f>
  4075c3:	mov    edx,DWORD PTR [rax+0x8]
  4075c6:	mov    ecx,0x7
  4075cb:	lea    rsi,[rax+rdx*1+0xc]
  4075d0:	lea    rdi,[rip+0xed61]        # 416338 <_IO_stdin_used@@Base+0x338>
  4075d7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4075d9:	seta   al
  4075dc:	sbb    al,0x0
  4075de:	movsx  eax,al
  4075e1:	test   eax,eax
  4075e3:	jne    407bd4 <verify_monster@@Base+0xc14>
  4075e9:	cmp    r12w,0x35
  4075ee:	ja     40769a <verify_monster@@Base+0x6da>
  4075f4:	lea    rsi,[rip+0xed5c]        # 416357 <_IO_stdin_used@@Base+0x357>
  4075fb:	mov    edi,0x1
  407600:	xor    eax,eax
  407602:	call   404220 <__printf_chk@plt>
  407607:	or     eax,0xffffffff
  40760a:	jmp    40706a <verify_monster@@Base+0xaa>
  40760f:	nop
  407610:	test   si,si
  407613:	jne    407640 <verify_monster@@Base+0x680>
  407615:	movzx  edi,BYTE PTR [rcx+0x2]
  407619:	xor    esi,esi
  40761b:	jmp    40738f <verify_monster@@Base+0x3cf>
  407620:	lea    rsi,[rip+0xfd69]        # 417390 <_IO_stdin_used@@Base+0x1390>
  407627:	mov    edi,0x1
  40762c:	xor    eax,eax
  40762e:	call   404220 <__printf_chk@plt>
  407633:	mov    eax,0xffffffff
  407638:	jmp    40706a <verify_monster@@Base+0xaa>
  40763d:	nop    DWORD PTR [rax]
  407640:	lea    rsi,[rip+0xfd71]        # 4173b8 <_IO_stdin_used@@Base+0x13b8>
  407647:	mov    edi,0x1
  40764c:	xor    eax,eax
  40764e:	call   404220 <__printf_chk@plt>
  407653:	mov    eax,0xffffffff
  407658:	jmp    40706a <verify_monster@@Base+0xaa>
  40765d:	nop    DWORD PTR [rax]
  407660:	lea    rsi,[rip+0xfd79]        # 4173e0 <_IO_stdin_used@@Base+0x13e0>
  407667:	mov    edi,0x1
  40766c:	xor    eax,eax
  40766e:	call   404220 <__printf_chk@plt>
  407673:	mov    eax,0xffffffff
  407678:	jmp    40706a <verify_monster@@Base+0xaa>
  40767d:	lea    rsi,[rip+0xff44]        # 4175c8 <_IO_stdin_used@@Base+0x15c8>
  407684:	mov    edi,0x1
  407689:	xor    eax,eax
  40768b:	call   404220 <__printf_chk@plt>
  407690:	mov    eax,0xffffffff
  407695:	jmp    40706a <verify_monster@@Base+0xaa>
  40769a:	movzx  edx,WORD PTR [rbx+0x34]
  40769e:	test   dx,dx
  4076a1:	je     4075f4 <verify_monster@@Base+0x634>
  4076a7:	add    rdx,rbp
  4076aa:	mov    ecx,DWORD PTR [rdx]
  4076ac:	lea    rsi,[rdx+rcx*1+0x4]
  4076b1:	test   rsi,rsi
  4076b4:	je     4078dd <verify_monster@@Base+0x91d>
  4076ba:	cmp    DWORD PTR [rsi-0x4],0x4
  4076be:	jne    4078dd <verify_monster@@Base+0x91d>
  4076c4:	xor    edx,edx
  4076c6:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  4076ca:	cmp    ecx,eax
  4076cc:	jne    4076e3 <verify_monster@@Base+0x723>
  4076ce:	inc    rdx
  4076d1:	cmp    rdx,0x4
  4076d5:	je     407700 <verify_monster@@Base+0x740>
  4076d7:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
  4076db:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  4076df:	cmp    ecx,eax
  4076e1:	je     4076ce <verify_monster@@Base+0x70e>
  4076e3:	lea    rsi,[rip+0xff56]        # 417640 <_IO_stdin_used@@Base+0x1640>
  4076ea:	mov    edi,0x1
  4076ef:	xor    eax,eax
  4076f1:	call   404220 <__printf_chk@plt>
  4076f6:	mov    eax,0xffffffff
  4076fb:	jmp    40706a <verify_monster@@Base+0xaa>
  407700:	mov    rdi,rbp
  407703:	call   404af0 <_start@@Base+0x6a0>
  407708:	cmp    al,0x1
  40770a:	jne    407c25 <verify_monster@@Base+0xc65>
  407710:	mov    rdi,rbp
  407713:	call   404b50 <_start@@Base+0x700>
  407718:	mov    rdi,rax
  40771b:	call   404bb0 <_start@@Base+0x760>
  407720:	mov    rsi,rax
  407723:	mov    ecx,0x8
  407728:	mov    rdi,r14
  40772b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40772d:	seta   al
  407730:	sbb    al,0x0
  407732:	test   al,al
  407734:	jne    407c0a <verify_monster@@Base+0xc4a>
  40773a:	movzx  eax,WORD PTR [rbx+0x1c]
  40773e:	xor    r12d,r12d
  407741:	test   ax,ax
  407744:	je     40774f <verify_monster@@Base+0x78f>
  407746:	add    rax,rbp
  407749:	mov    r12d,DWORD PTR [rax]
  40774c:	add    r12,rax
  40774f:	mov    rdi,r12
  407752:	call   404bb0 <_start@@Base+0x760>
  407757:	mov    rsi,rax
  40775a:	mov    ecx,0xa
  40775f:	lea    rdi,[rip+0xec0c]        # 416372 <_IO_stdin_used@@Base+0x372>
  407766:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407768:	seta   al
  40776b:	sbb    al,0x0
  40776d:	test   al,al
  40776f:	jne    407b83 <verify_monster@@Base+0xbc3>
  407775:	mov    rdi,r12
  407778:	call   404af0 <_start@@Base+0x6a0>
  40777d:	test   al,al
  40777f:	jne    407b68 <verify_monster@@Base+0xba8>
  407785:	test   r12,r12
  407788:	je     407c83 <verify_monster@@Base+0xcc3>
  40778e:	movsxd rax,DWORD PTR [r12]
  407792:	mov    rcx,r12
  407795:	sub    rcx,rax
  407798:	cmp    WORD PTR [rcx],0x1b
  40779c:	jbe    407c7e <verify_monster@@Base+0xcbe>
  4077a2:	movzx  eax,WORD PTR [rcx+0x1a]
  4077a6:	test   ax,ax
  4077a9:	je     407c7e <verify_monster@@Base+0xcbe>
  4077af:	add    r12,rax
  4077b2:	mov    eax,DWORD PTR [r12]
  4077b6:	lea    rdx,[r12+rax*1+0x4]
  4077bb:	test   rdx,rdx
  4077be:	je     407c7e <verify_monster@@Base+0xcbe>
  4077c4:	mov    eax,DWORD PTR [rdx-0x4]
  4077c7:	add    rax,0xffffffffffffffff
  4077cb:	lea    r12,[rdx+rax*4]
  4077cf:	jae    407c7e <verify_monster@@Base+0xcbe>
  4077d5:	mov    eax,DWORD PTR [r12]
  4077d9:	add    r12,rax
  4077dc:	mov    rdi,r12
  4077df:	call   404af0 <_start@@Base+0x6a0>
  4077e4:	cmp    al,0x1
  4077e6:	jne    407b4d <verify_monster@@Base+0xb8d>
  4077ec:	mov    rdi,r12
  4077ef:	call   404b50 <_start@@Base+0x700>
  4077f4:	mov    rdi,rax
  4077f7:	call   404bb0 <_start@@Base+0x760>
  4077fc:	mov    rsi,rax
  4077ff:	mov    ecx,0x8
  407804:	mov    rdi,r14
  407807:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407809:	seta   al
  40780c:	sbb    al,0x0
  40780e:	movsx  eax,al
  407811:	test   eax,eax
  407813:	jne    407b32 <verify_monster@@Base+0xb72>
  407819:	movzx  edx,WORD PTR [rbx+0x22]
  40781d:	test   dx,dx
  407820:	jne    407934 <verify_monster@@Base+0x974>
  407826:	lea    rsi,[rip+0xeb6d]        # 41639a <_IO_stdin_used@@Base+0x39a>
  40782d:	mov    edi,0x1
  407832:	xor    eax,eax
  407834:	call   404220 <__printf_chk@plt>
  407839:	or     eax,0xffffffff
  40783c:	jmp    40706a <verify_monster@@Base+0xaa>
  407841:	nop    DWORD PTR [rax+0x0]
  407848:	lea    rsi,[rip+0xe9f2]        # 416241 <_IO_stdin_used@@Base+0x241>
  40784f:	mov    edi,0x1
  407854:	xor    eax,eax
  407856:	call   404220 <__printf_chk@plt>
  40785b:	mov    eax,0xffffffff
  407860:	jmp    40706a <verify_monster@@Base+0xaa>
  407865:	lea    rsi,[rip+0xeab2]        # 41631e <_IO_stdin_used@@Base+0x31e>
  40786c:	mov    edi,0x1
  407871:	xor    eax,eax
  407873:	call   404220 <__printf_chk@plt>
  407878:	mov    eax,0xffffffff
  40787d:	jmp    40706a <verify_monster@@Base+0xaa>
  407882:	lea    rsi,[rip+0xfa97]        # 417320 <_IO_stdin_used@@Base+0x1320>
  407889:	mov    edi,0x1
  40788e:	xor    eax,eax
  407890:	call   404220 <__printf_chk@plt>
  407895:	mov    eax,0xffffffff
  40789a:	jmp    40706a <verify_monster@@Base+0xaa>
  40789f:	lea    rsi,[rip+0xe9c7]        # 41626d <_IO_stdin_used@@Base+0x26d>
  4078a6:	mov    edi,0x1
  4078ab:	xor    eax,eax
  4078ad:	call   404220 <__printf_chk@plt>
  4078b2:	mov    eax,0xffffffff
  4078b7:	jmp    40706a <verify_monster@@Base+0xaa>
  4078bc:	nop    DWORD PTR [rax+0x0]
  4078c0:	lea    rsi,[rip+0xfa81]        # 417348 <_IO_stdin_used@@Base+0x1348>
  4078c7:	mov    edi,0x1
  4078cc:	xor    eax,eax
  4078ce:	call   404220 <__printf_chk@plt>
  4078d3:	mov    eax,0xffffffff
  4078d8:	jmp    40706a <verify_monster@@Base+0xaa>
  4078dd:	lea    rsi,[rip+0xfd3c]        # 417620 <_IO_stdin_used@@Base+0x1620>
  4078e4:	mov    edi,0x1
  4078e9:	xor    eax,eax
  4078eb:	call   404220 <__printf_chk@plt>
  4078f0:	mov    eax,0xffffffff
  4078f5:	jmp    40706a <verify_monster@@Base+0xaa>
  4078fa:	lea    rsi,[rip+0xe957]        # 416258 <_IO_stdin_used@@Base+0x258>
  407901:	mov    edi,0x1
  407906:	xor    eax,eax
  407908:	call   404220 <__printf_chk@plt>
  40790d:	mov    eax,0xffffffff
  407912:	jmp    40706a <verify_monster@@Base+0xaa>
  407917:	lea    rsi,[rip+0xe9a5]        # 4162c3 <_IO_stdin_used@@Base+0x2c3>
  40791e:	mov    edi,0x1
  407923:	xor    eax,eax
  407925:	call   404220 <__printf_chk@plt>
  40792a:	mov    eax,0xffffffff
  40792f:	jmp    40706a <verify_monster@@Base+0xaa>
  407934:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x0
  407939:	jne    407826 <verify_monster@@Base+0x866>
  40793f:	movzx  edx,WORD PTR [rbx+0x20]
  407943:	test   dx,dx
  407946:	je     407bb9 <verify_monster@@Base+0xbf9>
  40794c:	lea    rdi,[rbp+rdx*1+0x0]
  407951:	mov    edx,DWORD PTR [rdi]
  407953:	add    rdx,rdi
  407956:	je     407c5f <verify_monster@@Base+0xc9f>
  40795c:	movsxd rcx,DWORD PTR [rdx]
  40795f:	sub    rdx,rcx
  407962:	movzx  ecx,WORD PTR [rdx]
  407965:	cmp    cx,0x5
  407969:	jbe    40706a <verify_monster@@Base+0xaa>
  40796f:	cmp    WORD PTR [rdx+0x4],0x0
  407974:	jne    40799c <verify_monster@@Base+0x9dc>
  407976:	cmp    cx,0x7
  40797a:	jbe    40706a <verify_monster@@Base+0xaa>
  407980:	cmp    WORD PTR [rdx+0x6],0x0
  407985:	jne    40799c <verify_monster@@Base+0x9dc>
  407987:	cmp    cx,0x9
  40798b:	jbe    40706a <verify_monster@@Base+0xaa>
  407991:	cmp    WORD PTR [rdx+0x8],0x0
  407996:	je     40706a <verify_monster@@Base+0xaa>
  40799c:	lea    rsi,[rip+0xea0c]        # 4163af <_IO_stdin_used@@Base+0x3af>
  4079a3:	mov    edi,0x1
  4079a8:	xor    eax,eax
  4079aa:	call   404220 <__printf_chk@plt>
  4079af:	or     eax,0xffffffff
  4079b2:	jmp    40706a <verify_monster@@Base+0xaa>
  4079b7:	lea    rsi,[rip+0xf93a]        # 4172f8 <_IO_stdin_used@@Base+0x12f8>
  4079be:	mov    edi,0x1
  4079c3:	xor    eax,eax
  4079c5:	call   404220 <__printf_chk@plt>
  4079ca:	mov    eax,0xffffffff
  4079cf:	jmp    40706a <verify_monster@@Base+0xaa>
  4079d4:	lea    rsi,[rip+0xe726]        # 416101 <_IO_stdin_used@@Base+0x101>
  4079db:	mov    edi,0x1
  4079e0:	xor    eax,eax
  4079e2:	call   404220 <__printf_chk@plt>
  4079e7:	or     eax,0xffffffff
  4079ea:	jmp    40706a <verify_monster@@Base+0xaa>
  4079ef:	lea    rsi,[rip+0xf972]        # 417368 <_IO_stdin_used@@Base+0x1368>
  4079f6:	mov    edi,0x1
  4079fb:	xor    eax,eax
  4079fd:	call   404220 <__printf_chk@plt>
  407a02:	or     eax,0xffffffff
  407a05:	jmp    40706a <verify_monster@@Base+0xaa>
  407a0a:	lea    rsi,[rip+0xfa67]        # 417478 <_IO_stdin_used@@Base+0x1478>
  407a11:	mov    edi,0x1
  407a16:	xor    eax,eax
  407a18:	call   404220 <__printf_chk@plt>
  407a1d:	or     eax,0xffffffff
  407a20:	jmp    40706a <verify_monster@@Base+0xaa>
  407a25:	lea    rsi,[rip+0xe801]        # 41622d <_IO_stdin_used@@Base+0x22d>
  407a2c:	mov    edi,0x1
  407a31:	xor    eax,eax
  407a33:	call   404220 <__printf_chk@plt>
  407a38:	or     eax,0xffffffff
  407a3b:	jmp    40706a <verify_monster@@Base+0xaa>
  407a40:	call   404180 <__stack_chk_fail@plt>
  407a45:	mov    rdx,rax
  407a48:	lea    rsi,[rip+0xfb51]        # 4175a0 <_IO_stdin_used@@Base+0x15a0>
  407a4f:	mov    edi,0x1
  407a54:	xor    eax,eax
  407a56:	call   404220 <__printf_chk@plt>
  407a5b:	or     eax,0xffffffff
  407a5e:	jmp    40706a <verify_monster@@Base+0xaa>
  407a63:	mov    rdx,rax
  407a66:	lea    rsi,[rip+0xfb0b]        # 417578 <_IO_stdin_used@@Base+0x1578>
  407a6d:	mov    edi,0x1
  407a72:	xor    eax,eax
  407a74:	call   404220 <__printf_chk@plt>
  407a79:	or     eax,0xffffffff
  407a7c:	jmp    40706a <verify_monster@@Base+0xaa>
  407a81:	mov    rdx,rax
  407a84:	lea    rsi,[rip+0xfac5]        # 417550 <_IO_stdin_used@@Base+0x1550>
  407a8b:	mov    edi,0x1
  407a90:	xor    eax,eax
  407a92:	call   404220 <__printf_chk@plt>
  407a97:	or     eax,0xffffffff
  407a9a:	jmp    40706a <verify_monster@@Base+0xaa>
  407a9f:	mov    rdx,rax
  407aa2:	lea    rsi,[rip+0xfa7f]        # 417528 <_IO_stdin_used@@Base+0x1528>
  407aa9:	mov    edi,0x1
  407aae:	xor    eax,eax
  407ab0:	call   404220 <__printf_chk@plt>
  407ab5:	or     eax,0xffffffff
  407ab8:	jmp    40706a <verify_monster@@Base+0xaa>
  407abd:	mov    rdx,rax
  407ac0:	lea    rsi,[rip+0xfa39]        # 417500 <_IO_stdin_used@@Base+0x1500>
  407ac7:	mov    edi,0x1
  407acc:	xor    eax,eax
  407ace:	call   404220 <__printf_chk@plt>
  407ad3:	or     eax,0xffffffff
  407ad6:	jmp    40706a <verify_monster@@Base+0xaa>
  407adb:	mov    rdx,rax
  407ade:	lea    rsi,[rip+0xf9f3]        # 4174d8 <_IO_stdin_used@@Base+0x14d8>
  407ae5:	mov    edi,0x1
  407aea:	xor    eax,eax
  407aec:	call   404220 <__printf_chk@plt>
  407af1:	or     eax,0xffffffff
  407af4:	jmp    40706a <verify_monster@@Base+0xaa>
  407af9:	mov    rdx,rax
  407afc:	lea    rsi,[rip+0xf9ad]        # 4174b0 <_IO_stdin_used@@Base+0x14b0>
  407b03:	mov    edi,0x1
  407b08:	xor    eax,eax
  407b0a:	call   404220 <__printf_chk@plt>
  407b0f:	or     eax,0xffffffff
  407b12:	jmp    40706a <verify_monster@@Base+0xaa>
  407b17:	lea    rsi,[rip+0xe7bb]        # 4162d9 <_IO_stdin_used@@Base+0x2d9>
  407b1e:	mov    edi,0x1
  407b23:	xor    eax,eax
  407b25:	call   404220 <__printf_chk@plt>
  407b2a:	or     eax,0xffffffff
  407b2d:	jmp    40706a <verify_monster@@Base+0xaa>
  407b32:	lea    rsi,[rip+0xfbef]        # 417728 <_IO_stdin_used@@Base+0x1728>
  407b39:	mov    edi,0x1
  407b3e:	xor    eax,eax
  407b40:	call   404220 <__printf_chk@plt>
  407b45:	or     eax,0xffffffff
  407b48:	jmp    40706a <verify_monster@@Base+0xaa>
  407b4d:	lea    rsi,[rip+0xfb8c]        # 4176e0 <_IO_stdin_used@@Base+0x16e0>
  407b54:	mov    edi,0x1
  407b59:	xor    eax,eax
  407b5b:	call   404220 <__printf_chk@plt>
  407b60:	or     eax,0xffffffff
  407b63:	jmp    40706a <verify_monster@@Base+0xaa>
  407b68:	lea    rsi,[rip+0xfb49]        # 4176b8 <_IO_stdin_used@@Base+0x16b8>
  407b6f:	mov    edi,0x1
  407b74:	xor    eax,eax
  407b76:	call   404220 <__printf_chk@plt>
  407b7b:	or     eax,0xffffffff
  407b7e:	jmp    40706a <verify_monster@@Base+0xaa>
  407b83:	lea    rsi,[rip+0xe7f2]        # 41637c <_IO_stdin_used@@Base+0x37c>
  407b8a:	mov    edi,0x1
  407b8f:	xor    eax,eax
  407b91:	call   404220 <__printf_chk@plt>
  407b96:	or     eax,0xffffffff
  407b99:	jmp    40706a <verify_monster@@Base+0xaa>
  407b9e:	lea    rsi,[rip+0xe761]        # 416306 <_IO_stdin_used@@Base+0x306>
  407ba5:	mov    edi,0x1
  407baa:	xor    eax,eax
  407bac:	call   404220 <__printf_chk@plt>
  407bb1:	or     eax,0xffffffff
  407bb4:	jmp    40706a <verify_monster@@Base+0xaa>
  407bb9:	lea    rsi,[rip+0xfba8]        # 417768 <_IO_stdin_used@@Base+0x1768>
  407bc0:	mov    edi,0x1
  407bc5:	xor    eax,eax
  407bc7:	call   404220 <__printf_chk@plt>
  407bcc:	or     eax,0xffffffff
  407bcf:	jmp    40706a <verify_monster@@Base+0xaa>
  407bd4:	lea    rsi,[rip+0xe764]        # 41633f <_IO_stdin_used@@Base+0x33f>
  407bdb:	mov    edi,0x1
  407be0:	xor    eax,eax
  407be2:	call   404220 <__printf_chk@plt>
  407be7:	or     eax,0xffffffff
  407bea:	jmp    40706a <verify_monster@@Base+0xaa>
  407bef:	lea    rsi,[rip+0xfa02]        # 4175f8 <_IO_stdin_used@@Base+0x15f8>
  407bf6:	mov    edi,0x1
  407bfb:	xor    eax,eax
  407bfd:	call   404220 <__printf_chk@plt>
  407c02:	or     eax,0xffffffff
  407c05:	jmp    40706a <verify_monster@@Base+0xaa>
  407c0a:	lea    rsi,[rip+0xfa7f]        # 417690 <_IO_stdin_used@@Base+0x1690>
  407c11:	mov    edi,0x1
  407c16:	xor    eax,eax
  407c18:	call   404220 <__printf_chk@plt>
  407c1d:	or     eax,0xffffffff
  407c20:	jmp    40706a <verify_monster@@Base+0xaa>
  407c25:	lea    rsi,[rip+0xfa34]        # 417660 <_IO_stdin_used@@Base+0x1660>
  407c2c:	mov    edi,0x1
  407c31:	xor    eax,eax
  407c33:	call   404220 <__printf_chk@plt>
  407c38:	or     eax,0xffffffff
  407c3b:	jmp    40706a <verify_monster@@Base+0xaa>
  407c40:	lea    rcx,[rip+0x11881]        # 4194c8 <_IO_stdin_used@@Base+0x34c8>
  407c47:	mov    edx,0x296
  407c4c:	lea    rsi,[rip+0xf7b5]        # 417408 <_IO_stdin_used@@Base+0x1408>
  407c53:	lea    rdi,[rip+0xe67b]        # 4162d5 <_IO_stdin_used@@Base+0x2d5>
  407c5a:	call   4041a0 <__assert_fail@plt>
  407c5f:	lea    rcx,[rip+0x1159a]        # 419200 <_IO_stdin_used@@Base+0x3200>
  407c66:	mov    edx,0x25f
  407c6b:	lea    rsi,[rip+0xedc6]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  407c72:	lea    rdi,[rip+0xee3f]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  407c79:	call   4041a0 <__assert_fail@plt>
  407c7e:	call   404a90 <_start@@Base+0x640>
  407c83:	call   404a60 <_start@@Base+0x610>
  407c88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407c90 <gen_monster@@Base>:
  407c90:	endbr64 
  407c94:	push   r12
  407c96:	mov    r9d,0x908
  407c9c:	push   rbp
  407c9d:	mov    ebp,esi
  407c9f:	push   rbx
  407ca0:	mov    rbx,rdi
  407ca3:	sub    rsp,0x30
  407ca7:	mov    rax,QWORD PTR fs:0x28
  407cb0:	mov    QWORD PTR [rsp+0x28],rax
  407cb5:	xor    eax,eax
  407cb7:	movabs rax,0x706050403020100
  407cc1:	mov    QWORD PTR [rsp+0x1e],rax
  407cc6:	mov    WORD PTR [rsp+0x26],r9w
  407ccc:	mov    DWORD PTR [rsp+0x1a],0x10100
  407cd4:	call   40fc30 <flatcc_builder_reset@@Base>
  407cd9:	xor    ecx,ecx
  407cdb:	test   ebp,ebp
  407cdd:	je     407ce4 <gen_monster@@Base+0x54>
  407cdf:	mov    ecx,0x2
  407ce4:	xor    edx,edx
  407ce6:	lea    rsi,[rip+0xe44e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  407ced:	mov    rdi,rbx
  407cf0:	call   410430 <flatcc_builder_start_buffer@@Base>
  407cf5:	test   eax,eax
  407cf7:	jne    407d06 <gen_monster@@Base+0x76>
  407cf9:	mov    esi,0x24
  407cfe:	mov    rdi,rbx
  407d01:	call   4110d0 <flatcc_builder_start_table@@Base>
  407d06:	mov    ecx,0x2
  407d0b:	mov    edx,0x2
  407d10:	mov    esi,0x2
  407d15:	mov    rdi,rbx
  407d18:	call   412950 <flatcc_builder_table_add@@Base>
  407d1d:	test   rax,rax
  407d20:	je     407d2c <gen_monster@@Base+0x9c>
  407d22:	mov    r8d,0x50
  407d28:	mov    WORD PTR [rax],r8w
  407d2c:	mov    ecx,0x10
  407d31:	mov    edx,0x20
  407d36:	xor    esi,esi
  407d38:	mov    rdi,rbx
  407d3b:	call   412950 <flatcc_builder_table_add@@Base>
  407d40:	movabs rcx,0x400000003f800000
  407d4a:	mov    QWORD PTR [rax],rcx
  407d4d:	mov    DWORD PTR [rax+0x8],0xc04ccccd
  407d54:	lea    rsi,[rip+0xe3f8]        # 416153 <_IO_stdin_used@@Base+0x153>
  407d5b:	mov    rdi,rbx
  407d5e:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  407d63:	mov    ebp,eax
  407d65:	test   eax,eax
  407d67:	je     407d7d <gen_monster@@Base+0xed>
  407d69:	mov    esi,0x3
  407d6e:	mov    rdi,rbx
  407d71:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  407d76:	test   rax,rax
  407d79:	je     407d7d <gen_monster@@Base+0xed>
  407d7b:	mov    DWORD PTR [rax],ebp
  407d7d:	mov    ecx,0x1
  407d82:	mov    edx,0x1
  407d87:	mov    esi,0x6
  407d8c:	mov    rdi,rbx
  407d8f:	call   412950 <flatcc_builder_table_add@@Base>
  407d94:	test   rax,rax
  407d97:	je     407d9c <gen_monster@@Base+0x10c>
  407d99:	mov    BYTE PTR [rax],0x2
  407d9c:	lea    rsi,[rsp+0x1e]
  407da1:	mov    r9d,0xffffffff
  407da7:	mov    r8d,0x1
  407dad:	mov    ecx,0x1
  407db2:	mov    edx,0xa
  407db7:	mov    rdi,rbx
  407dba:	call   411be0 <flatcc_builder_create_vector@@Base>
  407dbf:	mov    ebp,eax
  407dc1:	test   eax,eax
  407dc3:	je     407dd9 <gen_monster@@Base+0x149>
  407dc5:	mov    esi,0x5
  407dca:	mov    rdi,rbx
  407dcd:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  407dd2:	test   rax,rax
  407dd5:	je     407dd9 <gen_monster@@Base+0x149>
  407dd7:	mov    DWORD PTR [rax],ebp
  407dd9:	mov    ecx,0x3fffffff
  407dde:	mov    edx,0x2
  407de3:	mov    esi,0x4
  407de8:	mov    rdi,rbx
  407deb:	call   410eb0 <flatcc_builder_start_vector@@Base>
  407df0:	mov    esi,0x1
  407df5:	mov    rdi,rbx
  407df8:	call   410800 <flatcc_builder_extend_vector@@Base>
  407dfd:	mov    ecx,0x10
  407e02:	mov    WORD PTR [rax],cx
  407e05:	mov    BYTE PTR [rax+0x2],0x20
  407e09:	mov    esi,0x2
  407e0e:	mov    rdi,rbx
  407e11:	call   410800 <flatcc_builder_extend_vector@@Base>
  407e16:	mov    esi,0x30
  407e1b:	mov    edi,0x50
  407e20:	mov    WORD PTR [rax],si
  407e23:	mov    WORD PTR [rax+0x4],di
  407e27:	mov    BYTE PTR [rax+0x2],0x40
  407e2b:	mov    BYTE PTR [rax+0x6],0x60
  407e2f:	mov    esi,0x1
  407e34:	mov    rdi,rbx
  407e37:	call   410800 <flatcc_builder_extend_vector@@Base>
  407e3c:	test   rax,rax
  407e3f:	je     407e4d <gen_monster@@Base+0x1bd>
  407e41:	mov    edx,0x70
  407e46:	mov    WORD PTR [rax],dx
  407e49:	mov    BYTE PTR [rax+0x2],0x80
  407e4d:	mov    esi,0x1
  407e52:	mov    rdi,rbx
  407e55:	mov    ebp,0x910190
  407e5a:	call   410800 <flatcc_builder_extend_vector@@Base>
  407e5f:	test   rax,rax
  407e62:	je     407e66 <gen_monster@@Base+0x1d6>
  407e64:	mov    DWORD PTR [rax],ebp
  407e66:	mov    esi,0x1
  407e6b:	mov    rdi,rbx
  407e6e:	call   410800 <flatcc_builder_extend_vector@@Base>
  407e73:	test   rax,rax
  407e76:	je     407e7a <gen_monster@@Base+0x1ea>
  407e78:	mov    DWORD PTR [rax],ebp
  407e7a:	mov    esi,0x1
  407e7f:	mov    rdi,rbx
  407e82:	call   410800 <flatcc_builder_extend_vector@@Base>
  407e87:	test   rax,rax
  407e8a:	je     407e8e <gen_monster@@Base+0x1fe>
  407e8c:	mov    DWORD PTR [rax],ebp
  407e8e:	mov    rdi,rbx
  407e91:	call   411e60 <flatcc_builder_vector_count@@Base>
  407e96:	cmp    rax,0x7
  407e9a:	jne    4085e4 <gen_monster@@Base+0x954>
  407ea0:	mov    rdi,rbx
  407ea3:	mov    esi,0x2
  407ea8:	call   410d10 <flatcc_builder_truncate_vector@@Base>
  407ead:	mov    rdi,rbx
  407eb0:	call   411e60 <flatcc_builder_vector_count@@Base>
  407eb5:	cmp    rax,0x5
  407eb9:	jne    4085c5 <gen_monster@@Base+0x935>
  407ebf:	mov    rdi,rbx
  407ec2:	call   411e70 <flatcc_builder_vector_edit@@Base>
  407ec7:	inc    WORD PTR [rax+0x10]
  407ecb:	mov    rdi,rbx
  407ece:	call   411d70 <flatcc_builder_end_vector@@Base>
  407ed3:	mov    ebp,eax
  407ed5:	test   eax,eax
  407ed7:	je     407eed <gen_monster@@Base+0x25d>
  407ed9:	mov    esi,0x9
  407ede:	mov    rdi,rbx
  407ee1:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  407ee6:	test   rax,rax
  407ee9:	je     407eed <gen_monster@@Base+0x25d>
  407eeb:	mov    DWORD PTR [rax],ebp
  407eed:	mov    esi,0x24
  407ef2:	mov    rdi,rbx
  407ef5:	call   4110d0 <flatcc_builder_start_table@@Base>
  407efa:	mov    edx,0x7
  407eff:	lea    rsi,[rip+0xe3e3]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  407f06:	mov    rdi,rbx
  407f09:	call   4126a0 <flatcc_builder_create_string@@Base>
  407f0e:	mov    ebp,eax
  407f10:	test   eax,eax
  407f12:	je     407f28 <gen_monster@@Base+0x298>
  407f14:	mov    esi,0x3
  407f19:	mov    rdi,rbx
  407f1c:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  407f21:	test   rax,rax
  407f24:	je     407f28 <gen_monster@@Base+0x298>
  407f26:	mov    DWORD PTR [rax],ebp
  407f28:	mov    edx,0x1
  407f2d:	lea    rsi,[rip+0x116fc]        # 419630 <_IO_stdin_used@@Base+0x3630>
  407f34:	mov    rdi,rbx
  407f37:	call   4119c0 <flatcc_builder_check_required@@Base>
  407f3c:	test   eax,eax
  407f3e:	je     408582 <gen_monster@@Base+0x8f2>
  407f44:	mov    rdi,rbx
  407f47:	call   411a50 <flatcc_builder_end_table@@Base>
  407f4c:	mov    rdi,rbx
  407f4f:	mov    ebp,eax
  407f51:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  407f56:	mov    esi,0x2
  407f5b:	mov    rdi,rbx
  407f5e:	call   4109e0 <flatcc_builder_extend_offset_vector@@Base>
  407f63:	mov    DWORD PTR [rax],ebp
  407f65:	mov    DWORD PTR [rax+0x4],ebp
  407f68:	mov    esi,0x24
  407f6d:	mov    rdi,rbx
  407f70:	call   4110d0 <flatcc_builder_start_table@@Base>
  407f75:	mov    edx,0x1e
  407f7a:	lea    rsi,[rip+0xe370]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  407f81:	mov    rdi,rbx
  407f84:	call   4127f0 <flatcc_builder_create_string_strn@@Base>
  407f89:	mov    r12d,eax
  407f8c:	test   eax,eax
  407f8e:	je     407fa5 <gen_monster@@Base+0x315>
  407f90:	mov    esi,0x3
  407f95:	mov    rdi,rbx
  407f98:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  407f9d:	test   rax,rax
  407fa0:	je     407fa5 <gen_monster@@Base+0x315>
  407fa2:	mov    DWORD PTR [rax],r12d
  407fa5:	mov    edx,0x1
  407faa:	lea    rsi,[rip+0x1167f]        # 419630 <_IO_stdin_used@@Base+0x3630>
  407fb1:	mov    rdi,rbx
  407fb4:	call   4119c0 <flatcc_builder_check_required@@Base>
  407fb9:	test   eax,eax
  407fbb:	je     408582 <gen_monster@@Base+0x8f2>
  407fc1:	mov    rdi,rbx
  407fc4:	call   411a50 <flatcc_builder_end_table@@Base>
  407fc9:	test   eax,eax
  407fcb:	je     404250 <posix_memalign@plt+0x10>
  407fd1:	mov    esi,eax
  407fd3:	mov    rdi,rbx
  407fd6:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  407fdb:	mov    r12d,DWORD PTR [rax]
  407fde:	mov    esi,0x3
  407fe3:	mov    rdi,rbx
  407fe6:	call   4109e0 <flatcc_builder_extend_offset_vector@@Base>
  407feb:	mov    DWORD PTR [rax],ebp
  407fed:	mov    DWORD PTR [rax+0x4],r12d
  407ff1:	mov    rdi,rbx
  407ff4:	mov    esi,0x1
  407ff9:	call   410da0 <flatcc_builder_truncate_offset_vector@@Base>
  407ffe:	mov    rdi,rbx
  408001:	call   4120c0 <flatcc_builder_offset_vector_count@@Base>
  408006:	cmp    rax,0x5
  40800a:	jne    4085a6 <gen_monster@@Base+0x916>
  408010:	mov    esi,0x24
  408015:	mov    rdi,rbx
  408018:	call   4110d0 <flatcc_builder_start_table@@Base>
  40801d:	mov    edx,0x8
  408022:	lea    rsi,[rip+0xe3b4]        # 4163dd <_IO_stdin_used@@Base+0x3dd>
  408029:	mov    rdi,rbx
  40802c:	call   4127f0 <flatcc_builder_create_string_strn@@Base>
  408031:	mov    r12d,eax
  408034:	test   eax,eax
  408036:	je     40804d <gen_monster@@Base+0x3bd>
  408038:	mov    esi,0x3
  40803d:	mov    rdi,rbx
  408040:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408045:	test   rax,rax
  408048:	je     40804d <gen_monster@@Base+0x3bd>
  40804a:	mov    DWORD PTR [rax],r12d
  40804d:	mov    edx,0x1
  408052:	lea    rsi,[rip+0x115d7]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408059:	mov    rdi,rbx
  40805c:	call   4119c0 <flatcc_builder_check_required@@Base>
  408061:	test   eax,eax
  408063:	je     408582 <gen_monster@@Base+0x8f2>
  408069:	mov    rdi,rbx
  40806c:	call   411a50 <flatcc_builder_end_table@@Base>
  408071:	test   eax,eax
  408073:	je     404250 <posix_memalign@plt+0x10>
  408079:	mov    rdi,rbx
  40807c:	mov    esi,eax
  40807e:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408083:	mov    eax,DWORD PTR [rax]
  408085:	mov    rdi,rbx
  408088:	mov    DWORD PTR [rsp+0x4],eax
  40808c:	call   4120c0 <flatcc_builder_offset_vector_count@@Base>
  408091:	cmp    rax,0x6
  408095:	jne    408587 <gen_monster@@Base+0x8f7>
  40809b:	mov    rdi,rbx
  40809e:	call   4120b0 <flatcc_builder_offset_vector_edit@@Base>
  4080a3:	mov    edx,DWORD PTR [rax+0x14]
  4080a6:	mov    ecx,DWORD PTR [rax+0x8]
  4080a9:	mov    DWORD PTR [rax+0x14],ebp
  4080ac:	mov    DWORD PTR [rsp+0x8],ecx
  4080b0:	mov    DWORD PTR [rax],edx
  4080b2:	lea    rsi,[rsp+0x4]
  4080b7:	mov    edx,0x2
  4080bc:	mov    rdi,rbx
  4080bf:	call   410ad0 <flatcc_builder_append_offset_vector@@Base>
  4080c4:	mov    rdi,rbx
  4080c7:	call   411e90 <flatcc_builder_end_offset_vector@@Base>
  4080cc:	mov    r12d,eax
  4080cf:	test   eax,eax
  4080d1:	je     4080e8 <gen_monster@@Base+0x458>
  4080d3:	mov    esi,0xb
  4080d8:	mov    rdi,rbx
  4080db:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4080e0:	test   rax,rax
  4080e3:	je     4080e8 <gen_monster@@Base+0x458>
  4080e5:	mov    DWORD PTR [rax],r12d
  4080e8:	lea    rsi,[rip+0xe211]        # 416300 <_IO_stdin_used@@Base+0x300>
  4080ef:	mov    rdi,rbx
  4080f2:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  4080f7:	mov    edx,0x2
  4080fc:	lea    rsi,[rip+0x10c5d]        # 418d60 <_IO_stdin_used@@Base+0x2d60>
  408103:	mov    rdi,rbx
  408106:	mov    DWORD PTR [rsp+0xc],eax
  40810a:	call   4126a0 <flatcc_builder_create_string@@Base>
  40810f:	lea    rsi,[rip+0xe222]        # 416338 <_IO_stdin_used@@Base+0x338>
  408116:	mov    rdi,rbx
  408119:	mov    DWORD PTR [rsp+0x10],eax
  40811d:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408122:	lea    rsi,[rsp+0xc]
  408127:	mov    edx,0x3
  40812c:	mov    rdi,rbx
  40812f:	mov    DWORD PTR [rsp+0x14],eax
  408133:	call   411f70 <flatcc_builder_create_offset_vector@@Base>
  408138:	mov    r12d,eax
  40813b:	test   eax,eax
  40813d:	je     408154 <gen_monster@@Base+0x4c4>
  40813f:	mov    esi,0xa
  408144:	mov    rdi,rbx
  408147:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40814c:	test   rax,rax
  40814f:	je     408154 <gen_monster@@Base+0x4c4>
  408151:	mov    DWORD PTR [rax],r12d
  408154:	mov    ecx,0xffffffff
  408159:	lea    r12,[rsp+0x1a]
  40815e:	mov    edx,0x1
  408163:	mov    esi,0x1
  408168:	mov    rdi,rbx
  40816b:	call   410eb0 <flatcc_builder_start_vector@@Base>
  408170:	mov    rsi,r12
  408173:	mov    edx,0x1
  408178:	mov    rdi,rbx
  40817b:	call   410930 <flatcc_builder_append_vector@@Base>
  408180:	lea    rsi,[r12+0x1]
  408185:	mov    edx,0x3
  40818a:	mov    rdi,rbx
  40818d:	call   410930 <flatcc_builder_append_vector@@Base>
  408192:	mov    rdi,rbx
  408195:	call   411d70 <flatcc_builder_end_vector@@Base>
  40819a:	mov    r12d,eax
  40819d:	test   eax,eax
  40819f:	je     4081b6 <gen_monster@@Base+0x526>
  4081a1:	mov    esi,0x18
  4081a6:	mov    rdi,rbx
  4081a9:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4081ae:	test   rax,rax
  4081b1:	je     4081b6 <gen_monster@@Base+0x526>
  4081b3:	mov    DWORD PTR [rax],r12d
  4081b6:	test   ebp,ebp
  4081b8:	je     408530 <gen_monster@@Base+0x8a0>
  4081be:	mov    ecx,0x1
  4081c3:	mov    edx,0x1
  4081c8:	mov    esi,0x7
  4081cd:	mov    rdi,rbx
  4081d0:	call   412950 <flatcc_builder_table_add@@Base>
  4081d5:	mov    r12,rax
  4081d8:	test   rax,rax
  4081db:	je     4081f6 <gen_monster@@Base+0x566>
  4081dd:	mov    esi,0x8
  4081e2:	mov    rdi,rbx
  4081e5:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4081ea:	test   rax,rax
  4081ed:	je     4081f6 <gen_monster@@Base+0x566>
  4081ef:	mov    BYTE PTR [r12],0x1
  4081f4:	mov    DWORD PTR [rax],ebp
  4081f6:	mov    esi,0x24
  4081fb:	mov    rdi,rbx
  4081fe:	call   4110d0 <flatcc_builder_start_table@@Base>
  408203:	lea    rsi,[rip+0xe168]        # 416372 <_IO_stdin_used@@Base+0x372>
  40820a:	mov    rdi,rbx
  40820d:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408212:	mov    r12d,eax
  408215:	test   eax,eax
  408217:	je     40822e <gen_monster@@Base+0x59e>
  408219:	mov    esi,0x3
  40821e:	mov    rdi,rbx
  408221:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408226:	test   rax,rax
  408229:	je     40822e <gen_monster@@Base+0x59e>
  40822b:	mov    DWORD PTR [rax],r12d
  40822e:	mov    rdi,rbx
  408231:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  408236:	mov    esi,0x24
  40823b:	mov    rdi,rbx
  40823e:	call   4110d0 <flatcc_builder_start_table@@Base>
  408243:	mov    ecx,0x1
  408248:	mov    edx,0x1
  40824d:	mov    esi,0x7
  408252:	mov    rdi,rbx
  408255:	call   412950 <flatcc_builder_table_add@@Base>
  40825a:	mov    r12,rax
  40825d:	test   rax,rax
  408260:	je     40827b <gen_monster@@Base+0x5eb>
  408262:	mov    esi,0x8
  408267:	mov    rdi,rbx
  40826a:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40826f:	test   rax,rax
  408272:	je     40827b <gen_monster@@Base+0x5eb>
  408274:	mov    BYTE PTR [r12],0x1
  408279:	mov    DWORD PTR [rax],ebp
  40827b:	lea    rsi,[rip+0xe177]        # 4163f9 <_IO_stdin_used@@Base+0x3f9>
  408282:	mov    rdi,rbx
  408285:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40828a:	mov    r12d,eax
  40828d:	test   eax,eax
  40828f:	je     4082a6 <gen_monster@@Base+0x616>
  408291:	mov    esi,0x3
  408296:	mov    rdi,rbx
  408299:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40829e:	test   rax,rax
  4082a1:	je     4082a6 <gen_monster@@Base+0x616>
  4082a3:	mov    DWORD PTR [rax],r12d
  4082a6:	mov    edx,0x1
  4082ab:	lea    rsi,[rip+0x1137e]        # 419630 <_IO_stdin_used@@Base+0x3630>
  4082b2:	mov    rdi,rbx
  4082b5:	call   4119c0 <flatcc_builder_check_required@@Base>
  4082ba:	test   eax,eax
  4082bc:	je     408582 <gen_monster@@Base+0x8f2>
  4082c2:	mov    rdi,rbx
  4082c5:	call   411a50 <flatcc_builder_end_table@@Base>
  4082ca:	test   eax,eax
  4082cc:	je     4082d8 <gen_monster@@Base+0x648>
  4082ce:	mov    esi,eax
  4082d0:	mov    rdi,rbx
  4082d3:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  4082d8:	mov    esi,0x24
  4082dd:	mov    rdi,rbx
  4082e0:	call   4110d0 <flatcc_builder_start_table@@Base>
  4082e5:	test   ebp,ebp
  4082e7:	je     408321 <gen_monster@@Base+0x691>
  4082e9:	mov    ecx,0x1
  4082ee:	mov    edx,0x1
  4082f3:	mov    esi,0x7
  4082f8:	mov    rdi,rbx
  4082fb:	call   412950 <flatcc_builder_table_add@@Base>
  408300:	mov    r12,rax
  408303:	test   rax,rax
  408306:	je     408321 <gen_monster@@Base+0x691>
  408308:	mov    esi,0x8
  40830d:	mov    rdi,rbx
  408310:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408315:	test   rax,rax
  408318:	je     408321 <gen_monster@@Base+0x691>
  40831a:	mov    BYTE PTR [r12],0x1
  40831f:	mov    DWORD PTR [rax],ebp
  408321:	lea    rsi,[rip+0xe0d1]        # 4163f9 <_IO_stdin_used@@Base+0x3f9>
  408328:	mov    rdi,rbx
  40832b:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408330:	mov    r12d,eax
  408333:	test   eax,eax
  408335:	je     40834c <gen_monster@@Base+0x6bc>
  408337:	mov    esi,0x3
  40833c:	mov    rdi,rbx
  40833f:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408344:	test   rax,rax
  408347:	je     40834c <gen_monster@@Base+0x6bc>
  408349:	mov    DWORD PTR [rax],r12d
  40834c:	mov    edx,0x1
  408351:	lea    rsi,[rip+0x112d8]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408358:	mov    rdi,rbx
  40835b:	call   4119c0 <flatcc_builder_check_required@@Base>
  408360:	test   eax,eax
  408362:	je     408582 <gen_monster@@Base+0x8f2>
  408368:	mov    rdi,rbx
  40836b:	call   411a50 <flatcc_builder_end_table@@Base>
  408370:	test   eax,eax
  408372:	je     40837e <gen_monster@@Base+0x6ee>
  408374:	mov    esi,eax
  408376:	mov    rdi,rbx
  408379:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40837e:	mov    esi,0x24
  408383:	mov    rdi,rbx
  408386:	call   4110d0 <flatcc_builder_start_table@@Base>
  40838b:	mov    esi,0x8
  408390:	mov    rdi,rbx
  408393:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408398:	test   rax,rax
  40839b:	je     40839f <gen_monster@@Base+0x70f>
  40839d:	mov    DWORD PTR [rax],ebp
  40839f:	lea    rsi,[rip+0xe053]        # 4163f9 <_IO_stdin_used@@Base+0x3f9>
  4083a6:	mov    rdi,rbx
  4083a9:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  4083ae:	mov    ebp,eax
  4083b0:	test   eax,eax
  4083b2:	je     4083c8 <gen_monster@@Base+0x738>
  4083b4:	mov    esi,0x3
  4083b9:	mov    rdi,rbx
  4083bc:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4083c1:	test   rax,rax
  4083c4:	je     4083c8 <gen_monster@@Base+0x738>
  4083c6:	mov    DWORD PTR [rax],ebp
  4083c8:	mov    ecx,0x1
  4083cd:	mov    edx,0x1
  4083d2:	mov    esi,0x7
  4083d7:	mov    rdi,rbx
  4083da:	call   412950 <flatcc_builder_table_add@@Base>
  4083df:	test   rax,rax
  4083e2:	je     4083e7 <gen_monster@@Base+0x757>
  4083e4:	mov    BYTE PTR [rax],0x1
  4083e7:	mov    edx,0x1
  4083ec:	lea    rsi,[rip+0x1123d]        # 419630 <_IO_stdin_used@@Base+0x3630>
  4083f3:	mov    rdi,rbx
  4083f6:	call   4119c0 <flatcc_builder_check_required@@Base>
  4083fb:	test   eax,eax
  4083fd:	je     408582 <gen_monster@@Base+0x8f2>
  408403:	mov    rdi,rbx
  408406:	call   411a50 <flatcc_builder_end_table@@Base>
  40840b:	test   eax,eax
  40840d:	je     408419 <gen_monster@@Base+0x789>
  40840f:	mov    esi,eax
  408411:	mov    rdi,rbx
  408414:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408419:	mov    rdi,rbx
  40841c:	call   411e90 <flatcc_builder_end_offset_vector@@Base>
  408421:	mov    ebp,eax
  408423:	test   eax,eax
  408425:	je     40843b <gen_monster@@Base+0x7ab>
  408427:	mov    esi,0xb
  40842c:	mov    rdi,rbx
  40842f:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408434:	test   rax,rax
  408437:	je     40843b <gen_monster@@Base+0x7ab>
  408439:	mov    DWORD PTR [rax],ebp
  40843b:	mov    edx,0x1
  408440:	lea    rsi,[rip+0x111e9]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408447:	mov    rdi,rbx
  40844a:	call   4119c0 <flatcc_builder_check_required@@Base>
  40844f:	test   eax,eax
  408451:	je     408582 <gen_monster@@Base+0x8f2>
  408457:	mov    rdi,rbx
  40845a:	call   411a50 <flatcc_builder_end_table@@Base>
  40845f:	mov    ebp,eax
  408461:	test   eax,eax
  408463:	je     408479 <gen_monster@@Base+0x7e9>
  408465:	mov    esi,0xc
  40846a:	mov    rdi,rbx
  40846d:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408472:	test   rax,rax
  408475:	je     408479 <gen_monster@@Base+0x7e9>
  408477:	mov    DWORD PTR [rax],ebp
  408479:	mov    ecx,0x1
  40847e:	mov    edx,0x1
  408483:	mov    esi,0xf
  408488:	mov    rdi,rbx
  40848b:	call   412950 <flatcc_builder_table_add@@Base>
  408490:	test   rax,rax
  408493:	je     408498 <gen_monster@@Base+0x808>
  408495:	mov    BYTE PTR [rax],0x0
  408498:	mov    esi,0x3
  40849d:	mov    rdi,rbx
  4084a0:	call   4110d0 <flatcc_builder_start_table@@Base>
  4084a5:	xor    edx,edx
  4084a7:	lea    rsi,[rip+0x11188]        # 419636 <_IO_stdin_used@@Base+0x3636>
  4084ae:	mov    rdi,rbx
  4084b1:	call   4119c0 <flatcc_builder_check_required@@Base>
  4084b6:	test   eax,eax
  4084b8:	je     408608 <gen_monster@@Base+0x978>
  4084be:	mov    rdi,rbx
  4084c1:	call   411a50 <flatcc_builder_end_table@@Base>
  4084c6:	mov    ebp,eax
  4084c8:	test   eax,eax
  4084ca:	je     4084e0 <gen_monster@@Base+0x850>
  4084cc:	mov    esi,0xe
  4084d1:	mov    rdi,rbx
  4084d4:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  4084d9:	test   rax,rax
  4084dc:	je     4084e0 <gen_monster@@Base+0x850>
  4084de:	mov    DWORD PTR [rax],ebp
  4084e0:	mov    edx,0x1
  4084e5:	lea    rsi,[rip+0x11144]        # 419630 <_IO_stdin_used@@Base+0x3630>
  4084ec:	mov    rdi,rbx
  4084ef:	call   4119c0 <flatcc_builder_check_required@@Base>
  4084f4:	test   eax,eax
  4084f6:	je     408582 <gen_monster@@Base+0x8f2>
  4084fc:	mov    rdi,rbx
  4084ff:	call   411a50 <flatcc_builder_end_table@@Base>
  408504:	mov    esi,eax
  408506:	mov    rdi,rbx
  408509:	call   410510 <flatcc_builder_end_buffer@@Base>
  40850e:	xor    eax,eax
  408510:	mov    rcx,QWORD PTR [rsp+0x28]
  408515:	xor    rcx,QWORD PTR fs:0x28
  40851e:	jne    408603 <gen_monster@@Base+0x973>
  408524:	add    rsp,0x30
  408528:	pop    rbx
  408529:	pop    rbp
  40852a:	pop    r12
  40852c:	ret    
  40852d:	nop    DWORD PTR [rax]
  408530:	mov    esi,0x24
  408535:	mov    rdi,rbx
  408538:	call   4110d0 <flatcc_builder_start_table@@Base>
  40853d:	lea    rsi,[rip+0xde2e]        # 416372 <_IO_stdin_used@@Base+0x372>
  408544:	mov    rdi,rbx
  408547:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40854c:	mov    r12d,eax
  40854f:	test   eax,eax
  408551:	je     408568 <gen_monster@@Base+0x8d8>
  408553:	mov    esi,0x3
  408558:	mov    rdi,rbx
  40855b:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408560:	test   rax,rax
  408563:	je     408568 <gen_monster@@Base+0x8d8>
  408565:	mov    DWORD PTR [rax],r12d
  408568:	mov    rdi,rbx
  40856b:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  408570:	mov    esi,0x24
  408575:	mov    rdi,rbx
  408578:	call   4110d0 <flatcc_builder_start_table@@Base>
  40857d:	jmp    40827b <gen_monster@@Base+0x5eb>
  408582:	call   404e80 <_start@@Base+0xa30>
  408587:	lea    rcx,[rip+0x10c5a]        # 4191e8 <_IO_stdin_used@@Base+0x31e8>
  40858e:	mov    edx,0x3a1
  408593:	lea    rsi,[rip+0xee6e]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40859a:	lea    rdi,[rip+0xf26f]        # 417810 <_IO_stdin_used@@Base+0x1810>
  4085a1:	call   4041a0 <__assert_fail@plt>
  4085a6:	lea    rcx,[rip+0x10c3b]        # 4191e8 <_IO_stdin_used@@Base+0x31e8>
  4085ad:	mov    edx,0x39b
  4085b2:	lea    rsi,[rip+0xee4f]        # 417408 <_IO_stdin_used@@Base+0x1408>
  4085b9:	lea    rdi,[rip+0xf218]        # 4177d8 <_IO_stdin_used@@Base+0x17d8>
  4085c0:	call   4041a0 <__assert_fail@plt>
  4085c5:	lea    rcx,[rip+0x10c1c]        # 4191e8 <_IO_stdin_used@@Base+0x31e8>
  4085cc:	mov    edx,0x373
  4085d1:	lea    rsi,[rip+0xee30]        # 417408 <_IO_stdin_used@@Base+0x1408>
  4085d8:	lea    rdi,[rip+0xf1d1]        # 4177b0 <_IO_stdin_used@@Base+0x17b0>
  4085df:	call   4041a0 <__assert_fail@plt>
  4085e4:	lea    rcx,[rip+0x10bfd]        # 4191e8 <_IO_stdin_used@@Base+0x31e8>
  4085eb:	mov    edx,0x371
  4085f0:	lea    rsi,[rip+0xee11]        # 417408 <_IO_stdin_used@@Base+0x1408>
  4085f7:	lea    rdi,[rip+0xf18a]        # 417788 <_IO_stdin_used@@Base+0x1788>
  4085fe:	call   4041a0 <__assert_fail@plt>
  408603:	call   404180 <__stack_chk_fail@plt>
  408608:	call   404eb0 <_start@@Base+0xa60>
  40860d:	nop    DWORD PTR [rax]

0000000000408610 <test_monster@@Base>:
  408610:	endbr64 
  408614:	push   rbp
  408615:	xor    esi,esi
  408617:	push   rbx
  408618:	mov    rbx,rdi
  40861b:	sub    rsp,0x18
  40861f:	mov    rax,QWORD PTR fs:0x28
  408628:	mov    QWORD PTR [rsp+0x8],rax
  40862d:	xor    eax,eax
  40862f:	call   407c90 <gen_monster@@Base>
  408634:	mov    rdi,rbx
  408637:	mov    rsi,rsp
  40863a:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40863f:	mov    rbx,rax
  408642:	mov    rax,QWORD PTR [rip+0x169af]        # 41eff8 <stderr@GLIBC_2.2.5>
  408649:	mov    rdx,QWORD PTR [rsp]
  40864d:	mov    rcx,QWORD PTR [rax]
  408650:	mov    rsi,rbx
  408653:	lea    rdi,[rip+0xdb3f]        # 416199 <_IO_stdin_used@@Base+0x199>
  40865a:	call   404590 <_start@@Base+0x140>
  40865f:	mov    rsi,QWORD PTR [rsp]
  408663:	lea    rcx,[rip+0xffffffffffffcc56]        # 4052c0 <_start@@Base+0xe70>
  40866a:	lea    rdx,[rip+0xdaca]        # 41613b <_IO_stdin_used@@Base+0x13b>
  408671:	mov    rdi,rbx
  408674:	call   414860 <flatcc_verify_table_as_root@@Base>
  408679:	test   eax,eax
  40867b:	jne    4086b0 <test_monster@@Base+0xa0>
  40867d:	mov    rdi,rbx
  408680:	call   406fc0 <verify_monster@@Base>
  408685:	mov    rdi,rbx
  408688:	mov    ebp,eax
  40868a:	call   413290 <flatcc_builder_aligned_free@@Base>
  40868f:	mov    rcx,QWORD PTR [rsp+0x8]
  408694:	xor    rcx,QWORD PTR fs:0x28
  40869d:	mov    eax,ebp
  40869f:	jne    4086d4 <test_monster@@Base+0xc4>
  4086a1:	add    rsp,0x18
  4086a5:	pop    rbx
  4086a6:	pop    rbp
  4086a7:	ret    
  4086a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4086b0:	mov    edi,eax
  4086b2:	call   413990 <flatcc_verify_error_string@@Base>
  4086b7:	mov    rdx,rax
  4086ba:	lea    rsi,[rip+0xf187]        # 417848 <_IO_stdin_used@@Base+0x1848>
  4086c1:	mov    edi,0x1
  4086c6:	xor    eax,eax
  4086c8:	call   404220 <__printf_chk@plt>
  4086cd:	mov    ebp,0xffffffff
  4086d2:	jmp    40868f <test_monster@@Base+0x7f>
  4086d4:	call   404180 <__stack_chk_fail@plt>
  4086d9:	nop    DWORD PTR [rax+0x0]

00000000004086e0 <test_monster_with_size@@Base>:
  4086e0:	endbr64 
  4086e4:	push   rbp
  4086e5:	mov    esi,0x1
  4086ea:	push   rbx
  4086eb:	mov    rbx,rdi
  4086ee:	sub    rsp,0x18
  4086f2:	mov    rax,QWORD PTR fs:0x28
  4086fb:	mov    QWORD PTR [rsp+0x8],rax
  408700:	xor    eax,eax
  408702:	call   407c90 <gen_monster@@Base>
  408707:	mov    rdi,rbx
  40870a:	mov    rsi,rsp
  40870d:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  408712:	mov    rbx,rax
  408715:	mov    rax,QWORD PTR [rip+0x168dc]        # 41eff8 <stderr@GLIBC_2.2.5>
  40871c:	mov    rdx,QWORD PTR [rsp]
  408720:	mov    rcx,QWORD PTR [rax]
  408723:	mov    rsi,rbx
  408726:	lea    rdi,[rip+0xdcd5]        # 416402 <_IO_stdin_used@@Base+0x402>
  40872d:	call   404590 <_start@@Base+0x140>
  408732:	test   bl,0xf
  408735:	jne    4087e4 <test_monster_with_size@@Base+0x104>
  40873b:	mov    rcx,QWORD PTR [rsp]
  40873f:	mov    eax,DWORD PTR [rbx]
  408741:	lea    rsi,[rcx-0x4]
  408745:	mov    rdx,rax
  408748:	lea    rbp,[rbx+0x4]
  40874c:	cmp    rsi,rax
  40874f:	jne    4087a0 <test_monster_with_size@@Base+0xc0>
  408751:	lea    rcx,[rip+0xffffffffffffcb68]        # 4052c0 <_start@@Base+0xe70>
  408758:	lea    rdx,[rip+0xd9dc]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40875f:	mov    rdi,rbp
  408762:	call   414860 <flatcc_verify_table_as_root@@Base>
  408767:	test   eax,eax
  408769:	jne    4087c0 <test_monster_with_size@@Base+0xe0>
  40876b:	mov    rdi,rbp
  40876e:	call   406fc0 <verify_monster@@Base>
  408773:	mov    rdi,rbx
  408776:	mov    ebp,eax
  408778:	call   413290 <flatcc_builder_aligned_free@@Base>
  40877d:	mov    rcx,QWORD PTR [rsp+0x8]
  408782:	xor    rcx,QWORD PTR fs:0x28
  40878b:	mov    eax,ebp
  40878d:	jne    408816 <test_monster_with_size@@Base+0x136>
  408793:	add    rsp,0x18
  408797:	pop    rbx
  408798:	pop    rbp
  408799:	ret    
  40879a:	nop    WORD PTR [rax+rax*1+0x0]
  4087a0:	mov    ecx,esi
  4087a2:	mov    edi,0x1
  4087a7:	lea    rsi,[rip+0xf122]        # 4178d0 <_IO_stdin_used@@Base+0x18d0>
  4087ae:	xor    eax,eax
  4087b0:	call   404220 <__printf_chk@plt>
  4087b5:	mov    ebp,0xffffffff
  4087ba:	jmp    40877d <test_monster_with_size@@Base+0x9d>
  4087bc:	nop    DWORD PTR [rax+0x0]
  4087c0:	mov    edi,eax
  4087c2:	call   413990 <flatcc_verify_error_string@@Base>
  4087c7:	mov    rdx,rax
  4087ca:	lea    rsi,[rip+0xf137]        # 417908 <_IO_stdin_used@@Base+0x1908>
  4087d1:	mov    edi,0x1
  4087d6:	xor    eax,eax
  4087d8:	call   404220 <__printf_chk@plt>
  4087dd:	mov    ebp,0xffffffff
  4087e2:	jmp    40877d <test_monster_with_size@@Base+0x9d>
  4087e4:	lea    rsi,[rip+0xf08d]        # 417878 <_IO_stdin_used@@Base+0x1878>
  4087eb:	mov    edi,0x1
  4087f0:	xor    eax,eax
  4087f2:	call   404220 <__printf_chk@plt>
  4087f7:	mov    edx,ebx
  4087f9:	lea    rsi,[rip+0xdc1a]        # 41641a <_IO_stdin_used@@Base+0x41a>
  408800:	mov    edi,0x1
  408805:	xor    eax,eax
  408807:	call   404220 <__printf_chk@plt>
  40880c:	mov    ebp,0xffffffff
  408811:	jmp    40877d <test_monster_with_size@@Base+0x9d>
  408816:	call   404180 <__stack_chk_fail@plt>
  40881b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408820 <test_string@@Base>:
  408820:	endbr64 
  408824:	push   rbp
  408825:	push   rbx
  408826:	mov    rbx,rdi
  408829:	sub    rsp,0x8
  40882d:	call   40fc30 <flatcc_builder_reset@@Base>
  408832:	xor    ecx,ecx
  408834:	xor    edx,edx
  408836:	lea    rsi,[rip+0xd8fe]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40883d:	mov    rdi,rbx
  408840:	call   410430 <flatcc_builder_start_buffer@@Base>
  408845:	test   eax,eax
  408847:	jne    408856 <test_string@@Base+0x36>
  408849:	mov    esi,0x24
  40884e:	mov    rdi,rbx
  408851:	call   4110d0 <flatcc_builder_start_table@@Base>
  408856:	mov    rdi,rbx
  408859:	call   410f90 <flatcc_builder_start_string@@Base>
  40885e:	mov    esi,0x3
  408863:	mov    rdi,rbx
  408866:	call   410b80 <flatcc_builder_extend_string@@Base>
  40886b:	mov    edx,0x3231
  408870:	mov    WORD PTR [rax],dx
  408873:	mov    BYTE PTR [rax+0x2],0x33
  408877:	mov    rdi,rbx
  40887a:	lea    rsi,[rip+0xddea]        # 41666b <_IO_stdin_used@@Base+0x66b>
  408881:	call   410ca0 <flatcc_builder_append_string_str@@Base>
  408886:	mov    rdi,rbx
  408889:	call   412940 <flatcc_builder_string_len@@Base>
  40888e:	cmp    rax,0x4
  408892:	jne    408a65 <test_string@@Base+0x245>
  408898:	mov    rdi,rbx
  40889b:	mov    edx,0x1e
  4088a0:	lea    rsi,[rip+0xdb87]        # 41642e <_IO_stdin_used@@Base+0x42e>
  4088a7:	call   410cd0 <flatcc_builder_append_string_strn@@Base>
  4088ac:	mov    rdi,rbx
  4088af:	call   412940 <flatcc_builder_string_len@@Base>
  4088b4:	cmp    rax,0x8
  4088b8:	jne    408a46 <test_string@@Base+0x226>
  4088be:	mov    rdi,rbx
  4088c1:	mov    edx,0x2
  4088c6:	lea    rsi,[rip+0xdb66]        # 416433 <_IO_stdin_used@@Base+0x433>
  4088cd:	call   410c00 <flatcc_builder_append_string@@Base>
  4088d2:	mov    rdi,rbx
  4088d5:	call   412940 <flatcc_builder_string_len@@Base>
  4088da:	cmp    rax,0xa
  4088de:	jne    408a84 <test_string@@Base+0x264>
  4088e4:	mov    rdi,rbx
  4088e7:	mov    esi,0x3
  4088ec:	call   410e20 <flatcc_builder_truncate_string@@Base>
  4088f1:	mov    rdi,rbx
  4088f4:	call   412940 <flatcc_builder_string_len@@Base>
  4088f9:	cmp    rax,0x7
  4088fd:	jne    408a03 <test_string@@Base+0x1e3>
  408903:	mov    rdi,rbx
  408906:	call   412930 <flatcc_builder_string_edit@@Base>
  40890b:	mov    BYTE PTR [rax+0x4],0x2e
  40890f:	mov    rdi,rbx
  408912:	call   412830 <flatcc_builder_end_string@@Base>
  408917:	mov    ebp,eax
  408919:	test   eax,eax
  40891b:	je     408931 <test_string@@Base+0x111>
  40891d:	mov    esi,0x3
  408922:	mov    rdi,rbx
  408925:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40892a:	test   rax,rax
  40892d:	je     408931 <test_string@@Base+0x111>
  40892f:	mov    DWORD PTR [rax],ebp
  408931:	mov    edx,0x1
  408936:	lea    rsi,[rip+0x10cf3]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40893d:	mov    rdi,rbx
  408940:	call   4119c0 <flatcc_builder_check_required@@Base>
  408945:	test   eax,eax
  408947:	je     408a41 <test_string@@Base+0x221>
  40894d:	mov    rdi,rbx
  408950:	call   411a50 <flatcc_builder_end_table@@Base>
  408955:	mov    esi,eax
  408957:	mov    rdi,rbx
  40895a:	call   410510 <flatcc_builder_end_buffer@@Base>
  40895f:	xor    esi,esi
  408961:	mov    rdi,rbx
  408964:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  408969:	test   rax,rax
  40896c:	je     408a22 <test_string@@Base+0x202>
  408972:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  408979:	je     408980 <test_string@@Base+0x160>
  40897b:	call   404b80 <_start@@Base+0x730>
  408980:	mov    edx,DWORD PTR [rax]
  408982:	add    rax,rdx
  408985:	je     40897b <test_string@@Base+0x15b>
  408987:	movsxd rdx,DWORD PTR [rax]
  40898a:	mov    rcx,rax
  40898d:	sub    rcx,rdx
  408990:	cmp    WORD PTR [rcx],0xb
  408994:	jbe    4089e4 <test_string@@Base+0x1c4>
  408996:	movzx  edx,WORD PTR [rcx+0xa]
  40899a:	test   dx,dx
  40899d:	je     4089e4 <test_string@@Base+0x1c4>
  40899f:	add    rax,rdx
  4089a2:	mov    edx,DWORD PTR [rax]
  4089a4:	mov    ecx,0x8
  4089a9:	lea    rsi,[rax+rdx*1+0x4]
  4089ae:	lea    rdi,[rip+0xda81]        # 416436 <_IO_stdin_used@@Base+0x436>
  4089b5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4089b7:	seta   al
  4089ba:	sbb    al,0x0
  4089bc:	movsx  eax,al
  4089bf:	test   eax,eax
  4089c1:	jne    4089ca <test_string@@Base+0x1aa>
  4089c3:	add    rsp,0x8
  4089c7:	pop    rbx
  4089c8:	pop    rbp
  4089c9:	ret    
  4089ca:	lea    rsi,[rip+0xda6d]        # 41643e <_IO_stdin_used@@Base+0x43e>
  4089d1:	mov    edi,0x1
  4089d6:	xor    eax,eax
  4089d8:	call   404220 <__printf_chk@plt>
  4089dd:	mov    eax,0xffffffff
  4089e2:	jmp    4089c3 <test_string@@Base+0x1a3>
  4089e4:	lea    rcx,[rip+0x10885]        # 419270 <_IO_stdin_used@@Base+0x3270>
  4089eb:	mov    edx,0x2bb
  4089f0:	lea    rsi,[rip+0xe041]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4089f7:	lea    rdi,[rip+0xe1a2]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  4089fe:	call   4041a0 <__assert_fail@plt>
  408a03:	lea    rcx,[rip+0x107b6]        # 4191c0 <_IO_stdin_used@@Base+0x31c0>
  408a0a:	mov    edx,0x43e
  408a0f:	lea    rsi,[rip+0xe9f2]        # 417408 <_IO_stdin_used@@Base+0x1408>
  408a16:	lea    rdi,[rip+0xefa3]        # 4179c0 <_IO_stdin_used@@Base+0x19c0>
  408a1d:	call   4041a0 <__assert_fail@plt>
  408a22:	lea    rcx,[rip+0x10797]        # 4191c0 <_IO_stdin_used@@Base+0x31c0>
  408a29:	mov    edx,0x445
  408a2e:	lea    rsi,[rip+0xe9d3]        # 417408 <_IO_stdin_used@@Base+0x1408>
  408a35:	lea    rdi,[rip+0xdc1e]        # 41665a <_IO_stdin_used@@Base+0x65a>
  408a3c:	call   4041a0 <__assert_fail@plt>
  408a41:	call   404e80 <_start@@Base+0xa30>
  408a46:	lea    rcx,[rip+0x10773]        # 4191c0 <_IO_stdin_used@@Base+0x31c0>
  408a4d:	mov    edx,0x43a
  408a52:	lea    rsi,[rip+0xe9af]        # 417408 <_IO_stdin_used@@Base+0x1408>
  408a59:	lea    rdi,[rip+0xef10]        # 417970 <_IO_stdin_used@@Base+0x1970>
  408a60:	call   4041a0 <__assert_fail@plt>
  408a65:	lea    rcx,[rip+0x10754]        # 4191c0 <_IO_stdin_used@@Base+0x31c0>
  408a6c:	mov    edx,0x438
  408a71:	lea    rsi,[rip+0xe990]        # 417408 <_IO_stdin_used@@Base+0x1408>
  408a78:	lea    rdi,[rip+0xeec9]        # 417948 <_IO_stdin_used@@Base+0x1948>
  408a7f:	call   4041a0 <__assert_fail@plt>
  408a84:	lea    rcx,[rip+0x10735]        # 4191c0 <_IO_stdin_used@@Base+0x31c0>
  408a8b:	mov    edx,0x43c
  408a90:	lea    rsi,[rip+0xe971]        # 417408 <_IO_stdin_used@@Base+0x1408>
  408a97:	lea    rdi,[rip+0xeefa]        # 417998 <_IO_stdin_used@@Base+0x1998>
  408a9e:	call   4041a0 <__assert_fail@plt>
  408aa3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408aae:	xchg   ax,ax

0000000000408ab0 <test_sort_find@@Base>:
  408ab0:	endbr64 
  408ab4:	push   r15
  408ab6:	push   r14
  408ab8:	push   r13
  408aba:	push   r12
  408abc:	push   rbp
  408abd:	push   rbx
  408abe:	mov    rbx,rdi
  408ac1:	sub    rsp,0x58
  408ac5:	mov    rax,QWORD PTR fs:0x28
  408ace:	mov    QWORD PTR [rsp+0x48],rax
  408ad3:	xor    eax,eax
  408ad5:	call   40fc30 <flatcc_builder_reset@@Base>
  408ada:	xor    ecx,ecx
  408adc:	xor    edx,edx
  408ade:	lea    rsi,[rip+0xd656]        # 41613b <_IO_stdin_used@@Base+0x13b>
  408ae5:	mov    rdi,rbx
  408ae8:	call   410430 <flatcc_builder_start_buffer@@Base>
  408aed:	test   eax,eax
  408aef:	jne    408afe <test_sort_find@@Base+0x4e>
  408af1:	mov    esi,0x24
  408af6:	mov    rdi,rbx
  408af9:	call   4110d0 <flatcc_builder_start_table@@Base>
  408afe:	lea    rsi,[rip+0xd64e]        # 416153 <_IO_stdin_used@@Base+0x153>
  408b05:	mov    rdi,rbx
  408b08:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408b0d:	mov    ebp,eax
  408b0f:	test   eax,eax
  408b11:	je     408b27 <test_sort_find@@Base+0x77>
  408b13:	mov    esi,0x3
  408b18:	mov    rdi,rbx
  408b1b:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408b20:	test   rax,rax
  408b23:	je     408b27 <test_sort_find@@Base+0x77>
  408b25:	mov    DWORD PTR [rax],ebp
  408b27:	mov    rdi,rbx
  408b2a:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  408b2f:	mov    esi,0x24
  408b34:	mov    rdi,rbx
  408b37:	call   4110d0 <flatcc_builder_start_table@@Base>
  408b3c:	lea    rsi,[rip+0xd7a6]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  408b43:	mov    rdi,rbx
  408b46:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408b4b:	mov    ebp,eax
  408b4d:	test   eax,eax
  408b4f:	je     408b65 <test_sort_find@@Base+0xb5>
  408b51:	mov    esi,0x3
  408b56:	mov    rdi,rbx
  408b59:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408b5e:	test   rax,rax
  408b61:	je     408b65 <test_sort_find@@Base+0xb5>
  408b63:	mov    DWORD PTR [rax],ebp
  408b65:	mov    edx,0x1
  408b6a:	lea    rsi,[rip+0x10abf]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408b71:	mov    rdi,rbx
  408b74:	call   4119c0 <flatcc_builder_check_required@@Base>
  408b79:	test   eax,eax
  408b7b:	je     409f61 <test_sort_find@@Base+0x14b1>
  408b81:	mov    rdi,rbx
  408b84:	call   411a50 <flatcc_builder_end_table@@Base>
  408b89:	test   eax,eax
  408b8b:	je     408b97 <test_sort_find@@Base+0xe7>
  408b8d:	mov    esi,eax
  408b8f:	mov    rdi,rbx
  408b92:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408b97:	mov    esi,0x24
  408b9c:	mov    rdi,rbx
  408b9f:	call   4110d0 <flatcc_builder_start_table@@Base>
  408ba4:	lea    rsi,[rip+0xd746]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  408bab:	mov    rdi,rbx
  408bae:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408bb3:	mov    ebp,eax
  408bb5:	test   eax,eax
  408bb7:	je     408bcd <test_sort_find@@Base+0x11d>
  408bb9:	mov    esi,0x3
  408bbe:	mov    rdi,rbx
  408bc1:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408bc6:	test   rax,rax
  408bc9:	je     408bcd <test_sort_find@@Base+0x11d>
  408bcb:	mov    DWORD PTR [rax],ebp
  408bcd:	mov    edx,0x1
  408bd2:	lea    rsi,[rip+0x10a57]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408bd9:	mov    rdi,rbx
  408bdc:	call   4119c0 <flatcc_builder_check_required@@Base>
  408be1:	test   eax,eax
  408be3:	je     409f61 <test_sort_find@@Base+0x14b1>
  408be9:	mov    rdi,rbx
  408bec:	call   411a50 <flatcc_builder_end_table@@Base>
  408bf1:	test   eax,eax
  408bf3:	je     408bff <test_sort_find@@Base+0x14f>
  408bf5:	mov    esi,eax
  408bf7:	mov    rdi,rbx
  408bfa:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408bff:	mov    esi,0x24
  408c04:	mov    rdi,rbx
  408c07:	call   4110d0 <flatcc_builder_start_table@@Base>
  408c0c:	lea    rsi,[rip+0xd6e4]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  408c13:	mov    rdi,rbx
  408c16:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408c1b:	mov    ebp,eax
  408c1d:	test   eax,eax
  408c1f:	je     408c35 <test_sort_find@@Base+0x185>
  408c21:	mov    esi,0x3
  408c26:	mov    rdi,rbx
  408c29:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408c2e:	test   rax,rax
  408c31:	je     408c35 <test_sort_find@@Base+0x185>
  408c33:	mov    DWORD PTR [rax],ebp
  408c35:	mov    edx,0x1
  408c3a:	lea    rsi,[rip+0x109ef]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408c41:	mov    rdi,rbx
  408c44:	call   4119c0 <flatcc_builder_check_required@@Base>
  408c49:	test   eax,eax
  408c4b:	je     409f61 <test_sort_find@@Base+0x14b1>
  408c51:	mov    rdi,rbx
  408c54:	call   411a50 <flatcc_builder_end_table@@Base>
  408c59:	test   eax,eax
  408c5b:	je     408c67 <test_sort_find@@Base+0x1b7>
  408c5d:	mov    esi,eax
  408c5f:	mov    rdi,rbx
  408c62:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408c67:	mov    esi,0x24
  408c6c:	mov    rdi,rbx
  408c6f:	call   4110d0 <flatcc_builder_start_table@@Base>
  408c74:	lea    rsi,[rip+0xd7d7]        # 416452 <_IO_stdin_used@@Base+0x452>
  408c7b:	mov    rdi,rbx
  408c7e:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408c83:	mov    ebp,eax
  408c85:	test   eax,eax
  408c87:	je     408c9d <test_sort_find@@Base+0x1ed>
  408c89:	mov    esi,0x3
  408c8e:	mov    rdi,rbx
  408c91:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408c96:	test   rax,rax
  408c99:	je     408c9d <test_sort_find@@Base+0x1ed>
  408c9b:	mov    DWORD PTR [rax],ebp
  408c9d:	mov    edx,0x1
  408ca2:	lea    rsi,[rip+0x10987]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408ca9:	mov    rdi,rbx
  408cac:	call   4119c0 <flatcc_builder_check_required@@Base>
  408cb1:	test   eax,eax
  408cb3:	je     409f61 <test_sort_find@@Base+0x14b1>
  408cb9:	mov    rdi,rbx
  408cbc:	call   411a50 <flatcc_builder_end_table@@Base>
  408cc1:	test   eax,eax
  408cc3:	je     408ccf <test_sort_find@@Base+0x21f>
  408cc5:	mov    esi,eax
  408cc7:	mov    rdi,rbx
  408cca:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408ccf:	mov    esi,0x24
  408cd4:	mov    rdi,rbx
  408cd7:	call   4110d0 <flatcc_builder_start_table@@Base>
  408cdc:	lea    rsi,[rip+0xd614]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  408ce3:	mov    rdi,rbx
  408ce6:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  408ceb:	mov    ebp,eax
  408ced:	test   eax,eax
  408cef:	je     408d05 <test_sort_find@@Base+0x255>
  408cf1:	mov    esi,0x3
  408cf6:	mov    rdi,rbx
  408cf9:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408cfe:	test   rax,rax
  408d01:	je     408d05 <test_sort_find@@Base+0x255>
  408d03:	mov    DWORD PTR [rax],ebp
  408d05:	mov    edx,0x1
  408d0a:	lea    rsi,[rip+0x1091f]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408d11:	mov    rdi,rbx
  408d14:	call   4119c0 <flatcc_builder_check_required@@Base>
  408d19:	test   eax,eax
  408d1b:	je     409f61 <test_sort_find@@Base+0x14b1>
  408d21:	mov    rdi,rbx
  408d24:	call   411a50 <flatcc_builder_end_table@@Base>
  408d29:	test   eax,eax
  408d2b:	je     408d37 <test_sort_find@@Base+0x287>
  408d2d:	mov    esi,eax
  408d2f:	mov    rdi,rbx
  408d32:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  408d37:	mov    rdi,rbx
  408d3a:	call   411e90 <flatcc_builder_end_offset_vector@@Base>
  408d3f:	mov    ebp,eax
  408d41:	test   eax,eax
  408d43:	je     408d59 <test_sort_find@@Base+0x2a9>
  408d45:	mov    esi,0xb
  408d4a:	mov    rdi,rbx
  408d4d:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  408d52:	test   rax,rax
  408d55:	je     408d59 <test_sort_find@@Base+0x2a9>
  408d57:	mov    DWORD PTR [rax],ebp
  408d59:	mov    edx,0x1
  408d5e:	lea    rsi,[rip+0x108cb]        # 419630 <_IO_stdin_used@@Base+0x3630>
  408d65:	mov    rdi,rbx
  408d68:	call   4119c0 <flatcc_builder_check_required@@Base>
  408d6d:	test   eax,eax
  408d6f:	je     409f61 <test_sort_find@@Base+0x14b1>
  408d75:	mov    rdi,rbx
  408d78:	call   411a50 <flatcc_builder_end_table@@Base>
  408d7d:	mov    esi,eax
  408d7f:	mov    rdi,rbx
  408d82:	call   410510 <flatcc_builder_end_buffer@@Base>
  408d87:	mov    rdi,rbx
  408d8a:	lea    rsi,[rsp+0x40]
  408d8f:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  408d94:	mov    rbx,QWORD PTR [rip+0x1625d]        # 41eff8 <stderr@GLIBC_2.2.5>
  408d9b:	mov    rdx,QWORD PTR [rsp+0x40]
  408da0:	mov    rcx,QWORD PTR [rbx]
  408da3:	mov    rsi,rax
  408da6:	mov    rbx,rax
  408da9:	lea    rdi,[rip+0xd6a8]        # 416458 <_IO_stdin_used@@Base+0x458>
  408db0:	mov    QWORD PTR [rsp+0x8],rax
  408db5:	call   404590 <_start@@Base+0x140>
  408dba:	test   rbx,rbx
  408dbd:	je     408dc8 <test_sort_find@@Base+0x318>
  408dbf:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  408dc6:	je     408dd0 <test_sort_find@@Base+0x320>
  408dc8:	call   404a60 <_start@@Base+0x610>
  408dcd:	nop    DWORD PTR [rax]
  408dd0:	mov    rbx,QWORD PTR [rsp+0x8]
  408dd5:	mov    eax,DWORD PTR [rbx]
  408dd7:	add    rax,rbx
  408dda:	je     408dc8 <test_sort_find@@Base+0x318>
  408ddc:	movsxd rdx,DWORD PTR [rax]
  408ddf:	mov    rbx,rax
  408de2:	sub    rbx,rdx
  408de5:	cmp    WORD PTR [rbx],0x1b
  408de9:	jbe    40980f <test_sort_find@@Base+0xd5f>
  408def:	movzx  edx,WORD PTR [rbx+0x1a]
  408df3:	test   dx,dx
  408df6:	je     40980f <test_sort_find@@Base+0xd5f>
  408dfc:	add    rax,rdx
  408dff:	mov    edx,DWORD PTR [rax]
  408e01:	lea    rbx,[rax+rdx*1+0x4]
  408e06:	test   rbx,rbx
  408e09:	je     40980f <test_sort_find@@Base+0xd5f>
  408e0f:	mov    eax,DWORD PTR [rbx-0x4]
  408e12:	mov    QWORD PTR [rsp+0x38],rax
  408e17:	test   rax,rax
  408e1a:	je     4092ca <test_sort_find@@Base+0x81a>
  408e20:	mov    rax,QWORD PTR [rsp+0x38]
  408e25:	lea    r12,[rax-0x1]
  408e29:	shr    rax,1
  408e2c:	mov    r14,rax
  408e2f:	nop
  408e30:	lea    rbp,[r14+r14*1]
  408e34:	cmp    r12,rbp
  408e37:	jb     40905d <test_sort_find@@Base+0x5ad>
  408e3d:	mov    r13,r14
  408e40:	jmp    408ec2 <test_sort_find@@Base+0x412>
  408e45:	nop    DWORD PTR [rax]
  408e48:	mov    r10d,DWORD PTR [rdi-0x4]
  408e4c:	mov    QWORD PTR [rsp+0x30],rcx
  408e51:	cmp    r11,r10
  408e54:	mov    rdx,r10
  408e57:	cmovbe rdx,r11
  408e5b:	mov    DWORD PTR [rsp+0x28],r8d
  408e60:	mov    QWORD PTR [rsp+0x20],r9
  408e65:	mov    QWORD PTR [rsp+0x18],r10
  408e6a:	mov    QWORD PTR [rsp+0x10],r11
  408e6f:	call   404160 <strncmp@plt>
  408e74:	test   eax,eax
  408e76:	mov    r11,QWORD PTR [rsp+0x10]
  408e7b:	mov    r10,QWORD PTR [rsp+0x18]
  408e80:	mov    r9,QWORD PTR [rsp+0x20]
  408e85:	mov    r8d,DWORD PTR [rsp+0x28]
  408e8a:	mov    rcx,QWORD PTR [rsp+0x30]
  408e8f:	je     409054 <test_sort_find@@Base+0x5a4>
  408e95:	jns    40905d <test_sort_find@@Base+0x5ad>
  408e9b:	sub    r13,rbp
  408e9e:	shl    r13d,0x2
  408ea2:	sub    r15d,r13d
  408ea5:	add    r8d,r13d
  408ea8:	lea    rax,[rbp+rbp*1+0x0]
  408ead:	mov    DWORD PTR [r9],r15d
  408eb0:	mov    r13,rbp
  408eb3:	mov    DWORD PTR [rcx],r8d
  408eb6:	cmp    r12,rax
  408eb9:	jb     40905d <test_sort_find@@Base+0x5ad>
  408ebf:	mov    rbp,rax
  408ec2:	mov    r15d,DWORD PTR [rbx-0x4]
  408ec6:	cmp    rbp,r12
  408ec9:	jae    408fb1 <test_sort_find@@Base+0x501>
  408ecf:	lea    rcx,[rbp*4+0x0]
  408ed7:	lea    rax,[rbx+rcx*1]
  408edb:	cmp    rbp,r15
  408ede:	jae    4097f0 <test_sort_find@@Base+0xd40>
  408ee4:	mov    edx,DWORD PTR [rax]
  408ee6:	add    rax,rdx
  408ee9:	je     4097d0 <test_sort_find@@Base+0xd20>
  408eef:	movsxd rdx,DWORD PTR [rax]
  408ef2:	mov    rdi,rax
  408ef5:	sub    rdi,rdx
  408ef8:	cmp    WORD PTR [rdi],0xb
  408efc:	jbe    409600 <test_sort_find@@Base+0xb50>
  408f02:	movzx  edx,WORD PTR [rdi+0xa]
  408f06:	test   dx,dx
  408f09:	je     409600 <test_sort_find@@Base+0xb50>
  408f0f:	add    rax,rdx
  408f12:	mov    edx,DWORD PTR [rax]
  408f14:	lea    r8,[rbp+0x1]
  408f18:	lea    rdi,[rax+rdx*1+0x4]
  408f1d:	lea    rax,[rbx+rcx*1+0x4]
  408f22:	cmp    r8,r15
  408f25:	jae    4097f0 <test_sort_find@@Base+0xd40>
  408f2b:	mov    edx,DWORD PTR [rax]
  408f2d:	add    rax,rdx
  408f30:	je     4097d0 <test_sort_find@@Base+0xd20>
  408f36:	movsxd rdx,DWORD PTR [rax]
  408f39:	mov    rcx,rax
  408f3c:	sub    rcx,rdx
  408f3f:	cmp    WORD PTR [rcx],0xb
  408f43:	jbe    409600 <test_sort_find@@Base+0xb50>
  408f49:	movzx  edx,WORD PTR [rcx+0xa]
  408f4d:	test   dx,dx
  408f50:	je     409600 <test_sort_find@@Base+0xb50>
  408f56:	add    rax,rdx
  408f59:	mov    edx,DWORD PTR [rax]
  408f5b:	xor    r9d,r9d
  408f5e:	lea    rsi,[rax+rdx*1+0x4]
  408f63:	test   rsi,rsi
  408f66:	je     408f6c <test_sort_find@@Base+0x4bc>
  408f68:	mov    r9d,DWORD PTR [rsi-0x4]
  408f6c:	test   rdi,rdi
  408f6f:	je     4095e8 <test_sort_find@@Base+0xb38>
  408f75:	mov    ecx,DWORD PTR [rdi-0x4]
  408f78:	mov    QWORD PTR [rsp+0x20],r8
  408f7d:	cmp    r9,rcx
  408f80:	mov    rdx,rcx
  408f83:	cmovbe rdx,r9
  408f87:	mov    QWORD PTR [rsp+0x18],rcx
  408f8c:	mov    QWORD PTR [rsp+0x10],r9
  408f91:	call   404160 <strncmp@plt>
  408f96:	test   eax,eax
  408f98:	mov    r9,QWORD PTR [rsp+0x10]
  408f9d:	mov    rcx,QWORD PTR [rsp+0x18]
  408fa2:	mov    r8,QWORD PTR [rsp+0x20]
  408fa7:	je     4095ea <test_sort_find@@Base+0xb3a>
  408fad:	cmovs  rbp,r8
  408fb1:	lea    r9,[rbx+r13*4]
  408fb5:	cmp    r13,r15
  408fb8:	jae    4097f0 <test_sort_find@@Base+0xd40>
  408fbe:	mov    eax,DWORD PTR [r9]
  408fc1:	mov    r8,rax
  408fc4:	add    rax,r9
  408fc7:	je     4097d0 <test_sort_find@@Base+0xd20>
  408fcd:	movsxd rdx,DWORD PTR [rax]
  408fd0:	mov    rdi,rax
  408fd3:	sub    rdi,rdx
  408fd6:	cmp    WORD PTR [rdi],0xb
  408fda:	jbe    409600 <test_sort_find@@Base+0xb50>
  408fe0:	movzx  edx,WORD PTR [rdi+0xa]
  408fe4:	test   dx,dx
  408fe7:	je     409600 <test_sort_find@@Base+0xb50>
  408fed:	add    rax,rdx
  408ff0:	mov    edx,DWORD PTR [rax]
  408ff2:	lea    rcx,[rbx+rbp*4]
  408ff6:	lea    rdi,[rax+rdx*1+0x4]
  408ffb:	cmp    rbp,r15
  408ffe:	jae    4097f0 <test_sort_find@@Base+0xd40>
  409004:	mov    eax,DWORD PTR [rcx]
  409006:	mov    r15,rax
  409009:	add    rax,rcx
  40900c:	je     4097d0 <test_sort_find@@Base+0xd20>
  409012:	movsxd rdx,DWORD PTR [rax]
  409015:	mov    rsi,rax
  409018:	sub    rsi,rdx
  40901b:	cmp    WORD PTR [rsi],0xb
  40901f:	jbe    409600 <test_sort_find@@Base+0xb50>
  409025:	movzx  edx,WORD PTR [rsi+0xa]
  409029:	test   dx,dx
  40902c:	je     409600 <test_sort_find@@Base+0xb50>
  409032:	add    rax,rdx
  409035:	mov    edx,DWORD PTR [rax]
  409037:	xor    r11d,r11d
  40903a:	lea    rsi,[rax+rdx*1+0x4]
  40903f:	test   rsi,rsi
  409042:	je     409048 <test_sort_find@@Base+0x598>
  409044:	mov    r11d,DWORD PTR [rsi-0x4]
  409048:	test   rdi,rdi
  40904b:	jne    408e48 <test_sort_find@@Base+0x398>
  409051:	xor    r10d,r10d
  409054:	cmp    r11,r10
  409057:	ja     408e9b <test_sort_find@@Base+0x3eb>
  40905d:	dec    r14
  409060:	cmp    r14,0xffffffffffffffff
  409064:	jne    408e30 <test_sort_find@@Base+0x380>
  40906a:	test   r12,r12
  40906d:	je     4092ca <test_sort_find@@Base+0x81a>
  409073:	mov    r15d,0x1
  409079:	sub    r15,QWORD PTR [rsp+0x38]
  40907e:	shl    r15d,0x2
  409082:	nop    WORD PTR [rax+rax*1+0x0]
  409088:	mov    eax,DWORD PTR [rbx+r12*4]
  40908c:	mov    edx,DWORD PTR [rbx]
  40908e:	sub    eax,r15d
  409091:	add    edx,r15d
  409094:	mov    DWORD PTR [rbx],eax
  409096:	xor    r13d,r13d
  409099:	mov    DWORD PTR [rbx+r12*4],edx
  40909d:	xor    ebp,ebp
  40909f:	dec    r12
  4090a2:	jmp    409122 <test_sort_find@@Base+0x672>
  4090a4:	nop    DWORD PTR [rax+0x0]
  4090a8:	mov    r10d,DWORD PTR [rdi-0x4]
  4090ac:	mov    QWORD PTR [rsp+0x30],rcx
  4090b1:	cmp    r11,r10
  4090b4:	mov    rdx,r10
  4090b7:	cmovbe rdx,r11
  4090bb:	mov    DWORD PTR [rsp+0x28],r8d
  4090c0:	mov    QWORD PTR [rsp+0x20],r9
  4090c5:	mov    QWORD PTR [rsp+0x18],r10
  4090ca:	mov    QWORD PTR [rsp+0x10],r11
  4090cf:	call   404160 <strncmp@plt>
  4090d4:	test   eax,eax
  4090d6:	mov    r11,QWORD PTR [rsp+0x10]
  4090db:	mov    r10,QWORD PTR [rsp+0x18]
  4090e0:	mov    r9,QWORD PTR [rsp+0x20]
  4090e5:	mov    r8d,DWORD PTR [rsp+0x28]
  4090ea:	mov    rcx,QWORD PTR [rsp+0x30]
  4090ef:	je     4092b4 <test_sort_find@@Base+0x804>
  4090f5:	jns    4092bd <test_sort_find@@Base+0x80d>
  4090fb:	sub    r13,rbp
  4090fe:	shl    r13d,0x2
  409102:	sub    r14d,r13d
  409105:	add    r8d,r13d
  409108:	lea    rax,[rbp+rbp*1+0x0]
  40910d:	mov    DWORD PTR [r9],r14d
  409110:	mov    r13,rbp
  409113:	mov    DWORD PTR [rcx],r8d
  409116:	cmp    r12,rax
  409119:	jb     4092bd <test_sort_find@@Base+0x80d>
  40911f:	mov    rbp,rax
  409122:	mov    r14d,DWORD PTR [rbx-0x4]
  409126:	cmp    rbp,r12
  409129:	jae    409211 <test_sort_find@@Base+0x761>
  40912f:	lea    rcx,[rbp*4+0x0]
  409137:	lea    rax,[rbx+rcx*1]
  40913b:	cmp    rbp,r14
  40913e:	jae    4097f0 <test_sort_find@@Base+0xd40>
  409144:	mov    edx,DWORD PTR [rax]
  409146:	add    rax,rdx
  409149:	je     4097d0 <test_sort_find@@Base+0xd20>
  40914f:	movsxd rdx,DWORD PTR [rax]
  409152:	mov    rdi,rax
  409155:	sub    rdi,rdx
  409158:	cmp    WORD PTR [rdi],0xb
  40915c:	jbe    409600 <test_sort_find@@Base+0xb50>
  409162:	movzx  edx,WORD PTR [rdi+0xa]
  409166:	test   dx,dx
  409169:	je     409600 <test_sort_find@@Base+0xb50>
  40916f:	add    rax,rdx
  409172:	mov    edx,DWORD PTR [rax]
  409174:	lea    r8,[rbp+0x1]
  409178:	lea    rdi,[rax+rdx*1+0x4]
  40917d:	lea    rax,[rbx+rcx*1+0x4]
  409182:	cmp    r8,r14
  409185:	jae    4097f0 <test_sort_find@@Base+0xd40>
  40918b:	mov    edx,DWORD PTR [rax]
  40918d:	add    rax,rdx
  409190:	je     4097d0 <test_sort_find@@Base+0xd20>
  409196:	movsxd rdx,DWORD PTR [rax]
  409199:	mov    rcx,rax
  40919c:	sub    rcx,rdx
  40919f:	cmp    WORD PTR [rcx],0xb
  4091a3:	jbe    409600 <test_sort_find@@Base+0xb50>
  4091a9:	movzx  edx,WORD PTR [rcx+0xa]
  4091ad:	test   dx,dx
  4091b0:	je     409600 <test_sort_find@@Base+0xb50>
  4091b6:	add    rax,rdx
  4091b9:	mov    edx,DWORD PTR [rax]
  4091bb:	xor    r9d,r9d
  4091be:	lea    rsi,[rax+rdx*1+0x4]
  4091c3:	test   rsi,rsi
  4091c6:	je     4091cc <test_sort_find@@Base+0x71c>
  4091c8:	mov    r9d,DWORD PTR [rsi-0x4]
  4091cc:	test   rdi,rdi
  4091cf:	je     4097c0 <test_sort_find@@Base+0xd10>
  4091d5:	mov    ecx,DWORD PTR [rdi-0x4]
  4091d8:	mov    QWORD PTR [rsp+0x20],r8
  4091dd:	cmp    r9,rcx
  4091e0:	mov    rdx,rcx
  4091e3:	cmovbe rdx,r9
  4091e7:	mov    QWORD PTR [rsp+0x18],rcx
  4091ec:	mov    QWORD PTR [rsp+0x10],r9
  4091f1:	call   404160 <strncmp@plt>
  4091f6:	test   eax,eax
  4091f8:	mov    r9,QWORD PTR [rsp+0x10]
  4091fd:	mov    rcx,QWORD PTR [rsp+0x18]
  409202:	mov    r8,QWORD PTR [rsp+0x20]
  409207:	je     4097c2 <test_sort_find@@Base+0xd12>
  40920d:	cmovs  rbp,r8
  409211:	lea    r9,[rbx+r13*4]
  409215:	cmp    r13,r14
  409218:	jae    4097f0 <test_sort_find@@Base+0xd40>
  40921e:	mov    eax,DWORD PTR [r9]
  409221:	mov    r8,rax
  409224:	add    rax,r9
  409227:	je     4097d0 <test_sort_find@@Base+0xd20>
  40922d:	movsxd rdx,DWORD PTR [rax]
  409230:	mov    rdi,rax
  409233:	sub    rdi,rdx
  409236:	cmp    WORD PTR [rdi],0xb
  40923a:	jbe    409600 <test_sort_find@@Base+0xb50>
  409240:	movzx  edx,WORD PTR [rdi+0xa]
  409244:	test   dx,dx
  409247:	je     409600 <test_sort_find@@Base+0xb50>
  40924d:	add    rax,rdx
  409250:	mov    edx,DWORD PTR [rax]
  409252:	lea    rcx,[rbx+rbp*4]
  409256:	lea    rdi,[rax+rdx*1+0x4]
  40925b:	cmp    rbp,r14
  40925e:	jae    4097f0 <test_sort_find@@Base+0xd40>
  409264:	mov    eax,DWORD PTR [rcx]
  409266:	mov    r14,rax
  409269:	add    rax,rcx
  40926c:	je     4097d0 <test_sort_find@@Base+0xd20>
  409272:	movsxd rdx,DWORD PTR [rax]
  409275:	mov    rsi,rax
  409278:	sub    rsi,rdx
  40927b:	cmp    WORD PTR [rsi],0xb
  40927f:	jbe    409600 <test_sort_find@@Base+0xb50>
  409285:	movzx  edx,WORD PTR [rsi+0xa]
  409289:	test   dx,dx
  40928c:	je     409600 <test_sort_find@@Base+0xb50>
  409292:	add    rax,rdx
  409295:	mov    edx,DWORD PTR [rax]
  409297:	xor    r11d,r11d
  40929a:	lea    rsi,[rax+rdx*1+0x4]
  40929f:	test   rsi,rsi
  4092a2:	je     4092a8 <test_sort_find@@Base+0x7f8>
  4092a4:	mov    r11d,DWORD PTR [rsi-0x4]
  4092a8:	test   rdi,rdi
  4092ab:	jne    4090a8 <test_sort_find@@Base+0x5f8>
  4092b1:	xor    r10d,r10d
  4092b4:	cmp    r11,r10
  4092b7:	ja     4090fb <test_sort_find@@Base+0x64b>
  4092bd:	add    r15d,0x4
  4092c1:	test   r12,r12
  4092c4:	jne    409088 <test_sort_find@@Base+0x5d8>
  4092ca:	mov    rax,QWORD PTR [rip+0x15d27]        # 41eff8 <stderr@GLIBC_2.2.5>
  4092d1:	mov    rdx,QWORD PTR [rsp+0x40]
  4092d6:	mov    rcx,QWORD PTR [rax]
  4092d9:	mov    rsi,QWORD PTR [rsp+0x8]
  4092de:	lea    rdi,[rip+0xd175]        # 41645a <_IO_stdin_used@@Base+0x45a>
  4092e5:	call   404590 <_start@@Base+0x140>
  4092ea:	cmp    DWORD PTR [rbx-0x4],0x5
  4092ee:	jne    409dd0 <test_sort_find@@Base+0x1320>
  4092f4:	mov    eax,DWORD PTR [rbx]
  4092f6:	add    rax,rbx
  4092f9:	je     409f66 <test_sort_find@@Base+0x14b6>
  4092ff:	movsxd rdx,DWORD PTR [rax]
  409302:	mov    rcx,rax
  409305:	sub    rcx,rdx
  409308:	cmp    WORD PTR [rcx],0xb
  40930c:	jbe    409600 <test_sort_find@@Base+0xb50>
  409312:	movzx  edx,WORD PTR [rcx+0xa]
  409316:	test   dx,dx
  409319:	je     409600 <test_sort_find@@Base+0xb50>
  40931f:	add    rax,rdx
  409322:	mov    edx,DWORD PTR [rax]
  409324:	mov    ecx,0x6
  409329:	lea    rsi,[rax+rdx*1+0x4]
  40932e:	lea    rdi,[rip+0xd11d]        # 416452 <_IO_stdin_used@@Base+0x452>
  409335:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409337:	seta   al
  40933a:	sbb    al,0x0
  40933c:	test   al,al
  40933e:	jne    409e85 <test_sort_find@@Base+0x13d5>
  409344:	mov    ebp,DWORD PTR [rbx+0x4]
  409347:	mov    rax,rbx
  40934a:	add    rbp,0x4
  40934e:	add    rax,rbp
  409351:	je     409f66 <test_sort_find@@Base+0x14b6>
  409357:	movsxd rdx,DWORD PTR [rax]
  40935a:	mov    rdi,rax
  40935d:	sub    rdi,rdx
  409360:	cmp    WORD PTR [rdi],0xb
  409364:	jbe    409600 <test_sort_find@@Base+0xb50>
  40936a:	movzx  edx,WORD PTR [rdi+0xa]
  40936e:	test   dx,dx
  409371:	je     409600 <test_sort_find@@Base+0xb50>
  409377:	add    rax,rdx
  40937a:	mov    edx,DWORD PTR [rax]
  40937c:	lea    r8,[rip+0xcf74]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  409383:	lea    rsi,[rax+rdx*1+0x4]
  409388:	mov    ecx,0x9
  40938d:	mov    rdi,r8
  409390:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409392:	seta   al
  409395:	sbb    al,0x0
  409397:	test   al,al
  409399:	jne    409ea5 <test_sort_find@@Base+0x13f5>
  40939f:	mov    r12d,DWORD PTR [rbx+0x8]
  4093a3:	mov    rax,rbx
  4093a6:	add    r12,0x8
  4093aa:	add    rax,r12
  4093ad:	je     409f66 <test_sort_find@@Base+0x14b6>
  4093b3:	movsxd rdx,DWORD PTR [rax]
  4093b6:	mov    rcx,rax
  4093b9:	sub    rcx,rdx
  4093bc:	cmp    WORD PTR [rcx],0xb
  4093c0:	jbe    409600 <test_sort_find@@Base+0xb50>
  4093c6:	movzx  edx,WORD PTR [rcx+0xa]
  4093ca:	test   dx,dx
  4093cd:	je     409600 <test_sort_find@@Base+0xb50>
  4093d3:	add    rax,rdx
  4093d6:	mov    edx,DWORD PTR [rax]
  4093d8:	mov    ecx,0x9
  4093dd:	lea    rsi,[rax+rdx*1+0x4]
  4093e2:	mov    rdi,r8
  4093e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093e7:	seta   al
  4093ea:	sbb    al,0x0
  4093ec:	test   al,al
  4093ee:	jne    409ec5 <test_sort_find@@Base+0x1415>
  4093f4:	mov    eax,DWORD PTR [rbx+0xc]
  4093f7:	lea    r13,[rip+0xcef3]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  4093fe:	lea    rdi,[rbx+rax*1+0xc]
  409403:	call   404bb0 <_start@@Base+0x760>
  409408:	mov    rsi,rax
  40940b:	mov    ecx,0x6
  409410:	mov    rdi,r13
  409413:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409415:	seta   al
  409418:	sbb    al,0x0
  40941a:	test   al,al
  40941c:	jne    409ee5 <test_sort_find@@Base+0x1435>
  409422:	mov    eax,DWORD PTR [rbx+0x10]
  409425:	lea    rdi,[rbx+rax*1+0x10]
  40942a:	call   404bb0 <_start@@Base+0x760>
  40942f:	mov    rsi,rax
  409432:	mov    ecx,0x8
  409437:	lea    rdi,[rip+0xceab]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40943e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409440:	seta   al
  409443:	sbb    al,0x0
  409445:	test   al,al
  409447:	jne    409f41 <test_sort_find@@Base+0x1491>
  40944d:	cmp    rbp,r12
  409450:	je     409f21 <test_sort_find@@Base+0x1471>
  409456:	mov    rsi,r13
  409459:	mov    rdi,rbx
  40945c:	call   405f60 <_start@@Base+0x1b10>
  409461:	cmp    rax,0x3
  409465:	jne    409df0 <test_sort_find@@Base+0x1340>
  40946b:	mov    r11d,0x4
  409471:	xor    ebp,ebp
  409473:	lea    r10,[rip+0xd095]        # 41650f <_IO_stdin_used@@Base+0x50f>
  40947a:	mov    r9d,0x5
  409480:	mov    r8d,0x7
  409486:	mov    rdx,r11
  409489:	sub    rdx,rbp
  40948c:	shr    rdx,1
  40948f:	add    rdx,rbp
  409492:	lea    rax,[rbx+rdx*4]
  409496:	cmp    rdx,0x4
  40949a:	ja     409e80 <test_sort_find@@Base+0x13d0>
  4094a0:	mov    ecx,DWORD PTR [rax]
  4094a2:	add    rax,rcx
  4094a5:	je     4097d0 <test_sort_find@@Base+0xd20>
  4094ab:	movsxd rcx,DWORD PTR [rax]
  4094ae:	mov    rsi,rax
  4094b1:	sub    rsi,rcx
  4094b4:	cmp    WORD PTR [rsi],0xb
  4094b8:	ja     409543 <test_sort_find@@Base+0xa93>
  4094be:	jmp    409600 <test_sort_find@@Base+0xb50>
  4094c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4094c8:	mov    r12d,DWORD PTR [rsi-0x4]
  4094cc:	mov    rcx,r9
  4094cf:	cmp    r12,0x5
  4094d3:	cmovbe rcx,r12
  4094d7:	mov    rdi,r10
  4094da:	cmp    rcx,0x7
  4094de:	cmovg  rcx,r8
  4094e2:	cmp    rcx,rcx
  4094e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4094e7:	seta   al
  4094ea:	sbb    al,0x0
  4094ec:	movsx  eax,al
  4094ef:	test   eax,eax
  4094f1:	je     4095d0 <test_sort_find@@Base+0xb20>
  4094f7:	js     409563 <test_sort_find@@Base+0xab3>
  4094f9:	cmp    rdx,rbp
  4094fc:	jbe    4095df <test_sort_find@@Base+0xb2f>
  409502:	mov    rcx,rdx
  409505:	sub    rcx,rbp
  409508:	shr    rcx,1
  40950b:	add    rcx,rbp
  40950e:	lea    rax,[rbx+rcx*4]
  409512:	cmp    rcx,0x4
  409516:	ja     409e80 <test_sort_find@@Base+0x13d0>
  40951c:	mov    esi,DWORD PTR [rax]
  40951e:	add    rax,rsi
  409521:	je     4097d0 <test_sort_find@@Base+0xd20>
  409527:	movsxd rsi,DWORD PTR [rax]
  40952a:	mov    rdi,rax
  40952d:	sub    rdi,rsi
  409530:	cmp    WORD PTR [rdi],0xb
  409534:	mov    rsi,rdi
  409537:	mov    r11,rdx
  40953a:	jbe    409600 <test_sort_find@@Base+0xb50>
  409540:	mov    rdx,rcx
  409543:	movzx  ecx,WORD PTR [rsi+0xa]
  409547:	test   cx,cx
  40954a:	je     409600 <test_sort_find@@Base+0xb50>
  409550:	add    rax,rcx
  409553:	mov    ecx,DWORD PTR [rax]
  409555:	lea    rsi,[rax+rcx*1+0x4]
  40955a:	test   rsi,rsi
  40955d:	jne    4094c8 <test_sort_find@@Base+0xa18>
  409563:	lea    rbp,[rdx+0x1]
  409567:	cmp    r11,rbp
  40956a:	ja     409486 <test_sort_find@@Base+0x9d6>
  409570:	cmp    rbp,r11
  409573:	je     409620 <test_sort_find@@Base+0xb70>
  409579:	lea    rsi,[rip+0xe508]        # 417a88 <_IO_stdin_used@@Base+0x1a88>
  409580:	mov    edi,0x1
  409585:	xor    eax,eax
  409587:	call   404220 <__printf_chk@plt>
  40958c:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409594:	nop    DWORD PTR [rax+0x0]
  409598:	mov    rdi,QWORD PTR [rsp+0x8]
  40959d:	call   413290 <flatcc_builder_aligned_free@@Base>
  4095a2:	mov    rbx,QWORD PTR [rsp+0x48]
  4095a7:	xor    rbx,QWORD PTR fs:0x28
  4095b0:	mov    eax,DWORD PTR [rsp+0x38]
  4095b4:	jne    409f6b <test_sort_find@@Base+0x14bb>
  4095ba:	add    rsp,0x58
  4095be:	pop    rbx
  4095bf:	pop    rbp
  4095c0:	pop    r12
  4095c2:	pop    r13
  4095c4:	pop    r14
  4095c6:	pop    r15
  4095c8:	ret    
  4095c9:	nop    DWORD PTR [rax+0x0]
  4095d0:	cmp    r12,0x4
  4095d4:	jbe    409563 <test_sort_find@@Base+0xab3>
  4095d6:	cmp    rdx,rbp
  4095d9:	ja     409502 <test_sort_find@@Base+0xa52>
  4095df:	mov    r11,rdx
  4095e2:	jmp    409570 <test_sort_find@@Base+0xac0>
  4095e4:	nop    DWORD PTR [rax+0x0]
  4095e8:	xor    ecx,ecx
  4095ea:	cmp    r9,rcx
  4095ed:	cmova  rbp,r8
  4095f1:	jmp    408fb1 <test_sort_find@@Base+0x501>
  4095f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409600:	lea    rcx,[rip+0xfc69]        # 419270 <_IO_stdin_used@@Base+0x3270>
  409607:	mov    edx,0x2bb
  40960c:	lea    rsi,[rip+0xd425]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  409613:	lea    rdi,[rip+0xd586]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  40961a:	call   4041a0 <__assert_fail@plt>
  40961f:	nop
  409620:	lea    rdi,[rbx+rbp*4]
  409624:	mov    eax,DWORD PTR [rdi]
  409626:	add    rdi,rax
  409629:	call   404bb0 <_start@@Base+0x760>
  40962e:	test   rax,rax
  409631:	je     409579 <test_sort_find@@Base+0xac9>
  409637:	mov    ecx,DWORD PTR [rax-0x4]
  40963a:	mov    esi,0x5
  40963f:	cmp    rcx,0x5
  409643:	mov    rdx,rcx
  409646:	cmova  rcx,rsi
  40964a:	mov    esi,0x7
  40964f:	cmp    rcx,0x7
  409653:	cmovg  rcx,rsi
  409657:	lea    rdi,[rip+0xceb1]        # 41650f <_IO_stdin_used@@Base+0x50f>
  40965e:	mov    rsi,rax
  409661:	cmp    rcx,rcx
  409664:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409666:	seta   al
  409669:	sbb    al,0x0
  40966b:	test   al,al
  40966d:	jne    409579 <test_sort_find@@Base+0xac9>
  409673:	cmp    edx,0x5
  409676:	jne    409579 <test_sort_find@@Base+0xac9>
  40967c:	mov    r11d,0x4
  409682:	xor    edx,edx
  409684:	cmp    rbp,0x3
  409688:	jne    409579 <test_sort_find@@Base+0xac9>
  40968e:	lea    r10,[rip+0xce81]        # 416516 <_IO_stdin_used@@Base+0x516>
  409695:	mov    r9d,0x5
  40969b:	mov    r8d,0x7
  4096a1:	nop    DWORD PTR [rax+0x0]
  4096a8:	mov    rbp,r11
  4096ab:	sub    rbp,rdx
  4096ae:	shr    rbp,1
  4096b1:	add    rbp,rdx
  4096b4:	lea    rax,[rbx+rbp*4]
  4096b8:	cmp    rbp,0x4
  4096bc:	ja     409e80 <test_sort_find@@Base+0x13d0>
  4096c2:	mov    ecx,DWORD PTR [rax]
  4096c4:	add    rax,rcx
  4096c7:	je     4097d0 <test_sort_find@@Base+0xd20>
  4096cd:	movsxd rcx,DWORD PTR [rax]
  4096d0:	mov    rsi,rax
  4096d3:	sub    rsi,rcx
  4096d6:	cmp    WORD PTR [rsi],0xb
  4096da:	ja     40975f <test_sort_find@@Base+0xcaf>
  4096e0:	jmp    409600 <test_sort_find@@Base+0xb50>
  4096e5:	nop    DWORD PTR [rax]
  4096e8:	mov    r12d,DWORD PTR [rsi-0x4]
  4096ec:	mov    rcx,r9
  4096ef:	cmp    r12,0x5
  4096f3:	cmovbe rcx,r12
  4096f7:	mov    rdi,r10
  4096fa:	cmp    rcx,0x7
  4096fe:	cmovg  rcx,r8
  409702:	cmp    rcx,rcx
  409705:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409707:	seta   al
  40970a:	sbb    al,0x0
  40970c:	movsx  eax,al
  40970f:	test   eax,eax
  409711:	je     409830 <test_sort_find@@Base+0xd80>
  409717:	js     40977f <test_sort_find@@Base+0xccf>
  409719:	cmp    rbp,rdx
  40971c:	jbe    409790 <test_sort_find@@Base+0xce0>
  40971e:	mov    rcx,rbp
  409721:	sub    rcx,rdx
  409724:	shr    rcx,1
  409727:	add    rcx,rdx
  40972a:	lea    rax,[rbx+rcx*4]
  40972e:	cmp    rcx,0x4
  409732:	ja     409e80 <test_sort_find@@Base+0x13d0>
  409738:	mov    esi,DWORD PTR [rax]
  40973a:	add    rax,rsi
  40973d:	je     4097d0 <test_sort_find@@Base+0xd20>
  409743:	movsxd rsi,DWORD PTR [rax]
  409746:	mov    rdi,rax
  409749:	sub    rdi,rsi
  40974c:	cmp    WORD PTR [rdi],0xb
  409750:	mov    rsi,rdi
  409753:	mov    r11,rbp
  409756:	jbe    409600 <test_sort_find@@Base+0xb50>
  40975c:	mov    rbp,rcx
  40975f:	movzx  ecx,WORD PTR [rsi+0xa]
  409763:	test   cx,cx
  409766:	je     409600 <test_sort_find@@Base+0xb50>
  40976c:	add    rax,rcx
  40976f:	mov    ecx,DWORD PTR [rax]
  409771:	lea    rsi,[rax+rcx*1+0x4]
  409776:	test   rsi,rsi
  409779:	jne    4096e8 <test_sort_find@@Base+0xc38>
  40977f:	lea    rdx,[rbp+0x1]
  409783:	cmp    rdx,r11
  409786:	jb     4096a8 <test_sort_find@@Base+0xbf8>
  40978c:	mov    rbp,r11
  40978f:	nop
  409790:	cmp    rbp,rdx
  409793:	je     409840 <test_sort_find@@Base+0xd90>
  409799:	lea    rsi,[rip+0xe320]        # 417ac0 <_IO_stdin_used@@Base+0x1ac0>
  4097a0:	mov    edi,0x1
  4097a5:	xor    eax,eax
  4097a7:	call   404220 <__printf_chk@plt>
  4097ac:	mov    DWORD PTR [rsp+0x38],0xffffffff
  4097b4:	jmp    409598 <test_sort_find@@Base+0xae8>
  4097b9:	nop    DWORD PTR [rax+0x0]
  4097c0:	xor    ecx,ecx
  4097c2:	cmp    r9,rcx
  4097c5:	cmova  rbp,r8
  4097c9:	jmp    409211 <test_sort_find@@Base+0x761>
  4097ce:	xchg   ax,ax
  4097d0:	lea    rcx,[rip+0xfa99]        # 419270 <_IO_stdin_used@@Base+0x3270>
  4097d7:	mov    edx,0x2bb
  4097dc:	lea    rsi,[rip+0xd255]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  4097e3:	lea    rdi,[rip+0xd2ce]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  4097ea:	call   4041a0 <__assert_fail@plt>
  4097ef:	nop
  4097f0:	lea    rcx,[rip+0xfaf9]        # 4192f0 <_IO_stdin_used@@Base+0x32f0>
  4097f7:	mov    edx,0x2b5
  4097fc:	lea    rsi,[rip+0xd235]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  409803:	lea    rdi,[rip+0xd35e]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  40980a:	call   4041a0 <__assert_fail@plt>
  40980f:	lea    rcx,[rip+0xf99a]        # 4191b0 <_IO_stdin_used@@Base+0x31b0>
  409816:	mov    edx,0x47b
  40981b:	lea    rsi,[rip+0xdbe6]        # 417408 <_IO_stdin_used@@Base+0x1408>
  409822:	lea    rdi,[rip+0xcc47]        # 416470 <_IO_stdin_used@@Base+0x470>
  409829:	call   4041a0 <__assert_fail@plt>
  40982e:	xchg   ax,ax
  409830:	cmp    r12,0x4
  409834:	ja     409719 <test_sort_find@@Base+0xc69>
  40983a:	jmp    40977f <test_sort_find@@Base+0xccf>
  40983f:	nop
  409840:	lea    rdi,[rbx+rbp*4]
  409844:	mov    eax,DWORD PTR [rdi]
  409846:	add    rdi,rax
  409849:	call   404bb0 <_start@@Base+0x760>
  40984e:	test   rax,rax
  409851:	je     409799 <test_sort_find@@Base+0xce9>
  409857:	mov    r14d,DWORD PTR [rax-0x4]
  40985b:	mov    ecx,0x5
  409860:	cmp    r14,0x5
  409864:	cmovbe rcx,r14
  409868:	mov    esi,0x7
  40986d:	cmp    rcx,0x7
  409871:	cmovg  rcx,rsi
  409875:	lea    rdi,[rip+0xcc9a]        # 416516 <_IO_stdin_used@@Base+0x516>
  40987c:	mov    rsi,rax
  40987f:	cmp    rcx,rcx
  409882:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409884:	seta   al
  409887:	sbb    al,0x0
  409889:	movsx  eax,al
  40988c:	mov    DWORD PTR [rsp+0x38],eax
  409890:	test   eax,eax
  409892:	jne    409799 <test_sort_find@@Base+0xce9>
  409898:	cmp    r14d,0x5
  40989c:	jne    409799 <test_sort_find@@Base+0xce9>
  4098a2:	cmp    rbp,0x3
  4098a6:	jne    409799 <test_sort_find@@Base+0xce9>
  4098ac:	lea    rsi,[rip+0xcc6a]        # 41651d <_IO_stdin_used@@Base+0x51d>
  4098b3:	mov    rdi,rbx
  4098b6:	call   405f60 <_start@@Base+0x1b10>
  4098bb:	mov    rbp,rax
  4098be:	cmp    rax,0xffffffffffffffff
  4098c2:	jne    409e10 <test_sort_find@@Base+0x1360>
  4098c8:	lea    rsi,[rip+0xcb83]        # 416452 <_IO_stdin_used@@Base+0x452>
  4098cf:	mov    rdi,rbx
  4098d2:	call   405f60 <_start@@Base+0x1b10>
  4098d7:	test   rax,rax
  4098da:	jne    409f05 <test_sort_find@@Base+0x1455>
  4098e0:	lea    rsi,[rip+0xca10]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  4098e7:	mov    rdi,rbx
  4098ea:	call   405f60 <_start@@Base+0x1b10>
  4098ef:	mov    r12,rax
  4098f2:	cmp    rax,0x1
  4098f6:	jne    409e30 <test_sort_find@@Base+0x1380>
  4098fc:	lea    rsi,[rip+0xc9e6]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  409903:	mov    rdi,rbx
  409906:	call   405f60 <_start@@Base+0x1b10>
  40990b:	mov    r13,rax
  40990e:	cmp    rax,0x4
  409912:	jne    409e68 <test_sort_find@@Base+0x13b8>
  409918:	mov    QWORD PTR [rsp+0x30],rax
  40991d:	mov    r15d,0x2
  409923:	lea    rbp,[r15+r15*1]
  409927:	mov    r12,r15
  40992a:	jmp    4099b2 <test_sort_find@@Base+0xf02>
  40992f:	nop
  409930:	mov    r10d,DWORD PTR [rsi-0x4]
  409934:	test   rdi,rdi
  409937:	je     409b50 <test_sort_find@@Base+0x10a0>
  40993d:	mov    r9d,DWORD PTR [rdi-0x4]
  409941:	mov    QWORD PTR [rsp+0x28],r8
  409946:	cmp    r10,r9
  409949:	mov    rdx,r9
  40994c:	cmovbe rdx,r10
  409950:	mov    QWORD PTR [rsp+0x20],rcx
  409955:	mov    QWORD PTR [rsp+0x18],r9
  40995a:	mov    QWORD PTR [rsp+0x10],r10
  40995f:	call   404160 <strncmp@plt>
  409964:	test   eax,eax
  409966:	mov    r10,QWORD PTR [rsp+0x10]
  40996b:	mov    r9,QWORD PTR [rsp+0x18]
  409970:	mov    rcx,QWORD PTR [rsp+0x20]
  409975:	mov    r8,QWORD PTR [rsp+0x28]
  40997a:	je     409b53 <test_sort_find@@Base+0x10a3>
  409980:	jns    409b27 <test_sort_find@@Base+0x1077>
  409986:	sub    r12,rbp
  409989:	shl    r12d,0x2
  40998d:	sub    r14d,r12d
  409990:	add    r13d,r12d
  409993:	lea    rax,[rbp+rbp*1+0x0]
  409998:	mov    DWORD PTR [rcx],r14d
  40999b:	mov    DWORD PTR [r8],r13d
  40999e:	cmp    rax,0x4
  4099a2:	ja     409b27 <test_sort_find@@Base+0x1077>
  4099a8:	mov    r14d,DWORD PTR [rbx-0x4]
  4099ac:	mov    r12,rbp
  4099af:	mov    rbp,rax
  4099b2:	cmp    rbp,0x4
  4099b6:	je     409a93 <test_sort_find@@Base+0xfe3>
  4099bc:	lea    rcx,[rbp*4+0x0]
  4099c4:	lea    rax,[rbx+rcx*1]
  4099c8:	cmp    rbp,r14
  4099cb:	jae    4097f0 <test_sort_find@@Base+0xd40>
  4099d1:	mov    edx,DWORD PTR [rax]
  4099d3:	add    rax,rdx
  4099d6:	je     4097d0 <test_sort_find@@Base+0xd20>
  4099dc:	movsxd rdx,DWORD PTR [rax]
  4099df:	mov    rdi,rax
  4099e2:	sub    rdi,rdx
  4099e5:	cmp    WORD PTR [rdi],0xb
  4099e9:	jbe    409600 <test_sort_find@@Base+0xb50>
  4099ef:	movzx  edx,WORD PTR [rdi+0xa]
  4099f3:	test   dx,dx
  4099f6:	je     409600 <test_sort_find@@Base+0xb50>
  4099fc:	add    rax,rdx
  4099ff:	mov    edx,DWORD PTR [rax]
  409a01:	lea    r8,[rbp+0x1]
  409a05:	lea    rdi,[rax+rdx*1+0x4]
  409a0a:	lea    rax,[rbx+rcx*1+0x4]
  409a0f:	cmp    r8,r14
  409a12:	jae    4097f0 <test_sort_find@@Base+0xd40>
  409a18:	mov    edx,DWORD PTR [rax]
  409a1a:	add    rax,rdx
  409a1d:	je     4097d0 <test_sort_find@@Base+0xd20>
  409a23:	movsxd rdx,DWORD PTR [rax]
  409a26:	mov    rsi,rax
  409a29:	sub    rsi,rdx
  409a2c:	cmp    WORD PTR [rsi],0xb
  409a30:	jbe    409600 <test_sort_find@@Base+0xb50>
  409a36:	movzx  edx,WORD PTR [rsi+0xa]
  409a3a:	test   dx,dx
  409a3d:	je     409600 <test_sort_find@@Base+0xb50>
  409a43:	add    rax,rdx
  409a46:	mov    edx,DWORD PTR [rax]
  409a48:	xor    ecx,ecx
  409a4a:	lea    rsi,[rax+rdx*1+0x4]
  409a4f:	test   rsi,rsi
  409a52:	je     409a57 <test_sort_find@@Base+0xfa7>
  409a54:	mov    ecx,DWORD PTR [rsi-0x4]
  409a57:	test   rdi,rdi
  409a5a:	je     409b40 <test_sort_find@@Base+0x1090>
  409a60:	mov    r13d,DWORD PTR [rdi-0x4]
  409a64:	mov    QWORD PTR [rsp+0x18],r8
  409a69:	cmp    rcx,r13
  409a6c:	mov    rdx,r13
  409a6f:	cmovbe rdx,rcx
  409a73:	mov    QWORD PTR [rsp+0x10],rcx
  409a78:	call   404160 <strncmp@plt>
  409a7d:	test   eax,eax
  409a7f:	mov    rcx,QWORD PTR [rsp+0x10]
  409a84:	mov    r8,QWORD PTR [rsp+0x18]
  409a89:	je     409b43 <test_sort_find@@Base+0x1093>
  409a8f:	cmovs  rbp,r8
  409a93:	lea    rcx,[rbx+r12*4]
  409a97:	cmp    r14,r12
  409a9a:	jbe    4097f0 <test_sort_find@@Base+0xd40>
  409aa0:	mov    eax,DWORD PTR [rcx]
  409aa2:	mov    r13,rax
  409aa5:	add    rax,rcx
  409aa8:	je     4097d0 <test_sort_find@@Base+0xd20>
  409aae:	movsxd rdx,DWORD PTR [rax]
  409ab1:	mov    rdi,rax
  409ab4:	sub    rdi,rdx
  409ab7:	cmp    WORD PTR [rdi],0xb
  409abb:	jbe    409600 <test_sort_find@@Base+0xb50>
  409ac1:	movzx  edx,WORD PTR [rdi+0xa]
  409ac5:	test   dx,dx
  409ac8:	je     409600 <test_sort_find@@Base+0xb50>
  409ace:	add    rax,rdx
  409ad1:	mov    edx,DWORD PTR [rax]
  409ad3:	lea    r8,[rbx+rbp*4]
  409ad7:	lea    rdi,[rax+rdx*1+0x4]
  409adc:	cmp    rbp,r14
  409adf:	jae    4097f0 <test_sort_find@@Base+0xd40>
  409ae5:	mov    eax,DWORD PTR [r8]
  409ae8:	mov    r14,rax
  409aeb:	add    rax,r8
  409aee:	je     4097d0 <test_sort_find@@Base+0xd20>
  409af4:	movsxd rdx,DWORD PTR [rax]
  409af7:	mov    rsi,rax
  409afa:	sub    rsi,rdx
  409afd:	cmp    WORD PTR [rsi],0xb
  409b01:	jbe    409600 <test_sort_find@@Base+0xb50>
  409b07:	movzx  edx,WORD PTR [rsi+0xa]
  409b0b:	test   dx,dx
  409b0e:	je     409600 <test_sort_find@@Base+0xb50>
  409b14:	add    rax,rdx
  409b17:	mov    edx,DWORD PTR [rax]
  409b19:	lea    rsi,[rax+rdx*1+0x4]
  409b1e:	test   rsi,rsi
  409b21:	jne    409930 <test_sort_find@@Base+0xe80>
  409b27:	test   r15,r15
  409b2a:	je     409b61 <test_sort_find@@Base+0x10b1>
  409b2c:	dec    r15
  409b2f:	mov    r14d,DWORD PTR [rbx-0x4]
  409b33:	jmp    409923 <test_sort_find@@Base+0xe73>
  409b38:	nop    DWORD PTR [rax+rax*1+0x0]
  409b40:	xor    r13d,r13d
  409b43:	cmp    rcx,r13
  409b46:	cmova  rbp,r8
  409b4a:	jmp    409a93 <test_sort_find@@Base+0xfe3>
  409b4f:	nop
  409b50:	xor    r9d,r9d
  409b53:	cmp    r10,r9
  409b56:	ja     409986 <test_sort_find@@Base+0xed6>
  409b5c:	test   r15,r15
  409b5f:	jne    409b2c <test_sort_find@@Base+0x107c>
  409b61:	mov    r13,QWORD PTR [rsp+0x30]
  409b66:	mov    eax,r13d
  409b69:	mov    edi,DWORD PTR [rbx+r13*4]
  409b6d:	mov    edx,DWORD PTR [rbx]
  409b6f:	neg    eax
  409b71:	shl    eax,0x2
  409b74:	add    edx,eax
  409b76:	sub    edi,eax
  409b78:	mov    DWORD PTR [rbx],edi
  409b7a:	xor    r12d,r12d
  409b7d:	mov    DWORD PTR [rbx+r13*4],edx
  409b81:	xor    ebp,ebp
  409b83:	dec    r13
  409b86:	jmp    409c0d <test_sort_find@@Base+0x115d>
  409b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b90:	mov    r10d,DWORD PTR [rsi-0x4]
  409b94:	test   rdi,rdi
  409b97:	je     409db0 <test_sort_find@@Base+0x1300>
  409b9d:	mov    r9d,DWORD PTR [rdi-0x4]
  409ba1:	mov    QWORD PTR [rsp+0x28],r8
  409ba6:	cmp    r10,r9
  409ba9:	mov    rdx,r9
  409bac:	cmovbe rdx,r10
  409bb0:	mov    QWORD PTR [rsp+0x20],rcx
  409bb5:	mov    QWORD PTR [rsp+0x18],r9
  409bba:	mov    QWORD PTR [rsp+0x10],r10
  409bbf:	call   404160 <strncmp@plt>
  409bc4:	test   eax,eax
  409bc6:	mov    r10,QWORD PTR [rsp+0x10]
  409bcb:	mov    r9,QWORD PTR [rsp+0x18]
  409bd0:	mov    rcx,QWORD PTR [rsp+0x20]
  409bd5:	mov    r8,QWORD PTR [rsp+0x28]
  409bda:	je     409db3 <test_sort_find@@Base+0x1303>
  409be0:	jns    409d84 <test_sort_find@@Base+0x12d4>
  409be6:	sub    r12,rbp
  409be9:	shl    r12d,0x2
  409bed:	sub    r14d,r12d
  409bf0:	add    r15d,r12d
  409bf3:	lea    rax,[rbp+rbp*1+0x0]
  409bf8:	mov    DWORD PTR [rcx],r14d
  409bfb:	mov    r12,rbp
  409bfe:	mov    DWORD PTR [r8],r15d
  409c01:	cmp    r13,rax
  409c04:	jb     409d84 <test_sort_find@@Base+0x12d4>
  409c0a:	mov    rbp,rax
  409c0d:	mov    r14d,DWORD PTR [rbx-0x4]
  409c11:	cmp    r13,rbp
  409c14:	jbe    409cf0 <test_sort_find@@Base+0x1240>
  409c1a:	lea    rsi,[rbp*4+0x0]
  409c22:	lea    rax,[rbx+rsi*1]
  409c26:	cmp    r14,rbp
  409c29:	jbe    409e80 <test_sort_find@@Base+0x13d0>
  409c2f:	mov    edx,DWORD PTR [rax]
  409c31:	add    rax,rdx
  409c34:	je     4097d0 <test_sort_find@@Base+0xd20>
  409c3a:	movsxd rdx,DWORD PTR [rax]
  409c3d:	mov    rdi,rax
  409c40:	sub    rdi,rdx
  409c43:	cmp    WORD PTR [rdi],0xb
  409c47:	jbe    409600 <test_sort_find@@Base+0xb50>
  409c4d:	movzx  edx,WORD PTR [rdi+0xa]
  409c51:	test   dx,dx
  409c54:	je     409600 <test_sort_find@@Base+0xb50>
  409c5a:	add    rax,rdx
  409c5d:	mov    edx,DWORD PTR [rax]
  409c5f:	lea    rcx,[rbp+0x1]
  409c63:	lea    rdi,[rax+rdx*1+0x4]
  409c68:	lea    rax,[rbx+rsi*1+0x4]
  409c6d:	cmp    rcx,r14
  409c70:	jae    409e80 <test_sort_find@@Base+0x13d0>
  409c76:	mov    edx,DWORD PTR [rax]
  409c78:	add    rax,rdx
  409c7b:	je     4097d0 <test_sort_find@@Base+0xd20>
  409c81:	movsxd rdx,DWORD PTR [rax]
  409c84:	mov    rsi,rax
  409c87:	sub    rsi,rdx
  409c8a:	cmp    WORD PTR [rsi],0xb
  409c8e:	jbe    409600 <test_sort_find@@Base+0xb50>
  409c94:	movzx  edx,WORD PTR [rsi+0xa]
  409c98:	test   dx,dx
  409c9b:	je     409600 <test_sort_find@@Base+0xb50>
  409ca1:	add    rax,rdx
  409ca4:	mov    edx,DWORD PTR [rax]
  409ca6:	lea    rsi,[rax+rdx*1+0x4]
  409cab:	test   rsi,rsi
  409cae:	je     409cf0 <test_sort_find@@Base+0x1240>
  409cb0:	mov    r8d,DWORD PTR [rsi-0x4]
  409cb4:	test   rdi,rdi
  409cb7:	je     409d98 <test_sort_find@@Base+0x12e8>
  409cbd:	mov    r15d,DWORD PTR [rdi-0x4]
  409cc1:	mov    QWORD PTR [rsp+0x18],rcx
  409cc6:	cmp    r8,r15
  409cc9:	mov    rdx,r15
  409ccc:	cmovbe rdx,r8
  409cd0:	mov    QWORD PTR [rsp+0x10],r8
  409cd5:	call   404160 <strncmp@plt>
  409cda:	test   eax,eax
  409cdc:	mov    r8,QWORD PTR [rsp+0x10]
  409ce1:	mov    rcx,QWORD PTR [rsp+0x18]
  409ce6:	je     409d9b <test_sort_find@@Base+0x12eb>
  409cec:	cmovs  rbp,rcx
  409cf0:	lea    rcx,[rbx+r12*4]
  409cf4:	cmp    r14,r12
  409cf7:	jbe    4097f0 <test_sort_find@@Base+0xd40>
  409cfd:	mov    eax,DWORD PTR [rcx]
  409cff:	mov    r15,rax
  409d02:	add    rax,rcx
  409d05:	je     4097d0 <test_sort_find@@Base+0xd20>
  409d0b:	movsxd rdx,DWORD PTR [rax]
  409d0e:	mov    rdi,rax
  409d11:	sub    rdi,rdx
  409d14:	cmp    WORD PTR [rdi],0xb
  409d18:	jbe    409600 <test_sort_find@@Base+0xb50>
  409d1e:	movzx  edx,WORD PTR [rdi+0xa]
  409d22:	test   dx,dx
  409d25:	je     409600 <test_sort_find@@Base+0xb50>
  409d2b:	add    rax,rdx
  409d2e:	mov    edx,DWORD PTR [rax]
  409d30:	lea    r8,[rbx+rbp*4]
  409d34:	lea    rdi,[rax+rdx*1+0x4]
  409d39:	cmp    rbp,r14
  409d3c:	jae    4097f0 <test_sort_find@@Base+0xd40>
  409d42:	mov    eax,DWORD PTR [r8]
  409d45:	mov    r14,rax
  409d48:	add    rax,r8
  409d4b:	je     4097d0 <test_sort_find@@Base+0xd20>
  409d51:	movsxd rdx,DWORD PTR [rax]
  409d54:	mov    rsi,rax
  409d57:	sub    rsi,rdx
  409d5a:	cmp    WORD PTR [rsi],0xb
  409d5e:	jbe    409600 <test_sort_find@@Base+0xb50>
  409d64:	movzx  edx,WORD PTR [rsi+0xa]
  409d68:	test   dx,dx
  409d6b:	je     409600 <test_sort_find@@Base+0xb50>
  409d71:	add    rax,rdx
  409d74:	mov    edx,DWORD PTR [rax]
  409d76:	lea    rsi,[rax+rdx*1+0x4]
  409d7b:	test   rsi,rsi
  409d7e:	jne    409b90 <test_sort_find@@Base+0x10e0>
  409d84:	test   r13,r13
  409d87:	jne    409b66 <test_sort_find@@Base+0x10b6>
  409d8d:	jmp    409598 <test_sort_find@@Base+0xae8>
  409d92:	nop    WORD PTR [rax+rax*1+0x0]
  409d98:	xor    r15d,r15d
  409d9b:	cmp    r8,r15
  409d9e:	cmova  rbp,rcx
  409da2:	jmp    409cf0 <test_sort_find@@Base+0x1240>
  409da7:	nop    WORD PTR [rax+rax*1+0x0]
  409db0:	xor    r9d,r9d
  409db3:	cmp    r10,r9
  409db6:	ja     409be6 <test_sort_find@@Base+0x1136>
  409dbc:	test   r13,r13
  409dbf:	jne    409b66 <test_sort_find@@Base+0x10b6>
  409dc5:	jmp    409598 <test_sort_find@@Base+0xae8>
  409dca:	nop    WORD PTR [rax+rax*1+0x0]
  409dd0:	lea    rsi,[rip+0xdc11]        # 4179e8 <_IO_stdin_used@@Base+0x19e8>
  409dd7:	mov    edi,0x1
  409ddc:	xor    eax,eax
  409dde:	call   404220 <__printf_chk@plt>
  409de3:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409deb:	jmp    409598 <test_sort_find@@Base+0xae8>
  409df0:	lea    rsi,[rip+0xdc61]        # 417a58 <_IO_stdin_used@@Base+0x1a58>
  409df7:	mov    edi,0x1
  409dfc:	xor    eax,eax
  409dfe:	call   404220 <__printf_chk@plt>
  409e03:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409e0b:	jmp    409598 <test_sort_find@@Base+0xae8>
  409e10:	lea    rsi,[rip+0xc70d]        # 416524 <_IO_stdin_used@@Base+0x524>
  409e17:	mov    edi,0x1
  409e1c:	xor    eax,eax
  409e1e:	call   404220 <__printf_chk@plt>
  409e23:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409e2b:	jmp    409598 <test_sort_find@@Base+0xae8>
  409e30:	lea    rsi,[rip+0xc76a]        # 4165a1 <_IO_stdin_used@@Base+0x5a1>
  409e37:	mov    edi,0x1
  409e3c:	xor    eax,eax
  409e3e:	call   404220 <__printf_chk@plt>
  409e43:	mov    edx,r12d
  409e46:	lea    rsi,[rip+0xc6ff]        # 41654c <_IO_stdin_used@@Base+0x54c>
  409e4d:	mov    edi,0x1
  409e52:	xor    eax,eax
  409e54:	call   404220 <__printf_chk@plt>
  409e59:	mov    DWORD PTR [rsp+0x38],ebp
  409e5d:	jmp    409598 <test_sort_find@@Base+0xae8>
  409e62:	nop    WORD PTR [rax+rax*1+0x0]
  409e68:	lea    rsi,[rip+0xc6e5]        # 416554 <_IO_stdin_used@@Base+0x554>
  409e6f:	mov    edi,0x1
  409e74:	xor    eax,eax
  409e76:	call   404220 <__printf_chk@plt>
  409e7b:	mov    edx,r13d
  409e7e:	jmp    409e46 <test_sort_find@@Base+0x1396>
  409e80:	call   404a90 <_start@@Base+0x640>
  409e85:	lea    rsi,[rip+0xc5ed]        # 416479 <_IO_stdin_used@@Base+0x479>
  409e8c:	mov    edi,0x1
  409e91:	xor    eax,eax
  409e93:	call   404220 <__printf_chk@plt>
  409e98:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409ea0:	jmp    409598 <test_sort_find@@Base+0xae8>
  409ea5:	lea    rsi,[rip+0xc5eb]        # 416497 <_IO_stdin_used@@Base+0x497>
  409eac:	mov    edi,0x1
  409eb1:	xor    eax,eax
  409eb3:	call   404220 <__printf_chk@plt>
  409eb8:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409ec0:	jmp    409598 <test_sort_find@@Base+0xae8>
  409ec5:	lea    rsi,[rip+0xc5e9]        # 4164b5 <_IO_stdin_used@@Base+0x4b5>
  409ecc:	mov    edi,0x1
  409ed1:	xor    eax,eax
  409ed3:	call   404220 <__printf_chk@plt>
  409ed8:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409ee0:	jmp    409598 <test_sort_find@@Base+0xae8>
  409ee5:	lea    rsi,[rip+0xc5e7]        # 4164d3 <_IO_stdin_used@@Base+0x4d3>
  409eec:	mov    edi,0x1
  409ef1:	xor    eax,eax
  409ef3:	call   404220 <__printf_chk@plt>
  409ef8:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409f00:	jmp    409598 <test_sort_find@@Base+0xae8>
  409f05:	lea    rsi,[rip+0xc62f]        # 41653b <_IO_stdin_used@@Base+0x53b>
  409f0c:	mov    edi,0x1
  409f11:	xor    eax,eax
  409f13:	call   404220 <__printf_chk@plt>
  409f18:	mov    DWORD PTR [rsp+0x38],ebp
  409f1c:	jmp    409598 <test_sort_find@@Base+0xae8>
  409f21:	lea    rsi,[rip+0xdae8]        # 417a10 <_IO_stdin_used@@Base+0x1a10>
  409f28:	mov    edi,0x1
  409f2d:	xor    eax,eax
  409f2f:	call   404220 <__printf_chk@plt>
  409f34:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409f3c:	jmp    409598 <test_sort_find@@Base+0xae8>
  409f41:	lea    rsi,[rip+0xc5a9]        # 4164f1 <_IO_stdin_used@@Base+0x4f1>
  409f48:	mov    edi,0x1
  409f4d:	xor    eax,eax
  409f4f:	call   404220 <__printf_chk@plt>
  409f54:	mov    DWORD PTR [rsp+0x38],0xffffffff
  409f5c:	jmp    409598 <test_sort_find@@Base+0xae8>
  409f61:	call   404e80 <_start@@Base+0xa30>
  409f66:	call   404b80 <_start@@Base+0x730>
  409f6b:	call   404180 <__stack_chk_fail@plt>

0000000000409f70 <test_scan@@Base>:
  409f70:	endbr64 
  409f74:	push   r15
  409f76:	push   r14
  409f78:	push   r13
  409f7a:	push   r12
  409f7c:	push   rbp
  409f7d:	push   rbx
  409f7e:	mov    rbx,rdi
  409f81:	sub    rsp,0x78
  409f85:	mov    rax,QWORD PTR fs:0x28
  409f8e:	mov    QWORD PTR [rsp+0x68],rax
  409f93:	xor    eax,eax
  409f95:	mov    eax,0x304
  409f9a:	mov    DWORD PTR [rsp+0x61],0x3010706
  409fa2:	mov    WORD PTR [rsp+0x65],ax
  409fa7:	mov    BYTE PTR [rsp+0x67],0x2
  409fac:	call   40fc30 <flatcc_builder_reset@@Base>
  409fb1:	xor    ecx,ecx
  409fb3:	xor    edx,edx
  409fb5:	lea    rsi,[rip+0xc17f]        # 41613b <_IO_stdin_used@@Base+0x13b>
  409fbc:	mov    rdi,rbx
  409fbf:	call   410430 <flatcc_builder_start_buffer@@Base>
  409fc4:	test   eax,eax
  409fc6:	jne    409fd5 <test_scan@@Base+0x65>
  409fc8:	mov    esi,0x24
  409fcd:	mov    rdi,rbx
  409fd0:	call   4110d0 <flatcc_builder_start_table@@Base>
  409fd5:	lea    rsi,[rip+0xc177]        # 416153 <_IO_stdin_used@@Base+0x153>
  409fdc:	mov    rdi,rbx
  409fdf:	call   404750 <_start@@Base+0x300>
  409fe4:	lea    rsi,[rsp+0x61]
  409fe9:	mov    r9d,0xffffffff
  409fef:	mov    r8d,0x1
  409ff5:	mov    ecx,0x1
  409ffa:	mov    edx,0x7
  409fff:	mov    rdi,rbx
  40a002:	call   411be0 <flatcc_builder_create_vector@@Base>
  40a007:	mov    ebp,eax
  40a009:	test   eax,eax
  40a00b:	je     40a021 <test_scan@@Base+0xb1>
  40a00d:	mov    esi,0x5
  40a012:	mov    rdi,rbx
  40a015:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40a01a:	test   rax,rax
  40a01d:	je     40a021 <test_scan@@Base+0xb1>
  40a01f:	mov    DWORD PTR [rax],ebp
  40a021:	mov    rdi,rbx
  40a024:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  40a029:	mov    rdi,rbx
  40a02c:	call   411e90 <flatcc_builder_end_offset_vector@@Base>
  40a031:	mov    ebp,eax
  40a033:	test   eax,eax
  40a035:	je     40a04b <test_scan@@Base+0xdb>
  40a037:	mov    esi,0xa
  40a03c:	mov    rdi,rbx
  40a03f:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40a044:	test   rax,rax
  40a047:	je     40a04b <test_scan@@Base+0xdb>
  40a049:	mov    DWORD PTR [rax],ebp
  40a04b:	mov    rdi,rbx
  40a04e:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  40a053:	mov    esi,0x24
  40a058:	mov    rdi,rbx
  40a05b:	call   4110d0 <flatcc_builder_start_table@@Base>
  40a060:	lea    rsi,[rip+0xc282]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40a067:	mov    rdi,rbx
  40a06a:	call   404750 <_start@@Base+0x300>
  40a06f:	mov    edx,0x1
  40a074:	lea    rsi,[rip+0xf5b5]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40a07b:	mov    rdi,rbx
  40a07e:	call   4119c0 <flatcc_builder_check_required@@Base>
  40a083:	test   eax,eax
  40a085:	je     40b67b <test_scan@@Base+0x170b>
  40a08b:	mov    rdi,rbx
  40a08e:	call   411a50 <flatcc_builder_end_table@@Base>
  40a093:	test   eax,eax
  40a095:	je     40a0a1 <test_scan@@Base+0x131>
  40a097:	mov    esi,eax
  40a099:	mov    rdi,rbx
  40a09c:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40a0a1:	mov    esi,0x24
  40a0a6:	mov    rdi,rbx
  40a0a9:	call   4110d0 <flatcc_builder_start_table@@Base>
  40a0ae:	lea    rsi,[rip+0xc23c]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40a0b5:	mov    rdi,rbx
  40a0b8:	call   404750 <_start@@Base+0x300>
  40a0bd:	mov    edx,0x1
  40a0c2:	lea    rsi,[rip+0xf567]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40a0c9:	mov    rdi,rbx
  40a0cc:	call   4119c0 <flatcc_builder_check_required@@Base>
  40a0d1:	test   eax,eax
  40a0d3:	je     40b67b <test_scan@@Base+0x170b>
  40a0d9:	mov    rdi,rbx
  40a0dc:	call   411a50 <flatcc_builder_end_table@@Base>
  40a0e1:	test   eax,eax
  40a0e3:	je     40a0ef <test_scan@@Base+0x17f>
  40a0e5:	mov    esi,eax
  40a0e7:	mov    rdi,rbx
  40a0ea:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40a0ef:	mov    esi,0x24
  40a0f4:	mov    rdi,rbx
  40a0f7:	call   4110d0 <flatcc_builder_start_table@@Base>
  40a0fc:	lea    rsi,[rip+0xc1f4]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a103:	mov    rdi,rbx
  40a106:	call   404750 <_start@@Base+0x300>
  40a10b:	mov    edx,0x1
  40a110:	lea    rsi,[rip+0xf519]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40a117:	mov    rdi,rbx
  40a11a:	call   4119c0 <flatcc_builder_check_required@@Base>
  40a11f:	test   eax,eax
  40a121:	je     40b67b <test_scan@@Base+0x170b>
  40a127:	mov    rdi,rbx
  40a12a:	call   411a50 <flatcc_builder_end_table@@Base>
  40a12f:	test   eax,eax
  40a131:	je     40a13d <test_scan@@Base+0x1cd>
  40a133:	mov    esi,eax
  40a135:	mov    rdi,rbx
  40a138:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40a13d:	mov    esi,0x24
  40a142:	mov    rdi,rbx
  40a145:	call   4110d0 <flatcc_builder_start_table@@Base>
  40a14a:	lea    rsi,[rip+0xc301]        # 416452 <_IO_stdin_used@@Base+0x452>
  40a151:	mov    rdi,rbx
  40a154:	call   404750 <_start@@Base+0x300>
  40a159:	mov    edx,0x1
  40a15e:	lea    rsi,[rip+0xf4cb]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40a165:	mov    rdi,rbx
  40a168:	call   4119c0 <flatcc_builder_check_required@@Base>
  40a16d:	test   eax,eax
  40a16f:	je     40b67b <test_scan@@Base+0x170b>
  40a175:	mov    rdi,rbx
  40a178:	call   411a50 <flatcc_builder_end_table@@Base>
  40a17d:	test   eax,eax
  40a17f:	je     40a18b <test_scan@@Base+0x21b>
  40a181:	mov    esi,eax
  40a183:	mov    rdi,rbx
  40a186:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40a18b:	mov    esi,0x24
  40a190:	mov    rdi,rbx
  40a193:	call   4110d0 <flatcc_builder_start_table@@Base>
  40a198:	lea    rsi,[rip+0xc158]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a19f:	mov    rdi,rbx
  40a1a2:	call   404750 <_start@@Base+0x300>
  40a1a7:	mov    edx,0x1
  40a1ac:	lea    rsi,[rip+0xf47d]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40a1b3:	mov    rdi,rbx
  40a1b6:	call   4119c0 <flatcc_builder_check_required@@Base>
  40a1bb:	test   eax,eax
  40a1bd:	je     40b67b <test_scan@@Base+0x170b>
  40a1c3:	mov    rdi,rbx
  40a1c6:	call   411a50 <flatcc_builder_end_table@@Base>
  40a1cb:	test   eax,eax
  40a1cd:	je     40a1d9 <test_scan@@Base+0x269>
  40a1cf:	mov    esi,eax
  40a1d1:	mov    rdi,rbx
  40a1d4:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40a1d9:	mov    rdi,rbx
  40a1dc:	call   411e90 <flatcc_builder_end_offset_vector@@Base>
  40a1e1:	mov    ebp,eax
  40a1e3:	test   eax,eax
  40a1e5:	je     40a1fb <test_scan@@Base+0x28b>
  40a1e7:	mov    esi,0xb
  40a1ec:	mov    rdi,rbx
  40a1ef:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40a1f4:	test   rax,rax
  40a1f7:	je     40a1fb <test_scan@@Base+0x28b>
  40a1f9:	mov    DWORD PTR [rax],ebp
  40a1fb:	mov    edx,0x1
  40a200:	lea    rsi,[rip+0xf429]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40a207:	mov    rdi,rbx
  40a20a:	call   4119c0 <flatcc_builder_check_required@@Base>
  40a20f:	test   eax,eax
  40a211:	je     40b67b <test_scan@@Base+0x170b>
  40a217:	mov    rdi,rbx
  40a21a:	call   411a50 <flatcc_builder_end_table@@Base>
  40a21f:	mov    esi,eax
  40a221:	mov    rdi,rbx
  40a224:	call   410510 <flatcc_builder_end_buffer@@Base>
  40a229:	lea    rsi,[rsp+0x58]
  40a22e:	mov    rdi,rbx
  40a231:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40a236:	mov    QWORD PTR [rsp+0x10],rax
  40a23b:	test   rax,rax
  40a23e:	je     40a249 <test_scan@@Base+0x2d9>
  40a240:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40a247:	je     40a250 <test_scan@@Base+0x2e0>
  40a249:	call   404a60 <_start@@Base+0x610>
  40a24e:	xchg   ax,ax
  40a250:	mov    rbx,rax
  40a253:	mov    eax,DWORD PTR [rax]
  40a255:	add    rax,rbx
  40a258:	je     40a249 <test_scan@@Base+0x2d9>
  40a25a:	movsxd rdx,DWORD PTR [rax]
  40a25d:	mov    rbx,rax
  40a260:	sub    rbx,rdx
  40a263:	cmp    WORD PTR [rbx],0x1b
  40a267:	jbe    40adef <test_scan@@Base+0xe7f>
  40a26d:	movzx  ecx,WORD PTR [rbx+0x1a]
  40a271:	test   cx,cx
  40a274:	je     40adef <test_scan@@Base+0xe7f>
  40a27a:	add    rcx,rax
  40a27d:	mov    esi,DWORD PTR [rcx]
  40a27f:	lea    r14,[rcx+rsi*1+0x4]
  40a284:	test   r14,r14
  40a287:	je     40adef <test_scan@@Base+0xe7f>
  40a28d:	movzx  ecx,WORD PTR [rbx+0xe]
  40a291:	test   cx,cx
  40a294:	je     40b6a4 <test_scan@@Base+0x1734>
  40a29a:	add    rcx,rax
  40a29d:	mov    esi,DWORD PTR [rcx]
  40a29f:	lea    rbp,[rcx+rsi*1+0x4]
  40a2a4:	test   rbp,rbp
  40a2a7:	je     40b6a4 <test_scan@@Base+0x1734>
  40a2ad:	movzx  edx,WORD PTR [rbx+0x18]
  40a2b1:	test   dx,dx
  40a2b4:	je     40b685 <test_scan@@Base+0x1715>
  40a2ba:	add    rax,rdx
  40a2bd:	mov    edx,DWORD PTR [rax]
  40a2bf:	lea    rax,[rax+rdx*1+0x4]
  40a2c4:	mov    QWORD PTR [rsp+0x18],rax
  40a2c9:	test   rax,rax
  40a2cc:	je     40b685 <test_scan@@Base+0x1715>
  40a2d2:	mov    ebx,DWORD PTR [r14-0x4]
  40a2d6:	test   rbx,rbx
  40a2d9:	je     40a395 <test_scan@@Base+0x425>
  40a2df:	mov    eax,DWORD PTR [r14]
  40a2e2:	add    rax,r14
  40a2e5:	mov    rsi,rax
  40a2e8:	mov    QWORD PTR [rsp],rax
  40a2ec:	je     40ae10 <test_scan@@Base+0xea0>
  40a2f2:	movsxd rdi,DWORD PTR [rax]
  40a2f5:	sub    rax,rdi
  40a2f8:	mov    QWORD PTR [rsp+0x38],rdi
  40a2fd:	movzx  edi,WORD PTR [rax]
  40a300:	mov    WORD PTR [rsp+0x36],di
  40a305:	cmp    di,0xb
  40a309:	jbe    40add0 <test_scan@@Base+0xe60>
  40a30f:	movzx  r13d,WORD PTR [rax+0xa]
  40a314:	test   r13w,r13w
  40a318:	je     40add0 <test_scan@@Base+0xe60>
  40a31e:	lea    rax,[r14+0x4]
  40a322:	mov    QWORD PTR [rsp+0x8],rax
  40a327:	mov    QWORD PTR [rsp+0x28],rax
  40a32c:	movzx  ecx,r13w
  40a330:	xor    edx,edx
  40a332:	lea    r8,[rip+0xbfb8]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40a339:	jmp    40a36f <test_scan@@Base+0x3ff>
  40a33b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a340:	mov    esi,DWORD PTR [rax]
  40a342:	add    rsi,rax
  40a345:	je     40ae10 <test_scan@@Base+0xea0>
  40a34b:	movsxd rcx,DWORD PTR [rsi]
  40a34e:	mov    rdi,rsi
  40a351:	sub    rdi,rcx
  40a354:	cmp    WORD PTR [rdi],0xb
  40a358:	jbe    40add0 <test_scan@@Base+0xe60>
  40a35e:	movzx  ecx,WORD PTR [rdi+0xa]
  40a362:	add    rax,0x4
  40a366:	test   cx,cx
  40a369:	je     40add0 <test_scan@@Base+0xe60>
  40a36f:	add    rsi,rcx
  40a372:	mov    ecx,DWORD PTR [rsi]
  40a374:	mov    rdi,r8
  40a377:	lea    rsi,[rsi+rcx*1+0x4]
  40a37c:	mov    ecx,0x6
  40a381:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a383:	seta   cl
  40a386:	sbb    cl,0x0
  40a389:	test   cl,cl
  40a38b:	je     40a3e0 <test_scan@@Base+0x470>
  40a38d:	inc    rdx
  40a390:	cmp    rdx,rbx
  40a393:	jne    40a340 <test_scan@@Base+0x3d0>
  40a395:	lea    rsi,[rip+0xd74c]        # 417ae8 <_IO_stdin_used@@Base+0x1ae8>
  40a39c:	mov    edi,0x1
  40a3a1:	xor    eax,eax
  40a3a3:	call   404220 <__printf_chk@plt>
  40a3a8:	mov    r12d,0xffffffff
  40a3ae:	xchg   ax,ax
  40a3b0:	mov    rdi,QWORD PTR [rsp+0x10]
  40a3b5:	call   413290 <flatcc_builder_aligned_free@@Base>
  40a3ba:	mov    rbx,QWORD PTR [rsp+0x68]
  40a3bf:	xor    rbx,QWORD PTR fs:0x28
  40a3c8:	mov    eax,r12d
  40a3cb:	jne    40b680 <test_scan@@Base+0x1710>
  40a3d1:	add    rsp,0x78
  40a3d5:	pop    rbx
  40a3d6:	pop    rbp
  40a3d7:	pop    r12
  40a3d9:	pop    r13
  40a3db:	pop    r14
  40a3dd:	pop    r15
  40a3df:	ret    
  40a3e0:	cmp    rdx,0x1
  40a3e4:	jne    40a395 <test_scan@@Base+0x425>
  40a3e6:	lea    r15,[rbx-0x1]
  40a3ea:	lea    r12,[r14+rbx*4-0x4]
  40a3ef:	mov    rax,r12
  40a3f2:	mov    rdx,r15
  40a3f5:	jmp    40a45d <test_scan@@Base+0x4ed>
  40a3f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a400:	cmp    rdx,rbx
  40a403:	jae    40ae8e <test_scan@@Base+0xf1e>
  40a409:	mov    ecx,DWORD PTR [rax]
  40a40b:	add    rcx,rax
  40a40e:	je     40ae10 <test_scan@@Base+0xea0>
  40a414:	movsxd rsi,DWORD PTR [rcx]
  40a417:	mov    rdi,rcx
  40a41a:	sub    rdi,rsi
  40a41d:	cmp    WORD PTR [rdi],0xb
  40a421:	jbe    40add0 <test_scan@@Base+0xe60>
  40a427:	movzx  esi,WORD PTR [rdi+0xa]
  40a42b:	test   si,si
  40a42e:	je     40add0 <test_scan@@Base+0xe60>
  40a434:	add    rcx,rsi
  40a437:	mov    esi,DWORD PTR [rcx]
  40a439:	mov    rdi,r8
  40a43c:	lea    rsi,[rcx+rsi*1+0x4]
  40a441:	mov    ecx,0x6
  40a446:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a448:	lea    rsi,[rdx-0x1]
  40a44c:	seta   cl
  40a44f:	sbb    cl,0x0
  40a452:	sub    rax,0x4
  40a456:	test   cl,cl
  40a458:	je     40a488 <test_scan@@Base+0x518>
  40a45a:	mov    rdx,rsi
  40a45d:	cmp    rdx,0xffffffffffffffff
  40a461:	jne    40a400 <test_scan@@Base+0x490>
  40a463:	lea    rsi,[rip+0xd69e]        # 417b08 <_IO_stdin_used@@Base+0x1b08>
  40a46a:	mov    edi,0x1
  40a46f:	xor    eax,eax
  40a471:	call   404220 <__printf_chk@plt>
  40a476:	mov    r12d,0xffffffff
  40a47c:	jmp    40a3b0 <test_scan@@Base+0x440>
  40a481:	nop    DWORD PTR [rax+0x0]
  40a488:	cmp    rdx,0x1
  40a48c:	jne    40a463 <test_scan@@Base+0x4f3>
  40a48e:	mov    rax,QWORD PTR [rsp+0x8]
  40a493:	movzx  ecx,r13w
  40a497:	mov    rsi,QWORD PTR [rsp]
  40a49b:	xor    edx,edx
  40a49d:	lea    r8,[rip+0xc072]        # 416516 <_IO_stdin_used@@Base+0x516>
  40a4a4:	mov    r11d,0x5
  40a4aa:	mov    r10d,0x7
  40a4b0:	jmp    40a4f6 <test_scan@@Base+0x586>
  40a4b2:	nop    WORD PTR [rax+rax*1+0x0]
  40a4b8:	inc    rdx
  40a4bb:	cmp    rdx,rbx
  40a4be:	je     40ae30 <test_scan@@Base+0xec0>
  40a4c4:	mov    ecx,DWORD PTR [rax]
  40a4c6:	mov    rsi,rcx
  40a4c9:	add    rsi,rax
  40a4cc:	je     40ae10 <test_scan@@Base+0xea0>
  40a4d2:	movsxd rcx,DWORD PTR [rsi]
  40a4d5:	mov    rdi,rsi
  40a4d8:	sub    rdi,rcx
  40a4db:	cmp    WORD PTR [rdi],0xb
  40a4df:	jbe    40add0 <test_scan@@Base+0xe60>
  40a4e5:	movzx  ecx,WORD PTR [rdi+0xa]
  40a4e9:	add    rax,0x4
  40a4ed:	test   cx,cx
  40a4f0:	je     40add0 <test_scan@@Base+0xe60>
  40a4f6:	add    rcx,rsi
  40a4f9:	mov    esi,DWORD PTR [rcx]
  40a4fb:	lea    rsi,[rcx+rsi*1+0x4]
  40a500:	test   rsi,rsi
  40a503:	je     40a4b8 <test_scan@@Base+0x548>
  40a505:	mov    ecx,DWORD PTR [rsi-0x4]
  40a508:	mov    rdi,r8
  40a50b:	cmp    rcx,0x5
  40a50f:	mov    r9,rcx
  40a512:	cmova  rcx,r11
  40a516:	cmp    rcx,0x7
  40a51a:	cmovg  rcx,r10
  40a51e:	cmp    rcx,rcx
  40a521:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a523:	seta   cl
  40a526:	sbb    cl,0x0
  40a529:	test   cl,cl
  40a52b:	jne    40a4b8 <test_scan@@Base+0x548>
  40a52d:	cmp    r9d,0x5
  40a531:	jne    40a4b8 <test_scan@@Base+0x548>
  40a533:	cmp    rdx,0x1
  40a537:	jne    40ae30 <test_scan@@Base+0xec0>
  40a53d:	mov    rdx,r12
  40a540:	mov    rax,r15
  40a543:	mov    r11d,0x5
  40a549:	mov    r10d,0x7
  40a54f:	jmp    40a56c <test_scan@@Base+0x5fc>
  40a551:	nop    DWORD PTR [rax+0x0]
  40a558:	lea    rcx,[rax-0x1]
  40a55c:	sub    rdx,0x4
  40a560:	test   rax,rax
  40a563:	je     40ae30 <test_scan@@Base+0xec0>
  40a569:	mov    rax,rcx
  40a56c:	cmp    rax,rbx
  40a56f:	jae    40ae8e <test_scan@@Base+0xf1e>
  40a575:	mov    ecx,DWORD PTR [rdx]
  40a577:	add    rcx,rdx
  40a57a:	je     40ae10 <test_scan@@Base+0xea0>
  40a580:	movsxd rsi,DWORD PTR [rcx]
  40a583:	mov    rdi,rcx
  40a586:	sub    rdi,rsi
  40a589:	cmp    WORD PTR [rdi],0xb
  40a58d:	jbe    40add0 <test_scan@@Base+0xe60>
  40a593:	movzx  esi,WORD PTR [rdi+0xa]
  40a597:	test   si,si
  40a59a:	je     40add0 <test_scan@@Base+0xe60>
  40a5a0:	add    rcx,rsi
  40a5a3:	mov    esi,DWORD PTR [rcx]
  40a5a5:	lea    rsi,[rcx+rsi*1+0x4]
  40a5aa:	test   rsi,rsi
  40a5ad:	je     40a558 <test_scan@@Base+0x5e8>
  40a5af:	mov    ecx,DWORD PTR [rsi-0x4]
  40a5b2:	mov    rdi,r8
  40a5b5:	cmp    rcx,0x5
  40a5b9:	mov    r9,rcx
  40a5bc:	cmova  rcx,r11
  40a5c0:	cmp    rcx,0x7
  40a5c4:	cmovg  rcx,r10
  40a5c8:	cmp    rcx,rcx
  40a5cb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a5cd:	seta   cl
  40a5d0:	sbb    cl,0x0
  40a5d3:	test   cl,cl
  40a5d5:	jne    40a558 <test_scan@@Base+0x5e8>
  40a5d7:	cmp    r9d,0x5
  40a5db:	jne    40a558 <test_scan@@Base+0x5e8>
  40a5e1:	cmp    rax,0x1
  40a5e5:	jne    40ae30 <test_scan@@Base+0xec0>
  40a5eb:	lea    rcx,[rip+0xbcff]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40a5f2:	mov    rdx,0xffffffffffffffff
  40a5f9:	mov    esi,0x2
  40a5fe:	mov    rdi,r14
  40a601:	call   405d50 <_start@@Base+0x1900>
  40a606:	cmp    rax,0xffffffffffffffff
  40a60a:	jne    40b437 <test_scan@@Base+0x14c7>
  40a610:	mov    rax,QWORD PTR [rsp+0x8]
  40a615:	movzx  ecx,r13w
  40a619:	mov    rsi,QWORD PTR [rsp]
  40a61d:	xor    edx,edx
  40a61f:	lea    r8,[rip+0xbef7]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40a626:	jmp    40a667 <test_scan@@Base+0x6f7>
  40a628:	nop    DWORD PTR [rax+rax*1+0x0]
  40a630:	inc    rdx
  40a633:	cmp    rdx,rbx
  40a636:	jae    40a6a8 <test_scan@@Base+0x738>
  40a638:	mov    esi,DWORD PTR [rax]
  40a63a:	add    rsi,rax
  40a63d:	je     40ae10 <test_scan@@Base+0xea0>
  40a643:	movsxd rcx,DWORD PTR [rsi]
  40a646:	mov    rdi,rsi
  40a649:	sub    rdi,rcx
  40a64c:	cmp    WORD PTR [rdi],0xb
  40a650:	jbe    40add0 <test_scan@@Base+0xe60>
  40a656:	movzx  ecx,WORD PTR [rdi+0xa]
  40a65a:	add    rax,0x4
  40a65e:	test   cx,cx
  40a661:	je     40add0 <test_scan@@Base+0xe60>
  40a667:	add    rsi,rcx
  40a66a:	mov    ecx,DWORD PTR [rsi]
  40a66c:	mov    rdi,r8
  40a66f:	lea    rsi,[rsi+rcx*1+0x4]
  40a674:	mov    ecx,0x7
  40a679:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a67b:	seta   cl
  40a67e:	sbb    cl,0x0
  40a681:	test   cl,cl
  40a683:	jne    40a630 <test_scan@@Base+0x6c0>
  40a685:	lea    rsi,[rip+0xbe98]        # 416524 <_IO_stdin_used@@Base+0x524>
  40a68c:	mov    edi,0x1
  40a691:	xor    eax,eax
  40a693:	call   404220 <__printf_chk@plt>
  40a698:	mov    r12d,0xffffffff
  40a69e:	jmp    40a3b0 <test_scan@@Base+0x440>
  40a6a3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6a8:	mov    rdx,QWORD PTR [rsp+0x8]
  40a6ad:	movzx  ecx,r13w
  40a6b1:	mov    rsi,QWORD PTR [rsp]
  40a6b5:	xor    eax,eax
  40a6b7:	lea    r8,[rip+0xbc2b]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40a6be:	jmp    40a6fb <test_scan@@Base+0x78b>
  40a6c0:	inc    rax
  40a6c3:	cmp    rax,rbx
  40a6c6:	jae    40b5d8 <test_scan@@Base+0x1668>
  40a6cc:	mov    esi,DWORD PTR [rdx]
  40a6ce:	add    rsi,rdx
  40a6d1:	je     40ae10 <test_scan@@Base+0xea0>
  40a6d7:	movsxd rcx,DWORD PTR [rsi]
  40a6da:	mov    rdi,rsi
  40a6dd:	sub    rdi,rcx
  40a6e0:	cmp    WORD PTR [rdi],0xb
  40a6e4:	jbe    40add0 <test_scan@@Base+0xe60>
  40a6ea:	movzx  ecx,WORD PTR [rdi+0xa]
  40a6ee:	add    rdx,0x4
  40a6f2:	test   cx,cx
  40a6f5:	je     40add0 <test_scan@@Base+0xe60>
  40a6fb:	add    rsi,rcx
  40a6fe:	mov    ecx,DWORD PTR [rsi]
  40a700:	mov    rdi,r8
  40a703:	lea    rsi,[rsi+rcx*1+0x4]
  40a708:	mov    ecx,0x8
  40a70d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a70f:	seta   cl
  40a712:	sbb    cl,0x0
  40a715:	test   cl,cl
  40a717:	jne    40a6c0 <test_scan@@Base+0x750>
  40a719:	test   rax,rax
  40a71c:	jne    40b5d8 <test_scan@@Base+0x1668>
  40a722:	mov    rdx,QWORD PTR [rsp+0x8]
  40a727:	mov    rcx,QWORD PTR [rsp]
  40a72b:	lea    r8,[rip+0xbbc5]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a732:	jmp    40a775 <test_scan@@Base+0x805>
  40a734:	nop    DWORD PTR [rax+0x0]
  40a738:	inc    rax
  40a73b:	cmp    rax,rbx
  40a73e:	jae    40a80a <test_scan@@Base+0x89a>
  40a744:	mov    ecx,DWORD PTR [rdx]
  40a746:	add    rcx,rdx
  40a749:	je     40ae10 <test_scan@@Base+0xea0>
  40a74f:	movsxd rsi,DWORD PTR [rcx]
  40a752:	mov    rdi,rcx
  40a755:	sub    rdi,rsi
  40a758:	cmp    WORD PTR [rdi],0xb
  40a75c:	jbe    40add0 <test_scan@@Base+0xe60>
  40a762:	movzx  r13d,WORD PTR [rdi+0xa]
  40a767:	add    rdx,0x4
  40a76b:	test   r13w,r13w
  40a76f:	je     40add0 <test_scan@@Base+0xe60>
  40a775:	add    rcx,r13
  40a778:	mov    esi,DWORD PTR [rcx]
  40a77a:	mov    rdi,r8
  40a77d:	lea    rsi,[rcx+rsi*1+0x4]
  40a782:	mov    ecx,0x9
  40a787:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a789:	seta   cl
  40a78c:	sbb    cl,0x0
  40a78f:	test   cl,cl
  40a791:	jne    40a738 <test_scan@@Base+0x7c8>
  40a793:	cmp    rax,0x2
  40a797:	jne    40a80a <test_scan@@Base+0x89a>
  40a799:	mov    rax,r12
  40a79c:	mov    rdx,r15
  40a79f:	jmp    40a7ab <test_scan@@Base+0x83b>
  40a7a1:	nop    DWORD PTR [rax+0x0]
  40a7a8:	mov    rdx,rcx
  40a7ab:	cmp    rdx,rbx
  40a7ae:	jae    40ae8e <test_scan@@Base+0xf1e>
  40a7b4:	mov    ecx,DWORD PTR [rax]
  40a7b6:	add    rcx,rax
  40a7b9:	je     40ae10 <test_scan@@Base+0xea0>
  40a7bf:	movsxd rsi,DWORD PTR [rcx]
  40a7c2:	mov    rdi,rcx
  40a7c5:	sub    rdi,rsi
  40a7c8:	cmp    WORD PTR [rdi],0xb
  40a7cc:	jbe    40add0 <test_scan@@Base+0xe60>
  40a7d2:	movzx  esi,WORD PTR [rdi+0xa]
  40a7d6:	test   si,si
  40a7d9:	je     40add0 <test_scan@@Base+0xe60>
  40a7df:	add    rcx,rsi
  40a7e2:	mov    esi,DWORD PTR [rcx]
  40a7e4:	mov    rdi,r8
  40a7e7:	lea    rsi,[rcx+rsi*1+0x4]
  40a7ec:	mov    ecx,0x9
  40a7f1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a7f3:	seta   cl
  40a7f6:	sbb    cl,0x0
  40a7f9:	test   cl,cl
  40a7fb:	je     40a830 <test_scan@@Base+0x8c0>
  40a7fd:	lea    rcx,[rdx-0x1]
  40a801:	sub    rax,0x4
  40a805:	test   rdx,rdx
  40a808:	jne    40a7a8 <test_scan@@Base+0x838>
  40a80a:	lea    rsi,[rip+0xbd90]        # 4165a1 <_IO_stdin_used@@Base+0x5a1>
  40a811:	mov    edi,0x1
  40a816:	xor    eax,eax
  40a818:	call   404220 <__printf_chk@plt>
  40a81d:	mov    r12d,0xffffffff
  40a823:	jmp    40a3b0 <test_scan@@Base+0x440>
  40a828:	nop    DWORD PTR [rax+rax*1+0x0]
  40a830:	cmp    rdx,0x4
  40a834:	jne    40a80a <test_scan@@Base+0x89a>
  40a836:	mov    rax,r15
  40a839:	lea    r13,[rip+0xbd33]        # 416573 <_IO_stdin_used@@Base+0x573>
  40a840:	mov    r9d,0x8
  40a846:	mov    r8d,0xb
  40a84c:	jmp    40a864 <test_scan@@Base+0x8f4>
  40a84e:	xchg   ax,ax
  40a850:	lea    rdx,[rax-0x1]
  40a854:	sub    r12,0x4
  40a858:	test   rax,rax
  40a85b:	je     40ae50 <test_scan@@Base+0xee0>
  40a861:	mov    rax,rdx
  40a864:	cmp    rax,rbx
  40a867:	jae    40ae8e <test_scan@@Base+0xf1e>
  40a86d:	mov    edx,DWORD PTR [r12]
  40a871:	add    rdx,r12
  40a874:	je     40ae10 <test_scan@@Base+0xea0>
  40a87a:	movsxd rcx,DWORD PTR [rdx]
  40a87d:	mov    rdi,rdx
  40a880:	sub    rdi,rcx
  40a883:	cmp    WORD PTR [rdi],0xb
  40a887:	jbe    40add0 <test_scan@@Base+0xe60>
  40a88d:	movzx  ecx,WORD PTR [rdi+0xa]
  40a891:	test   cx,cx
  40a894:	je     40add0 <test_scan@@Base+0xe60>
  40a89a:	add    rdx,rcx
  40a89d:	mov    ecx,DWORD PTR [rdx]
  40a89f:	lea    rsi,[rdx+rcx*1+0x4]
  40a8a4:	test   rsi,rsi
  40a8a7:	je     40a850 <test_scan@@Base+0x8e0>
  40a8a9:	mov    ecx,DWORD PTR [rsi-0x4]
  40a8ac:	mov    rdi,r13
  40a8af:	cmp    rcx,0x8
  40a8b3:	mov    rdx,rcx
  40a8b6:	cmova  rcx,r9
  40a8ba:	cmp    rcx,0xb
  40a8be:	cmovg  rcx,r8
  40a8c2:	cmp    rcx,rcx
  40a8c5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a8c7:	seta   cl
  40a8ca:	sbb    cl,0x0
  40a8cd:	test   cl,cl
  40a8cf:	jne    40a850 <test_scan@@Base+0x8e0>
  40a8d5:	cmp    edx,0x8
  40a8d8:	jne    40a850 <test_scan@@Base+0x8e0>
  40a8de:	cmp    rax,0x4
  40a8e2:	jne    40ae50 <test_scan@@Base+0xee0>
  40a8e8:	cmp    rbx,0x3
  40a8ec:	mov    eax,0x3
  40a8f1:	cmovbe rax,rbx
  40a8f5:	mov    r9d,0x8
  40a8fb:	mov    r8d,0xb
  40a901:	nop    DWORD PTR [rax+0x0]
  40a908:	dec    rax
  40a90b:	je     40ae50 <test_scan@@Base+0xee0>
  40a911:	lea    rdx,[r14+rax*4]
  40a915:	cmp    rax,rbx
  40a918:	jae    40ae8e <test_scan@@Base+0xf1e>
  40a91e:	mov    ecx,DWORD PTR [r14+rax*4]
  40a922:	add    rdx,rcx
  40a925:	je     40ae10 <test_scan@@Base+0xea0>
  40a92b:	movsxd rcx,DWORD PTR [rdx]
  40a92e:	mov    rdi,rdx
  40a931:	sub    rdi,rcx
  40a934:	cmp    WORD PTR [rdi],0xb
  40a938:	jbe    40add0 <test_scan@@Base+0xe60>
  40a93e:	movzx  ecx,WORD PTR [rdi+0xa]
  40a942:	test   cx,cx
  40a945:	je     40add0 <test_scan@@Base+0xe60>
  40a94b:	add    rdx,rcx
  40a94e:	mov    ecx,DWORD PTR [rdx]
  40a950:	lea    rsi,[rdx+rcx*1+0x4]
  40a955:	test   rsi,rsi
  40a958:	je     40a908 <test_scan@@Base+0x998>
  40a95a:	mov    ecx,DWORD PTR [rsi-0x4]
  40a95d:	mov    rdi,r13
  40a960:	cmp    rcx,0x8
  40a964:	mov    rdx,rcx
  40a967:	cmova  rcx,r9
  40a96b:	cmp    rcx,0xb
  40a96f:	cmovg  rcx,r8
  40a973:	cmp    rcx,rcx
  40a976:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a978:	seta   cl
  40a97b:	sbb    cl,0x0
  40a97e:	test   cl,cl
  40a980:	jne    40a908 <test_scan@@Base+0x998>
  40a982:	cmp    edx,0x8
  40a985:	jne    40a908 <test_scan@@Base+0x998>
  40a987:	cmp    rax,0x2
  40a98b:	jne    40ae50 <test_scan@@Base+0xee0>
  40a991:	lea    rcx,[rip+0xb95f]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a998:	mov    rdx,0xffffffffffffffff
  40a99f:	mov    esi,0x2
  40a9a4:	mov    rdi,r14
  40a9a7:	call   405d50 <_start@@Base+0x1900>
  40a9ac:	cmp    rax,0x2
  40a9b0:	jne    40ae70 <test_scan@@Base+0xf00>
  40a9b6:	cmp    rbx,0x2
  40a9ba:	je     40ae70 <test_scan@@Base+0xf00>
  40a9c0:	mov    edx,DWORD PTR [r14+0x8]
  40a9c4:	lea    rsi,[r14+rdx*1+0x8]
  40a9c9:	test   rsi,rsi
  40a9cc:	je     40ae10 <test_scan@@Base+0xea0>
  40a9d2:	movsxd rdx,DWORD PTR [rsi]
  40a9d5:	mov    rdi,rsi
  40a9d8:	sub    rdi,rdx
  40a9db:	cmp    WORD PTR [rdi],0xb
  40a9df:	jbe    40add0 <test_scan@@Base+0xe60>
  40a9e5:	movzx  ecx,WORD PTR [rdi+0xa]
  40a9e9:	test   cx,cx
  40a9ec:	je     40add0 <test_scan@@Base+0xe60>
  40a9f2:	lea    rdx,[r14+0xc]
  40a9f6:	mov    r10d,0x8
  40a9fc:	mov    r9d,0xb
  40aa02:	jmp    40aa43 <test_scan@@Base+0xad3>
  40aa04:	nop    DWORD PTR [rax+0x0]
  40aa08:	inc    rax
  40aa0b:	cmp    rax,rbx
  40aa0e:	je     40ae70 <test_scan@@Base+0xf00>
  40aa14:	mov    esi,DWORD PTR [rdx]
  40aa16:	add    rsi,rdx
  40aa19:	je     40ae10 <test_scan@@Base+0xea0>
  40aa1f:	movsxd rcx,DWORD PTR [rsi]
  40aa22:	mov    rdi,rsi
  40aa25:	sub    rdi,rcx
  40aa28:	cmp    WORD PTR [rdi],0xb
  40aa2c:	jbe    40add0 <test_scan@@Base+0xe60>
  40aa32:	movzx  ecx,WORD PTR [rdi+0xa]
  40aa36:	add    rdx,0x4
  40aa3a:	test   cx,cx
  40aa3d:	je     40add0 <test_scan@@Base+0xe60>
  40aa43:	add    rsi,rcx
  40aa46:	mov    ecx,DWORD PTR [rsi]
  40aa48:	lea    rsi,[rsi+rcx*1+0x4]
  40aa4d:	test   rsi,rsi
  40aa50:	je     40aa08 <test_scan@@Base+0xa98>
  40aa52:	mov    ecx,DWORD PTR [rsi-0x4]
  40aa55:	mov    rdi,r13
  40aa58:	cmp    rcx,0x8
  40aa5c:	mov    r8,rcx
  40aa5f:	cmova  rcx,r10
  40aa63:	cmp    rcx,0xb
  40aa67:	cmovg  rcx,r9
  40aa6b:	cmp    rcx,rcx
  40aa6e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40aa70:	seta   r12b
  40aa74:	sbb    r12b,0x0
  40aa78:	movsx  r12d,r12b
  40aa7c:	test   r12d,r12d
  40aa7f:	jne    40aa08 <test_scan@@Base+0xa98>
  40aa81:	cmp    r8d,0x8
  40aa85:	jne    40aa08 <test_scan@@Base+0xa98>
  40aa87:	cmp    rax,0x2
  40aa8b:	jne    40ae70 <test_scan@@Base+0xf00>
  40aa91:	lea    rcx,[rip+0xb85f]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40aa98:	mov    rdx,0xffffffffffffffff
  40aa9f:	mov    esi,0x3
  40aaa4:	mov    rdi,r14
  40aaa7:	call   405d50 <_start@@Base+0x1900>
  40aaac:	mov    r13,rax
  40aaaf:	cmp    rax,0x4
  40aab3:	jne    40b455 <test_scan@@Base+0x14e5>
  40aab9:	lea    rcx,[rip+0xba5d]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40aac0:	mov    edx,0x3
  40aac5:	mov    esi,0x1
  40aaca:	mov    rdi,r14
  40aacd:	call   405d50 <_start@@Base+0x1900>
  40aad2:	mov    QWORD PTR [rsp+0x20],rax
  40aad7:	cmp    rax,0xffffffffffffffff
  40aadb:	jne    40b490 <test_scan@@Base+0x1520>
  40aae1:	lea    rcx,[rip+0xb801]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40aae8:	mov    edx,0x3
  40aaed:	mov    esi,0x1
  40aaf2:	mov    rdi,r14
  40aaf5:	call   405d50 <_start@@Base+0x1900>
  40aafa:	mov    QWORD PTR [rsp+0x40],rax
  40aaff:	cmp    rax,0xffffffffffffffff
  40ab03:	jne    40b473 <test_scan@@Base+0x1503>
  40ab09:	lea    rcx,[rip+0xb7e1]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ab10:	mov    edx,0x3
  40ab15:	mov    esi,0x1
  40ab1a:	mov    rdi,r14
  40ab1d:	call   405d50 <_start@@Base+0x1900>
  40ab22:	cmp    rax,0x1
  40ab26:	jne    40b4cb <test_scan@@Base+0x155b>
  40ab2c:	lea    rcx,[rip+0xb7c4]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40ab33:	mov    edx,0x3
  40ab38:	mov    esi,0x1
  40ab3d:	mov    rdi,r14
  40ab40:	call   405d50 <_start@@Base+0x1900>
  40ab45:	cmp    rax,0x2
  40ab49:	jne    40b4ae <test_scan@@Base+0x153e>
  40ab4f:	lea    rcx,[rip+0xb8fc]        # 416452 <_IO_stdin_used@@Base+0x452>
  40ab56:	mov    edx,0x3
  40ab5b:	mov    esi,0x1
  40ab60:	mov    rdi,r14
  40ab63:	call   405d50 <_start@@Base+0x1900>
  40ab68:	cmp    rax,0xffffffffffffffff
  40ab6c:	jne    40b506 <test_scan@@Base+0x1596>
  40ab72:	lea    rcx,[rip+0xb9a4]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40ab79:	mov    edx,0x3
  40ab7e:	mov    esi,0x1
  40ab83:	mov    rdi,r14
  40ab86:	call   405e60 <_start@@Base+0x1a10>
  40ab8b:	mov    QWORD PTR [rsp+0x40],rax
  40ab90:	cmp    rax,0xffffffffffffffff
  40ab94:	jne    40b4e8 <test_scan@@Base+0x1578>
  40ab9a:	lea    rcx,[rip+0xb748]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40aba1:	mov    edx,0x3
  40aba6:	mov    esi,0x1
  40abab:	mov    rdi,r14
  40abae:	call   405e60 <_start@@Base+0x1a10>
  40abb3:	mov    QWORD PTR [rsp+0x20],rax
  40abb8:	cmp    rax,0xffffffffffffffff
  40abbc:	jne    40b541 <test_scan@@Base+0x15d1>
  40abc2:	lea    rcx,[rip+0xb728]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40abc9:	mov    edx,0x3
  40abce:	mov    esi,0x1
  40abd3:	mov    rdi,r14
  40abd6:	call   405e60 <_start@@Base+0x1a10>
  40abdb:	cmp    rax,0x1
  40abdf:	jne    40b524 <test_scan@@Base+0x15b4>
  40abe5:	lea    rcx,[rip+0xb70b]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40abec:	mov    edx,0x3
  40abf1:	mov    esi,0x1
  40abf6:	mov    rdi,r14
  40abf9:	call   405e60 <_start@@Base+0x1a10>
  40abfe:	cmp    rax,0x2
  40ac02:	jne    40b57b <test_scan@@Base+0x160b>
  40ac08:	lea    rcx,[rip+0xb843]        # 416452 <_IO_stdin_used@@Base+0x452>
  40ac0f:	mov    edx,0x3
  40ac14:	mov    esi,0x1
  40ac19:	mov    rdi,r14
  40ac1c:	call   405e60 <_start@@Base+0x1a10>
  40ac21:	cmp    rax,0xffffffffffffffff
  40ac25:	jne    40b55e <test_scan@@Base+0x15ee>
  40ac2b:	xor    edx,edx
  40ac2d:	xor    esi,esi
  40ac2f:	lea    rcx,[rip+0xb6b3]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ac36:	mov    rdi,r14
  40ac39:	call   405d50 <_start@@Base+0x1900>
  40ac3e:	cmp    rax,0xffffffffffffffff
  40ac42:	jne    40b3bf <test_scan@@Base+0x144f>
  40ac48:	xor    edx,edx
  40ac4a:	xor    esi,esi
  40ac4c:	lea    rcx,[rip+0xb69e]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ac53:	mov    rdi,r14
  40ac56:	call   405d50 <_start@@Base+0x1900>
  40ac5b:	cmp    rax,0xffffffffffffffff
  40ac5f:	jne    40b3dd <test_scan@@Base+0x146d>
  40ac65:	lea    rcx,[rip+0xb685]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ac6c:	mov    edx,0x1
  40ac71:	mov    esi,0x1
  40ac76:	mov    rdi,r14
  40ac79:	call   405d50 <_start@@Base+0x1900>
  40ac7e:	cmp    rax,0xffffffffffffffff
  40ac82:	jne    40b3fb <test_scan@@Base+0x148b>
  40ac88:	lea    rcx,[rip+0xb65a]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ac8f:	mov    rdx,rax
  40ac92:	mov    rsi,rbx
  40ac95:	mov    rdi,r14
  40ac98:	call   405d50 <_start@@Base+0x1900>
  40ac9d:	cmp    rax,0xffffffffffffffff
  40aca1:	jne    40b419 <test_scan@@Base+0x14a9>
  40aca7:	xor    edx,edx
  40aca9:	xor    esi,esi
  40acab:	lea    rcx,[rip+0xb637]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40acb2:	mov    rdi,r14
  40acb5:	call   405e60 <_start@@Base+0x1a10>
  40acba:	cmp    rax,0xffffffffffffffff
  40acbe:	jne    40b3bf <test_scan@@Base+0x144f>
  40acc4:	xor    edx,edx
  40acc6:	xor    esi,esi
  40acc8:	lea    rcx,[rip+0xb622]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40accf:	mov    rdi,r14
  40acd2:	call   405e60 <_start@@Base+0x1a10>
  40acd7:	cmp    rax,0xffffffffffffffff
  40acdb:	jne    40b3dd <test_scan@@Base+0x146d>
  40ace1:	lea    rcx,[rip+0xb609]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ace8:	mov    edx,0x1
  40aced:	mov    esi,0x1
  40acf2:	mov    rdi,r14
  40acf5:	call   405e60 <_start@@Base+0x1a10>
  40acfa:	cmp    rax,0xffffffffffffffff
  40acfe:	jne    40b3fb <test_scan@@Base+0x148b>
  40ad04:	lea    rcx,[rip+0xb5de]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ad0b:	mov    rdx,rax
  40ad0e:	mov    rsi,rbx
  40ad11:	mov    rdi,r14
  40ad14:	call   405e60 <_start@@Base+0x1a10>
  40ad19:	mov    QWORD PTR [rsp+0x48],rax
  40ad1e:	cmp    rax,0xffffffffffffffff
  40ad22:	jne    40b419 <test_scan@@Base+0x14a9>
  40ad28:	lea    rsi,[rip+0xb5c2]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ad2f:	mov    rdi,r14
  40ad32:	call   405ba0 <_start@@Base+0x1750>
  40ad37:	cmp    rax,0x1
  40ad3b:	jne    40b598 <test_scan@@Base+0x1628>
  40ad41:	lea    rsi,[rip+0xb7d5]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40ad48:	mov    rdi,r14
  40ad4b:	call   405ba0 <_start@@Base+0x1750>
  40ad50:	mov    QWORD PTR [rsp+0x20],rax
  40ad55:	test   rax,rax
  40ad58:	jne    40b61a <test_scan@@Base+0x16aa>
  40ad5e:	lea    rsi,[rip+0xb584]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ad65:	mov    rdi,r14
  40ad68:	call   405ba0 <_start@@Base+0x1750>
  40ad6d:	cmp    rax,0x1
  40ad71:	jne    40b5b5 <test_scan@@Base+0x1645>
  40ad77:	lea    rsi,[rip+0xb579]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40ad7e:	mov    rdi,r14
  40ad81:	mov    QWORD PTR [rsp+0x40],rax
  40ad86:	call   405ba0 <_start@@Base+0x1750>
  40ad8b:	cmp    rax,0x2
  40ad8f:	jne    40b637 <test_scan@@Base+0x16c7>
  40ad95:	mov    edx,DWORD PTR [rbp-0x4]
  40ad98:	test   rdx,rdx
  40ad9b:	je     40adac <test_scan@@Base+0xe3c>
  40ad9d:	cmp    BYTE PTR [rbp+0x0],0x6
  40ada1:	mov    r11,QWORD PTR [rsp+0x40]
  40ada6:	je     40ae93 <test_scan@@Base+0xf23>
  40adac:	lea    rsi,[rip+0xd05d]        # 417e10 <_IO_stdin_used@@Base+0x1e10>
  40adb3:	mov    edi,0x1
  40adb8:	xor    eax,eax
  40adba:	call   404220 <__printf_chk@plt>
  40adbf:	mov    r12d,0xffffffff
  40adc5:	jmp    40a3b0 <test_scan@@Base+0x440>
  40adca:	nop    WORD PTR [rax+rax*1+0x0]
  40add0:	lea    rcx,[rip+0xe499]        # 419270 <_IO_stdin_used@@Base+0x3270>
  40add7:	mov    edx,0x2bb
  40addc:	lea    rsi,[rip+0xbc55]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40ade3:	lea    rdi,[rip+0xbdb6]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  40adea:	call   4041a0 <__assert_fail@plt>
  40adef:	lea    rcx,[rip+0xe3aa]        # 4191a0 <_IO_stdin_used@@Base+0x31a0>
  40adf6:	mov    edx,0x519
  40adfb:	lea    rsi,[rip+0xc606]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40ae02:	lea    rdi,[rip+0xb667]        # 416470 <_IO_stdin_used@@Base+0x470>
  40ae09:	call   4041a0 <__assert_fail@plt>
  40ae0e:	xchg   ax,ax
  40ae10:	lea    rcx,[rip+0xe459]        # 419270 <_IO_stdin_used@@Base+0x3270>
  40ae17:	mov    edx,0x2bb
  40ae1c:	lea    rsi,[rip+0xbc15]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40ae23:	lea    rdi,[rip+0xbc8e]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40ae2a:	call   4041a0 <__assert_fail@plt>
  40ae2f:	nop
  40ae30:	lea    rsi,[rip+0xccf9]        # 417b30 <_IO_stdin_used@@Base+0x1b30>
  40ae37:	mov    edi,0x1
  40ae3c:	xor    eax,eax
  40ae3e:	call   404220 <__printf_chk@plt>
  40ae43:	mov    r12d,0xffffffff
  40ae49:	jmp    40a3b0 <test_scan@@Base+0x440>
  40ae4e:	xchg   ax,ax
  40ae50:	lea    rsi,[rip+0xb727]        # 41657e <_IO_stdin_used@@Base+0x57e>
  40ae57:	mov    edi,0x1
  40ae5c:	xor    eax,eax
  40ae5e:	call   404220 <__printf_chk@plt>
  40ae63:	mov    r12d,0xffffffff
  40ae69:	jmp    40a3b0 <test_scan@@Base+0x440>
  40ae6e:	xchg   ax,ax
  40ae70:	lea    rsi,[rip+0xcd11]        # 417b88 <_IO_stdin_used@@Base+0x1b88>
  40ae77:	mov    edi,0x1
  40ae7c:	xor    eax,eax
  40ae7e:	call   404220 <__printf_chk@plt>
  40ae83:	mov    r12d,0xffffffff
  40ae89:	jmp    40a3b0 <test_scan@@Base+0x440>
  40ae8e:	call   404a90 <_start@@Base+0x640>
  40ae93:	xor    eax,eax
  40ae95:	jmp    40aea7 <test_scan@@Base+0xf37>
  40ae97:	nop    WORD PTR [rax+rax*1+0x0]
  40aea0:	cmp    BYTE PTR [rbp+rax*1+0x0],0x1
  40aea5:	je     40aed0 <test_scan@@Base+0xf60>
  40aea7:	inc    rax
  40aeaa:	cmp    rax,rdx
  40aead:	jne    40aea0 <test_scan@@Base+0xf30>
  40aeaf:	lea    rsi,[rip+0xcf8a]        # 417e40 <_IO_stdin_used@@Base+0x1e40>
  40aeb6:	mov    edi,0x1
  40aebb:	xor    eax,eax
  40aebd:	call   404220 <__printf_chk@plt>
  40aec2:	mov    r12d,0xffffffff
  40aec8:	jmp    40a3b0 <test_scan@@Base+0x440>
  40aecd:	nop    DWORD PTR [rax]
  40aed0:	cmp    rax,0x2
  40aed4:	jne    40aeaf <test_scan@@Base+0xf3f>
  40aed6:	cmp    rdx,0x3
  40aeda:	jbe    40af0a <test_scan@@Base+0xf9a>
  40aedc:	cmp    BYTE PTR [rbp+0x3],0x1
  40aee0:	je     40b658 <test_scan@@Base+0x16e8>
  40aee6:	lea    rax,[rbp+0x4]
  40aeea:	lea    rcx,[rbp+rdx*1+0x0]
  40aeef:	jmp    40af05 <test_scan@@Base+0xf95>
  40aef1:	nop    DWORD PTR [rax+0x0]
  40aef8:	inc    rax
  40aefb:	cmp    BYTE PTR [rax-0x1],0x1
  40aeff:	je     40b658 <test_scan@@Base+0x16e8>
  40af05:	cmp    rcx,rax
  40af08:	jne    40aef8 <test_scan@@Base+0xf88>
  40af0a:	mov    eax,0x1
  40af0f:	nop
  40af10:	cmp    BYTE PTR [rbp+rax*1+0x0],0x5
  40af15:	je     40af77 <test_scan@@Base+0x1007>
  40af17:	inc    rax
  40af1a:	cmp    rax,rdx
  40af1d:	jb     40af10 <test_scan@@Base+0xfa0>
  40af1f:	mov    eax,0x1
  40af24:	nop    DWORD PTR [rax+0x0]
  40af28:	cmp    BYTE PTR [rbp+rax*1+0x0],0x2
  40af2d:	je     40af58 <test_scan@@Base+0xfe8>
  40af2f:	inc    rax
  40af32:	cmp    rax,rdx
  40af35:	jb     40af28 <test_scan@@Base+0xfb8>
  40af37:	lea    rsi,[rip+0xcf32]        # 417e70 <_IO_stdin_used@@Base+0x1e70>
  40af3e:	mov    edi,0x1
  40af43:	xor    eax,eax
  40af45:	call   404220 <__printf_chk@plt>
  40af4a:	mov    r12d,0xffffffff
  40af50:	jmp    40a3b0 <test_scan@@Base+0x440>
  40af55:	nop    DWORD PTR [rax]
  40af58:	cmp    rax,0x6
  40af5c:	jne    40af37 <test_scan@@Base+0xfc7>
  40af5e:	mov    eax,0x1
  40af63:	nop    DWORD PTR [rax+rax*1+0x0]
  40af68:	cmp    BYTE PTR [rbp+rax*1+0x0],0x3
  40af6d:	je     40af98 <test_scan@@Base+0x1028>
  40af6f:	inc    rax
  40af72:	cmp    rax,rdx
  40af75:	jb     40af68 <test_scan@@Base+0xff8>
  40af77:	lea    rsi,[rip+0xcf22]        # 417ea0 <_IO_stdin_used@@Base+0x1ea0>
  40af7e:	mov    edi,0x1
  40af83:	xor    eax,eax
  40af85:	call   404220 <__printf_chk@plt>
  40af8a:	mov    r12d,0xffffffff
  40af90:	jmp    40a3b0 <test_scan@@Base+0x440>
  40af95:	nop    DWORD PTR [rax]
  40af98:	cmp    rax,0x3
  40af9c:	jne    40af77 <test_scan@@Base+0x1007>
  40af9e:	cmp    rdx,0x3
  40afa2:	jbe    40afaa <test_scan@@Base+0x103a>
  40afa4:	cmp    BYTE PTR [rbp+0x3],0x3
  40afa8:	je     40afd0 <test_scan@@Base+0x1060>
  40afaa:	lea    rsi,[rip+0xcf27]        # 417ed8 <_IO_stdin_used@@Base+0x1ed8>
  40afb1:	mov    edi,0x1
  40afb6:	xor    eax,eax
  40afb8:	call   404220 <__printf_chk@plt>
  40afbd:	mov    r12d,0xffffffff
  40afc3:	jmp    40a3b0 <test_scan@@Base+0x440>
  40afc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40afd0:	cmp    rdx,0x4
  40afd4:	je     40aff0 <test_scan@@Base+0x1080>
  40afd6:	cmp    BYTE PTR [rbp+0x4],0x3
  40afda:	jne    40afe8 <test_scan@@Base+0x1078>
  40afdc:	jmp    40aff0 <test_scan@@Base+0x1080>
  40afde:	xchg   ax,ax
  40afe0:	cmp    BYTE PTR [rbp+r13*1+0x0],0x3
  40afe6:	je     40b010 <test_scan@@Base+0x10a0>
  40afe8:	inc    r13
  40afeb:	cmp    r13,rdx
  40afee:	jne    40afe0 <test_scan@@Base+0x1070>
  40aff0:	lea    rsi,[rip+0xcf21]        # 417f18 <_IO_stdin_used@@Base+0x1f18>
  40aff7:	mov    edi,0x1
  40affc:	xor    eax,eax
  40affe:	call   404220 <__printf_chk@plt>
  40b003:	mov    r12d,0xffffffff
  40b009:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b00e:	xchg   ax,ax
  40b010:	cmp    r13,0x5
  40b014:	jne    40aff0 <test_scan@@Base+0x1080>
  40b016:	lea    rax,[rdx-0x1]
  40b01a:	jmp    40b023 <test_scan@@Base+0x10b3>
  40b01c:	nop    DWORD PTR [rax+0x0]
  40b020:	mov    rax,rcx
  40b023:	cmp    rax,rdx
  40b026:	jae    40b676 <test_scan@@Base+0x1706>
  40b02c:	cmp    BYTE PTR [rbp+rax*1+0x0],0x3
  40b031:	je     40b060 <test_scan@@Base+0x10f0>
  40b033:	lea    rcx,[rax-0x1]
  40b037:	test   rax,rax
  40b03a:	jne    40b020 <test_scan@@Base+0x10b0>
  40b03c:	lea    rsi,[rip+0xcf15]        # 417f58 <_IO_stdin_used@@Base+0x1f58>
  40b043:	mov    edi,0x1
  40b048:	xor    eax,eax
  40b04a:	call   404220 <__printf_chk@plt>
  40b04f:	mov    r12d,0xffffffff
  40b055:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b05a:	nop    WORD PTR [rax+rax*1+0x0]
  40b060:	cmp    rax,0x5
  40b064:	jne    40b03c <test_scan@@Base+0x10cc>
  40b066:	cmp    rdx,0x4
  40b06a:	mov    eax,0x4
  40b06f:	cmovbe rax,rdx
  40b073:	jmp    40b088 <test_scan@@Base+0x1118>
  40b075:	nop    DWORD PTR [rax]
  40b078:	cmp    rax,rdx
  40b07b:	jae    40b676 <test_scan@@Base+0x1706>
  40b081:	cmp    BYTE PTR [rbp+rax*1+0x0],0x3
  40b086:	je     40b0b0 <test_scan@@Base+0x1140>
  40b088:	dec    rax
  40b08b:	jne    40b078 <test_scan@@Base+0x1108>
  40b08d:	lea    rsi,[rip+0xcefc]        # 417f90 <_IO_stdin_used@@Base+0x1f90>
  40b094:	mov    edi,0x1
  40b099:	xor    eax,eax
  40b09b:	call   404220 <__printf_chk@plt>
  40b0a0:	mov    r12d,0xffffffff
  40b0a6:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0b0:	cmp    rax,0x3
  40b0b4:	jne    40b08d <test_scan@@Base+0x111d>
  40b0b6:	mov    rax,QWORD PTR [rsp+0x18]
  40b0bb:	mov    eax,DWORD PTR [rax-0x4]
  40b0be:	test   rax,rax
  40b0c1:	je     40b109 <test_scan@@Base+0x1199>
  40b0c3:	mov    rdi,QWORD PTR [rsp+0x18]
  40b0c8:	lea    r8,[rax-0x1]
  40b0cc:	lea    rdx,[rdi+rax*4-0x4]
  40b0d1:	lea    r9,[rip+0xb228]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b0d8:	cmp    r8,rax
  40b0db:	jae    40b5f6 <test_scan@@Base+0x1686>
  40b0e1:	mov    ecx,DWORD PTR [rdx]
  40b0e3:	mov    rdi,r9
  40b0e6:	lea    rsi,[rdx+rcx*1+0x4]
  40b0eb:	mov    ecx,0x6
  40b0f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b0f2:	seta   cl
  40b0f5:	sbb    cl,0x0
  40b0f8:	dec    r8
  40b0fb:	sub    rdx,0x4
  40b0ff:	test   cl,cl
  40b101:	je     40b109 <test_scan@@Base+0x1199>
  40b103:	cmp    r8,0xffffffffffffffff
  40b107:	jne    40b0d8 <test_scan@@Base+0x1168>
  40b109:	mov    rdi,QWORD PTR [rsp+0x18]
  40b10e:	mov    rdx,rax
  40b111:	lea    r8,[rdi+rax*4-0x4]
  40b116:	mov    r9,r8
  40b119:	lea    r10,[rip+0xb1e0]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b120:	jmp    40b151 <test_scan@@Base+0x11e1>
  40b122:	nop    WORD PTR [rax+rax*1+0x0]
  40b128:	cmp    rdx,rax
  40b12b:	jae    40b5f6 <test_scan@@Base+0x1686>
  40b131:	mov    ecx,DWORD PTR [r9]
  40b134:	mov    rdi,r10
  40b137:	lea    rsi,[r9+rcx*1+0x4]
  40b13c:	mov    ecx,0x6
  40b141:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b143:	seta   cl
  40b146:	sbb    cl,0x0
  40b149:	sub    r9,0x4
  40b14d:	test   cl,cl
  40b14f:	je     40b15a <test_scan@@Base+0x11ea>
  40b151:	dec    rdx
  40b154:	cmp    rdx,0xffffffffffffffff
  40b158:	jne    40b128 <test_scan@@Base+0x11b8>
  40b15a:	mov    rdx,rax
  40b15d:	dec    rdx
  40b160:	mov    r9,r8
  40b163:	mov    ebp,0x4
  40b168:	mov    r13d,0x6
  40b16e:	mov    r10,r8
  40b171:	cmp    rdx,0xffffffffffffffff
  40b175:	je     40b1d8 <test_scan@@Base+0x1268>
  40b177:	nop    WORD PTR [rax+rax*1+0x0]
  40b180:	cmp    rdx,rax
  40b183:	jae    40b5f6 <test_scan@@Base+0x1686>
  40b189:	mov    ecx,DWORD PTR [r9]
  40b18c:	lea    rsi,[r9+rcx*1+0x4]
  40b191:	test   rsi,rsi
  40b194:	je     40b1c6 <test_scan@@Base+0x1256>
  40b196:	mov    ecx,DWORD PTR [rsi-0x4]
  40b199:	lea    rdi,[rip+0xb160]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b1a0:	cmp    rcx,0x4
  40b1a4:	mov    r8,rcx
  40b1a7:	cmova  rcx,rbp
  40b1ab:	cmp    rcx,0x6
  40b1af:	cmovg  rcx,r13
  40b1b3:	cmp    rcx,rcx
  40b1b6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b1b8:	seta   cl
  40b1bb:	sbb    cl,0x0
  40b1be:	test   cl,cl
  40b1c0:	je     40b3a0 <test_scan@@Base+0x1430>
  40b1c6:	dec    rdx
  40b1c9:	sub    r9,0x4
  40b1cd:	cmp    rdx,0xffffffffffffffff
  40b1d1:	jne    40b180 <test_scan@@Base+0x1210>
  40b1d3:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1d8:	mov    rdx,rax
  40b1db:	dec    rdx
  40b1de:	mov    r8,r10
  40b1e1:	lea    rbp,[rip+0xb118]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b1e8:	mov    r13d,0x4
  40b1ee:	mov    r10d,0x6
  40b1f4:	cmp    rdx,0xffffffffffffffff
  40b1f8:	je     40b250 <test_scan@@Base+0x12e0>
  40b1fa:	cmp    rdx,rax
  40b1fd:	jae    40b5f6 <test_scan@@Base+0x1686>
  40b203:	mov    ecx,DWORD PTR [r8]
  40b206:	lea    rsi,[r8+rcx*1+0x4]
  40b20b:	test   rsi,rsi
  40b20e:	je     40b23c <test_scan@@Base+0x12cc>
  40b210:	mov    ecx,DWORD PTR [rsi-0x4]
  40b213:	mov    rdi,rbp
  40b216:	cmp    rcx,0x4
  40b21a:	mov    r9,rcx
  40b21d:	cmova  rcx,r13
  40b221:	cmp    rcx,0x6
  40b225:	cmovg  rcx,r10
  40b229:	cmp    rcx,rcx
  40b22c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b22e:	seta   cl
  40b231:	sbb    cl,0x0
  40b234:	test   cl,cl
  40b236:	je     40b3b0 <test_scan@@Base+0x1440>
  40b23c:	dec    rdx
  40b23f:	sub    r8,0x4
  40b243:	cmp    rdx,0xffffffffffffffff
  40b247:	jne    40b1fa <test_scan@@Base+0x128a>
  40b249:	nop    DWORD PTR [rax+0x0]
  40b250:	mov    rcx,QWORD PTR [rsp+0x20]
  40b255:	mov    rdx,QWORD PTR [rsp+0x28]
  40b25a:	movzx  edi,WORD PTR [rsp+0x36]
  40b25f:	mov    rax,QWORD PTR [rsp]
  40b263:	mov    rsi,QWORD PTR [rsp+0x38]
  40b268:	jmp    40b296 <test_scan@@Base+0x1326>
  40b26a:	nop    WORD PTR [rax+rax*1+0x0]
  40b270:	inc    rcx
  40b273:	cmp    rcx,rbx
  40b276:	jae    40b2b2 <test_scan@@Base+0x1342>
  40b278:	mov    eax,DWORD PTR [rdx]
  40b27a:	add    rax,rdx
  40b27d:	add    rdx,0x4
  40b281:	test   rax,rax
  40b284:	je     40b5fb <test_scan@@Base+0x168b>
  40b28a:	movsxd rsi,DWORD PTR [rax]
  40b28d:	mov    rdi,rax
  40b290:	sub    rdi,rsi
  40b293:	movzx  edi,WORD PTR [rdi]
  40b296:	cmp    di,0x9
  40b29a:	jbe    40b270 <test_scan@@Base+0x1300>
  40b29c:	mov    rdi,rax
  40b29f:	sub    rdi,rsi
  40b2a2:	movzx  esi,WORD PTR [rdi+0x8]
  40b2a6:	test   si,si
  40b2a9:	je     40b270 <test_scan@@Base+0x1300>
  40b2ab:	cmp    WORD PTR [rax+rsi*1],0xd
  40b2b0:	jne    40b270 <test_scan@@Base+0x1300>
  40b2b2:	mov    eax,DWORD PTR [r14+0x4]
  40b2b6:	lea    rax,[r14+rax*1+0x4]
  40b2bb:	test   rax,rax
  40b2be:	je     40b5fb <test_scan@@Base+0x168b>
  40b2c4:	lea    rdx,[r14+0x8]
  40b2c8:	jmp    40b2ea <test_scan@@Base+0x137a>
  40b2ca:	nop    WORD PTR [rax+rax*1+0x0]
  40b2d0:	inc    r11
  40b2d3:	cmp    r11,rbx
  40b2d6:	jae    40b309 <test_scan@@Base+0x1399>
  40b2d8:	mov    eax,DWORD PTR [rdx]
  40b2da:	add    rax,rdx
  40b2dd:	add    rdx,0x4
  40b2e1:	test   rax,rax
  40b2e4:	je     40b5fb <test_scan@@Base+0x168b>
  40b2ea:	movsxd rcx,DWORD PTR [rax]
  40b2ed:	mov    rdi,rax
  40b2f0:	sub    rdi,rcx
  40b2f3:	cmp    WORD PTR [rdi],0x9
  40b2f7:	jbe    40b2d0 <test_scan@@Base+0x1360>
  40b2f9:	movzx  ecx,WORD PTR [rdi+0x8]
  40b2fd:	test   cx,cx
  40b300:	je     40b2d0 <test_scan@@Base+0x1360>
  40b302:	cmp    WORD PTR [rax+rcx*1],0x2a
  40b307:	jne    40b2d0 <test_scan@@Base+0x1360>
  40b309:	lea    rdx,[r14+r15*4]
  40b30d:	jmp    40b320 <test_scan@@Base+0x13b0>
  40b30f:	nop
  40b310:	lea    rax,[r15-0x1]
  40b314:	sub    rdx,0x4
  40b318:	test   r15,r15
  40b31b:	je     40b353 <test_scan@@Base+0x13e3>
  40b31d:	mov    r15,rax
  40b320:	cmp    r15,rbx
  40b323:	jae    40ae8e <test_scan@@Base+0xf1e>
  40b329:	mov    eax,DWORD PTR [rdx]
  40b32b:	add    rax,rdx
  40b32e:	je     40b5fb <test_scan@@Base+0x168b>
  40b334:	movsxd rcx,DWORD PTR [rax]
  40b337:	mov    rdi,rax
  40b33a:	sub    rdi,rcx
  40b33d:	cmp    WORD PTR [rdi],0x9
  40b341:	jbe    40b310 <test_scan@@Base+0x13a0>
  40b343:	movzx  ecx,WORD PTR [rdi+0x8]
  40b347:	test   cx,cx
  40b34a:	je     40b310 <test_scan@@Base+0x13a0>
  40b34c:	cmp    WORD PTR [rax+rcx*1],0x1
  40b351:	jne    40b310 <test_scan@@Base+0x13a0>
  40b353:	mov    rdx,QWORD PTR [rsp+0x8]
  40b358:	jmp    40b370 <test_scan@@Base+0x1400>
  40b35a:	nop    WORD PTR [rax+rax*1+0x0]
  40b360:	lea    rax,[rdx-0x4]
  40b364:	cmp    r14,rdx
  40b367:	je     40a3b0 <test_scan@@Base+0x440>
  40b36d:	mov    rdx,rax
  40b370:	mov    eax,DWORD PTR [rdx]
  40b372:	add    rax,rdx
  40b375:	je     40b5fb <test_scan@@Base+0x168b>
  40b37b:	movsxd rcx,DWORD PTR [rax]
  40b37e:	mov    rbx,rax
  40b381:	sub    rbx,rcx
  40b384:	cmp    WORD PTR [rbx],0x9
  40b388:	jbe    40b360 <test_scan@@Base+0x13f0>
  40b38a:	movzx  ecx,WORD PTR [rbx+0x8]
  40b38e:	test   cx,cx
  40b391:	je     40b360 <test_scan@@Base+0x13f0>
  40b393:	cmp    WORD PTR [rax+rcx*1],0x2a
  40b398:	jne    40b360 <test_scan@@Base+0x13f0>
  40b39a:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b39f:	nop
  40b3a0:	cmp    r8d,0x4
  40b3a4:	je     40b1d8 <test_scan@@Base+0x1268>
  40b3aa:	jmp    40b1c6 <test_scan@@Base+0x1256>
  40b3af:	nop
  40b3b0:	cmp    r9d,0x4
  40b3b4:	je     40b250 <test_scan@@Base+0x12e0>
  40b3ba:	jmp    40b23c <test_scan@@Base+0x12cc>
  40b3bf:	lea    rsi,[rip+0xc9aa]        # 417d70 <_IO_stdin_used@@Base+0x1d70>
  40b3c6:	mov    edi,0x1
  40b3cb:	xor    eax,eax
  40b3cd:	call   404220 <__printf_chk@plt>
  40b3d2:	mov    r12d,0xffffffff
  40b3d8:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b3dd:	lea    rsi,[rip+0xc9b4]        # 417d98 <_IO_stdin_used@@Base+0x1d98>
  40b3e4:	mov    edi,0x1
  40b3e9:	xor    eax,eax
  40b3eb:	call   404220 <__printf_chk@plt>
  40b3f0:	mov    r12d,0xffffffff
  40b3f6:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b3fb:	lea    rsi,[rip+0xc9b6]        # 417db8 <_IO_stdin_used@@Base+0x1db8>
  40b402:	mov    edi,0x1
  40b407:	xor    eax,eax
  40b409:	call   404220 <__printf_chk@plt>
  40b40e:	mov    r12d,0xffffffff
  40b414:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b419:	lea    rsi,[rip+0xc9c0]        # 417de0 <_IO_stdin_used@@Base+0x1de0>
  40b420:	mov    edi,0x1
  40b425:	xor    eax,eax
  40b427:	call   404220 <__printf_chk@plt>
  40b42c:	mov    r12d,0xffffffff
  40b432:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b437:	lea    rsi,[rip+0xc71a]        # 417b58 <_IO_stdin_used@@Base+0x1b58>
  40b43e:	mov    edi,0x1
  40b443:	xor    eax,eax
  40b445:	call   404220 <__printf_chk@plt>
  40b44a:	mov    r12d,0xffffffff
  40b450:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b455:	lea    rsi,[rip+0xb13d]        # 416599 <_IO_stdin_used@@Base+0x599>
  40b45c:	mov    edi,0x1
  40b461:	xor    eax,eax
  40b463:	call   404220 <__printf_chk@plt>
  40b468:	mov    r12d,0xffffffff
  40b46e:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b473:	lea    rsi,[rip+0xc766]        # 417be0 <_IO_stdin_used@@Base+0x1be0>
  40b47a:	mov    edi,0x1
  40b47f:	xor    eax,eax
  40b481:	call   404220 <__printf_chk@plt>
  40b486:	mov    r12d,DWORD PTR [rsp+0x20]
  40b48b:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b490:	lea    rsi,[rip+0xc721]        # 417bb8 <_IO_stdin_used@@Base+0x1bb8>
  40b497:	mov    edi,0x1
  40b49c:	xor    eax,eax
  40b49e:	call   404220 <__printf_chk@plt>
  40b4a3:	mov    r12d,0xffffffff
  40b4a9:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b4ae:	lea    rsi,[rip+0xc77b]        # 417c30 <_IO_stdin_used@@Base+0x1c30>
  40b4b5:	mov    edi,0x1
  40b4ba:	xor    eax,eax
  40b4bc:	call   404220 <__printf_chk@plt>
  40b4c1:	mov    r12d,DWORD PTR [rsp+0x40]
  40b4c6:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b4cb:	lea    rsi,[rip+0xc736]        # 417c08 <_IO_stdin_used@@Base+0x1c08>
  40b4d2:	mov    edi,0x1
  40b4d7:	xor    eax,eax
  40b4d9:	call   404220 <__printf_chk@plt>
  40b4de:	mov    r12d,DWORD PTR [rsp+0x40]
  40b4e3:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b4e8:	lea    rsi,[rip+0xc799]        # 417c88 <_IO_stdin_used@@Base+0x1c88>
  40b4ef:	mov    edi,0x1
  40b4f4:	xor    eax,eax
  40b4f6:	call   404220 <__printf_chk@plt>
  40b4fb:	mov    r12d,0xffffffff
  40b501:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b506:	lea    rsi,[rip+0xc74b]        # 417c58 <_IO_stdin_used@@Base+0x1c58>
  40b50d:	mov    edi,0x1
  40b512:	xor    eax,eax
  40b514:	call   404220 <__printf_chk@plt>
  40b519:	mov    r12d,0xffffffff
  40b51f:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b524:	lea    rsi,[rip+0xc7bd]        # 417ce8 <_IO_stdin_used@@Base+0x1ce8>
  40b52b:	mov    edi,0x1
  40b530:	xor    eax,eax
  40b532:	call   404220 <__printf_chk@plt>
  40b537:	mov    r12d,DWORD PTR [rsp+0x20]
  40b53c:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b541:	lea    rsi,[rip+0xc770]        # 417cb8 <_IO_stdin_used@@Base+0x1cb8>
  40b548:	mov    edi,0x1
  40b54d:	xor    eax,eax
  40b54f:	call   404220 <__printf_chk@plt>
  40b554:	mov    r12d,DWORD PTR [rsp+0x40]
  40b559:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b55e:	lea    rsi,[rip+0xc7db]        # 417d40 <_IO_stdin_used@@Base+0x1d40>
  40b565:	mov    edi,0x1
  40b56a:	xor    eax,eax
  40b56c:	call   404220 <__printf_chk@plt>
  40b571:	mov    r12d,DWORD PTR [rsp+0x20]
  40b576:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b57b:	lea    rsi,[rip+0xc78e]        # 417d10 <_IO_stdin_used@@Base+0x1d10>
  40b582:	mov    edi,0x1
  40b587:	xor    eax,eax
  40b589:	call   404220 <__printf_chk@plt>
  40b58e:	mov    r12d,DWORD PTR [rsp+0x20]
  40b593:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b598:	lea    rsi,[rip+0xb016]        # 4165b5 <_IO_stdin_used@@Base+0x5b5>
  40b59f:	mov    edi,0x1
  40b5a4:	xor    eax,eax
  40b5a6:	call   404220 <__printf_chk@plt>
  40b5ab:	mov    r12d,DWORD PTR [rsp+0x48]
  40b5b0:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b5b5:	lea    rsi,[rip+0xb030]        # 4165ec <_IO_stdin_used@@Base+0x5ec>
  40b5bc:	mov    edi,0x1
  40b5c1:	xor    eax,eax
  40b5c3:	call   404220 <__printf_chk@plt>
  40b5c8:	mov    r12d,DWORD PTR [rsp+0x48]
  40b5cd:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b5d2:	nop    WORD PTR [rax+rax*1+0x0]
  40b5d8:	lea    rsi,[rip+0xaf75]        # 416554 <_IO_stdin_used@@Base+0x554>
  40b5df:	mov    edi,0x1
  40b5e4:	xor    eax,eax
  40b5e6:	call   404220 <__printf_chk@plt>
  40b5eb:	mov    r12d,0xffffffff
  40b5f1:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b5f6:	call   404a00 <_start@@Base+0x5b0>
  40b5fb:	lea    rcx,[rip+0xe00e]        # 419610 <_IO_stdin_used@@Base+0x3610>
  40b602:	mov    edx,0x2b9
  40b607:	lea    rsi,[rip+0xb42a]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40b60e:	lea    rdi,[rip+0xb4a3]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40b615:	call   4041a0 <__assert_fail@plt>
  40b61a:	lea    rsi,[rip+0xafaf]        # 4165d0 <_IO_stdin_used@@Base+0x5d0>
  40b621:	mov    edi,0x1
  40b626:	xor    eax,eax
  40b628:	call   404220 <__printf_chk@plt>
  40b62d:	mov    r12d,DWORD PTR [rsp+0x48]
  40b632:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b637:	lea    rsi,[rip+0xafca]        # 416608 <_IO_stdin_used@@Base+0x608>
  40b63e:	mov    edi,0x1
  40b643:	xor    eax,eax
  40b645:	call   404220 <__printf_chk@plt>
  40b64a:	mov    r12d,DWORD PTR [rsp+0x48]
  40b64f:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b654:	nop    DWORD PTR [rax+0x0]
  40b658:	lea    rsi,[rip+0xc969]        # 417fc8 <_IO_stdin_used@@Base+0x1fc8>
  40b65f:	mov    edi,0x1
  40b664:	xor    eax,eax
  40b666:	call   404220 <__printf_chk@plt>
  40b66b:	mov    r12d,0xffffffff
  40b671:	jmp    40a3b0 <test_scan@@Base+0x440>
  40b676:	call   404910 <_start@@Base+0x4c0>
  40b67b:	call   404e80 <_start@@Base+0xa30>
  40b680:	call   404180 <__stack_chk_fail@plt>
  40b685:	lea    rcx,[rip+0xdb14]        # 4191a0 <_IO_stdin_used@@Base+0x31a0>
  40b68c:	mov    edx,0x51d
  40b691:	lea    rsi,[rip+0xbd70]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40b698:	lea    rdi,[rip+0xaecc]        # 41656b <_IO_stdin_used@@Base+0x56b>
  40b69f:	call   4041a0 <__assert_fail@plt>
  40b6a4:	lea    rcx,[rip+0xdaf5]        # 4191a0 <_IO_stdin_used@@Base+0x31a0>
  40b6ab:	mov    edx,0x51b
  40b6b0:	lea    rsi,[rip+0xbd51]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40b6b7:	lea    rdi,[rip+0xaea9]        # 416567 <_IO_stdin_used@@Base+0x567>
  40b6be:	call   4041a0 <__assert_fail@plt>
  40b6c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b6ce:	xchg   ax,ax

000000000040b6d0 <test_basic_sort@@Base>:
  40b6d0:	endbr64 
  40b6d4:	push   r12
  40b6d6:	mov    edx,0x604
  40b6db:	push   rbp
  40b6dc:	push   rbx
  40b6dd:	mov    rbx,rdi
  40b6e0:	sub    rsp,0x20
  40b6e4:	mov    rax,QWORD PTR fs:0x28
  40b6ed:	mov    QWORD PTR [rsp+0x18],rax
  40b6f2:	xor    eax,eax
  40b6f4:	mov    eax,0x304
  40b6f9:	mov    WORD PTR [rsp+0x15],dx
  40b6fe:	mov    DWORD PTR [rsp+0xa],0x3010706
  40b706:	mov    WORD PTR [rsp+0xe],ax
  40b70b:	mov    BYTE PTR [rsp+0x10],0x2
  40b710:	mov    DWORD PTR [rsp+0x11],0x3030201
  40b718:	mov    BYTE PTR [rsp+0x17],0x7
  40b71d:	call   40fc30 <flatcc_builder_reset@@Base>
  40b722:	xor    ecx,ecx
  40b724:	xor    edx,edx
  40b726:	lea    rsi,[rip+0xaa0e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40b72d:	mov    rdi,rbx
  40b730:	call   410430 <flatcc_builder_start_buffer@@Base>
  40b735:	test   eax,eax
  40b737:	jne    40b746 <test_basic_sort@@Base+0x76>
  40b739:	mov    esi,0x24
  40b73e:	mov    rdi,rbx
  40b741:	call   4110d0 <flatcc_builder_start_table@@Base>
  40b746:	lea    rsi,[rip+0xaa06]        # 416153 <_IO_stdin_used@@Base+0x153>
  40b74d:	mov    rdi,rbx
  40b750:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40b755:	mov    ebp,eax
  40b757:	test   eax,eax
  40b759:	je     40b76f <test_basic_sort@@Base+0x9f>
  40b75b:	mov    esi,0x3
  40b760:	mov    rdi,rbx
  40b763:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40b768:	test   rax,rax
  40b76b:	je     40b76f <test_basic_sort@@Base+0x9f>
  40b76d:	mov    DWORD PTR [rax],ebp
  40b76f:	lea    rsi,[rsp+0xa]
  40b774:	mov    r9d,0xffffffff
  40b77a:	mov    r8d,0x1
  40b780:	mov    ecx,0x1
  40b785:	mov    edx,0x7
  40b78a:	mov    rdi,rbx
  40b78d:	call   411be0 <flatcc_builder_create_vector@@Base>
  40b792:	mov    ebp,eax
  40b794:	test   eax,eax
  40b796:	je     40b7ac <test_basic_sort@@Base+0xdc>
  40b798:	mov    esi,0x5
  40b79d:	mov    rdi,rbx
  40b7a0:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40b7a5:	test   rax,rax
  40b7a8:	je     40b7ac <test_basic_sort@@Base+0xdc>
  40b7aa:	mov    DWORD PTR [rax],ebp
  40b7ac:	mov    edx,0x1
  40b7b1:	lea    rsi,[rip+0xde78]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40b7b8:	mov    rdi,rbx
  40b7bb:	call   4119c0 <flatcc_builder_check_required@@Base>
  40b7c0:	test   eax,eax
  40b7c2:	je     40bb64 <test_basic_sort@@Base+0x494>
  40b7c8:	mov    rdi,rbx
  40b7cb:	call   411a50 <flatcc_builder_end_table@@Base>
  40b7d0:	mov    esi,eax
  40b7d2:	mov    rdi,rbx
  40b7d5:	call   410510 <flatcc_builder_end_buffer@@Base>
  40b7da:	mov    rsi,rsp
  40b7dd:	mov    rdi,rbx
  40b7e0:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40b7e5:	test   rax,rax
  40b7e8:	je     40b7f3 <test_basic_sort@@Base+0x123>
  40b7ea:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40b7f1:	je     40b800 <test_basic_sort@@Base+0x130>
  40b7f3:	call   4048e0 <_start@@Base+0x490>
  40b7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b800:	mov    edx,DWORD PTR [rax]
  40b802:	add    rax,rdx
  40b805:	je     40b7f3 <test_basic_sort@@Base+0x123>
  40b807:	movsxd rdx,DWORD PTR [rax]
  40b80a:	mov    rbx,rax
  40b80d:	sub    rbx,rdx
  40b810:	cmp    WORD PTR [rbx],0xf
  40b814:	jbe    40b9b8 <test_basic_sort@@Base+0x2e8>
  40b81a:	movzx  edx,WORD PTR [rbx+0xe]
  40b81e:	test   dx,dx
  40b821:	je     40b9b8 <test_basic_sort@@Base+0x2e8>
  40b827:	add    rax,rdx
  40b82a:	mov    edx,DWORD PTR [rax]
  40b82c:	lea    rax,[rax+rdx*1+0x4]
  40b831:	test   rax,rax
  40b834:	je     40b9b8 <test_basic_sort@@Base+0x2e8>
  40b83a:	mov    ebx,DWORD PTR [rax-0x4]
  40b83d:	test   rbx,rbx
  40b840:	je     40b9b8 <test_basic_sort@@Base+0x2e8>
  40b846:	lea    rsi,[rbx-0x1]
  40b84a:	shr    rbx,1
  40b84d:	lea    r12,[rbx+rbx*1]
  40b851:	nop    DWORD PTR [rax+0x0]
  40b858:	cmp    rsi,r12
  40b85b:	jb     40b8f6 <test_basic_sort@@Base+0x226>
  40b861:	mov    rcx,rbx
  40b864:	mov    rdx,r12
  40b867:	jmp    40b8c4 <test_basic_sort@@Base+0x1f4>
  40b869:	nop    DWORD PTR [rax+0x0]
  40b870:	cmp    rdi,rdx
  40b873:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b879:	lea    rbp,[rdx+0x1]
  40b87d:	movzx  r8d,BYTE PTR [rax+rdx*1]
  40b882:	cmp    rdi,rbp
  40b885:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b88b:	lea    r10,[rax+rbp*1]
  40b88f:	movzx  r11d,BYTE PTR [r10]
  40b893:	cmp    r8b,r11b
  40b896:	jae    40b9e0 <test_basic_sort@@Base+0x310>
  40b89c:	cmp    rdi,rcx
  40b89f:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b8a5:	lea    r8,[rax+rcx*1]
  40b8a9:	movzx  r9d,BYTE PTR [r8]
  40b8ad:	mov    rcx,rbp
  40b8b0:	cmp    r11b,r9b
  40b8b3:	jbe    40b8f6 <test_basic_sort@@Base+0x226>
  40b8b5:	lea    rdx,[rcx+rcx*1]
  40b8b9:	mov    BYTE PTR [r10],r9b
  40b8bc:	mov    BYTE PTR [r8],r11b
  40b8bf:	cmp    rsi,rdx
  40b8c2:	jb     40b8f6 <test_basic_sort@@Base+0x226>
  40b8c4:	mov    edi,DWORD PTR [rax-0x4]
  40b8c7:	cmp    rsi,rdx
  40b8ca:	ja     40b870 <test_basic_sort@@Base+0x1a0>
  40b8cc:	cmp    rdi,rcx
  40b8cf:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b8d5:	lea    r8,[rax+rcx*1]
  40b8d9:	movzx  r9d,BYTE PTR [r8]
  40b8dd:	cmp    rdi,rdx
  40b8e0:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b8e6:	lea    r10,[rax+rdx*1]
  40b8ea:	movzx  r11d,BYTE PTR [r10]
  40b8ee:	mov    rcx,rdx
  40b8f1:	cmp    r11b,r9b
  40b8f4:	ja     40b8b5 <test_basic_sort@@Base+0x1e5>
  40b8f6:	dec    rbx
  40b8f9:	sub    r12,0x2
  40b8fd:	cmp    rbx,0xffffffffffffffff
  40b901:	jne    40b858 <test_basic_sort@@Base+0x188>
  40b907:	nop    WORD PTR [rax+rax*1+0x0]
  40b910:	test   rsi,rsi
  40b913:	je     40ba18 <test_basic_sort@@Base+0x348>
  40b919:	movzx  edx,BYTE PTR [rax+rsi*1]
  40b91d:	movzx  ecx,BYTE PTR [rax]
  40b920:	mov    BYTE PTR [rax+rsi*1],cl
  40b923:	mov    BYTE PTR [rax],dl
  40b925:	dec    rsi
  40b928:	xor    ecx,ecx
  40b92a:	xor    edx,edx
  40b92c:	jmp    40b984 <test_basic_sort@@Base+0x2b4>
  40b92e:	xchg   ax,ax
  40b930:	cmp    rdi,rdx
  40b933:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b939:	lea    rbx,[rdx+0x1]
  40b93d:	movzx  r8d,BYTE PTR [rax+rdx*1]
  40b942:	cmp    rbx,rdi
  40b945:	jae    40bb40 <test_basic_sort@@Base+0x470>
  40b94b:	lea    r11,[rax+rbx*1]
  40b94f:	movzx  r10d,BYTE PTR [r11]
  40b953:	cmp    r8b,r10b
  40b956:	jae    40ba00 <test_basic_sort@@Base+0x330>
  40b95c:	cmp    rdi,rcx
  40b95f:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b965:	lea    r8,[rax+rcx*1]
  40b969:	movzx  r9d,BYTE PTR [r8]
  40b96d:	mov    rcx,rbx
  40b970:	cmp    r9b,r10b
  40b973:	jae    40b910 <test_basic_sort@@Base+0x240>
  40b975:	lea    rdx,[rcx+rcx*1]
  40b979:	mov    BYTE PTR [r11],r9b
  40b97c:	mov    BYTE PTR [r8],r10b
  40b97f:	cmp    rsi,rdx
  40b982:	jb     40b910 <test_basic_sort@@Base+0x240>
  40b984:	mov    edi,DWORD PTR [rax-0x4]
  40b987:	cmp    rsi,rdx
  40b98a:	ja     40b930 <test_basic_sort@@Base+0x260>
  40b98c:	cmp    rdi,rcx
  40b98f:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b995:	lea    r8,[rax+rcx*1]
  40b999:	movzx  r9d,BYTE PTR [r8]
  40b99d:	cmp    rdi,rdx
  40b9a0:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b9a6:	lea    r11,[rax+rdx*1]
  40b9aa:	movzx  r10d,BYTE PTR [r11]
  40b9ae:	mov    rcx,rdx
  40b9b1:	jmp    40b970 <test_basic_sort@@Base+0x2a0>
  40b9b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40b9b8:	lea    rcx,[rip+0xd7d1]        # 419190 <_IO_stdin_used@@Base+0x3190>
  40b9bf:	mov    edx,0x610
  40b9c4:	lea    rsi,[rip+0xba3d]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40b9cb:	lea    rdi,[rip+0xc636]        # 418008 <_IO_stdin_used@@Base+0x2008>
  40b9d2:	call   4041a0 <__assert_fail@plt>
  40b9d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b9e0:	cmp    rdi,rcx
  40b9e3:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40b9e9:	lea    r8,[rax+rcx*1]
  40b9ed:	movzx  r9d,BYTE PTR [r8]
  40b9f1:	jmp    40b8e6 <test_basic_sort@@Base+0x216>
  40b9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba00:	cmp    rdi,rcx
  40ba03:	jbe    40bb40 <test_basic_sort@@Base+0x470>
  40ba09:	lea    r8,[rax+rcx*1]
  40ba0d:	movzx  r9d,BYTE PTR [r8]
  40ba11:	jmp    40b9a6 <test_basic_sort@@Base+0x2d6>
  40ba13:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba18:	cmp    DWORD PTR [rax-0x4],0x7
  40ba1c:	jne    40b9b8 <test_basic_sort@@Base+0x2e8>
  40ba1e:	movzx  r8d,BYTE PTR [rax]
  40ba22:	cmp    r8b,0x1
  40ba26:	jne    40bb15 <test_basic_sort@@Base+0x445>
  40ba2c:	mov    edi,0x1
  40ba31:	lea    r10,[rsp+0x10]
  40ba36:	mov    r9d,0x6
  40ba3c:	xor    esi,esi
  40ba3e:	mov    rdx,r9
  40ba41:	sub    rdx,rsi
  40ba44:	shr    rdx,1
  40ba47:	add    rdx,rsi
  40ba4a:	cmp    rdx,0x6
  40ba4e:	ja     40bb40 <test_basic_sort@@Base+0x470>
  40ba54:	cmp    BYTE PTR [rax+rdx*1],r8b
  40ba58:	jae    40ba7f <test_basic_sort@@Base+0x3af>
  40ba5a:	jmp    40bac8 <test_basic_sort@@Base+0x3f8>
  40ba5c:	nop    DWORD PTR [rax+0x0]
  40ba60:	mov    rcx,rdx
  40ba63:	sub    rcx,rsi
  40ba66:	shr    rcx,1
  40ba69:	add    rcx,rsi
  40ba6c:	cmp    rcx,0x6
  40ba70:	ja     40bb40 <test_basic_sort@@Base+0x470>
  40ba76:	cmp    BYTE PTR [rax+rcx*1],r8b
  40ba7a:	jb     40bad0 <test_basic_sort@@Base+0x400>
  40ba7c:	mov    rdx,rcx
  40ba7f:	cmp    rsi,rdx
  40ba82:	jb     40ba60 <test_basic_sort@@Base+0x390>
  40ba84:	cmp    rdx,rsi
  40ba87:	je     40bae8 <test_basic_sort@@Base+0x418>
  40ba89:	lea    rsi,[rip+0xc5a8]        # 418038 <_IO_stdin_used@@Base+0x2038>
  40ba90:	mov    edi,0x1
  40ba95:	xor    eax,eax
  40ba97:	call   404220 <__printf_chk@plt>
  40ba9c:	mov    eax,0xffffffff
  40baa1:	nop    DWORD PTR [rax+0x0]
  40baa8:	mov    rbx,QWORD PTR [rsp+0x18]
  40baad:	xor    rbx,QWORD PTR fs:0x28
  40bab6:	jne    40bb5f <test_basic_sort@@Base+0x48f>
  40babc:	add    rsp,0x20
  40bac0:	pop    rbx
  40bac1:	pop    rbp
  40bac2:	pop    r12
  40bac4:	ret    
  40bac5:	nop    DWORD PTR [rax]
  40bac8:	mov    rcx,rdx
  40bacb:	mov    rdx,r9
  40bace:	xchg   ax,ax
  40bad0:	lea    rsi,[rcx+0x1]
  40bad4:	cmp    rsi,rdx
  40bad7:	jae    40ba84 <test_basic_sort@@Base+0x3b4>
  40bad9:	mov    r9,rdx
  40badc:	jmp    40ba3e <test_basic_sort@@Base+0x36e>
  40bae1:	nop    DWORD PTR [rax+0x0]
  40bae8:	cmp    BYTE PTR [rax+rdx*1],r8b
  40baec:	jne    40ba89 <test_basic_sort@@Base+0x3b9>
  40baee:	cmp    dil,0x4
  40baf2:	je     40bb69 <test_basic_sort@@Base+0x499>
  40baf4:	lea    rcx,[rdi-0x1]
  40baf8:	cmp    rcx,rdx
  40bafb:	jne    40ba89 <test_basic_sort@@Base+0x3b9>
  40bafd:	cmp    dil,0x7
  40bb01:	je     40bb38 <test_basic_sort@@Base+0x468>
  40bb03:	movzx  r8d,BYTE PTR [rax+rdi*1]
  40bb08:	inc    rdi
  40bb0b:	cmp    BYTE PTR [r10+rdi*1],r8b
  40bb0f:	je     40ba36 <test_basic_sort@@Base+0x366>
  40bb15:	lea    rsi,[rip+0xab0a]        # 416626 <_IO_stdin_used@@Base+0x626>
  40bb1c:	mov    edi,0x1
  40bb21:	xor    eax,eax
  40bb23:	call   404220 <__printf_chk@plt>
  40bb28:	mov    eax,0xffffffff
  40bb2d:	jmp    40baa8 <test_basic_sort@@Base+0x3d8>
  40bb32:	nop    WORD PTR [rax+rax*1+0x0]
  40bb38:	xor    eax,eax
  40bb3a:	jmp    40baa8 <test_basic_sort@@Base+0x3d8>
  40bb3f:	nop
  40bb40:	lea    rcx,[rip+0xd929]        # 419470 <_IO_stdin_used@@Base+0x3470>
  40bb47:	mov    edx,0x18b
  40bb4c:	lea    rsi,[rip+0xaf8d]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  40bb53:	lea    rdi,[rip+0xb00e]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  40bb5a:	call   4041a0 <__assert_fail@plt>
  40bb5f:	call   404180 <__stack_chk_fail@plt>
  40bb64:	call   404e80 <_start@@Base+0xa30>
  40bb69:	cmp    rdx,0x2
  40bb6d:	je     40bb03 <test_basic_sort@@Base+0x433>
  40bb6f:	jmp    40ba89 <test_basic_sort@@Base+0x3b9>
  40bb74:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bb7f:	nop

000000000040bb80 <test_clone_slice@@Base>:
  40bb80:	endbr64 
  40bb84:	push   r15
  40bb86:	mov    esi,0x1
  40bb8b:	push   r14
  40bb8d:	push   r13
  40bb8f:	push   r12
  40bb91:	push   rbp
  40bb92:	push   rbx
  40bb93:	mov    rbx,rdi
  40bb96:	sub    rsp,0x48
  40bb9a:	mov    rax,QWORD PTR fs:0x28
  40bba3:	mov    QWORD PTR [rsp+0x38],rax
  40bba8:	xor    eax,eax
  40bbaa:	mov    WORD PTR [rsp+0x35],si
  40bbaf:	mov    DWORD PTR [rsp+0x31],0x100
  40bbb7:	mov    BYTE PTR [rsp+0x37],0x0
  40bbbc:	call   40fc30 <flatcc_builder_reset@@Base>
  40bbc1:	xor    ecx,ecx
  40bbc3:	xor    edx,edx
  40bbc5:	lea    rsi,[rip+0xa56f]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40bbcc:	mov    rdi,rbx
  40bbcf:	call   410430 <flatcc_builder_start_buffer@@Base>
  40bbd4:	test   eax,eax
  40bbd6:	jne    40bbe5 <test_clone_slice@@Base+0x65>
  40bbd8:	mov    esi,0x24
  40bbdd:	mov    rdi,rbx
  40bbe0:	call   4110d0 <flatcc_builder_start_table@@Base>
  40bbe5:	lea    rsi,[rip+0xaa50]        # 41663c <_IO_stdin_used@@Base+0x63c>
  40bbec:	mov    rdi,rbx
  40bbef:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40bbf4:	mov    ebp,eax
  40bbf6:	test   eax,eax
  40bbf8:	je     40bc0e <test_clone_slice@@Base+0x8e>
  40bbfa:	mov    esi,0x3
  40bbff:	mov    rdi,rbx
  40bc02:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bc07:	test   rax,rax
  40bc0a:	je     40bc0e <test_clone_slice@@Base+0x8e>
  40bc0c:	mov    DWORD PTR [rax],ebp
  40bc0e:	lea    rax,[rsp+0x31]
  40bc13:	mov    r9d,0xffffffff
  40bc19:	mov    r8d,0x1
  40bc1f:	mov    ecx,0x1
  40bc24:	mov    edx,0x7
  40bc29:	mov    rsi,rax
  40bc2c:	mov    rdi,rbx
  40bc2f:	mov    QWORD PTR [rsp+0x18],rax
  40bc34:	call   411be0 <flatcc_builder_create_vector@@Base>
  40bc39:	mov    ebp,eax
  40bc3b:	test   eax,eax
  40bc3d:	je     40bc53 <test_clone_slice@@Base+0xd3>
  40bc3f:	mov    esi,0x18
  40bc44:	mov    rdi,rbx
  40bc47:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bc4c:	test   rax,rax
  40bc4f:	je     40bc53 <test_clone_slice@@Base+0xd3>
  40bc51:	mov    DWORD PTR [rax],ebp
  40bc53:	mov    ecx,0x3fffffff
  40bc58:	mov    edx,0x2
  40bc5d:	mov    esi,0x4
  40bc62:	mov    rdi,rbx
  40bc65:	call   410eb0 <flatcc_builder_start_vector@@Base>
  40bc6a:	mov    esi,0x2
  40bc6f:	mov    rdi,rbx
  40bc72:	call   410800 <flatcc_builder_extend_vector@@Base>
  40bc77:	mov    edx,0x16
  40bc7c:	mov    ecx,0x2c
  40bc81:	mov    WORD PTR [rax],dx
  40bc84:	mov    WORD PTR [rax+0x4],cx
  40bc88:	mov    rdi,rbx
  40bc8b:	call   411d70 <flatcc_builder_end_vector@@Base>
  40bc90:	mov    ebp,eax
  40bc92:	test   eax,eax
  40bc94:	je     40bcaa <test_clone_slice@@Base+0x12a>
  40bc96:	mov    esi,0x9
  40bc9b:	mov    rdi,rbx
  40bc9e:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bca3:	test   rax,rax
  40bca6:	je     40bcaa <test_clone_slice@@Base+0x12a>
  40bca8:	mov    DWORD PTR [rax],ebp
  40bcaa:	xor    esi,esi
  40bcac:	mov    edx,0x20
  40bcb1:	mov    rdi,rbx
  40bcb4:	mov    ecx,0x10
  40bcb9:	call   412950 <flatcc_builder_table_add@@Base>
  40bcbe:	mov    DWORD PTR [rax],0xc2293333
  40bcc4:	mov    edx,0x1
  40bcc9:	lea    rsi,[rip+0xd960]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40bcd0:	mov    rdi,rbx
  40bcd3:	call   4119c0 <flatcc_builder_check_required@@Base>
  40bcd8:	test   eax,eax
  40bcda:	je     40c6bc <test_clone_slice@@Base+0xb3c>
  40bce0:	mov    rdi,rbx
  40bce3:	call   411a50 <flatcc_builder_end_table@@Base>
  40bce8:	mov    esi,eax
  40bcea:	mov    rdi,rbx
  40bced:	call   410510 <flatcc_builder_end_buffer@@Base>
  40bcf2:	lea    rax,[rsp+0x28]
  40bcf7:	mov    rsi,rax
  40bcfa:	mov    rdi,rbx
  40bcfd:	mov    QWORD PTR [rsp+0x8],rax
  40bd02:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40bd07:	mov    r14,rax
  40bd0a:	mov    rax,QWORD PTR [rip+0x132e7]        # 41eff8 <stderr@GLIBC_2.2.5>
  40bd11:	mov    rdx,QWORD PTR [rsp+0x28]
  40bd16:	mov    rcx,QWORD PTR [rax]
  40bd19:	mov    rsi,r14
  40bd1c:	lea    rdi,[rip+0xa924]        # 416647 <_IO_stdin_used@@Base+0x647>
  40bd23:	call   404590 <_start@@Base+0x140>
  40bd28:	xor    r12d,r12d
  40bd2b:	test   r14,r14
  40bd2e:	je     40bd3e <test_clone_slice@@Base+0x1be>
  40bd30:	cmp    DWORD PTR [r14+0x4],0x534e4f4d
  40bd38:	je     40c190 <test_clone_slice@@Base+0x610>
  40bd3e:	mov    rdi,rbx
  40bd41:	call   40fc30 <flatcc_builder_reset@@Base>
  40bd46:	xor    ecx,ecx
  40bd48:	xor    edx,edx
  40bd4a:	lea    rsi,[rip+0xa3ea]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40bd51:	mov    rdi,rbx
  40bd54:	call   410430 <flatcc_builder_start_buffer@@Base>
  40bd59:	test   eax,eax
  40bd5b:	jne    40bd6a <test_clone_slice@@Base+0x1ea>
  40bd5d:	mov    esi,0x24
  40bd62:	mov    rdi,rbx
  40bd65:	call   4110d0 <flatcc_builder_start_table@@Base>
  40bd6a:	mov    rdi,r12
  40bd6d:	call   404bb0 <_start@@Base+0x760>
  40bd72:	mov    rbp,rax
  40bd75:	test   rax,rax
  40bd78:	je     40c70b <test_clone_slice@@Base+0xb8b>
  40bd7e:	test   r12,r12
  40bd81:	je     40c6e2 <test_clone_slice@@Base+0xb62>
  40bd87:	movsxd rax,DWORD PTR [r12]
  40bd8b:	mov    rdx,r12
  40bd8e:	sub    rdx,rax
  40bd91:	cmp    WORD PTR [rdx],0x35
  40bd95:	jbe    40c537 <test_clone_slice@@Base+0x9b7>
  40bd9b:	movzx  eax,WORD PTR [rdx+0x34]
  40bd9f:	test   ax,ax
  40bda2:	je     40c537 <test_clone_slice@@Base+0x9b7>
  40bda8:	add    rax,r12
  40bdab:	mov    ecx,DWORD PTR [rax]
  40bdad:	lea    r13,[rax+rcx*1+0x4]
  40bdb2:	test   r13,r13
  40bdb5:	je     40c537 <test_clone_slice@@Base+0x9b7>
  40bdbb:	movzx  eax,WORD PTR [rdx+0x16]
  40bdbf:	test   ax,ax
  40bdc2:	je     40c6e7 <test_clone_slice@@Base+0xb67>
  40bdc8:	add    rax,r12
  40bdcb:	mov    edx,DWORD PTR [rax]
  40bdcd:	lea    r15,[rax+rdx*1+0x4]
  40bdd2:	test   r15,r15
  40bdd5:	je     40c6e7 <test_clone_slice@@Base+0xb67>
  40bddb:	mov    edx,DWORD PTR [rbp-0x4]
  40bdde:	mov    rsi,rbp
  40bde1:	mov    rdi,rbx
  40bde4:	call   4126a0 <flatcc_builder_create_string@@Base>
  40bde9:	test   eax,eax
  40bdeb:	mov    DWORD PTR [rsp+0x10],eax
  40bdef:	je     40be09 <test_clone_slice@@Base+0x289>
  40bdf1:	mov    esi,0x3
  40bdf6:	mov    rdi,rbx
  40bdf9:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bdfe:	test   rax,rax
  40be01:	je     40be09 <test_clone_slice@@Base+0x289>
  40be03:	mov    edx,DWORD PTR [rsp+0x10]
  40be07:	mov    DWORD PTR [rax],edx
  40be09:	mov    rdi,rbx
  40be0c:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  40be11:	mov    edx,DWORD PTR [rbp-0x4]
  40be14:	mov    rsi,rbp
  40be17:	mov    rdi,rbx
  40be1a:	call   4126a0 <flatcc_builder_create_string@@Base>
  40be1f:	test   eax,eax
  40be21:	je     40be2d <test_clone_slice@@Base+0x2ad>
  40be23:	mov    esi,eax
  40be25:	mov    rdi,rbx
  40be28:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40be2d:	mov    esi,DWORD PTR [rbp-0x4]
  40be30:	xor    edx,edx
  40be32:	cmp    rsi,0x4
  40be36:	jbe    40be4c <test_clone_slice@@Base+0x2cc>
  40be38:	lea    rdx,[rsi-0x4]
  40be3c:	mov    esi,0x4
  40be41:	cmp    rdx,0x13
  40be45:	jbe    40be4c <test_clone_slice@@Base+0x2cc>
  40be47:	mov    edx,0x14
  40be4c:	add    rsi,rbp
  40be4f:	mov    rdi,rbx
  40be52:	call   4126a0 <flatcc_builder_create_string@@Base>
  40be57:	test   eax,eax
  40be59:	je     40be65 <test_clone_slice@@Base+0x2e5>
  40be5b:	mov    esi,eax
  40be5d:	mov    rdi,rbx
  40be60:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40be65:	mov    edx,DWORD PTR [rbp-0x4]
  40be68:	mov    eax,0x3
  40be6d:	cmp    rdx,0x3
  40be71:	cmovae rdx,rax
  40be75:	mov    rsi,rbp
  40be78:	mov    rdi,rbx
  40be7b:	call   4126a0 <flatcc_builder_create_string@@Base>
  40be80:	test   eax,eax
  40be82:	je     40be8e <test_clone_slice@@Base+0x30e>
  40be84:	mov    esi,eax
  40be86:	mov    rdi,rbx
  40be89:	call   410a40 <flatcc_builder_offset_vector_push@@Base>
  40be8e:	mov    rdi,rbx
  40be91:	call   411e90 <flatcc_builder_end_offset_vector@@Base>
  40be96:	test   eax,eax
  40be98:	mov    DWORD PTR [rsp+0x10],eax
  40be9c:	je     40beb6 <test_clone_slice@@Base+0x336>
  40be9e:	mov    esi,0xa
  40bea3:	mov    rdi,rbx
  40bea6:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40beab:	test   rax,rax
  40beae:	je     40beb6 <test_clone_slice@@Base+0x336>
  40beb0:	mov    edx,DWORD PTR [rsp+0x10]
  40beb4:	mov    DWORD PTR [rax],edx
  40beb6:	mov    esi,0x24
  40bebb:	mov    rdi,rbx
  40bebe:	call   4110d0 <flatcc_builder_start_table@@Base>
  40bec3:	mov    esi,DWORD PTR [rbp-0x4]
  40bec6:	xor    edx,edx
  40bec8:	cmp    rsi,0x2
  40becc:	jbe    40bee2 <test_clone_slice@@Base+0x362>
  40bece:	lea    rdx,[rsi-0x2]
  40bed2:	mov    esi,0x2
  40bed7:	cmp    rdx,0x13
  40bedb:	jbe    40bee2 <test_clone_slice@@Base+0x362>
  40bedd:	mov    edx,0x14
  40bee2:	add    rsi,rbp
  40bee5:	mov    rdi,rbx
  40bee8:	call   4126a0 <flatcc_builder_create_string@@Base>
  40beed:	mov    ebp,eax
  40beef:	test   eax,eax
  40bef1:	je     40bf07 <test_clone_slice@@Base+0x387>
  40bef3:	mov    esi,0x3
  40bef8:	mov    rdi,rbx
  40befb:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bf00:	test   rax,rax
  40bf03:	je     40bf07 <test_clone_slice@@Base+0x387>
  40bf05:	mov    DWORD PTR [rax],ebp
  40bf07:	mov    edx,DWORD PTR [r13-0x4]
  40bf0b:	mov    r9d,0xffffffff
  40bf11:	mov    r8d,0x1
  40bf17:	mov    ecx,0x1
  40bf1c:	mov    rsi,r13
  40bf1f:	mov    rdi,rbx
  40bf22:	call   411be0 <flatcc_builder_create_vector@@Base>
  40bf27:	mov    ebp,eax
  40bf29:	test   eax,eax
  40bf2b:	je     40bf41 <test_clone_slice@@Base+0x3c1>
  40bf2d:	mov    esi,0x18
  40bf32:	mov    rdi,rbx
  40bf35:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bf3a:	test   rax,rax
  40bf3d:	je     40bf41 <test_clone_slice@@Base+0x3c1>
  40bf3f:	mov    DWORD PTR [rax],ebp
  40bf41:	mov    eax,DWORD PTR [r15-0x4]
  40bf45:	cmp    rax,0x1
  40bf49:	ja     40c370 <test_clone_slice@@Base+0x7f0>
  40bf4f:	lea    rsi,[rax*4+0x0]
  40bf57:	xor    edx,edx
  40bf59:	add    rsi,r15
  40bf5c:	mov    r9d,0x3fffffff
  40bf62:	mov    r8d,0x2
  40bf68:	mov    ecx,0x4
  40bf6d:	mov    rdi,rbx
  40bf70:	call   411be0 <flatcc_builder_create_vector@@Base>
  40bf75:	mov    ebp,eax
  40bf77:	test   eax,eax
  40bf79:	je     40bf8f <test_clone_slice@@Base+0x40f>
  40bf7b:	mov    esi,0x9
  40bf80:	mov    rdi,rbx
  40bf83:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bf88:	test   rax,rax
  40bf8b:	je     40bf8f <test_clone_slice@@Base+0x40f>
  40bf8d:	mov    DWORD PTR [rax],ebp
  40bf8f:	mov    edx,0x1
  40bf94:	lea    rsi,[rip+0xd695]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40bf9b:	mov    rdi,rbx
  40bf9e:	call   4119c0 <flatcc_builder_check_required@@Base>
  40bfa3:	test   eax,eax
  40bfa5:	je     40c6bc <test_clone_slice@@Base+0xb3c>
  40bfab:	mov    rdi,rbx
  40bfae:	call   411a50 <flatcc_builder_end_table@@Base>
  40bfb3:	mov    ebp,eax
  40bfb5:	test   eax,eax
  40bfb7:	je     40bff6 <test_clone_slice@@Base+0x476>
  40bfb9:	mov    ecx,0x1
  40bfbe:	mov    edx,0x1
  40bfc3:	mov    esi,0x7
  40bfc8:	mov    rdi,rbx
  40bfcb:	call   412950 <flatcc_builder_table_add@@Base>
  40bfd0:	test   rax,rax
  40bfd3:	mov    QWORD PTR [rsp+0x10],rax
  40bfd8:	je     40bff6 <test_clone_slice@@Base+0x476>
  40bfda:	mov    esi,0x8
  40bfdf:	mov    rdi,rbx
  40bfe2:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40bfe7:	test   rax,rax
  40bfea:	je     40bff6 <test_clone_slice@@Base+0x476>
  40bfec:	mov    rdx,QWORD PTR [rsp+0x10]
  40bff1:	mov    BYTE PTR [rdx],0x1
  40bff4:	mov    DWORD PTR [rax],ebp
  40bff6:	mov    esi,DWORD PTR [r13-0x4]
  40bffa:	xor    edx,edx
  40bffc:	cmp    rsi,0x3
  40c000:	jbe    40c00b <test_clone_slice@@Base+0x48b>
  40c002:	lea    rdx,[rsi-0x3]
  40c006:	mov    esi,0x3
  40c00b:	add    rsi,r13
  40c00e:	mov    r9d,0xffffffff
  40c014:	mov    r8d,0x1
  40c01a:	mov    ecx,0x1
  40c01f:	mov    rdi,rbx
  40c022:	call   411be0 <flatcc_builder_create_vector@@Base>
  40c027:	mov    ebp,eax
  40c029:	test   eax,eax
  40c02b:	je     40c041 <test_clone_slice@@Base+0x4c1>
  40c02d:	mov    esi,0x18
  40c032:	mov    rdi,rbx
  40c035:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40c03a:	test   rax,rax
  40c03d:	je     40c041 <test_clone_slice@@Base+0x4c1>
  40c03f:	mov    DWORD PTR [rax],ebp
  40c041:	movsxd rax,DWORD PTR [r12]
  40c045:	mov    rcx,r12
  40c048:	sub    rcx,rax
  40c04b:	xor    edx,edx
  40c04d:	cmp    WORD PTR [rcx],0x5
  40c051:	jbe    40c061 <test_clone_slice@@Base+0x4e1>
  40c053:	movzx  ecx,WORD PTR [rcx+0x4]
  40c057:	add    r12,rcx
  40c05a:	test   cx,cx
  40c05d:	cmovne rdx,r12
  40c061:	mov    r8d,0x10
  40c067:	mov    ecx,0x20
  40c06c:	xor    esi,esi
  40c06e:	mov    rdi,rbx
  40c071:	call   412ae0 <flatcc_builder_table_add_copy@@Base>
  40c076:	mov    edx,DWORD PTR [r15-0x4]
  40c07a:	mov    r9d,0x3fffffff
  40c080:	mov    r8d,0x2
  40c086:	mov    ecx,0x4
  40c08b:	mov    rsi,r15
  40c08e:	mov    rdi,rbx
  40c091:	call   411be0 <flatcc_builder_create_vector@@Base>
  40c096:	mov    ebp,eax
  40c098:	test   eax,eax
  40c09a:	je     40c0b0 <test_clone_slice@@Base+0x530>
  40c09c:	mov    esi,0x9
  40c0a1:	mov    rdi,rbx
  40c0a4:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40c0a9:	test   rax,rax
  40c0ac:	je     40c0b0 <test_clone_slice@@Base+0x530>
  40c0ae:	mov    DWORD PTR [rax],ebp
  40c0b0:	mov    edx,0x1
  40c0b5:	lea    rsi,[rip+0xd574]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40c0bc:	mov    rdi,rbx
  40c0bf:	call   4119c0 <flatcc_builder_check_required@@Base>
  40c0c4:	test   eax,eax
  40c0c6:	je     40c6bc <test_clone_slice@@Base+0xb3c>
  40c0cc:	mov    rdi,rbx
  40c0cf:	call   411a50 <flatcc_builder_end_table@@Base>
  40c0d4:	mov    esi,eax
  40c0d6:	mov    rdi,rbx
  40c0d9:	call   410510 <flatcc_builder_end_buffer@@Base>
  40c0de:	mov    rsi,QWORD PTR [rsp+0x8]
  40c0e3:	mov    rdi,rbx
  40c0e6:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40c0eb:	mov    rbx,rax
  40c0ee:	mov    rax,QWORD PTR [rip+0x12f03]        # 41eff8 <stderr@GLIBC_2.2.5>
  40c0f5:	mov    rdx,QWORD PTR [rsp+0x28]
  40c0fa:	mov    rcx,QWORD PTR [rax]
  40c0fd:	mov    rsi,rbx
  40c100:	lea    rdi,[rip+0xa566]        # 41666d <_IO_stdin_used@@Base+0x66d>
  40c107:	call   404590 <_start@@Base+0x140>
  40c10c:	test   rbx,rbx
  40c10f:	je     40c11e <test_clone_slice@@Base+0x59e>
  40c111:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40c118:	je     40c1a0 <test_clone_slice@@Base+0x620>
  40c11e:	xor    edi,edi
  40c120:	call   404bb0 <_start@@Base+0x760>
  40c125:	mov    rsi,rax
  40c128:	mov    ecx,0xb
  40c12d:	lea    rdi,[rip+0xa508]        # 41663c <_IO_stdin_used@@Base+0x63c>
  40c134:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c136:	seta   al
  40c139:	sbb    al,0x0
  40c13b:	test   al,al
  40c13d:	je     40c706 <test_clone_slice@@Base+0xb86>
  40c143:	lea    rsi,[rip+0xa53a]        # 416684 <_IO_stdin_used@@Base+0x684>
  40c14a:	mov    edi,0x1
  40c14f:	xor    eax,eax
  40c151:	call   404220 <__printf_chk@plt>
  40c156:	mov    r15d,0xffffffff
  40c15c:	nop    DWORD PTR [rax+0x0]
  40c160:	mov    rdi,r14
  40c163:	call   413290 <flatcc_builder_aligned_free@@Base>
  40c168:	mov    rcx,QWORD PTR [rsp+0x38]
  40c16d:	xor    rcx,QWORD PTR fs:0x28
  40c176:	mov    eax,r15d
  40c179:	jne    40c72a <test_clone_slice@@Base+0xbaa>
  40c17f:	add    rsp,0x48
  40c183:	pop    rbx
  40c184:	pop    rbp
  40c185:	pop    r12
  40c187:	pop    r13
  40c189:	pop    r14
  40c18b:	pop    r15
  40c18d:	ret    
  40c18e:	xchg   ax,ax
  40c190:	mov    r12d,DWORD PTR [r14]
  40c193:	add    r12,r14
  40c196:	jmp    40bd3e <test_clone_slice@@Base+0x1be>
  40c19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c1a0:	mov    edx,DWORD PTR [rbx]
  40c1a2:	add    rbx,rdx
  40c1a5:	mov    rdi,rbx
  40c1a8:	call   404bb0 <_start@@Base+0x760>
  40c1ad:	lea    r9,[rip+0xa488]        # 41663c <_IO_stdin_used@@Base+0x63c>
  40c1b4:	mov    rsi,rax
  40c1b7:	mov    ecx,0xb
  40c1bc:	mov    rdi,r9
  40c1bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c1c1:	seta   al
  40c1c4:	sbb    al,0x0
  40c1c6:	test   al,al
  40c1c8:	jne    40c143 <test_clone_slice@@Base+0x5c3>
  40c1ce:	test   rbx,rbx
  40c1d1:	je     40c706 <test_clone_slice@@Base+0xb86>
  40c1d7:	movsxd rax,DWORD PTR [rbx]
  40c1da:	mov    rbp,rbx
  40c1dd:	sub    rbp,rax
  40c1e0:	movzx  r12d,WORD PTR [rbp+0x0]
  40c1e5:	cmp    r12w,0x19
  40c1ea:	jbe    40c390 <test_clone_slice@@Base+0x810>
  40c1f0:	movzx  eax,WORD PTR [rbp+0x18]
  40c1f4:	test   ax,ax
  40c1f7:	je     40c390 <test_clone_slice@@Base+0x810>
  40c1fd:	add    rax,rbx
  40c200:	mov    edx,DWORD PTR [rax]
  40c202:	lea    rdx,[rax+rdx*1+0x4]
  40c207:	test   rdx,rdx
  40c20a:	je     40c390 <test_clone_slice@@Base+0x810>
  40c210:	mov    r8d,DWORD PTR [rdx-0x4]
  40c214:	test   r8,r8
  40c217:	je     40c390 <test_clone_slice@@Base+0x810>
  40c21d:	mov    eax,DWORD PTR [rdx]
  40c21f:	mov    ecx,0xb
  40c224:	lea    rsi,[rdx+rax*1+0x4]
  40c229:	mov    rdi,r9
  40c22c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c22e:	seta   al
  40c231:	sbb    al,0x0
  40c233:	test   al,al
  40c235:	jne    40c5fe <test_clone_slice@@Base+0xa7e>
  40c23b:	cmp    r8,0x1
  40c23f:	je     40c6dd <test_clone_slice@@Base+0xb5d>
  40c245:	mov    eax,DWORD PTR [rdx+0x4]
  40c248:	lea    rsi,[rdx+rax*1+0x8]
  40c24d:	test   rsi,rsi
  40c250:	je     40c3b0 <test_clone_slice@@Base+0x830>
  40c256:	cmp    DWORD PTR [rsi-0x4],0x6
  40c25a:	jne    40c3b0 <test_clone_slice@@Base+0x830>
  40c260:	mov    ecx,0x7
  40c265:	lea    rdi,[rip+0xa3d4]        # 416640 <_IO_stdin_used@@Base+0x640>
  40c26c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c26e:	seta   al
  40c271:	sbb    al,0x0
  40c273:	test   al,al
  40c275:	jne    40c658 <test_clone_slice@@Base+0xad8>
  40c27b:	cmp    r8,0x2
  40c27f:	je     40c6dd <test_clone_slice@@Base+0xb5d>
  40c285:	mov    eax,DWORD PTR [rdx+0x8]
  40c288:	lea    rsi,[rdx+rax*1+0xc]
  40c28d:	test   rsi,rsi
  40c290:	je     40c3d0 <test_clone_slice@@Base+0x850>
  40c296:	cmp    DWORD PTR [rsi-0x4],0x3
  40c29a:	jne    40c3d0 <test_clone_slice@@Base+0x850>
  40c2a0:	mov    ecx,0x4
  40c2a5:	lea    rdi,[rip+0xa42b]        # 4166d7 <_IO_stdin_used@@Base+0x6d7>
  40c2ac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c2ae:	seta   al
  40c2b1:	sbb    al,0x0
  40c2b3:	test   al,al
  40c2b5:	jne    40c63a <test_clone_slice@@Base+0xaba>
  40c2bb:	movzx  r13d,WORD PTR [rbp+0x14]
  40c2c0:	test   r13w,r13w
  40c2c4:	je     40c556 <test_clone_slice@@Base+0x9d6>
  40c2ca:	add    r13,rbx
  40c2cd:	mov    eax,DWORD PTR [r13+0x0]
  40c2d1:	add    r13,rax
  40c2d4:	je     40c556 <test_clone_slice@@Base+0x9d6>
  40c2da:	mov    rdi,r13
  40c2dd:	call   404bb0 <_start@@Base+0x760>
  40c2e2:	mov    rsi,rax
  40c2e5:	mov    ecx,0x9
  40c2ea:	lea    rdi,[rip+0xa34d]        # 41663e <_IO_stdin_used@@Base+0x63e>
  40c2f1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c2f3:	seta   al
  40c2f6:	sbb    al,0x0
  40c2f8:	test   al,al
  40c2fa:	jne    40c61c <test_clone_slice@@Base+0xa9c>
  40c300:	movsxd rax,DWORD PTR [r13+0x0]
  40c304:	mov    rcx,r13
  40c307:	sub    rcx,rax
  40c30a:	cmp    WORD PTR [rcx],0x35
  40c30e:	jbe    40c3f0 <test_clone_slice@@Base+0x870>
  40c314:	movzx  eax,WORD PTR [rcx+0x34]
  40c318:	test   ax,ax
  40c31b:	je     40c3f0 <test_clone_slice@@Base+0x870>
  40c321:	add    rax,r13
  40c324:	mov    edx,DWORD PTR [rax]
  40c326:	lea    rax,[rax+rdx*1+0x4]
  40c32b:	test   rax,rax
  40c32e:	je     40c3f0 <test_clone_slice@@Base+0x870>
  40c334:	cmp    DWORD PTR [rax-0x4],0x7
  40c338:	jne    40c3f0 <test_clone_slice@@Base+0x870>
  40c33e:	mov    edi,DWORD PTR [rsp+0x31]
  40c342:	cmp    DWORD PTR [rax],edi
  40c344:	je     40c410 <test_clone_slice@@Base+0x890>
  40c34a:	lea    rsi,[rip+0xbd87]        # 4180d8 <_IO_stdin_used@@Base+0x20d8>
  40c351:	mov    edi,0x1
  40c356:	xor    eax,eax
  40c358:	call   404220 <__printf_chk@plt>
  40c35d:	mov    r15d,0xffffffff
  40c363:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c368:	nop    DWORD PTR [rax+rax*1+0x0]
  40c370:	xor    edx,edx
  40c372:	cmp    rax,0x2
  40c376:	setne  dl
  40c379:	mov    esi,0x4
  40c37e:	inc    rdx
  40c381:	jmp    40bf59 <test_clone_slice@@Base+0x3d9>
  40c386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c390:	lea    rcx,[rip+0xcff9]        # 419390 <_IO_stdin_used@@Base+0x3390>
  40c397:	mov    edx,0x6c
  40c39c:	lea    rsi,[rip+0xa73d]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  40c3a3:	lea    rdi,[rip+0xa7be]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  40c3aa:	call   4041a0 <__assert_fail@plt>
  40c3af:	nop
  40c3b0:	lea    rsi,[rip+0xbca1]        # 418058 <_IO_stdin_used@@Base+0x2058>
  40c3b7:	mov    edi,0x1
  40c3bc:	xor    eax,eax
  40c3be:	call   404220 <__printf_chk@plt>
  40c3c3:	mov    r15d,0xffffffff
  40c3c9:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c3ce:	xchg   ax,ax
  40c3d0:	lea    rsi,[rip+0xbca9]        # 418080 <_IO_stdin_used@@Base+0x2080>
  40c3d7:	mov    edi,0x1
  40c3dc:	xor    eax,eax
  40c3de:	call   404220 <__printf_chk@plt>
  40c3e3:	mov    r15d,0xffffffff
  40c3e9:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c3ee:	xchg   ax,ax
  40c3f0:	lea    rsi,[rip+0xa2fb]        # 4166f2 <_IO_stdin_used@@Base+0x6f2>
  40c3f7:	mov    edi,0x1
  40c3fc:	xor    eax,eax
  40c3fe:	call   404220 <__printf_chk@plt>
  40c403:	mov    r15d,0xffffffff
  40c409:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c40e:	xchg   ax,ax
  40c410:	movzx  edi,WORD PTR [rsp+0x35]
  40c415:	cmp    WORD PTR [rax+0x4],di
  40c419:	jne    40c34a <test_clone_slice@@Base+0x7ca>
  40c41f:	mov    rdi,QWORD PTR [rsp+0x18]
  40c424:	movzx  edi,BYTE PTR [rdi+0x6]
  40c428:	cmp    BYTE PTR [rax+0x6],dil
  40c42c:	jne    40c34a <test_clone_slice@@Base+0x7ca>
  40c432:	xor    r15d,r15d
  40c435:	cmp    r12w,0x35
  40c43a:	jbe    40c578 <test_clone_slice@@Base+0x9f8>
  40c440:	movzx  eax,WORD PTR [rbp+0x34]
  40c444:	test   ax,ax
  40c447:	je     40c578 <test_clone_slice@@Base+0x9f8>
  40c44d:	add    rax,rbx
  40c450:	mov    edx,DWORD PTR [rax]
  40c452:	lea    rax,[rax+rdx*1+0x4]
  40c457:	test   rax,rax
  40c45a:	je     40c578 <test_clone_slice@@Base+0x9f8>
  40c460:	cmp    DWORD PTR [rax-0x4],0x4
  40c464:	jne    40c578 <test_clone_slice@@Base+0x9f8>
  40c46a:	mov    edi,DWORD PTR [rsp+0x34]
  40c46e:	cmp    DWORD PTR [rax],edi
  40c470:	jne    40c69e <test_clone_slice@@Base+0xb1e>
  40c476:	movzx  eax,WORD PTR [rbp+0x4]
  40c47a:	test   ax,ax
  40c47d:	je     404259 <posix_memalign@plt+0x19>
  40c483:	vmovss xmm0,DWORD PTR [rbx+rax*1]
  40c488:	vucomiss xmm0,DWORD PTR [rip+0xd1f8]        # 419688 <_IO_stdin_used@@Base+0x3688>
  40c490:	jp     40c680 <test_clone_slice@@Base+0xb00>
  40c496:	jne    40c680 <test_clone_slice@@Base+0xb00>
  40c49c:	movzx  edx,WORD PTR [rbp+0x16]
  40c4a0:	test   dx,dx
  40c4a3:	je     40c5a0 <test_clone_slice@@Base+0xa20>
  40c4a9:	add    rdx,rbx
  40c4ac:	mov    eax,DWORD PTR [rdx]
  40c4ae:	lea    rax,[rdx+rax*1+0x4]
  40c4b3:	test   rax,rax
  40c4b6:	je     40c5a0 <test_clone_slice@@Base+0xa20>
  40c4bc:	cmp    DWORD PTR [rax-0x4],0x2
  40c4c0:	jne    40c5a0 <test_clone_slice@@Base+0xa20>
  40c4c6:	cmp    WORD PTR [rax],0x16
  40c4ca:	jne    40c6c1 <test_clone_slice@@Base+0xb41>
  40c4d0:	cmp    rax,0xfffffffffffffffc
  40c4d4:	je     40c5c0 <test_clone_slice@@Base+0xa40>
  40c4da:	cmp    WORD PTR [rax+0x4],0x2c
  40c4df:	jne    40c5c0 <test_clone_slice@@Base+0xa40>
  40c4e5:	movzx  eax,WORD PTR [rcx+0x16]
  40c4e9:	test   ax,ax
  40c4ec:	je     40c5e0 <test_clone_slice@@Base+0xa60>
  40c4f2:	add    r13,rax
  40c4f5:	mov    eax,DWORD PTR [r13+0x0]
  40c4f9:	lea    rax,[r13+rax*1+0x4]
  40c4fe:	test   rax,rax
  40c501:	je     40c5e0 <test_clone_slice@@Base+0xa60>
  40c507:	cmp    DWORD PTR [rax-0x4],0x1
  40c50b:	jne    40c5e0 <test_clone_slice@@Base+0xa60>
  40c511:	cmp    WORD PTR [rax],0x2c
  40c515:	je     40c160 <test_clone_slice@@Base+0x5e0>
  40c51b:	lea    rsi,[rip+0xbc2e]        # 418150 <_IO_stdin_used@@Base+0x2150>
  40c522:	mov    edi,0x1
  40c527:	xor    eax,eax
  40c529:	call   404220 <__printf_chk@plt>
  40c52e:	or     r15d,0xffffffff
  40c532:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c537:	lea    rcx,[rip+0xcc32]        # 419170 <_IO_stdin_used@@Base+0x3170>
  40c53e:	mov    edx,0x646
  40c543:	lea    rsi,[rip+0xaebe]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40c54a:	lea    rdi,[rip+0xa110]        # 416661 <_IO_stdin_used@@Base+0x661>
  40c551:	call   4041a0 <__assert_fail@plt>
  40c556:	lea    rcx,[rip+0xcc13]        # 419170 <_IO_stdin_used@@Base+0x3170>
  40c55d:	mov    edx,0x680
  40c562:	lea    rsi,[rip+0xae9f]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40c569:	lea    rdi,[rip+0x9d65]        # 4162d5 <_IO_stdin_used@@Base+0x2d5>
  40c570:	call   4041a0 <__assert_fail@plt>
  40c575:	nop    DWORD PTR [rax]
  40c578:	lea    rsi,[rip+0xa190]        # 41670f <_IO_stdin_used@@Base+0x70f>
  40c57f:	mov    edi,0x1
  40c584:	xor    eax,eax
  40c586:	call   404220 <__printf_chk@plt>
  40c58b:	mov    r15d,0xffffffff
  40c591:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c5a0:	lea    rsi,[rip+0xbb71]        # 418118 <_IO_stdin_used@@Base+0x2118>
  40c5a7:	mov    edi,0x1
  40c5ac:	xor    eax,eax
  40c5ae:	call   404220 <__printf_chk@plt>
  40c5b3:	mov    r15d,0xffffffff
  40c5b9:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c5be:	xchg   ax,ax
  40c5c0:	lea    rsi,[rip+0xa19b]        # 416762 <_IO_stdin_used@@Base+0x762>
  40c5c7:	mov    edi,0x1
  40c5cc:	xor    eax,eax
  40c5ce:	call   404220 <__printf_chk@plt>
  40c5d3:	mov    r15d,0xffffffff
  40c5d9:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c5de:	xchg   ax,ax
  40c5e0:	lea    rsi,[rip+0xa197]        # 41677e <_IO_stdin_used@@Base+0x77e>
  40c5e7:	mov    edi,0x1
  40c5ec:	xor    eax,eax
  40c5ee:	call   404220 <__printf_chk@plt>
  40c5f3:	mov    r15d,0xffffffff
  40c5f9:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c5fe:	lea    rsi,[rip+0xa09a]        # 41669f <_IO_stdin_used@@Base+0x69f>
  40c605:	mov    edi,0x1
  40c60a:	xor    eax,eax
  40c60c:	call   404220 <__printf_chk@plt>
  40c611:	mov    r15d,0xffffffff
  40c617:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c61c:	lea    rsi,[rip+0xba85]        # 4180a8 <_IO_stdin_used@@Base+0x20a8>
  40c623:	mov    edi,0x1
  40c628:	xor    eax,eax
  40c62a:	call   404220 <__printf_chk@plt>
  40c62f:	mov    r15d,0xffffffff
  40c635:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c63a:	lea    rsi,[rip+0xa09a]        # 4166db <_IO_stdin_used@@Base+0x6db>
  40c641:	mov    edi,0x1
  40c646:	xor    eax,eax
  40c648:	call   404220 <__printf_chk@plt>
  40c64d:	mov    r15d,0xffffffff
  40c653:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c658:	lea    rsi,[rip+0xa05e]        # 4166bd <_IO_stdin_used@@Base+0x6bd>
  40c65f:	mov    edi,0x1
  40c664:	xor    eax,eax
  40c666:	call   404220 <__printf_chk@plt>
  40c66b:	mov    r15d,0xffffffff
  40c671:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c680:	lea    rsi,[rip+0xa0a5]        # 41672c <_IO_stdin_used@@Base+0x72c>
  40c687:	mov    edi,0x1
  40c68c:	xor    eax,eax
  40c68e:	call   404220 <__printf_chk@plt>
  40c693:	mov    r15d,0xffffffff
  40c699:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c69e:	lea    rsi,[rip+0xba53]        # 4180f8 <_IO_stdin_used@@Base+0x20f8>
  40c6a5:	mov    edi,0x1
  40c6aa:	xor    eax,eax
  40c6ac:	call   404220 <__printf_chk@plt>
  40c6b1:	mov    r15d,0xffffffff
  40c6b7:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c6bc:	call   404e80 <_start@@Base+0xa30>
  40c6c1:	lea    rsi,[rip+0xa07e]        # 416746 <_IO_stdin_used@@Base+0x746>
  40c6c8:	mov    edi,0x1
  40c6cd:	xor    eax,eax
  40c6cf:	call   404220 <__printf_chk@plt>
  40c6d4:	or     r15d,0xffffffff
  40c6d8:	jmp    40c160 <test_clone_slice@@Base+0x5e0>
  40c6dd:	call   404a00 <_start@@Base+0x5b0>
  40c6e2:	call   404a30 <_start@@Base+0x5e0>
  40c6e7:	lea    rcx,[rip+0xca82]        # 419170 <_IO_stdin_used@@Base+0x3170>
  40c6ee:	mov    edx,0x648
  40c6f3:	lea    rsi,[rip+0xad0e]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40c6fa:	lea    rdi,[rip+0x9f66]        # 416667 <_IO_stdin_used@@Base+0x667>
  40c701:	call   4041a0 <__assert_fail@plt>
  40c706:	call   4049d0 <_start@@Base+0x580>
  40c70b:	lea    rcx,[rip+0xca5e]        # 419170 <_IO_stdin_used@@Base+0x3170>
  40c712:	mov    edx,0x644
  40c717:	lea    rsi,[rip+0xacea]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40c71e:	lea    rdi,[rip+0x9cd8]        # 4163fd <_IO_stdin_used@@Base+0x3fd>
  40c725:	call   4041a0 <__assert_fail@plt>
  40c72a:	call   404180 <__stack_chk_fail@plt>
  40c72f:	nop

000000000040c730 <test_create_add_field@@Base>:
  40c730:	endbr64 
  40c734:	push   rbp
  40c735:	push   rbx
  40c736:	mov    rbx,rdi
  40c739:	sub    rsp,0x18
  40c73d:	mov    rax,QWORD PTR fs:0x28
  40c746:	mov    QWORD PTR [rsp+0x8],rax
  40c74b:	xor    eax,eax
  40c74d:	call   40fc30 <flatcc_builder_reset@@Base>
  40c752:	xor    ecx,ecx
  40c754:	xor    edx,edx
  40c756:	lea    rsi,[rip+0x99de]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40c75d:	mov    rdi,rbx
  40c760:	call   410430 <flatcc_builder_start_buffer@@Base>
  40c765:	test   eax,eax
  40c767:	jne    40c776 <test_create_add_field@@Base+0x46>
  40c769:	mov    esi,0x24
  40c76e:	mov    rdi,rbx
  40c771:	call   4110d0 <flatcc_builder_start_table@@Base>
  40c776:	lea    rsi,[rip+0x99d6]        # 416153 <_IO_stdin_used@@Base+0x153>
  40c77d:	mov    rdi,rbx
  40c780:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40c785:	mov    ebp,eax
  40c787:	test   eax,eax
  40c789:	je     40c79f <test_create_add_field@@Base+0x6f>
  40c78b:	mov    esi,0x3
  40c790:	mov    rdi,rbx
  40c793:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40c798:	test   rax,rax
  40c79b:	je     40c79f <test_create_add_field@@Base+0x6f>
  40c79d:	mov    DWORD PTR [rax],ebp
  40c79f:	lea    rsi,[rip+0x9ff6]        # 41679c <_IO_stdin_used@@Base+0x79c>
  40c7a6:	mov    rdi,rbx
  40c7a9:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40c7ae:	mov    esi,0x3
  40c7b3:	mov    rdi,rbx
  40c7b6:	mov    ebp,eax
  40c7b8:	call   4110d0 <flatcc_builder_start_table@@Base>
  40c7bd:	test   eax,eax
  40c7bf:	jne    40c85c <test_create_add_field@@Base+0x12c>
  40c7c5:	mov    ecx,0x8
  40c7ca:	mov    edx,0x8
  40c7cf:	mov    esi,0x1
  40c7d4:	mov    rdi,rbx
  40c7d7:	call   412950 <flatcc_builder_table_add@@Base>
  40c7dc:	test   rax,rax
  40c7df:	je     40c85c <test_create_add_field@@Base+0x12c>
  40c7e1:	mov    QWORD PTR [rax],0xffffffffffffff9c
  40c7e8:	test   ebp,ebp
  40c7ea:	je     40c85c <test_create_add_field@@Base+0x12c>
  40c7ec:	xor    esi,esi
  40c7ee:	mov    rdi,rbx
  40c7f1:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40c7f6:	test   rax,rax
  40c7f9:	je     40c85c <test_create_add_field@@Base+0x12c>
  40c7fb:	mov    DWORD PTR [rax],ebp
  40c7fd:	mov    ecx,0x2
  40c802:	mov    edx,0x2
  40c807:	mov    esi,0x2
  40c80c:	mov    rdi,rbx
  40c80f:	call   412950 <flatcc_builder_table_add@@Base>
  40c814:	test   rax,rax
  40c817:	je     40c85c <test_create_add_field@@Base+0x12c>
  40c819:	mov    edx,0x2
  40c81e:	mov    WORD PTR [rax],dx
  40c821:	lea    rsi,[rip+0xce0e]        # 419636 <_IO_stdin_used@@Base+0x3636>
  40c828:	xor    edx,edx
  40c82a:	mov    rdi,rbx
  40c82d:	call   4119c0 <flatcc_builder_check_required@@Base>
  40c832:	test   eax,eax
  40c834:	je     40c9bc <test_create_add_field@@Base+0x28c>
  40c83a:	mov    rdi,rbx
  40c83d:	call   411a50 <flatcc_builder_end_table@@Base>
  40c842:	mov    ebp,eax
  40c844:	test   eax,eax
  40c846:	je     40c85c <test_create_add_field@@Base+0x12c>
  40c848:	mov    esi,0xe
  40c84d:	mov    rdi,rbx
  40c850:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40c855:	test   rax,rax
  40c858:	je     40c85c <test_create_add_field@@Base+0x12c>
  40c85a:	mov    DWORD PTR [rax],ebp
  40c85c:	mov    edx,0x1
  40c861:	lea    rsi,[rip+0xcdc8]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40c868:	mov    rdi,rbx
  40c86b:	call   4119c0 <flatcc_builder_check_required@@Base>
  40c870:	test   eax,eax
  40c872:	je     40c9b2 <test_create_add_field@@Base+0x282>
  40c878:	mov    rdi,rbx
  40c87b:	call   411a50 <flatcc_builder_end_table@@Base>
  40c880:	mov    esi,eax
  40c882:	mov    rdi,rbx
  40c885:	call   410510 <flatcc_builder_end_buffer@@Base>
  40c88a:	mov    rdi,rbx
  40c88d:	mov    rsi,rsp
  40c890:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40c895:	mov    rbx,rax
  40c898:	test   rax,rax
  40c89b:	je     40c8a6 <test_create_add_field@@Base+0x176>
  40c89d:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40c8a4:	je     40c8c8 <test_create_add_field@@Base+0x198>
  40c8a6:	lea    rcx,[rip+0xc893]        # 419140 <_IO_stdin_used@@Base+0x3140>
  40c8ad:	mov    edx,0x2cc
  40c8b2:	lea    rsi,[rip+0xa17f]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40c8b9:	lea    rdi,[rip+0xa1f8]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40c8c0:	call   4041a0 <__assert_fail@plt>
  40c8c5:	nop    DWORD PTR [rax]
  40c8c8:	mov    eax,DWORD PTR [rax]
  40c8ca:	add    rax,rbx
  40c8cd:	je     40c8a6 <test_create_add_field@@Base+0x176>
  40c8cf:	movsxd rdx,DWORD PTR [rax]
  40c8d2:	mov    rcx,rax
  40c8d5:	sub    rcx,rdx
  40c8d8:	mov    rdx,rcx
  40c8db:	movzx  ecx,WORD PTR [rcx]
  40c8de:	cmp    cx,0x1d
  40c8e2:	jbe    40c974 <test_create_add_field@@Base+0x244>
  40c8e8:	cmp    WORD PTR [rdx+0x1c],0x0
  40c8ed:	jne    40c998 <test_create_add_field@@Base+0x268>
  40c8f3:	cmp    cx,0x21
  40c8f7:	jbe    40c974 <test_create_add_field@@Base+0x244>
  40c8f9:	movzx  edx,WORD PTR [rdx+0x20]
  40c8fd:	test   dx,dx
  40c900:	je     40c974 <test_create_add_field@@Base+0x244>
  40c902:	add    rax,rdx
  40c905:	mov    edx,DWORD PTR [rax]
  40c907:	add    rax,rdx
  40c90a:	je     40c974 <test_create_add_field@@Base+0x244>
  40c90c:	movsxd rdx,DWORD PTR [rax]
  40c90f:	mov    rcx,rax
  40c912:	sub    rcx,rdx
  40c915:	cmp    WORD PTR [rcx],0x7
  40c919:	ja     40c960 <test_create_add_field@@Base+0x230>
  40c91b:	lea    rsi,[rip+0x9e80]        # 4167a2 <_IO_stdin_used@@Base+0x7a2>
  40c922:	mov    edi,0x1
  40c927:	xor    eax,eax
  40c929:	call   404220 <__printf_chk@plt>
  40c92e:	mov    ebp,0xffffffff
  40c933:	nop    DWORD PTR [rax+rax*1+0x0]
  40c938:	mov    rdi,rbx
  40c93b:	call   413290 <flatcc_builder_aligned_free@@Base>
  40c940:	mov    rcx,QWORD PTR [rsp+0x8]
  40c945:	xor    rcx,QWORD PTR fs:0x28
  40c94e:	mov    eax,ebp
  40c950:	jne    40c9b7 <test_create_add_field@@Base+0x287>
  40c952:	add    rsp,0x18
  40c956:	pop    rbx
  40c957:	pop    rbp
  40c958:	ret    
  40c959:	nop    DWORD PTR [rax+0x0]
  40c960:	movzx  edx,WORD PTR [rcx+0x6]
  40c964:	test   dx,dx
  40c967:	je     40c91b <test_create_add_field@@Base+0x1eb>
  40c969:	cmp    QWORD PTR [rax+rdx*1],0xffffffffffffff9c
  40c96e:	jne    40c91b <test_create_add_field@@Base+0x1eb>
  40c970:	xor    ebp,ebp
  40c972:	jmp    40c938 <test_create_add_field@@Base+0x208>
  40c974:	lea    rcx,[rip+0xc795]        # 419110 <_IO_stdin_used@@Base+0x3110>
  40c97b:	mov    edx,0x260
  40c980:	lea    rsi,[rip+0xa0b1]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40c987:	lea    rdi,[rip+0xa12a]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40c98e:	call   4041a0 <__assert_fail@plt>
  40c993:	nop    DWORD PTR [rax+rax*1+0x0]
  40c998:	lea    rsi,[rip+0xb7d9]        # 418178 <_IO_stdin_used@@Base+0x2178>
  40c99f:	mov    edi,0x1
  40c9a4:	xor    eax,eax
  40c9a6:	call   404220 <__printf_chk@plt>
  40c9ab:	mov    ebp,0xffffffff
  40c9b0:	jmp    40c938 <test_create_add_field@@Base+0x208>
  40c9b2:	call   404e80 <_start@@Base+0xa30>
  40c9b7:	call   404180 <__stack_chk_fail@plt>
  40c9bc:	call   404eb0 <_start@@Base+0xa60>
  40c9c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c9cc:	nop    DWORD PTR [rax+0x0]

000000000040c9d0 <test_union_vector@@Base>:
  40c9d0:	endbr64 
  40c9d4:	push   r12
  40c9d6:	push   rbp
  40c9d7:	push   rbx
  40c9d8:	mov    rbx,rdi
  40c9db:	sub    rsp,0x10
  40c9df:	mov    rax,QWORD PTR fs:0x28
  40c9e8:	mov    QWORD PTR [rsp+0x8],rax
  40c9ed:	xor    eax,eax
  40c9ef:	call   40fc30 <flatcc_builder_reset@@Base>
  40c9f4:	xor    ecx,ecx
  40c9f6:	xor    edx,edx
  40c9f8:	lea    rsi,[rip+0x973c]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40c9ff:	mov    rdi,rbx
  40ca02:	call   410430 <flatcc_builder_start_buffer@@Base>
  40ca07:	test   eax,eax
  40ca09:	jne    40ca18 <test_union_vector@@Base+0x48>
  40ca0b:	mov    esi,0x24
  40ca10:	mov    rdi,rbx
  40ca13:	call   4110d0 <flatcc_builder_start_table@@Base>
  40ca18:	lea    rsi,[rip+0x9d97]        # 4167b6 <_IO_stdin_used@@Base+0x7b6>
  40ca1f:	mov    rdi,rbx
  40ca22:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40ca27:	mov    ebp,eax
  40ca29:	test   eax,eax
  40ca2b:	je     40ca41 <test_union_vector@@Base+0x71>
  40ca2d:	mov    esi,0x3
  40ca32:	mov    rdi,rbx
  40ca35:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40ca3a:	test   rax,rax
  40ca3d:	je     40ca41 <test_union_vector@@Base+0x71>
  40ca3f:	mov    DWORD PTR [rax],ebp
  40ca41:	mov    esi,0x4
  40ca46:	mov    rdi,rbx
  40ca49:	call   4110d0 <flatcc_builder_start_table@@Base>
  40ca4e:	test   eax,eax
  40ca50:	jne    40ccd0 <test_union_vector@@Base+0x300>
  40ca56:	xor    edx,edx
  40ca58:	lea    rsi,[rip+0xcbd9]        # 419638 <_IO_stdin_used@@Base+0x3638>
  40ca5f:	mov    rdi,rbx
  40ca62:	call   4119c0 <flatcc_builder_check_required@@Base>
  40ca67:	test   eax,eax
  40ca69:	je     40cd98 <test_union_vector@@Base+0x3c8>
  40ca6f:	mov    rdi,rbx
  40ca72:	call   411a50 <flatcc_builder_end_table@@Base>
  40ca77:	mov    ebp,eax
  40ca79:	mov    rdi,rbx
  40ca7c:	call   4122a0 <flatcc_builder_start_union_vector@@Base>
  40ca81:	mov    rsi,rbp
  40ca84:	shl    rsi,0x20
  40ca88:	or     rsi,0x2
  40ca8c:	mov    rdi,rbx
  40ca8f:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40ca94:	mov    rdi,rbx
  40ca97:	call   412320 <flatcc_builder_end_union_vector@@Base>
  40ca9c:	mov    r12,rax
  40ca9f:	sar    r12,0x20
  40caa3:	mov    esi,0x4
  40caa8:	mov    rdi,rbx
  40caab:	mov    rbp,rax
  40caae:	call   4110d0 <flatcc_builder_start_table@@Base>
  40cab3:	test   r12d,r12d
  40cab6:	je     40cac0 <test_union_vector@@Base+0xf0>
  40cab8:	test   ebp,ebp
  40caba:	jne    40cc70 <test_union_vector@@Base+0x2a0>
  40cac0:	xor    edx,edx
  40cac2:	lea    rsi,[rip+0xcb6b]        # 419634 <_IO_stdin_used@@Base+0x3634>
  40cac9:	mov    rdi,rbx
  40cacc:	call   4119c0 <flatcc_builder_check_required@@Base>
  40cad1:	test   eax,eax
  40cad3:	je     40cd6f <test_union_vector@@Base+0x39f>
  40cad9:	mov    rdi,rbx
  40cadc:	call   411a50 <flatcc_builder_end_table@@Base>
  40cae1:	mov    ebp,eax
  40cae3:	test   eax,eax
  40cae5:	je     40cb1f <test_union_vector@@Base+0x14f>
  40cae7:	mov    ecx,0x1
  40caec:	mov    edx,0x1
  40caf1:	mov    esi,0x7
  40caf6:	mov    rdi,rbx
  40caf9:	call   412950 <flatcc_builder_table_add@@Base>
  40cafe:	mov    r12,rax
  40cb01:	test   rax,rax
  40cb04:	je     40cb1f <test_union_vector@@Base+0x14f>
  40cb06:	mov    esi,0x8
  40cb0b:	mov    rdi,rbx
  40cb0e:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cb13:	test   rax,rax
  40cb16:	je     40cb1f <test_union_vector@@Base+0x14f>
  40cb18:	mov    BYTE PTR [r12],0x4
  40cb1d:	mov    DWORD PTR [rax],ebp
  40cb1f:	mov    edx,0x1
  40cb24:	lea    rsi,[rip+0xcb05]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40cb2b:	mov    rdi,rbx
  40cb2e:	call   4119c0 <flatcc_builder_check_required@@Base>
  40cb33:	test   eax,eax
  40cb35:	je     40cd8e <test_union_vector@@Base+0x3be>
  40cb3b:	mov    rdi,rbx
  40cb3e:	call   411a50 <flatcc_builder_end_table@@Base>
  40cb43:	mov    esi,eax
  40cb45:	mov    rdi,rbx
  40cb48:	call   410510 <flatcc_builder_end_buffer@@Base>
  40cb4d:	mov    rdi,rbx
  40cb50:	mov    rsi,rsp
  40cb53:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40cb58:	mov    rsi,QWORD PTR [rsp]
  40cb5c:	lea    rcx,[rip+0xffffffffffff875d]        # 4052c0 <_start@@Base+0xe70>
  40cb63:	lea    rdx,[rip+0x95d1]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40cb6a:	mov    rdi,rax
  40cb6d:	mov    rbp,rax
  40cb70:	call   414860 <flatcc_verify_table_as_root@@Base>
  40cb75:	mov    ebx,eax
  40cb77:	test   eax,eax
  40cb79:	jne    40cd48 <test_union_vector@@Base+0x378>
  40cb7f:	test   rbp,rbp
  40cb82:	je     40cb8d <test_union_vector@@Base+0x1bd>
  40cb84:	cmp    DWORD PTR [rbp+0x4],0x534e4f4d
  40cb8b:	je     40cb98 <test_union_vector@@Base+0x1c8>
  40cb8d:	call   404ac0 <_start@@Base+0x670>
  40cb92:	nop    WORD PTR [rax+rax*1+0x0]
  40cb98:	mov    eax,DWORD PTR [rbp+0x0]
  40cb9b:	add    rax,rbp
  40cb9e:	je     40cb8d <test_union_vector@@Base+0x1bd>
  40cba0:	movsxd rdx,DWORD PTR [rax]
  40cba3:	mov    rcx,rax
  40cba6:	sub    rcx,rdx
  40cba9:	mov    rdx,rcx
  40cbac:	movzx  ecx,WORD PTR [rcx]
  40cbaf:	cmp    cx,0x13
  40cbb3:	jbe    40cc30 <test_union_vector@@Base+0x260>
  40cbb5:	movzx  esi,WORD PTR [rdx+0x12]
  40cbb9:	test   si,si
  40cbbc:	je     40cc30 <test_union_vector@@Base+0x260>
  40cbbe:	cmp    BYTE PTR [rax+rsi*1],0x4
  40cbc2:	jne    40cc30 <test_union_vector@@Base+0x260>
  40cbc4:	cmp    cx,0x15
  40cbc8:	jbe    40ccb7 <test_union_vector@@Base+0x2e7>
  40cbce:	movzx  edx,WORD PTR [rdx+0x14]
  40cbd2:	test   dx,dx
  40cbd5:	je     40ccb7 <test_union_vector@@Base+0x2e7>
  40cbdb:	add    rax,rdx
  40cbde:	mov    edx,DWORD PTR [rax]
  40cbe0:	add    rax,rdx
  40cbe3:	je     40ccb7 <test_union_vector@@Base+0x2e7>
  40cbe9:	movsxd rdx,DWORD PTR [rax]
  40cbec:	mov    rcx,rax
  40cbef:	sub    rcx,rdx
  40cbf2:	mov    rdx,rcx
  40cbf5:	movzx  ecx,WORD PTR [rcx]
  40cbf8:	cmp    cx,0xb
  40cbfc:	ja     40ccb0 <test_union_vector@@Base+0x2e0>
  40cc02:	cmp    cx,0x9
  40cc06:	jbe    40cc15 <test_union_vector@@Base+0x245>
  40cc08:	movzx  edx,WORD PTR [rdx+0x8]
  40cc0c:	test   dx,dx
  40cc0f:	jne    40cced <test_union_vector@@Base+0x31d>
  40cc15:	lea    rsi,[rip+0xb794]        # 4183b0 <_IO_stdin_used@@Base+0x23b0>
  40cc1c:	mov    edi,0x1
  40cc21:	xor    eax,eax
  40cc23:	call   404220 <__printf_chk@plt>
  40cc28:	jmp    40cc43 <test_union_vector@@Base+0x273>
  40cc2a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc30:	lea    rsi,[rip+0xb721]        # 418358 <_IO_stdin_used@@Base+0x2358>
  40cc37:	mov    edi,0x1
  40cc3c:	xor    eax,eax
  40cc3e:	call   404220 <__printf_chk@plt>
  40cc43:	mov    rdi,rbp
  40cc46:	call   413290 <flatcc_builder_aligned_free@@Base>
  40cc4b:	mov    rcx,QWORD PTR [rsp+0x8]
  40cc50:	xor    rcx,QWORD PTR fs:0x28
  40cc59:	mov    eax,ebx
  40cc5b:	jne    40cd93 <test_union_vector@@Base+0x3c3>
  40cc61:	add    rsp,0x10
  40cc65:	pop    rbx
  40cc66:	pop    rbp
  40cc67:	pop    r12
  40cc69:	ret    
  40cc6a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc70:	mov    esi,0x2
  40cc75:	mov    rdi,rbx
  40cc78:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cc7d:	test   rax,rax
  40cc80:	je     40cac0 <test_union_vector@@Base+0xf0>
  40cc86:	mov    DWORD PTR [rax],ebp
  40cc88:	mov    esi,0x3
  40cc8d:	mov    rdi,rbx
  40cc90:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cc95:	test   rax,rax
  40cc98:	je     40cac0 <test_union_vector@@Base+0xf0>
  40cc9e:	mov    DWORD PTR [rax],r12d
  40cca1:	jmp    40cac0 <test_union_vector@@Base+0xf0>
  40cca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccb0:	cmp    WORD PTR [rdx+0xa],0x0
  40ccb5:	je     40cce0 <test_union_vector@@Base+0x310>
  40ccb7:	lea    rsi,[rip+0xb6c2]        # 418380 <_IO_stdin_used@@Base+0x2380>
  40ccbe:	mov    edi,0x1
  40ccc3:	xor    eax,eax
  40ccc5:	call   404220 <__printf_chk@plt>
  40ccca:	jmp    40cc43 <test_union_vector@@Base+0x273>
  40cccf:	nop
  40ccd0:	xor    ebp,ebp
  40ccd2:	jmp    40ca79 <test_union_vector@@Base+0xa9>
  40ccd7:	nop    WORD PTR [rax+rax*1+0x0]
  40cce0:	movzx  edx,WORD PTR [rdx+0x8]
  40cce4:	test   dx,dx
  40cce7:	je     40cc15 <test_union_vector@@Base+0x245>
  40cced:	add    rax,rdx
  40ccf0:	mov    edx,DWORD PTR [rax]
  40ccf2:	lea    rax,[rax+rdx*1+0x4]
  40ccf7:	test   rax,rax
  40ccfa:	je     40cc15 <test_union_vector@@Base+0x245>
  40cd00:	cmp    DWORD PTR [rax-0x4],0x1
  40cd04:	jne    40cc15 <test_union_vector@@Base+0x245>
  40cd0a:	cmp    BYTE PTR [rax],0x2
  40cd0d:	jne    40cd30 <test_union_vector@@Base+0x360>
  40cd0f:	lea    rcx,[rip+0xc33a]        # 419050 <_IO_stdin_used@@Base+0x3050>
  40cd16:	mov    edx,0x75
  40cd1b:	lea    rsi,[rip+0x9dbe]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  40cd22:	lea    rdi,[rip+0x9e3f]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  40cd29:	call   4041a0 <__assert_fail@plt>
  40cd2e:	xchg   ax,ax
  40cd30:	lea    rsi,[rip+0xb6a1]        # 4183d8 <_IO_stdin_used@@Base+0x23d8>
  40cd37:	mov    edi,0x1
  40cd3c:	xor    eax,eax
  40cd3e:	call   404220 <__printf_chk@plt>
  40cd43:	jmp    40cc43 <test_union_vector@@Base+0x273>
  40cd48:	mov    edi,eax
  40cd4a:	call   413990 <flatcc_verify_error_string@@Base>
  40cd4f:	mov    rdx,rax
  40cd52:	lea    rsi,[rip+0xb5bf]        # 418318 <_IO_stdin_used@@Base+0x2318>
  40cd59:	mov    edi,0x1
  40cd5e:	xor    eax,eax
  40cd60:	call   404220 <__printf_chk@plt>
  40cd65:	mov    ebx,0xffffffff
  40cd6a:	jmp    40cc4b <test_union_vector@@Base+0x27b>
  40cd6f:	lea    rcx,[rip+0xc34a]        # 4190c0 <_IO_stdin_used@@Base+0x30c0>
  40cd76:	mov    edx,0xdf
  40cd7b:	lea    rsi,[rip+0x9e66]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  40cd82:	lea    rdi,[rip+0xb4f7]        # 418280 <_IO_stdin_used@@Base+0x2280>
  40cd89:	call   4041a0 <__assert_fail@plt>
  40cd8e:	call   404e80 <_start@@Base+0xa30>
  40cd93:	call   404180 <__stack_chk_fail@plt>
  40cd98:	lea    rcx,[rip+0xc341]        # 4190e0 <_IO_stdin_used@@Base+0x30e0>
  40cd9f:	mov    edx,0xd9
  40cda4:	lea    rsi,[rip+0x9e3d]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  40cdab:	lea    rdi,[rip+0xb3f6]        # 4181a8 <_IO_stdin_used@@Base+0x21a8>
  40cdb2:	call   4041a0 <__assert_fail@plt>
  40cdb7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040cdc0 <test_mixed_type_union@@Base>:
  40cdc0:	endbr64 
  40cdc4:	push   r15
  40cdc6:	push   r14
  40cdc8:	push   r13
  40cdca:	push   r12
  40cdcc:	push   rbp
  40cdcd:	push   rbx
  40cdce:	mov    rbx,rdi
  40cdd1:	sub    rsp,0x18
  40cdd5:	mov    rax,QWORD PTR fs:0x28
  40cdde:	mov    QWORD PTR [rsp+0x8],rax
  40cde3:	xor    eax,eax
  40cde5:	call   40fc30 <flatcc_builder_reset@@Base>
  40cdea:	xor    ecx,ecx
  40cdec:	xor    edx,edx
  40cdee:	lea    rsi,[rip+0x9346]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40cdf5:	mov    rdi,rbx
  40cdf8:	call   410430 <flatcc_builder_start_buffer@@Base>
  40cdfd:	test   eax,eax
  40cdff:	jne    40ce0e <test_mixed_type_union@@Base+0x4e>
  40ce01:	mov    esi,0xa
  40ce06:	mov    rdi,rbx
  40ce09:	call   4110d0 <flatcc_builder_start_table@@Base>
  40ce0e:	mov    edx,0x4
  40ce13:	mov    esi,0x4
  40ce18:	mov    rdi,rbx
  40ce1b:	call   410660 <flatcc_builder_start_struct@@Base>
  40ce20:	xor    r12d,r12d
  40ce23:	test   rax,rax
  40ce26:	je     40ce39 <test_mixed_type_union@@Base+0x79>
  40ce28:	mov    DWORD PTR [rax],0xa
  40ce2e:	mov    rdi,rbx
  40ce31:	call   410720 <flatcc_builder_end_struct@@Base>
  40ce36:	mov    r12d,eax
  40ce39:	mov    edx,0x2
  40ce3e:	mov    esi,0x2
  40ce43:	mov    rdi,rbx
  40ce46:	call   410660 <flatcc_builder_start_struct@@Base>
  40ce4b:	test   rax,rax
  40ce4e:	je     40d540 <test_mixed_type_union@@Base+0x780>
  40ce54:	mov    esi,0x16
  40ce59:	mov    WORD PTR [rax],si
  40ce5c:	mov    rdi,rbx
  40ce5f:	call   410720 <flatcc_builder_end_struct@@Base>
  40ce64:	mov    edx,0x2
  40ce69:	mov    esi,0x2
  40ce6e:	mov    rdi,rbx
  40ce71:	mov    ebp,eax
  40ce73:	call   410660 <flatcc_builder_start_struct@@Base>
  40ce78:	test   rax,rax
  40ce7b:	je     40cec9 <test_mixed_type_union@@Base+0x109>
  40ce7d:	mov    ecx,0x13
  40ce82:	mov    WORD PTR [rax],cx
  40ce85:	mov    rdi,rbx
  40ce88:	call   410720 <flatcc_builder_end_struct@@Base>
  40ce8d:	mov    r13d,eax
  40ce90:	test   eax,eax
  40ce92:	je     40cec9 <test_mixed_type_union@@Base+0x109>
  40ce94:	mov    ecx,0x1
  40ce99:	mov    edx,0x1
  40ce9e:	xor    esi,esi
  40cea0:	mov    rdi,rbx
  40cea3:	call   412950 <flatcc_builder_table_add@@Base>
  40cea8:	mov    r14,rax
  40ceab:	test   rax,rax
  40ceae:	je     40cec9 <test_mixed_type_union@@Base+0x109>
  40ceb0:	mov    esi,0x1
  40ceb5:	mov    rdi,rbx
  40ceb8:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cebd:	test   rax,rax
  40cec0:	je     40cec9 <test_mixed_type_union@@Base+0x109>
  40cec2:	mov    BYTE PTR [r14],0x8
  40cec6:	mov    DWORD PTR [rax],r13d
  40cec9:	test   ebp,ebp
  40cecb:	je     40d630 <test_mixed_type_union@@Base+0x870>
  40ced1:	mov    ecx,0x1
  40ced6:	mov    edx,0x1
  40cedb:	mov    esi,0x6
  40cee0:	mov    rdi,rbx
  40cee3:	call   412950 <flatcc_builder_table_add@@Base>
  40cee8:	mov    r13,rax
  40ceeb:	test   rax,rax
  40ceee:	je     40cf09 <test_mixed_type_union@@Base+0x149>
  40cef0:	mov    esi,0x7
  40cef5:	mov    rdi,rbx
  40cef8:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cefd:	test   rax,rax
  40cf00:	je     40cf09 <test_mixed_type_union@@Base+0x149>
  40cf02:	mov    BYTE PTR [r13+0x0],0x8
  40cf07:	mov    DWORD PTR [rax],ebp
  40cf09:	mov    esi,0x1
  40cf0e:	mov    rdi,rbx
  40cf11:	call   4110d0 <flatcc_builder_start_table@@Base>
  40cf16:	test   eax,eax
  40cf18:	jne    40d350 <test_mixed_type_union@@Base+0x590>
  40cf1e:	xor    esi,esi
  40cf20:	mov    ecx,0x4
  40cf25:	mov    edx,0x4
  40cf2a:	mov    rdi,rbx
  40cf2d:	call   412950 <flatcc_builder_table_add@@Base>
  40cf32:	test   rax,rax
  40cf35:	je     40d350 <test_mixed_type_union@@Base+0x590>
  40cf3b:	mov    DWORD PTR [rax],0x2a
  40cf41:	xor    edx,edx
  40cf43:	lea    rsi,[rip+0xc6e2]        # 41962c <_IO_stdin_used@@Base+0x362c>
  40cf4a:	mov    rdi,rbx
  40cf4d:	call   4119c0 <flatcc_builder_check_required@@Base>
  40cf52:	test   eax,eax
  40cf54:	je     40d6fa <test_mixed_type_union@@Base+0x93a>
  40cf5a:	mov    rdi,rbx
  40cf5d:	call   411a50 <flatcc_builder_end_table@@Base>
  40cf62:	mov    r13d,eax
  40cf65:	test   eax,eax
  40cf67:	je     40d350 <test_mixed_type_union@@Base+0x590>
  40cf6d:	mov    ecx,0x1
  40cf72:	mov    edx,0x1
  40cf77:	mov    esi,0x2
  40cf7c:	mov    rdi,rbx
  40cf7f:	call   412950 <flatcc_builder_table_add@@Base>
  40cf84:	mov    r14,rax
  40cf87:	test   rax,rax
  40cf8a:	je     40cfa5 <test_mixed_type_union@@Base+0x1e5>
  40cf8c:	mov    esi,0x3
  40cf91:	mov    rdi,rbx
  40cf94:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cf99:	test   rax,rax
  40cf9c:	je     40cfa5 <test_mixed_type_union@@Base+0x1e5>
  40cf9e:	mov    BYTE PTR [r14],0x2
  40cfa2:	mov    DWORD PTR [rax],r13d
  40cfa5:	lea    rsi,[rip+0x9870]        # 41681c <_IO_stdin_used@@Base+0x81c>
  40cfac:	mov    rdi,rbx
  40cfaf:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40cfb4:	mov    r14d,eax
  40cfb7:	test   eax,eax
  40cfb9:	je     40cff3 <test_mixed_type_union@@Base+0x233>
  40cfbb:	mov    ecx,0x1
  40cfc0:	mov    edx,0x1
  40cfc5:	mov    esi,0x4
  40cfca:	mov    rdi,rbx
  40cfcd:	call   412950 <flatcc_builder_table_add@@Base>
  40cfd2:	mov    r15,rax
  40cfd5:	test   rax,rax
  40cfd8:	je     40cff3 <test_mixed_type_union@@Base+0x233>
  40cfda:	mov    esi,0x5
  40cfdf:	mov    rdi,rbx
  40cfe2:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40cfe7:	test   rax,rax
  40cfea:	je     40cff3 <test_mixed_type_union@@Base+0x233>
  40cfec:	mov    BYTE PTR [r15],0xb
  40cff0:	mov    DWORD PTR [rax],r14d
  40cff3:	mov    rdi,rbx
  40cff6:	call   4122a0 <flatcc_builder_start_union_vector@@Base>
  40cffb:	mov    rsi,rbp
  40cffe:	shl    rsi,0x20
  40d002:	or     rsi,0x8
  40d006:	mov    rdi,rbx
  40d009:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d00e:	mov    rsi,r13
  40d011:	shl    rsi,0x20
  40d015:	or     rsi,0x2
  40d019:	mov    rdi,rbx
  40d01c:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d021:	mov    esi,0x1
  40d026:	mov    rdi,rbx
  40d029:	call   4110d0 <flatcc_builder_start_table@@Base>
  40d02e:	test   eax,eax
  40d030:	jne    40d360 <test_mixed_type_union@@Base+0x5a0>
  40d036:	xor    esi,esi
  40d038:	mov    ecx,0x4
  40d03d:	mov    edx,0x4
  40d042:	mov    rdi,rbx
  40d045:	call   412950 <flatcc_builder_table_add@@Base>
  40d04a:	test   rax,rax
  40d04d:	je     40d360 <test_mixed_type_union@@Base+0x5a0>
  40d053:	mov    DWORD PTR [rax],0x1
  40d059:	xor    edx,edx
  40d05b:	lea    rsi,[rip+0xc5ca]        # 41962c <_IO_stdin_used@@Base+0x362c>
  40d062:	mov    rdi,rbx
  40d065:	call   4119c0 <flatcc_builder_check_required@@Base>
  40d06a:	test   eax,eax
  40d06c:	je     40d6fa <test_mixed_type_union@@Base+0x93a>
  40d072:	mov    rdi,rbx
  40d075:	call   411a50 <flatcc_builder_end_table@@Base>
  40d07a:	mov    rsi,rax
  40d07d:	shl    rsi,0x20
  40d081:	or     rsi,0x2
  40d085:	mov    rdi,rbx
  40d088:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d08d:	lea    rsi,[rip+0x9793]        # 416827 <_IO_stdin_used@@Base+0x827>
  40d094:	mov    rdi,rbx
  40d097:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40d09c:	mov    rsi,rax
  40d09f:	shl    rsi,0x20
  40d0a3:	or     rsi,0xb
  40d0a7:	mov    rdi,rbx
  40d0aa:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d0af:	mov    rsi,r12
  40d0b2:	shl    rsi,0x20
  40d0b6:	or     rsi,0x9
  40d0ba:	mov    rdi,rbx
  40d0bd:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d0c2:	mov    edx,0x4
  40d0c7:	mov    esi,0x4
  40d0cc:	mov    rdi,rbx
  40d0cf:	call   410660 <flatcc_builder_start_struct@@Base>
  40d0d4:	mov    DWORD PTR [rax],0x3
  40d0da:	mov    rdi,rbx
  40d0dd:	call   410720 <flatcc_builder_end_struct@@Base>
  40d0e2:	mov    rsi,rax
  40d0e5:	shl    rsi,0x20
  40d0e9:	or     rsi,0x9
  40d0ed:	mov    rdi,rbx
  40d0f0:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d0f5:	mov    esi,0x4
  40d0fa:	mov    edx,0x4
  40d0ff:	mov    rdi,rbx
  40d102:	call   410660 <flatcc_builder_start_struct@@Base>
  40d107:	xor    esi,esi
  40d109:	test   rax,rax
  40d10c:	je     40d11e <test_mixed_type_union@@Base+0x35e>
  40d10e:	mov    DWORD PTR [rax],0x1
  40d114:	mov    rdi,rbx
  40d117:	call   410720 <flatcc_builder_end_struct@@Base>
  40d11c:	mov    esi,eax
  40d11e:	shl    rsi,0x20
  40d122:	or     rsi,0x9
  40d126:	mov    rdi,rbx
  40d129:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d12e:	mov    esi,0x4
  40d133:	mov    edx,0x4
  40d138:	mov    rdi,rbx
  40d13b:	call   410660 <flatcc_builder_start_struct@@Base>
  40d140:	xor    esi,esi
  40d142:	test   rax,rax
  40d145:	je     40d157 <test_mixed_type_union@@Base+0x397>
  40d147:	mov    DWORD PTR [rax],0x2
  40d14d:	mov    rdi,rbx
  40d150:	call   410720 <flatcc_builder_end_struct@@Base>
  40d155:	mov    esi,eax
  40d157:	shl    rsi,0x20
  40d15b:	or     rsi,0x9
  40d15f:	mov    rdi,rbx
  40d162:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d167:	lea    rsi,[rip+0x96b7]        # 416825 <_IO_stdin_used@@Base+0x825>
  40d16e:	mov    rdi,rbx
  40d171:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40d176:	mov    rsi,rax
  40d179:	shl    rsi,0x20
  40d17d:	or     rsi,0xb
  40d181:	mov    rdi,rbx
  40d184:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d189:	lea    rsi,[rip+0x9691]        # 416821 <_IO_stdin_used@@Base+0x821>
  40d190:	mov    rdi,rbx
  40d193:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40d198:	mov    rsi,rax
  40d19b:	shl    rsi,0x20
  40d19f:	or     rsi,0xb
  40d1a3:	mov    rdi,rbx
  40d1a6:	call   412560 <flatcc_builder_union_vector_push@@Base>
  40d1ab:	mov    rdi,rbx
  40d1ae:	call   412320 <flatcc_builder_end_union_vector@@Base>
  40d1b3:	mov    r12,rax
  40d1b6:	mov    rbp,rax
  40d1b9:	sar    r12,0x20
  40d1bd:	test   eax,eax
  40d1bf:	je     40d1ca <test_mixed_type_union@@Base+0x40a>
  40d1c1:	test   r12d,r12d
  40d1c4:	jne    40d310 <test_mixed_type_union@@Base+0x550>
  40d1ca:	xor    edx,edx
  40d1cc:	lea    rsi,[rip+0xc457]        # 41962a <_IO_stdin_used@@Base+0x362a>
  40d1d3:	mov    rdi,rbx
  40d1d6:	call   4119c0 <flatcc_builder_check_required@@Base>
  40d1db:	test   eax,eax
  40d1dd:	je     40d734 <test_mixed_type_union@@Base+0x974>
  40d1e3:	mov    rdi,rbx
  40d1e6:	call   411a50 <flatcc_builder_end_table@@Base>
  40d1eb:	mov    esi,eax
  40d1ed:	mov    rdi,rbx
  40d1f0:	call   410510 <flatcc_builder_end_buffer@@Base>
  40d1f5:	mov    rsi,rsp
  40d1f8:	mov    rdi,rbx
  40d1fb:	call   413130 <flatcc_builder_finalize_aligned_buffer@@Base>
  40d200:	mov    rbp,rax
  40d203:	mov    rax,QWORD PTR [rip+0x11dee]        # 41eff8 <stderr@GLIBC_2.2.5>
  40d20a:	mov    rdx,QWORD PTR [rsp]
  40d20e:	mov    rcx,QWORD PTR [rax]
  40d211:	mov    rsi,rbp
  40d214:	lea    rdi,[rip+0x9612]        # 41682d <_IO_stdin_used@@Base+0x82d>
  40d21b:	call   404590 <_start@@Base+0x140>
  40d220:	mov    rsi,QWORD PTR [rsp]
  40d224:	lea    rcx,[rip+0xffffffffffff8625]        # 405850 <_start@@Base+0x1400>
  40d22b:	lea    rdx,[rip+0x8f09]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40d232:	mov    rdi,rbp
  40d235:	call   414860 <flatcc_verify_table_as_root@@Base>
  40d23a:	test   eax,eax
  40d23c:	jne    40d697 <test_mixed_type_union@@Base+0x8d7>
  40d242:	test   rbp,rbp
  40d245:	je     40d250 <test_mixed_type_union@@Base+0x490>
  40d247:	cmp    DWORD PTR [rbp+0x4],0x534e4f4d
  40d24e:	je     40d270 <test_mixed_type_union@@Base+0x4b0>
  40d250:	lea    rcx,[rip+0xbd29]        # 418f80 <_IO_stdin_used@@Base+0x2f80>
  40d257:	mov    edx,0x333
  40d25c:	lea    rsi,[rip+0x97d5]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40d263:	lea    rdi,[rip+0x984e]        # 416ab8 <_IO_stdin_used@@Base+0xab8>
  40d26a:	call   4041a0 <__assert_fail@plt>
  40d26f:	nop
  40d270:	mov    ebx,DWORD PTR [rbp+0x0]
  40d273:	add    rbx,rbp
  40d276:	je     40d250 <test_mixed_type_union@@Base+0x490>
  40d278:	movsxd rax,DWORD PTR [rbx]
  40d27b:	mov    r12,rbx
  40d27e:	sub    r12,rax
  40d281:	movzx  edx,WORD PTR [r12]
  40d286:	cmp    dx,0x7
  40d28a:	jbe    40d2f0 <test_mixed_type_union@@Base+0x530>
  40d28c:	movzx  eax,WORD PTR [r12+0x6]
  40d292:	test   ax,ax
  40d295:	je     40d2f0 <test_mixed_type_union@@Base+0x530>
  40d297:	cmp    dx,0x17
  40d29b:	ja     40d370 <test_mixed_type_union@@Base+0x5b0>
  40d2a1:	lea    rsi,[rip+0xb3a8]        # 418650 <_IO_stdin_used@@Base+0x2650>
  40d2a8:	mov    edi,0x1
  40d2ad:	xor    eax,eax
  40d2af:	call   404220 <__printf_chk@plt>
  40d2b4:	mov    ebx,0xffffffff
  40d2b9:	mov    rdi,rbp
  40d2bc:	call   413290 <flatcc_builder_aligned_free@@Base>
  40d2c1:	mov    rcx,QWORD PTR [rsp+0x8]
  40d2c6:	xor    rcx,QWORD PTR fs:0x28
  40d2cf:	mov    eax,ebx
  40d2d1:	jne    40d753 <test_mixed_type_union@@Base+0x993>
  40d2d7:	add    rsp,0x18
  40d2db:	pop    rbx
  40d2dc:	pop    rbp
  40d2dd:	pop    r12
  40d2df:	pop    r13
  40d2e1:	pop    r14
  40d2e3:	pop    r15
  40d2e5:	ret    
  40d2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2f0:	lea    rsi,[rip+0xb329]        # 418620 <_IO_stdin_used@@Base+0x2620>
  40d2f7:	mov    edi,0x1
  40d2fc:	xor    eax,eax
  40d2fe:	call   404220 <__printf_chk@plt>
  40d303:	mov    ebx,0xffffffff
  40d308:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d30a:	nop    WORD PTR [rax+rax*1+0x0]
  40d310:	mov    esi,0x8
  40d315:	mov    rdi,rbx
  40d318:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40d31d:	test   rax,rax
  40d320:	je     40d1ca <test_mixed_type_union@@Base+0x40a>
  40d326:	mov    DWORD PTR [rax],ebp
  40d328:	mov    esi,0x9
  40d32d:	mov    rdi,rbx
  40d330:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40d335:	test   rax,rax
  40d338:	je     40d1ca <test_mixed_type_union@@Base+0x40a>
  40d33e:	mov    DWORD PTR [rax],r12d
  40d341:	jmp    40d1ca <test_mixed_type_union@@Base+0x40a>
  40d346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d350:	xor    r13d,r13d
  40d353:	jmp    40cfa5 <test_mixed_type_union@@Base+0x1e5>
  40d358:	nop    DWORD PTR [rax+rax*1+0x0]
  40d360:	xor    eax,eax
  40d362:	jmp    40d07a <test_mixed_type_union@@Base+0x2ba>
  40d367:	nop    WORD PTR [rax+rax*1+0x0]
  40d370:	movzx  r13d,WORD PTR [r12+0x16]
  40d376:	test   r13w,r13w
  40d37a:	je     40d2a1 <test_mixed_type_union@@Base+0x4e1>
  40d380:	movzx  edx,WORD PTR [r12+0x4]
  40d386:	test   dx,dx
  40d389:	je     40d5a0 <test_mixed_type_union@@Base+0x7e0>
  40d38f:	movzx  ecx,BYTE PTR [rbx+rdx*1]
  40d393:	test   cl,cl
  40d395:	je     40d5a0 <test_mixed_type_union@@Base+0x7e0>
  40d39b:	add    rax,rbx
  40d39e:	mov    edx,DWORD PTR [rax]
  40d3a0:	add    rax,rdx
  40d3a3:	cmp    cl,0x8
  40d3a6:	jne    40d5a0 <test_mixed_type_union@@Base+0x7e0>
  40d3ac:	test   rax,rax
  40d3af:	je     40d5c0 <test_mixed_type_union@@Base+0x800>
  40d3b5:	cmp    WORD PTR [rax],0x13
  40d3b9:	ja     40d610 <test_mixed_type_union@@Base+0x850>
  40d3bf:	jne    40d5d1 <test_mixed_type_union@@Base+0x811>
  40d3c5:	movzx  eax,WORD PTR [r12+0x10]
  40d3cb:	test   ax,ax
  40d3ce:	je     40d5f0 <test_mixed_type_union@@Base+0x830>
  40d3d4:	cmp    BYTE PTR [rbx+rax*1],0x8
  40d3d8:	jne    40d5f0 <test_mixed_type_union@@Base+0x830>
  40d3de:	movzx  eax,WORD PTR [r12+0x12]
  40d3e4:	test   ax,ax
  40d3e7:	je     40d6c0 <test_mixed_type_union@@Base+0x900>
  40d3ed:	add    rax,rbx
  40d3f0:	mov    edx,DWORD PTR [rax]
  40d3f2:	add    rax,rdx
  40d3f5:	je     40d6c0 <test_mixed_type_union@@Base+0x900>
  40d3fb:	cmp    WORD PTR [rax],0x16
  40d3ff:	jne    40d640 <test_mixed_type_union@@Base+0x880>
  40d405:	movzx  eax,WORD PTR [r12+0x8]
  40d40b:	test   ax,ax
  40d40e:	je     40d65d <test_mixed_type_union@@Base+0x89d>
  40d414:	cmp    BYTE PTR [rbx+rax*1],0x2
  40d418:	jne    40d65d <test_mixed_type_union@@Base+0x89d>
  40d41e:	movzx  eax,WORD PTR [r12+0xa]
  40d424:	test   ax,ax
  40d427:	je     40d67a <test_mixed_type_union@@Base+0x8ba>
  40d42d:	add    rax,rbx
  40d430:	mov    edx,DWORD PTR [rax]
  40d432:	add    rax,rdx
  40d435:	je     40d67a <test_mixed_type_union@@Base+0x8ba>
  40d43b:	movsxd rdx,DWORD PTR [rax]
  40d43e:	mov    rcx,rax
  40d441:	sub    rcx,rdx
  40d444:	cmp    WORD PTR [rcx],0x5
  40d448:	jbe    40d67a <test_mixed_type_union@@Base+0x8ba>
  40d44e:	movzx  edx,WORD PTR [rcx+0x4]
  40d452:	test   dx,dx
  40d455:	je     40d67a <test_mixed_type_union@@Base+0x8ba>
  40d45b:	cmp    DWORD PTR [rax+rdx*1],0x2a
  40d45f:	jne    40d67a <test_mixed_type_union@@Base+0x8ba>
  40d465:	movzx  eax,WORD PTR [r12+0xc]
  40d46b:	test   ax,ax
  40d46e:	je     40d6dd <test_mixed_type_union@@Base+0x91d>
  40d474:	cmp    BYTE PTR [rbx+rax*1],0xb
  40d478:	jne    40d6dd <test_mixed_type_union@@Base+0x91d>
  40d47e:	movzx  eax,WORD PTR [r12+0xe]
  40d484:	test   ax,ax
  40d487:	je     40d719 <test_mixed_type_union@@Base+0x959>
  40d48d:	add    rax,rbx
  40d490:	mov    r14d,DWORD PTR [rax]
  40d493:	add    rax,r14
  40d496:	je     40d719 <test_mixed_type_union@@Base+0x959>
  40d49c:	add    rax,0x4
  40d4a0:	mov    r14,rax
  40d4a3:	je     40d719 <test_mixed_type_union@@Base+0x959>
  40d4a9:	lea    rsi,[rip+0x936c]        # 41681c <_IO_stdin_used@@Base+0x81c>
  40d4b0:	mov    rdi,rax
  40d4b3:	call   4041e0 <strcmp@plt>
  40d4b8:	test   eax,eax
  40d4ba:	jne    40d758 <test_mixed_type_union@@Base+0x998>
  40d4c0:	movzx  eax,WORD PTR [r12+0x14]
  40d4c6:	test   ax,ax
  40d4c9:	je     40d7d4 <test_mixed_type_union@@Base+0xa14>
  40d4cf:	add    rax,rbx
  40d4d2:	mov    edx,DWORD PTR [rax]
  40d4d4:	lea    rax,[rax+rdx*1+0x4]
  40d4d9:	movzx  edx,r13w
  40d4dd:	add    rdx,rbx
  40d4e0:	mov    ecx,DWORD PTR [rdx]
  40d4e2:	lea    r12,[rdx+rcx*1+0x4]
  40d4e7:	test   rax,rax
  40d4ea:	je     40d7e2 <test_mixed_type_union@@Base+0xa22>
  40d4f0:	mov    edx,DWORD PTR [rax-0x4]
  40d4f3:	test   r12,r12
  40d4f6:	je     40d7a5 <test_mixed_type_union@@Base+0x9e5>
  40d4fc:	mov    ecx,DWORD PTR [r12-0x4]
  40d501:	mov    r13,r12
  40d504:	mov    r12,rax
  40d507:	cmp    rcx,rdx
  40d50a:	jne    40d826 <test_mixed_type_union@@Base+0xa66>
  40d510:	xor    edx,edx
  40d512:	mov    rdi,r12
  40d515:	mov    rsi,r13
  40d518:	call   404de0 <_start@@Base+0x990>
  40d51d:	cmp    al,0x8
  40d51f:	je     40d776 <test_mixed_type_union@@Base+0x9b6>
  40d525:	lea    rsi,[rip+0xb294]        # 4187c0 <_IO_stdin_used@@Base+0x27c0>
  40d52c:	mov    edi,0x1
  40d531:	xor    eax,eax
  40d533:	call   404220 <__printf_chk@plt>
  40d538:	or     ebx,0xffffffff
  40d53b:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d540:	mov    edx,0x2
  40d545:	mov    esi,0x2
  40d54a:	mov    rdi,rbx
  40d54d:	call   410660 <flatcc_builder_start_struct@@Base>
  40d552:	test   rax,rax
  40d555:	je     40d630 <test_mixed_type_union@@Base+0x870>
  40d55b:	mov    edx,0x13
  40d560:	mov    WORD PTR [rax],dx
  40d563:	mov    rdi,rbx
  40d566:	call   410720 <flatcc_builder_end_struct@@Base>
  40d56b:	mov    r13d,eax
  40d56e:	test   eax,eax
  40d570:	je     40d630 <test_mixed_type_union@@Base+0x870>
  40d576:	mov    ecx,0x1
  40d57b:	mov    edx,0x1
  40d580:	xor    esi,esi
  40d582:	mov    rdi,rbx
  40d585:	call   412950 <flatcc_builder_table_add@@Base>
  40d58a:	mov    r14,rax
  40d58d:	test   rax,rax
  40d590:	je     40d630 <test_mixed_type_union@@Base+0x870>
  40d596:	xor    ebp,ebp
  40d598:	jmp    40ceb0 <test_mixed_type_union@@Base+0xf0>
  40d59d:	nop    DWORD PTR [rax]
  40d5a0:	lea    rsi,[rip+0x9293]        # 41683a <_IO_stdin_used@@Base+0x83a>
  40d5a7:	mov    edi,0x1
  40d5ac:	xor    eax,eax
  40d5ae:	call   404220 <__printf_chk@plt>
  40d5b3:	mov    ebx,0xffffffff
  40d5b8:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d5bd:	nop    DWORD PTR [rax]
  40d5c0:	lea    rsi,[rip+0x928f]        # 416856 <_IO_stdin_used@@Base+0x856>
  40d5c7:	mov    edi,0x1
  40d5cc:	call   404220 <__printf_chk@plt>
  40d5d1:	lea    rsi,[rip+0xb0d0]        # 4186a8 <_IO_stdin_used@@Base+0x26a8>
  40d5d8:	mov    edi,0x1
  40d5dd:	xor    eax,eax
  40d5df:	call   404220 <__printf_chk@plt>
  40d5e4:	mov    ebx,0xffffffff
  40d5e9:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d5ee:	xchg   ax,ax
  40d5f0:	lea    rsi,[rip+0xb0e1]        # 4186d8 <_IO_stdin_used@@Base+0x26d8>
  40d5f7:	mov    edi,0x1
  40d5fc:	xor    eax,eax
  40d5fe:	call   404220 <__printf_chk@plt>
  40d603:	mov    ebx,0xffffffff
  40d608:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d60d:	nop    DWORD PTR [rax]
  40d610:	lea    rsi,[rip+0xb069]        # 418680 <_IO_stdin_used@@Base+0x2680>
  40d617:	mov    edi,0x1
  40d61c:	xor    eax,eax
  40d61e:	call   404220 <__printf_chk@plt>
  40d623:	mov    ebx,0xffffffff
  40d628:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d62d:	nop    DWORD PTR [rax]
  40d630:	xor    ebp,ebp
  40d632:	jmp    40cf09 <test_mixed_type_union@@Base+0x149>
  40d637:	nop    WORD PTR [rax+rax*1+0x0]
  40d640:	lea    rsi,[rip+0xb0f9]        # 418740 <_IO_stdin_used@@Base+0x2740>
  40d647:	mov    edi,0x1
  40d64c:	xor    eax,eax
  40d64e:	call   404220 <__printf_chk@plt>
  40d653:	mov    ebx,0xffffffff
  40d658:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d65d:	lea    rsi,[rip+0x920a]        # 41686e <_IO_stdin_used@@Base+0x86e>
  40d664:	mov    edi,0x1
  40d669:	xor    eax,eax
  40d66b:	call   404220 <__printf_chk@plt>
  40d670:	mov    ebx,0xffffffff
  40d675:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d67a:	lea    rsi,[rip+0xb0ef]        # 418770 <_IO_stdin_used@@Base+0x2770>
  40d681:	mov    edi,0x1
  40d686:	xor    eax,eax
  40d688:	call   404220 <__printf_chk@plt>
  40d68d:	mov    ebx,0xffffffff
  40d692:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d697:	mov    edi,eax
  40d699:	call   413990 <flatcc_verify_error_string@@Base>
  40d69e:	mov    rdx,rax
  40d6a1:	lea    rsi,[rip+0xaf28]        # 4185d0 <_IO_stdin_used@@Base+0x25d0>
  40d6a8:	mov    edi,0x1
  40d6ad:	xor    eax,eax
  40d6af:	call   404220 <__printf_chk@plt>
  40d6b4:	mov    ebx,0xffffffff
  40d6b9:	jmp    40d2c1 <test_mixed_type_union@@Base+0x501>
  40d6be:	xchg   ax,ax
  40d6c0:	lea    rsi,[rip+0xb049]        # 418710 <_IO_stdin_used@@Base+0x2710>
  40d6c7:	mov    edi,0x1
  40d6cc:	xor    eax,eax
  40d6ce:	call   404220 <__printf_chk@plt>
  40d6d3:	mov    ebx,0xffffffff
  40d6d8:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d6dd:	lea    rsi,[rip+0x91a2]        # 416886 <_IO_stdin_used@@Base+0x886>
  40d6e4:	mov    edi,0x1
  40d6e9:	xor    eax,eax
  40d6eb:	call   404220 <__printf_chk@plt>
  40d6f0:	mov    ebx,0xffffffff
  40d6f5:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d6fa:	lea    rcx,[rip+0xb8cf]        # 418fd0 <_IO_stdin_used@@Base+0x2fd0>
  40d701:	mov    edx,0xef
  40d706:	lea    rsi,[rip+0x94db]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  40d70d:	lea    rdi,[rip+0xada4]        # 4184b8 <_IO_stdin_used@@Base+0x24b8>
  40d714:	call   4041a0 <__assert_fail@plt>
  40d719:	lea    rsi,[rip+0x917d]        # 41689d <_IO_stdin_used@@Base+0x89d>
  40d720:	mov    edi,0x1
  40d725:	xor    eax,eax
  40d727:	call   404220 <__printf_chk@plt>
  40d72c:	or     ebx,0xffffffff
  40d72f:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d734:	lea    rcx,[rip+0xb875]        # 418fb0 <_IO_stdin_used@@Base+0x2fb0>
  40d73b:	mov    edx,0xf1
  40d740:	lea    rsi,[rip+0x94a1]        # 416be8 <_IO_stdin_used@@Base+0xbe8>
  40d747:	lea    rdi,[rip+0xadfa]        # 418548 <_IO_stdin_used@@Base+0x2548>
  40d74e:	call   4041a0 <__assert_fail@plt>
  40d753:	call   404180 <__stack_chk_fail@plt>
  40d758:	mov    rdx,r14
  40d75b:	lea    rsi,[rip+0xb036]        # 418798 <_IO_stdin_used@@Base+0x2798>
  40d762:	mov    edi,0x1
  40d767:	xor    eax,eax
  40d769:	call   404220 <__printf_chk@plt>
  40d76e:	or     ebx,0xffffffff
  40d771:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d776:	mov    edx,0x1
  40d77b:	mov    rdi,r12
  40d77e:	mov    rsi,r13
  40d781:	call   404de0 <_start@@Base+0x990>
  40d786:	cmp    al,0x2
  40d788:	je     40d7ac <test_mixed_type_union@@Base+0x9ec>
  40d78a:	lea    rsi,[rip+0xb057]        # 4187e8 <_IO_stdin_used@@Base+0x27e8>
  40d791:	mov    edi,0x1
  40d796:	xor    eax,eax
  40d798:	call   404220 <__printf_chk@plt>
  40d79d:	or     ebx,0xffffffff
  40d7a0:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d7a5:	xor    ecx,ecx
  40d7a7:	jmp    40d501 <test_mixed_type_union@@Base+0x741>
  40d7ac:	mov    rdi,rdx
  40d7af:	call   404d60 <_start@@Base+0x910>
  40d7b4:	cmp    eax,0x2a
  40d7b7:	je     40d7f7 <test_mixed_type_union@@Base+0xa37>
  40d7b9:	lea    rsi,[rip+0xb050]        # 418810 <_IO_stdin_used@@Base+0x2810>
  40d7c0:	mov    edi,0x1
  40d7c5:	xor    eax,eax
  40d7c7:	call   404220 <__printf_chk@plt>
  40d7cc:	or     ebx,0xffffffff
  40d7cf:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d7d4:	movzx  eax,r13w
  40d7d8:	add    rax,rbx
  40d7db:	mov    edx,DWORD PTR [rax]
  40d7dd:	lea    r12,[rax+rdx*1+0x4]
  40d7e2:	xor    r13d,r13d
  40d7e5:	test   r12,r12
  40d7e8:	je     40d510 <test_mixed_type_union@@Base+0x750>
  40d7ee:	xor    eax,eax
  40d7f0:	xor    edx,edx
  40d7f2:	jmp    40d4fc <test_mixed_type_union@@Base+0x73c>
  40d7f7:	mov    edx,0x2
  40d7fc:	mov    rdi,r12
  40d7ff:	mov    rsi,r13
  40d802:	call   404de0 <_start@@Base+0x990>
  40d807:	cmp    al,0x2
  40d809:	je     40d845 <test_mixed_type_union@@Base+0xa85>
  40d80b:	lea    rsi,[rip+0xb036]        # 418848 <_IO_stdin_used@@Base+0x2848>
  40d812:	mov    edi,0x1
  40d817:	xor    eax,eax
  40d819:	call   404220 <__printf_chk@plt>
  40d81e:	or     ebx,0xffffffff
  40d821:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d826:	lea    rcx,[rip+0xb6e3]        # 418f10 <_IO_stdin_used@@Base+0x2f10>
  40d82d:	mov    edx,0x337
  40d832:	lea    rsi,[rip+0x91ff]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40d839:	lea    rdi,[rip+0xabc8]        # 418408 <_IO_stdin_used@@Base+0x2408>
  40d840:	call   4041a0 <__assert_fail@plt>
  40d845:	mov    rdi,rdx
  40d848:	call   404d60 <_start@@Base+0x910>
  40d84d:	dec    eax
  40d84f:	je     40d86c <test_mixed_type_union@@Base+0xaac>
  40d851:	lea    rsi,[rip+0xb018]        # 418870 <_IO_stdin_used@@Base+0x2870>
  40d858:	mov    edi,0x1
  40d85d:	xor    eax,eax
  40d85f:	call   404220 <__printf_chk@plt>
  40d864:	or     ebx,0xffffffff
  40d867:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d86c:	movsxd rax,DWORD PTR [rbx]
  40d86f:	mov    rcx,rbx
  40d872:	sub    rcx,rax
  40d875:	cmp    WORD PTR [rcx],0x15
  40d879:	jbe    40d8ba <test_mixed_type_union@@Base+0xafa>
  40d87b:	movzx  eax,WORD PTR [rcx+0x14]
  40d87f:	test   ax,ax
  40d882:	je     40d8ba <test_mixed_type_union@@Base+0xafa>
  40d884:	add    rbx,rax
  40d887:	mov    eax,DWORD PTR [rbx]
  40d889:	lea    rax,[rbx+rax*1+0x4]
  40d88e:	test   rax,rax
  40d891:	je     40d8ba <test_mixed_type_union@@Base+0xafa>
  40d893:	cmp    DWORD PTR [rax-0x4],0x3
  40d897:	jbe    40d8ba <test_mixed_type_union@@Base+0xafa>
  40d899:	cmp    BYTE PTR [rax+0x3],0xb
  40d89d:	je     40d8bf <test_mixed_type_union@@Base+0xaff>
  40d89f:	lea    rsi,[rip+0xb002]        # 4188a8 <_IO_stdin_used@@Base+0x28a8>
  40d8a6:	mov    edi,0x1
  40d8ab:	xor    eax,eax
  40d8ad:	call   404220 <__printf_chk@plt>
  40d8b2:	or     ebx,0xffffffff
  40d8b5:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d8ba:	call   404cd0 <_start@@Base+0x880>
  40d8bf:	test   r13,r13
  40d8c2:	je     40d968 <test_mixed_type_union@@Base+0xba8>
  40d8c8:	cmp    DWORD PTR [r13-0x4],0x3
  40d8cd:	jbe    40d968 <test_mixed_type_union@@Base+0xba8>
  40d8d3:	mov    eax,DWORD PTR [r13+0xc]
  40d8d7:	lea    rdi,[r13+rax*1+0x10]
  40d8dc:	test   rdi,rdi
  40d8df:	je     40da1b <test_mixed_type_union@@Base+0xc5b>
  40d8e5:	lea    rsi,[rip+0x8f3b]        # 416827 <_IO_stdin_used@@Base+0x827>
  40d8ec:	call   4041e0 <strcmp@plt>
  40d8f1:	test   eax,eax
  40d8f3:	jne    40da1b <test_mixed_type_union@@Base+0xc5b>
  40d8f9:	mov    edx,0x3
  40d8fe:	mov    rdi,r12
  40d901:	mov    rsi,r13
  40d904:	call   404de0 <_start@@Base+0x990>
  40d909:	cmp    al,0xb
  40d90b:	jne    40da00 <test_mixed_type_union@@Base+0xc40>
  40d911:	test   rdx,rdx
  40d914:	je     40d9b6 <test_mixed_type_union@@Base+0xbf6>
  40d91a:	add    rdx,0x4
  40d91e:	mov    rdi,rdx
  40d921:	je     40d9b6 <test_mixed_type_union@@Base+0xbf6>
  40d927:	lea    rsi,[rip+0x8ef9]        # 416827 <_IO_stdin_used@@Base+0x827>
  40d92e:	call   4041e0 <strcmp@plt>
  40d933:	mov    ebx,eax
  40d935:	test   eax,eax
  40d937:	jne    40d9b6 <test_mixed_type_union@@Base+0xbf6>
  40d939:	mov    edx,0x4
  40d93e:	mov    rdi,r12
  40d941:	mov    rsi,r13
  40d944:	call   404de0 <_start@@Base+0x990>
  40d949:	cmp    al,0x9
  40d94b:	je     40d987 <test_mixed_type_union@@Base+0xbc7>
  40d94d:	lea    rsi,[rip+0xb034]        # 418988 <_IO_stdin_used@@Base+0x2988>
  40d954:	mov    edi,0x1
  40d959:	xor    eax,eax
  40d95b:	call   404220 <__printf_chk@plt>
  40d960:	or     ebx,0xffffffff
  40d963:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d968:	lea    rcx,[rip+0xb511]        # 418e80 <_IO_stdin_used@@Base+0x2e80>
  40d96f:	mov    edx,0x77
  40d974:	lea    rsi,[rip+0x9165]        # 416ae0 <_IO_stdin_used@@Base+0xae0>
  40d97b:	lea    rdi,[rip+0x91e6]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  40d982:	call   4041a0 <__assert_fail@plt>
  40d987:	mov    edx,0x5
  40d98c:	mov    rdi,r12
  40d98f:	mov    rsi,r13
  40d992:	call   404de0 <_start@@Base+0x990>
  40d997:	cmp    al,0x9
  40d999:	je     40d9d1 <test_mixed_type_union@@Base+0xc11>
  40d99b:	lea    rsi,[rip+0xb00e]        # 4189b0 <_IO_stdin_used@@Base+0x29b0>
  40d9a2:	mov    edi,0x1
  40d9a7:	xor    eax,eax
  40d9a9:	call   404220 <__printf_chk@plt>
  40d9ae:	or     ebx,0xffffffff
  40d9b1:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d9b6:	lea    rsi,[rip+0xaf8b]        # 418948 <_IO_stdin_used@@Base+0x2948>
  40d9bd:	mov    edi,0x1
  40d9c2:	xor    eax,eax
  40d9c4:	call   404220 <__printf_chk@plt>
  40d9c9:	or     ebx,0xffffffff
  40d9cc:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40d9d1:	mov    edx,0x6
  40d9d6:	mov    rdi,r12
  40d9d9:	mov    rsi,r13
  40d9dc:	call   404de0 <_start@@Base+0x990>
  40d9e1:	cmp    al,0x9
  40d9e3:	je     40da36 <test_mixed_type_union@@Base+0xc76>
  40d9e5:	lea    rsi,[rip+0xafec]        # 4189d8 <_IO_stdin_used@@Base+0x29d8>
  40d9ec:	mov    edi,0x1
  40d9f1:	xor    eax,eax
  40d9f3:	call   404220 <__printf_chk@plt>
  40d9f8:	or     ebx,0xffffffff
  40d9fb:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40da00:	lea    rsi,[rip+0xaf09]        # 418910 <_IO_stdin_used@@Base+0x2910>
  40da07:	mov    edi,0x1
  40da0c:	xor    eax,eax
  40da0e:	call   404220 <__printf_chk@plt>
  40da13:	or     ebx,0xffffffff
  40da16:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40da1b:	lea    rsi,[rip+0xaeb6]        # 4188d8 <_IO_stdin_used@@Base+0x28d8>
  40da22:	mov    edi,0x1
  40da27:	xor    eax,eax
  40da29:	call   404220 <__printf_chk@plt>
  40da2e:	or     ebx,0xffffffff
  40da31:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40da36:	mov    edx,0x7
  40da3b:	mov    rdi,r12
  40da3e:	mov    rsi,r13
  40da41:	call   404de0 <_start@@Base+0x990>
  40da46:	cmp    al,0x9
  40da48:	je     40da65 <test_mixed_type_union@@Base+0xca5>
  40da4a:	lea    rsi,[rip+0xafaf]        # 418a00 <_IO_stdin_used@@Base+0x2a00>
  40da51:	mov    edi,0x1
  40da56:	xor    eax,eax
  40da58:	call   404220 <__printf_chk@plt>
  40da5d:	or     ebx,0xffffffff
  40da60:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40da65:	mov    edx,0x8
  40da6a:	mov    rdi,r12
  40da6d:	mov    rsi,r13
  40da70:	call   404de0 <_start@@Base+0x990>
  40da75:	cmp    al,0xb
  40da77:	jne    40dab9 <test_mixed_type_union@@Base+0xcf9>
  40da79:	mov    edx,0x9
  40da7e:	mov    rdi,r12
  40da81:	mov    rsi,r13
  40da84:	call   404de0 <_start@@Base+0x990>
  40da89:	cmp    al,0xb
  40da8b:	jne    40dab9 <test_mixed_type_union@@Base+0xcf9>
  40da8d:	test   r12,r12
  40da90:	je     40da9e <test_mixed_type_union@@Base+0xcde>
  40da92:	cmp    DWORD PTR [r12-0x4],0xa
  40da98:	je     40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40da9e:	lea    rsi,[rip+0xafb3]        # 418a58 <_IO_stdin_used@@Base+0x2a58>
  40daa5:	mov    edi,0x1
  40daaa:	xor    eax,eax
  40daac:	call   404220 <__printf_chk@plt>
  40dab1:	or     ebx,0xffffffff
  40dab4:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40dab9:	lea    rsi,[rip+0xaf68]        # 418a28 <_IO_stdin_used@@Base+0x2a28>
  40dac0:	mov    edi,0x1
  40dac5:	xor    eax,eax
  40dac7:	call   404220 <__printf_chk@plt>
  40dacc:	or     ebx,0xffffffff
  40dacf:	jmp    40d2b9 <test_mixed_type_union@@Base+0x4f9>
  40dad4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40dadf:	nop

000000000040dae0 <test_add_set_defaults@@Base>:
  40dae0:	endbr64 
  40dae4:	push   r12
  40dae6:	push   rbp
  40dae7:	push   rbx
  40dae8:	mov    rbx,rdi
  40daeb:	sub    rsp,0x10
  40daef:	mov    rax,QWORD PTR fs:0x28
  40daf8:	mov    QWORD PTR [rsp+0x8],rax
  40dafd:	xor    eax,eax
  40daff:	call   40fc30 <flatcc_builder_reset@@Base>
  40db04:	xor    ecx,ecx
  40db06:	xor    edx,edx
  40db08:	lea    rsi,[rip+0x862c]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40db0f:	mov    rdi,rbx
  40db12:	call   410430 <flatcc_builder_start_buffer@@Base>
  40db17:	test   eax,eax
  40db19:	jne    40db28 <test_add_set_defaults@@Base+0x48>
  40db1b:	mov    esi,0x24
  40db20:	mov    rdi,rbx
  40db23:	call   4110d0 <flatcc_builder_start_table@@Base>
  40db28:	lea    rsi,[rip+0x8624]        # 416153 <_IO_stdin_used@@Base+0x153>
  40db2f:	mov    rdi,rbx
  40db32:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40db37:	mov    ebp,eax
  40db39:	test   eax,eax
  40db3b:	je     40db51 <test_add_set_defaults@@Base+0x71>
  40db3d:	mov    esi,0x3
  40db42:	mov    rdi,rbx
  40db45:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40db4a:	test   rax,rax
  40db4d:	je     40db51 <test_add_set_defaults@@Base+0x71>
  40db4f:	mov    DWORD PTR [rax],ebp
  40db51:	mov    ecx,0x2
  40db56:	mov    edx,0x2
  40db5b:	mov    esi,0x1
  40db60:	mov    rdi,rbx
  40db63:	call   412950 <flatcc_builder_table_add@@Base>
  40db68:	test   rax,rax
  40db6b:	je     40db75 <test_add_set_defaults@@Base+0x95>
  40db6d:	mov    esi,0x64
  40db72:	mov    WORD PTR [rax],si
  40db75:	mov    edx,0x1
  40db7a:	lea    rsi,[rip+0xbaaf]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40db81:	mov    rdi,rbx
  40db84:	call   4119c0 <flatcc_builder_check_required@@Base>
  40db89:	test   eax,eax
  40db8b:	je     40de3a <test_add_set_defaults@@Base+0x35a>
  40db91:	mov    rdi,rbx
  40db94:	call   411a50 <flatcc_builder_end_table@@Base>
  40db99:	mov    esi,eax
  40db9b:	mov    rdi,rbx
  40db9e:	mov    rbp,rsp
  40dba1:	call   410510 <flatcc_builder_end_buffer@@Base>
  40dba6:	mov    rsi,rbp
  40dba9:	mov    rdi,rbx
  40dbac:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40dbb1:	test   rax,rax
  40dbb4:	je     40dbbf <test_add_set_defaults@@Base+0xdf>
  40dbb6:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40dbbd:	je     40dbc8 <test_add_set_defaults@@Base+0xe8>
  40dbbf:	call   404850 <_start@@Base+0x400>
  40dbc4:	nop    DWORD PTR [rax+0x0]
  40dbc8:	mov    edx,DWORD PTR [rax]
  40dbca:	add    rax,rdx
  40dbcd:	je     40dbbf <test_add_set_defaults@@Base+0xdf>
  40dbcf:	movsxd rdx,DWORD PTR [rax]
  40dbd2:	sub    rax,rdx
  40dbd5:	movzx  edx,WORD PTR [rax]
  40dbd8:	cmp    dx,0x9
  40dbdc:	jbe    40dd70 <test_add_set_defaults@@Base+0x290>
  40dbe2:	cmp    WORD PTR [rax+0x8],0x0
  40dbe7:	jne    40dde0 <test_add_set_defaults@@Base+0x300>
  40dbed:	cmp    WORD PTR [rax+0x6],0x0
  40dbf2:	je     40dd76 <test_add_set_defaults@@Base+0x296>
  40dbf8:	cmp    dx,0x11
  40dbfc:	jbe    40dc09 <test_add_set_defaults@@Base+0x129>
  40dbfe:	cmp    WORD PTR [rax+0x10],0x0
  40dc03:	jne    40de00 <test_add_set_defaults@@Base+0x320>
  40dc09:	mov    rdi,rbx
  40dc0c:	call   40fc30 <flatcc_builder_reset@@Base>
  40dc11:	xor    ecx,ecx
  40dc13:	xor    edx,edx
  40dc15:	lea    rsi,[rip+0x851f]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40dc1c:	mov    rdi,rbx
  40dc1f:	call   410430 <flatcc_builder_start_buffer@@Base>
  40dc24:	test   eax,eax
  40dc26:	jne    40dc35 <test_add_set_defaults@@Base+0x155>
  40dc28:	mov    esi,0x24
  40dc2d:	mov    rdi,rbx
  40dc30:	call   4110d0 <flatcc_builder_start_table@@Base>
  40dc35:	lea    rsi,[rip+0x8517]        # 416153 <_IO_stdin_used@@Base+0x153>
  40dc3c:	mov    rdi,rbx
  40dc3f:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40dc44:	mov    r12d,eax
  40dc47:	test   eax,eax
  40dc49:	je     40dc60 <test_add_set_defaults@@Base+0x180>
  40dc4b:	mov    esi,0x3
  40dc50:	mov    rdi,rbx
  40dc53:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40dc58:	test   rax,rax
  40dc5b:	je     40dc60 <test_add_set_defaults@@Base+0x180>
  40dc5d:	mov    DWORD PTR [rax],r12d
  40dc60:	mov    ecx,0x2
  40dc65:	mov    edx,0x2
  40dc6a:	mov    esi,0x2
  40dc6f:	mov    rdi,rbx
  40dc72:	call   412950 <flatcc_builder_table_add@@Base>
  40dc77:	test   rax,rax
  40dc7a:	je     40dc84 <test_add_set_defaults@@Base+0x1a4>
  40dc7c:	mov    ecx,0x64
  40dc81:	mov    WORD PTR [rax],cx
  40dc84:	mov    ecx,0x2
  40dc89:	mov    edx,0x2
  40dc8e:	mov    esi,0x1
  40dc93:	mov    rdi,rbx
  40dc96:	call   412950 <flatcc_builder_table_add@@Base>
  40dc9b:	test   rax,rax
  40dc9e:	je     40dca8 <test_add_set_defaults@@Base+0x1c8>
  40dca0:	mov    edx,0x64
  40dca5:	mov    WORD PTR [rax],dx
  40dca8:	mov    ecx,0x1
  40dcad:	mov    edx,0x1
  40dcb2:	mov    esi,0x6
  40dcb7:	mov    rdi,rbx
  40dcba:	call   412950 <flatcc_builder_table_add@@Base>
  40dcbf:	test   rax,rax
  40dcc2:	je     40dcc7 <test_add_set_defaults@@Base+0x1e7>
  40dcc4:	mov    BYTE PTR [rax],0x8
  40dcc7:	mov    edx,0x1
  40dccc:	lea    rsi,[rip+0xb95d]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40dcd3:	mov    rdi,rbx
  40dcd6:	call   4119c0 <flatcc_builder_check_required@@Base>
  40dcdb:	test   eax,eax
  40dcdd:	je     40de3a <test_add_set_defaults@@Base+0x35a>
  40dce3:	mov    rdi,rbx
  40dce6:	call   411a50 <flatcc_builder_end_table@@Base>
  40dceb:	mov    esi,eax
  40dced:	mov    rdi,rbx
  40dcf0:	call   410510 <flatcc_builder_end_buffer@@Base>
  40dcf5:	mov    rsi,rbp
  40dcf8:	mov    rdi,rbx
  40dcfb:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40dd00:	test   rax,rax
  40dd03:	je     40dbbf <test_add_set_defaults@@Base+0xdf>
  40dd09:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40dd10:	jne    40dbbf <test_add_set_defaults@@Base+0xdf>
  40dd16:	mov    edx,DWORD PTR [rax]
  40dd18:	add    rax,rdx
  40dd1b:	je     40dbbf <test_add_set_defaults@@Base+0xdf>
  40dd21:	movsxd rdx,DWORD PTR [rax]
  40dd24:	sub    rax,rdx
  40dd27:	movzx  edx,WORD PTR [rax]
  40dd2a:	cmp    dx,0x9
  40dd2e:	ja     40dd90 <test_add_set_defaults@@Base+0x2b0>
  40dd30:	lea    rsi,[rip+0xadd9]        # 418b10 <_IO_stdin_used@@Base+0x2b10>
  40dd37:	mov    edi,0x1
  40dd3c:	xor    eax,eax
  40dd3e:	call   404220 <__printf_chk@plt>
  40dd43:	mov    eax,0xffffffff
  40dd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd50:	mov    rcx,QWORD PTR [rsp+0x8]
  40dd55:	xor    rcx,QWORD PTR fs:0x28
  40dd5e:	jne    40de3f <test_add_set_defaults@@Base+0x35f>
  40dd64:	add    rsp,0x10
  40dd68:	pop    rbx
  40dd69:	pop    rbp
  40dd6a:	pop    r12
  40dd6c:	ret    
  40dd6d:	nop    DWORD PTR [rax]
  40dd70:	cmp    dx,0x7
  40dd74:	ja     40ddd0 <test_add_set_defaults@@Base+0x2f0>
  40dd76:	lea    rsi,[rip+0xad33]        # 418ab0 <_IO_stdin_used@@Base+0x2ab0>
  40dd7d:	mov    edi,0x1
  40dd82:	xor    eax,eax
  40dd84:	call   404220 <__printf_chk@plt>
  40dd89:	mov    eax,0xffffffff
  40dd8e:	jmp    40dd50 <test_add_set_defaults@@Base+0x270>
  40dd90:	cmp    WORD PTR [rax+0x8],0x0
  40dd95:	je     40dd30 <test_add_set_defaults@@Base+0x250>
  40dd97:	cmp    WORD PTR [rax+0x6],0x0
  40dd9c:	je     40de1d <test_add_set_defaults@@Base+0x33d>
  40dd9e:	cmp    dx,0x11
  40dda2:	ja     40ddc0 <test_add_set_defaults@@Base+0x2e0>
  40dda4:	lea    rsi,[rip+0xaddd]        # 418b88 <_IO_stdin_used@@Base+0x2b88>
  40ddab:	mov    edi,0x1
  40ddb0:	xor    eax,eax
  40ddb2:	call   404220 <__printf_chk@plt>
  40ddb7:	mov    eax,0xffffffff
  40ddbc:	jmp    40dd50 <test_add_set_defaults@@Base+0x270>
  40ddbe:	xchg   ax,ax
  40ddc0:	cmp    WORD PTR [rax+0x10],0x0
  40ddc5:	je     40dda4 <test_add_set_defaults@@Base+0x2c4>
  40ddc7:	xor    eax,eax
  40ddc9:	jmp    40dd50 <test_add_set_defaults@@Base+0x270>
  40ddcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ddd0:	cmp    WORD PTR [rax+0x6],0x0
  40ddd5:	jne    40dc09 <test_add_set_defaults@@Base+0x129>
  40dddb:	jmp    40dd76 <test_add_set_defaults@@Base+0x296>
  40dddd:	nop    DWORD PTR [rax]
  40dde0:	lea    rsi,[rip+0xac99]        # 418a80 <_IO_stdin_used@@Base+0x2a80>
  40dde7:	mov    edi,0x1
  40ddec:	xor    eax,eax
  40ddee:	call   404220 <__printf_chk@plt>
  40ddf3:	mov    eax,0xffffffff
  40ddf8:	jmp    40dd50 <test_add_set_defaults@@Base+0x270>
  40ddfd:	nop    DWORD PTR [rax]
  40de00:	lea    rsi,[rip+0xacd9]        # 418ae0 <_IO_stdin_used@@Base+0x2ae0>
  40de07:	mov    edi,0x1
  40de0c:	xor    eax,eax
  40de0e:	call   404220 <__printf_chk@plt>
  40de13:	mov    eax,0xffffffff
  40de18:	jmp    40dd50 <test_add_set_defaults@@Base+0x270>
  40de1d:	lea    rsi,[rip+0xad24]        # 418b48 <_IO_stdin_used@@Base+0x2b48>
  40de24:	mov    edi,0x1
  40de29:	xor    eax,eax
  40de2b:	call   404220 <__printf_chk@plt>
  40de30:	mov    eax,0xffffffff
  40de35:	jmp    40dd50 <test_add_set_defaults@@Base+0x270>
  40de3a:	call   404e80 <_start@@Base+0xa30>
  40de3f:	call   404180 <__stack_chk_fail@plt>
  40de44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40de4f:	nop

000000000040de50 <test_nested_buffer@@Base>:
  40de50:	endbr64 
  40de54:	push   rbp
  40de55:	push   rbx
  40de56:	mov    rbx,rdi
  40de59:	sub    rsp,0x18
  40de5d:	mov    rax,QWORD PTR fs:0x28
  40de66:	mov    QWORD PTR [rsp+0x8],rax
  40de6b:	xor    eax,eax
  40de6d:	call   40fc30 <flatcc_builder_reset@@Base>
  40de72:	xor    ecx,ecx
  40de74:	xor    edx,edx
  40de76:	lea    rsi,[rip+0x82be]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40de7d:	mov    rdi,rbx
  40de80:	call   410430 <flatcc_builder_start_buffer@@Base>
  40de85:	test   eax,eax
  40de87:	jne    40de96 <test_nested_buffer@@Base+0x46>
  40de89:	mov    esi,0x24
  40de8e:	mov    rdi,rbx
  40de91:	call   4110d0 <flatcc_builder_start_table@@Base>
  40de96:	lea    rsi,[rip+0x82b6]        # 416153 <_IO_stdin_used@@Base+0x153>
  40de9d:	mov    rdi,rbx
  40dea0:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40dea5:	mov    ebp,eax
  40dea7:	test   eax,eax
  40dea9:	je     40debf <test_nested_buffer@@Base+0x6f>
  40deab:	mov    esi,0x3
  40deb0:	mov    rdi,rbx
  40deb3:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40deb8:	test   rax,rax
  40debb:	je     40debf <test_nested_buffer@@Base+0x6f>
  40debd:	mov    DWORD PTR [rax],ebp
  40debf:	xor    ecx,ecx
  40dec1:	xor    edx,edx
  40dec3:	lea    rsi,[rip+0x8271]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40deca:	mov    rdi,rbx
  40decd:	call   410430 <flatcc_builder_start_buffer@@Base>
  40ded2:	test   eax,eax
  40ded4:	jne    40dee3 <test_nested_buffer@@Base+0x93>
  40ded6:	mov    esi,0x24
  40dedb:	mov    rdi,rbx
  40dede:	call   4110d0 <flatcc_builder_start_table@@Base>
  40dee3:	lea    rsi,[rip+0x89ce]        # 4168b8 <_IO_stdin_used@@Base+0x8b8>
  40deea:	mov    rdi,rbx
  40deed:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40def2:	mov    ebp,eax
  40def4:	test   eax,eax
  40def6:	je     40df0c <test_nested_buffer@@Base+0xbc>
  40def8:	mov    esi,0x3
  40defd:	mov    rdi,rbx
  40df00:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40df05:	test   rax,rax
  40df08:	je     40df0c <test_nested_buffer@@Base+0xbc>
  40df0a:	mov    DWORD PTR [rax],ebp
  40df0c:	mov    edx,0x1
  40df11:	lea    rsi,[rip+0xb718]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40df18:	mov    rdi,rbx
  40df1b:	call   4119c0 <flatcc_builder_check_required@@Base>
  40df20:	test   eax,eax
  40df22:	je     40e196 <test_nested_buffer@@Base+0x346>
  40df28:	mov    rdi,rbx
  40df2b:	call   411a50 <flatcc_builder_end_table@@Base>
  40df30:	mov    esi,eax
  40df32:	mov    rdi,rbx
  40df35:	call   410510 <flatcc_builder_end_buffer@@Base>
  40df3a:	mov    ebp,eax
  40df3c:	test   eax,eax
  40df3e:	je     40df54 <test_nested_buffer@@Base+0x104>
  40df40:	mov    esi,0xd
  40df45:	mov    rdi,rbx
  40df48:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40df4d:	test   rax,rax
  40df50:	je     40df54 <test_nested_buffer@@Base+0x104>
  40df52:	mov    DWORD PTR [rax],ebp
  40df54:	mov    ecx,0x2
  40df59:	mov    edx,0x2
  40df5e:	mov    esi,0x2
  40df63:	mov    rdi,rbx
  40df66:	call   412950 <flatcc_builder_table_add@@Base>
  40df6b:	test   rax,rax
  40df6e:	je     40df78 <test_nested_buffer@@Base+0x128>
  40df70:	mov    edx,0xa
  40df75:	mov    WORD PTR [rax],dx
  40df78:	mov    edx,0x1
  40df7d:	lea    rsi,[rip+0xb6ac]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40df84:	mov    rdi,rbx
  40df87:	call   4119c0 <flatcc_builder_check_required@@Base>
  40df8c:	test   eax,eax
  40df8e:	je     40e196 <test_nested_buffer@@Base+0x346>
  40df94:	mov    rdi,rbx
  40df97:	call   411a50 <flatcc_builder_end_table@@Base>
  40df9c:	mov    esi,eax
  40df9e:	mov    rdi,rbx
  40dfa1:	call   410510 <flatcc_builder_end_buffer@@Base>
  40dfa6:	mov    rdi,rbx
  40dfa9:	mov    rsi,rsp
  40dfac:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40dfb1:	mov    rbx,rax
  40dfb4:	mov    rax,QWORD PTR [rip+0x1103d]        # 41eff8 <stderr@GLIBC_2.2.5>
  40dfbb:	mov    rdx,QWORD PTR [rsp]
  40dfbf:	mov    rcx,QWORD PTR [rax]
  40dfc2:	mov    rsi,rbx
  40dfc5:	lea    rdi,[rip+0x88fc]        # 4168c8 <_IO_stdin_used@@Base+0x8c8>
  40dfcc:	call   404590 <_start@@Base+0x140>
  40dfd1:	test   rbx,rbx
  40dfd4:	je     40e114 <test_nested_buffer@@Base+0x2c4>
  40dfda:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40dfe1:	jne    40e114 <test_nested_buffer@@Base+0x2c4>
  40dfe7:	mov    eax,DWORD PTR [rbx]
  40dfe9:	add    rbx,rax
  40dfec:	je     40e114 <test_nested_buffer@@Base+0x2c4>
  40dff2:	movsxd rax,DWORD PTR [rbx]
  40dff5:	mov    rcx,rbx
  40dff8:	sub    rcx,rax
  40dffb:	movzx  r8d,WORD PTR [rcx]
  40dfff:	mov    rax,rcx
  40e002:	cmp    r8w,0xb
  40e007:	jbe    40e177 <test_nested_buffer@@Base+0x327>
  40e00d:	movzx  edx,WORD PTR [rcx+0xa]
  40e011:	test   dx,dx
  40e014:	je     40e177 <test_nested_buffer@@Base+0x327>
  40e01a:	add    rdx,rbx
  40e01d:	mov    ecx,DWORD PTR [rdx]
  40e01f:	lea    rdi,[rip+0x812d]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e026:	lea    rsi,[rdx+rcx*1+0x4]
  40e02b:	mov    ecx,0xa
  40e030:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e032:	seta   dl
  40e035:	sbb    dl,0x0
  40e038:	test   dl,dl
  40e03a:	jne    40e140 <test_nested_buffer@@Base+0x2f0>
  40e040:	movzx  ecx,WORD PTR [rax+0x8]
  40e044:	cmp    r8w,0x1f
  40e049:	jbe    40e108 <test_nested_buffer@@Base+0x2b8>
  40e04f:	movzx  eax,WORD PTR [rax+0x1e]
  40e053:	test   ax,ax
  40e056:	je     40e108 <test_nested_buffer@@Base+0x2b8>
  40e05c:	add    rax,rbx
  40e05f:	mov    edx,DWORD PTR [rax]
  40e061:	lea    rdx,[rax+rdx*1+0x4]
  40e066:	test   rdx,rdx
  40e069:	je     40e108 <test_nested_buffer@@Base+0x2b8>
  40e06f:	cmp    DWORD PTR [rdx+0x4],0x534e4f4d
  40e076:	jne    40e108 <test_nested_buffer@@Base+0x2b8>
  40e07c:	mov    eax,DWORD PTR [rdx]
  40e07e:	add    rdx,rax
  40e081:	test   cx,cx
  40e084:	je     40e120 <test_nested_buffer@@Base+0x2d0>
  40e08a:	cmp    WORD PTR [rbx+rcx*1],0xa
  40e08f:	jne    40e120 <test_nested_buffer@@Base+0x2d0>
  40e095:	test   rdx,rdx
  40e098:	je     40e114 <test_nested_buffer@@Base+0x2c4>
  40e09a:	movsxd rax,DWORD PTR [rdx]
  40e09d:	mov    rcx,rdx
  40e0a0:	sub    rcx,rax
  40e0a3:	cmp    WORD PTR [rcx],0xb
  40e0a7:	jbe    40e177 <test_nested_buffer@@Base+0x327>
  40e0ad:	movzx  eax,WORD PTR [rcx+0xa]
  40e0b1:	test   ax,ax
  40e0b4:	je     40e177 <test_nested_buffer@@Base+0x327>
  40e0ba:	add    rdx,rax
  40e0bd:	mov    eax,DWORD PTR [rdx]
  40e0bf:	lea    rsi,[rdx+rax*1+0x4]
  40e0c4:	test   rsi,rsi
  40e0c7:	je     40e19b <test_nested_buffer@@Base+0x34b>
  40e0cd:	mov    ecx,0x10
  40e0d2:	lea    rdi,[rip+0x87df]        # 4168b8 <_IO_stdin_used@@Base+0x8b8>
  40e0d9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e0db:	seta   al
  40e0de:	sbb    al,0x0
  40e0e0:	movsx  eax,al
  40e0e3:	test   eax,eax
  40e0e5:	jne    40e15a <test_nested_buffer@@Base+0x30a>
  40e0e7:	mov    rcx,QWORD PTR [rsp+0x8]
  40e0ec:	xor    rcx,QWORD PTR fs:0x28
  40e0f5:	jne    40e1ba <test_nested_buffer@@Base+0x36a>
  40e0fb:	add    rsp,0x18
  40e0ff:	pop    rbx
  40e100:	pop    rbp
  40e101:	ret    
  40e102:	nop    WORD PTR [rax+rax*1+0x0]
  40e108:	test   cx,cx
  40e10b:	je     40e120 <test_nested_buffer@@Base+0x2d0>
  40e10d:	cmp    WORD PTR [rbx+rcx*1],0xa
  40e112:	jne    40e120 <test_nested_buffer@@Base+0x2d0>
  40e114:	call   404b80 <_start@@Base+0x730>
  40e119:	nop    DWORD PTR [rax+0x0]
  40e120:	lea    rsi,[rip+0xaa99]        # 418bc0 <_IO_stdin_used@@Base+0x2bc0>
  40e127:	mov    edi,0x1
  40e12c:	xor    eax,eax
  40e12e:	call   404220 <__printf_chk@plt>
  40e133:	mov    eax,0xffffffff
  40e138:	jmp    40e0e7 <test_nested_buffer@@Base+0x297>
  40e13a:	nop    WORD PTR [rax+rax*1+0x0]
  40e140:	lea    rsi,[rip+0x8793]        # 4168da <_IO_stdin_used@@Base+0x8da>
  40e147:	mov    edi,0x1
  40e14c:	xor    eax,eax
  40e14e:	call   404220 <__printf_chk@plt>
  40e153:	mov    eax,0xffffffff
  40e158:	jmp    40e0e7 <test_nested_buffer@@Base+0x297>
  40e15a:	lea    rsi,[rip+0x87ae]        # 41690f <_IO_stdin_used@@Base+0x90f>
  40e161:	mov    edi,0x1
  40e166:	xor    eax,eax
  40e168:	call   404220 <__printf_chk@plt>
  40e16d:	mov    eax,0xffffffff
  40e172:	jmp    40e0e7 <test_nested_buffer@@Base+0x297>
  40e177:	lea    rcx,[rip+0xb0f2]        # 419270 <_IO_stdin_used@@Base+0x3270>
  40e17e:	mov    edx,0x2bb
  40e183:	lea    rsi,[rip+0x88ae]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40e18a:	lea    rdi,[rip+0x8a0f]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  40e191:	call   4041a0 <__assert_fail@plt>
  40e196:	call   404e80 <_start@@Base+0xa30>
  40e19b:	lea    rcx,[rip+0xac4e]        # 418df0 <_IO_stdin_used@@Base+0x2df0>
  40e1a2:	mov    edx,0x88c
  40e1a7:	lea    rsi,[rip+0x925a]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40e1ae:	lea    rdi,[rip+0x8741]        # 4168f6 <_IO_stdin_used@@Base+0x8f6>
  40e1b5:	call   4041a0 <__assert_fail@plt>
  40e1ba:	call   404180 <__stack_chk_fail@plt>
  40e1bf:	nop

000000000040e1c0 <test_nested_buffer_first@@Base>:
  40e1c0:	endbr64 
  40e1c4:	push   rbp
  40e1c5:	push   rbx
  40e1c6:	mov    rbx,rdi
  40e1c9:	sub    rsp,0x18
  40e1cd:	mov    rax,QWORD PTR fs:0x28
  40e1d6:	mov    QWORD PTR [rsp+0x8],rax
  40e1db:	xor    eax,eax
  40e1dd:	call   40fc30 <flatcc_builder_reset@@Base>
  40e1e2:	xor    ecx,ecx
  40e1e4:	xor    edx,edx
  40e1e6:	lea    rsi,[rip+0x7f4e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e1ed:	mov    rdi,rbx
  40e1f0:	call   410430 <flatcc_builder_start_buffer@@Base>
  40e1f5:	test   eax,eax
  40e1f7:	jne    40e206 <test_nested_buffer_first@@Base+0x46>
  40e1f9:	mov    esi,0x24
  40e1fe:	mov    rdi,rbx
  40e201:	call   4110d0 <flatcc_builder_start_table@@Base>
  40e206:	xor    ecx,ecx
  40e208:	xor    edx,edx
  40e20a:	lea    rsi,[rip+0x7f2a]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e211:	mov    rdi,rbx
  40e214:	call   410430 <flatcc_builder_start_buffer@@Base>
  40e219:	test   eax,eax
  40e21b:	jne    40e22a <test_nested_buffer_first@@Base+0x6a>
  40e21d:	mov    esi,0x24
  40e222:	mov    rdi,rbx
  40e225:	call   4110d0 <flatcc_builder_start_table@@Base>
  40e22a:	lea    rsi,[rip+0x8687]        # 4168b8 <_IO_stdin_used@@Base+0x8b8>
  40e231:	mov    rdi,rbx
  40e234:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40e239:	mov    ebp,eax
  40e23b:	test   eax,eax
  40e23d:	je     40e253 <test_nested_buffer_first@@Base+0x93>
  40e23f:	mov    esi,0x3
  40e244:	mov    rdi,rbx
  40e247:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40e24c:	test   rax,rax
  40e24f:	je     40e253 <test_nested_buffer_first@@Base+0x93>
  40e251:	mov    DWORD PTR [rax],ebp
  40e253:	mov    edx,0x1
  40e258:	lea    rsi,[rip+0xb3d1]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40e25f:	mov    rdi,rbx
  40e262:	call   4119c0 <flatcc_builder_check_required@@Base>
  40e267:	test   eax,eax
  40e269:	je     40e506 <test_nested_buffer_first@@Base+0x346>
  40e26f:	mov    rdi,rbx
  40e272:	call   411a50 <flatcc_builder_end_table@@Base>
  40e277:	mov    esi,eax
  40e279:	mov    rdi,rbx
  40e27c:	call   410510 <flatcc_builder_end_buffer@@Base>
  40e281:	mov    ebp,eax
  40e283:	test   eax,eax
  40e285:	je     40e29b <test_nested_buffer_first@@Base+0xdb>
  40e287:	mov    esi,0xd
  40e28c:	mov    rdi,rbx
  40e28f:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40e294:	test   rax,rax
  40e297:	je     40e29b <test_nested_buffer_first@@Base+0xdb>
  40e299:	mov    DWORD PTR [rax],ebp
  40e29b:	mov    ecx,0x2
  40e2a0:	mov    edx,0x2
  40e2a5:	mov    esi,0x2
  40e2aa:	mov    rdi,rbx
  40e2ad:	call   412950 <flatcc_builder_table_add@@Base>
  40e2b2:	test   rax,rax
  40e2b5:	je     40e2bf <test_nested_buffer_first@@Base+0xff>
  40e2b7:	mov    edx,0xa
  40e2bc:	mov    WORD PTR [rax],dx
  40e2bf:	lea    rsi,[rip+0x7e8d]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e2c6:	mov    rdi,rbx
  40e2c9:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40e2ce:	mov    ebp,eax
  40e2d0:	test   eax,eax
  40e2d2:	je     40e2e8 <test_nested_buffer_first@@Base+0x128>
  40e2d4:	mov    esi,0x3
  40e2d9:	mov    rdi,rbx
  40e2dc:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40e2e1:	test   rax,rax
  40e2e4:	je     40e2e8 <test_nested_buffer_first@@Base+0x128>
  40e2e6:	mov    DWORD PTR [rax],ebp
  40e2e8:	mov    edx,0x1
  40e2ed:	lea    rsi,[rip+0xb33c]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40e2f4:	mov    rdi,rbx
  40e2f7:	call   4119c0 <flatcc_builder_check_required@@Base>
  40e2fc:	test   eax,eax
  40e2fe:	je     40e506 <test_nested_buffer_first@@Base+0x346>
  40e304:	mov    rdi,rbx
  40e307:	call   411a50 <flatcc_builder_end_table@@Base>
  40e30c:	mov    esi,eax
  40e30e:	mov    rdi,rbx
  40e311:	call   410510 <flatcc_builder_end_buffer@@Base>
  40e316:	mov    rdi,rbx
  40e319:	mov    rsi,rsp
  40e31c:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40e321:	mov    rbx,rax
  40e324:	mov    rax,QWORD PTR [rip+0x10ccd]        # 41eff8 <stderr@GLIBC_2.2.5>
  40e32b:	mov    rdx,QWORD PTR [rsp]
  40e32f:	mov    rcx,QWORD PTR [rax]
  40e332:	mov    rsi,rbx
  40e335:	lea    rdi,[rip+0x858c]        # 4168c8 <_IO_stdin_used@@Base+0x8c8>
  40e33c:	call   404590 <_start@@Base+0x140>
  40e341:	test   rbx,rbx
  40e344:	je     40e484 <test_nested_buffer_first@@Base+0x2c4>
  40e34a:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40e351:	jne    40e484 <test_nested_buffer_first@@Base+0x2c4>
  40e357:	mov    eax,DWORD PTR [rbx]
  40e359:	add    rbx,rax
  40e35c:	je     40e484 <test_nested_buffer_first@@Base+0x2c4>
  40e362:	movsxd rax,DWORD PTR [rbx]
  40e365:	mov    rcx,rbx
  40e368:	sub    rcx,rax
  40e36b:	movzx  r8d,WORD PTR [rcx]
  40e36f:	mov    rax,rcx
  40e372:	cmp    r8w,0xb
  40e377:	jbe    40e4e7 <test_nested_buffer_first@@Base+0x327>
  40e37d:	movzx  edx,WORD PTR [rcx+0xa]
  40e381:	test   dx,dx
  40e384:	je     40e4e7 <test_nested_buffer_first@@Base+0x327>
  40e38a:	add    rdx,rbx
  40e38d:	mov    ecx,DWORD PTR [rdx]
  40e38f:	lea    rdi,[rip+0x7dbd]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e396:	lea    rsi,[rdx+rcx*1+0x4]
  40e39b:	mov    ecx,0xa
  40e3a0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e3a2:	seta   dl
  40e3a5:	sbb    dl,0x0
  40e3a8:	test   dl,dl
  40e3aa:	jne    40e4b0 <test_nested_buffer_first@@Base+0x2f0>
  40e3b0:	movzx  ecx,WORD PTR [rax+0x8]
  40e3b4:	cmp    r8w,0x1f
  40e3b9:	jbe    40e478 <test_nested_buffer_first@@Base+0x2b8>
  40e3bf:	movzx  eax,WORD PTR [rax+0x1e]
  40e3c3:	test   ax,ax
  40e3c6:	je     40e478 <test_nested_buffer_first@@Base+0x2b8>
  40e3cc:	add    rax,rbx
  40e3cf:	mov    edx,DWORD PTR [rax]
  40e3d1:	lea    rdx,[rax+rdx*1+0x4]
  40e3d6:	test   rdx,rdx
  40e3d9:	je     40e478 <test_nested_buffer_first@@Base+0x2b8>
  40e3df:	cmp    DWORD PTR [rdx+0x4],0x534e4f4d
  40e3e6:	jne    40e478 <test_nested_buffer_first@@Base+0x2b8>
  40e3ec:	mov    eax,DWORD PTR [rdx]
  40e3ee:	add    rdx,rax
  40e3f1:	test   cx,cx
  40e3f4:	je     40e490 <test_nested_buffer_first@@Base+0x2d0>
  40e3fa:	cmp    WORD PTR [rbx+rcx*1],0xa
  40e3ff:	jne    40e490 <test_nested_buffer_first@@Base+0x2d0>
  40e405:	test   rdx,rdx
  40e408:	je     40e484 <test_nested_buffer_first@@Base+0x2c4>
  40e40a:	movsxd rax,DWORD PTR [rdx]
  40e40d:	mov    rcx,rdx
  40e410:	sub    rcx,rax
  40e413:	cmp    WORD PTR [rcx],0xb
  40e417:	jbe    40e4e7 <test_nested_buffer_first@@Base+0x327>
  40e41d:	movzx  eax,WORD PTR [rcx+0xa]
  40e421:	test   ax,ax
  40e424:	je     40e4e7 <test_nested_buffer_first@@Base+0x327>
  40e42a:	add    rdx,rax
  40e42d:	mov    eax,DWORD PTR [rdx]
  40e42f:	lea    rsi,[rdx+rax*1+0x4]
  40e434:	test   rsi,rsi
  40e437:	je     40e50b <test_nested_buffer_first@@Base+0x34b>
  40e43d:	mov    ecx,0x10
  40e442:	lea    rdi,[rip+0x846f]        # 4168b8 <_IO_stdin_used@@Base+0x8b8>
  40e449:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e44b:	seta   al
  40e44e:	sbb    al,0x0
  40e450:	movsx  eax,al
  40e453:	test   eax,eax
  40e455:	jne    40e4ca <test_nested_buffer_first@@Base+0x30a>
  40e457:	mov    rcx,QWORD PTR [rsp+0x8]
  40e45c:	xor    rcx,QWORD PTR fs:0x28
  40e465:	jne    40e52a <test_nested_buffer_first@@Base+0x36a>
  40e46b:	add    rsp,0x18
  40e46f:	pop    rbx
  40e470:	pop    rbp
  40e471:	ret    
  40e472:	nop    WORD PTR [rax+rax*1+0x0]
  40e478:	test   cx,cx
  40e47b:	je     40e490 <test_nested_buffer_first@@Base+0x2d0>
  40e47d:	cmp    WORD PTR [rbx+rcx*1],0xa
  40e482:	jne    40e490 <test_nested_buffer_first@@Base+0x2d0>
  40e484:	call   404b80 <_start@@Base+0x730>
  40e489:	nop    DWORD PTR [rax+0x0]
  40e490:	lea    rsi,[rip+0xa729]        # 418bc0 <_IO_stdin_used@@Base+0x2bc0>
  40e497:	mov    edi,0x1
  40e49c:	xor    eax,eax
  40e49e:	call   404220 <__printf_chk@plt>
  40e4a3:	mov    eax,0xffffffff
  40e4a8:	jmp    40e457 <test_nested_buffer_first@@Base+0x297>
  40e4aa:	nop    WORD PTR [rax+rax*1+0x0]
  40e4b0:	lea    rsi,[rip+0x8423]        # 4168da <_IO_stdin_used@@Base+0x8da>
  40e4b7:	mov    edi,0x1
  40e4bc:	xor    eax,eax
  40e4be:	call   404220 <__printf_chk@plt>
  40e4c3:	mov    eax,0xffffffff
  40e4c8:	jmp    40e457 <test_nested_buffer_first@@Base+0x297>
  40e4ca:	lea    rsi,[rip+0x843e]        # 41690f <_IO_stdin_used@@Base+0x90f>
  40e4d1:	mov    edi,0x1
  40e4d6:	xor    eax,eax
  40e4d8:	call   404220 <__printf_chk@plt>
  40e4dd:	mov    eax,0xffffffff
  40e4e2:	jmp    40e457 <test_nested_buffer_first@@Base+0x297>
  40e4e7:	lea    rcx,[rip+0xad82]        # 419270 <_IO_stdin_used@@Base+0x3270>
  40e4ee:	mov    edx,0x2bb
  40e4f3:	lea    rsi,[rip+0x853e]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40e4fa:	lea    rdi,[rip+0x869f]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  40e501:	call   4041a0 <__assert_fail@plt>
  40e506:	call   404e80 <_start@@Base+0xa30>
  40e50b:	lea    rcx,[rip+0xa8be]        # 418dd0 <_IO_stdin_used@@Base+0x2dd0>
  40e512:	mov    edx,0x8c1
  40e517:	lea    rsi,[rip+0x8eea]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40e51e:	lea    rdi,[rip+0x83d1]        # 4168f6 <_IO_stdin_used@@Base+0x8f6>
  40e525:	call   4041a0 <__assert_fail@plt>
  40e52a:	call   404180 <__stack_chk_fail@plt>
  40e52f:	nop

000000000040e530 <test_nested_buffer_using_nest@@Base>:
  40e530:	endbr64 
  40e534:	push   r12
  40e536:	push   rbp
  40e537:	push   rbx
  40e538:	mov    rbx,rdi
  40e53b:	sub    rsp,0x420
  40e542:	mov    rax,QWORD PTR fs:0x28
  40e54b:	mov    QWORD PTR [rsp+0x418],rax
  40e553:	xor    eax,eax
  40e555:	call   40fc30 <flatcc_builder_reset@@Base>
  40e55a:	xor    ecx,ecx
  40e55c:	xor    edx,edx
  40e55e:	lea    rsi,[rip+0x7bd6]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e565:	mov    rdi,rbx
  40e568:	call   410430 <flatcc_builder_start_buffer@@Base>
  40e56d:	test   eax,eax
  40e56f:	jne    40e57e <test_nested_buffer_using_nest@@Base+0x4e>
  40e571:	mov    esi,0x24
  40e576:	mov    rdi,rbx
  40e579:	call   4110d0 <flatcc_builder_start_table@@Base>
  40e57e:	lea    rsi,[rip+0x8333]        # 4168b8 <_IO_stdin_used@@Base+0x8b8>
  40e585:	mov    rdi,rbx
  40e588:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40e58d:	mov    ebp,eax
  40e58f:	test   eax,eax
  40e591:	je     40e5a7 <test_nested_buffer_using_nest@@Base+0x77>
  40e593:	mov    esi,0x3
  40e598:	mov    rdi,rbx
  40e59b:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40e5a0:	test   rax,rax
  40e5a3:	je     40e5a7 <test_nested_buffer_using_nest@@Base+0x77>
  40e5a5:	mov    DWORD PTR [rax],ebp
  40e5a7:	mov    ecx,0x2
  40e5ac:	mov    edx,0x2
  40e5b1:	mov    esi,0x1
  40e5b6:	mov    rdi,rbx
  40e5b9:	call   412950 <flatcc_builder_table_add@@Base>
  40e5be:	test   rax,rax
  40e5c1:	je     40e5cb <test_nested_buffer_using_nest@@Base+0x9b>
  40e5c3:	mov    ecx,0x2a
  40e5c8:	mov    WORD PTR [rax],cx
  40e5cb:	mov    edx,0x1
  40e5d0:	lea    rsi,[rip+0xb059]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40e5d7:	mov    rdi,rbx
  40e5da:	call   4119c0 <flatcc_builder_check_required@@Base>
  40e5df:	test   eax,eax
  40e5e1:	je     40e957 <test_nested_buffer_using_nest@@Base+0x427>
  40e5e7:	mov    rdi,rbx
  40e5ea:	call   411a50 <flatcc_builder_end_table@@Base>
  40e5ef:	mov    esi,eax
  40e5f1:	mov    rdi,rbx
  40e5f4:	call   410510 <flatcc_builder_end_buffer@@Base>
  40e5f9:	lea    rbp,[rsp+0x10]
  40e5fe:	mov    rdi,rbx
  40e601:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  40e606:	mov    edx,0x400
  40e60b:	mov    rsi,rbp
  40e60e:	mov    rdi,rbx
  40e611:	mov    r12,rax
  40e614:	call   413040 <flatcc_builder_copy_buffer@@Base>
  40e619:	test   rax,rax
  40e61c:	je     40e91d <test_nested_buffer_using_nest@@Base+0x3ed>
  40e622:	mov    rdi,rbx
  40e625:	call   40fc30 <flatcc_builder_reset@@Base>
  40e62a:	xor    ecx,ecx
  40e62c:	xor    edx,edx
  40e62e:	lea    rsi,[rip+0x7b06]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e635:	mov    rdi,rbx
  40e638:	call   410430 <flatcc_builder_start_buffer@@Base>
  40e63d:	test   eax,eax
  40e63f:	jne    40e64e <test_nested_buffer_using_nest@@Base+0x11e>
  40e641:	mov    esi,0x24
  40e646:	mov    rdi,rbx
  40e649:	call   4110d0 <flatcc_builder_start_table@@Base>
  40e64e:	mov    rsi,rbp
  40e651:	mov    r9d,0xffffffff
  40e657:	mov    r8d,0x8
  40e65d:	mov    ecx,0x1
  40e662:	mov    rdx,r12
  40e665:	mov    rdi,rbx
  40e668:	call   411be0 <flatcc_builder_create_vector@@Base>
  40e66d:	mov    ebp,eax
  40e66f:	test   eax,eax
  40e671:	je     40e687 <test_nested_buffer_using_nest@@Base+0x157>
  40e673:	mov    esi,0xd
  40e678:	mov    rdi,rbx
  40e67b:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40e680:	test   rax,rax
  40e683:	je     40e687 <test_nested_buffer_using_nest@@Base+0x157>
  40e685:	mov    DWORD PTR [rax],ebp
  40e687:	mov    ecx,0x2
  40e68c:	mov    edx,0x2
  40e691:	mov    esi,0x2
  40e696:	mov    rdi,rbx
  40e699:	call   412950 <flatcc_builder_table_add@@Base>
  40e69e:	test   rax,rax
  40e6a1:	je     40e6ab <test_nested_buffer_using_nest@@Base+0x17b>
  40e6a3:	mov    edx,0xa
  40e6a8:	mov    WORD PTR [rax],dx
  40e6ab:	lea    rsi,[rip+0x7aa1]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e6b2:	mov    rdi,rbx
  40e6b5:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40e6ba:	mov    ebp,eax
  40e6bc:	test   eax,eax
  40e6be:	je     40e6d4 <test_nested_buffer_using_nest@@Base+0x1a4>
  40e6c0:	mov    esi,0x3
  40e6c5:	mov    rdi,rbx
  40e6c8:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40e6cd:	test   rax,rax
  40e6d0:	je     40e6d4 <test_nested_buffer_using_nest@@Base+0x1a4>
  40e6d2:	mov    DWORD PTR [rax],ebp
  40e6d4:	mov    edx,0x1
  40e6d9:	lea    rsi,[rip+0xaf50]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40e6e0:	mov    rdi,rbx
  40e6e3:	call   4119c0 <flatcc_builder_check_required@@Base>
  40e6e8:	test   eax,eax
  40e6ea:	je     40e957 <test_nested_buffer_using_nest@@Base+0x427>
  40e6f0:	mov    rdi,rbx
  40e6f3:	call   411a50 <flatcc_builder_end_table@@Base>
  40e6f8:	mov    esi,eax
  40e6fa:	mov    rdi,rbx
  40e6fd:	call   410510 <flatcc_builder_end_buffer@@Base>
  40e702:	mov    rdi,rbx
  40e705:	lea    rsi,[rsp+0x8]
  40e70a:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40e70f:	mov    rbx,rax
  40e712:	mov    rax,QWORD PTR [rip+0x108df]        # 41eff8 <stderr@GLIBC_2.2.5>
  40e719:	mov    rdx,QWORD PTR [rsp+0x8]
  40e71e:	mov    rcx,QWORD PTR [rax]
  40e721:	mov    rsi,rbx
  40e724:	lea    rdi,[rip+0xa4bd]        # 418be8 <_IO_stdin_used@@Base+0x2be8>
  40e72b:	call   404590 <_start@@Base+0x140>
  40e730:	test   rbx,rbx
  40e733:	je     40e89c <test_nested_buffer_using_nest@@Base+0x36c>
  40e739:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40e740:	jne    40e89c <test_nested_buffer_using_nest@@Base+0x36c>
  40e746:	mov    eax,DWORD PTR [rbx]
  40e748:	add    rbx,rax
  40e74b:	je     40e89c <test_nested_buffer_using_nest@@Base+0x36c>
  40e751:	movsxd rax,DWORD PTR [rbx]
  40e754:	mov    rcx,rbx
  40e757:	sub    rcx,rax
  40e75a:	movzx  r8d,WORD PTR [rcx]
  40e75e:	mov    rax,rcx
  40e761:	cmp    r8w,0xb
  40e766:	jbe    40e938 <test_nested_buffer_using_nest@@Base+0x408>
  40e76c:	movzx  edx,WORD PTR [rcx+0xa]
  40e770:	test   dx,dx
  40e773:	je     40e938 <test_nested_buffer_using_nest@@Base+0x408>
  40e779:	add    rdx,rbx
  40e77c:	mov    ecx,DWORD PTR [rdx]
  40e77e:	lea    rdi,[rip+0x79ce]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e785:	lea    rsi,[rdx+rcx*1+0x4]
  40e78a:	mov    ecx,0xa
  40e78f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e791:	seta   dl
  40e794:	sbb    dl,0x0
  40e797:	test   dl,dl
  40e799:	jne    40e8c8 <test_nested_buffer_using_nest@@Base+0x398>
  40e79f:	movzx  ecx,WORD PTR [rax+0x8]
  40e7a3:	cmp    r8w,0x1f
  40e7a8:	jbe    40e890 <test_nested_buffer_using_nest@@Base+0x360>
  40e7ae:	movzx  eax,WORD PTR [rax+0x1e]
  40e7b2:	test   ax,ax
  40e7b5:	je     40e890 <test_nested_buffer_using_nest@@Base+0x360>
  40e7bb:	add    rax,rbx
  40e7be:	mov    edx,DWORD PTR [rax]
  40e7c0:	lea    rdx,[rax+rdx*1+0x4]
  40e7c5:	test   rdx,rdx
  40e7c8:	je     40e890 <test_nested_buffer_using_nest@@Base+0x360>
  40e7ce:	cmp    DWORD PTR [rdx+0x4],0x534e4f4d
  40e7d5:	jne    40e890 <test_nested_buffer_using_nest@@Base+0x360>
  40e7db:	mov    eax,DWORD PTR [rdx]
  40e7dd:	add    rdx,rax
  40e7e0:	test   cx,cx
  40e7e3:	je     40e8a8 <test_nested_buffer_using_nest@@Base+0x378>
  40e7e9:	cmp    WORD PTR [rbx+rcx*1],0xa
  40e7ee:	jne    40e8a8 <test_nested_buffer_using_nest@@Base+0x378>
  40e7f4:	test   rdx,rdx
  40e7f7:	je     40e89c <test_nested_buffer_using_nest@@Base+0x36c>
  40e7fd:	movsxd rax,DWORD PTR [rdx]
  40e800:	mov    r8,rdx
  40e803:	sub    r8,rax
  40e806:	cmp    WORD PTR [r8],0xb
  40e80b:	jbe    40e938 <test_nested_buffer_using_nest@@Base+0x408>
  40e811:	movzx  eax,WORD PTR [r8+0xa]
  40e816:	test   ax,ax
  40e819:	je     40e938 <test_nested_buffer_using_nest@@Base+0x408>
  40e81f:	add    rax,rdx
  40e822:	mov    ecx,DWORD PTR [rax]
  40e824:	lea    rsi,[rax+rcx*1+0x4]
  40e829:	test   rsi,rsi
  40e82c:	je     40e95c <test_nested_buffer_using_nest@@Base+0x42c>
  40e832:	mov    ecx,0x10
  40e837:	lea    rdi,[rip+0x807a]        # 4168b8 <_IO_stdin_used@@Base+0x8b8>
  40e83e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e840:	seta   al
  40e843:	sbb    al,0x0
  40e845:	movsx  eax,al
  40e848:	test   eax,eax
  40e84a:	jne    40e8e2 <test_nested_buffer_using_nest@@Base+0x3b2>
  40e850:	movzx  ecx,WORD PTR [r8+0x6]
  40e855:	test   cx,cx
  40e858:	je     40e900 <test_nested_buffer_using_nest@@Base+0x3d0>
  40e85e:	cmp    WORD PTR [rdx+rcx*1],0x2a
  40e863:	jne    40e900 <test_nested_buffer_using_nest@@Base+0x3d0>
  40e869:	mov    rcx,QWORD PTR [rsp+0x418]
  40e871:	xor    rcx,QWORD PTR fs:0x28
  40e87a:	jne    40e97b <test_nested_buffer_using_nest@@Base+0x44b>
  40e880:	add    rsp,0x420
  40e887:	pop    rbx
  40e888:	pop    rbp
  40e889:	pop    r12
  40e88b:	ret    
  40e88c:	nop    DWORD PTR [rax+0x0]
  40e890:	test   cx,cx
  40e893:	je     40e8a8 <test_nested_buffer_using_nest@@Base+0x378>
  40e895:	cmp    WORD PTR [rbx+rcx*1],0xa
  40e89a:	jne    40e8a8 <test_nested_buffer_using_nest@@Base+0x378>
  40e89c:	call   404b80 <_start@@Base+0x730>
  40e8a1:	nop    DWORD PTR [rax+0x0]
  40e8a8:	lea    rsi,[rip+0xa311]        # 418bc0 <_IO_stdin_used@@Base+0x2bc0>
  40e8af:	mov    edi,0x1
  40e8b4:	xor    eax,eax
  40e8b6:	call   404220 <__printf_chk@plt>
  40e8bb:	mov    eax,0xffffffff
  40e8c0:	jmp    40e869 <test_nested_buffer_using_nest@@Base+0x339>
  40e8c2:	nop    WORD PTR [rax+rax*1+0x0]
  40e8c8:	lea    rsi,[rip+0x800b]        # 4168da <_IO_stdin_used@@Base+0x8da>
  40e8cf:	mov    edi,0x1
  40e8d4:	xor    eax,eax
  40e8d6:	call   404220 <__printf_chk@plt>
  40e8db:	mov    eax,0xffffffff
  40e8e0:	jmp    40e869 <test_nested_buffer_using_nest@@Base+0x339>
  40e8e2:	lea    rsi,[rip+0x8026]        # 41690f <_IO_stdin_used@@Base+0x90f>
  40e8e9:	mov    edi,0x1
  40e8ee:	xor    eax,eax
  40e8f0:	call   404220 <__printf_chk@plt>
  40e8f5:	mov    eax,0xffffffff
  40e8fa:	jmp    40e869 <test_nested_buffer_using_nest@@Base+0x339>
  40e8ff:	nop
  40e900:	lea    rsi,[rip+0xa309]        # 418c10 <_IO_stdin_used@@Base+0x2c10>
  40e907:	mov    edi,0x1
  40e90c:	xor    eax,eax
  40e90e:	call   404220 <__printf_chk@plt>
  40e913:	mov    eax,0xffffffff
  40e918:	jmp    40e869 <test_nested_buffer_using_nest@@Base+0x339>
  40e91d:	lea    rsi,[rip+0x8009]        # 41692d <_IO_stdin_used@@Base+0x92d>
  40e924:	mov    edi,0x1
  40e929:	call   404220 <__printf_chk@plt>
  40e92e:	mov    eax,0xffffffff
  40e933:	jmp    40e869 <test_nested_buffer_using_nest@@Base+0x339>
  40e938:	lea    rcx,[rip+0xa931]        # 419270 <_IO_stdin_used@@Base+0x3270>
  40e93f:	mov    edx,0x2bb
  40e944:	lea    rsi,[rip+0x80ed]        # 416a38 <_IO_stdin_used@@Base+0xa38>
  40e94b:	lea    rdi,[rip+0x824e]        # 416ba0 <_IO_stdin_used@@Base+0xba0>
  40e952:	call   4041a0 <__assert_fail@plt>
  40e957:	call   404e80 <_start@@Base+0xa30>
  40e95c:	lea    rcx,[rip+0xa44d]        # 418db0 <_IO_stdin_used@@Base+0x2db0>
  40e963:	mov    edx,0x8fa
  40e968:	lea    rsi,[rip+0x8a99]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40e96f:	lea    rdi,[rip+0x7f80]        # 4168f6 <_IO_stdin_used@@Base+0x8f6>
  40e976:	call   4041a0 <__assert_fail@plt>
  40e97b:	call   404180 <__stack_chk_fail@plt>

000000000040e980 <verify_include@@Base>:
  40e980:	endbr64 
  40e984:	xor    eax,eax
  40e986:	ret    
  40e987:	nop    WORD PTR [rax+rax*1+0x0]

000000000040e990 <test_struct_buffer@@Base>:
  40e990:	endbr64 
  40e994:	push   rbp
  40e995:	push   rbx
  40e996:	mov    rbx,rdi
  40e999:	sub    rsp,0x78
  40e99d:	mov    rax,QWORD PTR fs:0x28
  40e9a6:	mov    QWORD PTR [rsp+0x68],rax
  40e9ab:	xor    eax,eax
  40e9ad:	call   40fc30 <flatcc_builder_reset@@Base>
  40e9b2:	mov    edx,0x10
  40e9b7:	mov    esi,0x20
  40e9bc:	mov    rdi,rbx
  40e9bf:	call   410660 <flatcc_builder_start_struct@@Base>
  40e9c4:	xor    ecx,ecx
  40e9c6:	test   rax,rax
  40e9c9:	je     40ea05 <test_struct_buffer@@Base+0x75>
  40e9cb:	mov    rdx,QWORD PTR [rip+0xac9e]        # 419670 <_IO_stdin_used@@Base+0x3670>
  40e9d2:	movabs rcx,0x400000003f800000
  40e9dc:	mov    QWORD PTR [rax+0x10],rdx
  40e9e0:	mov    edx,0xaaa
  40e9e5:	mov    QWORD PTR [rax],rcx
  40e9e8:	mov    DWORD PTR [rax+0x8],0x40400000
  40e9ef:	mov    BYTE PTR [rax+0x18],0x8
  40e9f3:	mov    WORD PTR [rax+0x1a],dx
  40e9f7:	mov    BYTE PTR [rax+0x1c],0xef
  40e9fb:	mov    rdi,rbx
  40e9fe:	call   410720 <flatcc_builder_end_struct@@Base>
  40ea03:	mov    ecx,eax
  40ea05:	xor    r9d,r9d
  40ea08:	xor    edx,edx
  40ea0a:	mov    rdi,rbx
  40ea0d:	mov    r8d,0x10
  40ea13:	lea    rsi,[rip+0x7721]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40ea1a:	call   410060 <flatcc_builder_create_buffer@@Base>
  40ea1f:	mov    rdi,rbx
  40ea22:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  40ea27:	cmp    rax,0x30
  40ea2b:	jne    40eb97 <test_struct_buffer@@Base+0x207>
  40ea31:	mov    edx,0x30
  40ea36:	lea    rsi,[rip+0x7f16]        # 416953 <_IO_stdin_used@@Base+0x953>
  40ea3d:	mov    edi,0x1
  40ea42:	xor    eax,eax
  40ea44:	call   404220 <__printf_chk@plt>
  40ea49:	mov    rdi,rbx
  40ea4c:	call   4132a0 <flatcc_builder_get_emit_context@@Base>
  40ea51:	cmp    QWORD PTR [rax+0x30],0x30
  40ea56:	jne    40eb78 <test_struct_buffer@@Base+0x1e8>
  40ea5c:	mov    rbp,rsp
  40ea5f:	mov    edx,0x64
  40ea64:	mov    rsi,rbp
  40ea67:	mov    rdi,rbx
  40ea6a:	call   413040 <flatcc_builder_copy_buffer@@Base>
  40ea6f:	test   rax,rax
  40ea72:	je     40eb5d <test_struct_buffer@@Base+0x1cd>
  40ea78:	mov    rax,QWORD PTR [rip+0x10579]        # 41eff8 <stderr@GLIBC_2.2.5>
  40ea7f:	mov    edx,0x30
  40ea84:	mov    rcx,QWORD PTR [rax]
  40ea87:	mov    rsi,rbp
  40ea8a:	lea    rdi,[rip+0x7f10]        # 4169a1 <_IO_stdin_used@@Base+0x9a1>
  40ea91:	call   404590 <_start@@Base+0x140>
  40ea96:	cmp    DWORD PTR [rsp+0x4],0x534e4f4d
  40ea9e:	je     40ead8 <test_struct_buffer@@Base+0x148>
  40eaa0:	lea    rsi,[rip+0xa1e1]        # 418c88 <_IO_stdin_used@@Base+0x2c88>
  40eaa7:	mov    edi,0x1
  40eaac:	xor    eax,eax
  40eaae:	call   404220 <__printf_chk@plt>
  40eab3:	mov    eax,0xffffffff
  40eab8:	mov    rsi,QWORD PTR [rsp+0x68]
  40eabd:	xor    rsi,QWORD PTR fs:0x28
  40eac6:	jne    40ebb6 <test_struct_buffer@@Base+0x226>
  40eacc:	add    rsp,0x78
  40ead0:	pop    rbx
  40ead1:	pop    rbp
  40ead2:	ret    
  40ead3:	nop    DWORD PTR [rax+rax*1+0x0]
  40ead8:	mov    eax,DWORD PTR [rsp]
  40eadb:	vmovss xmm0,DWORD PTR [rip+0xab9d]        # 419680 <_IO_stdin_used@@Base+0x3680>
  40eae3:	add    rbp,rax
  40eae6:	vucomiss xmm0,DWORD PTR [rbp+0x0]
  40eaeb:	jp     40eb40 <test_struct_buffer@@Base+0x1b0>
  40eaed:	jne    40eb40 <test_struct_buffer@@Base+0x1b0>
  40eaef:	vmovss xmm0,DWORD PTR [rbp+0x4]
  40eaf4:	vucomiss xmm0,DWORD PTR [rip+0xab88]        # 419684 <_IO_stdin_used@@Base+0x3684>
  40eafc:	jp     40eb40 <test_struct_buffer@@Base+0x1b0>
  40eafe:	jne    40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb00:	vmovss xmm0,DWORD PTR [rbp+0x8]
  40eb05:	vucomiss xmm0,DWORD PTR [rip+0xab7f]        # 41968c <_IO_stdin_used@@Base+0x368c>
  40eb0d:	jp     40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb0f:	jne    40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb11:	vmovsd xmm0,QWORD PTR [rip+0xab57]        # 419670 <_IO_stdin_used@@Base+0x3670>
  40eb19:	vucomisd xmm0,QWORD PTR [rbp+0x10]
  40eb1e:	jp     40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb20:	jne    40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb22:	mov    eax,DWORD PTR [rbp+0x18]
  40eb25:	xor    ah,ah
  40eb27:	cmp    eax,0xaaa0008
  40eb2c:	jne    40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb2e:	cmp    BYTE PTR [rbp+0x1c],0xef
  40eb32:	jne    40eb40 <test_struct_buffer@@Base+0x1b0>
  40eb34:	xor    eax,eax
  40eb36:	jmp    40eab8 <test_struct_buffer@@Base+0x128>
  40eb38:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb40:	lea    rsi,[rip+0x7e36]        # 41697d <_IO_stdin_used@@Base+0x97d>
  40eb47:	mov    edi,0x1
  40eb4c:	xor    eax,eax
  40eb4e:	call   404220 <__printf_chk@plt>
  40eb53:	mov    eax,0xffffffff
  40eb58:	jmp    40eab8 <test_struct_buffer@@Base+0x128>
  40eb5d:	lea    rsi,[rip+0x7e0c]        # 416970 <_IO_stdin_used@@Base+0x970>
  40eb64:	mov    edi,0x1
  40eb69:	call   404220 <__printf_chk@plt>
  40eb6e:	mov    eax,0xffffffff
  40eb73:	jmp    40eab8 <test_struct_buffer@@Base+0x128>
  40eb78:	lea    rcx,[rip+0xa211]        # 418d90 <_IO_stdin_used@@Base+0x2d90>
  40eb7f:	mov    edx,0x925
  40eb84:	lea    rsi,[rip+0x887d]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40eb8b:	lea    rdi,[rip+0xa0a6]        # 418c38 <_IO_stdin_used@@Base+0x2c38>
  40eb92:	call   4041a0 <__assert_fail@plt>
  40eb97:	lea    rcx,[rip+0xa1f2]        # 418d90 <_IO_stdin_used@@Base+0x2d90>
  40eb9e:	mov    edx,0x923
  40eba3:	lea    rsi,[rip+0x885e]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40ebaa:	lea    rdi,[rip+0x7d97]        # 416948 <_IO_stdin_used@@Base+0x948>
  40ebb1:	call   4041a0 <__assert_fail@plt>
  40ebb6:	call   404180 <__stack_chk_fail@plt>
  40ebbb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ebc0 <test_typed_struct_buffer@@Base>:
  40ebc0:	endbr64 
  40ebc4:	push   rbp
  40ebc5:	push   rbx
  40ebc6:	mov    rbx,rdi
  40ebc9:	sub    rsp,0x78
  40ebcd:	mov    rax,QWORD PTR fs:0x28
  40ebd6:	mov    QWORD PTR [rsp+0x68],rax
  40ebdb:	xor    eax,eax
  40ebdd:	call   40fc30 <flatcc_builder_reset@@Base>
  40ebe2:	mov    edx,0x10
  40ebe7:	mov    esi,0x20
  40ebec:	mov    rdi,rbx
  40ebef:	call   410660 <flatcc_builder_start_struct@@Base>
  40ebf4:	xor    ecx,ecx
  40ebf6:	test   rax,rax
  40ebf9:	je     40ec35 <test_typed_struct_buffer@@Base+0x75>
  40ebfb:	mov    rdx,QWORD PTR [rip+0xaa6e]        # 419670 <_IO_stdin_used@@Base+0x3670>
  40ec02:	movabs rcx,0x400000003f800000
  40ec0c:	mov    QWORD PTR [rax+0x10],rdx
  40ec10:	mov    edx,0xaaa
  40ec15:	mov    QWORD PTR [rax],rcx
  40ec18:	mov    DWORD PTR [rax+0x8],0x40400000
  40ec1f:	mov    BYTE PTR [rax+0x18],0x8
  40ec23:	mov    WORD PTR [rax+0x1a],dx
  40ec27:	mov    BYTE PTR [rax+0x1c],0xef
  40ec2b:	mov    rdi,rbx
  40ec2e:	call   410720 <flatcc_builder_end_struct@@Base>
  40ec33:	mov    ecx,eax
  40ec35:	xor    r9d,r9d
  40ec38:	xor    edx,edx
  40ec3a:	mov    rdi,rbx
  40ec3d:	mov    r8d,0x10
  40ec43:	lea    rsi,[rip+0x7d4c]        # 416996 <_IO_stdin_used@@Base+0x996>
  40ec4a:	call   410060 <flatcc_builder_create_buffer@@Base>
  40ec4f:	mov    rdi,rbx
  40ec52:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  40ec57:	cmp    rax,0x30
  40ec5b:	jne    40ee93 <test_typed_struct_buffer@@Base+0x2d3>
  40ec61:	mov    edx,0x30
  40ec66:	lea    rsi,[rip+0x7ce6]        # 416953 <_IO_stdin_used@@Base+0x953>
  40ec6d:	mov    edi,0x1
  40ec72:	xor    eax,eax
  40ec74:	call   404220 <__printf_chk@plt>
  40ec79:	mov    rdi,rbx
  40ec7c:	call   4132a0 <flatcc_builder_get_emit_context@@Base>
  40ec81:	cmp    QWORD PTR [rax+0x30],0x30
  40ec86:	jne    40ee74 <test_typed_struct_buffer@@Base+0x2b4>
  40ec8c:	mov    rbp,rsp
  40ec8f:	mov    edx,0x64
  40ec94:	mov    rsi,rbp
  40ec97:	mov    rdi,rbx
  40ec9a:	call   413040 <flatcc_builder_copy_buffer@@Base>
  40ec9f:	test   rax,rax
  40eca2:	je     40ee04 <test_typed_struct_buffer@@Base+0x244>
  40eca8:	mov    rax,QWORD PTR [rip+0x10349]        # 41eff8 <stderr@GLIBC_2.2.5>
  40ecaf:	mov    edx,0x30
  40ecb4:	mov    rcx,QWORD PTR [rax]
  40ecb7:	mov    rsi,rbp
  40ecba:	lea    rdi,[rip+0x7cda]        # 41699b <_IO_stdin_used@@Base+0x99b>
  40ecc1:	call   404590 <_start@@Base+0x140>
  40ecc6:	cmp    DWORD PTR [rsp+0x4],0xa8f53ed2
  40ecce:	je     40ed08 <test_typed_struct_buffer@@Base+0x148>
  40ecd0:	lea    rsi,[rip+0x9fb1]        # 418c88 <_IO_stdin_used@@Base+0x2c88>
  40ecd7:	mov    edi,0x1
  40ecdc:	xor    eax,eax
  40ecde:	call   404220 <__printf_chk@plt>
  40ece3:	mov    eax,0xffffffff
  40ece8:	mov    rsi,QWORD PTR [rsp+0x68]
  40eced:	xor    rsi,QWORD PTR fs:0x28
  40ecf6:	jne    40eeb2 <test_typed_struct_buffer@@Base+0x2f2>
  40ecfc:	add    rsp,0x78
  40ed00:	pop    rbx
  40ed01:	pop    rbp
  40ed02:	ret    
  40ed03:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed08:	mov    eax,DWORD PTR [rsp]
  40ed0b:	add    rax,rbp
  40ed0e:	je     40ee3c <test_typed_struct_buffer@@Base+0x27c>
  40ed14:	mov    r8d,0x10
  40ed1a:	mov    ecx,0x20
  40ed1f:	mov    edx,0xa8f53ed2
  40ed24:	mov    esi,0x30
  40ed29:	mov    rdi,rbp
  40ed2c:	call   4147c0 <flatcc_verify_struct_as_typed_root@@Base>
  40ed31:	test   eax,eax
  40ed33:	jne    40ee1f <test_typed_struct_buffer@@Base+0x25f>
  40ed39:	cmp    DWORD PTR [rsp+0x4],0xa8f53ed2
  40ed41:	je     40ed60 <test_typed_struct_buffer@@Base+0x1a0>
  40ed43:	lea    rsi,[rip+0x7c6a]        # 4169b4 <_IO_stdin_used@@Base+0x9b4>
  40ed4a:	mov    edi,0x1
  40ed4f:	xor    eax,eax
  40ed51:	call   404220 <__printf_chk@plt>
  40ed56:	mov    eax,0xffffffff
  40ed5b:	jmp    40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ed5d:	nop    DWORD PTR [rax]
  40ed60:	mov    ebx,DWORD PTR [rsp]
  40ed63:	add    rbx,rbp
  40ed66:	je     40ed43 <test_typed_struct_buffer@@Base+0x183>
  40ed68:	mov    r8d,0x10
  40ed6e:	mov    ecx,0x20
  40ed73:	mov    edx,0xa8f53ed2
  40ed78:	mov    esi,0x30
  40ed7d:	mov    rdi,rbp
  40ed80:	call   4147c0 <flatcc_verify_struct_as_typed_root@@Base>
  40ed85:	test   eax,eax
  40ed87:	jne    40ee59 <test_typed_struct_buffer@@Base+0x299>
  40ed8d:	vmovss xmm0,DWORD PTR [rip+0xa8eb]        # 419680 <_IO_stdin_used@@Base+0x3680>
  40ed95:	vucomiss xmm0,DWORD PTR [rbx]
  40ed99:	jp     40ede7 <test_typed_struct_buffer@@Base+0x227>
  40ed9b:	jne    40ede7 <test_typed_struct_buffer@@Base+0x227>
  40ed9d:	vmovss xmm0,DWORD PTR [rbx+0x4]
  40eda2:	vucomiss xmm0,DWORD PTR [rip+0xa8da]        # 419684 <_IO_stdin_used@@Base+0x3684>
  40edaa:	jp     40ede7 <test_typed_struct_buffer@@Base+0x227>
  40edac:	jne    40ede7 <test_typed_struct_buffer@@Base+0x227>
  40edae:	vmovss xmm0,DWORD PTR [rbx+0x8]
  40edb3:	vucomiss xmm0,DWORD PTR [rip+0xa8d1]        # 41968c <_IO_stdin_used@@Base+0x368c>
  40edbb:	jp     40ede7 <test_typed_struct_buffer@@Base+0x227>
  40edbd:	jne    40ede7 <test_typed_struct_buffer@@Base+0x227>
  40edbf:	vmovsd xmm0,QWORD PTR [rip+0xa8a9]        # 419670 <_IO_stdin_used@@Base+0x3670>
  40edc7:	vucomisd xmm0,QWORD PTR [rbx+0x10]
  40edcc:	jp     40ede7 <test_typed_struct_buffer@@Base+0x227>
  40edce:	jne    40ede7 <test_typed_struct_buffer@@Base+0x227>
  40edd0:	mov    edx,DWORD PTR [rbx+0x18]
  40edd3:	xor    dh,dh
  40edd5:	cmp    edx,0xaaa0008
  40eddb:	jne    40ede7 <test_typed_struct_buffer@@Base+0x227>
  40eddd:	cmp    BYTE PTR [rbx+0x1c],0xef
  40ede1:	je     40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ede7:	lea    rsi,[rip+0x7b8f]        # 41697d <_IO_stdin_used@@Base+0x97d>
  40edee:	mov    edi,0x1
  40edf3:	xor    eax,eax
  40edf5:	call   404220 <__printf_chk@plt>
  40edfa:	mov    eax,0xffffffff
  40edff:	jmp    40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ee04:	lea    rsi,[rip+0x7b65]        # 416970 <_IO_stdin_used@@Base+0x970>
  40ee0b:	mov    edi,0x1
  40ee10:	call   404220 <__printf_chk@plt>
  40ee15:	mov    eax,0xffffffff
  40ee1a:	jmp    40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ee1f:	lea    rsi,[rip+0x9eba]        # 418ce0 <_IO_stdin_used@@Base+0x2ce0>
  40ee26:	mov    edi,0x1
  40ee2b:	xor    eax,eax
  40ee2d:	call   404220 <__printf_chk@plt>
  40ee32:	mov    eax,0xffffffff
  40ee37:	jmp    40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ee3c:	lea    rsi,[rip+0x9e6d]        # 418cb0 <_IO_stdin_used@@Base+0x2cb0>
  40ee43:	mov    edi,0x1
  40ee48:	xor    eax,eax
  40ee4a:	call   404220 <__printf_chk@plt>
  40ee4f:	mov    eax,0xffffffff
  40ee54:	jmp    40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ee59:	lea    rsi,[rip+0x9ea8]        # 418d08 <_IO_stdin_used@@Base+0x2d08>
  40ee60:	mov    edi,0x1
  40ee65:	xor    eax,eax
  40ee67:	call   404220 <__printf_chk@plt>
  40ee6c:	or     eax,0xffffffff
  40ee6f:	jmp    40ece8 <test_typed_struct_buffer@@Base+0x128>
  40ee74:	lea    rcx,[rip+0x9ef5]        # 418d70 <_IO_stdin_used@@Base+0x2d70>
  40ee7b:	mov    edx,0x956
  40ee80:	lea    rsi,[rip+0x8581]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40ee87:	lea    rdi,[rip+0x9daa]        # 418c38 <_IO_stdin_used@@Base+0x2c38>
  40ee8e:	call   4041a0 <__assert_fail@plt>
  40ee93:	lea    rcx,[rip+0x9ed6]        # 418d70 <_IO_stdin_used@@Base+0x2d70>
  40ee9a:	mov    edx,0x954
  40ee9f:	lea    rsi,[rip+0x8562]        # 417408 <_IO_stdin_used@@Base+0x1408>
  40eea6:	lea    rdi,[rip+0x7a9b]        # 416948 <_IO_stdin_used@@Base+0x948>
  40eead:	call   4041a0 <__assert_fail@plt>
  40eeb2:	call   404180 <__stack_chk_fail@plt>
  40eeb7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040eec0 <gen_monster_benchmark@@Base>:
  40eec0:	endbr64 
  40eec4:	push   rbp
  40eec5:	mov    r9d,0x908
  40eecb:	push   rbx
  40eecc:	mov    rbx,rdi
  40eecf:	sub    rsp,0x28
  40eed3:	mov    rax,QWORD PTR fs:0x28
  40eedc:	mov    QWORD PTR [rsp+0x18],rax
  40eee1:	xor    eax,eax
  40eee3:	movabs rax,0x706050403020100
  40eeed:	mov    QWORD PTR [rsp+0xe],rax
  40eef2:	mov    WORD PTR [rsp+0x16],r9w
  40eef8:	call   40fc30 <flatcc_builder_reset@@Base>
  40eefd:	xor    ecx,ecx
  40eeff:	xor    edx,edx
  40ef01:	lea    rsi,[rip+0x7233]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40ef08:	mov    rdi,rbx
  40ef0b:	call   410430 <flatcc_builder_start_buffer@@Base>
  40ef10:	test   eax,eax
  40ef12:	jne    40ef21 <gen_monster_benchmark@@Base+0x61>
  40ef14:	mov    esi,0x24
  40ef19:	mov    rdi,rbx
  40ef1c:	call   4110d0 <flatcc_builder_start_table@@Base>
  40ef21:	mov    ecx,0x2
  40ef26:	mov    edx,0x2
  40ef2b:	mov    esi,0x2
  40ef30:	mov    rdi,rbx
  40ef33:	call   412950 <flatcc_builder_table_add@@Base>
  40ef38:	test   rax,rax
  40ef3b:	je     40ef47 <gen_monster_benchmark@@Base+0x87>
  40ef3d:	mov    r8d,0x50
  40ef43:	mov    WORD PTR [rax],r8w
  40ef47:	mov    ecx,0x10
  40ef4c:	mov    edx,0x20
  40ef51:	xor    esi,esi
  40ef53:	mov    rdi,rbx
  40ef56:	call   412950 <flatcc_builder_table_add@@Base>
  40ef5b:	movabs rcx,0x400000003f800000
  40ef65:	mov    QWORD PTR [rax],rcx
  40ef68:	mov    DWORD PTR [rax+0x8],0xc04ccccd
  40ef6f:	lea    rsi,[rip+0x71dd]        # 416153 <_IO_stdin_used@@Base+0x153>
  40ef76:	mov    rdi,rbx
  40ef79:	call   4127c0 <flatcc_builder_create_string_str@@Base>
  40ef7e:	mov    ebp,eax
  40ef80:	test   eax,eax
  40ef82:	je     40ef98 <gen_monster_benchmark@@Base+0xd8>
  40ef84:	mov    esi,0x3
  40ef89:	mov    rdi,rbx
  40ef8c:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40ef91:	test   rax,rax
  40ef94:	je     40ef98 <gen_monster_benchmark@@Base+0xd8>
  40ef96:	mov    DWORD PTR [rax],ebp
  40ef98:	lea    rsi,[rsp+0xe]
  40ef9d:	mov    r9d,0xffffffff
  40efa3:	mov    r8d,0x1
  40efa9:	mov    ecx,0x1
  40efae:	mov    edx,0xa
  40efb3:	mov    rdi,rbx
  40efb6:	call   411be0 <flatcc_builder_create_vector@@Base>
  40efbb:	mov    ebp,eax
  40efbd:	test   eax,eax
  40efbf:	je     40efd5 <gen_monster_benchmark@@Base+0x115>
  40efc1:	mov    esi,0x5
  40efc6:	mov    rdi,rbx
  40efc9:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40efce:	test   rax,rax
  40efd1:	je     40efd5 <gen_monster_benchmark@@Base+0x115>
  40efd3:	mov    DWORD PTR [rax],ebp
  40efd5:	mov    ecx,0x3fffffff
  40efda:	mov    edx,0x2
  40efdf:	mov    esi,0x4
  40efe4:	mov    rdi,rbx
  40efe7:	call   410eb0 <flatcc_builder_start_vector@@Base>
  40efec:	mov    esi,0x1
  40eff1:	mov    rdi,rbx
  40eff4:	call   410800 <flatcc_builder_extend_vector@@Base>
  40eff9:	mov    ecx,0x10
  40effe:	mov    WORD PTR [rax],cx
  40f001:	mov    BYTE PTR [rax+0x2],0x20
  40f005:	mov    esi,0x2
  40f00a:	mov    rdi,rbx
  40f00d:	call   410800 <flatcc_builder_extend_vector@@Base>
  40f012:	mov    esi,0x30
  40f017:	mov    edi,0x50
  40f01c:	mov    WORD PTR [rax],si
  40f01f:	mov    WORD PTR [rax+0x4],di
  40f023:	mov    BYTE PTR [rax+0x2],0x40
  40f027:	mov    BYTE PTR [rax+0x6],0x60
  40f02b:	mov    esi,0x1
  40f030:	mov    rdi,rbx
  40f033:	call   410800 <flatcc_builder_extend_vector@@Base>
  40f038:	test   rax,rax
  40f03b:	je     40f049 <gen_monster_benchmark@@Base+0x189>
  40f03d:	mov    edx,0x70
  40f042:	mov    WORD PTR [rax],dx
  40f045:	mov    BYTE PTR [rax+0x2],0x80
  40f049:	mov    esi,0x1
  40f04e:	mov    rdi,rbx
  40f051:	call   410800 <flatcc_builder_extend_vector@@Base>
  40f056:	test   rax,rax
  40f059:	je     40f061 <gen_monster_benchmark@@Base+0x1a1>
  40f05b:	mov    DWORD PTR [rax],0x910191
  40f061:	mov    rdi,rbx
  40f064:	call   411d70 <flatcc_builder_end_vector@@Base>
  40f069:	mov    ebp,eax
  40f06b:	test   eax,eax
  40f06d:	je     40f083 <gen_monster_benchmark@@Base+0x1c3>
  40f06f:	mov    esi,0x9
  40f074:	mov    rdi,rbx
  40f077:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  40f07c:	test   rax,rax
  40f07f:	je     40f083 <gen_monster_benchmark@@Base+0x1c3>
  40f081:	mov    DWORD PTR [rax],ebp
  40f083:	mov    edx,0x1
  40f088:	lea    rsi,[rip+0xa5a1]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40f08f:	mov    rdi,rbx
  40f092:	call   4119c0 <flatcc_builder_check_required@@Base>
  40f097:	test   eax,eax
  40f099:	je     40f0c6 <gen_monster_benchmark@@Base+0x206>
  40f09b:	mov    rdi,rbx
  40f09e:	call   411a50 <flatcc_builder_end_table@@Base>
  40f0a3:	mov    esi,eax
  40f0a5:	mov    rdi,rbx
  40f0a8:	call   410510 <flatcc_builder_end_buffer@@Base>
  40f0ad:	xor    eax,eax
  40f0af:	mov    rdx,QWORD PTR [rsp+0x18]
  40f0b4:	xor    rdx,QWORD PTR fs:0x28
  40f0bd:	jne    40f0cb <gen_monster_benchmark@@Base+0x20b>
  40f0bf:	add    rsp,0x28
  40f0c3:	pop    rbx
  40f0c4:	pop    rbp
  40f0c5:	ret    
  40f0c6:	call   404e80 <_start@@Base+0xa30>
  40f0cb:	call   404180 <__stack_chk_fail@plt>

000000000040f0d0 <time_monster@@Base>:
  40f0d0:	endbr64 
  40f0d4:	push   rbp
  40f0d5:	lea    rsi,[rip+0x78f6]        # 4169d2 <_IO_stdin_used@@Base+0x9d2>
  40f0dc:	mov    rbp,rdi
  40f0df:	push   rbx
  40f0e0:	mov    edi,0x1
  40f0e5:	xor    eax,eax
  40f0e7:	sub    rsp,0x18
  40f0eb:	call   404220 <__printf_chk@plt>
  40f0f0:	call   404790 <_start@@Base+0x340>
  40f0f5:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40f0fb:	mov    ebx,0xf4240
  40f100:	mov    rdi,rbp
  40f103:	call   40eec0 <gen_monster_benchmark@@Base>
  40f108:	dec    ebx
  40f10a:	jne    40f100 <time_monster@@Base+0x30>
  40f10c:	mov    rdi,rbp
  40f10f:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  40f114:	mov    rbx,rax
  40f117:	call   404790 <_start@@Base+0x340>
  40f11c:	vmovapd xmm1,xmm0
  40f120:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40f126:	mov    rsi,rbx
  40f129:	lea    rdi,[rip+0x78b4]        # 4169e4 <_IO_stdin_used@@Base+0x9e4>
  40f130:	call   405950 <_start@@Base+0x1500>
  40f135:	add    rsp,0x18
  40f139:	pop    rbx
  40f13a:	xor    eax,eax
  40f13c:	pop    rbp
  40f13d:	ret    
  40f13e:	xchg   ax,ax

000000000040f140 <gen_struct_buffer_benchmark@@Base>:
  40f140:	endbr64 
  40f144:	push   rbx
  40f145:	mov    rbx,rdi
  40f148:	call   40fc30 <flatcc_builder_reset@@Base>
  40f14d:	mov    edx,0x10
  40f152:	mov    esi,0x20
  40f157:	mov    rdi,rbx
  40f15a:	call   410660 <flatcc_builder_start_struct@@Base>
  40f15f:	xor    ecx,ecx
  40f161:	test   rax,rax
  40f164:	je     40f1a0 <gen_struct_buffer_benchmark@@Base+0x60>
  40f166:	mov    rcx,QWORD PTR [rip+0xa503]        # 419670 <_IO_stdin_used@@Base+0x3670>
  40f16d:	movabs rsi,0x400000003f800000
  40f177:	mov    edx,0xaaa
  40f17c:	mov    QWORD PTR [rax+0x10],rcx
  40f180:	mov    QWORD PTR [rax],rsi
  40f183:	mov    DWORD PTR [rax+0x8],0x40400000
  40f18a:	mov    BYTE PTR [rax+0x18],0x8
  40f18e:	mov    WORD PTR [rax+0x1a],dx
  40f192:	mov    BYTE PTR [rax+0x1c],0xef
  40f196:	mov    rdi,rbx
  40f199:	call   410720 <flatcc_builder_end_struct@@Base>
  40f19e:	mov    ecx,eax
  40f1a0:	xor    r9d,r9d
  40f1a3:	xor    edx,edx
  40f1a5:	lea    rsi,[rip+0x6f8f]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40f1ac:	mov    rdi,rbx
  40f1af:	mov    r8d,0x10
  40f1b5:	call   410060 <flatcc_builder_create_buffer@@Base>
  40f1ba:	xor    esi,esi
  40f1bc:	mov    rdi,rbx
  40f1bf:	call   412ff0 <flatcc_builder_get_direct_buffer@@Base>
  40f1c4:	test   rax,rax
  40f1c7:	je     40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f1c9:	mov    edx,DWORD PTR [rax]
  40f1cb:	vmovss xmm0,DWORD PTR [rip+0xa4ad]        # 419680 <_IO_stdin_used@@Base+0x3680>
  40f1d3:	add    rax,rdx
  40f1d6:	vucomiss xmm0,DWORD PTR [rax]
  40f1da:	jp     40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f1dc:	jne    40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f1de:	vmovss xmm0,DWORD PTR [rax+0x4]
  40f1e3:	vucomiss xmm0,DWORD PTR [rip+0xa499]        # 419684 <_IO_stdin_used@@Base+0x3684>
  40f1eb:	jp     40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f1ed:	jne    40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f1ef:	vmovss xmm0,DWORD PTR [rax+0x8]
  40f1f4:	vucomiss xmm0,DWORD PTR [rip+0xa490]        # 41968c <_IO_stdin_used@@Base+0x368c>
  40f1fc:	jp     40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f1fe:	jne    40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f200:	vmovsd xmm0,QWORD PTR [rip+0xa468]        # 419670 <_IO_stdin_used@@Base+0x3670>
  40f208:	vucomisd xmm0,QWORD PTR [rax+0x10]
  40f20d:	jp     40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f20f:	jne    40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f211:	mov    edx,DWORD PTR [rax+0x18]
  40f214:	xor    dh,dh
  40f216:	cmp    edx,0xaaa0008
  40f21c:	jne    40f230 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f21e:	cmp    BYTE PTR [rax+0x1c],0xef
  40f222:	setne  al
  40f225:	movzx  eax,al
  40f228:	neg    eax
  40f22a:	pop    rbx
  40f22b:	ret    
  40f22c:	nop    DWORD PTR [rax+0x0]
  40f230:	mov    eax,0xffffffff
  40f235:	pop    rbx
  40f236:	ret    
  40f237:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f240 <time_struct_buffer@@Base>:
  40f240:	endbr64 
  40f244:	push   r12
  40f246:	lea    rsi,[rip+0x7785]        # 4169d2 <_IO_stdin_used@@Base+0x9d2>
  40f24d:	mov    r12,rdi
  40f250:	push   rbp
  40f251:	mov    edi,0x1
  40f256:	xor    eax,eax
  40f258:	push   rbx
  40f259:	xor    ebp,ebp
  40f25b:	mov    ebx,0xf4240
  40f260:	sub    rsp,0x10
  40f264:	call   404220 <__printf_chk@plt>
  40f269:	call   404790 <_start@@Base+0x340>
  40f26e:	vmovsd QWORD PTR [rsp],xmm0
  40f273:	nop    DWORD PTR [rax+rax*1+0x0]
  40f278:	mov    rdi,r12
  40f27b:	call   40f140 <gen_struct_buffer_benchmark@@Base>
  40f280:	or     ebp,eax
  40f282:	dec    ebx
  40f284:	jne    40f278 <time_struct_buffer@@Base+0x38>
  40f286:	call   404790 <_start@@Base+0x340>
  40f28b:	mov    rdi,r12
  40f28e:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40f294:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  40f299:	mov    rbx,rax
  40f29c:	test   ebp,ebp
  40f29e:	jne    40f2c5 <time_struct_buffer@@Base+0x85>
  40f2a0:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40f2a6:	vmovsd xmm0,QWORD PTR [rsp]
  40f2ab:	mov    rsi,rbx
  40f2ae:	lea    rdi,[rip+0x9a7b]        # 418d30 <_IO_stdin_used@@Base+0x2d30>
  40f2b5:	call   405950 <_start@@Base+0x1500>
  40f2ba:	add    rsp,0x10
  40f2be:	pop    rbx
  40f2bf:	mov    eax,ebp
  40f2c1:	pop    rbp
  40f2c2:	pop    r12
  40f2c4:	ret    
  40f2c5:	lea    rsi,[rip+0x772e]        # 4169fa <_IO_stdin_used@@Base+0x9fa>
  40f2cc:	mov    edi,0x1
  40f2d1:	xor    eax,eax
  40f2d3:	call   404220 <__printf_chk@plt>
  40f2d8:	jmp    40f2a0 <time_struct_buffer@@Base+0x60>
  40f2da:	nop    WORD PTR [rax+rax*1+0x0]
  40f2e0:	push   rbp
  40f2e1:	mov    ebp,edx
  40f2e3:	mov    r8d,0x1
  40f2e9:	push   rbx
  40f2ea:	mov    rbx,rdi
  40f2ed:	mov    ecx,0x1
  40f2f2:	sub    rsp,0x8
  40f2f6:	mov    edx,DWORD PTR [rdi+0x28]
  40f2f9:	add    rdx,rsi
  40f2fc:	lea    rsi,[rdi+0x68]
  40f300:	mov    rdi,QWORD PTR [rdi+0x40]
  40f304:	call   QWORD PTR [rbx+0x50]
  40f307:	test   eax,eax
  40f309:	jne    40f338 <time_struct_buffer@@Base+0xf8>
  40f30b:	mov    edx,DWORD PTR [rbx+0x28]
  40f30e:	mov    rcx,rdx
  40f311:	add    rdx,QWORD PTR [rbx+0x68]
  40f315:	mov    QWORD PTR [rbx+0x18],rdx
  40f319:	mov    edx,DWORD PTR [rbx+0x70]
  40f31c:	sub    edx,ecx
  40f31e:	cmp    ebp,edx
  40f320:	cmovb  edx,ebp
  40f323:	mov    DWORD PTR [rbx+0x24],edx
  40f326:	mov    rdx,QWORD PTR [rbx+0x30]
  40f32a:	mov    DWORD PTR [rdx+0x4],ebp
  40f32d:	add    rsp,0x8
  40f331:	pop    rbx
  40f332:	pop    rbp
  40f333:	ret    
  40f334:	nop    DWORD PTR [rax+0x0]
  40f338:	mov    eax,0xffffffff
  40f33d:	jmp    40f32d <time_struct_buffer@@Base+0xed>
  40f33f:	nop

000000000040f340 <flatcc_builder_default_alloc@@Base>:
  40f340:	endbr64 
  40f344:	push   r13
  40f346:	push   r12
  40f348:	push   rbp
  40f349:	mov    rbp,rsi
  40f34c:	push   rbx
  40f34d:	sub    rsp,0x18
  40f351:	test   rdx,rdx
  40f354:	je     40f418 <flatcc_builder_default_alloc@@Base+0xd8>
  40f35a:	mov    r13d,ecx
  40f35d:	cmp    r8d,0x4
  40f361:	je     40f450 <flatcc_builder_default_alloc@@Base+0x110>
  40f367:	jle    40f3e0 <flatcc_builder_default_alloc@@Base+0xa0>
  40f369:	mov    rbx,rdx
  40f36c:	cmp    r8d,0x5
  40f370:	je     40f398 <flatcc_builder_default_alloc@@Base+0x58>
  40f372:	cmp    r8d,0x7
  40f376:	mov    ebx,0x40
  40f37b:	mov    eax,0x20
  40f380:	cmovne rbx,rax
  40f384:	cmp    rbx,rdx
  40f387:	jae    40f398 <flatcc_builder_default_alloc@@Base+0x58>
  40f389:	nop    DWORD PTR [rax+0x0]
  40f390:	add    rbx,rbx
  40f393:	cmp    rdx,rbx
  40f396:	ja     40f390 <flatcc_builder_default_alloc@@Base+0x50>
  40f398:	mov    rax,QWORD PTR [rbp+0x8]
  40f39c:	cmp    rdx,rax
  40f39f:	ja     40f3ae <flatcc_builder_default_alloc@@Base+0x6e>
  40f3a1:	shr    rax,1
  40f3a4:	mov    rdx,rax
  40f3a7:	xor    eax,eax
  40f3a9:	cmp    rdx,rbx
  40f3ac:	jae    40f3d5 <flatcc_builder_default_alloc@@Base+0x95>
  40f3ae:	mov    rdi,QWORD PTR [rbp+0x0]
  40f3b2:	mov    rsi,rbx
  40f3b5:	call   404210 <realloc@plt>
  40f3ba:	mov    r12,rax
  40f3bd:	test   rax,rax
  40f3c0:	je     40f45a <flatcc_builder_default_alloc@@Base+0x11a>
  40f3c6:	test   r13d,r13d
  40f3c9:	jne    40f3f8 <flatcc_builder_default_alloc@@Base+0xb8>
  40f3cb:	mov    QWORD PTR [rbp+0x0],r12
  40f3cf:	mov    QWORD PTR [rbp+0x8],rbx
  40f3d3:	xor    eax,eax
  40f3d5:	add    rsp,0x18
  40f3d9:	pop    rbx
  40f3da:	pop    rbp
  40f3db:	pop    r12
  40f3dd:	pop    r13
  40f3df:	ret    
  40f3e0:	cmp    r8d,0x1
  40f3e4:	mov    ebx,0x100
  40f3e9:	mov    eax,0x20
  40f3ee:	cmovne rbx,rax
  40f3f2:	jmp    40f384 <flatcc_builder_default_alloc@@Base+0x44>
  40f3f4:	nop    DWORD PTR [rax+0x0]
  40f3f8:	mov    rax,QWORD PTR [rbp+0x8]
  40f3fc:	cmp    rax,rbx
  40f3ff:	jae    40f3cb <flatcc_builder_default_alloc@@Base+0x8b>
  40f401:	mov    rdx,rbx
  40f404:	sub    rdx,rax
  40f407:	lea    rdi,[r12+rax*1]
  40f40b:	xor    esi,esi
  40f40d:	call   4041b0 <memset@plt>
  40f412:	jmp    40f3cb <flatcc_builder_default_alloc@@Base+0x8b>
  40f414:	nop    DWORD PTR [rax+0x0]
  40f418:	mov    rdi,QWORD PTR [rsi]
  40f41b:	xor    eax,eax
  40f41d:	test   rdi,rdi
  40f420:	je     40f3d5 <flatcc_builder_default_alloc@@Base+0x95>
  40f422:	mov    DWORD PTR [rsp+0xc],eax
  40f426:	call   404140 <free@plt>
  40f42b:	mov    QWORD PTR [rbp+0x0],0x0
  40f433:	mov    QWORD PTR [rbp+0x8],0x0
  40f43b:	mov    eax,DWORD PTR [rsp+0xc]
  40f43f:	add    rsp,0x18
  40f443:	pop    rbx
  40f444:	pop    rbp
  40f445:	pop    r12
  40f447:	pop    r13
  40f449:	ret    
  40f44a:	nop    WORD PTR [rax+rax*1+0x0]
  40f450:	mov    ebx,0x120
  40f455:	jmp    40f384 <flatcc_builder_default_alloc@@Base+0x44>
  40f45a:	mov    eax,0xffffffff
  40f45f:	jmp    40f3d5 <flatcc_builder_default_alloc@@Base+0x95>
  40f464:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f46f:	nop
  40f470:	push   rax
  40f471:	pop    rax
  40f472:	lea    rcx,[rip+0xacd7]        # 41a150 <_IO_stdin_used@@Base+0x4150>
  40f479:	mov    edx,0x134
  40f47e:	lea    rsi,[rip+0xa20b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f485:	lea    rdi,[rip+0xa59b]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f48c:	sub    rsp,0x8
  40f490:	call   4041a0 <__assert_fail@plt>
  40f495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f4a0:	push   rax
  40f4a1:	pop    rax
  40f4a2:	lea    rcx,[rip+0xac37]        # 41a0e0 <_IO_stdin_used@@Base+0x40e0>
  40f4a9:	mov    edx,0x2a5
  40f4ae:	lea    rsi,[rip+0xa1db]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f4b5:	lea    rdi,[rip+0xa56b]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f4bc:	sub    rsp,0x8
  40f4c0:	call   4041a0 <__assert_fail@plt>
  40f4c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f4d0:	push   rbx
  40f4d1:	mov    r9,rdi
  40f4d4:	sub    rsp,0xa0
  40f4db:	mov    rbx,QWORD PTR fs:0x28
  40f4e4:	mov    QWORD PTR [rsp+0x98],rbx
  40f4ec:	xor    ebx,ebx
  40f4ee:	test   dx,dx
  40f4f1:	je     40f550 <flatcc_builder_default_alloc@@Base+0x210>
  40f4f3:	mov    eax,edx
  40f4f5:	movzx  edx,dx
  40f4f8:	movzx  edi,WORD PTR [rsi]
  40f4fb:	cmp    di,0x3
  40f4ff:	ja     40f50e <flatcc_builder_default_alloc@@Base+0x1ce>
  40f501:	mov    edi,0x4
  40f506:	mov    WORD PTR [rsi],di
  40f509:	mov    edi,0x4
  40f50e:	cmp    ax,di
  40f511:	jbe    40f516 <flatcc_builder_default_alloc@@Base+0x1d6>
  40f513:	mov    WORD PTR [rsi],ax
  40f516:	test   ecx,ecx
  40f518:	jne    40f527 <flatcc_builder_default_alloc@@Base+0x1e7>
  40f51a:	mov    ebx,DWORD PTR [r9+0xf4]
  40f521:	dec    edx
  40f523:	and    edx,ebx
  40f525:	jne    40f570 <flatcc_builder_default_alloc@@Base+0x230>
  40f527:	xor    eax,eax
  40f529:	mov    rbx,QWORD PTR [rsp+0x98]
  40f531:	xor    rbx,QWORD PTR fs:0x28
  40f53a:	jne    40f5dd <flatcc_builder_default_alloc@@Base+0x29d>
  40f540:	add    rsp,0xa0
  40f547:	pop    rbx
  40f548:	ret    
  40f549:	nop    DWORD PTR [rax+0x0]
  40f550:	movzx  eax,WORD PTR [rdi+0xec]
  40f557:	movzx  edx,ax
  40f55a:	test   ax,ax
  40f55d:	jne    40f4f8 <flatcc_builder_default_alloc@@Base+0x1b8>
  40f55f:	mov    edx,0x1
  40f564:	mov    eax,0x1
  40f569:	jmp    40f4f8 <flatcc_builder_default_alloc@@Base+0x1b8>
  40f56b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f570:	mov    rax,0x41a180
  40f577:	movsxd r8,edx
  40f57a:	add    edx,ebx
  40f57c:	mov    QWORD PTR [rsp],r8
  40f580:	mov    QWORD PTR [rsp+0x10],rax
  40f585:	mov    QWORD PTR [rsp+0x18],r8
  40f58a:	mov    DWORD PTR [rsp+0x8],0x1
  40f592:	mov    DWORD PTR [r9+0xf4],edx
  40f599:	cmp    ebx,edx
  40f59b:	jg     40f5e7 <flatcc_builder_default_alloc@@Base+0x2a7>
  40f59d:	mov    rdi,QWORD PTR [r9+0x38]
  40f5a1:	lea    rsi,[rsp+0x10]
  40f5a6:	mov    ecx,ebx
  40f5a8:	mov    edx,0x1
  40f5ad:	call   QWORD PTR [r9+0x48]
  40f5b1:	test   eax,eax
  40f5b3:	jne    40f5e2 <flatcc_builder_default_alloc@@Base+0x2a2>
  40f5b5:	cmp    ebx,0xffffffff
  40f5b8:	jne    40f527 <flatcc_builder_default_alloc@@Base+0x1e7>
  40f5be:	lea    rcx,[rip+0xab2b]        # 41a0f0 <_IO_stdin_used@@Base+0x40f0>
  40f5c5:	mov    edx,0x2be
  40f5ca:	lea    rsi,[rip+0xa0bf]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f5d1:	lea    rdi,[rip+0xa44f]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f5d8:	call   4041a0 <__assert_fail@plt>
  40f5dd:	call   404180 <__stack_chk_fail@plt>
  40f5e2:	call   40f4a0 <flatcc_builder_default_alloc@@Base+0x160>
  40f5e7:	lea    rcx,[rip+0xaaf2]        # 41a0e0 <_IO_stdin_used@@Base+0x40e0>
  40f5ee:	mov    edx,0x2a1
  40f5f3:	lea    rsi,[rip+0xa096]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f5fa:	lea    rdi,[rip+0xa426]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f601:	call   4041a0 <__assert_fail@plt>
  40f606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f610:	push   rax
  40f611:	pop    rax
  40f612:	lea    rcx,[rip+0xaab7]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  40f619:	mov    edx,0x28b
  40f61e:	lea    rsi,[rip+0xa06b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f625:	lea    rdi,[rip+0xa3fb]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f62c:	sub    rsp,0x8
  40f630:	call   4041a0 <__assert_fail@plt>
  40f635:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f640:	push   rax
  40f641:	pop    rax
  40f642:	lea    rcx,[rip+0xa9e7]        # 41a030 <_IO_stdin_used@@Base+0x4030>
  40f649:	mov    edx,0x37c
  40f64e:	lea    rsi,[rip+0xa03b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f655:	lea    rdi,[rip+0xa3a4]        # 419a00 <_IO_stdin_used@@Base+0x3a00>
  40f65c:	sub    rsp,0x8
  40f660:	call   4041a0 <__assert_fail@plt>
  40f665:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f670:	push   r12
  40f672:	mov    r12d,esi
  40f675:	push   rbp
  40f676:	push   rbx
  40f677:	mov    rbx,rdi
  40f67a:	movsxd rax,DWORD PTR [rdi+0x104]
  40f681:	lea    edx,[rax+0x1]
  40f684:	mov    DWORD PTR [rdi+0x104],edx
  40f68a:	cmp    edx,DWORD PTR [rdi+0x108]
  40f690:	jle    40f760 <flatcc_builder_default_alloc@@Base+0x420>
  40f696:	mov    ecx,DWORD PTR [rdi+0x120]
  40f69c:	cmp    edx,ecx
  40f69e:	jle    40f6a8 <flatcc_builder_default_alloc@@Base+0x368>
  40f6a0:	test   ecx,ecx
  40f6a2:	jg     40f778 <flatcc_builder_default_alloc@@Base+0x438>
  40f6a8:	lea    rcx,[rax+rax*8]
  40f6ac:	lea    rbp,[rcx*4+0x0]
  40f6b4:	lea    rdx,[rbp+0x24]
  40f6b8:	cmp    rdx,QWORD PTR [rbx+0xa0]
  40f6bf:	jbe    40f6df <flatcc_builder_default_alloc@@Base+0x39f>
  40f6c1:	mov    rdi,QWORD PTR [rbx+0x40]
  40f6c5:	xor    ecx,ecx
  40f6c7:	lea    rsi,[rbx+0x98]
  40f6ce:	mov    r8d,0x4
  40f6d4:	call   QWORD PTR [rbx+0x50]
  40f6d7:	test   eax,eax
  40f6d9:	jne    40f77f <flatcc_builder_default_alloc@@Base+0x43f>
  40f6df:	mov    rcx,rbp
  40f6e2:	add    rcx,QWORD PTR [rbx+0x98]
  40f6e9:	mov    QWORD PTR [rbx+0x30],rcx
  40f6ed:	je     40f778 <flatcc_builder_default_alloc@@Base+0x438>
  40f6f3:	movabs rdx,0xe38e38e38e38e38f
  40f6fd:	mov    rax,rdx
  40f700:	mul    QWORD PTR [rbx+0xa0]
  40f707:	mov    eax,DWORD PTR [rbx+0x120]
  40f70d:	shr    rdx,0x5
  40f711:	mov    DWORD PTR [rbx+0x108],edx
  40f717:	cmp    eax,edx
  40f719:	jge    40f720 <flatcc_builder_default_alloc@@Base+0x3e0>
  40f71b:	test   eax,eax
  40f71d:	jg     40f770 <flatcc_builder_default_alloc@@Base+0x430>
  40f71f:	nop
  40f720:	movzx  eax,WORD PTR [rbx+0xea]
  40f727:	mov    edx,DWORD PTR [rbx+0x20]
  40f72a:	mov    WORD PTR [rcx+0xc],ax
  40f72e:	mov    eax,DWORD PTR [rbx+0x28]
  40f731:	mov    DWORD PTR [rcx+0x8],edx
  40f734:	mov    WORD PTR [rbx+0xea],r12w
  40f73c:	mov    DWORD PTR [rcx],eax
  40f73e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  40f745:	lea    eax,[rdx+rax*1+0x7]
  40f749:	mov    DWORD PTR [rbx+0x20],0x0
  40f750:	and    eax,0xfffffff8
  40f753:	mov    DWORD PTR [rbx+0x28],eax
  40f756:	xor    eax,eax
  40f758:	pop    rbx
  40f759:	pop    rbp
  40f75a:	pop    r12
  40f75c:	ret    
  40f75d:	nop    DWORD PTR [rax]
  40f760:	mov    rax,QWORD PTR [rdi+0x30]
  40f764:	lea    rcx,[rax+0x24]
  40f768:	mov    QWORD PTR [rdi+0x30],rcx
  40f76c:	jmp    40f720 <flatcc_builder_default_alloc@@Base+0x3e0>
  40f76e:	xchg   ax,ax
  40f770:	mov    DWORD PTR [rbx+0x108],eax
  40f776:	jmp    40f720 <flatcc_builder_default_alloc@@Base+0x3e0>
  40f778:	mov    eax,0xffffffff
  40f77d:	jmp    40f758 <flatcc_builder_default_alloc@@Base+0x418>
  40f77f:	call   40f470 <flatcc_builder_default_alloc@@Base+0x130>
  40f784:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f78f:	nop
  40f790:	push   rbp
  40f791:	push   rbx
  40f792:	sub    rsp,0xb8
  40f799:	mov    rax,QWORD PTR fs:0x28
  40f7a2:	mov    QWORD PTR [rsp+0xa8],rax
  40f7aa:	xor    eax,eax
  40f7ac:	cmp    edx,0x3fffffff
  40f7b2:	ja     40f948 <flatcc_builder_default_alloc@@Base+0x608>
  40f7b8:	cmp    WORD PTR [rdi+0xe8],0x3
  40f7c0:	mov    rbx,rdi
  40f7c3:	ja     40f7d1 <flatcc_builder_default_alloc@@Base+0x491>
  40f7c5:	mov    eax,0x4
  40f7ca:	mov    WORD PTR [rdi+0xe8],ax
  40f7d1:	mov    edi,DWORD PTR [rbx+0xf0]
  40f7d7:	mov    r9d,edx
  40f7da:	mov    eax,edi
  40f7dc:	lea    r8,[rsp+0xc]
  40f7e1:	and    eax,0x3
  40f7e4:	shl    r9d,0x2
  40f7e8:	mov    QWORD PTR [rsp+0x20],r8
  40f7ed:	mov    DWORD PTR [rsp+0xc],edx
  40f7f1:	mov    QWORD PTR [rsp+0x10],0x4
  40f7fa:	mov    QWORD PTR [rsp+0x28],0x4
  40f803:	mov    DWORD PTR [rsp+0x18],0x1
  40f80b:	mov    r8d,0x4
  40f811:	je     40f831 <flatcc_builder_default_alloc@@Base+0x4f1>
  40f813:	mov    r9d,r9d
  40f816:	lea    r8,[r9+0x4]
  40f81a:	mov    QWORD PTR [rsp+0x10],r8
  40f81f:	mov    QWORD PTR [rsp+0x30],rsi
  40f824:	mov    QWORD PTR [rsp+0x38],r9
  40f829:	mov    DWORD PTR [rsp+0x18],0x2
  40f831:	test   eax,eax
  40f833:	jne    40f910 <flatcc_builder_default_alloc@@Base+0x5d0>
  40f839:	mov    r10d,r8d
  40f83c:	test   edx,edx
  40f83e:	je     40f8b6 <flatcc_builder_default_alloc@@Base+0x576>
  40f840:	sub    r10d,edi
  40f843:	lea    r9d,[rdx-0x1]
  40f847:	xor    eax,eax
  40f849:	sub    r10d,0x4
  40f84d:	jmp    40f878 <flatcc_builder_default_alloc@@Base+0x538>
  40f84f:	nop
  40f850:	mov    edi,eax
  40f852:	neg    edi
  40f854:	lea    edi,[r10+rdi*4]
  40f858:	add    edx,edi
  40f85a:	mov    DWORD PTR [rsi+rax*4],edx
  40f85d:	test   rcx,rcx
  40f860:	je     40f86c <flatcc_builder_default_alloc@@Base+0x52c>
  40f862:	cmp    BYTE PTR [rcx+rax*1],0x0
  40f866:	je     40f96b <flatcc_builder_default_alloc@@Base+0x62b>
  40f86c:	lea    rdx,[rax+0x1]
  40f870:	cmp    rax,r9
  40f873:	je     40f8b0 <flatcc_builder_default_alloc@@Base+0x570>
  40f875:	mov    rax,rdx
  40f878:	mov    edx,DWORD PTR [rsi+rax*4]
  40f87b:	test   edx,edx
  40f87d:	jne    40f850 <flatcc_builder_default_alloc@@Base+0x510>
  40f87f:	test   rcx,rcx
  40f882:	je     40f94c <flatcc_builder_default_alloc@@Base+0x60c>
  40f888:	cmp    BYTE PTR [rcx+rax*1],0x0
  40f88c:	je     40f86c <flatcc_builder_default_alloc@@Base+0x52c>
  40f88e:	lea    rcx,[rip+0xa4bb]        # 419d50 <_IO_stdin_used@@Base+0x3d50>
  40f895:	mov    edx,0x5b5
  40f89a:	lea    rsi,[rip+0x9def]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f8a1:	lea    rdi,[rip+0xa181]        # 419a29 <_IO_stdin_used@@Base+0x3a29>
  40f8a8:	call   4041a0 <__assert_fail@plt>
  40f8ad:	nop    DWORD PTR [rax]
  40f8b0:	mov    edi,DWORD PTR [rbx+0xf0]
  40f8b6:	mov    ebp,edi
  40f8b8:	sub    ebp,r8d
  40f8bb:	cmp    ebp,edi
  40f8bd:	jge    40f98a <flatcc_builder_default_alloc@@Base+0x64a>
  40f8c3:	mov    rdi,QWORD PTR [rbx+0x38]
  40f8c7:	mov    edx,DWORD PTR [rsp+0x18]
  40f8cb:	lea    rsi,[rsp+0x20]
  40f8d0:	mov    ecx,ebp
  40f8d2:	call   QWORD PTR [rbx+0x48]
  40f8d5:	test   eax,eax
  40f8d7:	jne    40f9ae <flatcc_builder_default_alloc@@Base+0x66e>
  40f8dd:	mov    DWORD PTR [rbx+0xf0],ebp
  40f8e3:	mov    rbx,QWORD PTR [rsp+0xa8]
  40f8eb:	xor    rbx,QWORD PTR fs:0x28
  40f8f4:	mov    eax,ebp
  40f8f6:	jne    40f9a9 <flatcc_builder_default_alloc@@Base+0x669>
  40f8fc:	add    rsp,0xb8
  40f903:	pop    rbx
  40f904:	pop    rbp
  40f905:	ret    
  40f906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f910:	movsxd r10,DWORD PTR [rsp+0x18]
  40f915:	mov    r11,0x41a180
  40f91c:	mov    r9,r10
  40f91f:	add    r8,rax
  40f922:	shl    r10,0x4
  40f926:	inc    r9d
  40f929:	mov    QWORD PTR [rsp+0x10],r8
  40f92e:	mov    QWORD PTR [rsp+r10*1+0x20],r11
  40f933:	mov    QWORD PTR [rsp+r10*1+0x28],rax
  40f938:	mov    DWORD PTR [rsp+0x18],r9d
  40f93d:	jmp    40f839 <flatcc_builder_default_alloc@@Base+0x4f9>
  40f942:	nop    WORD PTR [rax+rax*1+0x0]
  40f948:	xor    ebp,ebp
  40f94a:	jmp    40f8e3 <flatcc_builder_default_alloc@@Base+0x5a3>
  40f94c:	lea    rcx,[rip+0xa3fd]        # 419d50 <_IO_stdin_used@@Base+0x3d50>
  40f953:	mov    edx,0x5b7
  40f958:	lea    rsi,[rip+0x9d31]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f95f:	lea    rdi,[rip+0xa0c1]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f966:	call   4041a0 <__assert_fail@plt>
  40f96b:	lea    rcx,[rip+0xa3de]        # 419d50 <_IO_stdin_used@@Base+0x3d50>
  40f972:	mov    edx,0x5b1
  40f977:	lea    rsi,[rip+0x9d12]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f97e:	lea    rdi,[rip+0xa096]        # 419a1b <_IO_stdin_used@@Base+0x3a1b>
  40f985:	call   4041a0 <__assert_fail@plt>
  40f98a:	lea    rcx,[rip+0xa73f]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  40f991:	mov    edx,0x287
  40f996:	lea    rsi,[rip+0x9cf3]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40f99d:	lea    rdi,[rip+0xa083]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  40f9a4:	call   4041a0 <__assert_fail@plt>
  40f9a9:	call   404180 <__stack_chk_fail@plt>
  40f9ae:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  40f9b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f9be:	xchg   ax,ax

000000000040f9c0 <flatcc_builder_flush_vtable_cache@@Base>:
  40f9c0:	endbr64 
  40f9c4:	cmp    QWORD PTR [rdi+0xd8],0x0
  40f9cc:	jne    40f9d0 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  40f9ce:	ret    
  40f9cf:	nop
  40f9d0:	push   rbx
  40f9d1:	mov    rbx,rdi
  40f9d4:	xor    esi,esi
  40f9d6:	mov    rdx,QWORD PTR [rbx+0xb0]
  40f9dd:	mov    rdi,QWORD PTR [rdi+0xa8]
  40f9e4:	call   4041b0 <memset@plt>
  40f9e9:	movabs rax,0x1000000000
  40f9f3:	mov    QWORD PTR [rbx+0xe0],rax
  40f9fa:	pop    rbx
  40f9fb:	ret    
  40f9fc:	nop    DWORD PTR [rax+0x0]

000000000040fa00 <flatcc_builder_custom_init@@Base>:
  40fa00:	endbr64 
  40fa04:	mov    QWORD PTR [rdi],0x0
  40fa0b:	mov    QWORD PTR [rdi+0x180],0x0
  40fa16:	mov    r9,rdi
  40fa19:	lea    rdi,[rdi+0x8]
  40fa1d:	and    rdi,0xfffffffffffffff8
  40fa21:	mov    r10,rcx
  40fa24:	mov    rcx,r9
  40fa27:	sub    rcx,rdi
  40fa2a:	add    ecx,0x188
  40fa30:	shr    ecx,0x3
  40fa33:	xor    eax,eax
  40fa35:	rep stos QWORD PTR es:[rdi],rax
  40fa38:	test   rsi,rsi
  40fa3b:	je     40fa58 <flatcc_builder_custom_init@@Base+0x58>
  40fa3d:	test   r10,r10
  40fa40:	je     40fa76 <flatcc_builder_custom_init@@Base+0x76>
  40fa42:	mov    QWORD PTR [r9+0x40],r8
  40fa46:	mov    QWORD PTR [r9+0x50],r10
  40fa4a:	mov    QWORD PTR [r9+0x38],rdx
  40fa4e:	mov    QWORD PTR [r9+0x48],rsi
  40fa52:	xor    eax,eax
  40fa54:	ret    
  40fa55:	nop    DWORD PTR [rax]
  40fa58:	mov    DWORD PTR [r9+0x128],0x1
  40fa63:	lea    rdx,[r9+0x130]
  40fa6a:	mov    rsi,0x4134b0
  40fa71:	test   r10,r10
  40fa74:	jne    40fa42 <flatcc_builder_custom_init@@Base+0x42>
  40fa76:	mov    r10,0x40f340
  40fa7d:	jmp    40fa42 <flatcc_builder_custom_init@@Base+0x42>
  40fa7f:	nop

000000000040fa80 <flatcc_builder_init@@Base>:
  40fa80:	endbr64 
  40fa84:	xor    r8d,r8d
  40fa87:	xor    ecx,ecx
  40fa89:	xor    edx,edx
  40fa8b:	xor    esi,esi
  40fa8d:	jmp    40fa00 <flatcc_builder_custom_init@@Base>
  40fa92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fa9d:	nop    DWORD PTR [rax]

000000000040faa0 <flatcc_builder_custom_reset@@Base>:
  40faa0:	endbr64 
  40faa4:	push   r14
  40faa6:	mov    r14d,esi
  40faa9:	push   r13
  40faab:	mov    r13d,edx
  40faae:	push   r12
  40fab0:	mov    r12,rdi
  40fab3:	push   rbp
  40fab4:	xor    ebp,ebp
  40fab6:	push   rbx
  40fab7:	lea    rbx,[rdi+0x58]
  40fabb:	jmp    40fb05 <flatcc_builder_custom_reset@@Base+0x65>
  40fabd:	nop    DWORD PTR [rax]
  40fac0:	cmp    ebp,0x5
  40fac3:	je     40faef <flatcc_builder_custom_reset@@Base+0x4f>
  40fac5:	test   r13d,r13d
  40fac8:	je     40faef <flatcc_builder_custom_reset@@Base+0x4f>
  40faca:	mov    rdi,QWORD PTR [r12+0x40]
  40facf:	mov    r8d,ebp
  40fad2:	mov    ecx,0x1
  40fad7:	mov    edx,0x1
  40fadc:	mov    rsi,rbx
  40fadf:	call   QWORD PTR [r12+0x50]
  40fae4:	test   eax,eax
  40fae6:	jne    40fc20 <flatcc_builder_custom_reset@@Base+0x180>
  40faec:	mov    rdi,QWORD PTR [rbx]
  40faef:	mov    rdx,QWORD PTR [rbx+0x8]
  40faf3:	xor    esi,esi
  40faf5:	call   4041b0 <memset@plt>
  40fafa:	inc    ebp
  40fafc:	add    rbx,0x10
  40fb00:	cmp    ebp,0x8
  40fb03:	je     40fb38 <flatcc_builder_custom_reset@@Base+0x98>
  40fb05:	mov    rdi,QWORD PTR [rbx]
  40fb08:	test   rdi,rdi
  40fb0b:	jne    40fac0 <flatcc_builder_custom_reset@@Base+0x20>
  40fb0d:	cmp    QWORD PTR [rbx+0x8],0x0
  40fb12:	je     40fafa <flatcc_builder_custom_reset@@Base+0x5a>
  40fb14:	lea    rcx,[rip+0xa645]        # 41a160 <_IO_stdin_used@@Base+0x4160>
  40fb1b:	mov    edx,0x1b2
  40fb20:	lea    rsi,[rip+0x9b69]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40fb27:	lea    rdi,[rip+0x9f09]        # 419a37 <_IO_stdin_used@@Base+0x3a37>
  40fb2e:	call   4041a0 <__assert_fail@plt>
  40fb33:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb38:	mov    edx,DWORD PTR [r12+0xe4]
  40fb40:	mov    DWORD PTR [r12+0xe0],0x0
  40fb4c:	test   edx,edx
  40fb4e:	je     40fb5c <flatcc_builder_custom_reset@@Base+0xbc>
  40fb50:	mov    DWORD PTR [r12+0xe4],0x10
  40fb5c:	xor    eax,eax
  40fb5e:	mov    WORD PTR [r12+0xe8],ax
  40fb67:	mov    rax,QWORD PTR [r12+0x68]
  40fb6c:	mov    QWORD PTR [r12+0xf0],0x0
  40fb78:	mov    QWORD PTR [r12+0x18],rax
  40fb7d:	mov    rax,QWORD PTR [r12+0x88]
  40fb85:	mov    QWORD PTR [r12+0x20],0x0
  40fb8e:	mov    QWORD PTR [r12],rax
  40fb92:	mov    rax,QWORD PTR [r12+0x58]
  40fb97:	mov    QWORD PTR [r12+0xfc],0x0
  40fba3:	mov    QWORD PTR [r12+0x104],0x0
  40fbaf:	mov    QWORD PTR [r12+0x8],rax
  40fbb4:	mov    QWORD PTR [r12+0x30],0x0
  40fbbd:	test   r14d,r14d
  40fbc0:	jne    40fbe0 <flatcc_builder_custom_reset@@Base+0x140>
  40fbc2:	mov    eax,DWORD PTR [r12+0x128]
  40fbca:	test   eax,eax
  40fbcc:	jne    40fc04 <flatcc_builder_custom_reset@@Base+0x164>
  40fbce:	pop    rbx
  40fbcf:	pop    rbp
  40fbd0:	pop    r12
  40fbd2:	pop    r13
  40fbd4:	pop    r14
  40fbd6:	ret    
  40fbd7:	nop    WORD PTR [rax+rax*1+0x0]
  40fbe0:	mov    eax,DWORD PTR [r12+0x128]
  40fbe8:	mov    QWORD PTR [r12+0x118],0x0
  40fbf4:	mov    QWORD PTR [r12+0x120],0x0
  40fc00:	test   eax,eax
  40fc02:	je     40fbce <flatcc_builder_custom_reset@@Base+0x12e>
  40fc04:	lea    rdi,[r12+0x130]
  40fc0c:	call   413320 <flatcc_emitter_reset@@Base>
  40fc11:	pop    rbx
  40fc12:	pop    rbp
  40fc13:	pop    r12
  40fc15:	pop    r13
  40fc17:	xor    eax,eax
  40fc19:	pop    r14
  40fc1b:	ret    
  40fc1c:	nop    DWORD PTR [rax+0x0]
  40fc20:	pop    rbx
  40fc21:	pop    rbp
  40fc22:	pop    r12
  40fc24:	pop    r13
  40fc26:	mov    eax,0xffffffff
  40fc2b:	pop    r14
  40fc2d:	ret    
  40fc2e:	xchg   ax,ax

000000000040fc30 <flatcc_builder_reset@@Base>:
  40fc30:	endbr64 
  40fc34:	xor    edx,edx
  40fc36:	xor    esi,esi
  40fc38:	jmp    40faa0 <flatcc_builder_custom_reset@@Base>
  40fc3d:	nop    DWORD PTR [rax]

000000000040fc40 <flatcc_builder_clear@@Base>:
  40fc40:	endbr64 
  40fc44:	push   r12
  40fc46:	lea    r12,[rdi+0x58]
  40fc4a:	push   rbp
  40fc4b:	xor    ebp,ebp
  40fc4d:	push   rbx
  40fc4e:	mov    rbx,rdi
  40fc51:	nop    DWORD PTR [rax+0x0]
  40fc58:	mov    rdi,QWORD PTR [rbx+0x40]
  40fc5c:	mov    r8d,ebp
  40fc5f:	mov    rsi,r12
  40fc62:	xor    ecx,ecx
  40fc64:	xor    edx,edx
  40fc66:	inc    ebp
  40fc68:	call   QWORD PTR [rbx+0x50]
  40fc6b:	add    r12,0x10
  40fc6f:	cmp    ebp,0x8
  40fc72:	jne    40fc58 <flatcc_builder_clear@@Base+0x18>
  40fc74:	mov    eax,DWORD PTR [rbx+0x128]
  40fc7a:	test   eax,eax
  40fc7c:	jne    40fcb0 <flatcc_builder_clear@@Base+0x70>
  40fc7e:	lea    rdi,[rbx+0x8]
  40fc82:	and    rdi,0xfffffffffffffff8
  40fc86:	mov    QWORD PTR [rbx],0x0
  40fc8d:	mov    QWORD PTR [rbx+0x180],0x0
  40fc98:	sub    rbx,rdi
  40fc9b:	lea    ecx,[rbx+0x188]
  40fca1:	shr    ecx,0x3
  40fca4:	xor    eax,eax
  40fca6:	rep stos QWORD PTR es:[rdi],rax
  40fca9:	pop    rbx
  40fcaa:	pop    rbp
  40fcab:	pop    r12
  40fcad:	ret    
  40fcae:	xchg   ax,ax
  40fcb0:	lea    rdi,[rbx+0x130]
  40fcb7:	call   413410 <flatcc_emitter_clear@@Base>
  40fcbc:	jmp    40fc7e <flatcc_builder_clear@@Base+0x3e>
  40fcbe:	xchg   ax,ax

000000000040fcc0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  40fcc0:	endbr64 
  40fcc4:	push   r12
  40fcc6:	push   rbp
  40fcc7:	lea    rbp,[rsi+0x7]
  40fccb:	and    rbp,0xfffffffffffffff8
  40fccf:	push   rbx
  40fcd0:	add    rbp,0x8
  40fcd4:	mov    rbx,rdi
  40fcd7:	mov    r12,QWORD PTR [rdi+0x180]
  40fcde:	lea    rdx,[r12+rbp*1]
  40fce2:	cmp    rdx,QWORD PTR [rdi+0xd0]
  40fce9:	jbe    40fd05 <flatcc_builder_enter_user_frame_ptr@@Base+0x45>
  40fceb:	lea    rsi,[rdi+0xc8]
  40fcf2:	mov    rdi,QWORD PTR [rdi+0x40]
  40fcf6:	xor    ecx,ecx
  40fcf8:	mov    r8d,0x7
  40fcfe:	call   QWORD PTR [rbx+0x50]
  40fd01:	test   eax,eax
  40fd03:	jne    40fd57 <flatcc_builder_enter_user_frame_ptr@@Base+0x97>
  40fd05:	add    r12,QWORD PTR [rbx+0xc8]
  40fd0c:	je     40fd50 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
  40fd0e:	mov    rdx,rbp
  40fd11:	mov    rdi,r12
  40fd14:	xor    esi,esi
  40fd16:	call   4041b0 <memset@plt>
  40fd1b:	mov    rdx,QWORD PTR [rbx+0x178]
  40fd22:	lea    rax,[r12+0x8]
  40fd27:	mov    QWORD PTR [r12],rdx
  40fd2b:	mov    rdx,QWORD PTR [rbx+0x180]
  40fd32:	add    rbp,rdx
  40fd35:	lea    rcx,[rdx+0x8]
  40fd39:	mov    QWORD PTR [rbx+0x180],rbp
  40fd40:	mov    QWORD PTR [rbx+0x178],rcx
  40fd47:	pop    rbx
  40fd48:	pop    rbp
  40fd49:	pop    r12
  40fd4b:	ret    
  40fd4c:	nop    DWORD PTR [rax+0x0]
  40fd50:	pop    rbx
  40fd51:	pop    rbp
  40fd52:	xor    eax,eax
  40fd54:	pop    r12
  40fd56:	ret    
  40fd57:	call   40f470 <flatcc_builder_default_alloc@@Base+0x130>
  40fd5c:	nop    DWORD PTR [rax+0x0]

000000000040fd60 <flatcc_builder_enter_user_frame@@Base>:
  40fd60:	endbr64 
  40fd64:	push   r12
  40fd66:	push   rbp
  40fd67:	mov    rbp,rdi
  40fd6a:	push   rbx
  40fd6b:	lea    rbx,[rsi+0x7]
  40fd6f:	and    rbx,0xfffffffffffffff8
  40fd73:	mov    r12,QWORD PTR [rdi+0x180]
  40fd7a:	add    rbx,0x8
  40fd7e:	lea    rdx,[r12+rbx*1]
  40fd82:	cmp    rdx,QWORD PTR [rdi+0xd0]
  40fd89:	jbe    40fda5 <flatcc_builder_enter_user_frame@@Base+0x45>
  40fd8b:	lea    rsi,[rdi+0xc8]
  40fd92:	mov    rdi,QWORD PTR [rdi+0x40]
  40fd96:	xor    ecx,ecx
  40fd98:	mov    r8d,0x7
  40fd9e:	call   QWORD PTR [rbp+0x50]
  40fda1:	test   eax,eax
  40fda3:	jne    40fdea <flatcc_builder_enter_user_frame@@Base+0x8a>
  40fda5:	add    r12,QWORD PTR [rbp+0xc8]
  40fdac:	je     40fde2 <flatcc_builder_enter_user_frame@@Base+0x82>
  40fdae:	mov    rdx,rbx
  40fdb1:	mov    rdi,r12
  40fdb4:	xor    esi,esi
  40fdb6:	call   4041b0 <memset@plt>
  40fdbb:	mov    rax,QWORD PTR [rbp+0x178]
  40fdc2:	mov    QWORD PTR [r12],rax
  40fdc6:	mov    rax,QWORD PTR [rbp+0x180]
  40fdcd:	lea    r12,[rax+0x8]
  40fdd1:	add    rbx,rax
  40fdd4:	mov    QWORD PTR [rbp+0x178],r12
  40fddb:	mov    QWORD PTR [rbp+0x180],rbx
  40fde2:	pop    rbx
  40fde3:	pop    rbp
  40fde4:	mov    rax,r12
  40fde7:	pop    r12
  40fde9:	ret    
  40fdea:	call   40f470 <flatcc_builder_default_alloc@@Base+0x130>
  40fdef:	nop

000000000040fdf0 <flatcc_builder_exit_user_frame@@Base>:
  40fdf0:	endbr64 
  40fdf4:	mov    rax,QWORD PTR [rdi+0x178]
  40fdfb:	test   rax,rax
  40fdfe:	je     40fe20 <flatcc_builder_exit_user_frame@@Base+0x30>
  40fe00:	mov    edx,eax
  40fe02:	sub    rax,0x8
  40fe06:	mov    QWORD PTR [rdi+0x180],rax
  40fe0d:	add    rdx,QWORD PTR [rdi+0xc8]
  40fe14:	mov    rax,QWORD PTR [rdx-0x8]
  40fe18:	mov    QWORD PTR [rdi+0x178],rax
  40fe1f:	ret    
  40fe20:	push   rax
  40fe21:	lea    rcx,[rip+0xa308]        # 41a130 <_IO_stdin_used@@Base+0x4130>
  40fe28:	mov    edx,0x21e
  40fe2d:	lea    rsi,[rip+0x985c]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40fe34:	lea    rdi,[rip+0x9c0e]        # 419a49 <_IO_stdin_used@@Base+0x3a49>
  40fe3b:	call   4041a0 <__assert_fail@plt>

000000000040fe40 <flatcc_builder_exit_user_frame_at@@Base>:
  40fe40:	endbr64 
  40fe44:	cmp    QWORD PTR [rdi+0x178],rsi
  40fe4b:	jb     40fe59 <flatcc_builder_exit_user_frame_at@@Base+0x19>
  40fe4d:	mov    QWORD PTR [rdi+0x178],rsi
  40fe54:	jmp    40fdf0 <flatcc_builder_exit_user_frame@@Base>
  40fe59:	push   rax
  40fe5a:	lea    rcx,[rip+0xa29f]        # 41a100 <_IO_stdin_used@@Base+0x4100>
  40fe61:	mov    edx,0x227
  40fe66:	lea    rsi,[rip+0x9823]        # 419690 <_IO_stdin_used@@Base+0x3690>
  40fe6d:	lea    rdi,[rip+0x987c]        # 4196f0 <_IO_stdin_used@@Base+0x36f0>
  40fe74:	call   4041a0 <__assert_fail@plt>
  40fe79:	nop    DWORD PTR [rax+0x0]

000000000040fe80 <flatcc_builder_get_current_user_frame@@Base>:
  40fe80:	endbr64 
  40fe84:	mov    rax,QWORD PTR [rdi+0x178]
  40fe8b:	ret    
  40fe8c:	nop    DWORD PTR [rax+0x0]

000000000040fe90 <flatcc_builder_get_user_frame_ptr@@Base>:
  40fe90:	endbr64 
  40fe94:	mov    eax,esi
  40fe96:	add    rax,QWORD PTR [rdi+0xc8]
  40fe9d:	ret    
  40fe9e:	xchg   ax,ax

000000000040fea0 <flatcc_builder_embed_buffer@@Base>:
  40fea0:	endbr64 
  40fea4:	push   r13
  40fea6:	mov    r13d,r9d
  40fea9:	push   r12
  40feab:	mov    r12,rcx
  40feae:	push   rbp
  40feaf:	mov    rbp,rdx
  40feb2:	movzx  edx,si
  40feb5:	push   rbx
  40feb6:	mov    rbx,rdi
  40feb9:	sub    rsp,0xc8
  40fec0:	mov    WORD PTR [rsp+0xc],r8w
  40fec6:	mov    r8d,DWORD PTR [rdi+0x100]
  40fecd:	mov    rax,QWORD PTR fs:0x28
  40fed6:	mov    QWORD PTR [rsp+0xb8],rax
  40fede:	xor    eax,eax
  40fee0:	test   r8d,r8d
  40fee3:	setne  cl
  40fee6:	lea    rax,[rsp+0xc]
  40feeb:	movzx  ecx,cl
  40feee:	mov    rsi,rax
  40fef1:	call   40f4d0 <flatcc_builder_default_alloc@@Base+0x190>
  40fef6:	test   eax,eax
  40fef8:	jne    410030 <flatcc_builder_embed_buffer@@Base+0x190>
  40fefe:	mov    edx,DWORD PTR [rbx+0xf0]
  40ff04:	xor    esi,esi
  40ff06:	and    r13d,0x2
  40ff0a:	setne  sil
  40ff0e:	movzx  ecx,WORD PTR [rsp+0xc]
  40ff13:	mov    eax,edx
  40ff15:	shl    esi,0x2
  40ff18:	sub    eax,r12d
  40ff1b:	dec    ecx
  40ff1d:	sub    eax,esi
  40ff1f:	and    eax,ecx
  40ff21:	lea    ecx,[rax+r12*1]
  40ff25:	mov    DWORD PTR [rsp+0x1c],ecx
  40ff29:	mov    ecx,DWORD PTR [rbx+0x100]
  40ff2f:	mov    QWORD PTR [rsp+0x20],0x0
  40ff38:	mov    DWORD PTR [rsp+0x28],0x0
  40ff40:	xor    r8d,r8d
  40ff43:	test   ecx,ecx
  40ff45:	je     40ff71 <flatcc_builder_embed_buffer@@Base+0xd1>
  40ff47:	lea    rcx,[rsp+0x1c]
  40ff4c:	mov    QWORD PTR [rsp+0x20],0x4
  40ff55:	mov    QWORD PTR [rsp+0x30],rcx
  40ff5a:	mov    QWORD PTR [rsp+0x38],0x4
  40ff63:	mov    DWORD PTR [rsp+0x28],0x1
  40ff6b:	mov    r8d,0x4
  40ff71:	test   r12,r12
  40ff74:	je     40ff9a <flatcc_builder_embed_buffer@@Base+0xfa>
  40ff76:	movsxd rsi,DWORD PTR [rsp+0x28]
  40ff7b:	add    r8,r12
  40ff7e:	mov    rcx,rsi
  40ff81:	inc    ecx
  40ff83:	shl    rsi,0x4
  40ff87:	mov    QWORD PTR [rsp+0x20],r8
  40ff8c:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  40ff91:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  40ff96:	mov    DWORD PTR [rsp+0x28],ecx
  40ff9a:	test   eax,eax
  40ff9c:	jne    410000 <flatcc_builder_embed_buffer@@Base+0x160>
  40ff9e:	mov    ebp,edx
  40ffa0:	sub    ebp,r8d
  40ffa3:	cmp    edx,ebp
  40ffa5:	jle    410034 <flatcc_builder_embed_buffer@@Base+0x194>
  40ffab:	movabs rax,0x10000000f
  40ffb5:	cmp    r8,rax
  40ffb8:	ja     410034 <flatcc_builder_embed_buffer@@Base+0x194>
  40ffba:	mov    rdi,QWORD PTR [rbx+0x38]
  40ffbe:	mov    edx,DWORD PTR [rsp+0x28]
  40ffc2:	lea    rsi,[rsp+0x30]
  40ffc7:	mov    ecx,ebp
  40ffc9:	call   QWORD PTR [rbx+0x48]
  40ffcc:	test   eax,eax
  40ffce:	jne    410058 <flatcc_builder_embed_buffer@@Base+0x1b8>
  40ffd4:	mov    DWORD PTR [rbx+0xf0],ebp
  40ffda:	mov    rdi,QWORD PTR [rsp+0xb8]
  40ffe2:	xor    rdi,QWORD PTR fs:0x28
  40ffeb:	mov    eax,ebp
  40ffed:	jne    410053 <flatcc_builder_embed_buffer@@Base+0x1b3>
  40ffef:	add    rsp,0xc8
  40fff6:	pop    rbx
  40fff7:	pop    rbp
  40fff8:	pop    r12
  40fffa:	pop    r13
  40fffc:	ret    
  40fffd:	nop    DWORD PTR [rax]
  410000:	movsxd rsi,DWORD PTR [rsp+0x28]
  410005:	mov    rdi,0x41a180
  41000c:	mov    rcx,rsi
  41000f:	add    r8,rax
  410012:	shl    rsi,0x4
  410016:	inc    ecx
  410018:	mov    QWORD PTR [rsp+0x20],r8
  41001d:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  410022:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  410027:	mov    DWORD PTR [rsp+0x28],ecx
  41002b:	jmp    40ff9e <flatcc_builder_embed_buffer@@Base+0xfe>
  410030:	xor    ebp,ebp
  410032:	jmp    40ffda <flatcc_builder_embed_buffer@@Base+0x13a>
  410034:	lea    rcx,[rip+0xa095]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  41003b:	mov    edx,0x287
  410040:	lea    rsi,[rip+0x9649]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410047:	lea    rdi,[rip+0x99d9]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  41004e:	call   4041a0 <__assert_fail@plt>
  410053:	call   404180 <__stack_chk_fail@plt>
  410058:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  41005d:	nop    DWORD PTR [rax]

0000000000410060 <flatcc_builder_create_buffer@@Base>:
  410060:	endbr64 
  410064:	push   r14
  410066:	movzx  edx,dx
  410069:	mov    r14,rsi
  41006c:	push   r13
  41006e:	mov    r13d,r9d
  410071:	push   r12
  410073:	mov    r12d,r9d
  410076:	and    r12d,0x1
  41007a:	push   rbp
  41007b:	mov    rbp,rdi
  41007e:	push   rbx
  41007f:	mov    ebx,ecx
  410081:	mov    ecx,r12d
  410084:	sub    rsp,0xc0
  41008b:	mov    WORD PTR [rsp+0xc],r8w
  410091:	lea    rsi,[rsp+0xc]
  410096:	mov    rax,QWORD PTR fs:0x28
  41009f:	mov    QWORD PTR [rsp+0xb8],rax
  4100a7:	xor    eax,eax
  4100a9:	mov    DWORD PTR [rsp+0x1c],0x0
  4100b1:	call   40f4d0 <flatcc_builder_default_alloc@@Base+0x190>
  4100b6:	test   eax,eax
  4100b8:	jne    410258 <flatcc_builder_create_buffer@@Base+0x1f8>
  4100be:	movzx  esi,WORD PTR [rsp+0xc]
  4100c3:	cmp    si,WORD PTR [rbp+0xe8]
  4100ca:	jbe    4100d3 <flatcc_builder_create_buffer@@Base+0x73>
  4100cc:	mov    WORD PTR [rbp+0xe8],si
  4100d3:	mov    edx,DWORD PTR [rsp+0x1c]
  4100d7:	test   r14,r14
  4100da:	je     4100e3 <flatcc_builder_create_buffer@@Base+0x83>
  4100dc:	mov    edx,DWORD PTR [r14]
  4100df:	mov    DWORD PTR [rsp+0x1c],edx
  4100e3:	test   edx,edx
  4100e5:	mov    eax,0x4
  4100ea:	mov    ecx,DWORD PTR [rbp+0xf0]
  4100f0:	cmovne rdx,rax
  4100f4:	xor    edi,edi
  4100f6:	test   r13b,0x2
  4100fa:	setne  dil
  4100fe:	lea    eax,[rcx-0x4]
  410101:	shl    edi,0x2
  410104:	sub    eax,edx
  410106:	sub    eax,edi
  410108:	dec    esi
  41010a:	and    eax,esi
  41010c:	and    r13d,0x3
  410110:	jne    410228 <flatcc_builder_create_buffer@@Base+0x1c8>
  410116:	xor    r9d,r9d
  410119:	mov    esi,0x1
  41011e:	mov    r8d,0x4
  410124:	movsxd rdi,r9d
  410127:	shl    rdi,0x4
  41012b:	lea    r10,[rsp+0x14]
  410130:	mov    QWORD PTR [rsp+0x20],r8
  410135:	mov    QWORD PTR [rsp+rdi*1+0x30],r10
  41013a:	mov    QWORD PTR [rsp+rdi*1+0x38],0x4
  410143:	mov    DWORD PTR [rsp+0x28],esi
  410147:	test   edx,edx
  410149:	je     41016f <flatcc_builder_create_buffer@@Base+0x10f>
  41014b:	shl    rsi,0x4
  41014f:	add    r8,rdx
  410152:	lea    rdi,[rsp+0x1c]
  410157:	add    r9d,0x2
  41015b:	mov    QWORD PTR [rsp+0x20],r8
  410160:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  410165:	mov    QWORD PTR [rsp+rsi*1+0x38],rdx
  41016a:	mov    DWORD PTR [rsp+0x28],r9d
  41016f:	test   eax,eax
  410171:	je     41019e <flatcc_builder_create_buffer@@Base+0x13e>
  410173:	movsxd rsi,DWORD PTR [rsp+0x28]
  410178:	mov    rdi,0x41a180
  41017f:	mov    rdx,rsi
  410182:	add    r8,rax
  410185:	shl    rsi,0x4
  410189:	inc    edx
  41018b:	mov    QWORD PTR [rsp+0x20],r8
  410190:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  410195:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  41019a:	mov    DWORD PTR [rsp+0x28],edx
  41019e:	mov    eax,ecx
  4101a0:	sub    eax,r8d
  4101a3:	lea    edx,[rax+0x4]
  4101a6:	test   r13d,r13d
  4101a9:	cmovne eax,edx
  4101ac:	test   r12d,r12d
  4101af:	je     410260 <flatcc_builder_create_buffer@@Base+0x200>
  4101b5:	mov    edx,DWORD PTR [rbp+0xf8]
  4101bb:	sub    edx,eax
  4101bd:	sub    ebx,eax
  4101bf:	mov    DWORD PTR [rsp+0x14],ebx
  4101c3:	mov    ebx,ecx
  4101c5:	sub    ebx,r8d
  4101c8:	mov    DWORD PTR [rsp+0x18],edx
  4101cc:	cmp    ecx,ebx
  4101ce:	jle    41026d <flatcc_builder_create_buffer@@Base+0x20d>
  4101d4:	mov    rdi,QWORD PTR [rbp+0x38]
  4101d8:	mov    edx,DWORD PTR [rsp+0x28]
  4101dc:	lea    rsi,[rsp+0x30]
  4101e1:	mov    ecx,ebx
  4101e3:	call   QWORD PTR [rbp+0x48]
  4101e6:	test   eax,eax
  4101e8:	jne    410291 <flatcc_builder_create_buffer@@Base+0x231>
  4101ee:	mov    DWORD PTR [rbp+0xf0],ebx
  4101f4:	test   ebx,ebx
  4101f6:	je     410296 <flatcc_builder_create_buffer@@Base+0x236>
  4101fc:	mov    rcx,QWORD PTR [rsp+0xb8]
  410204:	xor    rcx,QWORD PTR fs:0x28
  41020d:	mov    eax,ebx
  41020f:	jne    41028c <flatcc_builder_create_buffer@@Base+0x22c>
  410211:	add    rsp,0xc0
  410218:	pop    rbx
  410219:	pop    rbp
  41021a:	pop    r12
  41021c:	pop    r13
  41021e:	pop    r14
  410220:	ret    
  410221:	nop    DWORD PTR [rax+0x0]
  410228:	lea    rsi,[rsp+0x18]
  41022d:	mov    QWORD PTR [rsp+0x30],rsi
  410232:	mov    QWORD PTR [rsp+0x38],0x4
  41023b:	mov    esi,0x2
  410240:	mov    r9d,0x1
  410246:	mov    r8d,0x8
  41024c:	jmp    410124 <flatcc_builder_create_buffer@@Base+0xc4>
  410251:	nop    DWORD PTR [rax+0x0]
  410258:	xor    ebx,ebx
  41025a:	jmp    4101fc <flatcc_builder_create_buffer@@Base+0x19c>
  41025c:	nop    DWORD PTR [rax+0x0]
  410260:	mov    edx,DWORD PTR [rbp+0xf4]
  410266:	sub    edx,eax
  410268:	jmp    4101bd <flatcc_builder_create_buffer@@Base+0x15d>
  41026d:	lea    rcx,[rip+0x9e5c]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  410274:	mov    edx,0x287
  410279:	lea    rsi,[rip+0x9410]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410280:	lea    rdi,[rip+0x97a0]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  410287:	call   4041a0 <__assert_fail@plt>
  41028c:	call   404180 <__stack_chk_fail@plt>
  410291:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  410296:	lea    rcx,[rip+0x9e13]        # 41a0b0 <_IO_stdin_used@@Base+0x40b0>
  41029d:	mov    edx,0x304
  4102a2:	lea    rsi,[rip+0x93e7]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4102a9:	lea    rdi,[rip+0x9777]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  4102b0:	call   4041a0 <__assert_fail@plt>
  4102b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004102c0 <flatcc_builder_create_struct@@Base>:
  4102c0:	endbr64 
  4102c4:	push   rbp
  4102c5:	push   rbx
  4102c6:	sub    rsp,0xa8
  4102cd:	mov    rax,QWORD PTR fs:0x28
  4102d6:	mov    QWORD PTR [rsp+0x98],rax
  4102de:	xor    eax,eax
  4102e0:	test   cx,cx
  4102e3:	je     410403 <flatcc_builder_create_struct@@Base+0x143>
  4102e9:	mov    r8,rdx
  4102ec:	mov    rbx,rdi
  4102ef:	movzx  edx,cx
  4102f2:	cmp    cx,WORD PTR [rdi+0xe8]
  4102f9:	jbe    410302 <flatcc_builder_create_struct@@Base+0x42>
  4102fb:	mov    WORD PTR [rdi+0xe8],cx
  410302:	mov    ecx,DWORD PTR [rbx+0xf0]
  410308:	dec    edx
  41030a:	mov    eax,ecx
  41030c:	sub    eax,r8d
  41030f:	and    eax,edx
  410311:	mov    edx,eax
  410313:	mov    QWORD PTR [rsp],0x0
  41031b:	mov    DWORD PTR [rsp+0x8],0x0
  410323:	test   r8,r8
  410326:	jne    4103b8 <flatcc_builder_create_struct@@Base+0xf8>
  41032c:	test   eax,eax
  41032e:	je     4103e4 <flatcc_builder_create_struct@@Base+0x124>
  410334:	mov    r8,rdx
  410337:	mov    esi,0x1
  41033c:	xor    eax,eax
  41033e:	mov    rdi,0x41a180
  410345:	shl    rax,0x4
  410349:	mov    QWORD PTR [rsp],r8
  41034d:	mov    QWORD PTR [rsp+rax*1+0x10],rdi
  410352:	mov    QWORD PTR [rsp+rax*1+0x18],rdx
  410357:	mov    DWORD PTR [rsp+0x8],esi
  41035b:	mov    ebp,ecx
  41035d:	movabs rax,0x10000000f
  410367:	sub    ebp,r8d
  41036a:	cmp    r8,rax
  41036d:	ja     4103e4 <flatcc_builder_create_struct@@Base+0x124>
  41036f:	cmp    ecx,ebp
  410371:	jle    4103e4 <flatcc_builder_create_struct@@Base+0x124>
  410373:	mov    rdi,QWORD PTR [rbx+0x38]
  410377:	mov    edx,DWORD PTR [rsp+0x8]
  41037b:	lea    rsi,[rsp+0x10]
  410380:	mov    ecx,ebp
  410382:	call   QWORD PTR [rbx+0x48]
  410385:	test   eax,eax
  410387:	jne    410422 <flatcc_builder_create_struct@@Base+0x162>
  41038d:	mov    DWORD PTR [rbx+0xf0],ebp
  410393:	mov    eax,ebp
  410395:	mov    rdi,QWORD PTR [rsp+0x98]
  41039d:	xor    rdi,QWORD PTR fs:0x28
  4103a6:	jne    410427 <flatcc_builder_create_struct@@Base+0x167>
  4103a8:	add    rsp,0xa8
  4103af:	pop    rbx
  4103b0:	pop    rbp
  4103b1:	ret    
  4103b2:	nop    WORD PTR [rax+rax*1+0x0]
  4103b8:	mov    QWORD PTR [rsp],r8
  4103bc:	mov    QWORD PTR [rsp+0x10],rsi
  4103c1:	mov    QWORD PTR [rsp+0x18],r8
  4103c6:	mov    DWORD PTR [rsp+0x8],0x1
  4103ce:	test   eax,eax
  4103d0:	je     41035b <flatcc_builder_create_struct@@Base+0x9b>
  4103d2:	add    r8,rdx
  4103d5:	mov    esi,0x2
  4103da:	mov    eax,0x1
  4103df:	jmp    41033e <flatcc_builder_create_struct@@Base+0x7e>
  4103e4:	lea    rcx,[rip+0x9ce5]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  4103eb:	mov    edx,0x287
  4103f0:	lea    rsi,[rip+0x9299]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4103f7:	lea    rdi,[rip+0x9629]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  4103fe:	call   4041a0 <__assert_fail@plt>
  410403:	lea    rcx,[rip+0x9c86]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  41040a:	mov    edx,0x30f
  41040f:	lea    rsi,[rip+0x927a]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410416:	lea    rdi,[rip+0x9645]        # 419a62 <_IO_stdin_used@@Base+0x3a62>
  41041d:	call   4041a0 <__assert_fail@plt>
  410422:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  410427:	call   404180 <__stack_chk_fail@plt>
  41042c:	nop    DWORD PTR [rax+0x0]

0000000000410430 <flatcc_builder_start_buffer@@Base>:
  410430:	endbr64 
  410434:	push   r13
  410436:	mov    r13d,edx
  410439:	push   r12
  41043b:	mov    r12d,ecx
  41043e:	push   rbp
  41043f:	mov    rbp,rsi
  410442:	push   rbx
  410443:	mov    rbx,rdi
  410446:	sub    rsp,0x8
  41044a:	movzx  esi,WORD PTR [rdi+0xe8]
  410451:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  410456:	test   eax,eax
  410458:	jne    410508 <flatcc_builder_start_buffer@@Base+0xd8>
  41045e:	movzx  edx,WORD PTR [rbx+0xec]
  410465:	mov    rsi,QWORD PTR [rbx+0x30]
  410469:	mov    ecx,0x1
  41046e:	mov    WORD PTR [rbx+0xe8],cx
  410475:	mov    WORD PTR [rsi+0x22],dx
  410479:	movzx  edx,WORD PTR [rbx+0x10c]
  410480:	mov    WORD PTR [rbx+0xec],r13w
  410488:	mov    WORD PTR [rsi+0x20],dx
  41048c:	mov    edx,DWORD PTR [rbx+0xf8]
  410492:	mov    WORD PTR [rbx+0x10c],r12w
  41049a:	mov    DWORD PTR [rsi+0x14],edx
  41049d:	mov    edx,DWORD PTR [rbx+0x100]
  4104a3:	mov    DWORD PTR [rsi+0x1c],edx
  4104a6:	mov    edx,DWORD PTR [rbx+0xf0]
  4104ac:	mov    DWORD PTR [rbx+0xf8],edx
  4104b2:	mov    edx,DWORD PTR [rbx+0xfc]
  4104b8:	lea    ecx,[rdx+0x1]
  4104bb:	mov    DWORD PTR [rbx+0x100],edx
  4104c1:	mov    edx,DWORD PTR [rbx+0x110]
  4104c7:	mov    DWORD PTR [rbx+0xfc],ecx
  4104cd:	mov    DWORD PTR [rsi+0x10],edx
  4104d0:	test   rbp,rbp
  4104d3:	je     4104f8 <flatcc_builder_start_buffer@@Base+0xc8>
  4104d5:	mov    edx,DWORD PTR [rbp+0x0]
  4104d8:	mov    DWORD PTR [rbx+0x110],edx
  4104de:	mov    edx,0x1
  4104e3:	mov    WORD PTR [rsi+0xe],dx
  4104e7:	add    rsp,0x8
  4104eb:	pop    rbx
  4104ec:	pop    rbp
  4104ed:	pop    r12
  4104ef:	pop    r13
  4104f1:	ret    
  4104f2:	nop    WORD PTR [rax+rax*1+0x0]
  4104f8:	mov    rbp,0x41a180
  4104ff:	jmp    4104d5 <flatcc_builder_start_buffer@@Base+0xa5>
  410501:	nop    DWORD PTR [rax+0x0]
  410508:	mov    eax,0xffffffff
  41050d:	jmp    4104e7 <flatcc_builder_start_buffer@@Base+0xb7>
  41050f:	nop

0000000000410510 <flatcc_builder_end_buffer@@Base>:
  410510:	endbr64 
  410514:	push   rbp
  410515:	xor    eax,eax
  410517:	push   rbx
  410518:	sub    rsp,0x8
  41051c:	movzx  r9d,WORD PTR [rdi+0x10c]
  410524:	mov    edx,DWORD PTR [rdi+0x100]
  41052a:	and    r9d,0x2
  41052e:	test   edx,edx
  410530:	setne  al
  410533:	movzx  r9d,r9w
  410537:	or     r9d,eax
  41053a:	mov    rax,QWORD PTR [rdi+0x30]
  41053e:	cmp    WORD PTR [rax+0xe],0x1
  410543:	jne    410634 <flatcc_builder_end_buffer@@Base+0x124>
  410549:	movzx  edx,WORD PTR [rdi+0xec]
  410550:	movzx  eax,WORD PTR [rdi+0xe8]
  410557:	mov    rbx,rdi
  41055a:	mov    ecx,esi
  41055c:	mov    r8d,edx
  41055f:	cmp    dx,ax
  410562:	ja     410628 <flatcc_builder_end_buffer@@Base+0x118>
  410568:	movzx  r8d,ax
  41056c:	lea    rsi,[rbx+0x110]
  410573:	mov    rdi,rbx
  410576:	call   410060 <flatcc_builder_create_buffer@@Base>
  41057b:	mov    ebp,eax
  41057d:	test   eax,eax
  41057f:	je     41061c <flatcc_builder_end_buffer@@Base+0x10c>
  410585:	mov    rax,QWORD PTR [rbx+0x30]
  410589:	mov    rdi,QWORD PTR [rbx+0x18]
  41058d:	mov    edx,DWORD PTR [rax+0x14]
  410590:	xor    esi,esi
  410592:	mov    DWORD PTR [rbx+0xf8],edx
  410598:	mov    edx,DWORD PTR [rax+0x1c]
  41059b:	mov    DWORD PTR [rbx+0x100],edx
  4105a1:	mov    edx,DWORD PTR [rax+0x10]
  4105a4:	movzx  eax,WORD PTR [rax+0x20]
  4105a8:	mov    DWORD PTR [rbx+0x110],edx
  4105ae:	mov    WORD PTR [rbx+0x10c],ax
  4105b5:	mov    edx,DWORD PTR [rbx+0x20]
  4105b8:	call   4041b0 <memset@plt>
  4105bd:	mov    rax,QWORD PTR [rbx+0x30]
  4105c1:	mov    edi,DWORD PTR [rbx+0x70]
  4105c4:	mov    edx,DWORD PTR [rax+0x8]
  4105c7:	mov    esi,DWORD PTR [rax]
  4105c9:	mov    ecx,DWORD PTR [rax+0x4]
  4105cc:	mov    DWORD PTR [rbx+0x20],edx
  4105cf:	mov    rdx,rsi
  4105d2:	sub    edi,edx
  4105d4:	mov    DWORD PTR [rbx+0x28],esi
  4105d7:	mov    edx,edi
  4105d9:	add    rsi,QWORD PTR [rbx+0x68]
  4105dd:	cmp    ecx,edi
  4105df:	cmovb  edx,ecx
  4105e2:	mov    QWORD PTR [rbx+0x18],rsi
  4105e6:	mov    DWORD PTR [rbx+0x24],edx
  4105e9:	movzx  edx,WORD PTR [rbx+0xea]
  4105f0:	mov    DWORD PTR [rax+0x4],ecx
  4105f3:	cmp    dx,WORD PTR [rbx+0xe8]
  4105fa:	jbe    410603 <flatcc_builder_end_buffer@@Base+0xf3>
  4105fc:	mov    WORD PTR [rbx+0xe8],dx
  410603:	movzx  edx,WORD PTR [rax+0xc]
  410607:	sub    rax,0x24
  41060b:	dec    DWORD PTR [rbx+0x104]
  410611:	mov    WORD PTR [rbx+0xea],dx
  410618:	mov    QWORD PTR [rbx+0x30],rax
  41061c:	add    rsp,0x8
  410620:	pop    rbx
  410621:	mov    eax,ebp
  410623:	pop    rbp
  410624:	ret    
  410625:	nop    DWORD PTR [rax]
  410628:	mov    WORD PTR [rbx+0xe8],dx
  41062f:	jmp    41056c <flatcc_builder_end_buffer@@Base+0x5c>
  410634:	lea    rcx,[rip+0x9a35]        # 41a070 <_IO_stdin_used@@Base+0x4070>
  41063b:	mov    edx,0x346
  410640:	lea    rsi,[rip+0x9049]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410647:	lea    rdi,[rip+0x90c2]        # 419710 <_IO_stdin_used@@Base+0x3710>
  41064e:	call   4041a0 <__assert_fail@plt>
  410653:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41065e:	xchg   ax,ax

0000000000410660 <flatcc_builder_start_struct@@Base>:
  410660:	endbr64 
  410664:	push   r12
  410666:	push   rbp
  410667:	mov    rbp,rsi
  41066a:	movzx  esi,dx
  41066d:	push   rbx
  41066e:	mov    rbx,rdi
  410671:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  410676:	test   eax,eax
  410678:	jne    410700 <flatcc_builder_start_struct@@Base+0xa0>
  41067e:	mov    rcx,QWORD PTR [rbx+0x30]
  410682:	mov    eax,0x2
  410687:	mov    WORD PTR [rcx+0xe],ax
  41068b:	mov    eax,DWORD PTR [rbx+0x28]
  41068e:	mov    edi,DWORD PTR [rbx+0x70]
  410691:	mov    rdx,rax
  410694:	sub    edi,edx
  410696:	add    rax,QWORD PTR [rbx+0x68]
  41069a:	mov    QWORD PTR [rbx+0x18],rax
  41069e:	mov    edx,edi
  4106a0:	cmp    edi,0xfffffffc
  4106a3:	ja     4106d0 <flatcc_builder_start_struct@@Base+0x70>
  4106a5:	mov    DWORD PTR [rbx+0x24],edi
  4106a8:	mov    r12d,DWORD PTR [rbx+0x20]
  4106ac:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4106b3:	mov    rsi,r12
  4106b6:	add    esi,ebp
  4106b8:	mov    DWORD PTR [rbx+0x20],esi
  4106bb:	cmp    esi,edx
  4106bd:	jae    4106e0 <flatcc_builder_start_struct@@Base+0x80>
  4106bf:	pop    rbx
  4106c0:	pop    rbp
  4106c1:	add    rax,r12
  4106c4:	pop    r12
  4106c6:	ret    
  4106c7:	nop    WORD PTR [rax+rax*1+0x0]
  4106d0:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  4106d7:	mov    edx,0xfffffffc
  4106dc:	jmp    4106a8 <flatcc_builder_start_struct@@Base+0x48>
  4106de:	xchg   ax,ax
  4106e0:	inc    esi
  4106e2:	mov    edx,0xfffffffc
  4106e7:	mov    rdi,rbx
  4106ea:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  4106ef:	test   eax,eax
  4106f1:	jne    410700 <flatcc_builder_start_struct@@Base+0xa0>
  4106f3:	mov    rax,QWORD PTR [rbx+0x18]
  4106f7:	jmp    4106bf <flatcc_builder_start_struct@@Base+0x5f>
  4106f9:	nop    DWORD PTR [rax+0x0]
  410700:	pop    rbx
  410701:	pop    rbp
  410702:	xor    eax,eax
  410704:	pop    r12
  410706:	ret    
  410707:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410710 <flatcc_builder_struct_edit@@Base>:
  410710:	endbr64 
  410714:	mov    rax,QWORD PTR [rdi+0x18]
  410718:	ret    
  410719:	nop    DWORD PTR [rax+0x0]

0000000000410720 <flatcc_builder_end_struct@@Base>:
  410720:	endbr64 
  410724:	push   rbp
  410725:	push   rbx
  410726:	sub    rsp,0x8
  41072a:	mov    rax,QWORD PTR [rdi+0x30]
  41072e:	cmp    WORD PTR [rax+0xe],0x2
  410733:	jne    4107d6 <flatcc_builder_end_struct@@Base+0xb6>
  410739:	movzx  ecx,WORD PTR [rdi+0xea]
  410740:	mov    edx,DWORD PTR [rdi+0x20]
  410743:	mov    rsi,QWORD PTR [rdi+0x18]
  410747:	mov    rbx,rdi
  41074a:	call   4102c0 <flatcc_builder_create_struct@@Base>
  41074f:	mov    ebp,eax
  410751:	test   eax,eax
  410753:	jne    410760 <flatcc_builder_end_struct@@Base+0x40>
  410755:	add    rsp,0x8
  410759:	pop    rbx
  41075a:	mov    eax,ebp
  41075c:	pop    rbp
  41075d:	ret    
  41075e:	xchg   ax,ax
  410760:	mov    edx,DWORD PTR [rbx+0x20]
  410763:	mov    rdi,QWORD PTR [rbx+0x18]
  410767:	xor    esi,esi
  410769:	call   4041b0 <memset@plt>
  41076e:	mov    rax,QWORD PTR [rbx+0x30]
  410772:	mov    edi,DWORD PTR [rbx+0x70]
  410775:	mov    edx,DWORD PTR [rax+0x8]
  410778:	mov    esi,DWORD PTR [rax]
  41077a:	mov    ecx,DWORD PTR [rax+0x4]
  41077d:	mov    DWORD PTR [rbx+0x20],edx
  410780:	mov    rdx,rsi
  410783:	sub    edi,edx
  410785:	mov    DWORD PTR [rbx+0x28],esi
  410788:	mov    edx,edi
  41078a:	add    rsi,QWORD PTR [rbx+0x68]
  41078e:	cmp    ecx,edi
  410790:	cmovb  edx,ecx
  410793:	mov    QWORD PTR [rbx+0x18],rsi
  410797:	mov    DWORD PTR [rbx+0x24],edx
  41079a:	movzx  edx,WORD PTR [rbx+0xea]
  4107a1:	mov    DWORD PTR [rax+0x4],ecx
  4107a4:	cmp    dx,WORD PTR [rbx+0xe8]
  4107ab:	jbe    4107b4 <flatcc_builder_end_struct@@Base+0x94>
  4107ad:	mov    WORD PTR [rbx+0xe8],dx
  4107b4:	movzx  edx,WORD PTR [rax+0xc]
  4107b8:	dec    DWORD PTR [rbx+0x104]
  4107be:	sub    rax,0x24
  4107c2:	mov    QWORD PTR [rbx+0x30],rax
  4107c6:	mov    WORD PTR [rbx+0xea],dx
  4107cd:	add    rsp,0x8
  4107d1:	mov    eax,ebp
  4107d3:	pop    rbx
  4107d4:	pop    rbp
  4107d5:	ret    
  4107d6:	lea    rcx,[rip+0x9873]        # 41a050 <_IO_stdin_used@@Base+0x4050>
  4107dd:	mov    edx,0x368
  4107e2:	lea    rsi,[rip+0x8ea7]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4107e9:	lea    rdi,[rip+0x8f50]        # 419740 <_IO_stdin_used@@Base+0x3740>
  4107f0:	call   4041a0 <__assert_fail@plt>
  4107f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000410800 <flatcc_builder_extend_vector@@Base>:
  410800:	endbr64 
  410804:	push   rbp
  410805:	mov    eax,esi
  410807:	push   rbx
  410808:	sub    rsp,0x8
  41080c:	mov    rdx,QWORD PTR [rdi+0x30]
  410810:	add    eax,DWORD PTR [rdx+0x14]
  410813:	setb   cl
  410816:	cmp    DWORD PTR [rdx+0x18],eax
  410819:	jb     410864 <flatcc_builder_extend_vector@@Base+0x64>
  41081b:	movzx  ecx,cl
  41081e:	test   ecx,ecx
  410820:	jne    410864 <flatcc_builder_extend_vector@@Base+0x64>
  410822:	imul   esi,DWORD PTR [rdx+0x10]
  410826:	mov    ebp,DWORD PTR [rdi+0x20]
  410829:	mov    DWORD PTR [rdx+0x14],eax
  41082c:	add    esi,ebp
  41082e:	mov    rbx,rdi
  410831:	mov    DWORD PTR [rdi+0x20],esi
  410834:	cmp    esi,DWORD PTR [rdi+0x24]
  410837:	jae    410850 <flatcc_builder_extend_vector@@Base+0x50>
  410839:	mov    rax,QWORD PTR [rbx+0x18]
  41083d:	add    rax,rbp
  410840:	add    rsp,0x8
  410844:	pop    rbx
  410845:	pop    rbp
  410846:	ret    
  410847:	nop    WORD PTR [rax+rax*1+0x0]
  410850:	inc    esi
  410852:	mov    edx,0xfffffffc
  410857:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  41085c:	test   eax,eax
  41085e:	je     410839 <flatcc_builder_extend_vector@@Base+0x39>
  410860:	xor    eax,eax
  410862:	jmp    410840 <flatcc_builder_extend_vector@@Base+0x40>
  410864:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  410869:	nop    DWORD PTR [rax+0x0]

0000000000410870 <flatcc_builder_vector_push@@Base>:
  410870:	endbr64 
  410874:	push   r13
  410876:	push   r12
  410878:	push   rbp
  410879:	push   rbx
  41087a:	sub    rsp,0x8
  41087e:	mov    rax,QWORD PTR [rdi+0x30]
  410882:	cmp    WORD PTR [rax+0xe],0x4
  410887:	jne    4108ed <flatcc_builder_vector_push@@Base+0x7d>
  410889:	mov    edx,DWORD PTR [rax+0x14]
  41088c:	cmp    edx,DWORD PTR [rax+0x18]
  41088f:	ja     41090c <flatcc_builder_vector_push@@Base+0x9c>
  410891:	mov    ebp,DWORD PTR [rdi+0x20]
  410894:	mov    r12d,DWORD PTR [rax+0x10]
  410898:	mov    rcx,rbp
  41089b:	inc    edx
  41089d:	add    ecx,r12d
  4108a0:	mov    DWORD PTR [rax+0x14],edx
  4108a3:	mov    rbx,rdi
  4108a6:	mov    r13,rsi
  4108a9:	mov    DWORD PTR [rdi+0x20],ecx
  4108ac:	cmp    ecx,DWORD PTR [rdi+0x24]
  4108af:	jae    4108d8 <flatcc_builder_vector_push@@Base+0x68>
  4108b1:	add    rbp,QWORD PTR [rbx+0x18]
  4108b5:	je     4108c5 <flatcc_builder_vector_push@@Base+0x55>
  4108b7:	mov    edx,r12d
  4108ba:	mov    rsi,r13
  4108bd:	mov    rdi,rbp
  4108c0:	call   4041f0 <memcpy@plt>
  4108c5:	add    rsp,0x8
  4108c9:	pop    rbx
  4108ca:	mov    rax,rbp
  4108cd:	pop    rbp
  4108ce:	pop    r12
  4108d0:	pop    r13
  4108d2:	ret    
  4108d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4108d8:	lea    esi,[rcx+0x1]
  4108db:	mov    edx,0xfffffffc
  4108e0:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  4108e5:	test   eax,eax
  4108e7:	je     4108b1 <flatcc_builder_vector_push@@Base+0x41>
  4108e9:	xor    ebp,ebp
  4108eb:	jmp    4108c5 <flatcc_builder_vector_push@@Base+0x55>
  4108ed:	lea    rcx,[rip+0x971c]        # 41a010 <_IO_stdin_used@@Base+0x4010>
  4108f4:	mov    edx,0x38b
  4108f9:	lea    rsi,[rip+0x8d90]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410900:	lea    rdi,[rip+0x8e69]        # 419770 <_IO_stdin_used@@Base+0x3770>
  410907:	call   4041a0 <__assert_fail@plt>
  41090c:	lea    rcx,[rip+0x96fd]        # 41a010 <_IO_stdin_used@@Base+0x4010>
  410913:	mov    edx,0x38c
  410918:	lea    rsi,[rip+0x8d71]        # 419690 <_IO_stdin_used@@Base+0x3690>
  41091f:	lea    rdi,[rip+0x8e7a]        # 4197a0 <_IO_stdin_used@@Base+0x37a0>
  410926:	call   4041a0 <__assert_fail@plt>
  41092b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410930 <flatcc_builder_append_vector@@Base>:
  410930:	endbr64 
  410934:	push   r13
  410936:	push   r12
  410938:	push   rbp
  410939:	push   rbx
  41093a:	sub    rsp,0x8
  41093e:	mov    rax,QWORD PTR [rdi+0x30]
  410942:	cmp    WORD PTR [rax+0xe],0x4
  410947:	jne    4109b6 <flatcc_builder_append_vector@@Base+0x86>
  410949:	mov    ecx,edx
  41094b:	mov    r13,rsi
  41094e:	xor    esi,esi
  410950:	add    ecx,DWORD PTR [rax+0x14]
  410953:	setb   sil
  410957:	cmp    DWORD PTR [rax+0x18],ecx
  41095a:	jb     4109d5 <flatcc_builder_append_vector@@Base+0xa5>
  41095c:	test   esi,esi
  41095e:	jne    4109d5 <flatcc_builder_append_vector@@Base+0xa5>
  410960:	mov    ebx,DWORD PTR [rax+0x10]
  410963:	mov    r12d,DWORD PTR [rdi+0x20]
  410967:	imul   ebx,edx
  41096a:	mov    rdx,r12
  41096d:	mov    DWORD PTR [rax+0x14],ecx
  410970:	add    edx,ebx
  410972:	mov    rbp,rdi
  410975:	mov    DWORD PTR [rdi+0x20],edx
  410978:	cmp    edx,DWORD PTR [rdi+0x24]
  41097b:	jae    4109a0 <flatcc_builder_append_vector@@Base+0x70>
  41097d:	add    r12,QWORD PTR [rbp+0x18]
  410981:	je     410990 <flatcc_builder_append_vector@@Base+0x60>
  410983:	mov    edx,ebx
  410985:	mov    rsi,r13
  410988:	mov    rdi,r12
  41098b:	call   4041f0 <memcpy@plt>
  410990:	add    rsp,0x8
  410994:	pop    rbx
  410995:	pop    rbp
  410996:	mov    rax,r12
  410999:	pop    r12
  41099b:	pop    r13
  41099d:	ret    
  41099e:	xchg   ax,ax
  4109a0:	lea    esi,[rdx+0x1]
  4109a3:	mov    edx,0xfffffffc
  4109a8:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  4109ad:	test   eax,eax
  4109af:	je     41097d <flatcc_builder_append_vector@@Base+0x4d>
  4109b1:	xor    r12d,r12d
  4109b4:	jmp    410990 <flatcc_builder_append_vector@@Base+0x60>
  4109b6:	lea    rcx,[rip+0x9633]        # 419ff0 <_IO_stdin_used@@Base+0x3ff0>
  4109bd:	mov    edx,0x393
  4109c2:	lea    rsi,[rip+0x8cc7]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4109c9:	lea    rdi,[rip+0x8da0]        # 419770 <_IO_stdin_used@@Base+0x3770>
  4109d0:	call   4041a0 <__assert_fail@plt>
  4109d5:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  4109da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004109e0 <flatcc_builder_extend_offset_vector@@Base>:
  4109e0:	endbr64 
  4109e4:	push   rbp
  4109e5:	mov    edx,esi
  4109e7:	push   rbx
  4109e8:	sub    rsp,0x8
  4109ec:	mov    rax,QWORD PTR [rdi+0x30]
  4109f0:	add    edx,DWORD PTR [rax+0x14]
  4109f3:	jb     410a35 <flatcc_builder_extend_offset_vector@@Base+0x55>
  4109f5:	cmp    edx,0x3fffffff
  4109fb:	ja     410a35 <flatcc_builder_extend_offset_vector@@Base+0x55>
  4109fd:	mov    ebp,DWORD PTR [rdi+0x20]
  410a00:	mov    DWORD PTR [rax+0x14],edx
  410a03:	lea    eax,[rbp+rsi*4+0x0]
  410a07:	mov    rbx,rdi
  410a0a:	mov    DWORD PTR [rdi+0x20],eax
  410a0d:	cmp    eax,DWORD PTR [rdi+0x24]
  410a10:	jae    410a20 <flatcc_builder_extend_offset_vector@@Base+0x40>
  410a12:	mov    rax,QWORD PTR [rbx+0x18]
  410a16:	add    rax,rbp
  410a19:	add    rsp,0x8
  410a1d:	pop    rbx
  410a1e:	pop    rbp
  410a1f:	ret    
  410a20:	lea    esi,[rax+0x1]
  410a23:	mov    edx,0xfffffffc
  410a28:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  410a2d:	test   eax,eax
  410a2f:	je     410a12 <flatcc_builder_extend_offset_vector@@Base+0x32>
  410a31:	xor    eax,eax
  410a33:	jmp    410a19 <flatcc_builder_extend_offset_vector@@Base+0x39>
  410a35:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  410a3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410a40 <flatcc_builder_offset_vector_push@@Base>:
  410a40:	endbr64 
  410a44:	push   r12
  410a46:	push   rbp
  410a47:	push   rbx
  410a48:	mov    rdx,QWORD PTR [rdi+0x30]
  410a4c:	cmp    WORD PTR [rdx+0xe],0x5
  410a51:	jne    410aa8 <flatcc_builder_offset_vector_push@@Base+0x68>
  410a53:	mov    eax,DWORD PTR [rdx+0x14]
  410a56:	cmp    eax,0x3fffffff
  410a5b:	je     410aa1 <flatcc_builder_offset_vector_push@@Base+0x61>
  410a5d:	mov    ebp,DWORD PTR [rdi+0x20]
  410a60:	inc    eax
  410a62:	mov    DWORD PTR [rdx+0x14],eax
  410a65:	lea    edx,[rbp+0x4]
  410a68:	mov    rbx,rdi
  410a6b:	mov    r12d,esi
  410a6e:	mov    DWORD PTR [rdi+0x20],edx
  410a71:	cmp    edx,DWORD PTR [rdi+0x24]
  410a74:	jae    410a90 <flatcc_builder_offset_vector_push@@Base+0x50>
  410a76:	mov    rax,rbp
  410a79:	add    rax,QWORD PTR [rbx+0x18]
  410a7d:	je     410a82 <flatcc_builder_offset_vector_push@@Base+0x42>
  410a7f:	mov    DWORD PTR [rax],r12d
  410a82:	pop    rbx
  410a83:	pop    rbp
  410a84:	pop    r12
  410a86:	ret    
  410a87:	nop    WORD PTR [rax+rax*1+0x0]
  410a90:	lea    esi,[rbp+0x5]
  410a93:	mov    edx,0xfffffffc
  410a98:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  410a9d:	test   eax,eax
  410a9f:	je     410a76 <flatcc_builder_offset_vector_push@@Base+0x36>
  410aa1:	pop    rbx
  410aa2:	pop    rbp
  410aa3:	xor    eax,eax
  410aa5:	pop    r12
  410aa7:	ret    
  410aa8:	lea    rcx,[rip+0x9511]        # 419fc0 <_IO_stdin_used@@Base+0x3fc0>
  410aaf:	mov    edx,0x3a6
  410ab4:	lea    rsi,[rip+0x8bd5]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410abb:	lea    rdi,[rip+0x8d1e]        # 4197e0 <_IO_stdin_used@@Base+0x37e0>
  410ac2:	call   4041a0 <__assert_fail@plt>
  410ac7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410ad0 <flatcc_builder_append_offset_vector@@Base>:
  410ad0:	endbr64 
  410ad4:	push   r13
  410ad6:	push   r12
  410ad8:	push   rbp
  410ad9:	push   rbx
  410ada:	sub    rsp,0x8
  410ade:	mov    rax,QWORD PTR [rdi+0x30]
  410ae2:	cmp    WORD PTR [rax+0xe],0x5
  410ae7:	jne    410b56 <flatcc_builder_append_offset_vector@@Base+0x86>
  410ae9:	mov    ecx,edx
  410aeb:	add    ecx,DWORD PTR [rax+0x14]
  410aee:	jb     410b75 <flatcc_builder_append_offset_vector@@Base+0xa5>
  410af4:	cmp    ecx,0x3fffffff
  410afa:	ja     410b75 <flatcc_builder_append_offset_vector@@Base+0xa5>
  410afc:	mov    r12d,DWORD PTR [rdi+0x20]
  410b00:	lea    ebx,[rdx*4+0x0]
  410b07:	mov    rdx,r12
  410b0a:	add    edx,ebx
  410b0c:	mov    DWORD PTR [rax+0x14],ecx
  410b0f:	mov    rbp,rdi
  410b12:	mov    r13,rsi
  410b15:	mov    DWORD PTR [rdi+0x20],edx
  410b18:	cmp    edx,DWORD PTR [rdi+0x24]
  410b1b:	jae    410b40 <flatcc_builder_append_offset_vector@@Base+0x70>
  410b1d:	add    r12,QWORD PTR [rbp+0x18]
  410b21:	je     410b30 <flatcc_builder_append_offset_vector@@Base+0x60>
  410b23:	mov    edx,ebx
  410b25:	mov    rsi,r13
  410b28:	mov    rdi,r12
  410b2b:	call   4041f0 <memcpy@plt>
  410b30:	add    rsp,0x8
  410b34:	pop    rbx
  410b35:	pop    rbp
  410b36:	mov    rax,r12
  410b39:	pop    r12
  410b3b:	pop    r13
  410b3d:	ret    
  410b3e:	xchg   ax,ax
  410b40:	lea    esi,[rdx+0x1]
  410b43:	mov    edx,0xfffffffc
  410b48:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  410b4d:	test   eax,eax
  410b4f:	je     410b1d <flatcc_builder_append_offset_vector@@Base+0x4d>
  410b51:	xor    r12d,r12d
  410b54:	jmp    410b30 <flatcc_builder_append_offset_vector@@Base+0x60>
  410b56:	lea    rcx,[rip+0x9423]        # 419f80 <_IO_stdin_used@@Base+0x3f80>
  410b5d:	mov    edx,0x3b4
  410b62:	lea    rsi,[rip+0x8b27]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410b69:	lea    rdi,[rip+0x8c70]        # 4197e0 <_IO_stdin_used@@Base+0x37e0>
  410b70:	call   4041a0 <__assert_fail@plt>
  410b75:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  410b7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410b80 <flatcc_builder_extend_string@@Base>:
  410b80:	endbr64 
  410b84:	push   rbp
  410b85:	push   rbx
  410b86:	sub    rsp,0x8
  410b8a:	mov    rax,QWORD PTR [rdi+0x30]
  410b8e:	cmp    WORD PTR [rax+0xe],0x6
  410b93:	jne    410bd9 <flatcc_builder_extend_string@@Base+0x59>
  410b95:	mov    edx,esi
  410b97:	add    edx,DWORD PTR [rax+0x14]
  410b9a:	jb     410bd4 <flatcc_builder_extend_string@@Base+0x54>
  410b9c:	mov    ebp,DWORD PTR [rdi+0x20]
  410b9f:	mov    DWORD PTR [rax+0x14],edx
  410ba2:	add    esi,ebp
  410ba4:	mov    rbx,rdi
  410ba7:	mov    DWORD PTR [rdi+0x20],esi
  410baa:	cmp    esi,DWORD PTR [rdi+0x24]
  410bad:	jae    410bc0 <flatcc_builder_extend_string@@Base+0x40>
  410baf:	mov    rax,QWORD PTR [rbx+0x18]
  410bb3:	add    rax,rbp
  410bb6:	add    rsp,0x8
  410bba:	pop    rbx
  410bbb:	pop    rbp
  410bbc:	ret    
  410bbd:	nop    DWORD PTR [rax]
  410bc0:	inc    esi
  410bc2:	mov    edx,0xfffffffc
  410bc7:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  410bcc:	test   eax,eax
  410bce:	je     410baf <flatcc_builder_extend_string@@Base+0x2f>
  410bd0:	xor    eax,eax
  410bd2:	jmp    410bb6 <flatcc_builder_extend_string@@Base+0x36>
  410bd4:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  410bd9:	lea    rcx,[rip+0x9370]        # 419f50 <_IO_stdin_used@@Base+0x3f50>
  410be0:	mov    edx,0x3bd
  410be5:	lea    rsi,[rip+0x8aa4]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410bec:	lea    rdi,[rip+0x8c25]        # 419818 <_IO_stdin_used@@Base+0x3818>
  410bf3:	call   4041a0 <__assert_fail@plt>
  410bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410c00 <flatcc_builder_append_string@@Base>:
  410c00:	endbr64 
  410c04:	push   r13
  410c06:	push   r12
  410c08:	push   rbp
  410c09:	push   rbx
  410c0a:	sub    rsp,0x8
  410c0e:	mov    rax,QWORD PTR [rdi+0x30]
  410c12:	cmp    WORD PTR [rax+0xe],0x6
  410c17:	jne    410c7b <flatcc_builder_append_string@@Base+0x7b>
  410c19:	mov    rbp,rdx
  410c1c:	add    edx,DWORD PTR [rax+0x14]
  410c1f:	jb     410c76 <flatcc_builder_append_string@@Base+0x76>
  410c21:	mov    r12d,DWORD PTR [rdi+0x20]
  410c25:	mov    DWORD PTR [rax+0x14],edx
  410c28:	mov    rdx,r12
  410c2b:	add    edx,ebp
  410c2d:	mov    rbx,rdi
  410c30:	mov    r13,rsi
  410c33:	mov    DWORD PTR [rdi+0x20],edx
  410c36:	cmp    edx,DWORD PTR [rdi+0x24]
  410c39:	jae    410c60 <flatcc_builder_append_string@@Base+0x60>
  410c3b:	add    r12,QWORD PTR [rbx+0x18]
  410c3f:	je     410c4e <flatcc_builder_append_string@@Base+0x4e>
  410c41:	mov    edx,ebp
  410c43:	mov    rsi,r13
  410c46:	mov    rdi,r12
  410c49:	call   4041f0 <memcpy@plt>
  410c4e:	add    rsp,0x8
  410c52:	pop    rbx
  410c53:	pop    rbp
  410c54:	mov    rax,r12
  410c57:	pop    r12
  410c59:	pop    r13
  410c5b:	ret    
  410c5c:	nop    DWORD PTR [rax+0x0]
  410c60:	lea    esi,[rdx+0x1]
  410c63:	mov    edx,0xfffffffc
  410c68:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  410c6d:	test   eax,eax
  410c6f:	je     410c3b <flatcc_builder_append_string@@Base+0x3b>
  410c71:	xor    r12d,r12d
  410c74:	jmp    410c4e <flatcc_builder_append_string@@Base+0x4e>
  410c76:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  410c7b:	lea    rcx,[rip+0x92ae]        # 419f30 <_IO_stdin_used@@Base+0x3f30>
  410c82:	mov    edx,0x3c6
  410c87:	lea    rsi,[rip+0x8a02]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410c8e:	lea    rdi,[rip+0x8b83]        # 419818 <_IO_stdin_used@@Base+0x3818>
  410c95:	call   4041a0 <__assert_fail@plt>
  410c9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410ca0 <flatcc_builder_append_string_str@@Base>:
  410ca0:	endbr64 
  410ca4:	push   rbp
  410ca5:	mov    rbp,rdi
  410ca8:	mov    rdi,rsi
  410cab:	push   rbx
  410cac:	mov    rbx,rsi
  410caf:	sub    rsp,0x8
  410cb3:	call   404170 <strlen@plt>
  410cb8:	add    rsp,0x8
  410cbc:	mov    rsi,rbx
  410cbf:	pop    rbx
  410cc0:	mov    rdi,rbp
  410cc3:	mov    rdx,rax
  410cc6:	pop    rbp
  410cc7:	jmp    410c00 <flatcc_builder_append_string@@Base>
  410ccc:	nop    DWORD PTR [rax+0x0]

0000000000410cd0 <flatcc_builder_append_string_strn@@Base>:
  410cd0:	endbr64 
  410cd4:	push   r12
  410cd6:	mov    r12,rdi
  410cd9:	push   rbp
  410cda:	mov    rbp,rsi
  410cdd:	mov    rdi,rbp
  410ce0:	push   rbx
  410ce1:	xor    esi,esi
  410ce3:	mov    rbx,rdx
  410ce6:	call   4041c0 <memchr@plt>
  410ceb:	mov    rdx,rax
  410cee:	sub    rdx,rbp
  410cf1:	test   rax,rax
  410cf4:	cmovne rbx,rdx
  410cf8:	mov    rsi,rbp
  410cfb:	mov    rdx,rbx
  410cfe:	pop    rbx
  410cff:	pop    rbp
  410d00:	mov    rdi,r12
  410d03:	pop    r12
  410d05:	jmp    410c00 <flatcc_builder_append_string@@Base>
  410d0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410d10 <flatcc_builder_truncate_vector@@Base>:
  410d10:	endbr64 
  410d14:	sub    rsp,0x8
  410d18:	mov    rax,QWORD PTR [rdi+0x30]
  410d1c:	cmp    WORD PTR [rax+0xe],0x4
  410d21:	jne    410d56 <flatcc_builder_truncate_vector@@Base+0x46>
  410d23:	mov    ecx,DWORD PTR [rax+0x14]
  410d26:	mov    rdx,rcx
  410d29:	cmp    rcx,rsi
  410d2c:	jb     410d75 <flatcc_builder_truncate_vector@@Base+0x65>
  410d2e:	sub    edx,esi
  410d30:	mov    DWORD PTR [rax+0x14],edx
  410d33:	imul   esi,DWORD PTR [rax+0x10]
  410d37:	mov    eax,DWORD PTR [rdi+0x20]
  410d3a:	mov    edx,esi
  410d3c:	sub    eax,esi
  410d3e:	mov    DWORD PTR [rdi+0x20],eax
  410d41:	add    rax,QWORD PTR [rdi+0x18]
  410d45:	mov    rdi,rax
  410d48:	xor    esi,esi
  410d4a:	call   4041b0 <memset@plt>
  410d4f:	xor    eax,eax
  410d51:	add    rsp,0x8
  410d55:	ret    
  410d56:	lea    rcx,[rip+0x91b3]        # 419f10 <_IO_stdin_used@@Base+0x3f10>
  410d5d:	mov    edx,0x3d9
  410d62:	lea    rsi,[rip+0x8927]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410d69:	lea    rdi,[rip+0x8a00]        # 419770 <_IO_stdin_used@@Base+0x3770>
  410d70:	call   4041a0 <__assert_fail@plt>
  410d75:	lea    rcx,[rip+0x9194]        # 419f10 <_IO_stdin_used@@Base+0x3f10>
  410d7c:	mov    edx,0x3da
  410d81:	lea    rsi,[rip+0x8908]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410d88:	lea    rdi,[rip+0x8ab9]        # 419848 <_IO_stdin_used@@Base+0x3848>
  410d8f:	call   4041a0 <__assert_fail@plt>
  410d94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410d9f:	nop

0000000000410da0 <flatcc_builder_truncate_offset_vector@@Base>:
  410da0:	endbr64 
  410da4:	sub    rsp,0x8
  410da8:	mov    rax,QWORD PTR [rdi+0x30]
  410dac:	cmp    WORD PTR [rax+0xe],0x5
  410db1:	jne    410de2 <flatcc_builder_truncate_offset_vector@@Base+0x42>
  410db3:	mov    edx,DWORD PTR [rax+0x14]
  410db6:	cmp    edx,esi
  410db8:	jb     410e01 <flatcc_builder_truncate_offset_vector@@Base+0x61>
  410dba:	sub    edx,esi
  410dbc:	mov    DWORD PTR [rax+0x14],edx
  410dbf:	imul   esi,DWORD PTR [rax+0x10]
  410dc3:	mov    eax,DWORD PTR [rdi+0x20]
  410dc6:	mov    edx,esi
  410dc8:	sub    eax,esi
  410dca:	mov    DWORD PTR [rdi+0x20],eax
  410dcd:	add    rax,QWORD PTR [rdi+0x18]
  410dd1:	mov    rdi,rax
  410dd4:	xor    esi,esi
  410dd6:	call   4041b0 <memset@plt>
  410ddb:	xor    eax,eax
  410ddd:	add    rsp,0x8
  410de1:	ret    
  410de2:	lea    rcx,[rip+0x90f7]        # 419ee0 <_IO_stdin_used@@Base+0x3ee0>
  410de9:	mov    edx,0x3e2
  410dee:	lea    rsi,[rip+0x889b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410df5:	lea    rdi,[rip+0x89e4]        # 4197e0 <_IO_stdin_used@@Base+0x37e0>
  410dfc:	call   4041a0 <__assert_fail@plt>
  410e01:	lea    rcx,[rip+0x90d8]        # 419ee0 <_IO_stdin_used@@Base+0x3ee0>
  410e08:	mov    edx,0x3e3
  410e0d:	lea    rsi,[rip+0x887c]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410e14:	lea    rdi,[rip+0x8a55]        # 419870 <_IO_stdin_used@@Base+0x3870>
  410e1b:	call   4041a0 <__assert_fail@plt>

0000000000410e20 <flatcc_builder_truncate_string@@Base>:
  410e20:	endbr64 
  410e24:	sub    rsp,0x8
  410e28:	mov    rdx,QWORD PTR [rdi+0x30]
  410e2c:	cmp    WORD PTR [rdx+0xe],0x6
  410e31:	jne    410e63 <flatcc_builder_truncate_string@@Base+0x43>
  410e33:	mov    ecx,DWORD PTR [rdx+0x14]
  410e36:	mov    rax,rcx
  410e39:	cmp    rcx,rsi
  410e3c:	jb     410e82 <flatcc_builder_truncate_string@@Base+0x62>
  410e3e:	sub    eax,esi
  410e40:	mov    DWORD PTR [rdx+0x14],eax
  410e43:	mov    rdx,rsi
  410e46:	mov    eax,DWORD PTR [rdi+0x20]
  410e49:	sub    eax,esi
  410e4b:	mov    DWORD PTR [rdi+0x20],eax
  410e4e:	add    rax,QWORD PTR [rdi+0x18]
  410e52:	mov    rdi,rax
  410e55:	xor    esi,esi
  410e57:	call   4041b0 <memset@plt>
  410e5c:	xor    eax,eax
  410e5e:	add    rsp,0x8
  410e62:	ret    
  410e63:	lea    rcx,[rip+0x9056]        # 419ec0 <_IO_stdin_used@@Base+0x3ec0>
  410e6a:	mov    edx,0x3eb
  410e6f:	lea    rsi,[rip+0x881a]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410e76:	lea    rdi,[rip+0x899b]        # 419818 <_IO_stdin_used@@Base+0x3818>
  410e7d:	call   4041a0 <__assert_fail@plt>
  410e82:	lea    rcx,[rip+0x9037]        # 419ec0 <_IO_stdin_used@@Base+0x3ec0>
  410e89:	mov    edx,0x3ec
  410e8e:	lea    rsi,[rip+0x87fb]        # 419690 <_IO_stdin_used@@Base+0x3690>
  410e95:	lea    rdi,[rip+0x8a14]        # 4198b0 <_IO_stdin_used@@Base+0x38b0>
  410e9c:	call   4041a0 <__assert_fail@plt>
  410ea1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410eac:	nop    DWORD PTR [rax+0x0]

0000000000410eb0 <flatcc_builder_start_vector@@Base>:
  410eb0:	endbr64 
  410eb4:	push   r12
  410eb6:	cmp    dx,0x4
  410eba:	mov    r12,rcx
  410ebd:	push   rbp
  410ebe:	mov    rbp,rsi
  410ec1:	mov    esi,0x4
  410ec6:	push   rbx
  410ec7:	cmovae esi,edx
  410eca:	mov    rbx,rdi
  410ecd:	movzx  esi,si
  410ed0:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  410ed5:	test   eax,eax
  410ed7:	jne    410f20 <flatcc_builder_start_vector@@Base+0x70>
  410ed9:	mov    rsi,QWORD PTR [rbx+0x30]
  410edd:	mov    edx,0x4
  410ee2:	mov    WORD PTR [rsi+0xe],dx
  410ee6:	mov    edx,DWORD PTR [rbx+0x28]
  410ee9:	mov    DWORD PTR [rsi+0x10],ebp
  410eec:	mov    rcx,rdx
  410eef:	add    rdx,QWORD PTR [rbx+0x68]
  410ef3:	mov    DWORD PTR [rsi+0x14],0x0
  410efa:	mov    DWORD PTR [rsi+0x18],r12d
  410efe:	mov    QWORD PTR [rbx+0x18],rdx
  410f02:	mov    edx,DWORD PTR [rbx+0x70]
  410f05:	sub    edx,ecx
  410f07:	mov    ecx,0xfffffffc
  410f0c:	cmp    edx,ecx
  410f0e:	cmova  edx,ecx
  410f11:	mov    DWORD PTR [rbx+0x24],edx
  410f14:	mov    DWORD PTR [rsi+0x4],ecx
  410f17:	pop    rbx
  410f18:	pop    rbp
  410f19:	pop    r12
  410f1b:	ret    
  410f1c:	nop    DWORD PTR [rax+0x0]
  410f20:	mov    eax,0xffffffff
  410f25:	jmp    410f17 <flatcc_builder_start_vector@@Base+0x67>
  410f27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410f30 <flatcc_builder_start_offset_vector@@Base>:
  410f30:	endbr64 
  410f34:	push   rbx
  410f35:	mov    esi,0x4
  410f3a:	mov    rbx,rdi
  410f3d:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  410f42:	test   eax,eax
  410f44:	jne    410f80 <flatcc_builder_start_offset_vector@@Base+0x50>
  410f46:	mov    rcx,QWORD PTR [rbx+0x30]
  410f4a:	xor    edx,edx
  410f4c:	mov    QWORD PTR [rcx+0xe],0x40005
  410f54:	mov    WORD PTR [rcx+0x16],dx
  410f58:	mov    edx,DWORD PTR [rbx+0x28]
  410f5b:	mov    rsi,rdx
  410f5e:	add    rdx,QWORD PTR [rbx+0x68]
  410f62:	mov    QWORD PTR [rbx+0x18],rdx
  410f66:	mov    edx,DWORD PTR [rbx+0x70]
  410f69:	sub    edx,esi
  410f6b:	mov    esi,0xfffffffc
  410f70:	cmp    edx,esi
  410f72:	cmova  edx,esi
  410f75:	mov    DWORD PTR [rbx+0x24],edx
  410f78:	mov    DWORD PTR [rcx+0x4],esi
  410f7b:	pop    rbx
  410f7c:	ret    
  410f7d:	nop    DWORD PTR [rax]
  410f80:	mov    eax,0xffffffff
  410f85:	pop    rbx
  410f86:	ret    
  410f87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410f90 <flatcc_builder_start_string@@Base>:
  410f90:	endbr64 
  410f94:	push   rbx
  410f95:	mov    esi,0x1
  410f9a:	mov    rbx,rdi
  410f9d:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  410fa2:	test   eax,eax
  410fa4:	jne    410fe0 <flatcc_builder_start_string@@Base+0x50>
  410fa6:	mov    rcx,QWORD PTR [rbx+0x30]
  410faa:	xor    edx,edx
  410fac:	mov    QWORD PTR [rcx+0xe],0x10006
  410fb4:	mov    WORD PTR [rcx+0x16],dx
  410fb8:	mov    edx,DWORD PTR [rbx+0x28]
  410fbb:	mov    rsi,rdx
  410fbe:	add    rdx,QWORD PTR [rbx+0x68]
  410fc2:	mov    QWORD PTR [rbx+0x18],rdx
  410fc6:	mov    edx,DWORD PTR [rbx+0x70]
  410fc9:	sub    edx,esi
  410fcb:	mov    esi,0xfffffffc
  410fd0:	cmp    edx,esi
  410fd2:	cmova  edx,esi
  410fd5:	mov    DWORD PTR [rbx+0x24],edx
  410fd8:	mov    DWORD PTR [rcx+0x4],esi
  410fdb:	pop    rbx
  410fdc:	ret    
  410fdd:	nop    DWORD PTR [rax]
  410fe0:	mov    eax,0xffffffff
  410fe5:	pop    rbx
  410fe6:	ret    
  410fe7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410ff0 <flatcc_builder_reserve_table@@Base>:
  410ff0:	endbr64 
  410ff4:	push   r12
  410ff6:	push   rbp
  410ff7:	push   rbx
  410ff8:	test   esi,esi
  410ffa:	js     4110af <flatcc_builder_reserve_table@@Base+0xbf>
  411000:	mov    rax,QWORD PTR [rdi+0x30]
  411004:	lea    r12d,[rsi+rsi*1+0x4]
  411009:	movzx  edx,WORD PTR [rax+0x1c]
  41100d:	mov    eax,DWORD PTR [rax+0x10]
  411010:	mov    rbx,rdi
  411013:	lea    ebp,[rax+rdx*2]
  411016:	mov    edx,r12d
  411019:	add    rdx,rbp
  41101c:	cmp    rdx,QWORD PTR [rdi+0x60]
  411020:	ja     411060 <flatcc_builder_reserve_table@@Base+0x70>
  411022:	add    rbp,QWORD PTR [rbx+0x58]
  411026:	je     4110a0 <flatcc_builder_reserve_table@@Base+0xb0>
  411028:	mov    rax,QWORD PTR [rbx+0x30]
  41102c:	add    rbp,0x4
  411030:	mov    QWORD PTR [rbx+0x8],rbp
  411034:	mov    ebp,DWORD PTR [rax+0x14]
  411037:	lea    edx,[r12-0x3]
  41103c:	add    rdx,rbp
  41103f:	cmp    rdx,QWORD PTR [rbx+0x90]
  411046:	ja     411080 <flatcc_builder_reserve_table@@Base+0x90>
  411048:	add    rbp,QWORD PTR [rbx+0x88]
  41104f:	sete   al
  411052:	mov    QWORD PTR [rbx],rbp
  411055:	movzx  eax,al
  411058:	neg    eax
  41105a:	pop    rbx
  41105b:	pop    rbp
  41105c:	pop    r12
  41105e:	ret    
  41105f:	nop
  411060:	lea    rsi,[rdi+0x58]
  411064:	mov    rdi,QWORD PTR [rdi+0x40]
  411068:	xor    r8d,r8d
  41106b:	mov    ecx,0x1
  411070:	call   QWORD PTR [rbx+0x50]
  411073:	test   eax,eax
  411075:	je     411022 <flatcc_builder_reserve_table@@Base+0x32>
  411077:	call   40f470 <flatcc_builder_default_alloc@@Base+0x130>
  41107c:	nop    DWORD PTR [rax+0x0]
  411080:	mov    rdi,QWORD PTR [rbx+0x40]
  411084:	xor    ecx,ecx
  411086:	lea    rsi,[rbx+0x88]
  41108d:	mov    r8d,0x3
  411093:	call   QWORD PTR [rbx+0x50]
  411096:	test   eax,eax
  411098:	je     411048 <flatcc_builder_reserve_table@@Base+0x58>
  41109a:	jmp    411077 <flatcc_builder_reserve_table@@Base+0x87>
  41109c:	nop    DWORD PTR [rax+0x0]
  4110a0:	mov    QWORD PTR [rbx+0x8],0x0
  4110a8:	mov    eax,0xffffffff
  4110ad:	jmp    41105a <flatcc_builder_reserve_table@@Base+0x6a>
  4110af:	lea    rcx,[rip+0x8dea]        # 419ea0 <_IO_stdin_used@@Base+0x3ea0>
  4110b6:	mov    edx,0x429
  4110bb:	lea    rsi,[rip+0x85ce]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4110c2:	lea    rdi,[rip+0x89ba]        # 419a83 <_IO_stdin_used@@Base+0x3a83>
  4110c9:	call   4041a0 <__assert_fail@plt>
  4110ce:	xchg   ax,ax

00000000004110d0 <flatcc_builder_start_table@@Base>:
  4110d0:	endbr64 
  4110d4:	push   r13
  4110d6:	push   r12
  4110d8:	mov    r12d,esi
  4110db:	mov    esi,0x4
  4110e0:	push   rbp
  4110e1:	push   rbx
  4110e2:	mov    rbx,rdi
  4110e5:	sub    rsp,0x8
  4110e9:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  4110ee:	test   eax,eax
  4110f0:	jne    411208 <flatcc_builder_start_table@@Base+0x138>
  4110f6:	mov    rsi,QWORD PTR [rbx]
  4110f9:	mov    rdx,QWORD PTR [rbx+0x30]
  4110fd:	sub    rsi,QWORD PTR [rbx+0x88]
  411104:	mov    rcx,QWORD PTR [rbx+0x8]
  411108:	mov    ebp,eax
  41110a:	mov    rax,QWORD PTR [rbx+0x58]
  41110e:	mov    DWORD PTR [rdx+0x14],esi
  411111:	mov    esi,DWORD PTR [rbx+0x14]
  411114:	sub    rcx,rax
  411117:	mov    DWORD PTR [rdx+0x18],esi
  41111a:	movzx  esi,WORD PTR [rbx+0x10]
  41111e:	xor    edi,edi
  411120:	mov    r8d,0x3
  411126:	mov    DWORD PTR [rdx+0x10],ecx
  411129:	mov    WORD PTR [rdx+0x1c],si
  41112d:	lea    r13d,[rcx+rsi*2]
  411131:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  411138:	mov    WORD PTR [rbx+0x10],di
  41113c:	mov    WORD PTR [rdx+0xe],r8w
  411141:	lea    edx,[r12+r12*1+0x4]
  411146:	add    rdx,r13
  411149:	cmp    rdx,QWORD PTR [rbx+0x60]
  41114d:	jbe    41116e <flatcc_builder_start_table@@Base+0x9e>
  41114f:	mov    rdi,QWORD PTR [rbx+0x40]
  411153:	xor    r8d,r8d
  411156:	lea    rsi,[rbx+0x58]
  41115a:	mov    ecx,0x1
  41115f:	call   QWORD PTR [rbx+0x50]
  411162:	test   eax,eax
  411164:	jne    4111fa <flatcc_builder_start_table@@Base+0x12a>
  41116a:	mov    rax,QWORD PTR [rbx+0x58]
  41116e:	add    rax,r13
  411171:	je     411200 <flatcc_builder_start_table@@Base+0x130>
  411177:	add    rax,0x4
  41117b:	mov    QWORD PTR [rbx+0x8],rax
  41117f:	mov    rax,QWORD PTR [rbx+0x30]
  411183:	lea    edx,[r12+r12*1+0x1]
  411188:	mov    r13d,DWORD PTR [rax+0x14]
  41118c:	add    rdx,r13
  41118f:	cmp    rdx,QWORD PTR [rbx+0x90]
  411196:	ja     4111e0 <flatcc_builder_start_table@@Base+0x110>
  411198:	add    r13,QWORD PTR [rbx+0x88]
  41119f:	mov    QWORD PTR [rbx],r13
  4111a2:	je     411208 <flatcc_builder_start_table@@Base+0x138>
  4111a4:	mov    eax,DWORD PTR [rbx+0x28]
  4111a7:	mov    rdx,rax
  4111aa:	add    rax,QWORD PTR [rbx+0x68]
  4111ae:	mov    QWORD PTR [rbx+0x18],rax
  4111b2:	mov    eax,DWORD PTR [rbx+0x70]
  4111b5:	sub    eax,edx
  4111b7:	cmp    eax,0xfffc
  4111bc:	mov    edx,0xfffc
  4111c1:	cmova  eax,edx
  4111c4:	mov    DWORD PTR [rbx+0x24],eax
  4111c7:	mov    rax,QWORD PTR [rbx+0x30]
  4111cb:	mov    DWORD PTR [rax+0x4],0xfffc
  4111d2:	add    rsp,0x8
  4111d6:	pop    rbx
  4111d7:	mov    eax,ebp
  4111d9:	pop    rbp
  4111da:	pop    r12
  4111dc:	pop    r13
  4111de:	ret    
  4111df:	nop
  4111e0:	mov    rdi,QWORD PTR [rbx+0x40]
  4111e4:	xor    ecx,ecx
  4111e6:	lea    rsi,[rbx+0x88]
  4111ed:	mov    r8d,0x3
  4111f3:	call   QWORD PTR [rbx+0x50]
  4111f6:	test   eax,eax
  4111f8:	je     411198 <flatcc_builder_start_table@@Base+0xc8>
  4111fa:	call   40f470 <flatcc_builder_default_alloc@@Base+0x130>
  4111ff:	nop
  411200:	mov    QWORD PTR [rbx+0x8],0x0
  411208:	mov    ebp,0xffffffff
  41120d:	jmp    4111d2 <flatcc_builder_start_table@@Base+0x102>
  41120f:	nop

0000000000411210 <flatcc_builder_create_vtable@@Base>:
  411210:	endbr64 
  411214:	push   rbp
  411215:	mov    rbp,rdi
  411218:	push   rbx
  411219:	sub    rsp,0xa8
  411220:	mov    rax,QWORD PTR fs:0x28
  411229:	mov    QWORD PTR [rsp+0x98],rax
  411231:	xor    eax,eax
  411233:	mov    QWORD PTR [rsp],0x0
  41123b:	mov    DWORD PTR [rsp+0x8],0x0
  411243:	mov    eax,DWORD PTR [rdi+0x100]
  411249:	test   dx,dx
  41124c:	je     4112d0 <flatcc_builder_create_vtable@@Base+0xc0>
  411252:	movzx  r8d,dx
  411256:	mov    QWORD PTR [rsp],r8
  41125a:	mov    QWORD PTR [rsp+0x10],rsi
  41125f:	mov    QWORD PTR [rsp+0x18],r8
  411264:	mov    DWORD PTR [rsp+0x8],0x1
  41126c:	movzx  edx,dx
  41126f:	test   eax,eax
  411271:	je     411300 <flatcc_builder_create_vtable@@Base+0xf0>
  411277:	mov    eax,DWORD PTR [rbp+0xf0]
  41127d:	mov    ebx,eax
  41127f:	sub    ebx,edx
  411281:	cmp    eax,ebx
  411283:	jle    4112de <flatcc_builder_create_vtable@@Base+0xce>
  411285:	mov    rdi,QWORD PTR [rbp+0x38]
  411289:	mov    edx,DWORD PTR [rsp+0x8]
  41128d:	lea    rsi,[rsp+0x10]
  411292:	mov    ecx,ebx
  411294:	call   QWORD PTR [rbp+0x48]
  411297:	test   eax,eax
  411299:	jne    411350 <flatcc_builder_create_vtable@@Base+0x140>
  41129f:	cmp    ebx,0x1
  4112a2:	mov    DWORD PTR [rbp+0xf0],ebx
  4112a8:	sbb    ebx,0xffffffff
  4112ab:	mov    rcx,QWORD PTR [rsp+0x98]
  4112b3:	xor    rcx,QWORD PTR fs:0x28
  4112bc:	mov    eax,ebx
  4112be:	jne    41134b <flatcc_builder_create_vtable@@Base+0x13b>
  4112c4:	add    rsp,0xa8
  4112cb:	pop    rbx
  4112cc:	pop    rbp
  4112cd:	ret    
  4112ce:	xchg   ax,ax
  4112d0:	test   eax,eax
  4112d2:	jne    4112de <flatcc_builder_create_vtable@@Base+0xce>
  4112d4:	mov    eax,DWORD PTR [rdi+0x124]
  4112da:	test   eax,eax
  4112dc:	je     411340 <flatcc_builder_create_vtable@@Base+0x130>
  4112de:	lea    rcx,[rip+0x8deb]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  4112e5:	mov    edx,0x287
  4112ea:	lea    rsi,[rip+0x839f]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4112f1:	lea    rdi,[rip+0x872f]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  4112f8:	call   4041a0 <__assert_fail@plt>
  4112fd:	nop    DWORD PTR [rax]
  411300:	mov    ecx,DWORD PTR [rdi+0x124]
  411306:	test   ecx,ecx
  411308:	jne    411277 <flatcc_builder_create_vtable@@Base+0x67>
  41130e:	mov    ebx,DWORD PTR [rdi+0xf4]
  411314:	add    edx,ebx
  411316:	mov    DWORD PTR [rdi+0xf4],edx
  41131c:	mov    rdi,QWORD PTR [rbp+0x38]
  411320:	mov    edx,DWORD PTR [rsp+0x8]
  411324:	lea    rsi,[rsp+0x10]
  411329:	mov    ecx,ebx
  41132b:	call   QWORD PTR [rbp+0x48]
  41132e:	test   eax,eax
  411330:	jne    411355 <flatcc_builder_create_vtable@@Base+0x145>
  411332:	inc    ebx
  411334:	jmp    4112ab <flatcc_builder_create_vtable@@Base+0x9b>
  411339:	nop    DWORD PTR [rax+0x0]
  411340:	mov    ebx,DWORD PTR [rbp+0xf4]
  411346:	xor    r8d,r8d
  411349:	jmp    41131c <flatcc_builder_create_vtable@@Base+0x10c>
  41134b:	call   404180 <__stack_chk_fail@plt>
  411350:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  411355:	call   40f4a0 <flatcc_builder_default_alloc@@Base+0x160>
  41135a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000411360 <flatcc_builder_create_cached_vtable@@Base>:
  411360:	endbr64 
  411364:	push   r15
  411366:	mov    r15,rdi
  411369:	push   r14
  41136b:	push   r13
  41136d:	push   r12
  41136f:	movzx  r12d,dx
  411373:	push   rbp
  411374:	mov    ebp,ecx
  411376:	push   rbx
  411377:	sub    rsp,0x38
  41137b:	mov    rbx,QWORD PTR [rdi+0xd8]
  411382:	mov    QWORD PTR [rsp+0x18],rsi
  411387:	mov    DWORD PTR [rsp+0x2c],edx
  41138b:	test   rbx,rbx
  41138e:	je     411528 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
  411394:	mov    eax,0x20
  411399:	sub    eax,ebx
  41139b:	shrx   ebp,ebp,eax
  4113a0:	mov    rax,QWORD PTR [r15+0xa8]
  4113a7:	lea    r14,[rax+rbp*4]
  4113ab:	test   r14,r14
  4113ae:	je     411510 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  4113b4:	mov    ebp,DWORD PTR [r14]
  4113b7:	test   ebp,ebp
  4113b9:	je     411600 <flatcc_builder_create_cached_vtable@@Base+0x2a0>
  4113bf:	mov    QWORD PTR [rsp+0x20],0x0
  4113c8:	mov    r11,QWORD PTR [r15+0xb8]
  4113cf:	mov    r8,QWORD PTR [r15+0x78]
  4113d3:	mov    r13,r14
  4113d6:	mov    ebx,ebp
  4113d8:	add    rbx,r11
  4113db:	mov    esi,DWORD PTR [rbx+0x8]
  4113de:	add    rsi,r8
  4113e1:	cmp    WORD PTR [rsi],r12w
  4113e5:	jne    4114d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
  4113eb:	mov    rdi,QWORD PTR [rsp+0x18]
  4113f0:	movzx  edx,r12w
  4113f4:	mov    QWORD PTR [rsp+0x10],r8
  4113f9:	mov    QWORD PTR [rsp+0x8],r11
  4113fe:	call   4041d0 <memcmp@plt>
  411403:	test   eax,eax
  411405:	mov    r11,QWORD PTR [rsp+0x8]
  41140a:	mov    r8,QWORD PTR [rsp+0x10]
  41140f:	jne    4114d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
  411415:	mov    eax,DWORD PTR [r15+0x100]
  41141c:	cmp    DWORD PTR [rbx+0x4],eax
  41141f:	je     4114e0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  411425:	mov    QWORD PTR [rsp+0x20],rbx
  41142a:	mov    ebp,DWORD PTR [rbx+0xc]
  41142d:	lea    r13,[rbx+0xc]
  411431:	test   ebp,ebp
  411433:	jne    4113d6 <flatcc_builder_create_cached_vtable@@Base+0x76>
  411435:	mov    ebp,DWORD PTR [r15+0xe4]
  41143c:	lea    rdx,[rbp+0x10]
  411440:	cmp    rdx,QWORD PTR [r15+0xc0]
  411447:	jbe    411468 <flatcc_builder_create_cached_vtable@@Base+0x108>
  411449:	mov    rdi,QWORD PTR [r15+0x40]
  41144d:	xor    ecx,ecx
  41144f:	lea    rsi,[r15+0xb8]
  411456:	mov    r8d,0x6
  41145c:	call   QWORD PTR [r15+0x50]
  411460:	test   eax,eax
  411462:	jne    4115f4 <flatcc_builder_create_cached_vtable@@Base+0x294>
  411468:	add    rbp,QWORD PTR [r15+0xb8]
  41146f:	je     411510 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  411475:	mov    eax,DWORD PTR [r15+0xe4]
  41147c:	mov    rsi,QWORD PTR [rsp+0x18]
  411481:	lea    edx,[rax+0x10]
  411484:	mov    DWORD PTR [r15+0xe4],edx
  41148b:	mov    edx,DWORD PTR [r15+0x100]
  411492:	mov    rdi,r15
  411495:	mov    DWORD PTR [rbp+0x4],edx
  411498:	mov    edx,DWORD PTR [r14]
  41149b:	mov    DWORD PTR [rbp+0xc],edx
  41149e:	mov    DWORD PTR [r14],eax
  4114a1:	mov    eax,DWORD PTR [rsp+0x2c]
  4114a5:	movzx  edx,ax
  4114a8:	movzx  ebx,ax
  4114ab:	call   411210 <flatcc_builder_create_vtable@@Base>
  4114b0:	mov    DWORD PTR [rbp+0x0],eax
  4114b3:	test   eax,eax
  4114b5:	je     411510 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  4114b7:	mov    rdi,QWORD PTR [rsp+0x20]
  4114bc:	test   rdi,rdi
  4114bf:	je     411615 <flatcc_builder_create_cached_vtable@@Base+0x2b5>
  4114c5:	mov    edx,DWORD PTR [rdi+0x8]
  4114c8:	mov    DWORD PTR [rbp+0x8],edx
  4114cb:	jmp    4114f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  4114cd:	nop    DWORD PTR [rax]
  4114d0:	lea    r13,[rbx+0xc]
  4114d4:	mov    ebp,DWORD PTR [rbx+0xc]
  4114d7:	jmp    411431 <flatcc_builder_create_cached_vtable@@Base+0xd1>
  4114dc:	nop    DWORD PTR [rax+0x0]
  4114e0:	cmp    r14,r13
  4114e3:	je     4114f5 <flatcc_builder_create_cached_vtable@@Base+0x195>
  4114e5:	mov    eax,DWORD PTR [rbx+0xc]
  4114e8:	mov    DWORD PTR [r13+0x0],eax
  4114ec:	mov    eax,DWORD PTR [r14]
  4114ef:	mov    DWORD PTR [rbx+0xc],eax
  4114f2:	mov    DWORD PTR [r14],ebp
  4114f5:	mov    eax,DWORD PTR [rbx]
  4114f7:	add    rsp,0x38
  4114fb:	pop    rbx
  4114fc:	pop    rbp
  4114fd:	pop    r12
  4114ff:	pop    r13
  411501:	pop    r14
  411503:	pop    r15
  411505:	ret    
  411506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411510:	add    rsp,0x38
  411514:	pop    rbx
  411515:	pop    rbp
  411516:	pop    r12
  411518:	pop    r13
  41151a:	pop    r14
  41151c:	xor    eax,eax
  41151e:	pop    r15
  411520:	ret    
  411521:	nop    DWORD PTR [rax+0x0]
  411528:	mov    eax,DWORD PTR [rdi+0xe4]
  41152e:	lea    r13,[rdi+0xa8]
  411535:	test   eax,eax
  411537:	jne    41169f <flatcc_builder_create_cached_vtable@@Base+0x33f>
  41153d:	cmp    QWORD PTR [rdi+0xc0],0xf
  411545:	jbe    4115d0 <flatcc_builder_create_cached_vtable@@Base+0x270>
  41154b:	cmp    QWORD PTR [r15+0xb8],0x0
  411553:	je     411510 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  411555:	mov    DWORD PTR [r15+0xe4],0x10
  411560:	mov    rdi,QWORD PTR [r15+0x40]
  411564:	mov    r8d,0x5
  41156a:	mov    ecx,0x1
  41156f:	mov    edx,0x100
  411574:	mov    rsi,r13
  411577:	call   QWORD PTR [r15+0x50]
  41157b:	test   eax,eax
  41157d:	jne    411510 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  41157f:	mov    rcx,QWORD PTR [r15+0xb0]
  411586:	mov    eax,0x100
  41158b:	jmp    411593 <flatcc_builder_create_cached_vtable@@Base+0x233>
  41158d:	nop    DWORD PTR [rax]
  411590:	mov    rax,rdx
  411593:	lea    rdx,[rax+rax*1]
  411597:	cmp    rdx,rcx
  41159a:	jbe    411590 <flatcc_builder_create_cached_vtable@@Base+0x230>
  41159c:	shr    rax,0x2
  4115a0:	cmp    rax,0x1
  4115a4:	jbe    41160e <flatcc_builder_create_cached_vtable@@Base+0x2ae>
  4115a6:	mov    esi,0x1
  4115ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4115b0:	inc    rbx
  4115b3:	shlx   rdx,rsi,rbx
  4115b8:	cmp    rax,rdx
  4115bb:	ja     4115b0 <flatcc_builder_create_cached_vtable@@Base+0x250>
  4115bd:	mov    eax,0x20
  4115c2:	sub    eax,ebx
  4115c4:	mov    QWORD PTR [r15+0xd8],rbx
  4115cb:	jmp    41139b <flatcc_builder_create_cached_vtable@@Base+0x3b>
  4115d0:	lea    rsi,[rdi+0xb8]
  4115d7:	mov    rdi,QWORD PTR [rdi+0x40]
  4115db:	xor    ecx,ecx
  4115dd:	mov    r8d,0x6
  4115e3:	mov    edx,0x10
  4115e8:	call   QWORD PTR [r15+0x50]
  4115ec:	test   eax,eax
  4115ee:	je     41154b <flatcc_builder_create_cached_vtable@@Base+0x1eb>
  4115f4:	call   40f470 <flatcc_builder_default_alloc@@Base+0x130>
  4115f9:	nop    DWORD PTR [rax+0x0]
  411600:	mov    QWORD PTR [rsp+0x20],0x0
  411609:	jmp    411435 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  41160e:	mov    eax,0x20
  411613:	jmp    4115c4 <flatcc_builder_create_cached_vtable@@Base+0x264>
  411615:	mov    rax,QWORD PTR [r15+0x118]
  41161c:	mov    r14d,DWORD PTR [r15+0xe0]
  411623:	test   rax,rax
  411626:	je     411631 <flatcc_builder_create_cached_vtable@@Base+0x2d1>
  411628:	lea    edx,[rbx+r14*1]
  41162c:	cmp    rax,rdx
  41162f:	jb     411687 <flatcc_builder_create_cached_vtable@@Base+0x327>
  411631:	lea    rdx,[r12+r14*1]
  411635:	cmp    rdx,QWORD PTR [r15+0x80]
  41163c:	jbe    411656 <flatcc_builder_create_cached_vtable@@Base+0x2f6>
  41163e:	mov    rdi,QWORD PTR [r15+0x40]
  411642:	xor    ecx,ecx
  411644:	lea    rsi,[r15+0x78]
  411648:	mov    r8d,0x2
  41164e:	call   QWORD PTR [r15+0x50]
  411652:	test   eax,eax
  411654:	jne    4115f4 <flatcc_builder_create_cached_vtable@@Base+0x294>
  411656:	mov    rdi,r14
  411659:	add    rdi,QWORD PTR [r15+0x78]
  41165d:	je     411697 <flatcc_builder_create_cached_vtable@@Base+0x337>
  41165f:	mov    eax,DWORD PTR [r15+0xe0]
  411666:	mov    rsi,QWORD PTR [rsp+0x18]
  41166b:	add    ebx,eax
  41166d:	mov    DWORD PTR [rbp+0x8],eax
  411670:	mov    DWORD PTR [r15+0xe0],ebx
  411677:	mov    rdx,r12
  41167a:	call   4041f0 <memcpy@plt>
  41167f:	mov    eax,DWORD PTR [rbp+0x0]
  411682:	jmp    4114f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  411687:	mov    rdi,r15
  41168a:	call   40f9c0 <flatcc_builder_flush_vtable_cache@@Base>
  41168f:	mov    eax,DWORD PTR [rbp+0x0]
  411692:	jmp    4114f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  411697:	or     eax,0xffffffff
  41169a:	jmp    4114f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  41169f:	lea    rcx,[rip+0x87ea]        # 419e90 <_IO_stdin_used@@Base+0x3e90>
  4116a6:	mov    edx,0x156
  4116ab:	lea    rsi,[rip+0x7fde]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4116b2:	lea    rdi,[rip+0x83b4]        # 419a6d <_IO_stdin_used@@Base+0x3a6d>
  4116b9:	call   4041a0 <__assert_fail@plt>
  4116be:	xchg   ax,ax

00000000004116c0 <flatcc_builder_create_table@@Base>:
  4116c0:	endbr64 
  4116c4:	push   rbp
  4116c5:	push   rbx
  4116c6:	mov    rbx,rdi
  4116c9:	sub    rsp,0xb8
  4116d0:	mov    edi,DWORD PTR [rsp+0xd0]
  4116d7:	mov    rax,QWORD PTR fs:0x28
  4116e0:	mov    QWORD PTR [rsp+0xa8],rax
  4116e8:	xor    eax,eax
  4116ea:	test   r9d,r9d
  4116ed:	js     4118af <flatcc_builder_create_table@@Base+0x1ef>
  4116f3:	test   dil,0x1
  4116f7:	je     41188b <flatcc_builder_create_table@@Base+0x1cb>
  4116fd:	cmp    cx,0x4
  411701:	mov    eax,0x4
  411706:	cmovb  ecx,eax
  411709:	movzx  r11d,cx
  41170d:	cmp    WORD PTR [rbx+0xe8],cx
  411714:	jb     411860 <flatcc_builder_create_table@@Base+0x1a0>
  41171a:	mov    eax,DWORD PTR [rbx+0xf0]
  411720:	lea    ecx,[r11-0x1]
  411724:	mov    r10d,eax
  411727:	sub    r10d,edx
  41172a:	and    r10d,ecx
  41172d:	mov    ecx,eax
  41172f:	sub    ecx,edx
  411731:	lea    r11d,[rcx-0x4]
  411735:	dec    edi
  411737:	mov    ecx,r11d
  41173a:	sub    ecx,edi
  41173c:	sub    ecx,r10d
  41173f:	mov    DWORD PTR [rsp+0xc],ecx
  411743:	test   r9d,r9d
  411746:	je     41177d <flatcc_builder_create_table@@Base+0xbd>
  411748:	mov    edi,r10d
  41174b:	sub    edi,r11d
  41174e:	lea    eax,[r9-0x1]
  411752:	sub    edi,0x4
  411755:	lea    r9,[r8+rax*2+0x2]
  41175a:	nop    WORD PTR [rax+rax*1+0x0]
  411760:	movzx  ecx,WORD PTR [r8]
  411764:	mov    r11d,edi
  411767:	sub    r11d,ecx
  41176a:	add    r8,0x2
  41176e:	add    DWORD PTR [rsi+rcx*1],r11d
  411772:	cmp    r9,r8
  411775:	jne    411760 <flatcc_builder_create_table@@Base+0xa0>
  411777:	mov    eax,DWORD PTR [rbx+0xf0]
  41177d:	lea    rcx,[rsp+0xc]
  411782:	mov    QWORD PTR [rsp+0x10],0x4
  41178b:	mov    QWORD PTR [rsp+0x20],rcx
  411790:	mov    QWORD PTR [rsp+0x28],0x4
  411799:	mov    DWORD PTR [rsp+0x18],0x1
  4117a1:	mov    r8d,0x4
  4117a7:	test   rdx,rdx
  4117aa:	je     4117c7 <flatcc_builder_create_table@@Base+0x107>
  4117ac:	lea    r8,[rdx+0x4]
  4117b0:	mov    QWORD PTR [rsp+0x10],r8
  4117b5:	mov    QWORD PTR [rsp+0x30],rsi
  4117ba:	mov    QWORD PTR [rsp+0x38],rdx
  4117bf:	mov    DWORD PTR [rsp+0x18],0x2
  4117c7:	test   r10d,r10d
  4117ca:	jne    411830 <flatcc_builder_create_table@@Base+0x170>
  4117cc:	mov    ebp,eax
  4117ce:	movabs rdx,0x10000000f
  4117d8:	sub    ebp,r8d
  4117db:	cmp    r8,rdx
  4117de:	ja     41186c <flatcc_builder_create_table@@Base+0x1ac>
  4117e4:	cmp    ebp,eax
  4117e6:	jge    41186c <flatcc_builder_create_table@@Base+0x1ac>
  4117ec:	mov    rdi,QWORD PTR [rbx+0x38]
  4117f0:	mov    edx,DWORD PTR [rsp+0x18]
  4117f4:	lea    rsi,[rsp+0x20]
  4117f9:	mov    ecx,ebp
  4117fb:	call   QWORD PTR [rbx+0x48]
  4117fe:	test   eax,eax
  411800:	jne    4118aa <flatcc_builder_create_table@@Base+0x1ea>
  411806:	mov    DWORD PTR [rbx+0xf0],ebp
  41180c:	mov    eax,ebp
  41180e:	mov    rbx,QWORD PTR [rsp+0xa8]
  411816:	xor    rbx,QWORD PTR fs:0x28
  41181f:	jne    4118ce <flatcc_builder_create_table@@Base+0x20e>
  411825:	add    rsp,0xb8
  41182c:	pop    rbx
  41182d:	pop    rbp
  41182e:	ret    
  41182f:	nop
  411830:	movsxd rcx,DWORD PTR [rsp+0x18]
  411835:	mov    rsi,0x41a180
  41183c:	mov    rdx,rcx
  41183f:	add    r8,r10
  411842:	shl    rcx,0x4
  411846:	inc    edx
  411848:	mov    QWORD PTR [rsp+0x10],r8
  41184d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  411852:	mov    QWORD PTR [rsp+rcx*1+0x28],r10
  411857:	mov    DWORD PTR [rsp+0x18],edx
  41185b:	jmp    4117cc <flatcc_builder_create_table@@Base+0x10c>
  411860:	mov    WORD PTR [rbx+0xe8],cx
  411867:	jmp    41171a <flatcc_builder_create_table@@Base+0x5a>
  41186c:	lea    rcx,[rip+0x885d]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  411873:	mov    edx,0x287
  411878:	lea    rsi,[rip+0x7e11]        # 419690 <_IO_stdin_used@@Base+0x3690>
  41187f:	lea    rdi,[rip+0x81a1]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  411886:	call   4041a0 <__assert_fail@plt>
  41188b:	lea    rcx,[rip+0x85de]        # 419e70 <_IO_stdin_used@@Base+0x3e70>
  411892:	mov    edx,0x4db
  411897:	lea    rsi,[rip+0x7df2]        # 419690 <_IO_stdin_used@@Base+0x3690>
  41189e:	lea    rdi,[rip+0x81e9]        # 419a8e <_IO_stdin_used@@Base+0x3a8e>
  4118a5:	call   4041a0 <__assert_fail@plt>
  4118aa:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  4118af:	lea    rcx,[rip+0x85ba]        # 419e70 <_IO_stdin_used@@Base+0x3e70>
  4118b6:	mov    edx,0x4d5
  4118bb:	lea    rsi,[rip+0x7dce]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4118c2:	lea    rdi,[rip+0x81b3]        # 419a7c <_IO_stdin_used@@Base+0x3a7c>
  4118c9:	call   4041a0 <__assert_fail@plt>
  4118ce:	call   404180 <__stack_chk_fail@plt>
  4118d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4118de:	xchg   ax,ax

00000000004118e0 <flatcc_builder_check_required_field@@Base>:
  4118e0:	endbr64 
  4118e4:	mov    rax,QWORD PTR [rdi+0x30]
  4118e8:	cmp    WORD PTR [rax+0xe],0x3
  4118ed:	jne    41190a <flatcc_builder_check_required_field@@Base+0x2a>
  4118ef:	xor    eax,eax
  4118f1:	cmp    WORD PTR [rdi+0x10],si
  4118f5:	jbe    411909 <flatcc_builder_check_required_field@@Base+0x29>
  4118f7:	mov    rax,QWORD PTR [rdi+0x8]
  4118fb:	movzx  edx,si
  4118fe:	cmp    WORD PTR [rax+rdx*2],0x0
  411903:	setne  al
  411906:	movzx  eax,al
  411909:	ret    
  41190a:	push   rax
  41190b:	lea    rcx,[rip+0x852e]        # 419e40 <_IO_stdin_used@@Base+0x3e40>
  411912:	mov    edx,0x4f8
  411917:	lea    rsi,[rip+0x7d72]        # 419690 <_IO_stdin_used@@Base+0x3690>
  41191e:	lea    rdi,[rip+0x7fb3]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  411925:	call   4041a0 <__assert_fail@plt>
  41192a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000411930 <flatcc_builder_check_union_field@@Base>:
  411930:	endbr64 
  411934:	mov    rax,QWORD PTR [rdi+0x30]
  411938:	cmp    WORD PTR [rax+0xe],0x3
  41193d:	jne    411999 <flatcc_builder_check_union_field@@Base+0x69>
  41193f:	xor    eax,eax
  411941:	test   si,si
  411944:	je     411976 <flatcc_builder_check_union_field@@Base+0x46>
  411946:	cmp    WORD PTR [rdi+0x10],si
  41194a:	jbe    411976 <flatcc_builder_check_union_field@@Base+0x46>
  41194c:	mov    rcx,QWORD PTR [rdi+0x8]
  411950:	movzx  edx,si
  411953:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  411958:	movzx  ecx,WORD PTR [rcx+rdx*2]
  41195c:	test   ax,ax
  41195f:	je     411990 <flatcc_builder_check_union_field@@Base+0x60>
  411961:	mov    rsi,QWORD PTR [rdi+0x18]
  411965:	movzx  edx,ax
  411968:	xor    eax,eax
  41196a:	test   cx,cx
  41196d:	sete   al
  411970:	cmp    BYTE PTR [rsi+rdx*1],0x0
  411974:	jne    411980 <flatcc_builder_check_union_field@@Base+0x50>
  411976:	ret    
  411977:	nop    WORD PTR [rax+rax*1+0x0]
  411980:	xor    eax,eax
  411982:	test   cx,cx
  411985:	setne  al
  411988:	ret    
  411989:	nop    DWORD PTR [rax+0x0]
  411990:	xor    eax,eax
  411992:	test   cx,cx
  411995:	sete   al
  411998:	ret    
  411999:	push   rax
  41199a:	lea    rcx,[rip+0x845f]        # 419e00 <_IO_stdin_used@@Base+0x3e00>
  4119a1:	mov    edx,0x4ff
  4119a6:	lea    rsi,[rip+0x7ce3]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4119ad:	lea    rdi,[rip+0x7f24]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  4119b4:	call   4041a0 <__assert_fail@plt>
  4119b9:	nop    DWORD PTR [rax+0x0]

00000000004119c0 <flatcc_builder_check_required@@Base>:
  4119c0:	endbr64 
  4119c4:	mov    rax,QWORD PTR [rdi+0x30]
  4119c8:	cmp    WORD PTR [rax+0xe],0x3
  4119cd:	jne    411a23 <flatcc_builder_check_required@@Base+0x63>
  4119cf:	movzx  ecx,WORD PTR [rdi+0x10]
  4119d3:	xor    eax,eax
  4119d5:	cmp    ecx,edx
  4119d7:	jl     411a22 <flatcc_builder_check_required@@Base+0x62>
  4119d9:	test   edx,edx
  4119db:	jle    411a13 <flatcc_builder_check_required@@Base+0x53>
  4119dd:	mov    rcx,QWORD PTR [rdi+0x8]
  4119e1:	movzx  edi,WORD PTR [rsi]
  4119e4:	cmp    WORD PTR [rcx+rdi*2],0x0
  4119e9:	je     411a22 <flatcc_builder_check_required@@Base+0x62>
  4119eb:	add    rsi,0x2
  4119ef:	lea    eax,[rdx-0x1]
  4119f2:	lea    rdx,[rsi+rax*2]
  4119f6:	jmp    411a0e <flatcc_builder_check_required@@Base+0x4e>
  4119f8:	nop    DWORD PTR [rax+rax*1+0x0]
  411a00:	movzx  eax,WORD PTR [rsi]
  411a03:	add    rsi,0x2
  411a07:	cmp    WORD PTR [rcx+rax*2],0x0
  411a0c:	je     411a20 <flatcc_builder_check_required@@Base+0x60>
  411a0e:	cmp    rsi,rdx
  411a11:	jne    411a00 <flatcc_builder_check_required@@Base+0x40>
  411a13:	mov    eax,0x1
  411a18:	ret    
  411a19:	nop    DWORD PTR [rax+0x0]
  411a20:	xor    eax,eax
  411a22:	ret    
  411a23:	push   rax
  411a24:	lea    rcx,[rip+0x83a5]        # 419dd0 <_IO_stdin_used@@Base+0x3dd0>
  411a2b:	mov    edx,0x511
  411a30:	lea    rsi,[rip+0x7c59]        # 419690 <_IO_stdin_used@@Base+0x3690>
  411a37:	lea    rdi,[rip+0x7e9a]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  411a3e:	call   4041a0 <__assert_fail@plt>
  411a43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411a4e:	xchg   ax,ax

0000000000411a50 <flatcc_builder_end_table@@Base>:
  411a50:	endbr64 
  411a54:	push   r13
  411a56:	push   r12
  411a58:	push   rbp
  411a59:	push   rbx
  411a5a:	sub    rsp,0x8
  411a5e:	mov    rax,QWORD PTR [rdi+0x30]
  411a62:	cmp    WORD PTR [rax+0xe],0x3
  411a67:	jne    411bbd <flatcc_builder_end_table@@Base+0x16d>
  411a6d:	movzx  ebp,WORD PTR [rdi+0x10]
  411a71:	movzx  eax,WORD PTR [rdi+0x20]
  411a75:	lea    ebp,[rbp+rbp*1+0x4]
  411a79:	movzx  ecx,bp
  411a7c:	xor    ecx,DWORD PTR [rdi+0x14]
  411a7f:	mov    rdx,QWORD PTR [rdi+0x8]
  411a83:	imul   ecx,ecx,0x9e3779b1
  411a89:	add    eax,0x4
  411a8c:	mov    WORD PTR [rdx-0x2],ax
  411a90:	movzx  eax,ax
  411a93:	xor    ecx,eax
  411a95:	imul   ecx,ecx,0x9e3779b1
  411a9b:	mov    WORD PTR [rdx-0x4],bp
  411a9f:	lea    r12,[rdx-0x4]
  411aa3:	mov    DWORD PTR [rdi+0x14],ecx
  411aa6:	movzx  edx,bp
  411aa9:	mov    rsi,r12
  411aac:	mov    rbx,rdi
  411aaf:	call   411360 <flatcc_builder_create_cached_vtable@@Base>
  411ab4:	mov    r13d,eax
  411ab7:	test   eax,eax
  411ab9:	jne    411ad0 <flatcc_builder_end_table@@Base+0x80>
  411abb:	add    rsp,0x8
  411abf:	pop    rbx
  411ac0:	xor    ebp,ebp
  411ac2:	mov    eax,ebp
  411ac4:	pop    rbp
  411ac5:	pop    r12
  411ac7:	pop    r13
  411ac9:	ret    
  411aca:	nop    WORD PTR [rax+rax*1+0x0]
  411ad0:	movzx  edx,bp
  411ad3:	xor    esi,esi
  411ad5:	mov    rdi,r12
  411ad8:	call   4041b0 <memset@plt>
  411add:	mov    rax,QWORD PTR [rbx+0x30]
  411ae1:	sub    rsp,0x8
  411ae5:	mov    r8d,DWORD PTR [rax+0x14]
  411ae9:	mov    r9,QWORD PTR [rbx]
  411aec:	add    r8,QWORD PTR [rbx+0x88]
  411af3:	mov    edx,DWORD PTR [rbx+0x20]
  411af6:	movzx  ecx,WORD PTR [rbx+0xea]
  411afd:	mov    rsi,QWORD PTR [rbx+0x18]
  411b01:	push   r13
  411b03:	sub    r9,r8
  411b06:	sar    r9,1
  411b09:	mov    rdi,rbx
  411b0c:	call   4116c0 <flatcc_builder_create_table@@Base>
  411b11:	mov    ebp,eax
  411b13:	pop    rax
  411b14:	pop    rdx
  411b15:	test   ebp,ebp
  411b17:	je     411abb <flatcc_builder_end_table@@Base+0x6b>
  411b19:	mov    rax,QWORD PTR [rbx+0x30]
  411b1d:	mov    rdi,QWORD PTR [rbx+0x18]
  411b21:	mov    edx,DWORD PTR [rax+0x18]
  411b24:	xor    esi,esi
  411b26:	mov    DWORD PTR [rbx+0x14],edx
  411b29:	movzx  edx,WORD PTR [rax+0x1c]
  411b2d:	mov    WORD PTR [rbx+0x10],dx
  411b31:	mov    edx,DWORD PTR [rax+0x10]
  411b34:	mov    eax,DWORD PTR [rax+0x14]
  411b37:	add    rdx,QWORD PTR [rbx+0x58]
  411b3b:	add    rax,QWORD PTR [rbx+0x88]
  411b42:	mov    QWORD PTR [rbx+0x8],rdx
  411b46:	mov    QWORD PTR [rbx],rax
  411b49:	mov    edx,DWORD PTR [rbx+0x20]
  411b4c:	call   4041b0 <memset@plt>
  411b51:	mov    rax,QWORD PTR [rbx+0x30]
  411b55:	mov    edi,DWORD PTR [rbx+0x70]
  411b58:	mov    edx,DWORD PTR [rax+0x8]
  411b5b:	mov    esi,DWORD PTR [rax]
  411b5d:	mov    ecx,DWORD PTR [rax+0x4]
  411b60:	mov    DWORD PTR [rbx+0x20],edx
  411b63:	mov    rdx,rsi
  411b66:	sub    edi,edx
  411b68:	mov    DWORD PTR [rbx+0x28],esi
  411b6b:	mov    edx,edi
  411b6d:	add    rsi,QWORD PTR [rbx+0x68]
  411b71:	cmp    ecx,edi
  411b73:	cmovb  edx,ecx
  411b76:	mov    QWORD PTR [rbx+0x18],rsi
  411b7a:	mov    DWORD PTR [rbx+0x24],edx
  411b7d:	movzx  edx,WORD PTR [rbx+0xea]
  411b84:	mov    DWORD PTR [rax+0x4],ecx
  411b87:	cmp    dx,WORD PTR [rbx+0xe8]
  411b8e:	jbe    411b97 <flatcc_builder_end_table@@Base+0x147>
  411b90:	mov    WORD PTR [rbx+0xe8],dx
  411b97:	movzx  edx,WORD PTR [rax+0xc]
  411b9b:	dec    DWORD PTR [rbx+0x104]
  411ba1:	sub    rax,0x24
  411ba5:	mov    QWORD PTR [rbx+0x30],rax
  411ba9:	mov    WORD PTR [rbx+0xea],dx
  411bb0:	add    rsp,0x8
  411bb4:	mov    eax,ebp
  411bb6:	pop    rbx
  411bb7:	pop    rbp
  411bb8:	pop    r12
  411bba:	pop    r13
  411bbc:	ret    
  411bbd:	lea    rcx,[rip+0x81ec]        # 419db0 <_IO_stdin_used@@Base+0x3db0>
  411bc4:	mov    edx,0x525
  411bc9:	lea    rsi,[rip+0x7ac0]        # 419690 <_IO_stdin_used@@Base+0x3690>
  411bd0:	lea    rdi,[rip+0x7d01]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  411bd7:	call   4041a0 <__assert_fail@plt>
  411bdc:	nop    DWORD PTR [rax+0x0]

0000000000411be0 <flatcc_builder_create_vector@@Base>:
  411be0:	endbr64 
  411be4:	push   rbp
  411be5:	push   rbx
  411be6:	sub    rsp,0xb8
  411bed:	mov    rax,QWORD PTR fs:0x28
  411bf6:	mov    QWORD PTR [rsp+0xa8],rax
  411bfe:	xor    eax,eax
  411c00:	cmp    rdx,r9
  411c03:	ja     411d44 <flatcc_builder_create_vector@@Base+0x164>
  411c09:	cmp    r8w,0x4
  411c0e:	mov    eax,0x4
  411c13:	cmovb  r8d,eax
  411c17:	mov    rbx,rdi
  411c1a:	movzx  edi,r8w
  411c1e:	cmp    r8w,WORD PTR [rbx+0xe8]
  411c26:	jbe    411c30 <flatcc_builder_create_vector@@Base+0x50>
  411c28:	mov    WORD PTR [rbx+0xe8],r8w
  411c30:	imul   ecx,edx
  411c33:	mov    DWORD PTR [rsp+0xc],edx
  411c37:	mov    edx,DWORD PTR [rbx+0xf0]
  411c3d:	dec    edi
  411c3f:	mov    eax,edx
  411c41:	sub    eax,ecx
  411c43:	and    eax,edi
  411c45:	lea    rdi,[rsp+0xc]
  411c4a:	mov    QWORD PTR [rsp+0x10],0x4
  411c53:	mov    QWORD PTR [rsp+0x20],rdi
  411c58:	mov    QWORD PTR [rsp+0x28],0x4
  411c61:	mov    DWORD PTR [rsp+0x18],0x1
  411c69:	mov    r8d,0x4
  411c6f:	test   ecx,ecx
  411c71:	je     411c8e <flatcc_builder_create_vector@@Base+0xae>
  411c73:	lea    r8,[rcx+0x4]
  411c77:	mov    QWORD PTR [rsp+0x10],r8
  411c7c:	mov    QWORD PTR [rsp+0x30],rsi
  411c81:	mov    QWORD PTR [rsp+0x38],rcx
  411c86:	mov    DWORD PTR [rsp+0x18],0x2
  411c8e:	test   eax,eax
  411c90:	jne    411cf0 <flatcc_builder_create_vector@@Base+0x110>
  411c92:	mov    ebp,edx
  411c94:	movabs rax,0x10000000f
  411c9e:	sub    ebp,r8d
  411ca1:	cmp    r8,rax
  411ca4:	ja     411d20 <flatcc_builder_create_vector@@Base+0x140>
  411ca6:	cmp    edx,ebp
  411ca8:	jle    411d20 <flatcc_builder_create_vector@@Base+0x140>
  411caa:	mov    rdi,QWORD PTR [rbx+0x38]
  411cae:	mov    edx,DWORD PTR [rsp+0x18]
  411cb2:	lea    rsi,[rsp+0x20]
  411cb7:	mov    ecx,ebp
  411cb9:	call   QWORD PTR [rbx+0x48]
  411cbc:	test   eax,eax
  411cbe:	jne    411d3f <flatcc_builder_create_vector@@Base+0x15f>
  411cc0:	mov    DWORD PTR [rbx+0xf0],ebp
  411cc6:	mov    eax,ebp
  411cc8:	mov    rbx,QWORD PTR [rsp+0xa8]
  411cd0:	xor    rbx,QWORD PTR fs:0x28
  411cd9:	jne    411d63 <flatcc_builder_create_vector@@Base+0x183>
  411cdf:	add    rsp,0xb8
  411ce6:	pop    rbx
  411ce7:	pop    rbp
  411ce8:	ret    
  411ce9:	nop    DWORD PTR [rax+0x0]
  411cf0:	movsxd rsi,DWORD PTR [rsp+0x18]
  411cf5:	mov    rdi,0x41a180
  411cfc:	mov    rcx,rsi
  411cff:	add    r8,rax
  411d02:	shl    rsi,0x4
  411d06:	inc    ecx
  411d08:	mov    QWORD PTR [rsp+0x10],r8
  411d0d:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  411d12:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  411d17:	mov    DWORD PTR [rsp+0x18],ecx
  411d1b:	jmp    411c92 <flatcc_builder_create_vector@@Base+0xb2>
  411d20:	lea    rcx,[rip+0x83a9]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  411d27:	mov    edx,0x287
  411d2c:	lea    rsi,[rip+0x795d]        # 419690 <_IO_stdin_used@@Base+0x3690>
  411d33:	lea    rdi,[rip+0x7ced]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  411d3a:	call   4041a0 <__assert_fail@plt>
  411d3f:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  411d44:	lea    rcx,[rip+0x8045]        # 419d90 <_IO_stdin_used@@Base+0x3d90>
  411d4b:	mov    edx,0x555
  411d50:	lea    rsi,[rip+0x7939]        # 419690 <_IO_stdin_used@@Base+0x3690>
  411d57:	lea    rdi,[rip+0x7d3b]        # 419a99 <_IO_stdin_used@@Base+0x3a99>
  411d5e:	call   4041a0 <__assert_fail@plt>
  411d63:	call   404180 <__stack_chk_fail@plt>
  411d68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411d70 <flatcc_builder_end_vector@@Base>:
  411d70:	endbr64 
  411d74:	push   rbp
  411d75:	push   rbx
  411d76:	sub    rsp,0x8
  411d7a:	mov    rax,QWORD PTR [rdi+0x30]
  411d7e:	cmp    WORD PTR [rax+0xe],0x4
  411d83:	jne    411e36 <flatcc_builder_end_vector@@Base+0xc6>
  411d89:	mov    ecx,DWORD PTR [rax+0x10]
  411d8c:	mov    edx,DWORD PTR [rax+0x14]
  411d8f:	mov    rsi,QWORD PTR [rdi+0x18]
  411d93:	mov    r9d,DWORD PTR [rax+0x18]
  411d97:	movzx  r8d,WORD PTR [rdi+0xea]
  411d9f:	mov    rbx,rdi
  411da2:	call   411be0 <flatcc_builder_create_vector@@Base>
  411da7:	mov    ebp,eax
  411da9:	test   eax,eax
  411dab:	jne    411dc0 <flatcc_builder_end_vector@@Base+0x50>
  411dad:	add    rsp,0x8
  411db1:	pop    rbx
  411db2:	mov    eax,ebp
  411db4:	pop    rbp
  411db5:	ret    
  411db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411dc0:	mov    edx,DWORD PTR [rbx+0x20]
  411dc3:	mov    rdi,QWORD PTR [rbx+0x18]
  411dc7:	xor    esi,esi
  411dc9:	call   4041b0 <memset@plt>
  411dce:	mov    rax,QWORD PTR [rbx+0x30]
  411dd2:	mov    edi,DWORD PTR [rbx+0x70]
  411dd5:	mov    edx,DWORD PTR [rax+0x8]
  411dd8:	mov    esi,DWORD PTR [rax]
  411dda:	mov    ecx,DWORD PTR [rax+0x4]
  411ddd:	mov    DWORD PTR [rbx+0x20],edx
  411de0:	mov    rdx,rsi
  411de3:	sub    edi,edx
  411de5:	mov    DWORD PTR [rbx+0x28],esi
  411de8:	mov    edx,edi
  411dea:	add    rsi,QWORD PTR [rbx+0x68]
  411dee:	cmp    ecx,edi
  411df0:	cmovb  edx,ecx
  411df3:	mov    QWORD PTR [rbx+0x18],rsi
  411df7:	mov    DWORD PTR [rbx+0x24],edx
  411dfa:	movzx  edx,WORD PTR [rbx+0xea]
  411e01:	mov    DWORD PTR [rax+0x4],ecx
  411e04:	cmp    dx,WORD PTR [rbx+0xe8]
  411e0b:	jbe    411e14 <flatcc_builder_end_vector@@Base+0xa4>
  411e0d:	mov    WORD PTR [rbx+0xe8],dx
  411e14:	movzx  edx,WORD PTR [rax+0xc]
  411e18:	dec    DWORD PTR [rbx+0x104]
  411e1e:	sub    rax,0x24
  411e22:	mov    QWORD PTR [rbx+0x30],rax
  411e26:	mov    WORD PTR [rbx+0xea],dx
  411e2d:	add    rsp,0x8
  411e31:	mov    eax,ebp
  411e33:	pop    rbx
  411e34:	pop    rbp
  411e35:	ret    
  411e36:	lea    rcx,[rip+0x7f33]        # 419d70 <_IO_stdin_used@@Base+0x3d70>
  411e3d:	mov    edx,0x578
  411e42:	lea    rsi,[rip+0x7847]        # 419690 <_IO_stdin_used@@Base+0x3690>
  411e49:	lea    rdi,[rip+0x7920]        # 419770 <_IO_stdin_used@@Base+0x3770>
  411e50:	call   4041a0 <__assert_fail@plt>
  411e55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411e60 <flatcc_builder_vector_count@@Base>:
  411e60:	endbr64 
  411e64:	mov    rax,QWORD PTR [rdi+0x30]
  411e68:	mov    eax,DWORD PTR [rax+0x14]
  411e6b:	ret    
  411e6c:	nop    DWORD PTR [rax+0x0]

0000000000411e70 <flatcc_builder_vector_edit@@Base>:
  411e70:	endbr64 
  411e74:	mov    rax,QWORD PTR [rdi+0x18]
  411e78:	ret    
  411e79:	nop    DWORD PTR [rax+0x0]

0000000000411e80 <flatcc_builder_create_offset_vector_direct@@Base>:
  411e80:	endbr64 
  411e84:	xor    ecx,ecx
  411e86:	jmp    40f790 <flatcc_builder_default_alloc@@Base+0x450>
  411e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411e90 <flatcc_builder_end_offset_vector@@Base>:
  411e90:	endbr64 
  411e94:	push   rbp
  411e95:	push   rbx
  411e96:	sub    rsp,0x8
  411e9a:	mov    rax,QWORD PTR [rdi+0x30]
  411e9e:	cmp    WORD PTR [rax+0xe],0x5
  411ea3:	jne    411f46 <flatcc_builder_end_offset_vector@@Base+0xb6>
  411ea9:	mov    edx,DWORD PTR [rax+0x14]
  411eac:	mov    rsi,QWORD PTR [rdi+0x18]
  411eb0:	mov    rbx,rdi
  411eb3:	call   411e80 <flatcc_builder_create_offset_vector_direct@@Base>
  411eb8:	mov    ebp,eax
  411eba:	test   eax,eax
  411ebc:	jne    411ed0 <flatcc_builder_end_offset_vector@@Base+0x40>
  411ebe:	add    rsp,0x8
  411ec2:	pop    rbx
  411ec3:	mov    eax,ebp
  411ec5:	pop    rbp
  411ec6:	ret    
  411ec7:	nop    WORD PTR [rax+rax*1+0x0]
  411ed0:	mov    edx,DWORD PTR [rbx+0x20]
  411ed3:	mov    rdi,QWORD PTR [rbx+0x18]
  411ed7:	xor    esi,esi
  411ed9:	call   4041b0 <memset@plt>
  411ede:	mov    rax,QWORD PTR [rbx+0x30]
  411ee2:	mov    edi,DWORD PTR [rbx+0x70]
  411ee5:	mov    edx,DWORD PTR [rax+0x8]
  411ee8:	mov    esi,DWORD PTR [rax]
  411eea:	mov    ecx,DWORD PTR [rax+0x4]
  411eed:	mov    DWORD PTR [rbx+0x20],edx
  411ef0:	mov    rdx,rsi
  411ef3:	sub    edi,edx
  411ef5:	mov    DWORD PTR [rbx+0x28],esi
  411ef8:	mov    edx,edi
  411efa:	add    rsi,QWORD PTR [rbx+0x68]
  411efe:	cmp    ecx,edi
  411f00:	cmovb  edx,ecx
  411f03:	mov    QWORD PTR [rbx+0x18],rsi
  411f07:	mov    DWORD PTR [rbx+0x24],edx
  411f0a:	movzx  edx,WORD PTR [rbx+0xea]
  411f11:	mov    DWORD PTR [rax+0x4],ecx
  411f14:	cmp    dx,WORD PTR [rbx+0xe8]
  411f1b:	jbe    411f24 <flatcc_builder_end_offset_vector@@Base+0x94>
  411f1d:	mov    WORD PTR [rbx+0xe8],dx
  411f24:	movzx  edx,WORD PTR [rax+0xc]
  411f28:	dec    DWORD PTR [rbx+0x104]
  411f2e:	sub    rax,0x24
  411f32:	mov    QWORD PTR [rbx+0x30],rax
  411f36:	mov    WORD PTR [rbx+0xea],dx
  411f3d:	add    rsp,0x8
  411f41:	mov    eax,ebp
  411f43:	pop    rbx
  411f44:	pop    rbp
  411f45:	ret    
  411f46:	lea    rcx,[rip+0x7dd3]        # 419d20 <_IO_stdin_used@@Base+0x3d20>
  411f4d:	mov    edx,0x5c8
  411f52:	lea    rsi,[rip+0x7737]        # 419690 <_IO_stdin_used@@Base+0x3690>
  411f59:	lea    rdi,[rip+0x7880]        # 4197e0 <_IO_stdin_used@@Base+0x37e0>
  411f60:	call   4041a0 <__assert_fail@plt>
  411f65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411f70 <flatcc_builder_create_offset_vector@@Base>:
  411f70:	endbr64 
  411f74:	push   r12
  411f76:	mov    r12,rsi
  411f79:	push   rbp
  411f7a:	mov    rbp,rdx
  411f7d:	push   rbx
  411f7e:	mov    rbx,rdi
  411f81:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  411f86:	test   eax,eax
  411f88:	je     411f98 <flatcc_builder_create_offset_vector@@Base+0x28>
  411f8a:	pop    rbx
  411f8b:	pop    rbp
  411f8c:	xor    eax,eax
  411f8e:	pop    r12
  411f90:	ret    
  411f91:	nop    DWORD PTR [rax+0x0]
  411f98:	mov    rsi,rbp
  411f9b:	mov    rdi,rbx
  411f9e:	call   4109e0 <flatcc_builder_extend_offset_vector@@Base>
  411fa3:	test   rax,rax
  411fa6:	je     411f8a <flatcc_builder_create_offset_vector@@Base+0x1a>
  411fa8:	lea    rdx,[rbp*4+0x0]
  411fb0:	mov    rsi,r12
  411fb3:	mov    rdi,rax
  411fb6:	call   4041f0 <memcpy@plt>
  411fbb:	mov    rdi,rbx
  411fbe:	pop    rbx
  411fbf:	pop    rbp
  411fc0:	pop    r12
  411fc2:	jmp    411e90 <flatcc_builder_end_offset_vector@@Base>
  411fc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000411fd0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  411fd0:	endbr64 
  411fd4:	push   rbp
  411fd5:	push   rbx
  411fd6:	sub    rsp,0x8
  411fda:	mov    rax,QWORD PTR [rdi+0x30]
  411fde:	cmp    WORD PTR [rax+0xe],0x5
  411fe3:	jne    412086 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb6>
  411fe9:	mov    rcx,rsi
  411fec:	mov    edx,DWORD PTR [rax+0x14]
  411fef:	mov    rsi,QWORD PTR [rdi+0x18]
  411ff3:	mov    rbx,rdi
  411ff6:	call   40f790 <flatcc_builder_default_alloc@@Base+0x450>
  411ffb:	mov    ebp,eax
  411ffd:	test   eax,eax
  411fff:	jne    412010 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  412001:	add    rsp,0x8
  412005:	pop    rbx
  412006:	mov    eax,ebp
  412008:	pop    rbp
  412009:	ret    
  41200a:	nop    WORD PTR [rax+rax*1+0x0]
  412010:	mov    edx,DWORD PTR [rbx+0x20]
  412013:	mov    rdi,QWORD PTR [rbx+0x18]
  412017:	xor    esi,esi
  412019:	call   4041b0 <memset@plt>
  41201e:	mov    rax,QWORD PTR [rbx+0x30]
  412022:	mov    edi,DWORD PTR [rbx+0x70]
  412025:	mov    edx,DWORD PTR [rax+0x8]
  412028:	mov    esi,DWORD PTR [rax]
  41202a:	mov    ecx,DWORD PTR [rax+0x4]
  41202d:	mov    DWORD PTR [rbx+0x20],edx
  412030:	mov    rdx,rsi
  412033:	sub    edi,edx
  412035:	mov    DWORD PTR [rbx+0x28],esi
  412038:	mov    edx,edi
  41203a:	add    rsi,QWORD PTR [rbx+0x68]
  41203e:	cmp    ecx,edi
  412040:	cmovb  edx,ecx
  412043:	mov    QWORD PTR [rbx+0x18],rsi
  412047:	mov    DWORD PTR [rbx+0x24],edx
  41204a:	movzx  edx,WORD PTR [rbx+0xea]
  412051:	mov    DWORD PTR [rax+0x4],ecx
  412054:	cmp    dx,WORD PTR [rbx+0xe8]
  41205b:	jbe    412064 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  41205d:	mov    WORD PTR [rbx+0xe8],dx
  412064:	movzx  edx,WORD PTR [rax+0xc]
  412068:	dec    DWORD PTR [rbx+0x104]
  41206e:	sub    rax,0x24
  412072:	mov    QWORD PTR [rbx+0x30],rax
  412076:	mov    WORD PTR [rbx+0xea],dx
  41207d:	add    rsp,0x8
  412081:	mov    eax,ebp
  412083:	pop    rbx
  412084:	pop    rbp
  412085:	ret    
  412086:	lea    rcx,[rip+0x7c53]        # 419ce0 <_IO_stdin_used@@Base+0x3ce0>
  41208d:	mov    edx,0x5d5
  412092:	lea    rsi,[rip+0x75f7]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412099:	lea    rdi,[rip+0x7740]        # 4197e0 <_IO_stdin_used@@Base+0x37e0>
  4120a0:	call   4041a0 <__assert_fail@plt>
  4120a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004120b0 <flatcc_builder_offset_vector_edit@@Base>:
  4120b0:	endbr64 
  4120b4:	mov    rax,QWORD PTR [rdi+0x18]
  4120b8:	ret    
  4120b9:	nop    DWORD PTR [rax+0x0]

00000000004120c0 <flatcc_builder_offset_vector_count@@Base>:
  4120c0:	endbr64 
  4120c4:	mov    rax,QWORD PTR [rdi+0x30]
  4120c8:	mov    eax,DWORD PTR [rax+0x14]
  4120cb:	ret    
  4120cc:	nop    DWORD PTR [rax+0x0]

00000000004120d0 <flatcc_builder_create_union_vector_direct@@Base>:
  4120d0:	endbr64 
  4120d4:	push   r13
  4120d6:	mov    r13,rcx
  4120d9:	push   r12
  4120db:	mov    r12,rsi
  4120de:	mov    rcx,r12
  4120e1:	push   rbp
  4120e2:	mov    rsi,rdx
  4120e5:	mov    rdx,r13
  4120e8:	push   rbx
  4120e9:	mov    rbp,rdi
  4120ec:	sub    rsp,0x8
  4120f0:	call   40f790 <flatcc_builder_default_alloc@@Base+0x450>
  4120f5:	test   eax,eax
  4120f7:	jne    412110 <flatcc_builder_create_union_vector_direct@@Base+0x40>
  4120f9:	add    rsp,0x8
  4120fd:	pop    rbx
  4120fe:	pop    rbp
  4120ff:	pop    r12
  412101:	xor    eax,eax
  412103:	pop    r13
  412105:	ret    
  412106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412110:	mov    rdx,r13
  412113:	mov    rsi,r12
  412116:	mov    rdi,rbp
  412119:	mov    r9d,0xffffffff
  41211f:	mov    r8d,0x1
  412125:	mov    ecx,0x1
  41212a:	mov    ebx,eax
  41212c:	call   411be0 <flatcc_builder_create_vector@@Base>
  412131:	mov    edx,eax
  412133:	mov    rsi,rbx
  412136:	shl    rsi,0x20
  41213a:	mov    rax,rdx
  41213d:	or     rax,rsi
  412140:	test   edx,edx
  412142:	mov    rdx,rax
  412145:	mov    rax,rsi
  412148:	cmovne rax,rdx
  41214c:	add    rsp,0x8
  412150:	pop    rbx
  412151:	pop    rbp
  412152:	pop    r12
  412154:	pop    r13
  412156:	ret    
  412157:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412160 <flatcc_builder_create_union_vector@@Base>:
  412160:	endbr64 
  412164:	push   r13
  412166:	push   r12
  412168:	mov    r12,rdx
  41216b:	push   rbp
  41216c:	mov    rbp,rsi
  41216f:	push   rbx
  412170:	mov    rbx,rdi
  412173:	sub    rsp,0x8
  412177:	call   410f30 <flatcc_builder_start_offset_vector@@Base>
  41217c:	test   eax,eax
  41217e:	je     412190 <flatcc_builder_create_union_vector@@Base+0x30>
  412180:	add    rsp,0x8
  412184:	pop    rbx
  412185:	pop    rbp
  412186:	pop    r12
  412188:	xor    eax,eax
  41218a:	pop    r13
  41218c:	ret    
  41218d:	nop    DWORD PTR [rax]
  412190:	mov    rsi,r12
  412193:	mov    rdi,rbx
  412196:	call   4109e0 <flatcc_builder_extend_offset_vector@@Base>
  41219b:	test   rax,rax
  41219e:	je     412180 <flatcc_builder_create_union_vector@@Base+0x20>
  4121a0:	mov    r13d,DWORD PTR [rbx+0x20]
  4121a4:	mov    rax,r13
  4121a7:	add    eax,r12d
  4121aa:	mov    DWORD PTR [rbx+0x20],eax
  4121ad:	cmp    eax,DWORD PTR [rbx+0x24]
  4121b0:	jae    412280 <flatcc_builder_create_union_vector@@Base+0x120>
  4121b6:	add    r13,QWORD PTR [rbx+0x18]
  4121ba:	je     412180 <flatcc_builder_create_union_vector@@Base+0x20>
  4121bc:	mov    rdi,rbx
  4121bf:	call   4120b0 <flatcc_builder_offset_vector_edit@@Base>
  4121c4:	test   r12,r12
  4121c7:	je     4121e9 <flatcc_builder_create_union_vector@@Base+0x89>
  4121c9:	xor    edi,edi
  4121cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4121d0:	movzx  ecx,BYTE PTR [rbp+rdi*8+0x0]
  4121d5:	mov    BYTE PTR [r13+rdi*1+0x0],cl
  4121da:	mov    ecx,DWORD PTR [rbp+rdi*8+0x4]
  4121de:	mov    DWORD PTR [rax+rdi*4],ecx
  4121e1:	inc    rdi
  4121e4:	cmp    r12,rdi
  4121e7:	jne    4121d0 <flatcc_builder_create_union_vector@@Base+0x70>
  4121e9:	mov    rcx,r12
  4121ec:	mov    rdx,rax
  4121ef:	mov    rsi,r13
  4121f2:	mov    rdi,rbx
  4121f5:	call   4120d0 <flatcc_builder_create_union_vector_direct@@Base>
  4121fa:	mov    edx,DWORD PTR [rbx+0x20]
  4121fd:	mov    rdi,QWORD PTR [rbx+0x18]
  412201:	xor    esi,esi
  412203:	mov    rbp,rax
  412206:	call   4041b0 <memset@plt>
  41220b:	mov    rax,QWORD PTR [rbx+0x30]
  41220f:	mov    edx,DWORD PTR [rax+0x8]
  412212:	mov    esi,DWORD PTR [rax]
  412214:	mov    DWORD PTR [rbx+0x20],edx
  412217:	mov    DWORD PTR [rbx+0x28],esi
  41221a:	mov    rdx,rsi
  41221d:	add    rsi,QWORD PTR [rbx+0x68]
  412221:	mov    ecx,DWORD PTR [rax+0x4]
  412224:	mov    QWORD PTR [rbx+0x18],rsi
  412228:	mov    esi,DWORD PTR [rbx+0x70]
  41222b:	sub    esi,edx
  41222d:	mov    edx,esi
  41222f:	cmp    ecx,esi
  412231:	cmovb  edx,ecx
  412234:	mov    DWORD PTR [rbx+0x24],edx
  412237:	movzx  edx,WORD PTR [rbx+0xea]
  41223e:	mov    DWORD PTR [rax+0x4],ecx
  412241:	cmp    dx,WORD PTR [rbx+0xe8]
  412248:	jbe    412251 <flatcc_builder_create_union_vector@@Base+0xf1>
  41224a:	mov    WORD PTR [rbx+0xe8],dx
  412251:	movzx  edx,WORD PTR [rax+0xc]
  412255:	sub    rax,0x24
  412259:	mov    QWORD PTR [rbx+0x30],rax
  41225d:	mov    WORD PTR [rbx+0xea],dx
  412264:	dec    DWORD PTR [rbx+0x104]
  41226a:	add    rsp,0x8
  41226e:	pop    rbx
  41226f:	mov    rax,rbp
  412272:	pop    rbp
  412273:	pop    r12
  412275:	pop    r13
  412277:	ret    
  412278:	nop    DWORD PTR [rax+rax*1+0x0]
  412280:	lea    esi,[rax+0x1]
  412283:	mov    edx,0xfffffffc
  412288:	mov    rdi,rbx
  41228b:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  412290:	test   eax,eax
  412292:	je     4121b6 <flatcc_builder_create_union_vector@@Base+0x56>
  412298:	jmp    412180 <flatcc_builder_create_union_vector@@Base+0x20>
  41229d:	nop    DWORD PTR [rax]

00000000004122a0 <flatcc_builder_start_union_vector@@Base>:
  4122a0:	endbr64 
  4122a4:	push   rbx
  4122a5:	mov    esi,0x4
  4122aa:	mov    rbx,rdi
  4122ad:	call   40f670 <flatcc_builder_default_alloc@@Base+0x330>
  4122b2:	test   eax,eax
  4122b4:	jne    4122f0 <flatcc_builder_start_union_vector@@Base+0x50>
  4122b6:	mov    rcx,QWORD PTR [rbx+0x30]
  4122ba:	xor    edx,edx
  4122bc:	mov    QWORD PTR [rcx+0xe],0x80007
  4122c4:	mov    WORD PTR [rcx+0x16],dx
  4122c8:	mov    edx,DWORD PTR [rbx+0x28]
  4122cb:	mov    rsi,rdx
  4122ce:	add    rdx,QWORD PTR [rbx+0x68]
  4122d2:	mov    QWORD PTR [rbx+0x18],rdx
  4122d6:	mov    edx,DWORD PTR [rbx+0x70]
  4122d9:	sub    edx,esi
  4122db:	mov    esi,0xfffffffc
  4122e0:	cmp    edx,esi
  4122e2:	cmova  edx,esi
  4122e5:	mov    DWORD PTR [rbx+0x24],edx
  4122e8:	mov    DWORD PTR [rcx+0x4],esi
  4122eb:	pop    rbx
  4122ec:	ret    
  4122ed:	nop    DWORD PTR [rax]
  4122f0:	mov    eax,0xffffffff
  4122f5:	pop    rbx
  4122f6:	ret    
  4122f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412300 <flatcc_builder_union_vector_edit@@Base>:
  412300:	endbr64 
  412304:	mov    rax,QWORD PTR [rdi+0x18]
  412308:	ret    
  412309:	nop    DWORD PTR [rax+0x0]

0000000000412310 <flatcc_builder_union_vector_count@@Base>:
  412310:	endbr64 
  412314:	mov    rax,QWORD PTR [rdi+0x30]
  412318:	mov    eax,DWORD PTR [rax+0x14]
  41231b:	ret    
  41231c:	nop    DWORD PTR [rax+0x0]

0000000000412320 <flatcc_builder_end_union_vector@@Base>:
  412320:	endbr64 
  412324:	push   r13
  412326:	push   r12
  412328:	push   rbp
  412329:	push   rbx
  41232a:	sub    rsp,0x8
  41232e:	mov    rax,QWORD PTR [rdi+0x30]
  412332:	cmp    WORD PTR [rax+0xe],0x7
  412337:	jne    41245d <flatcc_builder_end_union_vector@@Base+0x13d>
  41233d:	mov    rbx,rdi
  412340:	call   412310 <flatcc_builder_union_vector_count@@Base>
  412345:	mov    ebp,DWORD PTR [rbx+0x20]
  412348:	mov    r12,rax
  41234b:	lea    eax,[rax+rax*4]
  41234e:	add    eax,ebp
  412350:	mov    DWORD PTR [rbx+0x20],eax
  412353:	cmp    eax,DWORD PTR [rbx+0x24]
  412356:	jae    412438 <flatcc_builder_end_union_vector@@Base+0x118>
  41235c:	add    rbp,QWORD PTR [rbx+0x18]
  412360:	je     412450 <flatcc_builder_end_union_vector@@Base+0x130>
  412366:	mov    rdi,rbx
  412369:	lea    r13,[rbp+r12*4+0x0]
  41236e:	call   412300 <flatcc_builder_union_vector_edit@@Base>
  412373:	test   r12,r12
  412376:	je     41239c <flatcc_builder_end_union_vector@@Base+0x7c>
  412378:	xor    edi,edi
  41237a:	nop    WORD PTR [rax+rax*1+0x0]
  412380:	movzx  r8d,BYTE PTR [rax+rdi*8]
  412385:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  41238a:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  41238f:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  412394:	inc    rdi
  412397:	cmp    r12,rdi
  41239a:	jne    412380 <flatcc_builder_end_union_vector@@Base+0x60>
  41239c:	mov    rcx,r12
  41239f:	mov    rdx,rbp
  4123a2:	mov    rsi,r13
  4123a5:	mov    rdi,rbx
  4123a8:	call   4120d0 <flatcc_builder_create_union_vector_direct@@Base>
  4123ad:	mov    edx,DWORD PTR [rbx+0x20]
  4123b0:	mov    rdi,QWORD PTR [rbx+0x18]
  4123b4:	xor    esi,esi
  4123b6:	mov    rbp,rax
  4123b9:	call   4041b0 <memset@plt>
  4123be:	mov    rdx,QWORD PTR [rbx+0x30]
  4123c2:	mov    esi,DWORD PTR [rdx]
  4123c4:	mov    eax,DWORD PTR [rdx+0x8]
  4123c7:	mov    rcx,rsi
  4123ca:	mov    DWORD PTR [rbx+0x28],esi
  4123cd:	add    rsi,QWORD PTR [rbx+0x68]
  4123d1:	mov    DWORD PTR [rbx+0x20],eax
  4123d4:	mov    eax,DWORD PTR [rdx+0x4]
  4123d7:	mov    QWORD PTR [rbx+0x18],rsi
  4123db:	mov    esi,DWORD PTR [rbx+0x70]
  4123de:	sub    esi,ecx
  4123e0:	cmp    eax,esi
  4123e2:	mov    ecx,esi
  4123e4:	cmovb  ecx,eax
  4123e7:	mov    DWORD PTR [rbx+0x24],ecx
  4123ea:	mov    DWORD PTR [rdx+0x4],eax
  4123ed:	movzx  eax,WORD PTR [rbx+0xea]
  4123f4:	cmp    ax,WORD PTR [rbx+0xe8]
  4123fb:	ja     412428 <flatcc_builder_end_union_vector@@Base+0x108>
  4123fd:	movzx  eax,WORD PTR [rdx+0xc]
  412401:	dec    DWORD PTR [rbx+0x104]
  412407:	sub    rdx,0x24
  41240b:	mov    WORD PTR [rbx+0xea],ax
  412412:	mov    QWORD PTR [rbx+0x30],rdx
  412416:	add    rsp,0x8
  41241a:	mov    rax,rbp
  41241d:	pop    rbx
  41241e:	pop    rbp
  41241f:	pop    r12
  412421:	pop    r13
  412423:	ret    
  412424:	nop    DWORD PTR [rax+0x0]
  412428:	mov    WORD PTR [rbx+0xe8],ax
  41242f:	jmp    4123fd <flatcc_builder_end_union_vector@@Base+0xdd>
  412431:	nop    DWORD PTR [rax+0x0]
  412438:	lea    esi,[rax+0x1]
  41243b:	mov    edx,0xfffffffc
  412440:	mov    rdi,rbx
  412443:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  412448:	test   eax,eax
  41244a:	je     41235c <flatcc_builder_end_union_vector@@Base+0x3c>
  412450:	add    rsp,0x8
  412454:	pop    rbx
  412455:	pop    rbp
  412456:	pop    r12
  412458:	xor    eax,eax
  41245a:	pop    r13
  41245c:	ret    
  41245d:	lea    rcx,[rip+0x77fc]        # 419c60 <_IO_stdin_used@@Base+0x3c60>
  412464:	mov    edx,0x651
  412469:	lea    rsi,[rip+0x7220]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412470:	lea    rdi,[rip+0x7491]        # 419908 <_IO_stdin_used@@Base+0x3908>
  412477:	call   4041a0 <__assert_fail@plt>
  41247c:	nop    DWORD PTR [rax+0x0]

0000000000412480 <flatcc_builder_extend_union_vector@@Base>:
  412480:	endbr64 
  412484:	push   rbp
  412485:	mov    edx,esi
  412487:	push   rbx
  412488:	sub    rsp,0x8
  41248c:	mov    rax,QWORD PTR [rdi+0x30]
  412490:	add    edx,DWORD PTR [rax+0x14]
  412493:	jb     4124d5 <flatcc_builder_extend_union_vector@@Base+0x55>
  412495:	cmp    edx,0x1fffffff
  41249b:	ja     4124d5 <flatcc_builder_extend_union_vector@@Base+0x55>
  41249d:	mov    ebp,DWORD PTR [rdi+0x20]
  4124a0:	mov    DWORD PTR [rax+0x14],edx
  4124a3:	lea    eax,[rbp+rsi*8+0x0]
  4124a7:	mov    rbx,rdi
  4124aa:	mov    DWORD PTR [rdi+0x20],eax
  4124ad:	cmp    eax,DWORD PTR [rdi+0x24]
  4124b0:	jae    4124c0 <flatcc_builder_extend_union_vector@@Base+0x40>
  4124b2:	mov    rax,QWORD PTR [rbx+0x18]
  4124b6:	add    rax,rbp
  4124b9:	add    rsp,0x8
  4124bd:	pop    rbx
  4124be:	pop    rbp
  4124bf:	ret    
  4124c0:	lea    esi,[rax+0x1]
  4124c3:	mov    edx,0xfffffffc
  4124c8:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  4124cd:	test   eax,eax
  4124cf:	je     4124b2 <flatcc_builder_extend_union_vector@@Base+0x32>
  4124d1:	xor    eax,eax
  4124d3:	jmp    4124b9 <flatcc_builder_extend_union_vector@@Base+0x39>
  4124d5:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  4124da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004124e0 <flatcc_builder_truncate_union_vector@@Base>:
  4124e0:	endbr64 
  4124e4:	sub    rsp,0x8
  4124e8:	mov    rax,QWORD PTR [rdi+0x30]
  4124ec:	cmp    WORD PTR [rax+0xe],0x7
  4124f1:	jne    412522 <flatcc_builder_truncate_union_vector@@Base+0x42>
  4124f3:	mov    edx,DWORD PTR [rax+0x14]
  4124f6:	cmp    edx,esi
  4124f8:	jb     412541 <flatcc_builder_truncate_union_vector@@Base+0x61>
  4124fa:	sub    edx,esi
  4124fc:	mov    DWORD PTR [rax+0x14],edx
  4124ff:	imul   esi,DWORD PTR [rax+0x10]
  412503:	mov    eax,DWORD PTR [rdi+0x20]
  412506:	mov    edx,esi
  412508:	sub    eax,esi
  41250a:	mov    DWORD PTR [rdi+0x20],eax
  41250d:	add    rax,QWORD PTR [rdi+0x18]
  412511:	mov    rdi,rax
  412514:	xor    esi,esi
  412516:	call   4041b0 <memset@plt>
  41251b:	xor    eax,eax
  41251d:	add    rsp,0x8
  412521:	ret    
  412522:	lea    rcx,[rip+0x76f7]        # 419c20 <_IO_stdin_used@@Base+0x3c20>
  412529:	mov    edx,0x681
  41252e:	lea    rsi,[rip+0x715b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412535:	lea    rdi,[rip+0x73cc]        # 419908 <_IO_stdin_used@@Base+0x3908>
  41253c:	call   4041a0 <__assert_fail@plt>
  412541:	lea    rcx,[rip+0x76d8]        # 419c20 <_IO_stdin_used@@Base+0x3c20>
  412548:	mov    edx,0x682
  41254d:	lea    rsi,[rip+0x713c]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412554:	lea    rdi,[rip+0x7315]        # 419870 <_IO_stdin_used@@Base+0x3870>
  41255b:	call   4041a0 <__assert_fail@plt>

0000000000412560 <flatcc_builder_union_vector_push@@Base>:
  412560:	endbr64 
  412564:	push   r12
  412566:	push   rbp
  412567:	push   rbx
  412568:	mov    rdx,QWORD PTR [rdi+0x30]
  41256c:	cmp    WORD PTR [rdx+0xe],0x7
  412571:	jne    4125c8 <flatcc_builder_union_vector_push@@Base+0x68>
  412573:	mov    eax,DWORD PTR [rdx+0x14]
  412576:	cmp    eax,0x1fffffff
  41257b:	je     4125c1 <flatcc_builder_union_vector_push@@Base+0x61>
  41257d:	mov    ebp,DWORD PTR [rdi+0x20]
  412580:	inc    eax
  412582:	mov    DWORD PTR [rdx+0x14],eax
  412585:	lea    edx,[rbp+0x8]
  412588:	mov    rbx,rdi
  41258b:	mov    r12,rsi
  41258e:	mov    DWORD PTR [rdi+0x20],edx
  412591:	cmp    edx,DWORD PTR [rdi+0x24]
  412594:	jae    4125b0 <flatcc_builder_union_vector_push@@Base+0x50>
  412596:	mov    rax,rbp
  412599:	add    rax,QWORD PTR [rbx+0x18]
  41259d:	je     4125a2 <flatcc_builder_union_vector_push@@Base+0x42>
  41259f:	mov    QWORD PTR [rax],r12
  4125a2:	pop    rbx
  4125a3:	pop    rbp
  4125a4:	pop    r12
  4125a6:	ret    
  4125a7:	nop    WORD PTR [rax+rax*1+0x0]
  4125b0:	lea    esi,[rbp+0x9]
  4125b3:	mov    edx,0xfffffffc
  4125b8:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  4125bd:	test   eax,eax
  4125bf:	je     412596 <flatcc_builder_union_vector_push@@Base+0x36>
  4125c1:	pop    rbx
  4125c2:	pop    rbp
  4125c3:	xor    eax,eax
  4125c5:	pop    r12
  4125c7:	ret    
  4125c8:	lea    rcx,[rip+0x7611]        # 419be0 <_IO_stdin_used@@Base+0x3be0>
  4125cf:	mov    edx,0x68d
  4125d4:	lea    rsi,[rip+0x70b5]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4125db:	lea    rdi,[rip+0x7326]        # 419908 <_IO_stdin_used@@Base+0x3908>
  4125e2:	call   4041a0 <__assert_fail@plt>
  4125e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004125f0 <flatcc_builder_append_union_vector@@Base>:
  4125f0:	endbr64 
  4125f4:	push   r13
  4125f6:	push   r12
  4125f8:	push   rbp
  4125f9:	push   rbx
  4125fa:	sub    rsp,0x8
  4125fe:	mov    rax,QWORD PTR [rdi+0x30]
  412602:	cmp    WORD PTR [rax+0xe],0x7
  412607:	jne    412676 <flatcc_builder_append_union_vector@@Base+0x86>
  412609:	mov    ecx,edx
  41260b:	add    ecx,DWORD PTR [rax+0x14]
  41260e:	jb     412695 <flatcc_builder_append_union_vector@@Base+0xa5>
  412614:	cmp    ecx,0x1fffffff
  41261a:	ja     412695 <flatcc_builder_append_union_vector@@Base+0xa5>
  41261c:	mov    r12d,DWORD PTR [rdi+0x20]
  412620:	lea    ebx,[rdx*8+0x0]
  412627:	mov    rdx,r12
  41262a:	add    edx,ebx
  41262c:	mov    DWORD PTR [rax+0x14],ecx
  41262f:	mov    rbp,rdi
  412632:	mov    r13,rsi
  412635:	mov    DWORD PTR [rdi+0x20],edx
  412638:	cmp    edx,DWORD PTR [rdi+0x24]
  41263b:	jae    412660 <flatcc_builder_append_union_vector@@Base+0x70>
  41263d:	add    r12,QWORD PTR [rbp+0x18]
  412641:	je     412650 <flatcc_builder_append_union_vector@@Base+0x60>
  412643:	mov    edx,ebx
  412645:	mov    rsi,r13
  412648:	mov    rdi,r12
  41264b:	call   4041f0 <memcpy@plt>
  412650:	add    rsp,0x8
  412654:	pop    rbx
  412655:	pop    rbp
  412656:	mov    rax,r12
  412659:	pop    r12
  41265b:	pop    r13
  41265d:	ret    
  41265e:	xchg   ax,ax
  412660:	lea    esi,[rdx+0x1]
  412663:	mov    edx,0xfffffffc
  412668:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  41266d:	test   eax,eax
  41266f:	je     41263d <flatcc_builder_append_union_vector@@Base+0x4d>
  412671:	xor    r12d,r12d
  412674:	jmp    412650 <flatcc_builder_append_union_vector@@Base+0x60>
  412676:	lea    rcx,[rip+0x7523]        # 419ba0 <_IO_stdin_used@@Base+0x3ba0>
  41267d:	mov    edx,0x69c
  412682:	lea    rsi,[rip+0x7007]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412689:	lea    rdi,[rip+0x7278]        # 419908 <_IO_stdin_used@@Base+0x3908>
  412690:	call   4041a0 <__assert_fail@plt>
  412695:	call   40f640 <flatcc_builder_default_alloc@@Base+0x300>
  41269a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004126a0 <flatcc_builder_create_string@@Base>:
  4126a0:	endbr64 
  4126a4:	push   rbp
  4126a5:	push   rbx
  4126a6:	sub    rsp,0xb8
  4126ad:	mov    rax,QWORD PTR fs:0x28
  4126b6:	mov    QWORD PTR [rsp+0xa8],rax
  4126be:	xor    eax,eax
  4126c0:	mov    eax,0xffffffff
  4126c5:	cmp    rdx,rax
  4126c8:	ja     412790 <flatcc_builder_create_string@@Base+0xf0>
  4126ce:	mov    rbx,rdi
  4126d1:	mov    edi,DWORD PTR [rdi+0xf0]
  4126d7:	lea    rcx,[rsp+0xc]
  4126dc:	lea    eax,[rdi-0x1]
  4126df:	sub    eax,edx
  4126e1:	and    eax,0x3
  4126e4:	mov    DWORD PTR [rsp+0xc],edx
  4126e8:	inc    eax
  4126ea:	mov    QWORD PTR [rsp+0x20],rcx
  4126ef:	mov    QWORD PTR [rsp+0x28],0x4
  4126f8:	test   rdx,rdx
  4126fb:	jne    412770 <flatcc_builder_create_string@@Base+0xd0>
  4126fd:	mov    edx,0x2
  412702:	mov    ecx,0x1
  412707:	mov    r8d,0x4
  41270d:	add    r8,rax
  412710:	mov    rsi,0x41a180
  412717:	mov    ebp,edi
  412719:	shl    rcx,0x4
  41271d:	sub    ebp,r8d
  412720:	mov    QWORD PTR [rsp+0x10],r8
  412725:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  41272a:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  41272f:	mov    DWORD PTR [rsp+0x18],edx
  412733:	cmp    edi,ebp
  412735:	jle    412794 <flatcc_builder_create_string@@Base+0xf4>
  412737:	mov    rdi,QWORD PTR [rbx+0x38]
  41273b:	lea    rsi,[rsp+0x20]
  412740:	mov    ecx,ebp
  412742:	call   QWORD PTR [rbx+0x48]
  412745:	test   eax,eax
  412747:	jne    4127b8 <flatcc_builder_create_string@@Base+0x118>
  412749:	mov    DWORD PTR [rbx+0xf0],ebp
  41274f:	mov    rbx,QWORD PTR [rsp+0xa8]
  412757:	xor    rbx,QWORD PTR fs:0x28
  412760:	mov    eax,ebp
  412762:	jne    4127b3 <flatcc_builder_create_string@@Base+0x113>
  412764:	add    rsp,0xb8
  41276b:	pop    rbx
  41276c:	pop    rbp
  41276d:	ret    
  41276e:	xchg   ax,ax
  412770:	lea    r8,[rdx+0x4]
  412774:	mov    QWORD PTR [rsp+0x38],rdx
  412779:	mov    QWORD PTR [rsp+0x30],rsi
  41277e:	mov    edx,0x3
  412783:	mov    ecx,0x2
  412788:	jmp    41270d <flatcc_builder_create_string@@Base+0x6d>
  41278d:	nop    DWORD PTR [rax]
  412790:	xor    ebp,ebp
  412792:	jmp    41274f <flatcc_builder_create_string@@Base+0xaf>
  412794:	lea    rcx,[rip+0x7935]        # 41a0d0 <_IO_stdin_used@@Base+0x40d0>
  41279b:	mov    edx,0x287
  4127a0:	lea    rsi,[rip+0x6ee9]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4127a7:	lea    rdi,[rip+0x7279]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  4127ae:	call   4041a0 <__assert_fail@plt>
  4127b3:	call   404180 <__stack_chk_fail@plt>
  4127b8:	call   40f610 <flatcc_builder_default_alloc@@Base+0x2d0>
  4127bd:	nop    DWORD PTR [rax]

00000000004127c0 <flatcc_builder_create_string_str@@Base>:
  4127c0:	endbr64 
  4127c4:	push   rbp
  4127c5:	mov    rbp,rdi
  4127c8:	mov    rdi,rsi
  4127cb:	push   rbx
  4127cc:	mov    rbx,rsi
  4127cf:	sub    rsp,0x8
  4127d3:	call   404170 <strlen@plt>
  4127d8:	add    rsp,0x8
  4127dc:	mov    rsi,rbx
  4127df:	pop    rbx
  4127e0:	mov    rdi,rbp
  4127e3:	mov    rdx,rax
  4127e6:	pop    rbp
  4127e7:	jmp    4126a0 <flatcc_builder_create_string@@Base>
  4127ec:	nop    DWORD PTR [rax+0x0]

00000000004127f0 <flatcc_builder_create_string_strn@@Base>:
  4127f0:	endbr64 
  4127f4:	push   r12
  4127f6:	mov    r12,rdi
  4127f9:	push   rbp
  4127fa:	mov    rbp,rsi
  4127fd:	mov    rdi,rbp
  412800:	push   rbx
  412801:	xor    esi,esi
  412803:	mov    rbx,rdx
  412806:	call   4041c0 <memchr@plt>
  41280b:	mov    rdx,rax
  41280e:	sub    rdx,rbp
  412811:	test   rax,rax
  412814:	cmovne rbx,rdx
  412818:	mov    rsi,rbp
  41281b:	mov    rdx,rbx
  41281e:	pop    rbx
  41281f:	pop    rbp
  412820:	mov    rdi,r12
  412823:	pop    r12
  412825:	jmp    4126a0 <flatcc_builder_create_string@@Base>
  41282a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412830 <flatcc_builder_end_string@@Base>:
  412830:	endbr64 
  412834:	push   rbp
  412835:	push   rbx
  412836:	sub    rsp,0x8
  41283a:	mov    rax,QWORD PTR [rdi+0x30]
  41283e:	cmp    WORD PTR [rax+0xe],0x6
  412843:	jne    412905 <flatcc_builder_end_string@@Base+0xd5>
  412849:	mov    edx,DWORD PTR [rdi+0x20]
  41284c:	mov    rbx,rdi
  41284f:	cmp    DWORD PTR [rax+0x14],edx
  412852:	jne    4128e6 <flatcc_builder_end_string@@Base+0xb6>
  412858:	mov    rsi,QWORD PTR [rdi+0x18]
  41285c:	call   4126a0 <flatcc_builder_create_string@@Base>
  412861:	mov    ebp,eax
  412863:	test   eax,eax
  412865:	jne    412870 <flatcc_builder_end_string@@Base+0x40>
  412867:	add    rsp,0x8
  41286b:	pop    rbx
  41286c:	mov    eax,ebp
  41286e:	pop    rbp
  41286f:	ret    
  412870:	mov    edx,DWORD PTR [rbx+0x20]
  412873:	mov    rdi,QWORD PTR [rbx+0x18]
  412877:	xor    esi,esi
  412879:	call   4041b0 <memset@plt>
  41287e:	mov    rax,QWORD PTR [rbx+0x30]
  412882:	mov    edi,DWORD PTR [rbx+0x70]
  412885:	mov    edx,DWORD PTR [rax+0x8]
  412888:	mov    esi,DWORD PTR [rax]
  41288a:	mov    ecx,DWORD PTR [rax+0x4]
  41288d:	mov    DWORD PTR [rbx+0x20],edx
  412890:	mov    rdx,rsi
  412893:	sub    edi,edx
  412895:	mov    DWORD PTR [rbx+0x28],esi
  412898:	mov    edx,edi
  41289a:	add    rsi,QWORD PTR [rbx+0x68]
  41289e:	cmp    ecx,edi
  4128a0:	cmovb  edx,ecx
  4128a3:	mov    QWORD PTR [rbx+0x18],rsi
  4128a7:	mov    DWORD PTR [rbx+0x24],edx
  4128aa:	movzx  edx,WORD PTR [rbx+0xea]
  4128b1:	mov    DWORD PTR [rax+0x4],ecx
  4128b4:	cmp    dx,WORD PTR [rbx+0xe8]
  4128bb:	jbe    4128c4 <flatcc_builder_end_string@@Base+0x94>
  4128bd:	mov    WORD PTR [rbx+0xe8],dx
  4128c4:	movzx  edx,WORD PTR [rax+0xc]
  4128c8:	dec    DWORD PTR [rbx+0x104]
  4128ce:	sub    rax,0x24
  4128d2:	mov    QWORD PTR [rbx+0x30],rax
  4128d6:	mov    WORD PTR [rbx+0xea],dx
  4128dd:	add    rsp,0x8
  4128e1:	mov    eax,ebp
  4128e3:	pop    rbx
  4128e4:	pop    rbp
  4128e5:	ret    
  4128e6:	lea    rcx,[rip+0x7293]        # 419b80 <_IO_stdin_used@@Base+0x3b80>
  4128ed:	mov    edx,0x6c5
  4128f2:	lea    rsi,[rip+0x6d97]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4128f9:	lea    rdi,[rip+0x7040]        # 419940 <_IO_stdin_used@@Base+0x3940>
  412900:	call   4041a0 <__assert_fail@plt>
  412905:	lea    rcx,[rip+0x7274]        # 419b80 <_IO_stdin_used@@Base+0x3b80>
  41290c:	mov    edx,0x6c4
  412911:	lea    rsi,[rip+0x6d78]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412918:	lea    rdi,[rip+0x6ef9]        # 419818 <_IO_stdin_used@@Base+0x3818>
  41291f:	call   4041a0 <__assert_fail@plt>
  412924:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41292f:	nop

0000000000412930 <flatcc_builder_string_edit@@Base>:
  412930:	endbr64 
  412934:	mov    rax,QWORD PTR [rdi+0x18]
  412938:	ret    
  412939:	nop    DWORD PTR [rax+0x0]

0000000000412940 <flatcc_builder_string_len@@Base>:
  412940:	endbr64 
  412944:	mov    rax,QWORD PTR [rdi+0x30]
  412948:	mov    eax,DWORD PTR [rax+0x14]
  41294b:	ret    
  41294c:	nop    DWORD PTR [rax+0x0]

0000000000412950 <flatcc_builder_table_add@@Base>:
  412950:	endbr64 
  412954:	push   r13
  412956:	push   r12
  412958:	push   rbp
  412959:	push   rbx
  41295a:	sub    rsp,0x8
  41295e:	mov    rax,QWORD PTR [rdi+0x30]
  412962:	cmp    WORD PTR [rax+0xe],0x3
  412967:	jne    412a34 <flatcc_builder_table_add@@Base+0xe4>
  41296d:	mov    r12d,esi
  412970:	cmp    esi,0x7ffc
  412976:	ja     412a72 <flatcc_builder_table_add@@Base+0x122>
  41297c:	mov    rbx,rdi
  41297f:	cmp    WORD PTR [rdi+0xea],cx
  412986:	jb     4129f0 <flatcc_builder_table_add@@Base+0xa0>
  412988:	movsxd r13,r12d
  41298b:	mov    rsi,QWORD PTR [rbx+0x8]
  41298f:	add    r13,r13
  412992:	add    rsi,r13
  412995:	cmp    WORD PTR [rsi],0x0
  412999:	jne    412a53 <flatcc_builder_table_add@@Base+0x103>
  41299f:	mov    eax,DWORD PTR [rbx+0x14]
  4129a2:	movzx  ecx,cx
  4129a5:	xor    eax,r12d
  4129a8:	imul   eax,eax,0x9e3779b1
  4129ae:	xor    eax,edx
  4129b0:	imul   eax,eax,0x9e3779b1
  4129b6:	mov    DWORD PTR [rbx+0x14],eax
  4129b9:	mov    eax,DWORD PTR [rbx+0x20]
  4129bc:	lea    ebp,[rcx+rax*1-0x1]
  4129c0:	neg    ecx
  4129c2:	and    ebp,ecx
  4129c4:	add    edx,ebp
  4129c6:	mov    DWORD PTR [rbx+0x20],edx
  4129c9:	cmp    edx,DWORD PTR [rbx+0x24]
  4129cc:	jae    412a10 <flatcc_builder_table_add@@Base+0xc0>
  4129ce:	lea    eax,[rbp+0x4]
  4129d1:	mov    WORD PTR [rsi],ax
  4129d4:	cmp    r12w,WORD PTR [rbx+0x10]
  4129d9:	jae    412a00 <flatcc_builder_table_add@@Base+0xb0>
  4129db:	mov    eax,ebp
  4129dd:	add    rax,QWORD PTR [rbx+0x18]
  4129e1:	add    rsp,0x8
  4129e5:	pop    rbx
  4129e6:	pop    rbp
  4129e7:	pop    r12
  4129e9:	pop    r13
  4129eb:	ret    
  4129ec:	nop    DWORD PTR [rax+0x0]
  4129f0:	mov    WORD PTR [rdi+0xea],cx
  4129f7:	jmp    412988 <flatcc_builder_table_add@@Base+0x38>
  4129f9:	nop    DWORD PTR [rax+0x0]
  412a00:	inc    r12d
  412a03:	mov    WORD PTR [rbx+0x10],r12w
  412a08:	jmp    4129db <flatcc_builder_table_add@@Base+0x8b>
  412a0a:	nop    WORD PTR [rax+rax*1+0x0]
  412a10:	lea    esi,[rdx+0x1]
  412a13:	mov    rdi,rbx
  412a16:	mov    edx,0xfffc
  412a1b:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  412a20:	test   eax,eax
  412a22:	jne    412a30 <flatcc_builder_table_add@@Base+0xe0>
  412a24:	mov    rsi,QWORD PTR [rbx+0x8]
  412a28:	add    rsi,r13
  412a2b:	jmp    4129ce <flatcc_builder_table_add@@Base+0x7e>
  412a2d:	nop    DWORD PTR [rax]
  412a30:	xor    eax,eax
  412a32:	jmp    4129e1 <flatcc_builder_table_add@@Base+0x91>
  412a34:	lea    rcx,[rip+0x7125]        # 419b60 <_IO_stdin_used@@Base+0x3b60>
  412a3b:	mov    edx,0x6ed
  412a40:	lea    rsi,[rip+0x6c49]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412a47:	lea    rdi,[rip+0x6e8a]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  412a4e:	call   4041a0 <__assert_fail@plt>
  412a53:	lea    rcx,[rip+0x7106]        # 419b60 <_IO_stdin_used@@Base+0x3b60>
  412a5a:	mov    edx,0x6f8
  412a5f:	lea    rsi,[rip+0x6c2a]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412a66:	lea    rdi,[rip+0x6fba]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  412a6d:	call   4041a0 <__assert_fail@plt>
  412a72:	lea    rcx,[rip+0x70e7]        # 419b60 <_IO_stdin_used@@Base+0x3b60>
  412a79:	mov    edx,0x6ee
  412a7e:	lea    rsi,[rip+0x6c0b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412a85:	lea    rdi,[rip+0x6edc]        # 419968 <_IO_stdin_used@@Base+0x3968>
  412a8c:	call   4041a0 <__assert_fail@plt>
  412a91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412a9c:	nop    DWORD PTR [rax+0x0]

0000000000412aa0 <flatcc_builder_table_edit@@Base>:
  412aa0:	endbr64 
  412aa4:	mov    rax,QWORD PTR [rdi+0x30]
  412aa8:	cmp    WORD PTR [rax+0xe],0x3
  412aad:	jne    412aba <flatcc_builder_table_edit@@Base+0x1a>
  412aaf:	mov    eax,DWORD PTR [rdi+0x20]
  412ab2:	sub    rax,rsi
  412ab5:	add    rax,QWORD PTR [rdi+0x18]
  412ab9:	ret    
  412aba:	push   rax
  412abb:	lea    rcx,[rip+0x707e]        # 419b40 <_IO_stdin_used@@Base+0x3b40>
  412ac2:	mov    edx,0x702
  412ac7:	lea    rsi,[rip+0x6bc2]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412ace:	lea    rdi,[rip+0x6e03]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  412ad5:	call   4041a0 <__assert_fail@plt>
  412ada:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412ae0 <flatcc_builder_table_add_copy@@Base>:
  412ae0:	endbr64 
  412ae4:	push   rbp
  412ae5:	mov    rbp,rdx
  412ae8:	push   rbx
  412ae9:	mov    rbx,rcx
  412aec:	mov    rdx,rbx
  412aef:	movzx  ecx,r8w
  412af3:	sub    rsp,0x8
  412af7:	call   412950 <flatcc_builder_table_add@@Base>
  412afc:	mov    rcx,rax
  412aff:	test   rax,rax
  412b02:	je     412b15 <flatcc_builder_table_add_copy@@Base+0x35>
  412b04:	mov    rdx,rbx
  412b07:	mov    rsi,rbp
  412b0a:	mov    rdi,rax
  412b0d:	call   4041f0 <memcpy@plt>
  412b12:	mov    rcx,rax
  412b15:	add    rsp,0x8
  412b19:	pop    rbx
  412b1a:	mov    rax,rcx
  412b1d:	pop    rbp
  412b1e:	ret    
  412b1f:	nop

0000000000412b20 <flatcc_builder_table_add_offset@@Base>:
  412b20:	endbr64 
  412b24:	push   r13
  412b26:	push   r12
  412b28:	push   rbp
  412b29:	push   rbx
  412b2a:	sub    rsp,0x8
  412b2e:	mov    rax,QWORD PTR [rdi+0x30]
  412b32:	cmp    WORD PTR [rax+0xe],0x3
  412b37:	jne    412bf4 <flatcc_builder_table_add_offset@@Base+0xd4>
  412b3d:	mov    r12d,esi
  412b40:	cmp    esi,0x7ffc
  412b46:	ja     412c32 <flatcc_builder_table_add_offset@@Base+0x112>
  412b4c:	movsxd r13,esi
  412b4f:	mov    rdx,QWORD PTR [rdi+0x8]
  412b53:	add    r13,r13
  412b56:	add    rdx,r13
  412b59:	cmp    WORD PTR [rdx],0x0
  412b5d:	mov    rbx,rdi
  412b60:	jne    412c13 <flatcc_builder_table_add_offset@@Base+0xf3>
  412b66:	mov    eax,DWORD PTR [rdi+0x14]
  412b69:	xor    eax,esi
  412b6b:	imul   eax,eax,0x9e3779b1
  412b71:	xor    eax,0x4
  412b74:	imul   eax,eax,0x9e3779b1
  412b7a:	mov    DWORD PTR [rdi+0x14],eax
  412b7d:	mov    eax,DWORD PTR [rdi+0x20]
  412b80:	lea    ebp,[rax+0x3]
  412b83:	and    ebp,0xfffffffc
  412b86:	lea    esi,[rbp+0x4]
  412b89:	mov    DWORD PTR [rdi+0x20],esi
  412b8c:	cmp    esi,DWORD PTR [rdi+0x24]
  412b8f:	ja     412bd0 <flatcc_builder_table_add_offset@@Base+0xb0>
  412b91:	lea    eax,[rbp+0x4]
  412b94:	mov    WORD PTR [rdx],ax
  412b97:	cmp    r12w,WORD PTR [rbx+0x10]
  412b9c:	jae    412bc0 <flatcc_builder_table_add_offset@@Base+0xa0>
  412b9e:	mov    rax,QWORD PTR [rbx]
  412ba1:	lea    rdx,[rax+0x2]
  412ba5:	mov    QWORD PTR [rbx],rdx
  412ba8:	mov    WORD PTR [rax],bp
  412bab:	mov    eax,ebp
  412bad:	add    rax,QWORD PTR [rbx+0x18]
  412bb1:	add    rsp,0x8
  412bb5:	pop    rbx
  412bb6:	pop    rbp
  412bb7:	pop    r12
  412bb9:	pop    r13
  412bbb:	ret    
  412bbc:	nop    DWORD PTR [rax+0x0]
  412bc0:	lea    esi,[r12+0x1]
  412bc5:	mov    WORD PTR [rbx+0x10],si
  412bc9:	jmp    412b9e <flatcc_builder_table_add_offset@@Base+0x7e>
  412bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  412bd0:	mov    edx,0xfffc
  412bd5:	call   40f2e0 <time_struct_buffer@@Base+0xa0>
  412bda:	test   eax,eax
  412bdc:	jne    412bf0 <flatcc_builder_table_add_offset@@Base+0xd0>
  412bde:	mov    rdx,QWORD PTR [rbx+0x8]
  412be2:	add    rdx,r13
  412be5:	jmp    412b91 <flatcc_builder_table_add_offset@@Base+0x71>
  412be7:	nop    WORD PTR [rax+rax*1+0x0]
  412bf0:	xor    eax,eax
  412bf2:	jmp    412bb1 <flatcc_builder_table_add_offset@@Base+0x91>
  412bf4:	lea    rcx,[rip+0x6f25]        # 419b20 <_IO_stdin_used@@Base+0x3b20>
  412bfb:	mov    edx,0x713
  412c00:	lea    rsi,[rip+0x6a89]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412c07:	lea    rdi,[rip+0x6cca]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  412c0e:	call   4041a0 <__assert_fail@plt>
  412c13:	lea    rcx,[rip+0x6f06]        # 419b20 <_IO_stdin_used@@Base+0x3b20>
  412c1a:	mov    edx,0x71b
  412c1f:	lea    rsi,[rip+0x6a6a]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412c26:	lea    rdi,[rip+0x6dfa]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  412c2d:	call   4041a0 <__assert_fail@plt>
  412c32:	lea    rcx,[rip+0x6ee7]        # 419b20 <_IO_stdin_used@@Base+0x3b20>
  412c39:	mov    edx,0x714
  412c3e:	lea    rsi,[rip+0x6a4b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412c45:	lea    rdi,[rip+0x6d1c]        # 419968 <_IO_stdin_used@@Base+0x3968>
  412c4c:	call   4041a0 <__assert_fail@plt>
  412c51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412c5c:	nop    DWORD PTR [rax+0x0]

0000000000412c60 <flatcc_builder_table_add_union@@Base>:
  412c60:	endbr64 
  412c64:	push   r13
  412c66:	mov    r13,rdx
  412c69:	sar    r13,0x20
  412c6d:	push   r12
  412c6f:	push   rbp
  412c70:	push   rbx
  412c71:	sub    rsp,0x8
  412c75:	mov    rax,QWORD PTR [rdi+0x30]
  412c79:	cmp    WORD PTR [rax+0xe],0x3
  412c7e:	jne    412cf4 <flatcc_builder_table_add_union@@Base+0x94>
  412c80:	mov    r12,rdi
  412c83:	mov    ebx,esi
  412c85:	mov    rbp,rdx
  412c88:	test   dl,dl
  412c8a:	je     412cd0 <flatcc_builder_table_add_union@@Base+0x70>
  412c8c:	test   r13d,r13d
  412c8f:	je     412ca2 <flatcc_builder_table_add_union@@Base+0x42>
  412c91:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  412c96:	test   rax,rax
  412c99:	je     412d32 <flatcc_builder_table_add_union@@Base+0xd2>
  412c9f:	mov    DWORD PTR [rax],r13d
  412ca2:	lea    esi,[rbx-0x1]
  412ca5:	mov    ecx,0x1
  412caa:	mov    edx,0x1
  412caf:	mov    rdi,r12
  412cb2:	call   412950 <flatcc_builder_table_add@@Base>
  412cb7:	test   rax,rax
  412cba:	je     412d13 <flatcc_builder_table_add_union@@Base+0xb3>
  412cbc:	mov    BYTE PTR [rax],bpl
  412cbf:	add    rsp,0x8
  412cc3:	xor    eax,eax
  412cc5:	pop    rbx
  412cc6:	pop    rbp
  412cc7:	pop    r12
  412cc9:	pop    r13
  412ccb:	ret    
  412ccc:	nop    DWORD PTR [rax+0x0]
  412cd0:	test   r13d,r13d
  412cd3:	je     412ca2 <flatcc_builder_table_add_union@@Base+0x42>
  412cd5:	lea    rcx,[rip+0x6fd4]        # 419cb0 <_IO_stdin_used@@Base+0x3cb0>
  412cdc:	mov    edx,0x5ef
  412ce1:	lea    rsi,[rip+0x69a8]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412ce8:	lea    rdi,[rip+0x6cc1]        # 4199b0 <_IO_stdin_used@@Base+0x39b0>
  412cef:	call   4041a0 <__assert_fail@plt>
  412cf4:	lea    rcx,[rip+0x6fb5]        # 419cb0 <_IO_stdin_used@@Base+0x3cb0>
  412cfb:	mov    edx,0x5ee
  412d00:	lea    rsi,[rip+0x6989]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412d07:	lea    rdi,[rip+0x6bca]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  412d0e:	call   4041a0 <__assert_fail@plt>
  412d13:	lea    rcx,[rip+0x6f96]        # 419cb0 <_IO_stdin_used@@Base+0x3cb0>
  412d1a:	mov    edx,0x5f6
  412d1f:	lea    rsi,[rip+0x696a]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412d26:	lea    rdi,[rip+0x6d89]        # 419ab6 <_IO_stdin_used@@Base+0x3ab6>
  412d2d:	call   4041a0 <__assert_fail@plt>
  412d32:	lea    rcx,[rip+0x6f77]        # 419cb0 <_IO_stdin_used@@Base+0x3cb0>
  412d39:	mov    edx,0x5f2
  412d3e:	lea    rsi,[rip+0x694b]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412d45:	lea    rdi,[rip+0x6d60]        # 419aac <_IO_stdin_used@@Base+0x3aac>
  412d4c:	call   4041a0 <__assert_fail@plt>
  412d51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412d5c:	nop    DWORD PTR [rax+0x0]

0000000000412d60 <flatcc_builder_table_add_union_vector@@Base>:
  412d60:	endbr64 
  412d64:	push   r12
  412d66:	push   rbp
  412d67:	mov    rbp,rdx
  412d6a:	sar    rbp,0x20
  412d6e:	push   rbx
  412d6f:	sub    rsp,0x10
  412d73:	mov    rcx,QWORD PTR [rdi+0x30]
  412d77:	cmp    WORD PTR [rcx+0xe],0x3
  412d7c:	jne    412df1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  412d7e:	test   ebp,ebp
  412d80:	sete   cl
  412d83:	test   edx,edx
  412d85:	mov    r12d,esi
  412d88:	sete   sil
  412d8c:	cmp    sil,cl
  412d8f:	je     412db0 <flatcc_builder_table_add_union_vector@@Base+0x50>
  412d91:	test   edx,edx
  412d93:	setne  al
  412d96:	cmp    cl,al
  412d98:	je     412e10 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  412d9a:	mov    eax,0xffffffff
  412d9f:	add    rsp,0x10
  412da3:	pop    rbx
  412da4:	pop    rbp
  412da5:	pop    r12
  412da7:	ret    
  412da8:	nop    DWORD PTR [rax+rax*1+0x0]
  412db0:	mov    eax,edx
  412db2:	test   edx,edx
  412db4:	je     412d9f <flatcc_builder_table_add_union_vector@@Base+0x3f>
  412db6:	lea    esi,[r12-0x1]
  412dbb:	mov    QWORD PTR [rsp+0x8],rdx
  412dc0:	mov    rbx,rdi
  412dc3:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  412dc8:	test   rax,rax
  412dcb:	mov    rdx,QWORD PTR [rsp+0x8]
  412dd0:	je     412e4e <flatcc_builder_table_add_union_vector@@Base+0xee>
  412dd2:	mov    DWORD PTR [rax],edx
  412dd4:	mov    esi,r12d
  412dd7:	mov    rdi,rbx
  412dda:	call   412b20 <flatcc_builder_table_add_offset@@Base>
  412ddf:	test   rax,rax
  412de2:	je     412e2f <flatcc_builder_table_add_union_vector@@Base+0xcf>
  412de4:	mov    DWORD PTR [rax],ebp
  412de6:	add    rsp,0x10
  412dea:	xor    eax,eax
  412dec:	pop    rbx
  412ded:	pop    rbp
  412dee:	pop    r12
  412df0:	ret    
  412df1:	lea    rcx,[rip+0x6e88]        # 419c80 <_IO_stdin_used@@Base+0x3c80>
  412df8:	mov    edx,0x600
  412dfd:	lea    rsi,[rip+0x688c]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412e04:	lea    rdi,[rip+0x6acd]        # 4198d8 <_IO_stdin_used@@Base+0x38d8>
  412e0b:	call   4041a0 <__assert_fail@plt>
  412e10:	lea    rcx,[rip+0x6e69]        # 419c80 <_IO_stdin_used@@Base+0x3c80>
  412e17:	mov    edx,0x601
  412e1c:	lea    rsi,[rip+0x686d]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412e23:	lea    rdi,[rip+0x6bae]        # 4199d8 <_IO_stdin_used@@Base+0x39d8>
  412e2a:	call   4041a0 <__assert_fail@plt>
  412e2f:	lea    rcx,[rip+0x6e4a]        # 419c80 <_IO_stdin_used@@Base+0x3c80>
  412e36:	mov    edx,0x608
  412e3b:	lea    rsi,[rip+0x684e]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412e42:	lea    rdi,[rip+0x6c63]        # 419aac <_IO_stdin_used@@Base+0x3aac>
  412e49:	call   4041a0 <__assert_fail@plt>
  412e4e:	lea    rcx,[rip+0x6e2b]        # 419c80 <_IO_stdin_used@@Base+0x3c80>
  412e55:	mov    edx,0x604
  412e5a:	lea    rsi,[rip+0x682f]        # 419690 <_IO_stdin_used@@Base+0x3690>
  412e61:	lea    rdi,[rip+0x6c44]        # 419aac <_IO_stdin_used@@Base+0x3aac>
  412e68:	call   4041a0 <__assert_fail@plt>
  412e6d:	nop    DWORD PTR [rax]

0000000000412e70 <flatcc_builder_push_buffer_alignment@@Base>:
  412e70:	endbr64 
  412e74:	mov    edx,0x4
  412e79:	movzx  eax,WORD PTR [rdi+0xe8]
  412e80:	mov    WORD PTR [rdi+0xe8],dx
  412e87:	ret    
  412e88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412e90 <flatcc_builder_pop_buffer_alignment@@Base>:
  412e90:	endbr64 
  412e94:	cmp    si,WORD PTR [rdi+0xe8]
  412e9b:	jbe    412ea4 <flatcc_builder_pop_buffer_alignment@@Base+0x14>
  412e9d:	mov    WORD PTR [rdi+0xe8],si
  412ea4:	ret    
  412ea5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000412eb0 <flatcc_builder_get_buffer_alignment@@Base>:
  412eb0:	endbr64 
  412eb4:	movzx  eax,WORD PTR [rdi+0xe8]
  412ebb:	ret    
  412ebc:	nop    DWORD PTR [rax+0x0]

0000000000412ec0 <flatcc_builder_set_vtable_clustering@@Base>:
  412ec0:	endbr64 
  412ec4:	xor    eax,eax
  412ec6:	test   esi,esi
  412ec8:	sete   al
  412ecb:	mov    DWORD PTR [rdi+0x124],eax
  412ed1:	ret    
  412ed2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412edd:	nop    DWORD PTR [rax]

0000000000412ee0 <flatcc_builder_set_block_align@@Base>:
  412ee0:	endbr64 
  412ee4:	mov    WORD PTR [rdi+0xec],si
  412eeb:	ret    
  412eec:	nop    DWORD PTR [rax+0x0]

0000000000412ef0 <flatcc_builder_get_level@@Base>:
  412ef0:	endbr64 
  412ef4:	mov    eax,DWORD PTR [rdi+0x104]
  412efa:	ret    
  412efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412f00 <flatcc_builder_set_max_level@@Base>:
  412f00:	endbr64 
  412f04:	mov    DWORD PTR [rdi+0x120],esi
  412f0a:	cmp    DWORD PTR [rdi+0x108],esi
  412f10:	jge    412f18 <flatcc_builder_set_max_level@@Base+0x18>
  412f12:	mov    DWORD PTR [rdi+0x108],esi
  412f18:	ret    
  412f19:	nop    DWORD PTR [rax+0x0]

0000000000412f20 <flatcc_builder_get_buffer_size@@Base>:
  412f20:	endbr64 
  412f24:	mov    eax,DWORD PTR [rdi+0xf4]
  412f2a:	sub    eax,DWORD PTR [rdi+0xf0]
  412f30:	cdqe   
  412f32:	ret    
  412f33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412f3e:	xchg   ax,ax

0000000000412f40 <flatcc_builder_get_buffer_start@@Base>:
  412f40:	endbr64 
  412f44:	mov    eax,DWORD PTR [rdi+0xf0]
  412f4a:	ret    
  412f4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412f50 <flatcc_builder_get_buffer_end@@Base>:
  412f50:	endbr64 
  412f54:	mov    eax,DWORD PTR [rdi+0xf4]
  412f5a:	ret    
  412f5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412f60 <flatcc_builder_set_vtable_cache_limit@@Base>:
  412f60:	endbr64 
  412f64:	mov    QWORD PTR [rdi+0x118],rsi
  412f6b:	ret    
  412f6c:	nop    DWORD PTR [rax+0x0]

0000000000412f70 <flatcc_builder_set_identifier@@Base>:
  412f70:	endbr64 
  412f74:	test   rsi,rsi
  412f77:	je     412f88 <flatcc_builder_set_identifier@@Base+0x18>
  412f79:	mov    eax,DWORD PTR [rsi]
  412f7b:	mov    DWORD PTR [rdi+0x110],eax
  412f81:	ret    
  412f82:	nop    WORD PTR [rax+rax*1+0x0]
  412f88:	mov    rsi,0x41a180
  412f8f:	mov    eax,DWORD PTR [rsi]
  412f91:	mov    DWORD PTR [rdi+0x110],eax
  412f97:	ret    
  412f98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412fa0 <flatcc_builder_get_type@@Base>:
  412fa0:	endbr64 
  412fa4:	mov    rdx,QWORD PTR [rdi+0x30]
  412fa8:	xor    eax,eax
  412faa:	test   rdx,rdx
  412fad:	je     412fb3 <flatcc_builder_get_type@@Base+0x13>
  412faf:	movzx  eax,WORD PTR [rdx+0xe]
  412fb3:	ret    
  412fb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412fbf:	nop

0000000000412fc0 <flatcc_builder_get_type_at@@Base>:
  412fc0:	endbr64 
  412fc4:	xor    eax,eax
  412fc6:	test   esi,esi
  412fc8:	jle    412fe9 <flatcc_builder_get_type_at@@Base+0x29>
  412fca:	mov    edx,DWORD PTR [rdi+0x104]
  412fd0:	cmp    edx,esi
  412fd2:	jl     412fe9 <flatcc_builder_get_type_at@@Base+0x29>
  412fd4:	sub    esi,edx
  412fd6:	movsxd rsi,esi
  412fd9:	mov    rdx,QWORD PTR [rdi+0x30]
  412fdd:	lea    rax,[rsi+rsi*8]
  412fe1:	lea    rax,[rdx+rax*4]
  412fe5:	movzx  eax,WORD PTR [rax+0xe]
  412fe9:	ret    
  412fea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412ff0 <flatcc_builder_get_direct_buffer@@Base>:
  412ff0:	endbr64 
  412ff4:	mov    eax,DWORD PTR [rdi+0x128]
  412ffa:	test   eax,eax
  412ffc:	jne    413010 <flatcc_builder_get_direct_buffer@@Base+0x20>
  412ffe:	xor    eax,eax
  413000:	test   rsi,rsi
  413003:	je     41300c <flatcc_builder_get_direct_buffer@@Base+0x1c>
  413005:	mov    QWORD PTR [rsi],0x0
  41300c:	ret    
  41300d:	nop    DWORD PTR [rax]
  413010:	mov    rax,QWORD PTR [rdi+0x138]
  413017:	cmp    QWORD PTR [rdi+0x130],rax
  41301e:	jne    412ffe <flatcc_builder_get_direct_buffer@@Base+0xe>
  413020:	test   rsi,rsi
  413023:	je     41302f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  413025:	mov    rax,QWORD PTR [rdi+0x160]
  41302c:	mov    QWORD PTR [rsi],rax
  41302f:	mov    rax,QWORD PTR [rdi+0x140]
  413036:	ret    
  413037:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413040 <flatcc_builder_copy_buffer@@Base>:
  413040:	endbr64 
  413044:	mov    eax,DWORD PTR [rdi+0x128]
  41304a:	test   eax,eax
  41304c:	je     413070 <flatcc_builder_copy_buffer@@Base+0x30>
  41304e:	sub    rsp,0x8
  413052:	add    rdi,0x130
  413059:	call   4138b0 <flatcc_emitter_copy_buffer@@Base>
  41305e:	test   rax,rax
  413061:	je     413073 <flatcc_builder_copy_buffer@@Base+0x33>
  413063:	add    rsp,0x8
  413067:	ret    
  413068:	nop    DWORD PTR [rax+rax*1+0x0]
  413070:	xor    eax,eax
  413072:	ret    
  413073:	lea    rcx,[rip+0x6a86]        # 419b00 <_IO_stdin_used@@Base+0x3b00>
  41307a:	mov    edx,0x786
  41307f:	lea    rsi,[rip+0x660a]        # 419690 <_IO_stdin_used@@Base+0x3690>
  413086:	lea    rdi,[rip+0x35cd]        # 41665a <_IO_stdin_used@@Base+0x65a>
  41308d:	call   4041a0 <__assert_fail@plt>
  413092:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41309d:	nop    DWORD PTR [rax]

00000000004130a0 <flatcc_builder_finalize_buffer@@Base>:
  4130a0:	endbr64 
  4130a4:	push   r12
  4130a6:	mov    r12,rdi
  4130a9:	push   rbp
  4130aa:	push   rbx
  4130ab:	mov    rbx,rsi
  4130ae:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  4130b3:	mov    rbp,rax
  4130b6:	test   rbx,rbx
  4130b9:	je     4130be <flatcc_builder_finalize_buffer@@Base+0x1e>
  4130bb:	mov    QWORD PTR [rbx],rax
  4130be:	mov    rdi,rbp
  4130c1:	call   404200 <malloc@plt>
  4130c6:	mov    rbx,rax
  4130c9:	test   rax,rax
  4130cc:	je     4130e9 <flatcc_builder_finalize_buffer@@Base+0x49>
  4130ce:	mov    rdx,rbp
  4130d1:	mov    rsi,rax
  4130d4:	mov    rdi,r12
  4130d7:	call   413040 <flatcc_builder_copy_buffer@@Base>
  4130dc:	test   rax,rax
  4130df:	je     413108 <flatcc_builder_finalize_buffer@@Base+0x68>
  4130e1:	mov    rax,rbx
  4130e4:	pop    rbx
  4130e5:	pop    rbp
  4130e6:	pop    r12
  4130e8:	ret    
  4130e9:	lea    rcx,[rip+0x69f0]        # 419ae0 <_IO_stdin_used@@Base+0x3ae0>
  4130f0:	mov    edx,0x798
  4130f5:	lea    rsi,[rip+0x6594]        # 419690 <_IO_stdin_used@@Base+0x3690>
  4130fc:	lea    rdi,[rip+0x6924]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  413103:	call   4041a0 <__assert_fail@plt>
  413108:	lea    rcx,[rip+0x69d1]        # 419ae0 <_IO_stdin_used@@Base+0x3ae0>
  41310f:	mov    edx,0x79c
  413114:	lea    rsi,[rip+0x6575]        # 419690 <_IO_stdin_used@@Base+0x3690>
  41311b:	lea    rdi,[rip+0x6905]        # 419a27 <_IO_stdin_used@@Base+0x3a27>
  413122:	call   4041a0 <__assert_fail@plt>
  413127:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413130 <flatcc_builder_finalize_aligned_buffer@@Base>:
  413130:	endbr64 
  413134:	push   r13
  413136:	push   r12
  413138:	mov    r12,rsi
  41313b:	push   rbp
  41313c:	mov    rbp,rdi
  41313f:	push   rbx
  413140:	sub    rsp,0x18
  413144:	mov    rax,QWORD PTR fs:0x28
  41314d:	mov    QWORD PTR [rsp+0x8],rax
  413152:	xor    eax,eax
  413154:	call   412f20 <flatcc_builder_get_buffer_size@@Base>
  413159:	mov    rbx,rax
  41315c:	test   r12,r12
  41315f:	je     413165 <flatcc_builder_finalize_aligned_buffer@@Base+0x35>
  413161:	mov    QWORD PTR [r12],rax
  413165:	mov    rdi,rbp
  413168:	call   412eb0 <flatcc_builder_get_buffer_alignment@@Base>
  41316d:	movzx  eax,ax
  413170:	lea    rdx,[rbx+rax*1-0x1]
  413175:	mov    rbx,rax
  413178:	neg    rbx
  41317b:	and    rbx,rdx
  41317e:	mov    esi,0x8
  413183:	cmp    rax,0x8
  413187:	cmovae rsi,rax
  41318b:	mov    rdi,rsp
  41318e:	mov    rdx,rbx
  413191:	mov    QWORD PTR [rsp],0x0
  413199:	call   404240 <posix_memalign@plt>
  41319e:	test   eax,eax
  4131a0:	je     4131c8 <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
  4131a2:	mov    rdi,QWORD PTR [rsp]
  4131a6:	test   rdi,rdi
  4131a9:	je     4131b0 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
  4131ab:	call   404140 <free@plt>
  4131b0:	test   r12,r12
  4131b3:	je     413212 <flatcc_builder_finalize_aligned_buffer@@Base+0xe2>
  4131b5:	mov    QWORD PTR [r12],0x0
  4131bd:	xor    r13d,r13d
  4131c0:	jmp    4131e4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
  4131c2:	nop    WORD PTR [rax+rax*1+0x0]
  4131c8:	mov    r13,QWORD PTR [rsp]
  4131cc:	test   r13,r13
  4131cf:	je     4131b0 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
  4131d1:	mov    rdx,rbx
  4131d4:	mov    rsi,r13
  4131d7:	mov    rdi,rbp
  4131da:	call   413040 <flatcc_builder_copy_buffer@@Base>
  4131df:	test   rax,rax
  4131e2:	je     413208 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
  4131e4:	mov    rcx,QWORD PTR [rsp+0x8]
  4131e9:	xor    rcx,QWORD PTR fs:0x28
  4131f2:	mov    rax,r13
  4131f5:	jne    41320d <flatcc_builder_finalize_aligned_buffer@@Base+0xdd>
  4131f7:	add    rsp,0x18
  4131fb:	pop    rbx
  4131fc:	pop    rbp
  4131fd:	pop    r12
  4131ff:	pop    r13
  413201:	ret    
  413202:	nop    WORD PTR [rax+rax*1+0x0]
  413208:	mov    rdi,r13
  41320b:	jmp    4131ab <flatcc_builder_finalize_aligned_buffer@@Base+0x7b>
  41320d:	call   404180 <__stack_chk_fail@plt>
  413212:	xor    r13d,r13d
  413215:	jmp    4131e4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
  413217:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413220 <flatcc_builder_aligned_alloc@@Base>:
  413220:	endbr64 
  413224:	sub    rsp,0x18
  413228:	mov    rax,QWORD PTR fs:0x28
  413231:	mov    QWORD PTR [rsp+0x8],rax
  413236:	xor    eax,eax
  413238:	mov    rdx,rsi
  41323b:	cmp    rdi,0x8
  41323f:	mov    esi,0x8
  413244:	cmovae rsi,rdi
  413248:	mov    rdi,rsp
  41324b:	mov    QWORD PTR [rsp],0x0
  413253:	call   404240 <posix_memalign@plt>
  413258:	test   eax,eax
  41325a:	mov    rax,QWORD PTR [rsp]
  41325e:	je     41326f <flatcc_builder_aligned_alloc@@Base+0x4f>
  413260:	test   rax,rax
  413263:	je     41326f <flatcc_builder_aligned_alloc@@Base+0x4f>
  413265:	mov    rdi,rax
  413268:	call   404140 <free@plt>
  41326d:	xor    eax,eax
  41326f:	mov    rcx,QWORD PTR [rsp+0x8]
  413274:	xor    rcx,QWORD PTR fs:0x28
  41327d:	jne    413284 <flatcc_builder_aligned_alloc@@Base+0x64>
  41327f:	add    rsp,0x18
  413283:	ret    
  413284:	call   404180 <__stack_chk_fail@plt>
  413289:	nop    DWORD PTR [rax+0x0]

0000000000413290 <flatcc_builder_aligned_free@@Base>:
  413290:	endbr64 
  413294:	jmp    404140 <free@plt>
  413299:	nop    DWORD PTR [rax+0x0]

00000000004132a0 <flatcc_builder_get_emit_context@@Base>:
  4132a0:	endbr64 
  4132a4:	mov    rax,QWORD PTR [rdi+0x38]
  4132a8:	ret    
  4132a9:	nop    DWORD PTR [rax+0x0]

00000000004132b0 <flatcc_emitter_recycle_page@@Base>:
  4132b0:	endbr64 
  4132b4:	mov    rax,QWORD PTR [rdi]
  4132b7:	cmp    rax,rsi
  4132ba:	je     41330b <flatcc_emitter_recycle_page@@Base+0x5b>
  4132bc:	cmp    QWORD PTR [rdi+0x8],rsi
  4132c0:	je     41330b <flatcc_emitter_recycle_page@@Base+0x5b>
  4132c2:	mov    rdx,QWORD PTR [rsi+0xb88]
  4132c9:	mov    rcx,QWORD PTR [rsi+0xb80]
  4132d0:	mov    QWORD PTR [rcx+0xb88],rdx
  4132d7:	mov    QWORD PTR [rdx+0xb80],rcx
  4132de:	mov    rdx,QWORD PTR [rax+0xb88]
  4132e5:	mov    QWORD PTR [rsi+0xb80],rax
  4132ec:	mov    QWORD PTR [rsi+0xb88],rdx
  4132f3:	mov    QWORD PTR [rdx+0xb80],rsi
  4132fa:	mov    rax,QWORD PTR [rsi+0xb80]
  413301:	mov    QWORD PTR [rax+0xb88],rsi
  413308:	xor    eax,eax
  41330a:	ret    
  41330b:	mov    eax,0xffffffff
  413310:	ret    
  413311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41331c:	nop    DWORD PTR [rax+0x0]

0000000000413320 <flatcc_emitter_reset@@Base>:
  413320:	endbr64 
  413324:	mov    rax,QWORD PTR [rdi]
  413327:	test   rax,rax
  41332a:	je     413400 <flatcc_emitter_reset@@Base+0xe0>
  413330:	mov    rcx,QWORD PTR [rdi+0x40]
  413334:	mov    rsi,QWORD PTR [rdi+0x30]
  413338:	test   rcx,rcx
  41333b:	cmove  rcx,rsi
  41333f:	lea    rdx,[rax+0x5c0]
  413346:	mov    QWORD PTR [rdi+0x10],rdx
  41334a:	mov    QWORD PTR [rdi+0x20],rdx
  41334e:	lea    rdx,[rcx+rcx*2]
  413352:	shr    rdx,0x2
  413356:	shr    rsi,0x2
  41335a:	add    rdx,rsi
  41335d:	mov    QWORD PTR [rdi+0x8],rax
  413361:	mov    QWORD PTR [rdi+0x18],0x5c0
  413369:	mov    QWORD PTR [rdi+0x28],0x5c0
  413371:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41337b:	mov    QWORD PTR [rdi+0x40],rdx
  41337f:	add    rdx,rdx
  413382:	mov    QWORD PTR [rdi+0x30],0x0
  41338a:	cmp    rdx,QWORD PTR [rdi+0x38]
  41338e:	jae    413400 <flatcc_emitter_reset@@Base+0xe0>
  413390:	push   rbx
  413391:	mov    rbx,rdi
  413394:	mov    rdi,QWORD PTR [rax+0xb80]
  41339b:	cmp    rax,rdi
  41339e:	jne    4133b8 <flatcc_emitter_reset@@Base+0x98>
  4133a0:	jmp    4133f4 <flatcc_emitter_reset@@Base+0xd4>
  4133a2:	nop    WORD PTR [rax+rax*1+0x0]
  4133a8:	mov    rax,QWORD PTR [rbx+0x8]
  4133ac:	mov    rdi,QWORD PTR [rax+0xb80]
  4133b3:	cmp    rdi,QWORD PTR [rbx]
  4133b6:	je     4133f4 <flatcc_emitter_reset@@Base+0xd4>
  4133b8:	mov    rdx,QWORD PTR [rdi+0xb80]
  4133bf:	mov    QWORD PTR [rax+0xb80],rdx
  4133c6:	mov    rdx,QWORD PTR [rdi+0xb80]
  4133cd:	mov    QWORD PTR [rdx+0xb88],rax
  4133d4:	call   404140 <free@plt>
  4133d9:	mov    rax,QWORD PTR [rbx+0x38]
  4133dd:	mov    rcx,QWORD PTR [rbx+0x40]
  4133e1:	sub    rax,0xb80
  4133e7:	lea    rdx,[rcx+rcx*1]
  4133eb:	mov    QWORD PTR [rbx+0x38],rax
  4133ef:	cmp    rax,rdx
  4133f2:	ja     4133a8 <flatcc_emitter_reset@@Base+0x88>
  4133f4:	pop    rbx
  4133f5:	ret    
  4133f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413400:	ret    
  413401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41340c:	nop    DWORD PTR [rax+0x0]

0000000000413410 <flatcc_emitter_clear@@Base>:
  413410:	endbr64 
  413414:	mov    rax,QWORD PTR [rdi]
  413417:	test   rax,rax
  41341a:	je     413498 <flatcc_emitter_clear@@Base+0x88>
  41341c:	push   rbp
  41341d:	mov    rbp,rdi
  413420:	push   rbx
  413421:	sub    rsp,0x8
  413425:	mov    rdx,QWORD PTR [rax+0xb88]
  41342c:	mov    QWORD PTR [rdx+0xb80],0x0
  413437:	mov    rbx,QWORD PTR [rax+0xb80]
  41343e:	test   rbx,rbx
  413441:	jne    41344b <flatcc_emitter_clear@@Base+0x3b>
  413443:	jmp    4134a0 <flatcc_emitter_clear@@Base+0x90>
  413445:	nop    DWORD PTR [rax]
  413448:	mov    rbx,rax
  41344b:	mov    rdi,QWORD PTR [rbx+0xb88]
  413452:	call   404140 <free@plt>
  413457:	mov    rax,QWORD PTR [rbx+0xb80]
  41345e:	test   rax,rax
  413461:	jne    413448 <flatcc_emitter_clear@@Base+0x38>
  413463:	mov    rdi,rbx
  413466:	call   404140 <free@plt>
  41346b:	mov    QWORD PTR [rbp+0x40],0x0
  413473:	vpxor  xmm0,xmm0,xmm0
  413477:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41347c:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  413481:	vmovups XMMWORD PTR [rbp+0x20],xmm0
  413486:	vmovups XMMWORD PTR [rbp+0x30],xmm0
  41348b:	add    rsp,0x8
  41348f:	pop    rbx
  413490:	pop    rbp
  413491:	ret    
  413492:	nop    WORD PTR [rax+rax*1+0x0]
  413498:	ret    
  413499:	nop    DWORD PTR [rax+0x0]
  4134a0:	mov    rbx,rax
  4134a3:	jmp    413463 <flatcc_emitter_clear@@Base+0x53>
  4134a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004134b0 <flatcc_emitter@@Base>:
  4134b0:	endbr64 
  4134b4:	push   r15
  4134b6:	push   r14
  4134b8:	push   r13
  4134ba:	push   r12
  4134bc:	push   rbp
  4134bd:	mov    rbp,rsi
  4134c0:	push   rbx
  4134c1:	mov    rbx,rdi
  4134c4:	sub    rsp,0x18
  4134c8:	add    QWORD PTR [rdi+0x30],r8
  4134cc:	test   ecx,ecx
  4134ce:	js     4136e0 <flatcc_emitter@@Base+0x230>
  4134d4:	mov    rax,QWORD PTR [rdi+0x28]
  4134d8:	cmp    rax,r8
  4134db:	jae    413568 <flatcc_emitter@@Base+0xb8>
  4134e1:	test   edx,edx
  4134e3:	je     413553 <flatcc_emitter@@Base+0xa3>
  4134e5:	lea    r14d,[rdx-0x1]
  4134e9:	inc    r14
  4134ec:	shl    r14,0x4
  4134f0:	lea    rax,[rbp+r14*1+0x0]
  4134f5:	mov    QWORD PTR [rsp+0x8],rax
  4134fa:	nop    WORD PTR [rax+rax*1+0x0]
  413500:	mov    r15,QWORD PTR [rbp+0x8]
  413504:	mov    r13,QWORD PTR [rbp+0x0]
  413508:	test   r15,r15
  41350b:	je     413548 <flatcc_emitter@@Base+0x98>
  41350d:	nop    DWORD PTR [rax]
  413510:	mov    r12,QWORD PTR [rbx+0x28]
  413514:	cmp    r15,r12
  413517:	jbe    413610 <flatcc_emitter@@Base+0x160>
  41351d:	test   r12,r12
  413520:	je     4135b8 <flatcc_emitter@@Base+0x108>
  413526:	sub    r15,r12
  413529:	mov    rdi,QWORD PTR [rbx+0x20]
  41352d:	mov    rsi,r13
  413530:	mov    rdx,r12
  413533:	call   4041f0 <memcpy@plt>
  413538:	add    r13,r12
  41353b:	add    QWORD PTR [rbx+0x20],r12
  41353f:	sub    QWORD PTR [rbx+0x28],r12
  413543:	test   r15,r15
  413546:	jne    413510 <flatcc_emitter@@Base+0x60>
  413548:	add    rbp,0x10
  41354c:	cmp    rbp,QWORD PTR [rsp+0x8]
  413551:	jne    413500 <flatcc_emitter@@Base+0x50>
  413553:	add    rsp,0x18
  413557:	pop    rbx
  413558:	pop    rbp
  413559:	pop    r12
  41355b:	pop    r13
  41355d:	pop    r14
  41355f:	xor    eax,eax
  413561:	pop    r15
  413563:	ret    
  413564:	nop    DWORD PTR [rax+0x0]
  413568:	mov    rcx,QWORD PTR [rdi+0x20]
  41356c:	sub    rax,r8
  41356f:	lea    rsi,[rcx+r8*1]
  413573:	mov    QWORD PTR [rdi+0x20],rsi
  413577:	mov    QWORD PTR [rdi+0x28],rax
  41357b:	test   edx,edx
  41357d:	je     413553 <flatcc_emitter@@Base+0xa3>
  41357f:	lea    ebx,[rdx-0x1]
  413582:	inc    rbx
  413585:	shl    rbx,0x4
  413589:	add    rbx,rbp
  41358c:	nop    DWORD PTR [rax+0x0]
  413590:	mov    rsi,QWORD PTR [rbp+0x0]
  413594:	mov    rdx,QWORD PTR [rbp+0x8]
  413598:	mov    rdi,rcx
  41359b:	call   4041f0 <memcpy@plt>
  4135a0:	mov    rcx,QWORD PTR [rbp+0x8]
  4135a4:	add    rbp,0x10
  4135a8:	add    rcx,rax
  4135ab:	cmp    rbp,rbx
  4135ae:	jne    413590 <flatcc_emitter@@Base+0xe0>
  4135b0:	jmp    413553 <flatcc_emitter@@Base+0xa3>
  4135b2:	nop    WORD PTR [rax+rax*1+0x0]
  4135b8:	mov    r12,QWORD PTR [rbx+0x8]
  4135bc:	test   r12,r12
  4135bf:	je     413668 <flatcc_emitter@@Base+0x1b8>
  4135c5:	mov    rax,QWORD PTR [r12+0xb80]
  4135cd:	mov    r14,QWORD PTR [rbx]
  4135d0:	cmp    rax,r14
  4135d3:	je     413620 <flatcc_emitter@@Base+0x170>
  4135d5:	mov    QWORD PTR [rbx+0x8],rax
  4135d9:	mov    QWORD PTR [rbx+0x28],0xb80
  4135e1:	mov    rdx,QWORD PTR [rax+0xb88]
  4135e8:	mov    QWORD PTR [rbx+0x20],rax
  4135ec:	mov    edx,DWORD PTR [rdx+0xb90]
  4135f2:	mov    r12,QWORD PTR [rbx+0x28]
  4135f6:	add    edx,0xb80
  4135fc:	mov    DWORD PTR [rax+0xb90],edx
  413602:	cmp    r15,r12
  413605:	ja     41351d <flatcc_emitter@@Base+0x6d>
  41360b:	nop    DWORD PTR [rax+rax*1+0x0]
  413610:	mov    r12,r15
  413613:	xor    r15d,r15d
  413616:	jmp    413529 <flatcc_emitter@@Base+0x79>
  41361b:	nop    DWORD PTR [rax+rax*1+0x0]
  413620:	mov    edi,0xb98
  413625:	call   404200 <malloc@plt>
  41362a:	test   rax,rax
  41362d:	je     4136c8 <flatcc_emitter@@Base+0x218>
  413633:	add    QWORD PTR [rbx+0x38],0xb80
  41363b:	mov    QWORD PTR [rax+0xb88],r12
  413642:	mov    QWORD PTR [rax+0xb80],r14
  413649:	mov    QWORD PTR [r14+0xb88],rax
  413650:	mov    QWORD PTR [r12+0xb80],rax
  413658:	mov    QWORD PTR [rbx+0x8],rax
  41365c:	jmp    4135d9 <flatcc_emitter@@Base+0x129>
  413661:	nop    DWORD PTR [rax+0x0]
  413668:	mov    edi,0xb98
  41366d:	call   404200 <malloc@plt>
  413672:	test   rax,rax
  413675:	je     4136c8 <flatcc_emitter@@Base+0x218>
  413677:	lea    rdx,[rax+0x5c0]
  41367e:	add    QWORD PTR [rbx+0x38],0xb80
  413686:	mov    QWORD PTR [rbx],rax
  413689:	mov    QWORD PTR [rbx+0x8],rax
  41368d:	mov    QWORD PTR [rax+0xb80],rax
  413694:	mov    QWORD PTR [rax+0xb88],rax
  41369b:	mov    QWORD PTR [rbx+0x10],rdx
  41369f:	mov    QWORD PTR [rbx+0x20],rdx
  4136a3:	mov    QWORD PTR [rbx+0x18],0x5c0
  4136ab:	mov    QWORD PTR [rbx+0x28],0x5c0
  4136b3:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  4136bd:	jmp    413510 <flatcc_emitter@@Base+0x60>
  4136c2:	nop    WORD PTR [rax+rax*1+0x0]
  4136c8:	add    rsp,0x18
  4136cc:	pop    rbx
  4136cd:	pop    rbp
  4136ce:	pop    r12
  4136d0:	pop    r13
  4136d2:	pop    r14
  4136d4:	mov    eax,0xffffffff
  4136d9:	pop    r15
  4136db:	ret    
  4136dc:	nop    DWORD PTR [rax+0x0]
  4136e0:	mov    rax,QWORD PTR [rdi+0x18]
  4136e4:	cmp    rax,r8
  4136e7:	jae    413890 <flatcc_emitter@@Base+0x3e0>
  4136ed:	movsxd rax,edx
  4136f0:	shl    rax,0x4
  4136f4:	add    rbp,rax
  4136f7:	mov    edx,edx
  4136f9:	shl    rdx,0x4
  4136fd:	mov    rax,rbp
  413700:	sub    rax,rdx
  413703:	mov    QWORD PTR [rsp+0x8],rax
  413708:	nop    DWORD PTR [rax+rax*1+0x0]
  413710:	cmp    rbp,QWORD PTR [rsp+0x8]
  413715:	je     413553 <flatcc_emitter@@Base+0xa3>
  41371b:	sub    rbp,0x10
  41371f:	mov    r12,QWORD PTR [rbp+0x8]
  413723:	mov    r13,QWORD PTR [rbp+0x0]
  413727:	add    r13,r12
  41372a:	test   r12,r12
  41372d:	je     413710 <flatcc_emitter@@Base+0x260>
  41372f:	mov    rdx,QWORD PTR [rbx+0x18]
  413733:	cmp    rdx,r12
  413736:	jae    413770 <flatcc_emitter@@Base+0x2c0>
  413738:	test   rdx,rdx
  41373b:	je     413780 <flatcc_emitter@@Base+0x2d0>
  41373d:	sub    r12,rdx
  413740:	xor    ecx,ecx
  413742:	mov    rdi,QWORD PTR [rbx+0x10]
  413746:	mov    rax,rdx
  413749:	neg    rax
  41374c:	add    rdi,rax
  41374f:	mov    QWORD PTR [rbx+0x10],rdi
  413753:	mov    QWORD PTR [rbx+0x18],rcx
  413757:	add    r13,rax
  41375a:	mov    rsi,r13
  41375d:	call   4041f0 <memcpy@plt>
  413762:	test   r12,r12
  413765:	je     413710 <flatcc_emitter@@Base+0x260>
  413767:	mov    rdx,QWORD PTR [rbx+0x18]
  41376b:	cmp    rdx,r12
  41376e:	jb     413738 <flatcc_emitter@@Base+0x288>
  413770:	mov    rcx,rdx
  413773:	sub    rcx,r12
  413776:	mov    rdx,r12
  413779:	xor    r12d,r12d
  41377c:	jmp    413742 <flatcc_emitter@@Base+0x292>
  41377e:	xchg   ax,ax
  413780:	mov    r15,QWORD PTR [rbx]
  413783:	test   r15,r15
  413786:	je     413828 <flatcc_emitter@@Base+0x378>
  41378c:	mov    rax,QWORD PTR [r15+0xb88]
  413793:	mov    r14,QWORD PTR [rbx+0x8]
  413797:	cmp    rax,r14
  41379a:	je     4137e8 <flatcc_emitter@@Base+0x338>
  41379c:	mov    edx,DWORD PTR [r15+0xb90]
  4137a3:	sub    edx,0xb80
  4137a9:	mov    DWORD PTR [rax+0xb90],edx
  4137af:	mov    QWORD PTR [rbx],rax
  4137b2:	lea    rdx,[rax+0xb80]
  4137b9:	mov    QWORD PTR [rbx+0x10],rdx
  4137bd:	mov    rdx,QWORD PTR [rax+0xb80]
  4137c4:	mov    QWORD PTR [rbx+0x18],0xb80
  4137cc:	mov    edx,DWORD PTR [rdx+0xb90]
  4137d2:	sub    edx,0xb80
  4137d8:	mov    DWORD PTR [rax+0xb90],edx
  4137de:	jmp    41372f <flatcc_emitter@@Base+0x27f>
  4137e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4137e8:	mov    edi,0xb98
  4137ed:	call   404200 <malloc@plt>
  4137f2:	test   rax,rax
  4137f5:	je     4136c8 <flatcc_emitter@@Base+0x218>
  4137fb:	add    QWORD PTR [rbx+0x38],0xb80
  413803:	mov    QWORD PTR [rax+0xb88],r14
  41380a:	mov    QWORD PTR [rax+0xb80],r15
  413811:	mov    QWORD PTR [r15+0xb88],rax
  413818:	mov    QWORD PTR [r14+0xb80],rax
  41381f:	mov    QWORD PTR [rbx],rax
  413822:	jmp    4137b2 <flatcc_emitter@@Base+0x302>
  413824:	nop    DWORD PTR [rax+0x0]
  413828:	mov    edi,0xb98
  41382d:	call   404200 <malloc@plt>
  413832:	test   rax,rax
  413835:	je     4136c8 <flatcc_emitter@@Base+0x218>
  41383b:	lea    rdx,[rax+0x5c0]
  413842:	add    QWORD PTR [rbx+0x38],0xb80
  41384a:	mov    QWORD PTR [rbx],rax
  41384d:	mov    QWORD PTR [rbx+0x8],rax
  413851:	mov    QWORD PTR [rax+0xb80],rax
  413858:	mov    QWORD PTR [rax+0xb88],rax
  41385f:	mov    QWORD PTR [rbx+0x10],rdx
  413863:	mov    QWORD PTR [rbx+0x20],rdx
  413867:	mov    QWORD PTR [rbx+0x18],0x5c0
  41386f:	mov    QWORD PTR [rbx+0x28],0x5c0
  413877:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  413881:	jmp    41372f <flatcc_emitter@@Base+0x27f>
  413886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413890:	mov    rcx,QWORD PTR [rdi+0x10]
  413894:	sub    rax,r8
  413897:	sub    rcx,r8
  41389a:	mov    QWORD PTR [rdi+0x10],rcx
  41389e:	mov    QWORD PTR [rdi+0x18],rax
  4138a2:	jmp    41357b <flatcc_emitter@@Base+0xcb>
  4138a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004138b0 <flatcc_emitter_copy_buffer@@Base>:
  4138b0:	endbr64 
  4138b4:	mov    rax,QWORD PTR [rdi+0x30]
  4138b8:	cmp    rax,rdx
  4138bb:	ja     413960 <flatcc_emitter_copy_buffer@@Base+0xb0>
  4138c1:	mov    rcx,QWORD PTR [rdi]
  4138c4:	test   rcx,rcx
  4138c7:	je     413962 <flatcc_emitter_copy_buffer@@Base+0xb2>
  4138cd:	push   rbp
  4138ce:	mov    r8,rsi
  4138d1:	mov    rbp,rdi
  4138d4:	push   rbx
  4138d5:	sub    rsp,0x8
  4138d9:	mov    rsi,QWORD PTR [rdi+0x10]
  4138dd:	cmp    rcx,QWORD PTR [rdi+0x8]
  4138e1:	je     413970 <flatcc_emitter_copy_buffer@@Base+0xc0>
  4138e7:	mov    ecx,0xb80
  4138ec:	mov    rbx,rcx
  4138ef:	sub    rbx,QWORD PTR [rdi+0x18]
  4138f3:	mov    rdx,rbx
  4138f6:	mov    rdi,r8
  4138f9:	call   4041f0 <memcpy@plt>
  4138fe:	lea    rcx,[rax+rbx*1]
  413902:	mov    rax,QWORD PTR [rbp+0x0]
  413906:	mov    rbx,QWORD PTR [rax+0xb80]
  41390d:	cmp    rbx,QWORD PTR [rbp+0x8]
  413911:	je     41393f <flatcc_emitter_copy_buffer@@Base+0x8f>
  413913:	nop    DWORD PTR [rax+rax*1+0x0]
  413918:	mov    rsi,rbx
  41391b:	mov    rdi,rcx
  41391e:	mov    edx,0xb80
  413923:	call   4041f0 <memcpy@plt>
  413928:	mov    rbx,QWORD PTR [rbx+0xb80]
  41392f:	mov    rcx,rax
  413932:	add    rcx,0xb80
  413939:	cmp    QWORD PTR [rbp+0x8],rbx
  41393d:	jne    413918 <flatcc_emitter_copy_buffer@@Base+0x68>
  41393f:	mov    edx,0xb80
  413944:	sub    rdx,QWORD PTR [rbp+0x28]
  413948:	mov    rsi,rbx
  41394b:	mov    rdi,rcx
  41394e:	call   4041f0 <memcpy@plt>
  413953:	add    rsp,0x8
  413957:	mov    rcx,rax
  41395a:	pop    rbx
  41395b:	mov    rax,rcx
  41395e:	pop    rbp
  41395f:	ret    
  413960:	xor    ecx,ecx
  413962:	mov    rax,rcx
  413965:	ret    
  413966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413970:	mov    rdx,rax
  413973:	mov    rdi,r8
  413976:	call   4041f0 <memcpy@plt>
  41397b:	add    rsp,0x8
  41397f:	mov    rcx,rax
  413982:	pop    rbx
  413983:	mov    rax,rcx
  413986:	pop    rbp
  413987:	ret    
  413988:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413990 <flatcc_verify_error_string@@Base>:
  413990:	endbr64 
  413994:	cmp    edi,0x24
  413997:	ja     413c00 <flatcc_verify_error_string@@Base+0x270>
  41399d:	lea    rdx,[rip+0x6e74]        # 41a818 <flatcc_builder_padding_base@@Base+0x698>
  4139a4:	mov    edi,edi
  4139a6:	movsxd rax,DWORD PTR [rdx+rdi*4]
  4139aa:	add    rax,rdx
  4139ad:	notrack jmp rax
  4139b0:	lea    rax,[rip+0x69d1]        # 41a388 <flatcc_builder_padding_base@@Base+0x208>
  4139b7:	ret    
  4139b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139c0:	lea    rax,[rip+0x6b45]        # 41a50c <flatcc_builder_padding_base@@Base+0x38c>
  4139c7:	ret    
  4139c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139d0:	lea    rax,[rip+0x6e19]        # 41a7f0 <flatcc_builder_padding_base@@Base+0x670>
  4139d7:	ret    
  4139d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139e0:	lea    rax,[rip+0x6dd1]        # 41a7b8 <flatcc_builder_padding_base@@Base+0x638>
  4139e7:	ret    
  4139e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139f0:	lea    rax,[rip+0x6d99]        # 41a790 <flatcc_builder_padding_base@@Base+0x610>
  4139f7:	ret    
  4139f8:	nop    DWORD PTR [rax+rax*1+0x0]
  413a00:	lea    rax,[rip+0x6d61]        # 41a768 <flatcc_builder_padding_base@@Base+0x5e8>
  413a07:	ret    
  413a08:	nop    DWORD PTR [rax+rax*1+0x0]
  413a10:	lea    rax,[rip+0x6ae0]        # 41a4f7 <flatcc_builder_padding_base@@Base+0x377>
  413a17:	ret    
  413a18:	nop    DWORD PTR [rax+rax*1+0x0]
  413a20:	lea    rax,[rip+0x6d19]        # 41a740 <flatcc_builder_padding_base@@Base+0x5c0>
  413a27:	ret    
  413a28:	nop    DWORD PTR [rax+rax*1+0x0]
  413a30:	lea    rax,[rip+0x6ce1]        # 41a718 <flatcc_builder_padding_base@@Base+0x598>
  413a37:	ret    
  413a38:	nop    DWORD PTR [rax+rax*1+0x0]
  413a40:	lea    rax,[rip+0x6a98]        # 41a4df <flatcc_builder_padding_base@@Base+0x35f>
  413a47:	ret    
  413a48:	nop    DWORD PTR [rax+rax*1+0x0]
  413a50:	lea    rax,[rip+0x6a6d]        # 41a4c4 <flatcc_builder_padding_base@@Base+0x344>
  413a57:	ret    
  413a58:	nop    DWORD PTR [rax+rax*1+0x0]
  413a60:	lea    rax,[rip+0x6a49]        # 41a4b0 <flatcc_builder_padding_base@@Base+0x330>
  413a67:	ret    
  413a68:	nop    DWORD PTR [rax+rax*1+0x0]
  413a70:	lea    rax,[rip+0x6c71]        # 41a6e8 <flatcc_builder_padding_base@@Base+0x568>
  413a77:	ret    
  413a78:	nop    DWORD PTR [rax+rax*1+0x0]
  413a80:	lea    rax,[rip+0x6c31]        # 41a6b8 <flatcc_builder_padding_base@@Base+0x538>
  413a87:	ret    
  413a88:	nop    DWORD PTR [rax+rax*1+0x0]
  413a90:	lea    rax,[rip+0x6bf1]        # 41a688 <flatcc_builder_padding_base@@Base+0x508>
  413a97:	ret    
  413a98:	nop    DWORD PTR [rax+rax*1+0x0]
  413aa0:	lea    rax,[rip+0x6ba9]        # 41a650 <flatcc_builder_padding_base@@Base+0x4d0>
  413aa7:	ret    
  413aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ab0:	lea    rax,[rip+0x6b69]        # 41a620 <flatcc_builder_padding_base@@Base+0x4a0>
  413ab7:	ret    
  413ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ac0:	lea    rax,[rip+0x69d1]        # 41a498 <flatcc_builder_padding_base@@Base+0x318>
  413ac7:	ret    
  413ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ad0:	lea    rax,[rip+0x6b21]        # 41a5f8 <flatcc_builder_padding_base@@Base+0x478>
  413ad7:	ret    
  413ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ae0:	lea    rax,[rip+0x699d]        # 41a484 <flatcc_builder_padding_base@@Base+0x304>
  413ae7:	ret    
  413ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  413af0:	lea    rax,[rip+0x6ad9]        # 41a5d0 <flatcc_builder_padding_base@@Base+0x450>
  413af7:	ret    
  413af8:	nop    DWORD PTR [rax+rax*1+0x0]
  413b00:	lea    rax,[rip+0x6aa1]        # 41a5a8 <flatcc_builder_padding_base@@Base+0x428>
  413b07:	ret    
  413b08:	nop    DWORD PTR [rax+rax*1+0x0]
  413b10:	lea    rax,[rip+0x6a69]        # 41a580 <flatcc_builder_padding_base@@Base+0x400>
  413b17:	ret    
  413b18:	nop    DWORD PTR [rax+rax*1+0x0]
  413b20:	lea    rax,[rip+0x6943]        # 41a46a <flatcc_builder_padding_base@@Base+0x2ea>
  413b27:	ret    
  413b28:	nop    DWORD PTR [rax+rax*1+0x0]
  413b30:	lea    rax,[rip+0x691a]        # 41a451 <flatcc_builder_padding_base@@Base+0x2d1>
  413b37:	ret    
  413b38:	nop    DWORD PTR [rax+rax*1+0x0]
  413b40:	lea    rax,[rip+0x68f2]        # 41a439 <flatcc_builder_padding_base@@Base+0x2b9>
  413b47:	ret    
  413b48:	nop    DWORD PTR [rax+rax*1+0x0]
  413b50:	lea    rax,[rip+0x68d1]        # 41a428 <flatcc_builder_padding_base@@Base+0x2a8>
  413b57:	ret    
  413b58:	nop    DWORD PTR [rax+rax*1+0x0]
  413b60:	lea    rax,[rip+0x68ac]        # 41a413 <flatcc_builder_padding_base@@Base+0x293>
  413b67:	ret    
  413b68:	nop    DWORD PTR [rax+rax*1+0x0]
  413b70:	lea    rax,[rip+0x6888]        # 41a3ff <flatcc_builder_padding_base@@Base+0x27f>
  413b77:	ret    
  413b78:	nop    DWORD PTR [rax+rax*1+0x0]
  413b80:	lea    rax,[rip+0x6864]        # 41a3eb <flatcc_builder_padding_base@@Base+0x26b>
  413b87:	ret    
  413b88:	nop    DWORD PTR [rax+rax*1+0x0]
  413b90:	lea    rax,[rip+0x6839]        # 41a3d0 <flatcc_builder_padding_base@@Base+0x250>
  413b97:	ret    
  413b98:	nop    DWORD PTR [rax+rax*1+0x0]
  413ba0:	lea    rax,[rip+0x69b9]        # 41a560 <flatcc_builder_padding_base@@Base+0x3e0>
  413ba7:	ret    
  413ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  413bb0:	lea    rax,[rip+0x6981]        # 41a538 <flatcc_builder_padding_base@@Base+0x3b8>
  413bb7:	ret    
  413bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  413bc0:	lea    rax,[rip+0x67f2]        # 41a3b9 <flatcc_builder_padding_base@@Base+0x239>
  413bc7:	ret    
  413bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  413bd0:	lea    rax,[rip+0x67c8]        # 41a39f <flatcc_builder_padding_base@@Base+0x21f>
  413bd7:	ret    
  413bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  413be0:	lea    rax,[rip+0x67a4]        # 41a38b <flatcc_builder_padding_base@@Base+0x20b>
  413be7:	ret    
  413be8:	nop    DWORD PTR [rax+rax*1+0x0]
  413bf0:	lea    rax,[rip+0x6923]        # 41a51a <flatcc_builder_padding_base@@Base+0x39a>
  413bf7:	ret    
  413bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  413c00:	lea    rax,[rip+0x6779]        # 41a380 <flatcc_builder_padding_base@@Base+0x200>
  413c07:	ret    
  413c08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413c10 <flatcc_verify_field@@Base>:
  413c10:	endbr64 
  413c14:	lea    esi,[rsi+rsi*1+0x4]
  413c18:	xor    eax,eax
  413c1a:	cmp    si,WORD PTR [rdi+0x1e]
  413c1e:	jae    413c59 <flatcc_verify_field@@Base+0x49>
  413c20:	mov    r8,QWORD PTR [rdi+0x10]
  413c24:	movzx  esi,si
  413c27:	movzx  esi,WORD PTR [r8+rsi*1]
  413c2c:	test   esi,esi
  413c2e:	je     413c59 <flatcc_verify_field@@Base+0x49>
  413c30:	movzx  r8d,WORD PTR [rdi+0x1c]
  413c35:	add    edx,esi
  413c37:	mov    eax,0xd
  413c3c:	cmp    edx,r8d
  413c3f:	ja     413c59 <flatcc_verify_field@@Base+0x49>
  413c41:	mov    eax,DWORD PTR [rdi+0x18]
  413c44:	movzx  ecx,cx
  413c47:	add    eax,DWORD PTR [rdi]
  413c49:	add    eax,esi
  413c4b:	dec    ecx
  413c4d:	and    eax,ecx
  413c4f:	cmp    eax,0x1
  413c52:	sbb    eax,eax
  413c54:	not    eax
  413c56:	and    eax,0xc
  413c59:	ret    
  413c5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413c60 <flatcc_verify_string_field@@Base>:
  413c60:	endbr64 
  413c64:	lea    esi,[rsi+rsi*1+0x4]
  413c68:	cmp    si,WORD PTR [rdi+0x1e]
  413c6c:	jae    413d00 <flatcc_verify_string_field@@Base+0xa0>
  413c72:	mov    rax,QWORD PTR [rdi+0x10]
  413c76:	movzx  esi,si
  413c79:	movzx  ecx,WORD PTR [rax+rsi*1]
  413c7d:	test   ecx,ecx
  413c7f:	je     413d00 <flatcc_verify_string_field@@Base+0xa0>
  413c81:	movzx  edx,WORD PTR [rdi+0x1c]
  413c85:	lea    esi,[rcx+0x4]
  413c88:	mov    eax,0xd
  413c8d:	cmp    esi,edx
  413c8f:	ja     413cfa <flatcc_verify_string_field@@Base+0x9a>
  413c91:	add    ecx,DWORD PTR [rdi+0x18]
  413c94:	mov    edx,ecx
  413c96:	mov    eax,0xc
  413c9b:	test   cl,0x3
  413c9e:	jne    413cfa <flatcc_verify_string_field@@Base+0x9a>
  413ca0:	test   ecx,ecx
  413ca2:	je     413cf8 <flatcc_verify_string_field@@Base+0x98>
  413ca4:	mov    rsi,QWORD PTR [rdi]
  413ca7:	mov    eax,ecx
  413ca9:	add    ecx,DWORD PTR [rsi+rax*1]
  413cac:	mov    eax,0x11
  413cb1:	cmp    edx,ecx
  413cb3:	jae    413cfa <flatcc_verify_string_field@@Base+0x9a>
  413cb5:	mov    r9d,DWORD PTR [rdi+0x8]
  413cb9:	mov    edi,ecx
  413cbb:	lea    r8,[rdi+0x4]
  413cbf:	mov    rdx,r9
  413cc2:	cmp    r8,r9
  413cc5:	ja     413cfa <flatcc_verify_string_field@@Base+0x9a>
  413cc7:	mov    r9d,ecx
  413cca:	and    r9d,0x3
  413cce:	jne    413cfa <flatcc_verify_string_field@@Base+0x9a>
  413cd0:	mov    edi,DWORD PTR [rsi+rdi*1]
  413cd3:	sub    edx,0x4
  413cd6:	sub    edx,ecx
  413cd8:	lea    ecx,[rdi+0x1]
  413cdb:	mov    eax,0x8
  413ce0:	cmp    edx,ecx
  413ce2:	jb     413cfa <flatcc_verify_string_field@@Base+0x9a>
  413ce4:	add    rsi,r8
  413ce7:	cmp    BYTE PTR [rsi+rdi*1],0x0
  413ceb:	mov    eax,0x7
  413cf0:	cmove  eax,r9d
  413cf4:	ret    
  413cf5:	nop    DWORD PTR [rax]
  413cf8:	xor    eax,eax
  413cfa:	ret    
  413cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  413d00:	xor    eax,eax
  413d02:	test   edx,edx
  413d04:	setne  al
  413d07:	shl    eax,0x2
  413d0a:	ret    
  413d0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413d10 <flatcc_verify_vector_field@@Base>:
  413d10:	endbr64 
  413d14:	lea    esi,[rsi+rsi*1+0x4]
  413d18:	cmp    si,WORD PTR [rdi+0x1e]
  413d1c:	jae    413dc8 <flatcc_verify_vector_field@@Base+0xb8>
  413d22:	mov    rax,QWORD PTR [rdi+0x10]
  413d26:	movzx  esi,si
  413d29:	movzx  esi,WORD PTR [rax+rsi*1]
  413d2d:	test   esi,esi
  413d2f:	je     413dc8 <flatcc_verify_vector_field@@Base+0xb8>
  413d35:	movzx  edx,WORD PTR [rdi+0x1c]
  413d39:	lea    r10d,[rsi+0x4]
  413d3d:	mov    eax,0xd
  413d42:	cmp    r10d,edx
  413d45:	ja     413dc0 <flatcc_verify_vector_field@@Base+0xb0>
  413d47:	mov    edx,DWORD PTR [rdi+0x18]
  413d4a:	mov    eax,0xc
  413d4f:	add    edx,esi
  413d51:	test   dl,0x3
  413d54:	jne    413dc0 <flatcc_verify_vector_field@@Base+0xb0>
  413d56:	test   edx,edx
  413d58:	je     413dd8 <flatcc_verify_vector_field@@Base+0xc8>
  413d5a:	mov    r10,QWORD PTR [rdi]
  413d5d:	mov    eax,edx
  413d5f:	mov    esi,DWORD PTR [r10+rax*1]
  413d63:	mov    eax,0x10
  413d68:	add    esi,edx
  413d6a:	cmp    edx,esi
  413d6c:	jae    413dc0 <flatcc_verify_vector_field@@Base+0xb0>
  413d6e:	push   rbx
  413d6f:	mov    ebx,esi
  413d71:	lea    r11,[rbx+0x4]
  413d75:	mov    edx,DWORD PTR [rdi+0x8]
  413d78:	mov    rdi,rdx
  413d7b:	cmp    r11,rdx
  413d7e:	ja     413dbb <flatcc_verify_vector_field@@Base+0xab>
  413d80:	cmp    r8w,0x4
  413d85:	mov    edx,0x4
  413d8a:	cmovae edx,r8d
  413d8e:	movzx  edx,dx
  413d91:	dec    edx
  413d93:	or     edx,0x3
  413d96:	movsxd rdx,edx
  413d99:	test   rdx,r11
  413d9c:	jne    413dbb <flatcc_verify_vector_field@@Base+0xab>
  413d9e:	mov    edx,DWORD PTR [r10+rbx*1]
  413da2:	sub    edi,0x4
  413da5:	mov    eax,0x19
  413daa:	cmp    edx,r9d
  413dad:	ja     413dbb <flatcc_verify_vector_field@@Base+0xab>
  413daf:	imul   ecx,edx
  413db2:	sub    edi,esi
  413db4:	cmp    edi,ecx
  413db6:	sbb    eax,eax
  413db8:	and    eax,0x1a
  413dbb:	pop    rbx
  413dbc:	ret    
  413dbd:	nop    DWORD PTR [rax]
  413dc0:	ret    
  413dc1:	nop    DWORD PTR [rax+0x0]
  413dc8:	xor    eax,eax
  413dca:	test   edx,edx
  413dcc:	setne  al
  413dcf:	shl    eax,0x2
  413dd2:	ret    
  413dd3:	nop    DWORD PTR [rax+rax*1+0x0]
  413dd8:	xor    eax,eax
  413dda:	ret    
  413ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413de0 <flatcc_verify_string_vector_field@@Base>:
  413de0:	endbr64 
  413de4:	lea    esi,[rsi+rsi*1+0x4]
  413de8:	cmp    si,WORD PTR [rdi+0x1e]
  413dec:	jae    413f40 <flatcc_verify_string_vector_field@@Base+0x160>
  413df2:	mov    rax,QWORD PTR [rdi+0x10]
  413df6:	movzx  esi,si
  413df9:	movzx  ecx,WORD PTR [rax+rsi*1]
  413dfd:	test   ecx,ecx
  413dff:	je     413f40 <flatcc_verify_string_vector_field@@Base+0x160>
  413e05:	movzx  edx,WORD PTR [rdi+0x1c]
  413e09:	lea    esi,[rcx+0x4]
  413e0c:	mov    eax,0xd
  413e11:	cmp    esi,edx
  413e13:	ja     413f38 <flatcc_verify_string_vector_field@@Base+0x158>
  413e19:	add    ecx,DWORD PTR [rdi+0x18]
  413e1c:	mov    edx,ecx
  413e1e:	mov    eax,0xc
  413e23:	test   cl,0x3
  413e26:	jne    413f38 <flatcc_verify_string_vector_field@@Base+0x158>
  413e2c:	test   ecx,ecx
  413e2e:	je     413f80 <flatcc_verify_string_vector_field@@Base+0x1a0>
  413e34:	mov    rcx,QWORD PTR [rdi]
  413e37:	mov    eax,edx
  413e39:	mov    esi,DWORD PTR [rcx+rax*1]
  413e3c:	mov    eax,0x10
  413e41:	add    esi,edx
  413e43:	cmp    edx,esi
  413e45:	jae    413f38 <flatcc_verify_string_vector_field@@Base+0x158>
  413e4b:	mov    r9d,DWORD PTR [rdi+0x8]
  413e4f:	mov    r10d,esi
  413e52:	lea    r8,[r10+0x4]
  413e56:	mov    rdi,r9
  413e59:	cmp    r8,r9
  413e5c:	ja     413f38 <flatcc_verify_string_vector_field@@Base+0x158>
  413e62:	push   rbx
  413e63:	test   r8b,0x3
  413e67:	jne    413f50 <flatcc_verify_string_vector_field@@Base+0x170>
  413e6d:	mov    eax,DWORD PTR [rcx+r10*1]
  413e71:	lea    edx,[rsi+0x4]
  413e74:	cmp    eax,0x3fffffff
  413e79:	ja     413f50 <flatcc_verify_string_vector_field@@Base+0x170>
  413e7f:	mov    ebx,r9d
  413e82:	lea    r11d,[rax*4+0x0]
  413e8a:	sub    ebx,edx
  413e8c:	cmp    ebx,r11d
  413e8f:	jb     413f50 <flatcc_verify_string_vector_field@@Base+0x170>
  413e95:	test   eax,eax
  413e97:	je     413f88 <flatcc_verify_string_vector_field@@Base+0x1a8>
  413e9d:	mov    r8d,DWORD PTR [rcx+r10*1+0x4]
  413ea2:	mov    eax,0x11
  413ea7:	add    r8d,edx
  413eaa:	cmp    r8d,edx
  413ead:	jbe    413f33 <flatcc_verify_string_vector_field@@Base+0x153>
  413eb3:	mov    r10d,r8d
  413eb6:	lea    rsi,[r10+0x4]
  413eba:	cmp    rsi,r9
  413ebd:	ja     413f33 <flatcc_verify_string_vector_field@@Base+0x153>
  413ebf:	test   r8b,0x3
  413ec3:	jne    413f33 <flatcc_verify_string_vector_field@@Base+0x153>
  413ec5:	mov    r10d,DWORD PTR [rcx+r10*1]
  413ec9:	sub    edi,0x4
  413ecc:	mov    ebx,edi
  413ece:	sub    ebx,r8d
  413ed1:	lea    r8d,[r10+0x1]
  413ed5:	mov    eax,0x8
  413eda:	cmp    ebx,r8d
  413edd:	jb     413f33 <flatcc_verify_string_vector_field@@Base+0x153>
  413edf:	lea    r8d,[rdx+r11*1]
  413ee3:	jmp    413f0f <flatcc_verify_string_vector_field@@Base+0x12f>
  413ee5:	nop    DWORD PTR [rax]
  413ee8:	mov    r10d,ebx
  413eeb:	lea    rsi,[r10+0x4]
  413eef:	cmp    r9,rsi
  413ef2:	jb     413f2e <flatcc_verify_string_vector_field@@Base+0x14e>
  413ef4:	test   al,0x3
  413ef6:	jne    413f2e <flatcc_verify_string_vector_field@@Base+0x14e>
  413ef8:	mov    r10d,DWORD PTR [rcx+r10*1]
  413efc:	mov    r11d,edi
  413eff:	sub    r11d,ebx
  413f02:	lea    eax,[r10+0x1]
  413f06:	cmp    r11d,eax
  413f09:	jb     413f8c <flatcc_verify_string_vector_field@@Base+0x1ac>
  413f0f:	add    rsi,rcx
  413f12:	cmp    BYTE PTR [rsi+r10*1],0x0
  413f17:	jne    413f93 <flatcc_verify_string_vector_field@@Base+0x1b3>
  413f19:	add    edx,0x4
  413f1c:	cmp    edx,r8d
  413f1f:	je     413f88 <flatcc_verify_string_vector_field@@Base+0x1a8>
  413f21:	mov    eax,edx
  413f23:	mov    ebx,DWORD PTR [rcx+rax*1]
  413f26:	add    ebx,edx
  413f28:	mov    eax,ebx
  413f2a:	cmp    edx,ebx
  413f2c:	jb     413ee8 <flatcc_verify_string_vector_field@@Base+0x108>
  413f2e:	mov    eax,0x11
  413f33:	pop    rbx
  413f34:	ret    
  413f35:	nop    DWORD PTR [rax]
  413f38:	ret    
  413f39:	nop    DWORD PTR [rax+0x0]
  413f40:	xor    eax,eax
  413f42:	test   edx,edx
  413f44:	setne  al
  413f47:	shl    eax,0x2
  413f4a:	ret    
  413f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413f50:	and    r8d,0x3
  413f54:	mov    eax,0x10
  413f59:	jne    413f33 <flatcc_verify_string_vector_field@@Base+0x153>
  413f5b:	mov    edx,DWORD PTR [rcx+r10*1]
  413f5f:	sub    edi,0x4
  413f62:	mov    eax,0x19
  413f67:	cmp    edx,0x3fffffff
  413f6d:	ja     413f33 <flatcc_verify_string_vector_field@@Base+0x153>
  413f6f:	sub    edi,esi
  413f71:	shl    edx,0x2
  413f74:	cmp    edi,edx
  413f76:	sbb    eax,eax
  413f78:	and    eax,0x1a
  413f7b:	pop    rbx
  413f7c:	ret    
  413f7d:	nop    DWORD PTR [rax]
  413f80:	xor    eax,eax
  413f82:	ret    
  413f83:	nop    DWORD PTR [rax+rax*1+0x0]
  413f88:	xor    eax,eax
  413f8a:	pop    rbx
  413f8b:	ret    
  413f8c:	mov    eax,0x8
  413f91:	pop    rbx
  413f92:	ret    
  413f93:	mov    eax,0x7
  413f98:	pop    rbx
  413f99:	ret    
  413f9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413fa0 <flatcc_verify_table_field@@Base>:
  413fa0:	endbr64 
  413fa4:	sub    rsp,0x38
  413fa8:	lea    esi,[rsi+rsi*1+0x4]
  413fac:	mov    rax,QWORD PTR fs:0x28
  413fb5:	mov    QWORD PTR [rsp+0x28],rax
  413fba:	xor    eax,eax
  413fbc:	cmp    si,WORD PTR [rdi+0x1e]
  413fc0:	jae    4140f8 <flatcc_verify_table_field@@Base+0x158>
  413fc6:	mov    rax,QWORD PTR [rdi+0x10]
  413fca:	movzx  esi,si
  413fcd:	movzx  esi,WORD PTR [rax+rsi*1]
  413fd1:	test   esi,esi
  413fd3:	je     4140f8 <flatcc_verify_table_field@@Base+0x158>
  413fd9:	movzx  edx,WORD PTR [rdi+0x1c]
  413fdd:	lea    r8d,[rsi+0x4]
  413fe1:	mov    eax,0xd
  413fe6:	cmp    r8d,edx
  413fe9:	ja     4140e0 <flatcc_verify_table_field@@Base+0x140>
  413fef:	add    esi,DWORD PTR [rdi+0x18]
  413ff2:	mov    eax,0xc
  413ff7:	test   sil,0x3
  413ffb:	jne    4140e0 <flatcc_verify_table_field@@Base+0x140>
  414001:	test   esi,esi
  414003:	je     414108 <flatcc_verify_table_field@@Base+0x168>
  414009:	mov    edx,DWORD PTR [rdi+0xc]
  41400c:	mov    r9,QWORD PTR [rdi]
  41400f:	mov    eax,esi
  414011:	dec    edx
  414013:	mov    r8d,DWORD PTR [r9+rax*1]
  414017:	mov    r10d,DWORD PTR [rdi+0x8]
  41401b:	mov    DWORD PTR [rsp+0xc],edx
  41401f:	mov    eax,0x3
  414024:	je     4140e0 <flatcc_verify_table_field@@Base+0x140>
  41402a:	lea    edx,[rsi+r8*1]
  41402e:	mov    eax,0xf
  414033:	cmp    esi,edx
  414035:	jae    4140e0 <flatcc_verify_table_field@@Base+0x140>
  41403b:	mov    esi,edx
  41403d:	mov    edi,r10d
  414040:	lea    r8,[rsi+0x4]
  414044:	cmp    r8,rdi
  414047:	ja     4140e0 <flatcc_verify_table_field@@Base+0x140>
  41404d:	test   dl,0x3
  414050:	jne    4140e0 <flatcc_verify_table_field@@Base+0x140>
  414056:	mov    DWORD PTR [rsp+0x18],edx
  41405a:	mov    eax,edx
  41405c:	sub    eax,DWORD PTR [r9+rsi*1]
  414060:	mov    esi,eax
  414062:	js     41410c <flatcc_verify_table_field@@Base+0x16c>
  414068:	mov    r8d,eax
  41406b:	mov    eax,0x1d
  414070:	test   sil,0x1
  414074:	jne    4140e0 <flatcc_verify_table_field@@Base+0x140>
  414076:	lea    r11,[r8+0x2]
  41407a:	mov    eax,0x1b
  41407f:	cmp    rdi,r11
  414082:	jb     4140e0 <flatcc_verify_table_field@@Base+0x140>
  414084:	lea    r11,[r9+r8*1]
  414088:	movzx  eax,WORD PTR [r11]
  41408c:	add    esi,eax
  41408e:	mov    edi,eax
  414090:	mov    WORD PTR [rsp+0x1e],ax
  414095:	mov    eax,0x1e
  41409a:	cmp    r10d,esi
  41409d:	jb     4140e0 <flatcc_verify_table_field@@Base+0x140>
  41409f:	test   dil,0x1
  4140a3:	jne    4140e0 <flatcc_verify_table_field@@Base+0x140>
  4140a5:	mov    eax,0x1c
  4140aa:	cmp    di,0x3
  4140ae:	jbe    4140e0 <flatcc_verify_table_field@@Base+0x140>
  4140b0:	movzx  eax,WORD PTR [r9+r8*1+0x2]
  4140b6:	mov    esi,r10d
  4140b9:	sub    esi,edx
  4140bb:	movzx  edx,ax
  4140be:	mov    WORD PTR [rsp+0x1c],ax
  4140c3:	mov    eax,0x14
  4140c8:	cmp    esi,edx
  4140ca:	jb     4140e0 <flatcc_verify_table_field@@Base+0x140>
  4140cc:	mov    rdi,rsp
  4140cf:	mov    QWORD PTR [rsp+0x10],r11
  4140d4:	mov    QWORD PTR [rsp],r9
  4140d8:	mov    DWORD PTR [rsp+0x8],r10d
  4140dd:	call   rcx
  4140df:	nop
  4140e0:	mov    rcx,QWORD PTR [rsp+0x28]
  4140e5:	xor    rcx,QWORD PTR fs:0x28
  4140ee:	jne    414113 <flatcc_verify_table_field@@Base+0x173>
  4140f0:	add    rsp,0x38
  4140f4:	ret    
  4140f5:	nop    DWORD PTR [rax]
  4140f8:	xor    eax,eax
  4140fa:	test   edx,edx
  4140fc:	setne  al
  4140ff:	shl    eax,0x2
  414102:	jmp    4140e0 <flatcc_verify_table_field@@Base+0x140>
  414104:	nop    DWORD PTR [rax+0x0]
  414108:	xor    eax,eax
  41410a:	jmp    4140e0 <flatcc_verify_table_field@@Base+0x140>
  41410c:	mov    eax,0x1d
  414111:	jmp    4140e0 <flatcc_verify_table_field@@Base+0x140>
  414113:	call   404180 <__stack_chk_fail@plt>
  414118:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414120 <flatcc_verify_table_vector_field@@Base>:
  414120:	endbr64 
  414124:	push   r15
  414126:	lea    esi,[rsi+rsi*1+0x4]
  41412a:	push   r14
  41412c:	push   r13
  41412e:	push   r12
  414130:	push   rbp
  414131:	push   rbx
  414132:	sub    rsp,0x58
  414136:	mov    rax,QWORD PTR fs:0x28
  41413f:	mov    QWORD PTR [rsp+0x48],rax
  414144:	xor    eax,eax
  414146:	cmp    si,WORD PTR [rdi+0x1e]
  41414a:	jae    414348 <flatcc_verify_table_vector_field@@Base+0x228>
  414150:	mov    rax,QWORD PTR [rdi+0x10]
  414154:	movzx  esi,si
  414157:	movzx  esi,WORD PTR [rax+rsi*1]
  41415b:	test   esi,esi
  41415d:	je     414348 <flatcc_verify_table_vector_field@@Base+0x228>
  414163:	movzx  edx,WORD PTR [rdi+0x1c]
  414167:	lea    r8d,[rsi+0x4]
  41416b:	mov    eax,0xd
  414170:	cmp    r8d,edx
  414173:	ja     414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414179:	add    esi,DWORD PTR [rdi+0x18]
  41417c:	mov    eax,0xc
  414181:	test   sil,0x3
  414185:	jne    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  41418b:	test   esi,esi
  41418d:	je     414351 <flatcc_verify_table_vector_field@@Base+0x231>
  414193:	mov    r12,QWORD PTR [rdi]
  414196:	mov    r8d,DWORD PTR [rdi+0xc]
  41419a:	mov    eax,esi
  41419c:	mov    edx,DWORD PTR [r12+rax*1]
  4141a0:	test   r8d,r8d
  4141a3:	jle    4143b0 <flatcc_verify_table_vector_field@@Base+0x290>
  4141a9:	add    edx,esi
  4141ab:	mov    eax,0x10
  4141b0:	cmp    esi,edx
  4141b2:	jae    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  4141b8:	mov    r15d,DWORD PTR [rdi+0x8]
  4141bc:	mov    edi,edx
  4141be:	lea    rsi,[rdi+0x4]
  4141c2:	mov    r14,r15
  4141c5:	cmp    rsi,r15
  4141c8:	ja     414320 <flatcc_verify_table_vector_field@@Base+0x200>
  4141ce:	test   sil,0x3
  4141d2:	jne    414358 <flatcc_verify_table_vector_field@@Base+0x238>
  4141d8:	mov    eax,DWORD PTR [r12+rdi*1]
  4141dc:	lea    ebp,[rdx+0x4]
  4141df:	cmp    eax,0x3fffffff
  4141e4:	ja     414358 <flatcc_verify_table_vector_field@@Base+0x238>
  4141ea:	mov    r10d,r15d
  4141ed:	lea    r9d,[rax*4+0x0]
  4141f5:	sub    r10d,ebp
  4141f8:	cmp    r10d,r9d
  4141fb:	jb     414358 <flatcc_verify_table_vector_field@@Base+0x238>
  414201:	test   eax,eax
  414203:	je     414351 <flatcc_verify_table_vector_field@@Base+0x231>
  414209:	lea    rbx,[r12+rsi*1]
  41420d:	lea    r13d,[r8-0x2]
  414211:	mov    edx,DWORD PTR [rbx]
  414213:	mov    eax,0x3
  414218:	mov    DWORD PTR [rsp+0x2c],r13d
  41421d:	test   r13d,r13d
  414220:	je     414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414226:	lea    eax,[rbp+rdx*1+0x0]
  41422a:	cmp    ebp,eax
  41422c:	jae    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  414232:	mov    esi,eax
  414234:	lea    rdx,[rsi+0x4]
  414238:	cmp    r15,rdx
  41423b:	jb     414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  414241:	test   al,0x3
  414243:	jne    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  414249:	lea    rdi,[rsp+0x20]
  41424e:	mov    QWORD PTR [rsp+0x18],rdi
  414253:	lea    edx,[rbp+r9*1+0x0]
  414258:	nop    DWORD PTR [rax+rax*1+0x0]
  414260:	mov    DWORD PTR [rsp+0x38],eax
  414264:	mov    DWORD PTR [rsp+0xc],edx
  414268:	mov    edx,eax
  41426a:	sub    edx,DWORD PTR [r12+rsi*1]
  41426e:	mov    esi,edx
  414270:	js     414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  414276:	mov    edi,edx
  414278:	test   dl,0x1
  41427b:	jne    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  414281:	lea    r9,[rdi+0x2]
  414285:	cmp    r15,r9
  414288:	jb     414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  41428a:	lea    r10,[r12+rdi*1]
  41428e:	movzx  r11d,WORD PTR [r10]
  414292:	add    esi,r11d
  414295:	mov    WORD PTR [rsp+0x3e],r11w
  41429b:	cmp    r14d,esi
  41429e:	jb     414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4142a0:	test   r11b,0x1
  4142a4:	jne    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4142a6:	cmp    r11w,0x3
  4142ab:	jbe    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4142ad:	movzx  esi,WORD PTR [r12+rdi*1+0x2]
  4142b3:	mov    edx,r14d
  4142b6:	sub    edx,eax
  4142b8:	mov    WORD PTR [rsp+0x3c],si
  4142bd:	cmp    edx,esi
  4142bf:	jb     414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4142c1:	mov    rdi,QWORD PTR [rsp+0x18]
  4142c6:	mov    QWORD PTR [rsp+0x10],rcx
  4142cb:	mov    QWORD PTR [rsp+0x30],r10
  4142d0:	mov    QWORD PTR [rsp+0x20],r12
  4142d5:	mov    DWORD PTR [rsp+0x28],r14d
  4142da:	call   rcx
  4142dc:	test   eax,eax
  4142de:	mov    rcx,QWORD PTR [rsp+0x10]
  4142e3:	mov    edx,DWORD PTR [rsp+0xc]
  4142e7:	jne    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4142e9:	add    ebp,0x4
  4142ec:	cmp    ebp,edx
  4142ee:	je     414351 <flatcc_verify_table_vector_field@@Base+0x231>
  4142f0:	mov    esi,ebp
  4142f2:	lea    rbx,[r12+rsi*1]
  4142f6:	mov    eax,DWORD PTR [rbx]
  4142f8:	mov    DWORD PTR [rsp+0x2c],r13d
  4142fd:	add    eax,ebp
  4142ff:	cmp    ebp,eax
  414301:	jb     414390 <flatcc_verify_table_vector_field@@Base+0x270>
  414307:	mov    edx,DWORD PTR [rbx]
  414309:	mov    DWORD PTR [rsp+0x2c],r13d
  41430e:	add    edx,ebp
  414310:	cmp    edx,ebp
  414312:	ja     4143ba <flatcc_verify_table_vector_field@@Base+0x29a>
  414318:	mov    eax,0xf
  41431d:	nop    DWORD PTR [rax]
  414320:	mov    rbx,QWORD PTR [rsp+0x48]
  414325:	xor    rbx,QWORD PTR fs:0x28
  41432e:	jne    414446 <flatcc_verify_table_vector_field@@Base+0x326>
  414334:	add    rsp,0x58
  414338:	pop    rbx
  414339:	pop    rbp
  41433a:	pop    r12
  41433c:	pop    r13
  41433e:	pop    r14
  414340:	pop    r15
  414342:	ret    
  414343:	nop    DWORD PTR [rax+rax*1+0x0]
  414348:	mov    eax,0x4
  41434d:	test   edx,edx
  41434f:	jne    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414351:	xor    eax,eax
  414353:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414355:	nop    DWORD PTR [rax]
  414358:	and    esi,0x3
  41435b:	mov    eax,0x10
  414360:	jne    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414362:	mov    ecx,DWORD PTR [r12+rdi*1]
  414366:	sub    r14d,0x4
  41436a:	mov    eax,0x19
  41436f:	cmp    ecx,0x3fffffff
  414375:	ja     414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414377:	sub    r14d,edx
  41437a:	shl    ecx,0x2
  41437d:	mov    eax,0x1a
  414382:	cmp    r14d,ecx
  414385:	jb     414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414387:	xor    eax,eax
  414389:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  41438b:	nop    DWORD PTR [rax+rax*1+0x0]
  414390:	mov    esi,eax
  414392:	lea    rdi,[rsi+0x4]
  414396:	cmp    r15,rdi
  414399:	jb     414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  41439f:	test   al,0x3
  4143a1:	je     414260 <flatcc_verify_table_vector_field@@Base+0x140>
  4143a7:	jmp    414307 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4143ac:	nop    DWORD PTR [rax+0x0]
  4143b0:	mov    eax,0x3
  4143b5:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  4143ba:	mov    esi,edx
  4143bc:	lea    rdi,[rsi+0x4]
  4143c0:	mov    eax,0xf
  4143c5:	cmp    r15,rdi
  4143c8:	jb     414320 <flatcc_verify_table_vector_field@@Base+0x200>
  4143ce:	test   dl,0x3
  4143d1:	jne    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  4143d7:	mov    DWORD PTR [rsp+0x38],edx
  4143db:	mov    r8d,edx
  4143de:	sub    r8d,DWORD PTR [r12+rsi*1]
  4143e2:	js     41444b <flatcc_verify_table_vector_field@@Base+0x32b>
  4143e4:	mov    esi,r8d
  4143e7:	test   r8b,0x1
  4143eb:	jne    41444b <flatcc_verify_table_vector_field@@Base+0x32b>
  4143ed:	lea    rax,[rsi+0x2]
  4143f1:	cmp    r15,rax
  4143f4:	jb     414473 <flatcc_verify_table_vector_field@@Base+0x353>
  4143f6:	lea    r9,[r12+rsi*1]
  4143fa:	movzx  edi,WORD PTR [r9]
  4143fe:	mov    eax,edi
  414400:	mov    WORD PTR [rsp+0x3e],di
  414405:	add    edi,r8d
  414408:	cmp    r14d,edi
  41440b:	jb     414455 <flatcc_verify_table_vector_field@@Base+0x335>
  41440d:	test   al,0x1
  41440f:	jne    414455 <flatcc_verify_table_vector_field@@Base+0x335>
  414411:	cmp    ax,0x3
  414415:	jbe    41445f <flatcc_verify_table_vector_field@@Base+0x33f>
  414417:	movzx  eax,WORD PTR [r12+rsi*1+0x2]
  41441d:	mov    ebx,r14d
  414420:	sub    ebx,edx
  414422:	mov    WORD PTR [rsp+0x3c],ax
  414427:	cmp    ebx,eax
  414429:	jb     414469 <flatcc_verify_table_vector_field@@Base+0x349>
  41442b:	lea    rdi,[rsp+0x20]
  414430:	mov    QWORD PTR [rsp+0x30],r9
  414435:	mov    QWORD PTR [rsp+0x20],r12
  41443a:	mov    DWORD PTR [rsp+0x28],r14d
  41443f:	call   rcx
  414441:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414446:	call   404180 <__stack_chk_fail@plt>
  41444b:	mov    eax,0x1d
  414450:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414455:	mov    eax,0x1e
  41445a:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  41445f:	mov    eax,0x1c
  414464:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414469:	mov    eax,0x14
  41446e:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  414473:	mov    eax,0x1b
  414478:	jmp    414320 <flatcc_verify_table_vector_field@@Base+0x200>
  41447d:	nop    DWORD PTR [rax]

0000000000414480 <flatcc_verify_union_table@@Base>:
  414480:	endbr64 
  414484:	sub    rsp,0x38
  414488:	mov    edx,DWORD PTR [rdi+0xc]
  41448b:	mov    rax,QWORD PTR fs:0x28
  414494:	mov    QWORD PTR [rsp+0x28],rax
  414499:	xor    eax,eax
  41449b:	dec    edx
  41449d:	mov    r8d,DWORD PTR [rdi+0x18]
  4144a1:	mov    ecx,DWORD PTR [rdi+0x14]
  4144a4:	mov    r9d,DWORD PTR [rdi+0x8]
  4144a8:	mov    r10,QWORD PTR [rdi]
  4144ab:	mov    DWORD PTR [rsp+0xc],edx
  4144af:	mov    eax,0x3
  4144b4:	je     4144c3 <flatcc_verify_union_table@@Base+0x43>
  4144b6:	lea    edx,[r8+rcx*1]
  4144ba:	mov    eax,0xf
  4144bf:	cmp    ecx,edx
  4144c1:	jb     4144e0 <flatcc_verify_union_table@@Base+0x60>
  4144c3:	mov    rsi,QWORD PTR [rsp+0x28]
  4144c8:	xor    rsi,QWORD PTR fs:0x28
  4144d1:	jne    41459a <flatcc_verify_union_table@@Base+0x11a>
  4144d7:	add    rsp,0x38
  4144db:	ret    
  4144dc:	nop    DWORD PTR [rax+0x0]
  4144e0:	mov    ecx,edx
  4144e2:	mov    edi,r9d
  4144e5:	lea    r8,[rcx+0x4]
  4144e9:	cmp    r8,rdi
  4144ec:	ja     4144c3 <flatcc_verify_union_table@@Base+0x43>
  4144ee:	test   dl,0x3
  4144f1:	jne    4144c3 <flatcc_verify_union_table@@Base+0x43>
  4144f3:	mov    DWORD PTR [rsp+0x18],edx
  4144f7:	mov    eax,edx
  4144f9:	sub    eax,DWORD PTR [r10+rcx*1]
  4144fd:	mov    ecx,eax
  4144ff:	js     414590 <flatcc_verify_union_table@@Base+0x110>
  414505:	mov    r8d,eax
  414508:	mov    eax,0x1d
  41450d:	test   cl,0x1
  414510:	jne    4144c3 <flatcc_verify_union_table@@Base+0x43>
  414512:	lea    r11,[r8+0x2]
  414516:	mov    eax,0x1b
  41451b:	cmp    rdi,r11
  41451e:	jb     4144c3 <flatcc_verify_union_table@@Base+0x43>
  414520:	lea    r11,[r10+r8*1]
  414524:	movzx  eax,WORD PTR [r11]
  414528:	add    ecx,eax
  41452a:	mov    edi,eax
  41452c:	mov    WORD PTR [rsp+0x1e],ax
  414531:	mov    eax,0x1e
  414536:	cmp    r9d,ecx
  414539:	jb     4144c3 <flatcc_verify_union_table@@Base+0x43>
  41453b:	test   dil,0x1
  41453f:	jne    4144c3 <flatcc_verify_union_table@@Base+0x43>
  414541:	mov    eax,0x1c
  414546:	cmp    di,0x3
  41454a:	jbe    4144c3 <flatcc_verify_union_table@@Base+0x43>
  414550:	movzx  eax,WORD PTR [r10+r8*1+0x2]
  414556:	mov    ecx,r9d
  414559:	sub    ecx,edx
  41455b:	movzx  edx,ax
  41455e:	mov    WORD PTR [rsp+0x1c],ax
  414563:	mov    eax,0x14
  414568:	cmp    ecx,edx
  41456a:	jb     4144c3 <flatcc_verify_union_table@@Base+0x43>
  414570:	mov    rdi,rsp
  414573:	mov    QWORD PTR [rsp+0x10],r11
  414578:	mov    QWORD PTR [rsp],r10
  41457c:	mov    DWORD PTR [rsp+0x8],r9d
  414581:	call   rsi
  414583:	jmp    4144c3 <flatcc_verify_union_table@@Base+0x43>
  414588:	nop    DWORD PTR [rax+rax*1+0x0]
  414590:	mov    eax,0x1d
  414595:	jmp    4144c3 <flatcc_verify_union_table@@Base+0x43>
  41459a:	call   404180 <__stack_chk_fail@plt>
  41459f:	nop

00000000004145a0 <flatcc_verify_union_struct@@Base>:
  4145a0:	endbr64 
  4145a4:	mov    ecx,DWORD PTR [rdi+0x18]
  4145a7:	mov    r8d,DWORD PTR [rdi+0x14]
  4145ab:	mov    eax,0x12
  4145b0:	mov    edi,DWORD PTR [rdi+0x8]
  4145b3:	test   ecx,ecx
  4145b5:	je     4145dc <flatcc_verify_union_struct@@Base+0x3c>
  4145b7:	add    ecx,r8d
  4145ba:	cmp    edi,ecx
  4145bc:	jb     4145dc <flatcc_verify_union_struct@@Base+0x3c>
  4145be:	add    esi,ecx
  4145c0:	jb     4145e1 <flatcc_verify_union_struct@@Base+0x41>
  4145c2:	mov    eax,0x9
  4145c7:	cmp    edi,esi
  4145c9:	jb     4145e0 <flatcc_verify_union_struct@@Base+0x40>
  4145cb:	movzx  edx,dx
  4145ce:	dec    edx
  4145d0:	and    ecx,edx
  4145d2:	cmp    ecx,0x1
  4145d5:	sbb    eax,eax
  4145d7:	not    eax
  4145d9:	and    eax,0xb
  4145dc:	ret    
  4145dd:	nop    DWORD PTR [rax]
  4145e0:	ret    
  4145e1:	mov    eax,0xa
  4145e6:	ret    
  4145e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004145f0 <flatcc_verify_union_string@@Base>:
  4145f0:	endbr64 
  4145f4:	mov    ecx,DWORD PTR [rdi+0x14]
  4145f7:	mov    edx,DWORD PTR [rdi+0x18]
  4145fa:	mov    eax,0x11
  4145ff:	add    edx,ecx
  414601:	cmp    ecx,edx
  414603:	jae    414648 <flatcc_verify_union_string@@Base+0x58>
  414605:	mov    r9d,DWORD PTR [rdi+0x8]
  414609:	mov    esi,edx
  41460b:	lea    r8,[rsi+0x4]
  41460f:	mov    rcx,r9
  414612:	cmp    r8,r9
  414615:	ja     414648 <flatcc_verify_union_string@@Base+0x58>
  414617:	mov    r9d,edx
  41461a:	and    r9d,0x3
  41461e:	jne    414648 <flatcc_verify_union_string@@Base+0x58>
  414620:	mov    rdi,QWORD PTR [rdi]
  414623:	sub    ecx,0x4
  414626:	mov    esi,DWORD PTR [rdi+rsi*1]
  414629:	sub    ecx,edx
  41462b:	lea    edx,[rsi+0x1]
  41462e:	mov    eax,0x8
  414633:	cmp    ecx,edx
  414635:	jb     414648 <flatcc_verify_union_string@@Base+0x58>
  414637:	add    r8,rdi
  41463a:	cmp    BYTE PTR [r8+rsi*1],0x0
  41463f:	mov    eax,0x7
  414644:	cmove  eax,r9d
  414648:	ret    
  414649:	nop    DWORD PTR [rax+0x0]

0000000000414650 <flatcc_verify_buffer_header@@Base>:
  414650:	endbr64 
  414654:	push   rbx
  414655:	sub    rsp,0x10
  414659:	mov    rax,QWORD PTR fs:0x28
  414662:	mov    QWORD PTR [rsp+0x8],rax
  414667:	xor    eax,eax
  414669:	mov    eax,0x5
  41466e:	test   dil,0x3
  414672:	jne    4146ba <flatcc_verify_buffer_header@@Base+0x6a>
  414674:	mov    rcx,rdx
  414677:	mov    edx,0xfffffff7
  41467c:	mov    eax,0x6
  414681:	cmp    rsi,rdx
  414684:	ja     4146ba <flatcc_verify_buffer_header@@Base+0x6a>
  414686:	mov    eax,0x1
  41468b:	cmp    rsi,0x7
  41468f:	jbe    4146ba <flatcc_verify_buffer_header@@Base+0x6a>
  414691:	test   rcx,rcx
  414694:	je     4146b8 <flatcc_verify_buffer_header@@Base+0x68>
  414696:	mov    rbx,rdi
  414699:	mov    edx,0x4
  41469e:	lea    rdi,[rsp+0x4]
  4146a3:	mov    rsi,rcx
  4146a6:	call   404150 <strncpy@plt>
  4146ab:	mov    eax,DWORD PTR [rsp+0x4]
  4146af:	cmp    DWORD PTR [rbx+0x4],eax
  4146b2:	je     4146b8 <flatcc_verify_buffer_header@@Base+0x68>
  4146b4:	test   eax,eax
  4146b6:	jne    4146d0 <flatcc_verify_buffer_header@@Base+0x80>
  4146b8:	xor    eax,eax
  4146ba:	mov    rcx,QWORD PTR [rsp+0x8]
  4146bf:	xor    rcx,QWORD PTR fs:0x28
  4146c8:	jne    4146d7 <flatcc_verify_buffer_header@@Base+0x87>
  4146ca:	add    rsp,0x10
  4146ce:	pop    rbx
  4146cf:	ret    
  4146d0:	mov    eax,0x2
  4146d5:	jmp    4146ba <flatcc_verify_buffer_header@@Base+0x6a>
  4146d7:	call   404180 <__stack_chk_fail@plt>
  4146dc:	nop    DWORD PTR [rax+0x0]

00000000004146e0 <flatcc_verify_typed_buffer_header@@Base>:
  4146e0:	endbr64 
  4146e4:	mov    eax,0x5
  4146e9:	test   dil,0x3
  4146ed:	jne    414719 <flatcc_verify_typed_buffer_header@@Base+0x39>
  4146ef:	mov    ecx,0xfffffff7
  4146f4:	mov    eax,0x6
  4146f9:	cmp    rsi,rcx
  4146fc:	ja     414719 <flatcc_verify_typed_buffer_header@@Base+0x39>
  4146fe:	mov    eax,0x1
  414703:	cmp    rsi,0x7
  414707:	jbe    414719 <flatcc_verify_typed_buffer_header@@Base+0x39>
  414709:	xor    eax,eax
  41470b:	test   edx,edx
  41470d:	je     414719 <flatcc_verify_typed_buffer_header@@Base+0x39>
  41470f:	xor    eax,eax
  414711:	cmp    edx,DWORD PTR [rdi+0x4]
  414714:	setne  al
  414717:	add    eax,eax
  414719:	ret    
  41471a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000414720 <flatcc_verify_struct_as_root@@Base>:
  414720:	endbr64 
  414724:	push   r14
  414726:	mov    r14,rdx
  414729:	push   r13
  41472b:	mov    r13d,r8d
  41472e:	push   r12
  414730:	mov    r12,rdi
  414733:	push   rbp
  414734:	mov    rbp,rsi
  414737:	push   rbx
  414738:	mov    rbx,rcx
  41473b:	call   414650 <flatcc_verify_buffer_header@@Base>
  414740:	test   eax,eax
  414742:	jne    414790 <flatcc_verify_struct_as_root@@Base+0x70>
  414744:	mov    edx,DWORD PTR [r12]
  414748:	test   edx,edx
  41474a:	je     414778 <flatcc_verify_struct_as_root@@Base+0x58>
  41474c:	cmp    edx,ebp
  41474e:	ja     414778 <flatcc_verify_struct_as_root@@Base+0x58>
  414750:	add    ebx,edx
  414752:	jb     4147b7 <flatcc_verify_struct_as_root@@Base+0x97>
  414754:	cmp    ebp,ebx
  414756:	jb     4147b0 <flatcc_verify_struct_as_root@@Base+0x90>
  414758:	movzx  r13d,r13w
  41475c:	dec    r13d
  41475f:	test   r13d,edx
  414762:	mov    edx,0xb
  414767:	cmovne eax,edx
  41476a:	pop    rbx
  41476b:	pop    rbp
  41476c:	pop    r12
  41476e:	pop    r13
  414770:	pop    r14
  414772:	ret    
  414773:	nop    DWORD PTR [rax+rax*1+0x0]
  414778:	pop    rbx
  414779:	pop    rbp
  41477a:	pop    r12
  41477c:	pop    r13
  41477e:	mov    eax,0x12
  414783:	pop    r14
  414785:	ret    
  414786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414790:	pop    rbx
  414791:	mov    rsi,rbp
  414794:	pop    rbp
  414795:	mov    rdi,r12
  414798:	pop    r12
  41479a:	pop    r13
  41479c:	mov    rdx,r14
  41479f:	pop    r14
  4147a1:	jmp    414650 <flatcc_verify_buffer_header@@Base>
  4147a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147b0:	mov    eax,0x9
  4147b5:	jmp    41476a <flatcc_verify_struct_as_root@@Base+0x4a>
  4147b7:	mov    eax,0xa
  4147bc:	jmp    41476a <flatcc_verify_struct_as_root@@Base+0x4a>
  4147be:	xchg   ax,ax

00000000004147c0 <flatcc_verify_struct_as_typed_root@@Base>:
  4147c0:	endbr64 
  4147c4:	push   r14
  4147c6:	mov    r14d,edx
  4147c9:	push   r13
  4147cb:	mov    r13d,r8d
  4147ce:	push   r12
  4147d0:	mov    r12,rdi
  4147d3:	push   rbp
  4147d4:	mov    rbp,rsi
  4147d7:	push   rbx
  4147d8:	mov    rbx,rcx
  4147db:	call   4146e0 <flatcc_verify_typed_buffer_header@@Base>
  4147e0:	test   eax,eax
  4147e2:	jne    414830 <flatcc_verify_struct_as_typed_root@@Base+0x70>
  4147e4:	mov    edx,DWORD PTR [r12]
  4147e8:	test   edx,edx
  4147ea:	je     414818 <flatcc_verify_struct_as_typed_root@@Base+0x58>
  4147ec:	cmp    edx,ebp
  4147ee:	ja     414818 <flatcc_verify_struct_as_typed_root@@Base+0x58>
  4147f0:	add    ebx,edx
  4147f2:	jb     414857 <flatcc_verify_struct_as_typed_root@@Base+0x97>
  4147f4:	cmp    ebp,ebx
  4147f6:	jb     414850 <flatcc_verify_struct_as_typed_root@@Base+0x90>
  4147f8:	movzx  r13d,r13w
  4147fc:	dec    r13d
  4147ff:	test   r13d,edx
  414802:	mov    edx,0xb
  414807:	cmovne eax,edx
  41480a:	pop    rbx
  41480b:	pop    rbp
  41480c:	pop    r12
  41480e:	pop    r13
  414810:	pop    r14
  414812:	ret    
  414813:	nop    DWORD PTR [rax+rax*1+0x0]
  414818:	pop    rbx
  414819:	pop    rbp
  41481a:	pop    r12
  41481c:	pop    r13
  41481e:	mov    eax,0x12
  414823:	pop    r14
  414825:	ret    
  414826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414830:	pop    rbx
  414831:	mov    rsi,rbp
  414834:	pop    rbp
  414835:	mov    rdi,r12
  414838:	pop    r12
  41483a:	pop    r13
  41483c:	mov    edx,r14d
  41483f:	pop    r14
  414841:	jmp    4146e0 <flatcc_verify_typed_buffer_header@@Base>
  414846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414850:	mov    eax,0x9
  414855:	jmp    41480a <flatcc_verify_struct_as_typed_root@@Base+0x4a>
  414857:	mov    eax,0xa
  41485c:	jmp    41480a <flatcc_verify_struct_as_typed_root@@Base+0x4a>
  41485e:	xchg   ax,ax

0000000000414860 <flatcc_verify_table_as_root@@Base>:
  414860:	endbr64 
  414864:	push   r14
  414866:	mov    r14,rcx
  414869:	push   r13
  41486b:	mov    r13,rsi
  41486e:	push   r12
  414870:	mov    r12,rdx
  414873:	push   rbp
  414874:	mov    ebp,esi
  414876:	mov    rsi,rbp
  414879:	push   rbx
  41487a:	mov    rbx,rdi
  41487d:	sub    rsp,0x30
  414881:	mov    rax,QWORD PTR fs:0x28
  41488a:	mov    QWORD PTR [rsp+0x28],rax
  41488f:	xor    eax,eax
  414891:	call   414650 <flatcc_verify_buffer_header@@Base>
  414896:	test   eax,eax
  414898:	jne    414980 <flatcc_verify_table_as_root@@Base+0x120>
  41489e:	mov    edx,DWORD PTR [rbx]
  4148a0:	mov    DWORD PTR [rsp+0xc],0x63
  4148a8:	mov    eax,0xf
  4148ad:	test   edx,edx
  4148af:	jne    4148d8 <flatcc_verify_table_as_root@@Base+0x78>
  4148b1:	mov    rcx,QWORD PTR [rsp+0x28]
  4148b6:	xor    rcx,QWORD PTR fs:0x28
  4148bf:	jne    4149a2 <flatcc_verify_table_as_root@@Base+0x142>
  4148c5:	add    rsp,0x30
  4148c9:	pop    rbx
  4148ca:	pop    rbp
  4148cb:	pop    r12
  4148cd:	pop    r13
  4148cf:	pop    r14
  4148d1:	ret    
  4148d2:	nop    WORD PTR [rax+rax*1+0x0]
  4148d8:	mov    ecx,edx
  4148da:	lea    rsi,[rcx+0x4]
  4148de:	cmp    rbp,rsi
  4148e1:	jb     4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  4148e3:	test   dl,0x3
  4148e6:	jne    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  4148e8:	mov    eax,edx
  4148ea:	sub    eax,DWORD PTR [rbx+rcx*1]
  4148ed:	mov    DWORD PTR [rsp+0x18],edx
  4148f1:	mov    ecx,eax
  4148f3:	js     414998 <flatcc_verify_table_as_root@@Base+0x138>
  4148f9:	mov    edi,eax
  4148fb:	mov    eax,0x1d
  414900:	test   cl,0x1
  414903:	jne    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  414905:	lea    rsi,[rdi+0x2]
  414909:	mov    eax,0x1b
  41490e:	cmp    rbp,rsi
  414911:	jb     4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  414913:	lea    r8,[rbx+rdi*1]
  414917:	movzx  eax,WORD PTR [r8]
  41491b:	add    ecx,eax
  41491d:	mov    esi,eax
  41491f:	mov    WORD PTR [rsp+0x1e],ax
  414924:	mov    eax,0x1e
  414929:	cmp    r13d,ecx
  41492c:	jb     4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  41492e:	test   sil,0x1
  414932:	jne    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  414938:	mov    eax,0x1c
  41493d:	cmp    si,0x3
  414941:	jbe    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  414947:	movzx  eax,WORD PTR [rbx+rdi*1+0x2]
  41494c:	mov    ecx,r13d
  41494f:	sub    ecx,edx
  414951:	movzx  edx,ax
  414954:	mov    WORD PTR [rsp+0x1c],ax
  414959:	mov    eax,0x14
  41495e:	cmp    ecx,edx
  414960:	jb     4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  414966:	mov    rdi,rsp
  414969:	mov    QWORD PTR [rsp+0x10],r8
  41496e:	mov    QWORD PTR [rsp],rbx
  414972:	mov    DWORD PTR [rsp+0x8],r13d
  414977:	call   r14
  41497a:	jmp    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  41497f:	nop
  414980:	mov    rdx,r12
  414983:	mov    rsi,rbp
  414986:	mov    rdi,rbx
  414989:	call   414650 <flatcc_verify_buffer_header@@Base>
  41498e:	jmp    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  414993:	nop    DWORD PTR [rax+rax*1+0x0]
  414998:	mov    eax,0x1d
  41499d:	jmp    4148b1 <flatcc_verify_table_as_root@@Base+0x51>
  4149a2:	call   404180 <__stack_chk_fail@plt>
  4149a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004149b0 <flatcc_verify_table_as_typed_root@@Base>:
  4149b0:	endbr64 
  4149b4:	push   r14
  4149b6:	mov    r14,rcx
  4149b9:	push   r13
  4149bb:	mov    r13,rsi
  4149be:	push   r12
  4149c0:	mov    r12d,edx
  4149c3:	push   rbp
  4149c4:	mov    ebp,esi
  4149c6:	mov    rsi,rbp
  4149c9:	push   rbx
  4149ca:	mov    rbx,rdi
  4149cd:	sub    rsp,0x30
  4149d1:	mov    rax,QWORD PTR fs:0x28
  4149da:	mov    QWORD PTR [rsp+0x28],rax
  4149df:	xor    eax,eax
  4149e1:	call   4146e0 <flatcc_verify_typed_buffer_header@@Base>
  4149e6:	test   eax,eax
  4149e8:	jne    414ad0 <flatcc_verify_table_as_typed_root@@Base+0x120>
  4149ee:	mov    edx,DWORD PTR [rbx]
  4149f0:	mov    DWORD PTR [rsp+0xc],0x63
  4149f8:	mov    eax,0xf
  4149fd:	test   edx,edx
  4149ff:	jne    414a28 <flatcc_verify_table_as_typed_root@@Base+0x78>
  414a01:	mov    rcx,QWORD PTR [rsp+0x28]
  414a06:	xor    rcx,QWORD PTR fs:0x28
  414a0f:	jne    414af2 <flatcc_verify_table_as_typed_root@@Base+0x142>
  414a15:	add    rsp,0x30
  414a19:	pop    rbx
  414a1a:	pop    rbp
  414a1b:	pop    r12
  414a1d:	pop    r13
  414a1f:	pop    r14
  414a21:	ret    
  414a22:	nop    WORD PTR [rax+rax*1+0x0]
  414a28:	mov    ecx,edx
  414a2a:	lea    rsi,[rcx+0x4]
  414a2e:	cmp    rbp,rsi
  414a31:	jb     414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a33:	test   dl,0x3
  414a36:	jne    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a38:	mov    eax,edx
  414a3a:	sub    eax,DWORD PTR [rbx+rcx*1]
  414a3d:	mov    DWORD PTR [rsp+0x18],edx
  414a41:	mov    ecx,eax
  414a43:	js     414ae8 <flatcc_verify_table_as_typed_root@@Base+0x138>
  414a49:	mov    edi,eax
  414a4b:	mov    eax,0x1d
  414a50:	test   cl,0x1
  414a53:	jne    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a55:	lea    rsi,[rdi+0x2]
  414a59:	mov    eax,0x1b
  414a5e:	cmp    rbp,rsi
  414a61:	jb     414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a63:	lea    r8,[rbx+rdi*1]
  414a67:	movzx  eax,WORD PTR [r8]
  414a6b:	add    ecx,eax
  414a6d:	mov    esi,eax
  414a6f:	mov    WORD PTR [rsp+0x1e],ax
  414a74:	mov    eax,0x1e
  414a79:	cmp    r13d,ecx
  414a7c:	jb     414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a7e:	test   sil,0x1
  414a82:	jne    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a88:	mov    eax,0x1c
  414a8d:	cmp    si,0x3
  414a91:	jbe    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414a97:	movzx  eax,WORD PTR [rbx+rdi*1+0x2]
  414a9c:	mov    ecx,r13d
  414a9f:	sub    ecx,edx
  414aa1:	movzx  edx,ax
  414aa4:	mov    WORD PTR [rsp+0x1c],ax
  414aa9:	mov    eax,0x14
  414aae:	cmp    ecx,edx
  414ab0:	jb     414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414ab6:	mov    rdi,rsp
  414ab9:	mov    QWORD PTR [rsp+0x10],r8
  414abe:	mov    QWORD PTR [rsp],rbx
  414ac2:	mov    DWORD PTR [rsp+0x8],r13d
  414ac7:	call   r14
  414aca:	jmp    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414acf:	nop
  414ad0:	mov    edx,r12d
  414ad3:	mov    rsi,rbp
  414ad6:	mov    rdi,rbx
  414ad9:	call   4146e0 <flatcc_verify_typed_buffer_header@@Base>
  414ade:	jmp    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  414ae8:	mov    eax,0x1d
  414aed:	jmp    414a01 <flatcc_verify_table_as_typed_root@@Base+0x51>
  414af2:	call   404180 <__stack_chk_fail@plt>
  414af7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000414b00 <flatcc_verify_struct_as_nested_root@@Base>:
  414b00:	endbr64 
  414b04:	push   r15
  414b06:	push   r14
  414b08:	mov    r14,r8
  414b0b:	mov    r8d,0x1
  414b11:	push   r13
  414b13:	mov    r13d,r9d
  414b16:	push   r12
  414b18:	mov    r12d,edx
  414b1b:	push   rbp
  414b1c:	mov    rbp,rdi
  414b1f:	push   rbx
  414b20:	mov    ebx,esi
  414b22:	movzx  esi,si
  414b25:	sub    rsp,0x18
  414b29:	mov    QWORD PTR [rsp+0x8],rcx
  414b2e:	movzx  ecx,r9w
  414b32:	mov    r9d,0xffffffff
  414b38:	mov    r15,rcx
  414b3b:	call   413d10 <flatcc_verify_vector_field@@Base>
  414b40:	test   eax,eax
  414b42:	jne    414bb0 <flatcc_verify_struct_as_nested_root@@Base+0xb0>
  414b44:	lea    ebx,[rbx+rbx*1+0x4]
  414b48:	cmp    bx,WORD PTR [rbp+0x1e]
  414b4c:	jae    414b98 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  414b4e:	mov    rax,QWORD PTR [rbp+0x10]
  414b52:	movzx  ebx,bx
  414b55:	movzx  eax,WORD PTR [rax+rbx*1]
  414b59:	test   ax,ax
  414b5c:	je     414b98 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  414b5e:	mov    edi,DWORD PTR [rbp+0x18]
  414b61:	add    rdi,rax
  414b64:	add    rdi,QWORD PTR [rbp+0x0]
  414b68:	je     414b98 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  414b6a:	mov    eax,DWORD PTR [rdi]
  414b6c:	mov    rdx,QWORD PTR [rsp+0x8]
  414b71:	add    rdi,rax
  414b74:	mov    esi,DWORD PTR [rdi]
  414b76:	add    rsp,0x18
  414b7a:	pop    rbx
  414b7b:	pop    rbp
  414b7c:	pop    r12
  414b7e:	movzx  r8d,r13w
  414b82:	pop    r13
  414b84:	mov    rcx,r14
  414b87:	pop    r14
  414b89:	add    rdi,0x4
  414b8d:	pop    r15
  414b8f:	jmp    414720 <flatcc_verify_struct_as_root@@Base>
  414b94:	nop    DWORD PTR [rax+0x0]
  414b98:	add    rsp,0x18
  414b9c:	pop    rbx
  414b9d:	pop    rbp
  414b9e:	pop    r12
  414ba0:	pop    r13
  414ba2:	pop    r14
  414ba4:	xor    eax,eax
  414ba6:	pop    r15
  414ba8:	ret    
  414ba9:	nop    DWORD PTR [rax+0x0]
  414bb0:	add    rsp,0x18
  414bb4:	movzx  esi,bx
  414bb7:	pop    rbx
  414bb8:	mov    rdi,rbp
  414bbb:	pop    rbp
  414bbc:	mov    edx,r12d
  414bbf:	pop    r12
  414bc1:	pop    r13
  414bc3:	pop    r14
  414bc5:	movzx  ecx,r15w
  414bc9:	mov    r9d,0xffffffff
  414bcf:	mov    r8d,0x1
  414bd5:	pop    r15
  414bd7:	jmp    413d10 <flatcc_verify_vector_field@@Base>
  414bdc:	nop    DWORD PTR [rax+0x0]

0000000000414be0 <flatcc_verify_table_as_nested_root@@Base>:
  414be0:	endbr64 
  414be4:	push   r15
  414be6:	push   r14
  414be8:	mov    r14d,edx
  414beb:	push   r13
  414bed:	mov    r13,rdi
  414bf0:	push   r12
  414bf2:	mov    r12,r9
  414bf5:	mov    r9d,0xffffffff
  414bfb:	push   rbp
  414bfc:	mov    rbp,rcx
  414bff:	movzx  ecx,r8w
  414c03:	push   rbx
  414c04:	mov    r8d,0x1
  414c0a:	mov    ebx,esi
  414c0c:	sub    rsp,0x48
  414c10:	movzx  esi,si
  414c13:	mov    rax,QWORD PTR fs:0x28
  414c1c:	mov    QWORD PTR [rsp+0x38],rax
  414c21:	xor    eax,eax
  414c23:	mov    r15,rcx
  414c26:	call   413d10 <flatcc_verify_vector_field@@Base>
  414c2b:	test   eax,eax
  414c2d:	jne    414d80 <flatcc_verify_table_as_nested_root@@Base+0x1a0>
  414c33:	lea    ebx,[rbx+rbx*1+0x4]
  414c37:	cmp    bx,WORD PTR [r13+0x1e]
  414c3c:	jae    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414c42:	mov    rdx,QWORD PTR [r13+0x10]
  414c46:	movzx  ebx,bx
  414c49:	movzx  ecx,WORD PTR [rdx+rbx*1]
  414c4d:	test   cx,cx
  414c50:	je     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414c56:	mov    edx,DWORD PTR [r13+0x18]
  414c5a:	add    rdx,rcx
  414c5d:	add    rdx,QWORD PTR [r13+0x0]
  414c61:	je     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414c67:	mov    ebx,DWORD PTR [rdx]
  414c69:	add    rbx,rdx
  414c6c:	mov    r15d,DWORD PTR [rbx]
  414c6f:	lea    r14,[rbx+0x4]
  414c73:	mov    rdx,rbp
  414c76:	mov    rsi,r15
  414c79:	mov    rdi,r14
  414c7c:	mov    DWORD PTR [rsp+0xc],r15d
  414c81:	call   414650 <flatcc_verify_buffer_header@@Base>
  414c86:	test   eax,eax
  414c88:	jne    414da0 <flatcc_verify_table_as_nested_root@@Base+0x1c0>
  414c8e:	mov    edx,DWORD PTR [r13+0xc]
  414c92:	mov    esi,DWORD PTR [rbx+0x4]
  414c95:	dec    edx
  414c97:	mov    DWORD PTR [rsp+0x1c],edx
  414c9b:	mov    eax,0x3
  414ca0:	je     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414ca6:	mov    eax,0xf
  414cab:	test   esi,esi
  414cad:	je     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414cb3:	mov    edx,esi
  414cb5:	lea    rdi,[rdx+0x4]
  414cb9:	cmp    r15,rdi
  414cbc:	jb     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414cc2:	test   sil,0x3
  414cc6:	jne    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414ccc:	mov    DWORD PTR [rsp+0x28],esi
  414cd0:	mov    edi,esi
  414cd2:	sub    edi,DWORD PTR [rbx+rdx*1+0x4]
  414cd6:	js     414db0 <flatcc_verify_table_as_nested_root@@Base+0x1d0>
  414cdc:	mov    edx,edi
  414cde:	mov    eax,0x1d
  414ce3:	test   dil,0x1
  414ce7:	jne    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414ce9:	lea    r9,[rdx+0x2]
  414ced:	mov    eax,0x1b
  414cf2:	cmp    r15,r9
  414cf5:	jb     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414cf7:	add    rdx,r14
  414cfa:	movzx  eax,WORD PTR [rdx]
  414cfd:	mov    ecx,DWORD PTR [rsp+0xc]
  414d01:	add    edi,eax
  414d03:	mov    r8d,eax
  414d06:	mov    WORD PTR [rsp+0x2e],ax
  414d0b:	mov    eax,0x1e
  414d10:	cmp    ecx,edi
  414d12:	jb     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414d14:	test   r8b,0x1
  414d18:	jne    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414d1a:	mov    eax,0x1c
  414d1f:	cmp    r8w,0x3
  414d24:	jbe    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414d26:	movzx  eax,WORD PTR [rbx+r9*1+0x4]
  414d2c:	mov    edi,ecx
  414d2e:	sub    edi,esi
  414d30:	movzx  esi,ax
  414d33:	mov    WORD PTR [rsp+0x2c],ax
  414d38:	mov    eax,0x14
  414d3d:	cmp    edi,esi
  414d3f:	jb     414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414d41:	lea    rdi,[rsp+0x10]
  414d46:	mov    QWORD PTR [rsp+0x20],rdx
  414d4b:	mov    QWORD PTR [rsp+0x10],r14
  414d50:	mov    DWORD PTR [rsp+0x18],ecx
  414d54:	call   r12
  414d57:	nop    WORD PTR [rax+rax*1+0x0]
  414d60:	mov    rdi,QWORD PTR [rsp+0x38]
  414d65:	xor    rdi,QWORD PTR fs:0x28
  414d6e:	jne    414db7 <flatcc_verify_table_as_nested_root@@Base+0x1d7>
  414d70:	add    rsp,0x48
  414d74:	pop    rbx
  414d75:	pop    rbp
  414d76:	pop    r12
  414d78:	pop    r13
  414d7a:	pop    r14
  414d7c:	pop    r15
  414d7e:	ret    
  414d7f:	nop
  414d80:	mov    r9d,0xffffffff
  414d86:	mov    r8d,0x1
  414d8c:	movzx  ecx,r15w
  414d90:	mov    edx,r14d
  414d93:	movzx  esi,bx
  414d96:	mov    rdi,r13
  414d99:	call   413d10 <flatcc_verify_vector_field@@Base>
  414d9e:	jmp    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414da0:	mov    rdx,rbp
  414da3:	mov    rsi,r15
  414da6:	mov    rdi,r14
  414da9:	call   414650 <flatcc_verify_buffer_header@@Base>
  414dae:	jmp    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414db0:	mov    eax,0x1d
  414db5:	jmp    414d60 <flatcc_verify_table_as_nested_root@@Base+0x180>
  414db7:	call   404180 <__stack_chk_fail@plt>
  414dbc:	nop    DWORD PTR [rax+0x0]

0000000000414dc0 <flatcc_verify_union_field@@Base>:
  414dc0:	endbr64 
  414dc4:	push   r12
  414dc6:	lea    esi,[rsi+rsi*1+0x2]
  414dca:	push   rbp
  414dcb:	push   rbx
  414dcc:	sub    rsp,0x30
  414dd0:	movzx  r8d,WORD PTR [rdi+0x1e]
  414dd5:	mov    rax,QWORD PTR fs:0x28
  414dde:	mov    QWORD PTR [rsp+0x28],rax
  414de3:	xor    eax,eax
  414de5:	cmp    si,r8w
  414de9:	jae    414ec0 <flatcc_verify_union_field@@Base+0x100>
  414def:	mov    r11,QWORD PTR [rdi+0x10]
  414df3:	movzx  eax,si
  414df6:	movzx  eax,WORD PTR [r11+rax*1]
  414dfb:	mov    r10,rax
  414dfe:	test   eax,eax
  414e00:	je     414ec0 <flatcc_verify_union_field@@Base+0x100>
  414e06:	movzx  ebx,WORD PTR [rdi+0x1c]
  414e0a:	lea    r9d,[rax+0x1]
  414e0e:	mov    eax,0xd
  414e13:	cmp    r9d,ebx
  414e16:	ja     414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414e1c:	mov    r9d,DWORD PTR [rdi+0x18]
  414e20:	mov    rbp,QWORD PTR [rdi]
  414e23:	add    r10,r9
  414e26:	add    r10,rbp
  414e29:	add    esi,0x2
  414e2c:	mov    r12,r9
  414e2f:	movzx  r9d,BYTE PTR [r10]
  414e33:	cmp    r8w,si
  414e37:	jbe    414f00 <flatcc_verify_union_field@@Base+0x140>
  414e3d:	movzx  esi,si
  414e40:	movzx  esi,WORD PTR [r11+rsi*1]
  414e45:	test   r9b,r9b
  414e48:	je     414ef0 <flatcc_verify_union_field@@Base+0x130>
  414e4e:	test   esi,esi
  414e50:	je     414f05 <flatcc_verify_union_field@@Base+0x145>
  414e56:	lea    edx,[rsi+0x4]
  414e59:	cmp    ebx,edx
  414e5b:	jb     414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414e5d:	add    r12d,esi
  414e60:	mov    eax,0xc
  414e65:	test   r12b,0x3
  414e69:	jne    414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414e6b:	test   r12d,r12d
  414e6e:	je     414f18 <flatcc_verify_union_field@@Base+0x158>
  414e74:	mov    rax,QWORD PTR [rdi+0x8]
  414e78:	mov    DWORD PTR [rsp+0x14],r12d
  414e7d:	mov    QWORD PTR [rsp+0x8],rax
  414e82:	mov    QWORD PTR [rsp],rbp
  414e86:	mov    rdi,rsp
  414e89:	mov    eax,DWORD PTR [rbp+r12*1+0x0]
  414e8e:	mov    DWORD PTR [rsp+0x18],eax
  414e92:	movzx  eax,BYTE PTR [r10]
  414e96:	mov    BYTE PTR [rsp+0x10],al
  414e9a:	call   rcx
  414e9c:	nop    DWORD PTR [rax+0x0]
  414ea0:	mov    rbx,QWORD PTR [rsp+0x28]
  414ea5:	xor    rbx,QWORD PTR fs:0x28
  414eae:	jne    414f1c <flatcc_verify_union_field@@Base+0x15c>
  414eb0:	add    rsp,0x30
  414eb4:	pop    rbx
  414eb5:	pop    rbp
  414eb6:	pop    r12
  414eb8:	ret    
  414eb9:	nop    DWORD PTR [rax+0x0]
  414ec0:	add    esi,0x2
  414ec3:	cmp    r8w,si
  414ec7:	jbe    414edc <flatcc_verify_union_field@@Base+0x11c>
  414ec9:	mov    rcx,QWORD PTR [rdi+0x10]
  414ecd:	movzx  esi,si
  414ed0:	cmp    WORD PTR [rcx+rsi*1],0x0
  414ed5:	mov    eax,0x17
  414eda:	jne    414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414edc:	cmp    edx,0x1
  414edf:	sbb    eax,eax
  414ee1:	not    eax
  414ee3:	and    eax,0x15
  414ee6:	jmp    414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  414ef0:	cmp    esi,0x1
  414ef3:	sbb    eax,eax
  414ef5:	not    eax
  414ef7:	and    eax,0x18
  414efa:	jmp    414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414efc:	nop    DWORD PTR [rax+0x0]
  414f00:	test   r9b,r9b
  414f03:	je     414f18 <flatcc_verify_union_field@@Base+0x158>
  414f05:	xor    eax,eax
  414f07:	test   edx,edx
  414f09:	setne  al
  414f0c:	shl    eax,0x2
  414f0f:	jmp    414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414f11:	nop    DWORD PTR [rax+0x0]
  414f18:	xor    eax,eax
  414f1a:	jmp    414ea0 <flatcc_verify_union_field@@Base+0xe0>
  414f1c:	call   404180 <__stack_chk_fail@plt>
  414f21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414f2c:	nop    DWORD PTR [rax+0x0]

0000000000414f30 <flatcc_verify_union_vector_field@@Base>:
  414f30:	endbr64 
  414f34:	push   r15
  414f36:	mov    r15d,edx
  414f39:	push   r14
  414f3b:	lea    r14d,[rsi-0x1]
  414f3f:	movzx  r14d,r14w
  414f43:	push   r13
  414f45:	mov    r13,rcx
  414f48:	push   r12
  414f4a:	push   rbp
  414f4b:	mov    rbp,rdi
  414f4e:	push   rbx
  414f4f:	lea    ebx,[rsi+rsi*1+0x2]
  414f53:	sub    rsp,0x48
  414f57:	mov    rax,QWORD PTR fs:0x28
  414f60:	mov    QWORD PTR [rsp+0x38],rax
  414f65:	xor    eax,eax
  414f67:	movzx  eax,WORD PTR [rdi+0x1e]
  414f6b:	cmp    bx,ax
  414f6e:	jae    415150 <flatcc_verify_union_vector_field@@Base+0x220>
  414f74:	mov    rcx,QWORD PTR [rdi+0x10]
  414f78:	movzx  edx,bx
  414f7b:	cmp    WORD PTR [rcx+rdx*1],0x0
  414f80:	je     415150 <flatcc_verify_union_vector_field@@Base+0x220>
  414f86:	mov    r9d,0xffffffff
  414f8c:	mov    r8d,0x1
  414f92:	mov    ecx,0x1
  414f97:	mov    edx,r15d
  414f9a:	mov    esi,r14d
  414f9d:	mov    rdi,rbp
  414fa0:	call   413d10 <flatcc_verify_vector_field@@Base>
  414fa5:	mov    r12d,eax
  414fa8:	test   eax,eax
  414faa:	jne    4151a0 <flatcc_verify_union_vector_field@@Base+0x270>
  414fb0:	movzx  edi,WORD PTR [rbp+0x1e]
  414fb4:	cmp    bx,di
  414fb7:	jae    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  414fbd:	mov    rsi,QWORD PTR [rbp+0x10]
  414fc1:	movzx  eax,bx
  414fc4:	movzx  edx,WORD PTR [rsi+rax*1]
  414fc8:	test   dx,dx
  414fcb:	je     415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  414fd1:	mov    eax,DWORD PTR [rbp+0x18]
  414fd4:	mov    r14,QWORD PTR [rbp+0x0]
  414fd8:	mov    rcx,rax
  414fdb:	add    rax,rdx
  414fde:	add    rax,r14
  414fe1:	je     415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  414fe7:	add    ebx,0x2
  414fea:	cmp    di,bx
  414fed:	jbe    415180 <flatcc_verify_union_vector_field@@Base+0x250>
  414ff3:	movzx  ebx,bx
  414ff6:	movzx  edx,WORD PTR [rsi+rbx*1]
  414ffa:	test   edx,edx
  414ffc:	je     415180 <flatcc_verify_union_vector_field@@Base+0x250>
  415002:	movzx  esi,WORD PTR [rbp+0x1c]
  415006:	lea    edi,[rdx+0x4]
  415009:	cmp    edi,esi
  41500b:	ja     4151d0 <flatcc_verify_union_vector_field@@Base+0x2a0>
  415011:	add    ecx,edx
  415013:	test   cl,0x3
  415016:	jne    4151e0 <flatcc_verify_union_vector_field@@Base+0x2b0>
  41501c:	test   ecx,ecx
  41501e:	je     415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415024:	mov    edi,DWORD PTR [rbp+0xc]
  415027:	mov    esi,ecx
  415029:	mov    edx,DWORD PTR [r14+rsi*1]
  41502d:	test   edi,edi
  41502f:	jle    415220 <flatcc_verify_union_vector_field@@Base+0x2f0>
  415035:	add    edx,ecx
  415037:	cmp    ecx,edx
  415039:	jae    415190 <flatcc_verify_union_vector_field@@Base+0x260>
  41503f:	mov    ecx,DWORD PTR [rbp+0x8]
  415042:	mov    r9d,edx
  415045:	lea    r8,[r9+0x4]
  415049:	mov    rsi,rcx
  41504c:	cmp    r8,rcx
  41504f:	ja     415190 <flatcc_verify_union_vector_field@@Base+0x260>
  415055:	test   r8b,0x3
  415059:	jne    4151f0 <flatcc_verify_union_vector_field@@Base+0x2c0>
  41505f:	mov    r10d,DWORD PTR [r14+r9*1]
  415063:	lea    r15d,[rdx+0x4]
  415067:	cmp    r10d,0x3fffffff
  41506e:	ja     4151f0 <flatcc_verify_union_vector_field@@Base+0x2c0>
  415074:	mov    r11d,ecx
  415077:	lea    ebp,[r10*4+0x0]
  41507f:	sub    r11d,r15d
  415082:	cmp    r11d,ebp
  415085:	jb     4151f0 <flatcc_verify_union_vector_field@@Base+0x2c0>
  41508b:	mov    ebx,DWORD PTR [rax]
  41508d:	add    rax,rbx
  415090:	cmp    DWORD PTR [rax],r10d
  415093:	jne    41522b <flatcc_verify_union_vector_field@@Base+0x2fb>
  415099:	lea    edx,[rdi-0x1]
  41509c:	mov    QWORD PTR [rsp+0x10],r14
  4150a1:	mov    DWORD PTR [rsp+0x18],ecx
  4150a5:	mov    DWORD PTR [rsp+0x1c],edx
  4150a9:	test   r10d,r10d
  4150ac:	je     415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4150ae:	lea    rbx,[rax+0x4]
  4150b2:	lea    rax,[rsp+0x10]
  4150b7:	add    ebp,r15d
  4150ba:	mov    QWORD PTR [rsp+0x8],rax
  4150bf:	jmp    4150dc <flatcc_verify_union_vector_field@@Base+0x1ac>
  4150c1:	nop    DWORD PTR [rax+0x0]
  4150c8:	test   dl,dl
  4150ca:	jne    415241 <flatcc_verify_union_vector_field@@Base+0x311>
  4150d0:	add    r15d,0x4
  4150d4:	inc    rbx
  4150d7:	cmp    r15d,ebp
  4150da:	je     415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4150dc:	mov    eax,r15d
  4150df:	mov    eax,DWORD PTR [r14+rax*1]
  4150e3:	movzx  edx,BYTE PTR [rbx]
  4150e6:	test   eax,eax
  4150e8:	je     4150c8 <flatcc_verify_union_vector_field@@Base+0x198>
  4150ea:	test   dl,dl
  4150ec:	je     41524c <flatcc_verify_union_vector_field@@Base+0x31c>
  4150f2:	mov    rdi,QWORD PTR [rsp+0x8]
  4150f7:	mov    BYTE PTR [rsp+0x20],dl
  4150fb:	mov    DWORD PTR [rsp+0x24],r15d
  415100:	mov    DWORD PTR [rsp+0x28],eax
  415104:	call   r13
  415107:	test   eax,eax
  415109:	je     4150d0 <flatcc_verify_union_vector_field@@Base+0x1a0>
  41510b:	mov    rdi,QWORD PTR [rsp+0x8]
  415110:	call   r13
  415113:	mov    r12d,eax
  415116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415120:	mov    rdi,QWORD PTR [rsp+0x38]
  415125:	xor    rdi,QWORD PTR fs:0x28
  41512e:	mov    eax,r12d
  415131:	jne    415257 <flatcc_verify_union_vector_field@@Base+0x327>
  415137:	add    rsp,0x48
  41513b:	pop    rbx
  41513c:	pop    rbp
  41513d:	pop    r12
  41513f:	pop    r13
  415141:	pop    r14
  415143:	pop    r15
  415145:	ret    
  415146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415150:	lea    edx,[rbx+0x2]
  415153:	cmp    ax,dx
  415156:	jbe    41516a <flatcc_verify_union_vector_field@@Base+0x23a>
  415158:	mov    rax,QWORD PTR [rbp+0x10]
  41515c:	movzx  edx,dx
  41515f:	cmp    WORD PTR [rax+rdx*1],0x0
  415164:	jne    414f86 <flatcc_verify_union_vector_field@@Base+0x56>
  41516a:	mov    r12d,0x16
  415170:	test   r15d,r15d
  415173:	je     414f86 <flatcc_verify_union_vector_field@@Base+0x56>
  415179:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  41517b:	nop    DWORD PTR [rax+rax*1+0x0]
  415180:	xor    r12d,r12d
  415183:	test   r15d,r15d
  415186:	setne  r12b
  41518a:	shl    r12d,0x2
  41518e:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415190:	mov    r12d,0x10
  415196:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415198:	nop    DWORD PTR [rax+rax*1+0x0]
  4151a0:	mov    r9d,0xffffffff
  4151a6:	mov    r8d,0x1
  4151ac:	mov    ecx,0x1
  4151b1:	mov    edx,r15d
  4151b4:	mov    esi,r14d
  4151b7:	mov    rdi,rbp
  4151ba:	call   413d10 <flatcc_verify_vector_field@@Base>
  4151bf:	mov    r12d,eax
  4151c2:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4151c7:	nop    WORD PTR [rax+rax*1+0x0]
  4151d0:	mov    r12d,0xd
  4151d6:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4151db:	nop    DWORD PTR [rax+rax*1+0x0]
  4151e0:	mov    r12d,0xc
  4151e6:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4151eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4151f0:	and    r8d,0x3
  4151f4:	jne    415190 <flatcc_verify_union_vector_field@@Base+0x260>
  4151f6:	mov    eax,DWORD PTR [r14+r9*1]
  4151fa:	sub    esi,0x4
  4151fd:	cmp    eax,0x3fffffff
  415202:	ja     415236 <flatcc_verify_union_vector_field@@Base+0x306>
  415204:	shl    eax,0x2
  415207:	sub    esi,edx
  415209:	cmp    esi,eax
  41520b:	mov    eax,0x1a
  415210:	cmovb  r12d,eax
  415214:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415219:	nop    DWORD PTR [rax+0x0]
  415220:	mov    r12d,0x3
  415226:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  41522b:	mov    r12d,0x22
  415231:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415236:	mov    r12d,0x19
  41523c:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415241:	mov    r12d,0x20
  415247:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  41524c:	mov    r12d,0x21
  415252:	jmp    415120 <flatcc_verify_union_vector_field@@Base+0x1f0>
  415257:	call   404180 <__stack_chk_fail@plt>
  41525c:	nop    DWORD PTR [rax+0x0]

0000000000415260 <__libc_csu_init@@Base>:
  415260:	endbr64 
  415264:	push   r15
  415266:	lea    r15,[rip+0x9b9b]        # 41ee08 <flatcc_builder_padding_base@@Base+0x4c88>
  41526d:	push   r14
  41526f:	mov    r14,rdx
  415272:	push   r13
  415274:	mov    r13,rsi
  415277:	push   r12
  415279:	mov    r12d,edi
  41527c:	push   rbp
  41527d:	lea    rbp,[rip+0x9b8c]        # 41ee10 <flatcc_builder_padding_base@@Base+0x4c90>
  415284:	push   rbx
  415285:	sub    rbp,r15
  415288:	sub    rsp,0x8
  41528c:	call   404000 <free@plt-0x140>
  415291:	sar    rbp,0x3
  415295:	je     4152b6 <__libc_csu_init@@Base+0x56>
  415297:	xor    ebx,ebx
  415299:	nop    DWORD PTR [rax+0x0]
  4152a0:	mov    rdx,r14
  4152a3:	mov    rsi,r13
  4152a6:	mov    edi,r12d
  4152a9:	call   QWORD PTR [r15+rbx*8]
  4152ad:	add    rbx,0x1
  4152b1:	cmp    rbp,rbx
  4152b4:	jne    4152a0 <__libc_csu_init@@Base+0x40>
  4152b6:	add    rsp,0x8
  4152ba:	pop    rbx
  4152bb:	pop    rbp
  4152bc:	pop    r12
  4152be:	pop    r13
  4152c0:	pop    r14
  4152c2:	pop    r15
  4152c4:	ret    
  4152c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004152d0 <__libc_csu_fini@@Base>:
  4152d0:	endbr64 
  4152d4:	ret    

Disassembly of section .fini:

00000000004152d8 <.fini>:
  4152d8:	endbr64 
  4152dc:	sub    rsp,0x8
  4152e0:	add    rsp,0x8
  4152e4:	ret    
