
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x24fe1]        # 428ff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x24fe2]        # 429008 <flatcc_builder_padding_base@@Base+0x62e8>
  404026:	jmp    QWORD PTR [rip+0x24fe4]        # 429010 <flatcc_builder_padding_base@@Base+0x62f0>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x24fe2]        # 429018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strtod@plt>:
  404040:	jmp    QWORD PTR [rip+0x24fda]        # 429020 <strtod@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <fread_unlocked@plt>:
  404050:	jmp    QWORD PTR [rip+0x24fd2]        # 429028 <fread_unlocked@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <fclose@plt>:
  404060:	jmp    QWORD PTR [rip+0x24fca]        # 429030 <fclose@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <strlen@plt>:
  404070:	jmp    QWORD PTR [rip+0x24fc2]        # 429038 <strlen@GLIBC_2.2.5>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <rewind@plt>:
  404080:	jmp    QWORD PTR [rip+0x24fba]        # 429040 <rewind@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <__assert_fail@plt>:
  404090:	jmp    QWORD PTR [rip+0x24fb2]        # 429048 <__assert_fail@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <memset@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x24faa]        # 429050 <memset@GLIBC_2.2.5>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <fputc@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x24fa2]        # 429058 <fputc@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

00000000004040c0 <memchr@plt>:
  4040c0:	jmp    QWORD PTR [rip+0x24f9a]        # 429060 <memchr@GLIBC_2.2.5>
  4040c6:	push   0x9
  4040cb:	jmp    404020 <free@plt-0x10>

00000000004040d0 <fprintf@plt>:
  4040d0:	jmp    QWORD PTR [rip+0x24f92]        # 429068 <fprintf@GLIBC_2.2.5>
  4040d6:	push   0xa
  4040db:	jmp    404020 <free@plt-0x10>

00000000004040e0 <ftell@plt>:
  4040e0:	jmp    QWORD PTR [rip+0x24f8a]        # 429070 <ftell@GLIBC_2.2.5>
  4040e6:	push   0xb
  4040eb:	jmp    404020 <free@plt-0x10>

00000000004040f0 <memcpy@plt>:
  4040f0:	jmp    QWORD PTR [rip+0x24f82]        # 429078 <memcpy@GLIBC_2.14>
  4040f6:	push   0xc
  4040fb:	jmp    404020 <free@plt-0x10>

0000000000404100 <malloc@plt>:
  404100:	jmp    QWORD PTR [rip+0x24f7a]        # 429080 <malloc@GLIBC_2.2.5>
  404106:	push   0xd
  40410b:	jmp    404020 <free@plt-0x10>

0000000000404110 <bcmp@plt>:
  404110:	jmp    QWORD PTR [rip+0x24f72]        # 429088 <bcmp@GLIBC_2.2.5>
  404116:	push   0xe
  40411b:	jmp    404020 <free@plt-0x10>

0000000000404120 <fseek@plt>:
  404120:	jmp    QWORD PTR [rip+0x24f6a]        # 429090 <fseek@GLIBC_2.2.5>
  404126:	push   0xf
  40412b:	jmp    404020 <free@plt-0x10>

0000000000404130 <realloc@plt>:
  404130:	jmp    QWORD PTR [rip+0x24f62]        # 429098 <realloc@GLIBC_2.2.5>
  404136:	push   0x10
  40413b:	jmp    404020 <free@plt-0x10>

0000000000404140 <fopen@plt>:
  404140:	jmp    QWORD PTR [rip+0x24f5a]        # 4290a0 <fopen@GLIBC_2.2.5>
  404146:	push   0x11
  40414b:	jmp    404020 <free@plt-0x10>

0000000000404150 <exit@plt>:
  404150:	jmp    QWORD PTR [rip+0x24f52]        # 4290a8 <exit@GLIBC_2.2.5>
  404156:	push   0x12
  40415b:	jmp    404020 <free@plt-0x10>

0000000000404160 <fwrite@plt>:
  404160:	jmp    QWORD PTR [rip+0x24f4a]        # 4290b0 <fwrite@GLIBC_2.2.5>
  404166:	push   0x13
  40416b:	jmp    404020 <free@plt-0x10>

0000000000404170 <posix_memalign@plt>:
  404170:	jmp    QWORD PTR [rip+0x24f42]        # 4290b8 <posix_memalign@GLIBC_2.2.5>
  404176:	push   0x14
  40417b:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

0000000000404180 <_start@@Base>:
  404180:	endbr64 
  404184:	xor    ebp,ebp
  404186:	mov    r9,rdx
  404189:	pop    rsi
  40418a:	mov    rdx,rsp
  40418d:	and    rsp,0xfffffffffffffff0
  404191:	push   rax
  404192:	push   rsp
  404193:	mov    r8,0x421a50
  40419a:	mov    rcx,0x4219e0
  4041a1:	mov    rdi,0x404950
  4041a8:	call   QWORD PTR [rip+0x24e3a]        # 428fe8 <__libc_start_main@GLIBC_2.2.5>
  4041ae:	hlt    
  4041af:	nop
  4041b0:	endbr64 
  4041b4:	ret    
  4041b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041bf:	nop
  4041c0:	mov    eax,0x4297d8
  4041c5:	cmp    rax,0x4297d8
  4041cb:	je     4041e0 <_start@@Base+0x60>
  4041cd:	mov    eax,0x0
  4041d2:	test   rax,rax
  4041d5:	je     4041e0 <_start@@Base+0x60>
  4041d7:	mov    edi,0x4297d8
  4041dc:	jmp    rax
  4041de:	xchg   ax,ax
  4041e0:	ret    
  4041e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041ec:	nop    DWORD PTR [rax+0x0]
  4041f0:	mov    esi,0x4297d8
  4041f5:	sub    rsi,0x4297d8
  4041fc:	mov    rax,rsi
  4041ff:	shr    rsi,0x3f
  404203:	sar    rax,0x3
  404207:	add    rsi,rax
  40420a:	sar    rsi,1
  40420d:	je     404220 <_start@@Base+0xa0>
  40420f:	mov    eax,0x0
  404214:	test   rax,rax
  404217:	je     404220 <_start@@Base+0xa0>
  404219:	mov    edi,0x4297d8
  40421e:	jmp    rax
  404220:	ret    
  404221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40422c:	nop    DWORD PTR [rax+0x0]
  404230:	endbr64 
  404234:	cmp    BYTE PTR [rip+0x2559d],0x0        # 4297d8 <__bss_start@@Base>
  40423b:	jne    404250 <_start@@Base+0xd0>
  40423d:	push   rbp
  40423e:	mov    rbp,rsp
  404241:	call   4041c0 <_start@@Base+0x40>
  404246:	mov    BYTE PTR [rip+0x2558b],0x1        # 4297d8 <__bss_start@@Base>
  40424d:	pop    rbp
  40424e:	ret    
  40424f:	nop
  404250:	ret    
  404251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40425c:	nop    DWORD PTR [rax+0x0]
  404260:	endbr64 
  404264:	jmp    4041f0 <_start@@Base+0x70>
  404266:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404270 <verify_parse@@Base>:
  404270:	push   rax
  404271:	test   rdi,rdi
  404274:	je     40433f <verify_parse@@Base+0xcf>
  40427a:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  404281:	jne    40433f <verify_parse@@Base+0xcf>
  404287:	mov    ecx,DWORD PTR [rdi]
  404289:	lea    rax,[rdi+rcx*1]
  40428d:	movsxd rcx,DWORD PTR [rdi+rcx*1]
  404291:	mov    rdx,rax
  404294:	sub    rdx,rcx
  404297:	cmp    WORD PTR [rdx],0x5
  40429b:	jbe    40435e <verify_parse@@Base+0xee>
  4042a1:	neg    rcx
  4042a4:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  4042a9:	test   rcx,rcx
  4042ac:	je     40435e <verify_parse@@Base+0xee>
  4042b2:	vmovss xmm0,DWORD PTR [rax+rcx*1]
  4042b7:	vucomiss xmm0,DWORD PTR [rip+0x1dd45]        # 422004 <_IO_stdin_used@@Base+0x4>
  4042bf:	jne    40437d <verify_parse@@Base+0x10d>
  4042c5:	jp     40437d <verify_parse@@Base+0x10d>
  4042cb:	vmovss xmm0,DWORD PTR [rax+rcx*1+0x4]
  4042d1:	vucomiss xmm0,DWORD PTR [rip+0x1dd2f]        # 422008 <_IO_stdin_used@@Base+0x8>
  4042d9:	jne    40439c <verify_parse@@Base+0x12c>
  4042df:	jp     40439c <verify_parse@@Base+0x12c>
  4042e5:	vmovss xmm0,DWORD PTR [rax+rcx*1+0x8]
  4042eb:	vucomiss xmm0,DWORD PTR [rip+0x1dd19]        # 42200c <_IO_stdin_used@@Base+0xc>
  4042f3:	jne    4043bb <verify_parse@@Base+0x14b>
  4042f9:	jp     4043bb <verify_parse@@Base+0x14b>
  4042ff:	vmovsd xmm0,QWORD PTR [rax+rcx*1+0x10]
  404305:	vucomisd xmm0,QWORD PTR [rip+0x1dd13]        # 422020 <_IO_stdin_used@@Base+0x20>
  40430d:	jne    4043da <verify_parse@@Base+0x16a>
  404313:	jp     4043da <verify_parse@@Base+0x16a>
  404319:	cmp    BYTE PTR [rax+rcx*1+0x18],0x2
  40431e:	jne    4043f9 <verify_parse@@Base+0x189>
  404324:	cmp    WORD PTR [rax+rcx*1+0x1a],0x5
  40432a:	jne    404418 <verify_parse@@Base+0x1a8>
  404330:	cmp    BYTE PTR [rax+rcx*1+0x1c],0x6
  404335:	jne    404437 <verify_parse@@Base+0x1c7>
  40433b:	xor    eax,eax
  40433d:	pop    rcx
  40433e:	ret    
  40433f:	lea    rdi,[rip+0x1e86b]        # 422bb1 <_IO_stdin_used@@Base+0xbb1>
  404346:	lea    rsi,[rip+0x1e88a]        # 422bd7 <_IO_stdin_used@@Base+0xbd7>
  40434d:	lea    rcx,[rip+0x1e8fc]        # 422c50 <_IO_stdin_used@@Base+0xc50>
  404354:	mov    edx,0x2b8
  404359:	call   404090 <__assert_fail@plt>
  40435e:	lea    rdi,[rip+0x1fdfd]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  404365:	lea    rsi,[rip+0x1e6d9]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  40436c:	lea    rcx,[rip+0x1e73e]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  404373:	mov    edx,0x2d
  404378:	call   404090 <__assert_fail@plt>
  40437d:	lea    rdi,[rip+0x1fdde]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  404384:	lea    rsi,[rip+0x1e6ba]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  40438b:	lea    rcx,[rip+0x1e71f]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  404392:	mov    edx,0x2e
  404397:	call   404090 <__assert_fail@plt>
  40439c:	lea    rdi,[rip+0x1fdbf]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  4043a3:	lea    rsi,[rip+0x1e69b]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  4043aa:	lea    rcx,[rip+0x1e700]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  4043b1:	mov    edx,0x2f
  4043b6:	call   404090 <__assert_fail@plt>
  4043bb:	lea    rdi,[rip+0x1fda0]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  4043c2:	lea    rsi,[rip+0x1e67c]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  4043c9:	lea    rcx,[rip+0x1e6e1]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  4043d0:	mov    edx,0x30
  4043d5:	call   404090 <__assert_fail@plt>
  4043da:	lea    rdi,[rip+0x1fd81]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  4043e1:	lea    rsi,[rip+0x1e65d]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  4043e8:	lea    rcx,[rip+0x1e6c2]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  4043ef:	mov    edx,0x31
  4043f4:	call   404090 <__assert_fail@plt>
  4043f9:	lea    rdi,[rip+0x1fd62]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  404400:	lea    rsi,[rip+0x1e63e]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  404407:	lea    rcx,[rip+0x1e6a3]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  40440e:	mov    edx,0x32
  404413:	call   404090 <__assert_fail@plt>
  404418:	lea    rdi,[rip+0x1fd43]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  40441f:	lea    rsi,[rip+0x1e61f]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  404426:	lea    rcx,[rip+0x1e684]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  40442d:	mov    edx,0x35
  404432:	call   404090 <__assert_fail@plt>
  404437:	lea    rdi,[rip+0x1fd24]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  40443e:	lea    rsi,[rip+0x1e600]        # 422a45 <_IO_stdin_used@@Base+0xa45>
  404445:	lea    rcx,[rip+0x1e665]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  40444c:	mov    edx,0x36
  404451:	call   404090 <__assert_fail@plt>
  404456:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404460 <test_parse@@Base>:
  404460:	push   rbp
  404461:	mov    rbp,rsp
  404464:	push   r15
  404466:	push   r14
  404468:	push   r13
  40446a:	push   r12
  40446c:	push   rbx
  40446d:	and    rsp,0xffffffffffffffe0
  404471:	sub    rsp,0x240
  404478:	lea    r15,[rsp+0xa0]
  404480:	mov    rdi,r15
  404483:	call   418f60 <flatcc_builder_init@@Base>
  404488:	lea    rbx,[rip+0x24c41]        # 4290d0 <filename@@Base>
  40448f:	mov    rdi,QWORD PTR [rbx]
  404492:	lea    rsi,[rip+0x1e80f]        # 422ca8 <_IO_stdin_used@@Base+0xca8>
  404499:	call   404140 <fopen@plt>
  40449e:	test   rax,rax
  4044a1:	je     40465f <test_parse@@Base+0x1ff>
  4044a7:	mov    r13,rax
  4044aa:	mov    rdi,rax
  4044ad:	xor    esi,esi
  4044af:	mov    edx,0x2
  4044b4:	call   404120 <fseek@plt>
  4044b9:	mov    rdi,r13
  4044bc:	call   4040e0 <ftell@plt>
  4044c1:	cmp    rax,0x2800
  4044c7:	ja     404657 <test_parse@@Base+0x1f7>
  4044cd:	mov    r12,rax
  4044d0:	mov    rdi,r13
  4044d3:	call   404080 <rewind@plt>
  4044d8:	test   r12,r12
  4044db:	mov    edi,0x1
  4044e0:	cmovne rdi,r12
  4044e4:	call   404100 <malloc@plt>
  4044e9:	test   rax,rax
  4044ec:	je     404657 <test_parse@@Base+0x1f7>
  4044f2:	mov    r14,rax
  4044f5:	mov    QWORD PTR [rsp+0x8],rax
  4044fa:	xor    ecx,ecx
  4044fc:	nop    DWORD PTR [rax+0x0]
  404500:	mov    rbx,rcx
  404503:	lea    rdi,[r14+rcx*1]
  404507:	mov    rdx,r12
  40450a:	sub    rdx,rcx
  40450d:	mov    esi,0x1
  404512:	mov    rcx,r13
  404515:	call   404050 <fread_unlocked@plt>
  40451a:	lea    rcx,[rax+rbx*1]
  40451e:	test   rax,rax
  404521:	jne    404500 <test_parse@@Base+0xa0>
  404523:	mov    rdi,r13
  404526:	call   404060 <fclose@plt>
  40452b:	cmp    r12,rbx
  40452e:	jne    404644 <test_parse@@Base+0x1e4>
  404534:	add    r14,r12
  404537:	vxorps xmm0,xmm0,xmm0
  40453b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  404541:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  404547:	mov    QWORD PTR [rsp+0x80],0x0
  404553:	mov    QWORD PTR [rsp+0x40],r15
  404558:	mov    rax,QWORD PTR [rsp+0x8]
  40455d:	mov    QWORD PTR [rsp+0x48],rax
  404562:	mov    DWORD PTR [rsp+0x58],0x1
  40456a:	mov    DWORD PTR [rsp+0x50],0x0
  404572:	mov    QWORD PTR [rsp+0x68],rax
  404577:	mov    QWORD PTR [rsp+0x70],r14
  40457c:	mov    QWORD PTR [rsp+0x78],rax
  404581:	lea    rsi,[rip+0x1e4b8]        # 422a40 <_IO_stdin_used@@Base+0xa40>
  404588:	xor    r13d,r13d
  40458b:	mov    rdi,r15
  40458e:	xor    edx,edx
  404590:	xor    ecx,ecx
  404592:	vzeroupper 
  404595:	call   419cf0 <flatcc_builder_start_buffer@@Base>
  40459a:	test   eax,eax
  40459c:	lea    rbx,[rip+0x24b2d]        # 4290d0 <filename@@Base>
  4045a3:	jne    4045e4 <test_parse@@Base+0x184>
  4045a5:	lea    rdi,[rsp+0x40]
  4045aa:	lea    rcx,[rsp+0x20]
  4045af:	mov    rsi,QWORD PTR [rsp+0x8]
  4045b4:	mov    rdx,r14
  4045b7:	call   4049d0 <main@@Base+0x80>
  4045bc:	mov    r13d,DWORD PTR [rsp+0x60]
  4045c1:	test   r13d,r13d
  4045c4:	jne    4045e4 <test_parse@@Base+0x184>
  4045c6:	mov    esi,DWORD PTR [rsp+0x20]
  4045ca:	lea    rdi,[rsp+0xa0]
  4045d2:	call   419f10 <flatcc_builder_end_buffer@@Base>
  4045d7:	test   eax,eax
  4045d9:	jne    404692 <test_parse@@Base+0x232>
  4045df:	mov    r13d,DWORD PTR [rsp+0x60]
  4045e4:	mov    rax,QWORD PTR [rip+0x24a0d]        # 428ff8 <stderr@GLIBC_2.2.5>
  4045eb:	mov    r14,QWORD PTR [rax]
  4045ee:	mov    r15,QWORD PTR [rbx]
  4045f1:	mov    r12d,DWORD PTR [rsp+0x58]
  4045f6:	mov    ebx,DWORD PTR [rsp+0x78]
  4045fa:	sub    ebx,DWORD PTR [rsp+0x48]
  4045fe:	inc    ebx
  404600:	mov    edi,r13d
  404603:	call   41e2e0 <flatcc_json_parser_error_string@@Base>
  404608:	lea    rsi,[rip+0x1e543]        # 422b52 <_IO_stdin_used@@Base+0xb52>
  40460f:	mov    rdi,r14
  404612:	mov    rdx,r15
  404615:	mov    ecx,r12d
  404618:	mov    r8d,ebx
  40461b:	mov    r9,rax
  40461e:	xor    eax,eax
  404620:	call   4040d0 <fprintf@plt>
  404625:	mov    r14d,0xffffffff
  40462b:	mov    rdi,QWORD PTR [rsp+0x8]
  404630:	call   404030 <free@plt>
  404635:	lea    rdi,[rsp+0xa0]
  40463d:	call   419320 <flatcc_builder_clear@@Base>
  404642:	jmp    404680 <test_parse@@Base+0x220>
  404644:	mov    rdi,QWORD PTR [rsp+0x8]
  404649:	call   404030 <free@plt>
  40464e:	lea    rbx,[rip+0x24a7b]        # 4290d0 <filename@@Base>
  404655:	jmp    40465f <test_parse@@Base+0x1ff>
  404657:	mov    rdi,r13
  40465a:	call   404060 <fclose@plt>
  40465f:	mov    rax,QWORD PTR [rip+0x24992]        # 428ff8 <stderr@GLIBC_2.2.5>
  404666:	mov    rdi,QWORD PTR [rax]
  404669:	mov    rdx,QWORD PTR [rbx]
  40466c:	lea    rsi,[rip+0x1e457]        # 422aca <_IO_stdin_used@@Base+0xaca>
  404673:	xor    eax,eax
  404675:	call   4040d0 <fprintf@plt>
  40467a:	mov    r14d,0xffffffff
  404680:	mov    eax,r14d
  404683:	lea    rsp,[rbp-0x28]
  404687:	pop    rbx
  404688:	pop    r12
  40468a:	pop    r13
  40468c:	pop    r14
  40468e:	pop    r15
  404690:	pop    rbp
  404691:	ret    
  404692:	mov    rax,QWORD PTR [rsp+0x8]
  404697:	mov    QWORD PTR [rsp+0x80],rax
  40469f:	mov    rax,QWORD PTR [rip+0x24952]        # 428ff8 <stderr@GLIBC_2.2.5>
  4046a6:	mov    rdi,QWORD PTR [rax]
  4046a9:	mov    rdx,QWORD PTR [rbx]
  4046ac:	mov    ecx,DWORD PTR [rsp+0x58]
  4046b0:	lea    rsi,[rip+0x1e437]        # 422aee <_IO_stdin_used@@Base+0xaee>
  4046b7:	xor    eax,eax
  4046b9:	call   4040d0 <fprintf@plt>
  4046be:	lea    rdi,[rsp+0xa0]
  4046c6:	lea    rsi,[rsp+0x18]
  4046cb:	call   41d680 <flatcc_builder_finalize_aligned_buffer@@Base>
  4046d0:	mov    QWORD PTR [rsp+0x10],rax
  4046d5:	mov    rbx,QWORD PTR [rsp+0x18]
  4046da:	mov    rax,QWORD PTR [rip+0x248ff]        # 428fe0 <stdout@GLIBC_2.2.5>
  4046e1:	mov    r13,QWORD PTR [rax]
  4046e4:	lea    rsi,[rip+0x1e5cb]        # 422cb6 <_IO_stdin_used@@Base+0xcb6>
  4046eb:	lea    rdx,[rip+0x1e41e]        # 422b10 <_IO_stdin_used@@Base+0xb10>
  4046f2:	mov    rdi,r13
  4046f5:	xor    eax,eax
  4046f7:	call   4040d0 <fprintf@plt>
  4046fc:	mov    rax,rbx
  4046ff:	test   eax,eax
  404701:	je     404820 <test_parse@@Base+0x3c0>
  404707:	mov    ecx,eax
  404709:	mov    QWORD PTR [rsp+0x90],rcx
  404711:	xor    r14d,r14d
  404714:	mov    rbx,QWORD PTR [rsp+0x10]
  404719:	mov    QWORD PTR [rsp+0x98],rax
  404721:	jmp    404791 <test_parse@@Base+0x331>
  404723:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40472d:	nop    DWORD PTR [rax]
  404730:	mov    rdi,r13
  404733:	lea    rsi,[rip+0x1e587]        # 422cc1 <_IO_stdin_used@@Base+0xcc1>
  40473a:	mov    edx,r14d
  40473d:	xor    eax,eax
  40473f:	call   4040d0 <fprintf@plt>
  404744:	movzx  edx,BYTE PTR [rbx+r14*1]
  404749:	mov    rdi,r13
  40474c:	lea    rsi,[rip+0x1e576]        # 422cc9 <_IO_stdin_used@@Base+0xcc9>
  404753:	xor    eax,eax
  404755:	call   4040d0 <fprintf@plt>
  40475a:	movzx  eax,BYTE PTR [rbx+r14*1]
  40475f:	lea    ecx,[rax-0x20]
  404762:	cmp    cl,0x5e
  404765:	mov    ecx,0x2e
  40476a:	cmova  eax,ecx
  40476d:	lea    rcx,[rsp+0x20]
  404772:	mov    BYTE PTR [r15+rcx*1],al
  404776:	mov    BYTE PTR [r15+rcx*1+0x1],0x0
  40477c:	inc    r14
  40477f:	cmp    QWORD PTR [rsp+0x90],r14
  404787:	mov    r15,QWORD PTR [rsp+0x98]
  40478f:	je     4047e4 <test_parse@@Base+0x384>
  404791:	mov    r15d,r14d
  404794:	and    r15d,0xf
  404798:	test   r15d,r15d
  40479b:	je     4047c0 <test_parse@@Base+0x360>
  40479d:	test   r14b,0x7
  4047a1:	jne    404744 <test_parse@@Base+0x2e4>
  4047a3:	mov    edi,0x20
  4047a8:	mov    rsi,r13
  4047ab:	call   4040b0 <fputc@plt>
  4047b0:	jmp    404744 <test_parse@@Base+0x2e4>
  4047b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047bc:	nop    DWORD PTR [rax+0x0]
  4047c0:	test   r14,r14
  4047c3:	je     404730 <test_parse@@Base+0x2d0>
  4047c9:	mov    rdi,r13
  4047cc:	lea    rsi,[rip+0x1e4e8]        # 422cbb <_IO_stdin_used@@Base+0xcbb>
  4047d3:	lea    rdx,[rsp+0x20]
  4047d8:	xor    eax,eax
  4047da:	call   4040d0 <fprintf@plt>
  4047df:	jmp    404730 <test_parse@@Base+0x2d0>
  4047e4:	test   r15b,0xf
  4047e8:	je     404820 <test_parse@@Base+0x3c0>
  4047ea:	inc    r15d
  4047ed:	lea    r14,[rip+0x1e4f9]        # 422ced <_IO_stdin_used@@Base+0xced>
  4047f4:	mov    ebx,r15d
  4047f7:	nop    WORD PTR [rax+rax*1+0x0]
  404800:	mov    esi,0x3
  404805:	mov    edx,0x1
  40480a:	mov    rdi,r14
  40480d:	mov    rcx,r13
  404810:	call   404160 <fwrite@plt>
  404815:	inc    ebx
  404817:	test   r15b,0xf
  40481b:	mov    r15d,ebx
  40481e:	jne    404800 <test_parse@@Base+0x3a0>
  404820:	lea    rsi,[rip+0x1e494]        # 422cbb <_IO_stdin_used@@Base+0xcbb>
  404827:	xor    r14d,r14d
  40482a:	lea    rdx,[rsp+0x20]
  40482f:	mov    rdi,r13
  404832:	xor    eax,eax
  404834:	call   4040d0 <fprintf@plt>
  404839:	mov    rax,QWORD PTR [rip+0x247b8]        # 428ff8 <stderr@GLIBC_2.2.5>
  404840:	mov    rdi,QWORD PTR [rax]
  404843:	mov    rcx,QWORD PTR [rsp+0x18]
  404848:	lea    rsi,[rip+0x1e2e0]        # 422b2f <_IO_stdin_used@@Base+0xb2f>
  40484f:	mov    rdx,r12
  404852:	xor    eax,eax
  404854:	call   4040d0 <fprintf@plt>
  404859:	mov    rdi,QWORD PTR [rsp+0x10]
  40485e:	call   404270 <verify_parse@@Base>
  404863:	mov    r15,QWORD PTR [rsp+0x18]
  404868:	mov    rax,QWORD PTR [rip+0x24771]        # 428fe0 <stdout@GLIBC_2.2.5>
  40486f:	mov    rbx,QWORD PTR [rax]
  404872:	lea    rsi,[rip+0x1e456]        # 422ccf <_IO_stdin_used@@Base+0xccf>
  404879:	lea    rdx,[rip+0x1e2a8]        # 422b28 <_IO_stdin_used@@Base+0xb28>
  404880:	mov    rdi,rbx
  404883:	xor    eax,eax
  404885:	call   4040d0 <fprintf@plt>
  40488a:	test   r15d,r15d
  40488d:	je     404907 <test_parse@@Base+0x4a7>
  40488f:	mov    r15d,r15d
  404892:	lea    r13,[rip+0x1e458]        # 422cf1 <_IO_stdin_used@@Base+0xcf1>
  404899:	xor    r12d,r12d
  40489c:	test   r12b,0xf
  4048a0:	jne    4048ee <test_parse@@Base+0x48e>
  4048a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048ac:	nop    DWORD PTR [rax+0x0]
  4048b0:	mov    esi,0x4
  4048b5:	mov    edx,0x1
  4048ba:	lea    rdi,[rip+0x1e42b]        # 422cec <_IO_stdin_used@@Base+0xcec>
  4048c1:	mov    rcx,rbx
  4048c4:	call   404160 <fwrite@plt>
  4048c9:	mov    rax,QWORD PTR [rsp+0x10]
  4048ce:	movzx  edx,BYTE PTR [rax+r12*1]
  4048d3:	mov    rdi,rbx
  4048d6:	mov    rsi,r13
  4048d9:	xor    eax,eax
  4048db:	call   4040d0 <fprintf@plt>
  4048e0:	inc    r12
  4048e3:	cmp    r15,r12
  4048e6:	je     404907 <test_parse@@Base+0x4a7>
  4048e8:	test   r12b,0xf
  4048ec:	je     4048b0 <test_parse@@Base+0x450>
  4048ee:	test   r12b,0x7
  4048f2:	jne    4048c9 <test_parse@@Base+0x469>
  4048f4:	mov    esi,0x3
  4048f9:	mov    edx,0x1
  4048fe:	lea    rdi,[rip+0x1e3e8]        # 422ced <_IO_stdin_used@@Base+0xced>
  404905:	jmp    4048c1 <test_parse@@Base+0x461>
  404907:	lea    rdi,[rip+0x1e3ec]        # 422cfa <_IO_stdin_used@@Base+0xcfa>
  40490e:	mov    esi,0x4
  404913:	mov    edx,0x1
  404918:	mov    rcx,rbx
  40491b:	call   404160 <fwrite@plt>
  404920:	lea    rdi,[rsp+0xa0]
  404928:	call   419160 <flatcc_builder_reset@@Base>
  40492d:	mov    rdi,QWORD PTR [rsp+0x10]
  404932:	test   rdi,rdi
  404935:	je     40462b <test_parse@@Base+0x1cb>
  40493b:	call   41d7b0 <flatcc_builder_aligned_free@@Base>
  404940:	jmp    40462b <test_parse@@Base+0x1cb>
  404945:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40494f:	nop

0000000000404950 <main@@Base>:
  404950:	push   r15
  404952:	push   r14
  404954:	push   rbx
  404955:	mov    r14,rsi
  404958:	mov    ebx,edi
  40495a:	mov    r15,QWORD PTR [rip+0x24697]        # 428ff8 <stderr@GLIBC_2.2.5>
  404961:	mov    rcx,QWORD PTR [r15]
  404964:	lea    rdi,[rip+0x1e1f5]        # 422b60 <_IO_stdin_used@@Base+0xb60>
  40496b:	mov    esi,0x10
  404970:	mov    edx,0x1
  404975:	call   404160 <fwrite@plt>
  40497a:	lea    eax,[rbx-0x1]
  40497d:	cmp    eax,0x2
  404980:	jae    40499f <main@@Base+0x4f>
  404982:	cmp    ebx,0x2
  404985:	jne    404995 <main@@Base+0x45>
  404987:	mov    rax,QWORD PTR [r14+0x8]
  40498b:	lea    rcx,[rip+0x2473e]        # 4290d0 <filename@@Base>
  404992:	mov    QWORD PTR [rcx],rax
  404995:	pop    rbx
  404996:	pop    r14
  404998:	pop    r15
  40499a:	jmp    404460 <test_parse@@Base>
  40499f:	mov    rcx,QWORD PTR [r15]
  4049a2:	lea    rdi,[rip+0x1e1c8]        # 422b71 <_IO_stdin_used@@Base+0xb71>
  4049a9:	mov    esi,0x3f
  4049ae:	mov    edx,0x1
  4049b3:	call   404160 <fwrite@plt>
  4049b8:	mov    edi,0x1
  4049bd:	call   404150 <exit@plt>
  4049c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049cc:	nop    DWORD PTR [rax+0x0]
  4049d0:	push   rbp
  4049d1:	push   r15
  4049d3:	push   r14
  4049d5:	push   r13
  4049d7:	push   r12
  4049d9:	push   rbx
  4049da:	sub    rsp,0x58
  4049de:	mov    rbp,rcx
  4049e1:	mov    r15,rdx
  4049e4:	mov    rbx,rsi
  4049e7:	mov    r14,rdi
  4049ea:	mov    DWORD PTR [rcx],0x0
  4049f0:	mov    rdi,QWORD PTR [rdi]
  4049f3:	mov    esi,0x24
  4049f8:	call   41af90 <flatcc_builder_start_table@@Base>
  4049fd:	test   eax,eax
  4049ff:	je     404a29 <main@@Base+0xd9>
  404a01:	mov    rdi,r14
  404a04:	mov    rsi,rbx
  404a07:	mov    rdx,r15
  404a0a:	mov    ecx,0x21
  404a0f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  404a14:	mov    rbx,rax
  404a17:	mov    rax,rbx
  404a1a:	add    rsp,0x58
  404a1e:	pop    rbx
  404a1f:	pop    r12
  404a21:	pop    r13
  404a23:	pop    r14
  404a25:	pop    r15
  404a27:	pop    rbp
  404a28:	ret    
  404a29:	lea    r8,[rsp+0x40]
  404a2e:	mov    ecx,0x1
  404a33:	mov    rdi,r14
  404a36:	mov    rsi,rbx
  404a39:	mov    rdx,r15
  404a3c:	call   420630 <flatcc_json_parser_prepare_unions@@Base>
  404a41:	cmp    rax,r15
  404a44:	je     404a01 <main@@Base+0xb1>
  404a46:	cmp    rbx,r15
  404a49:	je     404a76 <main@@Base+0x126>
  404a4b:	cmp    BYTE PTR [rbx],0x7b
  404a4e:	jne    404a76 <main@@Base+0x126>
  404a50:	lea    rax,[rbx+0x1]
  404a54:	mov    rcx,r15
  404a57:	sub    rcx,rax
  404a5a:	cmp    rcx,0x2
  404a5e:	jl     404ad6 <main@@Base+0x186>
  404a60:	cmp    BYTE PTR [rax],0x20
  404a63:	jg     404ae4 <main@@Base+0x194>
  404a65:	jne    404ad6 <main@@Base+0x186>
  404a67:	cmp    BYTE PTR [rbx+0x2],0x20
  404a6b:	jle    404ad6 <main@@Base+0x186>
  404a6d:	add    rbx,0x2
  404a71:	mov    rax,rbx
  404a74:	jmp    404ae4 <main@@Base+0x194>
  404a76:	mov    rdi,r14
  404a79:	mov    rsi,rbx
  404a7c:	mov    rdx,r15
  404a7f:	mov    ecx,0x15
  404a84:	call   41e300 <flatcc_json_parser_set_error@@Base>
  404a89:	mov    rbx,rax
  404a8c:	cmp    DWORD PTR [r14+0x20],0x0
  404a91:	jne    404a01 <main@@Base+0xb1>
  404a97:	mov    rdi,QWORD PTR [r14]
  404a9a:	mov    esi,0x3
  404a9f:	call   41b860 <flatcc_builder_check_required_field@@Base>
  404aa4:	test   eax,eax
  404aa6:	je     404b23 <main@@Base+0x1d3>
  404aa8:	mov    rcx,QWORD PTR [rsp+0x40]
  404aad:	mov    rdi,r14
  404ab0:	mov    rsi,rbx
  404ab3:	mov    rdx,r15
  404ab6:	call   4206b0 <flatcc_json_parser_finalize_unions@@Base>
  404abb:	mov    rbx,rax
  404abe:	mov    rdi,QWORD PTR [r14]
  404ac1:	call   41b9a0 <flatcc_builder_end_table@@Base>
  404ac6:	mov    DWORD PTR [rbp+0x0],eax
  404ac9:	test   eax,eax
  404acb:	jne    404a17 <main@@Base+0xc7>
  404ad1:	jmp    404a01 <main@@Base+0xb1>
  404ad6:	mov    rdi,r14
  404ad9:	mov    rsi,rax
  404adc:	mov    rdx,r15
  404adf:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  404ae4:	mov    rsi,r15
  404ae7:	cmp    rax,r15
  404aea:	je     404b41 <main@@Base+0x1f1>
  404aec:	cmp    BYTE PTR [rax],0x7d
  404aef:	jne    404b3e <main@@Base+0x1ee>
  404af1:	lea    rbx,[rax+0x1]
  404af5:	mov    rcx,r15
  404af8:	sub    rcx,rbx
  404afb:	cmp    rcx,0x2
  404aff:	jl     40da3d <main@@Base+0x90ed>
  404b05:	cmp    BYTE PTR [rbx],0x20
  404b08:	jg     404a8c <main@@Base+0x13c>
  404b0a:	jne    40da3d <main@@Base+0x90ed>
  404b10:	cmp    BYTE PTR [rax+0x2],0x20
  404b14:	jle    40da3d <main@@Base+0x90ed>
  404b1a:	add    rax,0x2
  404b1e:	jmp    404a89 <main@@Base+0x139>
  404b23:	mov    rdi,r14
  404b26:	mov    rsi,rbx
  404b29:	mov    rdx,r15
  404b2c:	mov    ecx,0x1d
  404b31:	call   41e300 <flatcc_json_parser_set_error@@Base>
  404b36:	mov    rbx,rax
  404b39:	jmp    404a01 <main@@Base+0xb1>
  404b3e:	mov    rsi,rax
  404b41:	movabs rax,0x7465737400000000
  404b4b:	lea    rcx,[r14+0x14]
  404b4f:	mov    QWORD PTR [rsp+0x8],rcx
  404b54:	add    rax,0x61727261
  404b5a:	mov    QWORD PTR [rsp+0x48],rax
  404b5f:	mov    QWORD PTR [rsp+0x30],rbp
  404b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b6e:	xchg   ax,ax
  404b70:	mov    r13,r15
  404b73:	cmp    rsi,r15
  404b76:	je     404bb5 <main@@Base+0x265>
  404b78:	mov    al,BYTE PTR [rsi]
  404b7a:	cmp    al,0x2e
  404b7c:	je     404b92 <main@@Base+0x242>
  404b7e:	cmp    al,0x22
  404b80:	jne    404ba7 <main@@Base+0x257>
  404b82:	inc    rsi
  404b85:	mov    rax,QWORD PTR [rsp+0x8]
  404b8a:	mov    DWORD PTR [rax],0x0
  404b90:	jmp    404bb2 <main@@Base+0x262>
  404b92:	mov    rdi,r14
  404b95:	mov    rdx,r15
  404b98:	mov    ecx,0x5
  404b9d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  404ba2:	mov    r13,rax
  404ba5:	jmp    404bb5 <main@@Base+0x265>
  404ba7:	mov    rax,QWORD PTR [rsp+0x8]
  404bac:	mov    DWORD PTR [rax],0x1
  404bb2:	mov    r13,rsi
  404bb5:	mov    r12,r15
  404bb8:	sub    r12,r13
  404bbb:	cmp    r12,0x8
  404bbf:	jb     404bc9 <main@@Base+0x279>
  404bc1:	movbe  rbp,QWORD PTR [r13+0x0]
  404bc7:	jmp    404c45 <main@@Base+0x2f5>
  404bc9:	lea    rax,[r12-0x1]
  404bce:	cmp    rax,0x6
  404bd2:	ja     409d41 <main@@Base+0x53f1>
  404bd8:	lea    rcx,[rip+0x1d449]        # 422028 <_IO_stdin_used@@Base+0x28>
  404bdf:	movsxd rbp,DWORD PTR [rcx+rax*4]
  404be3:	add    rbp,rcx
  404be6:	xor    ecx,ecx
  404be8:	xor    eax,eax
  404bea:	xor    edx,edx
  404bec:	xor    esi,esi
  404bee:	xor    edi,edi
  404bf0:	xor    ebx,ebx
  404bf2:	jmp    rbp
  404bf4:	movsx  rcx,BYTE PTR [r13+0x6]
  404bf9:	shl    rcx,0x8
  404bfd:	movsx  rax,BYTE PTR [r13+0x5]
  404c02:	shl    rax,0x10
  404c06:	or     rax,rcx
  404c09:	movsx  rdx,BYTE PTR [r13+0x4]
  404c0e:	shl    rdx,0x18
  404c12:	or     rdx,rax
  404c15:	movsx  rsi,BYTE PTR [r13+0x3]
  404c1a:	shl    rsi,0x20
  404c1e:	or     rsi,rdx
  404c21:	movsx  rdi,BYTE PTR [r13+0x2]
  404c26:	shl    rdi,0x28
  404c2a:	or     rdi,rsi
  404c2d:	movsx  rbx,BYTE PTR [r13+0x1]
  404c32:	shl    rbx,0x30
  404c36:	or     rbx,rdi
  404c39:	movzx  ebp,BYTE PTR [r13+0x0]
  404c3e:	shl    rbp,0x38
  404c42:	or     rbp,rbx
  404c45:	movabs rdx,0x7465737400000000
  404c4f:	cmp    rbp,QWORD PTR [rsp+0x48]
  404c54:	jae    404cf1 <main@@Base+0x3a1>
  404c5a:	movabs rax,0x6e616d6500000000
  404c64:	cmp    rbp,rax
  404c67:	jae    404d2b <main@@Base+0x3db>
  404c6d:	movabs rax,0x666c657800000000
  404c77:	cmp    rbp,rax
  404c7a:	jae    404e0d <main@@Base+0x4bd>
  404c80:	and    rbp,0xffffffffff000000
  404c87:	movabs rax,0x636f6c6f72000000
  404c91:	cmp    rbp,rax
  404c94:	je     405200 <main@@Base+0x8b0>
  404c9a:	movabs rax,0x656e656d79000000
  404ca4:	cmp    rbp,rax
  404ca7:	jne    409d41 <main@@Base+0x53f1>
  404cad:	mov    rax,r13
  404cb0:	cmp    r12,0x6
  404cb4:	jl     406d39 <main@@Base+0x23e9>
  404cba:	mov    rax,QWORD PTR [rsp+0x8]
  404cbf:	cmp    DWORD PTR [rax],0x0
  404cc2:	mov    cl,BYTE PTR [r13+0x5]
  404cc6:	je     405b91 <main@@Base+0x1241>
  404ccc:	cmp    cl,0x21
  404ccf:	jl     404cdd <main@@Base+0x38d>
  404cd1:	mov    rax,r13
  404cd4:	cmp    cl,0x3a
  404cd7:	jne    406d39 <main@@Base+0x23e9>
  404cdd:	lea    rsi,[r13+0x5]
  404ce1:	mov    rax,QWORD PTR [rsp+0x8]
  404ce6:	mov    DWORD PTR [rax],0x0
  404cec:	jmp    405ba1 <main@@Base+0x1251>
  404cf1:	lea    rax,[rdx+0x66330000]
  404cf8:	cmp    rbp,rax
  404cfb:	jae    404dab <main@@Base+0x45b>
  404d01:	cmp    rbp,QWORD PTR [rsp+0x48]
  404d06:	jne    404e82 <main@@Base+0x532>
  404d0c:	lea    r12,[r13+0x8]
  404d10:	mov    rax,r15
  404d13:	sub    rax,r12
  404d16:	cmp    rax,0x8
  404d1a:	jb     404f58 <main@@Base+0x608>
  404d20:	movbe  rcx,QWORD PTR [r12]
  404d26:	jmp    404fd7 <main@@Base+0x687>
  404d2b:	cmp    rbp,rdx
  404d2e:	jae    404ed7 <main@@Base+0x587>
  404d34:	movabs rax,0x706172656e745f6e
  404d3e:	cmp    rbp,rax
  404d41:	jae    40504c <main@@Base+0x6fc>
  404d47:	movabs rax,0xffffffff00000000
  404d51:	and    rbp,rax
  404d54:	movabs rax,0x6e616d6500000000
  404d5e:	cmp    rbp,rax
  404d61:	jne    409d41 <main@@Base+0x53f1>
  404d67:	mov    rax,r13
  404d6a:	cmp    r12,0x5
  404d6e:	jl     406fc7 <main@@Base+0x2677>
  404d74:	mov    rax,QWORD PTR [rsp+0x8]
  404d79:	cmp    DWORD PTR [rax],0x0
  404d7c:	mov    cl,BYTE PTR [r13+0x4]
  404d80:	je     40612d <main@@Base+0x17dd>
  404d86:	cmp    cl,0x21
  404d89:	jl     404d97 <main@@Base+0x447>
  404d8b:	mov    rax,r13
  404d8e:	cmp    cl,0x3a
  404d91:	jne    406fc7 <main@@Base+0x2677>
  404d97:	lea    rsi,[r13+0x4]
  404d9b:	mov    rax,QWORD PTR [rsp+0x8]
  404da0:	mov    DWORD PTR [rax],0x0
  404da6:	jmp    40613d <main@@Base+0x17ed>
  404dab:	lea    rcx,[rdx+0x68617368]
  404db2:	cmp    rbp,rcx
  404db5:	jae    404f33 <main@@Base+0x5e3>
  404dbb:	and    rbp,0xffffffffffff0000
  404dc2:	cmp    rbp,rax
  404dc5:	jne    409d41 <main@@Base+0x53f1>
  404dcb:	mov    rbx,r13
  404dce:	cmp    r12,0x7
  404dd2:	jl     406659 <main@@Base+0x1d09>
  404dd8:	mov    rax,QWORD PTR [rsp+0x8]
  404ddd:	cmp    DWORD PTR [rax],0x0
  404de0:	mov    al,BYTE PTR [r13+0x6]
  404de4:	je     4056c2 <main@@Base+0xd72>
  404dea:	cmp    al,0x21
  404dec:	jl     404df9 <main@@Base+0x4a9>
  404dee:	mov    rbx,r13
  404df1:	cmp    al,0x3a
  404df3:	jne    406659 <main@@Base+0x1d09>
  404df9:	lea    rsi,[r13+0x6]
  404dfd:	mov    rax,QWORD PTR [rsp+0x8]
  404e02:	mov    DWORD PTR [rax],0x0
  404e08:	jmp    4056d1 <main@@Base+0xd81>
  404e0d:	mov    rax,rbp
  404e10:	shr    rax,0x34
  404e14:	cmp    rax,0x686
  404e1a:	ja     405070 <main@@Base+0x720>
  404e20:	movabs rax,0xffffffff00000000
  404e2a:	and    rbp,rax
  404e2d:	movabs rax,0x666c657800000000
  404e37:	cmp    rbp,rax
  404e3a:	jne    409d41 <main@@Base+0x53f1>
  404e40:	mov    rbx,r13
  404e43:	cmp    r12,0x5
  404e47:	jl     40700f <main@@Base+0x26bf>
  404e4d:	mov    rax,QWORD PTR [rsp+0x8]
  404e52:	cmp    DWORD PTR [rax],0x0
  404e55:	mov    al,BYTE PTR [r13+0x4]
  404e59:	je     406177 <main@@Base+0x1827>
  404e5f:	cmp    al,0x21
  404e61:	jl     404e6e <main@@Base+0x51e>
  404e63:	mov    rbx,r13
  404e66:	cmp    al,0x3a
  404e68:	jne    40700f <main@@Base+0x26bf>
  404e6e:	lea    rsi,[r13+0x4]
  404e72:	mov    rax,QWORD PTR [rsp+0x8]
  404e77:	mov    DWORD PTR [rax],0x0
  404e7d:	jmp    406186 <main@@Base+0x1836>
  404e82:	lea    rcx,[rdx+0x656d7074]
  404e89:	cmp    rbp,rcx
  404e8c:	jae    4050e5 <main@@Base+0x795>
  404e92:	movabs rax,0x74657374626f6f6c
  404e9c:	cmp    rbp,rax
  404e9f:	je     40547e <main@@Base+0xb2e>
  404ea5:	movabs rax,0x7465737462617365
  404eaf:	cmp    rbp,rax
  404eb2:	jne    409d41 <main@@Base+0x53f1>
  404eb8:	lea    r12,[r13+0x8]
  404ebc:	mov    rax,r15
  404ebf:	sub    rax,r12
  404ec2:	cmp    rax,0x8
  404ec6:	jb     405811 <main@@Base+0xec1>
  404ecc:	movbe  rcx,QWORD PTR [r12]
  404ed2:	jmp    405890 <main@@Base+0xf40>
  404ed7:	mov    rbx,rbp
  404eda:	and    rbx,0xffffffffff000000
  404ee1:	lea    rax,[rdx+0x34000000]
  404ee8:	cmp    rbx,rax
  404eeb:	jne    40511d <main@@Base+0x7cd>
  404ef1:	mov    rbx,r13
  404ef4:	cmp    r12,0x6
  404ef8:	jl     406715 <main@@Base+0x1dc5>
  404efe:	mov    rax,QWORD PTR [rsp+0x8]
  404f03:	cmp    DWORD PTR [rax],0x0
  404f06:	mov    al,BYTE PTR [r13+0x5]
  404f0a:	je     4056f7 <main@@Base+0xda7>
  404f10:	cmp    al,0x21
  404f12:	jl     404f1f <main@@Base+0x5cf>
  404f14:	mov    rbx,r13
  404f17:	cmp    al,0x3a
  404f19:	jne    406715 <main@@Base+0x1dc5>
  404f1f:	lea    rsi,[r13+0x5]
  404f23:	mov    rax,QWORD PTR [rsp+0x8]
  404f28:	mov    DWORD PTR [rax],0x0
  404f2e:	jmp    405706 <main@@Base+0xdb6>
  404f33:	jne    40517a <main@@Base+0x82a>
  404f39:	lea    r12,[r13+0x8]
  404f3d:	mov    rax,r15
  404f40:	sub    rax,r12
  404f43:	cmp    rax,0x8
  404f47:	jb     405242 <main@@Base+0x8f2>
  404f4d:	movbe  rcx,QWORD PTR [r12]
  404f53:	jmp    4052c1 <main@@Base+0x971>
  404f58:	lea    rcx,[rax-0x1]
  404f5c:	cmp    rcx,0x6
  404f60:	ja     40d1ba <main@@Base+0x886a>
  404f66:	lea    rdx,[rip+0x1d243]        # 4221b0 <_IO_stdin_used@@Base+0x1b0>
  404f6d:	mov    rsi,rdx
  404f70:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  404f74:	add    rdx,rsi
  404f77:	xor    r8d,r8d
  404f7a:	xor    ecx,ecx
  404f7c:	xor    esi,esi
  404f7e:	xor    edi,edi
  404f80:	xor    ebx,ebx
  404f82:	xor    ebp,ebp
  404f84:	jmp    rdx
  404f86:	movsx  r8,BYTE PTR [r13+0xe]
  404f8b:	shl    r8,0x8
  404f8f:	movsx  rcx,BYTE PTR [r13+0xd]
  404f94:	shl    rcx,0x10
  404f98:	or     rcx,r8
  404f9b:	movsx  rsi,BYTE PTR [r13+0xc]
  404fa0:	shl    rsi,0x18
  404fa4:	or     rsi,rcx
  404fa7:	movsx  rdi,BYTE PTR [r13+0xb]
  404fac:	shl    rdi,0x20
  404fb0:	or     rdi,rsi
  404fb3:	movsx  rbx,BYTE PTR [r13+0xa]
  404fb8:	shl    rbx,0x28
  404fbc:	or     rbx,rdi
  404fbf:	movsx  rbp,BYTE PTR [r13+0x9]
  404fc4:	shl    rbp,0x30
  404fc8:	or     rbp,rbx
  404fcb:	movzx  ecx,BYTE PTR [r12]
  404fd0:	shl    rcx,0x38
  404fd4:	or     rcx,rbp
  404fd7:	movabs rdx,0x796f66737472696d
  404fe1:	cmp    rcx,rdx
  404fe4:	ja     4051bb <main@@Base+0x86b>
  404fea:	movabs rdx,0x796f66736f727465
  404ff4:	cmp    rcx,rdx
  404ff7:	je     4054c0 <main@@Base+0xb70>
  404ffd:	movabs rdx,0x796f66626f6f6c73
  405007:	cmp    rcx,rdx
  40500a:	jne    40d1ba <main@@Base+0x886a>
  405010:	cmp    rax,0x9
  405014:	jl     40d1ba <main@@Base+0x886a>
  40501a:	mov    rax,QWORD PTR [rsp+0x8]
  40501f:	cmp    DWORD PTR [rax],0x0
  405022:	mov    al,BYTE PTR [r13+0x10]
  405026:	je     4063ec <main@@Base+0x1a9c>
  40502c:	cmp    al,0x21
  40502e:	jl     405038 <main@@Base+0x6e8>
  405030:	cmp    al,0x3a
  405032:	jne    40d1ba <main@@Base+0x886a>
  405038:	add    r13,0x10
  40503c:	mov    rax,QWORD PTR [rsp+0x8]
  405041:	mov    DWORD PTR [rax],0x0
  405047:	jmp    4063f8 <main@@Base+0x1aa8>
  40504c:	jne    405323 <main@@Base+0x9d3>
  405052:	lea    rsi,[r13+0x8]
  405056:	mov    rax,r15
  405059:	sub    rax,rsi
  40505c:	cmp    rax,0x8
  405060:	jb     4054fe <main@@Base+0xbae>
  405066:	movbe  rax,QWORD PTR [rsi]
  40506b:	jmp    40557a <main@@Base+0xc2a>
  405070:	movabs rax,0x696e76656e746f72
  40507a:	cmp    rbp,rax
  40507d:	jae    405376 <main@@Base+0xa26>
  405083:	movabs rax,0xffff000000000000
  40508d:	and    rbp,rax
  405090:	movabs rax,0x6870000000000000
  40509a:	cmp    rbp,rax
  40509d:	jne    409d41 <main@@Base+0x53f1>
  4050a3:	mov    rbx,r13
  4050a6:	cmp    r12,0x3
  4050aa:	jl     4082dd <main@@Base+0x398d>
  4050b0:	mov    rax,QWORD PTR [rsp+0x8]
  4050b5:	cmp    DWORD PTR [rax],0x0
  4050b8:	mov    al,BYTE PTR [r13+0x2]
  4050bc:	je     40695a <main@@Base+0x200a>
  4050c2:	cmp    al,0x21
  4050c4:	jl     4050d1 <main@@Base+0x781>
  4050c6:	mov    rbx,r13
  4050c9:	cmp    al,0x3a
  4050cb:	jne    4082dd <main@@Base+0x398d>
  4050d1:	lea    rsi,[r13+0x2]
  4050d5:	mov    rax,QWORD PTR [rsp+0x8]
  4050da:	mov    DWORD PTR [rax],0x0
  4050e0:	jmp    406969 <main@@Base+0x2019>
  4050e5:	lea    rax,[rdx+0x66000000]
  4050ec:	cmp    rbp,rax
  4050ef:	jae    40539b <main@@Base+0xa4b>
  4050f5:	cmp    rbp,rcx
  4050f8:	jne    409d41 <main@@Base+0x53f1>
  4050fe:	lea    r12,[r13+0x8]
  405102:	mov    rax,r15
  405105:	sub    rax,r12
  405108:	cmp    rax,0x8
  40510c:	jb     405bdb <main@@Base+0x128b>
  405112:	movbe  rcx,QWORD PTR [r12]
  405118:	jmp    405c5a <main@@Base+0x130a>
  40511d:	mov    rax,rbp
  405120:	movabs rcx,0xffffffff00000000
  40512a:	and    rax,rcx
  40512d:	cmp    rax,rdx
  405130:	jne    4072e5 <main@@Base+0x2995>
  405136:	mov    rax,r13
  405139:	cmp    r12,0x5
  40513d:	jl     4072ad <main@@Base+0x295d>
  405143:	mov    rax,QWORD PTR [rsp+0x8]
  405148:	cmp    DWORD PTR [rax],0x0
  40514b:	mov    cl,BYTE PTR [r13+0x4]
  40514f:	je     4061c0 <main@@Base+0x1870>
  405155:	cmp    cl,0x21
  405158:	jl     405166 <main@@Base+0x816>
  40515a:	mov    rax,r13
  40515d:	cmp    cl,0x3a
  405160:	jne    4072ad <main@@Base+0x295d>
  405166:	lea    rsi,[r13+0x4]
  40516a:	mov    rax,QWORD PTR [rsp+0x8]
  40516f:	mov    DWORD PTR [rax],0x0
  405175:	jmp    4061d0 <main@@Base+0x1880>
  40517a:	movabs rax,0x766563746f725f6f
  405184:	cmp    rbp,rax
  405187:	jae    4053f7 <main@@Base+0xaa7>
  40518d:	lea    rax,[rdx+0x6e657374]
  405194:	cmp    rbp,rax
  405197:	jne    409d41 <main@@Base+0x53f1>
  40519d:	lea    rsi,[r13+0x8]
  4051a1:	mov    rax,r15
  4051a4:	sub    rax,rsi
  4051a7:	cmp    rax,0x8
  4051ab:	jb     405ca4 <main@@Base+0x1354>
  4051b1:	movbe  rax,QWORD PTR [rsi]
  4051b6:	jmp    405d20 <main@@Base+0x13d0>
  4051bb:	movabs rax,0x796f667461626c65
  4051c5:	cmp    rcx,rax
  4051c8:	je     4054df <main@@Base+0xb8f>
  4051ce:	movabs rax,0x796f66737472696e
  4051d8:	cmp    rcx,rax
  4051db:	jne    40d1ba <main@@Base+0x886a>
  4051e1:	lea    r12,[r13+0x10]
  4051e5:	mov    rax,r15
  4051e8:	sub    rax,r12
  4051eb:	cmp    rax,0x8
  4051ef:	jb     4058dd <main@@Base+0xf8d>
  4051f5:	movbe  rcx,QWORD PTR [r12]
  4051fb:	jmp    40595c <main@@Base+0x100c>
  405200:	mov    rbx,r13
  405203:	cmp    r12,0x6
  405207:	jl     406d81 <main@@Base+0x2431>
  40520d:	mov    rax,QWORD PTR [rsp+0x8]
  405212:	cmp    DWORD PTR [rax],0x0
  405215:	mov    al,BYTE PTR [r13+0x5]
  405219:	je     405d56 <main@@Base+0x1406>
  40521f:	cmp    al,0x21
  405221:	jl     40522e <main@@Base+0x8de>
  405223:	mov    rbx,r13
  405226:	cmp    al,0x3a
  405228:	jne    406d81 <main@@Base+0x2431>
  40522e:	lea    rsi,[r13+0x5]
  405232:	mov    rax,QWORD PTR [rsp+0x8]
  405237:	mov    DWORD PTR [rax],0x0
  40523d:	jmp    405d65 <main@@Base+0x1415>
  405242:	lea    rcx,[rax-0x1]
  405246:	cmp    rcx,0x6
  40524a:	ja     40d1ba <main@@Base+0x886a>
  405250:	lea    rdx,[rip+0x1ce5d]        # 4220b4 <_IO_stdin_used@@Base+0xb4>
  405257:	mov    rsi,rdx
  40525a:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40525e:	add    rdx,rsi
  405261:	xor    r8d,r8d
  405264:	xor    ecx,ecx
  405266:	xor    esi,esi
  405268:	xor    edi,edi
  40526a:	xor    ebp,ebp
  40526c:	xor    ebx,ebx
  40526e:	jmp    rdx
  405270:	movsx  r8,BYTE PTR [r13+0xe]
  405275:	shl    r8,0x8
  405279:	movsx  rcx,BYTE PTR [r13+0xd]
  40527e:	shl    rcx,0x10
  405282:	or     rcx,r8
  405285:	movsx  rsi,BYTE PTR [r13+0xc]
  40528a:	shl    rsi,0x18
  40528e:	or     rsi,rcx
  405291:	movsx  rdi,BYTE PTR [r13+0xb]
  405296:	shl    rdi,0x20
  40529a:	or     rdi,rsi
  40529d:	movsx  rbp,BYTE PTR [r13+0xa]
  4052a2:	shl    rbp,0x28
  4052a6:	or     rbp,rdi
  4052a9:	movsx  rbx,BYTE PTR [r13+0x9]
  4052ae:	shl    rbx,0x30
  4052b2:	or     rbx,rbp
  4052b5:	movzx  ecx,BYTE PTR [r12]
  4052ba:	shl    rcx,0x38
  4052be:	or     rcx,rbx
  4052c1:	movabs rdx,0x7336345f666e7631
  4052cb:	cmp    rcx,rdx
  4052ce:	jae    40541c <main@@Base+0xacc>
  4052d4:	movabs rdx,0x7333325f666e7631
  4052de:	cmp    rcx,rdx
  4052e1:	jne    40d1ba <main@@Base+0x886a>
  4052e7:	cmp    rax,0x9
  4052eb:	jl     406c35 <main@@Base+0x22e5>
  4052f1:	mov    rax,QWORD PTR [rsp+0x8]
  4052f6:	cmp    DWORD PTR [rax],0x0
  4052f9:	mov    al,BYTE PTR [r13+0x10]
  4052fd:	je     406a35 <main@@Base+0x20e5>
  405303:	cmp    al,0x21
  405305:	jl     40530f <main@@Base+0x9bf>
  405307:	cmp    al,0x3a
  405309:	jne    406c35 <main@@Base+0x22e5>
  40530f:	lea    rsi,[r13+0x10]
  405313:	mov    rax,QWORD PTR [rsp+0x8]
  405318:	mov    DWORD PTR [rax],0x0
  40531e:	jmp    406a41 <main@@Base+0x20f1>
  405323:	shr    rbp,0x28
  405327:	cmp    rbp,0x706f73
  40532e:	jne    409d41 <main@@Base+0x53f1>
  405334:	mov    rbx,r13
  405337:	cmp    r12,0x4
  40533b:	jl     4083f1 <main@@Base+0x3aa1>
  405341:	mov    rax,QWORD PTR [rsp+0x8]
  405346:	cmp    DWORD PTR [rax],0x0
  405349:	mov    al,BYTE PTR [r13+0x3]
  40534d:	je     4069a3 <main@@Base+0x2053>
  405353:	cmp    al,0x21
  405355:	jl     405362 <main@@Base+0xa12>
  405357:	mov    rbx,r13
  40535a:	cmp    al,0x3a
  40535c:	jne    4083f1 <main@@Base+0x3aa1>
  405362:	lea    rsi,[r13+0x3]
  405366:	mov    rax,QWORD PTR [rsp+0x8]
  40536b:	mov    DWORD PTR [rax],0x0
  405371:	jmp    4069b2 <main@@Base+0x2062>
  405376:	jne    4055ac <main@@Base+0xc5c>
  40537c:	lea    r12,[r13+0x8]
  405380:	mov    rax,r15
  405383:	sub    rax,r12
  405386:	cmp    rax,0x8
  40538a:	jb     405d9f <main@@Base+0x144f>
  405390:	movbe  rcx,QWORD PTR [r12]
  405396:	jmp    405e1e <main@@Base+0x14ce>
  40539b:	mov    rcx,rbp
  40539e:	and    rcx,0xffffffffffff0000
  4053a5:	add    rdx,0x66320000
  4053ac:	cmp    rcx,rdx
  4053af:	jne    40560e <main@@Base+0xcbe>
  4053b5:	mov    rbx,r13
  4053b8:	cmp    r12,0x7
  4053bc:	jl     408fcf <main@@Base+0x467f>
  4053c2:	mov    rax,QWORD PTR [rsp+0x8]
  4053c7:	cmp    DWORD PTR [rax],0x0
  4053ca:	mov    al,BYTE PTR [r13+0x6]
  4053ce:	je     4069ec <main@@Base+0x209c>
  4053d4:	cmp    al,0x21
  4053d6:	jl     4053e3 <main@@Base+0xa93>
  4053d8:	mov    rbx,r13
  4053db:	cmp    al,0x3a
  4053dd:	jne    408fcf <main@@Base+0x467f>
  4053e3:	lea    rsi,[r13+0x6]
  4053e7:	mov    rax,QWORD PTR [rsp+0x8]
  4053ec:	mov    DWORD PTR [rax],0x0
  4053f2:	jmp    4069fb <main@@Base+0x20ab>
  4053f7:	jne    409d41 <main@@Base+0x53f1>
  4053fd:	lea    r12,[r13+0x8]
  405401:	mov    rax,r15
  405404:	sub    rax,r12
  405407:	cmp    rax,0x8
  40540b:	jb     405e68 <main@@Base+0x1518>
  405411:	movbe  rcx,QWORD PTR [r12]
  405417:	jmp    405ee7 <main@@Base+0x1597>
  40541c:	movabs rdx,0x7533325f666e7630
  405426:	cmp    rcx,rdx
  405429:	ja     405660 <main@@Base+0xd10>
  40542f:	movabs rdx,0x7336345f666e7631
  405439:	cmp    rcx,rdx
  40543c:	jne    40d1ba <main@@Base+0x886a>
  405442:	cmp    rax,0x9
  405446:	jl     4078fd <main@@Base+0x2fad>
  40544c:	mov    rax,QWORD PTR [rsp+0x8]
  405451:	cmp    DWORD PTR [rax],0x0
  405454:	mov    al,BYTE PTR [r13+0x10]
  405458:	je     407699 <main@@Base+0x2d49>
  40545e:	cmp    al,0x21
  405460:	jl     40546a <main@@Base+0xb1a>
  405462:	cmp    al,0x3a
  405464:	jne    4078fd <main@@Base+0x2fad>
  40546a:	lea    rsi,[r13+0x10]
  40546e:	mov    rax,QWORD PTR [rsp+0x8]
  405473:	mov    DWORD PTR [rax],0x0
  405479:	jmp    4076a5 <main@@Base+0x2d55>
  40547e:	mov    rbx,r13
  405481:	cmp    r12,0x9
  405485:	jl     407f37 <main@@Base+0x35e7>
  40548b:	mov    rax,QWORD PTR [rsp+0x8]
  405490:	cmp    DWORD PTR [rax],0x0
  405493:	mov    al,BYTE PTR [r13+0x8]
  405497:	je     4063a3 <main@@Base+0x1a53>
  40549d:	cmp    al,0x21
  40549f:	jl     4054ac <main@@Base+0xb5c>
  4054a1:	mov    rbx,r13
  4054a4:	cmp    al,0x3a
  4054a6:	jne    407f37 <main@@Base+0x35e7>
  4054ac:	lea    rsi,[r13+0x8]
  4054b0:	mov    rax,QWORD PTR [rsp+0x8]
  4054b5:	mov    DWORD PTR [rax],0x0
  4054bb:	jmp    4063b2 <main@@Base+0x1a62>
  4054c0:	lea    r12,[r13+0x10]
  4054c4:	mov    rax,r15
  4054c7:	sub    rax,r12
  4054ca:	cmp    rax,0x8
  4054ce:	jb     4059ac <main@@Base+0x105c>
  4054d4:	movbe  rcx,QWORD PTR [r12]
  4054da:	jmp    405a2b <main@@Base+0x10db>
  4054df:	lea    r12,[r13+0x10]
  4054e3:	mov    rax,r15
  4054e6:	sub    rax,r12
  4054e9:	cmp    rax,0x8
  4054ed:	jb     405a7e <main@@Base+0x112e>
  4054f3:	movbe  rcx,QWORD PTR [r12]
  4054f9:	jmp    405afd <main@@Base+0x11ad>
  4054fe:	dec    rax
  405501:	cmp    rax,0x6
  405505:	ja     405d4e <main@@Base+0x13fe>
  40550b:	lea    rcx,[rip+0x1cd62]        # 422274 <_IO_stdin_used@@Base+0x274>
  405512:	mov    rdx,rcx
  405515:	movsxd rcx,DWORD PTR [rcx+rax*4]
  405519:	add    rcx,rdx
  40551c:	xor    r8d,r8d
  40551f:	xor    eax,eax
  405521:	xor    edx,edx
  405523:	xor    edi,edi
  405525:	xor    ebp,ebp
  405527:	xor    ebx,ebx
  405529:	jmp    rcx
  40552b:	movsx  r8,BYTE PTR [r13+0xe]
  405530:	shl    r8,0x8
  405534:	movsx  rax,BYTE PTR [r13+0xd]
  405539:	shl    rax,0x10
  40553d:	or     rax,r8
  405540:	movsx  rdx,BYTE PTR [r13+0xc]
  405545:	shl    rdx,0x18
  405549:	or     rdx,rax
  40554c:	movsx  rdi,BYTE PTR [r13+0xb]
  405551:	shl    rdi,0x20
  405555:	or     rdi,rdx
  405558:	movsx  rbp,BYTE PTR [r13+0xa]
  40555d:	shl    rbp,0x28
  405561:	or     rbp,rdi
  405564:	movsx  rbx,BYTE PTR [r13+0x9]
  405569:	shl    rbx,0x30
  40556d:	or     rbx,rbp
  405570:	movzx  eax,BYTE PTR [rsi]
  405573:	shl    rax,0x38
  405577:	or     rax,rbx
  40557a:	movabs rcx,0x616d657370616365
  405584:	cmp    rax,rcx
  405587:	jne    405d4e <main@@Base+0x13fe>
  40558d:	lea    r12,[r13+0x10]
  405591:	mov    rax,r15
  405594:	sub    rax,r12
  405597:	cmp    rax,0x8
  40559b:	jb     405f19 <main@@Base+0x15c9>
  4055a1:	movbe  rcx,QWORD PTR [r12]
  4055a7:	jmp    405f98 <main@@Base+0x1648>
  4055ac:	movabs rax,0xffffffff00000000
  4055b6:	and    rbp,rax
  4055b9:	movabs rax,0x6d616e6100000000
  4055c3:	cmp    rbp,rax
  4055c6:	jne    409d41 <main@@Base+0x53f1>
  4055cc:	mov    rbx,r13
  4055cf:	cmp    r12,0x5
  4055d3:	jl     409b88 <main@@Base+0x5238>
  4055d9:	mov    rax,QWORD PTR [rsp+0x8]
  4055de:	cmp    DWORD PTR [rax],0x0
  4055e1:	mov    al,BYTE PTR [r13+0x4]
  4055e5:	je     407607 <main@@Base+0x2cb7>
  4055eb:	cmp    al,0x21
  4055ed:	jl     4055fa <main@@Base+0xcaa>
  4055ef:	mov    rbx,r13
  4055f2:	cmp    al,0x3a
  4055f4:	jne    409b88 <main@@Base+0x5238>
  4055fa:	lea    rsi,[r13+0x4]
  4055fe:	mov    rax,QWORD PTR [rsp+0x8]
  405603:	mov    DWORD PTR [rax],0x0
  405609:	jmp    407616 <main@@Base+0x2cc6>
  40560e:	and    rbp,0xffffffffff000000
  405615:	cmp    rbp,rax
  405618:	jne    409d41 <main@@Base+0x53f1>
  40561e:	mov    rbx,r13
  405621:	cmp    r12,0x6
  405625:	jl     409cb7 <main@@Base+0x5367>
  40562b:	mov    rax,QWORD PTR [rsp+0x8]
  405630:	cmp    DWORD PTR [rax],0x0
  405633:	mov    al,BYTE PTR [r13+0x5]
  405637:	je     407650 <main@@Base+0x2d00>
  40563d:	cmp    al,0x21
  40563f:	jl     40564c <main@@Base+0xcfc>
  405641:	mov    rbx,r13
  405644:	cmp    al,0x3a
  405646:	jne    409cb7 <main@@Base+0x5367>
  40564c:	lea    rsi,[r13+0x5]
  405650:	mov    rax,QWORD PTR [rsp+0x8]
  405655:	mov    DWORD PTR [rax],0x0
  40565b:	jmp    40765f <main@@Base+0x2d0f>
  405660:	movabs rdx,0x7536345f666e7631
  40566a:	cmp    rcx,rdx
  40566d:	je     406367 <main@@Base+0x1a17>
  405673:	movabs rdx,0x7533325f666e7631
  40567d:	cmp    rcx,rdx
  405680:	jne    40d1ba <main@@Base+0x886a>
  405686:	cmp    rax,0x9
  40568a:	jl     4090b6 <main@@Base+0x4766>
  405690:	mov    rax,QWORD PTR [rsp+0x8]
  405695:	cmp    DWORD PTR [rax],0x0
  405698:	mov    al,BYTE PTR [r13+0x10]
  40569c:	je     4081f7 <main@@Base+0x38a7>
  4056a2:	cmp    al,0x21
  4056a4:	jl     4056ae <main@@Base+0xd5e>
  4056a6:	cmp    al,0x3a
  4056a8:	jne    4090b6 <main@@Base+0x4766>
  4056ae:	lea    rsi,[r13+0x10]
  4056b2:	mov    rax,QWORD PTR [rsp+0x8]
  4056b7:	mov    DWORD PTR [rax],0x0
  4056bd:	jmp    408203 <main@@Base+0x38b3>
  4056c2:	mov    rbx,r13
  4056c5:	cmp    al,0x22
  4056c7:	jne    406659 <main@@Base+0x1d09>
  4056cd:	lea    rsi,[r13+0x7]
  4056d1:	mov    rax,r15
  4056d4:	sub    rax,rsi
  4056d7:	cmp    rax,0x2
  4056db:	jl     405734 <main@@Base+0xde4>
  4056dd:	cmp    BYTE PTR [rsi],0x20
  4056e0:	jg     405742 <main@@Base+0xdf2>
  4056e2:	jne    405734 <main@@Base+0xde4>
  4056e4:	cmp    BYTE PTR [rsi+0x1],0x20
  4056e8:	jle    405734 <main@@Base+0xde4>
  4056ea:	inc    rsi
  4056ed:	cmp    rsi,r15
  4056f0:	jne    40574b <main@@Base+0xdfb>
  4056f2:	jmp    4057e7 <main@@Base+0xe97>
  4056f7:	mov    rbx,r13
  4056fa:	cmp    al,0x22
  4056fc:	jne    406715 <main@@Base+0x1dc5>
  405702:	lea    rsi,[r13+0x6]
  405706:	mov    rax,r15
  405709:	sub    rax,rsi
  40570c:	cmp    rax,0x2
  405710:	jl     405796 <main@@Base+0xe46>
  405716:	cmp    BYTE PTR [rsi],0x20
  405719:	jg     4057a4 <main@@Base+0xe54>
  40571f:	jne    405796 <main@@Base+0xe46>
  405721:	cmp    BYTE PTR [rsi+0x1],0x20
  405725:	jle    405796 <main@@Base+0xe46>
  405727:	inc    rsi
  40572a:	cmp    rsi,r15
  40572d:	jne    4057a9 <main@@Base+0xe59>
  40572f:	jmp    4057fc <main@@Base+0xeac>
  405734:	mov    rdi,r14
  405737:	mov    rdx,r15
  40573a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40573f:	mov    rsi,rax
  405742:	cmp    rsi,r15
  405745:	je     4057e7 <main@@Base+0xe97>
  40574b:	cmp    BYTE PTR [rsi],0x3a
  40574e:	jne    4057e7 <main@@Base+0xe97>
  405754:	lea    rbx,[rsi+0x1]
  405758:	mov    rax,r15
  40575b:	sub    rax,rbx
  40575e:	cmp    rax,0x2
  405762:	jl     406648 <main@@Base+0x1cf8>
  405768:	cmp    BYTE PTR [rbx],0x20
  40576b:	jg     406659 <main@@Base+0x1d09>
  405771:	jne    406648 <main@@Base+0x1cf8>
  405777:	cmp    BYTE PTR [rsi+0x2],0x20
  40577b:	jle    406648 <main@@Base+0x1cf8>
  405781:	add    rsi,0x2
  405785:	mov    rbx,rsi
  405788:	cmp    r13,rbx
  40578b:	jne    406662 <main@@Base+0x1d12>
  405791:	jmp    409d41 <main@@Base+0x53f1>
  405796:	mov    rdi,r14
  405799:	mov    rdx,r15
  40579c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4057a1:	mov    rsi,rax
  4057a4:	cmp    rsi,r15
  4057a7:	je     4057fc <main@@Base+0xeac>
  4057a9:	cmp    BYTE PTR [rsi],0x3a
  4057ac:	jne    4057fc <main@@Base+0xeac>
  4057ae:	lea    rbx,[rsi+0x1]
  4057b2:	mov    rax,r15
  4057b5:	sub    rax,rbx
  4057b8:	cmp    rax,0x2
  4057bc:	jl     4066fa <main@@Base+0x1daa>
  4057c2:	cmp    BYTE PTR [rbx],0x20
  4057c5:	jg     40670b <main@@Base+0x1dbb>
  4057cb:	jne    4066fa <main@@Base+0x1daa>
  4057d1:	cmp    BYTE PTR [rsi+0x2],0x20
  4057d5:	jle    4066fa <main@@Base+0x1daa>
  4057db:	add    rsi,0x2
  4057df:	mov    rbx,rsi
  4057e2:	jmp    40670b <main@@Base+0x1dbb>
  4057e7:	mov    rdi,r14
  4057ea:	mov    rdx,r15
  4057ed:	mov    ecx,0x4
  4057f2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4057f7:	jmp    406656 <main@@Base+0x1d06>
  4057fc:	mov    rdi,r14
  4057ff:	mov    rdx,r15
  405802:	mov    ecx,0x4
  405807:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40580c:	jmp    406708 <main@@Base+0x1db8>
  405811:	lea    rcx,[rax-0x1]
  405815:	cmp    rcx,0x6
  405819:	ja     40d1ba <main@@Base+0x886a>
  40581f:	lea    rdx,[rip+0x1c952]        # 422178 <_IO_stdin_used@@Base+0x178>
  405826:	mov    rsi,rdx
  405829:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40582d:	add    rdx,rsi
  405830:	xor    r8d,r8d
  405833:	xor    ecx,ecx
  405835:	xor    esi,esi
  405837:	xor    edi,edi
  405839:	xor    ebx,ebx
  40583b:	xor    ebp,ebp
  40583d:	jmp    rdx
  40583f:	movsx  r8,BYTE PTR [r13+0xe]
  405844:	shl    r8,0x8
  405848:	movsx  rcx,BYTE PTR [r13+0xd]
  40584d:	shl    rcx,0x10
  405851:	or     rcx,r8
  405854:	movsx  rsi,BYTE PTR [r13+0xc]
  405859:	shl    rsi,0x18
  40585d:	or     rsi,rcx
  405860:	movsx  rdi,BYTE PTR [r13+0xb]
  405865:	shl    rdi,0x20
  405869:	or     rdi,rsi
  40586c:	movsx  rbx,BYTE PTR [r13+0xa]
  405871:	shl    rbx,0x28
  405875:	or     rbx,rdi
  405878:	movsx  rbp,BYTE PTR [r13+0x9]
  40587d:	shl    rbp,0x30
  405881:	or     rbp,rbx
  405884:	movzx  ecx,BYTE PTR [r12]
  405889:	shl    rcx,0x38
  40588d:	or     rcx,rbp
  405890:	shr    rcx,0x30
  405894:	cmp    rcx,0x3634
  40589b:	jne    40d1ba <main@@Base+0x886a>
  4058a1:	cmp    rax,0x3
  4058a5:	jl     40d1ba <main@@Base+0x886a>
  4058ab:	mov    rax,QWORD PTR [rsp+0x8]
  4058b0:	cmp    DWORD PTR [rax],0x0
  4058b3:	mov    al,BYTE PTR [r13+0xa]
  4058b7:	je     406e95 <main@@Base+0x2545>
  4058bd:	cmp    al,0x21
  4058bf:	jl     4058c9 <main@@Base+0xf79>
  4058c1:	cmp    al,0x3a
  4058c3:	jne    40d1ba <main@@Base+0x886a>
  4058c9:	add    r13,0xa
  4058cd:	mov    rax,QWORD PTR [rsp+0x8]
  4058d2:	mov    DWORD PTR [rax],0x0
  4058d8:	jmp    406ea1 <main@@Base+0x2551>
  4058dd:	lea    rcx,[rax-0x1]
  4058e1:	cmp    rcx,0x6
  4058e5:	ja     40d1ba <main@@Base+0x886a>
  4058eb:	lea    rdx,[rip+0x1c8f6]        # 4221e8 <_IO_stdin_used@@Base+0x1e8>
  4058f2:	mov    rsi,rdx
  4058f5:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4058f9:	add    rdx,rsi
  4058fc:	xor    r8d,r8d
  4058ff:	xor    ecx,ecx
  405901:	xor    esi,esi
  405903:	xor    edi,edi
  405905:	xor    ebx,ebx
  405907:	xor    ebp,ebp
  405909:	jmp    rdx
  40590b:	movsx  r8,BYTE PTR [r13+0x16]
  405910:	shl    r8,0x8
  405914:	movsx  rcx,BYTE PTR [r13+0x15]
  405919:	shl    rcx,0x10
  40591d:	or     rcx,r8
  405920:	movsx  rsi,BYTE PTR [r13+0x14]
  405925:	shl    rsi,0x18
  405929:	or     rsi,rcx
  40592c:	movsx  rdi,BYTE PTR [r13+0x13]
  405931:	shl    rdi,0x20
  405935:	or     rdi,rsi
  405938:	movsx  rbx,BYTE PTR [r13+0x12]
  40593d:	shl    rbx,0x28
  405941:	or     rbx,rdi
  405944:	movsx  rbp,BYTE PTR [r13+0x11]
  405949:	shl    rbp,0x30
  40594d:	or     rbp,rbx
  405950:	movzx  ecx,BYTE PTR [r12]
  405955:	shl    rcx,0x38
  405959:	or     rcx,rbp
  40595c:	mov    rdx,rcx
  40595f:	shr    rdx,0x30
  405963:	cmp    rdx,0x6732
  40596a:	jne    405b47 <main@@Base+0x11f7>
  405970:	cmp    rax,0x3
  405974:	jl     40d1ba <main@@Base+0x886a>
  40597a:	mov    rax,QWORD PTR [rsp+0x8]
  40597f:	cmp    DWORD PTR [rax],0x0
  405982:	mov    al,BYTE PTR [r13+0x12]
  405986:	je     406ede <main@@Base+0x258e>
  40598c:	cmp    al,0x21
  40598e:	jl     405998 <main@@Base+0x1048>
  405990:	cmp    al,0x3a
  405992:	jne    40d1ba <main@@Base+0x886a>
  405998:	add    r13,0x12
  40599c:	mov    rax,QWORD PTR [rsp+0x8]
  4059a1:	mov    DWORD PTR [rax],0x0
  4059a7:	jmp    406eea <main@@Base+0x259a>
  4059ac:	lea    rcx,[rax-0x1]
  4059b0:	cmp    rcx,0x6
  4059b4:	ja     40d1ba <main@@Base+0x886a>
  4059ba:	lea    rdx,[rip+0x1c843]        # 422204 <_IO_stdin_used@@Base+0x204>
  4059c1:	mov    rsi,rdx
  4059c4:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4059c8:	add    rdx,rsi
  4059cb:	xor    r8d,r8d
  4059ce:	xor    ecx,ecx
  4059d0:	xor    esi,esi
  4059d2:	xor    edi,edi
  4059d4:	xor    ebx,ebx
  4059d6:	xor    ebp,ebp
  4059d8:	jmp    rdx
  4059da:	movsx  r8,BYTE PTR [r13+0x16]
  4059df:	shl    r8,0x8
  4059e3:	movsx  rcx,BYTE PTR [r13+0x15]
  4059e8:	shl    rcx,0x10
  4059ec:	or     rcx,r8
  4059ef:	movsx  rsi,BYTE PTR [r13+0x14]
  4059f4:	shl    rsi,0x18
  4059f8:	or     rsi,rcx
  4059fb:	movsx  rdi,BYTE PTR [r13+0x13]
  405a00:	shl    rdi,0x20
  405a04:	or     rdi,rsi
  405a07:	movsx  rbx,BYTE PTR [r13+0x12]
  405a0c:	shl    rbx,0x28
  405a10:	or     rbx,rdi
  405a13:	movsx  rbp,BYTE PTR [r13+0x11]
  405a18:	shl    rbp,0x30
  405a1c:	or     rbp,rbx
  405a1f:	movzx  ecx,BYTE PTR [r12]
  405a24:	shl    rcx,0x38
  405a28:	or     rcx,rbp
  405a2b:	shr    rcx,0x8
  405a2f:	movabs rdx,0x64737472756374
  405a39:	cmp    rcx,rdx
  405a3c:	jne    40d1ba <main@@Base+0x886a>
  405a42:	cmp    rax,0x8
  405a46:	jl     40d1ba <main@@Base+0x886a>
  405a4c:	mov    rax,QWORD PTR [rsp+0x8]
  405a51:	cmp    DWORD PTR [rax],0x0
  405a54:	mov    al,BYTE PTR [r13+0x17]
  405a58:	je     406f27 <main@@Base+0x25d7>
  405a5e:	cmp    al,0x21
  405a60:	jl     405a6a <main@@Base+0x111a>
  405a62:	cmp    al,0x3a
  405a64:	jne    40d1ba <main@@Base+0x886a>
  405a6a:	add    r13,0x17
  405a6e:	mov    rax,QWORD PTR [rsp+0x8]
  405a73:	mov    DWORD PTR [rax],0x0
  405a79:	jmp    406f33 <main@@Base+0x25e3>
  405a7e:	lea    rcx,[rax-0x1]
  405a82:	cmp    rcx,0x6
  405a86:	ja     40d1ba <main@@Base+0x886a>
  405a8c:	lea    rdx,[rip+0x1c739]        # 4221cc <_IO_stdin_used@@Base+0x1cc>
  405a93:	mov    rsi,rdx
  405a96:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  405a9a:	add    rdx,rsi
  405a9d:	xor    r8d,r8d
  405aa0:	xor    ecx,ecx
  405aa2:	xor    esi,esi
  405aa4:	xor    edi,edi
  405aa6:	xor    ebx,ebx
  405aa8:	xor    ebp,ebp
  405aaa:	jmp    rdx
  405aac:	movsx  r8,BYTE PTR [r13+0x16]
  405ab1:	shl    r8,0x8
  405ab5:	movsx  rcx,BYTE PTR [r13+0x15]
  405aba:	shl    rcx,0x10
  405abe:	or     rcx,r8
  405ac1:	movsx  rsi,BYTE PTR [r13+0x14]
  405ac6:	shl    rsi,0x18
  405aca:	or     rsi,rcx
  405acd:	movsx  rdi,BYTE PTR [r13+0x13]
  405ad2:	shl    rdi,0x20
  405ad6:	or     rdi,rsi
  405ad9:	movsx  rbx,BYTE PTR [r13+0x12]
  405ade:	shl    rbx,0x28
  405ae2:	or     rbx,rdi
  405ae5:	movsx  rbp,BYTE PTR [r13+0x11]
  405aea:	shl    rbp,0x30
  405aee:	or     rbp,rbx
  405af1:	movzx  ecx,BYTE PTR [r12]
  405af6:	shl    rcx,0x38
  405afa:	or     rcx,rbp
  405afd:	shr    rcx,0x38
  405b01:	cmp    rcx,0x73
  405b05:	jne    40d1ba <main@@Base+0x886a>
  405b0b:	cmp    rax,0x2
  405b0f:	jl     40d1ba <main@@Base+0x886a>
  405b15:	mov    rax,QWORD PTR [rsp+0x8]
  405b1a:	cmp    DWORD PTR [rax],0x0
  405b1d:	mov    al,BYTE PTR [r13+0x11]
  405b21:	je     406f70 <main@@Base+0x2620>
  405b27:	cmp    al,0x21
  405b29:	jl     405b33 <main@@Base+0x11e3>
  405b2b:	cmp    al,0x3a
  405b2d:	jne    40d1ba <main@@Base+0x886a>
  405b33:	add    r13,0x11
  405b37:	mov    rax,QWORD PTR [rsp+0x8]
  405b3c:	mov    DWORD PTR [rax],0x0
  405b42:	jmp    406f7c <main@@Base+0x262c>
  405b47:	shr    rcx,0x38
  405b4b:	cmp    rcx,0x67
  405b4f:	jne    40d1ba <main@@Base+0x886a>
  405b55:	cmp    rax,0x2
  405b59:	jl     40d1ba <main@@Base+0x886a>
  405b5f:	mov    rax,QWORD PTR [rsp+0x8]
  405b64:	cmp    DWORD PTR [rax],0x0
  405b67:	mov    al,BYTE PTR [r13+0x11]
  405b6b:	je     408283 <main@@Base+0x3933>
  405b71:	cmp    al,0x21
  405b73:	jl     405b7d <main@@Base+0x122d>
  405b75:	cmp    al,0x3a
  405b77:	jne    40d1ba <main@@Base+0x886a>
  405b7d:	add    r13,0x11
  405b81:	mov    rax,QWORD PTR [rsp+0x8]
  405b86:	mov    DWORD PTR [rax],0x0
  405b8c:	jmp    40828f <main@@Base+0x393f>
  405b91:	mov    rax,r13
  405b94:	cmp    cl,0x22
  405b97:	jne    406d39 <main@@Base+0x23e9>
  405b9d:	lea    rsi,[r13+0x6]
  405ba1:	mov    rax,r15
  405ba4:	sub    rax,rsi
  405ba7:	cmp    rax,0x2
  405bab:	jl     40603e <main@@Base+0x16ee>
  405bb1:	cmp    BYTE PTR [rsi],0x20
  405bb4:	jg     40604c <main@@Base+0x16fc>
  405bba:	jne    40603e <main@@Base+0x16ee>
  405bc0:	cmp    BYTE PTR [rsi+0x1],0x20
  405bc4:	jle    40603e <main@@Base+0x16ee>
  405bca:	inc    rsi
  405bcd:	cmp    rsi,r15
  405bd0:	jne    406055 <main@@Base+0x1705>
  405bd6:	jmp    4060fa <main@@Base+0x17aa>
  405bdb:	lea    rcx,[rax-0x1]
  405bdf:	cmp    rcx,0x6
  405be3:	ja     40d1ba <main@@Base+0x886a>
  405be9:	lea    rdx,[rip+0x1c550]        # 422140 <_IO_stdin_used@@Base+0x140>
  405bf0:	mov    rsi,rdx
  405bf3:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  405bf7:	add    rdx,rsi
  405bfa:	xor    r8d,r8d
  405bfd:	xor    ecx,ecx
  405bff:	xor    esi,esi
  405c01:	xor    edi,edi
  405c03:	xor    ebx,ebx
  405c05:	xor    ebp,ebp
  405c07:	jmp    rdx
  405c09:	movsx  r8,BYTE PTR [r13+0xe]
  405c0e:	shl    r8,0x8
  405c12:	movsx  rcx,BYTE PTR [r13+0xd]
  405c17:	shl    rcx,0x10
  405c1b:	or     rcx,r8
  405c1e:	movsx  rsi,BYTE PTR [r13+0xc]
  405c23:	shl    rsi,0x18
  405c27:	or     rsi,rcx
  405c2a:	movsx  rdi,BYTE PTR [r13+0xb]
  405c2f:	shl    rdi,0x20
  405c33:	or     rdi,rsi
  405c36:	movsx  rbx,BYTE PTR [r13+0xa]
  405c3b:	shl    rbx,0x28
  405c3f:	or     rbx,rdi
  405c42:	movsx  rbp,BYTE PTR [r13+0x9]
  405c47:	shl    rbp,0x30
  405c4b:	or     rbp,rbx
  405c4e:	movzx  ecx,BYTE PTR [r12]
  405c53:	shl    rcx,0x38
  405c57:	or     rcx,rbp
  405c5a:	shr    rcx,0x38
  405c5e:	cmp    rcx,0x79
  405c62:	jne    40d1ba <main@@Base+0x886a>
  405c68:	cmp    rax,0x2
  405c6c:	jl     40d1ba <main@@Base+0x886a>
  405c72:	mov    rax,QWORD PTR [rsp+0x8]
  405c77:	cmp    DWORD PTR [rax],0x0
  405c7a:	mov    al,BYTE PTR [r13+0x9]
  405c7e:	je     4076df <main@@Base+0x2d8f>
  405c84:	cmp    al,0x21
  405c86:	jl     405c90 <main@@Base+0x1340>
  405c88:	cmp    al,0x3a
  405c8a:	jne    40d1ba <main@@Base+0x886a>
  405c90:	add    r13,0x9
  405c94:	mov    rax,QWORD PTR [rsp+0x8]
  405c99:	mov    DWORD PTR [rax],0x0
  405c9f:	jmp    4076eb <main@@Base+0x2d9b>
  405ca4:	dec    rax
  405ca7:	cmp    rax,0x6
  405cab:	ja     405d4e <main@@Base+0x13fe>
  405cb1:	lea    rcx,[rip+0x1c3c4]        # 42207c <_IO_stdin_used@@Base+0x7c>
  405cb8:	mov    rdx,rcx
  405cbb:	movsxd rcx,DWORD PTR [rcx+rax*4]
  405cbf:	add    rcx,rdx
  405cc2:	xor    r8d,r8d
  405cc5:	xor    eax,eax
  405cc7:	xor    edx,edx
  405cc9:	xor    edi,edi
  405ccb:	xor    ebp,ebp
  405ccd:	xor    ebx,ebx
  405ccf:	jmp    rcx
  405cd1:	movsx  r8,BYTE PTR [r13+0xe]
  405cd6:	shl    r8,0x8
  405cda:	movsx  rax,BYTE PTR [r13+0xd]
  405cdf:	shl    rax,0x10
  405ce3:	or     rax,r8
  405ce6:	movsx  rdx,BYTE PTR [r13+0xc]
  405ceb:	shl    rdx,0x18
  405cef:	or     rdx,rax
  405cf2:	movsx  rdi,BYTE PTR [r13+0xb]
  405cf7:	shl    rdi,0x20
  405cfb:	or     rdi,rdx
  405cfe:	movsx  rbp,BYTE PTR [r13+0xa]
  405d03:	shl    rbp,0x28
  405d07:	or     rbp,rdi
  405d0a:	movsx  rbx,BYTE PTR [r13+0x9]
  405d0f:	shl    rbx,0x30
  405d13:	or     rbx,rbp
  405d16:	movzx  eax,BYTE PTR [rsi]
  405d19:	shl    rax,0x38
  405d1d:	or     rax,rbx
  405d20:	movabs rcx,0x6564666c61746275
  405d2a:	cmp    rax,rcx
  405d2d:	jne    405d4e <main@@Base+0x13fe>
  405d2f:	lea    r12,[r13+0x10]
  405d33:	mov    rax,r15
  405d36:	sub    rax,r12
  405d39:	cmp    rax,0x8
  405d3d:	jb     406435 <main@@Base+0x1ae5>
  405d43:	movbe  rcx,QWORD PTR [r12]
  405d49:	jmp    4064b4 <main@@Base+0x1b64>
  405d4e:	mov    rdi,r14
  405d51:	jmp    40d1c0 <main@@Base+0x8870>
  405d56:	mov    rbx,r13
  405d59:	cmp    al,0x22
  405d5b:	jne    406d81 <main@@Base+0x2431>
  405d61:	lea    rsi,[r13+0x6]
  405d65:	mov    rax,r15
  405d68:	sub    rax,rsi
  405d6b:	cmp    rax,0x2
  405d6f:	jl     4060a0 <main@@Base+0x1750>
  405d75:	cmp    BYTE PTR [rsi],0x20
  405d78:	jg     4060ae <main@@Base+0x175e>
  405d7e:	jne    4060a0 <main@@Base+0x1750>
  405d84:	cmp    BYTE PTR [rsi+0x1],0x20
  405d88:	jle    4060a0 <main@@Base+0x1750>
  405d8e:	inc    rsi
  405d91:	cmp    rsi,r15
  405d94:	jne    4060b3 <main@@Base+0x1763>
  405d9a:	jmp    406118 <main@@Base+0x17c8>
  405d9f:	lea    rcx,[rax-0x1]
  405da3:	cmp    rcx,0x6
  405da7:	ja     40d1ba <main@@Base+0x886a>
  405dad:	lea    rdx,[rip+0x1c4f8]        # 4222ac <_IO_stdin_used@@Base+0x2ac>
  405db4:	mov    rsi,rdx
  405db7:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  405dbb:	add    rdx,rsi
  405dbe:	xor    r8d,r8d
  405dc1:	xor    ecx,ecx
  405dc3:	xor    esi,esi
  405dc5:	xor    edi,edi
  405dc7:	xor    ebx,ebx
  405dc9:	xor    ebp,ebp
  405dcb:	jmp    rdx
  405dcd:	movsx  r8,BYTE PTR [r13+0xe]
  405dd2:	shl    r8,0x8
  405dd6:	movsx  rcx,BYTE PTR [r13+0xd]
  405ddb:	shl    rcx,0x10
  405ddf:	or     rcx,r8
  405de2:	movsx  rsi,BYTE PTR [r13+0xc]
  405de7:	shl    rsi,0x18
  405deb:	or     rsi,rcx
  405dee:	movsx  rdi,BYTE PTR [r13+0xb]
  405df3:	shl    rdi,0x20
  405df7:	or     rdi,rsi
  405dfa:	movsx  rbx,BYTE PTR [r13+0xa]
  405dff:	shl    rbx,0x28
  405e03:	or     rbx,rdi
  405e06:	movsx  rbp,BYTE PTR [r13+0x9]
  405e0b:	shl    rbp,0x30
  405e0f:	or     rbp,rbx
  405e12:	movzx  ecx,BYTE PTR [r12]
  405e17:	shl    rcx,0x38
  405e1b:	or     rcx,rbp
  405e1e:	shr    rcx,0x38
  405e22:	cmp    rcx,0x79
  405e26:	jne    40d1ba <main@@Base+0x886a>
  405e2c:	cmp    rax,0x2
  405e30:	jl     40d1ba <main@@Base+0x886a>
  405e36:	mov    rax,QWORD PTR [rsp+0x8]
  405e3b:	cmp    DWORD PTR [rax],0x0
  405e3e:	mov    al,BYTE PTR [r13+0x9]
  405e42:	je     407728 <main@@Base+0x2dd8>
  405e48:	cmp    al,0x21
  405e4a:	jl     405e54 <main@@Base+0x1504>
  405e4c:	cmp    al,0x3a
  405e4e:	jne    40d1ba <main@@Base+0x886a>
  405e54:	add    r13,0x9
  405e58:	mov    rax,QWORD PTR [rsp+0x8]
  405e5d:	mov    DWORD PTR [rax],0x0
  405e63:	jmp    407734 <main@@Base+0x2de4>
  405e68:	lea    rcx,[rax-0x1]
  405e6c:	cmp    rcx,0x6
  405e70:	ja     40d1ba <main@@Base+0x886a>
  405e76:	lea    rdx,[rip+0x1c1c7]        # 422044 <_IO_stdin_used@@Base+0x44>
  405e7d:	mov    rsi,rdx
  405e80:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  405e84:	add    rdx,rsi
  405e87:	xor    r8d,r8d
  405e8a:	xor    ecx,ecx
  405e8c:	xor    esi,esi
  405e8e:	xor    edi,edi
  405e90:	xor    ebx,ebx
  405e92:	xor    ebp,ebp
  405e94:	jmp    rdx
  405e96:	movsx  r8,BYTE PTR [r13+0xe]
  405e9b:	shl    r8,0x8
  405e9f:	movsx  rcx,BYTE PTR [r13+0xd]
  405ea4:	shl    rcx,0x10
  405ea8:	or     rcx,r8
  405eab:	movsx  rsi,BYTE PTR [r13+0xc]
  405eb0:	shl    rsi,0x18
  405eb4:	or     rsi,rcx
  405eb7:	movsx  rdi,BYTE PTR [r13+0xb]
  405ebc:	shl    rdi,0x20
  405ec0:	or     rdi,rsi
  405ec3:	movsx  rbx,BYTE PTR [r13+0xa]
  405ec8:	shl    rbx,0x28
  405ecc:	or     rbx,rdi
  405ecf:	movsx  rbp,BYTE PTR [r13+0x9]
  405ed4:	shl    rbp,0x30
  405ed8:	or     rbp,rbx
  405edb:	movzx  ecx,BYTE PTR [r12]
  405ee0:	shl    rcx,0x38
  405ee4:	or     rcx,rbp
  405ee7:	movabs rdx,0x665f646f75626c65
  405ef1:	cmp    rcx,rdx
  405ef4:	jne    405feb <main@@Base+0x169b>
  405efa:	lea    r12,[r13+0x10]
  405efe:	mov    rax,r15
  405f01:	sub    rax,r12
  405f04:	cmp    rax,0x8
  405f08:	jb     406510 <main@@Base+0x1bc0>
  405f0e:	movbe  rcx,QWORD PTR [r12]
  405f14:	jmp    40658f <main@@Base+0x1c3f>
  405f19:	lea    rcx,[rax-0x1]
  405f1d:	cmp    rcx,0x6
  405f21:	ja     40d1ba <main@@Base+0x886a>
  405f27:	lea    rdx,[rip+0x1c362]        # 422290 <_IO_stdin_used@@Base+0x290>
  405f2e:	mov    rsi,rdx
  405f31:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  405f35:	add    rdx,rsi
  405f38:	xor    r8d,r8d
  405f3b:	xor    ecx,ecx
  405f3d:	xor    esi,esi
  405f3f:	xor    edi,edi
  405f41:	xor    ebp,ebp
  405f43:	xor    ebx,ebx
  405f45:	jmp    rdx
  405f47:	movsx  r8,BYTE PTR [r13+0x16]
  405f4c:	shl    r8,0x8
  405f50:	movsx  rcx,BYTE PTR [r13+0x15]
  405f55:	shl    rcx,0x10
  405f59:	or     rcx,r8
  405f5c:	movsx  rsi,BYTE PTR [r13+0x14]
  405f61:	shl    rsi,0x18
  405f65:	or     rsi,rcx
  405f68:	movsx  rdi,BYTE PTR [r13+0x13]
  405f6d:	shl    rdi,0x20
  405f71:	or     rdi,rsi
  405f74:	movsx  rbp,BYTE PTR [r13+0x12]
  405f79:	shl    rbp,0x28
  405f7d:	or     rbp,rdi
  405f80:	movsx  rbx,BYTE PTR [r13+0x11]
  405f85:	shl    rbx,0x30
  405f89:	or     rbx,rbp
  405f8c:	movzx  ecx,BYTE PTR [r12]
  405f91:	shl    rcx,0x38
  405f95:	or     rcx,rbx
  405f98:	shr    rcx,0x18
  405f9c:	movabs rdx,0x5f74657374
  405fa6:	cmp    rcx,rdx
  405fa9:	jne    40d1ba <main@@Base+0x886a>
  405faf:	cmp    rax,0x6
  405fb3:	jl     40d1ba <main@@Base+0x886a>
  405fb9:	mov    rax,QWORD PTR [rsp+0x8]
  405fbe:	cmp    DWORD PTR [rax],0x0
  405fc1:	mov    al,BYTE PTR [r13+0x15]
  405fc5:	je     407857 <main@@Base+0x2f07>
  405fcb:	cmp    al,0x21
  405fcd:	jl     405fd7 <main@@Base+0x1687>
  405fcf:	cmp    al,0x3a
  405fd1:	jne    40d1ba <main@@Base+0x886a>
  405fd7:	add    r13,0x15
  405fdb:	mov    rax,QWORD PTR [rsp+0x8]
  405fe0:	mov    DWORD PTR [rax],0x0
  405fe6:	jmp    407863 <main@@Base+0x2f13>
  405feb:	shr    rcx,0x8
  405fef:	movabs rdx,0x665f6c6f6e6773
  405ff9:	cmp    rcx,rdx
  405ffc:	jne    40d1ba <main@@Base+0x886a>
  406002:	cmp    rax,0x8
  406006:	jl     40d1ba <main@@Base+0x886a>
  40600c:	mov    rax,QWORD PTR [rsp+0x8]
  406011:	cmp    DWORD PTR [rax],0x0
  406014:	mov    al,BYTE PTR [r13+0xf]
  406018:	je     4094a7 <main@@Base+0x4b57>
  40601e:	cmp    al,0x21
  406020:	jl     40602a <main@@Base+0x16da>
  406022:	cmp    al,0x3a
  406024:	jne    40d1ba <main@@Base+0x886a>
  40602a:	add    r13,0xf
  40602e:	mov    rax,QWORD PTR [rsp+0x8]
  406033:	mov    DWORD PTR [rax],0x0
  406039:	jmp    4094b3 <main@@Base+0x4b63>
  40603e:	mov    rdi,r14
  406041:	mov    rdx,r15
  406044:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406049:	mov    rsi,rax
  40604c:	cmp    rsi,r15
  40604f:	je     4060fa <main@@Base+0x17aa>
  406055:	cmp    BYTE PTR [rsi],0x3a
  406058:	jne    4060fa <main@@Base+0x17aa>
  40605e:	lea    rax,[rsi+0x1]
  406062:	mov    rcx,r15
  406065:	sub    rcx,rax
  406068:	cmp    rcx,0x2
  40606c:	jl     406d2b <main@@Base+0x23db>
  406072:	cmp    BYTE PTR [rax],0x20
  406075:	jg     406d39 <main@@Base+0x23e9>
  40607b:	jne    406d2b <main@@Base+0x23db>
  406081:	cmp    BYTE PTR [rsi+0x2],0x20
  406085:	jle    406d2b <main@@Base+0x23db>
  40608b:	add    rsi,0x2
  40608f:	mov    rax,rsi
  406092:	cmp    r13,rax
  406095:	jne    406d42 <main@@Base+0x23f2>
  40609b:	jmp    409d41 <main@@Base+0x53f1>
  4060a0:	mov    rdi,r14
  4060a3:	mov    rdx,r15
  4060a6:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4060ab:	mov    rsi,rax
  4060ae:	cmp    rsi,r15
  4060b1:	je     406118 <main@@Base+0x17c8>
  4060b3:	cmp    BYTE PTR [rsi],0x3a
  4060b6:	jne    406118 <main@@Base+0x17c8>
  4060b8:	lea    rbx,[rsi+0x1]
  4060bc:	mov    rax,r15
  4060bf:	sub    rax,rbx
  4060c2:	cmp    rax,0x2
  4060c6:	jl     406d70 <main@@Base+0x2420>
  4060cc:	cmp    BYTE PTR [rbx],0x20
  4060cf:	jg     406d81 <main@@Base+0x2431>
  4060d5:	jne    406d70 <main@@Base+0x2420>
  4060db:	cmp    BYTE PTR [rsi+0x2],0x20
  4060df:	jle    406d70 <main@@Base+0x2420>
  4060e5:	add    rsi,0x2
  4060e9:	mov    rbx,rsi
  4060ec:	cmp    r13,rbx
  4060ef:	jne    406d8a <main@@Base+0x243a>
  4060f5:	jmp    409d41 <main@@Base+0x53f1>
  4060fa:	mov    rdi,r14
  4060fd:	mov    rdx,r15
  406100:	mov    ecx,0x4
  406105:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40610a:	cmp    r13,rax
  40610d:	jne    406d42 <main@@Base+0x23f2>
  406113:	jmp    409d41 <main@@Base+0x53f1>
  406118:	mov    rdi,r14
  40611b:	mov    rdx,r15
  40611e:	mov    ecx,0x4
  406123:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406128:	jmp    406d7e <main@@Base+0x242e>
  40612d:	mov    rax,r13
  406130:	cmp    cl,0x22
  406133:	jne    406fc7 <main@@Base+0x2677>
  406139:	lea    rsi,[r13+0x5]
  40613d:	mov    rax,r15
  406140:	sub    rax,rsi
  406143:	cmp    rax,0x2
  406147:	jl     40620a <main@@Base+0x18ba>
  40614d:	cmp    BYTE PTR [rsi],0x20
  406150:	jg     406218 <main@@Base+0x18c8>
  406156:	jne    40620a <main@@Base+0x18ba>
  40615c:	cmp    BYTE PTR [rsi+0x1],0x20
  406160:	jle    40620a <main@@Base+0x18ba>
  406166:	inc    rsi
  406169:	cmp    rsi,r15
  40616c:	jne    406221 <main@@Base+0x18d1>
  406172:	jmp    40631f <main@@Base+0x19cf>
  406177:	mov    rbx,r13
  40617a:	cmp    al,0x22
  40617c:	jne    40700f <main@@Base+0x26bf>
  406182:	lea    rsi,[r13+0x5]
  406186:	mov    rax,r15
  406189:	sub    rax,rsi
  40618c:	cmp    rax,0x2
  406190:	jl     40626c <main@@Base+0x191c>
  406196:	cmp    BYTE PTR [rsi],0x20
  406199:	jg     40627a <main@@Base+0x192a>
  40619f:	jne    40626c <main@@Base+0x191c>
  4061a5:	cmp    BYTE PTR [rsi+0x1],0x20
  4061a9:	jle    40626c <main@@Base+0x191c>
  4061af:	inc    rsi
  4061b2:	cmp    rsi,r15
  4061b5:	jne    406283 <main@@Base+0x1933>
  4061bb:	jmp    40633d <main@@Base+0x19ed>
  4061c0:	mov    rax,r13
  4061c3:	cmp    cl,0x22
  4061c6:	jne    4072ad <main@@Base+0x295d>
  4061cc:	lea    rsi,[r13+0x5]
  4061d0:	mov    rax,r15
  4061d3:	sub    rax,rsi
  4061d6:	cmp    rax,0x2
  4061da:	jl     4062ce <main@@Base+0x197e>
  4061e0:	cmp    BYTE PTR [rsi],0x20
  4061e3:	jg     4062dc <main@@Base+0x198c>
  4061e9:	jne    4062ce <main@@Base+0x197e>
  4061ef:	cmp    BYTE PTR [rsi+0x1],0x20
  4061f3:	jle    4062ce <main@@Base+0x197e>
  4061f9:	inc    rsi
  4061fc:	cmp    rsi,r15
  4061ff:	jne    4062e1 <main@@Base+0x1991>
  406205:	jmp    406352 <main@@Base+0x1a02>
  40620a:	mov    rdi,r14
  40620d:	mov    rdx,r15
  406210:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406215:	mov    rsi,rax
  406218:	cmp    rsi,r15
  40621b:	je     40631f <main@@Base+0x19cf>
  406221:	cmp    BYTE PTR [rsi],0x3a
  406224:	jne    40631f <main@@Base+0x19cf>
  40622a:	lea    rax,[rsi+0x1]
  40622e:	mov    rcx,r15
  406231:	sub    rcx,rax
  406234:	cmp    rcx,0x2
  406238:	jl     406fb9 <main@@Base+0x2669>
  40623e:	cmp    BYTE PTR [rax],0x20
  406241:	jg     406fc7 <main@@Base+0x2677>
  406247:	jne    406fb9 <main@@Base+0x2669>
  40624d:	cmp    BYTE PTR [rsi+0x2],0x20
  406251:	jle    406fb9 <main@@Base+0x2669>
  406257:	add    rsi,0x2
  40625b:	mov    rax,rsi
  40625e:	cmp    r13,rax
  406261:	jne    406fd0 <main@@Base+0x2680>
  406267:	jmp    409d41 <main@@Base+0x53f1>
  40626c:	mov    rdi,r14
  40626f:	mov    rdx,r15
  406272:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406277:	mov    rsi,rax
  40627a:	cmp    rsi,r15
  40627d:	je     40633d <main@@Base+0x19ed>
  406283:	cmp    BYTE PTR [rsi],0x3a
  406286:	jne    40633d <main@@Base+0x19ed>
  40628c:	lea    rbx,[rsi+0x1]
  406290:	mov    rax,r15
  406293:	sub    rax,rbx
  406296:	cmp    rax,0x2
  40629a:	jl     406ffe <main@@Base+0x26ae>
  4062a0:	cmp    BYTE PTR [rbx],0x20
  4062a3:	jg     40700f <main@@Base+0x26bf>
  4062a9:	jne    406ffe <main@@Base+0x26ae>
  4062af:	cmp    BYTE PTR [rsi+0x2],0x20
  4062b3:	jle    406ffe <main@@Base+0x26ae>
  4062b9:	add    rsi,0x2
  4062bd:	mov    rbx,rsi
  4062c0:	cmp    r13,rbx
  4062c3:	jne    407018 <main@@Base+0x26c8>
  4062c9:	jmp    409d41 <main@@Base+0x53f1>
  4062ce:	mov    rdi,r14
  4062d1:	mov    rdx,r15
  4062d4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4062d9:	mov    rsi,rax
  4062dc:	cmp    rsi,r15
  4062df:	je     406352 <main@@Base+0x1a02>
  4062e1:	cmp    BYTE PTR [rsi],0x3a
  4062e4:	jne    406352 <main@@Base+0x1a02>
  4062e6:	lea    rax,[rsi+0x1]
  4062ea:	mov    rcx,r15
  4062ed:	sub    rcx,rax
  4062f0:	cmp    rcx,0x2
  4062f4:	jl     407295 <main@@Base+0x2945>
  4062fa:	cmp    BYTE PTR [rax],0x20
  4062fd:	jg     4072a3 <main@@Base+0x2953>
  406303:	jne    407295 <main@@Base+0x2945>
  406309:	cmp    BYTE PTR [rsi+0x2],0x20
  40630d:	jle    407295 <main@@Base+0x2945>
  406313:	add    rsi,0x2
  406317:	mov    rax,rsi
  40631a:	jmp    4072a3 <main@@Base+0x2953>
  40631f:	mov    rdi,r14
  406322:	mov    rdx,r15
  406325:	mov    ecx,0x4
  40632a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40632f:	cmp    r13,rax
  406332:	jne    406fd0 <main@@Base+0x2680>
  406338:	jmp    409d41 <main@@Base+0x53f1>
  40633d:	mov    rdi,r14
  406340:	mov    rdx,r15
  406343:	mov    ecx,0x4
  406348:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40634d:	jmp    40700c <main@@Base+0x26bc>
  406352:	mov    rdi,r14
  406355:	mov    rdx,r15
  406358:	mov    ecx,0x4
  40635d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406362:	jmp    4072a3 <main@@Base+0x2953>
  406367:	cmp    rax,0x9
  40636b:	jl     4091f4 <main@@Base+0x48a4>
  406371:	mov    rax,QWORD PTR [rsp+0x8]
  406376:	cmp    DWORD PTR [rax],0x0
  406379:	mov    al,BYTE PTR [r13+0x10]
  40637d:	je     40823d <main@@Base+0x38ed>
  406383:	cmp    al,0x21
  406385:	jl     40638f <main@@Base+0x1a3f>
  406387:	cmp    al,0x3a
  406389:	jne    4091f4 <main@@Base+0x48a4>
  40638f:	lea    rsi,[r13+0x10]
  406393:	mov    rax,QWORD PTR [rsp+0x8]
  406398:	mov    DWORD PTR [rax],0x0
  40639e:	jmp    408249 <main@@Base+0x38f9>
  4063a3:	mov    rbx,r13
  4063a6:	cmp    al,0x22
  4063a8:	jne    407f37 <main@@Base+0x35e7>
  4063ae:	lea    rsi,[r13+0x9]
  4063b2:	mov    rax,r15
  4063b5:	sub    rax,rsi
  4063b8:	cmp    rax,0x2
  4063bc:	jl     4065d9 <main@@Base+0x1c89>
  4063c2:	cmp    BYTE PTR [rsi],0x20
  4063c5:	jg     4065e7 <main@@Base+0x1c97>
  4063cb:	jne    4065d9 <main@@Base+0x1c89>
  4063d1:	cmp    BYTE PTR [rsi+0x1],0x20
  4063d5:	jle    4065d9 <main@@Base+0x1c89>
  4063db:	inc    rsi
  4063de:	cmp    rsi,r15
  4063e1:	jne    4065ec <main@@Base+0x1c9c>
  4063e7:	jmp    406633 <main@@Base+0x1ce3>
  4063ec:	cmp    al,0x22
  4063ee:	jne    40d1ba <main@@Base+0x886a>
  4063f4:	add    r13,0x11
  4063f8:	mov    rax,r15
  4063fb:	sub    rax,r13
  4063fe:	cmp    rax,0x2
  406402:	jl     4068e2 <main@@Base+0x1f92>
  406408:	cmp    BYTE PTR [r13+0x0],0x20
  40640d:	jg     4068f3 <main@@Base+0x1fa3>
  406413:	jne    4068e2 <main@@Base+0x1f92>
  406419:	cmp    BYTE PTR [r13+0x1],0x20
  40641e:	jle    4068e2 <main@@Base+0x1f92>
  406424:	inc    r13
  406427:	cmp    r13,r15
  40642a:	jne    4068f8 <main@@Base+0x1fa8>
  406430:	jmp    406942 <main@@Base+0x1ff2>
  406435:	lea    rcx,[rax-0x1]
  406439:	cmp    rcx,0x6
  40643d:	ja     40d1ba <main@@Base+0x886a>
  406443:	lea    rdx,[rip+0x1bc4e]        # 422098 <_IO_stdin_used@@Base+0x98>
  40644a:	mov    rsi,rdx
  40644d:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  406451:	add    rdx,rsi
  406454:	xor    r8d,r8d
  406457:	xor    ecx,ecx
  406459:	xor    esi,esi
  40645b:	xor    edi,edi
  40645d:	xor    ebx,ebx
  40645f:	xor    ebp,ebp
  406461:	jmp    rdx
  406463:	movsx  r8,BYTE PTR [r13+0x16]
  406468:	shl    r8,0x8
  40646c:	movsx  rcx,BYTE PTR [r13+0x15]
  406471:	shl    rcx,0x10
  406475:	or     rcx,r8
  406478:	movsx  rsi,BYTE PTR [r13+0x14]
  40647d:	shl    rsi,0x18
  406481:	or     rsi,rcx
  406484:	movsx  rdi,BYTE PTR [r13+0x13]
  406489:	shl    rdi,0x20
  40648d:	or     rdi,rsi
  406490:	movsx  rbx,BYTE PTR [r13+0x12]
  406495:	shl    rbx,0x28
  406499:	or     rbx,rdi
  40649c:	movsx  rbp,BYTE PTR [r13+0x11]
  4064a1:	shl    rbp,0x30
  4064a5:	or     rbp,rbx
  4064a8:	movzx  ecx,BYTE PTR [r12]
  4064ad:	shl    rcx,0x38
  4064b1:	or     rcx,rbp
  4064b4:	movabs rdx,0xffffffff00000000
  4064be:	and    rcx,rdx
  4064c1:	movabs rdx,0x6666657200000000
  4064cb:	cmp    rcx,rdx
  4064ce:	jne    40d1ba <main@@Base+0x886a>
  4064d4:	cmp    rax,0x5
  4064d8:	jl     40d1ba <main@@Base+0x886a>
  4064de:	mov    rax,QWORD PTR [rsp+0x8]
  4064e3:	cmp    DWORD PTR [rax],0x0
  4064e6:	mov    al,BYTE PTR [r13+0x14]
  4064ea:	je     40953e <main@@Base+0x4bee>
  4064f0:	cmp    al,0x21
  4064f2:	jl     4064fc <main@@Base+0x1bac>
  4064f4:	cmp    al,0x3a
  4064f6:	jne    40d1ba <main@@Base+0x886a>
  4064fc:	add    r13,0x14
  406500:	mov    rax,QWORD PTR [rsp+0x8]
  406505:	mov    DWORD PTR [rax],0x0
  40650b:	jmp    40954a <main@@Base+0x4bfa>
  406510:	lea    rcx,[rax-0x1]
  406514:	cmp    rcx,0x6
  406518:	ja     40d1ba <main@@Base+0x886a>
  40651e:	lea    rdx,[rip+0x1bb3b]        # 422060 <_IO_stdin_used@@Base+0x60>
  406525:	mov    rsi,rdx
  406528:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40652c:	add    rdx,rsi
  40652f:	xor    r8d,r8d
  406532:	xor    ecx,ecx
  406534:	xor    esi,esi
  406536:	xor    edi,edi
  406538:	xor    ebx,ebx
  40653a:	xor    ebp,ebp
  40653c:	jmp    rdx
  40653e:	movsx  r8,BYTE PTR [r13+0x16]
  406543:	shl    r8,0x8
  406547:	movsx  rcx,BYTE PTR [r13+0x15]
  40654c:	shl    rcx,0x10
  406550:	or     rcx,r8
  406553:	movsx  rsi,BYTE PTR [r13+0x14]
  406558:	shl    rsi,0x18
  40655c:	or     rsi,rcx
  40655f:	movsx  rdi,BYTE PTR [r13+0x13]
  406564:	shl    rdi,0x20
  406568:	or     rdi,rsi
  40656b:	movsx  rbx,BYTE PTR [r13+0x12]
  406570:	shl    rbx,0x28
  406574:	or     rbx,rdi
  406577:	movsx  rbp,BYTE PTR [r13+0x11]
  40657c:	shl    rbp,0x30
  406580:	or     rbp,rbx
  406583:	movzx  ecx,BYTE PTR [r12]
  406588:	shl    rcx,0x38
  40658c:	or     rcx,rbp
  40658f:	shr    rcx,0x38
  406593:	cmp    rcx,0x73
  406597:	jne    40d1ba <main@@Base+0x886a>
  40659d:	cmp    rax,0x2
  4065a1:	jl     40d1ba <main@@Base+0x886a>
  4065a7:	mov    rax,QWORD PTR [rsp+0x8]
  4065ac:	cmp    DWORD PTR [rax],0x0
  4065af:	mov    al,BYTE PTR [r13+0x11]
  4065b3:	je     409587 <main@@Base+0x4c37>
  4065b9:	cmp    al,0x21
  4065bb:	jl     4065c5 <main@@Base+0x1c75>
  4065bd:	cmp    al,0x3a
  4065bf:	jne    40d1ba <main@@Base+0x886a>
  4065c5:	add    r13,0x11
  4065c9:	mov    rax,QWORD PTR [rsp+0x8]
  4065ce:	mov    DWORD PTR [rax],0x0
  4065d4:	jmp    409593 <main@@Base+0x4c43>
  4065d9:	mov    rdi,r14
  4065dc:	mov    rdx,r15
  4065df:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4065e4:	mov    rsi,rax
  4065e7:	cmp    rsi,r15
  4065ea:	je     406633 <main@@Base+0x1ce3>
  4065ec:	cmp    BYTE PTR [rsi],0x3a
  4065ef:	jne    406633 <main@@Base+0x1ce3>
  4065f1:	lea    rbx,[rsi+0x1]
  4065f5:	mov    rax,r15
  4065f8:	sub    rax,rbx
  4065fb:	cmp    rax,0x2
  4065ff:	jl     407f26 <main@@Base+0x35d6>
  406605:	cmp    BYTE PTR [rbx],0x20
  406608:	jg     407f37 <main@@Base+0x35e7>
  40660e:	jne    407f26 <main@@Base+0x35d6>
  406614:	cmp    BYTE PTR [rsi+0x2],0x20
  406618:	jle    407f26 <main@@Base+0x35d6>
  40661e:	add    rsi,0x2
  406622:	mov    rbx,rsi
  406625:	cmp    r13,rbx
  406628:	jne    407f40 <main@@Base+0x35f0>
  40662e:	jmp    409d41 <main@@Base+0x53f1>
  406633:	mov    rdi,r14
  406636:	mov    rdx,r15
  406639:	mov    ecx,0x4
  40663e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406643:	jmp    407f34 <main@@Base+0x35e4>
  406648:	mov    rdi,r14
  40664b:	mov    rsi,rbx
  40664e:	mov    rdx,r15
  406651:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406656:	mov    rbx,rax
  406659:	cmp    r13,rbx
  40665c:	je     409d41 <main@@Base+0x53f1>
  406662:	mov    DWORD PTR [rsp+0x10],0x0
  40666a:	mov    rdi,r14
  40666d:	mov    rsi,rbx
  406670:	mov    rdx,r15
  406673:	lea    rcx,[rsp+0x10]
  406678:	call   41fda0 <flatcc_json_parser_float@@Base>
  40667d:	mov    rbp,rax
  406680:	cmp    rbx,rax
  406683:	jne    4066b4 <main@@Base+0x1d64>
  406685:	mov    rdi,r14
  406688:	mov    rsi,rbx
  40668b:	mov    rdx,r15
  40668e:	lea    rcx,[rip+0x22b8b]        # 429220 <filename@@Base+0x150>
  406695:	lea    r8,[rsp+0x10]
  40669a:	call   412ef0 <main@@Base+0xe5a0>
  40669f:	mov    rbp,rax
  4066a2:	cmp    rax,rbx
  4066a5:	je     40da65 <main@@Base+0x9115>
  4066ab:	cmp    rbp,r15
  4066ae:	je     40da65 <main@@Base+0x9115>
  4066b4:	vmovss xmm0,DWORD PTR [rsp+0x10]
  4066ba:	vucomiss xmm0,DWORD PTR [rip+0x1b952]        # 422014 <_IO_stdin_used@@Base+0x14>
  4066c2:	jne    4066d1 <main@@Base+0x1d81>
  4066c4:	jp     4066d1 <main@@Base+0x1d81>
  4066c6:	test   BYTE PTR [r14+0x10],0x2
  4066cb:	je     40d1cb <main@@Base+0x887b>
  4066d1:	mov    rdi,QWORD PTR [r14]
  4066d4:	mov    edx,0x4
  4066d9:	mov    esi,0x1b
  4066de:	mov    ecx,0x4
  4066e3:	call   41c310 <flatcc_builder_table_add@@Base>
  4066e8:	test   rax,rax
  4066eb:	je     40da65 <main@@Base+0x9115>
  4066f1:	mov    ecx,DWORD PTR [rsp+0x10]
  4066f5:	jmp    407d23 <main@@Base+0x33d3>
  4066fa:	mov    rdi,r14
  4066fd:	mov    rsi,rbx
  406700:	mov    rdx,r15
  406703:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406708:	mov    rbx,rax
  40670b:	movabs rdx,0x7465737400000000
  406715:	cmp    r13,rbx
  406718:	je     407bee <main@@Base+0x329e>
  40671e:	mov    rdi,QWORD PTR [r14]
  406721:	mov    esi,0x4
  406726:	mov    ecx,0x3fffffff
  40672b:	mov    edx,0x2
  406730:	call   41ab20 <flatcc_builder_start_vector@@Base>
  406735:	test   eax,eax
  406737:	jne    404a01 <main@@Base+0xb1>
  40673d:	cmp    rbx,r15
  406740:	je     40676d <main@@Base+0x1e1d>
  406742:	cmp    BYTE PTR [rbx],0x5b
  406745:	jne    40676d <main@@Base+0x1e1d>
  406747:	lea    rax,[rbx+0x1]
  40674b:	mov    rcx,r15
  40674e:	sub    rcx,rax
  406751:	cmp    rcx,0x2
  406755:	jl     4067a4 <main@@Base+0x1e54>
  406757:	cmp    BYTE PTR [rax],0x20
  40675a:	jg     4067b2 <main@@Base+0x1e62>
  40675c:	jne    4067a4 <main@@Base+0x1e54>
  40675e:	cmp    BYTE PTR [rbx+0x2],0x20
  406762:	jle    4067a4 <main@@Base+0x1e54>
  406764:	add    rbx,0x2
  406768:	mov    rax,rbx
  40676b:	jmp    4067b2 <main@@Base+0x1e62>
  40676d:	mov    rdi,r14
  406770:	mov    rsi,rbx
  406773:	mov    rdx,r15
  406776:	mov    ecx,0x16
  40677b:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406780:	mov    rbp,rax
  406783:	mov    rdi,QWORD PTR [r14]
  406786:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  40678b:	mov    DWORD PTR [rsp+0x1c],eax
  40678f:	test   eax,eax
  406791:	je     40da65 <main@@Base+0x9115>
  406797:	mov    rdi,QWORD PTR [r14]
  40679a:	mov    esi,0x9
  40679f:	jmp    407d11 <main@@Base+0x33c1>
  4067a4:	mov    rdi,r14
  4067a7:	mov    rsi,rax
  4067aa:	mov    rdx,r15
  4067ad:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4067b2:	mov    rbx,r15
  4067b5:	cmp    rax,r15
  4067b8:	je     4067f2 <main@@Base+0x1ea2>
  4067ba:	cmp    BYTE PTR [rax],0x5d
  4067bd:	jne    4067ef <main@@Base+0x1e9f>
  4067bf:	lea    rbp,[rax+0x1]
  4067c3:	mov    rcx,r15
  4067c6:	sub    rcx,rbp
  4067c9:	cmp    rcx,0x2
  4067cd:	jl     407471 <main@@Base+0x2b21>
  4067d3:	cmp    BYTE PTR [rbp+0x0],0x20
  4067d7:	jg     406783 <main@@Base+0x1e33>
  4067d9:	jne    407471 <main@@Base+0x2b21>
  4067df:	cmp    BYTE PTR [rax+0x2],0x20
  4067e3:	jle    407471 <main@@Base+0x2b21>
  4067e9:	add    rax,0x2
  4067ed:	jmp    406780 <main@@Base+0x1e30>
  4067ef:	mov    rbx,rax
  4067f2:	mov    rdi,QWORD PTR [r14]
  4067f5:	mov    esi,0x1
  4067fa:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  4067ff:	test   rax,rax
  406802:	je     404a01 <main@@Base+0xb1>
  406808:	mov    rdi,r14
  40680b:	mov    rsi,rbx
  40680e:	mov    rdx,r15
  406811:	mov    rcx,rax
  406814:	call   40f4d0 <main@@Base+0xab80>
  406819:	mov    rcx,r15
  40681c:	sub    rcx,rax
  40681f:	cmp    rcx,0x2
  406823:	jl     40683f <main@@Base+0x1eef>
  406825:	cmp    BYTE PTR [rax],0x20
  406828:	jg     40684d <main@@Base+0x1efd>
  40682a:	jne    40683f <main@@Base+0x1eef>
  40682c:	cmp    BYTE PTR [rax+0x1],0x20
  406830:	jle    40683f <main@@Base+0x1eef>
  406832:	inc    rax
  406835:	cmp    rax,r15
  406838:	jne    406856 <main@@Base+0x1f06>
  40683a:	jmp    407440 <main@@Base+0x2af0>
  40683f:	mov    rdi,r14
  406842:	mov    rsi,rax
  406845:	mov    rdx,r15
  406848:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40684d:	cmp    rax,r15
  406850:	je     407440 <main@@Base+0x2af0>
  406856:	movzx  ecx,BYTE PTR [rax]
  406859:	cmp    cl,0x2c
  40685c:	jne    407448 <main@@Base+0x2af8>
  406862:	lea    rbx,[rax+0x1]
  406866:	mov    rcx,r15
  406869:	sub    rcx,rbx
  40686c:	cmp    rcx,0x2
  406870:	jl     406885 <main@@Base+0x1f35>
  406872:	cmp    BYTE PTR [rbx],0x20
  406875:	jg     406896 <main@@Base+0x1f46>
  406877:	jne    406885 <main@@Base+0x1f35>
  406879:	cmp    BYTE PTR [rax+0x2],0x20
  40687d:	jle    406885 <main@@Base+0x1f35>
  40687f:	add    rax,0x2
  406883:	jmp    406893 <main@@Base+0x1f43>
  406885:	mov    rdi,r14
  406888:	mov    rsi,rbx
  40688b:	mov    rdx,r15
  40688e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406893:	mov    rbx,rax
  406896:	cmp    rbx,r15
  406899:	je     407484 <main@@Base+0x2b34>
  40689f:	cmp    BYTE PTR [rbx],0x5d
  4068a2:	jne    4067f2 <main@@Base+0x1ea2>
  4068a8:	lea    rbp,[rbx+0x1]
  4068ac:	mov    rax,r15
  4068af:	sub    rax,rbp
  4068b2:	cmp    rax,0x2
  4068b6:	jl     407471 <main@@Base+0x2b21>
  4068bc:	cmp    BYTE PTR [rbp+0x0],0x20
  4068c0:	jg     406783 <main@@Base+0x1e33>
  4068c6:	jne    407471 <main@@Base+0x2b21>
  4068cc:	cmp    BYTE PTR [rbx+0x2],0x20
  4068d0:	jle    407471 <main@@Base+0x2b21>
  4068d6:	add    rbx,0x2
  4068da:	mov    rbp,rbx
  4068dd:	jmp    406783 <main@@Base+0x1e33>
  4068e2:	mov    rdi,r14
  4068e5:	mov    rsi,r13
  4068e8:	mov    rdx,r15
  4068eb:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4068f0:	mov    r13,rax
  4068f3:	cmp    r13,r15
  4068f6:	je     406942 <main@@Base+0x1ff2>
  4068f8:	cmp    BYTE PTR [r13+0x0],0x3a
  4068fd:	jne    406942 <main@@Base+0x1ff2>
  4068ff:	lea    rbx,[r13+0x1]
  406903:	mov    rax,r15
  406906:	sub    rax,rbx
  406909:	cmp    rax,0x2
  40690d:	jl     4080c9 <main@@Base+0x3779>
  406913:	cmp    BYTE PTR [rbx],0x20
  406916:	jg     4080da <main@@Base+0x378a>
  40691c:	jne    4080c9 <main@@Base+0x3779>
  406922:	cmp    BYTE PTR [r13+0x2],0x20
  406927:	jle    4080c9 <main@@Base+0x3779>
  40692d:	add    r13,0x2
  406931:	mov    rbx,r13
  406934:	cmp    r12,rbx
  406937:	jne    4080e3 <main@@Base+0x3793>
  40693d:	jmp    40d1ba <main@@Base+0x886a>
  406942:	mov    rdi,r14
  406945:	mov    rsi,r13
  406948:	mov    rdx,r15
  40694b:	mov    ecx,0x4
  406950:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406955:	jmp    4080d7 <main@@Base+0x3787>
  40695a:	mov    rbx,r13
  40695d:	cmp    al,0x22
  40695f:	jne    4082dd <main@@Base+0x398d>
  406965:	lea    rsi,[r13+0x3]
  406969:	mov    rax,r15
  40696c:	sub    rax,rsi
  40696f:	cmp    rax,0x2
  406973:	jl     406a7b <main@@Base+0x212b>
  406979:	cmp    BYTE PTR [rsi],0x20
  40697c:	jg     406a89 <main@@Base+0x2139>
  406982:	jne    406a7b <main@@Base+0x212b>
  406988:	cmp    BYTE PTR [rsi+0x1],0x20
  40698c:	jle    406a7b <main@@Base+0x212b>
  406992:	inc    rsi
  406995:	cmp    rsi,r15
  406998:	jne    406a92 <main@@Base+0x2142>
  40699e:	jmp    406b99 <main@@Base+0x2249>
  4069a3:	mov    rbx,r13
  4069a6:	cmp    al,0x22
  4069a8:	jne    4083f1 <main@@Base+0x3aa1>
  4069ae:	lea    rsi,[r13+0x4]
  4069b2:	mov    rax,r15
  4069b5:	sub    rax,rsi
  4069b8:	cmp    rax,0x2
  4069bc:	jl     406add <main@@Base+0x218d>
  4069c2:	cmp    BYTE PTR [rsi],0x20
  4069c5:	jg     406aeb <main@@Base+0x219b>
  4069cb:	jne    406add <main@@Base+0x218d>
  4069d1:	cmp    BYTE PTR [rsi+0x1],0x20
  4069d5:	jle    406add <main@@Base+0x218d>
  4069db:	inc    rsi
  4069de:	cmp    rsi,r15
  4069e1:	jne    406af4 <main@@Base+0x21a4>
  4069e7:	jmp    406bae <main@@Base+0x225e>
  4069ec:	mov    rbx,r13
  4069ef:	cmp    al,0x22
  4069f1:	jne    408fcf <main@@Base+0x467f>
  4069f7:	lea    rsi,[r13+0x7]
  4069fb:	mov    rax,r15
  4069fe:	sub    rax,rsi
  406a01:	cmp    rax,0x2
  406a05:	jl     406b3f <main@@Base+0x21ef>
  406a0b:	cmp    BYTE PTR [rsi],0x20
  406a0e:	jg     406b4d <main@@Base+0x21fd>
  406a14:	jne    406b3f <main@@Base+0x21ef>
  406a1a:	cmp    BYTE PTR [rsi+0x1],0x20
  406a1e:	jle    406b3f <main@@Base+0x21ef>
  406a24:	inc    rsi
  406a27:	cmp    rsi,r15
  406a2a:	jne    406b52 <main@@Base+0x2202>
  406a30:	jmp    406bc3 <main@@Base+0x2273>
  406a35:	cmp    al,0x22
  406a37:	jne    406c35 <main@@Base+0x22e5>
  406a3d:	lea    rsi,[r13+0x11]
  406a41:	mov    rax,r15
  406a44:	sub    rax,rsi
  406a47:	cmp    rax,0x2
  406a4b:	jl     406bd8 <main@@Base+0x2288>
  406a51:	cmp    BYTE PTR [rsi],0x20
  406a54:	jg     406be6 <main@@Base+0x2296>
  406a5a:	jne    406bd8 <main@@Base+0x2288>
  406a60:	cmp    BYTE PTR [rsi+0x1],0x20
  406a64:	jle    406bd8 <main@@Base+0x2288>
  406a6a:	inc    rsi
  406a6d:	cmp    rsi,r15
  406a70:	jne    406bef <main@@Base+0x229f>
  406a76:	jmp    406d16 <main@@Base+0x23c6>
  406a7b:	mov    rdi,r14
  406a7e:	mov    rdx,r15
  406a81:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406a86:	mov    rsi,rax
  406a89:	cmp    rsi,r15
  406a8c:	je     406b99 <main@@Base+0x2249>
  406a92:	cmp    BYTE PTR [rsi],0x3a
  406a95:	jne    406b99 <main@@Base+0x2249>
  406a9b:	lea    rbx,[rsi+0x1]
  406a9f:	mov    rax,r15
  406aa2:	sub    rax,rbx
  406aa5:	cmp    rax,0x2
  406aa9:	jl     4082cc <main@@Base+0x397c>
  406aaf:	cmp    BYTE PTR [rbx],0x20
  406ab2:	jg     4082dd <main@@Base+0x398d>
  406ab8:	jne    4082cc <main@@Base+0x397c>
  406abe:	cmp    BYTE PTR [rsi+0x2],0x20
  406ac2:	jle    4082cc <main@@Base+0x397c>
  406ac8:	add    rsi,0x2
  406acc:	mov    rbx,rsi
  406acf:	cmp    r13,rbx
  406ad2:	jne    4082e6 <main@@Base+0x3996>
  406ad8:	jmp    409d41 <main@@Base+0x53f1>
  406add:	mov    rdi,r14
  406ae0:	mov    rdx,r15
  406ae3:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406ae8:	mov    rsi,rax
  406aeb:	cmp    rsi,r15
  406aee:	je     406bae <main@@Base+0x225e>
  406af4:	cmp    BYTE PTR [rsi],0x3a
  406af7:	jne    406bae <main@@Base+0x225e>
  406afd:	lea    rbx,[rsi+0x1]
  406b01:	mov    rax,r15
  406b04:	sub    rax,rbx
  406b07:	cmp    rax,0x2
  406b0b:	jl     4083e0 <main@@Base+0x3a90>
  406b11:	cmp    BYTE PTR [rbx],0x20
  406b14:	jg     4083f1 <main@@Base+0x3aa1>
  406b1a:	jne    4083e0 <main@@Base+0x3a90>
  406b20:	cmp    BYTE PTR [rsi+0x2],0x20
  406b24:	jle    4083e0 <main@@Base+0x3a90>
  406b2a:	add    rsi,0x2
  406b2e:	mov    rbx,rsi
  406b31:	cmp    r13,rbx
  406b34:	jne    4083fa <main@@Base+0x3aaa>
  406b3a:	jmp    409d41 <main@@Base+0x53f1>
  406b3f:	mov    rdi,r14
  406b42:	mov    rdx,r15
  406b45:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406b4a:	mov    rsi,rax
  406b4d:	cmp    rsi,r15
  406b50:	je     406bc3 <main@@Base+0x2273>
  406b52:	cmp    BYTE PTR [rsi],0x3a
  406b55:	jne    406bc3 <main@@Base+0x2273>
  406b57:	lea    rbx,[rsi+0x1]
  406b5b:	mov    rax,r15
  406b5e:	sub    rax,rbx
  406b61:	cmp    rax,0x2
  406b65:	jl     408fbe <main@@Base+0x466e>
  406b6b:	cmp    BYTE PTR [rbx],0x20
  406b6e:	jg     408fcf <main@@Base+0x467f>
  406b74:	jne    408fbe <main@@Base+0x466e>
  406b7a:	cmp    BYTE PTR [rsi+0x2],0x20
  406b7e:	jle    408fbe <main@@Base+0x466e>
  406b84:	add    rsi,0x2
  406b88:	mov    rbx,rsi
  406b8b:	cmp    r13,rbx
  406b8e:	jne    408fd8 <main@@Base+0x4688>
  406b94:	jmp    409d41 <main@@Base+0x53f1>
  406b99:	mov    rdi,r14
  406b9c:	mov    rdx,r15
  406b9f:	mov    ecx,0x4
  406ba4:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406ba9:	jmp    4082da <main@@Base+0x398a>
  406bae:	mov    rdi,r14
  406bb1:	mov    rdx,r15
  406bb4:	mov    ecx,0x4
  406bb9:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406bbe:	jmp    4083ee <main@@Base+0x3a9e>
  406bc3:	mov    rdi,r14
  406bc6:	mov    rdx,r15
  406bc9:	mov    ecx,0x4
  406bce:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406bd3:	jmp    408fcc <main@@Base+0x467c>
  406bd8:	mov    rdi,r14
  406bdb:	mov    rdx,r15
  406bde:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406be3:	mov    rsi,rax
  406be6:	cmp    rsi,r15
  406be9:	je     406d16 <main@@Base+0x23c6>
  406bef:	cmp    BYTE PTR [rsi],0x3a
  406bf2:	jne    406d16 <main@@Base+0x23c6>
  406bf8:	lea    rbx,[rsi+0x1]
  406bfc:	mov    rax,r15
  406bff:	sub    rax,rbx
  406c02:	cmp    rax,0x2
  406c06:	jl     409312 <main@@Base+0x49c2>
  406c0c:	cmp    BYTE PTR [rbx],0x20
  406c0f:	jg     409323 <main@@Base+0x49d3>
  406c15:	jne    409312 <main@@Base+0x49c2>
  406c1b:	cmp    BYTE PTR [rsi+0x2],0x20
  406c1f:	jle    409312 <main@@Base+0x49c2>
  406c25:	add    rsi,0x2
  406c29:	mov    rbx,rsi
  406c2c:	cmp    r12,rbx
  406c2f:	jne    40932c <main@@Base+0x49dc>
  406c35:	lea    r12,[r13+0x10]
  406c39:	mov    rax,r15
  406c3c:	sub    rax,r12
  406c3f:	cmp    rax,0x8
  406c43:	jb     406c4d <main@@Base+0x22fd>
  406c45:	movbe  rcx,QWORD PTR [r12]
  406c4b:	jmp    406ccc <main@@Base+0x237c>
  406c4d:	lea    rcx,[rax-0x1]
  406c51:	cmp    rcx,0x6
  406c55:	ja     40d1ba <main@@Base+0x886a>
  406c5b:	lea    rdx,[rip+0x1b4c2]        # 422124 <_IO_stdin_used@@Base+0x124>
  406c62:	mov    rsi,rdx
  406c65:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  406c69:	add    rdx,rsi
  406c6c:	xor    r8d,r8d
  406c6f:	xor    ecx,ecx
  406c71:	xor    esi,esi
  406c73:	xor    edi,edi
  406c75:	xor    ebp,ebp
  406c77:	xor    ebx,ebx
  406c79:	jmp    rdx
  406c7b:	movsx  r8,BYTE PTR [r13+0x16]
  406c80:	shl    r8,0x8
  406c84:	movsx  rcx,BYTE PTR [r13+0x15]
  406c89:	shl    rcx,0x10
  406c8d:	or     rcx,r8
  406c90:	movsx  rsi,BYTE PTR [r13+0x14]
  406c95:	shl    rsi,0x18
  406c99:	or     rsi,rcx
  406c9c:	movsx  rdi,BYTE PTR [r13+0x13]
  406ca1:	shl    rdi,0x20
  406ca5:	or     rdi,rsi
  406ca8:	movsx  rbp,BYTE PTR [r13+0x12]
  406cad:	shl    rbp,0x28
  406cb1:	or     rbp,rdi
  406cb4:	movsx  rbx,BYTE PTR [r13+0x11]
  406cb9:	shl    rbx,0x30
  406cbd:	or     rbx,rbp
  406cc0:	movzx  ecx,BYTE PTR [r12]
  406cc5:	shl    rcx,0x38
  406cc9:	or     rcx,rbx
  406ccc:	shr    rcx,0x38
  406cd0:	cmp    rcx,0x61
  406cd4:	jne    40d1ba <main@@Base+0x886a>
  406cda:	cmp    rax,0x2
  406cde:	jl     40d1ba <main@@Base+0x886a>
  406ce4:	mov    rax,QWORD PTR [rsp+0x8]
  406ce9:	cmp    DWORD PTR [rax],0x0
  406cec:	mov    al,BYTE PTR [r13+0x11]
  406cf0:	je     408080 <main@@Base+0x3730>
  406cf6:	cmp    al,0x21
  406cf8:	jl     406d02 <main@@Base+0x23b2>
  406cfa:	cmp    al,0x3a
  406cfc:	jne    40d1ba <main@@Base+0x886a>
  406d02:	add    r13,0x11
  406d06:	mov    rax,QWORD PTR [rsp+0x8]
  406d0b:	mov    DWORD PTR [rax],0x0
  406d11:	jmp    40808c <main@@Base+0x373c>
  406d16:	mov    rdi,r14
  406d19:	mov    rdx,r15
  406d1c:	mov    ecx,0x4
  406d21:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406d26:	jmp    409320 <main@@Base+0x49d0>
  406d2b:	mov    rdi,r14
  406d2e:	mov    rsi,rax
  406d31:	mov    rdx,r15
  406d34:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406d39:	cmp    r13,rax
  406d3c:	je     409d41 <main@@Base+0x53f1>
  406d42:	mov    rdi,r14
  406d45:	mov    rsi,rax
  406d48:	mov    rdx,r15
  406d4b:	lea    rcx,[rsp+0x1c]
  406d50:	call   4049d0 <main@@Base+0x80>
  406d55:	mov    rbp,rax
  406d58:	cmp    DWORD PTR [rsp+0x1c],0x0
  406d5d:	je     40da65 <main@@Base+0x9115>
  406d63:	mov    rdi,QWORD PTR [r14]
  406d66:	mov    esi,0xc
  406d6b:	jmp    407d11 <main@@Base+0x33c1>
  406d70:	mov    rdi,r14
  406d73:	mov    rsi,rbx
  406d76:	mov    rdx,r15
  406d79:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406d7e:	mov    rbx,rax
  406d81:	cmp    r13,rbx
  406d84:	je     409d41 <main@@Base+0x53f1>
  406d8a:	mov    QWORD PTR [rsp+0x10],0x0
  406d93:	mov    DWORD PTR [rsp+0x20],0x0
  406d9b:	mov    BYTE PTR [rsp+0x4],0x0
  406da0:	cmp    rbx,r15
  406da3:	je     406de7 <main@@Base+0x2497>
  406da5:	mov    rdi,r14
  406da8:	mov    rsi,rbx
  406dab:	mov    rdx,r15
  406dae:	lea    rcx,[rsp+0x20]
  406db3:	lea    r8,[rsp+0x10]
  406db8:	call   41fec0 <flatcc_json_parser_integer@@Base>
  406dbd:	cmp    rax,rbx
  406dc0:	je     406def <main@@Base+0x249f>
  406dc2:	mov    r12,QWORD PTR [rsp+0x10]
  406dc7:	cmp    DWORD PTR [rsp+0x20],0x0
  406dcc:	je     406df7 <main@@Base+0x24a7>
  406dce:	cmp    r12,0x81
  406dd5:	jb     406e18 <main@@Base+0x24c8>
  406dd7:	mov    rdi,r14
  406dda:	mov    rsi,rax
  406ddd:	mov    rdx,r15
  406de0:	mov    ecx,0x8
  406de5:	jmp    406e0e <main@@Base+0x24be>
  406de7:	xor    r12d,r12d
  406dea:	mov    rax,r15
  406ded:	jmp    406e20 <main@@Base+0x24d0>
  406def:	xor    r12d,r12d
  406df2:	mov    rax,rbx
  406df5:	jmp    406e20 <main@@Base+0x24d0>
  406df7:	cmp    r12,0x80
  406dfe:	jb     406e1b <main@@Base+0x24cb>
  406e00:	mov    rdi,r14
  406e03:	mov    rsi,rax
  406e06:	mov    rdx,r15
  406e09:	mov    ecx,0x7
  406e0e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  406e13:	xor    r12d,r12d
  406e16:	jmp    406e20 <main@@Base+0x24d0>
  406e18:	neg    r12
  406e1b:	mov    BYTE PTR [rsp+0x4],r12b
  406e20:	mov    rbp,rax
  406e23:	cmp    rbx,rax
  406e26:	jne    406e5c <main@@Base+0x250c>
  406e28:	mov    rdi,r14
  406e2b:	mov    rsi,rbx
  406e2e:	mov    rdx,r15
  406e31:	lea    rcx,[rip+0x222a8]        # 4290e0 <filename@@Base+0x10>
  406e38:	lea    r8,[rsp+0x4]
  406e3d:	call   40eea0 <main@@Base+0xa550>
  406e42:	mov    rbp,rax
  406e45:	cmp    rax,rbx
  406e48:	je     40da65 <main@@Base+0x9115>
  406e4e:	cmp    rbp,r15
  406e51:	je     40da65 <main@@Base+0x9115>
  406e57:	mov    r12b,BYTE PTR [rsp+0x4]
  406e5c:	cmp    r12b,0x8
  406e60:	jne    406e6d <main@@Base+0x251d>
  406e62:	test   BYTE PTR [r14+0x10],0x2
  406e67:	je     40d1cb <main@@Base+0x887b>
  406e6d:	mov    rdi,QWORD PTR [r14]
  406e70:	mov    edx,0x1
  406e75:	mov    esi,0x6
  406e7a:	mov    ecx,0x1
  406e7f:	call   41c310 <flatcc_builder_table_add@@Base>
  406e84:	test   rax,rax
  406e87:	je     40da65 <main@@Base+0x9115>
  406e8d:	mov    BYTE PTR [rax],r12b
  406e90:	jmp    40d1cb <main@@Base+0x887b>
  406e95:	cmp    al,0x22
  406e97:	jne    40d1ba <main@@Base+0x886a>
  406e9d:	add    r13,0xb
  406ea1:	mov    rax,r15
  406ea4:	sub    rax,r13
  406ea7:	cmp    rax,0x2
  406eab:	jl     4073c8 <main@@Base+0x2a78>
  406eb1:	cmp    BYTE PTR [r13+0x0],0x20
  406eb6:	jg     4073d9 <main@@Base+0x2a89>
  406ebc:	jne    4073c8 <main@@Base+0x2a78>
  406ec2:	cmp    BYTE PTR [r13+0x1],0x20
  406ec7:	jle    4073c8 <main@@Base+0x2a78>
  406ecd:	inc    r13
  406ed0:	cmp    r13,r15
  406ed3:	jne    4073de <main@@Base+0x2a8e>
  406ed9:	jmp    407428 <main@@Base+0x2ad8>
  406ede:	cmp    al,0x22
  406ee0:	jne    40d1ba <main@@Base+0x886a>
  406ee6:	add    r13,0x13
  406eea:	mov    rax,r15
  406eed:	sub    rax,r13
  406ef0:	cmp    rax,0x2
  406ef4:	jl     40748f <main@@Base+0x2b3f>
  406efa:	cmp    BYTE PTR [r13+0x0],0x20
  406eff:	jg     4074a0 <main@@Base+0x2b50>
  406f05:	jne    40748f <main@@Base+0x2b3f>
  406f0b:	cmp    BYTE PTR [r13+0x1],0x20
  406f10:	jle    40748f <main@@Base+0x2b3f>
  406f16:	inc    r13
  406f19:	cmp    r13,r15
  406f1c:	jne    4074a9 <main@@Base+0x2b59>
  406f22:	jmp    4075bf <main@@Base+0x2c6f>
  406f27:	cmp    al,0x22
  406f29:	jne    40d1ba <main@@Base+0x886a>
  406f2f:	add    r13,0x18
  406f33:	mov    rax,r15
  406f36:	sub    rax,r13
  406f39:	cmp    rax,0x2
  406f3d:	jl     4074f7 <main@@Base+0x2ba7>
  406f43:	cmp    BYTE PTR [r13+0x0],0x20
  406f48:	jg     407508 <main@@Base+0x2bb8>
  406f4e:	jne    4074f7 <main@@Base+0x2ba7>
  406f54:	cmp    BYTE PTR [r13+0x1],0x20
  406f59:	jle    4074f7 <main@@Base+0x2ba7>
  406f5f:	inc    r13
  406f62:	cmp    r13,r15
  406f65:	jne    407511 <main@@Base+0x2bc1>
  406f6b:	jmp    4075d7 <main@@Base+0x2c87>
  406f70:	cmp    al,0x22
  406f72:	jne    40d1ba <main@@Base+0x886a>
  406f78:	add    r13,0x12
  406f7c:	mov    rax,r15
  406f7f:	sub    rax,r13
  406f82:	cmp    rax,0x2
  406f86:	jl     40755f <main@@Base+0x2c0f>
  406f8c:	cmp    BYTE PTR [r13+0x0],0x20
  406f91:	jg     407570 <main@@Base+0x2c20>
  406f97:	jne    40755f <main@@Base+0x2c0f>
  406f9d:	cmp    BYTE PTR [r13+0x1],0x20
  406fa2:	jle    40755f <main@@Base+0x2c0f>
  406fa8:	inc    r13
  406fab:	cmp    r13,r15
  406fae:	jne    407575 <main@@Base+0x2c25>
  406fb4:	jmp    4075ef <main@@Base+0x2c9f>
  406fb9:	mov    rdi,r14
  406fbc:	mov    rsi,rax
  406fbf:	mov    rdx,r15
  406fc2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  406fc7:	cmp    r13,rax
  406fca:	je     409d41 <main@@Base+0x53f1>
  406fd0:	mov    rdi,r14
  406fd3:	mov    rsi,rax
  406fd6:	mov    rdx,r15
  406fd9:	lea    rcx,[rsp+0x1c]
  406fde:	call   420390 <flatcc_json_parser_build_string@@Base>
  406fe3:	mov    rbp,rax
  406fe6:	cmp    DWORD PTR [rsp+0x1c],0x0
  406feb:	je     40da65 <main@@Base+0x9115>
  406ff1:	mov    rdi,QWORD PTR [r14]
  406ff4:	mov    esi,0x3
  406ff9:	jmp    407d11 <main@@Base+0x33c1>
  406ffe:	mov    rdi,r14
  407001:	mov    rsi,rbx
  407004:	mov    rdx,r15
  407007:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40700c:	mov    rbx,rax
  40700f:	cmp    r13,rbx
  407012:	je     409d41 <main@@Base+0x53f1>
  407018:	mov    rdi,QWORD PTR [r14]
  40701b:	mov    esi,0x1
  407020:	mov    ecx,0xffffffff
  407025:	mov    edx,0x1
  40702a:	call   41ab20 <flatcc_builder_start_vector@@Base>
  40702f:	test   eax,eax
  407031:	jne    404a01 <main@@Base+0xb1>
  407037:	cmp    rbx,r15
  40703a:	je     407067 <main@@Base+0x2717>
  40703c:	cmp    BYTE PTR [rbx],0x5b
  40703f:	jne    407067 <main@@Base+0x2717>
  407041:	lea    rax,[rbx+0x1]
  407045:	mov    rcx,r15
  407048:	sub    rcx,rax
  40704b:	cmp    rcx,0x2
  40704f:	jl     40709e <main@@Base+0x274e>
  407051:	cmp    BYTE PTR [rax],0x20
  407054:	jg     4070ac <main@@Base+0x275c>
  407056:	jne    40709e <main@@Base+0x274e>
  407058:	cmp    BYTE PTR [rbx+0x2],0x20
  40705c:	jle    40709e <main@@Base+0x274e>
  40705e:	add    rbx,0x2
  407062:	mov    rax,rbx
  407065:	jmp    4070ac <main@@Base+0x275c>
  407067:	mov    rdi,r14
  40706a:	mov    rsi,rbx
  40706d:	mov    rdx,r15
  407070:	mov    ecx,0x16
  407075:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40707a:	mov    rbp,rax
  40707d:	mov    rdi,QWORD PTR [r14]
  407080:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  407085:	mov    DWORD PTR [rsp+0x1c],eax
  407089:	test   eax,eax
  40708b:	je     40da65 <main@@Base+0x9115>
  407091:	mov    rdi,QWORD PTR [r14]
  407094:	mov    esi,0x1e
  407099:	jmp    407d11 <main@@Base+0x33c1>
  40709e:	mov    rdi,r14
  4070a1:	mov    rsi,rax
  4070a4:	mov    rdx,r15
  4070a7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4070ac:	mov    rbx,r15
  4070af:	cmp    rax,r15
  4070b2:	je     4070ec <main@@Base+0x279c>
  4070b4:	cmp    BYTE PTR [rax],0x5d
  4070b7:	jne    4070e9 <main@@Base+0x2799>
  4070b9:	lea    rbp,[rax+0x1]
  4070bd:	mov    rcx,r15
  4070c0:	sub    rcx,rbp
  4070c3:	cmp    rcx,0x2
  4070c7:	jl     409494 <main@@Base+0x4b44>
  4070cd:	cmp    BYTE PTR [rbp+0x0],0x20
  4070d1:	jg     40707d <main@@Base+0x272d>
  4070d3:	jne    409494 <main@@Base+0x4b44>
  4070d9:	cmp    BYTE PTR [rax+0x2],0x20
  4070dd:	jle    409494 <main@@Base+0x4b44>
  4070e3:	add    rax,0x2
  4070e7:	jmp    40707a <main@@Base+0x272a>
  4070e9:	mov    rbx,rax
  4070ec:	mov    BYTE PTR [rsp+0x4],0x0
  4070f1:	mov    rdi,QWORD PTR [r14]
  4070f4:	mov    esi,0x1
  4070f9:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  4070fe:	test   rax,rax
  407101:	je     404a01 <main@@Base+0xb1>
  407107:	mov    rbp,rax
  40710a:	mov    QWORD PTR [rsp+0x10],0x0
  407113:	mov    DWORD PTR [rsp+0x20],0x0
  40711b:	mov    BYTE PTR [rsp+0x4],0x0
  407120:	cmp    rbx,r15
  407123:	je     407159 <main@@Base+0x2809>
  407125:	mov    rdi,r14
  407128:	mov    rsi,rbx
  40712b:	mov    rdx,r15
  40712e:	lea    rcx,[rsp+0x20]
  407133:	lea    r8,[rsp+0x10]
  407138:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40713d:	cmp    rax,rbx
  407140:	je     407165 <main@@Base+0x2815>
  407142:	cmp    DWORD PTR [rsp+0x20],0x0
  407147:	je     407171 <main@@Base+0x2821>
  407149:	mov    rdi,r14
  40714c:	mov    rsi,rax
  40714f:	mov    rdx,r15
  407152:	mov    ecx,0x8
  407157:	jmp    407191 <main@@Base+0x2841>
  407159:	xor    ecx,ecx
  40715b:	mov    rax,r15
  40715e:	cmp    rbx,rax
  407161:	jne    4071ce <main@@Base+0x287e>
  407163:	jmp    40719d <main@@Base+0x284d>
  407165:	xor    ecx,ecx
  407167:	mov    rax,rbx
  40716a:	cmp    rbx,rax
  40716d:	jne    4071ce <main@@Base+0x287e>
  40716f:	jmp    40719d <main@@Base+0x284d>
  407171:	mov    rcx,QWORD PTR [rsp+0x10]
  407176:	cmp    rcx,0x100
  40717d:	jb     407283 <main@@Base+0x2933>
  407183:	mov    rdi,r14
  407186:	mov    rsi,rax
  407189:	mov    rdx,r15
  40718c:	mov    ecx,0x7
  407191:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407196:	xor    ecx,ecx
  407198:	cmp    rbx,rax
  40719b:	jne    4071ce <main@@Base+0x287e>
  40719d:	mov    rdi,r14
  4071a0:	mov    rsi,rbx
  4071a3:	mov    rdx,r15
  4071a6:	lea    rcx,[rip+0x21f53]        # 429100 <filename@@Base+0x30>
  4071ad:	lea    r8,[rsp+0x4]
  4071b2:	call   40f0b0 <main@@Base+0xa760>
  4071b7:	cmp    rax,rbx
  4071ba:	je     40da93 <main@@Base+0x9143>
  4071c0:	cmp    rax,r15
  4071c3:	je     40da93 <main@@Base+0x9143>
  4071c9:	movzx  ecx,BYTE PTR [rsp+0x4]
  4071ce:	mov    BYTE PTR [rbp+0x0],cl
  4071d1:	mov    rcx,r15
  4071d4:	sub    rcx,rax
  4071d7:	cmp    rcx,0x2
  4071db:	jl     4071f7 <main@@Base+0x28a7>
  4071dd:	cmp    BYTE PTR [rax],0x20
  4071e0:	jg     407205 <main@@Base+0x28b5>
  4071e2:	jne    4071f7 <main@@Base+0x28a7>
  4071e4:	cmp    BYTE PTR [rax+0x1],0x20
  4071e8:	jle    4071f7 <main@@Base+0x28a7>
  4071ea:	inc    rax
  4071ed:	cmp    rax,r15
  4071f0:	jne    40720e <main@@Base+0x28be>
  4071f2:	jmp    409429 <main@@Base+0x4ad9>
  4071f7:	mov    rdi,r14
  4071fa:	mov    rsi,rax
  4071fd:	mov    rdx,r15
  407200:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407205:	cmp    rax,r15
  407208:	je     409429 <main@@Base+0x4ad9>
  40720e:	movzx  ecx,BYTE PTR [rax]
  407211:	cmp    cl,0x2c
  407214:	jne    409442 <main@@Base+0x4af2>
  40721a:	lea    rbx,[rax+0x1]
  40721e:	mov    rcx,r15
  407221:	sub    rcx,rbx
  407224:	cmp    rcx,0x2
  407228:	jl     40723d <main@@Base+0x28ed>
  40722a:	cmp    BYTE PTR [rbx],0x20
  40722d:	jg     40724e <main@@Base+0x28fe>
  40722f:	jne    40723d <main@@Base+0x28ed>
  407231:	cmp    BYTE PTR [rax+0x2],0x20
  407235:	jle    40723d <main@@Base+0x28ed>
  407237:	add    rax,0x2
  40723b:	jmp    40724b <main@@Base+0x28fb>
  40723d:	mov    rdi,r14
  407240:	mov    rsi,rbx
  407243:	mov    rdx,r15
  407246:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40724b:	mov    rbx,rax
  40724e:	cmp    rbx,r15
  407251:	je     409453 <main@@Base+0x4b03>
  407257:	cmp    BYTE PTR [rbx],0x5d
  40725a:	je     409466 <main@@Base+0x4b16>
  407260:	mov    BYTE PTR [rsp+0x4],0x0
  407265:	mov    rdi,QWORD PTR [r14]
  407268:	mov    esi,0x1
  40726d:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  407272:	mov    rbp,rax
  407275:	test   rax,rax
  407278:	jne    40710a <main@@Base+0x27ba>
  40727e:	jmp    404a01 <main@@Base+0xb1>
  407283:	mov    BYTE PTR [rsp+0x4],cl
  407287:	cmp    rbx,rax
  40728a:	jne    4071ce <main@@Base+0x287e>
  407290:	jmp    40719d <main@@Base+0x284d>
  407295:	mov    rdi,r14
  407298:	mov    rsi,rax
  40729b:	mov    rdx,r15
  40729e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4072a3:	movabs rdx,0x7465737400000000
  4072ad:	cmp    r13,rax
  4072b0:	je     4072e5 <main@@Base+0x2995>
  4072b2:	mov    r9,QWORD PTR [rsp+0x40]
  4072b7:	sub    rsp,0x8
  4072bb:	mov    rdi,r14
  4072be:	mov    rsi,rax
  4072c1:	mov    rdx,r15
  4072c4:	mov    ecx,0x0
  4072c9:	mov    r8d,0x8
  4072cf:	lea    rax,[rip+0x88ea]        # 40fbc0 <main@@Base+0xb270>
  4072d6:	push   rax
  4072d7:	call   420720 <flatcc_json_parser_union@@Base>
  4072dc:	add    rsp,0x10
  4072e0:	jmp    40d1c8 <main@@Base+0x8878>
  4072e5:	lea    rax,[rdx+0x35000000]
  4072ec:	cmp    rbx,rax
  4072ef:	jne    407bee <main@@Base+0x329e>
  4072f5:	mov    rbx,r13
  4072f8:	cmp    r12,0x6
  4072fc:	jl     407b7f <main@@Base+0x322f>
  407302:	mov    rax,QWORD PTR [rsp+0x8]
  407307:	cmp    DWORD PTR [rax],0x0
  40730a:	mov    al,BYTE PTR [r13+0x5]
  40730e:	je     407330 <main@@Base+0x29e0>
  407310:	cmp    al,0x21
  407312:	jl     40731f <main@@Base+0x29cf>
  407314:	mov    rbx,r13
  407317:	cmp    al,0x3a
  407319:	jne    407b7f <main@@Base+0x322f>
  40731f:	lea    rsi,[r13+0x5]
  407323:	mov    rax,QWORD PTR [rsp+0x8]
  407328:	mov    DWORD PTR [rax],0x0
  40732e:	jmp    40733f <main@@Base+0x29ef>
  407330:	mov    rbx,r13
  407333:	cmp    al,0x22
  407335:	jne    407b7f <main@@Base+0x322f>
  40733b:	lea    rsi,[r13+0x6]
  40733f:	mov    rax,r15
  407342:	sub    rax,rsi
  407345:	cmp    rax,0x2
  407349:	jl     407362 <main@@Base+0x2a12>
  40734b:	cmp    BYTE PTR [rsi],0x20
  40734e:	jg     407370 <main@@Base+0x2a20>
  407350:	jne    407362 <main@@Base+0x2a12>
  407352:	cmp    BYTE PTR [rsi+0x1],0x20
  407356:	jle    407362 <main@@Base+0x2a12>
  407358:	inc    rsi
  40735b:	cmp    rsi,r15
  40735e:	jne    407375 <main@@Base+0x2a25>
  407360:	jmp    4073b3 <main@@Base+0x2a63>
  407362:	mov    rdi,r14
  407365:	mov    rdx,r15
  407368:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40736d:	mov    rsi,rax
  407370:	cmp    rsi,r15
  407373:	je     4073b3 <main@@Base+0x2a63>
  407375:	cmp    BYTE PTR [rsi],0x3a
  407378:	jne    4073b3 <main@@Base+0x2a63>
  40737a:	lea    rbx,[rsi+0x1]
  40737e:	mov    rax,r15
  407381:	sub    rax,rbx
  407384:	cmp    rax,0x2
  407388:	jl     407b64 <main@@Base+0x3214>
  40738e:	cmp    BYTE PTR [rbx],0x20
  407391:	jg     407b75 <main@@Base+0x3225>
  407397:	jne    407b64 <main@@Base+0x3214>
  40739d:	cmp    BYTE PTR [rsi+0x2],0x20
  4073a1:	jle    407b64 <main@@Base+0x3214>
  4073a7:	add    rsi,0x2
  4073ab:	mov    rbx,rsi
  4073ae:	jmp    407b75 <main@@Base+0x3225>
  4073b3:	mov    rdi,r14
  4073b6:	mov    rdx,r15
  4073b9:	mov    ecx,0x4
  4073be:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4073c3:	jmp    407b72 <main@@Base+0x3222>
  4073c8:	mov    rdi,r14
  4073cb:	mov    rsi,r13
  4073ce:	mov    rdx,r15
  4073d1:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4073d6:	mov    r13,rax
  4073d9:	cmp    r13,r15
  4073dc:	je     407428 <main@@Base+0x2ad8>
  4073de:	cmp    BYTE PTR [r13+0x0],0x3a
  4073e3:	jne    407428 <main@@Base+0x2ad8>
  4073e5:	lea    rbx,[r13+0x1]
  4073e9:	mov    rax,r15
  4073ec:	sub    rax,rbx
  4073ef:	cmp    rax,0x2
  4073f3:	jl     40983a <main@@Base+0x4eea>
  4073f9:	cmp    BYTE PTR [rbx],0x20
  4073fc:	jg     40984b <main@@Base+0x4efb>
  407402:	jne    40983a <main@@Base+0x4eea>
  407408:	cmp    BYTE PTR [r13+0x2],0x20
  40740d:	jle    40983a <main@@Base+0x4eea>
  407413:	add    r13,0x2
  407417:	mov    rbx,r13
  40741a:	cmp    r12,rbx
  40741d:	jne    409854 <main@@Base+0x4f04>
  407423:	jmp    40d1ba <main@@Base+0x886a>
  407428:	mov    rdi,r14
  40742b:	mov    rsi,r13
  40742e:	mov    rdx,r15
  407431:	mov    ecx,0x4
  407436:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40743b:	jmp    409848 <main@@Base+0x4ef8>
  407440:	mov    rbp,r15
  407443:	jmp    406783 <main@@Base+0x1e33>
  407448:	cmp    cl,0x5d
  40744b:	jne    4092ff <main@@Base+0x49af>
  407451:	lea    rbp,[rax+0x1]
  407455:	mov    rcx,r15
  407458:	sub    rcx,rbp
  40745b:	cmp    rcx,0x2
  40745f:	jl     407471 <main@@Base+0x2b21>
  407461:	cmp    BYTE PTR [rbp+0x0],0x20
  407465:	jg     406783 <main@@Base+0x1e33>
  40746b:	je     4067df <main@@Base+0x1e8f>
  407471:	mov    rdi,r14
  407474:	mov    rsi,rbp
  407477:	mov    rdx,r15
  40747a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40747f:	jmp    406780 <main@@Base+0x1e30>
  407484:	mov    rdi,r14
  407487:	mov    rsi,r15
  40748a:	jmp    409305 <main@@Base+0x49b5>
  40748f:	mov    rdi,r14
  407492:	mov    rsi,r13
  407495:	mov    rdx,r15
  407498:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40749d:	mov    r13,rax
  4074a0:	cmp    r13,r15
  4074a3:	je     4075bf <main@@Base+0x2c6f>
  4074a9:	cmp    BYTE PTR [r13+0x0],0x3a
  4074ae:	jne    4075bf <main@@Base+0x2c6f>
  4074b4:	lea    rbx,[r13+0x1]
  4074b8:	mov    rax,r15
  4074bb:	sub    rax,rbx
  4074be:	cmp    rax,0x2
  4074c2:	jl     409971 <main@@Base+0x5021>
  4074c8:	cmp    BYTE PTR [rbx],0x20
  4074cb:	jg     409982 <main@@Base+0x5032>
  4074d1:	jne    409971 <main@@Base+0x5021>
  4074d7:	cmp    BYTE PTR [r13+0x2],0x20
  4074dc:	jle    409971 <main@@Base+0x5021>
  4074e2:	add    r13,0x2
  4074e6:	mov    rbx,r13
  4074e9:	cmp    r12,rbx
  4074ec:	jne    40998b <main@@Base+0x503b>
  4074f2:	jmp    40d1ba <main@@Base+0x886a>
  4074f7:	mov    rdi,r14
  4074fa:	mov    rsi,r13
  4074fd:	mov    rdx,r15
  407500:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407505:	mov    r13,rax
  407508:	cmp    r13,r15
  40750b:	je     4075d7 <main@@Base+0x2c87>
  407511:	cmp    BYTE PTR [r13+0x0],0x3a
  407516:	jne    4075d7 <main@@Base+0x2c87>
  40751c:	lea    rbx,[r13+0x1]
  407520:	mov    rax,r15
  407523:	sub    rax,rbx
  407526:	cmp    rax,0x2
  40752a:	jl     409a15 <main@@Base+0x50c5>
  407530:	cmp    BYTE PTR [rbx],0x20
  407533:	jg     409a26 <main@@Base+0x50d6>
  407539:	jne    409a15 <main@@Base+0x50c5>
  40753f:	cmp    BYTE PTR [r13+0x2],0x20
  407544:	jle    409a15 <main@@Base+0x50c5>
  40754a:	add    r13,0x2
  40754e:	mov    rbx,r13
  407551:	cmp    r12,rbx
  407554:	jne    409a2f <main@@Base+0x50df>
  40755a:	jmp    40d1ba <main@@Base+0x886a>
  40755f:	mov    rdi,r14
  407562:	mov    rsi,r13
  407565:	mov    rdx,r15
  407568:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40756d:	mov    r13,rax
  407570:	cmp    r13,r15
  407573:	je     4075ef <main@@Base+0x2c9f>
  407575:	cmp    BYTE PTR [r13+0x0],0x3a
  40757a:	jne    4075ef <main@@Base+0x2c9f>
  40757c:	lea    rbx,[r13+0x1]
  407580:	mov    rax,r15
  407583:	sub    rax,rbx
  407586:	cmp    rax,0x2
  40758a:	jl     409ac8 <main@@Base+0x5178>
  407590:	cmp    BYTE PTR [rbx],0x20
  407593:	jg     409ad9 <main@@Base+0x5189>
  407599:	jne    409ac8 <main@@Base+0x5178>
  40759f:	cmp    BYTE PTR [r13+0x2],0x20
  4075a4:	jle    409ac8 <main@@Base+0x5178>
  4075aa:	add    r13,0x2
  4075ae:	mov    rbx,r13
  4075b1:	cmp    r12,rbx
  4075b4:	jne    409ae2 <main@@Base+0x5192>
  4075ba:	jmp    40d1ba <main@@Base+0x886a>
  4075bf:	mov    rdi,r14
  4075c2:	mov    rsi,r13
  4075c5:	mov    rdx,r15
  4075c8:	mov    ecx,0x4
  4075cd:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4075d2:	jmp    40997f <main@@Base+0x502f>
  4075d7:	mov    rdi,r14
  4075da:	mov    rsi,r13
  4075dd:	mov    rdx,r15
  4075e0:	mov    ecx,0x4
  4075e5:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4075ea:	jmp    409a23 <main@@Base+0x50d3>
  4075ef:	mov    rdi,r14
  4075f2:	mov    rsi,r13
  4075f5:	mov    rdx,r15
  4075f8:	mov    ecx,0x4
  4075fd:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407602:	jmp    409ad6 <main@@Base+0x5186>
  407607:	mov    rbx,r13
  40760a:	cmp    al,0x22
  40760c:	jne    409b88 <main@@Base+0x5238>
  407612:	lea    rsi,[r13+0x5]
  407616:	mov    rax,r15
  407619:	sub    rax,rsi
  40761c:	cmp    rax,0x2
  407620:	jl     407771 <main@@Base+0x2e21>
  407626:	cmp    BYTE PTR [rsi],0x20
  407629:	jg     40777f <main@@Base+0x2e2f>
  40762f:	jne    407771 <main@@Base+0x2e21>
  407635:	cmp    BYTE PTR [rsi+0x1],0x20
  407639:	jle    407771 <main@@Base+0x2e21>
  40763f:	inc    rsi
  407642:	cmp    rsi,r15
  407645:	jne    407788 <main@@Base+0x2e38>
  40764b:	jmp    40782d <main@@Base+0x2edd>
  407650:	mov    rbx,r13
  407653:	cmp    al,0x22
  407655:	jne    409cb7 <main@@Base+0x5367>
  40765b:	lea    rsi,[r13+0x6]
  40765f:	mov    rax,r15
  407662:	sub    rax,rsi
  407665:	cmp    rax,0x2
  407669:	jl     4077d3 <main@@Base+0x2e83>
  40766f:	cmp    BYTE PTR [rsi],0x20
  407672:	jg     4077e1 <main@@Base+0x2e91>
  407678:	jne    4077d3 <main@@Base+0x2e83>
  40767e:	cmp    BYTE PTR [rsi+0x1],0x20
  407682:	jle    4077d3 <main@@Base+0x2e83>
  407688:	inc    rsi
  40768b:	cmp    rsi,r15
  40768e:	jne    4077e6 <main@@Base+0x2e96>
  407694:	jmp    407842 <main@@Base+0x2ef2>
  407699:	cmp    al,0x22
  40769b:	jne    4078fd <main@@Base+0x2fad>
  4076a1:	lea    rsi,[r13+0x11]
  4076a5:	mov    rax,r15
  4076a8:	sub    rax,rsi
  4076ab:	cmp    rax,0x2
  4076af:	jl     4078a0 <main@@Base+0x2f50>
  4076b5:	cmp    BYTE PTR [rsi],0x20
  4076b8:	jg     4078ae <main@@Base+0x2f5e>
  4076be:	jne    4078a0 <main@@Base+0x2f50>
  4076c4:	cmp    BYTE PTR [rsi+0x1],0x20
  4076c8:	jle    4078a0 <main@@Base+0x2f50>
  4076ce:	inc    rsi
  4076d1:	cmp    rsi,r15
  4076d4:	jne    4078b7 <main@@Base+0x2f67>
  4076da:	jmp    407aa6 <main@@Base+0x3156>
  4076df:	cmp    al,0x22
  4076e1:	jne    40d1ba <main@@Base+0x886a>
  4076e7:	add    r13,0xa
  4076eb:	mov    rax,r15
  4076ee:	sub    rax,r13
  4076f1:	cmp    rax,0x2
  4076f5:	jl     4079de <main@@Base+0x308e>
  4076fb:	cmp    BYTE PTR [r13+0x0],0x20
  407700:	jg     4079ef <main@@Base+0x309f>
  407706:	jne    4079de <main@@Base+0x308e>
  40770c:	cmp    BYTE PTR [r13+0x1],0x20
  407711:	jle    4079de <main@@Base+0x308e>
  407717:	inc    r13
  40771a:	cmp    r13,r15
  40771d:	jne    4079f8 <main@@Base+0x30a8>
  407723:	jmp    407abb <main@@Base+0x316b>
  407728:	cmp    al,0x22
  40772a:	jne    40d1ba <main@@Base+0x886a>
  407730:	add    r13,0xa
  407734:	mov    rax,r15
  407737:	sub    rax,r13
  40773a:	cmp    rax,0x2
  40773e:	jl     407a46 <main@@Base+0x30f6>
  407744:	cmp    BYTE PTR [r13+0x0],0x20
  407749:	jg     407a57 <main@@Base+0x3107>
  40774f:	jne    407a46 <main@@Base+0x30f6>
  407755:	cmp    BYTE PTR [r13+0x1],0x20
  40775a:	jle    407a46 <main@@Base+0x30f6>
  407760:	inc    r13
  407763:	cmp    r13,r15
  407766:	jne    407a5c <main@@Base+0x310c>
  40776c:	jmp    407ad3 <main@@Base+0x3183>
  407771:	mov    rdi,r14
  407774:	mov    rdx,r15
  407777:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40777c:	mov    rsi,rax
  40777f:	cmp    rsi,r15
  407782:	je     40782d <main@@Base+0x2edd>
  407788:	cmp    BYTE PTR [rsi],0x3a
  40778b:	jne    40782d <main@@Base+0x2edd>
  407791:	lea    rbx,[rsi+0x1]
  407795:	mov    rax,r15
  407798:	sub    rax,rbx
  40779b:	cmp    rax,0x2
  40779f:	jl     409b77 <main@@Base+0x5227>
  4077a5:	cmp    BYTE PTR [rbx],0x20
  4077a8:	jg     409b88 <main@@Base+0x5238>
  4077ae:	jne    409b77 <main@@Base+0x5227>
  4077b4:	cmp    BYTE PTR [rsi+0x2],0x20
  4077b8:	jle    409b77 <main@@Base+0x5227>
  4077be:	add    rsi,0x2
  4077c2:	mov    rbx,rsi
  4077c5:	cmp    r13,rbx
  4077c8:	jne    409b91 <main@@Base+0x5241>
  4077ce:	jmp    409d41 <main@@Base+0x53f1>
  4077d3:	mov    rdi,r14
  4077d6:	mov    rdx,r15
  4077d9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4077de:	mov    rsi,rax
  4077e1:	cmp    rsi,r15
  4077e4:	je     407842 <main@@Base+0x2ef2>
  4077e6:	cmp    BYTE PTR [rsi],0x3a
  4077e9:	jne    407842 <main@@Base+0x2ef2>
  4077eb:	lea    rbx,[rsi+0x1]
  4077ef:	mov    rax,r15
  4077f2:	sub    rax,rbx
  4077f5:	cmp    rax,0x2
  4077f9:	jl     409ca6 <main@@Base+0x5356>
  4077ff:	cmp    BYTE PTR [rbx],0x20
  407802:	jg     409cb7 <main@@Base+0x5367>
  407808:	jne    409ca6 <main@@Base+0x5356>
  40780e:	cmp    BYTE PTR [rsi+0x2],0x20
  407812:	jle    409ca6 <main@@Base+0x5356>
  407818:	add    rsi,0x2
  40781c:	mov    rbx,rsi
  40781f:	cmp    r13,rbx
  407822:	jne    409cc0 <main@@Base+0x5370>
  407828:	jmp    409d41 <main@@Base+0x53f1>
  40782d:	mov    rdi,r14
  407830:	mov    rdx,r15
  407833:	mov    ecx,0x4
  407838:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40783d:	jmp    409b85 <main@@Base+0x5235>
  407842:	mov    rdi,r14
  407845:	mov    rdx,r15
  407848:	mov    ecx,0x4
  40784d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407852:	jmp    409cb4 <main@@Base+0x5364>
  407857:	cmp    al,0x22
  407859:	jne    40d1ba <main@@Base+0x886a>
  40785f:	add    r13,0x16
  407863:	mov    rax,r15
  407866:	sub    rax,r13
  407869:	cmp    rax,0x2
  40786d:	jl     407aeb <main@@Base+0x319b>
  407873:	cmp    BYTE PTR [r13+0x0],0x20
  407878:	jg     407afc <main@@Base+0x31ac>
  40787e:	jne    407aeb <main@@Base+0x319b>
  407884:	cmp    BYTE PTR [r13+0x1],0x20
  407889:	jle    407aeb <main@@Base+0x319b>
  40788f:	inc    r13
  407892:	cmp    r13,r15
  407895:	jne    407b01 <main@@Base+0x31b1>
  40789b:	jmp    407b4c <main@@Base+0x31fc>
  4078a0:	mov    rdi,r14
  4078a3:	mov    rdx,r15
  4078a6:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4078ab:	mov    rsi,rax
  4078ae:	cmp    rsi,r15
  4078b1:	je     407aa6 <main@@Base+0x3156>
  4078b7:	cmp    BYTE PTR [rsi],0x3a
  4078ba:	jne    407aa6 <main@@Base+0x3156>
  4078c0:	lea    rcx,[rsi+0x1]
  4078c4:	mov    rax,r15
  4078c7:	sub    rax,rcx
  4078ca:	cmp    rax,0x2
  4078ce:	jl     409d4c <main@@Base+0x53fc>
  4078d4:	cmp    BYTE PTR [rcx],0x20
  4078d7:	jg     409d5d <main@@Base+0x540d>
  4078dd:	jne    409d4c <main@@Base+0x53fc>
  4078e3:	cmp    BYTE PTR [rsi+0x2],0x20
  4078e7:	jle    409d4c <main@@Base+0x53fc>
  4078ed:	add    rsi,0x2
  4078f1:	mov    rcx,rsi
  4078f4:	cmp    r12,rcx
  4078f7:	jne    409d66 <main@@Base+0x5416>
  4078fd:	lea    r12,[r13+0x10]
  407901:	mov    rax,r15
  407904:	sub    rax,r12
  407907:	cmp    rax,0x8
  40790b:	jb     407915 <main@@Base+0x2fc5>
  40790d:	movbe  rcx,QWORD PTR [r12]
  407913:	jmp    407994 <main@@Base+0x3044>
  407915:	lea    rcx,[rax-0x1]
  407919:	cmp    rcx,0x6
  40791d:	ja     40d1ba <main@@Base+0x886a>
  407923:	lea    rdx,[rip+0x1a7de]        # 422108 <_IO_stdin_used@@Base+0x108>
  40792a:	mov    rsi,rdx
  40792d:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  407931:	add    rdx,rsi
  407934:	xor    r8d,r8d
  407937:	xor    ecx,ecx
  407939:	xor    esi,esi
  40793b:	xor    edi,edi
  40793d:	xor    ebp,ebp
  40793f:	xor    ebx,ebx
  407941:	jmp    rdx
  407943:	movsx  r8,BYTE PTR [r13+0x16]
  407948:	shl    r8,0x8
  40794c:	movsx  rcx,BYTE PTR [r13+0x15]
  407951:	shl    rcx,0x10
  407955:	or     rcx,r8
  407958:	movsx  rsi,BYTE PTR [r13+0x14]
  40795d:	shl    rsi,0x18
  407961:	or     rsi,rcx
  407964:	movsx  rdi,BYTE PTR [r13+0x13]
  407969:	shl    rdi,0x20
  40796d:	or     rdi,rsi
  407970:	movsx  rbp,BYTE PTR [r13+0x12]
  407975:	shl    rbp,0x28
  407979:	or     rbp,rdi
  40797c:	movsx  rbx,BYTE PTR [r13+0x11]
  407981:	shl    rbx,0x30
  407985:	or     rbx,rbp
  407988:	movzx  ecx,BYTE PTR [r12]
  40798d:	shl    rcx,0x38
  407991:	or     rcx,rbx
  407994:	shr    rcx,0x38
  407998:	cmp    rcx,0x61
  40799c:	jne    40d1ba <main@@Base+0x886a>
  4079a2:	cmp    rax,0x2
  4079a6:	jl     40d1ba <main@@Base+0x886a>
  4079ac:	mov    rax,QWORD PTR [rsp+0x8]
  4079b1:	cmp    DWORD PTR [rax],0x0
  4079b4:	mov    al,BYTE PTR [r13+0x11]
  4079b8:	je     4097de <main@@Base+0x4e8e>
  4079be:	cmp    al,0x21
  4079c0:	jl     4079ca <main@@Base+0x307a>
  4079c2:	cmp    al,0x3a
  4079c4:	jne    40d1ba <main@@Base+0x886a>
  4079ca:	add    r13,0x11
  4079ce:	mov    rax,QWORD PTR [rsp+0x8]
  4079d3:	mov    DWORD PTR [rax],0x0
  4079d9:	jmp    4097ea <main@@Base+0x4e9a>
  4079de:	mov    rdi,r14
  4079e1:	mov    rsi,r13
  4079e4:	mov    rdx,r15
  4079e7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4079ec:	mov    r13,rax
  4079ef:	cmp    r13,r15
  4079f2:	je     407abb <main@@Base+0x316b>
  4079f8:	cmp    BYTE PTR [r13+0x0],0x3a
  4079fd:	jne    407abb <main@@Base+0x316b>
  407a03:	lea    rbx,[r13+0x1]
  407a07:	mov    rax,r15
  407a0a:	sub    rax,rbx
  407a0d:	cmp    rax,0x2
  407a11:	jl     409df6 <main@@Base+0x54a6>
  407a17:	cmp    BYTE PTR [rbx],0x20
  407a1a:	jg     409e07 <main@@Base+0x54b7>
  407a20:	jne    409df6 <main@@Base+0x54a6>
  407a26:	cmp    BYTE PTR [r13+0x2],0x20
  407a2b:	jle    409df6 <main@@Base+0x54a6>
  407a31:	add    r13,0x2
  407a35:	mov    rbx,r13
  407a38:	cmp    r12,rbx
  407a3b:	jne    409e10 <main@@Base+0x54c0>
  407a41:	jmp    40d1ba <main@@Base+0x886a>
  407a46:	mov    rdi,r14
  407a49:	mov    rsi,r13
  407a4c:	mov    rdx,r15
  407a4f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407a54:	mov    r13,rax
  407a57:	cmp    r13,r15
  407a5a:	je     407ad3 <main@@Base+0x3183>
  407a5c:	cmp    BYTE PTR [r13+0x0],0x3a
  407a61:	jne    407ad3 <main@@Base+0x3183>
  407a63:	lea    rbx,[r13+0x1]
  407a67:	mov    rax,r15
  407a6a:	sub    rax,rbx
  407a6d:	cmp    rax,0x2
  407a71:	jl     409e78 <main@@Base+0x5528>
  407a77:	cmp    BYTE PTR [rbx],0x20
  407a7a:	jg     409e89 <main@@Base+0x5539>
  407a80:	jne    409e78 <main@@Base+0x5528>
  407a86:	cmp    BYTE PTR [r13+0x2],0x20
  407a8b:	jle    409e78 <main@@Base+0x5528>
  407a91:	add    r13,0x2
  407a95:	mov    rbx,r13
  407a98:	cmp    r12,rbx
  407a9b:	jne    409e92 <main@@Base+0x5542>
  407aa1:	jmp    40d1ba <main@@Base+0x886a>
  407aa6:	mov    rdi,r14
  407aa9:	mov    rdx,r15
  407aac:	mov    ecx,0x4
  407ab1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407ab6:	jmp    409d5a <main@@Base+0x540a>
  407abb:	mov    rdi,r14
  407abe:	mov    rsi,r13
  407ac1:	mov    rdx,r15
  407ac4:	mov    ecx,0x4
  407ac9:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407ace:	jmp    409e04 <main@@Base+0x54b4>
  407ad3:	mov    rdi,r14
  407ad6:	mov    rsi,r13
  407ad9:	mov    rdx,r15
  407adc:	mov    ecx,0x4
  407ae1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407ae6:	jmp    409e86 <main@@Base+0x5536>
  407aeb:	mov    rdi,r14
  407aee:	mov    rsi,r13
  407af1:	mov    rdx,r15
  407af4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407af9:	mov    r13,rax
  407afc:	cmp    r13,r15
  407aff:	je     407b4c <main@@Base+0x31fc>
  407b01:	cmp    BYTE PTR [r13+0x0],0x3a
  407b06:	jne    407b4c <main@@Base+0x31fc>
  407b08:	lea    rbp,[r13+0x1]
  407b0c:	mov    rax,r15
  407b0f:	sub    rax,rbp
  407b12:	cmp    rax,0x2
  407b16:	jl     409f80 <main@@Base+0x5630>
  407b1c:	cmp    BYTE PTR [rbp+0x0],0x20
  407b20:	jg     409f91 <main@@Base+0x5641>
  407b26:	jne    409f80 <main@@Base+0x5630>
  407b2c:	cmp    BYTE PTR [r13+0x2],0x20
  407b31:	jle    409f80 <main@@Base+0x5630>
  407b37:	add    r13,0x2
  407b3b:	mov    rbp,r13
  407b3e:	cmp    r12,rbp
  407b41:	jne    409f9a <main@@Base+0x564a>
  407b47:	jmp    40d1ba <main@@Base+0x886a>
  407b4c:	mov    rdi,r14
  407b4f:	mov    rsi,r13
  407b52:	mov    rdx,r15
  407b55:	mov    ecx,0x4
  407b5a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407b5f:	jmp    409f8e <main@@Base+0x563e>
  407b64:	mov    rdi,r14
  407b67:	mov    rsi,rbx
  407b6a:	mov    rdx,r15
  407b6d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407b72:	mov    rbx,rax
  407b75:	movabs rdx,0x7465737400000000
  407b7f:	cmp    r13,rbx
  407b82:	je     407bee <main@@Base+0x329e>
  407b84:	mov    rdi,QWORD PTR [r14]
  407b87:	mov    esi,0x4
  407b8c:	mov    ecx,0x3fffffff
  407b91:	mov    edx,0x2
  407b96:	call   41ab20 <flatcc_builder_start_vector@@Base>
  407b9b:	test   eax,eax
  407b9d:	jne    404a01 <main@@Base+0xb1>
  407ba3:	cmp    rbx,r15
  407ba6:	je     407cdf <main@@Base+0x338f>
  407bac:	cmp    BYTE PTR [rbx],0x5b
  407baf:	jne    407cdf <main@@Base+0x338f>
  407bb5:	lea    rax,[rbx+0x1]
  407bb9:	mov    rcx,r15
  407bbc:	sub    rcx,rax
  407bbf:	cmp    rcx,0x2
  407bc3:	jl     407d2a <main@@Base+0x33da>
  407bc9:	cmp    BYTE PTR [rax],0x20
  407bcc:	jg     407d38 <main@@Base+0x33e8>
  407bd2:	jne    407d2a <main@@Base+0x33da>
  407bd8:	cmp    BYTE PTR [rbx+0x2],0x20
  407bdc:	jle    407d2a <main@@Base+0x33da>
  407be2:	add    rbx,0x2
  407be6:	mov    rax,rbx
  407be9:	jmp    407d38 <main@@Base+0x33e8>
  407bee:	lea    rax,[rdx+0x5f747970]
  407bf5:	cmp    rbp,rax
  407bf8:	jne    409d41 <main@@Base+0x53f1>
  407bfe:	lea    r12,[r13+0x8]
  407c02:	mov    rax,r15
  407c05:	sub    rax,r12
  407c08:	cmp    rax,0x8
  407c0c:	jb     407c16 <main@@Base+0x32c6>
  407c0e:	movbe  rcx,QWORD PTR [r12]
  407c14:	jmp    407c95 <main@@Base+0x3345>
  407c16:	lea    rcx,[rax-0x1]
  407c1a:	cmp    rcx,0x6
  407c1e:	ja     40d1ba <main@@Base+0x886a>
  407c24:	lea    rdx,[rip+0x1a611]        # 42223c <_IO_stdin_used@@Base+0x23c>
  407c2b:	mov    rsi,rdx
  407c2e:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  407c32:	add    rdx,rsi
  407c35:	xor    r8d,r8d
  407c38:	xor    ecx,ecx
  407c3a:	xor    esi,esi
  407c3c:	xor    edi,edi
  407c3e:	xor    ebp,ebp
  407c40:	xor    ebx,ebx
  407c42:	jmp    rdx
  407c44:	movsx  r8,BYTE PTR [r13+0xe]
  407c49:	shl    r8,0x8
  407c4d:	movsx  rcx,BYTE PTR [r13+0xd]
  407c52:	shl    rcx,0x10
  407c56:	or     rcx,r8
  407c59:	movsx  rsi,BYTE PTR [r13+0xc]
  407c5e:	shl    rsi,0x18
  407c62:	or     rsi,rcx
  407c65:	movsx  rdi,BYTE PTR [r13+0xb]
  407c6a:	shl    rdi,0x20
  407c6e:	or     rdi,rsi
  407c71:	movsx  rbp,BYTE PTR [r13+0xa]
  407c76:	shl    rbp,0x28
  407c7a:	or     rbp,rdi
  407c7d:	movsx  rbx,BYTE PTR [r13+0x9]
  407c82:	shl    rbx,0x30
  407c86:	or     rbx,rbp
  407c89:	movzx  ecx,BYTE PTR [r12]
  407c8e:	shl    rcx,0x38
  407c92:	or     rcx,rbx
  407c95:	shr    rcx,0x38
  407c99:	cmp    rcx,0x65
  407c9d:	jne    40d1ba <main@@Base+0x886a>
  407ca3:	cmp    rax,0x2
  407ca7:	jl     40d1ba <main@@Base+0x886a>
  407cad:	mov    rax,QWORD PTR [rsp+0x8]
  407cb2:	cmp    DWORD PTR [rax],0x0
  407cb5:	mov    al,BYTE PTR [r13+0x9]
  407cb9:	je     407d80 <main@@Base+0x3430>
  407cbf:	cmp    al,0x21
  407cc1:	jl     407ccb <main@@Base+0x337b>
  407cc3:	cmp    al,0x3a
  407cc5:	jne    40d1ba <main@@Base+0x886a>
  407ccb:	add    r13,0x9
  407ccf:	mov    rax,QWORD PTR [rsp+0x8]
  407cd4:	mov    DWORD PTR [rax],0x0
  407cda:	jmp    407d8c <main@@Base+0x343c>
  407cdf:	mov    rdi,r14
  407ce2:	mov    rsi,rbx
  407ce5:	mov    rdx,r15
  407ce8:	mov    ecx,0x16
  407ced:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407cf2:	mov    rbp,rax
  407cf5:	mov    rdi,QWORD PTR [r14]
  407cf8:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  407cfd:	mov    DWORD PTR [rsp+0x1c],eax
  407d01:	test   eax,eax
  407d03:	je     40da65 <main@@Base+0x9115>
  407d09:	mov    rdi,QWORD PTR [r14]
  407d0c:	mov    esi,0x1f
  407d11:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  407d16:	test   rax,rax
  407d19:	je     40da65 <main@@Base+0x9115>
  407d1f:	mov    ecx,DWORD PTR [rsp+0x1c]
  407d23:	mov    DWORD PTR [rax],ecx
  407d25:	jmp    40d1cb <main@@Base+0x887b>
  407d2a:	mov    rdi,r14
  407d2d:	mov    rsi,rax
  407d30:	mov    rdx,r15
  407d33:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407d38:	mov    rbx,r15
  407d3b:	cmp    rax,r15
  407d3e:	je     407e36 <main@@Base+0x34e6>
  407d44:	cmp    BYTE PTR [rax],0x5d
  407d47:	jne    407e33 <main@@Base+0x34e3>
  407d4d:	lea    rbp,[rax+0x1]
  407d51:	mov    rcx,r15
  407d54:	sub    rcx,rbp
  407d57:	cmp    rcx,0x2
  407d5b:	jl     4097cb <main@@Base+0x4e7b>
  407d61:	cmp    BYTE PTR [rbp+0x0],0x20
  407d65:	jg     407cf5 <main@@Base+0x33a5>
  407d67:	jne    4097cb <main@@Base+0x4e7b>
  407d6d:	cmp    BYTE PTR [rax+0x2],0x20
  407d71:	jle    4097cb <main@@Base+0x4e7b>
  407d77:	add    rax,0x2
  407d7b:	jmp    407cf2 <main@@Base+0x33a2>
  407d80:	cmp    al,0x22
  407d82:	jne    40d1ba <main@@Base+0x886a>
  407d88:	add    r13,0xa
  407d8c:	mov    rax,r15
  407d8f:	sub    rax,r13
  407d92:	cmp    rax,0x2
  407d96:	jl     407db2 <main@@Base+0x3462>
  407d98:	cmp    BYTE PTR [r13+0x0],0x20
  407d9d:	jg     407dc3 <main@@Base+0x3473>
  407d9f:	jne    407db2 <main@@Base+0x3462>
  407da1:	cmp    BYTE PTR [r13+0x1],0x20
  407da6:	jle    407db2 <main@@Base+0x3462>
  407da8:	inc    r13
  407dab:	cmp    r13,r15
  407dae:	jne    407dc8 <main@@Base+0x3478>
  407db0:	jmp    407e12 <main@@Base+0x34c2>
  407db2:	mov    rdi,r14
  407db5:	mov    rsi,r13
  407db8:	mov    rdx,r15
  407dbb:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407dc0:	mov    r13,rax
  407dc3:	cmp    r13,r15
  407dc6:	je     407e12 <main@@Base+0x34c2>
  407dc8:	cmp    BYTE PTR [r13+0x0],0x3a
  407dcd:	jne    407e12 <main@@Base+0x34c2>
  407dcf:	lea    rax,[r13+0x1]
  407dd3:	mov    rcx,r15
  407dd6:	sub    rcx,rax
  407dd9:	cmp    rcx,0x2
  407ddd:	jl     4094f0 <main@@Base+0x4ba0>
  407de3:	cmp    BYTE PTR [rax],0x20
  407de6:	jg     4094fe <main@@Base+0x4bae>
  407dec:	jne    4094f0 <main@@Base+0x4ba0>
  407df2:	cmp    BYTE PTR [r13+0x2],0x20
  407df7:	jle    4094f0 <main@@Base+0x4ba0>
  407dfd:	add    r13,0x2
  407e01:	mov    rax,r13
  407e04:	cmp    r12,rax
  407e07:	jne    409507 <main@@Base+0x4bb7>
  407e0d:	jmp    40d1ba <main@@Base+0x886a>
  407e12:	mov    rdi,r14
  407e15:	mov    rsi,r13
  407e18:	mov    rdx,r15
  407e1b:	mov    ecx,0x4
  407e20:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407e25:	cmp    r12,rax
  407e28:	jne    409507 <main@@Base+0x4bb7>
  407e2e:	jmp    40d1ba <main@@Base+0x886a>
  407e33:	mov    rbx,rax
  407e36:	mov    rdi,QWORD PTR [r14]
  407e39:	mov    esi,0x1
  407e3e:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  407e43:	test   rax,rax
  407e46:	je     404a01 <main@@Base+0xb1>
  407e4c:	mov    rdi,r14
  407e4f:	mov    rsi,rbx
  407e52:	mov    rdx,r15
  407e55:	mov    rcx,rax
  407e58:	call   40f4d0 <main@@Base+0xab80>
  407e5d:	mov    rcx,r15
  407e60:	sub    rcx,rax
  407e63:	cmp    rcx,0x2
  407e67:	jl     407e83 <main@@Base+0x3533>
  407e69:	cmp    BYTE PTR [rax],0x20
  407e6c:	jg     407e91 <main@@Base+0x3541>
  407e6e:	jne    407e83 <main@@Base+0x3533>
  407e70:	cmp    BYTE PTR [rax+0x1],0x20
  407e74:	jle    407e83 <main@@Base+0x3533>
  407e76:	inc    rax
  407e79:	cmp    rax,r15
  407e7c:	jne    407e9a <main@@Base+0x354a>
  407e7e:	jmp    40979a <main@@Base+0x4e4a>
  407e83:	mov    rdi,r14
  407e86:	mov    rsi,rax
  407e89:	mov    rdx,r15
  407e8c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407e91:	cmp    rax,r15
  407e94:	je     40979a <main@@Base+0x4e4a>
  407e9a:	movzx  ecx,BYTE PTR [rax]
  407e9d:	cmp    cl,0x2c
  407ea0:	jne    4097a2 <main@@Base+0x4e52>
  407ea6:	lea    rbx,[rax+0x1]
  407eaa:	mov    rcx,r15
  407ead:	sub    rcx,rbx
  407eb0:	cmp    rcx,0x2
  407eb4:	jl     407ec9 <main@@Base+0x3579>
  407eb6:	cmp    BYTE PTR [rbx],0x20
  407eb9:	jg     407eda <main@@Base+0x358a>
  407ebb:	jne    407ec9 <main@@Base+0x3579>
  407ebd:	cmp    BYTE PTR [rax+0x2],0x20
  407ec1:	jle    407ec9 <main@@Base+0x3579>
  407ec3:	add    rax,0x2
  407ec7:	jmp    407ed7 <main@@Base+0x3587>
  407ec9:	mov    rdi,r14
  407ecc:	mov    rsi,rbx
  407ecf:	mov    rdx,r15
  407ed2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407ed7:	mov    rbx,rax
  407eda:	cmp    rbx,r15
  407edd:	je     409827 <main@@Base+0x4ed7>
  407ee3:	cmp    BYTE PTR [rbx],0x5d
  407ee6:	jne    407e36 <main@@Base+0x34e6>
  407eec:	lea    rbp,[rbx+0x1]
  407ef0:	mov    rax,r15
  407ef3:	sub    rax,rbp
  407ef6:	cmp    rax,0x2
  407efa:	jl     4097cb <main@@Base+0x4e7b>
  407f00:	cmp    BYTE PTR [rbp+0x0],0x20
  407f04:	jg     407cf5 <main@@Base+0x33a5>
  407f0a:	jne    4097cb <main@@Base+0x4e7b>
  407f10:	cmp    BYTE PTR [rbx+0x2],0x20
  407f14:	jle    4097cb <main@@Base+0x4e7b>
  407f1a:	add    rbx,0x2
  407f1e:	mov    rbp,rbx
  407f21:	jmp    407cf5 <main@@Base+0x33a5>
  407f26:	mov    rdi,r14
  407f29:	mov    rsi,rbx
  407f2c:	mov    rdx,r15
  407f2f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  407f34:	mov    rbx,rax
  407f37:	cmp    r13,rbx
  407f3a:	je     409d41 <main@@Base+0x53f1>
  407f40:	mov    BYTE PTR [rsp+0x4],0x0
  407f45:	mov    rax,r15
  407f48:	sub    rax,rbx
  407f4b:	cmp    rax,0x4
  407f4f:	jl     407f77 <main@@Base+0x3627>
  407f51:	cmp    DWORD PTR [rbx],0x65757274
  407f57:	je     407fc8 <main@@Base+0x3678>
  407f59:	cmp    rax,0x5
  407f5d:	jl     407f77 <main@@Base+0x3627>
  407f5f:	mov    eax,DWORD PTR [rbx]
  407f61:	mov    ecx,0x736c6166
  407f66:	xor    eax,ecx
  407f68:	movzx  ecx,BYTE PTR [rbx+0x4]
  407f6c:	xor    ecx,0x65
  407f6f:	or     ecx,eax
  407f71:	je     409431 <main@@Base+0x4ae1>
  407f77:	mov    QWORD PTR [rsp+0x10],0x0
  407f80:	mov    DWORD PTR [rsp+0x20],0x0
  407f88:	cmp    rbx,r15
  407f8b:	je     407fc1 <main@@Base+0x3671>
  407f8d:	mov    rdi,r14
  407f90:	mov    rsi,rbx
  407f93:	mov    rdx,r15
  407f96:	lea    rcx,[rsp+0x20]
  407f9b:	lea    r8,[rsp+0x10]
  407fa0:	call   41fec0 <flatcc_json_parser_integer@@Base>
  407fa5:	cmp    rax,rbx
  407fa8:	je     407fd6 <main@@Base+0x3686>
  407faa:	cmp    DWORD PTR [rsp+0x20],0x0
  407faf:	je     407fdd <main@@Base+0x368d>
  407fb1:	mov    rdi,r14
  407fb4:	mov    rsi,rax
  407fb7:	mov    rdx,r15
  407fba:	mov    ecx,0x8
  407fbf:	jmp    407ff9 <main@@Base+0x36a9>
  407fc1:	xor    ecx,ecx
  407fc3:	mov    rax,r15
  407fc6:	jmp    408000 <main@@Base+0x36b0>
  407fc8:	mov    BYTE PTR [rsp+0x4],0x1
  407fcd:	lea    rax,[rbx+0x4]
  407fd1:	mov    r12b,0x1
  407fd4:	jmp    40800b <main@@Base+0x36bb>
  407fd6:	xor    ecx,ecx
  407fd8:	mov    rax,rbx
  407fdb:	jmp    408000 <main@@Base+0x36b0>
  407fdd:	mov    rcx,QWORD PTR [rsp+0x10]
  407fe2:	cmp    rcx,0x100
  407fe9:	jb     408000 <main@@Base+0x36b0>
  407feb:	mov    rdi,r14
  407fee:	mov    rsi,rax
  407ff1:	mov    rdx,r15
  407ff4:	mov    ecx,0x7
  407ff9:	call   41e300 <flatcc_json_parser_set_error@@Base>
  407ffe:	xor    ecx,ecx
  408000:	test   cl,cl
  408002:	setne  r12b
  408006:	setne  BYTE PTR [rsp+0x4]
  40800b:	mov    rbp,rax
  40800e:	cmp    rbx,rax
  408011:	jne    408047 <main@@Base+0x36f7>
  408013:	mov    rdi,r14
  408016:	mov    rsi,rbx
  408019:	mov    rdx,r15
  40801c:	lea    rcx,[rip+0x2119d]        # 4291c0 <filename@@Base+0xf0>
  408023:	lea    r8,[rsp+0x4]
  408028:	call   412d10 <main@@Base+0xe3c0>
  40802d:	mov    rbp,rax
  408030:	cmp    rax,rbx
  408033:	je     40da65 <main@@Base+0x9115>
  408039:	cmp    rbp,r15
  40803c:	je     40da65 <main@@Base+0x9115>
  408042:	mov    r12b,BYTE PTR [rsp+0x4]
  408047:	cmp    r12b,0x1
  40804b:	jne    408058 <main@@Base+0x3708>
  40804d:	test   BYTE PTR [r14+0x10],0x2
  408052:	je     40d1cb <main@@Base+0x887b>
  408058:	mov    rdi,QWORD PTR [r14]
  40805b:	mov    edx,0x1
  408060:	mov    esi,0xf
  408065:	mov    ecx,0x1
  40806a:	call   41c310 <flatcc_builder_table_add@@Base>
  40806f:	test   rax,rax
  408072:	je     40da65 <main@@Base+0x9115>
  408078:	mov    BYTE PTR [rax],r12b
  40807b:	jmp    40d1cb <main@@Base+0x887b>
  408080:	cmp    al,0x22
  408082:	jne    40d1ba <main@@Base+0x886a>
  408088:	add    r13,0x12
  40808c:	mov    rax,r15
  40808f:	sub    rax,r13
  408092:	cmp    rax,0x2
  408096:	jl     40817c <main@@Base+0x382c>
  40809c:	cmp    BYTE PTR [r13+0x0],0x20
  4080a1:	jg     40818d <main@@Base+0x383d>
  4080a7:	jne    40817c <main@@Base+0x382c>
  4080ad:	cmp    BYTE PTR [r13+0x1],0x20
  4080b2:	jle    40817c <main@@Base+0x382c>
  4080b8:	inc    r13
  4080bb:	cmp    r13,r15
  4080be:	jne    408192 <main@@Base+0x3842>
  4080c4:	jmp    4081df <main@@Base+0x388f>
  4080c9:	mov    rdi,r14
  4080cc:	mov    rsi,rbx
  4080cf:	mov    rdx,r15
  4080d2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4080d7:	mov    rbx,rax
  4080da:	cmp    r12,rbx
  4080dd:	je     40d1ba <main@@Base+0x886a>
  4080e3:	mov    rdi,QWORD PTR [r14]
  4080e6:	mov    esi,0x1
  4080eb:	mov    ecx,0xffffffff
  4080f0:	mov    edx,0x1
  4080f5:	call   41ab20 <flatcc_builder_start_vector@@Base>
  4080fa:	test   eax,eax
  4080fc:	jne    404a01 <main@@Base+0xb1>
  408102:	cmp    rbx,r15
  408105:	je     408145 <main@@Base+0x37f5>
  408107:	cmp    BYTE PTR [rbx],0x5b
  40810a:	jne    408145 <main@@Base+0x37f5>
  40810c:	lea    rax,[rbx+0x1]
  408110:	mov    rcx,r15
  408113:	sub    rcx,rax
  408116:	cmp    rcx,0x2
  40811a:	jl     4095d0 <main@@Base+0x4c80>
  408120:	cmp    BYTE PTR [rax],0x20
  408123:	jg     4095de <main@@Base+0x4c8e>
  408129:	jne    4095d0 <main@@Base+0x4c80>
  40812f:	cmp    BYTE PTR [rbx+0x2],0x20
  408133:	jle    4095d0 <main@@Base+0x4c80>
  408139:	add    rbx,0x2
  40813d:	mov    rax,rbx
  408140:	jmp    4095de <main@@Base+0x4c8e>
  408145:	mov    rdi,r14
  408148:	mov    rsi,rbx
  40814b:	mov    rdx,r15
  40814e:	mov    ecx,0x16
  408153:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408158:	mov    rbp,rax
  40815b:	mov    rdi,QWORD PTR [r14]
  40815e:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  408163:	mov    DWORD PTR [rsp+0x1c],eax
  408167:	test   eax,eax
  408169:	je     40da65 <main@@Base+0x9115>
  40816f:	mov    rdi,QWORD PTR [r14]
  408172:	mov    esi,0x18
  408177:	jmp    407d11 <main@@Base+0x33c1>
  40817c:	mov    rdi,r14
  40817f:	mov    rsi,r13
  408182:	mov    rdx,r15
  408185:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40818a:	mov    r13,rax
  40818d:	cmp    r13,r15
  408190:	je     4081df <main@@Base+0x388f>
  408192:	cmp    BYTE PTR [r13+0x0],0x3a
  408197:	jne    4081df <main@@Base+0x388f>
  408199:	lea    rsi,[r13+0x1]
  40819d:	mov    rax,r15
  4081a0:	sub    rax,rsi
  4081a3:	cmp    rax,0x2
  4081a7:	jl     40a18a <main@@Base+0x583a>
  4081ad:	mov    rax,rsi
  4081b0:	cmp    BYTE PTR [rsi],0x20
  4081b3:	jg     40a195 <main@@Base+0x5845>
  4081b9:	mov    rsi,rax
  4081bc:	jne    40a18a <main@@Base+0x583a>
  4081c2:	cmp    BYTE PTR [r13+0x2],0x20
  4081c7:	jle    40a18a <main@@Base+0x583a>
  4081cd:	add    r13,0x2
  4081d1:	cmp    r12,r13
  4081d4:	jne    40a1a1 <main@@Base+0x5851>
  4081da:	jmp    40d1ba <main@@Base+0x886a>
  4081df:	mov    rdi,r14
  4081e2:	mov    rsi,r13
  4081e5:	mov    rdx,r15
  4081e8:	mov    ecx,0x4
  4081ed:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4081f2:	jmp    40a195 <main@@Base+0x5845>
  4081f7:	cmp    al,0x22
  4081f9:	jne    4090b6 <main@@Base+0x4766>
  4081ff:	lea    rsi,[r13+0x11]
  408203:	mov    rax,r15
  408206:	sub    rax,rsi
  408209:	cmp    rax,0x2
  40820d:	jl     409059 <main@@Base+0x4709>
  408213:	cmp    BYTE PTR [rsi],0x20
  408216:	jg     409067 <main@@Base+0x4717>
  40821c:	jne    409059 <main@@Base+0x4709>
  408222:	cmp    BYTE PTR [rsi+0x1],0x20
  408226:	jle    409059 <main@@Base+0x4709>
  40822c:	inc    rsi
  40822f:	cmp    rsi,r15
  408232:	jne    409070 <main@@Base+0x4720>
  408238:	jmp    4092d5 <main@@Base+0x4985>
  40823d:	cmp    al,0x22
  40823f:	jne    4091f4 <main@@Base+0x48a4>
  408245:	lea    rsi,[r13+0x11]
  408249:	mov    rax,r15
  40824c:	sub    rax,rsi
  40824f:	cmp    rax,0x2
  408253:	jl     409197 <main@@Base+0x4847>
  408259:	cmp    BYTE PTR [rsi],0x20
  40825c:	jg     4091a5 <main@@Base+0x4855>
  408262:	jne    409197 <main@@Base+0x4847>
  408268:	cmp    BYTE PTR [rsi+0x1],0x20
  40826c:	jle    409197 <main@@Base+0x4847>
  408272:	inc    rsi
  408275:	cmp    rsi,r15
  408278:	jne    4091ae <main@@Base+0x485e>
  40827e:	jmp    4092ea <main@@Base+0x499a>
  408283:	cmp    al,0x22
  408285:	jne    40d1ba <main@@Base+0x886a>
  40828b:	add    r13,0x12
  40828f:	mov    rax,r15
  408292:	sub    rax,r13
  408295:	cmp    rax,0x2
  408299:	jl     4093b1 <main@@Base+0x4a61>
  40829f:	cmp    BYTE PTR [r13+0x0],0x20
  4082a4:	jg     4093c2 <main@@Base+0x4a72>
  4082aa:	jne    4093b1 <main@@Base+0x4a61>
  4082b0:	cmp    BYTE PTR [r13+0x1],0x20
  4082b5:	jle    4093b1 <main@@Base+0x4a61>
  4082bb:	inc    r13
  4082be:	cmp    r13,r15
  4082c1:	jne    4093c7 <main@@Base+0x4a77>
  4082c7:	jmp    409411 <main@@Base+0x4ac1>
  4082cc:	mov    rdi,r14
  4082cf:	mov    rsi,rbx
  4082d2:	mov    rdx,r15
  4082d5:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4082da:	mov    rbx,rax
  4082dd:	cmp    r13,rbx
  4082e0:	je     409d41 <main@@Base+0x53f1>
  4082e6:	mov    QWORD PTR [rsp+0x10],0x0
  4082ef:	mov    DWORD PTR [rsp+0x20],0x0
  4082f7:	mov    WORD PTR [rsp+0x4],0x0
  4082fe:	cmp    rbx,r15
  408301:	je     408345 <main@@Base+0x39f5>
  408303:	mov    rdi,r14
  408306:	mov    rsi,rbx
  408309:	mov    rdx,r15
  40830c:	lea    rcx,[rsp+0x20]
  408311:	lea    r8,[rsp+0x10]
  408316:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40831b:	cmp    rax,rbx
  40831e:	je     40834d <main@@Base+0x39fd>
  408320:	mov    r12,QWORD PTR [rsp+0x10]
  408325:	cmp    DWORD PTR [rsp+0x20],0x0
  40832a:	je     408355 <main@@Base+0x3a05>
  40832c:	cmp    r12,0x8001
  408333:	jb     408376 <main@@Base+0x3a26>
  408335:	mov    rdi,r14
  408338:	mov    rsi,rax
  40833b:	mov    rdx,r15
  40833e:	mov    ecx,0x8
  408343:	jmp    40836c <main@@Base+0x3a1c>
  408345:	xor    r12d,r12d
  408348:	mov    rax,r15
  40834b:	jmp    40837f <main@@Base+0x3a2f>
  40834d:	xor    r12d,r12d
  408350:	mov    rax,rbx
  408353:	jmp    40837f <main@@Base+0x3a2f>
  408355:	cmp    r12,0x8000
  40835c:	jb     408379 <main@@Base+0x3a29>
  40835e:	mov    rdi,r14
  408361:	mov    rsi,rax
  408364:	mov    rdx,r15
  408367:	mov    ecx,0x7
  40836c:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408371:	xor    r12d,r12d
  408374:	jmp    40837f <main@@Base+0x3a2f>
  408376:	neg    r12
  408379:	mov    WORD PTR [rsp+0x4],r12w
  40837f:	mov    rbp,rax
  408382:	cmp    rbx,rax
  408385:	jne    4083bc <main@@Base+0x3a6c>
  408387:	mov    rdi,r14
  40838a:	mov    rsi,rbx
  40838d:	mov    rdx,r15
  408390:	lea    rcx,[rip+0x20d89]        # 429120 <filename@@Base+0x50>
  408397:	lea    r8,[rsp+0x4]
  40839c:	call   40f2c0 <main@@Base+0xa970>
  4083a1:	mov    rbp,rax
  4083a4:	cmp    rax,rbx
  4083a7:	je     40da65 <main@@Base+0x9115>
  4083ad:	cmp    rbp,r15
  4083b0:	je     40da65 <main@@Base+0x9115>
  4083b6:	movzx  r12d,WORD PTR [rsp+0x4]
  4083bc:	cmp    r12w,0x64
  4083c1:	jne    4083ce <main@@Base+0x3a7e>
  4083c3:	test   BYTE PTR [r14+0x10],0x2
  4083c8:	je     40d1cb <main@@Base+0x887b>
  4083ce:	mov    rdi,QWORD PTR [r14]
  4083d1:	mov    edx,0x2
  4083d6:	mov    esi,0x2
  4083db:	jmp    409c8a <main@@Base+0x533a>
  4083e0:	mov    rdi,r14
  4083e3:	mov    rsi,rbx
  4083e6:	mov    rdx,r15
  4083e9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4083ee:	mov    rbx,rax
  4083f1:	cmp    r13,rbx
  4083f4:	je     409d41 <main@@Base+0x53f1>
  4083fa:	mov    rdi,QWORD PTR [r14]
  4083fd:	mov    edx,0x20
  408402:	xor    esi,esi
  408404:	mov    ecx,0x10
  408409:	call   41c310 <flatcc_builder_table_add@@Base>
  40840e:	test   rax,rax
  408411:	je     404a01 <main@@Base+0xb1>
  408417:	cmp    rbx,r15
  40841a:	je     40844a <main@@Base+0x3afa>
  40841c:	cmp    BYTE PTR [rbx],0x7b
  40841f:	jne    40844a <main@@Base+0x3afa>
  408421:	mov    r13,rax
  408424:	lea    rax,[rbx+0x1]
  408428:	mov    rcx,r15
  40842b:	sub    rcx,rax
  40842e:	cmp    rcx,0x2
  408432:	jl     408462 <main@@Base+0x3b12>
  408434:	cmp    BYTE PTR [rax],0x20
  408437:	jg     408470 <main@@Base+0x3b20>
  408439:	jne    408462 <main@@Base+0x3b12>
  40843b:	cmp    BYTE PTR [rbx+0x2],0x20
  40843f:	jle    408462 <main@@Base+0x3b12>
  408441:	add    rbx,0x2
  408445:	mov    rax,rbx
  408448:	jmp    408470 <main@@Base+0x3b20>
  40844a:	mov    rdi,r14
  40844d:	mov    rsi,rbx
  408450:	mov    rdx,r15
  408453:	mov    ecx,0x15
  408458:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40845d:	jmp    40d1c8 <main@@Base+0x8878>
  408462:	mov    rdi,r14
  408465:	mov    rsi,rax
  408468:	mov    rdx,r15
  40846b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408470:	mov    rsi,r15
  408473:	cmp    rax,r15
  408476:	je     408484 <main@@Base+0x3b34>
  408478:	cmp    BYTE PTR [rax],0x7d
  40847b:	je     4098cd <main@@Base+0x4f7d>
  408481:	mov    rsi,rax
  408484:	mov    rax,r13
  408487:	add    rax,0x1a
  40848b:	mov    QWORD PTR [rsp+0x50],rax
  408490:	mov    QWORD PTR [rsp+0x28],r13
  408495:	mov    r12,r15
  408498:	cmp    rsi,r15
  40849b:	je     4084db <main@@Base+0x3b8b>
  40849d:	movzx  eax,BYTE PTR [rsi]
  4084a0:	cmp    al,0x2e
  4084a2:	je     4084b8 <main@@Base+0x3b68>
  4084a4:	cmp    al,0x22
  4084a6:	jne    4084cd <main@@Base+0x3b7d>
  4084a8:	inc    rsi
  4084ab:	mov    rax,QWORD PTR [rsp+0x8]
  4084b0:	mov    DWORD PTR [rax],0x0
  4084b6:	jmp    4084d8 <main@@Base+0x3b88>
  4084b8:	mov    rdi,r14
  4084bb:	mov    rdx,r15
  4084be:	mov    ecx,0x5
  4084c3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4084c8:	mov    r12,rax
  4084cb:	jmp    4084db <main@@Base+0x3b8b>
  4084cd:	mov    rax,QWORD PTR [rsp+0x8]
  4084d2:	mov    DWORD PTR [rax],0x1
  4084d8:	mov    r12,rsi
  4084db:	mov    rcx,r15
  4084de:	sub    rcx,r12
  4084e1:	cmp    rcx,0x8
  4084e5:	jb     4084f2 <main@@Base+0x3ba2>
  4084e7:	movbe  rax,QWORD PTR [r12]
  4084ed:	jmp    408577 <main@@Base+0x3c27>
  4084f2:	lea    rax,[rcx-0x1]
  4084f6:	cmp    rax,0x6
  4084fa:	ja     408eea <main@@Base+0x459a>
  408500:	lea    rdx,[rip+0x19d51]        # 422258 <_IO_stdin_used@@Base+0x258>
  408507:	mov    rsi,rdx
  40850a:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40850e:	add    rdx,rsi
  408511:	xor    r8d,r8d
  408514:	xor    eax,eax
  408516:	xor    esi,esi
  408518:	xor    edi,edi
  40851a:	xor    ebp,ebp
  40851c:	xor    ebx,ebx
  40851e:	jmp    rdx
  408520:	movsx  r8,BYTE PTR [r12+0x6]
  408526:	shl    r8,0x8
  40852a:	movsx  rax,BYTE PTR [r12+0x5]
  408530:	shl    rax,0x10
  408534:	or     rax,r8
  408537:	movsx  rsi,BYTE PTR [r12+0x4]
  40853d:	shl    rsi,0x18
  408541:	or     rsi,rax
  408544:	movsx  rdi,BYTE PTR [r12+0x3]
  40854a:	shl    rdi,0x20
  40854e:	or     rdi,rsi
  408551:	movsx  rbp,BYTE PTR [r12+0x2]
  408557:	shl    rbp,0x28
  40855b:	or     rbp,rdi
  40855e:	movsx  rbx,BYTE PTR [r12+0x1]
  408564:	shl    rbx,0x30
  408568:	or     rbx,rbp
  40856b:	movzx  eax,BYTE PTR [r12]
  408570:	shl    rax,0x38
  408574:	or     rax,rbx
  408577:	movabs rdx,0x7465737400000000
  408581:	add    rdx,0x33000000
  408588:	cmp    rax,rdx
  40858b:	jae    4085fe <main@@Base+0x3cae>
  40858d:	and    rax,0xffffffffff000000
  408593:	movabs rdx,0x7465737431000000
  40859d:	cmp    rax,rdx
  4085a0:	je     4086de <main@@Base+0x3d8e>
  4085a6:	movabs rdx,0x7465737432000000
  4085b0:	cmp    rax,rdx
  4085b3:	jne    408eea <main@@Base+0x459a>
  4085b9:	mov    r13,r12
  4085bc:	cmp    rcx,0x6
  4085c0:	jl     408a74 <main@@Base+0x4124>
  4085c6:	mov    rax,QWORD PTR [rsp+0x8]
  4085cb:	cmp    DWORD PTR [rax],0x0
  4085ce:	movzx  eax,BYTE PTR [r12+0x5]
  4085d4:	je     4087c5 <main@@Base+0x3e75>
  4085da:	cmp    al,0x21
  4085dc:	jl     4085e9 <main@@Base+0x3c99>
  4085de:	mov    r13,r12
  4085e1:	cmp    al,0x3a
  4085e3:	jne    408a74 <main@@Base+0x4124>
  4085e9:	lea    rsi,[r12+0x5]
  4085ee:	mov    rax,QWORD PTR [rsp+0x8]
  4085f3:	mov    DWORD PTR [rax],0x0
  4085f9:	jmp    4087d5 <main@@Base+0x3e85>
  4085fe:	movabs rsi,0x7800000000000000
  408608:	cmp    rax,rsi
  40860b:	jae    408663 <main@@Base+0x3d13>
  40860d:	and    rax,0xffffffffff000000
  408613:	cmp    rax,rdx
  408616:	jne    408eea <main@@Base+0x459a>
  40861c:	mov    rax,r12
  40861f:	cmp    rcx,0x6
  408623:	jl     408dd6 <main@@Base+0x4486>
  408629:	mov    rax,QWORD PTR [rsp+0x8]
  40862e:	cmp    DWORD PTR [rax],0x0
  408631:	movzx  ecx,BYTE PTR [r12+0x5]
  408637:	je     40892f <main@@Base+0x3fdf>
  40863d:	cmp    cl,0x21
  408640:	jl     40864e <main@@Base+0x3cfe>
  408642:	mov    rax,r12
  408645:	cmp    cl,0x3a
  408648:	jne    408dd6 <main@@Base+0x4486>
  40864e:	lea    rsi,[r12+0x5]
  408653:	mov    rax,QWORD PTR [rsp+0x8]
  408658:	mov    DWORD PTR [rax],0x0
  40865e:	jmp    408940 <main@@Base+0x3ff0>
  408663:	mov    rdx,rax
  408666:	movabs rsi,0xff00000000000000
  408670:	and    rdx,rsi
  408673:	movabs rsi,0x7900000000000000
  40867d:	cmp    rax,rsi
  408680:	jae    408723 <main@@Base+0x3dd3>
  408686:	movabs rax,0x7800000000000000
  408690:	cmp    rdx,rax
  408693:	jne    408eea <main@@Base+0x459a>
  408699:	mov    rbp,r12
  40869c:	cmp    rcx,0x2
  4086a0:	jl     408cba <main@@Base+0x436a>
  4086a6:	mov    rax,QWORD PTR [rsp+0x8]
  4086ab:	cmp    DWORD PTR [rax],0x0
  4086ae:	movzx  eax,BYTE PTR [r12+0x1]
  4086b4:	je     4089c9 <main@@Base+0x4079>
  4086ba:	cmp    al,0x21
  4086bc:	jl     4086c9 <main@@Base+0x3d79>
  4086be:	mov    rbp,r12
  4086c1:	cmp    al,0x3a
  4086c3:	jne    408cba <main@@Base+0x436a>
  4086c9:	lea    rsi,[r12+0x1]
  4086ce:	mov    rax,QWORD PTR [rsp+0x8]
  4086d3:	mov    DWORD PTR [rax],0x0
  4086d9:	jmp    4089d9 <main@@Base+0x4089>
  4086de:	mov    rbp,r12
  4086e1:	cmp    rcx,0x6
  4086e5:	jl     408d4b <main@@Base+0x43fb>
  4086eb:	mov    rax,QWORD PTR [rsp+0x8]
  4086f0:	cmp    DWORD PTR [rax],0x0
  4086f3:	movzx  eax,BYTE PTR [r12+0x5]
  4086f9:	je     4087fb <main@@Base+0x3eab>
  4086ff:	cmp    al,0x21
  408701:	jl     40870e <main@@Base+0x3dbe>
  408703:	mov    rbp,r12
  408706:	cmp    al,0x3a
  408708:	jne    408d4b <main@@Base+0x43fb>
  40870e:	lea    rsi,[r12+0x5]
  408713:	mov    rax,QWORD PTR [rsp+0x8]
  408718:	mov    DWORD PTR [rax],0x0
  40871e:	jmp    40880b <main@@Base+0x3ebb>
  408723:	cmp    rdx,rsi
  408726:	je     408780 <main@@Base+0x3e30>
  408728:	movabs rax,0x7a00000000000000
  408732:	cmp    rdx,rax
  408735:	jne    408eea <main@@Base+0x459a>
  40873b:	mov    rbp,r12
  40873e:	cmp    rcx,0x2
  408742:	jl     408e0d <main@@Base+0x44bd>
  408748:	mov    rax,QWORD PTR [rsp+0x8]
  40874d:	cmp    DWORD PTR [rax],0x0
  408750:	movzx  eax,BYTE PTR [r12+0x1]
  408756:	je     408b62 <main@@Base+0x4212>
  40875c:	cmp    al,0x21
  40875e:	jl     40876b <main@@Base+0x3e1b>
  408760:	mov    rbp,r12
  408763:	cmp    al,0x3a
  408765:	jne    408e0d <main@@Base+0x44bd>
  40876b:	lea    rsi,[r12+0x1]
  408770:	mov    rax,QWORD PTR [rsp+0x8]
  408775:	mov    DWORD PTR [rax],0x0
  40877b:	jmp    408b72 <main@@Base+0x4222>
  408780:	mov    rbp,r12
  408783:	cmp    rcx,0x2
  408787:	jl     408e8a <main@@Base+0x453a>
  40878d:	mov    rax,QWORD PTR [rsp+0x8]
  408792:	cmp    DWORD PTR [rax],0x0
  408795:	movzx  eax,BYTE PTR [r12+0x1]
  40879b:	je     408b98 <main@@Base+0x4248>
  4087a1:	cmp    al,0x21
  4087a3:	jl     4087b0 <main@@Base+0x3e60>
  4087a5:	mov    rbp,r12
  4087a8:	cmp    al,0x3a
  4087aa:	jne    408e8a <main@@Base+0x453a>
  4087b0:	lea    rsi,[r12+0x1]
  4087b5:	mov    rax,QWORD PTR [rsp+0x8]
  4087ba:	mov    DWORD PTR [rax],0x0
  4087c0:	jmp    408ba8 <main@@Base+0x4258>
  4087c5:	mov    r13,r12
  4087c8:	cmp    al,0x22
  4087ca:	jne    408a74 <main@@Base+0x4124>
  4087d0:	lea    rsi,[r12+0x6]
  4087d5:	mov    rax,r15
  4087d8:	sub    rax,rsi
  4087db:	cmp    rax,0x2
  4087df:	jl     408845 <main@@Base+0x3ef5>
  4087e1:	cmp    BYTE PTR [rsi],0x20
  4087e4:	jg     408853 <main@@Base+0x3f03>
  4087e6:	jne    408845 <main@@Base+0x3ef5>
  4087e8:	cmp    BYTE PTR [rsi+0x1],0x20
  4087ec:	jle    408845 <main@@Base+0x3ef5>
  4087ee:	inc    rsi
  4087f1:	cmp    rsi,r15
  4087f4:	jne    40885c <main@@Base+0x3f0c>
  4087f6:	jmp    408905 <main@@Base+0x3fb5>
  4087fb:	mov    rbp,r12
  4087fe:	cmp    al,0x22
  408800:	jne    408d4b <main@@Base+0x43fb>
  408806:	lea    rsi,[r12+0x6]
  40880b:	mov    rax,r15
  40880e:	sub    rax,rsi
  408811:	cmp    rax,0x2
  408815:	jl     4088bc <main@@Base+0x3f6c>
  40881b:	cmp    BYTE PTR [rsi],0x20
  40881e:	jg     4088ca <main@@Base+0x3f7a>
  408824:	jne    4088bc <main@@Base+0x3f6c>
  40882a:	cmp    BYTE PTR [rsi+0x1],0x20
  40882e:	jle    4088bc <main@@Base+0x3f6c>
  408834:	inc    rsi
  408837:	cmp    rsi,r15
  40883a:	jne    4088cf <main@@Base+0x3f7f>
  408840:	jmp    40891a <main@@Base+0x3fca>
  408845:	mov    rdi,r14
  408848:	mov    rdx,r15
  40884b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408850:	mov    rsi,rax
  408853:	cmp    rsi,r15
  408856:	je     408905 <main@@Base+0x3fb5>
  40885c:	cmp    BYTE PTR [rsi],0x3a
  40885f:	jne    408905 <main@@Base+0x3fb5>
  408865:	lea    r13,[rsi+0x1]
  408869:	mov    rax,r15
  40886c:	sub    rax,r13
  40886f:	cmp    rax,0x2
  408873:	jl     408a63 <main@@Base+0x4113>
  408879:	cmp    BYTE PTR [r13+0x0],0x20
  40887e:	jg     408a74 <main@@Base+0x4124>
  408884:	jne    408a63 <main@@Base+0x4113>
  40888a:	cmp    BYTE PTR [rsi+0x2],0x20
  40888e:	jle    408a63 <main@@Base+0x4113>
  408894:	add    rsi,0x2
  408898:	mov    r13,rsi
  40889b:	cmp    r12,r13
  40889e:	jne    408a7d <main@@Base+0x412d>
  4088a4:	mov    rdi,r14
  4088a7:	mov    rsi,r12
  4088aa:	mov    rdx,r15
  4088ad:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4088b2:	mov    r13,QWORD PTR [rsp+0x28]
  4088b7:	jmp    408ef8 <main@@Base+0x45a8>
  4088bc:	mov    rdi,r14
  4088bf:	mov    rdx,r15
  4088c2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4088c7:	mov    rsi,rax
  4088ca:	cmp    rsi,r15
  4088cd:	je     40891a <main@@Base+0x3fca>
  4088cf:	cmp    BYTE PTR [rsi],0x3a
  4088d2:	jne    40891a <main@@Base+0x3fca>
  4088d4:	lea    rbp,[rsi+0x1]
  4088d8:	mov    rax,r15
  4088db:	sub    rax,rbp
  4088de:	cmp    rax,0x2
  4088e2:	jl     408d3a <main@@Base+0x43ea>
  4088e8:	cmp    BYTE PTR [rbp+0x0],0x20
  4088ec:	jle    408d1c <main@@Base+0x43cc>
  4088f2:	mov    r13,QWORD PTR [rsp+0x28]
  4088f7:	cmp    r12,rbp
  4088fa:	jne    408d54 <main@@Base+0x4404>
  408900:	jmp    408eea <main@@Base+0x459a>
  408905:	mov    rdi,r14
  408908:	mov    rdx,r15
  40890b:	mov    ecx,0x4
  408910:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408915:	jmp    408a71 <main@@Base+0x4121>
  40891a:	mov    rdi,r14
  40891d:	mov    rdx,r15
  408920:	mov    ecx,0x4
  408925:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40892a:	jmp    408d48 <main@@Base+0x43f8>
  40892f:	mov    rax,r12
  408932:	cmp    cl,0x22
  408935:	jne    408dd6 <main@@Base+0x4486>
  40893b:	lea    rsi,[r12+0x6]
  408940:	mov    rax,r15
  408943:	sub    rax,rsi
  408946:	cmp    rax,0x2
  40894a:	jl     408963 <main@@Base+0x4013>
  40894c:	cmp    BYTE PTR [rsi],0x20
  40894f:	jg     408971 <main@@Base+0x4021>
  408951:	jne    408963 <main@@Base+0x4013>
  408953:	cmp    BYTE PTR [rsi+0x1],0x20
  408957:	jle    408963 <main@@Base+0x4013>
  408959:	inc    rsi
  40895c:	cmp    rsi,r15
  40895f:	jne    408976 <main@@Base+0x4026>
  408961:	jmp    4089ab <main@@Base+0x405b>
  408963:	mov    rdi,r14
  408966:	mov    rdx,r15
  408969:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40896e:	mov    rsi,rax
  408971:	cmp    rsi,r15
  408974:	je     4089ab <main@@Base+0x405b>
  408976:	cmp    BYTE PTR [rsi],0x3a
  408979:	jne    4089ab <main@@Base+0x405b>
  40897b:	lea    rax,[rsi+0x1]
  40897f:	mov    rcx,r15
  408982:	sub    rcx,rax
  408985:	cmp    rcx,0x2
  408989:	jl     408dc3 <main@@Base+0x4473>
  40898f:	cmp    BYTE PTR [rax],0x20
  408992:	jle    408daf <main@@Base+0x445f>
  408998:	mov    r13,QWORD PTR [rsp+0x28]
  40899d:	cmp    r12,rax
  4089a0:	jne    408ddf <main@@Base+0x448f>
  4089a6:	jmp    408eea <main@@Base+0x459a>
  4089ab:	mov    rdi,r14
  4089ae:	mov    rdx,r15
  4089b1:	mov    ecx,0x4
  4089b6:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4089bb:	cmp    r12,rax
  4089be:	jne    408ddf <main@@Base+0x448f>
  4089c4:	jmp    408eea <main@@Base+0x459a>
  4089c9:	mov    rbp,r12
  4089cc:	cmp    al,0x22
  4089ce:	jne    408cba <main@@Base+0x436a>
  4089d4:	lea    rsi,[r12+0x2]
  4089d9:	mov    rax,r15
  4089dc:	sub    rax,rsi
  4089df:	cmp    rax,0x2
  4089e3:	jl     4089fc <main@@Base+0x40ac>
  4089e5:	cmp    BYTE PTR [rsi],0x20
  4089e8:	jg     408a0a <main@@Base+0x40ba>
  4089ea:	jne    4089fc <main@@Base+0x40ac>
  4089ec:	cmp    BYTE PTR [rsi+0x1],0x20
  4089f0:	jle    4089fc <main@@Base+0x40ac>
  4089f2:	inc    rsi
  4089f5:	cmp    rsi,r15
  4089f8:	jne    408a0f <main@@Base+0x40bf>
  4089fa:	jmp    408a4e <main@@Base+0x40fe>
  4089fc:	mov    rdi,r14
  4089ff:	mov    rdx,r15
  408a02:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408a07:	mov    rsi,rax
  408a0a:	cmp    rsi,r15
  408a0d:	je     408a4e <main@@Base+0x40fe>
  408a0f:	cmp    BYTE PTR [rsi],0x3a
  408a12:	jne    408a4e <main@@Base+0x40fe>
  408a14:	lea    rbp,[rsi+0x1]
  408a18:	mov    rax,r15
  408a1b:	sub    rax,rbp
  408a1e:	cmp    rax,0x2
  408a22:	jl     408ca4 <main@@Base+0x4354>
  408a28:	cmp    BYTE PTR [rbp+0x0],0x20
  408a2c:	jg     408cb5 <main@@Base+0x4365>
  408a32:	jne    408ca4 <main@@Base+0x4354>
  408a38:	cmp    BYTE PTR [rsi+0x2],0x20
  408a3c:	jle    408ca4 <main@@Base+0x4354>
  408a42:	add    rsi,0x2
  408a46:	mov    rbp,rsi
  408a49:	jmp    408cb5 <main@@Base+0x4365>
  408a4e:	mov    rdi,r14
  408a51:	mov    rdx,r15
  408a54:	mov    ecx,0x4
  408a59:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408a5e:	jmp    408cb2 <main@@Base+0x4362>
  408a63:	mov    rdi,r14
  408a66:	mov    rsi,r13
  408a69:	mov    rdx,r15
  408a6c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408a71:	mov    r13,rax
  408a74:	cmp    r12,r13
  408a77:	je     4088a4 <main@@Base+0x3f54>
  408a7d:	mov    QWORD PTR [rsp+0x10],0x0
  408a86:	mov    DWORD PTR [rsp+0x20],0x0
  408a8e:	mov    BYTE PTR [rsp+0x4],0x0
  408a93:	cmp    r13,r15
  408a96:	je     408ada <main@@Base+0x418a>
  408a98:	mov    rdi,r14
  408a9b:	mov    rsi,r13
  408a9e:	mov    rdx,r15
  408aa1:	lea    rcx,[rsp+0x20]
  408aa6:	lea    r8,[rsp+0x10]
  408aab:	call   41fec0 <flatcc_json_parser_integer@@Base>
  408ab0:	cmp    rax,r13
  408ab3:	je     408ae6 <main@@Base+0x4196>
  408ab5:	mov    rcx,QWORD PTR [rsp+0x10]
  408aba:	cmp    DWORD PTR [rsp+0x20],0x0
  408abf:	je     408af2 <main@@Base+0x41a2>
  408ac1:	cmp    rcx,0x81
  408ac8:	jb     408b17 <main@@Base+0x41c7>
  408aca:	mov    rdi,r14
  408acd:	mov    rsi,rax
  408ad0:	mov    rdx,r15
  408ad3:	mov    ecx,0x8
  408ad8:	jmp    408b09 <main@@Base+0x41b9>
  408ada:	xor    ecx,ecx
  408adc:	mov    rax,r15
  408adf:	cmp    r13,rax
  408ae2:	jne    408b54 <main@@Base+0x4204>
  408ae4:	jmp    408b23 <main@@Base+0x41d3>
  408ae6:	xor    ecx,ecx
  408ae8:	mov    rax,r13
  408aeb:	cmp    r13,rax
  408aee:	jne    408b54 <main@@Base+0x4204>
  408af0:	jmp    408b23 <main@@Base+0x41d3>
  408af2:	cmp    rcx,0x80
  408af9:	jb     408b1a <main@@Base+0x41ca>
  408afb:	mov    rdi,r14
  408afe:	mov    rsi,rax
  408b01:	mov    rdx,r15
  408b04:	mov    ecx,0x7
  408b09:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408b0e:	xor    ecx,ecx
  408b10:	cmp    r13,rax
  408b13:	jne    408b54 <main@@Base+0x4204>
  408b15:	jmp    408b23 <main@@Base+0x41d3>
  408b17:	neg    rcx
  408b1a:	mov    BYTE PTR [rsp+0x4],cl
  408b1e:	cmp    r13,rax
  408b21:	jne    408b54 <main@@Base+0x4204>
  408b23:	mov    rdi,r14
  408b26:	mov    rsi,r13
  408b29:	mov    rdx,r15
  408b2c:	lea    rcx,[rip+0x2086d]        # 4293a0 <filename@@Base+0x2d0>
  408b33:	lea    r8,[rsp+0x4]
  408b38:	call   40eea0 <main@@Base+0xa550>
  408b3d:	cmp    rax,r13
  408b40:	je     40c4c1 <main@@Base+0x7b71>
  408b46:	cmp    rax,r15
  408b49:	je     40c4c1 <main@@Base+0x7b71>
  408b4f:	movzx  ecx,BYTE PTR [rsp+0x4]
  408b54:	mov    r13,QWORD PTR [rsp+0x28]
  408b59:	mov    BYTE PTR [r13+0x18],cl
  408b5d:	jmp    408ef8 <main@@Base+0x45a8>
  408b62:	mov    rbp,r12
  408b65:	cmp    al,0x22
  408b67:	jne    408e0d <main@@Base+0x44bd>
  408b6d:	lea    rsi,[r12+0x2]
  408b72:	mov    rax,r15
  408b75:	sub    rax,rsi
  408b78:	cmp    rax,0x2
  408b7c:	jl     408bce <main@@Base+0x427e>
  408b7e:	cmp    BYTE PTR [rsi],0x20
  408b81:	jg     408bdc <main@@Base+0x428c>
  408b83:	jne    408bce <main@@Base+0x427e>
  408b85:	cmp    BYTE PTR [rsi+0x1],0x20
  408b89:	jle    408bce <main@@Base+0x427e>
  408b8b:	inc    rsi
  408b8e:	cmp    rsi,r15
  408b91:	jne    408be5 <main@@Base+0x4295>
  408b93:	jmp    408c7a <main@@Base+0x432a>
  408b98:	mov    rbp,r12
  408b9b:	cmp    al,0x22
  408b9d:	jne    408e8a <main@@Base+0x453a>
  408ba3:	lea    rsi,[r12+0x2]
  408ba8:	mov    rax,r15
  408bab:	sub    rax,rsi
  408bae:	cmp    rax,0x2
  408bb2:	jl     408c28 <main@@Base+0x42d8>
  408bb4:	cmp    BYTE PTR [rsi],0x20
  408bb7:	jg     408c36 <main@@Base+0x42e6>
  408bb9:	jne    408c28 <main@@Base+0x42d8>
  408bbb:	cmp    BYTE PTR [rsi+0x1],0x20
  408bbf:	jle    408c28 <main@@Base+0x42d8>
  408bc1:	inc    rsi
  408bc4:	cmp    rsi,r15
  408bc7:	jne    408c3b <main@@Base+0x42eb>
  408bc9:	jmp    408c8f <main@@Base+0x433f>
  408bce:	mov    rdi,r14
  408bd1:	mov    rdx,r15
  408bd4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408bd9:	mov    rsi,rax
  408bdc:	cmp    rsi,r15
  408bdf:	je     408c7a <main@@Base+0x432a>
  408be5:	cmp    BYTE PTR [rsi],0x3a
  408be8:	jne    408c7a <main@@Base+0x432a>
  408bee:	lea    rbp,[rsi+0x1]
  408bf2:	mov    rax,r15
  408bf5:	sub    rax,rbp
  408bf8:	cmp    rax,0x2
  408bfc:	jl     408df7 <main@@Base+0x44a7>
  408c02:	cmp    BYTE PTR [rbp+0x0],0x20
  408c06:	jg     408e08 <main@@Base+0x44b8>
  408c0c:	jne    408df7 <main@@Base+0x44a7>
  408c12:	cmp    BYTE PTR [rsi+0x2],0x20
  408c16:	jle    408df7 <main@@Base+0x44a7>
  408c1c:	add    rsi,0x2
  408c20:	mov    rbp,rsi
  408c23:	jmp    408e08 <main@@Base+0x44b8>
  408c28:	mov    rdi,r14
  408c2b:	mov    rdx,r15
  408c2e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408c33:	mov    rsi,rax
  408c36:	cmp    rsi,r15
  408c39:	je     408c8f <main@@Base+0x433f>
  408c3b:	cmp    BYTE PTR [rsi],0x3a
  408c3e:	jne    408c8f <main@@Base+0x433f>
  408c40:	lea    rbp,[rsi+0x1]
  408c44:	mov    rax,r15
  408c47:	sub    rax,rbp
  408c4a:	cmp    rax,0x2
  408c4e:	jl     408e74 <main@@Base+0x4524>
  408c54:	cmp    BYTE PTR [rbp+0x0],0x20
  408c58:	jg     408e85 <main@@Base+0x4535>
  408c5e:	jne    408e74 <main@@Base+0x4524>
  408c64:	cmp    BYTE PTR [rsi+0x2],0x20
  408c68:	jle    408e74 <main@@Base+0x4524>
  408c6e:	add    rsi,0x2
  408c72:	mov    rbp,rsi
  408c75:	jmp    408e85 <main@@Base+0x4535>
  408c7a:	mov    rdi,r14
  408c7d:	mov    rdx,r15
  408c80:	mov    ecx,0x4
  408c85:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408c8a:	jmp    408e05 <main@@Base+0x44b5>
  408c8f:	mov    rdi,r14
  408c92:	mov    rdx,r15
  408c95:	mov    ecx,0x4
  408c9a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  408c9f:	jmp    408e82 <main@@Base+0x4532>
  408ca4:	mov    rdi,r14
  408ca7:	mov    rsi,rbp
  408caa:	mov    rdx,r15
  408cad:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408cb2:	mov    rbp,rax
  408cb5:	mov    r13,QWORD PTR [rsp+0x28]
  408cba:	cmp    r12,rbp
  408cbd:	je     408eea <main@@Base+0x459a>
  408cc3:	mov    DWORD PTR [rsp+0x10],0x0
  408ccb:	mov    rdi,r14
  408cce:	mov    rsi,rbp
  408cd1:	mov    rdx,r15
  408cd4:	lea    rcx,[rsp+0x10]
  408cd9:	call   41fda0 <flatcc_json_parser_float@@Base>
  408cde:	cmp    rbp,rax
  408ce1:	jne    408d0f <main@@Base+0x43bf>
  408ce3:	mov    rdi,r14
  408ce6:	mov    rsi,rbp
  408ce9:	mov    rdx,r15
  408cec:	lea    rcx,[rip+0x206ed]        # 4293e0 <filename@@Base+0x310>
  408cf3:	lea    r8,[rsp+0x10]
  408cf8:	call   412ef0 <main@@Base+0xe5a0>
  408cfd:	cmp    rax,rbp
  408d00:	je     40c4c1 <main@@Base+0x7b71>
  408d06:	cmp    rax,r15
  408d09:	je     40c4c1 <main@@Base+0x7b71>
  408d0f:	mov    ecx,DWORD PTR [rsp+0x10]
  408d13:	mov    DWORD PTR [r13+0x0],ecx
  408d17:	jmp    408ef8 <main@@Base+0x45a8>
  408d1c:	mov    r13,QWORD PTR [rsp+0x28]
  408d21:	jne    408d3a <main@@Base+0x43ea>
  408d23:	cmp    BYTE PTR [rsi+0x2],0x20
  408d27:	jle    408d3a <main@@Base+0x43ea>
  408d29:	add    rsi,0x2
  408d2d:	mov    rbp,rsi
  408d30:	cmp    r12,rbp
  408d33:	jne    408d54 <main@@Base+0x4404>
  408d35:	jmp    408eea <main@@Base+0x459a>
  408d3a:	mov    rdi,r14
  408d3d:	mov    rsi,rbp
  408d40:	mov    rdx,r15
  408d43:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408d48:	mov    rbp,rax
  408d4b:	cmp    r12,rbp
  408d4e:	je     408eea <main@@Base+0x459a>
  408d54:	mov    QWORD PTR [rsp+0x10],0x0
  408d5d:	mov    rdi,r14
  408d60:	mov    rsi,rbp
  408d63:	mov    rdx,r15
  408d66:	lea    rcx,[rsp+0x10]
  408d6b:	call   41f600 <flatcc_json_parser_double@@Base>
  408d70:	cmp    rbp,rax
  408d73:	jne    408da1 <main@@Base+0x4451>
  408d75:	mov    rdi,r14
  408d78:	mov    rsi,rbp
  408d7b:	mov    rdx,r15
  408d7e:	lea    rcx,[rip+0x2063b]        # 4293c0 <filename@@Base+0x2f0>
  408d85:	lea    r8,[rsp+0x10]
  408d8a:	call   4138f0 <main@@Base+0xefa0>
  408d8f:	cmp    rax,rbp
  408d92:	je     40c4c1 <main@@Base+0x7b71>
  408d98:	cmp    rax,r15
  408d9b:	je     40c4c1 <main@@Base+0x7b71>
  408da1:	mov    rcx,QWORD PTR [rsp+0x10]
  408da6:	mov    QWORD PTR [r13+0x10],rcx
  408daa:	jmp    408ef8 <main@@Base+0x45a8>
  408daf:	jne    408dc3 <main@@Base+0x4473>
  408db1:	cmp    BYTE PTR [rsi+0x2],0x20
  408db5:	jle    408dc3 <main@@Base+0x4473>
  408db7:	add    rsi,0x2
  408dbb:	mov    rax,rsi
  408dbe:	jmp    408998 <main@@Base+0x4048>
  408dc3:	mov    rdi,r14
  408dc6:	mov    rsi,rax
  408dc9:	mov    rdx,r15
  408dcc:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408dd1:	mov    r13,QWORD PTR [rsp+0x28]
  408dd6:	cmp    r12,rax
  408dd9:	je     408eea <main@@Base+0x459a>
  408ddf:	mov    rdi,r14
  408de2:	mov    rsi,rax
  408de5:	mov    rdx,r15
  408de8:	mov    rcx,QWORD PTR [rsp+0x50]
  408ded:	call   40f4d0 <main@@Base+0xab80>
  408df2:	jmp    408ef8 <main@@Base+0x45a8>
  408df7:	mov    rdi,r14
  408dfa:	mov    rsi,rbp
  408dfd:	mov    rdx,r15
  408e00:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408e05:	mov    rbp,rax
  408e08:	mov    r13,QWORD PTR [rsp+0x28]
  408e0d:	cmp    r12,rbp
  408e10:	je     408eea <main@@Base+0x459a>
  408e16:	mov    DWORD PTR [rsp+0x10],0x0
  408e1e:	mov    rdi,r14
  408e21:	mov    rsi,rbp
  408e24:	mov    rdx,r15
  408e27:	lea    rcx,[rsp+0x10]
  408e2c:	call   41fda0 <flatcc_json_parser_float@@Base>
  408e31:	cmp    rbp,rax
  408e34:	jne    408e67 <main@@Base+0x4517>
  408e36:	mov    rdi,r14
  408e39:	mov    rsi,rbp
  408e3c:	mov    rdx,r15
  408e3f:	lea    rcx,[rip+0x205ba]        # 429400 <filename@@Base+0x330>
  408e46:	lea    r8,[rsp+0x10]
  408e4b:	call   412ef0 <main@@Base+0xe5a0>
  408e50:	cmp    rax,rbp
  408e53:	je     40c4c1 <main@@Base+0x7b71>
  408e59:	cmp    rax,r15
  408e5c:	je     40c4c1 <main@@Base+0x7b71>
  408e62:	mov    r13,QWORD PTR [rsp+0x28]
  408e67:	mov    ecx,DWORD PTR [rsp+0x10]
  408e6b:	mov    DWORD PTR [r13+0x8],ecx
  408e6f:	jmp    408ef8 <main@@Base+0x45a8>
  408e74:	mov    rdi,r14
  408e77:	mov    rsi,rbp
  408e7a:	mov    rdx,r15
  408e7d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408e82:	mov    rbp,rax
  408e85:	mov    r13,QWORD PTR [rsp+0x28]
  408e8a:	cmp    r12,rbp
  408e8d:	je     408eea <main@@Base+0x459a>
  408e8f:	mov    DWORD PTR [rsp+0x10],0x0
  408e97:	mov    rdi,r14
  408e9a:	mov    rsi,rbp
  408e9d:	mov    rdx,r15
  408ea0:	lea    rcx,[rsp+0x10]
  408ea5:	call   41fda0 <flatcc_json_parser_float@@Base>
  408eaa:	cmp    rbp,rax
  408ead:	jne    408ee0 <main@@Base+0x4590>
  408eaf:	mov    rdi,r14
  408eb2:	mov    rsi,rbp
  408eb5:	mov    rdx,r15
  408eb8:	lea    rcx,[rip+0x20561]        # 429420 <filename@@Base+0x350>
  408ebf:	lea    r8,[rsp+0x10]
  408ec4:	call   412ef0 <main@@Base+0xe5a0>
  408ec9:	cmp    rax,rbp
  408ecc:	je     40c4c1 <main@@Base+0x7b71>
  408ed2:	cmp    rax,r15
  408ed5:	je     40c4c1 <main@@Base+0x7b71>
  408edb:	mov    r13,QWORD PTR [rsp+0x28]
  408ee0:	mov    ecx,DWORD PTR [rsp+0x10]
  408ee4:	mov    DWORD PTR [r13+0x4],ecx
  408ee8:	jmp    408ef8 <main@@Base+0x45a8>
  408eea:	mov    rdi,r14
  408eed:	mov    rsi,r12
  408ef0:	mov    rdx,r15
  408ef3:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  408ef8:	mov    rcx,r15
  408efb:	sub    rcx,rax
  408efe:	cmp    rcx,0x2
  408f02:	jl     408f1e <main@@Base+0x45ce>
  408f04:	cmp    BYTE PTR [rax],0x20
  408f07:	jg     408f2c <main@@Base+0x45dc>
  408f09:	jne    408f1e <main@@Base+0x45ce>
  408f0b:	cmp    BYTE PTR [rax+0x1],0x20
  408f0f:	jle    408f1e <main@@Base+0x45ce>
  408f11:	inc    rax
  408f14:	cmp    rax,r15
  408f17:	jne    408f35 <main@@Base+0x45e5>
  408f19:	jmp    4098bc <main@@Base+0x4f6c>
  408f1e:	mov    rdi,r14
  408f21:	mov    rsi,rax
  408f24:	mov    rdx,r15
  408f27:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408f2c:	cmp    rax,r15
  408f2f:	je     4098bc <main@@Base+0x4f6c>
  408f35:	movzx  ecx,BYTE PTR [rax]
  408f38:	cmp    cl,0x2c
  408f3b:	jne    4098c4 <main@@Base+0x4f74>
  408f41:	lea    rsi,[rax+0x1]
  408f45:	mov    rcx,r15
  408f48:	sub    rcx,rsi
  408f4b:	cmp    rcx,0x2
  408f4f:	jl     408f64 <main@@Base+0x4614>
  408f51:	cmp    BYTE PTR [rsi],0x20
  408f54:	jg     408f72 <main@@Base+0x4622>
  408f56:	jne    408f64 <main@@Base+0x4614>
  408f58:	cmp    BYTE PTR [rax+0x2],0x20
  408f5c:	jle    408f64 <main@@Base+0x4614>
  408f5e:	add    rax,0x2
  408f62:	jmp    408f6f <main@@Base+0x461f>
  408f64:	mov    rdi,r14
  408f67:	mov    rdx,r15
  408f6a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408f6f:	mov    rsi,rax
  408f72:	cmp    rsi,r15
  408f75:	je     409b6c <main@@Base+0x521c>
  408f7b:	cmp    BYTE PTR [rsi],0x7d
  408f7e:	jne    408495 <main@@Base+0x3b45>
  408f84:	lea    rbp,[rsi+0x1]
  408f88:	mov    rax,r15
  408f8b:	sub    rax,rbp
  408f8e:	cmp    rax,0x2
  408f92:	jl     4098f8 <main@@Base+0x4fa8>
  408f98:	cmp    BYTE PTR [rbp+0x0],0x20
  408f9c:	jg     40d1cb <main@@Base+0x887b>
  408fa2:	jne    4098f8 <main@@Base+0x4fa8>
  408fa8:	cmp    BYTE PTR [rsi+0x2],0x20
  408fac:	jle    4098f8 <main@@Base+0x4fa8>
  408fb2:	add    rsi,0x2
  408fb6:	mov    rbp,rsi
  408fb9:	jmp    40d1cb <main@@Base+0x887b>
  408fbe:	mov    rdi,r14
  408fc1:	mov    rsi,rbx
  408fc4:	mov    rdx,r15
  408fc7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  408fcc:	mov    rbx,rax
  408fcf:	cmp    r13,rbx
  408fd2:	je     409d41 <main@@Base+0x53f1>
  408fd8:	mov    DWORD PTR [rsp+0x10],0x0
  408fe0:	mov    rdi,r14
  408fe3:	mov    rsi,rbx
  408fe6:	mov    rdx,r15
  408fe9:	lea    rcx,[rsp+0x10]
  408fee:	call   41fda0 <flatcc_json_parser_float@@Base>
  408ff3:	mov    rbp,rax
  408ff6:	cmp    rbx,rax
  408ff9:	jne    40902a <main@@Base+0x46da>
  408ffb:	mov    rdi,r14
  408ffe:	mov    rsi,rbx
  409001:	mov    rdx,r15
  409004:	lea    rcx,[rip+0x201d5]        # 4291e0 <filename@@Base+0x110>
  40900b:	lea    r8,[rsp+0x10]
  409010:	call   412ef0 <main@@Base+0xe5a0>
  409015:	mov    rbp,rax
  409018:	cmp    rax,rbx
  40901b:	je     40da65 <main@@Base+0x9115>
  409021:	cmp    rbp,r15
  409024:	je     40da65 <main@@Base+0x9115>
  40902a:	vmovss xmm0,DWORD PTR [rsp+0x10]
  409030:	vucomiss xmm0,DWORD PTR [rip+0x18fd4]        # 42200c <_IO_stdin_used@@Base+0xc>
  409038:	jne    409047 <main@@Base+0x46f7>
  40903a:	jp     409047 <main@@Base+0x46f7>
  40903c:	test   BYTE PTR [r14+0x10],0x2
  409041:	je     40d1cb <main@@Base+0x887b>
  409047:	mov    rdi,QWORD PTR [r14]
  40904a:	mov    edx,0x4
  40904f:	mov    esi,0x1a
  409054:	jmp    4066de <main@@Base+0x1d8e>
  409059:	mov    rdi,r14
  40905c:	mov    rdx,r15
  40905f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409064:	mov    rsi,rax
  409067:	cmp    rsi,r15
  40906a:	je     4092d5 <main@@Base+0x4985>
  409070:	cmp    BYTE PTR [rsi],0x3a
  409073:	jne    4092d5 <main@@Base+0x4985>
  409079:	lea    rcx,[rsi+0x1]
  40907d:	mov    rax,r15
  409080:	sub    rax,rcx
  409083:	cmp    rax,0x2
  409087:	jl     40a665 <main@@Base+0x5d15>
  40908d:	cmp    BYTE PTR [rcx],0x20
  409090:	jg     40a676 <main@@Base+0x5d26>
  409096:	jne    40a665 <main@@Base+0x5d15>
  40909c:	cmp    BYTE PTR [rsi+0x2],0x20
  4090a0:	jle    40a665 <main@@Base+0x5d15>
  4090a6:	add    rsi,0x2
  4090aa:	mov    rcx,rsi
  4090ad:	cmp    r12,rcx
  4090b0:	jne    40a67f <main@@Base+0x5d2f>
  4090b6:	lea    r12,[r13+0x10]
  4090ba:	mov    rax,r15
  4090bd:	sub    rax,r12
  4090c0:	cmp    rax,0x8
  4090c4:	jb     4090ce <main@@Base+0x477e>
  4090c6:	movbe  rcx,QWORD PTR [r12]
  4090cc:	jmp    40914d <main@@Base+0x47fd>
  4090ce:	lea    rcx,[rax-0x1]
  4090d2:	cmp    rcx,0x6
  4090d6:	ja     40d1ba <main@@Base+0x886a>
  4090dc:	lea    rdx,[rip+0x19009]        # 4220ec <_IO_stdin_used@@Base+0xec>
  4090e3:	mov    rsi,rdx
  4090e6:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4090ea:	add    rdx,rsi
  4090ed:	xor    r8d,r8d
  4090f0:	xor    ecx,ecx
  4090f2:	xor    esi,esi
  4090f4:	xor    edi,edi
  4090f6:	xor    ebp,ebp
  4090f8:	xor    ebx,ebx
  4090fa:	jmp    rdx
  4090fc:	movsx  r8,BYTE PTR [r13+0x16]
  409101:	shl    r8,0x8
  409105:	movsx  rcx,BYTE PTR [r13+0x15]
  40910a:	shl    rcx,0x10
  40910e:	or     rcx,r8
  409111:	movsx  rsi,BYTE PTR [r13+0x14]
  409116:	shl    rsi,0x18
  40911a:	or     rsi,rcx
  40911d:	movsx  rdi,BYTE PTR [r13+0x13]
  409122:	shl    rdi,0x20
  409126:	or     rdi,rsi
  409129:	movsx  rbp,BYTE PTR [r13+0x12]
  40912e:	shl    rbp,0x28
  409132:	or     rbp,rdi
  409135:	movsx  rbx,BYTE PTR [r13+0x11]
  40913a:	shl    rbx,0x30
  40913e:	or     rbx,rbp
  409141:	movzx  ecx,BYTE PTR [r12]
  409146:	shl    rcx,0x38
  40914a:	or     rcx,rbx
  40914d:	shr    rcx,0x38
  409151:	cmp    rcx,0x61
  409155:	jne    40d1ba <main@@Base+0x886a>
  40915b:	cmp    rax,0x2
  40915f:	jl     40d1ba <main@@Base+0x886a>
  409165:	mov    rax,QWORD PTR [rsp+0x8]
  40916a:	cmp    DWORD PTR [rax],0x0
  40916d:	mov    al,BYTE PTR [r13+0x11]
  409171:	je     40a000 <main@@Base+0x56b0>
  409177:	cmp    al,0x21
  409179:	jl     409183 <main@@Base+0x4833>
  40917b:	cmp    al,0x3a
  40917d:	jne    40d1ba <main@@Base+0x886a>
  409183:	add    r13,0x11
  409187:	mov    rax,QWORD PTR [rsp+0x8]
  40918c:	mov    DWORD PTR [rax],0x0
  409192:	jmp    40a00c <main@@Base+0x56bc>
  409197:	mov    rdi,r14
  40919a:	mov    rdx,r15
  40919d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4091a2:	mov    rsi,rax
  4091a5:	cmp    rsi,r15
  4091a8:	je     4092ea <main@@Base+0x499a>
  4091ae:	cmp    BYTE PTR [rsi],0x3a
  4091b1:	jne    4092ea <main@@Base+0x499a>
  4091b7:	lea    rcx,[rsi+0x1]
  4091bb:	mov    rax,r15
  4091be:	sub    rax,rcx
  4091c1:	cmp    rax,0x2
  4091c5:	jl     40a6ee <main@@Base+0x5d9e>
  4091cb:	cmp    BYTE PTR [rcx],0x20
  4091ce:	jg     40a6ff <main@@Base+0x5daf>
  4091d4:	jne    40a6ee <main@@Base+0x5d9e>
  4091da:	cmp    BYTE PTR [rsi+0x2],0x20
  4091de:	jle    40a6ee <main@@Base+0x5d9e>
  4091e4:	add    rsi,0x2
  4091e8:	mov    rcx,rsi
  4091eb:	cmp    r12,rcx
  4091ee:	jne    40a708 <main@@Base+0x5db8>
  4091f4:	lea    r12,[r13+0x10]
  4091f8:	mov    rax,r15
  4091fb:	sub    rax,r12
  4091fe:	cmp    rax,0x8
  409202:	jb     40920c <main@@Base+0x48bc>
  409204:	movbe  rcx,QWORD PTR [r12]
  40920a:	jmp    40928b <main@@Base+0x493b>
  40920c:	lea    rcx,[rax-0x1]
  409210:	cmp    rcx,0x6
  409214:	ja     40d1ba <main@@Base+0x886a>
  40921a:	lea    rdx,[rip+0x18eaf]        # 4220d0 <_IO_stdin_used@@Base+0xd0>
  409221:	mov    rsi,rdx
  409224:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  409228:	add    rdx,rsi
  40922b:	xor    r8d,r8d
  40922e:	xor    ecx,ecx
  409230:	xor    esi,esi
  409232:	xor    edi,edi
  409234:	xor    ebp,ebp
  409236:	xor    ebx,ebx
  409238:	jmp    rdx
  40923a:	movsx  r8,BYTE PTR [r13+0x16]
  40923f:	shl    r8,0x8
  409243:	movsx  rcx,BYTE PTR [r13+0x15]
  409248:	shl    rcx,0x10
  40924c:	or     rcx,r8
  40924f:	movsx  rsi,BYTE PTR [r13+0x14]
  409254:	shl    rsi,0x18
  409258:	or     rsi,rcx
  40925b:	movsx  rdi,BYTE PTR [r13+0x13]
  409260:	shl    rdi,0x20
  409264:	or     rdi,rsi
  409267:	movsx  rbp,BYTE PTR [r13+0x12]
  40926c:	shl    rbp,0x28
  409270:	or     rbp,rdi
  409273:	movsx  rbx,BYTE PTR [r13+0x11]
  409278:	shl    rbx,0x30
  40927c:	or     rbx,rbp
  40927f:	movzx  ecx,BYTE PTR [r12]
  409284:	shl    rcx,0x38
  409288:	or     rcx,rbx
  40928b:	shr    rcx,0x38
  40928f:	cmp    rcx,0x61
  409293:	jne    40d1ba <main@@Base+0x886a>
  409299:	cmp    rax,0x2
  40929d:	jl     40d1ba <main@@Base+0x886a>
  4092a3:	mov    rax,QWORD PTR [rsp+0x8]
  4092a8:	cmp    DWORD PTR [rax],0x0
  4092ab:	mov    al,BYTE PTR [r13+0x11]
  4092af:	je     40a049 <main@@Base+0x56f9>
  4092b5:	cmp    al,0x21
  4092b7:	jl     4092c1 <main@@Base+0x4971>
  4092b9:	cmp    al,0x3a
  4092bb:	jne    40d1ba <main@@Base+0x886a>
  4092c1:	add    r13,0x11
  4092c5:	mov    rax,QWORD PTR [rsp+0x8]
  4092ca:	mov    DWORD PTR [rax],0x0
  4092d0:	jmp    40a055 <main@@Base+0x5705>
  4092d5:	mov    rdi,r14
  4092d8:	mov    rdx,r15
  4092db:	mov    ecx,0x4
  4092e0:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4092e5:	jmp    40a673 <main@@Base+0x5d23>
  4092ea:	mov    rdi,r14
  4092ed:	mov    rdx,r15
  4092f0:	mov    ecx,0x4
  4092f5:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4092fa:	jmp    40a6fc <main@@Base+0x5dac>
  4092ff:	mov    rdi,r14
  409302:	mov    rsi,rax
  409305:	mov    rdx,r15
  409308:	mov    ecx,0x9
  40930d:	jmp    40677b <main@@Base+0x1e2b>
  409312:	mov    rdi,r14
  409315:	mov    rsi,rbx
  409318:	mov    rdx,r15
  40931b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409320:	mov    rbx,rax
  409323:	cmp    r12,rbx
  409326:	je     406c35 <main@@Base+0x22e5>
  40932c:	mov    QWORD PTR [rsp+0x10],0x0
  409335:	mov    DWORD PTR [rsp+0x20],0x0
  40933d:	mov    DWORD PTR [rsp+0x4],0x0
  409345:	xor    r12d,r12d
  409348:	cmp    rbx,r15
  40934b:	je     4093a9 <main@@Base+0x4a59>
  40934d:	mov    rdi,r14
  409350:	mov    rsi,rbx
  409353:	mov    rdx,r15
  409356:	lea    rcx,[rsp+0x20]
  40935b:	mov    rbp,rbx
  40935e:	lea    r8,[rsp+0x10]
  409363:	call   41fec0 <flatcc_json_parser_integer@@Base>
  409368:	cmp    rax,rbx
  40936b:	je     409832 <main@@Base+0x4ee2>
  409371:	mov    rcx,QWORD PTR [rsp+0x10]
  409376:	cmp    DWORD PTR [rsp+0x20],0x0
  40937b:	je     40a092 <main@@Base+0x5742>
  409381:	mov    edx,0xffffffff
  409386:	add    rdx,0xffffffff80000001
  40938d:	cmp    rcx,rdx
  409390:	jbe    40a578 <main@@Base+0x5c28>
  409396:	mov    rdi,r14
  409399:	mov    rsi,rax
  40939c:	mov    rdx,r15
  40939f:	mov    ecx,0x8
  4093a4:	jmp    40a0ad <main@@Base+0x575d>
  4093a9:	mov    rax,r15
  4093ac:	jmp    40a582 <main@@Base+0x5c32>
  4093b1:	mov    rdi,r14
  4093b4:	mov    rsi,r13
  4093b7:	mov    rdx,r15
  4093ba:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4093bf:	mov    r13,rax
  4093c2:	cmp    r13,r15
  4093c5:	je     409411 <main@@Base+0x4ac1>
  4093c7:	cmp    BYTE PTR [r13+0x0],0x3a
  4093cc:	jne    409411 <main@@Base+0x4ac1>
  4093ce:	lea    rbx,[r13+0x1]
  4093d2:	mov    rax,r15
  4093d5:	sub    rax,rbx
  4093d8:	cmp    rax,0x2
  4093dc:	jl     40a792 <main@@Base+0x5e42>
  4093e2:	cmp    BYTE PTR [rbx],0x20
  4093e5:	jg     40a7a3 <main@@Base+0x5e53>
  4093eb:	jne    40a792 <main@@Base+0x5e42>
  4093f1:	cmp    BYTE PTR [r13+0x2],0x20
  4093f6:	jle    40a792 <main@@Base+0x5e42>
  4093fc:	add    r13,0x2
  409400:	mov    rbx,r13
  409403:	cmp    r12,rbx
  409406:	jne    40a7ac <main@@Base+0x5e5c>
  40940c:	jmp    40d1ba <main@@Base+0x886a>
  409411:	mov    rdi,r14
  409414:	mov    rsi,r13
  409417:	mov    rdx,r15
  40941a:	mov    ecx,0x4
  40941f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409424:	jmp    40a7a0 <main@@Base+0x5e50>
  409429:	mov    rbp,r15
  40942c:	jmp    40707d <main@@Base+0x272d>
  409431:	mov    BYTE PTR [rsp+0x4],0x0
  409436:	lea    rax,[rbx+0x5]
  40943a:	xor    r12d,r12d
  40943d:	jmp    40800b <main@@Base+0x36bb>
  409442:	cmp    cl,0x5d
  409445:	je     4070b9 <main@@Base+0x2769>
  40944b:	mov    rdi,r14
  40944e:	mov    rsi,rax
  409451:	jmp    409459 <main@@Base+0x4b09>
  409453:	mov    rdi,r14
  409456:	mov    rsi,r15
  409459:	mov    rdx,r15
  40945c:	mov    ecx,0x9
  409461:	jmp    407075 <main@@Base+0x2725>
  409466:	lea    rbp,[rbx+0x1]
  40946a:	mov    rax,r15
  40946d:	sub    rax,rbp
  409470:	cmp    rax,0x2
  409474:	jl     409494 <main@@Base+0x4b44>
  409476:	cmp    BYTE PTR [rbp+0x0],0x20
  40947a:	jg     40707d <main@@Base+0x272d>
  409480:	jne    409494 <main@@Base+0x4b44>
  409482:	cmp    BYTE PTR [rbx+0x2],0x20
  409486:	jle    409494 <main@@Base+0x4b44>
  409488:	add    rbx,0x2
  40948c:	mov    rbp,rbx
  40948f:	jmp    40707d <main@@Base+0x272d>
  409494:	mov    rdi,r14
  409497:	mov    rsi,rbp
  40949a:	mov    rdx,r15
  40949d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4094a2:	jmp    40707a <main@@Base+0x272a>
  4094a7:	cmp    al,0x22
  4094a9:	jne    40d1ba <main@@Base+0x886a>
  4094af:	add    r13,0x10
  4094b3:	mov    rax,r15
  4094b6:	sub    rax,r13
  4094b9:	cmp    rax,0x2
  4094bd:	jl     40962a <main@@Base+0x4cda>
  4094c3:	cmp    BYTE PTR [r13+0x0],0x20
  4094c8:	jg     40963b <main@@Base+0x4ceb>
  4094ce:	jne    40962a <main@@Base+0x4cda>
  4094d4:	cmp    BYTE PTR [r13+0x1],0x20
  4094d9:	jle    40962a <main@@Base+0x4cda>
  4094df:	inc    r13
  4094e2:	cmp    r13,r15
  4094e5:	jne    409640 <main@@Base+0x4cf0>
  4094eb:	jmp    40968a <main@@Base+0x4d3a>
  4094f0:	mov    rdi,r14
  4094f3:	mov    rsi,rax
  4094f6:	mov    rdx,r15
  4094f9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4094fe:	cmp    r12,rax
  409501:	je     40d1ba <main@@Base+0x886a>
  409507:	mov    r9,QWORD PTR [rsp+0x40]
  40950c:	mov    rdi,r14
  40950f:	mov    rsi,rax
  409512:	mov    rdx,r15
  409515:	mov    ecx,0x0
  40951a:	mov    r8d,0x8
  409520:	lea    rax,[rip+0x6699]        # 40fbc0 <main@@Base+0xb270>
  409527:	push   rax
  409528:	lea    rax,[rip+0x1fc51]        # 429180 <filename@@Base+0xb0>
  40952f:	push   rax
  409530:	call   420830 <flatcc_json_parser_union_type@@Base>
  409535:	add    rsp,0x10
  409539:	jmp    40d1c8 <main@@Base+0x8878>
  40953e:	cmp    al,0x22
  409540:	jne    40d1ba <main@@Base+0x886a>
  409546:	add    r13,0x15
  40954a:	mov    rax,r15
  40954d:	sub    rax,r13
  409550:	cmp    rax,0x2
  409554:	jl     4096a2 <main@@Base+0x4d52>
  40955a:	cmp    BYTE PTR [r13+0x0],0x20
  40955f:	jg     4096b3 <main@@Base+0x4d63>
  409565:	jne    4096a2 <main@@Base+0x4d52>
  40956b:	cmp    BYTE PTR [r13+0x1],0x20
  409570:	jle    4096a2 <main@@Base+0x4d52>
  409576:	inc    r13
  409579:	cmp    r13,r15
  40957c:	jne    4096bc <main@@Base+0x4d6c>
  409582:	jmp    40976a <main@@Base+0x4e1a>
  409587:	cmp    al,0x22
  409589:	jne    40d1ba <main@@Base+0x886a>
  40958f:	add    r13,0x12
  409593:	mov    rax,r15
  409596:	sub    rax,r13
  409599:	cmp    rax,0x2
  40959d:	jl     40970a <main@@Base+0x4dba>
  4095a3:	cmp    BYTE PTR [r13+0x0],0x20
  4095a8:	jg     40971b <main@@Base+0x4dcb>
  4095ae:	jne    40970a <main@@Base+0x4dba>
  4095b4:	cmp    BYTE PTR [r13+0x1],0x20
  4095b9:	jle    40970a <main@@Base+0x4dba>
  4095bf:	inc    r13
  4095c2:	cmp    r13,r15
  4095c5:	jne    409720 <main@@Base+0x4dd0>
  4095cb:	jmp    409782 <main@@Base+0x4e32>
  4095d0:	mov    rdi,r14
  4095d3:	mov    rsi,rax
  4095d6:	mov    rdx,r15
  4095d9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4095de:	mov    rbx,r15
  4095e1:	cmp    rax,r15
  4095e4:	je     40a38d <main@@Base+0x5a3d>
  4095ea:	cmp    BYTE PTR [rax],0x5d
  4095ed:	jne    40a38a <main@@Base+0x5a3a>
  4095f3:	lea    rbp,[rax+0x1]
  4095f7:	mov    rcx,r15
  4095fa:	sub    rcx,rbp
  4095fd:	cmp    rcx,0x2
  409601:	jl     40b7ab <main@@Base+0x6e5b>
  409607:	cmp    BYTE PTR [rbp+0x0],0x20
  40960b:	jg     40815b <main@@Base+0x380b>
  409611:	jne    40b7ab <main@@Base+0x6e5b>
  409617:	cmp    BYTE PTR [rax+0x2],0x20
  40961b:	jle    40b7ab <main@@Base+0x6e5b>
  409621:	add    rax,0x2
  409625:	jmp    408158 <main@@Base+0x3808>
  40962a:	mov    rdi,r14
  40962d:	mov    rsi,r13
  409630:	mov    rdx,r15
  409633:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409638:	mov    r13,rax
  40963b:	cmp    r13,r15
  40963e:	je     40968a <main@@Base+0x4d3a>
  409640:	cmp    BYTE PTR [r13+0x0],0x3a
  409645:	jne    40968a <main@@Base+0x4d3a>
  409647:	lea    rbx,[r13+0x1]
  40964b:	mov    rax,r15
  40964e:	sub    rax,rbx
  409651:	cmp    rax,0x2
  409655:	jl     40a898 <main@@Base+0x5f48>
  40965b:	cmp    BYTE PTR [rbx],0x20
  40965e:	jg     40a8a9 <main@@Base+0x5f59>
  409664:	jne    40a898 <main@@Base+0x5f48>
  40966a:	cmp    BYTE PTR [r13+0x2],0x20
  40966f:	jle    40a898 <main@@Base+0x5f48>
  409675:	add    r13,0x2
  409679:	mov    rbx,r13
  40967c:	cmp    r12,rbx
  40967f:	jne    40a8b2 <main@@Base+0x5f62>
  409685:	jmp    40d1ba <main@@Base+0x886a>
  40968a:	mov    rdi,r14
  40968d:	mov    rsi,r13
  409690:	mov    rdx,r15
  409693:	mov    ecx,0x4
  409698:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40969d:	jmp    40a8a6 <main@@Base+0x5f56>
  4096a2:	mov    rdi,r14
  4096a5:	mov    rsi,r13
  4096a8:	mov    rdx,r15
  4096ab:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4096b0:	mov    r13,rax
  4096b3:	cmp    r13,r15
  4096b6:	je     40976a <main@@Base+0x4e1a>
  4096bc:	cmp    BYTE PTR [r13+0x0],0x3a
  4096c1:	jne    40976a <main@@Base+0x4e1a>
  4096c7:	lea    rbx,[r13+0x1]
  4096cb:	mov    rax,r15
  4096ce:	sub    rax,rbx
  4096d1:	cmp    rax,0x2
  4096d5:	jl     40a94b <main@@Base+0x5ffb>
  4096db:	cmp    BYTE PTR [rbx],0x20
  4096de:	jg     40a95c <main@@Base+0x600c>
  4096e4:	jne    40a94b <main@@Base+0x5ffb>
  4096ea:	cmp    BYTE PTR [r13+0x2],0x20
  4096ef:	jle    40a94b <main@@Base+0x5ffb>
  4096f5:	add    r13,0x2
  4096f9:	mov    rbx,r13
  4096fc:	cmp    r12,rbx
  4096ff:	jne    40a965 <main@@Base+0x6015>
  409705:	jmp    40d1ba <main@@Base+0x886a>
  40970a:	mov    rdi,r14
  40970d:	mov    rsi,r13
  409710:	mov    rdx,r15
  409713:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409718:	mov    r13,rax
  40971b:	cmp    r13,r15
  40971e:	je     409782 <main@@Base+0x4e32>
  409720:	cmp    BYTE PTR [r13+0x0],0x3a
  409725:	jne    409782 <main@@Base+0x4e32>
  409727:	lea    rbx,[r13+0x1]
  40972b:	mov    rax,r15
  40972e:	sub    rax,rbx
  409731:	cmp    rax,0x2
  409735:	jl     40aa15 <main@@Base+0x60c5>
  40973b:	cmp    BYTE PTR [rbx],0x20
  40973e:	jg     40aa26 <main@@Base+0x60d6>
  409744:	jne    40aa15 <main@@Base+0x60c5>
  40974a:	cmp    BYTE PTR [r13+0x2],0x20
  40974f:	jle    40aa15 <main@@Base+0x60c5>
  409755:	add    r13,0x2
  409759:	mov    rbx,r13
  40975c:	cmp    r12,rbx
  40975f:	jne    40aa2f <main@@Base+0x60df>
  409765:	jmp    40d1ba <main@@Base+0x886a>
  40976a:	mov    rdi,r14
  40976d:	mov    rsi,r13
  409770:	mov    rdx,r15
  409773:	mov    ecx,0x4
  409778:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40977d:	jmp    40a959 <main@@Base+0x6009>
  409782:	mov    rdi,r14
  409785:	mov    rsi,r13
  409788:	mov    rdx,r15
  40978b:	mov    ecx,0x4
  409790:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409795:	jmp    40aa23 <main@@Base+0x60d3>
  40979a:	mov    rbp,r15
  40979d:	jmp    407cf5 <main@@Base+0x33a5>
  4097a2:	cmp    cl,0x5d
  4097a5:	jne    40a5f6 <main@@Base+0x5ca6>
  4097ab:	lea    rbp,[rax+0x1]
  4097af:	mov    rcx,r15
  4097b2:	sub    rcx,rbp
  4097b5:	cmp    rcx,0x2
  4097b9:	jl     4097cb <main@@Base+0x4e7b>
  4097bb:	cmp    BYTE PTR [rbp+0x0],0x20
  4097bf:	jg     407cf5 <main@@Base+0x33a5>
  4097c5:	je     407d6d <main@@Base+0x341d>
  4097cb:	mov    rdi,r14
  4097ce:	mov    rsi,rbp
  4097d1:	mov    rdx,r15
  4097d4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4097d9:	jmp    407cf2 <main@@Base+0x33a2>
  4097de:	cmp    al,0x22
  4097e0:	jne    40d1ba <main@@Base+0x886a>
  4097e6:	add    r13,0x12
  4097ea:	mov    rax,r15
  4097ed:	sub    rax,r13
  4097f0:	cmp    rax,0x2
  4097f4:	jl     40990b <main@@Base+0x4fbb>
  4097fa:	cmp    BYTE PTR [r13+0x0],0x20
  4097ff:	jg     40991c <main@@Base+0x4fcc>
  409805:	jne    40990b <main@@Base+0x4fbb>
  40980b:	cmp    BYTE PTR [r13+0x1],0x20
  409810:	jle    40990b <main@@Base+0x4fbb>
  409816:	inc    r13
  409819:	cmp    r13,r15
  40981c:	jne    409921 <main@@Base+0x4fd1>
  409822:	jmp    409959 <main@@Base+0x5009>
  409827:	mov    rdi,r14
  40982a:	mov    rsi,r15
  40982d:	jmp    40a5fc <main@@Base+0x5cac>
  409832:	mov    rax,rbx
  409835:	jmp    40a582 <main@@Base+0x5c32>
  40983a:	mov    rdi,r14
  40983d:	mov    rsi,rbx
  409840:	mov    rdx,r15
  409843:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409848:	mov    rbx,rax
  40984b:	cmp    r12,rbx
  40984e:	je     40d1ba <main@@Base+0x886a>
  409854:	mov    DWORD PTR [rsp+0x1c],0x0
  40985c:	mov    rdi,QWORD PTR [r14]
  40985f:	mov    esi,0x3
  409864:	call   41af90 <flatcc_builder_start_table@@Base>
  409869:	test   eax,eax
  40986b:	jne    409f4f <main@@Base+0x55ff>
  409871:	cmp    rbx,r15
  409874:	je     409f2b <main@@Base+0x55db>
  40987a:	cmp    BYTE PTR [rbx],0x7b
  40987d:	jne    409f2b <main@@Base+0x55db>
  409883:	lea    rax,[rbx+0x1]
  409887:	mov    rcx,r15
  40988a:	sub    rcx,rax
  40988d:	cmp    rcx,0x2
  409891:	jl     40b546 <main@@Base+0x6bf6>
  409897:	cmp    BYTE PTR [rax],0x20
  40989a:	jg     40b554 <main@@Base+0x6c04>
  4098a0:	jne    40b546 <main@@Base+0x6bf6>
  4098a6:	cmp    BYTE PTR [rbx+0x2],0x20
  4098aa:	jle    40b546 <main@@Base+0x6bf6>
  4098b0:	add    rbx,0x2
  4098b4:	mov    rax,rbx
  4098b7:	jmp    40b554 <main@@Base+0x6c04>
  4098bc:	mov    rbp,r15
  4098bf:	jmp    40d1cb <main@@Base+0x887b>
  4098c4:	cmp    cl,0x7d
  4098c7:	jne    40a77a <main@@Base+0x5e2a>
  4098cd:	lea    rbp,[rax+0x1]
  4098d1:	mov    rcx,r15
  4098d4:	sub    rcx,rbp
  4098d7:	cmp    rcx,0x2
  4098db:	jl     4098f8 <main@@Base+0x4fa8>
  4098dd:	cmp    BYTE PTR [rbp+0x0],0x20
  4098e1:	jg     40d1cb <main@@Base+0x887b>
  4098e7:	jne    4098f8 <main@@Base+0x4fa8>
  4098e9:	cmp    BYTE PTR [rax+0x2],0x20
  4098ed:	jle    4098f8 <main@@Base+0x4fa8>
  4098ef:	add    rax,0x2
  4098f3:	jmp    40d1c8 <main@@Base+0x8878>
  4098f8:	mov    rdi,r14
  4098fb:	mov    rsi,rbp
  4098fe:	mov    rdx,r15
  409901:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409906:	jmp    40d1c8 <main@@Base+0x8878>
  40990b:	mov    rdi,r14
  40990e:	mov    rsi,r13
  409911:	mov    rdx,r15
  409914:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409919:	mov    r13,rax
  40991c:	cmp    r13,r15
  40991f:	je     409959 <main@@Base+0x5009>
  409921:	cmp    BYTE PTR [r13+0x0],0x3a
  409926:	jne    409959 <main@@Base+0x5009>
  409928:	lea    rcx,[r13+0x1]
  40992c:	mov    rax,r15
  40992f:	mov    rsi,rcx
  409932:	sub    rax,rcx
  409935:	cmp    rax,0x2
  409939:	jl     40bc9c <main@@Base+0x734c>
  40993f:	cmp    BYTE PTR [rsi],0x20
  409942:	jle    40bc85 <main@@Base+0x7335>
  409948:	mov    r13,rsi
  40994b:	cmp    r12,r13
  40994e:	jne    40bcb3 <main@@Base+0x7363>
  409954:	jmp    40d1ba <main@@Base+0x886a>
  409959:	mov    rdi,r14
  40995c:	mov    rsi,r13
  40995f:	mov    rdx,r15
  409962:	mov    ecx,0x4
  409967:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40996c:	jmp    40bca7 <main@@Base+0x7357>
  409971:	mov    rdi,r14
  409974:	mov    rsi,rbx
  409977:	mov    rdx,r15
  40997a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40997f:	mov    rbx,rax
  409982:	cmp    r12,rbx
  409985:	je     40d1ba <main@@Base+0x886a>
  40998b:	mov    rdi,QWORD PTR [r14]
  40998e:	call   41aba0 <flatcc_builder_start_offset_vector@@Base>
  409993:	test   eax,eax
  409995:	jne    404a01 <main@@Base+0xb1>
  40999b:	cmp    rbx,r15
  40999e:	je     4099de <main@@Base+0x508e>
  4099a0:	cmp    BYTE PTR [rbx],0x5b
  4099a3:	jne    4099de <main@@Base+0x508e>
  4099a5:	lea    rax,[rbx+0x1]
  4099a9:	mov    rcx,r15
  4099ac:	sub    rcx,rax
  4099af:	cmp    rcx,0x2
  4099b3:	jl     40a227 <main@@Base+0x58d7>
  4099b9:	cmp    BYTE PTR [rax],0x20
  4099bc:	jg     40a235 <main@@Base+0x58e5>
  4099c2:	jne    40a227 <main@@Base+0x58d7>
  4099c8:	cmp    BYTE PTR [rbx+0x2],0x20
  4099cc:	jle    40a227 <main@@Base+0x58d7>
  4099d2:	add    rbx,0x2
  4099d6:	mov    rax,rbx
  4099d9:	jmp    40a235 <main@@Base+0x58e5>
  4099de:	mov    rdi,r14
  4099e1:	mov    rsi,rbx
  4099e4:	mov    rdx,r15
  4099e7:	mov    ecx,0x16
  4099ec:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4099f1:	mov    rbp,rax
  4099f4:	mov    rdi,QWORD PTR [r14]
  4099f7:	call   41ad60 <flatcc_builder_end_offset_vector@@Base>
  4099fc:	mov    DWORD PTR [rsp+0x1c],eax
  409a00:	test   eax,eax
  409a02:	je     40da65 <main@@Base+0x9115>
  409a08:	mov    rdi,QWORD PTR [r14]
  409a0b:	mov    esi,0x1c
  409a10:	jmp    407d11 <main@@Base+0x33c1>
  409a15:	mov    rdi,r14
  409a18:	mov    rsi,rbx
  409a1b:	mov    rdx,r15
  409a1e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409a23:	mov    rbx,rax
  409a26:	cmp    r12,rbx
  409a29:	je     40d1ba <main@@Base+0x886a>
  409a2f:	mov    rdi,QWORD PTR [r14]
  409a32:	mov    esi,0x8
  409a37:	mov    ecx,0x1fffffff
  409a3c:	mov    edx,0x4
  409a41:	call   41ab20 <flatcc_builder_start_vector@@Base>
  409a46:	test   eax,eax
  409a48:	jne    404a01 <main@@Base+0xb1>
  409a4e:	cmp    rbx,r15
  409a51:	je     409a91 <main@@Base+0x5141>
  409a53:	cmp    BYTE PTR [rbx],0x5b
  409a56:	jne    409a91 <main@@Base+0x5141>
  409a58:	lea    rax,[rbx+0x1]
  409a5c:	mov    rcx,r15
  409a5f:	sub    rcx,rax
  409a62:	cmp    rcx,0x2
  409a66:	jl     40a281 <main@@Base+0x5931>
  409a6c:	cmp    BYTE PTR [rax],0x20
  409a6f:	jg     40a28f <main@@Base+0x593f>
  409a75:	jne    40a281 <main@@Base+0x5931>
  409a7b:	cmp    BYTE PTR [rbx+0x2],0x20
  409a7f:	jle    40a281 <main@@Base+0x5931>
  409a85:	add    rbx,0x2
  409a89:	mov    rax,rbx
  409a8c:	jmp    40a28f <main@@Base+0x593f>
  409a91:	mov    rdi,r14
  409a94:	mov    rsi,rbx
  409a97:	mov    rdx,r15
  409a9a:	mov    ecx,0x16
  409a9f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409aa4:	mov    rbp,rax
  409aa7:	mov    rdi,QWORD PTR [r14]
  409aaa:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  409aaf:	mov    DWORD PTR [rsp+0x1c],eax
  409ab3:	test   eax,eax
  409ab5:	je     40da65 <main@@Base+0x9115>
  409abb:	mov    rdi,QWORD PTR [r14]
  409abe:	mov    esi,0x1d
  409ac3:	jmp    407d11 <main@@Base+0x33c1>
  409ac8:	mov    rdi,r14
  409acb:	mov    rsi,rbx
  409ace:	mov    rdx,r15
  409ad1:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409ad6:	mov    rbx,rax
  409ad9:	cmp    r12,rbx
  409adc:	je     40d1ba <main@@Base+0x886a>
  409ae2:	mov    rdi,QWORD PTR [r14]
  409ae5:	call   41aba0 <flatcc_builder_start_offset_vector@@Base>
  409aea:	test   eax,eax
  409aec:	jne    404a01 <main@@Base+0xb1>
  409af2:	cmp    rbx,r15
  409af5:	je     409b35 <main@@Base+0x51e5>
  409af7:	cmp    BYTE PTR [rbx],0x5b
  409afa:	jne    409b35 <main@@Base+0x51e5>
  409afc:	lea    rax,[rbx+0x1]
  409b00:	mov    rcx,r15
  409b03:	sub    rcx,rax
  409b06:	cmp    rcx,0x2
  409b0a:	jl     40a2db <main@@Base+0x598b>
  409b10:	cmp    BYTE PTR [rax],0x20
  409b13:	jg     40a2e9 <main@@Base+0x5999>
  409b19:	jne    40a2db <main@@Base+0x598b>
  409b1f:	cmp    BYTE PTR [rbx+0x2],0x20
  409b23:	jle    40a2db <main@@Base+0x598b>
  409b29:	add    rbx,0x2
  409b2d:	mov    rax,rbx
  409b30:	jmp    40a2e9 <main@@Base+0x5999>
  409b35:	mov    rdi,r14
  409b38:	mov    rsi,rbx
  409b3b:	mov    rdx,r15
  409b3e:	mov    ecx,0x16
  409b43:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409b48:	mov    rbp,rax
  409b4b:	mov    rdi,QWORD PTR [r14]
  409b4e:	call   41ad60 <flatcc_builder_end_offset_vector@@Base>
  409b53:	mov    DWORD PTR [rsp+0x1c],eax
  409b57:	test   eax,eax
  409b59:	je     40da65 <main@@Base+0x9115>
  409b5f:	mov    rdi,QWORD PTR [r14]
  409b62:	mov    esi,0xb
  409b67:	jmp    407d11 <main@@Base+0x33c1>
  409b6c:	mov    rdi,r14
  409b6f:	mov    rsi,r15
  409b72:	jmp    40a780 <main@@Base+0x5e30>
  409b77:	mov    rdi,r14
  409b7a:	mov    rsi,rbx
  409b7d:	mov    rdx,r15
  409b80:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409b85:	mov    rbx,rax
  409b88:	cmp    r13,rbx
  409b8b:	je     409d41 <main@@Base+0x53f1>
  409b91:	mov    QWORD PTR [rsp+0x10],0x0
  409b9a:	mov    DWORD PTR [rsp+0x20],0x0
  409ba2:	mov    WORD PTR [rsp+0x4],0x0
  409ba9:	cmp    rbx,r15
  409bac:	je     409bf0 <main@@Base+0x52a0>
  409bae:	mov    rdi,r14
  409bb1:	mov    rsi,rbx
  409bb4:	mov    rdx,r15
  409bb7:	lea    rcx,[rsp+0x20]
  409bbc:	lea    r8,[rsp+0x10]
  409bc1:	call   41fec0 <flatcc_json_parser_integer@@Base>
  409bc6:	cmp    rax,rbx
  409bc9:	je     409bf8 <main@@Base+0x52a8>
  409bcb:	mov    r12,QWORD PTR [rsp+0x10]
  409bd0:	cmp    DWORD PTR [rsp+0x20],0x0
  409bd5:	je     409c00 <main@@Base+0x52b0>
  409bd7:	cmp    r12,0x8001
  409bde:	jb     409c21 <main@@Base+0x52d1>
  409be0:	mov    rdi,r14
  409be3:	mov    rsi,rax
  409be6:	mov    rdx,r15
  409be9:	mov    ecx,0x8
  409bee:	jmp    409c17 <main@@Base+0x52c7>
  409bf0:	xor    r12d,r12d
  409bf3:	mov    rax,r15
  409bf6:	jmp    409c2a <main@@Base+0x52da>
  409bf8:	xor    r12d,r12d
  409bfb:	mov    rax,rbx
  409bfe:	jmp    409c2a <main@@Base+0x52da>
  409c00:	cmp    r12,0x8000
  409c07:	jb     409c24 <main@@Base+0x52d4>
  409c09:	mov    rdi,r14
  409c0c:	mov    rsi,rax
  409c0f:	mov    rdx,r15
  409c12:	mov    ecx,0x7
  409c17:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409c1c:	xor    r12d,r12d
  409c1f:	jmp    409c2a <main@@Base+0x52da>
  409c21:	neg    r12
  409c24:	mov    WORD PTR [rsp+0x4],r12w
  409c2a:	mov    rbp,rax
  409c2d:	cmp    rbx,rax
  409c30:	jne    409c67 <main@@Base+0x5317>
  409c32:	mov    rdi,r14
  409c35:	mov    rsi,rbx
  409c38:	mov    rdx,r15
  409c3b:	lea    rcx,[rip+0x1f51e]        # 429160 <filename@@Base+0x90>
  409c42:	lea    r8,[rsp+0x4]
  409c47:	call   40f2c0 <main@@Base+0xa970>
  409c4c:	mov    rbp,rax
  409c4f:	cmp    rax,rbx
  409c52:	je     40da65 <main@@Base+0x9115>
  409c58:	cmp    rbp,r15
  409c5b:	je     40da65 <main@@Base+0x9115>
  409c61:	movzx  r12d,WORD PTR [rsp+0x4]
  409c67:	movzx  eax,r12w
  409c6b:	cmp    eax,0x96
  409c70:	jne    409c7d <main@@Base+0x532d>
  409c72:	test   BYTE PTR [r14+0x10],0x2
  409c77:	je     40d1cb <main@@Base+0x887b>
  409c7d:	mov    rdi,QWORD PTR [r14]
  409c80:	mov    edx,0x2
  409c85:	mov    esi,0x1
  409c8a:	mov    ecx,0x2
  409c8f:	call   41c310 <flatcc_builder_table_add@@Base>
  409c94:	test   rax,rax
  409c97:	je     40da65 <main@@Base+0x9115>
  409c9d:	mov    WORD PTR [rax],r12w
  409ca1:	jmp    40d1cb <main@@Base+0x887b>
  409ca6:	mov    rdi,r14
  409ca9:	mov    rsi,rbx
  409cac:	mov    rdx,r15
  409caf:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409cb4:	mov    rbx,rax
  409cb7:	cmp    r13,rbx
  409cba:	je     409d41 <main@@Base+0x53f1>
  409cc0:	mov    DWORD PTR [rsp+0x10],0x0
  409cc8:	mov    rdi,r14
  409ccb:	mov    rsi,rbx
  409cce:	mov    rdx,r15
  409cd1:	lea    rcx,[rsp+0x10]
  409cd6:	call   41fda0 <flatcc_json_parser_float@@Base>
  409cdb:	mov    rbp,rax
  409cde:	cmp    rbx,rax
  409ce1:	jne    409d12 <main@@Base+0x53c2>
  409ce3:	mov    rdi,r14
  409ce6:	mov    rsi,rbx
  409ce9:	mov    rdx,r15
  409cec:	lea    rcx,[rip+0x1f50d]        # 429200 <filename@@Base+0x130>
  409cf3:	lea    r8,[rsp+0x10]
  409cf8:	call   412ef0 <main@@Base+0xe5a0>
  409cfd:	mov    rbp,rax
  409d00:	cmp    rax,rbx
  409d03:	je     40da65 <main@@Base+0x9115>
  409d09:	cmp    rbp,r15
  409d0c:	je     40da65 <main@@Base+0x9115>
  409d12:	vmovss xmm0,DWORD PTR [rsp+0x10]
  409d18:	vucomiss xmm0,DWORD PTR [rip+0x182f0]        # 422010 <_IO_stdin_used@@Base+0x10>
  409d20:	jne    409d2f <main@@Base+0x53df>
  409d22:	jp     409d2f <main@@Base+0x53df>
  409d24:	test   BYTE PTR [r14+0x10],0x2
  409d29:	je     40d1cb <main@@Base+0x887b>
  409d2f:	mov    rdi,QWORD PTR [r14]
  409d32:	mov    edx,0x4
  409d37:	mov    esi,0x19
  409d3c:	jmp    4066de <main@@Base+0x1d8e>
  409d41:	mov    rdi,r14
  409d44:	mov    rsi,r13
  409d47:	jmp    40d1c0 <main@@Base+0x8870>
  409d4c:	mov    rdi,r14
  409d4f:	mov    rsi,rcx
  409d52:	mov    rdx,r15
  409d55:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409d5a:	mov    rcx,rax
  409d5d:	cmp    r12,rcx
  409d60:	je     4078fd <main@@Base+0x2fad>
  409d66:	mov    QWORD PTR [rsp+0x10],0x0
  409d6f:	mov    DWORD PTR [rsp+0x4],0x0
  409d77:	mov    QWORD PTR [rsp+0x20],0x0
  409d80:	cmp    rcx,r15
  409d83:	je     409dec <main@@Base+0x549c>
  409d85:	mov    rdi,r14
  409d88:	mov    rsi,rcx
  409d8b:	mov    rbp,rcx
  409d8e:	mov    rdx,r15
  409d91:	lea    rcx,[rsp+0x4]
  409d96:	lea    r8,[rsp+0x10]
  409d9b:	call   41fec0 <flatcc_json_parser_integer@@Base>
  409da0:	mov    rcx,rbp
  409da3:	cmp    rax,rbp
  409da6:	je     40a65b <main@@Base+0x5d0b>
  409dac:	mov    rbx,QWORD PTR [rsp+0x10]
  409db1:	cmp    DWORD PTR [rsp+0x4],0x0
  409db6:	je     40aae0 <main@@Base+0x6190>
  409dbc:	movabs rcx,0x8000000000000000
  409dc6:	cmp    rbx,rcx
  409dc9:	jbe    40ab59 <main@@Base+0x6209>
  409dcf:	mov    rdi,r14
  409dd2:	mov    rsi,rax
  409dd5:	mov    rdx,r15
  409dd8:	mov    ecx,0x8
  409ddd:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409de2:	xor    ebx,ebx
  409de4:	mov    rcx,rbp
  409de7:	jmp    40ab64 <main@@Base+0x6214>
  409dec:	xor    ebx,ebx
  409dee:	mov    rax,r15
  409df1:	jmp    40ab64 <main@@Base+0x6214>
  409df6:	mov    rdi,r14
  409df9:	mov    rsi,rbx
  409dfc:	mov    rdx,r15
  409dff:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409e04:	mov    rbx,rax
  409e07:	cmp    r12,rbx
  409e0a:	je     40d1ba <main@@Base+0x886a>
  409e10:	mov    DWORD PTR [rsp+0x1c],0x0
  409e18:	mov    rdi,QWORD PTR [r14]
  409e1b:	mov    esi,0x3
  409e20:	call   41af90 <flatcc_builder_start_table@@Base>
  409e25:	test   eax,eax
  409e27:	jne    40a359 <main@@Base+0x5a09>
  409e2d:	cmp    rbx,r15
  409e30:	je     40a335 <main@@Base+0x59e5>
  409e36:	cmp    BYTE PTR [rbx],0x7b
  409e39:	jne    40a335 <main@@Base+0x59e5>
  409e3f:	lea    rax,[rbx+0x1]
  409e43:	mov    rcx,r15
  409e46:	sub    rcx,rax
  409e49:	cmp    rcx,0x2
  409e4d:	jl     40b96a <main@@Base+0x701a>
  409e53:	cmp    BYTE PTR [rax],0x20
  409e56:	jg     40b978 <main@@Base+0x7028>
  409e5c:	jne    40b96a <main@@Base+0x701a>
  409e62:	cmp    BYTE PTR [rbx+0x2],0x20
  409e66:	jle    40b96a <main@@Base+0x701a>
  409e6c:	add    rbx,0x2
  409e70:	mov    rax,rbx
  409e73:	jmp    40b978 <main@@Base+0x7028>
  409e78:	mov    rdi,r14
  409e7b:	mov    rsi,rbx
  409e7e:	mov    rdx,r15
  409e81:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409e86:	mov    rbx,rax
  409e89:	cmp    r12,rbx
  409e8c:	je     40d1ba <main@@Base+0x886a>
  409e92:	mov    rdi,QWORD PTR [r14]
  409e95:	mov    esi,0x1
  409e9a:	mov    ecx,0xffffffff
  409e9f:	mov    edx,0x1
  409ea4:	call   41ab20 <flatcc_builder_start_vector@@Base>
  409ea9:	test   eax,eax
  409eab:	jne    404a01 <main@@Base+0xb1>
  409eb1:	cmp    rbx,r15
  409eb4:	je     409ef4 <main@@Base+0x55a4>
  409eb6:	cmp    BYTE PTR [rbx],0x5b
  409eb9:	jne    409ef4 <main@@Base+0x55a4>
  409ebb:	lea    rax,[rbx+0x1]
  409ebf:	mov    rcx,r15
  409ec2:	sub    rcx,rax
  409ec5:	cmp    rcx,0x2
  409ec9:	jl     40a836 <main@@Base+0x5ee6>
  409ecf:	cmp    BYTE PTR [rax],0x20
  409ed2:	jg     40a844 <main@@Base+0x5ef4>
  409ed8:	jne    40a836 <main@@Base+0x5ee6>
  409ede:	cmp    BYTE PTR [rbx+0x2],0x20
  409ee2:	jle    40a836 <main@@Base+0x5ee6>
  409ee8:	add    rbx,0x2
  409eec:	mov    rax,rbx
  409eef:	jmp    40a844 <main@@Base+0x5ef4>
  409ef4:	mov    rdi,r14
  409ef7:	mov    rsi,rbx
  409efa:	mov    rdx,r15
  409efd:	mov    ecx,0x16
  409f02:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409f07:	mov    rbp,rax
  409f0a:	mov    rdi,QWORD PTR [r14]
  409f0d:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  409f12:	mov    DWORD PTR [rsp+0x1c],eax
  409f16:	test   eax,eax
  409f18:	je     40da65 <main@@Base+0x9115>
  409f1e:	mov    rdi,QWORD PTR [r14]
  409f21:	mov    esi,0x5
  409f26:	jmp    407d11 <main@@Base+0x33c1>
  409f2b:	mov    rdi,r14
  409f2e:	mov    rsi,rbx
  409f31:	mov    rdx,r15
  409f34:	mov    ecx,0x15
  409f39:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409f3e:	mov    rbp,rax
  409f41:	cmp    DWORD PTR [r14+0x20],0x0
  409f46:	je     40d3a1 <main@@Base+0x8a51>
  409f4c:	mov    rbx,rbp
  409f4f:	mov    rdi,r14
  409f52:	mov    rsi,rbx
  409f55:	mov    rdx,r15
  409f58:	mov    ecx,0x21
  409f5d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  409f62:	mov    rbp,rax
  409f65:	cmp    DWORD PTR [rsp+0x1c],0x0
  409f6a:	mov    rbx,rax
  409f6d:	je     404a01 <main@@Base+0xb1>
  409f73:	mov    rdi,QWORD PTR [r14]
  409f76:	mov    esi,0x23
  409f7b:	jmp    407d11 <main@@Base+0x33c1>
  409f80:	mov    rdi,r14
  409f83:	mov    rsi,rbp
  409f86:	mov    rdx,r15
  409f89:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  409f8e:	mov    rbp,rax
  409f91:	cmp    r12,rbp
  409f94:	je     40d1ba <main@@Base+0x886a>
  409f9a:	mov    DWORD PTR [rsp+0x1c],0x0
  409fa2:	mov    rdi,QWORD PTR [r14]
  409fa5:	xor    esi,esi
  409fa7:	call   41af90 <flatcc_builder_start_table@@Base>
  409fac:	test   eax,eax
  409fae:	jne    40a62a <main@@Base+0x5cda>
  409fb4:	cmp    rbp,r15
  409fb7:	je     40a609 <main@@Base+0x5cb9>
  409fbd:	cmp    BYTE PTR [rbp+0x0],0x7b
  409fc1:	jne    40a609 <main@@Base+0x5cb9>
  409fc7:	lea    rax,[rbp+0x1]
  409fcb:	mov    rcx,r15
  409fce:	sub    rcx,rax
  409fd1:	cmp    rcx,0x2
  409fd5:	jl     40b9c4 <main@@Base+0x7074>
  409fdb:	cmp    BYTE PTR [rax],0x20
  409fde:	jg     40b9d2 <main@@Base+0x7082>
  409fe4:	jne    40b9c4 <main@@Base+0x7074>
  409fea:	cmp    BYTE PTR [rbp+0x2],0x20
  409fee:	jle    40b9c4 <main@@Base+0x7074>
  409ff4:	mov    rax,rbp
  409ff7:	add    rax,0x2
  409ffb:	jmp    40b9d2 <main@@Base+0x7082>
  40a000:	cmp    al,0x22
  40a002:	jne    40d1ba <main@@Base+0x886a>
  40a008:	add    r13,0x12
  40a00c:	mov    rax,r15
  40a00f:	sub    rax,r13
  40a012:	cmp    rax,0x2
  40a016:	jl     40a0ba <main@@Base+0x576a>
  40a01c:	cmp    BYTE PTR [r13+0x0],0x20
  40a021:	jg     40a0cb <main@@Base+0x577b>
  40a027:	jne    40a0ba <main@@Base+0x576a>
  40a02d:	cmp    BYTE PTR [r13+0x1],0x20
  40a032:	jle    40a0ba <main@@Base+0x576a>
  40a038:	inc    r13
  40a03b:	cmp    r13,r15
  40a03e:	jne    40a0d4 <main@@Base+0x5784>
  40a044:	jmp    40a15a <main@@Base+0x580a>
  40a049:	cmp    al,0x22
  40a04b:	jne    40d1ba <main@@Base+0x886a>
  40a051:	add    r13,0x12
  40a055:	mov    rax,r15
  40a058:	sub    rax,r13
  40a05b:	cmp    rax,0x2
  40a05f:	jl     40a10c <main@@Base+0x57bc>
  40a065:	cmp    BYTE PTR [r13+0x0],0x20
  40a06a:	jg     40a11d <main@@Base+0x57cd>
  40a070:	jne    40a10c <main@@Base+0x57bc>
  40a076:	cmp    BYTE PTR [r13+0x1],0x20
  40a07b:	jle    40a10c <main@@Base+0x57bc>
  40a081:	inc    r13
  40a084:	cmp    r13,r15
  40a087:	jne    40a122 <main@@Base+0x57d2>
  40a08d:	jmp    40a172 <main@@Base+0x5822>
  40a092:	test   rcx,0xffffffff80000000
  40a099:	je     40a57b <main@@Base+0x5c2b>
  40a09f:	mov    rdi,r14
  40a0a2:	mov    rsi,rax
  40a0a5:	mov    rdx,r15
  40a0a8:	mov    ecx,0x7
  40a0ad:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a0b2:	mov    rbx,rbp
  40a0b5:	jmp    40a582 <main@@Base+0x5c32>
  40a0ba:	mov    rdi,r14
  40a0bd:	mov    rsi,r13
  40a0c0:	mov    rdx,r15
  40a0c3:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a0c8:	mov    r13,rax
  40a0cb:	cmp    r13,r15
  40a0ce:	je     40a15a <main@@Base+0x580a>
  40a0d4:	cmp    BYTE PTR [r13+0x0],0x3a
  40a0d9:	jne    40a15a <main@@Base+0x580a>
  40a0db:	lea    rcx,[r13+0x1]
  40a0df:	mov    rax,r15
  40a0e2:	mov    rsi,rcx
  40a0e5:	sub    rax,rcx
  40a0e8:	cmp    rax,0x2
  40a0ec:	jl     40d0e9 <main@@Base+0x8799>
  40a0f2:	cmp    BYTE PTR [rsi],0x20
  40a0f5:	jle    40d0d2 <main@@Base+0x8782>
  40a0fb:	mov    r13,rsi
  40a0fe:	cmp    r12,r13
  40a101:	jne    40d100 <main@@Base+0x87b0>
  40a107:	jmp    40d1ba <main@@Base+0x886a>
  40a10c:	mov    rdi,r14
  40a10f:	mov    rsi,r13
  40a112:	mov    rdx,r15
  40a115:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a11a:	mov    r13,rax
  40a11d:	cmp    r13,r15
  40a120:	je     40a172 <main@@Base+0x5822>
  40a122:	cmp    BYTE PTR [r13+0x0],0x3a
  40a127:	jne    40a172 <main@@Base+0x5822>
  40a129:	lea    rcx,[r13+0x1]
  40a12d:	mov    rax,r15
  40a130:	mov    rsi,rcx
  40a133:	sub    rax,rcx
  40a136:	cmp    rax,0x2
  40a13a:	jl     40d27a <main@@Base+0x892a>
  40a140:	cmp    BYTE PTR [rsi],0x20
  40a143:	jle    40d19c <main@@Base+0x884c>
  40a149:	mov    r13,rsi
  40a14c:	cmp    r12,r13
  40a14f:	jne    40d291 <main@@Base+0x8941>
  40a155:	jmp    40d1ba <main@@Base+0x886a>
  40a15a:	mov    rdi,r14
  40a15d:	mov    rsi,r13
  40a160:	mov    rdx,r15
  40a163:	mov    ecx,0x4
  40a168:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a16d:	jmp    40d0f4 <main@@Base+0x87a4>
  40a172:	mov    rdi,r14
  40a175:	mov    rsi,r13
  40a178:	mov    rdx,r15
  40a17b:	mov    ecx,0x4
  40a180:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a185:	jmp    40d285 <main@@Base+0x8935>
  40a18a:	mov    rdi,r14
  40a18d:	mov    rdx,r15
  40a190:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a195:	mov    r13,rax
  40a198:	cmp    r12,r13
  40a19b:	je     40d1ba <main@@Base+0x886a>
  40a1a1:	mov    QWORD PTR [rsp+0x10],0x0
  40a1aa:	mov    DWORD PTR [rsp+0x20],0x0
  40a1b2:	mov    DWORD PTR [rsp+0x4],0x0
  40a1ba:	xor    ebx,ebx
  40a1bc:	cmp    r13,r15
  40a1bf:	je     40a21f <main@@Base+0x58cf>
  40a1c1:	mov    rdi,r14
  40a1c4:	mov    rsi,r13
  40a1c7:	mov    rdx,r15
  40a1ca:	lea    rcx,[rsp+0x20]
  40a1cf:	lea    r8,[rsp+0x10]
  40a1d4:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40a1d9:	cmp    rax,r13
  40a1dc:	je     40a890 <main@@Base+0x5f40>
  40a1e2:	mov    rcx,QWORD PTR [rsp+0x10]
  40a1e7:	cmp    DWORD PTR [rsp+0x20],0x0
  40a1ec:	je     40b521 <main@@Base+0x6bd1>
  40a1f2:	mov    edx,0xffffffff
  40a1f7:	add    rdx,0xffffffff80000001
  40a1fe:	cmp    rcx,rdx
  40a201:	jbe    40b718 <main@@Base+0x6dc8>
  40a207:	mov    rdi,r14
  40a20a:	mov    rsi,rax
  40a20d:	mov    rdx,r15
  40a210:	mov    ecx,0x8
  40a215:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a21a:	jmp    40b721 <main@@Base+0x6dd1>
  40a21f:	mov    rax,r15
  40a222:	jmp    40b721 <main@@Base+0x6dd1>
  40a227:	mov    rdi,r14
  40a22a:	mov    rsi,rax
  40a22d:	mov    rdx,r15
  40a230:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a235:	mov    rsi,r15
  40a238:	cmp    rax,r15
  40a23b:	je     40abc8 <main@@Base+0x6278>
  40a241:	cmp    BYTE PTR [rax],0x5d
  40a244:	jne    40abc5 <main@@Base+0x6275>
  40a24a:	lea    rbp,[rax+0x1]
  40a24e:	mov    rcx,r15
  40a251:	sub    rcx,rbp
  40a254:	cmp    rcx,0x2
  40a258:	jl     40c81e <main@@Base+0x7ece>
  40a25e:	cmp    BYTE PTR [rbp+0x0],0x20
  40a262:	jg     4099f4 <main@@Base+0x50a4>
  40a268:	jne    40c81e <main@@Base+0x7ece>
  40a26e:	cmp    BYTE PTR [rax+0x2],0x20
  40a272:	jle    40c81e <main@@Base+0x7ece>
  40a278:	add    rax,0x2
  40a27c:	jmp    4099f1 <main@@Base+0x50a1>
  40a281:	mov    rdi,r14
  40a284:	mov    rsi,rax
  40a287:	mov    rdx,r15
  40a28a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a28f:	mov    rbx,r15
  40a292:	cmp    rax,r15
  40a295:	je     40acd8 <main@@Base+0x6388>
  40a29b:	cmp    BYTE PTR [rax],0x5d
  40a29e:	jne    40acd5 <main@@Base+0x6385>
  40a2a4:	lea    rbp,[rax+0x1]
  40a2a8:	mov    rcx,r15
  40a2ab:	sub    rcx,rbp
  40a2ae:	cmp    rcx,0x2
  40a2b2:	jl     40c448 <main@@Base+0x7af8>
  40a2b8:	cmp    BYTE PTR [rbp+0x0],0x20
  40a2bc:	jg     409aa7 <main@@Base+0x5157>
  40a2c2:	jne    40c448 <main@@Base+0x7af8>
  40a2c8:	cmp    BYTE PTR [rax+0x2],0x20
  40a2cc:	jle    40c448 <main@@Base+0x7af8>
  40a2d2:	add    rax,0x2
  40a2d6:	jmp    409aa4 <main@@Base+0x5154>
  40a2db:	mov    rdi,r14
  40a2de:	mov    rsi,rax
  40a2e1:	mov    rdx,r15
  40a2e4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a2e9:	mov    rsi,r15
  40a2ec:	cmp    rax,r15
  40a2ef:	je     40b414 <main@@Base+0x6ac4>
  40a2f5:	cmp    BYTE PTR [rax],0x5d
  40a2f8:	jne    40b411 <main@@Base+0x6ac1>
  40a2fe:	lea    rbp,[rax+0x1]
  40a302:	mov    rcx,r15
  40a305:	sub    rcx,rbp
  40a308:	cmp    rcx,0x2
  40a30c:	jl     40c867 <main@@Base+0x7f17>
  40a312:	cmp    BYTE PTR [rbp+0x0],0x20
  40a316:	jg     409b4b <main@@Base+0x51fb>
  40a31c:	jne    40c867 <main@@Base+0x7f17>
  40a322:	cmp    BYTE PTR [rax+0x2],0x20
  40a326:	jle    40c867 <main@@Base+0x7f17>
  40a32c:	add    rax,0x2
  40a330:	jmp    409b48 <main@@Base+0x51f8>
  40a335:	mov    rdi,r14
  40a338:	mov    rsi,rbx
  40a33b:	mov    rdx,r15
  40a33e:	mov    ecx,0x15
  40a343:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a348:	mov    rbp,rax
  40a34b:	cmp    DWORD PTR [r14+0x20],0x0
  40a350:	je     40d73f <main@@Base+0x8def>
  40a356:	mov    rbx,rbp
  40a359:	mov    rdi,r14
  40a35c:	mov    rsi,rbx
  40a35f:	mov    rdx,r15
  40a362:	mov    ecx,0x21
  40a367:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a36c:	mov    rbx,rax
  40a36f:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a374:	mov    rbp,rax
  40a377:	je     404a01 <main@@Base+0xb1>
  40a37d:	mov    rdi,QWORD PTR [r14]
  40a380:	mov    esi,0xe
  40a385:	jmp    407d11 <main@@Base+0x33c1>
  40a38a:	mov    rbx,rax
  40a38d:	mov    BYTE PTR [rsp+0x4],0x0
  40a392:	mov    rdi,QWORD PTR [r14]
  40a395:	mov    esi,0x1
  40a39a:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40a39f:	test   rax,rax
  40a3a2:	je     404a01 <main@@Base+0xb1>
  40a3a8:	mov    rbp,rax
  40a3ab:	mov    rax,r15
  40a3ae:	sub    rax,rbx
  40a3b1:	cmp    rax,0x4
  40a3b5:	jl     40a3dd <main@@Base+0x5a8d>
  40a3b7:	cmp    DWORD PTR [rbx],0x65757274
  40a3bd:	je     40a42e <main@@Base+0x5ade>
  40a3bf:	cmp    rax,0x5
  40a3c3:	jl     40a3dd <main@@Base+0x5a8d>
  40a3c5:	mov    eax,DWORD PTR [rbx]
  40a3c7:	mov    ecx,0x736c6166
  40a3cc:	xor    eax,ecx
  40a3ce:	movzx  ecx,BYTE PTR [rbx+0x4]
  40a3d2:	xor    ecx,0x65
  40a3d5:	or     ecx,eax
  40a3d7:	je     40a55f <main@@Base+0x5c0f>
  40a3dd:	mov    QWORD PTR [rsp+0x10],0x0
  40a3e6:	mov    DWORD PTR [rsp+0x20],0x0
  40a3ee:	cmp    rbx,r15
  40a3f1:	je     40a427 <main@@Base+0x5ad7>
  40a3f3:	mov    rdi,r14
  40a3f6:	mov    rsi,rbx
  40a3f9:	mov    rdx,r15
  40a3fc:	lea    rcx,[rsp+0x20]
  40a401:	lea    r8,[rsp+0x10]
  40a406:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40a40b:	cmp    rax,rbx
  40a40e:	je     40a440 <main@@Base+0x5af0>
  40a410:	cmp    DWORD PTR [rsp+0x20],0x0
  40a415:	je     40a447 <main@@Base+0x5af7>
  40a417:	mov    rdi,r14
  40a41a:	mov    rsi,rax
  40a41d:	mov    rdx,r15
  40a420:	mov    ecx,0x8
  40a425:	jmp    40a463 <main@@Base+0x5b13>
  40a427:	xor    ecx,ecx
  40a429:	mov    rax,r15
  40a42c:	jmp    40a46a <main@@Base+0x5b1a>
  40a42e:	mov    BYTE PTR [rsp+0x4],0x1
  40a433:	lea    rax,[rbx+0x4]
  40a437:	mov    cl,0x1
  40a439:	cmp    rbx,rax
  40a43c:	jne    40a4aa <main@@Base+0x5b5a>
  40a43e:	jmp    40a479 <main@@Base+0x5b29>
  40a440:	xor    ecx,ecx
  40a442:	mov    rax,rbx
  40a445:	jmp    40a46a <main@@Base+0x5b1a>
  40a447:	mov    rcx,QWORD PTR [rsp+0x10]
  40a44c:	cmp    rcx,0x100
  40a453:	jb     40a46a <main@@Base+0x5b1a>
  40a455:	mov    rdi,r14
  40a458:	mov    rsi,rax
  40a45b:	mov    rdx,r15
  40a45e:	mov    ecx,0x7
  40a463:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a468:	xor    ecx,ecx
  40a46a:	test   cl,cl
  40a46c:	setne  cl
  40a46f:	setne  BYTE PTR [rsp+0x4]
  40a474:	cmp    rbx,rax
  40a477:	jne    40a4aa <main@@Base+0x5b5a>
  40a479:	mov    rdi,r14
  40a47c:	mov    rsi,rbx
  40a47f:	mov    rdx,r15
  40a482:	lea    rcx,[rip+0x1ed17]        # 4291a0 <filename@@Base+0xd0>
  40a489:	lea    r8,[rsp+0x4]
  40a48e:	call   412d10 <main@@Base+0xe3c0>
  40a493:	cmp    rax,rbx
  40a496:	je     40da93 <main@@Base+0x9143>
  40a49c:	cmp    rax,r15
  40a49f:	je     40da93 <main@@Base+0x9143>
  40a4a5:	movzx  ecx,BYTE PTR [rsp+0x4]
  40a4aa:	mov    BYTE PTR [rbp+0x0],cl
  40a4ad:	mov    rcx,r15
  40a4b0:	sub    rcx,rax
  40a4b3:	cmp    rcx,0x2
  40a4b7:	jl     40a4d3 <main@@Base+0x5b83>
  40a4b9:	cmp    BYTE PTR [rax],0x20
  40a4bc:	jg     40a4e1 <main@@Base+0x5b91>
  40a4be:	jne    40a4d3 <main@@Base+0x5b83>
  40a4c0:	cmp    BYTE PTR [rax+0x1],0x20
  40a4c4:	jle    40a4d3 <main@@Base+0x5b83>
  40a4c6:	inc    rax
  40a4c9:	cmp    rax,r15
  40a4cc:	jne    40a4ea <main@@Base+0x5b9a>
  40a4ce:	jmp    40b5a0 <main@@Base+0x6c50>
  40a4d3:	mov    rdi,r14
  40a4d6:	mov    rsi,rax
  40a4d9:	mov    rdx,r15
  40a4dc:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a4e1:	cmp    rax,r15
  40a4e4:	je     40b5a0 <main@@Base+0x6c50>
  40a4ea:	movzx  ecx,BYTE PTR [rax]
  40a4ed:	cmp    cl,0x2c
  40a4f0:	jne    40b602 <main@@Base+0x6cb2>
  40a4f6:	lea    rbx,[rax+0x1]
  40a4fa:	mov    rcx,r15
  40a4fd:	sub    rcx,rbx
  40a500:	cmp    rcx,0x2
  40a504:	jl     40a519 <main@@Base+0x5bc9>
  40a506:	cmp    BYTE PTR [rbx],0x20
  40a509:	jg     40a52a <main@@Base+0x5bda>
  40a50b:	jne    40a519 <main@@Base+0x5bc9>
  40a50d:	cmp    BYTE PTR [rax+0x2],0x20
  40a511:	jle    40a519 <main@@Base+0x5bc9>
  40a513:	add    rax,0x2
  40a517:	jmp    40a527 <main@@Base+0x5bd7>
  40a519:	mov    rdi,r14
  40a51c:	mov    rsi,rbx
  40a51f:	mov    rdx,r15
  40a522:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a527:	mov    rbx,rax
  40a52a:	cmp    rbx,r15
  40a52d:	je     40b613 <main@@Base+0x6cc3>
  40a533:	cmp    BYTE PTR [rbx],0x5d
  40a536:	je     40b77d <main@@Base+0x6e2d>
  40a53c:	mov    BYTE PTR [rsp+0x4],0x0
  40a541:	mov    rdi,QWORD PTR [r14]
  40a544:	mov    esi,0x1
  40a549:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40a54e:	mov    rbp,rax
  40a551:	test   rax,rax
  40a554:	jne    40a3ab <main@@Base+0x5a5b>
  40a55a:	jmp    404a01 <main@@Base+0xb1>
  40a55f:	mov    BYTE PTR [rsp+0x4],0x0
  40a564:	lea    rax,[rbx+0x5]
  40a568:	xor    ecx,ecx
  40a56a:	cmp    rbx,rax
  40a56d:	jne    40a4aa <main@@Base+0x5b5a>
  40a573:	jmp    40a479 <main@@Base+0x5b29>
  40a578:	neg    rcx
  40a57b:	mov    DWORD PTR [rsp+0x4],ecx
  40a57f:	mov    r12d,ecx
  40a582:	mov    rbp,rax
  40a585:	cmp    rbx,rax
  40a588:	jne    40a5be <main@@Base+0x5c6e>
  40a58a:	mov    rdi,r14
  40a58d:	mov    rsi,rbx
  40a590:	mov    rdx,r15
  40a593:	lea    rcx,[rip+0x1eca6]        # 429240 <filename@@Base+0x170>
  40a59a:	lea    r8,[rsp+0x4]
  40a59f:	call   4130e0 <main@@Base+0xe790>
  40a5a4:	mov    rbp,rax
  40a5a7:	cmp    rax,rbx
  40a5aa:	je     40da65 <main@@Base+0x9115>
  40a5b0:	cmp    rbp,r15
  40a5b3:	je     40da65 <main@@Base+0x9115>
  40a5b9:	mov    r12d,DWORD PTR [rsp+0x4]
  40a5be:	test   r12d,r12d
  40a5c1:	jne    40a5ce <main@@Base+0x5c7e>
  40a5c3:	test   BYTE PTR [r14+0x10],0x2
  40a5c8:	je     40d1cb <main@@Base+0x887b>
  40a5ce:	mov    rdi,QWORD PTR [r14]
  40a5d1:	mov    edx,0x4
  40a5d6:	mov    esi,0x10
  40a5db:	mov    ecx,0x4
  40a5e0:	call   41c310 <flatcc_builder_table_add@@Base>
  40a5e5:	test   rax,rax
  40a5e8:	je     40da65 <main@@Base+0x9115>
  40a5ee:	mov    DWORD PTR [rax],r12d
  40a5f1:	jmp    40d1cb <main@@Base+0x887b>
  40a5f6:	mov    rdi,r14
  40a5f9:	mov    rsi,rax
  40a5fc:	mov    rdx,r15
  40a5ff:	mov    ecx,0x9
  40a604:	jmp    407ced <main@@Base+0x339d>
  40a609:	mov    rdi,r14
  40a60c:	mov    rsi,rbp
  40a60f:	mov    rdx,r15
  40a612:	mov    ecx,0x15
  40a617:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a61c:	mov    rbp,rax
  40a61f:	cmp    DWORD PTR [r14+0x20],0x0
  40a624:	je     40d8e5 <main@@Base+0x8f95>
  40a62a:	mov    rdi,r14
  40a62d:	mov    rsi,rbp
  40a630:	mov    rdx,r15
  40a633:	mov    ecx,0x21
  40a638:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a63d:	mov    rbx,rax
  40a640:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a645:	mov    rbp,rax
  40a648:	je     404a01 <main@@Base+0xb1>
  40a64e:	mov    rdi,QWORD PTR [r14]
  40a651:	mov    esi,0x22
  40a656:	jmp    407d11 <main@@Base+0x33c1>
  40a65b:	xor    ebx,ebx
  40a65d:	mov    rax,rcx
  40a660:	jmp    40ab64 <main@@Base+0x6214>
  40a665:	mov    rdi,r14
  40a668:	mov    rsi,rcx
  40a66b:	mov    rdx,r15
  40a66e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a673:	mov    rcx,rax
  40a676:	cmp    r12,rcx
  40a679:	je     4090b6 <main@@Base+0x4766>
  40a67f:	mov    QWORD PTR [rsp+0x10],0x0
  40a688:	mov    DWORD PTR [rsp+0x20],0x0
  40a690:	mov    DWORD PTR [rsp+0x4],0x0
  40a698:	xor    ebx,ebx
  40a69a:	cmp    rcx,r15
  40a69d:	je     40a6e6 <main@@Base+0x5d96>
  40a69f:	mov    rdi,r14
  40a6a2:	mov    rsi,rcx
  40a6a5:	mov    rdx,r15
  40a6a8:	mov    rbp,rcx
  40a6ab:	lea    rcx,[rsp+0x20]
  40a6b0:	lea    r8,[rsp+0x10]
  40a6b5:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40a6ba:	cmp    rax,rbp
  40a6bd:	je     40aac8 <main@@Base+0x6178>
  40a6c3:	cmp    DWORD PTR [rsp+0x20],0x0
  40a6c8:	je     40b626 <main@@Base+0x6cd6>
  40a6ce:	mov    rdi,r14
  40a6d1:	mov    rsi,rax
  40a6d4:	mov    rdx,r15
  40a6d7:	mov    ecx,0x8
  40a6dc:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a6e1:	jmp    40c35e <main@@Base+0x7a0e>
  40a6e6:	mov    rax,r15
  40a6e9:	jmp    40c361 <main@@Base+0x7a11>
  40a6ee:	mov    rdi,r14
  40a6f1:	mov    rsi,rcx
  40a6f4:	mov    rdx,r15
  40a6f7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a6fc:	mov    rcx,rax
  40a6ff:	cmp    r12,rcx
  40a702:	je     4091f4 <main@@Base+0x48a4>
  40a708:	mov    QWORD PTR [rsp+0x10],0x0
  40a711:	mov    DWORD PTR [rsp+0x4],0x0
  40a719:	mov    QWORD PTR [rsp+0x20],0x0
  40a722:	cmp    rcx,r15
  40a725:	je     40a770 <main@@Base+0x5e20>
  40a727:	mov    rdi,r14
  40a72a:	mov    rsi,rcx
  40a72d:	mov    rdx,r15
  40a730:	mov    rbp,rcx
  40a733:	lea    rcx,[rsp+0x4]
  40a738:	lea    r8,[rsp+0x10]
  40a73d:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40a742:	cmp    rax,rbp
  40a745:	je     40aad3 <main@@Base+0x6183>
  40a74b:	cmp    DWORD PTR [rsp+0x4],0x0
  40a750:	je     40b650 <main@@Base+0x6d00>
  40a756:	mov    rdi,r14
  40a759:	mov    rsi,rax
  40a75c:	mov    rdx,r15
  40a75f:	mov    ecx,0x8
  40a764:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a769:	xor    ebx,ebx
  40a76b:	jmp    40b65a <main@@Base+0x6d0a>
  40a770:	xor    ebx,ebx
  40a772:	mov    rax,r15
  40a775:	jmp    40b65d <main@@Base+0x6d0d>
  40a77a:	mov    rdi,r14
  40a77d:	mov    rsi,rax
  40a780:	mov    rdx,r15
  40a783:	mov    ecx,0xa
  40a788:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a78d:	jmp    40d1c8 <main@@Base+0x8878>
  40a792:	mov    rdi,r14
  40a795:	mov    rsi,rbx
  40a798:	mov    rdx,r15
  40a79b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a7a0:	mov    rbx,rax
  40a7a3:	cmp    r12,rbx
  40a7a6:	je     40d1ba <main@@Base+0x886a>
  40a7ac:	mov    rdi,QWORD PTR [r14]
  40a7af:	call   41aba0 <flatcc_builder_start_offset_vector@@Base>
  40a7b4:	test   eax,eax
  40a7b6:	jne    404a01 <main@@Base+0xb1>
  40a7bc:	cmp    rbx,r15
  40a7bf:	je     40a7ff <main@@Base+0x5eaf>
  40a7c1:	cmp    BYTE PTR [rbx],0x5b
  40a7c4:	jne    40a7ff <main@@Base+0x5eaf>
  40a7c6:	lea    rax,[rbx+0x1]
  40a7ca:	mov    rcx,r15
  40a7cd:	sub    rcx,rax
  40a7d0:	cmp    rcx,0x2
  40a7d4:	jl     40aaff <main@@Base+0x61af>
  40a7da:	cmp    BYTE PTR [rax],0x20
  40a7dd:	jg     40ab0d <main@@Base+0x61bd>
  40a7e3:	jne    40aaff <main@@Base+0x61af>
  40a7e9:	cmp    BYTE PTR [rbx+0x2],0x20
  40a7ed:	jle    40aaff <main@@Base+0x61af>
  40a7f3:	add    rbx,0x2
  40a7f7:	mov    rax,rbx
  40a7fa:	jmp    40ab0d <main@@Base+0x61bd>
  40a7ff:	mov    rdi,r14
  40a802:	mov    rsi,rbx
  40a805:	mov    rdx,r15
  40a808:	mov    ecx,0x16
  40a80d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a812:	mov    rbp,rax
  40a815:	mov    rdi,QWORD PTR [r14]
  40a818:	call   41ad60 <flatcc_builder_end_offset_vector@@Base>
  40a81d:	mov    DWORD PTR [rsp+0x1c],eax
  40a821:	test   eax,eax
  40a823:	je     40da65 <main@@Base+0x9115>
  40a829:	mov    rdi,QWORD PTR [r14]
  40a82c:	mov    esi,0xa
  40a831:	jmp    407d11 <main@@Base+0x33c1>
  40a836:	mov    rdi,r14
  40a839:	mov    rsi,rax
  40a83c:	mov    rdx,r15
  40a83f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a844:	mov    rbx,r15
  40a847:	cmp    rax,r15
  40a84a:	je     40b7c1 <main@@Base+0x6e71>
  40a850:	cmp    BYTE PTR [rax],0x5d
  40a853:	jne    40b7be <main@@Base+0x6e6e>
  40a859:	lea    rbp,[rax+0x1]
  40a85d:	mov    rcx,r15
  40a860:	sub    rcx,rbp
  40a863:	cmp    rcx,0x2
  40a867:	jl     40d0bf <main@@Base+0x876f>
  40a86d:	cmp    BYTE PTR [rbp+0x0],0x20
  40a871:	jg     409f0a <main@@Base+0x55ba>
  40a877:	jne    40d0bf <main@@Base+0x876f>
  40a87d:	cmp    BYTE PTR [rax+0x2],0x20
  40a881:	jle    40d0bf <main@@Base+0x876f>
  40a887:	add    rax,0x2
  40a88b:	jmp    409f07 <main@@Base+0x55b7>
  40a890:	mov    rax,r13
  40a893:	jmp    40b721 <main@@Base+0x6dd1>
  40a898:	mov    rdi,r14
  40a89b:	mov    rsi,rbx
  40a89e:	mov    rdx,r15
  40a8a1:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a8a6:	mov    rbx,rax
  40a8a9:	cmp    r12,rbx
  40a8ac:	je     40d1ba <main@@Base+0x886a>
  40a8b2:	mov    rdi,QWORD PTR [r14]
  40a8b5:	mov    esi,0x8
  40a8ba:	mov    ecx,0x1fffffff
  40a8bf:	mov    edx,0x8
  40a8c4:	call   41ab20 <flatcc_builder_start_vector@@Base>
  40a8c9:	test   eax,eax
  40a8cb:	jne    404a01 <main@@Base+0xb1>
  40a8d1:	cmp    rbx,r15
  40a8d4:	je     40a914 <main@@Base+0x5fc4>
  40a8d6:	cmp    BYTE PTR [rbx],0x5b
  40a8d9:	jne    40a914 <main@@Base+0x5fc4>
  40a8db:	lea    rax,[rbx+0x1]
  40a8df:	mov    rcx,r15
  40a8e2:	sub    rcx,rax
  40a8e5:	cmp    rcx,0x2
  40a8e9:	jl     40b5a8 <main@@Base+0x6c58>
  40a8ef:	cmp    BYTE PTR [rax],0x20
  40a8f2:	jg     40b5b6 <main@@Base+0x6c66>
  40a8f8:	jne    40b5a8 <main@@Base+0x6c58>
  40a8fe:	cmp    BYTE PTR [rbx+0x2],0x20
  40a902:	jle    40b5a8 <main@@Base+0x6c58>
  40a908:	add    rbx,0x2
  40a90c:	mov    rax,rbx
  40a90f:	jmp    40b5b6 <main@@Base+0x6c66>
  40a914:	mov    rdi,r14
  40a917:	mov    rsi,rbx
  40a91a:	mov    rdx,r15
  40a91d:	mov    ecx,0x16
  40a922:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40a927:	mov    rbp,rax
  40a92a:	mov    rdi,QWORD PTR [r14]
  40a92d:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  40a932:	mov    DWORD PTR [rsp+0x1c],eax
  40a936:	test   eax,eax
  40a938:	je     40da65 <main@@Base+0x9115>
  40a93e:	mov    rdi,QWORD PTR [r14]
  40a941:	mov    esi,0x20
  40a946:	jmp    407d11 <main@@Base+0x33c1>
  40a94b:	mov    rdi,r14
  40a94e:	mov    rsi,rbx
  40a951:	mov    rdx,r15
  40a954:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40a959:	mov    rbx,rax
  40a95c:	cmp    r12,rbx
  40a95f:	je     40d1ba <main@@Base+0x886a>
  40a965:	cmp    rbx,r15
  40a968:	je     40a9d0 <main@@Base+0x6080>
  40a96a:	cmp    BYTE PTR [rbx],0x5b
  40a96d:	jne    40a9d0 <main@@Base+0x6080>
  40a96f:	mov    rdi,QWORD PTR [r14]
  40a972:	mov    esi,0x1
  40a977:	mov    ecx,0xffffffff
  40a97c:	mov    edx,0x1
  40a981:	call   41ab20 <flatcc_builder_start_vector@@Base>
  40a986:	test   eax,eax
  40a988:	jne    404a01 <main@@Base+0xb1>
  40a98e:	cmp    BYTE PTR [rbx],0x5b
  40a991:	jne    40bb08 <main@@Base+0x71b8>
  40a997:	lea    rax,[rbx+0x1]
  40a99b:	mov    rcx,r15
  40a99e:	sub    rcx,rax
  40a9a1:	cmp    rcx,0x2
  40a9a5:	jl     40c3c0 <main@@Base+0x7a70>
  40a9ab:	cmp    BYTE PTR [rax],0x20
  40a9ae:	jg     40c3ce <main@@Base+0x7a7e>
  40a9b4:	jne    40c3c0 <main@@Base+0x7a70>
  40a9ba:	cmp    BYTE PTR [rbx+0x2],0x20
  40a9be:	jle    40c3c0 <main@@Base+0x7a70>
  40a9c4:	add    rbx,0x2
  40a9c8:	mov    rax,rbx
  40a9cb:	jmp    40c3ce <main@@Base+0x7a7e>
  40a9d0:	mov    rdi,QWORD PTR [r14]
  40a9d3:	xor    esi,esi
  40a9d5:	xor    edx,edx
  40a9d7:	xor    ecx,ecx
  40a9d9:	call   419cf0 <flatcc_builder_start_buffer@@Base>
  40a9de:	test   eax,eax
  40a9e0:	jne    404a01 <main@@Base+0xb1>
  40a9e6:	mov    rdi,r14
  40a9e9:	mov    rsi,rbx
  40a9ec:	mov    rdx,r15
  40a9ef:	lea    rcx,[rsp+0x1c]
  40a9f4:	call   4049d0 <main@@Base+0x80>
  40a9f9:	mov    rbp,rax
  40a9fc:	mov    esi,DWORD PTR [rsp+0x1c]
  40aa00:	test   esi,esi
  40aa02:	je     40da65 <main@@Base+0x9115>
  40aa08:	mov    rdi,QWORD PTR [r14]
  40aa0b:	call   419f10 <flatcc_builder_end_buffer@@Base>
  40aa10:	jmp    40d990 <main@@Base+0x9040>
  40aa15:	mov    rdi,r14
  40aa18:	mov    rsi,rbx
  40aa1b:	mov    rdx,r15
  40aa1e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40aa23:	mov    rbx,rax
  40aa26:	cmp    r12,rbx
  40aa29:	je     40d1ba <main@@Base+0x886a>
  40aa2f:	mov    rdi,QWORD PTR [r14]
  40aa32:	mov    esi,0x8
  40aa37:	mov    ecx,0x1fffffff
  40aa3c:	mov    edx,0x8
  40aa41:	call   41ab20 <flatcc_builder_start_vector@@Base>
  40aa46:	test   eax,eax
  40aa48:	jne    404a01 <main@@Base+0xb1>
  40aa4e:	cmp    rbx,r15
  40aa51:	je     40aa91 <main@@Base+0x6141>
  40aa53:	cmp    BYTE PTR [rbx],0x5b
  40aa56:	jne    40aa91 <main@@Base+0x6141>
  40aa58:	lea    rax,[rbx+0x1]
  40aa5c:	mov    rcx,r15
  40aa5f:	sub    rcx,rax
  40aa62:	cmp    rcx,0x2
  40aa66:	jl     40b6be <main@@Base+0x6d6e>
  40aa6c:	cmp    BYTE PTR [rax],0x20
  40aa6f:	jg     40b6cc <main@@Base+0x6d7c>
  40aa75:	jne    40b6be <main@@Base+0x6d6e>
  40aa7b:	cmp    BYTE PTR [rbx+0x2],0x20
  40aa7f:	jle    40b6be <main@@Base+0x6d6e>
  40aa85:	add    rbx,0x2
  40aa89:	mov    rax,rbx
  40aa8c:	jmp    40b6cc <main@@Base+0x6d7c>
  40aa91:	mov    rdi,r14
  40aa94:	mov    rsi,rbx
  40aa97:	mov    rdx,r15
  40aa9a:	mov    ecx,0x16
  40aa9f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40aaa4:	mov    rbp,rax
  40aaa7:	mov    rdi,QWORD PTR [r14]
  40aaaa:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  40aaaf:	mov    DWORD PTR [rsp+0x1c],eax
  40aab3:	test   eax,eax
  40aab5:	je     40da65 <main@@Base+0x9115>
  40aabb:	mov    rdi,QWORD PTR [r14]
  40aabe:	mov    esi,0x21
  40aac3:	jmp    407d11 <main@@Base+0x33c1>
  40aac8:	mov    rcx,rbp
  40aacb:	mov    rax,rbp
  40aace:	jmp    40c361 <main@@Base+0x7a11>
  40aad3:	mov    rcx,rbp
  40aad6:	xor    ebx,ebx
  40aad8:	mov    rax,rbp
  40aadb:	jmp    40b65d <main@@Base+0x6d0d>
  40aae0:	test   rbx,rbx
  40aae3:	jns    40ab5f <main@@Base+0x620f>
  40aae5:	mov    rdi,r14
  40aae8:	mov    rsi,rax
  40aaeb:	mov    rdx,r15
  40aaee:	mov    ecx,0x7
  40aaf3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40aaf8:	mov    rcx,rbp
  40aafb:	xor    ebx,ebx
  40aafd:	jmp    40ab64 <main@@Base+0x6214>
  40aaff:	mov    rdi,r14
  40ab02:	mov    rsi,rax
  40ab05:	mov    rdx,r15
  40ab08:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ab0d:	mov    rsi,r15
  40ab10:	cmp    rax,r15
  40ab13:	je     40bb23 <main@@Base+0x71d3>
  40ab19:	cmp    BYTE PTR [rax],0x5d
  40ab1c:	jne    40bb20 <main@@Base+0x71d0>
  40ab22:	lea    rbp,[rax+0x1]
  40ab26:	mov    rcx,r15
  40ab29:	sub    rcx,rbp
  40ab2c:	cmp    rcx,0x2
  40ab30:	jl     40d600 <main@@Base+0x8cb0>
  40ab36:	cmp    BYTE PTR [rbp+0x0],0x20
  40ab3a:	jg     40a815 <main@@Base+0x5ec5>
  40ab40:	jne    40d600 <main@@Base+0x8cb0>
  40ab46:	cmp    BYTE PTR [rax+0x2],0x20
  40ab4a:	jle    40d600 <main@@Base+0x8cb0>
  40ab50:	add    rax,0x2
  40ab54:	jmp    40a812 <main@@Base+0x5ec2>
  40ab59:	neg    rbx
  40ab5c:	mov    rcx,rbp
  40ab5f:	mov    QWORD PTR [rsp+0x20],rbx
  40ab64:	mov    rbp,rax
  40ab67:	cmp    rcx,rax
  40ab6a:	jne    40aba3 <main@@Base+0x6253>
  40ab6c:	mov    rdi,r14
  40ab6f:	mov    rsi,rcx
  40ab72:	mov    rbx,rcx
  40ab75:	mov    rdx,r15
  40ab78:	lea    rcx,[rip+0x1e701]        # 429280 <filename@@Base+0x1b0>
  40ab7f:	lea    r8,[rsp+0x20]
  40ab84:	call   4132f0 <main@@Base+0xe9a0>
  40ab89:	mov    rbp,rax
  40ab8c:	cmp    rax,rbx
  40ab8f:	je     40da65 <main@@Base+0x9115>
  40ab95:	cmp    rbp,r15
  40ab98:	je     40da65 <main@@Base+0x9115>
  40ab9e:	mov    rbx,QWORD PTR [rsp+0x20]
  40aba3:	test   rbx,rbx
  40aba6:	jne    40abb3 <main@@Base+0x6263>
  40aba8:	test   BYTE PTR [r14+0x10],0x2
  40abad:	je     40d1cb <main@@Base+0x887b>
  40abb3:	mov    rdi,QWORD PTR [r14]
  40abb6:	mov    edx,0x8
  40abbb:	mov    esi,0x12
  40abc0:	jmp    40d365 <main@@Base+0x8a15>
  40abc5:	mov    rsi,rax
  40abc8:	mov    rdi,r14
  40abcb:	mov    rdx,r15
  40abce:	lea    rcx,[rsp+0x1c]
  40abd3:	call   420390 <flatcc_json_parser_build_string@@Base>
  40abd8:	mov    rbx,rax
  40abdb:	cmp    DWORD PTR [rsp+0x1c],0x0
  40abe0:	je     404a01 <main@@Base+0xb1>
  40abe6:	mov    rdi,QWORD PTR [r14]
  40abe9:	mov    esi,0x1
  40abee:	call   41a4b0 <flatcc_builder_extend_offset_vector@@Base>
  40abf3:	test   rax,rax
  40abf6:	je     404a01 <main@@Base+0xb1>
  40abfc:	mov    ecx,DWORD PTR [rsp+0x1c]
  40ac00:	mov    DWORD PTR [rax],ecx
  40ac02:	mov    rax,r15
  40ac05:	sub    rax,rbx
  40ac08:	cmp    rax,0x2
  40ac0c:	jl     40ac28 <main@@Base+0x62d8>
  40ac0e:	cmp    BYTE PTR [rbx],0x20
  40ac11:	jg     40ac39 <main@@Base+0x62e9>
  40ac13:	jne    40ac28 <main@@Base+0x62d8>
  40ac15:	cmp    BYTE PTR [rbx+0x1],0x20
  40ac19:	jle    40ac28 <main@@Base+0x62d8>
  40ac1b:	inc    rbx
  40ac1e:	cmp    rbx,r15
  40ac21:	jne    40ac42 <main@@Base+0x62f2>
  40ac23:	jmp    40c7d8 <main@@Base+0x7e88>
  40ac28:	mov    rdi,r14
  40ac2b:	mov    rsi,rbx
  40ac2e:	mov    rdx,r15
  40ac31:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ac36:	mov    rbx,rax
  40ac39:	cmp    rbx,r15
  40ac3c:	je     40c7d8 <main@@Base+0x7e88>
  40ac42:	movzx  eax,BYTE PTR [rbx]
  40ac45:	cmp    al,0x2c
  40ac47:	jne    40c7e8 <main@@Base+0x7e98>
  40ac4d:	lea    rsi,[rbx+0x1]
  40ac51:	mov    rax,r15
  40ac54:	sub    rax,rsi
  40ac57:	cmp    rax,0x2
  40ac5b:	jl     40ac7b <main@@Base+0x632b>
  40ac5d:	cmp    BYTE PTR [rsi],0x20
  40ac60:	jg     40ac89 <main@@Base+0x6339>
  40ac62:	jne    40ac7b <main@@Base+0x632b>
  40ac64:	cmp    BYTE PTR [rbx+0x2],0x20
  40ac68:	jle    40ac7b <main@@Base+0x632b>
  40ac6a:	add    rbx,0x2
  40ac6e:	mov    rsi,rbx
  40ac71:	cmp    rsi,r15
  40ac74:	jne    40ac92 <main@@Base+0x6342>
  40ac76:	jmp    40c87a <main@@Base+0x7f2a>
  40ac7b:	mov    rdi,r14
  40ac7e:	mov    rdx,r15
  40ac81:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ac86:	mov    rsi,rax
  40ac89:	cmp    rsi,r15
  40ac8c:	je     40c87a <main@@Base+0x7f2a>
  40ac92:	cmp    BYTE PTR [rsi],0x5d
  40ac95:	jne    40abc8 <main@@Base+0x6278>
  40ac9b:	lea    rbp,[rsi+0x1]
  40ac9f:	mov    rax,r15
  40aca2:	sub    rax,rbp
  40aca5:	cmp    rax,0x2
  40aca9:	jl     40c81e <main@@Base+0x7ece>
  40acaf:	cmp    BYTE PTR [rbp+0x0],0x20
  40acb3:	jg     4099f4 <main@@Base+0x50a4>
  40acb9:	jne    40c81e <main@@Base+0x7ece>
  40acbf:	cmp    BYTE PTR [rsi+0x2],0x20
  40acc3:	jle    40c81e <main@@Base+0x7ece>
  40acc9:	add    rsi,0x2
  40accd:	mov    rbp,rsi
  40acd0:	jmp    4099f4 <main@@Base+0x50a4>
  40acd5:	mov    rbx,rax
  40acd8:	mov    rdi,QWORD PTR [r14]
  40acdb:	mov    esi,0x1
  40ace0:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40ace5:	test   rax,rax
  40ace8:	je     404a01 <main@@Base+0xb1>
  40acee:	mov    r13,rax
  40acf1:	cmp    rbx,r15
  40acf4:	je     40ad34 <main@@Base+0x63e4>
  40acf6:	cmp    BYTE PTR [rbx],0x7b
  40acf9:	jne    40ad34 <main@@Base+0x63e4>
  40acfb:	lea    rax,[rbx+0x1]
  40acff:	mov    rcx,r15
  40ad02:	sub    rcx,rax
  40ad05:	cmp    rcx,0x2
  40ad09:	jl     40ae03 <main@@Base+0x64b3>
  40ad0f:	cmp    BYTE PTR [rax],0x20
  40ad12:	jg     40ae11 <main@@Base+0x64c1>
  40ad18:	jne    40ae03 <main@@Base+0x64b3>
  40ad1e:	cmp    BYTE PTR [rbx+0x2],0x20
  40ad22:	jle    40ae03 <main@@Base+0x64b3>
  40ad28:	add    rbx,0x2
  40ad2c:	mov    rax,rbx
  40ad2f:	jmp    40ae11 <main@@Base+0x64c1>
  40ad34:	mov    rdi,r14
  40ad37:	mov    rsi,rbx
  40ad3a:	mov    rdx,r15
  40ad3d:	mov    ecx,0x15
  40ad42:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40ad47:	mov    rcx,rax
  40ad4a:	mov    rax,r15
  40ad4d:	sub    rax,rcx
  40ad50:	cmp    rax,0x2
  40ad54:	jl     40ad70 <main@@Base+0x6420>
  40ad56:	cmp    BYTE PTR [rcx],0x20
  40ad59:	jg     40ad81 <main@@Base+0x6431>
  40ad5b:	jne    40ad70 <main@@Base+0x6420>
  40ad5d:	cmp    BYTE PTR [rcx+0x1],0x20
  40ad61:	jle    40ad70 <main@@Base+0x6420>
  40ad63:	inc    rcx
  40ad66:	cmp    rcx,r15
  40ad69:	jne    40ad8a <main@@Base+0x643a>
  40ad6b:	jmp    40bc30 <main@@Base+0x72e0>
  40ad70:	mov    rdi,r14
  40ad73:	mov    rsi,rcx
  40ad76:	mov    rdx,r15
  40ad79:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ad7e:	mov    rcx,rax
  40ad81:	cmp    rcx,r15
  40ad84:	je     40bc30 <main@@Base+0x72e0>
  40ad8a:	mov    al,BYTE PTR [rcx]
  40ad8c:	cmp    al,0x2c
  40ad8e:	jne    40bc38 <main@@Base+0x72e8>
  40ad94:	lea    rbx,[rcx+0x1]
  40ad98:	mov    rax,r15
  40ad9b:	sub    rax,rbx
  40ad9e:	cmp    rax,0x2
  40ada2:	jl     40adc2 <main@@Base+0x6472>
  40ada4:	cmp    BYTE PTR [rbx],0x20
  40ada7:	jg     40add3 <main@@Base+0x6483>
  40ada9:	jne    40adc2 <main@@Base+0x6472>
  40adab:	cmp    BYTE PTR [rcx+0x2],0x20
  40adaf:	jle    40adc2 <main@@Base+0x6472>
  40adb1:	add    rcx,0x2
  40adb5:	mov    rbx,rcx
  40adb8:	cmp    rbx,r15
  40adbb:	jne    40addc <main@@Base+0x648c>
  40adbd:	jmp    40bc7a <main@@Base+0x732a>
  40adc2:	mov    rdi,r14
  40adc5:	mov    rsi,rbx
  40adc8:	mov    rdx,r15
  40adcb:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40add0:	mov    rbx,rax
  40add3:	cmp    rbx,r15
  40add6:	je     40bc7a <main@@Base+0x732a>
  40addc:	cmp    BYTE PTR [rbx],0x5d
  40addf:	je     40c41a <main@@Base+0x7aca>
  40ade5:	mov    rdi,QWORD PTR [r14]
  40ade8:	mov    esi,0x1
  40aded:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40adf2:	mov    r13,rax
  40adf5:	test   rax,rax
  40adf8:	jne    40acf1 <main@@Base+0x63a1>
  40adfe:	jmp    404a01 <main@@Base+0xb1>
  40ae03:	mov    rdi,r14
  40ae06:	mov    rsi,rax
  40ae09:	mov    rdx,r15
  40ae0c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ae11:	mov    rsi,r15
  40ae14:	cmp    rax,r15
  40ae17:	je     40ae25 <main@@Base+0x64d5>
  40ae19:	cmp    BYTE PTR [rax],0x7d
  40ae1c:	je     40b379 <main@@Base+0x6a29>
  40ae22:	mov    rsi,rax
  40ae25:	mov    r12,r15
  40ae28:	cmp    rsi,r15
  40ae2b:	je     40ae6b <main@@Base+0x651b>
  40ae2d:	movzx  eax,BYTE PTR [rsi]
  40ae30:	cmp    al,0x2e
  40ae32:	je     40ae48 <main@@Base+0x64f8>
  40ae34:	cmp    al,0x22
  40ae36:	jne    40ae5d <main@@Base+0x650d>
  40ae38:	inc    rsi
  40ae3b:	mov    rax,QWORD PTR [rsp+0x8]
  40ae40:	mov    DWORD PTR [rax],0x0
  40ae46:	jmp    40ae68 <main@@Base+0x6518>
  40ae48:	mov    rdi,r14
  40ae4b:	mov    rdx,r15
  40ae4e:	mov    ecx,0x5
  40ae53:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40ae58:	mov    r12,rax
  40ae5b:	jmp    40ae6b <main@@Base+0x651b>
  40ae5d:	mov    rax,QWORD PTR [rsp+0x8]
  40ae62:	mov    DWORD PTR [rax],0x1
  40ae68:	mov    r12,rsi
  40ae6b:	mov    rax,r15
  40ae6e:	sub    rax,r12
  40ae71:	cmp    rax,0x8
  40ae75:	jb     40ae82 <main@@Base+0x6532>
  40ae77:	movbe  rcx,QWORD PTR [r12]
  40ae7d:	jmp    40af04 <main@@Base+0x65b4>
  40ae82:	lea    rcx,[rax-0x1]
  40ae86:	cmp    rcx,0x6
  40ae8a:	ja     40b257 <main@@Base+0x6907>
  40ae90:	lea    rdx,[rip+0x17389]        # 422220 <_IO_stdin_used@@Base+0x220>
  40ae97:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40ae9b:	add    rbx,rdx
  40ae9e:	xor    r8d,r8d
  40aea1:	xor    ecx,ecx
  40aea3:	xor    esi,esi
  40aea5:	xor    edi,edi
  40aea7:	xor    ebp,ebp
  40aea9:	xor    edx,edx
  40aeab:	jmp    rbx
  40aead:	movsx  r8,BYTE PTR [r12+0x6]
  40aeb3:	shl    r8,0x8
  40aeb7:	movsx  rcx,BYTE PTR [r12+0x5]
  40aebd:	shl    rcx,0x10
  40aec1:	or     rcx,r8
  40aec4:	movsx  rsi,BYTE PTR [r12+0x4]
  40aeca:	shl    rsi,0x18
  40aece:	or     rsi,rcx
  40aed1:	movsx  rdi,BYTE PTR [r12+0x3]
  40aed7:	shl    rdi,0x20
  40aedb:	or     rdi,rsi
  40aede:	movsx  rbp,BYTE PTR [r12+0x2]
  40aee4:	shl    rbp,0x28
  40aee8:	or     rbp,rdi
  40aeeb:	movsx  rdx,BYTE PTR [r12+0x1]
  40aef1:	shl    rdx,0x30
  40aef5:	or     rdx,rbp
  40aef8:	movzx  ecx,BYTE PTR [r12]
  40aefd:	shl    rcx,0x38
  40af01:	or     rcx,rdx
  40af04:	mov    rdx,rcx
  40af07:	movabs rsi,0xffff000000000000
  40af11:	and    rdx,rsi
  40af14:	movabs rsi,0x6964000000000000
  40af1e:	cmp    rdx,rsi
  40af21:	jne    40af61 <main@@Base+0x6611>
  40af23:	mov    rbp,r12
  40af26:	cmp    rax,0x3
  40af2a:	jl     40b110 <main@@Base+0x67c0>
  40af30:	mov    rax,QWORD PTR [rsp+0x8]
  40af35:	cmp    DWORD PTR [rax],0x0
  40af38:	movzx  eax,BYTE PTR [r12+0x2]
  40af3e:	je     40afb9 <main@@Base+0x6669>
  40af40:	cmp    al,0x21
  40af42:	jl     40af4f <main@@Base+0x65ff>
  40af44:	mov    rbp,r12
  40af47:	cmp    al,0x3a
  40af49:	jne    40b110 <main@@Base+0x67c0>
  40af4f:	lea    rsi,[r12+0x2]
  40af54:	mov    rax,QWORD PTR [rsp+0x8]
  40af59:	mov    DWORD PTR [rax],0x0
  40af5f:	jmp    40afc9 <main@@Base+0x6679>
  40af61:	movabs rdx,0x64697374616e6365
  40af6b:	cmp    rcx,rdx
  40af6e:	jne    40b257 <main@@Base+0x6907>
  40af74:	mov    rbp,r12
  40af77:	cmp    rax,0x9
  40af7b:	jl     40b1fe <main@@Base+0x68ae>
  40af81:	mov    rax,QWORD PTR [rsp+0x8]
  40af86:	cmp    DWORD PTR [rax],0x0
  40af89:	movzx  eax,BYTE PTR [r12+0x8]
  40af8f:	je     40b05c <main@@Base+0x670c>
  40af95:	cmp    al,0x21
  40af97:	jl     40afa4 <main@@Base+0x6654>
  40af99:	mov    rbp,r12
  40af9c:	cmp    al,0x3a
  40af9e:	jne    40b1fe <main@@Base+0x68ae>
  40afa4:	lea    rsi,[r12+0x8]
  40afa9:	mov    rax,QWORD PTR [rsp+0x8]
  40afae:	mov    DWORD PTR [rax],0x0
  40afb4:	jmp    40b06c <main@@Base+0x671c>
  40afb9:	mov    rbp,r12
  40afbc:	cmp    al,0x22
  40afbe:	jne    40b110 <main@@Base+0x67c0>
  40afc4:	lea    rsi,[r12+0x3]
  40afc9:	mov    rax,r15
  40afcc:	sub    rax,rsi
  40afcf:	cmp    rax,0x2
  40afd3:	jl     40afec <main@@Base+0x669c>
  40afd5:	cmp    BYTE PTR [rsi],0x20
  40afd8:	jg     40affa <main@@Base+0x66aa>
  40afda:	jne    40afec <main@@Base+0x669c>
  40afdc:	cmp    BYTE PTR [rsi+0x1],0x20
  40afe0:	jle    40afec <main@@Base+0x669c>
  40afe2:	inc    rsi
  40afe5:	cmp    rsi,r15
  40afe8:	jne    40afff <main@@Base+0x66af>
  40afea:	jmp    40b047 <main@@Base+0x66f7>
  40afec:	mov    rdi,r14
  40afef:	mov    rdx,r15
  40aff2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40aff7:	mov    rsi,rax
  40affa:	cmp    rsi,r15
  40affd:	je     40b047 <main@@Base+0x66f7>
  40afff:	cmp    BYTE PTR [rsi],0x3a
  40b002:	jne    40b047 <main@@Base+0x66f7>
  40b004:	lea    rbp,[rsi+0x1]
  40b008:	mov    rax,r15
  40b00b:	sub    rax,rbp
  40b00e:	cmp    rax,0x2
  40b012:	jl     40b0ff <main@@Base+0x67af>
  40b018:	cmp    BYTE PTR [rbp+0x0],0x20
  40b01c:	jg     40b110 <main@@Base+0x67c0>
  40b022:	jne    40b0ff <main@@Base+0x67af>
  40b028:	cmp    BYTE PTR [rsi+0x2],0x20
  40b02c:	jle    40b0ff <main@@Base+0x67af>
  40b032:	add    rsi,0x2
  40b036:	mov    rbp,rsi
  40b039:	cmp    r12,rbp
  40b03c:	jne    40b119 <main@@Base+0x67c9>
  40b042:	jmp    40b257 <main@@Base+0x6907>
  40b047:	mov    rdi,r14
  40b04a:	mov    rdx,r15
  40b04d:	mov    ecx,0x4
  40b052:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b057:	jmp    40b10d <main@@Base+0x67bd>
  40b05c:	mov    rbp,r12
  40b05f:	cmp    al,0x22
  40b061:	jne    40b1fe <main@@Base+0x68ae>
  40b067:	lea    rsi,[r12+0x9]
  40b06c:	mov    rax,r15
  40b06f:	sub    rax,rsi
  40b072:	cmp    rax,0x2
  40b076:	jl     40b08f <main@@Base+0x673f>
  40b078:	cmp    BYTE PTR [rsi],0x20
  40b07b:	jg     40b09d <main@@Base+0x674d>
  40b07d:	jne    40b08f <main@@Base+0x673f>
  40b07f:	cmp    BYTE PTR [rsi+0x1],0x20
  40b083:	jle    40b08f <main@@Base+0x673f>
  40b085:	inc    rsi
  40b088:	cmp    rsi,r15
  40b08b:	jne    40b0a2 <main@@Base+0x6752>
  40b08d:	jmp    40b0ea <main@@Base+0x679a>
  40b08f:	mov    rdi,r14
  40b092:	mov    rdx,r15
  40b095:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b09a:	mov    rsi,rax
  40b09d:	cmp    rsi,r15
  40b0a0:	je     40b0ea <main@@Base+0x679a>
  40b0a2:	cmp    BYTE PTR [rsi],0x3a
  40b0a5:	jne    40b0ea <main@@Base+0x679a>
  40b0a7:	lea    rbp,[rsi+0x1]
  40b0ab:	mov    rax,r15
  40b0ae:	sub    rax,rbp
  40b0b1:	cmp    rax,0x2
  40b0b5:	jl     40b1ed <main@@Base+0x689d>
  40b0bb:	cmp    BYTE PTR [rbp+0x0],0x20
  40b0bf:	jg     40b1fe <main@@Base+0x68ae>
  40b0c5:	jne    40b1ed <main@@Base+0x689d>
  40b0cb:	cmp    BYTE PTR [rsi+0x2],0x20
  40b0cf:	jle    40b1ed <main@@Base+0x689d>
  40b0d5:	add    rsi,0x2
  40b0d9:	mov    rbp,rsi
  40b0dc:	cmp    r12,rbp
  40b0df:	jne    40b203 <main@@Base+0x68b3>
  40b0e5:	jmp    40b257 <main@@Base+0x6907>
  40b0ea:	mov    rdi,r14
  40b0ed:	mov    rdx,r15
  40b0f0:	mov    ecx,0x4
  40b0f5:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b0fa:	jmp    40b1fb <main@@Base+0x68ab>
  40b0ff:	mov    rdi,r14
  40b102:	mov    rsi,rbp
  40b105:	mov    rdx,r15
  40b108:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b10d:	mov    rbp,rax
  40b110:	cmp    r12,rbp
  40b113:	je     40b257 <main@@Base+0x6907>
  40b119:	mov    QWORD PTR [rsp+0x10],0x0
  40b122:	mov    DWORD PTR [rsp+0x20],0x0
  40b12a:	mov    DWORD PTR [rsp+0x4],0x0
  40b132:	xor    ebx,ebx
  40b134:	cmp    rbp,r15
  40b137:	je     40b16d <main@@Base+0x681d>
  40b139:	mov    rdi,r14
  40b13c:	mov    rsi,rbp
  40b13f:	mov    rdx,r15
  40b142:	lea    rcx,[rsp+0x20]
  40b147:	lea    r8,[rsp+0x10]
  40b14c:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40b151:	cmp    rax,rbp
  40b154:	je     40b177 <main@@Base+0x6827>
  40b156:	cmp    DWORD PTR [rsp+0x20],0x0
  40b15b:	je     40b181 <main@@Base+0x6831>
  40b15d:	mov    rdi,r14
  40b160:	mov    rsi,rax
  40b163:	mov    rdx,r15
  40b166:	mov    ecx,0x8
  40b16b:	jmp    40b19d <main@@Base+0x684d>
  40b16d:	mov    rax,r15
  40b170:	cmp    rbp,rax
  40b173:	jne    40b1d7 <main@@Base+0x6887>
  40b175:	jmp    40b1a7 <main@@Base+0x6857>
  40b177:	mov    rax,rbp
  40b17a:	cmp    rbp,rax
  40b17d:	jne    40b1d7 <main@@Base+0x6887>
  40b17f:	jmp    40b1a7 <main@@Base+0x6857>
  40b181:	mov    rcx,QWORD PTR [rsp+0x10]
  40b186:	mov    rdx,rcx
  40b189:	shr    rdx,0x20
  40b18d:	je     40b1e0 <main@@Base+0x6890>
  40b18f:	mov    rdi,r14
  40b192:	mov    rsi,rax
  40b195:	mov    rdx,r15
  40b198:	mov    ecx,0x7
  40b19d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b1a2:	cmp    rbp,rax
  40b1a5:	jne    40b1d7 <main@@Base+0x6887>
  40b1a7:	mov    rdi,r14
  40b1aa:	mov    rsi,rbp
  40b1ad:	mov    rdx,r15
  40b1b0:	lea    rcx,[rip+0x1e5a9]        # 429760 <filename@@Base+0x690>
  40b1b7:	lea    r8,[rsp+0x4]
  40b1bc:	call   413500 <main@@Base+0xebb0>
  40b1c1:	cmp    rax,rbp
  40b1c4:	je     40b3fe <main@@Base+0x6aae>
  40b1ca:	cmp    rax,r15
  40b1cd:	je     40b3fe <main@@Base+0x6aae>
  40b1d3:	mov    ebx,DWORD PTR [rsp+0x4]
  40b1d7:	mov    DWORD PTR [r13+0x0],ebx
  40b1db:	jmp    40b2d9 <main@@Base+0x6989>
  40b1e0:	mov    DWORD PTR [rsp+0x4],ecx
  40b1e4:	mov    ebx,ecx
  40b1e6:	cmp    rbp,rax
  40b1e9:	jne    40b1d7 <main@@Base+0x6887>
  40b1eb:	jmp    40b1a7 <main@@Base+0x6857>
  40b1ed:	mov    rdi,r14
  40b1f0:	mov    rsi,rbp
  40b1f3:	mov    rdx,r15
  40b1f6:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b1fb:	mov    rbp,rax
  40b1fe:	cmp    r12,rbp
  40b201:	je     40b257 <main@@Base+0x6907>
  40b203:	mov    QWORD PTR [rsp+0x10],0x0
  40b20c:	mov    DWORD PTR [rsp+0x20],0x0
  40b214:	mov    DWORD PTR [rsp+0x4],0x0
  40b21c:	xor    ebx,ebx
  40b21e:	cmp    rbp,r15
  40b221:	je     40b267 <main@@Base+0x6917>
  40b223:	mov    rdi,r14
  40b226:	mov    rsi,rbp
  40b229:	mov    rdx,r15
  40b22c:	lea    rcx,[rsp+0x20]
  40b231:	lea    r8,[rsp+0x10]
  40b236:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40b23b:	cmp    rax,rbp
  40b23e:	je     40b271 <main@@Base+0x6921>
  40b240:	cmp    DWORD PTR [rsp+0x20],0x0
  40b245:	je     40b27b <main@@Base+0x692b>
  40b247:	mov    rdi,r14
  40b24a:	mov    rsi,rax
  40b24d:	mov    rdx,r15
  40b250:	mov    ecx,0x8
  40b255:	jmp    40b29b <main@@Base+0x694b>
  40b257:	mov    rdi,r14
  40b25a:	mov    rsi,r12
  40b25d:	mov    rdx,r15
  40b260:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b265:	jmp    40b2d9 <main@@Base+0x6989>
  40b267:	mov    rax,r15
  40b26a:	cmp    rbp,rax
  40b26d:	jne    40b2d5 <main@@Base+0x6985>
  40b26f:	jmp    40b2a5 <main@@Base+0x6955>
  40b271:	mov    rax,rbp
  40b274:	cmp    rbp,rax
  40b277:	jne    40b2d5 <main@@Base+0x6985>
  40b279:	jmp    40b2a5 <main@@Base+0x6955>
  40b27b:	mov    rcx,QWORD PTR [rsp+0x10]
  40b280:	mov    rdx,rcx
  40b283:	shr    rdx,0x20
  40b287:	je     40b358 <main@@Base+0x6a08>
  40b28d:	mov    rdi,r14
  40b290:	mov    rsi,rax
  40b293:	mov    rdx,r15
  40b296:	mov    ecx,0x7
  40b29b:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b2a0:	cmp    rbp,rax
  40b2a3:	jne    40b2d5 <main@@Base+0x6985>
  40b2a5:	mov    rdi,r14
  40b2a8:	mov    rsi,rbp
  40b2ab:	mov    rdx,r15
  40b2ae:	lea    rcx,[rip+0x1e4cb]        # 429780 <filename@@Base+0x6b0>
  40b2b5:	lea    r8,[rsp+0x4]
  40b2ba:	call   413500 <main@@Base+0xebb0>
  40b2bf:	cmp    rax,rbp
  40b2c2:	je     40b3fe <main@@Base+0x6aae>
  40b2c8:	cmp    rax,r15
  40b2cb:	je     40b3fe <main@@Base+0x6aae>
  40b2d1:	mov    ebx,DWORD PTR [rsp+0x4]
  40b2d5:	mov    DWORD PTR [r13+0x4],ebx
  40b2d9:	mov    rcx,r15
  40b2dc:	sub    rcx,rax
  40b2df:	cmp    rcx,0x2
  40b2e3:	jl     40b2fc <main@@Base+0x69ac>
  40b2e5:	cmp    BYTE PTR [rax],0x20
  40b2e8:	jg     40b30a <main@@Base+0x69ba>
  40b2ea:	jne    40b2fc <main@@Base+0x69ac>
  40b2ec:	cmp    BYTE PTR [rax+0x1],0x20
  40b2f0:	jle    40b2fc <main@@Base+0x69ac>
  40b2f2:	inc    rax
  40b2f5:	cmp    rax,r15
  40b2f8:	jne    40b30f <main@@Base+0x69bf>
  40b2fa:	jmp    40b36c <main@@Base+0x6a1c>
  40b2fc:	mov    rdi,r14
  40b2ff:	mov    rsi,rax
  40b302:	mov    rdx,r15
  40b305:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b30a:	cmp    rax,r15
  40b30d:	je     40b36c <main@@Base+0x6a1c>
  40b30f:	movzx  ecx,BYTE PTR [rax]
  40b312:	cmp    cl,0x2c
  40b315:	jne    40b374 <main@@Base+0x6a24>
  40b317:	lea    rsi,[rax+0x1]
  40b31b:	mov    rcx,r15
  40b31e:	sub    rcx,rsi
  40b321:	cmp    rcx,0x2
  40b325:	jl     40b33a <main@@Base+0x69ea>
  40b327:	cmp    BYTE PTR [rsi],0x20
  40b32a:	jg     40b348 <main@@Base+0x69f8>
  40b32c:	jne    40b33a <main@@Base+0x69ea>
  40b32e:	cmp    BYTE PTR [rax+0x2],0x20
  40b332:	jle    40b33a <main@@Base+0x69ea>
  40b334:	add    rax,0x2
  40b338:	jmp    40b345 <main@@Base+0x69f5>
  40b33a:	mov    rdi,r14
  40b33d:	mov    rdx,r15
  40b340:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b345:	mov    rsi,rax
  40b348:	cmp    rsi,r15
  40b34b:	je     40b3a3 <main@@Base+0x6a53>
  40b34d:	cmp    BYTE PTR [rsi],0x7d
  40b350:	jne    40ae25 <main@@Base+0x64d5>
  40b356:	jmp    40b3ab <main@@Base+0x6a5b>
  40b358:	mov    DWORD PTR [rsp+0x4],ecx
  40b35c:	mov    ebx,ecx
  40b35e:	cmp    rbp,rax
  40b361:	jne    40b2d5 <main@@Base+0x6985>
  40b367:	jmp    40b2a5 <main@@Base+0x6955>
  40b36c:	mov    rcx,r15
  40b36f:	jmp    40ad4a <main@@Base+0x63fa>
  40b374:	cmp    cl,0x7d
  40b377:	jne    40b3eb <main@@Base+0x6a9b>
  40b379:	lea    rcx,[rax+0x1]
  40b37d:	mov    rdx,r15
  40b380:	sub    rdx,rcx
  40b383:	cmp    rdx,0x2
  40b387:	jl     40b3d8 <main@@Base+0x6a88>
  40b389:	cmp    BYTE PTR [rcx],0x20
  40b38c:	jg     40ad4a <main@@Base+0x63fa>
  40b392:	jne    40b3d8 <main@@Base+0x6a88>
  40b394:	cmp    BYTE PTR [rax+0x2],0x20
  40b398:	jle    40b3d8 <main@@Base+0x6a88>
  40b39a:	add    rax,0x2
  40b39e:	jmp    40ad47 <main@@Base+0x63f7>
  40b3a3:	mov    rdi,r14
  40b3a6:	mov    rsi,r15
  40b3a9:	jmp    40b3f1 <main@@Base+0x6aa1>
  40b3ab:	lea    rcx,[rsi+0x1]
  40b3af:	mov    rax,r15
  40b3b2:	sub    rax,rcx
  40b3b5:	cmp    rax,0x2
  40b3b9:	jl     40b3d8 <main@@Base+0x6a88>
  40b3bb:	cmp    BYTE PTR [rcx],0x20
  40b3be:	jg     40ad4a <main@@Base+0x63fa>
  40b3c4:	jne    40b3d8 <main@@Base+0x6a88>
  40b3c6:	cmp    BYTE PTR [rsi+0x2],0x20
  40b3ca:	jle    40b3d8 <main@@Base+0x6a88>
  40b3cc:	add    rsi,0x2
  40b3d0:	mov    rcx,rsi
  40b3d3:	jmp    40ad4a <main@@Base+0x63fa>
  40b3d8:	mov    rdi,r14
  40b3db:	mov    rsi,rcx
  40b3de:	mov    rdx,r15
  40b3e1:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b3e6:	jmp    40ad47 <main@@Base+0x63f7>
  40b3eb:	mov    rdi,r14
  40b3ee:	mov    rsi,rax
  40b3f1:	mov    rdx,r15
  40b3f4:	mov    ecx,0xa
  40b3f9:	jmp    40ad42 <main@@Base+0x63f2>
  40b3fe:	mov    rdi,r14
  40b401:	mov    rsi,rax
  40b404:	mov    rdx,r15
  40b407:	mov    ecx,0x21
  40b40c:	jmp    40ad42 <main@@Base+0x63f2>
  40b411:	mov    rsi,rax
  40b414:	mov    rdi,r14
  40b417:	mov    rdx,r15
  40b41a:	lea    rcx,[rsp+0x1c]
  40b41f:	call   4049d0 <main@@Base+0x80>
  40b424:	mov    rbx,rax
  40b427:	cmp    DWORD PTR [rsp+0x1c],0x0
  40b42c:	je     404a01 <main@@Base+0xb1>
  40b432:	mov    rdi,QWORD PTR [r14]
  40b435:	mov    esi,0x1
  40b43a:	call   41a4b0 <flatcc_builder_extend_offset_vector@@Base>
  40b43f:	test   rax,rax
  40b442:	je     404a01 <main@@Base+0xb1>
  40b448:	mov    ecx,DWORD PTR [rsp+0x1c]
  40b44c:	mov    DWORD PTR [rax],ecx
  40b44e:	mov    rax,r15
  40b451:	sub    rax,rbx
  40b454:	cmp    rax,0x2
  40b458:	jl     40b474 <main@@Base+0x6b24>
  40b45a:	cmp    BYTE PTR [rbx],0x20
  40b45d:	jg     40b485 <main@@Base+0x6b35>
  40b45f:	jne    40b474 <main@@Base+0x6b24>
  40b461:	cmp    BYTE PTR [rbx+0x1],0x20
  40b465:	jle    40b474 <main@@Base+0x6b24>
  40b467:	inc    rbx
  40b46a:	cmp    rbx,r15
  40b46d:	jne    40b48e <main@@Base+0x6b3e>
  40b46f:	jmp    40c7e0 <main@@Base+0x7e90>
  40b474:	mov    rdi,r14
  40b477:	mov    rsi,rbx
  40b47a:	mov    rdx,r15
  40b47d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b482:	mov    rbx,rax
  40b485:	cmp    rbx,r15
  40b488:	je     40c7e0 <main@@Base+0x7e90>
  40b48e:	movzx  eax,BYTE PTR [rbx]
  40b491:	cmp    al,0x2c
  40b493:	jne    40c831 <main@@Base+0x7ee1>
  40b499:	lea    rsi,[rbx+0x1]
  40b49d:	mov    rax,r15
  40b4a0:	sub    rax,rsi
  40b4a3:	cmp    rax,0x2
  40b4a7:	jl     40b4c7 <main@@Base+0x6b77>
  40b4a9:	cmp    BYTE PTR [rsi],0x20
  40b4ac:	jg     40b4d5 <main@@Base+0x6b85>
  40b4ae:	jne    40b4c7 <main@@Base+0x6b77>
  40b4b0:	cmp    BYTE PTR [rbx+0x2],0x20
  40b4b4:	jle    40b4c7 <main@@Base+0x6b77>
  40b4b6:	add    rbx,0x2
  40b4ba:	mov    rsi,rbx
  40b4bd:	cmp    rsi,r15
  40b4c0:	jne    40b4de <main@@Base+0x6b8e>
  40b4c2:	jmp    40c885 <main@@Base+0x7f35>
  40b4c7:	mov    rdi,r14
  40b4ca:	mov    rdx,r15
  40b4cd:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b4d2:	mov    rsi,rax
  40b4d5:	cmp    rsi,r15
  40b4d8:	je     40c885 <main@@Base+0x7f35>
  40b4de:	cmp    BYTE PTR [rsi],0x5d
  40b4e1:	jne    40b414 <main@@Base+0x6ac4>
  40b4e7:	lea    rbp,[rsi+0x1]
  40b4eb:	mov    rax,r15
  40b4ee:	sub    rax,rbp
  40b4f1:	cmp    rax,0x2
  40b4f5:	jl     40c867 <main@@Base+0x7f17>
  40b4fb:	cmp    BYTE PTR [rbp+0x0],0x20
  40b4ff:	jg     409b4b <main@@Base+0x51fb>
  40b505:	jne    40c867 <main@@Base+0x7f17>
  40b50b:	cmp    BYTE PTR [rsi+0x2],0x20
  40b50f:	jle    40c867 <main@@Base+0x7f17>
  40b515:	add    rsi,0x2
  40b519:	mov    rbp,rsi
  40b51c:	jmp    409b4b <main@@Base+0x51fb>
  40b521:	test   rcx,0xffffffff80000000
  40b528:	je     40b71b <main@@Base+0x6dcb>
  40b52e:	mov    rdi,r14
  40b531:	mov    rsi,rax
  40b534:	mov    rdx,r15
  40b537:	mov    ecx,0x7
  40b53c:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b541:	jmp    40b721 <main@@Base+0x6dd1>
  40b546:	mov    rdi,r14
  40b549:	mov    rsi,rax
  40b54c:	mov    rdx,r15
  40b54f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b554:	mov    rsi,r15
  40b557:	cmp    rax,r15
  40b55a:	je     40bd58 <main@@Base+0x7408>
  40b560:	cmp    BYTE PTR [rax],0x7d
  40b563:	jne    40bd55 <main@@Base+0x7405>
  40b569:	lea    rbp,[rax+0x1]
  40b56d:	mov    rcx,r15
  40b570:	sub    rcx,rbp
  40b573:	cmp    rcx,0x2
  40b577:	jl     40d3f8 <main@@Base+0x8aa8>
  40b57d:	cmp    BYTE PTR [rbp+0x0],0x20
  40b581:	jg     409f41 <main@@Base+0x55f1>
  40b587:	jne    40d3f8 <main@@Base+0x8aa8>
  40b58d:	cmp    BYTE PTR [rax+0x2],0x20
  40b591:	jle    40d3f8 <main@@Base+0x8aa8>
  40b597:	add    rax,0x2
  40b59b:	jmp    409f3e <main@@Base+0x55ee>
  40b5a0:	mov    rbp,r15
  40b5a3:	jmp    40815b <main@@Base+0x380b>
  40b5a8:	mov    rdi,r14
  40b5ab:	mov    rsi,rax
  40b5ae:	mov    rdx,r15
  40b5b1:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b5b6:	mov    rbx,r15
  40b5b9:	cmp    rax,r15
  40b5bc:	je     40c4dc <main@@Base+0x7b8c>
  40b5c2:	cmp    BYTE PTR [rax],0x5d
  40b5c5:	jne    40c4d9 <main@@Base+0x7b89>
  40b5cb:	lea    rbp,[rax+0x1]
  40b5cf:	mov    rcx,r15
  40b5d2:	sub    rcx,rbp
  40b5d5:	cmp    rcx,0x2
  40b5d9:	jl     40d7fd <main@@Base+0x8ead>
  40b5df:	cmp    BYTE PTR [rbp+0x0],0x20
  40b5e3:	jg     40a92a <main@@Base+0x5fda>
  40b5e9:	jne    40d7fd <main@@Base+0x8ead>
  40b5ef:	cmp    BYTE PTR [rax+0x2],0x20
  40b5f3:	jle    40d7fd <main@@Base+0x8ead>
  40b5f9:	add    rax,0x2
  40b5fd:	jmp    40a927 <main@@Base+0x5fd7>
  40b602:	cmp    cl,0x5d
  40b605:	je     4095f3 <main@@Base+0x4ca3>
  40b60b:	mov    rdi,r14
  40b60e:	mov    rsi,rax
  40b611:	jmp    40b619 <main@@Base+0x6cc9>
  40b613:	mov    rdi,r14
  40b616:	mov    rsi,r15
  40b619:	mov    rdx,r15
  40b61c:	mov    ecx,0x9
  40b621:	jmp    408153 <main@@Base+0x3803>
  40b626:	mov    rcx,QWORD PTR [rsp+0x10]
  40b62b:	mov    rdx,rcx
  40b62e:	shr    rdx,0x20
  40b632:	je     40c358 <main@@Base+0x7a08>
  40b638:	mov    rdi,r14
  40b63b:	mov    rsi,rax
  40b63e:	mov    rdx,r15
  40b641:	mov    ecx,0x7
  40b646:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b64b:	jmp    40c35e <main@@Base+0x7a0e>
  40b650:	mov    rbx,QWORD PTR [rsp+0x10]
  40b655:	mov    QWORD PTR [rsp+0x20],rbx
  40b65a:	mov    rcx,rbp
  40b65d:	mov    rbp,rax
  40b660:	cmp    rcx,rax
  40b663:	jne    40b69c <main@@Base+0x6d4c>
  40b665:	mov    rdi,r14
  40b668:	mov    rsi,rcx
  40b66b:	mov    rdx,r15
  40b66e:	mov    rbx,rcx
  40b671:	lea    rcx,[rip+0x1dc88]        # 429300 <filename@@Base+0x230>
  40b678:	lea    r8,[rsp+0x20]
  40b67d:	call   413710 <main@@Base+0xedc0>
  40b682:	mov    rbp,rax
  40b685:	cmp    rax,rbx
  40b688:	je     40da65 <main@@Base+0x9115>
  40b68e:	cmp    rbp,r15
  40b691:	je     40da65 <main@@Base+0x9115>
  40b697:	mov    rbx,QWORD PTR [rsp+0x20]
  40b69c:	test   rbx,rbx
  40b69f:	jne    40b6ac <main@@Base+0x6d5c>
  40b6a1:	test   BYTE PTR [r14+0x10],0x2
  40b6a6:	je     40d1cb <main@@Base+0x887b>
  40b6ac:	mov    rdi,QWORD PTR [r14]
  40b6af:	mov    edx,0x8
  40b6b4:	mov    esi,0x13
  40b6b9:	jmp    40d365 <main@@Base+0x8a15>
  40b6be:	mov    rdi,r14
  40b6c1:	mov    rsi,rax
  40b6c4:	mov    rdx,r15
  40b6c7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b6cc:	mov    r13,r15
  40b6cf:	cmp    rax,r15
  40b6d2:	je     40c699 <main@@Base+0x7d49>
  40b6d8:	cmp    BYTE PTR [rax],0x5d
  40b6db:	jne    40c696 <main@@Base+0x7d46>
  40b6e1:	lea    rbp,[rax+0x1]
  40b6e5:	mov    rcx,r15
  40b6e8:	sub    rcx,rbp
  40b6eb:	cmp    rcx,0x2
  40b6ef:	jl     40d88b <main@@Base+0x8f3b>
  40b6f5:	cmp    BYTE PTR [rbp+0x0],0x20
  40b6f9:	jg     40aaa7 <main@@Base+0x6157>
  40b6ff:	jne    40d88b <main@@Base+0x8f3b>
  40b705:	cmp    BYTE PTR [rax+0x2],0x20
  40b709:	jle    40d88b <main@@Base+0x8f3b>
  40b70f:	add    rax,0x2
  40b713:	jmp    40aaa4 <main@@Base+0x6154>
  40b718:	neg    rcx
  40b71b:	mov    DWORD PTR [rsp+0x4],ecx
  40b71f:	mov    ebx,ecx
  40b721:	mov    rbp,rax
  40b724:	cmp    r13,rax
  40b727:	jne    40b75c <main@@Base+0x6e0c>
  40b729:	mov    rdi,r14
  40b72c:	mov    rsi,r13
  40b72f:	mov    rdx,r15
  40b732:	lea    rcx,[rip+0x1db27]        # 429260 <filename@@Base+0x190>
  40b739:	lea    r8,[rsp+0x4]
  40b73e:	call   4130e0 <main@@Base+0xe790>
  40b743:	mov    rbp,rax
  40b746:	cmp    rax,r13
  40b749:	je     40da65 <main@@Base+0x9115>
  40b74f:	cmp    rbp,r15
  40b752:	je     40da65 <main@@Base+0x9115>
  40b758:	mov    ebx,DWORD PTR [rsp+0x4]
  40b75c:	test   ebx,ebx
  40b75e:	jne    40b76b <main@@Base+0x6e1b>
  40b760:	test   BYTE PTR [r14+0x10],0x2
  40b765:	je     40d1cb <main@@Base+0x887b>
  40b76b:	mov    rdi,QWORD PTR [r14]
  40b76e:	mov    edx,0x4
  40b773:	mov    esi,0x14
  40b778:	jmp    40d6bf <main@@Base+0x8d6f>
  40b77d:	lea    rbp,[rbx+0x1]
  40b781:	mov    rax,r15
  40b784:	sub    rax,rbp
  40b787:	cmp    rax,0x2
  40b78b:	jl     40b7ab <main@@Base+0x6e5b>
  40b78d:	cmp    BYTE PTR [rbp+0x0],0x20
  40b791:	jg     40815b <main@@Base+0x380b>
  40b797:	jne    40b7ab <main@@Base+0x6e5b>
  40b799:	cmp    BYTE PTR [rbx+0x2],0x20
  40b79d:	jle    40b7ab <main@@Base+0x6e5b>
  40b79f:	add    rbx,0x2
  40b7a3:	mov    rbp,rbx
  40b7a6:	jmp    40815b <main@@Base+0x380b>
  40b7ab:	mov    rdi,r14
  40b7ae:	mov    rsi,rbp
  40b7b1:	mov    rdx,r15
  40b7b4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b7b9:	jmp    408158 <main@@Base+0x3808>
  40b7be:	mov    rbx,rax
  40b7c1:	mov    BYTE PTR [rsp+0x4],0x0
  40b7c6:	mov    rdi,QWORD PTR [r14]
  40b7c9:	mov    esi,0x1
  40b7ce:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40b7d3:	test   rax,rax
  40b7d6:	je     404a01 <main@@Base+0xb1>
  40b7dc:	mov    rbp,rax
  40b7df:	mov    QWORD PTR [rsp+0x10],0x0
  40b7e8:	mov    DWORD PTR [rsp+0x20],0x0
  40b7f0:	mov    BYTE PTR [rsp+0x4],0x0
  40b7f5:	cmp    rbx,r15
  40b7f8:	je     40b82e <main@@Base+0x6ede>
  40b7fa:	mov    rdi,r14
  40b7fd:	mov    rsi,rbx
  40b800:	mov    rdx,r15
  40b803:	lea    rcx,[rsp+0x20]
  40b808:	lea    r8,[rsp+0x10]
  40b80d:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40b812:	cmp    rax,rbx
  40b815:	je     40b83a <main@@Base+0x6eea>
  40b817:	cmp    DWORD PTR [rsp+0x20],0x0
  40b81c:	je     40b846 <main@@Base+0x6ef6>
  40b81e:	mov    rdi,r14
  40b821:	mov    rsi,rax
  40b824:	mov    rdx,r15
  40b827:	mov    ecx,0x8
  40b82c:	jmp    40b866 <main@@Base+0x6f16>
  40b82e:	xor    ecx,ecx
  40b830:	mov    rax,r15
  40b833:	cmp    rbx,rax
  40b836:	jne    40b8a3 <main@@Base+0x6f53>
  40b838:	jmp    40b872 <main@@Base+0x6f22>
  40b83a:	xor    ecx,ecx
  40b83c:	mov    rax,rbx
  40b83f:	cmp    rbx,rax
  40b842:	jne    40b8a3 <main@@Base+0x6f53>
  40b844:	jmp    40b872 <main@@Base+0x6f22>
  40b846:	mov    rcx,QWORD PTR [rsp+0x10]
  40b84b:	cmp    rcx,0x100
  40b852:	jb     40b958 <main@@Base+0x7008>
  40b858:	mov    rdi,r14
  40b85b:	mov    rsi,rax
  40b85e:	mov    rdx,r15
  40b861:	mov    ecx,0x7
  40b866:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40b86b:	xor    ecx,ecx
  40b86d:	cmp    rbx,rax
  40b870:	jne    40b8a3 <main@@Base+0x6f53>
  40b872:	mov    rdi,r14
  40b875:	mov    rsi,rbx
  40b878:	mov    rdx,r15
  40b87b:	lea    rcx,[rip+0x1d8be]        # 429140 <filename@@Base+0x70>
  40b882:	lea    r8,[rsp+0x4]
  40b887:	call   40f0b0 <main@@Base+0xa760>
  40b88c:	cmp    rax,rbx
  40b88f:	je     40da93 <main@@Base+0x9143>
  40b895:	cmp    rax,r15
  40b898:	je     40da93 <main@@Base+0x9143>
  40b89e:	movzx  ecx,BYTE PTR [rsp+0x4]
  40b8a3:	mov    BYTE PTR [rbp+0x0],cl
  40b8a6:	mov    rcx,r15
  40b8a9:	sub    rcx,rax
  40b8ac:	cmp    rcx,0x2
  40b8b0:	jl     40b8cc <main@@Base+0x6f7c>
  40b8b2:	cmp    BYTE PTR [rax],0x20
  40b8b5:	jg     40b8da <main@@Base+0x6f8a>
  40b8b7:	jne    40b8cc <main@@Base+0x6f7c>
  40b8b9:	cmp    BYTE PTR [rax+0x1],0x20
  40b8bd:	jle    40b8cc <main@@Base+0x6f7c>
  40b8bf:	inc    rax
  40b8c2:	cmp    rax,r15
  40b8c5:	jne    40b8e3 <main@@Base+0x6f93>
  40b8c7:	jmp    40c890 <main@@Base+0x7f40>
  40b8cc:	mov    rdi,r14
  40b8cf:	mov    rsi,rax
  40b8d2:	mov    rdx,r15
  40b8d5:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b8da:	cmp    rax,r15
  40b8dd:	je     40c890 <main@@Base+0x7f40>
  40b8e3:	movzx  ecx,BYTE PTR [rax]
  40b8e6:	cmp    cl,0x2c
  40b8e9:	jne    40c898 <main@@Base+0x7f48>
  40b8ef:	lea    rbx,[rax+0x1]
  40b8f3:	mov    rcx,r15
  40b8f6:	sub    rcx,rbx
  40b8f9:	cmp    rcx,0x2
  40b8fd:	jl     40b912 <main@@Base+0x6fc2>
  40b8ff:	cmp    BYTE PTR [rbx],0x20
  40b902:	jg     40b923 <main@@Base+0x6fd3>
  40b904:	jne    40b912 <main@@Base+0x6fc2>
  40b906:	cmp    BYTE PTR [rax+0x2],0x20
  40b90a:	jle    40b912 <main@@Base+0x6fc2>
  40b90c:	add    rax,0x2
  40b910:	jmp    40b920 <main@@Base+0x6fd0>
  40b912:	mov    rdi,r14
  40b915:	mov    rsi,rbx
  40b918:	mov    rdx,r15
  40b91b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b920:	mov    rbx,rax
  40b923:	cmp    rbx,r15
  40b926:	je     40c8a9 <main@@Base+0x7f59>
  40b92c:	cmp    BYTE PTR [rbx],0x5d
  40b92f:	je     40d091 <main@@Base+0x8741>
  40b935:	mov    BYTE PTR [rsp+0x4],0x0
  40b93a:	mov    rdi,QWORD PTR [r14]
  40b93d:	mov    esi,0x1
  40b942:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40b947:	mov    rbp,rax
  40b94a:	test   rax,rax
  40b94d:	jne    40b7df <main@@Base+0x6e8f>
  40b953:	jmp    404a01 <main@@Base+0xb1>
  40b958:	mov    BYTE PTR [rsp+0x4],cl
  40b95c:	cmp    rbx,rax
  40b95f:	jne    40b8a3 <main@@Base+0x6f53>
  40b965:	jmp    40b872 <main@@Base+0x6f22>
  40b96a:	mov    rdi,r14
  40b96d:	mov    rsi,rax
  40b970:	mov    rdx,r15
  40b973:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b978:	mov    rsi,r15
  40b97b:	cmp    rax,r15
  40b97e:	je     40c8bf <main@@Base+0x7f6f>
  40b984:	cmp    BYTE PTR [rax],0x7d
  40b987:	jne    40c8bc <main@@Base+0x7f6c>
  40b98d:	lea    rbp,[rax+0x1]
  40b991:	mov    rcx,r15
  40b994:	sub    rcx,rbp
  40b997:	cmp    rcx,0x2
  40b99b:	jl     40d7bc <main@@Base+0x8e6c>
  40b9a1:	cmp    BYTE PTR [rbp+0x0],0x20
  40b9a5:	jg     40a34b <main@@Base+0x59fb>
  40b9ab:	jne    40d7bc <main@@Base+0x8e6c>
  40b9b1:	cmp    BYTE PTR [rax+0x2],0x20
  40b9b5:	jle    40d7bc <main@@Base+0x8e6c>
  40b9bb:	add    rax,0x2
  40b9bf:	jmp    40a348 <main@@Base+0x59f8>
  40b9c4:	mov    rdi,r14
  40b9c7:	mov    rsi,rax
  40b9ca:	mov    rdx,r15
  40b9cd:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40b9d2:	mov    rsi,r15
  40b9d5:	cmp    rax,r15
  40b9d8:	je     40b9e6 <main@@Base+0x7096>
  40b9da:	cmp    BYTE PTR [rax],0x7d
  40b9dd:	je     40d6f3 <main@@Base+0x8da3>
  40b9e3:	mov    rsi,rax
  40b9e6:	mov    rax,r15
  40b9e9:	cmp    rsi,r15
  40b9ec:	je     40ba29 <main@@Base+0x70d9>
  40b9ee:	movzx  eax,BYTE PTR [rsi]
  40b9f1:	cmp    al,0x2e
  40b9f3:	je     40ba09 <main@@Base+0x70b9>
  40b9f5:	cmp    al,0x22
  40b9f7:	jne    40ba1b <main@@Base+0x70cb>
  40b9f9:	inc    rsi
  40b9fc:	mov    rax,QWORD PTR [rsp+0x8]
  40ba01:	mov    DWORD PTR [rax],0x0
  40ba07:	jmp    40ba26 <main@@Base+0x70d6>
  40ba09:	mov    rdi,r14
  40ba0c:	mov    rdx,r15
  40ba0f:	mov    ecx,0x5
  40ba14:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40ba19:	jmp    40ba29 <main@@Base+0x70d9>
  40ba1b:	mov    rax,QWORD PTR [rsp+0x8]
  40ba20:	mov    DWORD PTR [rax],0x1
  40ba26:	mov    rax,rsi
  40ba29:	mov    rdi,r14
  40ba2c:	mov    rsi,rax
  40ba2f:	mov    rdx,r15
  40ba32:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40ba37:	mov    rcx,r15
  40ba3a:	sub    rcx,rax
  40ba3d:	cmp    rcx,0x2
  40ba41:	jl     40ba5d <main@@Base+0x710d>
  40ba43:	cmp    BYTE PTR [rax],0x20
  40ba46:	jg     40ba6b <main@@Base+0x711b>
  40ba48:	jne    40ba5d <main@@Base+0x710d>
  40ba4a:	cmp    BYTE PTR [rax+0x1],0x20
  40ba4e:	jle    40ba5d <main@@Base+0x710d>
  40ba50:	inc    rax
  40ba53:	cmp    rax,r15
  40ba56:	jne    40ba74 <main@@Base+0x7124>
  40ba58:	jmp    40d64c <main@@Base+0x8cfc>
  40ba5d:	mov    rdi,r14
  40ba60:	mov    rsi,rax
  40ba63:	mov    rdx,r15
  40ba66:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ba6b:	cmp    rax,r15
  40ba6e:	je     40d64c <main@@Base+0x8cfc>
  40ba74:	movzx  ecx,BYTE PTR [rax]
  40ba77:	cmp    cl,0x2c
  40ba7a:	jne    40d6ea <main@@Base+0x8d9a>
  40ba80:	lea    rsi,[rax+0x1]
  40ba84:	mov    rcx,r15
  40ba87:	sub    rcx,rsi
  40ba8a:	cmp    rcx,0x2
  40ba8e:	jl     40baa3 <main@@Base+0x7153>
  40ba90:	cmp    BYTE PTR [rsi],0x20
  40ba93:	jg     40bab1 <main@@Base+0x7161>
  40ba95:	jne    40baa3 <main@@Base+0x7153>
  40ba97:	cmp    BYTE PTR [rax+0x2],0x20
  40ba9b:	jle    40baa3 <main@@Base+0x7153>
  40ba9d:	add    rax,0x2
  40baa1:	jmp    40baae <main@@Base+0x715e>
  40baa3:	mov    rdi,r14
  40baa6:	mov    rdx,r15
  40baa9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40baae:	mov    rsi,rax
  40bab1:	cmp    rsi,r15
  40bab4:	je     40d773 <main@@Base+0x8e23>
  40baba:	cmp    BYTE PTR [rsi],0x7d
  40babd:	jne    40b9e6 <main@@Base+0x7096>
  40bac3:	lea    rbp,[rsi+0x1]
  40bac7:	mov    rax,r15
  40baca:	sub    rax,rbp
  40bacd:	cmp    rax,0x2
  40bad1:	jl     40d71e <main@@Base+0x8dce>
  40bad7:	cmp    BYTE PTR [rbp+0x0],0x20
  40badb:	jg     40a61f <main@@Base+0x5ccf>
  40bae1:	jne    40d71e <main@@Base+0x8dce>
  40bae7:	cmp    BYTE PTR [rsi+0x2],0x20
  40baeb:	jle    40d71e <main@@Base+0x8dce>
  40baf1:	add    rsi,0x2
  40baf5:	mov    rbp,rsi
  40baf8:	cmp    DWORD PTR [r14+0x20],0x0
  40bafd:	jne    40a62a <main@@Base+0x5cda>
  40bb03:	jmp    40d8e5 <main@@Base+0x8f95>
  40bb08:	mov    rdi,r14
  40bb0b:	mov    rsi,rbx
  40bb0e:	mov    rdx,r15
  40bb11:	mov    ecx,0x16
  40bb16:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40bb1b:	jmp    40d985 <main@@Base+0x9035>
  40bb20:	mov    rsi,rax
  40bb23:	mov    rdi,r14
  40bb26:	mov    rdx,r15
  40bb29:	lea    rcx,[rsp+0x1c]
  40bb2e:	call   420390 <flatcc_json_parser_build_string@@Base>
  40bb33:	mov    rbx,rax
  40bb36:	cmp    DWORD PTR [rsp+0x1c],0x0
  40bb3b:	je     404a01 <main@@Base+0xb1>
  40bb41:	mov    rdi,QWORD PTR [r14]
  40bb44:	mov    esi,0x1
  40bb49:	call   41a4b0 <flatcc_builder_extend_offset_vector@@Base>
  40bb4e:	test   rax,rax
  40bb51:	je     404a01 <main@@Base+0xb1>
  40bb57:	mov    ecx,DWORD PTR [rsp+0x1c]
  40bb5b:	mov    DWORD PTR [rax],ecx
  40bb5d:	mov    rax,r15
  40bb60:	sub    rax,rbx
  40bb63:	cmp    rax,0x2
  40bb67:	jl     40bb83 <main@@Base+0x7233>
  40bb69:	cmp    BYTE PTR [rbx],0x20
  40bb6c:	jg     40bb94 <main@@Base+0x7244>
  40bb6e:	jne    40bb83 <main@@Base+0x7233>
  40bb70:	cmp    BYTE PTR [rbx+0x1],0x20
  40bb74:	jle    40bb83 <main@@Base+0x7233>
  40bb76:	inc    rbx
  40bb79:	cmp    rbx,r15
  40bb7c:	jne    40bb9d <main@@Base+0x724d>
  40bb7e:	jmp    40d5c2 <main@@Base+0x8c72>
  40bb83:	mov    rdi,r14
  40bb86:	mov    rsi,rbx
  40bb89:	mov    rdx,r15
  40bb8c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40bb91:	mov    rbx,rax
  40bb94:	cmp    rbx,r15
  40bb97:	je     40d5c2 <main@@Base+0x8c72>
  40bb9d:	movzx  eax,BYTE PTR [rbx]
  40bba0:	cmp    al,0x2c
  40bba2:	jne    40d5ca <main@@Base+0x8c7a>
  40bba8:	lea    rsi,[rbx+0x1]
  40bbac:	mov    rax,r15
  40bbaf:	sub    rax,rsi
  40bbb2:	cmp    rax,0x2
  40bbb6:	jl     40bbd6 <main@@Base+0x7286>
  40bbb8:	cmp    BYTE PTR [rsi],0x20
  40bbbb:	jg     40bbe4 <main@@Base+0x7294>
  40bbbd:	jne    40bbd6 <main@@Base+0x7286>
  40bbbf:	cmp    BYTE PTR [rbx+0x2],0x20
  40bbc3:	jle    40bbd6 <main@@Base+0x7286>
  40bbc5:	add    rbx,0x2
  40bbc9:	mov    rsi,rbx
  40bbcc:	cmp    rsi,r15
  40bbcf:	jne    40bbed <main@@Base+0x729d>
  40bbd1:	jmp    40d639 <main@@Base+0x8ce9>
  40bbd6:	mov    rdi,r14
  40bbd9:	mov    rdx,r15
  40bbdc:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40bbe1:	mov    rsi,rax
  40bbe4:	cmp    rsi,r15
  40bbe7:	je     40d639 <main@@Base+0x8ce9>
  40bbed:	cmp    BYTE PTR [rsi],0x5d
  40bbf0:	jne    40bb23 <main@@Base+0x71d3>
  40bbf6:	lea    rbp,[rsi+0x1]
  40bbfa:	mov    rax,r15
  40bbfd:	sub    rax,rbp
  40bc00:	cmp    rax,0x2
  40bc04:	jl     40d600 <main@@Base+0x8cb0>
  40bc0a:	cmp    BYTE PTR [rbp+0x0],0x20
  40bc0e:	jg     40a815 <main@@Base+0x5ec5>
  40bc14:	jne    40d600 <main@@Base+0x8cb0>
  40bc1a:	cmp    BYTE PTR [rsi+0x2],0x20
  40bc1e:	jle    40d600 <main@@Base+0x8cb0>
  40bc24:	add    rsi,0x2
  40bc28:	mov    rbp,rsi
  40bc2b:	jmp    40a815 <main@@Base+0x5ec5>
  40bc30:	mov    rbp,r15
  40bc33:	jmp    409aa7 <main@@Base+0x5157>
  40bc38:	cmp    al,0x5d
  40bc3a:	jne    40d380 <main@@Base+0x8a30>
  40bc40:	lea    rbp,[rcx+0x1]
  40bc44:	mov    rax,r15
  40bc47:	sub    rax,rbp
  40bc4a:	cmp    rax,0x2
  40bc4e:	jl     40c448 <main@@Base+0x7af8>
  40bc54:	cmp    BYTE PTR [rbp+0x0],0x20
  40bc58:	jg     409aa7 <main@@Base+0x5157>
  40bc5e:	jne    40c448 <main@@Base+0x7af8>
  40bc64:	cmp    BYTE PTR [rcx+0x2],0x20
  40bc68:	jle    40c448 <main@@Base+0x7af8>
  40bc6e:	add    rcx,0x2
  40bc72:	mov    rbp,rcx
  40bc75:	jmp    409aa7 <main@@Base+0x5157>
  40bc7a:	mov    rdi,r14
  40bc7d:	mov    rsi,r15
  40bc80:	jmp    40d386 <main@@Base+0x8a36>
  40bc85:	jne    40bc9c <main@@Base+0x734c>
  40bc87:	cmp    BYTE PTR [r13+0x2],0x20
  40bc8c:	jle    40bc9c <main@@Base+0x734c>
  40bc8e:	add    r13,0x2
  40bc92:	cmp    r12,r13
  40bc95:	jne    40bcb3 <main@@Base+0x7363>
  40bc97:	jmp    40d1ba <main@@Base+0x886a>
  40bc9c:	mov    rdi,r14
  40bc9f:	mov    rdx,r15
  40bca2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40bca7:	mov    r13,rax
  40bcaa:	cmp    r12,r13
  40bcad:	je     40d1ba <main@@Base+0x886a>
  40bcb3:	mov    QWORD PTR [rsp+0x10],0x0
  40bcbc:	mov    DWORD PTR [rsp+0x4],0x0
  40bcc4:	mov    QWORD PTR [rsp+0x20],0x0
  40bccd:	cmp    r13,r15
  40bcd0:	je     40bd1e <main@@Base+0x73ce>
  40bcd2:	mov    rdi,r14
  40bcd5:	mov    rsi,r13
  40bcd8:	mov    rdx,r15
  40bcdb:	lea    rcx,[rsp+0x4]
  40bce0:	lea    r8,[rsp+0x10]
  40bce5:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40bcea:	cmp    rax,r13
  40bced:	je     40bd28 <main@@Base+0x73d8>
  40bcef:	mov    rbx,QWORD PTR [rsp+0x10]
  40bcf4:	cmp    DWORD PTR [rsp+0x4],0x0
  40bcf9:	je     40bd32 <main@@Base+0x73e2>
  40bcfb:	movabs rcx,0x8000000000000000
  40bd05:	cmp    rbx,rcx
  40bd08:	jbe    40c45b <main@@Base+0x7b0b>
  40bd0e:	mov    rdi,r14
  40bd11:	mov    rsi,rax
  40bd14:	mov    rdx,r15
  40bd17:	mov    ecx,0x8
  40bd1c:	jmp    40bd49 <main@@Base+0x73f9>
  40bd1e:	xor    ebx,ebx
  40bd20:	mov    rax,r15
  40bd23:	jmp    40c463 <main@@Base+0x7b13>
  40bd28:	xor    ebx,ebx
  40bd2a:	mov    rax,r13
  40bd2d:	jmp    40c463 <main@@Base+0x7b13>
  40bd32:	test   rbx,rbx
  40bd35:	jns    40c45e <main@@Base+0x7b0e>
  40bd3b:	mov    rdi,r14
  40bd3e:	mov    rsi,rax
  40bd41:	mov    rdx,r15
  40bd44:	mov    ecx,0x7
  40bd49:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40bd4e:	xor    ebx,ebx
  40bd50:	jmp    40c463 <main@@Base+0x7b13>
  40bd55:	mov    rsi,rax
  40bd58:	mov    r12,r15
  40bd5b:	cmp    rsi,r15
  40bd5e:	je     40bd9e <main@@Base+0x744e>
  40bd60:	movzx  eax,BYTE PTR [rsi]
  40bd63:	cmp    al,0x2e
  40bd65:	je     40bd7b <main@@Base+0x742b>
  40bd67:	cmp    al,0x22
  40bd69:	jne    40bd90 <main@@Base+0x7440>
  40bd6b:	inc    rsi
  40bd6e:	mov    rax,QWORD PTR [rsp+0x8]
  40bd73:	mov    DWORD PTR [rax],0x0
  40bd79:	jmp    40bd9b <main@@Base+0x744b>
  40bd7b:	mov    rdi,r14
  40bd7e:	mov    rdx,r15
  40bd81:	mov    ecx,0x5
  40bd86:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40bd8b:	mov    r12,rax
  40bd8e:	jmp    40bd9e <main@@Base+0x744e>
  40bd90:	mov    rax,QWORD PTR [rsp+0x8]
  40bd95:	mov    DWORD PTR [rax],0x1
  40bd9b:	mov    r12,rsi
  40bd9e:	mov    rcx,r15
  40bda1:	sub    rcx,r12
  40bda4:	cmp    rcx,0x8
  40bda8:	jb     40bdb5 <main@@Base+0x7465>
  40bdaa:	movbe  rax,QWORD PTR [r12]
  40bdb0:	jmp    40be3a <main@@Base+0x74ea>
  40bdb5:	lea    rax,[rcx-0x1]
  40bdb9:	cmp    rax,0x6
  40bdbd:	ja     40c269 <main@@Base+0x7919>
  40bdc3:	lea    rdx,[rip+0x163ca]        # 422194 <_IO_stdin_used@@Base+0x194>
  40bdca:	mov    rsi,rdx
  40bdcd:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40bdd1:	add    rdx,rsi
  40bdd4:	xor    r8d,r8d
  40bdd7:	xor    eax,eax
  40bdd9:	xor    esi,esi
  40bddb:	xor    edi,edi
  40bddd:	xor    ebp,ebp
  40bddf:	xor    ebx,ebx
  40bde1:	jmp    rdx
  40bde3:	movsx  r8,BYTE PTR [r12+0x6]
  40bde9:	shl    r8,0x8
  40bded:	movsx  rax,BYTE PTR [r12+0x5]
  40bdf3:	shl    rax,0x10
  40bdf7:	or     rax,r8
  40bdfa:	movsx  rsi,BYTE PTR [r12+0x4]
  40be00:	shl    rsi,0x18
  40be04:	or     rsi,rax
  40be07:	movsx  rdi,BYTE PTR [r12+0x3]
  40be0d:	shl    rdi,0x20
  40be11:	or     rdi,rsi
  40be14:	movsx  rbp,BYTE PTR [r12+0x2]
  40be1a:	shl    rbp,0x28
  40be1e:	or     rbp,rdi
  40be21:	movsx  rbx,BYTE PTR [r12+0x1]
  40be27:	shl    rbx,0x30
  40be2b:	or     rbx,rbp
  40be2e:	movzx  eax,BYTE PTR [r12]
  40be33:	shl    rax,0x38
  40be37:	or     rax,rbx
  40be3a:	movabs rdx,0x6e65737465640000
  40be44:	cmp    rax,rdx
  40be47:	jae    40beb0 <main@@Base+0x7560>
  40be49:	movabs rdx,0xffffffff00000000
  40be53:	and    rax,rdx
  40be56:	movabs rdx,0x6461746100000000
  40be60:	cmp    rax,rdx
  40be63:	jne    40c269 <main@@Base+0x7919>
  40be69:	mov    rax,r12
  40be6c:	cmp    rcx,0x5
  40be70:	jl     40c195 <main@@Base+0x7845>
  40be76:	mov    rax,QWORD PTR [rsp+0x8]
  40be7b:	cmp    DWORD PTR [rax],0x0
  40be7e:	movzx  ecx,BYTE PTR [r12+0x4]
  40be84:	je     40bf6d <main@@Base+0x761d>
  40be8a:	cmp    cl,0x21
  40be8d:	jl     40be9b <main@@Base+0x754b>
  40be8f:	mov    rax,r12
  40be92:	cmp    cl,0x3a
  40be95:	jne    40c195 <main@@Base+0x7845>
  40be9b:	lea    rsi,[r12+0x4]
  40bea0:	mov    rax,QWORD PTR [rsp+0x8]
  40bea5:	mov    DWORD PTR [rax],0x0
  40beab:	jmp    40bf7e <main@@Base+0x762e>
  40beb0:	mov    rdx,rax
  40beb3:	shr    rdx,0x8
  40beb7:	movabs rsi,0x75726c64617461
  40bec1:	cmp    rdx,rsi
  40bec4:	jne    40bf0d <main@@Base+0x75bd>
  40bec6:	mov    rax,r12
  40bec9:	cmp    rcx,0x8
  40becd:	jl     40c1da <main@@Base+0x788a>
  40bed3:	mov    rax,QWORD PTR [rsp+0x8]
  40bed8:	cmp    DWORD PTR [rax],0x0
  40bedb:	movzx  ecx,BYTE PTR [r12+0x7]
  40bee1:	je     40bfa4 <main@@Base+0x7654>
  40bee7:	cmp    cl,0x21
  40beea:	jl     40bef8 <main@@Base+0x75a8>
  40beec:	mov    rax,r12
  40beef:	cmp    cl,0x3a
  40bef2:	jne    40c1da <main@@Base+0x788a>
  40bef8:	lea    rsi,[r12+0x7]
  40befd:	mov    rax,QWORD PTR [rsp+0x8]
  40bf02:	mov    DWORD PTR [rax],0x0
  40bf08:	jmp    40bfb5 <main@@Base+0x7665>
  40bf0d:	and    rax,0xffffffffffff0000
  40bf13:	movabs rdx,0x6e65737465640000
  40bf1d:	cmp    rax,rdx
  40bf20:	jne    40c269 <main@@Base+0x7919>
  40bf26:	mov    rax,r12
  40bf29:	cmp    rcx,0x7
  40bf2d:	jl     40c222 <main@@Base+0x78d2>
  40bf33:	mov    rax,QWORD PTR [rsp+0x8]
  40bf38:	cmp    DWORD PTR [rax],0x0
  40bf3b:	movzx  ecx,BYTE PTR [r12+0x6]
  40bf41:	je     40c0db <main@@Base+0x778b>
  40bf47:	cmp    cl,0x21
  40bf4a:	jl     40bf58 <main@@Base+0x7608>
  40bf4c:	mov    rax,r12
  40bf4f:	cmp    cl,0x3a
  40bf52:	jne    40c222 <main@@Base+0x78d2>
  40bf58:	lea    rsi,[r12+0x6]
  40bf5d:	mov    rax,QWORD PTR [rsp+0x8]
  40bf62:	mov    DWORD PTR [rax],0x0
  40bf68:	jmp    40c0ec <main@@Base+0x779c>
  40bf6d:	mov    rax,r12
  40bf70:	cmp    cl,0x22
  40bf73:	jne    40c195 <main@@Base+0x7845>
  40bf79:	lea    rsi,[r12+0x5]
  40bf7e:	mov    rax,r15
  40bf81:	sub    rax,rsi
  40bf84:	cmp    rax,0x2
  40bf88:	jl     40bfe3 <main@@Base+0x7693>
  40bf8a:	cmp    BYTE PTR [rsi],0x20
  40bf8d:	jg     40bff1 <main@@Base+0x76a1>
  40bf8f:	jne    40bfe3 <main@@Base+0x7693>
  40bf91:	cmp    BYTE PTR [rsi+0x1],0x20
  40bf95:	jle    40bfe3 <main@@Base+0x7693>
  40bf97:	inc    rsi
  40bf9a:	cmp    rsi,r15
  40bf9d:	jne    40bffa <main@@Base+0x76aa>
  40bf9f:	jmp    40c09f <main@@Base+0x774f>
  40bfa4:	mov    rax,r12
  40bfa7:	cmp    cl,0x22
  40bfaa:	jne    40c1da <main@@Base+0x788a>
  40bfb0:	lea    rsi,[r12+0x8]
  40bfb5:	mov    rax,r15
  40bfb8:	sub    rax,rsi
  40bfbb:	cmp    rax,0x2
  40bfbf:	jl     40c045 <main@@Base+0x76f5>
  40bfc5:	cmp    BYTE PTR [rsi],0x20
  40bfc8:	jg     40c053 <main@@Base+0x7703>
  40bfce:	jne    40c045 <main@@Base+0x76f5>
  40bfd0:	cmp    BYTE PTR [rsi+0x1],0x20
  40bfd4:	jle    40c045 <main@@Base+0x76f5>
  40bfd6:	inc    rsi
  40bfd9:	cmp    rsi,r15
  40bfdc:	jne    40c058 <main@@Base+0x7708>
  40bfde:	jmp    40c0bd <main@@Base+0x776d>
  40bfe3:	mov    rdi,r14
  40bfe6:	mov    rdx,r15
  40bfe9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40bfee:	mov    rsi,rax
  40bff1:	cmp    rsi,r15
  40bff4:	je     40c09f <main@@Base+0x774f>
  40bffa:	cmp    BYTE PTR [rsi],0x3a
  40bffd:	jne    40c09f <main@@Base+0x774f>
  40c003:	lea    rax,[rsi+0x1]
  40c007:	mov    rcx,r15
  40c00a:	sub    rcx,rax
  40c00d:	cmp    rcx,0x2
  40c011:	jl     40c187 <main@@Base+0x7837>
  40c017:	cmp    BYTE PTR [rax],0x20
  40c01a:	jg     40c195 <main@@Base+0x7845>
  40c020:	jne    40c187 <main@@Base+0x7837>
  40c026:	cmp    BYTE PTR [rsi+0x2],0x20
  40c02a:	jle    40c187 <main@@Base+0x7837>
  40c030:	add    rsi,0x2
  40c034:	mov    rax,rsi
  40c037:	cmp    r12,rax
  40c03a:	jne    40c19e <main@@Base+0x784e>
  40c040:	jmp    40c269 <main@@Base+0x7919>
  40c045:	mov    rdi,r14
  40c048:	mov    rdx,r15
  40c04b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c050:	mov    rsi,rax
  40c053:	cmp    rsi,r15
  40c056:	je     40c0bd <main@@Base+0x776d>
  40c058:	cmp    BYTE PTR [rsi],0x3a
  40c05b:	jne    40c0bd <main@@Base+0x776d>
  40c05d:	lea    rax,[rsi+0x1]
  40c061:	mov    rcx,r15
  40c064:	sub    rcx,rax
  40c067:	cmp    rcx,0x2
  40c06b:	jl     40c1cc <main@@Base+0x787c>
  40c071:	cmp    BYTE PTR [rax],0x20
  40c074:	jg     40c1da <main@@Base+0x788a>
  40c07a:	jne    40c1cc <main@@Base+0x787c>
  40c080:	cmp    BYTE PTR [rsi+0x2],0x20
  40c084:	jle    40c1cc <main@@Base+0x787c>
  40c08a:	add    rsi,0x2
  40c08e:	mov    rax,rsi
  40c091:	cmp    r12,rax
  40c094:	jne    40c1e3 <main@@Base+0x7893>
  40c09a:	jmp    40c269 <main@@Base+0x7919>
  40c09f:	mov    rdi,r14
  40c0a2:	mov    rdx,r15
  40c0a5:	mov    ecx,0x4
  40c0aa:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40c0af:	cmp    r12,rax
  40c0b2:	jne    40c19e <main@@Base+0x784e>
  40c0b8:	jmp    40c269 <main@@Base+0x7919>
  40c0bd:	mov    rdi,r14
  40c0c0:	mov    rdx,r15
  40c0c3:	mov    ecx,0x4
  40c0c8:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40c0cd:	cmp    r12,rax
  40c0d0:	jne    40c1e3 <main@@Base+0x7893>
  40c0d6:	jmp    40c269 <main@@Base+0x7919>
  40c0db:	mov    rax,r12
  40c0de:	cmp    cl,0x22
  40c0e1:	jne    40c222 <main@@Base+0x78d2>
  40c0e7:	lea    rsi,[r12+0x7]
  40c0ec:	mov    rax,r15
  40c0ef:	sub    rax,rsi
  40c0f2:	cmp    rax,0x2
  40c0f6:	jl     40c10f <main@@Base+0x77bf>
  40c0f8:	cmp    BYTE PTR [rsi],0x20
  40c0fb:	jg     40c11d <main@@Base+0x77cd>
  40c0fd:	jne    40c10f <main@@Base+0x77bf>
  40c0ff:	cmp    BYTE PTR [rsi+0x1],0x20
  40c103:	jle    40c10f <main@@Base+0x77bf>
  40c105:	inc    rsi
  40c108:	cmp    rsi,r15
  40c10b:	jne    40c122 <main@@Base+0x77d2>
  40c10d:	jmp    40c169 <main@@Base+0x7819>
  40c10f:	mov    rdi,r14
  40c112:	mov    rdx,r15
  40c115:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c11a:	mov    rsi,rax
  40c11d:	cmp    rsi,r15
  40c120:	je     40c169 <main@@Base+0x7819>
  40c122:	cmp    BYTE PTR [rsi],0x3a
  40c125:	jne    40c169 <main@@Base+0x7819>
  40c127:	lea    rax,[rsi+0x1]
  40c12b:	mov    rcx,r15
  40c12e:	sub    rcx,rax
  40c131:	cmp    rcx,0x2
  40c135:	jl     40c214 <main@@Base+0x78c4>
  40c13b:	cmp    BYTE PTR [rax],0x20
  40c13e:	jg     40c222 <main@@Base+0x78d2>
  40c144:	jne    40c214 <main@@Base+0x78c4>
  40c14a:	cmp    BYTE PTR [rsi+0x2],0x20
  40c14e:	jle    40c214 <main@@Base+0x78c4>
  40c154:	add    rsi,0x2
  40c158:	mov    rax,rsi
  40c15b:	cmp    r12,rax
  40c15e:	jne    40c227 <main@@Base+0x78d7>
  40c164:	jmp    40c269 <main@@Base+0x7919>
  40c169:	mov    rdi,r14
  40c16c:	mov    rdx,r15
  40c16f:	mov    ecx,0x4
  40c174:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40c179:	cmp    r12,rax
  40c17c:	jne    40c227 <main@@Base+0x78d7>
  40c182:	jmp    40c269 <main@@Base+0x7919>
  40c187:	mov    rdi,r14
  40c18a:	mov    rsi,rax
  40c18d:	mov    rdx,r15
  40c190:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c195:	cmp    r12,rax
  40c198:	je     40c269 <main@@Base+0x7919>
  40c19e:	mov    rdi,r14
  40c1a1:	mov    rsi,rax
  40c1a4:	mov    rdx,r15
  40c1a7:	lea    rcx,[rsp+0x10]
  40c1ac:	xor    r8d,r8d
  40c1af:	call   41ffb0 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40c1b4:	mov    rbx,rax
  40c1b7:	cmp    DWORD PTR [rsp+0x10],0x0
  40c1bc:	je     409f4f <main@@Base+0x55ff>
  40c1c2:	mov    rdi,QWORD PTR [r14]
  40c1c5:	xor    esi,esi
  40c1c7:	jmp    40c253 <main@@Base+0x7903>
  40c1cc:	mov    rdi,r14
  40c1cf:	mov    rsi,rax
  40c1d2:	mov    rdx,r15
  40c1d5:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c1da:	cmp    r12,rax
  40c1dd:	je     40c269 <main@@Base+0x7919>
  40c1e3:	mov    rdi,r14
  40c1e6:	mov    rsi,rax
  40c1e9:	mov    rdx,r15
  40c1ec:	lea    rcx,[rsp+0x10]
  40c1f1:	mov    r8d,0x1
  40c1f7:	call   41ffb0 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40c1fc:	mov    rbx,rax
  40c1ff:	cmp    DWORD PTR [rsp+0x10],0x0
  40c204:	je     409f4f <main@@Base+0x55ff>
  40c20a:	mov    rdi,QWORD PTR [r14]
  40c20d:	mov    esi,0x1
  40c212:	jmp    40c253 <main@@Base+0x7903>
  40c214:	mov    rdi,r14
  40c217:	mov    rsi,rax
  40c21a:	mov    rdx,r15
  40c21d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c222:	cmp    r12,rax
  40c225:	je     40c269 <main@@Base+0x7919>
  40c227:	mov    rdi,r14
  40c22a:	mov    rsi,rax
  40c22d:	mov    rdx,r15
  40c230:	lea    rcx,[rsp+0x10]
  40c235:	xor    r8d,r8d
  40c238:	call   41ffb0 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40c23d:	mov    rbx,rax
  40c240:	cmp    DWORD PTR [rsp+0x10],0x0
  40c245:	je     409f4f <main@@Base+0x55ff>
  40c24b:	mov    rdi,QWORD PTR [r14]
  40c24e:	mov    esi,0x2
  40c253:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  40c258:	test   rax,rax
  40c25b:	je     409f4f <main@@Base+0x55ff>
  40c261:	mov    ecx,DWORD PTR [rsp+0x10]
  40c265:	mov    DWORD PTR [rax],ecx
  40c267:	jmp    40c27a <main@@Base+0x792a>
  40c269:	mov    rdi,r14
  40c26c:	mov    rsi,r12
  40c26f:	mov    rdx,r15
  40c272:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c277:	mov    rbx,rax
  40c27a:	mov    rax,r15
  40c27d:	sub    rax,rbx
  40c280:	cmp    rax,0x2
  40c284:	jl     40c2a0 <main@@Base+0x7950>
  40c286:	cmp    BYTE PTR [rbx],0x20
  40c289:	jg     40c2b1 <main@@Base+0x7961>
  40c28b:	jne    40c2a0 <main@@Base+0x7950>
  40c28d:	cmp    BYTE PTR [rbx+0x1],0x20
  40c291:	jle    40c2a0 <main@@Base+0x7950>
  40c293:	inc    rbx
  40c296:	cmp    rbx,r15
  40c299:	jne    40c2ba <main@@Base+0x796a>
  40c29b:	jmp    40d393 <main@@Base+0x8a43>
  40c2a0:	mov    rdi,r14
  40c2a3:	mov    rsi,rbx
  40c2a6:	mov    rdx,r15
  40c2a9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c2ae:	mov    rbx,rax
  40c2b1:	cmp    rbx,r15
  40c2b4:	je     40d393 <main@@Base+0x8a43>
  40c2ba:	movzx  eax,BYTE PTR [rbx]
  40c2bd:	cmp    al,0x2c
  40c2bf:	jne    40d3ba <main@@Base+0x8a6a>
  40c2c5:	lea    rsi,[rbx+0x1]
  40c2c9:	mov    rax,r15
  40c2cc:	sub    rax,rsi
  40c2cf:	cmp    rax,0x2
  40c2d3:	jl     40c2f3 <main@@Base+0x79a3>
  40c2d5:	cmp    BYTE PTR [rsi],0x20
  40c2d8:	jg     40c301 <main@@Base+0x79b1>
  40c2da:	jne    40c2f3 <main@@Base+0x79a3>
  40c2dc:	cmp    BYTE PTR [rbx+0x2],0x20
  40c2e0:	jle    40c2f3 <main@@Base+0x79a3>
  40c2e2:	add    rbx,0x2
  40c2e6:	mov    rsi,rbx
  40c2e9:	cmp    rsi,r15
  40c2ec:	jne    40c30a <main@@Base+0x79ba>
  40c2ee:	jmp    40d40b <main@@Base+0x8abb>
  40c2f3:	mov    rdi,r14
  40c2f6:	mov    rdx,r15
  40c2f9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c2fe:	mov    rsi,rax
  40c301:	cmp    rsi,r15
  40c304:	je     40d40b <main@@Base+0x8abb>
  40c30a:	cmp    BYTE PTR [rsi],0x7d
  40c30d:	jne    40bd58 <main@@Base+0x7408>
  40c313:	lea    rbp,[rsi+0x1]
  40c317:	mov    rax,r15
  40c31a:	sub    rax,rbp
  40c31d:	cmp    rax,0x2
  40c321:	jl     40d3f8 <main@@Base+0x8aa8>
  40c327:	cmp    BYTE PTR [rbp+0x0],0x20
  40c32b:	jg     409f41 <main@@Base+0x55f1>
  40c331:	jne    40d3f8 <main@@Base+0x8aa8>
  40c337:	cmp    BYTE PTR [rsi+0x2],0x20
  40c33b:	jle    40d3f8 <main@@Base+0x8aa8>
  40c341:	add    rsi,0x2
  40c345:	mov    rbp,rsi
  40c348:	cmp    DWORD PTR [r14+0x20],0x0
  40c34d:	jne    409f4c <main@@Base+0x55fc>
  40c353:	jmp    40d3a1 <main@@Base+0x8a51>
  40c358:	mov    DWORD PTR [rsp+0x4],ecx
  40c35c:	mov    ebx,ecx
  40c35e:	mov    rcx,rbp
  40c361:	mov    rbp,rax
  40c364:	cmp    rcx,rax
  40c367:	jne    40c39f <main@@Base+0x7a4f>
  40c369:	mov    rdi,r14
  40c36c:	mov    rsi,rcx
  40c36f:	mov    rdx,r15
  40c372:	mov    rbx,rcx
  40c375:	lea    rcx,[rip+0x1cf44]        # 4292c0 <filename@@Base+0x1f0>
  40c37c:	lea    r8,[rsp+0x4]
  40c381:	call   413500 <main@@Base+0xebb0>
  40c386:	mov    rbp,rax
  40c389:	cmp    rax,rbx
  40c38c:	je     40da65 <main@@Base+0x9115>
  40c392:	cmp    rbp,r15
  40c395:	je     40da65 <main@@Base+0x9115>
  40c39b:	mov    ebx,DWORD PTR [rsp+0x4]
  40c39f:	test   ebx,ebx
  40c3a1:	jne    40c3ae <main@@Base+0x7a5e>
  40c3a3:	test   BYTE PTR [r14+0x10],0x2
  40c3a8:	je     40d1cb <main@@Base+0x887b>
  40c3ae:	mov    rdi,QWORD PTR [r14]
  40c3b1:	mov    edx,0x4
  40c3b6:	mov    esi,0x11
  40c3bb:	jmp    40d6bf <main@@Base+0x8d6f>
  40c3c0:	mov    rdi,r14
  40c3c3:	mov    rsi,rax
  40c3c6:	mov    rdx,r15
  40c3c9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c3ce:	mov    rbx,r15
  40c3d1:	cmp    rax,r15
  40c3d4:	je     40d419 <main@@Base+0x8ac9>
  40c3da:	cmp    BYTE PTR [rax],0x5d
  40c3dd:	jne    40d416 <main@@Base+0x8ac6>
  40c3e3:	lea    rbp,[rax+0x1]
  40c3e7:	mov    rcx,r15
  40c3ea:	sub    rcx,rbp
  40c3ed:	cmp    rcx,0x2
  40c3f1:	jl     40d977 <main@@Base+0x9027>
  40c3f7:	cmp    BYTE PTR [rbp+0x0],0x20
  40c3fb:	jg     40d988 <main@@Base+0x9038>
  40c401:	jne    40d977 <main@@Base+0x9027>
  40c407:	cmp    BYTE PTR [rax+0x2],0x20
  40c40b:	jle    40d977 <main@@Base+0x9027>
  40c411:	add    rax,0x2
  40c415:	jmp    40d985 <main@@Base+0x9035>
  40c41a:	lea    rbp,[rbx+0x1]
  40c41e:	mov    rax,r15
  40c421:	sub    rax,rbp
  40c424:	cmp    rax,0x2
  40c428:	jl     40c448 <main@@Base+0x7af8>
  40c42a:	cmp    BYTE PTR [rbp+0x0],0x20
  40c42e:	jg     409aa7 <main@@Base+0x5157>
  40c434:	jne    40c448 <main@@Base+0x7af8>
  40c436:	cmp    BYTE PTR [rbx+0x2],0x20
  40c43a:	jle    40c448 <main@@Base+0x7af8>
  40c43c:	add    rbx,0x2
  40c440:	mov    rbp,rbx
  40c443:	jmp    409aa7 <main@@Base+0x5157>
  40c448:	mov    rdi,r14
  40c44b:	mov    rsi,rbp
  40c44e:	mov    rdx,r15
  40c451:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c456:	jmp    409aa4 <main@@Base+0x5154>
  40c45b:	neg    rbx
  40c45e:	mov    QWORD PTR [rsp+0x20],rbx
  40c463:	mov    rbp,rax
  40c466:	cmp    r13,rax
  40c469:	jne    40c49f <main@@Base+0x7b4f>
  40c46b:	mov    rdi,r14
  40c46e:	mov    rsi,r13
  40c471:	mov    rdx,r15
  40c474:	lea    rcx,[rip+0x1ce25]        # 4292a0 <filename@@Base+0x1d0>
  40c47b:	lea    r8,[rsp+0x20]
  40c480:	call   4132f0 <main@@Base+0xe9a0>
  40c485:	mov    rbp,rax
  40c488:	cmp    rax,r13
  40c48b:	je     40da65 <main@@Base+0x9115>
  40c491:	cmp    rbp,r15
  40c494:	je     40da65 <main@@Base+0x9115>
  40c49a:	mov    rbx,QWORD PTR [rsp+0x20]
  40c49f:	test   rbx,rbx
  40c4a2:	jne    40c4af <main@@Base+0x7b5f>
  40c4a4:	test   BYTE PTR [r14+0x10],0x2
  40c4a9:	je     40d1cb <main@@Base+0x887b>
  40c4af:	mov    rdi,QWORD PTR [r14]
  40c4b2:	mov    edx,0x8
  40c4b7:	mov    esi,0x16
  40c4bc:	jmp    40d365 <main@@Base+0x8a15>
  40c4c1:	mov    rdi,r14
  40c4c4:	mov    rsi,rax
  40c4c7:	mov    rdx,r15
  40c4ca:	mov    ecx,0x21
  40c4cf:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40c4d4:	jmp    40d1c8 <main@@Base+0x8878>
  40c4d9:	mov    rbx,rax
  40c4dc:	mov    QWORD PTR [rsp+0x20],0x0
  40c4e5:	mov    rdi,QWORD PTR [r14]
  40c4e8:	mov    esi,0x1
  40c4ed:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40c4f2:	test   rax,rax
  40c4f5:	je     404a01 <main@@Base+0xb1>
  40c4fb:	mov    rbp,rax
  40c4fe:	mov    QWORD PTR [rsp+0x10],0x0
  40c507:	mov    DWORD PTR [rsp+0x4],0x0
  40c50f:	mov    QWORD PTR [rsp+0x20],0x0
  40c518:	cmp    rbx,r15
  40c51b:	je     40c565 <main@@Base+0x7c15>
  40c51d:	mov    rdi,r14
  40c520:	mov    rsi,rbx
  40c523:	mov    rdx,r15
  40c526:	lea    rcx,[rsp+0x4]
  40c52b:	lea    r8,[rsp+0x10]
  40c530:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40c535:	cmp    rax,rbx
  40c538:	je     40c571 <main@@Base+0x7c21>
  40c53a:	mov    rcx,QWORD PTR [rsp+0x10]
  40c53f:	cmp    DWORD PTR [rsp+0x4],0x0
  40c544:	je     40c57d <main@@Base+0x7c2d>
  40c546:	movabs rdx,0x8000000000000000
  40c550:	cmp    rcx,rdx
  40c553:	jbe    40c59e <main@@Base+0x7c4e>
  40c555:	mov    rdi,r14
  40c558:	mov    rsi,rax
  40c55b:	mov    rdx,r15
  40c55e:	mov    ecx,0x8
  40c563:	jmp    40c590 <main@@Base+0x7c40>
  40c565:	xor    ecx,ecx
  40c567:	mov    rax,r15
  40c56a:	cmp    rbx,rax
  40c56d:	jne    40c5dc <main@@Base+0x7c8c>
  40c56f:	jmp    40c5ab <main@@Base+0x7c5b>
  40c571:	xor    ecx,ecx
  40c573:	mov    rax,rbx
  40c576:	cmp    rbx,rax
  40c579:	jne    40c5dc <main@@Base+0x7c8c>
  40c57b:	jmp    40c5ab <main@@Base+0x7c5b>
  40c57d:	test   rcx,rcx
  40c580:	jns    40c5a1 <main@@Base+0x7c51>
  40c582:	mov    rdi,r14
  40c585:	mov    rsi,rax
  40c588:	mov    rdx,r15
  40c58b:	mov    ecx,0x7
  40c590:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40c595:	xor    ecx,ecx
  40c597:	cmp    rbx,rax
  40c59a:	jne    40c5dc <main@@Base+0x7c8c>
  40c59c:	jmp    40c5ab <main@@Base+0x7c5b>
  40c59e:	neg    rcx
  40c5a1:	mov    QWORD PTR [rsp+0x20],rcx
  40c5a6:	cmp    rbx,rax
  40c5a9:	jne    40c5dc <main@@Base+0x7c8c>
  40c5ab:	mov    rdi,r14
  40c5ae:	mov    rsi,rbx
  40c5b1:	mov    rdx,r15
  40c5b4:	lea    rcx,[rip+0x1cdc5]        # 429380 <filename@@Base+0x2b0>
  40c5bb:	lea    r8,[rsp+0x20]
  40c5c0:	call   4132f0 <main@@Base+0xe9a0>
  40c5c5:	cmp    rax,rbx
  40c5c8:	je     40da93 <main@@Base+0x9143>
  40c5ce:	cmp    rax,r15
  40c5d1:	je     40da93 <main@@Base+0x9143>
  40c5d7:	mov    rcx,QWORD PTR [rsp+0x20]
  40c5dc:	mov    QWORD PTR [rbp+0x0],rcx
  40c5e0:	mov    rcx,r15
  40c5e3:	sub    rcx,rax
  40c5e6:	cmp    rcx,0x2
  40c5ea:	jl     40c606 <main@@Base+0x7cb6>
  40c5ec:	cmp    BYTE PTR [rax],0x20
  40c5ef:	jg     40c614 <main@@Base+0x7cc4>
  40c5f1:	jne    40c606 <main@@Base+0x7cb6>
  40c5f3:	cmp    BYTE PTR [rax+0x1],0x20
  40c5f7:	jle    40c606 <main@@Base+0x7cb6>
  40c5f9:	inc    rax
  40c5fc:	cmp    rax,r15
  40c5ff:	jne    40c61d <main@@Base+0x7ccd>
  40c601:	jmp    40d644 <main@@Base+0x8cf4>
  40c606:	mov    rdi,r14
  40c609:	mov    rsi,rax
  40c60c:	mov    rdx,r15
  40c60f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c614:	cmp    rax,r15
  40c617:	je     40d644 <main@@Base+0x8cf4>
  40c61d:	movzx  ecx,BYTE PTR [rax]
  40c620:	cmp    cl,0x2c
  40c623:	jne    40d6d9 <main@@Base+0x8d89>
  40c629:	lea    rbx,[rax+0x1]
  40c62d:	mov    rcx,r15
  40c630:	sub    rcx,rbx
  40c633:	cmp    rcx,0x2
  40c637:	jl     40c64c <main@@Base+0x7cfc>
  40c639:	cmp    BYTE PTR [rbx],0x20
  40c63c:	jg     40c65d <main@@Base+0x7d0d>
  40c63e:	jne    40c64c <main@@Base+0x7cfc>
  40c640:	cmp    BYTE PTR [rax+0x2],0x20
  40c644:	jle    40c64c <main@@Base+0x7cfc>
  40c646:	add    rax,0x2
  40c64a:	jmp    40c65a <main@@Base+0x7d0a>
  40c64c:	mov    rdi,r14
  40c64f:	mov    rsi,rbx
  40c652:	mov    rdx,r15
  40c655:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c65a:	mov    rbx,rax
  40c65d:	cmp    rbx,r15
  40c660:	je     40d758 <main@@Base+0x8e08>
  40c666:	cmp    BYTE PTR [rbx],0x5d
  40c669:	je     40d7cf <main@@Base+0x8e7f>
  40c66f:	mov    QWORD PTR [rsp+0x20],0x0
  40c678:	mov    rdi,QWORD PTR [r14]
  40c67b:	mov    esi,0x1
  40c680:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40c685:	mov    rbp,rax
  40c688:	test   rax,rax
  40c68b:	jne    40c4fe <main@@Base+0x7bae>
  40c691:	jmp    404a01 <main@@Base+0xb1>
  40c696:	mov    r13,rax
  40c699:	mov    QWORD PTR [rsp+0x10],0x0
  40c6a2:	mov    rdi,QWORD PTR [r14]
  40c6a5:	mov    esi,0x1
  40c6aa:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40c6af:	test   rax,rax
  40c6b2:	je     40da9b <main@@Base+0x914b>
  40c6b8:	mov    rbp,rax
  40c6bb:	mov    rdi,r14
  40c6be:	mov    rsi,r13
  40c6c1:	mov    rdx,r15
  40c6c4:	lea    rcx,[rsp+0x10]
  40c6c9:	call   41f600 <flatcc_json_parser_double@@Base>
  40c6ce:	mov    rbx,rax
  40c6d1:	cmp    r13,rax
  40c6d4:	jne    40c705 <main@@Base+0x7db5>
  40c6d6:	mov    rdi,r14
  40c6d9:	mov    rsi,r13
  40c6dc:	mov    rdx,r15
  40c6df:	lea    rcx,[rip+0x1cc7a]        # 429360 <filename@@Base+0x290>
  40c6e6:	lea    r8,[rsp+0x10]
  40c6eb:	call   4138f0 <main@@Base+0xefa0>
  40c6f0:	mov    rbx,rax
  40c6f3:	cmp    rax,r13
  40c6f6:	je     404a01 <main@@Base+0xb1>
  40c6fc:	cmp    rbx,r15
  40c6ff:	je     404a01 <main@@Base+0xb1>
  40c705:	mov    rax,QWORD PTR [rsp+0x10]
  40c70a:	mov    QWORD PTR [rbp+0x0],rax
  40c70e:	mov    rax,r15
  40c711:	sub    rax,rbx
  40c714:	cmp    rax,0x2
  40c718:	jl     40c734 <main@@Base+0x7de4>
  40c71a:	cmp    BYTE PTR [rbx],0x20
  40c71d:	jg     40c745 <main@@Base+0x7df5>
  40c71f:	jne    40c734 <main@@Base+0x7de4>
  40c721:	cmp    BYTE PTR [rbx+0x1],0x20
  40c725:	jle    40c734 <main@@Base+0x7de4>
  40c727:	inc    rbx
  40c72a:	cmp    rbx,r15
  40c72d:	jne    40c74e <main@@Base+0x7dfe>
  40c72f:	jmp    40d76b <main@@Base+0x8e1b>
  40c734:	mov    rdi,r14
  40c737:	mov    rsi,rbx
  40c73a:	mov    rdx,r15
  40c73d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c742:	mov    rbx,rax
  40c745:	cmp    rbx,r15
  40c748:	je     40d76b <main@@Base+0x8e1b>
  40c74e:	movzx  eax,BYTE PTR [rbx]
  40c751:	cmp    al,0x2c
  40c753:	jne    40d810 <main@@Base+0x8ec0>
  40c759:	lea    r13,[rbx+0x1]
  40c75d:	mov    rax,r15
  40c760:	sub    rax,r13
  40c763:	cmp    rax,0x2
  40c767:	jl     40c789 <main@@Base+0x7e39>
  40c769:	cmp    BYTE PTR [r13+0x0],0x20
  40c76e:	jg     40c79a <main@@Base+0x7e4a>
  40c770:	jne    40c789 <main@@Base+0x7e39>
  40c772:	cmp    BYTE PTR [rbx+0x2],0x20
  40c776:	jle    40c789 <main@@Base+0x7e39>
  40c778:	add    rbx,0x2
  40c77c:	mov    r13,rbx
  40c77f:	cmp    r13,r15
  40c782:	jne    40c7a3 <main@@Base+0x7e53>
  40c784:	jmp    40d851 <main@@Base+0x8f01>
  40c789:	mov    rdi,r14
  40c78c:	mov    rsi,r13
  40c78f:	mov    rdx,r15
  40c792:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c797:	mov    r13,rax
  40c79a:	cmp    r13,r15
  40c79d:	je     40d851 <main@@Base+0x8f01>
  40c7a3:	cmp    BYTE PTR [r13+0x0],0x5d
  40c7a8:	je     40d85c <main@@Base+0x8f0c>
  40c7ae:	mov    QWORD PTR [rsp+0x10],0x0
  40c7b7:	mov    rdi,QWORD PTR [r14]
  40c7ba:	mov    esi,0x1
  40c7bf:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40c7c4:	mov    rbp,rax
  40c7c7:	mov    rbx,r13
  40c7ca:	test   rax,rax
  40c7cd:	jne    40c6bb <main@@Base+0x7d6b>
  40c7d3:	jmp    404a01 <main@@Base+0xb1>
  40c7d8:	mov    rbp,r15
  40c7db:	jmp    4099f4 <main@@Base+0x50a4>
  40c7e0:	mov    rbp,r15
  40c7e3:	jmp    409b4b <main@@Base+0x51fb>
  40c7e8:	cmp    al,0x5d
  40c7ea:	jne    40d613 <main@@Base+0x8cc3>
  40c7f0:	lea    rbp,[rbx+0x1]
  40c7f4:	mov    rax,r15
  40c7f7:	sub    rax,rbp
  40c7fa:	cmp    rax,0x2
  40c7fe:	jl     40c81e <main@@Base+0x7ece>
  40c800:	cmp    BYTE PTR [rbp+0x0],0x20
  40c804:	jg     4099f4 <main@@Base+0x50a4>
  40c80a:	jne    40c81e <main@@Base+0x7ece>
  40c80c:	cmp    BYTE PTR [rbx+0x2],0x20
  40c810:	jle    40c81e <main@@Base+0x7ece>
  40c812:	add    rbx,0x2
  40c816:	mov    rbp,rbx
  40c819:	jmp    4099f4 <main@@Base+0x50a4>
  40c81e:	mov    rdi,r14
  40c821:	mov    rsi,rbp
  40c824:	mov    rdx,r15
  40c827:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c82c:	jmp    4099f1 <main@@Base+0x50a1>
  40c831:	cmp    al,0x5d
  40c833:	jne    40d626 <main@@Base+0x8cd6>
  40c839:	lea    rbp,[rbx+0x1]
  40c83d:	mov    rax,r15
  40c840:	sub    rax,rbp
  40c843:	cmp    rax,0x2
  40c847:	jl     40c867 <main@@Base+0x7f17>
  40c849:	cmp    BYTE PTR [rbp+0x0],0x20
  40c84d:	jg     409b4b <main@@Base+0x51fb>
  40c853:	jne    40c867 <main@@Base+0x7f17>
  40c855:	cmp    BYTE PTR [rbx+0x2],0x20
  40c859:	jle    40c867 <main@@Base+0x7f17>
  40c85b:	add    rbx,0x2
  40c85f:	mov    rbp,rbx
  40c862:	jmp    409b4b <main@@Base+0x51fb>
  40c867:	mov    rdi,r14
  40c86a:	mov    rsi,rbp
  40c86d:	mov    rdx,r15
  40c870:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40c875:	jmp    409b48 <main@@Base+0x51f8>
  40c87a:	mov    rdi,r14
  40c87d:	mov    rsi,r15
  40c880:	jmp    40d619 <main@@Base+0x8cc9>
  40c885:	mov    rdi,r14
  40c888:	mov    rsi,r15
  40c88b:	jmp    40d62c <main@@Base+0x8cdc>
  40c890:	mov    rbp,r15
  40c893:	jmp    409f0a <main@@Base+0x55ba>
  40c898:	cmp    cl,0x5d
  40c89b:	je     40a859 <main@@Base+0x5f09>
  40c8a1:	mov    rdi,r14
  40c8a4:	mov    rsi,rax
  40c8a7:	jmp    40c8af <main@@Base+0x7f5f>
  40c8a9:	mov    rdi,r14
  40c8ac:	mov    rsi,r15
  40c8af:	mov    rdx,r15
  40c8b2:	mov    ecx,0x9
  40c8b7:	jmp    409f02 <main@@Base+0x55b2>
  40c8bc:	mov    rsi,rax
  40c8bf:	mov    r12,r15
  40c8c2:	cmp    rsi,r15
  40c8c5:	je     40c905 <main@@Base+0x7fb5>
  40c8c7:	movzx  eax,BYTE PTR [rsi]
  40c8ca:	cmp    al,0x2e
  40c8cc:	je     40c8e2 <main@@Base+0x7f92>
  40c8ce:	cmp    al,0x22
  40c8d0:	jne    40c8f7 <main@@Base+0x7fa7>
  40c8d2:	inc    rsi
  40c8d5:	mov    rax,QWORD PTR [rsp+0x8]
  40c8da:	mov    DWORD PTR [rax],0x0
  40c8e0:	jmp    40c902 <main@@Base+0x7fb2>
  40c8e2:	mov    rdi,r14
  40c8e5:	mov    rdx,r15
  40c8e8:	mov    ecx,0x5
  40c8ed:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40c8f2:	mov    r12,rax
  40c8f5:	jmp    40c905 <main@@Base+0x7fb5>
  40c8f7:	mov    rax,QWORD PTR [rsp+0x8]
  40c8fc:	mov    DWORD PTR [rax],0x1
  40c902:	mov    r12,rsi
  40c905:	mov    rcx,r15
  40c908:	sub    rcx,r12
  40c90b:	cmp    rcx,0x8
  40c90f:	jb     40c91c <main@@Base+0x7fcc>
  40c911:	movbe  rax,QWORD PTR [r12]
  40c917:	jmp    40c9a1 <main@@Base+0x8051>
  40c91c:	lea    rax,[rcx-0x1]
  40c920:	cmp    rax,0x6
  40c924:	ja     40cfa2 <main@@Base+0x8652>
  40c92a:	lea    rdx,[rip+0x1582b]        # 42215c <_IO_stdin_used@@Base+0x15c>
  40c931:	mov    rsi,rdx
  40c934:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40c938:	add    rdx,rsi
  40c93b:	xor    r8d,r8d
  40c93e:	xor    eax,eax
  40c940:	xor    esi,esi
  40c942:	xor    edi,edi
  40c944:	xor    ebp,ebp
  40c946:	xor    ebx,ebx
  40c948:	jmp    rdx
  40c94a:	movsx  r8,BYTE PTR [r12+0x6]
  40c950:	shl    r8,0x8
  40c954:	movsx  rax,BYTE PTR [r12+0x5]
  40c95a:	shl    rax,0x10
  40c95e:	or     rax,r8
  40c961:	movsx  rsi,BYTE PTR [r12+0x4]
  40c967:	shl    rsi,0x18
  40c96b:	or     rsi,rax
  40c96e:	movsx  rdi,BYTE PTR [r12+0x3]
  40c974:	shl    rdi,0x20
  40c978:	or     rdi,rsi
  40c97b:	movsx  rbp,BYTE PTR [r12+0x2]
  40c981:	shl    rbp,0x28
  40c985:	or     rbp,rdi
  40c988:	movsx  rbx,BYTE PTR [r12+0x1]
  40c98e:	shl    rbx,0x30
  40c992:	or     rbx,rbp
  40c995:	movzx  eax,BYTE PTR [r12]
  40c99a:	shl    rax,0x38
  40c99e:	or     rax,rbx
  40c9a1:	movabs rdx,0x6964000000000000
  40c9ab:	cmp    rax,rdx
  40c9ae:	jae    40ca0c <main@@Base+0x80bc>
  40c9b0:	shr    rax,0x18
  40c9b4:	movabs rdx,0x636f756e74
  40c9be:	cmp    rax,rdx
  40c9c1:	jne    40cfa2 <main@@Base+0x8652>
  40c9c7:	mov    rbp,r12
  40c9ca:	cmp    rcx,0x6
  40c9ce:	jl     40ccf0 <main@@Base+0x83a0>
  40c9d4:	mov    rax,QWORD PTR [rsp+0x8]
  40c9d9:	cmp    DWORD PTR [rax],0x0
  40c9dc:	movzx  eax,BYTE PTR [r12+0x5]
  40c9e2:	je     40cad7 <main@@Base+0x8187>
  40c9e8:	cmp    al,0x21
  40c9ea:	jl     40c9f7 <main@@Base+0x80a7>
  40c9ec:	mov    rbp,r12
  40c9ef:	cmp    al,0x3a
  40c9f1:	jne    40ccf0 <main@@Base+0x83a0>
  40c9f7:	lea    rsi,[r12+0x5]
  40c9fc:	mov    rax,QWORD PTR [rsp+0x8]
  40ca01:	mov    DWORD PTR [rax],0x0
  40ca07:	jmp    40cae7 <main@@Base+0x8197>
  40ca0c:	mov    rdx,rax
  40ca0f:	movabs rsi,0xffffff0000000000
  40ca19:	and    rdx,rsi
  40ca1c:	movabs rsi,0x76616c0000000000
  40ca26:	cmp    rdx,rsi
  40ca29:	jne    40ca70 <main@@Base+0x8120>
  40ca2b:	mov    rbp,r12
  40ca2e:	cmp    rcx,0x4
  40ca32:	jl     40ce17 <main@@Base+0x84c7>
  40ca38:	mov    rax,QWORD PTR [rsp+0x8]
  40ca3d:	cmp    DWORD PTR [rax],0x0
  40ca40:	movzx  eax,BYTE PTR [r12+0x3]
  40ca46:	je     40cb0d <main@@Base+0x81bd>
  40ca4c:	cmp    al,0x21
  40ca4e:	jl     40ca5b <main@@Base+0x810b>
  40ca50:	mov    rbp,r12
  40ca53:	cmp    al,0x3a
  40ca55:	jne    40ce17 <main@@Base+0x84c7>
  40ca5b:	lea    rsi,[r12+0x3]
  40ca60:	mov    rax,QWORD PTR [rsp+0x8]
  40ca65:	mov    DWORD PTR [rax],0x0
  40ca6b:	jmp    40cb1d <main@@Base+0x81cd>
  40ca70:	movabs rdx,0xffff000000000000
  40ca7a:	and    rax,rdx
  40ca7d:	movabs rdx,0x6964000000000000
  40ca87:	cmp    rax,rdx
  40ca8a:	jne    40cfa2 <main@@Base+0x8652>
  40ca90:	mov    rax,r12
  40ca93:	cmp    rcx,0x3
  40ca97:	jl     40cf61 <main@@Base+0x8611>
  40ca9d:	mov    rax,QWORD PTR [rsp+0x8]
  40caa2:	cmp    DWORD PTR [rax],0x0
  40caa5:	movzx  ecx,BYTE PTR [r12+0x2]
  40caab:	je     40cc33 <main@@Base+0x82e3>
  40cab1:	cmp    cl,0x21
  40cab4:	jl     40cac2 <main@@Base+0x8172>
  40cab6:	mov    rax,r12
  40cab9:	cmp    cl,0x3a
  40cabc:	jne    40cf61 <main@@Base+0x8611>
  40cac2:	lea    rsi,[r12+0x2]
  40cac7:	mov    rax,QWORD PTR [rsp+0x8]
  40cacc:	mov    DWORD PTR [rax],0x0
  40cad2:	jmp    40cc44 <main@@Base+0x82f4>
  40cad7:	mov    rbp,r12
  40cada:	cmp    al,0x22
  40cadc:	jne    40ccf0 <main@@Base+0x83a0>
  40cae2:	lea    rsi,[r12+0x6]
  40cae7:	mov    rax,r15
  40caea:	sub    rax,rsi
  40caed:	cmp    rax,0x2
  40caf1:	jl     40cb4b <main@@Base+0x81fb>
  40caf3:	cmp    BYTE PTR [rsi],0x20
  40caf6:	jg     40cb59 <main@@Base+0x8209>
  40caf8:	jne    40cb4b <main@@Base+0x81fb>
  40cafa:	cmp    BYTE PTR [rsi+0x1],0x20
  40cafe:	jle    40cb4b <main@@Base+0x81fb>
  40cb00:	inc    rsi
  40cb03:	cmp    rsi,r15
  40cb06:	jne    40cb62 <main@@Base+0x8212>
  40cb08:	jmp    40cc09 <main@@Base+0x82b9>
  40cb0d:	mov    rbp,r12
  40cb10:	cmp    al,0x22
  40cb12:	jne    40ce17 <main@@Base+0x84c7>
  40cb18:	lea    rsi,[r12+0x4]
  40cb1d:	mov    rax,r15
  40cb20:	sub    rax,rsi
  40cb23:	cmp    rax,0x2
  40cb27:	jl     40cbae <main@@Base+0x825e>
  40cb2d:	cmp    BYTE PTR [rsi],0x20
  40cb30:	jg     40cbbc <main@@Base+0x826c>
  40cb36:	jne    40cbae <main@@Base+0x825e>
  40cb38:	cmp    BYTE PTR [rsi+0x1],0x20
  40cb3c:	jle    40cbae <main@@Base+0x825e>
  40cb3e:	inc    rsi
  40cb41:	cmp    rsi,r15
  40cb44:	jne    40cbc1 <main@@Base+0x8271>
  40cb46:	jmp    40cc1e <main@@Base+0x82ce>
  40cb4b:	mov    rdi,r14
  40cb4e:	mov    rdx,r15
  40cb51:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40cb56:	mov    rsi,rax
  40cb59:	cmp    rsi,r15
  40cb5c:	je     40cc09 <main@@Base+0x82b9>
  40cb62:	cmp    BYTE PTR [rsi],0x3a
  40cb65:	jne    40cc09 <main@@Base+0x82b9>
  40cb6b:	lea    rbp,[rsi+0x1]
  40cb6f:	mov    rax,r15
  40cb72:	sub    rax,rbp
  40cb75:	cmp    rax,0x2
  40cb79:	jl     40ccdf <main@@Base+0x838f>
  40cb7f:	cmp    BYTE PTR [rbp+0x0],0x20
  40cb83:	jg     40ccf0 <main@@Base+0x83a0>
  40cb89:	jne    40ccdf <main@@Base+0x838f>
  40cb8f:	cmp    BYTE PTR [rsi+0x2],0x20
  40cb93:	jle    40ccdf <main@@Base+0x838f>
  40cb99:	add    rsi,0x2
  40cb9d:	mov    rbp,rsi
  40cba0:	cmp    r12,rbp
  40cba3:	jne    40ccf9 <main@@Base+0x83a9>
  40cba9:	jmp    40cfa2 <main@@Base+0x8652>
  40cbae:	mov    rdi,r14
  40cbb1:	mov    rdx,r15
  40cbb4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40cbb9:	mov    rsi,rax
  40cbbc:	cmp    rsi,r15
  40cbbf:	je     40cc1e <main@@Base+0x82ce>
  40cbc1:	cmp    BYTE PTR [rsi],0x3a
  40cbc4:	jne    40cc1e <main@@Base+0x82ce>
  40cbc6:	lea    rbp,[rsi+0x1]
  40cbca:	mov    rax,r15
  40cbcd:	sub    rax,rbp
  40cbd0:	cmp    rax,0x2
  40cbd4:	jl     40ce06 <main@@Base+0x84b6>
  40cbda:	cmp    BYTE PTR [rbp+0x0],0x20
  40cbde:	jg     40ce17 <main@@Base+0x84c7>
  40cbe4:	jne    40ce06 <main@@Base+0x84b6>
  40cbea:	cmp    BYTE PTR [rsi+0x2],0x20
  40cbee:	jle    40ce06 <main@@Base+0x84b6>
  40cbf4:	add    rsi,0x2
  40cbf8:	mov    rbp,rsi
  40cbfb:	cmp    r12,rbp
  40cbfe:	jne    40ce20 <main@@Base+0x84d0>
  40cc04:	jmp    40cfa2 <main@@Base+0x8652>
  40cc09:	mov    rdi,r14
  40cc0c:	mov    rdx,r15
  40cc0f:	mov    ecx,0x4
  40cc14:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40cc19:	jmp    40cced <main@@Base+0x839d>
  40cc1e:	mov    rdi,r14
  40cc21:	mov    rdx,r15
  40cc24:	mov    ecx,0x4
  40cc29:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40cc2e:	jmp    40ce14 <main@@Base+0x84c4>
  40cc33:	mov    rax,r12
  40cc36:	cmp    cl,0x22
  40cc39:	jne    40cf61 <main@@Base+0x8611>
  40cc3f:	lea    rsi,[r12+0x3]
  40cc44:	mov    rax,r15
  40cc47:	sub    rax,rsi
  40cc4a:	cmp    rax,0x2
  40cc4e:	jl     40cc67 <main@@Base+0x8317>
  40cc50:	cmp    BYTE PTR [rsi],0x20
  40cc53:	jg     40cc75 <main@@Base+0x8325>
  40cc55:	jne    40cc67 <main@@Base+0x8317>
  40cc57:	cmp    BYTE PTR [rsi+0x1],0x20
  40cc5b:	jle    40cc67 <main@@Base+0x8317>
  40cc5d:	inc    rsi
  40cc60:	cmp    rsi,r15
  40cc63:	jne    40cc7a <main@@Base+0x832a>
  40cc65:	jmp    40ccc1 <main@@Base+0x8371>
  40cc67:	mov    rdi,r14
  40cc6a:	mov    rdx,r15
  40cc6d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40cc72:	mov    rsi,rax
  40cc75:	cmp    rsi,r15
  40cc78:	je     40ccc1 <main@@Base+0x8371>
  40cc7a:	cmp    BYTE PTR [rsi],0x3a
  40cc7d:	jne    40ccc1 <main@@Base+0x8371>
  40cc7f:	lea    rax,[rsi+0x1]
  40cc83:	mov    rcx,r15
  40cc86:	sub    rcx,rax
  40cc89:	cmp    rcx,0x2
  40cc8d:	jl     40cf53 <main@@Base+0x8603>
  40cc93:	cmp    BYTE PTR [rax],0x20
  40cc96:	jg     40cf61 <main@@Base+0x8611>
  40cc9c:	jne    40cf53 <main@@Base+0x8603>
  40cca2:	cmp    BYTE PTR [rsi+0x2],0x20
  40cca6:	jle    40cf53 <main@@Base+0x8603>
  40ccac:	add    rsi,0x2
  40ccb0:	mov    rax,rsi
  40ccb3:	cmp    r12,rax
  40ccb6:	jne    40cf66 <main@@Base+0x8616>
  40ccbc:	jmp    40cfa2 <main@@Base+0x8652>
  40ccc1:	mov    rdi,r14
  40ccc4:	mov    rdx,r15
  40ccc7:	mov    ecx,0x4
  40cccc:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40ccd1:	cmp    r12,rax
  40ccd4:	jne    40cf66 <main@@Base+0x8616>
  40ccda:	jmp    40cfa2 <main@@Base+0x8652>
  40ccdf:	mov    rdi,r14
  40cce2:	mov    rsi,rbp
  40cce5:	mov    rdx,r15
  40cce8:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40cced:	mov    rbp,rax
  40ccf0:	cmp    r12,rbp
  40ccf3:	je     40cfa2 <main@@Base+0x8652>
  40ccf9:	mov    QWORD PTR [rsp+0x10],0x0
  40cd02:	mov    DWORD PTR [rsp+0x20],0x0
  40cd0a:	mov    WORD PTR [rsp+0x4],0x0
  40cd11:	cmp    rbp,r15
  40cd14:	je     40cd4d <main@@Base+0x83fd>
  40cd16:	mov    rdi,r14
  40cd19:	mov    rsi,rbp
  40cd1c:	mov    rdx,r15
  40cd1f:	lea    rcx,[rsp+0x20]
  40cd24:	lea    r8,[rsp+0x10]
  40cd29:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40cd2e:	cmp    rax,rbp
  40cd31:	je     40cd5a <main@@Base+0x840a>
  40cd33:	mov    rbx,rax
  40cd36:	cmp    DWORD PTR [rsp+0x20],0x0
  40cd3b:	je     40cd67 <main@@Base+0x8417>
  40cd3d:	mov    rdi,r14
  40cd40:	mov    rsi,rbx
  40cd43:	mov    rdx,r15
  40cd46:	mov    ecx,0x8
  40cd4b:	jmp    40cd87 <main@@Base+0x8437>
  40cd4d:	xor    r12d,r12d
  40cd50:	mov    rbx,r15
  40cd53:	cmp    rbp,rbx
  40cd56:	jne    40cdcc <main@@Base+0x847c>
  40cd58:	jmp    40cd97 <main@@Base+0x8447>
  40cd5a:	xor    r12d,r12d
  40cd5d:	mov    rbx,rbp
  40cd60:	cmp    rbp,rbx
  40cd63:	jne    40cdcc <main@@Base+0x847c>
  40cd65:	jmp    40cd97 <main@@Base+0x8447>
  40cd67:	mov    r12,QWORD PTR [rsp+0x10]
  40cd6c:	cmp    r12,0x10000
  40cd73:	jb     40cf3f <main@@Base+0x85ef>
  40cd79:	mov    rdi,r14
  40cd7c:	mov    rsi,rbx
  40cd7f:	mov    rdx,r15
  40cd82:	mov    ecx,0x7
  40cd87:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40cd8c:	mov    rbx,rax
  40cd8f:	xor    r12d,r12d
  40cd92:	cmp    rbp,rbx
  40cd95:	jne    40cdcc <main@@Base+0x847c>
  40cd97:	mov    rdi,r14
  40cd9a:	mov    rsi,rbp
  40cd9d:	mov    rdx,r15
  40cda0:	lea    rcx,[rip+0x1c9f9]        # 4297a0 <filename@@Base+0x6d0>
  40cda7:	lea    r8,[rsp+0x4]
  40cdac:	call   418b80 <main@@Base+0x14230>
  40cdb1:	mov    rbx,rax
  40cdb4:	cmp    rax,rbp
  40cdb7:	je     40a359 <main@@Base+0x5a09>
  40cdbd:	cmp    rbx,r15
  40cdc0:	je     40a359 <main@@Base+0x5a09>
  40cdc6:	movzx  r12d,WORD PTR [rsp+0x4]
  40cdcc:	test   r12w,r12w
  40cdd0:	jne    40cddd <main@@Base+0x848d>
  40cdd2:	test   BYTE PTR [r14+0x10],0x2
  40cdd7:	je     40cfb3 <main@@Base+0x8663>
  40cddd:	mov    rdi,QWORD PTR [r14]
  40cde0:	mov    edx,0x2
  40cde5:	mov    esi,0x2
  40cdea:	mov    ecx,0x2
  40cdef:	call   41c310 <flatcc_builder_table_add@@Base>
  40cdf4:	test   rax,rax
  40cdf7:	je     40a359 <main@@Base+0x5a09>
  40cdfd:	mov    WORD PTR [rax],r12w
  40ce01:	jmp    40cfb3 <main@@Base+0x8663>
  40ce06:	mov    rdi,r14
  40ce09:	mov    rsi,rbp
  40ce0c:	mov    rdx,r15
  40ce0f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ce14:	mov    rbp,rax
  40ce17:	cmp    r12,rbp
  40ce1a:	je     40cfa2 <main@@Base+0x8652>
  40ce20:	mov    QWORD PTR [rsp+0x10],0x0
  40ce29:	mov    DWORD PTR [rsp+0x4],0x0
  40ce31:	mov    QWORD PTR [rsp+0x20],0x0
  40ce3a:	cmp    rbp,r15
  40ce3d:	je     40ce8a <main@@Base+0x853a>
  40ce3f:	mov    rdi,r14
  40ce42:	mov    rsi,rbp
  40ce45:	mov    rdx,r15
  40ce48:	lea    rcx,[rsp+0x4]
  40ce4d:	lea    r8,[rsp+0x10]
  40ce52:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40ce57:	cmp    rax,rbp
  40ce5a:	je     40ce97 <main@@Base+0x8547>
  40ce5c:	mov    rbx,rax
  40ce5f:	mov    r12,QWORD PTR [rsp+0x10]
  40ce64:	cmp    DWORD PTR [rsp+0x4],0x0
  40ce69:	je     40cea4 <main@@Base+0x8554>
  40ce6b:	movabs rax,0x8000000000000000
  40ce75:	cmp    r12,rax
  40ce78:	jbe    40cec9 <main@@Base+0x8579>
  40ce7a:	mov    rdi,r14
  40ce7d:	mov    rsi,rbx
  40ce80:	mov    rdx,r15
  40ce83:	mov    ecx,0x8
  40ce88:	jmp    40ceb7 <main@@Base+0x8567>
  40ce8a:	xor    r12d,r12d
  40ce8d:	mov    rbx,r15
  40ce90:	cmp    rbp,rbx
  40ce93:	jne    40cf0a <main@@Base+0x85ba>
  40ce95:	jmp    40ced6 <main@@Base+0x8586>
  40ce97:	xor    r12d,r12d
  40ce9a:	mov    rbx,rbp
  40ce9d:	cmp    rbp,rbx
  40cea0:	jne    40cf0a <main@@Base+0x85ba>
  40cea2:	jmp    40ced6 <main@@Base+0x8586>
  40cea4:	test   r12,r12
  40cea7:	jns    40cecc <main@@Base+0x857c>
  40cea9:	mov    rdi,r14
  40ceac:	mov    rsi,rbx
  40ceaf:	mov    rdx,r15
  40ceb2:	mov    ecx,0x7
  40ceb7:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40cebc:	mov    rbx,rax
  40cebf:	xor    r12d,r12d
  40cec2:	cmp    rbp,rbx
  40cec5:	jne    40cf0a <main@@Base+0x85ba>
  40cec7:	jmp    40ced6 <main@@Base+0x8586>
  40cec9:	neg    r12
  40cecc:	mov    QWORD PTR [rsp+0x20],r12
  40ced1:	cmp    rbp,rbx
  40ced4:	jne    40cf0a <main@@Base+0x85ba>
  40ced6:	mov    rdi,r14
  40ced9:	mov    rsi,rbp
  40cedc:	mov    rdx,r15
  40cedf:	lea    rcx,[rip+0x1c8da]        # 4297c0 <filename@@Base+0x6f0>
  40cee6:	lea    r8,[rsp+0x20]
  40ceeb:	call   4132f0 <main@@Base+0xe9a0>
  40cef0:	mov    rbx,rax
  40cef3:	cmp    rax,rbp
  40cef6:	je     40a359 <main@@Base+0x5a09>
  40cefc:	cmp    rbx,r15
  40ceff:	je     40a359 <main@@Base+0x5a09>
  40cf05:	mov    r12,QWORD PTR [rsp+0x20]
  40cf0a:	test   r12,r12
  40cf0d:	jne    40cf1a <main@@Base+0x85ca>
  40cf0f:	test   BYTE PTR [r14+0x10],0x2
  40cf14:	je     40cfb3 <main@@Base+0x8663>
  40cf1a:	mov    rdi,QWORD PTR [r14]
  40cf1d:	mov    edx,0x8
  40cf22:	mov    esi,0x1
  40cf27:	mov    ecx,0x8
  40cf2c:	call   41c310 <flatcc_builder_table_add@@Base>
  40cf31:	test   rax,rax
  40cf34:	je     40a359 <main@@Base+0x5a09>
  40cf3a:	mov    QWORD PTR [rax],r12
  40cf3d:	jmp    40cfb3 <main@@Base+0x8663>
  40cf3f:	mov    WORD PTR [rsp+0x4],r12w
  40cf45:	cmp    rbp,rbx
  40cf48:	jne    40cdcc <main@@Base+0x847c>
  40cf4e:	jmp    40cd97 <main@@Base+0x8447>
  40cf53:	mov    rdi,r14
  40cf56:	mov    rsi,rax
  40cf59:	mov    rdx,r15
  40cf5c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40cf61:	cmp    r12,rax
  40cf64:	je     40cfa2 <main@@Base+0x8652>
  40cf66:	mov    rdi,r14
  40cf69:	mov    rsi,rax
  40cf6c:	mov    rdx,r15
  40cf6f:	lea    rcx,[rsp+0x3c]
  40cf74:	call   420390 <flatcc_json_parser_build_string@@Base>
  40cf79:	mov    rbx,rax
  40cf7c:	cmp    DWORD PTR [rsp+0x3c],0x0
  40cf81:	je     40a359 <main@@Base+0x5a09>
  40cf87:	mov    rdi,QWORD PTR [r14]
  40cf8a:	xor    esi,esi
  40cf8c:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  40cf91:	test   rax,rax
  40cf94:	je     40a359 <main@@Base+0x5a09>
  40cf9a:	mov    ecx,DWORD PTR [rsp+0x3c]
  40cf9e:	mov    DWORD PTR [rax],ecx
  40cfa0:	jmp    40cfb3 <main@@Base+0x8663>
  40cfa2:	mov    rdi,r14
  40cfa5:	mov    rsi,r12
  40cfa8:	mov    rdx,r15
  40cfab:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40cfb0:	mov    rbx,rax
  40cfb3:	mov    rax,r15
  40cfb6:	sub    rax,rbx
  40cfb9:	cmp    rax,0x2
  40cfbd:	jl     40cfd9 <main@@Base+0x8689>
  40cfbf:	cmp    BYTE PTR [rbx],0x20
  40cfc2:	jg     40cfea <main@@Base+0x869a>
  40cfc4:	jne    40cfd9 <main@@Base+0x8689>
  40cfc6:	cmp    BYTE PTR [rbx+0x1],0x20
  40cfca:	jle    40cfd9 <main@@Base+0x8689>
  40cfcc:	inc    rbx
  40cfcf:	cmp    rbx,r15
  40cfd2:	jne    40cff3 <main@@Base+0x86a3>
  40cfd4:	jmp    40d731 <main@@Base+0x8de1>
  40cfd9:	mov    rdi,r14
  40cfdc:	mov    rsi,rbx
  40cfdf:	mov    rdx,r15
  40cfe2:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40cfe7:	mov    rbx,rax
  40cfea:	cmp    rbx,r15
  40cfed:	je     40d731 <main@@Base+0x8de1>
  40cff3:	movzx  eax,BYTE PTR [rbx]
  40cff6:	cmp    al,0x2c
  40cff8:	jne    40d77e <main@@Base+0x8e2e>
  40cffe:	lea    rsi,[rbx+0x1]
  40d002:	mov    rax,r15
  40d005:	sub    rax,rsi
  40d008:	cmp    rax,0x2
  40d00c:	jl     40d02c <main@@Base+0x86dc>
  40d00e:	cmp    BYTE PTR [rsi],0x20
  40d011:	jg     40d03a <main@@Base+0x86ea>
  40d013:	jne    40d02c <main@@Base+0x86dc>
  40d015:	cmp    BYTE PTR [rbx+0x2],0x20
  40d019:	jle    40d02c <main@@Base+0x86dc>
  40d01b:	add    rbx,0x2
  40d01f:	mov    rsi,rbx
  40d022:	cmp    rsi,r15
  40d025:	jne    40d043 <main@@Base+0x86f3>
  40d027:	jmp    40d846 <main@@Base+0x8ef6>
  40d02c:	mov    rdi,r14
  40d02f:	mov    rdx,r15
  40d032:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d037:	mov    rsi,rax
  40d03a:	cmp    rsi,r15
  40d03d:	je     40d846 <main@@Base+0x8ef6>
  40d043:	cmp    BYTE PTR [rsi],0x7d
  40d046:	jne    40c8bf <main@@Base+0x7f6f>
  40d04c:	lea    rbp,[rsi+0x1]
  40d050:	mov    rax,r15
  40d053:	sub    rax,rbp
  40d056:	cmp    rax,0x2
  40d05a:	jl     40d7bc <main@@Base+0x8e6c>
  40d060:	cmp    BYTE PTR [rbp+0x0],0x20
  40d064:	jg     40a34b <main@@Base+0x59fb>
  40d06a:	jne    40d7bc <main@@Base+0x8e6c>
  40d070:	cmp    BYTE PTR [rsi+0x2],0x20
  40d074:	jle    40d7bc <main@@Base+0x8e6c>
  40d07a:	add    rsi,0x2
  40d07e:	mov    rbp,rsi
  40d081:	cmp    DWORD PTR [r14+0x20],0x0
  40d086:	jne    40a356 <main@@Base+0x5a06>
  40d08c:	jmp    40d73f <main@@Base+0x8def>
  40d091:	lea    rbp,[rbx+0x1]
  40d095:	mov    rax,r15
  40d098:	sub    rax,rbp
  40d09b:	cmp    rax,0x2
  40d09f:	jl     40d0bf <main@@Base+0x876f>
  40d0a1:	cmp    BYTE PTR [rbp+0x0],0x20
  40d0a5:	jg     409f0a <main@@Base+0x55ba>
  40d0ab:	jne    40d0bf <main@@Base+0x876f>
  40d0ad:	cmp    BYTE PTR [rbx+0x2],0x20
  40d0b1:	jle    40d0bf <main@@Base+0x876f>
  40d0b3:	add    rbx,0x2
  40d0b7:	mov    rbp,rbx
  40d0ba:	jmp    409f0a <main@@Base+0x55ba>
  40d0bf:	mov    rdi,r14
  40d0c2:	mov    rsi,rbp
  40d0c5:	mov    rdx,r15
  40d0c8:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d0cd:	jmp    409f07 <main@@Base+0x55b7>
  40d0d2:	jne    40d0e9 <main@@Base+0x8799>
  40d0d4:	cmp    BYTE PTR [r13+0x2],0x20
  40d0d9:	jle    40d0e9 <main@@Base+0x8799>
  40d0db:	add    r13,0x2
  40d0df:	cmp    r12,r13
  40d0e2:	jne    40d100 <main@@Base+0x87b0>
  40d0e4:	jmp    40d1ba <main@@Base+0x886a>
  40d0e9:	mov    rdi,r14
  40d0ec:	mov    rdx,r15
  40d0ef:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d0f4:	mov    r13,rax
  40d0f7:	cmp    r12,r13
  40d0fa:	je     40d1ba <main@@Base+0x886a>
  40d100:	mov    QWORD PTR [rsp+0x10],0x0
  40d109:	mov    DWORD PTR [rsp+0x20],0x0
  40d111:	mov    DWORD PTR [rsp+0x4],0x0
  40d119:	xor    ebx,ebx
  40d11b:	cmp    r13,r15
  40d11e:	je     40d15f <main@@Base+0x880f>
  40d120:	mov    rdi,r14
  40d123:	mov    rsi,r13
  40d126:	mov    rdx,r15
  40d129:	lea    rcx,[rsp+0x20]
  40d12e:	lea    r8,[rsp+0x10]
  40d133:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40d138:	mov    rbp,r13
  40d13b:	cmp    rax,r13
  40d13e:	je     40d167 <main@@Base+0x8817>
  40d140:	cmp    DWORD PTR [rsp+0x20],0x0
  40d145:	je     40d172 <main@@Base+0x8822>
  40d147:	mov    rdi,r14
  40d14a:	mov    rsi,rax
  40d14d:	mov    rdx,r15
  40d150:	mov    ecx,0x8
  40d155:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40d15a:	jmp    40d665 <main@@Base+0x8d15>
  40d15f:	mov    rax,r15
  40d162:	jmp    40d668 <main@@Base+0x8d18>
  40d167:	mov    r13,rbp
  40d16a:	mov    rax,rbp
  40d16d:	jmp    40d668 <main@@Base+0x8d18>
  40d172:	mov    rcx,QWORD PTR [rsp+0x10]
  40d177:	mov    rdx,rcx
  40d17a:	shr    rdx,0x20
  40d17e:	je     40d65f <main@@Base+0x8d0f>
  40d184:	mov    rdi,r14
  40d187:	mov    rsi,rax
  40d18a:	mov    rdx,r15
  40d18d:	mov    ecx,0x7
  40d192:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40d197:	jmp    40d665 <main@@Base+0x8d15>
  40d19c:	jne    40d27a <main@@Base+0x892a>
  40d1a2:	cmp    BYTE PTR [r13+0x2],0x20
  40d1a7:	jle    40d27a <main@@Base+0x892a>
  40d1ad:	add    r13,0x2
  40d1b1:	cmp    r12,r13
  40d1b4:	jne    40d291 <main@@Base+0x8941>
  40d1ba:	mov    rdi,r14
  40d1bd:	mov    rsi,r12
  40d1c0:	mov    rdx,r15
  40d1c3:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40d1c8:	mov    rbp,rax
  40d1cb:	mov    rax,r15
  40d1ce:	sub    rax,rbp
  40d1d1:	cmp    rax,0x2
  40d1d5:	jl     40d200 <main@@Base+0x88b0>
  40d1d7:	cmp    BYTE PTR [rbp+0x0],0x20
  40d1db:	jg     40d211 <main@@Base+0x88c1>
  40d1dd:	jne    40d200 <main@@Base+0x88b0>
  40d1df:	cmp    BYTE PTR [rbp+0x1],0x20
  40d1e3:	jle    40d200 <main@@Base+0x88b0>
  40d1e5:	inc    rbp
  40d1e8:	cmp    rbp,r15
  40d1eb:	jne    40d21a <main@@Base+0x88ca>
  40d1ed:	jmp    40d9a9 <main@@Base+0x9059>
  40d1f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1fc:	nop    DWORD PTR [rax+0x0]
  40d200:	mov    rdi,r14
  40d203:	mov    rsi,rbp
  40d206:	mov    rdx,r15
  40d209:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d20e:	mov    rbp,rax
  40d211:	cmp    rbp,r15
  40d214:	je     40d9a9 <main@@Base+0x9059>
  40d21a:	mov    al,BYTE PTR [rbp+0x0]
  40d21d:	cmp    al,0x2c
  40d21f:	jne    40d9b1 <main@@Base+0x9061>
  40d225:	lea    rsi,[rbp+0x1]
  40d229:	mov    rax,r15
  40d22c:	sub    rax,rsi
  40d22f:	cmp    rax,0x2
  40d233:	jl     40d250 <main@@Base+0x8900>
  40d235:	cmp    BYTE PTR [rsi],0x20
  40d238:	jg     40d25e <main@@Base+0x890e>
  40d23a:	jne    40d250 <main@@Base+0x8900>
  40d23c:	cmp    BYTE PTR [rbp+0x2],0x20
  40d240:	jle    40d250 <main@@Base+0x8900>
  40d242:	mov    rsi,rbp
  40d245:	add    rsi,0x2
  40d249:	jmp    40d25e <main@@Base+0x890e>
  40d24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d250:	mov    rdi,r14
  40d253:	mov    rdx,r15
  40d256:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d25b:	mov    rsi,rax
  40d25e:	cmp    rsi,r15
  40d261:	mov    rbp,QWORD PTR [rsp+0x30]
  40d266:	je     40d9f2 <main@@Base+0x90a2>
  40d26c:	cmp    BYTE PTR [rsi],0x7d
  40d26f:	jne    404b70 <main@@Base+0x220>
  40d275:	jmp    40da05 <main@@Base+0x90b5>
  40d27a:	mov    rdi,r14
  40d27d:	mov    rdx,r15
  40d280:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d285:	mov    r13,rax
  40d288:	cmp    r12,r13
  40d28b:	je     40d1ba <main@@Base+0x886a>
  40d291:	mov    QWORD PTR [rsp+0x10],0x0
  40d29a:	mov    DWORD PTR [rsp+0x4],0x0
  40d2a2:	mov    QWORD PTR [rsp+0x20],0x0
  40d2ab:	cmp    r13,r15
  40d2ae:	je     40d2ee <main@@Base+0x899e>
  40d2b0:	mov    rdi,r14
  40d2b3:	mov    rsi,r13
  40d2b6:	mov    rdx,r15
  40d2b9:	lea    rcx,[rsp+0x4]
  40d2be:	lea    r8,[rsp+0x10]
  40d2c3:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40d2c8:	mov    rbp,r13
  40d2cb:	cmp    rax,r13
  40d2ce:	je     40d2f5 <main@@Base+0x89a5>
  40d2d0:	cmp    DWORD PTR [rsp+0x4],0x0
  40d2d5:	je     40d2ff <main@@Base+0x89af>
  40d2d7:	mov    rdi,r14
  40d2da:	mov    rsi,rax
  40d2dd:	mov    rdx,r15
  40d2e0:	mov    ecx,0x8
  40d2e5:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40d2ea:	xor    ebx,ebx
  40d2ec:	jmp    40d309 <main@@Base+0x89b9>
  40d2ee:	xor    ebx,ebx
  40d2f0:	mov    rax,r15
  40d2f3:	jmp    40d30c <main@@Base+0x89bc>
  40d2f5:	xor    ebx,ebx
  40d2f7:	mov    r13,rbp
  40d2fa:	mov    rax,rbp
  40d2fd:	jmp    40d30c <main@@Base+0x89bc>
  40d2ff:	mov    rbx,QWORD PTR [rsp+0x10]
  40d304:	mov    QWORD PTR [rsp+0x20],rbx
  40d309:	mov    r13,rbp
  40d30c:	mov    rbp,rax
  40d30f:	cmp    r13,rax
  40d312:	jne    40d348 <main@@Base+0x89f8>
  40d314:	mov    rdi,r14
  40d317:	mov    rsi,r13
  40d31a:	mov    rdx,r15
  40d31d:	lea    rcx,[rip+0x1bffc]        # 429320 <filename@@Base+0x250>
  40d324:	lea    r8,[rsp+0x20]
  40d329:	call   413710 <main@@Base+0xedc0>
  40d32e:	mov    rbp,rax
  40d331:	cmp    rax,r13
  40d334:	je     40da65 <main@@Base+0x9115>
  40d33a:	cmp    rbp,r15
  40d33d:	je     40da65 <main@@Base+0x9115>
  40d343:	mov    rbx,QWORD PTR [rsp+0x20]
  40d348:	test   rbx,rbx
  40d34b:	jne    40d358 <main@@Base+0x8a08>
  40d34d:	test   BYTE PTR [r14+0x10],0x2
  40d352:	je     40d1cb <main@@Base+0x887b>
  40d358:	mov    rdi,QWORD PTR [r14]
  40d35b:	mov    edx,0x8
  40d360:	mov    esi,0x17
  40d365:	mov    ecx,0x8
  40d36a:	call   41c310 <flatcc_builder_table_add@@Base>
  40d36f:	test   rax,rax
  40d372:	je     40da65 <main@@Base+0x9115>
  40d378:	mov    QWORD PTR [rax],rbx
  40d37b:	jmp    40d1cb <main@@Base+0x887b>
  40d380:	mov    rdi,r14
  40d383:	mov    rsi,rcx
  40d386:	mov    rdx,r15
  40d389:	mov    ecx,0x9
  40d38e:	jmp    409a9f <main@@Base+0x514f>
  40d393:	mov    rbp,r15
  40d396:	cmp    DWORD PTR [r14+0x20],0x0
  40d39b:	jne    409f4c <main@@Base+0x55fc>
  40d3a1:	mov    rdi,QWORD PTR [r14]
  40d3a4:	call   41b9a0 <flatcc_builder_end_table@@Base>
  40d3a9:	mov    DWORD PTR [rsp+0x1c],eax
  40d3ad:	test   eax,eax
  40d3af:	jne    409f73 <main@@Base+0x5623>
  40d3b5:	jmp    409f4c <main@@Base+0x55fc>
  40d3ba:	cmp    al,0x7d
  40d3bc:	jne    40d89e <main@@Base+0x8f4e>
  40d3c2:	lea    rbp,[rbx+0x1]
  40d3c6:	mov    rax,r15
  40d3c9:	sub    rax,rbp
  40d3cc:	cmp    rax,0x2
  40d3d0:	jl     40d3f8 <main@@Base+0x8aa8>
  40d3d2:	cmp    BYTE PTR [rbp+0x0],0x20
  40d3d6:	jg     409f41 <main@@Base+0x55f1>
  40d3dc:	jne    40d3f8 <main@@Base+0x8aa8>
  40d3de:	cmp    BYTE PTR [rbx+0x2],0x20
  40d3e2:	jle    40d3f8 <main@@Base+0x8aa8>
  40d3e4:	add    rbx,0x2
  40d3e8:	mov    rbp,rbx
  40d3eb:	cmp    DWORD PTR [r14+0x20],0x0
  40d3f0:	jne    409f4c <main@@Base+0x55fc>
  40d3f6:	jmp    40d3a1 <main@@Base+0x8a51>
  40d3f8:	mov    rdi,r14
  40d3fb:	mov    rsi,rbp
  40d3fe:	mov    rdx,r15
  40d401:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d406:	jmp    409f3e <main@@Base+0x55ee>
  40d40b:	mov    rdi,r14
  40d40e:	mov    rsi,r15
  40d411:	jmp    40d8a4 <main@@Base+0x8f54>
  40d416:	mov    rbx,rax
  40d419:	mov    BYTE PTR [rsp+0x4],0x0
  40d41e:	mov    rdi,QWORD PTR [r14]
  40d421:	mov    esi,0x1
  40d426:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40d42b:	test   rax,rax
  40d42e:	je     404a01 <main@@Base+0xb1>
  40d434:	mov    rbp,rax
  40d437:	mov    QWORD PTR [rsp+0x10],0x0
  40d440:	mov    DWORD PTR [rsp+0x20],0x0
  40d448:	mov    BYTE PTR [rsp+0x4],0x0
  40d44d:	cmp    rbx,r15
  40d450:	je     40d486 <main@@Base+0x8b36>
  40d452:	mov    rdi,r14
  40d455:	mov    rsi,rbx
  40d458:	mov    rdx,r15
  40d45b:	lea    rcx,[rsp+0x20]
  40d460:	lea    r8,[rsp+0x10]
  40d465:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40d46a:	cmp    rax,rbx
  40d46d:	je     40d492 <main@@Base+0x8b42>
  40d46f:	cmp    DWORD PTR [rsp+0x20],0x0
  40d474:	je     40d49e <main@@Base+0x8b4e>
  40d476:	mov    rdi,r14
  40d479:	mov    rsi,rax
  40d47c:	mov    rdx,r15
  40d47f:	mov    ecx,0x8
  40d484:	jmp    40d4be <main@@Base+0x8b6e>
  40d486:	xor    ecx,ecx
  40d488:	mov    rax,r15
  40d48b:	cmp    rbx,rax
  40d48e:	jne    40d4fb <main@@Base+0x8bab>
  40d490:	jmp    40d4ca <main@@Base+0x8b7a>
  40d492:	xor    ecx,ecx
  40d494:	mov    rax,rbx
  40d497:	cmp    rbx,rax
  40d49a:	jne    40d4fb <main@@Base+0x8bab>
  40d49c:	jmp    40d4ca <main@@Base+0x8b7a>
  40d49e:	mov    rcx,QWORD PTR [rsp+0x10]
  40d4a3:	cmp    rcx,0x100
  40d4aa:	jb     40d5b0 <main@@Base+0x8c60>
  40d4b0:	mov    rdi,r14
  40d4b3:	mov    rsi,rax
  40d4b6:	mov    rdx,r15
  40d4b9:	mov    ecx,0x7
  40d4be:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40d4c3:	xor    ecx,ecx
  40d4c5:	cmp    rbx,rax
  40d4c8:	jne    40d4fb <main@@Base+0x8bab>
  40d4ca:	mov    rdi,r14
  40d4cd:	mov    rsi,rbx
  40d4d0:	mov    rdx,r15
  40d4d3:	lea    rcx,[rip+0x1be66]        # 429340 <filename@@Base+0x270>
  40d4da:	lea    r8,[rsp+0x4]
  40d4df:	call   40f0b0 <main@@Base+0xa760>
  40d4e4:	cmp    rax,rbx
  40d4e7:	je     40da93 <main@@Base+0x9143>
  40d4ed:	cmp    rax,r15
  40d4f0:	je     40da93 <main@@Base+0x9143>
  40d4f6:	movzx  ecx,BYTE PTR [rsp+0x4]
  40d4fb:	mov    BYTE PTR [rbp+0x0],cl
  40d4fe:	mov    rcx,r15
  40d501:	sub    rcx,rax
  40d504:	cmp    rcx,0x2
  40d508:	jl     40d524 <main@@Base+0x8bd4>
  40d50a:	cmp    BYTE PTR [rax],0x20
  40d50d:	jg     40d532 <main@@Base+0x8be2>
  40d50f:	jne    40d524 <main@@Base+0x8bd4>
  40d511:	cmp    BYTE PTR [rax+0x1],0x20
  40d515:	jle    40d524 <main@@Base+0x8bd4>
  40d517:	inc    rax
  40d51a:	cmp    rax,r15
  40d51d:	jne    40d53b <main@@Base+0x8beb>
  40d51f:	jmp    40d8fe <main@@Base+0x8fae>
  40d524:	mov    rdi,r14
  40d527:	mov    rsi,rax
  40d52a:	mov    rdx,r15
  40d52d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d532:	cmp    rax,r15
  40d535:	je     40d8fe <main@@Base+0x8fae>
  40d53b:	movzx  ecx,BYTE PTR [rax]
  40d53e:	cmp    cl,0x2c
  40d541:	jne    40d919 <main@@Base+0x8fc9>
  40d547:	lea    rbx,[rax+0x1]
  40d54b:	mov    rcx,r15
  40d54e:	sub    rcx,rbx
  40d551:	cmp    rcx,0x2
  40d555:	jl     40d56a <main@@Base+0x8c1a>
  40d557:	cmp    BYTE PTR [rbx],0x20
  40d55a:	jg     40d57b <main@@Base+0x8c2b>
  40d55c:	jne    40d56a <main@@Base+0x8c1a>
  40d55e:	cmp    BYTE PTR [rax+0x2],0x20
  40d562:	jle    40d56a <main@@Base+0x8c1a>
  40d564:	add    rax,0x2
  40d568:	jmp    40d578 <main@@Base+0x8c28>
  40d56a:	mov    rdi,r14
  40d56d:	mov    rsi,rbx
  40d570:	mov    rdx,r15
  40d573:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d578:	mov    rbx,rax
  40d57b:	cmp    rbx,r15
  40d57e:	je     40d93d <main@@Base+0x8fed>
  40d584:	cmp    BYTE PTR [rbx],0x5d
  40d587:	je     40d950 <main@@Base+0x9000>
  40d58d:	mov    BYTE PTR [rsp+0x4],0x0
  40d592:	mov    rdi,QWORD PTR [r14]
  40d595:	mov    esi,0x1
  40d59a:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  40d59f:	mov    rbp,rax
  40d5a2:	test   rax,rax
  40d5a5:	jne    40d437 <main@@Base+0x8ae7>
  40d5ab:	jmp    404a01 <main@@Base+0xb1>
  40d5b0:	mov    BYTE PTR [rsp+0x4],cl
  40d5b4:	cmp    rbx,rax
  40d5b7:	jne    40d4fb <main@@Base+0x8bab>
  40d5bd:	jmp    40d4ca <main@@Base+0x8b7a>
  40d5c2:	mov    rbp,r15
  40d5c5:	jmp    40a815 <main@@Base+0x5ec5>
  40d5ca:	cmp    al,0x5d
  40d5cc:	jne    40d8b1 <main@@Base+0x8f61>
  40d5d2:	lea    rbp,[rbx+0x1]
  40d5d6:	mov    rax,r15
  40d5d9:	sub    rax,rbp
  40d5dc:	cmp    rax,0x2
  40d5e0:	jl     40d600 <main@@Base+0x8cb0>
  40d5e2:	cmp    BYTE PTR [rbp+0x0],0x20
  40d5e6:	jg     40a815 <main@@Base+0x5ec5>
  40d5ec:	jne    40d600 <main@@Base+0x8cb0>
  40d5ee:	cmp    BYTE PTR [rbx+0x2],0x20
  40d5f2:	jle    40d600 <main@@Base+0x8cb0>
  40d5f4:	add    rbx,0x2
  40d5f8:	mov    rbp,rbx
  40d5fb:	jmp    40a815 <main@@Base+0x5ec5>
  40d600:	mov    rdi,r14
  40d603:	mov    rsi,rbp
  40d606:	mov    rdx,r15
  40d609:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d60e:	jmp    40a812 <main@@Base+0x5ec2>
  40d613:	mov    rdi,r14
  40d616:	mov    rsi,rbx
  40d619:	mov    rdx,r15
  40d61c:	mov    ecx,0x9
  40d621:	jmp    4099ec <main@@Base+0x509c>
  40d626:	mov    rdi,r14
  40d629:	mov    rsi,rbx
  40d62c:	mov    rdx,r15
  40d62f:	mov    ecx,0x9
  40d634:	jmp    409b43 <main@@Base+0x51f3>
  40d639:	mov    rdi,r14
  40d63c:	mov    rsi,r15
  40d63f:	jmp    40d8b7 <main@@Base+0x8f67>
  40d644:	mov    rbp,r15
  40d647:	jmp    40a92a <main@@Base+0x5fda>
  40d64c:	mov    rbp,r15
  40d64f:	cmp    DWORD PTR [r14+0x20],0x0
  40d654:	jne    40a62a <main@@Base+0x5cda>
  40d65a:	jmp    40d8e5 <main@@Base+0x8f95>
  40d65f:	mov    DWORD PTR [rsp+0x4],ecx
  40d663:	mov    ebx,ecx
  40d665:	mov    r13,rbp
  40d668:	mov    rbp,rax
  40d66b:	cmp    r13,rax
  40d66e:	jne    40d6a3 <main@@Base+0x8d53>
  40d670:	mov    rdi,r14
  40d673:	mov    rsi,r13
  40d676:	mov    rdx,r15
  40d679:	lea    rcx,[rip+0x1bc60]        # 4292e0 <filename@@Base+0x210>
  40d680:	lea    r8,[rsp+0x4]
  40d685:	call   413500 <main@@Base+0xebb0>
  40d68a:	mov    rbp,rax
  40d68d:	cmp    rax,r13
  40d690:	je     40da65 <main@@Base+0x9115>
  40d696:	cmp    rbp,r15
  40d699:	je     40da65 <main@@Base+0x9115>
  40d69f:	mov    ebx,DWORD PTR [rsp+0x4]
  40d6a3:	test   ebx,ebx
  40d6a5:	jne    40d6b2 <main@@Base+0x8d62>
  40d6a7:	test   BYTE PTR [r14+0x10],0x2
  40d6ac:	je     40d1cb <main@@Base+0x887b>
  40d6b2:	mov    rdi,QWORD PTR [r14]
  40d6b5:	mov    edx,0x4
  40d6ba:	mov    esi,0x15
  40d6bf:	mov    ecx,0x4
  40d6c4:	call   41c310 <flatcc_builder_table_add@@Base>
  40d6c9:	test   rax,rax
  40d6cc:	je     40da65 <main@@Base+0x9115>
  40d6d2:	mov    DWORD PTR [rax],ebx
  40d6d4:	jmp    40d1cb <main@@Base+0x887b>
  40d6d9:	cmp    cl,0x5d
  40d6dc:	je     40b5cb <main@@Base+0x6c7b>
  40d6e2:	mov    rdi,r14
  40d6e5:	mov    rsi,rax
  40d6e8:	jmp    40d75e <main@@Base+0x8e0e>
  40d6ea:	cmp    cl,0x7d
  40d6ed:	jne    40d8c4 <main@@Base+0x8f74>
  40d6f3:	lea    rbp,[rax+0x1]
  40d6f7:	mov    rcx,r15
  40d6fa:	sub    rcx,rbp
  40d6fd:	cmp    rcx,0x2
  40d701:	jl     40d71e <main@@Base+0x8dce>
  40d703:	cmp    BYTE PTR [rbp+0x0],0x20
  40d707:	jg     40a61f <main@@Base+0x5ccf>
  40d70d:	jne    40d71e <main@@Base+0x8dce>
  40d70f:	cmp    BYTE PTR [rax+0x2],0x20
  40d713:	jle    40d71e <main@@Base+0x8dce>
  40d715:	add    rax,0x2
  40d719:	jmp    40d8d7 <main@@Base+0x8f87>
  40d71e:	mov    rdi,r14
  40d721:	mov    rsi,rbp
  40d724:	mov    rdx,r15
  40d727:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d72c:	jmp    40d8d7 <main@@Base+0x8f87>
  40d731:	mov    rbp,r15
  40d734:	cmp    DWORD PTR [r14+0x20],0x0
  40d739:	jne    40a356 <main@@Base+0x5a06>
  40d73f:	mov    rdi,QWORD PTR [r14]
  40d742:	call   41b9a0 <flatcc_builder_end_table@@Base>
  40d747:	mov    DWORD PTR [rsp+0x1c],eax
  40d74b:	test   eax,eax
  40d74d:	jne    40a37d <main@@Base+0x5a2d>
  40d753:	jmp    40a356 <main@@Base+0x5a06>
  40d758:	mov    rdi,r14
  40d75b:	mov    rsi,r15
  40d75e:	mov    rdx,r15
  40d761:	mov    ecx,0x9
  40d766:	jmp    40a922 <main@@Base+0x5fd2>
  40d76b:	mov    rbp,r15
  40d76e:	jmp    40aaa7 <main@@Base+0x6157>
  40d773:	mov    rdi,r14
  40d776:	mov    rsi,r15
  40d779:	jmp    40d8ca <main@@Base+0x8f7a>
  40d77e:	cmp    al,0x7d
  40d780:	jne    40d906 <main@@Base+0x8fb6>
  40d786:	lea    rbp,[rbx+0x1]
  40d78a:	mov    rax,r15
  40d78d:	sub    rax,rbp
  40d790:	cmp    rax,0x2
  40d794:	jl     40d7bc <main@@Base+0x8e6c>
  40d796:	cmp    BYTE PTR [rbp+0x0],0x20
  40d79a:	jg     40a34b <main@@Base+0x59fb>
  40d7a0:	jne    40d7bc <main@@Base+0x8e6c>
  40d7a2:	cmp    BYTE PTR [rbx+0x2],0x20
  40d7a6:	jle    40d7bc <main@@Base+0x8e6c>
  40d7a8:	add    rbx,0x2
  40d7ac:	mov    rbp,rbx
  40d7af:	cmp    DWORD PTR [r14+0x20],0x0
  40d7b4:	jne    40a356 <main@@Base+0x5a06>
  40d7ba:	jmp    40d73f <main@@Base+0x8def>
  40d7bc:	mov    rdi,r14
  40d7bf:	mov    rsi,rbp
  40d7c2:	mov    rdx,r15
  40d7c5:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d7ca:	jmp    40a348 <main@@Base+0x59f8>
  40d7cf:	lea    rbp,[rbx+0x1]
  40d7d3:	mov    rax,r15
  40d7d6:	sub    rax,rbp
  40d7d9:	cmp    rax,0x2
  40d7dd:	jl     40d7fd <main@@Base+0x8ead>
  40d7df:	cmp    BYTE PTR [rbp+0x0],0x20
  40d7e3:	jg     40a92a <main@@Base+0x5fda>
  40d7e9:	jne    40d7fd <main@@Base+0x8ead>
  40d7eb:	cmp    BYTE PTR [rbx+0x2],0x20
  40d7ef:	jle    40d7fd <main@@Base+0x8ead>
  40d7f1:	add    rbx,0x2
  40d7f5:	mov    rbp,rbx
  40d7f8:	jmp    40a92a <main@@Base+0x5fda>
  40d7fd:	mov    rdi,r14
  40d800:	mov    rsi,rbp
  40d803:	mov    rdx,r15
  40d806:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d80b:	jmp    40a927 <main@@Base+0x5fd7>
  40d810:	cmp    al,0x5d
  40d812:	jne    40d92a <main@@Base+0x8fda>
  40d818:	lea    rbp,[rbx+0x1]
  40d81c:	mov    rcx,r15
  40d81f:	sub    rcx,rbp
  40d822:	cmp    rcx,0x2
  40d826:	jl     40d88b <main@@Base+0x8f3b>
  40d828:	cmp    BYTE PTR [rbp+0x0],0x20
  40d82c:	jg     40aaa7 <main@@Base+0x6157>
  40d832:	jne    40d88b <main@@Base+0x8f3b>
  40d834:	cmp    BYTE PTR [rbx+0x2],0x20
  40d838:	jle    40d88b <main@@Base+0x8f3b>
  40d83a:	add    rbx,0x2
  40d83e:	mov    rbp,rbx
  40d841:	jmp    40aaa7 <main@@Base+0x6157>
  40d846:	mov    rdi,r14
  40d849:	mov    rsi,r15
  40d84c:	jmp    40d90c <main@@Base+0x8fbc>
  40d851:	mov    rdi,r14
  40d854:	mov    rsi,r15
  40d857:	jmp    40d930 <main@@Base+0x8fe0>
  40d85c:	lea    rbp,[r13+0x1]
  40d860:	mov    rcx,r15
  40d863:	sub    rcx,rbp
  40d866:	cmp    rcx,0x2
  40d86a:	jl     40d88b <main@@Base+0x8f3b>
  40d86c:	cmp    BYTE PTR [rbp+0x0],0x20
  40d870:	jg     40aaa7 <main@@Base+0x6157>
  40d876:	jne    40d88b <main@@Base+0x8f3b>
  40d878:	cmp    BYTE PTR [r13+0x2],0x20
  40d87d:	jle    40d88b <main@@Base+0x8f3b>
  40d87f:	add    r13,0x2
  40d883:	mov    rbp,r13
  40d886:	jmp    40aaa7 <main@@Base+0x6157>
  40d88b:	mov    rdi,r14
  40d88e:	mov    rsi,rbp
  40d891:	mov    rdx,r15
  40d894:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d899:	jmp    40aaa4 <main@@Base+0x6154>
  40d89e:	mov    rdi,r14
  40d8a1:	mov    rsi,rbx
  40d8a4:	mov    rdx,r15
  40d8a7:	mov    ecx,0xa
  40d8ac:	jmp    409f39 <main@@Base+0x55e9>
  40d8b1:	mov    rdi,r14
  40d8b4:	mov    rsi,rbx
  40d8b7:	mov    rdx,r15
  40d8ba:	mov    ecx,0x9
  40d8bf:	jmp    40a80d <main@@Base+0x5ebd>
  40d8c4:	mov    rdi,r14
  40d8c7:	mov    rsi,rax
  40d8ca:	mov    rdx,r15
  40d8cd:	mov    ecx,0xa
  40d8d2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40d8d7:	mov    rbp,rax
  40d8da:	cmp    DWORD PTR [r14+0x20],0x0
  40d8df:	jne    40a62a <main@@Base+0x5cda>
  40d8e5:	mov    rdi,QWORD PTR [r14]
  40d8e8:	call   41b9a0 <flatcc_builder_end_table@@Base>
  40d8ed:	mov    DWORD PTR [rsp+0x1c],eax
  40d8f1:	test   eax,eax
  40d8f3:	jne    40a64e <main@@Base+0x5cfe>
  40d8f9:	jmp    40a62a <main@@Base+0x5cda>
  40d8fe:	mov    rbp,r15
  40d901:	jmp    40d988 <main@@Base+0x9038>
  40d906:	mov    rdi,r14
  40d909:	mov    rsi,rbx
  40d90c:	mov    rdx,r15
  40d90f:	mov    ecx,0xa
  40d914:	jmp    40a343 <main@@Base+0x59f3>
  40d919:	cmp    cl,0x5d
  40d91c:	je     40c3e3 <main@@Base+0x7a93>
  40d922:	mov    rdi,r14
  40d925:	mov    rsi,rax
  40d928:	jmp    40d943 <main@@Base+0x8ff3>
  40d92a:	mov    rdi,r14
  40d92d:	mov    rsi,rbx
  40d930:	mov    rdx,r15
  40d933:	mov    ecx,0x9
  40d938:	jmp    40aa9f <main@@Base+0x614f>
  40d93d:	mov    rdi,r14
  40d940:	mov    rsi,r15
  40d943:	mov    rdx,r15
  40d946:	mov    ecx,0x9
  40d94b:	jmp    40bb16 <main@@Base+0x71c6>
  40d950:	lea    rbp,[rbx+0x1]
  40d954:	mov    rax,r15
  40d957:	sub    rax,rbp
  40d95a:	cmp    rax,0x2
  40d95e:	jl     40d977 <main@@Base+0x9027>
  40d960:	cmp    BYTE PTR [rbp+0x0],0x20
  40d964:	jg     40d988 <main@@Base+0x9038>
  40d966:	jne    40d977 <main@@Base+0x9027>
  40d968:	cmp    BYTE PTR [rbx+0x2],0x20
  40d96c:	jle    40d977 <main@@Base+0x9027>
  40d96e:	add    rbx,0x2
  40d972:	mov    rbp,rbx
  40d975:	jmp    40d988 <main@@Base+0x9038>
  40d977:	mov    rdi,r14
  40d97a:	mov    rsi,rbp
  40d97d:	mov    rdx,r15
  40d980:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40d985:	mov    rbp,rax
  40d988:	mov    rdi,QWORD PTR [r14]
  40d98b:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  40d990:	mov    DWORD PTR [rsp+0x1c],eax
  40d994:	test   eax,eax
  40d996:	je     40da65 <main@@Base+0x9115>
  40d99c:	mov    rdi,QWORD PTR [r14]
  40d99f:	mov    esi,0xd
  40d9a4:	jmp    407d11 <main@@Base+0x33c1>
  40d9a9:	mov    rbx,r15
  40d9ac:	jmp    40da7e <main@@Base+0x912e>
  40d9b1:	cmp    al,0x7d
  40d9b3:	jne    40da50 <main@@Base+0x9100>
  40d9b9:	lea    rbx,[rbp+0x1]
  40d9bd:	mov    rax,r15
  40d9c0:	sub    rax,rbx
  40d9c3:	cmp    rax,0x2
  40d9c7:	jl     40da6d <main@@Base+0x911d>
  40d9cd:	cmp    BYTE PTR [rbx],0x20
  40d9d0:	jg     40da7e <main@@Base+0x912e>
  40d9d6:	jne    40da6d <main@@Base+0x911d>
  40d9dc:	cmp    BYTE PTR [rbp+0x2],0x20
  40d9e0:	jle    40da6d <main@@Base+0x911d>
  40d9e6:	mov    rbx,rbp
  40d9e9:	add    rbx,0x2
  40d9ed:	jmp    40da7e <main@@Base+0x912e>
  40d9f2:	mov    rdi,r14
  40d9f5:	mov    rsi,r15
  40d9f8:	mov    rdx,r15
  40d9fb:	mov    ecx,0xa
  40da00:	jmp    404a84 <main@@Base+0x134>
  40da05:	lea    rbx,[rsi+0x1]
  40da09:	mov    rax,r15
  40da0c:	sub    rax,rbx
  40da0f:	cmp    rax,0x2
  40da13:	jl     40da3d <main@@Base+0x90ed>
  40da15:	cmp    BYTE PTR [rbx],0x20
  40da18:	jg     404a8c <main@@Base+0x13c>
  40da1e:	jne    40da3d <main@@Base+0x90ed>
  40da20:	cmp    BYTE PTR [rsi+0x2],0x20
  40da24:	jle    40da3d <main@@Base+0x90ed>
  40da26:	add    rsi,0x2
  40da2a:	mov    rbx,rsi
  40da2d:	cmp    DWORD PTR [r14+0x20],0x0
  40da32:	jne    404a01 <main@@Base+0xb1>
  40da38:	jmp    404a97 <main@@Base+0x147>
  40da3d:	mov    rdi,r14
  40da40:	mov    rsi,rbx
  40da43:	mov    rdx,r15
  40da46:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40da4b:	jmp    404a89 <main@@Base+0x139>
  40da50:	mov    rdi,r14
  40da53:	mov    rsi,rbp
  40da56:	mov    rdx,r15
  40da59:	mov    ecx,0xa
  40da5e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40da63:	jmp    40da7b <main@@Base+0x912b>
  40da65:	mov    rbx,rbp
  40da68:	jmp    404a01 <main@@Base+0xb1>
  40da6d:	mov    rdi,r14
  40da70:	mov    rsi,rbx
  40da73:	mov    rdx,r15
  40da76:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40da7b:	mov    rbx,rax
  40da7e:	mov    rbp,QWORD PTR [rsp+0x30]
  40da83:	cmp    DWORD PTR [r14+0x20],0x0
  40da88:	jne    404a01 <main@@Base+0xb1>
  40da8e:	jmp    404a97 <main@@Base+0x147>
  40da93:	mov    rbx,rax
  40da96:	jmp    404a01 <main@@Base+0xb1>
  40da9b:	mov    rbx,r13
  40da9e:	jmp    404a01 <main@@Base+0xb1>
  40daa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40daad:	nop    DWORD PTR [rax]
  40dab0:	push   r15
  40dab2:	push   r14
  40dab4:	push   rbx
  40dab5:	mov    r15,r8
  40dab8:	mov    r14,rcx
  40dabb:	mov    rbx,rsi
  40dabe:	mov    rcx,rdx
  40dac1:	sub    rcx,rsi
  40dac4:	cmp    rcx,0x8
  40dac8:	jb     40dad1 <main@@Base+0x9181>
  40daca:	movbe  rcx,QWORD PTR [rbx]
  40dacf:	jmp    40db3f <main@@Base+0x91ef>
  40dad1:	dec    rcx
  40dad4:	cmp    rcx,0x6
  40dad8:	ja     40dbd9 <main@@Base+0x9289>
  40dade:	xor    eax,eax
  40dae0:	lea    rsi,[rip+0x147e1]        # 4222c8 <_IO_stdin_used@@Base+0x2c8>
  40dae7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  40daeb:	add    rcx,rsi
  40daee:	jmp    rcx
  40daf0:	movsx  rax,BYTE PTR [rbx+0x6]
  40daf5:	shl    rax,0x8
  40daf9:	movsx  rcx,BYTE PTR [rbx+0x5]
  40dafe:	shl    rcx,0x10
  40db02:	or     rax,rcx
  40db05:	movsx  rcx,BYTE PTR [rbx+0x4]
  40db0a:	shl    rcx,0x18
  40db0e:	or     rax,rcx
  40db11:	movsx  rcx,BYTE PTR [rbx+0x3]
  40db16:	shl    rcx,0x20
  40db1a:	or     rax,rcx
  40db1d:	movsx  rcx,BYTE PTR [rbx+0x2]
  40db22:	shl    rcx,0x28
  40db26:	or     rax,rcx
  40db29:	movsx  rcx,BYTE PTR [rbx+0x1]
  40db2e:	shl    rcx,0x30
  40db32:	or     rax,rcx
  40db35:	movzx  ecx,BYTE PTR [rbx]
  40db38:	shl    rcx,0x38
  40db3c:	or     rcx,rax
  40db3f:	movabs rax,0x477265656e000000
  40db49:	cmp    rcx,rax
  40db4c:	jae    40db79 <main@@Base+0x9229>
  40db4e:	shr    rcx,0x20
  40db52:	cmp    rcx,0x426c7565
  40db59:	jne    40dbd9 <main@@Base+0x9289>
  40db5b:	mov    rsi,rbx
  40db5e:	mov    ecx,0x4
  40db63:	mov    r8,r9
  40db66:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40db6b:	cmp    rax,rbx
  40db6e:	je     40dbd9 <main@@Base+0x9289>
  40db70:	mov    QWORD PTR [r15],0x8
  40db77:	jmp    40dbcf <main@@Base+0x927f>
  40db79:	mov    rsi,rcx
  40db7c:	shr    rsi,0x28
  40db80:	cmp    rsi,0x526564
  40db87:	jne    40dba7 <main@@Base+0x9257>
  40db89:	mov    rsi,rbx
  40db8c:	mov    ecx,0x3
  40db91:	mov    r8,r9
  40db94:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40db99:	cmp    rax,rbx
  40db9c:	je     40dbd9 <main@@Base+0x9289>
  40db9e:	mov    QWORD PTR [r15],0x1
  40dba5:	jmp    40dbcf <main@@Base+0x927f>
  40dba7:	and    rcx,0xffffffffff000000
  40dbae:	cmp    rcx,rax
  40dbb1:	jne    40dbd9 <main@@Base+0x9289>
  40dbb3:	mov    rsi,rbx
  40dbb6:	mov    ecx,0x5
  40dbbb:	mov    r8,r9
  40dbbe:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40dbc3:	cmp    rax,rbx
  40dbc6:	je     40dbd9 <main@@Base+0x9289>
  40dbc8:	mov    QWORD PTR [r15],0x2
  40dbcf:	mov    DWORD PTR [r14],0x0
  40dbd6:	mov    rbx,rax
  40dbd9:	mov    rax,rbx
  40dbdc:	pop    rbx
  40dbdd:	pop    r14
  40dbdf:	pop    r15
  40dbe1:	ret    
  40dbe2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbec:	nop    DWORD PTR [rax+0x0]
  40dbf0:	push   r15
  40dbf2:	push   r14
  40dbf4:	push   r12
  40dbf6:	push   rbx
  40dbf7:	push   rax
  40dbf8:	mov    r14,r8
  40dbfb:	mov    r12,rcx
  40dbfe:	mov    r10,rdx
  40dc01:	sub    r10,rsi
  40dc04:	cmp    r10,0x8
  40dc08:	jb     40dc11 <main@@Base+0x92c1>
  40dc0a:	movbe  rbx,QWORD PTR [rsi]
  40dc0f:	jmp    40dc80 <main@@Base+0x9330>
  40dc11:	lea    rbx,[r10-0x1]
  40dc15:	cmp    rbx,0x6
  40dc19:	ja     40e019 <main@@Base+0x96c9>
  40dc1f:	xor    ecx,ecx
  40dc21:	lea    r8,[rip+0x146bc]        # 4222e4 <_IO_stdin_used@@Base+0x2e4>
  40dc28:	movsxd rbx,DWORD PTR [r8+rbx*4]
  40dc2c:	add    rbx,r8
  40dc2f:	jmp    rbx
  40dc31:	movsx  rcx,BYTE PTR [rsi+0x6]
  40dc36:	shl    rcx,0x8
  40dc3a:	movsx  rbx,BYTE PTR [rsi+0x5]
  40dc3f:	shl    rbx,0x10
  40dc43:	or     rcx,rbx
  40dc46:	movsx  rbx,BYTE PTR [rsi+0x4]
  40dc4b:	shl    rbx,0x18
  40dc4f:	or     rcx,rbx
  40dc52:	movsx  rbx,BYTE PTR [rsi+0x3]
  40dc57:	shl    rbx,0x20
  40dc5b:	or     rcx,rbx
  40dc5e:	movsx  rbx,BYTE PTR [rsi+0x2]
  40dc63:	shl    rbx,0x28
  40dc67:	or     rcx,rbx
  40dc6a:	movsx  rbx,BYTE PTR [rsi+0x1]
  40dc6f:	shl    rbx,0x30
  40dc73:	or     rcx,rbx
  40dc76:	movzx  ebx,BYTE PTR [rsi]
  40dc79:	shl    rbx,0x38
  40dc7d:	or     rbx,rcx
  40dc80:	movabs rcx,0x6865785f656e756d
  40dc8a:	cmp    rbx,rcx
  40dc8d:	jae    40dcfa <main@@Base+0x93aa>
  40dc8f:	movabs r8,0x436f6c6f72000000
  40dc99:	movabs rcx,0xffffff0000000000
  40dca3:	and    rcx,rbx
  40dca6:	cmp    rbx,r8
  40dca9:	jae    40dd4e <main@@Base+0x93fe>
  40dcaf:	cmp    r10,0x4
  40dcb3:	jl     40e019 <main@@Base+0x96c9>
  40dcb9:	movabs rax,0x416e790000000000
  40dcc3:	cmp    rcx,rax
  40dcc6:	jne    40e019 <main@@Base+0x96c9>
  40dccc:	lea    rax,[rsi+0x4]
  40dcd0:	cmp    BYTE PTR [rsi+0x3],0x2e
  40dcd4:	cmovne rax,rsi
  40dcd8:	cmp    rax,rsi
  40dcdb:	je     40e019 <main@@Base+0x96c9>
  40dce1:	mov    rsi,rax
  40dce4:	mov    rcx,r12
  40dce7:	mov    r8,r14
  40dcea:	add    rsp,0x8
  40dcee:	pop    rbx
  40dcef:	pop    r12
  40dcf1:	pop    r14
  40dcf3:	pop    r15
  40dcf5:	jmp    4129e0 <main@@Base+0xe090>
  40dcfa:	movabs r8,0x696e745f656e756d
  40dd04:	cmp    rbx,r8
  40dd07:	jae    40dd99 <main@@Base+0x9449>
  40dd0d:	cmp    r10,0x9
  40dd11:	jl     40e019 <main@@Base+0x96c9>
  40dd17:	cmp    rbx,rcx
  40dd1a:	jne    40e019 <main@@Base+0x96c9>
  40dd20:	lea    rax,[rsi+0x9]
  40dd24:	cmp    BYTE PTR [rsi+0x8],0x2e
  40dd28:	cmovne rax,rsi
  40dd2c:	cmp    rax,rsi
  40dd2f:	je     40e019 <main@@Base+0x96c9>
  40dd35:	mov    rsi,rax
  40dd38:	mov    rcx,r12
  40dd3b:	mov    r8,r14
  40dd3e:	add    rsp,0x8
  40dd42:	pop    rbx
  40dd43:	pop    r12
  40dd45:	pop    r14
  40dd47:	pop    r15
  40dd49:	jmp    413d00 <main@@Base+0xf3b0>
  40dd4e:	movabs rax,0x466f6f0000000000
  40dd58:	cmp    rcx,rax
  40dd5b:	jne    40dded <main@@Base+0x949d>
  40dd61:	cmp    r10,0x4
  40dd65:	jl     40e019 <main@@Base+0x96c9>
  40dd6b:	lea    rax,[rsi+0x4]
  40dd6f:	cmp    BYTE PTR [rsi+0x3],0x2e
  40dd73:	cmovne rax,rsi
  40dd77:	cmp    rax,rsi
  40dd7a:	je     40e019 <main@@Base+0x96c9>
  40dd80:	mov    rsi,rax
  40dd83:	mov    rcx,r12
  40dd86:	mov    r8,r14
  40dd89:	add    rsp,0x8
  40dd8d:	pop    rbx
  40dd8e:	pop    r12
  40dd90:	pop    r14
  40dd92:	pop    r15
  40dd94:	jmp    413ac0 <main@@Base+0xf170>
  40dd99:	movabs rax,0x6e65675f656e756c
  40dda3:	cmp    rbx,rax
  40dda6:	ja     40de35 <main@@Base+0x94e5>
  40ddac:	cmp    r10,0x9
  40ddb0:	jl     40e019 <main@@Base+0x96c9>
  40ddb6:	cmp    rbx,r8
  40ddb9:	jne    40e019 <main@@Base+0x96c9>
  40ddbf:	lea    rax,[rsi+0x9]
  40ddc3:	cmp    BYTE PTR [rsi+0x8],0x2e
  40ddc7:	cmovne rax,rsi
  40ddcb:	cmp    rax,rsi
  40ddce:	je     40e019 <main@@Base+0x96c9>
  40ddd4:	mov    rsi,rax
  40ddd7:	mov    rcx,r12
  40ddda:	mov    r8,r14
  40dddd:	add    rsp,0x8
  40dde1:	pop    rbx
  40dde2:	pop    r12
  40dde4:	pop    r14
  40dde6:	pop    r15
  40dde8:	jmp    413e60 <main@@Base+0xf510>
  40dded:	cmp    r10,0x6
  40ddf1:	jl     40e019 <main@@Base+0x96c9>
  40ddf7:	and    rbx,0xffffffffff000000
  40ddfe:	cmp    rbx,r8
  40de01:	jne    40e019 <main@@Base+0x96c9>
  40de07:	lea    rax,[rsi+0x6]
  40de0b:	cmp    BYTE PTR [rsi+0x5],0x2e
  40de0f:	cmovne rax,rsi
  40de13:	cmp    rax,rsi
  40de16:	je     40e019 <main@@Base+0x96c9>
  40de1c:	mov    rsi,rax
  40de1f:	mov    rcx,r12
  40de22:	mov    r8,r14
  40de25:	add    rsp,0x8
  40de29:	pop    rbx
  40de2a:	pop    r12
  40de2c:	pop    r14
  40de2e:	pop    r15
  40de30:	jmp    40dab0 <main@@Base+0x9160>
  40de35:	movabs rax,0x6e6f74656d707479
  40de3f:	cmp    rbx,rax
  40de42:	je     40de8f <main@@Base+0x953f>
  40de44:	movabs rax,0x6e65675f656e756d
  40de4e:	cmp    rbx,rax
  40de51:	jne    40e019 <main@@Base+0x96c9>
  40de57:	cmp    r10,0x9
  40de5b:	jl     40e019 <main@@Base+0x96c9>
  40de61:	lea    rax,[rsi+0x9]
  40de65:	cmp    BYTE PTR [rsi+0x8],0x2e
  40de69:	cmovne rax,rsi
  40de6d:	cmp    rax,rsi
  40de70:	je     40e019 <main@@Base+0x96c9>
  40de76:	mov    rsi,rax
  40de79:	mov    rcx,r12
  40de7c:	mov    r8,r14
  40de7f:	add    rsp,0x8
  40de83:	pop    rbx
  40de84:	pop    r12
  40de86:	pop    r14
  40de88:	pop    r15
  40de8a:	jmp    414000 <main@@Base+0xf6b0>
  40de8f:	lea    r8,[rsi+0x8]
  40de93:	mov    rcx,rdx
  40de96:	sub    rcx,r8
  40de99:	cmp    rcx,0x8
  40de9d:	jb     40deaf <main@@Base+0x955f>
  40de9f:	movbe  rbx,QWORD PTR [r8]
  40dea4:	cmp    rcx,0x5
  40dea8:	jge    40df29 <main@@Base+0x95d9>
  40deaa:	jmp    40e019 <main@@Base+0x96c9>
  40deaf:	lea    rbx,[rcx-0x1]
  40deb3:	cmp    rbx,0x6
  40deb7:	ja     40e019 <main@@Base+0x96c9>
  40debd:	xor    eax,eax
  40debf:	lea    r10,[rip+0x1443a]        # 422300 <_IO_stdin_used@@Base+0x300>
  40dec6:	movsxd rbx,DWORD PTR [r10+rbx*4]
  40deca:	add    rbx,r10
  40decd:	jmp    rbx
  40decf:	movsx  rax,BYTE PTR [rsi+0xe]
  40ded4:	shl    rax,0x8
  40ded8:	movsx  rbx,BYTE PTR [rsi+0xd]
  40dedd:	shl    rbx,0x10
  40dee1:	or     rax,rbx
  40dee4:	movsx  rbx,BYTE PTR [rsi+0xc]
  40dee9:	shl    rbx,0x18
  40deed:	or     rax,rbx
  40def0:	movsx  rbx,BYTE PTR [rsi+0xb]
  40def5:	shl    rbx,0x20
  40def9:	or     rax,rbx
  40defc:	movsx  rbx,BYTE PTR [rsi+0xa]
  40df01:	shl    rbx,0x28
  40df05:	or     rax,rbx
  40df08:	movsx  rbx,BYTE PTR [rsi+0x9]
  40df0d:	shl    rbx,0x30
  40df11:	or     rax,rbx
  40df14:	movzx  ebx,BYTE PTR [r8]
  40df18:	shl    rbx,0x38
  40df1c:	or     rbx,rax
  40df1f:	cmp    rcx,0x5
  40df23:	jl     40e019 <main@@Base+0x96c9>
  40df29:	movabs rax,0xffffffff00000000
  40df33:	and    rbx,rax
  40df36:	movabs rax,0x656e756d00000000
  40df40:	cmp    rbx,rax
  40df43:	jne    40e019 <main@@Base+0x96c9>
  40df49:	lea    r15,[rsi+0xd]
  40df4d:	cmp    BYTE PTR [rsi+0xc],0x2e
  40df51:	cmovne r15,r8
  40df55:	cmp    r15,r8
  40df58:	je     40e019 <main@@Base+0x96c9>
  40df5e:	mov    rcx,rdx
  40df61:	sub    rcx,r15
  40df64:	cmp    rcx,0x8
  40df68:	jb     40df71 <main@@Base+0x9621>
  40df6a:	movbe  rcx,QWORD PTR [r15]
  40df6f:	jmp    40dfe0 <main@@Base+0x9690>
  40df71:	dec    rcx
  40df74:	cmp    rcx,0x6
  40df78:	ja     40e016 <main@@Base+0x96c6>
  40df7e:	xor    eax,eax
  40df80:	lea    rsi,[rip+0x14395]        # 42231c <_IO_stdin_used@@Base+0x31c>
  40df87:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  40df8b:	add    rcx,rsi
  40df8e:	jmp    rcx
  40df90:	movsx  rax,BYTE PTR [r15+0x6]
  40df95:	shl    rax,0x8
  40df99:	movsx  rcx,BYTE PTR [r15+0x5]
  40df9e:	shl    rcx,0x10
  40dfa2:	or     rax,rcx
  40dfa5:	movsx  rcx,BYTE PTR [r15+0x4]
  40dfaa:	shl    rcx,0x18
  40dfae:	or     rax,rcx
  40dfb1:	movsx  rcx,BYTE PTR [r15+0x3]
  40dfb6:	shl    rcx,0x20
  40dfba:	or     rax,rcx
  40dfbd:	movsx  rcx,BYTE PTR [r15+0x2]
  40dfc2:	shl    rcx,0x28
  40dfc6:	or     rax,rcx
  40dfc9:	movsx  rcx,BYTE PTR [r15+0x1]
  40dfce:	shl    rcx,0x30
  40dfd2:	or     rax,rcx
  40dfd5:	movzx  ecx,BYTE PTR [r15]
  40dfd9:	shl    rcx,0x38
  40dfdd:	or     rcx,rax
  40dfe0:	shr    rcx,0x38
  40dfe4:	cmp    rcx,0x78
  40dfe8:	jne    40e016 <main@@Base+0x96c6>
  40dfea:	mov    rsi,r15
  40dfed:	mov    ecx,0x1
  40dff2:	mov    r8,r9
  40dff5:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40dffa:	mov    rsi,r15
  40dffd:	cmp    rax,r15
  40e000:	je     40e019 <main@@Base+0x96c9>
  40e002:	mov    QWORD PTR [r14],0x0
  40e009:	mov    DWORD PTR [r12],0x0
  40e011:	mov    rsi,rax
  40e014:	jmp    40e019 <main@@Base+0x96c9>
  40e016:	mov    rsi,r15
  40e019:	mov    rax,rsi
  40e01c:	add    rsp,0x8
  40e020:	pop    rbx
  40e021:	pop    r12
  40e023:	pop    r14
  40e025:	pop    r15
  40e027:	ret    
  40e028:	nop    DWORD PTR [rax+rax*1+0x0]
  40e030:	push   rbp
  40e031:	push   r15
  40e033:	push   r14
  40e035:	push   r13
  40e037:	push   r12
  40e039:	push   rbx
  40e03a:	push   rax
  40e03b:	mov    r12,r9
  40e03e:	mov    r14,r8
  40e041:	mov    r15,rcx
  40e044:	mov    rbx,rdx
  40e047:	mov    r13,rdi
  40e04a:	mov    rcx,rdx
  40e04d:	sub    rcx,rsi
  40e050:	cmp    rcx,0x8
  40e054:	jb     40e05d <main@@Base+0x970d>
  40e056:	movbe  rcx,QWORD PTR [rsi]
  40e05b:	jmp    40e0cb <main@@Base+0x977b>
  40e05d:	dec    rcx
  40e060:	cmp    rcx,0x6
  40e064:	ja     40edd0 <main@@Base+0xa480>
  40e06a:	xor    eax,eax
  40e06c:	lea    rdx,[rip+0x142c5]        # 422338 <_IO_stdin_used@@Base+0x338>
  40e073:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40e077:	add    rcx,rdx
  40e07a:	jmp    rcx
  40e07c:	movsx  rax,BYTE PTR [rsi+0x6]
  40e081:	shl    rax,0x8
  40e085:	movsx  rcx,BYTE PTR [rsi+0x5]
  40e08a:	shl    rcx,0x10
  40e08e:	or     rax,rcx
  40e091:	movsx  rcx,BYTE PTR [rsi+0x4]
  40e096:	shl    rcx,0x18
  40e09a:	or     rax,rcx
  40e09d:	movsx  rcx,BYTE PTR [rsi+0x3]
  40e0a2:	shl    rcx,0x20
  40e0a6:	or     rax,rcx
  40e0a9:	movsx  rcx,BYTE PTR [rsi+0x2]
  40e0ae:	shl    rcx,0x28
  40e0b2:	or     rax,rcx
  40e0b5:	movsx  rcx,BYTE PTR [rsi+0x1]
  40e0ba:	shl    rcx,0x30
  40e0be:	or     rax,rcx
  40e0c1:	movzx  ecx,BYTE PTR [rsi]
  40e0c4:	shl    rcx,0x38
  40e0c8:	or     rcx,rax
  40e0cb:	movabs rax,0x4d7947616d652e44
  40e0d5:	cmp    rcx,rax
  40e0d8:	ja     40e107 <main@@Base+0x97b7>
  40e0da:	movabs rax,0x46616e746173792e
  40e0e4:	cmp    rcx,rax
  40e0e7:	jne    40edd0 <main@@Base+0xa480>
  40e0ed:	lea    rax,[rsi+0x8]
  40e0f1:	mov    rdx,rbx
  40e0f4:	sub    rdx,rax
  40e0f7:	cmp    rdx,0x8
  40e0fb:	jb     40e165 <main@@Base+0x9815>
  40e0fd:	movbe  rax,QWORD PTR [rax]
  40e102:	jmp    40e1d3 <main@@Base+0x9883>
  40e107:	movabs rax,0x4d7947616d652e4f
  40e111:	cmp    rcx,rax
  40e114:	je     40e147 <main@@Base+0x97f7>
  40e116:	movabs rax,0x4d7947616d652e45
  40e120:	cmp    rcx,rax
  40e123:	jne    40edd0 <main@@Base+0xa480>
  40e129:	lea    rax,[rsi+0x8]
  40e12d:	mov    rdx,rbx
  40e130:	sub    rdx,rax
  40e133:	cmp    rdx,0x8
  40e137:	jb     40e20e <main@@Base+0x98be>
  40e13d:	movbe  rax,QWORD PTR [rax]
  40e142:	jmp    40e27c <main@@Base+0x992c>
  40e147:	lea    rax,[rsi+0x8]
  40e14b:	mov    rdx,rbx
  40e14e:	sub    rdx,rax
  40e151:	cmp    rdx,0x8
  40e155:	jb     40e2d1 <main@@Base+0x9981>
  40e15b:	movbe  rax,QWORD PTR [rax]
  40e160:	jmp    40e33f <main@@Base+0x99ef>
  40e165:	dec    rdx
  40e168:	cmp    rdx,0x6
  40e16c:	ja     40edd0 <main@@Base+0xa480>
  40e172:	xor    ecx,ecx
  40e174:	lea    rdi,[rip+0x14345]        # 4224c0 <_IO_stdin_used@@Base+0x4c0>
  40e17b:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40e17f:	add    rdx,rdi
  40e182:	jmp    rdx
  40e184:	movsx  rcx,BYTE PTR [rsi+0xe]
  40e189:	shl    rcx,0x8
  40e18d:	movsx  rdx,BYTE PTR [rsi+0xd]
  40e192:	shl    rdx,0x10
  40e196:	or     rcx,rdx
  40e199:	movsx  rdx,BYTE PTR [rsi+0xc]
  40e19e:	shl    rdx,0x18
  40e1a2:	or     rcx,rdx
  40e1a5:	movsx  rdx,BYTE PTR [rsi+0xb]
  40e1aa:	shl    rdx,0x20
  40e1ae:	or     rcx,rdx
  40e1b1:	movsx  rdx,BYTE PTR [rsi+0xa]
  40e1b6:	shl    rdx,0x28
  40e1ba:	or     rcx,rdx
  40e1bd:	movsx  rdx,BYTE PTR [rsi+0x9]
  40e1c2:	shl    rdx,0x30
  40e1c6:	or     rcx,rdx
  40e1c9:	movzx  eax,BYTE PTR [rax]
  40e1cc:	shl    rax,0x38
  40e1d0:	or     rax,rcx
  40e1d3:	movabs rcx,0x4368617261637465
  40e1dd:	cmp    rax,rcx
  40e1e0:	jne    40edd0 <main@@Base+0xa480>
  40e1e6:	lea    rcx,[rsi+0x10]
  40e1ea:	mov    rax,rbx
  40e1ed:	sub    rax,rcx
  40e1f0:	cmp    rax,0x8
  40e1f4:	jb     40e3ef <main@@Base+0x9a9f>
  40e1fa:	movbe  rdi,QWORD PTR [rcx]
  40e1ff:	cmp    rax,0x2
  40e203:	jge    40e469 <main@@Base+0x9b19>
  40e209:	jmp    40edd0 <main@@Base+0xa480>
  40e20e:	dec    rdx
  40e211:	cmp    rdx,0x6
  40e215:	ja     40edd0 <main@@Base+0xa480>
  40e21b:	xor    ecx,ecx
  40e21d:	lea    rdi,[rip+0x141d8]        # 4223fc <_IO_stdin_used@@Base+0x3fc>
  40e224:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40e228:	add    rdx,rdi
  40e22b:	jmp    rdx
  40e22d:	movsx  rcx,BYTE PTR [rsi+0xe]
  40e232:	shl    rcx,0x8
  40e236:	movsx  rdx,BYTE PTR [rsi+0xd]
  40e23b:	shl    rdx,0x10
  40e23f:	or     rcx,rdx
  40e242:	movsx  rdx,BYTE PTR [rsi+0xc]
  40e247:	shl    rdx,0x18
  40e24b:	or     rcx,rdx
  40e24e:	movsx  rdx,BYTE PTR [rsi+0xb]
  40e253:	shl    rdx,0x20
  40e257:	or     rcx,rdx
  40e25a:	movsx  rdx,BYTE PTR [rsi+0xa]
  40e25f:	shl    rdx,0x28
  40e263:	or     rcx,rdx
  40e266:	movsx  rdx,BYTE PTR [rsi+0x9]
  40e26b:	shl    rdx,0x30
  40e26f:	or     rcx,rdx
  40e272:	movzx  eax,BYTE PTR [rax]
  40e275:	shl    rax,0x38
  40e279:	or     rax,rcx
  40e27c:	movabs rcx,0x78616d706c652e68
  40e286:	cmp    rax,rcx
  40e289:	jae    40e370 <main@@Base+0x9a20>
  40e28f:	lea    rdx,[rcx-0x25]
  40e293:	cmp    rax,rdx
  40e296:	jae    40e4c3 <main@@Base+0x9b73>
  40e29c:	add    rcx,0xffffffffffffffd9
  40e2a0:	cmp    rax,rcx
  40e2a3:	jne    40edd0 <main@@Base+0xa480>
  40e2a9:	lea    rcx,[rsi+0x10]
  40e2ad:	mov    rax,rbx
  40e2b0:	sub    rax,rcx
  40e2b3:	cmp    rax,0x8
  40e2b7:	jb     40e787 <main@@Base+0x9e37>
  40e2bd:	movbe  rdi,QWORD PTR [rcx]
  40e2c2:	cmp    rax,0x3
  40e2c6:	jge    40e801 <main@@Base+0x9eb1>
  40e2cc:	jmp    40edd0 <main@@Base+0xa480>
  40e2d1:	dec    rdx
  40e2d4:	cmp    rdx,0x6
  40e2d8:	ja     40edd0 <main@@Base+0xa480>
  40e2de:	xor    ecx,ecx
  40e2e0:	lea    rdi,[rip+0x1406d]        # 422354 <_IO_stdin_used@@Base+0x354>
  40e2e7:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40e2eb:	add    rdx,rdi
  40e2ee:	jmp    rdx
  40e2f0:	movsx  rcx,BYTE PTR [rsi+0xe]
  40e2f5:	shl    rcx,0x8
  40e2f9:	movsx  rdx,BYTE PTR [rsi+0xd]
  40e2fe:	shl    rdx,0x10
  40e302:	or     rcx,rdx
  40e305:	movsx  rdx,BYTE PTR [rsi+0xc]
  40e30a:	shl    rdx,0x18
  40e30e:	or     rcx,rdx
  40e311:	movsx  rdx,BYTE PTR [rsi+0xb]
  40e316:	shl    rdx,0x20
  40e31a:	or     rcx,rdx
  40e31d:	movsx  rdx,BYTE PTR [rsi+0xa]
  40e322:	shl    rdx,0x28
  40e326:	or     rcx,rdx
  40e329:	movsx  rdx,BYTE PTR [rsi+0x9]
  40e32e:	shl    rdx,0x30
  40e332:	or     rcx,rdx
  40e335:	movzx  eax,BYTE PTR [rax]
  40e338:	shl    rax,0x38
  40e33c:	or     rax,rcx
  40e33f:	movabs rcx,0x746865724e616d65
  40e349:	cmp    rax,rcx
  40e34c:	jne    40edd0 <main@@Base+0xa480>
  40e352:	lea    rax,[rsi+0x10]
  40e356:	mov    rdx,rbx
  40e359:	sub    rdx,rax
  40e35c:	cmp    rdx,0x8
  40e360:	jb     40e511 <main@@Base+0x9bc1>
  40e366:	movbe  rax,QWORD PTR [rax]
  40e36b:	jmp    40e57f <main@@Base+0x9c2f>
  40e370:	jne    40e5b0 <main@@Base+0x9c60>
  40e376:	lea    rcx,[rsi+0x10]
  40e37a:	mov    rax,rbx
  40e37d:	sub    rax,rcx
  40e380:	cmp    rax,0x8
  40e384:	jb     40edd0 <main@@Base+0xa480>
  40e38a:	cmp    rax,0x8
  40e38e:	jl     40edd0 <main@@Base+0xa480>
  40e394:	mov    al,0x38
  40e396:	bzhi   rax,QWORD PTR [rcx],rax
  40e39b:	movabs rdx,0x6d756e655f746e
  40e3a5:	add    rdx,0x3f7
  40e3ac:	cmp    rax,rdx
  40e3af:	jne    40edd0 <main@@Base+0xa480>
  40e3b5:	lea    rax,[rsi+0x18]
  40e3b9:	cmp    BYTE PTR [rsi+0x17],0x2e
  40e3bd:	cmovne rax,rcx
  40e3c1:	cmp    rax,rcx
  40e3c4:	je     40edd0 <main@@Base+0xa480>
  40e3ca:	mov    rdi,r13
  40e3cd:	mov    rsi,rax
  40e3d0:	mov    rdx,rbx
  40e3d3:	mov    rcx,r15
  40e3d6:	mov    r8,r14
  40e3d9:	mov    r9,r12
  40e3dc:	add    rsp,0x8
  40e3e0:	pop    rbx
  40e3e1:	pop    r12
  40e3e3:	pop    r13
  40e3e5:	pop    r14
  40e3e7:	pop    r15
  40e3e9:	pop    rbp
  40e3ea:	jmp    413d00 <main@@Base+0xf3b0>
  40e3ef:	lea    rdi,[rax-0x1]
  40e3f3:	cmp    rdi,0x6
  40e3f7:	ja     40edd0 <main@@Base+0xa480>
  40e3fd:	xor    edx,edx
  40e3ff:	lea    rbp,[rip+0x140d6]        # 4224dc <_IO_stdin_used@@Base+0x4dc>
  40e406:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  40e40b:	add    rdi,rbp
  40e40e:	jmp    rdi
  40e410:	movsx  rdx,BYTE PTR [rsi+0x16]
  40e415:	shl    rdx,0x8
  40e419:	movsx  rdi,BYTE PTR [rsi+0x15]
  40e41e:	shl    rdi,0x10
  40e422:	or     rdx,rdi
  40e425:	movsx  rdi,BYTE PTR [rsi+0x14]
  40e42a:	shl    rdi,0x18
  40e42e:	or     rdx,rdi
  40e431:	movsx  rdi,BYTE PTR [rsi+0x13]
  40e436:	shl    rdi,0x20
  40e43a:	or     rdx,rdi
  40e43d:	movsx  rdi,BYTE PTR [rsi+0x12]
  40e442:	shl    rdi,0x28
  40e446:	or     rdx,rdi
  40e449:	movsx  rdi,BYTE PTR [rsi+0x11]
  40e44e:	shl    rdi,0x30
  40e452:	or     rdx,rdi
  40e455:	movzx  edi,BYTE PTR [rcx]
  40e458:	shl    rdi,0x38
  40e45c:	or     rdi,rdx
  40e45f:	cmp    rax,0x2
  40e463:	jl     40edd0 <main@@Base+0xa480>
  40e469:	movabs rax,0xff00000000000000
  40e473:	and    rdi,rax
  40e476:	movabs rax,0x7200000000000000
  40e480:	cmp    rdi,rax
  40e483:	jne    40edd0 <main@@Base+0xa480>
  40e489:	lea    rax,[rsi+0x12]
  40e48d:	cmp    BYTE PTR [rsi+0x11],0x2e
  40e491:	cmovne rax,rcx
  40e495:	cmp    rax,rcx
  40e498:	je     40edd0 <main@@Base+0xa480>
  40e49e:	mov    rdi,r13
  40e4a1:	mov    rsi,rax
  40e4a4:	mov    rdx,rbx
  40e4a7:	mov    rcx,r15
  40e4aa:	mov    r8,r14
  40e4ad:	mov    r9,r12
  40e4b0:	add    rsp,0x8
  40e4b4:	pop    rbx
  40e4b5:	pop    r12
  40e4b7:	pop    r13
  40e4b9:	pop    r14
  40e4bb:	pop    r15
  40e4bd:	pop    rbp
  40e4be:	jmp    414150 <main@@Base+0xf800>
  40e4c3:	movabs rcx,0x78616d706c652e46
  40e4cd:	cmp    rax,rcx
  40e4d0:	je     40e75f <main@@Base+0x9e0f>
  40e4d6:	movabs rcx,0x78616d706c652e43
  40e4e0:	cmp    rax,rcx
  40e4e3:	jne    40edd0 <main@@Base+0xa480>
  40e4e9:	lea    rcx,[rsi+0x10]
  40e4ed:	mov    rax,rbx
  40e4f0:	sub    rax,rcx
  40e4f3:	cmp    rax,0x8
  40e4f7:	jb     40e924 <main@@Base+0x9fd4>
  40e4fd:	movbe  rdi,QWORD PTR [rcx]
  40e502:	cmp    rax,0x5
  40e506:	jge    40e99e <main@@Base+0xa04e>
  40e50c:	jmp    40edd0 <main@@Base+0xa480>
  40e511:	dec    rdx
  40e514:	cmp    rdx,0x6
  40e518:	ja     40edd0 <main@@Base+0xa480>
  40e51e:	xor    ecx,ecx
  40e520:	lea    rdi,[rip+0x13e49]        # 422370 <_IO_stdin_used@@Base+0x370>
  40e527:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40e52b:	add    rdx,rdi
  40e52e:	jmp    rdx
  40e530:	movsx  rcx,BYTE PTR [rsi+0x16]
  40e535:	shl    rcx,0x8
  40e539:	movsx  rdx,BYTE PTR [rsi+0x15]
  40e53e:	shl    rdx,0x10
  40e542:	or     rcx,rdx
  40e545:	movsx  rdx,BYTE PTR [rsi+0x14]
  40e54a:	shl    rdx,0x18
  40e54e:	or     rcx,rdx
  40e551:	movsx  rdx,BYTE PTR [rsi+0x13]
  40e556:	shl    rdx,0x20
  40e55a:	or     rcx,rdx
  40e55d:	movsx  rdx,BYTE PTR [rsi+0x12]
  40e562:	shl    rdx,0x28
  40e566:	or     rcx,rdx
  40e569:	movsx  rdx,BYTE PTR [rsi+0x11]
  40e56e:	shl    rdx,0x30
  40e572:	or     rcx,rdx
  40e575:	movzx  eax,BYTE PTR [rax]
  40e578:	shl    rax,0x38
  40e57c:	or     rax,rcx
  40e57f:	movabs rcx,0x53706163652e4672
  40e589:	cmp    rax,rcx
  40e58c:	jne    40edd0 <main@@Base+0xa480>
  40e592:	lea    rax,[rsi+0x18]
  40e596:	mov    rdx,rbx
  40e599:	sub    rdx,rax
  40e59c:	cmp    rdx,0x8
  40e5a0:	jb     40e6b6 <main@@Base+0x9d66>
  40e5a6:	movbe  rax,QWORD PTR [rax]
  40e5ab:	jmp    40e724 <main@@Base+0x9dd4>
  40e5b0:	lea    rdx,[rcx+0x6]
  40e5b4:	cmp    rax,rdx
  40e5b7:	jae    40e637 <main@@Base+0x9ce7>
  40e5b9:	inc    rcx
  40e5bc:	cmp    rax,rcx
  40e5bf:	jne    40edd0 <main@@Base+0xa480>
  40e5c5:	lea    rcx,[rsi+0x10]
  40e5c9:	mov    rax,rbx
  40e5cc:	sub    rax,rcx
  40e5cf:	cmp    rax,0x8
  40e5d3:	jb     40edd0 <main@@Base+0xa480>
  40e5d9:	cmp    rax,0x8
  40e5dd:	jl     40edd0 <main@@Base+0xa480>
  40e5e3:	mov    al,0x38
  40e5e5:	bzhi   rax,QWORD PTR [rcx],rax
  40e5ea:	movabs rdx,0x6d756e655f746e
  40e5f4:	cmp    rax,rdx
  40e5f7:	jne    40edd0 <main@@Base+0xa480>
  40e5fd:	lea    rax,[rsi+0x18]
  40e601:	cmp    BYTE PTR [rsi+0x17],0x2e
  40e605:	cmovne rax,rcx
  40e609:	cmp    rax,rcx
  40e60c:	je     40edd0 <main@@Base+0xa480>
  40e612:	mov    rdi,r13
  40e615:	mov    rsi,rax
  40e618:	mov    rdx,rbx
  40e61b:	mov    rcx,r15
  40e61e:	mov    r8,r14
  40e621:	mov    r9,r12
  40e624:	add    rsp,0x8
  40e628:	pop    rbx
  40e629:	pop    r12
  40e62b:	pop    r13
  40e62d:	pop    r14
  40e62f:	pop    r15
  40e631:	pop    rbp
  40e632:	jmp    413e60 <main@@Base+0xf510>
  40e637:	jne    40edd0 <main@@Base+0xa480>
  40e63d:	lea    rcx,[rsi+0x10]
  40e641:	mov    rdi,rbx
  40e644:	sub    rdi,rcx
  40e647:	cmp    rdi,0x7
  40e64b:	jbe    40eacc <main@@Base+0xa17c>
  40e651:	movbe  rdx,QWORD PTR [rcx]
  40e656:	cmp    rdi,0x8
  40e65a:	jl     40eb3a <main@@Base+0xa1ea>
  40e660:	mov    rax,rdx
  40e663:	and    rax,0xffffffffffffff00
  40e669:	movabs rdi,0x65675f656e756d00
  40e673:	cmp    rax,rdi
  40e676:	jne    40eb3a <main@@Base+0xa1ea>
  40e67c:	lea    rax,[rsi+0x18]
  40e680:	cmp    BYTE PTR [rsi+0x17],0x2e
  40e684:	cmovne rax,rcx
  40e688:	cmp    rax,rcx
  40e68b:	je     40eb3a <main@@Base+0xa1ea>
  40e691:	mov    rdi,r13
  40e694:	mov    rsi,rax
  40e697:	mov    rdx,rbx
  40e69a:	mov    rcx,r15
  40e69d:	mov    r8,r14
  40e6a0:	mov    r9,r12
  40e6a3:	add    rsp,0x8
  40e6a7:	pop    rbx
  40e6a8:	pop    r12
  40e6aa:	pop    r13
  40e6ac:	pop    r14
  40e6ae:	pop    r15
  40e6b0:	pop    rbp
  40e6b1:	jmp    414000 <main@@Base+0xf6b0>
  40e6b6:	dec    rdx
  40e6b9:	cmp    rdx,0x6
  40e6bd:	ja     40edd0 <main@@Base+0xa480>
  40e6c3:	xor    ecx,ecx
  40e6c5:	lea    rdi,[rip+0x13cc0]        # 42238c <_IO_stdin_used@@Base+0x38c>
  40e6cc:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40e6d0:	add    rdx,rdi
  40e6d3:	jmp    rdx
  40e6d5:	movsx  rcx,BYTE PTR [rsi+0x1e]
  40e6da:	shl    rcx,0x8
  40e6de:	movsx  rdx,BYTE PTR [rsi+0x1d]
  40e6e3:	shl    rdx,0x10
  40e6e7:	or     rcx,rdx
  40e6ea:	movsx  rdx,BYTE PTR [rsi+0x1c]
  40e6ef:	shl    rdx,0x18
  40e6f3:	or     rcx,rdx
  40e6f6:	movsx  rdx,BYTE PTR [rsi+0x1b]
  40e6fb:	shl    rdx,0x20
  40e6ff:	or     rcx,rdx
  40e702:	movsx  rdx,BYTE PTR [rsi+0x1a]
  40e707:	shl    rdx,0x28
  40e70b:	or     rcx,rdx
  40e70e:	movsx  rdx,BYTE PTR [rsi+0x19]
  40e713:	shl    rdx,0x30
  40e717:	or     rcx,rdx
  40e71a:	movzx  eax,BYTE PTR [rax]
  40e71d:	shl    rax,0x38
  40e721:	or     rax,rcx
  40e724:	movabs rcx,0x6f6d496e636c7564
  40e72e:	cmp    rax,rcx
  40e731:	jne    40edd0 <main@@Base+0xa480>
  40e737:	lea    rax,[rsi+0x20]
  40e73b:	mov    rcx,rbx
  40e73e:	sub    rcx,rax
  40e741:	cmp    rcx,0x8
  40e745:	jb     40e85b <main@@Base+0x9f0b>
  40e74b:	movbe  rdi,QWORD PTR [rax]
  40e750:	cmp    rcx,0x2
  40e754:	jge    40e8d5 <main@@Base+0x9f85>
  40e75a:	jmp    40edd0 <main@@Base+0xa480>
  40e75f:	lea    rcx,[rsi+0x10]
  40e763:	mov    rax,rbx
  40e766:	sub    rax,rcx
  40e769:	cmp    rax,0x8
  40e76d:	jb     40e9f8 <main@@Base+0xa0a8>
  40e773:	movbe  rdi,QWORD PTR [rcx]
  40e778:	cmp    rax,0x3
  40e77c:	jge    40ea72 <main@@Base+0xa122>
  40e782:	jmp    40edd0 <main@@Base+0xa480>
  40e787:	lea    rdi,[rax-0x1]
  40e78b:	cmp    rdi,0x6
  40e78f:	ja     40edd0 <main@@Base+0xa480>
  40e795:	xor    edx,edx
  40e797:	lea    rbp,[rip+0x13d06]        # 4224a4 <_IO_stdin_used@@Base+0x4a4>
  40e79e:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  40e7a3:	add    rdi,rbp
  40e7a6:	jmp    rdi
  40e7a8:	movsx  rdx,BYTE PTR [rsi+0x16]
  40e7ad:	shl    rdx,0x8
  40e7b1:	movsx  rdi,BYTE PTR [rsi+0x15]
  40e7b6:	shl    rdi,0x10
  40e7ba:	or     rdx,rdi
  40e7bd:	movsx  rdi,BYTE PTR [rsi+0x14]
  40e7c2:	shl    rdi,0x18
  40e7c6:	or     rdx,rdi
  40e7c9:	movsx  rdi,BYTE PTR [rsi+0x13]
  40e7ce:	shl    rdi,0x20
  40e7d2:	or     rdx,rdi
  40e7d5:	movsx  rdi,BYTE PTR [rsi+0x12]
  40e7da:	shl    rdi,0x28
  40e7de:	or     rdx,rdi
  40e7e1:	movsx  rdi,BYTE PTR [rsi+0x11]
  40e7e6:	shl    rdi,0x30
  40e7ea:	or     rdx,rdi
  40e7ed:	movzx  edi,BYTE PTR [rcx]
  40e7f0:	shl    rdi,0x38
  40e7f4:	or     rdi,rdx
  40e7f7:	cmp    rax,0x3
  40e7fb:	jl     40edd0 <main@@Base+0xa480>
  40e801:	movabs rax,0xffff000000000000
  40e80b:	and    rdi,rax
  40e80e:	movabs rax,0x6e79000000000000
  40e818:	cmp    rdi,rax
  40e81b:	jne    40edd0 <main@@Base+0xa480>
  40e821:	lea    rax,[rsi+0x13]
  40e825:	cmp    BYTE PTR [rsi+0x12],0x2e
  40e829:	cmovne rax,rcx
  40e82d:	cmp    rax,rcx
  40e830:	je     40edd0 <main@@Base+0xa480>
  40e836:	mov    rdi,r13
  40e839:	mov    rsi,rax
  40e83c:	mov    rdx,rbx
  40e83f:	mov    rcx,r15
  40e842:	mov    r8,r14
  40e845:	mov    r9,r12
  40e848:	add    rsp,0x8
  40e84c:	pop    rbx
  40e84d:	pop    r12
  40e84f:	pop    r13
  40e851:	pop    r14
  40e853:	pop    r15
  40e855:	pop    rbp
  40e856:	jmp    4129e0 <main@@Base+0xe090>
  40e85b:	lea    rdi,[rcx-0x1]
  40e85f:	cmp    rdi,0x6
  40e863:	ja     40edd0 <main@@Base+0xa480>
  40e869:	xor    edx,edx
  40e86b:	lea    rbp,[rip+0x13b36]        # 4223a8 <_IO_stdin_used@@Base+0x3a8>
  40e872:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  40e877:	add    rdi,rbp
  40e87a:	jmp    rdi
  40e87c:	movsx  rdx,BYTE PTR [rsi+0x26]
  40e881:	shl    rdx,0x8
  40e885:	movsx  rdi,BYTE PTR [rsi+0x25]
  40e88a:	shl    rdi,0x10
  40e88e:	or     rdx,rdi
  40e891:	movsx  rdi,BYTE PTR [rsi+0x24]
  40e896:	shl    rdi,0x18
  40e89a:	or     rdx,rdi
  40e89d:	movsx  rdi,BYTE PTR [rsi+0x23]
  40e8a2:	shl    rdi,0x20
  40e8a6:	or     rdx,rdi
  40e8a9:	movsx  rdi,BYTE PTR [rsi+0x22]
  40e8ae:	shl    rdi,0x28
  40e8b2:	or     rdx,rdi
  40e8b5:	movsx  rdi,BYTE PTR [rsi+0x21]
  40e8ba:	shl    rdi,0x30
  40e8be:	or     rdx,rdi
  40e8c1:	movzx  edi,BYTE PTR [rax]
  40e8c4:	shl    rdi,0x38
  40e8c8:	or     rdi,rdx
  40e8cb:	cmp    rcx,0x2
  40e8cf:	jl     40edd0 <main@@Base+0xa480>
  40e8d5:	movabs rcx,0xff00000000000000
  40e8df:	and    rdi,rcx
  40e8e2:	movabs rcx,0x6500000000000000
  40e8ec:	cmp    rdi,rcx
  40e8ef:	jne    40edd0 <main@@Base+0xa480>
  40e8f5:	lea    r8,[rsi+0x22]
  40e8f9:	cmp    BYTE PTR [rsi+0x21],0x2e
  40e8fd:	cmovne r8,rax
  40e901:	cmp    r8,rax
  40e904:	je     40edd0 <main@@Base+0xa480>
  40e90a:	mov    rcx,rbx
  40e90d:	sub    rcx,r8
  40e910:	cmp    rcx,0x8
  40e914:	jb     40eb75 <main@@Base+0xa225>
  40e91a:	movbe  rbp,QWORD PTR [r8]
  40e91f:	jmp    40ebe4 <main@@Base+0xa294>
  40e924:	lea    rdi,[rax-0x1]
  40e928:	cmp    rdi,0x6
  40e92c:	ja     40edd0 <main@@Base+0xa480>
  40e932:	xor    edx,edx
  40e934:	lea    rbp,[rip+0x13b4d]        # 422488 <_IO_stdin_used@@Base+0x488>
  40e93b:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  40e940:	add    rdi,rbp
  40e943:	jmp    rdi
  40e945:	movsx  rdx,BYTE PTR [rsi+0x16]
  40e94a:	shl    rdx,0x8
  40e94e:	movsx  rdi,BYTE PTR [rsi+0x15]
  40e953:	shl    rdi,0x10
  40e957:	or     rdx,rdi
  40e95a:	movsx  rdi,BYTE PTR [rsi+0x14]
  40e95f:	shl    rdi,0x18
  40e963:	or     rdx,rdi
  40e966:	movsx  rdi,BYTE PTR [rsi+0x13]
  40e96b:	shl    rdi,0x20
  40e96f:	or     rdx,rdi
  40e972:	movsx  rdi,BYTE PTR [rsi+0x12]
  40e977:	shl    rdi,0x28
  40e97b:	or     rdx,rdi
  40e97e:	movsx  rdi,BYTE PTR [rsi+0x11]
  40e983:	shl    rdi,0x30
  40e987:	or     rdx,rdi
  40e98a:	movzx  edi,BYTE PTR [rcx]
  40e98d:	shl    rdi,0x38
  40e991:	or     rdi,rdx
  40e994:	cmp    rax,0x5
  40e998:	jl     40edd0 <main@@Base+0xa480>
  40e99e:	movabs rax,0xffffffff00000000
  40e9a8:	and    rdi,rax
  40e9ab:	movabs rax,0x6f6c6f7200000000
  40e9b5:	cmp    rdi,rax
  40e9b8:	jne    40edd0 <main@@Base+0xa480>
  40e9be:	lea    rax,[rsi+0x15]
  40e9c2:	cmp    BYTE PTR [rsi+0x14],0x2e
  40e9c6:	cmovne rax,rcx
  40e9ca:	cmp    rax,rcx
  40e9cd:	je     40edd0 <main@@Base+0xa480>
  40e9d3:	mov    rdi,r13
  40e9d6:	mov    rsi,rax
  40e9d9:	mov    rdx,rbx
  40e9dc:	mov    rcx,r15
  40e9df:	mov    r8,r14
  40e9e2:	mov    r9,r12
  40e9e5:	add    rsp,0x8
  40e9e9:	pop    rbx
  40e9ea:	pop    r12
  40e9ec:	pop    r13
  40e9ee:	pop    r14
  40e9f0:	pop    r15
  40e9f2:	pop    rbp
  40e9f3:	jmp    40dab0 <main@@Base+0x9160>
  40e9f8:	lea    rdi,[rax-0x1]
  40e9fc:	cmp    rdi,0x6
  40ea00:	ja     40edd0 <main@@Base+0xa480>
  40ea06:	xor    edx,edx
  40ea08:	lea    rbp,[rip+0x13a5d]        # 42246c <_IO_stdin_used@@Base+0x46c>
  40ea0f:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  40ea14:	add    rdi,rbp
  40ea17:	jmp    rdi
  40ea19:	movsx  rdx,BYTE PTR [rsi+0x16]
  40ea1e:	shl    rdx,0x8
  40ea22:	movsx  rdi,BYTE PTR [rsi+0x15]
  40ea27:	shl    rdi,0x10
  40ea2b:	or     rdx,rdi
  40ea2e:	movsx  rdi,BYTE PTR [rsi+0x14]
  40ea33:	shl    rdi,0x18
  40ea37:	or     rdx,rdi
  40ea3a:	movsx  rdi,BYTE PTR [rsi+0x13]
  40ea3f:	shl    rdi,0x20
  40ea43:	or     rdx,rdi
  40ea46:	movsx  rdi,BYTE PTR [rsi+0x12]
  40ea4b:	shl    rdi,0x28
  40ea4f:	or     rdx,rdi
  40ea52:	movsx  rdi,BYTE PTR [rsi+0x11]
  40ea57:	shl    rdi,0x30
  40ea5b:	or     rdx,rdi
  40ea5e:	movzx  edi,BYTE PTR [rcx]
  40ea61:	shl    rdi,0x38
  40ea65:	or     rdi,rdx
  40ea68:	cmp    rax,0x3
  40ea6c:	jl     40edd0 <main@@Base+0xa480>
  40ea72:	movabs rax,0xffff000000000000
  40ea7c:	and    rdi,rax
  40ea7f:	movabs rax,0x6f6f000000000000
  40ea89:	cmp    rdi,rax
  40ea8c:	jne    40edd0 <main@@Base+0xa480>
  40ea92:	lea    rax,[rsi+0x13]
  40ea96:	cmp    BYTE PTR [rsi+0x12],0x2e
  40ea9a:	cmovne rax,rcx
  40ea9e:	cmp    rax,rcx
  40eaa1:	je     40edd0 <main@@Base+0xa480>
  40eaa7:	mov    rdi,r13
  40eaaa:	mov    rsi,rax
  40eaad:	mov    rdx,rbx
  40eab0:	mov    rcx,r15
  40eab3:	mov    r8,r14
  40eab6:	mov    r9,r12
  40eab9:	add    rsp,0x8
  40eabd:	pop    rbx
  40eabe:	pop    r12
  40eac0:	pop    r13
  40eac2:	pop    r14
  40eac4:	pop    r15
  40eac6:	pop    rbp
  40eac7:	jmp    413ac0 <main@@Base+0xf170>
  40eacc:	dec    rdi
  40eacf:	cmp    rdi,0x6
  40ead3:	ja     40edd0 <main@@Base+0xa480>
  40ead9:	xor    eax,eax
  40eadb:	lea    rdx,[rip+0x13936]        # 422418 <_IO_stdin_used@@Base+0x418>
  40eae2:	movsxd rdi,DWORD PTR [rdx+rdi*4]
  40eae6:	add    rdi,rdx
  40eae9:	jmp    rdi
  40eaeb:	movsx  rax,BYTE PTR [rsi+0x16]
  40eaf0:	shl    rax,0x8
  40eaf4:	movsx  rdx,BYTE PTR [rsi+0x15]
  40eaf9:	shl    rdx,0x10
  40eafd:	or     rax,rdx
  40eb00:	movsx  rdx,BYTE PTR [rsi+0x14]
  40eb05:	shl    rdx,0x18
  40eb09:	or     rax,rdx
  40eb0c:	movsx  rdx,BYTE PTR [rsi+0x13]
  40eb11:	shl    rdx,0x20
  40eb15:	or     rax,rdx
  40eb18:	movsx  rdx,BYTE PTR [rsi+0x12]
  40eb1d:	shl    rdx,0x28
  40eb21:	or     rax,rdx
  40eb24:	movsx  rdx,BYTE PTR [rsi+0x11]
  40eb29:	shl    rdx,0x30
  40eb2d:	or     rax,rdx
  40eb30:	movzx  edx,BYTE PTR [rcx]
  40eb33:	shl    rdx,0x38
  40eb37:	or     rdx,rax
  40eb3a:	movabs rax,0x6f74656d70747965
  40eb44:	cmp    rdx,rax
  40eb47:	jne    40edd0 <main@@Base+0xa480>
  40eb4d:	lea    rax,[rsi+0x18]
  40eb51:	mov    rcx,rbx
  40eb54:	sub    rcx,rax
  40eb57:	cmp    rcx,0x8
  40eb5b:	jb     40ec55 <main@@Base+0xa305>
  40eb61:	movbe  rdi,QWORD PTR [rax]
  40eb66:	cmp    rcx,0x4
  40eb6a:	jge    40eccf <main@@Base+0xa37f>
  40eb70:	jmp    40edd0 <main@@Base+0xa480>
  40eb75:	dec    rcx
  40eb78:	cmp    rcx,0x6
  40eb7c:	ja     40edcd <main@@Base+0xa47d>
  40eb82:	xor    eax,eax
  40eb84:	lea    rdx,[rip+0x13839]        # 4223c4 <_IO_stdin_used@@Base+0x3c4>
  40eb8b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40eb8f:	add    rcx,rdx
  40eb92:	jmp    rcx
  40eb94:	movsx  rax,BYTE PTR [r8+0x6]
  40eb99:	shl    rax,0x8
  40eb9d:	movsx  rcx,BYTE PTR [r8+0x5]
  40eba2:	shl    rcx,0x10
  40eba6:	or     rax,rcx
  40eba9:	movsx  rcx,BYTE PTR [r8+0x4]
  40ebae:	shl    rcx,0x18
  40ebb2:	or     rax,rcx
  40ebb5:	movsx  rcx,BYTE PTR [r8+0x3]
  40ebba:	shl    rcx,0x20
  40ebbe:	or     rax,rcx
  40ebc1:	movsx  rcx,BYTE PTR [r8+0x2]
  40ebc6:	shl    rcx,0x28
  40ebca:	or     rax,rcx
  40ebcd:	movsx  rcx,BYTE PTR [r8+0x1]
  40ebd2:	shl    rcx,0x30
  40ebd6:	or     rax,rcx
  40ebd9:	movzx  ebp,BYTE PTR [r8]
  40ebdd:	shl    rbp,0x38
  40ebe1:	or     rbp,rax
  40ebe4:	mov    rax,rbp
  40ebe7:	shr    rax,0x28
  40ebeb:	cmp    rax,0x466f6f
  40ebf1:	jne    40ec23 <main@@Base+0xa2d3>
  40ebf3:	mov    rdi,r13
  40ebf6:	mov    rsi,r8
  40ebf9:	mov    rdx,rbx
  40ebfc:	mov    ecx,0x3
  40ec01:	mov    QWORD PTR [rsp],r8
  40ec05:	mov    r8,r12
  40ec08:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40ec0d:	mov    r8,QWORD PTR [rsp]
  40ec11:	cmp    rax,r8
  40ec14:	je     40ec23 <main@@Base+0xa2d3>
  40ec16:	mov    rsi,rax
  40ec19:	mov    ecx,0x11
  40ec1e:	jmp    40edc1 <main@@Base+0xa471>
  40ec23:	movabs rax,0x496e636c75646556
  40ec2d:	cmp    rbp,rax
  40ec30:	jne    40edcd <main@@Base+0xa47d>
  40ec36:	lea    rbp,[r8+0x8]
  40ec3a:	mov    rcx,rbx
  40ec3d:	sub    rcx,rbp
  40ec40:	cmp    rcx,0x8
  40ec44:	jb     40ed1f <main@@Base+0xa3cf>
  40ec4a:	movbe  rcx,QWORD PTR [rbp+0x0]
  40ec50:	jmp    40ed8e <main@@Base+0xa43e>
  40ec55:	lea    rdi,[rcx-0x1]
  40ec59:	cmp    rdi,0x6
  40ec5d:	ja     40edd0 <main@@Base+0xa480>
  40ec63:	xor    edx,edx
  40ec65:	lea    rbp,[rip+0x137c8]        # 422434 <_IO_stdin_used@@Base+0x434>
  40ec6c:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  40ec71:	add    rdi,rbp
  40ec74:	jmp    rdi
  40ec76:	movsx  rdx,BYTE PTR [rsi+0x1e]
  40ec7b:	shl    rdx,0x8
  40ec7f:	movsx  rdi,BYTE PTR [rsi+0x1d]
  40ec84:	shl    rdi,0x10
  40ec88:	or     rdx,rdi
  40ec8b:	movsx  rdi,BYTE PTR [rsi+0x1c]
  40ec90:	shl    rdi,0x18
  40ec94:	or     rdx,rdi
  40ec97:	movsx  rdi,BYTE PTR [rsi+0x1b]
  40ec9c:	shl    rdi,0x20
  40eca0:	or     rdx,rdi
  40eca3:	movsx  rdi,BYTE PTR [rsi+0x1a]
  40eca8:	shl    rdi,0x28
  40ecac:	or     rdx,rdi
  40ecaf:	movsx  rdi,BYTE PTR [rsi+0x19]
  40ecb4:	shl    rdi,0x30
  40ecb8:	or     rdx,rdi
  40ecbb:	movzx  edi,BYTE PTR [rax]
  40ecbe:	shl    rdi,0x38
  40ecc2:	or     rdi,rdx
  40ecc5:	cmp    rcx,0x4
  40ecc9:	jl     40edd0 <main@@Base+0xa480>
  40eccf:	movabs rcx,0xffffff0000000000
  40ecd9:	and    rdi,rcx
  40ecdc:	movabs rcx,0x6e756d0000000000
  40ece6:	cmp    rdi,rcx
  40ece9:	jne    40edd0 <main@@Base+0xa480>
  40ecef:	lea    rbp,[rsi+0x1c]
  40ecf3:	cmp    BYTE PTR [rsi+0x1b],0x2e
  40ecf7:	cmovne rbp,rax
  40ecfb:	cmp    rbp,rax
  40ecfe:	je     40edd0 <main@@Base+0xa480>
  40ed04:	mov    rcx,rbx
  40ed07:	sub    rcx,rbp
  40ed0a:	cmp    rcx,0x8
  40ed0e:	jb     40ede2 <main@@Base+0xa492>
  40ed14:	movbe  rcx,QWORD PTR [rbp+0x0]
  40ed1a:	jmp    40ee51 <main@@Base+0xa501>
  40ed1f:	dec    rcx
  40ed22:	cmp    rcx,0x6
  40ed26:	ja     40edcd <main@@Base+0xa47d>
  40ed2c:	xor    eax,eax
  40ed2e:	lea    rdx,[rip+0x136ab]        # 4223e0 <_IO_stdin_used@@Base+0x3e0>
  40ed35:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40ed39:	add    rcx,rdx
  40ed3c:	jmp    rcx
  40ed3e:	movsx  rax,BYTE PTR [r8+0xe]
  40ed43:	shl    rax,0x8
  40ed47:	movsx  rcx,BYTE PTR [r8+0xd]
  40ed4c:	shl    rcx,0x10
  40ed50:	or     rax,rcx
  40ed53:	movsx  rcx,BYTE PTR [r8+0xc]
  40ed58:	shl    rcx,0x18
  40ed5c:	or     rax,rcx
  40ed5f:	movsx  rcx,BYTE PTR [r8+0xb]
  40ed64:	shl    rcx,0x20
  40ed68:	or     rax,rcx
  40ed6b:	movsx  rcx,BYTE PTR [r8+0xa]
  40ed70:	shl    rcx,0x28
  40ed74:	or     rax,rcx
  40ed77:	movsx  rcx,BYTE PTR [r8+0x9]
  40ed7c:	shl    rcx,0x30
  40ed80:	or     rax,rcx
  40ed83:	movzx  ecx,BYTE PTR [rbp+0x0]
  40ed87:	shl    rcx,0x38
  40ed8b:	or     rcx,rax
  40ed8e:	shr    rcx,0x30
  40ed92:	cmp    rcx,0x616c
  40ed99:	jne    40edcd <main@@Base+0xa47d>
  40ed9b:	mov    rdi,r13
  40ed9e:	mov    rsi,rbp
  40eda1:	mov    rdx,rbx
  40eda4:	mov    ecx,0x2
  40eda9:	mov    rbx,r8
  40edac:	mov    r8,r12
  40edaf:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40edb4:	mov    rsi,rbx
  40edb7:	cmp    rax,rbp
  40edba:	je     40edd0 <main@@Base+0xa480>
  40edbc:	xor    ecx,ecx
  40edbe:	mov    rsi,rax
  40edc1:	mov    QWORD PTR [r14],rcx
  40edc4:	mov    DWORD PTR [r15],0x0
  40edcb:	jmp    40edd0 <main@@Base+0xa480>
  40edcd:	mov    rsi,r8
  40edd0:	mov    rax,rsi
  40edd3:	add    rsp,0x8
  40edd7:	pop    rbx
  40edd8:	pop    r12
  40edda:	pop    r13
  40eddc:	pop    r14
  40edde:	pop    r15
  40ede0:	pop    rbp
  40ede1:	ret    
  40ede2:	dec    rcx
  40ede5:	cmp    rcx,0x6
  40ede9:	ja     40ee93 <main@@Base+0xa543>
  40edef:	xor    eax,eax
  40edf1:	lea    rdx,[rip+0x13658]        # 422450 <_IO_stdin_used@@Base+0x450>
  40edf8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40edfc:	add    rcx,rdx
  40edff:	jmp    rcx
  40ee01:	movsx  rax,BYTE PTR [rbp+0x6]
  40ee06:	shl    rax,0x8
  40ee0a:	movsx  rcx,BYTE PTR [rbp+0x5]
  40ee0f:	shl    rcx,0x10
  40ee13:	or     rax,rcx
  40ee16:	movsx  rcx,BYTE PTR [rbp+0x4]
  40ee1b:	shl    rcx,0x18
  40ee1f:	or     rax,rcx
  40ee22:	movsx  rcx,BYTE PTR [rbp+0x3]
  40ee27:	shl    rcx,0x20
  40ee2b:	or     rax,rcx
  40ee2e:	movsx  rcx,BYTE PTR [rbp+0x2]
  40ee33:	shl    rcx,0x28
  40ee37:	or     rax,rcx
  40ee3a:	movsx  rcx,BYTE PTR [rbp+0x1]
  40ee3f:	shl    rcx,0x30
  40ee43:	or     rax,rcx
  40ee46:	movzx  ecx,BYTE PTR [rbp+0x0]
  40ee4a:	shl    rcx,0x38
  40ee4e:	or     rcx,rax
  40ee51:	shr    rcx,0x38
  40ee55:	cmp    rcx,0x78
  40ee59:	jne    40ee93 <main@@Base+0xa543>
  40ee5b:	mov    rdi,r13
  40ee5e:	mov    rsi,rbp
  40ee61:	mov    rdx,rbx
  40ee64:	mov    ecx,0x1
  40ee69:	mov    r8,r12
  40ee6c:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  40ee71:	mov    rsi,rbp
  40ee74:	cmp    rax,rbp
  40ee77:	je     40edd0 <main@@Base+0xa480>
  40ee7d:	mov    QWORD PTR [r14],0x0
  40ee84:	mov    DWORD PTR [r15],0x0
  40ee8b:	mov    rsi,rax
  40ee8e:	jmp    40edd0 <main@@Base+0xa480>
  40ee93:	mov    rsi,rbp
  40ee96:	jmp    40edd0 <main@@Base+0xa480>
  40ee9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40eea0:	push   rbp
  40eea1:	push   r15
  40eea3:	push   r14
  40eea5:	push   r13
  40eea7:	push   r12
  40eea9:	push   rbx
  40eeaa:	sub    rsp,0x38
  40eeae:	mov    r15,r8
  40eeb1:	mov    rbp,rcx
  40eeb4:	mov    r12,rdx
  40eeb7:	mov    rbx,rsi
  40eeba:	mov    r14,rdi
  40eebd:	mov    BYTE PTR [r8],0x0
  40eec1:	cmp    rsi,rdx
  40eec4:	je     40eedb <main@@Base+0xa58b>
  40eec6:	mov    al,BYTE PTR [rbx]
  40eec8:	cmp    al,0x2e
  40eeca:	je     40eeec <main@@Base+0xa59c>
  40eecc:	cmp    al,0x22
  40eece:	jne    40ef0b <main@@Base+0xa5bb>
  40eed0:	inc    rbx
  40eed3:	mov    DWORD PTR [r14+0x14],0x0
  40eedb:	cmp    DWORD PTR [r14+0x14],0x0
  40eee0:	je     40ef1a <main@@Base+0xa5ca>
  40eee2:	cmp    rbx,r12
  40eee5:	jne    40ef5a <main@@Base+0xa60a>
  40eee7:	jmp    40f06c <main@@Base+0xa71c>
  40eeec:	mov    rdi,r14
  40eeef:	mov    rsi,rbx
  40eef2:	mov    rdx,r12
  40eef5:	mov    ecx,0x5
  40eefa:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40eeff:	mov    rbx,rax
  40ef02:	cmp    DWORD PTR [r14+0x14],0x0
  40ef07:	jne    40eee2 <main@@Base+0xa592>
  40ef09:	jmp    40ef1a <main@@Base+0xa5ca>
  40ef0b:	mov    DWORD PTR [r14+0x14],0x1
  40ef13:	cmp    DWORD PTR [r14+0x14],0x0
  40ef18:	jne    40eee2 <main@@Base+0xa592>
  40ef1a:	mov    rax,r12
  40ef1d:	sub    rax,rbx
  40ef20:	cmp    rax,0x2
  40ef24:	jl     40ef40 <main@@Base+0xa5f0>
  40ef26:	cmp    BYTE PTR [rbx],0x20
  40ef29:	jg     40eee2 <main@@Base+0xa592>
  40ef2b:	jne    40ef40 <main@@Base+0xa5f0>
  40ef2d:	cmp    BYTE PTR [rbx+0x1],0x20
  40ef31:	jle    40ef40 <main@@Base+0xa5f0>
  40ef33:	inc    rbx
  40ef36:	cmp    rbx,r12
  40ef39:	jne    40ef5a <main@@Base+0xa60a>
  40ef3b:	jmp    40f06c <main@@Base+0xa71c>
  40ef40:	mov    rdi,r14
  40ef43:	mov    rsi,rbx
  40ef46:	mov    rdx,r12
  40ef49:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ef4e:	mov    rbx,rax
  40ef51:	cmp    rbx,r12
  40ef54:	je     40f06c <main@@Base+0xa71c>
  40ef5a:	lea    rax,[rbp+0x8]
  40ef5e:	xor    ecx,ecx
  40ef60:	mov    DWORD PTR [rsp+0xc],0x0
  40ef68:	mov    QWORD PTR [rsp+0x20],r15
  40ef6d:	mov    QWORD PTR [rsp+0x18],rbp
  40ef72:	mov    QWORD PTR [rsp+0x28],rax
  40ef77:	mov    DWORD PTR [rsp+0x8],ecx
  40ef7b:	mov    rbp,QWORD PTR [rbp+0x0]
  40ef7f:	mov    r15,rax
  40ef82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef8c:	nop    DWORD PTR [rax+0x0]
  40ef90:	mov    rdi,r14
  40ef93:	mov    rsi,rbx
  40ef96:	mov    rdx,r12
  40ef99:	lea    rcx,[rsp+0x14]
  40ef9e:	lea    r8,[rsp+0x30]
  40efa3:	lea    r9,[rsp+0x10]
  40efa8:	call   rbp
  40efaa:	cmp    rax,r12
  40efad:	je     40f06c <main@@Base+0xa71c>
  40efb3:	mov    r13,rax
  40efb6:	cmp    rax,rbx
  40efb9:	jne    40efd0 <main@@Base+0xa680>
  40efbb:	mov    rbp,QWORD PTR [r15]
  40efbe:	add    r15,0x8
  40efc2:	test   rbp,rbp
  40efc5:	jne    40ef90 <main@@Base+0xa640>
  40efc7:	jmp    40f071 <main@@Base+0xa721>
  40efcc:	nop    DWORD PTR [rax+0x0]
  40efd0:	mov    ebx,DWORD PTR [rsp+0xc]
  40efd4:	test   ebx,ebx
  40efd6:	je     40efe3 <main@@Base+0xa693>
  40efd8:	cmp    DWORD PTR [r14+0x14],0x0
  40efdd:	jne    40f099 <main@@Base+0xa749>
  40efe3:	mov    rax,QWORD PTR [rsp+0x30]
  40efe8:	cmp    DWORD PTR [rsp+0x14],0x0
  40efed:	je     40f011 <main@@Base+0xa6c1>
  40efef:	cmp    rax,0x81
  40eff5:	mov    r15,QWORD PTR [rsp+0x20]
  40effa:	mov    rbp,QWORD PTR [rsp+0x18]
  40efff:	jb     40f041 <main@@Base+0xa6f1>
  40f001:	mov    rdi,r14
  40f004:	mov    rsi,r13
  40f007:	mov    rdx,r12
  40f00a:	mov    ecx,0x8
  40f00f:	jmp    40f031 <main@@Base+0xa6e1>
  40f011:	cmp    rax,0x80
  40f017:	mov    r15,QWORD PTR [rsp+0x20]
  40f01c:	mov    rbp,QWORD PTR [rsp+0x18]
  40f021:	jb     40f044 <main@@Base+0xa6f4>
  40f023:	mov    rdi,r14
  40f026:	mov    rsi,r13
  40f029:	mov    rdx,r12
  40f02c:	mov    ecx,0x7
  40f031:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f036:	mov    ecx,DWORD PTR [rsp+0x8]
  40f03a:	cmp    rax,r12
  40f03d:	jne    40f04e <main@@Base+0xa6fe>
  40f03f:	jmp    40f06c <main@@Base+0xa71c>
  40f041:	neg    rax
  40f044:	mov    ecx,eax
  40f046:	mov    rax,r13
  40f049:	cmp    rax,r12
  40f04c:	je     40f06c <main@@Base+0xa71c>
  40f04e:	inc    ebx
  40f050:	mov    DWORD PTR [rsp+0xc],ebx
  40f054:	add    BYTE PTR [r15],cl
  40f057:	cmp    DWORD PTR [rsp+0x10],0x0
  40f05c:	mov    rbx,r13
  40f05f:	mov    rax,QWORD PTR [rsp+0x28]
  40f064:	jne    40ef77 <main@@Base+0xa627>
  40f06a:	jmp    40f087 <main@@Base+0xa737>
  40f06c:	mov    r13,r12
  40f06f:	jmp    40f087 <main@@Base+0xa737>
  40f071:	mov    rdi,r14
  40f074:	mov    rsi,rbx
  40f077:	mov    rdx,r12
  40f07a:	mov    ecx,0x17
  40f07f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f084:	mov    r13,rax
  40f087:	mov    rax,r13
  40f08a:	add    rsp,0x38
  40f08e:	pop    rbx
  40f08f:	pop    r12
  40f091:	pop    r13
  40f093:	pop    r14
  40f095:	pop    r15
  40f097:	pop    rbp
  40f098:	ret    
  40f099:	mov    rdi,r14
  40f09c:	mov    rsi,r13
  40f09f:	mov    rdx,r12
  40f0a2:	mov    ecx,0xe
  40f0a7:	jmp    40f07f <main@@Base+0xa72f>
  40f0a9:	nop    DWORD PTR [rax+0x0]
  40f0b0:	push   rbp
  40f0b1:	push   r15
  40f0b3:	push   r14
  40f0b5:	push   r13
  40f0b7:	push   r12
  40f0b9:	push   rbx
  40f0ba:	sub    rsp,0x38
  40f0be:	mov    r15,r8
  40f0c1:	mov    rbp,rcx
  40f0c4:	mov    r12,rdx
  40f0c7:	mov    rbx,rsi
  40f0ca:	mov    r14,rdi
  40f0cd:	mov    BYTE PTR [r8],0x0
  40f0d1:	cmp    rsi,rdx
  40f0d4:	je     40f0eb <main@@Base+0xa79b>
  40f0d6:	mov    al,BYTE PTR [rbx]
  40f0d8:	cmp    al,0x2e
  40f0da:	je     40f0fc <main@@Base+0xa7ac>
  40f0dc:	cmp    al,0x22
  40f0de:	jne    40f11b <main@@Base+0xa7cb>
  40f0e0:	inc    rbx
  40f0e3:	mov    DWORD PTR [r14+0x14],0x0
  40f0eb:	cmp    DWORD PTR [r14+0x14],0x0
  40f0f0:	je     40f12a <main@@Base+0xa7da>
  40f0f2:	cmp    rbx,r12
  40f0f5:	jne    40f16a <main@@Base+0xa81a>
  40f0f7:	jmp    40f282 <main@@Base+0xa932>
  40f0fc:	mov    rdi,r14
  40f0ff:	mov    rsi,rbx
  40f102:	mov    rdx,r12
  40f105:	mov    ecx,0x5
  40f10a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f10f:	mov    rbx,rax
  40f112:	cmp    DWORD PTR [r14+0x14],0x0
  40f117:	jne    40f0f2 <main@@Base+0xa7a2>
  40f119:	jmp    40f12a <main@@Base+0xa7da>
  40f11b:	mov    DWORD PTR [r14+0x14],0x1
  40f123:	cmp    DWORD PTR [r14+0x14],0x0
  40f128:	jne    40f0f2 <main@@Base+0xa7a2>
  40f12a:	mov    rax,r12
  40f12d:	sub    rax,rbx
  40f130:	cmp    rax,0x2
  40f134:	jl     40f150 <main@@Base+0xa800>
  40f136:	cmp    BYTE PTR [rbx],0x20
  40f139:	jg     40f0f2 <main@@Base+0xa7a2>
  40f13b:	jne    40f150 <main@@Base+0xa800>
  40f13d:	cmp    BYTE PTR [rbx+0x1],0x20
  40f141:	jle    40f150 <main@@Base+0xa800>
  40f143:	inc    rbx
  40f146:	cmp    rbx,r12
  40f149:	jne    40f16a <main@@Base+0xa81a>
  40f14b:	jmp    40f282 <main@@Base+0xa932>
  40f150:	mov    rdi,r14
  40f153:	mov    rsi,rbx
  40f156:	mov    rdx,r12
  40f159:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f15e:	mov    rbx,rax
  40f161:	cmp    rbx,r12
  40f164:	je     40f282 <main@@Base+0xa932>
  40f16a:	lea    rax,[rbp+0x8]
  40f16e:	mov    DWORD PTR [rsp+0x8],0x0
  40f176:	mov    DWORD PTR [rsp+0xc],0x0
  40f17e:	mov    QWORD PTR [rsp+0x20],r15
  40f183:	mov    QWORD PTR [rsp+0x18],rbp
  40f188:	mov    QWORD PTR [rsp+0x28],rax
  40f18d:	mov    rbp,QWORD PTR [rbp+0x0]
  40f191:	mov    r15,rax
  40f194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f19e:	xchg   ax,ax
  40f1a0:	mov    rdi,r14
  40f1a3:	mov    rsi,rbx
  40f1a6:	mov    rdx,r12
  40f1a9:	lea    rcx,[rsp+0x14]
  40f1ae:	lea    r8,[rsp+0x30]
  40f1b3:	lea    r9,[rsp+0x10]
  40f1b8:	call   rbp
  40f1ba:	cmp    rax,r12
  40f1bd:	je     40f282 <main@@Base+0xa932>
  40f1c3:	mov    r13,rax
  40f1c6:	cmp    rax,rbx
  40f1c9:	jne    40f1e0 <main@@Base+0xa890>
  40f1cb:	mov    rbp,QWORD PTR [r15]
  40f1ce:	add    r15,0x8
  40f1d2:	test   rbp,rbp
  40f1d5:	jne    40f1a0 <main@@Base+0xa850>
  40f1d7:	jmp    40f287 <main@@Base+0xa937>
  40f1dc:	nop    DWORD PTR [rax+0x0]
  40f1e0:	mov    ebx,DWORD PTR [rsp+0xc]
  40f1e4:	test   ebx,ebx
  40f1e6:	je     40f1f3 <main@@Base+0xa8a3>
  40f1e8:	cmp    DWORD PTR [r14+0x14],0x0
  40f1ed:	jne    40f2af <main@@Base+0xa95f>
  40f1f3:	cmp    DWORD PTR [rsp+0x14],0x0
  40f1f8:	je     40f21e <main@@Base+0xa8ce>
  40f1fa:	mov    rdi,r14
  40f1fd:	mov    rsi,r13
  40f200:	mov    rdx,r12
  40f203:	mov    ecx,0x8
  40f208:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f20d:	mov    r15,QWORD PTR [rsp+0x20]
  40f212:	mov    rbp,QWORD PTR [rsp+0x18]
  40f217:	cmp    rax,r12
  40f21a:	jne    40f260 <main@@Base+0xa910>
  40f21c:	jmp    40f282 <main@@Base+0xa932>
  40f21e:	mov    rax,QWORD PTR [rsp+0x30]
  40f223:	cmp    rax,0x100
  40f229:	mov    r15,QWORD PTR [rsp+0x20]
  40f22e:	mov    rbp,QWORD PTR [rsp+0x18]
  40f233:	jb     40f24f <main@@Base+0xa8ff>
  40f235:	mov    rdi,r14
  40f238:	mov    rsi,r13
  40f23b:	mov    rdx,r12
  40f23e:	mov    ecx,0x7
  40f243:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f248:	cmp    rax,r12
  40f24b:	jne    40f260 <main@@Base+0xa910>
  40f24d:	jmp    40f282 <main@@Base+0xa932>
  40f24f:	mov    DWORD PTR [rsp+0x8],eax
  40f253:	mov    rax,r13
  40f256:	cmp    rax,r12
  40f259:	je     40f282 <main@@Base+0xa932>
  40f25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f260:	inc    ebx
  40f262:	mov    DWORD PTR [rsp+0xc],ebx
  40f266:	mov    eax,DWORD PTR [rsp+0x8]
  40f26a:	add    BYTE PTR [r15],al
  40f26d:	cmp    DWORD PTR [rsp+0x10],0x0
  40f272:	mov    rbx,r13
  40f275:	mov    rax,QWORD PTR [rsp+0x28]
  40f27a:	jne    40f18d <main@@Base+0xa83d>
  40f280:	jmp    40f29d <main@@Base+0xa94d>
  40f282:	mov    r13,r12
  40f285:	jmp    40f29d <main@@Base+0xa94d>
  40f287:	mov    rdi,r14
  40f28a:	mov    rsi,rbx
  40f28d:	mov    rdx,r12
  40f290:	mov    ecx,0x17
  40f295:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f29a:	mov    r13,rax
  40f29d:	mov    rax,r13
  40f2a0:	add    rsp,0x38
  40f2a4:	pop    rbx
  40f2a5:	pop    r12
  40f2a7:	pop    r13
  40f2a9:	pop    r14
  40f2ab:	pop    r15
  40f2ad:	pop    rbp
  40f2ae:	ret    
  40f2af:	mov    rdi,r14
  40f2b2:	mov    rsi,r13
  40f2b5:	mov    rdx,r12
  40f2b8:	mov    ecx,0xe
  40f2bd:	jmp    40f295 <main@@Base+0xa945>
  40f2bf:	nop
  40f2c0:	push   rbp
  40f2c1:	push   r15
  40f2c3:	push   r14
  40f2c5:	push   r13
  40f2c7:	push   r12
  40f2c9:	push   rbx
  40f2ca:	sub    rsp,0x38
  40f2ce:	mov    r15,r8
  40f2d1:	mov    rbp,rcx
  40f2d4:	mov    r12,rdx
  40f2d7:	mov    rbx,rsi
  40f2da:	mov    r14,rdi
  40f2dd:	mov    WORD PTR [r8],0x0
  40f2e3:	cmp    rsi,rdx
  40f2e6:	je     40f2fd <main@@Base+0xa9ad>
  40f2e8:	mov    al,BYTE PTR [rbx]
  40f2ea:	cmp    al,0x2e
  40f2ec:	je     40f30e <main@@Base+0xa9be>
  40f2ee:	cmp    al,0x22
  40f2f0:	jne    40f32d <main@@Base+0xa9dd>
  40f2f2:	inc    rbx
  40f2f5:	mov    DWORD PTR [r14+0x14],0x0
  40f2fd:	cmp    DWORD PTR [r14+0x14],0x0
  40f302:	je     40f33c <main@@Base+0xa9ec>
  40f304:	cmp    rbx,r12
  40f307:	jne    40f37c <main@@Base+0xaa2c>
  40f309:	jmp    40f48d <main@@Base+0xab3d>
  40f30e:	mov    rdi,r14
  40f311:	mov    rsi,rbx
  40f314:	mov    rdx,r12
  40f317:	mov    ecx,0x5
  40f31c:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f321:	mov    rbx,rax
  40f324:	cmp    DWORD PTR [r14+0x14],0x0
  40f329:	jne    40f304 <main@@Base+0xa9b4>
  40f32b:	jmp    40f33c <main@@Base+0xa9ec>
  40f32d:	mov    DWORD PTR [r14+0x14],0x1
  40f335:	cmp    DWORD PTR [r14+0x14],0x0
  40f33a:	jne    40f304 <main@@Base+0xa9b4>
  40f33c:	mov    rax,r12
  40f33f:	sub    rax,rbx
  40f342:	cmp    rax,0x2
  40f346:	jl     40f362 <main@@Base+0xaa12>
  40f348:	cmp    BYTE PTR [rbx],0x20
  40f34b:	jg     40f304 <main@@Base+0xa9b4>
  40f34d:	jne    40f362 <main@@Base+0xaa12>
  40f34f:	cmp    BYTE PTR [rbx+0x1],0x20
  40f353:	jle    40f362 <main@@Base+0xaa12>
  40f355:	inc    rbx
  40f358:	cmp    rbx,r12
  40f35b:	jne    40f37c <main@@Base+0xaa2c>
  40f35d:	jmp    40f48d <main@@Base+0xab3d>
  40f362:	mov    rdi,r14
  40f365:	mov    rsi,rbx
  40f368:	mov    rdx,r12
  40f36b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f370:	mov    rbx,rax
  40f373:	cmp    rbx,r12
  40f376:	je     40f48d <main@@Base+0xab3d>
  40f37c:	lea    rax,[rbp+0x8]
  40f380:	xor    ecx,ecx
  40f382:	mov    DWORD PTR [rsp+0xc],0x0
  40f38a:	mov    QWORD PTR [rsp+0x20],r15
  40f38f:	mov    QWORD PTR [rsp+0x18],rbp
  40f394:	mov    QWORD PTR [rsp+0x28],rax
  40f399:	mov    DWORD PTR [rsp+0x8],ecx
  40f39d:	mov    rbp,QWORD PTR [rbp+0x0]
  40f3a1:	mov    r15,rax
  40f3a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f3ae:	xchg   ax,ax
  40f3b0:	mov    rdi,r14
  40f3b3:	mov    rsi,rbx
  40f3b6:	mov    rdx,r12
  40f3b9:	lea    rcx,[rsp+0x14]
  40f3be:	lea    r8,[rsp+0x30]
  40f3c3:	lea    r9,[rsp+0x10]
  40f3c8:	call   rbp
  40f3ca:	cmp    rax,r12
  40f3cd:	je     40f48d <main@@Base+0xab3d>
  40f3d3:	mov    r13,rax
  40f3d6:	cmp    rax,rbx
  40f3d9:	jne    40f3f0 <main@@Base+0xaaa0>
  40f3db:	mov    rbp,QWORD PTR [r15]
  40f3de:	add    r15,0x8
  40f3e2:	test   rbp,rbp
  40f3e5:	jne    40f3b0 <main@@Base+0xaa60>
  40f3e7:	jmp    40f492 <main@@Base+0xab42>
  40f3ec:	nop    DWORD PTR [rax+0x0]
  40f3f0:	mov    ebx,DWORD PTR [rsp+0xc]
  40f3f4:	test   ebx,ebx
  40f3f6:	je     40f403 <main@@Base+0xaab3>
  40f3f8:	cmp    DWORD PTR [r14+0x14],0x0
  40f3fd:	jne    40f4ba <main@@Base+0xab6a>
  40f403:	mov    rax,QWORD PTR [rsp+0x30]
  40f408:	cmp    DWORD PTR [rsp+0x14],0x0
  40f40d:	je     40f431 <main@@Base+0xaae1>
  40f40f:	cmp    rax,0x8001
  40f415:	mov    r15,QWORD PTR [rsp+0x20]
  40f41a:	mov    rbp,QWORD PTR [rsp+0x18]
  40f41f:	jb     40f461 <main@@Base+0xab11>
  40f421:	mov    rdi,r14
  40f424:	mov    rsi,r13
  40f427:	mov    rdx,r12
  40f42a:	mov    ecx,0x8
  40f42f:	jmp    40f451 <main@@Base+0xab01>
  40f431:	cmp    rax,0x8000
  40f437:	mov    r15,QWORD PTR [rsp+0x20]
  40f43c:	mov    rbp,QWORD PTR [rsp+0x18]
  40f441:	jb     40f464 <main@@Base+0xab14>
  40f443:	mov    rdi,r14
  40f446:	mov    rsi,r13
  40f449:	mov    rdx,r12
  40f44c:	mov    ecx,0x7
  40f451:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f456:	mov    ecx,DWORD PTR [rsp+0x8]
  40f45a:	cmp    rax,r12
  40f45d:	jne    40f46e <main@@Base+0xab1e>
  40f45f:	jmp    40f48d <main@@Base+0xab3d>
  40f461:	neg    rax
  40f464:	mov    ecx,eax
  40f466:	mov    rax,r13
  40f469:	cmp    rax,r12
  40f46c:	je     40f48d <main@@Base+0xab3d>
  40f46e:	inc    ebx
  40f470:	mov    DWORD PTR [rsp+0xc],ebx
  40f474:	add    WORD PTR [r15],cx
  40f478:	cmp    DWORD PTR [rsp+0x10],0x0
  40f47d:	mov    rbx,r13
  40f480:	mov    rax,QWORD PTR [rsp+0x28]
  40f485:	jne    40f399 <main@@Base+0xaa49>
  40f48b:	jmp    40f4a8 <main@@Base+0xab58>
  40f48d:	mov    r13,r12
  40f490:	jmp    40f4a8 <main@@Base+0xab58>
  40f492:	mov    rdi,r14
  40f495:	mov    rsi,rbx
  40f498:	mov    rdx,r12
  40f49b:	mov    ecx,0x17
  40f4a0:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f4a5:	mov    r13,rax
  40f4a8:	mov    rax,r13
  40f4ab:	add    rsp,0x38
  40f4af:	pop    rbx
  40f4b0:	pop    r12
  40f4b2:	pop    r13
  40f4b4:	pop    r14
  40f4b6:	pop    r15
  40f4b8:	pop    rbp
  40f4b9:	ret    
  40f4ba:	mov    rdi,r14
  40f4bd:	mov    rsi,r13
  40f4c0:	mov    rdx,r12
  40f4c3:	mov    ecx,0xe
  40f4c8:	jmp    40f4a0 <main@@Base+0xab50>
  40f4ca:	nop    WORD PTR [rax+rax*1+0x0]
  40f4d0:	push   rbp
  40f4d1:	push   r15
  40f4d3:	push   r14
  40f4d5:	push   r13
  40f4d7:	push   r12
  40f4d9:	push   rbx
  40f4da:	sub    rsp,0x18
  40f4de:	mov    r12,rdx
  40f4e1:	mov    r14,rdi
  40f4e4:	cmp    rsi,rdx
  40f4e7:	je     40f517 <main@@Base+0xabc7>
  40f4e9:	cmp    BYTE PTR [rsi],0x7b
  40f4ec:	jne    40f517 <main@@Base+0xabc7>
  40f4ee:	mov    r15,rcx
  40f4f1:	lea    rax,[rsi+0x1]
  40f4f5:	mov    rcx,r12
  40f4f8:	sub    rcx,rax
  40f4fb:	cmp    rcx,0x2
  40f4ff:	jl     40f535 <main@@Base+0xabe5>
  40f501:	cmp    BYTE PTR [rax],0x20
  40f504:	jg     40f543 <main@@Base+0xabf3>
  40f506:	jne    40f535 <main@@Base+0xabe5>
  40f508:	cmp    BYTE PTR [rsi+0x2],0x20
  40f50c:	jle    40f535 <main@@Base+0xabe5>
  40f50e:	add    rsi,0x2
  40f512:	mov    rax,rsi
  40f515:	jmp    40f543 <main@@Base+0xabf3>
  40f517:	mov    rdi,r14
  40f51a:	mov    rdx,r12
  40f51d:	mov    ecx,0x15
  40f522:	add    rsp,0x18
  40f526:	pop    rbx
  40f527:	pop    r12
  40f529:	pop    r13
  40f52b:	pop    r14
  40f52d:	pop    r15
  40f52f:	pop    rbp
  40f530:	jmp    41e300 <flatcc_json_parser_set_error@@Base>
  40f535:	mov    rdi,r14
  40f538:	mov    rsi,rax
  40f53b:	mov    rdx,r12
  40f53e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f543:	mov    rsi,r12
  40f546:	cmp    rax,r12
  40f549:	je     40f594 <main@@Base+0xac44>
  40f54b:	cmp    BYTE PTR [rax],0x7d
  40f54e:	jne    40f591 <main@@Base+0xac41>
  40f550:	lea    rcx,[rax+0x1]
  40f554:	mov    rdx,r12
  40f557:	sub    rdx,rcx
  40f55a:	cmp    rdx,0x2
  40f55e:	jl     40f575 <main@@Base+0xac25>
  40f560:	cmp    BYTE PTR [rcx],0x20
  40f563:	jg     40fb9d <main@@Base+0xb24d>
  40f569:	jne    40f575 <main@@Base+0xac25>
  40f56b:	cmp    BYTE PTR [rax+0x2],0x20
  40f56f:	jg     40fb69 <main@@Base+0xb219>
  40f575:	mov    rdi,r14
  40f578:	mov    rsi,rcx
  40f57b:	mov    rdx,r12
  40f57e:	add    rsp,0x18
  40f582:	pop    rbx
  40f583:	pop    r12
  40f585:	pop    r13
  40f587:	pop    r14
  40f589:	pop    r15
  40f58b:	pop    rbp
  40f58c:	jmp    41e380 <flatcc_json_parser_space_ext@@Base>
  40f591:	mov    rsi,rax
  40f594:	movabs rbx,0xff00000000000000
  40f59e:	xchg   ax,ax
  40f5a0:	mov    r13,r12
  40f5a3:	cmp    rsi,r12
  40f5a6:	je     40f5eb <main@@Base+0xac9b>
  40f5a8:	movzx  eax,BYTE PTR [rsi]
  40f5ab:	cmp    al,0x2e
  40f5ad:	je     40f5c0 <main@@Base+0xac70>
  40f5af:	cmp    al,0x22
  40f5b1:	jne    40f5e0 <main@@Base+0xac90>
  40f5b3:	inc    rsi
  40f5b6:	mov    DWORD PTR [r14+0x14],0x0
  40f5be:	jmp    40f5e8 <main@@Base+0xac98>
  40f5c0:	mov    rdi,r14
  40f5c3:	mov    rdx,r12
  40f5c6:	mov    ecx,0x5
  40f5cb:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f5d0:	mov    r13,rax
  40f5d3:	jmp    40f5eb <main@@Base+0xac9b>
  40f5d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5df:	nop
  40f5e0:	mov    DWORD PTR [r14+0x14],0x1
  40f5e8:	mov    r13,rsi
  40f5eb:	mov    rax,r12
  40f5ee:	sub    rax,r13
  40f5f1:	cmp    rax,0x8
  40f5f5:	jb     40f610 <main@@Base+0xacc0>
  40f5f7:	movbe  rcx,QWORD PTR [r13+0x0]
  40f5fd:	jmp    40f692 <main@@Base+0xad42>
  40f602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f60c:	nop    DWORD PTR [rax+0x0]
  40f610:	lea    rcx,[rax-0x1]
  40f614:	cmp    rcx,0x6
  40f618:	ja     40f9f0 <main@@Base+0xb0a0>
  40f61e:	mov    r9,rbx
  40f621:	lea    rdx,[rip+0x12ed0]        # 4224f8 <_IO_stdin_used@@Base+0x4f8>
  40f628:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40f62c:	add    rbx,rdx
  40f62f:	xor    r8d,r8d
  40f632:	xor    ecx,ecx
  40f634:	xor    esi,esi
  40f636:	xor    edi,edi
  40f638:	xor    ebp,ebp
  40f63a:	xor    edx,edx
  40f63c:	jmp    rbx
  40f63e:	movsx  r8,BYTE PTR [r13+0x6]
  40f643:	shl    r8,0x8
  40f647:	movsx  rcx,BYTE PTR [r13+0x5]
  40f64c:	shl    rcx,0x10
  40f650:	or     rcx,r8
  40f653:	movsx  rsi,BYTE PTR [r13+0x4]
  40f658:	shl    rsi,0x18
  40f65c:	or     rsi,rcx
  40f65f:	movsx  rdi,BYTE PTR [r13+0x3]
  40f664:	shl    rdi,0x20
  40f668:	or     rdi,rsi
  40f66b:	movsx  rbp,BYTE PTR [r13+0x2]
  40f670:	shl    rbp,0x28
  40f674:	or     rbp,rdi
  40f677:	movsx  rdx,BYTE PTR [r13+0x1]
  40f67c:	shl    rdx,0x30
  40f680:	or     rdx,rbp
  40f683:	movzx  ecx,BYTE PTR [r13+0x0]
  40f688:	shl    rcx,0x38
  40f68c:	or     rcx,rdx
  40f68f:	mov    rbx,r9
  40f692:	and    rcx,rbx
  40f695:	movabs rdx,0x6100000000000000
  40f69f:	cmp    rcx,rdx
  40f6a2:	je     40f6f0 <main@@Base+0xada0>
  40f6a4:	movabs rdx,0x6200000000000000
  40f6ae:	cmp    rcx,rdx
  40f6b1:	jne    40f9f0 <main@@Base+0xb0a0>
  40f6b7:	mov    rbp,r13
  40f6ba:	cmp    rax,0x2
  40f6be:	jl     40f88e <main@@Base+0xaf3e>
  40f6c4:	cmp    DWORD PTR [r14+0x14],0x0
  40f6c9:	movzx  eax,BYTE PTR [r13+0x1]
  40f6ce:	je     40f726 <main@@Base+0xadd6>
  40f6d0:	cmp    al,0x21
  40f6d2:	jl     40f6df <main@@Base+0xad8f>
  40f6d4:	mov    rbp,r13
  40f6d7:	cmp    al,0x3a
  40f6d9:	jne    40f88e <main@@Base+0xaf3e>
  40f6df:	lea    rsi,[r13+0x1]
  40f6e3:	mov    DWORD PTR [r14+0x14],0x0
  40f6eb:	jmp    40f735 <main@@Base+0xade5>
  40f6ed:	nop    DWORD PTR [rax]
  40f6f0:	mov    rbp,r13
  40f6f3:	cmp    rax,0x2
  40f6f7:	jl     40f988 <main@@Base+0xb038>
  40f6fd:	cmp    DWORD PTR [r14+0x14],0x0
  40f702:	movzx  eax,BYTE PTR [r13+0x1]
  40f707:	je     40f75b <main@@Base+0xae0b>
  40f709:	cmp    al,0x21
  40f70b:	jl     40f718 <main@@Base+0xadc8>
  40f70d:	mov    rbp,r13
  40f710:	cmp    al,0x3a
  40f712:	jne    40f988 <main@@Base+0xb038>
  40f718:	lea    rsi,[r13+0x1]
  40f71c:	mov    DWORD PTR [r14+0x14],0x0
  40f724:	jmp    40f76a <main@@Base+0xae1a>
  40f726:	mov    rbp,r13
  40f729:	cmp    al,0x22
  40f72b:	jne    40f88e <main@@Base+0xaf3e>
  40f731:	lea    rsi,[r13+0x2]
  40f735:	mov    rax,r12
  40f738:	sub    rax,rsi
  40f73b:	cmp    rax,0x2
  40f73f:	jl     40f798 <main@@Base+0xae48>
  40f741:	cmp    BYTE PTR [rsi],0x20
  40f744:	jg     40f7a6 <main@@Base+0xae56>
  40f746:	jne    40f798 <main@@Base+0xae48>
  40f748:	cmp    BYTE PTR [rsi+0x1],0x20
  40f74c:	jle    40f798 <main@@Base+0xae48>
  40f74e:	inc    rsi
  40f751:	cmp    rsi,r12
  40f754:	jne    40f7af <main@@Base+0xae5f>
  40f756:	jmp    40f856 <main@@Base+0xaf06>
  40f75b:	mov    rbp,r13
  40f75e:	cmp    al,0x22
  40f760:	jne    40f988 <main@@Base+0xb038>
  40f766:	lea    rsi,[r13+0x2]
  40f76a:	mov    rax,r12
  40f76d:	sub    rax,rsi
  40f770:	cmp    rax,0x2
  40f774:	jl     40f7fb <main@@Base+0xaeab>
  40f77a:	cmp    BYTE PTR [rsi],0x20
  40f77d:	jg     40f809 <main@@Base+0xaeb9>
  40f783:	jne    40f7fb <main@@Base+0xaeab>
  40f785:	cmp    BYTE PTR [rsi+0x1],0x20
  40f789:	jle    40f7fb <main@@Base+0xaeab>
  40f78b:	inc    rsi
  40f78e:	cmp    rsi,r12
  40f791:	jne    40f80e <main@@Base+0xaebe>
  40f793:	jmp    40f868 <main@@Base+0xaf18>
  40f798:	mov    rdi,r14
  40f79b:	mov    rdx,r12
  40f79e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f7a3:	mov    rsi,rax
  40f7a6:	cmp    rsi,r12
  40f7a9:	je     40f856 <main@@Base+0xaf06>
  40f7af:	cmp    BYTE PTR [rsi],0x3a
  40f7b2:	jne    40f856 <main@@Base+0xaf06>
  40f7b8:	lea    rbp,[rsi+0x1]
  40f7bc:	mov    rax,r12
  40f7bf:	sub    rax,rbp
  40f7c2:	cmp    rax,0x2
  40f7c6:	jl     40f87d <main@@Base+0xaf2d>
  40f7cc:	cmp    BYTE PTR [rbp+0x0],0x20
  40f7d0:	jg     40f88e <main@@Base+0xaf3e>
  40f7d6:	jne    40f87d <main@@Base+0xaf2d>
  40f7dc:	cmp    BYTE PTR [rsi+0x2],0x20
  40f7e0:	jle    40f87d <main@@Base+0xaf2d>
  40f7e6:	add    rsi,0x2
  40f7ea:	mov    rbp,rsi
  40f7ed:	cmp    r13,rbp
  40f7f0:	jne    40f897 <main@@Base+0xaf47>
  40f7f6:	jmp    40f9f0 <main@@Base+0xb0a0>
  40f7fb:	mov    rdi,r14
  40f7fe:	mov    rdx,r12
  40f801:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f806:	mov    rsi,rax
  40f809:	cmp    rsi,r12
  40f80c:	je     40f868 <main@@Base+0xaf18>
  40f80e:	cmp    BYTE PTR [rsi],0x3a
  40f811:	jne    40f868 <main@@Base+0xaf18>
  40f813:	lea    rbp,[rsi+0x1]
  40f817:	mov    rax,r12
  40f81a:	sub    rax,rbp
  40f81d:	cmp    rax,0x2
  40f821:	jl     40f977 <main@@Base+0xb027>
  40f827:	cmp    BYTE PTR [rbp+0x0],0x20
  40f82b:	jg     40f988 <main@@Base+0xb038>
  40f831:	jne    40f977 <main@@Base+0xb027>
  40f837:	cmp    BYTE PTR [rsi+0x2],0x20
  40f83b:	jle    40f977 <main@@Base+0xb027>
  40f841:	add    rsi,0x2
  40f845:	mov    rbp,rsi
  40f848:	cmp    r13,rbp
  40f84b:	jne    40f98d <main@@Base+0xb03d>
  40f851:	jmp    40f9f0 <main@@Base+0xb0a0>
  40f856:	mov    rdi,r14
  40f859:	mov    rdx,r12
  40f85c:	mov    ecx,0x4
  40f861:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f866:	jmp    40f88b <main@@Base+0xaf3b>
  40f868:	mov    rdi,r14
  40f86b:	mov    rdx,r12
  40f86e:	mov    ecx,0x4
  40f873:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f878:	jmp    40f985 <main@@Base+0xb035>
  40f87d:	mov    rdi,r14
  40f880:	mov    rsi,rbp
  40f883:	mov    rdx,r12
  40f886:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f88b:	mov    rbp,rax
  40f88e:	cmp    r13,rbp
  40f891:	je     40f9f0 <main@@Base+0xb0a0>
  40f897:	mov    QWORD PTR [rsp+0x10],0x0
  40f8a0:	mov    DWORD PTR [rsp+0xc],0x0
  40f8a8:	mov    BYTE PTR [rsp+0xa],0x0
  40f8ad:	cmp    rbp,r12
  40f8b0:	je     40f8f4 <main@@Base+0xafa4>
  40f8b2:	mov    rdi,r14
  40f8b5:	mov    rsi,rbp
  40f8b8:	mov    rdx,r12
  40f8bb:	lea    rcx,[rsp+0xc]
  40f8c0:	lea    r8,[rsp+0x10]
  40f8c5:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40f8ca:	cmp    rax,rbp
  40f8cd:	je     40f900 <main@@Base+0xafb0>
  40f8cf:	mov    rcx,QWORD PTR [rsp+0x10]
  40f8d4:	cmp    DWORD PTR [rsp+0xc],0x0
  40f8d9:	je     40f90c <main@@Base+0xafbc>
  40f8db:	cmp    rcx,0x81
  40f8e2:	jb     40f931 <main@@Base+0xafe1>
  40f8e4:	mov    rdi,r14
  40f8e7:	mov    rsi,rax
  40f8ea:	mov    rdx,r12
  40f8ed:	mov    ecx,0x8
  40f8f2:	jmp    40f923 <main@@Base+0xafd3>
  40f8f4:	xor    ecx,ecx
  40f8f6:	mov    rax,r12
  40f8f9:	cmp    rbp,rax
  40f8fc:	jne    40f96e <main@@Base+0xb01e>
  40f8fe:	jmp    40f93d <main@@Base+0xafed>
  40f900:	xor    ecx,ecx
  40f902:	mov    rax,rbp
  40f905:	cmp    rbp,rax
  40f908:	jne    40f96e <main@@Base+0xb01e>
  40f90a:	jmp    40f93d <main@@Base+0xafed>
  40f90c:	cmp    rcx,0x80
  40f913:	jb     40f934 <main@@Base+0xafe4>
  40f915:	mov    rdi,r14
  40f918:	mov    rsi,rax
  40f91b:	mov    rdx,r12
  40f91e:	mov    ecx,0x7
  40f923:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40f928:	xor    ecx,ecx
  40f92a:	cmp    rbp,rax
  40f92d:	jne    40f96e <main@@Base+0xb01e>
  40f92f:	jmp    40f93d <main@@Base+0xafed>
  40f931:	neg    rcx
  40f934:	mov    BYTE PTR [rsp+0xa],cl
  40f938:	cmp    rbp,rax
  40f93b:	jne    40f96e <main@@Base+0xb01e>
  40f93d:	mov    rdi,r14
  40f940:	mov    rsi,rbp
  40f943:	mov    rdx,r12
  40f946:	lea    rcx,[rip+0x19af3]        # 429440 <filename@@Base+0x370>
  40f94d:	lea    r8,[rsp+0xa]
  40f952:	call   40eea0 <main@@Base+0xa550>
  40f957:	cmp    rax,rbp
  40f95a:	je     40fbaf <main@@Base+0xb25f>
  40f960:	cmp    rax,r12
  40f963:	je     40fbaf <main@@Base+0xb25f>
  40f969:	movzx  ecx,BYTE PTR [rsp+0xa]
  40f96e:	mov    BYTE PTR [r15+0x2],cl
  40f972:	jmp    40fa90 <main@@Base+0xb140>
  40f977:	mov    rdi,r14
  40f97a:	mov    rsi,rbp
  40f97d:	mov    rdx,r12
  40f980:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40f985:	mov    rbp,rax
  40f988:	cmp    r13,rbp
  40f98b:	je     40f9f0 <main@@Base+0xb0a0>
  40f98d:	mov    QWORD PTR [rsp+0x10],0x0
  40f996:	mov    DWORD PTR [rsp+0xc],0x0
  40f99e:	mov    WORD PTR [rsp+0xa],0x0
  40f9a5:	cmp    rbp,r12
  40f9a8:	je     40fa03 <main@@Base+0xb0b3>
  40f9aa:	mov    rdi,r14
  40f9ad:	mov    rsi,rbp
  40f9b0:	mov    rdx,r12
  40f9b3:	lea    rcx,[rsp+0xc]
  40f9b8:	lea    r8,[rsp+0x10]
  40f9bd:	call   41fec0 <flatcc_json_parser_integer@@Base>
  40f9c2:	cmp    rax,rbp
  40f9c5:	je     40fa0f <main@@Base+0xb0bf>
  40f9c7:	mov    rcx,QWORD PTR [rsp+0x10]
  40f9cc:	cmp    DWORD PTR [rsp+0xc],0x0
  40f9d1:	je     40fa1b <main@@Base+0xb0cb>
  40f9d3:	cmp    rcx,0x8001
  40f9da:	jb     40fa40 <main@@Base+0xb0f0>
  40f9dc:	mov    rdi,r14
  40f9df:	mov    rsi,rax
  40f9e2:	mov    rdx,r12
  40f9e5:	mov    ecx,0x8
  40f9ea:	jmp    40fa32 <main@@Base+0xb0e2>
  40f9ec:	nop    DWORD PTR [rax+0x0]
  40f9f0:	mov    rdi,r14
  40f9f3:	mov    rsi,r13
  40f9f6:	mov    rdx,r12
  40f9f9:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f9fe:	jmp    40fa90 <main@@Base+0xb140>
  40fa03:	xor    ecx,ecx
  40fa05:	mov    rax,r12
  40fa08:	cmp    rbp,rax
  40fa0b:	jne    40fa7e <main@@Base+0xb12e>
  40fa0d:	jmp    40fa4d <main@@Base+0xb0fd>
  40fa0f:	xor    ecx,ecx
  40fa11:	mov    rax,rbp
  40fa14:	cmp    rbp,rax
  40fa17:	jne    40fa7e <main@@Base+0xb12e>
  40fa19:	jmp    40fa4d <main@@Base+0xb0fd>
  40fa1b:	cmp    rcx,0x8000
  40fa22:	jb     40fa43 <main@@Base+0xb0f3>
  40fa24:	mov    rdi,r14
  40fa27:	mov    rsi,rax
  40fa2a:	mov    rdx,r12
  40fa2d:	mov    ecx,0x7
  40fa32:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40fa37:	xor    ecx,ecx
  40fa39:	cmp    rbp,rax
  40fa3c:	jne    40fa7e <main@@Base+0xb12e>
  40fa3e:	jmp    40fa4d <main@@Base+0xb0fd>
  40fa40:	neg    rcx
  40fa43:	mov    WORD PTR [rsp+0xa],cx
  40fa48:	cmp    rbp,rax
  40fa4b:	jne    40fa7e <main@@Base+0xb12e>
  40fa4d:	mov    rdi,r14
  40fa50:	mov    rsi,rbp
  40fa53:	mov    rdx,r12
  40fa56:	lea    rcx,[rip+0x19a03]        # 429460 <filename@@Base+0x390>
  40fa5d:	lea    r8,[rsp+0xa]
  40fa62:	call   40f2c0 <main@@Base+0xa970>
  40fa67:	cmp    rax,rbp
  40fa6a:	je     40fbaf <main@@Base+0xb25f>
  40fa70:	cmp    rax,r12
  40fa73:	je     40fbaf <main@@Base+0xb25f>
  40fa79:	movzx  ecx,WORD PTR [rsp+0xa]
  40fa7e:	mov    WORD PTR [r15],cx
  40fa82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa8c:	nop    DWORD PTR [rax+0x0]
  40fa90:	mov    rcx,r12
  40fa93:	sub    rcx,rax
  40fa96:	cmp    rcx,0x2
  40fa9a:	jl     40fac0 <main@@Base+0xb170>
  40fa9c:	cmp    BYTE PTR [rax],0x20
  40fa9f:	jg     40face <main@@Base+0xb17e>
  40faa1:	jne    40fac0 <main@@Base+0xb170>
  40faa3:	cmp    BYTE PTR [rax+0x1],0x20
  40faa7:	jle    40fac0 <main@@Base+0xb170>
  40faa9:	inc    rax
  40faac:	cmp    rax,r12
  40faaf:	jne    40fad3 <main@@Base+0xb183>
  40fab1:	jmp    40fb42 <main@@Base+0xb1f2>
  40fab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fac0:	mov    rdi,r14
  40fac3:	mov    rsi,rax
  40fac6:	mov    rdx,r12
  40fac9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40face:	cmp    rax,r12
  40fad1:	je     40fb42 <main@@Base+0xb1f2>
  40fad3:	movzx  ecx,BYTE PTR [rax]
  40fad6:	cmp    cl,0x2c
  40fad9:	jne    40fb47 <main@@Base+0xb1f7>
  40fadb:	lea    rsi,[rax+0x1]
  40fadf:	mov    rcx,r12
  40fae2:	sub    rcx,rsi
  40fae5:	cmp    rcx,0x2
  40fae9:	jl     40fb00 <main@@Base+0xb1b0>
  40faeb:	cmp    BYTE PTR [rsi],0x20
  40faee:	jg     40fb0e <main@@Base+0xb1be>
  40faf0:	jne    40fb00 <main@@Base+0xb1b0>
  40faf2:	cmp    BYTE PTR [rax+0x2],0x20
  40faf6:	jle    40fb00 <main@@Base+0xb1b0>
  40faf8:	add    rax,0x2
  40fafc:	jmp    40fb0b <main@@Base+0xb1bb>
  40fafe:	xchg   ax,ax
  40fb00:	mov    rdi,r14
  40fb03:	mov    rdx,r12
  40fb06:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40fb0b:	mov    rsi,rax
  40fb0e:	cmp    rsi,r12
  40fb11:	je     40fb7f <main@@Base+0xb22f>
  40fb13:	cmp    BYTE PTR [rsi],0x7d
  40fb16:	jne    40f5a0 <main@@Base+0xac50>
  40fb1c:	lea    rcx,[rsi+0x1]
  40fb20:	mov    rax,r12
  40fb23:	sub    rax,rcx
  40fb26:	cmp    rax,0x2
  40fb2a:	jl     40fb6f <main@@Base+0xb21f>
  40fb2c:	cmp    BYTE PTR [rcx],0x20
  40fb2f:	jg     40fb9d <main@@Base+0xb24d>
  40fb31:	jne    40fb6f <main@@Base+0xb21f>
  40fb33:	cmp    BYTE PTR [rsi+0x2],0x20
  40fb37:	jle    40fb6f <main@@Base+0xb21f>
  40fb39:	add    rsi,0x2
  40fb3d:	mov    rcx,rsi
  40fb40:	jmp    40fb9d <main@@Base+0xb24d>
  40fb42:	mov    rcx,r12
  40fb45:	jmp    40fb9d <main@@Base+0xb24d>
  40fb47:	cmp    cl,0x7d
  40fb4a:	jne    40fb87 <main@@Base+0xb237>
  40fb4c:	lea    rcx,[rax+0x1]
  40fb50:	mov    rdx,r12
  40fb53:	sub    rdx,rcx
  40fb56:	cmp    rdx,0x2
  40fb5a:	jl     40fb6f <main@@Base+0xb21f>
  40fb5c:	cmp    BYTE PTR [rcx],0x20
  40fb5f:	jg     40fb9d <main@@Base+0xb24d>
  40fb61:	jne    40fb6f <main@@Base+0xb21f>
  40fb63:	cmp    BYTE PTR [rax+0x2],0x20
  40fb67:	jle    40fb6f <main@@Base+0xb21f>
  40fb69:	add    rax,0x2
  40fb6d:	jmp    40fb9a <main@@Base+0xb24a>
  40fb6f:	mov    rdi,r14
  40fb72:	mov    rsi,rcx
  40fb75:	mov    rdx,r12
  40fb78:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40fb7d:	jmp    40fb9a <main@@Base+0xb24a>
  40fb7f:	mov    rdi,r14
  40fb82:	mov    rsi,r12
  40fb85:	jmp    40fb8d <main@@Base+0xb23d>
  40fb87:	mov    rdi,r14
  40fb8a:	mov    rsi,rax
  40fb8d:	mov    rdx,r12
  40fb90:	mov    ecx,0xa
  40fb95:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40fb9a:	mov    rcx,rax
  40fb9d:	mov    rax,rcx
  40fba0:	add    rsp,0x18
  40fba4:	pop    rbx
  40fba5:	pop    r12
  40fba7:	pop    r13
  40fba9:	pop    r14
  40fbab:	pop    r15
  40fbad:	pop    rbp
  40fbae:	ret    
  40fbaf:	mov    rdi,r14
  40fbb2:	mov    rsi,rax
  40fbb5:	mov    rdx,r12
  40fbb8:	mov    ecx,0x21
  40fbbd:	jmp    40fb95 <main@@Base+0xb245>
  40fbbf:	nop
  40fbc0:	push   rbp
  40fbc1:	push   r15
  40fbc3:	push   r14
  40fbc5:	push   r13
  40fbc7:	push   r12
  40fbc9:	push   rbx
  40fbca:	sub    rsp,0x38
  40fbce:	mov    r14,rdx
  40fbd1:	mov    rbp,rsi
  40fbd4:	mov    r13,rdi
  40fbd7:	mov    DWORD PTR [r8],0x0
  40fbde:	cmp    cl,0x4
  40fbe1:	ja     40fc21 <main@@Base+0xb2d1>
  40fbe3:	mov    r12,r8
  40fbe6:	mov    eax,ecx
  40fbe8:	lea    rcx,[rip+0x12925]        # 422514 <_IO_stdin_used@@Base+0x514>
  40fbef:	movsxd rax,DWORD PTR [rcx+rax*4]
  40fbf3:	add    rax,rcx
  40fbf6:	jmp    rax
  40fbf8:	mov    rax,r14
  40fbfb:	sub    rax,rbp
  40fbfe:	cmp    rax,0x4
  40fc02:	jl     40fc11 <main@@Base+0xb2c1>
  40fc04:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  40fc0b:	je     40fe01 <main@@Base+0xb4b1>
  40fc11:	mov    rdi,r13
  40fc14:	mov    rsi,rbp
  40fc17:	mov    rdx,r14
  40fc1a:	mov    ecx,0x1a
  40fc1f:	jmp    40fc3a <main@@Base+0xb2ea>
  40fc21:	test   BYTE PTR [r13+0x10],0x1
  40fc26:	jne    40fde5 <main@@Base+0xb495>
  40fc2c:	mov    rdi,r13
  40fc2f:	mov    rsi,rbp
  40fc32:	mov    rdx,r14
  40fc35:	mov    ecx,0xf
  40fc3a:	add    rsp,0x38
  40fc3e:	pop    rbx
  40fc3f:	pop    r12
  40fc41:	pop    r13
  40fc43:	pop    r14
  40fc45:	pop    r15
  40fc47:	pop    rbp
  40fc48:	jmp    41e300 <flatcc_json_parser_set_error@@Base>
  40fc4d:	mov    rdi,r13
  40fc50:	mov    rsi,rbp
  40fc53:	mov    rdx,r14
  40fc56:	mov    rcx,r12
  40fc59:	call   4049d0 <main@@Base+0x80>
  40fc5e:	jmp    41295e <main@@Base+0xe00e>
  40fc63:	mov    DWORD PTR [r12],0x0
  40fc6b:	mov    rdi,QWORD PTR [r13+0x0]
  40fc6f:	mov    esi,0x4
  40fc74:	call   41af90 <flatcc_builder_start_table@@Base>
  40fc79:	test   eax,eax
  40fc7b:	jne    41294b <main@@Base+0xdffb>
  40fc81:	cmp    rbp,r14
  40fc84:	je     40fdbf <main@@Base+0xb46f>
  40fc8a:	cmp    BYTE PTR [rbp+0x0],0x7b
  40fc8e:	jne    40fdbf <main@@Base+0xb46f>
  40fc94:	lea    rax,[rbp+0x1]
  40fc98:	mov    rcx,r14
  40fc9b:	sub    rcx,rax
  40fc9e:	cmp    rcx,0x2
  40fca2:	jl     40fe30 <main@@Base+0xb4e0>
  40fca8:	cmp    BYTE PTR [rax],0x20
  40fcab:	jg     40fe3e <main@@Base+0xb4ee>
  40fcb1:	jne    40fe30 <main@@Base+0xb4e0>
  40fcb7:	cmp    BYTE PTR [rbp+0x2],0x20
  40fcbb:	jle    40fe30 <main@@Base+0xb4e0>
  40fcc1:	add    rbp,0x2
  40fcc5:	mov    rax,rbp
  40fcc8:	jmp    40fe3e <main@@Base+0xb4ee>
  40fccd:	mov    DWORD PTR [r12],0x0
  40fcd5:	mov    rdi,QWORD PTR [r13+0x0]
  40fcd9:	xor    esi,esi
  40fcdb:	call   41af90 <flatcc_builder_start_table@@Base>
  40fce0:	test   eax,eax
  40fce2:	jne    41294b <main@@Base+0xdffb>
  40fce8:	cmp    rbp,r14
  40fceb:	je     40fdbf <main@@Base+0xb46f>
  40fcf1:	cmp    BYTE PTR [rbp+0x0],0x7b
  40fcf5:	jne    40fdbf <main@@Base+0xb46f>
  40fcfb:	lea    rax,[rbp+0x1]
  40fcff:	mov    rcx,r14
  40fd02:	sub    rcx,rax
  40fd05:	cmp    rcx,0x2
  40fd09:	jl     40fe86 <main@@Base+0xb536>
  40fd0f:	cmp    BYTE PTR [rax],0x20
  40fd12:	jg     40fe94 <main@@Base+0xb544>
  40fd18:	jne    40fe86 <main@@Base+0xb536>
  40fd1e:	cmp    BYTE PTR [rbp+0x2],0x20
  40fd22:	jle    40fe86 <main@@Base+0xb536>
  40fd28:	add    rbp,0x2
  40fd2c:	mov    rax,rbp
  40fd2f:	jmp    40fe94 <main@@Base+0xb544>
  40fd34:	mov    DWORD PTR [r12],0x0
  40fd3c:	mov    rdi,QWORD PTR [r13+0x0]
  40fd40:	mov    esi,0x4
  40fd45:	call   41af90 <flatcc_builder_start_table@@Base>
  40fd4a:	test   eax,eax
  40fd4c:	jne    41294b <main@@Base+0xdffb>
  40fd52:	lea    r8,[rsp+0x28]
  40fd57:	mov    ecx,0x1
  40fd5c:	mov    rdi,r13
  40fd5f:	mov    rsi,rbp
  40fd62:	mov    rdx,r14
  40fd65:	call   420630 <flatcc_json_parser_prepare_unions@@Base>
  40fd6a:	cmp    rax,r14
  40fd6d:	je     41294b <main@@Base+0xdffb>
  40fd73:	cmp    rbp,r14
  40fd76:	je     40fe0a <main@@Base+0xb4ba>
  40fd7c:	cmp    BYTE PTR [rbp+0x0],0x7b
  40fd80:	jne    40fe0a <main@@Base+0xb4ba>
  40fd86:	lea    rcx,[rbp+0x1]
  40fd8a:	mov    rax,r14
  40fd8d:	sub    rax,rcx
  40fd90:	cmp    rax,0x2
  40fd94:	jl     40ff84 <main@@Base+0xb634>
  40fd9a:	cmp    BYTE PTR [rcx],0x20
  40fd9d:	jg     40ff95 <main@@Base+0xb645>
  40fda3:	jne    40ff84 <main@@Base+0xb634>
  40fda9:	cmp    BYTE PTR [rbp+0x2],0x20
  40fdad:	jle    40ff84 <main@@Base+0xb634>
  40fdb3:	add    rbp,0x2
  40fdb7:	mov    rcx,rbp
  40fdba:	jmp    40ff95 <main@@Base+0xb645>
  40fdbf:	mov    rdi,r13
  40fdc2:	mov    rsi,rbp
  40fdc5:	mov    rdx,r14
  40fdc8:	mov    ecx,0x15
  40fdcd:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40fdd2:	mov    rbp,rax
  40fdd5:	cmp    DWORD PTR [r13+0x20],0x0
  40fdda:	jne    41294b <main@@Base+0xdffb>
  40fde0:	jmp    41293a <main@@Base+0xdfea>
  40fde5:	mov    rdi,r13
  40fde8:	mov    rsi,rbp
  40fdeb:	mov    rdx,r14
  40fdee:	add    rsp,0x38
  40fdf2:	pop    rbx
  40fdf3:	pop    r12
  40fdf5:	pop    r13
  40fdf7:	pop    r14
  40fdf9:	pop    r15
  40fdfb:	pop    rbp
  40fdfc:	jmp    41ea80 <flatcc_json_parser_generic_json@@Base>
  40fe01:	add    rbp,0x4
  40fe05:	jmp    412985 <main@@Base+0xe035>
  40fe0a:	mov    rdi,r13
  40fe0d:	mov    rsi,rbp
  40fe10:	mov    rdx,r14
  40fe13:	mov    ecx,0x15
  40fe18:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40fe1d:	cmp    DWORD PTR [r13+0x20],0x0
  40fe22:	je     412924 <main@@Base+0xdfd4>
  40fe28:	mov    rbp,rax
  40fe2b:	jmp    41294b <main@@Base+0xdffb>
  40fe30:	mov    rdi,r13
  40fe33:	mov    rsi,rax
  40fe36:	mov    rdx,r14
  40fe39:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40fe3e:	mov    rsi,r14
  40fe41:	cmp    rax,r14
  40fe44:	je     40fff1 <main@@Base+0xb6a1>
  40fe4a:	cmp    BYTE PTR [rax],0x7d
  40fe4d:	jne    40ffee <main@@Base+0xb69e>
  40fe53:	lea    rbp,[rax+0x1]
  40fe57:	mov    rcx,r14
  40fe5a:	sub    rcx,rbp
  40fe5d:	cmp    rcx,0x2
  40fe61:	jl     412860 <main@@Base+0xdf10>
  40fe67:	cmp    BYTE PTR [rbp+0x0],0x20
  40fe6b:	jg     40fdd5 <main@@Base+0xb485>
  40fe71:	jne    412860 <main@@Base+0xdf10>
  40fe77:	cmp    BYTE PTR [rax+0x2],0x20
  40fe7b:	jle    412860 <main@@Base+0xdf10>
  40fe81:	jmp    412816 <main@@Base+0xdec6>
  40fe86:	mov    rdi,r13
  40fe89:	mov    rsi,rax
  40fe8c:	mov    rdx,r14
  40fe8f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40fe94:	mov    rsi,r14
  40fe97:	cmp    rax,r14
  40fe9a:	je     40fea8 <main@@Base+0xb558>
  40fe9c:	cmp    BYTE PTR [rax],0x7d
  40fe9f:	je     4127f4 <main@@Base+0xdea4>
  40fea5:	mov    rsi,rax
  40fea8:	mov    rax,r14
  40feab:	cmp    rsi,r14
  40feae:	je     40fee5 <main@@Base+0xb595>
  40feb0:	movzx  eax,BYTE PTR [rsi]
  40feb3:	cmp    al,0x2e
  40feb5:	je     40fec8 <main@@Base+0xb578>
  40feb7:	cmp    al,0x22
  40feb9:	jne    40feda <main@@Base+0xb58a>
  40febb:	inc    rsi
  40febe:	mov    DWORD PTR [r13+0x14],0x0
  40fec6:	jmp    40fee2 <main@@Base+0xb592>
  40fec8:	mov    rdi,r13
  40fecb:	mov    rdx,r14
  40fece:	mov    ecx,0x5
  40fed3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  40fed8:	jmp    40fee5 <main@@Base+0xb595>
  40feda:	mov    DWORD PTR [r13+0x14],0x1
  40fee2:	mov    rax,rsi
  40fee5:	mov    rdi,r13
  40fee8:	mov    rsi,rax
  40feeb:	mov    rdx,r14
  40feee:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fef3:	mov    rcx,r14
  40fef6:	sub    rcx,rax
  40fef9:	cmp    rcx,0x2
  40fefd:	jl     40ff19 <main@@Base+0xb5c9>
  40feff:	cmp    BYTE PTR [rax],0x20
  40ff02:	jg     40ff27 <main@@Base+0xb5d7>
  40ff04:	jne    40ff19 <main@@Base+0xb5c9>
  40ff06:	cmp    BYTE PTR [rax+0x1],0x20
  40ff0a:	jle    40ff19 <main@@Base+0xb5c9>
  40ff0c:	inc    rax
  40ff0f:	cmp    rax,r14
  40ff12:	jne    40ff30 <main@@Base+0xb5e0>
  40ff14:	jmp    410a8b <main@@Base+0xc13b>
  40ff19:	mov    rdi,r13
  40ff1c:	mov    rsi,rax
  40ff1f:	mov    rdx,r14
  40ff22:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ff27:	cmp    rax,r14
  40ff2a:	je     410a8b <main@@Base+0xc13b>
  40ff30:	movzx  ecx,BYTE PTR [rax]
  40ff33:	cmp    cl,0x2c
  40ff36:	jne    4127eb <main@@Base+0xde9b>
  40ff3c:	lea    rsi,[rax+0x1]
  40ff40:	mov    rcx,r14
  40ff43:	sub    rcx,rsi
  40ff46:	cmp    rcx,0x2
  40ff4a:	jl     40ff5f <main@@Base+0xb60f>
  40ff4c:	cmp    BYTE PTR [rsi],0x20
  40ff4f:	jg     40ff6d <main@@Base+0xb61d>
  40ff51:	jne    40ff5f <main@@Base+0xb60f>
  40ff53:	cmp    BYTE PTR [rax+0x2],0x20
  40ff57:	jle    40ff5f <main@@Base+0xb60f>
  40ff59:	add    rax,0x2
  40ff5d:	jmp    40ff6a <main@@Base+0xb61a>
  40ff5f:	mov    rdi,r13
  40ff62:	mov    rdx,r14
  40ff65:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ff6a:	mov    rsi,rax
  40ff6d:	cmp    rsi,r14
  40ff70:	je     410a9e <main@@Base+0xc14e>
  40ff76:	cmp    BYTE PTR [rsi],0x7d
  40ff79:	jne    40fea8 <main@@Base+0xb558>
  40ff7f:	jmp    410aa9 <main@@Base+0xc159>
  40ff84:	mov    rdi,r13
  40ff87:	mov    rsi,rcx
  40ff8a:	mov    rdx,r14
  40ff8d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  40ff92:	mov    rcx,rax
  40ff95:	mov    rsi,r14
  40ff98:	cmp    rcx,r14
  40ff9b:	je     410af1 <main@@Base+0xc1a1>
  40ffa1:	cmp    BYTE PTR [rcx],0x7d
  40ffa4:	jne    410aee <main@@Base+0xc19e>
  40ffaa:	lea    rax,[rcx+0x1]
  40ffae:	mov    rdx,r14
  40ffb1:	sub    rdx,rax
  40ffb4:	cmp    rdx,0x2
  40ffb8:	jl     41290b <main@@Base+0xdfbb>
  40ffbe:	cmp    BYTE PTR [rax],0x20
  40ffc1:	jg     40fe1d <main@@Base+0xb4cd>
  40ffc7:	jne    41290b <main@@Base+0xdfbb>
  40ffcd:	cmp    BYTE PTR [rcx+0x2],0x20
  40ffd1:	jle    41290b <main@@Base+0xdfbb>
  40ffd7:	add    rcx,0x2
  40ffdb:	mov    rax,rcx
  40ffde:	cmp    DWORD PTR [r13+0x20],0x0
  40ffe3:	jne    40fe28 <main@@Base+0xb4d8>
  40ffe9:	jmp    412924 <main@@Base+0xdfd4>
  40ffee:	mov    rsi,rax
  40fff1:	movabs rax,0x636f6c6f72000000
  40fffb:	add    rax,0x320000
  410001:	mov    QWORD PTR [rsp+0x30],rax
  410006:	mov    QWORD PTR [rsp+0x20],r13
  41000b:	mov    QWORD PTR [rsp],r12
  41000f:	mov    r12,r14
  410012:	cmp    rsi,r14
  410015:	je     41004f <main@@Base+0xb6ff>
  410017:	movzx  eax,BYTE PTR [rsi]
  41001a:	cmp    al,0x2e
  41001c:	je     41002f <main@@Base+0xb6df>
  41001e:	cmp    al,0x22
  410020:	jne    410044 <main@@Base+0xb6f4>
  410022:	inc    rsi
  410025:	mov    DWORD PTR [r13+0x14],0x0
  41002d:	jmp    41004c <main@@Base+0xb6fc>
  41002f:	mov    rdi,r13
  410032:	mov    rdx,r14
  410035:	mov    ecx,0x5
  41003a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41003f:	mov    r12,rax
  410042:	jmp    41004f <main@@Base+0xb6ff>
  410044:	mov    DWORD PTR [r13+0x14],0x1
  41004c:	mov    r12,rsi
  41004f:	mov    r13,r14
  410052:	sub    r13,r12
  410055:	cmp    r13,0x8
  410059:	jb     410066 <main@@Base+0xb716>
  41005b:	movbe  r15,QWORD PTR [r12]
  410061:	jmp    4100e7 <main@@Base+0xb797>
  410066:	lea    rax,[r13-0x1]
  41006a:	cmp    rax,0x6
  41006e:	ja     41057a <main@@Base+0xbc2a>
  410074:	lea    rcx,[rip+0x125a9]        # 422624 <_IO_stdin_used@@Base+0x624>
  41007b:	movsxd rbx,DWORD PTR [rcx+rax*4]
  41007f:	add    rbx,rcx
  410082:	xor    ecx,ecx
  410084:	xor    eax,eax
  410086:	xor    edx,edx
  410088:	xor    esi,esi
  41008a:	xor    edi,edi
  41008c:	xor    ebp,ebp
  41008e:	jmp    rbx
  410090:	movsx  rcx,BYTE PTR [r12+0x6]
  410096:	shl    rcx,0x8
  41009a:	movsx  rax,BYTE PTR [r12+0x5]
  4100a0:	shl    rax,0x10
  4100a4:	or     rax,rcx
  4100a7:	movsx  rdx,BYTE PTR [r12+0x4]
  4100ad:	shl    rdx,0x18
  4100b1:	or     rdx,rax
  4100b4:	movsx  rsi,BYTE PTR [r12+0x3]
  4100ba:	shl    rsi,0x20
  4100be:	or     rsi,rdx
  4100c1:	movsx  rdi,BYTE PTR [r12+0x2]
  4100c7:	shl    rdi,0x28
  4100cb:	or     rdi,rsi
  4100ce:	movsx  rbp,BYTE PTR [r12+0x1]
  4100d4:	shl    rbp,0x30
  4100d8:	or     rbp,rdi
  4100db:	movzx  r15d,BYTE PTR [r12]
  4100e0:	shl    r15,0x38
  4100e4:	or     r15,rbp
  4100e7:	mov    rax,r15
  4100ea:	and    rax,0xffffffffffff0000
  4100f0:	cmp    rax,QWORD PTR [rsp+0x30]
  4100f5:	jne    41013b <main@@Base+0xb7eb>
  4100f7:	mov    rbp,r12
  4100fa:	cmp    r13,0x7
  4100fe:	jl     4102ff <main@@Base+0xb9af>
  410104:	mov    rax,QWORD PTR [rsp+0x20]
  410109:	cmp    DWORD PTR [rax+0x14],0x0
  41010d:	movzx  eax,BYTE PTR [r12+0x6]
  410113:	je     41019e <main@@Base+0xb84e>
  410119:	cmp    al,0x21
  41011b:	jl     410128 <main@@Base+0xb7d8>
  41011d:	mov    rbp,r12
  410120:	cmp    al,0x3a
  410122:	jne    4102ff <main@@Base+0xb9af>
  410128:	lea    rsi,[r12+0x6]
  41012d:	mov    rax,QWORD PTR [rsp+0x20]
  410132:	mov    DWORD PTR [rax+0x14],0x0
  410139:	jmp    4101ae <main@@Base+0xb85e>
  41013b:	mov    rax,r15
  41013e:	and    rax,0xffffffffff000000
  410144:	movabs rcx,0x636f6c6f72000000
  41014e:	cmp    rax,rcx
  410151:	jne    4104b7 <main@@Base+0xbb67>
  410157:	mov    rbp,r12
  41015a:	cmp    r13,0x6
  41015e:	jl     410436 <main@@Base+0xbae6>
  410164:	mov    rax,QWORD PTR [rsp+0x20]
  410169:	cmp    DWORD PTR [rax+0x14],0x0
  41016d:	movzx  eax,BYTE PTR [r12+0x5]
  410173:	je     410245 <main@@Base+0xb8f5>
  410179:	cmp    al,0x21
  41017b:	jl     410188 <main@@Base+0xb838>
  41017d:	mov    rbp,r12
  410180:	cmp    al,0x3a
  410182:	jne    410436 <main@@Base+0xbae6>
  410188:	lea    rsi,[r12+0x5]
  41018d:	mov    rax,QWORD PTR [rsp+0x20]
  410192:	mov    DWORD PTR [rax+0x14],0x0
  410199:	jmp    410255 <main@@Base+0xb905>
  41019e:	mov    rbp,r12
  4101a1:	cmp    al,0x22
  4101a3:	jne    4102ff <main@@Base+0xb9af>
  4101a9:	lea    rsi,[r12+0x7]
  4101ae:	mov    rax,r14
  4101b1:	sub    rax,rsi
  4101b4:	cmp    rax,0x2
  4101b8:	jl     4101d1 <main@@Base+0xb881>
  4101ba:	cmp    BYTE PTR [rsi],0x20
  4101bd:	jg     4101e1 <main@@Base+0xb891>
  4101bf:	jne    4101d1 <main@@Base+0xb881>
  4101c1:	cmp    BYTE PTR [rsi+0x1],0x20
  4101c5:	jle    4101d1 <main@@Base+0xb881>
  4101c7:	inc    rsi
  4101ca:	cmp    rsi,r14
  4101cd:	jne    4101e6 <main@@Base+0xb896>
  4101cf:	jmp    41022e <main@@Base+0xb8de>
  4101d1:	mov    rdi,QWORD PTR [rsp+0x20]
  4101d6:	mov    rdx,r14
  4101d9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4101de:	mov    rsi,rax
  4101e1:	cmp    rsi,r14
  4101e4:	je     41022e <main@@Base+0xb8de>
  4101e6:	cmp    BYTE PTR [rsi],0x3a
  4101e9:	jne    41022e <main@@Base+0xb8de>
  4101eb:	lea    rbp,[rsi+0x1]
  4101ef:	mov    rax,r14
  4101f2:	sub    rax,rbp
  4101f5:	cmp    rax,0x2
  4101f9:	jl     4102ec <main@@Base+0xb99c>
  4101ff:	cmp    BYTE PTR [rbp+0x0],0x20
  410203:	jg     4102ff <main@@Base+0xb9af>
  410209:	jne    4102ec <main@@Base+0xb99c>
  41020f:	cmp    BYTE PTR [rsi+0x2],0x20
  410213:	jle    4102ec <main@@Base+0xb99c>
  410219:	add    rsi,0x2
  41021d:	mov    rbp,rsi
  410220:	cmp    r12,rbp
  410223:	jne    410308 <main@@Base+0xb9b8>
  410229:	jmp    4104b7 <main@@Base+0xbb67>
  41022e:	mov    rdi,QWORD PTR [rsp+0x20]
  410233:	mov    rdx,r14
  410236:	mov    ecx,0x4
  41023b:	call   41e300 <flatcc_json_parser_set_error@@Base>
  410240:	jmp    4102fc <main@@Base+0xb9ac>
  410245:	mov    rbp,r12
  410248:	cmp    al,0x22
  41024a:	jne    410436 <main@@Base+0xbae6>
  410250:	lea    rsi,[r12+0x6]
  410255:	mov    rax,r14
  410258:	sub    rax,rsi
  41025b:	cmp    rax,0x2
  41025f:	jl     410278 <main@@Base+0xb928>
  410261:	cmp    BYTE PTR [rsi],0x20
  410264:	jg     410288 <main@@Base+0xb938>
  410266:	jne    410278 <main@@Base+0xb928>
  410268:	cmp    BYTE PTR [rsi+0x1],0x20
  41026c:	jle    410278 <main@@Base+0xb928>
  41026e:	inc    rsi
  410271:	cmp    rsi,r14
  410274:	jne    41028d <main@@Base+0xb93d>
  410276:	jmp    4102d5 <main@@Base+0xb985>
  410278:	mov    rdi,QWORD PTR [rsp+0x20]
  41027d:	mov    rdx,r14
  410280:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410285:	mov    rsi,rax
  410288:	cmp    rsi,r14
  41028b:	je     4102d5 <main@@Base+0xb985>
  41028d:	cmp    BYTE PTR [rsi],0x3a
  410290:	jne    4102d5 <main@@Base+0xb985>
  410292:	lea    rbp,[rsi+0x1]
  410296:	mov    rax,r14
  410299:	sub    rax,rbp
  41029c:	cmp    rax,0x2
  4102a0:	jl     410423 <main@@Base+0xbad3>
  4102a6:	cmp    BYTE PTR [rbp+0x0],0x20
  4102aa:	jg     410436 <main@@Base+0xbae6>
  4102b0:	jne    410423 <main@@Base+0xbad3>
  4102b6:	cmp    BYTE PTR [rsi+0x2],0x20
  4102ba:	jle    410423 <main@@Base+0xbad3>
  4102c0:	add    rsi,0x2
  4102c4:	mov    rbp,rsi
  4102c7:	cmp    r12,rbp
  4102ca:	jne    41043b <main@@Base+0xbaeb>
  4102d0:	jmp    4104b7 <main@@Base+0xbb67>
  4102d5:	mov    rdi,QWORD PTR [rsp+0x20]
  4102da:	mov    rdx,r14
  4102dd:	mov    ecx,0x4
  4102e2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4102e7:	jmp    410433 <main@@Base+0xbae3>
  4102ec:	mov    rdi,QWORD PTR [rsp+0x20]
  4102f1:	mov    rsi,rbp
  4102f4:	mov    rdx,r14
  4102f7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4102fc:	mov    rbp,rax
  4102ff:	cmp    r12,rbp
  410302:	je     4104b7 <main@@Base+0xbb67>
  410308:	mov    QWORD PTR [rsp+0x18],0x0
  410311:	mov    DWORD PTR [rsp+0x28],0x0
  410319:	mov    BYTE PTR [rsp+0xc],0x0
  41031e:	cmp    rbp,r14
  410321:	je     410371 <main@@Base+0xba21>
  410323:	mov    r13,QWORD PTR [rsp+0x20]
  410328:	mov    rdi,r13
  41032b:	mov    rsi,rbp
  41032e:	mov    rdx,r14
  410331:	lea    rcx,[rsp+0x28]
  410336:	lea    r8,[rsp+0x18]
  41033b:	call   41fec0 <flatcc_json_parser_integer@@Base>
  410340:	cmp    rax,rbp
  410343:	mov    r12,QWORD PTR [rsp]
  410347:	je     410387 <main@@Base+0xba37>
  410349:	mov    rbx,rax
  41034c:	mov    r15,QWORD PTR [rsp+0x18]
  410351:	cmp    DWORD PTR [rsp+0x28],0x0
  410356:	je     410394 <main@@Base+0xba44>
  410358:	cmp    r15,0x81
  41035f:	jb     4103bd <main@@Base+0xba6d>
  410361:	mov    rdi,r13
  410364:	mov    rsi,rbx
  410367:	mov    rdx,r14
  41036a:	mov    ecx,0x8
  41036f:	jmp    4103ab <main@@Base+0xba5b>
  410371:	xor    r15d,r15d
  410374:	mov    rbx,r14
  410377:	mov    r13,QWORD PTR [rsp+0x20]
  41037c:	mov    r12,QWORD PTR [rsp]
  410380:	cmp    rbp,rbx
  410383:	jne    4103ff <main@@Base+0xbaaf>
  410385:	jmp    4103ca <main@@Base+0xba7a>
  410387:	xor    r15d,r15d
  41038a:	mov    rbx,rbp
  41038d:	cmp    rbp,rbx
  410390:	jne    4103ff <main@@Base+0xbaaf>
  410392:	jmp    4103ca <main@@Base+0xba7a>
  410394:	cmp    r15,0x80
  41039b:	jb     4103c0 <main@@Base+0xba70>
  41039d:	mov    rdi,r13
  4103a0:	mov    rsi,rbx
  4103a3:	mov    rdx,r14
  4103a6:	mov    ecx,0x7
  4103ab:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4103b0:	mov    rbx,rax
  4103b3:	xor    r15d,r15d
  4103b6:	cmp    rbp,rbx
  4103b9:	jne    4103ff <main@@Base+0xbaaf>
  4103bb:	jmp    4103ca <main@@Base+0xba7a>
  4103bd:	neg    r15
  4103c0:	mov    BYTE PTR [rsp+0xc],r15b
  4103c5:	cmp    rbp,rbx
  4103c8:	jne    4103ff <main@@Base+0xbaaf>
  4103ca:	mov    rdi,r13
  4103cd:	mov    rsi,rbp
  4103d0:	mov    rdx,r14
  4103d3:	lea    rcx,[rip+0x190a6]        # 429480 <filename@@Base+0x3b0>
  4103da:	lea    r8,[rsp+0xc]
  4103df:	call   40eea0 <main@@Base+0xa550>
  4103e4:	mov    rbx,rax
  4103e7:	cmp    rax,rbp
  4103ea:	je     412873 <main@@Base+0xdf23>
  4103f0:	cmp    rbx,r14
  4103f3:	je     412873 <main@@Base+0xdf23>
  4103f9:	movzx  r15d,BYTE PTR [rsp+0xc]
  4103ff:	cmp    r15b,0x2
  410403:	jne    410410 <main@@Base+0xbac0>
  410405:	test   BYTE PTR [r13+0x10],0x2
  41040a:	je     4109eb <main@@Base+0xc09b>
  410410:	mov    rdi,QWORD PTR [r13+0x0]
  410414:	mov    edx,0x1
  410419:	mov    esi,0x1
  41041e:	jmp    4109d5 <main@@Base+0xc085>
  410423:	mov    rdi,QWORD PTR [rsp+0x20]
  410428:	mov    rsi,rbp
  41042b:	mov    rdx,r14
  41042e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410433:	mov    rbp,rax
  410436:	cmp    r12,rbp
  410439:	je     4104b7 <main@@Base+0xbb67>
  41043b:	mov    QWORD PTR [rsp+0x18],0x0
  410444:	mov    DWORD PTR [rsp+0x28],0x0
  41044c:	mov    BYTE PTR [rsp+0xc],0x0
  410451:	cmp    rbp,r14
  410454:	je     410584 <main@@Base+0xbc34>
  41045a:	mov    r13,QWORD PTR [rsp+0x20]
  41045f:	mov    rdi,r13
  410462:	mov    rsi,rbp
  410465:	mov    rdx,r14
  410468:	lea    rcx,[rsp+0x28]
  41046d:	lea    r8,[rsp+0x18]
  410472:	call   41fec0 <flatcc_json_parser_integer@@Base>
  410477:	cmp    rax,rbp
  41047a:	mov    r12,QWORD PTR [rsp]
  41047e:	je     410644 <main@@Base+0xbcf4>
  410484:	mov    rbx,rax
  410487:	mov    r15,QWORD PTR [rsp+0x18]
  41048c:	cmp    DWORD PTR [rsp+0x28],0x0
  410491:	je     41068e <main@@Base+0xbd3e>
  410497:	cmp    r15,0x81
  41049e:	jb     41072f <main@@Base+0xbddf>
  4104a4:	mov    rdi,r13
  4104a7:	mov    rsi,rbx
  4104aa:	mov    rdx,r14
  4104ad:	mov    ecx,0x8
  4104b2:	jmp    4106a9 <main@@Base+0xbd59>
  4104b7:	mov    rax,r15
  4104ba:	movabs rcx,0xffffff0000000000
  4104c4:	and    rax,rcx
  4104c7:	movabs rcx,0x7563320000000000
  4104d1:	cmp    rax,rcx
  4104d4:	jne    41051a <main@@Base+0xbbca>
  4104d6:	mov    rbp,r12
  4104d9:	cmp    r13,0x4
  4104dd:	mov    r13,QWORD PTR [rsp+0x20]
  4104e2:	jl     4107a3 <main@@Base+0xbe53>
  4104e8:	cmp    DWORD PTR [r13+0x14],0x0
  4104ed:	movzx  eax,BYTE PTR [r12+0x3]
  4104f3:	je     4105a1 <main@@Base+0xbc51>
  4104f9:	cmp    al,0x21
  4104fb:	jl     410508 <main@@Base+0xbbb8>
  4104fd:	mov    rbp,r12
  410500:	cmp    al,0x3a
  410502:	jne    4107a3 <main@@Base+0xbe53>
  410508:	lea    rsi,[r12+0x3]
  41050d:	mov    DWORD PTR [r13+0x14],0x0
  410515:	jmp    4105b1 <main@@Base+0xbc61>
  41051a:	movabs rax,0xffff000000000000
  410524:	and    r15,rax
  410527:	movabs rax,0x7563000000000000
  410531:	cmp    r15,rax
  410534:	jne    41057a <main@@Base+0xbc2a>
  410536:	mov    rbp,r12
  410539:	cmp    r13,0x3
  41053d:	mov    r13,QWORD PTR [rsp+0x20]
  410542:	jl     4108c2 <main@@Base+0xbf72>
  410548:	cmp    DWORD PTR [r13+0x14],0x0
  41054d:	movzx  eax,BYTE PTR [r12+0x2]
  410553:	je     410658 <main@@Base+0xbd08>
  410559:	cmp    al,0x21
  41055b:	jl     410568 <main@@Base+0xbc18>
  41055d:	mov    rbp,r12
  410560:	cmp    al,0x3a
  410562:	jne    4108c2 <main@@Base+0xbf72>
  410568:	lea    rsi,[r12+0x2]
  41056d:	mov    DWORD PTR [r13+0x14],0x0
  410575:	jmp    410668 <main@@Base+0xbd18>
  41057a:	mov    r13,QWORD PTR [rsp+0x20]
  41057f:	jmp    41091d <main@@Base+0xbfcd>
  410584:	xor    r15d,r15d
  410587:	mov    rbx,r14
  41058a:	mov    r13,QWORD PTR [rsp+0x20]
  41058f:	mov    r12,QWORD PTR [rsp]
  410593:	cmp    rbp,rbx
  410596:	jne    410771 <main@@Base+0xbe21>
  41059c:	jmp    41073c <main@@Base+0xbdec>
  4105a1:	mov    rbp,r12
  4105a4:	cmp    al,0x22
  4105a6:	jne    4107a3 <main@@Base+0xbe53>
  4105ac:	lea    rsi,[r12+0x4]
  4105b1:	mov    rax,r14
  4105b4:	sub    rax,rsi
  4105b7:	cmp    rax,0x2
  4105bb:	jl     4105d4 <main@@Base+0xbc84>
  4105bd:	cmp    BYTE PTR [rsi],0x20
  4105c0:	jg     4105e2 <main@@Base+0xbc92>
  4105c2:	jne    4105d4 <main@@Base+0xbc84>
  4105c4:	cmp    BYTE PTR [rsi+0x1],0x20
  4105c8:	jle    4105d4 <main@@Base+0xbc84>
  4105ca:	inc    rsi
  4105cd:	cmp    rsi,r14
  4105d0:	jne    4105e7 <main@@Base+0xbc97>
  4105d2:	jmp    41062f <main@@Base+0xbcdf>
  4105d4:	mov    rdi,r13
  4105d7:	mov    rdx,r14
  4105da:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4105df:	mov    rsi,rax
  4105e2:	cmp    rsi,r14
  4105e5:	je     41062f <main@@Base+0xbcdf>
  4105e7:	cmp    BYTE PTR [rsi],0x3a
  4105ea:	jne    41062f <main@@Base+0xbcdf>
  4105ec:	lea    rbp,[rsi+0x1]
  4105f0:	mov    rax,r14
  4105f3:	sub    rax,rbp
  4105f6:	cmp    rax,0x2
  4105fa:	jl     410792 <main@@Base+0xbe42>
  410600:	cmp    BYTE PTR [rbp+0x0],0x20
  410604:	jg     4107a3 <main@@Base+0xbe53>
  41060a:	jne    410792 <main@@Base+0xbe42>
  410610:	cmp    BYTE PTR [rsi+0x2],0x20
  410614:	jle    410792 <main@@Base+0xbe42>
  41061a:	add    rsi,0x2
  41061e:	mov    rbp,rsi
  410621:	cmp    r12,rbp
  410624:	jne    4107ac <main@@Base+0xbe5c>
  41062a:	jmp    41091d <main@@Base+0xbfcd>
  41062f:	mov    rdi,r13
  410632:	mov    rdx,r14
  410635:	mov    ecx,0x4
  41063a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41063f:	jmp    4107a0 <main@@Base+0xbe50>
  410644:	xor    r15d,r15d
  410647:	mov    rbx,rbp
  41064a:	cmp    rbp,rbx
  41064d:	jne    410771 <main@@Base+0xbe21>
  410653:	jmp    41073c <main@@Base+0xbdec>
  410658:	mov    rbp,r12
  41065b:	cmp    al,0x22
  41065d:	jne    4108c2 <main@@Base+0xbf72>
  410663:	lea    rsi,[r12+0x3]
  410668:	mov    rax,r14
  41066b:	sub    rax,rsi
  41066e:	cmp    rax,0x2
  410672:	jl     4106bf <main@@Base+0xbd6f>
  410674:	cmp    BYTE PTR [rsi],0x20
  410677:	jg     4106cd <main@@Base+0xbd7d>
  410679:	jne    4106bf <main@@Base+0xbd6f>
  41067b:	cmp    BYTE PTR [rsi+0x1],0x20
  41067f:	jle    4106bf <main@@Base+0xbd6f>
  410681:	inc    rsi
  410684:	cmp    rsi,r14
  410687:	jne    4106d2 <main@@Base+0xbd82>
  410689:	jmp    41071a <main@@Base+0xbdca>
  41068e:	cmp    r15,0x80
  410695:	jb     410732 <main@@Base+0xbde2>
  41069b:	mov    rdi,r13
  41069e:	mov    rsi,rbx
  4106a1:	mov    rdx,r14
  4106a4:	mov    ecx,0x7
  4106a9:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4106ae:	mov    rbx,rax
  4106b1:	xor    r15d,r15d
  4106b4:	cmp    rbp,rbx
  4106b7:	jne    410771 <main@@Base+0xbe21>
  4106bd:	jmp    41073c <main@@Base+0xbdec>
  4106bf:	mov    rdi,r13
  4106c2:	mov    rdx,r14
  4106c5:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4106ca:	mov    rsi,rax
  4106cd:	cmp    rsi,r14
  4106d0:	je     41071a <main@@Base+0xbdca>
  4106d2:	cmp    BYTE PTR [rsi],0x3a
  4106d5:	jne    41071a <main@@Base+0xbdca>
  4106d7:	lea    rbp,[rsi+0x1]
  4106db:	mov    rax,r14
  4106de:	sub    rax,rbp
  4106e1:	cmp    rax,0x2
  4106e5:	jl     4108b1 <main@@Base+0xbf61>
  4106eb:	cmp    BYTE PTR [rbp+0x0],0x20
  4106ef:	jg     4108c2 <main@@Base+0xbf72>
  4106f5:	jne    4108b1 <main@@Base+0xbf61>
  4106fb:	cmp    BYTE PTR [rsi+0x2],0x20
  4106ff:	jle    4108b1 <main@@Base+0xbf61>
  410705:	add    rsi,0x2
  410709:	mov    rbp,rsi
  41070c:	cmp    r12,rbp
  41070f:	jne    4108c7 <main@@Base+0xbf77>
  410715:	jmp    41091d <main@@Base+0xbfcd>
  41071a:	mov    rdi,r13
  41071d:	mov    rdx,r14
  410720:	mov    ecx,0x4
  410725:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41072a:	jmp    4108bf <main@@Base+0xbf6f>
  41072f:	neg    r15
  410732:	mov    BYTE PTR [rsp+0xc],r15b
  410737:	cmp    rbp,rbx
  41073a:	jne    410771 <main@@Base+0xbe21>
  41073c:	mov    rdi,r13
  41073f:	mov    rsi,rbp
  410742:	mov    rdx,r14
  410745:	lea    rcx,[rip+0x18d54]        # 4294a0 <filename@@Base+0x3d0>
  41074c:	lea    r8,[rsp+0xc]
  410751:	call   40eea0 <main@@Base+0xa550>
  410756:	mov    rbx,rax
  410759:	cmp    rax,rbp
  41075c:	je     412873 <main@@Base+0xdf23>
  410762:	cmp    rbx,r14
  410765:	je     412873 <main@@Base+0xdf23>
  41076b:	movzx  r15d,BYTE PTR [rsp+0xc]
  410771:	cmp    r15b,0x2
  410775:	jne    410782 <main@@Base+0xbe32>
  410777:	test   BYTE PTR [r13+0x10],0x2
  41077c:	je     4109eb <main@@Base+0xc09b>
  410782:	mov    rdi,QWORD PTR [r13+0x0]
  410786:	mov    edx,0x1
  41078b:	xor    esi,esi
  41078d:	jmp    4109d5 <main@@Base+0xc085>
  410792:	mov    rdi,r13
  410795:	mov    rsi,rbp
  410798:	mov    rdx,r14
  41079b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4107a0:	mov    rbp,rax
  4107a3:	cmp    r12,rbp
  4107a6:	je     41091d <main@@Base+0xbfcd>
  4107ac:	mov    QWORD PTR [rsp+0x18],0x0
  4107b5:	mov    DWORD PTR [rsp+0x28],0x0
  4107bd:	mov    BYTE PTR [rsp+0xc],0x0
  4107c2:	cmp    rbp,r14
  4107c5:	je     410802 <main@@Base+0xbeb2>
  4107c7:	mov    rdi,r13
  4107ca:	mov    rsi,rbp
  4107cd:	mov    rdx,r14
  4107d0:	lea    rcx,[rsp+0x28]
  4107d5:	lea    r8,[rsp+0x18]
  4107da:	call   41fec0 <flatcc_json_parser_integer@@Base>
  4107df:	cmp    rax,rbp
  4107e2:	mov    r12,QWORD PTR [rsp]
  4107e6:	je     410813 <main@@Base+0xbec3>
  4107e8:	mov    rbx,rax
  4107eb:	cmp    DWORD PTR [rsp+0x28],0x0
  4107f0:	je     410820 <main@@Base+0xbed0>
  4107f2:	mov    rdi,r13
  4107f5:	mov    rsi,rbx
  4107f8:	mov    rdx,r14
  4107fb:	mov    ecx,0x8
  410800:	jmp    41083c <main@@Base+0xbeec>
  410802:	xor    r15d,r15d
  410805:	mov    rbx,r14
  410808:	mov    r12,QWORD PTR [rsp]
  41080c:	cmp    rbp,rbx
  41080f:	jne    410881 <main@@Base+0xbf31>
  410811:	jmp    41084c <main@@Base+0xbefc>
  410813:	xor    r15d,r15d
  410816:	mov    rbx,rbp
  410819:	cmp    rbp,rbx
  41081c:	jne    410881 <main@@Base+0xbf31>
  41081e:	jmp    41084c <main@@Base+0xbefc>
  410820:	mov    r15,QWORD PTR [rsp+0x18]
  410825:	cmp    r15,0x100
  41082c:	jb     4108a5 <main@@Base+0xbf55>
  41082e:	mov    rdi,r13
  410831:	mov    rsi,rbx
  410834:	mov    rdx,r14
  410837:	mov    ecx,0x7
  41083c:	call   41e300 <flatcc_json_parser_set_error@@Base>
  410841:	mov    rbx,rax
  410844:	xor    r15d,r15d
  410847:	cmp    rbp,rbx
  41084a:	jne    410881 <main@@Base+0xbf31>
  41084c:	mov    rdi,r13
  41084f:	mov    rsi,rbp
  410852:	mov    rdx,r14
  410855:	lea    rcx,[rip+0x18c64]        # 4294c0 <filename@@Base+0x3f0>
  41085c:	lea    r8,[rsp+0xc]
  410861:	call   40f0b0 <main@@Base+0xa760>
  410866:	mov    rbx,rax
  410869:	cmp    rax,rbp
  41086c:	je     412873 <main@@Base+0xdf23>
  410872:	cmp    rbx,r14
  410875:	je     412873 <main@@Base+0xdf23>
  41087b:	movzx  r15d,BYTE PTR [rsp+0xc]
  410881:	cmp    r15b,0x2
  410885:	jne    410892 <main@@Base+0xbf42>
  410887:	test   BYTE PTR [r13+0x10],0x2
  41088c:	je     4109eb <main@@Base+0xc09b>
  410892:	mov    rdi,QWORD PTR [r13+0x0]
  410896:	mov    edx,0x1
  41089b:	mov    esi,0x3
  4108a0:	jmp    4109d5 <main@@Base+0xc085>
  4108a5:	mov    BYTE PTR [rsp+0xc],r15b
  4108aa:	cmp    rbp,rbx
  4108ad:	jne    410881 <main@@Base+0xbf31>
  4108af:	jmp    41084c <main@@Base+0xbefc>
  4108b1:	mov    rdi,r13
  4108b4:	mov    rsi,rbp
  4108b7:	mov    rdx,r14
  4108ba:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4108bf:	mov    rbp,rax
  4108c2:	cmp    r12,rbp
  4108c5:	je     41091d <main@@Base+0xbfcd>
  4108c7:	mov    QWORD PTR [rsp+0x18],0x0
  4108d0:	mov    DWORD PTR [rsp+0x28],0x0
  4108d8:	mov    BYTE PTR [rsp+0xc],0x0
  4108dd:	cmp    rbp,r14
  4108e0:	je     410937 <main@@Base+0xbfe7>
  4108e2:	mov    rdi,r13
  4108e5:	mov    rsi,rbp
  4108e8:	mov    rdx,r14
  4108eb:	lea    rcx,[rsp+0x28]
  4108f0:	lea    r8,[rsp+0x18]
  4108f5:	call   41fec0 <flatcc_json_parser_integer@@Base>
  4108fa:	cmp    rax,rbp
  4108fd:	mov    r12,QWORD PTR [rsp]
  410901:	je     410948 <main@@Base+0xbff8>
  410903:	mov    rbx,rax
  410906:	cmp    DWORD PTR [rsp+0x28],0x0
  41090b:	je     410955 <main@@Base+0xc005>
  41090d:	mov    rdi,r13
  410910:	mov    rsi,rbx
  410913:	mov    rdx,r14
  410916:	mov    ecx,0x8
  41091b:	jmp    410975 <main@@Base+0xc025>
  41091d:	mov    rdi,r13
  410920:	mov    rsi,r12
  410923:	mov    rdx,r14
  410926:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41092b:	mov    rbx,rax
  41092e:	mov    r12,QWORD PTR [rsp]
  410932:	jmp    4109eb <main@@Base+0xc09b>
  410937:	xor    r15d,r15d
  41093a:	mov    rbx,r14
  41093d:	mov    r12,QWORD PTR [rsp]
  410941:	cmp    rbp,rbx
  410944:	jne    4109ba <main@@Base+0xc06a>
  410946:	jmp    410985 <main@@Base+0xc035>
  410948:	xor    r15d,r15d
  41094b:	mov    rbx,rbp
  41094e:	cmp    rbp,rbx
  410951:	jne    4109ba <main@@Base+0xc06a>
  410953:	jmp    410985 <main@@Base+0xc035>
  410955:	mov    r15,QWORD PTR [rsp+0x18]
  41095a:	cmp    r15,0x100
  410961:	jb     410a78 <main@@Base+0xc128>
  410967:	mov    rdi,r13
  41096a:	mov    rsi,rbx
  41096d:	mov    rdx,r14
  410970:	mov    ecx,0x7
  410975:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41097a:	mov    rbx,rax
  41097d:	xor    r15d,r15d
  410980:	cmp    rbp,rbx
  410983:	jne    4109ba <main@@Base+0xc06a>
  410985:	mov    rdi,r13
  410988:	mov    rsi,rbp
  41098b:	mov    rdx,r14
  41098e:	lea    rcx,[rip+0x18b4b]        # 4294e0 <filename@@Base+0x410>
  410995:	lea    r8,[rsp+0xc]
  41099a:	call   40f0b0 <main@@Base+0xa760>
  41099f:	mov    rbx,rax
  4109a2:	cmp    rax,rbp
  4109a5:	je     412873 <main@@Base+0xdf23>
  4109ab:	cmp    rbx,r14
  4109ae:	je     412873 <main@@Base+0xdf23>
  4109b4:	movzx  r15d,BYTE PTR [rsp+0xc]
  4109ba:	cmp    r15b,0x2
  4109be:	jne    4109c7 <main@@Base+0xc077>
  4109c0:	test   BYTE PTR [r13+0x10],0x2
  4109c5:	je     4109eb <main@@Base+0xc09b>
  4109c7:	mov    rdi,QWORD PTR [r13+0x0]
  4109cb:	mov    edx,0x1
  4109d0:	mov    esi,0x2
  4109d5:	mov    ecx,0x1
  4109da:	call   41c310 <flatcc_builder_table_add@@Base>
  4109df:	test   rax,rax
  4109e2:	je     412873 <main@@Base+0xdf23>
  4109e8:	mov    BYTE PTR [rax],r15b
  4109eb:	mov    rax,r14
  4109ee:	sub    rax,rbx
  4109f1:	cmp    rax,0x2
  4109f5:	jl     410a0e <main@@Base+0xc0be>
  4109f7:	cmp    BYTE PTR [rbx],0x20
  4109fa:	jg     410a1f <main@@Base+0xc0cf>
  4109fc:	jne    410a0e <main@@Base+0xc0be>
  4109fe:	cmp    BYTE PTR [rbx+0x1],0x20
  410a02:	jle    410a0e <main@@Base+0xc0be>
  410a04:	inc    rbx
  410a07:	cmp    rbx,r14
  410a0a:	jne    410a24 <main@@Base+0xc0d4>
  410a0c:	jmp    410a8b <main@@Base+0xc13b>
  410a0e:	mov    rdi,r13
  410a11:	mov    rsi,rbx
  410a14:	mov    rdx,r14
  410a17:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410a1c:	mov    rbx,rax
  410a1f:	cmp    rbx,r14
  410a22:	je     410a8b <main@@Base+0xc13b>
  410a24:	movzx  eax,BYTE PTR [rbx]
  410a27:	cmp    al,0x2c
  410a29:	jne    41281f <main@@Base+0xdecf>
  410a2f:	lea    rsi,[rbx+0x1]
  410a33:	mov    rax,r14
  410a36:	sub    rax,rsi
  410a39:	cmp    rax,0x2
  410a3d:	jl     410a5a <main@@Base+0xc10a>
  410a3f:	cmp    BYTE PTR [rsi],0x20
  410a42:	jg     410a68 <main@@Base+0xc118>
  410a44:	jne    410a5a <main@@Base+0xc10a>
  410a46:	cmp    BYTE PTR [rbx+0x2],0x20
  410a4a:	jle    410a5a <main@@Base+0xc10a>
  410a4c:	add    rbx,0x2
  410a50:	mov    rsi,rbx
  410a53:	cmp    rsi,r14
  410a56:	jne    410a6d <main@@Base+0xc11d>
  410a58:	jmp    410a9e <main@@Base+0xc14e>
  410a5a:	mov    rdi,r13
  410a5d:	mov    rdx,r14
  410a60:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410a65:	mov    rsi,rax
  410a68:	cmp    rsi,r14
  410a6b:	je     410a9e <main@@Base+0xc14e>
  410a6d:	cmp    BYTE PTR [rsi],0x7d
  410a70:	jne    41000f <main@@Base+0xb6bf>
  410a76:	jmp    410aa9 <main@@Base+0xc159>
  410a78:	mov    BYTE PTR [rsp+0xc],r15b
  410a7d:	cmp    rbp,rbx
  410a80:	jne    4109ba <main@@Base+0xc06a>
  410a86:	jmp    410985 <main@@Base+0xc035>
  410a8b:	mov    rbp,r14
  410a8e:	cmp    DWORD PTR [r13+0x20],0x0
  410a93:	jne    41294b <main@@Base+0xdffb>
  410a99:	jmp    41293a <main@@Base+0xdfea>
  410a9e:	mov    rdi,r13
  410aa1:	mov    rsi,r14
  410aa4:	jmp    4129a5 <main@@Base+0xe055>
  410aa9:	lea    rbp,[rsi+0x1]
  410aad:	mov    rax,r14
  410ab0:	sub    rax,rbp
  410ab3:	cmp    rax,0x2
  410ab7:	jl     412860 <main@@Base+0xdf10>
  410abd:	cmp    BYTE PTR [rbp+0x0],0x20
  410ac1:	jg     40fdd5 <main@@Base+0xb485>
  410ac7:	jne    412860 <main@@Base+0xdf10>
  410acd:	cmp    BYTE PTR [rsi+0x2],0x20
  410ad1:	jle    412860 <main@@Base+0xdf10>
  410ad7:	add    rsi,0x2
  410adb:	mov    rbp,rsi
  410ade:	cmp    DWORD PTR [r13+0x20],0x0
  410ae3:	jne    41294b <main@@Base+0xdffb>
  410ae9:	jmp    41293a <main@@Base+0xdfea>
  410aee:	mov    rsi,rcx
  410af1:	movabs rax,0x6d616e79616e7900
  410afb:	lea    rcx,[r13+0x14]
  410aff:	mov    QWORD PTR [rsp+0x10],rcx
  410b04:	add    rax,0x5f
  410b08:	mov    QWORD PTR [rsp+0x30],rax
  410b0d:	mov    QWORD PTR [rsp],r12
  410b11:	mov    r15,r14
  410b14:	cmp    rsi,r14
  410b17:	je     410b56 <main@@Base+0xc206>
  410b19:	mov    al,BYTE PTR [rsi]
  410b1b:	cmp    al,0x2e
  410b1d:	je     410b33 <main@@Base+0xc1e3>
  410b1f:	cmp    al,0x22
  410b21:	jne    410b48 <main@@Base+0xc1f8>
  410b23:	inc    rsi
  410b26:	mov    rax,QWORD PTR [rsp+0x10]
  410b2b:	mov    DWORD PTR [rax],0x0
  410b31:	jmp    410b53 <main@@Base+0xc203>
  410b33:	mov    rdi,r13
  410b36:	mov    rdx,r14
  410b39:	mov    ecx,0x5
  410b3e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  410b43:	mov    r15,rax
  410b46:	jmp    410b56 <main@@Base+0xc206>
  410b48:	mov    rax,QWORD PTR [rsp+0x10]
  410b4d:	mov    DWORD PTR [rax],0x1
  410b53:	mov    r15,rsi
  410b56:	mov    rbx,r14
  410b59:	sub    rbx,r15
  410b5c:	cmp    rbx,0x8
  410b60:	jb     410b94 <main@@Base+0xc244>
  410b62:	movbe  rbp,QWORD PTR [r15]
  410b67:	cmp    rbp,QWORD PTR [rsp+0x30]
  410b6c:	jne    410c1a <main@@Base+0xc2ca>
  410b72:	mov    r12,r13
  410b75:	lea    r13,[r15+0x8]
  410b79:	mov    rax,r14
  410b7c:	sub    rax,r13
  410b7f:	cmp    rax,0x8
  410b83:	jb     410c7a <main@@Base+0xc32a>
  410b89:	movbe  rcx,QWORD PTR [r13+0x0]
  410b8f:	jmp    410cf9 <main@@Base+0xc3a9>
  410b94:	lea    rax,[rbx-0x1]
  410b98:	cmp    rax,0x6
  410b9c:	ja     41124a <main@@Base+0xc8fa>
  410ba2:	lea    rcx,[rip+0x1197f]        # 422528 <_IO_stdin_used@@Base+0x528>
  410ba9:	movsxd rbp,DWORD PTR [rcx+rax*4]
  410bad:	add    rbp,rcx
  410bb0:	xor    r8d,r8d
  410bb3:	xor    eax,eax
  410bb5:	xor    edx,edx
  410bb7:	xor    esi,esi
  410bb9:	xor    edi,edi
  410bbb:	xor    ecx,ecx
  410bbd:	jmp    rbp
  410bbf:	movsx  r8,BYTE PTR [r15+0x6]
  410bc4:	shl    r8,0x8
  410bc8:	movsx  rax,BYTE PTR [r15+0x5]
  410bcd:	shl    rax,0x10
  410bd1:	or     rax,r8
  410bd4:	movsx  rdx,BYTE PTR [r15+0x4]
  410bd9:	shl    rdx,0x18
  410bdd:	or     rdx,rax
  410be0:	movsx  rsi,BYTE PTR [r15+0x3]
  410be5:	shl    rsi,0x20
  410be9:	or     rsi,rdx
  410bec:	movsx  rdi,BYTE PTR [r15+0x2]
  410bf1:	shl    rdi,0x28
  410bf5:	or     rdi,rsi
  410bf8:	movsx  rcx,BYTE PTR [r15+0x1]
  410bfd:	shl    rcx,0x30
  410c01:	or     rcx,rdi
  410c04:	movzx  ebp,BYTE PTR [r15]
  410c08:	shl    rbp,0x38
  410c0c:	or     rbp,rcx
  410c0f:	cmp    rbp,QWORD PTR [rsp+0x30]
  410c14:	je     410b72 <main@@Base+0xc222>
  410c1a:	mov    rax,rbp
  410c1d:	and    rax,0xffffffffffffff00
  410c23:	movabs rcx,0x6d616e79616e7900
  410c2d:	cmp    rax,rcx
  410c30:	jne    410e2d <main@@Base+0xc4dd>
  410c36:	mov    rax,r15
  410c39:	cmp    rbx,0x8
  410c3d:	jl     4110d0 <main@@Base+0xc780>
  410c43:	mov    rax,QWORD PTR [rsp+0x10]
  410c48:	cmp    DWORD PTR [rax],0x0
  410c4b:	mov    cl,BYTE PTR [r15+0x7]
  410c4f:	je     410d3f <main@@Base+0xc3ef>
  410c55:	cmp    cl,0x21
  410c58:	jl     410c66 <main@@Base+0xc316>
  410c5a:	mov    rax,r15
  410c5d:	cmp    cl,0x3a
  410c60:	jne    4110d0 <main@@Base+0xc780>
  410c66:	lea    rsi,[r15+0x7]
  410c6a:	mov    rax,QWORD PTR [rsp+0x10]
  410c6f:	mov    DWORD PTR [rax],0x0
  410c75:	jmp    410d4f <main@@Base+0xc3ff>
  410c7a:	lea    rcx,[rax-0x1]
  410c7e:	cmp    rcx,0x6
  410c82:	ja     410f58 <main@@Base+0xc608>
  410c88:	lea    rdx,[rip+0x11979]        # 422608 <_IO_stdin_used@@Base+0x608>
  410c8f:	mov    rsi,rdx
  410c92:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  410c96:	add    rdx,rsi
  410c99:	xor    r8d,r8d
  410c9c:	xor    ecx,ecx
  410c9e:	xor    esi,esi
  410ca0:	xor    edi,edi
  410ca2:	xor    ebx,ebx
  410ca4:	xor    ebp,ebp
  410ca6:	jmp    rdx
  410ca8:	movsx  r8,BYTE PTR [r15+0xe]
  410cad:	shl    r8,0x8
  410cb1:	movsx  rcx,BYTE PTR [r15+0xd]
  410cb6:	shl    rcx,0x10
  410cba:	or     rcx,r8
  410cbd:	movsx  rsi,BYTE PTR [r15+0xc]
  410cc2:	shl    rsi,0x18
  410cc6:	or     rsi,rcx
  410cc9:	movsx  rdi,BYTE PTR [r15+0xb]
  410cce:	shl    rdi,0x20
  410cd2:	or     rdi,rsi
  410cd5:	movsx  rbx,BYTE PTR [r15+0xa]
  410cda:	shl    rbx,0x28
  410cde:	or     rbx,rdi
  410ce1:	movsx  rbp,BYTE PTR [r15+0x9]
  410ce6:	shl    rbp,0x30
  410cea:	or     rbp,rbx
  410ced:	movzx  ecx,BYTE PTR [r13+0x0]
  410cf2:	shl    rcx,0x38
  410cf6:	or     rcx,rbp
  410cf9:	shr    rcx,0x20
  410cfd:	cmp    rcx,0x74797065
  410d04:	jne    410f58 <main@@Base+0xc608>
  410d0a:	cmp    rax,0x5
  410d0e:	jl     410f58 <main@@Base+0xc608>
  410d14:	mov    rax,QWORD PTR [rsp+0x10]
  410d19:	cmp    DWORD PTR [rax],0x0
  410d1c:	mov    al,BYTE PTR [r15+0xc]
  410d20:	je     410d75 <main@@Base+0xc425>
  410d22:	cmp    al,0x21
  410d24:	jl     410d2e <main@@Base+0xc3de>
  410d26:	cmp    al,0x3a
  410d28:	jne    410f58 <main@@Base+0xc608>
  410d2e:	add    r15,0xc
  410d32:	mov    rax,QWORD PTR [rsp+0x10]
  410d37:	mov    DWORD PTR [rax],0x0
  410d3d:	jmp    410d81 <main@@Base+0xc431>
  410d3f:	mov    rax,r15
  410d42:	cmp    cl,0x22
  410d45:	jne    4110d0 <main@@Base+0xc780>
  410d4b:	lea    rsi,[r15+0x8]
  410d4f:	mov    rax,r14
  410d52:	sub    rax,rsi
  410d55:	cmp    rax,0x2
  410d59:	jl     410dbd <main@@Base+0xc46d>
  410d5b:	cmp    BYTE PTR [rsi],0x20
  410d5e:	jg     410dcb <main@@Base+0xc47b>
  410d60:	jne    410dbd <main@@Base+0xc46d>
  410d62:	cmp    BYTE PTR [rsi+0x1],0x20
  410d66:	jle    410dbd <main@@Base+0xc46d>
  410d68:	inc    rsi
  410d6b:	cmp    rsi,r14
  410d6e:	jne    410dd0 <main@@Base+0xc480>
  410d70:	jmp    410e14 <main@@Base+0xc4c4>
  410d75:	cmp    al,0x22
  410d77:	jne    410f58 <main@@Base+0xc608>
  410d7d:	add    r15,0xd
  410d81:	mov    rax,r14
  410d84:	sub    rax,r15
  410d87:	cmp    rax,0x2
  410d8b:	jl     410ee0 <main@@Base+0xc590>
  410d91:	cmp    BYTE PTR [r15],0x20
  410d95:	jg     410ef1 <main@@Base+0xc5a1>
  410d9b:	jne    410ee0 <main@@Base+0xc590>
  410da1:	cmp    BYTE PTR [r15+0x1],0x20
  410da6:	jle    410ee0 <main@@Base+0xc590>
  410dac:	inc    r15
  410daf:	cmp    r15,r14
  410db2:	jne    410ef6 <main@@Base+0xc5a6>
  410db8:	jmp    410f3c <main@@Base+0xc5ec>
  410dbd:	mov    rdi,r13
  410dc0:	mov    rdx,r14
  410dc3:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410dc8:	mov    rsi,rax
  410dcb:	cmp    rsi,r14
  410dce:	je     410e14 <main@@Base+0xc4c4>
  410dd0:	cmp    BYTE PTR [rsi],0x3a
  410dd3:	jne    410e14 <main@@Base+0xc4c4>
  410dd5:	lea    rax,[rsi+0x1]
  410dd9:	mov    rcx,r14
  410ddc:	sub    rcx,rax
  410ddf:	cmp    rcx,0x2
  410de3:	jl     4110c2 <main@@Base+0xc772>
  410de9:	cmp    BYTE PTR [rax],0x20
  410dec:	jg     4110d0 <main@@Base+0xc780>
  410df2:	jne    4110c2 <main@@Base+0xc772>
  410df8:	cmp    BYTE PTR [rsi+0x2],0x20
  410dfc:	jle    4110c2 <main@@Base+0xc772>
  410e02:	add    rsi,0x2
  410e06:	mov    rax,rsi
  410e09:	cmp    r15,rax
  410e0c:	jne    4110d9 <main@@Base+0xc789>
  410e12:	jmp    410e2d <main@@Base+0xc4dd>
  410e14:	mov    rdi,r13
  410e17:	mov    rdx,r14
  410e1a:	mov    ecx,0x4
  410e1f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  410e24:	cmp    r15,rax
  410e27:	jne    4110d9 <main@@Base+0xc789>
  410e2d:	mov    rax,rbp
  410e30:	shr    rax,0x10
  410e34:	movabs rcx,0x707265666978
  410e3e:	cmp    rax,rcx
  410e41:	jne    410e87 <main@@Base+0xc537>
  410e43:	mov    rax,r15
  410e46:	cmp    rbx,0x7
  410e4a:	jl     411177 <main@@Base+0xc827>
  410e50:	mov    rax,QWORD PTR [rsp+0x10]
  410e55:	cmp    DWORD PTR [rax],0x0
  410e58:	mov    cl,BYTE PTR [r15+0x6]
  410e5c:	je     410f75 <main@@Base+0xc625>
  410e62:	cmp    cl,0x21
  410e65:	jl     410e73 <main@@Base+0xc523>
  410e67:	mov    rax,r15
  410e6a:	cmp    cl,0x3a
  410e6d:	jne    411177 <main@@Base+0xc827>
  410e73:	lea    rsi,[r15+0x6]
  410e77:	mov    rax,QWORD PTR [rsp+0x10]
  410e7c:	mov    DWORD PTR [rax],0x0
  410e82:	jmp    410f85 <main@@Base+0xc635>
  410e87:	shr    rbp,0x18
  410e8b:	movabs rax,0x6d6f766965
  410e95:	cmp    rbp,rax
  410e98:	jne    41124a <main@@Base+0xc8fa>
  410e9e:	mov    rbp,r15
  410ea1:	cmp    rbx,0x6
  410ea5:	jl     4111be <main@@Base+0xc86e>
  410eab:	mov    rax,QWORD PTR [rsp+0x10]
  410eb0:	cmp    DWORD PTR [rax],0x0
  410eb3:	mov    al,BYTE PTR [r15+0x5]
  410eb7:	je     411020 <main@@Base+0xc6d0>
  410ebd:	cmp    al,0x21
  410ebf:	jl     410ecc <main@@Base+0xc57c>
  410ec1:	mov    rbp,r15
  410ec4:	cmp    al,0x3a
  410ec6:	jne    4111be <main@@Base+0xc86e>
  410ecc:	lea    rsi,[r15+0x5]
  410ed0:	mov    rax,QWORD PTR [rsp+0x10]
  410ed5:	mov    DWORD PTR [rax],0x0
  410edb:	jmp    41102f <main@@Base+0xc6df>
  410ee0:	mov    rdi,r12
  410ee3:	mov    rsi,r15
  410ee6:	mov    rdx,r14
  410ee9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410eee:	mov    r15,rax
  410ef1:	cmp    r15,r14
  410ef4:	je     410f3c <main@@Base+0xc5ec>
  410ef6:	cmp    BYTE PTR [r15],0x3a
  410efa:	jne    410f3c <main@@Base+0xc5ec>
  410efc:	lea    rax,[r15+0x1]
  410f00:	mov    rcx,r14
  410f03:	sub    rcx,rax
  410f06:	cmp    rcx,0x2
  410f0a:	jl     41110c <main@@Base+0xc7bc>
  410f10:	cmp    BYTE PTR [rax],0x20
  410f13:	jg     41111a <main@@Base+0xc7ca>
  410f19:	jne    41110c <main@@Base+0xc7bc>
  410f1f:	cmp    BYTE PTR [r15+0x2],0x20
  410f24:	jle    41110c <main@@Base+0xc7bc>
  410f2a:	add    r15,0x2
  410f2e:	mov    rax,r15
  410f31:	cmp    r13,rax
  410f34:	jne    411123 <main@@Base+0xc7d3>
  410f3a:	jmp    410f58 <main@@Base+0xc608>
  410f3c:	mov    rdi,r12
  410f3f:	mov    rsi,r15
  410f42:	mov    rdx,r14
  410f45:	mov    ecx,0x4
  410f4a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  410f4f:	cmp    r13,rax
  410f52:	jne    411123 <main@@Base+0xc7d3>
  410f58:	mov    rdi,r12
  410f5b:	mov    rsi,r13
  410f5e:	mov    r13,r12
  410f61:	mov    rdx,r14
  410f64:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410f69:	mov    rbp,rax
  410f6c:	mov    r12,QWORD PTR [rsp]
  410f70:	jmp    4112c4 <main@@Base+0xc974>
  410f75:	mov    rax,r15
  410f78:	cmp    cl,0x22
  410f7b:	jne    411177 <main@@Base+0xc827>
  410f81:	lea    rsi,[r15+0x7]
  410f85:	mov    rax,r14
  410f88:	sub    rax,rsi
  410f8b:	cmp    rax,0x2
  410f8f:	jl     410fa8 <main@@Base+0xc658>
  410f91:	cmp    BYTE PTR [rsi],0x20
  410f94:	jg     410fb6 <main@@Base+0xc666>
  410f96:	jne    410fa8 <main@@Base+0xc658>
  410f98:	cmp    BYTE PTR [rsi+0x1],0x20
  410f9c:	jle    410fa8 <main@@Base+0xc658>
  410f9e:	inc    rsi
  410fa1:	cmp    rsi,r14
  410fa4:	jne    410fbb <main@@Base+0xc66b>
  410fa6:	jmp    411002 <main@@Base+0xc6b2>
  410fa8:	mov    rdi,r13
  410fab:	mov    rdx,r14
  410fae:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  410fb3:	mov    rsi,rax
  410fb6:	cmp    rsi,r14
  410fb9:	je     411002 <main@@Base+0xc6b2>
  410fbb:	cmp    BYTE PTR [rsi],0x3a
  410fbe:	jne    411002 <main@@Base+0xc6b2>
  410fc0:	lea    rax,[rsi+0x1]
  410fc4:	mov    rcx,r14
  410fc7:	sub    rcx,rax
  410fca:	cmp    rcx,0x2
  410fce:	jl     411169 <main@@Base+0xc819>
  410fd4:	cmp    BYTE PTR [rax],0x20
  410fd7:	jg     411177 <main@@Base+0xc827>
  410fdd:	jne    411169 <main@@Base+0xc819>
  410fe3:	cmp    BYTE PTR [rsi+0x2],0x20
  410fe7:	jle    411169 <main@@Base+0xc819>
  410fed:	add    rsi,0x2
  410ff1:	mov    rax,rsi
  410ff4:	cmp    r15,rax
  410ff7:	jne    411180 <main@@Base+0xc830>
  410ffd:	jmp    41124a <main@@Base+0xc8fa>
  411002:	mov    rdi,r13
  411005:	mov    rdx,r14
  411008:	mov    ecx,0x4
  41100d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  411012:	cmp    r15,rax
  411015:	jne    411180 <main@@Base+0xc830>
  41101b:	jmp    41124a <main@@Base+0xc8fa>
  411020:	mov    rbp,r15
  411023:	cmp    al,0x22
  411025:	jne    4111be <main@@Base+0xc86e>
  41102b:	lea    rsi,[r15+0x6]
  41102f:	mov    rax,r14
  411032:	sub    rax,rsi
  411035:	cmp    rax,0x2
  411039:	jl     411052 <main@@Base+0xc702>
  41103b:	cmp    BYTE PTR [rsi],0x20
  41103e:	jg     411060 <main@@Base+0xc710>
  411040:	jne    411052 <main@@Base+0xc702>
  411042:	cmp    BYTE PTR [rsi+0x1],0x20
  411046:	jle    411052 <main@@Base+0xc702>
  411048:	inc    rsi
  41104b:	cmp    rsi,r14
  41104e:	jne    411065 <main@@Base+0xc715>
  411050:	jmp    4110ad <main@@Base+0xc75d>
  411052:	mov    rdi,r13
  411055:	mov    rdx,r14
  411058:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41105d:	mov    rsi,rax
  411060:	cmp    rsi,r14
  411063:	je     4110ad <main@@Base+0xc75d>
  411065:	cmp    BYTE PTR [rsi],0x3a
  411068:	jne    4110ad <main@@Base+0xc75d>
  41106a:	lea    rbp,[rsi+0x1]
  41106e:	mov    rax,r14
  411071:	sub    rax,rbp
  411074:	cmp    rax,0x2
  411078:	jl     4111ad <main@@Base+0xc85d>
  41107e:	cmp    BYTE PTR [rbp+0x0],0x20
  411082:	jg     4111be <main@@Base+0xc86e>
  411088:	jne    4111ad <main@@Base+0xc85d>
  41108e:	cmp    BYTE PTR [rsi+0x2],0x20
  411092:	jle    4111ad <main@@Base+0xc85d>
  411098:	add    rsi,0x2
  41109c:	mov    rbp,rsi
  41109f:	cmp    r15,rbp
  4110a2:	jne    4111c7 <main@@Base+0xc877>
  4110a8:	jmp    41124a <main@@Base+0xc8fa>
  4110ad:	mov    rdi,r13
  4110b0:	mov    rdx,r14
  4110b3:	mov    ecx,0x4
  4110b8:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4110bd:	jmp    4111bb <main@@Base+0xc86b>
  4110c2:	mov    rdi,r13
  4110c5:	mov    rsi,rax
  4110c8:	mov    rdx,r14
  4110cb:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4110d0:	cmp    r15,rax
  4110d3:	je     410e2d <main@@Base+0xc4dd>
  4110d9:	mov    r9,QWORD PTR [rsp+0x28]
  4110de:	sub    rsp,0x8
  4110e2:	mov    rdi,r13
  4110e5:	mov    rsi,rax
  4110e8:	mov    rdx,r14
  4110eb:	mov    ecx,0x0
  4110f0:	mov    r8d,0x3
  4110f6:	lea    rax,[rip+0xffffffffffffeac3]        # 40fbc0 <main@@Base+0xb270>
  4110fd:	push   rax
  4110fe:	call   420cf0 <flatcc_json_parser_union_vector@@Base>
  411103:	add    rsp,0x10
  411107:	jmp    411258 <main@@Base+0xc908>
  41110c:	mov    rdi,r12
  41110f:	mov    rsi,rax
  411112:	mov    rdx,r14
  411115:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41111a:	cmp    r13,rax
  41111d:	je     410f58 <main@@Base+0xc608>
  411123:	mov    r9,QWORD PTR [rsp+0x28]
  411128:	sub    rsp,0x8
  41112c:	mov    r13,r12
  41112f:	mov    rdi,r12
  411132:	mov    rsi,rax
  411135:	mov    rdx,r14
  411138:	mov    ecx,0x0
  41113d:	mov    r8d,0x3
  411143:	lea    rax,[rip+0x3256]        # 4143a0 <main@@Base+0xfa50>
  41114a:	push   rax
  41114b:	lea    rax,[rip+0xffffffffffffea6e]        # 40fbc0 <main@@Base+0xb270>
  411152:	push   rax
  411153:	lea    rax,[rip+0x183a6]        # 429500 <filename@@Base+0x430>
  41115a:	push   rax
  41115b:	call   421190 <flatcc_json_parser_union_type_vector@@Base>
  411160:	add    rsp,0x20
  411164:	jmp    410f69 <main@@Base+0xc619>
  411169:	mov    rdi,r13
  41116c:	mov    rsi,rax
  41116f:	mov    rdx,r14
  411172:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411177:	cmp    r15,rax
  41117a:	je     41124a <main@@Base+0xc8fa>
  411180:	mov    rdi,r13
  411183:	mov    rsi,rax
  411186:	mov    rdx,r14
  411189:	lea    rcx,[rsp+0xc]
  41118e:	call   4143b0 <main@@Base+0xfa60>
  411193:	mov    rbp,rax
  411196:	mov    ebx,DWORD PTR [rsp+0xc]
  41119a:	test   ebx,ebx
  41119c:	je     41294b <main@@Base+0xdffb>
  4111a2:	mov    rdi,QWORD PTR [r13+0x0]
  4111a6:	xor    esi,esi
  4111a8:	jmp    4112b4 <main@@Base+0xc964>
  4111ad:	mov    rdi,r13
  4111b0:	mov    rsi,rbp
  4111b3:	mov    rdx,r14
  4111b6:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4111bb:	mov    rbp,rax
  4111be:	cmp    r15,rbp
  4111c1:	je     41124a <main@@Base+0xc8fa>
  4111c7:	mov    DWORD PTR [rsp+0xc],0x0
  4111cf:	mov    rdi,QWORD PTR [r13+0x0]
  4111d3:	mov    esi,0xa
  4111d8:	call   41af90 <flatcc_builder_start_table@@Base>
  4111dd:	test   eax,eax
  4111df:	jne    4127d0 <main@@Base+0xde80>
  4111e5:	mov    ecx,0x5
  4111ea:	mov    rdi,r13
  4111ed:	mov    rsi,rbp
  4111f0:	mov    rdx,r14
  4111f3:	lea    r8,[rsp+0x18]
  4111f8:	call   420630 <flatcc_json_parser_prepare_unions@@Base>
  4111fd:	cmp    rax,r14
  411200:	je     4127d0 <main@@Base+0xde80>
  411206:	cmp    rbp,r14
  411209:	je     41125d <main@@Base+0xc90d>
  41120b:	cmp    BYTE PTR [rbp+0x0],0x7b
  41120f:	jne    41125d <main@@Base+0xc90d>
  411211:	lea    rax,[rbp+0x1]
  411215:	mov    rcx,r14
  411218:	sub    rcx,rax
  41121b:	cmp    rcx,0x2
  41121f:	jl     411363 <main@@Base+0xca13>
  411225:	cmp    BYTE PTR [rax],0x20
  411228:	jg     411371 <main@@Base+0xca21>
  41122e:	jne    411363 <main@@Base+0xca13>
  411234:	cmp    BYTE PTR [rbp+0x2],0x20
  411238:	jle    411363 <main@@Base+0xca13>
  41123e:	add    rbp,0x2
  411242:	mov    rax,rbp
  411245:	jmp    411371 <main@@Base+0xca21>
  41124a:	mov    rdi,r13
  41124d:	mov    rsi,r15
  411250:	mov    rdx,r14
  411253:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  411258:	mov    rbp,rax
  41125b:	jmp    4112c4 <main@@Base+0xc974>
  41125d:	mov    rdi,r13
  411260:	mov    rsi,rbp
  411263:	mov    rdx,r14
  411266:	mov    ecx,0x15
  41126b:	call   41e300 <flatcc_json_parser_set_error@@Base>
  411270:	mov    rbp,rax
  411273:	cmp    DWORD PTR [r13+0x20],0x0
  411278:	jne    4127d0 <main@@Base+0xde80>
  41127e:	mov    rcx,QWORD PTR [rsp+0x18]
  411283:	mov    rdi,r13
  411286:	mov    rsi,rbp
  411289:	mov    rdx,r14
  41128c:	call   4206b0 <flatcc_json_parser_finalize_unions@@Base>
  411291:	mov    rbp,rax
  411294:	mov    rdi,QWORD PTR [r13+0x0]
  411298:	call   41b9a0 <flatcc_builder_end_table@@Base>
  41129d:	mov    DWORD PTR [rsp+0xc],eax
  4112a1:	test   eax,eax
  4112a3:	je     4127d0 <main@@Base+0xde80>
  4112a9:	mov    ebx,eax
  4112ab:	mov    rdi,QWORD PTR [r13+0x0]
  4112af:	mov    esi,0x1
  4112b4:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  4112b9:	test   rax,rax
  4112bc:	je     41294b <main@@Base+0xdffb>
  4112c2:	mov    DWORD PTR [rax],ebx
  4112c4:	mov    rax,r14
  4112c7:	sub    rax,rbp
  4112ca:	cmp    rax,0x2
  4112ce:	jl     4112eb <main@@Base+0xc99b>
  4112d0:	cmp    BYTE PTR [rbp+0x0],0x20
  4112d4:	jg     4112fc <main@@Base+0xc9ac>
  4112d6:	jne    4112eb <main@@Base+0xc99b>
  4112d8:	cmp    BYTE PTR [rbp+0x1],0x20
  4112dc:	jle    4112eb <main@@Base+0xc99b>
  4112de:	inc    rbp
  4112e1:	cmp    rbp,r14
  4112e4:	jne    411305 <main@@Base+0xc9b5>
  4112e6:	jmp    41287b <main@@Base+0xdf2b>
  4112eb:	mov    rdi,r13
  4112ee:	mov    rsi,rbp
  4112f1:	mov    rdx,r14
  4112f4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4112f9:	mov    rbp,rax
  4112fc:	cmp    rbp,r14
  4112ff:	je     41287b <main@@Base+0xdf2b>
  411305:	mov    al,BYTE PTR [rbp+0x0]
  411308:	cmp    al,0x2c
  41130a:	jne    41288e <main@@Base+0xdf3e>
  411310:	lea    rsi,[rbp+0x1]
  411314:	mov    rax,r14
  411317:	sub    rax,rsi
  41131a:	cmp    rax,0x2
  41131e:	jl     41133e <main@@Base+0xc9ee>
  411320:	cmp    BYTE PTR [rsi],0x20
  411323:	jg     41134c <main@@Base+0xc9fc>
  411325:	jne    41133e <main@@Base+0xc9ee>
  411327:	cmp    BYTE PTR [rbp+0x2],0x20
  41132b:	jle    41133e <main@@Base+0xc9ee>
  41132d:	add    rbp,0x2
  411331:	mov    rsi,rbp
  411334:	cmp    rsi,r14
  411337:	jne    411355 <main@@Base+0xca05>
  411339:	jmp    4128cb <main@@Base+0xdf7b>
  41133e:	mov    rdi,r13
  411341:	mov    rdx,r14
  411344:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411349:	mov    rsi,rax
  41134c:	cmp    rsi,r14
  41134f:	je     4128cb <main@@Base+0xdf7b>
  411355:	cmp    BYTE PTR [rsi],0x7d
  411358:	jne    410b11 <main@@Base+0xc1c1>
  41135e:	jmp    4128d6 <main@@Base+0xdf86>
  411363:	mov    rdi,r13
  411366:	mov    rsi,rax
  411369:	mov    rdx,r14
  41136c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411371:	mov    rsi,r14
  411374:	cmp    rax,r14
  411377:	je     411385 <main@@Base+0xca35>
  411379:	cmp    BYTE PTR [rax],0x7d
  41137c:	je     41276f <main@@Base+0xde1f>
  411382:	mov    rsi,rax
  411385:	mov    r15,r14
  411388:	cmp    rsi,r14
  41138b:	je     4113cb <main@@Base+0xca7b>
  41138d:	movzx  eax,BYTE PTR [rsi]
  411390:	cmp    al,0x2e
  411392:	je     4113a8 <main@@Base+0xca58>
  411394:	cmp    al,0x22
  411396:	jne    4113bd <main@@Base+0xca6d>
  411398:	inc    rsi
  41139b:	mov    rax,QWORD PTR [rsp+0x10]
  4113a0:	mov    DWORD PTR [rax],0x0
  4113a6:	jmp    4113c8 <main@@Base+0xca78>
  4113a8:	mov    rdi,r13
  4113ab:	mov    rdx,r14
  4113ae:	mov    ecx,0x5
  4113b3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4113b8:	mov    r15,rax
  4113bb:	jmp    4113cb <main@@Base+0xca7b>
  4113bd:	mov    rax,QWORD PTR [rsp+0x10]
  4113c2:	mov    DWORD PTR [rax],0x1
  4113c8:	mov    r15,rsi
  4113cb:	mov    rcx,r14
  4113ce:	sub    rcx,r15
  4113d1:	cmp    rcx,0x8
  4113d5:	jb     4113de <main@@Base+0xca8e>
  4113d7:	movbe  rax,QWORD PTR [r15]
  4113dc:	jmp    41145c <main@@Base+0xcb0c>
  4113de:	lea    rax,[rcx-0x1]
  4113e2:	cmp    rax,0x6
  4113e6:	ja     411d64 <main@@Base+0xd414>
  4113ec:	lea    rdx,[rip+0x11151]        # 422544 <_IO_stdin_used@@Base+0x544>
  4113f3:	mov    rsi,rdx
  4113f6:	movsxd rdx,DWORD PTR [rdx+rax*4]
  4113fa:	add    rdx,rsi
  4113fd:	xor    r8d,r8d
  411400:	xor    eax,eax
  411402:	xor    esi,esi
  411404:	xor    edi,edi
  411406:	xor    ebx,ebx
  411408:	xor    ebp,ebp
  41140a:	jmp    rdx
  41140c:	movsx  r8,BYTE PTR [r15+0x6]
  411411:	shl    r8,0x8
  411415:	movsx  rax,BYTE PTR [r15+0x5]
  41141a:	shl    rax,0x10
  41141e:	or     rax,r8
  411421:	movsx  rsi,BYTE PTR [r15+0x4]
  411426:	shl    rsi,0x18
  41142a:	or     rsi,rax
  41142d:	movsx  rdi,BYTE PTR [r15+0x3]
  411432:	shl    rdi,0x20
  411436:	or     rdi,rsi
  411439:	movsx  rbx,BYTE PTR [r15+0x2]
  41143e:	shl    rbx,0x28
  411442:	or     rbx,rdi
  411445:	movsx  rbp,BYTE PTR [r15+0x1]
  41144a:	shl    rbp,0x30
  41144e:	or     rbp,rbx
  411451:	movzx  eax,BYTE PTR [r15]
  411455:	shl    rax,0x38
  411459:	or     rax,rbp
  41145c:	movabs rsi,0x7261637465720000
  411466:	movabs rdx,0x6368617261637465
  411470:	cmp    rax,rdx
  411473:	jae    4114bd <main@@Base+0xcb6d>
  411475:	movabs rdx,0x63616d656f5f7479
  41147f:	cmp    rax,rdx
  411482:	je     411549 <main@@Base+0xcbf9>
  411488:	movabs rdx,0x616e7461676f6e69
  411492:	cmp    rax,rdx
  411495:	jne    41156b <main@@Base+0xcc1b>
  41149b:	mov    r12,r13
  41149e:	lea    r13,[r15+0x8]
  4114a2:	mov    rax,r14
  4114a5:	sub    rax,r13
  4114a8:	cmp    rax,0x8
  4114ac:	jb     4115c7 <main@@Base+0xcc77>
  4114b2:	movbe  rcx,QWORD PTR [r13+0x0]
  4114b8:	jmp    411646 <main@@Base+0xccf6>
  4114bd:	movabs rcx,0x6d61696e5f636860
  4114c7:	cmp    rax,rcx
  4114ca:	ja     411501 <main@@Base+0xcbb1>
  4114cc:	movabs rcx,0x6368617261637465
  4114d6:	cmp    rax,rcx
  4114d9:	jne    411d64 <main@@Base+0xd414>
  4114df:	mov    r12,r13
  4114e2:	lea    r13,[r15+0x8]
  4114e6:	mov    rax,r14
  4114e9:	sub    rax,r13
  4114ec:	cmp    rax,0x8
  4114f0:	jb     4117f8 <main@@Base+0xcea8>
  4114f6:	movbe  rcx,QWORD PTR [r13+0x0]
  4114fc:	jmp    411877 <main@@Base+0xcf27>
  411501:	movabs rcx,0x736964655f6b6963
  41150b:	cmp    rax,rcx
  41150e:	je     41169d <main@@Base+0xcd4d>
  411514:	movabs rcx,0x6d61696e5f636861
  41151e:	cmp    rax,rcx
  411521:	jne    411d64 <main@@Base+0xd414>
  411527:	mov    r12,r13
  41152a:	lea    r13,[r15+0x8]
  41152e:	mov    rax,r14
  411531:	sub    rax,r13
  411534:	cmp    rax,0x8
  411538:	jb     411927 <main@@Base+0xcfd7>
  41153e:	movbe  rcx,QWORD PTR [r13+0x0]
  411544:	jmp    4119b0 <main@@Base+0xd060>
  411549:	mov    r12,r13
  41154c:	lea    r13,[r15+0x8]
  411550:	mov    rax,r14
  411553:	sub    rax,r13
  411556:	cmp    rax,0x8
  41155a:	jb     4116bf <main@@Base+0xcd6f>
  411560:	movbe  rcx,QWORD PTR [r13+0x0]
  411566:	jmp    41173e <main@@Base+0xcdee>
  41156b:	shr    rax,0x18
  41156f:	movabs rdx,0x63616d656f
  411579:	cmp    rax,rdx
  41157c:	jne    411d64 <main@@Base+0xd414>
  411582:	mov    rax,r15
  411585:	cmp    rcx,0x6
  411589:	jl     41216b <main@@Base+0xd81b>
  41158f:	mov    rax,QWORD PTR [rsp+0x10]
  411594:	cmp    DWORD PTR [rax],0x0
  411597:	movzx  ecx,BYTE PTR [r15+0x5]
  41159c:	je     411c1a <main@@Base+0xd2ca>
  4115a2:	cmp    cl,0x21
  4115a5:	jl     4115b3 <main@@Base+0xcc63>
  4115a7:	mov    rax,r15
  4115aa:	cmp    cl,0x3a
  4115ad:	jne    41216b <main@@Base+0xd81b>
  4115b3:	lea    rsi,[r15+0x5]
  4115b7:	mov    rax,QWORD PTR [rsp+0x10]
  4115bc:	mov    DWORD PTR [rax],0x0
  4115c2:	jmp    411c2a <main@@Base+0xd2da>
  4115c7:	lea    rcx,[rax-0x1]
  4115cb:	cmp    rcx,0x6
  4115cf:	ja     412683 <main@@Base+0xdd33>
  4115d5:	lea    rdx,[rip+0x11010]        # 4225ec <_IO_stdin_used@@Base+0x5ec>
  4115dc:	mov    rsi,rdx
  4115df:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4115e3:	add    rdx,rsi
  4115e6:	xor    r8d,r8d
  4115e9:	xor    ecx,ecx
  4115eb:	xor    esi,esi
  4115ed:	xor    edi,edi
  4115ef:	xor    ebp,ebp
  4115f1:	xor    ebx,ebx
  4115f3:	jmp    rdx
  4115f5:	movsx  r8,BYTE PTR [r15+0xe]
  4115fa:	shl    r8,0x8
  4115fe:	movsx  rcx,BYTE PTR [r15+0xd]
  411603:	shl    rcx,0x10
  411607:	or     rcx,r8
  41160a:	movsx  rsi,BYTE PTR [r15+0xc]
  41160f:	shl    rsi,0x18
  411613:	or     rsi,rcx
  411616:	movsx  rdi,BYTE PTR [r15+0xb]
  41161b:	shl    rdi,0x20
  41161f:	or     rdi,rsi
  411622:	movsx  rbp,BYTE PTR [r15+0xa]
  411627:	shl    rbp,0x28
  41162b:	or     rbp,rdi
  41162e:	movsx  rbx,BYTE PTR [r15+0x9]
  411633:	shl    rbx,0x30
  411637:	or     rbx,rbp
  41163a:	movzx  ecx,BYTE PTR [r13+0x0]
  41163f:	shl    rcx,0x38
  411643:	or     rcx,rbx
  411646:	mov    rdx,rcx
  411649:	shr    rdx,0x8
  41164d:	movabs rsi,0x73745f74797065
  411657:	cmp    rdx,rsi
  41165a:	jne    41179b <main@@Base+0xce4b>
  411660:	cmp    rax,0x8
  411664:	jl     412683 <main@@Base+0xdd33>
  41166a:	mov    rax,QWORD PTR [rsp+0x10]
  41166f:	cmp    DWORD PTR [rax],0x0
  411672:	movzx  eax,BYTE PTR [r15+0xf]
  411677:	je     411c64 <main@@Base+0xd314>
  41167d:	cmp    al,0x21
  41167f:	jl     411689 <main@@Base+0xcd39>
  411681:	cmp    al,0x3a
  411683:	jne    412683 <main@@Base+0xdd33>
  411689:	add    r15,0xf
  41168d:	mov    rax,QWORD PTR [rsp+0x10]
  411692:	mov    DWORD PTR [rax],0x0
  411698:	jmp    411c70 <main@@Base+0xd320>
  41169d:	mov    r12,r13
  4116a0:	lea    r13,[r15+0x8]
  4116a4:	mov    rax,r14
  4116a7:	sub    rax,r13
  4116aa:	cmp    rax,0x8
  4116ae:	jb     4119df <main@@Base+0xd08f>
  4116b4:	movbe  rcx,QWORD PTR [r13+0x0]
  4116ba:	jmp    411a5e <main@@Base+0xd10e>
  4116bf:	lea    rcx,[rax-0x1]
  4116c3:	cmp    rcx,0x6
  4116c7:	ja     412683 <main@@Base+0xdd33>
  4116cd:	lea    rdx,[rip+0x10efc]        # 4225d0 <_IO_stdin_used@@Base+0x5d0>
  4116d4:	mov    rsi,rdx
  4116d7:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4116db:	add    rdx,rsi
  4116de:	xor    r8d,r8d
  4116e1:	xor    ecx,ecx
  4116e3:	xor    esi,esi
  4116e5:	xor    edi,edi
  4116e7:	xor    ebp,ebp
  4116e9:	xor    ebx,ebx
  4116eb:	jmp    rdx
  4116ed:	movsx  r8,BYTE PTR [r15+0xe]
  4116f2:	shl    r8,0x8
  4116f6:	movsx  rcx,BYTE PTR [r15+0xd]
  4116fb:	shl    rcx,0x10
  4116ff:	or     rcx,r8
  411702:	movsx  rsi,BYTE PTR [r15+0xc]
  411707:	shl    rsi,0x18
  41170b:	or     rsi,rcx
  41170e:	movsx  rdi,BYTE PTR [r15+0xb]
  411713:	shl    rdi,0x20
  411717:	or     rdi,rsi
  41171a:	movsx  rbp,BYTE PTR [r15+0xa]
  41171f:	shl    rbp,0x28
  411723:	or     rbp,rdi
  411726:	movsx  rbx,BYTE PTR [r15+0x9]
  41172b:	shl    rbx,0x30
  41172f:	or     rbx,rbp
  411732:	movzx  ecx,BYTE PTR [r13+0x0]
  411737:	shl    rcx,0x38
  41173b:	or     rcx,rbx
  41173e:	movabs rdx,0xffff000000000000
  411748:	and    rcx,rdx
  41174b:	movabs rdx,0x7065000000000000
  411755:	cmp    rcx,rdx
  411758:	jne    412683 <main@@Base+0xdd33>
  41175e:	cmp    rax,0x3
  411762:	jl     412683 <main@@Base+0xdd33>
  411768:	mov    rax,QWORD PTR [rsp+0x10]
  41176d:	cmp    DWORD PTR [rax],0x0
  411770:	movzx  eax,BYTE PTR [r15+0xa]
  411775:	je     411cac <main@@Base+0xd35c>
  41177b:	cmp    al,0x21
  41177d:	jl     411787 <main@@Base+0xce37>
  41177f:	cmp    al,0x3a
  411781:	jne    412683 <main@@Base+0xdd33>
  411787:	add    r15,0xa
  41178b:	mov    rax,QWORD PTR [rsp+0x10]
  411790:	mov    DWORD PTR [rax],0x0
  411796:	jmp    411cb8 <main@@Base+0xd368>
  41179b:	movabs rdx,0xffff000000000000
  4117a5:	and    rcx,rdx
  4117a8:	movabs rdx,0x7374000000000000
  4117b2:	cmp    rcx,rdx
  4117b5:	jne    412683 <main@@Base+0xdd33>
  4117bb:	cmp    rax,0x3
  4117bf:	jl     412683 <main@@Base+0xdd33>
  4117c5:	mov    rax,QWORD PTR [rsp+0x10]
  4117ca:	cmp    DWORD PTR [rax],0x0
  4117cd:	movzx  eax,BYTE PTR [r15+0xa]
  4117d2:	je     411f30 <main@@Base+0xd5e0>
  4117d8:	cmp    al,0x21
  4117da:	jl     4117e4 <main@@Base+0xce94>
  4117dc:	cmp    al,0x3a
  4117de:	jne    412683 <main@@Base+0xdd33>
  4117e4:	add    r15,0xa
  4117e8:	mov    rax,QWORD PTR [rsp+0x10]
  4117ed:	mov    DWORD PTR [rax],0x0
  4117f3:	jmp    411f3c <main@@Base+0xd5ec>
  4117f8:	lea    rcx,[rax-0x1]
  4117fc:	cmp    rcx,0x6
  411800:	ja     412683 <main@@Base+0xdd33>
  411806:	lea    rdx,[rip+0x10da7]        # 4225b4 <_IO_stdin_used@@Base+0x5b4>
  41180d:	mov    rsi,rdx
  411810:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  411814:	add    rdx,rsi
  411817:	xor    r8d,r8d
  41181a:	xor    ecx,ecx
  41181c:	xor    esi,esi
  41181e:	xor    edi,edi
  411820:	xor    ebp,ebp
  411822:	xor    ebx,ebx
  411824:	jmp    rdx
  411826:	movsx  r8,BYTE PTR [r15+0xe]
  41182b:	shl    r8,0x8
  41182f:	movsx  rcx,BYTE PTR [r15+0xd]
  411834:	shl    rcx,0x10
  411838:	or     rcx,r8
  41183b:	movsx  rsi,BYTE PTR [r15+0xc]
  411840:	shl    rsi,0x18
  411844:	or     rsi,rcx
  411847:	movsx  rdi,BYTE PTR [r15+0xb]
  41184c:	shl    rdi,0x20
  411850:	or     rdi,rsi
  411853:	movsx  rbp,BYTE PTR [r15+0xa]
  411858:	shl    rbp,0x28
  41185c:	or     rbp,rdi
  41185f:	movsx  rbx,BYTE PTR [r15+0x9]
  411864:	shl    rbx,0x30
  411868:	or     rbx,rbp
  41186b:	movzx  ecx,BYTE PTR [r13+0x0]
  411870:	shl    rcx,0x38
  411874:	or     rcx,rbx
  411877:	mov    rdx,rcx
  41187a:	shr    rdx,0x8
  41187e:	movabs rsi,0x72735f74797065
  411888:	cmp    rdx,rsi
  41188b:	jne    4118ca <main@@Base+0xcf7a>
  41188d:	cmp    rax,0x8
  411891:	jl     412683 <main@@Base+0xdd33>
  411897:	mov    rax,QWORD PTR [rsp+0x10]
  41189c:	cmp    DWORD PTR [rax],0x0
  41189f:	movzx  eax,BYTE PTR [r15+0xf]
  4118a4:	je     411e7f <main@@Base+0xd52f>
  4118aa:	cmp    al,0x21
  4118ac:	jl     4118b6 <main@@Base+0xcf66>
  4118ae:	cmp    al,0x3a
  4118b0:	jne    412683 <main@@Base+0xdd33>
  4118b6:	add    r15,0xf
  4118ba:	mov    rax,QWORD PTR [rsp+0x10]
  4118bf:	mov    DWORD PTR [rax],0x0
  4118c5:	jmp    411e8b <main@@Base+0xd53b>
  4118ca:	movabs rdx,0xffff000000000000
  4118d4:	and    rcx,rdx
  4118d7:	movabs rdx,0x7273000000000000
  4118e1:	cmp    rcx,rdx
  4118e4:	jne    412683 <main@@Base+0xdd33>
  4118ea:	cmp    rax,0x3
  4118ee:	jl     412683 <main@@Base+0xdd33>
  4118f4:	mov    rax,QWORD PTR [rsp+0x10]
  4118f9:	cmp    DWORD PTR [rax],0x0
  4118fc:	movzx  eax,BYTE PTR [r15+0xa]
  411901:	je     4120ac <main@@Base+0xd75c>
  411907:	cmp    al,0x21
  411909:	jl     411913 <main@@Base+0xcfc3>
  41190b:	cmp    al,0x3a
  41190d:	jne    412683 <main@@Base+0xdd33>
  411913:	add    r15,0xa
  411917:	mov    rax,QWORD PTR [rsp+0x10]
  41191c:	mov    DWORD PTR [rax],0x0
  411922:	jmp    4120b8 <main@@Base+0xd768>
  411927:	lea    rcx,[rax-0x1]
  41192b:	cmp    rcx,0x6
  41192f:	ja     412683 <main@@Base+0xdd33>
  411935:	lea    rdx,[rip+0x10c40]        # 42257c <_IO_stdin_used@@Base+0x57c>
  41193c:	mov    rsi,rdx
  41193f:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  411943:	add    rdx,rsi
  411946:	xor    r8d,r8d
  411949:	xor    ecx,ecx
  41194b:	xor    esi,esi
  41194d:	xor    edi,edi
  41194f:	xor    ebp,ebp
  411951:	xor    ebx,ebx
  411953:	jmp    rdx
  411955:	movsx  r8,BYTE PTR [r15+0xe]
  41195a:	shl    r8,0x8
  41195e:	movsx  rcx,BYTE PTR [r15+0xd]
  411963:	shl    rcx,0x10
  411967:	or     rcx,r8
  41196a:	movsx  rsi,BYTE PTR [r15+0xc]
  41196f:	shl    rsi,0x18
  411973:	or     rsi,rcx
  411976:	movsx  rdi,BYTE PTR [r15+0xb]
  41197b:	shl    rdi,0x20
  41197f:	or     rdi,rsi
  411982:	movsx  rbp,BYTE PTR [r15+0xa]
  411987:	shl    rbp,0x28
  41198b:	or     rbp,rdi
  41198e:	movsx  rbx,BYTE PTR [r15+0x9]
  411993:	shl    rbx,0x30
  411997:	or     rbx,rbp
  41199a:	movzx  ecx,BYTE PTR [r13+0x0]
  41199f:	shl    rcx,0x38
  4119a3:	or     rcx,rbx
  4119a6:	movabs rsi,0x7261637465720000
  4119b0:	lea    rdx,[rsi+0x5f74]
  4119b7:	cmp    rcx,rdx
  4119ba:	jne    411ab5 <main@@Base+0xd165>
  4119c0:	lea    r13,[r15+0x10]
  4119c4:	mov    rax,r14
  4119c7:	sub    rax,r13
  4119ca:	cmp    rax,0x8
  4119ce:	jb     411b4d <main@@Base+0xd1fd>
  4119d4:	movbe  rcx,QWORD PTR [r13+0x0]
  4119da:	jmp    411bcc <main@@Base+0xd27c>
  4119df:	lea    rcx,[rax-0x1]
  4119e3:	cmp    rcx,0x6
  4119e7:	ja     412683 <main@@Base+0xdd33>
  4119ed:	lea    rdx,[rip+0x10b6c]        # 422560 <_IO_stdin_used@@Base+0x560>
  4119f4:	mov    rsi,rdx
  4119f7:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4119fb:	add    rdx,rsi
  4119fe:	xor    r8d,r8d
  411a01:	xor    ecx,ecx
  411a03:	xor    esi,esi
  411a05:	xor    edi,edi
  411a07:	xor    ebp,ebp
  411a09:	xor    ebx,ebx
  411a0b:	jmp    rdx
  411a0d:	movsx  r8,BYTE PTR [r15+0xe]
  411a12:	shl    r8,0x8
  411a16:	movsx  rcx,BYTE PTR [r15+0xd]
  411a1b:	shl    rcx,0x10
  411a1f:	or     rcx,r8
  411a22:	movsx  rsi,BYTE PTR [r15+0xc]
  411a27:	shl    rsi,0x18
  411a2b:	or     rsi,rcx
  411a2e:	movsx  rdi,BYTE PTR [r15+0xb]
  411a33:	shl    rdi,0x20
  411a37:	or     rdi,rsi
  411a3a:	movsx  rbp,BYTE PTR [r15+0xa]
  411a3f:	shl    rbp,0x28
  411a43:	or     rbp,rdi
  411a46:	movsx  rbx,BYTE PTR [r15+0x9]
  411a4b:	shl    rbx,0x30
  411a4f:	or     rbx,rbp
  411a52:	movzx  ecx,BYTE PTR [r13+0x0]
  411a57:	shl    rcx,0x38
  411a5b:	or     rcx,rbx
  411a5e:	mov    rdx,rcx
  411a61:	shr    rdx,0x10
  411a65:	movabs rsi,0x6b5f74797065
  411a6f:	cmp    rdx,rsi
  411a72:	jne    411b02 <main@@Base+0xd1b2>
  411a78:	cmp    rax,0x7
  411a7c:	jl     412683 <main@@Base+0xdd33>
  411a82:	mov    rax,QWORD PTR [rsp+0x10]
  411a87:	cmp    DWORD PTR [rax],0x0
  411a8a:	movzx  eax,BYTE PTR [r15+0xe]
  411a8f:	je     411f64 <main@@Base+0xd614>
  411a95:	cmp    al,0x21
  411a97:	jl     411aa1 <main@@Base+0xd151>
  411a99:	cmp    al,0x3a
  411a9b:	jne    412683 <main@@Base+0xdd33>
  411aa1:	add    r15,0xe
  411aa5:	mov    rax,QWORD PTR [rsp+0x10]
  411aaa:	mov    DWORD PTR [rax],0x0
  411ab0:	jmp    411f70 <main@@Base+0xd620>
  411ab5:	and    rcx,0xffffffffffff0000
  411abc:	cmp    rcx,rsi
  411abf:	jne    412683 <main@@Base+0xdd33>
  411ac5:	cmp    rax,0x7
  411ac9:	jl     412683 <main@@Base+0xdd33>
  411acf:	mov    rax,QWORD PTR [rsp+0x10]
  411ad4:	cmp    DWORD PTR [rax],0x0
  411ad7:	movzx  eax,BYTE PTR [r15+0xe]
  411adc:	je     412235 <main@@Base+0xd8e5>
  411ae2:	cmp    al,0x21
  411ae4:	jl     411aee <main@@Base+0xd19e>
  411ae6:	cmp    al,0x3a
  411ae8:	jne    412683 <main@@Base+0xdd33>
  411aee:	add    r15,0xe
  411af2:	mov    rax,QWORD PTR [rsp+0x10]
  411af7:	mov    DWORD PTR [rax],0x0
  411afd:	jmp    412241 <main@@Base+0xd8f1>
  411b02:	shr    rcx,0x38
  411b06:	cmp    rcx,0x6b
  411b0a:	jne    412683 <main@@Base+0xdd33>
  411b10:	cmp    rax,0x2
  411b14:	jl     412683 <main@@Base+0xdd33>
  411b1a:	mov    rax,QWORD PTR [rsp+0x10]
  411b1f:	cmp    DWORD PTR [rax],0x0
  411b22:	movzx  eax,BYTE PTR [r15+0x9]
  411b27:	je     41227d <main@@Base+0xd92d>
  411b2d:	cmp    al,0x21
  411b2f:	jl     411b39 <main@@Base+0xd1e9>
  411b31:	cmp    al,0x3a
  411b33:	jne    412683 <main@@Base+0xdd33>
  411b39:	add    r15,0x9
  411b3d:	mov    rax,QWORD PTR [rsp+0x10]
  411b42:	mov    DWORD PTR [rax],0x0
  411b48:	jmp    412289 <main@@Base+0xd939>
  411b4d:	lea    rcx,[rax-0x1]
  411b51:	cmp    rcx,0x6
  411b55:	ja     412683 <main@@Base+0xdd33>
  411b5b:	lea    rdx,[rip+0x10a36]        # 422598 <_IO_stdin_used@@Base+0x598>
  411b62:	mov    rsi,rdx
  411b65:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  411b69:	add    rdx,rsi
  411b6c:	xor    r8d,r8d
  411b6f:	xor    ecx,ecx
  411b71:	xor    esi,esi
  411b73:	xor    edi,edi
  411b75:	xor    ebp,ebp
  411b77:	xor    ebx,ebx
  411b79:	jmp    rdx
  411b7b:	movsx  r8,BYTE PTR [r15+0x16]
  411b80:	shl    r8,0x8
  411b84:	movsx  rcx,BYTE PTR [r15+0x15]
  411b89:	shl    rcx,0x10
  411b8d:	or     rcx,r8
  411b90:	movsx  rsi,BYTE PTR [r15+0x14]
  411b95:	shl    rsi,0x18
  411b99:	or     rsi,rcx
  411b9c:	movsx  rdi,BYTE PTR [r15+0x13]
  411ba1:	shl    rdi,0x20
  411ba5:	or     rdi,rsi
  411ba8:	movsx  rbp,BYTE PTR [r15+0x12]
  411bad:	shl    rbp,0x28
  411bb1:	or     rbp,rdi
  411bb4:	movsx  rbx,BYTE PTR [r15+0x11]
  411bb9:	shl    rbx,0x30
  411bbd:	or     rbx,rbp
  411bc0:	movzx  ecx,BYTE PTR [r13+0x0]
  411bc5:	shl    rcx,0x38
  411bc9:	or     rcx,rbx
  411bcc:	shr    rcx,0x28
  411bd0:	cmp    rcx,0x797065
  411bd7:	jne    412683 <main@@Base+0xdd33>
  411bdd:	cmp    rax,0x4
  411be1:	jl     412683 <main@@Base+0xdd33>
  411be7:	mov    rax,QWORD PTR [rsp+0x10]
  411bec:	cmp    DWORD PTR [rax],0x0
  411bef:	movzx  eax,BYTE PTR [r15+0x13]
  411bf4:	je     4122c5 <main@@Base+0xd975>
  411bfa:	cmp    al,0x21
  411bfc:	jl     411c06 <main@@Base+0xd2b6>
  411bfe:	cmp    al,0x3a
  411c00:	jne    412683 <main@@Base+0xdd33>
  411c06:	add    r15,0x13
  411c0a:	mov    rax,QWORD PTR [rsp+0x10]
  411c0f:	mov    DWORD PTR [rax],0x0
  411c15:	jmp    4122d1 <main@@Base+0xd981>
  411c1a:	mov    rax,r15
  411c1d:	cmp    cl,0x22
  411c20:	jne    41216b <main@@Base+0xd81b>
  411c26:	lea    rsi,[r15+0x6]
  411c2a:	mov    rax,r14
  411c2d:	sub    rax,rsi
  411c30:	cmp    rax,0x2
  411c34:	jl     411cf4 <main@@Base+0xd3a4>
  411c3a:	cmp    BYTE PTR [rsi],0x20
  411c3d:	jg     411d02 <main@@Base+0xd3b2>
  411c43:	jne    411cf4 <main@@Base+0xd3a4>
  411c49:	cmp    BYTE PTR [rsi+0x1],0x20
  411c4d:	jle    411cf4 <main@@Base+0xd3a4>
  411c53:	inc    rsi
  411c56:	cmp    rsi,r14
  411c59:	jne    411d07 <main@@Base+0xd3b7>
  411c5f:	jmp    411d4b <main@@Base+0xd3fb>
  411c64:	cmp    al,0x22
  411c66:	jne    412683 <main@@Base+0xdd33>
  411c6c:	add    r15,0x10
  411c70:	mov    rax,r14
  411c73:	sub    rax,r15
  411c76:	cmp    rax,0x2
  411c7a:	jl     411d77 <main@@Base+0xd427>
  411c80:	cmp    BYTE PTR [r15],0x20
  411c84:	jg     411d88 <main@@Base+0xd438>
  411c8a:	jne    411d77 <main@@Base+0xd427>
  411c90:	cmp    BYTE PTR [r15+0x1],0x20
  411c95:	jle    411d77 <main@@Base+0xd427>
  411c9b:	inc    r15
  411c9e:	cmp    r15,r14
  411ca1:	jne    411d91 <main@@Base+0xd441>
  411ca7:	jmp    411e3d <main@@Base+0xd4ed>
  411cac:	cmp    al,0x22
  411cae:	jne    412683 <main@@Base+0xdd33>
  411cb4:	add    r15,0xb
  411cb8:	mov    rax,r14
  411cbb:	sub    rax,r15
  411cbe:	cmp    rax,0x2
  411cc2:	jl     411dde <main@@Base+0xd48e>
  411cc8:	cmp    BYTE PTR [r15],0x20
  411ccc:	jg     411def <main@@Base+0xd49f>
  411cd2:	jne    411dde <main@@Base+0xd48e>
  411cd8:	cmp    BYTE PTR [r15+0x1],0x20
  411cdd:	jle    411dde <main@@Base+0xd48e>
  411ce3:	inc    r15
  411ce6:	cmp    r15,r14
  411ce9:	jne    411df4 <main@@Base+0xd4a4>
  411cef:	jmp    411e5e <main@@Base+0xd50e>
  411cf4:	mov    rdi,r13
  411cf7:	mov    rdx,r14
  411cfa:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411cff:	mov    rsi,rax
  411d02:	cmp    rsi,r14
  411d05:	je     411d4b <main@@Base+0xd3fb>
  411d07:	cmp    BYTE PTR [rsi],0x3a
  411d0a:	jne    411d4b <main@@Base+0xd3fb>
  411d0c:	lea    rax,[rsi+0x1]
  411d10:	mov    rcx,r14
  411d13:	sub    rcx,rax
  411d16:	cmp    rcx,0x2
  411d1a:	jl     41215d <main@@Base+0xd80d>
  411d20:	cmp    BYTE PTR [rax],0x20
  411d23:	jg     41216b <main@@Base+0xd81b>
  411d29:	jne    41215d <main@@Base+0xd80d>
  411d2f:	cmp    BYTE PTR [rsi+0x2],0x20
  411d33:	jle    41215d <main@@Base+0xd80d>
  411d39:	add    rsi,0x2
  411d3d:	mov    rax,rsi
  411d40:	cmp    r15,rax
  411d43:	jne    412174 <main@@Base+0xd824>
  411d49:	jmp    411d64 <main@@Base+0xd414>
  411d4b:	mov    rdi,r13
  411d4e:	mov    rdx,r14
  411d51:	mov    ecx,0x4
  411d56:	call   41e300 <flatcc_json_parser_set_error@@Base>
  411d5b:	cmp    r15,rax
  411d5e:	jne    412174 <main@@Base+0xd824>
  411d64:	mov    rdi,r13
  411d67:	mov    rsi,r15
  411d6a:	mov    rdx,r14
  411d6d:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  411d72:	jmp    412698 <main@@Base+0xdd48>
  411d77:	mov    rdi,r12
  411d7a:	mov    rsi,r15
  411d7d:	mov    rdx,r14
  411d80:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411d85:	mov    r15,rax
  411d88:	cmp    r15,r14
  411d8b:	je     411e3d <main@@Base+0xd4ed>
  411d91:	cmp    BYTE PTR [r15],0x3a
  411d95:	jne    411e3d <main@@Base+0xd4ed>
  411d9b:	lea    rax,[r15+0x1]
  411d9f:	mov    rcx,r14
  411da2:	sub    rcx,rax
  411da5:	cmp    rcx,0x2
  411da9:	jl     4121a7 <main@@Base+0xd857>
  411daf:	cmp    BYTE PTR [rax],0x20
  411db2:	jg     4121b5 <main@@Base+0xd865>
  411db8:	jne    4121a7 <main@@Base+0xd857>
  411dbe:	cmp    BYTE PTR [r15+0x2],0x20
  411dc3:	jle    4121a7 <main@@Base+0xd857>
  411dc9:	add    r15,0x2
  411dcd:	mov    rax,r15
  411dd0:	cmp    r13,rax
  411dd3:	jne    4121be <main@@Base+0xd86e>
  411dd9:	jmp    412683 <main@@Base+0xdd33>
  411dde:	mov    rdi,r12
  411de1:	mov    rsi,r15
  411de4:	mov    rdx,r14
  411de7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411dec:	mov    r15,rax
  411def:	cmp    r15,r14
  411df2:	je     411e5e <main@@Base+0xd50e>
  411df4:	cmp    BYTE PTR [r15],0x3a
  411df8:	jne    411e5e <main@@Base+0xd50e>
  411dfa:	lea    rax,[r15+0x1]
  411dfe:	mov    rcx,r14
  411e01:	sub    rcx,rax
  411e04:	cmp    rcx,0x2
  411e08:	jl     4121ee <main@@Base+0xd89e>
  411e0e:	cmp    BYTE PTR [rax],0x20
  411e11:	jg     4121fc <main@@Base+0xd8ac>
  411e17:	jne    4121ee <main@@Base+0xd89e>
  411e1d:	cmp    BYTE PTR [r15+0x2],0x20
  411e22:	jle    4121ee <main@@Base+0xd89e>
  411e28:	add    r15,0x2
  411e2c:	mov    rax,r15
  411e2f:	cmp    r13,rax
  411e32:	jne    412205 <main@@Base+0xd8b5>
  411e38:	jmp    412683 <main@@Base+0xdd33>
  411e3d:	mov    rdi,r12
  411e40:	mov    rsi,r15
  411e43:	mov    rdx,r14
  411e46:	mov    ecx,0x4
  411e4b:	call   41e300 <flatcc_json_parser_set_error@@Base>
  411e50:	cmp    r13,rax
  411e53:	jne    4121be <main@@Base+0xd86e>
  411e59:	jmp    412683 <main@@Base+0xdd33>
  411e5e:	mov    rdi,r12
  411e61:	mov    rsi,r15
  411e64:	mov    rdx,r14
  411e67:	mov    ecx,0x4
  411e6c:	call   41e300 <flatcc_json_parser_set_error@@Base>
  411e71:	cmp    r13,rax
  411e74:	jne    412205 <main@@Base+0xd8b5>
  411e7a:	jmp    412683 <main@@Base+0xdd33>
  411e7f:	cmp    al,0x22
  411e81:	jne    412683 <main@@Base+0xdd33>
  411e87:	add    r15,0x10
  411e8b:	mov    rax,r14
  411e8e:	sub    rax,r15
  411e91:	cmp    rax,0x2
  411e95:	jl     411eb0 <main@@Base+0xd560>
  411e97:	cmp    BYTE PTR [r15],0x20
  411e9b:	jg     411ec1 <main@@Base+0xd571>
  411e9d:	jne    411eb0 <main@@Base+0xd560>
  411e9f:	cmp    BYTE PTR [r15+0x1],0x20
  411ea4:	jle    411eb0 <main@@Base+0xd560>
  411ea6:	inc    r15
  411ea9:	cmp    r15,r14
  411eac:	jne    411ec6 <main@@Base+0xd576>
  411eae:	jmp    411f0f <main@@Base+0xd5bf>
  411eb0:	mov    rdi,r12
  411eb3:	mov    rsi,r15
  411eb6:	mov    rdx,r14
  411eb9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411ebe:	mov    r15,rax
  411ec1:	cmp    r15,r14
  411ec4:	je     411f0f <main@@Base+0xd5bf>
  411ec6:	cmp    BYTE PTR [r15],0x3a
  411eca:	jne    411f0f <main@@Base+0xd5bf>
  411ecc:	lea    rax,[r15+0x1]
  411ed0:	mov    rcx,r14
  411ed3:	sub    rcx,rax
  411ed6:	cmp    rcx,0x2
  411eda:	jl     412415 <main@@Base+0xdac5>
  411ee0:	cmp    BYTE PTR [rax],0x20
  411ee3:	jg     412423 <main@@Base+0xdad3>
  411ee9:	jne    412415 <main@@Base+0xdac5>
  411eef:	cmp    BYTE PTR [r15+0x2],0x20
  411ef4:	jle    412415 <main@@Base+0xdac5>
  411efa:	add    r15,0x2
  411efe:	mov    rax,r15
  411f01:	cmp    r13,rax
  411f04:	jne    41242c <main@@Base+0xdadc>
  411f0a:	jmp    412683 <main@@Base+0xdd33>
  411f0f:	mov    rdi,r12
  411f12:	mov    rsi,r15
  411f15:	mov    rdx,r14
  411f18:	mov    ecx,0x4
  411f1d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  411f22:	cmp    r13,rax
  411f25:	jne    41242c <main@@Base+0xdadc>
  411f2b:	jmp    412683 <main@@Base+0xdd33>
  411f30:	cmp    al,0x22
  411f32:	jne    412683 <main@@Base+0xdd33>
  411f38:	add    r15,0xb
  411f3c:	mov    rax,r14
  411f3f:	sub    rax,r15
  411f42:	cmp    rax,0x2
  411f46:	jl     411fa4 <main@@Base+0xd654>
  411f48:	cmp    BYTE PTR [r15],0x20
  411f4c:	jg     411fb5 <main@@Base+0xd665>
  411f4e:	jne    411fa4 <main@@Base+0xd654>
  411f50:	cmp    BYTE PTR [r15+0x1],0x20
  411f55:	jle    411fa4 <main@@Base+0xd654>
  411f57:	inc    r15
  411f5a:	cmp    r15,r14
  411f5d:	jne    411fbe <main@@Base+0xd66e>
  411f5f:	jmp    41206a <main@@Base+0xd71a>
  411f64:	cmp    al,0x22
  411f66:	jne    412683 <main@@Base+0xdd33>
  411f6c:	add    r15,0xf
  411f70:	mov    rax,r14
  411f73:	sub    rax,r15
  411f76:	cmp    rax,0x2
  411f7a:	jl     41200b <main@@Base+0xd6bb>
  411f80:	cmp    BYTE PTR [r15],0x20
  411f84:	jg     41201c <main@@Base+0xd6cc>
  411f8a:	jne    41200b <main@@Base+0xd6bb>
  411f8c:	cmp    BYTE PTR [r15+0x1],0x20
  411f91:	jle    41200b <main@@Base+0xd6bb>
  411f93:	inc    r15
  411f96:	cmp    r15,r14
  411f99:	jne    412021 <main@@Base+0xd6d1>
  411f9f:	jmp    41208b <main@@Base+0xd73b>
  411fa4:	mov    rdi,r12
  411fa7:	mov    rsi,r15
  411faa:	mov    rdx,r14
  411fad:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  411fb2:	mov    r15,rax
  411fb5:	cmp    r15,r14
  411fb8:	je     41206a <main@@Base+0xd71a>
  411fbe:	cmp    BYTE PTR [r15],0x3a
  411fc2:	jne    41206a <main@@Base+0xd71a>
  411fc8:	lea    rax,[r15+0x1]
  411fcc:	mov    rcx,r14
  411fcf:	sub    rcx,rax
  411fd2:	cmp    rcx,0x2
  411fd6:	jl     4124f2 <main@@Base+0xdba2>
  411fdc:	cmp    BYTE PTR [rax],0x20
  411fdf:	jg     412500 <main@@Base+0xdbb0>
  411fe5:	jne    4124f2 <main@@Base+0xdba2>
  411feb:	cmp    BYTE PTR [r15+0x2],0x20
  411ff0:	jle    4124f2 <main@@Base+0xdba2>
  411ff6:	add    r15,0x2
  411ffa:	mov    rax,r15
  411ffd:	cmp    r13,rax
  412000:	jne    412509 <main@@Base+0xdbb9>
  412006:	jmp    412683 <main@@Base+0xdd33>
  41200b:	mov    rdi,r12
  41200e:	mov    rsi,r15
  412011:	mov    rdx,r14
  412014:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412019:	mov    r15,rax
  41201c:	cmp    r15,r14
  41201f:	je     41208b <main@@Base+0xd73b>
  412021:	cmp    BYTE PTR [r15],0x3a
  412025:	jne    41208b <main@@Base+0xd73b>
  412027:	lea    rax,[r15+0x1]
  41202b:	mov    rcx,r14
  41202e:	sub    rcx,rax
  412031:	cmp    rcx,0x2
  412035:	jl     41252e <main@@Base+0xdbde>
  41203b:	cmp    BYTE PTR [rax],0x20
  41203e:	jg     41253c <main@@Base+0xdbec>
  412044:	jne    41252e <main@@Base+0xdbde>
  41204a:	cmp    BYTE PTR [r15+0x2],0x20
  41204f:	jle    41252e <main@@Base+0xdbde>
  412055:	add    r15,0x2
  412059:	mov    rax,r15
  41205c:	cmp    r13,rax
  41205f:	jne    412545 <main@@Base+0xdbf5>
  412065:	jmp    412683 <main@@Base+0xdd33>
  41206a:	mov    rdi,r12
  41206d:	mov    rsi,r15
  412070:	mov    rdx,r14
  412073:	mov    ecx,0x4
  412078:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41207d:	cmp    r13,rax
  412080:	jne    412509 <main@@Base+0xdbb9>
  412086:	jmp    412683 <main@@Base+0xdd33>
  41208b:	mov    rdi,r12
  41208e:	mov    rsi,r15
  412091:	mov    rdx,r14
  412094:	mov    ecx,0x4
  412099:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41209e:	cmp    r13,rax
  4120a1:	jne    412545 <main@@Base+0xdbf5>
  4120a7:	jmp    412683 <main@@Base+0xdd33>
  4120ac:	cmp    al,0x22
  4120ae:	jne    412683 <main@@Base+0xdd33>
  4120b4:	add    r15,0xb
  4120b8:	mov    rax,r14
  4120bb:	sub    rax,r15
  4120be:	cmp    rax,0x2
  4120c2:	jl     4120dd <main@@Base+0xd78d>
  4120c4:	cmp    BYTE PTR [r15],0x20
  4120c8:	jg     4120ee <main@@Base+0xd79e>
  4120ca:	jne    4120dd <main@@Base+0xd78d>
  4120cc:	cmp    BYTE PTR [r15+0x1],0x20
  4120d1:	jle    4120dd <main@@Base+0xd78d>
  4120d3:	inc    r15
  4120d6:	cmp    r15,r14
  4120d9:	jne    4120f3 <main@@Base+0xd7a3>
  4120db:	jmp    41213c <main@@Base+0xd7ec>
  4120dd:	mov    rdi,r12
  4120e0:	mov    rsi,r15
  4120e3:	mov    rdx,r14
  4120e6:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4120eb:	mov    r15,rax
  4120ee:	cmp    r15,r14
  4120f1:	je     41213c <main@@Base+0xd7ec>
  4120f3:	cmp    BYTE PTR [r15],0x3a
  4120f7:	jne    41213c <main@@Base+0xd7ec>
  4120f9:	lea    rax,[r15+0x1]
  4120fd:	mov    rcx,r14
  412100:	sub    rcx,rax
  412103:	cmp    rcx,0x2
  412107:	jl     412575 <main@@Base+0xdc25>
  41210d:	cmp    BYTE PTR [rax],0x20
  412110:	jg     412583 <main@@Base+0xdc33>
  412116:	jne    412575 <main@@Base+0xdc25>
  41211c:	cmp    BYTE PTR [r15+0x2],0x20
  412121:	jle    412575 <main@@Base+0xdc25>
  412127:	add    r15,0x2
  41212b:	mov    rax,r15
  41212e:	cmp    r13,rax
  412131:	jne    41258c <main@@Base+0xdc3c>
  412137:	jmp    412683 <main@@Base+0xdd33>
  41213c:	mov    rdi,r12
  41213f:	mov    rsi,r15
  412142:	mov    rdx,r14
  412145:	mov    ecx,0x4
  41214a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41214f:	cmp    r13,rax
  412152:	jne    41258c <main@@Base+0xdc3c>
  412158:	jmp    412683 <main@@Base+0xdd33>
  41215d:	mov    rdi,r13
  412160:	mov    rsi,rax
  412163:	mov    rdx,r14
  412166:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41216b:	cmp    r15,rax
  41216e:	je     411d64 <main@@Base+0xd414>
  412174:	mov    r9,QWORD PTR [rsp+0x18]
  412179:	sub    rsp,0x8
  41217d:	mov    ecx,0x3
  412182:	mov    rdi,r13
  412185:	mov    rsi,rax
  412188:	mov    rdx,r14
  41218b:	mov    r8d,0x7
  412191:	lea    rax,[rip+0x5638]        # 4177d0 <main@@Base+0x12e80>
  412198:	push   rax
  412199:	call   420720 <flatcc_json_parser_union@@Base>
  41219e:	add    rsp,0x10
  4121a2:	jmp    412698 <main@@Base+0xdd48>
  4121a7:	mov    rdi,r12
  4121aa:	mov    rsi,rax
  4121ad:	mov    rdx,r14
  4121b0:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4121b5:	cmp    r13,rax
  4121b8:	je     412683 <main@@Base+0xdd33>
  4121be:	mov    r9,QWORD PTR [rsp+0x18]
  4121c3:	mov    ecx,0x1
  4121c8:	mov    r13,r12
  4121cb:	mov    rdi,r12
  4121ce:	mov    rsi,rax
  4121d1:	mov    rdx,r14
  4121d4:	mov    r8d,0x3
  4121da:	lea    rax,[rip+0x55ef]        # 4177d0 <main@@Base+0x12e80>
  4121e1:	push   rax
  4121e2:	lea    rax,[rip+0x17477]        # 429660 <filename@@Base+0x590>
  4121e9:	jmp    412677 <main@@Base+0xdd27>
  4121ee:	mov    rdi,r12
  4121f1:	mov    rsi,rax
  4121f4:	mov    rdx,r14
  4121f7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4121fc:	cmp    r13,rax
  4121ff:	je     412683 <main@@Base+0xdd33>
  412205:	mov    r9,QWORD PTR [rsp+0x18]
  41220a:	mov    ecx,0x3
  41220f:	mov    r13,r12
  412212:	mov    rdi,r12
  412215:	mov    rsi,rax
  412218:	mov    rdx,r14
  41221b:	mov    r8d,0x7
  412221:	lea    rax,[rip+0x55a8]        # 4177d0 <main@@Base+0x12e80>
  412228:	push   rax
  412229:	lea    rax,[rip+0x17450]        # 429680 <filename@@Base+0x5b0>
  412230:	jmp    412677 <main@@Base+0xdd27>
  412235:	cmp    al,0x22
  412237:	jne    412683 <main@@Base+0xdd33>
  41223d:	add    r15,0xf
  412241:	mov    rax,r14
  412244:	sub    rax,r15
  412247:	cmp    rax,0x2
  41224b:	jl     41230d <main@@Base+0xd9bd>
  412251:	cmp    BYTE PTR [r15],0x20
  412255:	jg     41231e <main@@Base+0xd9ce>
  41225b:	jne    41230d <main@@Base+0xd9bd>
  412261:	cmp    BYTE PTR [r15+0x1],0x20
  412266:	jle    41230d <main@@Base+0xd9bd>
  41226c:	inc    r15
  41226f:	cmp    r15,r14
  412272:	jne    412327 <main@@Base+0xd9d7>
  412278:	jmp    4123d3 <main@@Base+0xda83>
  41227d:	cmp    al,0x22
  41227f:	jne    412683 <main@@Base+0xdd33>
  412285:	add    r15,0xa
  412289:	mov    rax,r14
  41228c:	sub    rax,r15
  41228f:	cmp    rax,0x2
  412293:	jl     412374 <main@@Base+0xda24>
  412299:	cmp    BYTE PTR [r15],0x20
  41229d:	jg     412385 <main@@Base+0xda35>
  4122a3:	jne    412374 <main@@Base+0xda24>
  4122a9:	cmp    BYTE PTR [r15+0x1],0x20
  4122ae:	jle    412374 <main@@Base+0xda24>
  4122b4:	inc    r15
  4122b7:	cmp    r15,r14
  4122ba:	jne    41238a <main@@Base+0xda3a>
  4122c0:	jmp    4123f4 <main@@Base+0xdaa4>
  4122c5:	cmp    al,0x22
  4122c7:	jne    412683 <main@@Base+0xdd33>
  4122cd:	add    r15,0x14
  4122d1:	mov    rax,r14
  4122d4:	sub    rax,r15
  4122d7:	cmp    rax,0x2
  4122db:	jl     412472 <main@@Base+0xdb22>
  4122e1:	cmp    BYTE PTR [r15],0x20
  4122e5:	jg     412483 <main@@Base+0xdb33>
  4122eb:	jne    412472 <main@@Base+0xdb22>
  4122f1:	cmp    BYTE PTR [r15+0x1],0x20
  4122f6:	jle    412472 <main@@Base+0xdb22>
  4122fc:	inc    r15
  4122ff:	cmp    r15,r14
  412302:	jne    412488 <main@@Base+0xdb38>
  412308:	jmp    4124d1 <main@@Base+0xdb81>
  41230d:	mov    rdi,r12
  412310:	mov    rsi,r15
  412313:	mov    rdx,r14
  412316:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41231b:	mov    r15,rax
  41231e:	cmp    r15,r14
  412321:	je     4123d3 <main@@Base+0xda83>
  412327:	cmp    BYTE PTR [r15],0x3a
  41232b:	jne    4123d3 <main@@Base+0xda83>
  412331:	lea    rax,[r15+0x1]
  412335:	mov    rcx,r14
  412338:	sub    rcx,rax
  41233b:	cmp    rcx,0x2
  41233f:	jl     4125be <main@@Base+0xdc6e>
  412345:	cmp    BYTE PTR [rax],0x20
  412348:	jg     4125cc <main@@Base+0xdc7c>
  41234e:	jne    4125be <main@@Base+0xdc6e>
  412354:	cmp    BYTE PTR [r15+0x2],0x20
  412359:	jle    4125be <main@@Base+0xdc6e>
  41235f:	add    r15,0x2
  412363:	mov    rax,r15
  412366:	cmp    r13,rax
  412369:	jne    4125d5 <main@@Base+0xdc85>
  41236f:	jmp    412683 <main@@Base+0xdd33>
  412374:	mov    rdi,r12
  412377:	mov    rsi,r15
  41237a:	mov    rdx,r14
  41237d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412382:	mov    r15,rax
  412385:	cmp    r15,r14
  412388:	je     4123f4 <main@@Base+0xdaa4>
  41238a:	cmp    BYTE PTR [r15],0x3a
  41238e:	jne    4123f4 <main@@Base+0xdaa4>
  412390:	lea    rax,[r15+0x1]
  412394:	mov    rcx,r14
  412397:	sub    rcx,rax
  41239a:	cmp    rcx,0x2
  41239e:	jl     4125f7 <main@@Base+0xdca7>
  4123a4:	cmp    BYTE PTR [rax],0x20
  4123a7:	jg     412605 <main@@Base+0xdcb5>
  4123ad:	jne    4125f7 <main@@Base+0xdca7>
  4123b3:	cmp    BYTE PTR [r15+0x2],0x20
  4123b8:	jle    4125f7 <main@@Base+0xdca7>
  4123be:	add    r15,0x2
  4123c2:	mov    rax,r15
  4123c5:	cmp    r13,rax
  4123c8:	jne    41260a <main@@Base+0xdcba>
  4123ce:	jmp    412683 <main@@Base+0xdd33>
  4123d3:	mov    rdi,r12
  4123d6:	mov    rsi,r15
  4123d9:	mov    rdx,r14
  4123dc:	mov    ecx,0x4
  4123e1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4123e6:	cmp    r13,rax
  4123e9:	jne    4125d5 <main@@Base+0xdc85>
  4123ef:	jmp    412683 <main@@Base+0xdd33>
  4123f4:	mov    rdi,r12
  4123f7:	mov    rsi,r15
  4123fa:	mov    rdx,r14
  4123fd:	mov    ecx,0x4
  412402:	call   41e300 <flatcc_json_parser_set_error@@Base>
  412407:	cmp    r13,rax
  41240a:	jne    41260a <main@@Base+0xdcba>
  412410:	jmp    412683 <main@@Base+0xdd33>
  412415:	mov    rdi,r12
  412418:	mov    rsi,rax
  41241b:	mov    rdx,r14
  41241e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412423:	cmp    r13,rax
  412426:	je     412683 <main@@Base+0xdd33>
  41242c:	mov    r9,QWORD PTR [rsp+0x18]
  412431:	sub    rsp,0x8
  412435:	mov    ecx,0x4
  41243a:	mov    r13,r12
  41243d:	mov    rdi,r12
  412440:	mov    rsi,rax
  412443:	mov    rdx,r14
  412446:	mov    r8d,0x9
  41244c:	lea    rax,[rip+0x611d]        # 418570 <main@@Base+0x13c20>
  412453:	push   rax
  412454:	lea    rax,[rip+0x5375]        # 4177d0 <main@@Base+0x12e80>
  41245b:	push   rax
  41245c:	lea    rax,[rip+0x1723d]        # 4296a0 <filename@@Base+0x5d0>
  412463:	push   rax
  412464:	call   421190 <flatcc_json_parser_union_type_vector@@Base>
  412469:	add    rsp,0x20
  41246d:	jmp    412694 <main@@Base+0xdd44>
  412472:	mov    rdi,r12
  412475:	mov    rsi,r15
  412478:	mov    rdx,r14
  41247b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412480:	mov    r15,rax
  412483:	cmp    r15,r14
  412486:	je     4124d1 <main@@Base+0xdb81>
  412488:	cmp    BYTE PTR [r15],0x3a
  41248c:	jne    4124d1 <main@@Base+0xdb81>
  41248e:	lea    rax,[r15+0x1]
  412492:	mov    rcx,r14
  412495:	sub    rcx,rax
  412498:	cmp    rcx,0x2
  41249c:	jl     412639 <main@@Base+0xdce9>
  4124a2:	cmp    BYTE PTR [rax],0x20
  4124a5:	jg     412647 <main@@Base+0xdcf7>
  4124ab:	jne    412639 <main@@Base+0xdce9>
  4124b1:	cmp    BYTE PTR [r15+0x2],0x20
  4124b6:	jle    412639 <main@@Base+0xdce9>
  4124bc:	add    r15,0x2
  4124c0:	mov    rax,r15
  4124c3:	cmp    r13,rax
  4124c6:	jne    41264c <main@@Base+0xdcfc>
  4124cc:	jmp    412683 <main@@Base+0xdd33>
  4124d1:	mov    rdi,r12
  4124d4:	mov    rsi,r15
  4124d7:	mov    rdx,r14
  4124da:	mov    ecx,0x4
  4124df:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4124e4:	cmp    r13,rax
  4124e7:	jne    41264c <main@@Base+0xdcfc>
  4124ed:	jmp    412683 <main@@Base+0xdd33>
  4124f2:	mov    rdi,r12
  4124f5:	mov    rsi,rax
  4124f8:	mov    rdx,r14
  4124fb:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412500:	cmp    r13,rax
  412503:	je     412683 <main@@Base+0xdd33>
  412509:	mov    r9,QWORD PTR [rsp+0x18]
  41250e:	sub    rsp,0x8
  412512:	mov    ecx,0x1
  412517:	mov    r13,r12
  41251a:	mov    rdi,r12
  41251d:	mov    rsi,rax
  412520:	mov    rdx,r14
  412523:	mov    r8d,0x3
  412529:	jmp    41262a <main@@Base+0xdcda>
  41252e:	mov    rdi,r12
  412531:	mov    rsi,rax
  412534:	mov    rdx,r14
  412537:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41253c:	cmp    r13,rax
  41253f:	je     412683 <main@@Base+0xdd33>
  412545:	mov    r9,QWORD PTR [rsp+0x18]
  41254a:	mov    ecx,0x2
  41254f:	mov    r13,r12
  412552:	mov    rdi,r12
  412555:	mov    rsi,rax
  412558:	mov    rdx,r14
  41255b:	mov    r8d,0x5
  412561:	lea    rax,[rip+0x5268]        # 4177d0 <main@@Base+0x12e80>
  412568:	push   rax
  412569:	lea    rax,[rip+0x17170]        # 4296e0 <filename@@Base+0x610>
  412570:	jmp    412677 <main@@Base+0xdd27>
  412575:	mov    rdi,r12
  412578:	mov    rsi,rax
  41257b:	mov    rdx,r14
  41257e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412583:	cmp    r13,rax
  412586:	je     412683 <main@@Base+0xdd33>
  41258c:	mov    r9,QWORD PTR [rsp+0x18]
  412591:	sub    rsp,0x8
  412595:	mov    ecx,0x4
  41259a:	mov    r13,r12
  41259d:	mov    rdi,r12
  4125a0:	mov    rsi,rax
  4125a3:	mov    rdx,r14
  4125a6:	mov    r8d,0x9
  4125ac:	lea    rax,[rip+0x521d]        # 4177d0 <main@@Base+0x12e80>
  4125b3:	push   rax
  4125b4:	call   420cf0 <flatcc_json_parser_union_vector@@Base>
  4125b9:	jmp    41267d <main@@Base+0xdd2d>
  4125be:	mov    rdi,r12
  4125c1:	mov    rsi,rax
  4125c4:	mov    rdx,r14
  4125c7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4125cc:	cmp    r13,rax
  4125cf:	je     412683 <main@@Base+0xdd33>
  4125d5:	mov    r9,QWORD PTR [rsp+0x18]
  4125da:	sub    rsp,0x8
  4125de:	mov    r13,r12
  4125e1:	mov    rdi,r12
  4125e4:	mov    rsi,rax
  4125e7:	mov    rdx,r14
  4125ea:	mov    ecx,0x0
  4125ef:	mov    r8d,0x1
  4125f5:	jmp    41262a <main@@Base+0xdcda>
  4125f7:	mov    rdi,r12
  4125fa:	mov    rsi,rax
  4125fd:	mov    rdx,r14
  412600:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412605:	cmp    r13,rax
  412608:	je     412683 <main@@Base+0xdd33>
  41260a:	mov    r9,QWORD PTR [rsp+0x18]
  41260f:	sub    rsp,0x8
  412613:	mov    ecx,0x2
  412618:	mov    r13,r12
  41261b:	mov    rdi,r12
  41261e:	mov    rsi,rax
  412621:	mov    rdx,r14
  412624:	mov    r8d,0x5
  41262a:	lea    rax,[rip+0x519f]        # 4177d0 <main@@Base+0x12e80>
  412631:	push   rax
  412632:	call   420720 <flatcc_json_parser_union@@Base>
  412637:	jmp    41267d <main@@Base+0xdd2d>
  412639:	mov    rdi,r12
  41263c:	mov    rsi,rax
  41263f:	mov    rdx,r14
  412642:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412647:	cmp    r13,rax
  41264a:	je     412683 <main@@Base+0xdd33>
  41264c:	mov    r9,QWORD PTR [rsp+0x18]
  412651:	mov    r13,r12
  412654:	mov    rdi,r12
  412657:	mov    rsi,rax
  41265a:	mov    rdx,r14
  41265d:	mov    ecx,0x0
  412662:	mov    r8d,0x1
  412668:	lea    rax,[rip+0x5161]        # 4177d0 <main@@Base+0x12e80>
  41266f:	push   rax
  412670:	lea    rax,[rip+0x17049]        # 4296c0 <filename@@Base+0x5f0>
  412677:	push   rax
  412678:	call   420830 <flatcc_json_parser_union_type@@Base>
  41267d:	add    rsp,0x10
  412681:	jmp    412694 <main@@Base+0xdd44>
  412683:	mov    rdi,r12
  412686:	mov    rsi,r13
  412689:	mov    r13,r12
  41268c:	mov    rdx,r14
  41268f:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412694:	mov    r12,QWORD PTR [rsp]
  412698:	mov    rcx,r14
  41269b:	sub    rcx,rax
  41269e:	cmp    rcx,0x2
  4126a2:	jl     4126be <main@@Base+0xdd6e>
  4126a4:	cmp    BYTE PTR [rax],0x20
  4126a7:	jg     4126cc <main@@Base+0xdd7c>
  4126a9:	jne    4126be <main@@Base+0xdd6e>
  4126ab:	cmp    BYTE PTR [rax+0x1],0x20
  4126af:	jle    4126be <main@@Base+0xdd6e>
  4126b1:	inc    rax
  4126b4:	cmp    rax,r14
  4126b7:	jne    4126d5 <main@@Base+0xdd85>
  4126b9:	jmp    41275a <main@@Base+0xde0a>
  4126be:	mov    rdi,r13
  4126c1:	mov    rsi,rax
  4126c4:	mov    rdx,r14
  4126c7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4126cc:	cmp    rax,r14
  4126cf:	je     41275a <main@@Base+0xde0a>
  4126d5:	movzx  ecx,BYTE PTR [rax]
  4126d8:	cmp    cl,0x2c
  4126db:	jne    41276a <main@@Base+0xde1a>
  4126e1:	lea    rsi,[rax+0x1]
  4126e5:	mov    rcx,r14
  4126e8:	sub    rcx,rsi
  4126eb:	cmp    rcx,0x2
  4126ef:	jl     412704 <main@@Base+0xddb4>
  4126f1:	cmp    BYTE PTR [rsi],0x20
  4126f4:	jg     412712 <main@@Base+0xddc2>
  4126f6:	jne    412704 <main@@Base+0xddb4>
  4126f8:	cmp    BYTE PTR [rax+0x2],0x20
  4126fc:	jle    412704 <main@@Base+0xddb4>
  4126fe:	add    rax,0x2
  412702:	jmp    41270f <main@@Base+0xddbf>
  412704:	mov    rdi,r13
  412707:	mov    rdx,r14
  41270a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41270f:	mov    rsi,rax
  412712:	cmp    rsi,r14
  412715:	je     4127a7 <main@@Base+0xde57>
  41271b:	cmp    BYTE PTR [rsi],0x7d
  41271e:	jne    411385 <main@@Base+0xca35>
  412724:	lea    rbp,[rsi+0x1]
  412728:	mov    rax,r14
  41272b:	sub    rax,rbp
  41272e:	cmp    rax,0x2
  412732:	jl     412797 <main@@Base+0xde47>
  412734:	cmp    BYTE PTR [rbp+0x0],0x20
  412738:	jg     411273 <main@@Base+0xc923>
  41273e:	jne    412797 <main@@Base+0xde47>
  412740:	cmp    BYTE PTR [rsi+0x2],0x20
  412744:	jle    412797 <main@@Base+0xde47>
  412746:	add    rsi,0x2
  41274a:	mov    rbp,rsi
  41274d:	cmp    DWORD PTR [r13+0x20],0x0
  412752:	je     41127e <main@@Base+0xc92e>
  412758:	jmp    4127d0 <main@@Base+0xde80>
  41275a:	mov    rbp,r14
  41275d:	cmp    DWORD PTR [r13+0x20],0x0
  412762:	je     41127e <main@@Base+0xc92e>
  412768:	jmp    4127d0 <main@@Base+0xde80>
  41276a:	cmp    cl,0x7d
  41276d:	jne    4127af <main@@Base+0xde5f>
  41276f:	lea    rbp,[rax+0x1]
  412773:	mov    rcx,r14
  412776:	sub    rcx,rbp
  412779:	cmp    rcx,0x2
  41277d:	jl     412797 <main@@Base+0xde47>
  41277f:	cmp    BYTE PTR [rbp+0x0],0x20
  412783:	jg     411273 <main@@Base+0xc923>
  412789:	jne    412797 <main@@Base+0xde47>
  41278b:	cmp    BYTE PTR [rax+0x2],0x20
  41278f:	jle    412797 <main@@Base+0xde47>
  412791:	add    rax,0x2
  412795:	jmp    4127c2 <main@@Base+0xde72>
  412797:	mov    rdi,r13
  41279a:	mov    rsi,rbp
  41279d:	mov    rdx,r14
  4127a0:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4127a5:	jmp    4127c2 <main@@Base+0xde72>
  4127a7:	mov    rdi,r13
  4127aa:	mov    rsi,r14
  4127ad:	jmp    4127b5 <main@@Base+0xde65>
  4127af:	mov    rdi,r13
  4127b2:	mov    rsi,rax
  4127b5:	mov    rdx,r14
  4127b8:	mov    ecx,0xa
  4127bd:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4127c2:	mov    rbp,rax
  4127c5:	cmp    DWORD PTR [r13+0x20],0x0
  4127ca:	je     41127e <main@@Base+0xc92e>
  4127d0:	mov    rdi,r13
  4127d3:	mov    rsi,rbp
  4127d6:	mov    rdx,r14
  4127d9:	mov    ecx,0x21
  4127de:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4127e3:	mov    rbp,rax
  4127e6:	jmp    41294b <main@@Base+0xdffb>
  4127eb:	cmp    cl,0x7d
  4127ee:	jne    412997 <main@@Base+0xe047>
  4127f4:	lea    rbp,[rax+0x1]
  4127f8:	mov    rcx,r14
  4127fb:	sub    rcx,rbp
  4127fe:	cmp    rcx,0x2
  412802:	jl     412860 <main@@Base+0xdf10>
  412804:	cmp    BYTE PTR [rbp+0x0],0x20
  412808:	jg     40fdd5 <main@@Base+0xb485>
  41280e:	jne    412860 <main@@Base+0xdf10>
  412810:	cmp    BYTE PTR [rax+0x2],0x20
  412814:	jle    412860 <main@@Base+0xdf10>
  412816:	add    rax,0x2
  41281a:	jmp    40fdd2 <main@@Base+0xb482>
  41281f:	cmp    al,0x7d
  412821:	jne    41299f <main@@Base+0xe04f>
  412827:	lea    rbp,[rbx+0x1]
  41282b:	mov    rax,r14
  41282e:	sub    rax,rbp
  412831:	cmp    rax,0x2
  412835:	jl     412860 <main@@Base+0xdf10>
  412837:	cmp    BYTE PTR [rbp+0x0],0x20
  41283b:	jg     40fdd5 <main@@Base+0xb485>
  412841:	jne    412860 <main@@Base+0xdf10>
  412843:	cmp    BYTE PTR [rbx+0x2],0x20
  412847:	jle    412860 <main@@Base+0xdf10>
  412849:	add    rbx,0x2
  41284d:	mov    rbp,rbx
  412850:	cmp    DWORD PTR [r13+0x20],0x0
  412855:	jne    41294b <main@@Base+0xdffb>
  41285b:	jmp    41293a <main@@Base+0xdfea>
  412860:	mov    rdi,r13
  412863:	mov    rsi,rbp
  412866:	mov    rdx,r14
  412869:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41286e:	jmp    40fdd2 <main@@Base+0xb482>
  412873:	mov    rbp,rbx
  412876:	jmp    41294b <main@@Base+0xdffb>
  41287b:	mov    rax,r14
  41287e:	cmp    DWORD PTR [r13+0x20],0x0
  412883:	jne    40fe28 <main@@Base+0xb4d8>
  412889:	jmp    412924 <main@@Base+0xdfd4>
  41288e:	cmp    al,0x7d
  412890:	jne    4129b2 <main@@Base+0xe062>
  412896:	lea    rax,[rbp+0x1]
  41289a:	mov    rcx,r14
  41289d:	sub    rcx,rax
  4128a0:	cmp    rcx,0x2
  4128a4:	jl     41290b <main@@Base+0xdfbb>
  4128a6:	cmp    BYTE PTR [rax],0x20
  4128a9:	jg     40fe1d <main@@Base+0xb4cd>
  4128af:	jne    41290b <main@@Base+0xdfbb>
  4128b1:	cmp    BYTE PTR [rbp+0x2],0x20
  4128b5:	jle    41290b <main@@Base+0xdfbb>
  4128b7:	add    rbp,0x2
  4128bb:	mov    rax,rbp
  4128be:	cmp    DWORD PTR [r13+0x20],0x0
  4128c3:	jne    40fe28 <main@@Base+0xb4d8>
  4128c9:	jmp    412924 <main@@Base+0xdfd4>
  4128cb:	mov    rdi,r13
  4128ce:	mov    rsi,r14
  4128d1:	jmp    4129b8 <main@@Base+0xe068>
  4128d6:	lea    rax,[rsi+0x1]
  4128da:	mov    rcx,r14
  4128dd:	sub    rcx,rax
  4128e0:	cmp    rcx,0x2
  4128e4:	jl     41290b <main@@Base+0xdfbb>
  4128e6:	cmp    BYTE PTR [rax],0x20
  4128e9:	jg     40fe1d <main@@Base+0xb4cd>
  4128ef:	jne    41290b <main@@Base+0xdfbb>
  4128f1:	cmp    BYTE PTR [rsi+0x2],0x20
  4128f5:	jle    41290b <main@@Base+0xdfbb>
  4128f7:	add    rsi,0x2
  4128fb:	mov    rax,rsi
  4128fe:	cmp    DWORD PTR [r13+0x20],0x0
  412903:	jne    40fe28 <main@@Base+0xb4d8>
  412909:	jmp    412924 <main@@Base+0xdfd4>
  41290b:	mov    rdi,r13
  41290e:	mov    rsi,rax
  412911:	mov    rdx,r14
  412914:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412919:	cmp    DWORD PTR [r13+0x20],0x0
  41291e:	jne    40fe28 <main@@Base+0xb4d8>
  412924:	mov    rcx,QWORD PTR [rsp+0x28]
  412929:	mov    rdi,r13
  41292c:	mov    rsi,rax
  41292f:	mov    rdx,r14
  412932:	call   4206b0 <flatcc_json_parser_finalize_unions@@Base>
  412937:	mov    rbp,rax
  41293a:	mov    rdi,QWORD PTR [r13+0x0]
  41293e:	call   41b9a0 <flatcc_builder_end_table@@Base>
  412943:	mov    DWORD PTR [r12],eax
  412947:	test   eax,eax
  412949:	jne    412961 <main@@Base+0xe011>
  41294b:	mov    rdi,r13
  41294e:	mov    rsi,rbp
  412951:	mov    rdx,r14
  412954:	mov    ecx,0x21
  412959:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41295e:	mov    rbp,rax
  412961:	cmp    DWORD PTR [r13+0x20],0x0
  412966:	jne    412985 <main@@Base+0xe035>
  412968:	cmp    DWORD PTR [r12],0x0
  41296d:	jne    412985 <main@@Base+0xe035>
  41296f:	mov    rdi,r13
  412972:	mov    rsi,rbp
  412975:	mov    rdx,r14
  412978:	mov    ecx,0x21
  41297d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  412982:	mov    rbp,rax
  412985:	mov    rax,rbp
  412988:	add    rsp,0x38
  41298c:	pop    rbx
  41298d:	pop    r12
  41298f:	pop    r13
  412991:	pop    r14
  412993:	pop    r15
  412995:	pop    rbp
  412996:	ret    
  412997:	mov    rdi,r13
  41299a:	mov    rsi,rax
  41299d:	jmp    4129a5 <main@@Base+0xe055>
  41299f:	mov    rdi,r13
  4129a2:	mov    rsi,rbx
  4129a5:	mov    rdx,r14
  4129a8:	mov    ecx,0xa
  4129ad:	jmp    40fdcd <main@@Base+0xb47d>
  4129b2:	mov    rdi,r13
  4129b5:	mov    rsi,rbp
  4129b8:	mov    rdx,r14
  4129bb:	mov    ecx,0xa
  4129c0:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4129c5:	cmp    DWORD PTR [r13+0x20],0x0
  4129ca:	jne    40fe28 <main@@Base+0xb4d8>
  4129d0:	jmp    412924 <main@@Base+0xdfd4>
  4129d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129df:	nop
  4129e0:	push   rbp
  4129e1:	push   r15
  4129e3:	push   r14
  4129e5:	push   r13
  4129e7:	push   r12
  4129e9:	push   rbx
  4129ea:	push   rax
  4129eb:	mov    rbp,rcx
  4129ee:	mov    rbx,rsi
  4129f1:	mov    rcx,rdx
  4129f4:	sub    rcx,rsi
  4129f7:	cmp    rcx,0x8
  4129fb:	jb     412a04 <main@@Base+0xe0b4>
  4129fd:	movbe  r14,QWORD PTR [rbx]
  412a02:	jmp    412a73 <main@@Base+0xe123>
  412a04:	dec    rcx
  412a07:	cmp    rcx,0x6
  412a0b:	ja     412b8e <main@@Base+0xe23e>
  412a11:	xor    eax,eax
  412a13:	lea    rsi,[rip+0xfc26]        # 422640 <_IO_stdin_used@@Base+0x640>
  412a1a:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  412a1e:	add    rcx,rsi
  412a21:	jmp    rcx
  412a23:	movsx  rax,BYTE PTR [rbx+0x6]
  412a28:	shl    rax,0x8
  412a2c:	movsx  rcx,BYTE PTR [rbx+0x5]
  412a31:	shl    rcx,0x10
  412a35:	or     rax,rcx
  412a38:	movsx  rcx,BYTE PTR [rbx+0x4]
  412a3d:	shl    rcx,0x18
  412a41:	or     rax,rcx
  412a44:	movsx  rcx,BYTE PTR [rbx+0x3]
  412a49:	shl    rcx,0x20
  412a4d:	or     rax,rcx
  412a50:	movsx  rcx,BYTE PTR [rbx+0x2]
  412a55:	shl    rcx,0x28
  412a59:	or     rax,rcx
  412a5c:	movsx  rcx,BYTE PTR [rbx+0x1]
  412a61:	shl    rcx,0x30
  412a65:	or     rax,rcx
  412a68:	movzx  r14d,BYTE PTR [rbx]
  412a6c:	shl    r14,0x38
  412a70:	or     r14,rax
  412a73:	movabs rax,0x4d6f6e7374657200
  412a7d:	cmp    r14,rax
  412a80:	jae    412abb <main@@Base+0xe16b>
  412a82:	shr    r14,0x28
  412a86:	cmp    r14,0x416c74
  412a8d:	jne    412b8e <main@@Base+0xe23e>
  412a93:	mov    r14,r8
  412a96:	mov    rsi,rbx
  412a99:	mov    ecx,0x3
  412a9e:	mov    r8,r9
  412aa1:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  412aa6:	cmp    rax,rbx
  412aa9:	je     412b8e <main@@Base+0xe23e>
  412aaf:	mov    QWORD PTR [r14],0x4
  412ab6:	jmp    412b84 <main@@Base+0xe234>
  412abb:	lea    rcx,[rax+0x32]
  412abf:	cmp    r14,rcx
  412ac2:	jne    412aec <main@@Base+0xe19c>
  412ac4:	mov    r14,r8
  412ac7:	mov    rsi,rbx
  412aca:	mov    ecx,0x8
  412acf:	mov    r8,r9
  412ad2:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  412ad7:	cmp    rax,rbx
  412ada:	je     412b8e <main@@Base+0xe23e>
  412ae0:	mov    QWORD PTR [r14],0x3
  412ae7:	jmp    412b84 <main@@Base+0xe234>
  412aec:	mov    rcx,r14
  412aef:	and    rcx,0xffffffffffffff00
  412af6:	cmp    rcx,rax
  412af9:	jne    412b39 <main@@Base+0xe1e9>
  412afb:	mov    r13,rdi
  412afe:	mov    rsi,rbx
  412b01:	mov    ecx,0x7
  412b06:	mov    QWORD PTR [rsp],rbp
  412b0a:	mov    rbp,r8
  412b0d:	mov    r8,r9
  412b10:	mov    r15,r9
  412b13:	mov    r12,rdx
  412b16:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  412b1b:	mov    rdx,r12
  412b1e:	mov    rdi,r13
  412b21:	mov    r9,r15
  412b24:	mov    r8,rbp
  412b27:	mov    rbp,QWORD PTR [rsp]
  412b2b:	cmp    rax,rbx
  412b2e:	je     412b39 <main@@Base+0xe1e9>
  412b30:	mov    QWORD PTR [r8],0x1
  412b37:	jmp    412b84 <main@@Base+0xe234>
  412b39:	mov    rax,r14
  412b3c:	shr    rax,0x20
  412b40:	cmp    rax,0x4e4f4e45
  412b46:	jne    412ba0 <main@@Base+0xe250>
  412b48:	mov    r13,rdi
  412b4b:	mov    rsi,rbx
  412b4e:	mov    ecx,0x4
  412b53:	mov    QWORD PTR [rsp],rbp
  412b57:	mov    rbp,r8
  412b5a:	mov    r8,r9
  412b5d:	mov    r15,r9
  412b60:	mov    r12,rdx
  412b63:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  412b68:	mov    rdx,r12
  412b6b:	mov    rdi,r13
  412b6e:	mov    r9,r15
  412b71:	mov    r8,rbp
  412b74:	mov    rbp,QWORD PTR [rsp]
  412b78:	cmp    rax,rbx
  412b7b:	je     412ba0 <main@@Base+0xe250>
  412b7d:	mov    QWORD PTR [r8],0x0
  412b84:	mov    DWORD PTR [rbp+0x0],0x0
  412b8b:	mov    rbx,rax
  412b8e:	mov    rax,rbx
  412b91:	add    rsp,0x8
  412b95:	pop    rbx
  412b96:	pop    r12
  412b98:	pop    r13
  412b9a:	pop    r14
  412b9c:	pop    r15
  412b9e:	pop    rbp
  412b9f:	ret    
  412ba0:	movabs rax,0x5465737453696d70
  412baa:	cmp    r14,rax
  412bad:	jne    412b8e <main@@Base+0xe23e>
  412baf:	lea    rax,[rbx+0x8]
  412bb3:	mov    rsi,rdx
  412bb6:	sub    rsi,rax
  412bb9:	cmp    rsi,0x8
  412bbd:	jb     412bc6 <main@@Base+0xe276>
  412bbf:	movbe  rax,QWORD PTR [rax]
  412bc4:	jmp    412c30 <main@@Base+0xe2e0>
  412bc6:	dec    rsi
  412bc9:	cmp    rsi,0x6
  412bcd:	ja     412b8e <main@@Base+0xe23e>
  412bcf:	xor    ecx,ecx
  412bd1:	lea    r10,[rip+0xfa84]        # 42265c <_IO_stdin_used@@Base+0x65c>
  412bd8:	movsxd rsi,DWORD PTR [r10+rsi*4]
  412bdc:	add    rsi,r10
  412bdf:	jmp    rsi
  412be1:	movsx  rcx,BYTE PTR [rbx+0xe]
  412be6:	shl    rcx,0x8
  412bea:	movsx  rsi,BYTE PTR [rbx+0xd]
  412bef:	shl    rsi,0x10
  412bf3:	or     rcx,rsi
  412bf6:	movsx  rsi,BYTE PTR [rbx+0xc]
  412bfb:	shl    rsi,0x18
  412bff:	or     rcx,rsi
  412c02:	movsx  rsi,BYTE PTR [rbx+0xb]
  412c07:	shl    rsi,0x20
  412c0b:	or     rcx,rsi
  412c0e:	movsx  rsi,BYTE PTR [rbx+0xa]
  412c13:	shl    rsi,0x28
  412c17:	or     rcx,rsi
  412c1a:	movsx  rsi,BYTE PTR [rbx+0x9]
  412c1f:	shl    rsi,0x30
  412c23:	or     rcx,rsi
  412c26:	movzx  eax,BYTE PTR [rax]
  412c29:	shl    rax,0x38
  412c2d:	or     rax,rcx
  412c30:	movabs rcx,0x6c655461626c6557
  412c3a:	cmp    rax,rcx
  412c3d:	jne    412b8e <main@@Base+0xe23e>
  412c43:	lea    r15,[rbx+0x10]
  412c47:	mov    rcx,rdx
  412c4a:	sub    rcx,r15
  412c4d:	cmp    rcx,0x8
  412c51:	jb     412c5a <main@@Base+0xe30a>
  412c53:	movbe  rcx,QWORD PTR [r15]
  412c58:	jmp    412cc9 <main@@Base+0xe379>
  412c5a:	dec    rcx
  412c5d:	cmp    rcx,0x6
  412c61:	ja     412b8e <main@@Base+0xe23e>
  412c67:	xor    eax,eax
  412c69:	lea    rsi,[rip+0xfa08]        # 422678 <_IO_stdin_used@@Base+0x678>
  412c70:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  412c74:	add    rcx,rsi
  412c77:	jmp    rcx
  412c79:	movsx  rax,BYTE PTR [rbx+0x16]
  412c7e:	shl    rax,0x8
  412c82:	movsx  rcx,BYTE PTR [rbx+0x15]
  412c87:	shl    rcx,0x10
  412c8b:	or     rax,rcx
  412c8e:	movsx  rcx,BYTE PTR [rbx+0x14]
  412c93:	shl    rcx,0x18
  412c97:	or     rax,rcx
  412c9a:	movsx  rcx,BYTE PTR [rbx+0x13]
  412c9f:	shl    rcx,0x20
  412ca3:	or     rax,rcx
  412ca6:	movsx  rcx,BYTE PTR [rbx+0x12]
  412cab:	shl    rcx,0x28
  412caf:	or     rax,rcx
  412cb2:	movsx  rcx,BYTE PTR [rbx+0x11]
  412cb7:	shl    rcx,0x30
  412cbb:	or     rax,rcx
  412cbe:	movzx  ecx,BYTE PTR [r15]
  412cc2:	shl    rcx,0x38
  412cc6:	or     rcx,rax
  412cc9:	shr    rcx,0x8
  412ccd:	movabs rax,0x697468456e756d
  412cd7:	cmp    rcx,rax
  412cda:	jne    412b8e <main@@Base+0xe23e>
  412ce0:	mov    r14,r8
  412ce3:	mov    rsi,r15
  412ce6:	mov    ecx,0x7
  412ceb:	mov    r8,r9
  412cee:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  412cf3:	cmp    rax,r15
  412cf6:	je     412b8e <main@@Base+0xe23e>
  412cfc:	mov    QWORD PTR [r14],0x2
  412d03:	jmp    412b84 <main@@Base+0xe234>
  412d08:	nop    DWORD PTR [rax+rax*1+0x0]
  412d10:	push   rbp
  412d11:	push   r15
  412d13:	push   r14
  412d15:	push   r13
  412d17:	push   r12
  412d19:	push   rbx
  412d1a:	sub    rsp,0x38
  412d1e:	mov    r15,r8
  412d21:	mov    rbp,rcx
  412d24:	mov    r12,rdx
  412d27:	mov    rbx,rsi
  412d2a:	mov    r14,rdi
  412d2d:	mov    BYTE PTR [r8],0x0
  412d31:	cmp    rsi,rdx
  412d34:	je     412d4b <main@@Base+0xe3fb>
  412d36:	mov    al,BYTE PTR [rbx]
  412d38:	cmp    al,0x2e
  412d3a:	je     412d5c <main@@Base+0xe40c>
  412d3c:	cmp    al,0x22
  412d3e:	jne    412d7b <main@@Base+0xe42b>
  412d40:	inc    rbx
  412d43:	mov    DWORD PTR [r14+0x14],0x0
  412d4b:	cmp    DWORD PTR [r14+0x14],0x0
  412d50:	je     412d8a <main@@Base+0xe43a>
  412d52:	cmp    rbx,r12
  412d55:	jne    412dca <main@@Base+0xe47a>
  412d57:	jmp    412eb0 <main@@Base+0xe560>
  412d5c:	mov    rdi,r14
  412d5f:	mov    rsi,rbx
  412d62:	mov    rdx,r12
  412d65:	mov    ecx,0x5
  412d6a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  412d6f:	mov    rbx,rax
  412d72:	cmp    DWORD PTR [r14+0x14],0x0
  412d77:	jne    412d52 <main@@Base+0xe402>
  412d79:	jmp    412d8a <main@@Base+0xe43a>
  412d7b:	mov    DWORD PTR [r14+0x14],0x1
  412d83:	cmp    DWORD PTR [r14+0x14],0x0
  412d88:	jne    412d52 <main@@Base+0xe402>
  412d8a:	mov    rax,r12
  412d8d:	sub    rax,rbx
  412d90:	cmp    rax,0x2
  412d94:	jl     412db0 <main@@Base+0xe460>
  412d96:	cmp    BYTE PTR [rbx],0x20
  412d99:	jg     412d52 <main@@Base+0xe402>
  412d9b:	jne    412db0 <main@@Base+0xe460>
  412d9d:	cmp    BYTE PTR [rbx+0x1],0x20
  412da1:	jle    412db0 <main@@Base+0xe460>
  412da3:	inc    rbx
  412da6:	cmp    rbx,r12
  412da9:	jne    412dca <main@@Base+0xe47a>
  412dab:	jmp    412eb0 <main@@Base+0xe560>
  412db0:	mov    rdi,r14
  412db3:	mov    rsi,rbx
  412db6:	mov    rdx,r12
  412db9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412dbe:	mov    rbx,rax
  412dc1:	cmp    rbx,r12
  412dc4:	je     412eb0 <main@@Base+0xe560>
  412dca:	lea    rax,[rbp+0x8]
  412dce:	mov    DWORD PTR [rsp+0x8],0x0
  412dd6:	mov    DWORD PTR [rsp+0xc],0x0
  412dde:	mov    QWORD PTR [rsp+0x20],r15
  412de3:	mov    QWORD PTR [rsp+0x18],rbp
  412de8:	mov    QWORD PTR [rsp+0x28],rax
  412ded:	mov    rbp,QWORD PTR [rbp+0x0]
  412df1:	mov    r15,rax
  412df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412dfe:	xchg   ax,ax
  412e00:	mov    rdi,r14
  412e03:	mov    rsi,rbx
  412e06:	mov    rdx,r12
  412e09:	lea    rcx,[rsp+0x14]
  412e0e:	lea    r8,[rsp+0x30]
  412e13:	lea    r9,[rsp+0x10]
  412e18:	call   rbp
  412e1a:	cmp    rax,r12
  412e1d:	je     412eb0 <main@@Base+0xe560>
  412e23:	mov    r13,rax
  412e26:	cmp    rax,rbx
  412e29:	jne    412e40 <main@@Base+0xe4f0>
  412e2b:	mov    rbp,QWORD PTR [r15]
  412e2e:	add    r15,0x8
  412e32:	test   rbp,rbp
  412e35:	jne    412e00 <main@@Base+0xe4b0>
  412e37:	jmp    412eb5 <main@@Base+0xe565>
  412e39:	nop    DWORD PTR [rax+0x0]
  412e40:	mov    ebx,DWORD PTR [rsp+0xc]
  412e44:	test   ebx,ebx
  412e46:	je     412e53 <main@@Base+0xe503>
  412e48:	cmp    DWORD PTR [r14+0x14],0x0
  412e4d:	jne    412edd <main@@Base+0xe58d>
  412e53:	cmp    DWORD PTR [rsp+0x14],0x0
  412e58:	je     412e6f <main@@Base+0xe51f>
  412e5a:	mov    rdi,r14
  412e5d:	mov    rsi,r13
  412e60:	mov    rdx,r12
  412e63:	mov    ecx,0x8
  412e68:	call   41e300 <flatcc_json_parser_set_error@@Base>
  412e6d:	jmp    412e7f <main@@Base+0xe52f>
  412e6f:	cmp    QWORD PTR [rsp+0x30],0x0
  412e75:	setne  al
  412e78:	mov    DWORD PTR [rsp+0x8],eax
  412e7c:	mov    rax,r13
  412e7f:	mov    r15,QWORD PTR [rsp+0x20]
  412e84:	mov    rbp,QWORD PTR [rsp+0x18]
  412e89:	cmp    rax,r12
  412e8c:	je     412eb0 <main@@Base+0xe560>
  412e8e:	inc    ebx
  412e90:	mov    DWORD PTR [rsp+0xc],ebx
  412e94:	mov    eax,DWORD PTR [rsp+0x8]
  412e98:	add    BYTE PTR [r15],al
  412e9b:	cmp    DWORD PTR [rsp+0x10],0x0
  412ea0:	mov    rbx,r13
  412ea3:	mov    rax,QWORD PTR [rsp+0x28]
  412ea8:	jne    412ded <main@@Base+0xe49d>
  412eae:	jmp    412ecb <main@@Base+0xe57b>
  412eb0:	mov    r13,r12
  412eb3:	jmp    412ecb <main@@Base+0xe57b>
  412eb5:	mov    rdi,r14
  412eb8:	mov    rsi,rbx
  412ebb:	mov    rdx,r12
  412ebe:	mov    ecx,0x17
  412ec3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  412ec8:	mov    r13,rax
  412ecb:	mov    rax,r13
  412ece:	add    rsp,0x38
  412ed2:	pop    rbx
  412ed3:	pop    r12
  412ed5:	pop    r13
  412ed7:	pop    r14
  412ed9:	pop    r15
  412edb:	pop    rbp
  412edc:	ret    
  412edd:	mov    rdi,r14
  412ee0:	mov    rsi,r13
  412ee3:	mov    rdx,r12
  412ee6:	mov    ecx,0xe
  412eeb:	jmp    412ec3 <main@@Base+0xe573>
  412eed:	nop    DWORD PTR [rax]
  412ef0:	push   rbp
  412ef1:	push   r15
  412ef3:	push   r14
  412ef5:	push   r13
  412ef7:	push   r12
  412ef9:	push   rbx
  412efa:	sub    rsp,0x48
  412efe:	mov    rbx,r8
  412f01:	mov    rbp,rcx
  412f04:	mov    r13,rdx
  412f07:	mov    r14,rsi
  412f0a:	mov    r15,rdi
  412f0d:	mov    DWORD PTR [r8],0x0
  412f14:	cmp    rsi,rdx
  412f17:	je     412f2f <main@@Base+0xe5df>
  412f19:	mov    al,BYTE PTR [r14]
  412f1c:	cmp    al,0x2e
  412f1e:	je     412f40 <main@@Base+0xe5f0>
  412f20:	cmp    al,0x22
  412f22:	jne    412f5f <main@@Base+0xe60f>
  412f24:	inc    r14
  412f27:	mov    DWORD PTR [r15+0x14],0x0
  412f2f:	cmp    DWORD PTR [r15+0x14],0x0
  412f34:	je     412f6e <main@@Base+0xe61e>
  412f36:	cmp    r14,r13
  412f39:	jne    412fb0 <main@@Base+0xe660>
  412f3b:	jmp    41309f <main@@Base+0xe74f>
  412f40:	mov    rdi,r15
  412f43:	mov    rsi,r14
  412f46:	mov    rdx,r13
  412f49:	mov    ecx,0x5
  412f4e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  412f53:	mov    r14,rax
  412f56:	cmp    DWORD PTR [r15+0x14],0x0
  412f5b:	jne    412f36 <main@@Base+0xe5e6>
  412f5d:	jmp    412f6e <main@@Base+0xe61e>
  412f5f:	mov    DWORD PTR [r15+0x14],0x1
  412f67:	cmp    DWORD PTR [r15+0x14],0x0
  412f6c:	jne    412f36 <main@@Base+0xe5e6>
  412f6e:	mov    rax,r13
  412f71:	sub    rax,r14
  412f74:	cmp    rax,0x2
  412f78:	jl     412f96 <main@@Base+0xe646>
  412f7a:	cmp    BYTE PTR [r14],0x20
  412f7e:	jg     412f36 <main@@Base+0xe5e6>
  412f80:	jne    412f96 <main@@Base+0xe646>
  412f82:	cmp    BYTE PTR [r14+0x1],0x20
  412f87:	jle    412f96 <main@@Base+0xe646>
  412f89:	inc    r14
  412f8c:	cmp    r14,r13
  412f8f:	jne    412fb0 <main@@Base+0xe660>
  412f91:	jmp    41309f <main@@Base+0xe74f>
  412f96:	mov    rdi,r15
  412f99:	mov    rsi,r14
  412f9c:	mov    rdx,r13
  412f9f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  412fa4:	mov    r14,rax
  412fa7:	cmp    r14,r13
  412faa:	je     41309f <main@@Base+0xe74f>
  412fb0:	lea    rax,[rbp+0x8]
  412fb4:	xor    edx,edx
  412fb6:	lea    r12,[rsp+0x8]
  412fbb:	vbroadcastss xmm0,DWORD PTR [rip+0xf054]        # 422018 <_IO_stdin_used@@Base+0x18>
  412fc4:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  412fca:	mov    QWORD PTR [rsp+0x20],rbx
  412fcf:	mov    QWORD PTR [rsp+0x18],rbp
  412fd4:	mov    QWORD PTR [rsp+0x10],rax
  412fd9:	mov    DWORD PTR [rsp+0x4],edx
  412fdd:	mov    rbx,QWORD PTR [rbp+0x0]
  412fe1:	mov    rbp,rax
  412fe4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fee:	xchg   ax,ax
  412ff0:	mov    rdi,r15
  412ff3:	mov    rsi,r14
  412ff6:	mov    rdx,r13
  412ff9:	lea    rcx,[rsp+0xc]
  412ffe:	lea    r8,[rsp+0x28]
  413003:	mov    r9,r12
  413006:	call   rbx
  413008:	cmp    rax,r13
  41300b:	je     41309f <main@@Base+0xe74f>
  413011:	cmp    rax,r14
  413014:	jne    413030 <main@@Base+0xe6e0>
  413016:	mov    rbx,QWORD PTR [rbp+0x0]
  41301a:	add    rbp,0x8
  41301e:	test   rbx,rbx
  413021:	jne    412ff0 <main@@Base+0xe6a0>
  413023:	jmp    4130a4 <main@@Base+0xe754>
  413025:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41302f:	nop
  413030:	mov    r14,rax
  413033:	mov    edx,DWORD PTR [rsp+0x4]
  413037:	test   edx,edx
  413039:	je     413046 <main@@Base+0xe6f6>
  41303b:	cmp    DWORD PTR [r15+0x14],0x0
  413040:	jne    4130cc <main@@Base+0xe77c>
  413046:	mov    rax,QWORD PTR [rsp+0x28]
  41304b:	test   rax,rax
  41304e:	js     413057 <main@@Base+0xe707>
  413050:	vcvtsi2ss xmm0,xmm1,rax
  413055:	jmp    41306c <main@@Base+0xe71c>
  413057:	mov    rcx,rax
  41305a:	shr    rcx,1
  41305d:	and    eax,0x1
  413060:	or     rax,rcx
  413063:	vcvtsi2ss xmm0,xmm1,rax
  413068:	vaddss xmm0,xmm0,xmm0
  41306c:	mov    rbx,QWORD PTR [rsp+0x20]
  413071:	mov    rbp,QWORD PTR [rsp+0x18]
  413076:	mov    rax,QWORD PTR [rsp+0x10]
  41307b:	cmp    DWORD PTR [rsp+0xc],0x0
  413080:	je     413088 <main@@Base+0xe738>
  413082:	vxorps xmm0,xmm0,XMMWORD PTR [rsp+0x30]
  413088:	inc    edx
  41308a:	vaddss xmm0,xmm0,DWORD PTR [rbx]
  41308e:	vmovss DWORD PTR [rbx],xmm0
  413092:	cmp    DWORD PTR [rsp+0x8],0x0
  413097:	jne    412fd9 <main@@Base+0xe689>
  41309d:	jmp    4130ba <main@@Base+0xe76a>
  41309f:	mov    r14,r13
  4130a2:	jmp    4130ba <main@@Base+0xe76a>
  4130a4:	mov    rdi,r15
  4130a7:	mov    rsi,r14
  4130aa:	mov    rdx,r13
  4130ad:	mov    ecx,0x17
  4130b2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4130b7:	mov    r14,rax
  4130ba:	mov    rax,r14
  4130bd:	add    rsp,0x48
  4130c1:	pop    rbx
  4130c2:	pop    r12
  4130c4:	pop    r13
  4130c6:	pop    r14
  4130c8:	pop    r15
  4130ca:	pop    rbp
  4130cb:	ret    
  4130cc:	mov    rdi,r15
  4130cf:	mov    rsi,r14
  4130d2:	mov    rdx,r13
  4130d5:	mov    ecx,0xe
  4130da:	jmp    4130b2 <main@@Base+0xe762>
  4130dc:	nop    DWORD PTR [rax+0x0]
  4130e0:	push   rbp
  4130e1:	push   r15
  4130e3:	push   r14
  4130e5:	push   r13
  4130e7:	push   r12
  4130e9:	push   rbx
  4130ea:	sub    rsp,0x38
  4130ee:	mov    r15,r8
  4130f1:	mov    rbp,rcx
  4130f4:	mov    r12,rdx
  4130f7:	mov    rbx,rsi
  4130fa:	mov    r14,rdi
  4130fd:	mov    DWORD PTR [r8],0x0
  413104:	cmp    rsi,rdx
  413107:	je     41311e <main@@Base+0xe7ce>
  413109:	mov    al,BYTE PTR [rbx]
  41310b:	cmp    al,0x2e
  41310d:	je     41312f <main@@Base+0xe7df>
  41310f:	cmp    al,0x22
  413111:	jne    41314e <main@@Base+0xe7fe>
  413113:	inc    rbx
  413116:	mov    DWORD PTR [r14+0x14],0x0
  41311e:	cmp    DWORD PTR [r14+0x14],0x0
  413123:	je     41315d <main@@Base+0xe80d>
  413125:	cmp    rbx,r12
  413128:	jne    41319d <main@@Base+0xe84d>
  41312a:	jmp    4132ae <main@@Base+0xe95e>
  41312f:	mov    rdi,r14
  413132:	mov    rsi,rbx
  413135:	mov    rdx,r12
  413138:	mov    ecx,0x5
  41313d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413142:	mov    rbx,rax
  413145:	cmp    DWORD PTR [r14+0x14],0x0
  41314a:	jne    413125 <main@@Base+0xe7d5>
  41314c:	jmp    41315d <main@@Base+0xe80d>
  41314e:	mov    DWORD PTR [r14+0x14],0x1
  413156:	cmp    DWORD PTR [r14+0x14],0x0
  41315b:	jne    413125 <main@@Base+0xe7d5>
  41315d:	mov    rax,r12
  413160:	sub    rax,rbx
  413163:	cmp    rax,0x2
  413167:	jl     413183 <main@@Base+0xe833>
  413169:	cmp    BYTE PTR [rbx],0x20
  41316c:	jg     413125 <main@@Base+0xe7d5>
  41316e:	jne    413183 <main@@Base+0xe833>
  413170:	cmp    BYTE PTR [rbx+0x1],0x20
  413174:	jle    413183 <main@@Base+0xe833>
  413176:	inc    rbx
  413179:	cmp    rbx,r12
  41317c:	jne    41319d <main@@Base+0xe84d>
  41317e:	jmp    4132ae <main@@Base+0xe95e>
  413183:	mov    rdi,r14
  413186:	mov    rsi,rbx
  413189:	mov    rdx,r12
  41318c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  413191:	mov    rbx,rax
  413194:	cmp    rbx,r12
  413197:	je     4132ae <main@@Base+0xe95e>
  41319d:	lea    rax,[rbp+0x8]
  4131a1:	xor    ecx,ecx
  4131a3:	mov    DWORD PTR [rsp+0xc],0x0
  4131ab:	mov    QWORD PTR [rsp+0x20],r15
  4131b0:	mov    QWORD PTR [rsp+0x18],rbp
  4131b5:	mov    QWORD PTR [rsp+0x28],rax
  4131ba:	mov    DWORD PTR [rsp+0x8],ecx
  4131be:	mov    rbp,QWORD PTR [rbp+0x0]
  4131c2:	mov    r15,rax
  4131c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131cf:	nop
  4131d0:	mov    rdi,r14
  4131d3:	mov    rsi,rbx
  4131d6:	mov    rdx,r12
  4131d9:	lea    rcx,[rsp+0x14]
  4131de:	lea    r8,[rsp+0x30]
  4131e3:	lea    r9,[rsp+0x10]
  4131e8:	call   rbp
  4131ea:	cmp    rax,r12
  4131ed:	je     4132ae <main@@Base+0xe95e>
  4131f3:	mov    r13,rax
  4131f6:	cmp    rax,rbx
  4131f9:	jne    413210 <main@@Base+0xe8c0>
  4131fb:	mov    rbp,QWORD PTR [r15]
  4131fe:	add    r15,0x8
  413202:	test   rbp,rbp
  413205:	jne    4131d0 <main@@Base+0xe880>
  413207:	jmp    4132b3 <main@@Base+0xe963>
  41320c:	nop    DWORD PTR [rax+0x0]
  413210:	mov    ebx,DWORD PTR [rsp+0xc]
  413214:	test   ebx,ebx
  413216:	je     413223 <main@@Base+0xe8d3>
  413218:	cmp    DWORD PTR [r14+0x14],0x0
  41321d:	jne    4132db <main@@Base+0xe98b>
  413223:	mov    rax,QWORD PTR [rsp+0x30]
  413228:	cmp    DWORD PTR [rsp+0x14],0x0
  41322d:	je     413253 <main@@Base+0xe903>
  41322f:	mov    ecx,0x80000001
  413234:	cmp    rax,rcx
  413237:	mov    r15,QWORD PTR [rsp+0x20]
  41323c:	mov    rbp,QWORD PTR [rsp+0x18]
  413241:	jb     413283 <main@@Base+0xe933>
  413243:	mov    rdi,r14
  413246:	mov    rsi,r13
  413249:	mov    rdx,r12
  41324c:	mov    ecx,0x8
  413251:	jmp    413273 <main@@Base+0xe923>
  413253:	test   rax,0xffffffff80000000
  413259:	mov    r15,QWORD PTR [rsp+0x20]
  41325e:	mov    rbp,QWORD PTR [rsp+0x18]
  413263:	je     413286 <main@@Base+0xe936>
  413265:	mov    rdi,r14
  413268:	mov    rsi,r13
  41326b:	mov    rdx,r12
  41326e:	mov    ecx,0x7
  413273:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413278:	mov    ecx,DWORD PTR [rsp+0x8]
  41327c:	cmp    rax,r12
  41327f:	jne    413290 <main@@Base+0xe940>
  413281:	jmp    4132ae <main@@Base+0xe95e>
  413283:	neg    rax
  413286:	mov    ecx,eax
  413288:	mov    rax,r13
  41328b:	cmp    rax,r12
  41328e:	je     4132ae <main@@Base+0xe95e>
  413290:	inc    ebx
  413292:	mov    DWORD PTR [rsp+0xc],ebx
  413296:	add    DWORD PTR [r15],ecx
  413299:	cmp    DWORD PTR [rsp+0x10],0x0
  41329e:	mov    rbx,r13
  4132a1:	mov    rax,QWORD PTR [rsp+0x28]
  4132a6:	jne    4131ba <main@@Base+0xe86a>
  4132ac:	jmp    4132c9 <main@@Base+0xe979>
  4132ae:	mov    r13,r12
  4132b1:	jmp    4132c9 <main@@Base+0xe979>
  4132b3:	mov    rdi,r14
  4132b6:	mov    rsi,rbx
  4132b9:	mov    rdx,r12
  4132bc:	mov    ecx,0x17
  4132c1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4132c6:	mov    r13,rax
  4132c9:	mov    rax,r13
  4132cc:	add    rsp,0x38
  4132d0:	pop    rbx
  4132d1:	pop    r12
  4132d3:	pop    r13
  4132d5:	pop    r14
  4132d7:	pop    r15
  4132d9:	pop    rbp
  4132da:	ret    
  4132db:	mov    rdi,r14
  4132de:	mov    rsi,r13
  4132e1:	mov    rdx,r12
  4132e4:	mov    ecx,0xe
  4132e9:	jmp    4132c1 <main@@Base+0xe971>
  4132eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4132f0:	push   rbp
  4132f1:	push   r15
  4132f3:	push   r14
  4132f5:	push   r13
  4132f7:	push   r12
  4132f9:	push   rbx
  4132fa:	sub    rsp,0x38
  4132fe:	mov    r15,r8
  413301:	mov    rbp,rcx
  413304:	mov    r12,rdx
  413307:	mov    rbx,rsi
  41330a:	mov    r14,rdi
  41330d:	mov    QWORD PTR [r8],0x0
  413314:	cmp    rsi,rdx
  413317:	je     41332e <main@@Base+0xe9de>
  413319:	mov    al,BYTE PTR [rbx]
  41331b:	cmp    al,0x2e
  41331d:	je     41333f <main@@Base+0xe9ef>
  41331f:	cmp    al,0x22
  413321:	jne    41335e <main@@Base+0xea0e>
  413323:	inc    rbx
  413326:	mov    DWORD PTR [r14+0x14],0x0
  41332e:	cmp    DWORD PTR [r14+0x14],0x0
  413333:	je     41336d <main@@Base+0xea1d>
  413335:	cmp    rbx,r12
  413338:	jne    4133ad <main@@Base+0xea5d>
  41333a:	jmp    4134c2 <main@@Base+0xeb72>
  41333f:	mov    rdi,r14
  413342:	mov    rsi,rbx
  413345:	mov    rdx,r12
  413348:	mov    ecx,0x5
  41334d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413352:	mov    rbx,rax
  413355:	cmp    DWORD PTR [r14+0x14],0x0
  41335a:	jne    413335 <main@@Base+0xe9e5>
  41335c:	jmp    41336d <main@@Base+0xea1d>
  41335e:	mov    DWORD PTR [r14+0x14],0x1
  413366:	cmp    DWORD PTR [r14+0x14],0x0
  41336b:	jne    413335 <main@@Base+0xe9e5>
  41336d:	mov    rax,r12
  413370:	sub    rax,rbx
  413373:	cmp    rax,0x2
  413377:	jl     413393 <main@@Base+0xea43>
  413379:	cmp    BYTE PTR [rbx],0x20
  41337c:	jg     413335 <main@@Base+0xe9e5>
  41337e:	jne    413393 <main@@Base+0xea43>
  413380:	cmp    BYTE PTR [rbx+0x1],0x20
  413384:	jle    413393 <main@@Base+0xea43>
  413386:	inc    rbx
  413389:	cmp    rbx,r12
  41338c:	jne    4133ad <main@@Base+0xea5d>
  41338e:	jmp    4134c2 <main@@Base+0xeb72>
  413393:	mov    rdi,r14
  413396:	mov    rsi,rbx
  413399:	mov    rdx,r12
  41339c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4133a1:	mov    rbx,rax
  4133a4:	cmp    rbx,r12
  4133a7:	je     4134c2 <main@@Base+0xeb72>
  4133ad:	lea    rax,[rbp+0x8]
  4133b1:	xor    ecx,ecx
  4133b3:	mov    DWORD PTR [rsp+0x4],0x0
  4133bb:	mov    QWORD PTR [rsp+0x18],r15
  4133c0:	mov    QWORD PTR [rsp+0x10],rbp
  4133c5:	mov    QWORD PTR [rsp+0x28],rax
  4133ca:	mov    QWORD PTR [rsp+0x20],rcx
  4133cf:	mov    rbp,QWORD PTR [rbp+0x0]
  4133d3:	mov    r15,rax
  4133d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133e0:	mov    rdi,r14
  4133e3:	mov    rsi,rbx
  4133e6:	mov    rdx,r12
  4133e9:	lea    rcx,[rsp+0xc]
  4133ee:	lea    r8,[rsp+0x30]
  4133f3:	lea    r9,[rsp+0x8]
  4133f8:	call   rbp
  4133fa:	cmp    rax,r12
  4133fd:	je     4134c2 <main@@Base+0xeb72>
  413403:	mov    r13,rax
  413406:	cmp    rax,rbx
  413409:	jne    413420 <main@@Base+0xead0>
  41340b:	mov    rbp,QWORD PTR [r15]
  41340e:	add    r15,0x8
  413412:	test   rbp,rbp
  413415:	jne    4133e0 <main@@Base+0xea90>
  413417:	jmp    4134c7 <main@@Base+0xeb77>
  41341c:	nop    DWORD PTR [rax+0x0]
  413420:	mov    ebx,DWORD PTR [rsp+0x4]
  413424:	test   ebx,ebx
  413426:	je     413433 <main@@Base+0xeae3>
  413428:	cmp    DWORD PTR [r14+0x14],0x0
  41342d:	jne    4134ef <main@@Base+0xeb9f>
  413433:	mov    rcx,QWORD PTR [rsp+0x30]
  413438:	cmp    DWORD PTR [rsp+0xc],0x0
  41343d:	je     413468 <main@@Base+0xeb18>
  41343f:	movabs rax,0x8000000000000001
  413449:	cmp    rcx,rax
  41344c:	mov    r15,QWORD PTR [rsp+0x18]
  413451:	mov    rbp,QWORD PTR [rsp+0x10]
  413456:	jb     413499 <main@@Base+0xeb49>
  413458:	mov    rdi,r14
  41345b:	mov    rsi,r13
  41345e:	mov    rdx,r12
  413461:	mov    ecx,0x8
  413466:	jmp    413488 <main@@Base+0xeb38>
  413468:	mov    rax,r13
  41346b:	test   rcx,rcx
  41346e:	mov    r15,QWORD PTR [rsp+0x18]
  413473:	mov    rbp,QWORD PTR [rsp+0x10]
  413478:	jns    413492 <main@@Base+0xeb42>
  41347a:	mov    rdi,r14
  41347d:	mov    rsi,r13
  413480:	mov    rdx,r12
  413483:	mov    ecx,0x7
  413488:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41348d:	mov    rcx,QWORD PTR [rsp+0x20]
  413492:	cmp    rax,r12
  413495:	jne    4134a4 <main@@Base+0xeb54>
  413497:	jmp    4134c2 <main@@Base+0xeb72>
  413499:	neg    rcx
  41349c:	mov    rax,r13
  41349f:	cmp    rax,r12
  4134a2:	je     4134c2 <main@@Base+0xeb72>
  4134a4:	inc    ebx
  4134a6:	mov    DWORD PTR [rsp+0x4],ebx
  4134aa:	add    QWORD PTR [r15],rcx
  4134ad:	cmp    DWORD PTR [rsp+0x8],0x0
  4134b2:	mov    rbx,r13
  4134b5:	mov    rax,QWORD PTR [rsp+0x28]
  4134ba:	jne    4133ca <main@@Base+0xea7a>
  4134c0:	jmp    4134dd <main@@Base+0xeb8d>
  4134c2:	mov    r13,r12
  4134c5:	jmp    4134dd <main@@Base+0xeb8d>
  4134c7:	mov    rdi,r14
  4134ca:	mov    rsi,rbx
  4134cd:	mov    rdx,r12
  4134d0:	mov    ecx,0x17
  4134d5:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4134da:	mov    r13,rax
  4134dd:	mov    rax,r13
  4134e0:	add    rsp,0x38
  4134e4:	pop    rbx
  4134e5:	pop    r12
  4134e7:	pop    r13
  4134e9:	pop    r14
  4134eb:	pop    r15
  4134ed:	pop    rbp
  4134ee:	ret    
  4134ef:	mov    rdi,r14
  4134f2:	mov    rsi,r13
  4134f5:	mov    rdx,r12
  4134f8:	mov    ecx,0xe
  4134fd:	jmp    4134d5 <main@@Base+0xeb85>
  4134ff:	nop
  413500:	push   rbp
  413501:	push   r15
  413503:	push   r14
  413505:	push   r13
  413507:	push   r12
  413509:	push   rbx
  41350a:	sub    rsp,0x38
  41350e:	mov    r15,r8
  413511:	mov    rbp,rcx
  413514:	mov    r12,rdx
  413517:	mov    rbx,rsi
  41351a:	mov    r14,rdi
  41351d:	mov    DWORD PTR [r8],0x0
  413524:	cmp    rsi,rdx
  413527:	je     41353e <main@@Base+0xebee>
  413529:	mov    al,BYTE PTR [rbx]
  41352b:	cmp    al,0x2e
  41352d:	je     41354f <main@@Base+0xebff>
  41352f:	cmp    al,0x22
  413531:	jne    41356e <main@@Base+0xec1e>
  413533:	inc    rbx
  413536:	mov    DWORD PTR [r14+0x14],0x0
  41353e:	cmp    DWORD PTR [r14+0x14],0x0
  413543:	je     41357d <main@@Base+0xec2d>
  413545:	cmp    rbx,r12
  413548:	jne    4135bd <main@@Base+0xec6d>
  41354a:	jmp    4136d2 <main@@Base+0xed82>
  41354f:	mov    rdi,r14
  413552:	mov    rsi,rbx
  413555:	mov    rdx,r12
  413558:	mov    ecx,0x5
  41355d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413562:	mov    rbx,rax
  413565:	cmp    DWORD PTR [r14+0x14],0x0
  41356a:	jne    413545 <main@@Base+0xebf5>
  41356c:	jmp    41357d <main@@Base+0xec2d>
  41356e:	mov    DWORD PTR [r14+0x14],0x1
  413576:	cmp    DWORD PTR [r14+0x14],0x0
  41357b:	jne    413545 <main@@Base+0xebf5>
  41357d:	mov    rax,r12
  413580:	sub    rax,rbx
  413583:	cmp    rax,0x2
  413587:	jl     4135a3 <main@@Base+0xec53>
  413589:	cmp    BYTE PTR [rbx],0x20
  41358c:	jg     413545 <main@@Base+0xebf5>
  41358e:	jne    4135a3 <main@@Base+0xec53>
  413590:	cmp    BYTE PTR [rbx+0x1],0x20
  413594:	jle    4135a3 <main@@Base+0xec53>
  413596:	inc    rbx
  413599:	cmp    rbx,r12
  41359c:	jne    4135bd <main@@Base+0xec6d>
  41359e:	jmp    4136d2 <main@@Base+0xed82>
  4135a3:	mov    rdi,r14
  4135a6:	mov    rsi,rbx
  4135a9:	mov    rdx,r12
  4135ac:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4135b1:	mov    rbx,rax
  4135b4:	cmp    rbx,r12
  4135b7:	je     4136d2 <main@@Base+0xed82>
  4135bd:	lea    rax,[rbp+0x8]
  4135c1:	mov    DWORD PTR [rsp+0x8],0x0
  4135c9:	mov    DWORD PTR [rsp+0xc],0x0
  4135d1:	mov    QWORD PTR [rsp+0x20],r15
  4135d6:	mov    QWORD PTR [rsp+0x18],rbp
  4135db:	mov    QWORD PTR [rsp+0x28],rax
  4135e0:	mov    rbp,QWORD PTR [rbp+0x0]
  4135e4:	mov    r15,rax
  4135e7:	nop    WORD PTR [rax+rax*1+0x0]
  4135f0:	mov    rdi,r14
  4135f3:	mov    rsi,rbx
  4135f6:	mov    rdx,r12
  4135f9:	lea    rcx,[rsp+0x14]
  4135fe:	lea    r8,[rsp+0x30]
  413603:	lea    r9,[rsp+0x10]
  413608:	call   rbp
  41360a:	cmp    rax,r12
  41360d:	je     4136d2 <main@@Base+0xed82>
  413613:	mov    r13,rax
  413616:	cmp    rax,rbx
  413619:	jne    413630 <main@@Base+0xece0>
  41361b:	mov    rbp,QWORD PTR [r15]
  41361e:	add    r15,0x8
  413622:	test   rbp,rbp
  413625:	jne    4135f0 <main@@Base+0xeca0>
  413627:	jmp    4136d7 <main@@Base+0xed87>
  41362c:	nop    DWORD PTR [rax+0x0]
  413630:	mov    ebx,DWORD PTR [rsp+0xc]
  413634:	test   ebx,ebx
  413636:	je     413643 <main@@Base+0xecf3>
  413638:	cmp    DWORD PTR [r14+0x14],0x0
  41363d:	jne    4136ff <main@@Base+0xedaf>
  413643:	cmp    DWORD PTR [rsp+0x14],0x0
  413648:	je     41366e <main@@Base+0xed1e>
  41364a:	mov    rdi,r14
  41364d:	mov    rsi,r13
  413650:	mov    rdx,r12
  413653:	mov    ecx,0x8
  413658:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41365d:	mov    r15,QWORD PTR [rsp+0x20]
  413662:	mov    rbp,QWORD PTR [rsp+0x18]
  413667:	cmp    rax,r12
  41366a:	jne    4136b0 <main@@Base+0xed60>
  41366c:	jmp    4136d2 <main@@Base+0xed82>
  41366e:	mov    rax,QWORD PTR [rsp+0x30]
  413673:	mov    rcx,rax
  413676:	shr    rcx,0x20
  41367a:	mov    r15,QWORD PTR [rsp+0x20]
  41367f:	mov    rbp,QWORD PTR [rsp+0x18]
  413684:	je     4136a0 <main@@Base+0xed50>
  413686:	mov    rdi,r14
  413689:	mov    rsi,r13
  41368c:	mov    rdx,r12
  41368f:	mov    ecx,0x7
  413694:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413699:	cmp    rax,r12
  41369c:	jne    4136b0 <main@@Base+0xed60>
  41369e:	jmp    4136d2 <main@@Base+0xed82>
  4136a0:	mov    DWORD PTR [rsp+0x8],eax
  4136a4:	mov    rax,r13
  4136a7:	cmp    rax,r12
  4136aa:	je     4136d2 <main@@Base+0xed82>
  4136ac:	nop    DWORD PTR [rax+0x0]
  4136b0:	inc    ebx
  4136b2:	mov    DWORD PTR [rsp+0xc],ebx
  4136b6:	mov    eax,DWORD PTR [rsp+0x8]
  4136ba:	add    DWORD PTR [r15],eax
  4136bd:	cmp    DWORD PTR [rsp+0x10],0x0
  4136c2:	mov    rbx,r13
  4136c5:	mov    rax,QWORD PTR [rsp+0x28]
  4136ca:	jne    4135e0 <main@@Base+0xec90>
  4136d0:	jmp    4136ed <main@@Base+0xed9d>
  4136d2:	mov    r13,r12
  4136d5:	jmp    4136ed <main@@Base+0xed9d>
  4136d7:	mov    rdi,r14
  4136da:	mov    rsi,rbx
  4136dd:	mov    rdx,r12
  4136e0:	mov    ecx,0x17
  4136e5:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4136ea:	mov    r13,rax
  4136ed:	mov    rax,r13
  4136f0:	add    rsp,0x38
  4136f4:	pop    rbx
  4136f5:	pop    r12
  4136f7:	pop    r13
  4136f9:	pop    r14
  4136fb:	pop    r15
  4136fd:	pop    rbp
  4136fe:	ret    
  4136ff:	mov    rdi,r14
  413702:	mov    rsi,r13
  413705:	mov    rdx,r12
  413708:	mov    ecx,0xe
  41370d:	jmp    4136e5 <main@@Base+0xed95>
  41370f:	nop
  413710:	push   rbp
  413711:	push   r15
  413713:	push   r14
  413715:	push   r13
  413717:	push   r12
  413719:	push   rbx
  41371a:	sub    rsp,0x38
  41371e:	mov    r15,r8
  413721:	mov    rbp,rcx
  413724:	mov    r12,rdx
  413727:	mov    rbx,rsi
  41372a:	mov    r14,rdi
  41372d:	mov    QWORD PTR [r8],0x0
  413734:	cmp    rsi,rdx
  413737:	je     41374e <main@@Base+0xedfe>
  413739:	mov    al,BYTE PTR [rbx]
  41373b:	cmp    al,0x2e
  41373d:	je     41375f <main@@Base+0xee0f>
  41373f:	cmp    al,0x22
  413741:	jne    41377e <main@@Base+0xee2e>
  413743:	inc    rbx
  413746:	mov    DWORD PTR [r14+0x14],0x0
  41374e:	cmp    DWORD PTR [r14+0x14],0x0
  413753:	je     41378d <main@@Base+0xee3d>
  413755:	cmp    rbx,r12
  413758:	jne    4137cd <main@@Base+0xee7d>
  41375a:	jmp    4138ae <main@@Base+0xef5e>
  41375f:	mov    rdi,r14
  413762:	mov    rsi,rbx
  413765:	mov    rdx,r12
  413768:	mov    ecx,0x5
  41376d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413772:	mov    rbx,rax
  413775:	cmp    DWORD PTR [r14+0x14],0x0
  41377a:	jne    413755 <main@@Base+0xee05>
  41377c:	jmp    41378d <main@@Base+0xee3d>
  41377e:	mov    DWORD PTR [r14+0x14],0x1
  413786:	cmp    DWORD PTR [r14+0x14],0x0
  41378b:	jne    413755 <main@@Base+0xee05>
  41378d:	mov    rax,r12
  413790:	sub    rax,rbx
  413793:	cmp    rax,0x2
  413797:	jl     4137b3 <main@@Base+0xee63>
  413799:	cmp    BYTE PTR [rbx],0x20
  41379c:	jg     413755 <main@@Base+0xee05>
  41379e:	jne    4137b3 <main@@Base+0xee63>
  4137a0:	cmp    BYTE PTR [rbx+0x1],0x20
  4137a4:	jle    4137b3 <main@@Base+0xee63>
  4137a6:	inc    rbx
  4137a9:	cmp    rbx,r12
  4137ac:	jne    4137cd <main@@Base+0xee7d>
  4137ae:	jmp    4138ae <main@@Base+0xef5e>
  4137b3:	mov    rdi,r14
  4137b6:	mov    rsi,rbx
  4137b9:	mov    rdx,r12
  4137bc:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4137c1:	mov    rbx,rax
  4137c4:	cmp    rbx,r12
  4137c7:	je     4138ae <main@@Base+0xef5e>
  4137cd:	lea    rax,[rbp+0x8]
  4137d1:	xor    ecx,ecx
  4137d3:	mov    QWORD PTR [rsp+0x20],rcx
  4137d8:	mov    DWORD PTR [rsp+0x4],0x0
  4137e0:	mov    QWORD PTR [rsp+0x18],r15
  4137e5:	mov    QWORD PTR [rsp+0x10],rbp
  4137ea:	mov    QWORD PTR [rsp+0x28],rax
  4137ef:	mov    rbp,QWORD PTR [rbp+0x0]
  4137f3:	mov    r15,rax
  4137f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413800:	mov    rdi,r14
  413803:	mov    rsi,rbx
  413806:	mov    rdx,r12
  413809:	lea    rcx,[rsp+0xc]
  41380e:	lea    r8,[rsp+0x30]
  413813:	lea    r9,[rsp+0x8]
  413818:	call   rbp
  41381a:	cmp    rax,r12
  41381d:	je     4138ae <main@@Base+0xef5e>
  413823:	mov    r13,rax
  413826:	cmp    rax,rbx
  413829:	jne    413840 <main@@Base+0xeef0>
  41382b:	mov    rbp,QWORD PTR [r15]
  41382e:	add    r15,0x8
  413832:	test   rbp,rbp
  413835:	jne    413800 <main@@Base+0xeeb0>
  413837:	jmp    4138b3 <main@@Base+0xef63>
  413839:	nop    DWORD PTR [rax+0x0]
  413840:	mov    ebx,DWORD PTR [rsp+0x4]
  413844:	test   ebx,ebx
  413846:	je     413853 <main@@Base+0xef03>
  413848:	cmp    DWORD PTR [r14+0x14],0x0
  41384d:	jne    4138db <main@@Base+0xef8b>
  413853:	cmp    DWORD PTR [rsp+0xc],0x0
  413858:	je     41386f <main@@Base+0xef1f>
  41385a:	mov    rdi,r14
  41385d:	mov    rsi,r13
  413860:	mov    rdx,r12
  413863:	mov    ecx,0x8
  413868:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41386d:	jmp    41387c <main@@Base+0xef2c>
  41386f:	mov    rax,QWORD PTR [rsp+0x30]
  413874:	mov    QWORD PTR [rsp+0x20],rax
  413879:	mov    rax,r13
  41387c:	mov    r15,QWORD PTR [rsp+0x18]
  413881:	mov    rbp,QWORD PTR [rsp+0x10]
  413886:	cmp    rax,r12
  413889:	je     4138ae <main@@Base+0xef5e>
  41388b:	inc    ebx
  41388d:	mov    DWORD PTR [rsp+0x4],ebx
  413891:	mov    rax,QWORD PTR [rsp+0x20]
  413896:	add    QWORD PTR [r15],rax
  413899:	cmp    DWORD PTR [rsp+0x8],0x0
  41389e:	mov    rbx,r13
  4138a1:	mov    rax,QWORD PTR [rsp+0x28]
  4138a6:	jne    4137ef <main@@Base+0xee9f>
  4138ac:	jmp    4138c9 <main@@Base+0xef79>
  4138ae:	mov    r13,r12
  4138b1:	jmp    4138c9 <main@@Base+0xef79>
  4138b3:	mov    rdi,r14
  4138b6:	mov    rsi,rbx
  4138b9:	mov    rdx,r12
  4138bc:	mov    ecx,0x17
  4138c1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4138c6:	mov    r13,rax
  4138c9:	mov    rax,r13
  4138cc:	add    rsp,0x38
  4138d0:	pop    rbx
  4138d1:	pop    r12
  4138d3:	pop    r13
  4138d5:	pop    r14
  4138d7:	pop    r15
  4138d9:	pop    rbp
  4138da:	ret    
  4138db:	mov    rdi,r14
  4138de:	mov    rsi,r13
  4138e1:	mov    rdx,r12
  4138e4:	mov    ecx,0xe
  4138e9:	jmp    4138c1 <main@@Base+0xef71>
  4138eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4138f0:	push   rbp
  4138f1:	push   r15
  4138f3:	push   r14
  4138f5:	push   r13
  4138f7:	push   r12
  4138f9:	push   rbx
  4138fa:	sub    rsp,0x38
  4138fe:	mov    rbx,r8
  413901:	mov    rbp,rcx
  413904:	mov    r13,rdx
  413907:	mov    r14,rsi
  41390a:	mov    r15,rdi
  41390d:	mov    QWORD PTR [r8],0x0
  413914:	cmp    rsi,rdx
  413917:	je     41392f <main@@Base+0xefdf>
  413919:	mov    al,BYTE PTR [r14]
  41391c:	cmp    al,0x2e
  41391e:	je     413940 <main@@Base+0xeff0>
  413920:	cmp    al,0x22
  413922:	jne    41395f <main@@Base+0xf00f>
  413924:	inc    r14
  413927:	mov    DWORD PTR [r15+0x14],0x0
  41392f:	cmp    DWORD PTR [r15+0x14],0x0
  413934:	je     41396e <main@@Base+0xf01e>
  413936:	cmp    r14,r13
  413939:	jne    4139b0 <main@@Base+0xf060>
  41393b:	jmp    413a81 <main@@Base+0xf131>
  413940:	mov    rdi,r15
  413943:	mov    rsi,r14
  413946:	mov    rdx,r13
  413949:	mov    ecx,0x5
  41394e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413953:	mov    r14,rax
  413956:	cmp    DWORD PTR [r15+0x14],0x0
  41395b:	jne    413936 <main@@Base+0xefe6>
  41395d:	jmp    41396e <main@@Base+0xf01e>
  41395f:	mov    DWORD PTR [r15+0x14],0x1
  413967:	cmp    DWORD PTR [r15+0x14],0x0
  41396c:	jne    413936 <main@@Base+0xefe6>
  41396e:	mov    rax,r13
  413971:	sub    rax,r14
  413974:	cmp    rax,0x2
  413978:	jl     413996 <main@@Base+0xf046>
  41397a:	cmp    BYTE PTR [r14],0x20
  41397e:	jg     413936 <main@@Base+0xefe6>
  413980:	jne    413996 <main@@Base+0xf046>
  413982:	cmp    BYTE PTR [r14+0x1],0x20
  413987:	jle    413996 <main@@Base+0xf046>
  413989:	inc    r14
  41398c:	cmp    r14,r13
  41398f:	jne    4139b0 <main@@Base+0xf060>
  413991:	jmp    413a81 <main@@Base+0xf131>
  413996:	mov    rdi,r15
  413999:	mov    rsi,r14
  41399c:	mov    rdx,r13
  41399f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4139a4:	mov    r14,rax
  4139a7:	cmp    r14,r13
  4139aa:	je     413a81 <main@@Base+0xf131>
  4139b0:	lea    rax,[rbp+0x8]
  4139b4:	xor    ecx,ecx
  4139b6:	lea    r12,[rsp+0x10]
  4139bb:	mov    QWORD PTR [rsp+0x28],rbx
  4139c0:	mov    QWORD PTR [rsp+0x20],rbp
  4139c5:	mov    QWORD PTR [rsp+0x18],rax
  4139ca:	mov    DWORD PTR [rsp+0xc],ecx
  4139ce:	mov    rbx,QWORD PTR [rbp+0x0]
  4139d2:	mov    rbp,rax
  4139d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139df:	nop
  4139e0:	mov    rdi,r15
  4139e3:	mov    rsi,r14
  4139e6:	mov    rdx,r13
  4139e9:	lea    rcx,[rsp+0x14]
  4139ee:	lea    r8,[rsp+0x30]
  4139f3:	mov    r9,r12
  4139f6:	call   rbx
  4139f8:	cmp    rax,r13
  4139fb:	je     413a81 <main@@Base+0xf131>
  413a01:	cmp    rax,r14
  413a04:	jne    413a20 <main@@Base+0xf0d0>
  413a06:	mov    rbx,QWORD PTR [rbp+0x0]
  413a0a:	add    rbp,0x8
  413a0e:	test   rbx,rbx
  413a11:	jne    4139e0 <main@@Base+0xf090>
  413a13:	jmp    413a86 <main@@Base+0xf136>
  413a15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a1f:	nop
  413a20:	mov    r14,rax
  413a23:	mov    ecx,DWORD PTR [rsp+0xc]
  413a27:	test   ecx,ecx
  413a29:	je     413a32 <main@@Base+0xf0e2>
  413a2b:	cmp    DWORD PTR [r15+0x14],0x0
  413a30:	jne    413aae <main@@Base+0xf15e>
  413a32:	cmp    DWORD PTR [rsp+0x14],0x0
  413a37:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  413a3d:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0xefcb]        # 422a10 <_IO_stdin_used@@Base+0xa10>
  413a45:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xefd3]        # 422a20 <_IO_stdin_used@@Base+0xa20>
  413a4d:	vhaddpd xmm0,xmm0,xmm0
  413a51:	mov    rax,QWORD PTR [rsp+0x18]
  413a56:	je     413a60 <main@@Base+0xf110>
  413a58:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xefd0]        # 422a30 <_IO_stdin_used@@Base+0xa30>
  413a60:	inc    ecx
  413a62:	mov    rbx,QWORD PTR [rsp+0x28]
  413a67:	vaddsd xmm0,xmm0,QWORD PTR [rbx]
  413a6b:	vmovsd QWORD PTR [rbx],xmm0
  413a6f:	cmp    DWORD PTR [rsp+0x10],0x0
  413a74:	mov    rbp,QWORD PTR [rsp+0x20]
  413a79:	jne    4139ca <main@@Base+0xf07a>
  413a7f:	jmp    413a9c <main@@Base+0xf14c>
  413a81:	mov    r14,r13
  413a84:	jmp    413a9c <main@@Base+0xf14c>
  413a86:	mov    rdi,r15
  413a89:	mov    rsi,r14
  413a8c:	mov    rdx,r13
  413a8f:	mov    ecx,0x17
  413a94:	call   41e300 <flatcc_json_parser_set_error@@Base>
  413a99:	mov    r14,rax
  413a9c:	mov    rax,r14
  413a9f:	add    rsp,0x38
  413aa3:	pop    rbx
  413aa4:	pop    r12
  413aa6:	pop    r13
  413aa8:	pop    r14
  413aaa:	pop    r15
  413aac:	pop    rbp
  413aad:	ret    
  413aae:	mov    rdi,r15
  413ab1:	mov    rsi,r14
  413ab4:	mov    rdx,r13
  413ab7:	mov    ecx,0xe
  413abc:	jmp    413a94 <main@@Base+0xf144>
  413abe:	xchg   ax,ax
  413ac0:	push   r15
  413ac2:	push   r14
  413ac4:	push   r12
  413ac6:	push   rbx
  413ac7:	push   rax
  413ac8:	mov    r15,r8
  413acb:	mov    r14,rcx
  413ace:	mov    rbx,rsi
  413ad1:	mov    rcx,rdx
  413ad4:	sub    rcx,rsi
  413ad7:	cmp    rcx,0x8
  413adb:	jb     413ae4 <main@@Base+0xf194>
  413add:	movbe  rcx,QWORD PTR [rbx]
  413ae2:	jmp    413b52 <main@@Base+0xf202>
  413ae4:	dec    rcx
  413ae7:	cmp    rcx,0x6
  413aeb:	ja     413ce6 <main@@Base+0xf396>
  413af1:	xor    eax,eax
  413af3:	lea    rsi,[rip+0xeb9a]        # 422694 <_IO_stdin_used@@Base+0x694>
  413afa:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  413afe:	add    rcx,rsi
  413b01:	jmp    rcx
  413b03:	movsx  rax,BYTE PTR [rbx+0x6]
  413b08:	shl    rax,0x8
  413b0c:	movsx  rcx,BYTE PTR [rbx+0x5]
  413b11:	shl    rcx,0x10
  413b15:	or     rax,rcx
  413b18:	movsx  rcx,BYTE PTR [rbx+0x4]
  413b1d:	shl    rcx,0x18
  413b21:	or     rax,rcx
  413b24:	movsx  rcx,BYTE PTR [rbx+0x3]
  413b29:	shl    rcx,0x20
  413b2d:	or     rax,rcx
  413b30:	movsx  rcx,BYTE PTR [rbx+0x2]
  413b35:	shl    rcx,0x28
  413b39:	or     rax,rcx
  413b3c:	movsx  rcx,BYTE PTR [rbx+0x1]
  413b41:	shl    rcx,0x30
  413b45:	or     rax,rcx
  413b48:	movzx  ecx,BYTE PTR [rbx]
  413b4b:	shl    rcx,0x38
  413b4f:	or     rcx,rax
  413b52:	movabs rax,0x496e506172656e74
  413b5c:	cmp    rcx,rax
  413b5f:	jne    413b7b <main@@Base+0xf22b>
  413b61:	lea    rax,[rbx+0x8]
  413b65:	mov    rsi,rdx
  413b68:	sub    rsi,rax
  413b6b:	cmp    rsi,0x8
  413b6f:	jb     413bac <main@@Base+0xf25c>
  413b71:	movbe  rax,QWORD PTR [rax]
  413b76:	jmp    413c1a <main@@Base+0xf2ca>
  413b7b:	shr    rcx,0x20
  413b7f:	cmp    rcx,0x4e4f4e45
  413b86:	jne    413ce6 <main@@Base+0xf396>
  413b8c:	mov    rsi,rbx
  413b8f:	mov    ecx,0x4
  413b94:	mov    r8,r9
  413b97:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413b9c:	cmp    rax,rbx
  413b9f:	je     413ce6 <main@@Base+0xf396>
  413ba5:	xor    ecx,ecx
  413ba7:	jmp    413cd9 <main@@Base+0xf389>
  413bac:	dec    rsi
  413baf:	cmp    rsi,0x6
  413bb3:	ja     413ce6 <main@@Base+0xf396>
  413bb9:	xor    ecx,ecx
  413bbb:	lea    r8,[rip+0xeaee]        # 4226b0 <_IO_stdin_used@@Base+0x6b0>
  413bc2:	movsxd rsi,DWORD PTR [r8+rsi*4]
  413bc6:	add    rsi,r8
  413bc9:	jmp    rsi
  413bcb:	movsx  rcx,BYTE PTR [rbx+0xe]
  413bd0:	shl    rcx,0x8
  413bd4:	movsx  rsi,BYTE PTR [rbx+0xd]
  413bd9:	shl    rsi,0x10
  413bdd:	or     rcx,rsi
  413be0:	movsx  rsi,BYTE PTR [rbx+0xc]
  413be5:	shl    rsi,0x18
  413be9:	or     rcx,rsi
  413bec:	movsx  rsi,BYTE PTR [rbx+0xb]
  413bf1:	shl    rsi,0x20
  413bf5:	or     rcx,rsi
  413bf8:	movsx  rsi,BYTE PTR [rbx+0xa]
  413bfd:	shl    rsi,0x28
  413c01:	or     rcx,rsi
  413c04:	movsx  rsi,BYTE PTR [rbx+0x9]
  413c09:	shl    rsi,0x30
  413c0d:	or     rcx,rsi
  413c10:	movzx  eax,BYTE PTR [rax]
  413c13:	shl    rax,0x38
  413c17:	or     rax,rcx
  413c1a:	movabs rcx,0x4e616d6573706163
  413c24:	cmp    rax,rcx
  413c27:	jne    413ce6 <main@@Base+0xf396>
  413c2d:	lea    r12,[rbx+0x10]
  413c31:	mov    rcx,rdx
  413c34:	sub    rcx,r12
  413c37:	cmp    rcx,0x8
  413c3b:	jb     413c45 <main@@Base+0xf2f5>
  413c3d:	movbe  rcx,QWORD PTR [r12]
  413c43:	jmp    413cb5 <main@@Base+0xf365>
  413c45:	dec    rcx
  413c48:	cmp    rcx,0x6
  413c4c:	ja     413ce6 <main@@Base+0xf396>
  413c52:	xor    eax,eax
  413c54:	lea    rsi,[rip+0xea71]        # 4226cc <_IO_stdin_used@@Base+0x6cc>
  413c5b:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  413c5f:	add    rcx,rsi
  413c62:	jmp    rcx
  413c64:	movsx  rax,BYTE PTR [rbx+0x16]
  413c69:	shl    rax,0x8
  413c6d:	movsx  rcx,BYTE PTR [rbx+0x15]
  413c72:	shl    rcx,0x10
  413c76:	or     rax,rcx
  413c79:	movsx  rcx,BYTE PTR [rbx+0x14]
  413c7e:	shl    rcx,0x18
  413c82:	or     rax,rcx
  413c85:	movsx  rcx,BYTE PTR [rbx+0x13]
  413c8a:	shl    rcx,0x20
  413c8e:	or     rax,rcx
  413c91:	movsx  rcx,BYTE PTR [rbx+0x12]
  413c96:	shl    rcx,0x28
  413c9a:	or     rax,rcx
  413c9d:	movsx  rcx,BYTE PTR [rbx+0x11]
  413ca2:	shl    rcx,0x30
  413ca6:	or     rax,rcx
  413ca9:	movzx  ecx,BYTE PTR [r12]
  413cae:	shl    rcx,0x38
  413cb2:	or     rcx,rax
  413cb5:	shr    rcx,0x38
  413cb9:	cmp    rcx,0x65
  413cbd:	jne    413ce6 <main@@Base+0xf396>
  413cbf:	mov    rsi,r12
  413cc2:	mov    ecx,0x1
  413cc7:	mov    r8,r9
  413cca:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413ccf:	cmp    rax,r12
  413cd2:	je     413ce6 <main@@Base+0xf396>
  413cd4:	mov    ecx,0x1
  413cd9:	mov    rbx,rax
  413cdc:	mov    QWORD PTR [r15],rcx
  413cdf:	mov    DWORD PTR [r14],0x0
  413ce6:	mov    rax,rbx
  413ce9:	add    rsp,0x8
  413ced:	pop    rbx
  413cee:	pop    r12
  413cf0:	pop    r14
  413cf2:	pop    r15
  413cf4:	ret    
  413cf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413cff:	nop
  413d00:	push   r15
  413d02:	push   r14
  413d04:	push   rbx
  413d05:	mov    r15,r8
  413d08:	mov    r14,rcx
  413d0b:	mov    rbx,rsi
  413d0e:	mov    rcx,rdx
  413d11:	sub    rcx,rsi
  413d14:	cmp    rcx,0x8
  413d18:	jb     413d21 <main@@Base+0xf3d1>
  413d1a:	movbe  rcx,QWORD PTR [rbx]
  413d1f:	jmp    413d8f <main@@Base+0xf43f>
  413d21:	dec    rcx
  413d24:	cmp    rcx,0x6
  413d28:	ja     413e4e <main@@Base+0xf4fe>
  413d2e:	xor    eax,eax
  413d30:	lea    rsi,[rip+0xe9b1]        # 4226e8 <_IO_stdin_used@@Base+0x6e8>
  413d37:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  413d3b:	add    rcx,rsi
  413d3e:	jmp    rcx
  413d40:	movsx  rax,BYTE PTR [rbx+0x6]
  413d45:	shl    rax,0x8
  413d49:	movsx  rcx,BYTE PTR [rbx+0x5]
  413d4e:	shl    rcx,0x10
  413d52:	or     rax,rcx
  413d55:	movsx  rcx,BYTE PTR [rbx+0x4]
  413d5a:	shl    rcx,0x18
  413d5e:	or     rax,rcx
  413d61:	movsx  rcx,BYTE PTR [rbx+0x3]
  413d66:	shl    rcx,0x20
  413d6a:	or     rax,rcx
  413d6d:	movsx  rcx,BYTE PTR [rbx+0x2]
  413d72:	shl    rcx,0x28
  413d76:	or     rax,rcx
  413d79:	movsx  rcx,BYTE PTR [rbx+0x1]
  413d7e:	shl    rcx,0x30
  413d82:	or     rax,rcx
  413d85:	movzx  ecx,BYTE PTR [rbx]
  413d88:	shl    rcx,0x38
  413d8c:	or     rcx,rax
  413d8f:	mov    rax,rcx
  413d92:	shr    rax,0x21
  413d96:	cmp    rax,0x3432bc18
  413d9c:	ja     413dd1 <main@@Base+0xf481>
  413d9e:	shr    rcx,0x20
  413da2:	cmp    rcx,0x68657831
  413da9:	jne    413e4e <main@@Base+0xf4fe>
  413daf:	mov    rsi,rbx
  413db2:	mov    ecx,0x4
  413db7:	mov    r8,r9
  413dba:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413dbf:	cmp    rax,rbx
  413dc2:	je     413e4e <main@@Base+0xf4fe>
  413dc8:	mov    QWORD PTR [r15],0x3
  413dcf:	jmp    413e44 <main@@Base+0xf4f4>
  413dd1:	mov    rax,rcx
  413dd4:	shr    rax,0x10
  413dd8:	movabs rsi,0x6865786e6567
  413de2:	cmp    rax,rsi
  413de5:	jne    413e0c <main@@Base+0xf4bc>
  413de7:	mov    rsi,rbx
  413dea:	mov    ecx,0x6
  413def:	mov    r8,r9
  413df2:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413df7:	cmp    rax,rbx
  413dfa:	je     413e4e <main@@Base+0xf4fe>
  413dfc:	mov    QWORD PTR [r15],0xfffffffffffffffe
  413e03:	mov    DWORD PTR [r14],0x1
  413e0a:	jmp    413e4b <main@@Base+0xf4fb>
  413e0c:	movabs rax,0x6865783200000000
  413e16:	movabs rsi,0xffffffff00000000
  413e20:	and    rcx,rsi
  413e23:	cmp    rcx,rax
  413e26:	jne    413e4e <main@@Base+0xf4fe>
  413e28:	mov    rsi,rbx
  413e2b:	mov    ecx,0x4
  413e30:	mov    r8,r9
  413e33:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413e38:	cmp    rax,rbx
  413e3b:	je     413e4e <main@@Base+0xf4fe>
  413e3d:	mov    QWORD PTR [r15],0x7eafbeaf
  413e44:	mov    DWORD PTR [r14],0x0
  413e4b:	mov    rbx,rax
  413e4e:	mov    rax,rbx
  413e51:	pop    rbx
  413e52:	pop    r14
  413e54:	pop    r15
  413e56:	ret    
  413e57:	nop    WORD PTR [rax+rax*1+0x0]
  413e60:	push   r15
  413e62:	push   r14
  413e64:	push   rbx
  413e65:	mov    r15,r8
  413e68:	mov    r14,rcx
  413e6b:	mov    rbx,rsi
  413e6e:	mov    rcx,rdx
  413e71:	sub    rcx,rsi
  413e74:	cmp    rcx,0x8
  413e78:	jb     413e81 <main@@Base+0xf531>
  413e7a:	movbe  rcx,QWORD PTR [rbx]
  413e7f:	jmp    413eef <main@@Base+0xf59f>
  413e81:	dec    rcx
  413e84:	cmp    rcx,0x6
  413e88:	ja     413ff5 <main@@Base+0xf6a5>
  413e8e:	xor    eax,eax
  413e90:	lea    rsi,[rip+0xe86d]        # 422704 <_IO_stdin_used@@Base+0x704>
  413e97:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  413e9b:	add    rcx,rsi
  413e9e:	jmp    rcx
  413ea0:	movsx  rax,BYTE PTR [rbx+0x6]
  413ea5:	shl    rax,0x8
  413ea9:	movsx  rcx,BYTE PTR [rbx+0x5]
  413eae:	shl    rcx,0x10
  413eb2:	or     rax,rcx
  413eb5:	movsx  rcx,BYTE PTR [rbx+0x4]
  413eba:	shl    rcx,0x18
  413ebe:	or     rax,rcx
  413ec1:	movsx  rcx,BYTE PTR [rbx+0x3]
  413ec6:	shl    rcx,0x20
  413eca:	or     rax,rcx
  413ecd:	movsx  rcx,BYTE PTR [rbx+0x2]
  413ed2:	shl    rcx,0x28
  413ed6:	or     rax,rcx
  413ed9:	movsx  rcx,BYTE PTR [rbx+0x1]
  413ede:	shl    rcx,0x30
  413ee2:	or     rax,rcx
  413ee5:	movzx  ecx,BYTE PTR [rbx]
  413ee8:	shl    rcx,0x38
  413eec:	or     rcx,rax
  413eef:	mov    rax,rcx
  413ef2:	shr    rax,0x21
  413ef6:	cmp    rax,0x34b73a18
  413efc:	ja     413f3b <main@@Base+0xf5eb>
  413efe:	shr    rcx,0x20
  413f02:	cmp    rcx,0x696e7431
  413f09:	jne    413ff5 <main@@Base+0xf6a5>
  413f0f:	mov    rsi,rbx
  413f12:	mov    ecx,0x4
  413f17:	mov    r8,r9
  413f1a:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413f1f:	cmp    rax,rbx
  413f22:	je     413ff5 <main@@Base+0xf6a5>
  413f28:	mov    QWORD PTR [r15],0x2
  413f2f:	mov    DWORD PTR [r14],0x0
  413f36:	jmp    413ff2 <main@@Base+0xf6a2>
  413f3b:	movabs r8,0x696e746e65670000
  413f45:	cmp    rcx,r8
  413f48:	jae    413f8f <main@@Base+0xf63f>
  413f4a:	movabs rax,0x696e743200000000
  413f54:	movabs rsi,0xffffffff00000000
  413f5e:	and    rcx,rsi
  413f61:	cmp    rcx,rax
  413f64:	jne    413ff5 <main@@Base+0xf6a5>
  413f6a:	mov    rsi,rbx
  413f6d:	mov    ecx,0x4
  413f72:	mov    r8,r9
  413f75:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413f7a:	cmp    rax,rbx
  413f7d:	je     413ff5 <main@@Base+0xf6a5>
  413f7f:	mov    QWORD PTR [r15],0x2a
  413f86:	mov    DWORD PTR [r14],0x0
  413f8d:	jmp    413ff2 <main@@Base+0xf6a2>
  413f8f:	mov    rsi,rcx
  413f92:	and    rsi,0xffffffffffffff00
  413f99:	lea    rax,[r8+0x3200]
  413fa0:	cmp    rsi,rax
  413fa3:	jne    413fc3 <main@@Base+0xf673>
  413fa5:	mov    rsi,rbx
  413fa8:	mov    ecx,0x7
  413fad:	mov    r8,r9
  413fb0:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413fb5:	cmp    rax,rbx
  413fb8:	je     413ff5 <main@@Base+0xf6a5>
  413fba:	mov    QWORD PTR [r15],0xffffffffffffffff
  413fc1:	jmp    413feb <main@@Base+0xf69b>
  413fc3:	and    rcx,0xffffffffffff0000
  413fca:	cmp    rcx,r8
  413fcd:	jne    413ff5 <main@@Base+0xf6a5>
  413fcf:	mov    rsi,rbx
  413fd2:	mov    ecx,0x6
  413fd7:	mov    r8,r9
  413fda:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  413fdf:	cmp    rax,rbx
  413fe2:	je     413ff5 <main@@Base+0xf6a5>
  413fe4:	mov    QWORD PTR [r15],0xfffffffffffffffe
  413feb:	mov    DWORD PTR [r14],0x1
  413ff2:	mov    rbx,rax
  413ff5:	mov    rax,rbx
  413ff8:	pop    rbx
  413ff9:	pop    r14
  413ffb:	pop    r15
  413ffd:	ret    
  413ffe:	xchg   ax,ax
  414000:	push   r15
  414002:	push   r14
  414004:	push   rbx
  414005:	mov    r15,r8
  414008:	mov    r14,rcx
  41400b:	mov    rbx,rsi
  41400e:	mov    rcx,rdx
  414011:	sub    rcx,rsi
  414014:	cmp    rcx,0x8
  414018:	jb     414021 <main@@Base+0xf6d1>
  41401a:	movbe  rcx,QWORD PTR [rbx]
  41401f:	jmp    41408f <main@@Base+0xf73f>
  414021:	dec    rcx
  414024:	cmp    rcx,0x6
  414028:	ja     41413f <main@@Base+0xf7ef>
  41402e:	xor    eax,eax
  414030:	lea    rsi,[rip+0xe6e9]        # 422720 <_IO_stdin_used@@Base+0x720>
  414037:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41403b:	add    rcx,rsi
  41403e:	jmp    rcx
  414040:	movsx  rax,BYTE PTR [rbx+0x6]
  414045:	shl    rax,0x8
  414049:	movsx  rcx,BYTE PTR [rbx+0x5]
  41404e:	shl    rcx,0x10
  414052:	or     rax,rcx
  414055:	movsx  rcx,BYTE PTR [rbx+0x4]
  41405a:	shl    rcx,0x18
  41405e:	or     rax,rcx
  414061:	movsx  rcx,BYTE PTR [rbx+0x3]
  414066:	shl    rcx,0x20
  41406a:	or     rax,rcx
  41406d:	movsx  rcx,BYTE PTR [rbx+0x2]
  414072:	shl    rcx,0x28
  414076:	or     rax,rcx
  414079:	movsx  rcx,BYTE PTR [rbx+0x1]
  41407e:	shl    rcx,0x30
  414082:	or     rax,rcx
  414085:	movzx  ecx,BYTE PTR [rbx]
  414088:	shl    rcx,0x38
  41408c:	or     rcx,rax
  41408f:	mov    rsi,rcx
  414092:	shr    rsi,0x21
  414096:	movabs rax,0xffffffff00000000
  4140a0:	and    rax,rcx
  4140a3:	cmp    rsi,0x3732b398
  4140aa:	ja     4140dd <main@@Base+0xf78d>
  4140ac:	movabs rcx,0x6e65673100000000
  4140b6:	cmp    rax,rcx
  4140b9:	jne    41413f <main@@Base+0xf7ef>
  4140bf:	mov    rsi,rbx
  4140c2:	mov    ecx,0x4
  4140c7:	mov    r8,r9
  4140ca:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  4140cf:	cmp    rax,rbx
  4140d2:	je     41413f <main@@Base+0xf7ef>
  4140d4:	mov    QWORD PTR [r15],0xfffffffffffffff4
  4140db:	jmp    414135 <main@@Base+0xf7e5>
  4140dd:	movabs rcx,0x6e65673200000000
  4140e7:	cmp    rax,rcx
  4140ea:	je     414119 <main@@Base+0xf7c9>
  4140ec:	movabs rcx,0x6e65673300000000
  4140f6:	cmp    rax,rcx
  4140f9:	jne    41413f <main@@Base+0xf7ef>
  4140fb:	mov    rsi,rbx
  4140fe:	mov    ecx,0x4
  414103:	mov    r8,r9
  414106:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  41410b:	cmp    rax,rbx
  41410e:	je     41413f <main@@Base+0xf7ef>
  414110:	mov    QWORD PTR [r15],0xfffffffffffffff6
  414117:	jmp    414135 <main@@Base+0xf7e5>
  414119:	mov    rsi,rbx
  41411c:	mov    ecx,0x4
  414121:	mov    r8,r9
  414124:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  414129:	cmp    rax,rbx
  41412c:	je     41413f <main@@Base+0xf7ef>
  41412e:	mov    QWORD PTR [r15],0xfffffffffffffff5
  414135:	mov    DWORD PTR [r14],0x1
  41413c:	mov    rbx,rax
  41413f:	mov    rax,rbx
  414142:	pop    rbx
  414143:	pop    r14
  414145:	pop    r15
  414147:	ret    
  414148:	nop    DWORD PTR [rax+rax*1+0x0]
  414150:	push   r15
  414152:	push   r14
  414154:	push   rbx
  414155:	mov    r15,r8
  414158:	mov    r14,rcx
  41415b:	mov    rbx,rsi
  41415e:	mov    rcx,rdx
  414161:	sub    rcx,rsi
  414164:	cmp    rcx,0x8
  414168:	jb     414171 <main@@Base+0xf821>
  41416a:	movbe  rcx,QWORD PTR [rbx]
  41416f:	jmp    4141df <main@@Base+0xf88f>
  414171:	dec    rcx
  414174:	cmp    rcx,0x6
  414178:	ja     414395 <main@@Base+0xfa45>
  41417e:	xor    eax,eax
  414180:	lea    rsi,[rip+0xe5b5]        # 42273c <_IO_stdin_used@@Base+0x73c>
  414187:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41418b:	add    rcx,rsi
  41418e:	jmp    rcx
  414190:	movsx  rax,BYTE PTR [rbx+0x6]
  414195:	shl    rax,0x8
  414199:	movsx  rcx,BYTE PTR [rbx+0x5]
  41419e:	shl    rcx,0x10
  4141a2:	or     rax,rcx
  4141a5:	movsx  rcx,BYTE PTR [rbx+0x4]
  4141aa:	shl    rcx,0x18
  4141ae:	or     rax,rcx
  4141b1:	movsx  rcx,BYTE PTR [rbx+0x3]
  4141b6:	shl    rcx,0x20
  4141ba:	or     rax,rcx
  4141bd:	movsx  rcx,BYTE PTR [rbx+0x2]
  4141c2:	shl    rcx,0x28
  4141c6:	or     rax,rcx
  4141c9:	movsx  rcx,BYTE PTR [rbx+0x1]
  4141ce:	shl    rcx,0x30
  4141d2:	or     rax,rcx
  4141d5:	movzx  ecx,BYTE PTR [rbx]
  4141d8:	shl    rcx,0x38
  4141dc:	or     rcx,rax
  4141df:	mov    rax,rcx
  4141e2:	shr    rax,0x20
  4141e6:	cmp    rax,0x4e4f4e44
  4141ec:	ja     414243 <main@@Base+0xf8f3>
  4141ee:	movabs r8,0x426f6f6b46616e00
  4141f8:	mov    rsi,rcx
  4141fb:	and    rsi,0xffffffffff000000
  414202:	cmp    rcx,r8
  414205:	jae    414297 <main@@Base+0xf947>
  41420b:	movabs rax,0x42656c6c65000000
  414215:	cmp    rsi,rax
  414218:	jne    414395 <main@@Base+0xfa45>
  41421e:	mov    rsi,rbx
  414221:	mov    ecx,0x5
  414226:	mov    r8,r9
  414229:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  41422e:	cmp    rax,rbx
  414231:	je     414395 <main@@Base+0xfa45>
  414237:	mov    QWORD PTR [r15],0x9
  41423e:	jmp    41438b <main@@Base+0xfa3b>
  414243:	movabs rax,0x4f74686572000000
  41424d:	cmp    rcx,rax
  414250:	jae    4142cb <main@@Base+0xf97b>
  414252:	movabs rax,0x4e4f4e4500000000
  41425c:	movabs rsi,0xffffffff00000000
  414266:	and    rcx,rsi
  414269:	cmp    rcx,rax
  41426c:	jne    414395 <main@@Base+0xfa45>
  414272:	mov    rsi,rbx
  414275:	mov    ecx,0x4
  41427a:	mov    r8,r9
  41427d:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  414282:	cmp    rax,rbx
  414285:	je     414395 <main@@Base+0xfa45>
  41428b:	mov    QWORD PTR [r15],0x0
  414292:	jmp    41438b <main@@Base+0xfa3b>
  414297:	movabs rax,0x4d754c616e000000
  4142a1:	cmp    rsi,rax
  4142a4:	jne    41430c <main@@Base+0xf9bc>
  4142a6:	mov    rsi,rbx
  4142a9:	mov    ecx,0x5
  4142ae:	mov    r8,r9
  4142b1:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  4142b6:	cmp    rax,rbx
  4142b9:	je     414395 <main@@Base+0xfa45>
  4142bf:	mov    QWORD PTR [r15],0x2
  4142c6:	jmp    41438b <main@@Base+0xfa3b>
  4142cb:	movabs r8,0x526170756e7a656c
  4142d5:	cmp    rcx,r8
  4142d8:	jae    414336 <main@@Base+0xf9e6>
  4142da:	and    rcx,0xffffffffff000000
  4142e1:	cmp    rcx,rax
  4142e4:	jne    414395 <main@@Base+0xfa45>
  4142ea:	mov    rsi,rbx
  4142ed:	mov    ecx,0x5
  4142f2:	mov    r8,r9
  4142f5:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  4142fa:	cmp    rax,rbx
  4142fd:	je     414395 <main@@Base+0xfa45>
  414303:	mov    QWORD PTR [r15],0xb
  41430a:	jmp    41438b <main@@Base+0xfa3b>
  41430c:	and    rcx,0xffffffffffffff00
  414313:	cmp    rcx,r8
  414316:	jne    414395 <main@@Base+0xfa45>
  414318:	mov    rsi,rbx
  41431b:	mov    ecx,0x7
  414320:	mov    r8,r9
  414323:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  414328:	cmp    rax,rbx
  41432b:	je     414395 <main@@Base+0xfa45>
  41432d:	mov    QWORD PTR [r15],0xa
  414334:	jmp    41438b <main@@Base+0xfa3b>
  414336:	mov    rax,rcx
  414339:	shr    rax,0x10
  41433d:	movabs rsi,0x556e75736564
  414347:	cmp    rax,rsi
  41434a:	jne    41436a <main@@Base+0xfa1a>
  41434c:	mov    rsi,rbx
  41434f:	mov    ecx,0x6
  414354:	mov    r8,r9
  414357:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  41435c:	cmp    rax,rbx
  41435f:	je     414395 <main@@Base+0xfa45>
  414361:	mov    QWORD PTR [r15],0xff
  414368:	jmp    41438b <main@@Base+0xfa3b>
  41436a:	cmp    rcx,r8
  41436d:	jne    414395 <main@@Base+0xfa45>
  41436f:	mov    rsi,rbx
  414372:	mov    ecx,0x8
  414377:	mov    r8,r9
  41437a:	call   41e740 <flatcc_json_parser_match_constant@@Base>
  41437f:	cmp    rax,rbx
  414382:	je     414395 <main@@Base+0xfa45>
  414384:	mov    QWORD PTR [r15],0x8
  41438b:	mov    DWORD PTR [r14],0x0
  414392:	mov    rbx,rax
  414395:	mov    rax,rbx
  414398:	pop    rbx
  414399:	pop    r14
  41439b:	pop    r15
  41439d:	ret    
  41439e:	xchg   ax,ax
  4143a0:	xor    eax,eax
  4143a2:	cmp    dil,0x5
  4143a6:	setb   al
  4143a9:	ret    
  4143aa:	nop    WORD PTR [rax+rax*1+0x0]
  4143b0:	push   rbp
  4143b1:	push   r15
  4143b3:	push   r14
  4143b5:	push   r13
  4143b7:	push   r12
  4143b9:	push   rbx
  4143ba:	sub    rsp,0x38
  4143be:	mov    r14,rcx
  4143c1:	mov    r12,rdx
  4143c4:	mov    rbp,rsi
  4143c7:	mov    r15,rdi
  4143ca:	mov    DWORD PTR [rcx],0x0
  4143d0:	mov    rdi,QWORD PTR [rdi]
  4143d3:	mov    esi,0x3
  4143d8:	call   41af90 <flatcc_builder_start_table@@Base>
  4143dd:	test   eax,eax
  4143df:	jne    414433 <main@@Base+0xfae3>
  4143e1:	cmp    rbp,r12
  4143e4:	je     414412 <main@@Base+0xfac2>
  4143e6:	cmp    BYTE PTR [rbp+0x0],0x7b
  4143ea:	jne    414412 <main@@Base+0xfac2>
  4143ec:	lea    rax,[rbp+0x1]
  4143f0:	mov    rcx,r12
  4143f3:	sub    rcx,rax
  4143f6:	cmp    rcx,0x2
  4143fa:	jl     41445b <main@@Base+0xfb0b>
  4143fc:	cmp    BYTE PTR [rax],0x20
  4143ff:	jg     414469 <main@@Base+0xfb19>
  414401:	jne    41445b <main@@Base+0xfb0b>
  414403:	cmp    BYTE PTR [rbp+0x2],0x20
  414407:	jle    41445b <main@@Base+0xfb0b>
  414409:	add    rbp,0x2
  41440d:	mov    rax,rbp
  414410:	jmp    414469 <main@@Base+0xfb19>
  414412:	mov    rdi,r15
  414415:	mov    rsi,rbp
  414418:	mov    rdx,r12
  41441b:	mov    ecx,0x15
  414420:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414425:	mov    rbp,rax
  414428:	cmp    DWORD PTR [r15+0x20],0x0
  41442d:	je     41754f <main@@Base+0x12bff>
  414433:	mov    rdi,r15
  414436:	mov    rsi,rbp
  414439:	mov    rdx,r12
  41443c:	mov    ecx,0x21
  414441:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414446:	mov    rbp,rax
  414449:	mov    rax,rbp
  41444c:	add    rsp,0x38
  414450:	pop    rbx
  414451:	pop    r12
  414453:	pop    r13
  414455:	pop    r14
  414457:	pop    r15
  414459:	pop    rbp
  41445a:	ret    
  41445b:	mov    rdi,r15
  41445e:	mov    rsi,rax
  414461:	mov    rdx,r12
  414464:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414469:	mov    rsi,r12
  41446c:	cmp    rax,r12
  41446f:	je     4144ac <main@@Base+0xfb5c>
  414471:	cmp    BYTE PTR [rax],0x7d
  414474:	jne    4144a9 <main@@Base+0xfb59>
  414476:	lea    rbp,[rax+0x1]
  41447a:	mov    rcx,r12
  41447d:	sub    rcx,rbp
  414480:	cmp    rcx,0x2
  414484:	jl     4175e6 <main@@Base+0x12c96>
  41448a:	cmp    BYTE PTR [rbp+0x0],0x20
  41448e:	jg     414428 <main@@Base+0xfad8>
  414490:	jne    4175e6 <main@@Base+0x12c96>
  414496:	cmp    BYTE PTR [rax+0x2],0x20
  41449a:	jle    4175e6 <main@@Base+0x12c96>
  4144a0:	add    rax,0x2
  4144a4:	jmp    414425 <main@@Base+0xfad5>
  4144a9:	mov    rsi,rax
  4144ac:	lea    rax,[r15+0x14]
  4144b0:	mov    QWORD PTR [rsp+0x18],rax
  4144b5:	movabs rbp,0x625f73746172745f
  4144bf:	mov    QWORD PTR [rsp+0x8],r15
  4144c4:	mov    QWORD PTR [rsp+0x10],r14
  4144c9:	nop    DWORD PTR [rax+0x0]
  4144d0:	mov    r13,r12
  4144d3:	cmp    rsi,r12
  4144d6:	je     414515 <main@@Base+0xfbc5>
  4144d8:	mov    al,BYTE PTR [rsi]
  4144da:	cmp    al,0x2e
  4144dc:	je     4144f2 <main@@Base+0xfba2>
  4144de:	cmp    al,0x22
  4144e0:	jne    414507 <main@@Base+0xfbb7>
  4144e2:	inc    rsi
  4144e5:	mov    rax,QWORD PTR [rsp+0x18]
  4144ea:	mov    DWORD PTR [rax],0x0
  4144f0:	jmp    414512 <main@@Base+0xfbc2>
  4144f2:	mov    rdi,r15
  4144f5:	mov    rdx,r12
  4144f8:	mov    ecx,0x5
  4144fd:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414502:	mov    r13,rax
  414505:	jmp    414515 <main@@Base+0xfbc5>
  414507:	mov    rax,QWORD PTR [rsp+0x18]
  41450c:	mov    DWORD PTR [rax],0x1
  414512:	mov    r13,rsi
  414515:	mov    rax,r12
  414518:	sub    rax,r13
  41451b:	cmp    rax,0x8
  41451f:	jb     414530 <main@@Base+0xfbe0>
  414521:	movbe  rax,QWORD PTR [r13+0x0]
  414527:	jmp    4145b4 <main@@Base+0xfc64>
  41452c:	nop    DWORD PTR [rax+0x0]
  414530:	dec    rax
  414533:	cmp    rax,0x6
  414537:	ja     4145e0 <main@@Base+0xfc90>
  41453d:	lea    rcx,[rip+0xe214]        # 422758 <_IO_stdin_used@@Base+0x758>
  414544:	movsxd rbx,DWORD PTR [rcx+rax*4]
  414548:	add    rbx,rcx
  41454b:	xor    ecx,ecx
  41454d:	xor    eax,eax
  41454f:	xor    edx,edx
  414551:	xor    esi,esi
  414553:	xor    edi,edi
  414555:	xor    ebp,ebp
  414557:	jmp    rbx
  414559:	movsx  rcx,BYTE PTR [r13+0x6]
  41455e:	shl    rcx,0x8
  414562:	movsx  rax,BYTE PTR [r13+0x5]
  414567:	shl    rax,0x10
  41456b:	or     rax,rcx
  41456e:	movsx  rdx,BYTE PTR [r13+0x4]
  414573:	shl    rdx,0x18
  414577:	or     rdx,rax
  41457a:	movsx  rsi,BYTE PTR [r13+0x3]
  41457f:	shl    rsi,0x20
  414583:	or     rsi,rdx
  414586:	movsx  rdi,BYTE PTR [r13+0x2]
  41458b:	shl    rdi,0x28
  41458f:	or     rdi,rsi
  414592:	movsx  rbp,BYTE PTR [r13+0x1]
  414597:	shl    rbp,0x30
  41459b:	or     rbp,rdi
  41459e:	movzx  eax,BYTE PTR [r13+0x0]
  4145a3:	shl    rax,0x38
  4145a7:	or     rax,rbp
  4145aa:	movabs rbp,0x625f73746172745f
  4145b4:	movabs rcx,0x746573746a736f6e
  4145be:	cmp    rax,rcx
  4145c1:	jne    4145e0 <main@@Base+0xfc90>
  4145c3:	lea    rsi,[r13+0x8]
  4145c7:	mov    rax,r12
  4145ca:	sub    rax,rsi
  4145cd:	cmp    rax,0x8
  4145d1:	jb     4145eb <main@@Base+0xfc9b>
  4145d3:	movbe  rax,QWORD PTR [rsi]
  4145d8:	jmp    414671 <main@@Base+0xfd21>
  4145dd:	nop    DWORD PTR [rax]
  4145e0:	mov    rdi,r15
  4145e3:	mov    rsi,r13
  4145e6:	jmp    4146a1 <main@@Base+0xfd51>
  4145eb:	dec    rax
  4145ee:	cmp    rax,0x6
  4145f2:	ja     41469e <main@@Base+0xfd4e>
  4145f8:	lea    rcx,[rip+0xe175]        # 422774 <_IO_stdin_used@@Base+0x774>
  4145ff:	mov    rdx,rcx
  414602:	movsxd rcx,DWORD PTR [rcx+rax*4]
  414606:	add    rcx,rdx
  414609:	xor    r8d,r8d
  41460c:	xor    eax,eax
  41460e:	xor    edx,edx
  414610:	xor    edi,edi
  414612:	xor    ebp,ebp
  414614:	xor    ebx,ebx
  414616:	jmp    rcx
  414618:	movsx  r8,BYTE PTR [r13+0xe]
  41461d:	shl    r8,0x8
  414621:	movsx  rax,BYTE PTR [r13+0xd]
  414626:	shl    rax,0x10
  41462a:	or     rax,r8
  41462d:	movsx  rdx,BYTE PTR [r13+0xc]
  414632:	shl    rdx,0x18
  414636:	or     rdx,rax
  414639:	movsx  rdi,BYTE PTR [r13+0xb]
  41463e:	shl    rdi,0x20
  414642:	or     rdi,rdx
  414645:	movsx  rbp,BYTE PTR [r13+0xa]
  41464a:	shl    rbp,0x28
  41464e:	or     rbp,rdi
  414651:	movsx  rbx,BYTE PTR [r13+0x9]
  414656:	shl    rbx,0x30
  41465a:	or     rbx,rbp
  41465d:	movzx  eax,BYTE PTR [rsi]
  414660:	shl    rax,0x38
  414664:	or     rax,rbx
  414667:	movabs rbp,0x625f73746172745f
  414671:	movabs rcx,0x7072656669787061
  41467b:	cmp    rax,rcx
  41467e:	jne    41469e <main@@Base+0xfd4e>
  414680:	lea    r14,[r13+0x10]
  414684:	mov    rbx,r12
  414687:	sub    rbx,r14
  41468a:	cmp    rbx,0x8
  41468e:	jb     414768 <main@@Base+0xfe18>
  414694:	movbe  rax,QWORD PTR [r14]
  414699:	jmp    4147f0 <main@@Base+0xfea0>
  41469e:	mov    rdi,r15
  4146a1:	mov    rdx,r12
  4146a4:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4146a9:	mov    rbx,rax
  4146ac:	mov    rax,r12
  4146af:	sub    rax,rbx
  4146b2:	cmp    rax,0x2
  4146b6:	jl     4146e0 <main@@Base+0xfd90>
  4146b8:	cmp    BYTE PTR [rbx],0x20
  4146bb:	jg     4146f1 <main@@Base+0xfda1>
  4146bd:	jne    4146e0 <main@@Base+0xfd90>
  4146bf:	cmp    BYTE PTR [rbx+0x1],0x20
  4146c3:	jle    4146e0 <main@@Base+0xfd90>
  4146c5:	inc    rbx
  4146c8:	cmp    rbx,r12
  4146cb:	jne    4146fa <main@@Base+0xfdaa>
  4146cd:	jmp    417541 <main@@Base+0x12bf1>
  4146d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146dc:	nop    DWORD PTR [rax+0x0]
  4146e0:	mov    rdi,r15
  4146e3:	mov    rsi,rbx
  4146e6:	mov    rdx,r12
  4146e9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4146ee:	mov    rbx,rax
  4146f1:	cmp    rbx,r12
  4146f4:	je     417541 <main@@Base+0x12bf1>
  4146fa:	mov    al,BYTE PTR [rbx]
  4146fc:	cmp    al,0x2c
  4146fe:	jne    417567 <main@@Base+0x12c17>
  414704:	lea    rsi,[rbx+0x1]
  414708:	mov    rax,r12
  41470b:	sub    rax,rsi
  41470e:	cmp    rax,0x2
  414712:	jl     414750 <main@@Base+0xfe00>
  414714:	cmp    BYTE PTR [rsi],0x20
  414717:	jg     41475e <main@@Base+0xfe0e>
  414719:	jne    414750 <main@@Base+0xfe00>
  41471b:	cmp    BYTE PTR [rbx+0x2],0x20
  41471f:	jle    414750 <main@@Base+0xfe00>
  414721:	add    rbx,0x2
  414725:	mov    rsi,rbx
  414728:	cmp    rsi,r12
  41472b:	je     4175a5 <main@@Base+0x12c55>
  414731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41473b:	nop    DWORD PTR [rax+rax*1+0x0]
  414740:	cmp    BYTE PTR [rsi],0x7d
  414743:	jne    4144d0 <main@@Base+0xfb80>
  414749:	jmp    4175ad <main@@Base+0x12c5d>
  41474e:	xchg   ax,ax
  414750:	mov    rdi,r15
  414753:	mov    rdx,r12
  414756:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41475b:	mov    rsi,rax
  41475e:	cmp    rsi,r12
  414761:	jne    414740 <main@@Base+0xfdf0>
  414763:	jmp    4175a5 <main@@Base+0x12c55>
  414768:	lea    rax,[rbx-0x1]
  41476c:	cmp    rax,0x6
  414770:	ja     414d7a <main@@Base+0x1042a>
  414776:	lea    rcx,[rip+0xe013]        # 422790 <_IO_stdin_used@@Base+0x790>
  41477d:	mov    rdx,rcx
  414780:	movsxd rcx,DWORD PTR [rcx+rax*4]
  414784:	add    rcx,rdx
  414787:	xor    r8d,r8d
  41478a:	xor    eax,eax
  41478c:	xor    edx,edx
  41478e:	xor    esi,esi
  414790:	xor    edi,edi
  414792:	xor    ebp,ebp
  414794:	jmp    rcx
  414796:	movsx  r8,BYTE PTR [r13+0x16]
  41479b:	shl    r8,0x8
  41479f:	movsx  rax,BYTE PTR [r13+0x15]
  4147a4:	shl    rax,0x10
  4147a8:	or     rax,r8
  4147ab:	movsx  rdx,BYTE PTR [r13+0x14]
  4147b0:	shl    rdx,0x18
  4147b4:	or     rdx,rax
  4147b7:	movsx  rsi,BYTE PTR [r13+0x13]
  4147bc:	shl    rsi,0x20
  4147c0:	or     rsi,rdx
  4147c3:	movsx  rdi,BYTE PTR [r13+0x12]
  4147c8:	shl    rdi,0x28
  4147cc:	or     rdi,rsi
  4147cf:	movsx  rbp,BYTE PTR [r13+0x11]
  4147d4:	shl    rbp,0x30
  4147d8:	or     rbp,rdi
  4147db:	movzx  eax,BYTE PTR [r14]
  4147df:	shl    rax,0x38
  4147e3:	or     rax,rbp
  4147e6:	movabs rbp,0x625f73746172745f
  4147f0:	mov    r15,rax
  4147f3:	and    r15,0xffffffffffff0000
  4147fa:	movabs rcx,0x7273696e67000000
  414804:	add    rcx,0x320000
  41480b:	cmp    r15,rcx
  41480e:	jne    41484a <main@@Base+0xfefa>
  414810:	cmp    rbx,0x7
  414814:	mov    r15,QWORD PTR [rsp+0x8]
  414819:	jl     414d7a <main@@Base+0x1042a>
  41481f:	mov    rax,QWORD PTR [rsp+0x18]
  414824:	cmp    DWORD PTR [rax],0x0
  414827:	mov    al,BYTE PTR [r13+0x16]
  41482b:	je     414898 <main@@Base+0xff48>
  41482d:	cmp    al,0x21
  41482f:	jl     414839 <main@@Base+0xfee9>
  414831:	cmp    al,0x3a
  414833:	jne    414d7a <main@@Base+0x1042a>
  414839:	add    r13,0x16
  41483d:	mov    rax,QWORD PTR [rsp+0x18]
  414842:	mov    DWORD PTR [rax],0x0
  414848:	jmp    4148a4 <main@@Base+0xff54>
  41484a:	cmp    rbx,0x6
  41484e:	jl     4149ff <main@@Base+0x100af>
  414854:	and    rax,0xffffffffff000000
  41485a:	movabs rcx,0x7273696e67000000
  414864:	cmp    rax,rcx
  414867:	jne    4149ff <main@@Base+0x100af>
  41486d:	mov    rax,QWORD PTR [rsp+0x18]
  414872:	cmp    DWORD PTR [rax],0x0
  414875:	mov    al,BYTE PTR [r13+0x15]
  414879:	je     4148cd <main@@Base+0xff7d>
  41487b:	cmp    al,0x21
  41487d:	jl     414887 <main@@Base+0xff37>
  41487f:	cmp    al,0x3a
  414881:	jne    4149ff <main@@Base+0x100af>
  414887:	lea    rsi,[r13+0x15]
  41488b:	mov    rax,QWORD PTR [rsp+0x18]
  414890:	mov    DWORD PTR [rax],0x0
  414896:	jmp    4148d9 <main@@Base+0xff89>
  414898:	cmp    al,0x22
  41489a:	jne    414d7a <main@@Base+0x1042a>
  4148a0:	add    r13,0x17
  4148a4:	mov    rax,r12
  4148a7:	sub    rax,r13
  4148aa:	cmp    rax,0x2
  4148ae:	jl     41490b <main@@Base+0xffbb>
  4148b0:	cmp    BYTE PTR [r13+0x0],0x20
  4148b5:	jg     41491c <main@@Base+0xffcc>
  4148b7:	jne    41490b <main@@Base+0xffbb>
  4148b9:	cmp    BYTE PTR [r13+0x1],0x20
  4148be:	jle    41490b <main@@Base+0xffbb>
  4148c0:	inc    r13
  4148c3:	cmp    r13,r12
  4148c6:	jne    414925 <main@@Base+0xffd5>
  4148c8:	jmp    4149cc <main@@Base+0x1007c>
  4148cd:	cmp    al,0x22
  4148cf:	jne    4149ff <main@@Base+0x100af>
  4148d5:	lea    rsi,[r13+0x16]
  4148d9:	mov    rax,r12
  4148dc:	sub    rax,rsi
  4148df:	cmp    rax,0x2
  4148e3:	jl     414973 <main@@Base+0x10023>
  4148e9:	cmp    BYTE PTR [rsi],0x20
  4148ec:	jg     414983 <main@@Base+0x10033>
  4148f2:	jne    414973 <main@@Base+0x10023>
  4148f4:	cmp    BYTE PTR [rsi+0x1],0x20
  4148f8:	jle    414973 <main@@Base+0x10023>
  4148fa:	inc    rsi
  4148fd:	cmp    rsi,r12
  414900:	jne    414988 <main@@Base+0x10038>
  414906:	jmp    4149e4 <main@@Base+0x10094>
  41490b:	mov    rdi,r15
  41490e:	mov    rsi,r13
  414911:	mov    rdx,r12
  414914:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414919:	mov    r13,rax
  41491c:	cmp    r13,r12
  41491f:	je     4149cc <main@@Base+0x1007c>
  414925:	cmp    BYTE PTR [r13+0x0],0x3a
  41492a:	jne    4149cc <main@@Base+0x1007c>
  414930:	lea    rbx,[r13+0x1]
  414934:	mov    rax,r12
  414937:	sub    rax,rbx
  41493a:	cmp    rax,0x2
  41493e:	jl     414afc <main@@Base+0x101ac>
  414944:	cmp    BYTE PTR [rbx],0x20
  414947:	jg     414b0d <main@@Base+0x101bd>
  41494d:	jne    414afc <main@@Base+0x101ac>
  414953:	cmp    BYTE PTR [r13+0x2],0x20
  414958:	jle    414afc <main@@Base+0x101ac>
  41495e:	add    r13,0x2
  414962:	mov    rbx,r13
  414965:	cmp    r14,rbx
  414968:	jne    414b16 <main@@Base+0x101c6>
  41496e:	jmp    414d7a <main@@Base+0x1042a>
  414973:	mov    rdi,QWORD PTR [rsp+0x8]
  414978:	mov    rdx,r12
  41497b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414980:	mov    rsi,rax
  414983:	cmp    rsi,r12
  414986:	je     4149e4 <main@@Base+0x10094>
  414988:	cmp    BYTE PTR [rsi],0x3a
  41498b:	jne    4149e4 <main@@Base+0x10094>
  41498d:	lea    rax,[rsi+0x1]
  414991:	mov    rcx,r12
  414994:	sub    rcx,rax
  414997:	cmp    rcx,0x2
  41499b:	jl     414b9e <main@@Base+0x1024e>
  4149a1:	cmp    BYTE PTR [rax],0x20
  4149a4:	jg     414bae <main@@Base+0x1025e>
  4149aa:	jne    414b9e <main@@Base+0x1024e>
  4149b0:	cmp    BYTE PTR [rsi+0x2],0x20
  4149b4:	jle    414b9e <main@@Base+0x1024e>
  4149ba:	add    rsi,0x2
  4149be:	mov    rax,rsi
  4149c1:	cmp    r14,rax
  4149c4:	jne    414bb7 <main@@Base+0x10267>
  4149ca:	jmp    4149ff <main@@Base+0x100af>
  4149cc:	mov    rdi,r15
  4149cf:	mov    rsi,r13
  4149d2:	mov    rdx,r12
  4149d5:	mov    ecx,0x4
  4149da:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4149df:	jmp    414b0a <main@@Base+0x101ba>
  4149e4:	mov    rdi,QWORD PTR [rsp+0x8]
  4149e9:	mov    rdx,r12
  4149ec:	mov    ecx,0x4
  4149f1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4149f6:	cmp    r14,rax
  4149f9:	jne    414bb7 <main@@Base+0x10267>
  4149ff:	movabs rax,0x7273696e67000000
  414a09:	add    rax,0x330000
  414a0f:	cmp    r15,rax
  414a12:	mov    r15,QWORD PTR [rsp+0x8]
  414a17:	jne    414d7a <main@@Base+0x1042a>
  414a1d:	cmp    rbx,0x7
  414a21:	jl     414d7a <main@@Base+0x1042a>
  414a27:	mov    rax,QWORD PTR [rsp+0x18]
  414a2c:	cmp    DWORD PTR [rax],0x0
  414a2f:	mov    al,BYTE PTR [r13+0x16]
  414a33:	je     414a52 <main@@Base+0x10102>
  414a35:	cmp    al,0x21
  414a37:	jl     414a41 <main@@Base+0x100f1>
  414a39:	cmp    al,0x3a
  414a3b:	jne    414d7a <main@@Base+0x1042a>
  414a41:	add    r13,0x16
  414a45:	mov    rax,QWORD PTR [rsp+0x18]
  414a4a:	mov    DWORD PTR [rax],0x0
  414a50:	jmp    414a5e <main@@Base+0x1010e>
  414a52:	cmp    al,0x22
  414a54:	jne    414d7a <main@@Base+0x1042a>
  414a5a:	add    r13,0x17
  414a5e:	mov    rax,r12
  414a61:	sub    rax,r13
  414a64:	cmp    rax,0x2
  414a68:	jl     414a84 <main@@Base+0x10134>
  414a6a:	cmp    BYTE PTR [r13+0x0],0x20
  414a6f:	jg     414a95 <main@@Base+0x10145>
  414a71:	jne    414a84 <main@@Base+0x10134>
  414a73:	cmp    BYTE PTR [r13+0x1],0x20
  414a78:	jle    414a84 <main@@Base+0x10134>
  414a7a:	inc    r13
  414a7d:	cmp    r13,r12
  414a80:	jne    414a9a <main@@Base+0x1014a>
  414a82:	jmp    414ae4 <main@@Base+0x10194>
  414a84:	mov    rdi,r15
  414a87:	mov    rsi,r13
  414a8a:	mov    rdx,r12
  414a8d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414a92:	mov    r13,rax
  414a95:	cmp    r13,r12
  414a98:	je     414ae4 <main@@Base+0x10194>
  414a9a:	cmp    BYTE PTR [r13+0x0],0x3a
  414a9f:	jne    414ae4 <main@@Base+0x10194>
  414aa1:	lea    rbx,[r13+0x1]
  414aa5:	mov    rax,r12
  414aa8:	sub    rax,rbx
  414aab:	cmp    rax,0x2
  414aaf:	jl     414d07 <main@@Base+0x103b7>
  414ab5:	cmp    BYTE PTR [rbx],0x20
  414ab8:	jg     414d18 <main@@Base+0x103c8>
  414abe:	jne    414d07 <main@@Base+0x103b7>
  414ac4:	cmp    BYTE PTR [r13+0x2],0x20
  414ac9:	jle    414d07 <main@@Base+0x103b7>
  414acf:	add    r13,0x2
  414ad3:	mov    rbx,r13
  414ad6:	cmp    r14,rbx
  414ad9:	jne    414d1d <main@@Base+0x103cd>
  414adf:	jmp    414d7a <main@@Base+0x1042a>
  414ae4:	mov    rdi,r15
  414ae7:	mov    rsi,r13
  414aea:	mov    rdx,r12
  414aed:	mov    ecx,0x4
  414af2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414af7:	jmp    414d15 <main@@Base+0x103c5>
  414afc:	mov    rdi,r15
  414aff:	mov    rsi,rbx
  414b02:	mov    rdx,r12
  414b05:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414b0a:	mov    rbx,rax
  414b0d:	cmp    r14,rbx
  414b10:	je     414d7a <main@@Base+0x1042a>
  414b16:	mov    rdi,QWORD PTR [r15]
  414b19:	mov    esi,0x2
  414b1e:	call   41af90 <flatcc_builder_start_table@@Base>
  414b23:	test   eax,eax
  414b25:	jne    41761c <main@@Base+0x12ccc>
  414b2b:	cmp    rbx,r12
  414b2e:	je     414b73 <main@@Base+0x10223>
  414b30:	cmp    BYTE PTR [rbx],0x7b
  414b33:	jne    414b73 <main@@Base+0x10223>
  414b35:	lea    rsi,[rbx+0x1]
  414b39:	mov    rax,r12
  414b3c:	sub    rax,rsi
  414b3f:	cmp    rax,0x2
  414b43:	mov    r14,QWORD PTR [rsp+0x10]
  414b48:	jl     414c47 <main@@Base+0x102f7>
  414b4e:	cmp    BYTE PTR [rsi],0x20
  414b51:	jg     414c55 <main@@Base+0x10305>
  414b57:	jne    414c47 <main@@Base+0x102f7>
  414b5d:	cmp    BYTE PTR [rbx+0x2],0x20
  414b61:	jle    414c47 <main@@Base+0x102f7>
  414b67:	add    rbx,0x2
  414b6b:	mov    rsi,rbx
  414b6e:	jmp    414c55 <main@@Base+0x10305>
  414b73:	mov    rdi,r15
  414b76:	mov    rsi,rbx
  414b79:	mov    rdx,r12
  414b7c:	mov    ecx,0x15
  414b81:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414b86:	mov    rbx,rax
  414b89:	mov    r14,QWORD PTR [rsp+0x10]
  414b8e:	cmp    DWORD PTR [r15+0x20],0x0
  414b93:	je     4173f5 <main@@Base+0x12aa5>
  414b99:	jmp    41761c <main@@Base+0x12ccc>
  414b9e:	mov    rdi,QWORD PTR [rsp+0x8]
  414ba3:	mov    rsi,rax
  414ba6:	mov    rdx,r12
  414ba9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414bae:	cmp    r14,rax
  414bb1:	je     4149ff <main@@Base+0x100af>
  414bb7:	mov    rbx,rax
  414bba:	mov    r15,QWORD PTR [rsp+0x8]
  414bbf:	mov    rdi,QWORD PTR [r15]
  414bc2:	mov    esi,0x9
  414bc7:	call   41af90 <flatcc_builder_start_table@@Base>
  414bcc:	test   eax,eax
  414bce:	jne    417631 <main@@Base+0x12ce1>
  414bd4:	mov    rsi,rbx
  414bd7:	cmp    rbx,r12
  414bda:	je     414c1f <main@@Base+0x102cf>
  414bdc:	cmp    BYTE PTR [rsi],0x7b
  414bdf:	jne    414c1f <main@@Base+0x102cf>
  414be1:	lea    rax,[rsi+0x1]
  414be5:	mov    rcx,r12
  414be8:	sub    rcx,rax
  414beb:	cmp    rcx,0x2
  414bef:	mov    r14,QWORD PTR [rsp+0x10]
  414bf4:	jl     414cae <main@@Base+0x1035e>
  414bfa:	cmp    BYTE PTR [rax],0x20
  414bfd:	jg     414cbc <main@@Base+0x1036c>
  414c03:	jne    414cae <main@@Base+0x1035e>
  414c09:	cmp    BYTE PTR [rsi+0x2],0x20
  414c0d:	jle    414cae <main@@Base+0x1035e>
  414c13:	add    rsi,0x2
  414c17:	mov    rax,rsi
  414c1a:	jmp    414cbc <main@@Base+0x1036c>
  414c1f:	mov    rdi,r15
  414c22:	mov    rdx,r12
  414c25:	mov    ecx,0x15
  414c2a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414c2f:	mov    rbx,rax
  414c32:	mov    r14,QWORD PTR [rsp+0x10]
  414c37:	cmp    DWORD PTR [r15+0x20],0x0
  414c3c:	je     417448 <main@@Base+0x12af8>
  414c42:	jmp    417631 <main@@Base+0x12ce1>
  414c47:	mov    rdi,r15
  414c4a:	mov    rdx,r12
  414c4d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414c52:	mov    rsi,rax
  414c55:	mov    rax,r12
  414c58:	cmp    rsi,r12
  414c5b:	je     414dc3 <main@@Base+0x10473>
  414c61:	cmp    BYTE PTR [rsi],0x7d
  414c64:	jne    414dc0 <main@@Base+0x10470>
  414c6a:	lea    rbx,[rsi+0x1]
  414c6e:	mov    rax,r12
  414c71:	sub    rax,rbx
  414c74:	cmp    rax,0x2
  414c78:	jl     416b61 <main@@Base+0x12211>
  414c7e:	cmp    BYTE PTR [rbx],0x20
  414c81:	jg     4173ea <main@@Base+0x12a9a>
  414c87:	jne    416b61 <main@@Base+0x12211>
  414c8d:	cmp    BYTE PTR [rsi+0x2],0x20
  414c91:	jle    416b61 <main@@Base+0x12211>
  414c97:	add    rsi,0x2
  414c9b:	mov    rbx,rsi
  414c9e:	cmp    DWORD PTR [r15+0x20],0x0
  414ca3:	je     4173f5 <main@@Base+0x12aa5>
  414ca9:	jmp    41761c <main@@Base+0x12ccc>
  414cae:	mov    rdi,r15
  414cb1:	mov    rsi,rax
  414cb4:	mov    rdx,r12
  414cb7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414cbc:	mov    rsi,r12
  414cbf:	cmp    rax,r12
  414cc2:	je     415490 <main@@Base+0x10b40>
  414cc8:	cmp    BYTE PTR [rax],0x7d
  414ccb:	jne    41548d <main@@Base+0x10b3d>
  414cd1:	lea    rbx,[rax+0x1]
  414cd5:	mov    rcx,r12
  414cd8:	sub    rcx,rbx
  414cdb:	cmp    rcx,0x2
  414cdf:	jl     416c0a <main@@Base+0x122ba>
  414ce5:	cmp    BYTE PTR [rbx],0x20
  414ce8:	jg     41743d <main@@Base+0x12aed>
  414cee:	jne    416c0a <main@@Base+0x122ba>
  414cf4:	cmp    BYTE PTR [rax+0x2],0x20
  414cf8:	jle    416c0a <main@@Base+0x122ba>
  414cfe:	add    rax,0x2
  414d02:	jmp    41743a <main@@Base+0x12aea>
  414d07:	mov    rdi,r15
  414d0a:	mov    rsi,rbx
  414d0d:	mov    rdx,r12
  414d10:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  414d15:	mov    rbx,rax
  414d18:	cmp    r14,rbx
  414d1b:	je     414d7a <main@@Base+0x1042a>
  414d1d:	mov    rdi,QWORD PTR [r15]
  414d20:	mov    esi,0x2
  414d25:	call   41af90 <flatcc_builder_start_table@@Base>
  414d2a:	test   eax,eax
  414d2c:	jne    41761c <main@@Base+0x12ccc>
  414d32:	cmp    rbx,r12
  414d35:	je     414d95 <main@@Base+0x10445>
  414d37:	cmp    BYTE PTR [rbx],0x7b
  414d3a:	jne    414d95 <main@@Base+0x10445>
  414d3c:	lea    rsi,[rbx+0x1]
  414d40:	mov    rax,r12
  414d43:	sub    rax,rsi
  414d46:	cmp    rax,0x2
  414d4a:	mov    r14,QWORD PTR [rsp+0x10]
  414d4f:	jl     416a72 <main@@Base+0x12122>
  414d55:	cmp    BYTE PTR [rsi],0x20
  414d58:	jg     416a80 <main@@Base+0x12130>
  414d5e:	jne    416a72 <main@@Base+0x12122>
  414d64:	cmp    BYTE PTR [rbx+0x2],0x20
  414d68:	jle    416a72 <main@@Base+0x12122>
  414d6e:	add    rbx,0x2
  414d72:	mov    rsi,rbx
  414d75:	jmp    416a80 <main@@Base+0x12130>
  414d7a:	mov    rdi,r15
  414d7d:	mov    rsi,r14
  414d80:	mov    rdx,r12
  414d83:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  414d88:	mov    rbx,rax
  414d8b:	mov    r14,QWORD PTR [rsp+0x10]
  414d90:	jmp    4146ac <main@@Base+0xfd5c>
  414d95:	mov    rdi,r15
  414d98:	mov    rsi,rbx
  414d9b:	mov    rdx,r12
  414d9e:	mov    ecx,0x15
  414da3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414da8:	mov    rbx,rax
  414dab:	mov    r14,QWORD PTR [rsp+0x10]
  414db0:	cmp    DWORD PTR [r15+0x20],0x0
  414db5:	je     417508 <main@@Base+0x12bb8>
  414dbb:	jmp    41761c <main@@Base+0x12ccc>
  414dc0:	mov    rax,rsi
  414dc3:	mov    rsi,r12
  414dc6:	cmp    rax,r12
  414dc9:	je     414e0b <main@@Base+0x104bb>
  414dcb:	movzx  ecx,BYTE PTR [rax]
  414dce:	cmp    cl,0x2e
  414dd1:	je     414de8 <main@@Base+0x10498>
  414dd3:	cmp    cl,0x22
  414dd6:	jne    414dfd <main@@Base+0x104ad>
  414dd8:	inc    rax
  414ddb:	mov    rcx,QWORD PTR [rsp+0x18]
  414de0:	mov    DWORD PTR [rcx],0x0
  414de6:	jmp    414e08 <main@@Base+0x104b8>
  414de8:	mov    rdi,r15
  414deb:	mov    rsi,rax
  414dee:	mov    rdx,r12
  414df1:	mov    ecx,0x5
  414df6:	call   41e300 <flatcc_json_parser_set_error@@Base>
  414dfb:	jmp    414e08 <main@@Base+0x104b8>
  414dfd:	mov    rcx,QWORD PTR [rsp+0x18]
  414e02:	mov    DWORD PTR [rcx],0x1
  414e08:	mov    rsi,rax
  414e0b:	mov    rax,r12
  414e0e:	sub    rax,rsi
  414e11:	cmp    rax,0x8
  414e15:	jb     414e21 <main@@Base+0x104d1>
  414e17:	movbe  rax,QWORD PTR [rsi]
  414e1c:	jmp    414ea7 <main@@Base+0x10557>
  414e21:	dec    rax
  414e24:	cmp    rax,0x6
  414e28:	ja     414ed0 <main@@Base+0x10580>
  414e2e:	lea    rcx,[rip+0xda3b]        # 422870 <_IO_stdin_used@@Base+0x870>
  414e35:	mov    rdx,rcx
  414e38:	movsxd rcx,DWORD PTR [rcx+rax*4]
  414e3c:	add    rcx,rdx
  414e3f:	xor    r8d,r8d
  414e42:	xor    eax,eax
  414e44:	xor    edx,edx
  414e46:	xor    edi,edi
  414e48:	xor    ebp,ebp
  414e4a:	xor    ebx,ebx
  414e4c:	jmp    rcx
  414e4e:	movsx  r8,BYTE PTR [rsi+0x6]
  414e53:	shl    r8,0x8
  414e57:	movsx  rax,BYTE PTR [rsi+0x5]
  414e5c:	shl    rax,0x10
  414e60:	or     rax,r8
  414e63:	movsx  rdx,BYTE PTR [rsi+0x4]
  414e68:	shl    rdx,0x18
  414e6c:	or     rdx,rax
  414e6f:	movsx  rdi,BYTE PTR [rsi+0x3]
  414e74:	shl    rdi,0x20
  414e78:	or     rdi,rdx
  414e7b:	movsx  rbp,BYTE PTR [rsi+0x2]
  414e80:	shl    rbp,0x28
  414e84:	or     rbp,rdi
  414e87:	movsx  rbx,BYTE PTR [rsi+0x1]
  414e8c:	shl    rbx,0x30
  414e90:	or     rbx,rbp
  414e93:	movzx  eax,BYTE PTR [rsi]
  414e96:	shl    rax,0x38
  414e9a:	or     rax,rbx
  414e9d:	movabs rbp,0x625f73746172745f
  414ea7:	movabs rcx,0x616161615f626262
  414eb1:	cmp    rax,rcx
  414eb4:	jne    414ed0 <main@@Base+0x10580>
  414eb6:	lea    r14,[rsi+0x8]
  414eba:	mov    rax,r12
  414ebd:	sub    rax,r14
  414ec0:	cmp    rax,0x8
  414ec4:	jb     414ee3 <main@@Base+0x10593>
  414ec6:	movbe  rcx,QWORD PTR [r14]
  414ecb:	jmp    414f69 <main@@Base+0x10619>
  414ed0:	mov    rdi,r15
  414ed3:	mov    rdx,r12
  414ed6:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  414edb:	mov    rbp,rax
  414ede:	jmp    41528a <main@@Base+0x1093a>
  414ee3:	lea    rcx,[rax-0x1]
  414ee7:	cmp    rcx,0x6
  414eeb:	ja     415274 <main@@Base+0x10924>
  414ef1:	lea    rdx,[rip+0xd994]        # 42288c <_IO_stdin_used@@Base+0x88c>
  414ef8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  414efc:	add    rcx,rdx
  414eff:	xor    r8d,r8d
  414f02:	xor    r9d,r9d
  414f05:	xor    edi,edi
  414f07:	xor    ebp,ebp
  414f09:	xor    ebx,ebx
  414f0b:	xor    edx,edx
  414f0d:	jmp    rcx
  414f0f:	movsx  r8,BYTE PTR [rsi+0xe]
  414f14:	shl    r8,0x8
  414f18:	movsx  r9,BYTE PTR [rsi+0xd]
  414f1d:	shl    r9,0x10
  414f21:	or     r9,r8
  414f24:	movsx  rdi,BYTE PTR [rsi+0xc]
  414f29:	shl    rdi,0x18
  414f2d:	or     rdi,r9
  414f30:	movsx  rbp,BYTE PTR [rsi+0xb]
  414f35:	shl    rbp,0x20
  414f39:	or     rbp,rdi
  414f3c:	movsx  rbx,BYTE PTR [rsi+0xa]
  414f41:	shl    rbx,0x28
  414f45:	or     rbx,rbp
  414f48:	movsx  rdx,BYTE PTR [rsi+0x9]
  414f4d:	shl    rdx,0x30
  414f51:	or     rdx,rbx
  414f54:	movzx  ecx,BYTE PTR [r14]
  414f58:	shl    rcx,0x38
  414f5c:	or     rcx,rdx
  414f5f:	movabs rbp,0x625f73746172745f
  414f69:	mov    rdx,rcx
  414f6c:	and    rdx,0xffffffffffffff00
  414f73:	lea    rdi,[rbp+0x3fdfea1]
  414f7a:	cmp    rdx,rdi
  414f7d:	jne    414fb4 <main@@Base+0x10664>
  414f7f:	cmp    rax,0x8
  414f83:	jl     415274 <main@@Base+0x10924>
  414f89:	mov    rax,QWORD PTR [rsp+0x18]
  414f8e:	cmp    DWORD PTR [rax],0x0
  414f91:	movzx  eax,BYTE PTR [rsi+0xf]
  414f95:	je     414ff9 <main@@Base+0x106a9>
  414f97:	cmp    al,0x21
  414f99:	jl     414fa3 <main@@Base+0x10653>
  414f9b:	cmp    al,0x3a
  414f9d:	jne    415274 <main@@Base+0x10924>
  414fa3:	add    rsi,0xf
  414fa7:	mov    rax,QWORD PTR [rsp+0x18]
  414fac:	mov    DWORD PTR [rax],0x0
  414fb2:	jmp    415005 <main@@Base+0x106b5>
  414fb4:	cmp    rcx,rbp
  414fb7:	jne    415274 <main@@Base+0x10924>
  414fbd:	cmp    rax,0x9
  414fc1:	jl     415274 <main@@Base+0x10924>
  414fc7:	mov    rax,QWORD PTR [rsp+0x18]
  414fcc:	cmp    DWORD PTR [rax],0x0
  414fcf:	movzx  eax,BYTE PTR [rsi+0x10]
  414fd3:	je     415099 <main@@Base+0x10749>
  414fd9:	cmp    al,0x21
  414fdb:	jl     414fe5 <main@@Base+0x10695>
  414fdd:	cmp    al,0x3a
  414fdf:	jne    415274 <main@@Base+0x10924>
  414fe5:	add    rsi,0x10
  414fe9:	mov    rax,QWORD PTR [rsp+0x18]
  414fee:	mov    DWORD PTR [rax],0x0
  414ff4:	jmp    4150a5 <main@@Base+0x10755>
  414ff9:	cmp    al,0x22
  414ffb:	jne    415274 <main@@Base+0x10924>
  415001:	add    rsi,0x10
  415005:	mov    rax,r12
  415008:	sub    rax,rsi
  41500b:	cmp    rax,0x2
  41500f:	jl     415028 <main@@Base+0x106d8>
  415011:	cmp    BYTE PTR [rsi],0x20
  415014:	jg     415036 <main@@Base+0x106e6>
  415016:	jne    415028 <main@@Base+0x106d8>
  415018:	cmp    BYTE PTR [rsi+0x1],0x20
  41501c:	jle    415028 <main@@Base+0x106d8>
  41501e:	inc    rsi
  415021:	cmp    rsi,r12
  415024:	jne    41503b <main@@Base+0x106eb>
  415026:	jmp    415084 <main@@Base+0x10734>
  415028:	mov    rdi,r15
  41502b:	mov    rdx,r12
  41502e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415033:	mov    rsi,rax
  415036:	cmp    rsi,r12
  415039:	je     415084 <main@@Base+0x10734>
  41503b:	cmp    BYTE PTR [rsi],0x3a
  41503e:	jne    415084 <main@@Base+0x10734>
  415040:	lea    r13,[rsi+0x1]
  415044:	mov    rax,r12
  415047:	sub    rax,r13
  41504a:	cmp    rax,0x2
  41504e:	jl     415139 <main@@Base+0x107e9>
  415054:	cmp    BYTE PTR [r13+0x0],0x20
  415059:	jg     41514a <main@@Base+0x107fa>
  41505f:	jne    415139 <main@@Base+0x107e9>
  415065:	cmp    BYTE PTR [rsi+0x2],0x20
  415069:	jle    415139 <main@@Base+0x107e9>
  41506f:	add    rsi,0x2
  415073:	mov    r13,rsi
  415076:	cmp    r14,r13
  415079:	jne    415153 <main@@Base+0x10803>
  41507f:	jmp    415274 <main@@Base+0x10924>
  415084:	mov    rdi,r15
  415087:	mov    rdx,r12
  41508a:	mov    ecx,0x4
  41508f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415094:	jmp    415147 <main@@Base+0x107f7>
  415099:	cmp    al,0x22
  41509b:	jne    415274 <main@@Base+0x10924>
  4150a1:	add    rsi,0x11
  4150a5:	mov    rax,r12
  4150a8:	sub    rax,rsi
  4150ab:	cmp    rax,0x2
  4150af:	jl     4150c8 <main@@Base+0x10778>
  4150b1:	cmp    BYTE PTR [rsi],0x20
  4150b4:	jg     4150d6 <main@@Base+0x10786>
  4150b6:	jne    4150c8 <main@@Base+0x10778>
  4150b8:	cmp    BYTE PTR [rsi+0x1],0x20
  4150bc:	jle    4150c8 <main@@Base+0x10778>
  4150be:	inc    rsi
  4150c1:	cmp    rsi,r12
  4150c4:	jne    4150db <main@@Base+0x1078b>
  4150c6:	jmp    415124 <main@@Base+0x107d4>
  4150c8:	mov    rdi,r15
  4150cb:	mov    rdx,r12
  4150ce:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4150d3:	mov    rsi,rax
  4150d6:	cmp    rsi,r12
  4150d9:	je     415124 <main@@Base+0x107d4>
  4150db:	cmp    BYTE PTR [rsi],0x3a
  4150de:	jne    415124 <main@@Base+0x107d4>
  4150e0:	lea    r13,[rsi+0x1]
  4150e4:	mov    rax,r12
  4150e7:	sub    rax,r13
  4150ea:	cmp    rax,0x2
  4150ee:	jl     4151f8 <main@@Base+0x108a8>
  4150f4:	cmp    BYTE PTR [r13+0x0],0x20
  4150f9:	jg     415209 <main@@Base+0x108b9>
  4150ff:	jne    4151f8 <main@@Base+0x108a8>
  415105:	cmp    BYTE PTR [rsi+0x2],0x20
  415109:	jle    4151f8 <main@@Base+0x108a8>
  41510f:	add    rsi,0x2
  415113:	mov    r13,rsi
  415116:	cmp    r14,r13
  415119:	jne    41520e <main@@Base+0x108be>
  41511f:	jmp    415274 <main@@Base+0x10924>
  415124:	mov    rdi,r15
  415127:	mov    rdx,r12
  41512a:	mov    ecx,0x4
  41512f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415134:	jmp    415206 <main@@Base+0x108b6>
  415139:	mov    rdi,r15
  41513c:	mov    rsi,r13
  41513f:	mov    rdx,r12
  415142:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415147:	mov    r13,rax
  41514a:	cmp    r14,r13
  41514d:	je     415274 <main@@Base+0x10924>
  415153:	mov    QWORD PTR [rsp+0x28],0x0
  41515c:	mov    DWORD PTR [rsp+0x4],0x0
  415164:	mov    QWORD PTR [rsp+0x20],0x0
  41516d:	cmp    r13,r12
  415170:	je     4151cd <main@@Base+0x1087d>
  415172:	mov    rdi,r15
  415175:	mov    rsi,r13
  415178:	mov    rdx,r12
  41517b:	lea    rcx,[rsp+0x4]
  415180:	lea    r8,[rsp+0x28]
  415185:	call   41fec0 <flatcc_json_parser_integer@@Base>
  41518a:	cmp    rax,r13
  41518d:	mov    r14,QWORD PTR [rsp+0x10]
  415192:	je     4151e5 <main@@Base+0x10895>
  415194:	mov    rbp,rax
  415197:	mov    rbx,QWORD PTR [rsp+0x28]
  41519c:	cmp    DWORD PTR [rsp+0x4],0x0
  4151a1:	je     415334 <main@@Base+0x109e4>
  4151a7:	movabs rax,0x8000000000000000
  4151b1:	cmp    rbx,rax
  4151b4:	jbe    415358 <main@@Base+0x10a08>
  4151ba:	mov    rdi,r15
  4151bd:	mov    rsi,rbp
  4151c0:	mov    rdx,r12
  4151c3:	mov    ecx,0x8
  4151c8:	jmp    415347 <main@@Base+0x109f7>
  4151cd:	xor    ebx,ebx
  4151cf:	mov    rbp,r12
  4151d2:	mov    r14,QWORD PTR [rsp+0x10]
  4151d7:	cmp    r13,rbp
  4151da:	jne    415399 <main@@Base+0x10a49>
  4151e0:	jmp    415365 <main@@Base+0x10a15>
  4151e5:	xor    ebx,ebx
  4151e7:	mov    rbp,r13
  4151ea:	cmp    r13,rbp
  4151ed:	jne    415399 <main@@Base+0x10a49>
  4151f3:	jmp    415365 <main@@Base+0x10a15>
  4151f8:	mov    rdi,r15
  4151fb:	mov    rsi,r13
  4151fe:	mov    rdx,r12
  415201:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415206:	mov    r13,rax
  415209:	cmp    r14,r13
  41520c:	je     415274 <main@@Base+0x10924>
  41520e:	mov    QWORD PTR [rsp+0x28],0x0
  415217:	mov    DWORD PTR [rsp+0x20],0x0
  41521f:	mov    DWORD PTR [rsp+0x4],0x0
  415227:	xor    ebx,ebx
  415229:	cmp    r13,r12
  41522c:	je     41532c <main@@Base+0x109dc>
  415232:	mov    rdi,r15
  415235:	mov    rsi,r13
  415238:	mov    rdx,r12
  41523b:	lea    rcx,[rsp+0x20]
  415240:	lea    r8,[rsp+0x28]
  415245:	call   41fec0 <flatcc_json_parser_integer@@Base>
  41524a:	cmp    rax,r13
  41524d:	je     4153ce <main@@Base+0x10a7e>
  415253:	mov    rbp,rax
  415256:	cmp    DWORD PTR [rsp+0x20],0x0
  41525b:	je     4153d3 <main@@Base+0x10a83>
  415261:	mov    rdi,r15
  415264:	mov    rsi,rbp
  415267:	mov    rdx,r12
  41526a:	mov    ecx,0x8
  41526f:	jmp    4153f8 <main@@Base+0x10aa8>
  415274:	mov    rdi,r15
  415277:	mov    rsi,r14
  41527a:	mov    rdx,r12
  41527d:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  415282:	mov    rbp,rax
  415285:	mov    r14,QWORD PTR [rsp+0x10]
  41528a:	mov    rax,r12
  41528d:	sub    rax,rbp
  415290:	cmp    rax,0x2
  415294:	jl     4152b1 <main@@Base+0x10961>
  415296:	cmp    BYTE PTR [rbp+0x0],0x20
  41529a:	jg     4152c2 <main@@Base+0x10972>
  41529c:	jne    4152b1 <main@@Base+0x10961>
  41529e:	cmp    BYTE PTR [rbp+0x1],0x20
  4152a2:	jle    4152b1 <main@@Base+0x10961>
  4152a4:	inc    rbp
  4152a7:	cmp    rbp,r12
  4152aa:	jne    4152cb <main@@Base+0x1097b>
  4152ac:	jmp    416ad9 <main@@Base+0x12189>
  4152b1:	mov    rdi,r15
  4152b4:	mov    rsi,rbp
  4152b7:	mov    rdx,r12
  4152ba:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4152bf:	mov    rbp,rax
  4152c2:	cmp    rbp,r12
  4152c5:	je     416ad9 <main@@Base+0x12189>
  4152cb:	movzx  eax,BYTE PTR [rbp+0x0]
  4152cf:	cmp    al,0x2c
  4152d1:	jne    416aec <main@@Base+0x1219c>
  4152d7:	lea    rax,[rbp+0x1]
  4152db:	mov    rcx,r12
  4152de:	sub    rcx,rax
  4152e1:	cmp    rcx,0x2
  4152e5:	jl     4152fd <main@@Base+0x109ad>
  4152e7:	cmp    BYTE PTR [rax],0x20
  4152ea:	jg     41530b <main@@Base+0x109bb>
  4152ec:	jne    4152fd <main@@Base+0x109ad>
  4152ee:	cmp    BYTE PTR [rbp+0x2],0x20
  4152f2:	jle    4152fd <main@@Base+0x109ad>
  4152f4:	add    rbp,0x2
  4152f8:	mov    rax,rbp
  4152fb:	jmp    41530b <main@@Base+0x109bb>
  4152fd:	mov    rdi,r15
  415300:	mov    rsi,rax
  415303:	mov    rdx,r12
  415306:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41530b:	cmp    rax,r12
  41530e:	movabs rbp,0x625f73746172745f
  415318:	je     416b2c <main@@Base+0x121dc>
  41531e:	cmp    BYTE PTR [rax],0x7d
  415321:	jne    414dc3 <main@@Base+0x10473>
  415327:	jmp    416b37 <main@@Base+0x121e7>
  41532c:	mov    rbp,r12
  41532f:	jmp    415400 <main@@Base+0x10ab0>
  415334:	test   rbx,rbx
  415337:	jns    41535b <main@@Base+0x10a0b>
  415339:	mov    rdi,r15
  41533c:	mov    rsi,rbp
  41533f:	mov    rdx,r12
  415342:	mov    ecx,0x7
  415347:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41534c:	mov    rbp,rax
  41534f:	xor    ebx,ebx
  415351:	cmp    r13,rbp
  415354:	jne    415399 <main@@Base+0x10a49>
  415356:	jmp    415365 <main@@Base+0x10a15>
  415358:	neg    rbx
  41535b:	mov    QWORD PTR [rsp+0x20],rbx
  415360:	cmp    r13,rbp
  415363:	jne    415399 <main@@Base+0x10a49>
  415365:	mov    rdi,r15
  415368:	mov    rsi,r13
  41536b:	mov    rdx,r12
  41536e:	lea    rcx,[rip+0x141ab]        # 429520 <filename@@Base+0x450>
  415375:	lea    r8,[rsp+0x20]
  41537a:	call   4132f0 <main@@Base+0xe9a0>
  41537f:	mov    rbp,rax
  415382:	cmp    rax,r13
  415385:	je     417614 <main@@Base+0x12cc4>
  41538b:	cmp    rbp,r12
  41538e:	je     417614 <main@@Base+0x12cc4>
  415394:	mov    rbx,QWORD PTR [rsp+0x20]
  415399:	test   rbx,rbx
  41539c:	jne    4153a9 <main@@Base+0x10a59>
  41539e:	test   BYTE PTR [r15+0x10],0x2
  4153a3:	je     41528a <main@@Base+0x1093a>
  4153a9:	mov    rdi,QWORD PTR [r15]
  4153ac:	mov    edx,0x8
  4153b1:	xor    esi,esi
  4153b3:	mov    ecx,0x8
  4153b8:	call   41c310 <flatcc_builder_table_add@@Base>
  4153bd:	test   rax,rax
  4153c0:	je     417614 <main@@Base+0x12cc4>
  4153c6:	mov    QWORD PTR [rax],rbx
  4153c9:	jmp    41528a <main@@Base+0x1093a>
  4153ce:	mov    rbp,r13
  4153d1:	jmp    415400 <main@@Base+0x10ab0>
  4153d3:	mov    rax,QWORD PTR [rsp+0x28]
  4153d8:	mov    rcx,rax
  4153db:	shr    rcx,0x20
  4153df:	je     41547d <main@@Base+0x10b2d>
  4153e5:	mov    r15,QWORD PTR [rsp+0x8]
  4153ea:	mov    rdi,r15
  4153ed:	mov    rsi,rbp
  4153f0:	mov    rdx,r12
  4153f3:	mov    ecx,0x7
  4153f8:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4153fd:	mov    rbp,rax
  415400:	mov    r14,QWORD PTR [rsp+0x10]
  415405:	cmp    r13,rbp
  415408:	jne    415447 <main@@Base+0x10af7>
  41540a:	mov    rdi,r15
  41540d:	mov    rsi,r13
  415410:	mov    rdx,r12
  415413:	lea    rcx,[rip+0x14126]        # 429540 <filename@@Base+0x470>
  41541a:	lea    r8,[rsp+0x4]
  41541f:	call   413500 <main@@Base+0xebb0>
  415424:	mov    rbp,rax
  415427:	cmp    rax,r13
  41542a:	je     417614 <main@@Base+0x12cc4>
  415430:	cmp    rbp,r12
  415433:	je     417614 <main@@Base+0x12cc4>
  415439:	mov    ebx,DWORD PTR [rsp+0x4]
  41543d:	mov    r15,QWORD PTR [rsp+0x8]
  415442:	mov    r14,QWORD PTR [rsp+0x10]
  415447:	test   ebx,ebx
  415449:	jne    415456 <main@@Base+0x10b06>
  41544b:	test   BYTE PTR [r15+0x10],0x2
  415450:	je     41528a <main@@Base+0x1093a>
  415456:	mov    rdi,QWORD PTR [r15]
  415459:	mov    edx,0x4
  41545e:	mov    esi,0x1
  415463:	mov    ecx,0x4
  415468:	call   41c310 <flatcc_builder_table_add@@Base>
  41546d:	test   rax,rax
  415470:	je     417614 <main@@Base+0x12cc4>
  415476:	mov    DWORD PTR [rax],ebx
  415478:	jmp    41528a <main@@Base+0x1093a>
  41547d:	mov    DWORD PTR [rsp+0x4],eax
  415481:	mov    ebx,eax
  415483:	mov    r15,QWORD PTR [rsp+0x8]
  415488:	jmp    415400 <main@@Base+0x10ab0>
  41548d:	mov    rsi,rax
  415490:	mov    r9,r12
  415493:	cmp    rsi,r12
  415496:	je     4154d6 <main@@Base+0x10b86>
  415498:	movzx  eax,BYTE PTR [rsi]
  41549b:	cmp    al,0x2e
  41549d:	je     4154b3 <main@@Base+0x10b63>
  41549f:	cmp    al,0x22
  4154a1:	jne    4154c8 <main@@Base+0x10b78>
  4154a3:	inc    rsi
  4154a6:	mov    rax,QWORD PTR [rsp+0x18]
  4154ab:	mov    DWORD PTR [rax],0x0
  4154b1:	jmp    4154d3 <main@@Base+0x10b83>
  4154b3:	mov    rdi,r15
  4154b6:	mov    rdx,r12
  4154b9:	mov    ecx,0x5
  4154be:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4154c3:	mov    r9,rax
  4154c6:	jmp    4154d6 <main@@Base+0x10b86>
  4154c8:	mov    rax,QWORD PTR [rsp+0x18]
  4154cd:	mov    DWORD PTR [rax],0x1
  4154d3:	mov    r9,rsi
  4154d6:	mov    r14,r12
  4154d9:	sub    r14,r9
  4154dc:	cmp    r14,0x8
  4154e0:	jb     4154e9 <main@@Base+0x10b99>
  4154e2:	movbe  rbx,QWORD PTR [r9]
  4154e7:	jmp    415563 <main@@Base+0x10c13>
  4154e9:	lea    rax,[r14-0x1]
  4154ed:	cmp    rax,0x6
  4154f1:	ja     415fbb <main@@Base+0x1166b>
  4154f7:	lea    rcx,[rip+0xd2ae]        # 4227ac <_IO_stdin_used@@Base+0x7ac>
  4154fe:	movsxd rbx,DWORD PTR [rcx+rax*4]
  415502:	add    rbx,rcx
  415505:	xor    ecx,ecx
  415507:	xor    eax,eax
  415509:	xor    edx,edx
  41550b:	xor    esi,esi
  41550d:	xor    edi,edi
  41550f:	xor    ebp,ebp
  415511:	jmp    rbx
  415513:	movsx  rcx,BYTE PTR [r9+0x6]
  415518:	shl    rcx,0x8
  41551c:	movsx  rax,BYTE PTR [r9+0x5]
  415521:	shl    rax,0x10
  415525:	or     rax,rcx
  415528:	movsx  rdx,BYTE PTR [r9+0x4]
  41552d:	shl    rdx,0x18
  415531:	or     rdx,rax
  415534:	movsx  rsi,BYTE PTR [r9+0x3]
  415539:	shl    rsi,0x20
  41553d:	or     rsi,rdx
  415540:	movsx  rdi,BYTE PTR [r9+0x2]
  415545:	shl    rdi,0x28
  415549:	or     rdi,rsi
  41554c:	movsx  rbp,BYTE PTR [r9+0x1]
  415551:	shl    rbp,0x30
  415555:	or     rbp,rdi
  415558:	movzx  ebx,BYTE PTR [r9]
  41555c:	shl    rbx,0x38
  415560:	or     rbx,rbp
  415563:	movabs rdx,0x6363636300000000
  41556d:	movabs rsi,0x6262626200000000
  415577:	cmp    rbx,rdx
  41557a:	movabs rcx,0x616161615f626262
  415584:	jae    4155b0 <main@@Base+0x10c60>
  415586:	lea    rax,[rcx-0x2e302f2e]
  41558d:	cmp    rbx,rax
  415590:	jne    415608 <main@@Base+0x10cb8>
  415592:	lea    r14,[r9+0x8]
  415596:	mov    rax,r12
  415599:	sub    rax,r14
  41559c:	cmp    rax,0x8
  4155a0:	jb     4156cb <main@@Base+0x10d7b>
  4155a6:	movbe  rcx,QWORD PTR [r14]
  4155ab:	jmp    415749 <main@@Base+0x10df9>
  4155b0:	lea    rax,[rdx+0x31323334]
  4155b7:	cmp    rbx,rax
  4155ba:	jne    41566d <main@@Base+0x10d1d>
  4155c0:	mov    rbx,r9
  4155c3:	cmp    r14,0x9
  4155c7:	mov    r14,QWORD PTR [rsp+0x10]
  4155cc:	jl     415978 <main@@Base+0x11028>
  4155d2:	mov    rax,QWORD PTR [rsp+0x18]
  4155d7:	cmp    DWORD PTR [rax],0x0
  4155da:	movzx  eax,BYTE PTR [r9+0x8]
  4155df:	je     4157a6 <main@@Base+0x10e56>
  4155e5:	cmp    al,0x21
  4155e7:	jl     4155f4 <main@@Base+0x10ca4>
  4155e9:	mov    rbx,r9
  4155ec:	cmp    al,0x3a
  4155ee:	jne    415978 <main@@Base+0x11028>
  4155f4:	lea    rsi,[r9+0x8]
  4155f8:	mov    rax,QWORD PTR [rsp+0x18]
  4155fd:	mov    DWORD PTR [rax],0x0
  415603:	jmp    4157b5 <main@@Base+0x10e65>
  415608:	mov    r13,rbx
  41560b:	movabs rax,0xffffffff00000000
  415615:	and    r13,rax
  415618:	lea    rax,[rcx-0x5f626262]
  41561f:	cmp    r13,rax
  415622:	jne    415db2 <main@@Base+0x11462>
  415628:	mov    rax,r9
  41562b:	cmp    r14,0x5
  41562f:	jl     415d82 <main@@Base+0x11432>
  415635:	mov    rax,QWORD PTR [rsp+0x18]
  41563a:	cmp    DWORD PTR [rax],0x0
  41563d:	movzx  ecx,BYTE PTR [r9+0x4]
  415642:	je     4157df <main@@Base+0x10e8f>
  415648:	cmp    cl,0x21
  41564b:	jl     415659 <main@@Base+0x10d09>
  41564d:	mov    rax,r9
  415650:	cmp    cl,0x3a
  415653:	jne    415d82 <main@@Base+0x11432>
  415659:	lea    rsi,[r9+0x4]
  41565d:	mov    rax,QWORD PTR [rsp+0x18]
  415662:	mov    DWORD PTR [rax],0x0
  415668:	jmp    4157ef <main@@Base+0x10e9f>
  41566d:	mov    rax,rbx
  415670:	movabs rcx,0xffffffff00000000
  41567a:	and    rax,rcx
  41567d:	cmp    rax,rdx
  415680:	jne    415f70 <main@@Base+0x11620>
  415686:	mov    rax,r9
  415689:	cmp    r14,0x5
  41568d:	jl     415f24 <main@@Base+0x115d4>
  415693:	mov    rax,QWORD PTR [rsp+0x18]
  415698:	cmp    DWORD PTR [rax],0x0
  41569b:	movzx  ecx,BYTE PTR [r9+0x4]
  4156a0:	je     415819 <main@@Base+0x10ec9>
  4156a6:	cmp    cl,0x21
  4156a9:	jl     4156b7 <main@@Base+0x10d67>
  4156ab:	mov    rax,r9
  4156ae:	cmp    cl,0x3a
  4156b1:	jne    415f24 <main@@Base+0x115d4>
  4156b7:	lea    rsi,[r9+0x4]
  4156bb:	mov    rax,QWORD PTR [rsp+0x18]
  4156c0:	mov    DWORD PTR [rax],0x0
  4156c6:	jmp    415829 <main@@Base+0x10ed9>
  4156cb:	lea    rcx,[rax-0x1]
  4156cf:	cmp    rcx,0x6
  4156d3:	ja     416857 <main@@Base+0x11f07>
  4156d9:	lea    rdx,[rip+0xd120]        # 422800 <_IO_stdin_used@@Base+0x800>
  4156e0:	mov    rsi,rdx
  4156e3:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4156e7:	add    rdx,rsi
  4156ea:	xor    r8d,r8d
  4156ed:	xor    ecx,ecx
  4156ef:	xor    esi,esi
  4156f1:	xor    edi,edi
  4156f3:	xor    ebp,ebp
  4156f5:	xor    ebx,ebx
  4156f7:	jmp    rdx
  4156f9:	movsx  r8,BYTE PTR [r9+0xe]
  4156fe:	shl    r8,0x8
  415702:	movsx  rcx,BYTE PTR [r9+0xd]
  415707:	shl    rcx,0x10
  41570b:	or     rcx,r8
  41570e:	movsx  rsi,BYTE PTR [r9+0xc]
  415713:	shl    rsi,0x18
  415717:	or     rsi,rcx
  41571a:	movsx  rdi,BYTE PTR [r9+0xb]
  41571f:	shl    rdi,0x20
  415723:	or     rdi,rsi
  415726:	movsx  rbp,BYTE PTR [r9+0xa]
  41572b:	shl    rbp,0x28
  41572f:	or     rbp,rdi
  415732:	movsx  rbx,BYTE PTR [r9+0x9]
  415737:	shl    rbx,0x30
  41573b:	or     rbx,rbp
  41573e:	movzx  ecx,BYTE PTR [r14]
  415742:	shl    rcx,0x38
  415746:	or     rcx,rbx
  415749:	movabs rdx,0xff00000000000000
  415753:	and    rcx,rdx
  415756:	movabs rdx,0x3500000000000000
  415760:	cmp    rcx,rdx
  415763:	jne    416857 <main@@Base+0x11f07>
  415769:	cmp    rax,0x2
  41576d:	jl     416857 <main@@Base+0x11f07>
  415773:	mov    rax,QWORD PTR [rsp+0x18]
  415778:	cmp    DWORD PTR [rax],0x0
  41577b:	movzx  eax,BYTE PTR [r9+0x9]
  415780:	je     415853 <main@@Base+0x10f03>
  415786:	cmp    al,0x21
  415788:	jl     415792 <main@@Base+0x10e42>
  41578a:	cmp    al,0x3a
  41578c:	jne    416857 <main@@Base+0x11f07>
  415792:	add    r9,0x9
  415796:	mov    rax,QWORD PTR [rsp+0x18]
  41579b:	mov    DWORD PTR [rax],0x0
  4157a1:	jmp    41585f <main@@Base+0x10f0f>
  4157a6:	mov    rbx,r9
  4157a9:	cmp    al,0x22
  4157ab:	jne    415978 <main@@Base+0x11028>
  4157b1:	lea    rsi,[r9+0x9]
  4157b5:	mov    rax,r12
  4157b8:	sub    rax,rsi
  4157bb:	cmp    rax,0x2
  4157bf:	jl     415911 <main@@Base+0x10fc1>
  4157c5:	cmp    BYTE PTR [rsi],0x20
  4157c8:	jle    4158fc <main@@Base+0x10fac>
  4157ce:	mov    rbp,r9
  4157d1:	cmp    rsi,r12
  4157d4:	jne    415927 <main@@Base+0x10fd7>
  4157da:	jmp    415952 <main@@Base+0x11002>
  4157df:	mov    rax,r9
  4157e2:	cmp    cl,0x22
  4157e5:	jne    415d82 <main@@Base+0x11432>
  4157eb:	lea    rsi,[r9+0x5]
  4157ef:	mov    rax,r12
  4157f2:	sub    rax,rsi
  4157f5:	cmp    rax,0x2
  4157f9:	jl     415c04 <main@@Base+0x112b4>
  4157ff:	cmp    BYTE PTR [rsi],0x20
  415802:	jle    415bef <main@@Base+0x1129f>
  415808:	mov    rbp,r9
  41580b:	cmp    rsi,r12
  41580e:	jne    415c1a <main@@Base+0x112ca>
  415814:	jmp    415c58 <main@@Base+0x11308>
  415819:	mov    rax,r9
  41581c:	cmp    cl,0x22
  41581f:	jne    415f24 <main@@Base+0x115d4>
  415825:	lea    rsi,[r9+0x5]
  415829:	mov    rax,r12
  41582c:	sub    rax,rsi
  41582f:	cmp    rax,0x2
  415833:	jl     415c82 <main@@Base+0x11332>
  415839:	cmp    BYTE PTR [rsi],0x20
  41583c:	jle    415c6d <main@@Base+0x1131d>
  415842:	mov    rbp,r9
  415845:	cmp    rsi,r12
  415848:	jne    415c98 <main@@Base+0x11348>
  41584e:	jmp    415cd6 <main@@Base+0x11386>
  415853:	cmp    al,0x22
  415855:	jne    416857 <main@@Base+0x11f07>
  41585b:	add    r9,0xa
  41585f:	mov    rax,r12
  415862:	sub    rax,r9
  415865:	cmp    rax,0x2
  415869:	jl     415884 <main@@Base+0x10f34>
  41586b:	cmp    BYTE PTR [r9],0x20
  41586f:	jg     415895 <main@@Base+0x10f45>
  415871:	jne    415884 <main@@Base+0x10f34>
  415873:	cmp    BYTE PTR [r9+0x1],0x20
  415878:	jle    415884 <main@@Base+0x10f34>
  41587a:	inc    r9
  41587d:	cmp    r9,r12
  415880:	jne    41589a <main@@Base+0x10f4a>
  415882:	jmp    4158e4 <main@@Base+0x10f94>
  415884:	mov    rdi,r15
  415887:	mov    rsi,r9
  41588a:	mov    rdx,r12
  41588d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415892:	mov    r9,rax
  415895:	cmp    r9,r12
  415898:	je     4158e4 <main@@Base+0x10f94>
  41589a:	cmp    BYTE PTR [r9],0x3a
  41589e:	jne    4158e4 <main@@Base+0x10f94>
  4158a0:	lea    rbp,[r9+0x1]
  4158a4:	mov    rax,r12
  4158a7:	sub    rax,rbp
  4158aa:	cmp    rax,0x2
  4158ae:	jl     415fff <main@@Base+0x116af>
  4158b4:	cmp    BYTE PTR [rbp+0x0],0x20
  4158b8:	jg     416010 <main@@Base+0x116c0>
  4158be:	jne    415fff <main@@Base+0x116af>
  4158c4:	cmp    BYTE PTR [r9+0x2],0x20
  4158c9:	jle    415fff <main@@Base+0x116af>
  4158cf:	add    r9,0x2
  4158d3:	mov    rbp,r9
  4158d6:	cmp    r14,rbp
  4158d9:	jne    416019 <main@@Base+0x116c9>
  4158df:	jmp    416857 <main@@Base+0x11f07>
  4158e4:	mov    rdi,r15
  4158e7:	mov    rsi,r9
  4158ea:	mov    rdx,r12
  4158ed:	mov    ecx,0x4
  4158f2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4158f7:	jmp    41600d <main@@Base+0x116bd>
  4158fc:	jne    415911 <main@@Base+0x10fc1>
  4158fe:	cmp    BYTE PTR [rsi+0x1],0x20
  415902:	jle    415911 <main@@Base+0x10fc1>
  415904:	mov    rbp,r9
  415907:	inc    rsi
  41590a:	cmp    rsi,r12
  41590d:	jne    415927 <main@@Base+0x10fd7>
  41590f:	jmp    415952 <main@@Base+0x11002>
  415911:	mov    rbp,r9
  415914:	mov    rdi,r15
  415917:	mov    rdx,r12
  41591a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41591f:	mov    rsi,rax
  415922:	cmp    rsi,r12
  415925:	je     415952 <main@@Base+0x11002>
  415927:	cmp    BYTE PTR [rsi],0x3a
  41592a:	jne    415952 <main@@Base+0x11002>
  41592c:	lea    rbx,[rsi+0x1]
  415930:	mov    rax,r12
  415933:	sub    rax,rbx
  415936:	cmp    rax,0x2
  41593a:	jl     415964 <main@@Base+0x11014>
  41593c:	cmp    BYTE PTR [rbx],0x20
  41593f:	jg     415975 <main@@Base+0x11025>
  415941:	jne    415964 <main@@Base+0x11014>
  415943:	cmp    BYTE PTR [rsi+0x2],0x20
  415947:	jle    415964 <main@@Base+0x11014>
  415949:	add    rsi,0x2
  41594d:	mov    rbx,rsi
  415950:	jmp    415975 <main@@Base+0x11025>
  415952:	mov    rdi,r15
  415955:	mov    rdx,r12
  415958:	mov    ecx,0x4
  41595d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415962:	jmp    415972 <main@@Base+0x11022>
  415964:	mov    rdi,r15
  415967:	mov    rsi,rbx
  41596a:	mov    rdx,r12
  41596d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415972:	mov    rbx,rax
  415975:	mov    r9,rbp
  415978:	cmp    r9,rbx
  41597b:	je     4159f6 <main@@Base+0x110a6>
  41597d:	mov    QWORD PTR [rsp+0x28],0x0
  415986:	mov    DWORD PTR [rsp+0x4],0x0
  41598e:	mov    QWORD PTR [rsp+0x20],0x0
  415997:	cmp    rbx,r12
  41599a:	je     415a10 <main@@Base+0x110c0>
  41599c:	mov    rdi,r15
  41599f:	mov    rsi,rbx
  4159a2:	mov    rdx,r12
  4159a5:	lea    rcx,[rsp+0x4]
  4159aa:	lea    r8,[rsp+0x28]
  4159af:	call   41fec0 <flatcc_json_parser_integer@@Base>
  4159b4:	cmp    rax,rbx
  4159b7:	je     415afe <main@@Base+0x111ae>
  4159bd:	mov    rcx,rax
  4159c0:	mov    rbp,QWORD PTR [rsp+0x28]
  4159c5:	cmp    DWORD PTR [rsp+0x4],0x0
  4159ca:	je     415b0a <main@@Base+0x111ba>
  4159d0:	movabs rax,0x8000000000000000
  4159da:	cmp    rbp,rax
  4159dd:	jbe    415b2e <main@@Base+0x111de>
  4159e3:	mov    rdi,r15
  4159e6:	mov    rsi,rcx
  4159e9:	mov    rdx,r12
  4159ec:	mov    ecx,0x8
  4159f1:	jmp    415b1d <main@@Base+0x111cd>
  4159f6:	lea    r14,[r9+0x8]
  4159fa:	mov    rax,r12
  4159fd:	sub    rax,r14
  415a00:	cmp    rax,0x8
  415a04:	jb     415a23 <main@@Base+0x110d3>
  415a06:	movbe  rcx,QWORD PTR [r14]
  415a0b:	jmp    415aa1 <main@@Base+0x11151>
  415a10:	xor    ebp,ebp
  415a12:	mov    rcx,r12
  415a15:	cmp    rbx,rcx
  415a18:	jne    415b6f <main@@Base+0x1121f>
  415a1e:	jmp    415b3b <main@@Base+0x111eb>
  415a23:	lea    rcx,[rax-0x1]
  415a27:	cmp    rcx,0x6
  415a2b:	ja     416857 <main@@Base+0x11f07>
  415a31:	lea    rdx,[rip+0xcdac]        # 4227e4 <_IO_stdin_used@@Base+0x7e4>
  415a38:	mov    rsi,rdx
  415a3b:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  415a3f:	add    rdx,rsi
  415a42:	xor    r8d,r8d
  415a45:	xor    ecx,ecx
  415a47:	xor    esi,esi
  415a49:	xor    edi,edi
  415a4b:	xor    ebp,ebp
  415a4d:	xor    ebx,ebx
  415a4f:	jmp    rdx
  415a51:	movsx  r8,BYTE PTR [r9+0xe]
  415a56:	shl    r8,0x8
  415a5a:	movsx  rcx,BYTE PTR [r9+0xd]
  415a5f:	shl    rcx,0x10
  415a63:	or     rcx,r8
  415a66:	movsx  rsi,BYTE PTR [r9+0xc]
  415a6b:	shl    rsi,0x18
  415a6f:	or     rsi,rcx
  415a72:	movsx  rdi,BYTE PTR [r9+0xb]
  415a77:	shl    rdi,0x20
  415a7b:	or     rdi,rsi
  415a7e:	movsx  rbp,BYTE PTR [r9+0xa]
  415a83:	shl    rbp,0x28
  415a87:	or     rbp,rdi
  415a8a:	movsx  rbx,BYTE PTR [r9+0x9]
  415a8f:	shl    rbx,0x30
  415a93:	or     rbx,rbp
  415a96:	movzx  ecx,BYTE PTR [r14]
  415a9a:	shl    rcx,0x38
  415a9e:	or     rcx,rbx
  415aa1:	movabs rdx,0xff00000000000000
  415aab:	and    rcx,rdx
  415aae:	movabs rdx,0x3500000000000000
  415ab8:	cmp    rcx,rdx
  415abb:	jne    416857 <main@@Base+0x11f07>
  415ac1:	cmp    rax,0x2
  415ac5:	jl     416857 <main@@Base+0x11f07>
  415acb:	mov    rax,QWORD PTR [rsp+0x18]
  415ad0:	cmp    DWORD PTR [rax],0x0
  415ad3:	movzx  eax,BYTE PTR [r9+0x9]
  415ad8:	je     415ba7 <main@@Base+0x11257>
  415ade:	cmp    al,0x21
  415ae0:	jl     415aea <main@@Base+0x1119a>
  415ae2:	cmp    al,0x3a
  415ae4:	jne    416857 <main@@Base+0x11f07>
  415aea:	add    r9,0x9
  415aee:	mov    rax,QWORD PTR [rsp+0x18]
  415af3:	mov    DWORD PTR [rax],0x0
  415af9:	jmp    415bb3 <main@@Base+0x11263>
  415afe:	xor    ebp,ebp
  415b00:	mov    rcx,rbx
  415b03:	cmp    rbx,rcx
  415b06:	jne    415b6f <main@@Base+0x1121f>
  415b08:	jmp    415b3b <main@@Base+0x111eb>
  415b0a:	test   rbp,rbp
  415b0d:	jns    415b31 <main@@Base+0x111e1>
  415b0f:	mov    rdi,r15
  415b12:	mov    rsi,rcx
  415b15:	mov    rdx,r12
  415b18:	mov    ecx,0x7
  415b1d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415b22:	mov    rcx,rax
  415b25:	xor    ebp,ebp
  415b27:	cmp    rbx,rcx
  415b2a:	jne    415b6f <main@@Base+0x1121f>
  415b2c:	jmp    415b3b <main@@Base+0x111eb>
  415b2e:	neg    rbp
  415b31:	mov    QWORD PTR [rsp+0x20],rbp
  415b36:	cmp    rbx,rcx
  415b39:	jne    415b6f <main@@Base+0x1121f>
  415b3b:	mov    rdi,r15
  415b3e:	mov    rsi,rbx
  415b41:	mov    rdx,r12
  415b44:	lea    rcx,[rip+0x13a55]        # 4295a0 <filename@@Base+0x4d0>
  415b4b:	lea    r8,[rsp+0x20]
  415b50:	call   4132f0 <main@@Base+0xe9a0>
  415b55:	mov    rcx,rax
  415b58:	cmp    rax,rbx
  415b5b:	je     417624 <main@@Base+0x12cd4>
  415b61:	cmp    rcx,r12
  415b64:	je     417624 <main@@Base+0x12cd4>
  415b6a:	mov    rbp,QWORD PTR [rsp+0x20]
  415b6f:	test   rbp,rbp
  415b72:	jne    415b7f <main@@Base+0x1122f>
  415b74:	test   BYTE PTR [r15+0x10],0x2
  415b79:	je     41686d <main@@Base+0x11f1d>
  415b7f:	mov    rbx,rcx
  415b82:	mov    rdi,QWORD PTR [r15]
  415b85:	mov    edx,0x8
  415b8a:	mov    esi,0x5
  415b8f:	mov    ecx,0x8
  415b94:	call   41c310 <flatcc_builder_table_add@@Base>
  415b99:	test   rax,rax
  415b9c:	jne    416640 <main@@Base+0x11cf0>
  415ba2:	jmp    417631 <main@@Base+0x12ce1>
  415ba7:	cmp    al,0x22
  415ba9:	jne    416857 <main@@Base+0x11f07>
  415baf:	add    r9,0xa
  415bb3:	mov    rax,r12
  415bb6:	sub    rax,r9
  415bb9:	cmp    rax,0x2
  415bbd:	jl     415ceb <main@@Base+0x1139b>
  415bc3:	cmp    BYTE PTR [r9],0x20
  415bc7:	jg     415cfc <main@@Base+0x113ac>
  415bcd:	jne    415ceb <main@@Base+0x1139b>
  415bd3:	cmp    BYTE PTR [r9+0x1],0x20
  415bd8:	jle    415ceb <main@@Base+0x1139b>
  415bde:	inc    r9
  415be1:	cmp    r9,r12
  415be4:	jne    415d01 <main@@Base+0x113b1>
  415bea:	jmp    415d4f <main@@Base+0x113ff>
  415bef:	jne    415c04 <main@@Base+0x112b4>
  415bf1:	cmp    BYTE PTR [rsi+0x1],0x20
  415bf5:	jle    415c04 <main@@Base+0x112b4>
  415bf7:	mov    rbp,r9
  415bfa:	inc    rsi
  415bfd:	cmp    rsi,r12
  415c00:	jne    415c1a <main@@Base+0x112ca>
  415c02:	jmp    415c58 <main@@Base+0x11308>
  415c04:	mov    rbp,r9
  415c07:	mov    rdi,r15
  415c0a:	mov    rdx,r12
  415c0d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415c12:	mov    rsi,rax
  415c15:	cmp    rsi,r12
  415c18:	je     415c58 <main@@Base+0x11308>
  415c1a:	cmp    BYTE PTR [rsi],0x3a
  415c1d:	jne    415c58 <main@@Base+0x11308>
  415c1f:	lea    rax,[rsi+0x1]
  415c23:	mov    rcx,r12
  415c26:	sub    rcx,rax
  415c29:	cmp    rcx,0x2
  415c2d:	jl     415d67 <main@@Base+0x11417>
  415c33:	cmp    BYTE PTR [rax],0x20
  415c36:	jg     415d75 <main@@Base+0x11425>
  415c3c:	jne    415d67 <main@@Base+0x11417>
  415c42:	cmp    BYTE PTR [rsi+0x2],0x20
  415c46:	jle    415d67 <main@@Base+0x11417>
  415c4c:	add    rsi,0x2
  415c50:	mov    rax,rsi
  415c53:	jmp    415d75 <main@@Base+0x11425>
  415c58:	mov    rdi,r15
  415c5b:	mov    rdx,r12
  415c5e:	mov    ecx,0x4
  415c63:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415c68:	jmp    415d75 <main@@Base+0x11425>
  415c6d:	jne    415c82 <main@@Base+0x11332>
  415c6f:	cmp    BYTE PTR [rsi+0x1],0x20
  415c73:	jle    415c82 <main@@Base+0x11332>
  415c75:	mov    rbp,r9
  415c78:	inc    rsi
  415c7b:	cmp    rsi,r12
  415c7e:	jne    415c98 <main@@Base+0x11348>
  415c80:	jmp    415cd6 <main@@Base+0x11386>
  415c82:	mov    rbp,r9
  415c85:	mov    rdi,r15
  415c88:	mov    rdx,r12
  415c8b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415c90:	mov    rsi,rax
  415c93:	cmp    rsi,r12
  415c96:	je     415cd6 <main@@Base+0x11386>
  415c98:	cmp    BYTE PTR [rsi],0x3a
  415c9b:	jne    415cd6 <main@@Base+0x11386>
  415c9d:	lea    rax,[rsi+0x1]
  415ca1:	mov    rcx,r12
  415ca4:	sub    rcx,rax
  415ca7:	cmp    rcx,0x2
  415cab:	jl     415f13 <main@@Base+0x115c3>
  415cb1:	cmp    BYTE PTR [rax],0x20
  415cb4:	jg     415f21 <main@@Base+0x115d1>
  415cba:	jne    415f13 <main@@Base+0x115c3>
  415cc0:	cmp    BYTE PTR [rsi+0x2],0x20
  415cc4:	jle    415f13 <main@@Base+0x115c3>
  415cca:	add    rsi,0x2
  415cce:	mov    rax,rsi
  415cd1:	jmp    415f21 <main@@Base+0x115d1>
  415cd6:	mov    rdi,r15
  415cd9:	mov    rdx,r12
  415cdc:	mov    ecx,0x4
  415ce1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415ce6:	jmp    415f21 <main@@Base+0x115d1>
  415ceb:	mov    rdi,r15
  415cee:	mov    rsi,r9
  415cf1:	mov    rdx,r12
  415cf4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415cf9:	mov    r9,rax
  415cfc:	cmp    r9,r12
  415cff:	je     415d4f <main@@Base+0x113ff>
  415d01:	cmp    BYTE PTR [r9],0x3a
  415d05:	jne    415d4f <main@@Base+0x113ff>
  415d07:	lea    rbp,[r9+0x1]
  415d0b:	mov    rax,r12
  415d0e:	sub    rax,rbp
  415d11:	cmp    rax,0x2
  415d15:	jl     416212 <main@@Base+0x118c2>
  415d1b:	cmp    BYTE PTR [rbp+0x0],0x20
  415d1f:	jg     415d3c <main@@Base+0x113ec>
  415d21:	jne    416212 <main@@Base+0x118c2>
  415d27:	mov    rcx,r9
  415d2a:	cmp    BYTE PTR [r9+0x2],0x20
  415d2f:	jle    416212 <main@@Base+0x118c2>
  415d35:	mov    rbp,rcx
  415d38:	add    rbp,0x2
  415d3c:	mov    r15,QWORD PTR [rsp+0x8]
  415d41:	cmp    r14,rbp
  415d44:	jne    416231 <main@@Base+0x118e1>
  415d4a:	jmp    416857 <main@@Base+0x11f07>
  415d4f:	mov    rdi,r15
  415d52:	mov    rsi,r9
  415d55:	mov    rdx,r12
  415d58:	mov    ecx,0x4
  415d5d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415d62:	jmp    416225 <main@@Base+0x118d5>
  415d67:	mov    rdi,r15
  415d6a:	mov    rsi,rax
  415d6d:	mov    rdx,r12
  415d70:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415d75:	movabs rsi,0x6262626200000000
  415d7f:	mov    r9,rbp
  415d82:	cmp    r9,rax
  415d85:	je     415db2 <main@@Base+0x11462>
  415d87:	mov    rdi,r15
  415d8a:	mov    rsi,rax
  415d8d:	mov    rdx,r12
  415d90:	lea    rcx,[rsp+0x34]
  415d95:	call   420390 <flatcc_json_parser_build_string@@Base>
  415d9a:	mov    rbx,rax
  415d9d:	cmp    DWORD PTR [rsp+0x34],0x0
  415da2:	je     417631 <main@@Base+0x12ce1>
  415da8:	mov    rdi,QWORD PTR [r15]
  415dab:	xor    esi,esi
  415dad:	jmp    415f52 <main@@Base+0x11602>
  415db2:	lea    rax,[rsi+0x31323334]
  415db9:	cmp    rbx,rax
  415dbc:	jne    415dff <main@@Base+0x114af>
  415dbe:	mov    rbx,r9
  415dc1:	cmp    r14,0x9
  415dc5:	mov    r14,QWORD PTR [rsp+0x10]
  415dca:	jl     4162d2 <main@@Base+0x11982>
  415dd0:	mov    rax,QWORD PTR [rsp+0x18]
  415dd5:	cmp    DWORD PTR [rax],0x0
  415dd8:	movzx  eax,BYTE PTR [r9+0x8]
  415ddd:	je     415e46 <main@@Base+0x114f6>
  415ddf:	cmp    al,0x21
  415de1:	jl     415dee <main@@Base+0x1149e>
  415de3:	mov    rbx,r9
  415de6:	cmp    al,0x3a
  415de8:	jne    4162d2 <main@@Base+0x11982>
  415dee:	lea    rsi,[r9+0x8]
  415df2:	mov    rax,QWORD PTR [rsp+0x18]
  415df7:	mov    DWORD PTR [rax],0x0
  415dfd:	jmp    415e55 <main@@Base+0x11505>
  415dff:	cmp    r13,rsi
  415e02:	jne    415fbb <main@@Base+0x1166b>
  415e08:	mov    rax,r9
  415e0b:	cmp    r14,0x5
  415e0f:	jl     416773 <main@@Base+0x11e23>
  415e15:	mov    rax,QWORD PTR [rsp+0x18]
  415e1a:	cmp    DWORD PTR [rax],0x0
  415e1d:	movzx  ecx,BYTE PTR [r9+0x4]
  415e22:	je     415e7f <main@@Base+0x1152f>
  415e24:	cmp    cl,0x21
  415e27:	jl     415e35 <main@@Base+0x114e5>
  415e29:	mov    rax,r9
  415e2c:	cmp    cl,0x3a
  415e2f:	jne    416773 <main@@Base+0x11e23>
  415e35:	lea    rsi,[r9+0x4]
  415e39:	mov    rax,QWORD PTR [rsp+0x18]
  415e3e:	mov    DWORD PTR [rax],0x0
  415e44:	jmp    415e8f <main@@Base+0x1153f>
  415e46:	mov    rbx,r9
  415e49:	cmp    al,0x22
  415e4b:	jne    4162d2 <main@@Base+0x11982>
  415e51:	lea    rsi,[r9+0x9]
  415e55:	mov    rax,r12
  415e58:	sub    rax,rsi
  415e5b:	cmp    rax,0x2
  415e5f:	jl     416095 <main@@Base+0x11745>
  415e65:	cmp    BYTE PTR [rsi],0x20
  415e68:	jle    416080 <main@@Base+0x11730>
  415e6e:	mov    rbp,r9
  415e71:	cmp    rsi,r12
  415e74:	jne    4160ab <main@@Base+0x1175b>
  415e7a:	jmp    4160dc <main@@Base+0x1178c>
  415e7f:	mov    rax,r9
  415e82:	cmp    cl,0x22
  415e85:	jne    416773 <main@@Base+0x11e23>
  415e8b:	lea    rsi,[r9+0x5]
  415e8f:	mov    rbx,r9
  415e92:	mov    rax,r12
  415e95:	sub    rax,rsi
  415e98:	cmp    rax,0x2
  415e9c:	jl     415eba <main@@Base+0x1156a>
  415e9e:	cmp    BYTE PTR [rsi],0x20
  415ea1:	jg     415ec8 <main@@Base+0x11578>
  415ea3:	mov    r15,QWORD PTR [rsp+0x8]
  415ea8:	jne    415eba <main@@Base+0x1156a>
  415eaa:	cmp    BYTE PTR [rsi+0x1],0x20
  415eae:	jle    415eba <main@@Base+0x1156a>
  415eb0:	inc    rsi
  415eb3:	cmp    rsi,r12
  415eb6:	jne    415ecd <main@@Base+0x1157d>
  415eb8:	jmp    415ef9 <main@@Base+0x115a9>
  415eba:	mov    rdi,r15
  415ebd:	mov    rdx,r12
  415ec0:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415ec5:	mov    rsi,rax
  415ec8:	cmp    rsi,r12
  415ecb:	je     415ef9 <main@@Base+0x115a9>
  415ecd:	cmp    BYTE PTR [rsi],0x3a
  415ed0:	jne    415ef9 <main@@Base+0x115a9>
  415ed2:	lea    rax,[rsi+0x1]
  415ed6:	mov    rcx,r12
  415ed9:	sub    rcx,rax
  415edc:	cmp    rcx,0x2
  415ee0:	jl     41675d <main@@Base+0x11e0d>
  415ee6:	cmp    BYTE PTR [rax],0x20
  415ee9:	jle    416747 <main@@Base+0x11df7>
  415eef:	mov    r15,QWORD PTR [rsp+0x8]
  415ef4:	jmp    416770 <main@@Base+0x11e20>
  415ef9:	mov    r15,QWORD PTR [rsp+0x8]
  415efe:	mov    rdi,r15
  415f01:	mov    rdx,r12
  415f04:	mov    ecx,0x4
  415f09:	call   41e300 <flatcc_json_parser_set_error@@Base>
  415f0e:	jmp    416770 <main@@Base+0x11e20>
  415f13:	mov    rdi,r15
  415f16:	mov    rsi,rax
  415f19:	mov    rdx,r12
  415f1c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  415f21:	mov    r9,rbp
  415f24:	cmp    r9,rax
  415f27:	je     415f70 <main@@Base+0x11620>
  415f29:	mov    rdi,r15
  415f2c:	mov    rsi,rax
  415f2f:	mov    rdx,r12
  415f32:	lea    rcx,[rsp+0x34]
  415f37:	call   420390 <flatcc_json_parser_build_string@@Base>
  415f3c:	mov    rbx,rax
  415f3f:	cmp    DWORD PTR [rsp+0x34],0x0
  415f44:	je     417631 <main@@Base+0x12ce1>
  415f4a:	mov    rdi,QWORD PTR [r15]
  415f4d:	mov    esi,0x4
  415f52:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  415f57:	test   rax,rax
  415f5a:	mov    r14,QWORD PTR [rsp+0x10]
  415f5f:	je     417631 <main@@Base+0x12ce1>
  415f65:	mov    ecx,DWORD PTR [rsp+0x34]
  415f69:	mov    DWORD PTR [rax],ecx
  415f6b:	jmp    416643 <main@@Base+0x11cf3>
  415f70:	movabs rax,0x6464646431323334
  415f7a:	cmp    rbx,rax
  415f7d:	jne    415fbb <main@@Base+0x1166b>
  415f7f:	mov    rbx,r9
  415f82:	cmp    r14,0x9
  415f86:	jl     416411 <main@@Base+0x11ac1>
  415f8c:	mov    rax,QWORD PTR [rsp+0x18]
  415f91:	cmp    DWORD PTR [rax],0x0
  415f94:	movzx  eax,BYTE PTR [r9+0x8]
  415f99:	je     415fc6 <main@@Base+0x11676>
  415f9b:	cmp    al,0x21
  415f9d:	jl     415faa <main@@Base+0x1165a>
  415f9f:	mov    rbx,r9
  415fa2:	cmp    al,0x3a
  415fa4:	jne    416411 <main@@Base+0x11ac1>
  415faa:	lea    rsi,[r9+0x8]
  415fae:	mov    rax,QWORD PTR [rsp+0x18]
  415fb3:	mov    DWORD PTR [rax],0x0
  415fb9:	jmp    415fd5 <main@@Base+0x11685>
  415fbb:	mov    rdi,r15
  415fbe:	mov    rsi,r9
  415fc1:	jmp    41685d <main@@Base+0x11f0d>
  415fc6:	mov    rbx,r9
  415fc9:	cmp    al,0x22
  415fcb:	jne    416411 <main@@Base+0x11ac1>
  415fd1:	lea    rsi,[r9+0x9]
  415fd5:	mov    rax,r12
  415fd8:	sub    rax,rsi
  415fdb:	cmp    rax,0x2
  415fdf:	jl     416106 <main@@Base+0x117b6>
  415fe5:	cmp    BYTE PTR [rsi],0x20
  415fe8:	jle    4160f1 <main@@Base+0x117a1>
  415fee:	mov    rbp,r9
  415ff1:	cmp    rsi,r12
  415ff4:	jne    41611c <main@@Base+0x117cc>
  415ffa:	jmp    416148 <main@@Base+0x117f8>
  415fff:	mov    rdi,r15
  416002:	mov    rsi,rbp
  416005:	mov    rdx,r12
  416008:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41600d:	mov    rbp,rax
  416010:	cmp    r14,rbp
  416013:	je     416857 <main@@Base+0x11f07>
  416019:	mov    QWORD PTR [rsp+0x28],0x0
  416022:	mov    DWORD PTR [rsp+0x20],0x0
  41602a:	mov    DWORD PTR [rsp+0x4],0x0
  416032:	xor    ebx,ebx
  416034:	cmp    rbp,r12
  416037:	je     416078 <main@@Base+0x11728>
  416039:	mov    rdi,r15
  41603c:	mov    rsi,rbp
  41603f:	mov    rdx,r12
  416042:	lea    rcx,[rsp+0x20]
  416047:	lea    r8,[rsp+0x28]
  41604c:	call   41fec0 <flatcc_json_parser_integer@@Base>
  416051:	cmp    rax,rbp
  416054:	je     41615d <main@@Base+0x1180d>
  41605a:	cmp    DWORD PTR [rsp+0x20],0x0
  41605f:	je     416162 <main@@Base+0x11812>
  416065:	mov    rdi,r15
  416068:	mov    rsi,rax
  41606b:	mov    rdx,r12
  41606e:	mov    ecx,0x8
  416073:	jmp    416187 <main@@Base+0x11837>
  416078:	mov    rcx,r12
  41607b:	jmp    41618f <main@@Base+0x1183f>
  416080:	jne    416095 <main@@Base+0x11745>
  416082:	cmp    BYTE PTR [rsi+0x1],0x20
  416086:	jle    416095 <main@@Base+0x11745>
  416088:	mov    rbp,r9
  41608b:	inc    rsi
  41608e:	cmp    rsi,r12
  416091:	jne    4160ab <main@@Base+0x1175b>
  416093:	jmp    4160dc <main@@Base+0x1178c>
  416095:	mov    rbp,r9
  416098:	mov    rdi,r15
  41609b:	mov    rdx,r12
  41609e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4160a3:	mov    rsi,rax
  4160a6:	cmp    rsi,r12
  4160a9:	je     4160dc <main@@Base+0x1178c>
  4160ab:	cmp    BYTE PTR [rsi],0x3a
  4160ae:	jne    4160dc <main@@Base+0x1178c>
  4160b0:	lea    rbx,[rsi+0x1]
  4160b4:	mov    rax,r12
  4160b7:	sub    rax,rbx
  4160ba:	cmp    rax,0x2
  4160be:	jl     4162be <main@@Base+0x1196e>
  4160c4:	cmp    BYTE PTR [rbx],0x20
  4160c7:	jle    4162a3 <main@@Base+0x11953>
  4160cd:	mov    r15,QWORD PTR [rsp+0x8]
  4160d2:	mov    r14,QWORD PTR [rsp+0x10]
  4160d7:	jmp    4162cf <main@@Base+0x1197f>
  4160dc:	mov    rdi,r15
  4160df:	mov    rdx,r12
  4160e2:	mov    ecx,0x4
  4160e7:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4160ec:	jmp    4162cc <main@@Base+0x1197c>
  4160f1:	jne    416106 <main@@Base+0x117b6>
  4160f3:	cmp    BYTE PTR [rsi+0x1],0x20
  4160f7:	jle    416106 <main@@Base+0x117b6>
  4160f9:	mov    rbp,r9
  4160fc:	inc    rsi
  4160ff:	cmp    rsi,r12
  416102:	jne    41611c <main@@Base+0x117cc>
  416104:	jmp    416148 <main@@Base+0x117f8>
  416106:	mov    rbp,r9
  416109:	mov    rdi,r15
  41610c:	mov    rdx,r12
  41610f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416114:	mov    rsi,rax
  416117:	cmp    rsi,r12
  41611a:	je     416148 <main@@Base+0x117f8>
  41611c:	cmp    BYTE PTR [rsi],0x3a
  41611f:	jne    416148 <main@@Base+0x117f8>
  416121:	lea    rbx,[rsi+0x1]
  416125:	mov    rax,r12
  416128:	sub    rax,rbx
  41612b:	cmp    rax,0x2
  41612f:	jl     4163fd <main@@Base+0x11aad>
  416135:	cmp    BYTE PTR [rbx],0x20
  416138:	jle    4163e7 <main@@Base+0x11a97>
  41613e:	mov    r15,QWORD PTR [rsp+0x8]
  416143:	jmp    41640e <main@@Base+0x11abe>
  416148:	mov    rdi,r15
  41614b:	mov    rdx,r12
  41614e:	mov    ecx,0x4
  416153:	call   41e300 <flatcc_json_parser_set_error@@Base>
  416158:	jmp    41640b <main@@Base+0x11abb>
  41615d:	mov    rcx,rbp
  416160:	jmp    41618f <main@@Base+0x1183f>
  416162:	mov    rsi,rax
  416165:	mov    rax,QWORD PTR [rsp+0x28]
  41616a:	mov    rcx,rax
  41616d:	shr    rcx,0x20
  416171:	je     4166fa <main@@Base+0x11daa>
  416177:	mov    r15,QWORD PTR [rsp+0x8]
  41617c:	mov    rdi,r15
  41617f:	mov    rdx,r12
  416182:	mov    ecx,0x7
  416187:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41618c:	mov    rcx,rax
  41618f:	mov    r14,QWORD PTR [rsp+0x10]
  416194:	cmp    rbp,rcx
  416197:	jne    4161d6 <main@@Base+0x11886>
  416199:	mov    rdi,r15
  41619c:	mov    rsi,rbp
  41619f:	mov    rdx,r12
  4161a2:	lea    rcx,[rip+0x133b7]        # 429560 <filename@@Base+0x490>
  4161a9:	lea    r8,[rsp+0x4]
  4161ae:	call   413500 <main@@Base+0xebb0>
  4161b3:	mov    rcx,rax
  4161b6:	cmp    rax,rbp
  4161b9:	je     41764c <main@@Base+0x12cfc>
  4161bf:	cmp    rcx,r12
  4161c2:	je     41764c <main@@Base+0x12cfc>
  4161c8:	mov    ebx,DWORD PTR [rsp+0x4]
  4161cc:	mov    r15,QWORD PTR [rsp+0x8]
  4161d1:	mov    r14,QWORD PTR [rsp+0x10]
  4161d6:	test   ebx,ebx
  4161d8:	jne    4161e5 <main@@Base+0x11895>
  4161da:	test   BYTE PTR [r15+0x10],0x2
  4161df:	je     41686d <main@@Base+0x11f1d>
  4161e5:	mov    rbp,rcx
  4161e8:	mov    rdi,QWORD PTR [r15]
  4161eb:	mov    edx,0x4
  4161f0:	mov    esi,0x1
  4161f5:	mov    ecx,0x4
  4161fa:	call   41c310 <flatcc_builder_table_add@@Base>
  4161ff:	test   rax,rax
  416202:	je     41764f <main@@Base+0x12cff>
  416208:	mov    DWORD PTR [rax],ebx
  41620a:	mov    rcx,rbp
  41620d:	jmp    41686d <main@@Base+0x11f1d>
  416212:	mov    r15,QWORD PTR [rsp+0x8]
  416217:	mov    rdi,r15
  41621a:	mov    rsi,rbp
  41621d:	mov    rdx,r12
  416220:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416225:	mov    rbp,rax
  416228:	cmp    r14,rbp
  41622b:	je     416857 <main@@Base+0x11f07>
  416231:	mov    QWORD PTR [rsp+0x28],0x0
  41623a:	mov    DWORD PTR [rsp+0x20],0x0
  416242:	mov    DWORD PTR [rsp+0x4],0x0
  41624a:	xor    r14d,r14d
  41624d:	cmp    rbp,r12
  416250:	je     41629b <main@@Base+0x1194b>
  416252:	mov    rdi,r15
  416255:	mov    rsi,rbp
  416258:	mov    rdx,r12
  41625b:	lea    rcx,[rsp+0x20]
  416260:	lea    r8,[rsp+0x28]
  416265:	call   41fec0 <flatcc_json_parser_integer@@Base>
  41626a:	cmp    rax,rbp
  41626d:	je     4166ed <main@@Base+0x11d9d>
  416273:	mov    rsi,rax
  416276:	cmp    DWORD PTR [rsp+0x20],0x0
  41627b:	je     41671b <main@@Base+0x11dcb>
  416281:	mov    r15,QWORD PTR [rsp+0x8]
  416286:	mov    rdi,r15
  416289:	mov    rdx,r12
  41628c:	mov    ecx,0x8
  416291:	call   41e300 <flatcc_json_parser_set_error@@Base>
  416296:	jmp    41693c <main@@Base+0x11fec>
  41629b:	mov    rax,r12
  41629e:	jmp    41693c <main@@Base+0x11fec>
  4162a3:	mov    r15,QWORD PTR [rsp+0x8]
  4162a8:	mov    r14,QWORD PTR [rsp+0x10]
  4162ad:	jne    4162be <main@@Base+0x1196e>
  4162af:	cmp    BYTE PTR [rsi+0x2],0x20
  4162b3:	jle    4162be <main@@Base+0x1196e>
  4162b5:	add    rsi,0x2
  4162b9:	mov    rbx,rsi
  4162bc:	jmp    4162cf <main@@Base+0x1197f>
  4162be:	mov    rdi,r15
  4162c1:	mov    rsi,rbx
  4162c4:	mov    rdx,r12
  4162c7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4162cc:	mov    rbx,rax
  4162cf:	mov    r9,rbp
  4162d2:	cmp    r9,rbx
  4162d5:	je     4167b9 <main@@Base+0x11e69>
  4162db:	mov    QWORD PTR [rsp+0x28],0x0
  4162e4:	mov    DWORD PTR [rsp+0x4],0x0
  4162ec:	mov    QWORD PTR [rsp+0x20],0x0
  4162f5:	cmp    rbx,r12
  4162f8:	je     416345 <main@@Base+0x119f5>
  4162fa:	mov    rdi,r15
  4162fd:	mov    rsi,rbx
  416300:	mov    rdx,r12
  416303:	lea    rcx,[rsp+0x4]
  416308:	lea    r8,[rsp+0x28]
  41630d:	call   41fec0 <flatcc_json_parser_integer@@Base>
  416312:	cmp    rax,rbx
  416315:	je     416351 <main@@Base+0x11a01>
  416317:	mov    rcx,rax
  41631a:	mov    rbp,QWORD PTR [rsp+0x28]
  41631f:	cmp    DWORD PTR [rsp+0x4],0x0
  416324:	je     41635d <main@@Base+0x11a0d>
  416326:	movabs rax,0x8000000000000000
  416330:	cmp    rbp,rax
  416333:	jbe    416381 <main@@Base+0x11a31>
  416335:	mov    rdi,r15
  416338:	mov    rsi,rcx
  41633b:	mov    rdx,r12
  41633e:	mov    ecx,0x8
  416343:	jmp    416370 <main@@Base+0x11a20>
  416345:	xor    ebp,ebp
  416347:	mov    rcx,r12
  41634a:	cmp    rbx,rcx
  41634d:	jne    4163c2 <main@@Base+0x11a72>
  41634f:	jmp    41638e <main@@Base+0x11a3e>
  416351:	xor    ebp,ebp
  416353:	mov    rcx,rbx
  416356:	cmp    rbx,rcx
  416359:	jne    4163c2 <main@@Base+0x11a72>
  41635b:	jmp    41638e <main@@Base+0x11a3e>
  41635d:	test   rbp,rbp
  416360:	jns    416384 <main@@Base+0x11a34>
  416362:	mov    rdi,r15
  416365:	mov    rsi,rcx
  416368:	mov    rdx,r12
  41636b:	mov    ecx,0x7
  416370:	call   41e300 <flatcc_json_parser_set_error@@Base>
  416375:	mov    rcx,rax
  416378:	xor    ebp,ebp
  41637a:	cmp    rbx,rcx
  41637d:	jne    4163c2 <main@@Base+0x11a72>
  41637f:	jmp    41638e <main@@Base+0x11a3e>
  416381:	neg    rbp
  416384:	mov    QWORD PTR [rsp+0x20],rbp
  416389:	cmp    rbx,rcx
  41638c:	jne    4163c2 <main@@Base+0x11a72>
  41638e:	mov    rdi,r15
  416391:	mov    rsi,rbx
  416394:	mov    rdx,r12
  416397:	lea    rcx,[rip+0x131e2]        # 429580 <filename@@Base+0x4b0>
  41639e:	lea    r8,[rsp+0x20]
  4163a3:	call   4132f0 <main@@Base+0xe9a0>
  4163a8:	mov    rcx,rax
  4163ab:	cmp    rax,rbx
  4163ae:	je     417629 <main@@Base+0x12cd9>
  4163b4:	cmp    rcx,r12
  4163b7:	je     417629 <main@@Base+0x12cd9>
  4163bd:	mov    rbp,QWORD PTR [rsp+0x20]
  4163c2:	test   rbp,rbp
  4163c5:	jne    4163d2 <main@@Base+0x11a82>
  4163c7:	test   BYTE PTR [r15+0x10],0x2
  4163cc:	je     41686d <main@@Base+0x11f1d>
  4163d2:	mov    rbx,rcx
  4163d5:	mov    rdi,QWORD PTR [r15]
  4163d8:	mov    edx,0x8
  4163dd:	mov    esi,0x3
  4163e2:	jmp    41662d <main@@Base+0x11cdd>
  4163e7:	mov    r15,QWORD PTR [rsp+0x8]
  4163ec:	jne    4163fd <main@@Base+0x11aad>
  4163ee:	cmp    BYTE PTR [rsi+0x2],0x20
  4163f2:	jle    4163fd <main@@Base+0x11aad>
  4163f4:	add    rsi,0x2
  4163f8:	mov    rbx,rsi
  4163fb:	jmp    41640e <main@@Base+0x11abe>
  4163fd:	mov    rdi,r15
  416400:	mov    rsi,rbx
  416403:	mov    rdx,r12
  416406:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41640b:	mov    rbx,rax
  41640e:	mov    r9,rbp
  416411:	cmp    r9,rbx
  416414:	mov    r14,QWORD PTR [rsp+0x10]
  416419:	je     416494 <main@@Base+0x11b44>
  41641b:	mov    QWORD PTR [rsp+0x28],0x0
  416424:	mov    DWORD PTR [rsp+0x4],0x0
  41642c:	mov    QWORD PTR [rsp+0x20],0x0
  416435:	cmp    rbx,r12
  416438:	je     4164ae <main@@Base+0x11b5e>
  41643a:	mov    rdi,r15
  41643d:	mov    rsi,rbx
  416440:	mov    rdx,r12
  416443:	lea    rcx,[rsp+0x4]
  416448:	lea    r8,[rsp+0x28]
  41644d:	call   41fec0 <flatcc_json_parser_integer@@Base>
  416452:	cmp    rax,rbx
  416455:	je     41659c <main@@Base+0x11c4c>
  41645b:	mov    rcx,rax
  41645e:	mov    rbp,QWORD PTR [rsp+0x28]
  416463:	cmp    DWORD PTR [rsp+0x4],0x0
  416468:	je     4165a8 <main@@Base+0x11c58>
  41646e:	movabs rax,0x8000000000000000
  416478:	cmp    rbp,rax
  41647b:	jbe    4165cc <main@@Base+0x11c7c>
  416481:	mov    rdi,r15
  416484:	mov    rsi,rcx
  416487:	mov    rdx,r12
  41648a:	mov    ecx,0x8
  41648f:	jmp    4165bb <main@@Base+0x11c6b>
  416494:	lea    r14,[r9+0x8]
  416498:	mov    rax,r12
  41649b:	sub    rax,r14
  41649e:	cmp    rax,0x8
  4164a2:	jb     4164c1 <main@@Base+0x11b71>
  4164a4:	movbe  rcx,QWORD PTR [r14]
  4164a9:	jmp    41653f <main@@Base+0x11bef>
  4164ae:	xor    ebp,ebp
  4164b0:	mov    rcx,r12
  4164b3:	cmp    rbx,rcx
  4164b6:	jne    41660d <main@@Base+0x11cbd>
  4164bc:	jmp    4165d9 <main@@Base+0x11c89>
  4164c1:	lea    rcx,[rax-0x1]
  4164c5:	cmp    rcx,0x6
  4164c9:	ja     416857 <main@@Base+0x11f07>
  4164cf:	lea    rdx,[rip+0xc2f2]        # 4227c8 <_IO_stdin_used@@Base+0x7c8>
  4164d6:	mov    rsi,rdx
  4164d9:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4164dd:	add    rdx,rsi
  4164e0:	xor    r8d,r8d
  4164e3:	xor    ecx,ecx
  4164e5:	xor    esi,esi
  4164e7:	xor    edi,edi
  4164e9:	xor    ebp,ebp
  4164eb:	xor    ebx,ebx
  4164ed:	jmp    rdx
  4164ef:	movsx  r8,BYTE PTR [r9+0xe]
  4164f4:	shl    r8,0x8
  4164f8:	movsx  rcx,BYTE PTR [r9+0xd]
  4164fd:	shl    rcx,0x10
  416501:	or     rcx,r8
  416504:	movsx  rsi,BYTE PTR [r9+0xc]
  416509:	shl    rsi,0x18
  41650d:	or     rsi,rcx
  416510:	movsx  rdi,BYTE PTR [r9+0xb]
  416515:	shl    rdi,0x20
  416519:	or     rdi,rsi
  41651c:	movsx  rbp,BYTE PTR [r9+0xa]
  416521:	shl    rbp,0x28
  416525:	or     rbp,rdi
  416528:	movsx  rbx,BYTE PTR [r9+0x9]
  41652d:	shl    rbx,0x30
  416531:	or     rbx,rbp
  416534:	movzx  ecx,BYTE PTR [r14]
  416538:	shl    rcx,0x38
  41653c:	or     rcx,rbx
  41653f:	movabs rdx,0xff00000000000000
  416549:	and    rcx,rdx
  41654c:	movabs rdx,0x3500000000000000
  416556:	cmp    rcx,rdx
  416559:	jne    416857 <main@@Base+0x11f07>
  41655f:	cmp    rax,0x2
  416563:	jl     416857 <main@@Base+0x11f07>
  416569:	mov    rax,QWORD PTR [rsp+0x18]
  41656e:	cmp    DWORD PTR [rax],0x0
  416571:	movzx  eax,BYTE PTR [r9+0x9]
  416576:	je     41664b <main@@Base+0x11cfb>
  41657c:	cmp    al,0x21
  41657e:	jl     416588 <main@@Base+0x11c38>
  416580:	cmp    al,0x3a
  416582:	jne    416857 <main@@Base+0x11f07>
  416588:	add    r9,0x9
  41658c:	mov    rax,QWORD PTR [rsp+0x18]
  416591:	mov    DWORD PTR [rax],0x0
  416597:	jmp    416657 <main@@Base+0x11d07>
  41659c:	xor    ebp,ebp
  41659e:	mov    rcx,rbx
  4165a1:	cmp    rbx,rcx
  4165a4:	jne    41660d <main@@Base+0x11cbd>
  4165a6:	jmp    4165d9 <main@@Base+0x11c89>
  4165a8:	test   rbp,rbp
  4165ab:	jns    4165cf <main@@Base+0x11c7f>
  4165ad:	mov    rdi,r15
  4165b0:	mov    rsi,rcx
  4165b3:	mov    rdx,r12
  4165b6:	mov    ecx,0x7
  4165bb:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4165c0:	mov    rcx,rax
  4165c3:	xor    ebp,ebp
  4165c5:	cmp    rbx,rcx
  4165c8:	jne    41660d <main@@Base+0x11cbd>
  4165ca:	jmp    4165d9 <main@@Base+0x11c89>
  4165cc:	neg    rbp
  4165cf:	mov    QWORD PTR [rsp+0x20],rbp
  4165d4:	cmp    rbx,rcx
  4165d7:	jne    41660d <main@@Base+0x11cbd>
  4165d9:	mov    rdi,r15
  4165dc:	mov    rsi,rbx
  4165df:	mov    rdx,r12
  4165e2:	lea    rcx,[rip+0x12ff7]        # 4295e0 <filename@@Base+0x510>
  4165e9:	lea    r8,[rsp+0x20]
  4165ee:	call   4132f0 <main@@Base+0xe9a0>
  4165f3:	mov    rcx,rax
  4165f6:	cmp    rax,rbx
  4165f9:	je     417629 <main@@Base+0x12cd9>
  4165ff:	cmp    rcx,r12
  416602:	je     417629 <main@@Base+0x12cd9>
  416608:	mov    rbp,QWORD PTR [rsp+0x20]
  41660d:	test   rbp,rbp
  416610:	jne    41661d <main@@Base+0x11ccd>
  416612:	test   BYTE PTR [r15+0x10],0x2
  416617:	je     41686d <main@@Base+0x11f1d>
  41661d:	mov    rbx,rcx
  416620:	mov    rdi,QWORD PTR [r15]
  416623:	mov    edx,0x8
  416628:	mov    esi,0x7
  41662d:	mov    ecx,0x8
  416632:	call   41c310 <flatcc_builder_table_add@@Base>
  416637:	test   rax,rax
  41663a:	je     41762c <main@@Base+0x12cdc>
  416640:	mov    QWORD PTR [rax],rbp
  416643:	mov    rcx,rbx
  416646:	jmp    41686d <main@@Base+0x11f1d>
  41664b:	cmp    al,0x22
  41664d:	jne    416857 <main@@Base+0x11f07>
  416653:	add    r9,0xa
  416657:	mov    rax,r12
  41665a:	mov    rsi,r9
  41665d:	sub    rax,r9
  416660:	cmp    rax,0x2
  416664:	jl     41667e <main@@Base+0x11d2e>
  416666:	cmp    BYTE PTR [rsi],0x20
  416669:	jg     41668e <main@@Base+0x11d3e>
  41666b:	mov    rsi,r9
  41666e:	jne    41667e <main@@Base+0x11d2e>
  416670:	cmp    BYTE PTR [rsi+0x1],0x20
  416674:	jle    41667e <main@@Base+0x11d2e>
  416676:	inc    rsi
  416679:	mov    r9,rsi
  41667c:	jmp    41668e <main@@Base+0x11d3e>
  41667e:	mov    rdi,QWORD PTR [rsp+0x8]
  416683:	mov    rdx,r12
  416686:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41668b:	mov    r9,rax
  41668e:	mov    rsi,r9
  416691:	cmp    r9,r12
  416694:	je     4166d6 <main@@Base+0x11d86>
  416696:	cmp    BYTE PTR [rsi],0x3a
  416699:	jne    4166d6 <main@@Base+0x11d86>
  41669b:	lea    rbp,[rsi+0x1]
  41669f:	mov    rax,r12
  4166a2:	sub    rax,rbp
  4166a5:	cmp    rax,0x2
  4166a9:	jl     4167cf <main@@Base+0x11e7f>
  4166af:	cmp    BYTE PTR [rbp+0x0],0x20
  4166b3:	jg     4167e2 <main@@Base+0x11e92>
  4166b9:	jne    4167cf <main@@Base+0x11e7f>
  4166bf:	cmp    BYTE PTR [r9+0x2],0x20
  4166c4:	jle    4167cf <main@@Base+0x11e7f>
  4166ca:	add    r9,0x2
  4166ce:	mov    rbp,r9
  4166d1:	jmp    4167e2 <main@@Base+0x11e92>
  4166d6:	mov    rdi,QWORD PTR [rsp+0x8]
  4166db:	mov    rdx,r12
  4166de:	mov    ecx,0x4
  4166e3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4166e8:	jmp    4167df <main@@Base+0x11e8f>
  4166ed:	mov    rax,rbp
  4166f0:	mov    r15,QWORD PTR [rsp+0x8]
  4166f5:	jmp    41693c <main@@Base+0x11fec>
  4166fa:	mov    DWORD PTR [rsp+0x4],eax
  4166fe:	mov    ebx,eax
  416700:	mov    r15,QWORD PTR [rsp+0x8]
  416705:	mov    r14,QWORD PTR [rsp+0x10]
  41670a:	mov    rcx,rsi
  41670d:	cmp    rbp,rcx
  416710:	jne    4161d6 <main@@Base+0x11886>
  416716:	jmp    416199 <main@@Base+0x11849>
  41671b:	mov    rax,QWORD PTR [rsp+0x28]
  416720:	mov    rcx,rax
  416723:	shr    rcx,0x20
  416727:	je     41692d <main@@Base+0x11fdd>
  41672d:	mov    r15,QWORD PTR [rsp+0x8]
  416732:	mov    rdi,r15
  416735:	mov    rdx,r12
  416738:	mov    ecx,0x7
  41673d:	call   41e300 <flatcc_json_parser_set_error@@Base>
  416742:	jmp    41693c <main@@Base+0x11fec>
  416747:	jne    41675d <main@@Base+0x11e0d>
  416749:	cmp    BYTE PTR [rsi+0x2],0x20
  41674d:	jle    41675d <main@@Base+0x11e0d>
  41674f:	add    rsi,0x2
  416753:	mov    rax,rsi
  416756:	mov    r15,QWORD PTR [rsp+0x8]
  41675b:	jmp    416770 <main@@Base+0x11e20>
  41675d:	mov    r15,QWORD PTR [rsp+0x8]
  416762:	mov    rdi,r15
  416765:	mov    rsi,rax
  416768:	mov    rdx,r12
  41676b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416770:	mov    r9,rbx
  416773:	cmp    r9,rax
  416776:	mov    r14,QWORD PTR [rsp+0x10]
  41677b:	je     4167b9 <main@@Base+0x11e69>
  41677d:	mov    rdi,r15
  416780:	mov    rsi,rax
  416783:	mov    rdx,r12
  416786:	lea    rcx,[rsp+0x34]
  41678b:	call   420390 <flatcc_json_parser_build_string@@Base>
  416790:	mov    rbx,rax
  416793:	cmp    DWORD PTR [rsp+0x34],0x0
  416798:	je     417631 <main@@Base+0x12ce1>
  41679e:	mov    rdi,QWORD PTR [r15]
  4167a1:	mov    esi,0x2
  4167a6:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  4167ab:	test   rax,rax
  4167ae:	jne    415f65 <main@@Base+0x11615>
  4167b4:	jmp    417631 <main@@Base+0x12ce1>
  4167b9:	mov    rdi,r15
  4167bc:	mov    rsi,r9
  4167bf:	mov    rdx,r12
  4167c2:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4167c7:	mov    rcx,rax
  4167ca:	jmp    41686d <main@@Base+0x11f1d>
  4167cf:	mov    rdi,QWORD PTR [rsp+0x8]
  4167d4:	mov    rsi,rbp
  4167d7:	mov    rdx,r12
  4167da:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4167df:	mov    rbp,rax
  4167e2:	cmp    r14,rbp
  4167e5:	mov    r15,QWORD PTR [rsp+0x8]
  4167ea:	je     416857 <main@@Base+0x11f07>
  4167ec:	mov    QWORD PTR [rsp+0x28],0x0
  4167f5:	mov    DWORD PTR [rsp+0x20],0x0
  4167fd:	mov    DWORD PTR [rsp+0x4],0x0
  416805:	xor    r14d,r14d
  416808:	cmp    rbp,r12
  41680b:	je     41690b <main@@Base+0x11fbb>
  416811:	mov    rdi,QWORD PTR [rsp+0x8]
  416816:	mov    rsi,rbp
  416819:	mov    rdx,r12
  41681c:	lea    rcx,[rsp+0x20]
  416821:	lea    r8,[rsp+0x28]
  416826:	call   41fec0 <flatcc_json_parser_integer@@Base>
  41682b:	cmp    rax,rbp
  41682e:	je     41691c <main@@Base+0x11fcc>
  416834:	mov    rbx,rax
  416837:	cmp    DWORD PTR [rsp+0x20],0x0
  41683c:	je     4169b5 <main@@Base+0x12065>
  416842:	mov    rdi,QWORD PTR [rsp+0x8]
  416847:	mov    rsi,rbx
  41684a:	mov    rdx,r12
  41684d:	mov    ecx,0x8
  416852:	jmp    4169d7 <main@@Base+0x12087>
  416857:	mov    rdi,r15
  41685a:	mov    rsi,r14
  41685d:	mov    rdx,r12
  416860:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  416865:	mov    rcx,rax
  416868:	mov    r14,QWORD PTR [rsp+0x10]
  41686d:	mov    rax,r12
  416870:	sub    rax,rcx
  416873:	cmp    rax,0x2
  416877:	jl     416893 <main@@Base+0x11f43>
  416879:	cmp    BYTE PTR [rcx],0x20
  41687c:	jg     4168a4 <main@@Base+0x11f54>
  41687e:	jne    416893 <main@@Base+0x11f43>
  416880:	cmp    BYTE PTR [rcx+0x1],0x20
  416884:	jle    416893 <main@@Base+0x11f43>
  416886:	inc    rcx
  416889:	cmp    rcx,r12
  41688c:	jne    4168ad <main@@Base+0x11f5d>
  41688e:	jmp    416b74 <main@@Base+0x12224>
  416893:	mov    rdi,r15
  416896:	mov    rsi,rcx
  416899:	mov    rdx,r12
  41689c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4168a1:	mov    rcx,rax
  4168a4:	cmp    rcx,r12
  4168a7:	je     416b74 <main@@Base+0x12224>
  4168ad:	movzx  eax,BYTE PTR [rcx]
  4168b0:	cmp    al,0x2c
  4168b2:	jne    416b87 <main@@Base+0x12237>
  4168b8:	lea    rsi,[rcx+0x1]
  4168bc:	mov    rax,r12
  4168bf:	sub    rax,rsi
  4168c2:	cmp    rax,0x2
  4168c6:	jl     4168e6 <main@@Base+0x11f96>
  4168c8:	cmp    BYTE PTR [rsi],0x20
  4168cb:	jg     4168f4 <main@@Base+0x11fa4>
  4168cd:	jne    4168e6 <main@@Base+0x11f96>
  4168cf:	cmp    BYTE PTR [rcx+0x2],0x20
  4168d3:	jle    4168e6 <main@@Base+0x11f96>
  4168d5:	add    rcx,0x2
  4168d9:	mov    rsi,rcx
  4168dc:	cmp    rsi,r12
  4168df:	jne    4168fd <main@@Base+0x11fad>
  4168e1:	jmp    416bc7 <main@@Base+0x12277>
  4168e6:	mov    rdi,r15
  4168e9:	mov    rdx,r12
  4168ec:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4168f1:	mov    rsi,rax
  4168f4:	cmp    rsi,r12
  4168f7:	je     416bc7 <main@@Base+0x12277>
  4168fd:	cmp    BYTE PTR [rsi],0x7d
  416900:	jne    415490 <main@@Base+0x10b40>
  416906:	jmp    416bd2 <main@@Base+0x12282>
  41690b:	mov    rbx,r12
  41690e:	cmp    rbp,rbx
  416911:	jne    416a1a <main@@Base+0x120ca>
  416917:	jmp    4169e4 <main@@Base+0x12094>
  41691c:	mov    rbx,rbp
  41691f:	cmp    rbp,rbx
  416922:	jne    416a1a <main@@Base+0x120ca>
  416928:	jmp    4169e4 <main@@Base+0x12094>
  41692d:	mov    DWORD PTR [rsp+0x4],eax
  416931:	mov    r14d,eax
  416934:	mov    r15,QWORD PTR [rsp+0x8]
  416939:	mov    rax,rsi
  41693c:	mov    rbx,rax
  41693f:	cmp    rbp,rax
  416942:	jne    41697d <main@@Base+0x1202d>
  416944:	mov    rdi,r15
  416947:	mov    rsi,rbp
  41694a:	mov    rdx,r12
  41694d:	lea    rcx,[rip+0x12c6c]        # 4295c0 <filename@@Base+0x4f0>
  416954:	lea    r8,[rsp+0x4]
  416959:	call   413500 <main@@Base+0xebb0>
  41695e:	mov    rbx,rax
  416961:	cmp    rax,rbp
  416964:	je     41762c <main@@Base+0x12cdc>
  41696a:	cmp    rbx,r12
  41696d:	je     41762c <main@@Base+0x12cdc>
  416973:	mov    r14d,DWORD PTR [rsp+0x4]
  416978:	mov    r15,QWORD PTR [rsp+0x8]
  41697d:	test   r14d,r14d
  416980:	jne    41698d <main@@Base+0x1203d>
  416982:	test   BYTE PTR [r15+0x10],0x2
  416987:	je     416a57 <main@@Base+0x12107>
  41698d:	mov    rdi,QWORD PTR [r15]
  416990:	mov    edx,0x4
  416995:	mov    esi,0x6
  41699a:	mov    ecx,0x4
  41699f:	call   41c310 <flatcc_builder_table_add@@Base>
  4169a4:	test   rax,rax
  4169a7:	je     41762c <main@@Base+0x12cdc>
  4169ad:	mov    DWORD PTR [rax],r14d
  4169b0:	jmp    416a57 <main@@Base+0x12107>
  4169b5:	mov    rax,QWORD PTR [rsp+0x28]
  4169ba:	mov    rcx,rax
  4169bd:	shr    rcx,0x20
  4169c1:	je     416a61 <main@@Base+0x12111>
  4169c7:	mov    rdi,QWORD PTR [rsp+0x8]
  4169cc:	mov    rsi,rbx
  4169cf:	mov    rdx,r12
  4169d2:	mov    ecx,0x7
  4169d7:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4169dc:	mov    rbx,rax
  4169df:	cmp    rbp,rbx
  4169e2:	jne    416a1a <main@@Base+0x120ca>
  4169e4:	mov    rdi,QWORD PTR [rsp+0x8]
  4169e9:	mov    rsi,rbp
  4169ec:	mov    rdx,r12
  4169ef:	lea    rcx,[rip+0x12c0a]        # 429600 <filename@@Base+0x530>
  4169f6:	lea    r8,[rsp+0x4]
  4169fb:	call   413500 <main@@Base+0xebb0>
  416a00:	mov    rbx,rax
  416a03:	cmp    rax,rbp
  416a06:	je     41762c <main@@Base+0x12cdc>
  416a0c:	cmp    rbx,r12
  416a0f:	je     41762c <main@@Base+0x12cdc>
  416a15:	mov    r14d,DWORD PTR [rsp+0x4]
  416a1a:	test   r14d,r14d
  416a1d:	jne    416a2a <main@@Base+0x120da>
  416a1f:	mov    rax,QWORD PTR [rsp+0x8]
  416a24:	test   BYTE PTR [rax+0x10],0x2
  416a28:	je     416a52 <main@@Base+0x12102>
  416a2a:	mov    rax,QWORD PTR [rsp+0x8]
  416a2f:	mov    rdi,QWORD PTR [rax]
  416a32:	mov    edx,0x4
  416a37:	mov    esi,0x8
  416a3c:	mov    ecx,0x4
  416a41:	call   41c310 <flatcc_builder_table_add@@Base>
  416a46:	test   rax,rax
  416a49:	je     41762c <main@@Base+0x12cdc>
  416a4f:	mov    DWORD PTR [rax],r14d
  416a52:	mov    r15,QWORD PTR [rsp+0x8]
  416a57:	mov    r14,QWORD PTR [rsp+0x10]
  416a5c:	jmp    416643 <main@@Base+0x11cf3>
  416a61:	mov    DWORD PTR [rsp+0x4],eax
  416a65:	mov    r14d,eax
  416a68:	cmp    rbp,rbx
  416a6b:	jne    416a1a <main@@Base+0x120ca>
  416a6d:	jmp    4169e4 <main@@Base+0x12094>
  416a72:	mov    rdi,r15
  416a75:	mov    rdx,r12
  416a78:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416a7d:	mov    rsi,rax
  416a80:	mov    rax,r12
  416a83:	cmp    rsi,r12
  416a86:	je     416c20 <main@@Base+0x122d0>
  416a8c:	cmp    BYTE PTR [rsi],0x7d
  416a8f:	jne    416c1d <main@@Base+0x122cd>
  416a95:	lea    rbx,[rsi+0x1]
  416a99:	mov    rax,r12
  416a9c:	sub    rax,rbx
  416a9f:	cmp    rax,0x2
  416aa3:	jl     4174ec <main@@Base+0x12b9c>
  416aa9:	cmp    BYTE PTR [rbx],0x20
  416aac:	jg     4174fd <main@@Base+0x12bad>
  416ab2:	jne    4174ec <main@@Base+0x12b9c>
  416ab8:	cmp    BYTE PTR [rsi+0x2],0x20
  416abc:	jle    4174ec <main@@Base+0x12b9c>
  416ac2:	add    rsi,0x2
  416ac6:	mov    rbx,rsi
  416ac9:	cmp    DWORD PTR [r15+0x20],0x0
  416ace:	je     417508 <main@@Base+0x12bb8>
  416ad4:	jmp    41761c <main@@Base+0x12ccc>
  416ad9:	mov    rbx,r12
  416adc:	cmp    DWORD PTR [r15+0x20],0x0
  416ae1:	je     4173f5 <main@@Base+0x12aa5>
  416ae7:	jmp    41761c <main@@Base+0x12ccc>
  416aec:	cmp    al,0x7d
  416aee:	jne    4173d4 <main@@Base+0x12a84>
  416af4:	lea    rbx,[rbp+0x1]
  416af8:	mov    rax,r12
  416afb:	sub    rax,rbx
  416afe:	cmp    rax,0x2
  416b02:	jl     416b61 <main@@Base+0x12211>
  416b04:	cmp    BYTE PTR [rbx],0x20
  416b07:	jg     4173ea <main@@Base+0x12a9a>
  416b0d:	jne    416b61 <main@@Base+0x12211>
  416b0f:	cmp    BYTE PTR [rbp+0x2],0x20
  416b13:	jle    416b61 <main@@Base+0x12211>
  416b15:	add    rbp,0x2
  416b19:	mov    rbx,rbp
  416b1c:	cmp    DWORD PTR [r15+0x20],0x0
  416b21:	je     4173f5 <main@@Base+0x12aa5>
  416b27:	jmp    41761c <main@@Base+0x12ccc>
  416b2c:	mov    rdi,r15
  416b2f:	mov    rsi,r12
  416b32:	jmp    4173da <main@@Base+0x12a8a>
  416b37:	lea    rbx,[rax+0x1]
  416b3b:	mov    rcx,r12
  416b3e:	sub    rcx,rbx
  416b41:	cmp    rcx,0x2
  416b45:	jl     416b61 <main@@Base+0x12211>
  416b47:	cmp    BYTE PTR [rbx],0x20
  416b4a:	jg     4173ea <main@@Base+0x12a9a>
  416b50:	jne    416b61 <main@@Base+0x12211>
  416b52:	cmp    BYTE PTR [rax+0x2],0x20
  416b56:	jle    416b61 <main@@Base+0x12211>
  416b58:	add    rax,0x2
  416b5c:	jmp    4173e7 <main@@Base+0x12a97>
  416b61:	mov    rdi,r15
  416b64:	mov    rsi,rbx
  416b67:	mov    rdx,r12
  416b6a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416b6f:	jmp    4173e7 <main@@Base+0x12a97>
  416b74:	mov    rbx,r12
  416b77:	cmp    DWORD PTR [r15+0x20],0x0
  416b7c:	je     417448 <main@@Base+0x12af8>
  416b82:	jmp    417631 <main@@Base+0x12ce1>
  416b87:	cmp    al,0x7d
  416b89:	jne    417427 <main@@Base+0x12ad7>
  416b8f:	lea    rbx,[rcx+0x1]
  416b93:	mov    rax,r12
  416b96:	sub    rax,rbx
  416b99:	cmp    rax,0x2
  416b9d:	jl     416c0a <main@@Base+0x122ba>
  416b9f:	cmp    BYTE PTR [rbx],0x20
  416ba2:	jg     41743d <main@@Base+0x12aed>
  416ba8:	jne    416c0a <main@@Base+0x122ba>
  416baa:	cmp    BYTE PTR [rcx+0x2],0x20
  416bae:	jle    416c0a <main@@Base+0x122ba>
  416bb0:	add    rcx,0x2
  416bb4:	mov    rbx,rcx
  416bb7:	cmp    DWORD PTR [r15+0x20],0x0
  416bbc:	je     417448 <main@@Base+0x12af8>
  416bc2:	jmp    417631 <main@@Base+0x12ce1>
  416bc7:	mov    rdi,r15
  416bca:	mov    rsi,r12
  416bcd:	jmp    41742d <main@@Base+0x12add>
  416bd2:	lea    rbx,[rsi+0x1]
  416bd6:	mov    rax,r12
  416bd9:	sub    rax,rbx
  416bdc:	cmp    rax,0x2
  416be0:	jl     416c0a <main@@Base+0x122ba>
  416be2:	cmp    BYTE PTR [rbx],0x20
  416be5:	jg     41743d <main@@Base+0x12aed>
  416beb:	jne    416c0a <main@@Base+0x122ba>
  416bed:	cmp    BYTE PTR [rsi+0x2],0x20
  416bf1:	jle    416c0a <main@@Base+0x122ba>
  416bf3:	add    rsi,0x2
  416bf7:	mov    rbx,rsi
  416bfa:	cmp    DWORD PTR [r15+0x20],0x0
  416bff:	je     417448 <main@@Base+0x12af8>
  416c05:	jmp    417631 <main@@Base+0x12ce1>
  416c0a:	mov    rdi,r15
  416c0d:	mov    rsi,rbx
  416c10:	mov    rdx,r12
  416c13:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416c18:	jmp    41743a <main@@Base+0x12aea>
  416c1d:	mov    rax,rsi
  416c20:	mov    rsi,r12
  416c23:	cmp    rax,r12
  416c26:	je     416c68 <main@@Base+0x12318>
  416c28:	movzx  ecx,BYTE PTR [rax]
  416c2b:	cmp    cl,0x2e
  416c2e:	je     416c45 <main@@Base+0x122f5>
  416c30:	cmp    cl,0x22
  416c33:	jne    416c5a <main@@Base+0x1230a>
  416c35:	inc    rax
  416c38:	mov    rcx,QWORD PTR [rsp+0x18]
  416c3d:	mov    DWORD PTR [rcx],0x0
  416c43:	jmp    416c65 <main@@Base+0x12315>
  416c45:	mov    rdi,r15
  416c48:	mov    rsi,rax
  416c4b:	mov    rdx,r12
  416c4e:	mov    ecx,0x5
  416c53:	call   41e300 <flatcc_json_parser_set_error@@Base>
  416c58:	jmp    416c65 <main@@Base+0x12315>
  416c5a:	mov    rcx,QWORD PTR [rsp+0x18]
  416c5f:	mov    DWORD PTR [rcx],0x1
  416c65:	mov    rsi,rax
  416c68:	mov    rax,r12
  416c6b:	sub    rax,rsi
  416c6e:	cmp    rax,0x8
  416c72:	jb     416c7e <main@@Base+0x1232e>
  416c74:	movbe  rax,QWORD PTR [rsi]
  416c79:	jmp    416d04 <main@@Base+0x123b4>
  416c7e:	dec    rax
  416c81:	cmp    rax,0x6
  416c85:	ja     416d4f <main@@Base+0x123ff>
  416c8b:	lea    rcx,[rip+0xbb8a]        # 42281c <_IO_stdin_used@@Base+0x81c>
  416c92:	mov    rdx,rcx
  416c95:	movsxd rcx,DWORD PTR [rcx+rax*4]
  416c99:	add    rcx,rdx
  416c9c:	xor    r8d,r8d
  416c9f:	xor    eax,eax
  416ca1:	xor    edx,edx
  416ca3:	xor    edi,edi
  416ca5:	xor    ebp,ebp
  416ca7:	xor    ebx,ebx
  416ca9:	jmp    rcx
  416cab:	movsx  r8,BYTE PTR [rsi+0x6]
  416cb0:	shl    r8,0x8
  416cb4:	movsx  rax,BYTE PTR [rsi+0x5]
  416cb9:	shl    rax,0x10
  416cbd:	or     rax,r8
  416cc0:	movsx  rdx,BYTE PTR [rsi+0x4]
  416cc5:	shl    rdx,0x18
  416cc9:	or     rdx,rax
  416ccc:	movsx  rdi,BYTE PTR [rsi+0x3]
  416cd1:	shl    rdi,0x20
  416cd5:	or     rdi,rdx
  416cd8:	movsx  rbp,BYTE PTR [rsi+0x2]
  416cdd:	shl    rbp,0x28
  416ce1:	or     rbp,rdi
  416ce4:	movsx  rbx,BYTE PTR [rsi+0x1]
  416ce9:	shl    rbx,0x30
  416ced:	or     rbx,rbp
  416cf0:	movzx  eax,BYTE PTR [rsi]
  416cf3:	shl    rax,0x38
  416cf7:	or     rax,rbx
  416cfa:	movabs rbp,0x625f73746172745f
  416d04:	movabs rcx,0x616161615f626262
  416d0e:	cmp    rax,rcx
  416d11:	jne    416d4f <main@@Base+0x123ff>
  416d13:	lea    r14,[rsi+0x8]
  416d17:	mov    rax,r12
  416d1a:	sub    rax,r14
  416d1d:	cmp    rax,0x8
  416d21:	jb     416d62 <main@@Base+0x12412>
  416d23:	movbe  rcx,QWORD PTR [r14]
  416d28:	cmp    rcx,rbp
  416d2b:	jne    416df1 <main@@Base+0x124a1>
  416d31:	lea    r14,[rsi+0x10]
  416d35:	mov    rax,r12
  416d38:	sub    rax,r14
  416d3b:	cmp    rax,0x8
  416d3f:	jb     416e44 <main@@Base+0x124f4>
  416d45:	movbe  rcx,QWORD PTR [r14]
  416d4a:	jmp    416ec0 <main@@Base+0x12570>
  416d4f:	mov    rdi,r15
  416d52:	mov    rdx,r12
  416d55:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  416d5a:	mov    rbp,rax
  416d5d:	jmp    4171ab <main@@Base+0x1285b>
  416d62:	lea    rcx,[rax-0x1]
  416d66:	cmp    rcx,0x6
  416d6a:	ja     417195 <main@@Base+0x12845>
  416d70:	lea    rdx,[rip+0xbac1]        # 422838 <_IO_stdin_used@@Base+0x838>
  416d77:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416d7b:	add    rcx,rdx
  416d7e:	xor    r8d,r8d
  416d81:	xor    r9d,r9d
  416d84:	xor    edi,edi
  416d86:	xor    ebp,ebp
  416d88:	xor    ebx,ebx
  416d8a:	xor    edx,edx
  416d8c:	jmp    rcx
  416d8e:	movsx  r8,BYTE PTR [rsi+0xe]
  416d93:	shl    r8,0x8
  416d97:	movsx  r9,BYTE PTR [rsi+0xd]
  416d9c:	shl    r9,0x10
  416da0:	or     r9,r8
  416da3:	movsx  rdi,BYTE PTR [rsi+0xc]
  416da8:	shl    rdi,0x18
  416dac:	or     rdi,r9
  416daf:	movsx  rbp,BYTE PTR [rsi+0xb]
  416db4:	shl    rbp,0x20
  416db8:	or     rbp,rdi
  416dbb:	movsx  rbx,BYTE PTR [rsi+0xa]
  416dc0:	shl    rbx,0x28
  416dc4:	or     rbx,rbp
  416dc7:	movsx  rdx,BYTE PTR [rsi+0x9]
  416dcc:	shl    rdx,0x30
  416dd0:	or     rdx,rbx
  416dd3:	movzx  ecx,BYTE PTR [r14]
  416dd7:	shl    rcx,0x38
  416ddb:	or     rcx,rdx
  416dde:	movabs rbp,0x625f73746172745f
  416de8:	cmp    rcx,rbp
  416deb:	je     416d31 <main@@Base+0x123e1>
  416df1:	and    rcx,0xffffffffffffff00
  416df8:	lea    rdx,[rbp+0x3fdfea1]
  416dff:	cmp    rcx,rdx
  416e02:	jne    417195 <main@@Base+0x12845>
  416e08:	cmp    rax,0x8
  416e0c:	jl     417195 <main@@Base+0x12845>
  416e12:	mov    rax,QWORD PTR [rsp+0x18]
  416e17:	cmp    DWORD PTR [rax],0x0
  416e1a:	movzx  eax,BYTE PTR [rsi+0xf]
  416e1e:	je     416f0c <main@@Base+0x125bc>
  416e24:	cmp    al,0x21
  416e26:	jl     416e30 <main@@Base+0x124e0>
  416e28:	cmp    al,0x3a
  416e2a:	jne    417195 <main@@Base+0x12845>
  416e30:	add    rsi,0xf
  416e34:	mov    rax,QWORD PTR [rsp+0x18]
  416e39:	mov    DWORD PTR [rax],0x0
  416e3f:	jmp    416f18 <main@@Base+0x125c8>
  416e44:	lea    rcx,[rax-0x1]
  416e48:	cmp    rcx,0x6
  416e4c:	ja     417195 <main@@Base+0x12845>
  416e52:	lea    rdx,[rip+0xb9fb]        # 422854 <_IO_stdin_used@@Base+0x854>
  416e59:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416e5d:	add    rcx,rdx
  416e60:	xor    r8d,r8d
  416e63:	xor    r9d,r9d
  416e66:	xor    edi,edi
  416e68:	xor    ebp,ebp
  416e6a:	xor    ebx,ebx
  416e6c:	xor    edx,edx
  416e6e:	jmp    rcx
  416e70:	movsx  r8,BYTE PTR [rsi+0x16]
  416e75:	shl    r8,0x8
  416e79:	movsx  r9,BYTE PTR [rsi+0x15]
  416e7e:	shl    r9,0x10
  416e82:	or     r9,r8
  416e85:	movsx  rdi,BYTE PTR [rsi+0x14]
  416e8a:	shl    rdi,0x18
  416e8e:	or     rdi,r9
  416e91:	movsx  rbp,BYTE PTR [rsi+0x13]
  416e96:	shl    rbp,0x20
  416e9a:	or     rbp,rdi
  416e9d:	movsx  rbx,BYTE PTR [rsi+0x12]
  416ea2:	shl    rbx,0x28
  416ea6:	or     rbx,rbp
  416ea9:	movsx  rdx,BYTE PTR [rsi+0x11]
  416eae:	shl    rdx,0x30
  416eb2:	or     rdx,rbx
  416eb5:	movzx  ecx,BYTE PTR [r14]
  416eb9:	shl    rcx,0x38
  416ebd:	or     rcx,rdx
  416ec0:	shr    rcx,0x18
  416ec4:	movabs rdx,0x7374657073
  416ece:	cmp    rcx,rdx
  416ed1:	jne    417195 <main@@Base+0x12845>
  416ed7:	cmp    rax,0x6
  416edb:	jl     417195 <main@@Base+0x12845>
  416ee1:	mov    rax,QWORD PTR [rsp+0x18]
  416ee6:	cmp    DWORD PTR [rax],0x0
  416ee9:	movzx  eax,BYTE PTR [rsi+0x15]
  416eed:	je     416f3e <main@@Base+0x125ee>
  416eef:	cmp    al,0x21
  416ef1:	jl     416efb <main@@Base+0x125ab>
  416ef3:	cmp    al,0x3a
  416ef5:	jne    417195 <main@@Base+0x12845>
  416efb:	add    rsi,0x15
  416eff:	mov    rax,QWORD PTR [rsp+0x18]
  416f04:	mov    DWORD PTR [rax],0x0
  416f0a:	jmp    416f4a <main@@Base+0x125fa>
  416f0c:	cmp    al,0x22
  416f0e:	jne    417195 <main@@Base+0x12845>
  416f14:	add    rsi,0x10
  416f18:	mov    rax,r12
  416f1b:	sub    rax,rsi
  416f1e:	cmp    rax,0x2
  416f22:	jl     416f84 <main@@Base+0x12634>
  416f24:	cmp    BYTE PTR [rsi],0x20
  416f27:	jg     416f92 <main@@Base+0x12642>
  416f29:	jne    416f84 <main@@Base+0x12634>
  416f2b:	cmp    BYTE PTR [rsi+0x1],0x20
  416f2f:	jle    416f84 <main@@Base+0x12634>
  416f31:	inc    rsi
  416f34:	cmp    rsi,r12
  416f37:	jne    416f97 <main@@Base+0x12647>
  416f39:	jmp    416fe1 <main@@Base+0x12691>
  416f3e:	cmp    al,0x22
  416f40:	jne    417195 <main@@Base+0x12845>
  416f46:	add    rsi,0x16
  416f4a:	mov    rax,r12
  416f4d:	sub    rax,rsi
  416f50:	cmp    rax,0x2
  416f54:	jl     416ff6 <main@@Base+0x126a6>
  416f5a:	cmp    BYTE PTR [rsi],0x20
  416f5d:	jg     417004 <main@@Base+0x126b4>
  416f63:	jne    416ff6 <main@@Base+0x126a6>
  416f69:	cmp    BYTE PTR [rsi+0x1],0x20
  416f6d:	jle    416ff6 <main@@Base+0x126a6>
  416f73:	inc    rsi
  416f76:	cmp    rsi,r12
  416f79:	jne    417009 <main@@Base+0x126b9>
  416f7f:	jmp    417053 <main@@Base+0x12703>
  416f84:	mov    rdi,r15
  416f87:	mov    rdx,r12
  416f8a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  416f8f:	mov    rsi,rax
  416f92:	cmp    rsi,r12
  416f95:	je     416fe1 <main@@Base+0x12691>
  416f97:	cmp    BYTE PTR [rsi],0x3a
  416f9a:	jne    416fe1 <main@@Base+0x12691>
  416f9c:	lea    r13,[rsi+0x1]
  416fa0:	mov    rax,r12
  416fa3:	sub    rax,r13
  416fa6:	cmp    rax,0x2
  416faa:	jl     417068 <main@@Base+0x12718>
  416fb0:	cmp    BYTE PTR [r13+0x0],0x20
  416fb5:	jg     416fce <main@@Base+0x1267e>
  416fb7:	jne    417068 <main@@Base+0x12718>
  416fbd:	cmp    BYTE PTR [rsi+0x2],0x20
  416fc1:	jle    417068 <main@@Base+0x12718>
  416fc7:	add    rsi,0x2
  416fcb:	mov    r13,rsi
  416fce:	mov    r15,QWORD PTR [rsp+0x8]
  416fd3:	cmp    r14,r13
  416fd6:	jne    417087 <main@@Base+0x12737>
  416fdc:	jmp    417195 <main@@Base+0x12845>
  416fe1:	mov    rdi,r15
  416fe4:	mov    rdx,r12
  416fe7:	mov    ecx,0x4
  416fec:	call   41e300 <flatcc_json_parser_set_error@@Base>
  416ff1:	jmp    41707b <main@@Base+0x1272b>
  416ff6:	mov    rdi,r15
  416ff9:	mov    rdx,r12
  416ffc:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417001:	mov    rsi,rax
  417004:	cmp    rsi,r12
  417007:	je     417053 <main@@Base+0x12703>
  417009:	cmp    BYTE PTR [rsi],0x3a
  41700c:	jne    417053 <main@@Base+0x12703>
  41700e:	lea    r13,[rsi+0x1]
  417012:	mov    rax,r12
  417015:	sub    rax,r13
  417018:	cmp    rax,0x2
  41701c:	jl     41710f <main@@Base+0x127bf>
  417022:	cmp    BYTE PTR [r13+0x0],0x20
  417027:	jg     417040 <main@@Base+0x126f0>
  417029:	jne    41710f <main@@Base+0x127bf>
  41702f:	cmp    BYTE PTR [rsi+0x2],0x20
  417033:	jle    41710f <main@@Base+0x127bf>
  417039:	add    rsi,0x2
  41703d:	mov    r13,rsi
  417040:	mov    r15,QWORD PTR [rsp+0x8]
  417045:	cmp    r14,r13
  417048:	jne    41712a <main@@Base+0x127da>
  41704e:	jmp    417195 <main@@Base+0x12845>
  417053:	mov    rdi,r15
  417056:	mov    rdx,r12
  417059:	mov    ecx,0x4
  41705e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417063:	jmp    417122 <main@@Base+0x127d2>
  417068:	mov    r15,QWORD PTR [rsp+0x8]
  41706d:	mov    rdi,r15
  417070:	mov    rsi,r13
  417073:	mov    rdx,r12
  417076:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41707b:	mov    r13,rax
  41707e:	cmp    r14,r13
  417081:	je     417195 <main@@Base+0x12845>
  417087:	mov    QWORD PTR [rsp+0x28],0x0
  417090:	mov    DWORD PTR [rsp+0x4],0x0
  417098:	mov    QWORD PTR [rsp+0x20],0x0
  4170a1:	cmp    r13,r12
  4170a4:	je     417105 <main@@Base+0x127b5>
  4170a6:	mov    rdi,r15
  4170a9:	mov    rsi,r13
  4170ac:	mov    rdx,r12
  4170af:	lea    rcx,[rsp+0x4]
  4170b4:	lea    r8,[rsp+0x28]
  4170b9:	call   41fec0 <flatcc_json_parser_integer@@Base>
  4170be:	cmp    rax,r13
  4170c1:	je     41725e <main@@Base+0x1290e>
  4170c7:	mov    rbp,rax
  4170ca:	mov    rbx,QWORD PTR [rsp+0x28]
  4170cf:	cmp    DWORD PTR [rsp+0x4],0x0
  4170d4:	je     41726d <main@@Base+0x1291d>
  4170da:	movabs rax,0x8000000000000000
  4170e4:	cmp    rbx,rax
  4170e7:	jbe    4172cc <main@@Base+0x1297c>
  4170ed:	mov    r15,QWORD PTR [rsp+0x8]
  4170f2:	mov    rdi,r15
  4170f5:	mov    rsi,rbp
  4170f8:	mov    rdx,r12
  4170fb:	mov    ecx,0x8
  417100:	jmp    417285 <main@@Base+0x12935>
  417105:	xor    ebx,ebx
  417107:	mov    rbp,r12
  41710a:	jmp    4172d9 <main@@Base+0x12989>
  41710f:	mov    r15,QWORD PTR [rsp+0x8]
  417114:	mov    rdi,r15
  417117:	mov    rsi,r13
  41711a:	mov    rdx,r12
  41711d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417122:	mov    r13,rax
  417125:	cmp    r14,r13
  417128:	je     417195 <main@@Base+0x12845>
  41712a:	mov    QWORD PTR [rsp+0x28],0x0
  417133:	mov    DWORD PTR [rsp+0x20],0x0
  41713b:	mov    DWORD PTR [rsp+0x4],0x0
  417143:	xor    ebx,ebx
  417145:	cmp    r13,r12
  417148:	je     41724d <main@@Base+0x128fd>
  41714e:	mov    rdi,r15
  417151:	mov    rsi,r13
  417154:	mov    rdx,r12
  417157:	lea    rcx,[rsp+0x20]
  41715c:	lea    r8,[rsp+0x28]
  417161:	call   41fec0 <flatcc_json_parser_integer@@Base>
  417166:	cmp    rax,r13
  417169:	je     417265 <main@@Base+0x12915>
  41716f:	mov    rbp,rax
  417172:	cmp    DWORD PTR [rsp+0x20],0x0
  417177:	je     417291 <main@@Base+0x12941>
  41717d:	mov    r15,QWORD PTR [rsp+0x8]
  417182:	mov    rdi,r15
  417185:	mov    rsi,rbp
  417188:	mov    rdx,r12
  41718b:	mov    ecx,0x8
  417190:	jmp    4172b6 <main@@Base+0x12966>
  417195:	mov    rdi,r15
  417198:	mov    rsi,r14
  41719b:	mov    rdx,r12
  41719e:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4171a3:	mov    rbp,rax
  4171a6:	mov    r14,QWORD PTR [rsp+0x10]
  4171ab:	mov    rax,r12
  4171ae:	sub    rax,rbp
  4171b1:	cmp    rax,0x2
  4171b5:	jl     4171d2 <main@@Base+0x12882>
  4171b7:	cmp    BYTE PTR [rbp+0x0],0x20
  4171bb:	jg     4171e3 <main@@Base+0x12893>
  4171bd:	jne    4171d2 <main@@Base+0x12882>
  4171bf:	cmp    BYTE PTR [rbp+0x1],0x20
  4171c3:	jle    4171d2 <main@@Base+0x12882>
  4171c5:	inc    rbp
  4171c8:	cmp    rbp,r12
  4171cb:	jne    4171ec <main@@Base+0x1289c>
  4171cd:	jmp    417414 <main@@Base+0x12ac4>
  4171d2:	mov    rdi,r15
  4171d5:	mov    rsi,rbp
  4171d8:	mov    rdx,r12
  4171db:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4171e0:	mov    rbp,rax
  4171e3:	cmp    rbp,r12
  4171e6:	je     417414 <main@@Base+0x12ac4>
  4171ec:	movzx  eax,BYTE PTR [rbp+0x0]
  4171f0:	cmp    al,0x2c
  4171f2:	jne    417464 <main@@Base+0x12b14>
  4171f8:	lea    rax,[rbp+0x1]
  4171fc:	mov    rcx,r12
  4171ff:	sub    rcx,rax
  417202:	cmp    rcx,0x2
  417206:	jl     41721e <main@@Base+0x128ce>
  417208:	cmp    BYTE PTR [rax],0x20
  41720b:	jg     41722c <main@@Base+0x128dc>
  41720d:	jne    41721e <main@@Base+0x128ce>
  41720f:	cmp    BYTE PTR [rbp+0x2],0x20
  417213:	jle    41721e <main@@Base+0x128ce>
  417215:	add    rbp,0x2
  417219:	mov    rax,rbp
  41721c:	jmp    41722c <main@@Base+0x128dc>
  41721e:	mov    rdi,r15
  417221:	mov    rsi,rax
  417224:	mov    rdx,r12
  417227:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41722c:	cmp    rax,r12
  41722f:	movabs rbp,0x625f73746172745f
  417239:	je     417487 <main@@Base+0x12b37>
  41723f:	cmp    BYTE PTR [rax],0x7d
  417242:	jne    416c20 <main@@Base+0x122d0>
  417248:	jmp    41748f <main@@Base+0x12b3f>
  41724d:	mov    rbp,r12
  417250:	cmp    r13,rbp
  417253:	jne    41739e <main@@Base+0x12a4e>
  417259:	jmp    417366 <main@@Base+0x12a16>
  41725e:	xor    ebx,ebx
  417260:	mov    rbp,r13
  417263:	jmp    4172d4 <main@@Base+0x12984>
  417265:	mov    rbp,r13
  417268:	jmp    41735c <main@@Base+0x12a0c>
  41726d:	test   rbx,rbx
  417270:	jns    4172cf <main@@Base+0x1297f>
  417272:	mov    r15,QWORD PTR [rsp+0x8]
  417277:	mov    rdi,r15
  41727a:	mov    rsi,rbp
  41727d:	mov    rdx,r12
  417280:	mov    ecx,0x7
  417285:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41728a:	mov    rbp,rax
  41728d:	xor    ebx,ebx
  41728f:	jmp    4172d9 <main@@Base+0x12989>
  417291:	mov    rax,QWORD PTR [rsp+0x28]
  417296:	mov    rcx,rax
  417299:	shr    rcx,0x20
  41729d:	je     417356 <main@@Base+0x12a06>
  4172a3:	mov    r15,QWORD PTR [rsp+0x8]
  4172a8:	mov    rdi,r15
  4172ab:	mov    rsi,rbp
  4172ae:	mov    rdx,r12
  4172b1:	mov    ecx,0x7
  4172b6:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4172bb:	mov    rbp,rax
  4172be:	cmp    r13,rbp
  4172c1:	jne    41739e <main@@Base+0x12a4e>
  4172c7:	jmp    417366 <main@@Base+0x12a16>
  4172cc:	neg    rbx
  4172cf:	mov    QWORD PTR [rsp+0x20],rbx
  4172d4:	mov    r15,QWORD PTR [rsp+0x8]
  4172d9:	mov    r14,QWORD PTR [rsp+0x10]
  4172de:	cmp    r13,rbp
  4172e1:	jne    417321 <main@@Base+0x129d1>
  4172e3:	mov    rdi,r15
  4172e6:	mov    rsi,r13
  4172e9:	mov    rdx,r12
  4172ec:	lea    rcx,[rip+0x1234d]        # 429640 <filename@@Base+0x570>
  4172f3:	lea    r8,[rsp+0x20]
  4172f8:	call   4132f0 <main@@Base+0xe9a0>
  4172fd:	mov    rbp,rax
  417300:	cmp    rax,r13
  417303:	je     417614 <main@@Base+0x12cc4>
  417309:	cmp    rbp,r12
  41730c:	je     417614 <main@@Base+0x12cc4>
  417312:	mov    rbx,QWORD PTR [rsp+0x20]
  417317:	mov    r15,QWORD PTR [rsp+0x8]
  41731c:	mov    r14,QWORD PTR [rsp+0x10]
  417321:	test   rbx,rbx
  417324:	jne    417331 <main@@Base+0x129e1>
  417326:	test   BYTE PTR [r15+0x10],0x2
  41732b:	je     4171ab <main@@Base+0x1285b>
  417331:	mov    rdi,QWORD PTR [r15]
  417334:	mov    edx,0x8
  417339:	xor    esi,esi
  41733b:	mov    ecx,0x8
  417340:	call   41c310 <flatcc_builder_table_add@@Base>
  417345:	test   rax,rax
  417348:	je     417614 <main@@Base+0x12cc4>
  41734e:	mov    QWORD PTR [rax],rbx
  417351:	jmp    4171ab <main@@Base+0x1285b>
  417356:	mov    DWORD PTR [rsp+0x4],eax
  41735a:	mov    ebx,eax
  41735c:	mov    r15,QWORD PTR [rsp+0x8]
  417361:	cmp    r13,rbp
  417364:	jne    41739e <main@@Base+0x12a4e>
  417366:	mov    rdi,r15
  417369:	mov    rsi,r13
  41736c:	mov    rdx,r12
  41736f:	lea    rcx,[rip+0x122aa]        # 429620 <filename@@Base+0x550>
  417376:	lea    r8,[rsp+0x4]
  41737b:	call   413500 <main@@Base+0xebb0>
  417380:	mov    rbp,rax
  417383:	cmp    rax,r13
  417386:	je     417614 <main@@Base+0x12cc4>
  41738c:	cmp    rbp,r12
  41738f:	je     417614 <main@@Base+0x12cc4>
  417395:	mov    ebx,DWORD PTR [rsp+0x4]
  417399:	mov    r15,QWORD PTR [rsp+0x8]
  41739e:	test   ebx,ebx
  4173a0:	jne    4173ad <main@@Base+0x12a5d>
  4173a2:	test   BYTE PTR [r15+0x10],0x2
  4173a7:	je     4171a6 <main@@Base+0x12856>
  4173ad:	mov    rdi,QWORD PTR [r15]
  4173b0:	mov    edx,0x4
  4173b5:	mov    esi,0x1
  4173ba:	mov    ecx,0x4
  4173bf:	call   41c310 <flatcc_builder_table_add@@Base>
  4173c4:	test   rax,rax
  4173c7:	je     417614 <main@@Base+0x12cc4>
  4173cd:	mov    DWORD PTR [rax],ebx
  4173cf:	jmp    4171a6 <main@@Base+0x12856>
  4173d4:	mov    rdi,r15
  4173d7:	mov    rsi,rbp
  4173da:	mov    rdx,r12
  4173dd:	mov    ecx,0xa
  4173e2:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4173e7:	mov    rbx,rax
  4173ea:	cmp    DWORD PTR [r15+0x20],0x0
  4173ef:	jne    41761c <main@@Base+0x12ccc>
  4173f5:	mov    rdi,QWORD PTR [r15]
  4173f8:	call   41b9a0 <flatcc_builder_end_table@@Base>
  4173fd:	test   eax,eax
  4173ff:	je     41761c <main@@Base+0x12ccc>
  417405:	mov    ebp,eax
  417407:	mov    rdi,QWORD PTR [r15]
  41740a:	mov    esi,0x1
  41740f:	jmp    417522 <main@@Base+0x12bd2>
  417414:	mov    rbx,r12
  417417:	cmp    DWORD PTR [r15+0x20],0x0
  41741c:	je     417508 <main@@Base+0x12bb8>
  417422:	jmp    41761c <main@@Base+0x12ccc>
  417427:	mov    rdi,r15
  41742a:	mov    rsi,rcx
  41742d:	mov    rdx,r12
  417430:	mov    ecx,0xa
  417435:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41743a:	mov    rbx,rax
  41743d:	cmp    DWORD PTR [r15+0x20],0x0
  417442:	jne    417631 <main@@Base+0x12ce1>
  417448:	mov    rdi,QWORD PTR [r15]
  41744b:	call   41b9a0 <flatcc_builder_end_table@@Base>
  417450:	test   eax,eax
  417452:	je     417631 <main@@Base+0x12ce1>
  417458:	mov    ebp,eax
  41745a:	mov    rdi,QWORD PTR [r15]
  41745d:	xor    esi,esi
  41745f:	jmp    417522 <main@@Base+0x12bd2>
  417464:	cmp    al,0x7d
  417466:	jne    4174b2 <main@@Base+0x12b62>
  417468:	lea    rbx,[rbp+0x1]
  41746c:	mov    rax,r12
  41746f:	sub    rax,rbx
  417472:	cmp    rax,0x2
  417476:	jl     4174ec <main@@Base+0x12b9c>
  417478:	cmp    BYTE PTR [rbx],0x20
  41747b:	jle    4174c7 <main@@Base+0x12b77>
  41747d:	mov    r15,QWORD PTR [rsp+0x8]
  417482:	jmp    414dab <main@@Base+0x1045b>
  417487:	mov    rdi,r15
  41748a:	mov    rsi,r12
  41748d:	jmp    4174b8 <main@@Base+0x12b68>
  41748f:	lea    rbx,[rax+0x1]
  417493:	mov    rcx,r12
  417496:	sub    rcx,rbx
  417499:	cmp    rcx,0x2
  41749d:	jl     4174ec <main@@Base+0x12b9c>
  41749f:	cmp    BYTE PTR [rbx],0x20
  4174a2:	jg     4174fd <main@@Base+0x12bad>
  4174a4:	jne    4174ec <main@@Base+0x12b9c>
  4174a6:	cmp    BYTE PTR [rax+0x2],0x20
  4174aa:	jle    4174ec <main@@Base+0x12b9c>
  4174ac:	add    rax,0x2
  4174b0:	jmp    4174fa <main@@Base+0x12baa>
  4174b2:	mov    rdi,r15
  4174b5:	mov    rsi,rbp
  4174b8:	mov    rdx,r12
  4174bb:	mov    ecx,0xa
  4174c0:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4174c5:	jmp    4174fa <main@@Base+0x12baa>
  4174c7:	mov    r15,QWORD PTR [rsp+0x8]
  4174cc:	mov    r14,QWORD PTR [rsp+0x10]
  4174d1:	jne    4174ec <main@@Base+0x12b9c>
  4174d3:	cmp    BYTE PTR [rbp+0x2],0x20
  4174d7:	jle    4174ec <main@@Base+0x12b9c>
  4174d9:	add    rbp,0x2
  4174dd:	mov    rbx,rbp
  4174e0:	cmp    DWORD PTR [r15+0x20],0x0
  4174e5:	je     417508 <main@@Base+0x12bb8>
  4174e7:	jmp    41761c <main@@Base+0x12ccc>
  4174ec:	mov    rdi,r15
  4174ef:	mov    rsi,rbx
  4174f2:	mov    rdx,r12
  4174f5:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4174fa:	mov    rbx,rax
  4174fd:	cmp    DWORD PTR [r15+0x20],0x0
  417502:	jne    41761c <main@@Base+0x12ccc>
  417508:	mov    rdi,QWORD PTR [r15]
  41750b:	call   41b9a0 <flatcc_builder_end_table@@Base>
  417510:	test   eax,eax
  417512:	je     41761c <main@@Base+0x12ccc>
  417518:	mov    ebp,eax
  41751a:	mov    rdi,QWORD PTR [r15]
  41751d:	mov    esi,0x2
  417522:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  417527:	test   rax,rax
  41752a:	je     41760c <main@@Base+0x12cbc>
  417530:	mov    DWORD PTR [rax],ebp
  417532:	movabs rbp,0x625f73746172745f
  41753c:	jmp    4146ac <main@@Base+0xfd5c>
  417541:	mov    rbp,r12
  417544:	cmp    DWORD PTR [r15+0x20],0x0
  417549:	jne    414433 <main@@Base+0xfae3>
  41754f:	mov    rdi,QWORD PTR [r15]
  417552:	call   41b9a0 <flatcc_builder_end_table@@Base>
  417557:	mov    DWORD PTR [r14],eax
  41755a:	test   eax,eax
  41755c:	jne    414449 <main@@Base+0xfaf9>
  417562:	jmp    414433 <main@@Base+0xfae3>
  417567:	cmp    al,0x7d
  417569:	jne    4175f9 <main@@Base+0x12ca9>
  41756f:	lea    rbp,[rbx+0x1]
  417573:	mov    rax,r12
  417576:	sub    rax,rbp
  417579:	cmp    rax,0x2
  41757d:	jl     4175e6 <main@@Base+0x12c96>
  41757f:	cmp    BYTE PTR [rbp+0x0],0x20
  417583:	jg     414428 <main@@Base+0xfad8>
  417589:	jne    4175e6 <main@@Base+0x12c96>
  41758b:	cmp    BYTE PTR [rbx+0x2],0x20
  41758f:	jle    4175e6 <main@@Base+0x12c96>
  417591:	add    rbx,0x2
  417595:	mov    rbp,rbx
  417598:	cmp    DWORD PTR [r15+0x20],0x0
  41759d:	jne    414433 <main@@Base+0xfae3>
  4175a3:	jmp    41754f <main@@Base+0x12bff>
  4175a5:	mov    rdi,r15
  4175a8:	mov    rsi,r12
  4175ab:	jmp    4175ff <main@@Base+0x12caf>
  4175ad:	lea    rbp,[rsi+0x1]
  4175b1:	mov    rax,r12
  4175b4:	sub    rax,rbp
  4175b7:	cmp    rax,0x2
  4175bb:	jl     4175e6 <main@@Base+0x12c96>
  4175bd:	cmp    BYTE PTR [rbp+0x0],0x20
  4175c1:	jg     414428 <main@@Base+0xfad8>
  4175c7:	jne    4175e6 <main@@Base+0x12c96>
  4175c9:	cmp    BYTE PTR [rsi+0x2],0x20
  4175cd:	jle    4175e6 <main@@Base+0x12c96>
  4175cf:	add    rsi,0x2
  4175d3:	mov    rbp,rsi
  4175d6:	cmp    DWORD PTR [r15+0x20],0x0
  4175db:	jne    414433 <main@@Base+0xfae3>
  4175e1:	jmp    41754f <main@@Base+0x12bff>
  4175e6:	mov    rdi,r15
  4175e9:	mov    rsi,rbp
  4175ec:	mov    rdx,r12
  4175ef:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4175f4:	jmp    414425 <main@@Base+0xfad5>
  4175f9:	mov    rdi,r15
  4175fc:	mov    rsi,rbx
  4175ff:	mov    rdx,r12
  417602:	mov    ecx,0xa
  417607:	jmp    414420 <main@@Base+0xfad0>
  41760c:	mov    rbp,rbx
  41760f:	jmp    414433 <main@@Base+0xfae3>
  417614:	mov    rbx,rbp
  417617:	mov    r15,QWORD PTR [rsp+0x8]
  41761c:	mov    rdi,r15
  41761f:	mov    rsi,rbx
  417622:	jmp    417637 <main@@Base+0x12ce7>
  417624:	mov    rbx,rcx
  417627:	jmp    417631 <main@@Base+0x12ce1>
  417629:	mov    rbx,rcx
  41762c:	mov    r15,QWORD PTR [rsp+0x8]
  417631:	mov    rsi,rbx
  417634:	mov    rdi,r15
  417637:	mov    rdx,r12
  41763a:	mov    ecx,0x21
  41763f:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417644:	mov    rbp,rax
  417647:	jmp    414433 <main@@Base+0xfae3>
  41764c:	mov    rbp,rcx
  41764f:	mov    r15,QWORD PTR [rsp+0x8]
  417654:	mov    rsi,rbp
  417657:	jmp    417634 <main@@Base+0x12ce4>
  417659:	nop    DWORD PTR [rax+0x0]
  417660:	push   r14
  417662:	push   rbx
  417663:	mov    rbx,rdx
  417666:	sub    rbx,rsi
  417669:	cmp    rbx,0x8
  41766d:	jb     417676 <main@@Base+0x12d26>
  41766f:	movbe  rbx,QWORD PTR [rsi]
  417674:	jmp    4176e4 <main@@Base+0x12d94>
  417676:	dec    rbx
  417679:	cmp    rbx,0x6
  41767d:	ja     4177c6 <main@@Base+0x12e76>
  417683:	xor    eax,eax
  417685:	lea    r10,[rip+0xb21c]        # 4228a8 <_IO_stdin_used@@Base+0x8a8>
  41768c:	movsxd rbx,DWORD PTR [r10+rbx*4]
  417690:	add    rbx,r10
  417693:	jmp    rbx
  417695:	movsx  rax,BYTE PTR [rsi+0x6]
  41769a:	shl    rax,0x8
  41769e:	movsx  rbx,BYTE PTR [rsi+0x5]
  4176a3:	shl    rbx,0x10
  4176a7:	or     rax,rbx
  4176aa:	movsx  rbx,BYTE PTR [rsi+0x4]
  4176af:	shl    rbx,0x18
  4176b3:	or     rax,rbx
  4176b6:	movsx  rbx,BYTE PTR [rsi+0x3]
  4176bb:	shl    rbx,0x20
  4176bf:	or     rax,rbx
  4176c2:	movsx  rbx,BYTE PTR [rsi+0x2]
  4176c7:	shl    rbx,0x28
  4176cb:	or     rax,rbx
  4176ce:	movsx  rbx,BYTE PTR [rsi+0x1]
  4176d3:	shl    rbx,0x30
  4176d7:	or     rax,rbx
  4176da:	movzx  ebx,BYTE PTR [rsi]
  4176dd:	shl    rbx,0x38
  4176e1:	or     rbx,rax
  4176e4:	movabs rax,0x4368617261637465
  4176ee:	cmp    rbx,rax
  4176f1:	jne    4177c6 <main@@Base+0x12e76>
  4176f7:	lea    r10,[rsi+0x8]
  4176fb:	mov    rax,rdx
  4176fe:	sub    rax,r10
  417701:	cmp    rax,0x8
  417705:	jb     417717 <main@@Base+0x12dc7>
  417707:	movbe  rbx,QWORD PTR [r10]
  41770c:	cmp    rax,0x2
  417710:	jge    41778e <main@@Base+0x12e3e>
  417712:	jmp    4177c6 <main@@Base+0x12e76>
  417717:	lea    rbx,[rax-0x1]
  41771b:	cmp    rbx,0x6
  41771f:	ja     4177c6 <main@@Base+0x12e76>
  417725:	xor    r11d,r11d
  417728:	lea    r14,[rip+0xb195]        # 4228c4 <_IO_stdin_used@@Base+0x8c4>
  41772f:	movsxd rbx,DWORD PTR [r14+rbx*4]
  417733:	add    rbx,r14
  417736:	jmp    rbx
  417738:	movsx  r11,BYTE PTR [rsi+0xe]
  41773d:	shl    r11,0x8
  417741:	movsx  rbx,BYTE PTR [rsi+0xd]
  417746:	shl    rbx,0x10
  41774a:	or     r11,rbx
  41774d:	movsx  rbx,BYTE PTR [rsi+0xc]
  417752:	shl    rbx,0x18
  417756:	or     r11,rbx
  417759:	movsx  rbx,BYTE PTR [rsi+0xb]
  41775e:	shl    rbx,0x20
  417762:	or     r11,rbx
  417765:	movsx  rbx,BYTE PTR [rsi+0xa]
  41776a:	shl    rbx,0x28
  41776e:	or     r11,rbx
  417771:	movsx  rbx,BYTE PTR [rsi+0x9]
  417776:	shl    rbx,0x30
  41777a:	or     r11,rbx
  41777d:	movzx  ebx,BYTE PTR [r10]
  417781:	shl    rbx,0x38
  417785:	or     rbx,r11
  417788:	cmp    rax,0x2
  41778c:	jl     4177c6 <main@@Base+0x12e76>
  41778e:	movabs rax,0xff00000000000000
  417798:	and    rbx,rax
  41779b:	movabs rax,0x7200000000000000
  4177a5:	cmp    rbx,rax
  4177a8:	jne    4177c6 <main@@Base+0x12e76>
  4177aa:	lea    rax,[rsi+0xa]
  4177ae:	cmp    BYTE PTR [rsi+0x9],0x2e
  4177b2:	cmovne rax,r10
  4177b6:	cmp    rax,r10
  4177b9:	je     4177c6 <main@@Base+0x12e76>
  4177bb:	mov    rsi,rax
  4177be:	pop    rbx
  4177bf:	pop    r14
  4177c1:	jmp    414150 <main@@Base+0xf800>
  4177c6:	mov    rax,rsi
  4177c9:	pop    rbx
  4177ca:	pop    r14
  4177cc:	ret    
  4177cd:	nop    DWORD PTR [rax]
  4177d0:	push   rbp
  4177d1:	push   r15
  4177d3:	push   r14
  4177d5:	push   r13
  4177d7:	push   r12
  4177d9:	push   rbx
  4177da:	sub    rsp,0x18
  4177de:	mov    r12,rdx
  4177e1:	mov    rbx,rsi
  4177e4:	mov    r14,rdi
  4177e7:	mov    DWORD PTR [r8],0x0
  4177ee:	inc    cl
  4177f0:	cmp    cl,0xc
  4177f3:	ja     41785f <main@@Base+0x12f0f>
  4177f5:	mov    r15,r8
  4177f8:	movzx  eax,cl
  4177fb:	lea    rcx,[rip+0xb0de]        # 4228e0 <_IO_stdin_used@@Base+0x8e0>
  417802:	movsxd rax,DWORD PTR [rcx+rax*4]
  417806:	add    rax,rcx
  417809:	jmp    rax
  41780b:	mov    rdi,r14
  41780e:	mov    rsi,rbx
  417811:	mov    rdx,r12
  417814:	mov    rcx,r15
  417817:	call   420390 <flatcc_json_parser_build_string@@Base>
  41781c:	jmp    4179e6 <main@@Base+0x13096>
  417821:	mov    rdi,r14
  417824:	mov    rsi,rbx
  417827:	mov    rdx,r12
  41782a:	mov    rcx,r15
  41782d:	call   418590 <main@@Base+0x13c40>
  417832:	jmp    4179e6 <main@@Base+0x13096>
  417837:	mov    rax,r12
  41783a:	sub    rax,rbx
  41783d:	cmp    rax,0x4
  417841:	jl     41784f <main@@Base+0x12eff>
  417843:	cmp    DWORD PTR [rbx],0x6c6c756e
  417849:	je     417a1e <main@@Base+0x130ce>
  41784f:	mov    rdi,r14
  417852:	mov    rsi,rbx
  417855:	mov    rdx,r12
  417858:	mov    ecx,0x1a
  41785d:	jmp    417878 <main@@Base+0x12f28>
  41785f:	test   BYTE PTR [r14+0x10],0x1
  417864:	jne    41795c <main@@Base+0x1300c>
  41786a:	mov    rdi,r14
  41786d:	mov    rsi,rbx
  417870:	mov    rdx,r12
  417873:	mov    ecx,0xf
  417878:	add    rsp,0x18
  41787c:	pop    rbx
  41787d:	pop    r12
  41787f:	pop    r13
  417881:	pop    r14
  417883:	pop    r15
  417885:	pop    rbp
  417886:	jmp    41e300 <flatcc_json_parser_set_error@@Base>
  41788b:	mov    DWORD PTR [r15],0x0
  417892:	mov    rdi,QWORD PTR [r14]
  417895:	mov    esi,0x1
  41789a:	call   41af90 <flatcc_builder_start_table@@Base>
  41789f:	test   eax,eax
  4178a1:	jne    4179d3 <main@@Base+0x13083>
  4178a7:	cmp    rbx,r12
  4178aa:	je     4179b2 <main@@Base+0x13062>
  4178b0:	cmp    BYTE PTR [rbx],0x7b
  4178b3:	jne    4179b2 <main@@Base+0x13062>
  4178b9:	lea    rsi,[rbx+0x1]
  4178bd:	mov    rax,r12
  4178c0:	sub    rax,rsi
  4178c3:	cmp    rax,0x2
  4178c7:	jl     417e7c <main@@Base+0x1352c>
  4178cd:	cmp    BYTE PTR [rsi],0x20
  4178d0:	jg     417e8a <main@@Base+0x1353a>
  4178d6:	jne    417e7c <main@@Base+0x1352c>
  4178dc:	cmp    BYTE PTR [rbx+0x2],0x20
  4178e0:	jle    417e7c <main@@Base+0x1352c>
  4178e6:	add    rbx,0x2
  4178ea:	mov    rsi,rbx
  4178ed:	jmp    417e8a <main@@Base+0x1353a>
  4178f2:	mov    DWORD PTR [r15],0x0
  4178f9:	mov    rdi,QWORD PTR [r14]
  4178fc:	mov    esi,0x2
  417901:	mov    edx,0x2
  417906:	call   41a040 <flatcc_builder_start_struct@@Base>
  41790b:	test   rax,rax
  41790e:	je     4179aa <main@@Base+0x1305a>
  417914:	cmp    rbx,r12
  417917:	je     417978 <main@@Base+0x13028>
  417919:	cmp    BYTE PTR [rbx],0x7b
  41791c:	jne    417978 <main@@Base+0x13028>
  41791e:	mov    QWORD PTR [rsp+0x10],rax
  417923:	lea    rax,[rbx+0x1]
  417927:	mov    rcx,r12
  41792a:	sub    rcx,rax
  41792d:	cmp    rcx,0x2
  417931:	jl     417a24 <main@@Base+0x130d4>
  417937:	cmp    BYTE PTR [rax],0x20
  41793a:	jg     417a32 <main@@Base+0x130e2>
  417940:	jne    417a24 <main@@Base+0x130d4>
  417946:	cmp    BYTE PTR [rbx+0x2],0x20
  41794a:	jle    417a24 <main@@Base+0x130d4>
  417950:	add    rbx,0x2
  417954:	mov    rax,rbx
  417957:	jmp    417a32 <main@@Base+0x130e2>
  41795c:	mov    rdi,r14
  41795f:	mov    rsi,rbx
  417962:	mov    rdx,r12
  417965:	add    rsp,0x18
  417969:	pop    rbx
  41796a:	pop    r12
  41796c:	pop    r13
  41796e:	pop    r14
  417970:	pop    r15
  417972:	pop    rbp
  417973:	jmp    41ea80 <flatcc_json_parser_generic_json@@Base>
  417978:	mov    rdi,r14
  41797b:	mov    rsi,rbx
  41797e:	mov    rdx,r12
  417981:	mov    ecx,0x15
  417986:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41798b:	mov    rbx,rax
  41798e:	mov    rsi,r12
  417991:	cmp    rbx,r12
  417994:	je     4179ad <main@@Base+0x1305d>
  417996:	mov    rdi,QWORD PTR [r14]
  417999:	call   41a110 <flatcc_builder_end_struct@@Base>
  41799e:	mov    DWORD PTR [r15],eax
  4179a1:	mov    rsi,rbx
  4179a4:	test   eax,eax
  4179a6:	jne    4179e9 <main@@Base+0x13099>
  4179a8:	jmp    4179ad <main@@Base+0x1305d>
  4179aa:	mov    rsi,rbx
  4179ad:	mov    rdi,r14
  4179b0:	jmp    4179d9 <main@@Base+0x13089>
  4179b2:	mov    rdi,r14
  4179b5:	mov    rsi,rbx
  4179b8:	mov    rdx,r12
  4179bb:	mov    ecx,0x15
  4179c0:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4179c5:	mov    rbx,rax
  4179c8:	cmp    DWORD PTR [r14+0x20],0x0
  4179cd:	je     41848f <main@@Base+0x13b3f>
  4179d3:	mov    rdi,r14
  4179d6:	mov    rsi,rbx
  4179d9:	mov    rdx,r12
  4179dc:	mov    ecx,0x21
  4179e1:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4179e6:	mov    rbx,rax
  4179e9:	cmp    DWORD PTR [r14+0x20],0x0
  4179ee:	jne    417a0c <main@@Base+0x130bc>
  4179f0:	cmp    DWORD PTR [r15],0x0
  4179f4:	jne    417a0c <main@@Base+0x130bc>
  4179f6:	mov    rdi,r14
  4179f9:	mov    rsi,rbx
  4179fc:	mov    rdx,r12
  4179ff:	mov    ecx,0x21
  417a04:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417a09:	mov    rbx,rax
  417a0c:	mov    rax,rbx
  417a0f:	add    rsp,0x18
  417a13:	pop    rbx
  417a14:	pop    r12
  417a16:	pop    r13
  417a18:	pop    r14
  417a1a:	pop    r15
  417a1c:	pop    rbp
  417a1d:	ret    
  417a1e:	add    rbx,0x4
  417a22:	jmp    417a0c <main@@Base+0x130bc>
  417a24:	mov    rdi,r14
  417a27:	mov    rsi,rax
  417a2a:	mov    rdx,r12
  417a2d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417a32:	mov    rcx,r12
  417a35:	cmp    rax,r12
  417a38:	je     417a46 <main@@Base+0x130f6>
  417a3a:	cmp    BYTE PTR [rax],0x7d
  417a3d:	je     41840c <main@@Base+0x13abc>
  417a43:	mov    rcx,rax
  417a46:	movabs r13,0x686169725f6c656e
  417a50:	mov    rsi,r12
  417a53:	cmp    rcx,r12
  417a56:	je     417a93 <main@@Base+0x13143>
  417a58:	movzx  eax,BYTE PTR [rcx]
  417a5b:	cmp    al,0x2e
  417a5d:	je     417a70 <main@@Base+0x13120>
  417a5f:	cmp    al,0x22
  417a61:	jne    417a88 <main@@Base+0x13138>
  417a63:	inc    rcx
  417a66:	mov    DWORD PTR [r14+0x14],0x0
  417a6e:	jmp    417a90 <main@@Base+0x13140>
  417a70:	mov    rdi,r14
  417a73:	mov    rsi,rcx
  417a76:	mov    rdx,r12
  417a79:	mov    ecx,0x5
  417a7e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417a83:	mov    rsi,rax
  417a86:	jmp    417a93 <main@@Base+0x13143>
  417a88:	mov    DWORD PTR [r14+0x14],0x1
  417a90:	mov    rsi,rcx
  417a93:	mov    rax,r12
  417a96:	sub    rax,rsi
  417a99:	cmp    rax,0x8
  417a9d:	jb     417ab2 <main@@Base+0x13162>
  417a9f:	movbe  rax,QWORD PTR [rsi]
  417aa4:	cmp    rax,r13
  417aa7:	je     417b33 <main@@Base+0x131e3>
  417aad:	jmp    417b4e <main@@Base+0x131fe>
  417ab2:	dec    rax
  417ab5:	cmp    rax,0x6
  417ab9:	ja     417b4e <main@@Base+0x131fe>
  417abf:	lea    rcx,[rip+0xae4e]        # 422914 <_IO_stdin_used@@Base+0x914>
  417ac6:	mov    rdx,rcx
  417ac9:	movsxd rcx,DWORD PTR [rcx+rax*4]
  417acd:	add    rcx,rdx
  417ad0:	xor    r8d,r8d
  417ad3:	xor    eax,eax
  417ad5:	xor    edx,edx
  417ad7:	xor    edi,edi
  417ad9:	xor    ebp,ebp
  417adb:	xor    ebx,ebx
  417add:	jmp    rcx
  417adf:	movsx  r8,BYTE PTR [rsi+0x6]
  417ae4:	shl    r8,0x8
  417ae8:	movsx  rax,BYTE PTR [rsi+0x5]
  417aed:	shl    rax,0x10
  417af1:	or     rax,r8
  417af4:	movsx  rdx,BYTE PTR [rsi+0x4]
  417af9:	shl    rdx,0x18
  417afd:	or     rdx,rax
  417b00:	movsx  rdi,BYTE PTR [rsi+0x3]
  417b05:	shl    rdi,0x20
  417b09:	or     rdi,rdx
  417b0c:	movsx  rbp,BYTE PTR [rsi+0x2]
  417b11:	shl    rbp,0x28
  417b15:	or     rbp,rdi
  417b18:	movsx  rbx,BYTE PTR [rsi+0x1]
  417b1d:	shl    rbx,0x30
  417b21:	or     rbx,rbp
  417b24:	movzx  eax,BYTE PTR [rsi]
  417b27:	shl    rax,0x38
  417b2b:	or     rax,rbx
  417b2e:	cmp    rax,r13
  417b31:	jne    417b4e <main@@Base+0x131fe>
  417b33:	lea    r13,[rsi+0x8]
  417b37:	mov    rax,r12
  417b3a:	sub    rax,r13
  417b3d:	cmp    rax,0x8
  417b41:	jb     417b5e <main@@Base+0x1320e>
  417b43:	movbe  rcx,QWORD PTR [r13+0x0]
  417b49:	jmp    417bdb <main@@Base+0x1328b>
  417b4e:	mov    rdi,r14
  417b51:	mov    rdx,r12
  417b54:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  417b59:	jmp    417cd2 <main@@Base+0x13382>
  417b5e:	lea    rcx,[rax-0x1]
  417b62:	cmp    rcx,0x6
  417b66:	ja     417cba <main@@Base+0x1336a>
  417b6c:	lea    rdx,[rip+0xadbd]        # 422930 <_IO_stdin_used@@Base+0x930>
  417b73:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417b77:	add    rcx,rdx
  417b7a:	xor    r8d,r8d
  417b7d:	xor    r9d,r9d
  417b80:	xor    edi,edi
  417b82:	xor    ebp,ebp
  417b84:	xor    ebx,ebx
  417b86:	xor    edx,edx
  417b88:	jmp    rcx
  417b8a:	movsx  r8,BYTE PTR [rsi+0xe]
  417b8f:	shl    r8,0x8
  417b93:	movsx  r9,BYTE PTR [rsi+0xd]
  417b98:	shl    r9,0x10
  417b9c:	or     r9,r8
  417b9f:	movsx  rdi,BYTE PTR [rsi+0xc]
  417ba4:	shl    rdi,0x18
  417ba8:	or     rdi,r9
  417bab:	movsx  rbp,BYTE PTR [rsi+0xb]
  417bb0:	shl    rbp,0x20
  417bb4:	or     rbp,rdi
  417bb7:	movsx  rbx,BYTE PTR [rsi+0xa]
  417bbc:	shl    rbx,0x28
  417bc0:	or     rbx,rbp
  417bc3:	movsx  rdx,BYTE PTR [rsi+0x9]
  417bc8:	shl    rdx,0x30
  417bcc:	or     rdx,rbx
  417bcf:	movzx  ecx,BYTE PTR [r13+0x0]
  417bd4:	shl    rcx,0x38
  417bd8:	or     rcx,rdx
  417bdb:	movabs rdx,0xffffff0000000000
  417be5:	and    rcx,rdx
  417be8:	movabs rdx,0x6774680000000000
  417bf2:	cmp    rcx,rdx
  417bf5:	jne    417cba <main@@Base+0x1336a>
  417bfb:	cmp    rax,0x4
  417bff:	jl     417cba <main@@Base+0x1336a>
  417c05:	cmp    DWORD PTR [r14+0x14],0x0
  417c0a:	movzx  eax,BYTE PTR [rsi+0xb]
  417c0e:	je     417c2a <main@@Base+0x132da>
  417c10:	cmp    al,0x21
  417c12:	jl     417c1c <main@@Base+0x132cc>
  417c14:	cmp    al,0x3a
  417c16:	jne    417cba <main@@Base+0x1336a>
  417c1c:	add    rsi,0xb
  417c20:	mov    DWORD PTR [r14+0x14],0x0
  417c28:	jmp    417c36 <main@@Base+0x132e6>
  417c2a:	cmp    al,0x22
  417c2c:	jne    417cba <main@@Base+0x1336a>
  417c32:	add    rsi,0xc
  417c36:	mov    rax,r12
  417c39:	sub    rax,rsi
  417c3c:	cmp    rax,0x2
  417c40:	jl     417c5c <main@@Base+0x1330c>
  417c42:	cmp    BYTE PTR [rsi],0x20
  417c45:	jg     417c6a <main@@Base+0x1331a>
  417c47:	jne    417c5c <main@@Base+0x1330c>
  417c49:	cmp    BYTE PTR [rsi+0x1],0x20
  417c4d:	jle    417c5c <main@@Base+0x1330c>
  417c4f:	inc    rsi
  417c52:	cmp    rsi,r12
  417c55:	jne    417c73 <main@@Base+0x13323>
  417c57:	jmp    417d66 <main@@Base+0x13416>
  417c5c:	mov    rdi,r14
  417c5f:	mov    rdx,r12
  417c62:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417c67:	mov    rsi,rax
  417c6a:	cmp    rsi,r12
  417c6d:	je     417d66 <main@@Base+0x13416>
  417c73:	cmp    BYTE PTR [rsi],0x3a
  417c76:	jne    417d66 <main@@Base+0x13416>
  417c7c:	lea    rbp,[rsi+0x1]
  417c80:	mov    rax,r12
  417c83:	sub    rax,rbp
  417c86:	cmp    rax,0x2
  417c8a:	jl     417d78 <main@@Base+0x13428>
  417c90:	cmp    BYTE PTR [rbp+0x0],0x20
  417c94:	jg     417d89 <main@@Base+0x13439>
  417c9a:	jne    417d78 <main@@Base+0x13428>
  417ca0:	cmp    BYTE PTR [rsi+0x2],0x20
  417ca4:	jle    417d78 <main@@Base+0x13428>
  417caa:	add    rsi,0x2
  417cae:	mov    rbp,rsi
  417cb1:	cmp    r13,rbp
  417cb4:	jne    417d92 <main@@Base+0x13442>
  417cba:	mov    rdi,r14
  417cbd:	mov    rsi,r13
  417cc0:	mov    rdx,r12
  417cc3:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  417cc8:	movabs r13,0x686169725f6c656e
  417cd2:	mov    rcx,r12
  417cd5:	sub    rcx,rax
  417cd8:	cmp    rcx,0x2
  417cdc:	jl     417cf8 <main@@Base+0x133a8>
  417cde:	cmp    BYTE PTR [rax],0x20
  417ce1:	jg     417d06 <main@@Base+0x133b6>
  417ce3:	jne    417cf8 <main@@Base+0x133a8>
  417ce5:	cmp    BYTE PTR [rax+0x1],0x20
  417ce9:	jle    417cf8 <main@@Base+0x133a8>
  417ceb:	inc    rax
  417cee:	cmp    rax,r12
  417cf1:	jne    417d0f <main@@Base+0x133bf>
  417cf3:	jmp    4183fb <main@@Base+0x13aab>
  417cf8:	mov    rdi,r14
  417cfb:	mov    rsi,rax
  417cfe:	mov    rdx,r12
  417d01:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417d06:	cmp    rax,r12
  417d09:	je     4183fb <main@@Base+0x13aab>
  417d0f:	movzx  ecx,BYTE PTR [rax]
  417d12:	cmp    cl,0x2c
  417d15:	jne    418403 <main@@Base+0x13ab3>
  417d1b:	lea    rcx,[rax+0x1]
  417d1f:	mov    rdx,r12
  417d22:	sub    rdx,rcx
  417d25:	cmp    rdx,0x2
  417d29:	jl     417d3e <main@@Base+0x133ee>
  417d2b:	cmp    BYTE PTR [rcx],0x20
  417d2e:	jg     417d4f <main@@Base+0x133ff>
  417d30:	jne    417d3e <main@@Base+0x133ee>
  417d32:	cmp    BYTE PTR [rax+0x2],0x20
  417d36:	jle    417d3e <main@@Base+0x133ee>
  417d38:	add    rax,0x2
  417d3c:	jmp    417d4c <main@@Base+0x133fc>
  417d3e:	mov    rdi,r14
  417d41:	mov    rsi,rcx
  417d44:	mov    rdx,r12
  417d47:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417d4c:	mov    rcx,rax
  417d4f:	cmp    rcx,r12
  417d52:	je     418436 <main@@Base+0x13ae6>
  417d58:	cmp    BYTE PTR [rcx],0x7d
  417d5b:	jne    417a50 <main@@Base+0x13100>
  417d61:	jmp    418441 <main@@Base+0x13af1>
  417d66:	mov    rdi,r14
  417d69:	mov    rdx,r12
  417d6c:	mov    ecx,0x4
  417d71:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417d76:	jmp    417d86 <main@@Base+0x13436>
  417d78:	mov    rdi,r14
  417d7b:	mov    rsi,rbp
  417d7e:	mov    rdx,r12
  417d81:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417d86:	mov    rbp,rax
  417d89:	cmp    r13,rbp
  417d8c:	je     417cba <main@@Base+0x1336a>
  417d92:	mov    QWORD PTR [rsp+0x8],0x0
  417d9b:	mov    DWORD PTR [rsp+0x4],0x0
  417da3:	mov    WORD PTR [rsp],0x0
  417da9:	cmp    rbp,r12
  417dac:	je     417dec <main@@Base+0x1349c>
  417dae:	mov    rdi,r14
  417db1:	mov    rsi,rbp
  417db4:	mov    rdx,r12
  417db7:	lea    rcx,[rsp+0x4]
  417dbc:	lea    r8,[rsp+0x8]
  417dc1:	call   41fec0 <flatcc_json_parser_integer@@Base>
  417dc6:	cmp    rax,rbp
  417dc9:	movabs r13,0x686169725f6c656e
  417dd3:	je     417e02 <main@@Base+0x134b2>
  417dd5:	cmp    DWORD PTR [rsp+0x4],0x0
  417dda:	je     417e0e <main@@Base+0x134be>
  417ddc:	mov    rdi,r14
  417ddf:	mov    rsi,rax
  417de2:	mov    rdx,r12
  417de5:	mov    ecx,0x8
  417dea:	jmp    417e2a <main@@Base+0x134da>
  417dec:	xor    ecx,ecx
  417dee:	mov    rax,r12
  417df1:	movabs r13,0x686169725f6c656e
  417dfb:	cmp    rbp,rax
  417dfe:	jne    417e64 <main@@Base+0x13514>
  417e00:	jmp    417e36 <main@@Base+0x134e6>
  417e02:	xor    ecx,ecx
  417e04:	mov    rax,rbp
  417e07:	cmp    rbp,rax
  417e0a:	jne    417e64 <main@@Base+0x13514>
  417e0c:	jmp    417e36 <main@@Base+0x134e6>
  417e0e:	mov    rcx,QWORD PTR [rsp+0x8]
  417e13:	cmp    rcx,0x10000
  417e1a:	jb     417e71 <main@@Base+0x13521>
  417e1c:	mov    rdi,r14
  417e1f:	mov    rsi,rax
  417e22:	mov    rdx,r12
  417e25:	mov    ecx,0x7
  417e2a:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417e2f:	xor    ecx,ecx
  417e31:	cmp    rbp,rax
  417e34:	jne    417e64 <main@@Base+0x13514>
  417e36:	mov    rdi,r14
  417e39:	mov    rsi,rbp
  417e3c:	mov    rdx,r12
  417e3f:	lea    rcx,[rip+0x118da]        # 429720 <filename@@Base+0x650>
  417e46:	mov    r8,rsp
  417e49:	call   418b80 <main@@Base+0x14230>
  417e4e:	cmp    rax,rbp
  417e51:	je     41854f <main@@Base+0x13bff>
  417e57:	cmp    rax,r12
  417e5a:	je     41854f <main@@Base+0x13bff>
  417e60:	movzx  ecx,WORD PTR [rsp]
  417e64:	mov    rdx,QWORD PTR [rsp+0x10]
  417e69:	mov    WORD PTR [rdx],cx
  417e6c:	jmp    417cd2 <main@@Base+0x13382>
  417e71:	mov    WORD PTR [rsp],cx
  417e75:	cmp    rbp,rax
  417e78:	jne    417e64 <main@@Base+0x13514>
  417e7a:	jmp    417e36 <main@@Base+0x134e6>
  417e7c:	mov    rdi,r14
  417e7f:	mov    rdx,r12
  417e82:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  417e87:	mov    rsi,rax
  417e8a:	mov    rax,r12
  417e8d:	cmp    rsi,r12
  417e90:	je     417ede <main@@Base+0x1358e>
  417e92:	cmp    BYTE PTR [rsi],0x7d
  417e95:	jne    417edb <main@@Base+0x1358b>
  417e97:	lea    rbx,[rsi+0x1]
  417e9b:	mov    rax,r12
  417e9e:	sub    rax,rbx
  417ea1:	cmp    rax,0x2
  417ea5:	jl     418516 <main@@Base+0x13bc6>
  417eab:	cmp    BYTE PTR [rbx],0x20
  417eae:	jg     4179c8 <main@@Base+0x13078>
  417eb4:	jne    418516 <main@@Base+0x13bc6>
  417eba:	cmp    BYTE PTR [rsi+0x2],0x20
  417ebe:	jle    418516 <main@@Base+0x13bc6>
  417ec4:	add    rsi,0x2
  417ec8:	mov    rbx,rsi
  417ecb:	cmp    DWORD PTR [r14+0x20],0x0
  417ed0:	jne    4179d3 <main@@Base+0x13083>
  417ed6:	jmp    41848f <main@@Base+0x13b3f>
  417edb:	mov    rax,rsi
  417ede:	movabs r13,0x73776f72645f6174
  417ee8:	mov    rsi,r12
  417eeb:	cmp    rax,r12
  417eee:	je     417f2a <main@@Base+0x135da>
  417ef0:	movzx  ecx,BYTE PTR [rax]
  417ef3:	cmp    cl,0x2e
  417ef6:	je     417f0a <main@@Base+0x135ba>
  417ef8:	cmp    cl,0x22
  417efb:	jne    417f1f <main@@Base+0x135cf>
  417efd:	inc    rax
  417f00:	mov    DWORD PTR [r14+0x14],0x0
  417f08:	jmp    417f27 <main@@Base+0x135d7>
  417f0a:	mov    rdi,r14
  417f0d:	mov    rsi,rax
  417f10:	mov    rdx,r12
  417f13:	mov    ecx,0x5
  417f18:	call   41e300 <flatcc_json_parser_set_error@@Base>
  417f1d:	jmp    417f27 <main@@Base+0x135d7>
  417f1f:	mov    DWORD PTR [r14+0x14],0x1
  417f27:	mov    rsi,rax
  417f2a:	mov    rax,r12
  417f2d:	sub    rax,rsi
  417f30:	cmp    rax,0x8
  417f34:	jb     417f49 <main@@Base+0x135f9>
  417f36:	movbe  rax,QWORD PTR [rsi]
  417f3b:	cmp    rax,r13
  417f3e:	je     417fca <main@@Base+0x1367a>
  417f44:	jmp    417fe4 <main@@Base+0x13694>
  417f49:	dec    rax
  417f4c:	cmp    rax,0x6
  417f50:	ja     417fe4 <main@@Base+0x13694>
  417f56:	lea    rcx,[rip+0xa9ef]        # 42294c <_IO_stdin_used@@Base+0x94c>
  417f5d:	mov    rdx,rcx
  417f60:	movsxd rcx,DWORD PTR [rcx+rax*4]
  417f64:	add    rcx,rdx
  417f67:	xor    r8d,r8d
  417f6a:	xor    eax,eax
  417f6c:	xor    edx,edx
  417f6e:	xor    edi,edi
  417f70:	xor    ebp,ebp
  417f72:	xor    ebx,ebx
  417f74:	jmp    rcx
  417f76:	movsx  r8,BYTE PTR [rsi+0x6]
  417f7b:	shl    r8,0x8
  417f7f:	movsx  rax,BYTE PTR [rsi+0x5]
  417f84:	shl    rax,0x10
  417f88:	or     rax,r8
  417f8b:	movsx  rdx,BYTE PTR [rsi+0x4]
  417f90:	shl    rdx,0x18
  417f94:	or     rdx,rax
  417f97:	movsx  rdi,BYTE PTR [rsi+0x3]
  417f9c:	shl    rdi,0x20
  417fa0:	or     rdi,rdx
  417fa3:	movsx  rbp,BYTE PTR [rsi+0x2]
  417fa8:	shl    rbp,0x28
  417fac:	or     rbp,rdi
  417faf:	movsx  rbx,BYTE PTR [rsi+0x1]
  417fb4:	shl    rbx,0x30
  417fb8:	or     rbx,rbp
  417fbb:	movzx  eax,BYTE PTR [rsi]
  417fbe:	shl    rax,0x38
  417fc2:	or     rax,rbx
  417fc5:	cmp    rax,r13
  417fc8:	jne    417fe4 <main@@Base+0x13694>
  417fca:	lea    rax,[rsi+0x8]
  417fce:	mov    rcx,r12
  417fd1:	sub    rcx,rax
  417fd4:	cmp    rcx,0x8
  417fd8:	jb     417fec <main@@Base+0x1369c>
  417fda:	movbe  rcx,QWORD PTR [rax]
  417fdf:	jmp    418066 <main@@Base+0x13716>
  417fe4:	mov    rdi,r14
  417fe7:	jmp    418096 <main@@Base+0x13746>
  417fec:	dec    rcx
  417fef:	cmp    rcx,0x6
  417ff3:	ja     418090 <main@@Base+0x13740>
  417ff9:	lea    rdx,[rip+0xa968]        # 422968 <_IO_stdin_used@@Base+0x968>
  418000:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  418004:	add    rcx,rdx
  418007:	xor    r8d,r8d
  41800a:	xor    r9d,r9d
  41800d:	xor    edi,edi
  41800f:	xor    ebp,ebp
  418011:	xor    ebx,ebx
  418013:	xor    edx,edx
  418015:	jmp    rcx
  418017:	movsx  r8,BYTE PTR [rsi+0xe]
  41801c:	shl    r8,0x8
  418020:	movsx  r9,BYTE PTR [rsi+0xd]
  418025:	shl    r9,0x10
  418029:	or     r9,r8
  41802c:	movsx  rdi,BYTE PTR [rsi+0xc]
  418031:	shl    rdi,0x18
  418035:	or     rdi,r9
  418038:	movsx  rbp,BYTE PTR [rsi+0xb]
  41803d:	shl    rbp,0x20
  418041:	or     rbp,rdi
  418044:	movsx  rbx,BYTE PTR [rsi+0xa]
  418049:	shl    rbx,0x28
  41804d:	or     rbx,rbp
  418050:	movsx  rdx,BYTE PTR [rsi+0x9]
  418055:	shl    rdx,0x30
  418059:	or     rdx,rbx
  41805c:	movzx  ecx,BYTE PTR [rax]
  41805f:	shl    rcx,0x38
  418063:	or     rcx,rdx
  418066:	movabs rdx,0x7461636b5f64616d
  418070:	cmp    rcx,rdx
  418073:	jne    418090 <main@@Base+0x13740>
  418075:	lea    r13,[rsi+0x10]
  418079:	mov    rax,r12
  41807c:	sub    rax,r13
  41807f:	cmp    rax,0x8
  418083:	jb     4180a6 <main@@Base+0x13756>
  418085:	movbe  rcx,QWORD PTR [r13+0x0]
  41808b:	jmp    418123 <main@@Base+0x137d3>
  418090:	mov    rdi,r14
  418093:	mov    rsi,rax
  418096:	mov    rdx,r12
  418099:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41809e:	mov    rbp,rax
  4180a1:	jmp    41821c <main@@Base+0x138cc>
  4180a6:	lea    rcx,[rax-0x1]
  4180aa:	cmp    rcx,0x6
  4180ae:	ja     418201 <main@@Base+0x138b1>
  4180b4:	lea    rdx,[rip+0xa8c9]        # 422984 <_IO_stdin_used@@Base+0x984>
  4180bb:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4180bf:	add    rcx,rdx
  4180c2:	xor    r8d,r8d
  4180c5:	xor    r9d,r9d
  4180c8:	xor    edi,edi
  4180ca:	xor    ebp,ebp
  4180cc:	xor    ebx,ebx
  4180ce:	xor    edx,edx
  4180d0:	jmp    rcx
  4180d2:	movsx  r8,BYTE PTR [rsi+0x16]
  4180d7:	shl    r8,0x8
  4180db:	movsx  r9,BYTE PTR [rsi+0x15]
  4180e0:	shl    r9,0x10
  4180e4:	or     r9,r8
  4180e7:	movsx  rdi,BYTE PTR [rsi+0x14]
  4180ec:	shl    rdi,0x18
  4180f0:	or     rdi,r9
  4180f3:	movsx  rbp,BYTE PTR [rsi+0x13]
  4180f8:	shl    rbp,0x20
  4180fc:	or     rbp,rdi
  4180ff:	movsx  rbx,BYTE PTR [rsi+0x12]
  418104:	shl    rbx,0x28
  418108:	or     rbx,rbp
  41810b:	movsx  rdx,BYTE PTR [rsi+0x11]
  418110:	shl    rdx,0x30
  418114:	or     rdx,rbx
  418117:	movzx  ecx,BYTE PTR [r13+0x0]
  41811c:	shl    rcx,0x38
  418120:	or     rcx,rdx
  418123:	movabs rdx,0xffffff0000000000
  41812d:	and    rcx,rdx
  418130:	movabs rdx,0x6167650000000000
  41813a:	cmp    rcx,rdx
  41813d:	jne    418201 <main@@Base+0x138b1>
  418143:	cmp    rax,0x4
  418147:	jl     418201 <main@@Base+0x138b1>
  41814d:	cmp    DWORD PTR [r14+0x14],0x0
  418152:	movzx  eax,BYTE PTR [rsi+0x13]
  418156:	je     418172 <main@@Base+0x13822>
  418158:	cmp    al,0x21
  41815a:	jl     418164 <main@@Base+0x13814>
  41815c:	cmp    al,0x3a
  41815e:	jne    418201 <main@@Base+0x138b1>
  418164:	add    rsi,0x13
  418168:	mov    DWORD PTR [r14+0x14],0x0
  418170:	jmp    41817e <main@@Base+0x1382e>
  418172:	cmp    al,0x22
  418174:	jne    418201 <main@@Base+0x138b1>
  41817a:	add    rsi,0x14
  41817e:	mov    rax,r12
  418181:	sub    rax,rsi
  418184:	cmp    rax,0x2
  418188:	jl     4181a4 <main@@Base+0x13854>
  41818a:	cmp    BYTE PTR [rsi],0x20
  41818d:	jg     4181b2 <main@@Base+0x13862>
  41818f:	jne    4181a4 <main@@Base+0x13854>
  418191:	cmp    BYTE PTR [rsi+0x1],0x20
  418195:	jle    4181a4 <main@@Base+0x13854>
  418197:	inc    rsi
  41819a:	cmp    rsi,r12
  41819d:	jne    4181bb <main@@Base+0x1386b>
  41819f:	jmp    4182bc <main@@Base+0x1396c>
  4181a4:	mov    rdi,r14
  4181a7:	mov    rdx,r12
  4181aa:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4181af:	mov    rsi,rax
  4181b2:	cmp    rsi,r12
  4181b5:	je     4182bc <main@@Base+0x1396c>
  4181bb:	cmp    BYTE PTR [rsi],0x3a
  4181be:	jne    4182bc <main@@Base+0x1396c>
  4181c4:	lea    rbx,[rsi+0x1]
  4181c8:	mov    rax,r12
  4181cb:	sub    rax,rbx
  4181ce:	cmp    rax,0x2
  4181d2:	jl     4182ce <main@@Base+0x1397e>
  4181d8:	cmp    BYTE PTR [rbx],0x20
  4181db:	jg     4182df <main@@Base+0x1398f>
  4181e1:	jne    4182ce <main@@Base+0x1397e>
  4181e7:	cmp    BYTE PTR [rsi+0x2],0x20
  4181eb:	jle    4182ce <main@@Base+0x1397e>
  4181f1:	add    rsi,0x2
  4181f5:	mov    rbx,rsi
  4181f8:	cmp    r13,rbx
  4181fb:	jne    4182e8 <main@@Base+0x13998>
  418201:	mov    rdi,r14
  418204:	mov    rsi,r13
  418207:	mov    rdx,r12
  41820a:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41820f:	mov    rbp,rax
  418212:	movabs r13,0x73776f72645f6174
  41821c:	mov    rax,r12
  41821f:	sub    rax,rbp
  418222:	cmp    rax,0x2
  418226:	jl     418243 <main@@Base+0x138f3>
  418228:	cmp    BYTE PTR [rbp+0x0],0x20
  41822c:	jg     418254 <main@@Base+0x13904>
  41822e:	jne    418243 <main@@Base+0x138f3>
  418230:	cmp    BYTE PTR [rbp+0x1],0x20
  418234:	jle    418243 <main@@Base+0x138f3>
  418236:	inc    rbp
  418239:	cmp    rbp,r12
  41823c:	jne    41825d <main@@Base+0x1390d>
  41823e:	jmp    418481 <main@@Base+0x13b31>
  418243:	mov    rdi,r14
  418246:	mov    rsi,rbp
  418249:	mov    rdx,r12
  41824c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  418251:	mov    rbp,rax
  418254:	cmp    rbp,r12
  418257:	je     418481 <main@@Base+0x13b31>
  41825d:	movzx  eax,BYTE PTR [rbp+0x0]
  418261:	cmp    al,0x2c
  418263:	jne    4184a7 <main@@Base+0x13b57>
  418269:	lea    rax,[rbp+0x1]
  41826d:	mov    rcx,r12
  418270:	sub    rcx,rax
  418273:	cmp    rcx,0x2
  418277:	jl     418297 <main@@Base+0x13947>
  418279:	cmp    BYTE PTR [rax],0x20
  41827c:	jg     4182a5 <main@@Base+0x13955>
  41827e:	jne    418297 <main@@Base+0x13947>
  418280:	cmp    BYTE PTR [rbp+0x2],0x20
  418284:	jle    418297 <main@@Base+0x13947>
  418286:	add    rbp,0x2
  41828a:	mov    rax,rbp
  41828d:	cmp    rax,r12
  418290:	jne    4182ae <main@@Base+0x1395e>
  418292:	jmp    4184e4 <main@@Base+0x13b94>
  418297:	mov    rdi,r14
  41829a:	mov    rsi,rax
  41829d:	mov    rdx,r12
  4182a0:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4182a5:	cmp    rax,r12
  4182a8:	je     4184e4 <main@@Base+0x13b94>
  4182ae:	cmp    BYTE PTR [rax],0x7d
  4182b1:	jne    417ee8 <main@@Base+0x13598>
  4182b7:	jmp    4184ec <main@@Base+0x13b9c>
  4182bc:	mov    rdi,r14
  4182bf:	mov    rdx,r12
  4182c2:	mov    ecx,0x4
  4182c7:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4182cc:	jmp    4182dc <main@@Base+0x1398c>
  4182ce:	mov    rdi,r14
  4182d1:	mov    rsi,rbx
  4182d4:	mov    rdx,r12
  4182d7:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4182dc:	mov    rbx,rax
  4182df:	cmp    r13,rbx
  4182e2:	je     418201 <main@@Base+0x138b1>
  4182e8:	mov    QWORD PTR [rsp+0x8],0x0
  4182f1:	mov    DWORD PTR [rsp+0x4],0x0
  4182f9:	mov    DWORD PTR [rsp],0x0
  418300:	xor    r13d,r13d
  418303:	cmp    rbx,r12
  418306:	je     41834e <main@@Base+0x139fe>
  418308:	mov    rdi,r14
  41830b:	mov    rsi,rbx
  41830e:	mov    rdx,r12
  418311:	lea    rcx,[rsp+0x4]
  418316:	lea    r8,[rsp+0x8]
  41831b:	call   41fec0 <flatcc_json_parser_integer@@Base>
  418320:	cmp    rax,rbx
  418323:	je     418358 <main@@Base+0x13a08>
  418325:	mov    rbp,rax
  418328:	mov    rax,QWORD PTR [rsp+0x8]
  41832d:	cmp    DWORD PTR [rsp+0x4],0x0
  418332:	je     418362 <main@@Base+0x13a12>
  418334:	mov    ecx,0x80000001
  418339:	cmp    rax,rcx
  41833c:	jb     418387 <main@@Base+0x13a37>
  41833e:	mov    rdi,r14
  418341:	mov    rsi,rbp
  418344:	mov    rdx,r12
  418347:	mov    ecx,0x8
  41834c:	jmp    418378 <main@@Base+0x13a28>
  41834e:	mov    rbp,r12
  418351:	cmp    rbx,rbp
  418354:	jne    4183c6 <main@@Base+0x13a76>
  418356:	jmp    418395 <main@@Base+0x13a45>
  418358:	mov    rbp,rbx
  41835b:	cmp    rbx,rbp
  41835e:	jne    4183c6 <main@@Base+0x13a76>
  418360:	jmp    418395 <main@@Base+0x13a45>
  418362:	test   rax,0xffffffff80000000
  418368:	je     41838a <main@@Base+0x13a3a>
  41836a:	mov    rdi,r14
  41836d:	mov    rsi,rbp
  418370:	mov    rdx,r12
  418373:	mov    ecx,0x7
  418378:	call   41e300 <flatcc_json_parser_set_error@@Base>
  41837d:	mov    rbp,rax
  418380:	cmp    rbx,rbp
  418383:	jne    4183c6 <main@@Base+0x13a76>
  418385:	jmp    418395 <main@@Base+0x13a45>
  418387:	neg    rax
  41838a:	mov    DWORD PTR [rsp],eax
  41838d:	mov    r13d,eax
  418390:	cmp    rbx,rbp
  418393:	jne    4183c6 <main@@Base+0x13a76>
  418395:	mov    rdi,r14
  418398:	mov    rsi,rbx
  41839b:	mov    rdx,r12
  41839e:	lea    rcx,[rip+0x1135b]        # 429700 <filename@@Base+0x630>
  4183a5:	mov    r8,rsp
  4183a8:	call   4130e0 <main@@Base+0xe790>
  4183ad:	mov    rbp,rax
  4183b0:	cmp    rax,rbx
  4183b3:	je     418562 <main@@Base+0x13c12>
  4183b9:	cmp    rbp,r12
  4183bc:	je     418562 <main@@Base+0x13c12>
  4183c2:	mov    r13d,DWORD PTR [rsp]
  4183c6:	test   r13d,r13d
  4183c9:	jne    4183d6 <main@@Base+0x13a86>
  4183cb:	test   BYTE PTR [r14+0x10],0x2
  4183d0:	je     418212 <main@@Base+0x138c2>
  4183d6:	mov    rdi,QWORD PTR [r14]
  4183d9:	mov    edx,0x4
  4183de:	xor    esi,esi
  4183e0:	mov    ecx,0x4
  4183e5:	call   41c310 <flatcc_builder_table_add@@Base>
  4183ea:	test   rax,rax
  4183ed:	je     418562 <main@@Base+0x13c12>
  4183f3:	mov    DWORD PTR [rax],r13d
  4183f6:	jmp    418212 <main@@Base+0x138c2>
  4183fb:	mov    rsi,r12
  4183fe:	jmp    4179ad <main@@Base+0x1305d>
  418403:	cmp    cl,0x7d
  418406:	jne    418529 <main@@Base+0x13bd9>
  41840c:	lea    rbx,[rax+0x1]
  418410:	mov    rcx,r12
  418413:	sub    rcx,rbx
  418416:	cmp    rcx,0x2
  41841a:	jl     41846e <main@@Base+0x13b1e>
  41841c:	cmp    BYTE PTR [rbx],0x20
  41841f:	jg     41798e <main@@Base+0x1303e>
  418425:	jne    41846e <main@@Base+0x13b1e>
  418427:	cmp    BYTE PTR [rax+0x2],0x20
  41842b:	jle    41846e <main@@Base+0x13b1e>
  41842d:	add    rax,0x2
  418431:	jmp    41798b <main@@Base+0x1303b>
  418436:	mov    rdi,r14
  418439:	mov    rsi,r12
  41843c:	jmp    41852f <main@@Base+0x13bdf>
  418441:	lea    rbx,[rcx+0x1]
  418445:	mov    rax,r12
  418448:	sub    rax,rbx
  41844b:	cmp    rax,0x2
  41844f:	jl     41846e <main@@Base+0x13b1e>
  418451:	cmp    BYTE PTR [rbx],0x20
  418454:	jg     41798e <main@@Base+0x1303e>
  41845a:	jne    41846e <main@@Base+0x13b1e>
  41845c:	cmp    BYTE PTR [rcx+0x2],0x20
  418460:	jle    41846e <main@@Base+0x13b1e>
  418462:	add    rcx,0x2
  418466:	mov    rbx,rcx
  418469:	jmp    41798e <main@@Base+0x1303e>
  41846e:	mov    rdi,r14
  418471:	mov    rsi,rbx
  418474:	mov    rdx,r12
  418477:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41847c:	jmp    41798b <main@@Base+0x1303b>
  418481:	mov    rbx,r12
  418484:	cmp    DWORD PTR [r14+0x20],0x0
  418489:	jne    4179d3 <main@@Base+0x13083>
  41848f:	mov    rdi,QWORD PTR [r14]
  418492:	call   41b9a0 <flatcc_builder_end_table@@Base>
  418497:	mov    DWORD PTR [r15],eax
  41849a:	test   eax,eax
  41849c:	jne    4179e9 <main@@Base+0x13099>
  4184a2:	jmp    4179d3 <main@@Base+0x13083>
  4184a7:	cmp    al,0x7d
  4184a9:	jne    41853c <main@@Base+0x13bec>
  4184af:	lea    rbx,[rbp+0x1]
  4184b3:	mov    rax,r12
  4184b6:	sub    rax,rbx
  4184b9:	cmp    rax,0x2
  4184bd:	jl     418516 <main@@Base+0x13bc6>
  4184bf:	cmp    BYTE PTR [rbx],0x20
  4184c2:	jg     4179c8 <main@@Base+0x13078>
  4184c8:	jne    418516 <main@@Base+0x13bc6>
  4184ca:	cmp    BYTE PTR [rbp+0x2],0x20
  4184ce:	jle    418516 <main@@Base+0x13bc6>
  4184d0:	add    rbp,0x2
  4184d4:	mov    rbx,rbp
  4184d7:	cmp    DWORD PTR [r14+0x20],0x0
  4184dc:	jne    4179d3 <main@@Base+0x13083>
  4184e2:	jmp    41848f <main@@Base+0x13b3f>
  4184e4:	mov    rdi,r14
  4184e7:	mov    rsi,r12
  4184ea:	jmp    418542 <main@@Base+0x13bf2>
  4184ec:	lea    rbx,[rax+0x1]
  4184f0:	mov    rcx,r12
  4184f3:	sub    rcx,rbx
  4184f6:	cmp    rcx,0x2
  4184fa:	jl     418516 <main@@Base+0x13bc6>
  4184fc:	cmp    BYTE PTR [rbx],0x20
  4184ff:	jg     4179c8 <main@@Base+0x13078>
  418505:	jne    418516 <main@@Base+0x13bc6>
  418507:	cmp    BYTE PTR [rax+0x2],0x20
  41850b:	jle    418516 <main@@Base+0x13bc6>
  41850d:	add    rax,0x2
  418511:	jmp    4179c5 <main@@Base+0x13075>
  418516:	mov    rdi,r14
  418519:	mov    rsi,rbx
  41851c:	mov    rdx,r12
  41851f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  418524:	jmp    4179c5 <main@@Base+0x13075>
  418529:	mov    rdi,r14
  41852c:	mov    rsi,rax
  41852f:	mov    rdx,r12
  418532:	mov    ecx,0xa
  418537:	jmp    417986 <main@@Base+0x13036>
  41853c:	mov    rdi,r14
  41853f:	mov    rsi,rbp
  418542:	mov    rdx,r12
  418545:	mov    ecx,0xa
  41854a:	jmp    4179c0 <main@@Base+0x13070>
  41854f:	mov    rdi,r14
  418552:	mov    rsi,rax
  418555:	mov    rdx,r12
  418558:	mov    ecx,0x21
  41855d:	jmp    417986 <main@@Base+0x13036>
  418562:	mov    rbx,rbp
  418565:	jmp    4179d3 <main@@Base+0x13083>
  41856a:	nop    WORD PTR [rax+rax*1+0x0]
  418570:	inc    dil
  418573:	cmp    dil,0xc
  418577:	ja     418588 <main@@Base+0x13c38>
  418579:	movsx  rax,dil
  41857d:	lea    rcx,[rip+0xa454]        # 4229d8 <_IO_stdin_used@@Base+0x9d8>
  418584:	mov    eax,DWORD PTR [rcx+rax*4]
  418587:	ret    
  418588:	xor    eax,eax
  41858a:	ret    
  41858b:	nop    DWORD PTR [rax+rax*1+0x0]
  418590:	push   rbp
  418591:	push   r15
  418593:	push   r14
  418595:	push   r13
  418597:	push   r12
  418599:	push   rbx
  41859a:	sub    rsp,0x18
  41859e:	mov    r13,rcx
  4185a1:	mov    r15,rdx
  4185a4:	mov    rbx,rsi
  4185a7:	mov    r14,rdi
  4185aa:	mov    DWORD PTR [rcx],0x0
  4185b0:	mov    rdi,QWORD PTR [rdi]
  4185b3:	mov    esi,0x4
  4185b8:	mov    edx,0x4
  4185bd:	call   41a040 <flatcc_builder_start_struct@@Base>
  4185c2:	test   rax,rax
  4185c5:	je     418aa6 <main@@Base+0x14156>
  4185cb:	cmp    rbx,r15
  4185ce:	je     4185fe <main@@Base+0x13cae>
  4185d0:	cmp    BYTE PTR [rbx],0x7b
  4185d3:	jne    4185fe <main@@Base+0x13cae>
  4185d5:	mov    r12,rax
  4185d8:	lea    rax,[rbx+0x1]
  4185dc:	mov    rcx,r15
  4185df:	sub    rcx,rax
  4185e2:	cmp    rcx,0x2
  4185e6:	jl     41863c <main@@Base+0x13cec>
  4185e8:	cmp    BYTE PTR [rax],0x20
  4185eb:	jg     41864a <main@@Base+0x13cfa>
  4185ed:	jne    41863c <main@@Base+0x13cec>
  4185ef:	cmp    BYTE PTR [rbx+0x2],0x20
  4185f3:	jle    41863c <main@@Base+0x13cec>
  4185f5:	add    rbx,0x2
  4185f9:	mov    rax,rbx
  4185fc:	jmp    41864a <main@@Base+0x13cfa>
  4185fe:	mov    rdi,r14
  418601:	mov    rsi,rbx
  418604:	mov    rdx,r15
  418607:	mov    ecx,0x15
  41860c:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418611:	mov    rbp,rax
  418614:	mov    rbx,r15
  418617:	cmp    rbp,r15
  41861a:	je     418aa6 <main@@Base+0x14156>
  418620:	mov    rdi,QWORD PTR [r14]
  418623:	call   41a110 <flatcc_builder_end_struct@@Base>
  418628:	mov    DWORD PTR [r13+0x0],eax
  41862c:	mov    rbx,rbp
  41862f:	test   eax,eax
  418631:	jne    418abc <main@@Base+0x1416c>
  418637:	jmp    418aa6 <main@@Base+0x14156>
  41863c:	mov    rdi,r14
  41863f:	mov    rsi,rax
  418642:	mov    rdx,r15
  418645:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41864a:	mov    rcx,r15
  41864d:	cmp    rax,r15
  418650:	je     41865e <main@@Base+0x13d0e>
  418652:	cmp    BYTE PTR [rax],0x7d
  418655:	je     418ad3 <main@@Base+0x14183>
  41865b:	mov    rcx,rax
  41865e:	mov    QWORD PTR [rsp+0x8],r13
  418663:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41866d:	nop    DWORD PTR [rax]
  418670:	mov    rsi,r15
  418673:	cmp    rcx,r15
  418676:	je     4186bb <main@@Base+0x13d6b>
  418678:	movzx  eax,BYTE PTR [rcx]
  41867b:	cmp    al,0x2e
  41867d:	je     418690 <main@@Base+0x13d40>
  41867f:	cmp    al,0x22
  418681:	jne    4186b0 <main@@Base+0x13d60>
  418683:	inc    rcx
  418686:	mov    DWORD PTR [r14+0x14],0x0
  41868e:	jmp    4186b8 <main@@Base+0x13d68>
  418690:	mov    rdi,r14
  418693:	mov    rsi,rcx
  418696:	mov    rdx,r15
  418699:	mov    ecx,0x5
  41869e:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4186a3:	mov    rsi,rax
  4186a6:	jmp    4186bb <main@@Base+0x13d6b>
  4186a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4186b0:	mov    DWORD PTR [r14+0x14],0x1
  4186b8:	mov    rsi,rcx
  4186bb:	mov    rax,r15
  4186be:	sub    rax,rsi
  4186c1:	cmp    rax,0x8
  4186c5:	jb     4186d0 <main@@Base+0x13d80>
  4186c7:	movbe  rax,QWORD PTR [rsi]
  4186cc:	jmp    41874c <main@@Base+0x13dfc>
  4186ce:	xchg   ax,ax
  4186d0:	dec    rax
  4186d3:	cmp    rax,0x6
  4186d7:	ja     418780 <main@@Base+0x13e30>
  4186dd:	lea    rcx,[rip+0xa2bc]        # 4229a0 <_IO_stdin_used@@Base+0x9a0>
  4186e4:	mov    rdx,rcx
  4186e7:	movsxd rcx,DWORD PTR [rcx+rax*4]
  4186eb:	add    rcx,rdx
  4186ee:	xor    r8d,r8d
  4186f1:	xor    eax,eax
  4186f3:	xor    edx,edx
  4186f5:	xor    edi,edi
  4186f7:	xor    ebp,ebp
  4186f9:	xor    ebx,ebx
  4186fb:	jmp    rcx
  4186fd:	movsx  r8,BYTE PTR [rsi+0x6]
  418702:	shl    r8,0x8
  418706:	movsx  rax,BYTE PTR [rsi+0x5]
  41870b:	shl    rax,0x10
  41870f:	or     rax,r8
  418712:	movsx  rdx,BYTE PTR [rsi+0x4]
  418717:	shl    rdx,0x18
  41871b:	or     rdx,rax
  41871e:	movsx  rdi,BYTE PTR [rsi+0x3]
  418723:	shl    rdi,0x20
  418727:	or     rdi,rdx
  41872a:	movsx  rbp,BYTE PTR [rsi+0x2]
  41872f:	shl    rbp,0x28
  418733:	or     rbp,rdi
  418736:	movsx  rbx,BYTE PTR [rsi+0x1]
  41873b:	shl    rbx,0x30
  41873f:	or     rbx,rbp
  418742:	movzx  eax,BYTE PTR [rsi]
  418745:	shl    rax,0x38
  418749:	or     rax,rbx
  41874c:	movabs rcx,0x626f6f6b735f7265
  418756:	cmp    rax,rcx
  418759:	jne    418780 <main@@Base+0x13e30>
  41875b:	lea    r13,[rsi+0x8]
  41875f:	mov    rax,r15
  418762:	sub    rax,r13
  418765:	cmp    rax,0x8
  418769:	jb     418790 <main@@Base+0x13e40>
  41876b:	movbe  rcx,QWORD PTR [r13+0x0]
  418771:	jmp    41880d <main@@Base+0x13ebd>
  418776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418780:	mov    rdi,r14
  418783:	mov    rdx,r15
  418786:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41878b:	jmp    4188f3 <main@@Base+0x13fa3>
  418790:	lea    rcx,[rax-0x1]
  418794:	cmp    rcx,0x6
  418798:	ja     4188e0 <main@@Base+0x13f90>
  41879e:	lea    rdx,[rip+0xa217]        # 4229bc <_IO_stdin_used@@Base+0x9bc>
  4187a5:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4187a9:	add    rcx,rdx
  4187ac:	xor    r8d,r8d
  4187af:	xor    r9d,r9d
  4187b2:	xor    edi,edi
  4187b4:	xor    ebp,ebp
  4187b6:	xor    ebx,ebx
  4187b8:	xor    edx,edx
  4187ba:	jmp    rcx
  4187bc:	movsx  r8,BYTE PTR [rsi+0xe]
  4187c1:	shl    r8,0x8
  4187c5:	movsx  r9,BYTE PTR [rsi+0xd]
  4187ca:	shl    r9,0x10
  4187ce:	or     r9,r8
  4187d1:	movsx  rdi,BYTE PTR [rsi+0xc]
  4187d6:	shl    rdi,0x18
  4187da:	or     rdi,r9
  4187dd:	movsx  rbp,BYTE PTR [rsi+0xb]
  4187e2:	shl    rbp,0x20
  4187e6:	or     rbp,rdi
  4187e9:	movsx  rbx,BYTE PTR [rsi+0xa]
  4187ee:	shl    rbx,0x28
  4187f2:	or     rbx,rbp
  4187f5:	movsx  rdx,BYTE PTR [rsi+0x9]
  4187fa:	shl    rdx,0x30
  4187fe:	or     rdx,rbx
  418801:	movzx  ecx,BYTE PTR [r13+0x0]
  418806:	shl    rcx,0x38
  41880a:	or     rcx,rdx
  41880d:	shr    rcx,0x30
  418811:	cmp    rcx,0x6164
  418818:	jne    4188e0 <main@@Base+0x13f90>
  41881e:	cmp    rax,0x3
  418822:	jl     4188e0 <main@@Base+0x13f90>
  418828:	cmp    DWORD PTR [r14+0x14],0x0
  41882d:	movzx  eax,BYTE PTR [rsi+0xa]
  418831:	je     41884d <main@@Base+0x13efd>
  418833:	cmp    al,0x21
  418835:	jl     41883f <main@@Base+0x13eef>
  418837:	cmp    al,0x3a
  418839:	jne    4188e0 <main@@Base+0x13f90>
  41883f:	add    rsi,0xa
  418843:	mov    DWORD PTR [r14+0x14],0x0
  41884b:	jmp    418859 <main@@Base+0x13f09>
  41884d:	cmp    al,0x22
  41884f:	jne    4188e0 <main@@Base+0x13f90>
  418855:	add    rsi,0xb
  418859:	mov    rax,r15
  41885c:	sub    rax,rsi
  41885f:	cmp    rax,0x2
  418863:	jl     41887f <main@@Base+0x13f2f>
  418865:	cmp    BYTE PTR [rsi],0x20
  418868:	jg     41888d <main@@Base+0x13f3d>
  41886a:	jne    41887f <main@@Base+0x13f2f>
  41886c:	cmp    BYTE PTR [rsi+0x1],0x20
  418870:	jle    41887f <main@@Base+0x13f2f>
  418872:	inc    rsi
  418875:	cmp    rsi,r15
  418878:	jne    418896 <main@@Base+0x13f46>
  41887a:	jmp    418998 <main@@Base+0x14048>
  41887f:	mov    rdi,r14
  418882:	mov    rdx,r15
  418885:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41888a:	mov    rsi,rax
  41888d:	cmp    rsi,r15
  418890:	je     418998 <main@@Base+0x14048>
  418896:	cmp    BYTE PTR [rsi],0x3a
  418899:	jne    418998 <main@@Base+0x14048>
  41889f:	lea    rbp,[rsi+0x1]
  4188a3:	mov    rax,r15
  4188a6:	sub    rax,rbp
  4188a9:	cmp    rax,0x2
  4188ad:	jl     4189aa <main@@Base+0x1405a>
  4188b3:	cmp    BYTE PTR [rbp+0x0],0x20
  4188b7:	jg     4189bb <main@@Base+0x1406b>
  4188bd:	jne    4189aa <main@@Base+0x1405a>
  4188c3:	cmp    BYTE PTR [rsi+0x2],0x20
  4188c7:	jle    4189aa <main@@Base+0x1405a>
  4188cd:	add    rsi,0x2
  4188d1:	mov    rbp,rsi
  4188d4:	cmp    r13,rbp
  4188d7:	jne    4189c4 <main@@Base+0x14074>
  4188dd:	nop    DWORD PTR [rax]
  4188e0:	mov    rdi,r14
  4188e3:	mov    rsi,r13
  4188e6:	mov    rdx,r15
  4188e9:	call   41e8c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4188ee:	mov    r13,QWORD PTR [rsp+0x8]
  4188f3:	mov    rcx,r15
  4188f6:	sub    rcx,rax
  4188f9:	cmp    rcx,0x2
  4188fd:	jl     418920 <main@@Base+0x13fd0>
  4188ff:	cmp    BYTE PTR [rax],0x20
  418902:	jg     41892e <main@@Base+0x13fde>
  418904:	jne    418920 <main@@Base+0x13fd0>
  418906:	cmp    BYTE PTR [rax+0x1],0x20
  41890a:	jle    418920 <main@@Base+0x13fd0>
  41890c:	inc    rax
  41890f:	cmp    rax,r15
  418912:	jne    418937 <main@@Base+0x13fe7>
  418914:	jmp    418aa3 <main@@Base+0x14153>
  418919:	nop    DWORD PTR [rax+0x0]
  418920:	mov    rdi,r14
  418923:	mov    rsi,rax
  418926:	mov    rdx,r15
  418929:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41892e:	cmp    rax,r15
  418931:	je     418aa3 <main@@Base+0x14153>
  418937:	movzx  ecx,BYTE PTR [rax]
  41893a:	cmp    cl,0x2c
  41893d:	jne    418ace <main@@Base+0x1417e>
  418943:	lea    rcx,[rax+0x1]
  418947:	mov    rdx,r15
  41894a:	sub    rdx,rcx
  41894d:	cmp    rdx,0x2
  418951:	jl     418970 <main@@Base+0x14020>
  418953:	cmp    BYTE PTR [rcx],0x20
  418956:	jg     418981 <main@@Base+0x14031>
  418958:	jne    418970 <main@@Base+0x14020>
  41895a:	cmp    BYTE PTR [rax+0x2],0x20
  41895e:	jle    418970 <main@@Base+0x14020>
  418960:	add    rax,0x2
  418964:	jmp    41897e <main@@Base+0x1402e>
  418966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418970:	mov    rdi,r14
  418973:	mov    rsi,rcx
  418976:	mov    rdx,r15
  418979:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41897e:	mov    rcx,rax
  418981:	cmp    rcx,r15
  418984:	je     418afe <main@@Base+0x141ae>
  41898a:	cmp    BYTE PTR [rcx],0x7d
  41898d:	jne    418670 <main@@Base+0x13d20>
  418993:	jmp    418b06 <main@@Base+0x141b6>
  418998:	mov    rdi,r14
  41899b:	mov    rdx,r15
  41899e:	mov    ecx,0x4
  4189a3:	call   41e300 <flatcc_json_parser_set_error@@Base>
  4189a8:	jmp    4189b8 <main@@Base+0x14068>
  4189aa:	mov    rdi,r14
  4189ad:	mov    rsi,rbp
  4189b0:	mov    rdx,r15
  4189b3:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4189b8:	mov    rbp,rax
  4189bb:	cmp    r13,rbp
  4189be:	je     4188e0 <main@@Base+0x13f90>
  4189c4:	mov    QWORD PTR [rsp+0x10],0x0
  4189cd:	mov    DWORD PTR [rsp+0x4],0x0
  4189d5:	mov    DWORD PTR [rsp],0x0
  4189dc:	xor    r13d,r13d
  4189df:	cmp    rbp,r15
  4189e2:	je     418a27 <main@@Base+0x140d7>
  4189e4:	mov    rdi,r14
  4189e7:	mov    rsi,rbp
  4189ea:	mov    rdx,r15
  4189ed:	lea    rcx,[rsp+0x4]
  4189f2:	lea    r8,[rsp+0x10]
  4189f7:	call   41fec0 <flatcc_json_parser_integer@@Base>
  4189fc:	cmp    rax,rbp
  4189ff:	je     418a31 <main@@Base+0x140e1>
  418a01:	mov    rcx,QWORD PTR [rsp+0x10]
  418a06:	cmp    DWORD PTR [rsp+0x4],0x0
  418a0b:	je     418a3b <main@@Base+0x140eb>
  418a0d:	mov    edx,0x80000001
  418a12:	cmp    rcx,rdx
  418a15:	jb     418a5e <main@@Base+0x1410e>
  418a17:	mov    rdi,r14
  418a1a:	mov    rsi,rax
  418a1d:	mov    rdx,r15
  418a20:	mov    ecx,0x8
  418a25:	jmp    418a52 <main@@Base+0x14102>
  418a27:	mov    rax,r15
  418a2a:	cmp    rbp,rax
  418a2d:	jne    418a9a <main@@Base+0x1414a>
  418a2f:	jmp    418a6c <main@@Base+0x1411c>
  418a31:	mov    rax,rbp
  418a34:	cmp    rbp,rax
  418a37:	jne    418a9a <main@@Base+0x1414a>
  418a39:	jmp    418a6c <main@@Base+0x1411c>
  418a3b:	test   rcx,0xffffffff80000000
  418a42:	je     418a61 <main@@Base+0x14111>
  418a44:	mov    rdi,r14
  418a47:	mov    rsi,rax
  418a4a:	mov    rdx,r15
  418a4d:	mov    ecx,0x7
  418a52:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418a57:	cmp    rbp,rax
  418a5a:	jne    418a9a <main@@Base+0x1414a>
  418a5c:	jmp    418a6c <main@@Base+0x1411c>
  418a5e:	neg    rcx
  418a61:	mov    DWORD PTR [rsp],ecx
  418a64:	mov    r13d,ecx
  418a67:	cmp    rbp,rax
  418a6a:	jne    418a9a <main@@Base+0x1414a>
  418a6c:	mov    rdi,r14
  418a6f:	mov    rsi,rbp
  418a72:	mov    rdx,r15
  418a75:	lea    rcx,[rip+0x10cc4]        # 429740 <filename@@Base+0x670>
  418a7c:	mov    r8,rsp
  418a7f:	call   4130e0 <main@@Base+0xe790>
  418a84:	cmp    rax,rbp
  418a87:	je     418b5a <main@@Base+0x1420a>
  418a8d:	cmp    rax,r15
  418a90:	je     418b5a <main@@Base+0x1420a>
  418a96:	mov    r13d,DWORD PTR [rsp]
  418a9a:	mov    DWORD PTR [r12],r13d
  418a9e:	jmp    4188ee <main@@Base+0x13f9e>
  418aa3:	mov    rbx,r15
  418aa6:	mov    rdi,r14
  418aa9:	mov    rsi,rbx
  418aac:	mov    rdx,r15
  418aaf:	mov    ecx,0x21
  418ab4:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418ab9:	mov    rbp,rax
  418abc:	mov    rax,rbp
  418abf:	add    rsp,0x18
  418ac3:	pop    rbx
  418ac4:	pop    r12
  418ac6:	pop    r13
  418ac8:	pop    r14
  418aca:	pop    r15
  418acc:	pop    rbp
  418acd:	ret    
  418ace:	cmp    cl,0x7d
  418ad1:	jne    418b47 <main@@Base+0x141f7>
  418ad3:	lea    rbp,[rax+0x1]
  418ad7:	mov    rcx,r15
  418ada:	sub    rcx,rbp
  418add:	cmp    rcx,0x2
  418ae1:	jl     418b34 <main@@Base+0x141e4>
  418ae3:	cmp    BYTE PTR [rbp+0x0],0x20
  418ae7:	jg     418614 <main@@Base+0x13cc4>
  418aed:	jne    418b34 <main@@Base+0x141e4>
  418aef:	cmp    BYTE PTR [rax+0x2],0x20
  418af3:	jle    418b34 <main@@Base+0x141e4>
  418af5:	add    rax,0x2
  418af9:	jmp    418611 <main@@Base+0x13cc1>
  418afe:	mov    rdi,r14
  418b01:	mov    rsi,r15
  418b04:	jmp    418b4d <main@@Base+0x141fd>
  418b06:	lea    rbp,[rcx+0x1]
  418b0a:	mov    rax,r15
  418b0d:	sub    rax,rbp
  418b10:	cmp    rax,0x2
  418b14:	jl     418b34 <main@@Base+0x141e4>
  418b16:	cmp    BYTE PTR [rbp+0x0],0x20
  418b1a:	jg     418614 <main@@Base+0x13cc4>
  418b20:	jne    418b34 <main@@Base+0x141e4>
  418b22:	cmp    BYTE PTR [rcx+0x2],0x20
  418b26:	jle    418b34 <main@@Base+0x141e4>
  418b28:	add    rcx,0x2
  418b2c:	mov    rbp,rcx
  418b2f:	jmp    418614 <main@@Base+0x13cc4>
  418b34:	mov    rdi,r14
  418b37:	mov    rsi,rbp
  418b3a:	mov    rdx,r15
  418b3d:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  418b42:	jmp    418611 <main@@Base+0x13cc1>
  418b47:	mov    rdi,r14
  418b4a:	mov    rsi,rax
  418b4d:	mov    rdx,r15
  418b50:	mov    ecx,0xa
  418b55:	jmp    41860c <main@@Base+0x13cbc>
  418b5a:	mov    rdi,r14
  418b5d:	mov    rsi,rax
  418b60:	mov    rdx,r15
  418b63:	mov    ecx,0x21
  418b68:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418b6d:	mov    rbp,rax
  418b70:	mov    r13,QWORD PTR [rsp+0x8]
  418b75:	jmp    418614 <main@@Base+0x13cc4>
  418b7a:	nop    WORD PTR [rax+rax*1+0x0]
  418b80:	push   rbp
  418b81:	push   r15
  418b83:	push   r14
  418b85:	push   r13
  418b87:	push   r12
  418b89:	push   rbx
  418b8a:	sub    rsp,0x38
  418b8e:	mov    r15,r8
  418b91:	mov    rbp,rcx
  418b94:	mov    r12,rdx
  418b97:	mov    rbx,rsi
  418b9a:	mov    r14,rdi
  418b9d:	mov    WORD PTR [r8],0x0
  418ba3:	cmp    rsi,rdx
  418ba6:	je     418bbd <main@@Base+0x1426d>
  418ba8:	mov    al,BYTE PTR [rbx]
  418baa:	cmp    al,0x2e
  418bac:	je     418bce <main@@Base+0x1427e>
  418bae:	cmp    al,0x22
  418bb0:	jne    418bed <main@@Base+0x1429d>
  418bb2:	inc    rbx
  418bb5:	mov    DWORD PTR [r14+0x14],0x0
  418bbd:	cmp    DWORD PTR [r14+0x14],0x0
  418bc2:	je     418bfc <main@@Base+0x142ac>
  418bc4:	cmp    rbx,r12
  418bc7:	jne    418c3c <main@@Base+0x142ec>
  418bc9:	jmp    418d53 <main@@Base+0x14403>
  418bce:	mov    rdi,r14
  418bd1:	mov    rsi,rbx
  418bd4:	mov    rdx,r12
  418bd7:	mov    ecx,0x5
  418bdc:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418be1:	mov    rbx,rax
  418be4:	cmp    DWORD PTR [r14+0x14],0x0
  418be9:	jne    418bc4 <main@@Base+0x14274>
  418beb:	jmp    418bfc <main@@Base+0x142ac>
  418bed:	mov    DWORD PTR [r14+0x14],0x1
  418bf5:	cmp    DWORD PTR [r14+0x14],0x0
  418bfa:	jne    418bc4 <main@@Base+0x14274>
  418bfc:	mov    rax,r12
  418bff:	sub    rax,rbx
  418c02:	cmp    rax,0x2
  418c06:	jl     418c22 <main@@Base+0x142d2>
  418c08:	cmp    BYTE PTR [rbx],0x20
  418c0b:	jg     418bc4 <main@@Base+0x14274>
  418c0d:	jne    418c22 <main@@Base+0x142d2>
  418c0f:	cmp    BYTE PTR [rbx+0x1],0x20
  418c13:	jle    418c22 <main@@Base+0x142d2>
  418c15:	inc    rbx
  418c18:	cmp    rbx,r12
  418c1b:	jne    418c3c <main@@Base+0x142ec>
  418c1d:	jmp    418d53 <main@@Base+0x14403>
  418c22:	mov    rdi,r14
  418c25:	mov    rsi,rbx
  418c28:	mov    rdx,r12
  418c2b:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  418c30:	mov    rbx,rax
  418c33:	cmp    rbx,r12
  418c36:	je     418d53 <main@@Base+0x14403>
  418c3c:	lea    rax,[rbp+0x8]
  418c40:	mov    DWORD PTR [rsp+0x8],0x0
  418c48:	mov    DWORD PTR [rsp+0xc],0x0
  418c50:	mov    QWORD PTR [rsp+0x20],r15
  418c55:	mov    QWORD PTR [rsp+0x18],rbp
  418c5a:	mov    QWORD PTR [rsp+0x28],rax
  418c5f:	mov    rbp,QWORD PTR [rbp+0x0]
  418c63:	mov    r15,rax
  418c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c70:	mov    rdi,r14
  418c73:	mov    rsi,rbx
  418c76:	mov    rdx,r12
  418c79:	lea    rcx,[rsp+0x14]
  418c7e:	lea    r8,[rsp+0x30]
  418c83:	lea    r9,[rsp+0x10]
  418c88:	call   rbp
  418c8a:	cmp    rax,r12
  418c8d:	je     418d53 <main@@Base+0x14403>
  418c93:	mov    r13,rax
  418c96:	cmp    rax,rbx
  418c99:	jne    418cb0 <main@@Base+0x14360>
  418c9b:	mov    rbp,QWORD PTR [r15]
  418c9e:	add    r15,0x8
  418ca2:	test   rbp,rbp
  418ca5:	jne    418c70 <main@@Base+0x14320>
  418ca7:	jmp    418d58 <main@@Base+0x14408>
  418cac:	nop    DWORD PTR [rax+0x0]
  418cb0:	mov    ebx,DWORD PTR [rsp+0xc]
  418cb4:	test   ebx,ebx
  418cb6:	je     418cc3 <main@@Base+0x14373>
  418cb8:	cmp    DWORD PTR [r14+0x14],0x0
  418cbd:	jne    418d80 <main@@Base+0x14430>
  418cc3:	cmp    DWORD PTR [rsp+0x14],0x0
  418cc8:	je     418cee <main@@Base+0x1439e>
  418cca:	mov    rdi,r14
  418ccd:	mov    rsi,r13
  418cd0:	mov    rdx,r12
  418cd3:	mov    ecx,0x8
  418cd8:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418cdd:	mov    r15,QWORD PTR [rsp+0x20]
  418ce2:	mov    rbp,QWORD PTR [rsp+0x18]
  418ce7:	cmp    rax,r12
  418cea:	jne    418d30 <main@@Base+0x143e0>
  418cec:	jmp    418d53 <main@@Base+0x14403>
  418cee:	mov    rax,QWORD PTR [rsp+0x30]
  418cf3:	cmp    rax,0x10000
  418cf9:	mov    r15,QWORD PTR [rsp+0x20]
  418cfe:	mov    rbp,QWORD PTR [rsp+0x18]
  418d03:	jb     418d1f <main@@Base+0x143cf>
  418d05:	mov    rdi,r14
  418d08:	mov    rsi,r13
  418d0b:	mov    rdx,r12
  418d0e:	mov    ecx,0x7
  418d13:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418d18:	cmp    rax,r12
  418d1b:	jne    418d30 <main@@Base+0x143e0>
  418d1d:	jmp    418d53 <main@@Base+0x14403>
  418d1f:	mov    DWORD PTR [rsp+0x8],eax
  418d23:	mov    rax,r13
  418d26:	cmp    rax,r12
  418d29:	je     418d53 <main@@Base+0x14403>
  418d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  418d30:	inc    ebx
  418d32:	mov    DWORD PTR [rsp+0xc],ebx
  418d36:	mov    eax,DWORD PTR [rsp+0x8]
  418d3a:	add    WORD PTR [r15],ax
  418d3e:	cmp    DWORD PTR [rsp+0x10],0x0
  418d43:	mov    rbx,r13
  418d46:	mov    rax,QWORD PTR [rsp+0x28]
  418d4b:	jne    418c5f <main@@Base+0x1430f>
  418d51:	jmp    418d6e <main@@Base+0x1441e>
  418d53:	mov    r13,r12
  418d56:	jmp    418d6e <main@@Base+0x1441e>
  418d58:	mov    rdi,r14
  418d5b:	mov    rsi,rbx
  418d5e:	mov    rdx,r12
  418d61:	mov    ecx,0x17
  418d66:	call   41e300 <flatcc_json_parser_set_error@@Base>
  418d6b:	mov    r13,rax
  418d6e:	mov    rax,r13
  418d71:	add    rsp,0x38
  418d75:	pop    rbx
  418d76:	pop    r12
  418d78:	pop    r13
  418d7a:	pop    r14
  418d7c:	pop    r15
  418d7e:	pop    rbp
  418d7f:	ret    
  418d80:	mov    rdi,r14
  418d83:	mov    rsi,r13
  418d86:	mov    rdx,r12
  418d89:	mov    ecx,0xe
  418d8e:	jmp    418d66 <main@@Base+0x14416>

0000000000418d90 <flatcc_builder_default_alloc@@Base>:
  418d90:	push   rbp
  418d91:	push   r15
  418d93:	push   r14
  418d95:	push   r12
  418d97:	push   rbx
  418d98:	mov    rbx,rsi
  418d9b:	test   rdx,rdx
  418d9e:	je     418dc8 <flatcc_builder_default_alloc@@Base+0x38>
  418da0:	mov    r14d,ecx
  418da3:	dec    r8d
  418da6:	cmp    r8d,0x6
  418daa:	ja     418de6 <flatcc_builder_default_alloc@@Base+0x56>
  418dac:	mov    eax,0x100
  418db1:	lea    rcx,[rip+0x9f48]        # 422d00 <_IO_stdin_used@@Base+0xd00>
  418db8:	movsxd rsi,DWORD PTR [rcx+r8*4]
  418dbc:	add    rsi,rcx
  418dbf:	jmp    rsi
  418dc1:	mov    eax,0x120
  418dc6:	jmp    418e00 <flatcc_builder_default_alloc@@Base+0x70>
  418dc8:	mov    rdi,QWORD PTR [rbx]
  418dcb:	xor    r15d,r15d
  418dce:	test   rdi,rdi
  418dd1:	je     418e5f <flatcc_builder_default_alloc@@Base+0xcf>
  418dd7:	call   404030 <free@plt>
  418ddc:	vxorps xmm0,xmm0,xmm0
  418de0:	vmovups XMMWORD PTR [rbx],xmm0
  418de4:	jmp    418e5f <flatcc_builder_default_alloc@@Base+0xcf>
  418de6:	mov    eax,0x20
  418deb:	jmp    418e00 <flatcc_builder_default_alloc@@Base+0x70>
  418ded:	mov    rax,rdx
  418df0:	jmp    418e00 <flatcc_builder_default_alloc@@Base+0x70>
  418df2:	mov    eax,0x40
  418df7:	nop    WORD PTR [rax+rax*1+0x0]
  418e00:	mov    rbp,rax
  418e03:	add    rax,rax
  418e06:	cmp    rbp,rdx
  418e09:	jb     418e00 <flatcc_builder_default_alloc@@Base+0x70>
  418e0b:	mov    rax,QWORD PTR [rbx+0x8]
  418e0f:	xor    r15d,r15d
  418e12:	cmp    rax,rdx
  418e15:	jb     418e1f <flatcc_builder_default_alloc@@Base+0x8f>
  418e17:	shr    rax,1
  418e1a:	cmp    rax,rbp
  418e1d:	jae    418e5f <flatcc_builder_default_alloc@@Base+0xcf>
  418e1f:	mov    rdi,QWORD PTR [rbx]
  418e22:	mov    rsi,rbp
  418e25:	call   404130 <realloc@plt>
  418e2a:	test   rax,rax
  418e2d:	je     418e59 <flatcc_builder_default_alloc@@Base+0xc9>
  418e2f:	mov    r12,rax
  418e32:	test   r14d,r14d
  418e35:	je     418e50 <flatcc_builder_default_alloc@@Base+0xc0>
  418e37:	mov    rax,QWORD PTR [rbx+0x8]
  418e3b:	mov    rdx,rbp
  418e3e:	sub    rdx,rax
  418e41:	jbe    418e50 <flatcc_builder_default_alloc@@Base+0xc0>
  418e43:	mov    rdi,r12
  418e46:	add    rdi,rax
  418e49:	xor    esi,esi
  418e4b:	call   4040a0 <memset@plt>
  418e50:	mov    QWORD PTR [rbx],r12
  418e53:	mov    QWORD PTR [rbx+0x8],rbp
  418e57:	jmp    418e5f <flatcc_builder_default_alloc@@Base+0xcf>
  418e59:	mov    r15d,0xffffffff
  418e5f:	mov    eax,r15d
  418e62:	pop    rbx
  418e63:	pop    r12
  418e65:	pop    r14
  418e67:	pop    r15
  418e69:	pop    rbp
  418e6a:	ret    
  418e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418e70 <flatcc_builder_flush_vtable_cache@@Base>:
  418e70:	push   rbx
  418e71:	cmp    QWORD PTR [rdi+0xd8],0x0
  418e79:	je     418ea4 <flatcc_builder_flush_vtable_cache@@Base+0x34>
  418e7b:	mov    rbx,rdi
  418e7e:	mov    rdi,QWORD PTR [rdi+0xa8]
  418e85:	mov    rdx,QWORD PTR [rbx+0xb0]
  418e8c:	xor    esi,esi
  418e8e:	call   4040a0 <memset@plt>
  418e93:	movabs rax,0x1000000000
  418e9d:	mov    QWORD PTR [rbx+0xe0],rax
  418ea4:	pop    rbx
  418ea5:	ret    
  418ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418eb0 <flatcc_builder_custom_init@@Base>:
  418eb0:	vxorps xmm0,xmm0,xmm0
  418eb4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  418ebc:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  418ec4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  418ecc:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  418ed4:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  418edc:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  418ee4:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  418eec:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  418ef4:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  418ef9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  418efe:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  418f03:	vmovups YMMWORD PTR [rdi],ymm0
  418f07:	mov    QWORD PTR [rdi+0x180],0x0
  418f12:	test   rsi,rsi
  418f15:	je     418f39 <flatcc_builder_custom_init@@Base+0x89>
  418f17:	test   rcx,rcx
  418f1a:	jne    418f23 <flatcc_builder_custom_init@@Base+0x73>
  418f1c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 418d90 <flatcc_builder_default_alloc@@Base>
  418f23:	mov    QWORD PTR [rdi+0x40],r8
  418f27:	mov    QWORD PTR [rdi+0x50],rcx
  418f2b:	mov    QWORD PTR [rdi+0x38],rdx
  418f2f:	mov    QWORD PTR [rdi+0x48],rsi
  418f33:	xor    eax,eax
  418f35:	vzeroupper 
  418f38:	ret    
  418f39:	mov    DWORD PTR [rdi+0x128],0x1
  418f43:	lea    rdx,[rdi+0x130]
  418f4a:	lea    rsi,[rip+0x4a6f]        # 41d9c0 <flatcc_emitter@@Base>
  418f51:	test   rcx,rcx
  418f54:	je     418f1c <flatcc_builder_custom_init@@Base+0x6c>
  418f56:	jmp    418f23 <flatcc_builder_custom_init@@Base+0x73>
  418f58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418f60 <flatcc_builder_init@@Base>:
  418f60:	vxorps xmm0,xmm0,xmm0
  418f64:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  418f6c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  418f71:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  418f76:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  418f7e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  418f86:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  418f8e:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  418f96:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  418f9e:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  418fa6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  418fae:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  418fb3:	vmovups YMMWORD PTR [rdi],ymm0
  418fb7:	mov    QWORD PTR [rdi+0x180],0x0
  418fc2:	mov    DWORD PTR [rdi+0x128],0x1
  418fcc:	lea    rax,[rdi+0x130]
  418fd3:	mov    QWORD PTR [rdi+0x40],0x0
  418fdb:	lea    rcx,[rip+0xfffffffffffffdae]        # 418d90 <flatcc_builder_default_alloc@@Base>
  418fe2:	mov    QWORD PTR [rdi+0x50],rcx
  418fe6:	mov    QWORD PTR [rdi+0x38],rax
  418fea:	lea    rax,[rip+0x49cf]        # 41d9c0 <flatcc_emitter@@Base>
  418ff1:	mov    QWORD PTR [rdi+0x48],rax
  418ff5:	xor    eax,eax
  418ff7:	vzeroupper 
  418ffa:	ret    
  418ffb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419000 <flatcc_builder_custom_reset@@Base>:
  419000:	push   rbp
  419001:	push   r15
  419003:	push   r14
  419005:	push   r12
  419007:	push   rbx
  419008:	mov    r15d,edx
  41900b:	mov    r14d,esi
  41900e:	mov    r12,rdi
  419011:	lea    rbp,[rdi+0x58]
  419015:	xor    ebx,ebx
  419017:	jmp    419038 <flatcc_builder_custom_reset@@Base+0x38>
  419019:	nop    DWORD PTR [rax+0x0]
  419020:	cmp    QWORD PTR [rbp+0x8],0x0
  419025:	jne    419136 <flatcc_builder_custom_reset@@Base+0x136>
  41902b:	inc    rbx
  41902e:	add    rbp,0x10
  419032:	cmp    rbx,0x8
  419036:	je     41907f <flatcc_builder_custom_reset@@Base+0x7f>
  419038:	mov    rdi,QWORD PTR [rbp+0x0]
  41903c:	test   rdi,rdi
  41903f:	je     419020 <flatcc_builder_custom_reset@@Base+0x20>
  419041:	test   r15d,r15d
  419044:	je     419072 <flatcc_builder_custom_reset@@Base+0x72>
  419046:	cmp    rbx,0x5
  41904a:	je     419072 <flatcc_builder_custom_reset@@Base+0x72>
  41904c:	mov    rdi,QWORD PTR [r12+0x40]
  419051:	mov    edx,0x1
  419056:	mov    rsi,rbp
  419059:	mov    ecx,0x1
  41905e:	mov    r8d,ebx
  419061:	call   QWORD PTR [r12+0x50]
  419066:	test   eax,eax
  419068:	jne    419126 <flatcc_builder_custom_reset@@Base+0x126>
  41906e:	mov    rdi,QWORD PTR [rbp+0x0]
  419072:	mov    rdx,QWORD PTR [rbp+0x8]
  419076:	xor    esi,esi
  419078:	call   4040a0 <memset@plt>
  41907d:	jmp    41902b <flatcc_builder_custom_reset@@Base+0x2b>
  41907f:	mov    DWORD PTR [r12+0xe0],0x0
  41908b:	cmp    DWORD PTR [r12+0xe4],0x0
  419094:	je     4190a2 <flatcc_builder_custom_reset@@Base+0xa2>
  419096:	mov    DWORD PTR [r12+0xe4],0x10
  4190a2:	mov    WORD PTR [r12+0xe8],0x0
  4190ad:	mov    QWORD PTR [r12+0xf0],0x0
  4190b9:	mov    QWORD PTR [r12+0x20],0x0
  4190c2:	vxorps xmm0,xmm0,xmm0
  4190c6:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  4190d0:	mov    rax,QWORD PTR [r12+0x58]
  4190d5:	mov    rcx,QWORD PTR [r12+0x68]
  4190da:	mov    QWORD PTR [r12+0x18],rcx
  4190df:	mov    rcx,QWORD PTR [r12+0x88]
  4190e7:	mov    QWORD PTR [r12],rcx
  4190eb:	mov    QWORD PTR [r12+0x8],rax
  4190f0:	mov    QWORD PTR [r12+0x30],0x0
  4190f9:	test   r14d,r14d
  4190fc:	je     419108 <flatcc_builder_custom_reset@@Base+0x108>
  4190fe:	vmovups XMMWORD PTR [r12+0x118],xmm0
  419108:	xor    ebx,ebx
  41910a:	cmp    DWORD PTR [r12+0x128],0x0
  419113:	je     41912b <flatcc_builder_custom_reset@@Base+0x12b>
  419115:	add    r12,0x130
  41911c:	mov    rdi,r12
  41911f:	call   41d840 <flatcc_emitter_reset@@Base>
  419124:	jmp    41912b <flatcc_builder_custom_reset@@Base+0x12b>
  419126:	mov    ebx,0xffffffff
  41912b:	mov    eax,ebx
  41912d:	pop    rbx
  41912e:	pop    r12
  419130:	pop    r14
  419132:	pop    r15
  419134:	pop    rbp
  419135:	ret    
  419136:	lea    rdi,[rip+0x9e53]        # 422f90 <flatcc_builder_padding_base@@Base+0x270>
  41913d:	lea    rsi,[rip+0x9e5e]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419144:	lea    rcx,[rip+0x9eb7]        # 423002 <flatcc_builder_padding_base@@Base+0x2e2>
  41914b:	mov    edx,0x1b2
  419150:	call   404090 <__assert_fail@plt>
  419155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41915f:	nop

0000000000419160 <flatcc_builder_reset@@Base>:
  419160:	push   rbx
  419161:	mov    rbx,rdi
  419164:	mov    rdi,QWORD PTR [rdi+0x58]
  419168:	mov    rdx,QWORD PTR [rbx+0x60]
  41916c:	test   rdi,rdi
  41916f:	je     41917a <flatcc_builder_reset@@Base+0x1a>
  419171:	xor    esi,esi
  419173:	call   4040a0 <memset@plt>
  419178:	jmp    419183 <flatcc_builder_reset@@Base+0x23>
  41917a:	test   rdx,rdx
  41917d:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  419183:	mov    rdi,QWORD PTR [rbx+0x68]
  419187:	mov    rdx,QWORD PTR [rbx+0x70]
  41918b:	test   rdi,rdi
  41918e:	je     419199 <flatcc_builder_reset@@Base+0x39>
  419190:	xor    esi,esi
  419192:	call   4040a0 <memset@plt>
  419197:	jmp    4191a2 <flatcc_builder_reset@@Base+0x42>
  419199:	test   rdx,rdx
  41919c:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  4191a2:	mov    rdi,QWORD PTR [rbx+0x78]
  4191a6:	mov    rdx,QWORD PTR [rbx+0x80]
  4191ad:	test   rdi,rdi
  4191b0:	je     4191bb <flatcc_builder_reset@@Base+0x5b>
  4191b2:	xor    esi,esi
  4191b4:	call   4040a0 <memset@plt>
  4191b9:	jmp    4191c4 <flatcc_builder_reset@@Base+0x64>
  4191bb:	test   rdx,rdx
  4191be:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  4191c4:	mov    rdi,QWORD PTR [rbx+0x88]
  4191cb:	mov    rdx,QWORD PTR [rbx+0x90]
  4191d2:	test   rdi,rdi
  4191d5:	je     4191e0 <flatcc_builder_reset@@Base+0x80>
  4191d7:	xor    esi,esi
  4191d9:	call   4040a0 <memset@plt>
  4191de:	jmp    4191e9 <flatcc_builder_reset@@Base+0x89>
  4191e0:	test   rdx,rdx
  4191e3:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  4191e9:	mov    rdi,QWORD PTR [rbx+0x98]
  4191f0:	mov    rdx,QWORD PTR [rbx+0xa0]
  4191f7:	test   rdi,rdi
  4191fa:	je     419205 <flatcc_builder_reset@@Base+0xa5>
  4191fc:	xor    esi,esi
  4191fe:	call   4040a0 <memset@plt>
  419203:	jmp    41920e <flatcc_builder_reset@@Base+0xae>
  419205:	test   rdx,rdx
  419208:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  41920e:	mov    rdi,QWORD PTR [rbx+0xa8]
  419215:	mov    rdx,QWORD PTR [rbx+0xb0]
  41921c:	test   rdi,rdi
  41921f:	je     41922a <flatcc_builder_reset@@Base+0xca>
  419221:	xor    esi,esi
  419223:	call   4040a0 <memset@plt>
  419228:	jmp    419233 <flatcc_builder_reset@@Base+0xd3>
  41922a:	test   rdx,rdx
  41922d:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  419233:	mov    rdi,QWORD PTR [rbx+0xb8]
  41923a:	mov    rdx,QWORD PTR [rbx+0xc0]
  419241:	test   rdi,rdi
  419244:	je     41924f <flatcc_builder_reset@@Base+0xef>
  419246:	xor    esi,esi
  419248:	call   4040a0 <memset@plt>
  41924d:	jmp    419258 <flatcc_builder_reset@@Base+0xf8>
  41924f:	test   rdx,rdx
  419252:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  419258:	mov    rdi,QWORD PTR [rbx+0xc8]
  41925f:	mov    rdx,QWORD PTR [rbx+0xd0]
  419266:	test   rdi,rdi
  419269:	je     419274 <flatcc_builder_reset@@Base+0x114>
  41926b:	xor    esi,esi
  41926d:	call   4040a0 <memset@plt>
  419272:	jmp    41927d <flatcc_builder_reset@@Base+0x11d>
  419274:	test   rdx,rdx
  419277:	jne    419300 <flatcc_builder_reset@@Base+0x1a0>
  41927d:	mov    DWORD PTR [rbx+0xe0],0x0
  419287:	cmp    DWORD PTR [rbx+0xe4],0x0
  41928e:	je     41929a <flatcc_builder_reset@@Base+0x13a>
  419290:	mov    DWORD PTR [rbx+0xe4],0x10
  41929a:	mov    WORD PTR [rbx+0xe8],0x0
  4192a3:	mov    QWORD PTR [rbx+0xf0],0x0
  4192ae:	mov    QWORD PTR [rbx+0x20],0x0
  4192b6:	vxorps xmm0,xmm0,xmm0
  4192ba:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  4192c2:	mov    rax,QWORD PTR [rbx+0x58]
  4192c6:	mov    rcx,QWORD PTR [rbx+0x68]
  4192ca:	mov    QWORD PTR [rbx+0x18],rcx
  4192ce:	mov    rcx,QWORD PTR [rbx+0x88]
  4192d5:	mov    QWORD PTR [rbx],rcx
  4192d8:	mov    QWORD PTR [rbx+0x8],rax
  4192dc:	mov    QWORD PTR [rbx+0x30],0x0
  4192e4:	cmp    DWORD PTR [rbx+0x128],0x0
  4192eb:	je     4192fc <flatcc_builder_reset@@Base+0x19c>
  4192ed:	add    rbx,0x130
  4192f4:	mov    rdi,rbx
  4192f7:	call   41d840 <flatcc_emitter_reset@@Base>
  4192fc:	xor    eax,eax
  4192fe:	pop    rbx
  4192ff:	ret    
  419300:	lea    rdi,[rip+0x9c89]        # 422f90 <flatcc_builder_padding_base@@Base+0x270>
  419307:	lea    rsi,[rip+0x9c94]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41930e:	lea    rcx,[rip+0x9ced]        # 423002 <flatcc_builder_padding_base@@Base+0x2e2>
  419315:	mov    edx,0x1b2
  41931a:	call   404090 <__assert_fail@plt>
  41931f:	nop

0000000000419320 <flatcc_builder_clear@@Base>:
  419320:	push   rbx
  419321:	mov    rbx,rdi
  419324:	lea    rsi,[rdi+0x58]
  419328:	mov    rdi,QWORD PTR [rdi+0x40]
  41932c:	xor    edx,edx
  41932e:	xor    ecx,ecx
  419330:	xor    r8d,r8d
  419333:	call   QWORD PTR [rbx+0x50]
  419336:	lea    rsi,[rbx+0x68]
  41933a:	mov    rdi,QWORD PTR [rbx+0x40]
  41933e:	xor    edx,edx
  419340:	xor    ecx,ecx
  419342:	mov    r8d,0x1
  419348:	call   QWORD PTR [rbx+0x50]
  41934b:	lea    rsi,[rbx+0x78]
  41934f:	mov    rdi,QWORD PTR [rbx+0x40]
  419353:	xor    edx,edx
  419355:	xor    ecx,ecx
  419357:	mov    r8d,0x2
  41935d:	call   QWORD PTR [rbx+0x50]
  419360:	lea    rsi,[rbx+0x88]
  419367:	mov    rdi,QWORD PTR [rbx+0x40]
  41936b:	xor    edx,edx
  41936d:	xor    ecx,ecx
  41936f:	mov    r8d,0x3
  419375:	call   QWORD PTR [rbx+0x50]
  419378:	lea    rsi,[rbx+0x98]
  41937f:	mov    rdi,QWORD PTR [rbx+0x40]
  419383:	xor    edx,edx
  419385:	xor    ecx,ecx
  419387:	mov    r8d,0x4
  41938d:	call   QWORD PTR [rbx+0x50]
  419390:	lea    rsi,[rbx+0xa8]
  419397:	mov    rdi,QWORD PTR [rbx+0x40]
  41939b:	xor    edx,edx
  41939d:	xor    ecx,ecx
  41939f:	mov    r8d,0x5
  4193a5:	call   QWORD PTR [rbx+0x50]
  4193a8:	lea    rsi,[rbx+0xb8]
  4193af:	mov    rdi,QWORD PTR [rbx+0x40]
  4193b3:	xor    edx,edx
  4193b5:	xor    ecx,ecx
  4193b7:	mov    r8d,0x6
  4193bd:	call   QWORD PTR [rbx+0x50]
  4193c0:	lea    rsi,[rbx+0xc8]
  4193c7:	mov    rdi,QWORD PTR [rbx+0x40]
  4193cb:	xor    edx,edx
  4193cd:	xor    ecx,ecx
  4193cf:	mov    r8d,0x7
  4193d5:	call   QWORD PTR [rbx+0x50]
  4193d8:	cmp    DWORD PTR [rbx+0x128],0x0
  4193df:	je     4193ed <flatcc_builder_clear@@Base+0xcd>
  4193e1:	lea    rdi,[rbx+0x130]
  4193e8:	call   41d940 <flatcc_emitter_clear@@Base>
  4193ed:	vxorps xmm0,xmm0,xmm0
  4193f1:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  4193f9:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  419401:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  419409:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  419411:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  419419:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  419421:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  419429:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  419431:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  419436:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  41943b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  419440:	vmovups YMMWORD PTR [rbx],ymm0
  419444:	mov    QWORD PTR [rbx+0x180],0x0
  41944f:	pop    rbx
  419450:	vzeroupper 
  419453:	ret    
  419454:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41945e:	xchg   ax,ax

0000000000419460 <flatcc_builder_enter_user_frame_ptr@@Base>:
  419460:	push   r15
  419462:	push   r14
  419464:	push   r12
  419466:	push   rbx
  419467:	push   rax
  419468:	mov    r14,rsi
  41946b:	mov    r15,rdi
  41946e:	add    r14,0xf
  419472:	and    r14,0xfffffffffffffff8
  419476:	mov    rbx,QWORD PTR [rdi+0x180]
  41947d:	lea    r12,[rdi+0xc8]
  419484:	lea    rdx,[rbx+r14*1]
  419488:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41948f:	jbe    4194a8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  419491:	mov    rdi,QWORD PTR [r15+0x40]
  419495:	mov    rsi,r12
  419498:	xor    ecx,ecx
  41949a:	mov    r8d,0x7
  4194a0:	call   QWORD PTR [r15+0x50]
  4194a4:	test   eax,eax
  4194a6:	jne    4194f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  4194a8:	add    rbx,QWORD PTR [r12]
  4194ac:	je     4194e7 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  4194ae:	mov    rdi,rbx
  4194b1:	xor    esi,esi
  4194b3:	mov    rdx,r14
  4194b6:	call   4040a0 <memset@plt>
  4194bb:	mov    rax,QWORD PTR [r15+0x178]
  4194c2:	mov    QWORD PTR [rbx],rax
  4194c5:	add    rbx,0x8
  4194c9:	mov    rax,QWORD PTR [r15+0x180]
  4194d0:	lea    rcx,[rax+0x8]
  4194d4:	mov    QWORD PTR [r15+0x178],rcx
  4194db:	add    rax,r14
  4194de:	mov    QWORD PTR [r15+0x180],rax
  4194e5:	jmp    4194e9 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  4194e7:	xor    ebx,ebx
  4194e9:	mov    rax,rbx
  4194ec:	add    rsp,0x8
  4194f0:	pop    rbx
  4194f1:	pop    r12
  4194f3:	pop    r14
  4194f5:	pop    r15
  4194f7:	ret    
  4194f8:	lea    rdi,[rip+0xac63]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  4194ff:	lea    rsi,[rip+0x9a9c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419506:	lea    rcx,[rip+0xaa8f]        # 423f9c <flatcc_builder_padding_base@@Base+0x127c>
  41950d:	mov    edx,0x134
  419512:	call   404090 <__assert_fail@plt>
  419517:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419520 <flatcc_builder_enter_user_frame@@Base>:
  419520:	push   r15
  419522:	push   r14
  419524:	push   r12
  419526:	push   rbx
  419527:	push   rax
  419528:	mov    r14,rsi
  41952b:	mov    rbx,rdi
  41952e:	add    r14,0xf
  419532:	and    r14,0xfffffffffffffff8
  419536:	mov    r15,QWORD PTR [rdi+0x180]
  41953d:	lea    r12,[rdi+0xc8]
  419544:	lea    rdx,[r15+r14*1]
  419548:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41954f:	jbe    419567 <flatcc_builder_enter_user_frame@@Base+0x47>
  419551:	mov    rdi,QWORD PTR [rbx+0x40]
  419555:	mov    rsi,r12
  419558:	xor    ecx,ecx
  41955a:	mov    r8d,0x7
  419560:	call   QWORD PTR [rbx+0x50]
  419563:	test   eax,eax
  419565:	jne    4195b0 <flatcc_builder_enter_user_frame@@Base+0x90>
  419567:	add    r15,QWORD PTR [r12]
  41956b:	je     4195a2 <flatcc_builder_enter_user_frame@@Base+0x82>
  41956d:	mov    rdi,r15
  419570:	xor    esi,esi
  419572:	mov    rdx,r14
  419575:	call   4040a0 <memset@plt>
  41957a:	mov    rax,QWORD PTR [rbx+0x178]
  419581:	mov    QWORD PTR [r15],rax
  419584:	mov    rcx,QWORD PTR [rbx+0x180]
  41958b:	lea    rax,[rcx+0x8]
  41958f:	mov    QWORD PTR [rbx+0x178],rax
  419596:	add    rcx,r14
  419599:	mov    QWORD PTR [rbx+0x180],rcx
  4195a0:	jmp    4195a4 <flatcc_builder_enter_user_frame@@Base+0x84>
  4195a2:	xor    eax,eax
  4195a4:	add    rsp,0x8
  4195a8:	pop    rbx
  4195a9:	pop    r12
  4195ab:	pop    r14
  4195ad:	pop    r15
  4195af:	ret    
  4195b0:	lea    rdi,[rip+0xabab]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  4195b7:	lea    rsi,[rip+0x99e4]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  4195be:	lea    rcx,[rip+0xa9d7]        # 423f9c <flatcc_builder_padding_base@@Base+0x127c>
  4195c5:	mov    edx,0x134
  4195ca:	call   404090 <__assert_fail@plt>
  4195cf:	nop

00000000004195d0 <flatcc_builder_exit_user_frame@@Base>:
  4195d0:	push   rax
  4195d1:	mov    rax,QWORD PTR [rdi+0x178]
  4195d8:	test   rax,rax
  4195db:	je     4195ff <flatcc_builder_exit_user_frame@@Base+0x2f>
  4195dd:	mov    rcx,QWORD PTR [rdi+0xc8]
  4195e4:	mov    edx,eax
  4195e6:	add    rax,0xfffffffffffffff8
  4195ea:	mov    QWORD PTR [rdi+0x180],rax
  4195f1:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  4195f6:	mov    QWORD PTR [rdi+0x178],rax
  4195fd:	pop    rcx
  4195fe:	ret    
  4195ff:	lea    rdi,[rip+0x9a3a]        # 423040 <flatcc_builder_padding_base@@Base+0x320>
  419606:	lea    rsi,[rip+0x9995]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41960d:	lea    rcx,[rip+0x9a45]        # 423059 <flatcc_builder_padding_base@@Base+0x339>
  419614:	mov    edx,0x21e
  419619:	call   404090 <__assert_fail@plt>
  41961e:	xchg   ax,ax

0000000000419620 <flatcc_builder_exit_user_frame_at@@Base>:
  419620:	push   rax
  419621:	cmp    QWORD PTR [rdi+0x178],rsi
  419628:	jb     419658 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  41962a:	mov    QWORD PTR [rdi+0x178],rsi
  419631:	test   rsi,rsi
  419634:	je     419677 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  419636:	mov    rax,QWORD PTR [rdi+0xc8]
  41963d:	mov    ecx,esi
  41963f:	add    rsi,0xfffffffffffffff8
  419643:	mov    QWORD PTR [rdi+0x180],rsi
  41964a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  41964f:	mov    QWORD PTR [rdi+0x178],rax
  419656:	pop    rcx
  419657:	ret    
  419658:	lea    rdi,[rip+0x9a34]        # 423093 <flatcc_builder_padding_base@@Base+0x373>
  41965f:	lea    rsi,[rip+0x993c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419666:	lea    rcx,[rip+0x9a45]        # 4230b2 <flatcc_builder_padding_base@@Base+0x392>
  41966d:	mov    edx,0x227
  419672:	call   404090 <__assert_fail@plt>
  419677:	lea    rdi,[rip+0x99c2]        # 423040 <flatcc_builder_padding_base@@Base+0x320>
  41967e:	lea    rsi,[rip+0x991d]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419685:	lea    rcx,[rip+0x99cd]        # 423059 <flatcc_builder_padding_base@@Base+0x339>
  41968c:	mov    edx,0x21e
  419691:	call   404090 <__assert_fail@plt>
  419696:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004196a0 <flatcc_builder_get_current_user_frame@@Base>:
  4196a0:	mov    rax,QWORD PTR [rdi+0x178]
  4196a7:	ret    
  4196a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004196b0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4196b0:	mov    eax,esi
  4196b2:	add    rax,QWORD PTR [rdi+0xc8]
  4196b9:	ret    
  4196ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004196c0 <flatcc_builder_embed_buffer@@Base>:
  4196c0:	push   rbp
  4196c1:	push   r15
  4196c3:	push   r14
  4196c5:	push   r12
  4196c7:	push   rbx
  4196c8:	sub    rsp,0xa0
  4196cf:	mov    ebx,r9d
  4196d2:	mov    rbp,rcx
  4196d5:	mov    r15,rdx
  4196d8:	mov    edx,esi
  4196da:	mov    r12,rdi
  4196dd:	mov    WORD PTR [rsp+0xa],r8w
  4196e3:	xor    ecx,ecx
  4196e5:	cmp    DWORD PTR [rdi+0x100],0x0
  4196ec:	setne  cl
  4196ef:	lea    rsi,[rsp+0xa]
  4196f4:	call   419860 <flatcc_builder_embed_buffer@@Base+0x1a0>
  4196f9:	and    ebx,0x2
  4196fc:	movzx  eax,WORD PTR [rsp+0xa]
  419701:	mov    r14d,DWORD PTR [r12+0xf0]
  419709:	lea    ecx,[rbp+rbx*2+0x0]
  41970d:	mov    edx,r14d
  419710:	sub    edx,ecx
  419712:	dec    eax
  419714:	and    eax,edx
  419716:	lea    ecx,[rax+rbp*1]
  419719:	mov    DWORD PTR [rsp+0xc],ecx
  41971d:	mov    QWORD PTR [rsp+0x10],0x0
  419726:	mov    DWORD PTR [rsp+0x18],0x0
  41972e:	cmp    DWORD PTR [r12+0x100],0x0
  419737:	je     419809 <flatcc_builder_embed_buffer@@Base+0x149>
  41973d:	mov    QWORD PTR [rsp+0x10],0x4
  419746:	lea    rcx,[rsp+0xc]
  41974b:	mov    QWORD PTR [rsp+0x20],rcx
  419750:	mov    QWORD PTR [rsp+0x28],0x4
  419759:	mov    DWORD PTR [rsp+0x18],0x1
  419761:	mov    r8d,0x4
  419767:	mov    edx,0x1
  41976c:	test   rbp,rbp
  41976f:	je     41978f <flatcc_builder_embed_buffer@@Base+0xcf>
  419771:	add    r8,rbp
  419774:	mov    QWORD PTR [rsp+0x10],r8
  419779:	mov    ecx,edx
  41977b:	shl    rcx,0x4
  41977f:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  419784:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  419789:	inc    edx
  41978b:	mov    DWORD PTR [rsp+0x18],edx
  41978f:	test   eax,eax
  419791:	je     4197ba <flatcc_builder_embed_buffer@@Base+0xfa>
  419793:	mov    eax,eax
  419795:	add    r8,rax
  419798:	mov    QWORD PTR [rsp+0x10],r8
  41979d:	mov    ecx,edx
  41979f:	shl    rcx,0x4
  4197a3:	lea    rsi,[rip+0x9576]        # 422d20 <flatcc_builder_padding_base@@Base>
  4197aa:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  4197af:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  4197b4:	inc    edx
  4197b6:	mov    DWORD PTR [rsp+0x18],edx
  4197ba:	cmp    r8,0x11
  4197be:	setb   al
  4197c1:	lea    rcx,[r8-0x10]
  4197c5:	shr    rcx,0x20
  4197c9:	sete   cl
  4197cc:	test   r8d,r8d
  4197cf:	jle    41981c <flatcc_builder_embed_buffer@@Base+0x15c>
  4197d1:	or     al,cl
  4197d3:	je     41981c <flatcc_builder_embed_buffer@@Base+0x15c>
  4197d5:	sub    r14d,r8d
  4197d8:	mov    rdi,QWORD PTR [r12+0x38]
  4197dd:	lea    rsi,[rsp+0x20]
  4197e2:	mov    ecx,r14d
  4197e5:	call   QWORD PTR [r12+0x48]
  4197ea:	test   eax,eax
  4197ec:	jne    41983b <flatcc_builder_embed_buffer@@Base+0x17b>
  4197ee:	mov    DWORD PTR [r12+0xf0],r14d
  4197f6:	mov    eax,r14d
  4197f9:	add    rsp,0xa0
  419800:	pop    rbx
  419801:	pop    r12
  419803:	pop    r14
  419805:	pop    r15
  419807:	pop    rbp
  419808:	ret    
  419809:	xor    edx,edx
  41980b:	xor    r8d,r8d
  41980e:	test   rbp,rbp
  419811:	jne    419771 <flatcc_builder_embed_buffer@@Base+0xb1>
  419817:	jmp    41978f <flatcc_builder_embed_buffer@@Base+0xcf>
  41981c:	lea    rdi,[rip+0xa93f]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419823:	lea    rsi,[rip+0x9778]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41982a:	lea    rcx,[rip+0xa7f0]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  419831:	mov    edx,0x287
  419836:	call   404090 <__assert_fail@plt>
  41983b:	lea    rdi,[rip+0xa920]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419842:	lea    rsi,[rip+0x9759]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419849:	lea    rcx,[rip+0xa7d1]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  419850:	mov    edx,0x28b
  419855:	call   404090 <__assert_fail@plt>
  41985a:	nop    WORD PTR [rax+rax*1+0x0]
  419860:	push   rbx
  419861:	sub    rsp,0x90
  419868:	mov    rax,rdi
  41986b:	test   dx,dx
  41986e:	jne    419881 <flatcc_builder_embed_buffer@@Base+0x1c1>
  419870:	mov    edi,DWORD PTR [rax+0xec]
  419876:	test   di,di
  419879:	mov    edx,0x1
  41987e:	cmovne edx,edi
  419881:	movzx  ebx,WORD PTR [rsi]
  419884:	mov    edi,0x4
  419889:	cmp    bx,0x4
  41988d:	cmovae edi,ebx
  419890:	jb     41989d <flatcc_builder_embed_buffer@@Base+0x1dd>
  419892:	cmp    di,dx
  419895:	jb     41989d <flatcc_builder_embed_buffer@@Base+0x1dd>
  419897:	test   ecx,ecx
  419899:	jne    419904 <flatcc_builder_embed_buffer@@Base+0x244>
  41989b:	jmp    4198aa <flatcc_builder_embed_buffer@@Base+0x1ea>
  41989d:	cmp    di,dx
  4198a0:	cmovb  edi,edx
  4198a3:	mov    WORD PTR [rsi],di
  4198a6:	test   ecx,ecx
  4198a8:	jne    419904 <flatcc_builder_embed_buffer@@Base+0x244>
  4198aa:	mov    ebx,DWORD PTR [rax+0xf4]
  4198b0:	movzx  r8d,dx
  4198b4:	dec    r8d
  4198b7:	and    r8d,ebx
  4198ba:	je     419904 <flatcc_builder_embed_buffer@@Base+0x244>
  4198bc:	mov    QWORD PTR [rsp],r8
  4198c0:	lea    rcx,[rip+0x9459]        # 422d20 <flatcc_builder_padding_base@@Base>
  4198c7:	mov    QWORD PTR [rsp+0x10],rcx
  4198cc:	mov    QWORD PTR [rsp+0x18],r8
  4198d1:	mov    DWORD PTR [rsp+0x8],0x1
  4198d9:	lea    ecx,[r8+rbx*1]
  4198dd:	mov    DWORD PTR [rax+0xf4],ecx
  4198e3:	test   r8d,r8d
  4198e6:	js     41990d <flatcc_builder_embed_buffer@@Base+0x24d>
  4198e8:	mov    rdi,QWORD PTR [rax+0x38]
  4198ec:	lea    rsi,[rsp+0x10]
  4198f1:	mov    edx,0x1
  4198f6:	mov    ecx,ebx
  4198f8:	call   QWORD PTR [rax+0x48]
  4198fb:	test   eax,eax
  4198fd:	jne    41992c <flatcc_builder_embed_buffer@@Base+0x26c>
  4198ff:	cmp    ebx,0xffffffff
  419902:	je     41994b <flatcc_builder_embed_buffer@@Base+0x28b>
  419904:	add    rsp,0x90
  41990b:	pop    rbx
  41990c:	ret    
  41990d:	lea    rdi,[rip+0xa84e]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419914:	lea    rsi,[rip+0x9687]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41991b:	lea    rcx,[rip+0xa7bb]        # 4240dd <flatcc_builder_padding_base@@Base+0x13bd>
  419922:	mov    edx,0x2a1
  419927:	call   404090 <__assert_fail@plt>
  41992c:	lea    rdi,[rip+0xa82f]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419933:	lea    rsi,[rip+0x9668]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41993a:	lea    rcx,[rip+0xa79c]        # 4240dd <flatcc_builder_padding_base@@Base+0x13bd>
  419941:	mov    edx,0x2a5
  419946:	call   404090 <__assert_fail@plt>
  41994b:	lea    rdi,[rip+0xa810]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419952:	lea    rsi,[rip+0x9649]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419959:	lea    rcx,[rip+0xa67f]        # 423fdf <flatcc_builder_padding_base@@Base+0x12bf>
  419960:	mov    edx,0x2be
  419965:	call   404090 <__assert_fail@plt>
  41996a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419970 <flatcc_builder_create_buffer@@Base>:
  419970:	push   rbp
  419971:	push   r15
  419973:	push   r14
  419975:	push   r13
  419977:	push   r12
  419979:	push   rbx
  41997a:	sub    rsp,0xa8
  419981:	mov    r12d,r9d
  419984:	mov    r14d,ecx
  419987:	mov    rbp,rsi
  41998a:	mov    r13,rdi
  41998d:	mov    WORD PTR [rsp+0xa],r8w
  419993:	mov    DWORD PTR [rsp+0xc],0x0
  41999b:	mov    r15d,r9d
  41999e:	and    r15d,0x1
  4199a2:	lea    rsi,[rsp+0xa]
  4199a7:	mov    ecx,r15d
  4199aa:	call   419860 <flatcc_builder_embed_buffer@@Base+0x1a0>
  4199af:	movzx  eax,WORD PTR [rsp+0xa]
  4199b4:	cmp    WORD PTR [r13+0xe8],ax
  4199bc:	jae    4199c6 <flatcc_builder_create_buffer@@Base+0x56>
  4199be:	mov    WORD PTR [r13+0xe8],ax
  4199c6:	movzx  edx,ax
  4199c9:	xor    eax,eax
  4199cb:	test   rbp,rbp
  4199ce:	je     4199e8 <flatcc_builder_create_buffer@@Base+0x78>
  4199d0:	mov    ecx,DWORD PTR [rbp+0x0]
  4199d3:	mov    DWORD PTR [rsp+0xc],ecx
  4199d7:	xor    edi,edi
  4199d9:	test   ecx,ecx
  4199db:	setne  dil
  4199df:	mov    rsi,rdi
  4199e2:	shl    rsi,0x2
  4199e6:	jmp    4199ec <flatcc_builder_create_buffer@@Base+0x7c>
  4199e8:	xor    edi,edi
  4199ea:	xor    esi,esi
  4199ec:	lea    ebx,[r12+r12*1]
  4199f0:	and    ebx,0x4
  4199f3:	mov    ebp,DWORD PTR [r13+0xf0]
  4199fa:	mov    ecx,ebp
  4199fc:	sub    ecx,ebx
  4199fe:	sub    ecx,esi
  419a00:	add    ecx,0xfffffffc
  419a03:	dec    edx
  419a05:	mov    QWORD PTR [rsp+0x18],0x0
  419a0e:	mov    DWORD PTR [rsp+0x20],0x0
  419a16:	test   r12b,0x3
  419a1a:	je     419a4d <flatcc_builder_create_buffer@@Base+0xdd>
  419a1c:	mov    QWORD PTR [rsp+0x18],0x4
  419a25:	lea    rax,[rsp+0x10]
  419a2a:	mov    QWORD PTR [rsp+0x28],rax
  419a2f:	mov    QWORD PTR [rsp+0x30],0x4
  419a38:	mov    DWORD PTR [rsp+0x20],0x1
  419a40:	mov    r8d,0x8
  419a46:	mov    eax,0x1
  419a4b:	jmp    419a53 <flatcc_builder_create_buffer@@Base+0xe3>
  419a4d:	mov    r8d,0x4
  419a53:	and    ecx,edx
  419a55:	mov    QWORD PTR [rsp+0x18],r8
  419a5a:	mov    edx,eax
  419a5c:	shl    rdx,0x4
  419a60:	lea    rbx,[rsp+0x14]
  419a65:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  419a6a:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  419a73:	lea    edx,[rax+0x1]
  419a76:	mov    DWORD PTR [rsp+0x20],edx
  419a7a:	test   dil,dil
  419a7d:	je     419aa5 <flatcc_builder_create_buffer@@Base+0x135>
  419a7f:	add    r8,rsi
  419a82:	mov    QWORD PTR [rsp+0x18],r8
  419a87:	mov    edx,edx
  419a89:	shl    rdx,0x4
  419a8d:	lea    rdi,[rsp+0xc]
  419a92:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  419a97:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  419a9c:	or     eax,0x2
  419a9f:	mov    DWORD PTR [rsp+0x20],eax
  419aa3:	mov    edx,eax
  419aa5:	test   ecx,ecx
  419aa7:	je     419ad0 <flatcc_builder_create_buffer@@Base+0x160>
  419aa9:	mov    eax,ecx
  419aab:	add    r8,rax
  419aae:	mov    QWORD PTR [rsp+0x18],r8
  419ab3:	mov    ecx,edx
  419ab5:	shl    rcx,0x4
  419ab9:	lea    rsi,[rip+0x9260]        # 422d20 <flatcc_builder_padding_base@@Base>
  419ac0:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  419ac5:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  419aca:	inc    edx
  419acc:	mov    DWORD PTR [rsp+0x20],edx
  419ad0:	xor    eax,eax
  419ad2:	test   r12b,0x3
  419ad6:	setne  al
  419ad9:	sub    ebp,r8d
  419adc:	lea    eax,[rbp+rax*4+0x0]
  419ae0:	mov    ecx,r15d
  419ae3:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  419aeb:	sub    ecx,eax
  419aed:	mov    DWORD PTR [rsp+0x10],ecx
  419af1:	sub    r14d,eax
  419af4:	mov    DWORD PTR [rsp+0x14],r14d
  419af9:	cmp    r8,0x11
  419afd:	setb   al
  419b00:	lea    rcx,[r8-0x10]
  419b04:	shr    rcx,0x20
  419b08:	sete   cl
  419b0b:	test   r8d,r8d
  419b0e:	jle    419b46 <flatcc_builder_create_buffer@@Base+0x1d6>
  419b10:	or     al,cl
  419b12:	je     419b46 <flatcc_builder_create_buffer@@Base+0x1d6>
  419b14:	mov    rdi,QWORD PTR [r13+0x38]
  419b18:	lea    rsi,[rsp+0x28]
  419b1d:	mov    ecx,ebp
  419b1f:	call   QWORD PTR [r13+0x48]
  419b23:	test   eax,eax
  419b25:	jne    419b65 <flatcc_builder_create_buffer@@Base+0x1f5>
  419b27:	mov    DWORD PTR [r13+0xf0],ebp
  419b2e:	test   ebp,ebp
  419b30:	je     419b84 <flatcc_builder_create_buffer@@Base+0x214>
  419b32:	mov    eax,ebp
  419b34:	add    rsp,0xa8
  419b3b:	pop    rbx
  419b3c:	pop    r12
  419b3e:	pop    r13
  419b40:	pop    r14
  419b42:	pop    r15
  419b44:	pop    rbp
  419b45:	ret    
  419b46:	lea    rdi,[rip+0xa615]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419b4d:	lea    rsi,[rip+0x944e]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419b54:	lea    rcx,[rip+0xa4c6]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  419b5b:	mov    edx,0x287
  419b60:	call   404090 <__assert_fail@plt>
  419b65:	lea    rdi,[rip+0xa5f6]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419b6c:	lea    rsi,[rip+0x942f]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419b73:	lea    rcx,[rip+0xa4a7]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  419b7a:	mov    edx,0x28b
  419b7f:	call   404090 <__assert_fail@plt>
  419b84:	lea    rdi,[rip+0xa5d7]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419b8b:	lea    rsi,[rip+0x9410]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419b92:	lea    rcx,[rip+0x955e]        # 4230f7 <flatcc_builder_padding_base@@Base+0x3d7>
  419b99:	mov    edx,0x304
  419b9e:	call   404090 <__assert_fail@plt>
  419ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419bad:	nop    DWORD PTR [rax]

0000000000419bb0 <flatcc_builder_create_struct@@Base>:
  419bb0:	push   rbp
  419bb1:	push   rbx
  419bb2:	sub    rsp,0x98
  419bb9:	test   cx,cx
  419bbc:	je     419cb2 <flatcc_builder_create_struct@@Base+0x102>
  419bc2:	mov    r8,rdx
  419bc5:	mov    rbx,rdi
  419bc8:	cmp    WORD PTR [rdi+0xe8],cx
  419bcf:	jae    419bd8 <flatcc_builder_create_struct@@Base+0x28>
  419bd1:	mov    WORD PTR [rbx+0xe8],cx
  419bd8:	mov    ebp,DWORD PTR [rbx+0xf0]
  419bde:	mov    edx,ebp
  419be0:	sub    edx,r8d
  419be3:	movzx  eax,cx
  419be6:	dec    eax
  419be8:	and    eax,edx
  419bea:	mov    QWORD PTR [rsp+0x8],0x0
  419bf3:	mov    DWORD PTR [rsp+0x10],0x0
  419bfb:	test   r8,r8
  419bfe:	je     419c8b <flatcc_builder_create_struct@@Base+0xdb>
  419c04:	mov    QWORD PTR [rsp+0x8],r8
  419c09:	mov    QWORD PTR [rsp+0x18],rsi
  419c0e:	mov    QWORD PTR [rsp+0x20],r8
  419c13:	mov    DWORD PTR [rsp+0x10],0x1
  419c1b:	mov    edx,0x1
  419c20:	test   eax,eax
  419c22:	je     419c49 <flatcc_builder_create_struct@@Base+0x99>
  419c24:	add    r8,rax
  419c27:	mov    QWORD PTR [rsp+0x8],r8
  419c2c:	mov    ecx,edx
  419c2e:	shl    rcx,0x4
  419c32:	lea    rsi,[rip+0x90e7]        # 422d20 <flatcc_builder_padding_base@@Base>
  419c39:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  419c3e:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  419c43:	inc    edx
  419c45:	mov    DWORD PTR [rsp+0x10],edx
  419c49:	cmp    r8,0x11
  419c4d:	setb   al
  419c50:	lea    rcx,[r8-0x10]
  419c54:	shr    rcx,0x20
  419c58:	sete   cl
  419c5b:	test   r8d,r8d
  419c5e:	jle    419c93 <flatcc_builder_create_struct@@Base+0xe3>
  419c60:	or     al,cl
  419c62:	je     419c93 <flatcc_builder_create_struct@@Base+0xe3>
  419c64:	sub    ebp,r8d
  419c67:	mov    rdi,QWORD PTR [rbx+0x38]
  419c6b:	lea    rsi,[rsp+0x18]
  419c70:	mov    ecx,ebp
  419c72:	call   QWORD PTR [rbx+0x48]
  419c75:	test   eax,eax
  419c77:	jne    419cd1 <flatcc_builder_create_struct@@Base+0x121>
  419c79:	mov    DWORD PTR [rbx+0xf0],ebp
  419c7f:	mov    eax,ebp
  419c81:	add    rsp,0x98
  419c88:	pop    rbx
  419c89:	pop    rbp
  419c8a:	ret    
  419c8b:	xor    edx,edx
  419c8d:	test   eax,eax
  419c8f:	jne    419c24 <flatcc_builder_create_struct@@Base+0x74>
  419c91:	jmp    419c49 <flatcc_builder_create_struct@@Base+0x99>
  419c93:	lea    rdi,[rip+0xa4c8]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419c9a:	lea    rsi,[rip+0x9301]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419ca1:	lea    rcx,[rip+0xa379]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  419ca8:	mov    edx,0x287
  419cad:	call   404090 <__assert_fail@plt>
  419cb2:	lea    rdi,[rip+0x94c1]        # 42317a <flatcc_builder_padding_base@@Base+0x45a>
  419cb9:	lea    rsi,[rip+0x92e2]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419cc0:	lea    rcx,[rip+0x94be]        # 423185 <flatcc_builder_padding_base@@Base+0x465>
  419cc7:	mov    edx,0x30f
  419ccc:	call   404090 <__assert_fail@plt>
  419cd1:	lea    rdi,[rip+0xa48a]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419cd8:	lea    rsi,[rip+0x92c3]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419cdf:	lea    rcx,[rip+0xa33b]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  419ce6:	mov    edx,0x28b
  419ceb:	call   404090 <__assert_fail@plt>

0000000000419cf0 <flatcc_builder_start_buffer@@Base>:
  419cf0:	push   rbp
  419cf1:	push   r15
  419cf3:	push   r14
  419cf5:	push   rbx
  419cf6:	push   rax
  419cf7:	mov    r15d,ecx
  419cfa:	mov    ebp,edx
  419cfc:	mov    r14,rsi
  419cff:	mov    rbx,rdi
  419d02:	movzx  esi,WORD PTR [rdi+0xe8]
  419d09:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  419d0e:	mov    ecx,eax
  419d10:	mov    eax,0xffffffff
  419d15:	test   ecx,ecx
  419d17:	jne    419dbc <flatcc_builder_start_buffer@@Base+0xcc>
  419d1d:	mov    WORD PTR [rbx+0xe8],0x1
  419d26:	movzx  eax,WORD PTR [rbx+0xec]
  419d2d:	mov    rcx,QWORD PTR [rbx+0x30]
  419d31:	mov    WORD PTR [rcx+0x22],ax
  419d35:	mov    WORD PTR [rbx+0xec],bp
  419d3c:	movzx  eax,WORD PTR [rbx+0x10c]
  419d43:	mov    rcx,QWORD PTR [rbx+0x30]
  419d47:	mov    WORD PTR [rcx+0x20],ax
  419d4b:	mov    WORD PTR [rbx+0x10c],r15w
  419d53:	mov    eax,DWORD PTR [rbx+0xf8]
  419d59:	mov    rcx,QWORD PTR [rbx+0x30]
  419d5d:	mov    DWORD PTR [rcx+0x14],eax
  419d60:	mov    eax,DWORD PTR [rbx+0x100]
  419d66:	mov    rcx,QWORD PTR [rbx+0x30]
  419d6a:	mov    DWORD PTR [rcx+0x1c],eax
  419d6d:	mov    eax,DWORD PTR [rbx+0xf0]
  419d73:	mov    DWORD PTR [rbx+0xf8],eax
  419d79:	mov    eax,DWORD PTR [rbx+0xfc]
  419d7f:	lea    ecx,[rax+0x1]
  419d82:	mov    DWORD PTR [rbx+0xfc],ecx
  419d88:	mov    DWORD PTR [rbx+0x100],eax
  419d8e:	mov    eax,DWORD PTR [rbx+0x110]
  419d94:	mov    rcx,QWORD PTR [rbx+0x30]
  419d98:	mov    DWORD PTR [rcx+0x10],eax
  419d9b:	test   r14,r14
  419d9e:	jne    419da7 <flatcc_builder_start_buffer@@Base+0xb7>
  419da0:	lea    r14,[rip+0x8f79]        # 422d20 <flatcc_builder_padding_base@@Base>
  419da7:	mov    eax,DWORD PTR [r14]
  419daa:	mov    DWORD PTR [rbx+0x110],eax
  419db0:	mov    rax,QWORD PTR [rbx+0x30]
  419db4:	mov    WORD PTR [rax+0xe],0x1
  419dba:	xor    eax,eax
  419dbc:	add    rsp,0x8
  419dc0:	pop    rbx
  419dc1:	pop    r14
  419dc3:	pop    r15
  419dc5:	pop    rbp
  419dc6:	ret    
  419dc7:	nop    WORD PTR [rax+rax*1+0x0]
  419dd0:	push   rbp
  419dd1:	push   r15
  419dd3:	push   r14
  419dd5:	push   rbx
  419dd6:	push   rax
  419dd7:	mov    r14d,esi
  419dda:	mov    rbx,rdi
  419ddd:	movsxd rbp,DWORD PTR [rdi+0x104]
  419de4:	lea    eax,[rbp+0x1]
  419de7:	mov    DWORD PTR [rdi+0x104],eax
  419ded:	cmp    ebp,DWORD PTR [rdi+0x108]
  419df3:	jge    419e06 <flatcc_builder_start_buffer@@Base+0x116>
  419df5:	mov    rcx,QWORD PTR [rbx+0x30]
  419df9:	add    rcx,0x24
  419dfd:	mov    QWORD PTR [rbx+0x30],rcx
  419e01:	jmp    419e99 <flatcc_builder_start_buffer@@Base+0x1a9>
  419e06:	mov    eax,DWORD PTR [rbx+0x120]
  419e0c:	mov    r15d,0xffffffff
  419e12:	test   eax,eax
  419e14:	jle    419e1e <flatcc_builder_start_buffer@@Base+0x12e>
  419e16:	cmp    ebp,eax
  419e18:	jge    419ed4 <flatcc_builder_start_buffer@@Base+0x1e4>
  419e1e:	shl    rbp,0x2
  419e22:	lea    rdx,[rbp*8+0x24]
  419e2a:	add    rdx,rbp
  419e2d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  419e34:	jbe    419e54 <flatcc_builder_start_buffer@@Base+0x164>
  419e36:	lea    rsi,[rbx+0x98]
  419e3d:	mov    rdi,QWORD PTR [rbx+0x40]
  419e41:	xor    ecx,ecx
  419e43:	mov    r8d,0x4
  419e49:	call   QWORD PTR [rbx+0x50]
  419e4c:	test   eax,eax
  419e4e:	jne    419ee2 <flatcc_builder_start_buffer@@Base+0x1f2>
  419e54:	lea    rcx,[rbp*8+0x0]
  419e5c:	add    rcx,rbp
  419e5f:	add    rcx,QWORD PTR [rbx+0x98]
  419e66:	mov    QWORD PTR [rbx+0x30],rcx
  419e6a:	je     419ed4 <flatcc_builder_start_buffer@@Base+0x1e4>
  419e6c:	movabs rax,0xe38e38e38e38e38f
  419e76:	mul    QWORD PTR [rbx+0xa0]
  419e7d:	shr    rdx,0x5
  419e81:	mov    eax,DWORD PTR [rbx+0x120]
  419e87:	cmp    eax,edx
  419e89:	mov    esi,edx
  419e8b:	cmovle esi,eax
  419e8e:	test   eax,eax
  419e90:	cmovle esi,edx
  419e93:	mov    DWORD PTR [rbx+0x108],esi
  419e99:	mov    eax,DWORD PTR [rbx+0x20]
  419e9c:	mov    DWORD PTR [rcx+0x8],eax
  419e9f:	movzx  edx,WORD PTR [rbx+0xea]
  419ea6:	mov    WORD PTR [rcx+0xc],dx
  419eaa:	mov    WORD PTR [rbx+0xea],r14w
  419eb2:	mov    edx,DWORD PTR [rbx+0x28]
  419eb5:	mov    DWORD PTR [rcx],edx
  419eb7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  419ebe:	lea    eax,[rax+rdx*1]
  419ec1:	add    eax,0x7
  419ec4:	and    eax,0xfffffff8
  419ec7:	mov    DWORD PTR [rbx+0x28],eax
  419eca:	mov    DWORD PTR [rbx+0x20],0x0
  419ed1:	xor    r15d,r15d
  419ed4:	mov    eax,r15d
  419ed7:	add    rsp,0x8
  419edb:	pop    rbx
  419edc:	pop    r14
  419ede:	pop    r15
  419ee0:	pop    rbp
  419ee1:	ret    
  419ee2:	lea    rdi,[rip+0xa279]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  419ee9:	lea    rsi,[rip+0x90b2]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  419ef0:	lea    rcx,[rip+0xa0a5]        # 423f9c <flatcc_builder_padding_base@@Base+0x127c>
  419ef7:	mov    edx,0x134
  419efc:	call   404090 <__assert_fail@plt>
  419f01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419f10 <flatcc_builder_end_buffer@@Base>:
  419f10:	push   rbp
  419f11:	push   rbx
  419f12:	push   rax
  419f13:	mov    rax,QWORD PTR [rdi+0x30]
  419f17:	cmp    WORD PTR [rax+0xe],0x1
  419f1c:	jne    41a019 <flatcc_builder_end_buffer@@Base+0x109>
  419f22:	mov    ecx,esi
  419f24:	mov    rbx,rdi
  419f27:	movzx  eax,WORD PTR [rdi+0x10c]
  419f2e:	and    eax,0x2
  419f31:	xor    r9d,r9d
  419f34:	cmp    DWORD PTR [rdi+0x100],0x0
  419f3b:	setne  r9b
  419f3f:	or     r9d,eax
  419f42:	movzx  edi,WORD PTR [rdi+0xe8]
  419f49:	movzx  eax,WORD PTR [rbx+0xec]
  419f50:	cmp    di,ax
  419f53:	jae    419f5e <flatcc_builder_end_buffer@@Base+0x4e>
  419f55:	mov    WORD PTR [rbx+0xe8],ax
  419f5c:	mov    edi,eax
  419f5e:	lea    rsi,[rbx+0x110]
  419f65:	movzx  edx,ax
  419f68:	movzx  r8d,di
  419f6c:	mov    rdi,rbx
  419f6f:	call   419970 <flatcc_builder_create_buffer@@Base>
  419f74:	mov    ebp,eax
  419f76:	test   eax,eax
  419f78:	je     41a010 <flatcc_builder_end_buffer@@Base+0x100>
  419f7e:	mov    rax,QWORD PTR [rbx+0x30]
  419f82:	mov    ecx,DWORD PTR [rax+0x14]
  419f85:	mov    DWORD PTR [rbx+0xf8],ecx
  419f8b:	mov    ecx,DWORD PTR [rax+0x1c]
  419f8e:	mov    DWORD PTR [rbx+0x100],ecx
  419f94:	mov    ecx,DWORD PTR [rax+0x10]
  419f97:	mov    DWORD PTR [rbx+0x110],ecx
  419f9d:	movzx  eax,WORD PTR [rax+0x20]
  419fa1:	mov    WORD PTR [rbx+0x10c],ax
  419fa8:	mov    rdi,QWORD PTR [rbx+0x18]
  419fac:	mov    edx,DWORD PTR [rbx+0x20]
  419faf:	xor    esi,esi
  419fb1:	call   4040a0 <memset@plt>
  419fb6:	mov    rax,QWORD PTR [rbx+0x30]
  419fba:	mov    ecx,DWORD PTR [rax+0x8]
  419fbd:	mov    DWORD PTR [rbx+0x20],ecx
  419fc0:	mov    ecx,DWORD PTR [rax]
  419fc2:	mov    DWORD PTR [rbx+0x28],ecx
  419fc5:	mov    edx,DWORD PTR [rax+0x4]
  419fc8:	mov    rsi,rcx
  419fcb:	add    rsi,QWORD PTR [rbx+0x68]
  419fcf:	mov    QWORD PTR [rbx+0x18],rsi
  419fd3:	mov    esi,DWORD PTR [rbx+0x70]
  419fd6:	sub    esi,ecx
  419fd8:	cmp    esi,edx
  419fda:	cmova  esi,edx
  419fdd:	mov    DWORD PTR [rbx+0x24],esi
  419fe0:	movzx  ecx,WORD PTR [rbx+0xea]
  419fe7:	cmp    WORD PTR [rbx+0xe8],cx
  419fee:	jae    419ff7 <flatcc_builder_end_buffer@@Base+0xe7>
  419ff0:	mov    WORD PTR [rbx+0xe8],cx
  419ff7:	movzx  ecx,WORD PTR [rax+0xc]
  419ffb:	mov    WORD PTR [rbx+0xea],cx
  41a002:	add    rax,0xffffffffffffffdc
  41a006:	mov    QWORD PTR [rbx+0x30],rax
  41a00a:	dec    DWORD PTR [rbx+0x104]
  41a010:	mov    eax,ebp
  41a012:	add    rsp,0x8
  41a016:	pop    rbx
  41a017:	pop    rbp
  41a018:	ret    
  41a019:	lea    rdi,[rip+0x91cb]        # 4231eb <flatcc_builder_padding_base@@Base+0x4cb>
  41a020:	lea    rsi,[rip+0x8f7b]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a027:	lea    rcx,[rip+0x91e9]        # 423217 <flatcc_builder_padding_base@@Base+0x4f7>
  41a02e:	mov    edx,0x346
  41a033:	call   404090 <__assert_fail@plt>
  41a038:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a040 <flatcc_builder_start_struct@@Base>:
  41a040:	push   r15
  41a042:	push   r14
  41a044:	push   rbx
  41a045:	mov    r14,rsi
  41a048:	mov    rbx,rdi
  41a04b:	mov    esi,edx
  41a04d:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41a052:	test   eax,eax
  41a054:	je     41a05d <flatcc_builder_start_struct@@Base+0x1d>
  41a056:	xor    eax,eax
  41a058:	jmp    41a0f1 <flatcc_builder_start_struct@@Base+0xb1>
  41a05d:	mov    rdx,QWORD PTR [rbx+0x30]
  41a061:	mov    WORD PTR [rdx+0xe],0x2
  41a067:	mov    ecx,DWORD PTR [rbx+0x28]
  41a06a:	mov    esi,DWORD PTR [rbx+0x70]
  41a06d:	mov    rax,QWORD PTR [rbx+0x68]
  41a071:	add    rax,rcx
  41a074:	mov    QWORD PTR [rbx+0x18],rax
  41a078:	sub    esi,ecx
  41a07a:	cmp    esi,0xfffffffc
  41a07d:	mov    edi,0xfffffffc
  41a082:	cmovb  edi,esi
  41a085:	mov    DWORD PTR [rbx+0x24],edi
  41a088:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  41a08f:	mov    r15d,DWORD PTR [rbx+0x20]
  41a093:	add    r14d,r15d
  41a096:	mov    DWORD PTR [rbx+0x20],r14d
  41a09a:	cmp    r14d,edi
  41a09d:	jb     41a0ee <flatcc_builder_start_struct@@Base+0xae>
  41a09f:	inc    r14d
  41a0a2:	lea    rsi,[rbx+0x68]
  41a0a6:	mov    rdi,QWORD PTR [rbx+0x40]
  41a0aa:	add    r14,rcx
  41a0ad:	mov    rdx,r14
  41a0b0:	mov    ecx,0x1
  41a0b5:	mov    r8d,0x1
  41a0bb:	call   QWORD PTR [rbx+0x50]
  41a0be:	test   eax,eax
  41a0c0:	jne    41a056 <flatcc_builder_start_struct@@Base+0x16>
  41a0c2:	mov    ecx,DWORD PTR [rbx+0x28]
  41a0c5:	mov    rax,rcx
  41a0c8:	add    rax,QWORD PTR [rbx+0x68]
  41a0cc:	mov    QWORD PTR [rbx+0x18],rax
  41a0d0:	mov    edx,DWORD PTR [rbx+0x70]
  41a0d3:	sub    edx,ecx
  41a0d5:	cmp    edx,0xfffffffc
  41a0d8:	mov    ecx,0xfffffffc
  41a0dd:	cmovb  ecx,edx
  41a0e0:	mov    DWORD PTR [rbx+0x24],ecx
  41a0e3:	mov    rcx,QWORD PTR [rbx+0x30]
  41a0e7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41a0ee:	add    rax,r15
  41a0f1:	pop    rbx
  41a0f2:	pop    r14
  41a0f4:	pop    r15
  41a0f6:	ret    
  41a0f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a100 <flatcc_builder_struct_edit@@Base>:
  41a100:	mov    rax,QWORD PTR [rdi+0x18]
  41a104:	ret    
  41a105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a10f:	nop

000000000041a110 <flatcc_builder_end_struct@@Base>:
  41a110:	push   rbp
  41a111:	push   rbx
  41a112:	push   rax
  41a113:	mov    rax,QWORD PTR [rdi+0x30]
  41a117:	cmp    WORD PTR [rax+0xe],0x2
  41a11c:	jne    41a1af <flatcc_builder_end_struct@@Base+0x9f>
  41a122:	mov    rbx,rdi
  41a125:	mov    rsi,QWORD PTR [rdi+0x18]
  41a129:	mov    edx,DWORD PTR [rdi+0x20]
  41a12c:	movzx  ecx,WORD PTR [rdi+0xea]
  41a133:	call   419bb0 <flatcc_builder_create_struct@@Base>
  41a138:	mov    ebp,eax
  41a13a:	test   eax,eax
  41a13c:	je     41a1a6 <flatcc_builder_end_struct@@Base+0x96>
  41a13e:	mov    rdi,QWORD PTR [rbx+0x18]
  41a142:	mov    edx,DWORD PTR [rbx+0x20]
  41a145:	xor    esi,esi
  41a147:	call   4040a0 <memset@plt>
  41a14c:	mov    rax,QWORD PTR [rbx+0x30]
  41a150:	mov    ecx,DWORD PTR [rax+0x8]
  41a153:	mov    DWORD PTR [rbx+0x20],ecx
  41a156:	mov    ecx,DWORD PTR [rax]
  41a158:	mov    DWORD PTR [rbx+0x28],ecx
  41a15b:	mov    edx,DWORD PTR [rax+0x4]
  41a15e:	mov    rsi,rcx
  41a161:	add    rsi,QWORD PTR [rbx+0x68]
  41a165:	mov    QWORD PTR [rbx+0x18],rsi
  41a169:	mov    esi,DWORD PTR [rbx+0x70]
  41a16c:	sub    esi,ecx
  41a16e:	cmp    esi,edx
  41a170:	cmova  esi,edx
  41a173:	mov    DWORD PTR [rbx+0x24],esi
  41a176:	movzx  ecx,WORD PTR [rbx+0xea]
  41a17d:	cmp    WORD PTR [rbx+0xe8],cx
  41a184:	jae    41a18d <flatcc_builder_end_struct@@Base+0x7d>
  41a186:	mov    WORD PTR [rbx+0xe8],cx
  41a18d:	movzx  ecx,WORD PTR [rax+0xc]
  41a191:	mov    WORD PTR [rbx+0xea],cx
  41a198:	add    rax,0xffffffffffffffdc
  41a19c:	mov    QWORD PTR [rbx+0x30],rax
  41a1a0:	dec    DWORD PTR [rbx+0x104]
  41a1a6:	mov    eax,ebp
  41a1a8:	add    rsp,0x8
  41a1ac:	pop    rbx
  41a1ad:	pop    rbp
  41a1ae:	ret    
  41a1af:	lea    rdi,[rip+0x90ba]        # 423270 <flatcc_builder_padding_base@@Base+0x550>
  41a1b6:	lea    rsi,[rip+0x8de5]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a1bd:	lea    rcx,[rip+0x90d8]        # 42329c <flatcc_builder_padding_base@@Base+0x57c>
  41a1c4:	mov    edx,0x368
  41a1c9:	call   404090 <__assert_fail@plt>
  41a1ce:	xchg   ax,ax

000000000041a1d0 <flatcc_builder_extend_vector@@Base>:
  41a1d0:	push   r14
  41a1d2:	push   rbx
  41a1d3:	push   rax
  41a1d4:	mov    rax,QWORD PTR [rdi+0x30]
  41a1d8:	mov    ecx,DWORD PTR [rax+0x14]
  41a1db:	add    ecx,esi
  41a1dd:	jb     41a26f <flatcc_builder_extend_vector@@Base+0x9f>
  41a1e3:	cmp    ecx,DWORD PTR [rax+0x18]
  41a1e6:	ja     41a26f <flatcc_builder_extend_vector@@Base+0x9f>
  41a1ec:	mov    rbx,rdi
  41a1ef:	mov    DWORD PTR [rax+0x14],ecx
  41a1f2:	mov    rax,QWORD PTR [rdi+0x30]
  41a1f6:	imul   esi,DWORD PTR [rax+0x10]
  41a1fa:	mov    r14d,DWORD PTR [rdi+0x20]
  41a1fe:	add    esi,r14d
  41a201:	mov    DWORD PTR [rdi+0x20],esi
  41a204:	cmp    esi,DWORD PTR [rdi+0x24]
  41a207:	jae    41a20f <flatcc_builder_extend_vector@@Base+0x3f>
  41a209:	mov    rax,QWORD PTR [rbx+0x18]
  41a20d:	jmp    41a264 <flatcc_builder_extend_vector@@Base+0x94>
  41a20f:	inc    esi
  41a211:	lea    rax,[rbx+0x68]
  41a215:	mov    rdi,QWORD PTR [rbx+0x40]
  41a219:	mov    edx,DWORD PTR [rbx+0x28]
  41a21c:	add    rdx,rsi
  41a21f:	mov    rsi,rax
  41a222:	mov    ecx,0x1
  41a227:	mov    r8d,0x1
  41a22d:	call   QWORD PTR [rbx+0x50]
  41a230:	test   eax,eax
  41a232:	je     41a238 <flatcc_builder_extend_vector@@Base+0x68>
  41a234:	xor    eax,eax
  41a236:	jmp    41a267 <flatcc_builder_extend_vector@@Base+0x97>
  41a238:	mov    ecx,DWORD PTR [rbx+0x28]
  41a23b:	mov    rax,rcx
  41a23e:	add    rax,QWORD PTR [rbx+0x68]
  41a242:	mov    QWORD PTR [rbx+0x18],rax
  41a246:	mov    edx,DWORD PTR [rbx+0x70]
  41a249:	sub    edx,ecx
  41a24b:	cmp    edx,0xfffffffc
  41a24e:	mov    ecx,0xfffffffc
  41a253:	cmovb  ecx,edx
  41a256:	mov    DWORD PTR [rbx+0x24],ecx
  41a259:	mov    rcx,QWORD PTR [rbx+0x30]
  41a25d:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41a264:	add    rax,r14
  41a267:	add    rsp,0x8
  41a26b:	pop    rbx
  41a26c:	pop    r14
  41a26e:	ret    
  41a26f:	lea    rdi,[rip+0x9df5]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41a276:	lea    rsi,[rip+0x8d25]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a27d:	lea    rcx,[rip+0x9e02]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41a284:	mov    edx,0x37c
  41a289:	call   404090 <__assert_fail@plt>
  41a28e:	xchg   ax,ax

000000000041a290 <flatcc_builder_vector_push@@Base>:
  41a290:	push   r15
  41a292:	push   r14
  41a294:	push   r13
  41a296:	push   r12
  41a298:	push   rbx
  41a299:	mov    rax,QWORD PTR [rdi+0x30]
  41a29d:	cmp    WORD PTR [rax+0xe],0x4
  41a2a2:	jne    41a355 <flatcc_builder_vector_push@@Base+0xc5>
  41a2a8:	mov    ecx,DWORD PTR [rax+0x14]
  41a2ab:	cmp    ecx,DWORD PTR [rax+0x18]
  41a2ae:	ja     41a374 <flatcc_builder_vector_push@@Base+0xe4>
  41a2b4:	mov    r14,rsi
  41a2b7:	mov    rbx,rdi
  41a2ba:	inc    ecx
  41a2bc:	mov    DWORD PTR [rax+0x14],ecx
  41a2bf:	mov    rax,QWORD PTR [rdi+0x30]
  41a2c3:	mov    r15d,DWORD PTR [rax+0x10]
  41a2c7:	mov    r13d,DWORD PTR [rdi+0x20]
  41a2cb:	lea    eax,[r15+r13*1]
  41a2cf:	mov    DWORD PTR [rdi+0x20],eax
  41a2d2:	cmp    eax,DWORD PTR [rdi+0x24]
  41a2d5:	jae    41a2e2 <flatcc_builder_vector_push@@Base+0x52>
  41a2d7:	mov    r12,QWORD PTR [rbx+0x18]
  41a2db:	add    r12,r13
  41a2de:	jne    41a33a <flatcc_builder_vector_push@@Base+0xaa>
  41a2e0:	jmp    41a304 <flatcc_builder_vector_push@@Base+0x74>
  41a2e2:	inc    eax
  41a2e4:	lea    rsi,[rbx+0x68]
  41a2e8:	mov    rdi,QWORD PTR [rbx+0x40]
  41a2ec:	mov    edx,DWORD PTR [rbx+0x28]
  41a2ef:	add    rdx,rax
  41a2f2:	mov    ecx,0x1
  41a2f7:	mov    r8d,0x1
  41a2fd:	call   QWORD PTR [rbx+0x50]
  41a300:	test   eax,eax
  41a302:	je     41a309 <flatcc_builder_vector_push@@Base+0x79>
  41a304:	xor    r12d,r12d
  41a307:	jmp    41a348 <flatcc_builder_vector_push@@Base+0xb8>
  41a309:	mov    eax,DWORD PTR [rbx+0x28]
  41a30c:	mov    r12,rax
  41a30f:	add    r12,QWORD PTR [rbx+0x68]
  41a313:	mov    QWORD PTR [rbx+0x18],r12
  41a317:	mov    ecx,DWORD PTR [rbx+0x70]
  41a31a:	sub    ecx,eax
  41a31c:	cmp    ecx,0xfffffffc
  41a31f:	mov    eax,0xfffffffc
  41a324:	cmovb  eax,ecx
  41a327:	mov    DWORD PTR [rbx+0x24],eax
  41a32a:	mov    rax,QWORD PTR [rbx+0x30]
  41a32e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41a335:	add    r12,r13
  41a338:	je     41a304 <flatcc_builder_vector_push@@Base+0x74>
  41a33a:	mov    rdi,r12
  41a33d:	mov    rsi,r14
  41a340:	mov    rdx,r15
  41a343:	call   4040f0 <memcpy@plt>
  41a348:	mov    rax,r12
  41a34b:	pop    rbx
  41a34c:	pop    r12
  41a34e:	pop    r13
  41a350:	pop    r14
  41a352:	pop    r15
  41a354:	ret    
  41a355:	lea    rdi,[rip+0x8f83]        # 4232df <flatcc_builder_padding_base@@Base+0x5bf>
  41a35c:	lea    rsi,[rip+0x8c3f]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a363:	lea    rcx,[rip+0x8fa1]        # 42330b <flatcc_builder_padding_base@@Base+0x5eb>
  41a36a:	mov    edx,0x38b
  41a36f:	call   404090 <__assert_fail@plt>
  41a374:	lea    rdi,[rip+0x8fd3]        # 42334e <flatcc_builder_padding_base@@Base+0x62e>
  41a37b:	lea    rsi,[rip+0x8c20]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a382:	lea    rcx,[rip+0x8f82]        # 42330b <flatcc_builder_padding_base@@Base+0x5eb>
  41a389:	mov    edx,0x38c
  41a38e:	call   404090 <__assert_fail@plt>
  41a393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a39d:	nop    DWORD PTR [rax]

000000000041a3a0 <flatcc_builder_append_vector@@Base>:
  41a3a0:	push   r15
  41a3a2:	push   r14
  41a3a4:	push   r13
  41a3a6:	push   r12
  41a3a8:	push   rbx
  41a3a9:	mov    rax,QWORD PTR [rdi+0x30]
  41a3ad:	cmp    WORD PTR [rax+0xe],0x4
  41a3b2:	jne    41a48f <flatcc_builder_append_vector@@Base+0xef>
  41a3b8:	mov    r15,rdx
  41a3bb:	mov    ecx,DWORD PTR [rax+0x14]
  41a3be:	add    ecx,r15d
  41a3c1:	jb     41a470 <flatcc_builder_append_vector@@Base+0xd0>
  41a3c7:	cmp    ecx,DWORD PTR [rax+0x18]
  41a3ca:	ja     41a470 <flatcc_builder_append_vector@@Base+0xd0>
  41a3d0:	mov    r14,rsi
  41a3d3:	mov    rbx,rdi
  41a3d6:	mov    DWORD PTR [rax+0x14],ecx
  41a3d9:	mov    rax,QWORD PTR [rdi+0x30]
  41a3dd:	imul   r15d,DWORD PTR [rax+0x10]
  41a3e2:	mov    r13d,DWORD PTR [rdi+0x20]
  41a3e6:	lea    eax,[r15+r13*1]
  41a3ea:	mov    DWORD PTR [rdi+0x20],eax
  41a3ed:	cmp    eax,DWORD PTR [rdi+0x24]
  41a3f0:	jae    41a3fd <flatcc_builder_append_vector@@Base+0x5d>
  41a3f2:	mov    r12,QWORD PTR [rbx+0x18]
  41a3f6:	add    r12,r13
  41a3f9:	jne    41a455 <flatcc_builder_append_vector@@Base+0xb5>
  41a3fb:	jmp    41a41f <flatcc_builder_append_vector@@Base+0x7f>
  41a3fd:	inc    eax
  41a3ff:	lea    rsi,[rbx+0x68]
  41a403:	mov    rdi,QWORD PTR [rbx+0x40]
  41a407:	mov    edx,DWORD PTR [rbx+0x28]
  41a40a:	add    rdx,rax
  41a40d:	mov    ecx,0x1
  41a412:	mov    r8d,0x1
  41a418:	call   QWORD PTR [rbx+0x50]
  41a41b:	test   eax,eax
  41a41d:	je     41a424 <flatcc_builder_append_vector@@Base+0x84>
  41a41f:	xor    r12d,r12d
  41a422:	jmp    41a463 <flatcc_builder_append_vector@@Base+0xc3>
  41a424:	mov    eax,DWORD PTR [rbx+0x28]
  41a427:	mov    r12,rax
  41a42a:	add    r12,QWORD PTR [rbx+0x68]
  41a42e:	mov    QWORD PTR [rbx+0x18],r12
  41a432:	mov    ecx,DWORD PTR [rbx+0x70]
  41a435:	sub    ecx,eax
  41a437:	cmp    ecx,0xfffffffc
  41a43a:	mov    eax,0xfffffffc
  41a43f:	cmovb  eax,ecx
  41a442:	mov    DWORD PTR [rbx+0x24],eax
  41a445:	mov    rax,QWORD PTR [rbx+0x30]
  41a449:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41a450:	add    r12,r13
  41a453:	je     41a41f <flatcc_builder_append_vector@@Base+0x7f>
  41a455:	mov    edx,r15d
  41a458:	mov    rdi,r12
  41a45b:	mov    rsi,r14
  41a45e:	call   4040f0 <memcpy@plt>
  41a463:	mov    rax,r12
  41a466:	pop    rbx
  41a467:	pop    r12
  41a469:	pop    r13
  41a46b:	pop    r14
  41a46d:	pop    r15
  41a46f:	ret    
  41a470:	lea    rdi,[rip+0x9bf4]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41a477:	lea    rsi,[rip+0x8b24]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a47e:	lea    rcx,[rip+0x9c01]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41a485:	mov    edx,0x37c
  41a48a:	call   404090 <__assert_fail@plt>
  41a48f:	lea    rdi,[rip+0x8e49]        # 4232df <flatcc_builder_padding_base@@Base+0x5bf>
  41a496:	lea    rsi,[rip+0x8b05]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a49d:	lea    rcx,[rip+0x8ee7]        # 42338b <flatcc_builder_padding_base@@Base+0x66b>
  41a4a4:	mov    edx,0x393
  41a4a9:	call   404090 <__assert_fail@plt>
  41a4ae:	xchg   ax,ax

000000000041a4b0 <flatcc_builder_extend_offset_vector@@Base>:
  41a4b0:	push   r14
  41a4b2:	push   rbx
  41a4b3:	push   rax
  41a4b4:	mov    rax,QWORD PTR [rdi+0x30]
  41a4b8:	mov    ecx,DWORD PTR [rax+0x14]
  41a4bb:	add    ecx,esi
  41a4bd:	jb     41a544 <flatcc_builder_extend_offset_vector@@Base+0x94>
  41a4c3:	cmp    ecx,0x40000000
  41a4c9:	jae    41a544 <flatcc_builder_extend_offset_vector@@Base+0x94>
  41a4cb:	mov    rbx,rdi
  41a4ce:	mov    DWORD PTR [rax+0x14],ecx
  41a4d1:	mov    r14d,DWORD PTR [rdi+0x20]
  41a4d5:	lea    eax,[r14+rsi*4]
  41a4d9:	mov    DWORD PTR [rdi+0x20],eax
  41a4dc:	cmp    eax,DWORD PTR [rdi+0x24]
  41a4df:	jae    41a4e7 <flatcc_builder_extend_offset_vector@@Base+0x37>
  41a4e1:	mov    rax,QWORD PTR [rbx+0x18]
  41a4e5:	jmp    41a539 <flatcc_builder_extend_offset_vector@@Base+0x89>
  41a4e7:	inc    eax
  41a4e9:	lea    rsi,[rbx+0x68]
  41a4ed:	mov    rdi,QWORD PTR [rbx+0x40]
  41a4f1:	mov    edx,DWORD PTR [rbx+0x28]
  41a4f4:	add    rdx,rax
  41a4f7:	mov    ecx,0x1
  41a4fc:	mov    r8d,0x1
  41a502:	call   QWORD PTR [rbx+0x50]
  41a505:	test   eax,eax
  41a507:	je     41a50d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  41a509:	xor    eax,eax
  41a50b:	jmp    41a53c <flatcc_builder_extend_offset_vector@@Base+0x8c>
  41a50d:	mov    ecx,DWORD PTR [rbx+0x28]
  41a510:	mov    rax,rcx
  41a513:	add    rax,QWORD PTR [rbx+0x68]
  41a517:	mov    QWORD PTR [rbx+0x18],rax
  41a51b:	mov    edx,DWORD PTR [rbx+0x70]
  41a51e:	sub    edx,ecx
  41a520:	cmp    edx,0xfffffffc
  41a523:	mov    ecx,0xfffffffc
  41a528:	cmovb  ecx,edx
  41a52b:	mov    DWORD PTR [rbx+0x24],ecx
  41a52e:	mov    rcx,QWORD PTR [rbx+0x30]
  41a532:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41a539:	add    rax,r14
  41a53c:	add    rsp,0x8
  41a540:	pop    rbx
  41a541:	pop    r14
  41a543:	ret    
  41a544:	lea    rdi,[rip+0x9b20]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41a54b:	lea    rsi,[rip+0x8a50]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a552:	lea    rcx,[rip+0x9b2d]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41a559:	mov    edx,0x37c
  41a55e:	call   404090 <__assert_fail@plt>
  41a563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a56d:	nop    DWORD PTR [rax]

000000000041a570 <flatcc_builder_offset_vector_push@@Base>:
  41a570:	push   rbp
  41a571:	push   r14
  41a573:	push   rbx
  41a574:	mov    rax,QWORD PTR [rdi+0x30]
  41a578:	cmp    WORD PTR [rax+0xe],0x5
  41a57d:	jne    41a612 <flatcc_builder_offset_vector_push@@Base+0xa2>
  41a583:	mov    ecx,DWORD PTR [rax+0x14]
  41a586:	cmp    ecx,0x3fffffff
  41a58c:	je     41a5d5 <flatcc_builder_offset_vector_push@@Base+0x65>
  41a58e:	mov    r14d,esi
  41a591:	mov    rbx,rdi
  41a594:	inc    ecx
  41a596:	mov    DWORD PTR [rax+0x14],ecx
  41a599:	mov    ebp,DWORD PTR [rdi+0x20]
  41a59c:	lea    eax,[rbp+0x4]
  41a59f:	mov    DWORD PTR [rdi+0x20],eax
  41a5a2:	cmp    eax,DWORD PTR [rdi+0x24]
  41a5a5:	jae    41a5b2 <flatcc_builder_offset_vector_push@@Base+0x42>
  41a5a7:	mov    rax,QWORD PTR [rbx+0x18]
  41a5ab:	add    rax,rbp
  41a5ae:	jne    41a60a <flatcc_builder_offset_vector_push@@Base+0x9a>
  41a5b0:	jmp    41a5d5 <flatcc_builder_offset_vector_push@@Base+0x65>
  41a5b2:	lea    eax,[rbp+0x5]
  41a5b5:	lea    rsi,[rbx+0x68]
  41a5b9:	mov    rdi,QWORD PTR [rbx+0x40]
  41a5bd:	mov    edx,DWORD PTR [rbx+0x28]
  41a5c0:	add    rdx,rax
  41a5c3:	mov    ecx,0x1
  41a5c8:	mov    r8d,0x1
  41a5ce:	call   QWORD PTR [rbx+0x50]
  41a5d1:	test   eax,eax
  41a5d3:	je     41a5d9 <flatcc_builder_offset_vector_push@@Base+0x69>
  41a5d5:	xor    eax,eax
  41a5d7:	jmp    41a60d <flatcc_builder_offset_vector_push@@Base+0x9d>
  41a5d9:	mov    ecx,DWORD PTR [rbx+0x28]
  41a5dc:	mov    rax,rcx
  41a5df:	add    rax,QWORD PTR [rbx+0x68]
  41a5e3:	mov    QWORD PTR [rbx+0x18],rax
  41a5e7:	mov    edx,DWORD PTR [rbx+0x70]
  41a5ea:	sub    edx,ecx
  41a5ec:	cmp    edx,0xfffffffc
  41a5ef:	mov    ecx,0xfffffffc
  41a5f4:	cmovb  ecx,edx
  41a5f7:	mov    DWORD PTR [rbx+0x24],ecx
  41a5fa:	mov    rcx,QWORD PTR [rbx+0x30]
  41a5fe:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41a605:	add    rax,rbp
  41a608:	je     41a5d5 <flatcc_builder_offset_vector_push@@Base+0x65>
  41a60a:	mov    DWORD PTR [rax],r14d
  41a60d:	pop    rbx
  41a60e:	pop    r14
  41a610:	pop    rbp
  41a611:	ret    
  41a612:	lea    rdi,[rip+0x8dbf]        # 4233d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41a619:	lea    rsi,[rip+0x8982]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a620:	lea    rcx,[rip+0x8de4]        # 42340b <flatcc_builder_padding_base@@Base+0x6eb>
  41a627:	mov    edx,0x3a6
  41a62c:	call   404090 <__assert_fail@plt>
  41a631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a63b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a640 <flatcc_builder_append_offset_vector@@Base>:
  41a640:	push   r15
  41a642:	push   r14
  41a644:	push   r13
  41a646:	push   r12
  41a648:	push   rbx
  41a649:	mov    rax,QWORD PTR [rdi+0x30]
  41a64d:	cmp    WORD PTR [rax+0xe],0x5
  41a652:	jne    41a72e <flatcc_builder_append_offset_vector@@Base+0xee>
  41a658:	mov    r15,rdx
  41a65b:	mov    ecx,DWORD PTR [rax+0x14]
  41a65e:	add    ecx,r15d
  41a661:	jb     41a70f <flatcc_builder_append_offset_vector@@Base+0xcf>
  41a667:	cmp    ecx,0x40000000
  41a66d:	jae    41a70f <flatcc_builder_append_offset_vector@@Base+0xcf>
  41a673:	mov    r14,rsi
  41a676:	mov    rbx,rdi
  41a679:	mov    DWORD PTR [rax+0x14],ecx
  41a67c:	mov    r13d,DWORD PTR [rdi+0x20]
  41a680:	lea    eax,[r13+r15*4+0x0]
  41a685:	mov    DWORD PTR [rdi+0x20],eax
  41a688:	cmp    eax,DWORD PTR [rdi+0x24]
  41a68b:	jae    41a698 <flatcc_builder_append_offset_vector@@Base+0x58>
  41a68d:	mov    r12,QWORD PTR [rbx+0x18]
  41a691:	add    r12,r13
  41a694:	jne    41a6f0 <flatcc_builder_append_offset_vector@@Base+0xb0>
  41a696:	jmp    41a6ba <flatcc_builder_append_offset_vector@@Base+0x7a>
  41a698:	inc    eax
  41a69a:	lea    rsi,[rbx+0x68]
  41a69e:	mov    rdi,QWORD PTR [rbx+0x40]
  41a6a2:	mov    edx,DWORD PTR [rbx+0x28]
  41a6a5:	add    rdx,rax
  41a6a8:	mov    ecx,0x1
  41a6ad:	mov    r8d,0x1
  41a6b3:	call   QWORD PTR [rbx+0x50]
  41a6b6:	test   eax,eax
  41a6b8:	je     41a6bf <flatcc_builder_append_offset_vector@@Base+0x7f>
  41a6ba:	xor    r12d,r12d
  41a6bd:	jmp    41a702 <flatcc_builder_append_offset_vector@@Base+0xc2>
  41a6bf:	mov    eax,DWORD PTR [rbx+0x28]
  41a6c2:	mov    r12,rax
  41a6c5:	add    r12,QWORD PTR [rbx+0x68]
  41a6c9:	mov    QWORD PTR [rbx+0x18],r12
  41a6cd:	mov    ecx,DWORD PTR [rbx+0x70]
  41a6d0:	sub    ecx,eax
  41a6d2:	cmp    ecx,0xfffffffc
  41a6d5:	mov    eax,0xfffffffc
  41a6da:	cmovb  eax,ecx
  41a6dd:	mov    DWORD PTR [rbx+0x24],eax
  41a6e0:	mov    rax,QWORD PTR [rbx+0x30]
  41a6e4:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41a6eb:	add    r12,r13
  41a6ee:	je     41a6ba <flatcc_builder_append_offset_vector@@Base+0x7a>
  41a6f0:	shl    r15d,0x2
  41a6f4:	mov    edx,r15d
  41a6f7:	mov    rdi,r12
  41a6fa:	mov    rsi,r14
  41a6fd:	call   4040f0 <memcpy@plt>
  41a702:	mov    rax,r12
  41a705:	pop    rbx
  41a706:	pop    r12
  41a708:	pop    r13
  41a70a:	pop    r14
  41a70c:	pop    r15
  41a70e:	ret    
  41a70f:	lea    rdi,[rip+0x9955]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41a716:	lea    rsi,[rip+0x8885]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a71d:	lea    rcx,[rip+0x9962]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41a724:	mov    edx,0x37c
  41a729:	call   404090 <__assert_fail@plt>
  41a72e:	lea    rdi,[rip+0x8ca3]        # 4233d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41a735:	lea    rsi,[rip+0x8866]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a73c:	lea    rcx,[rip+0x8d2a]        # 42346d <flatcc_builder_padding_base@@Base+0x74d>
  41a743:	mov    edx,0x3b4
  41a748:	call   404090 <__assert_fail@plt>
  41a74d:	nop    DWORD PTR [rax]

000000000041a750 <flatcc_builder_extend_string@@Base>:
  41a750:	push   r14
  41a752:	push   rbx
  41a753:	push   rax
  41a754:	mov    rax,QWORD PTR [rdi+0x30]
  41a758:	cmp    WORD PTR [rax+0xe],0x6
  41a75d:	jne    41a7e9 <flatcc_builder_extend_string@@Base+0x99>
  41a763:	mov    ecx,DWORD PTR [rax+0x14]
  41a766:	add    ecx,esi
  41a768:	jb     41a808 <flatcc_builder_extend_string@@Base+0xb8>
  41a76e:	mov    rbx,rdi
  41a771:	mov    DWORD PTR [rax+0x14],ecx
  41a774:	mov    r14d,DWORD PTR [rdi+0x20]
  41a778:	add    esi,r14d
  41a77b:	mov    DWORD PTR [rdi+0x20],esi
  41a77e:	cmp    esi,DWORD PTR [rdi+0x24]
  41a781:	jae    41a789 <flatcc_builder_extend_string@@Base+0x39>
  41a783:	mov    rax,QWORD PTR [rbx+0x18]
  41a787:	jmp    41a7de <flatcc_builder_extend_string@@Base+0x8e>
  41a789:	inc    esi
  41a78b:	lea    rax,[rbx+0x68]
  41a78f:	mov    rdi,QWORD PTR [rbx+0x40]
  41a793:	mov    edx,DWORD PTR [rbx+0x28]
  41a796:	add    rdx,rsi
  41a799:	mov    rsi,rax
  41a79c:	mov    ecx,0x1
  41a7a1:	mov    r8d,0x1
  41a7a7:	call   QWORD PTR [rbx+0x50]
  41a7aa:	test   eax,eax
  41a7ac:	je     41a7b2 <flatcc_builder_extend_string@@Base+0x62>
  41a7ae:	xor    eax,eax
  41a7b0:	jmp    41a7e1 <flatcc_builder_extend_string@@Base+0x91>
  41a7b2:	mov    ecx,DWORD PTR [rbx+0x28]
  41a7b5:	mov    rax,rcx
  41a7b8:	add    rax,QWORD PTR [rbx+0x68]
  41a7bc:	mov    QWORD PTR [rbx+0x18],rax
  41a7c0:	mov    edx,DWORD PTR [rbx+0x70]
  41a7c3:	sub    edx,ecx
  41a7c5:	cmp    edx,0xfffffffc
  41a7c8:	mov    ecx,0xfffffffc
  41a7cd:	cmovb  ecx,edx
  41a7d0:	mov    DWORD PTR [rbx+0x24],ecx
  41a7d3:	mov    rcx,QWORD PTR [rbx+0x30]
  41a7d7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41a7de:	add    rax,r14
  41a7e1:	add    rsp,0x8
  41a7e5:	pop    rbx
  41a7e6:	pop    r14
  41a7e8:	ret    
  41a7e9:	lea    rdi,[rip+0x8cf1]        # 4234e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41a7f0:	lea    rsi,[rip+0x87ab]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a7f7:	lea    rcx,[rip+0x8d0f]        # 42350d <flatcc_builder_padding_base@@Base+0x7ed>
  41a7fe:	mov    edx,0x3bd
  41a803:	call   404090 <__assert_fail@plt>
  41a808:	lea    rdi,[rip+0x985c]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41a80f:	lea    rsi,[rip+0x878c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a816:	lea    rcx,[rip+0x9869]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41a81d:	mov    edx,0x37c
  41a822:	call   404090 <__assert_fail@plt>
  41a827:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a830 <flatcc_builder_append_string@@Base>:
  41a830:	push   r15
  41a832:	push   r14
  41a834:	push   r13
  41a836:	push   r12
  41a838:	push   rbx
  41a839:	mov    rax,QWORD PTR [rdi+0x30]
  41a83d:	cmp    WORD PTR [rax+0xe],0x6
  41a842:	jne    41a8ee <flatcc_builder_append_string@@Base+0xbe>
  41a848:	mov    r15,rdx
  41a84b:	mov    ecx,DWORD PTR [rax+0x14]
  41a84e:	add    ecx,r15d
  41a851:	jb     41a90d <flatcc_builder_append_string@@Base+0xdd>
  41a857:	mov    r14,rsi
  41a85a:	mov    rbx,rdi
  41a85d:	mov    DWORD PTR [rax+0x14],ecx
  41a860:	mov    r13d,DWORD PTR [rdi+0x20]
  41a864:	lea    eax,[r15+r13*1]
  41a868:	mov    DWORD PTR [rdi+0x20],eax
  41a86b:	cmp    eax,DWORD PTR [rdi+0x24]
  41a86e:	jae    41a87b <flatcc_builder_append_string@@Base+0x4b>
  41a870:	mov    r12,QWORD PTR [rbx+0x18]
  41a874:	add    r12,r13
  41a877:	jne    41a8d3 <flatcc_builder_append_string@@Base+0xa3>
  41a879:	jmp    41a89d <flatcc_builder_append_string@@Base+0x6d>
  41a87b:	inc    eax
  41a87d:	lea    rsi,[rbx+0x68]
  41a881:	mov    rdi,QWORD PTR [rbx+0x40]
  41a885:	mov    edx,DWORD PTR [rbx+0x28]
  41a888:	add    rdx,rax
  41a88b:	mov    ecx,0x1
  41a890:	mov    r8d,0x1
  41a896:	call   QWORD PTR [rbx+0x50]
  41a899:	test   eax,eax
  41a89b:	je     41a8a2 <flatcc_builder_append_string@@Base+0x72>
  41a89d:	xor    r12d,r12d
  41a8a0:	jmp    41a8e1 <flatcc_builder_append_string@@Base+0xb1>
  41a8a2:	mov    eax,DWORD PTR [rbx+0x28]
  41a8a5:	mov    r12,rax
  41a8a8:	add    r12,QWORD PTR [rbx+0x68]
  41a8ac:	mov    QWORD PTR [rbx+0x18],r12
  41a8b0:	mov    ecx,DWORD PTR [rbx+0x70]
  41a8b3:	sub    ecx,eax
  41a8b5:	cmp    ecx,0xfffffffc
  41a8b8:	mov    eax,0xfffffffc
  41a8bd:	cmovb  eax,ecx
  41a8c0:	mov    DWORD PTR [rbx+0x24],eax
  41a8c3:	mov    rax,QWORD PTR [rbx+0x30]
  41a8c7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41a8ce:	add    r12,r13
  41a8d1:	je     41a89d <flatcc_builder_append_string@@Base+0x6d>
  41a8d3:	mov    edx,r15d
  41a8d6:	mov    rdi,r12
  41a8d9:	mov    rsi,r14
  41a8dc:	call   4040f0 <memcpy@plt>
  41a8e1:	mov    rax,r12
  41a8e4:	pop    rbx
  41a8e5:	pop    r12
  41a8e7:	pop    r13
  41a8e9:	pop    r14
  41a8eb:	pop    r15
  41a8ed:	ret    
  41a8ee:	lea    rdi,[rip+0x8bec]        # 4234e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41a8f5:	lea    rsi,[rip+0x86a6]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a8fc:	lea    rcx,[rip+0x8c49]        # 42354c <flatcc_builder_padding_base@@Base+0x82c>
  41a903:	mov    edx,0x3c6
  41a908:	call   404090 <__assert_fail@plt>
  41a90d:	lea    rdi,[rip+0x9757]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41a914:	lea    rsi,[rip+0x8687]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a91b:	lea    rcx,[rip+0x9764]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41a922:	mov    edx,0x37c
  41a927:	call   404090 <__assert_fail@plt>
  41a92c:	nop    DWORD PTR [rax+0x0]

000000000041a930 <flatcc_builder_append_string_str@@Base>:
  41a930:	push   r14
  41a932:	push   rbx
  41a933:	push   rax
  41a934:	mov    rbx,rsi
  41a937:	mov    r14,rdi
  41a93a:	mov    rdi,rsi
  41a93d:	call   404070 <strlen@plt>
  41a942:	mov    rdi,r14
  41a945:	mov    rsi,rbx
  41a948:	mov    rdx,rax
  41a94b:	add    rsp,0x8
  41a94f:	pop    rbx
  41a950:	pop    r14
  41a952:	jmp    41a830 <flatcc_builder_append_string@@Base>
  41a957:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a960 <flatcc_builder_append_string_strn@@Base>:
  41a960:	push   r15
  41a962:	push   r14
  41a964:	push   rbx
  41a965:	mov    rbx,rdx
  41a968:	mov    r14,rsi
  41a96b:	mov    r15,rdi
  41a96e:	mov    rdi,rsi
  41a971:	xor    esi,esi
  41a973:	call   4040c0 <memchr@plt>
  41a978:	mov    rcx,rax
  41a97b:	sub    rcx,r14
  41a97e:	test   rax,rax
  41a981:	cmovne rbx,rcx
  41a985:	mov    rdi,r15
  41a988:	mov    rsi,r14
  41a98b:	mov    rdx,rbx
  41a98e:	pop    rbx
  41a98f:	pop    r14
  41a991:	pop    r15
  41a993:	jmp    41a830 <flatcc_builder_append_string@@Base>
  41a998:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a9a0 <flatcc_builder_truncate_vector@@Base>:
  41a9a0:	push   rax
  41a9a1:	mov    rax,QWORD PTR [rdi+0x30]
  41a9a5:	cmp    WORD PTR [rax+0xe],0x4
  41a9aa:	jne    41a9de <flatcc_builder_truncate_vector@@Base+0x3e>
  41a9ac:	mov    rdx,rsi
  41a9af:	mov    ecx,DWORD PTR [rax+0x14]
  41a9b2:	cmp    rcx,rsi
  41a9b5:	jb     41a9fd <flatcc_builder_truncate_vector@@Base+0x5d>
  41a9b7:	sub    ecx,edx
  41a9b9:	mov    DWORD PTR [rax+0x14],ecx
  41a9bc:	mov    rax,QWORD PTR [rdi+0x30]
  41a9c0:	imul   edx,DWORD PTR [rax+0x10]
  41a9c4:	mov    eax,DWORD PTR [rdi+0x20]
  41a9c7:	sub    eax,edx
  41a9c9:	mov    DWORD PTR [rdi+0x20],eax
  41a9cc:	add    rax,QWORD PTR [rdi+0x18]
  41a9d0:	mov    rdi,rax
  41a9d3:	xor    esi,esi
  41a9d5:	call   4040a0 <memset@plt>
  41a9da:	xor    eax,eax
  41a9dc:	pop    rcx
  41a9dd:	ret    
  41a9de:	lea    rdi,[rip+0x88fa]        # 4232df <flatcc_builder_padding_base@@Base+0x5bf>
  41a9e5:	lea    rsi,[rip+0x85b6]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41a9ec:	lea    rcx,[rip+0x8ba6]        # 423599 <flatcc_builder_padding_base@@Base+0x879>
  41a9f3:	mov    edx,0x3d9
  41a9f8:	call   404090 <__assert_fail@plt>
  41a9fd:	lea    rdi,[rip+0x8bd4]        # 4235d8 <flatcc_builder_padding_base@@Base+0x8b8>
  41aa04:	lea    rsi,[rip+0x8597]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41aa0b:	lea    rcx,[rip+0x8b87]        # 423599 <flatcc_builder_padding_base@@Base+0x879>
  41aa12:	mov    edx,0x3da
  41aa17:	call   404090 <__assert_fail@plt>
  41aa1c:	nop    DWORD PTR [rax+0x0]

000000000041aa20 <flatcc_builder_truncate_offset_vector@@Base>:
  41aa20:	push   rax
  41aa21:	mov    rax,QWORD PTR [rdi+0x30]
  41aa25:	cmp    WORD PTR [rax+0xe],0x5
  41aa2a:	jne    41aa5b <flatcc_builder_truncate_offset_vector@@Base+0x3b>
  41aa2c:	mov    rdx,rsi
  41aa2f:	mov    ecx,DWORD PTR [rax+0x14]
  41aa32:	sub    ecx,edx
  41aa34:	jb     41aa7a <flatcc_builder_truncate_offset_vector@@Base+0x5a>
  41aa36:	mov    DWORD PTR [rax+0x14],ecx
  41aa39:	mov    rax,QWORD PTR [rdi+0x30]
  41aa3d:	imul   edx,DWORD PTR [rax+0x10]
  41aa41:	mov    eax,DWORD PTR [rdi+0x20]
  41aa44:	sub    eax,edx
  41aa46:	mov    DWORD PTR [rdi+0x20],eax
  41aa49:	add    rax,QWORD PTR [rdi+0x18]
  41aa4d:	mov    rdi,rax
  41aa50:	xor    esi,esi
  41aa52:	call   4040a0 <memset@plt>
  41aa57:	xor    eax,eax
  41aa59:	pop    rcx
  41aa5a:	ret    
  41aa5b:	lea    rdi,[rip+0x8976]        # 4233d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41aa62:	lea    rsi,[rip+0x8539]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41aa69:	lea    rcx,[rip+0x8b8c]        # 4235fc <flatcc_builder_padding_base@@Base+0x8dc>
  41aa70:	mov    edx,0x3e2
  41aa75:	call   404090 <__assert_fail@plt>
  41aa7a:	lea    rdi,[rip+0x8bc1]        # 423642 <flatcc_builder_padding_base@@Base+0x922>
  41aa81:	lea    rsi,[rip+0x851a]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41aa88:	lea    rcx,[rip+0x8b6d]        # 4235fc <flatcc_builder_padding_base@@Base+0x8dc>
  41aa8f:	mov    edx,0x3e3
  41aa94:	call   404090 <__assert_fail@plt>
  41aa99:	nop    DWORD PTR [rax+0x0]

000000000041aaa0 <flatcc_builder_truncate_string@@Base>:
  41aaa0:	push   rax
  41aaa1:	mov    rax,QWORD PTR [rdi+0x30]
  41aaa5:	cmp    WORD PTR [rax+0xe],0x6
  41aaaa:	jne    41aad5 <flatcc_builder_truncate_string@@Base+0x35>
  41aaac:	mov    ecx,DWORD PTR [rax+0x14]
  41aaaf:	cmp    rcx,rsi
  41aab2:	jb     41aaf4 <flatcc_builder_truncate_string@@Base+0x54>
  41aab4:	sub    ecx,esi
  41aab6:	mov    DWORD PTR [rax+0x14],ecx
  41aab9:	mov    eax,DWORD PTR [rdi+0x20]
  41aabc:	sub    eax,esi
  41aabe:	mov    DWORD PTR [rdi+0x20],eax
  41aac1:	add    rax,QWORD PTR [rdi+0x18]
  41aac5:	mov    edx,esi
  41aac7:	mov    rdi,rax
  41aaca:	xor    esi,esi
  41aacc:	call   4040a0 <memset@plt>
  41aad1:	xor    eax,eax
  41aad3:	pop    rcx
  41aad4:	ret    
  41aad5:	lea    rdi,[rip+0x8a05]        # 4234e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41aadc:	lea    rsi,[rip+0x84bf]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41aae3:	lea    rcx,[rip+0x8b93]        # 42367d <flatcc_builder_padding_base@@Base+0x95d>
  41aaea:	mov    edx,0x3eb
  41aaef:	call   404090 <__assert_fail@plt>
  41aaf4:	lea    rdi,[rip+0x8bc1]        # 4236bc <flatcc_builder_padding_base@@Base+0x99c>
  41aafb:	lea    rsi,[rip+0x84a0]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41ab02:	lea    rcx,[rip+0x8b74]        # 42367d <flatcc_builder_padding_base@@Base+0x95d>
  41ab09:	mov    edx,0x3ec
  41ab0e:	call   404090 <__assert_fail@plt>
  41ab13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab1d:	nop    DWORD PTR [rax]

000000000041ab20 <flatcc_builder_start_vector@@Base>:
  41ab20:	push   r15
  41ab22:	push   r14
  41ab24:	push   rbx
  41ab25:	mov    r14,rcx
  41ab28:	mov    r15,rsi
  41ab2b:	mov    rbx,rdi
  41ab2e:	cmp    dx,0x4
  41ab32:	mov    esi,0x4
  41ab37:	cmova  esi,edx
  41ab3a:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41ab3f:	mov    ecx,eax
  41ab41:	mov    eax,0xffffffff
  41ab46:	test   ecx,ecx
  41ab48:	jne    41ab96 <flatcc_builder_start_vector@@Base+0x76>
  41ab4a:	mov    rax,QWORD PTR [rbx+0x30]
  41ab4e:	mov    DWORD PTR [rax+0x10],r15d
  41ab52:	mov    rax,QWORD PTR [rbx+0x30]
  41ab56:	mov    DWORD PTR [rax+0x14],0x0
  41ab5d:	mov    rax,QWORD PTR [rbx+0x30]
  41ab61:	mov    DWORD PTR [rax+0x18],r14d
  41ab65:	mov    rax,QWORD PTR [rbx+0x30]
  41ab69:	mov    WORD PTR [rax+0xe],0x4
  41ab6f:	mov    ecx,DWORD PTR [rbx+0x28]
  41ab72:	mov    edx,DWORD PTR [rbx+0x70]
  41ab75:	sub    edx,ecx
  41ab77:	add    rcx,QWORD PTR [rbx+0x68]
  41ab7b:	mov    QWORD PTR [rbx+0x18],rcx
  41ab7f:	cmp    edx,0xfffffffc
  41ab82:	mov    ecx,0xfffffffc
  41ab87:	cmovb  ecx,edx
  41ab8a:	mov    DWORD PTR [rbx+0x24],ecx
  41ab8d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ab94:	xor    eax,eax
  41ab96:	pop    rbx
  41ab97:	pop    r14
  41ab99:	pop    r15
  41ab9b:	ret    
  41ab9c:	nop    DWORD PTR [rax+0x0]

000000000041aba0 <flatcc_builder_start_offset_vector@@Base>:
  41aba0:	push   rbx
  41aba1:	mov    rbx,rdi
  41aba4:	mov    esi,0x4
  41aba9:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41abae:	mov    ecx,eax
  41abb0:	mov    eax,0xffffffff
  41abb5:	test   ecx,ecx
  41abb7:	je     41abbb <flatcc_builder_start_offset_vector@@Base+0x1b>
  41abb9:	pop    rbx
  41abba:	ret    
  41abbb:	mov    rax,QWORD PTR [rbx+0x30]
  41abbf:	mov    DWORD PTR [rax+0x10],0x4
  41abc6:	mov    rax,QWORD PTR [rbx+0x30]
  41abca:	mov    DWORD PTR [rax+0x14],0x0
  41abd1:	mov    rax,QWORD PTR [rbx+0x30]
  41abd5:	mov    WORD PTR [rax+0xe],0x5
  41abdb:	mov    ecx,DWORD PTR [rbx+0x28]
  41abde:	mov    edx,DWORD PTR [rbx+0x70]
  41abe1:	sub    edx,ecx
  41abe3:	add    rcx,QWORD PTR [rbx+0x68]
  41abe7:	mov    QWORD PTR [rbx+0x18],rcx
  41abeb:	cmp    edx,0xfffffffc
  41abee:	mov    ecx,0xfffffffc
  41abf3:	cmovb  ecx,edx
  41abf6:	mov    DWORD PTR [rbx+0x24],ecx
  41abf9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ac00:	xor    eax,eax
  41ac02:	pop    rbx
  41ac03:	ret    
  41ac04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac0e:	xchg   ax,ax

000000000041ac10 <flatcc_builder_create_offset_vector@@Base>:
  41ac10:	push   r15
  41ac12:	push   r14
  41ac14:	push   r12
  41ac16:	push   rbx
  41ac17:	push   rax
  41ac18:	mov    r14,rdx
  41ac1b:	mov    r15,rsi
  41ac1e:	mov    rbx,rdi
  41ac21:	mov    esi,0x4
  41ac26:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41ac2b:	test   eax,eax
  41ac2d:	je     41ac3d <flatcc_builder_create_offset_vector@@Base+0x2d>
  41ac2f:	xor    eax,eax
  41ac31:	add    rsp,0x8
  41ac35:	pop    rbx
  41ac36:	pop    r12
  41ac38:	pop    r14
  41ac3a:	pop    r15
  41ac3c:	ret    
  41ac3d:	mov    rax,QWORD PTR [rbx+0x30]
  41ac41:	mov    DWORD PTR [rax+0x10],0x4
  41ac48:	mov    rax,QWORD PTR [rbx+0x30]
  41ac4c:	mov    DWORD PTR [rax+0x14],0x0
  41ac53:	mov    rax,QWORD PTR [rbx+0x30]
  41ac57:	mov    WORD PTR [rax+0xe],0x5
  41ac5d:	mov    ecx,DWORD PTR [rbx+0x28]
  41ac60:	mov    edx,DWORD PTR [rbx+0x70]
  41ac63:	sub    edx,ecx
  41ac65:	add    rcx,QWORD PTR [rbx+0x68]
  41ac69:	mov    QWORD PTR [rbx+0x18],rcx
  41ac6d:	cmp    edx,0xfffffffc
  41ac70:	mov    ecx,0xfffffffc
  41ac75:	cmovb  ecx,edx
  41ac78:	mov    DWORD PTR [rbx+0x24],ecx
  41ac7b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ac82:	mov    ecx,DWORD PTR [rax+0x14]
  41ac85:	add    ecx,r14d
  41ac88:	jb     41ad38 <flatcc_builder_create_offset_vector@@Base+0x128>
  41ac8e:	cmp    ecx,0x40000000
  41ac94:	jae    41ad38 <flatcc_builder_create_offset_vector@@Base+0x128>
  41ac9a:	mov    DWORD PTR [rax+0x14],ecx
  41ac9d:	mov    r12d,DWORD PTR [rbx+0x20]
  41aca1:	lea    eax,[r12+r14*4]
  41aca5:	mov    DWORD PTR [rbx+0x20],eax
  41aca8:	cmp    eax,DWORD PTR [rbx+0x24]
  41acab:	jae    41acbb <flatcc_builder_create_offset_vector@@Base+0xab>
  41acad:	mov    rdi,QWORD PTR [rbx+0x18]
  41acb1:	add    rdi,r12
  41acb4:	jne    41ad16 <flatcc_builder_create_offset_vector@@Base+0x106>
  41acb6:	jmp    41ac2f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41acbb:	inc    eax
  41acbd:	lea    rsi,[rbx+0x68]
  41acc1:	mov    rdi,QWORD PTR [rbx+0x40]
  41acc5:	mov    edx,DWORD PTR [rbx+0x28]
  41acc8:	add    rdx,rax
  41accb:	mov    ecx,0x1
  41acd0:	mov    r8d,0x1
  41acd6:	call   QWORD PTR [rbx+0x50]
  41acd9:	test   eax,eax
  41acdb:	jne    41ac2f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41ace1:	mov    eax,DWORD PTR [rbx+0x28]
  41ace4:	mov    rdi,rax
  41ace7:	add    rdi,QWORD PTR [rbx+0x68]
  41aceb:	mov    QWORD PTR [rbx+0x18],rdi
  41acef:	mov    ecx,DWORD PTR [rbx+0x70]
  41acf2:	sub    ecx,eax
  41acf4:	cmp    ecx,0xfffffffc
  41acf7:	mov    eax,0xfffffffc
  41acfc:	cmovb  eax,ecx
  41acff:	mov    DWORD PTR [rbx+0x24],eax
  41ad02:	mov    rax,QWORD PTR [rbx+0x30]
  41ad06:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ad0d:	add    rdi,r12
  41ad10:	je     41ac2f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41ad16:	shl    r14,0x2
  41ad1a:	mov    rsi,r15
  41ad1d:	mov    rdx,r14
  41ad20:	call   4040f0 <memcpy@plt>
  41ad25:	mov    rdi,rbx
  41ad28:	add    rsp,0x8
  41ad2c:	pop    rbx
  41ad2d:	pop    r12
  41ad2f:	pop    r14
  41ad31:	pop    r15
  41ad33:	jmp    41ad60 <flatcc_builder_end_offset_vector@@Base>
  41ad38:	lea    rdi,[rip+0x932c]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41ad3f:	lea    rsi,[rip+0x825c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41ad46:	lea    rcx,[rip+0x9339]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41ad4d:	mov    edx,0x37c
  41ad52:	call   404090 <__assert_fail@plt>
  41ad57:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ad60 <flatcc_builder_end_offset_vector@@Base>:
  41ad60:	push   rbp
  41ad61:	push   rbx
  41ad62:	push   rax
  41ad63:	mov    rax,QWORD PTR [rdi+0x30]
  41ad67:	cmp    WORD PTR [rax+0xe],0x5
  41ad6c:	jne    41adfa <flatcc_builder_end_offset_vector@@Base+0x9a>
  41ad72:	mov    rbx,rdi
  41ad75:	mov    rsi,QWORD PTR [rdi+0x18]
  41ad79:	mov    edx,DWORD PTR [rax+0x14]
  41ad7c:	xor    ecx,ecx
  41ad7e:	call   41bdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41ad83:	mov    ebp,eax
  41ad85:	test   eax,eax
  41ad87:	je     41adf1 <flatcc_builder_end_offset_vector@@Base+0x91>
  41ad89:	mov    rdi,QWORD PTR [rbx+0x18]
  41ad8d:	mov    edx,DWORD PTR [rbx+0x20]
  41ad90:	xor    esi,esi
  41ad92:	call   4040a0 <memset@plt>
  41ad97:	mov    rax,QWORD PTR [rbx+0x30]
  41ad9b:	mov    ecx,DWORD PTR [rax+0x8]
  41ad9e:	mov    DWORD PTR [rbx+0x20],ecx
  41ada1:	mov    ecx,DWORD PTR [rax]
  41ada3:	mov    DWORD PTR [rbx+0x28],ecx
  41ada6:	mov    edx,DWORD PTR [rax+0x4]
  41ada9:	mov    rsi,rcx
  41adac:	add    rsi,QWORD PTR [rbx+0x68]
  41adb0:	mov    QWORD PTR [rbx+0x18],rsi
  41adb4:	mov    esi,DWORD PTR [rbx+0x70]
  41adb7:	sub    esi,ecx
  41adb9:	cmp    esi,edx
  41adbb:	cmova  esi,edx
  41adbe:	mov    DWORD PTR [rbx+0x24],esi
  41adc1:	movzx  ecx,WORD PTR [rbx+0xea]
  41adc8:	cmp    WORD PTR [rbx+0xe8],cx
  41adcf:	jae    41add8 <flatcc_builder_end_offset_vector@@Base+0x78>
  41add1:	mov    WORD PTR [rbx+0xe8],cx
  41add8:	movzx  ecx,WORD PTR [rax+0xc]
  41addc:	mov    WORD PTR [rbx+0xea],cx
  41ade3:	add    rax,0xffffffffffffffdc
  41ade7:	mov    QWORD PTR [rbx+0x30],rax
  41adeb:	dec    DWORD PTR [rbx+0x104]
  41adf1:	mov    eax,ebp
  41adf3:	add    rsp,0x8
  41adf7:	pop    rbx
  41adf8:	pop    rbp
  41adf9:	ret    
  41adfa:	lea    rdi,[rip+0x85d7]        # 4233d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41ae01:	lea    rsi,[rip+0x819a]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41ae08:	lea    rcx,[rip+0x8bf8]        # 423a07 <flatcc_builder_padding_base@@Base+0xce7>
  41ae0f:	mov    edx,0x5c8
  41ae14:	call   404090 <__assert_fail@plt>
  41ae19:	nop    DWORD PTR [rax+0x0]

000000000041ae20 <flatcc_builder_start_string@@Base>:
  41ae20:	push   rbx
  41ae21:	mov    rbx,rdi
  41ae24:	mov    esi,0x1
  41ae29:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41ae2e:	mov    ecx,eax
  41ae30:	mov    eax,0xffffffff
  41ae35:	test   ecx,ecx
  41ae37:	je     41ae3b <flatcc_builder_start_string@@Base+0x1b>
  41ae39:	pop    rbx
  41ae3a:	ret    
  41ae3b:	mov    rax,QWORD PTR [rbx+0x30]
  41ae3f:	mov    DWORD PTR [rax+0x10],0x1
  41ae46:	mov    rax,QWORD PTR [rbx+0x30]
  41ae4a:	mov    DWORD PTR [rax+0x14],0x0
  41ae51:	mov    rax,QWORD PTR [rbx+0x30]
  41ae55:	mov    WORD PTR [rax+0xe],0x6
  41ae5b:	mov    ecx,DWORD PTR [rbx+0x28]
  41ae5e:	mov    edx,DWORD PTR [rbx+0x70]
  41ae61:	sub    edx,ecx
  41ae63:	add    rcx,QWORD PTR [rbx+0x68]
  41ae67:	mov    QWORD PTR [rbx+0x18],rcx
  41ae6b:	cmp    edx,0xfffffffc
  41ae6e:	mov    ecx,0xfffffffc
  41ae73:	cmovb  ecx,edx
  41ae76:	mov    DWORD PTR [rbx+0x24],ecx
  41ae79:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ae80:	xor    eax,eax
  41ae82:	pop    rbx
  41ae83:	ret    
  41ae84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae8e:	xchg   ax,ax

000000000041ae90 <flatcc_builder_reserve_table@@Base>:
  41ae90:	push   r15
  41ae92:	push   r14
  41ae94:	push   rbx
  41ae95:	test   esi,esi
  41ae97:	js     41af44 <flatcc_builder_reserve_table@@Base+0xb4>
  41ae9d:	mov    r14d,esi
  41aea0:	mov    r15,rdi
  41aea3:	mov    rax,QWORD PTR [rdi+0x30]
  41aea7:	movzx  ebx,WORD PTR [rax+0x1c]
  41aeab:	add    ebx,ebx
  41aead:	add    ebx,DWORD PTR [rax+0x10]
  41aeb0:	lea    edx,[r14+r14*1]
  41aeb4:	add    edx,0x4
  41aeb7:	add    rdx,rbx
  41aeba:	cmp    rdx,QWORD PTR [rdi+0x60]
  41aebe:	jbe    41aedc <flatcc_builder_reserve_table@@Base+0x4c>
  41aec0:	lea    rsi,[r15+0x58]
  41aec4:	mov    rdi,QWORD PTR [r15+0x40]
  41aec8:	mov    ecx,0x1
  41aecd:	xor    r8d,r8d
  41aed0:	call   QWORD PTR [r15+0x50]
  41aed4:	test   eax,eax
  41aed6:	jne    41af63 <flatcc_builder_reserve_table@@Base+0xd3>
  41aedc:	add    rbx,QWORD PTR [r15+0x58]
  41aee0:	mov    QWORD PTR [r15+0x8],rbx
  41aee4:	je     41af39 <flatcc_builder_reserve_table@@Base+0xa9>
  41aee6:	add    r14d,r14d
  41aee9:	add    rbx,0x4
  41aeed:	mov    QWORD PTR [r15+0x8],rbx
  41aef1:	mov    rax,QWORD PTR [r15+0x30]
  41aef5:	mov    ebx,DWORD PTR [rax+0x14]
  41aef8:	or     r14d,0x1
  41aefc:	add    r14,rbx
  41aeff:	cmp    r14,QWORD PTR [r15+0x90]
  41af06:	jbe    41af26 <flatcc_builder_reserve_table@@Base+0x96>
  41af08:	lea    rsi,[r15+0x88]
  41af0f:	mov    rdi,QWORD PTR [r15+0x40]
  41af13:	mov    rdx,r14
  41af16:	xor    ecx,ecx
  41af18:	mov    r8d,0x3
  41af1e:	call   QWORD PTR [r15+0x50]
  41af22:	test   eax,eax
  41af24:	jne    41af63 <flatcc_builder_reserve_table@@Base+0xd3>
  41af26:	xor    eax,eax
  41af28:	add    rbx,QWORD PTR [r15+0x88]
  41af2f:	mov    QWORD PTR [r15],rbx
  41af32:	sete   al
  41af35:	neg    eax
  41af37:	jmp    41af3e <flatcc_builder_reserve_table@@Base+0xae>
  41af39:	mov    eax,0xffffffff
  41af3e:	pop    rbx
  41af3f:	pop    r14
  41af41:	pop    r15
  41af43:	ret    
  41af44:	lea    rdi,[rip+0x87d4]        # 42371f <flatcc_builder_padding_base@@Base+0x9ff>
  41af4b:	lea    rsi,[rip+0x8050]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41af52:	lea    rcx,[rip+0x8785]        # 4236de <flatcc_builder_padding_base@@Base+0x9be>
  41af59:	mov    edx,0x429
  41af5e:	call   404090 <__assert_fail@plt>
  41af63:	lea    rdi,[rip+0x91f8]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41af6a:	lea    rsi,[rip+0x8031]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41af71:	lea    rcx,[rip+0x9024]        # 423f9c <flatcc_builder_padding_base@@Base+0x127c>
  41af78:	mov    edx,0x134
  41af7d:	call   404090 <__assert_fail@plt>
  41af82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af8c:	nop    DWORD PTR [rax+0x0]

000000000041af90 <flatcc_builder_start_table@@Base>:
  41af90:	push   rbp
  41af91:	push   r15
  41af93:	push   r14
  41af95:	push   rbx
  41af96:	push   rax
  41af97:	mov    r15d,esi
  41af9a:	mov    rbx,rdi
  41af9d:	mov    esi,0x4
  41afa2:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41afa7:	mov    r14d,0xffffffff
  41afad:	test   eax,eax
  41afaf:	je     41afbf <flatcc_builder_start_table@@Base+0x2f>
  41afb1:	mov    eax,r14d
  41afb4:	add    rsp,0x8
  41afb8:	pop    rbx
  41afb9:	pop    r14
  41afbb:	pop    r15
  41afbd:	pop    rbp
  41afbe:	ret    
  41afbf:	mov    eax,DWORD PTR [rbx+0x8]
  41afc2:	sub    eax,DWORD PTR [rbx+0x58]
  41afc5:	mov    rcx,QWORD PTR [rbx+0x30]
  41afc9:	mov    DWORD PTR [rcx+0x10],eax
  41afcc:	mov    eax,DWORD PTR [rbx]
  41afce:	sub    eax,DWORD PTR [rbx+0x88]
  41afd4:	mov    rcx,QWORD PTR [rbx+0x30]
  41afd8:	mov    DWORD PTR [rcx+0x14],eax
  41afdb:	mov    eax,DWORD PTR [rbx+0x14]
  41afde:	mov    rcx,QWORD PTR [rbx+0x30]
  41afe2:	mov    DWORD PTR [rcx+0x18],eax
  41afe5:	movzx  eax,WORD PTR [rbx+0x10]
  41afe9:	mov    rcx,QWORD PTR [rbx+0x30]
  41afed:	mov    WORD PTR [rcx+0x1c],ax
  41aff1:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  41aff8:	mov    WORD PTR [rbx+0x10],0x0
  41affe:	mov    rax,QWORD PTR [rbx+0x30]
  41b002:	mov    WORD PTR [rax+0xe],0x3
  41b008:	movzx  ebp,WORD PTR [rax+0x1c]
  41b00c:	add    ebp,ebp
  41b00e:	add    ebp,DWORD PTR [rax+0x10]
  41b011:	lea    edx,[r15+r15*1]
  41b015:	add    edx,0x4
  41b018:	add    rdx,rbp
  41b01b:	cmp    rdx,QWORD PTR [rbx+0x60]
  41b01f:	jbe    41b03c <flatcc_builder_start_table@@Base+0xac>
  41b021:	lea    rsi,[rbx+0x58]
  41b025:	mov    rdi,QWORD PTR [rbx+0x40]
  41b029:	mov    ecx,0x1
  41b02e:	xor    r8d,r8d
  41b031:	call   QWORD PTR [rbx+0x50]
  41b034:	test   eax,eax
  41b036:	jne    41b0d0 <flatcc_builder_start_table@@Base+0x140>
  41b03c:	add    rbp,QWORD PTR [rbx+0x58]
  41b040:	mov    QWORD PTR [rbx+0x8],rbp
  41b044:	je     41afb1 <flatcc_builder_start_table@@Base+0x21>
  41b04a:	add    r15d,r15d
  41b04d:	add    rbp,0x4
  41b051:	mov    QWORD PTR [rbx+0x8],rbp
  41b055:	mov    rax,QWORD PTR [rbx+0x30]
  41b059:	mov    ebp,DWORD PTR [rax+0x14]
  41b05c:	or     r15d,0x1
  41b060:	add    r15,rbp
  41b063:	cmp    r15,QWORD PTR [rbx+0x90]
  41b06a:	jbe    41b089 <flatcc_builder_start_table@@Base+0xf9>
  41b06c:	lea    rsi,[rbx+0x88]
  41b073:	mov    rdi,QWORD PTR [rbx+0x40]
  41b077:	mov    rdx,r15
  41b07a:	xor    ecx,ecx
  41b07c:	mov    r8d,0x3
  41b082:	call   QWORD PTR [rbx+0x50]
  41b085:	test   eax,eax
  41b087:	jne    41b0d0 <flatcc_builder_start_table@@Base+0x140>
  41b089:	add    rbp,QWORD PTR [rbx+0x88]
  41b090:	mov    QWORD PTR [rbx],rbp
  41b093:	je     41afb1 <flatcc_builder_start_table@@Base+0x21>
  41b099:	mov    eax,DWORD PTR [rbx+0x28]
  41b09c:	mov    rcx,rax
  41b09f:	add    rcx,QWORD PTR [rbx+0x68]
  41b0a3:	mov    QWORD PTR [rbx+0x18],rcx
  41b0a7:	mov    ecx,DWORD PTR [rbx+0x70]
  41b0aa:	sub    ecx,eax
  41b0ac:	cmp    ecx,0xfffc
  41b0b2:	mov    eax,0xfffc
  41b0b7:	cmovb  eax,ecx
  41b0ba:	mov    DWORD PTR [rbx+0x24],eax
  41b0bd:	mov    rax,QWORD PTR [rbx+0x30]
  41b0c1:	mov    DWORD PTR [rax+0x4],0xfffc
  41b0c8:	xor    r14d,r14d
  41b0cb:	jmp    41afb1 <flatcc_builder_start_table@@Base+0x21>
  41b0d0:	lea    rdi,[rip+0x908b]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b0d7:	lea    rsi,[rip+0x7ec4]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b0de:	lea    rcx,[rip+0x8eb7]        # 423f9c <flatcc_builder_padding_base@@Base+0x127c>
  41b0e5:	mov    edx,0x134
  41b0ea:	call   404090 <__assert_fail@plt>
  41b0ef:	nop

000000000041b0f0 <flatcc_builder_create_vtable@@Base>:
  41b0f0:	push   r14
  41b0f2:	push   rbx
  41b0f3:	sub    rsp,0x98
  41b0fa:	mov    r14,rdi
  41b0fd:	mov    QWORD PTR [rsp+0x8],0x0
  41b106:	mov    DWORD PTR [rsp+0x10],0x0
  41b10e:	test   dx,dx
  41b111:	je     41b178 <flatcc_builder_create_vtable@@Base+0x88>
  41b113:	movzx  r8d,dx
  41b117:	mov    QWORD PTR [rsp+0x8],r8
  41b11c:	mov    QWORD PTR [rsp+0x18],rsi
  41b121:	mov    QWORD PTR [rsp+0x20],r8
  41b126:	mov    DWORD PTR [rsp+0x10],0x1
  41b12e:	mov    edx,0x1
  41b133:	cmp    DWORD PTR [r14+0x100],0x0
  41b13b:	jne    41b187 <flatcc_builder_create_vtable@@Base+0x97>
  41b13d:	cmp    DWORD PTR [r14+0x124],0x0
  41b145:	jne    41b187 <flatcc_builder_create_vtable@@Base+0x97>
  41b147:	mov    ebx,DWORD PTR [r14+0xf4]
  41b14e:	lea    eax,[r8+rbx*1]
  41b152:	mov    DWORD PTR [r14+0xf4],eax
  41b159:	mov    rdi,QWORD PTR [r14+0x38]
  41b15d:	lea    rsi,[rsp+0x18]
  41b162:	mov    ecx,ebx
  41b164:	call   QWORD PTR [r14+0x48]
  41b168:	test   eax,eax
  41b16a:	jne    41b21b <flatcc_builder_create_vtable@@Base+0x12b>
  41b170:	xor    eax,eax
  41b172:	inc    ebx
  41b174:	jne    41b1cc <flatcc_builder_create_vtable@@Base+0xdc>
  41b176:	jmp    41b1d2 <flatcc_builder_create_vtable@@Base+0xe2>
  41b178:	xor    edx,edx
  41b17a:	xor    r8d,r8d
  41b17d:	cmp    DWORD PTR [r14+0x100],0x0
  41b185:	je     41b13d <flatcc_builder_create_vtable@@Base+0x4d>
  41b187:	cmp    r8,0x11
  41b18b:	setb   al
  41b18e:	lea    rcx,[r8-0x10]
  41b192:	shr    rcx,0x20
  41b196:	sete   cl
  41b199:	test   r8d,r8d
  41b19c:	je     41b1dd <flatcc_builder_create_vtable@@Base+0xed>
  41b19e:	or     al,cl
  41b1a0:	je     41b1dd <flatcc_builder_create_vtable@@Base+0xed>
  41b1a2:	mov    ebx,DWORD PTR [r14+0xf0]
  41b1a9:	sub    ebx,r8d
  41b1ac:	mov    rdi,QWORD PTR [r14+0x38]
  41b1b0:	lea    rsi,[rsp+0x18]
  41b1b5:	mov    ecx,ebx
  41b1b7:	call   QWORD PTR [r14+0x48]
  41b1bb:	test   eax,eax
  41b1bd:	jne    41b1fc <flatcc_builder_create_vtable@@Base+0x10c>
  41b1bf:	mov    DWORD PTR [r14+0xf0],ebx
  41b1c6:	test   ebx,ebx
  41b1c8:	je     41b1d0 <flatcc_builder_create_vtable@@Base+0xe0>
  41b1ca:	inc    ebx
  41b1cc:	mov    eax,ebx
  41b1ce:	jmp    41b1d2 <flatcc_builder_create_vtable@@Base+0xe2>
  41b1d0:	xor    eax,eax
  41b1d2:	add    rsp,0x98
  41b1d9:	pop    rbx
  41b1da:	pop    r14
  41b1dc:	ret    
  41b1dd:	lea    rdi,[rip+0x8f7e]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b1e4:	lea    rsi,[rip+0x7db7]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b1eb:	lea    rcx,[rip+0x8e2f]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41b1f2:	mov    edx,0x287
  41b1f7:	call   404090 <__assert_fail@plt>
  41b1fc:	lea    rdi,[rip+0x8f5f]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b203:	lea    rsi,[rip+0x7d98]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b20a:	lea    rcx,[rip+0x8e10]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41b211:	mov    edx,0x28b
  41b216:	call   404090 <__assert_fail@plt>
  41b21b:	lea    rdi,[rip+0x8f40]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b222:	lea    rsi,[rip+0x7d79]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b229:	lea    rcx,[rip+0x8ead]        # 4240dd <flatcc_builder_padding_base@@Base+0x13bd>
  41b230:	mov    edx,0x2a5
  41b235:	call   404090 <__assert_fail@plt>
  41b23a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b240 <flatcc_builder_create_cached_vtable@@Base>:
  41b240:	push   rbp
  41b241:	push   r15
  41b243:	push   r14
  41b245:	push   r13
  41b247:	push   r12
  41b249:	push   rbx
  41b24a:	sub    rsp,0x28
  41b24e:	mov    r15d,ecx
  41b251:	mov    r12d,edx
  41b254:	mov    QWORD PTR [rsp+0x18],rsi
  41b259:	mov    r14,rdi
  41b25c:	mov    rax,QWORD PTR [rdi+0xd8]
  41b263:	test   rax,rax
  41b266:	je     41b336 <flatcc_builder_create_cached_vtable@@Base+0xf6>
  41b26c:	neg    al
  41b26e:	shrx   r13d,r15d,eax
  41b273:	shl    r13,0x2
  41b277:	add    r13,QWORD PTR [r14+0xa8]
  41b27e:	je     41b40a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  41b284:	mov    ebx,DWORD PTR [r13+0x0]
  41b288:	movzx  eax,r12w
  41b28c:	mov    QWORD PTR [rsp],rax
  41b290:	test   ebx,ebx
  41b292:	je     41b411 <flatcc_builder_create_cached_vtable@@Base+0x1d1>
  41b298:	mov    rbp,QWORD PTR [r14+0x78]
  41b29c:	mov    QWORD PTR [rsp+0x10],r14
  41b2a1:	mov    r15,QWORD PTR [r14+0xb8]
  41b2a8:	xor    eax,eax
  41b2aa:	mov    QWORD PTR [rsp+0x20],rax
  41b2af:	mov    QWORD PTR [rsp+0x8],r13
  41b2b4:	jmp    41b2d3 <flatcc_builder_create_cached_vtable@@Base+0x93>
  41b2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b2c0:	mov    ebx,DWORD PTR [r14+0xc]
  41b2c4:	add    r14,0xc
  41b2c8:	mov    r13,r14
  41b2cb:	test   ebx,ebx
  41b2cd:	je     41b3f9 <flatcc_builder_create_cached_vtable@@Base+0x1b9>
  41b2d3:	mov    eax,ebx
  41b2d5:	lea    r14,[r15+rax*1]
  41b2d9:	mov    esi,DWORD PTR [r15+rax*1+0x8]
  41b2de:	cmp    WORD PTR [rbp+rsi*1+0x0],r12w
  41b2e4:	jne    41b2c0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41b2e6:	add    rsi,rbp
  41b2e9:	mov    rdi,QWORD PTR [rsp+0x18]
  41b2ee:	mov    rdx,QWORD PTR [rsp]
  41b2f2:	call   404110 <bcmp@plt>
  41b2f7:	test   eax,eax
  41b2f9:	jne    41b2c0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41b2fb:	mov    eax,DWORD PTR [r14+0x4]
  41b2ff:	mov    rcx,QWORD PTR [rsp+0x10]
  41b304:	cmp    eax,DWORD PTR [rcx+0x100]
  41b30a:	je     41b57a <flatcc_builder_create_cached_vtable@@Base+0x33a>
  41b310:	lea    r13,[r14+0xc]
  41b314:	mov    ebx,DWORD PTR [r14+0xc]
  41b318:	mov    rax,r14
  41b31b:	mov    QWORD PTR [rsp+0x20],r14
  41b320:	test   ebx,ebx
  41b322:	jne    41b2d3 <flatcc_builder_create_cached_vtable@@Base+0x93>
  41b324:	mov    r15,r14
  41b327:	mov    r14,QWORD PTR [rsp+0x10]
  41b32c:	mov    r13,QWORD PTR [rsp+0x8]
  41b331:	jmp    41b414 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  41b336:	cmp    DWORD PTR [r14+0xe4],0x0
  41b33e:	jne    41b5b8 <flatcc_builder_create_cached_vtable@@Base+0x378>
  41b344:	lea    r13,[r14+0xb8]
  41b34b:	cmp    QWORD PTR [r14+0xc0],0xf
  41b353:	ja     41b375 <flatcc_builder_create_cached_vtable@@Base+0x135>
  41b355:	mov    rdi,QWORD PTR [r14+0x40]
  41b359:	mov    edx,0x10
  41b35e:	mov    rsi,r13
  41b361:	xor    ecx,ecx
  41b363:	mov    r8d,0x6
  41b369:	call   QWORD PTR [r14+0x50]
  41b36d:	test   eax,eax
  41b36f:	jne    41b599 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41b375:	xor    ebx,ebx
  41b377:	cmp    QWORD PTR [r13+0x0],0x0
  41b37c:	je     41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b382:	lea    rsi,[r14+0xa8]
  41b389:	mov    DWORD PTR [r14+0xe4],0x10
  41b394:	mov    rdi,QWORD PTR [r14+0x40]
  41b398:	mov    ebp,0x100
  41b39d:	mov    edx,0x100
  41b3a2:	mov    ecx,0x1
  41b3a7:	mov    r8d,0x5
  41b3ad:	call   QWORD PTR [r14+0x50]
  41b3b1:	test   eax,eax
  41b3b3:	jne    41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b3b9:	mov    rax,QWORD PTR [r14+0xb0]
  41b3c0:	mov    rcx,rbp
  41b3c3:	add    rbp,rbp
  41b3c6:	cmp    rbp,rax
  41b3c9:	jbe    41b3c0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  41b3cb:	shr    rcx,0x2
  41b3cf:	mov    rax,0xffffffffffffffff
  41b3d6:	mov    edx,0x1
  41b3db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3e0:	inc    rax
  41b3e3:	shlx   rsi,rdx,rax
  41b3e8:	cmp    rsi,rcx
  41b3eb:	jb     41b3e0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  41b3ed:	mov    QWORD PTR [r14+0xd8],rax
  41b3f4:	jmp    41b26c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  41b3f9:	mov    r14,QWORD PTR [rsp+0x10]
  41b3fe:	mov    r13,QWORD PTR [rsp+0x8]
  41b403:	mov    r15,QWORD PTR [rsp+0x20]
  41b408:	jmp    41b414 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  41b40a:	xor    ebx,ebx
  41b40c:	jmp    41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b411:	xor    r15d,r15d
  41b414:	mov    r12d,DWORD PTR [r14+0xe4]
  41b41b:	lea    rbp,[r14+0xb8]
  41b422:	lea    rdx,[r12+0x10]
  41b427:	cmp    rdx,QWORD PTR [r14+0xc0]
  41b42e:	jbe    41b44b <flatcc_builder_create_cached_vtable@@Base+0x20b>
  41b430:	mov    rdi,QWORD PTR [r14+0x40]
  41b434:	mov    rsi,rbp
  41b437:	xor    ecx,ecx
  41b439:	mov    r8d,0x6
  41b43f:	call   QWORD PTR [r14+0x50]
  41b443:	test   eax,eax
  41b445:	jne    41b599 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41b44b:	xor    ebx,ebx
  41b44d:	add    r12,QWORD PTR [rbp+0x0]
  41b451:	je     41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b457:	mov    eax,DWORD PTR [r14+0xe4]
  41b45e:	mov    ecx,DWORD PTR [r14+0x100]
  41b465:	lea    edx,[rax+0x10]
  41b468:	mov    DWORD PTR [r14+0xe4],edx
  41b46f:	mov    DWORD PTR [r12+0x4],ecx
  41b474:	mov    ecx,DWORD PTR [r13+0x0]
  41b478:	mov    DWORD PTR [r12+0xc],ecx
  41b47d:	mov    DWORD PTR [r13+0x0],eax
  41b481:	mov    rdi,r14
  41b484:	mov    rsi,QWORD PTR [rsp+0x18]
  41b489:	mov    rdx,QWORD PTR [rsp]
  41b48d:	call   41b0f0 <flatcc_builder_create_vtable@@Base>
  41b492:	mov    DWORD PTR [r12],eax
  41b496:	test   eax,eax
  41b498:	je     41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b49e:	test   r15,r15
  41b4a1:	je     41b4b1 <flatcc_builder_create_cached_vtable@@Base+0x271>
  41b4a3:	mov    eax,DWORD PTR [r15+0x8]
  41b4a7:	mov    DWORD PTR [r12+0x8],eax
  41b4ac:	jmp    41b55e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41b4b1:	mov    rax,QWORD PTR [r14+0x118]
  41b4b8:	mov    ebp,DWORD PTR [r14+0xe0]
  41b4bf:	test   rax,rax
  41b4c2:	je     41b505 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  41b4c4:	mov    rcx,QWORD PTR [rsp]
  41b4c8:	add    ecx,ebp
  41b4ca:	cmp    rax,rcx
  41b4cd:	jae    41b505 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  41b4cf:	cmp    QWORD PTR [r14+0xd8],0x0
  41b4d7:	je     41b55e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41b4dd:	mov    rdi,QWORD PTR [r14+0xa8]
  41b4e4:	mov    rdx,QWORD PTR [r14+0xb0]
  41b4eb:	xor    esi,esi
  41b4ed:	call   4040a0 <memset@plt>
  41b4f2:	movabs rax,0x1000000000
  41b4fc:	mov    QWORD PTR [r14+0xe0],rax
  41b503:	jmp    41b55e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41b505:	lea    rbx,[r14+0x78]
  41b509:	mov    rax,QWORD PTR [rsp]
  41b50d:	lea    rdx,[rax+rbp*1]
  41b511:	cmp    rdx,QWORD PTR [r14+0x80]
  41b518:	jbe    41b531 <flatcc_builder_create_cached_vtable@@Base+0x2f1>
  41b51a:	mov    rdi,QWORD PTR [r14+0x40]
  41b51e:	mov    rsi,rbx
  41b521:	xor    ecx,ecx
  41b523:	mov    r8d,0x2
  41b529:	call   QWORD PTR [r14+0x50]
  41b52d:	test   eax,eax
  41b52f:	jne    41b599 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41b531:	add    rbp,QWORD PTR [rbx]
  41b534:	je     41b573 <flatcc_builder_create_cached_vtable@@Base+0x333>
  41b536:	mov    eax,DWORD PTR [r14+0xe0]
  41b53d:	mov    DWORD PTR [r12+0x8],eax
  41b542:	mov    rdx,QWORD PTR [rsp]
  41b546:	mov    ecx,edx
  41b548:	add    ecx,eax
  41b54a:	mov    DWORD PTR [r14+0xe0],ecx
  41b551:	mov    rdi,rbp
  41b554:	mov    rsi,QWORD PTR [rsp+0x18]
  41b559:	call   4040f0 <memcpy@plt>
  41b55e:	mov    ebx,DWORD PTR [r12]
  41b562:	mov    eax,ebx
  41b564:	add    rsp,0x28
  41b568:	pop    rbx
  41b569:	pop    r12
  41b56b:	pop    r13
  41b56d:	pop    r14
  41b56f:	pop    r15
  41b571:	pop    rbp
  41b572:	ret    
  41b573:	mov    ebx,0xffffffff
  41b578:	jmp    41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b57a:	mov    rcx,QWORD PTR [rsp+0x8]
  41b57f:	cmp    r13,rcx
  41b582:	je     41b594 <flatcc_builder_create_cached_vtable@@Base+0x354>
  41b584:	mov    eax,DWORD PTR [r14+0xc]
  41b588:	mov    DWORD PTR [r13+0x0],eax
  41b58c:	mov    eax,DWORD PTR [rcx]
  41b58e:	mov    DWORD PTR [r14+0xc],eax
  41b592:	mov    DWORD PTR [rcx],ebx
  41b594:	mov    ebx,DWORD PTR [r14]
  41b597:	jmp    41b562 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41b599:	lea    rdi,[rip+0x8bc2]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b5a0:	lea    rsi,[rip+0x79fb]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b5a7:	lea    rcx,[rip+0x89ee]        # 423f9c <flatcc_builder_padding_base@@Base+0x127c>
  41b5ae:	mov    edx,0x134
  41b5b3:	call   404090 <__assert_fail@plt>
  41b5b8:	lea    rdi,[rip+0x8b67]        # 424126 <flatcc_builder_padding_base@@Base+0x1406>
  41b5bf:	lea    rsi,[rip+0x79dc]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b5c6:	lea    rcx,[rip+0x8b68]        # 424135 <flatcc_builder_padding_base@@Base+0x1415>
  41b5cd:	mov    edx,0x156
  41b5d2:	call   404090 <__assert_fail@plt>
  41b5d7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b5e0 <flatcc_builder_create_table@@Base>:
  41b5e0:	push   rbp
  41b5e1:	push   r14
  41b5e3:	push   rbx
  41b5e4:	sub    rsp,0xa0
  41b5eb:	test   r9d,r9d
  41b5ee:	js     41b803 <flatcc_builder_create_table@@Base+0x223>
  41b5f4:	mov    r14,rdi
  41b5f7:	mov    edi,DWORD PTR [rsp+0xc0]
  41b5fe:	test   dil,0x1
  41b602:	je     41b822 <flatcc_builder_create_table@@Base+0x242>
  41b608:	cmp    cx,0x4
  41b60c:	mov    eax,0x4
  41b611:	cmova  eax,ecx
  41b614:	cmp    WORD PTR [r14+0xe8],ax
  41b61c:	jae    41b626 <flatcc_builder_create_table@@Base+0x46>
  41b61e:	mov    WORD PTR [r14+0xe8],ax
  41b626:	mov    ebp,DWORD PTR [r14+0xf0]
  41b62d:	sub    ebp,edx
  41b62f:	movzx  r10d,ax
  41b633:	dec    r10d
  41b636:	and    r10d,ebp
  41b639:	add    edi,r10d
  41b63c:	neg    edi
  41b63e:	lea    ecx,[rdi+rbp*1]
  41b641:	add    ecx,0xfffffffd
  41b644:	mov    DWORD PTR [rsp+0xc],ecx
  41b648:	test   r9d,r9d
  41b64b:	jle    41b706 <flatcc_builder_create_table@@Base+0x126>
  41b651:	add    ebp,0xfffffffc
  41b654:	sub    ebp,r10d
  41b657:	mov    ecx,0xfffffffc
  41b65c:	sub    ecx,ebp
  41b65e:	mov    edi,r9d
  41b661:	lea    rbx,[rdi-0x1]
  41b665:	mov    r9d,edi
  41b668:	and    r9d,0x3
  41b66c:	cmp    rbx,0x3
  41b670:	jae    41b67e <flatcc_builder_create_table@@Base+0x9e>
  41b672:	xor    ebx,ebx
  41b674:	test   r9,r9
  41b677:	jne    41b6dd <flatcc_builder_create_table@@Base+0xfd>
  41b679:	jmp    41b706 <flatcc_builder_create_table@@Base+0x126>
  41b67e:	sub    rdi,r9
  41b681:	xor    ebx,ebx
  41b683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b68d:	nop    DWORD PTR [rax]
  41b690:	movzx  eax,WORD PTR [r8+rbx*2]
  41b695:	mov    ebp,DWORD PTR [rax+rsi*1]
  41b698:	add    ebp,ecx
  41b69a:	sub    ebp,eax
  41b69c:	mov    DWORD PTR [rax+rsi*1],ebp
  41b69f:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  41b6a5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41b6a8:	add    ebp,ecx
  41b6aa:	sub    ebp,eax
  41b6ac:	mov    DWORD PTR [rax+rsi*1],ebp
  41b6af:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  41b6b5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41b6b8:	add    ebp,ecx
  41b6ba:	sub    ebp,eax
  41b6bc:	mov    DWORD PTR [rax+rsi*1],ebp
  41b6bf:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  41b6c5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41b6c8:	add    ebp,ecx
  41b6ca:	sub    ebp,eax
  41b6cc:	mov    DWORD PTR [rax+rsi*1],ebp
  41b6cf:	add    rbx,0x4
  41b6d3:	cmp    rdi,rbx
  41b6d6:	jne    41b690 <flatcc_builder_create_table@@Base+0xb0>
  41b6d8:	test   r9,r9
  41b6db:	je     41b706 <flatcc_builder_create_table@@Base+0x126>
  41b6dd:	lea    rdi,[r8+rbx*2]
  41b6e1:	xor    ebx,ebx
  41b6e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6ed:	nop    DWORD PTR [rax]
  41b6f0:	movzx  eax,WORD PTR [rdi+rbx*2]
  41b6f4:	mov    ebp,DWORD PTR [rax+rsi*1]
  41b6f7:	add    ebp,ecx
  41b6f9:	sub    ebp,eax
  41b6fb:	mov    DWORD PTR [rax+rsi*1],ebp
  41b6fe:	inc    rbx
  41b701:	cmp    r9,rbx
  41b704:	jne    41b6f0 <flatcc_builder_create_table@@Base+0x110>
  41b706:	mov    QWORD PTR [rsp+0x10],0x4
  41b70f:	lea    rax,[rsp+0xc]
  41b714:	mov    QWORD PTR [rsp+0x20],rax
  41b719:	mov    QWORD PTR [rsp+0x28],0x4
  41b722:	mov    DWORD PTR [rsp+0x18],0x1
  41b72a:	test   rdx,rdx
  41b72d:	je     41b7ce <flatcc_builder_create_table@@Base+0x1ee>
  41b733:	lea    r8,[rdx+0x4]
  41b737:	mov    QWORD PTR [rsp+0x10],r8
  41b73c:	mov    QWORD PTR [rsp+0x30],rsi
  41b741:	mov    QWORD PTR [rsp+0x38],rdx
  41b746:	mov    DWORD PTR [rsp+0x18],0x2
  41b74e:	mov    edx,0x2
  41b753:	test   r10d,r10d
  41b756:	je     41b77d <flatcc_builder_create_table@@Base+0x19d>
  41b758:	add    r8,r10
  41b75b:	mov    QWORD PTR [rsp+0x10],r8
  41b760:	mov    eax,edx
  41b762:	shl    rax,0x4
  41b766:	lea    rcx,[rip+0x75b3]        # 422d20 <flatcc_builder_padding_base@@Base>
  41b76d:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  41b772:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  41b777:	inc    edx
  41b779:	mov    DWORD PTR [rsp+0x18],edx
  41b77d:	cmp    r8,0x11
  41b781:	setb   al
  41b784:	lea    rcx,[r8-0x10]
  41b788:	shr    rcx,0x20
  41b78c:	sete   cl
  41b78f:	test   r8d,r8d
  41b792:	jle    41b7e4 <flatcc_builder_create_table@@Base+0x204>
  41b794:	or     al,cl
  41b796:	je     41b7e4 <flatcc_builder_create_table@@Base+0x204>
  41b798:	mov    ebp,DWORD PTR [r14+0xf0]
  41b79f:	sub    ebp,r8d
  41b7a2:	mov    rdi,QWORD PTR [r14+0x38]
  41b7a6:	lea    rsi,[rsp+0x20]
  41b7ab:	mov    ecx,ebp
  41b7ad:	call   QWORD PTR [r14+0x48]
  41b7b1:	test   eax,eax
  41b7b3:	jne    41b841 <flatcc_builder_create_table@@Base+0x261>
  41b7b9:	mov    DWORD PTR [r14+0xf0],ebp
  41b7c0:	mov    eax,ebp
  41b7c2:	add    rsp,0xa0
  41b7c9:	pop    rbx
  41b7ca:	pop    r14
  41b7cc:	pop    rbp
  41b7cd:	ret    
  41b7ce:	mov    r8d,0x4
  41b7d4:	mov    edx,0x1
  41b7d9:	test   r10d,r10d
  41b7dc:	jne    41b758 <flatcc_builder_create_table@@Base+0x178>
  41b7e2:	jmp    41b77d <flatcc_builder_create_table@@Base+0x19d>
  41b7e4:	lea    rdi,[rip+0x8977]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b7eb:	lea    rsi,[rip+0x77b0]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b7f2:	lea    rcx,[rip+0x8828]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41b7f9:	mov    edx,0x287
  41b7fe:	call   404090 <__assert_fail@plt>
  41b803:	lea    rdi,[rip+0x7f0e]        # 423718 <flatcc_builder_padding_base@@Base+0x9f8>
  41b80a:	lea    rsi,[rip+0x7791]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b811:	lea    rcx,[rip+0x7f12]        # 42372a <flatcc_builder_padding_base@@Base+0xa0a>
  41b818:	mov    edx,0x4d5
  41b81d:	call   404090 <__assert_fail@plt>
  41b822:	lea    rdi,[rip+0x7f9d]        # 4237c6 <flatcc_builder_padding_base@@Base+0xaa6>
  41b829:	lea    rsi,[rip+0x7772]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b830:	lea    rcx,[rip+0x7ef3]        # 42372a <flatcc_builder_padding_base@@Base+0xa0a>
  41b837:	mov    edx,0x4db
  41b83c:	call   404090 <__assert_fail@plt>
  41b841:	lea    rdi,[rip+0x891a]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41b848:	lea    rsi,[rip+0x7753]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b84f:	lea    rcx,[rip+0x87cb]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41b856:	mov    edx,0x28b
  41b85b:	call   404090 <__assert_fail@plt>

000000000041b860 <flatcc_builder_check_required_field@@Base>:
  41b860:	push   rax
  41b861:	mov    rax,QWORD PTR [rdi+0x30]
  41b865:	cmp    WORD PTR [rax+0xe],0x3
  41b86a:	jne    41b887 <flatcc_builder_check_required_field@@Base+0x27>
  41b86c:	xor    eax,eax
  41b86e:	cmp    WORD PTR [rdi+0x10],si
  41b872:	jbe    41b885 <flatcc_builder_check_required_field@@Base+0x25>
  41b874:	mov    rcx,QWORD PTR [rdi+0x8]
  41b878:	movzx  edx,si
  41b87b:	xor    eax,eax
  41b87d:	cmp    WORD PTR [rcx+rdx*2],0x0
  41b882:	setne  al
  41b885:	pop    rcx
  41b886:	ret    
  41b887:	lea    rdi,[rip+0x7f43]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41b88e:	lea    rsi,[rip+0x770d]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b895:	lea    rcx,[rip+0x7f60]        # 4237fc <flatcc_builder_padding_base@@Base+0xadc>
  41b89c:	mov    edx,0x4f8
  41b8a1:	call   404090 <__assert_fail@plt>
  41b8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041b8b0 <flatcc_builder_check_union_field@@Base>:
  41b8b0:	push   rax
  41b8b1:	mov    rax,QWORD PTR [rdi+0x30]
  41b8b5:	cmp    WORD PTR [rax+0xe],0x3
  41b8ba:	jne    41b904 <flatcc_builder_check_union_field@@Base+0x54>
  41b8bc:	test   si,si
  41b8bf:	je     41b8ee <flatcc_builder_check_union_field@@Base+0x3e>
  41b8c1:	cmp    WORD PTR [rdi+0x10],si
  41b8c5:	jbe    41b8ee <flatcc_builder_check_union_field@@Base+0x3e>
  41b8c7:	movzx  eax,si
  41b8ca:	mov    rcx,QWORD PTR [rdi+0x8]
  41b8ce:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  41b8d3:	test   rdx,rdx
  41b8d6:	je     41b8f2 <flatcc_builder_check_union_field@@Base+0x42>
  41b8d8:	mov    rsi,QWORD PTR [rdi+0x18]
  41b8dc:	cmp    BYTE PTR [rsi+rdx*1],0x0
  41b8e0:	movzx  eax,WORD PTR [rcx+rax*2]
  41b8e4:	je     41b8f9 <flatcc_builder_check_union_field@@Base+0x49>
  41b8e6:	test   ax,ax
  41b8e9:	setne  al
  41b8ec:	jmp    41b8ff <flatcc_builder_check_union_field@@Base+0x4f>
  41b8ee:	xor    eax,eax
  41b8f0:	jmp    41b8ff <flatcc_builder_check_union_field@@Base+0x4f>
  41b8f2:	cmp    WORD PTR [rcx+rax*2],0x0
  41b8f7:	jmp    41b8fc <flatcc_builder_check_union_field@@Base+0x4c>
  41b8f9:	test   ax,ax
  41b8fc:	sete   al
  41b8ff:	movzx  eax,al
  41b902:	pop    rcx
  41b903:	ret    
  41b904:	lea    rdi,[rip+0x7ec6]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41b90b:	lea    rsi,[rip+0x7690]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b912:	lea    rcx,[rip+0x7f36]        # 42384f <flatcc_builder_padding_base@@Base+0xb2f>
  41b919:	mov    edx,0x4ff
  41b91e:	call   404090 <__assert_fail@plt>
  41b923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b92d:	nop    DWORD PTR [rax]

000000000041b930 <flatcc_builder_check_required@@Base>:
  41b930:	push   rax
  41b931:	mov    rax,QWORD PTR [rdi+0x30]
  41b935:	cmp    WORD PTR [rax+0xe],0x3
  41b93a:	jne    41b979 <flatcc_builder_check_required@@Base+0x49>
  41b93c:	movzx  ecx,WORD PTR [rdi+0x10]
  41b940:	xor    eax,eax
  41b942:	cmp    ecx,edx
  41b944:	jl     41b973 <flatcc_builder_check_required@@Base+0x43>
  41b946:	mov    eax,0x1
  41b94b:	test   edx,edx
  41b94d:	jle    41b973 <flatcc_builder_check_required@@Base+0x43>
  41b94f:	mov    rcx,QWORD PTR [rdi+0x8]
  41b953:	mov    r8d,edx
  41b956:	xor    edi,edi
  41b958:	nop    DWORD PTR [rax+rax*1+0x0]
  41b960:	movzx  edx,WORD PTR [rsi+rdi*2]
  41b964:	cmp    WORD PTR [rcx+rdx*2],0x0
  41b969:	je     41b975 <flatcc_builder_check_required@@Base+0x45>
  41b96b:	inc    rdi
  41b96e:	cmp    r8,rdi
  41b971:	jne    41b960 <flatcc_builder_check_required@@Base+0x30>
  41b973:	pop    rcx
  41b974:	ret    
  41b975:	xor    eax,eax
  41b977:	pop    rcx
  41b978:	ret    
  41b979:	lea    rdi,[rip+0x7e51]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41b980:	lea    rsi,[rip+0x761b]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41b987:	lea    rcx,[rip+0x7f11]        # 42389f <flatcc_builder_padding_base@@Base+0xb7f>
  41b98e:	mov    edx,0x511
  41b993:	call   404090 <__assert_fail@plt>
  41b998:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b9a0 <flatcc_builder_end_table@@Base>:
  41b9a0:	push   rbp
  41b9a1:	push   r15
  41b9a3:	push   r14
  41b9a5:	push   r12
  41b9a7:	push   rbx
  41b9a8:	sub    rsp,0x10
  41b9ac:	mov    rax,QWORD PTR [rdi+0x30]
  41b9b0:	cmp    WORD PTR [rax+0xe],0x3
  41b9b5:	jne    41bb05 <flatcc_builder_end_table@@Base+0x165>
  41b9bb:	mov    rbx,rdi
  41b9be:	mov    rax,QWORD PTR [rdi+0x8]
  41b9c2:	mov    ecx,DWORD PTR [rdi+0x10]
  41b9c5:	lea    ecx,[rcx+rcx*1]
  41b9c8:	add    ecx,0x4
  41b9cb:	mov    WORD PTR [rax-0x4],cx
  41b9cf:	mov    edx,DWORD PTR [rdi+0x20]
  41b9d2:	add    edx,0x4
  41b9d5:	mov    WORD PTR [rax-0x2],dx
  41b9d9:	lea    r12,[rax-0x4]
  41b9dd:	movzx  ebp,cx
  41b9e0:	mov    eax,DWORD PTR [rdi+0x14]
  41b9e3:	xor    eax,ebp
  41b9e5:	imul   eax,eax,0x9e3779b1
  41b9eb:	movzx  ecx,dx
  41b9ee:	xor    ecx,eax
  41b9f0:	imul   ecx,ecx,0x9e3779b1
  41b9f6:	mov    DWORD PTR [rdi+0x14],ecx
  41b9f9:	mov    rsi,r12
  41b9fc:	mov    edx,ebp
  41b9fe:	call   41b240 <flatcc_builder_create_cached_vtable@@Base>
  41ba03:	test   eax,eax
  41ba05:	je     41baf2 <flatcc_builder_end_table@@Base+0x152>
  41ba0b:	mov    r14d,eax
  41ba0e:	xor    r15d,r15d
  41ba11:	mov    rdi,r12
  41ba14:	xor    esi,esi
  41ba16:	mov    rdx,rbp
  41ba19:	call   4040a0 <memset@plt>
  41ba1e:	mov    rax,QWORD PTR [rbx+0x30]
  41ba22:	mov    r8d,DWORD PTR [rax+0x14]
  41ba26:	add    r8,QWORD PTR [rbx+0x88]
  41ba2d:	mov    r9,QWORD PTR [rbx]
  41ba30:	mov    rsi,QWORD PTR [rbx+0x18]
  41ba34:	sub    r9,r8
  41ba37:	shr    r9,1
  41ba3a:	mov    edx,DWORD PTR [rbx+0x20]
  41ba3d:	movzx  ecx,WORD PTR [rbx+0xea]
  41ba44:	mov    DWORD PTR [rsp],r14d
  41ba48:	mov    rdi,rbx
  41ba4b:	call   41b5e0 <flatcc_builder_create_table@@Base>
  41ba50:	test   eax,eax
  41ba52:	je     41baf5 <flatcc_builder_end_table@@Base+0x155>
  41ba58:	mov    r14d,eax
  41ba5b:	mov    rax,QWORD PTR [rbx+0x30]
  41ba5f:	mov    ecx,DWORD PTR [rax+0x18]
  41ba62:	mov    DWORD PTR [rbx+0x14],ecx
  41ba65:	movzx  ecx,WORD PTR [rax+0x1c]
  41ba69:	mov    WORD PTR [rbx+0x10],cx
  41ba6d:	mov    ecx,DWORD PTR [rax+0x10]
  41ba70:	add    rcx,QWORD PTR [rbx+0x58]
  41ba74:	mov    QWORD PTR [rbx+0x8],rcx
  41ba78:	mov    eax,DWORD PTR [rax+0x14]
  41ba7b:	add    rax,QWORD PTR [rbx+0x88]
  41ba82:	mov    QWORD PTR [rbx],rax
  41ba85:	mov    rdi,QWORD PTR [rbx+0x18]
  41ba89:	mov    edx,DWORD PTR [rbx+0x20]
  41ba8c:	xor    esi,esi
  41ba8e:	call   4040a0 <memset@plt>
  41ba93:	mov    rax,QWORD PTR [rbx+0x30]
  41ba97:	mov    ecx,DWORD PTR [rax+0x8]
  41ba9a:	mov    DWORD PTR [rbx+0x20],ecx
  41ba9d:	mov    ecx,DWORD PTR [rax]
  41ba9f:	mov    DWORD PTR [rbx+0x28],ecx
  41baa2:	mov    edx,DWORD PTR [rax+0x4]
  41baa5:	mov    rsi,rcx
  41baa8:	add    rsi,QWORD PTR [rbx+0x68]
  41baac:	mov    QWORD PTR [rbx+0x18],rsi
  41bab0:	mov    esi,DWORD PTR [rbx+0x70]
  41bab3:	sub    esi,ecx
  41bab5:	cmp    esi,edx
  41bab7:	cmova  esi,edx
  41baba:	mov    DWORD PTR [rbx+0x24],esi
  41babd:	movzx  ecx,WORD PTR [rbx+0xea]
  41bac4:	cmp    WORD PTR [rbx+0xe8],cx
  41bacb:	jae    41bad4 <flatcc_builder_end_table@@Base+0x134>
  41bacd:	mov    WORD PTR [rbx+0xe8],cx
  41bad4:	movzx  ecx,WORD PTR [rax+0xc]
  41bad8:	mov    WORD PTR [rbx+0xea],cx
  41badf:	add    rax,0xffffffffffffffdc
  41bae3:	mov    QWORD PTR [rbx+0x30],rax
  41bae7:	dec    DWORD PTR [rbx+0x104]
  41baed:	mov    r15d,r14d
  41baf0:	jmp    41baf5 <flatcc_builder_end_table@@Base+0x155>
  41baf2:	xor    r15d,r15d
  41baf5:	mov    eax,r15d
  41baf8:	add    rsp,0x10
  41bafc:	pop    rbx
  41bafd:	pop    r12
  41baff:	pop    r14
  41bb01:	pop    r15
  41bb03:	pop    rbp
  41bb04:	ret    
  41bb05:	lea    rdi,[rip+0x7cc5]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41bb0c:	lea    rsi,[rip+0x748f]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bb13:	lea    rcx,[rip+0x7ddf]        # 4238f9 <flatcc_builder_padding_base@@Base+0xbd9>
  41bb1a:	mov    edx,0x525
  41bb1f:	call   404090 <__assert_fail@plt>
  41bb24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb2e:	xchg   ax,ax

000000000041bb30 <flatcc_builder_create_vector@@Base>:
  41bb30:	push   rbp
  41bb31:	push   rbx
  41bb32:	sub    rsp,0x98
  41bb39:	cmp    rdx,r9
  41bb3c:	ja     41bc66 <flatcc_builder_create_vector@@Base+0x136>
  41bb42:	mov    rbx,rdi
  41bb45:	cmp    r8w,0x4
  41bb4a:	mov    eax,0x4
  41bb4f:	cmova  eax,r8d
  41bb53:	cmp    WORD PTR [rdi+0xe8],ax
  41bb5a:	jae    41bb63 <flatcc_builder_create_vector@@Base+0x33>
  41bb5c:	mov    WORD PTR [rbx+0xe8],ax
  41bb63:	imul   ecx,edx
  41bb66:	mov    DWORD PTR [rsp+0x4],edx
  41bb6a:	mov    ebp,DWORD PTR [rbx+0xf0]
  41bb70:	mov    edx,ebp
  41bb72:	sub    edx,ecx
  41bb74:	movzx  eax,ax
  41bb77:	dec    eax
  41bb79:	and    eax,edx
  41bb7b:	mov    QWORD PTR [rsp+0x8],0x4
  41bb84:	lea    rdx,[rsp+0x4]
  41bb89:	mov    QWORD PTR [rsp+0x18],rdx
  41bb8e:	mov    QWORD PTR [rsp+0x20],0x4
  41bb97:	mov    DWORD PTR [rsp+0x10],0x1
  41bb9f:	test   ecx,ecx
  41bba1:	je     41bc36 <flatcc_builder_create_vector@@Base+0x106>
  41bba7:	mov    ecx,ecx
  41bba9:	lea    r8,[rcx+0x4]
  41bbad:	mov    QWORD PTR [rsp+0x8],r8
  41bbb2:	mov    QWORD PTR [rsp+0x28],rsi
  41bbb7:	mov    QWORD PTR [rsp+0x30],rcx
  41bbbc:	mov    DWORD PTR [rsp+0x10],0x2
  41bbc4:	mov    edx,0x2
  41bbc9:	test   eax,eax
  41bbcb:	je     41bbf4 <flatcc_builder_create_vector@@Base+0xc4>
  41bbcd:	mov    eax,eax
  41bbcf:	add    r8,rax
  41bbd2:	mov    QWORD PTR [rsp+0x8],r8
  41bbd7:	mov    ecx,edx
  41bbd9:	shl    rcx,0x4
  41bbdd:	lea    rsi,[rip+0x713c]        # 422d20 <flatcc_builder_padding_base@@Base>
  41bbe4:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  41bbe9:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  41bbee:	inc    edx
  41bbf0:	mov    DWORD PTR [rsp+0x10],edx
  41bbf4:	cmp    r8,0x11
  41bbf8:	setb   al
  41bbfb:	lea    rcx,[r8-0x10]
  41bbff:	shr    rcx,0x20
  41bc03:	sete   cl
  41bc06:	test   r8d,r8d
  41bc09:	jle    41bc47 <flatcc_builder_create_vector@@Base+0x117>
  41bc0b:	or     al,cl
  41bc0d:	je     41bc47 <flatcc_builder_create_vector@@Base+0x117>
  41bc0f:	sub    ebp,r8d
  41bc12:	mov    rdi,QWORD PTR [rbx+0x38]
  41bc16:	lea    rsi,[rsp+0x18]
  41bc1b:	mov    ecx,ebp
  41bc1d:	call   QWORD PTR [rbx+0x48]
  41bc20:	test   eax,eax
  41bc22:	jne    41bc85 <flatcc_builder_create_vector@@Base+0x155>
  41bc24:	mov    DWORD PTR [rbx+0xf0],ebp
  41bc2a:	mov    eax,ebp
  41bc2c:	add    rsp,0x98
  41bc33:	pop    rbx
  41bc34:	pop    rbp
  41bc35:	ret    
  41bc36:	mov    r8d,0x4
  41bc3c:	mov    edx,0x1
  41bc41:	test   eax,eax
  41bc43:	jne    41bbcd <flatcc_builder_create_vector@@Base+0x9d>
  41bc45:	jmp    41bbf4 <flatcc_builder_create_vector@@Base+0xc4>
  41bc47:	lea    rdi,[rip+0x8514]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41bc4e:	lea    rsi,[rip+0x734d]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bc55:	lea    rcx,[rip+0x83c5]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41bc5c:	mov    edx,0x287
  41bc61:	call   404090 <__assert_fail@plt>
  41bc66:	lea    rdi,[rip+0x7cce]        # 42393b <flatcc_builder_padding_base@@Base+0xc1b>
  41bc6d:	lea    rsi,[rip+0x732e]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bc74:	lea    rcx,[rip+0x7cd3]        # 42394e <flatcc_builder_padding_base@@Base+0xc2e>
  41bc7b:	mov    edx,0x555
  41bc80:	call   404090 <__assert_fail@plt>
  41bc85:	lea    rdi,[rip+0x84d6]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41bc8c:	lea    rsi,[rip+0x730f]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bc93:	lea    rcx,[rip+0x8387]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41bc9a:	mov    edx,0x28b
  41bc9f:	call   404090 <__assert_fail@plt>
  41bca4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bcae:	xchg   ax,ax

000000000041bcb0 <flatcc_builder_end_vector@@Base>:
  41bcb0:	push   rbp
  41bcb1:	push   rbx
  41bcb2:	push   rax
  41bcb3:	mov    rax,QWORD PTR [rdi+0x30]
  41bcb7:	cmp    WORD PTR [rax+0xe],0x4
  41bcbc:	jne    41bd57 <flatcc_builder_end_vector@@Base+0xa7>
  41bcc2:	mov    rbx,rdi
  41bcc5:	mov    rsi,QWORD PTR [rdi+0x18]
  41bcc9:	mov    ecx,DWORD PTR [rax+0x10]
  41bccc:	mov    edx,DWORD PTR [rax+0x14]
  41bccf:	movzx  r8d,WORD PTR [rdi+0xea]
  41bcd7:	mov    r9d,DWORD PTR [rax+0x18]
  41bcdb:	call   41bb30 <flatcc_builder_create_vector@@Base>
  41bce0:	mov    ebp,eax
  41bce2:	test   eax,eax
  41bce4:	je     41bd4e <flatcc_builder_end_vector@@Base+0x9e>
  41bce6:	mov    rdi,QWORD PTR [rbx+0x18]
  41bcea:	mov    edx,DWORD PTR [rbx+0x20]
  41bced:	xor    esi,esi
  41bcef:	call   4040a0 <memset@plt>
  41bcf4:	mov    rax,QWORD PTR [rbx+0x30]
  41bcf8:	mov    ecx,DWORD PTR [rax+0x8]
  41bcfb:	mov    DWORD PTR [rbx+0x20],ecx
  41bcfe:	mov    ecx,DWORD PTR [rax]
  41bd00:	mov    DWORD PTR [rbx+0x28],ecx
  41bd03:	mov    edx,DWORD PTR [rax+0x4]
  41bd06:	mov    rsi,rcx
  41bd09:	add    rsi,QWORD PTR [rbx+0x68]
  41bd0d:	mov    QWORD PTR [rbx+0x18],rsi
  41bd11:	mov    esi,DWORD PTR [rbx+0x70]
  41bd14:	sub    esi,ecx
  41bd16:	cmp    esi,edx
  41bd18:	cmova  esi,edx
  41bd1b:	mov    DWORD PTR [rbx+0x24],esi
  41bd1e:	movzx  ecx,WORD PTR [rbx+0xea]
  41bd25:	cmp    WORD PTR [rbx+0xe8],cx
  41bd2c:	jae    41bd35 <flatcc_builder_end_vector@@Base+0x85>
  41bd2e:	mov    WORD PTR [rbx+0xe8],cx
  41bd35:	movzx  ecx,WORD PTR [rax+0xc]
  41bd39:	mov    WORD PTR [rbx+0xea],cx
  41bd40:	add    rax,0xffffffffffffffdc
  41bd44:	mov    QWORD PTR [rbx+0x30],rax
  41bd48:	dec    DWORD PTR [rbx+0x104]
  41bd4e:	mov    eax,ebp
  41bd50:	add    rsp,0x8
  41bd54:	pop    rbx
  41bd55:	pop    rbp
  41bd56:	ret    
  41bd57:	lea    rdi,[rip+0x7581]        # 4232df <flatcc_builder_padding_base@@Base+0x5bf>
  41bd5e:	lea    rsi,[rip+0x723d]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bd65:	lea    rcx,[rip+0x7c58]        # 4239c4 <flatcc_builder_padding_base@@Base+0xca4>
  41bd6c:	mov    edx,0x578
  41bd71:	call   404090 <__assert_fail@plt>
  41bd76:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041bd80 <flatcc_builder_vector_count@@Base>:
  41bd80:	mov    rax,QWORD PTR [rdi+0x30]
  41bd84:	mov    eax,DWORD PTR [rax+0x14]
  41bd87:	ret    
  41bd88:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bd90 <flatcc_builder_vector_edit@@Base>:
  41bd90:	mov    rax,QWORD PTR [rdi+0x18]
  41bd94:	ret    
  41bd95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd9f:	nop

000000000041bda0 <flatcc_builder_create_offset_vector_direct@@Base>:
  41bda0:	xor    ecx,ecx
  41bda2:	jmp    41bdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41bda4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdae:	xchg   ax,ax
  41bdb0:	push   r14
  41bdb2:	push   rbx
  41bdb3:	sub    rsp,0x98
  41bdba:	mov    r10,rdx
  41bdbd:	xor    ebx,ebx
  41bdbf:	test   r10d,0xc0000000
  41bdc6:	jne    41bf39 <flatcc_builder_create_offset_vector_direct@@Base+0x199>
  41bdcc:	mov    r14,rdi
  41bdcf:	cmp    WORD PTR [rdi+0xe8],0x3
  41bdd7:	ja     41bde3 <flatcc_builder_create_offset_vector_direct@@Base+0x43>
  41bdd9:	mov    WORD PTR [r14+0xe8],0x4
  41bde3:	lea    r8d,[r10*4+0x0]
  41bdeb:	mov    DWORD PTR [rsp+0x4],r10d
  41bdf0:	mov    ebx,DWORD PTR [r14+0xf0]
  41bdf7:	mov    r9d,ebx
  41bdfa:	and    r9d,0x3
  41bdfe:	mov    QWORD PTR [rsp+0x8],0x4
  41be07:	lea    rdx,[rsp+0x4]
  41be0c:	mov    QWORD PTR [rsp+0x18],rdx
  41be11:	mov    QWORD PTR [rsp+0x20],0x4
  41be1a:	mov    DWORD PTR [rsp+0x10],0x1
  41be22:	test   r8d,r8d
  41be25:	je     41bf46 <flatcc_builder_create_offset_vector_direct@@Base+0x1a6>
  41be2b:	mov    edx,r8d
  41be2e:	lea    r8,[rdx+0x4]
  41be32:	mov    QWORD PTR [rsp+0x8],r8
  41be37:	mov    QWORD PTR [rsp+0x28],rsi
  41be3c:	mov    QWORD PTR [rsp+0x30],rdx
  41be41:	mov    DWORD PTR [rsp+0x10],0x2
  41be49:	mov    edx,0x2
  41be4e:	test   r9d,r9d
  41be51:	je     41be78 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  41be53:	add    r8,r9
  41be56:	mov    QWORD PTR [rsp+0x8],r8
  41be5b:	mov    edi,edx
  41be5d:	shl    rdi,0x4
  41be61:	lea    rax,[rip+0x6eb8]        # 422d20 <flatcc_builder_padding_base@@Base>
  41be68:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  41be6d:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  41be72:	inc    edx
  41be74:	mov    DWORD PTR [rsp+0x10],edx
  41be78:	test   r10d,r10d
  41be7b:	je     41bef5 <flatcc_builder_create_offset_vector_direct@@Base+0x155>
  41be7d:	mov    edi,r8d
  41be80:	sub    edi,ebx
  41be82:	add    edi,0xfffffffc
  41be85:	mov    r9d,r10d
  41be88:	xor    ebx,ebx
  41be8a:	jmp    41be9b <flatcc_builder_create_offset_vector_direct@@Base+0xfb>
  41be8c:	nop    DWORD PTR [rax+0x0]
  41be90:	inc    rbx
  41be93:	add    edi,0xfffffffc
  41be96:	cmp    r9,rbx
  41be99:	je     41beee <flatcc_builder_create_offset_vector_direct@@Base+0x14e>
  41be9b:	mov    eax,DWORD PTR [rsi+rbx*4]
  41be9e:	test   eax,eax
  41bea0:	je     41bec0 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
  41bea2:	add    eax,edi
  41bea4:	mov    DWORD PTR [rsi+rbx*4],eax
  41bea7:	test   rcx,rcx
  41beaa:	je     41be90 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41beac:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41beb0:	jne    41be90 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41beb2:	jmp    41bf5f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  41beb7:	nop    WORD PTR [rax+rax*1+0x0]
  41bec0:	test   rcx,rcx
  41bec3:	je     41bf7e <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  41bec9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41becd:	je     41be90 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41becf:	lea    rdi,[rip+0x8311]        # 4241e7 <flatcc_builder_padding_base@@Base+0x14c7>
  41bed6:	lea    rsi,[rip+0x70c5]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bedd:	lea    rcx,[rip+0x8280]        # 424164 <flatcc_builder_padding_base@@Base+0x1444>
  41bee4:	mov    edx,0x5b5
  41bee9:	call   404090 <__assert_fail@plt>
  41beee:	mov    ebx,DWORD PTR [r14+0xf0]
  41bef5:	cmp    r8,0x11
  41bef9:	setb   al
  41befc:	lea    rcx,[r8-0x10]
  41bf00:	shr    rcx,0x20
  41bf04:	sete   cl
  41bf07:	test   r8d,r8d
  41bf0a:	jle    41bf9d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41bf10:	or     al,cl
  41bf12:	je     41bf9d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41bf18:	sub    ebx,r8d
  41bf1b:	mov    rdi,QWORD PTR [r14+0x38]
  41bf1f:	lea    rsi,[rsp+0x18]
  41bf24:	mov    ecx,ebx
  41bf26:	call   QWORD PTR [r14+0x48]
  41bf2a:	test   eax,eax
  41bf2c:	jne    41bfbc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  41bf32:	mov    DWORD PTR [r14+0xf0],ebx
  41bf39:	mov    eax,ebx
  41bf3b:	add    rsp,0x98
  41bf42:	pop    rbx
  41bf43:	pop    r14
  41bf45:	ret    
  41bf46:	mov    r8d,0x4
  41bf4c:	mov    edx,0x1
  41bf51:	test   r9d,r9d
  41bf54:	jne    41be53 <flatcc_builder_create_offset_vector_direct@@Base+0xb3>
  41bf5a:	jmp    41be78 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  41bf5f:	lea    rdi,[rip+0x81f0]        # 424156 <flatcc_builder_padding_base@@Base+0x1436>
  41bf66:	lea    rsi,[rip+0x7035]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bf6d:	lea    rcx,[rip+0x81f0]        # 424164 <flatcc_builder_padding_base@@Base+0x1444>
  41bf74:	mov    edx,0x5b1
  41bf79:	call   404090 <__assert_fail@plt>
  41bf7e:	lea    rdi,[rip+0x81dd]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41bf85:	lea    rsi,[rip+0x7016]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bf8c:	lea    rcx,[rip+0x81d1]        # 424164 <flatcc_builder_padding_base@@Base+0x1444>
  41bf93:	mov    edx,0x5b7
  41bf98:	call   404090 <__assert_fail@plt>
  41bf9d:	lea    rdi,[rip+0x81be]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41bfa4:	lea    rsi,[rip+0x6ff7]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bfab:	lea    rcx,[rip+0x806f]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41bfb2:	mov    edx,0x287
  41bfb7:	call   404090 <__assert_fail@plt>
  41bfbc:	lea    rdi,[rip+0x819f]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41bfc3:	lea    rsi,[rip+0x6fd8]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41bfca:	lea    rcx,[rip+0x8050]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41bfd1:	mov    edx,0x28b
  41bfd6:	call   404090 <__assert_fail@plt>
  41bfdb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bfe0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41bfe0:	push   rbp
  41bfe1:	push   rbx
  41bfe2:	push   rax
  41bfe3:	mov    rax,QWORD PTR [rdi+0x30]
  41bfe7:	cmp    WORD PTR [rax+0xe],0x5
  41bfec:	jne    41c07b <flatcc_builder_end_offset_vector_for_unions@@Base+0x9b>
  41bff2:	mov    rcx,rsi
  41bff5:	mov    rbx,rdi
  41bff8:	mov    rsi,QWORD PTR [rdi+0x18]
  41bffc:	mov    edx,DWORD PTR [rax+0x14]
  41bfff:	call   41bdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41c004:	mov    ebp,eax
  41c006:	test   eax,eax
  41c008:	je     41c072 <flatcc_builder_end_offset_vector_for_unions@@Base+0x92>
  41c00a:	mov    rdi,QWORD PTR [rbx+0x18]
  41c00e:	mov    edx,DWORD PTR [rbx+0x20]
  41c011:	xor    esi,esi
  41c013:	call   4040a0 <memset@plt>
  41c018:	mov    rax,QWORD PTR [rbx+0x30]
  41c01c:	mov    ecx,DWORD PTR [rax+0x8]
  41c01f:	mov    DWORD PTR [rbx+0x20],ecx
  41c022:	mov    ecx,DWORD PTR [rax]
  41c024:	mov    DWORD PTR [rbx+0x28],ecx
  41c027:	mov    edx,DWORD PTR [rax+0x4]
  41c02a:	mov    rsi,rcx
  41c02d:	add    rsi,QWORD PTR [rbx+0x68]
  41c031:	mov    QWORD PTR [rbx+0x18],rsi
  41c035:	mov    esi,DWORD PTR [rbx+0x70]
  41c038:	sub    esi,ecx
  41c03a:	cmp    esi,edx
  41c03c:	cmova  esi,edx
  41c03f:	mov    DWORD PTR [rbx+0x24],esi
  41c042:	movzx  ecx,WORD PTR [rbx+0xea]
  41c049:	cmp    WORD PTR [rbx+0xe8],cx
  41c050:	jae    41c059 <flatcc_builder_end_offset_vector_for_unions@@Base+0x79>
  41c052:	mov    WORD PTR [rbx+0xe8],cx
  41c059:	movzx  ecx,WORD PTR [rax+0xc]
  41c05d:	mov    WORD PTR [rbx+0xea],cx
  41c064:	add    rax,0xffffffffffffffdc
  41c068:	mov    QWORD PTR [rbx+0x30],rax
  41c06c:	dec    DWORD PTR [rbx+0x104]
  41c072:	mov    eax,ebp
  41c074:	add    rsp,0x8
  41c078:	pop    rbx
  41c079:	pop    rbp
  41c07a:	ret    
  41c07b:	lea    rdi,[rip+0x7356]        # 4233d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41c082:	lea    rsi,[rip+0x6f19]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c089:	lea    rcx,[rip+0x79c1]        # 423a51 <flatcc_builder_padding_base@@Base+0xd31>
  41c090:	mov    edx,0x5d5
  41c095:	call   404090 <__assert_fail@plt>
  41c09a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c0a0 <flatcc_builder_offset_vector_edit@@Base>:
  41c0a0:	mov    rax,QWORD PTR [rdi+0x18]
  41c0a4:	ret    
  41c0a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0af:	nop

000000000041c0b0 <flatcc_builder_offset_vector_count@@Base>:
  41c0b0:	mov    rax,QWORD PTR [rdi+0x30]
  41c0b4:	mov    eax,DWORD PTR [rax+0x14]
  41c0b7:	ret    
  41c0b8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c0c0 <flatcc_builder_table_add_union@@Base>:
  41c0c0:	push   rbp
  41c0c1:	push   r15
  41c0c3:	push   r14
  41c0c5:	push   rbx
  41c0c6:	push   rax
  41c0c7:	mov    rax,QWORD PTR [rdi+0x30]
  41c0cb:	cmp    WORD PTR [rax+0xe],0x3
  41c0d0:	jne    41c12e <flatcc_builder_table_add_union@@Base+0x6e>
  41c0d2:	mov    r14,rdx
  41c0d5:	mov    ebp,esi
  41c0d7:	mov    r15,rdi
  41c0da:	mov    rbx,rdx
  41c0dd:	shr    rbx,0x20
  41c0e1:	test   r14b,r14b
  41c0e4:	jne    41c0ea <flatcc_builder_table_add_union@@Base+0x2a>
  41c0e6:	test   ebx,ebx
  41c0e8:	jne    41c14d <flatcc_builder_table_add_union@@Base+0x8d>
  41c0ea:	test   ebx,ebx
  41c0ec:	je     41c103 <flatcc_builder_table_add_union@@Base+0x43>
  41c0ee:	mov    rdi,r15
  41c0f1:	mov    esi,ebp
  41c0f3:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  41c0f8:	test   rax,rax
  41c0fb:	je     41c18b <flatcc_builder_table_add_union@@Base+0xcb>
  41c101:	mov    DWORD PTR [rax],ebx
  41c103:	dec    ebp
  41c105:	mov    edx,0x1
  41c10a:	mov    rdi,r15
  41c10d:	mov    esi,ebp
  41c10f:	mov    ecx,0x1
  41c114:	call   41c310 <flatcc_builder_table_add@@Base>
  41c119:	test   rax,rax
  41c11c:	je     41c16c <flatcc_builder_table_add_union@@Base+0xac>
  41c11e:	mov    BYTE PTR [rax],r14b
  41c121:	xor    eax,eax
  41c123:	add    rsp,0x8
  41c127:	pop    rbx
  41c128:	pop    r14
  41c12a:	pop    r15
  41c12c:	pop    rbp
  41c12d:	ret    
  41c12e:	lea    rdi,[rip+0x769c]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41c135:	lea    rsi,[rip+0x6e66]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c13c:	lea    rcx,[rip+0x7980]        # 423ac3 <flatcc_builder_padding_base@@Base+0xda3>
  41c143:	mov    edx,0x5ee
  41c148:	call   404090 <__assert_fail@plt>
  41c14d:	lea    rdi,[rip+0x79c7]        # 423b1b <flatcc_builder_padding_base@@Base+0xdfb>
  41c154:	lea    rsi,[rip+0x6e47]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c15b:	lea    rcx,[rip+0x7961]        # 423ac3 <flatcc_builder_padding_base@@Base+0xda3>
  41c162:	mov    edx,0x5ef
  41c167:	call   404090 <__assert_fail@plt>
  41c16c:	lea    rdi,[rip+0x79d4]        # 423b47 <flatcc_builder_padding_base@@Base+0xe27>
  41c173:	lea    rsi,[rip+0x6e28]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c17a:	lea    rcx,[rip+0x7942]        # 423ac3 <flatcc_builder_padding_base@@Base+0xda3>
  41c181:	mov    edx,0x5f6
  41c186:	call   404090 <__assert_fail@plt>
  41c18b:	lea    rdi,[rip+0x79ab]        # 423b3d <flatcc_builder_padding_base@@Base+0xe1d>
  41c192:	lea    rsi,[rip+0x6e09]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c199:	lea    rcx,[rip+0x7923]        # 423ac3 <flatcc_builder_padding_base@@Base+0xda3>
  41c1a0:	mov    edx,0x5f2
  41c1a5:	call   404090 <__assert_fail@plt>
  41c1aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c1b0 <flatcc_builder_table_add_offset@@Base>:
  41c1b0:	push   rbp
  41c1b1:	push   r15
  41c1b3:	push   r14
  41c1b5:	push   rbx
  41c1b6:	push   rax
  41c1b7:	mov    rax,QWORD PTR [rdi+0x30]
  41c1bb:	cmp    WORD PTR [rax+0xe],0x3
  41c1c0:	jne    41c2ae <flatcc_builder_table_add_offset@@Base+0xfe>
  41c1c6:	mov    r14d,esi
  41c1c9:	cmp    esi,0x7ffd
  41c1cf:	jae    41c2cd <flatcc_builder_table_add_offset@@Base+0x11d>
  41c1d5:	mov    rbx,rdi
  41c1d8:	mov    rax,QWORD PTR [rdi+0x8]
  41c1dc:	movsxd rcx,r14d
  41c1df:	cmp    WORD PTR [rax+rcx*2],0x0
  41c1e4:	jne    41c2ec <flatcc_builder_table_add_offset@@Base+0x13c>
  41c1ea:	mov    ecx,DWORD PTR [rbx+0x14]
  41c1ed:	xor    ecx,r14d
  41c1f0:	imul   ecx,ecx,0x9e3779b1
  41c1f6:	xor    ecx,0x4
  41c1f9:	imul   ecx,ecx,0x9e3779b1
  41c1ff:	mov    DWORD PTR [rbx+0x14],ecx
  41c202:	mov    ebp,DWORD PTR [rbx+0x20]
  41c205:	mov    ecx,DWORD PTR [rbx+0x24]
  41c208:	add    ebp,0x3
  41c20b:	and    ebp,0xfffffffc
  41c20e:	lea    r15,[rbp+0x4]
  41c212:	mov    DWORD PTR [rbx+0x20],r15d
  41c216:	cmp    ecx,r15d
  41c219:	jae    41c278 <flatcc_builder_table_add_offset@@Base+0xc8>
  41c21b:	mov    eax,r15d
  41c21e:	and    eax,0xfffffffc
  41c221:	lea    rsi,[rbx+0x68]
  41c225:	mov    rdi,QWORD PTR [rbx+0x40]
  41c229:	mov    edx,DWORD PTR [rbx+0x28]
  41c22c:	add    rdx,rax
  41c22f:	mov    ecx,0x1
  41c234:	mov    r8d,0x1
  41c23a:	call   QWORD PTR [rbx+0x50]
  41c23d:	test   eax,eax
  41c23f:	je     41c245 <flatcc_builder_table_add_offset@@Base+0x95>
  41c241:	xor    ebp,ebp
  41c243:	jmp    41c2a0 <flatcc_builder_table_add_offset@@Base+0xf0>
  41c245:	mov    eax,DWORD PTR [rbx+0x28]
  41c248:	mov    rcx,rax
  41c24b:	add    rcx,QWORD PTR [rbx+0x68]
  41c24f:	mov    QWORD PTR [rbx+0x18],rcx
  41c253:	mov    ecx,DWORD PTR [rbx+0x70]
  41c256:	sub    ecx,eax
  41c258:	cmp    ecx,0xfffc
  41c25e:	mov    eax,0xfffc
  41c263:	cmovb  eax,ecx
  41c266:	mov    DWORD PTR [rbx+0x24],eax
  41c269:	mov    rax,QWORD PTR [rbx+0x30]
  41c26d:	mov    DWORD PTR [rax+0x4],0xfffc
  41c274:	mov    rax,QWORD PTR [rbx+0x8]
  41c278:	movzx  ecx,r14w
  41c27c:	mov    WORD PTR [rax+rcx*2],r15w
  41c281:	cmp    WORD PTR [rbx+0x10],cx
  41c285:	ja     41c28f <flatcc_builder_table_add_offset@@Base+0xdf>
  41c287:	inc    r14d
  41c28a:	mov    WORD PTR [rbx+0x10],r14w
  41c28f:	mov    rax,QWORD PTR [rbx]
  41c292:	lea    rcx,[rax+0x2]
  41c296:	mov    QWORD PTR [rbx],rcx
  41c299:	mov    WORD PTR [rax],bp
  41c29c:	add    rbp,QWORD PTR [rbx+0x18]
  41c2a0:	mov    rax,rbp
  41c2a3:	add    rsp,0x8
  41c2a7:	pop    rbx
  41c2a8:	pop    r14
  41c2aa:	pop    r15
  41c2ac:	pop    rbp
  41c2ad:	ret    
  41c2ae:	lea    rdi,[rip+0x751c]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41c2b5:	lea    rsi,[rip+0x6ce6]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c2bc:	lea    rcx,[rip+0x7c02]        # 423ec5 <flatcc_builder_padding_base@@Base+0x11a5>
  41c2c3:	mov    edx,0x713
  41c2c8:	call   404090 <__assert_fail@plt>
  41c2cd:	lea    rdi,[rip+0x7b71]        # 423e45 <flatcc_builder_padding_base@@Base+0x1125>
  41c2d4:	lea    rsi,[rip+0x6cc7]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c2db:	lea    rcx,[rip+0x7be3]        # 423ec5 <flatcc_builder_padding_base@@Base+0x11a5>
  41c2e2:	mov    edx,0x714
  41c2e7:	call   404090 <__assert_fail@plt>
  41c2ec:	lea    rdi,[rip+0x7e6f]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41c2f3:	lea    rsi,[rip+0x6ca8]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c2fa:	lea    rcx,[rip+0x7bc4]        # 423ec5 <flatcc_builder_padding_base@@Base+0x11a5>
  41c301:	mov    edx,0x71b
  41c306:	call   404090 <__assert_fail@plt>
  41c30b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c310 <flatcc_builder_table_add@@Base>:
  41c310:	push   rbp
  41c311:	push   r14
  41c313:	push   rbx
  41c314:	mov    rax,QWORD PTR [rdi+0x30]
  41c318:	cmp    WORD PTR [rax+0xe],0x3
  41c31d:	jne    41c408 <flatcc_builder_table_add@@Base+0xf8>
  41c323:	mov    r14d,esi
  41c326:	cmp    esi,0x7ffd
  41c32c:	jae    41c427 <flatcc_builder_table_add@@Base+0x117>
  41c332:	mov    rbx,rdi
  41c335:	cmp    WORD PTR [rdi+0xea],cx
  41c33c:	jae    41c345 <flatcc_builder_table_add@@Base+0x35>
  41c33e:	mov    WORD PTR [rbx+0xea],cx
  41c345:	mov    rsi,QWORD PTR [rbx+0x8]
  41c349:	movsxd rax,r14d
  41c34c:	cmp    WORD PTR [rsi+rax*2],0x0
  41c351:	jne    41c446 <flatcc_builder_table_add@@Base+0x136>
  41c357:	mov    eax,DWORD PTR [rbx+0x14]
  41c35a:	xor    eax,r14d
  41c35d:	imul   eax,eax,0x9e3779b1
  41c363:	xor    eax,edx
  41c365:	imul   eax,eax,0x9e3779b1
  41c36b:	mov    DWORD PTR [rbx+0x14],eax
  41c36e:	mov    eax,DWORD PTR [rbx+0x20]
  41c371:	movzx  ebp,cx
  41c374:	lea    eax,[rax+rbp*1]
  41c377:	add    eax,0xffffffff
  41c37a:	neg    ebp
  41c37c:	and    ebp,eax
  41c37e:	add    edx,ebp
  41c380:	mov    DWORD PTR [rbx+0x20],edx
  41c383:	cmp    edx,DWORD PTR [rbx+0x24]
  41c386:	jb     41c3e4 <flatcc_builder_table_add@@Base+0xd4>
  41c388:	inc    edx
  41c38a:	lea    rsi,[rbx+0x68]
  41c38e:	mov    rdi,QWORD PTR [rbx+0x40]
  41c392:	mov    eax,DWORD PTR [rbx+0x28]
  41c395:	add    rax,rdx
  41c398:	mov    rdx,rax
  41c39b:	mov    ecx,0x1
  41c3a0:	mov    r8d,0x1
  41c3a6:	call   QWORD PTR [rbx+0x50]
  41c3a9:	test   eax,eax
  41c3ab:	je     41c3b1 <flatcc_builder_table_add@@Base+0xa1>
  41c3ad:	xor    eax,eax
  41c3af:	jmp    41c403 <flatcc_builder_table_add@@Base+0xf3>
  41c3b1:	mov    eax,DWORD PTR [rbx+0x28]
  41c3b4:	mov    rcx,rax
  41c3b7:	add    rcx,QWORD PTR [rbx+0x68]
  41c3bb:	mov    QWORD PTR [rbx+0x18],rcx
  41c3bf:	mov    ecx,DWORD PTR [rbx+0x70]
  41c3c2:	sub    ecx,eax
  41c3c4:	cmp    ecx,0xfffc
  41c3ca:	mov    eax,0xfffc
  41c3cf:	cmovb  eax,ecx
  41c3d2:	mov    DWORD PTR [rbx+0x24],eax
  41c3d5:	mov    rax,QWORD PTR [rbx+0x30]
  41c3d9:	mov    DWORD PTR [rax+0x4],0xfffc
  41c3e0:	mov    rsi,QWORD PTR [rbx+0x8]
  41c3e4:	mov    eax,ebp
  41c3e6:	add    ebp,0x4
  41c3e9:	movzx  ecx,r14w
  41c3ed:	mov    WORD PTR [rsi+rcx*2],bp
  41c3f1:	cmp    WORD PTR [rbx+0x10],cx
  41c3f5:	ja     41c3ff <flatcc_builder_table_add@@Base+0xef>
  41c3f7:	inc    r14d
  41c3fa:	mov    WORD PTR [rbx+0x10],r14w
  41c3ff:	add    rax,QWORD PTR [rbx+0x18]
  41c403:	pop    rbx
  41c404:	pop    r14
  41c406:	pop    rbp
  41c407:	ret    
  41c408:	lea    rdi,[rip+0x73c2]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41c40f:	lea    rsi,[rip+0x6b8c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c416:	lea    rcx,[rip+0x79de]        # 423dfb <flatcc_builder_padding_base@@Base+0x10db>
  41c41d:	mov    edx,0x6ed
  41c422:	call   404090 <__assert_fail@plt>
  41c427:	lea    rdi,[rip+0x7a17]        # 423e45 <flatcc_builder_padding_base@@Base+0x1125>
  41c42e:	lea    rsi,[rip+0x6b6d]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c435:	lea    rcx,[rip+0x79bf]        # 423dfb <flatcc_builder_padding_base@@Base+0x10db>
  41c43c:	mov    edx,0x6ee
  41c441:	call   404090 <__assert_fail@plt>
  41c446:	lea    rdi,[rip+0x7d15]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41c44d:	lea    rsi,[rip+0x6b4e]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c454:	lea    rcx,[rip+0x79a0]        # 423dfb <flatcc_builder_padding_base@@Base+0x10db>
  41c45b:	mov    edx,0x6f8
  41c460:	call   404090 <__assert_fail@plt>
  41c465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c46f:	nop

000000000041c470 <flatcc_builder_table_add_union_vector@@Base>:
  41c470:	push   r15
  41c472:	push   r14
  41c474:	push   r12
  41c476:	push   rbx
  41c477:	push   rax
  41c478:	mov    rax,QWORD PTR [rdi+0x30]
  41c47c:	cmp    WORD PTR [rax+0xe],0x3
  41c481:	jne    41c4d7 <flatcc_builder_table_add_union_vector@@Base+0x67>
  41c483:	mov    rbx,rdx
  41c486:	mov    r12,rdx
  41c489:	shr    r12,0x20
  41c48d:	test   ebx,ebx
  41c48f:	setne  al
  41c492:	test   r12d,r12d
  41c495:	sete   cl
  41c498:	xor    cl,al
  41c49a:	je     41c4f6 <flatcc_builder_table_add_union_vector@@Base+0x86>
  41c49c:	test   ebx,ebx
  41c49e:	je     41c4c9 <flatcc_builder_table_add_union_vector@@Base+0x59>
  41c4a0:	mov    r14d,esi
  41c4a3:	mov    r15,rdi
  41c4a6:	lea    esi,[r14-0x1]
  41c4aa:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  41c4af:	test   rax,rax
  41c4b2:	je     41c515 <flatcc_builder_table_add_union_vector@@Base+0xa5>
  41c4b4:	mov    DWORD PTR [rax],ebx
  41c4b6:	mov    rdi,r15
  41c4b9:	mov    esi,r14d
  41c4bc:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  41c4c1:	test   rax,rax
  41c4c4:	je     41c534 <flatcc_builder_table_add_union_vector@@Base+0xc4>
  41c4c6:	mov    DWORD PTR [rax],r12d
  41c4c9:	xor    eax,eax
  41c4cb:	add    rsp,0x8
  41c4cf:	pop    rbx
  41c4d0:	pop    r12
  41c4d2:	pop    r14
  41c4d4:	pop    r15
  41c4d6:	ret    
  41c4d7:	lea    rdi,[rip+0x72f3]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41c4de:	lea    rsi,[rip+0x6abd]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c4e5:	lea    rcx,[rip+0x7667]        # 423b53 <flatcc_builder_padding_base@@Base+0xe33>
  41c4ec:	mov    edx,0x600
  41c4f1:	call   404090 <__assert_fail@plt>
  41c4f6:	lea    rdi,[rip+0x76b9]        # 423bb6 <flatcc_builder_padding_base@@Base+0xe96>
  41c4fd:	lea    rsi,[rip+0x6a9e]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c504:	lea    rcx,[rip+0x7648]        # 423b53 <flatcc_builder_padding_base@@Base+0xe33>
  41c50b:	mov    edx,0x601
  41c510:	call   404090 <__assert_fail@plt>
  41c515:	lea    rdi,[rip+0x7621]        # 423b3d <flatcc_builder_padding_base@@Base+0xe1d>
  41c51c:	lea    rsi,[rip+0x6a7f]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c523:	lea    rcx,[rip+0x7629]        # 423b53 <flatcc_builder_padding_base@@Base+0xe33>
  41c52a:	mov    edx,0x604
  41c52f:	call   404090 <__assert_fail@plt>
  41c534:	lea    rdi,[rip+0x7602]        # 423b3d <flatcc_builder_padding_base@@Base+0xe1d>
  41c53b:	lea    rsi,[rip+0x6a60]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c542:	lea    rcx,[rip+0x760a]        # 423b53 <flatcc_builder_padding_base@@Base+0xe33>
  41c549:	mov    edx,0x608
  41c54e:	call   404090 <__assert_fail@plt>
  41c553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c55d:	nop    DWORD PTR [rax]

000000000041c560 <flatcc_builder_create_union_vector@@Base>:
  41c560:	push   r15
  41c562:	push   r14
  41c564:	push   r13
  41c566:	push   r12
  41c568:	push   rbx
  41c569:	mov    r14,rdx
  41c56c:	mov    r15,rsi
  41c56f:	mov    rbx,rdi
  41c572:	mov    esi,0x4
  41c577:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41c57c:	test   eax,eax
  41c57e:	je     41c590 <flatcc_builder_create_union_vector@@Base+0x30>
  41c580:	xor    r14d,r14d
  41c583:	mov    rax,r14
  41c586:	pop    rbx
  41c587:	pop    r12
  41c589:	pop    r13
  41c58b:	pop    r14
  41c58d:	pop    r15
  41c58f:	ret    
  41c590:	mov    rax,QWORD PTR [rbx+0x30]
  41c594:	mov    DWORD PTR [rax+0x10],0x4
  41c59b:	mov    rax,QWORD PTR [rbx+0x30]
  41c59f:	mov    DWORD PTR [rax+0x14],0x0
  41c5a6:	mov    rax,QWORD PTR [rbx+0x30]
  41c5aa:	mov    WORD PTR [rax+0xe],0x5
  41c5b0:	mov    ecx,DWORD PTR [rbx+0x28]
  41c5b3:	mov    edx,DWORD PTR [rbx+0x70]
  41c5b6:	sub    edx,ecx
  41c5b8:	add    rcx,QWORD PTR [rbx+0x68]
  41c5bc:	mov    QWORD PTR [rbx+0x18],rcx
  41c5c0:	cmp    edx,0xfffffffc
  41c5c3:	mov    ecx,0xfffffffc
  41c5c8:	cmovb  ecx,edx
  41c5cb:	mov    DWORD PTR [rbx+0x24],ecx
  41c5ce:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c5d5:	mov    ecx,DWORD PTR [rax+0x14]
  41c5d8:	add    ecx,r14d
  41c5db:	jb     41c848 <flatcc_builder_create_union_vector@@Base+0x2e8>
  41c5e1:	cmp    ecx,0x40000000
  41c5e7:	jae    41c848 <flatcc_builder_create_union_vector@@Base+0x2e8>
  41c5ed:	mov    DWORD PTR [rax+0x14],ecx
  41c5f0:	mov    r12d,DWORD PTR [rbx+0x20]
  41c5f4:	mov    eax,DWORD PTR [rbx+0x24]
  41c5f7:	lea    ecx,[r12+r14*4]
  41c5fb:	mov    DWORD PTR [rbx+0x20],ecx
  41c5fe:	cmp    ecx,eax
  41c600:	jae    41c610 <flatcc_builder_create_union_vector@@Base+0xb0>
  41c602:	mov    rsi,QWORD PTR [rbx+0x18]
  41c606:	add    r12,rsi
  41c609:	jne    41c66b <flatcc_builder_create_union_vector@@Base+0x10b>
  41c60b:	jmp    41c580 <flatcc_builder_create_union_vector@@Base+0x20>
  41c610:	inc    ecx
  41c612:	lea    rsi,[rbx+0x68]
  41c616:	mov    rdi,QWORD PTR [rbx+0x40]
  41c61a:	mov    edx,DWORD PTR [rbx+0x28]
  41c61d:	add    rdx,rcx
  41c620:	mov    ecx,0x1
  41c625:	mov    r8d,0x1
  41c62b:	call   QWORD PTR [rbx+0x50]
  41c62e:	test   eax,eax
  41c630:	jne    41c580 <flatcc_builder_create_union_vector@@Base+0x20>
  41c636:	mov    eax,DWORD PTR [rbx+0x28]
  41c639:	mov    rsi,rax
  41c63c:	add    rsi,QWORD PTR [rbx+0x68]
  41c640:	mov    QWORD PTR [rbx+0x18],rsi
  41c644:	mov    ecx,DWORD PTR [rbx+0x70]
  41c647:	sub    ecx,eax
  41c649:	cmp    ecx,0xfffffffc
  41c64c:	mov    eax,0xfffffffc
  41c651:	cmovb  eax,ecx
  41c654:	mov    DWORD PTR [rbx+0x24],eax
  41c657:	mov    rcx,QWORD PTR [rbx+0x30]
  41c65b:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41c662:	add    r12,rsi
  41c665:	je     41c580 <flatcc_builder_create_union_vector@@Base+0x20>
  41c66b:	mov    r13d,DWORD PTR [rbx+0x20]
  41c66f:	lea    ecx,[r14+r13*1]
  41c673:	mov    DWORD PTR [rbx+0x20],ecx
  41c676:	cmp    ecx,eax
  41c678:	jb     41c6cc <flatcc_builder_create_union_vector@@Base+0x16c>
  41c67a:	inc    ecx
  41c67c:	lea    rsi,[rbx+0x68]
  41c680:	mov    rdi,QWORD PTR [rbx+0x40]
  41c684:	mov    edx,DWORD PTR [rbx+0x28]
  41c687:	add    rdx,rcx
  41c68a:	mov    ecx,0x1
  41c68f:	mov    r8d,0x1
  41c695:	call   QWORD PTR [rbx+0x50]
  41c698:	test   eax,eax
  41c69a:	jne    41c580 <flatcc_builder_create_union_vector@@Base+0x20>
  41c6a0:	mov    eax,DWORD PTR [rbx+0x28]
  41c6a3:	mov    rsi,rax
  41c6a6:	add    rsi,QWORD PTR [rbx+0x68]
  41c6aa:	mov    QWORD PTR [rbx+0x18],rsi
  41c6ae:	mov    ecx,DWORD PTR [rbx+0x70]
  41c6b1:	sub    ecx,eax
  41c6b3:	cmp    ecx,0xfffffffc
  41c6b6:	mov    eax,0xfffffffc
  41c6bb:	cmovb  eax,ecx
  41c6be:	mov    DWORD PTR [rbx+0x24],eax
  41c6c1:	mov    rax,QWORD PTR [rbx+0x30]
  41c6c5:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c6cc:	mov    r12,rsi
  41c6cf:	add    r12,r13
  41c6d2:	je     41c580 <flatcc_builder_create_union_vector@@Base+0x20>
  41c6d8:	test   r14,r14
  41c6db:	je     41c798 <flatcc_builder_create_union_vector@@Base+0x238>
  41c6e1:	lea    rcx,[r14-0x1]
  41c6e5:	mov    r8d,r14d
  41c6e8:	and    r8d,0x3
  41c6ec:	cmp    rcx,0x3
  41c6f0:	jae    41c6fe <flatcc_builder_create_union_vector@@Base+0x19e>
  41c6f2:	xor    ecx,ecx
  41c6f4:	test   r8,r8
  41c6f7:	jne    41c767 <flatcc_builder_create_union_vector@@Base+0x207>
  41c6f9:	jmp    41c798 <flatcc_builder_create_union_vector@@Base+0x238>
  41c6fe:	mov    rdx,r14
  41c701:	sub    rdx,r8
  41c704:	lea    rdi,[rsi+r13*1]
  41c708:	add    rdi,0x3
  41c70c:	xor    ecx,ecx
  41c70e:	xchg   ax,ax
  41c710:	movzx  eax,BYTE PTR [r15+rcx*8]
  41c715:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  41c719:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  41c71e:	mov    DWORD PTR [rsi+rcx*4],eax
  41c721:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  41c727:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  41c72b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  41c730:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  41c734:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  41c73a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  41c73e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  41c743:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  41c747:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  41c74d:	mov    BYTE PTR [rdi+rcx*1],al
  41c750:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  41c755:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  41c759:	add    rcx,0x4
  41c75d:	cmp    rdx,rcx
  41c760:	jne    41c710 <flatcc_builder_create_union_vector@@Base+0x1b0>
  41c762:	test   r8,r8
  41c765:	je     41c798 <flatcc_builder_create_union_vector@@Base+0x238>
  41c767:	lea    rdx,[rsi+rcx*4]
  41c76b:	lea    rdi,[r15+rcx*8]
  41c76f:	add    rdi,0x4
  41c773:	add    r13,rcx
  41c776:	add    r13,rsi
  41c779:	xor    ecx,ecx
  41c77b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c780:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  41c785:	mov    BYTE PTR [r13+rcx*1+0x0],al
  41c78a:	mov    eax,DWORD PTR [rdi+rcx*8]
  41c78d:	mov    DWORD PTR [rdx+rcx*4],eax
  41c790:	inc    rcx
  41c793:	cmp    r8,rcx
  41c796:	jne    41c780 <flatcc_builder_create_union_vector@@Base+0x220>
  41c798:	mov    rdi,rbx
  41c79b:	mov    rdx,r14
  41c79e:	mov    rcx,r12
  41c7a1:	call   41bdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41c7a6:	mov    r15d,eax
  41c7a9:	test   eax,eax
  41c7ab:	je     41c7d1 <flatcc_builder_create_union_vector@@Base+0x271>
  41c7ad:	mov    ecx,0x1
  41c7b2:	mov    r9d,0xffffffff
  41c7b8:	mov    rdi,rbx
  41c7bb:	mov    rsi,r12
  41c7be:	mov    rdx,r14
  41c7c1:	mov    r8d,0x1
  41c7c7:	call   41bb30 <flatcc_builder_create_vector@@Base>
  41c7cc:	mov    r14d,eax
  41c7cf:	jmp    41c7d4 <flatcc_builder_create_union_vector@@Base+0x274>
  41c7d1:	xor    r14d,r14d
  41c7d4:	shl    r15,0x20
  41c7d8:	mov    rdi,QWORD PTR [rbx+0x18]
  41c7dc:	mov    edx,DWORD PTR [rbx+0x20]
  41c7df:	xor    esi,esi
  41c7e1:	call   4040a0 <memset@plt>
  41c7e6:	mov    rax,QWORD PTR [rbx+0x30]
  41c7ea:	mov    ecx,DWORD PTR [rax+0x8]
  41c7ed:	mov    DWORD PTR [rbx+0x20],ecx
  41c7f0:	mov    ecx,DWORD PTR [rax]
  41c7f2:	mov    DWORD PTR [rbx+0x28],ecx
  41c7f5:	mov    edx,DWORD PTR [rax+0x4]
  41c7f8:	mov    rsi,rcx
  41c7fb:	add    rsi,QWORD PTR [rbx+0x68]
  41c7ff:	mov    QWORD PTR [rbx+0x18],rsi
  41c803:	mov    esi,DWORD PTR [rbx+0x70]
  41c806:	sub    esi,ecx
  41c808:	cmp    esi,edx
  41c80a:	cmova  esi,edx
  41c80d:	mov    DWORD PTR [rbx+0x24],esi
  41c810:	movzx  ecx,WORD PTR [rbx+0xea]
  41c817:	cmp    WORD PTR [rbx+0xe8],cx
  41c81e:	jae    41c827 <flatcc_builder_create_union_vector@@Base+0x2c7>
  41c820:	mov    WORD PTR [rbx+0xe8],cx
  41c827:	or     r14,r15
  41c82a:	movzx  ecx,WORD PTR [rax+0xc]
  41c82e:	mov    WORD PTR [rbx+0xea],cx
  41c835:	add    rax,0xffffffffffffffdc
  41c839:	mov    QWORD PTR [rbx+0x30],rax
  41c83d:	dec    DWORD PTR [rbx+0x104]
  41c843:	jmp    41c583 <flatcc_builder_create_union_vector@@Base+0x23>
  41c848:	lea    rdi,[rip+0x781c]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41c84f:	lea    rsi,[rip+0x674c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41c856:	lea    rcx,[rip+0x7829]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41c85d:	mov    edx,0x37c
  41c862:	call   404090 <__assert_fail@plt>
  41c867:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c870 <flatcc_builder_create_union_vector_direct@@Base>:
  41c870:	push   r15
  41c872:	push   r14
  41c874:	push   r12
  41c876:	push   rbx
  41c877:	push   rax
  41c878:	mov    r14,rcx
  41c87b:	mov    r15,rsi
  41c87e:	mov    r12,rdi
  41c881:	mov    rsi,rdx
  41c884:	mov    rdx,rcx
  41c887:	mov    rcx,r15
  41c88a:	call   41bdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41c88f:	mov    ebx,eax
  41c891:	test   eax,eax
  41c893:	je     41c8b8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  41c895:	mov    ecx,0x1
  41c89a:	mov    r9d,0xffffffff
  41c8a0:	mov    rdi,r12
  41c8a3:	mov    rsi,r15
  41c8a6:	mov    rdx,r14
  41c8a9:	mov    r8d,0x1
  41c8af:	call   41bb30 <flatcc_builder_create_vector@@Base>
  41c8b4:	mov    eax,eax
  41c8b6:	jmp    41c8ba <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  41c8b8:	xor    eax,eax
  41c8ba:	shl    rbx,0x20
  41c8be:	or     rbx,rax
  41c8c1:	mov    rax,rbx
  41c8c4:	add    rsp,0x8
  41c8c8:	pop    rbx
  41c8c9:	pop    r12
  41c8cb:	pop    r14
  41c8cd:	pop    r15
  41c8cf:	ret    

000000000041c8d0 <flatcc_builder_start_union_vector@@Base>:
  41c8d0:	push   rbx
  41c8d1:	mov    rbx,rdi
  41c8d4:	mov    esi,0x4
  41c8d9:	call   419dd0 <flatcc_builder_start_buffer@@Base+0xe0>
  41c8de:	mov    ecx,eax
  41c8e0:	mov    eax,0xffffffff
  41c8e5:	test   ecx,ecx
  41c8e7:	je     41c8eb <flatcc_builder_start_union_vector@@Base+0x1b>
  41c8e9:	pop    rbx
  41c8ea:	ret    
  41c8eb:	mov    rax,QWORD PTR [rbx+0x30]
  41c8ef:	mov    DWORD PTR [rax+0x10],0x8
  41c8f6:	mov    rax,QWORD PTR [rbx+0x30]
  41c8fa:	mov    DWORD PTR [rax+0x14],0x0
  41c901:	mov    rax,QWORD PTR [rbx+0x30]
  41c905:	mov    WORD PTR [rax+0xe],0x7
  41c90b:	mov    ecx,DWORD PTR [rbx+0x28]
  41c90e:	mov    edx,DWORD PTR [rbx+0x70]
  41c911:	sub    edx,ecx
  41c913:	add    rcx,QWORD PTR [rbx+0x68]
  41c917:	mov    QWORD PTR [rbx+0x18],rcx
  41c91b:	cmp    edx,0xfffffffc
  41c91e:	mov    ecx,0xfffffffc
  41c923:	cmovb  ecx,edx
  41c926:	mov    DWORD PTR [rbx+0x24],ecx
  41c929:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c930:	xor    eax,eax
  41c932:	pop    rbx
  41c933:	ret    
  41c934:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c93e:	xchg   ax,ax

000000000041c940 <flatcc_builder_end_union_vector@@Base>:
  41c940:	push   rbp
  41c941:	push   r15
  41c943:	push   r14
  41c945:	push   r13
  41c947:	push   r12
  41c949:	push   rbx
  41c94a:	push   rax
  41c94b:	mov    rax,QWORD PTR [rdi+0x30]
  41c94f:	cmp    WORD PTR [rax+0xe],0x7
  41c954:	jne    41cd44 <flatcc_builder_end_union_vector@@Base+0x404>
  41c95a:	mov    r13,rdi
  41c95d:	mov    r14d,DWORD PTR [rax+0x14]
  41c961:	lea    eax,[r14+r14*4]
  41c965:	mov    r12d,DWORD PTR [rdi+0x20]
  41c969:	add    eax,r12d
  41c96c:	mov    DWORD PTR [rdi+0x20],eax
  41c96f:	cmp    eax,DWORD PTR [rdi+0x24]
  41c972:	jae    41c97a <flatcc_builder_end_union_vector@@Base+0x3a>
  41c974:	mov    r8,QWORD PTR [r13+0x18]
  41c978:	jmp    41c9d1 <flatcc_builder_end_union_vector@@Base+0x91>
  41c97a:	inc    eax
  41c97c:	lea    rsi,[r13+0x68]
  41c980:	mov    rdi,QWORD PTR [r13+0x40]
  41c984:	mov    edx,DWORD PTR [r13+0x28]
  41c988:	add    rdx,rax
  41c98b:	mov    ecx,0x1
  41c990:	mov    r8d,0x1
  41c996:	call   QWORD PTR [r13+0x50]
  41c99a:	test   eax,eax
  41c99c:	jne    41cb06 <flatcc_builder_end_union_vector@@Base+0x1c6>
  41c9a2:	mov    eax,DWORD PTR [r13+0x28]
  41c9a6:	mov    r8,rax
  41c9a9:	add    r8,QWORD PTR [r13+0x68]
  41c9ad:	mov    QWORD PTR [r13+0x18],r8
  41c9b1:	mov    ecx,DWORD PTR [r13+0x70]
  41c9b5:	sub    ecx,eax
  41c9b7:	cmp    ecx,0xfffffffc
  41c9ba:	mov    eax,0xfffffffc
  41c9bf:	cmovb  eax,ecx
  41c9c2:	mov    DWORD PTR [r13+0x24],eax
  41c9c6:	mov    rax,QWORD PTR [r13+0x30]
  41c9ca:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c9d1:	mov    rsi,r8
  41c9d4:	add    rsi,r12
  41c9d7:	je     41cb06 <flatcc_builder_end_union_vector@@Base+0x1c6>
  41c9dd:	lea    r15,[rsi+r14*4]
  41c9e1:	test   r14d,r14d
  41c9e4:	je     41caca <flatcc_builder_end_union_vector@@Base+0x18a>
  41c9ea:	cmp    r14d,0x9
  41c9ee:	jae    41cb99 <flatcc_builder_end_union_vector@@Base+0x259>
  41c9f4:	xor    r9d,r9d
  41c9f7:	mov    r11d,r14d
  41c9fa:	sub    r11d,r9d
  41c9fd:	mov    r10,r9
  41ca00:	not    r10
  41ca03:	add    r10,r14
  41ca06:	and    r11,0x3
  41ca0a:	je     41ca50 <flatcc_builder_end_union_vector@@Base+0x110>
  41ca0c:	mov    rdx,r9
  41ca0f:	neg    rdx
  41ca12:	lea    rbp,[r12+r9*4]
  41ca16:	add    rbp,r8
  41ca19:	lea    rbx,[r8+r9*8]
  41ca1d:	add    rbx,0x4
  41ca21:	lea    rax,[r9+r14*4]
  41ca25:	add    rax,r12
  41ca28:	add    rax,r8
  41ca2b:	xor    edi,edi
  41ca2d:	nop    DWORD PTR [rax]
  41ca30:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  41ca35:	mov    BYTE PTR [rax+rdi*1],cl
  41ca38:	mov    ecx,DWORD PTR [rbx+rdi*8]
  41ca3b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  41ca3f:	dec    rdx
  41ca42:	inc    rdi
  41ca45:	cmp    r11,rdi
  41ca48:	jne    41ca30 <flatcc_builder_end_union_vector@@Base+0xf0>
  41ca4a:	neg    rdx
  41ca4d:	mov    r9,rdx
  41ca50:	cmp    r10,0x3
  41ca54:	jb     41caca <flatcc_builder_end_union_vector@@Base+0x18a>
  41ca56:	mov    rbp,r14
  41ca59:	sub    rbp,r9
  41ca5c:	lea    rcx,[r12+r9*4]
  41ca60:	lea    rdx,[r8+rcx*1]
  41ca64:	add    rdx,0xc
  41ca68:	lea    rdi,[r8+r9*8]
  41ca6c:	add    rdi,0x1c
  41ca70:	lea    rcx,[r9+r14*4]
  41ca74:	add    rcx,r12
  41ca77:	add    rcx,r8
  41ca7a:	add    rcx,0x3
  41ca7e:	xor    ebx,ebx
  41ca80:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  41ca85:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  41ca89:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  41ca8d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  41ca91:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  41ca96:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  41ca9a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  41ca9e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  41caa2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  41caa7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  41caab:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  41caaf:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  41cab3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  41cab8:	mov    BYTE PTR [rcx+rbx*1],al
  41cabb:	mov    eax,DWORD PTR [rdi+rbx*8]
  41cabe:	mov    DWORD PTR [rdx+rbx*4],eax
  41cac1:	add    rbx,0x4
  41cac5:	cmp    rbp,rbx
  41cac8:	jne    41ca80 <flatcc_builder_end_union_vector@@Base+0x140>
  41caca:	mov    rdi,r13
  41cacd:	mov    rdx,r14
  41cad0:	mov    rcx,r15
  41cad3:	vzeroupper 
  41cad6:	call   41bdb0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41cadb:	mov    r12d,eax
  41cade:	test   eax,eax
  41cae0:	je     41cb0b <flatcc_builder_end_union_vector@@Base+0x1cb>
  41cae2:	mov    ecx,0x1
  41cae7:	mov    r9d,0xffffffff
  41caed:	mov    rdi,r13
  41caf0:	mov    rsi,r15
  41caf3:	mov    rdx,r14
  41caf6:	mov    r8d,0x1
  41cafc:	call   41bb30 <flatcc_builder_create_vector@@Base>
  41cb01:	mov    r14d,eax
  41cb04:	jmp    41cb0e <flatcc_builder_end_union_vector@@Base+0x1ce>
  41cb06:	xor    r14d,r14d
  41cb09:	jmp    41cb87 <flatcc_builder_end_union_vector@@Base+0x247>
  41cb0b:	xor    r14d,r14d
  41cb0e:	shl    r12,0x20
  41cb12:	mov    rdi,QWORD PTR [r13+0x18]
  41cb16:	mov    edx,DWORD PTR [r13+0x20]
  41cb1a:	xor    esi,esi
  41cb1c:	call   4040a0 <memset@plt>
  41cb21:	mov    rax,QWORD PTR [r13+0x30]
  41cb25:	mov    ecx,DWORD PTR [rax+0x8]
  41cb28:	mov    DWORD PTR [r13+0x20],ecx
  41cb2c:	mov    ecx,DWORD PTR [rax]
  41cb2e:	mov    DWORD PTR [r13+0x28],ecx
  41cb32:	mov    edx,DWORD PTR [rax+0x4]
  41cb35:	mov    rsi,rcx
  41cb38:	add    rsi,QWORD PTR [r13+0x68]
  41cb3c:	mov    QWORD PTR [r13+0x18],rsi
  41cb40:	mov    esi,DWORD PTR [r13+0x70]
  41cb44:	sub    esi,ecx
  41cb46:	cmp    esi,edx
  41cb48:	cmova  esi,edx
  41cb4b:	mov    DWORD PTR [r13+0x24],esi
  41cb4f:	movzx  ecx,WORD PTR [r13+0xea]
  41cb57:	cmp    WORD PTR [r13+0xe8],cx
  41cb5f:	jae    41cb69 <flatcc_builder_end_union_vector@@Base+0x229>
  41cb61:	mov    WORD PTR [r13+0xe8],cx
  41cb69:	or     r14,r12
  41cb6c:	movzx  ecx,WORD PTR [rax+0xc]
  41cb70:	mov    WORD PTR [r13+0xea],cx
  41cb78:	add    rax,0xffffffffffffffdc
  41cb7c:	mov    QWORD PTR [r13+0x30],rax
  41cb80:	dec    DWORD PTR [r13+0x104]
  41cb87:	mov    rax,r14
  41cb8a:	add    rsp,0x8
  41cb8e:	pop    rbx
  41cb8f:	pop    r12
  41cb91:	pop    r13
  41cb93:	pop    r14
  41cb95:	pop    r15
  41cb97:	pop    rbp
  41cb98:	ret    
  41cb99:	lea    rax,[r14-0x1]
  41cb9d:	mov    ecx,0x8
  41cba2:	mul    rcx
  41cba5:	seto   cl
  41cba8:	mov    rdx,r8
  41cbab:	not    rdx
  41cbae:	xor    r9d,r9d
  41cbb1:	cmp    rax,rdx
  41cbb4:	ja     41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cbba:	test   cl,cl
  41cbbc:	jne    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cbc2:	lea    rdx,[r8+0x4]
  41cbc6:	mov    rdi,rdx
  41cbc9:	not    rdi
  41cbcc:	cmp    rax,rdi
  41cbcf:	ja     41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cbd5:	test   cl,cl
  41cbd7:	jne    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cbdd:	lea    rcx,[r14+r14*4]
  41cbe1:	add    rcx,r12
  41cbe4:	add    rcx,r8
  41cbe7:	lea    rbx,[r8+r14*8]
  41cbeb:	add    rbx,0xfffffffffffffff9
  41cbef:	cmp    rbx,r15
  41cbf2:	seta   r11b
  41cbf6:	lea    rdi,[r8+r14*8]
  41cbfa:	cmp    r8,rcx
  41cbfd:	setb   r10b
  41cc01:	cmp    rdi,r15
  41cc04:	seta   al
  41cc07:	cmp    rdx,rcx
  41cc0a:	setb   bpl
  41cc0e:	cmp    rsi,rbx
  41cc11:	setb   cl
  41cc14:	cmp    r8,r15
  41cc17:	setb   BYTE PTR [rsp+0x7]
  41cc1c:	cmp    rsi,rdi
  41cc1f:	setb   bl
  41cc22:	cmp    rdx,r15
  41cc25:	setb   dl
  41cc28:	xor    r9d,r9d
  41cc2b:	test   r11b,r10b
  41cc2e:	jne    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cc34:	and    al,bpl
  41cc37:	jne    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cc3d:	and    cl,BYTE PTR [rsp+0x7]
  41cc41:	jne    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cc47:	and    bl,dl
  41cc49:	jne    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cc4f:	mov    eax,r14d
  41cc52:	and    eax,0x7
  41cc55:	test   rax,rax
  41cc58:	mov    ecx,0x8
  41cc5d:	cmovne rcx,rax
  41cc61:	mov    r9,r14
  41cc64:	sub    r9,rcx
  41cc67:	vmovdqa ymm0,YMMWORD PTR [rip+0x62b1]        # 422f20 <flatcc_builder_padding_base@@Base+0x200>
  41cc6f:	vmovdqa ymm1,YMMWORD PTR [rip+0x62c9]        # 422f40 <flatcc_builder_padding_base@@Base+0x220>
  41cc77:	xor    eax,eax
  41cc79:	vmovdqa xmm8,XMMWORD PTR [rip+0x62df]        # 422f60 <flatcc_builder_padding_base@@Base+0x240>
  41cc81:	vmovdqa xmm9,XMMWORD PTR [rip+0x62e7]        # 422f70 <flatcc_builder_padding_base@@Base+0x250>
  41cc89:	vpbroadcastq ymm4,QWORD PTR [rip+0x62ee]        # 422f80 <flatcc_builder_padding_base@@Base+0x260>
  41cc92:	vpbroadcastq ymm5,QWORD PTR [rip+0x62ed]        # 422f88 <flatcc_builder_padding_base@@Base+0x268>
  41cc9b:	mov    rdi,r8
  41cc9e:	xchg   ax,ax
  41cca0:	vmovdqu xmm6,XMMWORD PTR [rdi]
  41cca4:	vmovdqu xmm7,XMMWORD PTR [rdi+0x10]
  41cca9:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  41ccae:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  41ccb3:	vpshufb xmm3,xmm3,xmm8
  41ccb8:	vpshufb xmm2,xmm2,xmm8
  41ccbd:	vpunpcklwd xmm2,xmm2,xmm3
  41ccc1:	vpshufb xmm3,xmm7,xmm9
  41ccc6:	vpshufb xmm6,xmm6,xmm9
  41cccb:	vpunpcklwd xmm3,xmm6,xmm3
  41cccf:	vpblendd xmm2,xmm3,xmm2,0x2
  41ccd5:	vmovq  QWORD PTR [r15+rax*1],xmm2
  41ccdb:	vpsllq ymm2,ymm0,0x3
  41cce0:	vmovq  xmm3,r8
  41cce5:	vpbroadcastq ymm3,xmm3
  41ccea:	vpaddq ymm2,ymm3,ymm2
  41ccee:	vpaddq ymm2,ymm2,ymm4
  41ccf2:	vpsllq ymm6,ymm1,0x3
  41ccf7:	vpaddq ymm3,ymm3,ymm6
  41ccfb:	vpaddq ymm3,ymm3,ymm4
  41ccff:	vpcmpeqd xmm6,xmm6,xmm6
  41cd03:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  41cd0d:	vpcmpeqd xmm3,xmm3,xmm3
  41cd11:	vpgatherqd xmm6,DWORD PTR [ymm2*1+0x0],xmm3
  41cd1b:	vmovdqu XMMWORD PTR [rsi+rax*4+0x10],xmm6
  41cd21:	vmovdqu XMMWORD PTR [rsi+rax*4],xmm7
  41cd26:	add    rax,0x8
  41cd2a:	vpaddq ymm1,ymm1,ymm5
  41cd2e:	vpaddq ymm0,ymm0,ymm5
  41cd32:	add    rdi,0x40
  41cd36:	cmp    r9,rax
  41cd39:	jne    41cca0 <flatcc_builder_end_union_vector@@Base+0x360>
  41cd3f:	jmp    41c9f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  41cd44:	lea    rdi,[rip+0x6e93]        # 423bde <flatcc_builder_padding_base@@Base+0xebe>
  41cd4b:	lea    rsi,[rip+0x6250]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41cd52:	lea    rcx,[rip+0x6eb7]        # 423c10 <flatcc_builder_padding_base@@Base+0xef0>
  41cd59:	mov    edx,0x651
  41cd5e:	call   404090 <__assert_fail@plt>
  41cd63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd6d:	nop    DWORD PTR [rax]

000000000041cd70 <flatcc_builder_union_vector_count@@Base>:
  41cd70:	mov    rax,QWORD PTR [rdi+0x30]
  41cd74:	mov    eax,DWORD PTR [rax+0x14]
  41cd77:	ret    
  41cd78:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cd80 <flatcc_builder_union_vector_edit@@Base>:
  41cd80:	mov    rax,QWORD PTR [rdi+0x18]
  41cd84:	ret    
  41cd85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd8f:	nop

000000000041cd90 <flatcc_builder_extend_union_vector@@Base>:
  41cd90:	push   r14
  41cd92:	push   rbx
  41cd93:	push   rax
  41cd94:	mov    rax,QWORD PTR [rdi+0x30]
  41cd98:	mov    ecx,DWORD PTR [rax+0x14]
  41cd9b:	add    ecx,esi
  41cd9d:	jb     41ce24 <flatcc_builder_extend_union_vector@@Base+0x94>
  41cda3:	cmp    ecx,0x20000000
  41cda9:	jae    41ce24 <flatcc_builder_extend_union_vector@@Base+0x94>
  41cdab:	mov    rbx,rdi
  41cdae:	mov    DWORD PTR [rax+0x14],ecx
  41cdb1:	mov    r14d,DWORD PTR [rdi+0x20]
  41cdb5:	lea    eax,[r14+rsi*8]
  41cdb9:	mov    DWORD PTR [rdi+0x20],eax
  41cdbc:	cmp    eax,DWORD PTR [rdi+0x24]
  41cdbf:	jae    41cdc7 <flatcc_builder_extend_union_vector@@Base+0x37>
  41cdc1:	mov    rax,QWORD PTR [rbx+0x18]
  41cdc5:	jmp    41ce19 <flatcc_builder_extend_union_vector@@Base+0x89>
  41cdc7:	inc    eax
  41cdc9:	lea    rsi,[rbx+0x68]
  41cdcd:	mov    rdi,QWORD PTR [rbx+0x40]
  41cdd1:	mov    edx,DWORD PTR [rbx+0x28]
  41cdd4:	add    rdx,rax
  41cdd7:	mov    ecx,0x1
  41cddc:	mov    r8d,0x1
  41cde2:	call   QWORD PTR [rbx+0x50]
  41cde5:	test   eax,eax
  41cde7:	je     41cded <flatcc_builder_extend_union_vector@@Base+0x5d>
  41cde9:	xor    eax,eax
  41cdeb:	jmp    41ce1c <flatcc_builder_extend_union_vector@@Base+0x8c>
  41cded:	mov    ecx,DWORD PTR [rbx+0x28]
  41cdf0:	mov    rax,rcx
  41cdf3:	add    rax,QWORD PTR [rbx+0x68]
  41cdf7:	mov    QWORD PTR [rbx+0x18],rax
  41cdfb:	mov    edx,DWORD PTR [rbx+0x70]
  41cdfe:	sub    edx,ecx
  41ce00:	cmp    edx,0xfffffffc
  41ce03:	mov    ecx,0xfffffffc
  41ce08:	cmovb  ecx,edx
  41ce0b:	mov    DWORD PTR [rbx+0x24],ecx
  41ce0e:	mov    rcx,QWORD PTR [rbx+0x30]
  41ce12:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ce19:	add    rax,r14
  41ce1c:	add    rsp,0x8
  41ce20:	pop    rbx
  41ce21:	pop    r14
  41ce23:	ret    
  41ce24:	lea    rdi,[rip+0x7240]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41ce2b:	lea    rsi,[rip+0x6170]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41ce32:	lea    rcx,[rip+0x724d]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41ce39:	mov    edx,0x37c
  41ce3e:	call   404090 <__assert_fail@plt>
  41ce43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce4d:	nop    DWORD PTR [rax]

000000000041ce50 <flatcc_builder_truncate_union_vector@@Base>:
  41ce50:	push   rax
  41ce51:	mov    rax,QWORD PTR [rdi+0x30]
  41ce55:	cmp    WORD PTR [rax+0xe],0x7
  41ce5a:	jne    41ce8b <flatcc_builder_truncate_union_vector@@Base+0x3b>
  41ce5c:	mov    rdx,rsi
  41ce5f:	mov    ecx,DWORD PTR [rax+0x14]
  41ce62:	sub    ecx,edx
  41ce64:	jb     41ceaa <flatcc_builder_truncate_union_vector@@Base+0x5a>
  41ce66:	mov    DWORD PTR [rax+0x14],ecx
  41ce69:	mov    rax,QWORD PTR [rdi+0x30]
  41ce6d:	imul   edx,DWORD PTR [rax+0x10]
  41ce71:	mov    eax,DWORD PTR [rdi+0x20]
  41ce74:	sub    eax,edx
  41ce76:	mov    DWORD PTR [rdi+0x20],eax
  41ce79:	add    rax,QWORD PTR [rdi+0x18]
  41ce7d:	mov    rdi,rax
  41ce80:	xor    esi,esi
  41ce82:	call   4040a0 <memset@plt>
  41ce87:	xor    eax,eax
  41ce89:	pop    rcx
  41ce8a:	ret    
  41ce8b:	lea    rdi,[rip+0x6d4c]        # 423bde <flatcc_builder_padding_base@@Base+0xebe>
  41ce92:	lea    rsi,[rip+0x6109]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41ce99:	lea    rcx,[rip+0x6dc3]        # 423c63 <flatcc_builder_padding_base@@Base+0xf43>
  41cea0:	mov    edx,0x681
  41cea5:	call   404090 <__assert_fail@plt>
  41ceaa:	lea    rdi,[rip+0x6791]        # 423642 <flatcc_builder_padding_base@@Base+0x922>
  41ceb1:	lea    rsi,[rip+0x60ea]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41ceb8:	lea    rcx,[rip+0x6da4]        # 423c63 <flatcc_builder_padding_base@@Base+0xf43>
  41cebf:	mov    edx,0x682
  41cec4:	call   404090 <__assert_fail@plt>
  41cec9:	nop    DWORD PTR [rax+0x0]

000000000041ced0 <flatcc_builder_union_vector_push@@Base>:
  41ced0:	push   r15
  41ced2:	push   r14
  41ced4:	push   rbx
  41ced5:	mov    rax,QWORD PTR [rdi+0x30]
  41ced9:	cmp    WORD PTR [rax+0xe],0x7
  41cede:	jne    41cf77 <flatcc_builder_union_vector_push@@Base+0xa7>
  41cee4:	mov    ecx,DWORD PTR [rax+0x14]
  41cee7:	cmp    ecx,0x1fffffff
  41ceed:	je     41cf39 <flatcc_builder_union_vector_push@@Base+0x69>
  41ceef:	mov    r14,rsi
  41cef2:	mov    rbx,rdi
  41cef5:	inc    ecx
  41cef7:	mov    DWORD PTR [rax+0x14],ecx
  41cefa:	mov    r15d,DWORD PTR [rdi+0x20]
  41cefe:	lea    eax,[r15+0x8]
  41cf02:	mov    DWORD PTR [rdi+0x20],eax
  41cf05:	cmp    eax,DWORD PTR [rdi+0x24]
  41cf08:	jae    41cf15 <flatcc_builder_union_vector_push@@Base+0x45>
  41cf0a:	mov    rax,QWORD PTR [rbx+0x18]
  41cf0e:	add    rax,r15
  41cf11:	jne    41cf6e <flatcc_builder_union_vector_push@@Base+0x9e>
  41cf13:	jmp    41cf39 <flatcc_builder_union_vector_push@@Base+0x69>
  41cf15:	lea    eax,[r15+0x9]
  41cf19:	lea    rsi,[rbx+0x68]
  41cf1d:	mov    rdi,QWORD PTR [rbx+0x40]
  41cf21:	mov    edx,DWORD PTR [rbx+0x28]
  41cf24:	add    rdx,rax
  41cf27:	mov    ecx,0x1
  41cf2c:	mov    r8d,0x1
  41cf32:	call   QWORD PTR [rbx+0x50]
  41cf35:	test   eax,eax
  41cf37:	je     41cf3d <flatcc_builder_union_vector_push@@Base+0x6d>
  41cf39:	xor    eax,eax
  41cf3b:	jmp    41cf71 <flatcc_builder_union_vector_push@@Base+0xa1>
  41cf3d:	mov    ecx,DWORD PTR [rbx+0x28]
  41cf40:	mov    rax,rcx
  41cf43:	add    rax,QWORD PTR [rbx+0x68]
  41cf47:	mov    QWORD PTR [rbx+0x18],rax
  41cf4b:	mov    edx,DWORD PTR [rbx+0x70]
  41cf4e:	sub    edx,ecx
  41cf50:	cmp    edx,0xfffffffc
  41cf53:	mov    ecx,0xfffffffc
  41cf58:	cmovb  ecx,edx
  41cf5b:	mov    DWORD PTR [rbx+0x24],ecx
  41cf5e:	mov    rcx,QWORD PTR [rbx+0x30]
  41cf62:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41cf69:	add    rax,r15
  41cf6c:	je     41cf39 <flatcc_builder_union_vector_push@@Base+0x69>
  41cf6e:	mov    QWORD PTR [rax],r14
  41cf71:	pop    rbx
  41cf72:	pop    r14
  41cf74:	pop    r15
  41cf76:	ret    
  41cf77:	lea    rdi,[rip+0x6c60]        # 423bde <flatcc_builder_padding_base@@Base+0xebe>
  41cf7e:	lea    rsi,[rip+0x601d]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41cf85:	lea    rcx,[rip+0x6d1c]        # 423ca8 <flatcc_builder_padding_base@@Base+0xf88>
  41cf8c:	mov    edx,0x68d
  41cf91:	call   404090 <__assert_fail@plt>
  41cf96:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041cfa0 <flatcc_builder_append_union_vector@@Base>:
  41cfa0:	push   r15
  41cfa2:	push   r14
  41cfa4:	push   r13
  41cfa6:	push   r12
  41cfa8:	push   rbx
  41cfa9:	mov    rax,QWORD PTR [rdi+0x30]
  41cfad:	cmp    WORD PTR [rax+0xe],0x7
  41cfb2:	jne    41d08e <flatcc_builder_append_union_vector@@Base+0xee>
  41cfb8:	mov    r15,rdx
  41cfbb:	mov    ecx,DWORD PTR [rax+0x14]
  41cfbe:	add    ecx,r15d
  41cfc1:	jb     41d06f <flatcc_builder_append_union_vector@@Base+0xcf>
  41cfc7:	cmp    ecx,0x20000000
  41cfcd:	jae    41d06f <flatcc_builder_append_union_vector@@Base+0xcf>
  41cfd3:	mov    r14,rsi
  41cfd6:	mov    rbx,rdi
  41cfd9:	mov    DWORD PTR [rax+0x14],ecx
  41cfdc:	mov    r13d,DWORD PTR [rdi+0x20]
  41cfe0:	lea    eax,[r13+r15*8+0x0]
  41cfe5:	mov    DWORD PTR [rdi+0x20],eax
  41cfe8:	cmp    eax,DWORD PTR [rdi+0x24]
  41cfeb:	jae    41cff8 <flatcc_builder_append_union_vector@@Base+0x58>
  41cfed:	mov    r12,QWORD PTR [rbx+0x18]
  41cff1:	add    r12,r13
  41cff4:	jne    41d050 <flatcc_builder_append_union_vector@@Base+0xb0>
  41cff6:	jmp    41d01a <flatcc_builder_append_union_vector@@Base+0x7a>
  41cff8:	inc    eax
  41cffa:	lea    rsi,[rbx+0x68]
  41cffe:	mov    rdi,QWORD PTR [rbx+0x40]
  41d002:	mov    edx,DWORD PTR [rbx+0x28]
  41d005:	add    rdx,rax
  41d008:	mov    ecx,0x1
  41d00d:	mov    r8d,0x1
  41d013:	call   QWORD PTR [rbx+0x50]
  41d016:	test   eax,eax
  41d018:	je     41d01f <flatcc_builder_append_union_vector@@Base+0x7f>
  41d01a:	xor    r12d,r12d
  41d01d:	jmp    41d062 <flatcc_builder_append_union_vector@@Base+0xc2>
  41d01f:	mov    eax,DWORD PTR [rbx+0x28]
  41d022:	mov    r12,rax
  41d025:	add    r12,QWORD PTR [rbx+0x68]
  41d029:	mov    QWORD PTR [rbx+0x18],r12
  41d02d:	mov    ecx,DWORD PTR [rbx+0x70]
  41d030:	sub    ecx,eax
  41d032:	cmp    ecx,0xfffffffc
  41d035:	mov    eax,0xfffffffc
  41d03a:	cmovb  eax,ecx
  41d03d:	mov    DWORD PTR [rbx+0x24],eax
  41d040:	mov    rax,QWORD PTR [rbx+0x30]
  41d044:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d04b:	add    r12,r13
  41d04e:	je     41d01a <flatcc_builder_append_union_vector@@Base+0x7a>
  41d050:	shl    r15d,0x3
  41d054:	mov    edx,r15d
  41d057:	mov    rdi,r12
  41d05a:	mov    rsi,r14
  41d05d:	call   4040f0 <memcpy@plt>
  41d062:	mov    rax,r12
  41d065:	pop    rbx
  41d066:	pop    r12
  41d068:	pop    r13
  41d06a:	pop    r14
  41d06c:	pop    r15
  41d06e:	ret    
  41d06f:	lea    rdi,[rip+0x6ff5]        # 42406b <flatcc_builder_padding_base@@Base+0x134b>
  41d076:	lea    rsi,[rip+0x5f25]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d07d:	lea    rcx,[rip+0x7002]        # 424086 <flatcc_builder_padding_base@@Base+0x1366>
  41d084:	mov    edx,0x37c
  41d089:	call   404090 <__assert_fail@plt>
  41d08e:	lea    rdi,[rip+0x6b49]        # 423bde <flatcc_builder_padding_base@@Base+0xebe>
  41d095:	lea    rsi,[rip+0x5f06]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d09c:	lea    rcx,[rip+0x6c72]        # 423d15 <flatcc_builder_padding_base@@Base+0xff5>
  41d0a3:	mov    edx,0x69c
  41d0a8:	call   404090 <__assert_fail@plt>
  41d0ad:	nop    DWORD PTR [rax]

000000000041d0b0 <flatcc_builder_create_string@@Base>:
  41d0b0:	push   rbp
  41d0b1:	push   rbx
  41d0b2:	sub    rsp,0x98
  41d0b9:	xor    ebp,ebp
  41d0bb:	mov    rax,rdx
  41d0be:	shr    rax,0x20
  41d0c2:	jne    41d196 <flatcc_builder_create_string@@Base+0xe6>
  41d0c8:	mov    rbx,rdi
  41d0cb:	mov    DWORD PTR [rsp+0x4],edx
  41d0cf:	mov    ebp,DWORD PTR [rdi+0xf0]
  41d0d5:	mov    eax,edx
  41d0d7:	not    eax
  41d0d9:	add    eax,ebp
  41d0db:	and    eax,0x3
  41d0de:	inc    eax
  41d0e0:	mov    QWORD PTR [rsp+0x8],0x4
  41d0e9:	lea    rcx,[rsp+0x4]
  41d0ee:	mov    QWORD PTR [rsp+0x18],rcx
  41d0f3:	mov    QWORD PTR [rsp+0x20],0x4
  41d0fc:	mov    DWORD PTR [rsp+0x10],0x1
  41d104:	test   rdx,rdx
  41d107:	je     41d12b <flatcc_builder_create_string@@Base+0x7b>
  41d109:	lea    rcx,[rdx+0x4]
  41d10d:	mov    QWORD PTR [rsp+0x8],rcx
  41d112:	mov    QWORD PTR [rsp+0x28],rsi
  41d117:	mov    QWORD PTR [rsp+0x30],rdx
  41d11c:	mov    DWORD PTR [rsp+0x10],0x2
  41d124:	mov    edx,0x2
  41d129:	jmp    41d135 <flatcc_builder_create_string@@Base+0x85>
  41d12b:	mov    ecx,0x4
  41d130:	mov    edx,0x1
  41d135:	mov    esi,eax
  41d137:	lea    r8,[rcx+rsi*1]
  41d13b:	mov    QWORD PTR [rsp+0x8],r8
  41d140:	mov    eax,edx
  41d142:	shl    rax,0x4
  41d146:	lea    rdi,[rip+0x5bd3]        # 422d20 <flatcc_builder_padding_base@@Base>
  41d14d:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  41d152:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  41d157:	inc    edx
  41d159:	mov    DWORD PTR [rsp+0x10],edx
  41d15d:	cmp    r8,0x11
  41d161:	setb   al
  41d164:	add    rcx,rsi
  41d167:	add    rcx,0xfffffffffffffff0
  41d16b:	shr    rcx,0x20
  41d16f:	sete   cl
  41d172:	test   r8d,r8d
  41d175:	jle    41d1a2 <flatcc_builder_create_string@@Base+0xf2>
  41d177:	or     al,cl
  41d179:	je     41d1a2 <flatcc_builder_create_string@@Base+0xf2>
  41d17b:	sub    ebp,r8d
  41d17e:	mov    rdi,QWORD PTR [rbx+0x38]
  41d182:	lea    rsi,[rsp+0x18]
  41d187:	mov    ecx,ebp
  41d189:	call   QWORD PTR [rbx+0x48]
  41d18c:	test   eax,eax
  41d18e:	jne    41d1c1 <flatcc_builder_create_string@@Base+0x111>
  41d190:	mov    DWORD PTR [rbx+0xf0],ebp
  41d196:	mov    eax,ebp
  41d198:	add    rsp,0x98
  41d19f:	pop    rbx
  41d1a0:	pop    rbp
  41d1a1:	ret    
  41d1a2:	lea    rdi,[rip+0x6fb9]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41d1a9:	lea    rsi,[rip+0x5df2]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d1b0:	lea    rcx,[rip+0x6e6a]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41d1b7:	mov    edx,0x287
  41d1bc:	call   404090 <__assert_fail@plt>
  41d1c1:	lea    rdi,[rip+0x6f9a]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41d1c8:	lea    rsi,[rip+0x5dd3]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d1cf:	lea    rcx,[rip+0x6e4b]        # 424021 <flatcc_builder_padding_base@@Base+0x1301>
  41d1d6:	mov    edx,0x28b
  41d1db:	call   404090 <__assert_fail@plt>

000000000041d1e0 <flatcc_builder_create_string_str@@Base>:
  41d1e0:	push   r14
  41d1e2:	push   rbx
  41d1e3:	push   rax
  41d1e4:	mov    rbx,rsi
  41d1e7:	mov    r14,rdi
  41d1ea:	mov    rdi,rsi
  41d1ed:	call   404070 <strlen@plt>
  41d1f2:	mov    rdi,r14
  41d1f5:	mov    rsi,rbx
  41d1f8:	mov    rdx,rax
  41d1fb:	add    rsp,0x8
  41d1ff:	pop    rbx
  41d200:	pop    r14
  41d202:	jmp    41d0b0 <flatcc_builder_create_string@@Base>
  41d207:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d210 <flatcc_builder_create_string_strn@@Base>:
  41d210:	push   r15
  41d212:	push   r14
  41d214:	push   rbx
  41d215:	mov    rbx,rdx
  41d218:	mov    r14,rsi
  41d21b:	mov    r15,rdi
  41d21e:	mov    rdi,rsi
  41d221:	xor    esi,esi
  41d223:	call   4040c0 <memchr@plt>
  41d228:	mov    rcx,rax
  41d22b:	sub    rcx,r14
  41d22e:	test   rax,rax
  41d231:	cmovne rbx,rcx
  41d235:	mov    rdi,r15
  41d238:	mov    rsi,r14
  41d23b:	mov    rdx,rbx
  41d23e:	pop    rbx
  41d23f:	pop    r14
  41d241:	pop    r15
  41d243:	jmp    41d0b0 <flatcc_builder_create_string@@Base>
  41d248:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d250 <flatcc_builder_end_string@@Base>:
  41d250:	push   rbp
  41d251:	push   rbx
  41d252:	push   rax
  41d253:	mov    rax,QWORD PTR [rdi+0x30]
  41d257:	cmp    WORD PTR [rax+0xe],0x6
  41d25c:	jne    41d2f4 <flatcc_builder_end_string@@Base+0xa4>
  41d262:	mov    rbx,rdi
  41d265:	mov    edx,DWORD PTR [rax+0x14]
  41d268:	cmp    edx,DWORD PTR [rdi+0x20]
  41d26b:	jne    41d313 <flatcc_builder_end_string@@Base+0xc3>
  41d271:	mov    rsi,QWORD PTR [rbx+0x18]
  41d275:	mov    rdi,rbx
  41d278:	call   41d0b0 <flatcc_builder_create_string@@Base>
  41d27d:	mov    ebp,eax
  41d27f:	test   eax,eax
  41d281:	je     41d2eb <flatcc_builder_end_string@@Base+0x9b>
  41d283:	mov    rdi,QWORD PTR [rbx+0x18]
  41d287:	mov    edx,DWORD PTR [rbx+0x20]
  41d28a:	xor    esi,esi
  41d28c:	call   4040a0 <memset@plt>
  41d291:	mov    rax,QWORD PTR [rbx+0x30]
  41d295:	mov    ecx,DWORD PTR [rax+0x8]
  41d298:	mov    DWORD PTR [rbx+0x20],ecx
  41d29b:	mov    ecx,DWORD PTR [rax]
  41d29d:	mov    DWORD PTR [rbx+0x28],ecx
  41d2a0:	mov    edx,DWORD PTR [rax+0x4]
  41d2a3:	mov    rsi,rcx
  41d2a6:	add    rsi,QWORD PTR [rbx+0x68]
  41d2aa:	mov    QWORD PTR [rbx+0x18],rsi
  41d2ae:	mov    esi,DWORD PTR [rbx+0x70]
  41d2b1:	sub    esi,ecx
  41d2b3:	cmp    esi,edx
  41d2b5:	cmova  esi,edx
  41d2b8:	mov    DWORD PTR [rbx+0x24],esi
  41d2bb:	movzx  ecx,WORD PTR [rbx+0xea]
  41d2c2:	cmp    WORD PTR [rbx+0xe8],cx
  41d2c9:	jae    41d2d2 <flatcc_builder_end_string@@Base+0x82>
  41d2cb:	mov    WORD PTR [rbx+0xe8],cx
  41d2d2:	movzx  ecx,WORD PTR [rax+0xc]
  41d2d6:	mov    WORD PTR [rbx+0xea],cx
  41d2dd:	add    rax,0xffffffffffffffdc
  41d2e1:	mov    QWORD PTR [rbx+0x30],rax
  41d2e5:	dec    DWORD PTR [rbx+0x104]
  41d2eb:	mov    eax,ebp
  41d2ed:	add    rsp,0x8
  41d2f1:	pop    rbx
  41d2f2:	pop    rbp
  41d2f3:	ret    
  41d2f4:	lea    rdi,[rip+0x61e6]        # 4234e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41d2fb:	lea    rsi,[rip+0x5ca0]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d302:	lea    rcx,[rip+0x6a8b]        # 423d94 <flatcc_builder_padding_base@@Base+0x1074>
  41d309:	mov    edx,0x6c4
  41d30e:	call   404090 <__assert_fail@plt>
  41d313:	lea    rdi,[rip+0x6abd]        # 423dd7 <flatcc_builder_padding_base@@Base+0x10b7>
  41d31a:	lea    rsi,[rip+0x5c81]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d321:	lea    rcx,[rip+0x6a6c]        # 423d94 <flatcc_builder_padding_base@@Base+0x1074>
  41d328:	mov    edx,0x6c5
  41d32d:	call   404090 <__assert_fail@plt>
  41d332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d33c:	nop    DWORD PTR [rax+0x0]

000000000041d340 <flatcc_builder_string_edit@@Base>:
  41d340:	mov    rax,QWORD PTR [rdi+0x18]
  41d344:	ret    
  41d345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d34f:	nop

000000000041d350 <flatcc_builder_string_len@@Base>:
  41d350:	mov    rax,QWORD PTR [rdi+0x30]
  41d354:	mov    eax,DWORD PTR [rax+0x14]
  41d357:	ret    
  41d358:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d360 <flatcc_builder_table_edit@@Base>:
  41d360:	push   rax
  41d361:	mov    rax,QWORD PTR [rdi+0x30]
  41d365:	cmp    WORD PTR [rax+0xe],0x3
  41d36a:	jne    41d378 <flatcc_builder_table_edit@@Base+0x18>
  41d36c:	mov    eax,DWORD PTR [rdi+0x20]
  41d36f:	add    rax,QWORD PTR [rdi+0x18]
  41d373:	sub    rax,rsi
  41d376:	pop    rcx
  41d377:	ret    
  41d378:	lea    rdi,[rip+0x6452]        # 4237d1 <flatcc_builder_padding_base@@Base+0xab1>
  41d37f:	lea    rsi,[rip+0x5c1c]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d386:	lea    rcx,[rip+0x6afc]        # 423e89 <flatcc_builder_padding_base@@Base+0x1169>
  41d38d:	mov    edx,0x702
  41d392:	call   404090 <__assert_fail@plt>
  41d397:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d3a0 <flatcc_builder_table_add_copy@@Base>:
  41d3a0:	push   r15
  41d3a2:	push   r14
  41d3a4:	push   rbx
  41d3a5:	mov    r15,rcx
  41d3a8:	mov    r14,rdx
  41d3ab:	mov    rdx,rcx
  41d3ae:	mov    ecx,r8d
  41d3b1:	call   41c310 <flatcc_builder_table_add@@Base>
  41d3b6:	mov    rbx,rax
  41d3b9:	test   rax,rax
  41d3bc:	je     41d3cc <flatcc_builder_table_add_copy@@Base+0x2c>
  41d3be:	mov    rdi,rbx
  41d3c1:	mov    rsi,r14
  41d3c4:	mov    rdx,r15
  41d3c7:	call   4040f0 <memcpy@plt>
  41d3cc:	mov    rax,rbx
  41d3cf:	pop    rbx
  41d3d0:	pop    r14
  41d3d2:	pop    r15
  41d3d4:	ret    
  41d3d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3df:	nop

000000000041d3e0 <flatcc_builder_push_buffer_alignment@@Base>:
  41d3e0:	movzx  eax,WORD PTR [rdi+0xe8]
  41d3e7:	mov    WORD PTR [rdi+0xe8],0x4
  41d3f0:	ret    
  41d3f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d400 <flatcc_builder_pop_buffer_alignment@@Base>:
  41d400:	cmp    WORD PTR [rdi+0xe8],si
  41d407:	jae    41d410 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  41d409:	mov    WORD PTR [rdi+0xe8],si
  41d410:	ret    
  41d411:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d41b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d420 <flatcc_builder_get_buffer_alignment@@Base>:
  41d420:	movzx  eax,WORD PTR [rdi+0xe8]
  41d427:	ret    
  41d428:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d430 <flatcc_builder_set_vtable_clustering@@Base>:
  41d430:	xor    eax,eax
  41d432:	test   esi,esi
  41d434:	sete   al
  41d437:	mov    DWORD PTR [rdi+0x124],eax
  41d43d:	ret    
  41d43e:	xchg   ax,ax

000000000041d440 <flatcc_builder_set_block_align@@Base>:
  41d440:	mov    WORD PTR [rdi+0xec],si
  41d447:	ret    
  41d448:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d450 <flatcc_builder_get_level@@Base>:
  41d450:	mov    eax,DWORD PTR [rdi+0x104]
  41d456:	ret    
  41d457:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d460 <flatcc_builder_set_max_level@@Base>:
  41d460:	mov    DWORD PTR [rdi+0x120],esi
  41d466:	cmp    DWORD PTR [rdi+0x108],esi
  41d46c:	jge    41d474 <flatcc_builder_set_max_level@@Base+0x14>
  41d46e:	mov    DWORD PTR [rdi+0x108],esi
  41d474:	ret    
  41d475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d47f:	nop

000000000041d480 <flatcc_builder_get_buffer_size@@Base>:
  41d480:	movsxd rax,DWORD PTR [rdi+0xf4]
  41d487:	movsxd rcx,DWORD PTR [rdi+0xf0]
  41d48e:	sub    rax,rcx
  41d491:	ret    
  41d492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d49c:	nop    DWORD PTR [rax+0x0]

000000000041d4a0 <flatcc_builder_get_buffer_start@@Base>:
  41d4a0:	mov    eax,DWORD PTR [rdi+0xf0]
  41d4a6:	ret    
  41d4a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d4b0 <flatcc_builder_get_buffer_end@@Base>:
  41d4b0:	mov    eax,DWORD PTR [rdi+0xf4]
  41d4b6:	ret    
  41d4b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d4c0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41d4c0:	mov    QWORD PTR [rdi+0x118],rsi
  41d4c7:	ret    
  41d4c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d4d0 <flatcc_builder_set_identifier@@Base>:
  41d4d0:	test   rsi,rsi
  41d4d3:	jne    41d4dc <flatcc_builder_set_identifier@@Base+0xc>
  41d4d5:	lea    rsi,[rip+0x5844]        # 422d20 <flatcc_builder_padding_base@@Base>
  41d4dc:	mov    eax,DWORD PTR [rsi]
  41d4de:	mov    DWORD PTR [rdi+0x110],eax
  41d4e4:	ret    
  41d4e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4ef:	nop

000000000041d4f0 <flatcc_builder_get_type@@Base>:
  41d4f0:	mov    rax,QWORD PTR [rdi+0x30]
  41d4f4:	test   rax,rax
  41d4f7:	je     41d4fe <flatcc_builder_get_type@@Base+0xe>
  41d4f9:	movzx  eax,WORD PTR [rax+0xe]
  41d4fd:	ret    
  41d4fe:	xor    eax,eax
  41d500:	ret    
  41d501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d50b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d510 <flatcc_builder_get_type_at@@Base>:
  41d510:	xor    eax,eax
  41d512:	test   esi,esi
  41d514:	jle    41d532 <flatcc_builder_get_type_at@@Base+0x22>
  41d516:	mov    ecx,DWORD PTR [rdi+0x104]
  41d51c:	cmp    ecx,esi
  41d51e:	jl     41d532 <flatcc_builder_get_type_at@@Base+0x22>
  41d520:	mov    rax,QWORD PTR [rdi+0x30]
  41d524:	sub    esi,ecx
  41d526:	movsxd rcx,esi
  41d529:	lea    rcx,[rcx+rcx*8]
  41d52d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  41d532:	ret    
  41d533:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d53d:	nop    DWORD PTR [rax]

000000000041d540 <flatcc_builder_get_direct_buffer@@Base>:
  41d540:	cmp    DWORD PTR [rdi+0x128],0x0
  41d547:	je     41d559 <flatcc_builder_get_direct_buffer@@Base+0x19>
  41d549:	mov    rax,QWORD PTR [rdi+0x130]
  41d550:	cmp    rax,QWORD PTR [rdi+0x138]
  41d557:	je     41d568 <flatcc_builder_get_direct_buffer@@Base+0x28>
  41d559:	test   rsi,rsi
  41d55c:	je     41d565 <flatcc_builder_get_direct_buffer@@Base+0x25>
  41d55e:	mov    QWORD PTR [rsi],0x0
  41d565:	xor    eax,eax
  41d567:	ret    
  41d568:	test   rsi,rsi
  41d56b:	je     41d577 <flatcc_builder_get_direct_buffer@@Base+0x37>
  41d56d:	mov    rax,QWORD PTR [rdi+0x160]
  41d574:	mov    QWORD PTR [rsi],rax
  41d577:	mov    rax,QWORD PTR [rdi+0x140]
  41d57e:	ret    
  41d57f:	nop

000000000041d580 <flatcc_builder_copy_buffer@@Base>:
  41d580:	push   rax
  41d581:	cmp    DWORD PTR [rdi+0x128],0x0
  41d588:	je     41d59d <flatcc_builder_copy_buffer@@Base+0x1d>
  41d58a:	add    rdi,0x130
  41d591:	call   41de00 <flatcc_emitter_copy_buffer@@Base>
  41d596:	test   rax,rax
  41d599:	je     41d5a1 <flatcc_builder_copy_buffer@@Base+0x21>
  41d59b:	pop    rcx
  41d59c:	ret    
  41d59d:	xor    eax,eax
  41d59f:	pop    rcx
  41d5a0:	ret    
  41d5a1:	lea    rdi,[rip+0x5c68]        # 423210 <flatcc_builder_padding_base@@Base+0x4f0>
  41d5a8:	lea    rsi,[rip+0x59f3]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d5af:	lea    rcx,[rip+0x695e]        # 423f14 <flatcc_builder_padding_base@@Base+0x11f4>
  41d5b6:	mov    edx,0x786
  41d5bb:	call   404090 <__assert_fail@plt>

000000000041d5c0 <flatcc_builder_finalize_buffer@@Base>:
  41d5c0:	push   r15
  41d5c2:	push   r14
  41d5c4:	push   rbx
  41d5c5:	mov    rbx,rdi
  41d5c8:	movsxd r14,DWORD PTR [rdi+0xf4]
  41d5cf:	movsxd rax,DWORD PTR [rdi+0xf0]
  41d5d6:	sub    r14,rax
  41d5d9:	test   rsi,rsi
  41d5dc:	je     41d5e1 <flatcc_builder_finalize_buffer@@Base+0x21>
  41d5de:	mov    QWORD PTR [rsi],r14
  41d5e1:	mov    rdi,r14
  41d5e4:	call   404100 <malloc@plt>
  41d5e9:	test   rax,rax
  41d5ec:	je     41d61d <flatcc_builder_finalize_buffer@@Base+0x5d>
  41d5ee:	cmp    DWORD PTR [rbx+0x128],0x0
  41d5f5:	je     41d63c <flatcc_builder_finalize_buffer@@Base+0x7c>
  41d5f7:	mov    r15,rax
  41d5fa:	add    rbx,0x130
  41d601:	mov    rdi,rbx
  41d604:	mov    rsi,rax
  41d607:	mov    rdx,r14
  41d60a:	call   41de00 <flatcc_emitter_copy_buffer@@Base>
  41d60f:	test   rax,rax
  41d612:	je     41d65b <flatcc_builder_finalize_buffer@@Base+0x9b>
  41d614:	mov    rax,r15
  41d617:	pop    rbx
  41d618:	pop    r14
  41d61a:	pop    r15
  41d61c:	ret    
  41d61d:	lea    rdi,[rip+0x6b3e]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41d624:	lea    rsi,[rip+0x5977]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d62b:	lea    rcx,[rip+0x6927]        # 423f59 <flatcc_builder_padding_base@@Base+0x1239>
  41d632:	mov    edx,0x798
  41d637:	call   404090 <__assert_fail@plt>
  41d63c:	lea    rdi,[rip+0x6b1f]        # 424162 <flatcc_builder_padding_base@@Base+0x1442>
  41d643:	lea    rsi,[rip+0x5958]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d64a:	lea    rcx,[rip+0x6908]        # 423f59 <flatcc_builder_padding_base@@Base+0x1239>
  41d651:	mov    edx,0x79c
  41d656:	call   404090 <__assert_fail@plt>
  41d65b:	lea    rdi,[rip+0x5bae]        # 423210 <flatcc_builder_padding_base@@Base+0x4f0>
  41d662:	lea    rsi,[rip+0x5939]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d669:	lea    rcx,[rip+0x68a4]        # 423f14 <flatcc_builder_padding_base@@Base+0x11f4>
  41d670:	mov    edx,0x786
  41d675:	call   404090 <__assert_fail@plt>
  41d67a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d680 <flatcc_builder_finalize_aligned_buffer@@Base>:
  41d680:	push   r15
  41d682:	push   r14
  41d684:	push   r12
  41d686:	push   rbx
  41d687:	push   rax
  41d688:	mov    r14,rsi
  41d68b:	mov    r15,rdi
  41d68e:	movsxd rax,DWORD PTR [rdi+0xf4]
  41d695:	movsxd rcx,DWORD PTR [rdi+0xf0]
  41d69c:	sub    rax,rcx
  41d69f:	test   rsi,rsi
  41d6a2:	je     41d6a7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  41d6a4:	mov    QWORD PTR [r14],rax
  41d6a7:	movzx  ecx,WORD PTR [r15+0xe8]
  41d6af:	add    rax,rcx
  41d6b2:	add    rax,0xffffffffffffffff
  41d6b6:	mov    rbx,rcx
  41d6b9:	neg    rbx
  41d6bc:	and    rbx,rax
  41d6bf:	cmp    rcx,0x8
  41d6c3:	mov    QWORD PTR [rsp],0x0
  41d6cb:	mov    esi,0x8
  41d6d0:	cmova  rsi,rcx
  41d6d4:	mov    rdi,rsp
  41d6d7:	mov    rdx,rbx
  41d6da:	call   404170 <posix_memalign@plt>
  41d6df:	mov    r12,QWORD PTR [rsp]
  41d6e3:	test   eax,eax
  41d6e5:	je     41d6f6 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  41d6e7:	test   r12,r12
  41d6ea:	je     41d6f6 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  41d6ec:	mov    rdi,r12
  41d6ef:	call   404030 <free@plt>
  41d6f4:	jmp    41d73e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  41d6f6:	test   r12,r12
  41d6f9:	je     41d73e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  41d6fb:	cmp    DWORD PTR [r15+0x128],0x0
  41d703:	je     41d6ec <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  41d705:	add    r15,0x130
  41d70c:	mov    rdi,r15
  41d70f:	mov    rsi,r12
  41d712:	mov    rdx,rbx
  41d715:	call   41de00 <flatcc_emitter_copy_buffer@@Base>
  41d71a:	test   rax,rax
  41d71d:	jne    41d74d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  41d71f:	lea    rdi,[rip+0x5aea]        # 423210 <flatcc_builder_padding_base@@Base+0x4f0>
  41d726:	lea    rsi,[rip+0x5875]        # 422fa2 <flatcc_builder_padding_base@@Base+0x282>
  41d72d:	lea    rcx,[rip+0x67e0]        # 423f14 <flatcc_builder_padding_base@@Base+0x11f4>
  41d734:	mov    edx,0x786
  41d739:	call   404090 <__assert_fail@plt>
  41d73e:	test   r14,r14
  41d741:	je     41d74a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  41d743:	mov    QWORD PTR [r14],0x0
  41d74a:	xor    r12d,r12d
  41d74d:	mov    rax,r12
  41d750:	add    rsp,0x8
  41d754:	pop    rbx
  41d755:	pop    r12
  41d757:	pop    r14
  41d759:	pop    r15
  41d75b:	ret    
  41d75c:	nop    DWORD PTR [rax+0x0]

000000000041d760 <flatcc_builder_aligned_alloc@@Base>:
  41d760:	push   rax
  41d761:	mov    rdx,rsi
  41d764:	mov    QWORD PTR [rsp],0x0
  41d76c:	cmp    rdi,0x8
  41d770:	mov    esi,0x8
  41d775:	cmova  rsi,rdi
  41d779:	mov    rdi,rsp
  41d77c:	call   404170 <posix_memalign@plt>
  41d781:	mov    ecx,eax
  41d783:	mov    rax,QWORD PTR [rsp]
  41d787:	test   ecx,ecx
  41d789:	je     41d7a2 <flatcc_builder_aligned_alloc@@Base+0x42>
  41d78b:	test   rax,rax
  41d78e:	je     41d7a2 <flatcc_builder_aligned_alloc@@Base+0x42>
  41d790:	mov    rdi,rax
  41d793:	call   404030 <free@plt>
  41d798:	mov    QWORD PTR [rsp],0x0
  41d7a0:	xor    eax,eax
  41d7a2:	pop    rcx
  41d7a3:	ret    
  41d7a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7ae:	xchg   ax,ax

000000000041d7b0 <flatcc_builder_aligned_free@@Base>:
  41d7b0:	jmp    404030 <free@plt>
  41d7b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7bf:	nop

000000000041d7c0 <flatcc_builder_get_emit_context@@Base>:
  41d7c0:	mov    rax,QWORD PTR [rdi+0x38]
  41d7c4:	ret    
  41d7c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7cf:	nop

000000000041d7d0 <flatcc_emitter_recycle_page@@Base>:
  41d7d0:	mov    rcx,QWORD PTR [rdi]
  41d7d3:	mov    eax,0xffffffff
  41d7d8:	cmp    rcx,rsi
  41d7db:	je     41d832 <flatcc_emitter_recycle_page@@Base+0x62>
  41d7dd:	cmp    QWORD PTR [rdi+0x8],rsi
  41d7e1:	je     41d832 <flatcc_emitter_recycle_page@@Base+0x62>
  41d7e3:	mov    rax,QWORD PTR [rsi+0xb80]
  41d7ea:	mov    rdx,QWORD PTR [rsi+0xb88]
  41d7f1:	mov    QWORD PTR [rax+0xb88],rdx
  41d7f8:	mov    rdx,QWORD PTR [rsi+0xb88]
  41d7ff:	mov    QWORD PTR [rdx+0xb80],rax
  41d806:	mov    rax,QWORD PTR [rcx+0xb88]
  41d80d:	mov    QWORD PTR [rsi+0xb88],rax
  41d814:	mov    QWORD PTR [rsi+0xb80],rcx
  41d81b:	mov    QWORD PTR [rax+0xb80],rsi
  41d822:	mov    rax,QWORD PTR [rsi+0xb80]
  41d829:	mov    QWORD PTR [rax+0xb88],rsi
  41d830:	xor    eax,eax
  41d832:	ret    
  41d833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d83d:	nop    DWORD PTR [rax]

000000000041d840 <flatcc_emitter_reset@@Base>:
  41d840:	push   r14
  41d842:	push   rbx
  41d843:	push   rax
  41d844:	mov    rax,QWORD PTR [rdi]
  41d847:	test   rax,rax
  41d84a:	je     41d92b <flatcc_emitter_reset@@Base+0xeb>
  41d850:	mov    rbx,rdi
  41d853:	mov    QWORD PTR [rdi+0x8],rax
  41d857:	lea    rcx,[rax+0x5c0]
  41d85e:	mov    QWORD PTR [rdi+0x10],rcx
  41d862:	mov    QWORD PTR [rdi+0x20],rcx
  41d866:	mov    QWORD PTR [rdi+0x18],0x5c0
  41d86e:	mov    QWORD PTR [rdi+0x28],0x5c0
  41d876:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41d880:	mov    rcx,QWORD PTR [rdi+0x30]
  41d884:	mov    rdx,QWORD PTR [rdi+0x40]
  41d888:	test   rdx,rdx
  41d88b:	jne    41d894 <flatcc_emitter_reset@@Base+0x54>
  41d88d:	mov    QWORD PTR [rbx+0x40],rcx
  41d891:	mov    rdx,rcx
  41d894:	lea    rdx,[rdx+rdx*2]
  41d898:	shr    rdx,0x2
  41d89c:	shr    rcx,0x2
  41d8a0:	add    rcx,rdx
  41d8a3:	mov    QWORD PTR [rbx+0x40],rcx
  41d8a7:	mov    QWORD PTR [rbx+0x30],0x0
  41d8af:	add    rcx,rcx
  41d8b2:	cmp    rcx,QWORD PTR [rbx+0x38]
  41d8b6:	jae    41d92b <flatcc_emitter_reset@@Base+0xeb>
  41d8b8:	mov    rdi,QWORD PTR [rax+0xb80]
  41d8bf:	cmp    rdi,rax
  41d8c2:	je     41d92b <flatcc_emitter_reset@@Base+0xeb>
  41d8c4:	lea    rcx,[rax+0xb80]
  41d8cb:	mov    r14,0xfffffffffffff480
  41d8d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8dc:	nop    DWORD PTR [rax+0x0]
  41d8e0:	mov    rdx,QWORD PTR [rdi+0xb80]
  41d8e7:	mov    QWORD PTR [rcx],rdx
  41d8ea:	mov    rcx,QWORD PTR [rdi+0xb80]
  41d8f1:	mov    QWORD PTR [rcx+0xb88],rax
  41d8f8:	call   404030 <free@plt>
  41d8fd:	mov    rax,QWORD PTR [rbx+0x38]
  41d901:	add    rax,r14
  41d904:	mov    QWORD PTR [rbx+0x38],rax
  41d908:	mov    rcx,QWORD PTR [rbx+0x40]
  41d90c:	add    rcx,rcx
  41d90f:	cmp    rcx,rax
  41d912:	jae    41d92b <flatcc_emitter_reset@@Base+0xeb>
  41d914:	mov    rax,QWORD PTR [rbx+0x8]
  41d918:	lea    rcx,[rax+0xb80]
  41d91f:	mov    rdi,QWORD PTR [rax+0xb80]
  41d926:	cmp    rdi,QWORD PTR [rbx]
  41d929:	jne    41d8e0 <flatcc_emitter_reset@@Base+0xa0>
  41d92b:	add    rsp,0x8
  41d92f:	pop    rbx
  41d930:	pop    r14
  41d932:	ret    
  41d933:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d93d:	nop    DWORD PTR [rax]

000000000041d940 <flatcc_emitter_clear@@Base>:
  41d940:	push   r14
  41d942:	push   rbx
  41d943:	push   rax
  41d944:	mov    rbx,QWORD PTR [rdi]
  41d947:	test   rbx,rbx
  41d94a:	je     41d9ac <flatcc_emitter_clear@@Base+0x6c>
  41d94c:	mov    r14,rdi
  41d94f:	mov    rax,QWORD PTR [rbx+0xb88]
  41d956:	mov    QWORD PTR [rax+0xb80],0x0
  41d961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d96b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d970:	mov    rax,QWORD PTR [rbx+0xb80]
  41d977:	test   rax,rax
  41d97a:	je     41d98d <flatcc_emitter_clear@@Base+0x4d>
  41d97c:	mov    rbx,rax
  41d97f:	mov    rdi,QWORD PTR [rax+0xb88]
  41d986:	call   404030 <free@plt>
  41d98b:	jmp    41d970 <flatcc_emitter_clear@@Base+0x30>
  41d98d:	mov    rdi,rbx
  41d990:	call   404030 <free@plt>
  41d995:	vxorps xmm0,xmm0,xmm0
  41d999:	vmovups YMMWORD PTR [r14+0x20],ymm0
  41d99f:	vmovups YMMWORD PTR [r14],ymm0
  41d9a4:	mov    QWORD PTR [r14+0x40],0x0
  41d9ac:	add    rsp,0x8
  41d9b0:	pop    rbx
  41d9b1:	pop    r14
  41d9b3:	vzeroupper 
  41d9b6:	ret    
  41d9b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d9c0 <flatcc_emitter@@Base>:
  41d9c0:	push   rbp
  41d9c1:	push   r15
  41d9c3:	push   r14
  41d9c5:	push   r13
  41d9c7:	push   r12
  41d9c9:	push   rbx
  41d9ca:	push   rax
  41d9cb:	mov    r14d,edx
  41d9ce:	mov    r12,rsi
  41d9d1:	mov    rbp,rdi
  41d9d4:	add    QWORD PTR [rdi+0x30],r8
  41d9d8:	test   ecx,ecx
  41d9da:	js     41db55 <flatcc_emitter@@Base+0x195>
  41d9e0:	mov    rdx,QWORD PTR [rbp+0x28]
  41d9e4:	cmp    rdx,r8
  41d9e7:	jae    41dd08 <flatcc_emitter@@Base+0x348>
  41d9ed:	xor    eax,eax
  41d9ef:	test   r14d,r14d
  41d9f2:	je     41dde7 <flatcc_emitter@@Base+0x427>
  41d9f8:	mov    r15,QWORD PTR [r12+0x8]
  41d9fd:	test   r15,r15
  41da00:	je     41db40 <flatcc_emitter@@Base+0x180>
  41da06:	mov    r13,QWORD PTR [r12]
  41da0a:	jmp    41da39 <flatcc_emitter@@Base+0x79>
  41da0c:	mov    rbx,r15
  41da0f:	mov    rdi,QWORD PTR [rbp+0x20]
  41da13:	mov    rsi,r13
  41da16:	mov    rdx,rbx
  41da19:	call   4040f0 <memcpy@plt>
  41da1e:	add    QWORD PTR [rbp+0x20],rbx
  41da22:	add    r13,rbx
  41da25:	mov    rdx,QWORD PTR [rbp+0x28]
  41da29:	sub    rdx,rbx
  41da2c:	mov    QWORD PTR [rbp+0x28],rdx
  41da30:	sub    r15,rbx
  41da33:	je     41db40 <flatcc_emitter@@Base+0x180>
  41da39:	mov    rbx,r15
  41da3c:	cmp    r15,rdx
  41da3f:	jbe    41da0f <flatcc_emitter@@Base+0x4f>
  41da41:	mov    rbx,rdx
  41da44:	test   rbx,rbx
  41da47:	je     41dab1 <flatcc_emitter@@Base+0xf1>
  41da49:	jmp    41da0f <flatcc_emitter@@Base+0x4f>
  41da4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41da50:	mov    QWORD PTR [rax+0xb88],rbx
  41da57:	mov    rcx,QWORD PTR [rbp+0x0]
  41da5b:	mov    QWORD PTR [rax+0xb80],rcx
  41da62:	mov    QWORD PTR [rcx+0xb88],rax
  41da69:	mov    QWORD PTR [rbx+0xb80],rax
  41da70:	mov    QWORD PTR [rbp+0x8],rax
  41da74:	mov    QWORD PTR [rbp+0x20],rax
  41da78:	mov    QWORD PTR [rbp+0x28],0xb80
  41da80:	mov    rcx,QWORD PTR [rax+0xb88]
  41da87:	mov    ecx,DWORD PTR [rcx+0xb90]
  41da8d:	mov    edx,0xb80
  41da92:	add    ecx,edx
  41da94:	mov    DWORD PTR [rax+0xb90],ecx
  41da9a:	mov    ebx,0xb80
  41da9f:	cmp    r15,rbx
  41daa2:	jbe    41da0c <flatcc_emitter@@Base+0x4c>
  41daa8:	test   rbx,rbx
  41daab:	jne    41da0f <flatcc_emitter@@Base+0x4f>
  41dab1:	mov    rbx,QWORD PTR [rbp+0x8]
  41dab5:	test   rbx,rbx
  41dab8:	je     41dac7 <flatcc_emitter@@Base+0x107>
  41daba:	mov    rax,QWORD PTR [rbx+0xb80]
  41dac1:	cmp    rax,QWORD PTR [rbp+0x0]
  41dac5:	jne    41da70 <flatcc_emitter@@Base+0xb0>
  41dac7:	mov    edi,0xb98
  41dacc:	call   404100 <malloc@plt>
  41dad1:	test   rax,rax
  41dad4:	je     41dd1a <flatcc_emitter@@Base+0x35a>
  41dada:	add    QWORD PTR [rbp+0x38],0xb80
  41dae2:	test   rbx,rbx
  41dae5:	jne    41da50 <flatcc_emitter@@Base+0x90>
  41daeb:	mov    QWORD PTR [rbp+0x0],rax
  41daef:	mov    QWORD PTR [rbp+0x8],rax
  41daf3:	mov    QWORD PTR [rax+0xb80],rax
  41dafa:	mov    QWORD PTR [rax+0xb88],rax
  41db01:	mov    rcx,rax
  41db04:	add    rcx,0x5c0
  41db0b:	mov    QWORD PTR [rbp+0x10],rcx
  41db0f:	mov    QWORD PTR [rbp+0x20],rcx
  41db13:	mov    QWORD PTR [rbp+0x18],0x5c0
  41db1b:	mov    QWORD PTR [rbp+0x28],0x5c0
  41db23:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41db2d:	mov    ebx,0x5c0
  41db32:	cmp    r15,rbx
  41db35:	ja     41daa8 <flatcc_emitter@@Base+0xe8>
  41db3b:	jmp    41da0c <flatcc_emitter@@Base+0x4c>
  41db40:	dec    r14d
  41db43:	add    r12,0x10
  41db47:	test   r14d,r14d
  41db4a:	jne    41d9f8 <flatcc_emitter@@Base+0x38>
  41db50:	jmp    41dde5 <flatcc_emitter@@Base+0x425>
  41db55:	lea    rsi,[rbp+0x18]
  41db59:	mov    rdx,QWORD PTR [rbp+0x18]
  41db5d:	cmp    rdx,r8
  41db60:	jae    41dd24 <flatcc_emitter@@Base+0x364>
  41db66:	xor    eax,eax
  41db68:	test   r14d,r14d
  41db6b:	je     41dde7 <flatcc_emitter@@Base+0x427>
  41db71:	mov    QWORD PTR [rsp],rsi
  41db75:	movsxd rax,r14d
  41db78:	shl    rax,0x4
  41db7c:	add    r12,rax
  41db7f:	mov    edx,0xfffff480
  41db84:	mov    r15,QWORD PTR [r12-0x8]
  41db89:	add    r12,0xfffffffffffffff0
  41db8d:	test   r15,r15
  41db90:	je     41dcfa <flatcc_emitter@@Base+0x33a>
  41db96:	mov    r13,QWORD PTR [r12]
  41db9a:	add    r13,r15
  41db9d:	jmp    41dbd1 <flatcc_emitter@@Base+0x211>
  41db9f:	nop
  41dba0:	mov    rbx,r15
  41dba3:	mov    rdi,QWORD PTR [rbp+0x10]
  41dba7:	sub    rdi,rbx
  41dbaa:	mov    QWORD PTR [rbp+0x10],rdi
  41dbae:	sub    rax,rbx
  41dbb1:	mov    QWORD PTR [rbp+0x18],rax
  41dbb5:	sub    r13,rbx
  41dbb8:	mov    rsi,r13
  41dbbb:	mov    rdx,rbx
  41dbbe:	call   4040f0 <memcpy@plt>
  41dbc3:	mov    edx,0xfffff480
  41dbc8:	sub    r15,rbx
  41dbcb:	je     41dcfa <flatcc_emitter@@Base+0x33a>
  41dbd1:	mov    rax,QWORD PTR [rsp]
  41dbd5:	mov    rax,QWORD PTR [rax]
  41dbd8:	cmp    r15,rax
  41dbdb:	ja     41dc28 <flatcc_emitter@@Base+0x268>
  41dbdd:	jmp    41dba0 <flatcc_emitter@@Base+0x1e0>
  41dbdf:	nop
  41dbe0:	mov    ecx,DWORD PTR [rbx+0xb90]
  41dbe6:	add    ecx,edx
  41dbe8:	mov    DWORD PTR [rax+0xb90],ecx
  41dbee:	mov    QWORD PTR [rbp+0x0],rax
  41dbf2:	lea    rcx,[rax+0xb80]
  41dbf9:	mov    QWORD PTR [rbp+0x10],rcx
  41dbfd:	mov    QWORD PTR [rbp+0x18],0xb80
  41dc05:	mov    rcx,QWORD PTR [rax+0xb80]
  41dc0c:	mov    ecx,DWORD PTR [rcx+0xb90]
  41dc12:	add    ecx,edx
  41dc14:	mov    DWORD PTR [rax+0xb90],ecx
  41dc1a:	mov    eax,0xb80
  41dc1f:	cmp    r15,rax
  41dc22:	jbe    41dba0 <flatcc_emitter@@Base+0x1e0>
  41dc28:	mov    rbx,rax
  41dc2b:	test   rax,rax
  41dc2e:	jne    41dba3 <flatcc_emitter@@Base+0x1e3>
  41dc34:	mov    rbx,QWORD PTR [rbp+0x0]
  41dc38:	test   rbx,rbx
  41dc3b:	je     41dc4a <flatcc_emitter@@Base+0x28a>
  41dc3d:	mov    rax,QWORD PTR [rbx+0xb88]
  41dc44:	cmp    rax,QWORD PTR [rbp+0x8]
  41dc48:	jne    41dbe0 <flatcc_emitter@@Base+0x220>
  41dc4a:	mov    edi,0xb98
  41dc4f:	call   404100 <malloc@plt>
  41dc54:	test   rax,rax
  41dc57:	je     41dd1a <flatcc_emitter@@Base+0x35a>
  41dc5d:	add    QWORD PTR [rbp+0x38],0xb80
  41dc65:	test   rbx,rbx
  41dc68:	je     41dca0 <flatcc_emitter@@Base+0x2e0>
  41dc6a:	mov    rcx,QWORD PTR [rbp+0x8]
  41dc6e:	mov    QWORD PTR [rax+0xb88],rcx
  41dc75:	mov    QWORD PTR [rax+0xb80],rbx
  41dc7c:	mov    QWORD PTR [rbx+0xb88],rax
  41dc83:	mov    QWORD PTR [rcx+0xb80],rax
  41dc8a:	mov    QWORD PTR [rbp+0x0],rax
  41dc8e:	mov    edx,0xfffff480
  41dc93:	jmp    41dbf2 <flatcc_emitter@@Base+0x232>
  41dc98:	nop    DWORD PTR [rax+rax*1+0x0]
  41dca0:	mov    QWORD PTR [rbp+0x0],rax
  41dca4:	mov    QWORD PTR [rbp+0x8],rax
  41dca8:	mov    QWORD PTR [rax+0xb80],rax
  41dcaf:	mov    QWORD PTR [rax+0xb88],rax
  41dcb6:	mov    rcx,rax
  41dcb9:	add    rcx,0x5c0
  41dcc0:	mov    QWORD PTR [rbp+0x10],rcx
  41dcc4:	mov    QWORD PTR [rbp+0x20],rcx
  41dcc8:	mov    QWORD PTR [rbp+0x18],0x5c0
  41dcd0:	mov    QWORD PTR [rbp+0x28],0x5c0
  41dcd8:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41dce2:	mov    eax,0x5c0
  41dce7:	mov    edx,0xfffff480
  41dcec:	cmp    r15,rax
  41dcef:	ja     41dc28 <flatcc_emitter@@Base+0x268>
  41dcf5:	jmp    41dba0 <flatcc_emitter@@Base+0x1e0>
  41dcfa:	dec    r14d
  41dcfd:	jne    41db84 <flatcc_emitter@@Base+0x1c4>
  41dd03:	jmp    41dde5 <flatcc_emitter@@Base+0x425>
  41dd08:	lea    rsi,[rbp+0x28]
  41dd0c:	mov    rbx,QWORD PTR [rbp+0x20]
  41dd10:	lea    rcx,[rbx+r8*1]
  41dd14:	mov    QWORD PTR [rbp+0x20],rcx
  41dd18:	jmp    41dd2f <flatcc_emitter@@Base+0x36f>
  41dd1a:	mov    eax,0xffffffff
  41dd1f:	jmp    41dde7 <flatcc_emitter@@Base+0x427>
  41dd24:	mov    rbx,QWORD PTR [rbp+0x10]
  41dd28:	sub    rbx,r8
  41dd2b:	mov    QWORD PTR [rbp+0x10],rbx
  41dd2f:	sub    rdx,r8
  41dd32:	mov    QWORD PTR [rsi],rdx
  41dd35:	xor    eax,eax
  41dd37:	test   r14d,r14d
  41dd3a:	je     41dde7 <flatcc_emitter@@Base+0x427>
  41dd40:	lea    r15d,[r14-0x1]
  41dd44:	mov    r13d,r14d
  41dd47:	and    r13d,0x3
  41dd4b:	je     41dd74 <flatcc_emitter@@Base+0x3b4>
  41dd4d:	xor    ebp,ebp
  41dd4f:	nop
  41dd50:	mov    rsi,QWORD PTR [r12]
  41dd54:	mov    rdx,QWORD PTR [r12+0x8]
  41dd59:	mov    rdi,rbx
  41dd5c:	call   4040f0 <memcpy@plt>
  41dd61:	add    rbx,QWORD PTR [r12+0x8]
  41dd66:	add    r12,0x10
  41dd6a:	inc    ebp
  41dd6c:	cmp    r13d,ebp
  41dd6f:	jne    41dd50 <flatcc_emitter@@Base+0x390>
  41dd71:	sub    r14d,ebp
  41dd74:	cmp    r15d,0x3
  41dd78:	jb     41dde5 <flatcc_emitter@@Base+0x425>
  41dd7a:	nop    WORD PTR [rax+rax*1+0x0]
  41dd80:	mov    rsi,QWORD PTR [r12]
  41dd84:	mov    rdx,QWORD PTR [r12+0x8]
  41dd89:	mov    rdi,rbx
  41dd8c:	call   4040f0 <memcpy@plt>
  41dd91:	add    rbx,QWORD PTR [r12+0x8]
  41dd96:	mov    rsi,QWORD PTR [r12+0x10]
  41dd9b:	mov    rdx,QWORD PTR [r12+0x18]
  41dda0:	mov    rdi,rbx
  41dda3:	call   4040f0 <memcpy@plt>
  41dda8:	add    rbx,QWORD PTR [r12+0x18]
  41ddad:	mov    rsi,QWORD PTR [r12+0x20]
  41ddb2:	mov    rdx,QWORD PTR [r12+0x28]
  41ddb7:	mov    rdi,rbx
  41ddba:	call   4040f0 <memcpy@plt>
  41ddbf:	add    rbx,QWORD PTR [r12+0x28]
  41ddc4:	mov    rsi,QWORD PTR [r12+0x30]
  41ddc9:	mov    rdx,QWORD PTR [r12+0x38]
  41ddce:	mov    rdi,rbx
  41ddd1:	call   4040f0 <memcpy@plt>
  41ddd6:	add    rbx,QWORD PTR [r12+0x38]
  41dddb:	add    r12,0x40
  41dddf:	add    r14d,0xfffffffc
  41dde3:	jne    41dd80 <flatcc_emitter@@Base+0x3c0>
  41dde5:	xor    eax,eax
  41dde7:	add    rsp,0x8
  41ddeb:	pop    rbx
  41ddec:	pop    r12
  41ddee:	pop    r13
  41ddf0:	pop    r14
  41ddf2:	pop    r15
  41ddf4:	pop    rbp
  41ddf5:	ret    
  41ddf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041de00 <flatcc_emitter_copy_buffer@@Base>:
  41de00:	push   r15
  41de02:	push   r14
  41de04:	push   r13
  41de06:	push   r12
  41de08:	push   rbx
  41de09:	mov    rax,rdx
  41de0c:	mov    rdx,QWORD PTR [rdi+0x30]
  41de10:	cmp    rdx,rax
  41de13:	ja     41deab <flatcc_emitter_copy_buffer@@Base+0xab>
  41de19:	mov    r14,rdi
  41de1c:	mov    rax,QWORD PTR [rdi]
  41de1f:	test   rax,rax
  41de22:	je     41deab <flatcc_emitter_copy_buffer@@Base+0xab>
  41de28:	mov    r12,rsi
  41de2b:	cmp    rax,QWORD PTR [r14+0x8]
  41de2f:	je     41debb <flatcc_emitter_copy_buffer@@Base+0xbb>
  41de35:	mov    r15d,0xb80
  41de3b:	mov    r13d,0xb80
  41de41:	sub    r13,QWORD PTR [r14+0x18]
  41de45:	mov    rsi,QWORD PTR [r14+0x10]
  41de49:	mov    rdi,r12
  41de4c:	mov    rdx,r13
  41de4f:	call   4040f0 <memcpy@plt>
  41de54:	add    r13,r12
  41de57:	mov    rax,QWORD PTR [r14]
  41de5a:	mov    rbx,QWORD PTR [rax+0xb80]
  41de61:	cmp    rbx,QWORD PTR [r14+0x8]
  41de65:	je     41de94 <flatcc_emitter_copy_buffer@@Base+0x94>
  41de67:	nop    WORD PTR [rax+rax*1+0x0]
  41de70:	mov    edx,0xb80
  41de75:	mov    rdi,r13
  41de78:	mov    rsi,rbx
  41de7b:	call   4040f0 <memcpy@plt>
  41de80:	add    r13,0xb80
  41de87:	mov    rbx,QWORD PTR [rbx+0xb80]
  41de8e:	cmp    rbx,QWORD PTR [r14+0x8]
  41de92:	jne    41de70 <flatcc_emitter_copy_buffer@@Base+0x70>
  41de94:	sub    r15,QWORD PTR [r14+0x28]
  41de98:	mov    rdi,r13
  41de9b:	mov    rsi,rbx
  41de9e:	mov    rdx,r15
  41dea1:	call   4040f0 <memcpy@plt>
  41dea6:	mov    r12,r13
  41dea9:	jmp    41deae <flatcc_emitter_copy_buffer@@Base+0xae>
  41deab:	xor    r12d,r12d
  41deae:	mov    rax,r12
  41deb1:	pop    rbx
  41deb2:	pop    r12
  41deb4:	pop    r13
  41deb6:	pop    r14
  41deb8:	pop    r15
  41deba:	ret    
  41debb:	mov    rsi,QWORD PTR [r14+0x10]
  41debf:	mov    rdi,r12
  41dec2:	call   4040f0 <memcpy@plt>
  41dec7:	jmp    41deae <flatcc_emitter_copy_buffer@@Base+0xae>
  41dec9:	nop    DWORD PTR [rax+0x0]

000000000041ded0 <grisu3_diy_fp_encode_double@@Base>:
  41ded0:	push   rbp
  41ded1:	push   r15
  41ded3:	push   r14
  41ded5:	push   r13
  41ded7:	push   r12
  41ded9:	push   rbx
  41deda:	push   rax
  41dedb:	xor    ebx,ebx
  41dedd:	test   ecx,ecx
  41dedf:	setne  r10b
  41dee3:	test   rdi,rdi
  41dee6:	je     41e224 <grisu3_diy_fp_encode_double@@Base+0x354>
  41deec:	movabs r9,0x40000000000000
  41def6:	xor    eax,eax
  41def8:	mov    rcx,rdi
  41defb:	shr    rcx,0x36
  41deff:	jne    41df1c <grisu3_diy_fp_encode_double@@Base+0x4c>
  41df01:	xor    eax,eax
  41df03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df0d:	nop    DWORD PTR [rax]
  41df10:	shl    rdi,0xa
  41df14:	add    eax,0xfffffff6
  41df17:	cmp    rdi,r9
  41df1a:	jb     41df10 <grisu3_diy_fp_encode_double@@Base+0x40>
  41df1c:	sub    esi,edx
  41df1e:	test   rdi,rdi
  41df21:	js     41df3a <grisu3_diy_fp_encode_double@@Base+0x6a>
  41df23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df2d:	nop    DWORD PTR [rax]
  41df30:	add    rdi,rdi
  41df33:	dec    eax
  41df35:	test   rdi,rdi
  41df38:	jns    41df30 <grisu3_diy_fp_encode_double@@Base+0x60>
  41df3a:	cmp    esi,0xfffffea3
  41df40:	jle    41e243 <grisu3_diy_fp_encode_double@@Base+0x373>
  41df46:	cmp    esi,0x15c
  41df4c:	jge    41e262 <grisu3_diy_fp_encode_double@@Base+0x392>
  41df52:	lea    ecx,[rsi+0x15c]
  41df58:	sar    ecx,0x1f
  41df5b:	shr    ecx,0x1d
  41df5e:	lea    ecx,[rsi+rcx*1]
  41df61:	add    ecx,0x15c
  41df67:	sar    ecx,0x3
  41df6a:	movsxd r11,ecx
  41df6d:	shl    r11,0x4
  41df71:	lea    r14,[rip+0x6568]        # 4244e0 <flatcc_builder_padding_base@@Base+0x17c0>
  41df78:	movsx  ecx,WORD PTR [r11+r14*1+0xa]
  41df7e:	cmp    esi,ecx
  41df80:	jl     41e281 <grisu3_diy_fp_encode_double@@Base+0x3b1>
  41df86:	lea    ebp,[rcx+0x8]
  41df89:	cmp    ebp,esi
  41df8b:	jle    41e2a0 <grisu3_diy_fp_encode_double@@Base+0x3d0>
  41df91:	mov    bl,r10b
  41df94:	shl    ebx,0x2
  41df97:	mov    ebp,eax
  41df99:	neg    bpl
  41df9c:	shlx   r10d,ebx,ebp
  41dfa1:	cmp    esi,ecx
  41dfa3:	je     41e035 <grisu3_diy_fp_encode_double@@Base+0x165>
  41dfa9:	not    ecx
  41dfab:	add    esi,ecx
  41dfad:	cmp    esi,0x7
  41dfb0:	jae    41e2bf <grisu3_diy_fp_encode_double@@Base+0x3ef>
  41dfb6:	movsxd rcx,esi
  41dfb9:	shl    rcx,0x4
  41dfbd:	lea    rbx,[rip+0x64ac]        # 424470 <flatcc_builder_padding_base@@Base+0x1750>
  41dfc4:	mov    rbp,QWORD PTR [rcx+rbx*1]
  41dfc8:	mov    r15d,DWORD PTR [rcx+rbx*1+0x8]
  41dfcd:	mov    rbx,rdi
  41dfd0:	shr    rbx,0x20
  41dfd4:	mov    r12d,edi
  41dfd7:	mov    edi,ebp
  41dfd9:	mov    rcx,rbp
  41dfdc:	shr    rcx,0x20
  41dfe0:	mov    r13,rcx
  41dfe3:	imul   r13,rbx
  41dfe7:	imul   rcx,r12
  41dfeb:	imul   rbx,rdi
  41dfef:	imul   rdi,r12
  41dff3:	shr    rdi,0x20
  41dff7:	mov    ebp,ebx
  41dff9:	add    rbp,rdi
  41dffc:	mov    edi,ecx
  41dffe:	add    rdi,rbp
  41e001:	sub    rdi,0xffffffff80000000
  41e008:	shr    rbx,0x20
  41e00c:	add    rbx,r13
  41e00f:	shr    rcx,0x20
  41e013:	add    rcx,rbx
  41e016:	shr    rdi,0x20
  41e01a:	add    rdi,rcx
  41e01d:	lea    eax,[rax+r15*1]
  41e021:	add    eax,0x40
  41e024:	lea    ecx,[rdx+rsi*1]
  41e027:	add    ecx,0x1
  41e02a:	lea    edx,[r10+0x4]
  41e02e:	cmp    ecx,0x13
  41e031:	cmovg  r10d,edx
  41e035:	mov    rsi,QWORD PTR [r11+r14*1]
  41e039:	mov    rdx,rdi
  41e03c:	shr    rdx,0x20
  41e040:	mov    ecx,edi
  41e042:	mov    edi,esi
  41e044:	shr    rsi,0x20
  41e048:	mov    rbx,rdx
  41e04b:	imul   rbx,rsi
  41e04f:	imul   rsi,rcx
  41e053:	imul   rdx,rdi
  41e057:	imul   rcx,rdi
  41e05b:	shr    rcx,0x20
  41e05f:	mov    edi,edx
  41e061:	add    rdi,rcx
  41e064:	mov    ecx,esi
  41e066:	add    rcx,rdi
  41e069:	sub    rcx,0xffffffff80000000
  41e070:	shr    rdx,0x20
  41e074:	add    rdx,rbx
  41e077:	shr    rsi,0x20
  41e07b:	add    rsi,rdx
  41e07e:	shr    rcx,0x20
  41e082:	cmp    r10d,0x1
  41e086:	sbb    r10d,0x0
  41e08a:	add    rcx,rsi
  41e08d:	je     41e224 <grisu3_diy_fp_encode_double@@Base+0x354>
  41e093:	movsx  edx,WORD PTR [r11+r14*1+0x8]
  41e099:	lea    eax,[rdx+rax*1]
  41e09c:	add    eax,0x40
  41e09f:	mov    edx,eax
  41e0a1:	cmp    rcx,r9
  41e0a4:	jae    41e0bc <grisu3_diy_fp_encode_double@@Base+0x1ec>
  41e0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0b0:	shl    rcx,0xa
  41e0b4:	add    edx,0xfffffff6
  41e0b7:	cmp    rcx,r9
  41e0ba:	jb     41e0b0 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  41e0bc:	add    r10d,0x9
  41e0c0:	test   rcx,rcx
  41e0c3:	js     41e0da <grisu3_diy_fp_encode_double@@Base+0x20a>
  41e0c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0cf:	nop
  41e0d0:	add    rcx,rcx
  41e0d3:	dec    edx
  41e0d5:	test   rcx,rcx
  41e0d8:	jns    41e0d0 <grisu3_diy_fp_encode_double@@Base+0x200>
  41e0da:	sub    eax,edx
  41e0dc:	shlx   r14d,r10d,eax
  41e0e1:	lea    eax,[rdx+0x40]
  41e0e4:	xor    ebx,ebx
  41e0e6:	cmp    eax,0xfffffc0d
  41e0eb:	jg     41e121 <grisu3_diy_fp_encode_double@@Base+0x251>
  41e0ed:	mov    ebx,0x40
  41e0f2:	cmp    eax,0xfffffbcf
  41e0f7:	jl     41e105 <grisu3_diy_fp_encode_double@@Base+0x235>
  41e0f9:	mov    ebx,0xfffffbce
  41e0fe:	sub    ebx,edx
  41e100:	cmp    ebx,0x3d
  41e103:	jl     41e121 <grisu3_diy_fp_encode_double@@Base+0x251>
  41e105:	lea    eax,[rbx-0x3e]
  41e108:	shrx   rcx,rcx,rax
  41e10d:	lea    edx,[rbx+rdx*1]
  41e110:	add    edx,0xffffffc2
  41e113:	sarx   r14d,r14d,eax
  41e118:	add    r14d,0x9
  41e11c:	mov    ebx,0x3e
  41e121:	movabs r11,0x1fffffffffffff
  41e12b:	shrx   rdi,rcx,rbx
  41e130:	add    edx,ebx
  41e132:	lea    eax,[rbx-0x1]
  41e135:	mov    esi,0x1
  41e13a:	shlx   rsi,rsi,rax
  41e13f:	lea    r10d,[r14+rsi*8]
  41e143:	cmp    ebx,r10d
  41e146:	jl     41e159 <grisu3_diy_fp_encode_double@@Base+0x289>
  41e148:	inc    rdi
  41e14b:	lea    rax,[r11+0x1]
  41e14f:	test   rdi,rax
  41e152:	je     41e159 <grisu3_diy_fp_encode_double@@Base+0x289>
  41e154:	shr    rdi,1
  41e157:	inc    edx
  41e159:	and    ecx,esi
  41e15b:	cmp    rdi,r11
  41e15e:	jbe    41e17f <grisu3_diy_fp_encode_double@@Base+0x2af>
  41e160:	dec    r9
  41e163:	mov    rbx,rdi
  41e166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e170:	shr    rbx,1
  41e173:	inc    edx
  41e175:	cmp    rdi,r9
  41e178:	mov    rdi,rbx
  41e17b:	ja     41e170 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  41e17d:	jmp    41e182 <grisu3_diy_fp_encode_double@@Base+0x2b2>
  41e17f:	mov    rbx,rdi
  41e182:	shl    ecx,0x3
  41e185:	shl    esi,0x3
  41e188:	vpxor  xmm0,xmm0,xmm0
  41e18c:	cmp    edx,0xfffffbce
  41e192:	jl     41e1fd <grisu3_diy_fp_encode_double@@Base+0x32d>
  41e194:	movabs r9,0xfffffffffffff
  41e19e:	lea    rdi,[r9+0x1]
  41e1a2:	and    rdi,rbx
  41e1a5:	sete   al
  41e1a8:	cmp    edx,0xfffffbce
  41e1ae:	je     41e1d6 <grisu3_diy_fp_encode_double@@Base+0x306>
  41e1b0:	test   rdi,rdi
  41e1b3:	jne    41e1d6 <grisu3_diy_fp_encode_double@@Base+0x306>
  41e1b5:	movabs rdi,0x8000000000000
  41e1bf:	nop
  41e1c0:	dec    edx
  41e1c2:	test   rbx,rdi
  41e1c5:	lea    rbx,[rbx+rbx*1]
  41e1c9:	sete   al
  41e1cc:	jne    41e1d6 <grisu3_diy_fp_encode_double@@Base+0x306>
  41e1ce:	cmp    edx,0xfffffbce
  41e1d4:	jg     41e1c0 <grisu3_diy_fp_encode_double@@Base+0x2f0>
  41e1d6:	lea    edi,[rdx+0x433]
  41e1dc:	shl    rdi,0x34
  41e1e0:	xor    ebp,ebp
  41e1e2:	test   al,al
  41e1e4:	cmove  rbp,rdi
  41e1e8:	cmp    edx,0xfffffbce
  41e1ee:	cmovne rbp,rdi
  41e1f2:	and    rbx,r9
  41e1f5:	or     rbx,rbp
  41e1f8:	vmovq  xmm0,rbx
  41e1fd:	vmovq  QWORD PTR [r8],xmm0
  41e202:	sub    esi,r14d
  41e205:	cmp    esi,ecx
  41e207:	setge  al
  41e20a:	cmp    ecx,r10d
  41e20d:	setge  cl
  41e210:	or     cl,al
  41e212:	movzx  eax,cl
  41e215:	add    rsp,0x8
  41e219:	pop    rbx
  41e21a:	pop    r12
  41e21c:	pop    r13
  41e21e:	pop    r14
  41e220:	pop    r15
  41e222:	pop    rbp
  41e223:	ret    
  41e224:	lea    rdi,[rip+0x708c]        # 4252b7 <flatcc_builder_padding_base@@Base+0x2597>
  41e22b:	lea    rsi,[rip+0x708e]        # 4252c0 <flatcc_builder_padding_base@@Base+0x25a0>
  41e232:	lea    rcx,[rip+0x70f7]        # 425330 <flatcc_builder_padding_base@@Base+0x2610>
  41e239:	mov    edx,0x104
  41e23e:	call   404090 <__assert_fail@plt>
  41e243:	lea    rdi,[rip+0x711f]        # 425369 <flatcc_builder_padding_base@@Base+0x2649>
  41e24a:	lea    rsi,[rip+0x6aef]        # 424d40 <flatcc_builder_padding_base@@Base+0x2020>
  41e251:	lea    rcx,[rip+0x7130]        # 425388 <flatcc_builder_padding_base@@Base+0x2668>
  41e258:	mov    edx,0x50
  41e25d:	call   404090 <__assert_fail@plt>
  41e262:	lea    rdi,[rip+0x7158]        # 4253c1 <flatcc_builder_padding_base@@Base+0x26a1>
  41e269:	lea    rsi,[rip+0x6ad0]        # 424d40 <flatcc_builder_padding_base@@Base+0x2020>
  41e270:	lea    rcx,[rip+0x7111]        # 425388 <flatcc_builder_padding_base@@Base+0x2668>
  41e277:	mov    edx,0x51
  41e27c:	call   404090 <__assert_fail@plt>
  41e281:	lea    rdi,[rip+0x7164]        # 4253ec <flatcc_builder_padding_base@@Base+0x26cc>
  41e288:	lea    rsi,[rip+0x6ab1]        # 424d40 <flatcc_builder_padding_base@@Base+0x2020>
  41e28f:	lea    rcx,[rip+0x70f2]        # 425388 <flatcc_builder_padding_base@@Base+0x2668>
  41e296:	mov    edx,0x58
  41e29b:	call   404090 <__assert_fail@plt>
  41e2a0:	lea    rdi,[rip+0x7154]        # 4253fb <flatcc_builder_padding_base@@Base+0x26db>
  41e2a7:	lea    rsi,[rip+0x6a92]        # 424d40 <flatcc_builder_padding_base@@Base+0x2020>
  41e2ae:	lea    rcx,[rip+0x70d3]        # 425388 <flatcc_builder_padding_base@@Base+0x2668>
  41e2b5:	mov    edx,0x59
  41e2ba:	call   404090 <__assert_fail@plt>
  41e2bf:	lea    rdi,[rip+0x6a5e]        # 424d24 <flatcc_builder_padding_base@@Base+0x2004>
  41e2c6:	lea    rsi,[rip+0x6a73]        # 424d40 <flatcc_builder_padding_base@@Base+0x2020>
  41e2cd:	lea    rcx,[rip+0x6add]        # 424db1 <flatcc_builder_padding_base@@Base+0x2091>
  41e2d4:	mov    edx,0xb9
  41e2d9:	call   404090 <__assert_fail@plt>
  41e2de:	xchg   ax,ax

000000000041e2e0 <flatcc_json_parser_error_string@@Base>:
  41e2e0:	cmp    edi,0x22
  41e2e3:	ja     41e2f4 <flatcc_json_parser_error_string@@Base+0x14>
  41e2e5:	movsxd rax,edi
  41e2e8:	lea    rcx,[rip+0xa9f9]        # 428ce8 <flatcc_builder_padding_base@@Base+0x5fc8>
  41e2ef:	mov    rax,QWORD PTR [rcx+rax*8]
  41e2f3:	ret    
  41e2f4:	lea    rax,[rip+0x6d7c]        # 425077 <flatcc_builder_padding_base@@Base+0x2357>
  41e2fb:	ret    
  41e2fc:	nop    DWORD PTR [rax+0x0]

000000000041e300 <flatcc_json_parser_set_error@@Base>:
  41e300:	mov    rax,rdx
  41e303:	cmp    DWORD PTR [rdi+0x20],0x0
  41e307:	je     41e30a <flatcc_json_parser_set_error@@Base+0xa>
  41e309:	ret    
  41e30a:	mov    DWORD PTR [rdi+0x20],ecx
  41e30d:	mov    ecx,DWORD PTR [rdi+0x8]
  41e310:	mov    edx,esi
  41e312:	sub    edx,ecx
  41e314:	inc    edx
  41e316:	mov    DWORD PTR [rdi+0x1c],edx
  41e319:	mov    QWORD PTR [rdi+0x38],rsi
  41e31d:	ret    
  41e31e:	xchg   ax,ax

000000000041e320 <flatcc_json_parser_string_part@@Base>:
  41e320:	mov    rax,rsi
  41e323:	cmp    rsi,rdx
  41e326:	je     41e34d <flatcc_json_parser_string_part@@Base+0x2d>
  41e328:	nop    DWORD PTR [rax+rax*1+0x0]
  41e330:	movzx  ecx,BYTE PTR [rax]
  41e333:	cmp    cl,0x20
  41e336:	jb     41e35c <flatcc_json_parser_string_part@@Base+0x3c>
  41e338:	cmp    cl,0x22
  41e33b:	je     41e37c <flatcc_json_parser_string_part@@Base+0x5c>
  41e33d:	cmp    cl,0x5c
  41e340:	je     41e37c <flatcc_json_parser_string_part@@Base+0x5c>
  41e342:	inc    rax
  41e345:	cmp    rdx,rax
  41e348:	jne    41e330 <flatcc_json_parser_string_part@@Base+0x10>
  41e34a:	mov    rax,rdx
  41e34d:	cmp    DWORD PTR [rdi+0x20],0x0
  41e351:	jne    41e379 <flatcc_json_parser_string_part@@Base+0x59>
  41e353:	mov    DWORD PTR [rdi+0x20],0x14
  41e35a:	jmp    41e369 <flatcc_json_parser_string_part@@Base+0x49>
  41e35c:	cmp    DWORD PTR [rdi+0x20],0x0
  41e360:	jne    41e379 <flatcc_json_parser_string_part@@Base+0x59>
  41e362:	mov    DWORD PTR [rdi+0x20],0x11
  41e369:	mov    ecx,DWORD PTR [rdi+0x8]
  41e36c:	mov    esi,eax
  41e36e:	sub    esi,ecx
  41e370:	inc    esi
  41e372:	mov    DWORD PTR [rdi+0x1c],esi
  41e375:	mov    QWORD PTR [rdi+0x38],rax
  41e379:	mov    rax,rdx
  41e37c:	ret    
  41e37d:	nop    DWORD PTR [rax]

000000000041e380 <flatcc_json_parser_space_ext@@Base>:
  41e380:	mov    rax,rsi
  41e383:	lea    rcx,[rip+0x5e76]        # 424200 <flatcc_builder_padding_base@@Base+0x14e0>
  41e38a:	mov    rsi,rdx
  41e38d:	sub    rsi,rax
  41e390:	cmp    rsi,0x10
  41e394:	jl     41e3c6 <flatcc_json_parser_space_ext@@Base+0x46>
  41e396:	cmp    BYTE PTR [rax],0x20
  41e399:	jg     41e460 <flatcc_json_parser_space_ext@@Base+0xe0>
  41e39f:	movzx  r8d,WORD PTR [rax]
  41e3a3:	lea    rsi,[rax+0x2]
  41e3a7:	cmp    r8d,0x2020
  41e3ae:	cmovne rsi,rax
  41e3b2:	lea    rax,[rsi+0x1]
  41e3b6:	cmp    BYTE PTR [rsi],0x20
  41e3b9:	cmovne rax,rsi
  41e3bd:	cmp    BYTE PTR [rax],0x20
  41e3c0:	jg     41e460 <flatcc_json_parser_space_ext@@Base+0xe0>
  41e3c6:	cmp    rax,rdx
  41e3c9:	je     41e45d <flatcc_json_parser_space_ext@@Base+0xdd>
  41e3cf:	nop
  41e3d0:	cmp    BYTE PTR [rax],0x20
  41e3d3:	jne    41e3e0 <flatcc_json_parser_space_ext@@Base+0x60>
  41e3d5:	inc    rax
  41e3d8:	cmp    rdx,rax
  41e3db:	jne    41e3d0 <flatcc_json_parser_space_ext@@Base+0x50>
  41e3dd:	jmp    41e45d <flatcc_json_parser_space_ext@@Base+0xdd>
  41e3df:	nop
  41e3e0:	cmp    rdx,rax
  41e3e3:	jne    41e405 <flatcc_json_parser_space_ext@@Base+0x85>
  41e3e5:	jmp    41e45d <flatcc_json_parser_space_ext@@Base+0xdd>
  41e3e7:	cmp    BYTE PTR [rax+0x1],0xa
  41e3eb:	sete   sil
  41e3ef:	movzx  esi,sil
  41e3f3:	add    rax,rsi
  41e3f6:	inc    DWORD PTR [rdi+0x18]
  41e3f9:	inc    rax
  41e3fc:	mov    QWORD PTR [rdi+0x8],rax
  41e400:	cmp    rax,rdx
  41e403:	je     41e45d <flatcc_json_parser_space_ext@@Base+0xdd>
  41e405:	movsx  esi,BYTE PTR [rax]
  41e408:	cmp    esi,0x20
  41e40b:	jg     41e460 <flatcc_json_parser_space_ext@@Base+0xe0>
  41e40d:	add    esi,0xfffffff7
  41e410:	cmp    esi,0x17
  41e413:	ja     41e440 <flatcc_json_parser_space_ext@@Base+0xc0>
  41e415:	movsxd rsi,DWORD PTR [rcx+rsi*4]
  41e419:	add    rsi,rcx
  41e41c:	jmp    rsi
  41e41e:	inc    rax
  41e421:	jmp    41e400 <flatcc_json_parser_space_ext@@Base+0x80>
  41e423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e42d:	nop    DWORD PTR [rax]
  41e430:	mov    rsi,rdx
  41e433:	sub    rsi,rax
  41e436:	cmp    rsi,0x2
  41e43a:	jge    41e3e7 <flatcc_json_parser_space_ext@@Base+0x67>
  41e43c:	xor    esi,esi
  41e43e:	jmp    41e3ef <flatcc_json_parser_space_ext@@Base+0x6f>
  41e440:	cmp    DWORD PTR [rdi+0x20],0x0
  41e444:	jne    41e45d <flatcc_json_parser_space_ext@@Base+0xdd>
  41e446:	mov    DWORD PTR [rdi+0x20],0x5
  41e44d:	mov    ecx,DWORD PTR [rdi+0x8]
  41e450:	mov    esi,eax
  41e452:	sub    esi,ecx
  41e454:	inc    esi
  41e456:	mov    DWORD PTR [rdi+0x1c],esi
  41e459:	mov    QWORD PTR [rdi+0x38],rax
  41e45d:	mov    rax,rdx
  41e460:	ret    
  41e461:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e46b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e470 <flatcc_json_parser_string_escape@@Base>:
  41e470:	push   rbp
  41e471:	push   r14
  41e473:	push   rbx
  41e474:	mov    rax,rdx
  41e477:	sub    rdx,rsi
  41e47a:	cmp    rdx,0x2
  41e47e:	jl     41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e484:	cmp    BYTE PTR [rsi],0x5c
  41e487:	jne    41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e489:	movsx  ebp,BYTE PTR [rsi+0x1]
  41e48d:	add    ebp,0xffffffde
  41e490:	cmp    ebp,0x56
  41e493:	ja     41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e495:	lea    rbx,[rip+0x5dc4]        # 424260 <flatcc_builder_padding_base@@Base+0x1540>
  41e49c:	movsxd rbp,DWORD PTR [rbx+rbp*4]
  41e4a0:	add    rbp,rbx
  41e4a3:	jmp    rbp
  41e4a5:	mov    WORD PTR [rcx],0x2201
  41e4aa:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4ac:	mov    WORD PTR [rcx],0x2f01
  41e4b1:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4b3:	mov    WORD PTR [rcx],0x5c01
  41e4b8:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4ba:	mov    WORD PTR [rcx],0x801
  41e4bf:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4c1:	mov    WORD PTR [rcx],0xc01
  41e4c6:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4c8:	mov    WORD PTR [rcx],0xa01
  41e4cd:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4cf:	mov    WORD PTR [rcx],0xd01
  41e4d4:	jmp    41e4db <flatcc_json_parser_string_escape@@Base+0x6b>
  41e4d6:	mov    WORD PTR [rcx],0x901
  41e4db:	add    rsi,0x2
  41e4df:	mov    rax,rsi
  41e4e2:	jmp    41e528 <flatcc_json_parser_string_escape@@Base+0xb8>
  41e4e4:	cmp    rdx,0x5
  41e4e8:	jle    41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e4ea:	movzx  edx,BYTE PTR [rsi+0x2]
  41e4ee:	lea    ebp,[rdx-0x30]
  41e4f1:	cmp    bpl,0x9
  41e4f5:	ja     41e545 <flatcc_json_parser_string_escape@@Base+0xd5>
  41e4f7:	movzx  edx,dx
  41e4fa:	shl    edx,0xc
  41e4fd:	jmp    41e55e <flatcc_json_parser_string_escape@@Base+0xee>
  41e4ff:	mov    BYTE PTR [rcx],0x1
  41e502:	cmp    rdx,0x3
  41e506:	jg     41e52d <flatcc_json_parser_string_escape@@Base+0xbd>
  41e508:	mov    BYTE PTR [rcx],0x0
  41e50b:	cmp    DWORD PTR [rdi+0x20],0x0
  41e50f:	jne    41e528 <flatcc_json_parser_string_escape@@Base+0xb8>
  41e511:	mov    DWORD PTR [rdi+0x20],0x12
  41e518:	mov    ecx,DWORD PTR [rdi+0x8]
  41e51b:	mov    edx,esi
  41e51d:	sub    edx,ecx
  41e51f:	inc    edx
  41e521:	mov    DWORD PTR [rdi+0x1c],edx
  41e524:	mov    QWORD PTR [rdi+0x38],rsi
  41e528:	pop    rbx
  41e529:	pop    r14
  41e52b:	pop    rbp
  41e52c:	ret    
  41e52d:	mov    dl,BYTE PTR [rsi+0x2]
  41e530:	lea    ebp,[rdx-0x30]
  41e533:	cmp    bpl,0x9
  41e537:	ja     41e60c <flatcc_json_parser_string_escape@@Base+0x19c>
  41e53d:	shl    dl,0x4
  41e540:	jmp    41e623 <flatcc_json_parser_string_escape@@Base+0x1b3>
  41e545:	mov    ebx,edx
  41e547:	or     bl,0x20
  41e54a:	add    bl,0x9f
  41e54d:	cmp    bl,0x5
  41e550:	ja     41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e552:	movzx  edx,dx
  41e555:	shl    edx,0xc
  41e558:	add    edx,0xffff9000
  41e55e:	mov    r8b,BYTE PTR [rsi+0x3]
  41e562:	lea    ebp,[r8-0x30]
  41e566:	mov    r9w,0xd000
  41e56b:	cmp    bpl,0xa
  41e56f:	jb     41e584 <flatcc_json_parser_string_escape@@Base+0x114>
  41e571:	or     r8b,0x20
  41e575:	lea    ebp,[r8-0x61]
  41e579:	mov    r9w,0xa900
  41e57e:	cmp    bpl,0x6
  41e582:	jae    41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e584:	mov    r10b,BYTE PTR [rsi+0x4]
  41e588:	lea    ebx,[r10-0x30]
  41e58c:	mov    r11w,0xfd00
  41e591:	cmp    bl,0xa
  41e594:	jb     41e5ac <flatcc_json_parser_string_escape@@Base+0x13c>
  41e596:	or     r10b,0x20
  41e59a:	lea    ebx,[r10-0x61]
  41e59e:	mov    r11w,0xfa90
  41e5a3:	cmp    bl,0x6
  41e5a6:	jae    41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e5ac:	mov    bl,BYTE PTR [rsi+0x5]
  41e5af:	lea    ebp,[rbx-0x30]
  41e5b2:	mov    r14w,0xffd0
  41e5b7:	cmp    bpl,0xa
  41e5bb:	jb     41e5d2 <flatcc_json_parser_string_escape@@Base+0x162>
  41e5bd:	or     bl,0x20
  41e5c0:	lea    ebp,[rbx-0x61]
  41e5c3:	mov    r14w,0xffa9
  41e5c8:	cmp    bpl,0x6
  41e5cc:	jae    41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e5d2:	movzx  eax,r8b
  41e5d6:	shl    eax,0x8
  41e5d9:	add    r9d,eax
  41e5dc:	or     edx,r9d
  41e5df:	movsx  eax,r10b
  41e5e3:	shl    eax,0x4
  41e5e6:	movsx  edi,r11w
  41e5ea:	add    edi,eax
  41e5ec:	or     edx,edi
  41e5ee:	movsx  eax,bl
  41e5f1:	movsx  edi,r14w
  41e5f5:	add    edi,eax
  41e5f7:	or     edx,edi
  41e5f9:	cmp    dx,0x7f
  41e5fd:	ja     41e656 <flatcc_json_parser_string_escape@@Base+0x1e6>
  41e5ff:	mov    BYTE PTR [rcx],0x1
  41e602:	mov    eax,0x1
  41e607:	jmp    41e69c <flatcc_json_parser_string_escape@@Base+0x22c>
  41e60c:	mov    ebx,edx
  41e60e:	or     bl,0x20
  41e611:	add    bl,0x9f
  41e614:	cmp    bl,0x5
  41e617:	ja     41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e61d:	shl    dl,0x4
  41e620:	add    dl,0x90
  41e623:	mov    bpl,BYTE PTR [rsi+0x3]
  41e627:	lea    ebx,[rbp-0x30]
  41e62a:	cmp    bl,0xa
  41e62d:	jb     41e645 <flatcc_json_parser_string_escape@@Base+0x1d5>
  41e62f:	or     bpl,0x20
  41e633:	lea    ebx,[rbp-0x61]
  41e636:	cmp    bl,0x5
  41e639:	ja     41e508 <flatcc_json_parser_string_escape@@Base+0x98>
  41e63f:	add    bpl,0xa9
  41e643:	mov    ebx,ebp
  41e645:	or     bl,dl
  41e647:	mov    BYTE PTR [rcx+0x1],bl
  41e64a:	add    rsi,0x4
  41e64e:	mov    rax,rsi
  41e651:	jmp    41e528 <flatcc_json_parser_string_escape@@Base+0xb8>
  41e656:	movzx  eax,dx
  41e659:	cmp    eax,0x7ff
  41e65e:	ja     41e67a <flatcc_json_parser_string_escape@@Base+0x20a>
  41e660:	mov    BYTE PTR [rcx],0x2
  41e663:	mov    eax,edx
  41e665:	shr    eax,0x6
  41e668:	or     al,0xc0
  41e66a:	mov    BYTE PTR [rcx+0x1],al
  41e66d:	and    dl,0x3f
  41e670:	or     dl,0x80
  41e673:	mov    eax,0x2
  41e678:	jmp    41e69c <flatcc_json_parser_string_escape@@Base+0x22c>
  41e67a:	mov    BYTE PTR [rcx],0x3
  41e67d:	shr    eax,0xc
  41e680:	or     al,0xe0
  41e682:	mov    BYTE PTR [rcx+0x1],al
  41e685:	mov    eax,edx
  41e687:	shr    eax,0x6
  41e68a:	and    al,0x3f
  41e68c:	or     al,0x80
  41e68e:	mov    BYTE PTR [rcx+0x2],al
  41e691:	and    dl,0x3f
  41e694:	or     dl,0x80
  41e697:	mov    eax,0x3
  41e69c:	mov    BYTE PTR [rcx+rax*1],dl
  41e69f:	add    rsi,0x6
  41e6a3:	mov    rax,rsi
  41e6a6:	jmp    41e528 <flatcc_json_parser_string_escape@@Base+0xb8>
  41e6ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e6b0 <flatcc_json_parser_skip_constant@@Base>:
  41e6b0:	push   r15
  41e6b2:	push   r14
  41e6b4:	push   rbx
  41e6b5:	mov    rbx,rsi
  41e6b8:	cmp    rsi,rdx
  41e6bb:	je     41e732 <flatcc_json_parser_skip_constant@@Base+0x82>
  41e6bd:	mov    r14,rdx
  41e6c0:	mov    r15,rdi
  41e6c3:	jmp    41e6de <flatcc_json_parser_skip_constant@@Base+0x2e>
  41e6c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e6cf:	nop
  41e6d0:	inc    rbx
  41e6d3:	mov    rax,rbx
  41e6d6:	mov    rbx,rax
  41e6d9:	cmp    rax,r14
  41e6dc:	je     41e72f <flatcc_json_parser_skip_constant@@Base+0x7f>
  41e6de:	movzx  eax,BYTE PTR [rbx]
  41e6e1:	test   al,al
  41e6e3:	js     41e6d0 <flatcc_json_parser_skip_constant@@Base+0x20>
  41e6e5:	cmp    al,0x5f
  41e6e7:	je     41e6d0 <flatcc_json_parser_skip_constant@@Base+0x20>
  41e6e9:	cmp    al,0x2e
  41e6eb:	je     41e6d0 <flatcc_json_parser_skip_constant@@Base+0x20>
  41e6ed:	lea    ecx,[rax-0x30]
  41e6f0:	cmp    cl,0x9
  41e6f3:	jbe    41e6d0 <flatcc_json_parser_skip_constant@@Base+0x20>
  41e6f5:	mov    ecx,eax
  41e6f7:	or     cl,0x20
  41e6fa:	add    cl,0x9f
  41e6fd:	cmp    cl,0x19
  41e700:	jbe    41e6d0 <flatcc_json_parser_skip_constant@@Base+0x20>
  41e702:	mov    rcx,r14
  41e705:	sub    rcx,rbx
  41e708:	cmp    rcx,0x2
  41e70c:	jl     41e71a <flatcc_json_parser_skip_constant@@Base+0x6a>
  41e70e:	cmp    al,0x20
  41e710:	jg     41e732 <flatcc_json_parser_skip_constant@@Base+0x82>
  41e712:	jne    41e71a <flatcc_json_parser_skip_constant@@Base+0x6a>
  41e714:	cmp    BYTE PTR [rbx+0x1],0x20
  41e718:	jg     41e6d0 <flatcc_json_parser_skip_constant@@Base+0x20>
  41e71a:	mov    rdi,r15
  41e71d:	mov    rsi,rbx
  41e720:	mov    rdx,r14
  41e723:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41e728:	cmp    rax,rbx
  41e72b:	jne    41e6d6 <flatcc_json_parser_skip_constant@@Base+0x26>
  41e72d:	jmp    41e732 <flatcc_json_parser_skip_constant@@Base+0x82>
  41e72f:	mov    rbx,r14
  41e732:	mov    rax,rbx
  41e735:	pop    rbx
  41e736:	pop    r14
  41e738:	pop    r15
  41e73a:	ret    
  41e73b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e740 <flatcc_json_parser_match_constant@@Base>:
  41e740:	push   r15
  41e742:	push   r14
  41e744:	push   r12
  41e746:	push   rbx
  41e747:	push   rax
  41e748:	mov    r14,r8
  41e74b:	mov    r15,rsi
  41e74e:	movsxd rbx,ecx
  41e751:	mov    rax,rdx
  41e754:	sub    rax,rsi
  41e757:	cmp    rax,rbx
  41e75a:	jle    41e844 <flatcc_json_parser_match_constant@@Base+0x104>
  41e760:	mov    r12,rdx
  41e763:	add    rbx,r15
  41e766:	cmp    DWORD PTR [rdi+0x14],0x0
  41e76a:	je     41e7ca <flatcc_json_parser_match_constant@@Base+0x8a>
  41e76c:	mov    rax,r12
  41e76f:	sub    rax,rbx
  41e772:	cmp    rax,0x2
  41e776:	jl     41e793 <flatcc_json_parser_match_constant@@Base+0x53>
  41e778:	cmp    BYTE PTR [rbx],0x20
  41e77b:	mov    rax,rbx
  41e77e:	jg     41e79e <flatcc_json_parser_match_constant@@Base+0x5e>
  41e780:	jne    41e793 <flatcc_json_parser_match_constant@@Base+0x53>
  41e782:	cmp    BYTE PTR [rbx+0x1],0x20
  41e786:	jle    41e793 <flatcc_json_parser_match_constant@@Base+0x53>
  41e788:	lea    rax,[rbx+0x1]
  41e78c:	cmp    rax,r12
  41e78f:	jne    41e7a3 <flatcc_json_parser_match_constant@@Base+0x63>
  41e791:	jmp    41e802 <flatcc_json_parser_match_constant@@Base+0xc2>
  41e793:	mov    rsi,rbx
  41e796:	mov    rdx,r12
  41e799:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41e79e:	cmp    rax,r12
  41e7a1:	je     41e802 <flatcc_json_parser_match_constant@@Base+0xc2>
  41e7a3:	cmp    rax,rbx
  41e7a6:	je     41e80e <flatcc_json_parser_match_constant@@Base+0xce>
  41e7a8:	mov    cl,BYTE PTR [rax]
  41e7aa:	cmp    cl,0x5f
  41e7ad:	je     41e7be <flatcc_json_parser_match_constant@@Base+0x7e>
  41e7af:	test   cl,cl
  41e7b1:	js     41e7be <flatcc_json_parser_match_constant@@Base+0x7e>
  41e7b3:	or     cl,0x20
  41e7b6:	add    cl,0x9f
  41e7b9:	cmp    cl,0x19
  41e7bc:	ja     41e80e <flatcc_json_parser_match_constant@@Base+0xce>
  41e7be:	mov    DWORD PTR [r14],0x1
  41e7c5:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e7ca:	movsx  eax,BYTE PTR [rbx]
  41e7cd:	cmp    eax,0x20
  41e7d0:	jne    41e828 <flatcc_json_parser_match_constant@@Base+0xe8>
  41e7d2:	lea    rax,[r12-0x1]
  41e7d7:	nop    WORD PTR [rax+rax*1+0x0]
  41e7e0:	cmp    rax,rbx
  41e7e3:	je     41e802 <flatcc_json_parser_match_constant@@Base+0xc2>
  41e7e5:	movzx  ecx,BYTE PTR [rbx+0x1]
  41e7e9:	inc    rbx
  41e7ec:	cmp    cl,0x20
  41e7ef:	je     41e7e0 <flatcc_json_parser_match_constant@@Base+0xa0>
  41e7f1:	cmp    cl,0x22
  41e7f4:	je     41e85a <flatcc_json_parser_match_constant@@Base+0x11a>
  41e7f6:	mov    DWORD PTR [r14],0x1
  41e7fd:	mov    rax,rbx
  41e800:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e802:	mov    DWORD PTR [r14],0x0
  41e809:	mov    rax,r12
  41e80c:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e80e:	mov    DWORD PTR [r14],0x0
  41e815:	mov    cl,BYTE PTR [rax]
  41e817:	cmp    cl,0x2c
  41e81a:	je     41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e81c:	cmp    cl,0x5d
  41e81f:	je     41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e821:	cmp    cl,0x7d
  41e824:	jne    41e84b <flatcc_json_parser_match_constant@@Base+0x10b>
  41e826:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e828:	cmp    eax,0x22
  41e82b:	je     41e85a <flatcc_json_parser_match_constant@@Base+0x11a>
  41e82d:	cmp    eax,0x5c
  41e830:	jne    41e844 <flatcc_json_parser_match_constant@@Base+0x104>
  41e832:	mov    DWORD PTR [r14],0x0
  41e839:	cmp    DWORD PTR [rdi+0x20],0x0
  41e83d:	je     41e89a <flatcc_json_parser_match_constant@@Base+0x15a>
  41e83f:	mov    rax,r12
  41e842:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e844:	mov    DWORD PTR [r14],0x0
  41e84b:	mov    rax,r15
  41e84e:	add    rsp,0x8
  41e852:	pop    rbx
  41e853:	pop    r12
  41e855:	pop    r14
  41e857:	pop    r15
  41e859:	ret    
  41e85a:	lea    rax,[rbx+0x1]
  41e85e:	mov    rcx,rbx
  41e861:	not    rcx
  41e864:	cmp    rcx,0x2
  41e868:	jl     41e887 <flatcc_json_parser_match_constant@@Base+0x147>
  41e86a:	cmp    BYTE PTR [rax],0x20
  41e86d:	jg     41e891 <flatcc_json_parser_match_constant@@Base+0x151>
  41e86f:	jne    41e887 <flatcc_json_parser_match_constant@@Base+0x147>
  41e871:	cmp    BYTE PTR [rbx+0x2],0x20
  41e875:	jle    41e887 <flatcc_json_parser_match_constant@@Base+0x147>
  41e877:	add    rbx,0x2
  41e87b:	mov    rax,rbx
  41e87e:	mov    DWORD PTR [r14],0x0
  41e885:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e887:	mov    rsi,rax
  41e88a:	xor    edx,edx
  41e88c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41e891:	mov    DWORD PTR [r14],0x0
  41e898:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e89a:	mov    DWORD PTR [rdi+0x20],0x12
  41e8a1:	mov    eax,DWORD PTR [rdi+0x8]
  41e8a4:	mov    ecx,ebx
  41e8a6:	sub    ecx,eax
  41e8a8:	inc    ecx
  41e8aa:	mov    DWORD PTR [rdi+0x1c],ecx
  41e8ad:	mov    QWORD PTR [rdi+0x38],rbx
  41e8b1:	mov    rax,r12
  41e8b4:	jmp    41e84e <flatcc_json_parser_match_constant@@Base+0x10e>
  41e8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041e8c0 <flatcc_json_parser_unmatched_symbol@@Base>:
  41e8c0:	push   r14
  41e8c2:	push   rbx
  41e8c3:	push   rax
  41e8c4:	mov    rbx,rdx
  41e8c7:	mov    r14,rdi
  41e8ca:	test   BYTE PTR [rdi+0x10],0x1
  41e8ce:	jne    41e8fa <flatcc_json_parser_unmatched_symbol@@Base+0x3a>
  41e8d0:	cmp    DWORD PTR [r14+0x20],0x0
  41e8d5:	jne    41ea52 <flatcc_json_parser_unmatched_symbol@@Base+0x192>
  41e8db:	mov    DWORD PTR [r14+0x20],0xd
  41e8e3:	mov    eax,DWORD PTR [r14+0x8]
  41e8e7:	mov    ecx,esi
  41e8e9:	sub    ecx,eax
  41e8eb:	inc    ecx
  41e8ed:	mov    DWORD PTR [r14+0x1c],ecx
  41e8f1:	mov    QWORD PTR [r14+0x38],rsi
  41e8f5:	jmp    41ea52 <flatcc_json_parser_unmatched_symbol@@Base+0x192>
  41e8fa:	cmp    DWORD PTR [r14+0x14],0x0
  41e8ff:	je     41e957 <flatcc_json_parser_unmatched_symbol@@Base+0x97>
  41e901:	cmp    rsi,rbx
  41e904:	je     41e9a4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  41e90a:	mov    dl,BYTE PTR [rsi]
  41e90c:	cmp    dl,0x21
  41e90f:	jl     41e9a4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  41e915:	lea    rcx,[rbx-0x1]
  41e919:	nop    DWORD PTR [rax+0x0]
  41e920:	mov    eax,edx
  41e922:	cmp    dl,0x2e
  41e925:	je     41e940 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
  41e927:	cmp    al,0x5f
  41e929:	je     41e940 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
  41e92b:	lea    edx,[rax-0x30]
  41e92e:	cmp    dl,0x9
  41e931:	jbe    41e940 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
  41e933:	mov    edx,eax
  41e935:	or     dl,0x20
  41e938:	add    dl,0x9f
  41e93b:	cmp    dl,0x1a
  41e93e:	jae    41e951 <flatcc_json_parser_unmatched_symbol@@Base+0x91>
  41e940:	cmp    rcx,rsi
  41e943:	je     41e989 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  41e945:	movzx  edx,BYTE PTR [rsi+0x1]
  41e949:	inc    rsi
  41e94c:	cmp    dl,0x21
  41e94f:	jge    41e920 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
  41e951:	cmp    al,0x2e
  41e953:	je     41e990 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
  41e955:	jmp    41e9a4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  41e957:	cmp    rsi,rbx
  41e95a:	jne    41e96c <flatcc_json_parser_unmatched_symbol@@Base+0xac>
  41e95c:	jmp    41e9ac <flatcc_json_parser_unmatched_symbol@@Base+0xec>
  41e95e:	xchg   ax,ax
  41e960:	cmp    al,0x22
  41e962:	je     41e984 <flatcc_json_parser_unmatched_symbol@@Base+0xc4>
  41e964:	inc    rsi
  41e967:	cmp    rsi,rbx
  41e96a:	je     41e9a9 <flatcc_json_parser_unmatched_symbol@@Base+0xe9>
  41e96c:	movzx  eax,BYTE PTR [rsi]
  41e96f:	cmp    al,0x5c
  41e971:	jne    41e960 <flatcc_json_parser_unmatched_symbol@@Base+0xa0>
  41e973:	mov    rax,rbx
  41e976:	sub    rax,rsi
  41e979:	cmp    rax,0x2
  41e97d:	jl     41e9ac <flatcc_json_parser_unmatched_symbol@@Base+0xec>
  41e97f:	inc    rsi
  41e982:	jmp    41e964 <flatcc_json_parser_unmatched_symbol@@Base+0xa4>
  41e984:	inc    rsi
  41e987:	jmp    41e9a4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  41e989:	mov    rsi,rbx
  41e98c:	cmp    al,0x2e
  41e98e:	jne    41e9a4 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  41e990:	cmp    DWORD PTR [r14+0x20],0x0
  41e995:	mov    rax,rbx
  41e998:	jne    41e9d3 <flatcc_json_parser_unmatched_symbol@@Base+0x113>
  41e99a:	mov    DWORD PTR [r14+0x20],0x5
  41e9a2:	jmp    41e9be <flatcc_json_parser_unmatched_symbol@@Base+0xfe>
  41e9a4:	mov    rax,rsi
  41e9a7:	jmp    41e9d3 <flatcc_json_parser_unmatched_symbol@@Base+0x113>
  41e9a9:	mov    rsi,rbx
  41e9ac:	cmp    DWORD PTR [r14+0x20],0x0
  41e9b1:	mov    rax,rbx
  41e9b4:	jne    41e9d3 <flatcc_json_parser_unmatched_symbol@@Base+0x113>
  41e9b6:	mov    DWORD PTR [r14+0x20],0x14
  41e9be:	mov    eax,DWORD PTR [r14+0x8]
  41e9c2:	mov    ecx,esi
  41e9c4:	sub    ecx,eax
  41e9c6:	inc    ecx
  41e9c8:	mov    DWORD PTR [r14+0x1c],ecx
  41e9cc:	mov    QWORD PTR [r14+0x38],rsi
  41e9d0:	mov    rax,rbx
  41e9d3:	mov    rcx,rbx
  41e9d6:	sub    rcx,rax
  41e9d9:	cmp    rcx,0x2
  41e9dd:	jl     41e9f6 <flatcc_json_parser_unmatched_symbol@@Base+0x136>
  41e9df:	cmp    BYTE PTR [rax],0x20
  41e9e2:	jg     41ea04 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
  41e9e4:	jne    41e9f6 <flatcc_json_parser_unmatched_symbol@@Base+0x136>
  41e9e6:	cmp    BYTE PTR [rax+0x1],0x20
  41e9ea:	jle    41e9f6 <flatcc_json_parser_unmatched_symbol@@Base+0x136>
  41e9ec:	inc    rax
  41e9ef:	cmp    rax,rbx
  41e9f2:	jne    41ea09 <flatcc_json_parser_unmatched_symbol@@Base+0x149>
  41e9f4:	jmp    41ea31 <flatcc_json_parser_unmatched_symbol@@Base+0x171>
  41e9f6:	mov    rdi,r14
  41e9f9:	mov    rsi,rax
  41e9fc:	mov    rdx,rbx
  41e9ff:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41ea04:	cmp    rax,rbx
  41ea07:	je     41ea31 <flatcc_json_parser_unmatched_symbol@@Base+0x171>
  41ea09:	cmp    BYTE PTR [rax],0x3a
  41ea0c:	jne    41ea31 <flatcc_json_parser_unmatched_symbol@@Base+0x171>
  41ea0e:	lea    rsi,[rax+0x1]
  41ea12:	mov    rcx,rbx
  41ea15:	sub    rcx,rsi
  41ea18:	cmp    rcx,0x2
  41ea1c:	jl     41ea5d <flatcc_json_parser_unmatched_symbol@@Base+0x19d>
  41ea1e:	cmp    BYTE PTR [rsi],0x20
  41ea21:	jg     41ea6b <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  41ea23:	jne    41ea5d <flatcc_json_parser_unmatched_symbol@@Base+0x19d>
  41ea25:	cmp    BYTE PTR [rax+0x2],0x20
  41ea29:	jle    41ea5d <flatcc_json_parser_unmatched_symbol@@Base+0x19d>
  41ea2b:	add    rax,0x2
  41ea2f:	jmp    41ea68 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
  41ea31:	cmp    DWORD PTR [r14+0x20],0x0
  41ea36:	jne    41ea52 <flatcc_json_parser_unmatched_symbol@@Base+0x192>
  41ea38:	mov    DWORD PTR [r14+0x20],0x4
  41ea40:	mov    ecx,DWORD PTR [r14+0x8]
  41ea44:	mov    edx,eax
  41ea46:	sub    edx,ecx
  41ea48:	inc    edx
  41ea4a:	mov    DWORD PTR [r14+0x1c],edx
  41ea4e:	mov    QWORD PTR [r14+0x38],rax
  41ea52:	mov    rax,rbx
  41ea55:	add    rsp,0x8
  41ea59:	pop    rbx
  41ea5a:	pop    r14
  41ea5c:	ret    
  41ea5d:	mov    rdi,r14
  41ea60:	mov    rdx,rbx
  41ea63:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41ea68:	mov    rsi,rax
  41ea6b:	mov    rdi,r14
  41ea6e:	mov    rdx,rbx
  41ea71:	add    rsp,0x8
  41ea75:	pop    rbx
  41ea76:	pop    r14
  41ea78:	jmp    41ea80 <flatcc_json_parser_generic_json@@Base>
  41ea7d:	nop    DWORD PTR [rax]

000000000041ea80 <flatcc_json_parser_generic_json@@Base>:
  41ea80:	push   rbp
  41ea81:	push   r15
  41ea83:	push   r14
  41ea85:	push   r13
  41ea87:	push   r12
  41ea89:	push   rbx
  41ea8a:	sub    rsp,0x238
  41ea91:	mov    rbx,rsi
  41ea94:	cmp    rsi,rdx
  41ea97:	je     41f56a <flatcc_json_parser_generic_json@@Base+0xaea>
  41ea9d:	mov    r12,rdx
  41eaa0:	mov    r14,rdi
  41eaa3:	lea    rax,[rsp+0x30]
  41eaa8:	lea    r15,[rdi+0x20]
  41eaac:	lea    rcx,[rdi+0x8]
  41eab0:	mov    QWORD PTR [rsp+0x8],rcx
  41eab5:	lea    rcx,[rdi+0x1c]
  41eab9:	mov    QWORD PTR [rsp+0x10],rcx
  41eabe:	lea    rcx,[rdi+0x38]
  41eac2:	mov    QWORD PTR [rsp+0x18],rcx
  41eac7:	lea    rcx,[rdx-0x1]
  41eacb:	mov    QWORD PTR [rsp+0x20],rcx
  41ead0:	xor    ebp,ebp
  41ead2:	test   rbp,rbp
  41ead5:	je     41ece3 <flatcc_json_parser_generic_json@@Base+0x263>
  41eadb:	cmp    BYTE PTR [rax-0x1],0x7d
  41eadf:	jne    41ece3 <flatcc_json_parser_generic_json@@Base+0x263>
  41eae5:	mov    al,BYTE PTR [rbx]
  41eae7:	cmp    al,0x2e
  41eae9:	je     41eb40 <flatcc_json_parser_generic_json@@Base+0xc0>
  41eaeb:	cmp    al,0x22
  41eaed:	jne    41eb7f <flatcc_json_parser_generic_json@@Base+0xff>
  41eaf3:	inc    rbx
  41eaf6:	mov    DWORD PTR [r14+0x14],0x0
  41eafe:	mov    rcx,r12
  41eb01:	cmp    rbx,r12
  41eb04:	jne    41eb24 <flatcc_json_parser_generic_json@@Base+0xa4>
  41eb06:	jmp    41ec2c <flatcc_json_parser_generic_json@@Base+0x1ac>
  41eb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb10:	cmp    al,0x22
  41eb12:	je     41ebe5 <flatcc_json_parser_generic_json@@Base+0x165>
  41eb18:	inc    rbx
  41eb1b:	cmp    rbx,r12
  41eb1e:	je     41ebea <flatcc_json_parser_generic_json@@Base+0x16a>
  41eb24:	movzx  eax,BYTE PTR [rbx]
  41eb27:	cmp    al,0x5c
  41eb29:	jne    41eb10 <flatcc_json_parser_generic_json@@Base+0x90>
  41eb2b:	mov    rax,r12
  41eb2e:	sub    rax,rbx
  41eb31:	cmp    rax,0x2
  41eb35:	jl     41ec29 <flatcc_json_parser_generic_json@@Base+0x1a9>
  41eb3b:	inc    rbx
  41eb3e:	jmp    41eb18 <flatcc_json_parser_generic_json@@Base+0x98>
  41eb40:	cmp    DWORD PTR [r15],0x0
  41eb44:	jne    41eb69 <flatcc_json_parser_generic_json@@Base+0xe9>
  41eb46:	mov    DWORD PTR [r15],0x5
  41eb4d:	mov    rax,QWORD PTR [rsp+0x8]
  41eb52:	mov    eax,DWORD PTR [rax]
  41eb54:	mov    ecx,ebx
  41eb56:	sub    ecx,eax
  41eb58:	inc    ecx
  41eb5a:	mov    rax,QWORD PTR [rsp+0x10]
  41eb5f:	mov    DWORD PTR [rax],ecx
  41eb61:	mov    rax,QWORD PTR [rsp+0x18]
  41eb66:	mov    QWORD PTR [rax],rbx
  41eb69:	cmp    DWORD PTR [r14+0x14],0x0
  41eb6e:	mov    rcx,r12
  41eb71:	mov    rax,r12
  41eb74:	jne    41ec60 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41eb7a:	jmp    41ec2c <flatcc_json_parser_generic_json@@Base+0x1ac>
  41eb7f:	mov    DWORD PTR [r14+0x14],0x1
  41eb87:	mov    rax,r12
  41eb8a:	cmp    rbx,r12
  41eb8d:	je     41ec60 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41eb93:	mov    cl,BYTE PTR [rbx]
  41eb95:	mov    rax,rbx
  41eb98:	cmp    cl,0x21
  41eb9b:	jl     41ec60 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41eba1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ebab:	nop    DWORD PTR [rax+rax*1+0x0]
  41ebb0:	mov    eax,ecx
  41ebb2:	cmp    cl,0x2e
  41ebb5:	je     41ebd0 <flatcc_json_parser_generic_json@@Base+0x150>
  41ebb7:	cmp    al,0x5f
  41ebb9:	je     41ebd0 <flatcc_json_parser_generic_json@@Base+0x150>
  41ebbb:	lea    ecx,[rax-0x30]
  41ebbe:	cmp    cl,0x9
  41ebc1:	jbe    41ebd0 <flatcc_json_parser_generic_json@@Base+0x150>
  41ebc3:	mov    ecx,eax
  41ebc5:	or     cl,0x20
  41ebc8:	add    cl,0x9f
  41ebcb:	cmp    cl,0x1a
  41ebce:	jae    41ebf2 <flatcc_json_parser_generic_json@@Base+0x172>
  41ebd0:	cmp    QWORD PTR [rsp+0x20],rbx
  41ebd5:	je     41ebef <flatcc_json_parser_generic_json@@Base+0x16f>
  41ebd7:	movzx  ecx,BYTE PTR [rbx+0x1]
  41ebdb:	inc    rbx
  41ebde:	cmp    cl,0x21
  41ebe1:	jge    41ebb0 <flatcc_json_parser_generic_json@@Base+0x130>
  41ebe3:	jmp    41ebf2 <flatcc_json_parser_generic_json@@Base+0x172>
  41ebe5:	inc    rbx
  41ebe8:	jmp    41ec24 <flatcc_json_parser_generic_json@@Base+0x1a4>
  41ebea:	mov    rcx,r12
  41ebed:	jmp    41ec2c <flatcc_json_parser_generic_json@@Base+0x1ac>
  41ebef:	mov    rbx,r12
  41ebf2:	cmp    al,0x2e
  41ebf4:	jne    41ec24 <flatcc_json_parser_generic_json@@Base+0x1a4>
  41ebf6:	cmp    DWORD PTR [r15],0x0
  41ebfa:	mov    rax,r12
  41ebfd:	jne    41ec60 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41ebff:	mov    DWORD PTR [r15],0x5
  41ec06:	mov    rax,QWORD PTR [rsp+0x8]
  41ec0b:	mov    eax,DWORD PTR [rax]
  41ec0d:	mov    ecx,ebx
  41ec0f:	sub    ecx,eax
  41ec11:	inc    ecx
  41ec13:	mov    rax,QWORD PTR [rsp+0x10]
  41ec18:	mov    DWORD PTR [rax],ecx
  41ec1a:	mov    rax,QWORD PTR [rsp+0x18]
  41ec1f:	mov    QWORD PTR [rax],rbx
  41ec22:	jmp    41ec58 <flatcc_json_parser_generic_json@@Base+0x1d8>
  41ec24:	mov    rax,rbx
  41ec27:	jmp    41ec60 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41ec29:	mov    rcx,rbx
  41ec2c:	cmp    DWORD PTR [r15],0x0
  41ec30:	mov    rax,r12
  41ec33:	jne    41ec60 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41ec35:	mov    DWORD PTR [r15],0x14
  41ec3c:	mov    rax,QWORD PTR [rsp+0x8]
  41ec41:	mov    eax,DWORD PTR [rax]
  41ec43:	mov    edx,ecx
  41ec45:	sub    edx,eax
  41ec47:	inc    edx
  41ec49:	mov    rax,QWORD PTR [rsp+0x10]
  41ec4e:	mov    DWORD PTR [rax],edx
  41ec50:	mov    rax,QWORD PTR [rsp+0x18]
  41ec55:	mov    QWORD PTR [rax],rcx
  41ec58:	mov    rax,r12
  41ec5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ec60:	mov    rcx,r12
  41ec63:	sub    rcx,rax
  41ec66:	cmp    rcx,0x2
  41ec6a:	jl     41ec86 <flatcc_json_parser_generic_json@@Base+0x206>
  41ec6c:	cmp    BYTE PTR [rax],0x20
  41ec6f:	jg     41ec94 <flatcc_json_parser_generic_json@@Base+0x214>
  41ec71:	jne    41ec86 <flatcc_json_parser_generic_json@@Base+0x206>
  41ec73:	cmp    BYTE PTR [rax+0x1],0x20
  41ec77:	jle    41ec86 <flatcc_json_parser_generic_json@@Base+0x206>
  41ec79:	inc    rax
  41ec7c:	cmp    rax,r12
  41ec7f:	jne    41ec9d <flatcc_json_parser_generic_json@@Base+0x21d>
  41ec81:	jmp    41f57f <flatcc_json_parser_generic_json@@Base+0xaff>
  41ec86:	mov    rdi,r14
  41ec89:	mov    rsi,rax
  41ec8c:	mov    rdx,r12
  41ec8f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41ec94:	cmp    rax,r12
  41ec97:	je     41f57f <flatcc_json_parser_generic_json@@Base+0xaff>
  41ec9d:	cmp    BYTE PTR [rax],0x3a
  41eca0:	jne    41f58e <flatcc_json_parser_generic_json@@Base+0xb0e>
  41eca6:	lea    r13,[rax+0x1]
  41ecaa:	mov    rcx,r12
  41ecad:	sub    rcx,r13
  41ecb0:	cmp    rcx,0x2
  41ecb4:	jl     41ecd2 <flatcc_json_parser_generic_json@@Base+0x252>
  41ecb6:	mov    cl,BYTE PTR [r13+0x0]
  41ecba:	cmp    cl,0x20
  41ecbd:	jg     41ece8 <flatcc_json_parser_generic_json@@Base+0x268>
  41ecbf:	jne    41ecd2 <flatcc_json_parser_generic_json@@Base+0x252>
  41ecc1:	mov    cl,BYTE PTR [rax+0x2]
  41ecc4:	cmp    cl,0x20
  41ecc7:	jle    41ecd2 <flatcc_json_parser_generic_json@@Base+0x252>
  41ecc9:	add    rax,0x2
  41eccd:	mov    r13,rax
  41ecd0:	jmp    41ece8 <flatcc_json_parser_generic_json@@Base+0x268>
  41ecd2:	mov    rdi,r14
  41ecd5:	mov    rsi,r13
  41ecd8:	mov    rdx,r12
  41ecdb:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41ece0:	mov    rbx,rax
  41ece3:	mov    cl,BYTE PTR [rbx]
  41ece5:	mov    r13,rbx
  41ece8:	movsx  eax,cl
  41eceb:	lea    edx,[rax-0x30]
  41ecee:	cmp    edx,0xa
  41ecf1:	jae    41ed50 <flatcc_json_parser_generic_json@@Base+0x2d0>
  41ecf3:	cmp    r13,r12
  41ecf6:	je     41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41ecfc:	cmp    cl,0x2d
  41ecff:	jne    41ed11 <flatcc_json_parser_generic_json@@Base+0x291>
  41ed01:	inc    r13
  41ed04:	cmp    r13,r12
  41ed07:	je     41f156 <flatcc_json_parser_generic_json@@Base+0x6d6>
  41ed0d:	mov    cl,BYTE PTR [r13+0x0]
  41ed11:	cmp    cl,0x30
  41ed14:	jne    41ed68 <flatcc_json_parser_generic_json@@Base+0x2e8>
  41ed16:	inc    r13
  41ed19:	mov    rcx,r12
  41ed1c:	cmp    r13,r12
  41ed1f:	je     41f245 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41ed25:	mov    al,BYTE PTR [r13+0x0]
  41ed29:	cmp    al,0x2e
  41ed2b:	jne    41f0c7 <flatcc_json_parser_generic_json@@Base+0x647>
  41ed31:	mov    al,BYTE PTR [r13+0x1]
  41ed35:	add    al,0xd0
  41ed37:	cmp    al,0xa
  41ed39:	jb     41f082 <flatcc_json_parser_generic_json@@Base+0x602>
  41ed3f:	cmp    DWORD PTR [r15],0x0
  41ed43:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41ed49:	inc    r13
  41ed4c:	jmp    41ed7e <flatcc_json_parser_generic_json@@Base+0x2fe>
  41ed4e:	xchg   ax,ax
  41ed50:	cmp    eax,0x5a
  41ed53:	jg     41eda7 <flatcc_json_parser_generic_json@@Base+0x327>
  41ed55:	cmp    eax,0x22
  41ed58:	je     41ee3c <flatcc_json_parser_generic_json@@Base+0x3bc>
  41ed5e:	cmp    eax,0x2d
  41ed61:	je     41ecf3 <flatcc_json_parser_generic_json@@Base+0x273>
  41ed63:	jmp    41ef8e <flatcc_json_parser_generic_json@@Base+0x50e>
  41ed68:	add    cl,0xcf
  41ed6b:	cmp    cl,0x8
  41ed6e:	jbe    41ee0e <flatcc_json_parser_generic_json@@Base+0x38e>
  41ed74:	cmp    DWORD PTR [r15],0x0
  41ed78:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41ed7e:	mov    DWORD PTR [r15],0x6
  41ed85:	mov    rax,QWORD PTR [rsp+0x8]
  41ed8a:	mov    eax,DWORD PTR [rax]
  41ed8c:	mov    ecx,r13d
  41ed8f:	sub    ecx,eax
  41ed91:	inc    ecx
  41ed93:	mov    rax,QWORD PTR [rsp+0x10]
  41ed98:	mov    DWORD PTR [rax],ecx
  41ed9a:	mov    rax,QWORD PTR [rsp+0x18]
  41ed9f:	mov    QWORD PTR [rax],r13
  41eda2:	jmp    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41eda7:	cmp    eax,0x5b
  41edaa:	je     41ef39 <flatcc_json_parser_generic_json@@Base+0x4b9>
  41edb0:	cmp    eax,0x7b
  41edb3:	jne    41ef8e <flatcc_json_parser_generic_json@@Base+0x50e>
  41edb9:	cmp    rbp,0x200
  41edc0:	je     41f5b9 <flatcc_json_parser_generic_json@@Base+0xb39>
  41edc6:	mov    BYTE PTR [rsp+rbp*1+0x30],0x7d
  41edcb:	lea    rbx,[r13+0x1]
  41edcf:	mov    rax,r12
  41edd2:	sub    rax,rbx
  41edd5:	cmp    rax,0x2
  41edd9:	jl     41f02c <flatcc_json_parser_generic_json@@Base+0x5ac>
  41eddf:	cmp    BYTE PTR [rbx],0x20
  41ede2:	jg     41f03d <flatcc_json_parser_generic_json@@Base+0x5bd>
  41ede8:	jne    41f02c <flatcc_json_parser_generic_json@@Base+0x5ac>
  41edee:	cmp    BYTE PTR [r13+0x2],0x20
  41edf3:	jle    41f02c <flatcc_json_parser_generic_json@@Base+0x5ac>
  41edf9:	add    r13,0x2
  41edfd:	mov    rbx,r13
  41ee00:	cmp    rbx,r12
  41ee03:	jne    41f046 <flatcc_json_parser_generic_json@@Base+0x5c6>
  41ee09:	jmp    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41ee0e:	mov    rcx,QWORD PTR [rsp+0x20]
  41ee13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee1d:	nop    DWORD PTR [rax]
  41ee20:	cmp    rcx,r13
  41ee23:	je     41f0b5 <flatcc_json_parser_generic_json@@Base+0x635>
  41ee29:	movzx  eax,BYTE PTR [r13+0x1]
  41ee2e:	inc    r13
  41ee31:	add    al,0xd0
  41ee33:	cmp    al,0xa
  41ee35:	jb     41ee20 <flatcc_json_parser_generic_json@@Base+0x3a0>
  41ee37:	jmp    41ed19 <flatcc_json_parser_generic_json@@Base+0x299>
  41ee3c:	cmp    cl,0x22
  41ee3f:	jne    41f189 <flatcc_json_parser_generic_json@@Base+0x709>
  41ee45:	cmp    r13,r12
  41ee48:	je     41f189 <flatcc_json_parser_generic_json@@Base+0x709>
  41ee4e:	inc    r13
  41ee51:	mov    rax,r12
  41ee54:	cmp    r13,r12
  41ee57:	jne    41ee83 <flatcc_json_parser_generic_json@@Base+0x403>
  41ee59:	jmp    41f217 <flatcc_json_parser_generic_json@@Base+0x797>
  41ee5e:	cmp    DWORD PTR [r15],0x0
  41ee62:	mov    rsi,r12
  41ee65:	je     41eebb <flatcc_json_parser_generic_json@@Base+0x43b>
  41ee67:	mov    rdi,r14
  41ee6a:	mov    rdx,r12
  41ee6d:	lea    rcx,[rsp+0x2c]
  41ee72:	call   41e470 <flatcc_json_parser_string_escape@@Base>
  41ee77:	mov    r13,rax
  41ee7a:	cmp    rax,r12
  41ee7d:	je     41f1b7 <flatcc_json_parser_generic_json@@Base+0x737>
  41ee83:	mov    al,BYTE PTR [r13+0x0]
  41ee87:	cmp    al,0x22
  41ee89:	je     41f200 <flatcc_json_parser_generic_json@@Base+0x780>
  41ee8f:	cmp    al,0x20
  41ee91:	mov    rcx,QWORD PTR [rsp+0x20]
  41ee96:	jb     41ee5e <flatcc_json_parser_generic_json@@Base+0x3de>
  41ee98:	nop    DWORD PTR [rax+rax*1+0x0]
  41eea0:	cmp    al,0x22
  41eea2:	je     41eee4 <flatcc_json_parser_generic_json@@Base+0x464>
  41eea4:	cmp    al,0x5c
  41eea6:	je     41eee4 <flatcc_json_parser_generic_json@@Base+0x464>
  41eea8:	cmp    rcx,r13
  41eeab:	je     41ef00 <flatcc_json_parser_generic_json@@Base+0x480>
  41eead:	movzx  eax,BYTE PTR [r13+0x1]
  41eeb2:	inc    r13
  41eeb5:	cmp    al,0x20
  41eeb7:	jae    41eea0 <flatcc_json_parser_generic_json@@Base+0x420>
  41eeb9:	jmp    41ee5e <flatcc_json_parser_generic_json@@Base+0x3de>
  41eebb:	mov    DWORD PTR [r15],0x11
  41eec2:	mov    rax,QWORD PTR [rsp+0x8]
  41eec7:	mov    eax,DWORD PTR [rax]
  41eec9:	mov    ecx,r13d
  41eecc:	sub    ecx,eax
  41eece:	inc    ecx
  41eed0:	mov    rax,QWORD PTR [rsp+0x10]
  41eed5:	mov    DWORD PTR [rax],ecx
  41eed7:	mov    rax,QWORD PTR [rsp+0x18]
  41eedc:	mov    QWORD PTR [rax],r13
  41eedf:	mov    rsi,r12
  41eee2:	jmp    41ee67 <flatcc_json_parser_generic_json@@Base+0x3e7>
  41eee4:	mov    rsi,r12
  41eee7:	cmp    r12,r13
  41eeea:	je     41ee67 <flatcc_json_parser_generic_json@@Base+0x3e7>
  41eef0:	mov    rsi,r13
  41eef3:	cmp    al,0x22
  41eef5:	jne    41ee67 <flatcc_json_parser_generic_json@@Base+0x3e7>
  41eefb:	jmp    41f200 <flatcc_json_parser_generic_json@@Base+0x780>
  41ef00:	cmp    DWORD PTR [r15],0x0
  41ef04:	mov    rsi,r12
  41ef07:	jne    41ee67 <flatcc_json_parser_generic_json@@Base+0x3e7>
  41ef0d:	mov    DWORD PTR [r15],0x14
  41ef14:	mov    rax,QWORD PTR [rsp+0x8]
  41ef19:	mov    eax,DWORD PTR [rax]
  41ef1b:	mov    ecx,r12d
  41ef1e:	sub    ecx,eax
  41ef20:	inc    ecx
  41ef22:	mov    rax,QWORD PTR [rsp+0x10]
  41ef27:	mov    DWORD PTR [rax],ecx
  41ef29:	mov    rax,QWORD PTR [rsp+0x18]
  41ef2e:	mov    QWORD PTR [rax],r12
  41ef31:	mov    rsi,r12
  41ef34:	jmp    41ee67 <flatcc_json_parser_generic_json@@Base+0x3e7>
  41ef39:	cmp    rbp,0x200
  41ef40:	je     41f5b9 <flatcc_json_parser_generic_json@@Base+0xb39>
  41ef46:	mov    BYTE PTR [rsp+rbp*1+0x30],0x5d
  41ef4b:	lea    rbx,[r13+0x1]
  41ef4f:	mov    rax,r12
  41ef52:	sub    rax,rbx
  41ef55:	cmp    rax,0x2
  41ef59:	jl     41f057 <flatcc_json_parser_generic_json@@Base+0x5d7>
  41ef5f:	cmp    BYTE PTR [rbx],0x20
  41ef62:	jg     41f068 <flatcc_json_parser_generic_json@@Base+0x5e8>
  41ef68:	jne    41f057 <flatcc_json_parser_generic_json@@Base+0x5d7>
  41ef6e:	cmp    BYTE PTR [r13+0x2],0x20
  41ef73:	jle    41f057 <flatcc_json_parser_generic_json@@Base+0x5d7>
  41ef79:	add    r13,0x2
  41ef7d:	mov    rbx,r13
  41ef80:	cmp    rbx,r12
  41ef83:	jne    41f071 <flatcc_json_parser_generic_json@@Base+0x5f1>
  41ef89:	jmp    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41ef8e:	mov    rbx,r12
  41ef91:	cmp    r13,r12
  41ef94:	je     41f01e <flatcc_json_parser_generic_json@@Base+0x59e>
  41ef9a:	mov    rbx,r13
  41ef9d:	test   cl,cl
  41ef9f:	jns    41efb9 <flatcc_json_parser_generic_json@@Base+0x539>
  41efa1:	jmp    41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41efad:	nop    DWORD PTR [rax]
  41efb0:	mov    cl,BYTE PTR [rax]
  41efb2:	mov    rbx,rax
  41efb5:	test   cl,cl
  41efb7:	js     41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efb9:	cmp    cl,0x5f
  41efbc:	je     41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efbe:	cmp    cl,0x2e
  41efc1:	je     41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efc3:	lea    eax,[rcx-0x30]
  41efc6:	cmp    al,0x9
  41efc8:	jbe    41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efca:	mov    eax,ecx
  41efcc:	or     al,0x20
  41efce:	add    al,0x9f
  41efd0:	cmp    al,0x19
  41efd2:	jbe    41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efd4:	mov    rax,r12
  41efd7:	sub    rax,rbx
  41efda:	cmp    rax,0x2
  41efde:	jl     41efed <flatcc_json_parser_generic_json@@Base+0x56d>
  41efe0:	cmp    cl,0x20
  41efe3:	jg     41f01e <flatcc_json_parser_generic_json@@Base+0x59e>
  41efe5:	jne    41efed <flatcc_json_parser_generic_json@@Base+0x56d>
  41efe7:	cmp    BYTE PTR [rbx+0x1],0x20
  41efeb:	jg     41f010 <flatcc_json_parser_generic_json@@Base+0x590>
  41efed:	mov    rdi,r14
  41eff0:	mov    rsi,rbx
  41eff3:	mov    rdx,r12
  41eff6:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41effb:	cmp    rax,rbx
  41effe:	jne    41f016 <flatcc_json_parser_generic_json@@Base+0x596>
  41f000:	jmp    41f01e <flatcc_json_parser_generic_json@@Base+0x59e>
  41f002:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f00c:	nop    DWORD PTR [rax+0x0]
  41f010:	inc    rbx
  41f013:	mov    rax,rbx
  41f016:	cmp    rax,r12
  41f019:	jne    41efb0 <flatcc_json_parser_generic_json@@Base+0x530>
  41f01b:	mov    rbx,r12
  41f01e:	cmp    r13,rbx
  41f021:	jne    41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f027:	jmp    41f5c8 <flatcc_json_parser_generic_json@@Base+0xb48>
  41f02c:	mov    rdi,r14
  41f02f:	mov    rsi,rbx
  41f032:	mov    rdx,r12
  41f035:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f03a:	mov    rbx,rax
  41f03d:	cmp    rbx,r12
  41f040:	je     41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f046:	inc    rbp
  41f049:	cmp    BYTE PTR [rbx],0x7d
  41f04c:	je     41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f052:	jmp    41f515 <flatcc_json_parser_generic_json@@Base+0xa95>
  41f057:	mov    rdi,r14
  41f05a:	mov    rsi,rbx
  41f05d:	mov    rdx,r12
  41f060:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f065:	mov    rbx,rax
  41f068:	cmp    rbx,r12
  41f06b:	je     41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f071:	inc    rbp
  41f074:	cmp    BYTE PTR [rbx],0x5d
  41f077:	je     41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f07d:	jmp    41f515 <flatcc_json_parser_generic_json@@Base+0xa95>
  41f082:	add    r13,0x2
  41f086:	mov    rcx,r12
  41f089:	cmp    r13,r12
  41f08c:	je     41f245 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41f092:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f09c:	nop    DWORD PTR [rax+0x0]
  41f0a0:	movzx  eax,BYTE PTR [r13+0x0]
  41f0a5:	lea    ecx,[rax-0x30]
  41f0a8:	cmp    cl,0x9
  41f0ab:	ja     41f0c7 <flatcc_json_parser_generic_json@@Base+0x647>
  41f0ad:	inc    r13
  41f0b0:	cmp    r12,r13
  41f0b3:	jne    41f0a0 <flatcc_json_parser_generic_json@@Base+0x620>
  41f0b5:	mov    rcx,r12
  41f0b8:	cmp    DWORD PTR [r15],0x0
  41f0bc:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f0c2:	jmp    41f24b <flatcc_json_parser_generic_json@@Base+0x7cb>
  41f0c7:	mov    rcx,r12
  41f0ca:	cmp    r13,r12
  41f0cd:	je     41f245 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41f0d3:	mov    ecx,eax
  41f0d5:	or     cl,0x20
  41f0d8:	cmp    cl,0x65
  41f0db:	jne    41f1c6 <flatcc_json_parser_generic_json@@Base+0x746>
  41f0e1:	lea    rbx,[r13+0x1]
  41f0e5:	cmp    rbx,r12
  41f0e8:	je     41f156 <flatcc_json_parser_generic_json@@Base+0x6d6>
  41f0ea:	mov    al,BYTE PTR [rbx]
  41f0ec:	cmp    al,0x2d
  41f0ee:	je     41f0f4 <flatcc_json_parser_generic_json@@Base+0x674>
  41f0f0:	cmp    al,0x2b
  41f0f2:	jne    41f0fb <flatcc_json_parser_generic_json@@Base+0x67b>
  41f0f4:	add    r13,0x2
  41f0f8:	mov    rbx,r13
  41f0fb:	cmp    rbx,r12
  41f0fe:	je     41f108 <flatcc_json_parser_generic_json@@Base+0x688>
  41f100:	mov    al,BYTE PTR [rbx]
  41f102:	add    al,0xd0
  41f104:	cmp    al,0x9
  41f106:	jbe    41f13a <flatcc_json_parser_generic_json@@Base+0x6ba>
  41f108:	cmp    DWORD PTR [r15],0x0
  41f10c:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f112:	mov    DWORD PTR [r15],0x6
  41f119:	mov    rax,QWORD PTR [rsp+0x8]
  41f11e:	mov    eax,DWORD PTR [rax]
  41f120:	mov    ecx,ebx
  41f122:	sub    ecx,eax
  41f124:	inc    ecx
  41f126:	mov    rax,QWORD PTR [rsp+0x10]
  41f12b:	mov    DWORD PTR [rax],ecx
  41f12d:	mov    rax,QWORD PTR [rsp+0x18]
  41f132:	mov    QWORD PTR [rax],rbx
  41f135:	jmp    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f13a:	cmp    QWORD PTR [rsp+0x20],rbx
  41f13f:	je     41f242 <flatcc_json_parser_generic_json@@Base+0x7c2>
  41f145:	movzx  eax,BYTE PTR [rbx+0x1]
  41f149:	inc    rbx
  41f14c:	lea    ecx,[rax-0x30]
  41f14f:	cmp    cl,0xa
  41f152:	jb     41f13a <flatcc_json_parser_generic_json@@Base+0x6ba>
  41f154:	jmp    41f1c9 <flatcc_json_parser_generic_json@@Base+0x749>
  41f156:	cmp    DWORD PTR [r15],0x0
  41f15a:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f160:	mov    DWORD PTR [r15],0x6
  41f167:	mov    rax,QWORD PTR [rsp+0x8]
  41f16c:	mov    eax,DWORD PTR [rax]
  41f16e:	mov    ecx,r12d
  41f171:	sub    ecx,eax
  41f173:	inc    ecx
  41f175:	mov    rax,QWORD PTR [rsp+0x10]
  41f17a:	mov    DWORD PTR [rax],ecx
  41f17c:	mov    rax,QWORD PTR [rsp+0x18]
  41f181:	mov    QWORD PTR [rax],r12
  41f184:	jmp    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f189:	cmp    DWORD PTR [r15],0x0
  41f18d:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f193:	mov    DWORD PTR [r15],0x10
  41f19a:	mov    rax,QWORD PTR [rsp+0x8]
  41f19f:	mov    eax,DWORD PTR [rax]
  41f1a1:	mov    ecx,r13d
  41f1a4:	sub    ecx,eax
  41f1a6:	inc    ecx
  41f1a8:	mov    rax,QWORD PTR [rsp+0x10]
  41f1ad:	mov    DWORD PTR [rax],ecx
  41f1af:	mov    rax,QWORD PTR [rsp+0x18]
  41f1b4:	mov    QWORD PTR [rax],r13
  41f1b7:	mov    rax,r12
  41f1ba:	cmp    DWORD PTR [r15],0x0
  41f1be:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f1c4:	jmp    41f21d <flatcc_json_parser_generic_json@@Base+0x79d>
  41f1c6:	mov    rbx,r13
  41f1c9:	mov    rcx,r12
  41f1cc:	cmp    rbx,r12
  41f1cf:	je     41f245 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41f1d1:	movsx  eax,al
  41f1d4:	cmp    eax,0x3a
  41f1d7:	ja     41f1ed <flatcc_json_parser_generic_json@@Base+0x76d>
  41f1d9:	movabs rcx,0x400100100002e00
  41f1e3:	bt     rcx,rax
  41f1e7:	jb     41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f1ed:	cmp    eax,0x5d
  41f1f0:	je     41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f1f6:	mov    rcx,rbx
  41f1f9:	cmp    eax,0x7d
  41f1fc:	je     41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f1fe:	jmp    41f245 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41f200:	cmp    r13,r12
  41f203:	je     41f214 <flatcc_json_parser_generic_json@@Base+0x794>
  41f205:	cmp    BYTE PTR [r13+0x0],0x22
  41f20a:	jne    41f214 <flatcc_json_parser_generic_json@@Base+0x794>
  41f20c:	inc    r13
  41f20f:	mov    rbx,r13
  41f212:	jmp    41f273 <flatcc_json_parser_generic_json@@Base+0x7f3>
  41f214:	mov    rax,r13
  41f217:	cmp    DWORD PTR [r15],0x0
  41f21b:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f21d:	mov    DWORD PTR [r15],0x14
  41f224:	mov    rcx,QWORD PTR [rsp+0x8]
  41f229:	mov    ecx,DWORD PTR [rcx]
  41f22b:	mov    edx,eax
  41f22d:	sub    edx,ecx
  41f22f:	inc    edx
  41f231:	mov    rcx,QWORD PTR [rsp+0x10]
  41f236:	mov    DWORD PTR [rcx],edx
  41f238:	mov    rcx,QWORD PTR [rsp+0x18]
  41f23d:	mov    QWORD PTR [rcx],rax
  41f240:	jmp    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f242:	mov    rcx,r12
  41f245:	cmp    DWORD PTR [r15],0x0
  41f249:	jne    41f270 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41f24b:	mov    DWORD PTR [r15],0x6
  41f252:	mov    rax,QWORD PTR [rsp+0x8]
  41f257:	mov    eax,DWORD PTR [rax]
  41f259:	mov    edx,ecx
  41f25b:	sub    edx,eax
  41f25d:	inc    edx
  41f25f:	mov    rax,QWORD PTR [rsp+0x10]
  41f264:	mov    DWORD PTR [rax],edx
  41f266:	mov    rax,QWORD PTR [rsp+0x18]
  41f26b:	mov    QWORD PTR [rax],rcx
  41f26e:	xchg   ax,ax
  41f270:	mov    rbx,r12
  41f273:	cmp    rbx,r12
  41f276:	setne  al
  41f279:	test   rbp,rbp
  41f27c:	setne  cl
  41f27f:	jne    41f2c7 <flatcc_json_parser_generic_json@@Base+0x847>
  41f281:	jmp    41f528 <flatcc_json_parser_generic_json@@Base+0xaa8>
  41f286:	mov    rcx,QWORD PTR [rsp+0x8]
  41f28b:	mov    ecx,DWORD PTR [rcx]
  41f28d:	mov    edx,eax
  41f28f:	sub    edx,ecx
  41f291:	inc    edx
  41f293:	mov    rcx,QWORD PTR [rsp+0x10]
  41f298:	mov    DWORD PTR [rcx],edx
  41f29a:	mov    rcx,QWORD PTR [rsp+0x18]
  41f29f:	mov    QWORD PTR [rcx],rax
  41f2a2:	mov    rbx,r12
  41f2a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2af:	nop
  41f2b0:	cmp    rbx,r12
  41f2b3:	setne  al
  41f2b6:	cmp    rbp,0x1
  41f2ba:	lea    rbp,[rbp-0x1]
  41f2be:	setne  cl
  41f2c1:	je     41f528 <flatcc_json_parser_generic_json@@Base+0xaa8>
  41f2c7:	cmp    rbx,r12
  41f2ca:	je     41f528 <flatcc_json_parser_generic_json@@Base+0xaa8>
  41f2d0:	mov    rax,r12
  41f2d3:	sub    rax,rbx
  41f2d6:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  41f2db:	jne    41f2f0 <flatcc_json_parser_generic_json@@Base+0x870>
  41f2dd:	cmp    rax,0x2
  41f2e1:	jl     41f310 <flatcc_json_parser_generic_json@@Base+0x890>
  41f2e3:	cmp    BYTE PTR [rbx],0x20
  41f2e6:	jle    41f300 <flatcc_json_parser_generic_json@@Base+0x880>
  41f2e8:	mov    rax,rbx
  41f2eb:	jmp    41f31e <flatcc_json_parser_generic_json@@Base+0x89e>
  41f2ed:	nop    DWORD PTR [rax]
  41f2f0:	cmp    rax,0x2
  41f2f4:	jl     41f360 <flatcc_json_parser_generic_json@@Base+0x8e0>
  41f2f6:	cmp    BYTE PTR [rbx],0x20
  41f2f9:	jle    41f350 <flatcc_json_parser_generic_json@@Base+0x8d0>
  41f2fb:	mov    rax,rbx
  41f2fe:	jmp    41f36e <flatcc_json_parser_generic_json@@Base+0x8ee>
  41f300:	jne    41f310 <flatcc_json_parser_generic_json@@Base+0x890>
  41f302:	cmp    BYTE PTR [rbx+0x1],0x20
  41f306:	jle    41f310 <flatcc_json_parser_generic_json@@Base+0x890>
  41f308:	inc    rbx
  41f30b:	mov    rax,rbx
  41f30e:	jmp    41f31e <flatcc_json_parser_generic_json@@Base+0x89e>
  41f310:	mov    rdi,r14
  41f313:	mov    rsi,rbx
  41f316:	mov    rdx,r12
  41f319:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f31e:	mov    rbx,r12
  41f321:	cmp    rax,r12
  41f324:	je     41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f326:	movzx  ecx,BYTE PTR [rax]
  41f329:	cmp    cl,0x2c
  41f32c:	je     41f3c1 <flatcc_json_parser_generic_json@@Base+0x941>
  41f332:	cmp    cl,0x5d
  41f335:	je     41f38b <flatcc_json_parser_generic_json@@Base+0x90b>
  41f337:	cmp    DWORD PTR [r15],0x0
  41f33b:	mov    rbx,r12
  41f33e:	jne    41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f344:	mov    DWORD PTR [r15],0x9
  41f34b:	jmp    41f286 <flatcc_json_parser_generic_json@@Base+0x806>
  41f350:	jne    41f360 <flatcc_json_parser_generic_json@@Base+0x8e0>
  41f352:	cmp    BYTE PTR [rbx+0x1],0x20
  41f356:	jle    41f360 <flatcc_json_parser_generic_json@@Base+0x8e0>
  41f358:	inc    rbx
  41f35b:	mov    rax,rbx
  41f35e:	jmp    41f36e <flatcc_json_parser_generic_json@@Base+0x8ee>
  41f360:	mov    rdi,r14
  41f363:	mov    rsi,rbx
  41f366:	mov    rdx,r12
  41f369:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f36e:	mov    rbx,r12
  41f371:	cmp    rax,r12
  41f374:	je     41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f37a:	movzx  ecx,BYTE PTR [rax]
  41f37d:	cmp    cl,0x2c
  41f380:	je     41f3e4 <flatcc_json_parser_generic_json@@Base+0x964>
  41f382:	cmp    cl,0x7d
  41f385:	jne    41f40b <flatcc_json_parser_generic_json@@Base+0x98b>
  41f38b:	lea    rbx,[rax+0x1]
  41f38f:	mov    rcx,r12
  41f392:	sub    rcx,rbx
  41f395:	cmp    rcx,0x2
  41f399:	jl     41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f39f:	cmp    BYTE PTR [rbx],0x20
  41f3a2:	jg     41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f3a8:	jne    41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f3ae:	cmp    BYTE PTR [rax+0x2],0x20
  41f3b2:	jle    41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f3b8:	add    rax,0x2
  41f3bc:	jmp    41f4be <flatcc_json_parser_generic_json@@Base+0xa3e>
  41f3c1:	lea    rsi,[rax+0x1]
  41f3c5:	mov    rcx,r12
  41f3c8:	sub    rcx,rsi
  41f3cb:	cmp    rcx,0x2
  41f3cf:	jl     41f424 <flatcc_json_parser_generic_json@@Base+0x9a4>
  41f3d1:	cmp    BYTE PTR [rsi],0x20
  41f3d4:	jg     41f432 <flatcc_json_parser_generic_json@@Base+0x9b2>
  41f3d6:	jne    41f424 <flatcc_json_parser_generic_json@@Base+0x9a4>
  41f3d8:	cmp    BYTE PTR [rax+0x2],0x20
  41f3dc:	jle    41f424 <flatcc_json_parser_generic_json@@Base+0x9a4>
  41f3de:	add    rax,0x2
  41f3e2:	jmp    41f42f <flatcc_json_parser_generic_json@@Base+0x9af>
  41f3e4:	lea    rsi,[rax+0x1]
  41f3e8:	mov    rcx,r12
  41f3eb:	sub    rcx,rsi
  41f3ee:	cmp    rcx,0x2
  41f3f2:	jl     41f471 <flatcc_json_parser_generic_json@@Base+0x9f1>
  41f3f4:	cmp    BYTE PTR [rsi],0x20
  41f3f7:	jg     41f47f <flatcc_json_parser_generic_json@@Base+0x9ff>
  41f3fd:	jne    41f471 <flatcc_json_parser_generic_json@@Base+0x9f1>
  41f3ff:	cmp    BYTE PTR [rax+0x2],0x20
  41f403:	jle    41f471 <flatcc_json_parser_generic_json@@Base+0x9f1>
  41f405:	add    rax,0x2
  41f409:	jmp    41f47c <flatcc_json_parser_generic_json@@Base+0x9fc>
  41f40b:	cmp    DWORD PTR [r15],0x0
  41f40f:	mov    rbx,r12
  41f412:	jne    41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f418:	mov    DWORD PTR [r15],0xa
  41f41f:	jmp    41f286 <flatcc_json_parser_generic_json@@Base+0x806>
  41f424:	mov    rdi,r14
  41f427:	mov    rdx,r12
  41f42a:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f42f:	mov    rsi,rax
  41f432:	cmp    rsi,r12
  41f435:	je     41f4c6 <flatcc_json_parser_generic_json@@Base+0xa46>
  41f43b:	cmp    BYTE PTR [rsi],0x5d
  41f43e:	jne    41f512 <flatcc_json_parser_generic_json@@Base+0xa92>
  41f444:	lea    rbx,[rsi+0x1]
  41f448:	mov    rax,r12
  41f44b:	sub    rax,rbx
  41f44e:	cmp    rax,0x2
  41f452:	jl     41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f454:	cmp    BYTE PTR [rbx],0x20
  41f457:	jg     41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f45d:	jne    41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f45f:	cmp    BYTE PTR [rsi+0x2],0x20
  41f463:	jle    41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f465:	add    rsi,0x2
  41f469:	mov    rbx,rsi
  41f46c:	jmp    41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f471:	mov    rdi,r14
  41f474:	mov    rdx,r12
  41f477:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f47c:	mov    rsi,rax
  41f47f:	cmp    rsi,r12
  41f482:	je     41f4dc <flatcc_json_parser_generic_json@@Base+0xa5c>
  41f484:	cmp    BYTE PTR [rsi],0x7d
  41f487:	jne    41f512 <flatcc_json_parser_generic_json@@Base+0xa92>
  41f48d:	lea    rbx,[rsi+0x1]
  41f491:	mov    rax,r12
  41f494:	sub    rax,rbx
  41f497:	cmp    rax,0x2
  41f49b:	jl     41f4b0 <flatcc_json_parser_generic_json@@Base+0xa30>
  41f49d:	cmp    BYTE PTR [rbx],0x20
  41f4a0:	jg     41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f4a6:	je     41f45f <flatcc_json_parser_generic_json@@Base+0x9df>
  41f4a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4b0:	mov    rdi,r14
  41f4b3:	mov    rsi,rbx
  41f4b6:	mov    rdx,r12
  41f4b9:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  41f4be:	mov    rbx,rax
  41f4c1:	jmp    41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f4c6:	cmp    DWORD PTR [r15],0x0
  41f4ca:	mov    rbx,r12
  41f4cd:	jne    41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f4d3:	mov    DWORD PTR [r15],0x9
  41f4da:	jmp    41f4f0 <flatcc_json_parser_generic_json@@Base+0xa70>
  41f4dc:	cmp    DWORD PTR [r15],0x0
  41f4e0:	mov    rbx,r12
  41f4e3:	jne    41f2b0 <flatcc_json_parser_generic_json@@Base+0x830>
  41f4e9:	mov    DWORD PTR [r15],0xa
  41f4f0:	mov    rax,QWORD PTR [rsp+0x8]
  41f4f5:	mov    eax,DWORD PTR [rax]
  41f4f7:	mov    ecx,r12d
  41f4fa:	sub    ecx,eax
  41f4fc:	inc    ecx
  41f4fe:	mov    rax,QWORD PTR [rsp+0x10]
  41f503:	mov    DWORD PTR [rax],ecx
  41f505:	mov    rax,QWORD PTR [rsp+0x18]
  41f50a:	mov    QWORD PTR [rax],r12
  41f50d:	jmp    41f2a2 <flatcc_json_parser_generic_json@@Base+0x822>
  41f512:	mov    rbx,rsi
  41f515:	lea    rax,[rsp+rbp*1]
  41f519:	add    rax,0x30
  41f51d:	cmp    rbx,r12
  41f520:	jne    41ead2 <flatcc_json_parser_generic_json@@Base+0x52>
  41f526:	jmp    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f528:	test   al,al
  41f52a:	jne    41f56a <flatcc_json_parser_generic_json@@Base+0xaea>
  41f52c:	test   cl,cl
  41f52e:	je     41f56a <flatcc_json_parser_generic_json@@Base+0xaea>
  41f530:	cmp    DWORD PTR [r15],0x0
  41f534:	jne    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f536:	xor    eax,eax
  41f538:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  41f53d:	sete   al
  41f540:	mov    ecx,0xa
  41f545:	sub    ecx,eax
  41f547:	mov    DWORD PTR [r15],ecx
  41f54a:	mov    rax,QWORD PTR [rsp+0x8]
  41f54f:	mov    eax,DWORD PTR [rax]
  41f551:	mov    ecx,r12d
  41f554:	sub    ecx,eax
  41f556:	inc    ecx
  41f558:	mov    rax,QWORD PTR [rsp+0x10]
  41f55d:	mov    DWORD PTR [rax],ecx
  41f55f:	mov    rax,QWORD PTR [rsp+0x18]
  41f564:	mov    QWORD PTR [rax],r12
  41f567:	mov    rbx,r12
  41f56a:	mov    rax,rbx
  41f56d:	add    rsp,0x238
  41f574:	pop    rbx
  41f575:	pop    r12
  41f577:	pop    r13
  41f579:	pop    r14
  41f57b:	pop    r15
  41f57d:	pop    rbp
  41f57e:	ret    
  41f57f:	cmp    DWORD PTR [r15],0x0
  41f583:	jne    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f585:	mov    DWORD PTR [r15],0xa
  41f58c:	jmp    41f54a <flatcc_json_parser_generic_json@@Base+0xaca>
  41f58e:	cmp    DWORD PTR [r15],0x0
  41f592:	jne    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f594:	mov    DWORD PTR [r15],0x4
  41f59b:	mov    rcx,QWORD PTR [rsp+0x8]
  41f5a0:	mov    ecx,DWORD PTR [rcx]
  41f5a2:	mov    edx,eax
  41f5a4:	sub    edx,ecx
  41f5a6:	inc    edx
  41f5a8:	mov    rcx,QWORD PTR [rsp+0x10]
  41f5ad:	mov    DWORD PTR [rcx],edx
  41f5af:	mov    rcx,QWORD PTR [rsp+0x18]
  41f5b4:	mov    QWORD PTR [rcx],rax
  41f5b7:	jmp    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f5b9:	cmp    DWORD PTR [r15],0x0
  41f5bd:	jne    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f5bf:	mov    DWORD PTR [r15],0x2
  41f5c6:	jmp    41f5d5 <flatcc_json_parser_generic_json@@Base+0xb55>
  41f5c8:	cmp    DWORD PTR [r15],0x0
  41f5cc:	jne    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f5ce:	mov    DWORD PTR [r15],0x5
  41f5d5:	mov    rax,QWORD PTR [rsp+0x8]
  41f5da:	mov    eax,DWORD PTR [rax]
  41f5dc:	mov    ecx,r13d
  41f5df:	sub    ecx,eax
  41f5e1:	inc    ecx
  41f5e3:	mov    rax,QWORD PTR [rsp+0x10]
  41f5e8:	mov    DWORD PTR [rax],ecx
  41f5ea:	mov    rax,QWORD PTR [rsp+0x18]
  41f5ef:	mov    QWORD PTR [rax],r13
  41f5f2:	jmp    41f567 <flatcc_json_parser_generic_json@@Base+0xae7>
  41f5f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f600 <flatcc_json_parser_double@@Base>:
  41f600:	push   r15
  41f602:	push   r14
  41f604:	push   r12
  41f606:	push   rbx
  41f607:	push   rax
  41f608:	mov    rbx,rsi
  41f60b:	mov    QWORD PTR [rcx],0x0
  41f612:	cmp    rsi,rdx
  41f615:	je     41f6a2 <flatcc_json_parser_double@@Base+0xa2>
  41f61b:	mov    r12,rcx
  41f61e:	mov    r14,rdx
  41f621:	mov    r15,rdi
  41f624:	lea    rax,[rbx+0x1]
  41f628:	xor    ecx,ecx
  41f62a:	cmp    BYTE PTR [rbx],0x2d
  41f62d:	sete   dl
  41f630:	cmovne rax,rbx
  41f634:	mov    rsi,r14
  41f637:	sub    rsi,rax
  41f63a:	cmp    rsi,0x2
  41f63e:	jl     41f65e <flatcc_json_parser_double@@Base+0x5e>
  41f640:	mov    cl,dl
  41f642:	mov    cl,BYTE PTR [rbx+rcx*1]
  41f645:	cmp    cl,0x2e
  41f648:	je     41f655 <flatcc_json_parser_double@@Base+0x55>
  41f64a:	cmp    cl,0x30
  41f64d:	jne    41f65e <flatcc_json_parser_double@@Base+0x5e>
  41f64f:	cmp    BYTE PTR [rax+0x1],0x30
  41f653:	jne    41f65e <flatcc_json_parser_double@@Base+0x5e>
  41f655:	cmp    DWORD PTR [r15+0x20],0x0
  41f65a:	jne    41f6c5 <flatcc_json_parser_double@@Base+0xc5>
  41f65c:	jmp    41f6ab <flatcc_json_parser_double@@Base+0xab>
  41f65e:	mov    esi,r14d
  41f661:	sub    esi,ebx
  41f663:	mov    rdi,rbx
  41f666:	mov    rdx,r12
  41f669:	call   41f6e0 <flatcc_json_parser_double@@Base+0xe0>
  41f66e:	test   rax,rax
  41f671:	je     41f678 <flatcc_json_parser_double@@Base+0x78>
  41f673:	cmp    rax,rbx
  41f676:	jne    41f6c8 <flatcc_json_parser_double@@Base+0xc8>
  41f678:	vmovsd xmm0,QWORD PTR [r12]
  41f67e:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x55ca]        # 424c50 <flatcc_builder_padding_base@@Base+0x1f30>
  41f686:	vucomisd xmm0,QWORD PTR [rip+0x55d2]        # 424c60 <flatcc_builder_padding_base@@Base+0x1f40>
  41f68e:	mov    eax,DWORD PTR [r15+0x20]
  41f692:	jb     41f6a7 <flatcc_json_parser_double@@Base+0xa7>
  41f694:	test   eax,eax
  41f696:	jne    41f6c5 <flatcc_json_parser_double@@Base+0xc5>
  41f698:	mov    DWORD PTR [r15+0x20],0x7
  41f6a0:	jmp    41f6b3 <flatcc_json_parser_double@@Base+0xb3>
  41f6a2:	mov    rax,rbx
  41f6a5:	jmp    41f6c8 <flatcc_json_parser_double@@Base+0xc8>
  41f6a7:	test   eax,eax
  41f6a9:	jne    41f6c5 <flatcc_json_parser_double@@Base+0xc5>
  41f6ab:	mov    DWORD PTR [r15+0x20],0x6
  41f6b3:	mov    eax,DWORD PTR [r15+0x8]
  41f6b7:	mov    ecx,ebx
  41f6b9:	sub    ecx,eax
  41f6bb:	inc    ecx
  41f6bd:	mov    DWORD PTR [r15+0x1c],ecx
  41f6c1:	mov    QWORD PTR [r15+0x38],rbx
  41f6c5:	mov    rax,r14
  41f6c8:	add    rsp,0x8
  41f6cc:	pop    rbx
  41f6cd:	pop    r12
  41f6cf:	pop    r14
  41f6d1:	pop    r15
  41f6d3:	ret    
  41f6d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f6de:	xchg   ax,ax
  41f6e0:	push   rbp
  41f6e1:	push   r15
  41f6e3:	push   r14
  41f6e5:	push   r13
  41f6e7:	push   r12
  41f6e9:	push   rbx
  41f6ea:	sub    rsp,0x18
  41f6ee:	mov    r14,rdx
  41f6f1:	mov    r15,rdi
  41f6f4:	mov    QWORD PTR [rdx],0x0
  41f6fb:	cmp    esi,0x3e9
  41f701:	mov    edx,0x3e8
  41f706:	cmovl  edx,esi
  41f709:	movsxd r13,edx
  41f70c:	lea    r12,[rdi+r13*1]
  41f710:	add    r12,0x1
  41f714:	cmp    r12,rdi
  41f717:	je     41fb25 <flatcc_json_parser_double@@Base+0x525>
  41f71d:	mov    cl,BYTE PTR [r15]
  41f720:	xor    r11d,r11d
  41f723:	mov    rax,r15
  41f726:	cmp    cl,0x2d
  41f729:	jne    41f73f <flatcc_json_parser_double@@Base+0x13f>
  41f72b:	test   edx,edx
  41f72d:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f733:	lea    rax,[r15+0x1]
  41f737:	mov    cl,BYTE PTR [rax]
  41f739:	mov    r11d,0x1
  41f73f:	lea    r8,[r15+r13*1]
  41f743:	cmp    cl,0x30
  41f746:	jne    41f769 <flatcc_json_parser_double@@Base+0x169>
  41f748:	lea    rsi,[rax+0x1]
  41f74c:	cmp    rax,r8
  41f74f:	je     41f7b4 <flatcc_json_parser_double@@Base+0x1b4>
  41f751:	mov    al,BYTE PTR [rsi]
  41f753:	mov    ecx,eax
  41f755:	or     cl,0x20
  41f758:	cmp    cl,0x78
  41f75b:	jne    41f78c <flatcc_json_parser_double@@Base+0x18c>
  41f75d:	mov    QWORD PTR [r14],0x0
  41f764:	jmp    41fb25 <flatcc_json_parser_double@@Base+0x525>
  41f769:	lea    edx,[rcx-0x31]
  41f76c:	cmp    dl,0x9
  41f76f:	jb     41f77f <flatcc_json_parser_double@@Base+0x17f>
  41f771:	xor    eax,eax
  41f773:	test   r11d,r11d
  41f776:	cmovne r15,rax
  41f77a:	jmp    41fb25 <flatcc_json_parser_double@@Base+0x525>
  41f77f:	movsx  rdi,cl
  41f783:	inc    rax
  41f786:	add    rdi,0xffffffffffffffd0
  41f78a:	jmp    41f7a7 <flatcc_json_parser_double@@Base+0x1a7>
  41f78c:	cmp    al,0x30
  41f78e:	jne    41f7b4 <flatcc_json_parser_double@@Base+0x1b4>
  41f790:	mov    rax,rsi
  41f793:	cmp    r8,rsi
  41f796:	je     41f7a2 <flatcc_json_parser_double@@Base+0x1a2>
  41f798:	lea    rsi,[rax+0x1]
  41f79c:	cmp    BYTE PTR [rax+0x1],0x30
  41f7a0:	je     41f790 <flatcc_json_parser_double@@Base+0x190>
  41f7a2:	inc    rax
  41f7a5:	xor    edi,edi
  41f7a7:	mov    rsi,rax
  41f7aa:	cmp    rsi,r12
  41f7ad:	jne    41f7bf <flatcc_json_parser_double@@Base+0x1bf>
  41f7af:	jmp    41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f7b4:	xor    edi,edi
  41f7b6:	cmp    rsi,r12
  41f7b9:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f7bf:	movabs r10,0x1999999999999998
  41f7c9:	mov    rbx,rsi
  41f7cc:	xor    ecx,ecx
  41f7ce:	xchg   ax,ax
  41f7d0:	movsx  rax,BYTE PTR [rbx]
  41f7d4:	lea    edx,[rax-0x30]
  41f7d7:	cmp    dl,0x9
  41f7da:	ja     41f7f5 <flatcc_json_parser_double@@Base+0x1f5>
  41f7dc:	cmp    rdi,r10
  41f7df:	ja     41f7ff <flatcc_json_parser_double@@Base+0x1ff>
  41f7e1:	lea    rdx,[rdi+rdi*4]
  41f7e5:	inc    rbx
  41f7e8:	lea    rdi,[rax+rdx*2]
  41f7ec:	add    rdi,0xffffffffffffffd0
  41f7f0:	cmp    r12,rbx
  41f7f3:	jne    41f7d0 <flatcc_json_parser_double@@Base+0x1d0>
  41f7f5:	cmp    rbx,r12
  41f7f8:	jne    41f817 <flatcc_json_parser_double@@Base+0x217>
  41f7fa:	jmp    41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f7ff:	xor    ecx,ecx
  41f801:	cmp    al,0x34
  41f803:	setg   cl
  41f806:	add    rdi,rcx
  41f809:	mov    ecx,0x1
  41f80e:	cmp    rbx,r12
  41f811:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f817:	mov    r9d,ebx
  41f81a:	sub    r9d,esi
  41f81d:	mov    rbp,r13
  41f820:	sub    rbp,rbx
  41f823:	lea    rdx,[r15+rbp*1]
  41f827:	add    rdx,0x1
  41f82b:	xor    esi,esi
  41f82d:	nop    DWORD PTR [rax]
  41f830:	movzx  eax,BYTE PTR [rbx+rsi*1]
  41f834:	cmp    al,0x30
  41f836:	jne    41f842 <flatcc_json_parser_double@@Base+0x242>
  41f838:	inc    rsi
  41f83b:	cmp    rdx,rsi
  41f83e:	jne    41f830 <flatcc_json_parser_double@@Base+0x230>
  41f840:	jmp    41f894 <flatcc_json_parser_double@@Base+0x294>
  41f842:	add    al,0xcf
  41f844:	cmp    al,0x9
  41f846:	jae    41f894 <flatcc_json_parser_double@@Base+0x294>
  41f848:	lea    rcx,[rsi+0x1]
  41f84c:	not    rsi
  41f84f:	add    rbp,r15
  41f852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f85c:	nop    DWORD PTR [rax+0x0]
  41f860:	mov    rdx,rsi
  41f863:	lea    rax,[rsi+rbp*1]
  41f867:	cmp    rax,0xffffffffffffffff
  41f86b:	je     41f87e <flatcc_json_parser_double@@Base+0x27e>
  41f86d:	movzx  eax,BYTE PTR [rbx+rcx*1]
  41f871:	add    al,0xd0
  41f873:	lea    rsi,[rdx-0x1]
  41f877:	inc    rcx
  41f87a:	cmp    al,0xa
  41f87c:	jb     41f860 <flatcc_json_parser_double@@Base+0x260>
  41f87e:	mov    esi,edx
  41f880:	neg    esi
  41f882:	sub    rbx,rdx
  41f885:	mov    ecx,0x1
  41f88a:	cmp    rbx,r12
  41f88d:	jne    41f8a0 <flatcc_json_parser_double@@Base+0x2a0>
  41f88f:	jmp    41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f894:	add    rbx,rsi
  41f897:	cmp    rbx,r12
  41f89a:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f8a0:	cmp    BYTE PTR [rbx],0x2e
  41f8a3:	jne    41f91d <flatcc_json_parser_double@@Base+0x31d>
  41f8a5:	mov    al,BYTE PTR [rbx+0x1]
  41f8a8:	lea    edx,[rax-0x30]
  41f8ab:	cmp    dl,0x9
  41f8ae:	ja     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f8b4:	lea    rdx,[rbx+0x1]
  41f8b8:	cmp    rbx,r8
  41f8bb:	je     41f9d4 <flatcc_json_parser_double@@Base+0x3d4>
  41f8c1:	mov    QWORD PTR [rsp+0x8],rdx
  41f8c6:	mov    DWORD PTR [rsp+0x4],r11d
  41f8cb:	sub    r13,rbx
  41f8ce:	add    r13,r15
  41f8d1:	add    r13,0xffffffffffffffff
  41f8d5:	xor    r11d,r11d
  41f8d8:	mov    rdx,r11
  41f8db:	cmp    rdi,r10
  41f8de:	ja     41f9e4 <flatcc_json_parser_double@@Base+0x3e4>
  41f8e4:	lea    rdi,[rdi+rdi*4]
  41f8e8:	movsx  rax,al
  41f8ec:	lea    rdi,[rax+rdi*2]
  41f8f0:	add    rdi,0xffffffffffffffd0
  41f8f4:	cmp    r13,rdx
  41f8f7:	je     41f90b <flatcc_json_parser_double@@Base+0x30b>
  41f8f9:	movzx  eax,BYTE PTR [rbx+rdx*1+0x2]
  41f8fe:	lea    ebp,[rax-0x30]
  41f901:	lea    r11,[rdx+0x1]
  41f905:	cmp    bpl,0xa
  41f909:	jb     41f8d8 <flatcc_json_parser_double@@Base+0x2d8>
  41f90b:	add    rbx,rdx
  41f90e:	add    rbx,0x2
  41f912:	not    edx
  41f914:	add    edx,esi
  41f916:	mov    esi,edx
  41f918:	jmp    41fa03 <flatcc_json_parser_double@@Base+0x403>
  41f91d:	mov    edx,r9d
  41f920:	xor    r9d,r9d
  41f923:	cmp    rbx,r12
  41f926:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f92c:	mov    al,BYTE PTR [rbx]
  41f92e:	or     al,0x20
  41f930:	cmp    al,0x65
  41f932:	jne    41f96f <flatcc_json_parser_double@@Base+0x36f>
  41f934:	mov    rax,r12
  41f937:	sub    rax,rbx
  41f93a:	xor    r9d,r9d
  41f93d:	cmp    rax,0x2
  41f941:	jl     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f947:	mov    al,BYTE PTR [rbx+0x1]
  41f94a:	cmp    al,0x2d
  41f94c:	je     41fabf <flatcc_json_parser_double@@Base+0x4bf>
  41f952:	cmp    al,0x2b
  41f954:	jne    41fad0 <flatcc_json_parser_double@@Base+0x4d0>
  41f95a:	add    rbx,0x2
  41f95e:	xor    r9d,r9d
  41f961:	cmp    rbx,r12
  41f964:	jne    41fad3 <flatcc_json_parser_double@@Base+0x4d3>
  41f96a:	jmp    41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f96f:	xor    r10d,r10d
  41f972:	cmp    rbx,r12
  41f975:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f97b:	mov    eax,r10d
  41f97e:	neg    eax
  41f980:	test   r9d,r9d
  41f983:	cmove  eax,r10d
  41f987:	vxorpd xmm0,xmm0,xmm0
  41f98b:	test   rdi,rdi
  41f98e:	je     41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41f990:	add    esi,edx
  41f992:	add    esi,eax
  41f994:	cmp    esi,0xfffffebc
  41f99a:	jl     41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41f99c:	cmp    esi,0x136
  41f9a2:	jle    41fa65 <flatcc_json_parser_double@@Base+0x465>
  41f9a8:	vmovsd xmm0,QWORD PTR [rip+0x52b0]        # 424c60 <flatcc_builder_padding_base@@Base+0x1f40>
  41f9b0:	vmovsd QWORD PTR [r14],xmm0
  41f9b5:	test   r11d,r11d
  41f9b8:	je     41f9cc <flatcc_json_parser_double@@Base+0x3cc>
  41f9ba:	vmovsd xmm0,QWORD PTR [r14]
  41f9bf:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x3069]        # 422a30 <_IO_stdin_used@@Base+0xa30>
  41f9c7:	vmovlpd QWORD PTR [r14],xmm0
  41f9cc:	mov    r15,rbx
  41f9cf:	jmp    41fb25 <flatcc_json_parser_double@@Base+0x525>
  41f9d4:	mov    rbx,rdx
  41f9d7:	mov    rax,rdx
  41f9da:	cmp    rbx,r12
  41f9dd:	jne    41fa16 <flatcc_json_parser_double@@Base+0x416>
  41f9df:	jmp    41fb22 <flatcc_json_parser_double@@Base+0x522>
  41f9e4:	mov    esi,esi
  41f9e6:	sub    rsi,rdx
  41f9e9:	add    rbx,rdx
  41f9ec:	add    rbx,0x1
  41f9f0:	test   ecx,ecx
  41f9f2:	jne    41fa03 <flatcc_json_parser_double@@Base+0x403>
  41f9f4:	xor    ecx,ecx
  41f9f6:	cmp    al,0x34
  41f9f8:	setg   cl
  41f9fb:	add    rdi,rcx
  41f9fe:	mov    ecx,0x1
  41fa03:	mov    r11d,DWORD PTR [rsp+0x4]
  41fa08:	mov    rax,QWORD PTR [rsp+0x8]
  41fa0d:	cmp    rbx,r12
  41fa10:	je     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41fa16:	mov    edx,ebx
  41fa18:	sub    edx,eax
  41fa1a:	add    edx,r9d
  41fa1d:	movzx  eax,BYTE PTR [rbx]
  41fa20:	cmp    al,0x30
  41fa22:	jne    41fa33 <flatcc_json_parser_double@@Base+0x433>
  41fa24:	inc    esi
  41fa26:	inc    rbx
  41fa29:	cmp    r12,rbx
  41fa2c:	jne    41fa1d <flatcc_json_parser_double@@Base+0x41d>
  41fa2e:	jmp    41f920 <flatcc_json_parser_double@@Base+0x320>
  41fa33:	add    al,0xcf
  41fa35:	cmp    al,0x8
  41fa37:	ja     41f920 <flatcc_json_parser_double@@Base+0x320>
  41fa3d:	mov    rax,rbx
  41fa40:	cmp    r8,rbx
  41fa43:	je     41fa55 <flatcc_json_parser_double@@Base+0x455>
  41fa45:	lea    rbx,[rax+0x1]
  41fa49:	movzx  ecx,BYTE PTR [rax+0x1]
  41fa4d:	add    cl,0xd0
  41fa50:	cmp    cl,0xa
  41fa53:	jb     41fa3d <flatcc_json_parser_double@@Base+0x43d>
  41fa55:	inc    rax
  41fa58:	mov    ecx,0x1
  41fa5d:	mov    rbx,rax
  41fa60:	jmp    41f920 <flatcc_json_parser_double@@Base+0x320>
  41fa65:	mov    rax,rdi
  41fa68:	shr    rax,0x35
  41fa6c:	jne    41fb37 <flatcc_json_parser_double@@Base+0x537>
  41fa72:	cmp    esi,0x16
  41fa75:	ja     41fb37 <flatcc_json_parser_double@@Base+0x537>
  41fa7b:	vmovq  xmm0,rdi
  41fa80:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x2f88]        # 422a10 <_IO_stdin_used@@Base+0xa10>
  41fa88:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x2f90]        # 422a20 <_IO_stdin_used@@Base+0xa20>
  41fa90:	vhaddpd xmm0,xmm0,xmm0
  41fa94:	sub    esi,edx
  41fa96:	add    esi,0x16
  41fa99:	cmp    esi,0x2c
  41fa9c:	ja     41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41faa2:	lea    rax,[rip+0x4913]        # 4243bc <flatcc_builder_padding_base@@Base+0x169c>
  41faa9:	movsxd rcx,DWORD PTR [rax+rsi*4]
  41faad:	add    rcx,rax
  41fab0:	jmp    rcx
  41fab2:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5256]        # 424d10 <flatcc_builder_padding_base@@Base+0x1ff0>
  41faba:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fabf:	add    rbx,0x2
  41fac3:	mov    r9d,0x1
  41fac9:	cmp    rbx,r12
  41facc:	jne    41fad3 <flatcc_json_parser_double@@Base+0x4d3>
  41face:	jmp    41fb22 <flatcc_json_parser_double@@Base+0x522>
  41fad0:	inc    rbx
  41fad3:	movsx  r10d,BYTE PTR [rbx]
  41fad7:	lea    eax,[r10-0x30]
  41fadb:	cmp    al,0x9
  41fadd:	ja     41fb22 <flatcc_json_parser_double@@Base+0x522>
  41fadf:	add    r10d,0xffffffd0
  41fae3:	cmp    rbx,r8
  41fae6:	jne    41faf2 <flatcc_json_parser_double@@Base+0x4f2>
  41fae8:	jmp    41fb16 <flatcc_json_parser_double@@Base+0x516>
  41faea:	inc    rbx
  41faed:	cmp    r8,rbx
  41faf0:	je     41fb16 <flatcc_json_parser_double@@Base+0x516>
  41faf2:	movsx  eax,BYTE PTR [rbx+0x1]
  41faf6:	lea    ebp,[rax-0x30]
  41faf9:	cmp    bpl,0x9
  41fafd:	ja     41fb16 <flatcc_json_parser_double@@Base+0x516>
  41faff:	cmp    r10d,0x7fff
  41fb06:	jg     41faea <flatcc_json_parser_double@@Base+0x4ea>
  41fb08:	lea    ebp,[r10+r10*4]
  41fb0c:	lea    r10d,[rax+rbp*2]
  41fb10:	add    r10d,0xffffffd0
  41fb14:	jmp    41faea <flatcc_json_parser_double@@Base+0x4ea>
  41fb16:	inc    rbx
  41fb19:	cmp    rbx,r12
  41fb1c:	jne    41f97b <flatcc_json_parser_double@@Base+0x37b>
  41fb22:	xor    r15d,r15d
  41fb25:	mov    rax,r15
  41fb28:	add    rsp,0x18
  41fb2c:	pop    rbx
  41fb2d:	pop    r12
  41fb2f:	pop    r13
  41fb31:	pop    r14
  41fb33:	pop    r15
  41fb35:	pop    rbp
  41fb36:	ret    
  41fb37:	mov    r8,r14
  41fb3a:	mov    ebp,r11d
  41fb3d:	call   41ded0 <grisu3_diy_fp_encode_double@@Base>
  41fb42:	mov    r11d,ebp
  41fb45:	test   eax,eax
  41fb47:	jne    41f9b5 <flatcc_json_parser_double@@Base+0x3b5>
  41fb4d:	lea    rsi,[rsp+0x10]
  41fb52:	mov    rdi,r15
  41fb55:	call   404040 <strtod@plt>
  41fb5a:	vmovsd QWORD PTR [r14],xmm0
  41fb5f:	mov    rax,QWORD PTR [rsp+0x10]
  41fb64:	cmp    rax,rbx
  41fb67:	cmovb  rbx,rax
  41fb6b:	jmp    41f9cc <flatcc_json_parser_double@@Base+0x3cc>
  41fb70:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50f0]        # 424c68 <flatcc_builder_padding_base@@Base+0x1f48>
  41fb78:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fb7d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50eb]        # 424c70 <flatcc_builder_padding_base@@Base+0x1f50>
  41fb85:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fb8a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50e6]        # 424c78 <flatcc_builder_padding_base@@Base+0x1f58>
  41fb92:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fb97:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50e1]        # 424c80 <flatcc_builder_padding_base@@Base+0x1f60>
  41fb9f:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fba4:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50dc]        # 424c88 <flatcc_builder_padding_base@@Base+0x1f68>
  41fbac:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbb1:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50d7]        # 424c90 <flatcc_builder_padding_base@@Base+0x1f70>
  41fbb9:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbbe:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50d2]        # 424c98 <flatcc_builder_padding_base@@Base+0x1f78>
  41fbc6:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbcb:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50cd]        # 424ca0 <flatcc_builder_padding_base@@Base+0x1f80>
  41fbd3:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbd8:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50c8]        # 424ca8 <flatcc_builder_padding_base@@Base+0x1f88>
  41fbe0:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbe5:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50c3]        # 424cb0 <flatcc_builder_padding_base@@Base+0x1f90>
  41fbed:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbf2:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50be]        # 424cb8 <flatcc_builder_padding_base@@Base+0x1f98>
  41fbfa:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fbff:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50b9]        # 424cc0 <flatcc_builder_padding_base@@Base+0x1fa0>
  41fc07:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc0c:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50b4]        # 424cc8 <flatcc_builder_padding_base@@Base+0x1fa8>
  41fc14:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc19:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50af]        # 424cd0 <flatcc_builder_padding_base@@Base+0x1fb0>
  41fc21:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc26:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50aa]        # 424cd8 <flatcc_builder_padding_base@@Base+0x1fb8>
  41fc2e:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc33:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50a5]        # 424ce0 <flatcc_builder_padding_base@@Base+0x1fc0>
  41fc3b:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc40:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x50a0]        # 424ce8 <flatcc_builder_padding_base@@Base+0x1fc8>
  41fc48:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc4d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x509b]        # 424cf0 <flatcc_builder_padding_base@@Base+0x1fd0>
  41fc55:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc5a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5096]        # 424cf8 <flatcc_builder_padding_base@@Base+0x1fd8>
  41fc62:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc67:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5091]        # 424d00 <flatcc_builder_padding_base@@Base+0x1fe0>
  41fc6f:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc74:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x508c]        # 424d08 <flatcc_builder_padding_base@@Base+0x1fe8>
  41fc7c:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc81:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x507f]        # 424d08 <flatcc_builder_padding_base@@Base+0x1fe8>
  41fc89:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc8e:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x506a]        # 424d00 <flatcc_builder_padding_base@@Base+0x1fe0>
  41fc96:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fc9b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5055]        # 424cf8 <flatcc_builder_padding_base@@Base+0x1fd8>
  41fca3:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fca8:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5040]        # 424cf0 <flatcc_builder_padding_base@@Base+0x1fd0>
  41fcb0:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fcb5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x502b]        # 424ce8 <flatcc_builder_padding_base@@Base+0x1fc8>
  41fcbd:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fcc2:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5016]        # 424ce0 <flatcc_builder_padding_base@@Base+0x1fc0>
  41fcca:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fccf:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5001]        # 424cd8 <flatcc_builder_padding_base@@Base+0x1fb8>
  41fcd7:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fcdc:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4fec]        # 424cd0 <flatcc_builder_padding_base@@Base+0x1fb0>
  41fce4:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fce9:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4fd7]        # 424cc8 <flatcc_builder_padding_base@@Base+0x1fa8>
  41fcf1:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fcf6:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4fc2]        # 424cc0 <flatcc_builder_padding_base@@Base+0x1fa0>
  41fcfe:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd03:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4fad]        # 424cb8 <flatcc_builder_padding_base@@Base+0x1f98>
  41fd0b:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd10:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f98]        # 424cb0 <flatcc_builder_padding_base@@Base+0x1f90>
  41fd18:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd1d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f83]        # 424ca8 <flatcc_builder_padding_base@@Base+0x1f88>
  41fd25:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd2a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f6e]        # 424ca0 <flatcc_builder_padding_base@@Base+0x1f80>
  41fd32:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd37:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f59]        # 424c98 <flatcc_builder_padding_base@@Base+0x1f78>
  41fd3f:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd44:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f44]        # 424c90 <flatcc_builder_padding_base@@Base+0x1f70>
  41fd4c:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd51:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f2f]        # 424c88 <flatcc_builder_padding_base@@Base+0x1f68>
  41fd59:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd5e:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f1a]        # 424c80 <flatcc_builder_padding_base@@Base+0x1f60>
  41fd66:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd6b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f05]        # 424c78 <flatcc_builder_padding_base@@Base+0x1f58>
  41fd73:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd78:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4ef0]        # 424c70 <flatcc_builder_padding_base@@Base+0x1f50>
  41fd80:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd85:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4edb]        # 424c68 <flatcc_builder_padding_base@@Base+0x1f48>
  41fd8d:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd92:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x4f76]        # 424d10 <flatcc_builder_padding_base@@Base+0x1ff0>
  41fd9a:	jmp    41f9b0 <flatcc_json_parser_double@@Base+0x3b0>
  41fd9f:	nop

000000000041fda0 <flatcc_json_parser_float@@Base>:
  41fda0:	push   r15
  41fda2:	push   r14
  41fda4:	push   r12
  41fda6:	push   rbx
  41fda7:	push   rax
  41fda8:	mov    rbx,rsi
  41fdab:	mov    DWORD PTR [rcx],0x0
  41fdb1:	cmp    rsi,rdx
  41fdb4:	je     41fe48 <flatcc_json_parser_float@@Base+0xa8>
  41fdba:	mov    r12,rcx
  41fdbd:	mov    r14,rdx
  41fdc0:	mov    r15,rdi
  41fdc3:	lea    rax,[rbx+0x1]
  41fdc7:	xor    ecx,ecx
  41fdc9:	cmp    BYTE PTR [rbx],0x2d
  41fdcc:	sete   dl
  41fdcf:	cmovne rax,rbx
  41fdd3:	mov    rsi,r14
  41fdd6:	sub    rsi,rax
  41fdd9:	cmp    rsi,0x2
  41fddd:	jl     41fe04 <flatcc_json_parser_float@@Base+0x64>
  41fddf:	mov    cl,dl
  41fde1:	mov    cl,BYTE PTR [rbx+rcx*1]
  41fde4:	cmp    cl,0x2e
  41fde7:	je     41fdf4 <flatcc_json_parser_float@@Base+0x54>
  41fde9:	cmp    cl,0x30
  41fdec:	jne    41fe04 <flatcc_json_parser_float@@Base+0x64>
  41fdee:	cmp    BYTE PTR [rax+0x1],0x30
  41fdf2:	jne    41fe04 <flatcc_json_parser_float@@Base+0x64>
  41fdf4:	cmp    DWORD PTR [r15+0x20],0x0
  41fdf9:	jne    41feb1 <flatcc_json_parser_float@@Base+0x111>
  41fdff:	jmp    41fe97 <flatcc_json_parser_float@@Base+0xf7>
  41fe04:	mov    esi,r14d
  41fe07:	sub    esi,ebx
  41fe09:	mov    rdx,rsp
  41fe0c:	mov    rdi,rbx
  41fe0f:	call   41f6e0 <flatcc_json_parser_double@@Base+0xe0>
  41fe14:	vmovsd xmm1,QWORD PTR [rsp]
  41fe19:	vcvtsd2ss xmm2,xmm1,xmm1
  41fe1d:	vbroadcastss xmm0,DWORD PTR [rip+0x4ef2]        # 424d18 <flatcc_builder_padding_base@@Base+0x1ff8>
  41fe26:	vandps xmm3,xmm2,xmm0
  41fe2a:	vxorps xmm4,xmm4,xmm4
  41fe2e:	vucomisd xmm4,xmm1
  41fe32:	vmovss xmm4,DWORD PTR [rip+0x4ee6]        # 424d20 <flatcc_builder_padding_base@@Base+0x2000>
  41fe3a:	ja     41fe4d <flatcc_json_parser_float@@Base+0xad>
  41fe3c:	vmovaps xmm1,xmm4
  41fe40:	vucomiss xmm3,xmm4
  41fe44:	jb     41fe5b <flatcc_json_parser_float@@Base+0xbb>
  41fe46:	jmp    41fe5f <flatcc_json_parser_float@@Base+0xbf>
  41fe48:	mov    rax,rbx
  41fe4b:	jmp    41feb4 <flatcc_json_parser_float@@Base+0x114>
  41fe4d:	vmovss xmm1,DWORD PTR [rip+0x4ec7]        # 424d1c <flatcc_builder_padding_base@@Base+0x1ffc>
  41fe55:	vucomiss xmm3,xmm4
  41fe59:	jae    41fe5f <flatcc_json_parser_float@@Base+0xbf>
  41fe5b:	vmovaps xmm1,xmm2
  41fe5f:	cmovae rax,rbx
  41fe63:	vmovss DWORD PTR [r12],xmm1
  41fe69:	test   rax,rax
  41fe6c:	je     41fe73 <flatcc_json_parser_float@@Base+0xd3>
  41fe6e:	cmp    rax,rbx
  41fe71:	jne    41feb4 <flatcc_json_parser_float@@Base+0x114>
  41fe73:	vandps xmm0,xmm1,xmm0
  41fe77:	vucomiss xmm0,DWORD PTR [rip+0x4ea1]        # 424d20 <flatcc_builder_padding_base@@Base+0x2000>
  41fe7f:	mov    eax,DWORD PTR [r15+0x20]
  41fe83:	jb     41fe93 <flatcc_json_parser_float@@Base+0xf3>
  41fe85:	test   eax,eax
  41fe87:	jne    41feb1 <flatcc_json_parser_float@@Base+0x111>
  41fe89:	mov    DWORD PTR [r15+0x20],0x7
  41fe91:	jmp    41fe9f <flatcc_json_parser_float@@Base+0xff>
  41fe93:	test   eax,eax
  41fe95:	jne    41feb1 <flatcc_json_parser_float@@Base+0x111>
  41fe97:	mov    DWORD PTR [r15+0x20],0x6
  41fe9f:	mov    eax,DWORD PTR [r15+0x8]
  41fea3:	mov    ecx,ebx
  41fea5:	sub    ecx,eax
  41fea7:	inc    ecx
  41fea9:	mov    DWORD PTR [r15+0x1c],ecx
  41fead:	mov    QWORD PTR [r15+0x38],rbx
  41feb1:	mov    rax,r14
  41feb4:	add    rsp,0x8
  41feb8:	pop    rbx
  41feb9:	pop    r12
  41febb:	pop    r14
  41febd:	pop    r15
  41febf:	ret    

000000000041fec0 <flatcc_json_parser_integer@@Base>:
  41fec0:	mov    rax,rsi
  41fec3:	cmp    rsi,rdx
  41fec6:	je     41ff5b <flatcc_json_parser_integer@@Base+0x9b>
  41fecc:	xor    r10d,r10d
  41fecf:	cmp    BYTE PTR [rax],0x2d
  41fed2:	sete   r10b
  41fed6:	mov    DWORD PTR [rcx],r10d
  41fed9:	add    r10,rax
  41fedc:	xor    r9d,r9d
  41fedf:	cmp    r10,rdx
  41fee2:	je     41ff51 <flatcc_json_parser_integer@@Base+0x91>
  41fee4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41feee:	xchg   ax,ax
  41fef0:	movsx  r11,BYTE PTR [r10]
  41fef4:	lea    esi,[r11-0x30]
  41fef8:	cmp    sil,0x9
  41fefc:	ja     41ff63 <flatcc_json_parser_integer@@Base+0xa3>
  41fefe:	lea    rsi,[r9+r9*4]
  41ff02:	lea    rsi,[r11+rsi*2]
  41ff06:	add    rsi,0xffffffffffffffd0
  41ff0a:	cmp    r9,rsi
  41ff0d:	ja     41ff6c <flatcc_json_parser_integer@@Base+0xac>
  41ff0f:	inc    r10
  41ff12:	mov    r9,rsi
  41ff15:	cmp    rdx,r10
  41ff18:	jne    41fef0 <flatcc_json_parser_integer@@Base+0x30>
  41ff1a:	xor    ecx,ecx
  41ff1c:	mov    r10,rdx
  41ff1f:	mov    r9,rsi
  41ff22:	cmp    r10,rax
  41ff25:	je     41ff5b <flatcc_json_parser_integer@@Base+0x9b>
  41ff27:	test   cl,cl
  41ff29:	je     41ff5c <flatcc_json_parser_integer@@Base+0x9c>
  41ff2b:	mov    al,BYTE PTR [r10]
  41ff2e:	add    al,0xd2
  41ff30:	cmp    al,0x37
  41ff32:	ja     41ff5c <flatcc_json_parser_integer@@Base+0x9c>
  41ff34:	movzx  eax,al
  41ff37:	movabs rcx,0x80000000800001
  41ff41:	bt     rcx,rax
  41ff45:	jae    41ff5c <flatcc_json_parser_integer@@Base+0x9c>
  41ff47:	cmp    DWORD PTR [rdi+0x20],0x0
  41ff4b:	je     41ff76 <flatcc_json_parser_integer@@Base+0xb6>
  41ff4d:	mov    rax,rdx
  41ff50:	ret    
  41ff51:	mov    r10,rdx
  41ff54:	xor    ecx,ecx
  41ff56:	cmp    r10,rax
  41ff59:	jne    41ff27 <flatcc_json_parser_integer@@Base+0x67>
  41ff5b:	ret    
  41ff5c:	mov    QWORD PTR [r8],r9
  41ff5f:	mov    rax,r10
  41ff62:	ret    
  41ff63:	mov    cl,0x1
  41ff65:	cmp    r10,rax
  41ff68:	jne    41ff27 <flatcc_json_parser_integer@@Base+0x67>
  41ff6a:	jmp    41ff5b <flatcc_json_parser_integer@@Base+0x9b>
  41ff6c:	cmp    DWORD PTR [rdi+0x20],0x0
  41ff70:	je     41ff7f <flatcc_json_parser_integer@@Base+0xbf>
  41ff72:	mov    rax,rdx
  41ff75:	ret    
  41ff76:	mov    DWORD PTR [rdi+0x20],0xc
  41ff7d:	jmp    41ff8e <flatcc_json_parser_integer@@Base+0xce>
  41ff7f:	cmp    rcx,0x1
  41ff83:	mov    eax,0x8
  41ff88:	sbb    eax,0x0
  41ff8b:	mov    DWORD PTR [rdi+0x20],eax
  41ff8e:	mov    eax,DWORD PTR [rdi+0x8]
  41ff91:	mov    ecx,r10d
  41ff94:	sub    ecx,eax
  41ff96:	inc    ecx
  41ff98:	mov    DWORD PTR [rdi+0x1c],ecx
  41ff9b:	mov    QWORD PTR [rdi+0x38],r10
  41ff9f:	mov    rax,rdx
  41ffa2:	ret    
  41ffa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ffad:	nop    DWORD PTR [rax]

000000000041ffb0 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  41ffb0:	push   rbp
  41ffb1:	push   r15
  41ffb3:	push   r14
  41ffb5:	push   r13
  41ffb7:	push   r12
  41ffb9:	push   rbx
  41ffba:	sub    rsp,0x28
  41ffbe:	mov    r12d,r8d
  41ffc1:	mov    r15,rcx
  41ffc4:	mov    r14,rdx
  41ffc7:	mov    r13,rsi
  41ffca:	mov    rbx,rdi
  41ffcd:	cmp    rsi,rdx
  41ffd0:	je     420019 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69>
  41ffd2:	cmp    BYTE PTR [r13+0x0],0x22
  41ffd7:	jne    420019 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69>
  41ffd9:	inc    r13
  41ffdc:	cmp    r13,r14
  41ffdf:	je     420037 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  41ffe1:	mov    rbp,r13
  41ffe4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ffee:	xchg   ax,ax
  41fff0:	movzx  ecx,BYTE PTR [rbp+0x0]
  41fff4:	cmp    cl,0x20
  41fff7:	jb     420099 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xe9>
  41fffd:	cmp    cl,0x22
  420000:	je     4200bb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10b>
  420006:	cmp    cl,0x5c
  420009:	je     4200bb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10b>
  42000f:	inc    rbp
  420012:	cmp    r14,rbp
  420015:	jne    41fff0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  420017:	jmp    420037 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  420019:	cmp    DWORD PTR [rbx+0x20],0x0
  42001d:	jne    420037 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  42001f:	mov    DWORD PTR [rbx+0x20],0x10
  420026:	mov    eax,DWORD PTR [rbx+0x8]
  420029:	mov    ecx,r13d
  42002c:	sub    ecx,eax
  42002e:	inc    ecx
  420030:	mov    DWORD PTR [rbx+0x1c],ecx
  420033:	mov    QWORD PTR [rbx+0x38],r13
  420037:	cmp    DWORD PTR [rbx+0x20],0x0
  42003b:	mov    rax,r14
  42003e:	jne    42005b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  420040:	mov    DWORD PTR [rbx+0x20],0x14
  420047:	mov    eax,DWORD PTR [rbx+0x8]
  42004a:	mov    ecx,r14d
  42004d:	sub    ecx,eax
  42004f:	inc    ecx
  420051:	mov    DWORD PTR [rbx+0x1c],ecx
  420054:	mov    QWORD PTR [rbx+0x38],r14
  420058:	mov    rax,r14
  42005b:	mov    DWORD PTR [r15],0x0
  420062:	cmp    DWORD PTR [rbx+0x20],0x0
  420066:	jne    420087 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  420068:	cmp    r12d,0x1
  42006c:	mov    ecx,0x1f
  420071:	sbb    ecx,0xffffffff
  420074:	mov    DWORD PTR [rbx+0x20],ecx
  420077:	mov    ecx,DWORD PTR [rbx+0x8]
  42007a:	mov    edx,eax
  42007c:	sub    edx,ecx
  42007e:	inc    edx
  420080:	mov    DWORD PTR [rbx+0x1c],edx
  420083:	mov    QWORD PTR [rbx+0x38],rax
  420087:	mov    rax,r14
  42008a:	add    rsp,0x28
  42008e:	pop    rbx
  42008f:	pop    r12
  420091:	pop    r13
  420093:	pop    r14
  420095:	pop    r15
  420097:	pop    rbp
  420098:	ret    
  420099:	cmp    DWORD PTR [rbx+0x20],0x0
  42009d:	mov    rax,r14
  4200a0:	jne    42005b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  4200a2:	mov    DWORD PTR [rbx+0x20],0x11
  4200a9:	mov    eax,DWORD PTR [rbx+0x8]
  4200ac:	mov    ecx,ebp
  4200ae:	sub    ecx,eax
  4200b0:	inc    ecx
  4200b2:	mov    DWORD PTR [rbx+0x1c],ecx
  4200b5:	mov    QWORD PTR [rbx+0x38],rbp
  4200b9:	jmp    420058 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xa8>
  4200bb:	mov    rax,r14
  4200be:	cmp    r14,rbp
  4200c1:	je     42005b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  4200c3:	cmp    cl,0x22
  4200c6:	jne    4200f2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x142>
  4200c8:	mov    rcx,rbp
  4200cb:	sub    rcx,r13
  4200ce:	mov    eax,ecx
  4200d0:	and    eax,0x3
  4200d3:	mov    QWORD PTR [rsp+0x18],rcx
  4200d8:	shr    rcx,0x2
  4200dc:	lea    rcx,[rcx+rcx*2]
  4200e0:	cmp    rax,0x2
  4200e4:	je     4200fa <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14a>
  4200e6:	cmp    rax,0x3
  4200ea:	jne    4200fd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  4200ec:	add    rcx,0x2
  4200f0:	jmp    4200fd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  4200f2:	mov    rax,rbp
  4200f5:	jmp    42005b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  4200fa:	inc    rcx
  4200fd:	mov    QWORD PTR [rsp+0x8],rcx
  420102:	mov    rdi,QWORD PTR [rbx]
  420105:	mov    esi,0x1
  42010a:	mov    ecx,0xffffffff
  42010f:	mov    edx,0x1
  420114:	call   41ab20 <flatcc_builder_start_vector@@Base>
  420119:	test   eax,eax
  42011b:	je     42014a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19a>
  42011d:	mov    DWORD PTR [r15],0x0
  420124:	cmp    DWORD PTR [rbx+0x20],0x0
  420128:	jne    420087 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  42012e:	mov    DWORD PTR [rbx+0x20],0x21
  420135:	mov    eax,DWORD PTR [rbx+0x8]
  420138:	mov    ecx,ebp
  42013a:	sub    ecx,eax
  42013c:	inc    ecx
  42013e:	mov    DWORD PTR [rbx+0x1c],ecx
  420141:	mov    QWORD PTR [rbx+0x38],rbp
  420145:	jmp    420087 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  42014a:	mov    rdi,QWORD PTR [rbx]
  42014d:	mov    rsi,QWORD PTR [rsp+0x8]
  420152:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  420157:	test   rax,rax
  42015a:	je     42011d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  42015c:	test   r12d,r12d
  42015f:	lea    rcx,[rip+0x49ea]        # 424b50 <flatcc_builder_padding_base@@Base+0x1e30>
  420166:	lea    r11,[rip+0x48e3]        # 424a50 <flatcc_builder_padding_base@@Base+0x1d30>
  42016d:	cmovne r11,rcx
  420171:	xor    r10d,r10d
  420174:	mov    rcx,QWORD PTR [rsp+0x8]
  420179:	cmp    rcx,0x1
  42017d:	sbb    r10,r10
  420180:	or     r10,rcx
  420183:	mov    QWORD PTR [rsp+0x20],rax
  420188:	mov    r9,rax
  42018b:	mov    rsi,QWORD PTR [rsp+0x18]
  420190:	mov    r8,r13
  420193:	mov    rdi,rsi
  420196:	xor    edx,edx
  420198:	cmp    rdi,rdx
  42019b:	jne    4201b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
  42019d:	jmp    420237 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x287>
  4201a2:	inc    rdx
  4201a5:	cmp    rdx,0x4
  4201a9:	jae    4201db <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22b>
  4201ab:	cmp    rdi,rdx
  4201ae:	je     420237 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x287>
  4201b4:	movzx  ecx,BYTE PTR [r8+rdx*1]
  4201b9:	movzx  ecx,BYTE PTR [r11+rcx*1]
  4201be:	mov    BYTE PTR [rsp+rdx*1+0x4],cl
  4201c2:	cmp    cl,0x40
  4201c5:	jb     4201a2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f2>
  4201c7:	cmp    cl,0x41
  4201ca:	jne    42028c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
  4201d0:	inc    r8
  4201d3:	dec    rdi
  4201d6:	dec    rdx
  4201d9:	jmp    4201a2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f2>
  4201db:	cmp    r10,0x3
  4201df:	jb     42030e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  4201e5:	mov    al,BYTE PTR [rsp+0x4]
  4201e9:	mov    cl,BYTE PTR [rsp+0x5]
  4201ed:	shl    al,0x2
  4201f0:	mov    edx,ecx
  4201f2:	shr    dl,0x4
  4201f5:	or     dl,al
  4201f7:	mov    BYTE PTR [r9],dl
  4201fa:	shl    cl,0x4
  4201fd:	mov    al,BYTE PTR [rsp+0x6]
  420201:	shr    al,0x2
  420204:	or     al,cl
  420206:	mov    BYTE PTR [r9+0x1],al
  42020a:	mov    al,BYTE PTR [rsp+0x6]
  42020e:	shl    al,0x6
  420211:	or     al,BYTE PTR [rsp+0x7]
  420215:	mov    BYTE PTR [r9+0x2],al
  420219:	add    r9,0x3
  42021d:	add    r8,0x4
  420221:	add    rdi,0xfffffffffffffffc
  420225:	mov    rsi,rdi
  420228:	add    r10,0xfffffffffffffffd
  42022c:	jne    420196 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e6>
  420232:	jmp    4202ff <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34f>
  420237:	mov    QWORD PTR [rsp+0x10],rsi
  42023c:	mov    rdx,rdi
  42023f:	mov    rsi,rdi
  420242:	sub    rdi,rsi
  420245:	test   rdx,rdx
  420248:	je     4202ff <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34f>
  42024e:	cmp    rdx,0x3
  420252:	je     4202c2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x312>
  420254:	cmp    rdx,0x2
  420258:	mov    rsi,QWORD PTR [rsp+0x10]
  42025d:	jne    42030e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  420263:	mov    cl,BYTE PTR [rsp+0x5]
  420267:	test   cl,0xf
  42026a:	jne    42030e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  420270:	mov    al,BYTE PTR [rsp+0x4]
  420274:	shl    al,0x2
  420277:	shr    cl,0x4
  42027a:	or     cl,al
  42027c:	mov    BYTE PTR [r9],cl
  42027f:	inc    r9
  420282:	test   rdi,rdi
  420285:	jne    420304 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x354>
  420287:	jmp    420321 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x371>
  42028c:	mov    QWORD PTR [rsp+0x10],rsi
  420291:	cmp    cl,0x42
  420294:	jne    420366 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b6>
  42029a:	lea    rcx,[rdx+0x1]
  42029e:	mov    rsi,rcx
  4202a1:	cmp    rcx,rdi
  4202a4:	jae    420242 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  4202a6:	cmp    rsi,0x7
  4202aa:	ja     420242 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  4202ac:	movzx  ecx,BYTE PTR [r8+rsi*1]
  4202b1:	movzx  eax,BYTE PTR [r11+rcx*1]
  4202b6:	add    al,0xbf
  4202b8:	lea    rcx,[rsi+0x1]
  4202bc:	cmp    al,0x2
  4202be:	jb     42029e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ee>
  4202c0:	jmp    420242 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  4202c2:	cmp    r10,0x2
  4202c6:	mov    rsi,QWORD PTR [rsp+0x10]
  4202cb:	jb     42030e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  4202cd:	mov    cl,BYTE PTR [rsp+0x6]
  4202d1:	mov    eax,ecx
  4202d3:	and    al,0x3
  4202d5:	jne    42030e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  4202d7:	mov    sil,BYTE PTR [rsp+0x4]
  4202dc:	mov    al,BYTE PTR [rsp+0x5]
  4202e0:	shl    sil,0x2
  4202e4:	mov    edx,eax
  4202e6:	shr    dl,0x4
  4202e9:	or     dl,sil
  4202ec:	mov    BYTE PTR [r9],dl
  4202ef:	shl    al,0x4
  4202f2:	shr    cl,0x2
  4202f5:	or     cl,al
  4202f7:	mov    BYTE PTR [r9+0x1],cl
  4202fb:	add    r9,0x2
  4202ff:	test   rdi,rdi
  420302:	je     420321 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x371>
  420304:	mov    rax,QWORD PTR [rsp+0x18]
  420309:	sub    rax,rdi
  42030c:	jmp    420316 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x366>
  42030e:	mov    rax,QWORD PTR [rsp+0x18]
  420313:	sub    rax,rsi
  420316:	add    r13,rax
  420319:	mov    rax,r13
  42031c:	jmp    42005b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  420321:	sub    r9,QWORD PTR [rsp+0x20]
  420326:	sub    QWORD PTR [rsp+0x8],r9
  42032b:	jbe    420342 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x392>
  42032d:	mov    rdi,QWORD PTR [rbx]
  420330:	mov    rsi,QWORD PTR [rsp+0x8]
  420335:	call   41a9a0 <flatcc_builder_truncate_vector@@Base>
  42033a:	test   eax,eax
  42033c:	jne    42011d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  420342:	mov    rdi,QWORD PTR [rbx]
  420345:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  42034a:	mov    DWORD PTR [r15],eax
  42034d:	test   eax,eax
  42034f:	je     42011d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  420355:	cmp    BYTE PTR [rbp+0x0],0x22
  420359:	jne    42036e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3be>
  42035b:	inc    rbp
  42035e:	mov    r14,rbp
  420361:	jmp    420087 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  420366:	mov    rsi,rdx
  420369:	jmp    420242 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  42036e:	cmp    DWORD PTR [rbx+0x20],0x0
  420372:	jne    420087 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  420378:	mov    DWORD PTR [rbx+0x20],0x14
  42037f:	jmp    420135 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x185>
  420384:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42038e:	xchg   ax,ax

0000000000420390 <flatcc_json_parser_build_string@@Base>:
  420390:	push   rbp
  420391:	push   r15
  420393:	push   r14
  420395:	push   r13
  420397:	push   r12
  420399:	push   rbx
  42039a:	push   rax
  42039b:	mov    r15,rcx
  42039e:	mov    r12,rdx
  4203a1:	mov    r14,rdi
  4203a4:	cmp    rsi,rdx
  4203a7:	je     4203ef <flatcc_json_parser_build_string@@Base+0x5f>
  4203a9:	cmp    BYTE PTR [rsi],0x22
  4203ac:	jne    4203ef <flatcc_json_parser_build_string@@Base+0x5f>
  4203ae:	inc    rsi
  4203b1:	mov    rbp,r12
  4203b4:	cmp    rsi,r12
  4203b7:	je     4203fd <flatcc_json_parser_build_string@@Base+0x6d>
  4203b9:	mov    rbx,rsi
  4203bc:	nop    DWORD PTR [rax+0x0]
  4203c0:	movzx  eax,BYTE PTR [rbx]
  4203c3:	cmp    al,0x20
  4203c5:	jb     42053e <flatcc_json_parser_build_string@@Base+0x1ae>
  4203cb:	cmp    al,0x22
  4203cd:	je     420561 <flatcc_json_parser_build_string@@Base+0x1d1>
  4203d3:	cmp    al,0x5c
  4203d5:	je     420561 <flatcc_json_parser_build_string@@Base+0x1d1>
  4203db:	inc    rbx
  4203de:	cmp    r12,rbx
  4203e1:	jne    4203c0 <flatcc_json_parser_build_string@@Base+0x30>
  4203e3:	mov    rbp,rsi
  4203e6:	cmp    DWORD PTR [r14+0x20],0x0
  4203eb:	jne    42041f <flatcc_json_parser_build_string@@Base+0x8f>
  4203ed:	jmp    420404 <flatcc_json_parser_build_string@@Base+0x74>
  4203ef:	cmp    DWORD PTR [r14+0x20],0x0
  4203f4:	mov    rbp,r12
  4203f7:	je     420511 <flatcc_json_parser_build_string@@Base+0x181>
  4203fd:	cmp    DWORD PTR [r14+0x20],0x0
  420402:	jne    42041f <flatcc_json_parser_build_string@@Base+0x8f>
  420404:	mov    DWORD PTR [r14+0x20],0x14
  42040c:	mov    eax,DWORD PTR [r14+0x8]
  420410:	mov    ecx,r12d
  420413:	sub    ecx,eax
  420415:	inc    ecx
  420417:	mov    DWORD PTR [r14+0x1c],ecx
  42041b:	mov    QWORD PTR [r14+0x38],r12
  42041f:	mov    rbx,r12
  420422:	mov    rdi,QWORD PTR [r14]
  420425:	call   41ae20 <flatcc_builder_start_string@@Base>
  42042a:	test   eax,eax
  42042c:	je     42044a <flatcc_json_parser_build_string@@Base+0xba>
  42042e:	mov    DWORD PTR [r15],0x0
  420435:	mov    r12,rbx
  420438:	mov    rax,r12
  42043b:	add    rsp,0x8
  42043f:	pop    rbx
  420440:	pop    r12
  420442:	pop    r13
  420444:	pop    r14
  420446:	pop    r15
  420448:	pop    rbp
  420449:	ret    
  42044a:	mov    rdi,QWORD PTR [r14]
  42044d:	mov    rdx,rbx
  420450:	sub    rdx,rbp
  420453:	mov    rsi,rbp
  420456:	call   41a830 <flatcc_builder_append_string@@Base>
  42045b:	test   rax,rax
  42045e:	je     42042e <flatcc_json_parser_build_string@@Base+0x9e>
  420460:	mov    rbp,r12
  420463:	cmp    rbx,r12
  420466:	je     4205d3 <flatcc_json_parser_build_string@@Base+0x243>
  42046c:	lea    rbp,[rsp+0x4]
  420471:	cmp    BYTE PTR [rbx],0x22
  420474:	je     42061d <flatcc_json_parser_build_string@@Base+0x28d>
  42047a:	mov    rdi,r14
  42047d:	mov    rsi,rbx
  420480:	mov    rdx,r12
  420483:	mov    rcx,rbp
  420486:	call   41e470 <flatcc_json_parser_string_escape@@Base>
  42048b:	mov    r13,rax
  42048e:	mov    rdi,QWORD PTR [r14]
  420491:	movsx  rdx,BYTE PTR [rsp+0x4]
  420497:	lea    rsi,[rsp+0x5]
  42049c:	call   41a830 <flatcc_builder_append_string@@Base>
  4204a1:	test   rax,rax
  4204a4:	je     420622 <flatcc_json_parser_build_string@@Base+0x292>
  4204aa:	cmp    r13,r12
  4204ad:	je     420585 <flatcc_json_parser_build_string@@Base+0x1f5>
  4204b3:	mov    rbx,r13
  4204b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204c0:	movzx  eax,BYTE PTR [rbx]
  4204c3:	cmp    al,0x20
  4204c5:	jb     4205ac <flatcc_json_parser_build_string@@Base+0x21c>
  4204cb:	cmp    al,0x22
  4204cd:	je     4204e0 <flatcc_json_parser_build_string@@Base+0x150>
  4204cf:	cmp    al,0x5c
  4204d1:	je     4204e0 <flatcc_json_parser_build_string@@Base+0x150>
  4204d3:	inc    rbx
  4204d6:	cmp    r12,rbx
  4204d9:	jne    4204c0 <flatcc_json_parser_build_string@@Base+0x130>
  4204db:	jmp    420585 <flatcc_json_parser_build_string@@Base+0x1f5>
  4204e0:	cmp    r12,rbx
  4204e3:	je     4205d0 <flatcc_json_parser_build_string@@Base+0x240>
  4204e9:	mov    rdi,QWORD PTR [r14]
  4204ec:	mov    rdx,rbx
  4204ef:	sub    rdx,r13
  4204f2:	mov    rsi,r13
  4204f5:	call   41a830 <flatcc_builder_append_string@@Base>
  4204fa:	test   rax,rax
  4204fd:	je     42042e <flatcc_json_parser_build_string@@Base+0x9e>
  420503:	cmp    r12,rbx
  420506:	jne    420471 <flatcc_json_parser_build_string@@Base+0xe1>
  42050c:	jmp    4205d0 <flatcc_json_parser_build_string@@Base+0x240>
  420511:	mov    DWORD PTR [r14+0x20],0x10
  420519:	mov    eax,DWORD PTR [r14+0x8]
  42051d:	mov    ecx,esi
  42051f:	sub    ecx,eax
  420521:	inc    ecx
  420523:	mov    DWORD PTR [r14+0x1c],ecx
  420527:	mov    QWORD PTR [r14+0x38],rsi
  42052b:	mov    rbp,r12
  42052e:	cmp    DWORD PTR [r14+0x20],0x0
  420533:	jne    42041f <flatcc_json_parser_build_string@@Base+0x8f>
  420539:	jmp    420404 <flatcc_json_parser_build_string@@Base+0x74>
  42053e:	cmp    DWORD PTR [r14+0x20],0x0
  420543:	jne    42057a <flatcc_json_parser_build_string@@Base+0x1ea>
  420545:	mov    DWORD PTR [r14+0x20],0x11
  42054d:	mov    eax,DWORD PTR [r14+0x8]
  420551:	mov    ecx,ebx
  420553:	sub    ecx,eax
  420555:	inc    ecx
  420557:	mov    DWORD PTR [r14+0x1c],ecx
  42055b:	mov    QWORD PTR [r14+0x38],rbx
  42055f:	jmp    42057a <flatcc_json_parser_build_string@@Base+0x1ea>
  420561:	cmp    r12,rbx
  420564:	je     42057a <flatcc_json_parser_build_string@@Base+0x1ea>
  420566:	cmp    al,0x22
  420568:	jne    42057d <flatcc_json_parser_build_string@@Base+0x1ed>
  42056a:	mov    rdi,QWORD PTR [r14]
  42056d:	mov    rdx,rbx
  420570:	sub    rdx,rsi
  420573:	call   41d0b0 <flatcc_builder_create_string@@Base>
  420578:	jmp    4205de <flatcc_json_parser_build_string@@Base+0x24e>
  42057a:	mov    rbx,r12
  42057d:	mov    rbp,rsi
  420580:	jmp    420422 <flatcc_json_parser_build_string@@Base+0x92>
  420585:	cmp    DWORD PTR [r14+0x20],0x0
  42058a:	mov    rbp,r12
  42058d:	jne    4205d3 <flatcc_json_parser_build_string@@Base+0x243>
  42058f:	mov    DWORD PTR [r14+0x20],0x14
  420597:	mov    eax,DWORD PTR [r14+0x8]
  42059b:	mov    ecx,r12d
  42059e:	sub    ecx,eax
  4205a0:	inc    ecx
  4205a2:	mov    DWORD PTR [r14+0x1c],ecx
  4205a6:	mov    QWORD PTR [r14+0x38],r12
  4205aa:	jmp    4205d0 <flatcc_json_parser_build_string@@Base+0x240>
  4205ac:	cmp    DWORD PTR [r14+0x20],0x0
  4205b1:	mov    rbp,r12
  4205b4:	jne    4205d3 <flatcc_json_parser_build_string@@Base+0x243>
  4205b6:	mov    DWORD PTR [r14+0x20],0x11
  4205be:	mov    eax,DWORD PTR [r14+0x8]
  4205c2:	mov    ecx,ebx
  4205c4:	sub    ecx,eax
  4205c6:	inc    ecx
  4205c8:	mov    DWORD PTR [r14+0x1c],ecx
  4205cc:	mov    QWORD PTR [r14+0x38],rbx
  4205d0:	mov    rbp,r12
  4205d3:	mov    rdi,QWORD PTR [r14]
  4205d6:	call   41d250 <flatcc_builder_end_string@@Base>
  4205db:	mov    rbx,rbp
  4205de:	mov    DWORD PTR [r15],eax
  4205e1:	cmp    rbx,r12
  4205e4:	je     4205f3 <flatcc_json_parser_build_string@@Base+0x263>
  4205e6:	cmp    BYTE PTR [rbx],0x22
  4205e9:	jne    4205f3 <flatcc_json_parser_build_string@@Base+0x263>
  4205eb:	inc    rbx
  4205ee:	jmp    420435 <flatcc_json_parser_build_string@@Base+0xa5>
  4205f3:	cmp    DWORD PTR [r14+0x20],0x0
  4205f8:	jne    420438 <flatcc_json_parser_build_string@@Base+0xa8>
  4205fe:	mov    DWORD PTR [r14+0x20],0x14
  420606:	mov    eax,DWORD PTR [r14+0x8]
  42060a:	mov    ecx,ebx
  42060c:	sub    ecx,eax
  42060e:	inc    ecx
  420610:	mov    DWORD PTR [r14+0x1c],ecx
  420614:	mov    QWORD PTR [r14+0x38],rbx
  420618:	jmp    420438 <flatcc_json_parser_build_string@@Base+0xa8>
  42061d:	mov    rbp,rbx
  420620:	jmp    4205d3 <flatcc_json_parser_build_string@@Base+0x243>
  420622:	mov    rbx,r13
  420625:	jmp    42042e <flatcc_json_parser_build_string@@Base+0x9e>
  42062a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420630 <flatcc_json_parser_prepare_unions@@Base>:
  420630:	push   r15
  420632:	push   r14
  420634:	push   r13
  420636:	push   r12
  420638:	push   rbx
  420639:	mov    r13,r8
  42063c:	mov    r12,rcx
  42063f:	mov    r15,rdx
  420642:	mov    r14,rsi
  420645:	mov    rbx,rdi
  420648:	mov    rdi,QWORD PTR [rdi]
  42064b:	lea    rax,[rcx+rcx*4]
  42064f:	lea    rsi,[rax*8+0x10]
  420657:	call   419520 <flatcc_builder_enter_user_frame@@Base>
  42065c:	mov    QWORD PTR [r13+0x0],rax
  420660:	test   rax,rax
  420663:	je     420678 <flatcc_json_parser_prepare_unions@@Base+0x48>
  420665:	mov    rdi,QWORD PTR [rbx]
  420668:	mov    rsi,rax
  42066b:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  420670:	mov    QWORD PTR [rax],r12
  420673:	mov    r15,r14
  420676:	jmp    420696 <flatcc_json_parser_prepare_unions@@Base+0x66>
  420678:	cmp    DWORD PTR [rbx+0x20],0x0
  42067c:	jne    420696 <flatcc_json_parser_prepare_unions@@Base+0x66>
  42067e:	mov    DWORD PTR [rbx+0x20],0x21
  420685:	mov    eax,DWORD PTR [rbx+0x8]
  420688:	mov    ecx,r14d
  42068b:	sub    ecx,eax
  42068d:	inc    ecx
  42068f:	mov    DWORD PTR [rbx+0x1c],ecx
  420692:	mov    QWORD PTR [rbx+0x38],r14
  420696:	mov    rax,r15
  420699:	pop    rbx
  42069a:	pop    r12
  42069c:	pop    r13
  42069e:	pop    r14
  4206a0:	pop    r15
  4206a2:	ret    
  4206a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4206ad:	nop    DWORD PTR [rax]

00000000004206b0 <flatcc_json_parser_finalize_unions@@Base>:
  4206b0:	push   r15
  4206b2:	push   r14
  4206b4:	push   r12
  4206b6:	push   rbx
  4206b7:	push   rax
  4206b8:	mov    r15,rcx
  4206bb:	mov    r14,rdx
  4206be:	mov    r12,rsi
  4206c1:	mov    rbx,rdi
  4206c4:	mov    rdi,QWORD PTR [rdi]
  4206c7:	mov    rsi,rcx
  4206ca:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  4206cf:	cmp    QWORD PTR [rax+0x8],0x0
  4206d4:	je     4206f6 <flatcc_json_parser_finalize_unions@@Base+0x46>
  4206d6:	cmp    DWORD PTR [rbx+0x20],0x0
  4206da:	jne    4206f9 <flatcc_json_parser_finalize_unions@@Base+0x49>
  4206dc:	mov    DWORD PTR [rbx+0x20],0x1b
  4206e3:	mov    eax,DWORD PTR [rbx+0x8]
  4206e6:	mov    ecx,r12d
  4206e9:	sub    ecx,eax
  4206eb:	inc    ecx
  4206ed:	mov    DWORD PTR [rbx+0x1c],ecx
  4206f0:	mov    QWORD PTR [rbx+0x38],r12
  4206f4:	jmp    4206f9 <flatcc_json_parser_finalize_unions@@Base+0x49>
  4206f6:	mov    r14,r12
  4206f9:	mov    rdi,QWORD PTR [rbx]
  4206fc:	mov    rsi,r15
  4206ff:	call   419620 <flatcc_builder_exit_user_frame_at@@Base>
  420704:	mov    rax,r14
  420707:	add    rsp,0x8
  42070b:	pop    rbx
  42070c:	pop    r12
  42070e:	pop    r14
  420710:	pop    r15
  420712:	ret    
  420713:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42071d:	nop    DWORD PTR [rax]

0000000000420720 <flatcc_json_parser_union@@Base>:
  420720:	push   rbp
  420721:	push   r15
  420723:	push   r14
  420725:	push   r12
  420727:	push   rbx
  420728:	sub    rsp,0x10
  42072c:	mov    r12d,r8d
  42072f:	mov    rbp,rcx
  420732:	mov    r14,rdx
  420735:	mov    r15,rsi
  420738:	mov    rbx,rdi
  42073b:	mov    rdi,QWORD PTR [rdi]
  42073e:	mov    rsi,r9
  420741:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  420746:	lea    rcx,[rbp*4+0x0]
  42074e:	add    rcx,rbp
  420751:	cmp    QWORD PTR [rax+rcx*8+0x10],0x0
  420757:	je     420780 <flatcc_json_parser_union@@Base+0x60>
  420759:	cmp    DWORD PTR [rbx+0x20],0x0
  42075d:	jne    42080d <flatcc_json_parser_union@@Base+0xed>
  420763:	mov    DWORD PTR [rbx+0x20],0x1c
  42076a:	mov    eax,DWORD PTR [rbx+0x8]
  42076d:	mov    ecx,r15d
  420770:	sub    ecx,eax
  420772:	inc    ecx
  420774:	mov    DWORD PTR [rbx+0x1c],ecx
  420777:	mov    QWORD PTR [rbx+0x38],r15
  42077b:	jmp    42080d <flatcc_json_parser_union@@Base+0xed>
  420780:	lea    rdx,[rax+0x10]
  420784:	cmp    BYTE PTR [rdx+rcx*8+0x14],0x0
  420789:	je     4207d5 <flatcc_json_parser_union@@Base+0xb5>
  42078b:	mov    cl,BYTE PTR [rdx+rcx*8+0x15]
  42078f:	mov    BYTE PTR [rsp+0x8],cl
  420793:	test   cl,cl
  420795:	je     420807 <flatcc_json_parser_union@@Base+0xe7>
  420797:	mov    rbp,QWORD PTR [rsp+0x40]
  42079c:	dec    QWORD PTR [rax+0x8]
  4207a0:	lea    r8,[rsp+0xc]
  4207a5:	movzx  ecx,cl
  4207a8:	mov    rdi,rbx
  4207ab:	mov    rsi,r15
  4207ae:	mov    rdx,r14
  4207b1:	call   rbp
  4207b3:	cmp    rax,r14
  4207b6:	je     42080d <flatcc_json_parser_union@@Base+0xed>
  4207b8:	mov    r15,rax
  4207bb:	mov    rdi,QWORD PTR [rbx]
  4207be:	movzx  esi,r12w
  4207c2:	mov    rdx,QWORD PTR [rsp+0x8]
  4207c7:	call   41c0c0 <flatcc_builder_table_add_union@@Base>
  4207cc:	test   eax,eax
  4207ce:	jne    420759 <flatcc_json_parser_union@@Base+0x39>
  4207d0:	mov    r14,r15
  4207d3:	jmp    42080d <flatcc_json_parser_union@@Base+0xed>
  4207d5:	inc    QWORD PTR [rax+0x8]
  4207d9:	lea    rax,[rax+rcx*8]
  4207dd:	add    rax,0x10
  4207e1:	mov    esi,DWORD PTR [rbx+0x18]
  4207e4:	mov    DWORD PTR [rdx+rcx*8+0x10],esi
  4207e8:	mov    rsi,QWORD PTR [rbx+0x8]
  4207ec:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  4207f1:	mov    QWORD PTR [rax],r15
  4207f4:	mov    rdi,rbx
  4207f7:	mov    rsi,r15
  4207fa:	mov    rdx,r14
  4207fd:	call   41ea80 <flatcc_json_parser_generic_json@@Base>
  420802:	mov    r14,rax
  420805:	jmp    42080d <flatcc_json_parser_union@@Base+0xed>
  420807:	cmp    DWORD PTR [rbx+0x20],0x0
  42080b:	je     42081d <flatcc_json_parser_union@@Base+0xfd>
  42080d:	mov    rax,r14
  420810:	add    rsp,0x10
  420814:	pop    rbx
  420815:	pop    r12
  420817:	pop    r14
  420819:	pop    r15
  42081b:	pop    rbp
  42081c:	ret    
  42081d:	mov    DWORD PTR [rbx+0x20],0x19
  420824:	jmp    42076a <flatcc_json_parser_union@@Base+0x4a>
  420829:	nop    DWORD PTR [rax+0x0]

0000000000420830 <flatcc_json_parser_union_type@@Base>:
  420830:	push   rbp
  420831:	push   r15
  420833:	push   r14
  420835:	push   r13
  420837:	push   r12
  420839:	push   rbx
  42083a:	sub    rsp,0x18
  42083e:	mov    ebx,r8d
  420841:	mov    rbp,rcx
  420844:	mov    r14,rdx
  420847:	mov    r12,rsi
  42084a:	mov    r15,rdi
  42084d:	mov    rdi,QWORD PTR [rdi]
  420850:	mov    rsi,r9
  420853:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  420858:	lea    r13,[rbp*4+0x0]
  420860:	add    r13,rbp
  420863:	cmp    BYTE PTR [rax+r13*8+0x24],0x0
  420869:	je     420896 <flatcc_json_parser_union_type@@Base+0x66>
  42086b:	cmp    DWORD PTR [r15+0x20],0x0
  420870:	jne    420abf <flatcc_json_parser_union_type@@Base+0x28f>
  420876:	mov    DWORD PTR [r15+0x20],0x1c
  42087e:	mov    eax,DWORD PTR [r15+0x8]
  420882:	mov    ecx,r12d
  420885:	sub    ecx,eax
  420887:	inc    ecx
  420889:	mov    DWORD PTR [r15+0x1c],ecx
  42088d:	mov    QWORD PTR [r15+0x38],r12
  420891:	jmp    420abf <flatcc_json_parser_union_type@@Base+0x28f>
  420896:	mov    r11,rax
  420899:	mov    DWORD PTR [rsp+0xc],ebx
  42089d:	lea    r10,[rax+0x10]
  4208a1:	lea    rax,[rax+r13*8]
  4208a5:	add    rax,0x24
  4208a9:	mov    BYTE PTR [rax],0x1
  4208ac:	lea    r8,[r10+r13*8]
  4208b0:	add    r8,0x15
  4208b4:	mov    BYTE PTR [r10+r13*8+0x15],0x0
  4208ba:	cmp    r12,r14
  4208bd:	je     4209ed <flatcc_json_parser_union_type@@Base+0x1bd>
  4208c3:	mov    r9b,BYTE PTR [r12]
  4208c7:	xor    eax,eax
  4208c9:	cmp    r9b,0x2d
  4208cd:	sete   al
  4208d0:	add    rax,r12
  4208d3:	xor    edx,edx
  4208d5:	cmp    rax,r14
  4208d8:	je     42091a <flatcc_json_parser_union_type@@Base+0xea>
  4208da:	nop    WORD PTR [rax+rax*1+0x0]
  4208e0:	movsx  rdi,BYTE PTR [rax]
  4208e4:	lea    ecx,[rdi-0x30]
  4208e7:	cmp    cl,0x9
  4208ea:	ja     42095a <flatcc_json_parser_union_type@@Base+0x12a>
  4208ec:	lea    rcx,[rdx+rdx*4]
  4208f0:	lea    rdi,[rdi+rcx*2]
  4208f4:	add    rdi,0xffffffffffffffd0
  4208f8:	cmp    rdx,rdi
  4208fb:	ja     420966 <flatcc_json_parser_union_type@@Base+0x136>
  4208fd:	inc    rax
  420900:	mov    rdx,rdi
  420903:	cmp    r14,rax
  420906:	jne    4208e0 <flatcc_json_parser_union_type@@Base+0xb0>
  420908:	xor    ecx,ecx
  42090a:	mov    rax,r14
  42090d:	mov    rdx,rdi
  420910:	cmp    rax,r12
  420913:	jne    420928 <flatcc_json_parser_union_type@@Base+0xf8>
  420915:	jmp    4209ed <flatcc_json_parser_union_type@@Base+0x1bd>
  42091a:	mov    rax,r14
  42091d:	xor    ecx,ecx
  42091f:	cmp    rax,r12
  420922:	je     4209ed <flatcc_json_parser_union_type@@Base+0x1bd>
  420928:	test   cl,cl
  42092a:	je     42098c <flatcc_json_parser_union_type@@Base+0x15c>
  42092c:	mov    cl,BYTE PTR [rax]
  42092e:	add    cl,0xd2
  420931:	cmp    cl,0x37
  420934:	ja     42098c <flatcc_json_parser_union_type@@Base+0x15c>
  420936:	movzx  ecx,cl
  420939:	movabs rdi,0x80000000800001
  420943:	bt     rdi,rcx
  420947:	jae    42098c <flatcc_json_parser_union_type@@Base+0x15c>
  420949:	cmp    DWORD PTR [r15+0x20],0x0
  42094e:	jne    420987 <flatcc_json_parser_union_type@@Base+0x157>
  420950:	mov    DWORD PTR [r15+0x20],0xc
  420958:	jmp    420975 <flatcc_json_parser_union_type@@Base+0x145>
  42095a:	mov    cl,0x1
  42095c:	cmp    rax,r12
  42095f:	jne    420928 <flatcc_json_parser_union_type@@Base+0xf8>
  420961:	jmp    4209ed <flatcc_json_parser_union_type@@Base+0x1bd>
  420966:	cmp    DWORD PTR [r15+0x20],0x0
  42096b:	jne    420987 <flatcc_json_parser_union_type@@Base+0x157>
  42096d:	mov    DWORD PTR [r15+0x20],0x8
  420975:	mov    ecx,DWORD PTR [r15+0x8]
  420979:	mov    edx,eax
  42097b:	sub    edx,ecx
  42097d:	inc    edx
  42097f:	mov    DWORD PTR [r15+0x1c],edx
  420983:	mov    QWORD PTR [r15+0x38],rax
  420987:	xor    edx,edx
  420989:	mov    rax,r14
  42098c:	cmp    rax,r12
  42098f:	je     4209ed <flatcc_json_parser_union_type@@Base+0x1bd>
  420991:	cmp    r9b,0x2d
  420995:	jne    4209ab <flatcc_json_parser_union_type@@Base+0x17b>
  420997:	cmp    DWORD PTR [r15+0x20],0x0
  42099c:	mov    rbp,r14
  42099f:	jne    4209e8 <flatcc_json_parser_union_type@@Base+0x1b8>
  4209a1:	mov    DWORD PTR [r15+0x20],0x8
  4209a9:	jmp    4209c6 <flatcc_json_parser_union_type@@Base+0x196>
  4209ab:	cmp    rdx,0x100
  4209b2:	jb     4209e2 <flatcc_json_parser_union_type@@Base+0x1b2>
  4209b4:	cmp    DWORD PTR [r15+0x20],0x0
  4209b9:	mov    rbp,r14
  4209bc:	jne    4209e8 <flatcc_json_parser_union_type@@Base+0x1b8>
  4209be:	mov    DWORD PTR [r15+0x20],0x7
  4209c6:	mov    ecx,DWORD PTR [r15+0x8]
  4209ca:	mov    edx,eax
  4209cc:	sub    edx,ecx
  4209ce:	inc    edx
  4209d0:	mov    DWORD PTR [r15+0x1c],edx
  4209d4:	mov    QWORD PTR [r15+0x38],rax
  4209d8:	mov    rbp,r14
  4209db:	cmp    rbp,r12
  4209de:	jne    420a15 <flatcc_json_parser_union_type@@Base+0x1e5>
  4209e0:	jmp    4209ed <flatcc_json_parser_union_type@@Base+0x1bd>
  4209e2:	mov    BYTE PTR [r8],dl
  4209e5:	mov    rbp,rax
  4209e8:	cmp    rbp,r12
  4209eb:	jne    420a15 <flatcc_json_parser_union_type@@Base+0x1e5>
  4209ed:	mov    rcx,QWORD PTR [rsp+0x50]
  4209f2:	mov    rdi,r15
  4209f5:	mov    rsi,r12
  4209f8:	mov    rdx,r14
  4209fb:	mov    rbx,r8
  4209fe:	mov    rbp,r10
  420a01:	mov    r12,r11
  420a04:	call   420af0 <flatcc_json_parser_union_type@@Base+0x2c0>
  420a09:	mov    r11,r12
  420a0c:	mov    r10,rbp
  420a0f:	mov    r8,rbx
  420a12:	mov    rbp,rax
  420a15:	mov    rsi,QWORD PTR [r10+r13*8]
  420a19:	test   rsi,rsi
  420a1c:	je     420aa9 <flatcc_json_parser_union_type@@Base+0x279>
  420a22:	mov    rax,QWORD PTR [r11+0x8]
  420a26:	test   rax,rax
  420a29:	je     420ad1 <flatcc_json_parser_union_type@@Base+0x2a1>
  420a2f:	mov    r9,QWORD PTR [rsp+0x58]
  420a34:	dec    rax
  420a37:	mov    QWORD PTR [r11+0x8],rax
  420a3b:	mov    r12d,DWORD PTR [r15+0x18]
  420a3f:	mov    rbx,QWORD PTR [r15+0x8]
  420a43:	mov    eax,DWORD PTR [r10+r13*8+0x10]
  420a48:	mov    DWORD PTR [r15+0x18],eax
  420a4c:	mov    rax,QWORD PTR [r10+r13*8+0x8]
  420a51:	mov    QWORD PTR [r15+0x8],rax
  420a55:	movzx  ecx,BYTE PTR [r8]
  420a59:	mov    BYTE PTR [rsp+0x10],cl
  420a5d:	lea    r8,[rsp+0x14]
  420a62:	mov    rdi,r15
  420a65:	mov    rdx,r14
  420a68:	call   r9
  420a6b:	cmp    rax,r14
  420a6e:	je     420abf <flatcc_json_parser_union_type@@Base+0x28f>
  420a70:	mov    rdi,QWORD PTR [r15]
  420a73:	movzx  esi,WORD PTR [rsp+0xc]
  420a78:	mov    rdx,QWORD PTR [rsp+0x10]
  420a7d:	call   41c0c0 <flatcc_builder_table_add_union@@Base>
  420a82:	test   eax,eax
  420a84:	je     420ab4 <flatcc_json_parser_union_type@@Base+0x284>
  420a86:	cmp    DWORD PTR [r15+0x20],0x0
  420a8b:	jne    420abf <flatcc_json_parser_union_type@@Base+0x28f>
  420a8d:	mov    DWORD PTR [r15+0x20],0x1c
  420a95:	mov    eax,DWORD PTR [r15+0x8]
  420a99:	mov    ecx,ebp
  420a9b:	sub    ecx,eax
  420a9d:	inc    ecx
  420a9f:	mov    DWORD PTR [r15+0x1c],ecx
  420aa3:	mov    QWORD PTR [r15+0x38],rbp
  420aa7:	jmp    420abf <flatcc_json_parser_union_type@@Base+0x28f>
  420aa9:	cmp    BYTE PTR [r8],0x1
  420aad:	sbb    QWORD PTR [r11+0x8],0xffffffffffffffff
  420ab2:	jmp    420abc <flatcc_json_parser_union_type@@Base+0x28c>
  420ab4:	mov    DWORD PTR [r15+0x18],r12d
  420ab8:	mov    QWORD PTR [r15+0x8],rbx
  420abc:	mov    r14,rbp
  420abf:	mov    rax,r14
  420ac2:	add    rsp,0x18
  420ac6:	pop    rbx
  420ac7:	pop    r12
  420ac9:	pop    r13
  420acb:	pop    r14
  420acd:	pop    r15
  420acf:	pop    rbp
  420ad0:	ret    
  420ad1:	lea    rdi,[rip+0x45a7]        # 42507f <flatcc_builder_padding_base@@Base+0x235f>
  420ad8:	lea    rsi,[rip+0x45af]        # 42508e <flatcc_builder_padding_base@@Base+0x236e>
  420adf:	lea    rcx,[rip+0x460c]        # 4250f2 <flatcc_builder_padding_base@@Base+0x23d2>
  420ae6:	mov    edx,0x3c5
  420aeb:	call   404090 <__assert_fail@plt>
  420af0:	push   rbp
  420af1:	push   r15
  420af3:	push   r14
  420af5:	push   r13
  420af7:	push   r12
  420af9:	push   rbx
  420afa:	sub    rsp,0x38
  420afe:	mov    rbx,r8
  420b01:	mov    rbp,rcx
  420b04:	mov    r15,rdx
  420b07:	mov    r14,rdi
  420b0a:	mov    BYTE PTR [r8],0x0
  420b0e:	cmp    rsi,rdx
  420b11:	je     420b62 <flatcc_json_parser_union_type@@Base+0x332>
  420b13:	mov    al,BYTE PTR [rsi]
  420b15:	cmp    al,0x2e
  420b17:	je     420b2a <flatcc_json_parser_union_type@@Base+0x2fa>
  420b19:	cmp    al,0x22
  420b1b:	jne    420b5a <flatcc_json_parser_union_type@@Base+0x32a>
  420b1d:	inc    rsi
  420b20:	mov    DWORD PTR [r14+0x14],0x0
  420b28:	jmp    420b62 <flatcc_json_parser_union_type@@Base+0x332>
  420b2a:	cmp    DWORD PTR [r14+0x20],0x0
  420b2f:	mov    r13,r15
  420b32:	jne    420b65 <flatcc_json_parser_union_type@@Base+0x335>
  420b34:	mov    DWORD PTR [r14+0x20],0x5
  420b3c:	mov    eax,DWORD PTR [r14+0x8]
  420b40:	mov    ecx,esi
  420b42:	sub    ecx,eax
  420b44:	inc    ecx
  420b46:	mov    DWORD PTR [r14+0x1c],ecx
  420b4a:	mov    QWORD PTR [r14+0x38],rsi
  420b4e:	mov    r13,r15
  420b51:	cmp    DWORD PTR [r14+0x14],0x0
  420b56:	jne    420ba6 <flatcc_json_parser_union_type@@Base+0x376>
  420b58:	jmp    420b6c <flatcc_json_parser_union_type@@Base+0x33c>
  420b5a:	mov    DWORD PTR [r14+0x14],0x1
  420b62:	mov    r13,rsi
  420b65:	cmp    DWORD PTR [r14+0x14],0x0
  420b6a:	jne    420ba6 <flatcc_json_parser_union_type@@Base+0x376>
  420b6c:	mov    rax,r15
  420b6f:	sub    rax,r13
  420b72:	cmp    rax,0x2
  420b76:	jl     420b95 <flatcc_json_parser_union_type@@Base+0x365>
  420b78:	cmp    BYTE PTR [r13+0x0],0x20
  420b7d:	jg     420ba6 <flatcc_json_parser_union_type@@Base+0x376>
  420b7f:	jne    420b95 <flatcc_json_parser_union_type@@Base+0x365>
  420b81:	cmp    BYTE PTR [r13+0x1],0x20
  420b86:	jle    420b95 <flatcc_json_parser_union_type@@Base+0x365>
  420b88:	inc    r13
  420b8b:	cmp    r13,r15
  420b8e:	jne    420baf <flatcc_json_parser_union_type@@Base+0x37f>
  420b90:	jmp    420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420b95:	mov    rdi,r14
  420b98:	mov    rsi,r13
  420b9b:	mov    rdx,r15
  420b9e:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  420ba3:	mov    r13,rax
  420ba6:	cmp    r13,r15
  420ba9:	je     420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420baf:	lea    rcx,[rbp+0x8]
  420bb3:	xor    edx,edx
  420bb5:	lea    r12,[rsp+0x10]
  420bba:	mov    QWORD PTR [rsp+0x28],rbx
  420bbf:	mov    QWORD PTR [rsp+0x20],rbp
  420bc4:	mov    QWORD PTR [rsp+0x18],rcx
  420bc9:	mov    DWORD PTR [rsp+0xc],edx
  420bcd:	mov    rbx,QWORD PTR [rbp+0x0]
  420bd1:	mov    rbp,rcx
  420bd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420bde:	xchg   ax,ax
  420be0:	mov    rdi,r14
  420be3:	mov    rsi,r13
  420be6:	mov    rdx,r15
  420be9:	lea    rcx,[rsp+0x14]
  420bee:	lea    r8,[rsp+0x30]
  420bf3:	mov    r9,r12
  420bf6:	call   rbx
  420bf8:	cmp    rax,r15
  420bfb:	je     420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420c01:	cmp    rax,r13
  420c04:	jne    420c20 <flatcc_json_parser_union_type@@Base+0x3f0>
  420c06:	mov    rbx,QWORD PTR [rbp+0x0]
  420c0a:	add    rbp,0x8
  420c0e:	test   rbx,rbx
  420c11:	jne    420be0 <flatcc_json_parser_union_type@@Base+0x3b0>
  420c13:	jmp    420c6b <flatcc_json_parser_union_type@@Base+0x43b>
  420c15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c1f:	nop
  420c20:	mov    edx,DWORD PTR [rsp+0xc]
  420c24:	test   edx,edx
  420c26:	je     420c33 <flatcc_json_parser_union_type@@Base+0x403>
  420c28:	cmp    DWORD PTR [r14+0x14],0x0
  420c2d:	jne    420cc1 <flatcc_json_parser_union_type@@Base+0x491>
  420c33:	cmp    DWORD PTR [rsp+0x14],0x0
  420c38:	jne    420c9f <flatcc_json_parser_union_type@@Base+0x46f>
  420c3a:	mov    rcx,QWORD PTR [rsp+0x30]
  420c3f:	cmp    rcx,0x100
  420c46:	jae    420cb0 <flatcc_json_parser_union_type@@Base+0x480>
  420c48:	inc    edx
  420c4a:	mov    rbx,QWORD PTR [rsp+0x28]
  420c4f:	add    BYTE PTR [rbx],cl
  420c51:	cmp    DWORD PTR [rsp+0x10],0x0
  420c56:	mov    r13,rax
  420c59:	mov    rbp,QWORD PTR [rsp+0x20]
  420c5e:	mov    rcx,QWORD PTR [rsp+0x18]
  420c63:	jne    420bc9 <flatcc_json_parser_union_type@@Base+0x399>
  420c69:	jmp    420c90 <flatcc_json_parser_union_type@@Base+0x460>
  420c6b:	cmp    DWORD PTR [r14+0x20],0x0
  420c70:	jne    420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420c72:	mov    DWORD PTR [r14+0x20],0x17
  420c7a:	mov    eax,DWORD PTR [r14+0x8]
  420c7e:	mov    ecx,r13d
  420c81:	sub    ecx,eax
  420c83:	inc    ecx
  420c85:	mov    DWORD PTR [r14+0x1c],ecx
  420c89:	mov    QWORD PTR [r14+0x38],r13
  420c8d:	mov    rax,r15
  420c90:	add    rsp,0x38
  420c94:	pop    rbx
  420c95:	pop    r12
  420c97:	pop    r13
  420c99:	pop    r14
  420c9b:	pop    r15
  420c9d:	pop    rbp
  420c9e:	ret    
  420c9f:	cmp    DWORD PTR [r14+0x20],0x0
  420ca4:	jne    420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420ca6:	mov    DWORD PTR [r14+0x20],0x8
  420cae:	jmp    420cd0 <flatcc_json_parser_union_type@@Base+0x4a0>
  420cb0:	cmp    DWORD PTR [r14+0x20],0x0
  420cb5:	jne    420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420cb7:	mov    DWORD PTR [r14+0x20],0x7
  420cbf:	jmp    420cd0 <flatcc_json_parser_union_type@@Base+0x4a0>
  420cc1:	cmp    DWORD PTR [r14+0x20],0x0
  420cc6:	jne    420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420cc8:	mov    DWORD PTR [r14+0x20],0xe
  420cd0:	mov    ecx,DWORD PTR [r14+0x8]
  420cd4:	mov    edx,eax
  420cd6:	sub    edx,ecx
  420cd8:	inc    edx
  420cda:	mov    DWORD PTR [r14+0x1c],edx
  420cde:	mov    QWORD PTR [r14+0x38],rax
  420ce2:	jmp    420c8d <flatcc_json_parser_union_type@@Base+0x45d>
  420ce4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420cee:	xchg   ax,ax

0000000000420cf0 <flatcc_json_parser_union_vector@@Base>:
  420cf0:	push   rbp
  420cf1:	push   r15
  420cf3:	push   r14
  420cf5:	push   r12
  420cf7:	push   rbx
  420cf8:	mov    r12d,r8d
  420cfb:	mov    rbp,rcx
  420cfe:	mov    r14,rdx
  420d01:	mov    r15,rsi
  420d04:	mov    rbx,rdi
  420d07:	mov    rdi,QWORD PTR [rdi]
  420d0a:	mov    rsi,r9
  420d0d:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  420d12:	lea    rdx,[rbp*4+0x0]
  420d1a:	add    rdx,rbp
  420d1d:	cmp    QWORD PTR [rax+rdx*8+0x10],0x0
  420d23:	je     420d4f <flatcc_json_parser_union_vector@@Base+0x5f>
  420d25:	cmp    DWORD PTR [rbx+0x20],0x0
  420d29:	jne    420d43 <flatcc_json_parser_union_vector@@Base+0x53>
  420d2b:	mov    DWORD PTR [rbx+0x20],0x1c
  420d32:	mov    eax,DWORD PTR [rbx+0x8]
  420d35:	mov    ecx,r15d
  420d38:	sub    ecx,eax
  420d3a:	inc    ecx
  420d3c:	mov    DWORD PTR [rbx+0x1c],ecx
  420d3f:	mov    QWORD PTR [rbx+0x38],r15
  420d43:	mov    rax,r14
  420d46:	pop    rbx
  420d47:	pop    r12
  420d49:	pop    r14
  420d4b:	pop    r15
  420d4d:	pop    rbp
  420d4e:	ret    
  420d4f:	lea    rsi,[rax+0x10]
  420d53:	cmp    BYTE PTR [rsi+rdx*8+0x14],0x0
  420d58:	mov    rcx,QWORD PTR [rax+0x8]
  420d5c:	je     420d86 <flatcc_json_parser_union_vector@@Base+0x96>
  420d5e:	dec    rcx
  420d61:	mov    QWORD PTR [rax+0x8],rcx
  420d65:	mov    rcx,QWORD PTR [rsi+rdx*8+0x20]
  420d6a:	mov    r8d,DWORD PTR [rsi+rdx*8+0x18]
  420d6f:	movzx  r9d,r12w
  420d73:	mov    rdi,rbx
  420d76:	mov    rsi,r15
  420d79:	mov    rdx,r14
  420d7c:	pop    rbx
  420d7d:	pop    r12
  420d7f:	pop    r14
  420d81:	pop    r15
  420d83:	pop    rbp
  420d84:	jmp    420dc0 <flatcc_json_parser_union_vector@@Base+0xd0>
  420d86:	lea    rdi,[rax+rdx*8]
  420d8a:	add    rdi,0x10
  420d8e:	inc    rcx
  420d91:	mov    QWORD PTR [rax+0x8],rcx
  420d95:	mov    eax,DWORD PTR [rbx+0x18]
  420d98:	mov    DWORD PTR [rsi+rdx*8+0x10],eax
  420d9c:	mov    rax,QWORD PTR [rbx+0x8]
  420da0:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  420da5:	mov    QWORD PTR [rdi],r15
  420da8:	mov    rdi,rbx
  420dab:	mov    rsi,r15
  420dae:	mov    rdx,r14
  420db1:	pop    rbx
  420db2:	pop    r12
  420db4:	pop    r14
  420db6:	pop    r15
  420db8:	pop    rbp
  420db9:	jmp    41ea80 <flatcc_json_parser_generic_json@@Base>
  420dbe:	xchg   ax,ax
  420dc0:	push   rbp
  420dc1:	push   r15
  420dc3:	push   r14
  420dc5:	push   r13
  420dc7:	push   r12
  420dc9:	push   rbx
  420dca:	sub    rsp,0x18
  420dce:	mov    r14d,r9d
  420dd1:	mov    r13d,r8d
  420dd4:	mov    r12,rcx
  420dd7:	mov    r15,rdx
  420dda:	mov    rbp,rsi
  420ddd:	mov    rbx,rdi
  420de0:	mov    DWORD PTR [rsp+0xc],0x0
  420de8:	mov    rdi,QWORD PTR [rdi]
  420deb:	call   41aba0 <flatcc_builder_start_offset_vector@@Base>
  420df0:	test   eax,eax
  420df2:	je     420e0a <flatcc_json_parser_union_vector@@Base+0x11a>
  420df4:	cmp    DWORD PTR [rbx+0x20],0x0
  420df8:	jne    421034 <flatcc_json_parser_union_vector@@Base+0x344>
  420dfe:	mov    DWORD PTR [rbx+0x20],0x21
  420e05:	jmp    421024 <flatcc_json_parser_union_vector@@Base+0x334>
  420e0a:	cmp    rbp,r15
  420e0d:	je     420e40 <flatcc_json_parser_union_vector@@Base+0x150>
  420e0f:	cmp    BYTE PTR [rbp+0x0],0x5b
  420e13:	jne    420e40 <flatcc_json_parser_union_vector@@Base+0x150>
  420e15:	lea    rax,[rbp+0x1]
  420e19:	mov    rcx,r15
  420e1c:	sub    rcx,rax
  420e1f:	cmp    rcx,0x2
  420e23:	mov    DWORD PTR [rsp+0x8],r14d
  420e28:	jl     420e6c <flatcc_json_parser_union_vector@@Base+0x17c>
  420e2a:	cmp    BYTE PTR [rax],0x20
  420e2d:	jg     420e7a <flatcc_json_parser_union_vector@@Base+0x18a>
  420e2f:	jne    420e6c <flatcc_json_parser_union_vector@@Base+0x17c>
  420e31:	cmp    BYTE PTR [rbp+0x2],0x20
  420e35:	jle    420e6c <flatcc_json_parser_union_vector@@Base+0x17c>
  420e37:	add    rbp,0x2
  420e3b:	mov    rax,rbp
  420e3e:	jmp    420e7a <flatcc_json_parser_union_vector@@Base+0x18a>
  420e40:	cmp    DWORD PTR [rbx+0x20],0x0
  420e44:	mov    rsi,r15
  420e47:	jne    42100b <flatcc_json_parser_union_vector@@Base+0x31b>
  420e4d:	mov    DWORD PTR [rbx+0x20],0x16
  420e54:	mov    eax,DWORD PTR [rbx+0x8]
  420e57:	mov    ecx,ebp
  420e59:	sub    ecx,eax
  420e5b:	inc    ecx
  420e5d:	mov    DWORD PTR [rbx+0x1c],ecx
  420e60:	mov    QWORD PTR [rbx+0x38],rbp
  420e64:	mov    rsi,r15
  420e67:	jmp    42100b <flatcc_json_parser_union_vector@@Base+0x31b>
  420e6c:	mov    rdi,rbx
  420e6f:	mov    rsi,rax
  420e72:	mov    rdx,r15
  420e75:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  420e7a:	mov    r14,r15
  420e7d:	cmp    rax,r15
  420e80:	je     420ec5 <flatcc_json_parser_union_vector@@Base+0x1d5>
  420e82:	cmp    BYTE PTR [rax],0x5d
  420e85:	jne    420ec2 <flatcc_json_parser_union_vector@@Base+0x1d2>
  420e87:	lea    rsi,[rax+0x1]
  420e8b:	mov    rcx,r15
  420e8e:	sub    rcx,rsi
  420e91:	cmp    rcx,0x2
  420e95:	mov    r14d,DWORD PTR [rsp+0x8]
  420e9a:	jl     420ffd <flatcc_json_parser_union_vector@@Base+0x30d>
  420ea0:	cmp    BYTE PTR [rsi],0x20
  420ea3:	jg     42100b <flatcc_json_parser_union_vector@@Base+0x31b>
  420ea9:	jne    420ffd <flatcc_json_parser_union_vector@@Base+0x30d>
  420eaf:	cmp    BYTE PTR [rax+0x2],0x20
  420eb3:	jle    420ffd <flatcc_json_parser_union_vector@@Base+0x30d>
  420eb9:	add    rax,0x2
  420ebd:	jmp    421008 <flatcc_json_parser_union_vector@@Base+0x318>
  420ec2:	mov    r14,rax
  420ec5:	test   r13d,r13d
  420ec8:	je     420fdd <flatcc_json_parser_union_vector@@Base+0x2ed>
  420ece:	mov    eax,r13d
  420ed1:	mov    QWORD PTR [rsp+0x10],rax
  420ed6:	xor    r13d,r13d
  420ed9:	nop    DWORD PTR [rax+0x0]
  420ee0:	mov    rdi,QWORD PTR [rbx]
  420ee3:	mov    rsi,r12
  420ee6:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  420eeb:	movzx  ecx,BYTE PTR [rax+r13*1]
  420ef0:	mov    rdi,rbx
  420ef3:	mov    rsi,r14
  420ef6:	mov    rdx,r15
  420ef9:	lea    r8,[rsp+0xc]
  420efe:	call   QWORD PTR [rsp+0x50]
  420f02:	cmp    rax,r15
  420f05:	je     421034 <flatcc_json_parser_union_vector@@Base+0x344>
  420f0b:	mov    rbp,rax
  420f0e:	mov    rdi,QWORD PTR [rbx]
  420f11:	mov    esi,0x1
  420f16:	call   41a4b0 <flatcc_builder_extend_offset_vector@@Base>
  420f1b:	test   rax,rax
  420f1e:	je     420df4 <flatcc_json_parser_union_vector@@Base+0x104>
  420f24:	mov    ecx,DWORD PTR [rsp+0xc]
  420f28:	mov    DWORD PTR [rax],ecx
  420f2a:	mov    rax,r15
  420f2d:	sub    rax,rbp
  420f30:	cmp    rax,0x2
  420f34:	mov    r14d,DWORD PTR [rsp+0x8]
  420f39:	jl     420f56 <flatcc_json_parser_union_vector@@Base+0x266>
  420f3b:	cmp    BYTE PTR [rbp+0x0],0x20
  420f3f:	jg     420f67 <flatcc_json_parser_union_vector@@Base+0x277>
  420f41:	jne    420f56 <flatcc_json_parser_union_vector@@Base+0x266>
  420f43:	cmp    BYTE PTR [rbp+0x1],0x20
  420f47:	jle    420f56 <flatcc_json_parser_union_vector@@Base+0x266>
  420f49:	inc    rbp
  420f4c:	cmp    rbp,r15
  420f4f:	jne    420f70 <flatcc_json_parser_union_vector@@Base+0x280>
  420f51:	jmp    421046 <flatcc_json_parser_union_vector@@Base+0x356>
  420f56:	mov    rdi,rbx
  420f59:	mov    rsi,rbp
  420f5c:	mov    rdx,r15
  420f5f:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  420f64:	mov    rbp,rax
  420f67:	cmp    rbp,r15
  420f6a:	je     421046 <flatcc_json_parser_union_vector@@Base+0x356>
  420f70:	movzx  eax,BYTE PTR [rbp+0x0]
  420f74:	cmp    al,0x2c
  420f76:	jne    42104e <flatcc_json_parser_union_vector@@Base+0x35e>
  420f7c:	lea    r14,[rbp+0x1]
  420f80:	mov    rax,r15
  420f83:	sub    rax,r14
  420f86:	cmp    rax,0x2
  420f8a:	jl     420fab <flatcc_json_parser_union_vector@@Base+0x2bb>
  420f8c:	cmp    BYTE PTR [r14],0x20
  420f90:	jg     420fbc <flatcc_json_parser_union_vector@@Base+0x2cc>
  420f92:	jne    420fab <flatcc_json_parser_union_vector@@Base+0x2bb>
  420f94:	cmp    BYTE PTR [rbp+0x2],0x20
  420f98:	jle    420fab <flatcc_json_parser_union_vector@@Base+0x2bb>
  420f9a:	add    rbp,0x2
  420f9e:	mov    r14,rbp
  420fa1:	cmp    r14,r15
  420fa4:	jne    420fc5 <flatcc_json_parser_union_vector@@Base+0x2d5>
  420fa6:	jmp    42108f <flatcc_json_parser_union_vector@@Base+0x39f>
  420fab:	mov    rdi,rbx
  420fae:	mov    rsi,r14
  420fb1:	mov    rdx,r15
  420fb4:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  420fb9:	mov    r14,rax
  420fbc:	cmp    r14,r15
  420fbf:	je     42108f <flatcc_json_parser_union_vector@@Base+0x39f>
  420fc5:	cmp    BYTE PTR [r14],0x5d
  420fc9:	je     4210be <flatcc_json_parser_union_vector@@Base+0x3ce>
  420fcf:	inc    r13
  420fd2:	cmp    QWORD PTR [rsp+0x10],r13
  420fd7:	jne    420ee0 <flatcc_json_parser_union_vector@@Base+0x1f0>
  420fdd:	cmp    DWORD PTR [rbx+0x20],0x0
  420fe1:	jne    421034 <flatcc_json_parser_union_vector@@Base+0x344>
  420fe3:	mov    DWORD PTR [rbx+0x20],0x1e
  420fea:	mov    eax,DWORD PTR [rbx+0x8]
  420fed:	mov    ecx,r14d
  420ff0:	sub    ecx,eax
  420ff2:	inc    ecx
  420ff4:	mov    DWORD PTR [rbx+0x1c],ecx
  420ff7:	mov    QWORD PTR [rbx+0x38],r14
  420ffb:	jmp    421034 <flatcc_json_parser_union_vector@@Base+0x344>
  420ffd:	mov    rdi,rbx
  421000:	mov    rdx,r15
  421003:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  421008:	mov    rsi,rax
  42100b:	mov    rbp,rsi
  42100e:	test   r13d,r13d
  421011:	je     421141 <flatcc_json_parser_union_vector@@Base+0x451>
  421017:	cmp    DWORD PTR [rbx+0x20],0x0
  42101b:	jne    421034 <flatcc_json_parser_union_vector@@Base+0x344>
  42101d:	mov    DWORD PTR [rbx+0x20],0x1e
  421024:	mov    eax,DWORD PTR [rbx+0x8]
  421027:	mov    ecx,ebp
  421029:	sub    ecx,eax
  42102b:	inc    ecx
  42102d:	mov    DWORD PTR [rbx+0x1c],ecx
  421030:	mov    QWORD PTR [rbx+0x38],rbp
  421034:	mov    rax,r15
  421037:	add    rsp,0x18
  42103b:	pop    rbx
  42103c:	pop    r12
  42103e:	pop    r13
  421040:	pop    r14
  421042:	pop    r15
  421044:	pop    rbp
  421045:	ret    
  421046:	mov    rax,r15
  421049:	jmp    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  42104e:	cmp    al,0x5d
  421050:	jne    4210fa <flatcc_json_parser_union_vector@@Base+0x40a>
  421056:	lea    rax,[rbp+0x1]
  42105a:	mov    rcx,r15
  42105d:	sub    rcx,rax
  421060:	cmp    rcx,0x2
  421064:	jl     42111f <flatcc_json_parser_union_vector@@Base+0x42f>
  42106a:	cmp    BYTE PTR [rax],0x20
  42106d:	jg     42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  421073:	jne    42111f <flatcc_json_parser_union_vector@@Base+0x42f>
  421079:	cmp    BYTE PTR [rbp+0x2],0x20
  42107d:	jle    42111f <flatcc_json_parser_union_vector@@Base+0x42f>
  421083:	add    rbp,0x2
  421087:	mov    rax,rbp
  42108a:	jmp    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  42108f:	cmp    DWORD PTR [rbx+0x20],0x0
  421093:	mov    rax,r15
  421096:	mov    r14d,DWORD PTR [rsp+0x8]
  42109b:	jne    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  4210a1:	mov    DWORD PTR [rbx+0x20],0x9
  4210a8:	mov    eax,DWORD PTR [rbx+0x8]
  4210ab:	mov    ecx,r15d
  4210ae:	sub    ecx,eax
  4210b0:	inc    ecx
  4210b2:	mov    DWORD PTR [rbx+0x1c],ecx
  4210b5:	mov    QWORD PTR [rbx+0x38],r15
  4210b9:	mov    rax,r15
  4210bc:	jmp    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  4210be:	lea    rax,[r14+0x1]
  4210c2:	mov    rcx,r15
  4210c5:	sub    rcx,rax
  4210c8:	cmp    rcx,0x2
  4210cc:	jl     4210e5 <flatcc_json_parser_union_vector@@Base+0x3f5>
  4210ce:	cmp    BYTE PTR [rax],0x20
  4210d1:	jg     4210f3 <flatcc_json_parser_union_vector@@Base+0x403>
  4210d3:	jne    4210e5 <flatcc_json_parser_union_vector@@Base+0x3f5>
  4210d5:	cmp    BYTE PTR [r14+0x2],0x20
  4210da:	jle    4210e5 <flatcc_json_parser_union_vector@@Base+0x3f5>
  4210dc:	add    r14,0x2
  4210e0:	mov    rax,r14
  4210e3:	jmp    4210f3 <flatcc_json_parser_union_vector@@Base+0x403>
  4210e5:	mov    rdi,rbx
  4210e8:	mov    rsi,rax
  4210eb:	mov    rdx,r15
  4210ee:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4210f3:	mov    r14d,DWORD PTR [rsp+0x8]
  4210f8:	jmp    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  4210fa:	cmp    DWORD PTR [rbx+0x20],0x0
  4210fe:	mov    rax,r15
  421101:	jne    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  421103:	mov    DWORD PTR [rbx+0x20],0x9
  42110a:	mov    eax,DWORD PTR [rbx+0x8]
  42110d:	mov    ecx,ebp
  42110f:	sub    ecx,eax
  421111:	inc    ecx
  421113:	mov    DWORD PTR [rbx+0x1c],ecx
  421116:	mov    QWORD PTR [rbx+0x38],rbp
  42111a:	mov    rax,r15
  42111d:	jmp    42112d <flatcc_json_parser_union_vector@@Base+0x43d>
  42111f:	mov    rdi,rbx
  421122:	mov    rsi,rax
  421125:	mov    rdx,r15
  421128:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  42112d:	mov    rcx,QWORD PTR [rsp+0x10]
  421132:	dec    rcx
  421135:	mov    rbp,rax
  421138:	cmp    rcx,r13
  42113b:	jne    421017 <flatcc_json_parser_union_vector@@Base+0x327>
  421141:	mov    rdi,QWORD PTR [rbx]
  421144:	mov    rsi,r12
  421147:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  42114c:	mov    rdi,QWORD PTR [rbx]
  42114f:	mov    rsi,rax
  421152:	call   41bfe0 <flatcc_builder_end_offset_vector_for_unions@@Base>
  421157:	mov    DWORD PTR [rsp+0xc],eax
  42115b:	test   eax,eax
  42115d:	je     420df4 <flatcc_json_parser_union_vector@@Base+0x104>
  421163:	mov    rdi,QWORD PTR [rbx]
  421166:	movzx  esi,r14w
  42116a:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  42116f:	test   rax,rax
  421172:	je     420df4 <flatcc_json_parser_union_vector@@Base+0x104>
  421178:	mov    ecx,DWORD PTR [rsp+0xc]
  42117c:	mov    DWORD PTR [rax],ecx
  42117e:	mov    r15,rbp
  421181:	jmp    421034 <flatcc_json_parser_union_vector@@Base+0x344>
  421186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000421190 <flatcc_json_parser_union_type_vector@@Base>:
  421190:	push   rbp
  421191:	push   r15
  421193:	push   r14
  421195:	push   r13
  421197:	push   r12
  421199:	push   rbx
  42119a:	sub    rsp,0x48
  42119e:	mov    r13,r9
  4211a1:	mov    r12d,r8d
  4211a4:	mov    rbx,rcx
  4211a7:	mov    r14,rdx
  4211aa:	mov    r15,rsi
  4211ad:	mov    rbp,rdi
  4211b0:	mov    rdi,QWORD PTR [rdi]
  4211b3:	mov    rsi,r9
  4211b6:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  4211bb:	lea    rbx,[rbx+rbx*4]
  4211bf:	cmp    BYTE PTR [rax+rbx*8+0x24],0x0
  4211c4:	je     4211d4 <flatcc_json_parser_union_type_vector@@Base+0x44>
  4211c6:	cmp    DWORD PTR [rbp+0x20],0x0
  4211ca:	je     421220 <flatcc_json_parser_union_type_vector@@Base+0x90>
  4211cc:	mov    r12,r14
  4211cf:	jmp    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4211d4:	mov    DWORD PTR [rsp+0x28],r12d
  4211d9:	mov    r12,rax
  4211dc:	lea    rax,[rax+rbx*8]
  4211e0:	add    rax,0x24
  4211e4:	mov    BYTE PTR [rax],0x1
  4211e7:	mov    QWORD PTR [rsp+0x18],rbp
  4211ec:	mov    rdi,QWORD PTR [rbp+0x0]
  4211f0:	mov    esi,0x1
  4211f5:	mov    ecx,0xffffffff
  4211fa:	mov    edx,0x1
  4211ff:	call   41ab20 <flatcc_builder_start_vector@@Base>
  421204:	test   eax,eax
  421206:	je     421240 <flatcc_json_parser_union_type_vector@@Base+0xb0>
  421208:	mov    r12,r14
  42120b:	mov    r13,QWORD PTR [rsp+0x18]
  421210:	cmp    DWORD PTR [r13+0x20],0x0
  421215:	jne    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42121b:	jmp    4217a3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  421220:	mov    DWORD PTR [rbp+0x20],0x1c
  421227:	mov    eax,DWORD PTR [rbp+0x8]
  42122a:	mov    ecx,r15d
  42122d:	sub    ecx,eax
  42122f:	inc    ecx
  421231:	mov    DWORD PTR [rbp+0x1c],ecx
  421234:	mov    QWORD PTR [rbp+0x38],r15
  421238:	mov    r12,r14
  42123b:	jmp    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  421240:	mov    QWORD PTR [rsp+0x40],r12
  421245:	cmp    r15,r14
  421248:	mov    QWORD PTR [rsp+0x20],rbx
  42124d:	mov    QWORD PTR [rsp+0x30],r13
  421252:	je     421277 <flatcc_json_parser_union_type_vector@@Base+0xe7>
  421254:	cmp    BYTE PTR [r15],0x5b
  421258:	jne    421277 <flatcc_json_parser_union_type_vector@@Base+0xe7>
  42125a:	lea    rax,[r15+0x1]
  42125e:	mov    rcx,r14
  421261:	sub    rcx,rax
  421264:	cmp    rcx,0x2
  421268:	jl     4212cb <flatcc_json_parser_union_type_vector@@Base+0x13b>
  42126a:	cmp    BYTE PTR [rax],0x20
  42126d:	jle    4212b3 <flatcc_json_parser_union_type_vector@@Base+0x123>
  42126f:	mov    rbp,rbx
  421272:	mov    rbx,r14
  421275:	jmp    4212e1 <flatcc_json_parser_union_type_vector@@Base+0x151>
  421277:	mov    rbp,rbx
  42127a:	mov    r13,QWORD PTR [rsp+0x18]
  42127f:	cmp    DWORD PTR [r13+0x20],0x0
  421284:	mov    r12,r14
  421287:	mov    rdx,r14
  42128a:	jne    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421290:	mov    DWORD PTR [r13+0x20],0x16
  421298:	mov    eax,DWORD PTR [r13+0x8]
  42129c:	mov    ecx,r15d
  42129f:	sub    ecx,eax
  4212a1:	inc    ecx
  4212a3:	mov    DWORD PTR [r13+0x1c],ecx
  4212a7:	mov    QWORD PTR [r13+0x38],r15
  4212ab:	mov    rdx,r12
  4212ae:	jmp    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4212b3:	jne    4212cb <flatcc_json_parser_union_type_vector@@Base+0x13b>
  4212b5:	cmp    BYTE PTR [r15+0x2],0x20
  4212ba:	jle    4212cb <flatcc_json_parser_union_type_vector@@Base+0x13b>
  4212bc:	mov    rbp,rbx
  4212bf:	add    r15,0x2
  4212c3:	mov    rax,r15
  4212c6:	mov    rbx,r14
  4212c9:	jmp    4212e1 <flatcc_json_parser_union_type_vector@@Base+0x151>
  4212cb:	mov    rbp,rbx
  4212ce:	mov    rdi,QWORD PTR [rsp+0x18]
  4212d3:	mov    rsi,rax
  4212d6:	mov    rbx,r14
  4212d9:	mov    rdx,r14
  4212dc:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  4212e1:	mov    r15,rbx
  4212e4:	cmp    rax,rbx
  4212e7:	mov    rbx,QWORD PTR [rsp+0x18]
  4212ec:	je     421332 <flatcc_json_parser_union_type_vector@@Base+0x1a2>
  4212ee:	cmp    BYTE PTR [rax],0x5d
  4212f1:	jne    42132f <flatcc_json_parser_union_type_vector@@Base+0x19f>
  4212f3:	lea    rdx,[rax+0x1]
  4212f7:	mov    r12,r14
  4212fa:	mov    rcx,r14
  4212fd:	sub    rcx,rdx
  421300:	cmp    rcx,0x2
  421304:	mov    r13,rbx
  421307:	jl     421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42130d:	cmp    BYTE PTR [rdx],0x20
  421310:	jg     42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421316:	jne    421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42131c:	cmp    BYTE PTR [rax+0x2],0x20
  421320:	jle    421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  421326:	add    rax,0x2
  42132a:	jmp    421677 <flatcc_json_parser_union_type_vector@@Base+0x4e7>
  42132f:	mov    r15,rax
  421332:	mov    rdi,QWORD PTR [rbx]
  421335:	mov    esi,0x1
  42133a:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  42133f:	test   rax,rax
  421342:	je     4215cb <flatcc_json_parser_union_type_vector@@Base+0x43b>
  421348:	mov    rcx,QWORD PTR [rsp+0x90]
  421350:	mov    r12,r14
  421353:	mov    r13,rbx
  421356:	mov    rbx,rcx
  421359:	mov    BYTE PTR [rsp+0x17],0x0
  42135e:	cmp    r15,r12
  421361:	mov    QWORD PTR [rsp+0x38],rax
  421366:	je     421493 <flatcc_json_parser_union_type_vector@@Base+0x303>
  42136c:	mov    al,BYTE PTR [r15]
  42136f:	xor    r14d,r14d
  421372:	cmp    al,0x2d
  421374:	sete   r14b
  421378:	add    r14,r15
  42137b:	xor    ebp,ebp
  42137d:	cmp    r14,r12
  421380:	je     4213d1 <flatcc_json_parser_union_type_vector@@Base+0x241>
  421382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42138c:	nop    DWORD PTR [rax+0x0]
  421390:	movsx  rcx,BYTE PTR [r14]
  421394:	lea    edx,[rcx-0x30]
  421397:	cmp    dl,0x9
  42139a:	ja     4213dd <flatcc_json_parser_union_type_vector@@Base+0x24d>
  42139c:	lea    rdx,[rbp*4+0x0]
  4213a4:	add    rdx,rbp
  4213a7:	lea    rdx,[rcx+rdx*2]
  4213ab:	add    rdx,0xffffffffffffffd0
  4213af:	cmp    rbp,rdx
  4213b2:	ja     421417 <flatcc_json_parser_union_type_vector@@Base+0x287>
  4213b4:	inc    r14
  4213b7:	mov    rbp,rdx
  4213ba:	cmp    r12,r14
  4213bd:	jne    421390 <flatcc_json_parser_union_type_vector@@Base+0x200>
  4213bf:	xor    ecx,ecx
  4213c1:	mov    r14,r12
  4213c4:	mov    rbp,rdx
  4213c7:	cmp    r14,r15
  4213ca:	jne    4213e4 <flatcc_json_parser_union_type_vector@@Base+0x254>
  4213cc:	jmp    421458 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  4213d1:	mov    r14,r12
  4213d4:	xor    ecx,ecx
  4213d6:	cmp    r14,r15
  4213d9:	jne    4213e4 <flatcc_json_parser_union_type_vector@@Base+0x254>
  4213db:	jmp    421458 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  4213dd:	mov    cl,0x1
  4213df:	cmp    r14,r15
  4213e2:	je     421458 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  4213e4:	test   cl,cl
  4213e6:	je     42143e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  4213e8:	mov    cl,BYTE PTR [r14]
  4213eb:	add    cl,0xd2
  4213ee:	cmp    cl,0x37
  4213f1:	ja     42143e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  4213f3:	movzx  ecx,cl
  4213f6:	movabs rdx,0x80000000800001
  421400:	bt     rdx,rcx
  421404:	jae    42143e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  421406:	cmp    DWORD PTR [r13+0x20],0x0
  42140b:	jne    421439 <flatcc_json_parser_union_type_vector@@Base+0x2a9>
  42140d:	mov    DWORD PTR [r13+0x20],0xc
  421415:	jmp    421426 <flatcc_json_parser_union_type_vector@@Base+0x296>
  421417:	cmp    DWORD PTR [r13+0x20],0x0
  42141c:	jne    421439 <flatcc_json_parser_union_type_vector@@Base+0x2a9>
  42141e:	mov    DWORD PTR [r13+0x20],0x8
  421426:	mov    ecx,DWORD PTR [r13+0x8]
  42142a:	mov    edx,r14d
  42142d:	sub    edx,ecx
  42142f:	inc    edx
  421431:	mov    DWORD PTR [r13+0x1c],edx
  421435:	mov    QWORD PTR [r13+0x38],r14
  421439:	xor    ebp,ebp
  42143b:	mov    r14,r12
  42143e:	cmp    r14,r15
  421441:	je     421458 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  421443:	cmp    al,0x2d
  421445:	jne    421464 <flatcc_json_parser_union_type_vector@@Base+0x2d4>
  421447:	cmp    DWORD PTR [r13+0x20],0x0
  42144c:	jne    421493 <flatcc_json_parser_union_type_vector@@Base+0x303>
  42144e:	mov    DWORD PTR [r13+0x20],0x8
  421456:	jmp    421480 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
  421458:	xor    ebp,ebp
  42145a:	mov    r14,r15
  42145d:	cmp    r15,r14
  421460:	jne    4214d2 <flatcc_json_parser_union_type_vector@@Base+0x342>
  421462:	jmp    42149d <flatcc_json_parser_union_type_vector@@Base+0x30d>
  421464:	cmp    rbp,0x100
  42146b:	jb     4215b8 <flatcc_json_parser_union_type_vector@@Base+0x428>
  421471:	cmp    DWORD PTR [r13+0x20],0x0
  421476:	jne    421493 <flatcc_json_parser_union_type_vector@@Base+0x303>
  421478:	mov    DWORD PTR [r13+0x20],0x7
  421480:	mov    eax,DWORD PTR [r13+0x8]
  421484:	mov    ecx,r14d
  421487:	sub    ecx,eax
  421489:	inc    ecx
  42148b:	mov    DWORD PTR [r13+0x1c],ecx
  42148f:	mov    QWORD PTR [r13+0x38],r14
  421493:	xor    ebp,ebp
  421495:	mov    r14,r12
  421498:	cmp    r15,r14
  42149b:	jne    4214d2 <flatcc_json_parser_union_type_vector@@Base+0x342>
  42149d:	mov    rdi,r13
  4214a0:	mov    rsi,r15
  4214a3:	mov    rdx,r12
  4214a6:	mov    rcx,QWORD PTR [rsp+0x80]
  4214ae:	lea    r8,[rsp+0x17]
  4214b3:	call   420af0 <flatcc_json_parser_union_type@@Base+0x2c0>
  4214b8:	mov    r14,rax
  4214bb:	cmp    rax,r15
  4214be:	je     42180f <flatcc_json_parser_union_type_vector@@Base+0x67f>
  4214c4:	cmp    r14,r12
  4214c7:	je     42180f <flatcc_json_parser_union_type_vector@@Base+0x67f>
  4214cd:	mov    bpl,BYTE PTR [rsp+0x17]
  4214d2:	movzx  edi,bpl
  4214d6:	call   rbx
  4214d8:	test   eax,eax
  4214da:	jne    4214ee <flatcc_json_parser_union_type_vector@@Base+0x35e>
  4214dc:	test   BYTE PTR [r13+0x10],0x1
  4214e1:	je     42181b <flatcc_json_parser_union_type_vector@@Base+0x68b>
  4214e7:	mov    BYTE PTR [rsp+0x17],0x0
  4214ec:	xor    ebp,ebp
  4214ee:	mov    rax,QWORD PTR [rsp+0x38]
  4214f3:	mov    BYTE PTR [rax],bpl
  4214f6:	mov    rax,r12
  4214f9:	sub    rax,r14
  4214fc:	cmp    rax,0x2
  421500:	mov    rbp,QWORD PTR [rsp+0x20]
  421505:	jl     421523 <flatcc_json_parser_union_type_vector@@Base+0x393>
  421507:	cmp    BYTE PTR [r14],0x20
  42150b:	jg     421534 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
  42150d:	jne    421523 <flatcc_json_parser_union_type_vector@@Base+0x393>
  42150f:	cmp    BYTE PTR [r14+0x1],0x20
  421514:	jle    421523 <flatcc_json_parser_union_type_vector@@Base+0x393>
  421516:	inc    r14
  421519:	cmp    r14,r12
  42151c:	jne    42153d <flatcc_json_parser_union_type_vector@@Base+0x3ad>
  42151e:	jmp    4215e1 <flatcc_json_parser_union_type_vector@@Base+0x451>
  421523:	mov    rdi,r13
  421526:	mov    rsi,r14
  421529:	mov    rdx,r12
  42152c:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  421531:	mov    r14,rax
  421534:	cmp    r14,r12
  421537:	je     4215e1 <flatcc_json_parser_union_type_vector@@Base+0x451>
  42153d:	mov    al,BYTE PTR [r14]
  421540:	cmp    al,0x2c
  421542:	jne    4215e9 <flatcc_json_parser_union_type_vector@@Base+0x459>
  421548:	lea    r15,[r14+0x1]
  42154c:	mov    rax,r12
  42154f:	sub    rax,r15
  421552:	cmp    rax,0x2
  421556:	jl     421578 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  421558:	cmp    BYTE PTR [r15],0x20
  42155c:	jg     421589 <flatcc_json_parser_union_type_vector@@Base+0x3f9>
  42155e:	jne    421578 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  421560:	cmp    BYTE PTR [r14+0x2],0x20
  421565:	jle    421578 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  421567:	add    r14,0x2
  42156b:	mov    r15,r14
  42156e:	cmp    r15,r12
  421571:	jne    421592 <flatcc_json_parser_union_type_vector@@Base+0x402>
  421573:	jmp    421618 <flatcc_json_parser_union_type_vector@@Base+0x488>
  421578:	mov    rdi,r13
  42157b:	mov    rsi,r15
  42157e:	mov    rdx,r12
  421581:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  421586:	mov    r15,rax
  421589:	cmp    r15,r12
  42158c:	je     421618 <flatcc_json_parser_union_type_vector@@Base+0x488>
  421592:	cmp    BYTE PTR [r15],0x5d
  421596:	je     421642 <flatcc_json_parser_union_type_vector@@Base+0x4b2>
  42159c:	mov    rdi,QWORD PTR [r13+0x0]
  4215a0:	mov    esi,0x1
  4215a5:	call   41a1d0 <flatcc_builder_extend_vector@@Base>
  4215aa:	test   rax,rax
  4215ad:	jne    421359 <flatcc_json_parser_union_type_vector@@Base+0x1c9>
  4215b3:	jmp    42179c <flatcc_json_parser_union_type_vector@@Base+0x60c>
  4215b8:	mov    BYTE PTR [rsp+0x17],bpl
  4215bd:	cmp    r15,r14
  4215c0:	jne    4214d2 <flatcc_json_parser_union_type_vector@@Base+0x342>
  4215c6:	jmp    42149d <flatcc_json_parser_union_type_vector@@Base+0x30d>
  4215cb:	mov    r12,r14
  4215ce:	mov    r13,rbx
  4215d1:	cmp    DWORD PTR [r13+0x20],0x0
  4215d6:	jne    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4215dc:	jmp    4217a3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  4215e1:	mov    rdx,r12
  4215e4:	jmp    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4215e9:	cmp    al,0x5d
  4215eb:	jne    4217de <flatcc_json_parser_union_type_vector@@Base+0x64e>
  4215f1:	lea    rdx,[r14+0x1]
  4215f5:	mov    rax,r12
  4215f8:	sub    rax,rdx
  4215fb:	cmp    rax,0x2
  4215ff:	jl     421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  421601:	cmp    BYTE PTR [rdx],0x20
  421604:	jg     42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421606:	jne    421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  421608:	cmp    BYTE PTR [r14+0x2],0x20
  42160d:	jle    421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42160f:	add    r14,0x2
  421613:	mov    rdx,r14
  421616:	jmp    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421618:	cmp    DWORD PTR [r13+0x20],0x0
  42161d:	mov    rdx,r12
  421620:	jne    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421622:	mov    DWORD PTR [r13+0x20],0x9
  42162a:	mov    eax,DWORD PTR [r13+0x8]
  42162e:	mov    ecx,r12d
  421631:	sub    ecx,eax
  421633:	inc    ecx
  421635:	mov    DWORD PTR [r13+0x1c],ecx
  421639:	mov    QWORD PTR [r13+0x38],r12
  42163d:	mov    rdx,r12
  421640:	jmp    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421642:	lea    rdx,[r15+0x1]
  421646:	mov    rax,r12
  421649:	sub    rax,rdx
  42164c:	cmp    rax,0x2
  421650:	jl     421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  421652:	cmp    BYTE PTR [rdx],0x20
  421655:	jg     42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421657:	jne    421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  421659:	cmp    BYTE PTR [r15+0x2],0x20
  42165e:	jle    421669 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  421660:	add    r15,0x2
  421664:	mov    rdx,r15
  421667:	jmp    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  421669:	mov    rdi,r13
  42166c:	mov    rsi,rdx
  42166f:	mov    rdx,r12
  421672:	call   41e380 <flatcc_json_parser_space_ext@@Base>
  421677:	mov    rdx,rax
  42167a:	mov    QWORD PTR [rsp+0x18],rdx
  42167f:	mov    rbx,QWORD PTR [rsp+0x40]
  421684:	add    rbx,0x10
  421688:	mov    rdi,QWORD PTR [r13+0x0]
  42168c:	call   41bd80 <flatcc_builder_vector_count@@Base>
  421691:	mov    r14,rax
  421694:	mov    DWORD PTR [rbx+rbp*8+0x18],r14d
  421699:	mov    rbx,r13
  42169c:	mov    r13d,r14d
  42169f:	mov    rdi,QWORD PTR [rbx]
  4216a2:	mov    rsi,r13
  4216a5:	call   419520 <flatcc_builder_enter_user_frame@@Base>
  4216aa:	mov    r15,rax
  4216ad:	mov    rdi,QWORD PTR [rbx]
  4216b0:	mov    rsi,rax
  4216b3:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  4216b8:	mov    rbp,rax
  4216bb:	mov    rdi,QWORD PTR [rbx]
  4216be:	call   41bd90 <flatcc_builder_vector_edit@@Base>
  4216c3:	mov    rdi,rbp
  4216c6:	mov    rsi,rax
  4216c9:	mov    rdx,r13
  4216cc:	call   4040f0 <memcpy@plt>
  4216d1:	mov    rdi,QWORD PTR [rbx]
  4216d4:	call   41bcb0 <flatcc_builder_end_vector@@Base>
  4216d9:	test   eax,eax
  4216db:	je     421794 <flatcc_json_parser_union_type_vector@@Base+0x604>
  4216e1:	mov    r13d,eax
  4216e4:	mov    rdi,QWORD PTR [rbx]
  4216e7:	movzx  ebp,WORD PTR [rsp+0x28]
  4216ec:	lea    esi,[rbp-0x1]
  4216ef:	call   41c1b0 <flatcc_builder_table_add_offset@@Base>
  4216f4:	test   rax,rax
  4216f7:	je     421794 <flatcc_json_parser_union_type_vector@@Base+0x604>
  4216fd:	mov    QWORD PTR [rsp+0x28],rbp
  421702:	mov    DWORD PTR [rax],r13d
  421705:	mov    rdi,QWORD PTR [rbx]
  421708:	mov    rsi,QWORD PTR [rsp+0x30]
  42170d:	call   4196b0 <flatcc_builder_get_user_frame_ptr@@Base>
  421712:	mov    rcx,QWORD PTR [rsp+0x20]
  421717:	mov    QWORD PTR [rax+rcx*8+0x30],r15
  42171c:	mov    rsi,QWORD PTR [rax+rcx*8+0x10]
  421721:	mov    rcx,QWORD PTR [rax+0x8]
  421725:	test   rsi,rsi
  421728:	je     4217c0 <flatcc_json_parser_union_type_vector@@Base+0x630>
  42172e:	test   rcx,rcx
  421731:	je     42183f <flatcc_json_parser_union_type_vector@@Base+0x6af>
  421737:	mov    rbp,rbx
  42173a:	mov    rdx,QWORD PTR [rsp+0x88]
  421742:	mov    rdi,rax
  421745:	add    rdi,0x10
  421749:	dec    rcx
  42174c:	mov    QWORD PTR [rax+0x8],rcx
  421750:	mov    ebx,DWORD PTR [rbx+0x18]
  421753:	mov    r13,QWORD PTR [rbp+0x8]
  421757:	mov    rcx,QWORD PTR [rsp+0x20]
  42175c:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
  421760:	mov    DWORD PTR [rbp+0x18],eax
  421763:	mov    rax,QWORD PTR [rdi+rcx*8+0x8]
  421768:	mov    QWORD PTR [rbp+0x8],rax
  42176c:	mov    QWORD PTR [rsp],rdx
  421770:	mov    rdi,rbp
  421773:	mov    rdx,r12
  421776:	mov    rcx,r15
  421779:	mov    r8d,r14d
  42177c:	mov    r9,QWORD PTR [rsp+0x28]
  421781:	call   420dc0 <flatcc_json_parser_union_vector@@Base+0xd0>
  421786:	cmp    rax,r12
  421789:	je     4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42178b:	mov    DWORD PTR [rbp+0x18],ebx
  42178e:	mov    QWORD PTR [rbp+0x8],r13
  421792:	jmp    4217c7 <flatcc_json_parser_union_type_vector@@Base+0x637>
  421794:	mov    r15,QWORD PTR [rsp+0x18]
  421799:	mov    r13,rbx
  42179c:	cmp    DWORD PTR [r13+0x20],0x0
  4217a1:	jne    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4217a3:	mov    DWORD PTR [r13+0x20],0x21
  4217ab:	mov    eax,DWORD PTR [r13+0x8]
  4217af:	mov    ecx,r15d
  4217b2:	sub    ecx,eax
  4217b4:	inc    ecx
  4217b6:	mov    DWORD PTR [r13+0x1c],ecx
  4217ba:	mov    QWORD PTR [r13+0x38],r15
  4217be:	jmp    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4217c0:	inc    rcx
  4217c3:	mov    QWORD PTR [rax+0x8],rcx
  4217c7:	mov    r12,QWORD PTR [rsp+0x18]
  4217cc:	mov    rax,r12
  4217cf:	add    rsp,0x48
  4217d3:	pop    rbx
  4217d4:	pop    r12
  4217d6:	pop    r13
  4217d8:	pop    r14
  4217da:	pop    r15
  4217dc:	pop    rbp
  4217dd:	ret    
  4217de:	cmp    DWORD PTR [r13+0x20],0x0
  4217e3:	mov    rdx,r12
  4217e6:	jne    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4217ec:	mov    DWORD PTR [r13+0x20],0x9
  4217f4:	mov    eax,DWORD PTR [r13+0x8]
  4217f8:	mov    ecx,r14d
  4217fb:	sub    ecx,eax
  4217fd:	inc    ecx
  4217ff:	mov    DWORD PTR [r13+0x1c],ecx
  421803:	mov    QWORD PTR [r13+0x38],r14
  421807:	mov    rdx,r12
  42180a:	jmp    42167a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  42180f:	mov    r15,r14
  421812:	cmp    DWORD PTR [r13+0x20],0x0
  421817:	jne    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  421819:	jmp    4217a3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  42181b:	cmp    DWORD PTR [r13+0x20],0x0
  421820:	jne    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  421822:	mov    DWORD PTR [r13+0x20],0xf
  42182a:	mov    eax,DWORD PTR [r13+0x8]
  42182e:	mov    ecx,r14d
  421831:	sub    ecx,eax
  421833:	inc    ecx
  421835:	mov    DWORD PTR [r13+0x1c],ecx
  421839:	mov    QWORD PTR [r13+0x38],r14
  42183d:	jmp    4217cc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42183f:	lea    rdi,[rip+0x3839]        # 42507f <flatcc_builder_padding_base@@Base+0x235f>
  421846:	lea    rsi,[rip+0x3841]        # 42508e <flatcc_builder_padding_base@@Base+0x236e>
  42184d:	lea    rcx,[rip+0x396a]        # 4251be <flatcc_builder_padding_base@@Base+0x249e>
  421854:	mov    edx,0x462
  421859:	call   404090 <__assert_fail@plt>
  42185e:	xchg   ax,ax

0000000000421860 <flatcc_json_parser_table_as_root@@Base>:
  421860:	push   r15
  421862:	push   r14
  421864:	push   r12
  421866:	push   rbx
  421867:	sub    rsp,0x58
  42186b:	mov    r12,rcx
  42186e:	mov    r14,rdx
  421871:	mov    r15,rdi
  421874:	mov    ecx,r8d
  421877:	shr    ecx,1
  421879:	and    ecx,0x2
  42187c:	test   rsi,rsi
  42187f:	lea    rbx,[rsp+0x10]
  421884:	cmovne rbx,rsi
  421888:	add    r12,rdx
  42188b:	vxorps xmm0,xmm0,xmm0
  42188f:	vmovups YMMWORD PTR [rbx],ymm0
  421893:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  421898:	mov    QWORD PTR [rbx+0x40],0x0
  4218a0:	mov    QWORD PTR [rbx],rdi
  4218a3:	mov    QWORD PTR [rbx+0x8],rdx
  4218a7:	mov    DWORD PTR [rbx+0x18],0x1
  4218ae:	mov    DWORD PTR [rbx+0x10],r8d
  4218b2:	mov    QWORD PTR [rbx+0x28],rdx
  4218b6:	mov    QWORD PTR [rbx+0x30],r12
  4218ba:	mov    QWORD PTR [rbx+0x38],rdx
  4218be:	mov    rsi,r9
  4218c1:	xor    edx,edx
  4218c3:	vzeroupper 
  4218c6:	call   419cf0 <flatcc_builder_start_buffer@@Base>
  4218cb:	mov    ecx,eax
  4218cd:	mov    eax,0xffffffff
  4218d2:	test   ecx,ecx
  4218d4:	jne    42190f <flatcc_json_parser_table_as_root@@Base+0xaf>
  4218d6:	lea    rcx,[rsp+0xc]
  4218db:	mov    rdi,rbx
  4218de:	mov    rsi,r14
  4218e1:	mov    rdx,r12
  4218e4:	call   QWORD PTR [rsp+0x80]
  4218eb:	mov    eax,DWORD PTR [rbx+0x20]
  4218ee:	test   eax,eax
  4218f0:	jne    42190f <flatcc_json_parser_table_as_root@@Base+0xaf>
  4218f2:	mov    esi,DWORD PTR [rsp+0xc]
  4218f6:	mov    rdi,r15
  4218f9:	call   419f10 <flatcc_builder_end_buffer@@Base>
  4218fe:	mov    ecx,eax
  421900:	mov    eax,0xffffffff
  421905:	test   ecx,ecx
  421907:	je     42190f <flatcc_json_parser_table_as_root@@Base+0xaf>
  421909:	mov    QWORD PTR [rbx+0x40],r14
  42190d:	xor    eax,eax
  42190f:	add    rsp,0x58
  421913:	pop    rbx
  421914:	pop    r12
  421916:	pop    r14
  421918:	pop    r15
  42191a:	ret    
  42191b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421920 <flatcc_json_parser_struct_as_root@@Base>:
  421920:	push   r15
  421922:	push   r14
  421924:	push   r12
  421926:	push   rbx
  421927:	sub    rsp,0x58
  42192b:	mov    r12,rcx
  42192e:	mov    r14,rdx
  421931:	mov    r15,rdi
  421934:	mov    ecx,r8d
  421937:	shr    ecx,1
  421939:	and    ecx,0x2
  42193c:	test   rsi,rsi
  42193f:	lea    rbx,[rsp+0x10]
  421944:	cmovne rbx,rsi
  421948:	add    r12,rdx
  42194b:	vxorps xmm0,xmm0,xmm0
  42194f:	vmovups YMMWORD PTR [rbx],ymm0
  421953:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  421958:	mov    QWORD PTR [rbx+0x40],0x0
  421960:	mov    QWORD PTR [rbx],rdi
  421963:	mov    QWORD PTR [rbx+0x8],rdx
  421967:	mov    DWORD PTR [rbx+0x18],0x1
  42196e:	mov    DWORD PTR [rbx+0x10],r8d
  421972:	mov    QWORD PTR [rbx+0x28],rdx
  421976:	mov    QWORD PTR [rbx+0x30],r12
  42197a:	mov    QWORD PTR [rbx+0x38],rdx
  42197e:	mov    rsi,r9
  421981:	xor    edx,edx
  421983:	vzeroupper 
  421986:	call   419cf0 <flatcc_builder_start_buffer@@Base>
  42198b:	mov    ecx,eax
  42198d:	mov    eax,0xffffffff
  421992:	test   ecx,ecx
  421994:	jne    4219cf <flatcc_json_parser_struct_as_root@@Base+0xaf>
  421996:	lea    rcx,[rsp+0xc]
  42199b:	mov    rdi,rbx
  42199e:	mov    rsi,r14
  4219a1:	mov    rdx,r12
  4219a4:	call   QWORD PTR [rsp+0x80]
  4219ab:	mov    eax,DWORD PTR [rbx+0x20]
  4219ae:	test   eax,eax
  4219b0:	jne    4219cf <flatcc_json_parser_struct_as_root@@Base+0xaf>
  4219b2:	mov    esi,DWORD PTR [rsp+0xc]
  4219b6:	mov    rdi,r15
  4219b9:	call   419f10 <flatcc_builder_end_buffer@@Base>
  4219be:	mov    ecx,eax
  4219c0:	mov    eax,0xffffffff
  4219c5:	test   ecx,ecx
  4219c7:	je     4219cf <flatcc_json_parser_struct_as_root@@Base+0xaf>
  4219c9:	mov    QWORD PTR [rbx+0x40],r14
  4219cd:	xor    eax,eax
  4219cf:	add    rsp,0x58
  4219d3:	pop    rbx
  4219d4:	pop    r12
  4219d6:	pop    r14
  4219d8:	pop    r15
  4219da:	ret    
  4219db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004219e0 <__libc_csu_init@@Base>:
  4219e0:	endbr64 
  4219e4:	push   r15
  4219e6:	lea    r15,[rip+0x72eb]        # 428cd8 <flatcc_builder_padding_base@@Base+0x5fb8>
  4219ed:	push   r14
  4219ef:	mov    r14,rdx
  4219f2:	push   r13
  4219f4:	mov    r13,rsi
  4219f7:	push   r12
  4219f9:	mov    r12d,edi
  4219fc:	push   rbp
  4219fd:	lea    rbp,[rip+0x72dc]        # 428ce0 <flatcc_builder_padding_base@@Base+0x5fc0>
  421a04:	push   rbx
  421a05:	sub    rbp,r15
  421a08:	sub    rsp,0x8
  421a0c:	call   404000 <free@plt-0x30>
  421a11:	sar    rbp,0x3
  421a15:	je     421a36 <__libc_csu_init@@Base+0x56>
  421a17:	xor    ebx,ebx
  421a19:	nop    DWORD PTR [rax+0x0]
  421a20:	mov    rdx,r14
  421a23:	mov    rsi,r13
  421a26:	mov    edi,r12d
  421a29:	call   QWORD PTR [r15+rbx*8]
  421a2d:	add    rbx,0x1
  421a31:	cmp    rbp,rbx
  421a34:	jne    421a20 <__libc_csu_init@@Base+0x40>
  421a36:	add    rsp,0x8
  421a3a:	pop    rbx
  421a3b:	pop    rbp
  421a3c:	pop    r12
  421a3e:	pop    r13
  421a40:	pop    r14
  421a42:	pop    r15
  421a44:	ret    
  421a45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000421a50 <__libc_csu_fini@@Base>:
  421a50:	endbr64 
  421a54:	ret    

Disassembly of section .fini:

0000000000421a58 <.fini>:
  421a58:	endbr64 
  421a5c:	sub    rsp,0x8
  421a60:	add    rsp,0x8
  421a64:	ret    
