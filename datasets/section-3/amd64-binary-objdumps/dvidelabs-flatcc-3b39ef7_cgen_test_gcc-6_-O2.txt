
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x4afd1]        # 44ffe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <__ctype_toupper_loc@plt-0x1a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <__ctype_toupper_loc@plt-0x10>:
  405020:	push   QWORD PTR [rip+0x4afe2]        # 450008 <fb_value_set_missing@@Base+0x7900>
  405026:	jmp    QWORD PTR [rip+0x4afe4]        # 450010 <fb_value_set_missing@@Base+0x7908>
  40502c:	nop    DWORD PTR [rax+0x0]

0000000000405030 <__ctype_toupper_loc@plt>:
  405030:	jmp    QWORD PTR [rip+0x4afe2]        # 450018 <__ctype_toupper_loc@GLIBC_2.3>
  405036:	push   0x0
  40503b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405040 <free@plt>:
  405040:	jmp    QWORD PTR [rip+0x4afda]        # 450020 <free@GLIBC_2.2.5>
  405046:	push   0x1
  40504b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405050 <__vfprintf_chk@plt>:
  405050:	jmp    QWORD PTR [rip+0x4afd2]        # 450028 <__vfprintf_chk@GLIBC_2.3.4>
  405056:	push   0x2
  40505b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405060 <strncpy@plt>:
  405060:	jmp    QWORD PTR [rip+0x4afca]        # 450030 <strncpy@GLIBC_2.2.5>
  405066:	push   0x3
  40506b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405070 <strncmp@plt>:
  405070:	jmp    QWORD PTR [rip+0x4afc2]        # 450038 <strncmp@GLIBC_2.2.5>
  405076:	push   0x4
  40507b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405080 <qsort@plt>:
  405080:	jmp    QWORD PTR [rip+0x4afba]        # 450040 <qsort@GLIBC_2.2.5>
  405086:	push   0x5
  40508b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405090 <fread@plt>:
  405090:	jmp    QWORD PTR [rip+0x4afb2]        # 450048 <fread@GLIBC_2.2.5>
  405096:	push   0x6
  40509b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050a0 <strtod@plt>:
  4050a0:	jmp    QWORD PTR [rip+0x4afaa]        # 450050 <strtod@GLIBC_2.2.5>
  4050a6:	push   0x7
  4050ab:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050b0 <fclose@plt>:
  4050b0:	jmp    QWORD PTR [rip+0x4afa2]        # 450058 <fclose@GLIBC_2.2.5>
  4050b6:	push   0x8
  4050bb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050c0 <strlen@plt>:
  4050c0:	jmp    QWORD PTR [rip+0x4af9a]        # 450060 <strlen@GLIBC_2.2.5>
  4050c6:	push   0x9
  4050cb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050d0 <__stack_chk_fail@plt>:
  4050d0:	jmp    QWORD PTR [rip+0x4af92]        # 450068 <__stack_chk_fail@GLIBC_2.4>
  4050d6:	push   0xa
  4050db:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050e0 <rewind@plt>:
  4050e0:	jmp    QWORD PTR [rip+0x4af8a]        # 450070 <rewind@GLIBC_2.2.5>
  4050e6:	push   0xb
  4050eb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050f0 <__assert_fail@plt>:
  4050f0:	jmp    QWORD PTR [rip+0x4af82]        # 450078 <__assert_fail@GLIBC_2.2.5>
  4050f6:	push   0xc
  4050fb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405100 <memset@plt>:
  405100:	jmp    QWORD PTR [rip+0x4af7a]        # 450080 <memset@GLIBC_2.2.5>
  405106:	push   0xd
  40510b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405110 <memchr@plt>:
  405110:	jmp    QWORD PTR [rip+0x4af72]        # 450088 <memchr@GLIBC_2.2.5>
  405116:	push   0xe
  40511b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405120 <memcmp@plt>:
  405120:	jmp    QWORD PTR [rip+0x4af6a]        # 450090 <memcmp@GLIBC_2.2.5>
  405126:	push   0xf
  40512b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405130 <calloc@plt>:
  405130:	jmp    QWORD PTR [rip+0x4af62]        # 450098 <calloc@GLIBC_2.2.5>
  405136:	push   0x10
  40513b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405140 <strcmp@plt>:
  405140:	jmp    QWORD PTR [rip+0x4af5a]        # 4500a0 <strcmp@GLIBC_2.2.5>
  405146:	push   0x11
  40514b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405150 <ftell@plt>:
  405150:	jmp    QWORD PTR [rip+0x4af52]        # 4500a8 <ftell@GLIBC_2.2.5>
  405156:	push   0x12
  40515b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405160 <memcpy@plt>:
  405160:	jmp    QWORD PTR [rip+0x4af4a]        # 4500b0 <memcpy@GLIBC_2.14>
  405166:	push   0x13
  40516b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405170 <malloc@plt>:
  405170:	jmp    QWORD PTR [rip+0x4af42]        # 4500b8 <malloc@GLIBC_2.2.5>
  405176:	push   0x14
  40517b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405180 <fseek@plt>:
  405180:	jmp    QWORD PTR [rip+0x4af3a]        # 4500c0 <fseek@GLIBC_2.2.5>
  405186:	push   0x15
  40518b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405190 <__vsnprintf_chk@plt>:
  405190:	jmp    QWORD PTR [rip+0x4af32]        # 4500c8 <__vsnprintf_chk@GLIBC_2.3.4>
  405196:	push   0x16
  40519b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051a0 <realloc@plt>:
  4051a0:	jmp    QWORD PTR [rip+0x4af2a]        # 4500d0 <realloc@GLIBC_2.2.5>
  4051a6:	push   0x17
  4051ab:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051b0 <__printf_chk@plt>:
  4051b0:	jmp    QWORD PTR [rip+0x4af22]        # 4500d8 <__printf_chk@GLIBC_2.3.4>
  4051b6:	push   0x18
  4051bb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051c0 <fopen@plt>:
  4051c0:	jmp    QWORD PTR [rip+0x4af1a]        # 4500e0 <fopen@GLIBC_2.2.5>
  4051c6:	push   0x19
  4051cb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051d0 <exit@plt>:
  4051d0:	jmp    QWORD PTR [rip+0x4af12]        # 4500e8 <exit@GLIBC_2.2.5>
  4051d6:	push   0x1a
  4051db:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051e0 <fwrite@plt>:
  4051e0:	jmp    QWORD PTR [rip+0x4af0a]        # 4500f0 <fwrite@GLIBC_2.2.5>
  4051e6:	push   0x1b
  4051eb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051f0 <__fprintf_chk@plt>:
  4051f0:	jmp    QWORD PTR [rip+0x4af02]        # 4500f8 <__fprintf_chk@GLIBC_2.3.4>
  4051f6:	push   0x1c
  4051fb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405200 <posix_memalign@plt>:
  405200:	jmp    QWORD PTR [rip+0x4aefa]        # 450100 <posix_memalign@GLIBC_2.2.5>
  405206:	push   0x1d
  40520b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405210 <__sprintf_chk@plt>:
  405210:	jmp    QWORD PTR [rip+0x4aef2]        # 450108 <__sprintf_chk@GLIBC_2.3.4>
  405216:	push   0x1e
  40521b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000405220 <main@@Base-0x130>:
  405220:	sub    rsp,0x8
  405224:	mov    rax,QWORD PTR [rip+0x4adbd]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40522b:	lea    rdx,[rip+0x27d6e]        # 42cfa0 <_IO_stdin_used@@Base+0xfa0>
  405232:	mov    esi,0x1
  405237:	mov    rdi,QWORD PTR [rax]
  40523a:	xor    eax,eax
  40523c:	call   4051f0 <__fprintf_chk@plt>
  405241:	mov    edi,0x1
  405246:	call   4051d0 <exit@plt>
  40524b:	lea    rcx,[rip+0x3f6de]        # 444930 <_IO_stdin_used@@Base+0x18930>
  405252:	lea    rsi,[rip+0x3f0ff]        # 444358 <_IO_stdin_used@@Base+0x18358>
  405259:	lea    rdi,[rip+0x3f170]        # 4443d0 <_IO_stdin_used@@Base+0x183d0>
  405260:	sub    rsp,0x8
  405264:	mov    edx,0xc3
  405269:	call   4050f0 <__assert_fail@plt>
  40526e:	sub    rsp,0x8
  405272:	mov    rax,QWORD PTR [rip+0x4ad6f]        # 44ffe8 <stderr@GLIBC_2.2.5>
  405279:	lea    rdx,[rip+0x27d20]        # 42cfa0 <_IO_stdin_used@@Base+0xfa0>
  405280:	mov    esi,0x1
  405285:	mov    rdi,QWORD PTR [rax]
  405288:	xor    eax,eax
  40528a:	call   4051f0 <__fprintf_chk@plt>
  40528f:	mov    edi,0x1
  405294:	call   4051d0 <exit@plt>
  405299:	lea    rcx,[rip+0x42138]        # 4473d8 <fb_schema_table_missing@@Base+0x2788>
  4052a0:	lea    rsi,[rip+0x40989]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  4052a7:	lea    rdi,[rip+0x41d7b]        # 447029 <fb_schema_table_missing@@Base+0x23d9>
  4052ae:	sub    rsp,0x8
  4052b2:	mov    edx,0x6c
  4052b7:	call   4050f0 <__assert_fail@plt>
  4052bc:	lea    rcx,[rip+0x431cd]        # 448490 <fb_schema_table_missing@@Base+0x3840>
  4052c3:	lea    rsi,[rip+0x42706]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4052ca:	lea    rdi,[rip+0x30838]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4052d1:	sub    rsp,0x8
  4052d5:	mov    edx,0x134
  4052da:	call   4050f0 <__assert_fail@plt>
  4052df:	lea    rcx,[rip+0x4313a]        # 448420 <fb_schema_table_missing@@Base+0x37d0>
  4052e6:	lea    rsi,[rip+0x426e3]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4052ed:	lea    rdi,[rip+0x30815]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4052f4:	sub    rsp,0x8
  4052f8:	mov    edx,0x2a1
  4052fd:	call   4050f0 <__assert_fail@plt>
  405302:	lea    rcx,[rip+0x43107]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  405309:	lea    rsi,[rip+0x426c0]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  405310:	lea    rdi,[rip+0x307f2]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  405317:	sub    rsp,0x8
  40531b:	mov    edx,0x28b
  405320:	call   4050f0 <__assert_fail@plt>
  405325:	lea    rcx,[rip+0x43044]        # 448370 <fb_schema_table_missing@@Base+0x3720>
  40532c:	lea    rsi,[rip+0x4269d]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  405333:	lea    rdi,[rip+0x42a06]        # 447d40 <fb_schema_table_missing@@Base+0x30f0>
  40533a:	sub    rsp,0x8
  40533e:	mov    edx,0x37c
  405343:	call   4050f0 <__assert_fail@plt>
  405348:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405350 <main@@Base>:
  405350:	push   r13
  405352:	push   r12
  405354:	lea    rsi,[rip+0x26dad]        # 42c108 <_IO_stdin_used@@Base+0x108>
  40535b:	push   rbp
  40535c:	push   rbx
  40535d:	mov    ecx,0x1d2
  405362:	sub    rsp,0xfb8
  405369:	lea    rbp,[rsp+0x110]
  405371:	mov    rax,QWORD PTR fs:0x28
  40537a:	mov    QWORD PTR [rsp+0xfa8],rax
  405382:	xor    eax,eax
  405384:	mov    rdi,rbp
  405387:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40538a:	mov    eax,DWORD PTR [rsi]
  40538c:	mov    DWORD PTR [rdi],eax
  40538e:	movzx  eax,WORD PTR [rip+0x27c07]        # 42cf9c <_IO_stdin_used@@Base+0xf9c>
  405395:	mov    WORD PTR [rdi+0x4],ax
  405399:	movzx  eax,BYTE PTR [rip+0x27bfe]        # 42cf9e <_IO_stdin_used@@Base+0xf9e>
  4053a0:	mov    BYTE PTR [rdi+0x6],al
  4053a3:	mov    rdi,rsp
  4053a6:	call   405670 <flatcc_init_options@@Base>
  4053ab:	lea    rsi,[rip+0x26c52]        # 42c004 <_IO_stdin_used@@Base+0x4>
  4053b2:	xor    ecx,ecx
  4053b4:	xor    edx,edx
  4053b6:	mov    rdi,rsp
  4053b9:	mov    DWORD PTR [rsp+0xb0],0x1
  4053c4:	mov    DWORD PTR [rsp+0xb8],0x1
  4053cf:	mov    DWORD PTR [rsp+0xb4],0x1
  4053da:	mov    DWORD PTR [rsp+0xbc],0x1
  4053e5:	mov    DWORD PTR [rsp+0x80],0x1
  4053f0:	call   4057d0 <flatcc_create_context@@Base>
  4053f5:	test   rax,rax
  4053f8:	je     4054e1 <main@@Base+0x191>
  4053fe:	mov    edx,0xe97
  405403:	mov    rsi,rbp
  405406:	mov    rdi,rax
  405409:	mov    rbx,rax
  40540c:	call   405840 <flatcc_parse_buffer@@Base>
  405411:	test   eax,eax
  405413:	mov    r12d,eax
  405416:	jne    4054a0 <main@@Base+0x150>
  40541c:	mov    r13,QWORD PTR [rip+0x4abc5]        # 44ffe8 <stderr@GLIBC_2.2.5>
  405423:	lea    rdx,[rip+0x26bfc]        # 42c026 <_IO_stdin_used@@Base+0x26>
  40542a:	mov    esi,0x1
  40542f:	xor    eax,eax
  405431:	mov    rdi,QWORD PTR [r13+0x0]
  405435:	call   4051f0 <__fprintf_chk@plt>
  40543a:	mov    rdi,QWORD PTR [r13+0x0]
  40543e:	lea    rdx,[rip+0x26c23]        # 42c068 <_IO_stdin_used@@Base+0x68>
  405445:	mov    esi,0x1
  40544a:	xor    eax,eax
  40544c:	call   4051f0 <__fprintf_chk@plt>
  405451:	mov    rdi,rbx
  405454:	call   405930 <flatcc_generate_files@@Base>
  405459:	test   eax,eax
  40545b:	je     4054bf <main@@Base+0x16f>
  40545d:	mov    rdi,QWORD PTR [r13+0x0]
  405461:	lea    rdx,[rip+0x26c20]        # 42c088 <_IO_stdin_used@@Base+0x88>
  405468:	mov    esi,0x1
  40546d:	xor    eax,eax
  40546f:	call   4051f0 <__fprintf_chk@plt>
  405474:	mov    rdi,rbx
  405477:	call   405ac0 <flatcc_destroy_context@@Base>
  40547c:	mov    rcx,QWORD PTR [rsp+0xfa8]
  405484:	xor    rcx,QWORD PTR fs:0x28
  40548d:	mov    eax,r12d
  405490:	jne    405507 <main@@Base+0x1b7>
  405492:	add    rsp,0xfb8
  405499:	pop    rbx
  40549a:	pop    rbp
  40549b:	pop    r12
  40549d:	pop    r13
  40549f:	ret    
  4054a0:	mov    rax,QWORD PTR [rip+0x4ab41]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4054a7:	lea    rdx,[rip+0x26b63]        # 42c011 <_IO_stdin_used@@Base+0x11>
  4054ae:	mov    esi,0x1
  4054b3:	mov    rdi,QWORD PTR [rax]
  4054b6:	xor    eax,eax
  4054b8:	call   4051f0 <__fprintf_chk@plt>
  4054bd:	jmp    405474 <main@@Base+0x124>
  4054bf:	mov    rax,QWORD PTR [rip+0x4ab0a]        # 44ffd0 <stdout@GLIBC_2.2.5>
  4054c6:	lea    rdx,[rip+0x26be3]        # 42c0b0 <_IO_stdin_used@@Base+0xb0>
  4054cd:	mov    rcx,rbp
  4054d0:	mov    esi,0x1
  4054d5:	mov    rdi,QWORD PTR [rax]
  4054d8:	xor    eax,eax
  4054da:	call   4051f0 <__fprintf_chk@plt>
  4054df:	jmp    405474 <main@@Base+0x124>
  4054e1:	mov    rax,QWORD PTR [rip+0x4ab00]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4054e8:	lea    rdx,[rip+0x26b49]        # 42c038 <_IO_stdin_used@@Base+0x38>
  4054ef:	mov    esi,0x1
  4054f4:	or     r12d,0xffffffff
  4054f8:	mov    rdi,QWORD PTR [rax]
  4054fb:	xor    eax,eax
  4054fd:	call   4051f0 <__fprintf_chk@plt>
  405502:	jmp    40547c <main@@Base+0x12c>
  405507:	call   4050d0 <__stack_chk_fail@plt>
  40550c:	nop    DWORD PTR [rax+0x0]

0000000000405510 <_start@@Base>:
  405510:	endbr64 
  405514:	xor    ebp,ebp
  405516:	mov    r9,rdx
  405519:	pop    rsi
  40551a:	mov    rdx,rsp
  40551d:	and    rsp,0xfffffffffffffff0
  405521:	push   rax
  405522:	push   rsp
  405523:	mov    r8,0x42ba90
  40552a:	mov    rcx,0x42ba20
  405531:	mov    rdi,0x405350
  405538:	call   QWORD PTR [rip+0x4aa9a]        # 44ffd8 <__libc_start_main@GLIBC_2.2.5>
  40553e:	hlt    
  40553f:	nop
  405540:	endbr64 
  405544:	ret    
  405545:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40554f:	nop
  405550:	mov    eax,0x450127
  405555:	push   rbp
  405556:	sub    rax,0x450120
  40555c:	cmp    rax,0xe
  405560:	mov    rbp,rsp
  405563:	jbe    405580 <_start@@Base+0x70>
  405565:	mov    eax,0x0
  40556a:	test   rax,rax
  40556d:	je     405580 <_start@@Base+0x70>
  40556f:	pop    rbp
  405570:	mov    edi,0x450120
  405575:	jmp    rax
  405577:	nop    WORD PTR [rax+rax*1+0x0]
  405580:	pop    rbp
  405581:	ret    
  405582:	nop    DWORD PTR [rax+0x0]
  405586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405590:	mov    esi,0x450120
  405595:	push   rbp
  405596:	sub    rsi,0x450120
  40559d:	sar    rsi,0x3
  4055a1:	mov    rbp,rsp
  4055a4:	mov    rax,rsi
  4055a7:	shr    rax,0x3f
  4055ab:	add    rsi,rax
  4055ae:	sar    rsi,1
  4055b1:	je     4055c8 <_start@@Base+0xb8>
  4055b3:	mov    eax,0x0
  4055b8:	test   rax,rax
  4055bb:	je     4055c8 <_start@@Base+0xb8>
  4055bd:	pop    rbp
  4055be:	mov    edi,0x450120
  4055c3:	jmp    rax
  4055c5:	nop    DWORD PTR [rax]
  4055c8:	pop    rbp
  4055c9:	ret    
  4055ca:	nop    WORD PTR [rax+rax*1+0x0]
  4055d0:	cmp    BYTE PTR [rip+0x4ab49],0x0        # 450120 <__bss_start@@Base>
  4055d7:	jne    4055ea <_start@@Base+0xda>
  4055d9:	push   rbp
  4055da:	mov    rbp,rsp
  4055dd:	call   405550 <_start@@Base+0x40>
  4055e2:	pop    rbp
  4055e3:	mov    BYTE PTR [rip+0x4ab36],0x1        # 450120 <__bss_start@@Base>
  4055ea:	repz ret 
  4055ec:	nop    DWORD PTR [rax+0x0]
  4055f0:	mov    edi,0x44fd98
  4055f5:	cmp    QWORD PTR [rdi],0x0
  4055f9:	jne    405600 <_start@@Base+0xf0>
  4055fb:	jmp    405590 <_start@@Base+0x80>
  4055fd:	nop    DWORD PTR [rax]
  405600:	mov    eax,0x0
  405605:	test   rax,rax
  405608:	je     4055fb <_start@@Base+0xeb>
  40560a:	push   rbp
  40560b:	mov    rbp,rsp
  40560e:	call   rax
  405610:	pop    rbp
  405611:	jmp    405590 <_start@@Base+0x80>
  405616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405620:	add    rdi,0x128
  405627:	mov    edx,0x1
  40562c:	jmp    41a0b0 <ptr_set_insert_item@@Base>
  405631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40563c:	nop    DWORD PTR [rax+0x0]
  405640:	sub    rsp,0x8
  405644:	mov    rax,QWORD PTR [rip+0x4a99d]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40564b:	lea    rdx,[rip+0x2794e]        # 42cfa0 <_IO_stdin_used@@Base+0xfa0>
  405652:	mov    esi,0x1
  405657:	mov    rdi,QWORD PTR [rax]
  40565a:	xor    eax,eax
  40565c:	call   4051f0 <__fprintf_chk@plt>
  405661:	mov    edi,0x1
  405666:	call   4051d0 <exit@plt>
  40566b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405670 <flatcc_init_options@@Base>:
  405670:	mov    rdx,rdi
  405673:	mov    QWORD PTR [rdi+0x108],0x0
  40567e:	lea    rdi,[rdi+0x8]
  405682:	mov    rcx,rdx
  405685:	xor    eax,eax
  405687:	and    rdi,0xfffffffffffffff8
  40568b:	sub    rcx,rdi
  40568e:	add    ecx,0x110
  405694:	shr    ecx,0x3
  405697:	rep stos QWORD PTR es:[rdi],rax
  40569a:	lea    rax,[rip+0x2696b]        # 42c00c <_IO_stdin_used@@Base+0xc>
  4056a1:	mov    QWORD PTR [rdx],0x10000
  4056a8:	mov    DWORD PTR [rdx+0x8],0x64
  4056af:	mov    DWORD PTR [rdx+0xc],0x64
  4056b6:	mov    DWORD PTR [rdx+0x14],0x1
  4056bd:	mov    QWORD PTR [rdx+0x68],rax
  4056c1:	lea    rax,[rip+0x279ff]        # 42d0c7 <_IO_stdin_used@@Base+0x10c7>
  4056c8:	mov    DWORD PTR [rdx+0x18],0x1
  4056cf:	mov    DWORD PTR [rdx+0x1c],0x1
  4056d6:	mov    DWORD PTR [rdx+0x20],0x1
  4056dd:	mov    QWORD PTR [rdx+0x70],rax
  4056e1:	lea    rax,[rip+0x279e5]        # 42d0cd <_IO_stdin_used@@Base+0x10cd>
  4056e8:	mov    DWORD PTR [rdx+0x24],0x1
  4056ef:	mov    DWORD PTR [rdx+0x28],0x1
  4056f6:	mov    DWORD PTR [rdx+0x2c],0x1
  4056fd:	mov    DWORD PTR [rdx+0x30],0x1
  405704:	mov    DWORD PTR [rdx+0x34],0x1
  40570b:	mov    DWORD PTR [rdx+0x38],0x1
  405712:	mov    DWORD PTR [rdx+0x3c],0x0
  405719:	mov    DWORD PTR [rdx+0x40],0x0
  405720:	mov    DWORD PTR [rdx+0x44],0x4
  405727:	mov    DWORD PTR [rdx+0x48],0x2
  40572e:	mov    DWORD PTR [rdx+0x4c],0x1
  405735:	mov    DWORD PTR [rdx+0x50],0x1
  40573c:	mov    DWORD PTR [rdx+0x54],0x0
  405743:	mov    DWORD PTR [rdx+0x58],0x1
  40574a:	mov    QWORD PTR [rdx+0x60],0xfffe
  405752:	mov    QWORD PTR [rdx+0x78],rax
  405756:	mov    DWORD PTR [rdx+0xa4],0x0
  405760:	mov    DWORD PTR [rdx+0xa8],0x1
  40576a:	mov    DWORD PTR [rdx+0xac],0x1
  405774:	mov    DWORD PTR [rdx+0xb0],0x0
  40577e:	mov    DWORD PTR [rdx+0xb4],0x0
  405788:	mov    DWORD PTR [rdx+0xb8],0x0
  405792:	mov    DWORD PTR [rdx+0xbc],0x0
  40579c:	mov    DWORD PTR [rdx+0xc4],0x0
  4057a6:	mov    DWORD PTR [rdx+0xd0],0x4
  4057b0:	mov    DWORD PTR [rdx+0xd4],0x0
  4057ba:	mov    DWORD PTR [rdx+0xd8],0x1
  4057c4:	mov    DWORD PTR [rdx+0xdc],0x0
  4057ce:	ret    
  4057cf:	nop

00000000004057d0 <flatcc_create_context@@Base>:
  4057d0:	push   r14
  4057d2:	push   r13
  4057d4:	mov    r14,rcx
  4057d7:	push   r12
  4057d9:	push   rbp
  4057da:	mov    rbp,rdi
  4057dd:	push   rbx
  4057de:	mov    edi,0x358
  4057e3:	mov    r12,rsi
  4057e6:	mov    r13,rdx
  4057e9:	call   405170 <malloc@plt>
  4057ee:	test   rax,rax
  4057f1:	je     405820 <flatcc_create_context@@Base+0x50>
  4057f3:	xor    r9d,r9d
  4057f6:	mov    r8,r14
  4057f9:	mov    rcx,r13
  4057fc:	mov    rdx,r12
  4057ff:	mov    rsi,rbp
  405802:	mov    rdi,rax
  405805:	mov    rbx,rax
  405808:	call   41df80 <__flatcc_fb_init_parser@@Base>
  40580d:	test   eax,eax
  40580f:	jne    405828 <flatcc_create_context@@Base+0x58>
  405811:	mov    rax,rbx
  405814:	pop    rbx
  405815:	pop    rbp
  405816:	pop    r12
  405818:	pop    r13
  40581a:	pop    r14
  40581c:	ret    
  40581d:	nop    DWORD PTR [rax]
  405820:	xor    ebx,ebx
  405822:	jmp    405811 <flatcc_create_context@@Base+0x41>
  405824:	nop    DWORD PTR [rax+0x0]
  405828:	mov    rdi,rbx
  40582b:	xor    ebx,ebx
  40582d:	call   405040 <free@plt>
  405832:	jmp    405811 <flatcc_create_context@@Base+0x41>
  405834:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40583f:	nop

0000000000405840 <flatcc_parse_buffer@@Base>:
  405840:	push   r12
  405842:	push   rbp
  405843:	mov    r12,rsi
  405846:	push   rbx
  405847:	mov    rax,QWORD PTR [rdi+0xe8]
  40584e:	mov    rbx,rdi
  405851:	mov    rbp,rdx
  405854:	mov    DWORD PTR [rdi+0xf8],0x1
  40585e:	cmp    rax,rdx
  405861:	jae    405868 <flatcc_parse_buffer@@Base+0x28>
  405863:	test   rax,rax
  405866:	jne    4058b8 <flatcc_parse_buffer@@Base+0x78>
  405868:	lea    rsi,[rbx+0x1f8]
  40586f:	lea    rdi,[rbx+0x320]
  405876:	mov    edx,0x1
  40587b:	call   41a0b0 <ptr_set_insert_item@@Base>
  405880:	xor    ecx,ecx
  405882:	mov    rdx,rbp
  405885:	mov    rsi,r12
  405888:	mov    rdi,rbx
  40588b:	call   41e300 <__flatcc_fb_parse@@Base>
  405890:	test   eax,eax
  405892:	mov    edx,0xffffffff
  405897:	jne    4058aa <flatcc_parse_buffer@@Base+0x6a>
  405899:	mov    rdi,rbx
  40589c:	call   423d30 <__flatcc_fb_build_schema@@Base>
  4058a1:	xor    edx,edx
  4058a3:	test   eax,eax
  4058a5:	setne  dl
  4058a8:	neg    edx
  4058aa:	pop    rbx
  4058ab:	mov    eax,edx
  4058ad:	pop    rbp
  4058ae:	pop    r12
  4058b0:	ret    
  4058b1:	nop    DWORD PTR [rax+0x0]
  4058b8:	lea    rsi,[rip+0x27709]        # 42cfc8 <_IO_stdin_used@@Base+0xfc8>
  4058bf:	xor    eax,eax
  4058c1:	call   41c950 <__flatcc_fb_print_error@@Base>
  4058c6:	mov    edx,0xffffffff
  4058cb:	jmp    4058aa <flatcc_parse_buffer@@Base+0x6a>
  4058cd:	nop    DWORD PTR [rax]

00000000004058d0 <flatcc_generate_binary_schema_to_buffer@@Base>:
  4058d0:	sub    rsp,0x18
  4058d4:	mov    rax,rsi
  4058d7:	lea    rsi,[rdi+0x1f8]
  4058de:	lea    rcx,[rsp+0x8]
  4058e3:	mov    QWORD PTR [rsp+0x8],rdx
  4058e8:	add    rdi,0xe8
  4058ef:	mov    rdx,rax
  4058f2:	call   418fd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  4058f7:	test   rax,rax
  4058fa:	je     405905 <flatcc_generate_binary_schema_to_buffer@@Base+0x35>
  4058fc:	mov    eax,DWORD PTR [rsp+0x8]
  405900:	add    rsp,0x18
  405904:	ret    
  405905:	mov    eax,0xffffffff
  40590a:	jmp    405900 <flatcc_generate_binary_schema_to_buffer@@Base+0x30>
  40590c:	nop    DWORD PTR [rax+0x0]

0000000000405910 <flatcc_generate_binary_schema@@Base>:
  405910:	mov    rdx,rsi
  405913:	lea    rsi,[rdi+0x1f8]
  40591a:	add    rdi,0xe8
  405921:	jmp    419080 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  405926:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405930 <flatcc_generate_files@@Base>:
  405930:	push   r13
  405932:	push   r12
  405934:	push   rbp
  405935:	push   rbx
  405936:	sub    rsp,0x118
  40593d:	mov    rax,QWORD PTR fs:0x28
  405946:	mov    QWORD PTR [rsp+0x108],rax
  40594e:	xor    eax,eax
  405950:	test   rdi,rdi
  405953:	je     405a40 <flatcc_generate_files@@Base+0x110>
  405959:	mov    rbp,rdi
  40595c:	mov    edi,DWORD PTR [rdi+0xd0]
  405962:	test   edi,edi
  405964:	jne    405a40 <flatcc_generate_files@@Base+0x110>
  40596a:	mov    rbx,rbp
  40596d:	xor    edx,edx
  40596f:	jmp    40597b <flatcc_generate_files@@Base+0x4b>
  405971:	nop    DWORD PTR [rax+0x0]
  405978:	mov    rbx,rax
  40597b:	mov    rax,QWORD PTR [rbx]
  40597e:	mov    QWORD PTR [rbx+0x8],rdx
  405982:	mov    rdx,rbx
  405985:	test   rax,rax
  405988:	jne    405978 <flatcc_generate_files@@Base+0x48>
  40598a:	mov    esi,DWORD PTR [rbp+0x1bc]
  405990:	test   esi,esi
  405992:	jne    405a20 <flatcc_generate_files@@Base+0xf0>
  405998:	lea    r12,[rbp+0xe8]
  40599f:	mov    rsi,r12
  4059a2:	mov    rdi,rsp
  4059a5:	mov    r13,rsp
  4059a8:	call   406320 <__flatcc_fb_init_output_c@@Base>
  4059ad:	test   eax,eax
  4059af:	jne    405a40 <flatcc_generate_files@@Base+0x110>
  4059b5:	mov    ecx,DWORD PTR [rbp+0x188]
  4059bb:	test   ecx,ecx
  4059bd:	je     405a80 <flatcc_generate_files@@Base+0x150>
  4059c3:	mov    r12d,DWORD PTR [rbp+0xe4]
  4059ca:	test   r12d,r12d
  4059cd:	je     4059ed <flatcc_generate_files@@Base+0xbd>
  4059cf:	mov    edx,DWORD PTR [rbp+0x1b4]
  4059d5:	test   edx,edx
  4059d7:	je     405aa0 <flatcc_generate_files@@Base+0x170>
  4059dd:	mov    eax,DWORD PTR [rbx+0xd0]
  4059e3:	test   eax,eax
  4059e5:	je     405a50 <flatcc_generate_files@@Base+0x120>
  4059e7:	mov    r12d,0x1
  4059ed:	mov    rdi,r13
  4059f0:	call   4062f0 <__flatcc_fb_end_output_c@@Base>
  4059f5:	mov    rcx,QWORD PTR [rsp+0x108]
  4059fd:	xor    rcx,QWORD PTR fs:0x28
  405a06:	mov    eax,r12d
  405a09:	jne    405ab7 <flatcc_generate_files@@Base+0x187>
  405a0f:	add    rsp,0x118
  405a16:	pop    rbx
  405a17:	pop    rbp
  405a18:	pop    r12
  405a1a:	pop    r13
  405a1c:	ret    
  405a1d:	nop    DWORD PTR [rax]
  405a20:	lea    r12,[rbp+0xe8]
  405a27:	lea    rsi,[rbp+0x1f8]
  405a2e:	mov    rdi,r12
  405a31:	call   419120 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  405a36:	test   eax,eax
  405a38:	je     40599f <flatcc_generate_files@@Base+0x6f>
  405a3e:	xchg   ax,ax
  405a40:	mov    r12d,0xffffffff
  405a46:	jmp    4059f5 <flatcc_generate_files@@Base+0xc5>
  405a48:	nop    DWORD PTR [rax+rax*1+0x0]
  405a50:	lea    rsi,[rbx+0x1f8]
  405a57:	mov    rdi,r13
  405a5a:	call   4069e0 <__flatcc_fb_codegen_c@@Base>
  405a5f:	test   eax,eax
  405a61:	mov    rbx,QWORD PTR [rbx+0x8]
  405a65:	jne    405a70 <flatcc_generate_files@@Base+0x140>
  405a67:	test   rbx,rbx
  405a6a:	jne    4059dd <flatcc_generate_files@@Base+0xad>
  405a70:	xor    r12d,r12d
  405a73:	test   eax,eax
  405a75:	setne  r12b
  405a79:	jmp    4059ed <flatcc_generate_files@@Base+0xbd>
  405a7e:	xchg   ax,ax
  405a80:	mov    rdi,rsp
  405a83:	call   406920 <__flatcc_fb_codegen_common_c@@Base>
  405a88:	test   eax,eax
  405a8a:	mov    r12d,eax
  405a8d:	jne    4059ed <flatcc_generate_files@@Base+0xbd>
  405a93:	jmp    4059c3 <flatcc_generate_files@@Base+0x93>
  405a98:	nop    DWORD PTR [rax+rax*1+0x0]
  405aa0:	lea    rsi,[rbp+0x1f8]
  405aa7:	mov    rdi,r13
  405aaa:	call   4069e0 <__flatcc_fb_codegen_c@@Base>
  405aaf:	mov    r12d,eax
  405ab2:	jmp    4059ed <flatcc_generate_files@@Base+0xbd>
  405ab7:	call   4050d0 <__stack_chk_fail@plt>
  405abc:	nop    DWORD PTR [rax+0x0]

0000000000405ac0 <flatcc_destroy_context@@Base>:
  405ac0:	test   rdi,rdi
  405ac3:	je     405af1 <flatcc_destroy_context@@Base+0x31>
  405ac5:	push   rbp
  405ac6:	push   rbx
  405ac7:	mov    rbx,rdi
  405aca:	sub    rsp,0x8
  405ace:	xchg   ax,ax
  405ad0:	mov    rbp,QWORD PTR [rbx]
  405ad3:	mov    rdi,rbx
  405ad6:	call   420ca0 <__flatcc_fb_clear_parser@@Base>
  405adb:	mov    rdi,rbx
  405ade:	call   405040 <free@plt>
  405ae3:	test   rbp,rbp
  405ae6:	mov    rbx,rbp
  405ae9:	jne    405ad0 <flatcc_destroy_context@@Base+0x10>
  405aeb:	add    rsp,0x8
  405aef:	pop    rbx
  405af0:	pop    rbp
  405af1:	repz ret 
  405af3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405afe:	xchg   ax,ax

0000000000405b00 <flatcc_parse_file@@Base>:
  405b00:	push   r15
  405b02:	push   r14
  405b04:	xor    r15d,r15d
  405b07:	push   r13
  405b09:	push   r12
  405b0b:	mov    r13,rsi
  405b0e:	push   rbp
  405b0f:	push   rbx
  405b10:	mov    rbx,rdi
  405b13:	mov    rdi,rsi
  405b16:	sub    rsp,0x38
  405b1a:	mov    rax,QWORD PTR fs:0x28
  405b23:	mov    QWORD PTR [rsp+0x28],rax
  405b28:	xor    eax,eax
  405b2a:	call   4050c0 <strlen@plt>
  405b2f:	mov    rcx,QWORD PTR [rbx+0x260]
  405b36:	mov    r14,rax
  405b39:	lea    rax,[rbx+0x1f8]
  405b40:	mov    edx,0x1
  405b45:	mov    rsi,rax
  405b48:	mov    QWORD PTR [rsp+0x8],rax
  405b4d:	lea    rdi,[rcx+0x40]
  405b51:	call   41bf80 <fb_schema_table_insert_item@@Base>
  405b56:	test   rax,rax
  405b59:	je     405b88 <flatcc_parse_file@@Base+0x88>
  405b5b:	mov    rcx,QWORD PTR [rsp+0x28]
  405b60:	xor    rcx,QWORD PTR fs:0x28
  405b69:	mov    eax,r15d
  405b6c:	jne    406118 <flatcc_parse_file@@Base+0x618>
  405b72:	add    rsp,0x38
  405b76:	pop    rbx
  405b77:	pop    rbp
  405b78:	pop    r12
  405b7a:	pop    r13
  405b7c:	pop    r14
  405b7e:	pop    r15
  405b80:	ret    
  405b81:	nop    DWORD PTR [rax+0x0]
  405b88:	mov    rax,QWORD PTR [rbx+0x350]
  405b8f:	test   rax,rax
  405b92:	mov    QWORD PTR [rsp+0x18],rax
  405b97:	mov    QWORD PTR [rsp+0x10],rax
  405b9c:	je     4060a6 <flatcc_parse_file@@Base+0x5a6>
  405ba2:	mov    edx,DWORD PTR [rbx+0x1e8]
  405ba8:	test   edx,edx
  405baa:	jle    405de4 <flatcc_parse_file@@Base+0x2e4>
  405bb0:	lea    rax,[rsp+0x20]
  405bb5:	xor    ebp,ebp
  405bb7:	xor    r12d,r12d
  405bba:	mov    QWORD PTR [rsp],rax
  405bbe:	xchg   ax,ax
  405bc0:	mov    rax,QWORD PTR [rbx+0x1d8]
  405bc7:	mov    r15,QWORD PTR [rax+rbp*1]
  405bcb:	mov    rdi,r15
  405bce:	call   4050c0 <strlen@plt>
  405bd3:	lea    r8,[rip+0x3e514]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  405bda:	mov    rdi,r15
  405bdd:	mov    r9d,0x1
  405be3:	mov    rcx,r14
  405be6:	mov    rdx,r13
  405be9:	mov    rsi,rax
  405bec:	call   41c160 <__flatcc_fb_create_join_path_n@@Base>
  405bf1:	test   rax,rax
  405bf4:	mov    r15,rax
  405bf7:	je     4060db <flatcc_parse_file@@Base+0x5db>
  405bfd:	mov    rsi,QWORD PTR [rbx+0xe8]
  405c04:	mov    rdx,QWORD PTR [rsp]
  405c08:	mov    rdi,rax
  405c0b:	call   41c590 <__flatcc_fb_read_file@@Base>
  405c10:	test   rax,rax
  405c13:	mov    rsi,rax
  405c16:	je     405d98 <flatcc_parse_file@@Base+0x298>
  405c1c:	mov    rax,QWORD PTR [rbx+0x260]
  405c23:	mov    rdx,QWORD PTR [rsp+0x20]
  405c28:	mov    ecx,0x1
  405c2d:	mov    rdi,rbx
  405c30:	add    QWORD PTR [rax+0x68],rdx
  405c34:	mov    QWORD PTR [rbx+0x348],r15
  405c3b:	call   41e300 <__flatcc_fb_parse@@Base>
  405c40:	test   eax,eax
  405c42:	mov    r15d,eax
  405c45:	jne    405e90 <flatcc_parse_file@@Base+0x390>
  405c4b:	mov    r13,QWORD PTR [rbx+0x1f8]
  405c52:	test   r13,r13
  405c55:	je     405ef0 <flatcc_parse_file@@Base+0x3f0>
  405c5b:	lea    rax,[rbx+0xe8]
  405c62:	mov    QWORD PTR [rsp],rax
  405c66:	jmp    405ca5 <flatcc_parse_file@@Base+0x1a5>
  405c68:	nop    DWORD PTR [rax+rax*1+0x0]
  405c70:	mov    rdx,QWORD PTR [rsp+0x8]
  405c75:	lea    rdi,[rax+0x128]
  405c7c:	lea    rsi,[rip+0xfffffffffffff99d]        # 405620 <_start@@Base+0x110>
  405c83:	call   41a100 <ptr_set_visit@@Base>
  405c88:	mov    rdi,rbp
  405c8b:	call   405ac0 <flatcc_destroy_context@@Base>
  405c90:	mov    rdi,r14
  405c93:	call   405040 <free@plt>
  405c98:	mov    r13,QWORD PTR [r13+0x0]
  405c9c:	test   r13,r13
  405c9f:	je     405ef0 <flatcc_parse_file@@Base+0x3f0>
  405ca5:	movsxd rsi,DWORD PTR [r13+0x10]
  405ca9:	mov    rdi,QWORD PTR [r13+0x8]
  405cad:	call   41c060 <__flatcc_fb_copy_path_n@@Base>
  405cb2:	test   rax,rax
  405cb5:	mov    r14,rax
  405cb8:	je     4060db <flatcc_parse_file@@Base+0x5db>
  405cbe:	mov    r12,QWORD PTR [rbx+0x260]
  405cc5:	mov    eax,DWORD PTR [rbx+0xf0]
  405ccb:	cmp    DWORD PTR [r12+0x64],eax
  405cd0:	jl     405cda <flatcc_parse_file@@Base+0x1da>
  405cd2:	test   eax,eax
  405cd4:	jg     405ea0 <flatcc_parse_file@@Base+0x3a0>
  405cda:	mov    eax,DWORD PTR [rbx+0xf4]
  405ce0:	cmp    DWORD PTR [r12+0x60],eax
  405ce5:	jl     405cef <flatcc_parse_file@@Base+0x1ef>
  405ce7:	test   eax,eax
  405ce9:	jg     406090 <flatcc_parse_file@@Base+0x590>
  405cef:	mov    edi,0x358
  405cf4:	call   405170 <malloc@plt>
  405cf9:	test   rax,rax
  405cfc:	mov    rbp,rax
  405cff:	je     405eb8 <flatcc_parse_file@@Base+0x3b8>
  405d05:	mov    rcx,QWORD PTR [rbx+0x10]
  405d09:	mov    r8,QWORD PTR [rbx+0x18]
  405d0d:	mov    r9,r12
  405d10:	mov    rsi,QWORD PTR [rsp]
  405d14:	mov    rdx,r14
  405d17:	mov    rdi,rax
  405d1a:	call   41df80 <__flatcc_fb_init_parser@@Base>
  405d1f:	test   eax,eax
  405d21:	jne    405ec8 <flatcc_parse_file@@Base+0x3c8>
  405d27:	lea    rsi,[rbp+0x1f8]
  405d2e:	lea    rdi,[r12+0x40]
  405d33:	call   41bfc0 <fb_schema_table_find_item@@Base>
  405d38:	test   rax,rax
  405d3b:	jne    405c70 <flatcc_parse_file@@Base+0x170>
  405d41:	mov    rax,QWORD PTR [rbx]
  405d44:	mov    QWORD PTR [rbx],rbp
  405d47:	mov    rsi,r14
  405d4a:	mov    rdi,rbp
  405d4d:	mov    QWORD PTR [rbp+0x0],rax
  405d51:	mov    rax,QWORD PTR [rbx+0x348]
  405d58:	mov    QWORD PTR [rbp+0x350],rax
  405d5f:	add    DWORD PTR [r12+0x64],0x1
  405d65:	add    DWORD PTR [r12+0x60],0x1
  405d6b:	call   405b00 <flatcc_parse_file@@Base>
  405d70:	test   eax,eax
  405d72:	jne    405eb8 <flatcc_parse_file@@Base+0x3b8>
  405d78:	mov    rdx,QWORD PTR [rsp+0x8]
  405d7d:	lea    rdi,[rbp+0x320]
  405d84:	lea    rsi,[rip+0xfffffffffffff895]        # 405620 <_start@@Base+0x110>
  405d8b:	call   41a100 <ptr_set_visit@@Base>
  405d90:	jmp    405c90 <flatcc_parse_file@@Base+0x190>
  405d95:	nop    DWORD PTR [rax]
  405d98:	mov    rdi,r15
  405d9b:	call   405040 <free@plt>
  405da0:	mov    rax,QWORD PTR [rbx+0xe8]
  405da7:	cmp    rax,QWORD PTR [rsp+0x20]
  405dac:	jae    405db7 <flatcc_parse_file@@Base+0x2b7>
  405dae:	test   rax,rax
  405db1:	jne    405ed2 <flatcc_parse_file@@Base+0x3d2>
  405db7:	add    r12d,0x1
  405dbb:	add    rbp,0x8
  405dbf:	cmp    DWORD PTR [rbx+0x1e8],r12d
  405dc6:	jg     405bc0 <flatcc_parse_file@@Base+0xc0>
  405dcc:	cmp    QWORD PTR [rsp+0x10],0x0
  405dd2:	je     405e68 <flatcc_parse_file@@Base+0x368>
  405dd8:	mov    rax,QWORD PTR [rbx+0x350]
  405ddf:	mov    QWORD PTR [rsp+0x10],rax
  405de4:	mov    r15,QWORD PTR [rsp+0x10]
  405de9:	mov    rdi,r15
  405dec:	call   4050c0 <strlen@plt>
  405df1:	mov    rdi,r15
  405df4:	mov    rsi,rax
  405df7:	call   41c4e0 <__flatcc_fb_find_basename@@Base>
  405dfc:	lea    r8,[rip+0x3e2eb]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  405e03:	mov    rdi,r15
  405e06:	mov    r9d,0x1
  405e0c:	mov    rcx,r14
  405e0f:	mov    rdx,r13
  405e12:	mov    rsi,rax
  405e15:	call   41c160 <__flatcc_fb_create_join_path_n@@Base>
  405e1a:	test   rax,rax
  405e1d:	mov    r15,rax
  405e20:	je     4060db <flatcc_parse_file@@Base+0x5db>
  405e26:	mov    rsi,QWORD PTR [rbx+0xe8]
  405e2d:	lea    rdx,[rsp+0x20]
  405e32:	mov    rdi,rax
  405e35:	call   41c590 <__flatcc_fb_read_file@@Base>
  405e3a:	test   rax,rax
  405e3d:	mov    rsi,rax
  405e40:	jne    405c1c <flatcc_parse_file@@Base+0x11c>
  405e46:	mov    rdi,r15
  405e49:	call   405040 <free@plt>
  405e4e:	mov    rax,QWORD PTR [rbx+0xe8]
  405e55:	cmp    rax,QWORD PTR [rsp+0x20]
  405e5a:	jae    405e68 <flatcc_parse_file@@Base+0x368>
  405e5c:	test   rax,rax
  405e5f:	jne    405ed2 <flatcc_parse_file@@Base+0x3d2>
  405e61:	nop    DWORD PTR [rax+0x0]
  405e68:	lea    rsi,[rip+0x27181]        # 42cff0 <_IO_stdin_used@@Base+0xff0>
  405e6f:	mov    rdx,r13
  405e72:	mov    rdi,rbx
  405e75:	xor    eax,eax
  405e77:	mov    r15d,0xffffffff
  405e7d:	call   41c950 <__flatcc_fb_print_error@@Base>
  405e82:	jmp    405b5b <flatcc_parse_file@@Base+0x5b>
  405e87:	nop    WORD PTR [rax+rax*1+0x0]
  405e90:	xor    r15d,r15d
  405e93:	jmp    405b5b <flatcc_parse_file@@Base+0x5b>
  405e98:	nop    DWORD PTR [rax+rax*1+0x0]
  405ea0:	lea    rsi,[rip+0x27171]        # 42d018 <_IO_stdin_used@@Base+0x1018>
  405ea7:	mov    rdi,rbx
  405eaa:	xor    eax,eax
  405eac:	call   41c950 <__flatcc_fb_print_error@@Base>
  405eb1:	nop    DWORD PTR [rax+0x0]
  405eb8:	mov    rdi,r14
  405ebb:	call   405040 <free@plt>
  405ec0:	jmp    405b5b <flatcc_parse_file@@Base+0x5b>
  405ec5:	nop    DWORD PTR [rax]
  405ec8:	mov    rdi,rbp
  405ecb:	call   405040 <free@plt>
  405ed0:	jmp    405eb8 <flatcc_parse_file@@Base+0x3b8>
  405ed2:	lea    rsi,[rip+0x270ef]        # 42cfc8 <_IO_stdin_used@@Base+0xfc8>
  405ed9:	mov    rdi,rbx
  405edc:	xor    eax,eax
  405ede:	mov    r15d,0xffffffff
  405ee4:	call   41c950 <__flatcc_fb_print_error@@Base>
  405ee9:	jmp    405b5b <flatcc_parse_file@@Base+0x5b>
  405eee:	xchg   ax,ax
  405ef0:	mov    rsi,QWORD PTR [rsp+0x8]
  405ef5:	lea    rdi,[rbx+0x320]
  405efc:	mov    edx,0x1
  405f01:	call   41a0b0 <ptr_set_insert_item@@Base>
  405f06:	mov    rdi,rbx
  405f09:	call   423d30 <__flatcc_fb_build_schema@@Base>
  405f0e:	test   eax,eax
  405f10:	mov    r15d,eax
  405f13:	jne    405e90 <flatcc_parse_file@@Base+0x390>
  405f19:	mov    ecx,DWORD PTR [rbx+0x16c]
  405f1f:	test   ecx,ecx
  405f21:	je     405e90 <flatcc_parse_file@@Base+0x390>
  405f27:	cmp    QWORD PTR [rsp+0x18],0x0
  405f2d:	jne    405e90 <flatcc_parse_file@@Base+0x390>
  405f33:	cmp    QWORD PTR [rbx+0x350],0x0
  405f3b:	jne    406150 <flatcc_parse_file@@Base+0x650>
  405f41:	mov    rbp,QWORD PTR [rbx+0x1f0]
  405f48:	mov    rsi,QWORD PTR [rbx+0x170]
  405f4f:	lea    rdx,[rip+0x3e198]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  405f56:	mov    rax,QWORD PTR [rbx+0x308]
  405f5d:	mov    r14,QWORD PTR [rbx+0x178]
  405f64:	mov    rdi,rdx
  405f67:	test   rbp,rbp
  405f6a:	cmove  rbp,rdx
  405f6e:	test   rsi,rsi
  405f71:	je     40613e <flatcc_parse_file@@Base+0x63e>
  405f77:	test   r14,r14
  405f7a:	je     40611d <flatcc_parse_file@@Base+0x61d>
  405f80:	lea    rbp,[rip+0x3e167]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  405f87:	mov    r13,rbp
  405f8a:	mov    ecx,0x1
  405f8f:	call   41c2c0 <__flatcc_fb_create_join_path@@Base>
  405f94:	test   rax,rax
  405f97:	mov    r12,rax
  405f9a:	je     4060db <flatcc_parse_file@@Base+0x5db>
  405fa0:	mov    rdi,rbp
  405fa3:	mov    ecx,0x1
  405fa8:	mov    rdx,r13
  405fab:	mov    rsi,r14
  405fae:	call   41c2c0 <__flatcc_fb_create_join_path@@Base>
  405fb3:	test   rax,rax
  405fb6:	mov    rbp,rax
  405fb9:	je     4060db <flatcc_parse_file@@Base+0x5db>
  405fbf:	mov    rdi,rax
  405fc2:	call   41c4c0 <__flatcc_fb_create_make_path@@Base>
  405fc7:	test   rax,rax
  405fca:	mov    r13,rax
  405fcd:	je     4060db <flatcc_parse_file@@Base+0x5db>
  405fd3:	mov    rdi,rbp
  405fd6:	call   405040 <free@plt>
  405fdb:	lea    rsi,[rip+0x2712a]        # 42d10c <_IO_stdin_used@@Base+0x110c>
  405fe2:	mov    rdi,r12
  405fe5:	call   4051c0 <fopen@plt>
  405fea:	test   rax,rax
  405fed:	mov    rbp,rax
  405ff0:	je     40616f <flatcc_parse_file@@Base+0x66f>
  405ff6:	lea    rdx,[rip+0x27112]        # 42d10f <_IO_stdin_used@@Base+0x110f>
  405ffd:	mov    rdi,rax
  406000:	mov    rcx,r13
  406003:	xor    eax,eax
  406005:	mov    esi,0x1
  40600a:	call   4051f0 <__fprintf_chk@plt>
  40600f:	mov    rbx,QWORD PTR [rbx]
  406012:	test   rbx,rbx
  406015:	je     406058 <flatcc_parse_file@@Base+0x558>
  406017:	mov    rdi,QWORD PTR [rbx+0x348]
  40601e:	call   41c4c0 <__flatcc_fb_create_make_path@@Base>
  406023:	test   rax,rax
  406026:	mov    r14,rax
  406029:	je     4060db <flatcc_parse_file@@Base+0x5db>
  40602f:	lea    rdx,[rip+0x270dd]        # 42d113 <_IO_stdin_used@@Base+0x1113>
  406036:	mov    rcx,rax
  406039:	mov    esi,0x1
  40603e:	mov    rdi,rbp
  406041:	xor    eax,eax
  406043:	call   4051f0 <__fprintf_chk@plt>
  406048:	mov    rbx,QWORD PTR [rbx]
  40604b:	mov    rdi,r14
  40604e:	call   405040 <free@plt>
  406053:	test   rbx,rbx
  406056:	jne    406017 <flatcc_parse_file@@Base+0x517>
  406058:	lea    rdx,[rip+0x3e08e]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40605f:	mov    esi,0x1
  406064:	mov    rdi,rbp
  406067:	xor    eax,eax
  406069:	call   4051f0 <__fprintf_chk@plt>
  40606e:	mov    rdi,r12
  406071:	call   405040 <free@plt>
  406076:	mov    rdi,r13
  406079:	call   405040 <free@plt>
  40607e:	mov    rdi,rbp
  406081:	call   4050b0 <fclose@plt>
  406086:	jmp    405b5b <flatcc_parse_file@@Base+0x5b>
  40608b:	nop    DWORD PTR [rax+rax*1+0x0]
  406090:	lea    rsi,[rip+0x27042]        # 42d0d9 <_IO_stdin_used@@Base+0x10d9>
  406097:	mov    rdi,rbx
  40609a:	xor    eax,eax
  40609c:	call   41c950 <__flatcc_fb_print_error@@Base>
  4060a1:	jmp    405eb8 <flatcc_parse_file@@Base+0x3b8>
  4060a6:	mov    rsi,QWORD PTR [rbx+0xe8]
  4060ad:	lea    rdx,[rsp+0x20]
  4060b2:	mov    rdi,r13
  4060b5:	call   41c590 <__flatcc_fb_read_file@@Base>
  4060ba:	test   rax,rax
  4060bd:	je     4060e0 <flatcc_parse_file@@Base+0x5e0>
  4060bf:	mov    rdi,r13
  4060c2:	mov    QWORD PTR [rsp],rax
  4060c6:	call   41c0c0 <__flatcc_fb_copy_path@@Base>
  4060cb:	test   rax,rax
  4060ce:	mov    r15,rax
  4060d1:	mov    rsi,QWORD PTR [rsp]
  4060d5:	jne    405c1c <flatcc_parse_file@@Base+0x11c>
  4060db:	call   405640 <_start@@Base+0x130>
  4060e0:	mov    rcx,QWORD PTR [rbx+0x260]
  4060e7:	mov    rax,QWORD PTR [rsp+0x20]
  4060ec:	mov    rdx,QWORD PTR [rbx+0xe8]
  4060f3:	add    rax,QWORD PTR [rcx+0x68]
  4060f7:	cmp    rax,rdx
  4060fa:	jbe    406105 <flatcc_parse_file@@Base+0x605>
  4060fc:	test   rdx,rdx
  4060ff:	jne    405ed2 <flatcc_parse_file@@Base+0x3d2>
  406105:	mov    eax,DWORD PTR [rbx+0x1e8]
  40610b:	test   eax,eax
  40610d:	jle    405e68 <flatcc_parse_file@@Base+0x368>
  406113:	jmp    405bb0 <flatcc_parse_file@@Base+0xb0>
  406118:	call   4050d0 <__stack_chk_fail@plt>
  40611d:	cmp    DWORD PTR [rbx+0x1bc],0x0
  406124:	mov    r14,rax
  406127:	lea    r13,[rip+0x270e7]        # 42d215 <_IO_stdin_used@@Base+0x1215>
  40612e:	lea    rax,[rip+0x26f92]        # 42d0c7 <_IO_stdin_used@@Base+0x10c7>
  406135:	cmovne r13,rax
  406139:	jmp    405f8a <flatcc_parse_file@@Base+0x48a>
  40613e:	mov    rdi,rbp
  406141:	mov    rsi,rax
  406144:	lea    rdx,[rip+0x26f87]        # 42d0d2 <_IO_stdin_used@@Base+0x10d2>
  40614b:	jmp    405f77 <flatcc_parse_file@@Base+0x477>
  406150:	lea    rcx,[rip+0x26fc9]        # 42d120 <_IO_stdin_used@@Base+0x1120>
  406157:	lea    rsi,[rip+0x26eda]        # 42d038 <_IO_stdin_used@@Base+0x1038>
  40615e:	lea    rdi,[rip+0x26f92]        # 42d0f7 <_IO_stdin_used@@Base+0x10f7>
  406165:	mov    edx,0xdc
  40616a:	call   4050f0 <__assert_fail@plt>
  40616f:	lea    rsi,[rip+0x26f22]        # 42d098 <_IO_stdin_used@@Base+0x1098>
  406176:	mov    rdx,r12
  406179:	mov    rdi,rbx
  40617c:	xor    eax,eax
  40617e:	call   41c950 <__flatcc_fb_print_error@@Base>
  406183:	mov    rdi,r12
  406186:	call   405040 <free@plt>
  40618b:	mov    rdi,r13
  40618e:	call   405040 <free@plt>
  406193:	jmp    405b5b <flatcc_parse_file@@Base+0x5b>
  406198:	nop    DWORD PTR [rax+rax*1+0x0]
  4061a0:	mov    rdi,rsi
  4061a3:	jmp    405040 <free@plt>
  4061a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061b0 <__flatcc_fb_open_output_file@@Base>:
  4061b0:	push   r15
  4061b2:	push   r14
  4061b4:	mov    r15,rcx
  4061b7:	push   r13
  4061b9:	push   r12
  4061bb:	mov    r13,rsi
  4061be:	push   rbp
  4061bf:	push   rbx
  4061c0:	mov    r14,rdx
  4061c3:	mov    rbx,rdi
  4061c6:	sub    rsp,0x8
  4061ca:	mov    rax,QWORD PTR [rdi+0xe0]
  4061d1:	mov    rbp,QWORD PTR [rax+0x108]
  4061d8:	test   rbp,rbp
  4061db:	je     406208 <__flatcc_fb_open_output_file@@Base+0x58>
  4061dd:	mov    rdi,rbp
  4061e0:	xor    r12d,r12d
  4061e3:	call   4050c0 <strlen@plt>
  4061e8:	cmp    QWORD PTR [rbx+0xd0],0x0
  4061f0:	je     406220 <__flatcc_fb_open_output_file@@Base+0x70>
  4061f2:	add    rsp,0x8
  4061f6:	mov    eax,r12d
  4061f9:	pop    rbx
  4061fa:	pop    rbp
  4061fb:	pop    r12
  4061fd:	pop    r13
  4061ff:	pop    r14
  406201:	pop    r15
  406203:	ret    
  406204:	nop    DWORD PTR [rax+0x0]
  406208:	xor    eax,eax
  40620a:	xor    r12d,r12d
  40620d:	cmp    QWORD PTR [rbx+0xd0],0x0
  406215:	lea    rbp,[rip+0x3ded2]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40621c:	jne    4061f2 <__flatcc_fb_open_output_file@@Base+0x42>
  40621e:	xchg   ax,ax
  406220:	mov    rdi,rbp
  406223:	mov    r9d,0x1
  406229:	mov    r8,r15
  40622c:	mov    rcx,r14
  40622f:	mov    rdx,r13
  406232:	mov    rsi,rax
  406235:	call   41c160 <__flatcc_fb_create_join_path_n@@Base>
  40623a:	test   rax,rax
  40623d:	mov    rbp,rax
  406240:	je     40628f <__flatcc_fb_open_output_file@@Base+0xdf>
  406242:	lea    rsi,[rip+0x26ec3]        # 42d10c <_IO_stdin_used@@Base+0x110c>
  406249:	mov    rdi,rax
  40624c:	call   4051c0 <fopen@plt>
  406251:	test   rax,rax
  406254:	mov    QWORD PTR [rbx+0xd0],rax
  40625b:	je     406267 <__flatcc_fb_open_output_file@@Base+0xb7>
  40625d:	mov    rdi,rbp
  406260:	call   405040 <free@plt>
  406265:	jmp    4061f2 <__flatcc_fb_open_output_file@@Base+0x42>
  406267:	mov    rax,QWORD PTR [rip+0x49d7a]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40626e:	lea    rdx,[rip+0x26ecb]        # 42d140 <_IO_stdin_used@@Base+0x1140>
  406275:	mov    rcx,rbp
  406278:	mov    esi,0x1
  40627d:	mov    r12d,0xffffffff
  406283:	mov    rdi,QWORD PTR [rax]
  406286:	xor    eax,eax
  406288:	call   4051f0 <__fprintf_chk@plt>
  40628d:	jmp    40625d <__flatcc_fb_open_output_file@@Base+0xad>
  40628f:	call   405220 <__sprintf_chk@plt+0x10>
  406294:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40629f:	nop

00000000004062a0 <__flatcc_fb_close_output_file@@Base>:
  4062a0:	mov    rax,QWORD PTR [rdi+0xe0]
  4062a7:	cmp    QWORD PTR [rax+0x98],0x0
  4062af:	je     4062b8 <__flatcc_fb_close_output_file@@Base+0x18>
  4062b1:	repz ret 
  4062b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4062b8:	mov    eax,DWORD PTR [rax+0x80]
  4062be:	test   eax,eax
  4062c0:	jne    4062b1 <__flatcc_fb_close_output_file@@Base+0x11>
  4062c2:	mov    rax,QWORD PTR [rdi+0xd0]
  4062c9:	test   rax,rax
  4062cc:	je     4062b1 <__flatcc_fb_close_output_file@@Base+0x11>
  4062ce:	push   rbx
  4062cf:	mov    rbx,rdi
  4062d2:	mov    rdi,rax
  4062d5:	call   4050b0 <fclose@plt>
  4062da:	mov    QWORD PTR [rbx+0xd0],0x0
  4062e5:	pop    rbx
  4062e6:	ret    
  4062e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004062f0 <__flatcc_fb_end_output_c@@Base>:
  4062f0:	mov    rax,QWORD PTR [rip+0x49cd9]        # 44ffd0 <stdout@GLIBC_2.2.5>
  4062f7:	push   rbx
  4062f8:	mov    rbx,rdi
  4062fb:	mov    rdi,QWORD PTR [rdi+0xd0]
  406302:	cmp    QWORD PTR [rax],rdi
  406305:	je     406311 <__flatcc_fb_end_output_c@@Base+0x21>
  406307:	test   rdi,rdi
  40630a:	je     406311 <__flatcc_fb_end_output_c@@Base+0x21>
  40630c:	call   4050b0 <fclose@plt>
  406311:	mov    QWORD PTR [rbx+0xd0],0x0
  40631c:	pop    rbx
  40631d:	ret    
  40631e:	xchg   ax,ax

0000000000406320 <__flatcc_fb_init_output_c@@Base>:
  406320:	push   r15
  406322:	push   r14
  406324:	mov    r14,rdi
  406327:	push   r13
  406329:	push   r12
  40632b:	lea    r13,[rip+0x26dda]        # 42d10c <_IO_stdin_used@@Base+0x110c>
  406332:	push   rbp
  406333:	push   rbx
  406334:	mov    rcx,r14
  406337:	mov    r15,rsi
  40633a:	sub    rsp,0x18
  40633e:	mov    eax,DWORD PTR [rsi+0xa0]
  406344:	mov    r12,QWORD PTR [rsi+0x108]
  40634b:	test   eax,eax
  40634d:	lea    rax,[rip+0x26e9a]        # 42d1ee <_IO_stdin_used@@Base+0x11ee>
  406354:	cmove  rax,r13
  406358:	test   r12,r12
  40635b:	mov    QWORD PTR [rsp+0x8],rax
  406360:	lea    rax,[rip+0x3dd87]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  406367:	mov    QWORD PTR [rdi],0x0
  40636e:	mov    QWORD PTR [rdi+0xf8],0x0
  406379:	cmove  r12,rax
  40637d:	add    rdi,0x8
  406381:	xor    eax,eax
  406383:	and    rdi,0xfffffffffffffff8
  406387:	sub    rcx,rdi
  40638a:	add    ecx,0x100
  406390:	shr    ecx,0x3
  406393:	rep stos QWORD PTR es:[rdi],rax
  406396:	mov    QWORD PTR [r14+0xe0],rsi
  40639d:	mov    rbx,QWORD PTR [rsi+0xe8]
  4063a4:	test   rbx,rbx
  4063a7:	je     4064e5 <__flatcc_fb_init_output_c@@Base+0x1c5>
  4063ad:	mov    rdi,rbx
  4063b0:	call   4050c0 <strlen@plt>
  4063b5:	cmp    rax,0x64
  4063b9:	mov    r13,rax
  4063bc:	ja     406591 <__flatcc_fb_init_output_c@@Base+0x271>
  4063c2:	mov    edx,0x64
  4063c7:	mov    rsi,rbx
  4063ca:	mov    rdi,r14
  4063cd:	call   405060 <strncpy@plt>
  4063d2:	test   r13,r13
  4063d5:	mov    BYTE PTR [r14+0x64],0x0
  4063da:	jne    4064b0 <__flatcc_fb_init_output_c@@Base+0x190>
  4063e0:	movsx  rbx,BYTE PTR [r14]
  4063e4:	lea    rbp,[r14+0x66]
  4063e8:	test   bl,bl
  4063ea:	je     4064dd <__flatcc_fb_init_output_c@@Base+0x1bd>
  4063f0:	call   405030 <__ctype_toupper_loc@plt>
  4063f5:	mov    rcx,r14
  4063f8:	mov    rdx,rbp
  4063fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406400:	mov    rsi,QWORD PTR [rax]
  406403:	add    rdx,0x1
  406407:	add    rcx,0x1
  40640b:	mov    esi,DWORD PTR [rsi+rbx*4]
  40640e:	mov    BYTE PTR [rdx-0x1],sil
  406412:	movsx  rbx,BYTE PTR [rcx]
  406416:	test   bl,bl
  406418:	jne    406400 <__flatcc_fb_init_output_c@@Base+0xe0>
  40641a:	mov    BYTE PTR [rdx],0x0
  40641d:	mov    BYTE PTR [r14+r13*1+0x66],0x0
  406423:	mov    ebx,DWORD PTR [r15+0x80]
  40642a:	mov    eax,DWORD PTR [r15+0xd0]
  406431:	test   ebx,ebx
  406433:	mov    DWORD PTR [r14+0xf4],eax
  40643a:	jne    4064c8 <__flatcc_fb_init_output_c@@Base+0x1a8>
  406440:	mov    rax,QWORD PTR [r14+0xe0]
  406447:	mov    rsi,QWORD PTR [rax+0x98]
  40644e:	test   rsi,rsi
  406451:	je     406498 <__flatcc_fb_init_output_c@@Base+0x178>
  406453:	lea    rdx,[rip+0x3dc94]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40645a:	mov    ecx,0x1
  40645f:	mov    rdi,r12
  406462:	call   41c2c0 <__flatcc_fb_create_join_path@@Base>
  406467:	test   rax,rax
  40646a:	mov    rbp,rax
  40646d:	je     4065bd <__flatcc_fb_init_output_c@@Base+0x29d>
  406473:	mov    rsi,QWORD PTR [rsp+0x8]
  406478:	mov    rdi,rax
  40647b:	call   4051c0 <fopen@plt>
  406480:	test   rax,rax
  406483:	mov    QWORD PTR [r14+0xd0],rax
  40648a:	je     406567 <__flatcc_fb_init_output_c@@Base+0x247>
  406490:	mov    rdi,rbp
  406493:	call   405040 <free@plt>
  406498:	add    rsp,0x18
  40649c:	mov    eax,ebx
  40649e:	pop    rbx
  40649f:	pop    rbp
  4064a0:	pop    r12
  4064a2:	pop    r13
  4064a4:	pop    r14
  4064a6:	pop    r15
  4064a8:	ret    
  4064a9:	nop    DWORD PTR [rax+0x0]
  4064b0:	lea    rax,[r13+0x1]
  4064b4:	mov    BYTE PTR [r14+r13*1],0x5f
  4064b9:	mov    BYTE PTR [r14+rax*1],0x0
  4064be:	jmp    4063e0 <__flatcc_fb_init_output_c@@Base+0xc0>
  4064c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4064c8:	mov    rax,QWORD PTR [rip+0x49b01]        # 44ffd0 <stdout@GLIBC_2.2.5>
  4064cf:	xor    ebx,ebx
  4064d1:	mov    rax,QWORD PTR [rax]
  4064d4:	mov    QWORD PTR [r14+0xd0],rax
  4064db:	jmp    406498 <__flatcc_fb_init_output_c@@Base+0x178>
  4064dd:	mov    rdx,rbp
  4064e0:	jmp    40641a <__flatcc_fb_init_output_c@@Base+0xfa>
  4064e5:	movabs rax,0x6666756274616c66
  4064ef:	mov    QWORD PTR [r14+0x8],0x737265
  4064f7:	mov    QWORD PTR [r14+0x10],0x0
  4064ff:	mov    QWORD PTR [r14],rax
  406502:	mov    QWORD PTR [r14+0x18],0x0
  40650a:	mov    eax,0xc
  40650f:	mov    QWORD PTR [r14+0x20],0x0
  406517:	mov    QWORD PTR [r14+0x28],0x0
  40651f:	mov    r13d,0xb
  406525:	mov    QWORD PTR [r14+0x30],0x0
  40652d:	mov    QWORD PTR [r14+0x38],0x0
  406535:	mov    QWORD PTR [r14+0x40],0x0
  40653d:	mov    QWORD PTR [r14+0x48],0x0
  406545:	mov    QWORD PTR [r14+0x50],0x0
  40654d:	mov    QWORD PTR [r14+0x58],0x0
  406555:	mov    DWORD PTR [r14+0x60],0x0
  40655d:	mov    BYTE PTR [r14+0x64],0x0
  406562:	jmp    4064b4 <__flatcc_fb_init_output_c@@Base+0x194>
  406567:	mov    rax,QWORD PTR [rip+0x49a7a]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40656e:	lea    rdx,[rip+0x26bcb]        # 42d140 <_IO_stdin_used@@Base+0x1140>
  406575:	mov    rcx,rbp
  406578:	mov    esi,0x1
  40657d:	mov    ebx,0xffffffff
  406582:	mov    rdi,QWORD PTR [rax]
  406585:	xor    eax,eax
  406587:	call   4051f0 <__fprintf_chk@plt>
  40658c:	jmp    406490 <__flatcc_fb_init_output_c@@Base+0x170>
  406591:	mov    rax,QWORD PTR [rip+0x49a50]        # 44ffe8 <stderr@GLIBC_2.2.5>
  406598:	lea    rdx,[rip+0x26bc9]        # 42d168 <_IO_stdin_used@@Base+0x1168>
  40659f:	mov    ecx,0x64
  4065a4:	mov    esi,0x1
  4065a9:	mov    ebx,0xffffffff
  4065ae:	mov    rdi,QWORD PTR [rax]
  4065b1:	xor    eax,eax
  4065b3:	call   4051f0 <__fprintf_chk@plt>
  4065b8:	jmp    406498 <__flatcc_fb_init_output_c@@Base+0x178>
  4065bd:	call   405220 <__sprintf_chk@plt+0x10>
  4065c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4065cd:	nop    DWORD PTR [rax]

00000000004065d0 <__flatcc_fb_gen_c_includes@@Base>:
  4065d0:	push   r15
  4065d2:	push   r14
  4065d4:	push   r13
  4065d6:	push   r12
  4065d8:	mov    r12,rdi
  4065db:	push   rbp
  4065dc:	push   rbx
  4065dd:	sub    rsp,0x48
  4065e1:	mov    rax,QWORD PTR fs:0x28
  4065ea:	mov    QWORD PTR [rsp+0x38],rax
  4065ef:	xor    eax,eax
  4065f1:	mov    rax,QWORD PTR [rdi+0xd8]
  4065f8:	lea    r13,[rsp+0x10]
  4065fd:	mov    QWORD PTR [rsp],rsi
  406601:	mov    QWORD PTR [rsp+0x8],rdx
  406606:	mov    rdi,QWORD PTR [rax+0x118]
  40660d:	mov    rbx,QWORD PTR [rax]
  406610:	mov    QWORD PTR [rsp+0x10],0x0
  406619:	mov    QWORD PTR [rsp+0x18],0x0
  406622:	mov    QWORD PTR [rsp+0x20],0x0
  40662b:	mov    QWORD PTR [rsp+0x28],0x0
  406634:	call   41c0c0 <__flatcc_fb_copy_path@@Base>
  406639:	mov    edx,0x1
  40663e:	mov    rsi,rax
  406641:	mov    rdi,r13
  406644:	call   4199c0 <str_set_insert_item@@Base>
  406649:	nop    DWORD PTR [rax+0x0]
  406650:	test   rbx,rbx
  406653:	je     4066f8 <__flatcc_fb_gen_c_includes@@Base+0x128>
  406659:	nop    DWORD PTR [rax+0x0]
  406660:	mov    rax,QWORD PTR [r12+0xe0]
  406668:	movsxd rsi,DWORD PTR [rbx+0x10]
  40666c:	mov    rdi,QWORD PTR [rbx+0x8]
  406670:	mov    rdx,QWORD PTR [rax+0x68]
  406674:	call   41c530 <__flatcc_fb_create_basename@@Base>
  406679:	test   rax,rax
  40667c:	mov    rbp,rax
  40667f:	je     40676d <__flatcc_fb_gen_c_includes@@Base+0x19d>
  406685:	mov    rdi,rax
  406688:	mov    rbx,QWORD PTR [rbx]
  40668b:	call   41c0c0 <__flatcc_fb_copy_path@@Base>
  406690:	test   rax,rax
  406693:	mov    r14,rax
  406696:	je     40676d <__flatcc_fb_gen_c_includes@@Base+0x19d>
  40669c:	movzx  r15d,BYTE PTR [rax]
  4066a0:	test   r15b,r15b
  4066a3:	je     4066ca <__flatcc_fb_gen_c_includes@@Base+0xfa>
  4066a5:	call   405030 <__ctype_toupper_loc@plt>
  4066aa:	mov    rsi,r14
  4066ad:	nop    DWORD PTR [rax]
  4066b0:	mov    rdi,QWORD PTR [rax]
  4066b3:	movsx  rdx,r15b
  4066b7:	add    rsi,0x1
  4066bb:	mov    edx,DWORD PTR [rdi+rdx*4]
  4066be:	mov    BYTE PTR [rsi-0x1],dl
  4066c1:	movzx  r15d,BYTE PTR [rsi]
  4066c5:	test   r15b,r15b
  4066c8:	jne    4066b0 <__flatcc_fb_gen_c_includes@@Base+0xe0>
  4066ca:	mov    edx,0x1
  4066cf:	mov    rsi,r14
  4066d2:	mov    rdi,r13
  4066d5:	call   4199c0 <str_set_insert_item@@Base>
  4066da:	test   rax,rax
  4066dd:	je     406730 <__flatcc_fb_gen_c_includes@@Base+0x160>
  4066df:	mov    rdi,r14
  4066e2:	call   405040 <free@plt>
  4066e7:	mov    rdi,rbp
  4066ea:	call   405040 <free@plt>
  4066ef:	test   rbx,rbx
  4066f2:	jne    406660 <__flatcc_fb_gen_c_includes@@Base+0x90>
  4066f8:	lea    rsi,[rip+0xfffffffffffffaa1]        # 4061a0 <flatcc_parse_file@@Base+0x6a0>
  4066ff:	xor    edx,edx
  406701:	mov    rdi,r13
  406704:	call   4198d0 <str_set_destroy@@Base>
  406709:	mov    rax,QWORD PTR [rsp+0x38]
  40670e:	xor    rax,QWORD PTR fs:0x28
  406717:	jne    406772 <__flatcc_fb_gen_c_includes@@Base+0x1a2>
  406719:	add    rsp,0x48
  40671d:	pop    rbx
  40671e:	pop    rbp
  40671f:	pop    r12
  406721:	pop    r13
  406723:	pop    r14
  406725:	pop    r15
  406727:	ret    
  406728:	nop    DWORD PTR [rax+rax*1+0x0]
  406730:	sub    rsp,0x8
  406734:	mov    rdi,QWORD PTR [r12+0xd0]
  40673c:	lea    rdx,[rip+0x26a5d]        # 42d1a0 <_IO_stdin_used@@Base+0x11a0>
  406743:	push   QWORD PTR [rsp+0x8]
  406747:	mov    r8,QWORD PTR [rsp+0x18]
  40674c:	mov    r9,rbp
  40674f:	mov    rcx,r14
  406752:	mov    esi,0x1
  406757:	xor    eax,eax
  406759:	call   4051f0 <__fprintf_chk@plt>
  40675e:	mov    rdi,rbp
  406761:	call   405040 <free@plt>
  406766:	pop    rax
  406767:	pop    rdx
  406768:	jmp    406650 <__flatcc_fb_gen_c_includes@@Base+0x80>
  40676d:	call   405220 <__sprintf_chk@plt+0x10>
  406772:	call   4050d0 <__stack_chk_fail@plt>
  406777:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406780 <__flatcc_fb_copy_scope@@Base>:
  406780:	push   r13
  406782:	push   r12
  406784:	push   rbp
  406785:	push   rbx
  406786:	sub    rsp,0x8
  40678a:	movsxd r12,DWORD PTR [rdi+0x30]
  40678e:	mov    rdx,QWORD PTR [rdi]
  406791:	test   rdx,rdx
  406794:	mov    rax,r12
  406797:	je     4067b5 <__flatcc_fb_copy_scope@@Base+0x35>
  406799:	nop    DWORD PTR [rax+0x0]
  4067a0:	mov    rcx,QWORD PTR [rdx+0x8]
  4067a4:	mov    rdx,QWORD PTR [rdx]
  4067a7:	mov    rcx,QWORD PTR [rcx+0x8]
  4067ab:	test   rdx,rdx
  4067ae:	lea    rax,[rax+rcx*1+0x1]
  4067b3:	jne    4067a0 <__flatcc_fb_copy_scope@@Base+0x20>
  4067b5:	cmp    rax,0x65
  4067b9:	ja     406822 <__flatcc_fb_copy_scope@@Base+0xa2>
  4067bb:	mov    r13,rsi
  4067be:	mov    rsi,QWORD PTR [rdi+0x28]
  4067c2:	mov    rbx,rdi
  4067c5:	mov    rdx,r12
  4067c8:	mov    rdi,r13
  4067cb:	call   405160 <memcpy@plt>
  4067d0:	mov    rbp,QWORD PTR [rbx]
  4067d3:	test   rbp,rbp
  4067d6:	je     40680e <__flatcc_fb_copy_scope@@Base+0x8e>
  4067d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4067e0:	mov    rax,QWORD PTR [rbp+0x8]
  4067e4:	lea    rdi,[r13+r12*1+0x0]
  4067e9:	mov    rbx,QWORD PTR [rax+0x8]
  4067ed:	mov    rsi,QWORD PTR [rax]
  4067f0:	mov    rdx,rbx
  4067f3:	add    rbx,r12
  4067f6:	call   405160 <memcpy@plt>
  4067fb:	mov    BYTE PTR [r13+rbx*1+0x0],0x5f
  406801:	mov    rbp,QWORD PTR [rbp+0x0]
  406805:	lea    r12,[rbx+0x1]
  406809:	test   rbp,rbp
  40680c:	jne    4067e0 <__flatcc_fb_copy_scope@@Base+0x60>
  40680e:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  406814:	mov    eax,r12d
  406817:	add    rsp,0x8
  40681b:	pop    rbx
  40681c:	pop    rbp
  40681d:	pop    r12
  40681f:	pop    r13
  406821:	ret    
  406822:	mov    BYTE PTR [rsi],0x0
  406825:	mov    eax,0xffffffff
  40682a:	jmp    406817 <__flatcc_fb_copy_scope@@Base+0x97>
  40682c:	nop    DWORD PTR [rax+0x0]

0000000000406830 <__flatcc_fb_scoped_symbol_name@@Base>:
  406830:	push   rbp
  406831:	push   rbx
  406832:	mov    rbx,rdx
  406835:	sub    rsp,0x8
  406839:	cmp    QWORD PTR [rdx+0xd0],rdi
  406840:	mov    rbp,QWORD PTR [rsi+0x8]
  406844:	je     406907 <__flatcc_fb_scoped_symbol_name@@Base+0xd7>
  40684a:	mov    rsi,rdx
  40684d:	call   406780 <__flatcc_fb_copy_scope@@Base>
  406852:	test   eax,eax
  406854:	mov    DWORD PTR [rbx+0xd8],eax
  40685a:	js     4068e0 <__flatcc_fb_scoped_symbol_name@@Base+0xb0>
  406860:	mov    rcx,QWORD PTR [rbp+0x8]
  406864:	lea    esi,[rax+rcx*1]
  406867:	mov    edx,ecx
  406869:	mov    DWORD PTR [rbx+0xdc],ecx
  40686f:	cmp    esi,0xcb
  406875:	mov    DWORD PTR [rbx+0xe0],esi
  40687b:	jle    4068bb <__flatcc_fb_scoped_symbol_name@@Base+0x8b>
  40687d:	mov    rax,QWORD PTR [rip+0x49764]        # 44ffe8 <stderr@GLIBC_2.2.5>
  406884:	mov    r8,QWORD PTR [rbp+0x0]
  406888:	lea    rdx,[rip+0x26939]        # 42d1c8 <_IO_stdin_used@@Base+0x11c8>
  40688f:	mov    esi,0x1
  406894:	mov    rdi,QWORD PTR [rax]
  406897:	xor    eax,eax
  406899:	call   4051f0 <__fprintf_chk@plt>
  40689e:	mov    eax,DWORD PTR [rbx+0xd8]
  4068a4:	mov    edx,0xcb
  4068a9:	mov    DWORD PTR [rbx+0xe0],0xcb
  4068b3:	sub    edx,eax
  4068b5:	mov    DWORD PTR [rbx+0xdc],edx
  4068bb:	cdqe   
  4068bd:	mov    rsi,QWORD PTR [rbp+0x0]
  4068c1:	movsxd rdx,edx
  4068c4:	lea    rdi,[rbx+rax*1]
  4068c8:	call   405160 <memcpy@plt>
  4068cd:	movsxd rax,DWORD PTR [rbx+0xe0]
  4068d4:	mov    BYTE PTR [rbx+rax*1],0x0
  4068d8:	add    rsp,0x8
  4068dc:	pop    rbx
  4068dd:	pop    rbp
  4068de:	ret    
  4068df:	nop
  4068e0:	mov    rax,QWORD PTR [rip+0x49701]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4068e7:	lea    rdx,[rip+0x26903]        # 42d1f1 <_IO_stdin_used@@Base+0x11f1>
  4068ee:	mov    DWORD PTR [rbx+0xd8],0x0
  4068f8:	mov    esi,0x1
  4068fd:	mov    rdi,QWORD PTR [rax]
  406900:	xor    eax,eax
  406902:	call   4051f0 <__fprintf_chk@plt>
  406907:	mov    eax,DWORD PTR [rbx+0xd8]
  40690d:	jmp    406860 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
  406912:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40691d:	nop    DWORD PTR [rax]

0000000000406920 <__flatcc_fb_codegen_common_c@@Base>:
  406920:	push   r12
  406922:	push   rbp
  406923:	push   rbx
  406924:	mov    rbx,rdi
  406927:	call   4050c0 <strlen@plt>
  40692c:	lea    rbp,[rax-0x1]
  406930:	mov    rax,QWORD PTR [rbx+0xe0]
  406937:	mov    edx,DWORD PTR [rax+0xb0]
  40693d:	test   edx,edx
  40693f:	jne    406990 <__flatcc_fb_codegen_common_c@@Base+0x70>
  406941:	mov    r12d,DWORD PTR [rax+0xb4]
  406948:	test   r12d,r12d
  40694b:	jne    406958 <__flatcc_fb_codegen_common_c@@Base+0x38>
  40694d:	mov    eax,r12d
  406950:	pop    rbx
  406951:	pop    rbp
  406952:	pop    r12
  406954:	ret    
  406955:	nop    DWORD PTR [rax]
  406958:	lea    rcx,[rip+0x268c0]        # 42d21f <_IO_stdin_used@@Base+0x121f>
  40695f:	mov    rdx,rbp
  406962:	mov    rsi,rbx
  406965:	mov    rdi,rbx
  406968:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  40696d:	test   eax,eax
  40696f:	mov    r12d,eax
  406972:	jne    4069d0 <__flatcc_fb_codegen_common_c@@Base+0xb0>
  406974:	mov    rdi,rbx
  406977:	call   40e670 <__flatcc_fb_gen_common_c_builder_header@@Base>
  40697c:	mov    rdi,rbx
  40697f:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  406984:	mov    eax,r12d
  406987:	pop    rbx
  406988:	pop    rbp
  406989:	pop    r12
  40698b:	ret    
  40698c:	nop    DWORD PTR [rax+0x0]
  406990:	lea    rcx,[rip+0x26877]        # 42d20e <_IO_stdin_used@@Base+0x120e>
  406997:	mov    rdx,rbp
  40699a:	mov    rsi,rbx
  40699d:	mov    rdi,rbx
  4069a0:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  4069a5:	test   eax,eax
  4069a7:	jne    4069d0 <__flatcc_fb_codegen_common_c@@Base+0xb0>
  4069a9:	mov    rdi,rbx
  4069ac:	call   40a1d0 <__flatcc_fb_gen_common_c_header@@Base>
  4069b1:	mov    rdi,rbx
  4069b4:	mov    r12d,eax
  4069b7:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  4069bc:	test   r12d,r12d
  4069bf:	jne    40694d <__flatcc_fb_codegen_common_c@@Base+0x2d>
  4069c1:	mov    rax,QWORD PTR [rbx+0xe0]
  4069c8:	jmp    406941 <__flatcc_fb_codegen_common_c@@Base+0x21>
  4069cd:	nop    DWORD PTR [rax]
  4069d0:	mov    r12d,0xffffffff
  4069d6:	jmp    40694d <__flatcc_fb_codegen_common_c@@Base+0x2d>
  4069db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004069e0 <__flatcc_fb_codegen_c@@Base>:
  4069e0:	push   r12
  4069e2:	push   rbp
  4069e3:	xor    edx,edx
  4069e5:	push   rbx
  4069e6:	mov    rbx,rdi
  4069e9:	sub    rsp,0x10
  4069ed:	mov    QWORD PTR [rdi+0xd8],rsi
  4069f4:	mov    rdi,QWORD PTR [rsi+0x68]
  4069f8:	xor    esi,esi
  4069fa:	call   41b7e0 <fb_scope_table_find@@Base>
  4069ff:	mov    QWORD PTR [rbx+0xe8],rax
  406a06:	mov    rax,QWORD PTR [rbx+0xd8]
  406a0d:	mov    rbp,QWORD PTR [rax+0x110]
  406a14:	mov    rdi,rbp
  406a17:	call   4050c0 <strlen@plt>
  406a1c:	mov    r12,rax
  406a1f:	mov    rax,QWORD PTR [rbx+0xe0]
  406a26:	mov    edi,DWORD PTR [rax+0xb8]
  406a2c:	test   edi,edi
  406a2e:	jne    406a70 <__flatcc_fb_codegen_c@@Base+0x90>
  406a30:	mov    esi,DWORD PTR [rax+0xbc]
  406a36:	test   esi,esi
  406a38:	jne    406ab8 <__flatcc_fb_codegen_c@@Base+0xd8>
  406a3a:	mov    ecx,DWORD PTR [rax+0xc0]
  406a40:	test   ecx,ecx
  406a42:	jne    406b08 <__flatcc_fb_codegen_c@@Base+0x128>
  406a48:	mov    edx,DWORD PTR [rax+0xc4]
  406a4e:	test   edx,edx
  406a50:	jne    406b58 <__flatcc_fb_codegen_c@@Base+0x178>
  406a56:	mov    eax,DWORD PTR [rax+0xc8]
  406a5c:	test   eax,eax
  406a5e:	jne    406ba0 <__flatcc_fb_codegen_c@@Base+0x1c0>
  406a64:	add    rsp,0x10
  406a68:	pop    rbx
  406a69:	pop    rbp
  406a6a:	pop    r12
  406a6c:	ret    
  406a6d:	nop    DWORD PTR [rax]
  406a70:	lea    rcx,[rip+0x2679e]        # 42d215 <_IO_stdin_used@@Base+0x1215>
  406a77:	mov    rdx,r12
  406a7a:	mov    rsi,rbp
  406a7d:	mov    rdi,rbx
  406a80:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  406a85:	test   eax,eax
  406a87:	jne    406bf0 <__flatcc_fb_codegen_c@@Base+0x210>
  406a8d:	mov    rdi,rbx
  406a90:	call   40af10 <__flatcc_fb_gen_c_reader@@Base>
  406a95:	test   eax,eax
  406a97:	jne    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406a99:	mov    rdi,rbx
  406a9c:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  406aa1:	mov    rax,QWORD PTR [rbx+0xe0]
  406aa8:	mov    esi,DWORD PTR [rax+0xbc]
  406aae:	test   esi,esi
  406ab0:	je     406a3a <__flatcc_fb_codegen_c@@Base+0x5a>
  406ab2:	nop    WORD PTR [rax+rax*1+0x0]
  406ab8:	mov    rax,QWORD PTR [rbx+0xd8]
  406abf:	lea    rcx,[rip+0x26760]        # 42d226 <_IO_stdin_used@@Base+0x1226>
  406ac6:	mov    rdx,r12
  406ac9:	mov    rdi,rbx
  406acc:	mov    rsi,QWORD PTR [rax+0x110]
  406ad3:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  406ad8:	test   eax,eax
  406ada:	jne    406bf0 <__flatcc_fb_codegen_c@@Base+0x210>
  406ae0:	mov    rdi,rbx
  406ae3:	call   40f250 <__flatcc_fb_gen_c_builder@@Base>
  406ae8:	test   eax,eax
  406aea:	jne    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406af0:	mov    rdi,rbx
  406af3:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  406af8:	mov    rax,QWORD PTR [rbx+0xe0]
  406aff:	jmp    406a3a <__flatcc_fb_codegen_c@@Base+0x5a>
  406b04:	nop    DWORD PTR [rax+0x0]
  406b08:	mov    rax,QWORD PTR [rbx+0xd8]
  406b0f:	lea    rcx,[rip+0x2671b]        # 42d231 <_IO_stdin_used@@Base+0x1231>
  406b16:	mov    rdx,r12
  406b19:	mov    rdi,rbx
  406b1c:	mov    rsi,QWORD PTR [rax+0x110]
  406b23:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  406b28:	test   eax,eax
  406b2a:	jne    406bf0 <__flatcc_fb_codegen_c@@Base+0x210>
  406b30:	mov    rdi,rbx
  406b33:	call   4102c0 <__flatcc_fb_gen_c_verifier@@Base>
  406b38:	test   eax,eax
  406b3a:	jne    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406b40:	mov    rdi,rbx
  406b43:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  406b48:	mov    rax,QWORD PTR [rbx+0xe0]
  406b4f:	jmp    406a48 <__flatcc_fb_codegen_c@@Base+0x68>
  406b54:	nop    DWORD PTR [rax+0x0]
  406b58:	mov    rax,QWORD PTR [rbx+0xd8]
  406b5f:	lea    rcx,[rip+0x266d7]        # 42d23d <_IO_stdin_used@@Base+0x123d>
  406b66:	mov    rdx,r12
  406b69:	mov    rdi,rbx
  406b6c:	mov    rsi,QWORD PTR [rax+0x110]
  406b73:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  406b78:	test   eax,eax
  406b7a:	jne    406bf0 <__flatcc_fb_codegen_c@@Base+0x210>
  406b7c:	mov    rdi,rbx
  406b7f:	call   414760 <__flatcc_fb_gen_c_json_parser@@Base>
  406b84:	test   eax,eax
  406b86:	jne    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406b8c:	mov    rdi,rbx
  406b8f:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  406b94:	mov    rax,QWORD PTR [rbx+0xe0]
  406b9b:	jmp    406a56 <__flatcc_fb_codegen_c@@Base+0x76>
  406ba0:	mov    rax,QWORD PTR [rbx+0xd8]
  406ba7:	lea    rcx,[rip+0x2669e]        # 42d24c <_IO_stdin_used@@Base+0x124c>
  406bae:	mov    rdx,r12
  406bb1:	mov    rdi,rbx
  406bb4:	mov    rsi,QWORD PTR [rax+0x110]
  406bbb:	call   4061b0 <__flatcc_fb_open_output_file@@Base>
  406bc0:	test   eax,eax
  406bc2:	jne    406bf0 <__flatcc_fb_codegen_c@@Base+0x210>
  406bc4:	mov    rdi,rbx
  406bc7:	call   417000 <__flatcc_fb_gen_c_json_printer@@Base>
  406bcc:	test   eax,eax
  406bce:	jne    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406bd4:	mov    rdi,rbx
  406bd7:	mov    DWORD PTR [rsp+0xc],eax
  406bdb:	call   4062a0 <__flatcc_fb_close_output_file@@Base>
  406be0:	mov    eax,DWORD PTR [rsp+0xc]
  406be4:	jmp    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406be9:	nop    DWORD PTR [rax+0x0]
  406bf0:	mov    eax,0xffffffff
  406bf5:	jmp    406a64 <__flatcc_fb_codegen_c@@Base+0x84>
  406bfa:	nop    WORD PTR [rax+rax*1+0x0]
  406c00:	push   r12
  406c02:	push   rbp
  406c03:	mov    ecx,0x1d
  406c08:	push   rbx
  406c09:	mov    rbp,rdi
  406c0c:	sub    rsp,0xf0
  406c13:	mov    rax,QWORD PTR fs:0x28
  406c1c:	mov    QWORD PTR [rsp+0xe8],rax
  406c24:	xor    eax,eax
  406c26:	cmp    WORD PTR [rsi+0x10],0x1
  406c2b:	mov    rdi,rsp
  406c2e:	rep stos QWORD PTR es:[rdi],rax
  406c31:	ja     406db6 <__flatcc_fb_codegen_c@@Base+0x3d6>
  406c37:	mov    rdi,QWORD PTR [rsi+0x18]
  406c3b:	mov    r12,rsi
  406c3e:	mov    rdx,rsp
  406c41:	mov    rbx,rsp
  406c44:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  406c49:	cmp    WORD PTR [r12+0x10],0x1
  406c50:	je     406ce0 <__flatcc_fb_codegen_c@@Base+0x300>
  406c56:	mov    rdi,QWORD PTR [rbp+0xd0]
  406c5d:	lea    rdx,[rip+0x26774]        # 42d3d8 <_IO_stdin_used@@Base+0x13d8>
  406c64:	mov    r8,rsp
  406c67:	mov    rcx,rsp
  406c6a:	mov    esi,0x1
  406c6f:	xor    eax,eax
  406c71:	call   4051f0 <__fprintf_chk@plt>
  406c76:	mov    rdi,QWORD PTR [rbp+0xd0]
  406c7d:	lea    rdx,[rip+0x26784]        # 42d408 <_IO_stdin_used@@Base+0x1408>
  406c84:	mov    r8,rsp
  406c87:	mov    rcx,rbp
  406c8a:	mov    esi,0x1
  406c8f:	xor    eax,eax
  406c91:	call   4051f0 <__fprintf_chk@plt>
  406c96:	mov    rdi,QWORD PTR [rbp+0xd0]
  406c9d:	lea    rdx,[rip+0x2678c]        # 42d430 <_IO_stdin_used@@Base+0x1430>
  406ca4:	mov    r8,rsp
  406ca7:	mov    rcx,rbp
  406caa:	mov    esi,0x1
  406caf:	xor    eax,eax
  406cb1:	call   4051f0 <__fprintf_chk@plt>
  406cb6:	mov    rax,QWORD PTR [rsp+0xe8]
  406cbe:	xor    rax,QWORD PTR fs:0x28
  406cc7:	jne    406dd5 <__flatcc_fb_codegen_c@@Base+0x3f5>
  406ccd:	add    rsp,0xf0
  406cd4:	pop    rbx
  406cd5:	pop    rbp
  406cd6:	pop    r12
  406cd8:	ret    
  406cd9:	nop    DWORD PTR [rax+0x0]
  406ce0:	cmp    QWORD PTR [r12+0xb8],0x0
  406ce9:	mov    rdi,QWORD PTR [rbp+0xd0]
  406cf0:	jne    406d98 <__flatcc_fb_codegen_c@@Base+0x3b8>
  406cf6:	lea    rdx,[rip+0x2661b]        # 42d318 <_IO_stdin_used@@Base+0x1318>
  406cfd:	mov    rcx,rsp
  406d00:	mov    esi,0x1
  406d05:	xor    eax,eax
  406d07:	call   4051f0 <__fprintf_chk@plt>
  406d0c:	mov    rdi,QWORD PTR [rbp+0xd0]
  406d13:	lea    rdx,[rip+0x26626]        # 42d340 <_IO_stdin_used@@Base+0x1340>
  406d1a:	mov    r8,rbx
  406d1d:	mov    rcx,rbx
  406d20:	mov    esi,0x1
  406d25:	xor    eax,eax
  406d27:	call   4051f0 <__fprintf_chk@plt>
  406d2c:	mov    rdi,QWORD PTR [rbp+0xd0]
  406d33:	lea    rdx,[rip+0x2662e]        # 42d368 <_IO_stdin_used@@Base+0x1368>
  406d3a:	mov    r8,rbx
  406d3d:	mov    rcx,rbx
  406d40:	mov    esi,0x1
  406d45:	xor    eax,eax
  406d47:	call   4051f0 <__fprintf_chk@plt>
  406d4c:	mov    rdi,QWORD PTR [rbp+0xd0]
  406d53:	lea    rdx,[rip+0x26636]        # 42d390 <_IO_stdin_used@@Base+0x1390>
  406d5a:	mov    r8,rbx
  406d5d:	mov    rcx,rbx
  406d60:	mov    esi,0x1
  406d65:	xor    eax,eax
  406d67:	call   4051f0 <__fprintf_chk@plt>
  406d6c:	mov    rdi,QWORD PTR [rbp+0xd0]
  406d73:	lea    rdx,[rip+0x26636]        # 42d3b0 <_IO_stdin_used@@Base+0x13b0>
  406d7a:	mov    r8,rbx
  406d7d:	mov    rcx,rbx
  406d80:	mov    esi,0x1
  406d85:	xor    eax,eax
  406d87:	call   4051f0 <__fprintf_chk@plt>
  406d8c:	jmp    406cb6 <__flatcc_fb_codegen_c@@Base+0x2d6>
  406d91:	nop    DWORD PTR [rax+0x0]
  406d98:	lea    rdx,[rip+0x2dca4]        # 434a43 <_IO_stdin_used@@Base+0x8a43>
  406d9f:	mov    r8,rsp
  406da2:	mov    rcx,rsp
  406da5:	mov    esi,0x1
  406daa:	xor    eax,eax
  406dac:	call   4051f0 <__fprintf_chk@plt>
  406db1:	jmp    406d0c <__flatcc_fb_codegen_c@@Base+0x32c>
  406db6:	lea    rcx,[rip+0x2e2d3]        # 435090 <_IO_stdin_used@@Base+0x9090>
  406dbd:	lea    rsi,[rip+0x2649c]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  406dc4:	lea    rdi,[rip+0x26505]        # 42d2d0 <_IO_stdin_used@@Base+0x12d0>
  406dcb:	mov    edx,0x35f
  406dd0:	call   4050f0 <__assert_fail@plt>
  406dd5:	call   4050d0 <__stack_chk_fail@plt>
  406dda:	nop    WORD PTR [rax+rax*1+0x0]
  406de0:	push   r15
  406de2:	push   r14
  406de4:	mov    ecx,0x1d
  406de9:	push   r13
  406deb:	push   r12
  406ded:	push   rbp
  406dee:	push   rbx
  406def:	mov    rbx,rdi
  406df2:	sub    rsp,0x188
  406df9:	lea    r14,[rsp+0x20]
  406dfe:	mov    rax,QWORD PTR fs:0x28
  406e07:	mov    QWORD PTR [rsp+0x178],rax
  406e0f:	xor    eax,eax
  406e11:	mov    rdi,r14
  406e14:	rep stos QWORD PTR es:[rdi],rax
  406e17:	movzx  eax,WORD PTR [rsi+0x10]
  406e1b:	mov    WORD PTR [rsp+0x16],ax
  406e20:	sub    eax,0x3
  406e23:	cmp    ax,0x1
  406e27:	ja     407979 <__flatcc_fb_codegen_c@@Base+0xf99>
  406e2d:	cmp    WORD PTR [rsi+0x58],0x8
  406e32:	mov    rbp,rsi
  406e35:	jne    4079d1 <__flatcc_fb_codegen_c@@Base+0xff1>
  406e3b:	mov    eax,DWORD PTR [rsi+0x48]
  406e3e:	cmp    eax,0x5
  406e41:	je     406e60 <__flatcc_fb_codegen_c@@Base+0x480>
  406e43:	cmp    eax,0xb
  406e46:	ja     407836 <__flatcc_fb_codegen_c@@Base+0xe56>
  406e4c:	lea    rdx,[rip+0x2defd]        # 434d50 <_IO_stdin_used@@Base+0x8d50>
  406e53:	movsxd rax,DWORD PTR [rdx+rax*4]
  406e57:	add    rax,rdx
  406e5a:	jmp    rax
  406e5c:	nop    DWORD PTR [rax+0x0]
  406e60:	lea    rax,[rip+0x2dc18]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  406e67:	mov    QWORD PTR [rsp+0x8],rbx
  406e6c:	mov    QWORD PTR [rsp+0x18],rax
  406e71:	cmp    WORD PTR [rsp+0x16],0x3
  406e77:	mov    eax,DWORD PTR [rbp+0xb8]
  406e7d:	mov    rdx,r14
  406e80:	mov    rdi,QWORD PTR [rbp+0x18]
  406e84:	mov    rsi,rbp
  406e87:	lea    r12d,[rax*8+0x0]
  406e8f:	je     407588 <__flatcc_fb_codegen_c@@Base+0xba8>
  406e95:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  406e9a:	mov    r13,QWORD PTR [rbp+0x40]
  406e9e:	test   r13,r13
  406ea1:	je     4078f1 <__flatcc_fb_codegen_c@@Base+0xf11>
  406ea7:	lea    r15,[rip+0x2dbe5]        # 434a93 <_IO_stdin_used@@Base+0x8a93>
  406eae:	mov    ecx,0x1
  406eb3:	xor    edx,edx
  406eb5:	jmp    406f0b <__flatcc_fb_codegen_c@@Base+0x52b>
  406eb7:	nop    WORD PTR [rax+rax*1+0x0]
  406ec0:	lea    rdx,[rip+0x2dc05]        # 434acc <_IO_stdin_used@@Base+0x8acc>
  406ec7:	mov    esi,0x1
  406ecc:	xor    eax,eax
  406ece:	call   4051f0 <__fprintf_chk@plt>
  406ed3:	mov    rax,QWORD PTR [r13+0x8]
  406ed7:	mov    rcx,QWORD PTR [rax+0x8]
  406edb:	mov    r8,QWORD PTR [rax]
  406ede:	lea    rdx,[rip+0x2ec34]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  406ee5:	mov    rdi,QWORD PTR [rbx+0xd0]
  406eec:	xor    eax,eax
  406eee:	mov    esi,0x1
  406ef3:	call   4051f0 <__fprintf_chk@plt>
  406ef8:	mov    rax,QWORD PTR [r13+0x8]
  406efc:	mov    r13,QWORD PTR [r13+0x0]
  406f00:	xor    ecx,ecx
  406f02:	test   r13,r13
  406f05:	mov    rdx,QWORD PTR [rax+0x10]
  406f09:	je     406f40 <__flatcc_fb_codegen_c@@Base+0x560>
  406f0b:	mov    rax,QWORD PTR [r13+0x8]
  406f0f:	cmp    QWORD PTR [rax+0x10],rdx
  406f13:	je     406ed7 <__flatcc_fb_codegen_c@@Base+0x4f7>
  406f15:	test   ecx,ecx
  406f17:	mov    rdi,QWORD PTR [rbx+0xd0]
  406f1e:	lea    rcx,[rip+0x3d1c9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  406f25:	jne    406ec0 <__flatcc_fb_codegen_c@@Base+0x4e0>
  406f27:	lea    rdx,[rip+0x2dba5]        # 434ad3 <_IO_stdin_used@@Base+0x8ad3>
  406f2e:	mov    esi,0x1
  406f33:	xor    eax,eax
  406f35:	call   4051f0 <__fprintf_chk@plt>
  406f3a:	mov    rax,QWORD PTR [r13+0x8]
  406f3e:	jmp    406ed7 <__flatcc_fb_codegen_c@@Base+0x4f7>
  406f40:	mov    rdi,QWORD PTR [rbx+0xd0]
  406f47:	lea    rdx,[rip+0x2ddd1]        # 434d1f <_IO_stdin_used@@Base+0x8d1f>
  406f4e:	mov    esi,0x1
  406f53:	xor    eax,eax
  406f55:	call   4051f0 <__fprintf_chk@plt>
  406f5a:	sub    rsp,0x8
  406f5e:	mov    rdi,QWORD PTR [rbx+0xd0]
  406f65:	lea    rdx,[rip+0x2db6e]        # 434ada <_IO_stdin_used@@Base+0x8ada>
  406f6c:	push   r15
  406f6e:	mov    r8,QWORD PTR [rsp+0x28]
  406f73:	mov    r9,r14
  406f76:	mov    rcx,QWORD PTR [rsp+0x18]
  406f7b:	mov    esi,0x1
  406f80:	xor    eax,eax
  406f82:	call   4051f0 <__fprintf_chk@plt>
  406f87:	mov    rdi,QWORD PTR [rbx+0xd0]
  406f8e:	push   r12
  406f90:	lea    rdx,[rip+0x265c1]        # 42d558 <_IO_stdin_used@@Base+0x1558>
  406f97:	push   r15
  406f99:	xor    eax,eax
  406f9b:	mov    r9,r14
  406f9e:	mov    r8,r14
  406fa1:	mov    rcx,rbx
  406fa4:	mov    esi,0x1
  406fa9:	call   4051f0 <__fprintf_chk@plt>
  406fae:	add    rsp,0x20
  406fb2:	cmp    WORD PTR [rsp+0x16],0x3
  406fb8:	je     4074a0 <__flatcc_fb_codegen_c@@Base+0xac0>
  406fbe:	mov    rdi,QWORD PTR [rbx+0xd0]
  406fc5:	lea    rdx,[rip+0x2db25]        # 434af1 <_IO_stdin_used@@Base+0x8af1>
  406fcc:	xor    eax,eax
  406fce:	mov    r9,r14
  406fd1:	mov    r8,rbx
  406fd4:	mov    rcx,rbx
  406fd7:	mov    esi,0x1
  406fdc:	call   4051f0 <__fprintf_chk@plt>
  406fe1:	mov    r12,QWORD PTR [rbp+0x28]
  406fe5:	test   r12,r12
  406fe8:	je     407955 <__flatcc_fb_codegen_c@@Base+0xf75>
  406fee:	lea    rax,[rsp+0x110]
  406ff6:	mov    QWORD PTR [rsp+0x18],r15
  406ffb:	mov    QWORD PTR [rsp+0x8],rax
  407000:	mov    r13,QWORD PTR [r12+0x68]
  407005:	test   r13,r13
  407008:	je     4070ba <__flatcc_fb_codegen_c@@Base+0x6da>
  40700e:	mov    ecx,0x1
  407013:	xor    edx,edx
  407015:	jmp    40706b <__flatcc_fb_codegen_c@@Base+0x68b>
  407017:	nop    WORD PTR [rax+rax*1+0x0]
  407020:	lea    rdx,[rip+0x2daa5]        # 434acc <_IO_stdin_used@@Base+0x8acc>
  407027:	mov    esi,0x1
  40702c:	xor    eax,eax
  40702e:	call   4051f0 <__fprintf_chk@plt>
  407033:	mov    rax,QWORD PTR [r13+0x8]
  407037:	mov    rcx,QWORD PTR [rax+0x8]
  40703b:	mov    r8,QWORD PTR [rax]
  40703e:	lea    rdx,[rip+0x2ead4]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  407045:	mov    rdi,QWORD PTR [rbx+0xd0]
  40704c:	xor    eax,eax
  40704e:	mov    esi,0x1
  407053:	call   4051f0 <__fprintf_chk@plt>
  407058:	mov    rax,QWORD PTR [r13+0x8]
  40705c:	mov    r13,QWORD PTR [r13+0x0]
  407060:	xor    ecx,ecx
  407062:	test   r13,r13
  407065:	mov    rdx,QWORD PTR [rax+0x10]
  407069:	je     4070a0 <__flatcc_fb_codegen_c@@Base+0x6c0>
  40706b:	mov    rax,QWORD PTR [r13+0x8]
  40706f:	cmp    QWORD PTR [rax+0x10],rdx
  407073:	je     407037 <__flatcc_fb_codegen_c@@Base+0x657>
  407075:	test   ecx,ecx
  407077:	mov    rdi,QWORD PTR [rbx+0xd0]
  40707e:	lea    rcx,[rip+0x3d069]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407085:	jne    407020 <__flatcc_fb_codegen_c@@Base+0x640>
  407087:	lea    rdx,[rip+0x2da45]        # 434ad3 <_IO_stdin_used@@Base+0x8ad3>
  40708e:	mov    esi,0x1
  407093:	xor    eax,eax
  407095:	call   4051f0 <__fprintf_chk@plt>
  40709a:	mov    rax,QWORD PTR [r13+0x8]
  40709e:	jmp    407037 <__flatcc_fb_codegen_c@@Base+0x657>
  4070a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4070a7:	lea    rdx,[rip+0x2dc71]        # 434d1f <_IO_stdin_used@@Base+0x8d1f>
  4070ae:	mov    esi,0x1
  4070b3:	xor    eax,eax
  4070b5:	call   4051f0 <__fprintf_chk@plt>
  4070ba:	movzx  edx,WORD PTR [r12+0x58]
  4070c0:	mov    rax,QWORD PTR [r12+0x8]
  4070c5:	mov    r15,QWORD PTR [rax]
  4070c8:	mov    r13,QWORD PTR [rax+0x8]
  4070cc:	cmp    dx,0x4
  4070d0:	mov    eax,DWORD PTR [rbp+0x48]
  4070d3:	je     4073a8 <__flatcc_fb_codegen_c@@Base+0x9c8>
  4070d9:	jbe    407110 <__flatcc_fb_codegen_c@@Base+0x730>
  4070db:	cmp    dx,0x5
  4070df:	je     407420 <__flatcc_fb_codegen_c@@Base+0xa40>
  4070e5:	cmp    dx,0x6
  4070e9:	jne    4073c8 <__flatcc_fb_codegen_c@@Base+0x9e8>
  4070ef:	cmp    eax,0x9
  4070f2:	ja     407886 <__flatcc_fb_codegen_c@@Base+0xea6>
  4070f8:	lea    rdx,[rip+0x2dc81]        # 434d80 <_IO_stdin_used@@Base+0x8d80>
  4070ff:	movsxd rax,DWORD PTR [rdx+rax*4]
  407103:	add    rax,rdx
  407106:	jmp    rax
  407108:	nop    DWORD PTR [rax+rax*1+0x0]
  407110:	cmp    dx,0x3
  407114:	jne    4073c8 <__flatcc_fb_codegen_c@@Base+0x9e8>
  40711a:	cmp    eax,0xb
  40711d:	je     4078d6 <__flatcc_fb_codegen_c@@Base+0xef6>
  407123:	vmovsd xmm0,QWORD PTR [r12+0x48]
  40712a:	lea    rcx,[rip+0x2d9f7]        # 434b28 <_IO_stdin_used@@Base+0x8b28>
  407131:	mov    rdi,QWORD PTR [rsp+0x8]
  407136:	mov    edx,0x64
  40713b:	mov    esi,0x1
  407140:	mov    eax,0x1
  407145:	call   405210 <__sprintf_chk@plt>
  40714a:	sub    rsp,0x8
  40714e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407155:	lea    rdx,[rip+0x2642c]        # 42d588 <_IO_stdin_used@@Base+0x1588>
  40715c:	push   QWORD PTR [rsp+0x10]
  407160:	push   QWORD PTR [rsp+0x28]
  407164:	xor    eax,eax
  407166:	push   r14
  407168:	mov    r9,r15
  40716b:	mov    r8d,r13d
  40716e:	mov    rcx,r14
  407171:	mov    esi,0x1
  407176:	call   4051f0 <__fprintf_chk@plt>
  40717b:	mov    r12,QWORD PTR [r12]
  40717f:	add    rsp,0x20
  407183:	test   r12,r12
  407186:	jne    407000 <__flatcc_fb_codegen_c@@Base+0x620>
  40718c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407193:	lea    rdx,[rip+0x3cf53]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40719a:	xor    eax,eax
  40719c:	mov    esi,0x1
  4071a1:	call   4051f0 <__fprintf_chk@plt>
  4071a6:	cmp    WORD PTR [rsp+0x16],0x3
  4071ac:	je     4074c7 <__flatcc_fb_codegen_c@@Base+0xae7>
  4071b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4071b9:	lea    rdx,[rip+0x263e8]        # 42d5a8 <_IO_stdin_used@@Base+0x15a8>
  4071c0:	mov    r8,r14
  4071c3:	mov    rcx,r14
  4071c6:	mov    esi,0x1
  4071cb:	xor    eax,eax
  4071cd:	call   4051f0 <__fprintf_chk@plt>
  4071d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4071d9:	lea    rdx,[rip+0x2d94c]        # 434b2c <_IO_stdin_used@@Base+0x8b2c>
  4071e0:	xor    eax,eax
  4071e2:	mov    esi,0x1
  4071e7:	call   4051f0 <__fprintf_chk@plt>
  4071ec:	mov    r12,QWORD PTR [rbp+0x28]
  4071f0:	test   r12,r12
  4071f3:	je     407998 <__flatcc_fb_codegen_c@@Base+0xfb8>
  4071f9:	lea    r13,[rip+0x26458]        # 42d658 <_IO_stdin_used@@Base+0x1658>
  407200:	jmp    40722d <__flatcc_fb_codegen_c@@Base+0x84d>
  407202:	nop    WORD PTR [rax+rax*1+0x0]
  407208:	push   r9
  40720a:	lea    rdx,[rip+0x2640f]        # 42d620 <_IO_stdin_used@@Base+0x1620>
  407211:	push   r8
  407213:	mov    rcx,r14
  407216:	mov    esi,0x1
  40721b:	xor    eax,eax
  40721d:	call   4051f0 <__fprintf_chk@plt>
  407222:	mov    r12,QWORD PTR [r12]
  407226:	pop    rcx
  407227:	pop    rsi
  407228:	test   r12,r12
  40722b:	je     407269 <__flatcc_fb_codegen_c@@Base+0x889>
  40722d:	test   BYTE PTR [r12+0x12],0x4
  407233:	mov    rax,QWORD PTR [r12+0x8]
  407238:	mov    rdi,QWORD PTR [rbx+0xd0]
  40723f:	mov    r9,QWORD PTR [rax]
  407242:	mov    r8,QWORD PTR [rax+0x8]
  407246:	jne    407208 <__flatcc_fb_codegen_c@@Base+0x828>
  407248:	push   r9
  40724a:	push   r8
  40724c:	mov    rdx,r13
  40724f:	xor    eax,eax
  407251:	mov    rcx,r14
  407254:	mov    esi,0x1
  407259:	call   4051f0 <__fprintf_chk@plt>
  40725e:	mov    r12,QWORD PTR [r12]
  407262:	pop    rax
  407263:	pop    rdx
  407264:	test   r12,r12
  407267:	jne    40722d <__flatcc_fb_codegen_c@@Base+0x84d>
  407269:	mov    rdi,QWORD PTR [rbx+0xd0]
  407270:	lea    rdx,[rip+0x26409]        # 42d680 <_IO_stdin_used@@Base+0x1680>
  407277:	mov    esi,0x1
  40727c:	xor    eax,eax
  40727e:	call   4051f0 <__fprintf_chk@plt>
  407283:	mov    rdi,QWORD PTR [rbx+0xd0]
  40728a:	lea    rdx,[rip+0x3ce5c]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  407291:	xor    eax,eax
  407293:	mov    esi,0x1
  407298:	call   4051f0 <__fprintf_chk@plt>
  40729d:	cmp    WORD PTR [rsp+0x16],0x3
  4072a3:	je     407542 <__flatcc_fb_codegen_c@@Base+0xb62>
  4072a9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4072b0:	lea    rdx,[rip+0x263f1]        # 42d6a8 <_IO_stdin_used@@Base+0x16a8>
  4072b7:	mov    esi,0x1
  4072bc:	mov    r8,r14
  4072bf:	mov    rcx,r14
  4072c2:	xor    eax,eax
  4072c4:	call   4051f0 <__fprintf_chk@plt>
  4072c9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4072d0:	lea    rdx,[rip+0x2d855]        # 434b2c <_IO_stdin_used@@Base+0x8b2c>
  4072d7:	mov    esi,0x1
  4072dc:	xor    eax,eax
  4072de:	call   4051f0 <__fprintf_chk@plt>
  4072e3:	mov    rbp,QWORD PTR [rbp+0x28]
  4072e7:	lea    r12,[rip+0x26452]        # 42d740 <_IO_stdin_used@@Base+0x1740>
  4072ee:	test   rbp,rbp
  4072f1:	jne    407310 <__flatcc_fb_codegen_c@@Base+0x930>
  4072f3:	jmp    407347 <__flatcc_fb_codegen_c@@Base+0x967>
  4072f5:	nop    DWORD PTR [rax]
  4072f8:	xor    eax,eax
  4072fa:	mov    rdx,r12
  4072fd:	mov    esi,0x1
  407302:	call   4051f0 <__fprintf_chk@plt>
  407307:	mov    rbp,QWORD PTR [rbp+0x0]
  40730b:	test   rbp,rbp
  40730e:	je     407347 <__flatcc_fb_codegen_c@@Base+0x967>
  407310:	test   BYTE PTR [rbp+0x12],0x4
  407314:	mov    rax,QWORD PTR [rbp+0x8]
  407318:	mov    rcx,r14
  40731b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407322:	mov    r9,QWORD PTR [rax]
  407325:	mov    r8,QWORD PTR [rax+0x8]
  407329:	jne    4072f8 <__flatcc_fb_codegen_c@@Base+0x918>
  40732b:	lea    rdx,[rip+0x2d825]        # 434b57 <_IO_stdin_used@@Base+0x8b57>
  407332:	xor    eax,eax
  407334:	mov    esi,0x1
  407339:	call   4051f0 <__fprintf_chk@plt>
  40733e:	mov    rbp,QWORD PTR [rbp+0x0]
  407342:	test   rbp,rbp
  407345:	jne    407310 <__flatcc_fb_codegen_c@@Base+0x930>
  407347:	mov    rdi,QWORD PTR [rbx+0xd0]
  40734e:	lea    rdx,[rip+0x263cb]        # 42d720 <_IO_stdin_used@@Base+0x1720>
  407355:	mov    esi,0x1
  40735a:	xor    eax,eax
  40735c:	call   4051f0 <__fprintf_chk@plt>
  407361:	mov    rdi,QWORD PTR [rbx+0xd0]
  407368:	lea    rdx,[rip+0x3cd7e]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40736f:	xor    eax,eax
  407371:	mov    esi,0x1
  407376:	call   4051f0 <__fprintf_chk@plt>
  40737b:	mov    rax,QWORD PTR [rsp+0x178]
  407383:	xor    rax,QWORD PTR fs:0x28
  40738c:	jne    407974 <__flatcc_fb_codegen_c@@Base+0xf94>
  407392:	add    rsp,0x188
  407399:	pop    rbx
  40739a:	pop    rbp
  40739b:	pop    r12
  40739d:	pop    r13
  40739f:	pop    r14
  4073a1:	pop    r15
  4073a3:	ret    
  4073a4:	nop    DWORD PTR [rax+0x0]
  4073a8:	cmp    eax,0x9
  4073ab:	ja     407886 <__flatcc_fb_codegen_c@@Base+0xea6>
  4073b1:	lea    rsi,[rip+0x2d9f0]        # 434da8 <_IO_stdin_used@@Base+0x8da8>
  4073b8:	movsxd rax,DWORD PTR [rsi+rax*4]
  4073bc:	add    rax,rsi
  4073bf:	jmp    rax
  4073c1:	nop    DWORD PTR [rax+0x0]
  4073c8:	mov    rax,QWORD PTR [rip+0x48c19]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4073cf:	lea    rcx,[rip+0x2611a]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4073d6:	lea    rdx,[rip+0x2d6e4]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4073dd:	lea    r9,[rip+0x260d4]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  4073e4:	mov    esi,0x1
  4073e9:	mov    r8d,0x104
  4073ef:	mov    rdi,QWORD PTR [rax]
  4073f2:	xor    eax,eax
  4073f4:	call   4051f0 <__fprintf_chk@plt>
  4073f9:	lea    rcx,[rip+0x2dc18]        # 435018 <_IO_stdin_used@@Base+0x9018>
  407400:	lea    rsi,[rip+0x260e9]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  407407:	lea    rdi,[rip+0x2e6fb]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40740e:	mov    edx,0x104
  407413:	call   4050f0 <__assert_fail@plt>
  407418:	nop    DWORD PTR [rax+rax*1+0x0]
  407420:	cmp    eax,0x9
  407423:	ja     407886 <__flatcc_fb_codegen_c@@Base+0xea6>
  407429:	lea    rdx,[rip+0x2d9a0]        # 434dd0 <_IO_stdin_used@@Base+0x8dd0>
  407430:	movsxd rax,DWORD PTR [rdx+rax*4]
  407434:	add    rax,rdx
  407437:	jmp    rax
  407439:	lea    r15,[rip+0x3fc48]        # 447088 <fb_schema_table_missing@@Base+0x2438>
  407440:	sub    rsp,0x8
  407444:	mov    rdi,QWORD PTR [rbx+0xd0]
  40744b:	lea    rdx,[rip+0x2d688]        # 434ada <_IO_stdin_used@@Base+0x8ada>
  407452:	mov    r9,r14
  407455:	mov    esi,0x1
  40745a:	push   r15
  40745c:	mov    r8,QWORD PTR [rsp+0x28]
  407461:	xor    eax,eax
  407463:	mov    rcx,QWORD PTR [rsp+0x18]
  407468:	call   4051f0 <__fprintf_chk@plt>
  40746d:	mov    rdi,QWORD PTR [rbx+0xd0]
  407474:	push   r12
  407476:	lea    rdx,[rip+0x260db]        # 42d558 <_IO_stdin_used@@Base+0x1558>
  40747d:	push   r15
  40747f:	mov    r9,r14
  407482:	mov    r8,r14
  407485:	mov    rcx,rbx
  407488:	mov    esi,0x1
  40748d:	xor    eax,eax
  40748f:	call   4051f0 <__fprintf_chk@plt>
  407494:	add    rsp,0x20
  407498:	nop    DWORD PTR [rax+rax*1+0x0]
  4074a0:	mov    r12,QWORD PTR [rbp+0x28]
  4074a4:	test   r12,r12
  4074a7:	jne    406fee <__flatcc_fb_codegen_c@@Base+0x60e>
  4074ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  4074b4:	lea    rdx,[rip+0x3cc32]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4074bb:	mov    esi,0x1
  4074c0:	xor    eax,eax
  4074c2:	call   4051f0 <__fprintf_chk@plt>
  4074c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4074ce:	lea    rdx,[rip+0x26113]        # 42d5e8 <_IO_stdin_used@@Base+0x15e8>
  4074d5:	mov    r8,r14
  4074d8:	mov    rcx,r14
  4074db:	mov    esi,0x1
  4074e0:	xor    eax,eax
  4074e2:	call   4051f0 <__fprintf_chk@plt>
  4074e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4074ee:	lea    rdx,[rip+0x2d64c]        # 434b41 <_IO_stdin_used@@Base+0x8b41>
  4074f5:	xor    eax,eax
  4074f7:	mov    esi,0x1
  4074fc:	call   4051f0 <__fprintf_chk@plt>
  407501:	mov    r12,QWORD PTR [rbp+0x28]
  407505:	test   r12,r12
  407508:	jne    4071f9 <__flatcc_fb_codegen_c@@Base+0x819>
  40750e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407515:	lea    rdx,[rip+0x26164]        # 42d680 <_IO_stdin_used@@Base+0x1680>
  40751c:	mov    esi,0x1
  407521:	xor    eax,eax
  407523:	call   4051f0 <__fprintf_chk@plt>
  407528:	mov    rdi,QWORD PTR [rbx+0xd0]
  40752f:	lea    rdx,[rip+0x3cbb7]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  407536:	mov    esi,0x1
  40753b:	xor    eax,eax
  40753d:	call   4051f0 <__fprintf_chk@plt>
  407542:	mov    rdi,QWORD PTR [rbx+0xd0]
  407549:	lea    rdx,[rip+0x26198]        # 42d6e8 <_IO_stdin_used@@Base+0x16e8>
  407550:	mov    r8,r14
  407553:	mov    rcx,r14
  407556:	mov    esi,0x1
  40755b:	xor    eax,eax
  40755d:	call   4051f0 <__fprintf_chk@plt>
  407562:	mov    rdi,QWORD PTR [rbx+0xd0]
  407569:	lea    rdx,[rip+0x2d5d1]        # 434b41 <_IO_stdin_used@@Base+0x8b41>
  407570:	mov    esi,0x1
  407575:	xor    eax,eax
  407577:	call   4051f0 <__fprintf_chk@plt>
  40757c:	jmp    4072e3 <__flatcc_fb_codegen_c@@Base+0x903>
  407581:	nop    DWORD PTR [rax+0x0]
  407588:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40758d:	mov    r13,QWORD PTR [rbp+0x40]
  407591:	test   r13,r13
  407594:	je     407439 <__flatcc_fb_codegen_c@@Base+0xa59>
  40759a:	lea    r15,[rip+0x3fae7]        # 447088 <fb_schema_table_missing@@Base+0x2438>
  4075a1:	jmp    406eae <__flatcc_fb_codegen_c@@Base+0x4ce>
  4075a6:	lea    r8,[rip+0x2d50c]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  4075ad:	movzx  r9d,BYTE PTR [r12+0x48]
  4075b3:	mov    rdi,QWORD PTR [rsp+0x8]
  4075b8:	lea    rcx,[rip+0x2d55e]        # 434b1d <_IO_stdin_used@@Base+0x8b1d>
  4075bf:	mov    edx,0x64
  4075c4:	mov    esi,0x1
  4075c9:	xor    eax,eax
  4075cb:	call   405210 <__sprintf_chk@plt>
  4075d0:	jmp    40714a <__flatcc_fb_codegen_c@@Base+0x76a>
  4075d5:	lea    r8,[rip+0x2d4dd]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  4075dc:	mov    r9,QWORD PTR [r12+0x48]
  4075e1:	lea    rcx,[rip+0x2d523]        # 434b0b <_IO_stdin_used@@Base+0x8b0b>
  4075e8:	mov    rdi,QWORD PTR [rsp+0x8]
  4075ed:	mov    edx,0x64
  4075f2:	mov    esi,0x1
  4075f7:	xor    eax,eax
  4075f9:	call   405210 <__sprintf_chk@plt>
  4075fe:	jmp    40714a <__flatcc_fb_codegen_c@@Base+0x76a>
  407603:	lea    r8,[rip+0x2d4af]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40760a:	mov    r9,QWORD PTR [r12+0x48]
  40760f:	lea    rcx,[rip+0x2d4fe]        # 434b14 <_IO_stdin_used@@Base+0x8b14>
  407616:	jmp    4075e8 <__flatcc_fb_codegen_c@@Base+0xc08>
  407618:	lea    rax,[rip+0x3cacf]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40761f:	mov    QWORD PTR [rsp+0x8],rax
  407624:	lea    rax,[rip+0x2d43b]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  40762b:	mov    QWORD PTR [rsp+0x18],rax
  407630:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  407635:	lea    rax,[rip+0x3cab2]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40763c:	mov    QWORD PTR [rsp+0x8],rax
  407641:	lea    rax,[rip+0x2d427]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  407648:	mov    QWORD PTR [rsp+0x18],rax
  40764d:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  407652:	lea    rax,[rip+0x3ca95]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407659:	mov    QWORD PTR [rsp+0x8],rax
  40765e:	lea    rax,[rip+0x2d413]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  407665:	mov    QWORD PTR [rsp+0x18],rax
  40766a:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  40766f:	lea    rax,[rip+0x3ca78]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407676:	mov    QWORD PTR [rsp+0x8],rax
  40767b:	lea    rax,[rip+0x2d40a]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  407682:	mov    QWORD PTR [rsp+0x18],rax
  407687:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  40768c:	lea    rax,[rip+0x3ca5b]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407693:	mov    QWORD PTR [rsp+0x8],rax
  407698:	lea    rax,[rip+0x2d3d8]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  40769f:	mov    QWORD PTR [rsp+0x18],rax
  4076a4:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  4076a9:	lea    rax,[rip+0x3ca3e]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4076b0:	mov    QWORD PTR [rsp+0x8],rax
  4076b5:	lea    rax,[rip+0x2d3ca]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  4076bc:	mov    QWORD PTR [rsp+0x18],rax
  4076c1:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  4076c6:	lea    rax,[rip+0x3ca21]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4076cd:	mov    QWORD PTR [rsp+0x8],rax
  4076d2:	lea    rax,[rip+0x2d384]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  4076d9:	mov    QWORD PTR [rsp+0x18],rax
  4076de:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  4076e3:	lea    rax,[rip+0x3ca04]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4076ea:	mov    QWORD PTR [rsp+0x8],rax
  4076ef:	lea    rax,[rip+0x2d36f]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  4076f6:	mov    QWORD PTR [rsp+0x18],rax
  4076fb:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  407700:	lea    rax,[rip+0x3c9e7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407707:	mov    QWORD PTR [rsp+0x8],rax
  40770c:	lea    rax,[rip+0x2d349]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  407713:	mov    QWORD PTR [rsp+0x18],rax
  407718:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  40771d:	lea    rax,[rip+0x3c9ca]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407724:	mov    QWORD PTR [rsp+0x8],rax
  407729:	lea    rax,[rip+0x2d33e]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  407730:	mov    QWORD PTR [rsp+0x18],rax
  407735:	jmp    406e71 <__flatcc_fb_codegen_c@@Base+0x491>
  40773a:	lea    r8,[rip+0x2d366]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  407741:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  407746:	lea    r8,[rip+0x2d35a]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40774d:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  407752:	lea    r8,[rip+0x2d34e]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  407759:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  40775e:	lea    r8,[rip+0x2d355]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  407765:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  40776a:	lea    r8,[rip+0x2d33f]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  407771:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  407776:	lea    r8,[rip+0x2d321]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40777d:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  407782:	lea    r8,[rip+0x2d316]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  407789:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  40778e:	lea    r8,[rip+0x2d325]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  407795:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  40779a:	lea    r8,[rip+0x2d30f]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  4077a1:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  4077a6:	lea    r8,[rip+0x2d2f1]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  4077ad:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  4077b2:	lea    r8,[rip+0x2d2e5]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  4077b9:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  4077be:	lea    r8,[rip+0x2d2f5]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  4077c5:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  4077ca:	lea    r8,[rip+0x2d2df]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  4077d1:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  4077d6:	lea    r8,[rip+0x2d2d4]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  4077dd:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  4077e2:	lea    r8,[rip+0x2d2bf]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  4077e9:	jmp    4075ad <__flatcc_fb_codegen_c@@Base+0xbcd>
  4077ee:	lea    r8,[rip+0x2d2bc]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  4077f5:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  4077fa:	lea    r8,[rip+0x2d2a7]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  407801:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  407806:	lea    r8,[rip+0x2d292]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40780d:	jmp    4075dc <__flatcc_fb_codegen_c@@Base+0xbfc>
  407812:	lea    r8,[rip+0x2d286]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  407819:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  40781e:	lea    r8,[rip+0x2d28c]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  407825:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  40782a:	lea    r8,[rip+0x2d277]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  407831:	jmp    40760a <__flatcc_fb_codegen_c@@Base+0xc2a>
  407836:	mov    rax,QWORD PTR [rip+0x487ab]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40783d:	lea    rcx,[rip+0x25cac]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  407844:	lea    rdx,[rip+0x2d276]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40784b:	lea    r9,[rip+0x25c66]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  407852:	mov    esi,0x1
  407857:	mov    r8d,0x8d
  40785d:	mov    rdi,QWORD PTR [rax]
  407860:	xor    eax,eax
  407862:	call   4051f0 <__fprintf_chk@plt>
  407867:	lea    rcx,[rip+0x2d7f2]        # 435060 <_IO_stdin_used@@Base+0x9060>
  40786e:	lea    rsi,[rip+0x25c7b]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  407875:	lea    rdi,[rip+0x2e28d]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40787c:	mov    edx,0x8d
  407881:	call   4050f0 <__assert_fail@plt>
  407886:	mov    rax,QWORD PTR [rip+0x4875b]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40788d:	lea    rcx,[rip+0x25c5c]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  407894:	lea    rdx,[rip+0x2d226]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40789b:	lea    r9,[rip+0x25c16]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  4078a2:	mov    esi,0x1
  4078a7:	mov    r8d,0xe2
  4078ad:	mov    rdi,QWORD PTR [rax]
  4078b0:	xor    eax,eax
  4078b2:	call   4051f0 <__fprintf_chk@plt>
  4078b7:	lea    rcx,[rip+0x2d74a]        # 435008 <_IO_stdin_used@@Base+0x9008>
  4078be:	lea    rsi,[rip+0x25c2b]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4078c5:	lea    rdi,[rip+0x2e23d]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4078cc:	mov    edx,0xe2
  4078d1:	call   4050f0 <__assert_fail@plt>
  4078d6:	vxorps xmm0,xmm0,xmm0
  4078da:	lea    rcx,[rip+0x2d243]        # 434b24 <_IO_stdin_used@@Base+0x8b24>
  4078e1:	vcvtsd2ss xmm0,xmm0,QWORD PTR [r12+0x48]
  4078e8:	vcvtss2sd xmm0,xmm0,xmm0
  4078ec:	jmp    407131 <__flatcc_fb_codegen_c@@Base+0x751>
  4078f1:	lea    r15,[rip+0x2d19b]        # 434a93 <_IO_stdin_used@@Base+0x8a93>
  4078f8:	sub    rsp,0x8
  4078fc:	mov    rdi,QWORD PTR [rbx+0xd0]
  407903:	lea    rdx,[rip+0x2d1d0]        # 434ada <_IO_stdin_used@@Base+0x8ada>
  40790a:	mov    r9,r14
  40790d:	mov    esi,0x1
  407912:	push   r15
  407914:	mov    r8,QWORD PTR [rsp+0x28]
  407919:	xor    eax,eax
  40791b:	mov    rcx,QWORD PTR [rsp+0x18]
  407920:	call   4051f0 <__fprintf_chk@plt>
  407925:	mov    rdi,QWORD PTR [rbx+0xd0]
  40792c:	push   r12
  40792e:	lea    rdx,[rip+0x25c23]        # 42d558 <_IO_stdin_used@@Base+0x1558>
  407935:	push   r15
  407937:	mov    r9,r14
  40793a:	mov    r8,r14
  40793d:	mov    rcx,rbx
  407940:	mov    esi,0x1
  407945:	xor    eax,eax
  407947:	call   4051f0 <__fprintf_chk@plt>
  40794c:	add    rsp,0x20
  407950:	jmp    406fbe <__flatcc_fb_codegen_c@@Base+0x5de>
  407955:	mov    rdi,QWORD PTR [rbx+0xd0]
  40795c:	lea    rdx,[rip+0x3c78a]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  407963:	mov    esi,0x1
  407968:	xor    eax,eax
  40796a:	call   4051f0 <__fprintf_chk@plt>
  40796f:	jmp    4071b2 <__flatcc_fb_codegen_c@@Base+0x7d2>
  407974:	call   4050d0 <__stack_chk_fail@plt>
  407979:	lea    rcx,[rip+0x2d6a8]        # 435028 <_IO_stdin_used@@Base+0x9028>
  407980:	lea    rsi,[rip+0x258d9]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  407987:	lea    rdi,[rip+0x25aca]        # 42d458 <_IO_stdin_used@@Base+0x1458>
  40798e:	mov    edx,0x4b4
  407993:	call   4050f0 <__assert_fail@plt>
  407998:	mov    rdi,QWORD PTR [rbx+0xd0]
  40799f:	lea    rdx,[rip+0x25cda]        # 42d680 <_IO_stdin_used@@Base+0x1680>
  4079a6:	mov    esi,0x1
  4079ab:	xor    eax,eax
  4079ad:	call   4051f0 <__fprintf_chk@plt>
  4079b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4079b9:	lea    rdx,[rip+0x3c72d]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4079c0:	mov    esi,0x1
  4079c5:	xor    eax,eax
  4079c7:	call   4051f0 <__fprintf_chk@plt>
  4079cc:	jmp    4072a9 <__flatcc_fb_codegen_c@@Base+0x8c9>
  4079d1:	lea    rcx,[rip+0x2d650]        # 435028 <_IO_stdin_used@@Base+0x9028>
  4079d8:	lea    rsi,[rip+0x25881]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  4079df:	lea    rdi,[rip+0x25ab2]        # 42d498 <_IO_stdin_used@@Base+0x1498>
  4079e6:	mov    edx,0x4b5
  4079eb:	call   4050f0 <__assert_fail@plt>
  4079f0:	push   r15
  4079f2:	push   r14
  4079f4:	mov    ecx,0x1d
  4079f9:	push   r13
  4079fb:	push   r12
  4079fd:	push   rbp
  4079fe:	push   rbx
  4079ff:	mov    rbx,rdi
  407a02:	sub    rsp,0x218
  407a09:	mov    rax,QWORD PTR fs:0x28
  407a12:	mov    QWORD PTR [rsp+0x208],rax
  407a1a:	xor    eax,eax
  407a1c:	mov    rax,QWORD PTR [rdi+0xe0]
  407a23:	lea    r14,[rsp+0x30]
  407a28:	mov    rdi,r14
  407a2b:	mov    eax,DWORD PTR [rax+0xa4]
  407a31:	mov    DWORD PTR [rsp+0xc],eax
  407a35:	xor    eax,eax
  407a37:	cmp    WORD PTR [rsi+0x10],0x1
  407a3c:	rep stos QWORD PTR es:[rdi],rax
  407a3f:	lea    rdi,[rsp+0x120]
  407a47:	mov    ecx,0x1d
  407a4c:	mov    QWORD PTR [rsp+0x10],rdi
  407a51:	rep stos QWORD PTR es:[rdi],rax
  407a54:	jne    40889a <__flatcc_fb_codegen_c@@Base+0x1eba>
  407a5a:	cmp    WORD PTR [rsi+0xb0],0x0
  407a62:	mov    r15,rsi
  407a65:	jne    407f60 <__flatcc_fb_codegen_c@@Base+0x1580>
  407a6b:	cmp    QWORD PTR [rsi+0xa8],0x0
  407a73:	jne    4088be <__flatcc_fb_codegen_c@@Base+0x1ede>
  407a79:	mov    rdi,QWORD PTR [r15+0x18]
  407a7d:	mov    rdx,r14
  407a80:	mov    rsi,r15
  407a83:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  407a88:	mov    rbp,QWORD PTR [r15+0x40]
  407a8c:	test   rbp,rbp
  407a8f:	je     407b3a <__flatcc_fb_codegen_c@@Base+0x115a>
  407a95:	mov    ecx,0x1
  407a9a:	xor    edx,edx
  407a9c:	jmp    407aeb <__flatcc_fb_codegen_c@@Base+0x110b>
  407a9e:	xchg   ax,ax
  407aa0:	lea    rdx,[rip+0x2d025]        # 434acc <_IO_stdin_used@@Base+0x8acc>
  407aa7:	mov    esi,0x1
  407aac:	xor    eax,eax
  407aae:	call   4051f0 <__fprintf_chk@plt>
  407ab3:	mov    rax,QWORD PTR [rbp+0x8]
  407ab7:	mov    rcx,QWORD PTR [rax+0x8]
  407abb:	mov    r8,QWORD PTR [rax]
  407abe:	lea    rdx,[rip+0x2e054]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  407ac5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407acc:	xor    eax,eax
  407ace:	mov    esi,0x1
  407ad3:	call   4051f0 <__fprintf_chk@plt>
  407ad8:	mov    rax,QWORD PTR [rbp+0x8]
  407adc:	mov    rbp,QWORD PTR [rbp+0x0]
  407ae0:	xor    ecx,ecx
  407ae2:	test   rbp,rbp
  407ae5:	mov    rdx,QWORD PTR [rax+0x10]
  407ae9:	je     407b20 <__flatcc_fb_codegen_c@@Base+0x1140>
  407aeb:	mov    rax,QWORD PTR [rbp+0x8]
  407aef:	cmp    QWORD PTR [rax+0x10],rdx
  407af3:	je     407ab7 <__flatcc_fb_codegen_c@@Base+0x10d7>
  407af5:	test   ecx,ecx
  407af7:	mov    rdi,QWORD PTR [rbx+0xd0]
  407afe:	lea    rcx,[rip+0x3c5e9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407b05:	jne    407aa0 <__flatcc_fb_codegen_c@@Base+0x10c0>
  407b07:	lea    rdx,[rip+0x2cfc5]        # 434ad3 <_IO_stdin_used@@Base+0x8ad3>
  407b0e:	mov    esi,0x1
  407b13:	xor    eax,eax
  407b15:	call   4051f0 <__fprintf_chk@plt>
  407b1a:	mov    rax,QWORD PTR [rbp+0x8]
  407b1e:	jmp    407ab7 <__flatcc_fb_codegen_c@@Base+0x10d7>
  407b20:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b27:	lea    rdx,[rip+0x2d1f1]        # 434d1f <_IO_stdin_used@@Base+0x8d1f>
  407b2e:	mov    esi,0x1
  407b33:	xor    eax,eax
  407b35:	call   4051f0 <__fprintf_chk@plt>
  407b3a:	cmp    QWORD PTR [r15+0xb8],0x0
  407b42:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b49:	je     407fee <__flatcc_fb_codegen_c@@Base+0x160e>
  407b4f:	mov    eax,DWORD PTR [rsp+0xc]
  407b53:	test   eax,eax
  407b55:	jne    408295 <__flatcc_fb_codegen_c@@Base+0x18b5>
  407b5b:	lea    rdx,[rip+0x2d049]        # 434bab <_IO_stdin_used@@Base+0x8bab>
  407b62:	xor    eax,eax
  407b64:	mov    rcx,r14
  407b67:	mov    esi,0x1
  407b6c:	call   4051f0 <__fprintf_chk@plt>
  407b71:	mov    rbp,QWORD PTR [r15+0x28]
  407b75:	test   rbp,rbp
  407b78:	je     407d0a <__flatcc_fb_codegen_c@@Base+0x132a>
  407b7e:	mov    DWORD PTR [rsp+0x20],0x0
  407b86:	mov    DWORD PTR [rsp+0x24],0x0
  407b8e:	xor    r12d,r12d
  407b91:	mov    QWORD PTR [rsp+0x18],r15
  407b96:	mov    QWORD PTR [rsp+0x28],r14
  407b9b:	mov    r13,QWORD PTR [rbp+0x68]
  407b9f:	test   r13,r13
  407ba2:	je     407c5a <__flatcc_fb_codegen_c@@Base+0x127a>
  407ba8:	mov    ecx,0x1
  407bad:	xor    edx,edx
  407baf:	jmp    407c03 <__flatcc_fb_codegen_c@@Base+0x1223>
  407bb1:	nop    DWORD PTR [rax+0x0]
  407bb8:	lea    rdx,[rip+0x2cf0d]        # 434acc <_IO_stdin_used@@Base+0x8acc>
  407bbf:	mov    esi,0x1
  407bc4:	xor    eax,eax
  407bc6:	call   4051f0 <__fprintf_chk@plt>
  407bcb:	mov    rax,QWORD PTR [r13+0x8]
  407bcf:	mov    rcx,QWORD PTR [rax+0x8]
  407bd3:	mov    r8,QWORD PTR [rax]
  407bd6:	lea    rdx,[rip+0x2df3c]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  407bdd:	mov    rdi,QWORD PTR [rbx+0xd0]
  407be4:	xor    eax,eax
  407be6:	mov    esi,0x1
  407beb:	call   4051f0 <__fprintf_chk@plt>
  407bf0:	mov    rax,QWORD PTR [r13+0x8]
  407bf4:	mov    r13,QWORD PTR [r13+0x0]
  407bf8:	xor    ecx,ecx
  407bfa:	test   r13,r13
  407bfd:	mov    rdx,QWORD PTR [rax+0x10]
  407c01:	je     407c40 <__flatcc_fb_codegen_c@@Base+0x1260>
  407c03:	mov    rax,QWORD PTR [r13+0x8]
  407c07:	cmp    QWORD PTR [rax+0x10],rdx
  407c0b:	je     407bcf <__flatcc_fb_codegen_c@@Base+0x11ef>
  407c0d:	test   ecx,ecx
  407c0f:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c16:	lea    rcx,[rip+0x3c511]        # 44412e <_IO_stdin_used@@Base+0x1812e>
  407c1d:	jne    407bb8 <__flatcc_fb_codegen_c@@Base+0x11d8>
  407c1f:	lea    rdx,[rip+0x2cead]        # 434ad3 <_IO_stdin_used@@Base+0x8ad3>
  407c26:	mov    esi,0x1
  407c2b:	xor    eax,eax
  407c2d:	call   4051f0 <__fprintf_chk@plt>
  407c32:	mov    rax,QWORD PTR [r13+0x8]
  407c36:	jmp    407bcf <__flatcc_fb_codegen_c@@Base+0x11ef>
  407c38:	nop    DWORD PTR [rax+rax*1+0x0]
  407c40:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c47:	lea    rdx,[rip+0x2d0d1]        # 434d1f <_IO_stdin_used@@Base+0x8d1f>
  407c4e:	mov    esi,0x1
  407c53:	xor    eax,eax
  407c55:	call   4051f0 <__fprintf_chk@plt>
  407c5a:	mov    rax,QWORD PTR [rbp+0x8]
  407c5e:	test   r12,r12
  407c61:	mov    r13,QWORD PTR [rax]
  407c64:	mov    r14,QWORD PTR [rax+0x8]
  407c68:	jne    407eb0 <__flatcc_fb_codegen_c@@Base+0x14d0>
  407c6e:	mov    rax,QWORD PTR [rsp+0x18]
  407c73:	movzx  r15d,WORD PTR [rax+0xb0]
  407c7b:	mov    eax,DWORD PTR [rsp+0xc]
  407c7f:	test   eax,eax
  407c81:	je     407e70 <__flatcc_fb_codegen_c@@Base+0x1490>
  407c87:	mov    r8d,DWORD PTR [rbp+0x78]
  407c8b:	sub    r8d,r12d
  407c8e:	jne    407fc0 <__flatcc_fb_codegen_c@@Base+0x15e0>
  407c94:	test   BYTE PTR [rbp+0x70],0x4
  407c98:	je     407dc0 <__flatcc_fb_codegen_c@@Base+0x13e0>
  407c9e:	mov    eax,DWORD PTR [rsp+0x20]
  407ca2:	mov    rdi,QWORD PTR [rbx+0xd0]
  407ca9:	sub    rsp,0x8
  407cad:	mov    r8d,DWORD PTR [rbp+0x80]
  407cb4:	push   r13
  407cb6:	lea    rdx,[rip+0x2614b]        # 42de08 <_IO_stdin_used@@Base+0x1e08>
  407cbd:	mov    r9d,r14d
  407cc0:	lea    r12d,[rax+0x1]
  407cc4:	mov    ecx,eax
  407cc6:	mov    esi,0x1
  407ccb:	xor    eax,eax
  407ccd:	call   4051f0 <__fprintf_chk@plt>
  407cd2:	pop    rdi
  407cd3:	pop    r8
  407cd5:	mov    DWORD PTR [rsp+0x20],r12d
  407cda:	mov    r12,QWORD PTR [rbp+0x80]
  407ce1:	add    r12d,DWORD PTR [rbp+0x78]
  407ce5:	mov    rbp,QWORD PTR [rbp+0x0]
  407ce9:	test   rbp,rbp
  407cec:	jne    407b9b <__flatcc_fb_codegen_c@@Base+0x11bb>
  407cf2:	mov    r13d,DWORD PTR [rsp+0xc]
  407cf7:	mov    r15,QWORD PTR [rsp+0x18]
  407cfc:	mov    r14,QWORD PTR [rsp+0x28]
  407d01:	test   r13d,r13d
  407d04:	jne    4082dd <__flatcc_fb_codegen_c@@Base+0x18fd>
  407d0a:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d11:	lea    rdx,[rip+0x2de4d]        # 435b65 <_IO_stdin_used@@Base+0x9b65>
  407d18:	mov    esi,0x1
  407d1d:	xor    eax,eax
  407d1f:	call   4051f0 <__fprintf_chk@plt>
  407d24:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d2b:	mov    r8,QWORD PTR [r15+0xb8]
  407d32:	lea    rdx,[rip+0x25c6f]        # 42d9a8 <_IO_stdin_used@@Base+0x19a8>
  407d39:	mov    rcx,r14
  407d3c:	mov    esi,0x1
  407d41:	xor    eax,eax
  407d43:	call   4051f0 <__fprintf_chk@plt>
  407d48:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d4f:	lea    rdx,[rip+0x25c92]        # 42d9e8 <_IO_stdin_used@@Base+0x19e8>
  407d56:	mov    r9,r14
  407d59:	mov    r8,r14
  407d5c:	mov    rcx,r14
  407d5f:	mov    esi,0x1
  407d64:	xor    eax,eax
  407d66:	call   4051f0 <__fprintf_chk@plt>
  407d6b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d72:	lea    rdx,[rip+0x25cc7]        # 42da40 <_IO_stdin_used@@Base+0x1a40>
  407d79:	mov    r9,r14
  407d7c:	mov    r8,r14
  407d7f:	mov    rcx,r14
  407d82:	mov    esi,0x1
  407d87:	xor    eax,eax
  407d89:	call   4051f0 <__fprintf_chk@plt>
  407d8e:	sub    rsp,0x8
  407d92:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d99:	lea    rdx,[rip+0x25ce8]        # 42da88 <_IO_stdin_used@@Base+0x1a88>
  407da0:	push   rbx
  407da1:	mov    r9,r14
  407da4:	mov    r8,r14
  407da7:	mov    rcx,r14
  407daa:	mov    esi,0x1
  407daf:	xor    eax,eax
  407db1:	call   4051f0 <__fprintf_chk@plt>
  407db6:	pop    rbp
  407db7:	pop    r12
  407db9:	jmp    40806d <__flatcc_fb_codegen_c@@Base+0x168d>
  407dbe:	xchg   ax,ax
  407dc0:	movzx  eax,WORD PTR [rbp+0x28]
  407dc4:	cmp    ax,0x8
  407dc8:	je     407f38 <__flatcc_fb_codegen_c@@Base+0x1558>
  407dce:	cmp    ax,0xe
  407dd2:	jne    407ec0 <__flatcc_fb_codegen_c@@Base+0x14e0>
  407dd8:	mov    rsi,QWORD PTR [rbp+0x18]
  407ddc:	movzx  eax,WORD PTR [rsi+0x10]
  407de0:	mov    edx,eax
  407de2:	and    edx,0xfffffffd
  407de5:	cmp    dx,0x1
  407de9:	jne    4088dd <__flatcc_fb_codegen_c@@Base+0x1efd>
  407def:	mov    rdi,QWORD PTR [rsi+0x18]
  407df3:	mov    rdx,QWORD PTR [rsp+0x10]
  407df8:	cmp    ax,0x1
  407dfc:	lea    r12,[rip+0x2cd71]        # 434b74 <_IO_stdin_used@@Base+0x8b74>
  407e03:	lea    rax,[rip+0x3c2e4]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  407e0a:	cmove  r12,rax
  407e0e:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  407e13:	mov    eax,DWORD PTR [rsp+0xc]
  407e17:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e1e:	test   eax,eax
  407e20:	jne    407fa0 <__flatcc_fb_codegen_c@@Base+0x15c0>
  407e26:	mov    r8,QWORD PTR [rsp+0x10]
  407e2b:	lea    rdx,[rip+0x2cdd0]        # 434c02 <_IO_stdin_used@@Base+0x8c02>
  407e32:	mov    r9,r12
  407e35:	mov    ecx,r15d
  407e38:	mov    esi,0x1
  407e3d:	xor    eax,eax
  407e3f:	call   4051f0 <__fprintf_chk@plt>
  407e44:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e4b:	lea    rdx,[rip+0x2cdd0]        # 434c22 <_IO_stdin_used@@Base+0x8c22>
  407e52:	mov    r8,r13
  407e55:	mov    ecx,r14d
  407e58:	mov    esi,0x1
  407e5d:	xor    eax,eax
  407e5f:	call   4051f0 <__fprintf_chk@plt>
  407e64:	jmp    407cda <__flatcc_fb_codegen_c@@Base+0x12fa>
  407e69:	nop    DWORD PTR [rax+0x0]
  407e70:	test   BYTE PTR [rbp+0x70],0x4
  407e74:	je     407dc0 <__flatcc_fb_codegen_c@@Base+0x13e0>
  407e7a:	mov    eax,DWORD PTR [rsp+0x20]
  407e7e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e85:	mov    ecx,r15d
  407e88:	push   r13
  407e8a:	mov    r9d,DWORD PTR [rbp+0x80]
  407e91:	lea    rdx,[rip+0x25fa8]        # 42de40 <_IO_stdin_used@@Base+0x1e40>
  407e98:	push   r14
  407e9a:	lea    r12d,[rax+0x1]
  407e9e:	mov    r8d,eax
  407ea1:	jmp    407cc6 <__flatcc_fb_codegen_c@@Base+0x12e6>
  407ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407eb0:	movzx  r15d,WORD PTR [rbp+0x72]
  407eb5:	jmp    407c7b <__flatcc_fb_codegen_c@@Base+0x129b>
  407eba:	nop    WORD PTR [rax+rax*1+0x0]
  407ec0:	mov    rdi,QWORD PTR [rbx+0xd0]
  407ec7:	lea    rcx,[rip+0x25aba]        # 42d988 <_IO_stdin_used@@Base+0x1988>
  407ece:	lea    rdx,[rip+0x2cd45]        # 434c1a <_IO_stdin_used@@Base+0x8c1a>
  407ed5:	mov    esi,0x1
  407eda:	xor    eax,eax
  407edc:	call   4051f0 <__fprintf_chk@plt>
  407ee1:	mov    rax,QWORD PTR [rip+0x48100]        # 44ffe8 <stderr@GLIBC_2.2.5>
  407ee8:	lea    rcx,[rip+0x25371]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  407eef:	lea    rdx,[rip+0x2cbcb]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  407ef6:	lea    r9,[rip+0x255bb]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  407efd:	mov    esi,0x1
  407f02:	mov    r8d,0x405
  407f08:	mov    rdi,QWORD PTR [rax]
  407f0b:	xor    eax,eax
  407f0d:	call   4051f0 <__fprintf_chk@plt>
  407f12:	lea    rcx,[rip+0x2d15f]        # 435078 <_IO_stdin_used@@Base+0x9078>
  407f19:	lea    rsi,[rip+0x25340]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  407f20:	lea    rdi,[rip+0x2dbe2]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  407f27:	mov    edx,0x405
  407f2c:	call   4050f0 <__assert_fail@plt>
  407f31:	nop    DWORD PTR [rax+0x0]
  407f38:	mov    eax,DWORD PTR [rbp+0x18]
  407f3b:	cmp    eax,0x5
  407f3e:	je     408326 <__flatcc_fb_codegen_c@@Base+0x1946>
  407f44:	cmp    eax,0xb
  407f47:	ja     4083d1 <__flatcc_fb_codegen_c@@Base+0x19f1>
  407f4d:	lea    rsi,[rip+0x2cea4]        # 434df8 <_IO_stdin_used@@Base+0x8df8>
  407f54:	movsxd rax,DWORD PTR [rsi+rax*4]
  407f58:	add    rax,rsi
  407f5b:	jmp    rax
  407f5d:	nop    DWORD PTR [rax]
  407f60:	cmp    QWORD PTR [rsi+0xb8],0x0
  407f68:	jne    407a79 <__flatcc_fb_codegen_c@@Base+0x1099>
  407f6e:	cmp    QWORD PTR [rsi+0xa8],0x0
  407f76:	je     407a79 <__flatcc_fb_codegen_c@@Base+0x1099>
  407f7c:	lea    rcx,[rip+0x2d0f5]        # 435078 <_IO_stdin_used@@Base+0x9078>
  407f83:	lea    rsi,[rip+0x252d6]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  407f8a:	lea    rdi,[rip+0x2581f]        # 42d7b0 <_IO_stdin_used@@Base+0x17b0>
  407f91:	mov    edx,0x3aa
  407f96:	call   4050f0 <__assert_fail@plt>
  407f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  407fa0:	mov    rcx,QWORD PTR [rsp+0x10]
  407fa5:	lea    rdx,[rip+0x2cc4a]        # 434bf6 <_IO_stdin_used@@Base+0x8bf6>
  407fac:	mov    r8,r12
  407faf:	mov    esi,0x1
  407fb4:	xor    eax,eax
  407fb6:	call   4051f0 <__fprintf_chk@plt>
  407fbb:	jmp    407e44 <__flatcc_fb_codegen_c@@Base+0x1464>
  407fc0:	mov    eax,DWORD PTR [rsp+0x24]
  407fc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fcb:	lea    rdx,[rip+0x2cbe6]        # 434bb8 <_IO_stdin_used@@Base+0x8bb8>
  407fd2:	mov    esi,0x1
  407fd7:	lea    r12d,[rax+0x1]
  407fdb:	mov    ecx,eax
  407fdd:	xor    eax,eax
  407fdf:	call   4051f0 <__fprintf_chk@plt>
  407fe4:	mov    DWORD PTR [rsp+0x24],r12d
  407fe9:	jmp    407c94 <__flatcc_fb_codegen_c@@Base+0x12b4>
  407fee:	lea    rdx,[rip+0x257db]        # 42d7d0 <_IO_stdin_used@@Base+0x17d0>
  407ff5:	mov    rcx,r14
  407ff8:	mov    esi,0x1
  407ffd:	xor    eax,eax
  407fff:	call   4051f0 <__fprintf_chk@plt>
  408004:	mov    rdi,QWORD PTR [rbx+0xd0]
  40800b:	lea    rdx,[rip+0x25826]        # 42d838 <_IO_stdin_used@@Base+0x1838>
  408012:	mov    r9,r14
  408015:	mov    r8,r14
  408018:	mov    rcx,r14
  40801b:	mov    esi,0x1
  408020:	xor    eax,eax
  408022:	call   4051f0 <__fprintf_chk@plt>
  408027:	mov    rdi,QWORD PTR [rbx+0xd0]
  40802e:	lea    rdx,[rip+0x2585b]        # 42d890 <_IO_stdin_used@@Base+0x1890>
  408035:	mov    r9,r14
  408038:	mov    r8,r14
  40803b:	mov    rcx,r14
  40803e:	mov    esi,0x1
  408043:	xor    eax,eax
  408045:	call   4051f0 <__fprintf_chk@plt>
  40804a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408051:	lea    rdx,[rip+0x25880]        # 42d8d8 <_IO_stdin_used@@Base+0x18d8>
  408058:	mov    r9,r14
  40805b:	mov    r8,r14
  40805e:	mov    rcx,r14
  408061:	mov    esi,0x1
  408066:	xor    eax,eax
  408068:	call   4051f0 <__fprintf_chk@plt>
  40806d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408074:	mov    r8,QWORD PTR [r15+0xb8]
  40807b:	lea    rdx,[rip+0x25a5e]        # 42dae0 <_IO_stdin_used@@Base+0x1ae0>
  408082:	mov    rcx,r14
  408085:	mov    esi,0x1
  40808a:	xor    eax,eax
  40808c:	xor    r12d,r12d
  40808f:	call   4051f0 <__fprintf_chk@plt>
  408094:	mov    rdi,QWORD PTR [rbx+0xd0]
  40809b:	lea    rdx,[rip+0x25a76]        # 42db18 <_IO_stdin_used@@Base+0x1b18>
  4080a2:	mov    r9,rbx
  4080a5:	mov    r8,r14
  4080a8:	mov    rcx,r14
  4080ab:	mov    esi,0x1
  4080b0:	xor    eax,eax
  4080b2:	call   4051f0 <__fprintf_chk@plt>
  4080b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080be:	lea    rdx,[rip+0x2cb64]        # 434c29 <_IO_stdin_used@@Base+0x8c29>
  4080c5:	mov    r8,r14
  4080c8:	mov    rcx,rbx
  4080cb:	mov    esi,0x1
  4080d0:	xor    eax,eax
  4080d2:	call   4051f0 <__fprintf_chk@plt>
  4080d7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080de:	lea    rdx,[rip+0x3c008]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4080e5:	xor    eax,eax
  4080e7:	mov    esi,0x1
  4080ec:	call   4051f0 <__fprintf_chk@plt>
  4080f1:	mov    rbp,QWORD PTR [r15+0x28]
  4080f5:	mov    DWORD PTR [rsp+0xc],0x0
  4080fd:	test   rbp,rbp
  408100:	je     4081dd <__flatcc_fb_codegen_c@@Base+0x17fd>
  408106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408110:	movzx  eax,WORD PTR [rbp+0x70]
  408114:	test   al,0x4
  408116:	jne    4081d0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  40811c:	mov    rdx,QWORD PTR [rbp+0x8]
  408120:	mov    r13,QWORD PTR [rdx]
  408123:	mov    r15,QWORD PTR [rdx+0x8]
  408127:	movzx  edx,WORD PTR [rbp+0x28]
  40812b:	cmp    dx,0x8
  40812f:	je     408270 <__flatcc_fb_codegen_c@@Base+0x1890>
  408135:	cmp    dx,0xe
  408139:	jne    408224 <__flatcc_fb_codegen_c@@Base+0x1844>
  40813f:	mov    rsi,QWORD PTR [rbp+0x18]
  408143:	mov    rdx,QWORD PTR [rsp+0x10]
  408148:	mov    rdi,QWORD PTR [rsi+0x18]
  40814c:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  408151:	mov    rdx,QWORD PTR [rbp+0x18]
  408155:	movzx  eax,WORD PTR [rdx+0x10]
  408159:	cmp    ax,0x1
  40815d:	je     408442 <__flatcc_fb_codegen_c@@Base+0x1a62>
  408163:	cmp    ax,0x3
  408167:	jne    408220 <__flatcc_fb_codegen_c@@Base+0x1840>
  40816d:	mov    eax,DWORD PTR [rdx+0x48]
  408170:	sub    eax,0x1
  408173:	cmp    eax,0xa
  408176:	ja     408818 <__flatcc_fb_codegen_c@@Base+0x1e38>
  40817c:	sub    rsp,0x8
  408180:	mov    rdi,QWORD PTR [rbx+0xd0]
  408187:	lea    rdx,[rip+0x25a02]        # 42db90 <_IO_stdin_used@@Base+0x1b90>
  40818e:	mov    rax,QWORD PTR [rsp+0x18]
  408193:	mov    r9d,r15d
  408196:	mov    r8,r14
  408199:	mov    rcx,rbx
  40819c:	mov    esi,0x1
  4081a1:	push   rax
  4081a2:	push   rax
  4081a3:	xor    eax,eax
  4081a5:	push   r13
  4081a7:	call   4051f0 <__fprintf_chk@plt>
  4081ac:	mov    rax,QWORD PTR [rbx+0xe0]
  4081b3:	add    rsp,0x20
  4081b7:	mov    r11d,DWORD PTR [rax+0x24]
  4081bb:	test   r11d,r11d
  4081be:	jne    4084f8 <__flatcc_fb_codegen_c@@Base+0x1b18>
  4081c4:	test   BYTE PTR [rbp+0x70],0x80
  4081c8:	jne    4084cb <__flatcc_fb_codegen_c@@Base+0x1aeb>
  4081ce:	xchg   ax,ax
  4081d0:	mov    rbp,QWORD PTR [rbp+0x0]
  4081d4:	test   rbp,rbp
  4081d7:	jne    408110 <__flatcc_fb_codegen_c@@Base+0x1730>
  4081dd:	mov    rdi,QWORD PTR [rbx+0xd0]
  4081e4:	lea    rdx,[rip+0x3bf02]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4081eb:	xor    eax,eax
  4081ed:	mov    esi,0x1
  4081f2:	call   4051f0 <__fprintf_chk@plt>
  4081f7:	mov    rax,QWORD PTR [rsp+0x208]
  4081ff:	xor    rax,QWORD PTR fs:0x28
  408208:	jne    4088b9 <__flatcc_fb_codegen_c@@Base+0x1ed9>
  40820e:	add    rsp,0x218
  408215:	pop    rbx
  408216:	pop    rbp
  408217:	pop    r12
  408219:	pop    r13
  40821b:	pop    r14
  40821d:	pop    r15
  40821f:	ret    
  408220:	movzx  eax,WORD PTR [rbp+0x70]
  408224:	and    ax,0x80
  408228:	test   ax,ax
  40822b:	je     4081d0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  40822d:	test   r12d,r12d
  408230:	jne    4081d0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408232:	mov    rdi,QWORD PTR [rbx+0xd0]
  408239:	lea    rdx,[rip+0x25b70]        # 42ddb0 <_IO_stdin_used@@Base+0x1db0>
  408240:	xor    eax,eax
  408242:	mov    esi,0x1
  408247:	call   4051f0 <__fprintf_chk@plt>
  40824c:	mov    rbp,QWORD PTR [rbp+0x0]
  408250:	mov    DWORD PTR [rsp+0xc],0x1
  408258:	test   rbp,rbp
  40825b:	jne    408110 <__flatcc_fb_codegen_c@@Base+0x1730>
  408261:	jmp    4081dd <__flatcc_fb_codegen_c@@Base+0x17fd>
  408266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408270:	mov    eax,DWORD PTR [rbp+0x18]
  408273:	cmp    eax,0x5
  408276:	je     40847c <__flatcc_fb_codegen_c@@Base+0x1a9c>
  40827c:	cmp    eax,0xb
  40827f:	ja     4083d1 <__flatcc_fb_codegen_c@@Base+0x19f1>
  408285:	lea    rsi,[rip+0x2cb9c]        # 434e28 <_IO_stdin_used@@Base+0x8e28>
  40828c:	movsxd rax,DWORD PTR [rsi+rax*4]
  408290:	add    rax,rsi
  408293:	jmp    rax
  408295:	lea    rdx,[rip+0x2c8fe]        # 434b9a <_IO_stdin_used@@Base+0x8b9a>
  40829c:	mov    esi,0x1
  4082a1:	xor    eax,eax
  4082a3:	call   4051f0 <__fprintf_chk@plt>
  4082a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4082af:	lea    rdx,[rip+0x2c8f5]        # 434bab <_IO_stdin_used@@Base+0x8bab>
  4082b6:	xor    eax,eax
  4082b8:	mov    rcx,r14
  4082bb:	mov    esi,0x1
  4082c0:	call   4051f0 <__fprintf_chk@plt>
  4082c5:	mov    rbp,QWORD PTR [r15+0x28]
  4082c9:	test   rbp,rbp
  4082cc:	jne    407b7e <__flatcc_fb_codegen_c@@Base+0x119e>
  4082d2:	xor    r12d,r12d
  4082d5:	mov    DWORD PTR [rsp+0x24],0x0
  4082dd:	mov    r8d,DWORD PTR [r15+0xb8]
  4082e4:	sub    r8d,r12d
  4082e7:	jne    40874d <__flatcc_fb_codegen_c@@Base+0x1d6d>
  4082ed:	mov    rdi,QWORD PTR [rbx+0xd0]
  4082f4:	lea    rdx,[rip+0x2d86a]        # 435b65 <_IO_stdin_used@@Base+0x9b65>
  4082fb:	mov    esi,0x1
  408300:	xor    eax,eax
  408302:	call   4051f0 <__fprintf_chk@plt>
  408307:	mov    rdi,QWORD PTR [rbx+0xd0]
  40830e:	lea    rdx,[rip+0x2c92c]        # 434c41 <_IO_stdin_used@@Base+0x8c41>
  408315:	mov    esi,0x1
  40831a:	xor    eax,eax
  40831c:	call   4051f0 <__fprintf_chk@plt>
  408321:	jmp    407d24 <__flatcc_fb_codegen_c@@Base+0x1344>
  408326:	lea    r8,[rip+0x2c752]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  40832d:	mov    rcx,rbx
  408330:	mov    eax,DWORD PTR [rsp+0xc]
  408334:	mov    rdi,QWORD PTR [rbx+0xd0]
  40833b:	test   eax,eax
  40833d:	je     408421 <__flatcc_fb_codegen_c@@Base+0x1a41>
  408343:	lea    rdx,[rip+0x2c88c]        # 434bd6 <_IO_stdin_used@@Base+0x8bd6>
  40834a:	mov    esi,0x1
  40834f:	xor    eax,eax
  408351:	call   4051f0 <__fprintf_chk@plt>
  408356:	jmp    407e44 <__flatcc_fb_codegen_c@@Base+0x1464>
  40835b:	lea    rcx,[rip+0x3bd8c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408362:	lea    r8,[rip+0x2c6f4]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  408369:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  40836b:	lea    rcx,[rip+0x3bd7c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408372:	lea    r8,[rip+0x2c70d]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  408379:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  40837b:	lea    rcx,[rip+0x3bd6c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408382:	lea    r8,[rip+0x2c6ee]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  408389:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  40838b:	lea    rcx,[rip+0x3bd5c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408392:	lea    r8,[rip+0x2c6f3]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  408399:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  40839b:	lea    rcx,[rip+0x3bd4c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4083a2:	lea    r8,[rip+0x2c6cf]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  4083a9:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  4083ab:	lea    rcx,[rip+0x3bd3c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4083b2:	lea    r8,[rip+0x2c6b6]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  4083b9:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  4083be:	lea    rcx,[rip+0x3bd29]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4083c5:	lea    r8,[rip+0x2c69a]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  4083cc:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  4083d1:	mov    rax,QWORD PTR [rip+0x47c10]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4083d8:	lea    rcx,[rip+0x25111]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4083df:	lea    rdx,[rip+0x2c6db]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4083e6:	lea    r9,[rip+0x250cb]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  4083ed:	mov    esi,0x1
  4083f2:	mov    r8d,0x8d
  4083f8:	mov    rdi,QWORD PTR [rax]
  4083fb:	xor    eax,eax
  4083fd:	call   4051f0 <__fprintf_chk@plt>
  408402:	lea    rcx,[rip+0x2cc57]        # 435060 <_IO_stdin_used@@Base+0x9060>
  408409:	lea    rsi,[rip+0x250e0]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  408410:	lea    rdi,[rip+0x2d6f2]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  408417:	mov    edx,0x8d
  40841c:	call   4050f0 <__assert_fail@plt>
  408421:	lea    rdx,[rip+0x2c7b8]        # 434be0 <_IO_stdin_used@@Base+0x8be0>
  408428:	mov    r9,r8
  40842b:	mov    esi,0x1
  408430:	mov    r8,rcx
  408433:	xor    eax,eax
  408435:	mov    ecx,r15d
  408438:	call   4051f0 <__fprintf_chk@plt>
  40843d:	jmp    407e44 <__flatcc_fb_codegen_c@@Base+0x1464>
  408442:	mov    rdi,QWORD PTR [rbx+0xd0]
  408449:	push   QWORD PTR [rsp+0x10]
  40844d:	lea    rdx,[rip+0x25924]        # 42dd78 <_IO_stdin_used@@Base+0x1d78>
  408454:	push   r13
  408456:	mov    r9d,r15d
  408459:	mov    r8,r14
  40845c:	mov    rcx,rbx
  40845f:	mov    esi,0x1
  408464:	xor    eax,eax
  408466:	call   4051f0 <__fprintf_chk@plt>
  40846b:	movzx  eax,WORD PTR [rbp+0x70]
  40846f:	pop    r9
  408471:	pop    r10
  408473:	and    ax,0x80
  408477:	jmp    408228 <__flatcc_fb_codegen_c@@Base+0x1848>
  40847c:	lea    rax,[rip+0x2c5fc]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  408483:	lea    rdx,[rip+0x2c70b]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  40848a:	mov    rcx,rbx
  40848d:	sub    rsp,0x8
  408491:	mov    rdi,QWORD PTR [rbx+0xd0]
  408498:	mov    r9d,r15d
  40849b:	push   rax
  40849c:	push   rcx
  40849d:	mov    r8,r14
  4084a0:	push   rdx
  4084a1:	lea    rdx,[rip+0x256b0]        # 42db58 <_IO_stdin_used@@Base+0x1b58>
  4084a8:	push   rbx
  4084a9:	push   r13
  4084ab:	mov    rcx,rbx
  4084ae:	mov    esi,0x1
  4084b3:	xor    eax,eax
  4084b5:	call   4051f0 <__fprintf_chk@plt>
  4084ba:	movzx  eax,WORD PTR [rbp+0x70]
  4084be:	add    rsp,0x30
  4084c2:	and    ax,0x80
  4084c6:	jmp    408228 <__flatcc_fb_codegen_c@@Base+0x1848>
  4084cb:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084d2:	push   QWORD PTR [rsp+0x10]
  4084d6:	lea    rdx,[rip+0x256f3]        # 42dbd0 <_IO_stdin_used@@Base+0x1bd0>
  4084dd:	push   r13
  4084df:	mov    r9d,r15d
  4084e2:	mov    r8,r14
  4084e5:	mov    rcx,rbx
  4084e8:	mov    esi,0x1
  4084ed:	xor    eax,eax
  4084ef:	call   4051f0 <__fprintf_chk@plt>
  4084f4:	pop    r9
  4084f6:	pop    r10
  4084f8:	test   BYTE PTR [rbp+0x70],0x80
  4084fc:	je     4081d0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408502:	mov    r8d,DWORD PTR [rsp+0xc]
  408507:	mov    rdi,QWORD PTR [rbx+0xd0]
  40850e:	test   r8d,r8d
  408511:	jne    408770 <__flatcc_fb_codegen_c@@Base+0x1d90>
  408517:	lea    rdx,[rip+0x25732]        # 42dc50 <_IO_stdin_used@@Base+0x1c50>
  40851e:	mov    esi,0x1
  408523:	xor    eax,eax
  408525:	call   4051f0 <__fprintf_chk@plt>
  40852a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408531:	push   QWORD PTR [rsp+0x10]
  408535:	lea    rdx,[rip+0x25754]        # 42dc90 <_IO_stdin_used@@Base+0x1c90>
  40853c:	push   r13
  40853e:	mov    rcx,rbx
  408541:	mov    esi,0x1
  408546:	xor    eax,eax
  408548:	mov    r9d,r15d
  40854b:	mov    r8,r14
  40854e:	call   4051f0 <__fprintf_chk@plt>
  408553:	mov    rax,QWORD PTR [rbx+0xe0]
  40855a:	pop    rdx
  40855b:	pop    rcx
  40855c:	mov    esi,DWORD PTR [rax+0xa8]
  408562:	test   esi,esi
  408564:	je     408599 <__flatcc_fb_codegen_c@@Base+0x1bb9>
  408566:	sub    rsp,0x8
  40856a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408571:	lea    rdx,[rip+0x25908]        # 42de80 <_IO_stdin_used@@Base+0x1e80>
  408578:	push   r14
  40857a:	push   QWORD PTR [rsp+0x20]
  40857e:	mov    r9d,r15d
  408581:	push   r13
  408583:	mov    r8,r14
  408586:	mov    rcx,rbx
  408589:	mov    esi,0x1
  40858e:	xor    eax,eax
  408590:	call   4051f0 <__fprintf_chk@plt>
  408595:	add    rsp,0x20
  408599:	mov    r12,QWORD PTR [rsp+0x10]
  40859e:	mov    rdi,QWORD PTR [rbx+0xd0]
  4085a5:	lea    rdx,[rip+0x2571c]        # 42dcc8 <_IO_stdin_used@@Base+0x1cc8>
  4085ac:	mov    r9d,r15d
  4085af:	mov    r8,r14
  4085b2:	mov    rcx,rbx
  4085b5:	mov    esi,0x1
  4085ba:	xor    eax,eax
  4085bc:	push   r12
  4085be:	push   r13
  4085c0:	call   4051f0 <__fprintf_chk@plt>
  4085c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4085cc:	push   r12
  4085ce:	lea    rdx,[rip+0x25733]        # 42dd08 <_IO_stdin_used@@Base+0x1d08>
  4085d5:	push   r13
  4085d7:	xor    eax,eax
  4085d9:	mov    r9d,r15d
  4085dc:	mov    r8,r14
  4085df:	mov    rcx,rbx
  4085e2:	mov    esi,0x1
  4085e7:	call   4051f0 <__fprintf_chk@plt>
  4085ec:	mov    rax,QWORD PTR [rbx+0xe0]
  4085f3:	add    rsp,0x20
  4085f7:	mov    eax,DWORD PTR [rax+0xa8]
  4085fd:	test   eax,eax
  4085ff:	jne    408868 <__flatcc_fb_codegen_c@@Base+0x1e88>
  408605:	mov    DWORD PTR [rsp+0xc],0x1
  40860d:	mov    r12d,0x1
  408613:	jmp    4081d0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408618:	lea    rcx,[rip+0x3bacf]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40861f:	lea    r8,[rip+0x2c448]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  408626:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  40862b:	lea    rcx,[rip+0x3babc]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408632:	lea    r8,[rip+0x2c423]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  408639:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  40863e:	lea    rcx,[rip+0x3baa9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408645:	lea    r8,[rip+0x2c419]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40864c:	jmp    408330 <__flatcc_fb_codegen_c@@Base+0x1950>
  408651:	lea    rax,[rip+0x2c420]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  408658:	lea    rcx,[rip+0x3ba8f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40865f:	lea    rdx,[rip+0x2c52a]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  408666:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  40866b:	lea    rax,[rip+0x2c41a]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  408672:	lea    rcx,[rip+0x3ba75]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408679:	mov    rdx,rax
  40867c:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  408681:	lea    rax,[rip+0x2c3fe]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  408688:	lea    rcx,[rip+0x3ba5f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40868f:	mov    rdx,rax
  408692:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  408697:	lea    rax,[rip+0x2c3bf]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  40869e:	lea    rcx,[rip+0x3ba49]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4086a5:	lea    rdx,[rip+0x2c4cf]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  4086ac:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4086b1:	lea    rax,[rip+0x2c3ae]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  4086b8:	lea    rcx,[rip+0x3ba2f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4086bf:	lea    rdx,[rip+0x2c4bc]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  4086c6:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4086cb:	lea    rax,[rip+0x2c39d]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  4086d2:	lea    rcx,[rip+0x3ba15]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4086d9:	lea    rdx,[rip+0x2c4a9]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  4086e0:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4086e5:	lea    rax,[rip+0x2c38b]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  4086ec:	lea    rcx,[rip+0x3b9fb]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4086f3:	lea    rdx,[rip+0x2c495]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  4086fa:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4086ff:	lea    rax,[rip+0x2c356]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  408706:	lea    rcx,[rip+0x3b9e1]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40870d:	lea    rdx,[rip+0x2c466]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  408714:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  408719:	lea    rax,[rip+0x2c34e]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  408720:	lea    rcx,[rip+0x3b9c7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408727:	lea    rdx,[rip+0x2c45a]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  40872e:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  408733:	lea    rax,[rip+0x2c32b]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40873a:	lea    rcx,[rip+0x3b9ad]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408741:	lea    rdx,[rip+0x2c439]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  408748:	jmp    40848d <__flatcc_fb_codegen_c@@Base+0x1aad>
  40874d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408754:	mov    ecx,DWORD PTR [rsp+0x24]
  408758:	lea    rdx,[rip+0x2c459]        # 434bb8 <_IO_stdin_used@@Base+0x8bb8>
  40875f:	mov    esi,0x1
  408764:	xor    eax,eax
  408766:	call   4051f0 <__fprintf_chk@plt>
  40876b:	jmp    4082ed <__flatcc_fb_codegen_c@@Base+0x190d>
  408770:	lea    rdx,[rip+0x25491]        # 42dc08 <_IO_stdin_used@@Base+0x1c08>
  408777:	mov    esi,0x1
  40877c:	xor    eax,eax
  40877e:	call   4051f0 <__fprintf_chk@plt>
  408783:	mov    rdi,QWORD PTR [rbx+0xd0]
  40878a:	lea    rdx,[rip+0x254bf]        # 42dc50 <_IO_stdin_used@@Base+0x1c50>
  408791:	mov    esi,0x1
  408796:	xor    eax,eax
  408798:	call   4051f0 <__fprintf_chk@plt>
  40879d:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087a4:	push   QWORD PTR [rsp+0x10]
  4087a8:	lea    rdx,[rip+0x254e1]        # 42dc90 <_IO_stdin_used@@Base+0x1c90>
  4087af:	push   r13
  4087b1:	mov    rcx,rbx
  4087b4:	mov    esi,0x1
  4087b9:	xor    eax,eax
  4087bb:	mov    r9d,r15d
  4087be:	mov    r8,r14
  4087c1:	call   4051f0 <__fprintf_chk@plt>
  4087c6:	mov    rax,QWORD PTR [rbx+0xe0]
  4087cd:	pop    rdx
  4087ce:	pop    rcx
  4087cf:	mov    esi,DWORD PTR [rax+0xa8]
  4087d5:	test   esi,esi
  4087d7:	je     408605 <__flatcc_fb_codegen_c@@Base+0x1c25>
  4087dd:	sub    rsp,0x8
  4087e1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087e8:	lea    rdx,[rip+0x25691]        # 42de80 <_IO_stdin_used@@Base+0x1e80>
  4087ef:	push   r14
  4087f1:	push   QWORD PTR [rsp+0x20]
  4087f5:	mov    r9d,r15d
  4087f8:	push   r13
  4087fa:	mov    r8,r14
  4087fd:	mov    rcx,rbx
  408800:	mov    esi,0x1
  408805:	xor    eax,eax
  408807:	call   4051f0 <__fprintf_chk@plt>
  40880c:	add    rsp,0x20
  408810:	jmp    408605 <__flatcc_fb_codegen_c@@Base+0x1c25>
  408815:	nop    DWORD PTR [rax]
  408818:	mov    rax,QWORD PTR [rip+0x477c9]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40881f:	lea    rcx,[rip+0x24cca]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  408826:	lea    rdx,[rip+0x2c294]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40882d:	lea    r9,[rip+0x24c84]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  408834:	mov    esi,0x1
  408839:	mov    r8d,0x60
  40883f:	mov    rdi,QWORD PTR [rax]
  408842:	xor    eax,eax
  408844:	call   4051f0 <__fprintf_chk@plt>
  408849:	lea    rcx,[rip+0x2c7f0]        # 435040 <_IO_stdin_used@@Base+0x9040>
  408850:	lea    rsi,[rip+0x24c99]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  408857:	lea    rdi,[rip+0x2d2ab]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40885e:	mov    edx,0x60
  408863:	call   4050f0 <__assert_fail@plt>
  408868:	sub    rsp,0x8
  40886c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408873:	lea    rdx,[rip+0x254ce]        # 42dd48 <_IO_stdin_used@@Base+0x1d48>
  40887a:	push   r13
  40887c:	mov    r9d,r15d
  40887f:	mov    r8,r14
  408882:	mov    rcx,r14
  408885:	mov    esi,0x1
  40888a:	xor    eax,eax
  40888c:	call   4051f0 <__fprintf_chk@plt>
  408891:	pop    r11
  408893:	pop    r12
  408895:	jmp    408605 <__flatcc_fb_codegen_c@@Base+0x1c25>
  40889a:	lea    rcx,[rip+0x2c7d7]        # 435078 <_IO_stdin_used@@Base+0x9078>
  4088a1:	lea    rsi,[rip+0x249b8]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  4088a8:	lea    rdi,[rip+0x24ec1]        # 42d770 <_IO_stdin_used@@Base+0x1770>
  4088af:	mov    edx,0x3a8
  4088b4:	call   4050f0 <__assert_fail@plt>
  4088b9:	call   4050d0 <__stack_chk_fail@plt>
  4088be:	lea    rcx,[rip+0x2c7b3]        # 435078 <_IO_stdin_used@@Base+0x9078>
  4088c5:	lea    rsi,[rip+0x24994]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  4088cc:	lea    rdi,[rip+0x24ebd]        # 42d790 <_IO_stdin_used@@Base+0x1790>
  4088d3:	mov    edx,0x3a9
  4088d8:	call   4050f0 <__assert_fail@plt>
  4088dd:	lea    rcx,[rip+0x2c794]        # 435078 <_IO_stdin_used@@Base+0x9078>
  4088e4:	lea    rsi,[rip+0x24975]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  4088eb:	lea    rdi,[rip+0x25036]        # 42d928 <_IO_stdin_used@@Base+0x1928>
  4088f2:	mov    edx,0x3fa
  4088f7:	call   4050f0 <__assert_fail@plt>
  4088fc:	nop    DWORD PTR [rax+0x0]
  408900:	push   r15
  408902:	push   r14
  408904:	push   r13
  408906:	push   r12
  408908:	push   rbp
  408909:	push   rbx
  40890a:	sub    rsp,0x478
  408911:	mov    rax,QWORD PTR fs:0x28
  40891a:	mov    QWORD PTR [rsp+0x468],rax
  408922:	xor    eax,eax
  408924:	cmp    WORD PTR [rsi+0x10],0x0
  408929:	jne    40a087 <__flatcc_fb_codegen_c@@Base+0x36a7>
  40892f:	lea    r12,[rsp+0x40]
  408934:	xor    eax,eax
  408936:	mov    rbx,rdi
  408939:	mov    ecx,0x1d
  40893e:	lea    rdx,[rip+0x3b7a8]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  408945:	mov    r15,rsi
  408948:	mov    rdi,r12
  40894b:	mov    esi,0x1
  408950:	rep stos QWORD PTR es:[rdi],rax
  408953:	lea    rdi,[rsp+0x130]
  40895b:	mov    ecx,0x1d
  408960:	mov    QWORD PTR [rsp],rdi
  408964:	rep stos QWORD PTR es:[rdi],rax
  408967:	mov    rdi,QWORD PTR [rbx+0xd0]
  40896e:	call   4051f0 <__fprintf_chk@plt>
  408973:	mov    rdi,QWORD PTR [r15+0x18]
  408977:	mov    rdx,r12
  40897a:	mov    rsi,r15
  40897d:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  408982:	mov    rbp,QWORD PTR [r15+0x40]
  408986:	test   rbp,rbp
  408989:	je     408a3a <__flatcc_fb_codegen_c@@Base+0x205a>
  40898f:	mov    ecx,0x1
  408994:	xor    edx,edx
  408996:	jmp    4089eb <__flatcc_fb_codegen_c@@Base+0x200b>
  408998:	nop    DWORD PTR [rax+rax*1+0x0]
  4089a0:	lea    rdx,[rip+0x2c125]        # 434acc <_IO_stdin_used@@Base+0x8acc>
  4089a7:	mov    esi,0x1
  4089ac:	xor    eax,eax
  4089ae:	call   4051f0 <__fprintf_chk@plt>
  4089b3:	mov    rax,QWORD PTR [rbp+0x8]
  4089b7:	mov    rcx,QWORD PTR [rax+0x8]
  4089bb:	mov    r8,QWORD PTR [rax]
  4089be:	lea    rdx,[rip+0x2d154]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  4089c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4089cc:	xor    eax,eax
  4089ce:	mov    esi,0x1
  4089d3:	call   4051f0 <__fprintf_chk@plt>
  4089d8:	mov    rax,QWORD PTR [rbp+0x8]
  4089dc:	mov    rbp,QWORD PTR [rbp+0x0]
  4089e0:	xor    ecx,ecx
  4089e2:	test   rbp,rbp
  4089e5:	mov    rdx,QWORD PTR [rax+0x10]
  4089e9:	je     408a20 <__flatcc_fb_codegen_c@@Base+0x2040>
  4089eb:	mov    rax,QWORD PTR [rbp+0x8]
  4089ef:	cmp    QWORD PTR [rax+0x10],rdx
  4089f3:	je     4089b7 <__flatcc_fb_codegen_c@@Base+0x1fd7>
  4089f5:	test   ecx,ecx
  4089f7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4089fe:	lea    rcx,[rip+0x3b6e9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408a05:	jne    4089a0 <__flatcc_fb_codegen_c@@Base+0x1fc0>
  408a07:	lea    rdx,[rip+0x2c0c5]        # 434ad3 <_IO_stdin_used@@Base+0x8ad3>
  408a0e:	mov    esi,0x1
  408a13:	xor    eax,eax
  408a15:	call   4051f0 <__fprintf_chk@plt>
  408a1a:	mov    rax,QWORD PTR [rbp+0x8]
  408a1e:	jmp    4089b7 <__flatcc_fb_codegen_c@@Base+0x1fd7>
  408a20:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a27:	lea    rdx,[rip+0x2c2f1]        # 434d1f <_IO_stdin_used@@Base+0x8d1f>
  408a2e:	mov    esi,0x1
  408a33:	xor    eax,eax
  408a35:	call   4051f0 <__fprintf_chk@plt>
  408a3a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a41:	lea    rdx,[rip+0x25498]        # 42dee0 <_IO_stdin_used@@Base+0x1ee0>
  408a48:	mov    rcx,r12
  408a4b:	mov    esi,0x1
  408a50:	xor    eax,eax
  408a52:	call   4051f0 <__fprintf_chk@plt>
  408a57:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a5e:	lea    rdx,[rip+0x250b3]        # 42db18 <_IO_stdin_used@@Base+0x1b18>
  408a65:	mov    r9,rbx
  408a68:	mov    r8,r12
  408a6b:	mov    rcx,r12
  408a6e:	mov    esi,0x1
  408a73:	xor    eax,eax
  408a75:	call   4051f0 <__fprintf_chk@plt>
  408a7a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a81:	lea    rdx,[rip+0x25488]        # 42df10 <_IO_stdin_used@@Base+0x1f10>
  408a88:	push   r12
  408a8a:	push   rbx
  408a8b:	mov    r9,r12
  408a8e:	mov    r8,r12
  408a91:	mov    rcx,r12
  408a94:	mov    esi,0x1
  408a99:	xor    eax,eax
  408a9b:	call   4051f0 <__fprintf_chk@plt>
  408aa0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408aa7:	lea    rdx,[rip+0x2c209]        # 434cb7 <_IO_stdin_used@@Base+0x8cb7>
  408aae:	mov    r8,r12
  408ab1:	mov    rcx,rbx
  408ab4:	mov    esi,0x1
  408ab9:	xor    eax,eax
  408abb:	call   4051f0 <__fprintf_chk@plt>
  408ac0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ac7:	lea    rdx,[rip+0x3b61f]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  408ace:	xor    eax,eax
  408ad0:	mov    esi,0x1
  408ad5:	call   4051f0 <__fprintf_chk@plt>
  408ada:	mov    rbp,QWORD PTR [r15+0x28]
  408ade:	pop    rax
  408adf:	pop    rdx
  408ae0:	test   rbp,rbp
  408ae3:	je     408c50 <__flatcc_fb_codegen_c@@Base+0x2270>
  408ae9:	lea    rax,[rsp+0x400]
  408af1:	mov    DWORD PTR [rsp+0x8],0x0
  408af9:	mov    QWORD PTR [rsp+0x28],r15
  408afe:	mov    QWORD PTR [rsp+0x10],rax
  408b03:	lea    rax,[rsp+0x220]
  408b0b:	mov    QWORD PTR [rsp+0x18],rax
  408b10:	lea    rax,[rsp+0x310]
  408b18:	mov    QWORD PTR [rsp+0x20],rax
  408b1d:	mov    r13,QWORD PTR [rbp+0x68]
  408b21:	test   r13,r13
  408b24:	je     408bda <__flatcc_fb_codegen_c@@Base+0x21fa>
  408b2a:	mov    ecx,0x1
  408b2f:	xor    edx,edx
  408b31:	jmp    408b83 <__flatcc_fb_codegen_c@@Base+0x21a3>
  408b33:	nop    DWORD PTR [rax+rax*1+0x0]
  408b38:	lea    rdx,[rip+0x2bf8d]        # 434acc <_IO_stdin_used@@Base+0x8acc>
  408b3f:	mov    esi,0x1
  408b44:	xor    eax,eax
  408b46:	call   4051f0 <__fprintf_chk@plt>
  408b4b:	mov    rax,QWORD PTR [r13+0x8]
  408b4f:	mov    rcx,QWORD PTR [rax+0x8]
  408b53:	mov    r8,QWORD PTR [rax]
  408b56:	lea    rdx,[rip+0x2cfbc]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  408b5d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b64:	xor    eax,eax
  408b66:	mov    esi,0x1
  408b6b:	call   4051f0 <__fprintf_chk@plt>
  408b70:	mov    rax,QWORD PTR [r13+0x8]
  408b74:	mov    r13,QWORD PTR [r13+0x0]
  408b78:	xor    ecx,ecx
  408b7a:	test   r13,r13
  408b7d:	mov    rdx,QWORD PTR [rax+0x10]
  408b81:	je     408bc0 <__flatcc_fb_codegen_c@@Base+0x21e0>
  408b83:	mov    rax,QWORD PTR [r13+0x8]
  408b87:	cmp    QWORD PTR [rax+0x10],rdx
  408b8b:	je     408b4f <__flatcc_fb_codegen_c@@Base+0x216f>
  408b8d:	test   ecx,ecx
  408b8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b96:	lea    rcx,[rip+0x3b551]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  408b9d:	jne    408b38 <__flatcc_fb_codegen_c@@Base+0x2158>
  408b9f:	lea    rdx,[rip+0x2bf2d]        # 434ad3 <_IO_stdin_used@@Base+0x8ad3>
  408ba6:	mov    esi,0x1
  408bab:	xor    eax,eax
  408bad:	call   4051f0 <__fprintf_chk@plt>
  408bb2:	mov    rax,QWORD PTR [r13+0x8]
  408bb6:	jmp    408b4f <__flatcc_fb_codegen_c@@Base+0x216f>
  408bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408bc0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408bc7:	lea    rdx,[rip+0x2c151]        # 434d1f <_IO_stdin_used@@Base+0x8d1f>
  408bce:	mov    esi,0x1
  408bd3:	xor    eax,eax
  408bd5:	call   4051f0 <__fprintf_chk@plt>
  408bda:	mov    rax,QWORD PTR [rbp+0x8]
  408bde:	mov    r13,QWORD PTR [rax]
  408be1:	mov    r15,QWORD PTR [rax+0x8]
  408be5:	movzx  eax,WORD PTR [rbp+0x70]
  408be9:	test   al,0x4
  408beb:	jne    408c20 <__flatcc_fb_codegen_c@@Base+0x2240>
  408bed:	movzx  eax,ah
  408bf0:	and    eax,0x1
  408bf3:	mov    r14d,eax
  408bf6:	movzx  eax,WORD PTR [rbp+0x28]
  408bfa:	sub    eax,0x7
  408bfd:	cmp    ax,0x8
  408c01:	ja     408fd0 <__flatcc_fb_codegen_c@@Base+0x25f0>
  408c07:	lea    rsi,[rip+0x2c24a]        # 434e58 <_IO_stdin_used@@Base+0x8e58>
  408c0e:	movzx  eax,ax
  408c11:	movsxd rax,DWORD PTR [rsi+rax*4]
  408c15:	add    rax,rsi
  408c18:	jmp    rax
  408c1a:	nop    WORD PTR [rax+rax*1+0x0]
  408c20:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c27:	lea    rdx,[rip+0x2534a]        # 42df78 <_IO_stdin_used@@Base+0x1f78>
  408c2e:	mov    r9,r13
  408c31:	mov    r8d,r15d
  408c34:	mov    rcx,r12
  408c37:	mov    esi,0x1
  408c3c:	xor    eax,eax
  408c3e:	call   4051f0 <__fprintf_chk@plt>
  408c43:	mov    rbp,QWORD PTR [rbp+0x0]
  408c47:	test   rbp,rbp
  408c4a:	jne    408b1d <__flatcc_fb_codegen_c@@Base+0x213d>
  408c50:	mov    rax,QWORD PTR [rsp+0x468]
  408c58:	xor    rax,QWORD PTR fs:0x28
  408c61:	jne    40a032 <__flatcc_fb_codegen_c@@Base+0x3652>
  408c67:	add    rsp,0x478
  408c6e:	pop    rbx
  408c6f:	pop    rbp
  408c70:	pop    r12
  408c72:	pop    r13
  408c74:	pop    r14
  408c76:	pop    r15
  408c78:	ret    
  408c79:	nop    DWORD PTR [rax+0x0]
  408c80:	mov    rsi,QWORD PTR [rbp+0x18]
  408c84:	mov    rdx,QWORD PTR [rsp]
  408c88:	mov    rdi,QWORD PTR [rsi+0x18]
  408c8c:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  408c91:	mov    rax,QWORD PTR [rbp+0x18]
  408c95:	movzx  eax,WORD PTR [rax+0x10]
  408c99:	cmp    ax,0x4
  408c9d:	ja     40a037 <__flatcc_fb_codegen_c@@Base+0x3657>
  408ca3:	mov    edx,0x1
  408ca8:	shlx   rdx,rdx,rax
  408cad:	and    edx,0x1b
  408cb0:	je     40a037 <__flatcc_fb_codegen_c@@Base+0x3657>
  408cb6:	cmp    ax,0x4
  408cba:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cc1:	je     40923e <__flatcc_fb_codegen_c@@Base+0x285e>
  408cc7:	mov    r8,QWORD PTR [rbp+0x88]
  408cce:	push   r14
  408cd0:	lea    rdx,[rip+0x25799]        # 42e470 <_IO_stdin_used@@Base+0x2470>
  408cd7:	push   QWORD PTR [rsp+0x8]
  408cdb:	push   r13
  408cdd:	mov    r9,r12
  408ce0:	push   r15
  408ce2:	mov    rcx,rbx
  408ce5:	mov    esi,0x1
  408cea:	xor    eax,eax
  408cec:	call   4051f0 <__fprintf_chk@plt>
  408cf1:	movzx  eax,WORD PTR [rbp+0x70]
  408cf5:	add    rsp,0x20
  408cf9:	and    ax,0x80
  408cfd:	test   ax,ax
  408d00:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  408d06:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d0d:	lea    rdx,[rip+0x2509c]        # 42ddb0 <_IO_stdin_used@@Base+0x1db0>
  408d14:	mov    esi,0x1
  408d19:	xor    eax,eax
  408d1b:	call   4051f0 <__fprintf_chk@plt>
  408d20:	mov    DWORD PTR [rsp+0x8],0x1
  408d28:	jmp    408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  408d2d:	nop    DWORD PTR [rax]
  408d30:	mov    rsi,QWORD PTR [rbp+0x18]
  408d34:	mov    rdx,QWORD PTR [rsp]
  408d38:	mov    rdi,QWORD PTR [rsi+0x18]
  408d3c:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  408d41:	mov    rdx,QWORD PTR [rbp+0x18]
  408d45:	movzx  eax,WORD PTR [rdx+0x10]
  408d49:	cmp    ax,0x1
  408d4d:	je     409304 <__flatcc_fb_codegen_c@@Base+0x2924>
  408d53:	jb     4092da <__flatcc_fb_codegen_c@@Base+0x28fa>
  408d59:	cmp    ax,0x3
  408d5d:	je     409020 <__flatcc_fb_codegen_c@@Base+0x2640>
  408d63:	cmp    ax,0x4
  408d67:	jne    40932e <__flatcc_fb_codegen_c@@Base+0x294e>
  408d6d:	sub    rsp,0x8
  408d71:	mov    r9,QWORD PTR [rbp+0x88]
  408d78:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d7f:	lea    rdx,[rip+0x255d2]        # 42e358 <_IO_stdin_used@@Base+0x2358>
  408d86:	push   r14
  408d88:	push   QWORD PTR [rsp+0x10]
  408d8c:	push   r13
  408d8e:	push   r15
  408d90:	mov    r8,rbx
  408d93:	push   r12
  408d95:	mov    rcx,rbx
  408d98:	mov    esi,0x1
  408d9d:	xor    eax,eax
  408d9f:	call   4051f0 <__fprintf_chk@plt>
  408da4:	movzx  eax,WORD PTR [rbp+0x70]
  408da8:	add    rsp,0x30
  408dac:	and    ax,0x80
  408db0:	jmp    408cfd <__flatcc_fb_codegen_c@@Base+0x231d>
  408db5:	nop    DWORD PTR [rax]
  408db8:	sub    rsp,0x8
  408dbc:	mov    rdi,QWORD PTR [rbx+0xd0]
  408dc3:	mov    r8,QWORD PTR [rbp+0x88]
  408dca:	push   r14
  408dcc:	lea    rdx,[rip+0x2538d]        # 42e160 <_IO_stdin_used@@Base+0x2160>
  408dd3:	push   r13
  408dd5:	push   r15
  408dd7:	xor    eax,eax
  408dd9:	mov    r9,r12
  408ddc:	mov    rcx,rbx
  408ddf:	mov    esi,0x1
  408de4:	call   4051f0 <__fprintf_chk@plt>
  408de9:	mov    rax,QWORD PTR [rbx+0xe0]
  408df0:	add    rsp,0x20
  408df4:	mov    eax,DWORD PTR [rax+0x24]
  408df7:	test   eax,eax
  408df9:	jne    408e32 <__flatcc_fb_codegen_c@@Base+0x2452>
  408dfb:	test   BYTE PTR [rbp+0x70],0x80
  408dff:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  408e05:	sub    rsp,0x8
  408e09:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e10:	lea    rdx,[rip+0x25379]        # 42e190 <_IO_stdin_used@@Base+0x2190>
  408e17:	push   r13
  408e19:	mov    r9d,r15d
  408e1c:	mov    r8,r12
  408e1f:	mov    rcx,rbx
  408e22:	mov    esi,0x1
  408e27:	xor    eax,eax
  408e29:	call   4051f0 <__fprintf_chk@plt>
  408e2e:	pop    r11
  408e30:	pop    r14
  408e32:	test   BYTE PTR [rbp+0x70],0x80
  408e36:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  408e3c:	mov    r10d,DWORD PTR [rsp+0x8]
  408e41:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e48:	test   r10d,r10d
  408e4b:	jne    409168 <__flatcc_fb_codegen_c@@Base+0x2788>
  408e51:	sub    rsp,0x8
  408e55:	lea    rdx,[rip+0x25364]        # 42e1c0 <_IO_stdin_used@@Base+0x21c0>
  408e5c:	xor    eax,eax
  408e5e:	push   r13
  408e60:	mov    r9d,r15d
  408e63:	mov    r8,r12
  408e66:	mov    rcx,rbx
  408e69:	mov    esi,0x1
  408e6e:	call   4051f0 <__fprintf_chk@plt>
  408e73:	mov    rax,QWORD PTR [rbx+0xe0]
  408e7a:	pop    r10
  408e7c:	pop    r11
  408e7e:	mov    r14d,DWORD PTR [rax+0xa8]
  408e85:	test   r14d,r14d
  408e88:	je     408eb5 <__flatcc_fb_codegen_c@@Base+0x24d5>
  408e8a:	sub    rsp,0x8
  408e8e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e95:	lea    rdx,[rip+0x256cc]        # 42e568 <_IO_stdin_used@@Base+0x2568>
  408e9c:	push   r13
  408e9e:	mov    rcx,rbx
  408ea1:	mov    esi,0x1
  408ea6:	mov    r9d,r15d
  408ea9:	mov    r8,r12
  408eac:	xor    eax,eax
  408eae:	call   4051f0 <__fprintf_chk@plt>
  408eb3:	pop    rcx
  408eb4:	pop    rsi
  408eb5:	sub    rsp,0x8
  408eb9:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ec0:	lea    rdx,[rip+0x25329]        # 42e1f0 <_IO_stdin_used@@Base+0x21f0>
  408ec7:	push   r13
  408ec9:	mov    r9d,r15d
  408ecc:	mov    r8,r12
  408ecf:	mov    rcx,rbx
  408ed2:	mov    esi,0x1
  408ed7:	xor    eax,eax
  408ed9:	call   4051f0 <__fprintf_chk@plt>
  408ede:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ee5:	lea    rdx,[rip+0x2533c]        # 42e228 <_IO_stdin_used@@Base+0x2228>
  408eec:	mov    rcx,rbx
  408eef:	mov    esi,0x1
  408ef4:	xor    eax,eax
  408ef6:	mov    r9d,r15d
  408ef9:	mov    r8,r12
  408efc:	mov    QWORD PTR [rsp],r13
  408f00:	call   4051f0 <__fprintf_chk@plt>
  408f05:	mov    rax,QWORD PTR [rbx+0xe0]
  408f0c:	pop    rdx
  408f0d:	pop    rcx
  408f0e:	mov    esi,DWORD PTR [rax+0xa8]
  408f14:	test   esi,esi
  408f16:	je     408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  408f1c:	sub    rsp,0x8
  408f20:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f27:	lea    rdx,[rip+0x24e1a]        # 42dd48 <_IO_stdin_used@@Base+0x1d48>
  408f2e:	push   r13
  408f30:	mov    r9d,r15d
  408f33:	mov    r8,r12
  408f36:	mov    rcx,r12
  408f39:	mov    esi,0x1
  408f3e:	xor    eax,eax
  408f40:	call   4051f0 <__fprintf_chk@plt>
  408f45:	pop    rax
  408f46:	pop    rdx
  408f47:	mov    DWORD PTR [rsp+0x8],0x1
  408f4f:	jmp    408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  408f54:	nop    DWORD PTR [rax+0x0]
  408f58:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f5f:	mov    r9,r12
  408f62:	push   r14
  408f64:	mov    r8,QWORD PTR [rbp+0x88]
  408f6b:	push   rbx
  408f6c:	mov    rcx,rbx
  408f6f:	push   r13
  408f71:	lea    rdx,[rip+0x252e8]        # 42e260 <_IO_stdin_used@@Base+0x2260>
  408f78:	push   r15
  408f7a:	jmp    408ce5 <__flatcc_fb_codegen_c@@Base+0x2305>
  408f7f:	nop
  408f80:	mov    edx,DWORD PTR [rbp+0x18]
  408f83:	cmp    edx,0x5
  408f86:	je     4091f0 <__flatcc_fb_codegen_c@@Base+0x2810>
  408f8c:	cmp    edx,0xb
  408f8f:	ja     4098fb <__flatcc_fb_codegen_c@@Base+0x2f1b>
  408f95:	lea    rcx,[rip+0x2bee0]        # 434e7c <_IO_stdin_used@@Base+0x8e7c>
  408f9c:	mov    eax,edx
  408f9e:	movsxd rax,DWORD PTR [rcx+rax*4]
  408fa2:	add    rax,rcx
  408fa5:	jmp    rax
  408fa7:	nop    WORD PTR [rax+rax*1+0x0]
  408fb0:	cmp    DWORD PTR [rbp+0x18],0xb
  408fb4:	ja     409892 <__flatcc_fb_codegen_c@@Base+0x2eb2>
  408fba:	mov    eax,DWORD PTR [rbp+0x18]
  408fbd:	lea    rdx,[rip+0x2bee8]        # 434eac <_IO_stdin_used@@Base+0x8eac>
  408fc4:	movsxd rax,DWORD PTR [rdx+rax*4]
  408fc8:	add    rax,rdx
  408fcb:	jmp    rax
  408fcd:	nop    DWORD PTR [rax]
  408fd0:	mov    rax,QWORD PTR [rip+0x47011]        # 44ffe8 <stderr@GLIBC_2.2.5>
  408fd7:	lea    rcx,[rip+0x24282]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  408fde:	lea    rdx,[rip+0x2badc]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  408fe5:	lea    r9,[rip+0x254bc]        # 42e4a8 <_IO_stdin_used@@Base+0x24a8>
  408fec:	mov    esi,0x1
  408ff1:	mov    r8d,0x63f
  408ff7:	mov    rdi,QWORD PTR [rax]
  408ffa:	xor    eax,eax
  408ffc:	call   4051f0 <__fprintf_chk@plt>
  409001:	lea    rcx,[rip+0x2bff0]        # 434ff8 <_IO_stdin_used@@Base+0x8ff8>
  409008:	lea    rsi,[rip+0x24251]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40900f:	lea    rdi,[rip+0x2caf3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  409016:	mov    edx,0x63f
  40901b:	call   4050f0 <__assert_fail@plt>
  409020:	mov    eax,DWORD PTR [rdx+0x48]
  409023:	movzx  edx,WORD PTR [rbp+0x58]
  409027:	cmp    dx,0x4
  40902b:	je     409dcd <__flatcc_fb_codegen_c@@Base+0x33ed>
  409031:	jbe    409d90 <__flatcc_fb_codegen_c@@Base+0x33b0>
  409037:	cmp    dx,0x5
  40903b:	je     4098e2 <__flatcc_fb_codegen_c@@Base+0x2f02>
  409041:	cmp    dx,0x6
  409045:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40904b:	cmp    eax,0x9
  40904e:	ja     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409054:	lea    rdx,[rip+0x2be81]        # 434edc <_IO_stdin_used@@Base+0x8edc>
  40905b:	movsxd rax,DWORD PTR [rdx+rax*4]
  40905f:	add    rax,rdx
  409062:	jmp    rax
  409064:	lea    rax,[rip+0x2bc19]        # 434c84 <_IO_stdin_used@@Base+0x8c84>
  40906b:	sub    rsp,0x8
  40906f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409076:	mov    r8,QWORD PTR [rbp+0x88]
  40907d:	push   r14
  40907f:	lea    rdx,[rip+0x2546a]        # 42e4f0 <_IO_stdin_used@@Base+0x24f0>
  409086:	push   rax
  409087:	push   rbx
  409088:	push   r13
  40908a:	mov    esi,0x1
  40908f:	push   r15
  409091:	xor    eax,eax
  409093:	mov    r9,r12
  409096:	mov    rcx,rbx
  409099:	call   4051f0 <__fprintf_chk@plt>
  40909e:	mov    rsi,QWORD PTR [rbp+0x90]
  4090a5:	add    rsp,0x30
  4090a9:	test   rsi,rsi
  4090ac:	je     409267 <__flatcc_fb_codegen_c@@Base+0x2887>
  4090b2:	mov    rdi,QWORD PTR [rsp+0x18]
  4090b7:	xor    eax,eax
  4090b9:	mov    ecx,0x1d
  4090be:	rep stos QWORD PTR es:[rdi],rax
  4090c1:	mov    rdi,QWORD PTR [rsp+0x20]
  4090c6:	mov    ecx,0x1d
  4090cb:	rep stos QWORD PTR es:[rdi],rax
  4090ce:	movzx  eax,WORD PTR [rsi+0x10]
  4090d2:	test   ax,ax
  4090d5:	je     4093ce <__flatcc_fb_codegen_c@@Base+0x29ee>
  4090db:	cmp    ax,0x1
  4090df:	jne    40937e <__flatcc_fb_codegen_c@@Base+0x299e>
  4090e5:	lea    r13,[rip+0x2bb6c]        # 434c58 <_IO_stdin_used@@Base+0x8c58>
  4090ec:	mov    rdi,QWORD PTR [rsi+0x18]
  4090f0:	mov    rdx,QWORD PTR [rsp+0x18]
  4090f5:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4090fa:	mov    rax,QWORD PTR [rsp+0x28]
  4090ff:	cmp    WORD PTR [rax+0x10],0x0
  409104:	jne    40a0fa <__flatcc_fb_codegen_c@@Base+0x371a>
  40910a:	mov    rax,QWORD PTR [rsp+0x28]
  40910f:	mov    r14,QWORD PTR [rsp+0x20]
  409114:	mov    rdi,QWORD PTR [rax+0x18]
  409118:	mov    rsi,rax
  40911b:	mov    rdx,r14
  40911e:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  409123:	mov    rax,QWORD PTR [rbp+0x8]
  409127:	sub    rsp,0x8
  40912b:	mov    rdi,QWORD PTR [rbx+0xd0]
  409132:	lea    rdx,[rip+0x24ff7]        # 42e130 <_IO_stdin_used@@Base+0x2130>
  409139:	push   r13
  40913b:	push   QWORD PTR [rsp+0x28]
  40913f:	mov    r8,r14
  409142:	mov    rcx,rbx
  409145:	mov    esi,0x1
  40914a:	mov    r9d,DWORD PTR [rax+0x8]
  40914e:	push   QWORD PTR [rax]
  409150:	xor    eax,eax
  409152:	call   4051f0 <__fprintf_chk@plt>
  409157:	movzx  eax,WORD PTR [rbp+0x70]
  40915b:	add    rsp,0x20
  40915f:	and    ax,0x80
  409163:	jmp    408cfd <__flatcc_fb_codegen_c@@Base+0x231d>
  409168:	lea    rdx,[rip+0x24a99]        # 42dc08 <_IO_stdin_used@@Base+0x1c08>
  40916f:	mov    esi,0x1
  409174:	xor    eax,eax
  409176:	call   4051f0 <__fprintf_chk@plt>
  40917b:	sub    rsp,0x8
  40917f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409186:	lea    rdx,[rip+0x25033]        # 42e1c0 <_IO_stdin_used@@Base+0x21c0>
  40918d:	push   r13
  40918f:	mov    r9d,r15d
  409192:	mov    r8,r12
  409195:	xor    eax,eax
  409197:	mov    rcx,rbx
  40919a:	mov    esi,0x1
  40919f:	call   4051f0 <__fprintf_chk@plt>
  4091a4:	mov    rax,QWORD PTR [rbx+0xe0]
  4091ab:	pop    rdi
  4091ac:	pop    r8
  4091ae:	mov    r9d,DWORD PTR [rax+0xa8]
  4091b5:	test   r9d,r9d
  4091b8:	je     408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  4091be:	sub    rsp,0x8
  4091c2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091c9:	lea    rdx,[rip+0x25398]        # 42e568 <_IO_stdin_used@@Base+0x2568>
  4091d0:	push   r13
  4091d2:	mov    r9d,r15d
  4091d5:	mov    r8,r12
  4091d8:	mov    rcx,rbx
  4091db:	mov    esi,0x1
  4091e0:	xor    eax,eax
  4091e2:	call   4051f0 <__fprintf_chk@plt>
  4091e7:	pop    rax
  4091e8:	pop    rdx
  4091e9:	jmp    408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  4091ee:	xchg   ax,ax
  4091f0:	lea    r10,[rip+0x2b888]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  4091f7:	lea    r11,[rip+0x2b997]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  4091fe:	mov    r14,rbx
  409201:	movzx  eax,WORD PTR [rbp+0x58]
  409205:	cmp    ax,0x4
  409209:	je     40942f <__flatcc_fb_codegen_c@@Base+0x2a4f>
  40920f:	jbe    409448 <__flatcc_fb_codegen_c@@Base+0x2a68>
  409215:	cmp    ax,0x5
  409219:	je     409405 <__flatcc_fb_codegen_c@@Base+0x2a25>
  40921f:	cmp    ax,0x6
  409223:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409225:	cmp    edx,0x9
  409228:	ja     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  40922e:	lea    rcx,[rip+0x2bccf]        # 434f04 <_IO_stdin_used@@Base+0x8f04>
  409235:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409239:	add    rax,rcx
  40923c:	jmp    rax
  40923e:	sub    rsp,0x8
  409242:	mov    r9,QWORD PTR [rbp+0x88]
  409249:	mov    r8,rbx
  40924c:	push   r14
  40924e:	mov    rcx,rbx
  409251:	push   QWORD PTR [rsp+0x10]
  409255:	lea    rdx,[rip+0x251d4]        # 42e430 <_IO_stdin_used@@Base+0x2430>
  40925c:	push   r13
  40925e:	push   r15
  409260:	push   r12
  409262:	jmp    408d98 <__flatcc_fb_codegen_c@@Base+0x23b8>
  409267:	test   BYTE PTR [rbp+0x70],0x80
  40926b:	jne    408d06 <__flatcc_fb_codegen_c@@Base+0x2326>
  409271:	jmp    408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  409276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409280:	cmp    ax,0x6
  409284:	je     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  40928a:	mov    rax,QWORD PTR [rip+0x46d57]        # 44ffe8 <stderr@GLIBC_2.2.5>
  409291:	lea    rcx,[rip+0x24258]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  409298:	lea    rdx,[rip+0x2b822]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40929f:	lea    r9,[rip+0x24212]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  4092a6:	mov    esi,0x1
  4092ab:	mov    r8d,0x104
  4092b1:	mov    rdi,QWORD PTR [rax]
  4092b4:	xor    eax,eax
  4092b6:	call   4051f0 <__fprintf_chk@plt>
  4092bb:	lea    rcx,[rip+0x2bd56]        # 435018 <_IO_stdin_used@@Base+0x9018>
  4092c2:	lea    rsi,[rip+0x24227]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4092c9:	lea    rdi,[rip+0x2c839]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4092d0:	mov    edx,0x104
  4092d5:	call   4050f0 <__assert_fail@plt>
  4092da:	mov    rdi,QWORD PTR [rbx+0xd0]
  4092e1:	mov    r9,r12
  4092e4:	push   r14
  4092e6:	mov    r8,QWORD PTR [rbp+0x88]
  4092ed:	push   QWORD PTR [rsp+0x8]
  4092f1:	mov    rcx,rbx
  4092f4:	push   r13
  4092f6:	lea    rdx,[rip+0x24fe3]        # 42e2e0 <_IO_stdin_used@@Base+0x22e0>
  4092fd:	push   r15
  4092ff:	jmp    408ce5 <__flatcc_fb_codegen_c@@Base+0x2305>
  409304:	mov    rdi,QWORD PTR [rbx+0xd0]
  40930b:	mov    r9,r12
  40930e:	push   r14
  409310:	mov    r8,QWORD PTR [rbp+0x88]
  409317:	push   QWORD PTR [rsp+0x8]
  40931b:	mov    rcx,rbx
  40931e:	push   r13
  409320:	lea    rdx,[rip+0x24f79]        # 42e2a0 <_IO_stdin_used@@Base+0x22a0>
  409327:	push   r15
  409329:	jmp    408ce5 <__flatcc_fb_codegen_c@@Base+0x2305>
  40932e:	mov    rax,QWORD PTR [rip+0x46cb3]        # 44ffe8 <stderr@GLIBC_2.2.5>
  409335:	lea    rcx,[rip+0x23f24]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40933c:	lea    rdx,[rip+0x2b77e]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  409343:	lea    r9,[rip+0x25046]        # 42e390 <_IO_stdin_used@@Base+0x2390>
  40934a:	mov    esi,0x1
  40934f:	mov    r8d,0x620
  409355:	mov    rdi,QWORD PTR [rax]
  409358:	xor    eax,eax
  40935a:	call   4051f0 <__fprintf_chk@plt>
  40935f:	lea    rcx,[rip+0x2bc92]        # 434ff8 <_IO_stdin_used@@Base+0x8ff8>
  409366:	lea    rsi,[rip+0x23ef3]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40936d:	lea    rdi,[rip+0x2c795]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  409374:	mov    edx,0x620
  409379:	call   4050f0 <__assert_fail@plt>
  40937e:	mov    rax,QWORD PTR [rip+0x46c63]        # 44ffe8 <stderr@GLIBC_2.2.5>
  409385:	lea    rcx,[rip+0x23ed4]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40938c:	lea    rdx,[rip+0x2b72e]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  409393:	lea    r9,[rip+0x24d3e]        # 42e0d8 <_IO_stdin_used@@Base+0x20d8>
  40939a:	mov    esi,0x1
  40939f:	mov    r8d,0x53b
  4093a5:	mov    rdi,QWORD PTR [rax]
  4093a8:	xor    eax,eax
  4093aa:	call   4051f0 <__fprintf_chk@plt>
  4093af:	lea    rcx,[rip+0x2bc1a]        # 434fd0 <_IO_stdin_used@@Base+0x8fd0>
  4093b6:	lea    rsi,[rip+0x23ea3]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  4093bd:	lea    rdi,[rip+0x2c745]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4093c4:	mov    edx,0x53b
  4093c9:	call   4050f0 <__assert_fail@plt>
  4093ce:	lea    r13,[rip+0x2b87c]        # 434c51 <_IO_stdin_used@@Base+0x8c51>
  4093d5:	jmp    4090ec <__flatcc_fb_codegen_c@@Base+0x270c>
  4093da:	movzx  eax,WORD PTR [rbp+0x58]
  4093de:	cmp    ax,0x4
  4093e2:	je     40941e <__flatcc_fb_codegen_c@@Base+0x2a3e>
  4093e4:	jbe    409eec <__flatcc_fb_codegen_c@@Base+0x350c>
  4093ea:	cmp    ax,0x5
  4093ee:	jne    409280 <__flatcc_fb_codegen_c@@Base+0x28a0>
  4093f4:	lea    r10,[rip+0x2b691]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  4093fb:	lea    r14,[rip+0x3acec]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409402:	mov    r11,r10
  409405:	cmp    edx,0x9
  409408:	ja     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  40940e:	lea    rcx,[rip+0x2bb17]        # 434f2c <_IO_stdin_used@@Base+0x8f2c>
  409415:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409419:	add    rax,rcx
  40941c:	jmp    rax
  40941e:	lea    r10,[rip+0x2b667]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  409425:	lea    r14,[rip+0x3acc2]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40942c:	mov    r11,r10
  40942f:	cmp    edx,0x9
  409432:	ja     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409438:	lea    rcx,[rip+0x2bb15]        # 434f54 <_IO_stdin_used@@Base+0x8f54>
  40943f:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409443:	add    rax,rcx
  409446:	jmp    rax
  409448:	cmp    ax,0x3
  40944c:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409452:	mov    rdi,QWORD PTR [rsp+0x10]
  409457:	vmovsd xmm0,QWORD PTR [rbp+0x48]
  40945c:	lea    rcx,[rip+0x2b6c5]        # 434b28 <_IO_stdin_used@@Base+0x8b28>
  409463:	mov    edx,0x64
  409468:	mov    esi,0x1
  40946d:	mov    eax,0x1
  409472:	mov    QWORD PTR [rsp+0x38],r11
  409477:	mov    QWORD PTR [rsp+0x30],r10
  40947c:	call   405210 <__sprintf_chk@plt>
  409481:	mov    r10,QWORD PTR [rsp+0x30]
  409486:	mov    r11,QWORD PTR [rsp+0x38]
  40948b:	sub    rsp,0x8
  40948f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409496:	mov    r8,QWORD PTR [rbp+0x88]
  40949d:	push   QWORD PTR [rsp+0x18]
  4094a1:	push   r10
  4094a3:	lea    rdx,[rip+0x24afe]        # 42dfa8 <_IO_stdin_used@@Base+0x1fa8>
  4094aa:	xor    eax,eax
  4094ac:	mov    r9,r12
  4094af:	mov    rcx,rbx
  4094b2:	mov    QWORD PTR [rsp+0x48],r10
  4094b7:	push   r14
  4094b9:	mov    esi,0x1
  4094be:	push   r11
  4094c0:	push   rbx
  4094c1:	push   r13
  4094c3:	push   r15
  4094c5:	call   4051f0 <__fprintf_chk@plt>
  4094ca:	mov    rax,QWORD PTR [rbx+0xe0]
  4094d1:	add    rsp,0x40
  4094d5:	mov    r10,QWORD PTR [rsp+0x30]
  4094da:	mov    eax,DWORD PTR [rax+0x24]
  4094dd:	test   eax,eax
  4094df:	jne    409526 <__flatcc_fb_codegen_c@@Base+0x2b46>
  4094e1:	test   BYTE PTR [rbp+0x70],0x80
  4094e5:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  4094eb:	sub    rsp,0x8
  4094ef:	mov    rdi,QWORD PTR [rbx+0xd0]
  4094f6:	lea    rdx,[rip+0x24aeb]        # 42dfe8 <_IO_stdin_used@@Base+0x1fe8>
  4094fd:	push   r10
  4094ff:	mov    r9d,r15d
  409502:	mov    r8,r12
  409505:	mov    rcx,rbx
  409508:	mov    esi,0x1
  40950d:	xor    eax,eax
  40950f:	mov    QWORD PTR [rsp+0x40],r10
  409514:	push   r14
  409516:	push   r13
  409518:	call   4051f0 <__fprintf_chk@plt>
  40951d:	add    rsp,0x20
  409521:	mov    r10,QWORD PTR [rsp+0x30]
  409526:	test   BYTE PTR [rbp+0x70],0x80
  40952a:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  409530:	mov    eax,DWORD PTR [rsp+0x8]
  409534:	mov    rdi,QWORD PTR [rbx+0xd0]
  40953b:	mov    QWORD PTR [rsp+0x8],r10
  409540:	test   eax,eax
  409542:	jne    409cd3 <__flatcc_fb_codegen_c@@Base+0x32f3>
  409548:	lea    rdx,[rip+0x24701]        # 42dc50 <_IO_stdin_used@@Base+0x1c50>
  40954f:	mov    esi,0x1
  409554:	xor    eax,eax
  409556:	call   4051f0 <__fprintf_chk@plt>
  40955b:	sub    rsp,0x8
  40955f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409566:	lea    rdx,[rip+0x24ab3]        # 42e020 <_IO_stdin_used@@Base+0x2020>
  40956d:	mov    r10,QWORD PTR [rsp+0x10]
  409572:	xor    eax,eax
  409574:	mov    r9d,r15d
  409577:	mov    r8,r12
  40957a:	mov    rcx,rbx
  40957d:	mov    esi,0x1
  409582:	push   r10
  409584:	mov    QWORD PTR [rsp+0x18],r10
  409589:	push   r14
  40958b:	push   r13
  40958d:	call   4051f0 <__fprintf_chk@plt>
  409592:	mov    rax,QWORD PTR [rbx+0xe0]
  409599:	add    rsp,0x20
  40959d:	mov    r10,QWORD PTR [rsp+0x8]
  4095a2:	mov    eax,DWORD PTR [rax+0xa8]
  4095a8:	test   eax,eax
  4095aa:	je     4095e4 <__flatcc_fb_codegen_c@@Base+0x2c04>
  4095ac:	mov    rdi,QWORD PTR [rbx+0xd0]
  4095b3:	push   rbx
  4095b4:	lea    rdx,[rip+0x24f6d]        # 42e528 <_IO_stdin_used@@Base+0x2528>
  4095bb:	push   r10
  4095bd:	mov    r9d,r15d
  4095c0:	mov    r8,r12
  4095c3:	mov    rcx,rbx
  4095c6:	mov    esi,0x1
  4095cb:	xor    eax,eax
  4095cd:	mov    QWORD PTR [rsp+0x18],r10
  4095d2:	push   r14
  4095d4:	push   r13
  4095d6:	call   4051f0 <__fprintf_chk@plt>
  4095db:	add    rsp,0x20
  4095df:	mov    r10,QWORD PTR [rsp+0x8]
  4095e4:	sub    rsp,0x8
  4095e8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4095ef:	lea    rdx,[rip+0x24a62]        # 42e058 <_IO_stdin_used@@Base+0x2058>
  4095f6:	push   r10
  4095f8:	mov    r9d,r15d
  4095fb:	mov    r8,r12
  4095fe:	mov    rcx,rbx
  409601:	mov    esi,0x1
  409606:	xor    eax,eax
  409608:	mov    QWORD PTR [rsp+0x18],r10
  40960d:	push   r14
  40960f:	push   r13
  409611:	call   4051f0 <__fprintf_chk@plt>
  409616:	add    rsp,0x18
  40961a:	mov    r10,QWORD PTR [rsp+0x10]
  40961f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409626:	lea    rdx,[rip+0x24a6b]        # 42e098 <_IO_stdin_used@@Base+0x2098>
  40962d:	xor    eax,eax
  40962f:	mov    r9d,r15d
  409632:	mov    r8,r12
  409635:	mov    rcx,rbx
  409638:	mov    esi,0x1
  40963d:	push   r10
  40963f:	push   r14
  409641:	push   r13
  409643:	call   4051f0 <__fprintf_chk@plt>
  409648:	mov    rax,QWORD PTR [rbx+0xe0]
  40964f:	add    rsp,0x20
  409653:	mov    eax,DWORD PTR [rax+0xa8]
  409659:	test   eax,eax
  40965b:	je     408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  409661:	jmp    408f1c <__flatcc_fb_codegen_c@@Base+0x253c>
  409666:	lea    rax,[rip+0x2b630]        # 434c9d <_IO_stdin_used@@Base+0x8c9d>
  40966d:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  409672:	lea    rax,[rip+0x2b617]        # 434c90 <_IO_stdin_used@@Base+0x8c90>
  409679:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  40967e:	lea    rax,[rip+0x2b5e8]        # 434c6d <_IO_stdin_used@@Base+0x8c6d>
  409685:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  40968a:	lea    rax,[rip+0x2b60d]        # 434c9e <_IO_stdin_used@@Base+0x8c9e>
  409691:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  409696:	lea    rax,[rip+0x2b5f4]        # 434c91 <_IO_stdin_used@@Base+0x8c91>
  40969d:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  4096a2:	lea    rax,[rip+0x2b5d0]        # 434c79 <_IO_stdin_used@@Base+0x8c79>
  4096a9:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  4096ae:	lea    rax,[rip+0x2b5ab]        # 434c60 <_IO_stdin_used@@Base+0x8c60>
  4096b5:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  4096ba:	lea    rax,[rip+0x2b5ea]        # 434cab <_IO_stdin_used@@Base+0x8cab>
  4096c1:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  4096c6:	lea    rax,[rip+0x2b5dd]        # 434caa <_IO_stdin_used@@Base+0x8caa>
  4096cd:	jmp    40906b <__flatcc_fb_codegen_c@@Base+0x268b>
  4096d2:	movzx  eax,WORD PTR [rbp+0x58]
  4096d6:	cmp    ax,0x4
  4096da:	je     409e4a <__flatcc_fb_codegen_c@@Base+0x346a>
  4096e0:	jbe    409dfd <__flatcc_fb_codegen_c@@Base+0x341d>
  4096e6:	cmp    ax,0x5
  4096ea:	jne    409280 <__flatcc_fb_codegen_c@@Base+0x28a0>
  4096f0:	lea    r10,[rip+0x2b38f]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  4096f7:	lea    r14,[rip+0x3a9f0]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4096fe:	mov    r11,r10
  409701:	jmp    409405 <__flatcc_fb_codegen_c@@Base+0x2a25>
  409706:	movzx  eax,WORD PTR [rbp+0x58]
  40970a:	cmp    ax,0x4
  40970e:	je     409e60 <__flatcc_fb_codegen_c@@Base+0x3480>
  409714:	jbe    409e94 <__flatcc_fb_codegen_c@@Base+0x34b4>
  40971a:	cmp    ax,0x5
  40971e:	je     409e7a <__flatcc_fb_codegen_c@@Base+0x349a>
  409724:	cmp    ax,0x6
  409728:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40972e:	lea    r10,[rip+0x2b343]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  409735:	lea    r11,[rip+0x2b454]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40973c:	lea    r14,[rip+0x3a9ab]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409743:	lea    r8,[rip+0x2b370]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40974a:	movzx  r9d,BYTE PTR [rbp+0x48]
  40974f:	mov    rdi,QWORD PTR [rsp+0x10]
  409754:	lea    rcx,[rip+0x2b3c2]        # 434b1d <_IO_stdin_used@@Base+0x8b1d>
  40975b:	mov    edx,0x64
  409760:	mov    esi,0x1
  409765:	xor    eax,eax
  409767:	mov    QWORD PTR [rsp+0x38],r11
  40976c:	mov    QWORD PTR [rsp+0x30],r10
  409771:	call   405210 <__sprintf_chk@plt>
  409776:	mov    r10,QWORD PTR [rsp+0x30]
  40977b:	mov    r11,QWORD PTR [rsp+0x38]
  409780:	jmp    40948b <__flatcc_fb_codegen_c@@Base+0x2aab>
  409785:	lea    r10,[rip+0x2b2da]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  40978c:	lea    r14,[rip+0x3a95b]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409793:	lea    r11,[rip+0x2b3e8]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  40979a:	jmp    409201 <__flatcc_fb_codegen_c@@Base+0x2821>
  40979f:	movzx  eax,WORD PTR [rbp+0x58]
  4097a3:	cmp    ax,0x4
  4097a7:	je     409ed2 <__flatcc_fb_codegen_c@@Base+0x34f2>
  4097ad:	jbe    409eb8 <__flatcc_fb_codegen_c@@Base+0x34d8>
  4097b3:	cmp    ax,0x5
  4097b7:	je     409f02 <__flatcc_fb_codegen_c@@Base+0x3522>
  4097bd:	cmp    ax,0x6
  4097c1:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  4097c7:	lea    r10,[rip+0x2b2a1]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  4097ce:	lea    r11,[rip+0x2b3b4]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  4097d5:	lea    r14,[rip+0x3a912]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4097dc:	lea    r8,[rip+0x2b2ce]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  4097e3:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  4097e8:	lea    r10,[rip+0x2b26d]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  4097ef:	lea    r14,[rip+0x3a8f8]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4097f6:	lea    r11,[rip+0x2b37d]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  4097fd:	jmp    409201 <__flatcc_fb_codegen_c@@Base+0x2821>
  409802:	lea    r10,[rip+0x2b254]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  409809:	lea    r14,[rip+0x3a8de]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409810:	lea    r11,[rip+0x2b364]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  409817:	jmp    409201 <__flatcc_fb_codegen_c@@Base+0x2821>
  40981c:	lea    r10,[rip+0x2b254]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  409823:	lea    r14,[rip+0x3a8c4]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40982a:	lea    r11,[rip+0x2b35e]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  409831:	jmp    409201 <__flatcc_fb_codegen_c@@Base+0x2821>
  409836:	lea    r10,[rip+0x2b231]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  40983d:	lea    r14,[rip+0x3a8aa]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409844:	lea    r11,[rip+0x2b33d]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  40984b:	jmp    409201 <__flatcc_fb_codegen_c@@Base+0x2821>
  409850:	movzx  eax,WORD PTR [rbp+0x58]
  409854:	cmp    ax,0x4
  409858:	je     409fff <__flatcc_fb_codegen_c@@Base+0x361f>
  40985e:	jbe    409fe2 <__flatcc_fb_codegen_c@@Base+0x3602>
  409864:	cmp    ax,0x5
  409868:	je     409fc8 <__flatcc_fb_codegen_c@@Base+0x35e8>
  40986e:	cmp    ax,0x6
  409872:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409878:	lea    r10,[rip+0x2b1e6]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40987f:	lea    r11,[rip+0x2b2fb]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  409886:	lea    r14,[rip+0x3a861]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40988d:	jmp    409225 <__flatcc_fb_codegen_c@@Base+0x2845>
  409892:	mov    rax,QWORD PTR [rip+0x4674f]        # 44ffe8 <stderr@GLIBC_2.2.5>
  409899:	lea    rcx,[rip+0x23c50]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4098a0:	lea    rdx,[rip+0x2b21a]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4098a7:	lea    r9,[rip+0x23c0a]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  4098ae:	mov    esi,0x1
  4098b3:	mov    r8d,0xba
  4098b9:	mov    rdi,QWORD PTR [rax]
  4098bc:	xor    eax,eax
  4098be:	call   4051f0 <__fprintf_chk@plt>
  4098c3:	lea    rcx,[rip+0x2b716]        # 434fe0 <_IO_stdin_used@@Base+0x8fe0>
  4098ca:	lea    rsi,[rip+0x23c1f]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4098d1:	lea    rdi,[rip+0x2c231]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4098d8:	mov    edx,0xba
  4098dd:	call   4050f0 <__assert_fail@plt>
  4098e2:	cmp    eax,0x9
  4098e5:	ja     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  4098eb:	lea    rdx,[rip+0x2b68a]        # 434f7c <_IO_stdin_used@@Base+0x8f7c>
  4098f2:	movsxd rax,DWORD PTR [rdx+rax*4]
  4098f6:	add    rax,rdx
  4098f9:	jmp    rax
  4098fb:	mov    rax,QWORD PTR [rip+0x466e6]        # 44ffe8 <stderr@GLIBC_2.2.5>
  409902:	lea    rcx,[rip+0x23be7]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  409909:	lea    rdx,[rip+0x2b1b1]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  409910:	lea    r9,[rip+0x23ba1]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  409917:	mov    esi,0x1
  40991c:	mov    r8d,0x8d
  409922:	mov    rdi,QWORD PTR [rax]
  409925:	xor    eax,eax
  409927:	call   4051f0 <__fprintf_chk@plt>
  40992c:	lea    rcx,[rip+0x2b72d]        # 435060 <_IO_stdin_used@@Base+0x9060>
  409933:	lea    rsi,[rip+0x23bb6]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40993a:	lea    rdi,[rip+0x2c1c8]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  409941:	mov    edx,0x8d
  409946:	call   4050f0 <__assert_fail@plt>
  40994b:	lea    r8,[rip+0x2b167]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  409952:	mov    r9,QWORD PTR [rbp+0x48]
  409956:	lea    rcx,[rip+0x2b1b7]        # 434b14 <_IO_stdin_used@@Base+0x8b14>
  40995d:	mov    QWORD PTR [rsp+0x38],r11
  409962:	mov    QWORD PTR [rsp+0x30],r10
  409967:	mov    rdi,QWORD PTR [rsp+0x10]
  40996c:	mov    edx,0x64
  409971:	mov    esi,0x1
  409976:	xor    eax,eax
  409978:	call   405210 <__sprintf_chk@plt>
  40997d:	mov    r10,QWORD PTR [rsp+0x30]
  409982:	mov    r11,QWORD PTR [rsp+0x38]
  409987:	jmp    40948b <__flatcc_fb_codegen_c@@Base+0x2aab>
  40998c:	lea    r8,[rip+0x2b126]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  409993:	mov    QWORD PTR [rsp+0x38],r11
  409998:	mov    QWORD PTR [rsp+0x30],r10
  40999d:	lea    rcx,[rip+0x2b167]        # 434b0b <_IO_stdin_used@@Base+0x8b0b>
  4099a4:	mov    r9,QWORD PTR [rbp+0x48]
  4099a8:	jmp    409967 <__flatcc_fb_codegen_c@@Base+0x2f87>
  4099aa:	lea    r8,[rip+0x2b108]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  4099b1:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  4099b6:	lea    r8,[rip+0x2b0fd]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  4099bd:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  4099bf:	lea    r8,[rip+0x2b0e2]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  4099c6:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  4099cb:	lea    r8,[rip+0x2b0cd]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  4099d2:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  4099d7:	lea    r8,[rip+0x2b0dc]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  4099de:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  4099e3:	lea    r8,[rip+0x2b0be]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  4099ea:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  4099ef:	lea    r8,[rip+0x2b0a9]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  4099f6:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  4099fb:	lea    r8,[rip+0x2b0af]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  409a02:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  409a07:	lea    r8,[rip+0x2b0a2]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  409a0e:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  409a13:	lea    r8,[rip+0x2b08d]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  409a1a:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  409a1f:	lea    r8,[rip+0x2b078]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  409a26:	jmp    40974a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  409a2b:	lea    r8,[rip+0x2b076]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  409a32:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  409a37:	lea    r8,[rip+0x2b061]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  409a3e:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  409a43:	lea    r8,[rip+0x2b066]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  409a4a:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  409a4f:	lea    r8,[rip+0x2b051]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  409a56:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  409a5b:	lea    r8,[rip+0x2b03c]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  409a62:	jmp    409952 <__flatcc_fb_codegen_c@@Base+0x2f72>
  409a67:	lea    r8,[rip+0x2b043]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  409a6e:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  409a73:	lea    r8,[rip+0x2b036]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  409a7a:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  409a7f:	lea    r8,[rip+0x2b018]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  409a86:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  409a8b:	lea    r8,[rip+0x2b015]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  409a92:	jmp    409993 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  409a97:	mov    rax,QWORD PTR [rip+0x4654a]        # 44ffe8 <stderr@GLIBC_2.2.5>
  409a9e:	lea    rcx,[rip+0x23a4b]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  409aa5:	lea    rdx,[rip+0x2b015]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  409aac:	lea    r9,[rip+0x23a05]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  409ab3:	mov    esi,0x1
  409ab8:	mov    r8d,0xe2
  409abe:	mov    rdi,QWORD PTR [rax]
  409ac1:	xor    eax,eax
  409ac3:	call   4051f0 <__fprintf_chk@plt>
  409ac8:	lea    rcx,[rip+0x2b539]        # 435008 <_IO_stdin_used@@Base+0x9008>
  409acf:	lea    rsi,[rip+0x23a1a]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  409ad6:	lea    rdi,[rip+0x2c02c]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  409add:	mov    edx,0xe2
  409ae2:	call   4050f0 <__assert_fail@plt>
  409ae7:	lea    r8,[rip+0x2afcb]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  409aee:	movzx  r9d,BYTE PTR [rbp+0x48]
  409af3:	mov    rdi,QWORD PTR [rsp+0x10]
  409af8:	lea    rcx,[rip+0x2b01e]        # 434b1d <_IO_stdin_used@@Base+0x8b1d>
  409aff:	mov    edx,0x64
  409b04:	mov    esi,0x1
  409b09:	xor    eax,eax
  409b0b:	call   405210 <__sprintf_chk@plt>
  409b10:	sub    rsp,0x8
  409b14:	mov    rdi,QWORD PTR [rbx+0xd0]
  409b1b:	mov    r8,QWORD PTR [rbp+0x88]
  409b22:	push   QWORD PTR [rsp+0x18]
  409b26:	mov    rax,QWORD PTR [rsp+0x10]
  409b2b:	lea    rdx,[rip+0x247e6]        # 42e318 <_IO_stdin_used@@Base+0x2318>
  409b32:	mov    r9,r12
  409b35:	mov    rcx,rbx
  409b38:	mov    esi,0x1
  409b3d:	push   rax
  409b3e:	push   rax
  409b3f:	xor    eax,eax
  409b41:	push   r13
  409b43:	push   r15
  409b45:	call   4051f0 <__fprintf_chk@plt>
  409b4a:	mov    rax,QWORD PTR [rbx+0xe0]
  409b51:	add    rsp,0x30
  409b55:	mov    r14d,DWORD PTR [rax+0x24]
  409b59:	test   r14d,r14d
  409b5c:	jne    409b94 <__flatcc_fb_codegen_c@@Base+0x31b4>
  409b5e:	test   BYTE PTR [rbp+0x70],0x80
  409b62:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  409b68:	mov    rdi,QWORD PTR [rbx+0xd0]
  409b6f:	lea    rdx,[rip+0x2405a]        # 42dbd0 <_IO_stdin_used@@Base+0x1bd0>
  409b76:	push   QWORD PTR [rsp]
  409b79:	push   r13
  409b7b:	mov    r9d,r15d
  409b7e:	mov    r8,r12
  409b81:	mov    rcx,rbx
  409b84:	mov    esi,0x1
  409b89:	xor    eax,eax
  409b8b:	call   4051f0 <__fprintf_chk@plt>
  409b90:	pop    r10
  409b92:	pop    r11
  409b94:	test   BYTE PTR [rbp+0x70],0x80
  409b98:	je     408c43 <__flatcc_fb_codegen_c@@Base+0x2263>
  409b9e:	mov    r9d,DWORD PTR [rsp+0x8]
  409ba3:	mov    rdi,QWORD PTR [rbx+0xd0]
  409baa:	test   r9d,r9d
  409bad:	jne    409f1c <__flatcc_fb_codegen_c@@Base+0x353c>
  409bb3:	lea    rdx,[rip+0x24096]        # 42dc50 <_IO_stdin_used@@Base+0x1c50>
  409bba:	mov    esi,0x1
  409bbf:	xor    eax,eax
  409bc1:	call   4051f0 <__fprintf_chk@plt>
  409bc6:	mov    rdi,QWORD PTR [rbx+0xd0]
  409bcd:	lea    rdx,[rip+0x240bc]        # 42dc90 <_IO_stdin_used@@Base+0x1c90>
  409bd4:	push   QWORD PTR [rsp]
  409bd7:	push   r13
  409bd9:	mov    r9d,r15d
  409bdc:	mov    r8,r12
  409bdf:	xor    eax,eax
  409be1:	mov    rcx,rbx
  409be4:	mov    esi,0x1
  409be9:	call   4051f0 <__fprintf_chk@plt>
  409bee:	mov    rax,QWORD PTR [rbx+0xe0]
  409bf5:	pop    rdi
  409bf6:	pop    r8
  409bf8:	mov    r9d,DWORD PTR [rax+0xa8]
  409bff:	test   r9d,r9d
  409c02:	je     409c36 <__flatcc_fb_codegen_c@@Base+0x3256>
  409c04:	sub    rsp,0x8
  409c08:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c0f:	lea    rdx,[rip+0x24982]        # 42e598 <_IO_stdin_used@@Base+0x2598>
  409c16:	push   rbx
  409c17:	push   QWORD PTR [rsp+0x10]
  409c1b:	mov    r9d,r15d
  409c1e:	push   r13
  409c20:	mov    r8,r12
  409c23:	mov    rcx,rbx
  409c26:	mov    esi,0x1
  409c2b:	xor    eax,eax
  409c2d:	call   4051f0 <__fprintf_chk@plt>
  409c32:	add    rsp,0x20
  409c36:	mov    r14,QWORD PTR [rsp]
  409c3a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c41:	lea    rdx,[rip+0x24080]        # 42dcc8 <_IO_stdin_used@@Base+0x1cc8>
  409c48:	mov    r9d,r15d
  409c4b:	mov    r8,r12
  409c4e:	mov    rcx,rbx
  409c51:	mov    esi,0x1
  409c56:	xor    eax,eax
  409c58:	push   r14
  409c5a:	push   r13
  409c5c:	call   4051f0 <__fprintf_chk@plt>
  409c61:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c68:	lea    rdx,[rip+0x24099]        # 42dd08 <_IO_stdin_used@@Base+0x1d08>
  409c6f:	push   r14
  409c71:	push   r13
  409c73:	mov    rcx,rbx
  409c76:	xor    eax,eax
  409c78:	mov    r9d,r15d
  409c7b:	mov    r8,r12
  409c7e:	mov    esi,0x1
  409c83:	call   4051f0 <__fprintf_chk@plt>
  409c88:	mov    rax,QWORD PTR [rbx+0xe0]
  409c8f:	add    rsp,0x20
  409c93:	mov    ecx,DWORD PTR [rax+0xa8]
  409c99:	test   ecx,ecx
  409c9b:	je     408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  409ca1:	jmp    408f1c <__flatcc_fb_codegen_c@@Base+0x253c>
  409ca6:	lea    r8,[rip+0x2ae0c]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  409cad:	mov    r9,QWORD PTR [rbp+0x48]
  409cb1:	lea    rcx,[rip+0x2ae53]        # 434b0b <_IO_stdin_used@@Base+0x8b0b>
  409cb8:	mov    rdi,QWORD PTR [rsp+0x10]
  409cbd:	mov    edx,0x64
  409cc2:	mov    esi,0x1
  409cc7:	xor    eax,eax
  409cc9:	call   405210 <__sprintf_chk@plt>
  409cce:	jmp    409b10 <__flatcc_fb_codegen_c@@Base+0x3130>
  409cd3:	lea    rdx,[rip+0x23f2e]        # 42dc08 <_IO_stdin_used@@Base+0x1c08>
  409cda:	mov    esi,0x1
  409cdf:	xor    eax,eax
  409ce1:	call   4051f0 <__fprintf_chk@plt>
  409ce6:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ced:	lea    rdx,[rip+0x23f5c]        # 42dc50 <_IO_stdin_used@@Base+0x1c50>
  409cf4:	mov    esi,0x1
  409cf9:	xor    eax,eax
  409cfb:	call   4051f0 <__fprintf_chk@plt>
  409d00:	sub    rsp,0x8
  409d04:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d0b:	lea    rdx,[rip+0x2430e]        # 42e020 <_IO_stdin_used@@Base+0x2020>
  409d12:	mov    r10,QWORD PTR [rsp+0x10]
  409d17:	xor    eax,eax
  409d19:	mov    r9d,r15d
  409d1c:	mov    r8,r12
  409d1f:	mov    rcx,rbx
  409d22:	mov    esi,0x1
  409d27:	push   r10
  409d29:	mov    QWORD PTR [rsp+0x18],r10
  409d2e:	push   r14
  409d30:	push   r13
  409d32:	call   4051f0 <__fprintf_chk@plt>
  409d37:	mov    rax,QWORD PTR [rbx+0xe0]
  409d3e:	add    rsp,0x20
  409d42:	mov    r10,QWORD PTR [rsp+0x8]
  409d47:	mov    eax,DWORD PTR [rax+0xa8]
  409d4d:	test   eax,eax
  409d4f:	je     408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  409d55:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d5c:	lea    rdx,[rip+0x247c5]        # 42e528 <_IO_stdin_used@@Base+0x2528>
  409d63:	push   rbx
  409d64:	push   r10
  409d66:	push   r14
  409d68:	mov    r9d,r15d
  409d6b:	push   r13
  409d6d:	mov    r8,r12
  409d70:	mov    rcx,rbx
  409d73:	mov    esi,0x1
  409d78:	xor    eax,eax
  409d7a:	call   4051f0 <__fprintf_chk@plt>
  409d7f:	add    rsp,0x20
  409d83:	jmp    408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  409d88:	nop    DWORD PTR [rax+rax*1+0x0]
  409d90:	cmp    dx,0x3
  409d94:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409d9a:	cmp    eax,0xb
  409d9d:	je     40a019 <__flatcc_fb_codegen_c@@Base+0x3639>
  409da3:	vmovsd xmm0,QWORD PTR [rbp+0x48]
  409da8:	lea    rcx,[rip+0x2ad79]        # 434b28 <_IO_stdin_used@@Base+0x8b28>
  409daf:	mov    rdi,QWORD PTR [rsp+0x10]
  409db4:	mov    edx,0x64
  409db9:	mov    esi,0x1
  409dbe:	mov    eax,0x1
  409dc3:	call   405210 <__sprintf_chk@plt>
  409dc8:	jmp    409b10 <__flatcc_fb_codegen_c@@Base+0x3130>
  409dcd:	cmp    eax,0x9
  409dd0:	ja     409a97 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409dd6:	lea    rdx,[rip+0x2b1c7]        # 434fa4 <_IO_stdin_used@@Base+0x8fa4>
  409ddd:	movsxd rax,DWORD PTR [rdx+rax*4]
  409de1:	add    rax,rdx
  409de4:	jmp    rax
  409de6:	lea    r8,[rip+0x2accc]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  409ded:	mov    r9,QWORD PTR [rbp+0x48]
  409df1:	lea    rcx,[rip+0x2ad1c]        # 434b14 <_IO_stdin_used@@Base+0x8b14>
  409df8:	jmp    409cb8 <__flatcc_fb_codegen_c@@Base+0x32d8>
  409dfd:	cmp    ax,0x3
  409e01:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409e07:	vxorps xmm0,xmm0,xmm0
  409e0b:	mov    rdi,QWORD PTR [rsp+0x10]
  409e10:	lea    rcx,[rip+0x2ad0d]        # 434b24 <_IO_stdin_used@@Base+0x8b24>
  409e17:	mov    edx,0x64
  409e1c:	mov    esi,0x1
  409e21:	mov    eax,0x1
  409e26:	lea    r14,[rip+0x3a2c1]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409e2d:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbp+0x48]
  409e32:	vcvtss2sd xmm0,xmm0,xmm0
  409e36:	call   405210 <__sprintf_chk@plt>
  409e3b:	lea    r10,[rip+0x2ac44]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  409e42:	mov    r11,r10
  409e45:	jmp    40948b <__flatcc_fb_codegen_c@@Base+0x2aab>
  409e4a:	lea    r10,[rip+0x2ac35]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  409e51:	lea    r14,[rip+0x3a296]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409e58:	mov    r11,r10
  409e5b:	jmp    40942f <__flatcc_fb_codegen_c@@Base+0x2a4f>
  409e60:	lea    r10,[rip+0x2ac11]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  409e67:	lea    r11,[rip+0x2ad22]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  409e6e:	lea    r14,[rip+0x3a279]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409e75:	jmp    40942f <__flatcc_fb_codegen_c@@Base+0x2a4f>
  409e7a:	lea    r10,[rip+0x2abf7]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  409e81:	lea    r11,[rip+0x2ad08]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  409e88:	lea    r14,[rip+0x3a25f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409e8f:	jmp    409405 <__flatcc_fb_codegen_c@@Base+0x2a25>
  409e94:	cmp    ax,0x3
  409e98:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409e9e:	lea    r10,[rip+0x2abd3]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  409ea5:	lea    r11,[rip+0x2ace4]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  409eac:	lea    r14,[rip+0x3a23b]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409eb3:	jmp    409452 <__flatcc_fb_codegen_c@@Base+0x2a72>
  409eb8:	cmp    ax,0x3
  409ebc:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409ec2:	lea    r10,[rip+0x2aba6]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  409ec9:	lea    r11,[rip+0x2acb9]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  409ed0:	jmp    409eac <__flatcc_fb_codegen_c@@Base+0x34cc>
  409ed2:	lea    r10,[rip+0x2ab96]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  409ed9:	lea    r11,[rip+0x2aca9]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  409ee0:	lea    r14,[rip+0x3a207]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409ee7:	jmp    40942f <__flatcc_fb_codegen_c@@Base+0x2a4f>
  409eec:	cmp    ax,0x3
  409ef0:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409ef6:	lea    r10,[rip+0x2ab8f]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  409efd:	mov    r11,r10
  409f00:	jmp    409eac <__flatcc_fb_codegen_c@@Base+0x34cc>
  409f02:	lea    r10,[rip+0x2ab66]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  409f09:	lea    r11,[rip+0x2ac79]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  409f10:	lea    r14,[rip+0x3a1d7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409f17:	jmp    409405 <__flatcc_fb_codegen_c@@Base+0x2a25>
  409f1c:	lea    rdx,[rip+0x23ce5]        # 42dc08 <_IO_stdin_used@@Base+0x1c08>
  409f23:	mov    esi,0x1
  409f28:	xor    eax,eax
  409f2a:	call   4051f0 <__fprintf_chk@plt>
  409f2f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f36:	lea    rdx,[rip+0x23d13]        # 42dc50 <_IO_stdin_used@@Base+0x1c50>
  409f3d:	mov    esi,0x1
  409f42:	xor    eax,eax
  409f44:	call   4051f0 <__fprintf_chk@plt>
  409f49:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f50:	lea    rdx,[rip+0x23d39]        # 42dc90 <_IO_stdin_used@@Base+0x1c90>
  409f57:	push   QWORD PTR [rsp]
  409f5a:	push   r13
  409f5c:	mov    r8,r12
  409f5f:	mov    esi,0x1
  409f64:	xor    eax,eax
  409f66:	mov    r9d,r15d
  409f69:	mov    rcx,rbx
  409f6c:	call   4051f0 <__fprintf_chk@plt>
  409f71:	mov    rax,QWORD PTR [rbx+0xe0]
  409f78:	pop    rsi
  409f79:	pop    rdi
  409f7a:	mov    r8d,DWORD PTR [rax+0xa8]
  409f81:	test   r8d,r8d
  409f84:	je     408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  409f8a:	sub    rsp,0x8
  409f8e:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f95:	lea    rdx,[rip+0x245fc]        # 42e598 <_IO_stdin_used@@Base+0x2598>
  409f9c:	push   rbx
  409f9d:	push   QWORD PTR [rsp+0x10]
  409fa1:	mov    r9d,r15d
  409fa4:	push   r13
  409fa6:	mov    r8,r12
  409fa9:	mov    rcx,rbx
  409fac:	mov    esi,0x1
  409fb1:	xor    eax,eax
  409fb3:	call   4051f0 <__fprintf_chk@plt>
  409fb8:	add    rsp,0x20
  409fbc:	jmp    408d20 <__flatcc_fb_codegen_c@@Base+0x2340>
  409fc1:	nop    DWORD PTR [rax+0x0]
  409fc8:	lea    r10,[rip+0x2aa96]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  409fcf:	lea    r11,[rip+0x2abab]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  409fd6:	lea    r14,[rip+0x3a111]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  409fdd:	jmp    409405 <__flatcc_fb_codegen_c@@Base+0x2a25>
  409fe2:	cmp    ax,0x3
  409fe6:	jne    40928a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409fec:	lea    r10,[rip+0x2aa72]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  409ff3:	lea    r11,[rip+0x2ab87]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  409ffa:	jmp    409eac <__flatcc_fb_codegen_c@@Base+0x34cc>
  409fff:	lea    r10,[rip+0x2aa5f]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40a006:	lea    r11,[rip+0x2ab74]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40a00d:	lea    r14,[rip+0x3a0da]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40a014:	jmp    40942f <__flatcc_fb_codegen_c@@Base+0x2a4f>
  40a019:	vxorps xmm0,xmm0,xmm0
  40a01d:	lea    rcx,[rip+0x2ab00]        # 434b24 <_IO_stdin_used@@Base+0x8b24>
  40a024:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbp+0x48]
  40a029:	vcvtss2sd xmm0,xmm0,xmm0
  40a02d:	jmp    409daf <__flatcc_fb_codegen_c@@Base+0x33cf>
  40a032:	call   4050d0 <__stack_chk_fail@plt>
  40a037:	mov    rax,QWORD PTR [rip+0x45faa]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40a03e:	lea    rcx,[rip+0x2321b]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40a045:	lea    rdx,[rip+0x2aa75]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40a04c:	lea    r9,[rip+0x2438d]        # 42e3e0 <_IO_stdin_used@@Base+0x23e0>
  40a053:	mov    esi,0x1
  40a058:	mov    r8d,0x630
  40a05e:	mov    rdi,QWORD PTR [rax]
  40a061:	xor    eax,eax
  40a063:	call   4051f0 <__fprintf_chk@plt>
  40a068:	lea    rcx,[rip+0x2af89]        # 434ff8 <_IO_stdin_used@@Base+0x8ff8>
  40a06f:	lea    rsi,[rip+0x231ea]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40a076:	lea    rdi,[rip+0x2ba8c]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40a07d:	mov    edx,0x630
  40a082:	call   4050f0 <__assert_fail@plt>
  40a087:	lea    rcx,[rip+0x2af6a]        # 434ff8 <_IO_stdin_used@@Base+0x8ff8>
  40a08e:	lea    rsi,[rip+0x231cb]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40a095:	lea    rdi,[rip+0x23e24]        # 42dec0 <_IO_stdin_used@@Base+0x1ec0>
  40a09c:	mov    edx,0x552
  40a0a1:	call   4050f0 <__assert_fail@plt>
  40a0a6:	lea    r8,[rip+0x2a9f2]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40a0ad:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a0b2:	lea    r8,[rip+0x2a9f8]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40a0b9:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a0be:	lea    r8,[rip+0x2a9e3]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40a0c5:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a0ca:	lea    r8,[rip+0x2a9e9]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40a0d1:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a0d6:	lea    r8,[rip+0x2a9d3]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40a0dd:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a0e2:	lea    r8,[rip+0x2a9be]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40a0e9:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a0ee:	lea    r8,[rip+0x2a9a9]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40a0f5:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a0fa:	lea    rcx,[rip+0x2aecf]        # 434fd0 <_IO_stdin_used@@Base+0x8fd0>
  40a101:	lea    rsi,[rip+0x23158]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40a108:	lea    rdi,[rip+0x24001]        # 42e110 <_IO_stdin_used@@Base+0x2110>
  40a10f:	mov    edx,0x53f
  40a114:	call   4050f0 <__assert_fail@plt>
  40a119:	lea    r8,[rip+0x2a991]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40a120:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a125:	lea    r8,[rip+0x2a97c]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40a12c:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a131:	lea    r8,[rip+0x2a967]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40a138:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a13d:	lea    r8,[rip+0x2a963]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40a144:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a149:	lea    r8,[rip+0x2a94e]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40a150:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a155:	lea    r8,[rip+0x2a943]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40a15c:	jmp    409cad <__flatcc_fb_codegen_c@@Base+0x32cd>
  40a161:	lea    r8,[rip+0x2a952]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40a168:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a16d:	lea    r8,[rip+0x2a93c]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40a174:	jmp    409ded <__flatcc_fb_codegen_c@@Base+0x340d>
  40a179:	lea    r8,[rip+0x2a931]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40a180:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a185:	lea    r8,[rip+0x2a91c]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40a18c:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a191:	lea    r8,[rip+0x2a922]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40a198:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a19d:	lea    r8,[rip+0x2a90c]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40a1a4:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a1a9:	lea    r8,[rip+0x2a8f7]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40a1b0:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a1b5:	lea    r8,[rip+0x2a8e2]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40a1bc:	jmp    409aee <__flatcc_fb_codegen_c@@Base+0x310e>
  40a1c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a1cc:	nop    DWORD PTR [rax+0x0]

000000000040a1d0 <__flatcc_fb_gen_common_c_header@@Base>:
  40a1d0:	push   rbp
  40a1d1:	push   rbx
  40a1d2:	lea    rbp,[rdi+0x66]
  40a1d6:	mov    rbx,rdi
  40a1d9:	lea    rdx,[rip+0x24400]        # 42e5e0 <_IO_stdin_used@@Base+0x25e0>
  40a1e0:	mov    esi,0x1
  40a1e5:	sub    rsp,0x8
  40a1e9:	mov    rdi,QWORD PTR [rdi+0xd0]
  40a1f0:	mov    r8,rbp
  40a1f3:	mov    rcx,rbp
  40a1f6:	xor    eax,eax
  40a1f8:	call   4051f0 <__fprintf_chk@plt>
  40a1fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a204:	lea    rdx,[rip+0x2440d]        # 42e618 <_IO_stdin_used@@Base+0x2618>
  40a20b:	mov    esi,0x1
  40a210:	xor    eax,eax
  40a212:	call   4051f0 <__fprintf_chk@plt>
  40a217:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a21e:	lea    rdx,[rip+0x2444b]        # 42e670 <_IO_stdin_used@@Base+0x2670>
  40a225:	xor    eax,eax
  40a227:	mov    esi,0x1
  40a22c:	call   4051f0 <__fprintf_chk@plt>
  40a231:	mov    rax,QWORD PTR [rbx+0xe0]
  40a238:	mov    r9d,DWORD PTR [rax+0xa8]
  40a23f:	test   r9d,r9d
  40a242:	je     40aee0 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
  40a248:	mov    r8d,DWORD PTR [rax+0xac]
  40a24f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a256:	test   r8d,r8d
  40a259:	jne    40aec0 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
  40a25f:	lea    rdx,[rip+0x244f2]        # 42e758 <_IO_stdin_used@@Base+0x2758>
  40a266:	mov    esi,0x1
  40a26b:	xor    eax,eax
  40a26d:	call   4051f0 <__fprintf_chk@plt>
  40a272:	lea    rdi,[rip+0x2aa55]        # 434cce <_IO_stdin_used@@Base+0x8cce>
  40a279:	mov    ecx,0xd
  40a27e:	mov    rsi,rbx
  40a281:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a283:	jne    40ae18 <__flatcc_fb_gen_common_c_header@@Base+0xc48>
  40a289:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a290:	lea    rdx,[rip+0x249d1]        # 42ec68 <_IO_stdin_used@@Base+0x2c68>
  40a297:	mov    r8,rbx
  40a29a:	mov    rcx,rbx
  40a29d:	mov    esi,0x1
  40a2a2:	xor    eax,eax
  40a2a4:	call   4051f0 <__fprintf_chk@plt>
  40a2a9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a2b0:	push   rbx
  40a2b1:	lea    rdx,[rip+0x24a40]        # 42ecf8 <_IO_stdin_used@@Base+0x2cf8>
  40a2b8:	push   rbx
  40a2b9:	push   rbx
  40a2ba:	mov    r9,rbx
  40a2bd:	push   rbx
  40a2be:	mov    r8,rbx
  40a2c1:	mov    rcx,rbx
  40a2c4:	mov    esi,0x1
  40a2c9:	xor    eax,eax
  40a2cb:	call   4051f0 <__fprintf_chk@plt>
  40a2d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a2d7:	lea    rdx,[rip+0x24b92]        # 42ee70 <_IO_stdin_used@@Base+0x2e70>
  40a2de:	add    rsp,0x20
  40a2e2:	mov    r8,rbx
  40a2e5:	mov    rcx,rbx
  40a2e8:	mov    esi,0x1
  40a2ed:	xor    eax,eax
  40a2ef:	call   4051f0 <__fprintf_chk@plt>
  40a2f4:	sub    rsp,0x8
  40a2f8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a2ff:	lea    rdx,[rip+0x24bc2]        # 42eec8 <_IO_stdin_used@@Base+0x2ec8>
  40a306:	push   rbx
  40a307:	mov    rcx,rbx
  40a30a:	mov    esi,0x1
  40a30f:	xor    eax,eax
  40a311:	mov    r9,rbx
  40a314:	mov    r8,rbx
  40a317:	call   4051f0 <__fprintf_chk@plt>
  40a31c:	mov    rax,QWORD PTR [rbx+0xe0]
  40a323:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a32a:	pop    rdx
  40a32b:	pop    rcx
  40a32c:	mov    esi,DWORD PTR [rax+0x24]
  40a32f:	test   esi,esi
  40a331:	je     40adb0 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
  40a337:	lea    rdx,[rip+0x24cb2]        # 42eff0 <_IO_stdin_used@@Base+0x2ff0>
  40a33e:	mov    rcx,rbx
  40a341:	mov    esi,0x1
  40a346:	xor    eax,eax
  40a348:	call   4051f0 <__fprintf_chk@plt>
  40a34d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a354:	lea    rdx,[rip+0x24cc5]        # 42f020 <_IO_stdin_used@@Base+0x3020>
  40a35b:	mov    r8,rbx
  40a35e:	mov    rcx,rbx
  40a361:	mov    esi,0x1
  40a366:	xor    eax,eax
  40a368:	call   4051f0 <__fprintf_chk@plt>
  40a36d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a374:	push   rbx
  40a375:	lea    rdx,[rip+0x24d7c]        # 42f0f8 <_IO_stdin_used@@Base+0x30f8>
  40a37c:	push   rbx
  40a37d:	mov    r9,rbx
  40a380:	mov    r8,rbx
  40a383:	mov    rcx,rbx
  40a386:	mov    esi,0x1
  40a38b:	xor    eax,eax
  40a38d:	call   4051f0 <__fprintf_chk@plt>
  40a392:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a399:	push   rbx
  40a39a:	lea    rdx,[rip+0x24f07]        # 42f2a8 <_IO_stdin_used@@Base+0x32a8>
  40a3a1:	push   rbx
  40a3a2:	mov    r9,rbx
  40a3a5:	mov    r8,rbx
  40a3a8:	mov    rcx,rbx
  40a3ab:	mov    esi,0x1
  40a3b0:	xor    eax,eax
  40a3b2:	call   4051f0 <__fprintf_chk@plt>
  40a3b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a3be:	lea    rdx,[rip+0x24f83]        # 42f348 <_IO_stdin_used@@Base+0x3348>
  40a3c5:	add    rsp,0x20
  40a3c9:	mov    r9,rbx
  40a3cc:	mov    r8,rbx
  40a3cf:	mov    rcx,rbx
  40a3d2:	mov    esi,0x1
  40a3d7:	xor    eax,eax
  40a3d9:	call   4051f0 <__fprintf_chk@plt>
  40a3de:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a3e5:	lea    rdx,[rip+0x2503c]        # 42f428 <_IO_stdin_used@@Base+0x3428>
  40a3ec:	mov    r9,rbx
  40a3ef:	mov    r8,rbx
  40a3f2:	mov    rcx,rbx
  40a3f5:	mov    esi,0x1
  40a3fa:	xor    eax,eax
  40a3fc:	call   4051f0 <__fprintf_chk@plt>
  40a401:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a408:	lea    rdx,[rip+0x250f9]        # 42f508 <_IO_stdin_used@@Base+0x3508>
  40a40f:	mov    r9,rbx
  40a412:	mov    r8,rbx
  40a415:	mov    rcx,rbx
  40a418:	mov    esi,0x1
  40a41d:	xor    eax,eax
  40a41f:	call   4051f0 <__fprintf_chk@plt>
  40a424:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a42b:	push   rbx
  40a42c:	lea    rdx,[rip+0x251ad]        # 42f5e0 <_IO_stdin_used@@Base+0x35e0>
  40a433:	push   rbx
  40a434:	xor    eax,eax
  40a436:	mov    r9,rbx
  40a439:	mov    r8,rbx
  40a43c:	mov    rcx,rbx
  40a43f:	mov    esi,0x1
  40a444:	call   4051f0 <__fprintf_chk@plt>
  40a449:	mov    rax,QWORD PTR [rbx+0xe0]
  40a450:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a457:	pop    r10
  40a459:	pop    r11
  40a45b:	mov    eax,DWORD PTR [rax+0x24]
  40a45e:	test   eax,eax
  40a460:	je     40ad90 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
  40a466:	lea    rdx,[rip+0x2525b]        # 42f6c8 <_IO_stdin_used@@Base+0x36c8>
  40a46d:	mov    rcx,rbx
  40a470:	mov    esi,0x1
  40a475:	xor    eax,eax
  40a477:	call   4051f0 <__fprintf_chk@plt>
  40a47c:	sub    rsp,0x8
  40a480:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a487:	lea    rdx,[rip+0x2526a]        # 42f6f8 <_IO_stdin_used@@Base+0x36f8>
  40a48e:	push   rbx
  40a48f:	mov    r9,rbx
  40a492:	mov    r8,rbx
  40a495:	mov    rcx,rbx
  40a498:	mov    esi,0x1
  40a49d:	xor    eax,eax
  40a49f:	call   4051f0 <__fprintf_chk@plt>
  40a4a4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a4ab:	lea    rdx,[rip+0x252e6]        # 42f798 <_IO_stdin_used@@Base+0x3798>
  40a4b2:	mov    r8,rbx
  40a4b5:	mov    rcx,rbx
  40a4b8:	mov    esi,0x1
  40a4bd:	xor    eax,eax
  40a4bf:	call   4051f0 <__fprintf_chk@plt>
  40a4c4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a4cb:	lea    rdx,[rip+0x2530e]        # 42f7e0 <_IO_stdin_used@@Base+0x37e0>
  40a4d2:	mov    r9,rbx
  40a4d5:	mov    r8,rbx
  40a4d8:	mov    rcx,rbx
  40a4db:	mov    esi,0x1
  40a4e0:	xor    eax,eax
  40a4e2:	call   4051f0 <__fprintf_chk@plt>
  40a4e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a4ee:	lea    rdx,[rip+0x2537b]        # 42f870 <_IO_stdin_used@@Base+0x3870>
  40a4f5:	mov    r8,rbx
  40a4f8:	mov    rcx,rbx
  40a4fb:	mov    esi,0x1
  40a500:	xor    eax,eax
  40a502:	call   4051f0 <__fprintf_chk@plt>
  40a507:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a50e:	lea    rdx,[rip+0x253d3]        # 42f8e8 <_IO_stdin_used@@Base+0x38e8>
  40a515:	mov    r9,rbx
  40a518:	mov    r8,rbx
  40a51b:	mov    rcx,rbx
  40a51e:	mov    esi,0x1
  40a523:	xor    eax,eax
  40a525:	mov    QWORD PTR [rsp],rbx
  40a529:	call   4051f0 <__fprintf_chk@plt>
  40a52e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a535:	lea    rdx,[rip+0x254cc]        # 42fa08 <_IO_stdin_used@@Base+0x3a08>
  40a53c:	mov    r8,rbx
  40a53f:	mov    rcx,rbx
  40a542:	mov    esi,0x1
  40a547:	xor    eax,eax
  40a549:	call   4051f0 <__fprintf_chk@plt>
  40a54e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a555:	lea    rdx,[rip+0x25524]        # 42fa80 <_IO_stdin_used@@Base+0x3a80>
  40a55c:	mov    r8,rbx
  40a55f:	mov    rcx,rbx
  40a562:	mov    esi,0x1
  40a567:	xor    eax,eax
  40a569:	call   4051f0 <__fprintf_chk@plt>
  40a56e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a575:	lea    rdx,[rip+0x25584]        # 42fb00 <_IO_stdin_used@@Base+0x3b00>
  40a57c:	mov    r9,rbx
  40a57f:	mov    r8,rbx
  40a582:	mov    rcx,rbx
  40a585:	mov    esi,0x1
  40a58a:	xor    eax,eax
  40a58c:	mov    QWORD PTR [rsp],rbx
  40a590:	call   4051f0 <__fprintf_chk@plt>
  40a595:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a59c:	mov    QWORD PTR [rsp],rbx
  40a5a0:	lea    rdx,[rip+0x255c1]        # 42fb68 <_IO_stdin_used@@Base+0x3b68>
  40a5a7:	push   rbx
  40a5a8:	push   rbx
  40a5a9:	mov    r9,rbx
  40a5ac:	push   rbx
  40a5ad:	push   rbx
  40a5ae:	mov    r8,rbx
  40a5b1:	push   rbx
  40a5b2:	push   rbx
  40a5b3:	mov    rcx,rbx
  40a5b6:	push   rbx
  40a5b7:	push   rbx
  40a5b8:	mov    esi,0x1
  40a5bd:	xor    eax,eax
  40a5bf:	call   4051f0 <__fprintf_chk@plt>
  40a5c4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a5cb:	lea    rdx,[rip+0x256be]        # 42fc90 <_IO_stdin_used@@Base+0x3c90>
  40a5d2:	add    rsp,0x50
  40a5d6:	mov    rcx,rbx
  40a5d9:	mov    esi,0x1
  40a5de:	xor    eax,eax
  40a5e0:	call   4051f0 <__fprintf_chk@plt>
  40a5e5:	sub    rsp,0x8
  40a5e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a5f0:	lea    rdx,[rip+0x256c1]        # 42fcb8 <_IO_stdin_used@@Base+0x3cb8>
  40a5f7:	push   rbx
  40a5f8:	mov    r9,rbx
  40a5fb:	mov    r8,rbx
  40a5fe:	mov    rcx,rbx
  40a601:	mov    esi,0x1
  40a606:	xor    eax,eax
  40a608:	call   4051f0 <__fprintf_chk@plt>
  40a60d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a614:	push   rbx
  40a615:	lea    rdx,[rip+0x25724]        # 42fd40 <_IO_stdin_used@@Base+0x3d40>
  40a61c:	push   rbx
  40a61d:	push   rbx
  40a61e:	mov    r9,rbx
  40a621:	push   rbx
  40a622:	push   rbx
  40a623:	mov    r8,rbx
  40a626:	push   rbx
  40a627:	push   rbx
  40a628:	mov    rcx,rbx
  40a62b:	push   rbx
  40a62c:	push   rbx
  40a62d:	mov    esi,0x1
  40a632:	push   rbx
  40a633:	push   rbx
  40a634:	xor    eax,eax
  40a636:	push   rbx
  40a637:	push   rbx
  40a638:	push   rbx
  40a639:	call   4051f0 <__fprintf_chk@plt>
  40a63e:	add    rsp,0x78
  40a642:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a649:	lea    rdx,[rip+0x258a0]        # 42fef0 <_IO_stdin_used@@Base+0x3ef0>
  40a650:	push   rbx
  40a651:	push   rbx
  40a652:	mov    r9,rbx
  40a655:	push   rbx
  40a656:	push   rbx
  40a657:	mov    r8,rbx
  40a65a:	push   rbx
  40a65b:	mov    rcx,rbx
  40a65e:	mov    esi,0x1
  40a663:	xor    eax,eax
  40a665:	call   4051f0 <__fprintf_chk@plt>
  40a66a:	add    rsp,0x28
  40a66e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a675:	lea    rdx,[rip+0x2593c]        # 42ffb8 <_IO_stdin_used@@Base+0x3fb8>
  40a67c:	push   rbx
  40a67d:	mov    r9,rbx
  40a680:	mov    r8,rbx
  40a683:	mov    rcx,rbx
  40a686:	mov    esi,0x1
  40a68b:	xor    eax,eax
  40a68d:	call   4051f0 <__fprintf_chk@plt>
  40a692:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a699:	lea    rdx,[rip+0x259b8]        # 430058 <_IO_stdin_used@@Base+0x4058>
  40a6a0:	mov    r9,rbx
  40a6a3:	mov    r8,rbx
  40a6a6:	mov    rcx,rbx
  40a6a9:	mov    esi,0x1
  40a6ae:	xor    eax,eax
  40a6b0:	mov    QWORD PTR [rsp],rbx
  40a6b4:	call   4051f0 <__fprintf_chk@plt>
  40a6b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6c0:	lea    rdx,[rip+0x25a09]        # 4300d0 <_IO_stdin_used@@Base+0x40d0>
  40a6c7:	mov    rcx,rbx
  40a6ca:	mov    esi,0x1
  40a6cf:	xor    eax,eax
  40a6d1:	call   4051f0 <__fprintf_chk@plt>
  40a6d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6dd:	lea    rdx,[rip+0x25cc4]        # 4303a8 <_IO_stdin_used@@Base+0x43a8>
  40a6e4:	mov    rcx,rbx
  40a6e7:	mov    esi,0x1
  40a6ec:	xor    eax,eax
  40a6ee:	call   4051f0 <__fprintf_chk@plt>
  40a6f3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6fa:	lea    rdx,[rip+0x25f3f]        # 430640 <_IO_stdin_used@@Base+0x4640>
  40a701:	mov    rcx,rbx
  40a704:	mov    esi,0x1
  40a709:	xor    eax,eax
  40a70b:	call   4051f0 <__fprintf_chk@plt>
  40a710:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a717:	lea    rdx,[rip+0x25faa]        # 4306c8 <_IO_stdin_used@@Base+0x46c8>
  40a71e:	mov    rcx,rbx
  40a721:	mov    esi,0x1
  40a726:	xor    eax,eax
  40a728:	call   4051f0 <__fprintf_chk@plt>
  40a72d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a734:	lea    rdx,[rip+0x25ffd]        # 430738 <_IO_stdin_used@@Base+0x4738>
  40a73b:	mov    rcx,rbx
  40a73e:	mov    esi,0x1
  40a743:	xor    eax,eax
  40a745:	call   4051f0 <__fprintf_chk@plt>
  40a74a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a751:	lea    rdx,[rip+0x261c8]        # 430920 <_IO_stdin_used@@Base+0x4920>
  40a758:	mov    r9,rbx
  40a75b:	mov    r8,rbx
  40a75e:	mov    rcx,rbx
  40a761:	mov    esi,0x1
  40a766:	xor    eax,eax
  40a768:	mov    QWORD PTR [rsp],rbx
  40a76c:	call   4051f0 <__fprintf_chk@plt>
  40a771:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a778:	mov    QWORD PTR [rsp],rbx
  40a77c:	lea    rdx,[rip+0x2624d]        # 4309d0 <_IO_stdin_used@@Base+0x49d0>
  40a783:	push   rbx
  40a784:	push   rbx
  40a785:	mov    r9,rbx
  40a788:	mov    r8,rbx
  40a78b:	mov    rcx,rbx
  40a78e:	mov    esi,0x1
  40a793:	xor    eax,eax
  40a795:	call   4051f0 <__fprintf_chk@plt>
  40a79a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a7a1:	lea    rdx,[rip+0x26408]        # 430bb0 <_IO_stdin_used@@Base+0x4bb0>
  40a7a8:	add    rsp,0x20
  40a7ac:	mov    r9,rbx
  40a7af:	mov    r8,rbx
  40a7b2:	mov    rcx,rbx
  40a7b5:	mov    esi,0x1
  40a7ba:	xor    eax,eax
  40a7bc:	call   4051f0 <__fprintf_chk@plt>
  40a7c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a7c8:	push   rbx
  40a7c9:	lea    rdx,[rip+0x26600]        # 430dd0 <_IO_stdin_used@@Base+0x4dd0>
  40a7d0:	push   rbx
  40a7d1:	push   rbx
  40a7d2:	mov    r9,rbx
  40a7d5:	push   rbx
  40a7d6:	push   rbx
  40a7d7:	mov    r8,rbx
  40a7da:	push   rbx
  40a7db:	push   rbx
  40a7dc:	mov    rcx,rbx
  40a7df:	push   rbx
  40a7e0:	mov    esi,0x1
  40a7e5:	xor    eax,eax
  40a7e7:	call   4051f0 <__fprintf_chk@plt>
  40a7ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a7f3:	lea    rdx,[rip+0x2672e]        # 430f28 <_IO_stdin_used@@Base+0x4f28>
  40a7fa:	add    rsp,0x40
  40a7fe:	mov    r8,rbx
  40a801:	mov    rcx,rbx
  40a804:	mov    esi,0x1
  40a809:	xor    eax,eax
  40a80b:	call   4051f0 <__fprintf_chk@plt>
  40a810:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a817:	lea    rdx,[rip+0x267da]        # 430ff8 <_IO_stdin_used@@Base+0x4ff8>
  40a81e:	mov    r9,rbx
  40a821:	mov    r8,rbx
  40a824:	mov    rcx,rbx
  40a827:	mov    esi,0x1
  40a82c:	xor    eax,eax
  40a82e:	call   4051f0 <__fprintf_chk@plt>
  40a833:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a83a:	lea    rdx,[rip+0x2686f]        # 4310b0 <_IO_stdin_used@@Base+0x50b0>
  40a841:	mov    r9,rbx
  40a844:	mov    r8,rbx
  40a847:	mov    rcx,rbx
  40a84a:	mov    esi,0x1
  40a84f:	xor    eax,eax
  40a851:	call   4051f0 <__fprintf_chk@plt>
  40a856:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a85d:	lea    rdx,[rip+0x26a04]        # 431268 <_IO_stdin_used@@Base+0x5268>
  40a864:	mov    rcx,rbx
  40a867:	mov    esi,0x1
  40a86c:	xor    eax,eax
  40a86e:	call   4051f0 <__fprintf_chk@plt>
  40a873:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a87a:	lea    rdx,[rip+0x26a97]        # 431318 <_IO_stdin_used@@Base+0x5318>
  40a881:	mov    rcx,rbx
  40a884:	mov    esi,0x1
  40a889:	xor    eax,eax
  40a88b:	call   4051f0 <__fprintf_chk@plt>
  40a890:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a897:	lea    rdx,[rip+0x26baa]        # 431448 <_IO_stdin_used@@Base+0x5448>
  40a89e:	mov    r8,rbx
  40a8a1:	mov    rcx,rbx
  40a8a4:	mov    esi,0x1
  40a8a9:	xor    eax,eax
  40a8ab:	call   4051f0 <__fprintf_chk@plt>
  40a8b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8b7:	lea    rdx,[rip+0x26cda]        # 431598 <_IO_stdin_used@@Base+0x5598>
  40a8be:	mov    r8,rbx
  40a8c1:	mov    rcx,rbx
  40a8c4:	mov    esi,0x1
  40a8c9:	xor    eax,eax
  40a8cb:	call   4051f0 <__fprintf_chk@plt>
  40a8d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8d7:	push   rbx
  40a8d8:	lea    rdx,[rip+0x26d91]        # 431670 <_IO_stdin_used@@Base+0x5670>
  40a8df:	push   rbx
  40a8e0:	push   rbx
  40a8e1:	mov    r9,rbx
  40a8e4:	push   rbx
  40a8e5:	push   rbx
  40a8e6:	mov    r8,rbx
  40a8e9:	push   rbx
  40a8ea:	push   rbx
  40a8eb:	mov    rcx,rbx
  40a8ee:	push   rbx
  40a8ef:	mov    esi,0x1
  40a8f4:	xor    eax,eax
  40a8f6:	call   4051f0 <__fprintf_chk@plt>
  40a8fb:	add    rsp,0x40
  40a8ff:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a906:	lea    rdx,[rip+0x26ee3]        # 4317f0 <_IO_stdin_used@@Base+0x57f0>
  40a90d:	push   rbx
  40a90e:	push   rbx
  40a90f:	mov    r9,rbx
  40a912:	push   rbx
  40a913:	push   rbx
  40a914:	mov    r8,rbx
  40a917:	push   rbx
  40a918:	push   rbx
  40a919:	mov    rcx,rbx
  40a91c:	push   rbx
  40a91d:	push   rbx
  40a91e:	mov    esi,0x1
  40a923:	xor    eax,eax
  40a925:	call   4051f0 <__fprintf_chk@plt>
  40a92a:	add    rsp,0x40
  40a92e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a935:	lea    rdx,[rip+0x2703c]        # 431978 <_IO_stdin_used@@Base+0x5978>
  40a93c:	push   rbx
  40a93d:	push   rbx
  40a93e:	mov    r9,rbx
  40a941:	push   rbx
  40a942:	push   rbx
  40a943:	mov    r8,rbx
  40a946:	mov    rcx,rbx
  40a949:	mov    esi,0x1
  40a94e:	xor    eax,eax
  40a950:	call   4051f0 <__fprintf_chk@plt>
  40a955:	add    rsp,0x20
  40a959:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a960:	lea    rdx,[rip+0x27369]        # 431cd0 <_IO_stdin_used@@Base+0x5cd0>
  40a967:	push   rbx
  40a968:	push   rbx
  40a969:	mov    r9,rbx
  40a96c:	push   rbx
  40a96d:	push   rbx
  40a96e:	mov    r8,rbx
  40a971:	push   rbx
  40a972:	push   rbx
  40a973:	mov    rcx,rbx
  40a976:	push   rbx
  40a977:	push   rbx
  40a978:	mov    esi,0x1
  40a97d:	xor    eax,eax
  40a97f:	call   4051f0 <__fprintf_chk@plt>
  40a984:	add    rsp,0x40
  40a988:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a98f:	lea    rdx,[rip+0x2765a]        # 431ff0 <_IO_stdin_used@@Base+0x5ff0>
  40a996:	push   rbx
  40a997:	push   rbx
  40a998:	mov    r9,rbx
  40a99b:	push   rbx
  40a99c:	push   rbx
  40a99d:	mov    r8,rbx
  40a9a0:	push   rbx
  40a9a1:	push   rbx
  40a9a2:	mov    rcx,rbx
  40a9a5:	push   rbx
  40a9a6:	push   rbx
  40a9a7:	mov    esi,0x1
  40a9ac:	push   rbx
  40a9ad:	push   rbx
  40a9ae:	xor    eax,eax
  40a9b0:	call   4051f0 <__fprintf_chk@plt>
  40a9b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9bc:	lea    rdx,[rip+0x27cfd]        # 4326c0 <_IO_stdin_used@@Base+0x66c0>
  40a9c3:	add    rsp,0x50
  40a9c7:	mov    rcx,rbx
  40a9ca:	mov    esi,0x1
  40a9cf:	xor    eax,eax
  40a9d1:	call   4051f0 <__fprintf_chk@plt>
  40a9d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9dd:	lea    rdx,[rip+0x27f2c]        # 432910 <_IO_stdin_used@@Base+0x6910>
  40a9e4:	xor    eax,eax
  40a9e6:	mov    rcx,rbx
  40a9e9:	mov    esi,0x1
  40a9ee:	call   4051f0 <__fprintf_chk@plt>
  40a9f3:	mov    rax,QWORD PTR [rbx+0xe0]
  40a9fa:	mov    r9d,DWORD PTR [rax+0xa8]
  40aa01:	test   r9d,r9d
  40aa04:	je     40ad70 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
  40aa0a:	mov    rdi,rbx
  40aa0d:	call   40b540 <__flatcc_gen_sort@@Base>
  40aa12:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa19:	push   rbx
  40aa1a:	lea    rdx,[rip+0x283b7]        # 432dd8 <_IO_stdin_used@@Base+0x6dd8>
  40aa21:	push   rbx
  40aa22:	mov    r8,rbx
  40aa25:	mov    esi,0x1
  40aa2a:	xor    eax,eax
  40aa2c:	mov    r9,rbx
  40aa2f:	mov    rcx,rbx
  40aa32:	call   4051f0 <__fprintf_chk@plt>
  40aa37:	mov    rax,QWORD PTR [rbx+0xe0]
  40aa3e:	pop    rsi
  40aa3f:	pop    rdi
  40aa40:	mov    r8d,DWORD PTR [rax+0xa8]
  40aa47:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa4e:	test   r8d,r8d
  40aa51:	je     40ad50 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
  40aa57:	lea    rdx,[rip+0x28462]        # 432ec0 <_IO_stdin_used@@Base+0x6ec0>
  40aa5e:	mov    rcx,rbx
  40aa61:	mov    esi,0x1
  40aa66:	xor    eax,eax
  40aa68:	call   4051f0 <__fprintf_chk@plt>
  40aa6d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa74:	lea    rdx,[rip+0x39672]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40aa7b:	mov    esi,0x1
  40aa80:	xor    eax,eax
  40aa82:	call   4051f0 <__fprintf_chk@plt>
  40aa87:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa8e:	lea    rdx,[rip+0x2844b]        # 432ee0 <_IO_stdin_used@@Base+0x6ee0>
  40aa95:	mov    r9,rbx
  40aa98:	mov    r8,rbx
  40aa9b:	mov    rcx,rbx
  40aa9e:	mov    esi,0x1
  40aaa3:	xor    eax,eax
  40aaa5:	call   4051f0 <__fprintf_chk@plt>
  40aaaa:	sub    rsp,0x8
  40aaae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aab5:	lea    rdx,[rip+0x284a4]        # 432f60 <_IO_stdin_used@@Base+0x6f60>
  40aabc:	push   rbx
  40aabd:	push   rbx
  40aabe:	mov    r9,rbx
  40aac1:	push   rbx
  40aac2:	push   rbx
  40aac3:	mov    r8,rbx
  40aac6:	push   rbx
  40aac7:	push   rbx
  40aac8:	mov    rcx,rbx
  40aacb:	push   rbx
  40aacc:	push   rbx
  40aacd:	mov    esi,0x1
  40aad2:	push   rbx
  40aad3:	push   rbx
  40aad4:	xor    eax,eax
  40aad6:	push   rbx
  40aad7:	push   rbx
  40aad8:	push   rbx
  40aad9:	push   rbx
  40aada:	push   rbx
  40aadb:	push   rbx
  40aadc:	push   rbx
  40aadd:	push   rbx
  40aade:	push   rbx
  40aadf:	push   rbx
  40aae0:	push   rbx
  40aae1:	push   rbx
  40aae2:	push   rbx
  40aae3:	call   4051f0 <__fprintf_chk@plt>
  40aae8:	add    rsp,0xb8
  40aaef:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aaf6:	lea    rdx,[rip+0x2867b]        # 433178 <_IO_stdin_used@@Base+0x7178>
  40aafd:	push   rbx
  40aafe:	push   rbx
  40aaff:	mov    r9,rbx
  40ab02:	push   rbx
  40ab03:	push   rbx
  40ab04:	mov    r8,rbx
  40ab07:	push   rbx
  40ab08:	push   rbx
  40ab09:	mov    rcx,rbx
  40ab0c:	push   rbx
  40ab0d:	push   rbx
  40ab0e:	mov    esi,0x1
  40ab13:	push   rbx
  40ab14:	xor    eax,eax
  40ab16:	call   4051f0 <__fprintf_chk@plt>
  40ab1b:	add    rsp,0x48
  40ab1f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ab26:	lea    rdx,[rip+0x2879b]        # 4332c8 <_IO_stdin_used@@Base+0x72c8>
  40ab2d:	push   rbx
  40ab2e:	push   rbx
  40ab2f:	mov    rcx,rbx
  40ab32:	push   rbx
  40ab33:	push   rbx
  40ab34:	xor    eax,eax
  40ab36:	push   rbx
  40ab37:	push   rbx
  40ab38:	mov    r9,rbx
  40ab3b:	push   rbx
  40ab3c:	push   rbx
  40ab3d:	mov    r8,rbx
  40ab40:	push   rbx
  40ab41:	push   rbx
  40ab42:	mov    esi,0x1
  40ab47:	push   rbx
  40ab48:	push   rbx
  40ab49:	push   rbx
  40ab4a:	push   rbx
  40ab4b:	push   rbx
  40ab4c:	push   rbx
  40ab4d:	push   rbx
  40ab4e:	push   rbx
  40ab4f:	push   rbx
  40ab50:	push   rbx
  40ab51:	push   rbx
  40ab52:	push   rbx
  40ab53:	push   rbx
  40ab54:	push   rbx
  40ab55:	push   rbx
  40ab56:	push   rbx
  40ab57:	push   rbx
  40ab58:	push   rbx
  40ab59:	push   rbx
  40ab5a:	push   rbx
  40ab5b:	push   rbx
  40ab5c:	push   rbx
  40ab5d:	push   rbx
  40ab5e:	push   rbx
  40ab5f:	push   rbx
  40ab60:	push   rbx
  40ab61:	push   rbx
  40ab62:	push   rbx
  40ab63:	push   rbx
  40ab64:	push   rbx
  40ab65:	push   rbx
  40ab66:	push   rbx
  40ab67:	push   rbx
  40ab68:	push   rbx
  40ab69:	push   rbx
  40ab6a:	push   rbx
  40ab6b:	push   rbx
  40ab6c:	push   rbx
  40ab6d:	push   rbx
  40ab6e:	push   rbx
  40ab6f:	push   rbx
  40ab70:	push   rbx
  40ab71:	push   rbx
  40ab72:	push   rbx
  40ab73:	push   rbx
  40ab74:	push   rbx
  40ab75:	push   rbx
  40ab76:	call   4051f0 <__fprintf_chk@plt>
  40ab7b:	mov    rax,QWORD PTR [rbx+0xe0]
  40ab82:	add    rsp,0x1d0
  40ab89:	mov    ecx,DWORD PTR [rax+0xa8]
  40ab8f:	test   ecx,ecx
  40ab91:	jne    40adf0 <__flatcc_fb_gen_common_c_header@@Base+0xc20>
  40ab97:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ab9e:	lea    rdx,[rip+0x28de3]        # 433988 <_IO_stdin_used@@Base+0x7988>
  40aba5:	xor    eax,eax
  40aba7:	mov    r8,rbx
  40abaa:	mov    rcx,rbx
  40abad:	mov    esi,0x1
  40abb2:	call   4051f0 <__fprintf_chk@plt>
  40abb7:	mov    rax,QWORD PTR [rbx+0xe0]
  40abbe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40abc5:	mov    edx,DWORD PTR [rax+0x24]
  40abc8:	test   edx,edx
  40abca:	jne    40add0 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
  40abd0:	lea    rdx,[rip+0x39516]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40abd7:	mov    esi,0x1
  40abdc:	xor    eax,eax
  40abde:	call   4051f0 <__fprintf_chk@plt>
  40abe3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40abea:	lea    rdx,[rip+0x28e37]        # 433a28 <_IO_stdin_used@@Base+0x7a28>
  40abf1:	mov    rcx,rbx
  40abf4:	mov    esi,0x1
  40abf9:	xor    eax,eax
  40abfb:	call   4051f0 <__fprintf_chk@plt>
  40ac00:	sub    rsp,0x8
  40ac04:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac0b:	lea    rdx,[rip+0x28e96]        # 433aa8 <_IO_stdin_used@@Base+0x7aa8>
  40ac12:	push   rbx
  40ac13:	push   rbx
  40ac14:	mov    r9,rbx
  40ac17:	push   rbx
  40ac18:	push   rbx
  40ac19:	mov    r8,rbx
  40ac1c:	push   rbx
  40ac1d:	push   rbx
  40ac1e:	mov    rcx,rbx
  40ac21:	push   rbx
  40ac22:	push   rbx
  40ac23:	mov    esi,0x1
  40ac28:	push   rbx
  40ac29:	push   rbx
  40ac2a:	xor    eax,eax
  40ac2c:	push   rbx
  40ac2d:	call   4051f0 <__fprintf_chk@plt>
  40ac32:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac39:	lea    rdx,[rip+0x291b8]        # 433df8 <_IO_stdin_used@@Base+0x7df8>
  40ac40:	add    rsp,0x60
  40ac44:	mov    r9,rbx
  40ac47:	mov    r8,rbx
  40ac4a:	mov    rcx,rbx
  40ac4d:	mov    esi,0x1
  40ac52:	xor    eax,eax
  40ac54:	call   4051f0 <__fprintf_chk@plt>
  40ac59:	sub    rsp,0x8
  40ac5d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac64:	lea    rdx,[rip+0x29245]        # 433eb0 <_IO_stdin_used@@Base+0x7eb0>
  40ac6b:	push   rbx
  40ac6c:	push   rbx
  40ac6d:	mov    r9,rbx
  40ac70:	push   rbx
  40ac71:	mov    r8,rbx
  40ac74:	mov    rcx,rbx
  40ac77:	mov    esi,0x1
  40ac7c:	xor    eax,eax
  40ac7e:	call   4051f0 <__fprintf_chk@plt>
  40ac83:	add    rsp,0x18
  40ac87:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac8e:	lea    rdx,[rip+0x293e3]        # 434078 <_IO_stdin_used@@Base+0x8078>
  40ac95:	push   rbx
  40ac96:	mov    r9,rbx
  40ac99:	mov    r8,rbx
  40ac9c:	mov    rcx,rbx
  40ac9f:	mov    esi,0x1
  40aca4:	xor    eax,eax
  40aca6:	call   4051f0 <__fprintf_chk@plt>
  40acab:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acb2:	mov    QWORD PTR [rsp],rbx
  40acb6:	lea    rdx,[rip+0x2963b]        # 4342f8 <_IO_stdin_used@@Base+0x82f8>
  40acbd:	push   rbx
  40acbe:	push   rbx
  40acbf:	mov    r9,rbx
  40acc2:	push   rbx
  40acc3:	push   rbx
  40acc4:	mov    r8,rbx
  40acc7:	push   rbx
  40acc8:	push   rbx
  40acc9:	mov    rcx,rbx
  40accc:	mov    esi,0x1
  40acd1:	xor    eax,eax
  40acd3:	call   4051f0 <__fprintf_chk@plt>
  40acd8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acdf:	lea    rdx,[rip+0x39407]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40ace6:	add    rsp,0x40
  40acea:	xor    eax,eax
  40acec:	mov    esi,0x1
  40acf1:	call   4051f0 <__fprintf_chk@plt>
  40acf6:	mov    rax,QWORD PTR [rbx+0xe0]
  40acfd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad04:	mov    eax,DWORD PTR [rax+0xac]
  40ad0a:	test   eax,eax
  40ad0c:	je     40ad28 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
  40ad0e:	lea    rdx,[rip+0x298cb]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  40ad15:	mov    esi,0x1
  40ad1a:	xor    eax,eax
  40ad1c:	call   4051f0 <__fprintf_chk@plt>
  40ad21:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad28:	lea    rdx,[rip+0x29fdb]        # 434d0a <_IO_stdin_used@@Base+0x8d0a>
  40ad2f:	mov    rcx,rbp
  40ad32:	mov    esi,0x1
  40ad37:	xor    eax,eax
  40ad39:	call   4051f0 <__fprintf_chk@plt>
  40ad3e:	add    rsp,0x8
  40ad42:	xor    eax,eax
  40ad44:	pop    rbx
  40ad45:	pop    rbp
  40ad46:	ret    
  40ad47:	nop    WORD PTR [rax+rax*1+0x0]
  40ad50:	lea    rdx,[rip+0x39396]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40ad57:	mov    esi,0x1
  40ad5c:	xor    eax,eax
  40ad5e:	call   4051f0 <__fprintf_chk@plt>
  40ad63:	jmp    40aa6d <__flatcc_fb_gen_common_c_header@@Base+0x89d>
  40ad68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad70:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad77:	lea    rdx,[rip+0x29f5d]        # 434cdb <_IO_stdin_used@@Base+0x8cdb>
  40ad7e:	mov    esi,0x1
  40ad83:	xor    eax,eax
  40ad85:	call   4051f0 <__fprintf_chk@plt>
  40ad8a:	jmp    40aa12 <__flatcc_fb_gen_common_c_header@@Base+0x842>
  40ad8f:	nop
  40ad90:	lea    rdx,[rip+0x39356]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40ad97:	mov    esi,0x1
  40ad9c:	xor    eax,eax
  40ad9e:	call   4051f0 <__fprintf_chk@plt>
  40ada3:	jmp    40a47c <__flatcc_fb_gen_common_c_header@@Base+0x2ac>
  40ada8:	nop    DWORD PTR [rax+rax*1+0x0]
  40adb0:	lea    rdx,[rip+0x39336]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40adb7:	mov    esi,0x1
  40adbc:	xor    eax,eax
  40adbe:	call   4051f0 <__fprintf_chk@plt>
  40adc3:	jmp    40a34d <__flatcc_fb_gen_common_c_header@@Base+0x17d>
  40adc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40add0:	lea    rdx,[rip+0x24219]        # 42eff0 <_IO_stdin_used@@Base+0x2ff0>
  40add7:	mov    rcx,rbx
  40adda:	mov    esi,0x1
  40addf:	xor    eax,eax
  40ade1:	call   4051f0 <__fprintf_chk@plt>
  40ade6:	jmp    40abe3 <__flatcc_fb_gen_common_c_header@@Base+0xa13>
  40adeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40adf0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40adf7:	lea    rdx,[rip+0x29ef2]        # 434cf0 <_IO_stdin_used@@Base+0x8cf0>
  40adfe:	mov    rcx,rbx
  40ae01:	mov    esi,0x1
  40ae06:	xor    eax,eax
  40ae08:	call   4051f0 <__fprintf_chk@plt>
  40ae0d:	jmp    40ab97 <__flatcc_fb_gen_common_c_header@@Base+0x9c7>
  40ae12:	nop    WORD PTR [rax+rax*1+0x0]
  40ae18:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae1f:	push   rbx
  40ae20:	lea    rdx,[rip+0x23961]        # 42e788 <_IO_stdin_used@@Base+0x2788>
  40ae27:	push   rbx
  40ae28:	mov    r9,rbx
  40ae2b:	mov    r8,rbx
  40ae2e:	mov    rcx,rbx
  40ae31:	mov    esi,0x1
  40ae36:	xor    eax,eax
  40ae38:	call   4051f0 <__fprintf_chk@plt>
  40ae3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae44:	lea    rcx,[rip+0x392a2]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40ae4b:	lea    rdx,[rip+0x23a06]        # 42e858 <_IO_stdin_used@@Base+0x2858>
  40ae52:	mov    r9,rbx
  40ae55:	mov    r8,rbx
  40ae58:	mov    esi,0x1
  40ae5d:	xor    eax,eax
  40ae5f:	mov    QWORD PTR [rsp],rbx
  40ae63:	call   4051f0 <__fprintf_chk@plt>
  40ae68:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae6f:	push   rbx
  40ae70:	lea    rdx,[rip+0x23b39]        # 42e9b0 <_IO_stdin_used@@Base+0x29b0>
  40ae77:	push   rbx
  40ae78:	mov    r8,rbx
  40ae7b:	mov    rcx,rbx
  40ae7e:	mov    r9,rbx
  40ae81:	mov    esi,0x1
  40ae86:	xor    eax,eax
  40ae88:	call   4051f0 <__fprintf_chk@plt>
  40ae8d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae94:	lea    rdx,[rip+0x23d7d]        # 42ec18 <_IO_stdin_used@@Base+0x2c18>
  40ae9b:	add    rsp,0x20
  40ae9f:	mov    r8,rbp
  40aea2:	mov    rcx,rbp
  40aea5:	mov    esi,0x1
  40aeaa:	xor    eax,eax
  40aeac:	call   4051f0 <__fprintf_chk@plt>
  40aeb1:	jmp    40a289 <__flatcc_fb_gen_common_c_header@@Base+0xb9>
  40aeb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aec0:	lea    rdx,[rip+0x23869]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  40aec7:	mov    esi,0x1
  40aecc:	xor    eax,eax
  40aece:	call   4051f0 <__fprintf_chk@plt>
  40aed3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aeda:	jmp    40a25f <__flatcc_fb_gen_common_c_header@@Base+0x8f>
  40aedf:	nop
  40aee0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aee7:	lea    rdx,[rip+0x237ba]        # 42e6a8 <_IO_stdin_used@@Base+0x26a8>
  40aeee:	mov    esi,0x1
  40aef3:	xor    eax,eax
  40aef5:	call   4051f0 <__fprintf_chk@plt>
  40aefa:	mov    rax,QWORD PTR [rbx+0xe0]
  40af01:	jmp    40a248 <__flatcc_fb_gen_common_c_header@@Base+0x78>
  40af06:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040af10 <__flatcc_fb_gen_c_reader@@Base>:
  40af10:	push   r15
  40af12:	push   r14
  40af14:	lea    rdx,[rip+0x296ed]        # 434608 <_IO_stdin_used@@Base+0x8608>
  40af1b:	push   r13
  40af1d:	push   r12
  40af1f:	lea    r12,[rdi+0x66]
  40af23:	push   rbp
  40af24:	push   rbx
  40af25:	mov    rbx,rdi
  40af28:	mov    esi,0x1
  40af2d:	sub    rsp,0x118
  40af34:	mov    rax,QWORD PTR fs:0x28
  40af3d:	mov    QWORD PTR [rsp+0x108],rax
  40af45:	xor    eax,eax
  40af47:	mov    rax,QWORD PTR [rdi+0xe0]
  40af4e:	mov    ebp,DWORD PTR [rax+0xa4]
  40af54:	mov    rax,QWORD PTR [rdi+0xd8]
  40af5b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40af62:	mov    rcx,QWORD PTR [rax+0x118]
  40af69:	xor    eax,eax
  40af6b:	mov    r8,rcx
  40af6e:	call   4051f0 <__fprintf_chk@plt>
  40af73:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af7a:	lea    rdx,[rip+0x23697]        # 42e618 <_IO_stdin_used@@Base+0x2618>
  40af81:	xor    eax,eax
  40af83:	mov    esi,0x1
  40af88:	call   4051f0 <__fprintf_chk@plt>
  40af8d:	test   ebp,ebp
  40af8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af96:	jne    40b4d0 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
  40af9c:	lea    rdx,[rip+0x29855]        # 4347f8 <_IO_stdin_used@@Base+0x87f8>
  40afa3:	mov    r8,rbx
  40afa6:	mov    rcx,r12
  40afa9:	mov    esi,0x1
  40afae:	xor    eax,eax
  40afb0:	call   4051f0 <__fprintf_chk@plt>
  40afb5:	lea    rdx,[rip+0x29d68]        # 434d24 <_IO_stdin_used@@Base+0x8d24>
  40afbc:	lea    rsi,[rip+0x22252]        # 42d215 <_IO_stdin_used@@Base+0x1215>
  40afc3:	mov    rdi,rbx
  40afc6:	call   4065d0 <__flatcc_fb_gen_c_includes@@Base>
  40afcb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afd2:	lea    rdx,[rip+0x2985f]        # 434838 <_IO_stdin_used@@Base+0x8838>
  40afd9:	mov    esi,0x1
  40afde:	xor    eax,eax
  40afe0:	call   4051f0 <__fprintf_chk@plt>
  40afe5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afec:	lea    rdx,[rip+0x29a15]        # 434a08 <_IO_stdin_used@@Base+0x8a08>
  40aff3:	mov    esi,0x1
  40aff8:	xor    eax,eax
  40affa:	call   4051f0 <__fprintf_chk@plt>
  40afff:	mov    rax,QWORD PTR [rbx+0xe0]
  40b006:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b00d:	mov    r8d,DWORD PTR [rax+0xac]
  40b014:	test   r8d,r8d
  40b017:	jne    40b430 <__flatcc_fb_gen_c_reader@@Base+0x520>
  40b01d:	mov    rax,QWORD PTR [rbx+0xd8]
  40b024:	cmp    WORD PTR [rax+0x20],0x2
  40b029:	je     40b45c <__flatcc_fb_gen_c_reader@@Base+0x54c>
  40b02f:	lea    rdx,[rip+0x29862]        # 434898 <_IO_stdin_used@@Base+0x8898>
  40b036:	xor    eax,eax
  40b038:	mov    r8,rbx
  40b03b:	mov    rcx,rbx
  40b03e:	mov    esi,0x1
  40b043:	call   4051f0 <__fprintf_chk@plt>
  40b048:	mov    rax,QWORD PTR [rbx+0xd8]
  40b04f:	cmp    WORD PTR [rax+0x38],0x2
  40b054:	je     40b494 <__flatcc_fb_gen_c_reader@@Base+0x584>
  40b05a:	mov    rax,QWORD PTR [rbx+0xe0]
  40b061:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b068:	lea    rdx,[rip+0x29891]        # 434900 <_IO_stdin_used@@Base+0x8900>
  40b06f:	mov    r8,rbx
  40b072:	mov    rcx,rbx
  40b075:	mov    esi,0x1
  40b07a:	mov    r9,QWORD PTR [rax+0x78]
  40b07e:	xor    eax,eax
  40b080:	call   4051f0 <__fprintf_chk@plt>
  40b085:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b08c:	lea    rdx,[rip+0x3905a]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40b093:	xor    eax,eax
  40b095:	mov    esi,0x1
  40b09a:	call   4051f0 <__fprintf_chk@plt>
  40b09f:	mov    rax,QWORD PTR [rbx+0xd8]
  40b0a6:	mov    rbp,QWORD PTR [rax+0x48]
  40b0aa:	test   rbp,rbp
  40b0ad:	je     40b0c7 <__flatcc_fb_gen_c_reader@@Base+0x1b7>
  40b0af:	nop
  40b0b0:	mov    rsi,rbp
  40b0b3:	mov    rdi,rbx
  40b0b6:	call   406c00 <__flatcc_fb_codegen_c@@Base+0x220>
  40b0bb:	mov    rbp,QWORD PTR [rbp+0xc0]
  40b0c2:	test   rbp,rbp
  40b0c5:	jne    40b0b0 <__flatcc_fb_gen_c_reader@@Base+0x1a0>
  40b0c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b0ce:	lea    rdx,[rip+0x39018]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40b0d5:	xor    eax,eax
  40b0d7:	mov    esi,0x1
  40b0dc:	call   4051f0 <__fprintf_chk@plt>
  40b0e1:	mov    rax,QWORD PTR [rbx+0xd8]
  40b0e8:	mov    rbp,QWORD PTR [rax+0x40]
  40b0ec:	test   rbp,rbp
  40b0ef:	jne    40b109 <__flatcc_fb_gen_c_reader@@Base+0x1f9>
  40b0f1:	jmp    40b245 <__flatcc_fb_gen_c_reader@@Base+0x335>
  40b0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b100:	mov    rbp,QWORD PTR [rbp+0x0]
  40b104:	test   rbp,rbp
  40b107:	je     40b124 <__flatcc_fb_gen_c_reader@@Base+0x214>
  40b109:	cmp    WORD PTR [rbp+0x10],0x0
  40b10e:	jne    40b100 <__flatcc_fb_gen_c_reader@@Base+0x1f0>
  40b110:	mov    rsi,rbp
  40b113:	mov    rdi,rbx
  40b116:	call   406c00 <__flatcc_fb_codegen_c@@Base+0x220>
  40b11b:	mov    rbp,QWORD PTR [rbp+0x0]
  40b11f:	test   rbp,rbp
  40b122:	jne    40b109 <__flatcc_fb_gen_c_reader@@Base+0x1f9>
  40b124:	mov    rax,QWORD PTR [rbx+0xd8]
  40b12b:	mov    r14,QWORD PTR [rax+0x40]
  40b12f:	test   r14,r14
  40b132:	je     40b245 <__flatcc_fb_gen_c_reader@@Base+0x335>
  40b138:	lea    r13,[rsp+0xf0]
  40b140:	mov    rbp,rsp
  40b143:	lea    r12,[r13+0x10]
  40b147:	jmp    40b15c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40b149:	nop    DWORD PTR [rax+0x0]
  40b150:	mov    r14,QWORD PTR [r14]
  40b153:	test   r14,r14
  40b156:	je     40b245 <__flatcc_fb_gen_c_reader@@Base+0x335>
  40b15c:	cmp    WORD PTR [r14+0x10],0x1
  40b162:	ja     40b150 <__flatcc_fb_gen_c_reader@@Base+0x240>
  40b164:	xor    eax,eax
  40b166:	mov    ecx,0x1d
  40b16b:	mov    rdi,rbp
  40b16e:	rep stos QWORD PTR es:[rdi],rax
  40b171:	mov    rdx,rbp
  40b174:	mov    rsi,r14
  40b177:	mov    rdi,QWORD PTR [r14+0x18]
  40b17b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40b180:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b187:	lea    rdx,[rip+0x297aa]        # 434938 <_IO_stdin_used@@Base+0x8938>
  40b18e:	mov    r15d,DWORD PTR [r14+0xa0]
  40b195:	mov    r9,rbx
  40b198:	mov    r8,rbp
  40b19b:	mov    rcx,rbp
  40b19e:	mov    esi,0x1
  40b1a3:	xor    eax,eax
  40b1a5:	call   4051f0 <__fprintf_chk@plt>
  40b1aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1b1:	lea    rdx,[rip+0x297c8]        # 434980 <_IO_stdin_used@@Base+0x8980>
  40b1b8:	mov    r9d,r15d
  40b1bb:	mov    r8,rbx
  40b1be:	mov    rcx,rbp
  40b1c1:	mov    esi,0x1
  40b1c6:	xor    eax,eax
  40b1c8:	call   4051f0 <__fprintf_chk@plt>
  40b1cd:	mov    rax,r13
  40b1d0:	mov    edx,r15d
  40b1d3:	mov    BYTE PTR [rax],0x5c
  40b1d6:	mov    BYTE PTR [rax+0x1],0x78
  40b1da:	and    edx,0xf
  40b1dd:	cmp    dl,0xa
  40b1e0:	sbb    ecx,ecx
  40b1e2:	and    ecx,0xffffffd9
  40b1e5:	lea    edx,[rdx+rcx*1+0x57]
  40b1e9:	mov    BYTE PTR [rax+0x3],dl
  40b1ec:	mov    edx,r15d
  40b1ef:	shr    edx,0x4
  40b1f2:	and    edx,0xf
  40b1f5:	cmp    dl,0xa
  40b1f8:	sbb    ecx,ecx
  40b1fa:	add    rax,0x4
  40b1fe:	shr    r15d,0x8
  40b202:	and    ecx,0xffffffd9
  40b205:	lea    edx,[rdx+rcx*1+0x57]
  40b209:	mov    BYTE PTR [rax-0x2],dl
  40b20c:	cmp    rax,r12
  40b20f:	jne    40b1d0 <__flatcc_fb_gen_c_reader@@Base+0x2c0>
  40b211:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b218:	lea    rdx,[rip+0x29791]        # 4349b0 <_IO_stdin_used@@Base+0x89b0>
  40b21f:	xor    eax,eax
  40b221:	mov    r8,r13
  40b224:	mov    rcx,rbp
  40b227:	mov    esi,0x1
  40b22c:	mov    BYTE PTR [rsp+0x100],0x0
  40b234:	call   4051f0 <__fprintf_chk@plt>
  40b239:	mov    r14,QWORD PTR [r14]
  40b23c:	test   r14,r14
  40b23f:	jne    40b15c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40b245:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b24c:	lea    rdx,[rip+0x38e9a]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40b253:	xor    eax,eax
  40b255:	mov    esi,0x1
  40b25a:	call   4051f0 <__fprintf_chk@plt>
  40b25f:	mov    rax,QWORD PTR [rbx+0xd8]
  40b266:	mov    rbp,QWORD PTR [rax+0x40]
  40b26a:	test   rbp,rbp
  40b26d:	jne    40b281 <__flatcc_fb_gen_c_reader@@Base+0x371>
  40b26f:	jmp    40b29c <__flatcc_fb_gen_c_reader@@Base+0x38c>
  40b271:	nop    DWORD PTR [rax+0x0]
  40b278:	mov    rbp,QWORD PTR [rbp+0x0]
  40b27c:	test   rbp,rbp
  40b27f:	je     40b29c <__flatcc_fb_gen_c_reader@@Base+0x38c>
  40b281:	cmp    WORD PTR [rbp+0x10],0x3
  40b286:	jne    40b278 <__flatcc_fb_gen_c_reader@@Base+0x368>
  40b288:	mov    rsi,rbp
  40b28b:	mov    rdi,rbx
  40b28e:	call   406de0 <__flatcc_fb_codegen_c@@Base+0x400>
  40b293:	mov    rbp,QWORD PTR [rbp+0x0]
  40b297:	test   rbp,rbp
  40b29a:	jne    40b281 <__flatcc_fb_gen_c_reader@@Base+0x371>
  40b29c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2a3:	lea    rdx,[rip+0x38e43]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40b2aa:	xor    eax,eax
  40b2ac:	mov    esi,0x1
  40b2b1:	call   4051f0 <__fprintf_chk@plt>
  40b2b6:	mov    rax,QWORD PTR [rbx+0xd8]
  40b2bd:	mov    rbp,QWORD PTR [rax+0x48]
  40b2c1:	test   rbp,rbp
  40b2c4:	je     40b2ee <__flatcc_fb_gen_c_reader@@Base+0x3de>
  40b2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2d0:	mov    rsi,rbp
  40b2d3:	mov    rdi,rbx
  40b2d6:	call   4079f0 <__flatcc_fb_codegen_c@@Base+0x1010>
  40b2db:	mov    rbp,QWORD PTR [rbp+0xc0]
  40b2e2:	test   rbp,rbp
  40b2e5:	jne    40b2d0 <__flatcc_fb_gen_c_reader@@Base+0x3c0>
  40b2e7:	mov    rax,QWORD PTR [rbx+0xd8]
  40b2ee:	mov    rbp,QWORD PTR [rax+0x40]
  40b2f2:	test   rbp,rbp
  40b2f5:	je     40b31f <__flatcc_fb_gen_c_reader@@Base+0x40f>
  40b2f7:	movzx  eax,WORD PTR [rbp+0x10]
  40b2fb:	cmp    ax,0x3
  40b2ff:	ja     40b3c0 <__flatcc_fb_gen_c_reader@@Base+0x4b0>
  40b305:	cmp    ax,0x1
  40b309:	jae    40b316 <__flatcc_fb_gen_c_reader@@Base+0x406>
  40b30b:	mov    rsi,rbp
  40b30e:	mov    rdi,rbx
  40b311:	call   408900 <__flatcc_fb_codegen_c@@Base+0x1f20>
  40b316:	mov    rbp,QWORD PTR [rbp+0x0]
  40b31a:	test   rbp,rbp
  40b31d:	jne    40b2f7 <__flatcc_fb_gen_c_reader@@Base+0x3e7>
  40b31f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b326:	lea    rdx,[rip+0x38dc0]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40b32d:	xor    eax,eax
  40b32f:	mov    esi,0x1
  40b334:	call   4051f0 <__fprintf_chk@plt>
  40b339:	mov    rax,QWORD PTR [rbx+0xe0]
  40b340:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b347:	mov    eax,DWORD PTR [rax+0xac]
  40b34d:	test   eax,eax
  40b34f:	je     40b36b <__flatcc_fb_gen_c_reader@@Base+0x45b>
  40b351:	lea    rdx,[rip+0x29288]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  40b358:	mov    esi,0x1
  40b35d:	xor    eax,eax
  40b35f:	call   4051f0 <__fprintf_chk@plt>
  40b364:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b36b:	mov    rax,QWORD PTR [rbx+0xd8]
  40b372:	lea    rdx,[rip+0x299b5]        # 434d2e <_IO_stdin_used@@Base+0x8d2e>
  40b379:	mov    esi,0x1
  40b37e:	mov    rcx,QWORD PTR [rax+0x118]
  40b385:	xor    eax,eax
  40b387:	call   4051f0 <__fprintf_chk@plt>
  40b38c:	xor    eax,eax
  40b38e:	mov    rsi,QWORD PTR [rsp+0x108]
  40b396:	xor    rsi,QWORD PTR fs:0x28
  40b39f:	jne    40b538 <__flatcc_fb_gen_c_reader@@Base+0x628>
  40b3a5:	add    rsp,0x118
  40b3ac:	pop    rbx
  40b3ad:	pop    rbp
  40b3ae:	pop    r12
  40b3b0:	pop    r13
  40b3b2:	pop    r14
  40b3b4:	pop    r15
  40b3b6:	ret    
  40b3b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b3c0:	cmp    ax,0x4
  40b3c4:	jne    40b3e0 <__flatcc_fb_gen_c_reader@@Base+0x4d0>
  40b3c6:	mov    rsi,rbp
  40b3c9:	mov    rdi,rbx
  40b3cc:	call   406de0 <__flatcc_fb_codegen_c@@Base+0x400>
  40b3d1:	jmp    40b316 <__flatcc_fb_gen_c_reader@@Base+0x406>
  40b3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3e0:	mov    rax,QWORD PTR [rip+0x44c01]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40b3e7:	lea    rcx,[rip+0x21e72]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40b3ee:	lea    rdx,[rip+0x296cc]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40b3f5:	lea    r9,[rip+0x295dc]        # 4349d8 <_IO_stdin_used@@Base+0x89d8>
  40b3fc:	mov    esi,0x1
  40b401:	mov    r8d,0x688
  40b407:	mov    rdi,QWORD PTR [rax]
  40b40a:	xor    eax,eax
  40b40c:	call   4051f0 <__fprintf_chk@plt>
  40b411:	lea    rcx,[rip+0x29c98]        # 4350b0 <_IO_stdin_used@@Base+0x90b0>
  40b418:	lea    rsi,[rip+0x21e41]        # 42d260 <_IO_stdin_used@@Base+0x1260>
  40b41f:	lea    rdi,[rip+0x2a6e3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40b426:	mov    edx,0x688
  40b42b:	call   4050f0 <__assert_fail@plt>
  40b430:	lea    rdx,[rip+0x232f9]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  40b437:	xor    eax,eax
  40b439:	mov    esi,0x1
  40b43e:	call   4051f0 <__fprintf_chk@plt>
  40b443:	mov    rax,QWORD PTR [rbx+0xd8]
  40b44a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b451:	cmp    WORD PTR [rax+0x20],0x2
  40b456:	jne    40b02f <__flatcc_fb_gen_c_reader@@Base+0x11f>
  40b45c:	sub    rsp,0x8
  40b460:	push   QWORD PTR [rax+0x10]
  40b463:	mov    r9d,DWORD PTR [rax+0x18]
  40b467:	lea    rdx,[rip+0x293f2]        # 434860 <_IO_stdin_used@@Base+0x8860>
  40b46e:	mov    esi,0x1
  40b473:	xor    eax,eax
  40b475:	mov    r8,rbx
  40b478:	mov    rcx,rbx
  40b47b:	call   4051f0 <__fprintf_chk@plt>
  40b480:	mov    rax,QWORD PTR [rbx+0xd8]
  40b487:	pop    rsi
  40b488:	pop    rdi
  40b489:	cmp    WORD PTR [rax+0x38],0x2
  40b48e:	jne    40b05a <__flatcc_fb_gen_c_reader@@Base+0x14a>
  40b494:	sub    rsp,0x8
  40b498:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b49f:	push   QWORD PTR [rax+0x28]
  40b4a2:	mov    r9d,DWORD PTR [rax+0x30]
  40b4a6:	lea    rdx,[rip+0x29423]        # 4348d0 <_IO_stdin_used@@Base+0x88d0>
  40b4ad:	mov    rcx,rbx
  40b4b0:	mov    r8,rbx
  40b4b3:	mov    esi,0x1
  40b4b8:	xor    eax,eax
  40b4ba:	call   4051f0 <__fprintf_chk@plt>
  40b4bf:	pop    rdx
  40b4c0:	pop    rcx
  40b4c1:	jmp    40b085 <__flatcc_fb_gen_c_reader@@Base+0x175>
  40b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4d0:	lea    rdx,[rip+0x29161]        # 434638 <_IO_stdin_used@@Base+0x8638>
  40b4d7:	mov    esi,0x1
  40b4dc:	xor    eax,eax
  40b4de:	call   4051f0 <__fprintf_chk@plt>
  40b4e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4ea:	lea    rdx,[rip+0x29307]        # 4347f8 <_IO_stdin_used@@Base+0x87f8>
  40b4f1:	mov    r8,rbx
  40b4f4:	mov    rcx,r12
  40b4f7:	mov    esi,0x1
  40b4fc:	xor    eax,eax
  40b4fe:	call   4051f0 <__fprintf_chk@plt>
  40b503:	lea    rdx,[rip+0x2981a]        # 434d24 <_IO_stdin_used@@Base+0x8d24>
  40b50a:	lea    rsi,[rip+0x21d04]        # 42d215 <_IO_stdin_used@@Base+0x1215>
  40b511:	mov    rdi,rbx
  40b514:	call   4065d0 <__flatcc_fb_gen_c_includes@@Base>
  40b519:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b520:	lea    rdx,[rip+0x29311]        # 434838 <_IO_stdin_used@@Base+0x8838>
  40b527:	mov    esi,0x1
  40b52c:	xor    eax,eax
  40b52e:	call   4051f0 <__fprintf_chk@plt>
  40b533:	jmp    40afff <__flatcc_fb_gen_c_reader@@Base+0xef>
  40b538:	call   4050d0 <__stack_chk_fail@plt>
  40b53d:	nop    DWORD PTR [rax]

000000000040b540 <__flatcc_gen_sort@@Base>:
  40b540:	push   rbx
  40b541:	mov    rbx,rdi
  40b544:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b54b:	lea    rdx,[rip+0x29b7e]        # 4350d0 <_IO_stdin_used@@Base+0x90d0>
  40b552:	mov    rcx,rbx
  40b555:	mov    esi,0x1
  40b55a:	xor    eax,eax
  40b55c:	call   4051f0 <__fprintf_chk@plt>
  40b561:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b568:	lea    rdx,[rip+0x29f31]        # 4354a0 <_IO_stdin_used@@Base+0x94a0>
  40b56f:	mov    r8,rbx
  40b572:	mov    rcx,rbx
  40b575:	mov    esi,0x1
  40b57a:	xor    eax,eax
  40b57c:	call   4051f0 <__fprintf_chk@plt>
  40b581:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b588:	lea    rdx,[rip+0x2a021]        # 4355b0 <_IO_stdin_used@@Base+0x95b0>
  40b58f:	mov    r9,rbx
  40b592:	mov    r8,rbx
  40b595:	mov    rcx,rbx
  40b598:	mov    esi,0x1
  40b59d:	xor    eax,eax
  40b59f:	call   4051f0 <__fprintf_chk@plt>
  40b5a4:	sub    rsp,0x8
  40b5a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5af:	lea    rdx,[rip+0x2a0d2]        # 435688 <_IO_stdin_used@@Base+0x9688>
  40b5b6:	push   rbx
  40b5b7:	mov    r9,rbx
  40b5ba:	mov    r8,rbx
  40b5bd:	mov    rcx,rbx
  40b5c0:	mov    esi,0x1
  40b5c5:	xor    eax,eax
  40b5c7:	call   4051f0 <__fprintf_chk@plt>
  40b5cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5d3:	lea    rdx,[rip+0x2a146]        # 435720 <_IO_stdin_used@@Base+0x9720>
  40b5da:	mov    r8,rbx
  40b5dd:	mov    rcx,rbx
  40b5e0:	mov    esi,0x1
  40b5e5:	xor    eax,eax
  40b5e7:	call   4051f0 <__fprintf_chk@plt>
  40b5ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5f3:	lea    rdx,[rip+0x2a2be]        # 4358b8 <_IO_stdin_used@@Base+0x98b8>
  40b5fa:	mov    r9,rbx
  40b5fd:	mov    r8,rbx
  40b600:	mov    rcx,rbx
  40b603:	mov    esi,0x1
  40b608:	xor    eax,eax
  40b60a:	mov    QWORD PTR [rsp],rbx
  40b60e:	call   4051f0 <__fprintf_chk@plt>
  40b613:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b61a:	mov    QWORD PTR [rsp],rbx
  40b61e:	lea    rdx,[rip+0x2a31b]        # 435940 <_IO_stdin_used@@Base+0x9940>
  40b625:	push   rbx
  40b626:	push   rbx
  40b627:	mov    r9,rbx
  40b62a:	mov    r8,rbx
  40b62d:	mov    rcx,rbx
  40b630:	mov    esi,0x1
  40b635:	xor    eax,eax
  40b637:	call   4051f0 <__fprintf_chk@plt>
  40b63c:	add    rsp,0x18
  40b640:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b647:	lea    rdx,[rip+0x2a382]        # 4359d0 <_IO_stdin_used@@Base+0x99d0>
  40b64e:	push   rbx
  40b64f:	mov    r9,rbx
  40b652:	mov    r8,rbx
  40b655:	mov    rcx,rbx
  40b658:	mov    esi,0x1
  40b65d:	xor    eax,eax
  40b65f:	call   4051f0 <__fprintf_chk@plt>
  40b664:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b66b:	push   rbx
  40b66c:	lea    rdx,[rip+0x2a3c5]        # 435a38 <_IO_stdin_used@@Base+0x9a38>
  40b673:	push   rbx
  40b674:	push   rbx
  40b675:	mov    r9,rbx
  40b678:	push   rbx
  40b679:	mov    r8,rbx
  40b67c:	mov    rcx,rbx
  40b67f:	mov    esi,0x1
  40b684:	xor    eax,eax
  40b686:	call   4051f0 <__fprintf_chk@plt>
  40b68b:	add    rsp,0x30
  40b68f:	xor    eax,eax
  40b691:	pop    rbx
  40b692:	ret    
  40b693:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b69d:	nop    DWORD PTR [rax]
  40b6a0:	push   rbp
  40b6a1:	push   rbx
  40b6a2:	sub    rsp,0x8
  40b6a6:	test   rdi,rdi
  40b6a9:	je     40b6ed <__flatcc_gen_sort@@Base+0x1ad>
  40b6ab:	mov    rbx,rdi
  40b6ae:	xor    ebp,ebp
  40b6b0:	test   BYTE PTR [rbx+0x70],0x4
  40b6b4:	jne    40b6cb <__flatcc_gen_sort@@Base+0x18b>
  40b6b6:	cmp    WORD PTR [rbx+0x28],0xe
  40b6bb:	jne    40b6c8 <__flatcc_gen_sort@@Base+0x188>
  40b6bd:	mov    rax,QWORD PTR [rbx+0x18]
  40b6c1:	cmp    WORD PTR [rax+0x10],0x1
  40b6c6:	je     40b6e0 <__flatcc_gen_sort@@Base+0x1a0>
  40b6c8:	add    ebp,0x1
  40b6cb:	mov    rbx,QWORD PTR [rbx]
  40b6ce:	test   rbx,rbx
  40b6d1:	jne    40b6b0 <__flatcc_gen_sort@@Base+0x170>
  40b6d3:	add    rsp,0x8
  40b6d7:	mov    eax,ebp
  40b6d9:	pop    rbx
  40b6da:	pop    rbp
  40b6db:	ret    
  40b6dc:	nop    DWORD PTR [rax+0x0]
  40b6e0:	mov    rdi,QWORD PTR [rax+0x28]
  40b6e4:	call   40b6a0 <__flatcc_gen_sort@@Base+0x160>
  40b6e9:	add    ebp,eax
  40b6eb:	jmp    40b6cb <__flatcc_gen_sort@@Base+0x18b>
  40b6ed:	xor    ebp,ebp
  40b6ef:	jmp    40b6d3 <__flatcc_gen_sort@@Base+0x193>
  40b6f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b6fc:	nop    DWORD PTR [rax+0x0]
  40b700:	push   r15
  40b702:	push   r14
  40b704:	mov    r14d,edx
  40b707:	push   r13
  40b709:	push   r12
  40b70b:	lea    rdx,[rip+0x2a39d]        # 435aaf <_IO_stdin_used@@Base+0x9aaf>
  40b712:	push   rbp
  40b713:	push   rbx
  40b714:	mov    rbp,rdi
  40b717:	mov    r13,r8
  40b71a:	mov    r15,rsi
  40b71d:	mov    rsi,r8
  40b720:	sub    rsp,0x208
  40b727:	mov    rax,QWORD PTR fs:0x28
  40b730:	mov    QWORD PTR [rsp+0x1f8],rax
  40b738:	xor    eax,eax
  40b73a:	lea    rax,[rip+0x3b98d]        # 4470ce <fb_schema_table_missing@@Base+0x247e>
  40b741:	test   r9d,r9d
  40b744:	lea    rbx,[rsp+0x20]
  40b749:	lea    r12,[rsp+0x110]
  40b751:	mov    QWORD PTR [rsp+0x8],rcx
  40b756:	mov    ecx,0x1d
  40b75b:	cmovne rax,rdx
  40b75f:	mov    rdi,rbx
  40b762:	mov    rdx,rbx
  40b765:	mov    QWORD PTR [rsp],rax
  40b769:	xor    eax,eax
  40b76b:	rep stos QWORD PTR es:[rdi],rax
  40b76e:	mov    ecx,0x1d
  40b773:	mov    rdi,r12
  40b776:	rep stos QWORD PTR es:[rdi],rax
  40b779:	mov    rdi,QWORD PTR [r8+0x18]
  40b77d:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40b782:	mov    r13,QWORD PTR [r13+0x28]
  40b786:	test   r13,r13
  40b789:	je     40b897 <__flatcc_gen_sort@@Base+0x357>
  40b78f:	mov    rax,QWORD PTR [r13+0x8]
  40b793:	mov    r8,QWORD PTR [rax]
  40b796:	mov    rcx,QWORD PTR [rax+0x8]
  40b79a:	movzx  eax,WORD PTR [r13+0x28]
  40b79f:	cmp    ax,0xa
  40b7a3:	je     40b8c8 <__flatcc_gen_sort@@Base+0x388>
  40b7a9:	cmp    ax,0xe
  40b7ad:	je     40b810 <__flatcc_gen_sort@@Base+0x2d0>
  40b7af:	test   ax,ax
  40b7b2:	je     40b88a <__flatcc_gen_sort@@Base+0x34a>
  40b7b8:	mov    rax,QWORD PTR [rip+0x44829]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40b7bf:	lea    rcx,[rip+0x2a662]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40b7c6:	lea    rdx,[rip+0x292f4]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40b7cd:	lea    r9,[rip+0x2a6fc]        # 435ed0 <_IO_stdin_used@@Base+0x9ed0>
  40b7d4:	mov    esi,0x1
  40b7d9:	mov    r8d,0x558
  40b7df:	mov    rdi,QWORD PTR [rax]
  40b7e2:	xor    eax,eax
  40b7e4:	call   4051f0 <__fprintf_chk@plt>
  40b7e9:	lea    rcx,[rip+0x33db0]        # 43f5a0 <_IO_stdin_used@@Base+0x135a0>
  40b7f0:	lea    rsi,[rip+0x2a631]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40b7f7:	lea    rdi,[rip+0x2a30b]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40b7fe:	mov    edx,0x558
  40b803:	call   4050f0 <__assert_fail@plt>
  40b808:	nop    DWORD PTR [rax+rax*1+0x0]
  40b810:	mov    rsi,QWORD PTR [r13+0x18]
  40b814:	mov    rdx,r12
  40b817:	mov    QWORD PTR [rsp+0x18],rcx
  40b81c:	mov    QWORD PTR [rsp+0x10],r8
  40b821:	mov    rdi,QWORD PTR [rsi+0x18]
  40b825:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40b82a:	mov    rax,QWORD PTR [r13+0x18]
  40b82e:	mov    r8,QWORD PTR [rsp+0x10]
  40b833:	mov    rcx,QWORD PTR [rsp+0x18]
  40b838:	movzx  eax,WORD PTR [rax+0x10]
  40b83c:	test   ax,ax
  40b83f:	je     40b910 <__flatcc_gen_sort@@Base+0x3d0>
  40b845:	cmp    ax,0x1
  40b849:	jne    40b960 <__flatcc_gen_sort@@Base+0x420>
  40b84f:	sub    rsp,0x8
  40b853:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b85a:	lea    rdx,[rip+0x2a54f]        # 435db0 <_IO_stdin_used@@Base+0x9db0>
  40b861:	push   r12
  40b863:	push   r8
  40b865:	mov    r9,rbp
  40b868:	push   rcx
  40b869:	push   rbx
  40b86a:	mov    rcx,rbp
  40b86d:	push   QWORD PTR [rsp+0x30]
  40b871:	push   r14
  40b873:	mov    esi,0x1
  40b878:	push   r15
  40b87a:	mov    r8,QWORD PTR [rsp+0x40]
  40b87f:	xor    eax,eax
  40b881:	call   4051f0 <__fprintf_chk@plt>
  40b886:	add    rsp,0x40
  40b88a:	mov    r13,QWORD PTR [r13+0x0]
  40b88e:	test   r13,r13
  40b891:	jne    40b78f <__flatcc_gen_sort@@Base+0x24f>
  40b897:	xor    eax,eax
  40b899:	mov    rbx,QWORD PTR [rsp+0x1f8]
  40b8a1:	xor    rbx,QWORD PTR fs:0x28
  40b8aa:	jne    40b9b0 <__flatcc_gen_sort@@Base+0x470>
  40b8b0:	add    rsp,0x208
  40b8b7:	pop    rbx
  40b8b8:	pop    rbp
  40b8b9:	pop    r12
  40b8bb:	pop    r13
  40b8bd:	pop    r14
  40b8bf:	pop    r15
  40b8c1:	ret    
  40b8c2:	nop    WORD PTR [rax+rax*1+0x0]
  40b8c8:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b8cf:	push   r8
  40b8d1:	lea    rdx,[rip+0x2a5c0]        # 435e98 <_IO_stdin_used@@Base+0x9e98>
  40b8d8:	push   rcx
  40b8d9:	push   rbx
  40b8da:	xor    eax,eax
  40b8dc:	push   QWORD PTR [rsp+0x20]
  40b8e0:	push   r14
  40b8e2:	mov    r9,rbp
  40b8e5:	push   r15
  40b8e7:	mov    r8,QWORD PTR [rsp+0x30]
  40b8ec:	mov    rcx,rbp
  40b8ef:	mov    esi,0x1
  40b8f4:	call   4051f0 <__fprintf_chk@plt>
  40b8f9:	mov    r13,QWORD PTR [r13+0x0]
  40b8fd:	add    rsp,0x30
  40b901:	test   r13,r13
  40b904:	jne    40b78f <__flatcc_gen_sort@@Base+0x24f>
  40b90a:	jmp    40b897 <__flatcc_gen_sort@@Base+0x357>
  40b90c:	nop    DWORD PTR [rax+0x0]
  40b910:	sub    rsp,0x8
  40b914:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b91b:	lea    rdx,[rip+0x2a44e]        # 435d70 <_IO_stdin_used@@Base+0x9d70>
  40b922:	push   r12
  40b924:	push   r8
  40b926:	xor    eax,eax
  40b928:	push   rcx
  40b929:	push   rbx
  40b92a:	mov    r9,rbp
  40b92d:	push   QWORD PTR [rsp+0x30]
  40b931:	push   r14
  40b933:	mov    rcx,rbp
  40b936:	push   r15
  40b938:	mov    r8,QWORD PTR [rsp+0x40]
  40b93d:	mov    esi,0x1
  40b942:	call   4051f0 <__fprintf_chk@plt>
  40b947:	mov    r13,QWORD PTR [r13+0x0]
  40b94b:	add    rsp,0x40
  40b94f:	test   r13,r13
  40b952:	jne    40b78f <__flatcc_gen_sort@@Base+0x24f>
  40b958:	jmp    40b897 <__flatcc_gen_sort@@Base+0x357>
  40b95d:	nop    DWORD PTR [rax]
  40b960:	mov    rax,QWORD PTR [rip+0x44681]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40b967:	lea    rcx,[rip+0x2a4ba]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40b96e:	lea    rdx,[rip+0x2914c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40b975:	lea    r9,[rip+0x2a474]        # 435df0 <_IO_stdin_used@@Base+0x9df0>
  40b97c:	mov    esi,0x1
  40b981:	mov    r8d,0x54e
  40b987:	mov    rdi,QWORD PTR [rax]
  40b98a:	xor    eax,eax
  40b98c:	call   4051f0 <__fprintf_chk@plt>
  40b991:	lea    rcx,[rip+0x33c08]        # 43f5a0 <_IO_stdin_used@@Base+0x135a0>
  40b998:	lea    rsi,[rip+0x2a489]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40b99f:	lea    rdi,[rip+0x2a163]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40b9a6:	mov    edx,0x54e
  40b9ab:	call   4050f0 <__assert_fail@plt>
  40b9b0:	call   4050d0 <__stack_chk_fail@plt>
  40b9b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b9c0:	push   r15
  40b9c2:	push   r14
  40b9c4:	push   r13
  40b9c6:	push   r12
  40b9c8:	mov    r13d,edx
  40b9cb:	push   rbp
  40b9cc:	push   rbx
  40b9cd:	mov    rbx,rdi
  40b9d0:	sub    rsp,0x18
  40b9d4:	mov    rdi,QWORD PTR [rsi+0x28]
  40b9d8:	call   40b6a0 <__flatcc_gen_sort@@Base+0x160>
  40b9dd:	test   eax,eax
  40b9df:	jle    40baab <__flatcc_gen_sort@@Base+0x56b>
  40b9e5:	mov    r12d,eax
  40b9e8:	lea    r14,[rip+0x2a0cd]        # 435abc <_IO_stdin_used@@Base+0x9abc>
  40b9ef:	lea    rax,[rip+0x386f7]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40b9f6:	test   r8d,r8d
  40b9f9:	mov    ebp,ecx
  40b9fb:	cmovne rax,r14
  40b9ff:	xor    r15d,r15d
  40ba02:	mov    QWORD PTR [rsp+0x8],rax
  40ba07:	jmp    40ba5a <__flatcc_gen_sort@@Base+0x51a>
  40ba09:	nop    DWORD PTR [rax+0x0]
  40ba10:	cmp    ebp,0x4
  40ba13:	jle    40ba79 <__flatcc_gen_sort@@Base+0x539>
  40ba15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba1c:	mov    rcx,QWORD PTR [rsp+0x8]
  40ba21:	lea    rdx,[rip+0x2a097]        # 435abf <_IO_stdin_used@@Base+0x9abf>
  40ba28:	mov    esi,0x1
  40ba2d:	xor    eax,eax
  40ba2f:	call   4051f0 <__fprintf_chk@plt>
  40ba34:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba3b:	lea    rdx,[rip+0x2a0e6]        # 435b28 <_IO_stdin_used@@Base+0x9b28>
  40ba42:	xor    eax,eax
  40ba44:	mov    ecx,r14d
  40ba47:	mov    esi,0x1
  40ba4c:	add    r15,0x1
  40ba50:	call   4051f0 <__fprintf_chk@plt>
  40ba55:	cmp    r12d,r15d
  40ba58:	jle    40ba98 <__flatcc_gen_sort@@Base+0x558>
  40ba5a:	test   ebp,ebp
  40ba5c:	mov    eax,r15d
  40ba5f:	lea    r14d,[r13+r15*1+0x0]
  40ba64:	je     40ba34 <__flatcc_gen_sort@@Base+0x4f4>
  40ba66:	test   r15,r15
  40ba69:	je     40ba10 <__flatcc_gen_sort@@Base+0x4d0>
  40ba6b:	test   al,0x3
  40ba6d:	jne    40ba79 <__flatcc_gen_sort@@Base+0x539>
  40ba6f:	mov    ecx,ebp
  40ba71:	sub    ecx,r15d
  40ba74:	cmp    ecx,0x2
  40ba77:	jg     40ba15 <__flatcc_gen_sort@@Base+0x4d5>
  40ba79:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba80:	lea    rdx,[rip+0x2a03e]        # 435ac5 <_IO_stdin_used@@Base+0x9ac5>
  40ba87:	mov    esi,0x1
  40ba8c:	xor    eax,eax
  40ba8e:	call   4051f0 <__fprintf_chk@plt>
  40ba93:	jmp    40ba34 <__flatcc_gen_sort@@Base+0x4f4>
  40ba95:	nop    DWORD PTR [rax]
  40ba98:	lea    eax,[r12+r13*1]
  40ba9c:	add    rsp,0x18
  40baa0:	pop    rbx
  40baa1:	pop    rbp
  40baa2:	pop    r12
  40baa4:	pop    r13
  40baa6:	pop    r14
  40baa8:	pop    r15
  40baaa:	ret    
  40baab:	mov    eax,edx
  40baad:	jmp    40ba9c <__flatcc_gen_sort@@Base+0x55c>
  40baaf:	nop
  40bab0:	push   r15
  40bab2:	push   r14
  40bab4:	mov    r15d,ecx
  40bab7:	push   r13
  40bab9:	push   r12
  40babb:	mov    ecx,0x1d
  40bac0:	push   rbp
  40bac1:	push   rbx
  40bac2:	mov    rbp,rdi
  40bac5:	sub    rsp,0x118
  40bacc:	mov    rax,QWORD PTR fs:0x28
  40bad5:	mov    QWORD PTR [rsp+0x108],rax
  40badd:	xor    eax,eax
  40badf:	lea    rdi,[rsp+0x20]
  40bae4:	cmp    r15d,0x1
  40bae8:	mov    DWORD PTR [rsp+0x1c],edx
  40baec:	mov    DWORD PTR [rsp+0xc],r8d
  40baf1:	mov    QWORD PTR [rsp],rdi
  40baf5:	rep stos QWORD PTR es:[rdi],rax
  40baf8:	lea    rax,[rip+0x29fd0]        # 435acf <_IO_stdin_used@@Base+0x9acf>
  40baff:	mov    QWORD PTR [rsp+0x10],rax
  40bb04:	je     40bb21 <__flatcc_gen_sort@@Base+0x5e1>
  40bb06:	lea    rax,[rip+0x385e1]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40bb0d:	lea    rdx,[rip+0x29fb4]        # 435ac8 <_IO_stdin_used@@Base+0x9ac8>
  40bb14:	cmp    r15d,0x2
  40bb18:	cmove  rax,rdx
  40bb1c:	mov    QWORD PTR [rsp+0x10],rax
  40bb21:	mov    r12,QWORD PTR [rsi]
  40bb24:	xor    ebx,ebx
  40bb26:	test   r12,r12
  40bb29:	je     40c000 <__flatcc_gen_sort@@Base+0xac0>
  40bb2f:	mov    rax,QWORD PTR [r12+0x8]
  40bb34:	xor    ebx,ebx
  40bb36:	mov    DWORD PTR [rsp+0x18],0x0
  40bb3e:	mov    r14,QWORD PTR [rax]
  40bb41:	mov    r13d,DWORD PTR [rax+0x8]
  40bb45:	movzx  eax,WORD PTR [r12+0x28]
  40bb4b:	cmp    ax,0x8
  40bb4f:	je     40bbf0 <__flatcc_gen_sort@@Base+0x6b0>
  40bb55:	cmp    ax,0xe
  40bb59:	jne    40bc18 <__flatcc_gen_sort@@Base+0x6d8>
  40bb5f:	mov    rsi,QWORD PTR [r12+0x18]
  40bb64:	mov    rdx,QWORD PTR [rsp]
  40bb68:	mov    rdi,QWORD PTR [rsi+0x18]
  40bb6c:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40bb71:	mov    rax,QWORD PTR [r12+0x18]
  40bb76:	cmp    WORD PTR [rax+0x10],0x1
  40bb7b:	je     40bd50 <__flatcc_gen_sort@@Base+0x810>
  40bb81:	test   BYTE PTR [r12+0x70],0x4
  40bb87:	jne    40bc70 <__flatcc_gen_sort@@Base+0x730>
  40bb8d:	cmp    QWORD PTR [r12+0x80],0x1
  40bb96:	je     40bce8 <__flatcc_gen_sort@@Base+0x7a8>
  40bb9c:	cmp    r15d,0x1
  40bba0:	je     40bfc0 <__flatcc_gen_sort@@Base+0xa80>
  40bba6:	cmp    r15d,0x2
  40bbaa:	jne    40bce8 <__flatcc_gen_sort@@Base+0x7a8>
  40bbb0:	mov    r8d,DWORD PTR [rsp+0xc]
  40bbb5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bbbc:	test   r8d,r8d
  40bbbf:	je     40c130 <__flatcc_gen_sort@@Base+0xbf0>
  40bbc5:	push   r14
  40bbc7:	push   r13
  40bbc9:	lea    rdx,[rip+0x2a3e0]        # 435fb0 <_IO_stdin_used@@Base+0x9fb0>
  40bbd0:	mov    rcx,QWORD PTR [rsp+0x10]
  40bbd5:	mov    esi,0x1
  40bbda:	mov    r9,r14
  40bbdd:	mov    r8d,r13d
  40bbe0:	xor    eax,eax
  40bbe2:	call   4051f0 <__fprintf_chk@plt>
  40bbe7:	pop    rcx
  40bbe8:	pop    rsi
  40bbe9:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40bbee:	xchg   ax,ax
  40bbf0:	cmp    DWORD PTR [r12+0x18],0xb
  40bbf6:	ja     40bf30 <__flatcc_gen_sort@@Base+0x9f0>
  40bbfc:	mov    eax,DWORD PTR [r12+0x18]
  40bc01:	lea    rcx,[rip+0x33738]        # 43f340 <_IO_stdin_used@@Base+0x13340>
  40bc08:	movsxd rax,DWORD PTR [rcx+rax*4]
  40bc0c:	add    rax,rcx
  40bc0f:	jmp    rax
  40bc11:	nop    DWORD PTR [rax+0x0]
  40bc18:	mov    rax,QWORD PTR [rip+0x443c9]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40bc1f:	lea    rcx,[rip+0x2a202]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40bc26:	lea    rdx,[rip+0x28e94]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40bc2d:	lea    r9,[rip+0x29ef8]        # 435b2c <_IO_stdin_used@@Base+0x9b2c>
  40bc34:	mov    esi,0x1
  40bc39:	mov    r8d,0x3e1
  40bc3f:	mov    rdi,QWORD PTR [rax]
  40bc42:	xor    eax,eax
  40bc44:	call   4051f0 <__fprintf_chk@plt>
  40bc49:	lea    rcx,[rip+0x33a10]        # 43f660 <_IO_stdin_used@@Base+0x13660>
  40bc50:	lea    rsi,[rip+0x2a1d1]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40bc57:	lea    rdi,[rip+0x29eab]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40bc5e:	mov    edx,0x3e1
  40bc63:	call   4050f0 <__assert_fail@plt>
  40bc68:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc70:	mov    eax,DWORD PTR [rsp+0x18]
  40bc74:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bc7b:	lea    rdx,[rip+0x29e73]        # 435af5 <_IO_stdin_used@@Base+0x9af5>
  40bc82:	mov    esi,0x1
  40bc87:	add    ebx,0x1
  40bc8a:	lea    r13d,[rax+0x1]
  40bc8e:	mov    ecx,eax
  40bc90:	xor    eax,eax
  40bc92:	call   4051f0 <__fprintf_chk@plt>
  40bc97:	mov    DWORD PTR [rsp+0x18],r13d
  40bc9c:	mov    r12,QWORD PTR [r12]
  40bca0:	test   r12,r12
  40bca3:	je     40c000 <__flatcc_gen_sort@@Base+0xac0>
  40bca9:	mov    rax,QWORD PTR [r12+0x8]
  40bcae:	test   ebx,ebx
  40bcb0:	mov    r14,QWORD PTR [rax]
  40bcb3:	mov    r13d,DWORD PTR [rax+0x8]
  40bcb7:	jle    40bb45 <__flatcc_gen_sort@@Base+0x605>
  40bcbd:	test   bl,0x3
  40bcc0:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bcc7:	jne    40bd30 <__flatcc_gen_sort@@Base+0x7f0>
  40bcc9:	lea    rdx,[rip+0x29e08]        # 435ad8 <_IO_stdin_used@@Base+0x9ad8>
  40bcd0:	mov    esi,0x1
  40bcd5:	xor    eax,eax
  40bcd7:	call   4051f0 <__fprintf_chk@plt>
  40bcdc:	jmp    40bb45 <__flatcc_gen_sort@@Base+0x605>
  40bce1:	nop    DWORD PTR [rax+0x0]
  40bce8:	mov    esi,DWORD PTR [rsp+0xc]
  40bcec:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bcf3:	test   esi,esi
  40bcf5:	jne    40bda8 <__flatcc_gen_sort@@Base+0x868>
  40bcfb:	lea    rdx,[rip+0x29e1c]        # 435b1e <_IO_stdin_used@@Base+0x9b1e>
  40bd02:	mov    r9d,ebx
  40bd05:	mov    r8,r14
  40bd08:	mov    ecx,r13d
  40bd0b:	mov    esi,0x1
  40bd10:	xor    eax,eax
  40bd12:	call   4051f0 <__fprintf_chk@plt>
  40bd17:	nop    WORD PTR [rax+rax*1+0x0]
  40bd20:	add    ebx,0x1
  40bd23:	jmp    40bc9c <__flatcc_gen_sort@@Base+0x75c>
  40bd28:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd30:	lea    rdx,[rip+0x29da6]        # 435add <_IO_stdin_used@@Base+0x9add>
  40bd37:	mov    esi,0x1
  40bd3c:	xor    eax,eax
  40bd3e:	call   4051f0 <__fprintf_chk@plt>
  40bd43:	jmp    40bb45 <__flatcc_gen_sort@@Base+0x605>
  40bd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd50:	test   BYTE PTR [r12+0x70],0x4
  40bd56:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bd5d:	jne    40bef0 <__flatcc_gen_sort@@Base+0x9b0>
  40bd63:	mov    ecx,DWORD PTR [rsp+0xc]
  40bd67:	test   ecx,ecx
  40bd69:	je     40c0a0 <__flatcc_gen_sort@@Base+0xb60>
  40bd6f:	sub    rsp,0x8
  40bd73:	lea    rdx,[rip+0x2a1c6]        # 435f40 <_IO_stdin_used@@Base+0x9f40>
  40bd7a:	mov    r9d,r13d
  40bd7d:	push   r14
  40bd7f:	push   r13
  40bd81:	mov    esi,0x1
  40bd86:	push   r14
  40bd88:	mov    r8,QWORD PTR [rsp+0x30]
  40bd8d:	xor    eax,eax
  40bd8f:	mov    rcx,QWORD PTR [rsp+0x20]
  40bd94:	add    ebx,0x1
  40bd97:	call   4051f0 <__fprintf_chk@plt>
  40bd9c:	add    rsp,0x20
  40bda0:	jmp    40bc9c <__flatcc_gen_sort@@Base+0x75c>
  40bda5:	nop    DWORD PTR [rax]
  40bda8:	sub    rsp,0x8
  40bdac:	lea    rdx,[rip+0x29d58]        # 435b0b <_IO_stdin_used@@Base+0x9b0b>
  40bdb3:	mov    ecx,r13d
  40bdb6:	push   r14
  40bdb8:	mov    r9d,r13d
  40bdbb:	mov    r8,r14
  40bdbe:	mov    esi,0x1
  40bdc3:	xor    eax,eax
  40bdc5:	call   4051f0 <__fprintf_chk@plt>
  40bdca:	pop    rdx
  40bdcb:	pop    rcx
  40bdcc:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40bdd1:	nop    DWORD PTR [rax+0x0]
  40bdd8:	lea    r8,[rip+0x28da9]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  40bddf:	nop
  40bde0:	test   BYTE PTR [r12+0x70],0x4
  40bde6:	jne    40bc70 <__flatcc_gen_sort@@Base+0x730>
  40bdec:	cmp    QWORD PTR [r12+0x80],0x1
  40bdf5:	je     40bce8 <__flatcc_gen_sort@@Base+0x7a8>
  40bdfb:	cmp    r15d,0x1
  40bdff:	je     40bf80 <__flatcc_gen_sort@@Base+0xa40>
  40be05:	cmp    r15d,0x2
  40be09:	jne    40bce8 <__flatcc_gen_sort@@Base+0x7a8>
  40be0f:	mov    r9d,DWORD PTR [rsp+0xc]
  40be14:	mov    rdi,QWORD PTR [rbp+0xd0]
  40be1b:	test   r9d,r9d
  40be1e:	je     40c050 <__flatcc_gen_sort@@Base+0xb10>
  40be24:	sub    rsp,0x8
  40be28:	lea    rdx,[rip+0x2a219]        # 436048 <_IO_stdin_used@@Base+0xa048>
  40be2f:	mov    r9d,r13d
  40be32:	push   r14
  40be34:	push   r13
  40be36:	mov    rcx,rbp
  40be39:	push   r14
  40be3b:	mov    esi,0x1
  40be40:	xor    eax,eax
  40be42:	call   4051f0 <__fprintf_chk@plt>
  40be47:	add    rsp,0x20
  40be4b:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40be50:	lea    r8,[rip+0x28d38]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  40be57:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40be59:	nop    DWORD PTR [rax+0x0]
  40be60:	lea    r8,[rip+0x28d2e]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  40be67:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40be6c:	nop    DWORD PTR [rax+0x0]
  40be70:	lea    r8,[rip+0x28c15]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40be77:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40be7c:	nop    DWORD PTR [rax+0x0]
  40be80:	lea    r8,[rip+0x28bff]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40be87:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40be8c:	nop    DWORD PTR [rax+0x0]
  40be90:	lea    r8,[rip+0x28ce3]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  40be97:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40be9c:	nop    DWORD PTR [rax+0x0]
  40bea0:	lea    r8,[rip+0x28cda]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40bea7:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40beac:	nop    DWORD PTR [rax+0x0]
  40beb0:	lea    r8,[rip+0x28cd2]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40beb7:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40bebc:	nop    DWORD PTR [rax+0x0]
  40bec0:	lea    r8,[rip+0x28cc9]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40bec7:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40becc:	nop    DWORD PTR [rax+0x0]
  40bed0:	lea    r8,[rip+0x28ca4]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  40bed7:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40bedc:	nop    DWORD PTR [rax+0x0]
  40bee0:	lea    r8,[rip+0x28c9b]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  40bee7:	jmp    40bde0 <__flatcc_gen_sort@@Base+0x8a0>
  40beec:	nop    DWORD PTR [rax+0x0]
  40bef0:	mov    r14d,DWORD PTR [rsp+0x18]
  40bef5:	lea    rdx,[rip+0x2a004]        # 435f00 <_IO_stdin_used@@Base+0x9f00>
  40befc:	mov    esi,0x1
  40bf01:	xor    eax,eax
  40bf03:	mov    r8d,r14d
  40bf06:	mov    ecx,r14d
  40bf09:	call   4051f0 <__fprintf_chk@plt>
  40bf0e:	mov    eax,r14d
  40bf11:	add    eax,0x1
  40bf14:	mov    DWORD PTR [rsp+0x18],eax
  40bf18:	mov    rax,QWORD PTR [r12+0x18]
  40bf1d:	mov    rdi,QWORD PTR [rax+0x28]
  40bf21:	call   40b6a0 <__flatcc_gen_sort@@Base+0x160>
  40bf26:	add    ebx,eax
  40bf28:	jmp    40bc9c <__flatcc_gen_sort@@Base+0x75c>
  40bf2d:	nop    DWORD PTR [rax]
  40bf30:	mov    rax,QWORD PTR [rip+0x440b1]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40bf37:	lea    rcx,[rip+0x215b2]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40bf3e:	lea    rdx,[rip+0x28b7c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40bf45:	lea    r9,[rip+0x2156c]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40bf4c:	mov    esi,0x1
  40bf51:	mov    r8d,0x60
  40bf57:	mov    rdi,QWORD PTR [rax]
  40bf5a:	xor    eax,eax
  40bf5c:	call   4051f0 <__fprintf_chk@plt>
  40bf61:	lea    rcx,[rip+0x336c8]        # 43f630 <_IO_stdin_used@@Base+0x13630>
  40bf68:	lea    rsi,[rip+0x21581]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40bf6f:	lea    rdi,[rip+0x29b93]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40bf76:	mov    edx,0x60
  40bf7b:	call   4050f0 <__assert_fail@plt>
  40bf80:	mov    eax,DWORD PTR [rsp+0xc]
  40bf84:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bf8b:	test   eax,eax
  40bf8d:	je     40c078 <__flatcc_gen_sort@@Base+0xb38>
  40bf93:	sub    rsp,0x8
  40bf97:	lea    rdx,[rip+0x2a05a]        # 435ff8 <_IO_stdin_used@@Base+0x9ff8>
  40bf9e:	mov    r9d,r13d
  40bfa1:	push   r14
  40bfa3:	push   r13
  40bfa5:	mov    rcx,rbp
  40bfa8:	push   r14
  40bfaa:	mov    esi,0x1
  40bfaf:	xor    eax,eax
  40bfb1:	call   4051f0 <__fprintf_chk@plt>
  40bfb6:	add    rsp,0x20
  40bfba:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40bfbf:	nop
  40bfc0:	mov    eax,DWORD PTR [rsp+0xc]
  40bfc4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bfcb:	test   eax,eax
  40bfcd:	je     40c100 <__flatcc_gen_sort@@Base+0xbc0>
  40bfd3:	push   r14
  40bfd5:	push   r13
  40bfd7:	lea    rdx,[rip+0x29f82]        # 435f60 <_IO_stdin_used@@Base+0x9f60>
  40bfde:	mov    rcx,QWORD PTR [rsp+0x10]
  40bfe3:	mov    r8d,r13d
  40bfe6:	mov    r9,r14
  40bfe9:	mov    esi,0x1
  40bfee:	xor    eax,eax
  40bff0:	call   4051f0 <__fprintf_chk@plt>
  40bff5:	pop    r11
  40bff7:	pop    r13
  40bff9:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40bffe:	xchg   ax,ax
  40c000:	mov    eax,DWORD PTR [rsp+0x1c]
  40c004:	test   eax,eax
  40c006:	jle    40c022 <__flatcc_gen_sort@@Base+0xae2>
  40c008:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c00f:	lea    rdx,[rip+0x29ac2]        # 435ad8 <_IO_stdin_used@@Base+0x9ad8>
  40c016:	mov    esi,0x1
  40c01b:	xor    eax,eax
  40c01d:	call   4051f0 <__fprintf_chk@plt>
  40c022:	mov    rdx,QWORD PTR [rsp+0x108]
  40c02a:	xor    rdx,QWORD PTR fs:0x28
  40c033:	mov    eax,ebx
  40c035:	jne    40c15a <__flatcc_gen_sort@@Base+0xc1a>
  40c03b:	add    rsp,0x118
  40c042:	pop    rbx
  40c043:	pop    rbp
  40c044:	pop    r12
  40c046:	pop    r13
  40c048:	pop    r14
  40c04a:	pop    r15
  40c04c:	ret    
  40c04d:	nop    DWORD PTR [rax]
  40c050:	push   rbx
  40c051:	lea    rdx,[rip+0x2a018]        # 436070 <_IO_stdin_used@@Base+0xa070>
  40c058:	push   r14
  40c05a:	mov    r9d,r13d
  40c05d:	mov    rcx,rbp
  40c060:	mov    esi,0x1
  40c065:	xor    eax,eax
  40c067:	call   4051f0 <__fprintf_chk@plt>
  40c06c:	pop    rdi
  40c06d:	pop    r8
  40c06f:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40c074:	nop    DWORD PTR [rax+0x0]
  40c078:	push   rbx
  40c079:	lea    rdx,[rip+0x29fa0]        # 436020 <_IO_stdin_used@@Base+0xa020>
  40c080:	push   r14
  40c082:	mov    r9d,r13d
  40c085:	mov    rcx,rbp
  40c088:	mov    esi,0x1
  40c08d:	xor    eax,eax
  40c08f:	call   4051f0 <__fprintf_chk@plt>
  40c094:	pop    r10
  40c096:	pop    r11
  40c098:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40c09d:	nop    DWORD PTR [rax]
  40c0a0:	sub    rsp,0x8
  40c0a4:	lea    rdx,[rip+0x29a35]        # 435ae0 <_IO_stdin_used@@Base+0x9ae0>
  40c0ab:	mov    r9d,r13d
  40c0ae:	push   r14
  40c0b0:	mov    r8,QWORD PTR [rsp+0x20]
  40c0b5:	mov    esi,0x1
  40c0ba:	mov    rcx,QWORD PTR [rsp+0x10]
  40c0bf:	xor    eax,eax
  40c0c1:	call   4051f0 <__fprintf_chk@plt>
  40c0c6:	mov    ecx,DWORD PTR [rsp+0x2c]
  40c0ca:	mov    rsi,QWORD PTR [r12+0x18]
  40c0cf:	mov    edx,ebx
  40c0d1:	xor    r8d,r8d
  40c0d4:	mov    rdi,rbp
  40c0d7:	call   40b9c0 <__flatcc_gen_sort@@Base+0x480>
  40c0dc:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c0e3:	lea    rdx,[rip+0x29b6d]        # 435c57 <_IO_stdin_used@@Base+0x9c57>
  40c0ea:	mov    ebx,eax
  40c0ec:	mov    esi,0x1
  40c0f1:	xor    eax,eax
  40c0f3:	call   4051f0 <__fprintf_chk@plt>
  40c0f8:	pop    rax
  40c0f9:	pop    rdx
  40c0fa:	jmp    40bc9c <__flatcc_gen_sort@@Base+0x75c>
  40c0ff:	nop
  40c100:	sub    rsp,0x8
  40c104:	lea    rdx,[rip+0x29e7d]        # 435f88 <_IO_stdin_used@@Base+0x9f88>
  40c10b:	mov    r9,r14
  40c10e:	push   rbx
  40c10f:	mov    rcx,QWORD PTR [rsp+0x10]
  40c114:	mov    r8d,r13d
  40c117:	mov    esi,0x1
  40c11c:	xor    eax,eax
  40c11e:	call   4051f0 <__fprintf_chk@plt>
  40c123:	pop    r9
  40c125:	pop    r10
  40c127:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40c12c:	nop    DWORD PTR [rax+0x0]
  40c130:	sub    rsp,0x8
  40c134:	lea    rdx,[rip+0x29e9d]        # 435fd8 <_IO_stdin_used@@Base+0x9fd8>
  40c13b:	mov    r9,r14
  40c13e:	push   rbx
  40c13f:	mov    rcx,QWORD PTR [rsp+0x10]
  40c144:	mov    r8d,r13d
  40c147:	mov    esi,0x1
  40c14c:	xor    eax,eax
  40c14e:	call   4051f0 <__fprintf_chk@plt>
  40c153:	pop    rax
  40c154:	pop    rdx
  40c155:	jmp    40bd20 <__flatcc_gen_sort@@Base+0x7e0>
  40c15a:	call   4050d0 <__stack_chk_fail@plt>
  40c15f:	nop
  40c160:	push   r15
  40c162:	push   r14
  40c164:	mov    r14d,edx
  40c167:	push   r13
  40c169:	push   r12
  40c16b:	mov    r12d,ecx
  40c16e:	push   rbp
  40c16f:	push   rbx
  40c170:	mov    rbp,rdi
  40c173:	mov    ecx,0x1d
  40c178:	sub    rsp,0x108
  40c17f:	mov    r15,QWORD PTR [rsi]
  40c182:	lea    rbx,[rsp+0x10]
  40c187:	mov    rax,QWORD PTR fs:0x28
  40c190:	mov    QWORD PTR [rsp+0xf8],rax
  40c198:	xor    eax,eax
  40c19a:	mov    rdi,rbx
  40c19d:	test   r15,r15
  40c1a0:	rep stos QWORD PTR es:[rdi],rax
  40c1a3:	je     40c287 <__flatcc_gen_sort@@Base+0xd47>
  40c1a9:	lea    rax,[rip+0x37f3d]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40c1b0:	lea    rdx,[rip+0x29905]        # 435abc <_IO_stdin_used@@Base+0x9abc>
  40c1b7:	test   r8d,r8d
  40c1ba:	mov    DWORD PTR [rsp+0xc],r8d
  40c1bf:	mov    r13d,r14d
  40c1c2:	cmovne rax,rdx
  40c1c6:	mov    QWORD PTR [rsp],rax
  40c1ca:	test   BYTE PTR [r15+0x70],0x4
  40c1cf:	jne    40c278 <__flatcc_gen_sort@@Base+0xd38>
  40c1d5:	movzx  eax,WORD PTR [r15+0x28]
  40c1da:	cmp    ax,0x8
  40c1de:	je     40c310 <__flatcc_gen_sort@@Base+0xdd0>
  40c1e4:	cmp    ax,0xe
  40c1e8:	jne    40c2b8 <__flatcc_gen_sort@@Base+0xd78>
  40c1ee:	mov    rsi,QWORD PTR [r15+0x18]
  40c1f2:	cmp    WORD PTR [rsi+0x10],0x1
  40c1f7:	je     40c3d0 <__flatcc_gen_sort@@Base+0xe90>
  40c1fd:	test   r12d,r12d
  40c200:	je     40c23e <__flatcc_gen_sort@@Base+0xcfe>
  40c202:	test   r13d,r13d
  40c205:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c20c:	je     40c3f0 <__flatcc_gen_sort@@Base+0xeb0>
  40c212:	test   r13b,0x3
  40c216:	jne    40c227 <__flatcc_gen_sort@@Base+0xce7>
  40c218:	mov    eax,r12d
  40c21b:	sub    eax,r13d
  40c21e:	cmp    eax,0x2
  40c221:	jg     40c3fa <__flatcc_gen_sort@@Base+0xeba>
  40c227:	lea    rdx,[rip+0x29897]        # 435ac5 <_IO_stdin_used@@Base+0x9ac5>
  40c22e:	mov    esi,0x1
  40c233:	xor    eax,eax
  40c235:	call   4051f0 <__fprintf_chk@plt>
  40c23a:	mov    rsi,QWORD PTR [r15+0x18]
  40c23e:	mov    rdi,QWORD PTR [rsi+0x18]
  40c242:	mov    rdx,rbx
  40c245:	lea    r14d,[r13+0x1]
  40c249:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40c24e:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c255:	lea    rdx,[rip+0x298eb]        # 435b47 <_IO_stdin_used@@Base+0x9b47>
  40c25c:	mov    r8d,r13d
  40c25f:	mov    rcx,rbx
  40c262:	mov    esi,0x1
  40c267:	xor    eax,eax
  40c269:	mov    r13d,r14d
  40c26c:	call   4051f0 <__fprintf_chk@plt>
  40c271:	nop    DWORD PTR [rax+0x0]
  40c278:	mov    r15,QWORD PTR [r15]
  40c27b:	test   r15,r15
  40c27e:	jne    40c1ca <__flatcc_gen_sort@@Base+0xc8a>
  40c284:	mov    r14d,r13d
  40c287:	mov    rbx,QWORD PTR [rsp+0xf8]
  40c28f:	xor    rbx,QWORD PTR fs:0x28
  40c298:	mov    eax,r14d
  40c29b:	jne    40c55b <__flatcc_gen_sort@@Base+0x101b>
  40c2a1:	add    rsp,0x108
  40c2a8:	pop    rbx
  40c2a9:	pop    rbp
  40c2aa:	pop    r12
  40c2ac:	pop    r13
  40c2ae:	pop    r14
  40c2b0:	pop    r15
  40c2b2:	ret    
  40c2b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40c2b8:	mov    rax,QWORD PTR [rip+0x43d29]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40c2bf:	lea    rcx,[rip+0x29b62]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40c2c6:	lea    rdx,[rip+0x287f4]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40c2cd:	lea    r9,[rip+0x29dc4]        # 436098 <_IO_stdin_used@@Base+0xa098>
  40c2d4:	mov    esi,0x1
  40c2d9:	mov    r8d,0x352
  40c2df:	mov    rdi,QWORD PTR [rax]
  40c2e2:	xor    eax,eax
  40c2e4:	call   4051f0 <__fprintf_chk@plt>
  40c2e9:	lea    rcx,[rip+0x333b0]        # 43f6a0 <_IO_stdin_used@@Base+0x136a0>
  40c2f0:	lea    rsi,[rip+0x29b31]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40c2f7:	lea    rdi,[rip+0x2980b]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40c2fe:	mov    edx,0x352
  40c303:	call   4050f0 <__assert_fail@plt>
  40c308:	nop    DWORD PTR [rax+rax*1+0x0]
  40c310:	test   r12d,r12d
  40c313:	je     40c33a <__flatcc_gen_sort@@Base+0xdfa>
  40c315:	test   r13d,r13d
  40c318:	jne    40c360 <__flatcc_gen_sort@@Base+0xe20>
  40c31a:	cmp    r12d,0x4
  40c31e:	jg     40c371 <__flatcc_gen_sort@@Base+0xe31>
  40c320:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c327:	lea    rdx,[rip+0x29797]        # 435ac5 <_IO_stdin_used@@Base+0x9ac5>
  40c32e:	mov    esi,0x1
  40c333:	xor    eax,eax
  40c335:	call   4051f0 <__fprintf_chk@plt>
  40c33a:	mov    eax,DWORD PTR [r15+0x18]
  40c33e:	cmp    eax,0x5
  40c341:	je     40c398 <__flatcc_gen_sort@@Base+0xe58>
  40c343:	cmp    eax,0xb
  40c346:	ja     40c4e0 <__flatcc_gen_sort@@Base+0xfa0>
  40c34c:	lea    rdx,[rip+0x3301d]        # 43f370 <_IO_stdin_used@@Base+0x13370>
  40c353:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c357:	add    rax,rdx
  40c35a:	jmp    rax
  40c35c:	nop    DWORD PTR [rax+0x0]
  40c360:	test   r13b,0x3
  40c364:	jne    40c320 <__flatcc_gen_sort@@Base+0xde0>
  40c366:	mov    eax,r12d
  40c369:	sub    eax,r13d
  40c36c:	cmp    eax,0x2
  40c36f:	jle    40c320 <__flatcc_gen_sort@@Base+0xde0>
  40c371:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c378:	mov    rcx,QWORD PTR [rsp]
  40c37c:	lea    rdx,[rip+0x2973c]        # 435abf <_IO_stdin_used@@Base+0x9abf>
  40c383:	xor    eax,eax
  40c385:	mov    esi,0x1
  40c38a:	call   4051f0 <__fprintf_chk@plt>
  40c38f:	mov    eax,DWORD PTR [r15+0x18]
  40c393:	cmp    eax,0x5
  40c396:	jne    40c343 <__flatcc_gen_sort@@Base+0xe03>
  40c398:	lea    r8,[rip+0x286e0]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  40c39f:	mov    rcx,rbp
  40c3a2:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c3a9:	lea    r14d,[r13+0x1]
  40c3ad:	lea    rdx,[rip+0x297a1]        # 435b55 <_IO_stdin_used@@Base+0x9b55>
  40c3b4:	mov    r9d,r13d
  40c3b7:	mov    esi,0x1
  40c3bc:	xor    eax,eax
  40c3be:	mov    r13d,r14d
  40c3c1:	call   4051f0 <__fprintf_chk@plt>
  40c3c6:	jmp    40c278 <__flatcc_gen_sort@@Base+0xd38>
  40c3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3d0:	mov    r8d,DWORD PTR [rsp+0xc]
  40c3d5:	mov    edx,r13d
  40c3d8:	add    rsi,0x28
  40c3dc:	mov    ecx,r12d
  40c3df:	mov    rdi,rbp
  40c3e2:	call   40c160 <__flatcc_gen_sort@@Base+0xc20>
  40c3e7:	mov    r13d,eax
  40c3ea:	jmp    40c278 <__flatcc_gen_sort@@Base+0xd38>
  40c3ef:	nop
  40c3f0:	cmp    r12d,0x4
  40c3f4:	jle    40c227 <__flatcc_gen_sort@@Base+0xce7>
  40c3fa:	mov    rcx,QWORD PTR [rsp]
  40c3fe:	lea    rdx,[rip+0x296ba]        # 435abf <_IO_stdin_used@@Base+0x9abf>
  40c405:	mov    esi,0x1
  40c40a:	xor    eax,eax
  40c40c:	call   4051f0 <__fprintf_chk@plt>
  40c411:	mov    rsi,QWORD PTR [r15+0x18]
  40c415:	jmp    40c23e <__flatcc_gen_sort@@Base+0xcfe>
  40c41a:	nop    WORD PTR [rax+rax*1+0x0]
  40c420:	lea    rcx,[rip+0x37cc7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c427:	lea    r8,[rip+0x2865e]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40c42e:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c433:	nop    DWORD PTR [rax+rax*1+0x0]
  40c438:	lea    rcx,[rip+0x37caf]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c43f:	lea    r8,[rip+0x28629]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40c446:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c44b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c450:	lea    rcx,[rip+0x37c97]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c457:	lea    r8,[rip+0x2861a]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40c45e:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c463:	nop    DWORD PTR [rax+rax*1+0x0]
  40c468:	lea    rcx,[rip+0x37c7f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c46f:	lea    r8,[rip+0x28601]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  40c476:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c480:	lea    rcx,[rip+0x37c67]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c487:	lea    r8,[rip+0x285f8]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40c48e:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c493:	nop    DWORD PTR [rax+rax*1+0x0]
  40c498:	lea    rcx,[rip+0x37c4f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c49f:	lea    r8,[rip+0x285b7]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  40c4a6:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4b0:	lea    rcx,[rip+0x37c37]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c4b7:	lea    r8,[rip+0x285a8]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  40c4be:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c4c3:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4c8:	lea    rcx,[rip+0x37c1f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c4cf:	lea    r8,[rip+0x2858f]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40c4d6:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c4db:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4e0:	mov    rax,QWORD PTR [rip+0x43b01]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40c4e7:	lea    rcx,[rip+0x21002]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40c4ee:	lea    rdx,[rip+0x285cc]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40c4f5:	lea    r9,[rip+0x20fbc]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40c4fc:	mov    esi,0x1
  40c501:	mov    r8d,0x8d
  40c507:	mov    rdi,QWORD PTR [rax]
  40c50a:	xor    eax,eax
  40c50c:	call   4051f0 <__fprintf_chk@plt>
  40c511:	lea    rcx,[rip+0x33168]        # 43f680 <_IO_stdin_used@@Base+0x13680>
  40c518:	lea    rsi,[rip+0x20fd1]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40c51f:	lea    rdi,[rip+0x295e3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40c526:	mov    edx,0x8d
  40c52b:	call   4050f0 <__assert_fail@plt>
  40c530:	lea    rcx,[rip+0x37bb7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c537:	lea    r8,[rip+0x2851e]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  40c53e:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c543:	nop    DWORD PTR [rax+rax*1+0x0]
  40c548:	lea    rcx,[rip+0x37b9f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40c54f:	lea    r8,[rip+0x28518]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  40c556:	jmp    40c3a2 <__flatcc_gen_sort@@Base+0xe62>
  40c55b:	call   4050d0 <__stack_chk_fail@plt>
  40c560:	push   r15
  40c562:	push   r14
  40c564:	mov    ecx,0x1d
  40c569:	push   r13
  40c56b:	push   r12
  40c56d:	push   rbp
  40c56e:	push   rbx
  40c56f:	mov    rbp,rdi
  40c572:	mov    rbx,rsi
  40c575:	sub    rsp,0x288
  40c57c:	lea    r15,[rsp+0x30]
  40c581:	mov    rax,QWORD PTR fs:0x28
  40c58a:	mov    QWORD PTR [rsp+0x278],rax
  40c592:	xor    eax,eax
  40c594:	mov    rdi,r15
  40c597:	mov    rdx,r15
  40c59a:	rep stos QWORD PTR es:[rdi],rax
  40c59d:	lea    rdi,[rsp+0x120]
  40c5a5:	mov    ecx,0x1d
  40c5aa:	mov    QWORD PTR [rsp+0x8],rdi
  40c5af:	rep stos QWORD PTR es:[rdi],rax
  40c5b2:	mov    rdi,QWORD PTR [rsi+0x18]
  40c5b6:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40c5bb:	mov    rbx,QWORD PTR [rbx+0x28]
  40c5bf:	test   rbx,rbx
  40c5c2:	je     40c63b <__flatcc_gen_sort@@Base+0x10fb>
  40c5c4:	lea    rax,[rsp+0x210]
  40c5cc:	lea    r14,[rip+0x32dcd]        # 43f3a0 <_IO_stdin_used@@Base+0x133a0>
  40c5d3:	mov    QWORD PTR [rsp+0x10],rax
  40c5d8:	test   BYTE PTR [rbx+0x70],0x4
  40c5dc:	mov    rax,QWORD PTR [rbx+0x8]
  40c5e0:	mov    r12,QWORD PTR [rax]
  40c5e3:	mov    r13,QWORD PTR [rax+0x8]
  40c5e7:	jne    40c610 <__flatcc_gen_sort@@Base+0x10d0>
  40c5e9:	movzx  eax,WORD PTR [rbx+0x28]
  40c5ed:	sub    eax,0x7
  40c5f0:	cmp    ax,0x8
  40c5f4:	ja     40c868 <__flatcc_gen_sort@@Base+0x1328>
  40c5fa:	movzx  eax,ax
  40c5fd:	movsxd rax,DWORD PTR [r14+rax*4]
  40c601:	add    rax,r14
  40c604:	jmp    rax
  40c606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c610:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c617:	lea    rdx,[rip+0x29aaa]        # 4360c8 <_IO_stdin_used@@Base+0xa0c8>
  40c61e:	mov    r9,r12
  40c621:	mov    r8d,r13d
  40c624:	mov    rcx,r15
  40c627:	mov    esi,0x1
  40c62c:	xor    eax,eax
  40c62e:	call   4051f0 <__fprintf_chk@plt>
  40c633:	mov    rbx,QWORD PTR [rbx]
  40c636:	test   rbx,rbx
  40c639:	jne    40c5d8 <__flatcc_gen_sort@@Base+0x1098>
  40c63b:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c642:	lea    rdx,[rip+0x37aa4]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40c649:	xor    eax,eax
  40c64b:	mov    esi,0x1
  40c650:	call   4051f0 <__fprintf_chk@plt>
  40c655:	xor    eax,eax
  40c657:	mov    rcx,QWORD PTR [rsp+0x278]
  40c65f:	xor    rcx,QWORD PTR fs:0x28
  40c668:	jne    40d6eb <__flatcc_gen_sort@@Base+0x21ab>
  40c66e:	add    rsp,0x288
  40c675:	pop    rbx
  40c676:	pop    rbp
  40c677:	pop    r12
  40c679:	pop    r13
  40c67b:	pop    r14
  40c67d:	pop    r15
  40c67f:	ret    
  40c680:	mov    rsi,QWORD PTR [rbx+0x18]
  40c684:	mov    rdx,QWORD PTR [rsp+0x8]
  40c689:	mov    rdi,QWORD PTR [rsi+0x18]
  40c68d:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40c692:	mov    rdx,QWORD PTR [rbx+0x18]
  40c696:	movzx  eax,WORD PTR [rdx+0x10]
  40c69a:	cmp    ax,0x1
  40c69e:	je     40cd38 <__flatcc_gen_sort@@Base+0x17f8>
  40c6a4:	jb     40ccf0 <__flatcc_gen_sort@@Base+0x17b0>
  40c6aa:	cmp    ax,0x3
  40c6ae:	je     40c908 <__flatcc_gen_sort@@Base+0x13c8>
  40c6b4:	cmp    ax,0x4
  40c6b8:	jne    40cc48 <__flatcc_gen_sort@@Base+0x1708>
  40c6be:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c6c5:	mov    r8,QWORD PTR [rbx+0x88]
  40c6cc:	lea    rdx,[rip+0x29dad]        # 436480 <_IO_stdin_used@@Base+0xa480>
  40c6d3:	push   QWORD PTR [rsp+0x8]
  40c6d7:	push   r12
  40c6d9:	mov    r9,rbp
  40c6dc:	push   r13
  40c6de:	push   r15
  40c6e0:	mov    rcx,rbp
  40c6e3:	mov    esi,0x1
  40c6e8:	xor    eax,eax
  40c6ea:	call   4051f0 <__fprintf_chk@plt>
  40c6ef:	add    rsp,0x20
  40c6f3:	mov    r9d,0x1
  40c6f9:	jmp    40c776 <__flatcc_gen_sort@@Base+0x1236>
  40c6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c700:	mov    rsi,QWORD PTR [rbx+0x18]
  40c704:	mov    rdx,QWORD PTR [rsp+0x8]
  40c709:	mov    rdi,QWORD PTR [rsi+0x18]
  40c70d:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40c712:	mov    rdx,QWORD PTR [rbx+0x18]
  40c716:	movzx  eax,WORD PTR [rdx+0x10]
  40c71a:	cmp    ax,0x1
  40c71e:	je     40cc00 <__flatcc_gen_sort@@Base+0x16c0>
  40c724:	jb     40cbc0 <__flatcc_gen_sort@@Base+0x1680>
  40c72a:	cmp    ax,0x3
  40c72e:	je     40c8c0 <__flatcc_gen_sort@@Base+0x1380>
  40c734:	cmp    ax,0x4
  40c738:	jne    40cca0 <__flatcc_gen_sort@@Base+0x1760>
  40c73e:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c745:	mov    r8,QWORD PTR [rbx+0x88]
  40c74c:	lea    rdx,[rip+0x29c25]        # 436378 <_IO_stdin_used@@Base+0xa378>
  40c753:	push   QWORD PTR [rsp+0x8]
  40c757:	push   r12
  40c759:	mov    r9,rbp
  40c75c:	push   r13
  40c75e:	push   r15
  40c760:	mov    rcx,rbp
  40c763:	mov    esi,0x1
  40c768:	xor    eax,eax
  40c76a:	call   4051f0 <__fprintf_chk@plt>
  40c76f:	add    rsp,0x20
  40c773:	xor    r9d,r9d
  40c776:	mov    r8,QWORD PTR [rbx+0x18]
  40c77a:	mov    rcx,r12
  40c77d:	mov    edx,r13d
  40c780:	mov    rsi,r15
  40c783:	mov    rdi,rbp
  40c786:	call   40b700 <__flatcc_gen_sort@@Base+0x1c0>
  40c78b:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40c790:	sub    rsp,0x8
  40c794:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c79b:	mov    r8,QWORD PTR [rbx+0x88]
  40c7a2:	push   r12
  40c7a4:	lea    rdx,[rip+0x29aad]        # 436258 <_IO_stdin_used@@Base+0xa258>
  40c7ab:	push   r13
  40c7ad:	push   r15
  40c7af:	mov    r9,rbp
  40c7b2:	mov    rcx,rbp
  40c7b5:	mov    esi,0x1
  40c7ba:	xor    eax,eax
  40c7bc:	call   4051f0 <__fprintf_chk@plt>
  40c7c1:	add    rsp,0x20
  40c7c5:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40c7ca:	nop    WORD PTR [rax+rax*1+0x0]
  40c7d0:	sub    rsp,0x8
  40c7d4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c7db:	mov    r8,QWORD PTR [rbx+0x88]
  40c7e2:	push   r12
  40c7e4:	lea    rdx,[rip+0x29a9d]        # 436288 <_IO_stdin_used@@Base+0xa288>
  40c7eb:	push   r13
  40c7ed:	push   r15
  40c7ef:	mov    r9,rbp
  40c7f2:	mov    rcx,rbp
  40c7f5:	mov    esi,0x1
  40c7fa:	xor    eax,eax
  40c7fc:	call   4051f0 <__fprintf_chk@plt>
  40c801:	add    rsp,0x20
  40c805:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40c80a:	nop    WORD PTR [rax+rax*1+0x0]
  40c810:	mov    eax,DWORD PTR [rbx+0x18]
  40c813:	cmp    eax,0x5
  40c816:	je     40ca70 <__flatcc_gen_sort@@Base+0x1530>
  40c81c:	cmp    eax,0xb
  40c81f:	ja     40c950 <__flatcc_gen_sort@@Base+0x1410>
  40c825:	lea    rsi,[rip+0x32b98]        # 43f3c4 <_IO_stdin_used@@Base+0x133c4>
  40c82c:	mov    ecx,eax
  40c82e:	movsxd rdx,DWORD PTR [rsi+rcx*4]
  40c832:	add    rdx,rsi
  40c835:	jmp    rdx
  40c837:	nop    WORD PTR [rax+rax*1+0x0]
  40c840:	mov    eax,DWORD PTR [rbx+0x18]
  40c843:	cmp    eax,0x5
  40c846:	je     40c9a0 <__flatcc_gen_sort@@Base+0x1460>
  40c84c:	cmp    eax,0xb
  40c84f:	ja     40c950 <__flatcc_gen_sort@@Base+0x1410>
  40c855:	lea    rdx,[rip+0x32b98]        # 43f3f4 <_IO_stdin_used@@Base+0x133f4>
  40c85c:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c860:	add    rax,rdx
  40c863:	jmp    rax
  40c865:	nop    DWORD PTR [rax]
  40c868:	mov    rax,QWORD PTR [rip+0x43779]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40c86f:	lea    rcx,[rip+0x295b2]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40c876:	lea    rdx,[rip+0x28244]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40c87d:	lea    r9,[rip+0x21c24]        # 42e4a8 <_IO_stdin_used@@Base+0x24a8>
  40c884:	mov    esi,0x1
  40c889:	mov    r8d,0x5e8
  40c88f:	mov    rdi,QWORD PTR [rax]
  40c892:	xor    eax,eax
  40c894:	call   4051f0 <__fprintf_chk@plt>
  40c899:	lea    rcx,[rip+0x32d40]        # 43f5e0 <_IO_stdin_used@@Base+0x135e0>
  40c8a0:	lea    rsi,[rip+0x29581]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40c8a7:	lea    rdi,[rip+0x2925b]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40c8ae:	mov    edx,0x5e8
  40c8b3:	call   4050f0 <__assert_fail@plt>
  40c8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8c0:	mov    eax,DWORD PTR [rdx+0x48]
  40c8c3:	movzx  edx,WORD PTR [rbx+0x58]
  40c8c7:	cmp    dx,0x4
  40c8cb:	je     40d43e <__flatcc_gen_sort@@Base+0x1efe>
  40c8d1:	jbe    40d181 <__flatcc_gen_sort@@Base+0x1c41>
  40c8d7:	cmp    dx,0x5
  40c8db:	je     40d4c3 <__flatcc_gen_sort@@Base+0x1f83>
  40c8e1:	cmp    dx,0x6
  40c8e5:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40c8eb:	cmp    eax,0x9
  40c8ee:	ja     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40c8f4:	lea    rdx,[rip+0x32b29]        # 43f424 <_IO_stdin_used@@Base+0x13424>
  40c8fb:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c8ff:	add    rax,rdx
  40c902:	jmp    rax
  40c904:	nop    DWORD PTR [rax+0x0]
  40c908:	sub    rsp,0x8
  40c90c:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c913:	mov    r8,QWORD PTR [rbx+0x88]
  40c91a:	mov    rax,QWORD PTR [rsp+0x10]
  40c91f:	lea    rdx,[rip+0x29b1a]        # 436440 <_IO_stdin_used@@Base+0xa440>
  40c926:	mov    r9,rbp
  40c929:	mov    rcx,rbp
  40c92c:	mov    esi,0x1
  40c931:	push   rax
  40c932:	push   rax
  40c933:	xor    eax,eax
  40c935:	push   r12
  40c937:	push   r13
  40c939:	push   r15
  40c93b:	call   4051f0 <__fprintf_chk@plt>
  40c940:	add    rsp,0x30
  40c944:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40c949:	nop    DWORD PTR [rax+0x0]
  40c950:	mov    rax,QWORD PTR [rip+0x43691]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40c957:	lea    rcx,[rip+0x20b92]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40c95e:	lea    rdx,[rip+0x2815c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40c965:	lea    r9,[rip+0x20b4c]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40c96c:	mov    esi,0x1
  40c971:	mov    r8d,0x8d
  40c977:	mov    rdi,QWORD PTR [rax]
  40c97a:	xor    eax,eax
  40c97c:	call   4051f0 <__fprintf_chk@plt>
  40c981:	lea    rcx,[rip+0x32cf8]        # 43f680 <_IO_stdin_used@@Base+0x13680>
  40c988:	lea    rsi,[rip+0x20b61]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40c98f:	lea    rdi,[rip+0x29173]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40c996:	mov    edx,0x8d
  40c99b:	call   4050f0 <__assert_fail@plt>
  40c9a0:	lea    rax,[rip+0x280d8]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  40c9a7:	lea    rdx,[rip+0x281e7]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  40c9ae:	mov    rcx,rbp
  40c9b1:	sub    rsp,0x8
  40c9b5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c9bc:	mov    r8,QWORD PTR [rbx+0x88]
  40c9c3:	push   rax
  40c9c4:	push   rcx
  40c9c5:	mov    esi,0x1
  40c9ca:	push   rdx
  40c9cb:	lea    rdx,[rip+0x29776]        # 436148 <_IO_stdin_used@@Base+0xa148>
  40c9d2:	push   rbp
  40c9d3:	push   r12
  40c9d5:	push   r13
  40c9d7:	xor    eax,eax
  40c9d9:	push   r15
  40c9db:	mov    r9,rbp
  40c9de:	mov    rcx,rbp
  40c9e1:	call   4051f0 <__fprintf_chk@plt>
  40c9e6:	mov    rsi,QWORD PTR [rbx+0x90]
  40c9ed:	add    rsp,0x40
  40c9f1:	test   rsi,rsi
  40c9f4:	je     40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40c9fa:	movzx  eax,WORD PTR [rsi+0x10]
  40c9fe:	test   ax,ax
  40ca01:	je     40cb70 <__flatcc_gen_sort@@Base+0x1630>
  40ca07:	cmp    ax,0x1
  40ca0b:	jne    40cb20 <__flatcc_gen_sort@@Base+0x15e0>
  40ca11:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca16:	mov    rdi,QWORD PTR [rsi+0x18]
  40ca1a:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40ca1f:	mov    rax,QWORD PTR [rbx+0x90]
  40ca26:	mov    rcx,QWORD PTR [rsp+0x8]
  40ca2b:	lea    rdx,[rip+0x297a6]        # 4361d8 <_IO_stdin_used@@Base+0xa1d8>
  40ca32:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ca39:	mov    r9,r15
  40ca3c:	mov    r8,rbp
  40ca3f:	mov    esi,0x1
  40ca44:	movzx  eax,WORD PTR [rax+0xb0]
  40ca4b:	push   rcx
  40ca4c:	push   rcx
  40ca4d:	push   rax
  40ca4e:	push   rcx
  40ca4f:	xor    eax,eax
  40ca51:	push   r12
  40ca53:	push   r13
  40ca55:	mov    rcx,rbp
  40ca58:	call   4051f0 <__fprintf_chk@plt>
  40ca5d:	add    rsp,0x30
  40ca61:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40ca66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca70:	lea    rcx,[rip+0x2811e]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  40ca77:	lea    r10,[rip+0x28001]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  40ca7e:	mov    r11,rbp
  40ca81:	mov    QWORD PTR [rsp+0x18],rcx
  40ca86:	movzx  edx,WORD PTR [rbx+0x58]
  40ca8a:	cmp    dx,0x4
  40ca8e:	je     40cde0 <__flatcc_gen_sort@@Base+0x18a0>
  40ca94:	jbe    40ce00 <__flatcc_gen_sort@@Base+0x18c0>
  40ca9a:	cmp    dx,0x5
  40ca9e:	je     40cdb0 <__flatcc_gen_sort@@Base+0x1870>
  40caa4:	cmp    dx,0x6
  40caa8:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40caaa:	cmp    eax,0x9
  40caad:	ja     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40cab3:	lea    rdx,[rip+0x32992]        # 43f44c <_IO_stdin_used@@Base+0x1344c>
  40caba:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cabe:	add    rax,rdx
  40cac1:	jmp    rax
  40cac3:	cmp    dx,0x6
  40cac7:	je     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40cacd:	nop    DWORD PTR [rax]
  40cad0:	mov    rax,QWORD PTR [rip+0x43511]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40cad7:	lea    rcx,[rip+0x20a12]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40cade:	lea    rdx,[rip+0x27fdc]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40cae5:	lea    r9,[rip+0x209cc]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40caec:	mov    esi,0x1
  40caf1:	mov    r8d,0x104
  40caf7:	mov    rdi,QWORD PTR [rax]
  40cafa:	xor    eax,eax
  40cafc:	call   4051f0 <__fprintf_chk@plt>
  40cb01:	lea    rcx,[rip+0x32ac0]        # 43f5c8 <_IO_stdin_used@@Base+0x135c8>
  40cb08:	lea    rsi,[rip+0x209e1]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40cb0f:	lea    rdi,[rip+0x28ff3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40cb16:	mov    edx,0x104
  40cb1b:	call   4050f0 <__assert_fail@plt>
  40cb20:	mov    rax,QWORD PTR [rip+0x434c1]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40cb27:	lea    rcx,[rip+0x292fa]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40cb2e:	lea    rdx,[rip+0x27f8c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40cb35:	lea    r9,[rip+0x296f4]        # 436230 <_IO_stdin_used@@Base+0xa230>
  40cb3c:	mov    esi,0x1
  40cb41:	mov    r8d,0x596
  40cb47:	mov    rdi,QWORD PTR [rax]
  40cb4a:	xor    eax,eax
  40cb4c:	call   4051f0 <__fprintf_chk@plt>
  40cb51:	lea    rcx,[rip+0x32a88]        # 43f5e0 <_IO_stdin_used@@Base+0x135e0>
  40cb58:	lea    rsi,[rip+0x292c9]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40cb5f:	lea    rdi,[rip+0x28fa3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40cb66:	mov    edx,0x596
  40cb6b:	call   4050f0 <__assert_fail@plt>
  40cb70:	mov    rdx,QWORD PTR [rsp+0x8]
  40cb75:	mov    rdi,QWORD PTR [rsi+0x18]
  40cb79:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40cb7e:	sub    rsp,0x8
  40cb82:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cb89:	lea    rdx,[rip+0x295f0]        # 436180 <_IO_stdin_used@@Base+0xa180>
  40cb90:	mov    rax,QWORD PTR [rsp+0x10]
  40cb95:	mov    r9,r15
  40cb98:	mov    r8,rbp
  40cb9b:	mov    rcx,rbp
  40cb9e:	mov    esi,0x1
  40cba3:	push   rax
  40cba4:	push   rax
  40cba5:	push   rax
  40cba6:	push   r12
  40cba8:	xor    eax,eax
  40cbaa:	push   r13
  40cbac:	call   4051f0 <__fprintf_chk@plt>
  40cbb1:	add    rsp,0x30
  40cbb5:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40cbba:	nop    WORD PTR [rax+rax*1+0x0]
  40cbc0:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cbc7:	mov    r8,QWORD PTR [rbx+0x88]
  40cbce:	lea    rdx,[rip+0x2972b]        # 436300 <_IO_stdin_used@@Base+0xa300>
  40cbd5:	push   QWORD PTR [rsp+0x8]
  40cbd9:	push   r12
  40cbdb:	mov    r9,rbp
  40cbde:	push   r13
  40cbe0:	push   r15
  40cbe2:	mov    rcx,rbp
  40cbe5:	mov    esi,0x1
  40cbea:	xor    eax,eax
  40cbec:	call   4051f0 <__fprintf_chk@plt>
  40cbf1:	add    rsp,0x20
  40cbf5:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40cbfa:	nop    WORD PTR [rax+rax*1+0x0]
  40cc00:	movzx  eax,WORD PTR [rbx+0x72]
  40cc04:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cc0b:	lea    rdx,[rip+0x296ae]        # 4362c0 <_IO_stdin_used@@Base+0xa2c0>
  40cc12:	mov    r9,rbp
  40cc15:	mov    rcx,rbp
  40cc18:	mov    esi,0x1
  40cc1d:	push   rax
  40cc1e:	push   QWORD PTR [rbx+0x80]
  40cc24:	xor    eax,eax
  40cc26:	mov    r8,QWORD PTR [rbx+0x88]
  40cc2d:	push   QWORD PTR [rsp+0x18]
  40cc31:	push   r12
  40cc33:	push   r13
  40cc35:	push   r15
  40cc37:	call   4051f0 <__fprintf_chk@plt>
  40cc3c:	add    rsp,0x30
  40cc40:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40cc45:	nop    DWORD PTR [rax]
  40cc48:	mov    rax,QWORD PTR [rip+0x43399]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40cc4f:	lea    rcx,[rip+0x291d2]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40cc56:	lea    rdx,[rip+0x27e64]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40cc5d:	lea    r9,[rip+0x2177c]        # 42e3e0 <_IO_stdin_used@@Base+0x23e0>
  40cc64:	mov    esi,0x1
  40cc69:	mov    r8d,0x5e3
  40cc6f:	mov    rdi,QWORD PTR [rax]
  40cc72:	xor    eax,eax
  40cc74:	call   4051f0 <__fprintf_chk@plt>
  40cc79:	lea    rcx,[rip+0x32960]        # 43f5e0 <_IO_stdin_used@@Base+0x135e0>
  40cc80:	lea    rsi,[rip+0x291a1]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40cc87:	lea    rdi,[rip+0x28e7b]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40cc8e:	mov    edx,0x5e3
  40cc93:	call   4050f0 <__assert_fail@plt>
  40cc98:	nop    DWORD PTR [rax+rax*1+0x0]
  40cca0:	mov    rax,QWORD PTR [rip+0x43341]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40cca7:	lea    rcx,[rip+0x2917a]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40ccae:	lea    rdx,[rip+0x27e0c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40ccb5:	lea    r9,[rip+0x216d4]        # 42e390 <_IO_stdin_used@@Base+0x2390>
  40ccbc:	mov    esi,0x1
  40ccc1:	mov    r8d,0x5c0
  40ccc7:	mov    rdi,QWORD PTR [rax]
  40ccca:	xor    eax,eax
  40cccc:	call   4051f0 <__fprintf_chk@plt>
  40ccd1:	lea    rcx,[rip+0x32908]        # 43f5e0 <_IO_stdin_used@@Base+0x135e0>
  40ccd8:	lea    rsi,[rip+0x29149]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40ccdf:	lea    rdi,[rip+0x28e23]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40cce6:	mov    edx,0x5c0
  40cceb:	call   4050f0 <__assert_fail@plt>
  40ccf0:	test   BYTE PTR [rdx+0x12],0x8
  40ccf4:	jne    40d41f <__flatcc_gen_sort@@Base+0x1edf>
  40ccfa:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cd01:	mov    r8,QWORD PTR [rbx+0x88]
  40cd08:	lea    rdx,[rip+0x296f9]        # 436408 <_IO_stdin_used@@Base+0xa408>
  40cd0f:	push   QWORD PTR [rsp+0x8]
  40cd13:	push   r12
  40cd15:	mov    r9,rbp
  40cd18:	push   r13
  40cd1a:	push   r15
  40cd1c:	mov    rcx,rbp
  40cd1f:	mov    esi,0x1
  40cd24:	xor    eax,eax
  40cd26:	call   4051f0 <__fprintf_chk@plt>
  40cd2b:	add    rsp,0x20
  40cd2f:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40cd34:	nop    DWORD PTR [rax+0x0]
  40cd38:	test   BYTE PTR [rdx+0x12],0x8
  40cd3c:	jne    40d400 <__flatcc_gen_sort@@Base+0x1ec0>
  40cd42:	sub    rsp,0x8
  40cd46:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cd4d:	mov    r8,QWORD PTR [rbx+0x88]
  40cd54:	mov    rax,QWORD PTR [rsp+0x10]
  40cd59:	lea    rdx,[rip+0x29670]        # 4363d0 <_IO_stdin_used@@Base+0xa3d0>
  40cd60:	mov    r9,rbp
  40cd63:	mov    rcx,rbp
  40cd66:	mov    esi,0x1
  40cd6b:	push   rax
  40cd6c:	push   rax
  40cd6d:	xor    eax,eax
  40cd6f:	push   r12
  40cd71:	push   r13
  40cd73:	push   r15
  40cd75:	call   4051f0 <__fprintf_chk@plt>
  40cd7a:	add    rsp,0x30
  40cd7e:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40cd83:	movzx  edx,WORD PTR [rbx+0x58]
  40cd87:	cmp    dx,0x4
  40cd8b:	je     40cdc9 <__flatcc_gen_sort@@Base+0x1889>
  40cd8d:	jbe    40d581 <__flatcc_gen_sort@@Base+0x2041>
  40cd93:	cmp    dx,0x5
  40cd97:	jne    40cac3 <__flatcc_gen_sort@@Base+0x1583>
  40cd9d:	lea    r10,[rip+0x27ce8]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40cda4:	lea    r11,[rip+0x37343]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cdab:	mov    QWORD PTR [rsp+0x18],r10
  40cdb0:	cmp    eax,0x9
  40cdb3:	ja     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40cdb9:	lea    rdx,[rip+0x326b4]        # 43f474 <_IO_stdin_used@@Base+0x13474>
  40cdc0:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cdc4:	add    rax,rdx
  40cdc7:	jmp    rax
  40cdc9:	lea    r10,[rip+0x27cbc]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40cdd0:	lea    r11,[rip+0x37317]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cdd7:	mov    QWORD PTR [rsp+0x18],r10
  40cddc:	nop    DWORD PTR [rax+0x0]
  40cde0:	cmp    eax,0x9
  40cde3:	ja     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40cde9:	lea    rdx,[rip+0x326ac]        # 43f49c <_IO_stdin_used@@Base+0x1349c>
  40cdf0:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cdf4:	add    rax,rdx
  40cdf7:	jmp    rax
  40cdf9:	nop    DWORD PTR [rax+0x0]
  40ce00:	cmp    dx,0x3
  40ce04:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40ce0a:	mov    rdi,QWORD PTR [rsp+0x10]
  40ce0f:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40ce14:	lea    rcx,[rip+0x27d0d]        # 434b28 <_IO_stdin_used@@Base+0x8b28>
  40ce1b:	mov    edx,0x64
  40ce20:	mov    esi,0x1
  40ce25:	mov    eax,0x1
  40ce2a:	mov    QWORD PTR [rsp+0x28],r11
  40ce2f:	mov    QWORD PTR [rsp+0x20],r10
  40ce34:	call   405210 <__sprintf_chk@plt>
  40ce39:	mov    r10,QWORD PTR [rsp+0x20]
  40ce3e:	mov    r11,QWORD PTR [rsp+0x28]
  40ce43:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce48:	movzx  eax,WORD PTR [rbx+0x72]
  40ce4c:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ce53:	lea    rdx,[rip+0x292a6]        # 436100 <_IO_stdin_used@@Base+0xa100>
  40ce5a:	push   QWORD PTR [rsp+0x10]
  40ce5e:	mov    r9,rbp
  40ce61:	mov    rcx,rbp
  40ce64:	mov    esi,0x1
  40ce69:	push   rax
  40ce6a:	push   QWORD PTR [rbx+0x80]
  40ce70:	xor    eax,eax
  40ce72:	mov    r8,QWORD PTR [rbx+0x88]
  40ce79:	push   r10
  40ce7b:	push   r11
  40ce7d:	push   QWORD PTR [rsp+0x40]
  40ce81:	push   rbp
  40ce82:	push   r12
  40ce84:	push   r13
  40ce86:	push   r15
  40ce88:	call   4051f0 <__fprintf_chk@plt>
  40ce8d:	add    rsp,0x50
  40ce91:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40ce96:	movzx  edx,WORD PTR [rbx+0x58]
  40ce9a:	cmp    dx,0x4
  40ce9e:	je     40d600 <__flatcc_gen_sort@@Base+0x20c0>
  40cea4:	jbe    40d532 <__flatcc_gen_sort@@Base+0x1ff2>
  40ceaa:	cmp    dx,0x5
  40ceae:	jne    40cac3 <__flatcc_gen_sort@@Base+0x1583>
  40ceb4:	lea    r10,[rip+0x27bcb]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40cebb:	lea    r11,[rip+0x3722c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cec2:	mov    QWORD PTR [rsp+0x18],r10
  40cec7:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x1870>
  40cecc:	lea    rcx,[rip+0x27caf]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  40ced3:	lea    r10,[rip+0x27b8c]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  40ceda:	lea    r11,[rip+0x3720d]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cee1:	mov    QWORD PTR [rsp+0x18],rcx
  40cee6:	jmp    40ca86 <__flatcc_gen_sort@@Base+0x1546>
  40ceeb:	lea    rax,[rip+0x27b6a]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  40cef2:	lea    rcx,[rip+0x371f5]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cef9:	lea    rdx,[rip+0x27c7a]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  40cf00:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cf05:	lea    rax,[rip+0x27b62]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  40cf0c:	lea    rcx,[rip+0x371db]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cf13:	lea    rdx,[rip+0x27c6e]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  40cf1a:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cf1f:	lea    rcx,[rip+0x27c55]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  40cf26:	lea    r10,[rip+0x27b30]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  40cf2d:	lea    r11,[rip+0x371ba]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cf34:	mov    QWORD PTR [rsp+0x18],rcx
  40cf39:	jmp    40ca86 <__flatcc_gen_sort@@Base+0x1546>
  40cf3e:	lea    rax,[rip+0x27b47]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40cf45:	lea    rcx,[rip+0x371a2]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cf4c:	mov    rdx,rax
  40cf4f:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cf54:	lea    rax,[rip+0x27b1c]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  40cf5b:	lea    rcx,[rip+0x3718c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cf62:	lea    rdx,[rip+0x27c26]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  40cf69:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cf6e:	lea    rax,[rip+0x27b11]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40cf75:	lea    rcx,[rip+0x37172]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cf7c:	mov    rdx,rax
  40cf7f:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cf84:	lea    rax,[rip+0x27ad2]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  40cf8b:	lea    rcx,[rip+0x3715c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cf92:	lea    rdx,[rip+0x27be2]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  40cf99:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cf9e:	lea    rax,[rip+0x27aca]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40cfa5:	lea    rcx,[rip+0x37142]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cfac:	lea    rdx,[rip+0x27bd6]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40cfb3:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cfb8:	lea    rax,[rip+0x27ab9]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40cfbf:	lea    rcx,[rip+0x37128]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40cfc6:	lea    rdx,[rip+0x27bc3]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40cfcd:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40cfd2:	movzx  edx,WORD PTR [rbx+0x58]
  40cfd6:	cmp    dx,0x4
  40cfda:	je     40d637 <__flatcc_gen_sort@@Base+0x20f7>
  40cfe0:	jbe    40d5c2 <__flatcc_gen_sort@@Base+0x2082>
  40cfe6:	cmp    dx,0x5
  40cfea:	je     40d618 <__flatcc_gen_sort@@Base+0x20d8>
  40cff0:	cmp    dx,0x6
  40cff4:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40cffa:	lea    rax,[rip+0x27b8f]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40d001:	lea    r10,[rip+0x27a70]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40d008:	lea    r11,[rip+0x370df]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d00f:	mov    QWORD PTR [rsp+0x18],rax
  40d014:	lea    r8,[rip+0x27a9f]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40d01b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d020:	movzx  r9d,BYTE PTR [rbx+0x48]
  40d025:	mov    rdi,QWORD PTR [rsp+0x10]
  40d02a:	lea    rcx,[rip+0x27aec]        # 434b1d <_IO_stdin_used@@Base+0x8b1d>
  40d031:	mov    edx,0x64
  40d036:	mov    esi,0x1
  40d03b:	xor    eax,eax
  40d03d:	mov    QWORD PTR [rsp+0x28],r11
  40d042:	mov    QWORD PTR [rsp+0x20],r10
  40d047:	call   405210 <__sprintf_chk@plt>
  40d04c:	mov    r10,QWORD PTR [rsp+0x20]
  40d051:	mov    r11,QWORD PTR [rsp+0x28]
  40d056:	jmp    40ce48 <__flatcc_gen_sort@@Base+0x1908>
  40d05b:	movzx  edx,WORD PTR [rbx+0x58]
  40d05f:	cmp    dx,0x4
  40d063:	je     40d656 <__flatcc_gen_sort@@Base+0x2116>
  40d069:	jbe    40d5e1 <__flatcc_gen_sort@@Base+0x20a1>
  40d06f:	cmp    dx,0x5
  40d073:	je     40d694 <__flatcc_gen_sort@@Base+0x2154>
  40d079:	cmp    dx,0x6
  40d07d:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d083:	lea    rax,[rip+0x27aff]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40d08a:	lea    r10,[rip+0x279de]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40d091:	lea    r11,[rip+0x37056]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d098:	mov    QWORD PTR [rsp+0x18],rax
  40d09d:	lea    r8,[rip+0x27a0d]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40d0a4:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d0a9:	movzx  edx,WORD PTR [rbx+0x58]
  40d0ad:	cmp    dx,0x4
  40d0b1:	je     40d675 <__flatcc_gen_sort@@Base+0x2135>
  40d0b7:	jbe    40d5a3 <__flatcc_gen_sort@@Base+0x2063>
  40d0bd:	cmp    dx,0x5
  40d0c1:	je     40d6b3 <__flatcc_gen_sort@@Base+0x2173>
  40d0c7:	cmp    dx,0x6
  40d0cb:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d0d1:	lea    rcx,[rip+0x27aa9]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40d0d8:	lea    r10,[rip+0x27986]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40d0df:	lea    r11,[rip+0x37008]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d0e6:	mov    QWORD PTR [rsp+0x18],rcx
  40d0eb:	jmp    40caaa <__flatcc_gen_sort@@Base+0x156a>
  40d0f0:	lea    rcx,[rip+0x27a98]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  40d0f7:	lea    r10,[rip+0x27979]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  40d0fe:	lea    r11,[rip+0x36fe9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d105:	mov    QWORD PTR [rsp+0x18],rcx
  40d10a:	jmp    40ca86 <__flatcc_gen_sort@@Base+0x1546>
  40d10f:	lea    rax,[rip+0x27950]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  40d116:	lea    rcx,[rip+0x36fd1]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d11d:	lea    rdx,[rip+0x27a5e]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  40d124:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40d129:	lea    rax,[rip+0x27935]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40d130:	lea    rcx,[rip+0x36fb7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d137:	lea    rdx,[rip+0x27a43]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40d13e:	jmp    40c9b1 <__flatcc_gen_sort@@Base+0x1471>
  40d143:	lea    rcx,[rip+0x27a3e]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  40d14a:	lea    r10,[rip+0x2791d]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  40d151:	lea    r11,[rip+0x36f96]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d158:	mov    QWORD PTR [rsp+0x18],rcx
  40d15d:	jmp    40ca86 <__flatcc_gen_sort@@Base+0x1546>
  40d162:	lea    rcx,[rip+0x27a11]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  40d169:	lea    r10,[rip+0x278ec]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  40d170:	lea    r11,[rip+0x36f77]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d177:	mov    QWORD PTR [rsp+0x18],rcx
  40d17c:	jmp    40ca86 <__flatcc_gen_sort@@Base+0x1546>
  40d181:	cmp    dx,0x3
  40d185:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d18b:	cmp    eax,0xb
  40d18e:	je     40d6d2 <__flatcc_gen_sort@@Base+0x2192>
  40d194:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40d199:	lea    rcx,[rip+0x27988]        # 434b28 <_IO_stdin_used@@Base+0x8b28>
  40d1a0:	mov    rdi,QWORD PTR [rsp+0x10]
  40d1a5:	mov    edx,0x64
  40d1aa:	mov    esi,0x1
  40d1af:	mov    eax,0x1
  40d1b4:	call   405210 <__sprintf_chk@plt>
  40d1b9:	movzx  eax,WORD PTR [rbx+0x72]
  40d1bd:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d1c4:	lea    rdx,[rip+0x29165]        # 436330 <_IO_stdin_used@@Base+0xa330>
  40d1cb:	push   QWORD PTR [rsp+0x10]
  40d1cf:	mov    r9,rbp
  40d1d2:	mov    rcx,rbp
  40d1d5:	mov    esi,0x1
  40d1da:	push   rax
  40d1db:	push   QWORD PTR [rbx+0x80]
  40d1e1:	mov    rax,QWORD PTR [rsp+0x20]
  40d1e6:	mov    r8,QWORD PTR [rbx+0x88]
  40d1ed:	push   rax
  40d1ee:	push   rax
  40d1ef:	xor    eax,eax
  40d1f1:	push   r12
  40d1f3:	push   r13
  40d1f5:	push   r15
  40d1f7:	call   4051f0 <__fprintf_chk@plt>
  40d1fc:	add    rsp,0x40
  40d200:	jmp    40c633 <__flatcc_gen_sort@@Base+0x10f3>
  40d205:	lea    r8,[rip+0x278ad]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d20c:	mov    r9,QWORD PTR [rbx+0x48]
  40d210:	lea    rcx,[rip+0x278fd]        # 434b14 <_IO_stdin_used@@Base+0x8b14>
  40d217:	mov    QWORD PTR [rsp+0x28],r11
  40d21c:	mov    QWORD PTR [rsp+0x20],r10
  40d221:	mov    rdi,QWORD PTR [rsp+0x10]
  40d226:	mov    edx,0x64
  40d22b:	mov    esi,0x1
  40d230:	xor    eax,eax
  40d232:	call   405210 <__sprintf_chk@plt>
  40d237:	mov    r10,QWORD PTR [rsp+0x20]
  40d23c:	mov    r11,QWORD PTR [rsp+0x28]
  40d241:	jmp    40ce48 <__flatcc_gen_sort@@Base+0x1908>
  40d246:	lea    r8,[rip+0x2786c]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d24d:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d252:	lea    r8,[rip+0x27860]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d259:	mov    QWORD PTR [rsp+0x28],r11
  40d25e:	mov    QWORD PTR [rsp+0x20],r10
  40d263:	lea    rcx,[rip+0x278a1]        # 434b0b <_IO_stdin_used@@Base+0x8b0b>
  40d26a:	mov    r9,QWORD PTR [rbx+0x48]
  40d26e:	jmp    40d221 <__flatcc_gen_sort@@Base+0x1ce1>
  40d270:	lea    r8,[rip+0x27830]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d277:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d279:	lea    r8,[rip+0x27827]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d280:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d282:	lea    r8,[rip+0x27827]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40d289:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d28b:	lea    r8,[rip+0x2780c]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40d292:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d294:	lea    r8,[rip+0x2781f]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40d29b:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d29d:	lea    r8,[rip+0x2780c]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40d2a4:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d2a6:	lea    r8,[rip+0x2780d]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40d2ad:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d2b2:	lea    r8,[rip+0x277e5]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40d2b9:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d2be:	lea    r8,[rip+0x277ec]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40d2c5:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d2c7:	lea    r8,[rip+0x277da]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40d2ce:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d2d0:	lea    r8,[rip+0x277c8]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40d2d7:	jmp    40d259 <__flatcc_gen_sort@@Base+0x1d19>
  40d2d9:	lea    r8,[rip+0x277d1]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40d2e0:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d2e5:	lea    r8,[rip+0x277bc]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40d2ec:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d2f1:	lea    r8,[rip+0x277a7]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40d2f8:	jmp    40d20c <__flatcc_gen_sort@@Base+0x1ccc>
  40d2fd:	lea    r8,[rip+0x277ac]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40d304:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d309:	lea    r8,[rip+0x27798]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40d310:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d315:	lea    r8,[rip+0x27783]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40d31c:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d321:	lea    r8,[rip+0x2777f]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d328:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d32d:	lea    r8,[rip+0x2776a]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40d334:	jmp    40d020 <__flatcc_gen_sort@@Base+0x1ae0>
  40d339:	mov    rax,QWORD PTR [rip+0x42ca8]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40d340:	lea    rcx,[rip+0x201a9]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40d347:	lea    rdx,[rip+0x27773]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40d34e:	lea    r9,[rip+0x20163]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40d355:	mov    esi,0x1
  40d35a:	mov    r8d,0xe2
  40d360:	mov    rdi,QWORD PTR [rax]
  40d363:	xor    eax,eax
  40d365:	call   4051f0 <__fprintf_chk@plt>
  40d36a:	lea    rcx,[rip+0x32247]        # 43f5b8 <_IO_stdin_used@@Base+0x135b8>
  40d371:	lea    rsi,[rip+0x20178]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40d378:	lea    rdi,[rip+0x2878a]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40d37f:	mov    edx,0xe2
  40d384:	call   4050f0 <__assert_fail@plt>
  40d389:	lea    r8,[rip+0x27729]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d390:	movzx  r9d,BYTE PTR [rbx+0x48]
  40d395:	mov    rdi,QWORD PTR [rsp+0x10]
  40d39a:	lea    rcx,[rip+0x2777c]        # 434b1d <_IO_stdin_used@@Base+0x8b1d>
  40d3a1:	mov    edx,0x64
  40d3a6:	mov    esi,0x1
  40d3ab:	xor    eax,eax
  40d3ad:	call   405210 <__sprintf_chk@plt>
  40d3b2:	jmp    40d1b9 <__flatcc_gen_sort@@Base+0x1c79>
  40d3b7:	lea    r8,[rip+0x276fc]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40d3be:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3c0:	lea    r8,[rip+0x276e1]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40d3c7:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3c9:	lea    r8,[rip+0x276cf]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40d3d0:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3d2:	lea    r8,[rip+0x276d7]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40d3d9:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3db:	lea    r8,[rip+0x276c5]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d3e2:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3e4:	lea    r8,[rip+0x276b3]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40d3eb:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3ed:	lea    r8,[rip+0x276bd]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40d3f4:	jmp    40d390 <__flatcc_gen_sort@@Base+0x1e50>
  40d3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d400:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d407:	lea    rdx,[rip+0x28f9a]        # 4363a8 <_IO_stdin_used@@Base+0xa3a8>
  40d40e:	mov    esi,0x1
  40d413:	xor    eax,eax
  40d415:	call   4051f0 <__fprintf_chk@plt>
  40d41a:	jmp    40cd42 <__flatcc_gen_sort@@Base+0x1802>
  40d41f:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d426:	lea    rdx,[rip+0x28f7b]        # 4363a8 <_IO_stdin_used@@Base+0xa3a8>
  40d42d:	mov    esi,0x1
  40d432:	xor    eax,eax
  40d434:	call   4051f0 <__fprintf_chk@plt>
  40d439:	jmp    40ccfa <__flatcc_gen_sort@@Base+0x17ba>
  40d43e:	cmp    eax,0x9
  40d441:	ja     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40d447:	lea    rdx,[rip+0x32076]        # 43f4c4 <_IO_stdin_used@@Base+0x134c4>
  40d44e:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d452:	add    rax,rdx
  40d455:	jmp    rax
  40d457:	lea    r8,[rip+0x2765b]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d45e:	mov    r9,QWORD PTR [rbx+0x48]
  40d462:	lea    rcx,[rip+0x276ab]        # 434b14 <_IO_stdin_used@@Base+0x8b14>
  40d469:	mov    rdi,QWORD PTR [rsp+0x10]
  40d46e:	mov    edx,0x64
  40d473:	mov    esi,0x1
  40d478:	xor    eax,eax
  40d47a:	call   405210 <__sprintf_chk@plt>
  40d47f:	jmp    40d1b9 <__flatcc_gen_sort@@Base+0x1c79>
  40d484:	lea    r8,[rip+0x2762f]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40d48b:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d48d:	lea    r8,[rip+0x2761c]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40d494:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d496:	lea    r8,[rip+0x2760a]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d49d:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d49f:	lea    r8,[rip+0x275f8]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40d4a6:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d4a8:	lea    r8,[rip+0x27602]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40d4af:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d4b1:	lea    r8,[rip+0x275f0]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40d4b8:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d4ba:	lea    r8,[rip+0x275de]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40d4c1:	jmp    40d45e <__flatcc_gen_sort@@Base+0x1f1e>
  40d4c3:	cmp    eax,0x9
  40d4c6:	ja     40d339 <__flatcc_gen_sort@@Base+0x1df9>
  40d4cc:	lea    rdx,[rip+0x32019]        # 43f4ec <_IO_stdin_used@@Base+0x134ec>
  40d4d3:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d4d7:	add    rax,rdx
  40d4da:	jmp    rax
  40d4dc:	lea    r8,[rip+0x275d6]        # 434ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d4e3:	mov    r9,QWORD PTR [rbx+0x48]
  40d4e7:	lea    rcx,[rip+0x2761d]        # 434b0b <_IO_stdin_used@@Base+0x8b0b>
  40d4ee:	jmp    40d469 <__flatcc_gen_sort@@Base+0x1f29>
  40d4f3:	lea    r8,[rip+0x275c0]        # 434aba <_IO_stdin_used@@Base+0x8aba>
  40d4fa:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d4fc:	lea    r8,[rip+0x275ad]        # 434ab0 <_IO_stdin_used@@Base+0x8ab0>
  40d503:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d505:	lea    r8,[rip+0x2759b]        # 434aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d50c:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d50e:	lea    r8,[rip+0x27589]        # 434a9e <_IO_stdin_used@@Base+0x8a9e>
  40d515:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d517:	lea    r8,[rip+0x27593]        # 434ab1 <_IO_stdin_used@@Base+0x8ab1>
  40d51e:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d520:	lea    r8,[rip+0x27581]        # 434aa8 <_IO_stdin_used@@Base+0x8aa8>
  40d527:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d529:	lea    r8,[rip+0x2756f]        # 434a9f <_IO_stdin_used@@Base+0x8a9f>
  40d530:	jmp    40d4e3 <__flatcc_gen_sort@@Base+0x1fa3>
  40d532:	cmp    dx,0x3
  40d536:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d53c:	vxorps xmm0,xmm0,xmm0
  40d540:	mov    rdi,QWORD PTR [rsp+0x10]
  40d545:	lea    rcx,[rip+0x275d8]        # 434b24 <_IO_stdin_used@@Base+0x8b24>
  40d54c:	mov    edx,0x64
  40d551:	mov    esi,0x1
  40d556:	mov    eax,0x1
  40d55b:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40d560:	vcvtss2sd xmm0,xmm0,xmm0
  40d564:	call   405210 <__sprintf_chk@plt>
  40d569:	lea    r10,[rip+0x27516]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40d570:	lea    r11,[rip+0x36b77]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d577:	mov    QWORD PTR [rsp+0x18],r10
  40d57c:	jmp    40ce48 <__flatcc_gen_sort@@Base+0x1908>
  40d581:	cmp    dx,0x3
  40d585:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d58b:	lea    r10,[rip+0x274fa]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40d592:	mov    QWORD PTR [rsp+0x18],r10
  40d597:	lea    r11,[rip+0x36b50]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d59e:	jmp    40ce0a <__flatcc_gen_sort@@Base+0x18ca>
  40d5a3:	cmp    dx,0x3
  40d5a7:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d5ad:	lea    rax,[rip+0x275cd]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40d5b4:	lea    r10,[rip+0x274aa]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40d5bb:	mov    QWORD PTR [rsp+0x18],rax
  40d5c0:	jmp    40d597 <__flatcc_gen_sort@@Base+0x2057>
  40d5c2:	cmp    dx,0x3
  40d5c6:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d5cc:	lea    rax,[rip+0x275bd]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40d5d3:	lea    r10,[rip+0x2749e]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40d5da:	mov    QWORD PTR [rsp+0x18],rax
  40d5df:	jmp    40d597 <__flatcc_gen_sort@@Base+0x2057>
  40d5e1:	cmp    dx,0x3
  40d5e5:	jne    40cad0 <__flatcc_gen_sort@@Base+0x1590>
  40d5eb:	lea    rax,[rip+0x27597]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40d5f2:	lea    r10,[rip+0x27476]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40d5f9:	mov    QWORD PTR [rsp+0x18],rax
  40d5fe:	jmp    40d597 <__flatcc_gen_sort@@Base+0x2057>
  40d600:	lea    r10,[rip+0x2747f]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40d607:	lea    r11,[rip+0x36ae0]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d60e:	mov    QWORD PTR [rsp+0x18],r10
  40d613:	jmp    40cde0 <__flatcc_gen_sort@@Base+0x18a0>
  40d618:	lea    rcx,[rip+0x27571]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40d61f:	lea    r10,[rip+0x27452]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40d626:	lea    r11,[rip+0x36ac1]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d62d:	mov    QWORD PTR [rsp+0x18],rcx
  40d632:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x1870>
  40d637:	lea    rcx,[rip+0x27552]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40d63e:	lea    r10,[rip+0x27433]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40d645:	lea    r11,[rip+0x36aa2]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d64c:	mov    QWORD PTR [rsp+0x18],rcx
  40d651:	jmp    40cde0 <__flatcc_gen_sort@@Base+0x18a0>
  40d656:	lea    rcx,[rip+0x2752c]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40d65d:	lea    r10,[rip+0x2740b]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40d664:	lea    r11,[rip+0x36a83]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d66b:	mov    QWORD PTR [rsp+0x18],rcx
  40d670:	jmp    40cde0 <__flatcc_gen_sort@@Base+0x18a0>
  40d675:	lea    rcx,[rip+0x27505]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40d67c:	lea    r10,[rip+0x273e2]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40d683:	lea    r11,[rip+0x36a64]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d68a:	mov    QWORD PTR [rsp+0x18],rcx
  40d68f:	jmp    40cde0 <__flatcc_gen_sort@@Base+0x18a0>
  40d694:	lea    rcx,[rip+0x274ee]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40d69b:	lea    r10,[rip+0x273cd]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40d6a2:	lea    r11,[rip+0x36a45]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d6a9:	mov    QWORD PTR [rsp+0x18],rcx
  40d6ae:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x1870>
  40d6b3:	lea    rcx,[rip+0x274c7]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40d6ba:	lea    r10,[rip+0x273a4]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40d6c1:	lea    r11,[rip+0x36a26]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40d6c8:	mov    QWORD PTR [rsp+0x18],rcx
  40d6cd:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x1870>
  40d6d2:	vxorps xmm0,xmm0,xmm0
  40d6d6:	lea    rcx,[rip+0x27447]        # 434b24 <_IO_stdin_used@@Base+0x8b24>
  40d6dd:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40d6e2:	vcvtss2sd xmm0,xmm0,xmm0
  40d6e6:	jmp    40d1a0 <__flatcc_gen_sort@@Base+0x1c60>
  40d6eb:	call   4050d0 <__stack_chk_fail@plt>
  40d6f0:	push   r15
  40d6f2:	push   r14
  40d6f4:	mov    ecx,0x1d
  40d6f9:	push   r13
  40d6fb:	push   r12
  40d6fd:	push   rbp
  40d6fe:	push   rbx
  40d6ff:	mov    rbx,rdi
  40d702:	sub    rsp,0x1f8
  40d709:	lea    r12,[rsp+0x100]
  40d711:	mov    rax,QWORD PTR fs:0x28
  40d71a:	mov    QWORD PTR [rsp+0x1e8],rax
  40d722:	xor    eax,eax
  40d724:	mov    rdi,r12
  40d727:	rep stos QWORD PTR es:[rdi],rax
  40d72a:	mov    rax,QWORD PTR [rbx+0xd8]
  40d731:	mov    rbp,QWORD PTR [rax+0x40]
  40d735:	test   rbp,rbp
  40d738:	je     40e395 <__flatcc_gen_sort@@Base+0x2e55>
  40d73e:	xor    eax,eax
  40d740:	lea    r13,[rip+0x28d71]        # 4364b8 <_IO_stdin_used@@Base+0xa4b8>
  40d747:	jmp    40d759 <__flatcc_gen_sort@@Base+0x2219>
  40d749:	nop    DWORD PTR [rax+0x0]
  40d750:	mov    rbp,QWORD PTR [rbp+0x0]
  40d754:	test   rbp,rbp
  40d757:	je     40d7a6 <__flatcc_gen_sort@@Base+0x2266>
  40d759:	cmp    WORD PTR [rbp+0x10],0x4
  40d75e:	jne    40d750 <__flatcc_gen_sort@@Base+0x2210>
  40d760:	mov    rdi,QWORD PTR [rbp+0x18]
  40d764:	mov    rsi,rbp
  40d767:	mov    rdx,r12
  40d76a:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40d76f:	sub    rsp,0x8
  40d773:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d77a:	xor    eax,eax
  40d77c:	push   r12
  40d77e:	mov    r9,rbx
  40d781:	mov    r8,r12
  40d784:	mov    rcx,rbx
  40d787:	mov    rdx,r13
  40d78a:	mov    esi,0x1
  40d78f:	call   4051f0 <__fprintf_chk@plt>
  40d794:	mov    rbp,QWORD PTR [rbp+0x0]
  40d798:	mov    eax,0x1
  40d79d:	pop    r10
  40d79f:	pop    r11
  40d7a1:	test   rbp,rbp
  40d7a4:	jne    40d759 <__flatcc_gen_sort@@Base+0x2219>
  40d7a6:	test   eax,eax
  40d7a8:	je     40d7c4 <__flatcc_gen_sort@@Base+0x2284>
  40d7aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d7b1:	lea    rdx,[rip+0x36935]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40d7b8:	mov    esi,0x1
  40d7bd:	xor    eax,eax
  40d7bf:	call   4051f0 <__fprintf_chk@plt>
  40d7c4:	mov    rax,QWORD PTR [rbx+0xd8]
  40d7cb:	mov    r14,QWORD PTR [rax+0x40]
  40d7cf:	test   r14,r14
  40d7d2:	je     40e395 <__flatcc_gen_sort@@Base+0x2e55>
  40d7d8:	xor    eax,eax
  40d7da:	jmp    40d7ec <__flatcc_gen_sort@@Base+0x22ac>
  40d7dc:	nop    DWORD PTR [rax+0x0]
  40d7e0:	mov    r14,QWORD PTR [r14]
  40d7e3:	test   r14,r14
  40d7e6:	je     40d96f <__flatcc_gen_sort@@Base+0x242f>
  40d7ec:	cmp    WORD PTR [r14+0x10],0x0
  40d7f2:	jne    40d7e0 <__flatcc_gen_sort@@Base+0x22a0>
  40d7f4:	xor    eax,eax
  40d7f6:	mov    ecx,0x1d
  40d7fb:	mov    rdi,r12
  40d7fe:	rep stos QWORD PTR es:[rdi],rax
  40d801:	xor    r13d,r13d
  40d804:	mov    rax,QWORD PTR [r14+0x28]
  40d808:	test   rax,rax
  40d80b:	je     40d827 <__flatcc_gen_sort@@Base+0x22e7>
  40d80d:	nop    DWORD PTR [rax]
  40d810:	movzx  edx,WORD PTR [rax+0x70]
  40d814:	mov    rax,QWORD PTR [rax]
  40d817:	and    edx,0x4
  40d81a:	cmp    dx,0x1
  40d81e:	adc    r13d,0x0
  40d822:	test   rax,rax
  40d825:	jne    40d810 <__flatcc_gen_sort@@Base+0x22d0>
  40d827:	mov    rdi,QWORD PTR [r14+0x18]
  40d82b:	mov    rdx,r12
  40d82e:	mov    rsi,r14
  40d831:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40d836:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d83d:	lea    rdx,[rip+0x28ccc]        # 436510 <_IO_stdin_used@@Base+0xa510>
  40d844:	xor    eax,eax
  40d846:	mov    r8,r12
  40d849:	mov    rcx,rbx
  40d84c:	mov    esi,0x1
  40d851:	call   4051f0 <__fprintf_chk@plt>
  40d856:	mov    rbp,QWORD PTR [r14+0x28]
  40d85a:	test   rbp,rbp
  40d85d:	je     40dbd0 <__flatcc_gen_sort@@Base+0x2690>
  40d863:	xor    r15d,r15d
  40d866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d870:	movzx  eax,WORD PTR [rbp+0x70]
  40d874:	test   al,0x4
  40d876:	jne    40d8e4 <__flatcc_gen_sort@@Base+0x23a4>
  40d878:	test   ah,0x1
  40d87b:	je     40d8e4 <__flatcc_gen_sort@@Base+0x23a4>
  40d87d:	test   r15d,r15d
  40d880:	je     40dbb0 <__flatcc_gen_sort@@Base+0x2670>
  40d886:	test   r13d,r13d
  40d889:	je     40d8c0 <__flatcc_gen_sort@@Base+0x2380>
  40d88b:	test   r15b,0x3
  40d88f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d896:	jne    40d8a7 <__flatcc_gen_sort@@Base+0x2367>
  40d898:	mov    eax,r13d
  40d89b:	sub    eax,r15d
  40d89e:	cmp    eax,0x2
  40d8a1:	jg     40dd60 <__flatcc_gen_sort@@Base+0x2820>
  40d8a7:	lea    rdx,[rip+0x28217]        # 435ac5 <_IO_stdin_used@@Base+0x9ac5>
  40d8ae:	mov    esi,0x1
  40d8b3:	xor    eax,eax
  40d8b5:	call   4051f0 <__fprintf_chk@plt>
  40d8ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d8c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d8c7:	mov    ecx,DWORD PTR [rbp+0x88]
  40d8cd:	lea    rdx,[rip+0x2828a]        # 435b5e <_IO_stdin_used@@Base+0x9b5e>
  40d8d4:	mov    esi,0x1
  40d8d9:	xor    eax,eax
  40d8db:	add    r15d,0x1
  40d8df:	call   4051f0 <__fprintf_chk@plt>
  40d8e4:	mov    rbp,QWORD PTR [rbp+0x0]
  40d8e8:	test   rbp,rbp
  40d8eb:	jne    40d870 <__flatcc_gen_sort@@Base+0x2330>
  40d8ed:	test   r15d,r15d
  40d8f0:	je     40dbd0 <__flatcc_gen_sort@@Base+0x2690>
  40d8f6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d8fd:	lea    rdx,[rip+0x2825d]        # 435b61 <_IO_stdin_used@@Base+0x9b61>
  40d904:	mov    esi,0x1
  40d909:	xor    eax,eax
  40d90b:	call   4051f0 <__fprintf_chk@plt>
  40d910:	xor    eax,eax
  40d912:	mov    ecx,0x1d
  40d917:	mov    rdi,r12
  40d91a:	rep stos QWORD PTR es:[rdi],rax
  40d91d:	mov    rsi,r14
  40d920:	mov    rdx,r12
  40d923:	mov    rdi,QWORD PTR [r14+0x18]
  40d927:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40d92c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d933:	sub    rsp,0x8
  40d937:	lea    rdx,[rip+0x28c02]        # 436540 <_IO_stdin_used@@Base+0xa540>
  40d93e:	push   QWORD PTR [r14+0xa8]
  40d945:	mov    r9,r12
  40d948:	mov    r8,rbx
  40d94b:	xor    eax,eax
  40d94d:	mov    rcx,rbx
  40d950:	mov    esi,0x1
  40d955:	call   4051f0 <__fprintf_chk@plt>
  40d95a:	mov    r14,QWORD PTR [r14]
  40d95d:	mov    eax,0x1
  40d962:	pop    r8
  40d964:	pop    r9
  40d966:	test   r14,r14
  40d969:	jne    40d7ec <__flatcc_gen_sort@@Base+0x22ac>
  40d96f:	mov    DWORD PTR [rsp+0xc],eax
  40d973:	mov    rax,QWORD PTR [rbx+0xd8]
  40d97a:	mov    r13,QWORD PTR [rax+0x40]
  40d97e:	test   r13,r13
  40d981:	je     40e1b5 <__flatcc_gen_sort@@Base+0x2c75>
  40d987:	lea    rax,[rsp+0x10]
  40d98c:	mov    r15,r13
  40d98f:	mov    QWORD PTR [rsp],rax
  40d993:	cmp    WORD PTR [r15+0x10],0x0
  40d999:	je     40dbf0 <__flatcc_gen_sort@@Base+0x26b0>
  40d99f:	mov    r15,QWORD PTR [r15]
  40d9a2:	test   r15,r15
  40d9a5:	jne    40d993 <__flatcc_gen_sort@@Base+0x2453>
  40d9a7:	mov    ecx,DWORD PTR [rsp+0xc]
  40d9ab:	test   ecx,ecx
  40d9ad:	jne    40e1c1 <__flatcc_gen_sort@@Base+0x2c81>
  40d9b3:	mov    rax,QWORD PTR [rbx+0xd8]
  40d9ba:	mov    rbp,QWORD PTR [rax+0x40]
  40d9be:	xor    eax,eax
  40d9c0:	test   rbp,rbp
  40d9c3:	je     40d9ff <__flatcc_gen_sort@@Base+0x24bf>
  40d9c5:	lea    r14,[rsp+0x10]
  40d9ca:	xor    r13d,r13d
  40d9cd:	cmp    WORD PTR [rbp+0x10],0x4
  40d9d2:	je     40dfe5 <__flatcc_gen_sort@@Base+0x2aa5>
  40d9d8:	mov    rbp,QWORD PTR [rbp+0x0]
  40d9dc:	test   rbp,rbp
  40d9df:	jne    40d9cd <__flatcc_gen_sort@@Base+0x248d>
  40d9e1:	test   eax,eax
  40d9e3:	je     40d9ff <__flatcc_gen_sort@@Base+0x24bf>
  40d9e5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d9ec:	lea    rdx,[rip+0x366fa]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40d9f3:	mov    esi,0x1
  40d9f8:	xor    eax,eax
  40d9fa:	call   4051f0 <__fprintf_chk@plt>
  40d9ff:	mov    eax,DWORD PTR [rsp+0xc]
  40da03:	test   eax,eax
  40da05:	je     40e3a2 <__flatcc_gen_sort@@Base+0x2e62>
  40da0b:	mov    rax,QWORD PTR [rbx+0xd8]
  40da12:	mov    r14,QWORD PTR [rax+0x40]
  40da16:	test   r14,r14
  40da19:	je     40e3a2 <__flatcc_gen_sort@@Base+0x2e62>
  40da1f:	mov    r13,rbx
  40da22:	jmp    40da34 <__flatcc_gen_sort@@Base+0x24f4>
  40da24:	nop    DWORD PTR [rax+0x0]
  40da28:	mov    r14,QWORD PTR [r14]
  40da2b:	test   r14,r14
  40da2e:	je     40e3a2 <__flatcc_gen_sort@@Base+0x2e62>
  40da34:	cmp    WORD PTR [r14+0x10],0x0
  40da3a:	jne    40da28 <__flatcc_gen_sort@@Base+0x24e8>
  40da3c:	mov    rsi,r14
  40da3f:	mov    rdi,r13
  40da42:	call   40c560 <__flatcc_gen_sort@@Base+0x1020>
  40da47:	movzx  eax,WORD PTR [r14+0xa4]
  40da4f:	mov    ecx,0x1d
  40da54:	mov    rdi,r12
  40da57:	mov    rdx,r12
  40da5a:	mov    rsi,r14
  40da5d:	and    ax,0x8
  40da61:	mov    WORD PTR [rsp],ax
  40da65:	sete   bl
  40da68:	xor    eax,eax
  40da6a:	rep stos QWORD PTR es:[rdi],rax
  40da6d:	mov    rdi,QWORD PTR [r14+0x18]
  40da71:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40da76:	sub    rsp,0x8
  40da7a:	mov    rdi,QWORD PTR [r13+0xd0]
  40da81:	lea    rdx,[rip+0x28d60]        # 4367e8 <_IO_stdin_used@@Base+0xa7e8>
  40da88:	push   r12
  40da8a:	mov    r9,r13
  40da8d:	mov    r8,r12
  40da90:	mov    rcx,r12
  40da93:	mov    esi,0x1
  40da98:	xor    eax,eax
  40da9a:	call   4051f0 <__fprintf_chk@plt>
  40da9f:	mov    rdi,QWORD PTR [r13+0xd0]
  40daa6:	lea    rdx,[rip+0x28196]        # 435c43 <_IO_stdin_used@@Base+0x9c43>
  40daad:	xor    eax,eax
  40daaf:	mov    rcx,r12
  40dab2:	mov    esi,0x1
  40dab7:	call   4051f0 <__fprintf_chk@plt>
  40dabc:	mov    rbp,QWORD PTR [r14+0x30]
  40dac0:	pop    r15
  40dac2:	xor    r15d,r15d
  40dac5:	test   rbp,rbp
  40dac8:	pop    rax
  40dac9:	je     40e264 <__flatcc_gen_sort@@Base+0x2d24>
  40dacf:	nop
  40dad0:	test   BYTE PTR [rbp+0x70],0x4
  40dad4:	jne    40db20 <__flatcc_gen_sort@@Base+0x25e0>
  40dad6:	cmp    WORD PTR [rbp+0x28],0xe
  40dadb:	mov    rax,QWORD PTR [rbp+0x8]
  40dadf:	mov    r9,QWORD PTR [rax]
  40dae2:	mov    r8,QWORD PTR [rax+0x8]
  40dae6:	jne    40daf7 <__flatcc_gen_sort@@Base+0x25b7>
  40dae8:	mov    rax,QWORD PTR [rbp+0x18]
  40daec:	cmp    WORD PTR [rax+0x10],0x4
  40daf1:	je     40e350 <__flatcc_gen_sort@@Base+0x2e10>
  40daf7:	mov    rdi,QWORD PTR [r13+0xd0]
  40dafe:	sub    rsp,0x8
  40db02:	lea    rdx,[rip+0x28dcf]        # 4368d8 <_IO_stdin_used@@Base+0xa8d8>
  40db09:	push   QWORD PTR [rbp+0x88]
  40db0f:	mov    esi,0x1
  40db14:	mov    rcx,r12
  40db17:	xor    eax,eax
  40db19:	call   4051f0 <__fprintf_chk@plt>
  40db1e:	pop    rsi
  40db1f:	pop    rdi
  40db20:	mov    rbp,QWORD PTR [rbp+0x98]
  40db27:	test   rbp,rbp
  40db2a:	jne    40dad0 <__flatcc_gen_sort@@Base+0x2590>
  40db2c:	and    r15d,0x1
  40db30:	je     40e264 <__flatcc_gen_sort@@Base+0x2d24>
  40db36:	test   bl,bl
  40db38:	je     40e264 <__flatcc_gen_sort@@Base+0x2d24>
  40db3e:	mov    rbx,QWORD PTR [r14+0x30]
  40db42:	test   rbx,rbx
  40db45:	jne    40db60 <__flatcc_gen_sort@@Base+0x2620>
  40db47:	jmp    40e264 <__flatcc_gen_sort@@Base+0x2d24>
  40db4c:	nop    DWORD PTR [rax+0x0]
  40db50:	mov    rbx,QWORD PTR [rbx+0x98]
  40db57:	test   rbx,rbx
  40db5a:	je     40e264 <__flatcc_gen_sort@@Base+0x2d24>
  40db60:	test   BYTE PTR [rbx+0x70],0x4
  40db64:	jne    40db50 <__flatcc_gen_sort@@Base+0x2610>
  40db66:	cmp    WORD PTR [rbx+0x28],0xe
  40db6b:	jne    40db50 <__flatcc_gen_sort@@Base+0x2610>
  40db6d:	mov    rax,QWORD PTR [rbx+0x18]
  40db71:	cmp    WORD PTR [rax+0x10],0x4
  40db76:	jne    40db50 <__flatcc_gen_sort@@Base+0x2610>
  40db78:	mov    rax,QWORD PTR [rbx+0x8]
  40db7c:	sub    rsp,0x8
  40db80:	mov    rdi,QWORD PTR [r13+0xd0]
  40db87:	push   QWORD PTR [rbx+0x88]
  40db8d:	lea    rdx,[rip+0x28d6c]        # 436900 <_IO_stdin_used@@Base+0xa900>
  40db94:	mov    rcx,r12
  40db97:	mov    esi,0x1
  40db9c:	mov    r9,QWORD PTR [rax]
  40db9f:	mov    r8d,DWORD PTR [rax+0x8]
  40dba3:	xor    eax,eax
  40dba5:	call   4051f0 <__fprintf_chk@plt>
  40dbaa:	pop    rdx
  40dbab:	pop    rcx
  40dbac:	jmp    40db50 <__flatcc_gen_sort@@Base+0x2610>
  40dbae:	xchg   ax,ax
  40dbb0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dbb7:	lea    rdx,[rip+0x27f1d]        # 435adb <_IO_stdin_used@@Base+0x9adb>
  40dbbe:	mov    esi,0x1
  40dbc3:	xor    eax,eax
  40dbc5:	call   4051f0 <__fprintf_chk@plt>
  40dbca:	jmp    40d8c0 <__flatcc_gen_sort@@Base+0x2380>
  40dbcf:	nop
  40dbd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dbd7:	lea    rdx,[rip+0x27f84]        # 435b62 <_IO_stdin_used@@Base+0x9b62>
  40dbde:	mov    esi,0x1
  40dbe3:	xor    eax,eax
  40dbe5:	call   4051f0 <__fprintf_chk@plt>
  40dbea:	jmp    40d910 <__flatcc_gen_sort@@Base+0x23d0>
  40dbef:	nop
  40dbf0:	mov    rdi,QWORD PTR [rsp]
  40dbf4:	xor    eax,eax
  40dbf6:	mov    ecx,0x1d
  40dbfb:	mov    rdx,QWORD PTR [rsp]
  40dbff:	mov    rsi,r15
  40dc02:	xor    r13d,r13d
  40dc05:	rep stos QWORD PTR es:[rdi],rax
  40dc08:	mov    rdi,QWORD PTR [r15+0x18]
  40dc0c:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40dc11:	mov    rax,QWORD PTR [r15+0x28]
  40dc15:	test   rax,rax
  40dc18:	je     40dc37 <__flatcc_gen_sort@@Base+0x26f7>
  40dc1a:	nop    WORD PTR [rax+rax*1+0x0]
  40dc20:	movzx  edx,WORD PTR [rax+0x70]
  40dc24:	mov    rax,QWORD PTR [rax]
  40dc27:	and    edx,0x4
  40dc2a:	cmp    dx,0x1
  40dc2e:	adc    r13d,0x0
  40dc32:	test   rax,rax
  40dc35:	jne    40dc20 <__flatcc_gen_sort@@Base+0x26e0>
  40dc37:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dc3e:	mov    rcx,QWORD PTR [rsp]
  40dc42:	lea    rdx,[rip+0x27f20]        # 435b69 <_IO_stdin_used@@Base+0x9b69>
  40dc49:	xor    eax,eax
  40dc4b:	mov    esi,0x1
  40dc50:	call   4051f0 <__fprintf_chk@plt>
  40dc55:	xor    eax,eax
  40dc57:	mov    ecx,0x1d
  40dc5c:	mov    rdi,r12
  40dc5f:	rep stos QWORD PTR es:[rdi],rax
  40dc62:	mov    rbp,QWORD PTR [r15+0x28]
  40dc66:	test   rbp,rbp
  40dc69:	jne    40dc7d <__flatcc_gen_sort@@Base+0x273d>
  40dc6b:	jmp    40dde6 <__flatcc_gen_sort@@Base+0x28a6>
  40dc70:	mov    rbp,QWORD PTR [rbp+0x0]
  40dc74:	test   rbp,rbp
  40dc77:	je     40dde6 <__flatcc_gen_sort@@Base+0x28a6>
  40dc7d:	test   BYTE PTR [rbp+0x70],0x4
  40dc81:	jne    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40dc83:	test   r13d,r13d
  40dc86:	lea    r14d,[rax+0x1]
  40dc8a:	je     40dcb0 <__flatcc_gen_sort@@Base+0x2770>
  40dc8c:	test   eax,eax
  40dc8e:	jne    40dcd0 <__flatcc_gen_sort@@Base+0x2790>
  40dc90:	cmp    r13d,0x4
  40dc94:	jg     40dcde <__flatcc_gen_sort@@Base+0x279e>
  40dc96:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dc9d:	lea    rdx,[rip+0x27e21]        # 435ac5 <_IO_stdin_used@@Base+0x9ac5>
  40dca4:	mov    esi,0x1
  40dca9:	xor    eax,eax
  40dcab:	call   4051f0 <__fprintf_chk@plt>
  40dcb0:	movzx  eax,WORD PTR [rbp+0x28]
  40dcb4:	sub    eax,0x7
  40dcb7:	cmp    ax,0x8
  40dcbb:	ja     40dd10 <__flatcc_gen_sort@@Base+0x27d0>
  40dcbd:	lea    rcx,[rip+0x31850]        # 43f514 <_IO_stdin_used@@Base+0x13514>
  40dcc4:	movzx  eax,ax
  40dcc7:	movsxd rax,DWORD PTR [rcx+rax*4]
  40dccb:	add    rax,rcx
  40dcce:	jmp    rax
  40dcd0:	test   al,0x3
  40dcd2:	jne    40dc96 <__flatcc_gen_sort@@Base+0x2756>
  40dcd4:	mov    ecx,r13d
  40dcd7:	sub    ecx,eax
  40dcd9:	cmp    ecx,0x2
  40dcdc:	jle    40dc96 <__flatcc_gen_sort@@Base+0x2756>
  40dcde:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dce5:	lea    rcx,[rip+0x27dd0]        # 435abc <_IO_stdin_used@@Base+0x9abc>
  40dcec:	lea    rdx,[rip+0x27dcc]        # 435abf <_IO_stdin_used@@Base+0x9abf>
  40dcf3:	xor    eax,eax
  40dcf5:	mov    esi,0x1
  40dcfa:	call   4051f0 <__fprintf_chk@plt>
  40dcff:	movzx  eax,WORD PTR [rbp+0x28]
  40dd03:	sub    eax,0x7
  40dd06:	cmp    ax,0x8
  40dd0a:	jbe    40dcbd <__flatcc_gen_sort@@Base+0x277d>
  40dd0c:	nop    DWORD PTR [rax+0x0]
  40dd10:	mov    rax,QWORD PTR [rip+0x422d1]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40dd17:	lea    rcx,[rip+0x2810a]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40dd1e:	lea    rdx,[rip+0x26d9c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40dd25:	lea    r9,[rip+0x2836c]        # 436098 <_IO_stdin_used@@Base+0xa098>
  40dd2c:	mov    esi,0x1
  40dd31:	mov    r8d,0x4b9
  40dd37:	mov    rdi,QWORD PTR [rax]
  40dd3a:	xor    eax,eax
  40dd3c:	call   4051f0 <__fprintf_chk@plt>
  40dd41:	lea    rcx,[rip+0x318c8]        # 43f610 <_IO_stdin_used@@Base+0x13610>
  40dd48:	lea    rsi,[rip+0x280d9]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40dd4f:	lea    rdi,[rip+0x27db3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40dd56:	mov    edx,0x4b9
  40dd5b:	call   4050f0 <__assert_fail@plt>
  40dd60:	lea    rcx,[rip+0x36386]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40dd67:	lea    rdx,[rip+0x27d51]        # 435abf <_IO_stdin_used@@Base+0x9abf>
  40dd6e:	mov    esi,0x1
  40dd73:	xor    eax,eax
  40dd75:	call   4051f0 <__fprintf_chk@plt>
  40dd7a:	jmp    40d8c0 <__flatcc_gen_sort@@Base+0x2380>
  40dd7f:	nop
  40dd80:	mov    rsi,QWORD PTR [rbp+0x18]
  40dd84:	mov    rdx,r12
  40dd87:	mov    rdi,QWORD PTR [rsi+0x18]
  40dd8b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40dd90:	mov    rax,QWORD PTR [rbp+0x18]
  40dd94:	movzx  eax,WORD PTR [rax+0x10]
  40dd98:	cmp    ax,0x3
  40dd9c:	je     40e2f1 <__flatcc_gen_sort@@Base+0x2db1>
  40dda2:	jbe    40e2e7 <__flatcc_gen_sort@@Base+0x2da7>
  40dda8:	cmp    ax,0x4
  40ddac:	jne    40e214 <__flatcc_gen_sort@@Base+0x2cd4>
  40ddb2:	mov    r8,QWORD PTR [rbp+0x88]
  40ddb9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ddc0:	lea    rdx,[rip+0x27e15]        # 435bdc <_IO_stdin_used@@Base+0x9bdc>
  40ddc7:	xor    eax,eax
  40ddc9:	mov    rcx,r12
  40ddcc:	mov    esi,0x1
  40ddd1:	call   4051f0 <__fprintf_chk@plt>
  40ddd6:	mov    rbp,QWORD PTR [rbp+0x0]
  40ddda:	mov    eax,r14d
  40dddd:	test   rbp,rbp
  40dde0:	jne    40dc7d <__flatcc_gen_sort@@Base+0x273d>
  40dde6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dded:	mov    rcx,QWORD PTR [rsp]
  40ddf1:	lea    rdx,[rip+0x27d8b]        # 435b83 <_IO_stdin_used@@Base+0x9b83>
  40ddf8:	xor    eax,eax
  40ddfa:	mov    esi,0x1
  40ddff:	xor    ebp,ebp
  40de01:	call   4051f0 <__fprintf_chk@plt>
  40de06:	mov    r14,QWORD PTR [r15+0x28]
  40de0a:	test   r14,r14
  40de0d:	jne    40de20 <__flatcc_gen_sort@@Base+0x28e0>
  40de0f:	jmp    40de84 <__flatcc_gen_sort@@Base+0x2944>
  40de11:	nop    DWORD PTR [rax+0x0]
  40de18:	mov    r14,QWORD PTR [r14]
  40de1b:	test   r14,r14
  40de1e:	je     40de84 <__flatcc_gen_sort@@Base+0x2944>
  40de20:	test   BYTE PTR [r14+0x70],0x4
  40de25:	jne    40de18 <__flatcc_gen_sort@@Base+0x28d8>
  40de27:	test   r13d,r13d
  40de2a:	je     40de58 <__flatcc_gen_sort@@Base+0x2918>
  40de2c:	test   ebp,ebp
  40de2e:	jne    40e177 <__flatcc_gen_sort@@Base+0x2c37>
  40de34:	cmp    r13d,0x4
  40de38:	jg     40e18f <__flatcc_gen_sort@@Base+0x2c4f>
  40de3e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40de45:	lea    rdx,[rip+0x27c79]        # 435ac5 <_IO_stdin_used@@Base+0x9ac5>
  40de4c:	mov    esi,0x1
  40de51:	xor    eax,eax
  40de53:	call   4051f0 <__fprintf_chk@plt>
  40de58:	mov    rcx,QWORD PTR [r14+0x88]
  40de5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40de66:	lea    rdx,[rip+0x27d8d]        # 435bfa <_IO_stdin_used@@Base+0x9bfa>
  40de6d:	xor    eax,eax
  40de6f:	mov    esi,0x1
  40de74:	add    ebp,0x1
  40de77:	call   4051f0 <__fprintf_chk@plt>
  40de7c:	mov    r14,QWORD PTR [r14]
  40de7f:	test   r14,r14
  40de82:	jne    40de20 <__flatcc_gen_sort@@Base+0x28e0>
  40de84:	mov    rdi,QWORD PTR [rbx+0xd0]
  40de8b:	lea    rdx,[rip+0x3625b]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40de92:	mov    esi,0x1
  40de97:	xor    eax,eax
  40de99:	call   4051f0 <__fprintf_chk@plt>
  40de9e:	sub    rsp,0x8
  40dea2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dea9:	lea    rdx,[rip+0x28710]        # 4365c0 <_IO_stdin_used@@Base+0xa5c0>
  40deb0:	mov    rcx,QWORD PTR [rsp+0x8]
  40deb5:	mov    esi,0x1
  40deba:	mov    r9,rbx
  40debd:	xor    eax,eax
  40debf:	push   rcx
  40dec0:	mov    r8,rcx
  40dec3:	call   4051f0 <__fprintf_chk@plt>
  40dec8:	pop    rsi
  40dec9:	pop    rdi
  40deca:	jmp    40d99f <__flatcc_gen_sort@@Base+0x245f>
  40decf:	nop
  40ded0:	mov    rsi,QWORD PTR [rbp+0x18]
  40ded4:	mov    rdx,r12
  40ded7:	mov    rdi,QWORD PTR [rsi+0x18]
  40dedb:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40dee0:	mov    rax,QWORD PTR [rbp+0x18]
  40dee4:	movzx  eax,WORD PTR [rax+0x10]
  40dee8:	cmp    ax,0x1
  40deec:	je     40e449 <__flatcc_gen_sort@@Base+0x2f09>
  40def2:	jb     40e41d <__flatcc_gen_sort@@Base+0x2edd>
  40def8:	cmp    ax,0x3
  40defc:	je     40e1e8 <__flatcc_gen_sort@@Base+0x2ca8>
  40df02:	cmp    ax,0x4
  40df06:	jne    40e3cd <__flatcc_gen_sort@@Base+0x2e8d>
  40df0c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40df13:	mov    r8,QWORD PTR [rbp+0x88]
  40df1a:	lea    rdx,[rip+0x27ca6]        # 435bc7 <_IO_stdin_used@@Base+0x9bc7>
  40df21:	mov    rcx,r12
  40df24:	mov    esi,0x1
  40df29:	xor    eax,eax
  40df2b:	call   4051f0 <__fprintf_chk@plt>
  40df30:	mov    eax,r14d
  40df33:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40df38:	nop    DWORD PTR [rax+rax*1+0x0]
  40df40:	mov    rdi,QWORD PTR [rbx+0xd0]
  40df47:	mov    r8,QWORD PTR [rbp+0x88]
  40df4e:	lea    rdx,[rip+0x27cc0]        # 435c15 <_IO_stdin_used@@Base+0x9c15>
  40df55:	mov    rcx,rbx
  40df58:	mov    esi,0x1
  40df5d:	xor    eax,eax
  40df5f:	call   4051f0 <__fprintf_chk@plt>
  40df64:	mov    eax,r14d
  40df67:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40df6c:	nop    DWORD PTR [rax+0x0]
  40df70:	mov    rdi,QWORD PTR [rbx+0xd0]
  40df77:	mov    r8,QWORD PTR [rbp+0x88]
  40df7e:	lea    rdx,[rip+0x27ca5]        # 435c2a <_IO_stdin_used@@Base+0x9c2a>
  40df85:	mov    rcx,rbx
  40df88:	mov    esi,0x1
  40df8d:	xor    eax,eax
  40df8f:	call   4051f0 <__fprintf_chk@plt>
  40df94:	mov    eax,r14d
  40df97:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40df9c:	nop    DWORD PTR [rax+0x0]
  40dfa0:	mov    eax,DWORD PTR [rbp+0x18]
  40dfa3:	cmp    eax,0x5
  40dfa6:	je     40e31d <__flatcc_gen_sort@@Base+0x2ddd>
  40dfac:	cmp    eax,0xb
  40dfaf:	ja     40e617 <__flatcc_gen_sort@@Base+0x30d7>
  40dfb5:	lea    rdx,[rip+0x3157c]        # 43f538 <_IO_stdin_used@@Base+0x13538>
  40dfbc:	movsxd rax,DWORD PTR [rdx+rax*4]
  40dfc0:	add    rax,rdx
  40dfc3:	jmp    rax
  40dfc5:	nop    DWORD PTR [rax]
  40dfc8:	cmp    DWORD PTR [rbp+0x18],0xb
  40dfcc:	ja     40e5c7 <__flatcc_gen_sort@@Base+0x3087>
  40dfd2:	mov    eax,DWORD PTR [rbp+0x18]
  40dfd5:	lea    rsi,[rip+0x3158c]        # 43f568 <_IO_stdin_used@@Base+0x13568>
  40dfdc:	movsxd rax,DWORD PTR [rsi+rax*4]
  40dfe0:	add    rax,rsi
  40dfe3:	jmp    rax
  40dfe5:	mov    rax,r13
  40dfe8:	mov    ecx,0x1d
  40dfed:	mov    rdi,r14
  40dff0:	rep stos QWORD PTR es:[rdi],rax
  40dff3:	mov    ecx,0x1d
  40dff8:	mov    rdi,r12
  40dffb:	mov    rdx,r14
  40dffe:	mov    rsi,rbp
  40e001:	rep stos QWORD PTR es:[rdi],rax
  40e004:	mov    rdi,QWORD PTR [rbp+0x18]
  40e008:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40e00d:	mov    r15,QWORD PTR [rbp+0x28]
  40e011:	test   r15,r15
  40e014:	je     40e0bf <__flatcc_gen_sort@@Base+0x2b7f>
  40e01a:	movzx  eax,WORD PTR [r15+0x28]
  40e01f:	cmp    ax,0xa
  40e023:	je     40e13a <__flatcc_gen_sort@@Base+0x2bfa>
  40e029:	cmp    ax,0xe
  40e02d:	je     40e0ec <__flatcc_gen_sort@@Base+0x2bac>
  40e033:	test   ax,ax
  40e036:	je     40e088 <__flatcc_gen_sort@@Base+0x2b48>
  40e038:	mov    rax,QWORD PTR [rip+0x41fa9]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40e03f:	lea    rcx,[rip+0x27de2]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40e046:	lea    rdx,[rip+0x26a74]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40e04d:	lea    r9,[rip+0x28764]        # 4367b8 <_IO_stdin_used@@Base+0xa7b8>
  40e054:	mov    esi,0x1
  40e059:	mov    r8d,0x648
  40e05f:	mov    rdi,QWORD PTR [rax]
  40e062:	xor    eax,eax
  40e064:	call   4051f0 <__fprintf_chk@plt>
  40e069:	lea    rcx,[rip+0x31590]        # 43f600 <_IO_stdin_used@@Base+0x13600>
  40e070:	lea    rsi,[rip+0x27db1]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40e077:	lea    rdi,[rip+0x27a8b]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40e07e:	mov    edx,0x648
  40e083:	call   4050f0 <__assert_fail@plt>
  40e088:	sub    rsp,0x8
  40e08c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e093:	lea    rdx,[rip+0x286a6]        # 436740 <_IO_stdin_used@@Base+0xa740>
  40e09a:	push   r14
  40e09c:	mov    r9,r14
  40e09f:	mov    r8,r14
  40e0a2:	mov    rcx,r14
  40e0a5:	mov    esi,0x1
  40e0aa:	xor    eax,eax
  40e0ac:	call   4051f0 <__fprintf_chk@plt>
  40e0b1:	pop    rax
  40e0b2:	pop    rdx
  40e0b3:	mov    r15,QWORD PTR [r15]
  40e0b6:	test   r15,r15
  40e0b9:	jne    40e01a <__flatcc_gen_sort@@Base+0x2ada>
  40e0bf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e0c6:	lea    rdx,[rip+0x2853b]        # 436608 <_IO_stdin_used@@Base+0xa608>
  40e0cd:	mov    r9,r14
  40e0d0:	mov    r8,rbx
  40e0d3:	mov    rcx,rbx
  40e0d6:	mov    esi,0x1
  40e0db:	xor    eax,eax
  40e0dd:	call   4051f0 <__fprintf_chk@plt>
  40e0e2:	mov    eax,0x1
  40e0e7:	jmp    40d9d8 <__flatcc_gen_sort@@Base+0x2498>
  40e0ec:	mov    rsi,QWORD PTR [r15+0x18]
  40e0f0:	mov    rdx,r12
  40e0f3:	mov    rdi,QWORD PTR [rsi+0x18]
  40e0f7:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40e0fc:	mov    rdx,QWORD PTR [r15+0x8]
  40e100:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e107:	mov    r8,r14
  40e10a:	mov    rcx,r14
  40e10d:	mov    esi,0x1
  40e112:	mov    rax,QWORD PTR [rdx]
  40e115:	mov    r9,QWORD PTR [rdx+0x8]
  40e119:	lea    rdx,[rip+0x28508]        # 436628 <_IO_stdin_used@@Base+0xa628>
  40e120:	push   rax
  40e121:	push   r9
  40e123:	push   r14
  40e125:	push   r14
  40e127:	push   r12
  40e129:	push   rax
  40e12a:	xor    eax,eax
  40e12c:	call   4051f0 <__fprintf_chk@plt>
  40e131:	add    rsp,0x30
  40e135:	jmp    40e0b3 <__flatcc_gen_sort@@Base+0x2b73>
  40e13a:	mov    rdx,QWORD PTR [r15+0x8]
  40e13e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e145:	mov    r8,r14
  40e148:	mov    rcx,r14
  40e14b:	mov    esi,0x1
  40e150:	mov    rax,QWORD PTR [rdx]
  40e153:	mov    r9,QWORD PTR [rdx+0x8]
  40e157:	lea    rdx,[rip+0x28552]        # 4366b0 <_IO_stdin_used@@Base+0xa6b0>
  40e15e:	push   rax
  40e15f:	push   r9
  40e161:	push   r14
  40e163:	push   r14
  40e165:	push   rbx
  40e166:	push   rax
  40e167:	xor    eax,eax
  40e169:	call   4051f0 <__fprintf_chk@plt>
  40e16e:	add    rsp,0x30
  40e172:	jmp    40e0b3 <__flatcc_gen_sort@@Base+0x2b73>
  40e177:	test   bpl,0x3
  40e17b:	jne    40de3e <__flatcc_gen_sort@@Base+0x28fe>
  40e181:	mov    eax,r13d
  40e184:	sub    eax,ebp
  40e186:	cmp    eax,0x2
  40e189:	jle    40de3e <__flatcc_gen_sort@@Base+0x28fe>
  40e18f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e196:	lea    rcx,[rip+0x2791f]        # 435abc <_IO_stdin_used@@Base+0x9abc>
  40e19d:	lea    rdx,[rip+0x2791b]        # 435abf <_IO_stdin_used@@Base+0x9abf>
  40e1a4:	mov    esi,0x1
  40e1a9:	xor    eax,eax
  40e1ab:	call   4051f0 <__fprintf_chk@plt>
  40e1b0:	jmp    40de58 <__flatcc_gen_sort@@Base+0x2918>
  40e1b5:	mov    eax,DWORD PTR [rsp+0xc]
  40e1b9:	test   eax,eax
  40e1bb:	je     40e3a2 <__flatcc_gen_sort@@Base+0x2e62>
  40e1c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e1c8:	lea    rdx,[rip+0x35f1e]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40e1cf:	mov    esi,0x1
  40e1d4:	xor    eax,eax
  40e1d6:	call   4051f0 <__fprintf_chk@plt>
  40e1db:	mov    DWORD PTR [rsp+0xc],0x1
  40e1e3:	jmp    40d9b3 <__flatcc_gen_sort@@Base+0x2473>
  40e1e8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e1ef:	mov    r8,QWORD PTR [rbp+0x88]
  40e1f6:	lea    rdx,[rip+0x279ab]        # 435ba8 <_IO_stdin_used@@Base+0x9ba8>
  40e1fd:	mov    rcx,r12
  40e200:	mov    esi,0x1
  40e205:	xor    eax,eax
  40e207:	call   4051f0 <__fprintf_chk@plt>
  40e20c:	mov    eax,r14d
  40e20f:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40e214:	mov    rax,QWORD PTR [rip+0x41dcd]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40e21b:	lea    rcx,[rip+0x27c06]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40e222:	lea    rdx,[rip+0x26898]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40e229:	lea    r9,[rip+0x28360]        # 436590 <_IO_stdin_used@@Base+0xa590>
  40e230:	mov    esi,0x1
  40e235:	mov    r8d,0x4a5
  40e23b:	mov    rdi,QWORD PTR [rax]
  40e23e:	xor    eax,eax
  40e240:	call   4051f0 <__fprintf_chk@plt>
  40e245:	lea    rcx,[rip+0x313c4]        # 43f610 <_IO_stdin_used@@Base+0x13610>
  40e24c:	lea    rsi,[rip+0x27bd5]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40e253:	lea    rdi,[rip+0x278af]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40e25a:	mov    edx,0x4a5
  40e25f:	call   4050f0 <__assert_fail@plt>
  40e264:	mov    rdi,QWORD PTR [r13+0xd0]
  40e26b:	lea    rdx,[rip+0x285be]        # 436830 <_IO_stdin_used@@Base+0xa830>
  40e272:	mov    rcx,r12
  40e275:	mov    esi,0x1
  40e27a:	xor    eax,eax
  40e27c:	call   4051f0 <__fprintf_chk@plt>
  40e281:	xor    eax,eax
  40e283:	mov    ecx,0x1d
  40e288:	mov    rdi,r12
  40e28b:	rep stos QWORD PTR es:[rdi],rax
  40e28e:	mov    rdx,r12
  40e291:	mov    rsi,r14
  40e294:	mov    rdi,QWORD PTR [r14+0x18]
  40e298:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40e29d:	mov    rdi,QWORD PTR [r13+0xd0]
  40e2a4:	lea    rdx,[rip+0x285bd]        # 436868 <_IO_stdin_used@@Base+0xa868>
  40e2ab:	push   r12
  40e2ad:	push   r12
  40e2af:	mov    r9,r12
  40e2b2:	mov    r8,r13
  40e2b5:	mov    rcx,r13
  40e2b8:	mov    esi,0x1
  40e2bd:	xor    eax,eax
  40e2bf:	call   4051f0 <__fprintf_chk@plt>
  40e2c4:	mov    rdi,QWORD PTR [r13+0xd0]
  40e2cb:	lea    rdx,[rip+0x35e1b]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40e2d2:	mov    esi,0x1
  40e2d7:	xor    eax,eax
  40e2d9:	call   4051f0 <__fprintf_chk@plt>
  40e2de:	pop    r10
  40e2e0:	pop    r11
  40e2e2:	jmp    40da28 <__flatcc_gen_sort@@Base+0x24e8>
  40e2e7:	cmp    ax,0x1
  40e2eb:	ja     40e214 <__flatcc_gen_sort@@Base+0x2cd4>
  40e2f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e2f8:	mov    r8,QWORD PTR [rbp+0x88]
  40e2ff:	lea    rdx,[rip+0x278fc]        # 435c02 <_IO_stdin_used@@Base+0x9c02>
  40e306:	mov    rcx,r12
  40e309:	mov    esi,0x1
  40e30e:	xor    eax,eax
  40e310:	call   4051f0 <__fprintf_chk@plt>
  40e315:	mov    eax,r14d
  40e318:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40e31d:	lea    r8,[rip+0x2675b]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  40e324:	mov    rcx,rbx
  40e327:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e32e:	mov    r9,QWORD PTR [rbp+0x88]
  40e335:	lea    rdx,[rip+0x278b9]        # 435bf5 <_IO_stdin_used@@Base+0x9bf5>
  40e33c:	mov    esi,0x1
  40e341:	xor    eax,eax
  40e343:	call   4051f0 <__fprintf_chk@plt>
  40e348:	mov    eax,r14d
  40e34b:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40e350:	cmp    WORD PTR [rsp],0x0
  40e355:	mov    r15d,DWORD PTR [rsp+0xc]
  40e35a:	jne    40daf7 <__flatcc_gen_sort@@Base+0x25b7>
  40e360:	mov    rdi,QWORD PTR [r13+0xd0]
  40e367:	sub    rsp,0x8
  40e36b:	lea    rdx,[rip+0x2853e]        # 4368b0 <_IO_stdin_used@@Base+0xa8b0>
  40e372:	push   QWORD PTR [rbp+0x88]
  40e378:	mov    rcx,r12
  40e37b:	mov    esi,0x1
  40e380:	xor    eax,eax
  40e382:	call   4051f0 <__fprintf_chk@plt>
  40e387:	pop    r8
  40e389:	pop    r9
  40e38b:	mov    r15d,DWORD PTR [rsp+0xc]
  40e390:	jmp    40db20 <__flatcc_gen_sort@@Base+0x25e0>
  40e395:	mov    DWORD PTR [rsp+0xc],0x0
  40e39d:	jmp    40d9ba <__flatcc_gen_sort@@Base+0x247a>
  40e3a2:	xor    eax,eax
  40e3a4:	mov    rsi,QWORD PTR [rsp+0x1e8]
  40e3ac:	xor    rsi,QWORD PTR fs:0x28
  40e3b5:	jne    40e667 <__flatcc_gen_sort@@Base+0x3127>
  40e3bb:	add    rsp,0x1f8
  40e3c2:	pop    rbx
  40e3c3:	pop    rbp
  40e3c4:	pop    r12
  40e3c6:	pop    r13
  40e3c8:	pop    r14
  40e3ca:	pop    r15
  40e3cc:	ret    
  40e3cd:	mov    rax,QWORD PTR [rip+0x41c14]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40e3d4:	lea    rcx,[rip+0x27a4d]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40e3db:	lea    rdx,[rip+0x266df]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40e3e2:	lea    r9,[rip+0x28177]        # 436560 <_IO_stdin_used@@Base+0xa560>
  40e3e9:	mov    esi,0x1
  40e3ee:	mov    r8d,0x495
  40e3f4:	mov    rdi,QWORD PTR [rax]
  40e3f7:	xor    eax,eax
  40e3f9:	call   4051f0 <__fprintf_chk@plt>
  40e3fe:	lea    rcx,[rip+0x3120b]        # 43f610 <_IO_stdin_used@@Base+0x13610>
  40e405:	lea    rsi,[rip+0x27a1c]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40e40c:	lea    rdi,[rip+0x276f6]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40e413:	mov    edx,0x495
  40e418:	call   4050f0 <__assert_fail@plt>
  40e41d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e424:	mov    r8,QWORD PTR [rbp+0x88]
  40e42b:	lea    rdx,[rip+0x27786]        # 435bb8 <_IO_stdin_used@@Base+0x9bb8>
  40e432:	mov    rcx,r12
  40e435:	mov    esi,0x1
  40e43a:	xor    eax,eax
  40e43c:	call   4051f0 <__fprintf_chk@plt>
  40e441:	mov    eax,r14d
  40e444:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40e449:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e450:	mov    r8,QWORD PTR [rbp+0x88]
  40e457:	lea    rdx,[rip+0x2773e]        # 435b9c <_IO_stdin_used@@Base+0x9b9c>
  40e45e:	mov    rcx,r12
  40e461:	mov    esi,0x1
  40e466:	xor    eax,eax
  40e468:	call   4051f0 <__fprintf_chk@plt>
  40e46d:	mov    eax,r14d
  40e470:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40e475:	lea    r8,[rip+0x26705]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  40e47c:	nop    DWORD PTR [rax+0x0]
  40e480:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e487:	mov    r9,QWORD PTR [rbp+0x88]
  40e48e:	lea    rdx,[rip+0x2776b]        # 435c00 <_IO_stdin_used@@Base+0x9c00>
  40e495:	mov    rcx,rbx
  40e498:	mov    esi,0x1
  40e49d:	xor    eax,eax
  40e49f:	call   4051f0 <__fprintf_chk@plt>
  40e4a4:	mov    eax,r14d
  40e4a7:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x2730>
  40e4ac:	lea    r8,[rip+0x266d5]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  40e4b3:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4b5:	lea    r8,[rip+0x266d3]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  40e4bc:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4be:	lea    r8,[rip+0x266d0]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  40e4c5:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4c7:	lea    r8,[rip+0x266c2]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  40e4ce:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4d0:	lea    r8,[rip+0x266a3]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  40e4d7:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4d9:	lea    r8,[rip+0x265ac]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40e4e0:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4e2:	lea    r8,[rip+0x2659d]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40e4e9:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4eb:	lea    r8,[rip+0x26689]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  40e4f2:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4f4:	lea    r8,[rip+0x26687]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  40e4fb:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e4fd:	lea    r8,[rip+0x26685]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  40e504:	jmp    40e480 <__flatcc_gen_sort@@Base+0x2f40>
  40e509:	lea    rcx,[rip+0x35bde]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e510:	lea    r8,[rip+0x26558]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  40e517:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e51c:	lea    rcx,[rip+0x35bcb]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e523:	lea    r8,[rip+0x2654e]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  40e52a:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e52f:	lea    rcx,[rip+0x35bb8]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e536:	lea    r8,[rip+0x2654f]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  40e53d:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e542:	lea    rcx,[rip+0x35ba5]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e549:	lea    r8,[rip+0x26527]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  40e550:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e555:	lea    rcx,[rip+0x35b92]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e55c:	lea    r8,[rip+0x26523]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  40e563:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e568:	lea    rcx,[rip+0x35b7f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e56f:	lea    r8,[rip+0x264e7]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  40e576:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e57b:	lea    rcx,[rip+0x35b6c]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e582:	lea    r8,[rip+0x264dd]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  40e589:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e58e:	lea    rcx,[rip+0x35b59]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e595:	lea    r8,[rip+0x264c0]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  40e59c:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e5a1:	lea    rcx,[rip+0x35b46]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e5a8:	lea    r8,[rip+0x264b6]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  40e5af:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e5b4:	lea    rcx,[rip+0x35b33]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  40e5bb:	lea    r8,[rip+0x264ac]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  40e5c2:	jmp    40e327 <__flatcc_gen_sort@@Base+0x2de7>
  40e5c7:	mov    rax,QWORD PTR [rip+0x41a1a]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40e5ce:	lea    rcx,[rip+0x1ef1b]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40e5d5:	lea    rdx,[rip+0x264e5]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40e5dc:	lea    r9,[rip+0x1eed5]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40e5e3:	mov    esi,0x1
  40e5e8:	mov    r8d,0x60
  40e5ee:	mov    rdi,QWORD PTR [rax]
  40e5f1:	xor    eax,eax
  40e5f3:	call   4051f0 <__fprintf_chk@plt>
  40e5f8:	lea    rcx,[rip+0x31031]        # 43f630 <_IO_stdin_used@@Base+0x13630>
  40e5ff:	lea    rsi,[rip+0x1eeea]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40e606:	lea    rdi,[rip+0x274fc]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40e60d:	mov    edx,0x60
  40e612:	call   4050f0 <__assert_fail@plt>
  40e617:	mov    rax,QWORD PTR [rip+0x419ca]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40e61e:	lea    rcx,[rip+0x1eecb]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40e625:	lea    rdx,[rip+0x26495]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40e62c:	lea    r9,[rip+0x1ee85]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  40e633:	mov    esi,0x1
  40e638:	mov    r8d,0x8d
  40e63e:	mov    rdi,QWORD PTR [rax]
  40e641:	xor    eax,eax
  40e643:	call   4051f0 <__fprintf_chk@plt>
  40e648:	lea    rcx,[rip+0x31031]        # 43f680 <_IO_stdin_used@@Base+0x13680>
  40e64f:	lea    rsi,[rip+0x1ee9a]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  40e656:	lea    rdi,[rip+0x274ac]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40e65d:	mov    edx,0x8d
  40e662:	call   4050f0 <__assert_fail@plt>
  40e667:	call   4050d0 <__stack_chk_fail@plt>
  40e66c:	nop    DWORD PTR [rax+0x0]

000000000040e670 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40e670:	push   rbp
  40e671:	push   rbx
  40e672:	lea    rbp,[rdi+0x66]
  40e676:	mov    rbx,rdi
  40e679:	lea    rdx,[rip+0x275d9]        # 435c59 <_IO_stdin_used@@Base+0x9c59>
  40e680:	mov    esi,0x1
  40e685:	sub    rsp,0x8
  40e689:	mov    rdi,QWORD PTR [rdi+0xd0]
  40e690:	mov    rcx,rbp
  40e693:	xor    eax,eax
  40e695:	call   4051f0 <__fprintf_chk@plt>
  40e69a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6a1:	lea    rdx,[rip+0x275ce]        # 435c76 <_IO_stdin_used@@Base+0x9c76>
  40e6a8:	mov    rcx,rbp
  40e6ab:	mov    esi,0x1
  40e6b0:	xor    eax,eax
  40e6b2:	call   4051f0 <__fprintf_chk@plt>
  40e6b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6be:	lea    rdx,[rip+0x1ff53]        # 42e618 <_IO_stdin_used@@Base+0x2618>
  40e6c5:	mov    esi,0x1
  40e6ca:	xor    eax,eax
  40e6cc:	call   4051f0 <__fprintf_chk@plt>
  40e6d1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6d8:	lea    rdx,[rip+0x28251]        # 436930 <_IO_stdin_used@@Base+0xa930>
  40e6df:	xor    eax,eax
  40e6e1:	mov    esi,0x1
  40e6e6:	call   4051f0 <__fprintf_chk@plt>
  40e6eb:	mov    rax,QWORD PTR [rbx+0xe0]
  40e6f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6f9:	mov    r8d,DWORD PTR [rax+0xac]
  40e700:	test   r8d,r8d
  40e703:	jne    40f228 <__flatcc_fb_gen_common_c_builder_header@@Base+0xbb8>
  40e709:	lea    rdx,[rip+0x27583]        # 435c93 <_IO_stdin_used@@Base+0x9c93>
  40e710:	mov    esi,0x1
  40e715:	xor    eax,eax
  40e717:	call   4051f0 <__fprintf_chk@plt>
  40e71c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e723:	lea    rdx,[rip+0x2823e]        # 436968 <_IO_stdin_used@@Base+0xa968>
  40e72a:	mov    esi,0x1
  40e72f:	xor    eax,eax
  40e731:	call   4051f0 <__fprintf_chk@plt>
  40e736:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e73d:	lea    rdx,[rip+0x27566]        # 435caa <_IO_stdin_used@@Base+0x9caa>
  40e744:	mov    esi,0x1
  40e749:	xor    eax,eax
  40e74b:	call   4051f0 <__fprintf_chk@plt>
  40e750:	lea    rdi,[rip+0x2755b]        # 435cb2 <_IO_stdin_used@@Base+0x9cb2>
  40e757:	mov    ecx,0x10
  40e75c:	mov    rsi,rbx
  40e75f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e761:	jne    40f170 <__flatcc_fb_gen_common_c_builder_header@@Base+0xb00>
  40e767:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e76e:	lea    rdx,[rip+0x2754d]        # 435cc2 <_IO_stdin_used@@Base+0x9cc2>
  40e775:	mov    r8,rbx
  40e778:	mov    rcx,rbx
  40e77b:	mov    esi,0x1
  40e780:	xor    eax,eax
  40e782:	call   4051f0 <__fprintf_chk@plt>
  40e787:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e78e:	lea    rdx,[rip+0x2834b]        # 436ae0 <_IO_stdin_used@@Base+0xaae0>
  40e795:	mov    rcx,rbx
  40e798:	mov    esi,0x1
  40e79d:	xor    eax,eax
  40e79f:	mov    r8,rbx
  40e7a2:	call   4051f0 <__fprintf_chk@plt>
  40e7a7:	lea    rdi,[rip+0x26520]        # 434cce <_IO_stdin_used@@Base+0x8cce>
  40e7ae:	mov    ecx,0xd
  40e7b3:	mov    rsi,rbx
  40e7b6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e7b8:	jne    40f128 <__flatcc_fb_gen_common_c_builder_header@@Base+0xab8>
  40e7be:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e7c5:	lea    rdx,[rip+0x35921]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40e7cc:	mov    esi,0x1
  40e7d1:	xor    eax,eax
  40e7d3:	call   4051f0 <__fprintf_chk@plt>
  40e7d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e7df:	lea    rdx,[rip+0x28382]        # 436b68 <_IO_stdin_used@@Base+0xab68>
  40e7e6:	mov    rcx,rbx
  40e7e9:	mov    esi,0x1
  40e7ee:	xor    eax,eax
  40e7f0:	call   4051f0 <__fprintf_chk@plt>
  40e7f5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e7fc:	lea    rdx,[rip+0x286dd]        # 436ee0 <_IO_stdin_used@@Base+0xaee0>
  40e803:	mov    rcx,rbx
  40e806:	mov    esi,0x1
  40e80b:	xor    eax,eax
  40e80d:	call   4051f0 <__fprintf_chk@plt>
  40e812:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e819:	lea    rdx,[rip+0x28d90]        # 4375b0 <_IO_stdin_used@@Base+0xb5b0>
  40e820:	mov    r9,rbx
  40e823:	mov    r8,rbx
  40e826:	mov    rcx,rbx
  40e829:	mov    esi,0x1
  40e82e:	xor    eax,eax
  40e830:	call   4051f0 <__fprintf_chk@plt>
  40e835:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e83c:	lea    rdx,[rip+0x28dfd]        # 437640 <_IO_stdin_used@@Base+0xb640>
  40e843:	mov    rcx,rbx
  40e846:	mov    esi,0x1
  40e84b:	xor    eax,eax
  40e84d:	call   4051f0 <__fprintf_chk@plt>
  40e852:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e859:	lea    rdx,[rip+0x298a0]        # 438100 <_IO_stdin_used@@Base+0xc100>
  40e860:	mov    rcx,rbx
  40e863:	mov    esi,0x1
  40e868:	xor    eax,eax
  40e86a:	call   4051f0 <__fprintf_chk@plt>
  40e86f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e876:	lea    rdx,[rip+0x29c63]        # 4384e0 <_IO_stdin_used@@Base+0xc4e0>
  40e87d:	mov    rcx,rbx
  40e880:	mov    esi,0x1
  40e885:	xor    eax,eax
  40e887:	call   4051f0 <__fprintf_chk@plt>
  40e88c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e893:	lea    rdx,[rip+0x2a27e]        # 438b18 <_IO_stdin_used@@Base+0xcb18>
  40e89a:	mov    rcx,rbx
  40e89d:	mov    esi,0x1
  40e8a2:	xor    eax,eax
  40e8a4:	call   4051f0 <__fprintf_chk@plt>
  40e8a9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e8b0:	lea    rdx,[rip+0x2a6e1]        # 438f98 <_IO_stdin_used@@Base+0xcf98>
  40e8b7:	mov    r8,rbx
  40e8ba:	mov    rcx,rbx
  40e8bd:	mov    esi,0x1
  40e8c2:	xor    eax,eax
  40e8c4:	call   4051f0 <__fprintf_chk@plt>
  40e8c9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e8d0:	lea    rdx,[rip+0x2ae39]        # 439710 <_IO_stdin_used@@Base+0xd710>
  40e8d7:	mov    r9,rbx
  40e8da:	mov    r8,rbx
  40e8dd:	mov    rcx,rbx
  40e8e0:	mov    esi,0x1
  40e8e5:	xor    eax,eax
  40e8e7:	call   4051f0 <__fprintf_chk@plt>
  40e8ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e8f3:	lea    rdx,[rip+0x2b35e]        # 439c58 <_IO_stdin_used@@Base+0xdc58>
  40e8fa:	mov    rcx,rbx
  40e8fd:	mov    esi,0x1
  40e902:	xor    eax,eax
  40e904:	call   4051f0 <__fprintf_chk@plt>
  40e909:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e910:	lea    rdx,[rip+0x2b7c1]        # 43a0d8 <_IO_stdin_used@@Base+0xe0d8>
  40e917:	mov    rcx,rbx
  40e91a:	mov    esi,0x1
  40e91f:	xor    eax,eax
  40e921:	call   4051f0 <__fprintf_chk@plt>
  40e926:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e92d:	lea    rdx,[rip+0x2b934]        # 43a268 <_IO_stdin_used@@Base+0xe268>
  40e934:	mov    rcx,rbx
  40e937:	mov    esi,0x1
  40e93c:	xor    eax,eax
  40e93e:	call   4051f0 <__fprintf_chk@plt>
  40e943:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e94a:	lea    rdx,[rip+0x2bc77]        # 43a5c8 <_IO_stdin_used@@Base+0xe5c8>
  40e951:	mov    r8,rbx
  40e954:	mov    rcx,rbx
  40e957:	mov    esi,0x1
  40e95c:	xor    eax,eax
  40e95e:	call   4051f0 <__fprintf_chk@plt>
  40e963:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e96a:	lea    rdx,[rip+0x2be5f]        # 43a7d0 <_IO_stdin_used@@Base+0xe7d0>
  40e971:	mov    rcx,rbx
  40e974:	mov    esi,0x1
  40e979:	xor    eax,eax
  40e97b:	call   4051f0 <__fprintf_chk@plt>
  40e980:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e987:	lea    rdx,[rip+0x2c1b2]        # 43ab40 <_IO_stdin_used@@Base+0xeb40>
  40e98e:	mov    r9,rbx
  40e991:	mov    r8,rbx
  40e994:	mov    rcx,rbx
  40e997:	mov    esi,0x1
  40e99c:	xor    eax,eax
  40e99e:	call   4051f0 <__fprintf_chk@plt>
  40e9a3:	sub    rsp,0x8
  40e9a7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e9ae:	lea    rdx,[rip+0x2c68b]        # 43b040 <_IO_stdin_used@@Base+0xf040>
  40e9b5:	push   rbx
  40e9b6:	mov    r9,rbx
  40e9b9:	mov    r8,rbx
  40e9bc:	mov    rcx,rbx
  40e9bf:	mov    esi,0x1
  40e9c4:	xor    eax,eax
  40e9c6:	call   4051f0 <__fprintf_chk@plt>
  40e9cb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e9d2:	lea    rdx,[rip+0x2c777]        # 43b150 <_IO_stdin_used@@Base+0xf150>
  40e9d9:	mov    r8,rbx
  40e9dc:	mov    rcx,rbx
  40e9df:	mov    esi,0x1
  40e9e4:	xor    eax,eax
  40e9e6:	call   4051f0 <__fprintf_chk@plt>
  40e9eb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e9f2:	lea    rdx,[rip+0x2cabf]        # 43b4b8 <_IO_stdin_used@@Base+0xf4b8>
  40e9f9:	mov    r9,rbx
  40e9fc:	mov    r8,rbx
  40e9ff:	mov    rcx,rbx
  40ea02:	mov    esi,0x1
  40ea07:	xor    eax,eax
  40ea09:	mov    QWORD PTR [rsp],rbx
  40ea0d:	call   4051f0 <__fprintf_chk@plt>
  40ea12:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea19:	lea    rdx,[rip+0x2d098]        # 43bab8 <_IO_stdin_used@@Base+0xfab8>
  40ea20:	mov    r8,rbx
  40ea23:	mov    rcx,rbx
  40ea26:	mov    esi,0x1
  40ea2b:	xor    eax,eax
  40ea2d:	call   4051f0 <__fprintf_chk@plt>
  40ea32:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea39:	lea    rdx,[rip+0x2d230]        # 43bc70 <_IO_stdin_used@@Base+0xfc70>
  40ea40:	mov    rcx,rbx
  40ea43:	mov    esi,0x1
  40ea48:	xor    eax,eax
  40ea4a:	call   4051f0 <__fprintf_chk@plt>
  40ea4f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea56:	lea    rdx,[rip+0x2d43b]        # 43be98 <_IO_stdin_used@@Base+0xfe98>
  40ea5d:	mov    rcx,rbx
  40ea60:	mov    esi,0x1
  40ea65:	xor    eax,eax
  40ea67:	call   4051f0 <__fprintf_chk@plt>
  40ea6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea73:	lea    rdx,[rip+0x2d7de]        # 43c258 <_IO_stdin_used@@Base+0x10258>
  40ea7a:	mov    rcx,rbx
  40ea7d:	mov    esi,0x1
  40ea82:	xor    eax,eax
  40ea84:	call   4051f0 <__fprintf_chk@plt>
  40ea89:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea90:	lea    rdx,[rip+0x2da81]        # 43c518 <_IO_stdin_used@@Base+0x10518>
  40ea97:	mov    rcx,rbx
  40ea9a:	mov    esi,0x1
  40ea9f:	xor    eax,eax
  40eaa1:	call   4051f0 <__fprintf_chk@plt>
  40eaa6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eaad:	lea    rdx,[rip+0x2de7c]        # 43c930 <_IO_stdin_used@@Base+0x10930>
  40eab4:	mov    r8,rbx
  40eab7:	mov    rcx,rbx
  40eaba:	mov    esi,0x1
  40eabf:	xor    eax,eax
  40eac1:	call   4051f0 <__fprintf_chk@plt>
  40eac6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eacd:	lea    rdx,[rip+0x2df4c]        # 43ca20 <_IO_stdin_used@@Base+0x10a20>
  40ead4:	mov    rcx,rbx
  40ead7:	mov    esi,0x1
  40eadc:	xor    eax,eax
  40eade:	call   4051f0 <__fprintf_chk@plt>
  40eae3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eaea:	lea    rdx,[rip+0x2e197]        # 43cc88 <_IO_stdin_used@@Base+0x10c88>
  40eaf1:	mov    rcx,rbx
  40eaf4:	mov    esi,0x1
  40eaf9:	xor    eax,eax
  40eafb:	call   4051f0 <__fprintf_chk@plt>
  40eb00:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb07:	lea    rdx,[rip+0x2e4f2]        # 43d000 <_IO_stdin_used@@Base+0x11000>
  40eb0e:	mov    r8,rbx
  40eb11:	mov    rcx,rbx
  40eb14:	mov    esi,0x1
  40eb19:	xor    eax,eax
  40eb1b:	call   4051f0 <__fprintf_chk@plt>
  40eb20:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb27:	lea    rdx,[rip+0x2e922]        # 43d450 <_IO_stdin_used@@Base+0x11450>
  40eb2e:	mov    r8,rbx
  40eb31:	mov    rcx,rbx
  40eb34:	mov    esi,0x1
  40eb39:	xor    eax,eax
  40eb3b:	call   4051f0 <__fprintf_chk@plt>
  40eb40:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb47:	lea    rdx,[rip+0x2eb9a]        # 43d6e8 <_IO_stdin_used@@Base+0x116e8>
  40eb4e:	mov    r8,rbx
  40eb51:	mov    rcx,rbx
  40eb54:	mov    esi,0x1
  40eb59:	xor    eax,eax
  40eb5b:	call   4051f0 <__fprintf_chk@plt>
  40eb60:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb67:	lea    rdx,[rip+0x2ef7a]        # 43dae8 <_IO_stdin_used@@Base+0x11ae8>
  40eb6e:	mov    r8,rbx
  40eb71:	mov    rcx,rbx
  40eb74:	mov    esi,0x1
  40eb79:	xor    eax,eax
  40eb7b:	call   4051f0 <__fprintf_chk@plt>
  40eb80:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb87:	lea    rdx,[rip+0x2f06a]        # 43dbf8 <_IO_stdin_used@@Base+0x11bf8>
  40eb8e:	mov    r9,rbx
  40eb91:	mov    r8,rbx
  40eb94:	mov    rcx,rbx
  40eb97:	mov    esi,0x1
  40eb9c:	xor    eax,eax
  40eb9e:	call   4051f0 <__fprintf_chk@plt>
  40eba3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ebaa:	lea    rdx,[rip+0x2f0d7]        # 43dc88 <_IO_stdin_used@@Base+0x11c88>
  40ebb1:	mov    r8,rbx
  40ebb4:	mov    rcx,rbx
  40ebb7:	mov    esi,0x1
  40ebbc:	xor    eax,eax
  40ebbe:	call   4051f0 <__fprintf_chk@plt>
  40ebc3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ebca:	lea    rdx,[rip+0x2f407]        # 43dfd8 <_IO_stdin_used@@Base+0x11fd8>
  40ebd1:	mov    rcx,rbx
  40ebd4:	mov    esi,0x1
  40ebd9:	xor    eax,eax
  40ebdb:	call   4051f0 <__fprintf_chk@plt>
  40ebe0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ebe7:	lea    rdx,[rip+0x2f672]        # 43e260 <_IO_stdin_used@@Base+0x12260>
  40ebee:	mov    rcx,rbx
  40ebf1:	mov    esi,0x1
  40ebf6:	xor    eax,eax
  40ebf8:	call   4051f0 <__fprintf_chk@plt>
  40ebfd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec04:	lea    rdx,[rip+0x2f8e5]        # 43e4f0 <_IO_stdin_used@@Base+0x124f0>
  40ec0b:	mov    rcx,rbx
  40ec0e:	mov    esi,0x1
  40ec13:	xor    eax,eax
  40ec15:	call   4051f0 <__fprintf_chk@plt>
  40ec1a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec21:	lea    rdx,[rip+0x2fe80]        # 43eaa8 <_IO_stdin_used@@Base+0x12aa8>
  40ec28:	mov    r9,rbx
  40ec2b:	mov    r8,rbx
  40ec2e:	mov    rcx,rbx
  40ec31:	mov    esi,0x1
  40ec36:	xor    eax,eax
  40ec38:	call   4051f0 <__fprintf_chk@plt>
  40ec3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec44:	lea    rdx,[rip+0x2feed]        # 43eb38 <_IO_stdin_used@@Base+0x12b38>
  40ec4b:	mov    rcx,rbx
  40ec4e:	mov    esi,0x1
  40ec53:	xor    eax,eax
  40ec55:	call   4051f0 <__fprintf_chk@plt>
  40ec5a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec61:	lea    rdx,[rip+0x2ff00]        # 43eb68 <_IO_stdin_used@@Base+0x12b68>
  40ec68:	mov    rcx,rbx
  40ec6b:	mov    esi,0x1
  40ec70:	xor    eax,eax
  40ec72:	call   4051f0 <__fprintf_chk@plt>
  40ec77:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec7e:	lea    rdx,[rip+0x2ff0b]        # 43eb90 <_IO_stdin_used@@Base+0x12b90>
  40ec85:	mov    rcx,rbx
  40ec88:	mov    esi,0x1
  40ec8d:	xor    eax,eax
  40ec8f:	call   4051f0 <__fprintf_chk@plt>
  40ec94:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec9b:	lea    rdx,[rip+0x2ff1e]        # 43ebc0 <_IO_stdin_used@@Base+0x12bc0>
  40eca2:	mov    rcx,rbx
  40eca5:	mov    esi,0x1
  40ecaa:	xor    eax,eax
  40ecac:	call   4051f0 <__fprintf_chk@plt>
  40ecb1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ecb8:	lea    rdx,[rip+0x2ff29]        # 43ebe8 <_IO_stdin_used@@Base+0x12be8>
  40ecbf:	mov    r8,rbx
  40ecc2:	mov    rcx,rbx
  40ecc5:	mov    esi,0x1
  40ecca:	xor    eax,eax
  40eccc:	call   4051f0 <__fprintf_chk@plt>
  40ecd1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ecd8:	lea    rdx,[rip+0x2ff39]        # 43ec18 <_IO_stdin_used@@Base+0x12c18>
  40ecdf:	mov    rcx,rbx
  40ece2:	mov    esi,0x1
  40ece7:	xor    eax,eax
  40ece9:	call   4051f0 <__fprintf_chk@plt>
  40ecee:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ecf5:	lea    rdx,[rip+0x2ff44]        # 43ec40 <_IO_stdin_used@@Base+0x12c40>
  40ecfc:	mov    rcx,rbx
  40ecff:	mov    esi,0x1
  40ed04:	xor    eax,eax
  40ed06:	call   4051f0 <__fprintf_chk@plt>
  40ed0b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed12:	lea    rdx,[rip+0x2ff57]        # 43ec70 <_IO_stdin_used@@Base+0x12c70>
  40ed19:	mov    rcx,rbx
  40ed1c:	mov    esi,0x1
  40ed21:	xor    eax,eax
  40ed23:	call   4051f0 <__fprintf_chk@plt>
  40ed28:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed2f:	lea    rdx,[rip+0x2ff62]        # 43ec98 <_IO_stdin_used@@Base+0x12c98>
  40ed36:	mov    rcx,rbx
  40ed39:	mov    esi,0x1
  40ed3e:	xor    eax,eax
  40ed40:	call   4051f0 <__fprintf_chk@plt>
  40ed45:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed4c:	lea    rdx,[rip+0x2ff75]        # 43ecc8 <_IO_stdin_used@@Base+0x12cc8>
  40ed53:	mov    rcx,rbx
  40ed56:	mov    esi,0x1
  40ed5b:	xor    eax,eax
  40ed5d:	call   4051f0 <__fprintf_chk@plt>
  40ed62:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed69:	lea    rdx,[rip+0x2ff80]        # 43ecf0 <_IO_stdin_used@@Base+0x12cf0>
  40ed70:	mov    rcx,rbx
  40ed73:	mov    esi,0x1
  40ed78:	xor    eax,eax
  40ed7a:	call   4051f0 <__fprintf_chk@plt>
  40ed7f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed86:	lea    rdx,[rip+0x2ff93]        # 43ed20 <_IO_stdin_used@@Base+0x12d20>
  40ed8d:	mov    rcx,rbx
  40ed90:	mov    esi,0x1
  40ed95:	xor    eax,eax
  40ed97:	call   4051f0 <__fprintf_chk@plt>
  40ed9c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eda3:	lea    rdx,[rip+0x2ff9e]        # 43ed48 <_IO_stdin_used@@Base+0x12d48>
  40edaa:	mov    rcx,rbx
  40edad:	mov    esi,0x1
  40edb2:	xor    eax,eax
  40edb4:	call   4051f0 <__fprintf_chk@plt>
  40edb9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edc0:	lea    rdx,[rip+0x2ffb1]        # 43ed78 <_IO_stdin_used@@Base+0x12d78>
  40edc7:	mov    rcx,rbx
  40edca:	mov    esi,0x1
  40edcf:	xor    eax,eax
  40edd1:	call   4051f0 <__fprintf_chk@plt>
  40edd6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eddd:	lea    rdx,[rip+0x2ffbc]        # 43eda0 <_IO_stdin_used@@Base+0x12da0>
  40ede4:	mov    rcx,rbx
  40ede7:	mov    esi,0x1
  40edec:	xor    eax,eax
  40edee:	call   4051f0 <__fprintf_chk@plt>
  40edf3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edfa:	lea    rdx,[rip+0x2ffcf]        # 43edd0 <_IO_stdin_used@@Base+0x12dd0>
  40ee01:	mov    rcx,rbx
  40ee04:	mov    esi,0x1
  40ee09:	xor    eax,eax
  40ee0b:	call   4051f0 <__fprintf_chk@plt>
  40ee10:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee17:	lea    rdx,[rip+0x2ffda]        # 43edf8 <_IO_stdin_used@@Base+0x12df8>
  40ee1e:	mov    rcx,rbx
  40ee21:	mov    esi,0x1
  40ee26:	xor    eax,eax
  40ee28:	call   4051f0 <__fprintf_chk@plt>
  40ee2d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee34:	lea    rdx,[rip+0x2ffed]        # 43ee28 <_IO_stdin_used@@Base+0x12e28>
  40ee3b:	mov    rcx,rbx
  40ee3e:	mov    esi,0x1
  40ee43:	xor    eax,eax
  40ee45:	call   4051f0 <__fprintf_chk@plt>
  40ee4a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee51:	lea    rdx,[rip+0x2fff8]        # 43ee50 <_IO_stdin_used@@Base+0x12e50>
  40ee58:	mov    rcx,rbx
  40ee5b:	mov    esi,0x1
  40ee60:	xor    eax,eax
  40ee62:	call   4051f0 <__fprintf_chk@plt>
  40ee67:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee6e:	lea    rdx,[rip+0x3000b]        # 43ee80 <_IO_stdin_used@@Base+0x12e80>
  40ee75:	mov    rcx,rbx
  40ee78:	mov    esi,0x1
  40ee7d:	xor    eax,eax
  40ee7f:	call   4051f0 <__fprintf_chk@plt>
  40ee84:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee8b:	lea    rdx,[rip+0x30016]        # 43eea8 <_IO_stdin_used@@Base+0x12ea8>
  40ee92:	mov    rcx,rbx
  40ee95:	mov    esi,0x1
  40ee9a:	xor    eax,eax
  40ee9c:	call   4051f0 <__fprintf_chk@plt>
  40eea1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eea8:	lea    rdx,[rip+0x30029]        # 43eed8 <_IO_stdin_used@@Base+0x12ed8>
  40eeaf:	mov    rcx,rbx
  40eeb2:	mov    esi,0x1
  40eeb7:	xor    eax,eax
  40eeb9:	call   4051f0 <__fprintf_chk@plt>
  40eebe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eec5:	lea    rdx,[rip+0x35221]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40eecc:	mov    esi,0x1
  40eed1:	xor    eax,eax
  40eed3:	call   4051f0 <__fprintf_chk@plt>
  40eed8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eedf:	lea    rdx,[rip+0x3001a]        # 43ef00 <_IO_stdin_used@@Base+0x12f00>
  40eee6:	mov    r9,rbx
  40eee9:	mov    r8,rbx
  40eeec:	mov    rcx,rbx
  40eeef:	mov    esi,0x1
  40eef4:	xor    eax,eax
  40eef6:	call   4051f0 <__fprintf_chk@plt>
  40eefb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef02:	lea    rdx,[rip+0x3001f]        # 43ef28 <_IO_stdin_used@@Base+0x12f28>
  40ef09:	mov    r9,rbx
  40ef0c:	mov    r8,rbx
  40ef0f:	mov    rcx,rbx
  40ef12:	mov    esi,0x1
  40ef17:	xor    eax,eax
  40ef19:	call   4051f0 <__fprintf_chk@plt>
  40ef1e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef25:	lea    rdx,[rip+0x30024]        # 43ef50 <_IO_stdin_used@@Base+0x12f50>
  40ef2c:	mov    r9,rbx
  40ef2f:	mov    r8,rbx
  40ef32:	mov    rcx,rbx
  40ef35:	mov    esi,0x1
  40ef3a:	xor    eax,eax
  40ef3c:	mov    QWORD PTR [rsp],rbx
  40ef40:	call   4051f0 <__fprintf_chk@plt>
  40ef45:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef4c:	lea    rdx,[rip+0x30025]        # 43ef78 <_IO_stdin_used@@Base+0x12f78>
  40ef53:	mov    r9,rbx
  40ef56:	mov    r8,rbx
  40ef59:	mov    rcx,rbx
  40ef5c:	mov    esi,0x1
  40ef61:	xor    eax,eax
  40ef63:	call   4051f0 <__fprintf_chk@plt>
  40ef68:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef6f:	lea    rdx,[rip+0x30032]        # 43efa8 <_IO_stdin_used@@Base+0x12fa8>
  40ef76:	mov    r9,rbx
  40ef79:	mov    r8,rbx
  40ef7c:	mov    rcx,rbx
  40ef7f:	mov    esi,0x1
  40ef84:	xor    eax,eax
  40ef86:	call   4051f0 <__fprintf_chk@plt>
  40ef8b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef92:	lea    rdx,[rip+0x3003f]        # 43efd8 <_IO_stdin_used@@Base+0x12fd8>
  40ef99:	mov    r9,rbx
  40ef9c:	mov    r8,rbx
  40ef9f:	mov    rcx,rbx
  40efa2:	mov    esi,0x1
  40efa7:	xor    eax,eax
  40efa9:	call   4051f0 <__fprintf_chk@plt>
  40efae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40efb5:	lea    rdx,[rip+0x3004c]        # 43f008 <_IO_stdin_used@@Base+0x13008>
  40efbc:	mov    r9,rbx
  40efbf:	mov    r8,rbx
  40efc2:	mov    rcx,rbx
  40efc5:	mov    esi,0x1
  40efca:	xor    eax,eax
  40efcc:	call   4051f0 <__fprintf_chk@plt>
  40efd1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40efd8:	lea    rdx,[rip+0x30051]        # 43f030 <_IO_stdin_used@@Base+0x13030>
  40efdf:	mov    r9,rbx
  40efe2:	mov    r8,rbx
  40efe5:	mov    rcx,rbx
  40efe8:	mov    esi,0x1
  40efed:	xor    eax,eax
  40efef:	call   4051f0 <__fprintf_chk@plt>
  40eff4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40effb:	lea    rdx,[rip+0x30056]        # 43f058 <_IO_stdin_used@@Base+0x13058>
  40f002:	mov    r9,rbx
  40f005:	mov    r8,rbx
  40f008:	mov    rcx,rbx
  40f00b:	mov    esi,0x1
  40f010:	xor    eax,eax
  40f012:	call   4051f0 <__fprintf_chk@plt>
  40f017:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f01e:	lea    rdx,[rip+0x3005b]        # 43f080 <_IO_stdin_used@@Base+0x13080>
  40f025:	mov    r9,rbx
  40f028:	mov    r8,rbx
  40f02b:	mov    rcx,rbx
  40f02e:	mov    esi,0x1
  40f033:	xor    eax,eax
  40f035:	call   4051f0 <__fprintf_chk@plt>
  40f03a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f041:	lea    rdx,[rip+0x30060]        # 43f0a8 <_IO_stdin_used@@Base+0x130a8>
  40f048:	mov    r9,rbx
  40f04b:	mov    r8,rbx
  40f04e:	mov    rcx,rbx
  40f051:	mov    esi,0x1
  40f056:	xor    eax,eax
  40f058:	call   4051f0 <__fprintf_chk@plt>
  40f05d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f064:	lea    rdx,[rip+0x35082]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40f06b:	mov    esi,0x1
  40f070:	xor    eax,eax
  40f072:	call   4051f0 <__fprintf_chk@plt>
  40f077:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f07e:	lea    rdx,[rip+0x26c58]        # 435cdd <_IO_stdin_used@@Base+0x9cdd>
  40f085:	mov    r8,rbx
  40f088:	mov    rcx,rbx
  40f08b:	mov    esi,0x1
  40f090:	xor    eax,eax
  40f092:	call   4051f0 <__fprintf_chk@plt>
  40f097:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f09e:	lea    rdx,[rip+0x35048]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40f0a5:	mov    esi,0x1
  40f0aa:	xor    eax,eax
  40f0ac:	call   4051f0 <__fprintf_chk@plt>
  40f0b1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f0b8:	lea    rdx,[rip+0x26c34]        # 435cf3 <_IO_stdin_used@@Base+0x9cf3>
  40f0bf:	mov    rcx,rbx
  40f0c2:	mov    esi,0x1
  40f0c7:	xor    eax,eax
  40f0c9:	mov    r8,rbx
  40f0cc:	call   4051f0 <__fprintf_chk@plt>
  40f0d1:	mov    rax,QWORD PTR [rbx+0xe0]
  40f0d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f0df:	pop    rdx
  40f0e0:	pop    rcx
  40f0e1:	mov    esi,DWORD PTR [rax+0xac]
  40f0e7:	test   esi,esi
  40f0e9:	je     40f105 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa95>
  40f0eb:	lea    rdx,[rip+0x254ee]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  40f0f2:	mov    esi,0x1
  40f0f7:	xor    eax,eax
  40f0f9:	call   4051f0 <__fprintf_chk@plt>
  40f0fe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f105:	lea    rdx,[rip+0x2ffc4]        # 43f0d0 <_IO_stdin_used@@Base+0x130d0>
  40f10c:	mov    rcx,rbp
  40f10f:	mov    esi,0x1
  40f114:	xor    eax,eax
  40f116:	call   4051f0 <__fprintf_chk@plt>
  40f11b:	add    rsp,0x8
  40f11f:	xor    eax,eax
  40f121:	pop    rbx
  40f122:	pop    rbp
  40f123:	ret    
  40f124:	nop    DWORD PTR [rax+0x0]
  40f128:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f12f:	lea    rdx,[rip+0x279d2]        # 436b08 <_IO_stdin_used@@Base+0xab08>
  40f136:	mov    rcx,rbx
  40f139:	mov    esi,0x1
  40f13e:	xor    eax,eax
  40f140:	call   4051f0 <__fprintf_chk@plt>
  40f145:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f14c:	lea    rdx,[rip+0x279ed]        # 436b40 <_IO_stdin_used@@Base+0xab40>
  40f153:	mov    rcx,rbx
  40f156:	mov    esi,0x1
  40f15b:	xor    eax,eax
  40f15d:	call   4051f0 <__fprintf_chk@plt>
  40f162:	jmp    40e7be <__flatcc_fb_gen_common_c_builder_header@@Base+0x14e>
  40f167:	nop    WORD PTR [rax+rax*1+0x0]
  40f170:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f177:	lea    rdx,[rip+0x27812]        # 436990 <_IO_stdin_used@@Base+0xa990>
  40f17e:	mov    rcx,rbx
  40f181:	mov    esi,0x1
  40f186:	xor    eax,eax
  40f188:	call   4051f0 <__fprintf_chk@plt>
  40f18d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f194:	lea    rdx,[rip+0x2781d]        # 4369b8 <_IO_stdin_used@@Base+0xa9b8>
  40f19b:	mov    rcx,rbx
  40f19e:	mov    esi,0x1
  40f1a3:	xor    eax,eax
  40f1a5:	call   4051f0 <__fprintf_chk@plt>
  40f1aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1b1:	lea    rdx,[rip+0x27828]        # 4369e0 <_IO_stdin_used@@Base+0xa9e0>
  40f1b8:	mov    rcx,rbx
  40f1bb:	mov    esi,0x1
  40f1c0:	xor    eax,eax
  40f1c2:	call   4051f0 <__fprintf_chk@plt>
  40f1c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1ce:	lea    rdx,[rip+0x2783b]        # 436a10 <_IO_stdin_used@@Base+0xaa10>
  40f1d5:	mov    rcx,rbx
  40f1d8:	mov    esi,0x1
  40f1dd:	xor    eax,eax
  40f1df:	call   4051f0 <__fprintf_chk@plt>
  40f1e4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1eb:	lea    rdx,[rip+0x27856]        # 436a48 <_IO_stdin_used@@Base+0xaa48>
  40f1f2:	mov    rcx,rbx
  40f1f5:	mov    esi,0x1
  40f1fa:	xor    eax,eax
  40f1fc:	call   4051f0 <__fprintf_chk@plt>
  40f201:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f208:	lea    rdx,[rip+0x27879]        # 436a88 <_IO_stdin_used@@Base+0xaa88>
  40f20f:	mov    rcx,rbx
  40f212:	mov    esi,0x1
  40f217:	xor    eax,eax
  40f219:	call   4051f0 <__fprintf_chk@plt>
  40f21e:	jmp    40e767 <__flatcc_fb_gen_common_c_builder_header@@Base+0xf7>
  40f223:	nop    DWORD PTR [rax+rax*1+0x0]
  40f228:	lea    rdx,[rip+0x1f501]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  40f22f:	mov    esi,0x1
  40f234:	xor    eax,eax
  40f236:	call   4051f0 <__fprintf_chk@plt>
  40f23b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f242:	jmp    40e709 <__flatcc_fb_gen_common_c_builder_header@@Base+0x99>
  40f247:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f250 <__flatcc_fb_gen_c_builder@@Base>:
  40f250:	push   r15
  40f252:	push   r14
  40f254:	lea    rdx,[rip+0x2fe9d]        # 43f0f8 <_IO_stdin_used@@Base+0x130f8>
  40f25b:	push   r13
  40f25d:	push   r12
  40f25f:	mov    esi,0x1
  40f264:	push   rbp
  40f265:	push   rbx
  40f266:	mov    rbx,rdi
  40f269:	sub    rsp,0xf8
  40f270:	mov    rax,QWORD PTR fs:0x28
  40f279:	mov    QWORD PTR [rsp+0xe8],rax
  40f281:	xor    eax,eax
  40f283:	mov    rax,QWORD PTR [rdi+0xd8]
  40f28a:	mov    rdi,QWORD PTR [rdi+0xd0]
  40f291:	mov    rcx,QWORD PTR [rax+0x118]
  40f298:	xor    eax,eax
  40f29a:	mov    r8,rcx
  40f29d:	call   4051f0 <__fprintf_chk@plt>
  40f2a2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2a9:	lea    rdx,[rip+0x1f368]        # 42e618 <_IO_stdin_used@@Base+0x2618>
  40f2b0:	mov    esi,0x1
  40f2b5:	xor    eax,eax
  40f2b7:	call   4051f0 <__fprintf_chk@plt>
  40f2bc:	mov    rax,QWORD PTR [rbx+0xd8]
  40f2c3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2ca:	lea    rdx,[rip+0x26a38]        # 435d09 <_IO_stdin_used@@Base+0x9d09>
  40f2d1:	mov    esi,0x1
  40f2d6:	mov    rcx,QWORD PTR [rax+0x118]
  40f2dd:	xor    eax,eax
  40f2df:	call   4051f0 <__fprintf_chk@plt>
  40f2e4:	mov    rax,QWORD PTR [rbx+0xd8]
  40f2eb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2f2:	lea    rdx,[rip+0x26a25]        # 435d1e <_IO_stdin_used@@Base+0x9d1e>
  40f2f9:	mov    esi,0x1
  40f2fe:	mov    rcx,QWORD PTR [rax+0x110]
  40f305:	xor    eax,eax
  40f307:	call   4051f0 <__fprintf_chk@plt>
  40f30c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f313:	lea    rdx,[rip+0x26990]        # 435caa <_IO_stdin_used@@Base+0x9caa>
  40f31a:	mov    esi,0x1
  40f31f:	xor    eax,eax
  40f321:	call   4051f0 <__fprintf_chk@plt>
  40f326:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f32d:	lea    rcx,[rbx+0x66]
  40f331:	lea    rdx,[rip+0x26921]        # 435c59 <_IO_stdin_used@@Base+0x9c59>
  40f338:	mov    esi,0x1
  40f33d:	xor    eax,eax
  40f33f:	call   4051f0 <__fprintf_chk@plt>
  40f344:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f34b:	lea    rdx,[rip+0x2fdd6]        # 43f128 <_IO_stdin_used@@Base+0x13128>
  40f352:	mov    rcx,rbx
  40f355:	mov    esi,0x1
  40f35a:	xor    eax,eax
  40f35c:	call   4051f0 <__fprintf_chk@plt>
  40f361:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f368:	lea    rdx,[rip+0x2693b]        # 435caa <_IO_stdin_used@@Base+0x9caa>
  40f36f:	mov    esi,0x1
  40f374:	xor    eax,eax
  40f376:	call   4051f0 <__fprintf_chk@plt>
  40f37b:	lea    rdx,[rip+0x269b4]        # 435d36 <_IO_stdin_used@@Base+0x9d36>
  40f382:	lea    rsi,[rip+0x1de9d]        # 42d226 <_IO_stdin_used@@Base+0x1226>
  40f389:	mov    rdi,rbx
  40f38c:	call   4065d0 <__flatcc_fb_gen_c_includes@@Base>
  40f391:	mov    rax,QWORD PTR [rbx+0xe0]
  40f398:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f39f:	mov    r10d,DWORD PTR [rax+0xac]
  40f3a6:	test   r10d,r10d
  40f3a9:	jne    40f990 <__flatcc_fb_gen_c_builder@@Base+0x740>
  40f3af:	mov    rax,QWORD PTR [rbx+0xd8]
  40f3b6:	cmp    WORD PTR [rax+0x20],0x2
  40f3bb:	je     40f9bc <__flatcc_fb_gen_c_builder@@Base+0x76c>
  40f3c1:	lea    rdx,[rip+0x254d0]        # 434898 <_IO_stdin_used@@Base+0x8898>
  40f3c8:	xor    eax,eax
  40f3ca:	mov    r8,rbx
  40f3cd:	mov    rcx,rbx
  40f3d0:	mov    esi,0x1
  40f3d5:	call   4051f0 <__fprintf_chk@plt>
  40f3da:	mov    rax,QWORD PTR [rbx+0xd8]
  40f3e1:	cmp    WORD PTR [rax+0x38],0x2
  40f3e6:	je     40f9f6 <__flatcc_fb_gen_c_builder@@Base+0x7a6>
  40f3ec:	mov    rax,QWORD PTR [rbx+0xe0]
  40f3f3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3fa:	lea    rdx,[rip+0x254ff]        # 434900 <_IO_stdin_used@@Base+0x8900>
  40f401:	mov    r8,rbx
  40f404:	mov    rcx,rbx
  40f407:	mov    esi,0x1
  40f40c:	mov    r9,QWORD PTR [rax+0x78]
  40f410:	xor    eax,eax
  40f412:	call   4051f0 <__fprintf_chk@plt>
  40f417:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f41e:	lea    rdx,[rip+0x34cc8]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40f425:	xor    eax,eax
  40f427:	mov    esi,0x1
  40f42c:	mov    rbp,rsp
  40f42f:	call   4051f0 <__fprintf_chk@plt>
  40f434:	xor    eax,eax
  40f436:	mov    ecx,0x1d
  40f43b:	mov    rdi,rsp
  40f43e:	rep stos QWORD PTR es:[rdi],rax
  40f441:	mov    rax,QWORD PTR [rbx+0xd8]
  40f448:	mov    r12,QWORD PTR [rax+0x40]
  40f44c:	test   r12,r12
  40f44f:	je     40f4fe <__flatcc_fb_gen_c_builder@@Base+0x2ae>
  40f455:	xor    eax,eax
  40f457:	lea    r13,[rip+0x2fcea]        # 43f148 <_IO_stdin_used@@Base+0x13148>
  40f45e:	jmp    40f469 <__flatcc_fb_gen_c_builder@@Base+0x219>
  40f460:	mov    r12,QWORD PTR [r12]
  40f464:	test   r12,r12
  40f467:	je     40f4d9 <__flatcc_fb_gen_c_builder@@Base+0x289>
  40f469:	cmp    WORD PTR [r12+0x10],0x3
  40f470:	jne    40f460 <__flatcc_fb_gen_c_builder@@Base+0x210>
  40f472:	mov    rdi,QWORD PTR [r12+0x18]
  40f477:	mov    rsi,r12
  40f47a:	mov    rdx,rbp
  40f47d:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40f482:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f489:	mov    r9,rbp
  40f48c:	mov    r8,rbp
  40f48f:	mov    rcx,rbp
  40f492:	mov    rdx,r13
  40f495:	mov    esi,0x1
  40f49a:	xor    eax,eax
  40f49c:	call   4051f0 <__fprintf_chk@plt>
  40f4a1:	sub    rsp,0x8
  40f4a5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4ac:	lea    rdx,[rip+0x2fcdd]        # 43f190 <_IO_stdin_used@@Base+0x13190>
  40f4b3:	push   rbp
  40f4b4:	mov    rcx,rbx
  40f4b7:	xor    eax,eax
  40f4b9:	mov    r9,rbp
  40f4bc:	mov    r8,rbx
  40f4bf:	mov    esi,0x1
  40f4c4:	call   4051f0 <__fprintf_chk@plt>
  40f4c9:	mov    r12,QWORD PTR [r12]
  40f4cd:	mov    eax,0x1
  40f4d2:	pop    rdx
  40f4d3:	pop    rcx
  40f4d4:	test   r12,r12
  40f4d7:	jne    40f469 <__flatcc_fb_gen_c_builder@@Base+0x219>
  40f4d9:	test   eax,eax
  40f4db:	je     40f4f7 <__flatcc_fb_gen_c_builder@@Base+0x2a7>
  40f4dd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4e4:	lea    rdx,[rip+0x34c02]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40f4eb:	mov    esi,0x1
  40f4f0:	xor    eax,eax
  40f4f2:	call   4051f0 <__fprintf_chk@plt>
  40f4f7:	mov    rax,QWORD PTR [rbx+0xd8]
  40f4fe:	mov    r13,QWORD PTR [rax+0x48]
  40f502:	xor    r15d,r15d
  40f505:	test   r13,r13
  40f508:	je     40f903 <__flatcc_fb_gen_c_builder@@Base+0x6b3>
  40f50e:	xchg   ax,ax
  40f510:	mov    ecx,0x1d
  40f515:	mov    rdi,rbp
  40f518:	mov    rax,r15
  40f51b:	rep stos QWORD PTR es:[rdi],rax
  40f51e:	cmp    WORD PTR [r13+0x10],0x1
  40f524:	jne    40fa28 <__flatcc_fb_gen_c_builder@@Base+0x7d8>
  40f52a:	mov    rdi,QWORD PTR [r13+0x18]
  40f52e:	mov    rsi,r13
  40f531:	mov    rdx,rbp
  40f534:	lea    r14,[r13+0x28]
  40f538:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40f53d:	mov    rdi,QWORD PTR [r13+0x28]
  40f541:	call   40b6a0 <__flatcc_gen_sort@@Base+0x160>
  40f546:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f54d:	lea    rdx,[rip+0x26615]        # 435b69 <_IO_stdin_used@@Base+0x9b69>
  40f554:	mov    r12d,eax
  40f557:	mov    rcx,rbp
  40f55a:	mov    esi,0x1
  40f55f:	xor    eax,eax
  40f561:	call   4051f0 <__fprintf_chk@plt>
  40f566:	mov    r8d,0x1
  40f56c:	xor    edx,edx
  40f56e:	mov    ecx,r12d
  40f571:	mov    rsi,r14
  40f574:	mov    rdi,rbx
  40f577:	call   40c160 <__flatcc_gen_sort@@Base+0xc20>
  40f57c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f583:	lea    rdx,[rip+0x265f9]        # 435b83 <_IO_stdin_used@@Base+0x9b83>
  40f58a:	mov    rcx,rbp
  40f58d:	mov    esi,0x1
  40f592:	xor    eax,eax
  40f594:	call   4051f0 <__fprintf_chk@plt>
  40f599:	mov    r8d,0x1
  40f59f:	mov    ecx,r12d
  40f5a2:	xor    edx,edx
  40f5a4:	mov    rsi,r13
  40f5a7:	mov    rdi,rbx
  40f5aa:	call   40b9c0 <__flatcc_gen_sort@@Base+0x480>
  40f5af:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5b6:	lea    rdx,[rip+0x34b30]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40f5bd:	mov    esi,0x1
  40f5c2:	xor    eax,eax
  40f5c4:	call   4051f0 <__fprintf_chk@plt>
  40f5c9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5d0:	lea    rdx,[rip+0x2fbe1]        # 43f1b8 <_IO_stdin_used@@Base+0x131b8>
  40f5d7:	mov    r9,rbp
  40f5da:	mov    r8,rbp
  40f5dd:	mov    rcx,rbp
  40f5e0:	mov    esi,0x1
  40f5e5:	xor    eax,eax
  40f5e7:	call   4051f0 <__fprintf_chk@plt>
  40f5ec:	xor    r8d,r8d
  40f5ef:	mov    ecx,r12d
  40f5f2:	xor    edx,edx
  40f5f4:	mov    rsi,r14
  40f5f7:	mov    rdi,rbx
  40f5fa:	call   40c160 <__flatcc_gen_sort@@Base+0xc20>
  40f5ff:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f606:	lea    rdx,[rip+0x26734]        # 435d41 <_IO_stdin_used@@Base+0x9d41>
  40f60d:	mov    esi,0x1
  40f612:	xor    eax,eax
  40f614:	call   4051f0 <__fprintf_chk@plt>
  40f619:	xor    r8d,r8d
  40f61c:	xor    ecx,ecx
  40f61e:	mov    edx,r12d
  40f621:	mov    rsi,r14
  40f624:	mov    rdi,rbx
  40f627:	call   40bab0 <__flatcc_gen_sort@@Base+0x570>
  40f62c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f633:	lea    rdx,[rip+0x2670c]        # 435d46 <_IO_stdin_used@@Base+0x9d46>
  40f63a:	mov    esi,0x1
  40f63f:	xor    eax,eax
  40f641:	call   4051f0 <__fprintf_chk@plt>
  40f646:	sub    rsp,0x8
  40f64a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f651:	lea    rdx,[rip+0x2fb88]        # 43f1e0 <_IO_stdin_used@@Base+0x131e0>
  40f658:	push   rbp
  40f659:	mov    r9,rbp
  40f65c:	mov    r8,rbp
  40f65f:	mov    rcx,rbp
  40f662:	mov    esi,0x1
  40f667:	xor    eax,eax
  40f669:	call   4051f0 <__fprintf_chk@plt>
  40f66e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f675:	lea    rdx,[rip+0x266c7]        # 435d43 <_IO_stdin_used@@Base+0x9d43>
  40f67c:	mov    esi,0x1
  40f681:	xor    eax,eax
  40f683:	call   4051f0 <__fprintf_chk@plt>
  40f688:	mov    r8d,0x1
  40f68e:	xor    ecx,ecx
  40f690:	mov    edx,r12d
  40f693:	mov    rsi,r14
  40f696:	mov    rdi,rbx
  40f699:	call   40bab0 <__flatcc_gen_sort@@Base+0x570>
  40f69e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6a5:	lea    rdx,[rip+0x2669a]        # 435d46 <_IO_stdin_used@@Base+0x9d46>
  40f6ac:	mov    esi,0x1
  40f6b1:	xor    eax,eax
  40f6b3:	call   4051f0 <__fprintf_chk@plt>
  40f6b8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6bf:	lea    rdx,[rip+0x2fb52]        # 43f218 <_IO_stdin_used@@Base+0x13218>
  40f6c6:	mov    r9,rbp
  40f6c9:	mov    r8,rbp
  40f6cc:	mov    rcx,rbp
  40f6cf:	mov    esi,0x1
  40f6d4:	xor    eax,eax
  40f6d6:	call   4051f0 <__fprintf_chk@plt>
  40f6db:	xor    r8d,r8d
  40f6de:	mov    ecx,r12d
  40f6e1:	xor    edx,edx
  40f6e3:	mov    rsi,r14
  40f6e6:	mov    rdi,rbx
  40f6e9:	call   40c160 <__flatcc_gen_sort@@Base+0xc20>
  40f6ee:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6f5:	lea    rdx,[rip+0x26645]        # 435d41 <_IO_stdin_used@@Base+0x9d41>
  40f6fc:	mov    esi,0x1
  40f701:	xor    eax,eax
  40f703:	call   4051f0 <__fprintf_chk@plt>
  40f708:	xor    r8d,r8d
  40f70b:	mov    ecx,0x2
  40f710:	mov    edx,r12d
  40f713:	mov    rsi,r14
  40f716:	mov    rdi,rbx
  40f719:	call   40bab0 <__flatcc_gen_sort@@Base+0x570>
  40f71e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f725:	lea    rdx,[rip+0x2661a]        # 435d46 <_IO_stdin_used@@Base+0x9d46>
  40f72c:	mov    esi,0x1
  40f731:	xor    eax,eax
  40f733:	call   4051f0 <__fprintf_chk@plt>
  40f738:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f73f:	lea    rdx,[rip+0x2fb02]        # 43f248 <_IO_stdin_used@@Base+0x13248>
  40f746:	mov    r9,rbp
  40f749:	mov    r8,rbp
  40f74c:	mov    rcx,rbp
  40f74f:	mov    esi,0x1
  40f754:	xor    eax,eax
  40f756:	mov    QWORD PTR [rsp],rbp
  40f75a:	call   4051f0 <__fprintf_chk@plt>
  40f75f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f766:	lea    rdx,[rip+0x265d6]        # 435d43 <_IO_stdin_used@@Base+0x9d43>
  40f76d:	mov    esi,0x1
  40f772:	xor    eax,eax
  40f774:	call   4051f0 <__fprintf_chk@plt>
  40f779:	mov    r8d,0x1
  40f77f:	mov    ecx,0x2
  40f784:	mov    edx,r12d
  40f787:	mov    rsi,r14
  40f78a:	mov    rdi,rbx
  40f78d:	call   40bab0 <__flatcc_gen_sort@@Base+0x570>
  40f792:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f799:	lea    rdx,[rip+0x265a6]        # 435d46 <_IO_stdin_used@@Base+0x9d46>
  40f7a0:	mov    esi,0x1
  40f7a5:	xor    eax,eax
  40f7a7:	call   4051f0 <__fprintf_chk@plt>
  40f7ac:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7b3:	lea    rdx,[rip+0x2face]        # 43f288 <_IO_stdin_used@@Base+0x13288>
  40f7ba:	mov    r9,rbp
  40f7bd:	mov    r8,rbp
  40f7c0:	mov    rcx,rbp
  40f7c3:	mov    esi,0x1
  40f7c8:	xor    eax,eax
  40f7ca:	call   4051f0 <__fprintf_chk@plt>
  40f7cf:	xor    r8d,r8d
  40f7d2:	mov    ecx,r12d
  40f7d5:	xor    edx,edx
  40f7d7:	mov    rsi,r14
  40f7da:	mov    rdi,rbx
  40f7dd:	call   40c160 <__flatcc_gen_sort@@Base+0xc20>
  40f7e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7e9:	lea    rdx,[rip+0x26551]        # 435d41 <_IO_stdin_used@@Base+0x9d41>
  40f7f0:	mov    esi,0x1
  40f7f5:	xor    eax,eax
  40f7f7:	call   4051f0 <__fprintf_chk@plt>
  40f7fc:	xor    r8d,r8d
  40f7ff:	mov    ecx,0x1
  40f804:	mov    edx,r12d
  40f807:	mov    rsi,r14
  40f80a:	mov    rdi,rbx
  40f80d:	call   40bab0 <__flatcc_gen_sort@@Base+0x570>
  40f812:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f819:	lea    rdx,[rip+0x26526]        # 435d46 <_IO_stdin_used@@Base+0x9d46>
  40f820:	mov    esi,0x1
  40f825:	xor    eax,eax
  40f827:	call   4051f0 <__fprintf_chk@plt>
  40f82c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f833:	lea    rdx,[rip+0x2fa7e]        # 43f2b8 <_IO_stdin_used@@Base+0x132b8>
  40f83a:	mov    r9,rbp
  40f83d:	mov    r8,rbp
  40f840:	mov    rcx,rbp
  40f843:	mov    esi,0x1
  40f848:	xor    eax,eax
  40f84a:	mov    QWORD PTR [rsp],rbp
  40f84e:	call   4051f0 <__fprintf_chk@plt>
  40f853:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f85a:	lea    rdx,[rip+0x264e2]        # 435d43 <_IO_stdin_used@@Base+0x9d43>
  40f861:	xor    eax,eax
  40f863:	mov    esi,0x1
  40f868:	call   4051f0 <__fprintf_chk@plt>
  40f86d:	mov    r8d,0x1
  40f873:	mov    ecx,0x1
  40f878:	mov    edx,r12d
  40f87b:	mov    rsi,r14
  40f87e:	mov    rdi,rbx
  40f881:	call   40bab0 <__flatcc_gen_sort@@Base+0x570>
  40f886:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f88d:	lea    rdx,[rip+0x264b2]        # 435d46 <_IO_stdin_used@@Base+0x9d46>
  40f894:	mov    esi,0x1
  40f899:	xor    eax,eax
  40f89b:	call   4051f0 <__fprintf_chk@plt>
  40f8a0:	movzx  eax,WORD PTR [r13+0xb0]
  40f8a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8af:	lea    rdx,[rip+0x2fa42]        # 43f2f8 <_IO_stdin_used@@Base+0x132f8>
  40f8b6:	push   rbp
  40f8b7:	push   rbp
  40f8b8:	mov    r9,rbp
  40f8bb:	mov    r8,rbx
  40f8be:	mov    rcx,rbx
  40f8c1:	mov    esi,0x1
  40f8c6:	push   rax
  40f8c7:	push   QWORD PTR [r13+0xb8]
  40f8ce:	xor    eax,eax
  40f8d0:	call   4051f0 <__fprintf_chk@plt>
  40f8d5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8dc:	lea    rdx,[rip+0x3480a]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  40f8e3:	add    rsp,0x30
  40f8e7:	xor    eax,eax
  40f8e9:	mov    esi,0x1
  40f8ee:	call   4051f0 <__fprintf_chk@plt>
  40f8f3:	mov    r13,QWORD PTR [r13+0xc0]
  40f8fa:	test   r13,r13
  40f8fd:	jne    40f510 <__flatcc_fb_gen_c_builder@@Base+0x2c0>
  40f903:	mov    rdi,rbx
  40f906:	call   40d6f0 <__flatcc_gen_sort@@Base+0x21b0>
  40f90b:	mov    rax,QWORD PTR [rbx+0xe0]
  40f912:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f919:	mov    eax,DWORD PTR [rax+0xac]
  40f91f:	test   eax,eax
  40f921:	je     40f93d <__flatcc_fb_gen_c_builder@@Base+0x6ed>
  40f923:	lea    rdx,[rip+0x24cb6]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  40f92a:	mov    esi,0x1
  40f92f:	xor    eax,eax
  40f931:	call   4051f0 <__fprintf_chk@plt>
  40f936:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f93d:	mov    rax,QWORD PTR [rbx+0xd8]
  40f944:	lea    rdx,[rip+0x26408]        # 435d53 <_IO_stdin_used@@Base+0x9d53>
  40f94b:	mov    esi,0x1
  40f950:	mov    rcx,QWORD PTR [rax+0x118]
  40f957:	xor    eax,eax
  40f959:	call   4051f0 <__fprintf_chk@plt>
  40f95e:	xor    eax,eax
  40f960:	mov    rcx,QWORD PTR [rsp+0xe8]
  40f968:	xor    rcx,QWORD PTR fs:0x28
  40f971:	jne    40fa47 <__flatcc_fb_gen_c_builder@@Base+0x7f7>
  40f977:	add    rsp,0xf8
  40f97e:	pop    rbx
  40f97f:	pop    rbp
  40f980:	pop    r12
  40f982:	pop    r13
  40f984:	pop    r14
  40f986:	pop    r15
  40f988:	ret    
  40f989:	nop    DWORD PTR [rax+0x0]
  40f990:	lea    rdx,[rip+0x1ed99]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  40f997:	xor    eax,eax
  40f999:	mov    esi,0x1
  40f99e:	call   4051f0 <__fprintf_chk@plt>
  40f9a3:	mov    rax,QWORD PTR [rbx+0xd8]
  40f9aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9b1:	cmp    WORD PTR [rax+0x20],0x2
  40f9b6:	jne    40f3c1 <__flatcc_fb_gen_c_builder@@Base+0x171>
  40f9bc:	sub    rsp,0x8
  40f9c0:	push   QWORD PTR [rax+0x10]
  40f9c3:	mov    r9d,DWORD PTR [rax+0x18]
  40f9c7:	lea    rdx,[rip+0x24e92]        # 434860 <_IO_stdin_used@@Base+0x8860>
  40f9ce:	mov    r8,rbx
  40f9d1:	xor    eax,eax
  40f9d3:	mov    rcx,rbx
  40f9d6:	mov    esi,0x1
  40f9db:	call   4051f0 <__fprintf_chk@plt>
  40f9e0:	mov    rax,QWORD PTR [rbx+0xd8]
  40f9e7:	pop    r8
  40f9e9:	pop    r9
  40f9eb:	cmp    WORD PTR [rax+0x38],0x2
  40f9f0:	jne    40f3ec <__flatcc_fb_gen_c_builder@@Base+0x19c>
  40f9f6:	sub    rsp,0x8
  40f9fa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa01:	push   QWORD PTR [rax+0x28]
  40fa04:	mov    r9d,DWORD PTR [rax+0x30]
  40fa08:	lea    rdx,[rip+0x24ec1]        # 4348d0 <_IO_stdin_used@@Base+0x88d0>
  40fa0f:	mov    esi,0x1
  40fa14:	mov    r8,rbx
  40fa17:	mov    rcx,rbx
  40fa1a:	xor    eax,eax
  40fa1c:	call   4051f0 <__fprintf_chk@plt>
  40fa21:	pop    rsi
  40fa22:	pop    rdi
  40fa23:	jmp    40f417 <__flatcc_fb_gen_c_builder@@Base+0x1c7>
  40fa28:	lea    rcx,[rip+0x2fc91]        # 43f6c0 <_IO_stdin_used@@Base+0x136c0>
  40fa2f:	lea    rsi,[rip+0x263f2]        # 435e28 <_IO_stdin_used@@Base+0x9e28>
  40fa36:	lea    rdi,[rip+0x1dd33]        # 42d770 <_IO_stdin_used@@Base+0x1770>
  40fa3d:	mov    edx,0x3f2
  40fa42:	call   4050f0 <__assert_fail@plt>
  40fa47:	call   4050d0 <__stack_chk_fail@plt>
  40fa4c:	nop    DWORD PTR [rax+0x0]
  40fa50:	push   r15
  40fa52:	push   r14
  40fa54:	mov    ecx,0x1d
  40fa59:	push   r13
  40fa5b:	push   r12
  40fa5d:	push   rbp
  40fa5e:	push   rbx
  40fa5f:	mov    rbx,rdi
  40fa62:	mov    rbp,rsi
  40fa65:	sub    rsp,0x1f8
  40fa6c:	lea    r12,[rsp+0x10]
  40fa71:	lea    r14,[rsp+0x100]
  40fa79:	mov    rax,QWORD PTR fs:0x28
  40fa82:	mov    QWORD PTR [rsp+0x1e8],rax
  40fa8a:	xor    eax,eax
  40fa8c:	mov    rdi,r12
  40fa8f:	mov    rdx,r12
  40fa92:	rep stos QWORD PTR es:[rdi],rax
  40fa95:	mov    ecx,0x1d
  40fa9a:	mov    rdi,r14
  40fa9d:	rep stos QWORD PTR es:[rdi],rax
  40faa0:	mov    rdi,QWORD PTR [rsi+0x18]
  40faa4:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40faa9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fab0:	lea    rdx,[rip+0x2fc21]        # 43f6d8 <_IO_stdin_used@@Base+0x136d8>
  40fab7:	xor    eax,eax
  40fab9:	mov    rcx,r12
  40fabc:	mov    esi,0x1
  40fac1:	call   4051f0 <__fprintf_chk@plt>
  40fac6:	mov    r15,QWORD PTR [rbp+0x28]
  40faca:	test   r15,r15
  40facd:	je     40fbec <__flatcc_fb_gen_c_builder@@Base+0x99c>
  40fad3:	lea    r13,[rip+0x309f4]        # 4404ce <_IO_stdin_used@@Base+0x144ce>
  40fada:	lea    rbp,[rip+0x3081f]        # 440300 <_IO_stdin_used@@Base+0x14300>
  40fae1:	mov    eax,0x1
  40fae6:	test   BYTE PTR [r15+0x70],0x4
  40faeb:	jne    40fbd8 <__flatcc_fb_gen_c_builder@@Base+0x988>
  40faf1:	test   eax,eax
  40faf3:	je     40fe90 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  40faf9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb00:	lea    rdx,[rip+0x30778]        # 44027f <_IO_stdin_used@@Base+0x1427f>
  40fb07:	mov    esi,0x1
  40fb0c:	xor    eax,eax
  40fb0e:	call   4051f0 <__fprintf_chk@plt>
  40fb13:	movzx  eax,WORD PTR [r15+0x28]
  40fb18:	movzx  r8d,BYTE PTR [r15+0x71]
  40fb1d:	sub    eax,0x7
  40fb20:	and    r8d,0x1
  40fb24:	cmp    ax,0x8
  40fb28:	ja     40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fb2a:	movzx  eax,ax
  40fb2d:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  40fb32:	add    rax,rbp
  40fb35:	jmp    rax
  40fb37:	nop    WORD PTR [rax+rax*1+0x0]
  40fb40:	movzx  r9d,WORD PTR [r15+0x72]
  40fb45:	mov    rcx,QWORD PTR [r15+0x88]
  40fb4c:	lea    rdx,[rip+0x2fbed]        # 43f740 <_IO_stdin_used@@Base+0x13740>
  40fb53:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb5a:	mov    r8,QWORD PTR [r15+0x80]
  40fb61:	mov    esi,0x1
  40fb66:	xor    eax,eax
  40fb68:	call   4051f0 <__fprintf_chk@plt>
  40fb6d:	nop    DWORD PTR [rax]
  40fb70:	mov    rax,QWORD PTR [r15+0x8]
  40fb74:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb7b:	mov    rdx,r13
  40fb7e:	mov    esi,0x1
  40fb83:	mov    rcx,QWORD PTR [rax+0x8]
  40fb87:	mov    r8,QWORD PTR [rax]
  40fb8a:	xor    eax,eax
  40fb8c:	call   4051f0 <__fprintf_chk@plt>
  40fb91:	mov    r15,QWORD PTR [r15]
  40fb94:	test   r15,r15
  40fb97:	je     410030 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  40fb9d:	test   BYTE PTR [r15+0x70],0x4
  40fba2:	je     40fe90 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  40fba8:	mov    r15,QWORD PTR [r15]
  40fbab:	test   r15,r15
  40fbae:	je     410030 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  40fbb4:	test   BYTE PTR [r15+0x70],0x4
  40fbb9:	je     40fe90 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  40fbbf:	mov    r15,QWORD PTR [r15]
  40fbc2:	test   r15,r15
  40fbc5:	je     410030 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  40fbcb:	test   BYTE PTR [r15+0x70],0x4
  40fbd0:	je     40fe90 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  40fbd6:	xor    eax,eax
  40fbd8:	mov    r15,QWORD PTR [r15]
  40fbdb:	test   r15,r15
  40fbde:	jne    40fae6 <__flatcc_fb_gen_c_builder@@Base+0x896>
  40fbe4:	test   eax,eax
  40fbe6:	je     410030 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  40fbec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbf3:	lea    rdx,[rip+0x306b2]        # 4402ac <_IO_stdin_used@@Base+0x142ac>
  40fbfa:	mov    esi,0x1
  40fbff:	xor    eax,eax
  40fc01:	call   4051f0 <__fprintf_chk@plt>
  40fc06:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc0d:	lea    rdx,[rip+0x344d7]        # 4440eb <_IO_stdin_used@@Base+0x180eb>
  40fc14:	mov    esi,0x1
  40fc19:	xor    eax,eax
  40fc1b:	call   4051f0 <__fprintf_chk@plt>
  40fc20:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc27:	lea    rdx,[rip+0x2fe5a]        # 43fa88 <_IO_stdin_used@@Base+0x13a88>
  40fc2e:	mov    r9,r12
  40fc31:	mov    r8,r12
  40fc34:	mov    rcx,r12
  40fc37:	mov    esi,0x1
  40fc3c:	xor    eax,eax
  40fc3e:	call   4051f0 <__fprintf_chk@plt>
  40fc43:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc4a:	lea    rdx,[rip+0x2fed7]        # 43fb28 <_IO_stdin_used@@Base+0x13b28>
  40fc51:	mov    r9,r12
  40fc54:	mov    r8,r12
  40fc57:	mov    rcx,r12
  40fc5a:	mov    esi,0x1
  40fc5f:	xor    eax,eax
  40fc61:	call   4051f0 <__fprintf_chk@plt>
  40fc66:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc6d:	lea    rdx,[rip+0x2ff64]        # 43fbd8 <_IO_stdin_used@@Base+0x13bd8>
  40fc74:	mov    r8,r12
  40fc77:	mov    rcx,r12
  40fc7a:	mov    esi,0x1
  40fc7f:	xor    eax,eax
  40fc81:	call   4051f0 <__fprintf_chk@plt>
  40fc86:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc8d:	lea    rdx,[rip+0x2fffc]        # 43fc90 <_IO_stdin_used@@Base+0x13c90>
  40fc94:	mov    r8,rbx
  40fc97:	xor    eax,eax
  40fc99:	mov    r9,r12
  40fc9c:	mov    rcx,r12
  40fc9f:	mov    esi,0x1
  40fca4:	call   4051f0 <__fprintf_chk@plt>
  40fca9:	xor    eax,eax
  40fcab:	mov    rbx,QWORD PTR [rsp+0x1e8]
  40fcb3:	xor    rbx,QWORD PTR fs:0x28
  40fcbc:	jne    41004f <__flatcc_fb_gen_c_builder@@Base+0xdff>
  40fcc2:	add    rsp,0x1f8
  40fcc9:	pop    rbx
  40fcca:	pop    rbp
  40fccb:	pop    r12
  40fccd:	pop    r13
  40fccf:	pop    r14
  40fcd1:	pop    r15
  40fcd3:	ret    
  40fcd4:	nop    DWORD PTR [rax+0x0]
  40fcd8:	mov    rsi,QWORD PTR [r15+0x90]
  40fcdf:	test   rsi,rsi
  40fce2:	je     40feb0 <__flatcc_fb_gen_c_builder@@Base+0xc60>
  40fce8:	mov    rdi,QWORD PTR [rsi+0x18]
  40fcec:	mov    rdx,r14
  40fcef:	mov    DWORD PTR [rsp+0xc],r8d
  40fcf4:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40fcf9:	mov    rax,QWORD PTR [r15+0x90]
  40fd00:	mov    r8d,DWORD PTR [rsp+0xc]
  40fd05:	mov    rcx,QWORD PTR [r15+0x88]
  40fd0c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd13:	cmp    WORD PTR [rax+0x10],0x0
  40fd18:	jne    40fef8 <__flatcc_fb_gen_c_builder@@Base+0xca8>
  40fd1e:	movzx  r9d,WORD PTR [r15+0x72]
  40fd23:	sub    rsp,0x8
  40fd27:	lea    rdx,[rip+0x2fa3a]        # 43f768 <_IO_stdin_used@@Base+0x13768>
  40fd2e:	push   r14
  40fd30:	mov    esi,0x1
  40fd35:	xor    eax,eax
  40fd37:	call   4051f0 <__fprintf_chk@plt>
  40fd3c:	pop    rdi
  40fd3d:	pop    r8
  40fd3f:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fd44:	nop    DWORD PTR [rax+0x0]
  40fd48:	mov    rsi,QWORD PTR [r15+0x18]
  40fd4c:	mov    rdx,r14
  40fd4f:	mov    DWORD PTR [rsp+0xc],r8d
  40fd54:	mov    rdi,QWORD PTR [rsi+0x18]
  40fd58:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40fd5d:	mov    rax,QWORD PTR [r15+0x18]
  40fd61:	mov    r8d,DWORD PTR [rsp+0xc]
  40fd66:	movzx  eax,WORD PTR [rax+0x10]
  40fd6a:	cmp    ax,0x1
  40fd6e:	je     40feb0 <__flatcc_fb_gen_c_builder@@Base+0xc60>
  40fd74:	jb     410000 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
  40fd7a:	cmp    ax,0x3
  40fd7e:	je     40feb0 <__flatcc_fb_gen_c_builder@@Base+0xc60>
  40fd84:	cmp    ax,0x4
  40fd88:	jne    40ff80 <__flatcc_fb_gen_c_builder@@Base+0xd30>
  40fd8e:	mov    rcx,QWORD PTR [r15+0x88]
  40fd95:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd9c:	lea    rdx,[rip+0x2fc55]        # 43f9f8 <_IO_stdin_used@@Base+0x139f8>
  40fda3:	mov    r9,r14
  40fda6:	mov    esi,0x1
  40fdab:	xor    eax,eax
  40fdad:	call   4051f0 <__fprintf_chk@plt>
  40fdb2:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fdb7:	nop    WORD PTR [rax+rax*1+0x0]
  40fdc0:	mov    rcx,QWORD PTR [r15+0x88]
  40fdc7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fdce:	lea    rdx,[rip+0x2fa5b]        # 43f830 <_IO_stdin_used@@Base+0x13830>
  40fdd5:	mov    esi,0x1
  40fdda:	xor    eax,eax
  40fddc:	call   4051f0 <__fprintf_chk@plt>
  40fde1:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdf0:	mov    rcx,QWORD PTR [r15+0x88]
  40fdf7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fdfe:	lea    rdx,[rip+0x2fa53]        # 43f858 <_IO_stdin_used@@Base+0x13858>
  40fe05:	mov    esi,0x1
  40fe0a:	xor    eax,eax
  40fe0c:	call   4051f0 <__fprintf_chk@plt>
  40fe11:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fe16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe20:	mov    rsi,QWORD PTR [r15+0x18]
  40fe24:	mov    rdx,r14
  40fe27:	mov    DWORD PTR [rsp+0xc],r8d
  40fe2c:	mov    rdi,QWORD PTR [rsi+0x18]
  40fe30:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  40fe35:	mov    rax,QWORD PTR [r15+0x18]
  40fe39:	movzx  eax,WORD PTR [rax+0x10]
  40fe3d:	cmp    ax,0x1
  40fe41:	je     40fb40 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  40fe47:	mov    r8d,DWORD PTR [rsp+0xc]
  40fe4c:	jb     40ffd0 <__flatcc_fb_gen_c_builder@@Base+0xd80>
  40fe52:	cmp    ax,0x3
  40fe56:	je     40fb40 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  40fe5c:	cmp    ax,0x4
  40fe60:	jne    40ff28 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40fe66:	mov    rcx,QWORD PTR [r15+0x88]
  40fe6d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe74:	lea    rdx,[rip+0x2fa4d]        # 43f8c8 <_IO_stdin_used@@Base+0x138c8>
  40fe7b:	mov    r9,r14
  40fe7e:	mov    esi,0x1
  40fe83:	xor    eax,eax
  40fe85:	call   4051f0 <__fprintf_chk@plt>
  40fe8a:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fe8f:	nop
  40fe90:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe97:	lea    rdx,[rip+0x2f882]        # 43f720 <_IO_stdin_used@@Base+0x13720>
  40fe9e:	mov    esi,0x1
  40fea3:	xor    eax,eax
  40fea5:	call   4051f0 <__fprintf_chk@plt>
  40feaa:	jmp    40fb13 <__flatcc_fb_gen_c_builder@@Base+0x8c3>
  40feaf:	nop
  40feb0:	mov    r9,QWORD PTR [r15+0x80]
  40feb7:	mov    eax,0xffffffff
  40febc:	test   r9,r9
  40febf:	je     40fec6 <__flatcc_fb_gen_c_builder@@Base+0xc76>
  40fec1:	xor    edx,edx
  40fec3:	div    r9
  40fec6:	mov    rcx,QWORD PTR [r15+0x88]
  40fecd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fed4:	lea    rdx,[rip+0x2f915]        # 43f7f0 <_IO_stdin_used@@Base+0x137f0>
  40fedb:	push   rax
  40fedc:	movzx  eax,WORD PTR [r15+0x72]
  40fee1:	mov    esi,0x1
  40fee6:	push   rax
  40fee7:	xor    eax,eax
  40fee9:	call   4051f0 <__fprintf_chk@plt>
  40feee:	pop    rax
  40feef:	pop    rdx
  40fef0:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fef5:	nop    DWORD PTR [rax]
  40fef8:	movzx  eax,WORD PTR [r15+0x72]
  40fefd:	sub    rsp,0x8
  40ff01:	mov    r9,QWORD PTR [r15+0x80]
  40ff08:	lea    rdx,[rip+0x2f8a1]        # 43f7b0 <_IO_stdin_used@@Base+0x137b0>
  40ff0f:	mov    esi,0x1
  40ff14:	push   rax
  40ff15:	xor    eax,eax
  40ff17:	call   4051f0 <__fprintf_chk@plt>
  40ff1c:	pop    rcx
  40ff1d:	pop    rsi
  40ff1e:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40ff23:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff28:	mov    rax,QWORD PTR [rip+0x400b9]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40ff2f:	lea    rcx,[rip+0x2fa12]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  40ff36:	lea    rdx,[rip+0x24b84]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40ff3d:	lea    r9,[rip+0x2f9c4]        # 43f908 <_IO_stdin_used@@Base+0x13908>
  40ff44:	mov    esi,0x1
  40ff49:	mov    r8d,0xb2
  40ff4f:	mov    rdi,QWORD PTR [rax]
  40ff52:	xor    eax,eax
  40ff54:	call   4051f0 <__fprintf_chk@plt>
  40ff59:	lea    rcx,[rip+0x303d0]        # 440330 <_IO_stdin_used@@Base+0x14330>
  40ff60:	lea    rsi,[rip+0x2f9e1]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  40ff67:	lea    rdi,[rip+0x25b9b]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40ff6e:	mov    edx,0xb2
  40ff73:	call   4050f0 <__assert_fail@plt>
  40ff78:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff80:	mov    rax,QWORD PTR [rip+0x40061]        # 44ffe8 <stderr@GLIBC_2.2.5>
  40ff87:	lea    rcx,[rip+0x2f9ba]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  40ff8e:	lea    rdx,[rip+0x24b2c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  40ff95:	lea    r9,[rip+0x2faa4]        # 43fa40 <_IO_stdin_used@@Base+0x13a40>
  40ff9c:	mov    esi,0x1
  40ffa1:	mov    r8d,0xca
  40ffa7:	mov    rdi,QWORD PTR [rax]
  40ffaa:	xor    eax,eax
  40ffac:	call   4051f0 <__fprintf_chk@plt>
  40ffb1:	lea    rcx,[rip+0x30378]        # 440330 <_IO_stdin_used@@Base+0x14330>
  40ffb8:	lea    rsi,[rip+0x2f989]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  40ffbf:	lea    rdi,[rip+0x25b43]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  40ffc6:	mov    edx,0xca
  40ffcb:	call   4050f0 <__assert_fail@plt>
  40ffd0:	mov    rcx,QWORD PTR [r15+0x88]
  40ffd7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffde:	lea    rdx,[rip+0x2f8a3]        # 43f888 <_IO_stdin_used@@Base+0x13888>
  40ffe5:	mov    r9,r14
  40ffe8:	mov    esi,0x1
  40ffed:	xor    eax,eax
  40ffef:	call   4051f0 <__fprintf_chk@plt>
  40fff4:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  40fff9:	nop    DWORD PTR [rax+0x0]
  410000:	mov    rcx,QWORD PTR [r15+0x88]
  410007:	mov    rdi,QWORD PTR [rbx+0xd0]
  41000e:	lea    rdx,[rip+0x2f9a3]        # 43f9b8 <_IO_stdin_used@@Base+0x139b8>
  410015:	mov    r9,r14
  410018:	mov    esi,0x1
  41001d:	xor    eax,eax
  41001f:	call   4051f0 <__fprintf_chk@plt>
  410024:	jmp    40fb70 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410029:	nop    DWORD PTR [rax+0x0]
  410030:	mov    rdi,QWORD PTR [rbx+0xd0]
  410037:	lea    rdx,[rip+0x3025e]        # 44029c <_IO_stdin_used@@Base+0x1429c>
  41003e:	mov    esi,0x1
  410043:	xor    eax,eax
  410045:	call   4051f0 <__fprintf_chk@plt>
  41004a:	jmp    40fbec <__flatcc_fb_gen_c_builder@@Base+0x99c>
  41004f:	call   4050d0 <__stack_chk_fail@plt>
  410054:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41005f:	nop
  410060:	push   r15
  410062:	push   r14
  410064:	mov    ecx,0x1d
  410069:	push   r13
  41006b:	push   r12
  41006d:	mov    r12,rdi
  410070:	push   rbp
  410071:	push   rbx
  410072:	mov    r13,rsi
  410075:	sub    rsp,0x1e8
  41007c:	mov    rax,QWORD PTR fs:0x28
  410085:	mov    QWORD PTR [rsp+0x1d8],rax
  41008d:	xor    eax,eax
  41008f:	lea    rbp,[rsp+0xf0]
  410097:	mov    rdi,rsp
  41009a:	mov    rdx,rsp
  41009d:	rep stos QWORD PTR es:[rdi],rax
  4100a0:	mov    ecx,0x1d
  4100a5:	mov    rdi,rbp
  4100a8:	rep stos QWORD PTR es:[rdi],rax
  4100ab:	mov    rdi,QWORD PTR [rsi+0x18]
  4100af:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4100b4:	mov    rdi,QWORD PTR [r12]
  4100b8:	lea    rdx,[rip+0x2fc91]        # 43fd50 <_IO_stdin_used@@Base+0x13d50>
  4100bf:	xor    eax,eax
  4100c1:	mov    rcx,rsp
  4100c4:	mov    esi,0x1
  4100c9:	call   4051f0 <__fprintf_chk@plt>
  4100ce:	mov    rbx,QWORD PTR [r13+0x28]
  4100d2:	lea    r13,[rip+0x2fd07]        # 43fde0 <_IO_stdin_used@@Base+0x13de0>
  4100d9:	test   rbx,rbx
  4100dc:	je     4101c7 <__flatcc_fb_gen_c_builder@@Base+0xf77>
  4100e2:	mov    rax,QWORD PTR [rbx+0x8]
  4100e6:	mov    r15,QWORD PTR [rax]
  4100e9:	mov    r14,QWORD PTR [rax+0x8]
  4100ed:	movzx  eax,WORD PTR [rbx+0x28]
  4100f1:	cmp    ax,0xa
  4100f5:	je     410210 <__flatcc_fb_gen_c_builder@@Base+0xfc0>
  4100fb:	cmp    ax,0xe
  4100ff:	je     410160 <__flatcc_fb_gen_c_builder@@Base+0xf10>
  410101:	test   ax,ax
  410104:	je     4101bb <__flatcc_fb_gen_c_builder@@Base+0xf6b>
  41010a:	mov    rax,QWORD PTR [rip+0x3fed7]        # 44ffe8 <stderr@GLIBC_2.2.5>
  410111:	lea    rcx,[rip+0x2f830]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  410118:	lea    rdx,[rip+0x249a2]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  41011f:	lea    r9,[rip+0x2fdda]        # 43ff00 <_IO_stdin_used@@Base+0x13f00>
  410126:	mov    esi,0x1
  41012b:	mov    r8d,0x53
  410131:	mov    rdi,QWORD PTR [rax]
  410134:	xor    eax,eax
  410136:	call   4051f0 <__fprintf_chk@plt>
  41013b:	lea    rcx,[rip+0x3020e]        # 440350 <_IO_stdin_used@@Base+0x14350>
  410142:	lea    rsi,[rip+0x2f7ff]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  410149:	lea    rdi,[rip+0x259b9]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  410150:	mov    edx,0x53
  410155:	call   4050f0 <__assert_fail@plt>
  41015a:	nop    WORD PTR [rax+rax*1+0x0]
  410160:	mov    rsi,QWORD PTR [rbx+0x18]
  410164:	mov    rdx,rbp
  410167:	mov    rdi,QWORD PTR [rsi+0x18]
  41016b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  410170:	mov    rdx,QWORD PTR [rbx+0x18]
  410174:	movzx  eax,WORD PTR [rdx+0x10]
  410178:	test   ax,ax
  41017b:	je     410240 <__flatcc_fb_gen_c_builder@@Base+0xff0>
  410181:	cmp    ax,0x1
  410185:	jne    410260 <__flatcc_fb_gen_c_builder@@Base+0x1010>
  41018b:	mov    rcx,QWORD PTR [rbx+0x48]
  41018f:	movzx  r9d,WORD PTR [rdx+0xb0]
  410197:	push   r15
  410199:	mov    r8,QWORD PTR [rdx+0xb8]
  4101a0:	lea    rdx,[rip+0x2fc89]        # 43fe30 <_IO_stdin_used@@Base+0x13e30>
  4101a7:	push   r14
  4101a9:	mov    rdi,QWORD PTR [r12]
  4101ad:	mov    esi,0x1
  4101b2:	xor    eax,eax
  4101b4:	call   4051f0 <__fprintf_chk@plt>
  4101b9:	pop    rax
  4101ba:	pop    rdx
  4101bb:	mov    rbx,QWORD PTR [rbx]
  4101be:	test   rbx,rbx
  4101c1:	jne    4100e2 <__flatcc_fb_gen_c_builder@@Base+0xe92>
  4101c7:	mov    rdi,QWORD PTR [r12]
  4101cb:	lea    rdx,[rip+0x2fbde]        # 43fdb0 <_IO_stdin_used@@Base+0x13db0>
  4101d2:	xor    eax,eax
  4101d4:	mov    esi,0x1
  4101d9:	call   4051f0 <__fprintf_chk@plt>
  4101de:	xor    eax,eax
  4101e0:	mov    rdx,QWORD PTR [rsp+0x1d8]
  4101e8:	xor    rdx,QWORD PTR fs:0x28
  4101f1:	jne    4102b0 <__flatcc_fb_gen_c_builder@@Base+0x1060>
  4101f7:	add    rsp,0x1e8
  4101fe:	pop    rbx
  4101ff:	pop    rbp
  410200:	pop    r12
  410202:	pop    r13
  410204:	pop    r14
  410206:	pop    r15
  410208:	ret    
  410209:	nop    DWORD PTR [rax+0x0]
  410210:	mov    ecx,DWORD PTR [rbx+0x48]
  410213:	mov    rdi,QWORD PTR [r12]
  410217:	lea    rdx,[rip+0x2fca2]        # 43fec0 <_IO_stdin_used@@Base+0x13ec0>
  41021e:	xor    eax,eax
  410220:	mov    r9,r15
  410223:	mov    r8d,r14d
  410226:	mov    esi,0x1
  41022b:	call   4051f0 <__fprintf_chk@plt>
  410230:	mov    rbx,QWORD PTR [rbx]
  410233:	test   rbx,rbx
  410236:	jne    4100e2 <__flatcc_fb_gen_c_builder@@Base+0xe92>
  41023c:	jmp    4101c7 <__flatcc_fb_gen_c_builder@@Base+0xf77>
  41023e:	xchg   ax,ax
  410240:	sub    rsp,0x8
  410244:	mov    rcx,QWORD PTR [rbx+0x48]
  410248:	mov    r9d,r14d
  41024b:	push   r15
  41024d:	mov    r8,rbp
  410250:	mov    rdx,r13
  410253:	jmp    4101a9 <__flatcc_fb_gen_c_builder@@Base+0xf59>
  410258:	nop    DWORD PTR [rax+rax*1+0x0]
  410260:	mov    rax,QWORD PTR [rip+0x3fd81]        # 44ffe8 <stderr@GLIBC_2.2.5>
  410267:	lea    rcx,[rip+0x2f6da]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  41026e:	lea    rdx,[rip+0x2484c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  410275:	lea    r9,[rip+0x2fc04]        # 43fe80 <_IO_stdin_used@@Base+0x13e80>
  41027c:	mov    esi,0x1
  410281:	mov    r8d,0x4a
  410287:	mov    rdi,QWORD PTR [rax]
  41028a:	xor    eax,eax
  41028c:	call   4051f0 <__fprintf_chk@plt>
  410291:	lea    rcx,[rip+0x300b8]        # 440350 <_IO_stdin_used@@Base+0x14350>
  410298:	lea    rsi,[rip+0x2f6a9]        # 43f948 <_IO_stdin_used@@Base+0x13948>
  41029f:	lea    rdi,[rip+0x25863]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4102a6:	mov    edx,0x4a
  4102ab:	call   4050f0 <__assert_fail@plt>
  4102b0:	call   4050d0 <__stack_chk_fail@plt>
  4102b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004102c0 <__flatcc_fb_gen_c_verifier@@Base>:
  4102c0:	push   r13
  4102c2:	push   r12
  4102c4:	lea    rdx,[rip+0x2fc6d]        # 43ff38 <_IO_stdin_used@@Base+0x13f38>
  4102cb:	push   rbp
  4102cc:	push   rbx
  4102cd:	mov    rbp,rdi
  4102d0:	mov    esi,0x1
  4102d5:	sub    rsp,0xf8
  4102dc:	mov    rax,QWORD PTR fs:0x28
  4102e5:	mov    QWORD PTR [rsp+0xe8],rax
  4102ed:	xor    eax,eax
  4102ef:	mov    rax,QWORD PTR [rdi+0xd8]
  4102f6:	mov    rdi,QWORD PTR [rdi+0xd0]
  4102fd:	mov    rcx,QWORD PTR [rax+0x118]
  410304:	xor    eax,eax
  410306:	mov    r8,rcx
  410309:	call   4051f0 <__fprintf_chk@plt>
  41030e:	mov    rdi,QWORD PTR [rbp+0xd0]
  410315:	lea    rdx,[rip+0x1e2fc]        # 42e618 <_IO_stdin_used@@Base+0x2618>
  41031c:	mov    esi,0x1
  410321:	xor    eax,eax
  410323:	call   4051f0 <__fprintf_chk@plt>
  410328:	mov    rax,QWORD PTR [rbp+0xd8]
  41032f:	mov    rdi,QWORD PTR [rbp+0xd0]
  410336:	lea    rdx,[rip+0x259cc]        # 435d09 <_IO_stdin_used@@Base+0x9d09>
  41033d:	mov    esi,0x1
  410342:	mov    rcx,QWORD PTR [rax+0x118]
  410349:	xor    eax,eax
  41034b:	call   4051f0 <__fprintf_chk@plt>
  410350:	mov    rax,QWORD PTR [rbp+0xd8]
  410357:	mov    rdi,QWORD PTR [rbp+0xd0]
  41035e:	lea    rdx,[rip+0x259b9]        # 435d1e <_IO_stdin_used@@Base+0x9d1e>
  410365:	mov    esi,0x1
  41036a:	mov    rcx,QWORD PTR [rax+0x110]
  410371:	xor    eax,eax
  410373:	call   4051f0 <__fprintf_chk@plt>
  410378:	mov    rdi,QWORD PTR [rbp+0xd0]
  41037f:	lea    rdx,[rip+0x25924]        # 435caa <_IO_stdin_used@@Base+0x9caa>
  410386:	mov    esi,0x1
  41038b:	xor    eax,eax
  41038d:	call   4051f0 <__fprintf_chk@plt>
  410392:	mov    rdi,QWORD PTR [rbp+0xd0]
  410399:	lea    rdx,[rip+0x2fbc8]        # 43ff68 <_IO_stdin_used@@Base+0x13f68>
  4103a0:	mov    esi,0x1
  4103a5:	xor    eax,eax
  4103a7:	call   4051f0 <__fprintf_chk@plt>
  4103ac:	lea    rsi,[rip+0x1ce7e]        # 42d231 <_IO_stdin_used@@Base+0x1231>
  4103b3:	lea    rdx,[rip+0x2ff10]        # 4402ca <_IO_stdin_used@@Base+0x142ca>
  4103ba:	mov    rdi,rbp
  4103bd:	call   4065d0 <__flatcc_fb_gen_c_includes@@Base>
  4103c2:	mov    rax,QWORD PTR [rbp+0xe0]
  4103c9:	mov    rdi,QWORD PTR [rbp+0xd0]
  4103d0:	mov    esi,DWORD PTR [rax+0xac]
  4103d6:	test   esi,esi
  4103d8:	je     4103f4 <__flatcc_fb_gen_c_verifier@@Base+0x134>
  4103da:	lea    rdx,[rip+0x1e34f]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  4103e1:	mov    esi,0x1
  4103e6:	xor    eax,eax
  4103e8:	call   4051f0 <__fprintf_chk@plt>
  4103ed:	mov    rdi,QWORD PTR [rbp+0xd0]
  4103f4:	lea    rdx,[rip+0x33cf2]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4103fb:	xor    eax,eax
  4103fd:	mov    esi,0x1
  410402:	mov    r12,rsp
  410405:	lea    r13,[rip+0x2fb84]        # 43ff90 <_IO_stdin_used@@Base+0x13f90>
  41040c:	call   4051f0 <__fprintf_chk@plt>
  410411:	xor    eax,eax
  410413:	mov    ecx,0x1d
  410418:	mov    rdi,rsp
  41041b:	rep stos QWORD PTR es:[rdi],rax
  41041e:	mov    rax,QWORD PTR [rbp+0xd8]
  410425:	mov    rbx,QWORD PTR [rax+0x40]
  410429:	test   rbx,rbx
  41042c:	jne    410438 <__flatcc_fb_gen_c_verifier@@Base+0x178>
  41042e:	jmp    41046f <__flatcc_fb_gen_c_verifier@@Base+0x1af>
  410430:	mov    rbx,QWORD PTR [rbx]
  410433:	test   rbx,rbx
  410436:	je     41046f <__flatcc_fb_gen_c_verifier@@Base+0x1af>
  410438:	cmp    WORD PTR [rbx+0x10],0x0
  41043d:	jne    410430 <__flatcc_fb_gen_c_verifier@@Base+0x170>
  41043f:	mov    rdi,QWORD PTR [rbx+0x18]
  410443:	mov    rsi,rbx
  410446:	mov    rdx,r12
  410449:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  41044e:	mov    rdi,QWORD PTR [rbp+0xd0]
  410455:	xor    eax,eax
  410457:	mov    rcx,r12
  41045a:	mov    rdx,r13
  41045d:	mov    esi,0x1
  410462:	call   4051f0 <__fprintf_chk@plt>
  410467:	mov    rbx,QWORD PTR [rbx]
  41046a:	test   rbx,rbx
  41046d:	jne    410438 <__flatcc_fb_gen_c_verifier@@Base+0x178>
  41046f:	mov    rdi,QWORD PTR [rbp+0xd0]
  410476:	lea    rdx,[rip+0x33c70]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  41047d:	xor    eax,eax
  41047f:	mov    esi,0x1
  410484:	lea    r13,[rbp+0xd0]
  41048b:	call   4051f0 <__fprintf_chk@plt>
  410490:	mov    rax,QWORD PTR [rbp+0xd8]
  410497:	mov    rbx,QWORD PTR [rax+0x40]
  41049b:	test   rbx,rbx
  41049e:	jne    4104b0 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
  4104a0:	jmp    410622 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  4104a5:	nop    DWORD PTR [rax]
  4104a8:	mov    rbx,QWORD PTR [rbx]
  4104ab:	test   rbx,rbx
  4104ae:	je     4104ca <__flatcc_fb_gen_c_verifier@@Base+0x20a>
  4104b0:	cmp    WORD PTR [rbx+0x10],0x4
  4104b5:	jne    4104a8 <__flatcc_fb_gen_c_verifier@@Base+0x1e8>
  4104b7:	mov    rsi,rbx
  4104ba:	mov    rdi,r13
  4104bd:	call   410060 <__flatcc_fb_gen_c_builder@@Base+0xe10>
  4104c2:	mov    rbx,QWORD PTR [rbx]
  4104c5:	test   rbx,rbx
  4104c8:	jne    4104b0 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
  4104ca:	mov    rax,QWORD PTR [rbp+0xd8]
  4104d1:	mov    rbx,QWORD PTR [rax+0x40]
  4104d5:	test   rbx,rbx
  4104d8:	je     410622 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  4104de:	xor    r13d,r13d
  4104e1:	jmp    4104f4 <__flatcc_fb_gen_c_verifier@@Base+0x234>
  4104e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4104e8:	mov    rbx,QWORD PTR [rbx]
  4104eb:	test   rbx,rbx
  4104ee:	je     4105e7 <__flatcc_fb_gen_c_verifier@@Base+0x327>
  4104f4:	cmp    WORD PTR [rbx+0x10],0x1
  4104f9:	jne    4104e8 <__flatcc_fb_gen_c_verifier@@Base+0x228>
  4104fb:	mov    rax,r13
  4104fe:	mov    ecx,0x1d
  410503:	mov    rdi,r12
  410506:	rep stos QWORD PTR es:[rdi],rax
  410509:	mov    rsi,rbx
  41050c:	mov    rdx,r12
  41050f:	mov    rdi,QWORD PTR [rbx+0x18]
  410513:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  410518:	movzx  eax,WORD PTR [rbx+0xb0]
  41051f:	sub    rsp,0x8
  410523:	mov    rdi,QWORD PTR [rbp+0xd0]
  41052a:	mov    r9,QWORD PTR [rbx+0xb8]
  410531:	lea    rdx,[rip+0x2faa0]        # 43ffd8 <_IO_stdin_used@@Base+0x13fd8>
  410538:	mov    r8,r12
  41053b:	mov    rcx,r12
  41053e:	mov    esi,0x1
  410543:	push   rax
  410544:	xor    eax,eax
  410546:	call   4051f0 <__fprintf_chk@plt>
  41054b:	movzx  eax,WORD PTR [rbx+0xb0]
  410552:	mov    rdi,QWORD PTR [rbp+0xd0]
  410559:	lea    rdx,[rip+0x2fb10]        # 440070 <_IO_stdin_used@@Base+0x14070>
  410560:	mov    r9,QWORD PTR [rbx+0xb8]
  410567:	mov    r8,r12
  41056a:	mov    rcx,r12
  41056d:	mov    esi,0x1
  410572:	mov    DWORD PTR [rsp],eax
  410575:	xor    eax,eax
  410577:	call   4051f0 <__fprintf_chk@plt>
  41057c:	movzx  eax,WORD PTR [rbx+0xb0]
  410583:	mov    rdi,QWORD PTR [rbp+0xd0]
  41058a:	lea    rdx,[rip+0x2fb87]        # 440118 <_IO_stdin_used@@Base+0x14118>
  410591:	mov    r9,QWORD PTR [rbx+0xb8]
  410598:	mov    r8,rbp
  41059b:	mov    rcx,r12
  41059e:	mov    esi,0x1
  4105a3:	mov    DWORD PTR [rsp],eax
  4105a6:	xor    eax,eax
  4105a8:	call   4051f0 <__fprintf_chk@plt>
  4105ad:	movzx  r9d,WORD PTR [rbx+0xb0]
  4105b5:	mov    r8,QWORD PTR [rbx+0xb8]
  4105bc:	lea    rdx,[rip+0x2fc0d]        # 4401d0 <_IO_stdin_used@@Base+0x141d0>
  4105c3:	mov    rdi,QWORD PTR [rbp+0xd0]
  4105ca:	xor    eax,eax
  4105cc:	mov    rcx,r12
  4105cf:	mov    esi,0x1
  4105d4:	call   4051f0 <__fprintf_chk@plt>
  4105d9:	mov    rbx,QWORD PTR [rbx]
  4105dc:	pop    rax
  4105dd:	pop    rdx
  4105de:	test   rbx,rbx
  4105e1:	jne    4104f4 <__flatcc_fb_gen_c_verifier@@Base+0x234>
  4105e7:	mov    rax,QWORD PTR [rbp+0xd8]
  4105ee:	mov    rbx,QWORD PTR [rax+0x40]
  4105f2:	test   rbx,rbx
  4105f5:	jne    410608 <__flatcc_fb_gen_c_verifier@@Base+0x348>
  4105f7:	jmp    410622 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  4105f9:	nop    DWORD PTR [rax+0x0]
  410600:	mov    rbx,QWORD PTR [rbx]
  410603:	test   rbx,rbx
  410606:	je     410622 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  410608:	cmp    WORD PTR [rbx+0x10],0x0
  41060d:	jne    410600 <__flatcc_fb_gen_c_verifier@@Base+0x340>
  41060f:	mov    rsi,rbx
  410612:	mov    rdi,rbp
  410615:	call   40fa50 <__flatcc_fb_gen_c_builder@@Base+0x800>
  41061a:	mov    rbx,QWORD PTR [rbx]
  41061d:	test   rbx,rbx
  410620:	jne    410608 <__flatcc_fb_gen_c_verifier@@Base+0x348>
  410622:	mov    rax,QWORD PTR [rbp+0xe0]
  410629:	mov    rdi,QWORD PTR [rbp+0xd0]
  410630:	mov    ecx,DWORD PTR [rax+0xac]
  410636:	test   ecx,ecx
  410638:	je     410654 <__flatcc_fb_gen_c_verifier@@Base+0x394>
  41063a:	lea    rdx,[rip+0x23f9f]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  410641:	mov    esi,0x1
  410646:	xor    eax,eax
  410648:	call   4051f0 <__fprintf_chk@plt>
  41064d:	mov    rdi,QWORD PTR [rbp+0xd0]
  410654:	mov    rax,QWORD PTR [rbp+0xd8]
  41065b:	lea    rdx,[rip+0x2fc74]        # 4402d6 <_IO_stdin_used@@Base+0x142d6>
  410662:	mov    esi,0x1
  410667:	mov    rcx,QWORD PTR [rax+0x118]
  41066e:	xor    eax,eax
  410670:	call   4051f0 <__fprintf_chk@plt>
  410675:	xor    eax,eax
  410677:	mov    rdx,QWORD PTR [rsp+0xe8]
  41067f:	xor    rdx,QWORD PTR fs:0x28
  410688:	jne    410698 <__flatcc_fb_gen_c_verifier@@Base+0x3d8>
  41068a:	add    rsp,0xf8
  410691:	pop    rbx
  410692:	pop    rbp
  410693:	pop    r12
  410695:	pop    r13
  410697:	ret    
  410698:	call   4050d0 <__stack_chk_fail@plt>
  41069d:	nop    DWORD PTR [rax]
  4106a0:	mov    rdx,rdi
  4106a3:	lea    rdi,[rsi+0x8]
  4106a7:	lea    rsi,[rip+0x242]        # 4108f0 <__flatcc_fb_gen_c_verifier@@Base+0x630>
  4106ae:	jmp    41a890 <fb_symbol_table_visit@@Base>
  4106b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4106be:	xchg   ax,ax
  4106c0:	mov    rdx,rdi
  4106c3:	lea    rdi,[rsi+0x8]
  4106c7:	lea    rsi,[rip+0x132]        # 410800 <__flatcc_fb_gen_c_verifier@@Base+0x540>
  4106ce:	jmp    41a890 <fb_symbol_table_visit@@Base>
  4106d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4106de:	xchg   ax,ax
  4106e0:	push   rbp
  4106e1:	push   rbx
  4106e2:	movsxd rsi,esi
  4106e5:	lea    rcx,[rip+0x304]        # 4109f0 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  4106ec:	mov    rbp,rsi
  4106ef:	mov    edx,0x10
  4106f4:	sub    rsp,0x8
  4106f8:	mov    rbx,rdi
  4106fb:	call   405080 <qsort@plt>
  410700:	test   ebp,ebp
  410702:	jle    410726 <__flatcc_fb_gen_c_verifier@@Base+0x466>
  410704:	mov    rdi,rbx
  410707:	xor    eax,eax
  410709:	nop    DWORD PTR [rax+0x0]
  410710:	mov    rdx,QWORD PTR [rdi]
  410713:	add    rdi,0x10
  410717:	mov    QWORD PTR [rdx+0xc8],rax
  41071e:	add    rax,0x1
  410722:	cmp    ebp,eax
  410724:	jg     410710 <__flatcc_fb_gen_c_verifier@@Base+0x450>
  410726:	add    rsp,0x8
  41072a:	pop    rbx
  41072b:	pop    rbp
  41072c:	ret    
  41072d:	nop    DWORD PTR [rax]
  410730:	push   rbp
  410731:	push   rbx
  410732:	sub    rsp,0x8
  410736:	movsxd rbx,DWORD PTR [rdi+0x8]
  41073a:	mov    ebp,DWORD PTR [rsi+0x8]
  41073d:	mov    rdi,QWORD PTR [rdi]
  410740:	mov    rsi,QWORD PTR [rsi]
  410743:	movsxd rdx,ebp
  410746:	cmp    ebx,ebp
  410748:	cmovle rdx,rbx
  41074c:	sub    ebx,ebp
  41074e:	call   405120 <memcmp@plt>
  410753:	test   eax,eax
  410755:	cmove  eax,ebx
  410758:	add    rsp,0x8
  41075c:	pop    rbx
  41075d:	pop    rbp
  41075e:	ret    
  41075f:	nop
  410760:	movzx  eax,WORD PTR [rsi+0x10]
  410764:	sub    eax,0x3
  410767:	cmp    ax,0x1
  41076b:	jbe    410770 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  41076d:	ret    
  41076e:	xchg   ax,ax
  410770:	push   rbp
  410771:	push   rbx
  410772:	mov    rbx,rsi
  410775:	mov    rbp,rdi
  410778:	sub    rsp,0x8
  41077c:	mov    rax,QWORD PTR [rdi+0x8]
  410780:	mov    rsi,QWORD PTR [rsi+0x20]
  410784:	lea    rdi,[rax+0x128]
  41078b:	call   41a0d0 <ptr_set_find_item@@Base>
  410790:	test   rax,rax
  410793:	je     4107b7 <__flatcc_fb_gen_c_verifier@@Base+0x4f7>
  410795:	mov    rdx,QWORD PTR [rbx+0x8]
  410799:	mov    rax,QWORD PTR [rbp+0x10]
  41079d:	mov    rcx,QWORD PTR [rdx]
  4107a0:	mov    rdx,QWORD PTR [rdx+0x8]
  4107a4:	add    rax,0x20
  4107a8:	mov    QWORD PTR [rax-0x10],rbx
  4107ac:	mov    QWORD PTR [rax-0x20],rcx
  4107b0:	mov    DWORD PTR [rax-0x18],edx
  4107b3:	mov    QWORD PTR [rbp+0x10],rax
  4107b7:	add    rsp,0x8
  4107bb:	pop    rbx
  4107bc:	pop    rbp
  4107bd:	ret    
  4107be:	xchg   ax,ax
  4107c0:	movzx  eax,WORD PTR [rsi+0x10]
  4107c4:	sub    eax,0x3
  4107c7:	cmp    ax,0x1
  4107cb:	jbe    4107d0 <__flatcc_fb_gen_c_verifier@@Base+0x510>
  4107cd:	ret    
  4107ce:	xchg   ax,ax
  4107d0:	push   rbx
  4107d1:	mov    rax,QWORD PTR [rdi+0x8]
  4107d5:	mov    rbx,rdi
  4107d8:	mov    rsi,QWORD PTR [rsi+0x20]
  4107dc:	lea    rdi,[rax+0x128]
  4107e3:	call   41a0d0 <ptr_set_find_item@@Base>
  4107e8:	test   rax,rax
  4107eb:	je     4107f0 <__flatcc_fb_gen_c_verifier@@Base+0x530>
  4107ed:	add    DWORD PTR [rbx],0x1
  4107f0:	pop    rbx
  4107f1:	ret    
  4107f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4107fd:	nop    DWORD PTR [rax]
  410800:	cmp    WORD PTR [rsi+0x10],0x4
  410805:	jbe    410810 <__flatcc_fb_gen_c_verifier@@Base+0x550>
  410807:	ret    
  410808:	nop    DWORD PTR [rax+rax*1+0x0]
  410810:	push   rbp
  410811:	push   rbx
  410812:	mov    rbp,rsi
  410815:	mov    rbx,rdi
  410818:	sub    rsp,0x8
  41081c:	mov    rax,QWORD PTR [rdi+0x48]
  410820:	mov    rsi,QWORD PTR [rsi+0x20]
  410824:	lea    rdi,[rax+0x128]
  41082b:	call   41a0d0 <ptr_set_find_item@@Base>
  410830:	test   rax,rax
  410833:	je     410891 <__flatcc_fb_gen_c_verifier@@Base+0x5d1>
  410835:	mov    eax,DWORD PTR [rbx]
  410837:	xor    edx,edx
  410839:	test   eax,eax
  41083b:	je     410865 <__flatcc_fb_gen_c_verifier@@Base+0x5a5>
  41083d:	mov    rax,QWORD PTR [rbp+0x18]
  410841:	xor    edx,edx
  410843:	mov    rax,QWORD PTR [rax]
  410846:	test   rax,rax
  410849:	je     410865 <__flatcc_fb_gen_c_verifier@@Base+0x5a5>
  41084b:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	mov    rcx,QWORD PTR [rax+0x8]
  410854:	mov    rax,QWORD PTR [rax]
  410857:	mov    rcx,QWORD PTR [rcx+0x8]
  41085b:	test   rax,rax
  41085e:	lea    rdx,[rdx+rcx*1+0x1]
  410863:	jne    410850 <__flatcc_fb_gen_c_verifier@@Base+0x590>
  410865:	mov    rcx,QWORD PTR [rbp+0x8]
  410869:	mov    rax,QWORD PTR [rbx+0x10]
  41086d:	add    rax,QWORD PTR [rcx+0x8]
  410871:	lea    rax,[rdx+rax*1+0x1]
  410876:	mov    QWORD PTR [rbx+0x10],rax
  41087a:	movzx  eax,WORD PTR [rbp+0x10]
  41087e:	cmp    ax,0x1
  410882:	jbe    4108a0 <__flatcc_fb_gen_c_verifier@@Base+0x5e0>
  410884:	sub    eax,0x3
  410887:	cmp    ax,0x1
  41088b:	ja     410891 <__flatcc_fb_gen_c_verifier@@Base+0x5d1>
  41088d:	add    DWORD PTR [rbx+0x8],0x1
  410891:	add    rsp,0x8
  410895:	pop    rbx
  410896:	pop    rbp
  410897:	ret    
  410898:	nop    DWORD PTR [rax+rax*1+0x0]
  4108a0:	add    DWORD PTR [rbx+0x4],0x1
  4108a4:	jmp    410891 <__flatcc_fb_gen_c_verifier@@Base+0x5d1>
  4108a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108b0:	push   rbx
  4108b1:	mov    rbx,rdi
  4108b4:	mov    rdi,QWORD PTR [rdi+0x18]
  4108b8:	test   rdi,rdi
  4108bb:	je     4108c2 <__flatcc_fb_gen_c_verifier@@Base+0x602>
  4108bd:	call   405040 <free@plt>
  4108c2:	mov    rdi,QWORD PTR [rbx+0x20]
  4108c6:	test   rdi,rdi
  4108c9:	je     4108d0 <__flatcc_fb_gen_c_verifier@@Base+0x610>
  4108cb:	call   405040 <free@plt>
  4108d0:	mov    rdi,QWORD PTR [rbx+0x28]
  4108d4:	test   rdi,rdi
  4108d7:	je     4108de <__flatcc_fb_gen_c_verifier@@Base+0x61e>
  4108d9:	call   405040 <free@plt>
  4108de:	mov    rdi,rbx
  4108e1:	mov    ecx,0xa
  4108e6:	xor    eax,eax
  4108e8:	rep stos QWORD PTR es:[rdi],rax
  4108eb:	pop    rbx
  4108ec:	ret    
  4108ed:	nop    DWORD PTR [rax]
  4108f0:	cmp    WORD PTR [rsi+0x10],0x4
  4108f5:	jbe    410900 <__flatcc_fb_gen_c_verifier@@Base+0x640>
  4108f7:	ret    
  4108f8:	nop    DWORD PTR [rax+rax*1+0x0]
  410900:	push   r14
  410902:	push   r13
  410904:	mov    r13,rsi
  410907:	push   r12
  410909:	push   rbp
  41090a:	mov    r12,rdi
  41090d:	push   rbx
  41090e:	mov    rax,QWORD PTR [rdi+0x48]
  410912:	mov    rsi,QWORD PTR [rsi+0x20]
  410916:	lea    rdi,[rax+0x128]
  41091d:	call   41a0d0 <ptr_set_find_item@@Base>
  410922:	test   rax,rax
  410925:	je     4109ca <__flatcc_fb_gen_c_verifier@@Base+0x70a>
  41092b:	mov    eax,DWORD PTR [r12]
  41092f:	mov    r14,QWORD PTR [r12+0x40]
  410934:	test   eax,eax
  410936:	mov    rcx,r14
  410939:	je     410979 <__flatcc_fb_gen_c_verifier@@Base+0x6b9>
  41093b:	mov    rax,QWORD PTR [r13+0x18]
  41093f:	mov    rcx,r14
  410942:	mov    rbp,QWORD PTR [rax]
  410945:	test   rbp,rbp
  410948:	je     410979 <__flatcc_fb_gen_c_verifier@@Base+0x6b9>
  41094a:	nop    WORD PTR [rax+rax*1+0x0]
  410950:	mov    rax,QWORD PTR [rbp+0x8]
  410954:	mov    rdi,rcx
  410957:	movsxd rbx,DWORD PTR [rax+0x8]
  41095b:	mov    rsi,QWORD PTR [rax]
  41095e:	mov    rdx,rbx
  410961:	call   405160 <memcpy@plt>
  410966:	add    rbx,rax
  410969:	mov    BYTE PTR [rbx],0x2e
  41096c:	mov    rbp,QWORD PTR [rbp+0x0]
  410970:	lea    rcx,[rbx+0x1]
  410974:	test   rbp,rbp
  410977:	jne    410950 <__flatcc_fb_gen_c_verifier@@Base+0x690>
  410979:	mov    rax,QWORD PTR [r13+0x8]
  41097d:	mov    rdi,rcx
  410980:	movsxd rbx,DWORD PTR [rax+0x8]
  410984:	mov    rsi,QWORD PTR [rax]
  410987:	mov    rdx,rbx
  41098a:	call   405160 <memcpy@plt>
  41098f:	mov    rcx,rax
  410992:	add    rcx,rbx
  410995:	mov    BYTE PTR [rcx],0x0
  410998:	movzx  eax,WORD PTR [r13+0x10]
  41099d:	add    rcx,0x1
  4109a1:	mov    QWORD PTR [r12+0x40],rcx
  4109a6:	cmp    ax,0x1
  4109aa:	jbe    4109d8 <__flatcc_fb_gen_c_verifier@@Base+0x718>
  4109ac:	sub    eax,0x3
  4109af:	cmp    ax,0x1
  4109b3:	ja     4109ca <__flatcc_fb_gen_c_verifier@@Base+0x70a>
  4109b5:	mov    rax,QWORD PTR [r12+0x38]
  4109ba:	mov    QWORD PTR [rax],r13
  4109bd:	mov    QWORD PTR [rax+0x8],r14
  4109c1:	add    rax,0x10
  4109c5:	mov    QWORD PTR [r12+0x38],rax
  4109ca:	pop    rbx
  4109cb:	pop    rbp
  4109cc:	pop    r12
  4109ce:	pop    r13
  4109d0:	pop    r14
  4109d2:	ret    
  4109d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4109d8:	mov    rax,QWORD PTR [r12+0x30]
  4109dd:	mov    QWORD PTR [rax],r13
  4109e0:	mov    QWORD PTR [rax+0x8],r14
  4109e4:	add    rax,0x10
  4109e8:	mov    QWORD PTR [r12+0x30],rax
  4109ed:	jmp    4109ca <__flatcc_fb_gen_c_verifier@@Base+0x70a>
  4109ef:	nop
  4109f0:	mov    rsi,QWORD PTR [rsi+0x8]
  4109f4:	mov    rdi,QWORD PTR [rdi+0x8]
  4109f8:	jmp    405140 <strcmp@plt>
  4109fd:	nop    DWORD PTR [rax]
  410a00:	push   r14
  410a02:	push   r13
  410a04:	mov    r14,rsi
  410a07:	push   r12
  410a09:	push   rbp
  410a0a:	mov    rbp,rdi
  410a0d:	push   rbx
  410a0e:	sub    rsp,0xd0
  410a15:	test   al,al
  410a17:	mov    QWORD PTR [rsp+0x30],rdx
  410a1c:	mov    QWORD PTR [rsp+0x38],rcx
  410a21:	mov    QWORD PTR [rsp+0x40],r8
  410a26:	mov    QWORD PTR [rsp+0x48],r9
  410a2b:	je     410a6c <__flatcc_fb_gen_c_verifier@@Base+0x7ac>
  410a2d:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  410a33:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  410a39:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  410a3f:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  410a48:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  410a51:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  410a5a:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  410a63:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  410a6c:	mov    rax,QWORD PTR fs:0x28
  410a75:	mov    QWORD PTR [rsp+0x18],rax
  410a7a:	xor    eax,eax
  410a7c:	cmp    BYTE PTR [rip+0x3f6bd],0x0        # 450140 <__bss_start@@Base+0x20>
  410a83:	mov    rax,QWORD PTR [rbp+0xe0]
  410a8a:	mov    r13d,DWORD PTR [rbp+0xf0]
  410a91:	mov    edx,DWORD PTR [rax+0xd0]
  410a97:	je     410b98 <__flatcc_fb_gen_c_verifier@@Base+0x8d8>
  410a9d:	cmp    BYTE PTR [r14],0x0
  410aa1:	je     410b59 <__flatcc_fb_gen_c_verifier@@Base+0x899>
  410aa7:	imul   r13d,edx
  410aab:	cmp    r13d,0x40
  410aaf:	jle    410af8 <__flatcc_fb_gen_c_verifier@@Base+0x838>
  410ab1:	lea    r12,[rip+0x3f688]        # 450140 <__bss_start@@Base+0x20>
  410ab8:	mov    ebx,r13d
  410abb:	nop    DWORD PTR [rax+rax*1+0x0]
  410ac0:	mov    rdi,QWORD PTR [rbp+0xd0]
  410ac7:	lea    rdx,[rip+0x2504b]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  410ace:	xor    eax,eax
  410ad0:	mov    r8,r12
  410ad3:	mov    ecx,0x40
  410ad8:	mov    esi,0x1
  410add:	sub    ebx,0x40
  410ae0:	call   4051f0 <__fprintf_chk@plt>
  410ae5:	cmp    ebx,0x40
  410ae8:	jg     410ac0 <__flatcc_fb_gen_c_verifier@@Base+0x800>
  410aea:	lea    eax,[r13-0x41]
  410aee:	and    eax,0xffffffc0
  410af1:	neg    eax
  410af3:	lea    r13d,[r13+rax*1-0x40]
  410af8:	mov    rdi,QWORD PTR [rbp+0xd0]
  410aff:	lea    rdx,[rip+0x25013]        # 435b19 <_IO_stdin_used@@Base+0x9b19>
  410b06:	lea    r8,[rip+0x3f633]        # 450140 <__bss_start@@Base+0x20>
  410b0d:	mov    ecx,r13d
  410b10:	mov    esi,0x1
  410b15:	xor    eax,eax
  410b17:	call   4051f0 <__fprintf_chk@plt>
  410b1c:	lea    rax,[rsp+0x100]
  410b24:	mov    rdi,QWORD PTR [rbp+0xd0]
  410b2b:	mov    rcx,rsp
  410b2e:	mov    rdx,r14
  410b31:	mov    esi,0x1
  410b36:	mov    DWORD PTR [rsp],0x10
  410b3d:	mov    QWORD PTR [rsp+0x8],rax
  410b42:	lea    rax,[rsp+0x20]
  410b47:	mov    DWORD PTR [rsp+0x4],0x30
  410b4f:	mov    QWORD PTR [rsp+0x10],rax
  410b54:	call   405050 <__vfprintf_chk@plt>
  410b59:	mov    rdi,QWORD PTR [rbp+0xd0]
  410b60:	lea    rdx,[rip+0x33586]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  410b67:	xor    eax,eax
  410b69:	mov    esi,0x1
  410b6e:	call   4051f0 <__fprintf_chk@plt>
  410b73:	mov    rax,QWORD PTR [rsp+0x18]
  410b78:	xor    rax,QWORD PTR fs:0x28
  410b81:	jne    410bdf <__flatcc_fb_gen_c_verifier@@Base+0x91f>
  410b83:	add    rsp,0xd0
  410b8a:	pop    rbx
  410b8b:	pop    rbp
  410b8c:	pop    r12
  410b8e:	pop    r13
  410b90:	pop    r14
  410b92:	ret    
  410b93:	nop    DWORD PTR [rax+rax*1+0x0]
  410b98:	movabs rax,0x2020202020202020
  410ba2:	mov    QWORD PTR [rip+0x3f597],rax        # 450140 <__bss_start@@Base+0x20>
  410ba9:	mov    QWORD PTR [rip+0x3f598],rax        # 450148 <__bss_start@@Base+0x28>
  410bb0:	mov    QWORD PTR [rip+0x3f599],rax        # 450150 <__bss_start@@Base+0x30>
  410bb7:	mov    QWORD PTR [rip+0x3f59a],rax        # 450158 <__bss_start@@Base+0x38>
  410bbe:	mov    QWORD PTR [rip+0x3f59b],rax        # 450160 <__bss_start@@Base+0x40>
  410bc5:	mov    QWORD PTR [rip+0x3f59c],rax        # 450168 <__bss_start@@Base+0x48>
  410bcc:	mov    QWORD PTR [rip+0x3f59d],rax        # 450170 <__bss_start@@Base+0x50>
  410bd3:	mov    QWORD PTR [rip+0x3f59e],rax        # 450178 <__bss_start@@Base+0x58>
  410bda:	jmp    410a9d <__flatcc_fb_gen_c_verifier@@Base+0x7dd>
  410bdf:	call   4050d0 <__stack_chk_fail@plt>
  410be4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410bef:	nop
  410bf0:	lea    rsi,[rip+0x2f76c]        # 440363 <_IO_stdin_used@@Base+0x14363>
  410bf7:	xor    eax,eax
  410bf9:	jmp    410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410bfe:	xchg   ax,ax
  410c00:	jmp    410bf0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  410c02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410c0d:	nop    DWORD PTR [rax]
  410c10:	lea    rsi,[rip+0x2fc71]        # 440888 <_IO_stdin_used@@Base+0x14888>
  410c17:	xor    eax,eax
  410c19:	jmp    410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410c1e:	xchg   ax,ax
  410c20:	push   r15
  410c22:	push   r14
  410c24:	mov    r15,rdi
  410c27:	push   r13
  410c29:	push   r12
  410c2b:	mov    r13,rsi
  410c2e:	push   rbp
  410c2f:	push   rbx
  410c30:	mov    ebx,ecx
  410c32:	sub    ebx,edx
  410c34:	mov    r12d,edx
  410c37:	mov    r11d,ecx
  410c3a:	lea    eax,[rbx+0x1]
  410c3d:	sub    rsp,0x28
  410c41:	mov    r14d,r8d
  410c44:	mov    DWORD PTR [rsp+0x18],r9d
  410c49:	mov    ebx,eax
  410c4b:	shr    ebx,0x1f
  410c4e:	add    ebx,eax
  410c50:	sar    ebx,1
  410c52:	add    ebx,edx
  410c54:	movsxd rax,ebx
  410c57:	shl    rax,0x5
  410c5b:	mov    r10,rax
  410c5e:	add    rax,QWORD PTR [rsi]
  410c61:	mov    ebp,DWORD PTR [rax+0x8]
  410c64:	cmp    r8d,ebp
  410c67:	jg     410de0 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
  410c6d:	movsxd rdx,r8d
  410c70:	add    rdx,QWORD PTR [rax]
  410c73:	sub    ebp,r8d
  410c76:	cmp    ebp,0x8
  410c79:	mov    rax,rdx
  410c7c:	mov    QWORD PTR [rsp+0x8],rdx
  410c81:	mov    edx,0x8
  410c86:	cmovg  ebp,edx
  410c89:	test   ebp,ebp
  410c8b:	lea    edi,[rbp-0x1]
  410c8e:	je     410f59 <__flatcc_fb_gen_c_verifier@@Base+0xc99>
  410c94:	sub    edx,ebp
  410c96:	movsxd rdi,edi
  410c99:	xor    esi,esi
  410c9b:	shl    edx,0x3
  410c9e:	add    rdi,rax
  410ca1:	mov    eax,edx
  410ca3:	nop    DWORD PTR [rax+rax*1+0x0]
  410ca8:	movsx  rcx,BYTE PTR [rdi]
  410cac:	sub    rdi,0x1
  410cb0:	shlx   rcx,rcx,rax
  410cb5:	add    eax,0x8
  410cb8:	or     rsi,rcx
  410cbb:	cmp    eax,0x40
  410cbe:	jne    410ca8 <__flatcc_fb_gen_c_verifier@@Base+0x9e8>
  410cc0:	mov    rax,0xffffffffffffffff
  410cc7:	cmp    ebp,0x8
  410cca:	shlx   rdx,rax,rdx
  410ccf:	jne    410def <__flatcc_fb_gen_c_verifier@@Base+0xb2f>
  410cd5:	mov    r8,QWORD PTR [rsp+0x8]
  410cda:	mov    rdx,rsi
  410cdd:	lea    rsi,[rip+0x2fbe4]        # 4408c8 <_IO_stdin_used@@Base+0x148c8>
  410ce4:	xor    eax,eax
  410ce6:	mov    ecx,0x8
  410ceb:	mov    rdi,r15
  410cee:	mov    DWORD PTR [rsp+0x1c],r11d
  410cf3:	mov    QWORD PTR [rsp+0x10],r10
  410cf8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410cfd:	add    DWORD PTR [r15+0xf0],0x1
  410d05:	cmp    r12d,ebx
  410d08:	mov    r10,QWORD PTR [rsp+0x10]
  410d0d:	mov    r11d,DWORD PTR [rsp+0x1c]
  410d12:	jne    410e30 <__flatcc_fb_gen_c_verifier@@Base+0xb70>
  410d18:	mov    rax,r10
  410d1b:	add    rax,QWORD PTR [r13+0x0]
  410d1f:	mov    rsi,QWORD PTR [r13+0x18]
  410d23:	mov    r8d,ebp
  410d26:	mov    rdi,r15
  410d29:	mov    ecx,DWORD PTR [rax+0x18]
  410d2c:	mov    rdx,QWORD PTR [rax+0x10]
  410d30:	call   QWORD PTR [r13+0x8]
  410d34:	mov    eax,DWORD PTR [rsp+0x18]
  410d38:	test   eax,eax
  410d3a:	jle    410f6e <__flatcc_fb_gen_c_verifier@@Base+0xcae>
  410d40:	lea    rsi,[rip+0x2f62e]        # 440375 <_IO_stdin_used@@Base+0x14375>
  410d47:	mov    edx,eax
  410d49:	mov    rdi,r15
  410d4c:	xor    eax,eax
  410d4e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410d53:	mov    eax,DWORD PTR [r15+0xf0]
  410d5a:	test   eax,eax
  410d5c:	je     410fb8 <__flatcc_fb_gen_c_verifier@@Base+0xcf8>
  410d62:	sub    eax,0x1
  410d65:	lea    rsi,[rip+0x2f625]        # 440391 <_IO_stdin_used@@Base+0x14391>
  410d6c:	mov    rdi,r15
  410d6f:	mov    DWORD PTR [r15+0xf0],eax
  410d76:	xor    eax,eax
  410d78:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410d7d:	mov    eax,DWORD PTR [r15+0xf0]
  410d84:	test   eax,eax
  410d86:	je     410ff6 <__flatcc_fb_gen_c_verifier@@Base+0xd36>
  410d8c:	mov    rcx,QWORD PTR [rsp+0x8]
  410d91:	sub    eax,0x1
  410d94:	lea    rsi,[rip+0x2f5f8]        # 440393 <_IO_stdin_used@@Base+0x14393>
  410d9b:	mov    DWORD PTR [r15+0xf0],eax
  410da2:	mov    edx,ebp
  410da4:	xor    eax,eax
  410da6:	mov    rdi,r15
  410da9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410dae:	mov    eax,DWORD PTR [rsp+0x18]
  410db2:	add    DWORD PTR [r15+0xf0],0x1
  410dba:	test   eax,eax
  410dbc:	jle    410f62 <__flatcc_fb_gen_c_verifier@@Base+0xca2>
  410dc2:	lea    rsi,[rip+0x2f5ac]        # 440375 <_IO_stdin_used@@Base+0x14375>
  410dc9:	mov    edx,eax
  410dcb:	mov    rdi,r15
  410dce:	xor    eax,eax
  410dd0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410dd5:	jmp    410ea3 <__flatcc_fb_gen_c_verifier@@Base+0xbe3>
  410dda:	nop    WORD PTR [rax+rax*1+0x0]
  410de0:	xor    edx,edx
  410de2:	xor    esi,esi
  410de4:	xor    ebp,ebp
  410de6:	mov    QWORD PTR [rsp+0x8],0x0
  410def:	mov    r9,QWORD PTR [rsp+0x8]
  410df4:	mov    rcx,rsi
  410df7:	lea    rsi,[rip+0x2faea]        # 4408e8 <_IO_stdin_used@@Base+0x148e8>
  410dfe:	xor    eax,eax
  410e00:	mov    r8d,ebp
  410e03:	mov    rdi,r15
  410e06:	mov    DWORD PTR [rsp+0x1c],r11d
  410e0b:	mov    QWORD PTR [rsp+0x10],r10
  410e10:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410e15:	add    DWORD PTR [r15+0xf0],0x1
  410e1d:	cmp    r12d,ebx
  410e20:	mov    r11d,DWORD PTR [rsp+0x1c]
  410e25:	mov    r10,QWORD PTR [rsp+0x10]
  410e2a:	je     410d18 <__flatcc_fb_gen_c_verifier@@Base+0xa58>
  410e30:	cmp    r11d,ebx
  410e33:	je     410ee8 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
  410e39:	mov    r9d,DWORD PTR [rsp+0x18]
  410e3e:	mov    r8d,r14d
  410e41:	mov    ecx,r11d
  410e44:	mov    edx,ebx
  410e46:	mov    rsi,r13
  410e49:	mov    rdi,r15
  410e4c:	call   410c20 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  410e51:	mov    eax,DWORD PTR [r15+0xf0]
  410e58:	test   eax,eax
  410e5a:	je     410f7a <__flatcc_fb_gen_c_verifier@@Base+0xcba>
  410e60:	mov    rcx,QWORD PTR [rsp+0x8]
  410e65:	sub    eax,0x1
  410e68:	lea    rsi,[rip+0x2f524]        # 440393 <_IO_stdin_used@@Base+0x14393>
  410e6f:	mov    DWORD PTR [r15+0xf0],eax
  410e76:	mov    edx,ebp
  410e78:	mov    rdi,r15
  410e7b:	xor    eax,eax
  410e7d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410e82:	add    DWORD PTR [r15+0xf0],0x1
  410e8a:	mov    r9d,DWORD PTR [rsp+0x18]
  410e8f:	lea    ecx,[rbx-0x1]
  410e92:	mov    r8d,r14d
  410e95:	mov    edx,r12d
  410e98:	mov    rsi,r13
  410e9b:	mov    rdi,r15
  410e9e:	call   410c20 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  410ea3:	mov    eax,DWORD PTR [r15+0xf0]
  410eaa:	test   eax,eax
  410eac:	je     410f99 <__flatcc_fb_gen_c_verifier@@Base+0xcd9>
  410eb2:	sub    eax,0x1
  410eb5:	mov    rcx,QWORD PTR [rsp+0x8]
  410eba:	mov    edx,ebp
  410ebc:	mov    DWORD PTR [r15+0xf0],eax
  410ec3:	add    rsp,0x28
  410ec7:	mov    rdi,r15
  410eca:	pop    rbx
  410ecb:	pop    rbp
  410ecc:	pop    r12
  410ece:	pop    r13
  410ed0:	pop    r14
  410ed2:	pop    r15
  410ed4:	lea    rsi,[rip+0x2f4ce]        # 4403a9 <_IO_stdin_used@@Base+0x143a9>
  410edb:	xor    eax,eax
  410edd:	jmp    410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410ee2:	nop    WORD PTR [rax+rax*1+0x0]
  410ee8:	mov    rax,r10
  410eeb:	add    rax,QWORD PTR [r13+0x0]
  410eef:	mov    rsi,QWORD PTR [r13+0x18]
  410ef3:	mov    r8d,ebp
  410ef6:	mov    rdi,r15
  410ef9:	mov    ecx,DWORD PTR [rax+0x18]
  410efc:	mov    rdx,QWORD PTR [rax+0x10]
  410f00:	call   QWORD PTR [r13+0x8]
  410f04:	mov    eax,DWORD PTR [rsp+0x18]
  410f08:	test   eax,eax
  410f0a:	jle    410f50 <__flatcc_fb_gen_c_verifier@@Base+0xc90>
  410f0c:	lea    rsi,[rip+0x2f462]        # 440375 <_IO_stdin_used@@Base+0x14375>
  410f13:	mov    edx,eax
  410f15:	mov    rdi,r15
  410f18:	xor    eax,eax
  410f1a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410f1f:	mov    eax,DWORD PTR [r15+0xf0]
  410f26:	test   eax,eax
  410f28:	je     410fd7 <__flatcc_fb_gen_c_verifier@@Base+0xd17>
  410f2e:	sub    eax,0x1
  410f31:	lea    rsi,[rip+0x2f459]        # 440391 <_IO_stdin_used@@Base+0x14391>
  410f38:	mov    rdi,r15
  410f3b:	mov    DWORD PTR [r15+0xf0],eax
  410f42:	xor    eax,eax
  410f44:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  410f49:	jmp    410e51 <__flatcc_fb_gen_c_verifier@@Base+0xb91>
  410f4e:	xchg   ax,ax
  410f50:	mov    rdi,r15
  410f53:	call   QWORD PTR [r13+0x10]
  410f57:	jmp    410f1f <__flatcc_fb_gen_c_verifier@@Base+0xc5f>
  410f59:	xor    edx,edx
  410f5b:	xor    esi,esi
  410f5d:	jmp    410def <__flatcc_fb_gen_c_verifier@@Base+0xb2f>
  410f62:	mov    rdi,r15
  410f65:	call   QWORD PTR [r13+0x10]
  410f69:	jmp    410ea3 <__flatcc_fb_gen_c_verifier@@Base+0xbe3>
  410f6e:	mov    rdi,r15
  410f71:	call   QWORD PTR [r13+0x10]
  410f75:	jmp    410d53 <__flatcc_fb_gen_c_verifier@@Base+0xa93>
  410f7a:	lea    rcx,[rip+0x31abf]        # 442a40 <_IO_stdin_used@@Base+0x16a40>
  410f81:	lea    rsi,[rip+0x2f990]        # 440918 <_IO_stdin_used@@Base+0x14918>
  410f88:	lea    rdi,[rip+0x2f3f6]        # 440385 <_IO_stdin_used@@Base+0x14385>
  410f8f:	mov    edx,0x38b
  410f94:	call   4050f0 <__assert_fail@plt>
  410f99:	lea    rcx,[rip+0x31aa0]        # 442a40 <_IO_stdin_used@@Base+0x16a40>
  410fa0:	lea    rsi,[rip+0x2f971]        # 440918 <_IO_stdin_used@@Base+0x14918>
  410fa7:	lea    rdi,[rip+0x2f3d7]        # 440385 <_IO_stdin_used@@Base+0x14385>
  410fae:	mov    edx,0x38e
  410fb3:	call   4050f0 <__assert_fail@plt>
  410fb8:	lea    rcx,[rip+0x31a81]        # 442a40 <_IO_stdin_used@@Base+0x16a40>
  410fbf:	lea    rsi,[rip+0x2f952]        # 440918 <_IO_stdin_used@@Base+0x14918>
  410fc6:	lea    rdi,[rip+0x2f3b8]        # 440385 <_IO_stdin_used@@Base+0x14385>
  410fcd:	mov    edx,0x378
  410fd2:	call   4050f0 <__assert_fail@plt>
  410fd7:	lea    rcx,[rip+0x31a62]        # 442a40 <_IO_stdin_used@@Base+0x16a40>
  410fde:	lea    rsi,[rip+0x2f933]        # 440918 <_IO_stdin_used@@Base+0x14918>
  410fe5:	lea    rdi,[rip+0x2f399]        # 440385 <_IO_stdin_used@@Base+0x14385>
  410fec:	mov    edx,0x387
  410ff1:	call   4050f0 <__assert_fail@plt>
  410ff6:	lea    rcx,[rip+0x31a43]        # 442a40 <_IO_stdin_used@@Base+0x16a40>
  410ffd:	lea    rsi,[rip+0x2f914]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411004:	lea    rdi,[rip+0x2f37a]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41100b:	mov    edx,0x379
  411010:	call   4050f0 <__assert_fail@plt>
  411015:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411020:	push   r15
  411022:	push   r14
  411024:	push   r13
  411026:	push   r12
  411028:	push   rbp
  411029:	push   rbx
  41102a:	sub    rsp,0x38
  41102e:	mov    rax,QWORD PTR [rsi]
  411031:	mov    rbx,rax
  411034:	mov    QWORD PTR [rsp+0x18],rax
  411039:	movsxd rax,edx
  41103c:	shl    rax,0x5
  411040:	add    rax,rbx
  411043:	mov    r14d,DWORD PTR [rax+0x8]
  411047:	mov    QWORD PTR [rsp+0x20],rax
  41104c:	lea    eax,[r8+0x7]
  411050:	mov    DWORD PTR [rsp+0x28],eax
  411054:	cmp    eax,r14d
  411057:	jge    411430 <__flatcc_fb_gen_c_verifier@@Base+0x1170>
  41105d:	mov    eax,r14d
  411060:	sub    eax,r8d
  411063:	cmp    eax,0x8
  411066:	je     411430 <__flatcc_fb_gen_c_verifier@@Base+0x1170>
  41106c:	mov    eax,ecx
  41106e:	mov    ebx,r8d
  411071:	mov    DWORD PTR [rsp+0xc],ecx
  411075:	sub    eax,edx
  411077:	mov    r15d,edx
  41107a:	mov    QWORD PTR [rsp+0x10],rsi
  41107f:	mov    r12d,eax
  411082:	mov    QWORD PTR [rsp],rdi
  411086:	shr    r12d,0x1f
  41108a:	add    r12d,eax
  41108d:	sar    r12d,1
  411090:	add    r12d,edx
  411093:	cmp    edx,r12d
  411096:	jge    4111ac <__flatcc_fb_gen_c_verifier@@Base+0xeec>
  41109c:	movsxd r10,r12d
  41109f:	movsxd rax,ebx
  4110a2:	mov    ebp,r12d
  4110a5:	shl    r10,0x5
  4110a9:	add    r10,QWORD PTR [rsp+0x18]
  4110ae:	mov    DWORD PTR [rsp+0x2c],r12d
  4110b3:	xor    r9d,r9d
  4110b6:	xor    r8d,r8d
  4110b9:	xor    edi,edi
  4110bb:	mov    ecx,0x8
  4110c0:	mov    r12,rax
  4110c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4110c8:	mov    eax,DWORD PTR [r10-0x18]
  4110cc:	cmp    ebx,eax
  4110ce:	jg     411131 <__flatcc_fb_gen_c_verifier@@Base+0xe71>
  4110d0:	sub    eax,ebx
  4110d2:	cmp    eax,0x8
  4110d5:	cmovg  eax,ecx
  4110d8:	test   eax,eax
  4110da:	mov    r8d,eax
  4110dd:	lea    esi,[rax-0x1]
  4110e0:	je     4115ae <__flatcc_fb_gen_c_verifier@@Base+0x12ee>
  4110e6:	movsxd rsi,esi
  4110e9:	mov    eax,ecx
  4110eb:	xor    edi,edi
  4110ed:	add    rsi,r12
  4110f0:	add    rsi,QWORD PTR [r10-0x20]
  4110f4:	sub    eax,r8d
  4110f7:	shl    eax,0x3
  4110fa:	nop    WORD PTR [rax+rax*1+0x0]
  411100:	movsx  rdx,BYTE PTR [rsi]
  411104:	sub    rsi,0x1
  411108:	shlx   rdx,rdx,rax
  41110d:	add    eax,0x8
  411110:	or     rdi,rdx
  411113:	cmp    eax,0x40
  411116:	jne    411100 <__flatcc_fb_gen_c_verifier@@Base+0xe40>
  411118:	mov    eax,ecx
  41111a:	sub    eax,r8d
  41111d:	mov    r8d,eax
  411120:	mov    eax,0x1
  411125:	shl    r8d,0x3
  411129:	shlx   r8,rax,r8
  41112e:	neg    r8
  411131:	mov    r11d,DWORD PTR [r10+0x8]
  411135:	mov    r13,QWORD PTR [r10]
  411138:	cmp    ebx,r11d
  41113b:	jg     411188 <__flatcc_fb_gen_c_verifier@@Base+0xec8>
  41113d:	mov    eax,r11d
  411140:	sub    eax,ebx
  411142:	cmp    eax,0x8
  411145:	cmovg  eax,ecx
  411148:	test   eax,eax
  41114a:	lea    esi,[rax-0x1]
  41114d:	je     4115b5 <__flatcc_fb_gen_c_verifier@@Base+0x12f5>
  411153:	mov    edx,ecx
  411155:	movsxd rsi,esi
  411158:	xor    r9d,r9d
  41115b:	sub    edx,eax
  41115d:	add    rsi,r12
  411160:	mov    eax,edx
  411162:	add    rsi,r13
  411165:	shl    eax,0x3
  411168:	nop    DWORD PTR [rax+rax*1+0x0]
  411170:	movsx  rdx,BYTE PTR [rsi]
  411174:	sub    rsi,0x1
  411178:	shlx   rdx,rdx,rax
  41117d:	add    eax,0x8
  411180:	or     r9,rdx
  411183:	cmp    eax,0x40
  411186:	jne    411170 <__flatcc_fb_gen_c_verifier@@Base+0xeb0>
  411188:	mov    rax,rdi
  41118b:	xor    rax,r9
  41118e:	test   rax,r8
  411191:	jne    4114e4 <__flatcc_fb_gen_c_verifier@@Base+0x1224>
  411197:	sub    ebp,0x1
  41119a:	sub    r10,0x20
  41119e:	cmp    r15d,ebp
  4111a1:	jne    4110c8 <__flatcc_fb_gen_c_verifier@@Base+0xe08>
  4111a7:	mov    r12d,DWORD PTR [rsp+0x2c]
  4111ac:	cmp    DWORD PTR [rsp+0xc],r12d
  4111b1:	jle    4112b4 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
  4111b7:	movsxd r8,r12d
  4111ba:	mov    r13d,DWORD PTR [rsp+0xc]
  4111bf:	xor    edi,edi
  4111c1:	shl    r8,0x5
  4111c5:	add    r8,QWORD PTR [rsp+0x18]
  4111ca:	xor    r11d,r11d
  4111cd:	xor    esi,esi
  4111cf:	movsxd r10,ebx
  4111d2:	mov    r9d,0x8
  4111d8:	mov    ebp,0x1
  4111dd:	nop    DWORD PTR [rax]
  4111e0:	mov    eax,DWORD PTR [r8+0x8]
  4111e4:	cmp    ebx,eax
  4111e6:	jg     411245 <__flatcc_fb_gen_c_verifier@@Base+0xf85>
  4111e8:	sub    eax,ebx
  4111ea:	cmp    eax,0x8
  4111ed:	cmovg  eax,r9d
  4111f1:	mov    r11d,eax
  4111f4:	lea    eax,[rax-0x1]
  4111f7:	test   r11d,r11d
  4111fa:	je     411703 <__flatcc_fb_gen_c_verifier@@Base+0x1443>
  411200:	movsxd rcx,eax
  411203:	mov    eax,r9d
  411206:	xor    esi,esi
  411208:	add    rcx,r10
  41120b:	add    rcx,QWORD PTR [r8]
  41120e:	sub    eax,r11d
  411211:	shl    eax,0x3
  411214:	nop    DWORD PTR [rax+0x0]
  411218:	movsx  rdx,BYTE PTR [rcx]
  41121c:	sub    rcx,0x1
  411220:	shlx   rdx,rdx,rax
  411225:	add    eax,0x8
  411228:	or     rsi,rdx
  41122b:	cmp    eax,0x40
  41122e:	jne    411218 <__flatcc_fb_gen_c_verifier@@Base+0xf58>
  411230:	mov    eax,r9d
  411233:	sub    eax,r11d
  411236:	mov    r11d,eax
  411239:	shl    r11d,0x3
  41123d:	shlx   r11,rbp,r11
  411242:	neg    r11
  411245:	mov    eax,DWORD PTR [r8+0x28]
  411249:	cmp    ebx,eax
  41124b:	jg     411298 <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
  41124d:	sub    eax,ebx
  41124f:	cmp    eax,0x8
  411252:	cmovg  eax,r9d
  411256:	test   eax,eax
  411258:	lea    edx,[rax-0x1]
  41125b:	je     4116fc <__flatcc_fb_gen_c_verifier@@Base+0x143c>
  411261:	movsxd rcx,edx
  411264:	mov    edi,r9d
  411267:	add    rcx,r10
  41126a:	add    rcx,QWORD PTR [r8+0x20]
  41126e:	sub    edi,eax
  411270:	mov    eax,edi
  411272:	xor    edi,edi
  411274:	shl    eax,0x3
  411277:	nop    WORD PTR [rax+rax*1+0x0]
  411280:	movsx  rdx,BYTE PTR [rcx]
  411284:	sub    rcx,0x1
  411288:	shlx   rdx,rdx,rax
  41128d:	add    eax,0x8
  411290:	or     rdi,rdx
  411293:	cmp    eax,0x40
  411296:	jne    411280 <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
  411298:	mov    rax,rsi
  41129b:	xor    rax,rdi
  41129e:	test   rax,r11
  4112a1:	jne    4112b4 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
  4112a3:	add    r12d,0x1
  4112a7:	add    r8,0x20
  4112ab:	cmp    r13d,r12d
  4112ae:	jne    4111e0 <__flatcc_fb_gen_c_verifier@@Base+0xf20>
  4112b4:	lea    r13d,[r12+0x1]
  4112b9:	cmp    r15d,r13d
  4112bc:	jge    4118ac <__flatcc_fb_gen_c_verifier@@Base+0x15ec>
  4112c2:	mov    rax,QWORD PTR [rsp+0x20]
  4112c7:	mov    ebp,r15d
  4112ca:	mov    edx,DWORD PTR [rsp+0x28]
  4112ce:	jmp    4112d4 <__flatcc_fb_gen_c_verifier@@Base+0x1014>
  4112d0:	mov    r14d,DWORD PTR [rax+0x8]
  4112d4:	cmp    edx,r14d
  4112d7:	jge    4112e7 <__flatcc_fb_gen_c_verifier@@Base+0x1027>
  4112d9:	mov    ecx,r14d
  4112dc:	sub    ecx,ebx
  4112de:	cmp    ecx,0x8
  4112e1:	jg     411615 <__flatcc_fb_gen_c_verifier@@Base+0x1355>
  4112e7:	add    ebp,0x1
  4112ea:	add    rax,0x20
  4112ee:	cmp    ebp,r13d
  4112f1:	jne    4112d0 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
  4112f3:	lea    r14,[rip+0x32df4]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4112fa:	mov    DWORD PTR [rsp+0x28],ebp
  4112fe:	mov    DWORD PTR [rsp+0x18],0x0
  411306:	cmp    ebp,r15d
  411309:	setg   dl
  41130c:	cmp    DWORD PTR [rsp+0xc],r13d
  411311:	setge  al
  411314:	and    al,dl
  411316:	je     411477 <__flatcc_fb_gen_c_verifier@@Base+0x11b7>
  41131c:	mov    rdi,QWORD PTR [rsp+0x10]
  411321:	mov    ecx,DWORD PTR [rdi+0x28]
  411324:	lea    r12d,[rcx+0x1]
  411328:	mov    DWORD PTR [rsp+0x20],ecx
  41132c:	mov    DWORD PTR [rdi+0x28],r12d
  411330:	mov    rsi,QWORD PTR [rsp+0x10]
  411335:	mov    rdi,QWORD PTR [rsp]
  411339:	lea    ecx,[rbp-0x1]
  41133c:	mov    r9d,r12d
  41133f:	mov    r8d,ebx
  411342:	mov    edx,r15d
  411345:	mov    BYTE PTR [rsp+0x20],al
  411349:	call   410c20 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  41134e:	movzx  eax,BYTE PTR [rsp+0x20]
  411353:	test   al,al
  411355:	je     411480 <__flatcc_fb_gen_c_verifier@@Base+0x11c0>
  41135b:	mov    r15,QWORD PTR [rsp]
  41135f:	lea    rsi,[rip+0x2f0e6]        # 44044c <_IO_stdin_used@@Base+0x1444c>
  411366:	xor    eax,eax
  411368:	mov    edx,r12d
  41136b:	mov    rdi,r15
  41136e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411373:	mov    eax,DWORD PTR [r15+0xf0]
  41137a:	lea    rsi,[rip+0x2f0e1]        # 440462 <_IO_stdin_used@@Base+0x14462>
  411381:	mov    rdi,r15
  411384:	mov    edx,r12d
  411387:	mov    DWORD PTR [r15+0xf0],0x0
  411392:	mov    DWORD PTR [r15+0xf8],eax
  411399:	xor    eax,eax
  41139b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4113a0:	mov    eax,DWORD PTR [r15+0xf8]
  4113a7:	mov    ecx,DWORD PTR [rsp+0xc]
  4113ab:	mov    r8d,ebx
  4113ae:	mov    rsi,QWORD PTR [rsp+0x10]
  4113b3:	mov    rdi,r15
  4113b6:	mov    edx,r13d
  4113b9:	mov    DWORD PTR [r15+0xf0],eax
  4113c0:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4113c5:	mov    eax,DWORD PTR [r15+0xf0]
  4113cc:	lea    rsi,[rip+0x2f08c]        # 44045f <_IO_stdin_used@@Base+0x1445f>
  4113d3:	mov    rdi,r15
  4113d6:	mov    edx,r12d
  4113d9:	mov    DWORD PTR [r15+0xf0],0x0
  4113e4:	mov    DWORD PTR [r15+0xf8],eax
  4113eb:	xor    eax,eax
  4113ed:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4113f2:	mov    eax,DWORD PTR [r15+0xf8]
  4113f9:	lea    rsi,[rip+0x2f06d]        # 44046d <_IO_stdin_used@@Base+0x1446d>
  411400:	mov    rdi,r15
  411403:	mov    DWORD PTR [r15+0xf0],eax
  41140a:	xor    eax,eax
  41140c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411411:	cmp    r13d,DWORD PTR [rsp+0x28]
  411416:	jg     41149f <__flatcc_fb_gen_c_verifier@@Base+0x11df>
  41141c:	add    rsp,0x38
  411420:	pop    rbx
  411421:	pop    rbp
  411422:	pop    r12
  411424:	pop    r13
  411426:	pop    r14
  411428:	pop    r15
  41142a:	ret    
  41142b:	nop    DWORD PTR [rax+rax*1+0x0]
  411430:	cmp    edx,ecx
  411432:	je     411461 <__flatcc_fb_gen_c_verifier@@Base+0x11a1>
  411434:	lea    eax,[rdx+0x1]
  411437:	cmp    ecx,eax
  411439:	jne    41106c <__flatcc_fb_gen_c_verifier@@Base+0xdac>
  41143f:	mov    rbx,QWORD PTR [rsp+0x18]
  411444:	movsxd rax,ecx
  411447:	shl    rax,0x5
  41144b:	mov    eax,DWORD PTR [rbx+rax*1+0x8]
  41144f:	cmp    DWORD PTR [rsp+0x28],eax
  411453:	jge    411461 <__flatcc_fb_gen_c_verifier@@Base+0x11a1>
  411455:	sub    eax,r8d
  411458:	cmp    eax,0x8
  41145b:	jne    41106c <__flatcc_fb_gen_c_verifier@@Base+0xdac>
  411461:	add    rsp,0x38
  411465:	xor    r9d,r9d
  411468:	pop    rbx
  411469:	pop    rbp
  41146a:	pop    r12
  41146c:	pop    r13
  41146e:	pop    r14
  411470:	pop    r15
  411472:	jmp    410c20 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  411477:	cmp    ebp,r15d
  41147a:	jg     411903 <__flatcc_fb_gen_c_verifier@@Base+0x1643>
  411480:	cmp    DWORD PTR [rsp+0xc],r13d
  411485:	jge    4118c7 <__flatcc_fb_gen_c_verifier@@Base+0x1607>
  41148b:	cmp    ebp,r15d
  41148e:	jle    411882 <__flatcc_fb_gen_c_verifier@@Base+0x15c2>
  411494:	cmp    r13d,DWORD PTR [rsp+0x28]
  411499:	jle    41141c <__flatcc_fb_gen_c_verifier@@Base+0x115c>
  41149f:	mov    rax,QWORD PTR [rsp]
  4114a3:	mov    eax,DWORD PTR [rax+0xf0]
  4114a9:	test   eax,eax
  4114ab:	je     411949 <__flatcc_fb_gen_c_verifier@@Base+0x1689>
  4114b1:	mov    rbx,QWORD PTR [rsp]
  4114b5:	mov    edx,DWORD PTR [rsp+0x18]
  4114b9:	sub    eax,0x1
  4114bc:	lea    rsi,[rip+0x2efb3]        # 440476 <_IO_stdin_used@@Base+0x14476>
  4114c3:	mov    rcx,r14
  4114c6:	mov    DWORD PTR [rbx+0xf0],eax
  4114cc:	add    rsp,0x38
  4114d0:	mov    rdi,rbx
  4114d3:	xor    eax,eax
  4114d5:	pop    rbx
  4114d6:	pop    rbp
  4114d7:	pop    r12
  4114d9:	pop    r13
  4114db:	pop    r14
  4114dd:	pop    r15
  4114df:	jmp    410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4114e4:	cmp    ebx,r11d
  4114e7:	jle    4115bd <__flatcc_fb_gen_c_verifier@@Base+0x12fd>
  4114ed:	xor    edx,edx
  4114ef:	xor    r13d,r13d
  4114f2:	xor    r12d,r12d
  4114f5:	mov    r14,QWORD PTR [rsp]
  4114f9:	lea    rsi,[rip+0x2f488]        # 440988 <_IO_stdin_used@@Base+0x14988>
  411500:	xor    eax,eax
  411502:	mov    r8,r13
  411505:	mov    ecx,r12d
  411508:	mov    rdi,r14
  41150b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411510:	add    DWORD PTR [r14+0xf0],0x1
  411518:	mov    rsi,QWORD PTR [rsp+0x10]
  41151d:	lea    ecx,[rbp-0x1]
  411520:	mov    r8d,ebx
  411523:	mov    edx,r15d
  411526:	mov    rdi,r14
  411529:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  41152e:	mov    eax,DWORD PTR [r14+0xf0]
  411535:	test   eax,eax
  411537:	je     411968 <__flatcc_fb_gen_c_verifier@@Base+0x16a8>
  41153d:	mov    r14,QWORD PTR [rsp]
  411541:	sub    eax,0x1
  411544:	lea    rsi,[rip+0x2ee6d]        # 4403b8 <_IO_stdin_used@@Base+0x143b8>
  41154b:	mov    rcx,r13
  41154e:	mov    edx,r12d
  411551:	mov    rdi,r14
  411554:	mov    DWORD PTR [r14+0xf0],eax
  41155b:	xor    eax,eax
  41155d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411562:	add    DWORD PTR [r14+0xf0],0x1
  41156a:	mov    ecx,DWORD PTR [rsp+0xc]
  41156e:	mov    rdi,r14
  411571:	mov    rsi,QWORD PTR [rsp+0x10]
  411576:	mov    r8d,ebx
  411579:	mov    edx,ebp
  41157b:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  411580:	mov    eax,DWORD PTR [r14+0xf0]
  411587:	test   eax,eax
  411589:	je     41192a <__flatcc_fb_gen_c_verifier@@Base+0x166a>
  41158f:	mov    rbx,QWORD PTR [rsp]
  411593:	sub    eax,0x1
  411596:	mov    rcx,r13
  411599:	mov    edx,r12d
  41159c:	lea    rsi,[rip+0x2ee32]        # 4403d5 <_IO_stdin_used@@Base+0x143d5>
  4115a3:	mov    DWORD PTR [rbx+0xf0],eax
  4115a9:	jmp    4114cc <__flatcc_fb_gen_c_verifier@@Base+0x120c>
  4115ae:	xor    edi,edi
  4115b0:	jmp    411118 <__flatcc_fb_gen_c_verifier@@Base+0xe58>
  4115b5:	xor    r9d,r9d
  4115b8:	jmp    411188 <__flatcc_fb_gen_c_verifier@@Base+0xec8>
  4115bd:	movsxd rax,ebx
  4115c0:	sub    r11d,ebx
  4115c3:	add    r13,rax
  4115c6:	cmp    r11d,0x8
  4115ca:	mov    eax,0x8
  4115cf:	cmovg  r11d,eax
  4115d3:	test   r11d,r11d
  4115d6:	mov    r12d,r11d
  4115d9:	lea    edx,[r11-0x1]
  4115dd:	je     4118a5 <__flatcc_fb_gen_c_verifier@@Base+0x15e5>
  4115e3:	movsxd rdx,edx
  4115e6:	sub    eax,r11d
  4115e9:	lea    rsi,[r13+rdx*1+0x0]
  4115ee:	shl    eax,0x3
  4115f1:	xor    edx,edx
  4115f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4115f8:	movsx  rcx,BYTE PTR [rsi]
  4115fc:	sub    rsi,0x1
  411600:	shlx   rcx,rcx,rax
  411605:	add    eax,0x8
  411608:	or     rdx,rcx
  41160b:	cmp    eax,0x40
  41160e:	jne    4115f8 <__flatcc_fb_gen_c_verifier@@Base+0x1338>
  411610:	jmp    4114f5 <__flatcc_fb_gen_c_verifier@@Base+0x1235>
  411615:	mov    rax,QWORD PTR [rsp+0x18]
  41161a:	movsxd r9,ebp
  41161d:	shl    r9,0x5
  411621:	add    rax,r9
  411624:	cmp    r15d,ebp
  411627:	jl     41170a <__flatcc_fb_gen_c_verifier@@Base+0x144a>
  41162d:	lea    edi,[rbx+0x8]
  411630:	mov    DWORD PTR [rsp+0x28],edi
  411634:	xor    r11d,r11d
  411637:	cmp    ebx,r14d
  41163a:	mov    rdx,QWORD PTR [rax]
  41163d:	jle    41173b <__flatcc_fb_gen_c_verifier@@Base+0x147b>
  411643:	mov    r14,QWORD PTR [rsp]
  411647:	lea    rsi,[rip+0x2f362]        # 4409b0 <_IO_stdin_used@@Base+0x149b0>
  41164e:	xor    r8d,r8d
  411651:	xor    ecx,ecx
  411653:	xor    edx,edx
  411655:	xor    eax,eax
  411657:	mov    rdi,r14
  41165a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41165f:	add    DWORD PTR [r14+0xf0],0x1
  411667:	mov    DWORD PTR [rsp+0x18],0x0
  41166f:	xor    r14d,r14d
  411672:	mov    rdi,QWORD PTR [rsp]
  411676:	lea    rsi,[rip+0x2ed8a]        # 440407 <_IO_stdin_used@@Base+0x14407>
  41167d:	xor    eax,eax
  41167f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411684:	mov    rdi,QWORD PTR [rsp]
  411688:	lea    rsi,[rip+0x2f369]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  41168f:	xor    eax,eax
  411691:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411696:	mov    r8d,DWORD PTR [rsp+0x28]
  41169b:	mov    rsi,QWORD PTR [rsp+0x10]
  4116a0:	mov    ecx,r12d
  4116a3:	mov    rdi,QWORD PTR [rsp]
  4116a7:	mov    edx,ebp
  4116a9:	mov    r12d,ebp
  4116ac:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4116b1:	mov    rax,QWORD PTR [rsp]
  4116b5:	mov    eax,DWORD PTR [rax+0xf0]
  4116bb:	test   eax,eax
  4116bd:	je     41190b <__flatcc_fb_gen_c_verifier@@Base+0x164b>
  4116c3:	mov    rdi,QWORD PTR [rsp]
  4116c7:	mov    edx,DWORD PTR [rsp+0x18]
  4116cb:	sub    eax,0x1
  4116ce:	lea    rsi,[rip+0x2ed59]        # 44042e <_IO_stdin_used@@Base+0x1442e>
  4116d5:	mov    rcx,r14
  4116d8:	mov    DWORD PTR [rdi+0xf0],eax
  4116de:	xor    eax,eax
  4116e0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4116e5:	mov    rdi,QWORD PTR [rsp]
  4116e9:	mov    DWORD PTR [rsp+0x28],ebp
  4116ed:	mov    ebp,r12d
  4116f0:	add    DWORD PTR [rdi+0xf0],0x1
  4116f7:	jmp    411306 <__flatcc_fb_gen_c_verifier@@Base+0x1046>
  4116fc:	xor    edi,edi
  4116fe:	jmp    411298 <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
  411703:	xor    esi,esi
  411705:	jmp    411230 <__flatcc_fb_gen_c_verifier@@Base+0xf70>
  41170a:	mov    rdi,QWORD PTR [rsp+0x18]
  41170f:	mov    edx,DWORD PTR [rdi+r9*1-0x18]
  411714:	lea    edi,[rbx+0x8]
  411717:	mov    DWORD PTR [rsp+0x28],edi
  41171b:	cmp    edx,edi
  41171d:	jg     411634 <__flatcc_fb_gen_c_verifier@@Base+0x1374>
  411723:	sub    edx,ebx
  411725:	xor    r11d,r11d
  411728:	cmp    edx,0x8
  41172b:	mov    rdx,QWORD PTR [rax]
  41172e:	sete   r11b
  411732:	cmp    ebx,r14d
  411735:	jg     411893 <__flatcc_fb_gen_c_verifier@@Base+0x15d3>
  41173b:	movsxd rax,ebx
  41173e:	lea    r14,[rdx+rax*1]
  411742:	xor    eax,eax
  411744:	xor    edx,edx
  411746:	lea    rsi,[r14+0x7]
  41174a:	nop    WORD PTR [rax+rax*1+0x0]
  411750:	movsx  rcx,BYTE PTR [rsi]
  411754:	sub    rsi,0x1
  411758:	shlx   rcx,rcx,rax
  41175d:	add    eax,0x8
  411760:	or     rdx,rcx
  411763:	cmp    eax,0x40
  411766:	jne    411750 <__flatcc_fb_gen_c_verifier@@Base+0x1490>
  411768:	mov    DWORD PTR [rsp+0x18],0x8
  411770:	mov    ecx,DWORD PTR [rsp+0x18]
  411774:	mov    rdi,QWORD PTR [rsp]
  411778:	lea    rsi,[rip+0x2f231]        # 4409b0 <_IO_stdin_used@@Base+0x149b0>
  41177f:	xor    eax,eax
  411781:	mov    r8,r14
  411784:	mov    DWORD PTR [rsp+0x2c],r11d
  411789:	mov    QWORD PTR [rsp+0x20],r9
  41178e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411793:	mov    rax,QWORD PTR [rsp]
  411797:	mov    r11d,DWORD PTR [rsp+0x2c]
  41179c:	add    DWORD PTR [rax+0xf0],0x1
  4117a3:	test   r11d,r11d
  4117a6:	je     411672 <__flatcc_fb_gen_c_verifier@@Base+0x13b2>
  4117ac:	mov    edx,DWORD PTR [rsp+0x18]
  4117b0:	lea    rsi,[rip+0x2f221]        # 4409d8 <_IO_stdin_used@@Base+0x149d8>
  4117b7:	mov    rdi,rax
  4117ba:	mov    rcx,r14
  4117bd:	xor    eax,eax
  4117bf:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4117c4:	mov    r11,QWORD PTR [rsp+0x10]
  4117c9:	mov    r9,QWORD PTR [rsp+0x20]
  4117ce:	mov    r8d,0x8
  4117d4:	mov    rdi,QWORD PTR [rsp]
  4117d8:	mov    rax,QWORD PTR [r11]
  4117db:	mov    rsi,QWORD PTR [r11+0x18]
  4117df:	lea    rax,[rax+r9*1-0x20]
  4117e4:	mov    ecx,DWORD PTR [rax+0x18]
  4117e7:	mov    rdx,QWORD PTR [rax+0x10]
  4117eb:	call   QWORD PTR [r11+0x8]
  4117ef:	mov    edx,DWORD PTR [rsp+0x18]
  4117f3:	mov    rdi,QWORD PTR [rsp]
  4117f7:	lea    rsi,[rip+0x2ebed]        # 4403eb <_IO_stdin_used@@Base+0x143eb>
  4117fe:	mov    rcx,r14
  411801:	xor    eax,eax
  411803:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411808:	mov    rdi,QWORD PTR [rsp]
  41180c:	lea    rsi,[rip+0x2ebf4]        # 440407 <_IO_stdin_used@@Base+0x14407>
  411813:	xor    eax,eax
  411815:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41181a:	mov    rdi,QWORD PTR [rsp]
  41181e:	lea    rsi,[rip+0x2f1d3]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  411825:	xor    eax,eax
  411827:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41182c:	mov    ecx,r12d
  41182f:	mov    r12,QWORD PTR [rsp]
  411833:	mov    r8d,DWORD PTR [rsp+0x28]
  411838:	mov    rsi,QWORD PTR [rsp+0x10]
  41183d:	mov    edx,ebp
  41183f:	mov    rdi,r12
  411842:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  411847:	mov    eax,DWORD PTR [r12+0xf0]
  41184f:	test   eax,eax
  411851:	je     4118e4 <__flatcc_fb_gen_c_verifier@@Base+0x1624>
  411857:	mov    rdi,QWORD PTR [rsp]
  41185b:	mov    edx,DWORD PTR [rsp+0x18]
  41185f:	sub    eax,0x1
  411862:	lea    rsi,[rip+0x2eba8]        # 440411 <_IO_stdin_used@@Base+0x14411>
  411869:	mov    rcx,r14
  41186c:	lea    r12d,[rbp-0x1]
  411870:	mov    DWORD PTR [rdi+0xf0],eax
  411876:	xor    eax,eax
  411878:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41187d:	jmp    4116b1 <__flatcc_fb_gen_c_verifier@@Base+0x13f1>
  411882:	mov    rax,QWORD PTR [rsp+0x10]
  411887:	mov    rdi,QWORD PTR [rsp]
  41188b:	call   QWORD PTR [rax+0x10]
  41188e:	jmp    411494 <__flatcc_fb_gen_c_verifier@@Base+0x11d4>
  411893:	xor    edx,edx
  411895:	xor    r14d,r14d
  411898:	mov    DWORD PTR [rsp+0x18],0x0
  4118a0:	jmp    411770 <__flatcc_fb_gen_c_verifier@@Base+0x14b0>
  4118a5:	xor    edx,edx
  4118a7:	jmp    4114f5 <__flatcc_fb_gen_c_verifier@@Base+0x1235>
  4118ac:	cmp    DWORD PTR [rsp+0xc],r13d
  4118b1:	mov    DWORD PTR [rsp+0x28],r15d
  4118b6:	lea    r14,[rip+0x32831]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4118bd:	mov    DWORD PTR [rsp+0x18],0x0
  4118c5:	jl     411882 <__flatcc_fb_gen_c_verifier@@Base+0x15c2>
  4118c7:	mov    ecx,DWORD PTR [rsp+0xc]
  4118cb:	mov    rsi,QWORD PTR [rsp+0x10]
  4118d0:	mov    r8d,ebx
  4118d3:	mov    rdi,QWORD PTR [rsp]
  4118d7:	mov    edx,r13d
  4118da:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4118df:	jmp    411494 <__flatcc_fb_gen_c_verifier@@Base+0x11d4>
  4118e4:	lea    rcx,[rip+0x31165]        # 442a50 <_IO_stdin_used@@Base+0x16a50>
  4118eb:	lea    rsi,[rip+0x2f026]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4118f2:	lea    rdi,[rip+0x2ea8c]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4118f9:	mov    edx,0x410
  4118fe:	call   4050f0 <__assert_fail@plt>
  411903:	xor    r12d,r12d
  411906:	jmp    411330 <__flatcc_fb_gen_c_verifier@@Base+0x1070>
  41190b:	lea    rcx,[rip+0x3113e]        # 442a50 <_IO_stdin_used@@Base+0x16a50>
  411912:	lea    rsi,[rip+0x2efff]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411919:	lea    rdi,[rip+0x2ea65]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411920:	mov    edx,0x414
  411925:	call   4050f0 <__assert_fail@plt>
  41192a:	lea    rcx,[rip+0x3111f]        # 442a50 <_IO_stdin_used@@Base+0x16a50>
  411931:	lea    rsi,[rip+0x2efe0]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411938:	lea    rdi,[rip+0x2ea46]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41193f:	mov    edx,0x3cf
  411944:	call   4050f0 <__assert_fail@plt>
  411949:	lea    rcx,[rip+0x31100]        # 442a50 <_IO_stdin_used@@Base+0x16a50>
  411950:	lea    rsi,[rip+0x2efc1]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411957:	lea    rdi,[rip+0x2ea27]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41195e:	mov    edx,0x430
  411963:	call   4050f0 <__assert_fail@plt>
  411968:	lea    rcx,[rip+0x310e1]        # 442a50 <_IO_stdin_used@@Base+0x16a50>
  41196f:	lea    rsi,[rip+0x2efa2]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411976:	lea    rdi,[rip+0x2ea08]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41197d:	mov    edx,0x3cd
  411982:	call   4050f0 <__assert_fail@plt>
  411987:	nop    WORD PTR [rax+rax*1+0x0]
  411990:	push   rbp
  411991:	push   rbx
  411992:	mov    rbx,rdi
  411995:	mov    rdi,rsi
  411998:	sub    rsp,0xe8
  41199f:	mov    rsi,rsp
  4119a2:	mov    rax,QWORD PTR fs:0x28
  4119ab:	mov    QWORD PTR [rsp+0xd8],rax
  4119b3:	xor    eax,eax
  4119b5:	call   406780 <__flatcc_fb_copy_scope@@Base>
  4119ba:	mov    rax,QWORD PTR [rbx+0xd8]
  4119c1:	lea    rsi,[rip+0x2f060]        # 440a28 <_IO_stdin_used@@Base+0x14a28>
  4119c8:	mov    rcx,rsp
  4119cb:	mov    rdi,rbx
  4119ce:	mov    rdx,QWORD PTR [rax+0x110]
  4119d5:	xor    eax,eax
  4119d7:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4119dc:	lea    rsi,[rip+0x2f0b5]        # 440a98 <_IO_stdin_used@@Base+0x14a98>
  4119e3:	xor    eax,eax
  4119e5:	mov    rdi,rbx
  4119e8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4119ed:	mov    rax,QWORD PTR [rsp+0xd8]
  4119f5:	xor    rax,QWORD PTR fs:0x28
  4119fe:	jne    411a0a <__flatcc_fb_gen_c_verifier@@Base+0x174a>
  411a00:	add    rsp,0xe8
  411a07:	pop    rbx
  411a08:	pop    rbp
  411a09:	ret    
  411a0a:	call   4050d0 <__stack_chk_fail@plt>
  411a0f:	nop
  411a10:	push   r14
  411a12:	push   r13
  411a14:	mov    ecx,0x1d
  411a19:	push   r12
  411a1b:	push   rbp
  411a1c:	mov    r13,rsi
  411a1f:	push   rbx
  411a20:	mov    rbx,rdi
  411a23:	sub    rsp,0x1f0
  411a2a:	lea    rbp,[rsp+0x10]
  411a2f:	lea    r12,[rsp+0x100]
  411a37:	mov    rax,QWORD PTR fs:0x28
  411a40:	mov    QWORD PTR [rsp+0x1e8],rax
  411a48:	xor    eax,eax
  411a4a:	mov    rdi,rbp
  411a4d:	mov    rdx,rbp
  411a50:	rep stos QWORD PTR es:[rdi],rax
  411a53:	mov    ecx,0x1d
  411a58:	mov    rdi,r12
  411a5b:	rep stos QWORD PTR es:[rdi],rax
  411a5e:	mov    rdi,QWORD PTR [rsi+0x18]
  411a62:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  411a67:	lea    rsi,[rip+0x2f062]        # 440ad0 <_IO_stdin_used@@Base+0x14ad0>
  411a6e:	mov    rdx,rbp
  411a71:	xor    eax,eax
  411a73:	mov    rdi,rbx
  411a76:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411a7b:	lea    rsi,[rip+0x2ea26]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  411a82:	xor    eax,eax
  411a84:	mov    rdi,rbx
  411a87:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411a8c:	add    DWORD PTR [rbx+0xf0],0x1
  411a93:	lea    rsi,[rip+0x32654]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  411a9a:	xor    eax,eax
  411a9c:	mov    rdi,rbx
  411a9f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411aa4:	lea    rsi,[rip+0x2e9e2]        # 44048d <_IO_stdin_used@@Base+0x1448d>
  411aab:	xor    eax,eax
  411aad:	mov    rdi,rbx
  411ab0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ab5:	lea    rsi,[rip+0x2e9de]        # 44049a <_IO_stdin_used@@Base+0x1449a>
  411abc:	xor    eax,eax
  411abe:	mov    rdi,rbx
  411ac1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ac6:	lea    rsi,[rip+0x2e9dd]        # 4404aa <_IO_stdin_used@@Base+0x144aa>
  411acd:	xor    eax,eax
  411acf:	mov    rdi,rbx
  411ad2:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ad7:	add    DWORD PTR [rbx+0xf0],0x1
  411ade:	lea    rsi,[rip+0x2f07b]        # 440b60 <_IO_stdin_used@@Base+0x14b60>
  411ae5:	xor    eax,eax
  411ae7:	mov    rdi,rbx
  411aea:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411aef:	mov    eax,DWORD PTR [rbx+0xf0]
  411af5:	test   eax,eax
  411af7:	je     411eb0 <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
  411afd:	mov    rbp,QWORD PTR [r13+0x28]
  411b01:	sub    eax,0x1
  411b04:	mov    DWORD PTR [rbx+0xf0],eax
  411b0a:	test   rbp,rbp
  411b0d:	je     411bf8 <__flatcc_fb_gen_c_verifier@@Base+0x1938>
  411b13:	lea    r13,[rip+0x2e9ac]        # 4404c6 <_IO_stdin_used@@Base+0x144c6>
  411b1a:	mov    rax,QWORD PTR [rbp+0x8]
  411b1e:	mov    r8,QWORD PTR [rax]
  411b21:	mov    r14,QWORD PTR [rax+0x8]
  411b25:	movzx  eax,WORD PTR [rbp+0x28]
  411b29:	cmp    ax,0xa
  411b2d:	je     411b98 <__flatcc_fb_gen_c_verifier@@Base+0x18d8>
  411b2f:	cmp    ax,0xe
  411b33:	je     411da0 <__flatcc_fb_gen_c_verifier@@Base+0x1ae0>
  411b39:	test   ax,ax
  411b3c:	je     411beb <__flatcc_fb_gen_c_verifier@@Base+0x192b>
  411b42:	mov    rax,QWORD PTR [rip+0x3e49f]        # 44ffe8 <stderr@GLIBC_2.2.5>
  411b49:	lea    rcx,[rip+0x2edc8]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411b50:	lea    rdx,[rip+0x22f6a]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  411b57:	lea    r9,[rip+0x2f1ba]        # 440d18 <_IO_stdin_used@@Base+0x14d18>
  411b5e:	mov    esi,0x1
  411b63:	mov    r8d,0x5ff
  411b69:	mov    rdi,QWORD PTR [rax]
  411b6c:	xor    eax,eax
  411b6e:	call   4051f0 <__fprintf_chk@plt>
  411b73:	lea    rcx,[rip+0x30ea6]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411b7a:	lea    rsi,[rip+0x2ed97]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411b81:	lea    rdi,[rip+0x23f81]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  411b88:	mov    edx,0x5ff
  411b8d:	call   4050f0 <__assert_fail@plt>
  411b92:	nop    WORD PTR [rax+rax*1+0x0]
  411b98:	mov    edx,DWORD PTR [rbp+0x48]
  411b9b:	mov    ecx,r14d
  411b9e:	xor    eax,eax
  411ba0:	mov    rsi,r13
  411ba3:	mov    rdi,rbx
  411ba6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411bab:	add    DWORD PTR [rbx+0xf0],0x1
  411bb2:	lea    rsi,[rip+0x2f11f]        # 440cd8 <_IO_stdin_used@@Base+0x14cd8>
  411bb9:	xor    eax,eax
  411bbb:	mov    rdi,rbx
  411bbe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411bc3:	lea    rsi,[rip+0x2e910]        # 4404da <_IO_stdin_used@@Base+0x144da>
  411bca:	xor    eax,eax
  411bcc:	mov    rdi,rbx
  411bcf:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411bd4:	mov    eax,DWORD PTR [rbx+0xf0]
  411bda:	test   eax,eax
  411bdc:	je     411f6f <__flatcc_fb_gen_c_verifier@@Base+0x1caf>
  411be2:	sub    eax,0x1
  411be5:	mov    DWORD PTR [rbx+0xf0],eax
  411beb:	mov    rbp,QWORD PTR [rbp+0x0]
  411bef:	test   rbp,rbp
  411bf2:	jne    411b1a <__flatcc_fb_gen_c_verifier@@Base+0x185a>
  411bf8:	lea    rsi,[rip+0x2e8be]        # 4404bd <_IO_stdin_used@@Base+0x144bd>
  411bff:	xor    eax,eax
  411c01:	mov    rdi,rbx
  411c04:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411c09:	add    DWORD PTR [rbx+0xf0],0x1
  411c10:	lea    rsi,[rip+0x2ef79]        # 440b90 <_IO_stdin_used@@Base+0x14b90>
  411c17:	xor    eax,eax
  411c19:	mov    rdi,rbx
  411c1c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411c21:	add    DWORD PTR [rbx+0xf0],0x1
  411c28:	lea    rsi,[rip+0x2efa1]        # 440bd0 <_IO_stdin_used@@Base+0x14bd0>
  411c2f:	xor    eax,eax
  411c31:	mov    rdi,rbx
  411c34:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411c39:	mov    eax,DWORD PTR [rbx+0xf0]
  411c3f:	test   eax,eax
  411c41:	je     411f50 <__flatcc_fb_gen_c_verifier@@Base+0x1c90>
  411c47:	sub    eax,0x1
  411c4a:	lea    rsi,[rip+0x2e890]        # 4404e1 <_IO_stdin_used@@Base+0x144e1>
  411c51:	mov    rdi,rbx
  411c54:	mov    DWORD PTR [rbx+0xf0],eax
  411c5a:	xor    eax,eax
  411c5c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411c61:	add    DWORD PTR [rbx+0xf0],0x1
  411c68:	lea    rsi,[rip+0x2f0d9]        # 440d48 <_IO_stdin_used@@Base+0x14d48>
  411c6f:	xor    eax,eax
  411c71:	mov    rdi,rbx
  411c74:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411c79:	mov    eax,DWORD PTR [rbx+0xf0]
  411c7f:	test   eax,eax
  411c81:	je     411f31 <__flatcc_fb_gen_c_verifier@@Base+0x1c71>
  411c87:	sub    eax,0x1
  411c8a:	lea    rsi,[rip+0x2e700]        # 440391 <_IO_stdin_used@@Base+0x14391>
  411c91:	mov    rdi,rbx
  411c94:	mov    DWORD PTR [rbx+0xf0],eax
  411c9a:	xor    eax,eax
  411c9c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ca1:	mov    eax,DWORD PTR [rbx+0xf0]
  411ca7:	test   eax,eax
  411ca9:	je     411f12 <__flatcc_fb_gen_c_verifier@@Base+0x1c52>
  411caf:	sub    eax,0x1
  411cb2:	lea    rsi,[rip+0x2e6d8]        # 440391 <_IO_stdin_used@@Base+0x14391>
  411cb9:	mov    rdi,rbx
  411cbc:	mov    DWORD PTR [rbx+0xf0],eax
  411cc2:	xor    eax,eax
  411cc4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411cc9:	lea    rsi,[rip+0x2e81a]        # 4404ea <_IO_stdin_used@@Base+0x144ea>
  411cd0:	xor    eax,eax
  411cd2:	mov    rdi,rbx
  411cd5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411cda:	lea    rsi,[rip+0x2e825]        # 440506 <_IO_stdin_used@@Base+0x14506>
  411ce1:	xor    eax,eax
  411ce3:	mov    rdi,rbx
  411ce6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ceb:	add    DWORD PTR [rbx+0xf0],0x1
  411cf2:	lea    rsi,[rip+0x2f087]        # 440d80 <_IO_stdin_used@@Base+0x14d80>
  411cf9:	xor    eax,eax
  411cfb:	mov    rdi,rbx
  411cfe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411d03:	mov    eax,DWORD PTR [rbx+0xf0]
  411d09:	test   eax,eax
  411d0b:	je     411ef3 <__flatcc_fb_gen_c_verifier@@Base+0x1c33>
  411d11:	sub    eax,0x1
  411d14:	lea    rsi,[rip+0x2e676]        # 440391 <_IO_stdin_used@@Base+0x14391>
  411d1b:	mov    rdi,rbx
  411d1e:	mov    DWORD PTR [rbx+0xf0],eax
  411d24:	xor    eax,eax
  411d26:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411d2b:	lea    rsi,[rip+0x2e7c8]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  411d32:	xor    eax,eax
  411d34:	mov    rdi,rbx
  411d37:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411d3c:	mov    eax,DWORD PTR [rbx+0xf0]
  411d42:	test   eax,eax
  411d44:	je     411ed4 <__flatcc_fb_gen_c_verifier@@Base+0x1c14>
  411d4a:	sub    eax,0x1
  411d4d:	lea    rsi,[rip+0x2e63d]        # 440391 <_IO_stdin_used@@Base+0x14391>
  411d54:	mov    rdi,rbx
  411d57:	mov    DWORD PTR [rbx+0xf0],eax
  411d5d:	xor    eax,eax
  411d5f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411d64:	lea    rsi,[rip+0x32383]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  411d6b:	xor    eax,eax
  411d6d:	mov    rdi,rbx
  411d70:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411d75:	xor    eax,eax
  411d77:	mov    rdx,QWORD PTR [rsp+0x1e8]
  411d7f:	xor    rdx,QWORD PTR fs:0x28
  411d88:	jne    411ecf <__flatcc_fb_gen_c_verifier@@Base+0x1c0f>
  411d8e:	add    rsp,0x1f0
  411d95:	pop    rbx
  411d96:	pop    rbp
  411d97:	pop    r12
  411d99:	pop    r13
  411d9b:	pop    r14
  411d9d:	ret    
  411d9e:	xchg   ax,ax
  411da0:	mov    rsi,QWORD PTR [rbp+0x18]
  411da4:	mov    rdx,r12
  411da7:	mov    QWORD PTR [rsp+0x8],r8
  411dac:	mov    rdi,QWORD PTR [rsi+0x18]
  411db0:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  411db5:	mov    r8,QWORD PTR [rsp+0x8]
  411dba:	mov    edx,DWORD PTR [rbp+0x48]
  411dbd:	xor    eax,eax
  411dbf:	mov    ecx,r14d
  411dc2:	mov    rsi,r13
  411dc5:	mov    rdi,rbx
  411dc8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411dcd:	add    DWORD PTR [rbx+0xf0],0x1
  411dd4:	mov    rax,QWORD PTR [rbp+0x18]
  411dd8:	movzx  eax,WORD PTR [rax+0x10]
  411ddc:	test   ax,ax
  411ddf:	je     411e40 <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
  411de1:	cmp    ax,0x1
  411de5:	jne    411e60 <__flatcc_fb_gen_c_verifier@@Base+0x1ba0>
  411de7:	lea    rsi,[rip+0x2ee7a]        # 440c68 <_IO_stdin_used@@Base+0x14c68>
  411dee:	mov    rdx,r12
  411df1:	mov    rdi,rbx
  411df4:	xor    eax,eax
  411df6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411dfb:	lea    rsi,[rip+0x2e6d8]        # 4404da <_IO_stdin_used@@Base+0x144da>
  411e02:	xor    eax,eax
  411e04:	mov    rdi,rbx
  411e07:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411e0c:	mov    eax,DWORD PTR [rbx+0xf0]
  411e12:	test   eax,eax
  411e14:	jne    411be2 <__flatcc_fb_gen_c_verifier@@Base+0x1922>
  411e1a:	lea    rcx,[rip+0x30bff]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411e21:	lea    rsi,[rip+0x2eaf0]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411e28:	lea    rdi,[rip+0x2e556]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411e2f:	mov    edx,0x5f6
  411e34:	call   4050f0 <__assert_fail@plt>
  411e39:	nop    DWORD PTR [rax+0x0]
  411e40:	lea    rsi,[rip+0x2ede9]        # 440c30 <_IO_stdin_used@@Base+0x14c30>
  411e47:	mov    rdx,r12
  411e4a:	mov    rdi,rbx
  411e4d:	xor    eax,eax
  411e4f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411e54:	jmp    411dfb <__flatcc_fb_gen_c_verifier@@Base+0x1b3b>
  411e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e60:	mov    rax,QWORD PTR [rip+0x3e181]        # 44ffe8 <stderr@GLIBC_2.2.5>
  411e67:	lea    rcx,[rip+0x2eaaa]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411e6e:	lea    rdx,[rip+0x22c4c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  411e75:	lea    r9,[rip+0x2ee24]        # 440ca0 <_IO_stdin_used@@Base+0x14ca0>
  411e7c:	mov    esi,0x1
  411e81:	mov    r8d,0x5f2
  411e87:	mov    rdi,QWORD PTR [rax]
  411e8a:	xor    eax,eax
  411e8c:	call   4051f0 <__fprintf_chk@plt>
  411e91:	lea    rcx,[rip+0x30b88]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411e98:	lea    rsi,[rip+0x2ea79]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411e9f:	lea    rdi,[rip+0x23c63]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  411ea6:	mov    edx,0x5f2
  411eab:	call   4050f0 <__assert_fail@plt>
  411eb0:	lea    rcx,[rip+0x30b69]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411eb7:	lea    rsi,[rip+0x2ea5a]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411ebe:	lea    rdi,[rip+0x2e4c0]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411ec5:	mov    edx,0x5df
  411eca:	call   4050f0 <__assert_fail@plt>
  411ecf:	call   4050d0 <__stack_chk_fail@plt>
  411ed4:	lea    rcx,[rip+0x30b45]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411edb:	lea    rsi,[rip+0x2ea36]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411ee2:	lea    rdi,[rip+0x2e49c]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411ee9:	mov    edx,0x610
  411eee:	call   4050f0 <__assert_fail@plt>
  411ef3:	lea    rcx,[rip+0x30b26]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411efa:	lea    rsi,[rip+0x2ea17]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411f01:	lea    rdi,[rip+0x2e47d]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411f08:	mov    edx,0x60e
  411f0d:	call   4050f0 <__assert_fail@plt>
  411f12:	lea    rcx,[rip+0x30b07]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411f19:	lea    rsi,[rip+0x2e9f8]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411f20:	lea    rdi,[rip+0x2e45e]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411f27:	mov    edx,0x60a
  411f2c:	call   4050f0 <__assert_fail@plt>
  411f31:	lea    rcx,[rip+0x30ae8]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411f38:	lea    rsi,[rip+0x2e9d9]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411f3f:	lea    rdi,[rip+0x2e43f]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411f46:	mov    edx,0x609
  411f4b:	call   4050f0 <__assert_fail@plt>
  411f50:	lea    rcx,[rip+0x30ac9]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411f57:	lea    rsi,[rip+0x2e9ba]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411f5e:	lea    rdi,[rip+0x2e420]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411f65:	mov    edx,0x607
  411f6a:	call   4050f0 <__assert_fail@plt>
  411f6f:	lea    rcx,[rip+0x30aaa]        # 442a20 <_IO_stdin_used@@Base+0x16a20>
  411f76:	lea    rsi,[rip+0x2e99b]        # 440918 <_IO_stdin_used@@Base+0x14918>
  411f7d:	lea    rdi,[rip+0x2e401]        # 440385 <_IO_stdin_used@@Base+0x14385>
  411f84:	mov    edx,0x5fc
  411f89:	call   4050f0 <__assert_fail@plt>
  411f8e:	xchg   ax,ax
  411f90:	push   r12
  411f92:	push   rbp
  411f93:	mov    ecx,0x1d
  411f98:	push   rbx
  411f99:	mov    rbp,rdi
  411f9c:	mov    r12,rsi
  411f9f:	sub    rsp,0x1e0
  411fa6:	mov    rax,QWORD PTR fs:0x28
  411faf:	mov    QWORD PTR [rsp+0x1d8],rax
  411fb7:	xor    eax,eax
  411fb9:	lea    rdx,[rsp+0xf0]
  411fc1:	mov    rdi,rsp
  411fc4:	rep stos QWORD PTR es:[rdi],rax
  411fc7:	mov    rdi,rdx
  411fca:	mov    ecx,0x1d
  411fcf:	mov    rdx,rsp
  411fd2:	rep stos QWORD PTR es:[rdi],rax
  411fd5:	mov    rdi,QWORD PTR [rsi+0x18]
  411fd9:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  411fde:	lea    rsi,[rip+0x2edf3]        # 440dd8 <_IO_stdin_used@@Base+0x14dd8>
  411fe5:	mov    rdx,rsp
  411fe8:	xor    eax,eax
  411fea:	mov    rdi,rbp
  411fed:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ff2:	lea    rsi,[rip+0x2e4af]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  411ff9:	xor    eax,eax
  411ffb:	mov    rdi,rbp
  411ffe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412003:	add    DWORD PTR [rbp+0xf0],0x1
  41200a:	lea    rsi,[rip+0x2e489]        # 44049a <_IO_stdin_used@@Base+0x1449a>
  412011:	xor    eax,eax
  412013:	mov    rdi,rbp
  412016:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41201b:	mov    rbx,QWORD PTR [r12+0x28]
  412020:	lea    r12,[rip+0x2e502]        # 440529 <_IO_stdin_used@@Base+0x14529>
  412027:	test   rbx,rbx
  41202a:	jne    412045 <__flatcc_fb_gen_c_verifier@@Base+0x1d85>
  41202c:	jmp    412073 <__flatcc_fb_gen_c_verifier@@Base+0x1db3>
  41202e:	xchg   ax,ax
  412030:	xor    eax,eax
  412032:	mov    rsi,r12
  412035:	mov    rdi,rbp
  412038:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41203d:	mov    rbx,QWORD PTR [rbx]
  412040:	test   rbx,rbx
  412043:	je     412073 <__flatcc_fb_gen_c_verifier@@Base+0x1db3>
  412045:	cmp    WORD PTR [rbx+0x28],0x0
  41204a:	je     412030 <__flatcc_fb_gen_c_verifier@@Base+0x1d70>
  41204c:	mov    rax,QWORD PTR [rbx+0x8]
  412050:	mov    edx,DWORD PTR [rbx+0x48]
  412053:	lea    rsi,[rip+0x2e4ec]        # 440546 <_IO_stdin_used@@Base+0x14546>
  41205a:	mov    rdi,rbp
  41205d:	mov    rcx,QWORD PTR [rax+0x8]
  412061:	mov    r8,QWORD PTR [rax]
  412064:	xor    eax,eax
  412066:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41206b:	mov    rbx,QWORD PTR [rbx]
  41206e:	test   rbx,rbx
  412071:	jne    412045 <__flatcc_fb_gen_c_verifier@@Base+0x1d85>
  412073:	lea    rsi,[rip+0x2e49c]        # 440516 <_IO_stdin_used@@Base+0x14516>
  41207a:	xor    eax,eax
  41207c:	mov    rdi,rbp
  41207f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412084:	mov    eax,DWORD PTR [rbp+0xf0]
  41208a:	lea    edx,[rax+0x1]
  41208d:	test   edx,edx
  41208f:	mov    DWORD PTR [rbp+0xf0],edx
  412095:	je     412104 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
  412097:	lea    rsi,[rip+0x2e2f3]        # 440391 <_IO_stdin_used@@Base+0x14391>
  41209e:	mov    DWORD PTR [rbp+0xf0],eax
  4120a4:	mov    rdi,rbp
  4120a7:	xor    eax,eax
  4120a9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4120ae:	mov    eax,DWORD PTR [rbp+0xf0]
  4120b4:	test   eax,eax
  4120b6:	je     412128 <__flatcc_fb_gen_c_verifier@@Base+0x1e68>
  4120b8:	sub    eax,0x1
  4120bb:	lea    rsi,[rip+0x2e2cf]        # 440391 <_IO_stdin_used@@Base+0x14391>
  4120c2:	mov    rdi,rbp
  4120c5:	mov    DWORD PTR [rbp+0xf0],eax
  4120cb:	xor    eax,eax
  4120cd:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4120d2:	lea    rsi,[rip+0x32015]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4120d9:	xor    eax,eax
  4120db:	mov    rdi,rbp
  4120de:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4120e3:	xor    eax,eax
  4120e5:	mov    rdx,QWORD PTR [rsp+0x1d8]
  4120ed:	xor    rdx,QWORD PTR fs:0x28
  4120f6:	jne    412123 <__flatcc_fb_gen_c_verifier@@Base+0x1e63>
  4120f8:	add    rsp,0x1e0
  4120ff:	pop    rbx
  412100:	pop    rbp
  412101:	pop    r12
  412103:	ret    
  412104:	lea    rcx,[rip+0x308f5]        # 442a00 <_IO_stdin_used@@Base+0x16a00>
  41210b:	lea    rsi,[rip+0x2e806]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412112:	lea    rdi,[rip+0x2e26c]        # 440385 <_IO_stdin_used@@Base+0x14385>
  412119:	mov    edx,0x62e
  41211e:	call   4050f0 <__assert_fail@plt>
  412123:	call   4050d0 <__stack_chk_fail@plt>
  412128:	lea    rcx,[rip+0x308d1]        # 442a00 <_IO_stdin_used@@Base+0x16a00>
  41212f:	lea    rsi,[rip+0x2e7e2]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412136:	lea    rdi,[rip+0x2e248]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41213d:	mov    edx,0x62f
  412142:	call   4050f0 <__assert_fail@plt>
  412147:	nop    WORD PTR [rax+rax*1+0x0]
  412150:	push   r15
  412152:	push   r14
  412154:	mov    ecx,0x6
  412159:	push   r13
  41215b:	push   r12
  41215d:	push   rbp
  41215e:	push   rbx
  41215f:	mov    rbx,rdi
  412162:	mov    rbp,rsi
  412165:	sub    rsp,0x148
  41216c:	mov    rax,QWORD PTR fs:0x28
  412175:	mov    QWORD PTR [rsp+0x138],rax
  41217d:	xor    eax,eax
  41217f:	lea    rdi,[rsp+0x30]
  412184:	lea    r14,[rsp+0x60]
  412189:	lea    r15,[rsp+0x10]
  41218e:	mov    QWORD PTR [rsp+0x8],rdi
  412193:	mov    rsi,r14
  412196:	rep stos QWORD PTR es:[rdi],rax
  412199:	mov    rdi,rbp
  41219c:	add    rbp,0x8
  4121a0:	call   406780 <__flatcc_fb_copy_scope@@Base>
  4121a5:	mov    rax,QWORD PTR [rbx+0xd8]
  4121ac:	lea    rsi,[rip+0xffffffffffffe60d]        # 4107c0 <__flatcc_fb_gen_c_verifier@@Base+0x500>
  4121b3:	mov    rdx,r15
  4121b6:	mov    rdi,rbp
  4121b9:	mov    QWORD PTR [rsp+0x10],0x0
  4121c2:	mov    QWORD PTR [rsp+0x20],0x0
  4121cb:	mov    QWORD PTR [rsp+0x18],rax
  4121d0:	call   41a890 <fb_symbol_table_visit@@Base>
  4121d5:	mov    r12d,DWORD PTR [rsp+0x10]
  4121da:	test   r12d,r12d
  4121dd:	je     412420 <__flatcc_fb_gen_c_verifier@@Base+0x2160>
  4121e3:	movsxd rdi,r12d
  4121e6:	shl    rdi,0x5
  4121ea:	call   405170 <malloc@plt>
  4121ef:	test   rax,rax
  4121f2:	mov    r13,rax
  4121f5:	je     412430 <__flatcc_fb_gen_c_verifier@@Base+0x2170>
  4121fb:	lea    rsi,[rip+0xffffffffffffe55e]        # 410760 <__flatcc_fb_gen_c_verifier@@Base+0x4a0>
  412202:	mov    rdx,r15
  412205:	mov    rdi,rbp
  412208:	mov    QWORD PTR [rsp+0x20],rax
  41220d:	call   41a890 <fb_symbol_table_visit@@Base>
  412212:	movsxd rsi,DWORD PTR [rsp+0x10]
  412217:	lea    rcx,[rip+0xffffffffffffe512]        # 410730 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  41221e:	mov    edx,0x20
  412223:	mov    rdi,r13
  412226:	call   405080 <qsort@plt>
  41222b:	mov    QWORD PTR [rsp+0x30],r13
  412230:	lea    rax,[rip+0x3f9]        # 412630 <__flatcc_fb_gen_c_verifier@@Base+0x2370>
  412237:	lea    rsi,[rip+0x2e7ea]        # 440a28 <_IO_stdin_used@@Base+0x14a28>
  41223e:	mov    rcx,r14
  412241:	mov    rdi,rbx
  412244:	mov    QWORD PTR [rsp+0x48],0x0
  41224d:	mov    DWORD PTR [rsp+0x50],0x3
  412255:	mov    QWORD PTR [rsp+0x38],rax
  41225a:	lea    rax,[rip+0xffffffffffffe98f]        # 410bf0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  412261:	mov    QWORD PTR [rsp+0x40],rax
  412266:	mov    rax,QWORD PTR [rbx+0xd8]
  41226d:	mov    rdx,QWORD PTR [rax+0x110]
  412274:	xor    eax,eax
  412276:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41227b:	add    DWORD PTR [rbx+0xf0],0x2
  412282:	lea    rsi,[rip+0x2ebc7]        # 440e50 <_IO_stdin_used@@Base+0x14e50>
  412289:	xor    eax,eax
  41228b:	mov    rdi,rbx
  41228e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412293:	mov    eax,DWORD PTR [rbx+0xf0]
  412299:	test   eax,eax
  41229b:	je     41249c <__flatcc_fb_gen_c_verifier@@Base+0x21dc>
  4122a1:	cmp    eax,0x1
  4122a4:	je     412492 <__flatcc_fb_gen_c_verifier@@Base+0x21d2>
  4122aa:	sub    eax,0x2
  4122ad:	lea    rsi,[rip+0x2e1f4]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  4122b4:	mov    rdi,rbx
  4122b7:	mov    DWORD PTR [rbx+0xf0],eax
  4122bd:	xor    eax,eax
  4122bf:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4122c4:	add    DWORD PTR [rbx+0xf0],0x1
  4122cb:	test   r12d,r12d
  4122ce:	je     4123c8 <__flatcc_fb_gen_c_verifier@@Base+0x2108>
  4122d4:	lea    rsi,[rip+0x2e2a6]        # 440581 <_IO_stdin_used@@Base+0x14581>
  4122db:	xor    eax,eax
  4122dd:	mov    rdi,rbx
  4122e0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4122e5:	lea    rsi,[rip+0x2e2b2]        # 44059e <_IO_stdin_used@@Base+0x1459e>
  4122ec:	xor    eax,eax
  4122ee:	mov    rdi,rbx
  4122f1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4122f6:	lea    rsi,[rip+0x2e2b3]        # 4405b0 <_IO_stdin_used@@Base+0x145b0>
  4122fd:	xor    eax,eax
  4122ff:	mov    rdi,rbx
  412302:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412307:	lea    rsi,[rip+0x31de0]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41230e:	xor    eax,eax
  412310:	mov    rdi,rbx
  412313:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412318:	lea    rsi,[rip+0x2e6d9]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  41231f:	xor    eax,eax
  412321:	mov    rdi,rbx
  412324:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412329:	mov    rsi,QWORD PTR [rsp+0x8]
  41232e:	lea    ecx,[r12-0x1]
  412333:	xor    r8d,r8d
  412336:	xor    edx,edx
  412338:	mov    rdi,rbx
  41233b:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  412340:	lea    rsi,[rip+0x2e1b3]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  412347:	xor    eax,eax
  412349:	mov    rdi,rbx
  41234c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412351:	mov    eax,DWORD PTR [rbx+0xf0]
  412357:	test   eax,eax
  412359:	je     4124c0 <__flatcc_fb_gen_c_verifier@@Base+0x2200>
  41235f:	sub    eax,0x1
  412362:	lea    rsi,[rip+0x2e028]        # 440391 <_IO_stdin_used@@Base+0x14391>
  412369:	mov    rdi,rbx
  41236c:	mov    DWORD PTR [rbx+0xf0],eax
  412372:	xor    eax,eax
  412374:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412379:	lea    rsi,[rip+0x31d6e]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  412380:	mov    rdi,rbx
  412383:	xor    eax,eax
  412385:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41238a:	mov    rdi,QWORD PTR [rsp+0x30]
  41238f:	test   rdi,rdi
  412392:	je     412399 <__flatcc_fb_gen_c_verifier@@Base+0x20d9>
  412394:	call   405040 <free@plt>
  412399:	mov    rax,QWORD PTR [rsp+0x138]
  4123a1:	xor    rax,QWORD PTR fs:0x28
  4123aa:	jne    4124bb <__flatcc_fb_gen_c_verifier@@Base+0x21fb>
  4123b0:	add    rsp,0x148
  4123b7:	pop    rbx
  4123b8:	pop    rbp
  4123b9:	pop    r12
  4123bb:	pop    r13
  4123bd:	pop    r14
  4123bf:	pop    r15
  4123c1:	ret    
  4123c2:	nop    WORD PTR [rax+rax*1+0x0]
  4123c8:	lea    rsi,[rip+0x2eab9]        # 440e88 <_IO_stdin_used@@Base+0x14e88>
  4123cf:	xor    eax,eax
  4123d1:	mov    rdi,rbx
  4123d4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4123d9:	lea    rsi,[rip+0x2e184]        # 440564 <_IO_stdin_used@@Base+0x14564>
  4123e0:	xor    eax,eax
  4123e2:	mov    rdi,rbx
  4123e5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4123ea:	mov    eax,DWORD PTR [rbx+0xf0]
  4123f0:	test   eax,eax
  4123f2:	jne    41235f <__flatcc_fb_gen_c_verifier@@Base+0x209f>
  4123f8:	lea    rcx,[rip+0x30691]        # 442a90 <_IO_stdin_used@@Base+0x16a90>
  4123ff:	lea    rsi,[rip+0x2e512]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412406:	lea    rdi,[rip+0x2df78]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41240d:	mov    edx,0x485
  412412:	call   4050f0 <__assert_fail@plt>
  412417:	nop    WORD PTR [rax+rax*1+0x0]
  412420:	mov    QWORD PTR [rsp+0x30],0x0
  412429:	jmp    412230 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
  41242e:	xchg   ax,ax
  412430:	test   r12d,r12d
  412433:	mov    QWORD PTR [rsp+0x30],0x0
  41243c:	jle    412230 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
  412442:	mov    rax,QWORD PTR [rip+0x3db9f]        # 44ffe8 <stderr@GLIBC_2.2.5>
  412449:	lea    rcx,[rip+0x2e4c8]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412450:	lea    rdx,[rip+0x2266a]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  412457:	lea    r9,[rip+0x2e9b2]        # 440e10 <_IO_stdin_used@@Base+0x14e10>
  41245e:	mov    esi,0x1
  412463:	mov    r8d,0x474
  412469:	mov    rdi,QWORD PTR [rax]
  41246c:	xor    eax,eax
  41246e:	call   4051f0 <__fprintf_chk@plt>
  412473:	lea    rcx,[rip+0x30616]        # 442a90 <_IO_stdin_used@@Base+0x16a90>
  41247a:	lea    rsi,[rip+0x2e497]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412481:	lea    rdi,[rip+0x23681]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  412488:	mov    edx,0x474
  41248d:	call   4050f0 <__assert_fail@plt>
  412492:	mov    DWORD PTR [rbx+0xf0],0x0
  41249c:	lea    rcx,[rip+0x305ed]        # 442a90 <_IO_stdin_used@@Base+0x16a90>
  4124a3:	lea    rsi,[rip+0x2e46e]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4124aa:	lea    rdi,[rip+0x2ded4]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4124b1:	mov    edx,0x480
  4124b6:	call   4050f0 <__assert_fail@plt>
  4124bb:	call   4050d0 <__stack_chk_fail@plt>
  4124c0:	lea    rcx,[rip+0x305c9]        # 442a90 <_IO_stdin_used@@Base+0x16a90>
  4124c7:	lea    rsi,[rip+0x2e44a]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4124ce:	lea    rdi,[rip+0x2deb0]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4124d5:	mov    edx,0x48e
  4124da:	call   4050f0 <__assert_fail@plt>
  4124df:	nop
  4124e0:	push   r12
  4124e2:	push   rbp
  4124e3:	mov    rbp,rsi
  4124e6:	push   rbx
  4124e7:	lea    rsi,[rip+0x2e9d2]        # 440ec0 <_IO_stdin_used@@Base+0x14ec0>
  4124ee:	xor    eax,eax
  4124f0:	mov    r12,rdx
  4124f3:	mov    edx,r8d
  4124f6:	mov    rbx,rdi
  4124f9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4124fe:	lea    rsi,[rip+0x2e0b7]        # 4405bc <_IO_stdin_used@@Base+0x145bc>
  412505:	xor    eax,eax
  412507:	mov    rdi,rbx
  41250a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41250f:	add    DWORD PTR [rbx+0xf0],0x1
  412516:	mov    eax,DWORD PTR [rbp+0x48]
  412519:	cmp    eax,0x1
  41251c:	jb     412580 <__flatcc_fb_gen_c_verifier@@Base+0x22c0>
  41251e:	cmp    eax,0x5
  412521:	jbe    4125d0 <__flatcc_fb_gen_c_verifier@@Base+0x2310>
  412527:	cmp    eax,0x9
  41252a:	ja     412580 <__flatcc_fb_gen_c_verifier@@Base+0x22c0>
  41252c:	mov    rdx,QWORD PTR [r12+0x48]
  412531:	test   rdx,rdx
  412534:	js     4125f0 <__flatcc_fb_gen_c_verifier@@Base+0x2330>
  41253a:	lea    rsi,[rip+0x2e9cf]        # 440f10 <_IO_stdin_used@@Base+0x14f10>
  412541:	mov    rdi,rbx
  412544:	xor    eax,eax
  412546:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41254b:	mov    eax,DWORD PTR [rbx+0xf0]
  412551:	test   eax,eax
  412553:	je     412606 <__flatcc_fb_gen_c_verifier@@Base+0x2346>
  412559:	sub    eax,0x1
  41255c:	lea    rsi,[rip+0x2df7e]        # 4404e1 <_IO_stdin_used@@Base+0x144e1>
  412563:	mov    rdi,rbx
  412566:	mov    DWORD PTR [rbx+0xf0],eax
  41256c:	xor    eax,eax
  41256e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412573:	add    DWORD PTR [rbx+0xf0],0x1
  41257a:	pop    rbx
  41257b:	pop    rbp
  41257c:	pop    r12
  41257e:	ret    
  41257f:	nop
  412580:	mov    rax,QWORD PTR [rip+0x3da61]        # 44ffe8 <stderr@GLIBC_2.2.5>
  412587:	lea    rcx,[rip+0x2e38a]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41258e:	lea    rdx,[rip+0x2252c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  412595:	lea    r9,[rip+0x2e9d4]        # 440f70 <_IO_stdin_used@@Base+0x14f70>
  41259c:	mov    esi,0x1
  4125a1:	mov    r8d,0x2c6
  4125a7:	mov    rdi,QWORD PTR [rax]
  4125aa:	xor    eax,eax
  4125ac:	call   4051f0 <__fprintf_chk@plt>
  4125b1:	lea    rcx,[rip+0x30358]        # 442910 <_IO_stdin_used@@Base+0x16910>
  4125b8:	lea    rsi,[rip+0x2e359]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4125bf:	lea    rdi,[rip+0x23543]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4125c6:	mov    edx,0x2c6
  4125cb:	call   4050f0 <__assert_fail@plt>
  4125d0:	mov    rdx,QWORD PTR [r12+0x48]
  4125d5:	lea    rsi,[rip+0x2e934]        # 440f10 <_IO_stdin_used@@Base+0x14f10>
  4125dc:	mov    rdi,rbx
  4125df:	xor    eax,eax
  4125e1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4125e6:	jmp    41254b <__flatcc_fb_gen_c_verifier@@Base+0x228b>
  4125eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4125f0:	lea    rsi,[rip+0x2e949]        # 440f40 <_IO_stdin_used@@Base+0x14f40>
  4125f7:	mov    rdi,rbx
  4125fa:	xor    eax,eax
  4125fc:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412601:	jmp    41254b <__flatcc_fb_gen_c_verifier@@Base+0x228b>
  412606:	lea    rcx,[rip+0x3031b]        # 442928 <_IO_stdin_used@@Base+0x16928>
  41260d:	lea    rsi,[rip+0x2e304]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412614:	lea    rdi,[rip+0x2dd6a]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41261b:	mov    edx,0x2cf
  412620:	call   4050f0 <__assert_fail@plt>
  412625:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412630:	push   r12
  412632:	push   rbp
  412633:	lea    rsi,[rip+0x2e95e]        # 440f98 <_IO_stdin_used@@Base+0x14f98>
  41263a:	push   rbx
  41263b:	mov    r12,rdx
  41263e:	mov    edx,r8d
  412641:	mov    rbx,rdi
  412644:	sub    rsp,0xf0
  41264b:	mov    rax,QWORD PTR fs:0x28
  412654:	mov    QWORD PTR [rsp+0xe8],rax
  41265c:	xor    eax,eax
  41265e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412663:	lea    rsi,[rip+0x2df52]        # 4405bc <_IO_stdin_used@@Base+0x145bc>
  41266a:	xor    eax,eax
  41266c:	mov    rdi,rbx
  41266f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412674:	movzx  eax,WORD PTR [r12+0x10]
  41267a:	add    DWORD PTR [rbx+0xf0],0x1
  412681:	sub    eax,0x3
  412684:	cmp    ax,0x1
  412688:	ja     412705 <__flatcc_fb_gen_c_verifier@@Base+0x2445>
  41268a:	xor    eax,eax
  41268c:	mov    ecx,0x1d
  412691:	mov    rdi,rsp
  412694:	rep stos QWORD PTR es:[rdi],rax
  412697:	mov    rdi,QWORD PTR [r12+0x18]
  41269c:	mov    rdx,rsp
  41269f:	mov    rsi,r12
  4126a2:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4126a7:	lea    rsi,[rip+0x2e932]        # 440fe0 <_IO_stdin_used@@Base+0x14fe0>
  4126ae:	xor    eax,eax
  4126b0:	mov    rdx,rsp
  4126b3:	mov    rdi,rbx
  4126b6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4126bb:	mov    eax,DWORD PTR [rbx+0xf0]
  4126c1:	test   eax,eax
  4126c3:	je     412729 <__flatcc_fb_gen_c_verifier@@Base+0x2469>
  4126c5:	sub    eax,0x1
  4126c8:	lea    rsi,[rip+0x2de12]        # 4404e1 <_IO_stdin_used@@Base+0x144e1>
  4126cf:	mov    rdi,rbx
  4126d2:	mov    DWORD PTR [rbx+0xf0],eax
  4126d8:	xor    eax,eax
  4126da:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4126df:	add    DWORD PTR [rbx+0xf0],0x1
  4126e6:	mov    rax,QWORD PTR [rsp+0xe8]
  4126ee:	xor    rax,QWORD PTR fs:0x28
  4126f7:	jne    412724 <__flatcc_fb_gen_c_verifier@@Base+0x2464>
  4126f9:	add    rsp,0xf0
  412700:	pop    rbx
  412701:	pop    rbp
  412702:	pop    r12
  412704:	ret    
  412705:	lea    rcx,[rip+0x30354]        # 442a60 <_IO_stdin_used@@Base+0x16a60>
  41270c:	lea    rsi,[rip+0x2e205]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412713:	lea    rdi,[rip+0x1ad3e]        # 42d458 <_IO_stdin_used@@Base+0x1458>
  41271a:	mov    edx,0x2d9
  41271f:	call   4050f0 <__assert_fail@plt>
  412724:	call   4050d0 <__stack_chk_fail@plt>
  412729:	lea    rcx,[rip+0x30350]        # 442a80 <_IO_stdin_used@@Base+0x16a80>
  412730:	lea    rsi,[rip+0x2e1e1]        # 440918 <_IO_stdin_used@@Base+0x14918>
  412737:	lea    rdi,[rip+0x2dc47]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41273e:	mov    edx,0x2e6
  412743:	call   4050f0 <__assert_fail@plt>
  412748:	nop    DWORD PTR [rax+rax*1+0x0]
  412750:	push   r15
  412752:	push   r14
  412754:	mov    r14,rcx
  412757:	push   r13
  412759:	push   r12
  41275b:	mov    ecx,0x1d
  412760:	push   rbp
  412761:	push   rbx
  412762:	mov    rbx,rdi
  412765:	mov    rbp,rsi
  412768:	sub    rsp,0x238
  41276f:	mov    rax,QWORD PTR fs:0x28
  412778:	mov    QWORD PTR [rsp+0x228],rax
  412780:	xor    eax,eax
  412782:	lea    rdi,[rsp+0x60]
  412787:	mov    DWORD PTR [rsp+0xc],r8d
  41278c:	mov    QWORD PTR [rsp+0x10],rdi
  412791:	rep stos QWORD PTR es:[rdi],rax
  412794:	lea    rax,[rsp+0x150]
  41279c:	mov    rdi,QWORD PTR [rdx]
  41279f:	mov    rsi,rax
  4127a2:	mov    QWORD PTR [rsp+0x38],rax
  4127a7:	call   406780 <__flatcc_fb_copy_scope@@Base>
  4127ac:	movzx  eax,WORD PTR [rbp+0x0]
  4127b0:	cmp    ax,0x1
  4127b4:	mov    WORD PTR [rsp+0x48],ax
  4127b9:	sete   al
  4127bc:	movzx  eax,al
  4127bf:	mov    DWORD PTR [rsp+0x40],eax
  4127c3:	movzx  eax,WORD PTR [r14+0x28]
  4127c8:	cmp    ax,0xf
  4127cc:	ja     412800 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
  4127ce:	mov    edx,0x1
  4127d3:	shlx   rdx,rdx,rax
  4127d8:	test   edx,0x8280
  4127de:	setne  cl
  4127e1:	sub    eax,0x7
  4127e4:	cmp    ax,0x8
  4127e8:	movzx  ebp,cl
  4127eb:	ja     41280d <__flatcc_fb_gen_c_verifier@@Base+0x254d>
  4127ed:	lea    rdx,[rip+0x3005c]        # 442850 <_IO_stdin_used@@Base+0x16850>
  4127f4:	movzx  eax,ax
  4127f7:	movsxd rax,DWORD PTR [rdx+rax*4]
  4127fb:	add    rax,rdx
  4127fe:	jmp    rax
  412800:	sub    eax,0x7
  412803:	xor    ebp,ebp
  412805:	xor    ecx,ecx
  412807:	cmp    ax,0x8
  41280b:	jbe    4127ed <__flatcc_fb_gen_c_verifier@@Base+0x252d>
  41280d:	xor    edx,edx
  41280f:	xor    r15d,r15d
  412812:	mov    DWORD PTR [rsp+0x2c],0x0
  41281a:	xor    r12d,r12d
  41281d:	mov    DWORD PTR [rsp+0x34],0x0
  412825:	mov    DWORD PTR [rsp+0x28],0x0
  41282d:	jmp    412850 <__flatcc_fb_gen_c_verifier@@Base+0x2590>
  41282f:	nop
  412830:	xor    edx,edx
  412832:	xor    r15d,r15d
  412835:	mov    DWORD PTR [rsp+0x2c],0x0
  41283d:	xor    r12d,r12d
  412840:	mov    DWORD PTR [rsp+0x34],0x0
  412848:	mov    DWORD PTR [rsp+0x28],0x1
  412850:	mov    eax,ebp
  412852:	mov    DWORD PTR [rsp+0x30],0x0
  41285a:	mov    DWORD PTR [rsp+0x54],0x0
  412862:	and    eax,0x1
  412865:	mov    DWORD PTR [rsp+0x4c],0x0
  41286d:	mov    DWORD PTR [rsp+0x8],0x0
  412875:	mov    BYTE PTR [rsp+0x4b],al
  412879:	mov    r13d,DWORD PTR [rsp+0xc]
  41287e:	test   r13d,r13d
  412881:	je     412de9 <__flatcc_fb_gen_c_verifier@@Base+0x2b29>
  412887:	cmp    BYTE PTR [rsp+0x4b],0x0
  41288c:	mov    DWORD PTR [rsp+0x50],0x0
  412894:	mov    r12d,0x0
  41289a:	je     413636 <__flatcc_fb_gen_c_verifier@@Base+0x3376>
  4128a0:	mov    DWORD PTR [rsp+0x5c],0x1
  4128a8:	mov    DWORD PTR [rsp+0x58],0x0
  4128b0:	xor    ebp,ebp
  4128b2:	cmp    DWORD PTR [rsp+0x8],0x1
  4128b7:	je     412e22 <__flatcc_fb_gen_c_verifier@@Base+0x2b62>
  4128bd:	lea    rax,[rip+0x2dd0b]        # 4405cf <_IO_stdin_used@@Base+0x145cf>
  4128c4:	mov    QWORD PTR [rsp+0x18],rax
  4128c9:	mov    QWORD PTR [rsp+0x20],rax
  4128ce:	mov    eax,DWORD PTR [rsp+0x4c]
  4128d2:	or     eax,DWORD PTR [rsp+0x54]
  4128d6:	cmp    DWORD PTR [rsp+0x8],0x2
  4128db:	mov    DWORD PTR [rsp+0x44],eax
  4128df:	je     412a92 <__flatcc_fb_gen_c_verifier@@Base+0x27d2>
  4128e5:	mov    r13d,r12d
  4128e8:	or     r13d,r15d
  4128eb:	or     r13d,DWORD PTR [rsp+0xc]
  4128f0:	test   r12d,r12d
  4128f3:	jne    412ef0 <__flatcc_fb_gen_c_verifier@@Base+0x2c30>
  4128f9:	test   ebp,ebp
  4128fb:	je     412b0b <__flatcc_fb_gen_c_verifier@@Base+0x284b>
  412901:	test   r13d,r13d
  412904:	je     412f40 <__flatcc_fb_gen_c_verifier@@Base+0x2c80>
  41290a:	mov    rsi,QWORD PTR [r14+0x80]
  412911:	mov    r8d,0xffffffff
  412917:	test   rsi,rsi
  41291a:	je     412927 <__flatcc_fb_gen_c_verifier@@Base+0x2667>
  41291c:	mov    rax,r8
  41291f:	xor    edx,edx
  412921:	div    rsi
  412924:	mov    r8,rax
  412927:	movsx  ecx,WORD PTR [r14+0x72]
  41292c:	mov    rdx,rsi
  41292f:	lea    rsi,[rip+0x2e7f2]        # 441128 <_IO_stdin_used@@Base+0x15128>
  412936:	mov    rdi,rbx
  412939:	xor    eax,eax
  41293b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412940:	lea    rsi,[rip+0x2e839]        # 441180 <_IO_stdin_used@@Base+0x15180>
  412947:	xor    eax,eax
  412949:	mov    rdi,rbx
  41294c:	mov    ebp,0x1
  412951:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412956:	lea    rsi,[rip+0x2dc8c]        # 4405e9 <_IO_stdin_used@@Base+0x145e9>
  41295d:	xor    eax,eax
  41295f:	mov    rdi,rbx
  412962:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412967:	add    DWORD PTR [rbx+0xf0],0x1
  41296e:	test   r12d,r12d
  412971:	jne    412f83 <__flatcc_fb_gen_c_verifier@@Base+0x2cc3>
  412977:	test   r13d,r13d
  41297a:	je     412993 <__flatcc_fb_gen_c_verifier@@Base+0x26d3>
  41297c:	test   bpl,0x1
  412980:	je     412993 <__flatcc_fb_gen_c_verifier@@Base+0x26d3>
  412982:	lea    rsi,[rip+0x2e8a7]        # 441230 <_IO_stdin_used@@Base+0x15230>
  412989:	mov    rdi,rbx
  41298c:	xor    eax,eax
  41298e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412993:	cmp    WORD PTR [rsp+0x48],0x1
  412999:	je     412b1a <__flatcc_fb_gen_c_verifier@@Base+0x285a>
  41299f:	mov    eax,ebp
  4129a1:	xor    eax,0x1
  4129a4:	test   eax,r15d
  4129a7:	jne    4130c0 <__flatcc_fb_gen_c_verifier@@Base+0x2e00>
  4129ad:	test   r12d,r12d
  4129b0:	jne    412b40 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
  4129b6:	test   r15d,r15d
  4129b9:	jne    4130f0 <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
  4129bf:	mov    r11d,DWORD PTR [rsp+0x28]
  4129c4:	test   r11d,r11d
  4129c7:	jne    413110 <__flatcc_fb_gen_c_verifier@@Base+0x2e50>
  4129cd:	mov    r10d,DWORD PTR [rsp+0x30]
  4129d2:	test   r10d,r10d
  4129d5:	jne    4131b0 <__flatcc_fb_gen_c_verifier@@Base+0x2ef0>
  4129db:	mov    r8d,DWORD PTR [rsp+0x2c]
  4129e0:	test   r8d,r8d
  4129e3:	jne    4132c0 <__flatcc_fb_gen_c_verifier@@Base+0x3000>
  4129e9:	mov    edi,DWORD PTR [rsp+0x50]
  4129ed:	test   edi,edi
  4129ef:	je     413200 <__flatcc_fb_gen_c_verifier@@Base+0x2f40>
  4129f5:	mov    esi,DWORD PTR [rsp+0x58]
  4129f9:	mov    rcx,QWORD PTR [r14+0x88]
  412a00:	mov    rdx,QWORD PTR [r14+0xa0]
  412a07:	mov    r8,QWORD PTR [rsp+0x10]
  412a0c:	test   esi,esi
  412a0e:	je     413358 <__flatcc_fb_gen_c_verifier@@Base+0x3098>
  412a14:	lea    rsi,[rip+0x2ebf5]        # 441610 <_IO_stdin_used@@Base+0x15610>
  412a1b:	mov    rdi,rbx
  412a1e:	xor    eax,eax
  412a20:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412a25:	nop    DWORD PTR [rax]
  412a28:	test   ebp,ebp
  412a2a:	je     412a7f <__flatcc_fb_gen_c_verifier@@Base+0x27bf>
  412a2c:	test   r13d,r13d
  412a2f:	je     413140 <__flatcc_fb_gen_c_verifier@@Base+0x2e80>
  412a35:	lea    rsi,[rip+0x2ee24]        # 441860 <_IO_stdin_used@@Base+0x15860>
  412a3c:	xor    eax,eax
  412a3e:	mov    rdi,rbx
  412a41:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412a46:	mov    eax,DWORD PTR [rbx+0xf0]
  412a4c:	test   eax,eax
  412a4e:	je     4131d8 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
  412a54:	sub    eax,0x1
  412a57:	lea    rsi,[rip+0x2d933]        # 440391 <_IO_stdin_used@@Base+0x14391>
  412a5e:	mov    rdi,rbx
  412a61:	mov    DWORD PTR [rbx+0xf0],eax
  412a67:	xor    eax,eax
  412a69:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412a6e:	lea    rsi,[rip+0x2eeeb]        # 441960 <_IO_stdin_used@@Base+0x15960>
  412a75:	mov    rdi,rbx
  412a78:	xor    eax,eax
  412a7a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412a7f:	cmp    DWORD PTR [rsp+0x8],0x1
  412a84:	jne    412c88 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
  412a8a:	mov    DWORD PTR [rsp+0x8],0x2
  412a92:	mov    eax,DWORD PTR [rbx+0xf0]
  412a98:	test   eax,eax
  412a9a:	je     41366f <__flatcc_fb_gen_c_verifier@@Base+0x33af>
  412aa0:	sub    eax,0x1
  412aa3:	lea    rsi,[rip+0x2db29]        # 4405d3 <_IO_stdin_used@@Base+0x145d3>
  412aaa:	mov    rdi,rbx
  412aad:	mov    DWORD PTR [rbx+0xf0],eax
  412ab3:	xor    eax,eax
  412ab5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412aba:	mov    rsi,QWORD PTR [r14+0x90]
  412ac1:	add    DWORD PTR [rbx+0xf0],0x1
  412ac8:	mov    rdx,QWORD PTR [rsp+0x10]
  412acd:	mov    rdi,QWORD PTR [rsi+0x18]
  412ad1:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  412ad6:	mov    rax,QWORD PTR [r14+0x90]
  412add:	cmp    WORD PTR [rax+0x10],0x0
  412ae2:	jne    413130 <__flatcc_fb_gen_c_verifier@@Base+0x2e70>
  412ae8:	mov    DWORD PTR [rsp+0x2c],0x1
  412af0:	lea    rsi,[rip+0x2e5a9]        # 4410a0 <_IO_stdin_used@@Base+0x150a0>
  412af7:	mov    rdi,rbx
  412afa:	xor    eax,eax
  412afc:	xor    ebp,ebp
  412afe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b03:	mov    r13d,DWORD PTR [rsp+0xc]
  412b08:	or     r13d,r15d
  412b0b:	xor    r12d,r12d
  412b0e:	cmp    WORD PTR [rsp+0x48],0x1
  412b14:	jne    41299f <__flatcc_fb_gen_c_verifier@@Base+0x26df>
  412b1a:	mov    rdx,QWORD PTR [r14+0x78]
  412b1e:	lea    rsi,[rip+0x2e753]        # 441278 <_IO_stdin_used@@Base+0x15278>
  412b25:	xor    eax,eax
  412b27:	mov    rdi,rbx
  412b2a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b2f:	test   r12d,r12d
  412b32:	je     4129b6 <__flatcc_fb_gen_c_verifier@@Base+0x26f6>
  412b38:	nop    DWORD PTR [rax+rax*1+0x0]
  412b40:	mov    r12,QWORD PTR [rsp+0x18]
  412b45:	lea    rsi,[rip+0x2e7ac]        # 4412f8 <_IO_stdin_used@@Base+0x152f8>
  412b4c:	xor    eax,eax
  412b4e:	mov    rdi,rbx
  412b51:	mov    rdx,r12
  412b54:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b59:	lea    rsi,[rip+0x2dad5]        # 440635 <_IO_stdin_used@@Base+0x14635>
  412b60:	xor    eax,eax
  412b62:	mov    rdi,rbx
  412b65:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b6a:	add    DWORD PTR [rbx+0xf0],0x1
  412b71:	lea    rsi,[rip+0x2e7c0]        # 441338 <_IO_stdin_used@@Base+0x15338>
  412b78:	xor    eax,eax
  412b7a:	mov    rdx,r12
  412b7d:	mov    rdi,rbx
  412b80:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b85:	lea    rsi,[rip+0x2e804]        # 441390 <_IO_stdin_used@@Base+0x15390>
  412b8c:	xor    eax,eax
  412b8e:	mov    rdi,rbx
  412b91:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b96:	mov    eax,DWORD PTR [rbx+0xf0]
  412b9c:	test   eax,eax
  412b9e:	je     413650 <__flatcc_fb_gen_c_verifier@@Base+0x3390>
  412ba4:	sub    eax,0x1
  412ba7:	lea    rsi,[rip+0x2d7e3]        # 440391 <_IO_stdin_used@@Base+0x14391>
  412bae:	mov    rdi,rbx
  412bb1:	mov    DWORD PTR [rbx+0xf0],eax
  412bb7:	xor    eax,eax
  412bb9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412bbe:	mov    r12d,DWORD PTR [rsp+0x40]
  412bc3:	mov    eax,DWORD PTR [rsp+0x44]
  412bc7:	or     r12d,ebp
  412bca:	or     eax,r12d
  412bcd:	jne    413268 <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
  412bd3:	movzx  eax,WORD PTR [r14+0x58]
  412bd8:	cmp    ax,0x4
  412bdc:	je     413330 <__flatcc_fb_gen_c_verifier@@Base+0x3070>
  412be2:	ja     413290 <__flatcc_fb_gen_c_verifier@@Base+0x2fd0>
  412be8:	cmp    ax,0x3
  412bec:	jne    4132e0 <__flatcc_fb_gen_c_verifier@@Base+0x3020>
  412bf2:	vmovsd xmm0,QWORD PTR [r14+0x48]
  412bf8:	lea    rsi,[rip+0x2e851]        # 441450 <_IO_stdin_used@@Base+0x15450>
  412bff:	mov    rdi,rbx
  412c02:	mov    eax,0x1
  412c07:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412c0c:	add    DWORD PTR [rbx+0xf0],0x1
  412c13:	movsx  r8d,WORD PTR [r14+0x72]
  412c18:	mov    rcx,QWORD PTR [r14+0x80]
  412c1f:	lea    rsi,[rip+0x2e8a2]        # 4414c8 <_IO_stdin_used@@Base+0x154c8>
  412c26:	mov    rdx,QWORD PTR [r14+0x88]
  412c2d:	mov    rdi,rbx
  412c30:	xor    eax,eax
  412c32:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412c37:	mov    rcx,QWORD PTR [rsp+0x18]
  412c3c:	lea    rsi,[rip+0x2da05]        # 440648 <_IO_stdin_used@@Base+0x14648>
  412c43:	mov    rdx,rbx
  412c46:	mov    rdi,rbx
  412c49:	xor    eax,eax
  412c4b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412c50:	mov    eax,DWORD PTR [rbx+0xf0]
  412c56:	test   eax,eax
  412c58:	je     41372b <__flatcc_fb_gen_c_verifier@@Base+0x346b>
  412c5e:	sub    eax,0x1
  412c61:	lea    rsi,[rip+0x2d729]        # 440391 <_IO_stdin_used@@Base+0x14391>
  412c68:	mov    rdi,rbx
  412c6b:	mov    DWORD PTR [rbx+0xf0],eax
  412c71:	xor    eax,eax
  412c73:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412c78:	cmp    DWORD PTR [rsp+0x8],0x1
  412c7d:	je     412a8a <__flatcc_fb_gen_c_verifier@@Base+0x27ca>
  412c83:	nop    DWORD PTR [rax+rax*1+0x0]
  412c88:	cmp    DWORD PTR [rsp+0x8],0x2
  412c8d:	je     4135be <__flatcc_fb_gen_c_verifier@@Base+0x32fe>
  412c93:	mov    eax,DWORD PTR [rsp+0x4c]
  412c97:	or     eax,DWORD PTR [rsp+0x54]
  412c9b:	or     eax,DWORD PTR [rsp+0x28]
  412c9f:	or     eax,DWORD PTR [rsp+0x8]
  412ca3:	or     eax,DWORD PTR [rsp+0x2c]
  412ca7:	or     eax,ebp
  412ca9:	je     412cd4 <__flatcc_fb_gen_c_verifier@@Base+0x2a14>
  412cab:	mov    rdx,QWORD PTR [r14+0x88]
  412cb2:	lea    rsi,[rip+0x2ec17]        # 4418d0 <_IO_stdin_used@@Base+0x158d0>
  412cb9:	mov    rdi,rbx
  412cbc:	xor    eax,eax
  412cbe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412cc3:	lea    rsi,[rip+0x2d99b]        # 440665 <_IO_stdin_used@@Base+0x14665>
  412cca:	mov    rdi,rbx
  412ccd:	xor    eax,eax
  412ccf:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412cd4:	xor    eax,eax
  412cd6:	mov    rcx,QWORD PTR [rsp+0x228]
  412cde:	xor    rcx,QWORD PTR fs:0x28
  412ce7:	jne    4136de <__flatcc_fb_gen_c_verifier@@Base+0x341e>
  412ced:	add    rsp,0x238
  412cf4:	pop    rbx
  412cf5:	pop    rbp
  412cf6:	pop    r12
  412cf8:	pop    r13
  412cfa:	pop    r14
  412cfc:	pop    r15
  412cfe:	ret    
  412cff:	nop
  412d00:	mov    edx,DWORD PTR [r14+0x18]
  412d04:	mov    DWORD PTR [rsp+0x8],0x0
  412d0c:	mov    DWORD PTR [rsp+0x54],0x0
  412d14:	mov    DWORD PTR [rsp+0x4c],0x0
  412d1c:	mov    eax,ebp
  412d1e:	xor    r15d,r15d
  412d21:	mov    DWORD PTR [rsp+0x2c],0x0
  412d29:	and    eax,0x1
  412d2c:	mov    DWORD PTR [rsp+0x28],0x0
  412d34:	mov    DWORD PTR [rsp+0x34],0x0
  412d3c:	mov    BYTE PTR [rsp+0x4b],al
  412d40:	mov    DWORD PTR [rsp+0x30],0x0
  412d48:	mov    r12d,0x1
  412d4e:	jmp    412879 <__flatcc_fb_gen_c_verifier@@Base+0x25b9>
  412d53:	nop    DWORD PTR [rax+rax*1+0x0]
  412d58:	xor    eax,eax
  412d5a:	cmp    QWORD PTR [r14+0x90],0x0
  412d62:	setne  al
  412d65:	mov    DWORD PTR [rsp+0x8],eax
  412d69:	movzx  eax,WORD PTR [r14+0x70]
  412d6e:	mov    edx,eax
  412d70:	and    dx,0x400
  412d75:	movzx  edx,dx
  412d78:	mov    DWORD PTR [rsp+0x4c],edx
  412d7c:	mov    edx,eax
  412d7e:	and    dx,0x800
  412d83:	and    eax,0xc00
  412d88:	movzx  edx,dx
  412d8b:	mov    DWORD PTR [rsp+0x30],eax
  412d8f:	mov    DWORD PTR [rsp+0x54],edx
  412d93:	mov    edx,DWORD PTR [r14+0x18]
  412d97:	je     412d1c <__flatcc_fb_gen_c_verifier@@Base+0x2a5c>
  412d99:	cmp    edx,0x4
  412d9c:	setne  al
  412d9f:	xor    ecx,0x1
  412da2:	or     al,cl
  412da4:	mov    BYTE PTR [rsp+0x4b],al
  412da8:	jne    41368e <__flatcc_fb_gen_c_verifier@@Base+0x33ce>
  412dae:	mov    r13d,DWORD PTR [rsp+0xc]
  412db3:	xor    r15d,r15d
  412db6:	xor    r12d,r12d
  412db9:	xor    ebp,ebp
  412dbb:	mov    DWORD PTR [rsp+0x2c],0x0
  412dc3:	mov    DWORD PTR [rsp+0x28],0x0
  412dcb:	mov    DWORD PTR [rsp+0x34],0x0
  412dd3:	mov    edx,0x4
  412dd8:	mov    DWORD PTR [rsp+0x8],0x0
  412de0:	test   r13d,r13d
  412de3:	jne    412887 <__flatcc_fb_gen_c_verifier@@Base+0x25c7>
  412de9:	mov    DWORD PTR [rsp+0x50],0x0
  412df1:	movzx  ecx,BYTE PTR [rsp+0x50]
  412df6:	and    BYTE PTR [rsp+0x4b],cl
  412dfa:	je     41363b <__flatcc_fb_gen_c_verifier@@Base+0x337b>
  412e00:	xor    ebp,ebp
  412e02:	cmp    DWORD PTR [rsp+0x8],0x1
  412e07:	mov    BYTE PTR [rsp+0x4b],0x0
  412e0c:	mov    DWORD PTR [rsp+0x5c],0x0
  412e14:	mov    DWORD PTR [rsp+0x58],0x1
  412e1c:	jne    4128bd <__flatcc_fb_gen_c_verifier@@Base+0x25fd>
  412e22:	lea    rsi,[rip+0x2e23f]        # 441068 <_IO_stdin_used@@Base+0x15068>
  412e29:	mov    rdi,rbx
  412e2c:	xor    eax,eax
  412e2e:	mov    DWORD PTR [rsp+0x18],edx
  412e32:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412e37:	add    DWORD PTR [rbx+0xf0],0x1
  412e3e:	mov    edx,DWORD PTR [rsp+0x18]
  412e42:	jmp    4128bd <__flatcc_fb_gen_c_verifier@@Base+0x25fd>
  412e47:	nop    WORD PTR [rax+rax*1+0x0]
  412e50:	mov    rsi,QWORD PTR [r14+0x18]
  412e54:	mov    rdx,QWORD PTR [rsp+0x10]
  412e59:	mov    rdi,QWORD PTR [rsi+0x18]
  412e5d:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  412e62:	mov    rdx,QWORD PTR [r14+0x18]
  412e66:	xor    ecx,ecx
  412e68:	movzx  eax,WORD PTR [rdx+0x10]
  412e6c:	cmp    ax,0x3
  412e70:	sete   cl
  412e73:	xor    r15d,r15d
  412e76:	cmp    ax,0x1
  412e7a:	sete   r15b
  412e7e:	mov    DWORD PTR [rsp+0x34],ecx
  412e82:	xor    ecx,ecx
  412e84:	test   ax,ax
  412e87:	sete   cl
  412e8a:	mov    DWORD PTR [rsp+0x2c],ecx
  412e8e:	mov    ecx,DWORD PTR [rsp+0xc]
  412e92:	test   ecx,ecx
  412e94:	jne    413580 <__flatcc_fb_gen_c_verifier@@Base+0x32c0>
  412e9a:	cmp    ax,0x4
  412e9e:	jne    413580 <__flatcc_fb_gen_c_verifier@@Base+0x32c0>
  412ea4:	mov    eax,ebp
  412ea6:	mov    DWORD PTR [rsp+0x28],0x0
  412eae:	mov    DWORD PTR [rsp+0x50],0x1
  412eb6:	and    eax,0x1
  412eb9:	xor    edx,edx
  412ebb:	mov    DWORD PTR [rsp+0x30],0x0
  412ec3:	mov    BYTE PTR [rsp+0x4b],al
  412ec7:	mov    DWORD PTR [rsp+0x54],0x0
  412ecf:	xor    r12d,r12d
  412ed2:	mov    DWORD PTR [rsp+0x4c],0x0
  412eda:	mov    DWORD PTR [rsp+0x8],0x0
  412ee2:	jmp    412df1 <__flatcc_fb_gen_c_verifier@@Base+0x2b31>
  412ee7:	nop    WORD PTR [rax+rax*1+0x0]
  412ef0:	cmp    edx,0xb
  412ef3:	ja     413070 <__flatcc_fb_gen_c_verifier@@Base+0x2db0>
  412ef9:	lea    rcx,[rip+0x2f974]        # 442874 <_IO_stdin_used@@Base+0x16874>
  412f00:	movsxd rax,DWORD PTR [rcx+rdx*4]
  412f04:	add    rax,rcx
  412f07:	jmp    rax
  412f09:	nop    DWORD PTR [rax+0x0]
  412f10:	test   ebp,ebp
  412f12:	je     413370 <__flatcc_fb_gen_c_verifier@@Base+0x30b0>
  412f18:	lea    rax,[rip+0x21c76]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  412f1f:	test   r13d,r13d
  412f22:	mov    r12d,ebp
  412f25:	mov    QWORD PTR [rsp+0x18],rax
  412f2a:	lea    rax,[rip+0x21b46]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  412f31:	mov    QWORD PTR [rsp+0x20],rax
  412f36:	jne    41290a <__flatcc_fb_gen_c_verifier@@Base+0x264a>
  412f3c:	nop    DWORD PTR [rax+0x0]
  412f40:	lea    rsi,[rip+0x2e1a1]        # 4410e8 <_IO_stdin_used@@Base+0x150e8>
  412f47:	mov    rdi,rbx
  412f4a:	xor    eax,eax
  412f4c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412f51:	jmp    412940 <__flatcc_fb_gen_c_verifier@@Base+0x2680>
  412f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f60:	lea    rax,[rip+0x21b07]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  412f67:	mov    QWORD PTR [rsp+0x20],rax
  412f6c:	lea    rax,[rip+0x21c15]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  412f73:	mov    QWORD PTR [rsp+0x18],rax
  412f78:	xor    r12d,r12d
  412f7b:	test   ebp,ebp
  412f7d:	jne    413068 <__flatcc_fb_gen_c_verifier@@Base+0x2da8>
  412f83:	mov    rdx,QWORD PTR [rsp+0x20]
  412f88:	lea    rsi,[rip+0x2d669]        # 4405f8 <_IO_stdin_used@@Base+0x145f8>
  412f8f:	xor    eax,eax
  412f91:	mov    rdi,rbx
  412f94:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412f99:	lea    rsi,[rip+0x2e220]        # 4411c0 <_IO_stdin_used@@Base+0x151c0>
  412fa0:	xor    eax,eax
  412fa2:	mov    rdi,rbx
  412fa5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412faa:	mov    ebp,DWORD PTR [rsp+0x34]
  412fae:	add    DWORD PTR [rbx+0xf0],0x2
  412fb5:	test   ebp,ebp
  412fb7:	je     412fcf <__flatcc_fb_gen_c_verifier@@Base+0x2d0f>
  412fb9:	mov    rdx,QWORD PTR [rsp+0x10]
  412fbe:	lea    rsi,[rip+0x2d63f]        # 440604 <_IO_stdin_used@@Base+0x14604>
  412fc5:	mov    rdi,rbx
  412fc8:	xor    eax,eax
  412fca:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412fcf:	mov    rax,QWORD PTR [rbx+0xd8]
  412fd6:	mov    rcx,QWORD PTR [rsp+0x38]
  412fdb:	lea    rsi,[rip+0x2d636]        # 440618 <_IO_stdin_used@@Base+0x14618>
  412fe2:	mov    rdi,rbx
  412fe5:	mov    rdx,QWORD PTR [rax+0x110]
  412fec:	xor    eax,eax
  412fee:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412ff3:	mov    rax,QWORD PTR [rbx+0xd8]
  412ffa:	lea    rsi,[rip+0x2e207]        # 441208 <_IO_stdin_used@@Base+0x15208>
  413001:	mov    rdi,rbx
  413004:	mov    rdx,QWORD PTR [rax+0x110]
  41300b:	xor    eax,eax
  41300d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413012:	mov    eax,DWORD PTR [rbx+0xf0]
  413018:	test   eax,eax
  41301a:	je     413617 <__flatcc_fb_gen_c_verifier@@Base+0x3357>
  413020:	cmp    eax,0x1
  413023:	je     41360d <__flatcc_fb_gen_c_verifier@@Base+0x334d>
  413029:	sub    eax,0x2
  41302c:	mov    ebp,r12d
  41302f:	mov    r12d,0x1
  413035:	mov    DWORD PTR [rbx+0xf0],eax
  41303b:	jmp    412977 <__flatcc_fb_gen_c_verifier@@Base+0x26b7>
  413040:	lea    rax,[rip+0x21a15]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  413047:	xor    r12d,r12d
  41304a:	test   ebp,ebp
  41304c:	mov    QWORD PTR [rsp+0x20],rax
  413051:	lea    rax,[rip+0x21b22]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  413058:	mov    QWORD PTR [rsp+0x18],rax
  41305d:	je     412f83 <__flatcc_fb_gen_c_verifier@@Base+0x2cc3>
  413063:	nop    DWORD PTR [rax+rax*1+0x0]
  413068:	mov    r12d,ebp
  41306b:	jmp    412901 <__flatcc_fb_gen_c_verifier@@Base+0x2641>
  413070:	mov    rax,QWORD PTR [rip+0x3cf71]        # 44ffe8 <stderr@GLIBC_2.2.5>
  413077:	lea    rcx,[rip+0x1a472]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  41307e:	lea    rdx,[rip+0x21a3c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  413085:	lea    r9,[rip+0x1a42c]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  41308c:	mov    esi,0x1
  413091:	mov    r8d,0x60
  413097:	mov    rdi,QWORD PTR [rax]
  41309a:	xor    eax,eax
  41309c:	call   4051f0 <__fprintf_chk@plt>
  4130a1:	lea    rcx,[rip+0x2f8e8]        # 442990 <_IO_stdin_used@@Base+0x16990>
  4130a8:	lea    rsi,[rip+0x1a441]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4130af:	lea    rdi,[rip+0x22a53]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4130b6:	mov    edx,0x60
  4130bb:	call   4050f0 <__assert_fail@plt>
  4130c0:	movzx  r8d,WORD PTR [r14+0x72]
  4130c5:	mov    rcx,QWORD PTR [r14+0x80]
  4130cc:	lea    rsi,[rip+0x2e1d5]        # 4412a8 <_IO_stdin_used@@Base+0x152a8>
  4130d3:	mov    rdx,QWORD PTR [r14+0x88]
  4130da:	mov    rdi,rbx
  4130dd:	xor    eax,eax
  4130df:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4130e4:	jmp    4129ad <__flatcc_fb_gen_c_verifier@@Base+0x26ed>
  4130e9:	nop    DWORD PTR [rax+0x0]
  4130f0:	mov    rdx,QWORD PTR [rsp+0x10]
  4130f5:	lea    rsi,[rip+0x2e41c]        # 441518 <_IO_stdin_used@@Base+0x15518>
  4130fc:	mov    rdi,rbx
  4130ff:	xor    eax,eax
  413101:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413106:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  41310b:	nop    DWORD PTR [rax+rax*1+0x0]
  413110:	lea    rsi,[rip+0x2e439]        # 441550 <_IO_stdin_used@@Base+0x15550>
  413117:	mov    rdi,rbx
  41311a:	xor    eax,eax
  41311c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413121:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413130:	mov    r15d,0x1
  413136:	jmp    412af0 <__flatcc_fb_gen_c_verifier@@Base+0x2830>
  41313b:	nop    DWORD PTR [rax+rax*1+0x0]
  413140:	lea    rsi,[rip+0x2e6c1]        # 441808 <_IO_stdin_used@@Base+0x15808>
  413147:	xor    eax,eax
  413149:	mov    rdi,rbx
  41314c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413151:	lea    rsi,[rip+0x2d50d]        # 440665 <_IO_stdin_used@@Base+0x14665>
  413158:	xor    eax,eax
  41315a:	mov    rdi,rbx
  41315d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413162:	lea    rsi,[rip+0x2e6f7]        # 441860 <_IO_stdin_used@@Base+0x15860>
  413169:	xor    eax,eax
  41316b:	mov    rdi,rbx
  41316e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413173:	mov    eax,DWORD PTR [rbx+0xf0]
  413179:	test   eax,eax
  41317b:	je     4131d8 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
  41317d:	sub    eax,0x1
  413180:	lea    rsi,[rip+0x2d20a]        # 440391 <_IO_stdin_used@@Base+0x14391>
  413187:	mov    rdi,rbx
  41318a:	mov    DWORD PTR [rbx+0xf0],eax
  413190:	xor    eax,eax
  413192:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413197:	lea    rsi,[rip+0x2e78a]        # 441928 <_IO_stdin_used@@Base+0x15928>
  41319e:	mov    rdi,rbx
  4131a1:	xor    eax,eax
  4131a3:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4131a8:	jmp    412a7f <__flatcc_fb_gen_c_verifier@@Base+0x27bf>
  4131ad:	nop    DWORD PTR [rax]
  4131b0:	mov    r9d,DWORD PTR [rsp+0x4c]
  4131b5:	xor    edx,edx
  4131b7:	lea    rsi,[rip+0x2e3d2]        # 441590 <_IO_stdin_used@@Base+0x15590>
  4131be:	mov    rdi,rbx
  4131c1:	test   r9d,r9d
  4131c4:	sete   dl
  4131c7:	xor    eax,eax
  4131c9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4131ce:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  4131d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4131d8:	lea    rcx,[rip+0x2f7d1]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  4131df:	lea    rsi,[rip+0x2d732]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4131e6:	lea    rdi,[rip+0x2d198]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4131ed:	mov    edx,0x287
  4131f2:	call   4050f0 <__assert_fail@plt>
  4131f7:	nop    WORD PTR [rax+rax*1+0x0]
  413200:	cmp    BYTE PTR [rsp+0x4b],0x0
  413205:	jne    413390 <__flatcc_fb_gen_c_verifier@@Base+0x30d0>
  41320b:	test   ebp,ebp
  41320d:	jne    412a2c <__flatcc_fb_gen_c_verifier@@Base+0x276c>
  413213:	mov    rax,QWORD PTR [rip+0x3cdce]        # 44ffe8 <stderr@GLIBC_2.2.5>
  41321a:	lea    rcx,[rip+0x2d6f7]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413221:	lea    rdx,[rip+0x21899]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  413228:	lea    r9,[rip+0x2e5a1]        # 4417d0 <_IO_stdin_used@@Base+0x157d0>
  41322f:	mov    esi,0x1
  413234:	mov    r8d,0x27c
  41323a:	mov    rdi,QWORD PTR [rax]
  41323d:	xor    eax,eax
  41323f:	call   4051f0 <__fprintf_chk@plt>
  413244:	lea    rcx,[rip+0x2f765]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  41324b:	lea    rsi,[rip+0x2d6c6]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413252:	lea    rdi,[rip+0x228b0]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  413259:	mov    edx,0x27c
  41325e:	call   4050f0 <__assert_fail@plt>
  413263:	nop    DWORD PTR [rax+rax*1+0x0]
  413268:	mov    rcx,QWORD PTR [rsp+0x18]
  41326d:	lea    rsi,[rip+0x2d3d4]        # 440648 <_IO_stdin_used@@Base+0x14648>
  413274:	xor    eax,eax
  413276:	mov    rdx,rbx
  413279:	mov    rdi,rbx
  41327c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413281:	test   r12d,r12d
  413284:	jne    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  41328a:	jmp    412c50 <__flatcc_fb_gen_c_verifier@@Base+0x2990>
  41328f:	nop
  413290:	cmp    ax,0x6
  413294:	ja     4132e0 <__flatcc_fb_gen_c_verifier@@Base+0x3020>
  413296:	mov    rdx,QWORD PTR [r14+0x48]
  41329a:	lea    rsi,[rip+0x2e11f]        # 4413c0 <_IO_stdin_used@@Base+0x153c0>
  4132a1:	mov    rdi,rbx
  4132a4:	xor    eax,eax
  4132a6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4132ab:	add    DWORD PTR [rbx+0xf0],0x1
  4132b2:	jmp    412c13 <__flatcc_fb_gen_c_verifier@@Base+0x2953>
  4132b7:	nop    WORD PTR [rax+rax*1+0x0]
  4132c0:	mov    rdx,QWORD PTR [rsp+0x10]
  4132c5:	lea    rsi,[rip+0x2e314]        # 4415e0 <_IO_stdin_used@@Base+0x155e0>
  4132cc:	mov    rdi,rbx
  4132cf:	xor    eax,eax
  4132d1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4132d6:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  4132db:	nop    DWORD PTR [rax+rax*1+0x0]
  4132e0:	mov    rax,QWORD PTR [rip+0x3cd01]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4132e7:	lea    rcx,[rip+0x2d62a]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4132ee:	lea    rdx,[rip+0x217cc]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4132f5:	lea    r9,[rip+0x2e19c]        # 441498 <_IO_stdin_used@@Base+0x15498>
  4132fc:	mov    esi,0x1
  413301:	mov    r8d,0x24e
  413307:	mov    rdi,QWORD PTR [rax]
  41330a:	xor    eax,eax
  41330c:	call   4051f0 <__fprintf_chk@plt>
  413311:	lea    rcx,[rip+0x2f698]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  413318:	lea    rsi,[rip+0x2d5f9]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41331f:	lea    rdi,[rip+0x227e3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  413326:	mov    edx,0x24e
  41332b:	call   4050f0 <__assert_fail@plt>
  413330:	mov    rdx,QWORD PTR [r14+0x48]
  413334:	lea    rsi,[rip+0x2e0cd]        # 441408 <_IO_stdin_used@@Base+0x15408>
  41333b:	mov    rdi,rbx
  41333e:	xor    eax,eax
  413340:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413345:	add    DWORD PTR [rbx+0xf0],0x1
  41334c:	jmp    412c13 <__flatcc_fb_gen_c_verifier@@Base+0x2953>
  413351:	nop    DWORD PTR [rax+0x0]
  413358:	lea    rsi,[rip+0x2e311]        # 441670 <_IO_stdin_used@@Base+0x15670>
  41335f:	mov    rdi,rbx
  413362:	xor    eax,eax
  413364:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413369:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  41336e:	xchg   ax,ax
  413370:	lea    rax,[rip+0x2181e]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  413377:	xor    r12d,r12d
  41337a:	mov    QWORD PTR [rsp+0x18],rax
  41337f:	lea    rax,[rip+0x216f1]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  413386:	mov    QWORD PTR [rsp+0x20],rax
  41338b:	jmp    412f83 <__flatcc_fb_gen_c_verifier@@Base+0x2cc3>
  413390:	lea    rsi,[rip+0x2de29]        # 4411c0 <_IO_stdin_used@@Base+0x151c0>
  413397:	xor    eax,eax
  413399:	mov    rdi,rbx
  41339c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4133a1:	add    DWORD PTR [rbx+0xf0],0x2
  4133a8:	mov    rdx,QWORD PTR [rsp+0x10]
  4133ad:	lea    rsi,[rip+0x2d250]        # 440604 <_IO_stdin_used@@Base+0x14604>
  4133b4:	xor    eax,eax
  4133b6:	mov    rdi,rbx
  4133b9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4133be:	mov    rax,QWORD PTR [rbx+0xd8]
  4133c5:	mov    rcx,QWORD PTR [rsp+0x38]
  4133ca:	lea    rsi,[rip+0x2d247]        # 440618 <_IO_stdin_used@@Base+0x14618>
  4133d1:	mov    rdi,rbx
  4133d4:	mov    rdx,QWORD PTR [rax+0x110]
  4133db:	xor    eax,eax
  4133dd:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4133e2:	mov    rax,QWORD PTR [rbx+0xd8]
  4133e9:	lea    rsi,[rip+0x2de18]        # 441208 <_IO_stdin_used@@Base+0x15208>
  4133f0:	mov    rdi,rbx
  4133f3:	mov    rdx,QWORD PTR [rax+0x110]
  4133fa:	xor    eax,eax
  4133fc:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413401:	mov    eax,DWORD PTR [rbx+0xf0]
  413407:	test   eax,eax
  413409:	je     41370c <__flatcc_fb_gen_c_verifier@@Base+0x344c>
  41340f:	cmp    eax,0x1
  413412:	je     413702 <__flatcc_fb_gen_c_verifier@@Base+0x3442>
  413418:	sub    eax,0x2
  41341b:	mov    rcx,QWORD PTR [r14+0x88]
  413422:	mov    rdx,QWORD PTR [r14+0xa0]
  413429:	mov    DWORD PTR [rbx+0xf0],eax
  41342f:	mov    eax,DWORD PTR [rsp+0x5c]
  413433:	mov    r8,QWORD PTR [rsp+0x10]
  413438:	test   eax,eax
  41343a:	je     413560 <__flatcc_fb_gen_c_verifier@@Base+0x32a0>
  413440:	lea    rsi,[rip+0x2e281]        # 4416c8 <_IO_stdin_used@@Base+0x156c8>
  413447:	mov    r9,r8
  41344a:	mov    rdi,rbx
  41344d:	xor    eax,eax
  41344f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413454:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413459:	nop    DWORD PTR [rax+0x0]
  413460:	lea    rax,[rip+0x2161f]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  413467:	mov    QWORD PTR [rsp+0x20],rax
  41346c:	mov    QWORD PTR [rsp+0x18],rax
  413471:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413480:	lea    rax,[rip+0x21605]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  413487:	mov    QWORD PTR [rsp+0x20],rax
  41348c:	mov    QWORD PTR [rsp+0x18],rax
  413491:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134a0:	lea    rax,[rip+0x215d1]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  4134a7:	mov    QWORD PTR [rsp+0x20],rax
  4134ac:	lea    rax,[rip+0x216dd]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  4134b3:	mov    QWORD PTR [rsp+0x18],rax
  4134b8:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  4134bd:	nop    DWORD PTR [rax]
  4134c0:	lea    rax,[rip+0x215a8]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  4134c7:	mov    QWORD PTR [rsp+0x20],rax
  4134cc:	lea    rax,[rip+0x216b6]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  4134d3:	mov    QWORD PTR [rsp+0x18],rax
  4134d8:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  4134dd:	nop    DWORD PTR [rax]
  4134e0:	lea    rax,[rip+0x2157f]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  4134e7:	mov    QWORD PTR [rsp+0x20],rax
  4134ec:	lea    rax,[rip+0x2168f]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  4134f3:	mov    QWORD PTR [rsp+0x18],rax
  4134f8:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  4134fd:	nop    DWORD PTR [rax]
  413500:	lea    rax,[rip+0x21556]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  413507:	mov    QWORD PTR [rsp+0x20],rax
  41350c:	lea    rax,[rip+0x21668]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  413513:	mov    QWORD PTR [rsp+0x18],rax
  413518:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  41351d:	nop    DWORD PTR [rax]
  413520:	lea    rax,[rip+0x21550]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  413527:	mov    QWORD PTR [rsp+0x20],rax
  41352c:	lea    rax,[rip+0x2165c]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  413533:	mov    QWORD PTR [rsp+0x18],rax
  413538:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  41353d:	nop    DWORD PTR [rax]
  413540:	lea    rax,[rip+0x2151e]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  413547:	mov    QWORD PTR [rsp+0x20],rax
  41354c:	lea    rax,[rip+0x2162e]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  413553:	mov    QWORD PTR [rsp+0x18],rax
  413558:	jmp    412f78 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  41355d:	nop    DWORD PTR [rax]
  413560:	lea    rsi,[rip+0x2e1f9]        # 441760 <_IO_stdin_used@@Base+0x15760>
  413567:	mov    rdi,rbx
  41356a:	xor    eax,eax
  41356c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413571:	jmp    412a28 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413580:	cmp    ax,0x3
  413584:	je     4135a0 <__flatcc_fb_gen_c_verifier@@Base+0x32e0>
  413586:	xor    edx,edx
  413588:	xor    r12d,r12d
  41358b:	mov    DWORD PTR [rsp+0x34],0x0
  413593:	mov    DWORD PTR [rsp+0x28],0x0
  41359b:	jmp    412850 <__flatcc_fb_gen_c_verifier@@Base+0x2590>
  4135a0:	mov    edx,DWORD PTR [rdx+0x48]
  4135a3:	mov    r12d,0x1
  4135a9:	mov    DWORD PTR [rsp+0x34],0x1
  4135b1:	mov    DWORD PTR [rsp+0x28],0x0
  4135b9:	jmp    412850 <__flatcc_fb_gen_c_verifier@@Base+0x2590>
  4135be:	lea    rsi,[rip+0x2d0ad]        # 440672 <_IO_stdin_used@@Base+0x14672>
  4135c5:	xor    eax,eax
  4135c7:	mov    rdi,rbx
  4135ca:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4135cf:	lea    rsi,[rip+0x2e2ca]        # 4418a0 <_IO_stdin_used@@Base+0x158a0>
  4135d6:	xor    eax,eax
  4135d8:	mov    rdi,rbx
  4135db:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4135e0:	mov    eax,DWORD PTR [rbx+0xf0]
  4135e6:	test   eax,eax
  4135e8:	je     4136e3 <__flatcc_fb_gen_c_verifier@@Base+0x3423>
  4135ee:	sub    eax,0x1
  4135f1:	lea    rsi,[rip+0x2d091]        # 440689 <_IO_stdin_used@@Base+0x14689>
  4135f8:	mov    rdi,rbx
  4135fb:	mov    DWORD PTR [rbx+0xf0],eax
  413601:	xor    eax,eax
  413603:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413608:	jmp    412c93 <__flatcc_fb_gen_c_verifier@@Base+0x29d3>
  41360d:	mov    DWORD PTR [rbx+0xf0],0x0
  413617:	lea    rcx,[rip+0x2f392]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  41361e:	lea    rsi,[rip+0x2d2f3]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413625:	lea    rdi,[rip+0x2cd59]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41362c:	mov    edx,0x21b
  413631:	call   4050f0 <__assert_fail@plt>
  413636:	mov    BYTE PTR [rsp+0x4b],0x1
  41363b:	mov    DWORD PTR [rsp+0x5c],0x0
  413643:	mov    DWORD PTR [rsp+0x58],0x0
  41364b:	jmp    4128b2 <__flatcc_fb_gen_c_verifier@@Base+0x25f2>
  413650:	lea    rcx,[rip+0x2f359]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  413657:	lea    rsi,[rip+0x2d2ba]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41365e:	lea    rdi,[rip+0x2cd20]        # 440385 <_IO_stdin_used@@Base+0x14385>
  413665:	mov    edx,0x22f
  41366a:	call   4050f0 <__assert_fail@plt>
  41366f:	lea    rcx,[rip+0x2f33a]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  413676:	lea    rsi,[rip+0x2d29b]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41367d:	lea    rdi,[rip+0x2cd01]        # 440385 <_IO_stdin_used@@Base+0x14385>
  413684:	mov    edx,0x1ea
  413689:	call   4050f0 <__assert_fail@plt>
  41368e:	mov    rax,QWORD PTR [rip+0x3c953]        # 44ffe8 <stderr@GLIBC_2.2.5>
  413695:	lea    rcx,[rip+0x2d27c]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41369c:	lea    rdx,[rip+0x2141e]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4136a3:	lea    r9,[rip+0x2d97e]        # 441028 <_IO_stdin_used@@Base+0x15028>
  4136aa:	mov    esi,0x1
  4136af:	mov    r8d,0x1d2
  4136b5:	mov    rdi,QWORD PTR [rax]
  4136b8:	xor    eax,eax
  4136ba:	call   4051f0 <__fprintf_chk@plt>
  4136bf:	lea    rcx,[rip+0x2f2ea]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  4136c6:	lea    rsi,[rip+0x2d24b]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4136cd:	lea    rdi,[rip+0x22435]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4136d4:	mov    edx,0x1d2
  4136d9:	call   4050f0 <__assert_fail@plt>
  4136de:	call   4050d0 <__stack_chk_fail@plt>
  4136e3:	lea    rcx,[rip+0x2f2c6]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  4136ea:	lea    rsi,[rip+0x2d227]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4136f1:	lea    rdi,[rip+0x2cc8d]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4136f8:	mov    edx,0x295
  4136fd:	call   4050f0 <__assert_fail@plt>
  413702:	mov    DWORD PTR [rbx+0xf0],0x0
  41370c:	lea    rcx,[rip+0x2f29d]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  413713:	lea    rsi,[rip+0x2d1fe]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41371a:	lea    rdi,[rip+0x2cc64]        # 440385 <_IO_stdin_used@@Base+0x14385>
  413721:	mov    edx,0x273
  413726:	call   4050f0 <__assert_fail@plt>
  41372b:	lea    rcx,[rip+0x2f27e]        # 4429b0 <_IO_stdin_used@@Base+0x169b0>
  413732:	lea    rsi,[rip+0x2d1df]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413739:	lea    rdi,[rip+0x2cc45]        # 440385 <_IO_stdin_used@@Base+0x14385>
  413740:	mov    edx,0x25a
  413745:	call   4050f0 <__assert_fail@plt>
  41374a:	nop    WORD PTR [rax+rax*1+0x0]
  413750:	push   r13
  413752:	push   r12
  413754:	xor    eax,eax
  413756:	push   rbp
  413757:	push   rbx
  413758:	mov    rbp,rsi
  41375b:	lea    rsi,[rip+0x2e22e]        # 441990 <_IO_stdin_used@@Base+0x15990>
  413762:	mov    r12,rdx
  413765:	mov    edx,r8d
  413768:	sub    rsp,0x8
  41376c:	mov    rbx,rdi
  41376f:	mov    r13d,ecx
  413772:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413777:	lea    rsi,[rip+0x2cf1e]        # 44069c <_IO_stdin_used@@Base+0x1469c>
  41377e:	xor    eax,eax
  413780:	mov    rdi,rbx
  413783:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413788:	add    DWORD PTR [rbx+0xf0],0x1
  41378f:	lea    rdx,[rbp+0x18]
  413793:	lea    rsi,[rbp+0x10]
  413797:	mov    r8d,r13d
  41379a:	mov    rcx,r12
  41379d:	mov    rdi,rbx
  4137a0:	call   412750 <__flatcc_fb_gen_c_verifier@@Base+0x2490>
  4137a5:	mov    eax,DWORD PTR [rbx+0xf0]
  4137ab:	test   eax,eax
  4137ad:	je     4137db <__flatcc_fb_gen_c_verifier@@Base+0x351b>
  4137af:	sub    eax,0x1
  4137b2:	lea    rsi,[rip+0x2cd28]        # 4404e1 <_IO_stdin_used@@Base+0x144e1>
  4137b9:	mov    rdi,rbx
  4137bc:	mov    DWORD PTR [rbx+0xf0],eax
  4137c2:	xor    eax,eax
  4137c4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4137c9:	add    DWORD PTR [rbx+0xf0],0x1
  4137d0:	add    rsp,0x8
  4137d4:	pop    rbx
  4137d5:	pop    rbp
  4137d6:	pop    r12
  4137d8:	pop    r13
  4137da:	ret    
  4137db:	lea    rcx,[rip+0x2f1ee]        # 4429d0 <_IO_stdin_used@@Base+0x169d0>
  4137e2:	lea    rsi,[rip+0x2d12f]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4137e9:	lea    rdi,[rip+0x2cb95]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4137f0:	mov    edx,0x2a3
  4137f5:	call   4050f0 <__assert_fail@plt>
  4137fa:	nop    WORD PTR [rax+rax*1+0x0]
  413800:	test   rdi,rdi
  413803:	push   r14
  413805:	push   r13
  413807:	push   r12
  413809:	push   rbp
  41380a:	push   rbx
  41380b:	je     41396a <__flatcc_fb_gen_c_verifier@@Base+0x36aa>
  413811:	mov    rbx,rdi
  413814:	mov    rax,rdi
  413817:	xor    ecx,ecx
  413819:	xor    edi,edi
  41381b:	jmp    41382b <__flatcc_fb_gen_c_verifier@@Base+0x356b>
  41381d:	nop    DWORD PTR [rax]
  413820:	add    ecx,0x1
  413823:	mov    rax,QWORD PTR [rax]
  413826:	test   rax,rax
  413829:	je     413860 <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
  41382b:	test   BYTE PTR [rax+0x70],0x4
  41382f:	jne    413823 <__flatcc_fb_gen_c_verifier@@Base+0x3563>
  413831:	movzx  edx,WORD PTR [rax+0x28]
  413835:	sub    edx,0xe
  413838:	cmp    dx,0x1
  41383c:	ja     413820 <__flatcc_fb_gen_c_verifier@@Base+0x3560>
  41383e:	mov    rdx,QWORD PTR [rax+0x18]
  413842:	cmp    WORD PTR [rdx+0x10],0x4
  413847:	jne    413820 <__flatcc_fb_gen_c_verifier@@Base+0x3560>
  413849:	mov    rdx,QWORD PTR [rax+0x8]
  41384d:	add    edi,0x6
  413850:	add    ecx,0x1
  413853:	add    edi,DWORD PTR [rdx+0x8]
  413856:	jmp    413820 <__flatcc_fb_gen_c_verifier@@Base+0x3560>
  413858:	nop    DWORD PTR [rax+rax*1+0x0]
  413860:	test   ecx,ecx
  413862:	mov    DWORD PTR [rsi],ecx
  413864:	je     413970 <__flatcc_fb_gen_c_verifier@@Base+0x36b0>
  41386a:	movsxd r12,ecx
  41386d:	movsxd rdi,edi
  413870:	mov    rbp,r12
  413873:	shl    rbp,0x5
  413877:	add    rdi,rbp
  41387a:	call   405170 <malloc@plt>
  41387f:	test   rax,rax
  413882:	mov    r14,rax
  413885:	je     413970 <__flatcc_fb_gen_c_verifier@@Base+0x36b0>
  41388b:	lea    rcx,[rax+rbp*1]
  41388f:	xor    r8d,r8d
  413892:	mov    rbp,rax
  413895:	jmp    4138af <__flatcc_fb_gen_c_verifier@@Base+0x35ef>
  413897:	nop    WORD PTR [rax+rax*1+0x0]
  4138a0:	mov    rbp,rdi
  4138a3:	mov    rbx,QWORD PTR [rbx]
  4138a6:	test   rbx,rbx
  4138a9:	je     413947 <__flatcc_fb_gen_c_verifier@@Base+0x3687>
  4138af:	test   BYTE PTR [rbx+0x70],0x4
  4138b3:	jne    4138a3 <__flatcc_fb_gen_c_verifier@@Base+0x35e3>
  4138b5:	mov    rax,QWORD PTR [rbx+0x8]
  4138b9:	lea    rdi,[rbp+0x20]
  4138bd:	mov    rsi,QWORD PTR [rax]
  4138c0:	mov    rdx,QWORD PTR [rax+0x8]
  4138c4:	movzx  eax,WORD PTR [rbx+0x28]
  4138c8:	mov    QWORD PTR [rbp+0x10],rbx
  4138cc:	mov    DWORD PTR [rbp+0x18],0x0
  4138d3:	mov    QWORD PTR [rbp+0x0],rsi
  4138d7:	mov    DWORD PTR [rbp+0x8],edx
  4138da:	sub    eax,0xe
  4138dd:	cmp    ax,0x1
  4138e1:	ja     4138a0 <__flatcc_fb_gen_c_verifier@@Base+0x35e0>
  4138e3:	mov    rax,QWORD PTR [rbx+0x18]
  4138e7:	cmp    WORD PTR [rax+0x10],0x4
  4138ec:	jne    4138a0 <__flatcc_fb_gen_c_verifier@@Base+0x35e0>
  4138ee:	lea    eax,[rdx+0x5]
  4138f1:	mov    QWORD PTR [rbx+0xa0],r8
  4138f8:	mov    rdi,rcx
  4138fb:	mov    QWORD PTR [rbp+0x20],rcx
  4138ff:	lea    r13d,[r8+0x1]
  413903:	add    rbp,0x40
  413907:	mov    DWORD PTR [rbp-0x18],eax
  41390a:	call   405160 <memcpy@plt>
  41390f:	mov    rcx,rax
  413912:	mov    rax,QWORD PTR [rbx+0x8]
  413916:	movsxd r8,r13d
  413919:	add    rcx,QWORD PTR [rax+0x8]
  41391d:	mov    eax,0x65
  413922:	mov    DWORD PTR [rcx],0x7079745f
  413928:	mov    WORD PTR [rcx+0x4],ax
  41392c:	add    rcx,0x6
  413930:	mov    QWORD PTR [rbp-0x10],rbx
  413934:	mov    rbx,QWORD PTR [rbx]
  413937:	mov    DWORD PTR [rbp-0x8],0x1
  41393e:	test   rbx,rbx
  413941:	jne    4138af <__flatcc_fb_gen_c_verifier@@Base+0x35ef>
  413947:	lea    rcx,[rip+0xffffffffffffcde2]        # 410730 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  41394e:	mov    rsi,r12
  413951:	mov    rdi,r14
  413954:	mov    edx,0x20
  413959:	call   405080 <qsort@plt>
  41395e:	pop    rbx
  41395f:	mov    rax,r14
  413962:	pop    rbp
  413963:	pop    r12
  413965:	pop    r13
  413967:	pop    r14
  413969:	ret    
  41396a:	mov    DWORD PTR [rsi],0x0
  413970:	xor    r14d,r14d
  413973:	pop    rbx
  413974:	mov    rax,r14
  413977:	pop    rbp
  413978:	pop    r12
  41397a:	pop    r13
  41397c:	pop    r14
  41397e:	ret    
  41397f:	nop
  413980:	push   r13
  413982:	push   r12
  413984:	mov    ecx,0x6
  413989:	push   rbp
  41398a:	push   rbx
  41398b:	mov    rbx,rdi
  41398e:	sub    rsp,0x138
  413995:	mov    rax,QWORD PTR fs:0x28
  41399e:	mov    QWORD PTR [rsp+0x128],rax
  4139a6:	xor    eax,eax
  4139a8:	cmp    WORD PTR [rsi+0x10],0x1
  4139ad:	lea    r13,[rsp+0x10]
  4139b2:	mov    rdi,r13
  4139b5:	rep stos QWORD PTR es:[rdi],rax
  4139b8:	jne    413cbc <__flatcc_fb_gen_c_verifier@@Base+0x39fc>
  4139be:	mov    rbp,rsi
  4139c1:	lea    rsi,[rsp+0xc]
  4139c6:	mov    rdi,QWORD PTR [rbp+0x28]
  4139ca:	call   413800 <__flatcc_fb_gen_c_verifier@@Base+0x3540>
  4139cf:	test   rax,rax
  4139d2:	mov    QWORD PTR [rsp+0x10],rax
  4139d7:	je     413c60 <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
  4139dd:	lea    rax,[rip+0xfffffffffffffd6c]        # 413750 <__flatcc_fb_gen_c_verifier@@Base+0x3490>
  4139e4:	lea    r12,[rsp+0x40]
  4139e9:	mov    ecx,0x1d
  4139ee:	mov    rsi,rbp
  4139f1:	mov    QWORD PTR [rsp+0x28],rbp
  4139f6:	mov    DWORD PTR [rsp+0x30],0x1
  4139fe:	mov    QWORD PTR [rsp+0x18],rax
  413a03:	lea    rax,[rip+0xffffffffffffd206]        # 410c10 <__flatcc_fb_gen_c_verifier@@Base+0x950>
  413a0a:	mov    rdi,r12
  413a0d:	mov    rdx,r12
  413a10:	mov    QWORD PTR [rsp+0x20],rax
  413a15:	xor    eax,eax
  413a17:	rep stos QWORD PTR es:[rdi],rax
  413a1a:	mov    rdi,QWORD PTR [rbp+0x18]
  413a1e:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  413a23:	lea    rsi,[rip+0x2dfae]        # 4419d8 <_IO_stdin_used@@Base+0x159d8>
  413a2a:	mov    rdx,r12
  413a2d:	xor    eax,eax
  413a2f:	mov    rdi,rbx
  413a32:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a37:	lea    rsi,[rip+0x2ca6a]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  413a3e:	xor    eax,eax
  413a40:	mov    rdi,rbx
  413a43:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a48:	add    DWORD PTR [rbx+0xf0],0x1
  413a4f:	lea    rsi,[rip+0x2cc59]        # 4406af <_IO_stdin_used@@Base+0x146af>
  413a56:	xor    eax,eax
  413a58:	mov    rdi,rbx
  413a5b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a60:	mov    ecx,DWORD PTR [rsp+0xc]
  413a64:	test   ecx,ecx
  413a66:	jle    413aac <__flatcc_fb_gen_c_verifier@@Base+0x37ec>
  413a68:	lea    rsi,[rip+0x2cc4a]        # 4406b9 <_IO_stdin_used@@Base+0x146b9>
  413a6f:	mov    rdi,rbx
  413a72:	xor    eax,eax
  413a74:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a79:	lea    rsi,[rip+0x2cc53]        # 4406d3 <_IO_stdin_used@@Base+0x146d3>
  413a80:	mov    rdi,rbx
  413a83:	xor    eax,eax
  413a85:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a8a:	lea    rsi,[rip+0x2cb0d]        # 44059e <_IO_stdin_used@@Base+0x1459e>
  413a91:	mov    rdi,rbx
  413a94:	xor    eax,eax
  413a96:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a9b:	lea    rsi,[rip+0x2cb0e]        # 4405b0 <_IO_stdin_used@@Base+0x145b0>
  413aa2:	mov    rdi,rbx
  413aa5:	xor    eax,eax
  413aa7:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413aac:	lea    rsi,[rip+0x3063b]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  413ab3:	xor    eax,eax
  413ab5:	mov    rdi,rbx
  413ab8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413abd:	lea    rsi,[rip+0x2df94]        # 441a58 <_IO_stdin_used@@Base+0x15a58>
  413ac4:	xor    eax,eax
  413ac6:	mov    rdi,rbx
  413ac9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413ace:	lea    rsi,[rip+0x2cb14]        # 4405e9 <_IO_stdin_used@@Base+0x145e9>
  413ad5:	xor    eax,eax
  413ad7:	mov    rdi,rbx
  413ada:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413adf:	mov    edx,DWORD PTR [rsp+0xc]
  413ae3:	add    DWORD PTR [rbx+0xf0],0x1
  413aea:	test   edx,edx
  413aec:	je     413c30 <__flatcc_fb_gen_c_verifier@@Base+0x3970>
  413af2:	lea    rsi,[rip+0x2df9f]        # 441a98 <_IO_stdin_used@@Base+0x15a98>
  413af9:	mov    rdi,rbx
  413afc:	xor    eax,eax
  413afe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413b03:	lea    rsi,[rip+0x2ceee]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  413b0a:	mov    rdi,rbx
  413b0d:	xor    eax,eax
  413b0f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413b14:	mov    eax,DWORD PTR [rsp+0xc]
  413b18:	xor    r8d,r8d
  413b1b:	xor    edx,edx
  413b1d:	mov    rsi,r13
  413b20:	mov    rdi,rbx
  413b23:	lea    ecx,[rax-0x1]
  413b26:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  413b2b:	lea    rsi,[rip+0x2df9e]        # 441ad0 <_IO_stdin_used@@Base+0x15ad0>
  413b32:	xor    eax,eax
  413b34:	mov    rdi,rbx
  413b37:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413b3c:	mov    eax,DWORD PTR [rbx+0xf0]
  413b42:	test   eax,eax
  413b44:	je     413cdb <__flatcc_fb_gen_c_verifier@@Base+0x3a1b>
  413b4a:	sub    eax,0x1
  413b4d:	lea    rsi,[rip+0x2c83d]        # 440391 <_IO_stdin_used@@Base+0x14391>
  413b54:	mov    rdi,rbx
  413b57:	mov    DWORD PTR [rbx+0xf0],eax
  413b5d:	xor    eax,eax
  413b5f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413b64:	lea    rsi,[rip+0x2c98f]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  413b6b:	xor    eax,eax
  413b6d:	mov    rdi,rbx
  413b70:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413b75:	mov    eax,DWORD PTR [rsp+0xc]
  413b79:	test   eax,eax
  413b7b:	jle    413bc1 <__flatcc_fb_gen_c_verifier@@Base+0x3901>
  413b7d:	mov    eax,DWORD PTR [rbx+0xf0]
  413b83:	lea    rsi,[rip+0x2cb69]        # 4406f3 <_IO_stdin_used@@Base+0x146f3>
  413b8a:	mov    rdi,rbx
  413b8d:	mov    DWORD PTR [rbx+0xf0],0x0
  413b97:	mov    DWORD PTR [rbx+0xf8],eax
  413b9d:	xor    eax,eax
  413b9f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413ba4:	mov    eax,DWORD PTR [rbx+0xf8]
  413baa:	lea    rsi,[rip+0x2d1cf]        # 440d80 <_IO_stdin_used@@Base+0x14d80>
  413bb1:	mov    rdi,rbx
  413bb4:	mov    DWORD PTR [rbx+0xf0],eax
  413bba:	xor    eax,eax
  413bbc:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413bc1:	mov    eax,DWORD PTR [rbx+0xf0]
  413bc7:	test   eax,eax
  413bc9:	je     413cfa <__flatcc_fb_gen_c_verifier@@Base+0x3a3a>
  413bcf:	sub    eax,0x1
  413bd2:	lea    rsi,[rip+0x2c7b8]        # 440391 <_IO_stdin_used@@Base+0x14391>
  413bd9:	mov    rdi,rbx
  413bdc:	mov    DWORD PTR [rbx+0xf0],eax
  413be2:	xor    eax,eax
  413be4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413be9:	lea    rsi,[rip+0x304fe]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  413bf0:	mov    rdi,rbx
  413bf3:	xor    eax,eax
  413bf5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413bfa:	mov    rdi,QWORD PTR [rsp+0x10]
  413bff:	test   rdi,rdi
  413c02:	je     413c09 <__flatcc_fb_gen_c_verifier@@Base+0x3949>
  413c04:	call   405040 <free@plt>
  413c09:	xor    eax,eax
  413c0b:	mov    rdx,QWORD PTR [rsp+0x128]
  413c13:	xor    rdx,QWORD PTR fs:0x28
  413c1c:	jne    413d19 <__flatcc_fb_gen_c_verifier@@Base+0x3a59>
  413c22:	add    rsp,0x138
  413c29:	pop    rbx
  413c2a:	pop    rbp
  413c2b:	pop    r12
  413c2d:	pop    r13
  413c2f:	ret    
  413c30:	lea    rsi,[rip+0x2caa8]        # 4406df <_IO_stdin_used@@Base+0x146df>
  413c37:	mov    rdi,rbx
  413c3a:	xor    eax,eax
  413c3c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c41:	lea    rsi,[rip+0x2cc40]        # 440888 <_IO_stdin_used@@Base+0x14888>
  413c48:	mov    rdi,rbx
  413c4b:	xor    eax,eax
  413c4d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c52:	jmp    413b2b <__flatcc_fb_gen_c_verifier@@Base+0x386b>
  413c57:	nop    WORD PTR [rax+rax*1+0x0]
  413c60:	mov    esi,DWORD PTR [rsp+0xc]
  413c64:	test   esi,esi
  413c66:	jle    4139dd <__flatcc_fb_gen_c_verifier@@Base+0x371d>
  413c6c:	mov    rax,QWORD PTR [rip+0x3c375]        # 44ffe8 <stderr@GLIBC_2.2.5>
  413c73:	lea    rcx,[rip+0x2cc9e]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413c7a:	lea    rdx,[rip+0x20e40]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  413c81:	lea    r9,[rip+0x2d188]        # 440e10 <_IO_stdin_used@@Base+0x14e10>
  413c88:	mov    esi,0x1
  413c8d:	mov    r8d,0x517
  413c93:	mov    rdi,QWORD PTR [rax]
  413c96:	xor    eax,eax
  413c98:	call   4051f0 <__fprintf_chk@plt>
  413c9d:	lea    rcx,[rip+0x2ed3c]        # 4429e0 <_IO_stdin_used@@Base+0x169e0>
  413ca4:	lea    rsi,[rip+0x2cc6d]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413cab:	lea    rdi,[rip+0x21e57]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  413cb2:	mov    edx,0x517
  413cb7:	call   4050f0 <__assert_fail@plt>
  413cbc:	lea    rcx,[rip+0x2ed1d]        # 4429e0 <_IO_stdin_used@@Base+0x169e0>
  413cc3:	lea    rsi,[rip+0x2cc4e]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413cca:	lea    rdi,[rip+0x19a9f]        # 42d770 <_IO_stdin_used@@Base+0x1770>
  413cd1:	mov    edx,0x515
  413cd6:	call   4050f0 <__assert_fail@plt>
  413cdb:	lea    rcx,[rip+0x2ecfe]        # 4429e0 <_IO_stdin_used@@Base+0x169e0>
  413ce2:	lea    rsi,[rip+0x2cc2f]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413ce9:	lea    rdi,[rip+0x2c695]        # 440385 <_IO_stdin_used@@Base+0x14385>
  413cf0:	mov    edx,0x536
  413cf5:	call   4050f0 <__assert_fail@plt>
  413cfa:	lea    rcx,[rip+0x2ecdf]        # 4429e0 <_IO_stdin_used@@Base+0x169e0>
  413d01:	lea    rsi,[rip+0x2cc10]        # 440918 <_IO_stdin_used@@Base+0x14918>
  413d08:	lea    rdi,[rip+0x2c676]        # 440385 <_IO_stdin_used@@Base+0x14385>
  413d0f:	mov    edx,0x53f
  413d14:	call   4050f0 <__assert_fail@plt>
  413d19:	call   4050d0 <__stack_chk_fail@plt>
  413d1e:	xchg   ax,ax
  413d20:	push   r14
  413d22:	push   r13
  413d24:	mov    ecx,0x6
  413d29:	push   r12
  413d2b:	push   rbp
  413d2c:	push   rbx
  413d2d:	mov    rbx,rdi
  413d30:	sub    rsp,0x130
  413d37:	mov    rax,QWORD PTR fs:0x28
  413d40:	mov    QWORD PTR [rsp+0x128],rax
  413d48:	xor    eax,eax
  413d4a:	cmp    WORD PTR [rsi+0x10],0x0
  413d4f:	lea    rbp,[rsp+0x10]
  413d54:	mov    rdi,rbp
  413d57:	rep stos QWORD PTR es:[rdi],rax
  413d5a:	jne    41437b <__flatcc_fb_gen_c_verifier@@Base+0x40bb>
  413d60:	mov    r12,rsi
  413d63:	lea    rsi,[rsp+0xc]
  413d68:	mov    rdi,QWORD PTR [r12+0x28]
  413d6d:	call   413800 <__flatcc_fb_gen_c_verifier@@Base+0x3540>
  413d72:	test   rax,rax
  413d75:	mov    QWORD PTR [rsp+0x10],rax
  413d7a:	je     4142d0 <__flatcc_fb_gen_c_verifier@@Base+0x4010>
  413d80:	mov    ecx,DWORD PTR [rsp+0xc]
  413d84:	lea    rdi,[rip+0xfffffffffffff9c5]        # 413750 <__flatcc_fb_gen_c_verifier@@Base+0x3490>
  413d8b:	lea    rsi,[rip+0xffffffffffffce7e]        # 410c10 <__flatcc_fb_gen_c_verifier@@Base+0x950>
  413d92:	mov    QWORD PTR [rsp+0x28],r12
  413d97:	mov    DWORD PTR [rsp+0x30],0x0
  413d9f:	mov    QWORD PTR [rsp+0x18],rdi
  413da4:	mov    QWORD PTR [rsp+0x20],rsi
  413da9:	test   ecx,ecx
  413dab:	mov    DWORD PTR [rsp+0x34],0x0
  413db3:	jle    413dea <__flatcc_fb_gen_c_verifier@@Base+0x3b2a>
  413db5:	sub    ecx,0x1
  413db8:	lea    rdx,[rax+0x18]
  413dbc:	shl    rcx,0x5
  413dc0:	lea    rsi,[rax+rcx*1+0x38]
  413dc5:	xor    eax,eax
  413dc7:	nop    WORD PTR [rax+rax*1+0x0]
  413dd0:	mov    r8d,DWORD PTR [rdx]
  413dd3:	xor    ecx,ecx
  413dd5:	test   r8d,r8d
  413dd8:	setne  cl
  413ddb:	add    rdx,0x20
  413ddf:	add    eax,ecx
  413de1:	cmp    rsi,rdx
  413de4:	jne    413dd0 <__flatcc_fb_gen_c_verifier@@Base+0x3b10>
  413de6:	mov    DWORD PTR [rsp+0x34],eax
  413dea:	lea    r13,[rsp+0x40]
  413def:	xor    eax,eax
  413df1:	mov    ecx,0x1d
  413df6:	mov    rsi,r12
  413df9:	mov    rdi,r13
  413dfc:	mov    rdx,r13
  413dff:	rep stos QWORD PTR es:[rdi],rax
  413e02:	mov    rdi,QWORD PTR [r12+0x18]
  413e07:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  413e0c:	lea    rsi,[rip+0x2dcfd]        # 441b10 <_IO_stdin_used@@Base+0x15b10>
  413e13:	mov    rdx,r13
  413e16:	xor    eax,eax
  413e18:	mov    rdi,rbx
  413e1b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e20:	lea    rsi,[rip+0x2c681]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  413e27:	xor    eax,eax
  413e29:	mov    rdi,rbx
  413e2c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e31:	add    DWORD PTR [rbx+0xf0],0x1
  413e38:	lea    rsi,[rip+0x2c870]        # 4406af <_IO_stdin_used@@Base+0x146af>
  413e3f:	mov    rdi,rbx
  413e42:	xor    eax,eax
  413e44:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e49:	mov    edi,DWORD PTR [rsp+0xc]
  413e4d:	test   edi,edi
  413e4f:	jle    413e95 <__flatcc_fb_gen_c_verifier@@Base+0x3bd5>
  413e51:	lea    rsi,[rip+0x2c87b]        # 4406d3 <_IO_stdin_used@@Base+0x146d3>
  413e58:	mov    rdi,rbx
  413e5b:	xor    eax,eax
  413e5d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e62:	lea    rsi,[rip+0x2dd2f]        # 441b98 <_IO_stdin_used@@Base+0x15b98>
  413e69:	mov    rdi,rbx
  413e6c:	xor    eax,eax
  413e6e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e73:	lea    rsi,[rip+0x2c724]        # 44059e <_IO_stdin_used@@Base+0x1459e>
  413e7a:	mov    rdi,rbx
  413e7d:	xor    eax,eax
  413e7f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e84:	lea    rsi,[rip+0x2c725]        # 4405b0 <_IO_stdin_used@@Base+0x145b0>
  413e8b:	mov    rdi,rbx
  413e8e:	xor    eax,eax
  413e90:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e95:	mov    esi,DWORD PTR [rsp+0x34]
  413e99:	test   esi,esi
  413e9b:	jne    414240 <__flatcc_fb_gen_c_verifier@@Base+0x3f80>
  413ea1:	lea    rsi,[rip+0x30246]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  413ea8:	xor    eax,eax
  413eaa:	mov    rdi,rbx
  413ead:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413eb2:	lea    rsi,[rip+0x2c5d4]        # 44048d <_IO_stdin_used@@Base+0x1448d>
  413eb9:	xor    eax,eax
  413ebb:	mov    rdi,rbx
  413ebe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413ec3:	mov    rdx,QWORD PTR [r12+0xa8]
  413ecb:	lea    rsi,[rip+0x2dcee]        # 441bc0 <_IO_stdin_used@@Base+0x15bc0>
  413ed2:	xor    eax,eax
  413ed4:	mov    rdi,rbx
  413ed7:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413edc:	movsxd rdx,DWORD PTR [rsp+0x34]
  413ee1:	test   edx,edx
  413ee3:	jne    414280 <__flatcc_fb_gen_c_verifier@@Base+0x3fc0>
  413ee9:	lea    rsi,[rip+0x2db68]        # 441a58 <_IO_stdin_used@@Base+0x15a58>
  413ef0:	xor    eax,eax
  413ef2:	mov    rdi,rbx
  413ef5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413efa:	lea    rsi,[rip+0x2c6e8]        # 4405e9 <_IO_stdin_used@@Base+0x145e9>
  413f01:	xor    eax,eax
  413f03:	mov    rdi,rbx
  413f06:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413f0b:	add    DWORD PTR [rbx+0xf0],0x1
  413f12:	lea    rsi,[rip+0x2db7f]        # 441a98 <_IO_stdin_used@@Base+0x15a98>
  413f19:	xor    eax,eax
  413f1b:	mov    rdi,rbx
  413f1e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413f23:	mov    ecx,DWORD PTR [rsp+0xc]
  413f27:	test   ecx,ecx
  413f29:	jle    4142a0 <__flatcc_fb_gen_c_verifier@@Base+0x3fe0>
  413f2f:	lea    rsi,[rip+0x2cac2]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  413f36:	mov    rdi,rbx
  413f39:	xor    eax,eax
  413f3b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413f40:	mov    eax,DWORD PTR [rsp+0xc]
  413f44:	xor    r8d,r8d
  413f47:	xor    edx,edx
  413f49:	mov    rsi,rbp
  413f4c:	mov    rdi,rbx
  413f4f:	lea    ecx,[rax-0x1]
  413f52:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  413f57:	lea    rsi,[rip+0x2dd02]        # 441c60 <_IO_stdin_used@@Base+0x15c60>
  413f5e:	xor    eax,eax
  413f60:	mov    rdi,rbx
  413f63:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413f68:	mov    eax,DWORD PTR [rbx+0xf0]
  413f6e:	test   eax,eax
  413f70:	je     41435c <__flatcc_fb_gen_c_verifier@@Base+0x409c>
  413f76:	sub    eax,0x1
  413f79:	lea    rsi,[rip+0x2c411]        # 440391 <_IO_stdin_used@@Base+0x14391>
  413f80:	mov    rdi,rbx
  413f83:	mov    DWORD PTR [rbx+0xf0],eax
  413f89:	xor    eax,eax
  413f8b:	xor    r12d,r12d
  413f8e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413f93:	lea    rsi,[rip+0x2c78d]        # 440727 <_IO_stdin_used@@Base+0x14727>
  413f9a:	xor    eax,eax
  413f9c:	mov    rdi,rbx
  413f9f:	xor    ebp,ebp
  413fa1:	mov    r14d,0x1
  413fa7:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413fac:	mov    edx,DWORD PTR [rsp+0xc]
  413fb0:	test   edx,edx
  413fb2:	jg     414005 <__flatcc_fb_gen_c_verifier@@Base+0x3d45>
  413fb4:	jmp    4140de <__flatcc_fb_gen_c_verifier@@Base+0x3e1e>
  413fb9:	nop    DWORD PTR [rax+0x0]
  413fc0:	and    dh,0x1
  413fc3:	movzx  ecx,cl
  413fc6:	je     413ff8 <__flatcc_fb_gen_c_verifier@@Base+0x3d38>
  413fc8:	mov    rdx,QWORD PTR [rax+0x88]
  413fcf:	sub    rdx,rcx
  413fd2:	test   r14d,r14d
  413fd5:	je     414038 <__flatcc_fb_gen_c_verifier@@Base+0x3d78>
  413fd7:	lea    rsi,[rip+0x2dcc2]        # 441ca0 <_IO_stdin_used@@Base+0x15ca0>
  413fde:	mov    rdi,rbx
  413fe1:	xor    eax,eax
  413fe3:	xor    r14d,r14d
  413fe6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413feb:	add    DWORD PTR [rbx+0xf0],0x1
  413ff2:	nop    WORD PTR [rax+rax*1+0x0]
  413ff8:	add    ebp,0x1
  413ffb:	add    r12,0x20
  413fff:	cmp    DWORD PTR [rsp+0xc],ebp
  414003:	jle    414060 <__flatcc_fb_gen_c_verifier@@Base+0x3da0>
  414005:	mov    rax,QWORD PTR [rsp+0x10]
  41400a:	mov    rax,QWORD PTR [rax+r12*1+0x10]
  41400f:	movzx  edx,WORD PTR [rax+0x70]
  414013:	test   dl,0x4
  414016:	jne    413ff8 <__flatcc_fb_gen_c_verifier@@Base+0x3d38>
  414018:	movzx  edi,WORD PTR [rax+0x28]
  41401c:	xor    ecx,ecx
  41401e:	lea    esi,[rdi-0xe]
  414021:	cmp    si,0x1
  414025:	ja     413fc0 <__flatcc_fb_gen_c_verifier@@Base+0x3d00>
  414027:	mov    rcx,QWORD PTR [rax+0x18]
  41402b:	cmp    WORD PTR [rcx+0x10],0x4
  414030:	sete   cl
  414033:	jmp    413fc0 <__flatcc_fb_gen_c_verifier@@Base+0x3d00>
  414035:	nop    DWORD PTR [rax]
  414038:	lea    rsi,[rip+0x2dc99]        # 441cd8 <_IO_stdin_used@@Base+0x15cd8>
  41403f:	xor    eax,eax
  414041:	mov    rdi,rbx
  414044:	add    ebp,0x1
  414047:	add    r12,0x20
  41404b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414050:	cmp    DWORD PTR [rsp+0xc],ebp
  414054:	jg     414005 <__flatcc_fb_gen_c_verifier@@Base+0x3d45>
  414056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414060:	test   r14d,r14d
  414063:	jne    4140de <__flatcc_fb_gen_c_verifier@@Base+0x3e1e>
  414065:	mov    eax,DWORD PTR [rbx+0xf0]
  41406b:	test   eax,eax
  41406d:	je     4143b9 <__flatcc_fb_gen_c_verifier@@Base+0x40f9>
  414073:	sub    eax,0x1
  414076:	lea    rsi,[rip+0x2c429]        # 4404a6 <_IO_stdin_used@@Base+0x144a6>
  41407d:	mov    rdi,rbx
  414080:	mov    DWORD PTR [rbx+0xf0],eax
  414086:	xor    eax,eax
  414088:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41408d:	add    DWORD PTR [rbx+0xf0],0x1
  414094:	lea    rsi,[rip+0x2dc75]        # 441d10 <_IO_stdin_used@@Base+0x15d10>
  41409b:	xor    eax,eax
  41409d:	mov    rdi,rbx
  4140a0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4140a5:	lea    rsi,[rip+0x2c5d0]        # 44067c <_IO_stdin_used@@Base+0x1467c>
  4140ac:	xor    eax,eax
  4140ae:	mov    rdi,rbx
  4140b1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4140b6:	mov    eax,DWORD PTR [rbx+0xf0]
  4140bc:	test   eax,eax
  4140be:	je     41439a <__flatcc_fb_gen_c_verifier@@Base+0x40da>
  4140c4:	sub    eax,0x1
  4140c7:	lea    rsi,[rip+0x2c2c3]        # 440391 <_IO_stdin_used@@Base+0x14391>
  4140ce:	mov    rdi,rbx
  4140d1:	mov    DWORD PTR [rbx+0xf0],eax
  4140d7:	xor    eax,eax
  4140d9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4140de:	mov    eax,DWORD PTR [rsp+0x34]
  4140e2:	test   eax,eax
  4140e4:	jne    414260 <__flatcc_fb_gen_c_verifier@@Base+0x3fa0>
  4140ea:	lea    rsi,[rip+0x2dcbf]        # 441db0 <_IO_stdin_used@@Base+0x15db0>
  4140f1:	xor    eax,eax
  4140f3:	mov    rdi,rbx
  4140f6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4140fb:	lea    rsi,[rip+0x2c3f8]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  414102:	xor    eax,eax
  414104:	mov    rdi,rbx
  414107:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41410c:	mov    eax,DWORD PTR [rbx+0xf0]
  414112:	lea    rsi,[rip+0x2c5da]        # 4406f3 <_IO_stdin_used@@Base+0x146f3>
  414119:	mov    rdi,rbx
  41411c:	mov    DWORD PTR [rbx+0xf0],0x0
  414126:	mov    DWORD PTR [rbx+0xf8],eax
  41412c:	xor    eax,eax
  41412e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414133:	mov    eax,DWORD PTR [rbx+0xf8]
  414139:	lea    rsi,[rip+0x2cc40]        # 440d80 <_IO_stdin_used@@Base+0x14d80>
  414140:	mov    rdi,rbx
  414143:	mov    DWORD PTR [rbx+0xf0],eax
  414149:	xor    eax,eax
  41414b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414150:	mov    eax,DWORD PTR [rbx+0xf0]
  414156:	test   eax,eax
  414158:	je     4143fc <__flatcc_fb_gen_c_verifier@@Base+0x413c>
  41415e:	sub    eax,0x1
  414161:	lea    rsi,[rip+0x2c229]        # 440391 <_IO_stdin_used@@Base+0x14391>
  414168:	mov    rdi,rbx
  41416b:	mov    DWORD PTR [rbx+0xf0],eax
  414171:	xor    eax,eax
  414173:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414178:	lea    rsi,[rip+0x2ff6f]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41417f:	xor    eax,eax
  414181:	mov    rdi,rbx
  414184:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414189:	lea    rsi,[rip+0x2dc68]        # 441df8 <_IO_stdin_used@@Base+0x15df8>
  414190:	mov    rdx,r13
  414193:	xor    eax,eax
  414195:	mov    rdi,rbx
  414198:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41419d:	lea    rsi,[rip+0x2c304]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  4141a4:	xor    eax,eax
  4141a6:	mov    rdi,rbx
  4141a9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4141ae:	add    DWORD PTR [rbx+0xf0],0x1
  4141b5:	lea    rsi,[rip+0x2dcd4]        # 441e90 <_IO_stdin_used@@Base+0x15e90>
  4141bc:	xor    eax,eax
  4141be:	mov    rdx,r13
  4141c1:	mov    rdi,rbx
  4141c4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4141c9:	mov    eax,DWORD PTR [rbx+0xf0]
  4141cf:	test   eax,eax
  4141d1:	je     4143dd <__flatcc_fb_gen_c_verifier@@Base+0x411d>
  4141d7:	sub    eax,0x1
  4141da:	lea    rsi,[rip+0x2c1b0]        # 440391 <_IO_stdin_used@@Base+0x14391>
  4141e1:	mov    rdi,rbx
  4141e4:	mov    DWORD PTR [rbx+0xf0],eax
  4141ea:	xor    eax,eax
  4141ec:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4141f1:	lea    rsi,[rip+0x2fef6]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4141f8:	mov    rdi,rbx
  4141fb:	xor    eax,eax
  4141fd:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414202:	mov    rdi,QWORD PTR [rsp+0x10]
  414207:	test   rdi,rdi
  41420a:	je     414211 <__flatcc_fb_gen_c_verifier@@Base+0x3f51>
  41420c:	call   405040 <free@plt>
  414211:	xor    eax,eax
  414213:	mov    rbx,QWORD PTR [rsp+0x128]
  41421b:	xor    rbx,QWORD PTR fs:0x28
  414224:	jne    4143d8 <__flatcc_fb_gen_c_verifier@@Base+0x4118>
  41422a:	add    rsp,0x130
  414231:	pop    rbx
  414232:	pop    rbp
  414233:	pop    r12
  414235:	pop    r13
  414237:	pop    r14
  414239:	ret    
  41423a:	nop    WORD PTR [rax+rax*1+0x0]
  414240:	lea    rsi,[rip+0x2c4b4]        # 4406fb <_IO_stdin_used@@Base+0x146fb>
  414247:	mov    rdi,rbx
  41424a:	xor    eax,eax
  41424c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414251:	jmp    413ea1 <__flatcc_fb_gen_c_verifier@@Base+0x3be1>
  414256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414260:	lea    rsi,[rip+0x2db01]        # 441d68 <_IO_stdin_used@@Base+0x15d68>
  414267:	mov    rdi,rbx
  41426a:	xor    eax,eax
  41426c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414271:	jmp    4140ea <__flatcc_fb_gen_c_verifier@@Base+0x3e2a>
  414276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414280:	lea    rsi,[rip+0x2d979]        # 441c00 <_IO_stdin_used@@Base+0x15c00>
  414287:	mov    rdi,rbx
  41428a:	xor    eax,eax
  41428c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414291:	jmp    413ee9 <__flatcc_fb_gen_c_verifier@@Base+0x3c29>
  414296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142a0:	lea    rsi,[rip+0x2c465]        # 44070c <_IO_stdin_used@@Base+0x1470c>
  4142a7:	mov    rdi,rbx
  4142aa:	xor    eax,eax
  4142ac:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4142b1:	lea    rsi,[rip+0x2c5d0]        # 440888 <_IO_stdin_used@@Base+0x14888>
  4142b8:	mov    rdi,rbx
  4142bb:	xor    eax,eax
  4142bd:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4142c2:	jmp    413f57 <__flatcc_fb_gen_c_verifier@@Base+0x3c97>
  4142c7:	nop    WORD PTR [rax+rax*1+0x0]
  4142d0:	mov    r9d,DWORD PTR [rsp+0xc]
  4142d5:	test   r9d,r9d
  4142d8:	jg     41430c <__flatcc_fb_gen_c_verifier@@Base+0x404c>
  4142da:	lea    rax,[rip+0xfffffffffffff46f]        # 413750 <__flatcc_fb_gen_c_verifier@@Base+0x3490>
  4142e1:	mov    QWORD PTR [rsp+0x28],r12
  4142e6:	mov    DWORD PTR [rsp+0x30],0x0
  4142ee:	mov    DWORD PTR [rsp+0x34],0x0
  4142f6:	mov    QWORD PTR [rsp+0x18],rax
  4142fb:	lea    rax,[rip+0xffffffffffffc90e]        # 410c10 <__flatcc_fb_gen_c_verifier@@Base+0x950>
  414302:	mov    QWORD PTR [rsp+0x20],rax
  414307:	jmp    413dea <__flatcc_fb_gen_c_verifier@@Base+0x3b2a>
  41430c:	mov    rax,QWORD PTR [rip+0x3bcd5]        # 44ffe8 <stderr@GLIBC_2.2.5>
  414313:	lea    rcx,[rip+0x2c5fe]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41431a:	lea    rdx,[rip+0x207a0]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  414321:	lea    r9,[rip+0x2cae8]        # 440e10 <_IO_stdin_used@@Base+0x14e10>
  414328:	mov    esi,0x1
  41432d:	mov    r8d,0x570
  414333:	mov    rdi,QWORD PTR [rax]
  414336:	xor    eax,eax
  414338:	call   4051f0 <__fprintf_chk@plt>
  41433d:	lea    rcx,[rip+0x2e60c]        # 442950 <_IO_stdin_used@@Base+0x16950>
  414344:	lea    rsi,[rip+0x2c5cd]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41434b:	lea    rdi,[rip+0x217b7]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  414352:	mov    edx,0x570
  414357:	call   4050f0 <__assert_fail@plt>
  41435c:	lea    rcx,[rip+0x2e5ed]        # 442950 <_IO_stdin_used@@Base+0x16950>
  414363:	lea    rsi,[rip+0x2c5ae]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41436a:	lea    rdi,[rip+0x2c014]        # 440385 <_IO_stdin_used@@Base+0x14385>
  414371:	mov    edx,0x59e
  414376:	call   4050f0 <__assert_fail@plt>
  41437b:	lea    rcx,[rip+0x2e5ce]        # 442950 <_IO_stdin_used@@Base+0x16950>
  414382:	lea    rsi,[rip+0x2c58f]        # 440918 <_IO_stdin_used@@Base+0x14918>
  414389:	lea    rdi,[rip+0x19b30]        # 42dec0 <_IO_stdin_used@@Base+0x1ec0>
  414390:	mov    edx,0x56e
  414395:	call   4050f0 <__assert_fail@plt>
  41439a:	lea    rcx,[rip+0x2e5af]        # 442950 <_IO_stdin_used@@Base+0x16950>
  4143a1:	lea    rsi,[rip+0x2c570]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4143a8:	lea    rdi,[rip+0x2bfd6]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4143af:	mov    edx,0x5b5
  4143b4:	call   4050f0 <__assert_fail@plt>
  4143b9:	lea    rcx,[rip+0x2e590]        # 442950 <_IO_stdin_used@@Base+0x16950>
  4143c0:	lea    rsi,[rip+0x2c551]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4143c7:	lea    rdi,[rip+0x2bfb7]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4143ce:	mov    edx,0x5b2
  4143d3:	call   4050f0 <__assert_fail@plt>
  4143d8:	call   4050d0 <__stack_chk_fail@plt>
  4143dd:	lea    rcx,[rip+0x2e56c]        # 442950 <_IO_stdin_used@@Base+0x16950>
  4143e4:	lea    rsi,[rip+0x2c52d]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4143eb:	lea    rdi,[rip+0x2bf93]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4143f2:	mov    edx,0x5c7
  4143f7:	call   4050f0 <__assert_fail@plt>
  4143fc:	lea    rcx,[rip+0x2e54d]        # 442950 <_IO_stdin_used@@Base+0x16950>
  414403:	lea    rsi,[rip+0x2c50e]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41440a:	lea    rdi,[rip+0x2bf74]        # 440385 <_IO_stdin_used@@Base+0x14385>
  414411:	mov    edx,0x5c1
  414416:	call   4050f0 <__assert_fail@plt>
  41441b:	nop    DWORD PTR [rax+rax*1+0x0]
  414420:	push   r13
  414422:	push   r12
  414424:	mov    ecx,0x6
  414429:	push   rbp
  41442a:	push   rbx
  41442b:	mov    rbx,rdi
  41442e:	sub    rsp,0x138
  414435:	lea    r13,[rsp+0x10]
  41443a:	mov    DWORD PTR [rsp+0xc],0x0
  414442:	mov    rax,QWORD PTR fs:0x28
  41444b:	mov    QWORD PTR [rsp+0x128],rax
  414453:	xor    eax,eax
  414455:	mov    rdi,r13
  414458:	rep stos QWORD PTR es:[rdi],rax
  41445b:	movzx  eax,WORD PTR [rsi+0x10]
  41445f:	sub    eax,0x3
  414462:	cmp    ax,0x1
  414466:	ja     414715 <__flatcc_fb_gen_c_verifier@@Base+0x4455>
  41446c:	mov    rbp,rsi
  41446f:	lea    rsi,[rsp+0xc]
  414474:	mov    rdi,QWORD PTR [rbp+0x28]
  414478:	call   413800 <__flatcc_fb_gen_c_verifier@@Base+0x3540>
  41447d:	test   rax,rax
  414480:	mov    QWORD PTR [rsp+0x10],rax
  414485:	je     414690 <__flatcc_fb_gen_c_verifier@@Base+0x43d0>
  41448b:	lea    rax,[rip+0xffffffffffffe04e]        # 4124e0 <__flatcc_fb_gen_c_verifier@@Base+0x2220>
  414492:	lea    r12,[rsp+0x40]
  414497:	mov    ecx,0x1d
  41449c:	mov    rsi,rbp
  41449f:	mov    QWORD PTR [rsp+0x28],rbp
  4144a4:	mov    DWORD PTR [rsp+0x30],0x2
  4144ac:	mov    QWORD PTR [rsp+0x18],rax
  4144b1:	lea    rax,[rip+0xffffffffffffc748]        # 410c00 <__flatcc_fb_gen_c_verifier@@Base+0x940>
  4144b8:	mov    rdi,r12
  4144bb:	mov    rdx,r12
  4144be:	mov    QWORD PTR [rsp+0x20],rax
  4144c3:	xor    eax,eax
  4144c5:	rep stos QWORD PTR es:[rdi],rax
  4144c8:	mov    rdi,QWORD PTR [rbp+0x18]
  4144cc:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4144d1:	lea    rsi,[rip+0x2da18]        # 441ef0 <_IO_stdin_used@@Base+0x15ef0>
  4144d8:	xor    eax,eax
  4144da:	mov    rdx,r12
  4144dd:	mov    rdi,rbx
  4144e0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4144e5:	add    DWORD PTR [rbx+0xf0],0x2
  4144ec:	lea    rsi,[rip+0x2da65]        # 441f58 <_IO_stdin_used@@Base+0x15f58>
  4144f3:	xor    eax,eax
  4144f5:	mov    rdi,rbx
  4144f8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4144fd:	mov    eax,DWORD PTR [rbx+0xf0]
  414503:	test   eax,eax
  414505:	je     4146f6 <__flatcc_fb_gen_c_verifier@@Base+0x4436>
  41450b:	cmp    eax,0x1
  41450e:	je     4146ec <__flatcc_fb_gen_c_verifier@@Base+0x442c>
  414514:	sub    eax,0x2
  414517:	lea    rsi,[rip+0x2bf8a]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  41451e:	mov    rdi,rbx
  414521:	mov    DWORD PTR [rbx+0xf0],eax
  414527:	xor    eax,eax
  414529:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41452e:	mov    eax,DWORD PTR [rsp+0xc]
  414532:	add    DWORD PTR [rbx+0xf0],0x1
  414539:	test   eax,eax
  41453b:	je     414630 <__flatcc_fb_gen_c_verifier@@Base+0x4370>
  414541:	lea    rsi,[rip+0x2c039]        # 440581 <_IO_stdin_used@@Base+0x14581>
  414548:	xor    eax,eax
  41454a:	mov    rdi,rbx
  41454d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414552:	lea    rsi,[rip+0x2c045]        # 44059e <_IO_stdin_used@@Base+0x1459e>
  414559:	xor    eax,eax
  41455b:	mov    rdi,rbx
  41455e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414563:	lea    rsi,[rip+0x2c046]        # 4405b0 <_IO_stdin_used@@Base+0x145b0>
  41456a:	xor    eax,eax
  41456c:	mov    rdi,rbx
  41456f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414574:	lea    rsi,[rip+0x2fb73]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41457b:	xor    eax,eax
  41457d:	mov    rdi,rbx
  414580:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414585:	lea    rsi,[rip+0x2c46c]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  41458c:	xor    eax,eax
  41458e:	mov    rdi,rbx
  414591:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414596:	mov    eax,DWORD PTR [rsp+0xc]
  41459a:	xor    r8d,r8d
  41459d:	xor    edx,edx
  41459f:	mov    rsi,r13
  4145a2:	mov    rdi,rbx
  4145a5:	lea    ecx,[rax-0x1]
  4145a8:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4145ad:	lea    rsi,[rip+0x2bf46]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  4145b4:	xor    eax,eax
  4145b6:	mov    rdi,rbx
  4145b9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4145be:	mov    eax,DWORD PTR [rbx+0xf0]
  4145c4:	test   eax,eax
  4145c6:	je     414739 <__flatcc_fb_gen_c_verifier@@Base+0x4479>
  4145cc:	sub    eax,0x1
  4145cf:	lea    rsi,[rip+0x2bdbb]        # 440391 <_IO_stdin_used@@Base+0x14391>
  4145d6:	mov    rdi,rbx
  4145d9:	mov    DWORD PTR [rbx+0xf0],eax
  4145df:	xor    eax,eax
  4145e1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4145e6:	lea    rsi,[rip+0x2fb01]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4145ed:	mov    rdi,rbx
  4145f0:	xor    eax,eax
  4145f2:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4145f7:	mov    rdi,QWORD PTR [rsp+0x10]
  4145fc:	test   rdi,rdi
  4145ff:	je     414606 <__flatcc_fb_gen_c_verifier@@Base+0x4346>
  414601:	call   405040 <free@plt>
  414606:	xor    eax,eax
  414608:	mov    rdx,QWORD PTR [rsp+0x128]
  414610:	xor    rdx,QWORD PTR fs:0x28
  414619:	jne    414734 <__flatcc_fb_gen_c_verifier@@Base+0x4474>
  41461f:	add    rsp,0x138
  414626:	pop    rbx
  414627:	pop    rbp
  414628:	pop    r12
  41462a:	pop    r13
  41462c:	ret    
  41462d:	nop    DWORD PTR [rax]
  414630:	lea    rsi,[rip+0x2c10d]        # 440744 <_IO_stdin_used@@Base+0x14744>
  414637:	xor    eax,eax
  414639:	mov    rdi,rbx
  41463c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414641:	lea    rsi,[rip+0x2c116]        # 44075e <_IO_stdin_used@@Base+0x1475e>
  414648:	xor    eax,eax
  41464a:	mov    rdi,rbx
  41464d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414652:	lea    rsi,[rip+0x2bf0b]        # 440564 <_IO_stdin_used@@Base+0x14564>
  414659:	xor    eax,eax
  41465b:	mov    rdi,rbx
  41465e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414663:	mov    eax,DWORD PTR [rbx+0xf0]
  414669:	test   eax,eax
  41466b:	jne    4145cc <__flatcc_fb_gen_c_verifier@@Base+0x430c>
  414671:	lea    rcx,[rip+0x2e2c8]        # 442940 <_IO_stdin_used@@Base+0x16940>
  414678:	lea    rsi,[rip+0x2c299]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41467f:	lea    rdi,[rip+0x2bcff]        # 440385 <_IO_stdin_used@@Base+0x14385>
  414686:	mov    edx,0x4f5
  41468b:	call   4050f0 <__assert_fail@plt>
  414690:	mov    edx,DWORD PTR [rsp+0xc]
  414694:	test   edx,edx
  414696:	jle    41448b <__flatcc_fb_gen_c_verifier@@Base+0x41cb>
  41469c:	mov    rax,QWORD PTR [rip+0x3b945]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4146a3:	lea    rcx,[rip+0x2c26e]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4146aa:	lea    rdx,[rip+0x20410]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4146b1:	lea    r9,[rip+0x2c758]        # 440e10 <_IO_stdin_used@@Base+0x14e10>
  4146b8:	mov    esi,0x1
  4146bd:	mov    r8d,0x4e1
  4146c3:	mov    rdi,QWORD PTR [rax]
  4146c6:	xor    eax,eax
  4146c8:	call   4051f0 <__fprintf_chk@plt>
  4146cd:	lea    rcx,[rip+0x2e26c]        # 442940 <_IO_stdin_used@@Base+0x16940>
  4146d4:	lea    rsi,[rip+0x2c23d]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4146db:	lea    rdi,[rip+0x21427]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4146e2:	mov    edx,0x4e1
  4146e7:	call   4050f0 <__assert_fail@plt>
  4146ec:	mov    DWORD PTR [rbx+0xf0],0x0
  4146f6:	lea    rcx,[rip+0x2e243]        # 442940 <_IO_stdin_used@@Base+0x16940>
  4146fd:	lea    rsi,[rip+0x2c214]        # 440918 <_IO_stdin_used@@Base+0x14918>
  414704:	lea    rdi,[rip+0x2bc7a]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41470b:	mov    edx,0x4ef
  414710:	call   4050f0 <__assert_fail@plt>
  414715:	lea    rcx,[rip+0x2e224]        # 442940 <_IO_stdin_used@@Base+0x16940>
  41471c:	lea    rsi,[rip+0x2c1f5]        # 440918 <_IO_stdin_used@@Base+0x14918>
  414723:	lea    rdi,[rip+0x18d2e]        # 42d458 <_IO_stdin_used@@Base+0x1458>
  41472a:	mov    edx,0x4de
  41472f:	call   4050f0 <__assert_fail@plt>
  414734:	call   4050d0 <__stack_chk_fail@plt>
  414739:	lea    rcx,[rip+0x2e200]        # 442940 <_IO_stdin_used@@Base+0x16940>
  414740:	lea    rsi,[rip+0x2c1d1]        # 440918 <_IO_stdin_used@@Base+0x14918>
  414747:	lea    rdi,[rip+0x2bc37]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41474e:	mov    edx,0x4fe
  414753:	call   4050f0 <__assert_fail@plt>
  414758:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414760 <__flatcc_fb_gen_c_json_parser@@Base>:
  414760:	push   r15
  414762:	push   r14
  414764:	lea    rsi,[rip+0x2c003]        # 44076e <_IO_stdin_used@@Base+0x1476e>
  41476b:	push   r13
  41476d:	push   r12
  41476f:	push   rbp
  414770:	push   rbx
  414771:	mov    rbx,rdi
  414774:	sub    rsp,0x198
  41477b:	mov    rax,QWORD PTR fs:0x28
  414784:	mov    QWORD PTR [rsp+0x188],rax
  41478c:	xor    eax,eax
  41478e:	mov    rax,QWORD PTR [rdi+0xd8]
  414795:	mov    rdx,QWORD PTR [rax+0x118]
  41479c:	xor    eax,eax
  41479e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4147a3:	mov    rax,QWORD PTR [rbx+0xd8]
  4147aa:	lea    rsi,[rip+0x2bfd6]        # 440787 <_IO_stdin_used@@Base+0x14787>
  4147b1:	mov    rdi,rbx
  4147b4:	mov    rdx,QWORD PTR [rax+0x118]
  4147bb:	xor    eax,eax
  4147bd:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4147c2:	lea    rsi,[rip+0x2f925]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4147c9:	xor    eax,eax
  4147cb:	mov    rdi,rbx
  4147ce:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4147d3:	lea    rsi,[rip+0x2d7b6]        # 441f90 <_IO_stdin_used@@Base+0x15f90>
  4147da:	xor    eax,eax
  4147dc:	mov    rdi,rbx
  4147df:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4147e4:	lea    rsi,[rip+0x2f903]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4147eb:	xor    eax,eax
  4147ed:	mov    rdi,rbx
  4147f0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4147f5:	lea    rsi,[rip+0x2d7e4]        # 441fe0 <_IO_stdin_used@@Base+0x15fe0>
  4147fc:	xor    eax,eax
  4147fe:	mov    rdi,rbx
  414801:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414806:	lea    rdx,[rip+0x2bf84]        # 440791 <_IO_stdin_used@@Base+0x14791>
  41480d:	lea    rsi,[rip+0x18a29]        # 42d23d <_IO_stdin_used@@Base+0x123d>
  414814:	mov    rdi,rbx
  414817:	call   4065d0 <__flatcc_fb_gen_c_includes@@Base>
  41481c:	mov    rax,QWORD PTR [rbx+0xe0]
  414823:	mov    ecx,DWORD PTR [rax+0xac]
  414829:	test   ecx,ecx
  41482b:	je     414847 <__flatcc_fb_gen_c_json_parser@@Base+0xe7>
  41482d:	mov    rdi,QWORD PTR [rbx+0xd0]
  414834:	lea    rdx,[rip+0x19ef5]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  41483b:	mov    esi,0x1
  414840:	xor    eax,eax
  414842:	call   4051f0 <__fprintf_chk@plt>
  414847:	lea    rsi,[rip+0x2f8a0]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41484e:	xor    eax,eax
  414850:	mov    rdi,rbx
  414853:	lea    rbp,[rsp+0xa0]
  41485b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414860:	mov    rdx,QWORD PTR [rbx+0xd8]
  414867:	xor    eax,eax
  414869:	mov    ecx,0x1d
  41486e:	mov    rdi,rbp
  414871:	mov    rsi,QWORD PTR [rdx+0x58]
  414875:	rep stos QWORD PTR es:[rdi],rax
  414878:	test   rsi,rsi
  41487b:	je     414888 <__flatcc_fb_gen_c_json_parser@@Base+0x128>
  41487d:	cmp    WORD PTR [rsi+0x10],0x1
  414882:	jbe    415478 <__flatcc_fb_gen_c_json_parser@@Base+0xd18>
  414888:	mov    r12,QWORD PTR [rdx+0x40]
  41488c:	test   r12,r12
  41488f:	je     4149a7 <__flatcc_fb_gen_c_json_parser@@Base+0x247>
  414895:	lea    r13,[rip+0x2da3c]        # 4422d8 <_IO_stdin_used@@Base+0x162d8>
  41489c:	jmp    41494f <__flatcc_fb_gen_c_json_parser@@Base+0x1ef>
  4148a1:	nop    DWORD PTR [rax+0x0]
  4148a8:	jb     415260 <__flatcc_fb_gen_c_json_parser@@Base+0xb00>
  4148ae:	cmp    ax,0x3
  4148b2:	je     4151e0 <__flatcc_fb_gen_c_json_parser@@Base+0xa80>
  4148b8:	cmp    ax,0x4
  4148bc:	jne    414946 <__flatcc_fb_gen_c_json_parser@@Base+0x1e6>
  4148c2:	mov    rdi,QWORD PTR [r12+0x18]
  4148c7:	mov    rdx,rbp
  4148ca:	mov    rsi,r12
  4148cd:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4148d2:	lea    rsi,[rip+0x2d937]        # 442210 <_IO_stdin_used@@Base+0x16210>
  4148d9:	xor    eax,eax
  4148db:	mov    rdx,rbp
  4148de:	mov    rdi,rbx
  4148e1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4148e6:	lea    rsi,[rip+0x2d9b3]        # 4422a0 <_IO_stdin_used@@Base+0x162a0>
  4148ed:	xor    eax,eax
  4148ef:	mov    rdx,rbp
  4148f2:	mov    rdi,rbx
  4148f5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4148fa:	lea    rsi,[rip+0x2d5ef]        # 441ef0 <_IO_stdin_used@@Base+0x15ef0>
  414901:	xor    eax,eax
  414903:	mov    rdx,rbp
  414906:	mov    rdi,rbx
  414909:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41490e:	add    DWORD PTR [rbx+0xf0],0x2
  414915:	lea    rsi,[rip+0x2c17c]        # 440a98 <_IO_stdin_used@@Base+0x14a98>
  41491c:	xor    eax,eax
  41491e:	mov    rdi,rbx
  414921:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414926:	mov    eax,DWORD PTR [rbx+0xf0]
  41492c:	test   eax,eax
  41492e:	je     4156f2 <__flatcc_fb_gen_c_json_parser@@Base+0xf92>
  414934:	cmp    eax,0x1
  414937:	je     4156e8 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
  41493d:	sub    eax,0x2
  414940:	mov    DWORD PTR [rbx+0xf0],eax
  414946:	mov    r12,QWORD PTR [r12]
  41494a:	test   r12,r12
  41494d:	je     4149a0 <__flatcc_fb_gen_c_json_parser@@Base+0x240>
  41494f:	movzx  eax,WORD PTR [r12+0x10]
  414955:	cmp    ax,0x1
  414959:	jne    4148a8 <__flatcc_fb_gen_c_json_parser@@Base+0x148>
  41495f:	mov    rdi,QWORD PTR [r12+0x18]
  414964:	mov    rsi,r12
  414967:	mov    rdx,rbp
  41496a:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  41496f:	xor    eax,eax
  414971:	mov    rdx,rbp
  414974:	mov    rsi,r13
  414977:	mov    rdi,rbx
  41497a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41497f:	lea    rsi,[rip+0x2d9d2]        # 442358 <_IO_stdin_used@@Base+0x16358>
  414986:	xor    eax,eax
  414988:	mov    rdx,rbp
  41498b:	mov    rdi,rbx
  41498e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414993:	mov    r12,QWORD PTR [r12]
  414997:	test   r12,r12
  41499a:	jne    41494f <__flatcc_fb_gen_c_json_parser@@Base+0x1ef>
  41499c:	nop    DWORD PTR [rax+0x0]
  4149a0:	mov    rdx,QWORD PTR [rbx+0xd8]
  4149a7:	mov    rdi,QWORD PTR [rdx+0x68]
  4149ab:	lea    rsi,[rip+0xffffffffffffcfde]        # 411990 <__flatcc_fb_gen_c_verifier@@Base+0x16d0>
  4149b2:	mov    rdx,rbx
  4149b5:	call   41b840 <fb_scope_table_visit@@Base>
  4149ba:	mov    rax,QWORD PTR [rbx+0xd8]
  4149c1:	lea    rsi,[rip+0x2daa0]        # 442468 <_IO_stdin_used@@Base+0x16468>
  4149c8:	mov    rdi,rbx
  4149cb:	mov    rdx,QWORD PTR [rax+0x110]
  4149d2:	xor    eax,eax
  4149d4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4149d9:	add    DWORD PTR [rbx+0xf0],0x2
  4149e0:	lea    rsi,[rip+0x2c0b1]        # 440a98 <_IO_stdin_used@@Base+0x14a98>
  4149e7:	xor    eax,eax
  4149e9:	mov    rdi,rbx
  4149ec:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4149f1:	mov    eax,DWORD PTR [rbx+0xf0]
  4149f7:	test   eax,eax
  4149f9:	je     415898 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
  4149ff:	cmp    eax,0x1
  414a02:	je     41588e <__flatcc_fb_gen_c_json_parser@@Base+0x112e>
  414a08:	sub    eax,0x2
  414a0b:	lea    rsi,[rip+0x2f6dc]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  414a12:	mov    rdi,rbx
  414a15:	mov    DWORD PTR [rbx+0xf0],eax
  414a1b:	xor    eax,eax
  414a1d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414a22:	mov    rax,QWORD PTR [rbx+0xd8]
  414a29:	mov    r12,QWORD PTR [rax+0x40]
  414a2d:	test   r12,r12
  414a30:	je     414c87 <__flatcc_fb_gen_c_json_parser@@Base+0x527>
  414a36:	xor    r13d,r13d
  414a39:	jmp    414a84 <__flatcc_fb_gen_c_json_parser@@Base+0x324>
  414a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  414a40:	jb     4152a0 <__flatcc_fb_gen_c_json_parser@@Base+0xb40>
  414a46:	cmp    ax,0x3
  414a4a:	je     415290 <__flatcc_fb_gen_c_json_parser@@Base+0xb30>
  414a50:	cmp    ax,0x4
  414a54:	jne    414a77 <__flatcc_fb_gen_c_json_parser@@Base+0x317>
  414a56:	mov    rsi,r12
  414a59:	mov    rdi,rbx
  414a5c:	call   411a10 <__flatcc_fb_gen_c_verifier@@Base+0x1750>
  414a61:	mov    rsi,r12
  414a64:	mov    rdi,rbx
  414a67:	call   411f90 <__flatcc_fb_gen_c_verifier@@Base+0x1cd0>
  414a6c:	mov    rsi,r12
  414a6f:	mov    rdi,rbx
  414a72:	call   414420 <__flatcc_fb_gen_c_verifier@@Base+0x4160>
  414a77:	mov    r12,QWORD PTR [r12]
  414a7b:	test   r12,r12
  414a7e:	je     414c80 <__flatcc_fb_gen_c_json_parser@@Base+0x520>
  414a84:	movzx  eax,WORD PTR [r12+0x10]
  414a8a:	cmp    ax,0x1
  414a8e:	jne    414a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2e0>
  414a90:	mov    rsi,r12
  414a93:	mov    rdi,rbx
  414a96:	call   413980 <__flatcc_fb_gen_c_verifier@@Base+0x36c0>
  414a9b:	cmp    WORD PTR [r12+0x10],0x1
  414aa2:	jne    41581d <__flatcc_fb_gen_c_json_parser@@Base+0x10bd>
  414aa8:	mov    rax,r13
  414aab:	mov    ecx,0x1d
  414ab0:	mov    rdi,rbp
  414ab3:	rep stos QWORD PTR es:[rdi],rax
  414ab6:	mov    rdx,rbp
  414ab9:	mov    rsi,r12
  414abc:	mov    rdi,QWORD PTR [r12+0x18]
  414ac1:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  414ac6:	lea    rsi,[rip+0x2da0b]        # 4424d8 <_IO_stdin_used@@Base+0x164d8>
  414acd:	mov    rdx,rbp
  414ad0:	xor    eax,eax
  414ad2:	mov    rdi,rbx
  414ad5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414ada:	lea    rsi,[rip+0x2b9c7]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  414ae1:	xor    eax,eax
  414ae3:	mov    rdi,rbx
  414ae6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414aeb:	add    DWORD PTR [rbx+0xf0],0x1
  414af2:	lea    rsi,[rip+0x2bbda]        # 4406d3 <_IO_stdin_used@@Base+0x146d3>
  414af9:	xor    eax,eax
  414afb:	mov    rdi,rbx
  414afe:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b03:	lea    rsi,[rip+0x2f5e4]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  414b0a:	xor    eax,eax
  414b0c:	mov    rdi,rbx
  414b0f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b14:	lea    rsi,[rip+0x2b972]        # 44048d <_IO_stdin_used@@Base+0x1448d>
  414b1b:	xor    eax,eax
  414b1d:	mov    rdi,rbx
  414b20:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b25:	movzx  ecx,WORD PTR [r12+0xb0]
  414b2e:	mov    rdx,QWORD PTR [r12+0xb8]
  414b36:	lea    rsi,[rip+0x2da23]        # 442560 <_IO_stdin_used@@Base+0x16560>
  414b3d:	xor    eax,eax
  414b3f:	mov    rdi,rbx
  414b42:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b47:	lea    rsi,[rip+0x2c9ca]        # 441518 <_IO_stdin_used@@Base+0x15518>
  414b4e:	mov    rdx,rbp
  414b51:	xor    eax,eax
  414b53:	mov    rdi,rbx
  414b56:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b5b:	lea    rsi,[rip+0x2da4e]        # 4425b0 <_IO_stdin_used@@Base+0x165b0>
  414b62:	xor    eax,eax
  414b64:	mov    rdi,rbx
  414b67:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b6c:	lea    rsi,[rip+0x2b987]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  414b73:	xor    eax,eax
  414b75:	mov    rdi,rbx
  414b78:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b7d:	mov    eax,DWORD PTR [rbx+0xf0]
  414b83:	lea    rsi,[rip+0x2bb69]        # 4406f3 <_IO_stdin_used@@Base+0x146f3>
  414b8a:	mov    rdi,rbx
  414b8d:	mov    DWORD PTR [rbx+0xf0],0x0
  414b97:	mov    DWORD PTR [rbx+0xf8],eax
  414b9d:	xor    eax,eax
  414b9f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414ba4:	mov    eax,DWORD PTR [rbx+0xf8]
  414baa:	lea    rsi,[rip+0x2c1cf]        # 440d80 <_IO_stdin_used@@Base+0x14d80>
  414bb1:	mov    rdi,rbx
  414bb4:	mov    DWORD PTR [rbx+0xf0],eax
  414bba:	xor    eax,eax
  414bbc:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414bc1:	mov    eax,DWORD PTR [rbx+0xf0]
  414bc7:	test   eax,eax
  414bc9:	je     415797 <__flatcc_fb_gen_c_json_parser@@Base+0x1037>
  414bcf:	sub    eax,0x1
  414bd2:	lea    rsi,[rip+0x2b7b8]        # 440391 <_IO_stdin_used@@Base+0x14391>
  414bd9:	mov    rdi,rbx
  414bdc:	mov    DWORD PTR [rbx+0xf0],eax
  414be2:	xor    eax,eax
  414be4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414be9:	lea    rsi,[rip+0x2f4fe]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  414bf0:	xor    eax,eax
  414bf2:	mov    rdi,rbx
  414bf5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414bfa:	lea    rsi,[rip+0x2d1f7]        # 441df8 <_IO_stdin_used@@Base+0x15df8>
  414c01:	mov    rdx,rbp
  414c04:	xor    eax,eax
  414c06:	mov    rdi,rbx
  414c09:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c0e:	lea    rsi,[rip+0x2b893]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  414c15:	xor    eax,eax
  414c17:	mov    rdi,rbx
  414c1a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c1f:	add    DWORD PTR [rbx+0xf0],0x1
  414c26:	lea    rsi,[rip+0x2d9db]        # 442608 <_IO_stdin_used@@Base+0x16608>
  414c2d:	xor    eax,eax
  414c2f:	mov    rdx,rbp
  414c32:	mov    rdi,rbx
  414c35:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c3a:	mov    eax,DWORD PTR [rbx+0xf0]
  414c40:	test   eax,eax
  414c42:	je     415778 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
  414c48:	sub    eax,0x1
  414c4b:	lea    rsi,[rip+0x2b73f]        # 440391 <_IO_stdin_used@@Base+0x14391>
  414c52:	mov    rdi,rbx
  414c55:	mov    DWORD PTR [rbx+0xf0],eax
  414c5b:	xor    eax,eax
  414c5d:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c62:	lea    rsi,[rip+0x2f485]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  414c69:	xor    eax,eax
  414c6b:	mov    rdi,rbx
  414c6e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c73:	mov    r12,QWORD PTR [r12]
  414c77:	test   r12,r12
  414c7a:	jne    414a84 <__flatcc_fb_gen_c_json_parser@@Base+0x324>
  414c80:	mov    rax,QWORD PTR [rbx+0xd8]
  414c87:	mov    rdi,QWORD PTR [rax+0x68]
  414c8b:	lea    rsi,[rip+0xffffffffffffd4be]        # 412150 <__flatcc_fb_gen_c_verifier@@Base+0x1e90>
  414c92:	mov    rdx,rbx
  414c95:	lea    r13,[rsp+0x50]
  414c9a:	call   41b840 <fb_scope_table_visit@@Base>
  414c9f:	lea    rdi,[rsp+0x20]
  414ca4:	xor    eax,eax
  414ca6:	mov    ecx,0x6
  414cab:	mov    rdx,QWORD PTR [rbx+0xd8]
  414cb2:	lea    rsi,[rip+0xffffffffffffba07]        # 4106c0 <__flatcc_fb_gen_c_verifier@@Base+0x400>
  414cb9:	mov    QWORD PTR [rsp+0x10],rdi
  414cbe:	rep stos QWORD PTR es:[rdi],rax
  414cc1:	mov    ecx,0xa
  414cc6:	mov    rdi,r13
  414cc9:	mov    r15,QWORD PTR [rdx+0x68]
  414ccd:	rep stos QWORD PTR es:[rdi],rax
  414cd0:	mov    QWORD PTR [rsp+0x98],rdx
  414cd8:	mov    rdi,r15
  414cdb:	mov    rdx,r13
  414cde:	mov    DWORD PTR [rsp+0x50],0x1
  414ce6:	call   41b840 <fb_scope_table_visit@@Base>
  414ceb:	movsxd rdi,DWORD PTR [rsp+0x54]
  414cf0:	mov    esi,0x10
  414cf5:	mov    r12,rdi
  414cf8:	call   405130 <calloc@plt>
  414cfd:	movsxd rdi,DWORD PTR [rsp+0x58]
  414d02:	mov    esi,0x10
  414d07:	mov    QWORD PTR [rsp+0x68],rax
  414d0c:	mov    QWORD PTR [rsp],rax
  414d10:	mov    DWORD PTR [rsp+0x1c],edi
  414d14:	call   405130 <calloc@plt>
  414d19:	mov    r14,rax
  414d1c:	mov    QWORD PTR [rsp+0x70],rax
  414d21:	mov    rax,QWORD PTR [rsp+0x60]
  414d26:	mov    rdi,rax
  414d29:	mov    QWORD PTR [rsp+0x8],rax
  414d2e:	call   405170 <malloc@plt>
  414d33:	mov    rdx,QWORD PTR [rsp]
  414d37:	mov    QWORD PTR [rsp+0x78],rax
  414d3c:	mov    QWORD PTR [rsp+0x88],r14
  414d44:	mov    QWORD PTR [rsp+0x90],rax
  414d4c:	test   rdx,rdx
  414d4f:	mov    QWORD PTR [rsp+0x80],rdx
  414d57:	jne    414d62 <__flatcc_fb_gen_c_json_parser@@Base+0x602>
  414d59:	test   r12d,r12d
  414d5c:	jg     414f60 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  414d62:	mov    edx,DWORD PTR [rsp+0x1c]
  414d66:	test   edx,edx
  414d68:	jle    414d73 <__flatcc_fb_gen_c_json_parser@@Base+0x613>
  414d6a:	test   r14,r14
  414d6d:	je     414f60 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  414d73:	test   rax,rax
  414d76:	jne    414d84 <__flatcc_fb_gen_c_json_parser@@Base+0x624>
  414d78:	cmp    QWORD PTR [rsp+0x8],0x0
  414d7e:	jne    414f60 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  414d84:	lea    rsi,[rip+0xffffffffffffb915]        # 4106a0 <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
  414d8b:	mov    rdx,r13
  414d8e:	mov    rdi,r15
  414d91:	call   41b840 <fb_scope_table_visit@@Base>
  414d96:	mov    esi,DWORD PTR [rsp+0x54]
  414d9a:	mov    rdi,QWORD PTR [rsp+0x68]
  414d9f:	call   4106e0 <__flatcc_fb_gen_c_verifier@@Base+0x420>
  414da4:	mov    esi,DWORD PTR [rsp+0x58]
  414da8:	mov    rdi,QWORD PTR [rsp+0x70]
  414dad:	call   4106e0 <__flatcc_fb_gen_c_verifier@@Base+0x420>
  414db2:	mov    r12d,DWORD PTR [rsp+0x58]
  414db7:	test   r12d,r12d
  414dba:	je     415630 <__flatcc_fb_gen_c_json_parser@@Base+0xed0>
  414dc0:	movsxd rax,r12d
  414dc3:	mov    rdi,rax
  414dc6:	mov    QWORD PTR [rsp+0x8],rax
  414dcb:	shl    rdi,0x5
  414dcf:	call   405170 <malloc@plt>
  414dd4:	test   rax,rax
  414dd7:	mov    QWORD PTR [rsp],rax
  414ddb:	je     415678 <__flatcc_fb_gen_c_json_parser@@Base+0xf18>
  414de1:	test   r12d,r12d
  414de4:	jle    414e2e <__flatcc_fb_gen_c_json_parser@@Base+0x6ce>
  414de6:	mov    r15,QWORD PTR [rsp+0x70]
  414deb:	sub    r12d,0x1
  414def:	mov    r14,QWORD PTR [rsp]
  414df3:	add    r12,0x1
  414df7:	shl    r12,0x4
  414dfb:	add    r12,r15
  414dfe:	xchg   ax,ax
  414e00:	mov    rdi,QWORD PTR [r15+0x8]
  414e04:	add    r15,0x10
  414e08:	add    r14,0x20
  414e0c:	mov    QWORD PTR [r14-0x20],rdi
  414e10:	call   4050c0 <strlen@plt>
  414e15:	mov    DWORD PTR [r14-0x18],eax
  414e19:	mov    rax,QWORD PTR [r15-0x10]
  414e1d:	mov    DWORD PTR [r14-0x8],0x0
  414e25:	mov    QWORD PTR [r14-0x10],rax
  414e29:	cmp    r12,r15
  414e2c:	jne    414e00 <__flatcc_fb_gen_c_json_parser@@Base+0x6a0>
  414e2e:	mov    r15,QWORD PTR [rsp]
  414e32:	mov    rsi,QWORD PTR [rsp+0x8]
  414e37:	lea    rcx,[rip+0xffffffffffffb8f2]        # 410730 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  414e3e:	mov    edx,0x20
  414e43:	mov    rdi,r15
  414e46:	call   405080 <qsort@plt>
  414e4b:	mov    r12d,DWORD PTR [rsp+0x58]
  414e50:	mov    QWORD PTR [rsp+0x20],r15
  414e55:	lea    rax,[rip+0xffffffffffffd7d4]        # 412630 <__flatcc_fb_gen_c_verifier@@Base+0x2370>
  414e5c:	lea    rsi,[rip+0x2d605]        # 442468 <_IO_stdin_used@@Base+0x16468>
  414e63:	mov    rdi,rbx
  414e66:	mov    QWORD PTR [rsp+0x38],0x0
  414e6f:	mov    DWORD PTR [rsp+0x40],0x4
  414e77:	mov    QWORD PTR [rsp+0x28],rax
  414e7c:	lea    rax,[rip+0xffffffffffffbd6d]        # 410bf0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  414e83:	mov    QWORD PTR [rsp+0x30],rax
  414e88:	mov    rax,QWORD PTR [rbx+0xd8]
  414e8f:	mov    rdx,QWORD PTR [rax+0x110]
  414e96:	xor    eax,eax
  414e98:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414e9d:	add    DWORD PTR [rbx+0xf0],0x2
  414ea4:	lea    rsi,[rip+0x2bfa5]        # 440e50 <_IO_stdin_used@@Base+0x14e50>
  414eab:	xor    eax,eax
  414ead:	mov    rdi,rbx
  414eb0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414eb5:	mov    eax,DWORD PTR [rbx+0xf0]
  414ebb:	test   eax,eax
  414ebd:	je     4157fe <__flatcc_fb_gen_c_json_parser@@Base+0x109e>
  414ec3:	cmp    eax,0x1
  414ec6:	je     4157f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
  414ecc:	sub    eax,0x2
  414ecf:	lea    rsi,[rip+0x2b5d2]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  414ed6:	mov    rdi,rbx
  414ed9:	mov    DWORD PTR [rbx+0xf0],eax
  414edf:	xor    eax,eax
  414ee1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414ee6:	add    DWORD PTR [rbx+0xf0],0x1
  414eed:	test   r12d,r12d
  414ef0:	jne    415583 <__flatcc_fb_gen_c_json_parser@@Base+0xe23>
  414ef6:	lea    rsi,[rip+0x2d773]        # 442670 <_IO_stdin_used@@Base+0x16670>
  414efd:	xor    eax,eax
  414eff:	mov    rdi,rbx
  414f02:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414f07:	lea    rsi,[rip+0x2b656]        # 440564 <_IO_stdin_used@@Base+0x14564>
  414f0e:	xor    eax,eax
  414f10:	mov    rdi,rbx
  414f13:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414f18:	mov    eax,DWORD PTR [rbx+0xf0]
  414f1e:	test   eax,eax
  414f20:	je     4157d5 <__flatcc_fb_gen_c_json_parser@@Base+0x1075>
  414f26:	sub    eax,0x1
  414f29:	lea    rsi,[rip+0x2b461]        # 440391 <_IO_stdin_used@@Base+0x14391>
  414f30:	mov    rdi,rbx
  414f33:	mov    DWORD PTR [rbx+0xf0],eax
  414f39:	xor    eax,eax
  414f3b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414f40:	lea    rsi,[rip+0x2f1a7]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  414f47:	mov    rdi,rbx
  414f4a:	xor    eax,eax
  414f4c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414f51:	mov    rdi,QWORD PTR [rsp+0x20]
  414f56:	test   rdi,rdi
  414f59:	je     414f60 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  414f5b:	call   405040 <free@plt>
  414f60:	mov    rdi,r13
  414f63:	call   4108b0 <__flatcc_fb_gen_c_verifier@@Base+0x5f0>
  414f68:	mov    rax,QWORD PTR [rbx+0xd8]
  414f6f:	mov    rsi,QWORD PTR [rax+0x58]
  414f73:	test   rsi,rsi
  414f76:	je     415164 <__flatcc_fb_gen_c_json_parser@@Base+0xa04>
  414f7c:	movzx  eax,WORD PTR [rsi+0x10]
  414f80:	test   ax,ax
  414f83:	je     4152b0 <__flatcc_fb_gen_c_json_parser@@Base+0xb50>
  414f89:	cmp    ax,0x1
  414f8d:	jne    415164 <__flatcc_fb_gen_c_json_parser@@Base+0xa04>
  414f93:	xor    eax,eax
  414f95:	mov    ecx,0x1d
  414f9a:	mov    rdi,rbp
  414f9d:	rep stos QWORD PTR es:[rdi],rax
  414fa0:	mov    rdx,rbp
  414fa3:	mov    rdi,QWORD PTR [rsi+0x18]
  414fa7:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  414fac:	mov    rax,QWORD PTR [rbx+0xd8]
  414fb3:	lea    rsi,[rip+0x2d1d6]        # 442190 <_IO_stdin_used@@Base+0x16190>
  414fba:	mov    rdi,rbx
  414fbd:	mov    rdx,QWORD PTR [rax+0x110]
  414fc4:	xor    eax,eax
  414fc6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414fcb:	add    DWORD PTR [rbx+0xf0],0x2
  414fd2:	lea    rsi,[rip+0x2d6d7]        # 4426b0 <_IO_stdin_used@@Base+0x166b0>
  414fd9:	xor    eax,eax
  414fdb:	mov    rdi,rbx
  414fde:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414fe3:	mov    eax,DWORD PTR [rbx+0xf0]
  414fe9:	test   eax,eax
  414feb:	je     415846 <__flatcc_fb_gen_c_json_parser@@Base+0x10e6>
  414ff1:	cmp    eax,0x1
  414ff4:	je     41583c <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
  414ffa:	sub    eax,0x2
  414ffd:	lea    rsi,[rip+0x2b4a4]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  415004:	mov    rdi,rbx
  415007:	mov    DWORD PTR [rbx+0xf0],eax
  41500d:	xor    eax,eax
  41500f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415014:	add    DWORD PTR [rbx+0xf0],0x1
  41501b:	lea    rsi,[rip+0x2b810]        # 440832 <_IO_stdin_used@@Base+0x14832>
  415022:	xor    eax,eax
  415024:	mov    rdi,rbx
  415027:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41502c:	lea    rsi,[rip+0x2b790]        # 4407c3 <_IO_stdin_used@@Base+0x147c3>
  415033:	xor    eax,eax
  415035:	mov    rdi,rbx
  415038:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41503d:	lea    rsi,[rip+0x2f0aa]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  415044:	xor    eax,eax
  415046:	mov    rdi,rbx
  415049:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41504e:	lea    rsi,[rip+0x2b7f8]        # 44084d <_IO_stdin_used@@Base+0x1484d>
  415055:	xor    eax,eax
  415057:	mov    rdi,rbx
  41505a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41505f:	lea    rsi,[rip+0x2d67a]        # 4426e0 <_IO_stdin_used@@Base+0x166e0>
  415066:	xor    eax,eax
  415068:	mov    rdi,rbx
  41506b:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415070:	mov    rax,QWORD PTR [rbx+0xd8]
  415077:	cmp    WORD PTR [rax+0x20],0x2
  41507c:	je     41563e <__flatcc_fb_gen_c_json_parser@@Base+0xede>
  415082:	lea    rsi,[rip+0x2d6d7]        # 442760 <_IO_stdin_used@@Base+0x16760>
  415089:	mov    rdi,rbx
  41508c:	xor    eax,eax
  41508e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415093:	lea    rsi,[rip+0x2d76e]        # 442808 <_IO_stdin_used@@Base+0x16808>
  41509a:	mov    rdx,rbp
  41509d:	xor    eax,eax
  41509f:	mov    rdi,rbx
  4150a2:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4150a7:	lea    rsi,[rip+0x2b74b]        # 4407f9 <_IO_stdin_used@@Base+0x147f9>
  4150ae:	xor    eax,eax
  4150b0:	mov    rdi,rbx
  4150b3:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4150b8:	add    DWORD PTR [rbx+0xf0],0x1
  4150bf:	lea    rsi,[rip+0x2b745]        # 44080b <_IO_stdin_used@@Base+0x1480b>
  4150c6:	xor    eax,eax
  4150c8:	mov    rdi,rbx
  4150cb:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4150d0:	mov    eax,DWORD PTR [rbx+0xf0]
  4150d6:	test   eax,eax
  4150d8:	je     415759 <__flatcc_fb_gen_c_json_parser@@Base+0xff9>
  4150de:	sub    eax,0x1
  4150e1:	lea    rsi,[rip+0x2b2a9]        # 440391 <_IO_stdin_used@@Base+0x14391>
  4150e8:	mov    rdi,rbx
  4150eb:	mov    DWORD PTR [rbx+0xf0],eax
  4150f1:	xor    eax,eax
  4150f3:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4150f8:	lea    rsi,[rip+0x2d6d1]        # 4427d0 <_IO_stdin_used@@Base+0x167d0>
  4150ff:	xor    eax,eax
  415101:	mov    rdi,rbx
  415104:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415109:	lea    rsi,[rip+0x2b70e]        # 44081e <_IO_stdin_used@@Base+0x1481e>
  415110:	xor    eax,eax
  415112:	mov    rdi,rbx
  415115:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41511a:	lea    rsi,[rip+0x2b3fe]        # 44051f <_IO_stdin_used@@Base+0x1451f>
  415121:	xor    eax,eax
  415123:	mov    rdi,rbx
  415126:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41512b:	mov    eax,DWORD PTR [rbx+0xf0]
  415131:	test   eax,eax
  415133:	je     4157b6 <__flatcc_fb_gen_c_json_parser@@Base+0x1056>
  415139:	sub    eax,0x1
  41513c:	lea    rsi,[rip+0x2b24e]        # 440391 <_IO_stdin_used@@Base+0x14391>
  415143:	mov    rdi,rbx
  415146:	mov    DWORD PTR [rbx+0xf0],eax
  41514c:	xor    eax,eax
  41514e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415153:	lea    rsi,[rip+0x2ef94]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41515a:	mov    rdi,rbx
  41515d:	xor    eax,eax
  41515f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415164:	mov    rax,QWORD PTR [rbx+0xe0]
  41516b:	mov    eax,DWORD PTR [rax+0xac]
  415171:	test   eax,eax
  415173:	je     41518f <__flatcc_fb_gen_c_json_parser@@Base+0xa2f>
  415175:	mov    rdi,QWORD PTR [rbx+0xd0]
  41517c:	lea    rdx,[rip+0x1f45d]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  415183:	mov    esi,0x1
  415188:	xor    eax,eax
  41518a:	call   4051f0 <__fprintf_chk@plt>
  41518f:	mov    rax,QWORD PTR [rbx+0xd8]
  415196:	lea    rsi,[rip+0x2b6c9]        # 440866 <_IO_stdin_used@@Base+0x14866>
  41519d:	mov    rdi,rbx
  4151a0:	mov    rdx,QWORD PTR [rax+0x118]
  4151a7:	xor    eax,eax
  4151a9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4151ae:	xor    eax,eax
  4151b0:	mov    rcx,QWORD PTR [rsp+0x188]
  4151b8:	xor    rcx,QWORD PTR fs:0x28
  4151c1:	jne    4158b7 <__flatcc_fb_gen_c_json_parser@@Base+0x1157>
  4151c7:	add    rsp,0x198
  4151ce:	pop    rbx
  4151cf:	pop    rbp
  4151d0:	pop    r12
  4151d2:	pop    r13
  4151d4:	pop    r14
  4151d6:	pop    r15
  4151d8:	ret    
  4151d9:	nop    DWORD PTR [rax+0x0]
  4151e0:	mov    rdi,QWORD PTR [r12+0x18]
  4151e5:	mov    rdx,rbp
  4151e8:	mov    rsi,r12
  4151eb:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4151f0:	lea    rsi,[rip+0x2ccf9]        # 441ef0 <_IO_stdin_used@@Base+0x15ef0>
  4151f7:	xor    eax,eax
  4151f9:	mov    rdx,rbp
  4151fc:	mov    rdi,rbx
  4151ff:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415204:	add    DWORD PTR [rbx+0xf0],0x2
  41520b:	lea    rsi,[rip+0x2b886]        # 440a98 <_IO_stdin_used@@Base+0x14a98>
  415212:	xor    eax,eax
  415214:	mov    rdx,rbp
  415217:	mov    rdi,rbx
  41521a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41521f:	mov    eax,DWORD PTR [rbx+0xf0]
  415225:	test   eax,eax
  415227:	je     41523c <__flatcc_fb_gen_c_json_parser@@Base+0xadc>
  415229:	cmp    eax,0x1
  41522c:	jne    41493d <__flatcc_fb_gen_c_json_parser@@Base+0x1dd>
  415232:	mov    DWORD PTR [rbx+0xf0],0x0
  41523c:	lea    rcx,[rip+0x2d86d]        # 442ab0 <_IO_stdin_used@@Base+0x16ab0>
  415243:	lea    rsi,[rip+0x2b6ce]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41524a:	lea    rdi,[rip+0x2b134]        # 440385 <_IO_stdin_used@@Base+0x14385>
  415251:	mov    edx,0x6d3
  415256:	call   4050f0 <__assert_fail@plt>
  41525b:	nop    DWORD PTR [rax+rax*1+0x0]
  415260:	mov    rdi,QWORD PTR [r12+0x18]
  415265:	mov    rdx,rbp
  415268:	mov    rsi,r12
  41526b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  415270:	lea    rsi,[rip+0x2d169]        # 4423e0 <_IO_stdin_used@@Base+0x163e0>
  415277:	mov    rdx,rbp
  41527a:	mov    rdi,rbx
  41527d:	xor    eax,eax
  41527f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415284:	jmp    414946 <__flatcc_fb_gen_c_json_parser@@Base+0x1e6>
  415289:	nop    DWORD PTR [rax+0x0]
  415290:	mov    rsi,r12
  415293:	mov    rdi,rbx
  415296:	call   414420 <__flatcc_fb_gen_c_verifier@@Base+0x4160>
  41529b:	jmp    414a77 <__flatcc_fb_gen_c_json_parser@@Base+0x317>
  4152a0:	mov    rsi,r12
  4152a3:	mov    rdi,rbx
  4152a6:	call   413d20 <__flatcc_fb_gen_c_verifier@@Base+0x3a60>
  4152ab:	jmp    414a77 <__flatcc_fb_gen_c_json_parser@@Base+0x317>
  4152b0:	xor    eax,eax
  4152b2:	mov    ecx,0x1d
  4152b7:	mov    rdi,rbp
  4152ba:	rep stos QWORD PTR es:[rdi],rax
  4152bd:	mov    rdx,rbp
  4152c0:	mov    rdi,QWORD PTR [rsi+0x18]
  4152c4:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4152c9:	mov    rax,QWORD PTR [rbx+0xd8]
  4152d0:	lea    rsi,[rip+0x2ceb9]        # 442190 <_IO_stdin_used@@Base+0x16190>
  4152d7:	mov    rdi,rbx
  4152da:	mov    rdx,QWORD PTR [rax+0x110]
  4152e1:	xor    eax,eax
  4152e3:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4152e8:	add    DWORD PTR [rbx+0xf0],0x2
  4152ef:	lea    rsi,[rip+0x2d3ba]        # 4426b0 <_IO_stdin_used@@Base+0x166b0>
  4152f6:	xor    eax,eax
  4152f8:	mov    rdi,rbx
  4152fb:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415300:	mov    eax,DWORD PTR [rbx+0xf0]
  415306:	test   eax,eax
  415308:	je     41586f <__flatcc_fb_gen_c_json_parser@@Base+0x110f>
  41530e:	cmp    eax,0x1
  415311:	je     415865 <__flatcc_fb_gen_c_json_parser@@Base+0x1105>
  415317:	sub    eax,0x2
  41531a:	lea    rsi,[rip+0x2b187]        # 4404a8 <_IO_stdin_used@@Base+0x144a8>
  415321:	mov    rdi,rbx
  415324:	mov    DWORD PTR [rbx+0xf0],eax
  41532a:	xor    eax,eax
  41532c:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415331:	add    DWORD PTR [rbx+0xf0],0x1
  415338:	lea    rsi,[rip+0x2b467]        # 4407a6 <_IO_stdin_used@@Base+0x147a6>
  41533f:	xor    eax,eax
  415341:	mov    rdi,rbx
  415344:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415349:	lea    rsi,[rip+0x2b473]        # 4407c3 <_IO_stdin_used@@Base+0x147c3>
  415350:	xor    eax,eax
  415352:	mov    rdi,rbx
  415355:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41535a:	lea    rsi,[rip+0x2ed8d]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  415361:	xor    eax,eax
  415363:	mov    rdi,rbx
  415366:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41536b:	lea    rsi,[rip+0x2b46c]        # 4407de <_IO_stdin_used@@Base+0x147de>
  415372:	xor    eax,eax
  415374:	mov    rdi,rbx
  415377:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41537c:	lea    rsi,[rip+0x2d35d]        # 4426e0 <_IO_stdin_used@@Base+0x166e0>
  415383:	xor    eax,eax
  415385:	mov    rdi,rbx
  415388:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41538d:	mov    rax,QWORD PTR [rbx+0xd8]
  415394:	cmp    WORD PTR [rax+0x20],0x2
  415399:	je     41565b <__flatcc_fb_gen_c_json_parser@@Base+0xefb>
  41539f:	lea    rsi,[rip+0x2d3ba]        # 442760 <_IO_stdin_used@@Base+0x16760>
  4153a6:	mov    rdi,rbx
  4153a9:	xor    eax,eax
  4153ab:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153b0:	lea    rsi,[rip+0x2d3e1]        # 442798 <_IO_stdin_used@@Base+0x16798>
  4153b7:	mov    rdx,rbp
  4153ba:	xor    eax,eax
  4153bc:	mov    rdi,rbx
  4153bf:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153c4:	lea    rsi,[rip+0x2b42e]        # 4407f9 <_IO_stdin_used@@Base+0x147f9>
  4153cb:	xor    eax,eax
  4153cd:	mov    rdi,rbx
  4153d0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153d5:	add    DWORD PTR [rbx+0xf0],0x1
  4153dc:	lea    rsi,[rip+0x2b428]        # 44080b <_IO_stdin_used@@Base+0x1480b>
  4153e3:	xor    eax,eax
  4153e5:	mov    rdi,rbx
  4153e8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153ed:	mov    eax,DWORD PTR [rbx+0xf0]
  4153f3:	test   eax,eax
  4153f5:	je     41573a <__flatcc_fb_gen_c_json_parser@@Base+0xfda>
  4153fb:	sub    eax,0x1
  4153fe:	lea    rsi,[rip+0x2af8c]        # 440391 <_IO_stdin_used@@Base+0x14391>
  415405:	mov    rdi,rbx
  415408:	mov    DWORD PTR [rbx+0xf0],eax
  41540e:	xor    eax,eax
  415410:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415415:	lea    rsi,[rip+0x2d3b4]        # 4427d0 <_IO_stdin_used@@Base+0x167d0>
  41541c:	xor    eax,eax
  41541e:	mov    rdi,rbx
  415421:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415426:	lea    rsi,[rip+0x2b3f1]        # 44081e <_IO_stdin_used@@Base+0x1481e>
  41542d:	xor    eax,eax
  41542f:	mov    rdi,rbx
  415432:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415437:	lea    rsi,[rip+0x2b0e1]        # 44051f <_IO_stdin_used@@Base+0x1451f>
  41543e:	xor    eax,eax
  415440:	mov    rdi,rbx
  415443:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415448:	mov    eax,DWORD PTR [rbx+0xf0]
  41544e:	test   eax,eax
  415450:	jne    415139 <__flatcc_fb_gen_c_json_parser@@Base+0x9d9>
  415456:	lea    rcx,[rip+0x2d473]        # 4428d0 <_IO_stdin_used@@Base+0x168d0>
  41545d:	lea    rsi,[rip+0x2b4b4]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415464:	lea    rdi,[rip+0x2af1a]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41546b:	mov    edx,0x65e
  415470:	call   4050f0 <__assert_fail@plt>
  415475:	nop    DWORD PTR [rax]
  415478:	lea    rsi,[rip+0x2b321]        # 4407a0 <_IO_stdin_used@@Base+0x147a0>
  41547f:	mov    rdi,rbx
  415482:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415487:	lea    rsi,[rip+0x2cb7a]        # 442008 <_IO_stdin_used@@Base+0x16008>
  41548e:	xor    eax,eax
  415490:	mov    rdi,rbx
  415493:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415498:	lea    rsi,[rip+0x2b304]        # 4407a3 <_IO_stdin_used@@Base+0x147a3>
  41549f:	xor    eax,eax
  4154a1:	mov    rdi,rbx
  4154a4:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154a9:	lea    rsi,[rip+0x2cbb0]        # 442060 <_IO_stdin_used@@Base+0x16060>
  4154b0:	xor    eax,eax
  4154b2:	mov    rdi,rbx
  4154b5:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154ba:	lea    rsi,[rip+0x2cbe7]        # 4420a8 <_IO_stdin_used@@Base+0x160a8>
  4154c1:	xor    eax,eax
  4154c3:	mov    rdi,rbx
  4154c6:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154cb:	lea    rsi,[rip+0x2cc0e]        # 4420e0 <_IO_stdin_used@@Base+0x160e0>
  4154d2:	xor    eax,eax
  4154d4:	mov    rdi,rbx
  4154d7:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154dc:	lea    rsi,[rip+0x2cc25]        # 442108 <_IO_stdin_used@@Base+0x16108>
  4154e3:	xor    eax,eax
  4154e5:	mov    rdi,rbx
  4154e8:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154ed:	lea    rsi,[rip+0x2cc5c]        # 442150 <_IO_stdin_used@@Base+0x16150>
  4154f4:	xor    eax,eax
  4154f6:	mov    rdi,rbx
  4154f9:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154fe:	lea    rsi,[rip+0x2aea0]        # 4403a5 <_IO_stdin_used@@Base+0x143a5>
  415505:	xor    eax,eax
  415507:	mov    rdi,rbx
  41550a:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41550f:	mov    rax,QWORD PTR [rbx+0xd8]
  415516:	lea    rsi,[rip+0x2cc73]        # 442190 <_IO_stdin_used@@Base+0x16190>
  41551d:	mov    rdi,rbx
  415520:	mov    rdx,QWORD PTR [rax+0x110]
  415527:	xor    eax,eax
  415529:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41552e:	add    DWORD PTR [rbx+0xf0],0x2
  415535:	lea    rsi,[rip+0x2cca4]        # 4421e0 <_IO_stdin_used@@Base+0x161e0>
  41553c:	xor    eax,eax
  41553e:	mov    rdi,rbx
  415541:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415546:	mov    eax,DWORD PTR [rbx+0xf0]
  41554c:	test   eax,eax
  41554e:	je     41571b <__flatcc_fb_gen_c_json_parser@@Base+0xfbb>
  415554:	cmp    eax,0x1
  415557:	je     415711 <__flatcc_fb_gen_c_json_parser@@Base+0xfb1>
  41555d:	sub    eax,0x2
  415560:	lea    rsi,[rip+0x2eb87]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  415567:	mov    rdi,rbx
  41556a:	mov    DWORD PTR [rbx+0xf0],eax
  415570:	xor    eax,eax
  415572:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415577:	mov    rdx,QWORD PTR [rbx+0xd8]
  41557e:	jmp    414888 <__flatcc_fb_gen_c_json_parser@@Base+0x128>
  415583:	lea    rsi,[rip+0x2aff7]        # 440581 <_IO_stdin_used@@Base+0x14581>
  41558a:	xor    eax,eax
  41558c:	mov    rdi,rbx
  41558f:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415594:	lea    rsi,[rip+0x2b003]        # 44059e <_IO_stdin_used@@Base+0x1459e>
  41559b:	xor    eax,eax
  41559d:	mov    rdi,rbx
  4155a0:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155a5:	lea    rsi,[rip+0x2b004]        # 4405b0 <_IO_stdin_used@@Base+0x145b0>
  4155ac:	xor    eax,eax
  4155ae:	mov    rdi,rbx
  4155b1:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155b6:	lea    rsi,[rip+0x2eb31]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4155bd:	xor    eax,eax
  4155bf:	mov    rdi,rbx
  4155c2:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155c7:	lea    rsi,[rip+0x2b42a]        # 4409f8 <_IO_stdin_used@@Base+0x149f8>
  4155ce:	xor    eax,eax
  4155d0:	mov    rdi,rbx
  4155d3:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155d8:	mov    rsi,QWORD PTR [rsp+0x10]
  4155dd:	lea    ecx,[r12-0x1]
  4155e2:	xor    r8d,r8d
  4155e5:	xor    edx,edx
  4155e7:	mov    rdi,rbx
  4155ea:	call   411020 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4155ef:	lea    rsi,[rip+0x2af04]        # 4404fa <_IO_stdin_used@@Base+0x144fa>
  4155f6:	xor    eax,eax
  4155f8:	mov    rdi,rbx
  4155fb:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415600:	mov    eax,DWORD PTR [rbx+0xf0]
  415606:	test   eax,eax
  415608:	jne    414f26 <__flatcc_fb_gen_c_json_parser@@Base+0x7c6>
  41560e:	lea    rcx,[rip+0x2d2db]        # 4428f0 <_IO_stdin_used@@Base+0x168f0>
  415615:	lea    rsi,[rip+0x2b2fc]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41561c:	lea    rdi,[rip+0x2ad62]        # 440385 <_IO_stdin_used@@Base+0x14385>
  415623:	mov    edx,0x4c3
  415628:	call   4050f0 <__assert_fail@plt>
  41562d:	nop    DWORD PTR [rax]
  415630:	mov    QWORD PTR [rsp+0x20],0x0
  415639:	jmp    414e55 <__flatcc_fb_gen_c_json_parser@@Base+0x6f5>
  41563e:	mov    rcx,QWORD PTR [rax+0x10]
  415642:	mov    edx,DWORD PTR [rax+0x18]
  415645:	lea    rsi,[rip+0x2d0d4]        # 442720 <_IO_stdin_used@@Base+0x16720>
  41564c:	mov    rdi,rbx
  41564f:	xor    eax,eax
  415651:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415656:	jmp    415093 <__flatcc_fb_gen_c_json_parser@@Base+0x933>
  41565b:	mov    rcx,QWORD PTR [rax+0x10]
  41565f:	mov    edx,DWORD PTR [rax+0x18]
  415662:	lea    rsi,[rip+0x2d0b7]        # 442720 <_IO_stdin_used@@Base+0x16720>
  415669:	mov    rdi,rbx
  41566c:	xor    eax,eax
  41566e:	call   410a00 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415673:	jmp    4153b0 <__flatcc_fb_gen_c_json_parser@@Base+0xc50>
  415678:	test   r12d,r12d
  41567b:	mov    QWORD PTR [rsp+0x20],0x0
  415684:	jle    414e55 <__flatcc_fb_gen_c_json_parser@@Base+0x6f5>
  41568a:	mov    rdi,r13
  41568d:	call   4108b0 <__flatcc_fb_gen_c_verifier@@Base+0x5f0>
  415692:	mov    rax,QWORD PTR [rip+0x3a94f]        # 44ffe8 <stderr@GLIBC_2.2.5>
  415699:	lea    rcx,[rip+0x2b278]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4156a0:	lea    rdx,[rip+0x1f41a]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4156a7:	lea    r9,[rip+0x2b762]        # 440e10 <_IO_stdin_used@@Base+0x14e10>
  4156ae:	mov    esi,0x1
  4156b3:	mov    r8d,0x4aa
  4156b9:	mov    rdi,QWORD PTR [rax]
  4156bc:	xor    eax,eax
  4156be:	call   4051f0 <__fprintf_chk@plt>
  4156c3:	lea    rcx,[rip+0x2d226]        # 4428f0 <_IO_stdin_used@@Base+0x168f0>
  4156ca:	lea    rsi,[rip+0x2b247]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4156d1:	lea    rdi,[rip+0x20431]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4156d8:	mov    edx,0x4aa
  4156dd:	call   4050f0 <__assert_fail@plt>
  4156e2:	nop    WORD PTR [rax+rax*1+0x0]
  4156e8:	mov    DWORD PTR [rbx+0xf0],0x0
  4156f2:	lea    rcx,[rip+0x2d3b7]        # 442ab0 <_IO_stdin_used@@Base+0x16ab0>
  4156f9:	lea    rsi,[rip+0x2b218]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415700:	lea    rdi,[rip+0x2ac7e]        # 440385 <_IO_stdin_used@@Base+0x14385>
  415707:	mov    edx,0x6c3
  41570c:	call   4050f0 <__assert_fail@plt>
  415711:	mov    DWORD PTR [rbx+0xf0],0x0
  41571b:	lea    rcx,[rip+0x2d38e]        # 442ab0 <_IO_stdin_used@@Base+0x16ab0>
  415722:	lea    rsi,[rip+0x2b1ef]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415729:	lea    rdi,[rip+0x2ac55]        # 440385 <_IO_stdin_used@@Base+0x14385>
  415730:	mov    edx,0x6b4
  415735:	call   4050f0 <__assert_fail@plt>
  41573a:	lea    rcx,[rip+0x2d18f]        # 4428d0 <_IO_stdin_used@@Base+0x168d0>
  415741:	lea    rsi,[rip+0x2b1d0]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415748:	lea    rdi,[rip+0x2ac36]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41574f:	mov    edx,0x65a
  415754:	call   4050f0 <__assert_fail@plt>
  415759:	lea    rcx,[rip+0x2d150]        # 4428b0 <_IO_stdin_used@@Base+0x168b0>
  415760:	lea    rsi,[rip+0x2b1b1]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415767:	lea    rdi,[rip+0x2ac17]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41576e:	mov    edx,0x67d
  415773:	call   4050f0 <__assert_fail@plt>
  415778:	lea    rcx,[rip+0x2d1f1]        # 442970 <_IO_stdin_used@@Base+0x16970>
  41577f:	lea    rsi,[rip+0x2b192]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415786:	lea    rdi,[rip+0x2abf8]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41578d:	mov    edx,0x560
  415792:	call   4050f0 <__assert_fail@plt>
  415797:	lea    rcx,[rip+0x2d1d2]        # 442970 <_IO_stdin_used@@Base+0x16970>
  41579e:	lea    rsi,[rip+0x2b173]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4157a5:	lea    rdi,[rip+0x2abd9]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4157ac:	mov    edx,0x55a
  4157b1:	call   4050f0 <__assert_fail@plt>
  4157b6:	lea    rcx,[rip+0x2d0f3]        # 4428b0 <_IO_stdin_used@@Base+0x168b0>
  4157bd:	lea    rsi,[rip+0x2b154]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4157c4:	lea    rdi,[rip+0x2abba]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4157cb:	mov    edx,0x681
  4157d0:	call   4050f0 <__assert_fail@plt>
  4157d5:	lea    rcx,[rip+0x2d114]        # 4428f0 <_IO_stdin_used@@Base+0x168f0>
  4157dc:	lea    rsi,[rip+0x2b135]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4157e3:	lea    rdi,[rip+0x2ab9b]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4157ea:	mov    edx,0x4ba
  4157ef:	call   4050f0 <__assert_fail@plt>
  4157f4:	mov    DWORD PTR [rbx+0xf0],0x0
  4157fe:	lea    rcx,[rip+0x2d0eb]        # 4428f0 <_IO_stdin_used@@Base+0x168f0>
  415805:	lea    rsi,[rip+0x2b10c]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41580c:	lea    rdi,[rip+0x2ab72]        # 440385 <_IO_stdin_used@@Base+0x14385>
  415813:	mov    edx,0x4b5
  415818:	call   4050f0 <__assert_fail@plt>
  41581d:	lea    rcx,[rip+0x2d14c]        # 442970 <_IO_stdin_used@@Base+0x16970>
  415824:	lea    rsi,[rip+0x2b0ed]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41582b:	lea    rdi,[rip+0x17f3e]        # 42d770 <_IO_stdin_used@@Base+0x1770>
  415832:	mov    edx,0x549
  415837:	call   4050f0 <__assert_fail@plt>
  41583c:	mov    DWORD PTR [rbx+0xf0],0x0
  415846:	lea    rcx,[rip+0x2d063]        # 4428b0 <_IO_stdin_used@@Base+0x168b0>
  41584d:	lea    rsi,[rip+0x2b0c4]        # 440918 <_IO_stdin_used@@Base+0x14918>
  415854:	lea    rdi,[rip+0x2ab2a]        # 440385 <_IO_stdin_used@@Base+0x14385>
  41585b:	mov    edx,0x66d
  415860:	call   4050f0 <__assert_fail@plt>
  415865:	mov    DWORD PTR [rbx+0xf0],0x0
  41586f:	lea    rcx,[rip+0x2d05a]        # 4428d0 <_IO_stdin_used@@Base+0x168d0>
  415876:	lea    rsi,[rip+0x2b09b]        # 440918 <_IO_stdin_used@@Base+0x14918>
  41587d:	lea    rdi,[rip+0x2ab01]        # 440385 <_IO_stdin_used@@Base+0x14385>
  415884:	mov    edx,0x64a
  415889:	call   4050f0 <__assert_fail@plt>
  41588e:	mov    DWORD PTR [rbx+0xf0],0x0
  415898:	lea    rcx,[rip+0x2d211]        # 442ab0 <_IO_stdin_used@@Base+0x16ab0>
  41589f:	lea    rsi,[rip+0x2b072]        # 440918 <_IO_stdin_used@@Base+0x14918>
  4158a6:	lea    rdi,[rip+0x2aad8]        # 440385 <_IO_stdin_used@@Base+0x14385>
  4158ad:	mov    edx,0x6db
  4158b2:	call   4050f0 <__assert_fail@plt>
  4158b7:	call   4050d0 <__stack_chk_fail@plt>
  4158bc:	nop    DWORD PTR [rax+0x0]
  4158c0:	push   r13
  4158c2:	push   r12
  4158c4:	mov    r13,rdi
  4158c7:	push   rbp
  4158c8:	push   rbx
  4158c9:	mov    ecx,0x1d
  4158ce:	mov    r12,rsi
  4158d1:	sub    rsp,0x1e8
  4158d8:	mov    rax,QWORD PTR fs:0x28
  4158e1:	mov    QWORD PTR [rsp+0x1d8],rax
  4158e9:	xor    eax,eax
  4158eb:	lea    rbp,[rsp+0xf0]
  4158f3:	mov    rdi,rsp
  4158f6:	mov    rdx,rsp
  4158f9:	rep stos QWORD PTR es:[rdi],rax
  4158fc:	mov    ecx,0x1d
  415901:	mov    rdi,rbp
  415904:	rep stos QWORD PTR es:[rdi],rax
  415907:	mov    rdi,QWORD PTR [rsi+0x18]
  41590b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  415910:	mov    rdi,QWORD PTR [r13+0x0]
  415914:	lea    rdx,[rip+0x2d1b5]        # 442ad0 <_IO_stdin_used@@Base+0x16ad0>
  41591b:	xor    eax,eax
  41591d:	mov    rcx,rsp
  415920:	mov    esi,0x1
  415925:	call   4051f0 <__fprintf_chk@plt>
  41592a:	mov    rbx,QWORD PTR [r12+0x28]
  41592f:	lea    r12,[rip+0x2d222]        # 442b58 <_IO_stdin_used@@Base+0x16b58>
  415936:	test   rbx,rbx
  415939:	je     415a04 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  41593f:	movzx  eax,WORD PTR [rbx+0x28]
  415943:	cmp    ax,0xa
  415947:	je     415a60 <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
  41594d:	cmp    ax,0xe
  415951:	je     4159b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
  415953:	test   ax,ax
  415956:	je     4159f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
  41595c:	mov    rax,QWORD PTR [rip+0x3a685]        # 44ffe8 <stderr@GLIBC_2.2.5>
  415963:	lea    rcx,[rip+0x2d2e6]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  41596a:	lea    rdx,[rip+0x1f150]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  415971:	lea    r9,[rip+0x2d2b0]        # 442c28 <_IO_stdin_used@@Base+0x16c28>
  415978:	mov    esi,0x1
  41597d:	mov    r8d,0xfb
  415983:	mov    rdi,QWORD PTR [rax]
  415986:	xor    eax,eax
  415988:	call   4051f0 <__fprintf_chk@plt>
  41598d:	lea    rcx,[rip+0x2e96c]        # 444300 <_IO_stdin_used@@Base+0x18300>
  415994:	lea    rsi,[rip+0x2d2b5]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  41599b:	lea    rdi,[rip+0x20167]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4159a2:	mov    edx,0xfb
  4159a7:	call   4050f0 <__assert_fail@plt>
  4159ac:	nop    DWORD PTR [rax+0x0]
  4159b0:	mov    rsi,QWORD PTR [rbx+0x18]
  4159b4:	mov    rdx,rbp
  4159b7:	mov    rdi,QWORD PTR [rsi+0x18]
  4159bb:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  4159c0:	mov    rax,QWORD PTR [rbx+0x18]
  4159c4:	movzx  eax,WORD PTR [rax+0x10]
  4159c8:	test   ax,ax
  4159cb:	je     415a90 <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
  4159d1:	cmp    ax,0x1
  4159d5:	jne    415ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
  4159db:	mov    ecx,DWORD PTR [rbx+0x48]
  4159de:	mov    rdi,QWORD PTR [r13+0x0]
  4159e2:	lea    rdx,[rip+0x2d1d7]        # 442bc0 <_IO_stdin_used@@Base+0x16bc0>
  4159e9:	mov    r8,rbp
  4159ec:	mov    esi,0x1
  4159f1:	xor    eax,eax
  4159f3:	call   4051f0 <__fprintf_chk@plt>
  4159f8:	mov    rbx,QWORD PTR [rbx]
  4159fb:	test   rbx,rbx
  4159fe:	jne    41593f <__flatcc_fb_gen_c_json_parser@@Base+0x11df>
  415a04:	mov    rdi,QWORD PTR [r13+0x0]
  415a08:	lea    rdx,[rip+0x2e6b9]        # 4440c8 <_IO_stdin_used@@Base+0x180c8>
  415a0f:	mov    esi,0x1
  415a14:	xor    eax,eax
  415a16:	call   4051f0 <__fprintf_chk@plt>
  415a1b:	mov    rdi,QWORD PTR [r13+0x0]
  415a1f:	lea    rdx,[rip+0x2e6bf]        # 4440e5 <_IO_stdin_used@@Base+0x180e5>
  415a26:	xor    eax,eax
  415a28:	mov    esi,0x1
  415a2d:	call   4051f0 <__fprintf_chk@plt>
  415a32:	xor    eax,eax
  415a34:	mov    rdx,QWORD PTR [rsp+0x1d8]
  415a3c:	xor    rdx,QWORD PTR fs:0x28
  415a45:	jne    415b10 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
  415a4b:	add    rsp,0x1e8
  415a52:	pop    rbx
  415a53:	pop    rbp
  415a54:	pop    r12
  415a56:	pop    r13
  415a58:	ret    
  415a59:	nop    DWORD PTR [rax+0x0]
  415a60:	mov    ecx,DWORD PTR [rbx+0x48]
  415a63:	mov    rdi,QWORD PTR [r13+0x0]
  415a67:	lea    rdx,[rip+0x2d252]        # 442cc0 <_IO_stdin_used@@Base+0x16cc0>
  415a6e:	xor    eax,eax
  415a70:	mov    esi,0x1
  415a75:	call   4051f0 <__fprintf_chk@plt>
  415a7a:	mov    rbx,QWORD PTR [rbx]
  415a7d:	test   rbx,rbx
  415a80:	jne    41593f <__flatcc_fb_gen_c_json_parser@@Base+0x11df>
  415a86:	jmp    415a04 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  415a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  415a90:	mov    ecx,DWORD PTR [rbx+0x48]
  415a93:	mov    rdi,QWORD PTR [r13+0x0]
  415a97:	xor    eax,eax
  415a99:	mov    r8,rbp
  415a9c:	mov    rdx,r12
  415a9f:	mov    esi,0x1
  415aa4:	call   4051f0 <__fprintf_chk@plt>
  415aa9:	mov    rbx,QWORD PTR [rbx]
  415aac:	test   rbx,rbx
  415aaf:	jne    41593f <__flatcc_fb_gen_c_json_parser@@Base+0x11df>
  415ab5:	jmp    415a04 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  415aba:	nop    WORD PTR [rax+rax*1+0x0]
  415ac0:	mov    rax,QWORD PTR [rip+0x3a521]        # 44ffe8 <stderr@GLIBC_2.2.5>
  415ac7:	lea    rcx,[rip+0x2d182]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  415ace:	lea    rdx,[rip+0x1efec]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  415ad5:	lea    r9,[rip+0x2d14c]        # 442c28 <_IO_stdin_used@@Base+0x16c28>
  415adc:	mov    esi,0x1
  415ae1:	mov    r8d,0xf0
  415ae7:	mov    rdi,QWORD PTR [rax]
  415aea:	xor    eax,eax
  415aec:	call   4051f0 <__fprintf_chk@plt>
  415af1:	lea    rcx,[rip+0x2e808]        # 444300 <_IO_stdin_used@@Base+0x18300>
  415af8:	lea    rsi,[rip+0x2d151]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  415aff:	lea    rdi,[rip+0x20003]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  415b06:	mov    edx,0xf0
  415b0b:	call   4050f0 <__assert_fail@plt>
  415b10:	call   4050d0 <__stack_chk_fail@plt>
  415b15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415b20:	push   r15
  415b22:	push   r14
  415b24:	mov    ecx,0x1d
  415b29:	push   r13
  415b2b:	push   r12
  415b2d:	mov    r13,rsi
  415b30:	push   rbp
  415b31:	push   rbx
  415b32:	mov    rbp,rdi
  415b35:	xor    r14d,r14d
  415b38:	sub    rsp,0x1e8
  415b3f:	mov    rax,QWORD PTR fs:0x28
  415b48:	mov    QWORD PTR [rsp+0x1d8],rax
  415b50:	xor    eax,eax
  415b52:	lea    r12,[rsp+0xf0]
  415b5a:	mov    rdi,rsp
  415b5d:	mov    rdx,rsp
  415b60:	rep stos QWORD PTR es:[rdi],rax
  415b63:	mov    ecx,0x1d
  415b68:	mov    rdi,r12
  415b6b:	mov    rbx,rsp
  415b6e:	rep stos QWORD PTR es:[rdi],rax
  415b71:	mov    rdi,QWORD PTR [rsi+0x18]
  415b75:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  415b7a:	mov    rdi,QWORD PTR [rbp+0x0]
  415b7e:	lea    rdx,[rip+0x2d18b]        # 442d10 <_IO_stdin_used@@Base+0x16d10>
  415b85:	xor    eax,eax
  415b87:	mov    rcx,rsp
  415b8a:	mov    esi,0x1
  415b8f:	call   4051f0 <__fprintf_chk@plt>
  415b94:	mov    r15,QWORD PTR [r13+0x28]
  415b98:	lea    r13,[rip+0x2e5f1]        # 444190 <_IO_stdin_used@@Base+0x18190>
  415b9f:	test   r15,r15
  415ba2:	je     415c72 <__flatcc_fb_gen_c_json_parser@@Base+0x1512>
  415ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  415bb0:	test   BYTE PTR [r15+0x70],0x4
  415bb5:	jne    415c62 <__flatcc_fb_gen_c_json_parser@@Base+0x1502>
  415bbb:	movzx  eax,WORD PTR [r15+0x28]
  415bc0:	cmp    ax,0x8
  415bc4:	je     415cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x1578>
  415bca:	cmp    ax,0xe
  415bce:	jne    415c62 <__flatcc_fb_gen_c_json_parser@@Base+0x1502>
  415bd4:	mov    rsi,QWORD PTR [r15+0x18]
  415bd8:	mov    rdx,r12
  415bdb:	mov    rdi,QWORD PTR [rsi+0x18]
  415bdf:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  415be4:	mov    rdx,QWORD PTR [r15+0x18]
  415be8:	movzx  eax,WORD PTR [rdx+0x10]
  415bec:	cmp    ax,0x1
  415bf0:	je     415cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1598>
  415bf6:	cmp    ax,0x3
  415bfa:	jne    415c62 <__flatcc_fb_gen_c_json_parser@@Base+0x1502>
  415bfc:	cmp    DWORD PTR [rdx+0x48],0xb
  415c00:	ja     415de8 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
  415c06:	mov    eax,DWORD PTR [rdx+0x48]
  415c09:	lea    rdx,[rip+0x2e550]        # 444160 <_IO_stdin_used@@Base+0x18160>
  415c10:	movsxd rax,DWORD PTR [rdx+rax*4]
  415c14:	add    rax,rdx
  415c17:	jmp    rax
  415c19:	nop    DWORD PTR [rax+0x0]
  415c20:	lea    rcx,[rip+0x1ef61]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  415c27:	nop    WORD PTR [rax+rax*1+0x0]
  415c30:	mov    rdx,QWORD PTR [r15+0x8]
  415c34:	sub    rsp,0x8
  415c38:	mov    r8d,r14d
  415c3b:	mov    rax,QWORD PTR [rdx+0x8]
  415c3f:	push   rax
  415c40:	mov    r9,QWORD PTR [r15+0x78]
  415c44:	push   QWORD PTR [rdx]
  415c46:	lea    rdx,[rip+0x2d1eb]        # 442e38 <_IO_stdin_used@@Base+0x16e38>
  415c4d:	push   rax
  415c4e:	mov    rdi,QWORD PTR [rbp+0x0]
  415c52:	mov    esi,0x1
  415c57:	xor    eax,eax
  415c59:	call   4051f0 <__fprintf_chk@plt>
  415c5e:	add    rsp,0x20
  415c62:	mov    r15,QWORD PTR [r15]
  415c65:	add    r14d,0x1
  415c69:	test   r15,r15
  415c6c:	jne    415bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  415c72:	mov    rdi,QWORD PTR [rbp+0x0]
  415c76:	lea    rdx,[rip+0x2e46e]        # 4440eb <_IO_stdin_used@@Base+0x180eb>
  415c7d:	mov    esi,0x1
  415c82:	xor    eax,eax
  415c84:	call   4051f0 <__fprintf_chk@plt>
  415c89:	mov    rdi,QWORD PTR [rbp+0x0]
  415c8d:	lea    rdx,[rip+0x2d0cc]        # 442d60 <_IO_stdin_used@@Base+0x16d60>
  415c94:	mov    r8,rbx
  415c97:	mov    rcx,rbx
  415c9a:	xor    eax,eax
  415c9c:	mov    esi,0x1
  415ca1:	call   4051f0 <__fprintf_chk@plt>
  415ca6:	xor    eax,eax
  415ca8:	mov    rbx,QWORD PTR [rsp+0x1d8]
  415cb0:	xor    rbx,QWORD PTR fs:0x28
  415cb9:	jne    415ebb <__flatcc_fb_gen_c_json_parser@@Base+0x175b>
  415cbf:	add    rsp,0x1e8
  415cc6:	pop    rbx
  415cc7:	pop    rbp
  415cc8:	pop    r12
  415cca:	pop    r13
  415ccc:	pop    r14
  415cce:	pop    r15
  415cd0:	ret    
  415cd1:	nop    DWORD PTR [rax+0x0]
  415cd8:	cmp    DWORD PTR [r15+0x18],0xb
  415cdd:	ja     415de8 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
  415ce3:	mov    eax,DWORD PTR [r15+0x18]
  415ce7:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  415cec:	add    rax,r13
  415cef:	jmp    rax
  415cf1:	nop    DWORD PTR [rax+0x0]
  415cf8:	mov    rax,QWORD PTR [r15+0x8]
  415cfc:	sub    rsp,0x8
  415d00:	mov    rdi,QWORD PTR [rbp+0x0]
  415d04:	lea    rdx,[rip+0x2d1dd]        # 442ee8 <_IO_stdin_used@@Base+0x16ee8>
  415d0b:	mov    ecx,r14d
  415d0e:	mov    esi,0x1
  415d13:	add    r14d,0x1
  415d17:	mov    r9,QWORD PTR [rax+0x8]
  415d1b:	push   r12
  415d1d:	push   r9
  415d1f:	mov    r8,QWORD PTR [r15+0x78]
  415d23:	push   QWORD PTR [rax]
  415d25:	xor    eax,eax
  415d27:	call   4051f0 <__fprintf_chk@plt>
  415d2c:	mov    r15,QWORD PTR [r15]
  415d2f:	add    rsp,0x20
  415d33:	test   r15,r15
  415d36:	jne    415bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  415d3c:	jmp    415c72 <__flatcc_fb_gen_c_json_parser@@Base+0x1512>
  415d41:	nop    DWORD PTR [rax+0x0]
  415d48:	lea    rcx,[rip+0x1ee2b]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  415d4f:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415d54:	nop    DWORD PTR [rax+0x0]
  415d58:	lea    rcx,[rip+0x1ee22]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  415d5f:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415d64:	nop    DWORD PTR [rax+0x0]
  415d68:	lea    rcx,[rip+0x1ee26]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  415d6f:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415d74:	nop    DWORD PTR [rax+0x0]
  415d78:	lea    rcx,[rip+0x1edfc]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  415d7f:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415d84:	nop    DWORD PTR [rax+0x0]
  415d88:	lea    rcx,[rip+0x1ecf7]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  415d8f:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415d94:	nop    DWORD PTR [rax+0x0]
  415d98:	lea    rcx,[rip+0x1ede3]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  415d9f:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415da4:	nop    DWORD PTR [rax+0x0]
  415da8:	lea    rcx,[rip+0x1edda]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  415daf:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415db4:	nop    DWORD PTR [rax+0x0]
  415db8:	lea    rcx,[rip+0x1edd1]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  415dbf:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415dc4:	nop    DWORD PTR [rax+0x0]
  415dc8:	lea    rcx,[rip+0x1ecbd]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  415dcf:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415dd4:	nop    DWORD PTR [rax+0x0]
  415dd8:	lea    rcx,[rip+0x1edb0]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  415ddf:	jmp    415c30 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  415de4:	nop    DWORD PTR [rax+0x0]
  415de8:	mov    rax,QWORD PTR [rip+0x3a1f9]        # 44ffe8 <stderr@GLIBC_2.2.5>
  415def:	lea    rcx,[rip+0x176fa]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  415df6:	lea    rdx,[rip+0x1ecc4]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  415dfd:	lea    r9,[rip+0x176b4]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  415e04:	mov    esi,0x1
  415e09:	mov    r8d,0x60
  415e0f:	mov    rdi,QWORD PTR [rax]
  415e12:	xor    eax,eax
  415e14:	call   4051f0 <__fprintf_chk@plt>
  415e19:	lea    rcx,[rip+0x2e500]        # 444320 <_IO_stdin_used@@Base+0x18320>
  415e20:	lea    rsi,[rip+0x176c9]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  415e27:	lea    rdi,[rip+0x1fcdb]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  415e2e:	mov    edx,0x60
  415e33:	call   4050f0 <__assert_fail@plt>
  415e38:	lea    rcx,[rip+0x1ed49]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  415e3f:	nop
  415e40:	mov    rdx,QWORD PTR [r15+0x8]
  415e44:	mov    r8d,r14d
  415e47:	mov    rax,QWORD PTR [rdx+0x8]
  415e4b:	push   r12
  415e4d:	push   rax
  415e4e:	push   QWORD PTR [rdx]
  415e50:	lea    rdx,[rip+0x2d029]        # 442e80 <_IO_stdin_used@@Base+0x16e80>
  415e57:	push   rax
  415e58:	mov    r9,QWORD PTR [r15+0x78]
  415e5c:	jmp    415c4e <__flatcc_fb_gen_c_json_parser@@Base+0x14ee>
  415e61:	lea    rcx,[rip+0x1ed28]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  415e68:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415e6a:	lea    rcx,[rip+0x1ec1b]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  415e71:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415e73:	lea    rcx,[rip+0x1ec0c]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  415e7a:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415e7c:	lea    rcx,[rip+0x1ed12]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  415e83:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415e85:	lea    rcx,[rip+0x1ecef]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  415e8c:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415e8e:	lea    rcx,[rip+0x1eced]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  415e95:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415e97:	lea    rcx,[rip+0x1eceb]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  415e9e:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415ea0:	lea    rcx,[rip+0x1ecd3]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  415ea7:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415ea9:	lea    rcx,[rip+0x1ecd1]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  415eb0:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415eb2:	lea    rcx,[rip+0x1ecd6]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  415eb9:	jmp    415e40 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  415ebb:	call   4050d0 <__stack_chk_fail@plt>
  415ec0:	push   r15
  415ec2:	push   r14
  415ec4:	mov    ecx,0x1d
  415ec9:	push   r13
  415ecb:	push   r12
  415ecd:	mov    r12,rdi
  415ed0:	push   rbp
  415ed1:	push   rbx
  415ed2:	mov    rbp,rsi
  415ed5:	sub    rsp,0x1f8
  415edc:	lea    r15,[rsp+0x10]
  415ee1:	lea    rdx,[rsp+0x100]
  415ee9:	mov    rax,QWORD PTR fs:0x28
  415ef2:	mov    QWORD PTR [rsp+0x1e8],rax
  415efa:	xor    eax,eax
  415efc:	mov    rdi,r15
  415eff:	rep stos QWORD PTR es:[rdi],rax
  415f02:	mov    rdi,rdx
  415f05:	mov    ecx,0x1d
  415f0a:	mov    rdx,r15
  415f0d:	rep stos QWORD PTR es:[rdi],rax
  415f10:	mov    rdi,QWORD PTR [rsi+0x18]
  415f14:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  415f19:	cmp    DWORD PTR [rbp+0x48],0xb
  415f1d:	ja     416280 <__flatcc_fb_gen_c_json_parser@@Base+0x1b20>
  415f23:	mov    eax,DWORD PTR [rbp+0x48]
  415f26:	lea    rdx,[rip+0x2e293]        # 4441c0 <_IO_stdin_used@@Base+0x181c0>
  415f2d:	movsxd rax,DWORD PTR [rdx+rax*4]
  415f31:	add    rax,rdx
  415f34:	jmp    rax
  415f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f40:	lea    rax,[rip+0x1ec41]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  415f47:	lea    r11,[rip+0x1eb20]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  415f4e:	lea    r8,[rip+0x2e199]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  415f55:	mov    QWORD PTR [rsp+0x8],rax
  415f5a:	nop    WORD PTR [rax+rax*1+0x0]
  415f60:	test   BYTE PTR [rbp+0xa4],0x20
  415f67:	je     416398 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
  415f6d:	mov    rax,QWORD PTR [rbp+0xb8]
  415f74:	cmp    rax,0x2
  415f78:	je     4165b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e50>
  415f7e:	cmp    rax,0x4
  415f82:	je     416590 <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
  415f88:	lea    rdx,[rip+0x1eacd]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  415f8f:	lea    r14,[rip+0x1eae1]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  415f96:	cmp    rax,0x1
  415f9a:	lea    r13,[rip+0x2e14e]        # 4440ef <_IO_stdin_used@@Base+0x180ef>
  415fa1:	mov    rax,0xffffffffffffffff
  415fa8:	mov    ebx,0xff
  415fad:	cmovne r14,rdx
  415fb1:	lea    rdx,[rip+0x2e13c]        # 4440f4 <_IO_stdin_used@@Base+0x180f4>
  415fb8:	cmovne rbx,rax
  415fbc:	cmovne r13,rdx
  415fc0:	mov    rax,QWORD PTR [rbp+0x28]
  415fc4:	test   rax,rax
  415fc7:	jne    415fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x1888>
  415fc9:	jmp    416003 <__flatcc_fb_gen_c_json_parser@@Base+0x18a3>
  415fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  415fd0:	cmp    dx,0x6
  415fd4:	je     4162d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
  415fda:	cmp    dx,0x4
  415fde:	je     415ff2 <__flatcc_fb_gen_c_json_parser@@Base+0x1892>
  415fe0:	mov    rax,QWORD PTR [rax]
  415fe3:	test   rax,rax
  415fe6:	je     416003 <__flatcc_fb_gen_c_json_parser@@Base+0x18a3>
  415fe8:	movzx  edx,WORD PTR [rax+0x58]
  415fec:	cmp    dx,0x5
  415ff0:	jne    415fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
  415ff2:	mov    rdx,QWORD PTR [rax+0x48]
  415ff6:	mov    rax,QWORD PTR [rax]
  415ff9:	andn   rbx,rdx,rbx
  415ffe:	test   rax,rax
  416001:	jne    415fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x1888>
  416003:	mov    rdi,QWORD PTR [r12+0xd0]
  41600b:	lea    rdx,[rip+0x2d1be]        # 4431d0 <_IO_stdin_used@@Base+0x171d0>
  416012:	mov    r9,r11
  416015:	mov    rcx,r15
  416018:	mov    esi,0x1
  41601d:	xor    eax,eax
  41601f:	mov    QWORD PTR [rsp],r11
  416023:	call   4051f0 <__fprintf_chk@plt>
  416028:	mov    r11,QWORD PTR [rsp]
  41602c:	mov    rdi,r14
  41602f:	mov    rsi,r11
  416032:	call   405140 <strcmp@plt>
  416037:	test   eax,eax
  416039:	je     416460 <__flatcc_fb_gen_c_json_parser@@Base+0x1d00>
  41603f:	mov    rdi,QWORD PTR [r12+0xd0]
  416047:	lea    rdx,[rip+0x2e0aa]        # 4440f8 <_IO_stdin_used@@Base+0x180f8>
  41604e:	mov    r8,r14
  416051:	mov    rcx,r14
  416054:	mov    esi,0x1
  416059:	xor    eax,eax
  41605b:	call   4051f0 <__fprintf_chk@plt>
  416060:	mov    rdi,QWORD PTR [r12+0xd0]
  416068:	lea    rdx,[rip+0x2cee1]        # 442f50 <_IO_stdin_used@@Base+0x16f50>
  41606f:	mov    esi,0x1
  416074:	xor    eax,eax
  416076:	call   4051f0 <__fprintf_chk@plt>
  41607b:	mov    rdi,QWORD PTR [r12+0xd0]
  416083:	lea    rdx,[rip+0x2e063]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  41608a:	xor    eax,eax
  41608c:	mov    esi,0x1
  416091:	call   4051f0 <__fprintf_chk@plt>
  416096:	test   rbx,rbx
  416099:	jne    416560 <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
  41609f:	mov    rdi,QWORD PTR [r12+0xd0]
  4160a7:	lea    rdx,[rip+0x2cf3a]        # 442fe8 <_IO_stdin_used@@Base+0x16fe8>
  4160ae:	xor    eax,eax
  4160b0:	mov    esi,0x1
  4160b5:	call   4051f0 <__fprintf_chk@plt>
  4160ba:	mov    rbx,QWORD PTR [rbp+0x28]
  4160be:	lea    rbp,[rip+0x2cf63]        # 443028 <_IO_stdin_used@@Base+0x17028>
  4160c5:	test   rbx,rbx
  4160c8:	je     41631a <__flatcc_fb_gen_c_json_parser@@Base+0x1bba>
  4160ce:	movzx  eax,WORD PTR [rbx+0x58]
  4160d2:	cmp    ax,0x5
  4160d6:	je     4162e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
  4160dc:	cmp    ax,0x6
  4160e0:	je     416380 <__flatcc_fb_gen_c_json_parser@@Base+0x1c20>
  4160e6:	cmp    ax,0x4
  4160ea:	je     4162e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
  4160f0:	mov    rax,QWORD PTR [rip+0x39ef1]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4160f7:	lea    rcx,[rip+0x2cb52]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  4160fe:	lea    rdx,[rip+0x1e9bc]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416105:	lea    r9,[rip+0x2cf6c]        # 443078 <_IO_stdin_used@@Base+0x17078>
  41610c:	mov    esi,0x1
  416111:	mov    r8d,0x86
  416117:	mov    rdi,QWORD PTR [rax]
  41611a:	xor    eax,eax
  41611c:	call   4051f0 <__fprintf_chk@plt>
  416121:	lea    rcx,[rip+0x2e218]        # 444340 <_IO_stdin_used@@Base+0x18340>
  416128:	lea    rsi,[rip+0x2cb21]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  41612f:	lea    rdi,[rip+0x1f9d3]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416136:	mov    edx,0x86
  41613b:	call   4050f0 <__assert_fail@plt>
  416140:	lea    rax,[rip+0x1ea3a]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  416147:	lea    r11,[rip+0x1e917]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  41614e:	lea    r8,[rip+0x2df99]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  416155:	mov    QWORD PTR [rsp+0x8],rax
  41615a:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41615f:	nop
  416160:	lea    rax,[rip+0x1ea13]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  416167:	lea    r11,[rip+0x1e8ee]        # 434a5c <_IO_stdin_used@@Base+0x8a5c>
  41616e:	lea    r8,[rip+0x2df79]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  416175:	mov    QWORD PTR [rsp+0x8],rax
  41617a:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41617f:	nop
  416180:	lea    rax,[rip+0x1e905]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  416187:	lea    r8,[rip+0x2df60]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41618e:	mov    QWORD PTR [rsp+0x8],rax
  416193:	mov    r11,rax
  416196:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41619b:	nop    DWORD PTR [rax+rax*1+0x0]
  4161a0:	lea    rax,[rip+0x1e8df]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  4161a7:	lea    r8,[rip+0x2df40]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4161ae:	mov    QWORD PTR [rsp+0x8],rax
  4161b3:	mov    r11,rax
  4161b6:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  4161bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4161c0:	lea    rax,[rip+0x1e9b4]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  4161c7:	lea    r11,[rip+0x1e88f]        # 434a5d <_IO_stdin_used@@Base+0x8a5d>
  4161ce:	lea    r8,[rip+0x2df19]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4161d5:	mov    QWORD PTR [rsp+0x8],rax
  4161da:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  4161df:	nop
  4161e0:	lea    rax,[rip+0x1e99b]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  4161e7:	lea    r11,[rip+0x1e878]        # 434a66 <_IO_stdin_used@@Base+0x8a66>
  4161ee:	lea    r8,[rip+0x2def9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  4161f5:	mov    QWORD PTR [rsp+0x8],rax
  4161fa:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  4161ff:	nop
  416200:	lea    rax,[rip+0x1e982]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  416207:	lea    r11,[rip+0x1e861]        # 434a6f <_IO_stdin_used@@Base+0x8a6f>
  41620e:	lea    r8,[rip+0x2ded9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  416215:	mov    QWORD PTR [rsp+0x8],rax
  41621a:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41621f:	nop
  416220:	lea    rax,[rip+0x1e969]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  416227:	lea    r11,[rip+0x1e84a]        # 434a78 <_IO_stdin_used@@Base+0x8a78>
  41622e:	lea    r8,[rip+0x2deb9]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  416235:	mov    QWORD PTR [rsp+0x8],rax
  41623a:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41623f:	nop
  416240:	lea    rax,[rip+0x1e948]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  416247:	lea    r11,[rip+0x1e829]        # 434a77 <_IO_stdin_used@@Base+0x8a77>
  41624e:	lea    r8,[rip+0x2de99]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  416255:	mov    QWORD PTR [rsp+0x8],rax
  41625a:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41625f:	nop
  416260:	lea    rax,[rip+0x1e92e]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  416267:	mov    r8,r12
  41626a:	lea    r11,[rip+0x1e80e]        # 434a7f <_IO_stdin_used@@Base+0x8a7f>
  416271:	mov    QWORD PTR [rsp+0x8],rax
  416276:	jmp    415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  41627b:	nop    DWORD PTR [rax+rax*1+0x0]
  416280:	mov    rax,QWORD PTR [rip+0x39d61]        # 44ffe8 <stderr@GLIBC_2.2.5>
  416287:	lea    rcx,[rip+0x17262]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  41628e:	lea    rdx,[rip+0x1e82c]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416295:	lea    r9,[rip+0x1721c]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  41629c:	mov    esi,0x1
  4162a1:	mov    r8d,0x60
  4162a7:	mov    rdi,QWORD PTR [rax]
  4162aa:	xor    eax,eax
  4162ac:	call   4051f0 <__fprintf_chk@plt>
  4162b1:	lea    rcx,[rip+0x2e068]        # 444320 <_IO_stdin_used@@Base+0x18320>
  4162b8:	lea    rsi,[rip+0x17231]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  4162bf:	lea    rdi,[rip+0x1f843]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4162c6:	mov    edx,0x60
  4162cb:	call   4050f0 <__assert_fail@plt>
  4162d0:	movzx  edx,BYTE PTR [rax+0x48]
  4162d4:	andn   rbx,rdx,rbx
  4162d9:	jmp    415fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1880>
  4162de:	xchg   ax,ax
  4162e0:	mov    rax,QWORD PTR [rbx+0x8]
  4162e4:	mov    rcx,QWORD PTR [rbx+0x48]
  4162e8:	mov    r9,QWORD PTR [rax+0x8]
  4162ec:	mov    rdi,QWORD PTR [r12+0xd0]
  4162f4:	push   r9
  4162f6:	mov    r8,r13
  4162f9:	push   QWORD PTR [rax]
  4162fb:	mov    rdx,rbp
  4162fe:	xor    eax,eax
  416300:	mov    esi,0x1
  416305:	call   4051f0 <__fprintf_chk@plt>
  41630a:	mov    rbx,QWORD PTR [rbx]
  41630d:	pop    r9
  41630f:	pop    r10
  416311:	test   rbx,rbx
  416314:	jne    4160ce <__flatcc_fb_gen_c_json_parser@@Base+0x196e>
  41631a:	mov    rdi,QWORD PTR [r12+0xd0]
  416322:	lea    rdx,[rip+0x2ccbf]        # 442fe8 <_IO_stdin_used@@Base+0x16fe8>
  416329:	mov    esi,0x1
  41632e:	xor    eax,eax
  416330:	call   4051f0 <__fprintf_chk@plt>
  416335:	mov    rdi,QWORD PTR [r12+0xd0]
  41633d:	lea    rdx,[rip+0x2dda7]        # 4440eb <_IO_stdin_used@@Base+0x180eb>
  416344:	mov    esi,0x1
  416349:	xor    eax,eax
  41634b:	call   4051f0 <__fprintf_chk@plt>
  416350:	xor    eax,eax
  416352:	mov    rsi,QWORD PTR [rsp+0x1e8]
  41635a:	xor    rsi,QWORD PTR fs:0x28
  416363:	jne    4165c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e68>
  416369:	add    rsp,0x1f8
  416370:	pop    rbx
  416371:	pop    rbp
  416372:	pop    r12
  416374:	pop    r13
  416376:	pop    r14
  416378:	pop    r15
  41637a:	ret    
  41637b:	nop    DWORD PTR [rax+rax*1+0x0]
  416380:	mov    rax,QWORD PTR [rbx+0x8]
  416384:	movzx  ecx,BYTE PTR [rbx+0x48]
  416388:	mov    r9,QWORD PTR [rax+0x8]
  41638c:	jmp    4162ec <__flatcc_fb_gen_c_json_parser@@Base+0x1b8c>
  416391:	nop    DWORD PTR [rax+0x0]
  416398:	mov    rdi,QWORD PTR [r12+0xd0]
  4163a0:	lea    rdx,[rip+0x2ce29]        # 4431d0 <_IO_stdin_used@@Base+0x171d0>
  4163a7:	mov    r9,r11
  4163aa:	mov    rcx,r15
  4163ad:	mov    esi,0x1
  4163b2:	xor    eax,eax
  4163b4:	call   4051f0 <__fprintf_chk@plt>
  4163b9:	mov    rdi,QWORD PTR [r12+0xd0]
  4163c1:	lea    rdx,[rip+0x2dd52]        # 44411a <_IO_stdin_used@@Base+0x1811a>
  4163c8:	xor    eax,eax
  4163ca:	mov    esi,0x1
  4163cf:	call   4051f0 <__fprintf_chk@plt>
  4163d4:	mov    rbx,QWORD PTR [rbp+0x28]
  4163d8:	lea    rbp,[rip+0x2cd69]        # 443148 <_IO_stdin_used@@Base+0x17148>
  4163df:	test   rbx,rbx
  4163e2:	je     4164c6 <__flatcc_fb_gen_c_json_parser@@Base+0x1d66>
  4163e8:	movzx  eax,WORD PTR [rbx+0x58]
  4163ec:	cmp    ax,0x5
  4163f0:	je     416520 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc0>
  4163f6:	cmp    ax,0x6
  4163fa:	je     4164f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d90>
  416400:	cmp    ax,0x4
  416404:	je     416488 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
  41640a:	mov    rax,QWORD PTR [rip+0x39bd7]        # 44ffe8 <stderr@GLIBC_2.2.5>
  416411:	lea    rcx,[rip+0x2c838]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416418:	lea    rdx,[rip+0x1e6a2]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  41641f:	lea    r9,[rip+0x2cc52]        # 443078 <_IO_stdin_used@@Base+0x17078>
  416426:	mov    esi,0x1
  41642b:	mov    r8d,0x9d
  416431:	mov    rdi,QWORD PTR [rax]
  416434:	xor    eax,eax
  416436:	call   4051f0 <__fprintf_chk@plt>
  41643b:	lea    rcx,[rip+0x2defe]        # 444340 <_IO_stdin_used@@Base+0x18340>
  416442:	lea    rsi,[rip+0x2c807]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416449:	lea    rdi,[rip+0x1f6b9]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416450:	mov    edx,0x9d
  416455:	call   4050f0 <__assert_fail@plt>
  41645a:	nop    WORD PTR [rax+rax*1+0x0]
  416460:	mov    rdi,QWORD PTR [r12+0xd0]
  416468:	lea    rdx,[rip+0x2dc9c]        # 44410b <_IO_stdin_used@@Base+0x1810b>
  41646f:	mov    rcx,r14
  416472:	mov    esi,0x1
  416477:	xor    eax,eax
  416479:	call   4051f0 <__fprintf_chk@plt>
  41647e:	jmp    416060 <__flatcc_fb_gen_c_json_parser@@Base+0x1900>
  416483:	nop    DWORD PTR [rax+rax*1+0x0]
  416488:	mov    rax,QWORD PTR [rbx+0x8]
  41648c:	sub    rsp,0x8
  416490:	mov    rcx,QWORD PTR [rbx+0x48]
  416494:	mov    rdi,QWORD PTR [r12+0xd0]
  41649c:	lea    rdx,[rip+0x2cc5d]        # 443100 <_IO_stdin_used@@Base+0x17100>
  4164a3:	mov    esi,0x1
  4164a8:	mov    r8,QWORD PTR [rax+0x8]
  4164ac:	mov    r9,QWORD PTR [rax]
  4164af:	xor    eax,eax
  4164b1:	push   r8
  4164b3:	call   4051f0 <__fprintf_chk@plt>
  4164b8:	pop    rcx
  4164b9:	pop    rsi
  4164ba:	mov    rbx,QWORD PTR [rbx]
  4164bd:	test   rbx,rbx
  4164c0:	jne    4163e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
  4164c6:	mov    rdi,QWORD PTR [r12+0xd0]
  4164ce:	mov    rcx,QWORD PTR [rsp+0x8]
  4164d3:	lea    rdx,[rip+0x2ccb6]        # 443190 <_IO_stdin_used@@Base+0x17190>
  4164da:	mov    esi,0x1
  4164df:	xor    eax,eax
  4164e1:	call   4051f0 <__fprintf_chk@plt>
  4164e6:	jmp    416335 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd5>
  4164eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4164f0:	mov    rax,QWORD PTR [rbx+0x8]
  4164f4:	movzx  ecx,BYTE PTR [rbx+0x48]
  4164f8:	sub    rsp,0x8
  4164fc:	mov    rdi,QWORD PTR [r12+0xd0]
  416504:	mov    rdx,rbp
  416507:	mov    esi,0x1
  41650c:	mov    r8,QWORD PTR [rax+0x8]
  416510:	mov    r9,QWORD PTR [rax]
  416513:	xor    eax,eax
  416515:	push   r8
  416517:	call   4051f0 <__fprintf_chk@plt>
  41651c:	pop    rax
  41651d:	pop    rdx
  41651e:	jmp    4164ba <__flatcc_fb_gen_c_json_parser@@Base+0x1d5a>
  416520:	mov    rax,QWORD PTR [rbx+0x8]
  416524:	sub    rsp,0x8
  416528:	mov    rcx,QWORD PTR [rbx+0x48]
  41652c:	mov    rdi,QWORD PTR [r12+0xd0]
  416534:	lea    rdx,[rip+0x2cb7d]        # 4430b8 <_IO_stdin_used@@Base+0x170b8>
  41653b:	mov    esi,0x1
  416540:	mov    r8,QWORD PTR [rax+0x8]
  416544:	mov    r9,QWORD PTR [rax]
  416547:	xor    eax,eax
  416549:	push   r8
  41654b:	call   4051f0 <__fprintf_chk@plt>
  416550:	pop    rdi
  416551:	pop    r8
  416553:	jmp    4164ba <__flatcc_fb_gen_c_json_parser@@Base+0x1d5a>
  416558:	nop    DWORD PTR [rax+rax*1+0x0]
  416560:	mov    rdi,QWORD PTR [r12+0xd0]
  416568:	mov    r8,QWORD PTR [rsp+0x8]
  41656d:	lea    rdx,[rip+0x2ca14]        # 442f88 <_IO_stdin_used@@Base+0x16f88>
  416574:	mov    rcx,rbx
  416577:	mov    esi,0x1
  41657c:	xor    eax,eax
  41657e:	call   4051f0 <__fprintf_chk@plt>
  416583:	jmp    41609f <__flatcc_fb_gen_c_json_parser@@Base+0x193f>
  416588:	nop    DWORD PTR [rax+rax*1+0x0]
  416590:	lea    r14,[rip+0x1e4ce]        # 434a65 <_IO_stdin_used@@Base+0x8a65>
  416597:	lea    r13,[rip+0x2db53]        # 4440f1 <_IO_stdin_used@@Base+0x180f1>
  41659e:	mov    ebx,0xffffffff
  4165a3:	jmp    415fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1860>
  4165a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4165b0:	lea    r14,[rip+0x1e4b7]        # 434a6e <_IO_stdin_used@@Base+0x8a6e>
  4165b7:	lea    r13,[rip+0x2db31]        # 4440ef <_IO_stdin_used@@Base+0x180ef>
  4165be:	mov    ebx,0xffff
  4165c3:	jmp    415fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1860>
  4165c8:	call   4050d0 <__stack_chk_fail@plt>
  4165cd:	nop    DWORD PTR [rax]
  4165d0:	push   r15
  4165d2:	push   r14
  4165d4:	mov    ecx,0x1d
  4165d9:	push   r13
  4165db:	push   r12
  4165dd:	mov    r14,rsi
  4165e0:	push   rbp
  4165e1:	push   rbx
  4165e2:	mov    rbp,rdi
  4165e5:	sub    rsp,0x1f8
  4165ec:	mov    rax,QWORD PTR fs:0x28
  4165f5:	mov    QWORD PTR [rsp+0x1e8],rax
  4165fd:	xor    eax,eax
  4165ff:	lea    rdi,[rsp+0x10]
  416604:	mov    QWORD PTR [rsp+0x8],rdi
  416609:	mov    rdx,QWORD PTR [rsp+0x8]
  41660e:	rep stos QWORD PTR es:[rdi],rax
  416611:	lea    rcx,[rsp+0x100]
  416619:	mov    rsi,rcx
  41661c:	mov    QWORD PTR [rsp],rcx
  416620:	mov    ecx,0x1d
  416625:	mov    rdi,rsi
  416628:	mov    rsi,r14
  41662b:	rep stos QWORD PTR es:[rdi],rax
  41662e:	mov    rdi,QWORD PTR [r14+0x18]
  416632:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  416637:	mov    rbx,QWORD PTR [r14+0xa8]
  41663e:	mov    esi,0x8
  416643:	mov    rdi,rbx
  416646:	call   405130 <calloc@plt>
  41664b:	test   rbx,rbx
  41664e:	mov    r15,rax
  416651:	je     41665c <__flatcc_fb_gen_c_json_parser@@Base+0x1efc>
  416653:	test   rax,rax
  416656:	je     416fa4 <__flatcc_fb_gen_c_json_parser@@Base+0x2844>
  41665c:	mov    rax,QWORD PTR [r14+0x28]
  416660:	test   rax,rax
  416663:	je     41667b <__flatcc_fb_gen_c_json_parser@@Base+0x1f1b>
  416665:	nop    DWORD PTR [rax]
  416668:	mov    rdx,QWORD PTR [rax+0x88]
  41666f:	mov    QWORD PTR [r15+rdx*8],rax
  416673:	mov    rax,QWORD PTR [rax]
  416676:	test   rax,rax
  416679:	jne    416668 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
  41667b:	mov    rcx,QWORD PTR [rsp+0x8]
  416680:	mov    rdi,QWORD PTR [rbp+0x0]
  416684:	lea    rdx,[rip+0x2cbbd]        # 443248 <_IO_stdin_used@@Base+0x17248>
  41668b:	xor    eax,eax
  41668d:	mov    esi,0x1
  416692:	call   4051f0 <__fprintf_chk@plt>
  416697:	cmp    QWORD PTR [r14+0xa8],0x0
  41669f:	je     416f60 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4166a5:	xor    ebx,ebx
  4166a7:	lea    r12,[rip+0x2db42]        # 4441f0 <_IO_stdin_used@@Base+0x181f0>
  4166ae:	jmp    4166c1 <__flatcc_fb_gen_c_json_parser@@Base+0x1f61>
  4166b0:	add    rbx,0x1
  4166b4:	cmp    rbx,QWORD PTR [r14+0xa8]
  4166bb:	jae    416790 <__flatcc_fb_gen_c_json_parser@@Base+0x2030>
  4166c1:	mov    r13,QWORD PTR [r15+rbx*8]
  4166c5:	test   r13,r13
  4166c8:	je     4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4166ca:	test   BYTE PTR [r13+0x70],0x4
  4166cf:	jne    4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4166d1:	mov    rdi,QWORD PTR [rbp+0x0]
  4166d5:	lea    rdx,[rip+0x2da51]        # 44412d <_IO_stdin_used@@Base+0x1812d>
  4166dc:	xor    eax,eax
  4166de:	mov    esi,0x1
  4166e3:	call   4051f0 <__fprintf_chk@plt>
  4166e8:	movzx  eax,WORD PTR [r13+0x28]
  4166ed:	sub    eax,0x7
  4166f0:	cmp    ax,0x8
  4166f4:	ja     4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4166f6:	movzx  eax,ax
  4166f9:	movsxd rax,DWORD PTR [r12+rax*4]
  4166fd:	add    rax,r12
  416700:	jmp    rax
  416702:	nop    WORD PTR [rax+rax*1+0x0]
  416708:	mov    rsi,QWORD PTR [r13+0x18]
  41670c:	mov    rdx,QWORD PTR [rsp]
  416710:	mov    rdi,QWORD PTR [rsi+0x18]
  416714:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  416719:	mov    rax,QWORD PTR [r13+0x18]
  41671d:	movzx  eax,WORD PTR [rax+0x10]
  416721:	cmp    ax,0x1
  416725:	je     416ce4 <__flatcc_fb_gen_c_json_parser@@Base+0x2584>
  41672b:	jb     416a66 <__flatcc_fb_gen_c_json_parser@@Base+0x2306>
  416731:	cmp    ax,0x3
  416735:	je     416c85 <__flatcc_fb_gen_c_json_parser@@Base+0x2525>
  41673b:	cmp    ax,0x4
  41673f:	jne    4169a3 <__flatcc_fb_gen_c_json_parser@@Base+0x2243>
  416745:	mov    rax,QWORD PTR [r13+0x8]
  416749:	sub    rsp,0x8
  41674d:	mov    rcx,QWORD PTR [r13+0x88]
  416754:	mov    rsi,QWORD PTR [rsp+0x8]
  416759:	lea    rdx,[rip+0x2d228]        # 443988 <_IO_stdin_used@@Base+0x17988>
  416760:	mov    r8,QWORD PTR [rax+0x8]
  416764:	push   rsi
  416765:	push   rsi
  416766:	mov    r9,QWORD PTR [rax]
  416769:	push   r8
  41676b:	mov    rdi,QWORD PTR [rbp+0x0]
  41676f:	xor    eax,eax
  416771:	mov    esi,0x1
  416776:	add    rbx,0x1
  41677a:	call   4051f0 <__fprintf_chk@plt>
  41677f:	add    rsp,0x20
  416783:	cmp    rbx,QWORD PTR [r14+0xa8]
  41678a:	jb     4166c1 <__flatcc_fb_gen_c_json_parser@@Base+0x1f61>
  416790:	mov    rdi,QWORD PTR [rbp+0x0]
  416794:	lea    rdx,[rip+0x2d94f]        # 4440ea <_IO_stdin_used@@Base+0x180ea>
  41679b:	mov    esi,0x1
  4167a0:	xor    eax,eax
  4167a2:	call   4051f0 <__fprintf_chk@plt>
  4167a7:	mov    rcx,QWORD PTR [rsp+0x8]
  4167ac:	mov    rdi,QWORD PTR [rbp+0x0]
  4167b0:	lea    rdx,[rip+0x2cb01]        # 4432b8 <_IO_stdin_used@@Base+0x172b8>
  4167b7:	mov    esi,0x1
  4167bc:	xor    eax,eax
  4167be:	mov    r8,rcx
  4167c1:	call   4051f0 <__fprintf_chk@plt>
  4167c6:	mov    rdi,r15
  4167c9:	call   405040 <free@plt>
  4167ce:	xor    eax,eax
  4167d0:	mov    rcx,QWORD PTR [rsp+0x1e8]
  4167d8:	xor    rcx,QWORD PTR fs:0x28
  4167e1:	jne    416ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x2894>
  4167e7:	add    rsp,0x1f8
  4167ee:	pop    rbx
  4167ef:	pop    rbp
  4167f0:	pop    r12
  4167f2:	pop    r13
  4167f4:	pop    r14
  4167f6:	pop    r15
  4167f8:	ret    
  4167f9:	nop    DWORD PTR [rax+0x0]
  416800:	mov    rsi,QWORD PTR [r13+0x18]
  416804:	mov    rdx,QWORD PTR [rsp]
  416808:	mov    rdi,QWORD PTR [rsi+0x18]
  41680c:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  416811:	mov    rdx,QWORD PTR [r13+0x18]
  416815:	movzx  eax,WORD PTR [rdx+0x10]
  416819:	cmp    ax,0x1
  41681d:	je     416cc1 <__flatcc_fb_gen_c_json_parser@@Base+0x2561>
  416823:	jb     416a43 <__flatcc_fb_gen_c_json_parser@@Base+0x22e3>
  416829:	cmp    ax,0x3
  41682d:	je     416ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x2544>
  416833:	cmp    ax,0x4
  416837:	jne    4169f3 <__flatcc_fb_gen_c_json_parser@@Base+0x2293>
  41683d:	mov    rax,QWORD PTR [r13+0x8]
  416841:	sub    rsp,0x8
  416845:	mov    rcx,QWORD PTR [r13+0x88]
  41684c:	mov    rsi,QWORD PTR [rsp+0x8]
  416851:	lea    rdx,[rip+0x2cf68]        # 4437c0 <_IO_stdin_used@@Base+0x177c0>
  416858:	mov    r8,QWORD PTR [rax+0x8]
  41685c:	push   rsi
  41685d:	push   rsi
  41685e:	mov    r9,QWORD PTR [rax]
  416861:	push   r8
  416863:	jmp    41676b <__flatcc_fb_gen_c_json_parser@@Base+0x200b>
  416868:	nop    DWORD PTR [rax+rax*1+0x0]
  416870:	mov    rax,QWORD PTR [r13+0x8]
  416874:	sub    rsp,0x8
  416878:	mov    rcx,QWORD PTR [r13+0x88]
  41687f:	lea    rdx,[rip+0x2cd1a]        # 4435a0 <_IO_stdin_used@@Base+0x175a0>
  416886:	mov    r8,QWORD PTR [rax+0x8]
  41688a:	mov    r9,QWORD PTR [rax]
  41688d:	push   r8
  41688f:	mov    rdi,QWORD PTR [rbp+0x0]
  416893:	mov    esi,0x1
  416898:	xor    eax,eax
  41689a:	call   4051f0 <__fprintf_chk@plt>
  41689f:	pop    rcx
  4168a0:	pop    rsi
  4168a1:	jmp    4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4168a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168b0:	mov    rax,QWORD PTR [r13+0x8]
  4168b4:	sub    rsp,0x8
  4168b8:	mov    rcx,QWORD PTR [r13+0x88]
  4168bf:	lea    rdx,[rip+0x2cd1a]        # 4435e0 <_IO_stdin_used@@Base+0x175e0>
  4168c6:	mov    r8,QWORD PTR [rax+0x8]
  4168ca:	mov    r9,QWORD PTR [rax]
  4168cd:	push   r8
  4168cf:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  4168d1:	nop    DWORD PTR [rax+0x0]
  4168d8:	cmp    DWORD PTR [r13+0x18],0xb
  4168dd:	ja     416b76 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  4168e3:	mov    eax,DWORD PTR [r13+0x18]
  4168e7:	lea    rdx,[rip+0x2d926]        # 444214 <_IO_stdin_used@@Base+0x18214>
  4168ee:	movsxd rax,DWORD PTR [rdx+rax*4]
  4168f2:	add    rax,rdx
  4168f5:	jmp    rax
  4168f7:	nop    WORD PTR [rax+rax*1+0x0]
  416900:	movzx  eax,WORD PTR [r13+0x70]
  416905:	test   ah,0xc
  416908:	jne    416978 <__flatcc_fb_gen_c_json_parser@@Base+0x2218>
  41690a:	mov    rsi,QWORD PTR [r13+0x90]
  416911:	test   rsi,rsi
  416914:	je     416a89 <__flatcc_fb_gen_c_json_parser@@Base+0x2329>
  41691a:	mov    rdi,QWORD PTR [rsi+0x18]
  41691e:	mov    rdx,QWORD PTR [rsp]
  416922:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  416927:	mov    rax,QWORD PTR [r13+0x90]
  41692e:	mov    rcx,QWORD PTR [r13+0x88]
  416935:	cmp    WORD PTR [rax+0x10],0x0
  41693a:	mov    rax,QWORD PTR [r13+0x8]
  41693e:	mov    r8,QWORD PTR [rax+0x8]
  416942:	jne    416960 <__flatcc_fb_gen_c_json_parser@@Base+0x2200>
  416944:	push   QWORD PTR [rsp]
  416947:	lea    rdx,[rip+0x2cb52]        # 4434a0 <_IO_stdin_used@@Base+0x174a0>
  41694e:	push   r8
  416950:	mov    r9,QWORD PTR [rax]
  416953:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  416958:	nop    DWORD PTR [rax+rax*1+0x0]
  416960:	push   QWORD PTR [rsp]
  416963:	lea    rdx,[rip+0x2cb96]        # 443500 <_IO_stdin_used@@Base+0x17500>
  41696a:	push   r8
  41696c:	mov    r9,QWORD PTR [rax]
  41696f:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  416974:	nop    DWORD PTR [rax+0x0]
  416978:	mov    rdx,QWORD PTR [r13+0x8]
  41697c:	shr    ax,0xa
  416980:	mov    rcx,QWORD PTR [r13+0x88]
  416987:	xor    eax,0x1
  41698a:	and    eax,0x1
  41698d:	mov    r8,QWORD PTR [rdx+0x8]
  416991:	mov    r9,QWORD PTR [rdx]
  416994:	lea    rdx,[rip+0x2cab5]        # 443450 <_IO_stdin_used@@Base+0x17450>
  41699b:	push   rax
  41699c:	push   r8
  41699e:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  4169a3:	mov    rax,QWORD PTR [rip+0x3963e]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4169aa:	lea    rcx,[rip+0x2c29f]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  4169b1:	lea    rdx,[rip+0x1e109]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  4169b8:	lea    r9,[rip+0x2d041]        # 443a00 <_IO_stdin_used@@Base+0x17a00>
  4169bf:	mov    esi,0x1
  4169c4:	mov    r8d,0x21f
  4169ca:	mov    rdi,QWORD PTR [rax]
  4169cd:	xor    eax,eax
  4169cf:	call   4051f0 <__fprintf_chk@plt>
  4169d4:	lea    rcx,[rip+0x2d905]        # 4442e0 <_IO_stdin_used@@Base+0x182e0>
  4169db:	lea    rsi,[rip+0x2c26e]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  4169e2:	lea    rdi,[rip+0x1f120]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4169e9:	mov    edx,0x21f
  4169ee:	call   4050f0 <__assert_fail@plt>
  4169f3:	mov    rax,QWORD PTR [rip+0x395ee]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4169fa:	lea    rcx,[rip+0x2c24f]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416a01:	lea    rdx,[rip+0x1e0b9]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416a08:	lea    r9,[rip+0x2ce21]        # 443830 <_IO_stdin_used@@Base+0x17830>
  416a0f:	mov    esi,0x1
  416a14:	mov    r8d,0x1f8
  416a1a:	mov    rdi,QWORD PTR [rax]
  416a1d:	xor    eax,eax
  416a1f:	call   4051f0 <__fprintf_chk@plt>
  416a24:	lea    rcx,[rip+0x2d8b5]        # 4442e0 <_IO_stdin_used@@Base+0x182e0>
  416a2b:	lea    rsi,[rip+0x2c21e]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416a32:	lea    rdi,[rip+0x1f0d0]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416a39:	mov    edx,0x1f8
  416a3e:	call   4050f0 <__assert_fail@plt>
  416a43:	mov    rax,QWORD PTR [r13+0x8]
  416a47:	mov    rcx,QWORD PTR [r13+0x88]
  416a4e:	lea    rdx,[rip+0x2cd13]        # 443768 <_IO_stdin_used@@Base+0x17768>
  416a55:	mov    r8,QWORD PTR [rax+0x8]
  416a59:	push   QWORD PTR [rsp]
  416a5c:	mov    r9,QWORD PTR [rax]
  416a5f:	push   r8
  416a61:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  416a66:	mov    rax,QWORD PTR [r13+0x8]
  416a6a:	mov    rcx,QWORD PTR [r13+0x88]
  416a71:	lea    rdx,[rip+0x2cdf8]        # 443870 <_IO_stdin_used@@Base+0x17870>
  416a78:	mov    r8,QWORD PTR [rax+0x8]
  416a7c:	push   QWORD PTR [rsp]
  416a7f:	mov    r9,QWORD PTR [rax]
  416a82:	push   r8
  416a84:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  416a89:	cmp    DWORD PTR [r13+0x18],0xb
  416a8e:	ja     416b76 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  416a94:	mov    eax,DWORD PTR [r13+0x18]
  416a98:	lea    rdx,[rip+0x2d7a5]        # 444244 <_IO_stdin_used@@Base+0x18244>
  416a9f:	movsxd rax,DWORD PTR [rdx+rax*4]
  416aa3:	add    rax,rdx
  416aa6:	jmp    rax
  416aa8:	lea    rcx,[rip+0x1e0d9]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  416aaf:	nop
  416ab0:	movzx  eax,WORD PTR [r13+0x58]
  416ab5:	cmp    ax,0x4
  416ab9:	je     416c11 <__flatcc_fb_gen_c_json_parser@@Base+0x24b1>
  416abf:	ja     416bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2470>
  416ac5:	cmp    ax,0x3
  416ac9:	jne    416c35 <__flatcc_fb_gen_c_json_parser@@Base+0x24d5>
  416acf:	mov    rax,QWORD PTR [r13+0x8]
  416ad3:	vmovsd xmm0,QWORD PTR [r13+0x48]
  416ad9:	mov    rdi,QWORD PTR [rbp+0x0]
  416add:	lea    rdx,[rip+0x2c92c]        # 443410 <_IO_stdin_used@@Base+0x17410>
  416ae4:	mov    esi,0x1
  416ae9:	mov    r9,QWORD PTR [rax+0x8]
  416aed:	push   r9
  416aef:	mov    r8,QWORD PTR [r13+0x88]
  416af6:	push   QWORD PTR [rax]
  416af8:	mov    eax,0x1
  416afd:	call   4051f0 <__fprintf_chk@plt>
  416b02:	pop    rdi
  416b03:	pop    r8
  416b05:	jmp    4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  416b0a:	lea    rcx,[rip+0x1e069]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  416b11:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b13:	lea    rcx,[rip+0x1e07b]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  416b1a:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b1c:	lea    rcx,[rip+0x1e05e]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  416b23:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b25:	lea    rcx,[rip+0x1df60]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  416b2c:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b2e:	lea    rcx,[rip+0x1df51]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  416b35:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b3a:	lea    rcx,[rip+0x1e03a]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  416b41:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b46:	lea    rcx,[rip+0x1e035]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  416b4d:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b52:	lea    rcx,[rip+0x1e030]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  416b59:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b5e:	lea    rcx,[rip+0x1e02b]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  416b65:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b6a:	lea    rcx,[rip+0x1e01e]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  416b71:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  416b76:	mov    rax,QWORD PTR [rip+0x3946b]        # 44ffe8 <stderr@GLIBC_2.2.5>
  416b7d:	lea    rcx,[rip+0x1696c]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  416b84:	lea    rdx,[rip+0x1df36]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416b8b:	lea    r9,[rip+0x16926]        # 42d4b8 <_IO_stdin_used@@Base+0x14b8>
  416b92:	mov    esi,0x1
  416b97:	mov    r8d,0x60
  416b9d:	mov    rdi,QWORD PTR [rax]
  416ba0:	xor    eax,eax
  416ba2:	call   4051f0 <__fprintf_chk@plt>
  416ba7:	lea    rcx,[rip+0x2d772]        # 444320 <_IO_stdin_used@@Base+0x18320>
  416bae:	lea    rsi,[rip+0x1693b]        # 42d4f0 <_IO_stdin_used@@Base+0x14f0>
  416bb5:	lea    rdi,[rip+0x1ef4d]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416bbc:	mov    edx,0x60
  416bc1:	call   4050f0 <__assert_fail@plt>
  416bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416bd0:	cmp    ax,0x6
  416bd4:	ja     416c35 <__flatcc_fb_gen_c_json_parser@@Base+0x24d5>
  416bd6:	mov    rax,QWORD PTR [r13+0x8]
  416bda:	sub    rsp,0x8
  416bde:	lea    rdx,[rip+0x2c7ab]        # 443390 <_IO_stdin_used@@Base+0x17390>
  416be5:	mov    r9,QWORD PTR [rax+0x8]
  416be9:	push   QWORD PTR [r13+0x48]
  416bed:	push   r9
  416bef:	mov    r8,QWORD PTR [r13+0x88]
  416bf6:	push   QWORD PTR [rax]
  416bf8:	mov    rdi,QWORD PTR [rbp+0x0]
  416bfc:	mov    esi,0x1
  416c01:	xor    eax,eax
  416c03:	call   4051f0 <__fprintf_chk@plt>
  416c08:	add    rsp,0x20
  416c0c:	jmp    4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  416c11:	mov    rax,QWORD PTR [r13+0x8]
  416c15:	sub    rsp,0x8
  416c19:	lea    rdx,[rip+0x2c7b0]        # 4433d0 <_IO_stdin_used@@Base+0x173d0>
  416c20:	mov    r9,QWORD PTR [rax+0x8]
  416c24:	push   QWORD PTR [r13+0x48]
  416c28:	push   r9
  416c2a:	push   QWORD PTR [rax]
  416c2c:	mov    r8,QWORD PTR [r13+0x88]
  416c33:	jmp    416bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  416c35:	mov    rax,QWORD PTR [rip+0x393ac]        # 44ffe8 <stderr@GLIBC_2.2.5>
  416c3c:	lea    rcx,[rip+0x2c00d]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416c43:	lea    rdx,[rip+0x1de77]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416c4a:	lea    r9,[rip+0x2a847]        # 441498 <_IO_stdin_used@@Base+0x15498>
  416c51:	mov    esi,0x1
  416c56:	mov    r8d,0x196
  416c5c:	mov    rdi,QWORD PTR [rax]
  416c5f:	xor    eax,eax
  416c61:	call   4051f0 <__fprintf_chk@plt>
  416c66:	lea    rcx,[rip+0x2d673]        # 4442e0 <_IO_stdin_used@@Base+0x182e0>
  416c6d:	lea    rsi,[rip+0x2bfdc]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416c74:	lea    rdi,[rip+0x1ee8e]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416c7b:	mov    edx,0x196
  416c80:	call   4050f0 <__assert_fail@plt>
  416c85:	cmp    DWORD PTR [r13+0x18],0xb
  416c8a:	ja     416b76 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  416c90:	mov    eax,DWORD PTR [r13+0x18]
  416c94:	lea    rcx,[rip+0x2d5d9]        # 444274 <_IO_stdin_used@@Base+0x18274>
  416c9b:	movsxd rax,DWORD PTR [rcx+rax*4]
  416c9f:	add    rax,rcx
  416ca2:	jmp    rax
  416ca4:	cmp    DWORD PTR [rdx+0x48],0xb
  416ca8:	ja     416b76 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  416cae:	mov    eax,DWORD PTR [rdx+0x48]
  416cb1:	lea    rdx,[rip+0x2d5ec]        # 4442a4 <_IO_stdin_used@@Base+0x182a4>
  416cb8:	movsxd rax,DWORD PTR [rdx+rax*4]
  416cbc:	add    rax,rdx
  416cbf:	jmp    rax
  416cc1:	mov    rax,QWORD PTR [r13+0x8]
  416cc5:	mov    rcx,QWORD PTR [r13+0x88]
  416ccc:	lea    rdx,[rip+0x2ca3d]        # 443710 <_IO_stdin_used@@Base+0x17710>
  416cd3:	mov    r8,QWORD PTR [rax+0x8]
  416cd7:	push   QWORD PTR [rsp]
  416cda:	mov    r9,QWORD PTR [rax]
  416cdd:	push   r8
  416cdf:	jmp    41688f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  416ce4:	mov    rax,QWORD PTR [r13+0x8]
  416ce8:	sub    rsp,0x8
  416cec:	mov    rcx,QWORD PTR [r13+0x88]
  416cf3:	lea    rdx,[rip+0x2cc2e]        # 443928 <_IO_stdin_used@@Base+0x17928>
  416cfa:	mov    r8,QWORD PTR [rax+0x8]
  416cfe:	push   QWORD PTR [rsp+0x8]
  416d02:	push   QWORD PTR [r13+0x80]
  416d09:	mov    r9,QWORD PTR [rax]
  416d0c:	push   r8
  416d0e:	jmp    41676b <__flatcc_fb_gen_c_json_parser@@Base+0x200b>
  416d13:	lea    rcx,[rip+0x1dd6c]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  416d1a:	movzx  eax,WORD PTR [r13+0x58]
  416d1f:	cmp    ax,0x4
  416d23:	je     416f3a <__flatcc_fb_gen_c_json_parser@@Base+0x27da>
  416d29:	jb     416eea <__flatcc_fb_gen_c_json_parser@@Base+0x278a>
  416d2f:	cmp    ax,0x6
  416d33:	ja     416eea <__flatcc_fb_gen_c_json_parser@@Base+0x278a>
  416d39:	mov    rax,QWORD PTR [r13+0x8]
  416d3d:	lea    rdx,[rip+0x2c8e4]        # 443628 <_IO_stdin_used@@Base+0x17628>
  416d44:	mov    r9,QWORD PTR [rax+0x8]
  416d48:	push   QWORD PTR [rsp]
  416d4b:	push   QWORD PTR [r13+0x48]
  416d4f:	push   r9
  416d51:	push   QWORD PTR [rax]
  416d53:	mov    r8,QWORD PTR [r13+0x88]
  416d5a:	jmp    416bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  416d5f:	lea    rcx,[rip+0x1dd26]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  416d66:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416d68:	lea    rcx,[rip+0x1de21]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  416d6f:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416d71:	lea    rcx,[rip+0x1de11]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  416d78:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416d7a:	lea    rcx,[rip+0x1de01]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  416d81:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416d83:	lea    rcx,[rip+0x1ddf1]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  416d8a:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416d8c:	lea    rcx,[rip+0x1de02]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  416d93:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416d95:	lea    rcx,[rip+0x1ddf3]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  416d9c:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416da1:	lea    rcx,[rip+0x1dde0]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  416da8:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416dad:	lea    rcx,[rip+0x1ddcd]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  416db4:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416db9:	lea    rcx,[rip+0x1ddba]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  416dc0:	jmp    416d1a <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  416dc5:	lea    rcx,[rip+0x1dcba]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  416dcc:	mov    rax,QWORD PTR [r13+0x8]
  416dd0:	lea    rdx,[rip+0x2caf1]        # 4438c8 <_IO_stdin_used@@Base+0x178c8>
  416dd7:	mov    r9,QWORD PTR [rax+0x8]
  416ddb:	push   QWORD PTR [rsp]
  416dde:	push   QWORD PTR [r14+0xb8]
  416de5:	push   r9
  416de7:	push   QWORD PTR [rax]
  416de9:	mov    r8,QWORD PTR [r13+0x88]
  416df0:	jmp    416bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  416df5:	lea    rcx,[rip+0x1dc90]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  416dfc:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416dfe:	lea    rcx,[rip+0x1dd8b]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  416e05:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e07:	lea    rcx,[rip+0x1dd7b]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  416e0e:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e10:	lea    rcx,[rip+0x1dd6b]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  416e17:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e19:	lea    rcx,[rip+0x1dd5b]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  416e20:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e22:	lea    rcx,[rip+0x1dd6c]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  416e29:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e2b:	lea    rcx,[rip+0x1dd5d]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  416e32:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e34:	lea    rcx,[rip+0x1dd4d]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  416e3b:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e3d:	lea    rcx,[rip+0x1dd3d]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  416e44:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e46:	lea    rcx,[rip+0x1dd2d]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  416e4d:	jmp    416dcc <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  416e52:	lea    rcx,[rip+0x1dc2d]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  416e59:	mov    rax,QWORD PTR [r13+0x8]
  416e5d:	mov    rdi,QWORD PTR [rbp+0x0]
  416e61:	lea    rdx,[rip+0x2c6f8]        # 443560 <_IO_stdin_used@@Base+0x17560>
  416e68:	mov    esi,0x1
  416e6d:	mov    r9,QWORD PTR [rax+0x8]
  416e71:	push   r9
  416e73:	mov    r8,QWORD PTR [r13+0x88]
  416e7a:	push   QWORD PTR [rax]
  416e7c:	xor    eax,eax
  416e7e:	call   4051f0 <__fprintf_chk@plt>
  416e83:	pop    rax
  416e84:	pop    rdx
  416e85:	jmp    4166b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  416e8a:	lea    rcx,[rip+0x1dbfb]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  416e91:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416e93:	lea    rcx,[rip+0x1dcf6]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  416e9a:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416e9c:	lea    rcx,[rip+0x1dce6]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  416ea3:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416ea5:	lea    rcx,[rip+0x1dcd6]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  416eac:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416eae:	lea    rcx,[rip+0x1dcc6]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  416eb5:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416eb7:	lea    rcx,[rip+0x1dcd7]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  416ebe:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416ec0:	lea    rcx,[rip+0x1dcc8]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  416ec7:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416ec9:	lea    rcx,[rip+0x1dcb8]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  416ed0:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416ed2:	lea    rcx,[rip+0x1dca8]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  416ed9:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416ede:	lea    rcx,[rip+0x1dc95]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  416ee5:	jmp    416e59 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  416eea:	mov    rax,QWORD PTR [rip+0x390f7]        # 44ffe8 <stderr@GLIBC_2.2.5>
  416ef1:	lea    rcx,[rip+0x2bd58]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416ef8:	lea    rdx,[rip+0x1dbc2]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416eff:	lea    r9,[rip+0x2c7d2]        # 4436d8 <_IO_stdin_used@@Base+0x176d8>
  416f06:	mov    esi,0x1
  416f0b:	mov    r8d,0x1e3
  416f11:	mov    rdi,QWORD PTR [rax]
  416f14:	xor    eax,eax
  416f16:	call   4051f0 <__fprintf_chk@plt>
  416f1b:	lea    rcx,[rip+0x2d3be]        # 4442e0 <_IO_stdin_used@@Base+0x182e0>
  416f22:	lea    rsi,[rip+0x2bd27]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416f29:	lea    rdi,[rip+0x1ebd9]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416f30:	mov    edx,0x1e3
  416f35:	call   4050f0 <__assert_fail@plt>
  416f3a:	mov    rax,QWORD PTR [r13+0x8]
  416f3e:	lea    rdx,[rip+0x2c73b]        # 443680 <_IO_stdin_used@@Base+0x17680>
  416f45:	mov    r9,QWORD PTR [rax+0x8]
  416f49:	push   QWORD PTR [rsp]
  416f4c:	push   QWORD PTR [r13+0x48]
  416f50:	push   r9
  416f52:	push   QWORD PTR [rax]
  416f54:	mov    r8,QWORD PTR [r13+0x88]
  416f5b:	jmp    416bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  416f60:	mov    rdi,QWORD PTR [rbp+0x0]
  416f64:	lea    rdx,[rip+0x2d17f]        # 4440ea <_IO_stdin_used@@Base+0x180ea>
  416f6b:	mov    esi,0x1
  416f70:	xor    eax,eax
  416f72:	call   4051f0 <__fprintf_chk@plt>
  416f77:	mov    rcx,QWORD PTR [rsp+0x8]
  416f7c:	mov    rdi,QWORD PTR [rbp+0x0]
  416f80:	lea    rdx,[rip+0x2c331]        # 4432b8 <_IO_stdin_used@@Base+0x172b8>
  416f87:	xor    eax,eax
  416f89:	mov    esi,0x1
  416f8e:	mov    r8,rcx
  416f91:	call   4051f0 <__fprintf_chk@plt>
  416f96:	test   r15,r15
  416f99:	je     4167ce <__flatcc_fb_gen_c_json_parser@@Base+0x206e>
  416f9f:	jmp    4167c6 <__flatcc_fb_gen_c_json_parser@@Base+0x2066>
  416fa4:	mov    rax,QWORD PTR [rip+0x3903d]        # 44ffe8 <stderr@GLIBC_2.2.5>
  416fab:	lea    rcx,[rip+0x2bc9e]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416fb2:	lea    rdx,[rip+0x1db08]        # 434ac1 <_IO_stdin_used@@Base+0x8ac1>
  416fb9:	lea    r9,[rip+0x2c258]        # 443218 <_IO_stdin_used@@Base+0x17218>
  416fc0:	mov    esi,0x1
  416fc5:	mov    r8d,0x169
  416fcb:	mov    rdi,QWORD PTR [rax]
  416fce:	xor    eax,eax
  416fd0:	call   4051f0 <__fprintf_chk@plt>
  416fd5:	lea    rcx,[rip+0x2d304]        # 4442e0 <_IO_stdin_used@@Base+0x182e0>
  416fdc:	lea    rsi,[rip+0x2bc6d]        # 442c50 <_IO_stdin_used@@Base+0x16c50>
  416fe3:	lea    rdi,[rip+0x1eb1f]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  416fea:	mov    edx,0x169
  416fef:	call   4050f0 <__assert_fail@plt>
  416ff4:	call   4050d0 <__stack_chk_fail@plt>
  416ff9:	nop    DWORD PTR [rax+0x0]

0000000000417000 <__flatcc_fb_gen_c_json_printer@@Base>:
  417000:	push   r15
  417002:	push   r14
  417004:	lea    rdx,[rip+0x2ca3d]        # 443a48 <_IO_stdin_used@@Base+0x17a48>
  41700b:	push   r13
  41700d:	push   r12
  41700f:	mov    esi,0x1
  417014:	push   rbp
  417015:	push   rbx
  417016:	mov    rbx,rdi
  417019:	sub    rsp,0xf8
  417020:	mov    rax,QWORD PTR fs:0x28
  417029:	mov    QWORD PTR [rsp+0xe8],rax
  417031:	xor    eax,eax
  417033:	mov    rax,QWORD PTR [rdi+0xd8]
  41703a:	mov    rdi,QWORD PTR [rdi+0xd0]
  417041:	mov    rcx,QWORD PTR [rax+0x118]
  417048:	xor    eax,eax
  41704a:	mov    r8,rcx
  41704d:	call   4051f0 <__fprintf_chk@plt>
  417052:	mov    rdi,QWORD PTR [rbx+0xd0]
  417059:	lea    rdx,[rip+0x175b8]        # 42e618 <_IO_stdin_used@@Base+0x2618>
  417060:	mov    esi,0x1
  417065:	xor    eax,eax
  417067:	call   4051f0 <__fprintf_chk@plt>
  41706c:	mov    rdi,QWORD PTR [rbx+0xd0]
  417073:	lea    rdx,[rip+0x2ca06]        # 443a80 <_IO_stdin_used@@Base+0x17a80>
  41707a:	mov    esi,0x1
  41707f:	xor    eax,eax
  417081:	call   4051f0 <__fprintf_chk@plt>
  417086:	lea    rsi,[rip+0x161bf]        # 42d24c <_IO_stdin_used@@Base+0x124c>
  41708d:	lea    rdx,[rip+0x2d09f]        # 444133 <_IO_stdin_used@@Base+0x18133>
  417094:	mov    rdi,rbx
  417097:	call   4065d0 <__flatcc_fb_gen_c_includes@@Base>
  41709c:	mov    rax,QWORD PTR [rbx+0xe0]
  4170a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  4170aa:	mov    esi,DWORD PTR [rax+0xac]
  4170b0:	test   esi,esi
  4170b2:	je     4170ce <__flatcc_fb_gen_c_json_printer@@Base+0xce>
  4170b4:	lea    rdx,[rip+0x17675]        # 42e730 <_IO_stdin_used@@Base+0x2730>
  4170bb:	mov    esi,0x1
  4170c0:	xor    eax,eax
  4170c2:	call   4051f0 <__fprintf_chk@plt>
  4170c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4170ce:	lea    rdx,[rip+0x2d018]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4170d5:	mov    esi,0x1
  4170da:	xor    eax,eax
  4170dc:	mov    rbp,rsp
  4170df:	call   4051f0 <__fprintf_chk@plt>
  4170e4:	mov    rdx,QWORD PTR [rbx+0xd8]
  4170eb:	xor    eax,eax
  4170ed:	mov    ecx,0x1d
  4170f2:	mov    rdi,rsp
  4170f5:	mov    rsi,QWORD PTR [rdx+0x58]
  4170f9:	rep stos QWORD PTR es:[rdi],rax
  4170fc:	test   rsi,rsi
  4170ff:	je     41710c <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
  417101:	cmp    WORD PTR [rsi+0x10],0x1
  417106:	jbe    417519 <__flatcc_fb_gen_c_json_printer@@Base+0x519>
  41710c:	mov    r12,QWORD PTR [rdx+0x40]
  417110:	lea    r13,[rip+0x2cca1]        # 443db8 <_IO_stdin_used@@Base+0x17db8>
  417117:	test   r12,r12
  41711a:	jne    41716d <__flatcc_fb_gen_c_json_printer@@Base+0x16d>
  41711c:	jmp    4171af <__flatcc_fb_gen_c_json_printer@@Base+0x1af>
  417121:	nop    DWORD PTR [rax+0x0]
  417128:	jb     417440 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
  41712e:	cmp    ax,0x4
  417132:	jne    417164 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
  417134:	mov    rdi,QWORD PTR [r12+0x18]
  417139:	mov    rdx,rbp
  41713c:	mov    rsi,r12
  41713f:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  417144:	mov    rdi,QWORD PTR [rbx+0xd0]
  41714b:	lea    rdx,[rip+0x2cb9e]        # 443cf0 <_IO_stdin_used@@Base+0x17cf0>
  417152:	mov    r8,rbp
  417155:	mov    rcx,rbp
  417158:	mov    esi,0x1
  41715d:	xor    eax,eax
  41715f:	call   4051f0 <__fprintf_chk@plt>
  417164:	mov    r12,QWORD PTR [r12]
  417168:	test   r12,r12
  41716b:	je     4171af <__flatcc_fb_gen_c_json_printer@@Base+0x1af>
  41716d:	movzx  eax,WORD PTR [r12+0x10]
  417173:	cmp    ax,0x1
  417177:	jne    417128 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
  417179:	mov    rdi,QWORD PTR [r12+0x18]
  41717e:	mov    rsi,r12
  417181:	mov    rdx,rbp
  417184:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  417189:	mov    rdi,QWORD PTR [rbx+0xd0]
  417190:	lea    rdx,[rip+0x2cc91]        # 443e28 <_IO_stdin_used@@Base+0x17e28>
  417197:	xor    eax,eax
  417199:	mov    rcx,rbp
  41719c:	mov    esi,0x1
  4171a1:	call   4051f0 <__fprintf_chk@plt>
  4171a6:	mov    r12,QWORD PTR [r12]
  4171aa:	test   r12,r12
  4171ad:	jne    41716d <__flatcc_fb_gen_c_json_printer@@Base+0x16d>
  4171af:	mov    rdi,QWORD PTR [rbx+0xd0]
  4171b6:	lea    rdx,[rip+0x2cf30]        # 4440ed <_IO_stdin_used@@Base+0x180ed>
  4171bd:	xor    eax,eax
  4171bf:	mov    esi,0x1
  4171c4:	call   4051f0 <__fprintf_chk@plt>
  4171c9:	mov    rax,QWORD PTR [rbx+0xd8]
  4171d0:	mov    r12,QWORD PTR [rax+0x40]
  4171d4:	test   r12,r12
  4171d7:	jne    4171e9 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9>
  4171d9:	jmp    4173ad <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  4171de:	xchg   ax,ax
  4171e0:	mov    r12,QWORD PTR [r12]
  4171e4:	test   r12,r12
  4171e7:	je     417206 <__flatcc_fb_gen_c_json_printer@@Base+0x206>
  4171e9:	cmp    WORD PTR [r12+0x10],0x3
  4171f0:	jne    4171e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0>
  4171f2:	mov    rsi,r12
  4171f5:	mov    rdi,rbx
  4171f8:	call   415ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x1760>
  4171fd:	mov    r12,QWORD PTR [r12]
  417201:	test   r12,r12
  417204:	jne    4171e9 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9>
  417206:	mov    rax,QWORD PTR [rbx+0xd8]
  41720d:	mov    r14,QWORD PTR [rax+0x40]
  417211:	test   r14,r14
  417214:	je     4173ad <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  41721a:	lea    r15,[rbx+0xd0]
  417221:	lea    r12,[rip+0x2cd18]        # 443f40 <_IO_stdin_used@@Base+0x17f40>
  417228:	jmp    41723c <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
  41722a:	nop    WORD PTR [rax+rax*1+0x0]
  417230:	mov    r14,QWORD PTR [r14]
  417233:	test   r14,r14
  417236:	je     417322 <__flatcc_fb_gen_c_json_printer@@Base+0x322>
  41723c:	cmp    WORD PTR [r14+0x10],0x4
  417242:	jne    417230 <__flatcc_fb_gen_c_json_printer@@Base+0x230>
  417244:	xor    eax,eax
  417246:	mov    ecx,0x1d
  41724b:	mov    rdi,rbp
  41724e:	rep stos QWORD PTR es:[rdi],rax
  417251:	mov    rdx,rbp
  417254:	mov    rsi,r14
  417257:	mov    rdi,QWORD PTR [r14+0x18]
  41725b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  417260:	mov    rdi,QWORD PTR [rbx+0xd0]
  417267:	lea    rdx,[rip+0x2cc0a]        # 443e78 <_IO_stdin_used@@Base+0x17e78>
  41726e:	xor    eax,eax
  417270:	mov    rcx,rbp
  417273:	mov    esi,0x1
  417278:	call   4051f0 <__fprintf_chk@plt>
  41727d:	mov    r13,QWORD PTR [r14+0x28]
  417281:	test   r13,r13
  417284:	jne    417299 <__flatcc_fb_gen_c_json_printer@@Base+0x299>
  417286:	jmp    4172d7 <__flatcc_fb_gen_c_json_printer@@Base+0x2d7>
  417288:	nop    DWORD PTR [rax+rax*1+0x0]
  417290:	mov    r13,QWORD PTR [r13+0x0]
  417294:	test   r13,r13
  417297:	je     4172d7 <__flatcc_fb_gen_c_json_printer@@Base+0x2d7>
  417299:	cmp    WORD PTR [r13+0x28],0x0
  41729f:	je     417290 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  4172a1:	mov    rax,QWORD PTR [r13+0x8]
  4172a5:	sub    rsp,0x8
  4172a9:	mov    rcx,QWORD PTR [r13+0x48]
  4172ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  4172b4:	mov    rdx,r12
  4172b7:	mov    esi,0x1
  4172bc:	mov    r8,QWORD PTR [rax+0x8]
  4172c0:	mov    r9,QWORD PTR [rax]
  4172c3:	xor    eax,eax
  4172c5:	push   r8
  4172c7:	call   4051f0 <__fprintf_chk@plt>
  4172cc:	mov    r13,QWORD PTR [r13+0x0]
  4172d0:	pop    rdx
  4172d1:	pop    rcx
  4172d2:	test   r13,r13
  4172d5:	jne    417299 <__flatcc_fb_gen_c_json_printer@@Base+0x299>
  4172d7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4172de:	lea    rdx,[rip+0x2cc0b]        # 443ef0 <_IO_stdin_used@@Base+0x17ef0>
  4172e5:	mov    esi,0x1
  4172ea:	xor    eax,eax
  4172ec:	call   4051f0 <__fprintf_chk@plt>
  4172f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4172f8:	lea    rdx,[rip+0x2cde6]        # 4440e5 <_IO_stdin_used@@Base+0x180e5>
  4172ff:	mov    esi,0x1
  417304:	xor    eax,eax
  417306:	call   4051f0 <__fprintf_chk@plt>
  41730b:	mov    rsi,r14
  41730e:	mov    rdi,r15
  417311:	call   4158c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
  417316:	mov    r14,QWORD PTR [r14]
  417319:	test   r14,r14
  41731c:	jne    41723c <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
  417322:	mov    rax,QWORD PTR [rbx+0xd8]
  417329:	mov    r12,QWORD PTR [rax+0x40]
  41732d:	test   r12,r12
  417330:	je     4173ad <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  417332:	lea    r13,[rbx+0xd0]
  417339:	jmp    417349 <__flatcc_fb_gen_c_json_printer@@Base+0x349>
  41733b:	nop    DWORD PTR [rax+rax*1+0x0]
  417340:	mov    r12,QWORD PTR [r12]
  417344:	test   r12,r12
  417347:	je     417366 <__flatcc_fb_gen_c_json_printer@@Base+0x366>
  417349:	cmp    WORD PTR [r12+0x10],0x1
  417350:	jne    417340 <__flatcc_fb_gen_c_json_printer@@Base+0x340>
  417352:	mov    rsi,r12
  417355:	mov    rdi,r13
  417358:	call   415b20 <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
  41735d:	mov    r12,QWORD PTR [r12]
  417361:	test   r12,r12
  417364:	jne    417349 <__flatcc_fb_gen_c_json_printer@@Base+0x349>
  417366:	mov    rax,QWORD PTR [rbx+0xd8]
  41736d:	mov    r12,QWORD PTR [rax+0x40]
  417371:	test   r12,r12
  417374:	je     4173ad <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  417376:	lea    r13,[rbx+0xd0]
  41737d:	jmp    417389 <__flatcc_fb_gen_c_json_printer@@Base+0x389>
  41737f:	nop
  417380:	mov    r12,QWORD PTR [r12]
  417384:	test   r12,r12
  417387:	je     4173a6 <__flatcc_fb_gen_c_json_printer@@Base+0x3a6>
  417389:	cmp    WORD PTR [r12+0x10],0x0
  417390:	jne    417380 <__flatcc_fb_gen_c_json_printer@@Base+0x380>
  417392:	mov    rsi,r12
  417395:	mov    rdi,r13
  417398:	call   4165d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e70>
  41739d:	mov    r12,QWORD PTR [r12]
  4173a1:	test   r12,r12
  4173a4:	jne    417389 <__flatcc_fb_gen_c_json_printer@@Base+0x389>
  4173a6:	mov    rax,QWORD PTR [rbx+0xd8]
  4173ad:	mov    rsi,QWORD PTR [rax+0x58]
  4173b1:	test   rsi,rsi
  4173b4:	je     4173c1 <__flatcc_fb_gen_c_json_printer@@Base+0x3c1>
  4173b6:	cmp    WORD PTR [rsi+0x10],0x1
  4173bb:	jbe    417470 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
  4173c1:	mov    rax,QWORD PTR [rbx+0xe0]
  4173c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4173cf:	mov    eax,DWORD PTR [rax+0xac]
  4173d5:	test   eax,eax
  4173d7:	je     4173f3 <__flatcc_fb_gen_c_json_printer@@Base+0x3f3>
  4173d9:	lea    rdx,[rip+0x1d200]        # 4345e0 <_IO_stdin_used@@Base+0x85e0>
  4173e0:	mov    esi,0x1
  4173e5:	xor    eax,eax
  4173e7:	call   4051f0 <__fprintf_chk@plt>
  4173ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  4173f3:	mov    rax,QWORD PTR [rbx+0xd8]
  4173fa:	lea    rdx,[rip+0x2cca7]        # 4440a8 <_IO_stdin_used@@Base+0x180a8>
  417401:	mov    esi,0x1
  417406:	mov    rcx,QWORD PTR [rax+0x118]
  41740d:	xor    eax,eax
  41740f:	call   4051f0 <__fprintf_chk@plt>
  417414:	xor    eax,eax
  417416:	mov    rdx,QWORD PTR [rsp+0xe8]
  41741e:	xor    rdx,QWORD PTR fs:0x28
  417427:	jne    41758b <__flatcc_fb_gen_c_json_printer@@Base+0x58b>
  41742d:	add    rsp,0xf8
  417434:	pop    rbx
  417435:	pop    rbp
  417436:	pop    r12
  417438:	pop    r13
  41743a:	pop    r14
  41743c:	pop    r15
  41743e:	ret    
  41743f:	nop
  417440:	mov    rdi,QWORD PTR [r12+0x18]
  417445:	mov    rdx,rbp
  417448:	mov    rsi,r12
  41744b:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  417450:	mov    rdi,QWORD PTR [rbx+0xd0]
  417457:	mov    rcx,rbp
  41745a:	mov    rdx,r13
  41745d:	mov    esi,0x1
  417462:	xor    eax,eax
  417464:	call   4051f0 <__fprintf_chk@plt>
  417469:	jmp    417164 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
  41746e:	xchg   ax,ax
  417470:	xor    eax,eax
  417472:	mov    ecx,0x1d
  417477:	mov    rdi,rbp
  41747a:	rep stos QWORD PTR es:[rdi],rax
  41747d:	mov    rdx,rbp
  417480:	mov    rdi,QWORD PTR [rsi+0x18]
  417484:	call   406830 <__flatcc_fb_scoped_symbol_name@@Base>
  417489:	mov    rax,QWORD PTR [rbx+0xd8]
  417490:	mov    rdi,QWORD PTR [rbx+0xd0]
  417497:	lea    rdx,[rip+0x2cafa]        # 443f98 <_IO_stdin_used@@Base+0x17f98>
  41749e:	mov    esi,0x1
  4174a3:	mov    rcx,QWORD PTR [rax+0x110]
  4174aa:	xor    eax,eax
  4174ac:	call   4051f0 <__fprintf_chk@plt>
  4174b1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4174b8:	lea    rdx,[rip+0x2cb31]        # 443ff0 <_IO_stdin_used@@Base+0x17ff0>
  4174bf:	xor    eax,eax
  4174c1:	mov    rcx,rbp
  4174c4:	mov    esi,0x1
  4174c9:	call   4051f0 <__fprintf_chk@plt>
  4174ce:	mov    rax,QWORD PTR [rbx+0xd8]
  4174d5:	cmp    WORD PTR [rax+0x20],0x2
  4174da:	je     417565 <__flatcc_fb_gen_c_json_printer@@Base+0x565>
  4174e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4174e7:	lea    rdx,[rip+0x2cc5f]        # 44414d <_IO_stdin_used@@Base+0x1814d>
  4174ee:	mov    esi,0x1
  4174f3:	xor    eax,eax
  4174f5:	call   4051f0 <__fprintf_chk@plt>
  4174fa:	mov    rdi,QWORD PTR [rbx+0xd0]
  417501:	lea    rdx,[rip+0x2cbe3]        # 4440eb <_IO_stdin_used@@Base+0x180eb>
  417508:	mov    esi,0x1
  41750d:	xor    eax,eax
  41750f:	call   4051f0 <__fprintf_chk@plt>
  417514:	jmp    4173c1 <__flatcc_fb_gen_c_json_printer@@Base+0x3c1>
  417519:	mov    rdi,QWORD PTR [rbx+0xd0]
  417520:	lea    rdx,[rip+0x2c589]        # 443ab0 <_IO_stdin_used@@Base+0x17ab0>
  417527:	mov    esi,0x1
  41752c:	call   4051f0 <__fprintf_chk@plt>
  417531:	mov    rax,QWORD PTR [rbx+0xd8]
  417538:	mov    rdi,QWORD PTR [rbx+0xd0]
  41753f:	lea    rdx,[rip+0x2c752]        # 443c98 <_IO_stdin_used@@Base+0x17c98>
  417546:	mov    esi,0x1
  41754b:	mov    rcx,QWORD PTR [rax+0x110]
  417552:	xor    eax,eax
  417554:	call   4051f0 <__fprintf_chk@plt>
  417559:	mov    rdx,QWORD PTR [rbx+0xd8]
  417560:	jmp    41710c <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
  417565:	mov    ecx,DWORD PTR [rax+0x18]
  417568:	mov    r8,QWORD PTR [rax+0x10]
  41756c:	lea    rdx,[rip+0x2cbd0]        # 444143 <_IO_stdin_used@@Base+0x18143>
  417573:	mov    rdi,QWORD PTR [rbx+0xd0]
  41757a:	mov    esi,0x1
  41757f:	xor    eax,eax
  417581:	call   4051f0 <__fprintf_chk@plt>
  417586:	jmp    4174fa <__flatcc_fb_gen_c_json_printer@@Base+0x4fa>
  41758b:	call   4050d0 <__stack_chk_fail@plt>
  417590:	mov    rdx,rdi
  417593:	lea    rdi,[rsi+0x8]
  417597:	lea    rsi,[rip+0xe2]        # 417680 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  41759e:	jmp    41a890 <fb_symbol_table_visit@@Base>
  4175a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4175ae:	xchg   ax,ax
  4175b0:	mov    rdx,rdi
  4175b3:	lea    rdi,[rsi+0x8]
  4175b7:	lea    rsi,[rip+0x12]        # 4175d0 <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
  4175be:	jmp    41a890 <fb_symbol_table_visit@@Base>
  4175c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4175ce:	xchg   ax,ax
  4175d0:	cmp    WORD PTR [rsi+0x10],0x4
  4175d5:	jbe    4175e0 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  4175d7:	ret    
  4175d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4175e0:	push   rbp
  4175e1:	push   rbx
  4175e2:	mov    rbp,rsi
  4175e5:	mov    rbx,rdi
  4175e8:	sub    rsp,0x8
  4175ec:	mov    rax,QWORD PTR [rdi+0x48]
  4175f0:	mov    rsi,QWORD PTR [rsi+0x20]
  4175f4:	lea    rdi,[rax+0x128]
  4175fb:	call   41a0d0 <ptr_set_find_item@@Base>
  417600:	test   rax,rax
  417603:	je     417661 <__flatcc_fb_gen_c_json_printer@@Base+0x661>
  417605:	mov    eax,DWORD PTR [rbx]
  417607:	xor    edx,edx
  417609:	test   eax,eax
  41760b:	je     417635 <__flatcc_fb_gen_c_json_printer@@Base+0x635>
  41760d:	mov    rax,QWORD PTR [rbp+0x18]
  417611:	xor    edx,edx
  417613:	mov    rax,QWORD PTR [rax]
  417616:	test   rax,rax
  417619:	je     417635 <__flatcc_fb_gen_c_json_printer@@Base+0x635>
  41761b:	nop    DWORD PTR [rax+rax*1+0x0]
  417620:	mov    rcx,QWORD PTR [rax+0x8]
  417624:	mov    rax,QWORD PTR [rax]
  417627:	mov    rcx,QWORD PTR [rcx+0x8]
  41762b:	test   rax,rax
  41762e:	lea    rdx,[rdx+rcx*1+0x1]
  417633:	jne    417620 <__flatcc_fb_gen_c_json_printer@@Base+0x620>
  417635:	mov    rcx,QWORD PTR [rbp+0x8]
  417639:	mov    rax,QWORD PTR [rbx+0x10]
  41763d:	add    rax,QWORD PTR [rcx+0x8]
  417641:	lea    rax,[rdx+rax*1+0x1]
  417646:	mov    QWORD PTR [rbx+0x10],rax
  41764a:	movzx  eax,WORD PTR [rbp+0x10]
  41764e:	cmp    ax,0x1
  417652:	jbe    417670 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
  417654:	sub    eax,0x3
  417657:	cmp    ax,0x1
  41765b:	ja     417661 <__flatcc_fb_gen_c_json_printer@@Base+0x661>
  41765d:	add    DWORD PTR [rbx+0x8],0x1
  417661:	add    rsp,0x8
  417665:	pop    rbx
  417666:	pop    rbp
  417667:	ret    
  417668:	nop    DWORD PTR [rax+rax*1+0x0]
  417670:	add    DWORD PTR [rbx+0x4],0x1
  417674:	jmp    417661 <__flatcc_fb_gen_c_json_printer@@Base+0x661>
  417676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417680:	cmp    WORD PTR [rsi+0x10],0x4
  417685:	jbe    417690 <__flatcc_fb_gen_c_json_printer@@Base+0x690>
  417687:	ret    
  417688:	nop    DWORD PTR [rax+rax*1+0x0]
  417690:	push   r14
  417692:	push   r13
  417694:	mov    r13,rsi
  417697:	push   r12
  417699:	push   rbp
  41769a:	mov    r12,rdi
  41769d:	push   rbx
  41769e:	mov    rax,QWORD PTR [rdi+0x48]
  4176a2:	mov    rsi,QWORD PTR [rsi+0x20]
  4176a6:	lea    rdi,[rax+0x128]
  4176ad:	call   41a0d0 <ptr_set_find_item@@Base>
  4176b2:	test   rax,rax
  4176b5:	je     41775a <__flatcc_fb_gen_c_json_printer@@Base+0x75a>
  4176bb:	mov    eax,DWORD PTR [r12]
  4176bf:	mov    r14,QWORD PTR [r12+0x40]
  4176c4:	test   eax,eax
  4176c6:	mov    rcx,r14
  4176c9:	je     417709 <__flatcc_fb_gen_c_json_printer@@Base+0x709>
  4176cb:	mov    rax,QWORD PTR [r13+0x18]
  4176cf:	mov    rcx,r14
  4176d2:	mov    rbp,QWORD PTR [rax]
  4176d5:	test   rbp,rbp
  4176d8:	je     417709 <__flatcc_fb_gen_c_json_printer@@Base+0x709>
  4176da:	nop    WORD PTR [rax+rax*1+0x0]
  4176e0:	mov    rax,QWORD PTR [rbp+0x8]
  4176e4:	mov    rdi,rcx
  4176e7:	movsxd rbx,DWORD PTR [rax+0x8]
  4176eb:	mov    rsi,QWORD PTR [rax]
  4176ee:	mov    rdx,rbx
  4176f1:	call   405160 <memcpy@plt>
  4176f6:	add    rbx,rax
  4176f9:	mov    BYTE PTR [rbx],0x2e
  4176fc:	mov    rbp,QWORD PTR [rbp+0x0]
  417700:	lea    rcx,[rbx+0x1]
  417704:	test   rbp,rbp
  417707:	jne    4176e0 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
  417709:	mov    rax,QWORD PTR [r13+0x8]
  41770d:	mov    rdi,rcx
  417710:	movsxd rbx,DWORD PTR [rax+0x8]
  417714:	mov    rsi,QWORD PTR [rax]
  417717:	mov    rdx,rbx
  41771a:	call   405160 <memcpy@plt>
  41771f:	mov    rcx,rax
  417722:	add    rcx,rbx
  417725:	mov    BYTE PTR [rcx],0x0
  417728:	movzx  eax,WORD PTR [r13+0x10]
  41772d:	add    rcx,0x1
  417731:	mov    QWORD PTR [r12+0x40],rcx
  417736:	cmp    ax,0x1
  41773a:	jbe    417768 <__flatcc_fb_gen_c_json_printer@@Base+0x768>
  41773c:	sub    eax,0x3
  41773f:	cmp    ax,0x1
  417743:	ja     41775a <__flatcc_fb_gen_c_json_printer@@Base+0x75a>
  417745:	mov    rax,QWORD PTR [r12+0x38]
  41774a:	mov    QWORD PTR [rax],r13
  41774d:	mov    QWORD PTR [rax+0x8],r14
  417751:	add    rax,0x10
  417755:	mov    QWORD PTR [r12+0x38],rax
  41775a:	pop    rbx
  41775b:	pop    rbp
  41775c:	pop    r12
  41775e:	pop    r13
  417760:	pop    r14
  417762:	ret    
  417763:	nop    DWORD PTR [rax+rax*1+0x0]
  417768:	mov    rax,QWORD PTR [r12+0x30]
  41776d:	mov    QWORD PTR [rax],r13
  417770:	mov    QWORD PTR [rax+0x8],r14
  417774:	add    rax,0x10
  417778:	mov    QWORD PTR [r12+0x30],rax
  41777d:	jmp    41775a <__flatcc_fb_gen_c_json_printer@@Base+0x75a>
  41777f:	nop
  417780:	push   rbx
  417781:	mov    rbx,rdi
  417784:	mov    rdi,QWORD PTR [rdi+0x18]
  417788:	test   rdi,rdi
  41778b:	je     417792 <__flatcc_fb_gen_c_json_printer@@Base+0x792>
  41778d:	call   405040 <free@plt>
  417792:	mov    rdi,QWORD PTR [rbx+0x20]
  417796:	test   rdi,rdi
  417799:	je     4177a0 <__flatcc_fb_gen_c_json_printer@@Base+0x7a0>
  41779b:	call   405040 <free@plt>
  4177a0:	mov    rdi,QWORD PTR [rbx+0x28]
  4177a4:	test   rdi,rdi
  4177a7:	je     4177ae <__flatcc_fb_gen_c_json_printer@@Base+0x7ae>
  4177a9:	call   405040 <free@plt>
  4177ae:	mov    rdi,rbx
  4177b1:	mov    ecx,0xa
  4177b6:	xor    eax,eax
  4177b8:	rep stos QWORD PTR es:[rdi],rax
  4177bb:	pop    rbx
  4177bc:	ret    
  4177bd:	nop    DWORD PTR [rax]
  4177c0:	push   rbp
  4177c1:	push   rbx
  4177c2:	movsxd rsi,esi
  4177c5:	lea    rcx,[rip+0x44]        # 417810 <__flatcc_fb_gen_c_json_printer@@Base+0x810>
  4177cc:	mov    rbp,rsi
  4177cf:	mov    edx,0x10
  4177d4:	sub    rsp,0x8
  4177d8:	mov    rbx,rdi
  4177db:	call   405080 <qsort@plt>
  4177e0:	test   ebp,ebp
  4177e2:	jle    417806 <__flatcc_fb_gen_c_json_printer@@Base+0x806>
  4177e4:	mov    rdi,rbx
  4177e7:	xor    eax,eax
  4177e9:	nop    DWORD PTR [rax+0x0]
  4177f0:	mov    rdx,QWORD PTR [rdi]
  4177f3:	add    rdi,0x10
  4177f7:	mov    QWORD PTR [rdx+0xc8],rax
  4177fe:	add    rax,0x1
  417802:	cmp    ebp,eax
  417804:	jg     4177f0 <__flatcc_fb_gen_c_json_printer@@Base+0x7f0>
  417806:	add    rsp,0x8
  41780a:	pop    rbx
  41780b:	pop    rbp
  41780c:	ret    
  41780d:	nop    DWORD PTR [rax]
  417810:	mov    rsi,QWORD PTR [rsi+0x8]
  417814:	mov    rdi,QWORD PTR [rdi+0x8]
  417818:	jmp    405140 <strcmp@plt>
  41781d:	nop    DWORD PTR [rax]
  417820:	push   r13
  417822:	push   r12
  417824:	push   rbp
  417825:	push   rbx
  417826:	mov    rbx,rdi
  417829:	sub    rsp,0x8
  41782d:	cmp    WORD PTR [rsp+0x40],0xf
  417833:	ja     4179c0 <__flatcc_fb_gen_c_json_printer@@Base+0x9c0>
  417839:	movzx  eax,WORD PTR [rsp+0x40]
  41783e:	lea    rdx,[rip+0x2d09b]        # 4448e0 <_IO_stdin_used@@Base+0x188e0>
  417845:	movsxd rax,DWORD PTR [rdx+rax*4]
  417849:	add    rax,rdx
  41784c:	jmp    rax
  41784e:	xchg   ax,ax
  417850:	mov    r13d,0xd
  417856:	mov    r12d,0xe
  41785c:	mov    ebp,0xffffffff
  417861:	nop    DWORD PTR [rax+0x0]
  417868:	mov    esi,0x3
  41786d:	mov    rdi,rbx
  417870:	call   427e30 <flatcc_builder_start_table@@Base>
  417875:	test   eax,eax
  417877:	jne    4179f8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  41787d:	cmp    ebp,0xffffffff
  417880:	je     4178a4 <__flatcc_fb_gen_c_json_printer@@Base+0x8a4>
  417882:	mov    ecx,0x4
  417887:	mov    edx,0x4
  41788c:	mov    esi,0x2
  417891:	mov    rdi,rbx
  417894:	call   4296d0 <flatcc_builder_table_add@@Base>
  417899:	test   rax,rax
  41789c:	je     4179f8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  4178a2:	mov    DWORD PTR [rax],ebp
  4178a4:	test   r12b,r12b
  4178a7:	jne    417a08 <__flatcc_fb_gen_c_json_printer@@Base+0xa08>
  4178ad:	test   r13b,r13b
  4178b0:	jne    417a40 <__flatcc_fb_gen_c_json_printer@@Base+0xa40>
  4178b6:	lea    rsi,[rip+0x2d1c7]        # 444a84 <_IO_stdin_used@@Base+0x18a84>
  4178bd:	xor    edx,edx
  4178bf:	mov    rdi,rbx
  4178c2:	call   428770 <flatcc_builder_check_required@@Base>
  4178c7:	test   eax,eax
  4178c9:	je     417a88 <__flatcc_fb_gen_c_json_printer@@Base+0xa88>
  4178cf:	add    rsp,0x8
  4178d3:	mov    rdi,rbx
  4178d6:	pop    rbx
  4178d7:	pop    rbp
  4178d8:	pop    r12
  4178da:	pop    r13
  4178dc:	jmp    4287f0 <flatcc_builder_end_table@@Base>
  4178e1:	nop    DWORD PTR [rax+0x0]
  4178e8:	mov    rax,QWORD PTR [rsp+0x30]
  4178ed:	movzx  edx,WORD PTR [rax+0x10]
  4178f1:	mov    ebp,DWORD PTR [rax+0xc8]
  4178f7:	cmp    dx,0x3
  4178fb:	je     417a80 <__flatcc_fb_gen_c_json_printer@@Base+0xa80>
  417901:	ja     4179d0 <__flatcc_fb_gen_c_json_printer@@Base+0x9d0>
  417907:	cmp    dx,0x1
  41790b:	ja     4179e3 <__flatcc_fb_gen_c_json_printer@@Base+0x9e3>
  417911:	mov    edx,0xf
  417916:	jmp    417983 <__flatcc_fb_gen_c_json_printer@@Base+0x983>
  417918:	nop    DWORD PTR [rax+rax*1+0x0]
  417920:	mov    rax,QWORD PTR [rsp+0x30]
  417925:	movzx  edx,WORD PTR [rax+0x10]
  417929:	mov    ebp,DWORD PTR [rax+0xc8]
  41792f:	cmp    dx,0x1
  417933:	jbe    417a68 <__flatcc_fb_gen_c_json_printer@@Base+0xa68>
  417939:	cmp    dx,0x3
  41793d:	jne    4179c5 <__flatcc_fb_gen_c_json_printer@@Base+0x9c5>
  417943:	mov    eax,DWORD PTR [rax+0x48]
  417946:	jmp    417959 <__flatcc_fb_gen_c_json_printer@@Base+0x959>
  417948:	nop    DWORD PTR [rax+rax*1+0x0]
  417950:	mov    eax,DWORD PTR [rsp+0x30]
  417954:	mov    ebp,0xffffffff
  417959:	sub    eax,0x1
  41795c:	cmp    eax,0xa
  41795f:	ja     417aa7 <__flatcc_fb_gen_c_json_printer@@Base+0xaa7>
  417965:	mov    edx,0xe
  41796a:	lea    rcx,[rip+0x2cfaf]        # 444920 <_IO_stdin_used@@Base+0x18920>
  417971:	test   dl,dl
  417973:	movzx  r12d,BYTE PTR [rcx+rax*1]
  417978:	je     417986 <__flatcc_fb_gen_c_json_printer@@Base+0x986>
  41797a:	cmp    dl,0xe
  41797d:	je     417a30 <__flatcc_fb_gen_c_json_printer@@Base+0xa30>
  417983:	mov    r12d,edx
  417986:	xor    r13d,r13d
  417989:	jmp    417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  41798e:	xchg   ax,ax
  417990:	xor    r13d,r13d
  417993:	mov    r12d,0xd
  417999:	mov    ebp,0xffffffff
  41799e:	jmp    417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  4179a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4179a8:	mov    eax,DWORD PTR [rsp+0x30]
  4179ac:	mov    ebp,0xffffffff
  4179b1:	sub    eax,0x1
  4179b4:	cmp    eax,0xa
  4179b7:	ja     4179c5 <__flatcc_fb_gen_c_json_printer@@Base+0x9c5>
  4179b9:	xor    edx,edx
  4179bb:	jmp    41796a <__flatcc_fb_gen_c_json_printer@@Base+0x96a>
  4179bd:	nop    DWORD PTR [rax]
  4179c0:	mov    ebp,0xffffffff
  4179c5:	xor    r13d,r13d
  4179c8:	xor    r12d,r12d
  4179cb:	jmp    417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  4179d0:	xor    r13d,r13d
  4179d3:	cmp    dx,0x4
  4179d7:	mov    r12d,0x10
  4179dd:	je     417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  4179e3:	mov    esi,0x3
  4179e8:	mov    rdi,rbx
  4179eb:	call   427e30 <flatcc_builder_start_table@@Base>
  4179f0:	test   eax,eax
  4179f2:	je     4178b6 <__flatcc_fb_gen_c_json_printer@@Base+0x8b6>
  4179f8:	add    rsp,0x8
  4179fc:	xor    eax,eax
  4179fe:	pop    rbx
  4179ff:	pop    rbp
  417a00:	pop    r12
  417a02:	pop    r13
  417a04:	ret    
  417a05:	nop    DWORD PTR [rax]
  417a08:	xor    esi,esi
  417a0a:	mov    ecx,0x1
  417a0f:	mov    edx,0x1
  417a14:	mov    rdi,rbx
  417a17:	call   4296d0 <flatcc_builder_table_add@@Base>
  417a1c:	test   rax,rax
  417a1f:	je     4179f8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  417a21:	mov    BYTE PTR [rax],r12b
  417a24:	jmp    4178ad <__flatcc_fb_gen_c_json_printer@@Base+0x8ad>
  417a29:	nop    DWORD PTR [rax+0x0]
  417a30:	mov    r13d,r12d
  417a33:	mov    r12d,0xe
  417a39:	jmp    417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  417a3e:	xchg   ax,ax
  417a40:	mov    ecx,0x1
  417a45:	mov    edx,0x1
  417a4a:	mov    esi,0x1
  417a4f:	mov    rdi,rbx
  417a52:	call   4296d0 <flatcc_builder_table_add@@Base>
  417a57:	test   rax,rax
  417a5a:	je     4179f8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  417a5c:	mov    BYTE PTR [rax],r13b
  417a5f:	jmp    4178b6 <__flatcc_fb_gen_c_json_printer@@Base+0x8b6>
  417a64:	nop    DWORD PTR [rax+0x0]
  417a68:	mov    r13d,0xf
  417a6e:	mov    r12d,0xe
  417a74:	jmp    417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  417a79:	nop    DWORD PTR [rax+0x0]
  417a80:	mov    eax,DWORD PTR [rax+0x48]
  417a83:	jmp    4179b1 <__flatcc_fb_gen_c_json_printer@@Base+0x9b1>
  417a88:	lea    rcx,[rip+0x2cfc1]        # 444a50 <_IO_stdin_used@@Base+0x18a50>
  417a8f:	lea    rsi,[rip+0x2c962]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  417a96:	lea    rdi,[rip+0x2c9db]        # 444478 <_IO_stdin_used@@Base+0x18478>
  417a9d:	mov    edx,0x17
  417aa2:	call   4050f0 <__assert_fail@plt>
  417aa7:	xor    r13d,r13d
  417aaa:	mov    r12d,0xe
  417ab0:	jmp    417868 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  417ab5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417ac0:	push   r15
  417ac2:	push   r14
  417ac4:	mov    r10,rcx
  417ac7:	push   r13
  417ac9:	push   r12
  417acb:	mov    r15,rdi
  417ace:	push   rbp
  417acf:	push   rbx
  417ad0:	mov    rbx,rdx
  417ad3:	sub    rsp,0xc8
  417ada:	mov    r14,QWORD PTR [rcx+0x68]
  417ade:	lea    rdx,[rsp+0x60]
  417ae3:	mov    QWORD PTR [rsp+0x48],rcx
  417ae8:	mov    ecx,0xa
  417aed:	mov    rax,QWORD PTR fs:0x28
  417af6:	mov    QWORD PTR [rsp+0xb8],rax
  417afe:	xor    eax,eax
  417b00:	mov    rdi,rdx
  417b03:	xor    eax,eax
  417b05:	mov    QWORD PTR [rsp+0x50],rdx
  417b0a:	rep stos QWORD PTR es:[rdi],rax
  417b0d:	mov    DWORD PTR [rsp+0x60],esi
  417b11:	lea    rsi,[rip+0xfffffffffffffa98]        # 4175b0 <__flatcc_fb_gen_c_json_printer@@Base+0x5b0>
  417b18:	mov    rdi,r14
  417b1b:	mov    QWORD PTR [rsp+0xa8],r10
  417b23:	call   41b840 <fb_scope_table_visit@@Base>
  417b28:	movsxd rdi,DWORD PTR [rsp+0x64]
  417b2d:	mov    esi,0x10
  417b32:	mov    r12,rdi
  417b35:	call   405130 <calloc@plt>
  417b3a:	movsxd rdi,DWORD PTR [rsp+0x68]
  417b3f:	mov    esi,0x10
  417b44:	mov    r13,rax
  417b47:	mov    QWORD PTR [rsp+0x78],rax
  417b4c:	mov    DWORD PTR [rsp+0x8],edi
  417b50:	call   405130 <calloc@plt>
  417b55:	mov    rbp,rax
  417b58:	mov    QWORD PTR [rsp+0x80],rax
  417b60:	mov    rax,QWORD PTR [rsp+0x70]
  417b65:	mov    rdi,rax
  417b68:	mov    QWORD PTR [rsp+0x10],rax
  417b6d:	call   405170 <malloc@plt>
  417b72:	test   r13,r13
  417b75:	mov    QWORD PTR [rsp+0x88],rax
  417b7d:	mov    QWORD PTR [rsp+0x90],r13
  417b85:	mov    QWORD PTR [rsp+0x98],rbp
  417b8d:	mov    QWORD PTR [rsp+0xa0],rax
  417b95:	jne    417ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xba0>
  417b97:	test   r12d,r12d
  417b9a:	jg     417e2c <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  417ba0:	test   rbp,rbp
  417ba3:	jne    417bb1 <__flatcc_fb_gen_c_json_printer@@Base+0xbb1>
  417ba5:	mov    ecx,DWORD PTR [rsp+0x8]
  417ba9:	test   ecx,ecx
  417bab:	jg     417e2c <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  417bb1:	test   rax,rax
  417bb4:	jne    417bc2 <__flatcc_fb_gen_c_json_printer@@Base+0xbc2>
  417bb6:	cmp    QWORD PTR [rsp+0x10],0x0
  417bbc:	jne    417e2c <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  417bc2:	mov    rdx,QWORD PTR [rsp+0x50]
  417bc7:	lea    rsi,[rip+0xfffffffffffff9c2]        # 417590 <__flatcc_fb_gen_c_json_printer@@Base+0x590>
  417bce:	mov    rdi,r14
  417bd1:	call   41b840 <fb_scope_table_visit@@Base>
  417bd6:	mov    esi,DWORD PTR [rsp+0x64]
  417bda:	mov    rdi,QWORD PTR [rsp+0x78]
  417bdf:	call   4177c0 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
  417be4:	mov    esi,DWORD PTR [rsp+0x68]
  417be8:	mov    rdi,QWORD PTR [rsp+0x80]
  417bf0:	call   4177c0 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
  417bf5:	movsxd rax,DWORD PTR [rsp+0x64]
  417bfa:	test   eax,eax
  417bfc:	jle    418754 <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
  417c02:	lea    rdi,[rax*4+0x0]
  417c0a:	call   405170 <malloc@plt>
  417c0f:	test   rax,rax
  417c12:	mov    QWORD PTR [rsp+0x28],rax
  417c17:	je     417e2c <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  417c1d:	mov    edx,DWORD PTR [rbx]
  417c1f:	xor    ecx,ecx
  417c21:	test   edx,edx
  417c23:	je     417c2a <__flatcc_fb_gen_c_json_printer@@Base+0xc2a>
  417c25:	mov    ecx,0x2
  417c2a:	lea    rsi,[rip+0x2ce55]        # 444a86 <_IO_stdin_used@@Base+0x18a86>
  417c31:	xor    edx,edx
  417c33:	mov    rdi,r15
  417c36:	call   4271c0 <flatcc_builder_start_buffer@@Base>
  417c3b:	test   eax,eax
  417c3d:	jne    417c4c <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
  417c3f:	mov    esi,0x5
  417c44:	mov    rdi,r15
  417c47:	call   427e30 <flatcc_builder_start_table@@Base>
  417c4c:	mov    rax,QWORD PTR [rsp+0x48]
  417c51:	cmp    WORD PTR [rax+0x20],0x2
  417c56:	je     4187b6 <__flatcc_fb_gen_c_json_printer@@Base+0x17b6>
  417c5c:	mov    rax,QWORD PTR [rsp+0x48]
  417c61:	cmp    WORD PTR [rax+0x38],0x2
  417c66:	je     41877f <__flatcc_fb_gen_c_json_printer@@Base+0x177f>
  417c6c:	mov    eax,DWORD PTR [rsp+0x64]
  417c70:	mov    ecx,eax
  417c72:	mov    DWORD PTR [rsp+0x5c],eax
  417c76:	mov    rax,QWORD PTR [rsp+0x78]
  417c7b:	test   ecx,ecx
  417c7d:	jle    418226 <__flatcc_fb_gen_c_json_printer@@Base+0x1226>
  417c83:	add    rax,0x8
  417c87:	mov    rcx,QWORD PTR [rsp+0x28]
  417c8c:	mov    r14,r15
  417c8f:	mov    QWORD PTR [rsp+0x30],rax
  417c94:	mov    eax,DWORD PTR [rsp+0x5c]
  417c98:	mov    QWORD PTR [rsp+0x38],rcx
  417c9d:	sub    eax,0x1
  417ca0:	lea    rax,[rcx+rax*4+0x4]
  417ca5:	mov    QWORD PTR [rsp+0x40],rax
  417caa:	nop    WORD PTR [rax+rax*1+0x0]
  417cb0:	mov    rbx,QWORD PTR [rsp+0x30]
  417cb5:	mov    esi,0x5
  417cba:	mov    rdi,r14
  417cbd:	mov    rax,QWORD PTR [rbx-0x8]
  417cc1:	mov    QWORD PTR [rsp+0x10],rax
  417cc6:	call   427e30 <flatcc_builder_start_table@@Base>
  417ccb:	mov    rsi,QWORD PTR [rbx]
  417cce:	mov    rdi,r14
  417cd1:	call   429540 <flatcc_builder_create_string_str@@Base>
  417cd6:	test   eax,eax
  417cd8:	mov    ebx,eax
  417cda:	je     417ced <__flatcc_fb_gen_c_json_printer@@Base+0xced>
  417cdc:	xor    esi,esi
  417cde:	mov    rdi,r14
  417ce1:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  417ce6:	test   rax,rax
  417ce9:	je     417ced <__flatcc_fb_gen_c_json_printer@@Base+0xced>
  417ceb:	mov    DWORD PTR [rax],ebx
  417ced:	mov    rdi,r14
  417cf0:	xor    r12d,r12d
  417cf3:	call   427c90 <flatcc_builder_start_offset_vector@@Base>
  417cf8:	mov    rax,QWORD PTR [rsp+0x10]
  417cfd:	mov    r13,QWORD PTR [rax+0x28]
  417d01:	test   r13,r13
  417d04:	jne    417e0c <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
  417d0a:	jmp    418198 <__flatcc_fb_gen_c_json_printer@@Base+0x1198>
  417d0f:	nop
  417d10:	test   bl,0x80
  417d13:	je     417e1a <__flatcc_fb_gen_c_json_printer@@Base+0xe1a>
  417d19:	mov    BYTE PTR [rsp+0x8],0x1
  417d1e:	mov    DWORD PTR [rsp+0x1c],0x1
  417d26:	mov    ebp,ebx
  417d28:	and    bp,0x4
  417d2c:	setne  BYTE PTR [rsp+0x5b]
  417d31:	cmp    WORD PTR [r13+0x28],0xe
  417d37:	je     417f90 <__flatcc_fb_gen_c_json_printer@@Base+0xf90>
  417d3d:	mov    esi,0x9
  417d42:	mov    rdi,r14
  417d45:	call   427e30 <flatcc_builder_start_table@@Base>
  417d4a:	mov    rax,QWORD PTR [r13+0x8]
  417d4e:	mov    rdi,r14
  417d51:	mov    rdx,QWORD PTR [rax+0x8]
  417d55:	mov    rsi,QWORD PTR [rax]
  417d58:	call   429420 <flatcc_builder_create_string@@Base>
  417d5d:	test   eax,eax
  417d5f:	mov    r15d,eax
  417d62:	je     417d76 <__flatcc_fb_gen_c_json_printer@@Base+0xd76>
  417d64:	xor    esi,esi
  417d66:	mov    rdi,r14
  417d69:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  417d6e:	test   rax,rax
  417d71:	je     417d76 <__flatcc_fb_gen_c_json_printer@@Base+0xd76>
  417d73:	mov    DWORD PTR [rax],r15d
  417d76:	sub    rsp,0x8
  417d7a:	push   QWORD PTR [r13+0x28]
  417d7e:	push   QWORD PTR [r13+0x20]
  417d82:	push   QWORD PTR [r13+0x18]
  417d86:	mov    rdi,r14
  417d89:	call   417820 <__flatcc_fb_gen_c_json_printer@@Base+0x820>
  417d8e:	add    rsp,0x20
  417d92:	test   eax,eax
  417d94:	jne    417f68 <__flatcc_fb_gen_c_json_printer@@Base+0xf68>
  417d9a:	mov    rax,QWORD PTR [rsp+0x10]
  417d9f:	movzx  eax,WORD PTR [rax+0x10]
  417da3:	test   ax,ax
  417da6:	je     417e70 <__flatcc_fb_gen_c_json_printer@@Base+0xe70>
  417dac:	cmp    ax,0x1
  417db0:	jne    417dbf <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  417db2:	mov    rbx,QWORD PTR [r13+0x78]
  417db6:	test   bx,bx
  417db9:	jne    418468 <__flatcc_fb_gen_c_json_printer@@Base+0x1468>
  417dbf:	test   bp,bp
  417dc2:	jne    417f38 <__flatcc_fb_gen_c_json_printer@@Base+0xf38>
  417dc8:	lea    rsi,[rip+0x2cca1]        # 444a70 <_IO_stdin_used@@Base+0x18a70>
  417dcf:	mov    edx,0x2
  417dd4:	mov    rdi,r14
  417dd7:	call   428770 <flatcc_builder_check_required@@Base>
  417ddc:	test   eax,eax
  417dde:	je     4187ed <__flatcc_fb_gen_c_json_printer@@Base+0x17ed>
  417de4:	mov    rdi,r14
  417de7:	call   4287f0 <flatcc_builder_end_table@@Base>
  417dec:	test   eax,eax
  417dee:	je     417dfa <__flatcc_fb_gen_c_json_printer@@Base+0xdfa>
  417df0:	mov    esi,eax
  417df2:	mov    rdi,r14
  417df5:	call   4277c0 <flatcc_builder_offset_vector_push@@Base>
  417dfa:	mov    r13,QWORD PTR [r13+0x0]
  417dfe:	or     r12b,BYTE PTR [rsp+0x8]
  417e03:	test   r13,r13
  417e06:	je     418198 <__flatcc_fb_gen_c_json_printer@@Base+0x1198>
  417e0c:	test   r12b,r12b
  417e0f:	movzx  ebx,WORD PTR [r13+0x70]
  417e14:	je     417d10 <__flatcc_fb_gen_c_json_printer@@Base+0xd10>
  417e1a:	mov    BYTE PTR [rsp+0x8],0x0
  417e1f:	mov    DWORD PTR [rsp+0x1c],0x0
  417e27:	jmp    417d26 <__flatcc_fb_gen_c_json_printer@@Base+0xd26>
  417e2c:	mov    rdi,QWORD PTR [rsp+0x50]
  417e31:	mov    ebx,0xffffffff
  417e36:	call   417780 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  417e3b:	mov    rcx,QWORD PTR [rsp+0xb8]
  417e43:	xor    rcx,QWORD PTR fs:0x28
  417e4c:	mov    eax,ebx
  417e4e:	jne    418869 <__flatcc_fb_gen_c_json_printer@@Base+0x1869>
  417e54:	add    rsp,0xc8
  417e5b:	pop    rbx
  417e5c:	pop    rbp
  417e5d:	pop    r12
  417e5f:	pop    r13
  417e61:	pop    r14
  417e63:	pop    r15
  417e65:	ret    
  417e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e70:	movzx  eax,WORD PTR [r13+0x58]
  417e75:	cmp    ax,0x4
  417e79:	je     4180d0 <__flatcc_fb_gen_c_json_printer@@Base+0x10d0>
  417e7f:	jbe    418140 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
  417e85:	cmp    ax,0x5
  417e89:	je     4180d0 <__flatcc_fb_gen_c_json_printer@@Base+0x10d0>
  417e8f:	cmp    ax,0x6
  417e93:	jne    4185d0 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
  417e99:	movzx  r8d,BYTE PTR [r13+0x48]
  417e9e:	test   r8,r8
  417ea1:	jne    4180dd <__flatcc_fb_gen_c_json_printer@@Base+0x10dd>
  417ea7:	nop    WORD PTR [rax+rax*1+0x0]
  417eb0:	mov    r9,QWORD PTR [r13+0x88]
  417eb7:	mov    r8d,0x4
  417ebd:	test   r9w,r9w
  417ec1:	jne    418420 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
  417ec7:	mov    ecx,0x2
  417ecc:	mov    edx,0x2
  417ed1:	mov    esi,0x3
  417ed6:	mov    rdi,r14
  417ed9:	mov    DWORD PTR [rsp+0x20],r8d
  417ede:	call   4296d0 <flatcc_builder_table_add@@Base>
  417ee3:	test   rax,rax
  417ee6:	je     417ef1 <__flatcc_fb_gen_c_json_printer@@Base+0xef1>
  417ee8:	mov    r8d,DWORD PTR [rsp+0x20]
  417eed:	mov    WORD PTR [rax],r8w
  417ef1:	mov    eax,DWORD PTR [rsp+0x1c]
  417ef5:	test   eax,eax
  417ef7:	jne    418110 <__flatcc_fb_gen_c_json_printer@@Base+0x1110>
  417efd:	and    bh,0x1
  417f00:	je     417dbf <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  417f06:	mov    ecx,0x1
  417f0b:	mov    edx,0x1
  417f10:	mov    esi,0x7
  417f15:	mov    rdi,r14
  417f18:	call   4296d0 <flatcc_builder_table_add@@Base>
  417f1d:	test   rax,rax
  417f20:	je     417dbf <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  417f26:	test   bp,bp
  417f29:	mov    BYTE PTR [rax],0x1
  417f2c:	je     417dc8 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
  417f32:	nop    WORD PTR [rax+rax*1+0x0]
  417f38:	mov    ecx,0x1
  417f3d:	mov    edx,0x1
  417f42:	mov    esi,0x6
  417f47:	mov    rdi,r14
  417f4a:	call   4296d0 <flatcc_builder_table_add@@Base>
  417f4f:	test   rax,rax
  417f52:	je     417dc8 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
  417f58:	movzx  ecx,BYTE PTR [rsp+0x5b]
  417f5d:	mov    BYTE PTR [rax],cl
  417f5f:	jmp    417dc8 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
  417f64:	nop    DWORD PTR [rax+0x0]
  417f68:	mov    esi,0x1
  417f6d:	mov    rdi,r14
  417f70:	mov    DWORD PTR [rsp+0x20],eax
  417f74:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  417f79:	test   rax,rax
  417f7c:	je     417d9a <__flatcc_fb_gen_c_json_printer@@Base+0xd9a>
  417f82:	mov    edx,DWORD PTR [rsp+0x20]
  417f86:	mov    DWORD PTR [rax],edx
  417f88:	jmp    417d9a <__flatcc_fb_gen_c_json_printer@@Base+0xd9a>
  417f8d:	nop    DWORD PTR [rax]
  417f90:	mov    rax,QWORD PTR [r13+0x18]
  417f94:	cmp    WORD PTR [rax+0x10],0x4
  417f99:	jne    417d3d <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  417f9f:	mov    esi,0x9
  417fa4:	mov    rdi,r14
  417fa7:	call   427e30 <flatcc_builder_start_table@@Base>
  417fac:	mov    rdi,r14
  417faf:	call   427cf0 <flatcc_builder_start_string@@Base>
  417fb4:	mov    rax,QWORD PTR [r13+0x8]
  417fb8:	mov    rdi,r14
  417fbb:	mov    rdx,QWORD PTR [rax+0x8]
  417fbf:	mov    rsi,QWORD PTR [rax]
  417fc2:	call   427970 <flatcc_builder_append_string@@Base>
  417fc7:	lea    rsi,[rip+0x1caca]        # 434a98 <_IO_stdin_used@@Base+0x8a98>
  417fce:	mov    edx,0x5
  417fd3:	mov    rdi,r14
  417fd6:	call   427970 <flatcc_builder_append_string@@Base>
  417fdb:	mov    rdi,r14
  417fde:	call   4295b0 <flatcc_builder_end_string@@Base>
  417fe3:	test   eax,eax
  417fe5:	mov    r15d,eax
  417fe8:	je     417ffc <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
  417fea:	xor    esi,esi
  417fec:	mov    rdi,r14
  417fef:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  417ff4:	test   rax,rax
  417ff7:	je     417ffc <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
  417ff9:	mov    DWORD PTR [rax],r15d
  417ffc:	mov    esi,0x3
  418001:	mov    rdi,r14
  418004:	call   427e30 <flatcc_builder_start_table@@Base>
  418009:	test   eax,eax
  41800b:	jne    418066 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  41800d:	xor    esi,esi
  41800f:	mov    ecx,0x1
  418014:	mov    edx,0x1
  418019:	mov    rdi,r14
  41801c:	call   4296d0 <flatcc_builder_table_add@@Base>
  418021:	test   rax,rax
  418024:	je     418066 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418026:	lea    rsi,[rip+0x2ca57]        # 444a84 <_IO_stdin_used@@Base+0x18a84>
  41802d:	xor    edx,edx
  41802f:	mov    BYTE PTR [rax],0x1
  418032:	mov    rdi,r14
  418035:	call   428770 <flatcc_builder_check_required@@Base>
  41803a:	test   eax,eax
  41803c:	je     41884a <__flatcc_fb_gen_c_json_printer@@Base+0x184a>
  418042:	mov    rdi,r14
  418045:	call   4287f0 <flatcc_builder_end_table@@Base>
  41804a:	test   eax,eax
  41804c:	mov    r15d,eax
  41804f:	je     418066 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418051:	mov    esi,0x1
  418056:	mov    rdi,r14
  418059:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  41805e:	test   rax,rax
  418061:	je     418066 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418063:	mov    DWORD PTR [rax],r15d
  418066:	mov    rax,QWORD PTR [r13+0x88]
  41806d:	mov    edx,eax
  41806f:	add    eax,0x1
  418072:	add    ax,ax
  418075:	mov    r15d,eax
  418078:	jne    418700 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
  41807e:	sub    dx,0x1
  418082:	mov    r15d,edx
  418085:	jne    4186d0 <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
  41808b:	test   bp,bp
  41808e:	jne    4186a0 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
  418094:	lea    rsi,[rip+0x2c9d5]        # 444a70 <_IO_stdin_used@@Base+0x18a70>
  41809b:	mov    edx,0x2
  4180a0:	mov    rdi,r14
  4180a3:	call   428770 <flatcc_builder_check_required@@Base>
  4180a8:	test   eax,eax
  4180aa:	je     4187ed <__flatcc_fb_gen_c_json_printer@@Base+0x17ed>
  4180b0:	mov    rdi,r14
  4180b3:	call   4287f0 <flatcc_builder_end_table@@Base>
  4180b8:	test   eax,eax
  4180ba:	je     417d3d <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  4180c0:	mov    esi,eax
  4180c2:	mov    rdi,r14
  4180c5:	call   4277c0 <flatcc_builder_offset_vector_push@@Base>
  4180ca:	jmp    417d3d <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  4180cf:	nop
  4180d0:	mov    r8,QWORD PTR [r13+0x48]
  4180d4:	test   r8,r8
  4180d7:	je     417eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  4180dd:	mov    ecx,0x8
  4180e2:	mov    edx,0x8
  4180e7:	mov    esi,0x4
  4180ec:	mov    rdi,r14
  4180ef:	mov    QWORD PTR [rsp+0x20],r8
  4180f4:	call   4296d0 <flatcc_builder_table_add@@Base>
  4180f9:	test   rax,rax
  4180fc:	je     417eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418102:	mov    r8,QWORD PTR [rsp+0x20]
  418107:	mov    QWORD PTR [rax],r8
  41810a:	jmp    417eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  41810f:	nop
  418110:	mov    ecx,0x1
  418115:	mov    edx,0x1
  41811a:	mov    esi,0x8
  41811f:	mov    rdi,r14
  418122:	call   4296d0 <flatcc_builder_table_add@@Base>
  418127:	test   rax,rax
  41812a:	je     417efd <__flatcc_fb_gen_c_json_printer@@Base+0xefd>
  418130:	mov    BYTE PTR [rax],0x1
  418133:	jmp    417efd <__flatcc_fb_gen_c_json_printer@@Base+0xefd>
  418138:	nop    DWORD PTR [rax+rax*1+0x0]
  418140:	cmp    ax,0x3
  418144:	jne    4185d0 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
  41814a:	vxorpd xmm1,xmm1,xmm1
  41814e:	vmovsd xmm0,QWORD PTR [r13+0x48]
  418154:	vucomisd xmm0,xmm1
  418158:	jp     418160 <__flatcc_fb_gen_c_json_printer@@Base+0x1160>
  41815a:	je     417eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418160:	mov    ecx,0x8
  418165:	mov    edx,0x8
  41816a:	mov    esi,0x5
  41816f:	mov    rdi,r14
  418172:	vmovsd QWORD PTR [rsp+0x20],xmm0
  418178:	call   4296d0 <flatcc_builder_table_add@@Base>
  41817d:	test   rax,rax
  418180:	je     417eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418186:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  41818c:	vmovsd QWORD PTR [rax],xmm0
  418190:	jmp    417eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418195:	nop    DWORD PTR [rax]
  418198:	mov    rdi,r14
  41819b:	call   428c20 <flatcc_builder_end_offset_vector@@Base>
  4181a0:	test   eax,eax
  4181a2:	mov    ebx,eax
  4181a4:	je     4181ba <__flatcc_fb_gen_c_json_printer@@Base+0x11ba>
  4181a6:	mov    esi,0x1
  4181ab:	mov    rdi,r14
  4181ae:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  4181b3:	test   rax,rax
  4181b6:	je     4181ba <__flatcc_fb_gen_c_json_printer@@Base+0x11ba>
  4181b8:	mov    DWORD PTR [rax],ebx
  4181ba:	mov    rax,QWORD PTR [rsp+0x10]
  4181bf:	cmp    WORD PTR [rax+0x10],0x1
  4181c4:	je     418660 <__flatcc_fb_gen_c_json_printer@@Base+0x1660>
  4181ca:	mov    rax,QWORD PTR [rsp+0x10]
  4181cf:	movzx  ebx,WORD PTR [rax+0xb0]
  4181d6:	test   ebx,ebx
  4181d8:	jne    4185e0 <__flatcc_fb_gen_c_json_printer@@Base+0x15e0>
  4181de:	lea    rsi,[rip+0x2c885]        # 444a6a <_IO_stdin_used@@Base+0x18a6a>
  4181e5:	mov    edx,0x2
  4181ea:	mov    rdi,r14
  4181ed:	call   428770 <flatcc_builder_check_required@@Base>
  4181f2:	test   eax,eax
  4181f4:	je     41882b <__flatcc_fb_gen_c_json_printer@@Base+0x182b>
  4181fa:	mov    rdi,r14
  4181fd:	call   4287f0 <flatcc_builder_end_table@@Base>
  418202:	mov    rcx,QWORD PTR [rsp+0x38]
  418207:	add    QWORD PTR [rsp+0x30],0x10
  41820d:	mov    DWORD PTR [rcx],eax
  41820f:	add    rcx,0x4
  418213:	cmp    QWORD PTR [rsp+0x40],rcx
  418218:	mov    QWORD PTR [rsp+0x38],rcx
  41821d:	jne    417cb0 <__flatcc_fb_gen_c_json_printer@@Base+0xcb0>
  418223:	mov    r15,r14
  418226:	movsxd rdx,DWORD PTR [rsp+0x5c]
  41822b:	mov    rsi,QWORD PTR [rsp+0x28]
  418230:	mov    rdi,r15
  418233:	call   428cf0 <flatcc_builder_create_offset_vector@@Base>
  418238:	test   eax,eax
  41823a:	mov    ebx,eax
  41823c:	je     41824f <__flatcc_fb_gen_c_json_printer@@Base+0x124f>
  41823e:	xor    esi,esi
  418240:	mov    rdi,r15
  418243:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  418248:	test   rax,rax
  41824b:	je     41824f <__flatcc_fb_gen_c_json_printer@@Base+0x124f>
  41824d:	mov    DWORD PTR [rax],ebx
  41824f:	mov    ebx,DWORD PTR [rsp+0x68]
  418253:	mov    rdi,r15
  418256:	mov    r14,QWORD PTR [rsp+0x80]
  41825e:	call   427c90 <flatcc_builder_start_offset_vector@@Base>
  418263:	test   ebx,ebx
  418265:	jle    41852a <__flatcc_fb_gen_c_json_printer@@Base+0x152a>
  41826b:	lea    eax,[rbx-0x1]
  41826e:	lea    r12,[rip+0x2c80b]        # 444a80 <_IO_stdin_used@@Base+0x18a80>
  418275:	mov    QWORD PTR [rsp+0x8],r14
  41827a:	add    rax,0x1
  41827e:	shl    rax,0x4
  418282:	add    rax,r14
  418285:	mov    QWORD PTR [rsp+0x10],rax
  41828a:	nop    WORD PTR [rax+rax*1+0x0]
  418290:	mov    rbx,QWORD PTR [rsp+0x8]
  418295:	mov    esi,0x4
  41829a:	mov    rdi,r15
  41829d:	mov    r13,QWORD PTR [rbx]
  4182a0:	movzx  ebp,WORD PTR [r13+0x10]
  4182a5:	call   427e30 <flatcc_builder_start_table@@Base>
  4182aa:	mov    rsi,QWORD PTR [rbx+0x8]
  4182ae:	mov    rdi,r15
  4182b1:	call   429540 <flatcc_builder_create_string_str@@Base>
  4182b6:	test   eax,eax
  4182b8:	mov    ebx,eax
  4182ba:	je     4182cd <__flatcc_fb_gen_c_json_printer@@Base+0x12cd>
  4182bc:	xor    esi,esi
  4182be:	mov    rdi,r15
  4182c1:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  4182c6:	test   rax,rax
  4182c9:	je     4182cd <__flatcc_fb_gen_c_json_printer@@Base+0x12cd>
  4182cb:	mov    DWORD PTR [rax],ebx
  4182cd:	mov    rdi,r15
  4182d0:	call   427c90 <flatcc_builder_start_offset_vector@@Base>
  4182d5:	mov    rbx,QWORD PTR [r13+0x28]
  4182d9:	test   rbx,rbx
  4182dc:	jne    418322 <__flatcc_fb_gen_c_json_printer@@Base+0x1322>
  4182de:	jmp    418490 <__flatcc_fb_gen_c_json_printer@@Base+0x1490>
  4182e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4182e8:	mov    edx,0x1
  4182ed:	mov    rsi,r12
  4182f0:	mov    rdi,r15
  4182f3:	call   428770 <flatcc_builder_check_required@@Base>
  4182f8:	test   eax,eax
  4182fa:	je     41880c <__flatcc_fb_gen_c_json_printer@@Base+0x180c>
  418300:	mov    rdi,r15
  418303:	call   4287f0 <flatcc_builder_end_table@@Base>
  418308:	test   eax,eax
  41830a:	je     418316 <__flatcc_fb_gen_c_json_printer@@Base+0x1316>
  41830c:	mov    esi,eax
  41830e:	mov    rdi,r15
  418311:	call   4277c0 <flatcc_builder_offset_vector_push@@Base>
  418316:	mov    rbx,QWORD PTR [rbx]
  418319:	test   rbx,rbx
  41831c:	je     418490 <__flatcc_fb_gen_c_json_printer@@Base+0x1490>
  418322:	cmp    bp,0x4
  418326:	mov    esi,0x3
  41832b:	mov    rdi,r15
  41832e:	je     4183a0 <__flatcc_fb_gen_c_json_printer@@Base+0x13a0>
  418330:	call   427e30 <flatcc_builder_start_table@@Base>
  418335:	mov    rax,QWORD PTR [rbx+0x8]
  418339:	mov    rdi,r15
  41833c:	mov    rdx,QWORD PTR [rax+0x8]
  418340:	mov    rsi,QWORD PTR [rax]
  418343:	call   429420 <flatcc_builder_create_string@@Base>
  418348:	test   eax,eax
  41834a:	mov    r14d,eax
  41834d:	je     418361 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  41834f:	xor    esi,esi
  418351:	mov    rdi,r15
  418354:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  418359:	test   rax,rax
  41835c:	je     418361 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  41835e:	mov    DWORD PTR [rax],r14d
  418361:	mov    r14,QWORD PTR [rbx+0x48]
  418365:	test   r14,r14
  418368:	je     4182e8 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
  41836e:	mov    ecx,0x8
  418373:	mov    edx,0x8
  418378:	mov    esi,0x1
  41837d:	mov    rdi,r15
  418380:	call   4296d0 <flatcc_builder_table_add@@Base>
  418385:	test   rax,rax
  418388:	je     4182e8 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
  41838e:	mov    QWORD PTR [rax],r14
  418391:	jmp    4182e8 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
  418396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4183a0:	call   427e30 <flatcc_builder_start_table@@Base>
  4183a5:	mov    rax,QWORD PTR [rbx+0x8]
  4183a9:	mov    rdi,r15
  4183ac:	mov    rdx,QWORD PTR [rax+0x8]
  4183b0:	mov    rsi,QWORD PTR [rax]
  4183b3:	call   429420 <flatcc_builder_create_string@@Base>
  4183b8:	test   eax,eax
  4183ba:	mov    r14d,eax
  4183bd:	je     4183d1 <__flatcc_fb_gen_c_json_printer@@Base+0x13d1>
  4183bf:	xor    esi,esi
  4183c1:	mov    rdi,r15
  4183c4:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  4183c9:	test   rax,rax
  4183cc:	je     4183d1 <__flatcc_fb_gen_c_json_printer@@Base+0x13d1>
  4183ce:	mov    DWORD PTR [rax],r14d
  4183d1:	cmp    QWORD PTR [rsp+0x28],0x0
  4183d7:	je     418361 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  4183d9:	cmp    WORD PTR [rbx+0x28],0xe
  4183de:	jne    418361 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  4183e0:	mov    rax,QWORD PTR [rbx+0x18]
  4183e4:	mov    rcx,QWORD PTR [rsp+0x28]
  4183e9:	mov    rax,QWORD PTR [rax+0xc8]
  4183f0:	mov    r14d,DWORD PTR [rcx+rax*4]
  4183f4:	test   r14d,r14d
  4183f7:	je     418361 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  4183fd:	mov    esi,0x2
  418402:	mov    rdi,r15
  418405:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  41840a:	test   rax,rax
  41840d:	jne    41835e <__flatcc_fb_gen_c_json_printer@@Base+0x135e>
  418413:	jmp    418361 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418418:	nop    DWORD PTR [rax+rax*1+0x0]
  418420:	mov    ecx,0x2
  418425:	mov    edx,0x2
  41842a:	mov    esi,0x2
  41842f:	mov    rdi,r14
  418432:	mov    QWORD PTR [rsp+0x20],r9
  418437:	call   4296d0 <flatcc_builder_table_add@@Base>
  41843c:	test   rax,rax
  41843f:	je     41844a <__flatcc_fb_gen_c_json_printer@@Base+0x144a>
  418441:	mov    r9,QWORD PTR [rsp+0x20]
  418446:	mov    WORD PTR [rax],r9w
  41844a:	movzx  eax,WORD PTR [r13+0x88]
  418452:	lea    r8d,[rax+0x2]
  418456:	add    r8w,r8w
  41845a:	je     417ef1 <__flatcc_fb_gen_c_json_printer@@Base+0xef1>
  418460:	jmp    417ec7 <__flatcc_fb_gen_c_json_printer@@Base+0xec7>
  418465:	nop    DWORD PTR [rax]
  418468:	mov    ecx,0x2
  41846d:	mov    edx,0x2
  418472:	mov    esi,0x3
  418477:	mov    rdi,r14
  41847a:	call   4296d0 <flatcc_builder_table_add@@Base>
  41847f:	test   rax,rax
  418482:	je     417dbf <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  418488:	mov    WORD PTR [rax],bx
  41848b:	jmp    417dbf <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  418490:	mov    rdi,r15
  418493:	call   428c20 <flatcc_builder_end_offset_vector@@Base>
  418498:	test   eax,eax
  41849a:	mov    ebx,eax
  41849c:	je     4184b2 <__flatcc_fb_gen_c_json_printer@@Base+0x14b2>
  41849e:	mov    esi,0x1
  4184a3:	mov    rdi,r15
  4184a6:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  4184ab:	test   rax,rax
  4184ae:	je     4184b2 <__flatcc_fb_gen_c_json_printer@@Base+0x14b2>
  4184b0:	mov    DWORD PTR [rax],ebx
  4184b2:	cmp    bp,0x4
  4184b6:	je     418610 <__flatcc_fb_gen_c_json_printer@@Base+0x1610>
  4184bc:	sub    rsp,0x8
  4184c0:	push   QWORD PTR [r13+0x58]
  4184c4:	push   QWORD PTR [r13+0x50]
  4184c8:	push   QWORD PTR [r13+0x48]
  4184cc:	mov    rdi,r15
  4184cf:	call   417820 <__flatcc_fb_gen_c_json_printer@@Base+0x820>
  4184d4:	add    rsp,0x20
  4184d8:	test   eax,eax
  4184da:	mov    ebx,eax
  4184dc:	jne    418640 <__flatcc_fb_gen_c_json_printer@@Base+0x1640>
  4184e2:	lea    rsi,[rip+0x2c58f]        # 444a78 <_IO_stdin_used@@Base+0x18a78>
  4184e9:	mov    edx,0x3
  4184ee:	mov    rdi,r15
  4184f1:	call   428770 <flatcc_builder_check_required@@Base>
  4184f6:	test   eax,eax
  4184f8:	je     41888d <__flatcc_fb_gen_c_json_printer@@Base+0x188d>
  4184fe:	mov    rdi,r15
  418501:	call   4287f0 <flatcc_builder_end_table@@Base>
  418506:	test   eax,eax
  418508:	je     418514 <__flatcc_fb_gen_c_json_printer@@Base+0x1514>
  41850a:	mov    esi,eax
  41850c:	mov    rdi,r15
  41850f:	call   4277c0 <flatcc_builder_offset_vector_push@@Base>
  418514:	add    QWORD PTR [rsp+0x8],0x10
  41851a:	mov    rax,QWORD PTR [rsp+0x8]
  41851f:	cmp    rax,QWORD PTR [rsp+0x10]
  418524:	jne    418290 <__flatcc_fb_gen_c_json_printer@@Base+0x1290>
  41852a:	mov    rdi,r15
  41852d:	call   428c20 <flatcc_builder_end_offset_vector@@Base>
  418532:	test   eax,eax
  418534:	mov    ebx,eax
  418536:	je     41854c <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
  418538:	mov    esi,0x1
  41853d:	mov    rdi,r15
  418540:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  418545:	test   rax,rax
  418548:	je     41854c <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
  41854a:	mov    DWORD PTR [rax],ebx
  41854c:	mov    rax,QWORD PTR [rsp+0x48]
  418551:	mov    rax,QWORD PTR [rax+0x58]
  418555:	test   rax,rax
  418558:	je     418578 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  41855a:	cmp    WORD PTR [rax+0x10],0x0
  41855f:	jne    418578 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  418561:	mov    rax,QWORD PTR [rax+0xc8]
  418568:	mov    rcx,QWORD PTR [rsp+0x28]
  41856d:	mov    ebx,DWORD PTR [rcx+rax*4]
  418570:	test   ebx,ebx
  418572:	jne    418762 <__flatcc_fb_gen_c_json_printer@@Base+0x1762>
  418578:	lea    rsi,[rip+0x2c4e5]        # 444a64 <_IO_stdin_used@@Base+0x18a64>
  41857f:	mov    edx,0x2
  418584:	mov    rdi,r15
  418587:	call   428770 <flatcc_builder_check_required@@Base>
  41858c:	test   eax,eax
  41858e:	je     41886e <__flatcc_fb_gen_c_json_printer@@Base+0x186e>
  418594:	mov    rdi,r15
  418597:	xor    ebx,ebx
  418599:	call   4287f0 <flatcc_builder_end_table@@Base>
  41859e:	mov    rdi,r15
  4185a1:	mov    esi,eax
  4185a3:	call   4272a0 <flatcc_builder_end_buffer@@Base>
  4185a8:	mov    rdi,QWORD PTR [rsp+0x50]
  4185ad:	call   417780 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  4185b2:	mov    rax,QWORD PTR [rsp+0x28]
  4185b7:	test   rax,rax
  4185ba:	je     417e3b <__flatcc_fb_gen_c_json_printer@@Base+0xe3b>
  4185c0:	mov    rdi,rax
  4185c3:	call   405040 <free@plt>
  4185c8:	jmp    417e3b <__flatcc_fb_gen_c_json_printer@@Base+0xe3b>
  4185cd:	nop    DWORD PTR [rax]
  4185d0:	vxorpd xmm1,xmm1,xmm1
  4185d4:	vmovapd xmm0,xmm1
  4185d8:	jmp    418154 <__flatcc_fb_gen_c_json_printer@@Base+0x1154>
  4185dd:	nop    DWORD PTR [rax]
  4185e0:	mov    ecx,0x4
  4185e5:	mov    edx,0x4
  4185ea:	mov    esi,0x3
  4185ef:	mov    rdi,r14
  4185f2:	call   4296d0 <flatcc_builder_table_add@@Base>
  4185f7:	test   rax,rax
  4185fa:	je     4181de <__flatcc_fb_gen_c_json_printer@@Base+0x11de>
  418600:	mov    DWORD PTR [rax],ebx
  418602:	jmp    4181de <__flatcc_fb_gen_c_json_printer@@Base+0x11de>
  418607:	nop    WORD PTR [rax+rax*1+0x0]
  418610:	mov    ecx,0x1
  418615:	mov    edx,0x1
  41861a:	mov    esi,0x2
  41861f:	mov    rdi,r15
  418622:	call   4296d0 <flatcc_builder_table_add@@Base>
  418627:	test   rax,rax
  41862a:	je     4184bc <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
  418630:	mov    BYTE PTR [rax],0x1
  418633:	jmp    4184bc <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
  418638:	nop    DWORD PTR [rax+rax*1+0x0]
  418640:	mov    esi,0x3
  418645:	mov    rdi,r15
  418648:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  41864d:	test   rax,rax
  418650:	je     4184e2 <__flatcc_fb_gen_c_json_printer@@Base+0x14e2>
  418656:	mov    DWORD PTR [rax],ebx
  418658:	jmp    4184e2 <__flatcc_fb_gen_c_json_printer@@Base+0x14e2>
  41865d:	nop    DWORD PTR [rax]
  418660:	mov    rbx,QWORD PTR [rax+0xb8]
  418667:	test   ebx,ebx
  418669:	jne    41872d <__flatcc_fb_gen_c_json_printer@@Base+0x172d>
  41866f:	mov    ecx,0x1
  418674:	mov    edx,0x1
  418679:	mov    esi,0x2
  41867e:	mov    rdi,r14
  418681:	call   4296d0 <flatcc_builder_table_add@@Base>
  418686:	test   rax,rax
  418689:	je     4181ca <__flatcc_fb_gen_c_json_printer@@Base+0x11ca>
  41868f:	mov    BYTE PTR [rax],0x1
  418692:	jmp    4181ca <__flatcc_fb_gen_c_json_printer@@Base+0x11ca>
  418697:	nop    WORD PTR [rax+rax*1+0x0]
  4186a0:	mov    ecx,0x1
  4186a5:	mov    edx,0x1
  4186aa:	mov    esi,0x6
  4186af:	mov    rdi,r14
  4186b2:	call   4296d0 <flatcc_builder_table_add@@Base>
  4186b7:	test   rax,rax
  4186ba:	je     418094 <__flatcc_fb_gen_c_json_printer@@Base+0x1094>
  4186c0:	movzx  ecx,BYTE PTR [rsp+0x5b]
  4186c5:	mov    BYTE PTR [rax],cl
  4186c7:	jmp    418094 <__flatcc_fb_gen_c_json_printer@@Base+0x1094>
  4186cc:	nop    DWORD PTR [rax+0x0]
  4186d0:	mov    ecx,0x2
  4186d5:	mov    edx,0x2
  4186da:	mov    esi,0x2
  4186df:	mov    rdi,r14
  4186e2:	call   4296d0 <flatcc_builder_table_add@@Base>
  4186e7:	test   rax,rax
  4186ea:	je     41808b <__flatcc_fb_gen_c_json_printer@@Base+0x108b>
  4186f0:	mov    WORD PTR [rax],r15w
  4186f4:	jmp    41808b <__flatcc_fb_gen_c_json_printer@@Base+0x108b>
  4186f9:	nop    DWORD PTR [rax+0x0]
  418700:	mov    ecx,0x2
  418705:	mov    edx,0x2
  41870a:	mov    esi,0x3
  41870f:	mov    rdi,r14
  418712:	call   4296d0 <flatcc_builder_table_add@@Base>
  418717:	test   rax,rax
  41871a:	je     418720 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
  41871c:	mov    WORD PTR [rax],r15w
  418720:	movzx  edx,WORD PTR [r13+0x88]
  418728:	jmp    41807e <__flatcc_fb_gen_c_json_printer@@Base+0x107e>
  41872d:	mov    ecx,0x4
  418732:	mov    edx,0x4
  418737:	mov    esi,0x4
  41873c:	mov    rdi,r14
  41873f:	call   4296d0 <flatcc_builder_table_add@@Base>
  418744:	test   rax,rax
  418747:	je     41866f <__flatcc_fb_gen_c_json_printer@@Base+0x166f>
  41874d:	mov    DWORD PTR [rax],ebx
  41874f:	jmp    41866f <__flatcc_fb_gen_c_json_printer@@Base+0x166f>
  418754:	mov    QWORD PTR [rsp+0x28],0x0
  41875d:	jmp    417c1d <__flatcc_fb_gen_c_json_printer@@Base+0xc1d>
  418762:	mov    esi,0x4
  418767:	mov    rdi,r15
  41876a:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  41876f:	test   rax,rax
  418772:	je     418578 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  418778:	mov    DWORD PTR [rax],ebx
  41877a:	jmp    418578 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  41877f:	movsxd rdx,DWORD PTR [rax+0x30]
  418783:	mov    rsi,QWORD PTR [rax+0x28]
  418787:	mov    rdi,r15
  41878a:	call   429420 <flatcc_builder_create_string@@Base>
  41878f:	test   eax,eax
  418791:	mov    ebx,eax
  418793:	je     417c6c <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
  418799:	mov    esi,0x3
  41879e:	mov    rdi,r15
  4187a1:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  4187a6:	test   rax,rax
  4187a9:	je     417c6c <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
  4187af:	mov    DWORD PTR [rax],ebx
  4187b1:	jmp    417c6c <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
  4187b6:	movsxd rdx,DWORD PTR [rax+0x18]
  4187ba:	mov    rsi,QWORD PTR [rax+0x10]
  4187be:	mov    rdi,r15
  4187c1:	call   429420 <flatcc_builder_create_string@@Base>
  4187c6:	test   eax,eax
  4187c8:	mov    ebx,eax
  4187ca:	je     417c5c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
  4187d0:	mov    esi,0x2
  4187d5:	mov    rdi,r15
  4187d8:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  4187dd:	test   rax,rax
  4187e0:	je     417c5c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
  4187e6:	mov    DWORD PTR [rax],ebx
  4187e8:	jmp    417c5c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
  4187ed:	lea    rcx,[rip+0x2c23c]        # 444a30 <_IO_stdin_used@@Base+0x18a30>
  4187f4:	lea    rsi,[rip+0x2bbfd]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  4187fb:	lea    rdi,[rip+0x2bd06]        # 444508 <_IO_stdin_used@@Base+0x18508>
  418802:	mov    edx,0x1d
  418807:	call   4050f0 <__assert_fail@plt>
  41880c:	lea    rcx,[rip+0x2c1dd]        # 4449f0 <_IO_stdin_used@@Base+0x189f0>
  418813:	lea    rsi,[rip+0x2bbde]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  41881a:	lea    rdi,[rip+0x2be0f]        # 444630 <_IO_stdin_used@@Base+0x18630>
  418821:	mov    edx,0x19
  418826:	call   4050f0 <__assert_fail@plt>
  41882b:	lea    rcx,[rip+0x2c1de]        # 444a10 <_IO_stdin_used@@Base+0x18a10>
  418832:	lea    rsi,[rip+0x2bbbf]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  418839:	lea    rdi,[rip+0x2bd58]        # 444598 <_IO_stdin_used@@Base+0x18598>
  418840:	mov    edx,0x1f
  418845:	call   4050f0 <__assert_fail@plt>
  41884a:	lea    rcx,[rip+0x2c1ff]        # 444a50 <_IO_stdin_used@@Base+0x18a50>
  418851:	lea    rsi,[rip+0x2bba0]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  418858:	lea    rdi,[rip+0x2bc19]        # 444478 <_IO_stdin_used@@Base+0x18478>
  41885f:	mov    edx,0x17
  418864:	call   4050f0 <__assert_fail@plt>
  418869:	call   4050d0 <__stack_chk_fail@plt>
  41886e:	lea    rcx,[rip+0x2c13b]        # 4449b0 <_IO_stdin_used@@Base+0x189b0>
  418875:	lea    rsi,[rip+0x2bb7c]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  41887c:	lea    rdi,[rip+0x2bed5]        # 444758 <_IO_stdin_used@@Base+0x18758>
  418883:	mov    edx,0x21
  418888:	call   4050f0 <__assert_fail@plt>
  41888d:	lea    rcx,[rip+0x2c13c]        # 4449d0 <_IO_stdin_used@@Base+0x189d0>
  418894:	lea    rsi,[rip+0x2bb5d]        # 4443f8 <_IO_stdin_used@@Base+0x183f8>
  41889b:	lea    rdi,[rip+0x2be26]        # 4446c8 <_IO_stdin_used@@Base+0x186c8>
  4188a2:	mov    edx,0x1b
  4188a7:	call   4050f0 <__assert_fail@plt>
  4188ac:	nop    DWORD PTR [rax+0x0]
  4188b0:	push   r15
  4188b2:	push   r14
  4188b4:	push   r13
  4188b6:	push   r12
  4188b8:	push   rbp
  4188b9:	push   rbx
  4188ba:	sub    rsp,0x58
  4188be:	test   rdi,rdi
  4188c1:	je     4188cc <__flatcc_fb_gen_c_json_printer@@Base+0x18cc>
  4188c3:	cmp    DWORD PTR [rdi+0x4],0x53424642
  4188ca:	je     4188f0 <__flatcc_fb_gen_c_json_printer@@Base+0x18f0>
  4188cc:	lea    rcx,[rip+0x2c0bd]        # 444990 <_IO_stdin_used@@Base+0x18990>
  4188d3:	lea    rsi,[rip+0x2ba7e]        # 444358 <_IO_stdin_used@@Base+0x18358>
  4188da:	lea    rdi,[rip+0x2baef]        # 4443d0 <_IO_stdin_used@@Base+0x183d0>
  4188e1:	mov    edx,0xed
  4188e6:	call   4050f0 <__assert_fail@plt>
  4188eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4188f0:	mov    eax,DWORD PTR [rdi]
  4188f2:	add    rdi,rax
  4188f5:	je     4188cc <__flatcc_fb_gen_c_json_printer@@Base+0x18cc>
  4188f7:	movsxd rax,DWORD PTR [rdi]
  4188fa:	mov    rbx,rdi
  4188fd:	sub    rbx,rax
  418900:	cmp    WORD PTR [rbx],0x5
  418904:	ja     418928 <__flatcc_fb_gen_c_json_printer@@Base+0x1928>
  418906:	lea    rcx,[rip+0x2c083]        # 444990 <_IO_stdin_used@@Base+0x18990>
  41890d:	lea    rsi,[rip+0x2ba44]        # 444358 <_IO_stdin_used@@Base+0x18358>
  418914:	lea    rdi,[rip+0x2bed5]        # 4447f0 <_IO_stdin_used@@Base+0x187f0>
  41891b:	mov    edx,0xed
  418920:	call   4050f0 <__assert_fail@plt>
  418925:	nop    DWORD PTR [rax]
  418928:	movzx  eax,WORD PTR [rbx+0x4]
  41892c:	test   ax,ax
  41892f:	je     418906 <__flatcc_fb_gen_c_json_printer@@Base+0x1906>
  418931:	add    rdi,rax
  418934:	mov    eax,DWORD PTR [rdi]
  418936:	lea    rax,[rdi+rax*1+0x4]
  41893b:	test   rax,rax
  41893e:	mov    QWORD PTR [rsp+0x38],rax
  418943:	mov    rbx,rax
  418946:	je     418f75 <__flatcc_fb_gen_c_json_printer@@Base+0x1f75>
  41894c:	mov    edx,DWORD PTR [rax-0x4]
  41894f:	test   edx,edx
  418951:	je     418f75 <__flatcc_fb_gen_c_json_printer@@Base+0x1f75>
  418957:	mov    eax,DWORD PTR [rax]
  418959:	add    rax,rbx
  41895c:	je     418fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa8>
  418962:	movsxd rdx,DWORD PTR [rax]
  418965:	mov    rbx,rax
  418968:	sub    rbx,rdx
  41896b:	cmp    WORD PTR [rbx],0x7
  41896f:	jbe    418f2e <__flatcc_fb_gen_c_json_printer@@Base+0x1f2e>
  418975:	movzx  edx,WORD PTR [rbx+0x6]
  418979:	test   dx,dx
  41897c:	je     418f2e <__flatcc_fb_gen_c_json_printer@@Base+0x1f2e>
  418982:	mov    rbx,QWORD PTR [rsp+0x38]
  418987:	mov    QWORD PTR [rsp+0x30],0x0
  418990:	add    rbx,0x4
  418994:	mov    QWORD PTR [rsp+0x48],rbx
  418999:	add    rax,rdx
  41899c:	mov    edx,DWORD PTR [rax]
  41899e:	lea    r13,[rax+rdx*1+0x4]
  4189a3:	test   r13,r13
  4189a6:	je     418ee1 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee1>
  4189ac:	mov    eax,DWORD PTR [r13-0x4]
  4189b0:	test   rax,rax
  4189b3:	mov    QWORD PTR [rsp+0x40],rax
  4189b8:	je     418ee1 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee1>
  4189be:	lea    r14,[rax-0x1]
  4189c2:	shr    rax,1
  4189c5:	mov    QWORD PTR [rsp+0x8],rax
  4189ca:	add    rax,rax
  4189cd:	mov    QWORD PTR [rsp+0x28],rax
  4189d2:	mov    QWORD PTR [rsp],r14
  4189d6:	jmp    418ae7 <__flatcc_fb_gen_c_json_printer@@Base+0x1ae7>
  4189db:	nop    DWORD PTR [rax+rax*1+0x0]
  4189e0:	mov    ecx,DWORD PTR [r13-0x4]
  4189e4:	mov    r14,rbp
  4189e7:	cmp    rcx,rbx
  4189ea:	lea    rbp,[r13+rbx*4+0x0]
  4189ef:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  4189f5:	mov    eax,DWORD PTR [rbp+0x0]
  4189f8:	mov    r15,rax
  4189fb:	add    rax,rbp
  4189fe:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418a04:	movsxd rdx,DWORD PTR [rax]
  418a07:	mov    rdi,rax
  418a0a:	sub    rdi,rdx
  418a0d:	cmp    WORD PTR [rdi],0x5
  418a11:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418a17:	movzx  edx,WORD PTR [rdi+0x4]
  418a1b:	test   dx,dx
  418a1e:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418a24:	add    rax,rdx
  418a27:	cmp    rcx,r14
  418a2a:	lea    r12,[r13+r14*4+0x0]
  418a2f:	mov    edx,DWORD PTR [rax]
  418a31:	lea    rdi,[rax+rdx*1+0x4]
  418a36:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418a3c:	mov    eax,DWORD PTR [r12]
  418a40:	mov    rcx,rax
  418a43:	add    rax,r12
  418a46:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418a4c:	movsxd rdx,DWORD PTR [rax]
  418a4f:	mov    rsi,rax
  418a52:	sub    rsi,rdx
  418a55:	cmp    WORD PTR [rsi],0x5
  418a59:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418a5f:	movzx  edx,WORD PTR [rsi+0x4]
  418a63:	test   dx,dx
  418a66:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418a6c:	add    rax,rdx
  418a6f:	mov    edx,DWORD PTR [rax]
  418a71:	lea    rsi,[rax+rdx*1+0x4]
  418a76:	test   rsi,rsi
  418a79:	je     418c50 <__flatcc_fb_gen_c_json_printer@@Base+0x1c50>
  418a7f:	mov    r9d,DWORD PTR [rsi-0x4]
  418a83:	test   rdi,rdi
  418a86:	je     418c40 <__flatcc_fb_gen_c_json_printer@@Base+0x1c40>
  418a8c:	mov    r10d,DWORD PTR [rdi-0x4]
  418a90:	mov    rdx,r9
  418a93:	mov    DWORD PTR [rsp+0x24],ecx
  418a97:	mov    QWORD PTR [rsp+0x18],r9
  418a9c:	cmp    r10,r9
  418a9f:	mov    QWORD PTR [rsp+0x10],r10
  418aa4:	cmovbe rdx,r10
  418aa8:	call   405070 <strncmp@plt>
  418aad:	test   eax,eax
  418aaf:	mov    r10,QWORD PTR [rsp+0x10]
  418ab4:	mov    r9,QWORD PTR [rsp+0x18]
  418ab9:	mov    ecx,DWORD PTR [rsp+0x24]
  418abd:	jne    418c00 <__flatcc_fb_gen_c_json_printer@@Base+0x1c00>
  418ac3:	cmp    r9,r10
  418ac6:	ja     418c06 <__flatcc_fb_gen_c_json_printer@@Base+0x1c06>
  418acc:	sub    QWORD PTR [rsp+0x8],0x1
  418ad2:	sub    QWORD PTR [rsp+0x28],0x2
  418ad8:	mov    rax,QWORD PTR [rsp+0x8]
  418add:	cmp    rax,0xffffffffffffffff
  418ae1:	je     418c70 <__flatcc_fb_gen_c_json_printer@@Base+0x1c70>
  418ae7:	mov    rbx,QWORD PTR [rsp+0x28]
  418aec:	cmp    QWORD PTR [rsp],rbx
  418af0:	jb     418acc <__flatcc_fb_gen_c_json_printer@@Base+0x1acc>
  418af2:	mov    rbx,QWORD PTR [rsp+0x8]
  418af7:	mov    rbp,QWORD PTR [rsp+0x28]
  418afc:	nop    DWORD PTR [rax+0x0]
  418b00:	cmp    QWORD PTR [rsp],rbp
  418b04:	jbe    4189e0 <__flatcc_fb_gen_c_json_printer@@Base+0x19e0>
  418b0a:	mov    ecx,DWORD PTR [r13-0x4]
  418b0e:	lea    rsi,[rbp*4+0x0]
  418b16:	lea    rax,[r13+rsi*1+0x0]
  418b1b:	cmp    rcx,rbp
  418b1e:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418b24:	mov    edx,DWORD PTR [rax]
  418b26:	add    rax,rdx
  418b29:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418b2f:	movsxd rdx,DWORD PTR [rax]
  418b32:	mov    rdi,rax
  418b35:	sub    rdi,rdx
  418b38:	cmp    WORD PTR [rdi],0x5
  418b3c:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418b42:	movzx  edx,WORD PTR [rdi+0x4]
  418b46:	test   dx,dx
  418b49:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418b4f:	add    rax,rdx
  418b52:	lea    r14,[rbp+0x1]
  418b56:	mov    edx,DWORD PTR [rax]
  418b58:	cmp    rcx,r14
  418b5b:	lea    rdi,[rax+rdx*1+0x4]
  418b60:	lea    rax,[r13+rsi*1+0x4]
  418b65:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418b6b:	mov    edx,DWORD PTR [rax]
  418b6d:	add    rax,rdx
  418b70:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418b76:	movsxd rdx,DWORD PTR [rax]
  418b79:	mov    rsi,rax
  418b7c:	sub    rsi,rdx
  418b7f:	cmp    WORD PTR [rsi],0x5
  418b83:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418b85:	movzx  edx,WORD PTR [rsi+0x4]
  418b89:	test   dx,dx
  418b8c:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418b8e:	add    rax,rdx
  418b91:	mov    edx,DWORD PTR [rax]
  418b93:	lea    rsi,[rax+rdx*1+0x4]
  418b98:	test   rsi,rsi
  418b9b:	je     418c60 <__flatcc_fb_gen_c_json_printer@@Base+0x1c60>
  418ba1:	test   rdi,rdi
  418ba4:	mov    r12d,DWORD PTR [rsi-0x4]
  418ba8:	je     418c30 <__flatcc_fb_gen_c_json_printer@@Base+0x1c30>
  418bae:	mov    r15d,DWORD PTR [rdi-0x4]
  418bb2:	mov    QWORD PTR [rsp+0x10],rcx
  418bb7:	cmp    r12,r15
  418bba:	mov    rdx,r15
  418bbd:	cmovbe rdx,r12
  418bc1:	call   405070 <strncmp@plt>
  418bc6:	test   eax,eax
  418bc8:	mov    rcx,QWORD PTR [rsp+0x10]
  418bcd:	je     418c33 <__flatcc_fb_gen_c_json_printer@@Base+0x1c33>
  418bcf:	cmovns r14,rbp
  418bd3:	jmp    4189e7 <__flatcc_fb_gen_c_json_printer@@Base+0x19e7>
  418bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  418be0:	lea    rcx,[rip+0x2bd49]        # 444930 <_IO_stdin_used@@Base+0x18930>
  418be7:	lea    rsi,[rip+0x2b76a]        # 444358 <_IO_stdin_used@@Base+0x18358>
  418bee:	lea    rdi,[rip+0x2bbfb]        # 4447f0 <_IO_stdin_used@@Base+0x187f0>
  418bf5:	mov    edx,0xc3
  418bfa:	call   4050f0 <__assert_fail@plt>
  418bff:	nop
  418c00:	jns    418acc <__flatcc_fb_gen_c_json_printer@@Base+0x1acc>
  418c06:	sub    rbx,r14
  418c09:	shl    ebx,0x2
  418c0c:	sub    ecx,ebx
  418c0e:	add    r15d,ebx
  418c11:	mov    rbx,r14
  418c14:	mov    DWORD PTR [rbp+0x0],ecx
  418c17:	lea    rbp,[r14+r14*1]
  418c1b:	cmp    QWORD PTR [rsp],rbp
  418c1f:	mov    DWORD PTR [r12],r15d
  418c23:	jae    418b00 <__flatcc_fb_gen_c_json_printer@@Base+0x1b00>
  418c29:	jmp    418acc <__flatcc_fb_gen_c_json_printer@@Base+0x1acc>
  418c2e:	xchg   ax,ax
  418c30:	xor    r15d,r15d
  418c33:	cmp    r12,r15
  418c36:	cmovbe r14,rbp
  418c3a:	jmp    4189e7 <__flatcc_fb_gen_c_json_printer@@Base+0x19e7>
  418c3f:	nop
  418c40:	xor    r10d,r10d
  418c43:	jmp    418ac3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac3>
  418c48:	nop    DWORD PTR [rax+rax*1+0x0]
  418c50:	xor    r9d,r9d
  418c53:	jmp    418a83 <__flatcc_fb_gen_c_json_printer@@Base+0x1a83>
  418c58:	nop    DWORD PTR [rax+rax*1+0x0]
  418c60:	mov    r14,rbp
  418c63:	jmp    4189e7 <__flatcc_fb_gen_c_json_printer@@Base+0x19e7>
  418c68:	nop    DWORD PTR [rax+rax*1+0x0]
  418c70:	mov    r14,QWORD PTR [rsp]
  418c74:	test   r14,r14
  418c77:	je     418ee1 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee1>
  418c7d:	mov    r15d,0x1
  418c83:	sub    r15,QWORD PTR [rsp+0x40]
  418c88:	mov    r12,r14
  418c8b:	mov    r14,r13
  418c8e:	lea    eax,[r15*4+0x0]
  418c96:	mov    DWORD PTR [rsp+0x24],eax
  418c9a:	nop    WORD PTR [rax+rax*1+0x0]
  418ca0:	mov    eax,DWORD PTR [r14+r12*4]
  418ca4:	mov    ebx,DWORD PTR [rsp+0x24]
  418ca8:	xor    ebp,ebp
  418caa:	mov    edx,DWORD PTR [r14]
  418cad:	sub    eax,ebx
  418caf:	add    edx,ebx
  418cb1:	mov    DWORD PTR [r14],eax
  418cb4:	xor    ebx,ebx
  418cb6:	mov    DWORD PTR [r14+r12*4],edx
  418cba:	sub    r12,0x1
  418cbe:	jmp    418dcd <__flatcc_fb_gen_c_json_printer@@Base+0x1dcd>
  418cc3:	nop    DWORD PTR [rax+rax*1+0x0]
  418cc8:	mov    ecx,DWORD PTR [r14-0x4]
  418ccc:	lea    r15,[r14+rbx*4]
  418cd0:	mov    r13,rbp
  418cd3:	cmp    rcx,rbx
  418cd6:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418cdc:	mov    eax,DWORD PTR [r15]
  418cdf:	mov    rbp,rax
  418ce2:	add    rax,r15
  418ce5:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418ceb:	movsxd rdx,DWORD PTR [rax]
  418cee:	mov    rdi,rax
  418cf1:	sub    rdi,rdx
  418cf4:	cmp    WORD PTR [rdi],0x5
  418cf8:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418cfe:	movzx  edx,WORD PTR [rdi+0x4]
  418d02:	test   dx,dx
  418d05:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418d0b:	add    rax,rdx
  418d0e:	cmp    rcx,r13
  418d11:	lea    r8,[r14+r13*4]
  418d15:	mov    edx,DWORD PTR [rax]
  418d17:	lea    rdi,[rax+rdx*1+0x4]
  418d1c:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418d22:	mov    eax,DWORD PTR [r8]
  418d25:	mov    rcx,rax
  418d28:	add    rax,r8
  418d2b:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418d31:	movsxd rdx,DWORD PTR [rax]
  418d34:	mov    rsi,rax
  418d37:	sub    rsi,rdx
  418d3a:	cmp    WORD PTR [rsi],0x5
  418d3e:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418d44:	movzx  edx,WORD PTR [rsi+0x4]
  418d48:	test   dx,dx
  418d4b:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418d51:	add    rax,rdx
  418d54:	mov    edx,DWORD PTR [rax]
  418d56:	lea    rsi,[rax+rdx*1+0x4]
  418d5b:	test   rsi,rsi
  418d5e:	je     418ed3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed3>
  418d64:	test   rdi,rdi
  418d67:	mov    r9d,DWORD PTR [rsi-0x4]
  418d6b:	je     418f68 <__flatcc_fb_gen_c_json_printer@@Base+0x1f68>
  418d71:	mov    r10d,DWORD PTR [rdi-0x4]
  418d75:	mov    DWORD PTR [rsp+0x8],ecx
  418d79:	mov    QWORD PTR [rsp],r8
  418d7d:	mov    QWORD PTR [rsp+0x10],r9
  418d82:	cmp    r9,r10
  418d85:	mov    rdx,r10
  418d88:	mov    QWORD PTR [rsp+0x18],r10
  418d8d:	cmovbe rdx,r9
  418d91:	call   405070 <strncmp@plt>
  418d96:	test   eax,eax
  418d98:	mov    r8,QWORD PTR [rsp]
  418d9c:	mov    ecx,DWORD PTR [rsp+0x8]
  418da0:	je     418ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec0>
  418da6:	jns    418ed3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed3>
  418dac:	sub    rbx,r13
  418daf:	shl    ebx,0x2
  418db2:	add    ebp,ebx
  418db4:	sub    ecx,ebx
  418db6:	mov    rbx,r13
  418db9:	mov    DWORD PTR [r15],ecx
  418dbc:	mov    DWORD PTR [r8],ebp
  418dbf:	lea    rbp,[r13+r13*1+0x0]
  418dc4:	cmp    r12,rbp
  418dc7:	jb     418ed3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed3>
  418dcd:	cmp    r12,rbp
  418dd0:	jbe    418cc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc8>
  418dd6:	mov    ecx,DWORD PTR [r14-0x4]
  418dda:	lea    rsi,[rbp*4+0x0]
  418de2:	lea    rax,[r14+rsi*1]
  418de6:	cmp    rcx,rbp
  418de9:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418def:	mov    edx,DWORD PTR [rax]
  418df1:	add    rax,rdx
  418df4:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418dfa:	movsxd rdx,DWORD PTR [rax]
  418dfd:	mov    rdi,rax
  418e00:	sub    rdi,rdx
  418e03:	cmp    WORD PTR [rdi],0x5
  418e07:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418e0d:	movzx  edx,WORD PTR [rdi+0x4]
  418e11:	test   dx,dx
  418e14:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418e1a:	add    rax,rdx
  418e1d:	lea    r13,[rbp+0x1]
  418e21:	mov    edx,DWORD PTR [rax]
  418e23:	cmp    rcx,r13
  418e26:	lea    rdi,[rax+rdx*1+0x4]
  418e2b:	lea    rax,[r14+rsi*1+0x4]
  418e30:	jbe    418f84 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  418e36:	mov    edx,DWORD PTR [rax]
  418e38:	add    rax,rdx
  418e3b:	je     418fa3 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  418e41:	movsxd rdx,DWORD PTR [rax]
  418e44:	mov    rsi,rax
  418e47:	sub    rsi,rdx
  418e4a:	cmp    WORD PTR [rsi],0x5
  418e4e:	jbe    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418e54:	movzx  edx,WORD PTR [rsi+0x4]
  418e58:	test   dx,dx
  418e5b:	je     418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  418e61:	add    rax,rdx
  418e64:	mov    edx,DWORD PTR [rax]
  418e66:	lea    rsi,[rax+rdx*1+0x4]
  418e6b:	test   rsi,rsi
  418e6e:	je     418ccc <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
  418e74:	test   rdi,rdi
  418e77:	mov    r15d,DWORD PTR [rsi-0x4]
  418e7b:	je     418f70 <__flatcc_fb_gen_c_json_printer@@Base+0x1f70>
  418e81:	mov    r8d,DWORD PTR [rdi-0x4]
  418e85:	mov    QWORD PTR [rsp],rcx
  418e89:	cmp    r15,r8
  418e8c:	mov    rdx,r8
  418e8f:	mov    QWORD PTR [rsp+0x8],r8
  418e94:	cmovbe rdx,r15
  418e98:	call   405070 <strncmp@plt>
  418e9d:	test   eax,eax
  418e9f:	mov    rcx,QWORD PTR [rsp]
  418ea3:	je     418f50 <__flatcc_fb_gen_c_json_printer@@Base+0x1f50>
  418ea9:	test   eax,eax
  418eab:	lea    r15,[r14+rbx*4]
  418eaf:	js     418cd3 <__flatcc_fb_gen_c_json_printer@@Base+0x1cd3>
  418eb5:	jmp    418ccc <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
  418eba:	nop    WORD PTR [rax+rax*1+0x0]
  418ec0:	mov    r9,QWORD PTR [rsp+0x10]
  418ec5:	mov    r10,QWORD PTR [rsp+0x18]
  418eca:	cmp    r9,r10
  418ecd:	ja     418dac <__flatcc_fb_gen_c_json_printer@@Base+0x1dac>
  418ed3:	add    DWORD PTR [rsp+0x24],0x4
  418ed8:	test   r12,r12
  418edb:	jne    418ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ca0>
  418ee1:	mov    rax,QWORD PTR [rsp+0x38]
  418ee6:	add    QWORD PTR [rsp+0x30],0x1
  418eec:	mov    rbx,QWORD PTR [rsp+0x30]
  418ef1:	mov    eax,DWORD PTR [rax-0x4]
  418ef4:	cmp    rbx,rax
  418ef7:	jae    418f75 <__flatcc_fb_gen_c_json_printer@@Base+0x1f75>
  418ef9:	mov    rbx,QWORD PTR [rsp+0x48]
  418efe:	mov    eax,DWORD PTR [rbx]
  418f00:	add    rax,rbx
  418f03:	je     418fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa8>
  418f09:	movsxd rdx,DWORD PTR [rax]
  418f0c:	mov    rdi,rax
  418f0f:	sub    rdi,rdx
  418f12:	cmp    WORD PTR [rdi],0x7
  418f16:	jbe    418f2e <__flatcc_fb_gen_c_json_printer@@Base+0x1f2e>
  418f18:	movzx  edx,WORD PTR [rdi+0x6]
  418f1c:	add    rbx,0x4
  418f20:	mov    QWORD PTR [rsp+0x48],rbx
  418f25:	test   dx,dx
  418f28:	jne    418999 <__flatcc_fb_gen_c_json_printer@@Base+0x1999>
  418f2e:	lea    rcx,[rip+0x2ba3b]        # 444970 <_IO_stdin_used@@Base+0x18970>
  418f35:	lea    rsi,[rip+0x2b41c]        # 444358 <_IO_stdin_used@@Base+0x18358>
  418f3c:	lea    rdi,[rip+0x2b8ad]        # 4447f0 <_IO_stdin_used@@Base+0x187f0>
  418f43:	mov    edx,0xe0
  418f48:	call   4050f0 <__assert_fail@plt>
  418f4d:	nop    DWORD PTR [rax]
  418f50:	mov    r8,QWORD PTR [rsp+0x8]
  418f55:	cmp    r15,r8
  418f58:	cmova  rbp,r13
  418f5c:	jmp    418ccc <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
  418f61:	nop    DWORD PTR [rax+0x0]
  418f68:	xor    r10d,r10d
  418f6b:	jmp    418eca <__flatcc_fb_gen_c_json_printer@@Base+0x1eca>
  418f70:	xor    r8d,r8d
  418f73:	jmp    418f55 <__flatcc_fb_gen_c_json_printer@@Base+0x1f55>
  418f75:	add    rsp,0x58
  418f79:	pop    rbx
  418f7a:	pop    rbp
  418f7b:	pop    r12
  418f7d:	pop    r13
  418f7f:	pop    r14
  418f81:	pop    r15
  418f83:	ret    
  418f84:	lea    rcx,[rip+0x2b9c5]        # 444950 <_IO_stdin_used@@Base+0x18950>
  418f8b:	lea    rsi,[rip+0x2b3c6]        # 444358 <_IO_stdin_used@@Base+0x18358>
  418f92:	lea    rdi,[rip+0x2b87f]        # 444818 <_IO_stdin_used@@Base+0x18818>
  418f99:	mov    edx,0xc0
  418f9e:	call   4050f0 <__assert_fail@plt>
  418fa3:	call   40524b <__sprintf_chk@plt+0x3b>
  418fa8:	lea    rcx,[rip+0x2b9c1]        # 444970 <_IO_stdin_used@@Base+0x18970>
  418faf:	lea    rsi,[rip+0x2b3a2]        # 444358 <_IO_stdin_used@@Base+0x18358>
  418fb6:	lea    rdi,[rip+0x2b413]        # 4443d0 <_IO_stdin_used@@Base+0x183d0>
  418fbd:	mov    edx,0xe0
  418fc2:	call   4050f0 <__assert_fail@plt>
  418fc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418fd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  418fd0:	push   r14
  418fd2:	push   r13
  418fd4:	mov    r13,rdi
  418fd7:	push   r12
  418fd9:	push   rbp
  418fda:	mov    r14,rsi
  418fdd:	push   rbx
  418fde:	mov    rbp,rdx
  418fe1:	mov    r12,rcx
  418fe4:	sub    rsp,0x190
  418feb:	mov    rdi,rsp
  418fee:	mov    rbx,rsp
  418ff1:	mov    rax,QWORD PTR fs:0x28
  418ffa:	mov    QWORD PTR [rsp+0x188],rax
  419002:	xor    eax,eax
  419004:	call   4267c0 <flatcc_builder_init@@Base>
  419009:	mov    esi,DWORD PTR [r13+0xd8]
  419010:	lea    rdx,[r13+0xdc]
  419017:	mov    rcx,r14
  41901a:	mov    rdi,rsp
  41901d:	call   417ac0 <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
  419022:	mov    rdx,QWORD PTR [r12]
  419026:	mov    rsi,rbp
  419029:	mov    rdi,rsp
  41902c:	call   429db0 <flatcc_builder_copy_buffer@@Base>
  419031:	test   rax,rax
  419034:	je     41903e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6e>
  419036:	mov    rdi,rbp
  419039:	call   4188b0 <__flatcc_fb_gen_c_json_printer@@Base+0x18b0>
  41903e:	mov    rdi,rbx
  419041:	call   429ca0 <flatcc_builder_get_buffer_size@@Base>
  419046:	mov    rdi,rbx
  419049:	mov    QWORD PTR [r12],rax
  41904d:	call   426990 <flatcc_builder_clear@@Base>
  419052:	mov    rcx,QWORD PTR [rsp+0x188]
  41905a:	xor    rcx,QWORD PTR fs:0x28
  419063:	mov    rax,rbp
  419066:	jne    419078 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa8>
  419068:	add    rsp,0x190
  41906f:	pop    rbx
  419070:	pop    rbp
  419071:	pop    r12
  419073:	pop    r13
  419075:	pop    r14
  419077:	ret    
  419078:	call   4050d0 <__stack_chk_fail@plt>
  41907d:	nop    DWORD PTR [rax]

0000000000419080 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  419080:	push   r13
  419082:	push   r12
  419084:	mov    r13,rsi
  419087:	push   rbp
  419088:	push   rbx
  419089:	mov    rbp,rdi
  41908c:	mov    r12,rdx
  41908f:	sub    rsp,0x198
  419096:	mov    rdi,rsp
  419099:	mov    rbx,rsp
  41909c:	mov    rax,QWORD PTR fs:0x28
  4190a5:	mov    QWORD PTR [rsp+0x188],rax
  4190ad:	xor    eax,eax
  4190af:	call   4267c0 <flatcc_builder_init@@Base>
  4190b4:	mov    esi,DWORD PTR [rbp+0xd8]
  4190ba:	lea    rdx,[rbp+0xdc]
  4190c1:	mov    rcx,r13
  4190c4:	mov    rdi,rsp
  4190c7:	xor    ebp,ebp
  4190c9:	call   417ac0 <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
  4190ce:	test   eax,eax
  4190d0:	jne    4190ed <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x6d>
  4190d2:	mov    rsi,r12
  4190d5:	mov    rdi,rsp
  4190d8:	call   429e00 <flatcc_builder_finalize_buffer@@Base>
  4190dd:	test   rax,rax
  4190e0:	mov    rbp,rax
  4190e3:	je     4190ed <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x6d>
  4190e5:	mov    rdi,rax
  4190e8:	call   4188b0 <__flatcc_fb_gen_c_json_printer@@Base+0x18b0>
  4190ed:	mov    rdi,rbx
  4190f0:	call   426990 <flatcc_builder_clear@@Base>
  4190f5:	mov    rcx,QWORD PTR [rsp+0x188]
  4190fd:	xor    rcx,QWORD PTR fs:0x28
  419106:	mov    rax,rbp
  419109:	jne    419119 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x99>
  41910b:	add    rsp,0x198
  419112:	pop    rbx
  419113:	pop    rbp
  419114:	pop    r12
  419116:	pop    r13
  419118:	ret    
  419119:	call   4050d0 <__stack_chk_fail@plt>
  41911e:	xchg   ax,ax

0000000000419120 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  419120:	push   r15
  419122:	push   r14
  419124:	push   r13
  419126:	push   r12
  419128:	mov    r12,rsi
  41912b:	push   rbp
  41912c:	push   rbx
  41912d:	mov    rbp,rdi
  419130:	sub    rsp,0x18
  419134:	mov    rbx,QWORD PTR [rdi+0x108]
  41913b:	mov    r14d,DWORD PTR [rdi+0x80]
  419142:	mov    rax,QWORD PTR fs:0x28
  41914b:	mov    QWORD PTR [rsp+0x8],rax
  419150:	xor    eax,eax
  419152:	mov    r13,QWORD PTR [rsi+0x110]
  419159:	test   rbx,rbx
  41915c:	je     419280 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
  419162:	mov    rdi,rbx
  419165:	call   4050c0 <strlen@plt>
  41916a:	mov    r15,rax
  41916d:	mov    rdi,r13
  419170:	call   4050c0 <strlen@plt>
  419175:	test   r14d,r14d
  419178:	je     419230 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x110>
  41917e:	mov    rax,QWORD PTR [rip+0x36e4b]        # 44ffd0 <stdout@GLIBC_2.2.5>
  419185:	mov    rbx,QWORD PTR [rax]
  419188:	test   rbx,rbx
  41918b:	je     4192d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
  419191:	mov    rdi,rbp
  419194:	mov    rdx,rsp
  419197:	mov    rsi,r12
  41919a:	call   419080 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  41919f:	test   rax,rax
  4191a2:	mov    rbp,rax
  4191a5:	je     419290 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
  4191ab:	mov    rdx,QWORD PTR [rsp]
  4191af:	mov    rcx,rbx
  4191b2:	mov    esi,0x1
  4191b7:	mov    rdi,rax
  4191ba:	xor    r12d,r12d
  4191bd:	call   4051e0 <fwrite@plt>
  4191c2:	cmp    rax,QWORD PTR [rsp]
  4191c6:	je     4191eb <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb>
  4191c8:	mov    rax,QWORD PTR [rip+0x36e19]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4191cf:	lea    rdx,[rip+0x2b6da]        # 4448b0 <_IO_stdin_used@@Base+0x188b0>
  4191d6:	mov    esi,0x1
  4191db:	mov    r12d,0xffffffff
  4191e1:	mov    rdi,QWORD PTR [rax]
  4191e4:	xor    eax,eax
  4191e6:	call   4051f0 <__fprintf_chk@plt>
  4191eb:	mov    rdi,rbp
  4191ee:	call   405040 <free@plt>
  4191f3:	mov    rax,QWORD PTR [rip+0x36dd6]        # 44ffd0 <stdout@GLIBC_2.2.5>
  4191fa:	cmp    QWORD PTR [rax],rbx
  4191fd:	je     419207 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe7>
  4191ff:	mov    rdi,rbx
  419202:	call   4050b0 <fclose@plt>
  419207:	mov    rcx,QWORD PTR [rsp+0x8]
  41920c:	xor    rcx,QWORD PTR fs:0x28
  419215:	mov    eax,r12d
  419218:	jne    4192e3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3>
  41921e:	add    rsp,0x18
  419222:	pop    rbx
  419223:	pop    rbp
  419224:	pop    r12
  419226:	pop    r13
  419228:	pop    r14
  41922a:	pop    r15
  41922c:	ret    
  41922d:	nop    DWORD PTR [rax]
  419230:	lea    r8,[rip+0x13e90]        # 42d0c7 <_IO_stdin_used@@Base+0x10c7>
  419237:	mov    rdx,r13
  41923a:	mov    r9d,0x1
  419240:	mov    rcx,rax
  419243:	mov    rsi,r15
  419246:	mov    rdi,rbx
  419249:	call   41c160 <__flatcc_fb_create_join_path_n@@Base>
  41924e:	test   rax,rax
  419251:	mov    r13,rax
  419254:	je     4192e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
  41925a:	lea    rsi,[rip+0x13eab]        # 42d10c <_IO_stdin_used@@Base+0x110c>
  419261:	mov    rdi,rax
  419264:	call   4051c0 <fopen@plt>
  419269:	test   rax,rax
  41926c:	mov    rbx,rax
  41926f:	je     4192b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x190>
  419271:	mov    rdi,r13
  419274:	call   405040 <free@plt>
  419279:	jmp    419188 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x68>
  41927e:	xchg   ax,ax
  419280:	xor    r15d,r15d
  419283:	lea    rbx,[rip+0x2ae64]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41928a:	jmp    41916d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d>
  41928f:	nop
  419290:	lea    rsi,[rip+0x2b5f1]        # 444888 <_IO_stdin_used@@Base+0x18888>
  419297:	mov    edi,0x1
  41929c:	xor    eax,eax
  41929e:	mov    r12d,0xffffffff
  4192a4:	call   4051b0 <__printf_chk@plt>
  4192a9:	jmp    4191f3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd3>
  4192ae:	xchg   ax,ax
  4192b0:	mov    rax,QWORD PTR [rip+0x36d31]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4192b7:	lea    rdx,[rip+0x2b592]        # 444850 <_IO_stdin_used@@Base+0x18850>
  4192be:	mov    rcx,r13
  4192c1:	mov    esi,0x1
  4192c6:	mov    rdi,QWORD PTR [rax]
  4192c9:	xor    eax,eax
  4192cb:	call   4051f0 <__fprintf_chk@plt>
  4192d0:	jmp    419271 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x151>
  4192d2:	nop    WORD PTR [rax+rax*1+0x0]
  4192d8:	mov    r12d,0xffffffff
  4192de:	jmp    419207 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe7>
  4192e3:	call   4050d0 <__stack_chk_fail@plt>
  4192e8:	mov    rax,QWORD PTR [rip+0x36cf9]        # 44ffe8 <stderr@GLIBC_2.2.5>
  4192ef:	lea    rdx,[rip+0x13caa]        # 42cfa0 <_IO_stdin_used@@Base+0xfa0>
  4192f6:	mov    esi,0x1
  4192fb:	mov    rdi,QWORD PTR [rax]
  4192fe:	xor    eax,eax
  419300:	call   4051f0 <__fprintf_chk@plt>
  419305:	mov    edi,0x1
  41930a:	call   4051d0 <exit@plt>
  41930f:	nop
  419310:	push   rbx
  419311:	mov    rbx,rdi
  419314:	mov    rdi,QWORD PTR [rdi]
  419317:	test   rdi,rdi
  41931a:	je     419321 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x201>
  41931c:	call   405040 <free@plt>
  419321:	mov    QWORD PTR [rbx],0x0
  419328:	mov    QWORD PTR [rbx+0x8],0x0
  419330:	mov    QWORD PTR [rbx+0x10],0x0
  419338:	mov    QWORD PTR [rbx+0x18],0x0
  419340:	pop    rbx
  419341:	ret    
  419342:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41934d:	nop    DWORD PTR [rax]
  419350:	push   r15
  419352:	push   r14
  419354:	push   r13
  419356:	push   r12
  419358:	push   rbp
  419359:	push   rbx
  41935a:	sub    rsp,0x38
  41935e:	mov    r12,QWORD PTR [rdi]
  419361:	mov    rcx,QWORD PTR fs:0x28
  41936a:	mov    QWORD PTR [rsp+0x28],rcx
  41936f:	xor    ecx,ecx
  419371:	mov    QWORD PTR [rsp+0x10],rdi
  419376:	mov    QWORD PTR [rsp+0x8],rsi
  41937b:	test   r12,r12
  41937e:	je     419400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e0>
  419384:	mov    rax,QWORD PTR [rsp+0x10]
  419389:	mov    rdi,QWORD PTR [rsp+0x8]
  41938e:	mov    r14,rdx
  419391:	lea    rcx,[rsp+0x20]
  419396:	mov    edx,0x2f693b52
  41939b:	mov    rsi,r14
  41939e:	mov    rax,QWORD PTR [rax+0x18]
  4193a2:	mov    QWORD PTR [rsp+0x18],rax
  4193a7:	lea    rbp,[rax-0x1]
  4193ab:	call   42a6b0 <cmetrohash64_1@@Base>
  4193b0:	mov    ecx,DWORD PTR [rsp+0x20]
  4193b4:	mov    rax,rbp
  4193b7:	and    rax,rcx
  4193ba:	lea    r15,[r12+rax*8]
  4193be:	mov    rbx,QWORD PTR [r15]
  4193c1:	test   rbx,rbx
  4193c4:	je     419400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e0>
  4193c6:	lea    r13,[rcx+0x1]
  4193ca:	nop    WORD PTR [rax+rax*1+0x0]
  4193d0:	cmp    rbx,0x2
  4193d4:	je     4193ea <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ca>
  4193d6:	mov    rdi,QWORD PTR [rsp+0x8]
  4193db:	mov    rdx,r14
  4193de:	mov    rsi,rbx
  4193e1:	call   405070 <strncmp@plt>
  4193e6:	test   eax,eax
  4193e8:	je     419428 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x308>
  4193ea:	mov    rax,r13
  4193ed:	add    r13,0x1
  4193f1:	and    rax,rbp
  4193f4:	lea    r15,[r12+rax*8]
  4193f8:	mov    rbx,QWORD PTR [r15]
  4193fb:	test   rbx,rbx
  4193fe:	jne    4193d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b0>
  419400:	xor    ebx,ebx
  419402:	mov    rcx,QWORD PTR [rsp+0x28]
  419407:	xor    rcx,QWORD PTR fs:0x28
  419410:	mov    rax,rbx
  419413:	jne    41943b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x31b>
  419415:	add    rsp,0x38
  419419:	pop    rbx
  41941a:	pop    rbp
  41941b:	pop    r12
  41941d:	pop    r13
  41941f:	pop    r14
  419421:	pop    r15
  419423:	ret    
  419424:	nop    DWORD PTR [rax+0x0]
  419428:	mov    rax,QWORD PTR [rsp+0x10]
  41942d:	mov    QWORD PTR [r15],0x2
  419434:	sub    QWORD PTR [rax+0x10],0x1
  419439:	jmp    419402 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e2>
  41943b:	call   4050d0 <__stack_chk_fail@plt>
  419440:	push   r14
  419442:	push   r13
  419444:	push   r12
  419446:	push   rbp
  419447:	mov    r12,rdi
  41944a:	push   rbx
  41944b:	mov    ebx,0x4
  419450:	sub    rsp,0x30
  419454:	mov    r13,QWORD PTR [rdi]
  419457:	mov    rax,QWORD PTR fs:0x28
  419460:	mov    QWORD PTR [rsp+0x28],rax
  419465:	xor    eax,eax
  419467:	cmp    QWORD PTR [rdi+0x10],rsi
  41946b:	cmovae rsi,QWORD PTR [rdi+0x10]
  419470:	cmp    rsi,0x2
  419474:	jbe    419493 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x373>
  419476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419480:	add    rbx,rbx
  419483:	imul   rax,rbx,0xb3
  41948a:	shr    rax,0x8
  41948e:	cmp    rsi,rax
  419491:	ja     419480 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x360>
  419493:	mov    esi,0x8
  419498:	mov    rdi,rbx
  41949b:	call   405130 <calloc@plt>
  4194a0:	test   rax,rax
  4194a3:	mov    QWORD PTR [rsp],rax
  4194a7:	je     41955f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x43f>
  4194ad:	mov    QWORD PTR [rsp+0x18],rbx
  4194b2:	xor    ebx,ebx
  4194b4:	cmp    QWORD PTR [r12+0x18],0x0
  4194ba:	mov    QWORD PTR [rsp+0x8],0x0
  4194c3:	mov    QWORD PTR [rsp+0x10],0x0
  4194cc:	mov    r14,rsp
  4194cf:	je     419512 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f2>
  4194d1:	nop    DWORD PTR [rax+0x0]
  4194d8:	mov    rbp,QWORD PTR [r13+rbx*8+0x0]
  4194dd:	test   rbp,rbp
  4194e0:	je     419507 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e7>
  4194e2:	cmp    rbp,0x2
  4194e6:	je     419507 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e7>
  4194e8:	mov    rdi,rbp
  4194eb:	call   4050c0 <strlen@plt>
  4194f0:	mov    r8d,0x3
  4194f6:	mov    rcx,rbp
  4194f9:	mov    rdx,rax
  4194fc:	mov    rsi,rbp
  4194ff:	mov    rdi,r14
  419502:	call   419570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  419507:	add    rbx,0x1
  41950b:	cmp    QWORD PTR [r12+0x18],rbx
  419510:	ja     4194d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b8>
  419512:	mov    rdi,r12
  419515:	call   419310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  41951a:	mov    rax,QWORD PTR [rsp]
  41951e:	mov    QWORD PTR [r12],rax
  419522:	mov    rax,QWORD PTR [rsp+0x8]
  419527:	mov    QWORD PTR [r12+0x8],rax
  41952c:	mov    rax,QWORD PTR [rsp+0x10]
  419531:	mov    QWORD PTR [r12+0x10],rax
  419536:	mov    rax,QWORD PTR [rsp+0x18]
  41953b:	mov    QWORD PTR [r12+0x18],rax
  419540:	xor    eax,eax
  419542:	mov    rdx,QWORD PTR [rsp+0x28]
  419547:	xor    rdx,QWORD PTR fs:0x28
  419550:	jne    419566 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x446>
  419552:	add    rsp,0x30
  419556:	pop    rbx
  419557:	pop    rbp
  419558:	pop    r12
  41955a:	pop    r13
  41955c:	pop    r14
  41955e:	ret    
  41955f:	mov    eax,0xffffffff
  419564:	jmp    419542 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x422>
  419566:	call   4050d0 <__stack_chk_fail@plt>
  41956b:	nop    DWORD PTR [rax+rax*1+0x0]
  419570:	push   r15
  419572:	push   r14
  419574:	mov    rax,rcx
  419577:	push   r13
  419579:	push   r12
  41957b:	push   rbp
  41957c:	push   rbx
  41957d:	sub    rsp,0x48
  419581:	mov    QWORD PTR [rsp+0x18],rcx
  419586:	mov    QWORD PTR [rsp+0x20],rdi
  41958b:	mov    rcx,QWORD PTR fs:0x28
  419594:	mov    QWORD PTR [rsp+0x38],rcx
  419599:	xor    ecx,ecx
  41959b:	test   rax,rax
  41959e:	mov    QWORD PTR [rsp+0x8],rsi
  4195a3:	mov    DWORD PTR [rsp+0x2c],r8d
  4195a8:	je     4197d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b6>
  4195ae:	cmp    QWORD PTR [rsp+0x18],0x2
  4195b4:	je     4197b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x697>
  4195ba:	cmp    QWORD PTR [rsp+0x18],0x1
  4195c0:	je     419798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x678>
  4195c6:	mov    rcx,QWORD PTR [rsp+0x20]
  4195cb:	mov    r13,rdx
  4195ce:	mov    rbx,QWORD PTR [rcx+0x18]
  4195d2:	mov    rsi,QWORD PTR [rcx+0x10]
  4195d6:	imul   rax,rbx,0xb3
  4195dd:	shr    rax,0x8
  4195e1:	cmp    rsi,rax
  4195e4:	jb     419600 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e0>
  4195e6:	add    rsi,rsi
  4195e9:	mov    rdi,rcx
  4195ec:	mov    rbx,rcx
  4195ef:	call   419440 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
  4195f4:	test   eax,eax
  4195f6:	jne    41976a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x64a>
  4195fc:	mov    rbx,QWORD PTR [rbx+0x18]
  419600:	mov    rax,QWORD PTR [rsp+0x20]
  419605:	mov    rdi,QWORD PTR [rsp+0x8]
  41960a:	lea    rcx,[rsp+0x30]
  41960f:	mov    edx,0x2f693b52
  419614:	mov    rsi,r13
  419617:	sub    rbx,0x1
  41961b:	mov    rbp,QWORD PTR [rax]
  41961e:	call   42a6b0 <cmetrohash64_1@@Base>
  419623:	mov    ecx,DWORD PTR [rsp+0x2c]
  419627:	mov    r8d,DWORD PTR [rsp+0x30]
  41962c:	mov    rax,rbx
  41962f:	lea    edx,[rcx-0x2]
  419632:	and    rax,r8
  419635:	cmp    edx,0x1
  419638:	jbe    419712 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f2>
  41963e:	lea    r14,[rbp+rax*8+0x0]
  419643:	lea    r12,[r8+0x1]
  419647:	mov    QWORD PTR [rsp+0x10],0x0
  419650:	mov    r15,QWORD PTR [r14]
  419653:	test   r15,r15
  419656:	jne    41968f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x56f>
  419658:	jmp    4196bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x59c>
  41965a:	nop    WORD PTR [rax+rax*1+0x0]
  419660:	mov    rdi,QWORD PTR [rsp+0x8]
  419665:	mov    rdx,r13
  419668:	mov    rsi,r15
  41966b:	call   405070 <strncmp@plt>
  419670:	test   eax,eax
  419672:	je     419700 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5e0>
  419678:	mov    rax,rbx
  41967b:	and    rax,r12
  41967e:	add    r12,0x1
  419682:	lea    r14,[rbp+rax*8+0x0]
  419687:	mov    r15,QWORD PTR [r14]
  41968a:	test   r15,r15
  41968d:	je     4196b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x590>
  41968f:	cmp    r15,0x2
  419693:	jne    419660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x540>
  419695:	mov    rax,QWORD PTR [rsp+0x10]
  41969a:	test   rax,rax
  41969d:	cmovne r14,rax
  4196a1:	mov    QWORD PTR [rsp+0x10],r14
  4196a6:	jmp    419678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x558>
  4196a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4196b0:	mov    rax,QWORD PTR [rsp+0x10]
  4196b5:	test   rax,rax
  4196b8:	cmovne r14,rax
  4196bc:	mov    rax,QWORD PTR [rsp+0x20]
  4196c1:	mov    QWORD PTR [rsp+0x10],r14
  4196c6:	xor    r15d,r15d
  4196c9:	mov    rcx,QWORD PTR [rsp+0x18]
  4196ce:	add    QWORD PTR [rax+0x10],0x1
  4196d3:	mov    rax,QWORD PTR [rsp+0x10]
  4196d8:	mov    QWORD PTR [rax],rcx
  4196db:	mov    rcx,QWORD PTR [rsp+0x38]
  4196e0:	xor    rcx,QWORD PTR fs:0x28
  4196e9:	mov    rax,r15
  4196ec:	jne    419765 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x645>
  4196ee:	add    rsp,0x48
  4196f2:	pop    rbx
  4196f3:	pop    rbp
  4196f4:	pop    r12
  4196f6:	pop    r13
  4196f8:	pop    r14
  4196fa:	pop    r15
  4196fc:	ret    
  4196fd:	nop    DWORD PTR [rax]
  419700:	mov    eax,DWORD PTR [rsp+0x2c]
  419704:	test   eax,eax
  419706:	jne    4196db <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bb>
  419708:	mov    rax,QWORD PTR [rsp+0x18]
  41970d:	mov    QWORD PTR [r14],rax
  419710:	jmp    4196db <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bb>
  419712:	lea    rdx,[rbp+rax*8+0x0]
  419717:	mov    rcx,QWORD PTR [rsp+0x20]
  41971c:	mov    rax,QWORD PTR [rdx]
  41971f:	add    QWORD PTR [rcx+0x10],0x1
  419724:	test   rax,rax
  419727:	je     419755 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x635>
  419729:	cmp    rax,0x2
  41972d:	je     419755 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x635>
  41972f:	add    r8,0x1
  419733:	jmp    41973e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x61e>
  419735:	nop    DWORD PTR [rax]
  419738:	cmp    rax,0x2
  41973c:	je     419755 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x635>
  41973e:	mov    rax,rbx
  419741:	and    rax,r8
  419744:	add    r8,0x1
  419748:	lea    rdx,[rbp+rax*8+0x0]
  41974d:	mov    rax,QWORD PTR [rdx]
  419750:	test   rax,rax
  419753:	jne    419738 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x618>
  419755:	mov    rax,QWORD PTR [rsp+0x18]
  41975a:	xor    r15d,r15d
  41975d:	mov    QWORD PTR [rdx],rax
  419760:	jmp    4196db <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bb>
  419765:	call   4050d0 <__stack_chk_fail@plt>
  41976a:	mov    rax,QWORD PTR [rip+0x36877]        # 44ffe8 <stderr@GLIBC_2.2.5>
  419771:	lea    rcx,[rip+0x2b388]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  419778:	lea    rdx,[rip+0x2b3f7]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  41977f:	mov    esi,0x1
  419784:	mov    rdi,QWORD PTR [rax]
  419787:	xor    eax,eax
  419789:	call   4051f0 <__fprintf_chk@plt>
  41978e:	mov    edi,0x1
  419793:	call   4051d0 <exit@plt>
  419798:	lea    rcx,[rip+0x2b3f1]        # 444b90 <_IO_stdin_used@@Base+0x18b90>
  41979f:	lea    rsi,[rip+0x2b2ea]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  4197a6:	lea    rdi,[rip+0x2b3b4]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  4197ad:	mov    edx,0x74
  4197b2:	call   4050f0 <__assert_fail@plt>
  4197b7:	lea    rcx,[rip+0x2b3d2]        # 444b90 <_IO_stdin_used@@Base+0x18b90>
  4197be:	lea    rsi,[rip+0x2b2cb]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  4197c5:	lea    rdi,[rip+0x2b37e]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  4197cc:	mov    edx,0x73
  4197d1:	call   4050f0 <__assert_fail@plt>
  4197d6:	lea    rcx,[rip+0x2b3b3]        # 444b90 <_IO_stdin_used@@Base+0x18b90>
  4197dd:	lea    rsi,[rip+0x2b2ac]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  4197e4:	lea    rdi,[rip+0x2b348]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  4197eb:	mov    edx,0x72
  4197f0:	call   4050f0 <__assert_fail@plt>
  4197f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419800:	push   r15
  419802:	push   r14
  419804:	push   r13
  419806:	push   r12
  419808:	push   rbp
  419809:	push   rbx
  41980a:	sub    rsp,0x18
  41980e:	mov    rax,QWORD PTR fs:0x28
  419817:	mov    QWORD PTR [rsp+0x8],rax
  41981c:	xor    eax,eax
  41981e:	test   rdi,rdi
  419821:	je     41988c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76c>
  419823:	mov    r14,rdx
  419826:	mov    r15,rcx
  419829:	mov    r12,QWORD PTR [rsi]
  41982c:	mov    r13,rdi
  41982f:	mov    rcx,rsp
  419832:	mov    edx,0x2f693b52
  419837:	mov    rsi,r15
  41983a:	mov    rdi,r14
  41983d:	call   42a6b0 <cmetrohash64_1@@Base>
  419842:	mov    ebp,DWORD PTR [rsp]
  419845:	sub    r12,0x1
  419849:	mov    rax,r12
  41984c:	and    rax,rbp
  41984f:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  419854:	test   rbx,rbx
  419857:	je     41988c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76c>
  419859:	add    rbp,0x1
  41985d:	nop    DWORD PTR [rax]
  419860:	cmp    rbx,0x2
  419864:	je     419878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x758>
  419866:	mov    rdx,r15
  419869:	mov    rsi,rbx
  41986c:	mov    rdi,r14
  41986f:	call   405070 <strncmp@plt>
  419874:	test   eax,eax
  419876:	je     41988e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76e>
  419878:	mov    rax,r12
  41987b:	and    rax,rbp
  41987e:	add    rbp,0x1
  419882:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  419887:	test   rbx,rbx
  41988a:	jne    419860 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x740>
  41988c:	xor    ebx,ebx
  41988e:	mov    rcx,QWORD PTR [rsp+0x8]
  419893:	xor    rcx,QWORD PTR fs:0x28
  41989c:	mov    rax,rbx
  41989f:	jne    4198b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x790>
  4198a1:	add    rsp,0x18
  4198a5:	pop    rbx
  4198a6:	pop    rbp
  4198a7:	pop    r12
  4198a9:	pop    r13
  4198ab:	pop    r14
  4198ad:	pop    r15
  4198af:	ret    
  4198b0:	call   4050d0 <__stack_chk_fail@plt>
  4198b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004198c0 <str_set_clear@@Base>:
  4198c0:	jmp    419310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  4198c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004198d0 <str_set_destroy@@Base>:
  4198d0:	test   rsi,rsi
  4198d3:	push   r14
  4198d5:	push   r13
  4198d7:	push   r12
  4198d9:	push   rbp
  4198da:	mov    rbp,rdi
  4198dd:	push   rbx
  4198de:	je     419917 <str_set_destroy@@Base+0x47>
  4198e0:	cmp    QWORD PTR [rdi+0x18],0x0
  4198e5:	mov    r12,QWORD PTR [rdi]
  4198e8:	je     419917 <str_set_destroy@@Base+0x47>
  4198ea:	mov    r13,rsi
  4198ed:	mov    r14,rdx
  4198f0:	xor    ebx,ebx
  4198f2:	nop    WORD PTR [rax+rax*1+0x0]
  4198f8:	mov    rsi,QWORD PTR [r12+rbx*8]
  4198fc:	test   rsi,rsi
  4198ff:	je     41990d <str_set_destroy@@Base+0x3d>
  419901:	cmp    rsi,0x2
  419905:	je     41990d <str_set_destroy@@Base+0x3d>
  419907:	mov    rdi,r14
  41990a:	call   r13
  41990d:	add    rbx,0x1
  419911:	cmp    rbx,QWORD PTR [rbp+0x18]
  419915:	jb     4198f8 <str_set_destroy@@Base+0x28>
  419917:	pop    rbx
  419918:	mov    rdi,rbp
  41991b:	pop    rbp
  41991c:	pop    r12
  41991e:	pop    r13
  419920:	pop    r14
  419922:	jmp    419310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  419927:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419930 <str_set_init@@Base>:
  419930:	push   rbp
  419931:	push   rbx
  419932:	mov    rbp,rdi
  419935:	mov    ebx,0x4
  41993a:	sub    rsp,0x8
  41993e:	cmp    rsi,0x2
  419942:	jbe    41995b <str_set_init@@Base+0x2b>
  419944:	nop    DWORD PTR [rax+0x0]
  419948:	add    rbx,rbx
  41994b:	imul   rax,rbx,0xb3
  419952:	shr    rax,0x8
  419956:	cmp    rsi,rax
  419959:	ja     419948 <str_set_init@@Base+0x18>
  41995b:	mov    esi,0x8
  419960:	mov    rdi,rbx
  419963:	call   405130 <calloc@plt>
  419968:	test   rax,rax
  41996b:	mov    QWORD PTR [rbp+0x0],rax
  41996f:	je     41998e <str_set_init@@Base+0x5e>
  419971:	mov    QWORD PTR [rbp+0x8],0x0
  419979:	mov    QWORD PTR [rbp+0x18],rbx
  41997d:	xor    eax,eax
  41997f:	mov    QWORD PTR [rbp+0x10],0x0
  419987:	add    rsp,0x8
  41998b:	pop    rbx
  41998c:	pop    rbp
  41998d:	ret    
  41998e:	mov    eax,0xffffffff
  419993:	jmp    419987 <str_set_init@@Base+0x57>
  419995:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004199a0 <str_set_resize@@Base>:
  4199a0:	jmp    419440 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
  4199a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004199b0 <str_set_insert@@Base>:
  4199b0:	jmp    419570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  4199b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004199c0 <str_set_insert_item@@Base>:
  4199c0:	push   r12
  4199c2:	push   rbp
  4199c3:	mov    r12d,edx
  4199c6:	push   rbx
  4199c7:	mov    rbp,rdi
  4199ca:	mov    rbx,rsi
  4199cd:	mov    rdi,rsi
  4199d0:	call   4050c0 <strlen@plt>
  4199d5:	mov    r8d,r12d
  4199d8:	mov    rcx,rbx
  4199db:	mov    rsi,rbx
  4199de:	mov    rdi,rbp
  4199e1:	mov    rdx,rax
  4199e4:	pop    rbx
  4199e5:	pop    rbp
  4199e6:	pop    r12
  4199e8:	jmp    419570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  4199ed:	nop    DWORD PTR [rax]

00000000004199f0 <str_set_find@@Base>:
  4199f0:	mov    rax,rsi
  4199f3:	lea    rsi,[rdi+0x18]
  4199f7:	mov    rdi,QWORD PTR [rdi]
  4199fa:	mov    rcx,rdx
  4199fd:	mov    rdx,rax
  419a00:	jmp    419800 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  419a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000419a10 <str_set_find_item@@Base>:
  419a10:	push   rbp
  419a11:	push   rbx
  419a12:	mov    rbx,rdi
  419a15:	mov    rdi,rsi
  419a18:	mov    rbp,rsi
  419a1b:	sub    rsp,0x8
  419a1f:	call   4050c0 <strlen@plt>
  419a24:	mov    rdi,QWORD PTR [rbx]
  419a27:	add    rsp,0x8
  419a2b:	lea    rsi,[rbx+0x18]
  419a2f:	mov    rdx,rbp
  419a32:	mov    rcx,rax
  419a35:	pop    rbx
  419a36:	pop    rbp
  419a37:	jmp    419800 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  419a3c:	nop    DWORD PTR [rax+0x0]

0000000000419a40 <str_set_remove@@Base>:
  419a40:	jmp    419350 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  419a45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000419a50 <str_set_remove_item@@Base>:
  419a50:	push   rbp
  419a51:	push   rbx
  419a52:	mov    rbp,rdi
  419a55:	mov    rdi,rsi
  419a58:	mov    rbx,rsi
  419a5b:	sub    rsp,0x8
  419a5f:	call   4050c0 <strlen@plt>
  419a64:	add    rsp,0x8
  419a68:	mov    rsi,rbx
  419a6b:	mov    rdi,rbp
  419a6e:	pop    rbx
  419a6f:	pop    rbp
  419a70:	mov    rdx,rax
  419a73:	jmp    419350 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  419a78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419a80 <str_set_visit@@Base>:
  419a80:	push   r14
  419a82:	push   r13
  419a84:	push   r12
  419a86:	push   rbp
  419a87:	push   rbx
  419a88:	cmp    QWORD PTR [rdi+0x18],0x0
  419a8d:	mov    r12,QWORD PTR [rdi]
  419a90:	je     419abf <str_set_visit@@Base+0x3f>
  419a92:	mov    rbp,rdi
  419a95:	mov    r14,rsi
  419a98:	mov    r13,rdx
  419a9b:	xor    ebx,ebx
  419a9d:	nop    DWORD PTR [rax]
  419aa0:	mov    rsi,QWORD PTR [r12+rbx*8]
  419aa4:	test   rsi,rsi
  419aa7:	je     419ab5 <str_set_visit@@Base+0x35>
  419aa9:	cmp    rsi,0x2
  419aad:	je     419ab5 <str_set_visit@@Base+0x35>
  419aaf:	mov    rdi,r13
  419ab2:	call   r14
  419ab5:	add    rbx,0x1
  419ab9:	cmp    rbx,QWORD PTR [rbp+0x18]
  419abd:	jb     419aa0 <str_set_visit@@Base+0x20>
  419abf:	pop    rbx
  419ac0:	pop    rbp
  419ac1:	pop    r12
  419ac3:	pop    r13
  419ac5:	pop    r14
  419ac7:	ret    
  419ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ad0:	push   rbx
  419ad1:	mov    rbx,rdi
  419ad4:	mov    rdi,QWORD PTR [rdi]
  419ad7:	test   rdi,rdi
  419ada:	je     419ae1 <str_set_visit@@Base+0x61>
  419adc:	call   405040 <free@plt>
  419ae1:	mov    QWORD PTR [rbx],0x0
  419ae8:	mov    QWORD PTR [rbx+0x8],0x0
  419af0:	mov    QWORD PTR [rbx+0x10],0x0
  419af8:	mov    QWORD PTR [rbx+0x18],0x0
  419b00:	pop    rbx
  419b01:	ret    
  419b02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419b0d:	nop    DWORD PTR [rax]
  419b10:	push   r15
  419b12:	push   r14
  419b14:	push   r13
  419b16:	push   r12
  419b18:	push   rbp
  419b19:	push   rbx
  419b1a:	sub    rsp,0x28
  419b1e:	mov    rax,QWORD PTR fs:0x28
  419b27:	mov    QWORD PTR [rsp+0x18],rax
  419b2c:	xor    eax,eax
  419b2e:	test   rdx,rdx
  419b31:	je     419cff <str_set_visit@@Base+0x27f>
  419b37:	cmp    rdx,0x2
  419b3b:	mov    r14,rdx
  419b3e:	je     419ce0 <str_set_visit@@Base+0x260>
  419b44:	cmp    rdx,0x1
  419b48:	je     419cc1 <str_set_visit@@Base+0x241>
  419b4e:	mov    rbx,QWORD PTR [rdi+0x18]
  419b52:	mov    r13,rsi
  419b55:	mov    rsi,QWORD PTR [rdi+0x10]
  419b59:	mov    r15,rdi
  419b5c:	mov    ebp,ecx
  419b5e:	imul   rax,rbx,0xb3
  419b65:	shr    rax,0x8
  419b69:	cmp    rsi,rax
  419b6c:	jb     419b82 <str_set_visit@@Base+0x102>
  419b6e:	add    rsi,rsi
  419b71:	call   419d30 <str_set_visit@@Base+0x2b0>
  419b76:	test   eax,eax
  419b78:	jne    419c93 <str_set_visit@@Base+0x213>
  419b7e:	mov    rbx,QWORD PTR [r15+0x18]
  419b82:	lea    rcx,[rsp+0x10]
  419b87:	lea    rdi,[rsp+0x8]
  419b8c:	mov    edx,0x2f693b52
  419b91:	mov    esi,0x8
  419b96:	mov    r12,QWORD PTR [r15]
  419b99:	mov    QWORD PTR [rsp+0x8],r13
  419b9e:	call   42a6b0 <cmetrohash64_1@@Base>
  419ba3:	mov    edx,DWORD PTR [rsp+0x10]
  419ba7:	sub    rbx,0x1
  419bab:	lea    ecx,[rbp-0x2]
  419bae:	mov    rax,rbx
  419bb1:	and    rax,rdx
  419bb4:	cmp    ecx,0x1
  419bb7:	jbe    419c4e <str_set_visit@@Base+0x1ce>
  419bbd:	lea    rcx,[r12+rax*8]
  419bc1:	add    rdx,0x1
  419bc5:	xor    esi,esi
  419bc7:	mov    rax,QWORD PTR [rcx]
  419bca:	test   rax,rax
  419bcd:	jne    419bf3 <str_set_visit@@Base+0x173>
  419bcf:	jmp    419c49 <str_set_visit@@Base+0x1c9>
  419bd1:	nop    DWORD PTR [rax+0x0]
  419bd8:	cmp    r13,rax
  419bdb:	je     419c40 <str_set_visit@@Base+0x1c0>
  419bdd:	mov    rax,rbx
  419be0:	and    rax,rdx
  419be3:	add    rdx,0x1
  419be7:	lea    rcx,[r12+rax*8]
  419beb:	mov    rax,QWORD PTR [rcx]
  419bee:	test   rax,rax
  419bf1:	je     419c08 <str_set_visit@@Base+0x188>
  419bf3:	cmp    rax,0x2
  419bf7:	jne    419bd8 <str_set_visit@@Base+0x158>
  419bf9:	test   rsi,rsi
  419bfc:	cmove  rsi,rcx
  419c00:	jmp    419bdd <str_set_visit@@Base+0x15d>
  419c02:	nop    WORD PTR [rax+rax*1+0x0]
  419c08:	test   rsi,rsi
  419c0b:	cmove  rsi,rcx
  419c0f:	add    QWORD PTR [r15+0x10],0x1
  419c14:	xor    eax,eax
  419c16:	mov    QWORD PTR [rsi],r14
  419c19:	mov    rdi,QWORD PTR [rsp+0x18]
  419c1e:	xor    rdi,QWORD PTR fs:0x28
  419c27:	jne    419d1e <str_set_visit@@Base+0x29e>
  419c2d:	add    rsp,0x28
  419c31:	pop    rbx
  419c32:	pop    rbp
  419c33:	pop    r12
  419c35:	pop    r13
  419c37:	pop    r14
  419c39:	pop    r15
  419c3b:	ret    
  419c3c:	nop    DWORD PTR [rax+0x0]
  419c40:	test   ebp,ebp
  419c42:	jne    419c19 <str_set_visit@@Base+0x199>
  419c44:	mov    QWORD PTR [rcx],r14
  419c47:	jmp    419c19 <str_set_visit@@Base+0x199>
  419c49:	mov    rsi,rcx
  419c4c:	jmp    419c0f <str_set_visit@@Base+0x18f>
  419c4e:	lea    rcx,[r12+rax*8]
  419c52:	add    QWORD PTR [r15+0x10],0x1
  419c57:	mov    rax,QWORD PTR [rcx]
  419c5a:	test   rax,rax
  419c5d:	je     419c8c <str_set_visit@@Base+0x20c>
  419c5f:	cmp    rax,0x2
  419c63:	je     419c8c <str_set_visit@@Base+0x20c>
  419c65:	add    rdx,0x1
  419c69:	jmp    419c76 <str_set_visit@@Base+0x1f6>
  419c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  419c70:	cmp    rax,0x2
  419c74:	je     419c8c <str_set_visit@@Base+0x20c>
  419c76:	mov    rax,rbx
  419c79:	and    rax,rdx
  419c7c:	add    rdx,0x1
  419c80:	lea    rcx,[r12+rax*8]
  419c84:	mov    rax,QWORD PTR [rcx]
  419c87:	test   rax,rax
  419c8a:	jne    419c70 <str_set_visit@@Base+0x1f0>
  419c8c:	mov    QWORD PTR [rcx],r14
  419c8f:	xor    eax,eax
  419c91:	jmp    419c19 <str_set_visit@@Base+0x199>
  419c93:	mov    rax,QWORD PTR [rip+0x3634e]        # 44ffe8 <stderr@GLIBC_2.2.5>
  419c9a:	lea    rcx,[rip+0x2ae5f]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  419ca1:	lea    rdx,[rip+0x2aece]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  419ca8:	mov    esi,0x1
  419cad:	mov    rdi,QWORD PTR [rax]
  419cb0:	xor    eax,eax
  419cb2:	call   4051f0 <__fprintf_chk@plt>
  419cb7:	mov    edi,0x1
  419cbc:	call   4051d0 <exit@plt>
  419cc1:	lea    rcx,[rip+0x2aef0]        # 444bb8 <str_set_missing@@Base+0x8>
  419cc8:	lea    rsi,[rip+0x2adc1]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  419ccf:	lea    rdi,[rip+0x2ae8b]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  419cd6:	mov    edx,0x74
  419cdb:	call   4050f0 <__assert_fail@plt>
  419ce0:	lea    rcx,[rip+0x2aed1]        # 444bb8 <str_set_missing@@Base+0x8>
  419ce7:	lea    rsi,[rip+0x2ada2]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  419cee:	lea    rdi,[rip+0x2ae55]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  419cf5:	mov    edx,0x73
  419cfa:	call   4050f0 <__assert_fail@plt>
  419cff:	lea    rcx,[rip+0x2aeb2]        # 444bb8 <str_set_missing@@Base+0x8>
  419d06:	lea    rsi,[rip+0x2ad83]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  419d0d:	lea    rdi,[rip+0x2ae1f]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  419d14:	mov    edx,0x72
  419d19:	call   4050f0 <__assert_fail@plt>
  419d1e:	call   4050d0 <__stack_chk_fail@plt>
  419d23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419d2e:	xchg   ax,ax
  419d30:	push   r13
  419d32:	push   r12
  419d34:	push   rbp
  419d35:	push   rbx
  419d36:	mov    rbp,rdi
  419d39:	mov    ebx,0x4
  419d3e:	sub    rsp,0x38
  419d42:	mov    r12,QWORD PTR [rdi]
  419d45:	mov    rax,QWORD PTR fs:0x28
  419d4e:	mov    QWORD PTR [rsp+0x28],rax
  419d53:	xor    eax,eax
  419d55:	cmp    QWORD PTR [rdi+0x10],rsi
  419d59:	cmovae rsi,QWORD PTR [rdi+0x10]
  419d5e:	cmp    rsi,0x2
  419d62:	jbe    419d7b <str_set_visit@@Base+0x2fb>
  419d64:	nop    DWORD PTR [rax+0x0]
  419d68:	add    rbx,rbx
  419d6b:	imul   rax,rbx,0xb3
  419d72:	shr    rax,0x8
  419d76:	cmp    rsi,rax
  419d79:	ja     419d68 <str_set_visit@@Base+0x2e8>
  419d7b:	mov    esi,0x8
  419d80:	mov    rdi,rbx
  419d83:	call   405130 <calloc@plt>
  419d88:	test   rax,rax
  419d8b:	mov    QWORD PTR [rsp],rax
  419d8f:	je     419e31 <str_set_visit@@Base+0x3b1>
  419d95:	mov    QWORD PTR [rsp+0x18],rbx
  419d9a:	xor    ebx,ebx
  419d9c:	cmp    QWORD PTR [rbp+0x18],0x0
  419da1:	mov    QWORD PTR [rsp+0x8],0x0
  419daa:	mov    QWORD PTR [rsp+0x10],0x0
  419db3:	mov    r13,rsp
  419db6:	je     419de9 <str_set_visit@@Base+0x369>
  419db8:	nop    DWORD PTR [rax+rax*1+0x0]
  419dc0:	mov    rsi,QWORD PTR [r12+rbx*8]
  419dc4:	test   rsi,rsi
  419dc7:	je     419ddf <str_set_visit@@Base+0x35f>
  419dc9:	cmp    rsi,0x2
  419dcd:	je     419ddf <str_set_visit@@Base+0x35f>
  419dcf:	mov    ecx,0x3
  419dd4:	mov    rdx,rsi
  419dd7:	mov    rdi,r13
  419dda:	call   419b10 <str_set_visit@@Base+0x90>
  419ddf:	add    rbx,0x1
  419de3:	cmp    QWORD PTR [rbp+0x18],rbx
  419de7:	ja     419dc0 <str_set_visit@@Base+0x340>
  419de9:	mov    rdi,rbp
  419dec:	call   419ad0 <str_set_visit@@Base+0x50>
  419df1:	mov    rax,QWORD PTR [rsp]
  419df5:	mov    QWORD PTR [rbp+0x0],rax
  419df9:	mov    rax,QWORD PTR [rsp+0x8]
  419dfe:	mov    QWORD PTR [rbp+0x8],rax
  419e02:	mov    rax,QWORD PTR [rsp+0x10]
  419e07:	mov    QWORD PTR [rbp+0x10],rax
  419e0b:	mov    rax,QWORD PTR [rsp+0x18]
  419e10:	mov    QWORD PTR [rbp+0x18],rax
  419e14:	xor    eax,eax
  419e16:	mov    rdx,QWORD PTR [rsp+0x28]
  419e1b:	xor    rdx,QWORD PTR fs:0x28
  419e24:	jne    419e38 <str_set_visit@@Base+0x3b8>
  419e26:	add    rsp,0x38
  419e2a:	pop    rbx
  419e2b:	pop    rbp
  419e2c:	pop    r12
  419e2e:	pop    r13
  419e30:	ret    
  419e31:	mov    eax,0xffffffff
  419e36:	jmp    419e16 <str_set_visit@@Base+0x396>
  419e38:	call   4050d0 <__stack_chk_fail@plt>
  419e3d:	nop    DWORD PTR [rax]
  419e40:	push   r12
  419e42:	push   rbp
  419e43:	push   rbx
  419e44:	sub    rsp,0x20
  419e48:	mov    rax,QWORD PTR fs:0x28
  419e51:	mov    QWORD PTR [rsp+0x18],rax
  419e56:	xor    eax,eax
  419e58:	test   rdi,rdi
  419e5b:	je     419ebf <str_set_visit@@Base+0x43f>
  419e5d:	mov    rbp,rdi
  419e60:	lea    rcx,[rsp+0x10]
  419e65:	lea    rdi,[rsp+0x8]
  419e6a:	mov    rbx,QWORD PTR [rsi]
  419e6d:	mov    QWORD PTR [rsp+0x8],rdx
  419e72:	mov    r12,rdx
  419e75:	mov    esi,0x8
  419e7a:	mov    edx,0x2f693b52
  419e7f:	call   42a6b0 <cmetrohash64_1@@Base>
  419e84:	mov    edx,DWORD PTR [rsp+0x10]
  419e88:	sub    rbx,0x1
  419e8c:	mov    rax,rbx
  419e8f:	and    rax,rdx
  419e92:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  419e97:	test   rax,rax
  419e9a:	je     419ebf <str_set_visit@@Base+0x43f>
  419e9c:	add    rdx,0x1
  419ea0:	cmp    rax,0x2
  419ea4:	je     419eab <str_set_visit@@Base+0x42b>
  419ea6:	cmp    r12,rax
  419ea9:	je     419ec1 <str_set_visit@@Base+0x441>
  419eab:	mov    rax,rdx
  419eae:	add    rdx,0x1
  419eb2:	and    rax,rbx
  419eb5:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  419eba:	test   rax,rax
  419ebd:	jne    419ea0 <str_set_visit@@Base+0x420>
  419ebf:	xor    eax,eax
  419ec1:	mov    rcx,QWORD PTR [rsp+0x18]
  419ec6:	xor    rcx,QWORD PTR fs:0x28
  419ecf:	jne    419eda <str_set_visit@@Base+0x45a>
  419ed1:	add    rsp,0x20
  419ed5:	pop    rbx
  419ed6:	pop    rbp
  419ed7:	pop    r12
  419ed9:	ret    
  419eda:	call   4050d0 <__stack_chk_fail@plt>
  419edf:	nop
  419ee0:	push   r13
  419ee2:	push   r12
  419ee4:	push   rbp
  419ee5:	push   rbx
  419ee6:	sub    rsp,0x28
  419eea:	mov    rbp,QWORD PTR [rdi]
  419eed:	mov    rax,QWORD PTR fs:0x28
  419ef6:	mov    QWORD PTR [rsp+0x18],rax
  419efb:	xor    eax,eax
  419efd:	test   rbp,rbp
  419f00:	je     419f72 <str_set_visit@@Base+0x4f2>
  419f02:	mov    rax,QWORD PTR [rdi+0x18]
  419f06:	lea    rcx,[rsp+0x10]
  419f0b:	mov    r13,rdi
  419f0e:	lea    rdi,[rsp+0x8]
  419f13:	mov    QWORD PTR [rsp+0x8],rsi
  419f18:	mov    edx,0x2f693b52
  419f1d:	mov    r12,rsi
  419f20:	mov    esi,0x8
  419f25:	lea    rbx,[rax-0x1]
  419f29:	call   42a6b0 <cmetrohash64_1@@Base>
  419f2e:	mov    edx,DWORD PTR [rsp+0x10]
  419f32:	mov    rax,rbx
  419f35:	and    rax,rdx
  419f38:	lea    rcx,[rbp+rax*8+0x0]
  419f3d:	mov    rax,QWORD PTR [rcx]
  419f40:	test   rax,rax
  419f43:	je     419f72 <str_set_visit@@Base+0x4f2>
  419f45:	add    rdx,0x1
  419f49:	nop    DWORD PTR [rax+0x0]
  419f50:	cmp    rax,0x2
  419f54:	je     419f5b <str_set_visit@@Base+0x4db>
  419f56:	cmp    r12,rax
  419f59:	je     419f90 <str_set_visit@@Base+0x510>
  419f5b:	mov    rax,rbx
  419f5e:	and    rax,rdx
  419f61:	add    rdx,0x1
  419f65:	lea    rcx,[rbp+rax*8+0x0]
  419f6a:	mov    rax,QWORD PTR [rcx]
  419f6d:	test   rax,rax
  419f70:	jne    419f50 <str_set_visit@@Base+0x4d0>
  419f72:	xor    eax,eax
  419f74:	mov    rsi,QWORD PTR [rsp+0x18]
  419f79:	xor    rsi,QWORD PTR fs:0x28
  419f82:	jne    419f9e <str_set_visit@@Base+0x51e>
  419f84:	add    rsp,0x28
  419f88:	pop    rbx
  419f89:	pop    rbp
  419f8a:	pop    r12
  419f8c:	pop    r13
  419f8e:	ret    
  419f8f:	nop
  419f90:	mov    QWORD PTR [rcx],0x2
  419f97:	sub    QWORD PTR [r13+0x10],0x1
  419f9c:	jmp    419f74 <str_set_visit@@Base+0x4f4>
  419f9e:	call   4050d0 <__stack_chk_fail@plt>
  419fa3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419fae:	xchg   ax,ax

0000000000419fb0 <ptr_set_clear@@Base>:
  419fb0:	jmp    419ad0 <str_set_visit@@Base+0x50>
  419fb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000419fc0 <ptr_set_destroy@@Base>:
  419fc0:	test   rsi,rsi
  419fc3:	push   r14
  419fc5:	push   r13
  419fc7:	push   r12
  419fc9:	push   rbp
  419fca:	mov    rbp,rdi
  419fcd:	push   rbx
  419fce:	je     41a007 <ptr_set_destroy@@Base+0x47>
  419fd0:	cmp    QWORD PTR [rdi+0x18],0x0
  419fd5:	mov    r12,QWORD PTR [rdi]
  419fd8:	je     41a007 <ptr_set_destroy@@Base+0x47>
  419fda:	mov    r13,rsi
  419fdd:	mov    r14,rdx
  419fe0:	xor    ebx,ebx
  419fe2:	nop    WORD PTR [rax+rax*1+0x0]
  419fe8:	mov    rsi,QWORD PTR [r12+rbx*8]
  419fec:	test   rsi,rsi
  419fef:	je     419ffd <ptr_set_destroy@@Base+0x3d>
  419ff1:	cmp    rsi,0x2
  419ff5:	je     419ffd <ptr_set_destroy@@Base+0x3d>
  419ff7:	mov    rdi,r14
  419ffa:	call   r13
  419ffd:	add    rbx,0x1
  41a001:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a005:	jb     419fe8 <ptr_set_destroy@@Base+0x28>
  41a007:	pop    rbx
  41a008:	mov    rdi,rbp
  41a00b:	pop    rbp
  41a00c:	pop    r12
  41a00e:	pop    r13
  41a010:	pop    r14
  41a012:	jmp    419ad0 <str_set_visit@@Base+0x50>
  41a017:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a020 <ptr_set_init@@Base>:
  41a020:	push   rbp
  41a021:	push   rbx
  41a022:	mov    rbp,rdi
  41a025:	mov    ebx,0x4
  41a02a:	sub    rsp,0x8
  41a02e:	cmp    rsi,0x2
  41a032:	jbe    41a04b <ptr_set_init@@Base+0x2b>
  41a034:	nop    DWORD PTR [rax+0x0]
  41a038:	add    rbx,rbx
  41a03b:	imul   rax,rbx,0xb3
  41a042:	shr    rax,0x8
  41a046:	cmp    rsi,rax
  41a049:	ja     41a038 <ptr_set_init@@Base+0x18>
  41a04b:	mov    esi,0x8
  41a050:	mov    rdi,rbx
  41a053:	call   405130 <calloc@plt>
  41a058:	test   rax,rax
  41a05b:	mov    QWORD PTR [rbp+0x0],rax
  41a05f:	je     41a07e <ptr_set_init@@Base+0x5e>
  41a061:	mov    QWORD PTR [rbp+0x8],0x0
  41a069:	mov    QWORD PTR [rbp+0x18],rbx
  41a06d:	xor    eax,eax
  41a06f:	mov    QWORD PTR [rbp+0x10],0x0
  41a077:	add    rsp,0x8
  41a07b:	pop    rbx
  41a07c:	pop    rbp
  41a07d:	ret    
  41a07e:	mov    eax,0xffffffff
  41a083:	jmp    41a077 <ptr_set_init@@Base+0x57>
  41a085:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a090 <ptr_set_resize@@Base>:
  41a090:	jmp    419d30 <str_set_visit@@Base+0x2b0>
  41a095:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a0a0 <ptr_set_insert@@Base>:
  41a0a0:	mov    rdx,rcx
  41a0a3:	mov    ecx,r8d
  41a0a6:	jmp    419b10 <str_set_visit@@Base+0x90>
  41a0ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a0b0 <ptr_set_insert_item@@Base>:
  41a0b0:	mov    ecx,edx
  41a0b2:	mov    rdx,rsi
  41a0b5:	jmp    419b10 <str_set_visit@@Base+0x90>
  41a0ba:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a0c0 <ptr_set_find@@Base>:
  41a0c0:	mov    rdx,rsi
  41a0c3:	lea    rsi,[rdi+0x18]
  41a0c7:	mov    rdi,QWORD PTR [rdi]
  41a0ca:	jmp    419e40 <str_set_visit@@Base+0x3c0>
  41a0cf:	nop

000000000041a0d0 <ptr_set_find_item@@Base>:
  41a0d0:	mov    rdx,rsi
  41a0d3:	lea    rsi,[rdi+0x18]
  41a0d7:	mov    rdi,QWORD PTR [rdi]
  41a0da:	jmp    419e40 <str_set_visit@@Base+0x3c0>
  41a0df:	nop

000000000041a0e0 <ptr_set_remove@@Base>:
  41a0e0:	jmp    419ee0 <str_set_visit@@Base+0x460>
  41a0e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a0f0 <ptr_set_remove_item@@Base>:
  41a0f0:	jmp    419ee0 <str_set_visit@@Base+0x460>
  41a0f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a100 <ptr_set_visit@@Base>:
  41a100:	push   r14
  41a102:	push   r13
  41a104:	push   r12
  41a106:	push   rbp
  41a107:	push   rbx
  41a108:	cmp    QWORD PTR [rdi+0x18],0x0
  41a10d:	mov    r12,QWORD PTR [rdi]
  41a110:	je     41a13f <ptr_set_visit@@Base+0x3f>
  41a112:	mov    rbp,rdi
  41a115:	mov    r14,rsi
  41a118:	mov    r13,rdx
  41a11b:	xor    ebx,ebx
  41a11d:	nop    DWORD PTR [rax]
  41a120:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a124:	test   rsi,rsi
  41a127:	je     41a135 <ptr_set_visit@@Base+0x35>
  41a129:	cmp    rsi,0x2
  41a12d:	je     41a135 <ptr_set_visit@@Base+0x35>
  41a12f:	mov    rdi,r13
  41a132:	call   r14
  41a135:	add    rbx,0x1
  41a139:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a13d:	jb     41a120 <ptr_set_visit@@Base+0x20>
  41a13f:	pop    rbx
  41a140:	pop    rbp
  41a141:	pop    r12
  41a143:	pop    r13
  41a145:	pop    r14
  41a147:	ret    
  41a148:	nop    DWORD PTR [rax+rax*1+0x0]
  41a150:	push   rbx
  41a151:	mov    rbx,rdi
  41a154:	mov    rdi,QWORD PTR [rdi]
  41a157:	test   rdi,rdi
  41a15a:	je     41a161 <ptr_set_visit@@Base+0x61>
  41a15c:	call   405040 <free@plt>
  41a161:	mov    QWORD PTR [rbx],0x0
  41a168:	mov    QWORD PTR [rbx+0x8],0x0
  41a170:	mov    QWORD PTR [rbx+0x10],0x0
  41a178:	mov    QWORD PTR [rbx+0x18],0x0
  41a180:	pop    rbx
  41a181:	ret    
  41a182:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a18d:	nop    DWORD PTR [rax]
  41a190:	push   r15
  41a192:	push   r14
  41a194:	push   r13
  41a196:	push   r12
  41a198:	push   rbp
  41a199:	push   rbx
  41a19a:	sub    rsp,0x38
  41a19e:	mov    r13,QWORD PTR [rdi]
  41a1a1:	mov    rcx,QWORD PTR fs:0x28
  41a1aa:	mov    QWORD PTR [rsp+0x28],rcx
  41a1af:	xor    ecx,ecx
  41a1b1:	mov    QWORD PTR [rsp+0x10],rdi
  41a1b6:	mov    QWORD PTR [rsp+0x8],rsi
  41a1bb:	test   r13,r13
  41a1be:	je     41a260 <ptr_set_visit@@Base+0x160>
  41a1c4:	mov    rax,QWORD PTR [rsp+0x10]
  41a1c9:	mov    rdi,QWORD PTR [rsp+0x8]
  41a1ce:	mov    r14,rdx
  41a1d1:	lea    rcx,[rsp+0x20]
  41a1d6:	mov    edx,0x2f693b52
  41a1db:	mov    rsi,r14
  41a1de:	mov    rax,QWORD PTR [rax+0x18]
  41a1e2:	mov    QWORD PTR [rsp+0x18],rax
  41a1e7:	lea    r15,[rax-0x1]
  41a1eb:	call   42a6b0 <cmetrohash64_1@@Base>
  41a1f0:	mov    ebp,DWORD PTR [rsp+0x20]
  41a1f4:	mov    rax,r15
  41a1f7:	and    rax,rbp
  41a1fa:	lea    r12,[r13+rax*8+0x0]
  41a1ff:	mov    rbx,QWORD PTR [r12]
  41a203:	test   rbx,rbx
  41a206:	je     41a260 <ptr_set_visit@@Base+0x160>
  41a208:	add    rbp,0x1
  41a20c:	jmp    41a228 <ptr_set_visit@@Base+0x128>
  41a20e:	xchg   ax,ax
  41a210:	mov    rax,r15
  41a213:	and    rax,rbp
  41a216:	add    rbp,0x1
  41a21a:	lea    r12,[r13+rax*8+0x0]
  41a21f:	mov    rbx,QWORD PTR [r12]
  41a223:	test   rbx,rbx
  41a226:	je     41a260 <ptr_set_visit@@Base+0x160>
  41a228:	cmp    rbx,0x2
  41a22c:	je     41a210 <ptr_set_visit@@Base+0x110>
  41a22e:	mov    rax,QWORD PTR [rbx+0x8]
  41a232:	cmp    r14,QWORD PTR [rax+0x8]
  41a236:	jne    41a210 <ptr_set_visit@@Base+0x110>
  41a238:	mov    rsi,QWORD PTR [rax]
  41a23b:	mov    rdi,QWORD PTR [rsp+0x8]
  41a240:	mov    rdx,r14
  41a243:	call   405120 <memcmp@plt>
  41a248:	test   eax,eax
  41a24a:	jne    41a210 <ptr_set_visit@@Base+0x110>
  41a24c:	mov    rax,QWORD PTR [rsp+0x10]
  41a251:	mov    QWORD PTR [r12],0x2
  41a259:	sub    QWORD PTR [rax+0x10],0x1
  41a25e:	jmp    41a262 <ptr_set_visit@@Base+0x162>
  41a260:	xor    ebx,ebx
  41a262:	mov    rcx,QWORD PTR [rsp+0x28]
  41a267:	xor    rcx,QWORD PTR fs:0x28
  41a270:	mov    rax,rbx
  41a273:	jne    41a284 <ptr_set_visit@@Base+0x184>
  41a275:	add    rsp,0x38
  41a279:	pop    rbx
  41a27a:	pop    rbp
  41a27b:	pop    r12
  41a27d:	pop    r13
  41a27f:	pop    r14
  41a281:	pop    r15
  41a283:	ret    
  41a284:	call   4050d0 <__stack_chk_fail@plt>
  41a289:	nop    DWORD PTR [rax+0x0]
  41a290:	push   r13
  41a292:	push   r12
  41a294:	push   rbp
  41a295:	push   rbx
  41a296:	mov    rbp,rdi
  41a299:	mov    ebx,0x4
  41a29e:	sub    rsp,0x38
  41a2a2:	mov    r12,QWORD PTR [rdi]
  41a2a5:	mov    rax,QWORD PTR fs:0x28
  41a2ae:	mov    QWORD PTR [rsp+0x28],rax
  41a2b3:	xor    eax,eax
  41a2b5:	cmp    QWORD PTR [rdi+0x10],rsi
  41a2b9:	cmovae rsi,QWORD PTR [rdi+0x10]
  41a2be:	cmp    rsi,0x2
  41a2c2:	jbe    41a2db <ptr_set_visit@@Base+0x1db>
  41a2c4:	nop    DWORD PTR [rax+0x0]
  41a2c8:	add    rbx,rbx
  41a2cb:	imul   rax,rbx,0xb3
  41a2d2:	shr    rax,0x8
  41a2d6:	cmp    rsi,rax
  41a2d9:	ja     41a2c8 <ptr_set_visit@@Base+0x1c8>
  41a2db:	mov    esi,0x8
  41a2e0:	mov    rdi,rbx
  41a2e3:	call   405130 <calloc@plt>
  41a2e8:	test   rax,rax
  41a2eb:	mov    QWORD PTR [rsp],rax
  41a2ef:	je     41a39a <ptr_set_visit@@Base+0x29a>
  41a2f5:	mov    QWORD PTR [rsp+0x18],rbx
  41a2fa:	xor    ebx,ebx
  41a2fc:	cmp    QWORD PTR [rbp+0x18],0x0
  41a301:	mov    QWORD PTR [rsp+0x8],0x0
  41a30a:	mov    QWORD PTR [rsp+0x10],0x0
  41a313:	mov    r13,rsp
  41a316:	je     41a352 <ptr_set_visit@@Base+0x252>
  41a318:	nop    DWORD PTR [rax+rax*1+0x0]
  41a320:	mov    rcx,QWORD PTR [r12+rbx*8]
  41a324:	test   rcx,rcx
  41a327:	je     41a348 <ptr_set_visit@@Base+0x248>
  41a329:	cmp    rcx,0x2
  41a32d:	je     41a348 <ptr_set_visit@@Base+0x248>
  41a32f:	mov    rax,QWORD PTR [rcx+0x8]
  41a333:	mov    r8d,0x3
  41a339:	mov    rdi,r13
  41a33c:	mov    rdx,QWORD PTR [rax+0x8]
  41a340:	mov    rsi,QWORD PTR [rax]
  41a343:	call   41a3b0 <ptr_set_visit@@Base+0x2b0>
  41a348:	add    rbx,0x1
  41a34c:	cmp    QWORD PTR [rbp+0x18],rbx
  41a350:	ja     41a320 <ptr_set_visit@@Base+0x220>
  41a352:	mov    rdi,rbp
  41a355:	call   41a150 <ptr_set_visit@@Base+0x50>
  41a35a:	mov    rax,QWORD PTR [rsp]
  41a35e:	mov    QWORD PTR [rbp+0x0],rax
  41a362:	mov    rax,QWORD PTR [rsp+0x8]
  41a367:	mov    QWORD PTR [rbp+0x8],rax
  41a36b:	mov    rax,QWORD PTR [rsp+0x10]
  41a370:	mov    QWORD PTR [rbp+0x10],rax
  41a374:	mov    rax,QWORD PTR [rsp+0x18]
  41a379:	mov    QWORD PTR [rbp+0x18],rax
  41a37d:	xor    eax,eax
  41a37f:	mov    rdi,QWORD PTR [rsp+0x28]
  41a384:	xor    rdi,QWORD PTR fs:0x28
  41a38d:	jne    41a3a1 <ptr_set_visit@@Base+0x2a1>
  41a38f:	add    rsp,0x38
  41a393:	pop    rbx
  41a394:	pop    rbp
  41a395:	pop    r12
  41a397:	pop    r13
  41a399:	ret    
  41a39a:	mov    eax,0xffffffff
  41a39f:	jmp    41a37f <ptr_set_visit@@Base+0x27f>
  41a3a1:	call   4050d0 <__stack_chk_fail@plt>
  41a3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a3b0:	push   r15
  41a3b2:	push   r14
  41a3b4:	push   r13
  41a3b6:	push   r12
  41a3b8:	push   rbp
  41a3b9:	push   rbx
  41a3ba:	sub    rsp,0x48
  41a3be:	mov    QWORD PTR [rsp+0x20],rdi
  41a3c3:	mov    QWORD PTR [rsp+0x10],rsi
  41a3c8:	mov    rdi,QWORD PTR fs:0x28
  41a3d1:	mov    QWORD PTR [rsp+0x38],rdi
  41a3d6:	xor    edi,edi
  41a3d8:	test   rcx,rcx
  41a3db:	mov    QWORD PTR [rsp+0x18],rcx
  41a3e0:	mov    DWORD PTR [rsp+0x2c],r8d
  41a3e5:	je     41a610 <ptr_set_visit@@Base+0x510>
  41a3eb:	cmp    QWORD PTR [rsp+0x18],0x2
  41a3f1:	je     41a5f1 <ptr_set_visit@@Base+0x4f1>
  41a3f7:	cmp    QWORD PTR [rsp+0x18],0x1
  41a3fd:	je     41a5d2 <ptr_set_visit@@Base+0x4d2>
  41a403:	mov    rbx,QWORD PTR [rsp+0x20]
  41a408:	mov    r14,rdx
  41a40b:	mov    r8,QWORD PTR [rbx+0x18]
  41a40f:	mov    rsi,QWORD PTR [rbx+0x10]
  41a413:	imul   rax,r8,0xb3
  41a41a:	shr    rax,0x8
  41a41e:	cmp    rsi,rax
  41a421:	jb     41a43a <ptr_set_visit@@Base+0x33a>
  41a423:	add    rsi,rsi
  41a426:	mov    rdi,rbx
  41a429:	call   41a290 <ptr_set_visit@@Base+0x190>
  41a42e:	test   eax,eax
  41a430:	jne    41a5a4 <ptr_set_visit@@Base+0x4a4>
  41a436:	mov    r8,QWORD PTR [rbx+0x18]
  41a43a:	mov    rax,QWORD PTR [rsp+0x20]
  41a43f:	mov    rdi,QWORD PTR [rsp+0x10]
  41a444:	lea    rcx,[rsp+0x30]
  41a449:	mov    edx,0x2f693b52
  41a44e:	mov    rsi,r14
  41a451:	lea    r12,[r8-0x1]
  41a455:	mov    r13,QWORD PTR [rax]
  41a458:	call   42a6b0 <cmetrohash64_1@@Base>
  41a45d:	mov    edi,DWORD PTR [rsp+0x2c]
  41a461:	mov    ebp,DWORD PTR [rsp+0x30]
  41a465:	mov    rax,r12
  41a468:	lea    edx,[rdi-0x2]
  41a46b:	and    rax,rbp
  41a46e:	cmp    edx,0x1
  41a471:	jbe    41a552 <ptr_set_visit@@Base+0x452>
  41a477:	lea    r15,[r13+rax*8+0x0]
  41a47c:	add    rbp,0x1
  41a480:	xor    ecx,ecx
  41a482:	mov    rbx,QWORD PTR [r15]
  41a485:	test   rbx,rbx
  41a488:	jne    41a4ab <ptr_set_visit@@Base+0x3ab>
  41a48a:	jmp    41a54d <ptr_set_visit@@Base+0x44d>
  41a48f:	nop
  41a490:	mov    rax,r12
  41a493:	and    rax,rbp
  41a496:	add    rbp,0x1
  41a49a:	lea    r15,[r13+rax*8+0x0]
  41a49f:	mov    rbx,QWORD PTR [r15]
  41a4a2:	test   rbx,rbx
  41a4a5:	je     41a530 <ptr_set_visit@@Base+0x430>
  41a4ab:	cmp    rbx,0x2
  41a4af:	je     41a510 <ptr_set_visit@@Base+0x410>
  41a4b1:	mov    rax,QWORD PTR [rbx+0x8]
  41a4b5:	cmp    r14,QWORD PTR [rax+0x8]
  41a4b9:	jne    41a490 <ptr_set_visit@@Base+0x390>
  41a4bb:	mov    rsi,QWORD PTR [rax]
  41a4be:	mov    rdi,QWORD PTR [rsp+0x10]
  41a4c3:	mov    rdx,r14
  41a4c6:	mov    QWORD PTR [rsp+0x8],rcx
  41a4cb:	call   405120 <memcmp@plt>
  41a4d0:	test   eax,eax
  41a4d2:	mov    rcx,QWORD PTR [rsp+0x8]
  41a4d7:	jne    41a490 <ptr_set_visit@@Base+0x390>
  41a4d9:	mov    eax,DWORD PTR [rsp+0x2c]
  41a4dd:	test   eax,eax
  41a4df:	je     41a520 <ptr_set_visit@@Base+0x420>
  41a4e1:	nop    DWORD PTR [rax+0x0]
  41a4e8:	mov    rdx,QWORD PTR [rsp+0x38]
  41a4ed:	xor    rdx,QWORD PTR fs:0x28
  41a4f6:	mov    rax,rbx
  41a4f9:	jne    41a62f <ptr_set_visit@@Base+0x52f>
  41a4ff:	add    rsp,0x48
  41a503:	pop    rbx
  41a504:	pop    rbp
  41a505:	pop    r12
  41a507:	pop    r13
  41a509:	pop    r14
  41a50b:	pop    r15
  41a50d:	ret    
  41a50e:	xchg   ax,ax
  41a510:	test   rcx,rcx
  41a513:	cmove  rcx,r15
  41a517:	jmp    41a490 <ptr_set_visit@@Base+0x390>
  41a51c:	nop    DWORD PTR [rax+0x0]
  41a520:	mov    rax,QWORD PTR [rsp+0x18]
  41a525:	mov    QWORD PTR [r15],rax
  41a528:	jmp    41a4e8 <ptr_set_visit@@Base+0x3e8>
  41a52a:	nop    WORD PTR [rax+rax*1+0x0]
  41a530:	test   rcx,rcx
  41a533:	cmove  rcx,r15
  41a537:	mov    rax,QWORD PTR [rsp+0x20]
  41a53c:	xor    ebx,ebx
  41a53e:	add    QWORD PTR [rax+0x10],0x1
  41a543:	mov    rax,QWORD PTR [rsp+0x18]
  41a548:	mov    QWORD PTR [rcx],rax
  41a54b:	jmp    41a4e8 <ptr_set_visit@@Base+0x3e8>
  41a54d:	mov    rcx,r15
  41a550:	jmp    41a537 <ptr_set_visit@@Base+0x437>
  41a552:	lea    rdx,[r13+rax*8+0x0]
  41a557:	mov    rdi,QWORD PTR [rsp+0x20]
  41a55c:	mov    rax,QWORD PTR [rdx]
  41a55f:	add    QWORD PTR [rdi+0x10],0x1
  41a564:	test   rax,rax
  41a567:	je     41a595 <ptr_set_visit@@Base+0x495>
  41a569:	cmp    rax,0x2
  41a56d:	je     41a595 <ptr_set_visit@@Base+0x495>
  41a56f:	add    rbp,0x1
  41a573:	jmp    41a57e <ptr_set_visit@@Base+0x47e>
  41a575:	nop    DWORD PTR [rax]
  41a578:	cmp    rax,0x2
  41a57c:	je     41a595 <ptr_set_visit@@Base+0x495>
  41a57e:	mov    rax,r12
  41a581:	and    rax,rbp
  41a584:	add    rbp,0x1
  41a588:	lea    rdx,[r13+rax*8+0x0]
  41a58d:	mov    rax,QWORD PTR [rdx]
  41a590:	test   rax,rax
  41a593:	jne    41a578 <ptr_set_visit@@Base+0x478>
  41a595:	mov    rax,QWORD PTR [rsp+0x18]
  41a59a:	xor    ebx,ebx
  41a59c:	mov    QWORD PTR [rdx],rax
  41a59f:	jmp    41a4e8 <ptr_set_visit@@Base+0x3e8>
  41a5a4:	mov    rax,QWORD PTR [rip+0x35a3d]        # 44ffe8 <stderr@GLIBC_2.2.5>
  41a5ab:	lea    rcx,[rip+0x2a54e]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  41a5b2:	lea    rdx,[rip+0x2a5bd]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  41a5b9:	mov    esi,0x1
  41a5be:	mov    rdi,QWORD PTR [rax]
  41a5c1:	xor    eax,eax
  41a5c3:	call   4051f0 <__fprintf_chk@plt>
  41a5c8:	mov    edi,0x1
  41a5cd:	call   4051d0 <exit@plt>
  41a5d2:	lea    rcx,[rip+0x2a607]        # 444be0 <ptr_set_missing@@Base+0x8>
  41a5d9:	lea    rsi,[rip+0x2a4b0]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41a5e0:	lea    rdi,[rip+0x2a57a]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  41a5e7:	mov    edx,0x74
  41a5ec:	call   4050f0 <__assert_fail@plt>
  41a5f1:	lea    rcx,[rip+0x2a5e8]        # 444be0 <ptr_set_missing@@Base+0x8>
  41a5f8:	lea    rsi,[rip+0x2a491]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41a5ff:	lea    rdi,[rip+0x2a544]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  41a606:	mov    edx,0x73
  41a60b:	call   4050f0 <__assert_fail@plt>
  41a610:	lea    rcx,[rip+0x2a5c9]        # 444be0 <ptr_set_missing@@Base+0x8>
  41a617:	lea    rsi,[rip+0x2a472]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41a61e:	lea    rdi,[rip+0x2a50e]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  41a625:	mov    edx,0x72
  41a62a:	call   4050f0 <__assert_fail@plt>
  41a62f:	call   4050d0 <__stack_chk_fail@plt>
  41a634:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a63f:	nop
  41a640:	push   r15
  41a642:	push   r14
  41a644:	push   r13
  41a646:	push   r12
  41a648:	push   rbp
  41a649:	push   rbx
  41a64a:	sub    rsp,0x18
  41a64e:	mov    rax,QWORD PTR fs:0x28
  41a657:	mov    QWORD PTR [rsp+0x8],rax
  41a65c:	xor    eax,eax
  41a65e:	test   rdi,rdi
  41a661:	je     41a700 <ptr_set_visit@@Base+0x600>
  41a667:	mov    r12,rdx
  41a66a:	mov    r14,rcx
  41a66d:	mov    r13,QWORD PTR [rsi]
  41a670:	mov    r15,rdi
  41a673:	mov    rcx,rsp
  41a676:	mov    edx,0x2f693b52
  41a67b:	mov    rsi,r14
  41a67e:	mov    rdi,r12
  41a681:	call   42a6b0 <cmetrohash64_1@@Base>
  41a686:	mov    ebp,DWORD PTR [rsp]
  41a689:	sub    r13,0x1
  41a68d:	mov    rax,r13
  41a690:	and    rax,rbp
  41a693:	mov    rbx,QWORD PTR [r15+rax*8]
  41a697:	test   rbx,rbx
  41a69a:	je     41a700 <ptr_set_visit@@Base+0x600>
  41a69c:	add    rbp,0x1
  41a6a0:	jmp    41a6bb <ptr_set_visit@@Base+0x5bb>
  41a6a2:	nop    WORD PTR [rax+rax*1+0x0]
  41a6a8:	mov    rax,r13
  41a6ab:	and    rax,rbp
  41a6ae:	add    rbp,0x1
  41a6b2:	mov    rbx,QWORD PTR [r15+rax*8]
  41a6b6:	test   rbx,rbx
  41a6b9:	je     41a700 <ptr_set_visit@@Base+0x600>
  41a6bb:	cmp    rbx,0x2
  41a6bf:	je     41a6a8 <ptr_set_visit@@Base+0x5a8>
  41a6c1:	mov    rax,QWORD PTR [rbx+0x8]
  41a6c5:	cmp    r14,QWORD PTR [rax+0x8]
  41a6c9:	jne    41a6a8 <ptr_set_visit@@Base+0x5a8>
  41a6cb:	mov    rsi,QWORD PTR [rax]
  41a6ce:	mov    rdx,r14
  41a6d1:	mov    rdi,r12
  41a6d4:	call   405120 <memcmp@plt>
  41a6d9:	test   eax,eax
  41a6db:	jne    41a6a8 <ptr_set_visit@@Base+0x5a8>
  41a6dd:	mov    rcx,QWORD PTR [rsp+0x8]
  41a6e2:	xor    rcx,QWORD PTR fs:0x28
  41a6eb:	mov    rax,rbx
  41a6ee:	jne    41a704 <ptr_set_visit@@Base+0x604>
  41a6f0:	add    rsp,0x18
  41a6f4:	pop    rbx
  41a6f5:	pop    rbp
  41a6f6:	pop    r12
  41a6f8:	pop    r13
  41a6fa:	pop    r14
  41a6fc:	pop    r15
  41a6fe:	ret    
  41a6ff:	nop
  41a700:	xor    ebx,ebx
  41a702:	jmp    41a6dd <ptr_set_visit@@Base+0x5dd>
  41a704:	call   4050d0 <__stack_chk_fail@plt>
  41a709:	nop    DWORD PTR [rax+0x0]

000000000041a710 <fb_symbol_table_clear@@Base>:
  41a710:	jmp    41a150 <ptr_set_visit@@Base+0x50>
  41a715:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a720 <fb_symbol_table_destroy@@Base>:
  41a720:	test   rsi,rsi
  41a723:	push   r14
  41a725:	push   r13
  41a727:	push   r12
  41a729:	push   rbp
  41a72a:	mov    rbp,rdi
  41a72d:	push   rbx
  41a72e:	je     41a767 <fb_symbol_table_destroy@@Base+0x47>
  41a730:	cmp    QWORD PTR [rdi+0x18],0x0
  41a735:	mov    r12,QWORD PTR [rdi]
  41a738:	je     41a767 <fb_symbol_table_destroy@@Base+0x47>
  41a73a:	mov    r13,rsi
  41a73d:	mov    r14,rdx
  41a740:	xor    ebx,ebx
  41a742:	nop    WORD PTR [rax+rax*1+0x0]
  41a748:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a74c:	test   rsi,rsi
  41a74f:	je     41a75d <fb_symbol_table_destroy@@Base+0x3d>
  41a751:	cmp    rsi,0x2
  41a755:	je     41a75d <fb_symbol_table_destroy@@Base+0x3d>
  41a757:	mov    rdi,r14
  41a75a:	call   r13
  41a75d:	add    rbx,0x1
  41a761:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a765:	jb     41a748 <fb_symbol_table_destroy@@Base+0x28>
  41a767:	pop    rbx
  41a768:	mov    rdi,rbp
  41a76b:	pop    rbp
  41a76c:	pop    r12
  41a76e:	pop    r13
  41a770:	pop    r14
  41a772:	jmp    41a150 <ptr_set_visit@@Base+0x50>
  41a777:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a780 <fb_symbol_table_init@@Base>:
  41a780:	push   rbp
  41a781:	push   rbx
  41a782:	mov    rbp,rdi
  41a785:	mov    ebx,0x4
  41a78a:	sub    rsp,0x8
  41a78e:	cmp    rsi,0x2
  41a792:	jbe    41a7ab <fb_symbol_table_init@@Base+0x2b>
  41a794:	nop    DWORD PTR [rax+0x0]
  41a798:	add    rbx,rbx
  41a79b:	imul   rax,rbx,0xb3
  41a7a2:	shr    rax,0x8
  41a7a6:	cmp    rsi,rax
  41a7a9:	ja     41a798 <fb_symbol_table_init@@Base+0x18>
  41a7ab:	mov    esi,0x8
  41a7b0:	mov    rdi,rbx
  41a7b3:	call   405130 <calloc@plt>
  41a7b8:	test   rax,rax
  41a7bb:	mov    QWORD PTR [rbp+0x0],rax
  41a7bf:	je     41a7de <fb_symbol_table_init@@Base+0x5e>
  41a7c1:	mov    QWORD PTR [rbp+0x8],0x0
  41a7c9:	mov    QWORD PTR [rbp+0x18],rbx
  41a7cd:	xor    eax,eax
  41a7cf:	mov    QWORD PTR [rbp+0x10],0x0
  41a7d7:	add    rsp,0x8
  41a7db:	pop    rbx
  41a7dc:	pop    rbp
  41a7dd:	ret    
  41a7de:	mov    eax,0xffffffff
  41a7e3:	jmp    41a7d7 <fb_symbol_table_init@@Base+0x57>
  41a7e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a7f0 <fb_symbol_table_resize@@Base>:
  41a7f0:	jmp    41a290 <ptr_set_visit@@Base+0x190>
  41a7f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a800 <fb_symbol_table_insert@@Base>:
  41a800:	jmp    41a3b0 <ptr_set_visit@@Base+0x2b0>
  41a805:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a810 <fb_symbol_table_insert_item@@Base>:
  41a810:	mov    rax,QWORD PTR [rsi+0x8]
  41a814:	mov    rcx,rsi
  41a817:	mov    r8d,edx
  41a81a:	mov    rsi,QWORD PTR [rax]
  41a81d:	mov    rdx,QWORD PTR [rax+0x8]
  41a821:	jmp    41a3b0 <ptr_set_visit@@Base+0x2b0>
  41a826:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041a830 <fb_symbol_table_find@@Base>:
  41a830:	mov    rax,rsi
  41a833:	lea    rsi,[rdi+0x18]
  41a837:	mov    rdi,QWORD PTR [rdi]
  41a83a:	mov    rcx,rdx
  41a83d:	mov    rdx,rax
  41a840:	jmp    41a640 <ptr_set_visit@@Base+0x540>
  41a845:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a850 <fb_symbol_table_find_item@@Base>:
  41a850:	mov    rax,QWORD PTR [rsi+0x8]
  41a854:	lea    rsi,[rdi+0x18]
  41a858:	mov    rdi,QWORD PTR [rdi]
  41a85b:	mov    rcx,QWORD PTR [rax+0x8]
  41a85f:	mov    rdx,QWORD PTR [rax]
  41a862:	jmp    41a640 <ptr_set_visit@@Base+0x540>
  41a867:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a870 <fb_symbol_table_remove@@Base>:
  41a870:	jmp    41a190 <ptr_set_visit@@Base+0x90>
  41a875:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a880 <fb_symbol_table_remove_item@@Base>:
  41a880:	mov    rax,QWORD PTR [rsi+0x8]
  41a884:	mov    rdx,QWORD PTR [rax+0x8]
  41a888:	mov    rsi,QWORD PTR [rax]
  41a88b:	jmp    41a190 <ptr_set_visit@@Base+0x90>

000000000041a890 <fb_symbol_table_visit@@Base>:
  41a890:	push   r14
  41a892:	push   r13
  41a894:	push   r12
  41a896:	push   rbp
  41a897:	push   rbx
  41a898:	cmp    QWORD PTR [rdi+0x18],0x0
  41a89d:	mov    r12,QWORD PTR [rdi]
  41a8a0:	je     41a8cf <fb_symbol_table_visit@@Base+0x3f>
  41a8a2:	mov    rbp,rdi
  41a8a5:	mov    r14,rsi
  41a8a8:	mov    r13,rdx
  41a8ab:	xor    ebx,ebx
  41a8ad:	nop    DWORD PTR [rax]
  41a8b0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a8b4:	test   rsi,rsi
  41a8b7:	je     41a8c5 <fb_symbol_table_visit@@Base+0x35>
  41a8b9:	cmp    rsi,0x2
  41a8bd:	je     41a8c5 <fb_symbol_table_visit@@Base+0x35>
  41a8bf:	mov    rdi,r13
  41a8c2:	call   r14
  41a8c5:	add    rbx,0x1
  41a8c9:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a8cd:	jb     41a8b0 <fb_symbol_table_visit@@Base+0x20>
  41a8cf:	pop    rbx
  41a8d0:	pop    rbp
  41a8d1:	pop    r12
  41a8d3:	pop    r13
  41a8d5:	pop    r14
  41a8d7:	ret    
  41a8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8e0:	push   rbx
  41a8e1:	mov    rbx,rdi
  41a8e4:	mov    rdi,QWORD PTR [rdi]
  41a8e7:	test   rdi,rdi
  41a8ea:	je     41a8f1 <fb_symbol_table_visit@@Base+0x61>
  41a8ec:	call   405040 <free@plt>
  41a8f1:	mov    QWORD PTR [rbx],0x0
  41a8f8:	mov    QWORD PTR [rbx+0x8],0x0
  41a900:	mov    QWORD PTR [rbx+0x10],0x0
  41a908:	mov    QWORD PTR [rbx+0x18],0x0
  41a910:	pop    rbx
  41a911:	ret    
  41a912:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a91d:	nop    DWORD PTR [rax]
  41a920:	push   r15
  41a922:	push   r14
  41a924:	push   r13
  41a926:	push   r12
  41a928:	push   rbp
  41a929:	push   rbx
  41a92a:	sub    rsp,0x48
  41a92e:	test   rcx,rcx
  41a931:	mov    QWORD PTR [rsp+0x30],rdi
  41a936:	mov    QWORD PTR [rsp+0x10],rsi
  41a93b:	mov    QWORD PTR [rsp+0x20],rdx
  41a940:	mov    QWORD PTR [rsp+0x28],rcx
  41a945:	mov    DWORD PTR [rsp+0x3c],r8d
  41a94a:	je     41ae2c <fb_symbol_table_visit@@Base+0x59c>
  41a950:	cmp    QWORD PTR [rsp+0x28],0x2
  41a956:	je     41ae0d <fb_symbol_table_visit@@Base+0x57d>
  41a95c:	cmp    QWORD PTR [rsp+0x28],0x1
  41a962:	je     41adee <fb_symbol_table_visit@@Base+0x55e>
  41a968:	mov    rbx,QWORD PTR [rsp+0x30]
  41a96d:	mov    rdx,QWORD PTR [rbx+0x18]
  41a971:	mov    rcx,QWORD PTR [rbx+0x10]
  41a975:	imul   rax,rdx,0xb3
  41a97c:	shr    rax,0x8
  41a980:	cmp    rcx,rax
  41a983:	jb     41a99d <fb_symbol_table_visit@@Base+0x10d>
  41a985:	lea    rsi,[rcx+rcx*1]
  41a989:	mov    rdi,rbx
  41a98c:	call   41ae80 <fb_symbol_table_visit@@Base+0x5f0>
  41a991:	test   eax,eax
  41a993:	jne    41ae4b <fb_symbol_table_visit@@Base+0x5bb>
  41a999:	mov    rdx,QWORD PTR [rbx+0x18]
  41a99d:	mov    rax,QWORD PTR [rsp+0x30]
  41a9a2:	mov    r11,QWORD PTR [rsp+0x20]
  41a9a7:	mov    rax,QWORD PTR [rax]
  41a9aa:	test   r11d,r11d
  41a9ad:	mov    DWORD PTR [rsp+0x38],r11d
  41a9b2:	mov    QWORD PTR [rsp],rax
  41a9b6:	lea    rax,[rdx-0x1]
  41a9ba:	mov    QWORD PTR [rsp+0x8],rax
  41a9bf:	jle    41acf1 <fb_symbol_table_visit@@Base+0x461>
  41a9c5:	xor    esi,esi
  41a9c7:	test   r11,r11
  41a9ca:	mov    r10,QWORD PTR [rsp+0x10]
  41a9cf:	mov    r12,0xffffffffffffffff
  41a9d6:	mov    ebp,0x9e3779b1
  41a9db:	je     41aa89 <fb_symbol_table_visit@@Base+0x1f9>
  41a9e1:	nop    DWORD PTR [rax+0x0]
  41a9e8:	cmp    BYTE PTR [r10],0x2e
  41a9ec:	je     41ace6 <fb_symbol_table_visit@@Base+0x456>
  41a9f2:	xor    ecx,ecx
  41a9f4:	jmp    41aa0f <fb_symbol_table_visit@@Base+0x17f>
  41a9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa00:	cmp    BYTE PTR [r10+rcx*1+0x1],0x2e
  41aa06:	je     41aa98 <fb_symbol_table_visit@@Base+0x208>
  41aa0c:	mov    rcx,r9
  41aa0f:	lea    r9,[rcx+0x1]
  41aa13:	cmp    r9,r11
  41aa16:	jne    41aa00 <fb_symbol_table_visit@@Base+0x170>
  41aa18:	test   rcx,rcx
  41aa1b:	je     41aab6 <fb_symbol_table_visit@@Base+0x226>
  41aa21:	movzx  edx,BYTE PTR [r10]
  41aa25:	lea    r8,[r10+0x1]
  41aa29:	test   dl,dl
  41aa2b:	je     41aab6 <fb_symbol_table_visit@@Base+0x226>
  41aa31:	lea    rdi,[r10+rcx*1]
  41aa35:	mov    eax,0x2f692e57
  41aa3a:	jmp    41aa4d <fb_symbol_table_visit@@Base+0x1bd>
  41aa3c:	nop    DWORD PTR [rax+0x0]
  41aa40:	add    r8,0x1
  41aa44:	movzx  edx,BYTE PTR [r8-0x1]
  41aa49:	test   dl,dl
  41aa4b:	je     41aa5f <fb_symbol_table_visit@@Base+0x1cf>
  41aa4d:	mov    rcx,rax
  41aa50:	shl    rcx,0x5
  41aa54:	add    rax,rcx
  41aa57:	xor    rax,rdx
  41aa5a:	cmp    r8,rdi
  41aa5d:	jne    41aa40 <fb_symbol_table_visit@@Base+0x1b0>
  41aa5f:	xor    rsi,0x2f693b52
  41aa66:	xor    rsi,rax
  41aa69:	imul   rsi,rbp
  41aa6d:	cmp    r11,r9
  41aa70:	je     41aacc <fb_symbol_table_visit@@Base+0x23c>
  41aa72:	mov    rax,r9
  41aa75:	lea    r10,[r10+r9*1+0x1]
  41aa7a:	not    rax
  41aa7d:	add    r11,rax
  41aa80:	test   r11,r11
  41aa83:	jne    41a9e8 <fb_symbol_table_visit@@Base+0x158>
  41aa89:	xor    r9d,r9d
  41aa8c:	mov    rcx,r12
  41aa8f:	jmp    41aa21 <fb_symbol_table_visit@@Base+0x191>
  41aa91:	nop    DWORD PTR [rax+0x0]
  41aa98:	test   rcx,rcx
  41aa9b:	je     41aaa9 <fb_symbol_table_visit@@Base+0x219>
  41aa9d:	movzx  edx,BYTE PTR [r10]
  41aaa1:	lea    r8,[r10+0x1]
  41aaa5:	test   dl,dl
  41aaa7:	jne    41aa31 <fb_symbol_table_visit@@Base+0x1a1>
  41aaa9:	xor    rsi,0x1505
  41aab0:	imul   rsi,rbp
  41aab4:	jmp    41aa72 <fb_symbol_table_visit@@Base+0x1e2>
  41aab6:	mov    rbx,rsi
  41aab9:	mov    edx,0x9e3779b1
  41aabe:	xor    rbx,0x1505
  41aac5:	imul   rbx,rdx
  41aac9:	mov    rsi,rbx
  41aacc:	mov    r13,QWORD PTR [rsp+0x8]
  41aad1:	and    r13,rsi
  41aad4:	shl    r13,0x3
  41aad8:	mov    eax,DWORD PTR [rsp+0x3c]
  41aadc:	sub    eax,0x2
  41aadf:	cmp    eax,0x1
  41aae2:	jbe    41ad8a <fb_symbol_table_visit@@Base+0x4fa>
  41aae8:	add    r13,QWORD PTR [rsp]
  41aaec:	lea    rbx,[rsi+0x1]
  41aaf0:	mov    QWORD PTR [rsp+0x18],0x0
  41aaf9:	mov    r12,QWORD PTR [r13+0x0]
  41aafd:	test   r12,r12
  41ab00:	je     41abe5 <fb_symbol_table_visit@@Base+0x355>
  41ab06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab10:	cmp    r12,0x2
  41ab14:	je     41ac20 <fb_symbol_table_visit@@Base+0x390>
  41ab1a:	mov    edx,DWORD PTR [rsp+0x38]
  41ab1e:	mov    rcx,QWORD PTR [r12]
  41ab22:	test   edx,edx
  41ab24:	jle    41ac38 <fb_symbol_table_visit@@Base+0x3a8>
  41ab2a:	test   rcx,rcx
  41ab2d:	je     41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ab33:	mov    rax,QWORD PTR [rcx+0x8]
  41ab37:	mov    rdx,QWORD PTR [rax+0x8]
  41ab3b:	mov    rdi,QWORD PTR [rax]
  41ab3e:	mov    rax,QWORD PTR [rsp+0x20]
  41ab43:	cmp    rax,rdx
  41ab46:	jb     41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ab48:	mov    rsi,QWORD PTR [rsp+0x10]
  41ab4d:	mov    r8,rax
  41ab50:	test   rdx,rdx
  41ab53:	je     41acc7 <fb_symbol_table_visit@@Base+0x437>
  41ab59:	movzx  eax,BYTE PTR [rsi]
  41ab5c:	cmp    BYTE PTR [rdi],al
  41ab5e:	jne    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ab60:	xor    eax,eax
  41ab62:	jmp    41ab73 <fb_symbol_table_visit@@Base+0x2e3>
  41ab64:	nop    DWORD PTR [rax+0x0]
  41ab68:	movzx  r14d,BYTE PTR [rsi+rax*1]
  41ab6d:	cmp    BYTE PTR [rdi+rax*1],r14b
  41ab71:	jne    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ab73:	add    rax,0x1
  41ab77:	cmp    rax,rdx
  41ab7a:	jne    41ab68 <fb_symbol_table_visit@@Base+0x2d8>
  41ab7c:	cmp    rdx,r8
  41ab7f:	je     41acd2 <fb_symbol_table_visit@@Base+0x442>
  41ab85:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41ab89:	jne    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ab8b:	mov    rcx,QWORD PTR [rcx]
  41ab8e:	mov    rax,rdx
  41ab91:	lea    rsi,[rsi+rdx*1+0x1]
  41ab96:	not    rax
  41ab99:	add    r8,rax
  41ab9c:	test   rcx,rcx
  41ab9f:	je     41abb8 <fb_symbol_table_visit@@Base+0x328>
  41aba1:	mov    rax,QWORD PTR [rcx+0x8]
  41aba5:	mov    rdx,QWORD PTR [rax+0x8]
  41aba9:	mov    rdi,QWORD PTR [rax]
  41abac:	cmp    rdx,r8
  41abaf:	jbe    41ab50 <fb_symbol_table_visit@@Base+0x2c0>
  41abb1:	nop    DWORD PTR [rax+0x0]
  41abb8:	mov    rax,QWORD PTR [rsp+0x8]
  41abbd:	mov    rsi,QWORD PTR [rsp]
  41abc1:	and    rax,rbx
  41abc4:	add    rbx,0x1
  41abc8:	lea    r13,[rsi+rax*8]
  41abcc:	mov    r12,QWORD PTR [r13+0x0]
  41abd0:	test   r12,r12
  41abd3:	jne    41ab10 <fb_symbol_table_visit@@Base+0x280>
  41abd9:	mov    rax,QWORD PTR [rsp+0x18]
  41abde:	test   rax,rax
  41abe1:	cmovne r13,rax
  41abe5:	mov    rax,QWORD PTR [rsp+0x30]
  41abea:	mov    QWORD PTR [rsp+0x18],r13
  41abef:	xor    r12d,r12d
  41abf2:	mov    rbx,QWORD PTR [rsp+0x28]
  41abf7:	add    QWORD PTR [rax+0x10],0x1
  41abfc:	mov    rax,QWORD PTR [rsp+0x18]
  41ac01:	mov    QWORD PTR [rax],rbx
  41ac04:	add    rsp,0x48
  41ac08:	mov    rax,r12
  41ac0b:	pop    rbx
  41ac0c:	pop    rbp
  41ac0d:	pop    r12
  41ac0f:	pop    r13
  41ac11:	pop    r14
  41ac13:	pop    r15
  41ac15:	ret    
  41ac16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac20:	mov    rax,QWORD PTR [rsp+0x18]
  41ac25:	test   rax,rax
  41ac28:	cmovne r13,rax
  41ac2c:	mov    QWORD PTR [rsp+0x18],r13
  41ac31:	jmp    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ac33:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac38:	mov    r14,QWORD PTR [rsp+0x10]
  41ac3d:	mov    ebp,DWORD PTR [rsp+0x38]
  41ac41:	mov    r15,rcx
  41ac44:	jmp    41ac6e <fb_symbol_table_visit@@Base+0x3de>
  41ac46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac50:	mov    rsi,QWORD PTR [rcx]
  41ac53:	mov    rdi,QWORD PTR [rax]
  41ac56:	call   405070 <strncmp@plt>
  41ac5b:	test   eax,eax
  41ac5d:	jne    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ac63:	add    ebp,0x1
  41ac66:	mov    r15,QWORD PTR [r15]
  41ac69:	mov    r14,QWORD PTR [r14]
  41ac6c:	je     41ac9d <fb_symbol_table_visit@@Base+0x40d>
  41ac6e:	test   r15,r15
  41ac71:	setne  dl
  41ac74:	test   r14,r14
  41ac77:	setne  al
  41ac7a:	test   dl,dl
  41ac7c:	je     41acdd <fb_symbol_table_visit@@Base+0x44d>
  41ac7e:	test   al,al
  41ac80:	je     41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ac86:	mov    rax,QWORD PTR [r15+0x8]
  41ac8a:	mov    rcx,QWORD PTR [r14+0x8]
  41ac8e:	mov    rdx,QWORD PTR [rax+0x8]
  41ac92:	cmp    rdx,QWORD PTR [rcx+0x8]
  41ac96:	je     41ac50 <fb_symbol_table_visit@@Base+0x3c0>
  41ac98:	jmp    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ac9d:	xor    eax,eax
  41ac9f:	test   r15,r15
  41aca2:	sete   al
  41aca5:	test   eax,eax
  41aca7:	je     41abb8 <fb_symbol_table_visit@@Base+0x328>
  41acad:	mov    eax,DWORD PTR [rsp+0x3c]
  41acb1:	test   eax,eax
  41acb3:	jne    41ac04 <fb_symbol_table_visit@@Base+0x374>
  41acb9:	mov    rax,QWORD PTR [rsp+0x28]
  41acbe:	mov    QWORD PTR [r13+0x0],rax
  41acc2:	jmp    41ac04 <fb_symbol_table_visit@@Base+0x374>
  41acc7:	xor    eax,eax
  41acc9:	cmp    rdx,r8
  41accc:	jne    41ab85 <fb_symbol_table_visit@@Base+0x2f5>
  41acd2:	xor    eax,eax
  41acd4:	cmp    QWORD PTR [rcx],0x0
  41acd8:	sete   al
  41acdb:	jmp    41aca5 <fb_symbol_table_visit@@Base+0x415>
  41acdd:	test   al,al
  41acdf:	je     41acad <fb_symbol_table_visit@@Base+0x41d>
  41ace1:	jmp    41abb8 <fb_symbol_table_visit@@Base+0x328>
  41ace6:	mov    rcx,r12
  41ace9:	xor    r9d,r9d
  41acec:	jmp    41aa9d <fb_symbol_table_visit@@Base+0x20d>
  41acf1:	mov    rax,QWORD PTR [rsp+0x10]
  41acf6:	xor    esi,esi
  41acf8:	mov    r9d,DWORD PTR [rsp+0x20]
  41acfd:	mov    r10d,0x9e3779b1
  41ad03:	test   rax,rax
  41ad06:	mov    r8,rax
  41ad09:	je     41ade3 <fb_symbol_table_visit@@Base+0x553>
  41ad0f:	nop
  41ad10:	mov    rax,QWORD PTR [r8+0x8]
  41ad14:	mov    r11,QWORD PTR [rax]
  41ad17:	mov    rax,QWORD PTR [rax+0x8]
  41ad1b:	sub    rax,0x1
  41ad1f:	je     41ad83 <fb_symbol_table_visit@@Base+0x4f3>
  41ad21:	movzx  edx,BYTE PTR [r11]
  41ad25:	lea    rdi,[r11+0x1]
  41ad29:	test   dl,dl
  41ad2b:	je     41ad83 <fb_symbol_table_visit@@Base+0x4f3>
  41ad2d:	add    r11,rax
  41ad30:	mov    eax,0x2f692e57
  41ad35:	jmp    41ad4c <fb_symbol_table_visit@@Base+0x4bc>
  41ad37:	nop    WORD PTR [rax+rax*1+0x0]
  41ad40:	add    rdi,0x1
  41ad44:	movzx  edx,BYTE PTR [rdi-0x1]
  41ad48:	test   dl,dl
  41ad4a:	je     41ad5e <fb_symbol_table_visit@@Base+0x4ce>
  41ad4c:	mov    rcx,rax
  41ad4f:	shl    rcx,0x5
  41ad53:	add    rax,rcx
  41ad56:	xor    rax,rdx
  41ad59:	cmp    rdi,r11
  41ad5c:	jne    41ad40 <fb_symbol_table_visit@@Base+0x4b0>
  41ad5e:	xor    rsi,0x2f693b52
  41ad65:	mov    r8,QWORD PTR [r8]
  41ad68:	xor    rsi,rax
  41ad6b:	imul   rsi,r10
  41ad6f:	add    r9d,0x1
  41ad73:	je     41aacc <fb_symbol_table_visit@@Base+0x23c>
  41ad79:	test   r8,r8
  41ad7c:	jne    41ad10 <fb_symbol_table_visit@@Base+0x480>
  41ad7e:	jmp    41aacc <fb_symbol_table_visit@@Base+0x23c>
  41ad83:	mov    eax,0x2f692e57
  41ad88:	jmp    41ad5e <fb_symbol_table_visit@@Base+0x4ce>
  41ad8a:	mov    rdx,QWORD PTR [rsp]
  41ad8e:	mov    rax,QWORD PTR [rsp+0x30]
  41ad93:	add    r13,rdx
  41ad96:	add    QWORD PTR [rax+0x10],0x1
  41ad9b:	mov    rax,QWORD PTR [r13+0x0]
  41ad9f:	test   rax,rax
  41ada2:	je     41add2 <fb_symbol_table_visit@@Base+0x542>
  41ada4:	cmp    rax,0x2
  41ada8:	je     41add2 <fb_symbol_table_visit@@Base+0x542>
  41adaa:	add    rsi,0x1
  41adae:	mov    rcx,QWORD PTR [rsp+0x8]
  41adb3:	jmp    41adbb <fb_symbol_table_visit@@Base+0x52b>
  41adb5:	cmp    rax,0x2
  41adb9:	je     41add2 <fb_symbol_table_visit@@Base+0x542>
  41adbb:	mov    rax,rcx
  41adbe:	and    rax,rsi
  41adc1:	add    rsi,0x1
  41adc5:	lea    r13,[rdx+rax*8]
  41adc9:	mov    rax,QWORD PTR [r13+0x0]
  41adcd:	test   rax,rax
  41add0:	jne    41adb5 <fb_symbol_table_visit@@Base+0x525>
  41add2:	mov    rax,QWORD PTR [rsp+0x28]
  41add7:	xor    r12d,r12d
  41adda:	mov    QWORD PTR [r13+0x0],rax
  41adde:	jmp    41ac04 <fb_symbol_table_visit@@Base+0x374>
  41ade3:	xor    r13d,r13d
  41ade6:	mov    rsi,rax
  41ade9:	jmp    41aad8 <fb_symbol_table_visit@@Base+0x248>
  41adee:	lea    rcx,[rip+0x29e13]        # 444c08 <fb_symbol_table_missing@@Base+0x8>
  41adf5:	lea    rsi,[rip+0x29c94]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41adfc:	lea    rdi,[rip+0x29d5e]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  41ae03:	mov    edx,0x74
  41ae08:	call   4050f0 <__assert_fail@plt>
  41ae0d:	lea    rcx,[rip+0x29df4]        # 444c08 <fb_symbol_table_missing@@Base+0x8>
  41ae14:	lea    rsi,[rip+0x29c75]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41ae1b:	lea    rdi,[rip+0x29d28]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  41ae22:	mov    edx,0x73
  41ae27:	call   4050f0 <__assert_fail@plt>
  41ae2c:	lea    rcx,[rip+0x29dd5]        # 444c08 <fb_symbol_table_missing@@Base+0x8>
  41ae33:	lea    rsi,[rip+0x29c56]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41ae3a:	lea    rdi,[rip+0x29cf2]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  41ae41:	mov    edx,0x72
  41ae46:	call   4050f0 <__assert_fail@plt>
  41ae4b:	mov    rax,QWORD PTR [rip+0x35196]        # 44ffe8 <stderr@GLIBC_2.2.5>
  41ae52:	lea    rcx,[rip+0x29ca7]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  41ae59:	lea    rdx,[rip+0x29d16]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  41ae60:	mov    esi,0x1
  41ae65:	mov    rdi,QWORD PTR [rax]
  41ae68:	xor    eax,eax
  41ae6a:	call   4051f0 <__fprintf_chk@plt>
  41ae6f:	mov    edi,0x1
  41ae74:	call   4051d0 <exit@plt>
  41ae79:	nop    DWORD PTR [rax+0x0]
  41ae80:	push   r13
  41ae82:	push   r12
  41ae84:	push   rbp
  41ae85:	push   rbx
  41ae86:	mov    rbp,rdi
  41ae89:	mov    ebx,0x4
  41ae8e:	sub    rsp,0x38
  41ae92:	mov    r12,QWORD PTR [rdi]
  41ae95:	mov    rax,QWORD PTR fs:0x28
  41ae9e:	mov    QWORD PTR [rsp+0x28],rax
  41aea3:	xor    eax,eax
  41aea5:	cmp    QWORD PTR [rdi+0x10],rsi
  41aea9:	cmovae rsi,QWORD PTR [rdi+0x10]
  41aeae:	cmp    rsi,0x2
  41aeb2:	jbe    41aecb <fb_symbol_table_visit@@Base+0x63b>
  41aeb4:	nop    DWORD PTR [rax+0x0]
  41aeb8:	add    rbx,rbx
  41aebb:	imul   rax,rbx,0xb3
  41aec2:	shr    rax,0x8
  41aec6:	cmp    rsi,rax
  41aec9:	ja     41aeb8 <fb_symbol_table_visit@@Base+0x628>
  41aecb:	mov    esi,0x8
  41aed0:	mov    rdi,rbx
  41aed3:	call   405130 <calloc@plt>
  41aed8:	test   rax,rax
  41aedb:	mov    QWORD PTR [rsp],rax
  41aedf:	je     41af87 <fb_symbol_table_visit@@Base+0x6f7>
  41aee5:	mov    QWORD PTR [rsp+0x18],rbx
  41aeea:	xor    ebx,ebx
  41aeec:	cmp    QWORD PTR [rbp+0x18],0x0
  41aef1:	mov    QWORD PTR [rsp+0x8],0x0
  41aefa:	mov    QWORD PTR [rsp+0x10],0x0
  41af03:	mov    r13,rsp
  41af06:	je     41af3f <fb_symbol_table_visit@@Base+0x6af>
  41af08:	nop    DWORD PTR [rax+rax*1+0x0]
  41af10:	mov    rax,QWORD PTR [r12+rbx*8]
  41af14:	test   rax,rax
  41af17:	je     41af35 <fb_symbol_table_visit@@Base+0x6a5>
  41af19:	cmp    rax,0x2
  41af1d:	je     41af35 <fb_symbol_table_visit@@Base+0x6a5>
  41af1f:	mov    rsi,QWORD PTR [rax]
  41af22:	mov    r8d,0x3
  41af28:	mov    rcx,rax
  41af2b:	xor    edx,edx
  41af2d:	mov    rdi,r13
  41af30:	call   41a920 <fb_symbol_table_visit@@Base+0x90>
  41af35:	add    rbx,0x1
  41af39:	cmp    QWORD PTR [rbp+0x18],rbx
  41af3d:	ja     41af10 <fb_symbol_table_visit@@Base+0x680>
  41af3f:	mov    rdi,rbp
  41af42:	call   41a8e0 <fb_symbol_table_visit@@Base+0x50>
  41af47:	mov    rax,QWORD PTR [rsp]
  41af4b:	mov    QWORD PTR [rbp+0x0],rax
  41af4f:	mov    rax,QWORD PTR [rsp+0x8]
  41af54:	mov    QWORD PTR [rbp+0x8],rax
  41af58:	mov    rax,QWORD PTR [rsp+0x10]
  41af5d:	mov    QWORD PTR [rbp+0x10],rax
  41af61:	mov    rax,QWORD PTR [rsp+0x18]
  41af66:	mov    QWORD PTR [rbp+0x18],rax
  41af6a:	xor    eax,eax
  41af6c:	mov    rdx,QWORD PTR [rsp+0x28]
  41af71:	xor    rdx,QWORD PTR fs:0x28
  41af7a:	jne    41af8e <fb_symbol_table_visit@@Base+0x6fe>
  41af7c:	add    rsp,0x38
  41af80:	pop    rbx
  41af81:	pop    rbp
  41af82:	pop    r12
  41af84:	pop    r13
  41af86:	ret    
  41af87:	mov    eax,0xffffffff
  41af8c:	jmp    41af6c <fb_symbol_table_visit@@Base+0x6dc>
  41af8e:	call   4050d0 <__stack_chk_fail@plt>
  41af93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41af9e:	xchg   ax,ax
  41afa0:	push   r15
  41afa2:	push   r14
  41afa4:	push   r13
  41afa6:	push   r12
  41afa8:	push   rbp
  41afa9:	push   rbx
  41afaa:	sub    rsp,0x28
  41afae:	test   rdi,rdi
  41afb1:	je     41b30b <fb_symbol_table_visit@@Base+0xa7b>
  41afb7:	mov    rax,QWORD PTR [rsi]
  41afba:	mov    DWORD PTR [rsp+0xc],ecx
  41afbe:	sub    rax,0x1
  41afc2:	test   ecx,ecx
  41afc4:	mov    QWORD PTR [rsp],rax
  41afc8:	jle    41b27c <fb_symbol_table_visit@@Base+0x9ec>
  41afce:	mov    r14,rcx
  41afd1:	xor    r9d,r9d
  41afd4:	mov    r12,rdx
  41afd7:	test   r14,r14
  41afda:	mov    r15,0xffffffffffffffff
  41afe1:	mov    r13d,0x9e3779b1
  41afe7:	je     41b08a <fb_symbol_table_visit@@Base+0x7fa>
  41afed:	nop    DWORD PTR [rax]
  41aff0:	cmp    BYTE PTR [r12],0x2e
  41aff5:	je     41b272 <fb_symbol_table_visit@@Base+0x9e2>
  41affb:	xor    r10d,r10d
  41affe:	jmp    41b00f <fb_symbol_table_visit@@Base+0x77f>
  41b000:	cmp    BYTE PTR [r12+r10*1+0x1],0x2e
  41b006:	je     41b1b8 <fb_symbol_table_visit@@Base+0x928>
  41b00c:	mov    r10,rbx
  41b00f:	lea    rbx,[r10+0x1]
  41b013:	cmp    rbx,r14
  41b016:	jne    41b000 <fb_symbol_table_visit@@Base+0x770>
  41b018:	test   r10,r10
  41b01b:	je     41b09e <fb_symbol_table_visit@@Base+0x80e>
  41b021:	movzx  esi,BYTE PTR [r12]
  41b026:	lea    r11,[r12+0x1]
  41b02b:	test   sil,sil
  41b02e:	je     41b09e <fb_symbol_table_visit@@Base+0x80e>
  41b030:	add    r10,r12
  41b033:	mov    eax,0x2f692e57
  41b038:	jmp    41b04e <fb_symbol_table_visit@@Base+0x7be>
  41b03a:	nop    WORD PTR [rax+rax*1+0x0]
  41b040:	add    r11,0x1
  41b044:	movzx  esi,BYTE PTR [r11-0x1]
  41b049:	test   sil,sil
  41b04c:	je     41b060 <fb_symbol_table_visit@@Base+0x7d0>
  41b04e:	mov    r8,rax
  41b051:	shl    r8,0x5
  41b055:	add    rax,r8
  41b058:	xor    rax,rsi
  41b05b:	cmp    r11,r10
  41b05e:	jne    41b040 <fb_symbol_table_visit@@Base+0x7b0>
  41b060:	xor    r9,0x2f693b52
  41b067:	xor    r9,rax
  41b06a:	imul   r9,r13
  41b06e:	cmp    r14,rbx
  41b071:	je     41b0b4 <fb_symbol_table_visit@@Base+0x824>
  41b073:	mov    rax,rbx
  41b076:	lea    r12,[r12+rbx*1+0x1]
  41b07b:	not    rax
  41b07e:	add    r14,rax
  41b081:	test   r14,r14
  41b084:	jne    41aff0 <fb_symbol_table_visit@@Base+0x760>
  41b08a:	movzx  esi,BYTE PTR [r12]
  41b08f:	xor    ebx,ebx
  41b091:	mov    r10,r15
  41b094:	lea    r11,[r12+0x1]
  41b099:	test   sil,sil
  41b09c:	jne    41b030 <fb_symbol_table_visit@@Base+0x7a0>
  41b09e:	mov    rbx,r9
  41b0a1:	mov    esi,0x9e3779b1
  41b0a6:	xor    rbx,0x1505
  41b0ad:	imul   rbx,rsi
  41b0b1:	mov    r9,rbx
  41b0b4:	mov    rax,QWORD PTR [rsp]
  41b0b8:	and    rax,r9
  41b0bb:	shl    rax,0x3
  41b0bf:	mov    r12,QWORD PTR [rdi+rax*1]
  41b0c3:	test   r12,r12
  41b0c6:	je     41b1a0 <fb_symbol_table_visit@@Base+0x910>
  41b0cc:	lea    rbx,[r9+0x1]
  41b0d0:	mov    QWORD PTR [rsp+0x18],rcx
  41b0d5:	mov    QWORD PTR [rsp+0x10],rdx
  41b0da:	mov    r14,rdi
  41b0dd:	nop    DWORD PTR [rax]
  41b0e0:	cmp    r12,0x2
  41b0e4:	je     41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b0ea:	mov    eax,DWORD PTR [rsp+0xc]
  41b0ee:	mov    rcx,QWORD PTR [r12]
  41b0f2:	test   eax,eax
  41b0f4:	jle    41b1e0 <fb_symbol_table_visit@@Base+0x950>
  41b0fa:	test   rcx,rcx
  41b0fd:	je     41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b103:	mov    rax,QWORD PTR [rcx+0x8]
  41b107:	mov    rdx,QWORD PTR [rax+0x8]
  41b10b:	mov    rdi,QWORD PTR [rax]
  41b10e:	mov    rax,QWORD PTR [rsp+0x18]
  41b113:	cmp    rax,rdx
  41b116:	jb     41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b118:	mov    rsi,QWORD PTR [rsp+0x10]
  41b11d:	mov    r8,rax
  41b120:	test   rdx,rdx
  41b123:	je     41b24f <fb_symbol_table_visit@@Base+0x9bf>
  41b129:	movzx  eax,BYTE PTR [rdi]
  41b12c:	cmp    BYTE PTR [rsi],al
  41b12e:	jne    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b130:	xor    eax,eax
  41b132:	jmp    41b143 <fb_symbol_table_visit@@Base+0x8b3>
  41b134:	nop    DWORD PTR [rax+0x0]
  41b138:	movzx  r15d,BYTE PTR [rsi+rax*1]
  41b13d:	cmp    BYTE PTR [rdi+rax*1],r15b
  41b141:	jne    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b143:	add    rax,0x1
  41b147:	cmp    rax,rdx
  41b14a:	jne    41b138 <fb_symbol_table_visit@@Base+0x8a8>
  41b14c:	cmp    rdx,r8
  41b14f:	je     41b25a <fb_symbol_table_visit@@Base+0x9ca>
  41b155:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41b159:	jne    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b15b:	mov    rcx,QWORD PTR [rcx]
  41b15e:	mov    rax,rdx
  41b161:	lea    rsi,[rsi+rdx*1+0x1]
  41b166:	not    rax
  41b169:	add    r8,rax
  41b16c:	test   rcx,rcx
  41b16f:	je     41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b171:	mov    rax,QWORD PTR [rcx+0x8]
  41b175:	mov    rdx,QWORD PTR [rax+0x8]
  41b179:	mov    rdi,QWORD PTR [rax]
  41b17c:	cmp    rdx,r8
  41b17f:	jbe    41b120 <fb_symbol_table_visit@@Base+0x890>
  41b181:	nop    DWORD PTR [rax+0x0]
  41b188:	mov    rax,QWORD PTR [rsp]
  41b18c:	and    rax,rbx
  41b18f:	add    rbx,0x1
  41b193:	mov    r12,QWORD PTR [r14+rax*8]
  41b197:	test   r12,r12
  41b19a:	jne    41b0e0 <fb_symbol_table_visit@@Base+0x850>
  41b1a0:	add    rsp,0x28
  41b1a4:	mov    rax,r12
  41b1a7:	pop    rbx
  41b1a8:	pop    rbp
  41b1a9:	pop    r12
  41b1ab:	pop    r13
  41b1ad:	pop    r14
  41b1af:	pop    r15
  41b1b1:	ret    
  41b1b2:	nop    WORD PTR [rax+rax*1+0x0]
  41b1b8:	test   r10,r10
  41b1bb:	je     41b1d0 <fb_symbol_table_visit@@Base+0x940>
  41b1bd:	movzx  esi,BYTE PTR [r12]
  41b1c2:	lea    r11,[r12+0x1]
  41b1c7:	test   sil,sil
  41b1ca:	jne    41b030 <fb_symbol_table_visit@@Base+0x7a0>
  41b1d0:	xor    r9,0x1505
  41b1d7:	imul   r9,r13
  41b1db:	jmp    41b073 <fb_symbol_table_visit@@Base+0x7e3>
  41b1e0:	mov    r15,QWORD PTR [rsp+0x10]
  41b1e5:	mov    ebp,DWORD PTR [rsp+0xc]
  41b1e9:	mov    r13,rcx
  41b1ec:	jmp    41b20b <fb_symbol_table_visit@@Base+0x97b>
  41b1ee:	xchg   ax,ax
  41b1f0:	mov    rsi,QWORD PTR [rsi]
  41b1f3:	mov    rdi,QWORD PTR [rax]
  41b1f6:	call   405070 <strncmp@plt>
  41b1fb:	test   eax,eax
  41b1fd:	jne    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b1ff:	add    ebp,0x1
  41b202:	mov    r13,QWORD PTR [r13+0x0]
  41b206:	mov    r15,QWORD PTR [r15]
  41b209:	je     41b23a <fb_symbol_table_visit@@Base+0x9aa>
  41b20b:	test   r13,r13
  41b20e:	setne  dl
  41b211:	test   r15,r15
  41b214:	setne  al
  41b217:	test   dl,dl
  41b219:	je     41b265 <fb_symbol_table_visit@@Base+0x9d5>
  41b21b:	test   al,al
  41b21d:	je     41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b223:	mov    rax,QWORD PTR [r13+0x8]
  41b227:	mov    rsi,QWORD PTR [r15+0x8]
  41b22b:	mov    rdx,QWORD PTR [rax+0x8]
  41b22f:	cmp    rdx,QWORD PTR [rsi+0x8]
  41b233:	je     41b1f0 <fb_symbol_table_visit@@Base+0x960>
  41b235:	jmp    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b23a:	xor    eax,eax
  41b23c:	test   r13,r13
  41b23f:	sete   al
  41b242:	test   eax,eax
  41b244:	jne    41b1a0 <fb_symbol_table_visit@@Base+0x910>
  41b24a:	jmp    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b24f:	xor    eax,eax
  41b251:	cmp    rdx,r8
  41b254:	jne    41b155 <fb_symbol_table_visit@@Base+0x8c5>
  41b25a:	xor    eax,eax
  41b25c:	cmp    QWORD PTR [rcx],0x0
  41b260:	sete   al
  41b263:	jmp    41b242 <fb_symbol_table_visit@@Base+0x9b2>
  41b265:	test   al,al
  41b267:	je     41b1a0 <fb_symbol_table_visit@@Base+0x910>
  41b26d:	jmp    41b188 <fb_symbol_table_visit@@Base+0x8f8>
  41b272:	mov    r10,r15
  41b275:	xor    ebx,ebx
  41b277:	jmp    41b1bd <fb_symbol_table_visit@@Base+0x92d>
  41b27c:	xor    r9d,r9d
  41b27f:	test   rdx,rdx
  41b282:	mov    ebp,ecx
  41b284:	mov    r11,rdx
  41b287:	mov    r12d,0x9e3779b1
  41b28d:	je     41b313 <fb_symbol_table_visit@@Base+0xa83>
  41b293:	nop    DWORD PTR [rax+rax*1+0x0]
  41b298:	mov    rax,QWORD PTR [r11+0x8]
  41b29c:	mov    rbx,QWORD PTR [rax]
  41b29f:	mov    rax,QWORD PTR [rax+0x8]
  41b2a3:	sub    rax,0x1
  41b2a7:	je     41b304 <fb_symbol_table_visit@@Base+0xa74>
  41b2a9:	movzx  esi,BYTE PTR [rbx]
  41b2ac:	lea    r8,[rbx+0x1]
  41b2b0:	test   sil,sil
  41b2b3:	je     41b304 <fb_symbol_table_visit@@Base+0xa74>
  41b2b5:	add    rbx,rax
  41b2b8:	mov    eax,0x2f692e57
  41b2bd:	jmp    41b2ce <fb_symbol_table_visit@@Base+0xa3e>
  41b2bf:	nop
  41b2c0:	add    r8,0x1
  41b2c4:	movzx  esi,BYTE PTR [r8-0x1]
  41b2c9:	test   sil,sil
  41b2cc:	je     41b2e0 <fb_symbol_table_visit@@Base+0xa50>
  41b2ce:	mov    r10,rax
  41b2d1:	shl    r10,0x5
  41b2d5:	add    rax,r10
  41b2d8:	xor    rax,rsi
  41b2db:	cmp    r8,rbx
  41b2de:	jne    41b2c0 <fb_symbol_table_visit@@Base+0xa30>
  41b2e0:	xor    r9,0x2f693b52
  41b2e7:	mov    r11,QWORD PTR [r11]
  41b2ea:	xor    r9,rax
  41b2ed:	imul   r9,r12
  41b2f1:	add    ebp,0x1
  41b2f4:	je     41b0b4 <fb_symbol_table_visit@@Base+0x824>
  41b2fa:	test   r11,r11
  41b2fd:	jne    41b298 <fb_symbol_table_visit@@Base+0xa08>
  41b2ff:	jmp    41b0b4 <fb_symbol_table_visit@@Base+0x824>
  41b304:	mov    eax,0x2f692e57
  41b309:	jmp    41b2e0 <fb_symbol_table_visit@@Base+0xa50>
  41b30b:	xor    r12d,r12d
  41b30e:	jmp    41b1a0 <fb_symbol_table_visit@@Base+0x910>
  41b313:	xor    eax,eax
  41b315:	mov    r9,rdx
  41b318:	jmp    41b0bf <fb_symbol_table_visit@@Base+0x82f>
  41b31d:	nop    DWORD PTR [rax]
  41b320:	push   r15
  41b322:	push   r14
  41b324:	push   r13
  41b326:	push   r12
  41b328:	push   rbp
  41b329:	push   rbx
  41b32a:	sub    rsp,0x38
  41b32e:	mov    rax,QWORD PTR [rdi]
  41b331:	test   rax,rax
  41b334:	mov    QWORD PTR [rsp],rax
  41b338:	je     41b6ba <fb_symbol_table_visit@@Base+0xe2a>
  41b33e:	mov    rax,QWORD PTR [rdi+0x18]
  41b342:	mov    r15,rsi
  41b345:	mov    DWORD PTR [rsp+0x14],edx
  41b349:	sub    rax,0x1
  41b34d:	test   edx,edx
  41b34f:	mov    QWORD PTR [rsp+0x8],rax
  41b354:	jle    41b62e <fb_symbol_table_visit@@Base+0xd9e>
  41b35a:	mov    r12,rdx
  41b35d:	xor    r8d,r8d
  41b360:	mov    rbp,rsi
  41b363:	test   r12,r12
  41b366:	mov    r14,0xffffffffffffffff
  41b36d:	mov    r13d,0x9e3779b1
  41b373:	je     41b411 <fb_symbol_table_visit@@Base+0xb81>
  41b379:	nop    DWORD PTR [rax+0x0]
  41b380:	cmp    BYTE PTR [rbp+0x0],0x2e
  41b384:	je     41b623 <fb_symbol_table_visit@@Base+0xd93>
  41b38a:	xor    r9d,r9d
  41b38d:	jmp    41b39f <fb_symbol_table_visit@@Base+0xb0f>
  41b38f:	nop
  41b390:	cmp    BYTE PTR [rbp+r9*1+0x1],0x2e
  41b396:	je     41b550 <fb_symbol_table_visit@@Base+0xcc0>
  41b39c:	mov    r9,r11
  41b39f:	lea    r11,[r9+0x1]
  41b3a3:	cmp    r11,r12
  41b3a6:	jne    41b390 <fb_symbol_table_visit@@Base+0xb00>
  41b3a8:	test   r9,r9
  41b3ab:	je     41b423 <fb_symbol_table_visit@@Base+0xb93>
  41b3ad:	movzx  ecx,BYTE PTR [rbp+0x0]
  41b3b1:	lea    r10,[rbp+0x1]
  41b3b5:	test   cl,cl
  41b3b7:	je     41b423 <fb_symbol_table_visit@@Base+0xb93>
  41b3b9:	add    r9,rbp
  41b3bc:	mov    eax,0x2f692e57
  41b3c1:	jmp    41b3d5 <fb_symbol_table_visit@@Base+0xb45>
  41b3c3:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3c8:	add    r10,0x1
  41b3cc:	movzx  ecx,BYTE PTR [r10-0x1]
  41b3d1:	test   cl,cl
  41b3d3:	je     41b3e7 <fb_symbol_table_visit@@Base+0xb57>
  41b3d5:	mov    rsi,rax
  41b3d8:	shl    rsi,0x5
  41b3dc:	add    rax,rsi
  41b3df:	xor    rax,rcx
  41b3e2:	cmp    r10,r9
  41b3e5:	jne    41b3c8 <fb_symbol_table_visit@@Base+0xb38>
  41b3e7:	xor    r8,0x2f693b52
  41b3ee:	xor    r8,rax
  41b3f1:	imul   r8,r13
  41b3f5:	cmp    r12,r11
  41b3f8:	je     41b439 <fb_symbol_table_visit@@Base+0xba9>
  41b3fa:	mov    rax,r11
  41b3fd:	lea    rbp,[rbp+r11*1+0x1]
  41b402:	not    rax
  41b405:	add    r12,rax
  41b408:	test   r12,r12
  41b40b:	jne    41b380 <fb_symbol_table_visit@@Base+0xaf0>
  41b411:	movzx  ecx,BYTE PTR [rbp+0x0]
  41b415:	xor    r11d,r11d
  41b418:	mov    r9,r14
  41b41b:	lea    r10,[rbp+0x1]
  41b41f:	test   cl,cl
  41b421:	jne    41b3b9 <fb_symbol_table_visit@@Base+0xb29>
  41b423:	mov    rbx,r8
  41b426:	mov    ecx,0x9e3779b1
  41b42b:	xor    rbx,0x1505
  41b432:	imul   rbx,rcx
  41b436:	mov    r8,rbx
  41b439:	mov    r13,QWORD PTR [rsp+0x8]
  41b43e:	and    r13,r8
  41b441:	shl    r13,0x3
  41b445:	add    r13,QWORD PTR [rsp]
  41b449:	mov    r12,QWORD PTR [r13+0x0]
  41b44d:	test   r12,r12
  41b450:	je     41b539 <fb_symbol_table_visit@@Base+0xca9>
  41b456:	lea    rbx,[r8+0x1]
  41b45a:	mov    QWORD PTR [rsp+0x20],rdx
  41b45f:	mov    QWORD PTR [rsp+0x18],r15
  41b464:	mov    QWORD PTR [rsp+0x28],rdi
  41b469:	nop    DWORD PTR [rax+0x0]
  41b470:	cmp    r12,0x2
  41b474:	je     41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b47a:	mov    eax,DWORD PTR [rsp+0x14]
  41b47e:	mov    rcx,QWORD PTR [r12]
  41b482:	test   eax,eax
  41b484:	jle    41b578 <fb_symbol_table_visit@@Base+0xce8>
  41b48a:	test   rcx,rcx
  41b48d:	je     41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b493:	mov    rax,QWORD PTR [rcx+0x8]
  41b497:	mov    rdx,QWORD PTR [rax+0x8]
  41b49b:	mov    rdi,QWORD PTR [rax]
  41b49e:	mov    rax,QWORD PTR [rsp+0x20]
  41b4a3:	cmp    rax,rdx
  41b4a6:	jb     41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b4a8:	mov    rsi,QWORD PTR [rsp+0x18]
  41b4ad:	mov    r8,rax
  41b4b0:	test   rdx,rdx
  41b4b3:	je     41b604 <fb_symbol_table_visit@@Base+0xd74>
  41b4b9:	movzx  eax,BYTE PTR [rsi]
  41b4bc:	cmp    BYTE PTR [rdi],al
  41b4be:	jne    41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b4c0:	xor    eax,eax
  41b4c2:	jmp    41b4d3 <fb_symbol_table_visit@@Base+0xc43>
  41b4c4:	nop    DWORD PTR [rax+0x0]
  41b4c8:	movzx  r14d,BYTE PTR [rsi+rax*1]
  41b4cd:	cmp    BYTE PTR [rdi+rax*1],r14b
  41b4d1:	jne    41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b4d3:	add    rax,0x1
  41b4d7:	cmp    rax,rdx
  41b4da:	jne    41b4c8 <fb_symbol_table_visit@@Base+0xc38>
  41b4dc:	cmp    rdx,r8
  41b4df:	je     41b60f <fb_symbol_table_visit@@Base+0xd7f>
  41b4e5:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41b4e9:	jne    41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b4eb:	mov    rcx,QWORD PTR [rcx]
  41b4ee:	mov    rax,rdx
  41b4f1:	lea    rsi,[rsi+rdx*1+0x1]
  41b4f6:	not    rax
  41b4f9:	add    r8,rax
  41b4fc:	test   rcx,rcx
  41b4ff:	je     41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b501:	mov    rax,QWORD PTR [rcx+0x8]
  41b505:	mov    rdx,QWORD PTR [rax+0x8]
  41b509:	mov    rdi,QWORD PTR [rax]
  41b50c:	cmp    rdx,r8
  41b50f:	jbe    41b4b0 <fb_symbol_table_visit@@Base+0xc20>
  41b511:	nop    DWORD PTR [rax+0x0]
  41b518:	mov    rax,QWORD PTR [rsp+0x8]
  41b51d:	mov    rdi,QWORD PTR [rsp]
  41b521:	and    rax,rbx
  41b524:	add    rbx,0x1
  41b528:	lea    r13,[rdi+rax*8]
  41b52c:	mov    r12,QWORD PTR [r13+0x0]
  41b530:	test   r12,r12
  41b533:	jne    41b470 <fb_symbol_table_visit@@Base+0xbe0>
  41b539:	add    rsp,0x38
  41b53d:	mov    rax,r12
  41b540:	pop    rbx
  41b541:	pop    rbp
  41b542:	pop    r12
  41b544:	pop    r13
  41b546:	pop    r14
  41b548:	pop    r15
  41b54a:	ret    
  41b54b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b550:	test   r9,r9
  41b553:	je     41b565 <fb_symbol_table_visit@@Base+0xcd5>
  41b555:	movzx  ecx,BYTE PTR [rbp+0x0]
  41b559:	lea    r10,[rbp+0x1]
  41b55d:	test   cl,cl
  41b55f:	jne    41b3b9 <fb_symbol_table_visit@@Base+0xb29>
  41b565:	xor    r8,0x1505
  41b56c:	imul   r8,r13
  41b570:	jmp    41b3fa <fb_symbol_table_visit@@Base+0xb6a>
  41b575:	nop    DWORD PTR [rax]
  41b578:	mov    r14,QWORD PTR [rsp+0x18]
  41b57d:	mov    ebp,DWORD PTR [rsp+0x14]
  41b581:	mov    r15,rcx
  41b584:	jmp    41b5ae <fb_symbol_table_visit@@Base+0xd1e>
  41b586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b590:	mov    rsi,QWORD PTR [rsi]
  41b593:	mov    rdi,QWORD PTR [rax]
  41b596:	call   405070 <strncmp@plt>
  41b59b:	test   eax,eax
  41b59d:	jne    41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b5a3:	add    ebp,0x1
  41b5a6:	mov    r15,QWORD PTR [r15]
  41b5a9:	mov    r14,QWORD PTR [r14]
  41b5ac:	je     41b5dd <fb_symbol_table_visit@@Base+0xd4d>
  41b5ae:	test   r15,r15
  41b5b1:	setne  dl
  41b5b4:	test   r14,r14
  41b5b7:	setne  al
  41b5ba:	test   dl,dl
  41b5bc:	je     41b61a <fb_symbol_table_visit@@Base+0xd8a>
  41b5be:	test   al,al
  41b5c0:	je     41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b5c6:	mov    rax,QWORD PTR [r15+0x8]
  41b5ca:	mov    rsi,QWORD PTR [r14+0x8]
  41b5ce:	mov    rdx,QWORD PTR [rax+0x8]
  41b5d2:	cmp    rdx,QWORD PTR [rsi+0x8]
  41b5d6:	je     41b590 <fb_symbol_table_visit@@Base+0xd00>
  41b5d8:	jmp    41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b5dd:	xor    eax,eax
  41b5df:	test   r15,r15
  41b5e2:	sete   al
  41b5e5:	test   eax,eax
  41b5e7:	je     41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b5ed:	mov    rax,QWORD PTR [rsp+0x28]
  41b5f2:	mov    QWORD PTR [r13+0x0],0x2
  41b5fa:	sub    QWORD PTR [rax+0x10],0x1
  41b5ff:	jmp    41b539 <fb_symbol_table_visit@@Base+0xca9>
  41b604:	xor    eax,eax
  41b606:	cmp    rdx,r8
  41b609:	jne    41b4e5 <fb_symbol_table_visit@@Base+0xc55>
  41b60f:	xor    eax,eax
  41b611:	cmp    QWORD PTR [rcx],0x0
  41b615:	sete   al
  41b618:	jmp    41b5e5 <fb_symbol_table_visit@@Base+0xd55>
  41b61a:	test   al,al
  41b61c:	je     41b5ed <fb_symbol_table_visit@@Base+0xd5d>
  41b61e:	jmp    41b518 <fb_symbol_table_visit@@Base+0xc88>
  41b623:	mov    r9,r14
  41b626:	xor    r11d,r11d
  41b629:	jmp    41b555 <fb_symbol_table_visit@@Base+0xcc5>
  41b62e:	xor    r8d,r8d
  41b631:	test   rsi,rsi
  41b634:	mov    r11d,edx
  41b637:	mov    r10,rsi
  41b63a:	mov    ebp,0x9e3779b1
  41b63f:	je     41b6c2 <fb_symbol_table_visit@@Base+0xe32>
  41b645:	nop    DWORD PTR [rax]
  41b648:	mov    rax,QWORD PTR [r10+0x8]
  41b64c:	mov    rbx,QWORD PTR [rax]
  41b64f:	mov    rax,QWORD PTR [rax+0x8]
  41b653:	sub    rax,0x1
  41b657:	je     41b6b3 <fb_symbol_table_visit@@Base+0xe23>
  41b659:	movzx  ecx,BYTE PTR [rbx]
  41b65c:	lea    rsi,[rbx+0x1]
  41b660:	test   cl,cl
  41b662:	je     41b6b3 <fb_symbol_table_visit@@Base+0xe23>
  41b664:	add    rbx,rax
  41b667:	mov    eax,0x2f692e57
  41b66c:	jmp    41b67c <fb_symbol_table_visit@@Base+0xdec>
  41b66e:	xchg   ax,ax
  41b670:	add    rsi,0x1
  41b674:	movzx  ecx,BYTE PTR [rsi-0x1]
  41b678:	test   cl,cl
  41b67a:	je     41b68e <fb_symbol_table_visit@@Base+0xdfe>
  41b67c:	mov    r9,rax
  41b67f:	shl    r9,0x5
  41b683:	add    rax,r9
  41b686:	xor    rax,rcx
  41b689:	cmp    rsi,rbx
  41b68c:	jne    41b670 <fb_symbol_table_visit@@Base+0xde0>
  41b68e:	xor    r8,0x2f693b52
  41b695:	mov    r10,QWORD PTR [r10]
  41b698:	xor    r8,rax
  41b69b:	imul   r8,rbp
  41b69f:	add    r11d,0x1
  41b6a3:	je     41b439 <fb_symbol_table_visit@@Base+0xba9>
  41b6a9:	test   r10,r10
  41b6ac:	jne    41b648 <fb_symbol_table_visit@@Base+0xdb8>
  41b6ae:	jmp    41b439 <fb_symbol_table_visit@@Base+0xba9>
  41b6b3:	mov    eax,0x2f692e57
  41b6b8:	jmp    41b68e <fb_symbol_table_visit@@Base+0xdfe>
  41b6ba:	xor    r12d,r12d
  41b6bd:	jmp    41b539 <fb_symbol_table_visit@@Base+0xca9>
  41b6c2:	xor    r13d,r13d
  41b6c5:	mov    r8,rsi
  41b6c8:	jmp    41b445 <fb_symbol_table_visit@@Base+0xbb5>
  41b6cd:	nop    DWORD PTR [rax]

000000000041b6d0 <fb_scope_table_clear@@Base>:
  41b6d0:	jmp    41a8e0 <fb_symbol_table_visit@@Base+0x50>
  41b6d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b6e0 <fb_scope_table_destroy@@Base>:
  41b6e0:	test   rsi,rsi
  41b6e3:	push   r14
  41b6e5:	push   r13
  41b6e7:	push   r12
  41b6e9:	push   rbp
  41b6ea:	mov    rbp,rdi
  41b6ed:	push   rbx
  41b6ee:	je     41b727 <fb_scope_table_destroy@@Base+0x47>
  41b6f0:	cmp    QWORD PTR [rdi+0x18],0x0
  41b6f5:	mov    r12,QWORD PTR [rdi]
  41b6f8:	je     41b727 <fb_scope_table_destroy@@Base+0x47>
  41b6fa:	mov    r13,rsi
  41b6fd:	mov    r14,rdx
  41b700:	xor    ebx,ebx
  41b702:	nop    WORD PTR [rax+rax*1+0x0]
  41b708:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b70c:	test   rsi,rsi
  41b70f:	je     41b71d <fb_scope_table_destroy@@Base+0x3d>
  41b711:	cmp    rsi,0x2
  41b715:	je     41b71d <fb_scope_table_destroy@@Base+0x3d>
  41b717:	mov    rdi,r14
  41b71a:	call   r13
  41b71d:	add    rbx,0x1
  41b721:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b725:	jb     41b708 <fb_scope_table_destroy@@Base+0x28>
  41b727:	pop    rbx
  41b728:	mov    rdi,rbp
  41b72b:	pop    rbp
  41b72c:	pop    r12
  41b72e:	pop    r13
  41b730:	pop    r14
  41b732:	jmp    41a8e0 <fb_symbol_table_visit@@Base+0x50>
  41b737:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b740 <fb_scope_table_init@@Base>:
  41b740:	push   rbp
  41b741:	push   rbx
  41b742:	mov    rbp,rdi
  41b745:	mov    ebx,0x4
  41b74a:	sub    rsp,0x8
  41b74e:	cmp    rsi,0x2
  41b752:	jbe    41b76b <fb_scope_table_init@@Base+0x2b>
  41b754:	nop    DWORD PTR [rax+0x0]
  41b758:	add    rbx,rbx
  41b75b:	imul   rax,rbx,0xb3
  41b762:	shr    rax,0x8
  41b766:	cmp    rsi,rax
  41b769:	ja     41b758 <fb_scope_table_init@@Base+0x18>
  41b76b:	mov    esi,0x8
  41b770:	mov    rdi,rbx
  41b773:	call   405130 <calloc@plt>
  41b778:	test   rax,rax
  41b77b:	mov    QWORD PTR [rbp+0x0],rax
  41b77f:	je     41b79e <fb_scope_table_init@@Base+0x5e>
  41b781:	mov    QWORD PTR [rbp+0x8],0x0
  41b789:	mov    QWORD PTR [rbp+0x18],rbx
  41b78d:	xor    eax,eax
  41b78f:	mov    QWORD PTR [rbp+0x10],0x0
  41b797:	add    rsp,0x8
  41b79b:	pop    rbx
  41b79c:	pop    rbp
  41b79d:	ret    
  41b79e:	mov    eax,0xffffffff
  41b7a3:	jmp    41b797 <fb_scope_table_init@@Base+0x57>
  41b7a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b7b0 <fb_scope_table_resize@@Base>:
  41b7b0:	jmp    41ae80 <fb_symbol_table_visit@@Base+0x5f0>
  41b7b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b7c0 <fb_scope_table_insert@@Base>:
  41b7c0:	jmp    41a920 <fb_symbol_table_visit@@Base+0x90>
  41b7c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b7d0 <fb_scope_table_insert_item@@Base>:
  41b7d0:	mov    rcx,rsi
  41b7d3:	mov    rsi,QWORD PTR [rsi]
  41b7d6:	mov    r8d,edx
  41b7d9:	xor    edx,edx
  41b7db:	jmp    41a920 <fb_symbol_table_visit@@Base+0x90>

000000000041b7e0 <fb_scope_table_find@@Base>:
  41b7e0:	mov    rax,rsi
  41b7e3:	lea    rsi,[rdi+0x18]
  41b7e7:	mov    rdi,QWORD PTR [rdi]
  41b7ea:	mov    rcx,rdx
  41b7ed:	mov    rdx,rax
  41b7f0:	jmp    41afa0 <fb_symbol_table_visit@@Base+0x710>
  41b7f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b800 <fb_scope_table_find_item@@Base>:
  41b800:	lea    rax,[rdi+0x18]
  41b804:	mov    rdx,QWORD PTR [rsi]
  41b807:	mov    rdi,QWORD PTR [rdi]
  41b80a:	xor    ecx,ecx
  41b80c:	mov    rsi,rax
  41b80f:	jmp    41afa0 <fb_symbol_table_visit@@Base+0x710>
  41b814:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b81f:	nop

000000000041b820 <fb_scope_table_remove@@Base>:
  41b820:	jmp    41b320 <fb_symbol_table_visit@@Base+0xa90>
  41b825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b830 <fb_scope_table_remove_item@@Base>:
  41b830:	mov    rsi,QWORD PTR [rsi]
  41b833:	xor    edx,edx
  41b835:	jmp    41b320 <fb_symbol_table_visit@@Base+0xa90>
  41b83a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b840 <fb_scope_table_visit@@Base>:
  41b840:	push   r14
  41b842:	push   r13
  41b844:	push   r12
  41b846:	push   rbp
  41b847:	push   rbx
  41b848:	cmp    QWORD PTR [rdi+0x18],0x0
  41b84d:	mov    r12,QWORD PTR [rdi]
  41b850:	je     41b87f <fb_scope_table_visit@@Base+0x3f>
  41b852:	mov    rbp,rdi
  41b855:	mov    r14,rsi
  41b858:	mov    r13,rdx
  41b85b:	xor    ebx,ebx
  41b85d:	nop    DWORD PTR [rax]
  41b860:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b864:	test   rsi,rsi
  41b867:	je     41b875 <fb_scope_table_visit@@Base+0x35>
  41b869:	cmp    rsi,0x2
  41b86d:	je     41b875 <fb_scope_table_visit@@Base+0x35>
  41b86f:	mov    rdi,r13
  41b872:	call   r14
  41b875:	add    rbx,0x1
  41b879:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b87d:	jb     41b860 <fb_scope_table_visit@@Base+0x20>
  41b87f:	pop    rbx
  41b880:	pop    rbp
  41b881:	pop    r12
  41b883:	pop    r13
  41b885:	pop    r14
  41b887:	ret    
  41b888:	nop    DWORD PTR [rax+rax*1+0x0]
  41b890:	push   rbx
  41b891:	mov    rbx,rdi
  41b894:	mov    rdi,QWORD PTR [rdi]
  41b897:	test   rdi,rdi
  41b89a:	je     41b8a1 <fb_scope_table_visit@@Base+0x61>
  41b89c:	call   405040 <free@plt>
  41b8a1:	mov    QWORD PTR [rbx],0x0
  41b8a8:	mov    QWORD PTR [rbx+0x8],0x0
  41b8b0:	mov    QWORD PTR [rbx+0x10],0x0
  41b8b8:	mov    QWORD PTR [rbx+0x18],0x0
  41b8c0:	pop    rbx
  41b8c1:	ret    
  41b8c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b8cd:	nop    DWORD PTR [rax]
  41b8d0:	push   r15
  41b8d2:	push   r14
  41b8d4:	push   r13
  41b8d6:	push   r12
  41b8d8:	push   rbp
  41b8d9:	push   rbx
  41b8da:	sub    rsp,0x38
  41b8de:	mov    r13,QWORD PTR [rdi]
  41b8e1:	mov    rcx,QWORD PTR fs:0x28
  41b8ea:	mov    QWORD PTR [rsp+0x28],rcx
  41b8ef:	xor    ecx,ecx
  41b8f1:	mov    QWORD PTR [rsp+0x10],rdi
  41b8f6:	mov    QWORD PTR [rsp+0x8],rsi
  41b8fb:	test   r13,r13
  41b8fe:	je     41b9b0 <fb_scope_table_visit@@Base+0x170>
  41b904:	mov    rax,QWORD PTR [rsp+0x10]
  41b909:	mov    rdi,QWORD PTR [rsp+0x8]
  41b90e:	mov    r14,rdx
  41b911:	lea    rcx,[rsp+0x20]
  41b916:	mov    edx,0x2f693b52
  41b91b:	mov    rsi,r14
  41b91e:	mov    rax,QWORD PTR [rax+0x18]
  41b922:	mov    QWORD PTR [rsp+0x18],rax
  41b927:	lea    r15,[rax-0x1]
  41b92b:	call   42a6b0 <cmetrohash64_1@@Base>
  41b930:	mov    ebp,DWORD PTR [rsp+0x20]
  41b934:	mov    rax,r15
  41b937:	and    rax,rbp
  41b93a:	lea    r12,[r13+rax*8+0x0]
  41b93f:	mov    rbx,QWORD PTR [r12]
  41b943:	test   rbx,rbx
  41b946:	je     41b9b0 <fb_scope_table_visit@@Base+0x170>
  41b948:	add    rbp,0x1
  41b94c:	jmp    41b968 <fb_scope_table_visit@@Base+0x128>
  41b94e:	xchg   ax,ax
  41b950:	mov    rax,rbp
  41b953:	add    rbp,0x1
  41b957:	and    rax,r15
  41b95a:	lea    r12,[r13+rax*8+0x0]
  41b95f:	mov    rbx,QWORD PTR [r12]
  41b963:	test   rbx,rbx
  41b966:	je     41b9b0 <fb_scope_table_visit@@Base+0x170>
  41b968:	cmp    rbx,0x2
  41b96c:	je     41b950 <fb_scope_table_visit@@Base+0x110>
  41b96e:	movsxd rax,DWORD PTR [rbx+0x100]
  41b975:	cmp    r14,rax
  41b978:	jne    41b950 <fb_scope_table_visit@@Base+0x110>
  41b97a:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b981:	mov    rdi,QWORD PTR [rsp+0x8]
  41b986:	mov    rdx,r14
  41b989:	call   405120 <memcmp@plt>
  41b98e:	test   eax,eax
  41b990:	jne    41b950 <fb_scope_table_visit@@Base+0x110>
  41b992:	mov    rax,QWORD PTR [rsp+0x10]
  41b997:	mov    QWORD PTR [r12],0x2
  41b99f:	sub    QWORD PTR [rax+0x10],0x1
  41b9a4:	jmp    41b9b2 <fb_scope_table_visit@@Base+0x172>
  41b9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9b0:	xor    ebx,ebx
  41b9b2:	mov    rcx,QWORD PTR [rsp+0x28]
  41b9b7:	xor    rcx,QWORD PTR fs:0x28
  41b9c0:	mov    rax,rbx
  41b9c3:	jne    41b9d4 <fb_scope_table_visit@@Base+0x194>
  41b9c5:	add    rsp,0x38
  41b9c9:	pop    rbx
  41b9ca:	pop    rbp
  41b9cb:	pop    r12
  41b9cd:	pop    r13
  41b9cf:	pop    r14
  41b9d1:	pop    r15
  41b9d3:	ret    
  41b9d4:	call   4050d0 <__stack_chk_fail@plt>
  41b9d9:	nop    DWORD PTR [rax+0x0]
  41b9e0:	push   r13
  41b9e2:	push   r12
  41b9e4:	push   rbp
  41b9e5:	push   rbx
  41b9e6:	mov    rbp,rdi
  41b9e9:	mov    ebx,0x4
  41b9ee:	sub    rsp,0x38
  41b9f2:	mov    r12,QWORD PTR [rdi]
  41b9f5:	mov    rax,QWORD PTR fs:0x28
  41b9fe:	mov    QWORD PTR [rsp+0x28],rax
  41ba03:	xor    eax,eax
  41ba05:	cmp    QWORD PTR [rdi+0x10],rsi
  41ba09:	cmovae rsi,QWORD PTR [rdi+0x10]
  41ba0e:	cmp    rsi,0x2
  41ba12:	jbe    41ba2b <fb_scope_table_visit@@Base+0x1eb>
  41ba14:	nop    DWORD PTR [rax+0x0]
  41ba18:	add    rbx,rbx
  41ba1b:	imul   rax,rbx,0xb3
  41ba22:	shr    rax,0x8
  41ba26:	cmp    rsi,rax
  41ba29:	ja     41ba18 <fb_scope_table_visit@@Base+0x1d8>
  41ba2b:	mov    esi,0x8
  41ba30:	mov    rdi,rbx
  41ba33:	call   405130 <calloc@plt>
  41ba38:	test   rax,rax
  41ba3b:	mov    QWORD PTR [rsp],rax
  41ba3f:	je     41baed <fb_scope_table_visit@@Base+0x2ad>
  41ba45:	mov    QWORD PTR [rsp+0x18],rbx
  41ba4a:	xor    ebx,ebx
  41ba4c:	cmp    QWORD PTR [rbp+0x18],0x0
  41ba51:	mov    QWORD PTR [rsp+0x8],0x0
  41ba5a:	mov    QWORD PTR [rsp+0x10],0x0
  41ba63:	mov    r13,rsp
  41ba66:	je     41baa5 <fb_scope_table_visit@@Base+0x265>
  41ba68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba70:	mov    rcx,QWORD PTR [r12+rbx*8]
  41ba74:	test   rcx,rcx
  41ba77:	je     41ba9b <fb_scope_table_visit@@Base+0x25b>
  41ba79:	cmp    rcx,0x2
  41ba7d:	je     41ba9b <fb_scope_table_visit@@Base+0x25b>
  41ba7f:	movsxd rdx,DWORD PTR [rcx+0x100]
  41ba86:	mov    rsi,QWORD PTR [rcx+0xf8]
  41ba8d:	mov    r8d,0x3
  41ba93:	mov    rdi,r13
  41ba96:	call   41bb00 <fb_scope_table_visit@@Base+0x2c0>
  41ba9b:	add    rbx,0x1
  41ba9f:	cmp    QWORD PTR [rbp+0x18],rbx
  41baa3:	ja     41ba70 <fb_scope_table_visit@@Base+0x230>
  41baa5:	mov    rdi,rbp
  41baa8:	call   41b890 <fb_scope_table_visit@@Base+0x50>
  41baad:	mov    rax,QWORD PTR [rsp]
  41bab1:	mov    QWORD PTR [rbp+0x0],rax
  41bab5:	mov    rax,QWORD PTR [rsp+0x8]
  41baba:	mov    QWORD PTR [rbp+0x8],rax
  41babe:	mov    rax,QWORD PTR [rsp+0x10]
  41bac3:	mov    QWORD PTR [rbp+0x10],rax
  41bac7:	mov    rax,QWORD PTR [rsp+0x18]
  41bacc:	mov    QWORD PTR [rbp+0x18],rax
  41bad0:	xor    eax,eax
  41bad2:	mov    rdi,QWORD PTR [rsp+0x28]
  41bad7:	xor    rdi,QWORD PTR fs:0x28
  41bae0:	jne    41baf4 <fb_scope_table_visit@@Base+0x2b4>
  41bae2:	add    rsp,0x38
  41bae6:	pop    rbx
  41bae7:	pop    rbp
  41bae8:	pop    r12
  41baea:	pop    r13
  41baec:	ret    
  41baed:	mov    eax,0xffffffff
  41baf2:	jmp    41bad2 <fb_scope_table_visit@@Base+0x292>
  41baf4:	call   4050d0 <__stack_chk_fail@plt>
  41baf9:	nop    DWORD PTR [rax+0x0]
  41bb00:	push   r15
  41bb02:	push   r14
  41bb04:	push   r13
  41bb06:	push   r12
  41bb08:	push   rbp
  41bb09:	push   rbx
  41bb0a:	sub    rsp,0x48
  41bb0e:	mov    QWORD PTR [rsp+0x20],rdi
  41bb13:	mov    QWORD PTR [rsp+0x10],rsi
  41bb18:	mov    rdi,QWORD PTR fs:0x28
  41bb21:	mov    QWORD PTR [rsp+0x38],rdi
  41bb26:	xor    edi,edi
  41bb28:	test   rcx,rcx
  41bb2b:	mov    QWORD PTR [rsp+0x18],rcx
  41bb30:	mov    DWORD PTR [rsp+0x2c],r8d
  41bb35:	je     41bd70 <fb_scope_table_visit@@Base+0x530>
  41bb3b:	cmp    QWORD PTR [rsp+0x18],0x2
  41bb41:	je     41bd51 <fb_scope_table_visit@@Base+0x511>
  41bb47:	cmp    QWORD PTR [rsp+0x18],0x1
  41bb4d:	je     41bd32 <fb_scope_table_visit@@Base+0x4f2>
  41bb53:	mov    rbx,QWORD PTR [rsp+0x20]
  41bb58:	mov    r14,rdx
  41bb5b:	mov    r8,QWORD PTR [rbx+0x18]
  41bb5f:	mov    rsi,QWORD PTR [rbx+0x10]
  41bb63:	imul   rax,r8,0xb3
  41bb6a:	shr    rax,0x8
  41bb6e:	cmp    rsi,rax
  41bb71:	jb     41bb8a <fb_scope_table_visit@@Base+0x34a>
  41bb73:	add    rsi,rsi
  41bb76:	mov    rdi,rbx
  41bb79:	call   41b9e0 <fb_scope_table_visit@@Base+0x1a0>
  41bb7e:	test   eax,eax
  41bb80:	jne    41bd04 <fb_scope_table_visit@@Base+0x4c4>
  41bb86:	mov    r8,QWORD PTR [rbx+0x18]
  41bb8a:	mov    rax,QWORD PTR [rsp+0x20]
  41bb8f:	mov    rdi,QWORD PTR [rsp+0x10]
  41bb94:	lea    rcx,[rsp+0x30]
  41bb99:	mov    edx,0x2f693b52
  41bb9e:	mov    rsi,r14
  41bba1:	lea    r12,[r8-0x1]
  41bba5:	mov    r13,QWORD PTR [rax]
  41bba8:	call   42a6b0 <cmetrohash64_1@@Base>
  41bbad:	mov    edi,DWORD PTR [rsp+0x2c]
  41bbb1:	mov    ebp,DWORD PTR [rsp+0x30]
  41bbb5:	mov    rax,r12
  41bbb8:	lea    edx,[rdi-0x2]
  41bbbb:	and    rax,rbp
  41bbbe:	cmp    edx,0x1
  41bbc1:	jbe    41bcb2 <fb_scope_table_visit@@Base+0x472>
  41bbc7:	lea    r15,[r13+rax*8+0x0]
  41bbcc:	add    rbp,0x1
  41bbd0:	xor    ecx,ecx
  41bbd2:	mov    rbx,QWORD PTR [r15]
  41bbd5:	test   rbx,rbx
  41bbd8:	jne    41bbfb <fb_scope_table_visit@@Base+0x3bb>
  41bbda:	jmp    41bcad <fb_scope_table_visit@@Base+0x46d>
  41bbdf:	nop
  41bbe0:	mov    rax,r12
  41bbe3:	and    rax,rbp
  41bbe6:	add    rbp,0x1
  41bbea:	lea    r15,[r13+rax*8+0x0]
  41bbef:	mov    rbx,QWORD PTR [r15]
  41bbf2:	test   rbx,rbx
  41bbf5:	je     41bc90 <fb_scope_table_visit@@Base+0x450>
  41bbfb:	cmp    rbx,0x2
  41bbff:	je     41bc70 <fb_scope_table_visit@@Base+0x430>
  41bc01:	movsxd rax,DWORD PTR [rbx+0x100]
  41bc08:	cmp    r14,rax
  41bc0b:	jne    41bbe0 <fb_scope_table_visit@@Base+0x3a0>
  41bc0d:	mov    rsi,QWORD PTR [rbx+0xf8]
  41bc14:	mov    rdi,QWORD PTR [rsp+0x10]
  41bc19:	mov    rdx,r14
  41bc1c:	mov    QWORD PTR [rsp+0x8],rcx
  41bc21:	call   405120 <memcmp@plt>
  41bc26:	test   eax,eax
  41bc28:	mov    rcx,QWORD PTR [rsp+0x8]
  41bc2d:	jne    41bbe0 <fb_scope_table_visit@@Base+0x3a0>
  41bc2f:	mov    eax,DWORD PTR [rsp+0x2c]
  41bc33:	test   eax,eax
  41bc35:	je     41bc80 <fb_scope_table_visit@@Base+0x440>
  41bc37:	nop    WORD PTR [rax+rax*1+0x0]
  41bc40:	mov    rdx,QWORD PTR [rsp+0x38]
  41bc45:	xor    rdx,QWORD PTR fs:0x28
  41bc4e:	mov    rax,rbx
  41bc51:	jne    41bd8f <fb_scope_table_visit@@Base+0x54f>
  41bc57:	add    rsp,0x48
  41bc5b:	pop    rbx
  41bc5c:	pop    rbp
  41bc5d:	pop    r12
  41bc5f:	pop    r13
  41bc61:	pop    r14
  41bc63:	pop    r15
  41bc65:	ret    
  41bc66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc70:	test   rcx,rcx
  41bc73:	cmove  rcx,r15
  41bc77:	jmp    41bbe0 <fb_scope_table_visit@@Base+0x3a0>
  41bc7c:	nop    DWORD PTR [rax+0x0]
  41bc80:	mov    rax,QWORD PTR [rsp+0x18]
  41bc85:	mov    QWORD PTR [r15],rax
  41bc88:	jmp    41bc40 <fb_scope_table_visit@@Base+0x400>
  41bc8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc90:	test   rcx,rcx
  41bc93:	cmove  rcx,r15
  41bc97:	mov    rax,QWORD PTR [rsp+0x20]
  41bc9c:	xor    ebx,ebx
  41bc9e:	add    QWORD PTR [rax+0x10],0x1
  41bca3:	mov    rax,QWORD PTR [rsp+0x18]
  41bca8:	mov    QWORD PTR [rcx],rax
  41bcab:	jmp    41bc40 <fb_scope_table_visit@@Base+0x400>
  41bcad:	mov    rcx,r15
  41bcb0:	jmp    41bc97 <fb_scope_table_visit@@Base+0x457>
  41bcb2:	lea    rdx,[r13+rax*8+0x0]
  41bcb7:	mov    rdi,QWORD PTR [rsp+0x20]
  41bcbc:	mov    rax,QWORD PTR [rdx]
  41bcbf:	add    QWORD PTR [rdi+0x10],0x1
  41bcc4:	test   rax,rax
  41bcc7:	je     41bcf5 <fb_scope_table_visit@@Base+0x4b5>
  41bcc9:	cmp    rax,0x2
  41bccd:	je     41bcf5 <fb_scope_table_visit@@Base+0x4b5>
  41bccf:	add    rbp,0x1
  41bcd3:	jmp    41bcde <fb_scope_table_visit@@Base+0x49e>
  41bcd5:	nop    DWORD PTR [rax]
  41bcd8:	cmp    rax,0x2
  41bcdc:	je     41bcf5 <fb_scope_table_visit@@Base+0x4b5>
  41bcde:	mov    rax,r12
  41bce1:	and    rax,rbp
  41bce4:	add    rbp,0x1
  41bce8:	lea    rdx,[r13+rax*8+0x0]
  41bced:	mov    rax,QWORD PTR [rdx]
  41bcf0:	test   rax,rax
  41bcf3:	jne    41bcd8 <fb_scope_table_visit@@Base+0x498>
  41bcf5:	mov    rax,QWORD PTR [rsp+0x18]
  41bcfa:	xor    ebx,ebx
  41bcfc:	mov    QWORD PTR [rdx],rax
  41bcff:	jmp    41bc40 <fb_scope_table_visit@@Base+0x400>
  41bd04:	mov    rax,QWORD PTR [rip+0x342dd]        # 44ffe8 <stderr@GLIBC_2.2.5>
  41bd0b:	lea    rcx,[rip+0x28dee]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  41bd12:	lea    rdx,[rip+0x28e5d]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  41bd19:	mov    esi,0x1
  41bd1e:	mov    rdi,QWORD PTR [rax]
  41bd21:	xor    eax,eax
  41bd23:	call   4051f0 <__fprintf_chk@plt>
  41bd28:	mov    edi,0x1
  41bd2d:	call   4051d0 <exit@plt>
  41bd32:	lea    rcx,[rip+0x28ef7]        # 444c30 <fb_scope_table_missing@@Base+0x8>
  41bd39:	lea    rsi,[rip+0x28d50]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41bd40:	lea    rdi,[rip+0x28e1a]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  41bd47:	mov    edx,0x74
  41bd4c:	call   4050f0 <__assert_fail@plt>
  41bd51:	lea    rcx,[rip+0x28ed8]        # 444c30 <fb_scope_table_missing@@Base+0x8>
  41bd58:	lea    rsi,[rip+0x28d31]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41bd5f:	lea    rdi,[rip+0x28de4]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  41bd66:	mov    edx,0x73
  41bd6b:	call   4050f0 <__assert_fail@plt>
  41bd70:	lea    rcx,[rip+0x28eb9]        # 444c30 <fb_scope_table_missing@@Base+0x8>
  41bd77:	lea    rsi,[rip+0x28d12]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  41bd7e:	lea    rdi,[rip+0x28dae]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  41bd85:	mov    edx,0x72
  41bd8a:	call   4050f0 <__assert_fail@plt>
  41bd8f:	call   4050d0 <__stack_chk_fail@plt>
  41bd94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41bd9f:	nop
  41bda0:	push   r15
  41bda2:	push   r14
  41bda4:	push   r13
  41bda6:	push   r12
  41bda8:	push   rbp
  41bda9:	push   rbx
  41bdaa:	sub    rsp,0x18
  41bdae:	mov    rax,QWORD PTR fs:0x28
  41bdb7:	mov    QWORD PTR [rsp+0x8],rax
  41bdbc:	xor    eax,eax
  41bdbe:	test   rdi,rdi
  41bdc1:	je     41be68 <fb_scope_table_visit@@Base+0x628>
  41bdc7:	mov    r12,rdx
  41bdca:	mov    r14,rcx
  41bdcd:	mov    r13,QWORD PTR [rsi]
  41bdd0:	mov    r15,rdi
  41bdd3:	mov    rcx,rsp
  41bdd6:	mov    edx,0x2f693b52
  41bddb:	mov    rsi,r14
  41bdde:	mov    rdi,r12
  41bde1:	call   42a6b0 <cmetrohash64_1@@Base>
  41bde6:	mov    ebp,DWORD PTR [rsp]
  41bde9:	sub    r13,0x1
  41bded:	mov    rax,r13
  41bdf0:	and    rax,rbp
  41bdf3:	mov    rbx,QWORD PTR [r15+rax*8]
  41bdf7:	test   rbx,rbx
  41bdfa:	je     41be68 <fb_scope_table_visit@@Base+0x628>
  41bdfc:	add    rbp,0x1
  41be00:	jmp    41be1b <fb_scope_table_visit@@Base+0x5db>
  41be02:	nop    WORD PTR [rax+rax*1+0x0]
  41be08:	mov    rax,r13
  41be0b:	and    rax,rbp
  41be0e:	add    rbp,0x1
  41be12:	mov    rbx,QWORD PTR [r15+rax*8]
  41be16:	test   rbx,rbx
  41be19:	je     41be68 <fb_scope_table_visit@@Base+0x628>
  41be1b:	cmp    rbx,0x2
  41be1f:	je     41be08 <fb_scope_table_visit@@Base+0x5c8>
  41be21:	movsxd rax,DWORD PTR [rbx+0x100]
  41be28:	cmp    r14,rax
  41be2b:	jne    41be08 <fb_scope_table_visit@@Base+0x5c8>
  41be2d:	mov    rsi,QWORD PTR [rbx+0xf8]
  41be34:	mov    rdx,r14
  41be37:	mov    rdi,r12
  41be3a:	call   405120 <memcmp@plt>
  41be3f:	test   eax,eax
  41be41:	jne    41be08 <fb_scope_table_visit@@Base+0x5c8>
  41be43:	mov    rcx,QWORD PTR [rsp+0x8]
  41be48:	xor    rcx,QWORD PTR fs:0x28
  41be51:	mov    rax,rbx
  41be54:	jne    41be6c <fb_scope_table_visit@@Base+0x62c>
  41be56:	add    rsp,0x18
  41be5a:	pop    rbx
  41be5b:	pop    rbp
  41be5c:	pop    r12
  41be5e:	pop    r13
  41be60:	pop    r14
  41be62:	pop    r15
  41be64:	ret    
  41be65:	nop    DWORD PTR [rax]
  41be68:	xor    ebx,ebx
  41be6a:	jmp    41be43 <fb_scope_table_visit@@Base+0x603>
  41be6c:	call   4050d0 <__stack_chk_fail@plt>
  41be71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41be7c:	nop    DWORD PTR [rax+0x0]

000000000041be80 <fb_schema_table_clear@@Base>:
  41be80:	jmp    41b890 <fb_scope_table_visit@@Base+0x50>
  41be85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041be90 <fb_schema_table_destroy@@Base>:
  41be90:	test   rsi,rsi
  41be93:	push   r14
  41be95:	push   r13
  41be97:	push   r12
  41be99:	push   rbp
  41be9a:	mov    rbp,rdi
  41be9d:	push   rbx
  41be9e:	je     41bed7 <fb_schema_table_destroy@@Base+0x47>
  41bea0:	cmp    QWORD PTR [rdi+0x18],0x0
  41bea5:	mov    r12,QWORD PTR [rdi]
  41bea8:	je     41bed7 <fb_schema_table_destroy@@Base+0x47>
  41beaa:	mov    r13,rsi
  41bead:	mov    r14,rdx
  41beb0:	xor    ebx,ebx
  41beb2:	nop    WORD PTR [rax+rax*1+0x0]
  41beb8:	mov    rsi,QWORD PTR [r12+rbx*8]
  41bebc:	test   rsi,rsi
  41bebf:	je     41becd <fb_schema_table_destroy@@Base+0x3d>
  41bec1:	cmp    rsi,0x2
  41bec5:	je     41becd <fb_schema_table_destroy@@Base+0x3d>
  41bec7:	mov    rdi,r14
  41beca:	call   r13
  41becd:	add    rbx,0x1
  41bed1:	cmp    rbx,QWORD PTR [rbp+0x18]
  41bed5:	jb     41beb8 <fb_schema_table_destroy@@Base+0x28>
  41bed7:	pop    rbx
  41bed8:	mov    rdi,rbp
  41bedb:	pop    rbp
  41bedc:	pop    r12
  41bede:	pop    r13
  41bee0:	pop    r14
  41bee2:	jmp    41b890 <fb_scope_table_visit@@Base+0x50>
  41bee7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bef0 <fb_schema_table_init@@Base>:
  41bef0:	push   rbp
  41bef1:	push   rbx
  41bef2:	mov    rbp,rdi
  41bef5:	mov    ebx,0x4
  41befa:	sub    rsp,0x8
  41befe:	cmp    rsi,0x2
  41bf02:	jbe    41bf1b <fb_schema_table_init@@Base+0x2b>
  41bf04:	nop    DWORD PTR [rax+0x0]
  41bf08:	add    rbx,rbx
  41bf0b:	imul   rax,rbx,0xb3
  41bf12:	shr    rax,0x8
  41bf16:	cmp    rsi,rax
  41bf19:	ja     41bf08 <fb_schema_table_init@@Base+0x18>
  41bf1b:	mov    esi,0x8
  41bf20:	mov    rdi,rbx
  41bf23:	call   405130 <calloc@plt>
  41bf28:	test   rax,rax
  41bf2b:	mov    QWORD PTR [rbp+0x0],rax
  41bf2f:	je     41bf4e <fb_schema_table_init@@Base+0x5e>
  41bf31:	mov    QWORD PTR [rbp+0x8],0x0
  41bf39:	mov    QWORD PTR [rbp+0x18],rbx
  41bf3d:	xor    eax,eax
  41bf3f:	mov    QWORD PTR [rbp+0x10],0x0
  41bf47:	add    rsp,0x8
  41bf4b:	pop    rbx
  41bf4c:	pop    rbp
  41bf4d:	ret    
  41bf4e:	mov    eax,0xffffffff
  41bf53:	jmp    41bf47 <fb_schema_table_init@@Base+0x57>
  41bf55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041bf60 <fb_schema_table_resize@@Base>:
  41bf60:	jmp    41b9e0 <fb_scope_table_visit@@Base+0x1a0>
  41bf65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041bf70 <fb_schema_table_insert@@Base>:
  41bf70:	jmp    41bb00 <fb_scope_table_visit@@Base+0x2c0>
  41bf75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041bf80 <fb_schema_table_insert_item@@Base>:
  41bf80:	mov    r8d,edx
  41bf83:	movsxd rdx,DWORD PTR [rsi+0x100]
  41bf8a:	mov    rcx,rsi
  41bf8d:	mov    rsi,QWORD PTR [rsi+0xf8]
  41bf94:	jmp    41bb00 <fb_scope_table_visit@@Base+0x2c0>
  41bf99:	nop    DWORD PTR [rax+0x0]

000000000041bfa0 <fb_schema_table_find@@Base>:
  41bfa0:	mov    rax,rsi
  41bfa3:	lea    rsi,[rdi+0x18]
  41bfa7:	mov    rdi,QWORD PTR [rdi]
  41bfaa:	mov    rcx,rdx
  41bfad:	mov    rdx,rax
  41bfb0:	jmp    41bda0 <fb_scope_table_visit@@Base+0x560>
  41bfb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041bfc0 <fb_schema_table_find_item@@Base>:
  41bfc0:	movsxd rcx,DWORD PTR [rsi+0x100]
  41bfc7:	mov    rdx,QWORD PTR [rsi+0xf8]
  41bfce:	lea    rsi,[rdi+0x18]
  41bfd2:	mov    rdi,QWORD PTR [rdi]
  41bfd5:	jmp    41bda0 <fb_scope_table_visit@@Base+0x560>
  41bfda:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bfe0 <fb_schema_table_remove@@Base>:
  41bfe0:	jmp    41b8d0 <fb_scope_table_visit@@Base+0x90>
  41bfe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041bff0 <fb_schema_table_remove_item@@Base>:
  41bff0:	movsxd rdx,DWORD PTR [rsi+0x100]
  41bff7:	mov    rsi,QWORD PTR [rsi+0xf8]
  41bffe:	jmp    41b8d0 <fb_scope_table_visit@@Base+0x90>
  41c003:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c00e:	xchg   ax,ax

000000000041c010 <fb_schema_table_visit@@Base>:
  41c010:	push   r14
  41c012:	push   r13
  41c014:	push   r12
  41c016:	push   rbp
  41c017:	push   rbx
  41c018:	cmp    QWORD PTR [rdi+0x18],0x0
  41c01d:	mov    r12,QWORD PTR [rdi]
  41c020:	je     41c04f <fb_schema_table_visit@@Base+0x3f>
  41c022:	mov    rbp,rdi
  41c025:	mov    r14,rsi
  41c028:	mov    r13,rdx
  41c02b:	xor    ebx,ebx
  41c02d:	nop    DWORD PTR [rax]
  41c030:	mov    rsi,QWORD PTR [r12+rbx*8]
  41c034:	test   rsi,rsi
  41c037:	je     41c045 <fb_schema_table_visit@@Base+0x35>
  41c039:	cmp    rsi,0x2
  41c03d:	je     41c045 <fb_schema_table_visit@@Base+0x35>
  41c03f:	mov    rdi,r13
  41c042:	call   r14
  41c045:	add    rbx,0x1
  41c049:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c04d:	jb     41c030 <fb_schema_table_visit@@Base+0x20>
  41c04f:	pop    rbx
  41c050:	pop    rbp
  41c051:	pop    r12
  41c053:	pop    r13
  41c055:	pop    r14
  41c057:	ret    
  41c058:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c060 <__flatcc_fb_copy_path_n@@Base>:
  41c060:	push   rbp
  41c061:	push   rbx
  41c062:	mov    rdx,rsi
  41c065:	mov    rbx,rsi
  41c068:	xor    esi,esi
  41c06a:	mov    rbp,rdi
  41c06d:	sub    rsp,0x8
  41c071:	call   405110 <memchr@plt>
  41c076:	mov    rdx,rax
  41c079:	sub    rdx,rbp
  41c07c:	test   rax,rax
  41c07f:	cmovne rbx,rdx
  41c083:	lea    rdi,[rbx+0x1]
  41c087:	call   405170 <malloc@plt>
  41c08c:	test   rax,rax
  41c08f:	mov    rcx,rax
  41c092:	je     41c0a9 <__flatcc_fb_copy_path_n@@Base+0x49>
  41c094:	mov    rdx,rbx
  41c097:	mov    rsi,rbp
  41c09a:	mov    rdi,rax
  41c09d:	call   405160 <memcpy@plt>
  41c0a2:	mov    rcx,rax
  41c0a5:	mov    BYTE PTR [rax+rbx*1],0x0
  41c0a9:	add    rsp,0x8
  41c0ad:	mov    rax,rcx
  41c0b0:	pop    rbx
  41c0b1:	pop    rbp
  41c0b2:	ret    
  41c0b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c0be:	xchg   ax,ax

000000000041c0c0 <__flatcc_fb_copy_path@@Base>:
  41c0c0:	push   rbp
  41c0c1:	push   rbx
  41c0c2:	mov    rbp,rdi
  41c0c5:	sub    rsp,0x8
  41c0c9:	call   4050c0 <strlen@plt>
  41c0ce:	lea    rdi,[rax+0x1]
  41c0d2:	mov    rbx,rax
  41c0d5:	call   405170 <malloc@plt>
  41c0da:	test   rax,rax
  41c0dd:	mov    rcx,rax
  41c0e0:	je     41c0f7 <__flatcc_fb_copy_path@@Base+0x37>
  41c0e2:	mov    rdx,rbx
  41c0e5:	mov    rsi,rbp
  41c0e8:	mov    rdi,rax
  41c0eb:	call   405160 <memcpy@plt>
  41c0f0:	mov    rcx,rax
  41c0f3:	mov    BYTE PTR [rax+rbx*1],0x0
  41c0f7:	add    rsp,0x8
  41c0fb:	mov    rax,rcx
  41c0fe:	pop    rbx
  41c0ff:	pop    rbp
  41c100:	ret    
  41c101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c10c:	nop    DWORD PTR [rax+0x0]

000000000041c110 <__flatcc_fb_chomp@@Base>:
  41c110:	push   r13
  41c112:	push   r12
  41c114:	push   rbp
  41c115:	push   rbx
  41c116:	mov    rbx,rsi
  41c119:	sub    rsp,0x8
  41c11d:	test   rdx,rdx
  41c120:	je     41c150 <__flatcc_fb_chomp@@Base+0x40>
  41c122:	mov    r12,rdi
  41c125:	mov    rdi,rdx
  41c128:	mov    rbp,rdx
  41c12b:	call   4050c0 <strlen@plt>
  41c130:	cmp    rax,rbx
  41c133:	jae    41c150 <__flatcc_fb_chomp@@Base+0x40>
  41c135:	mov    r13,rbx
  41c138:	mov    rdx,rax
  41c13b:	mov    rsi,rbp
  41c13e:	sub    r13,rax
  41c141:	lea    rdi,[r12+r13*1]
  41c145:	call   405070 <strncmp@plt>
  41c14a:	test   eax,eax
  41c14c:	cmove  rbx,r13
  41c150:	add    rsp,0x8
  41c154:	mov    rax,rbx
  41c157:	pop    rbx
  41c158:	pop    rbp
  41c159:	pop    r12
  41c15b:	pop    r13
  41c15d:	ret    
  41c15e:	xchg   ax,ax

000000000041c160 <__flatcc_fb_create_join_path_n@@Base>:
  41c160:	push   r15
  41c162:	push   r14
  41c164:	mov    r10,rsi
  41c167:	push   r13
  41c169:	push   r12
  41c16b:	mov    r14,rdi
  41c16e:	push   rbp
  41c16f:	push   rbx
  41c170:	mov    r12,rcx
  41c173:	mov    r13,r8
  41c176:	movsxd rbx,r9d
  41c179:	sub    rsp,0x18
  41c17d:	test   r8,r8
  41c180:	mov    QWORD PTR [rsp],rdx
  41c184:	je     41c2b8 <__flatcc_fb_create_join_path_n@@Base+0x158>
  41c18a:	mov    rdi,r8
  41c18d:	mov    QWORD PTR [rsp+0x8],rsi
  41c192:	call   4050c0 <strlen@plt>
  41c197:	mov    r10,QWORD PTR [rsp+0x8]
  41c19c:	mov    rbp,rax
  41c19f:	test   r14,r14
  41c1a2:	je     41c240 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41c1a8:	test   r12,r12
  41c1ab:	je     41c1d0 <__flatcc_fb_create_join_path_n@@Base+0x70>
  41c1ad:	mov    rcx,QWORD PTR [rsp]
  41c1b1:	movzx  eax,BYTE PTR [rcx]
  41c1b4:	cmp    al,0x2f
  41c1b6:	je     41c240 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41c1bc:	cmp    al,0x5c
  41c1be:	je     41c240 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41c1c4:	cmp    r12,0x1
  41c1c8:	jbe    41c1d0 <__flatcc_fb_create_join_path_n@@Base+0x70>
  41c1ca:	cmp    BYTE PTR [rcx+0x1],0x3a
  41c1ce:	je     41c240 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41c1d0:	test   r10,r10
  41c1d3:	je     41c2b0 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41c1d9:	test   ebx,ebx
  41c1db:	je     41c2b0 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41c1e1:	movzx  eax,BYTE PTR [r14+r10*1-0x1]
  41c1e7:	cmp    al,0x2f
  41c1e9:	je     41c2b0 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41c1ef:	cmp    al,0x5c
  41c1f1:	je     41c2b0 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41c1f7:	lea    rdi,[r10+rbx*1+0x1]
  41c1fc:	mov    QWORD PTR [rsp+0x8],r10
  41c201:	add    rdi,r12
  41c204:	add    rdi,rbp
  41c207:	call   405170 <malloc@plt>
  41c20c:	test   rax,rax
  41c20f:	mov    r15,rax
  41c212:	mov    r10,QWORD PTR [rsp+0x8]
  41c217:	je     41c2a8 <__flatcc_fb_create_join_path_n@@Base+0x148>
  41c21d:	mov    rdx,r10
  41c220:	mov    rsi,r14
  41c223:	mov    rdi,r15
  41c226:	mov    QWORD PTR [rsp+0x8],r10
  41c22b:	call   405160 <memcpy@plt>
  41c230:	mov    r10,QWORD PTR [rsp+0x8]
  41c235:	lea    rbx,[r10+0x1]
  41c239:	mov    BYTE PTR [r15+r10*1],0x2f
  41c23e:	jmp    41c265 <__flatcc_fb_create_join_path_n@@Base+0x105>
  41c240:	xor    ebx,ebx
  41c242:	lea    rdi,[rbp+r12*1+0x1]
  41c247:	add    rdi,rbx
  41c24a:	call   405170 <malloc@plt>
  41c24f:	test   rax,rax
  41c252:	mov    r15,rax
  41c255:	je     41c2a8 <__flatcc_fb_create_join_path_n@@Base+0x148>
  41c257:	mov    rdx,rbx
  41c25a:	mov    rsi,r14
  41c25d:	mov    rdi,r15
  41c260:	call   405160 <memcpy@plt>
  41c265:	mov    rsi,QWORD PTR [rsp]
  41c269:	lea    rdi,[r15+rbx*1]
  41c26d:	mov    rdx,r12
  41c270:	add    rbx,r12
  41c273:	call   405160 <memcpy@plt>
  41c278:	lea    rdi,[r15+rbx*1]
  41c27c:	mov    rdx,rbp
  41c27f:	mov    rsi,r13
  41c282:	add    rbp,r15
  41c285:	call   405160 <memcpy@plt>
  41c28a:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
  41c28f:	add    rsp,0x18
  41c293:	mov    rax,r15
  41c296:	pop    rbx
  41c297:	pop    rbp
  41c298:	pop    r12
  41c29a:	pop    r13
  41c29c:	pop    r14
  41c29e:	pop    r15
  41c2a0:	ret    
  41c2a1:	nop    DWORD PTR [rax+0x0]
  41c2a8:	xor    r15d,r15d
  41c2ab:	jmp    41c28f <__flatcc_fb_create_join_path_n@@Base+0x12f>
  41c2ad:	nop    DWORD PTR [rax]
  41c2b0:	mov    rbx,r10
  41c2b3:	jmp    41c242 <__flatcc_fb_create_join_path_n@@Base+0xe2>
  41c2b5:	nop    DWORD PTR [rax]
  41c2b8:	xor    ebp,ebp
  41c2ba:	jmp    41c19f <__flatcc_fb_create_join_path_n@@Base+0x3f>
  41c2bf:	nop

000000000041c2c0 <__flatcc_fb_create_join_path@@Base>:
  41c2c0:	test   rsi,rsi
  41c2c3:	push   r14
  41c2c5:	mov    r14d,ecx
  41c2c8:	push   r13
  41c2ca:	mov    r13,rdx
  41c2cd:	push   r12
  41c2cf:	push   rbp
  41c2d0:	mov    rbp,rsi
  41c2d3:	push   rbx
  41c2d4:	mov    rbx,rdi
  41c2d7:	je     41c310 <__flatcc_fb_create_join_path@@Base+0x50>
  41c2d9:	mov    rdi,rsi
  41c2dc:	call   4050c0 <strlen@plt>
  41c2e1:	test   rbx,rbx
  41c2e4:	mov    r12,rax
  41c2e7:	je     41c320 <__flatcc_fb_create_join_path@@Base+0x60>
  41c2e9:	mov    rdi,rbx
  41c2ec:	call   4050c0 <strlen@plt>
  41c2f1:	mov    rsi,rax
  41c2f4:	mov    r9d,r14d
  41c2f7:	mov    r8,r13
  41c2fa:	mov    rcx,r12
  41c2fd:	mov    rdx,rbp
  41c300:	mov    rdi,rbx
  41c303:	pop    rbx
  41c304:	pop    rbp
  41c305:	pop    r12
  41c307:	pop    r13
  41c309:	pop    r14
  41c30b:	jmp    41c160 <__flatcc_fb_create_join_path_n@@Base>
  41c310:	xor    r12d,r12d
  41c313:	test   rbx,rbx
  41c316:	jne    41c2e9 <__flatcc_fb_create_join_path@@Base+0x29>
  41c318:	nop    DWORD PTR [rax+rax*1+0x0]
  41c320:	xor    esi,esi
  41c322:	jmp    41c2f4 <__flatcc_fb_create_join_path@@Base+0x34>
  41c324:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c32f:	nop

000000000041c330 <__flatcc_fb_create_path_ext_n@@Base>:
  41c330:	mov    rcx,rsi
  41c333:	mov    r8,rdx
  41c336:	xor    r9d,r9d
  41c339:	mov    rdx,rdi
  41c33c:	xor    esi,esi
  41c33e:	xor    edi,edi
  41c340:	jmp    41c160 <__flatcc_fb_create_join_path_n@@Base>
  41c345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c350 <__flatcc_fb_create_path_ext@@Base>:
  41c350:	mov    rdx,rsi
  41c353:	xor    ecx,ecx
  41c355:	mov    rsi,rdi
  41c358:	xor    edi,edi
  41c35a:	jmp    41c2c0 <__flatcc_fb_create_join_path@@Base>
  41c35f:	nop

000000000041c360 <__flatcc_fb_create_make_path_n@@Base>:
  41c360:	push   rbp
  41c361:	push   rbx
  41c362:	mov    rbx,rdi
  41c365:	sub    rsp,0x8
  41c369:	cmp    rsi,0x1
  41c36d:	je     41c478 <__flatcc_fb_create_make_path_n@@Base+0x118>
  41c373:	jbe    41c487 <__flatcc_fb_create_make_path_n@@Base+0x127>
  41c379:	lea    rbp,[rsi-0x1]
  41c37d:	movzx  edx,BYTE PTR [rdi]
  41c380:	mov    eax,0x1
  41c385:	jmp    41c3a7 <__flatcc_fb_create_make_path_n@@Base+0x47>
  41c387:	nop    WORD PTR [rax+rax*1+0x0]
  41c390:	cmp    dl,0x20
  41c393:	sete   dl
  41c396:	add    rax,0x1
  41c39a:	movzx  edx,dl
  41c39d:	add    rsi,rdx
  41c3a0:	cmp    rdi,rbp
  41c3a3:	jae    41c3c0 <__flatcc_fb_create_make_path_n@@Base+0x60>
  41c3a5:	mov    edx,ecx
  41c3a7:	cmp    dl,0x5c
  41c3aa:	movzx  ecx,BYTE PTR [rbx+rax*1]
  41c3ae:	mov    rdi,rax
  41c3b1:	jne    41c390 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41c3b3:	cmp    cl,0x20
  41c3b6:	jne    41c390 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41c3b8:	add    rsi,0x1
  41c3bc:	jmp    41c390 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41c3be:	xchg   ax,ax
  41c3c0:	xor    eax,eax
  41c3c2:	cmp    cl,0x20
  41c3c5:	sete   al
  41c3c8:	lea    rdi,[rsi+rax*1+0x1]
  41c3cd:	call   405170 <malloc@plt>
  41c3d2:	test   rax,rax
  41c3d5:	je     41c44f <__flatcc_fb_create_make_path_n@@Base+0xef>
  41c3d7:	movzx  ecx,BYTE PTR [rbx]
  41c3da:	mov    edx,0x1
  41c3df:	xor    edi,edi
  41c3e1:	jmp    41c40b <__flatcc_fb_create_make_path_n@@Base+0xab>
  41c3e3:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3e8:	cmp    cl,0x20
  41c3eb:	je     41c460 <__flatcc_fb_create_make_path_n@@Base+0x100>
  41c3ed:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  41c3f2:	mov    r9,rdx
  41c3f5:	mov    rsi,rdi
  41c3f8:	add    rdx,0x1
  41c3fc:	cmp    rbp,r9
  41c3ff:	mov    BYTE PTR [rax+rsi*1],cl
  41c402:	lea    rdi,[rsi+0x1]
  41c406:	jbe    41c440 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41c408:	mov    ecx,r8d
  41c40b:	cmp    cl,0x5c
  41c40e:	jne    41c3e8 <__flatcc_fb_create_make_path_n@@Base+0x88>
  41c410:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  41c415:	mov    r9,rdx
  41c418:	mov    rsi,rdi
  41c41b:	cmp    r8b,0x20
  41c41f:	jne    41c3f8 <__flatcc_fb_create_make_path_n@@Base+0x98>
  41c421:	add    rsi,0x1
  41c425:	add    rdx,0x1
  41c429:	cmp    rbp,r9
  41c42c:	mov    BYTE PTR [rax+rdi*1],0x5c
  41c430:	mov    BYTE PTR [rax+rsi*1],cl
  41c433:	lea    rdi,[rsi+0x1]
  41c437:	ja     41c408 <__flatcc_fb_create_make_path_n@@Base+0xa8>
  41c439:	nop    DWORD PTR [rax+0x0]
  41c440:	cmp    r8b,0x20
  41c444:	je     41c498 <__flatcc_fb_create_make_path_n@@Base+0x138>
  41c446:	mov    BYTE PTR [rax+rdi*1],r8b
  41c44a:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
  41c44f:	add    rsp,0x8
  41c453:	pop    rbx
  41c454:	pop    rbp
  41c455:	ret    
  41c456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c460:	lea    rsi,[rdi+0x1]
  41c464:	mov    BYTE PTR [rax+rdi*1],0x5c
  41c468:	mov    r9,rdx
  41c46b:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  41c470:	jmp    41c3f8 <__flatcc_fb_create_make_path_n@@Base+0x98>
  41c472:	nop    WORD PTR [rax+rax*1+0x0]
  41c478:	movzx  ebp,BYTE PTR [rdi]
  41c47b:	cmp    bpl,0x20
  41c47f:	je     41c4a2 <__flatcc_fb_create_make_path_n@@Base+0x142>
  41c481:	cmp    bpl,0x5c
  41c485:	je     41c4a2 <__flatcc_fb_create_make_path_n@@Base+0x142>
  41c487:	add    rsp,0x8
  41c48b:	mov    rdi,rbx
  41c48e:	pop    rbx
  41c48f:	pop    rbp
  41c490:	jmp    41c060 <__flatcc_fb_copy_path_n@@Base>
  41c495:	nop    DWORD PTR [rax]
  41c498:	mov    BYTE PTR [rax+rdi*1],0x5c
  41c49c:	lea    rdi,[rsi+0x2]
  41c4a0:	jmp    41c446 <__flatcc_fb_create_make_path_n@@Base+0xe6>
  41c4a2:	mov    edi,0x3
  41c4a7:	call   405170 <malloc@plt>
  41c4ac:	test   rax,rax
  41c4af:	je     41c44f <__flatcc_fb_create_make_path_n@@Base+0xef>
  41c4b1:	mov    BYTE PTR [rax],0x5c
  41c4b4:	mov    BYTE PTR [rax+0x1],bpl
  41c4b8:	mov    BYTE PTR [rax+0x2],0x0
  41c4bc:	jmp    41c44f <__flatcc_fb_create_make_path_n@@Base+0xef>
  41c4be:	xchg   ax,ax

000000000041c4c0 <__flatcc_fb_create_make_path@@Base>:
  41c4c0:	push   rbx
  41c4c1:	mov    rbx,rdi
  41c4c4:	call   4050c0 <strlen@plt>
  41c4c9:	mov    rdi,rbx
  41c4cc:	mov    rsi,rax
  41c4cf:	pop    rbx
  41c4d0:	jmp    41c360 <__flatcc_fb_create_make_path_n@@Base>
  41c4d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c4e0 <__flatcc_fb_find_basename@@Base>:
  41c4e0:	add    rsi,rdi
  41c4e3:	cmp    rdi,rsi
  41c4e6:	je     41c51e <__flatcc_fb_find_basename@@Base+0x3e>
  41c4e8:	movzx  edx,BYTE PTR [rsi-0x1]
  41c4ec:	lea    rax,[rsi-0x1]
  41c4f0:	cmp    dl,0x5c
  41c4f3:	je     41c523 <__flatcc_fb_find_basename@@Base+0x43>
  41c4f5:	cmp    dl,0x2f
  41c4f8:	jne    41c515 <__flatcc_fb_find_basename@@Base+0x35>
  41c4fa:	jmp    41c523 <__flatcc_fb_find_basename@@Base+0x43>
  41c4fc:	nop    DWORD PTR [rax+0x0]
  41c500:	movzx  edx,BYTE PTR [rax-0x1]
  41c504:	lea    rcx,[rax-0x1]
  41c508:	cmp    dl,0x2f
  41c50b:	je     41c51a <__flatcc_fb_find_basename@@Base+0x3a>
  41c50d:	cmp    dl,0x5c
  41c510:	je     41c51a <__flatcc_fb_find_basename@@Base+0x3a>
  41c512:	mov    rax,rcx
  41c515:	cmp    rdi,rax
  41c518:	jne    41c500 <__flatcc_fb_find_basename@@Base+0x20>
  41c51a:	sub    rax,rdi
  41c51d:	ret    
  41c51e:	mov    rax,rdi
  41c521:	jmp    41c51a <__flatcc_fb_find_basename@@Base+0x3a>
  41c523:	mov    rax,rsi
  41c526:	jmp    41c51a <__flatcc_fb_find_basename@@Base+0x3a>
  41c528:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c530 <__flatcc_fb_create_basename@@Base>:
  41c530:	push   r12
  41c532:	push   rbp
  41c533:	mov    rbp,rsi
  41c536:	push   rbx
  41c537:	mov    rbx,rdi
  41c53a:	mov    r12,rdx
  41c53d:	call   41c4e0 <__flatcc_fb_find_basename@@Base>
  41c542:	mov    rsi,rbp
  41c545:	add    rbx,rax
  41c548:	mov    rdx,r12
  41c54b:	sub    rsi,rax
  41c54e:	mov    rdi,rbx
  41c551:	call   41c110 <__flatcc_fb_chomp@@Base>
  41c556:	lea    rdi,[rax+0x1]
  41c55a:	mov    rbp,rax
  41c55d:	call   405170 <malloc@plt>
  41c562:	test   rax,rax
  41c565:	mov    rcx,rax
  41c568:	je     41c57f <__flatcc_fb_create_basename@@Base+0x4f>
  41c56a:	mov    rdx,rbp
  41c56d:	mov    rsi,rbx
  41c570:	mov    rdi,rax
  41c573:	call   405160 <memcpy@plt>
  41c578:	mov    rcx,rax
  41c57b:	mov    BYTE PTR [rax+rbp*1],0x0
  41c57f:	pop    rbx
  41c580:	mov    rax,rcx
  41c583:	pop    rbp
  41c584:	pop    r12
  41c586:	ret    
  41c587:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c590 <__flatcc_fb_read_file@@Base>:
  41c590:	push   r14
  41c592:	push   r13
  41c594:	mov    r14,rdx
  41c597:	push   r12
  41c599:	push   rbp
  41c59a:	push   rbx
  41c59b:	mov    rbx,rsi
  41c59e:	lea    rsi,[rip+0x286b3]        # 444c58 <fb_schema_table_missing@@Base+0x8>
  41c5a5:	sub    rsp,0x10
  41c5a9:	mov    rax,QWORD PTR fs:0x28
  41c5b2:	mov    QWORD PTR [rsp+0x8],rax
  41c5b7:	xor    eax,eax
  41c5b9:	test   rdx,rdx
  41c5bc:	cmove  r14,rsp
  41c5c0:	call   4051c0 <fopen@plt>
  41c5c5:	test   rax,rax
  41c5c8:	je     41c6a2 <__flatcc_fb_read_file@@Base+0x112>
  41c5ce:	xor    esi,esi
  41c5d0:	mov    rbp,rax
  41c5d3:	mov    edx,0x2
  41c5d8:	mov    rdi,rax
  41c5db:	call   405180 <fseek@plt>
  41c5e0:	mov    rdi,rbp
  41c5e3:	call   405150 <ftell@plt>
  41c5e8:	test   rbx,rbx
  41c5eb:	mov    r12,rax
  41c5ee:	mov    QWORD PTR [r14],rax
  41c5f1:	je     41c5fc <__flatcc_fb_read_file@@Base+0x6c>
  41c5f3:	cmp    rax,rbx
  41c5f6:	ja     41c698 <__flatcc_fb_read_file@@Base+0x108>
  41c5fc:	mov    rdi,rbp
  41c5ff:	call   4050e0 <rewind@plt>
  41c604:	test   r12,r12
  41c607:	mov    edi,0x1
  41c60c:	cmovne rdi,r12
  41c610:	call   405170 <malloc@plt>
  41c615:	test   rax,rax
  41c618:	mov    r13,rax
  41c61b:	je     41c698 <__flatcc_fb_read_file@@Base+0x108>
  41c61d:	xor    ebx,ebx
  41c61f:	jmp    41c62b <__flatcc_fb_read_file@@Base+0x9b>
  41c621:	nop    DWORD PTR [rax+0x0]
  41c628:	add    rbx,rax
  41c62b:	mov    rdx,r12
  41c62e:	lea    rdi,[r13+rbx*1+0x0]
  41c633:	mov    rcx,rbp
  41c636:	sub    rdx,rbx
  41c639:	mov    esi,0x1
  41c63e:	call   405090 <fread@plt>
  41c643:	test   rax,rax
  41c646:	jne    41c628 <__flatcc_fb_read_file@@Base+0x98>
  41c648:	cmp    rbx,r12
  41c64b:	mov    rdi,rbp
  41c64e:	jne    41c680 <__flatcc_fb_read_file@@Base+0xf0>
  41c650:	call   4050b0 <fclose@plt>
  41c655:	mov    QWORD PTR [r14],rbx
  41c658:	mov    rcx,QWORD PTR [rsp+0x8]
  41c65d:	xor    rcx,QWORD PTR fs:0x28
  41c666:	mov    rax,r13
  41c669:	jne    41c6a7 <__flatcc_fb_read_file@@Base+0x117>
  41c66b:	add    rsp,0x10
  41c66f:	pop    rbx
  41c670:	pop    rbp
  41c671:	pop    r12
  41c673:	pop    r13
  41c675:	pop    r14
  41c677:	ret    
  41c678:	nop    DWORD PTR [rax+rax*1+0x0]
  41c680:	call   4050b0 <fclose@plt>
  41c685:	mov    rdi,r13
  41c688:	call   405040 <free@plt>
  41c68d:	mov    QWORD PTR [r14],r12
  41c690:	xor    r13d,r13d
  41c693:	jmp    41c658 <__flatcc_fb_read_file@@Base+0xc8>
  41c695:	nop    DWORD PTR [rax]
  41c698:	mov    rdi,rbp
  41c69b:	call   4050b0 <fclose@plt>
  41c6a0:	jmp    41c68d <__flatcc_fb_read_file@@Base+0xfd>
  41c6a2:	xor    r12d,r12d
  41c6a5:	jmp    41c68d <__flatcc_fb_read_file@@Base+0xfd>
  41c6a7:	call   4050d0 <__stack_chk_fail@plt>
  41c6ac:	nop    DWORD PTR [rax+0x0]

000000000041c6b0 <__flatcc_fb_default_error_out@@Base>:
  41c6b0:	mov    rax,QWORD PTR [rip+0x33931]        # 44ffe8 <stderr@GLIBC_2.2.5>
  41c6b7:	mov    rdi,rsi
  41c6ba:	movsxd rdx,edx
  41c6bd:	mov    esi,0x1
  41c6c2:	mov    rcx,QWORD PTR [rax]
  41c6c5:	jmp    4051e0 <fwrite@plt>
  41c6ca:	nop    WORD PTR [rax+rax*1+0x0]
  41c6d0:	lea    rdi,[rsi+0x8]
  41c6d4:	jmp    41a710 <fb_symbol_table_clear@@Base>
  41c6d9:	nop    DWORD PTR [rax+0x0]
  41c6e0:	push   r12
  41c6e2:	push   rbp
  41c6e3:	mov    r12,rsi
  41c6e6:	push   rbx
  41c6e7:	mov    rbx,rdi
  41c6ea:	sub    rsp,0x10
  41c6ee:	movsxd rax,DWORD PTR [rbx+0x38]
  41c6f2:	mov    rdi,QWORD PTR [rdi+0x28]
  41c6f6:	lea    rbp,[rax+rax*4]
  41c6fa:	mov    r8,rax
  41c6fd:	mov    rax,QWORD PTR [rbx+0x48]
  41c701:	shl    rbp,0x3
  41c705:	lea    rsi,[rdi+rbp*1]
  41c709:	cmp    rsi,rax
  41c70c:	mov    QWORD PTR [rbx+0x30],rsi
  41c710:	je     41c748 <__flatcc_fb_default_error_out@@Base+0x98>
  41c712:	mov    QWORD PTR [rax],rdx
  41c715:	sub    rcx,rdx
  41c718:	sub    rdx,QWORD PTR [rbx+0x70]
  41c71c:	mov    QWORD PTR [rax+0x8],rcx
  41c720:	mov    rcx,QWORD PTR [rbx+0x78]
  41c724:	add    rax,0x28
  41c728:	mov    QWORD PTR [rax-0x8],r12
  41c72c:	add    rdx,0x1
  41c730:	mov    QWORD PTR [rax-0x18],rcx
  41c734:	mov    QWORD PTR [rax-0x10],rdx
  41c738:	mov    QWORD PTR [rbx+0x48],rax
  41c73c:	add    rsp,0x10
  41c740:	pop    rbx
  41c741:	pop    rbp
  41c742:	pop    r12
  41c744:	ret    
  41c745:	nop    DWORD PTR [rax]
  41c748:	test   r8d,r8d
  41c74b:	jne    41c798 <__flatcc_fb_default_error_out@@Base+0xe8>
  41c74d:	mov    esi,0xa000
  41c752:	mov    r8d,0x400
  41c758:	mov    DWORD PTR [rbx+0x38],r8d
  41c75c:	mov    QWORD PTR [rsp+0x8],rcx
  41c761:	mov    QWORD PTR [rsp],rdx
  41c765:	call   4051a0 <realloc@plt>
  41c76a:	test   rax,rax
  41c76d:	mov    QWORD PTR [rbx+0x28],rax
  41c771:	mov    rdx,QWORD PTR [rsp]
  41c775:	mov    rcx,QWORD PTR [rsp+0x8]
  41c77a:	je     41c7a8 <__flatcc_fb_default_error_out@@Base+0xf8>
  41c77c:	movsxd rsi,DWORD PTR [rbx+0x38]
  41c780:	lea    rsi,[rsi+rsi*4]
  41c784:	lea    rsi,[rax+rsi*8]
  41c788:	add    rax,rbp
  41c78b:	mov    QWORD PTR [rbx+0x30],rsi
  41c78f:	jmp    41c712 <__flatcc_fb_default_error_out@@Base+0x62>
  41c791:	nop    DWORD PTR [rax+0x0]
  41c798:	add    r8d,r8d
  41c79b:	movsxd rax,r8d
  41c79e:	lea    rsi,[rax+rax*4]
  41c7a2:	shl    rsi,0x3
  41c7a6:	jmp    41c758 <__flatcc_fb_default_error_out@@Base+0xa8>
  41c7a8:	call   40526e <__sprintf_chk@plt+0x5e>
  41c7ad:	nop    DWORD PTR [rax]
  41c7b0:	push   r12
  41c7b2:	push   rbp
  41c7b3:	push   rbx
  41c7b4:	mov    rcx,QWORD PTR [rdi+0x48]
  41c7b8:	mov    rbx,rdi
  41c7bb:	mov    r12,QWORD PTR [rdi+0x30]
  41c7bf:	lea    rbp,[rcx+0x28]
  41c7c3:	mov    rdx,rcx
  41c7c6:	cmp    r12,rbp
  41c7c9:	mov    QWORD PTR [rdi+0x48],rbp
  41c7cd:	je     41c870 <__flatcc_fb_default_error_out@@Base+0x1c0>
  41c7d3:	cmp    QWORD PTR [rcx+0x48],0xfffffffffffffc3c
  41c7db:	jne    41c868 <__flatcc_fb_default_error_out@@Base+0x1b8>
  41c7e1:	mov    rcx,rbp
  41c7e4:	mov    rax,QWORD PTR [rdi+0x60]
  41c7e8:	jmp    41c820 <__flatcc_fb_default_error_out@@Base+0x170>
  41c7ea:	nop    WORD PTR [rax+rax*1+0x0]
  41c7f0:	mov    QWORD PTR [rbx+0x60],rax
  41c7f4:	mov    rsi,QWORD PTR [rbx+0x40]
  41c7f8:	mov    QWORD PTR [rdx+0x8],rbp
  41c7fc:	lea    rbp,[rcx+0x28]
  41c800:	cmp    rbp,r12
  41c803:	mov    QWORD PTR [rdx],rsi
  41c806:	mov    QWORD PTR [rbx+0x40],rdx
  41c80a:	mov    QWORD PTR [rbx+0x48],rbp
  41c80e:	mov    rdx,rcx
  41c811:	mov    rcx,rbp
  41c814:	je     41c870 <__flatcc_fb_default_error_out@@Base+0x1c0>
  41c816:	cmp    QWORD PTR [rdx+0x48],0xfffffffffffffc3c
  41c81e:	jne    41c868 <__flatcc_fb_default_error_out@@Base+0x1b8>
  41c820:	mov    rdx,rax
  41c823:	add    rax,0x20
  41c827:	cmp    rax,QWORD PTR [rbx+0x50]
  41c82b:	jbe    41c7f0 <__flatcc_fb_default_error_out@@Base+0x140>
  41c82d:	mov    esi,0x1
  41c832:	mov    edi,0x10000
  41c837:	call   405130 <calloc@plt>
  41c83c:	test   rax,rax
  41c83f:	je     41c893 <__flatcc_fb_default_error_out@@Base+0x1e3>
  41c841:	mov    rdx,QWORD PTR [rbx+0x58]
  41c845:	lea    rcx,[rax+0x10000]
  41c84c:	mov    QWORD PTR [rbx+0x58],rax
  41c850:	mov    QWORD PTR [rbx+0x50],rcx
  41c854:	mov    rcx,QWORD PTR [rbx+0x48]
  41c858:	mov    QWORD PTR [rax],rdx
  41c85b:	lea    rdx,[rax+0x10]
  41c85f:	add    rax,0x30
  41c863:	jmp    41c7f0 <__flatcc_fb_default_error_out@@Base+0x140>
  41c865:	nop    DWORD PTR [rax]
  41c868:	mov    rax,rbp
  41c86b:	pop    rbx
  41c86c:	pop    rbp
  41c86d:	pop    r12
  41c86f:	ret    
  41c870:	lea    rcx,[rip+0x2926d]        # 445ae4 <fb_schema_table_missing@@Base+0xe94>
  41c877:	lea    rsi,[rip+0x283e2]        # 444c60 <fb_schema_table_missing@@Base+0x10>
  41c87e:	lea    rdi,[rip+0x19284]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  41c885:	mov    QWORD PTR [rbx+0x48],rdx
  41c889:	mov    edx,0x155
  41c88e:	call   4050f0 <__assert_fail@plt>
  41c893:	call   40526e <__sprintf_chk@plt+0x5e>
  41c898:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8a0:	mov    rax,QWORD PTR [rdi+0x48]
  41c8a4:	mov    rax,QWORD PTR [rax+0x20]
  41c8a8:	test   rax,rax
  41c8ab:	je     41c8ea <__flatcc_fb_default_error_out@@Base+0x23a>
  41c8ad:	push   rbx
  41c8ae:	mov    rbx,rdi
  41c8b1:	jmp    41c8d3 <__flatcc_fb_default_error_out@@Base+0x223>
  41c8b3:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8b8:	cmp    rax,0x7d
  41c8bc:	je     41c8f0 <__flatcc_fb_default_error_out@@Base+0x240>
  41c8be:	mov    rdi,rbx
  41c8c1:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41c8c6:	mov    rax,QWORD PTR [rbx+0x48]
  41c8ca:	mov    rax,QWORD PTR [rax+0x20]
  41c8ce:	test   rax,rax
  41c8d1:	je     41c8e9 <__flatcc_fb_default_error_out@@Base+0x239>
  41c8d3:	cmp    rax,0x3b
  41c8d7:	jne    41c8b8 <__flatcc_fb_default_error_out@@Base+0x208>
  41c8d9:	mov    rdi,rbx
  41c8dc:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41c8e1:	mov    QWORD PTR [rbx+0x40],0x0
  41c8e9:	pop    rbx
  41c8ea:	repz ret 
  41c8ec:	nop    DWORD PTR [rax+0x0]
  41c8f0:	mov    QWORD PTR [rbx+0x40],0x0
  41c8f8:	pop    rbx
  41c8f9:	jmp    41c8ea <__flatcc_fb_default_error_out@@Base+0x23a>
  41c8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c900:	mov    rax,QWORD PTR [rdi+0x48]
  41c904:	mov    rax,QWORD PTR [rax+0x20]
  41c908:	test   rax,rax
  41c90b:	je     41c94d <__flatcc_fb_default_error_out@@Base+0x29d>
  41c90d:	push   rbp
  41c90e:	push   rbx
  41c90f:	mov    rbp,rsi
  41c912:	mov    rbx,rdi
  41c915:	sub    rsp,0x8
  41c919:	jmp    41c932 <__flatcc_fb_default_error_out@@Base+0x282>
  41c91b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c920:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41c925:	mov    rax,QWORD PTR [rbx+0x48]
  41c929:	mov    rax,QWORD PTR [rax+0x20]
  41c92d:	test   rax,rax
  41c930:	je     41c947 <__flatcc_fb_default_error_out@@Base+0x297>
  41c932:	cmp    rbp,rax
  41c935:	mov    rdi,rbx
  41c938:	jne    41c920 <__flatcc_fb_default_error_out@@Base+0x270>
  41c93a:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41c93f:	mov    QWORD PTR [rbx+0x40],0x0
  41c947:	add    rsp,0x8
  41c94b:	pop    rbx
  41c94c:	pop    rbp
  41c94d:	repz ret 
  41c94f:	nop

000000000041c950 <__flatcc_fb_print_error@@Base>:
  41c950:	push   r12
  41c952:	push   rbp
  41c953:	mov    r12,rdi
  41c956:	push   rbx
  41c957:	sub    rsp,0x1a0
  41c95e:	test   al,al
  41c960:	mov    QWORD PTR [rsp+0x100],rdx
  41c968:	mov    QWORD PTR [rsp+0x108],rcx
  41c970:	mov    QWORD PTR [rsp+0x110],r8
  41c978:	mov    QWORD PTR [rsp+0x118],r9
  41c980:	je     41c9ca <__flatcc_fb_print_error@@Base+0x7a>
  41c982:	vmovaps XMMWORD PTR [rsp+0x120],xmm0
  41c98b:	vmovaps XMMWORD PTR [rsp+0x130],xmm1
  41c994:	vmovaps XMMWORD PTR [rsp+0x140],xmm2
  41c99d:	vmovaps XMMWORD PTR [rsp+0x150],xmm3
  41c9a6:	vmovaps XMMWORD PTR [rsp+0x160],xmm4
  41c9af:	vmovaps XMMWORD PTR [rsp+0x170],xmm5
  41c9b8:	vmovaps XMMWORD PTR [rsp+0x180],xmm6
  41c9c1:	vmovaps XMMWORD PTR [rsp+0x190],xmm7
  41c9ca:	mov    rax,QWORD PTR fs:0x28
  41c9d3:	mov    QWORD PTR [rsp+0xe8],rax
  41c9db:	xor    eax,eax
  41c9dd:	lea    rax,[rsp+0x1c0]
  41c9e5:	lea    rbp,[rsp+0x20]
  41c9ea:	lea    r9,[rsp+0x8]
  41c9ef:	mov    r8,rsi
  41c9f2:	mov    ecx,0xc8
  41c9f7:	mov    edx,0x1
  41c9fc:	mov    QWORD PTR [rsp+0x10],rax
  41ca01:	lea    rax,[rsp+0xf0]
  41ca09:	mov    esi,0xc8
  41ca0e:	mov    rdi,rbp
  41ca11:	mov    DWORD PTR [rsp+0x8],0x10
  41ca19:	mov    DWORD PTR [rsp+0xc],0x30
  41ca21:	mov    QWORD PTR [rsp+0x18],rax
  41ca26:	call   405190 <__vsnprintf_chk@plt>
  41ca2b:	cmp    eax,0xc7
  41ca30:	mov    ebx,eax
  41ca32:	jle    41ca4b <__flatcc_fb_print_error@@Base+0xfb>
  41ca34:	mov    DWORD PTR [rsp+0xe3],0xa2e2e2e
  41ca3f:	mov    ebx,0xc7
  41ca44:	mov    BYTE PTR [rbp+0xc7],0x0
  41ca4b:	mov    rdi,QWORD PTR [r12+0x18]
  41ca50:	mov    edx,ebx
  41ca52:	mov    rsi,rbp
  41ca55:	call   QWORD PTR [r12+0x10]
  41ca5a:	mov    rcx,QWORD PTR [rsp+0xe8]
  41ca62:	xor    rcx,QWORD PTR fs:0x28
  41ca6b:	mov    eax,ebx
  41ca6d:	jne    41ca7b <__flatcc_fb_print_error@@Base+0x12b>
  41ca6f:	add    rsp,0x1a0
  41ca76:	pop    rbx
  41ca77:	pop    rbp
  41ca78:	pop    r12
  41ca7a:	ret    
  41ca7b:	call   4050d0 <__stack_chk_fail@plt>

000000000041ca80 <__flatcc_error_find_file_of_token@@Base>:
  41ca80:	jmp    41ca97 <__flatcc_error_find_file_of_token@@Base+0x17>
  41ca82:	nop    WORD PTR [rax+rax*1+0x0]
  41ca88:	cmp    QWORD PTR [rdi+0x28],rsi
  41ca8c:	ja     41ca94 <__flatcc_error_find_file_of_token@@Base+0x14>
  41ca8e:	cmp    rsi,QWORD PTR [rdi+0x30]
  41ca92:	jb     41caa8 <__flatcc_error_find_file_of_token@@Base+0x28>
  41ca94:	mov    rdi,QWORD PTR [rdi]
  41ca97:	test   rdi,rdi
  41ca9a:	jne    41ca88 <__flatcc_error_find_file_of_token@@Base+0x8>
  41ca9c:	lea    rax,[rip+0x2764b]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41caa3:	ret    
  41caa4:	nop    DWORD PTR [rax+0x0]
  41caa8:	mov    rax,QWORD PTR [rdi+0x318]
  41caaf:	ret    

000000000041cab0 <__flatcc_error_report@@Base>:
  41cab0:	push   r14
  41cab2:	push   r13
  41cab4:	mov    r13,rsi
  41cab7:	push   r12
  41cab9:	push   rbp
  41caba:	mov    r12,rdx
  41cabd:	push   rbx
  41cabe:	mov    rbp,rdi
  41cac1:	mov    rbx,rcx
  41cac4:	sub    rsp,0x10
  41cac8:	test   rsi,rsi
  41cacb:	setne  al
  41cace:	test   r8,r8
  41cad1:	jne    41cade <__flatcc_error_report@@Base+0x2e>
  41cad3:	test   al,al
  41cad5:	je     41cade <__flatcc_error_report@@Base+0x2e>
  41cad7:	mov    r8,QWORD PTR [rsi]
  41cada:	mov    r9d,DWORD PTR [rsi+0x8]
  41cade:	lea    rdx,[rip+0x27609]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41cae5:	test   r12,r12
  41cae8:	cmove  r12,rdx
  41caec:	test   r8,r8
  41caef:	je     41cc20 <__flatcc_error_report@@Base+0x170>
  41caf5:	test   rbx,rbx
  41caf8:	sete   dl
  41cafb:	test   al,al
  41cafd:	je     41cb03 <__flatcc_error_report@@Base+0x53>
  41caff:	test   dl,dl
  41cb01:	jne    41cb70 <__flatcc_error_report@@Base+0xc0>
  41cb03:	test   rbx,rbx
  41cb06:	je     41cb10 <__flatcc_error_report@@Base+0x60>
  41cb08:	test   al,al
  41cb0a:	jne    41cbb8 <__flatcc_error_report@@Base+0x108>
  41cb10:	test   r13,r13
  41cb13:	jne    41cb1d <__flatcc_error_report@@Base+0x6d>
  41cb15:	test   dl,dl
  41cb17:	jne    41cc30 <__flatcc_error_report@@Base+0x180>
  41cb1d:	test   rbx,rbx
  41cb20:	je     41cc50 <__flatcc_error_report@@Base+0x1a0>
  41cb26:	mov    rsi,rbx
  41cb29:	mov    rdi,rbp
  41cb2c:	call   41ca80 <__flatcc_error_find_file_of_token@@Base>
  41cb31:	mov    rdx,QWORD PTR [rbx+0x8]
  41cb35:	mov    r9,QWORD PTR [rbx+0x18]
  41cb39:	lea    rsi,[rip+0x281d8]        # 444d18 <fb_schema_table_missing@@Base+0xc8>
  41cb40:	mov    r8,QWORD PTR [rbx+0x10]
  41cb44:	push   QWORD PTR [rbx]
  41cb46:	mov    rcx,rax
  41cb49:	mov    rdi,rbp
  41cb4c:	xor    eax,eax
  41cb4e:	push   rdx
  41cb4f:	mov    rdx,r12
  41cb52:	call   41c950 <__flatcc_fb_print_error@@Base>
  41cb57:	pop    rax
  41cb58:	pop    rdx
  41cb59:	add    DWORD PTR [rbp+0xd0],0x1
  41cb60:	add    rsp,0x10
  41cb64:	pop    rbx
  41cb65:	pop    rbp
  41cb66:	pop    r12
  41cb68:	pop    r13
  41cb6a:	pop    r14
  41cb6c:	ret    
  41cb6d:	nop    DWORD PTR [rax]
  41cb70:	mov    rsi,r13
  41cb73:	mov    rdi,rbp
  41cb76:	mov    DWORD PTR [rsp+0xc],r9d
  41cb7b:	mov    QWORD PTR [rsp],r8
  41cb7f:	call   41ca80 <__flatcc_error_find_file_of_token@@Base>
  41cb84:	push   r12
  41cb86:	mov    r8,QWORD PTR [rsp+0x8]
  41cb8b:	lea    rsi,[rip+0x2812e]        # 444cc0 <fb_schema_table_missing@@Base+0x70>
  41cb92:	mov    rcx,QWORD PTR [r13+0x10]
  41cb96:	mov    rdx,rax
  41cb99:	mov    rdi,rbp
  41cb9c:	xor    eax,eax
  41cb9e:	push   r8
  41cba0:	mov    r8,QWORD PTR [r13+0x18]
  41cba4:	mov    r9d,DWORD PTR [rsp+0x1c]
  41cba9:	call   41c950 <__flatcc_fb_print_error@@Base>
  41cbae:	pop    rcx
  41cbaf:	pop    rsi
  41cbb0:	jmp    41cb59 <__flatcc_error_report@@Base+0xa9>
  41cbb2:	nop    WORD PTR [rax+rax*1+0x0]
  41cbb8:	mov    rsi,r13
  41cbbb:	mov    rdi,rbp
  41cbbe:	mov    DWORD PTR [rsp+0xc],r9d
  41cbc3:	mov    QWORD PTR [rsp],r8
  41cbc7:	call   41ca80 <__flatcc_error_find_file_of_token@@Base>
  41cbcc:	mov    rsi,rbx
  41cbcf:	mov    rdi,rbp
  41cbd2:	mov    r14,rax
  41cbd5:	call   41ca80 <__flatcc_error_find_file_of_token@@Base>
  41cbda:	mov    rdx,QWORD PTR [rbx+0x8]
  41cbde:	sub    rsp,0x8
  41cbe2:	push   QWORD PTR [rbx]
  41cbe4:	mov    rcx,QWORD PTR [r13+0x10]
  41cbe8:	lea    rsi,[rip+0x280f1]        # 444ce0 <fb_schema_table_missing@@Base+0x90>
  41cbef:	mov    rdi,rbp
  41cbf2:	push   rdx
  41cbf3:	push   QWORD PTR [rbx+0x18]
  41cbf6:	mov    rdx,r14
  41cbf9:	push   QWORD PTR [rbx+0x10]
  41cbfc:	push   rax
  41cbfd:	xor    eax,eax
  41cbff:	push   r12
  41cc01:	mov    r8,QWORD PTR [rsp+0x38]
  41cc06:	push   r8
  41cc08:	mov    r8,QWORD PTR [r13+0x18]
  41cc0c:	mov    r9d,DWORD PTR [rsp+0x4c]
  41cc11:	call   41c950 <__flatcc_fb_print_error@@Base>
  41cc16:	add    rsp,0x40
  41cc1a:	jmp    41cb59 <__flatcc_error_report@@Base+0xa9>
  41cc1f:	nop
  41cc20:	xor    r9d,r9d
  41cc23:	mov    r8,rdx
  41cc26:	jmp    41caf5 <__flatcc_error_report@@Base+0x45>
  41cc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc30:	lea    rsi,[rip+0x28937]        # 44556e <fb_schema_table_missing@@Base+0x91e>
  41cc37:	mov    rdx,r12
  41cc3a:	mov    rdi,rbp
  41cc3d:	xor    eax,eax
  41cc3f:	call   41c950 <__flatcc_fb_print_error@@Base>
  41cc44:	jmp    41cb59 <__flatcc_error_report@@Base+0xa9>
  41cc49:	nop    DWORD PTR [rax+0x0]
  41cc50:	lea    rsi,[rip+0x280e1]        # 444d38 <fb_schema_table_missing@@Base+0xe8>
  41cc57:	mov    rdi,rbp
  41cc5a:	xor    eax,eax
  41cc5c:	call   41c950 <__flatcc_fb_print_error@@Base>
  41cc61:	jmp    41cb59 <__flatcc_error_report@@Base+0xa9>
  41cc66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc70:	push   r12
  41cc72:	push   rbp
  41cc73:	mov    rbp,rsi
  41cc76:	push   rbx
  41cc77:	mov    rdx,QWORD PTR [rdi+0x60]
  41cc7b:	mov    rbx,rdi
  41cc7e:	mov    r12,QWORD PTR [rdi+0x48]
  41cc82:	lea    rax,[rdx+0x20]
  41cc86:	cmp    rax,QWORD PTR [rdi+0x50]
  41cc8a:	ja     41cd70 <__flatcc_error_report@@Base+0x2c0>
  41cc90:	mov    QWORD PTR [rbx+0x60],rax
  41cc94:	mov    rdi,rbx
  41cc97:	mov    QWORD PTR [rdx+0x8],r12
  41cc9b:	mov    QWORD PTR [rbp+0x0],rdx
  41cc9f:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41cca4:	mov    rax,QWORD PTR [rbx+0x48]
  41cca8:	mov    r12,QWORD PTR [rbp+0x0]
  41ccac:	cmp    QWORD PTR [rax+0x20],0x2e
  41ccb1:	je     41cce2 <__flatcc_error_report@@Base+0x232>
  41ccb3:	jmp    41cd40 <__flatcc_error_report@@Base+0x290>
  41ccb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccc0:	mov    QWORD PTR [rbx+0x60],rax
  41ccc4:	mov    rdi,rbx
  41ccc7:	mov    QWORD PTR [rdx+0x8],rbp
  41cccb:	mov    QWORD PTR [r12],rdx
  41cccf:	mov    r12,rdx
  41ccd2:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41ccd7:	mov    rax,QWORD PTR [rbx+0x48]
  41ccdb:	cmp    QWORD PTR [rax+0x20],0x2e
  41cce0:	jne    41cd40 <__flatcc_error_report@@Base+0x290>
  41cce2:	mov    rdi,rbx
  41cce5:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41ccea:	mov    rbp,QWORD PTR [rbx+0x48]
  41ccee:	cmp    QWORD PTR [rbp+0x20],0x9
  41ccf3:	jne    41cd48 <__flatcc_error_report@@Base+0x298>
  41ccf5:	mov    rdx,QWORD PTR [rbx+0x60]
  41ccf9:	lea    rax,[rdx+0x20]
  41ccfd:	cmp    rax,QWORD PTR [rbx+0x50]
  41cd01:	jbe    41ccc0 <__flatcc_error_report@@Base+0x210>
  41cd03:	mov    esi,0x1
  41cd08:	mov    edi,0x10000
  41cd0d:	call   405130 <calloc@plt>
  41cd12:	test   rax,rax
  41cd15:	je     41cda7 <__flatcc_error_report@@Base+0x2f7>
  41cd1b:	mov    rdx,QWORD PTR [rbx+0x58]
  41cd1f:	lea    rcx,[rax+0x10000]
  41cd26:	mov    QWORD PTR [rbx+0x58],rax
  41cd2a:	mov    QWORD PTR [rbx+0x50],rcx
  41cd2e:	mov    QWORD PTR [rax],rdx
  41cd31:	lea    rdx,[rax+0x10]
  41cd35:	add    rax,0x30
  41cd39:	jmp    41ccc0 <__flatcc_error_report@@Base+0x210>
  41cd3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd40:	pop    rbx
  41cd41:	pop    rbp
  41cd42:	pop    r12
  41cd44:	ret    
  41cd45:	nop    DWORD PTR [rax]
  41cd48:	mov    rsi,rbp
  41cd4b:	mov    rdi,rbx
  41cd4e:	lea    rdx,[rip+0x2800b]        # 444d60 <fb_schema_table_missing@@Base+0x110>
  41cd55:	pop    rbx
  41cd56:	pop    rbp
  41cd57:	pop    r12
  41cd59:	xor    r9d,r9d
  41cd5c:	xor    r8d,r8d
  41cd5f:	xor    ecx,ecx
  41cd61:	jmp    41cab0 <__flatcc_error_report@@Base>
  41cd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd70:	mov    esi,0x1
  41cd75:	mov    edi,0x10000
  41cd7a:	call   405130 <calloc@plt>
  41cd7f:	test   rax,rax
  41cd82:	je     41cda7 <__flatcc_error_report@@Base+0x2f7>
  41cd84:	mov    rdx,QWORD PTR [rbx+0x58]
  41cd88:	lea    rcx,[rax+0x10000]
  41cd8f:	mov    QWORD PTR [rbx+0x58],rax
  41cd93:	mov    QWORD PTR [rbx+0x50],rcx
  41cd97:	mov    QWORD PTR [rax],rdx
  41cd9a:	lea    rdx,[rax+0x10]
  41cd9e:	add    rax,0x30
  41cda2:	jmp    41cc90 <__flatcc_error_report@@Base+0x1e0>
  41cda7:	call   40526e <__sprintf_chk@plt+0x5e>
  41cdac:	nop    DWORD PTR [rax+0x0]
  41cdb0:	mov    rax,QWORD PTR [rdi+0x48]
  41cdb4:	mov    QWORD PTR [rdi+0x40],0x0
  41cdbc:	cmp    QWORD PTR [rax+0x20],rsi
  41cdc0:	je     41cde0 <__flatcc_error_report@@Base+0x330>
  41cdc2:	push   rbx
  41cdc3:	mov    rsi,rax
  41cdc6:	mov    rbx,rdi
  41cdc9:	xor    r9d,r9d
  41cdcc:	xor    r8d,r8d
  41cdcf:	call   41cab0 <__flatcc_error_report@@Base>
  41cdd4:	mov    rax,QWORD PTR [rbx+0x48]
  41cdd8:	pop    rbx
  41cdd9:	ret    
  41cdda:	nop    WORD PTR [rax+rax*1+0x0]
  41cde0:	jmp    41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41cde5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cdf0:	push   r13
  41cdf2:	push   r12
  41cdf4:	mov    eax,0x1
  41cdf9:	push   rbp
  41cdfa:	push   rbx
  41cdfb:	xor    ebp,ebp
  41cdfd:	mov    rbx,rdi
  41ce00:	mov    r13,rsi
  41ce03:	sub    rsp,0x8
  41ce07:	mov    r12,QWORD PTR [rdi+0x48]
  41ce0b:	mov    WORD PTR [rsi+0x10],ax
  41ce0f:	mov    rax,QWORD PTR [r12+0x20]
  41ce14:	cmp    rax,0x5b
  41ce18:	jne    41d01a <__flatcc_error_report@@Base+0x56a>
  41ce1e:	xchg   ax,ax
  41ce20:	mov    rdi,rbx
  41ce23:	add    ebp,0x1
  41ce26:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41ce2b:	mov    rdx,QWORD PTR [rbx+0x48]
  41ce2f:	mov    rax,QWORD PTR [rdx+0x20]
  41ce33:	cmp    rax,0x5b
  41ce37:	je     41ce20 <__flatcc_error_report@@Base+0x370>
  41ce39:	cmp    ebp,0x1
  41ce3c:	je     41ce60 <__flatcc_error_report@@Base+0x3b0>
  41ce3e:	lea    rdx,[rip+0x27f43]        # 444d88 <fb_schema_table_missing@@Base+0x138>
  41ce45:	xor    r9d,r9d
  41ce48:	xor    r8d,r8d
  41ce4b:	xor    ecx,ecx
  41ce4d:	mov    rsi,r12
  41ce50:	mov    rdi,rbx
  41ce53:	call   41cab0 <__flatcc_error_report@@Base>
  41ce58:	mov    rdx,QWORD PTR [rbx+0x48]
  41ce5c:	mov    rax,QWORD PTR [rdx+0x20]
  41ce60:	cmp    rax,0xfffffffffffffc28
  41ce66:	jle    41cf90 <__flatcc_error_report@@Base+0x4e0>
  41ce6c:	cmp    rax,0xfffffffffffffc32
  41ce72:	je     41cfd8 <__flatcc_error_report@@Base+0x528>
  41ce78:	jle    41cf56 <__flatcc_error_report@@Base+0x4a6>
  41ce7e:	cmp    rax,0x9
  41ce82:	je     41cff0 <__flatcc_error_report@@Base+0x540>
  41ce88:	cmp    rax,0x5d
  41ce8c:	jne    41d060 <__flatcc_error_report@@Base+0x5b0>
  41ce92:	lea    rdx,[rip+0x286e0]        # 445579 <fb_schema_table_missing@@Base+0x929>
  41ce99:	xor    r9d,r9d
  41ce9c:	xor    r8d,r8d
  41ce9f:	xor    ecx,ecx
  41cea1:	xor    esi,esi
  41cea3:	mov    rdi,rbx
  41cea6:	call   41cab0 <__flatcc_error_report@@Base>
  41ceab:	jmp    41cec0 <__flatcc_error_report@@Base+0x410>
  41cead:	nop    DWORD PTR [rax]
  41ceb0:	mov    rdi,rbx
  41ceb3:	sub    ebp,0x1
  41ceb6:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41cebb:	cmp    ebp,0xffffffff
  41cebe:	je     41cee0 <__flatcc_error_report@@Base+0x430>
  41cec0:	mov    rax,QWORD PTR [rbx+0x48]
  41cec4:	cmp    QWORD PTR [rax+0x20],0x5d
  41cec9:	je     41ceb0 <__flatcc_error_report@@Base+0x400>
  41cecb:	test   ebp,ebp
  41cecd:	jne    41cee0 <__flatcc_error_report@@Base+0x430>
  41cecf:	add    rsp,0x8
  41ced3:	pop    rbx
  41ced4:	pop    rbp
  41ced5:	pop    r12
  41ced7:	pop    r13
  41ced9:	ret    
  41ceda:	nop    WORD PTR [rax+rax*1+0x0]
  41cee0:	lea    rdx,[rip+0x27ec9]        # 444db0 <fb_schema_table_missing@@Base+0x160>
  41cee7:	xor    r9d,r9d
  41ceea:	xor    r8d,r8d
  41ceed:	xor    esi,esi
  41ceef:	mov    rcx,r12
  41cef2:	mov    rdi,rbx
  41cef5:	call   41cab0 <__flatcc_error_report@@Base>
  41cefa:	mov    rbp,QWORD PTR [rbx+0x48]
  41cefe:	cmp    QWORD PTR [rbp+0x20],0x5d
  41cf03:	jne    41cecf <__flatcc_error_report@@Base+0x41f>
  41cf05:	mov    rdi,rbx
  41cf08:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41cf0d:	lea    rdx,[rip+0x28698]        # 4455ac <fb_schema_table_missing@@Base+0x95c>
  41cf14:	xor    r9d,r9d
  41cf17:	xor    r8d,r8d
  41cf1a:	mov    rcx,r12
  41cf1d:	mov    rsi,rbp
  41cf20:	mov    rdi,rbx
  41cf23:	call   41cab0 <__flatcc_error_report@@Base>
  41cf28:	mov    rax,QWORD PTR [rbx+0x48]
  41cf2c:	cmp    QWORD PTR [rax+0x20],0x5d
  41cf31:	jne    41cecf <__flatcc_error_report@@Base+0x41f>
  41cf33:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf38:	mov    rdi,rbx
  41cf3b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41cf40:	mov    rax,QWORD PTR [rbx+0x48]
  41cf44:	cmp    QWORD PTR [rax+0x20],0x5d
  41cf49:	je     41cf38 <__flatcc_error_report@@Base+0x488>
  41cf4b:	add    rsp,0x8
  41cf4f:	pop    rbx
  41cf50:	pop    rbp
  41cf51:	pop    r12
  41cf53:	pop    r13
  41cf55:	ret    
  41cf56:	cmp    rax,0xfffffffffffffc2a
  41cf5c:	jl     41cf70 <__flatcc_error_report@@Base+0x4c0>
  41cf5e:	cmp    rax,0xfffffffffffffc2f
  41cf64:	jle    41cfb8 <__flatcc_error_report@@Base+0x508>
  41cf66:	cmp    rax,0xfffffffffffffc31
  41cf6c:	je     41cfb8 <__flatcc_error_report@@Base+0x508>
  41cf6e:	xchg   ax,ax
  41cf70:	lea    rdx,[rip+0x2861e]        # 445595 <fb_schema_table_missing@@Base+0x945>
  41cf77:	xor    r9d,r9d
  41cf7a:	xor    r8d,r8d
  41cf7d:	xor    ecx,ecx
  41cf7f:	xor    esi,esi
  41cf81:	mov    rdi,rbx
  41cf84:	call   41cab0 <__flatcc_error_report@@Base>
  41cf89:	jmp    41cec0 <__flatcc_error_report@@Base+0x410>
  41cf8e:	xchg   ax,ax
  41cf90:	cmp    rax,0xfffffffffffffc27
  41cf96:	jge    41cfb8 <__flatcc_error_report@@Base+0x508>
  41cf98:	cmp    rax,0xfffffffffffffc23
  41cf9e:	jg     41d04f <__flatcc_error_report@@Base+0x59f>
  41cfa4:	cmp    rax,0xfffffffffffffc1c
  41cfaa:	jge    41cfb8 <__flatcc_error_report@@Base+0x508>
  41cfac:	add    rax,0x3e7
  41cfb2:	cmp    rax,0x1
  41cfb6:	ja     41cf70 <__flatcc_error_report@@Base+0x4c0>
  41cfb8:	mov    QWORD PTR [r13+0x0],rdx
  41cfbc:	mov    eax,0x7
  41cfc1:	mov    WORD PTR [r13+0x10],ax
  41cfc6:	mov    rdi,rbx
  41cfc9:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41cfce:	jmp    41cec0 <__flatcc_error_report@@Base+0x410>
  41cfd3:	nop    DWORD PTR [rax+rax*1+0x0]
  41cfd8:	test   ebp,ebp
  41cfda:	mov    QWORD PTR [r13+0x0],rdx
  41cfde:	mov    eax,0x9
  41cfe3:	jne    41cfc1 <__flatcc_error_report@@Base+0x511>
  41cfe5:	mov    eax,0xa
  41cfea:	jmp    41cfc1 <__flatcc_error_report@@Base+0x511>
  41cfec:	nop    DWORD PTR [rax+0x0]
  41cff0:	mov    rsi,r13
  41cff3:	mov    rdi,rbx
  41cff6:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  41cffb:	test   ebp,ebp
  41cffd:	mov    eax,0xb
  41d002:	je     41d013 <__flatcc_error_report@@Base+0x563>
  41d004:	mov    WORD PTR [r13+0x10],ax
  41d009:	jmp    41cec0 <__flatcc_error_report@@Base+0x410>
  41d00e:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  41d013:	mov    eax,0xc
  41d018:	jmp    41d004 <__flatcc_error_report@@Base+0x554>
  41d01a:	cmp    rax,0xfffffffffffffc28
  41d020:	jle    41d099 <__flatcc_error_report@@Base+0x5e9>
  41d022:	cmp    rax,0xfffffffffffffc32
  41d028:	je     41d0c4 <__flatcc_error_report@@Base+0x614>
  41d02e:	jle    41d071 <__flatcc_error_report@@Base+0x5c1>
  41d030:	cmp    rax,0x9
  41d034:	je     41d00e <__flatcc_error_report@@Base+0x55e>
  41d036:	cmp    rax,0x5d
  41d03a:	je     41ce92 <__flatcc_error_report@@Base+0x3e2>
  41d040:	cmp    rax,0xfffffffffffffc34
  41d046:	je     41d089 <__flatcc_error_report@@Base+0x5d9>
  41d048:	xor    ebp,ebp
  41d04a:	jmp    41cf70 <__flatcc_error_report@@Base+0x4c0>
  41d04f:	cmp    rax,0xfffffffffffffc25
  41d055:	jne    41cf70 <__flatcc_error_report@@Base+0x4c0>
  41d05b:	jmp    41cfb8 <__flatcc_error_report@@Base+0x508>
  41d060:	cmp    rax,0xfffffffffffffc34
  41d066:	jne    41cf70 <__flatcc_error_report@@Base+0x4c0>
  41d06c:	jmp    41cfb8 <__flatcc_error_report@@Base+0x508>
  41d071:	cmp    rax,0xfffffffffffffc2a
  41d077:	jl     41d048 <__flatcc_error_report@@Base+0x598>
  41d079:	cmp    rax,0xfffffffffffffc2f
  41d07f:	jle    41d089 <__flatcc_error_report@@Base+0x5d9>
  41d081:	cmp    rax,0xfffffffffffffc31
  41d087:	jne    41d048 <__flatcc_error_report@@Base+0x598>
  41d089:	mov    QWORD PTR [r13+0x0],r12
  41d08d:	xor    ebp,ebp
  41d08f:	mov    eax,0x8
  41d094:	jmp    41cfc1 <__flatcc_error_report@@Base+0x511>
  41d099:	cmp    rax,0xfffffffffffffc27
  41d09f:	jge    41d089 <__flatcc_error_report@@Base+0x5d9>
  41d0a1:	cmp    rax,0xfffffffffffffc23
  41d0a7:	jg     41d0cc <__flatcc_error_report@@Base+0x61c>
  41d0a9:	cmp    rax,0xfffffffffffffc1c
  41d0af:	jge    41d089 <__flatcc_error_report@@Base+0x5d9>
  41d0b1:	add    rax,0x3e7
  41d0b7:	cmp    rax,0x1
  41d0bb:	jbe    41d089 <__flatcc_error_report@@Base+0x5d9>
  41d0bd:	xor    ebp,ebp
  41d0bf:	jmp    41cf70 <__flatcc_error_report@@Base+0x4c0>
  41d0c4:	mov    QWORD PTR [rsi],r12
  41d0c7:	jmp    41cfe5 <__flatcc_error_report@@Base+0x535>
  41d0cc:	cmp    rax,0xfffffffffffffc25
  41d0d2:	je     41d089 <__flatcc_error_report@@Base+0x5d9>
  41d0d4:	xor    ebp,ebp
  41d0d6:	jmp    41cf70 <__flatcc_error_report@@Base+0x4c0>
  41d0db:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0e0:	push   r12
  41d0e2:	mov    r9d,0x2
  41d0e8:	push   rbp
  41d0e9:	lea    rbp,[rip+0x287b0]        # 4458a0 <fb_schema_table_missing@@Base+0xc50>
  41d0f0:	push   rbx
  41d0f1:	mov    r12,rsi
  41d0f4:	mov    rbx,rdi
  41d0f7:	mov    WORD PTR [rsi+0x10],r9w
  41d0fc:	mov    QWORD PTR [rsi],0x0
  41d103:	mov    DWORD PTR [rsi+0x8],0x0
  41d10a:	mov    rsi,QWORD PTR [rbx+0x48]
  41d10e:	mov    rax,QWORD PTR [rsi+0x20]
  41d112:	sub    rax,0x6
  41d116:	cmp    rax,0x11
  41d11a:	ja     41d130 <__flatcc_error_report@@Base+0x680>
  41d11c:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  41d121:	add    rax,rbp
  41d124:	jmp    rax
  41d126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d130:	lea    rdx,[rip+0x27cf1]        # 444e28 <fb_schema_table_missing@@Base+0x1d8>
  41d137:	xor    r9d,r9d
  41d13a:	xor    r8d,r8d
  41d13d:	xor    ecx,ecx
  41d13f:	mov    rdi,rbx
  41d142:	call   41cab0 <__flatcc_error_report@@Base>
  41d147:	mov    rsi,QWORD PTR [rbx+0x48]
  41d14b:	mov    edx,0x1
  41d150:	mov    WORD PTR [r12+0x10],dx
  41d156:	mov    rdx,QWORD PTR [r12]
  41d15a:	test   rdx,rdx
  41d15d:	je     41d16e <__flatcc_error_report@@Base+0x6be>
  41d15f:	mov    rax,QWORD PTR [rsi]
  41d162:	sub    rax,rdx
  41d165:	mov    DWORD PTR [r12+0x8],eax
  41d16a:	mov    rsi,QWORD PTR [rbx+0x48]
  41d16e:	cmp    QWORD PTR [rsi+0x20],0x16
  41d173:	jne    41d228 <__flatcc_error_report@@Base+0x778>
  41d179:	mov    rdi,rbx
  41d17c:	pop    rbx
  41d17d:	pop    rbp
  41d17e:	pop    r12
  41d180:	jmp    41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d185:	nop    DWORD PTR [rax]
  41d188:	mov    r8d,0x1
  41d18e:	lea    rdx,[rip+0x2842e]        # 4455c3 <fb_schema_table_missing@@Base+0x973>
  41d195:	xor    r9d,r9d
  41d198:	mov    WORD PTR [r12+0x10],r8w
  41d19e:	xor    ecx,ecx
  41d1a0:	xor    r8d,r8d
  41d1a3:	mov    rdi,rbx
  41d1a6:	call   41cab0 <__flatcc_error_report@@Base>
  41d1ab:	mov    rdi,rbx
  41d1ae:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d1b3:	jmp    41d10a <__flatcc_error_report@@Base+0x65a>
  41d1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d1c0:	cmp    QWORD PTR [r12],0x0
  41d1c5:	jne    41d1ab <__flatcc_error_report@@Base+0x6fb>
  41d1c7:	mov    rax,QWORD PTR [rsi]
  41d1ca:	mov    QWORD PTR [r12],rax
  41d1ce:	jmp    41d1ab <__flatcc_error_report@@Base+0x6fb>
  41d1d0:	mov    ecx,0x1
  41d1d5:	lea    rdx,[rip+0x27c2c]        # 444e08 <fb_schema_table_missing@@Base+0x1b8>
  41d1dc:	xor    r9d,r9d
  41d1df:	mov    WORD PTR [r12+0x10],cx
  41d1e5:	xor    r8d,r8d
  41d1e8:	xor    ecx,ecx
  41d1ea:	mov    rdi,rbx
  41d1ed:	call   41cab0 <__flatcc_error_report@@Base>
  41d1f2:	jmp    41d1ab <__flatcc_error_report@@Base+0x6fb>
  41d1f4:	nop    DWORD PTR [rax+0x0]
  41d1f8:	mov    edi,0x1
  41d1fd:	lea    r8,[rip+0x283dd]        # 4455e1 <fb_schema_table_missing@@Base+0x991>
  41d204:	lea    rdx,[rip+0x27bcd]        # 444dd8 <fb_schema_table_missing@@Base+0x188>
  41d20b:	mov    WORD PTR [r12+0x10],di
  41d211:	mov    r9d,0x1
  41d217:	xor    ecx,ecx
  41d219:	mov    rdi,rbx
  41d21c:	call   41cab0 <__flatcc_error_report@@Base>
  41d221:	jmp    41d1ab <__flatcc_error_report@@Base+0x6fb>
  41d223:	nop    DWORD PTR [rax+rax*1+0x0]
  41d228:	lea    rdx,[rip+0x283b4]        # 4455e3 <fb_schema_table_missing@@Base+0x993>
  41d22f:	mov    rdi,rbx
  41d232:	xor    r9d,r9d
  41d235:	xor    r8d,r8d
  41d238:	xor    ecx,ecx
  41d23a:	call   41cab0 <__flatcc_error_report@@Base>
  41d23f:	mov    eax,0x1
  41d244:	pop    rbx
  41d245:	mov    WORD PTR [r12+0x10],ax
  41d24b:	pop    rbp
  41d24c:	pop    r12
  41d24e:	ret    
  41d24f:	nop
  41d250:	push   r14
  41d252:	push   r13
  41d254:	mov    r13,rcx
  41d257:	push   r12
  41d259:	push   rbp
  41d25a:	mov    rbp,rsi
  41d25d:	push   rbx
  41d25e:	mov    rbx,rdi
  41d261:	sub    rsp,0x20
  41d265:	mov    r12,QWORD PTR [rdi+0x48]
  41d269:	mov    rax,QWORD PTR fs:0x28
  41d272:	mov    QWORD PTR [rsp+0x18],rax
  41d277:	xor    eax,eax
  41d279:	mov    rax,QWORD PTR [r12+0x20]
  41d27e:	cmp    rax,0x2d
  41d282:	je     41d368 <__flatcc_error_report@@Base+0x8b8>
  41d288:	cmp    rax,0xa
  41d28c:	je     41d3e0 <__flatcc_error_report@@Base+0x930>
  41d292:	jle    41d2d0 <__flatcc_error_report@@Base+0x820>
  41d294:	cmp    rax,0xe
  41d298:	je     41d540 <__flatcc_error_report@@Base+0xa90>
  41d29e:	cmp    rax,0x13
  41d2a2:	je     41d338 <__flatcc_error_report@@Base+0x888>
  41d2a8:	cmp    rax,0xb
  41d2ac:	je     41d498 <__flatcc_error_report@@Base+0x9e8>
  41d2b2:	xor    r9d,r9d
  41d2b5:	xor    r8d,r8d
  41d2b8:	xor    ecx,ecx
  41d2ba:	mov    rdx,r13
  41d2bd:	mov    rsi,r12
  41d2c0:	mov    rdi,rbx
  41d2c3:	call   41cab0 <__flatcc_error_report@@Base>
  41d2c8:	jmp    41d310 <__flatcc_error_report@@Base+0x860>
  41d2ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d2d0:	cmp    rax,0xfffffffffffffc26
  41d2d6:	je     41d5b0 <__flatcc_error_report@@Base+0xb00>
  41d2dc:	cmp    rax,0x9
  41d2e0:	je     41d640 <__flatcc_error_report@@Base+0xb90>
  41d2e6:	xor    edx,edx
  41d2e8:	cmp    rax,0xfffffffffffffc24
  41d2ee:	jne    41d2b2 <__flatcc_error_report@@Base+0x802>
  41d2f0:	mov    r9d,0x6
  41d2f6:	mov    BYTE PTR [rbp+0x0],0x1
  41d2fa:	mov    WORD PTR [rbp+0x10],r9w
  41d2ff:	test   rdx,rdx
  41d302:	jne    41d510 <__flatcc_error_report@@Base+0xa60>
  41d308:	mov    rdi,rbx
  41d30b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d310:	mov    rax,QWORD PTR [rsp+0x18]
  41d315:	xor    rax,QWORD PTR fs:0x28
  41d31e:	jne    41d83c <__flatcc_error_report@@Base+0xd8c>
  41d324:	add    rsp,0x20
  41d328:	pop    rbx
  41d329:	pop    rbp
  41d32a:	pop    r12
  41d32c:	pop    r13
  41d32e:	pop    r14
  41d330:	ret    
  41d331:	nop    DWORD PTR [rax+0x0]
  41d338:	mov    DWORD PTR [rsp+0xc],edx
  41d33c:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d341:	mov    rsi,rbp
  41d344:	mov    rdi,rbx
  41d347:	call   41d0e0 <__flatcc_error_report@@Base+0x630>
  41d34c:	mov    edx,DWORD PTR [rsp+0xc]
  41d350:	and    edx,0x1
  41d353:	jne    41d310 <__flatcc_error_report@@Base+0x860>
  41d355:	mov    edi,0x1
  41d35a:	mov    WORD PTR [rbp+0x10],di
  41d35e:	jmp    41d2b2 <__flatcc_error_report@@Base+0x802>
  41d363:	nop    DWORD PTR [rax+rax*1+0x0]
  41d368:	mov    DWORD PTR [rsp+0xc],edx
  41d36c:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d371:	mov    r14,QWORD PTR [rbx+0x48]
  41d375:	mov    rax,QWORD PTR [r14+0x20]
  41d379:	cmp    rax,0xa
  41d37d:	je     41d77b <__flatcc_error_report@@Base+0xccb>
  41d383:	mov    edx,DWORD PTR [rsp+0xc]
  41d387:	jg     41d720 <__flatcc_error_report@@Base+0xc70>
  41d38d:	cmp    rax,0xfffffffffffffc26
  41d393:	je     41d770 <__flatcc_error_report@@Base+0xcc0>
  41d399:	cmp    rax,0x9
  41d39d:	jne    41d73e <__flatcc_error_report@@Base+0xc8e>
  41d3a3:	mov    rsi,rbp
  41d3a6:	mov    rdi,rbx
  41d3a9:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  41d3ae:	mov    ecx,0x1
  41d3b3:	lea    rdx,[rip+0x28284]        # 44563e <fb_schema_table_missing@@Base+0x9ee>
  41d3ba:	xor    r9d,r9d
  41d3bd:	mov    WORD PTR [rbp+0x10],cx
  41d3c1:	xor    r8d,r8d
  41d3c4:	xor    ecx,ecx
  41d3c6:	mov    rsi,r14
  41d3c9:	mov    rdi,rbx
  41d3cc:	call   41cab0 <__flatcc_error_report@@Base>
  41d3d1:	jmp    41d310 <__flatcc_error_report@@Base+0x860>
  41d3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3e0:	xor    r13d,r13d
  41d3e3:	movsxd rsi,DWORD PTR [r12+0x8]
  41d3e8:	mov    r8,QWORD PTR [r12]
  41d3ec:	mov    eax,0x5
  41d3f1:	mov    WORD PTR [rbp+0x10],ax
  41d3f5:	add    rsi,r8
  41d3f8:	cmp    r8,rsi
  41d3fb:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d401:	movzx  r9d,BYTE PTR [r8]
  41d405:	xor    edi,edi
  41d407:	cmp    r9b,0x2d
  41d40b:	sete   dil
  41d40f:	add    rdi,r8
  41d412:	cmp    rsi,rdi
  41d415:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d41b:	movsx  rdx,BYTE PTR [rdi]
  41d41f:	lea    eax,[rdx-0x30]
  41d422:	cmp    al,0x9
  41d424:	ja     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d42a:	sub    rdx,0x30
  41d42e:	mov    rcx,rdi
  41d431:	jmp    41d45f <__flatcc_error_report@@Base+0x9af>
  41d433:	nop    DWORD PTR [rax+rax*1+0x0]
  41d438:	movsx  rax,BYTE PTR [rcx]
  41d43c:	lea    r10d,[rax-0x30]
  41d440:	cmp    r10b,0x9
  41d444:	ja     41d5d0 <__flatcc_error_report@@Base+0xb20>
  41d44a:	lea    r10,[rdx+rdx*4]
  41d44e:	lea    rax,[rax+r10*2-0x30]
  41d453:	cmp    rax,rdx
  41d456:	jb     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d45c:	mov    rdx,rax
  41d45f:	add    rcx,0x1
  41d463:	cmp    rsi,rcx
  41d466:	jne    41d438 <__flatcc_error_report@@Base+0x988>
  41d468:	cmp    r9b,0x2d
  41d46c:	mov    QWORD PTR [rbp+0x0],rdx
  41d470:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d476:	test   r13,r13
  41d479:	je     41d308 <__flatcc_error_report@@Base+0x858>
  41d47f:	mov    eax,0x4
  41d484:	neg    QWORD PTR [rbp+0x0]
  41d488:	mov    WORD PTR [rbp+0x10],ax
  41d48c:	jmp    41d308 <__flatcc_error_report@@Base+0x858>
  41d491:	nop    DWORD PTR [rax+0x0]
  41d498:	xor    r13d,r13d
  41d49b:	mov    rdi,QWORD PTR [r12]
  41d49f:	mov    r14d,0x3
  41d4a5:	lea    rsi,[rsp+0x10]
  41d4aa:	mov    WORD PTR [rbp+0x10],r14w
  41d4af:	call   4050a0 <strtod@plt>
  41d4b4:	mov    rax,QWORD PTR [r12]
  41d4b8:	vmovsd QWORD PTR [rbp+0x0],xmm0
  41d4bd:	mov    rdx,rax
  41d4c0:	add    rdx,QWORD PTR [r12+0x8]
  41d4c5:	cmp    QWORD PTR [rsp+0x10],rdx
  41d4ca:	je     41d620 <__flatcc_error_report@@Base+0xb70>
  41d4d0:	mov    r11d,0x1
  41d4d6:	lea    rdx,[rip+0x2814c]        # 445629 <fb_schema_table_missing@@Base+0x9d9>
  41d4dd:	xor    r9d,r9d
  41d4e0:	mov    WORD PTR [rbp+0x10],r11w
  41d4e5:	xor    r8d,r8d
  41d4e8:	xor    ecx,ecx
  41d4ea:	mov    rsi,r12
  41d4ed:	mov    rdi,rbx
  41d4f0:	call   41cab0 <__flatcc_error_report@@Base>
  41d4f5:	test   r13,r13
  41d4f8:	je     41d308 <__flatcc_error_report@@Base+0x858>
  41d4fe:	cmp    WORD PTR [rbp+0x10],0x6
  41d503:	jne    41d308 <__flatcc_error_report@@Base+0x858>
  41d509:	nop    DWORD PTR [rax+0x0]
  41d510:	mov    edx,0x1
  41d515:	xor    r9d,r9d
  41d518:	xor    r8d,r8d
  41d51b:	mov    WORD PTR [rbp+0x10],dx
  41d51f:	lea    rdx,[rip+0x27982]        # 444ea8 <fb_schema_table_missing@@Base+0x258>
  41d526:	xor    ecx,ecx
  41d528:	mov    rsi,r12
  41d52b:	mov    rdi,rbx
  41d52e:	call   41cab0 <__flatcc_error_report@@Base>
  41d533:	jmp    41d308 <__flatcc_error_report@@Base+0x858>
  41d538:	nop    DWORD PTR [rax+rax*1+0x0]
  41d540:	xor    r13d,r13d
  41d543:	mov    eax,0x5
  41d548:	movsxd rdx,DWORD PTR [r12+0x8]
  41d54d:	mov    WORD PTR [rbp+0x10],ax
  41d551:	mov    rax,QWORD PTR [r12]
  41d555:	lea    r8,[rax+rdx*1]
  41d559:	cmp    rax,r8
  41d55c:	je     41d57f <__flatcc_error_report@@Base+0xacf>
  41d55e:	movzx  edi,BYTE PTR [rax]
  41d561:	xor    ecx,ecx
  41d563:	cmp    dil,0x2d
  41d567:	sete   cl
  41d56a:	sub    rdx,rcx
  41d56d:	add    rax,rcx
  41d570:	cmp    rdx,0x1
  41d574:	jle    41d57f <__flatcc_error_report@@Base+0xacf>
  41d576:	cmp    BYTE PTR [rax],0x30
  41d579:	je     41d688 <__flatcc_error_report@@Base+0xbd8>
  41d57f:	mov    eax,0x1
  41d584:	lea    rdx,[rip+0x2806c]        # 4455f7 <fb_schema_table_missing@@Base+0x9a7>
  41d58b:	xor    r9d,r9d
  41d58e:	mov    WORD PTR [rbp+0x10],ax
  41d592:	xor    r8d,r8d
  41d595:	xor    ecx,ecx
  41d597:	mov    rsi,r12
  41d59a:	mov    rdi,rbx
  41d59d:	call   41cab0 <__flatcc_error_report@@Base>
  41d5a2:	jmp    41d476 <__flatcc_error_report@@Base+0x9c6>
  41d5a7:	nop    WORD PTR [rax+rax*1+0x0]
  41d5b0:	xor    edx,edx
  41d5b2:	mov    r8d,0x6
  41d5b8:	mov    BYTE PTR [rbp+0x0],0x0
  41d5bc:	mov    WORD PTR [rbp+0x10],r8w
  41d5c1:	jmp    41d2ff <__flatcc_error_report@@Base+0x84f>
  41d5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d5d0:	cmp    r8,rcx
  41d5d3:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d5d5:	cmp    rdi,rcx
  41d5d8:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d5da:	cmp    al,0x50
  41d5dc:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d5de:	jg     41d708 <__flatcc_error_report@@Base+0xc58>
  41d5e4:	cmp    al,0x2e
  41d5e6:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d5e8:	cmp    al,0x45
  41d5ea:	jne    41d468 <__flatcc_error_report@@Base+0x9b8>
  41d5f0:	mov    eax,0x1
  41d5f5:	lea    rdx,[rip+0x28016]        # 445612 <fb_schema_table_missing@@Base+0x9c2>
  41d5fc:	xor    r9d,r9d
  41d5ff:	mov    WORD PTR [rbp+0x10],ax
  41d603:	xor    r8d,r8d
  41d606:	xor    ecx,ecx
  41d608:	mov    rsi,r12
  41d60b:	mov    rdi,rbx
  41d60e:	call   41cab0 <__flatcc_error_report@@Base>
  41d613:	jmp    41d476 <__flatcc_error_report@@Base+0x9c6>
  41d618:	nop    DWORD PTR [rax+rax*1+0x0]
  41d620:	cmp    BYTE PTR [rax],0x2e
  41d623:	je     41d659 <__flatcc_error_report@@Base+0xba9>
  41d625:	test   r13,r13
  41d628:	je     41d308 <__flatcc_error_report@@Base+0x858>
  41d62e:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x285ea]        # 445c20 <fb_schema_table_missing@@Base+0xfd0>
  41d636:	vmovsd QWORD PTR [rbp+0x0],xmm0
  41d63b:	jmp    41d4fe <__flatcc_error_report@@Base+0xa4e>
  41d640:	mov    rsi,rbp
  41d643:	mov    rdi,rbx
  41d646:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  41d64b:	mov    eax,0xd
  41d650:	mov    WORD PTR [rbp+0x10],ax
  41d654:	jmp    41d310 <__flatcc_error_report@@Base+0x860>
  41d659:	mov    r10d,0x1
  41d65f:	lea    rdx,[rip+0x277f2]        # 444e58 <fb_schema_table_missing@@Base+0x208>
  41d666:	xor    r9d,r9d
  41d669:	mov    WORD PTR [rbp+0x10],r10w
  41d66e:	xor    r8d,r8d
  41d671:	xor    ecx,ecx
  41d673:	mov    rsi,r12
  41d676:	mov    rdi,rbx
  41d679:	call   41cab0 <__flatcc_error_report@@Base>
  41d67e:	jmp    41d4f5 <__flatcc_error_report@@Base+0xa45>
  41d683:	nop    DWORD PTR [rax+rax*1+0x0]
  41d688:	movzx  edx,BYTE PTR [rax+0x1]
  41d68c:	or     edx,0x20
  41d68f:	cmp    dl,0x78
  41d692:	jne    41d57f <__flatcc_error_report@@Base+0xacf>
  41d698:	lea    r10,[rax+0x2]
  41d69c:	mov    rdx,r8
  41d69f:	add    rax,0x12
  41d6a3:	sub    rdx,r10
  41d6a6:	cmp    rdx,0x11
  41d6aa:	cmovl  rax,r8
  41d6ae:	cmp    r10,rax
  41d6b1:	je     41d57f <__flatcc_error_report@@Base+0xacf>
  41d6b7:	mov    rcx,r10
  41d6ba:	xor    esi,esi
  41d6bc:	jmp    41d6d2 <__flatcc_error_report@@Base+0xc22>
  41d6be:	xchg   ax,ax
  41d6c0:	shl    rsi,0x4
  41d6c4:	lea    rsi,[rsi+rdx*1-0x30]
  41d6c9:	add    rcx,0x1
  41d6cd:	cmp    rcx,rax
  41d6d0:	je     41d751 <__flatcc_error_report@@Base+0xca1>
  41d6d2:	movzx  edx,BYTE PTR [rcx]
  41d6d5:	lea    r9d,[rdx-0x30]
  41d6d9:	cmp    r9b,0x9
  41d6dd:	jbe    41d6c0 <__flatcc_error_report@@Base+0xc10>
  41d6df:	mov    r9d,edx
  41d6e2:	or     r9d,0x20
  41d6e6:	lea    r11d,[r9-0x61]
  41d6ea:	cmp    r11b,0x5
  41d6ee:	ja     41d7e8 <__flatcc_error_report@@Base+0xd38>
  41d6f4:	shl    rsi,0x4
  41d6f8:	movzx  r9d,r9b
  41d6fc:	lea    rsi,[rsi+r9*1-0x57]
  41d701:	jmp    41d6c9 <__flatcc_error_report@@Base+0xc19>
  41d703:	nop    DWORD PTR [rax+rax*1+0x0]
  41d708:	cmp    al,0x65
  41d70a:	je     41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d710:	cmp    al,0x70
  41d712:	jne    41d468 <__flatcc_error_report@@Base+0x9b8>
  41d718:	jmp    41d5f0 <__flatcc_error_report@@Base+0xb40>
  41d71d:	nop    DWORD PTR [rax]
  41d720:	cmp    rax,0xe
  41d724:	je     41d7dd <__flatcc_error_report@@Base+0xd2d>
  41d72a:	cmp    rax,0x13
  41d72e:	je     41d791 <__flatcc_error_report@@Base+0xce1>
  41d730:	cmp    rax,0xb
  41d734:	je     41d786 <__flatcc_error_report@@Base+0xcd6>
  41d736:	mov    r12,r14
  41d739:	jmp    41d2b2 <__flatcc_error_report@@Base+0x802>
  41d73e:	cmp    rax,0xfffffffffffffc24
  41d744:	jne    41d736 <__flatcc_error_report@@Base+0xc86>
  41d746:	mov    rdx,r12
  41d749:	mov    r12,r14
  41d74c:	jmp    41d2f0 <__flatcc_error_report@@Base+0x840>
  41d751:	cmp    r8,rcx
  41d754:	jne    41d81f <__flatcc_error_report@@Base+0xd6f>
  41d75a:	cmp    dil,0x2d
  41d75e:	mov    QWORD PTR [rbp+0x0],rsi
  41d762:	jne    41d476 <__flatcc_error_report@@Base+0x9c6>
  41d768:	jmp    41d57f <__flatcc_error_report@@Base+0xacf>
  41d76d:	nop    DWORD PTR [rax]
  41d770:	mov    rdx,r12
  41d773:	mov    r12,r14
  41d776:	jmp    41d5b2 <__flatcc_error_report@@Base+0xb02>
  41d77b:	mov    r13,r12
  41d77e:	mov    r12,r14
  41d781:	jmp    41d3e3 <__flatcc_error_report@@Base+0x933>
  41d786:	mov    r13,r12
  41d789:	mov    r12,r14
  41d78c:	jmp    41d49b <__flatcc_error_report@@Base+0x9eb>
  41d791:	mov    rdi,rbx
  41d794:	mov    DWORD PTR [rsp+0xc],edx
  41d798:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d79d:	mov    rsi,rbp
  41d7a0:	mov    rdi,rbx
  41d7a3:	call   41d0e0 <__flatcc_error_report@@Base+0x630>
  41d7a8:	mov    edx,DWORD PTR [rsp+0xc]
  41d7ac:	and    edx,0x1
  41d7af:	je     41d841 <__flatcc_error_report@@Base+0xd91>
  41d7b5:	mov    esi,0x1
  41d7ba:	lea    rdx,[rip+0x276bf]        # 444e80 <fb_schema_table_missing@@Base+0x230>
  41d7c1:	xor    r9d,r9d
  41d7c4:	mov    WORD PTR [rbp+0x10],si
  41d7c8:	xor    r8d,r8d
  41d7cb:	xor    ecx,ecx
  41d7cd:	mov    rsi,r14
  41d7d0:	mov    rdi,rbx
  41d7d3:	call   41cab0 <__flatcc_error_report@@Base>
  41d7d8:	jmp    41d310 <__flatcc_error_report@@Base+0x860>
  41d7dd:	mov    r13,r12
  41d7e0:	mov    r12,r14
  41d7e3:	jmp    41d543 <__flatcc_error_report@@Base+0xa93>
  41d7e8:	cmp    r10,rcx
  41d7eb:	je     41d57f <__flatcc_error_report@@Base+0xacf>
  41d7f1:	cmp    r8,rcx
  41d7f4:	je     41d75a <__flatcc_error_report@@Base+0xcaa>
  41d7fa:	cmp    rax,rcx
  41d7fd:	je     41d822 <__flatcc_error_report@@Base+0xd72>
  41d7ff:	cmp    dl,0x50
  41d802:	je     41d57f <__flatcc_error_report@@Base+0xacf>
  41d808:	cmp    dl,0x70
  41d80b:	je     41d57f <__flatcc_error_report@@Base+0xacf>
  41d811:	cmp    dl,0x2e
  41d814:	jne    41d75a <__flatcc_error_report@@Base+0xcaa>
  41d81a:	jmp    41d57f <__flatcc_error_report@@Base+0xacf>
  41d81f:	movzx  edx,BYTE PTR [rcx]
  41d822:	lea    eax,[rdx-0x30]
  41d825:	cmp    al,0x9
  41d827:	jbe    41d57f <__flatcc_error_report@@Base+0xacf>
  41d82d:	or     edx,0x20
  41d830:	lea    eax,[rdx-0x61]
  41d833:	cmp    al,0x5
  41d835:	ja     41d7ff <__flatcc_error_report@@Base+0xd4f>
  41d837:	jmp    41d57f <__flatcc_error_report@@Base+0xacf>
  41d83c:	call   4050d0 <__stack_chk_fail@plt>
  41d841:	mov    r12,r14
  41d844:	jmp    41d355 <__flatcc_error_report@@Base+0x8a5>
  41d849:	nop    DWORD PTR [rax+0x0]
  41d850:	push   r15
  41d852:	push   r14
  41d854:	push   r13
  41d856:	push   r12
  41d858:	push   rbp
  41d859:	push   rbx
  41d85a:	xor    ebp,ebp
  41d85c:	sub    rsp,0x8
  41d860:	mov    r12,QWORD PTR [rdi+0x48]
  41d864:	cmp    QWORD PTR [r12+0x20],0x28
  41d86a:	je     41d880 <__flatcc_error_report@@Base+0xdd0>
  41d86c:	add    rsp,0x8
  41d870:	mov    rax,rbp
  41d873:	pop    rbx
  41d874:	pop    rbp
  41d875:	pop    r12
  41d877:	pop    r13
  41d879:	pop    r14
  41d87b:	pop    r15
  41d87d:	ret    
  41d87e:	xchg   ax,ax
  41d880:	mov    rbx,rdi
  41d883:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d888:	mov    r14,QWORD PTR [rbx+0x48]
  41d88c:	cmp    QWORD PTR [r14+0x20],0x9
  41d891:	je     41d8b0 <__flatcc_error_report@@Base+0xe00>
  41d893:	lea    rdx,[rip+0x27686]        # 444f20 <fb_schema_table_missing@@Base+0x2d0>
  41d89a:	mov    rcx,r12
  41d89d:	mov    esi,0x29
  41d8a2:	mov    rdi,rbx
  41d8a5:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41d8aa:	jmp    41d86c <__flatcc_error_report@@Base+0xdbc>
  41d8ac:	nop    DWORD PTR [rax+0x0]
  41d8b0:	mov    rdi,rbx
  41d8b3:	xor    r15d,r15d
  41d8b6:	lea    r13,[rip+0x27613]        # 444ed0 <fb_schema_table_missing@@Base+0x280>
  41d8bd:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d8c2:	mov    rbp,QWORD PTR [rbx+0x60]
  41d8c6:	lea    rax,[rbp+0x30]
  41d8ca:	cmp    rax,QWORD PTR [rbx+0x50]
  41d8ce:	ja     41d947 <__flatcc_error_report@@Base+0xe97>
  41d8d0:	mov    QWORD PTR [rbx+0x60],rax
  41d8d4:	mov    rax,QWORD PTR [rbx+0x48]
  41d8d8:	mov    QWORD PTR [rbp+0x0],r15
  41d8dc:	mov    QWORD PTR [rbp+0x8],r14
  41d8e0:	cmp    QWORD PTR [rax+0x20],0x3a
  41d8e5:	jne    41d903 <__flatcc_error_report@@Base+0xe53>
  41d8e7:	mov    rdi,rbx
  41d8ea:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d8ef:	lea    rsi,[rbp+0x10]
  41d8f3:	mov    rcx,r13
  41d8f6:	mov    edx,0x1
  41d8fb:	mov    rdi,rbx
  41d8fe:	call   41d250 <__flatcc_error_report@@Base+0x7a0>
  41d903:	cmp    DWORD PTR [rbx+0xd0],0x9
  41d90a:	jg     41d86c <__flatcc_error_report@@Base+0xdbc>
  41d910:	mov    rax,QWORD PTR [rbx+0x48]
  41d914:	cmp    QWORD PTR [rax+0x20],0x2c
  41d919:	jne    41d99a <__flatcc_error_report@@Base+0xeea>
  41d91b:	mov    rdi,rbx
  41d91e:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d923:	mov    r14,QWORD PTR [rbx+0x48]
  41d927:	cmp    QWORD PTR [r14+0x20],0x9
  41d92c:	jne    41d980 <__flatcc_error_report@@Base+0xed0>
  41d92e:	mov    rdi,rbx
  41d931:	mov    r15,rbp
  41d934:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41d939:	mov    rbp,QWORD PTR [rbx+0x60]
  41d93d:	lea    rax,[rbp+0x30]
  41d941:	cmp    rax,QWORD PTR [rbx+0x50]
  41d945:	jbe    41d8d0 <__flatcc_error_report@@Base+0xe20>
  41d947:	mov    esi,0x1
  41d94c:	mov    edi,0x10000
  41d951:	call   405130 <calloc@plt>
  41d956:	test   rax,rax
  41d959:	je     41d9d0 <__flatcc_error_report@@Base+0xf20>
  41d95b:	mov    rdx,QWORD PTR [rbx+0x58]
  41d95f:	lea    rbp,[rax+0x10]
  41d963:	mov    QWORD PTR [rbx+0x58],rax
  41d967:	mov    QWORD PTR [rax],rdx
  41d96a:	lea    rdx,[rax+0x10000]
  41d971:	add    rax,0x40
  41d975:	mov    QWORD PTR [rbx+0x50],rdx
  41d979:	jmp    41d8d0 <__flatcc_error_report@@Base+0xe20>
  41d97e:	xchg   ax,ax
  41d980:	lea    rdx,[rip+0x27569]        # 444ef0 <fb_schema_table_missing@@Base+0x2a0>
  41d987:	xor    r9d,r9d
  41d98a:	xor    r8d,r8d
  41d98d:	xor    ecx,ecx
  41d98f:	mov    rsi,r14
  41d992:	mov    rdi,rbx
  41d995:	call   41cab0 <__flatcc_error_report@@Base>
  41d99a:	lea    rdx,[rip+0x2757f]        # 444f20 <fb_schema_table_missing@@Base+0x2d0>
  41d9a1:	mov    rcx,r12
  41d9a4:	mov    esi,0x29
  41d9a9:	mov    rdi,rbx
  41d9ac:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41d9b1:	xor    edx,edx
  41d9b3:	jmp    41d9bb <__flatcc_error_report@@Base+0xf0b>
  41d9b5:	nop    DWORD PTR [rax]
  41d9b8:	mov    rbp,rax
  41d9bb:	mov    rax,QWORD PTR [rbp+0x0]
  41d9bf:	mov    QWORD PTR [rbp+0x0],rdx
  41d9c3:	mov    rdx,rbp
  41d9c6:	test   rax,rax
  41d9c9:	jne    41d9b8 <__flatcc_error_report@@Base+0xf08>
  41d9cb:	jmp    41d86c <__flatcc_error_report@@Base+0xdbc>
  41d9d0:	call   40526e <__sprintf_chk@plt+0x5e>
  41d9d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d9e0:	push   r15
  41d9e2:	push   r14
  41d9e4:	push   r13
  41d9e6:	push   r12
  41d9e8:	push   rbp
  41d9e9:	push   rbx
  41d9ea:	mov    rbx,rdi
  41d9ed:	sub    rsp,0x8
  41d9f1:	mov    r13,QWORD PTR [rdi+0x48]
  41d9f5:	cmp    QWORD PTR [r13+0x20],0x9
  41d9fa:	jne    41ddf8 <__flatcc_error_report@@Base+0x1348>
  41da00:	mov    rbp,rsi
  41da03:	mov    r12,rdx
  41da06:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41da0b:	mov    QWORD PTR [rbp+0x8],r13
  41da0f:	mov    rdi,rbx
  41da12:	call   41d850 <__flatcc_error_report@@Base+0xda0>
  41da17:	mov    rsi,QWORD PTR [rbx+0x48]
  41da1b:	mov    QWORD PTR [rbp+0x38],rax
  41da1f:	cmp    QWORD PTR [rsi+0x20],0x7b
  41da24:	jne    41de30 <__flatcc_error_report@@Base+0x1380>
  41da2a:	mov    rdi,rbx
  41da2d:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41da32:	nop    WORD PTR [rax+rax*1+0x0]
  41da38:	mov    r14,QWORD PTR [rbx+0x48]
  41da3c:	mov    r13,QWORD PTR [r14+0x20]
  41da40:	cmp    r13,0x7d
  41da44:	je     41dd9f <__flatcc_error_report@@Base+0x12ef>
  41da4a:	mov    r15,QWORD PTR [rbx+0x60]
  41da4e:	cmp    r12,0xfffffffffffffc39
  41da55:	lea    rax,[r15+0xb0]
  41da5c:	je     41dba8 <__flatcc_error_report@@Base+0x10f8>
  41da62:	cmp    rax,QWORD PTR [rbx+0x50]
  41da66:	ja     41db68 <__flatcc_error_report@@Base+0x10b8>
  41da6c:	mov    QWORD PTR [rbx+0x60],rax
  41da70:	mov    rax,QWORD PTR [rbp+0x28]
  41da74:	mov    QWORD PTR [r15],rax
  41da77:	mov    eax,0x5
  41da7c:	mov    WORD PTR [r15+0x10],ax
  41da81:	mov    QWORD PTR [rbp+0x28],r15
  41da85:	mov    rax,QWORD PTR [rbx+0x40]
  41da89:	test   rax,rax
  41da8c:	je     41daa9 <__flatcc_error_report@@Base+0xff9>
  41da8e:	xor    ecx,ecx
  41da90:	jmp    41da9b <__flatcc_error_report@@Base+0xfeb>
  41da92:	nop    WORD PTR [rax+rax*1+0x0]
  41da98:	mov    rax,rdx
  41da9b:	mov    rdx,QWORD PTR [rax]
  41da9e:	mov    QWORD PTR [rax],rcx
  41daa1:	mov    rcx,rax
  41daa4:	test   rdx,rdx
  41daa7:	jne    41da98 <__flatcc_error_report@@Base+0xfe8>
  41daa9:	cmp    r13,0x9
  41daad:	mov    QWORD PTR [r15+0x68],rax
  41dab1:	mov    QWORD PTR [rbx+0x40],0x0
  41dab9:	jne    41dcb0 <__flatcc_error_report@@Base+0x1200>
  41dabf:	mov    rdi,rbx
  41dac2:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dac7:	mov    rsi,QWORD PTR [rbx+0x48]
  41dacb:	mov    QWORD PTR [r15+0x8],r14
  41dacf:	cmp    QWORD PTR [rsi+0x20],0x3a
  41dad4:	jne    41dce0 <__flatcc_error_report@@Base+0x1230>
  41dada:	mov    rdi,rbx
  41dadd:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dae2:	lea    rsi,[r15+0x18]
  41dae6:	mov    rdi,rbx
  41dae9:	call   41cdf0 <__flatcc_error_report@@Base+0x340>
  41daee:	mov    rax,QWORD PTR [rbx+0x48]
  41daf2:	cmp    QWORD PTR [rax+0x20],0x3d
  41daf7:	jne    41db19 <__flatcc_error_report@@Base+0x1069>
  41daf9:	mov    rdi,rbx
  41dafc:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41db01:	lea    rsi,[r15+0x48]
  41db05:	lea    rcx,[rip+0x2753c]        # 445048 <fb_schema_table_missing@@Base+0x3f8>
  41db0c:	mov    edx,0x2
  41db11:	mov    rdi,rbx
  41db14:	call   41d250 <__flatcc_error_report@@Base+0x7a0>
  41db19:	mov    rdi,rbx
  41db1c:	call   41d850 <__flatcc_error_report@@Base+0xda0>
  41db21:	lea    rdx,[rip+0x27548]        # 445070 <fb_schema_table_missing@@Base+0x420>
  41db28:	mov    QWORD PTR [r15+0x60],rax
  41db2c:	xor    ecx,ecx
  41db2e:	mov    esi,0x3b
  41db33:	mov    rdi,rbx
  41db36:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41db3b:	cmp    DWORD PTR [rbx+0xd0],0x9
  41db42:	jle    41da38 <__flatcc_error_report@@Base+0xf88>
  41db48:	add    rsp,0x8
  41db4c:	mov    rdi,rbx
  41db4f:	mov    esi,0x7d
  41db54:	pop    rbx
  41db55:	pop    rbp
  41db56:	pop    r12
  41db58:	pop    r13
  41db5a:	pop    r14
  41db5c:	pop    r15
  41db5e:	jmp    41c900 <__flatcc_fb_default_error_out@@Base+0x250>
  41db63:	nop    DWORD PTR [rax+rax*1+0x0]
  41db68:	mov    esi,0x1
  41db6d:	mov    edi,0x10000
  41db72:	call   405130 <calloc@plt>
  41db77:	test   rax,rax
  41db7a:	je     41de4c <__flatcc_error_report@@Base+0x139c>
  41db80:	mov    rdx,QWORD PTR [rbx+0x58]
  41db84:	lea    r15,[rax+0x10]
  41db88:	mov    QWORD PTR [rbx+0x58],rax
  41db8c:	mov    QWORD PTR [rax],rdx
  41db8f:	lea    rdx,[rax+0x10000]
  41db96:	add    rax,0xc0
  41db9c:	mov    QWORD PTR [rbx+0x50],rdx
  41dba0:	jmp    41da6c <__flatcc_error_report@@Base+0xfbc>
  41dba5:	nop    DWORD PTR [rax]
  41dba8:	cmp    rax,QWORD PTR [rbx+0x50]
  41dbac:	ja     41dd00 <__flatcc_error_report@@Base+0x1250>
  41dbb2:	mov    QWORD PTR [rbx+0x60],rax
  41dbb6:	mov    rax,QWORD PTR [rbp+0x28]
  41dbba:	mov    edx,0x5
  41dbbf:	mov    WORD PTR [r15+0x10],dx
  41dbc4:	mov    QWORD PTR [r15],rax
  41dbc7:	mov    QWORD PTR [rbp+0x28],r15
  41dbcb:	mov    rax,QWORD PTR [rbx+0x40]
  41dbcf:	test   rax,rax
  41dbd2:	je     41dbf1 <__flatcc_error_report@@Base+0x1141>
  41dbd4:	xor    ecx,ecx
  41dbd6:	jmp    41dbe3 <__flatcc_error_report@@Base+0x1133>
  41dbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dbe0:	mov    rax,rdx
  41dbe3:	mov    rdx,QWORD PTR [rax]
  41dbe6:	mov    QWORD PTR [rax],rcx
  41dbe9:	mov    rcx,rax
  41dbec:	test   rdx,rdx
  41dbef:	jne    41dbe0 <__flatcc_error_report@@Base+0x1130>
  41dbf1:	cmp    r13,0x9
  41dbf5:	mov    QWORD PTR [r15+0x68],rax
  41dbf9:	mov    QWORD PTR [rbx+0x40],0x0
  41dc01:	jne    41dd64 <__flatcc_error_report@@Base+0x12b4>
  41dc07:	mov    rdi,rbx
  41dc0a:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dc0f:	mov    rsi,QWORD PTR [rbx+0x48]
  41dc13:	mov    QWORD PTR [r15+0x8],r14
  41dc17:	cmp    QWORD PTR [rsi+0x20],0x28
  41dc1c:	jne    41dd83 <__flatcc_error_report@@Base+0x12d3>
  41dc22:	mov    rdi,rbx
  41dc25:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dc2a:	lea    rsi,[r15+0x30]
  41dc2e:	mov    rdi,rbx
  41dc31:	call   41cdf0 <__flatcc_error_report@@Base+0x340>
  41dc36:	mov    rsi,QWORD PTR [rbx+0x48]
  41dc3a:	cmp    QWORD PTR [rsi+0x20],0x29
  41dc3f:	jne    41dddc <__flatcc_error_report@@Base+0x132c>
  41dc45:	mov    rdi,rbx
  41dc48:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dc4d:	mov    rsi,QWORD PTR [rbx+0x48]
  41dc51:	cmp    QWORD PTR [rsi+0x20],0x3a
  41dc56:	jne    41de14 <__flatcc_error_report@@Base+0x1364>
  41dc5c:	mov    rdi,rbx
  41dc5f:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dc64:	lea    rsi,[r15+0x18]
  41dc68:	mov    rdi,rbx
  41dc6b:	call   41cdf0 <__flatcc_error_report@@Base+0x340>
  41dc70:	mov    r14,QWORD PTR [rbx+0x48]
  41dc74:	cmp    QWORD PTR [r14+0x20],0x3d
  41dc79:	je     41dd3d <__flatcc_error_report@@Base+0x128d>
  41dc7f:	mov    rdi,rbx
  41dc82:	call   41d850 <__flatcc_error_report@@Base+0xda0>
  41dc87:	lea    rdx,[rip+0x2740a]        # 445098 <fb_schema_table_missing@@Base+0x448>
  41dc8e:	mov    QWORD PTR [r15+0x60],rax
  41dc92:	xor    ecx,ecx
  41dc94:	mov    esi,0x3b
  41dc99:	mov    rdi,rbx
  41dc9c:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41dca1:	jmp    41db3b <__flatcc_error_report@@Base+0x108b>
  41dca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dcb0:	lea    rdx,[rip+0x279d9]        # 445690 <fb_schema_table_missing@@Base+0xa40>
  41dcb7:	xor    r9d,r9d
  41dcba:	xor    r8d,r8d
  41dcbd:	xor    ecx,ecx
  41dcbf:	mov    rsi,r14
  41dcc2:	mov    rdi,rbx
  41dcc5:	call   41cab0 <__flatcc_error_report@@Base>
  41dcca:	mov    rdi,rbx
  41dccd:	call   41c8a0 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41dcd2:	jmp    41db3b <__flatcc_error_report@@Base+0x108b>
  41dcd7:	nop    WORD PTR [rax+rax*1+0x0]
  41dce0:	lea    rdx,[rip+0x27331]        # 445018 <fb_schema_table_missing@@Base+0x3c8>
  41dce7:	xor    r9d,r9d
  41dcea:	xor    r8d,r8d
  41dced:	xor    ecx,ecx
  41dcef:	mov    rdi,rbx
  41dcf2:	call   41cab0 <__flatcc_error_report@@Base>
  41dcf7:	jmp    41dcca <__flatcc_error_report@@Base+0x121a>
  41dcf9:	nop    DWORD PTR [rax+0x0]
  41dd00:	mov    esi,0x1
  41dd05:	mov    edi,0x10000
  41dd0a:	call   405130 <calloc@plt>
  41dd0f:	test   rax,rax
  41dd12:	je     41de4c <__flatcc_error_report@@Base+0x139c>
  41dd18:	mov    rdx,QWORD PTR [rbx+0x58]
  41dd1c:	lea    r15,[rax+0x10]
  41dd20:	mov    QWORD PTR [rbx+0x58],rax
  41dd24:	mov    QWORD PTR [rax],rdx
  41dd27:	lea    rdx,[rax+0x10000]
  41dd2e:	add    rax,0xc0
  41dd34:	mov    QWORD PTR [rbx+0x50],rdx
  41dd38:	jmp    41dbb2 <__flatcc_error_report@@Base+0x1102>
  41dd3d:	mov    rdi,rbx
  41dd40:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dd45:	lea    rdx,[rip+0x272a4]        # 444ff0 <fb_schema_table_missing@@Base+0x3a0>
  41dd4c:	xor    r9d,r9d
  41dd4f:	xor    r8d,r8d
  41dd52:	xor    ecx,ecx
  41dd54:	mov    rsi,r14
  41dd57:	mov    rdi,rbx
  41dd5a:	call   41cab0 <__flatcc_error_report@@Base>
  41dd5f:	jmp    41dcca <__flatcc_error_report@@Base+0x121a>
  41dd64:	lea    rdx,[rip+0x2790a]        # 445675 <fb_schema_table_missing@@Base+0xa25>
  41dd6b:	xor    r9d,r9d
  41dd6e:	xor    r8d,r8d
  41dd71:	xor    ecx,ecx
  41dd73:	mov    rsi,r14
  41dd76:	mov    rdi,rbx
  41dd79:	call   41cab0 <__flatcc_error_report@@Base>
  41dd7e:	jmp    41dcca <__flatcc_error_report@@Base+0x121a>
  41dd83:	lea    rdx,[rip+0x271de]        # 444f68 <fb_schema_table_missing@@Base+0x318>
  41dd8a:	xor    r9d,r9d
  41dd8d:	xor    r8d,r8d
  41dd90:	xor    ecx,ecx
  41dd92:	mov    rdi,rbx
  41dd95:	call   41cab0 <__flatcc_error_report@@Base>
  41dd9a:	jmp    41dcca <__flatcc_error_report@@Base+0x121a>
  41dd9f:	mov    rdi,rbx
  41dda2:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41dda7:	mov    rax,QWORD PTR [rbp+0x28]
  41ddab:	test   rax,rax
  41ddae:	je     41ddc9 <__flatcc_error_report@@Base+0x1319>
  41ddb0:	xor    ecx,ecx
  41ddb2:	jmp    41ddbb <__flatcc_error_report@@Base+0x130b>
  41ddb4:	nop    DWORD PTR [rax+0x0]
  41ddb8:	mov    rax,rdx
  41ddbb:	mov    rdx,QWORD PTR [rax]
  41ddbe:	mov    QWORD PTR [rax],rcx
  41ddc1:	mov    rcx,rax
  41ddc4:	test   rdx,rdx
  41ddc7:	jne    41ddb8 <__flatcc_error_report@@Base+0x1308>
  41ddc9:	mov    QWORD PTR [rbp+0x28],rax
  41ddcd:	add    rsp,0x8
  41ddd1:	pop    rbx
  41ddd2:	pop    rbp
  41ddd3:	pop    r12
  41ddd5:	pop    r13
  41ddd7:	pop    r14
  41ddd9:	pop    r15
  41dddb:	ret    
  41dddc:	lea    rdx,[rip+0x271ad]        # 444f90 <fb_schema_table_missing@@Base+0x340>
  41dde3:	xor    r9d,r9d
  41dde6:	xor    r8d,r8d
  41dde9:	xor    ecx,ecx
  41ddeb:	mov    rdi,rbx
  41ddee:	call   41cab0 <__flatcc_error_report@@Base>
  41ddf3:	jmp    41dcca <__flatcc_error_report@@Base+0x121a>
  41ddf8:	lea    rdx,[rip+0x27141]        # 444f40 <fb_schema_table_missing@@Base+0x2f0>
  41ddff:	xor    r9d,r9d
  41de02:	xor    r8d,r8d
  41de05:	xor    ecx,ecx
  41de07:	mov    rsi,r13
  41de0a:	call   41cab0 <__flatcc_error_report@@Base>
  41de0f:	jmp    41db48 <__flatcc_error_report@@Base+0x1098>
  41de14:	lea    rdx,[rip+0x2719d]        # 444fb8 <fb_schema_table_missing@@Base+0x368>
  41de1b:	xor    r9d,r9d
  41de1e:	xor    r8d,r8d
  41de21:	xor    ecx,ecx
  41de23:	mov    rdi,rbx
  41de26:	call   41cab0 <__flatcc_error_report@@Base>
  41de2b:	jmp    41dcca <__flatcc_error_report@@Base+0x121a>
  41de30:	lea    rdx,[rip+0x27825]        # 44565c <fb_schema_table_missing@@Base+0xa0c>
  41de37:	xor    r9d,r9d
  41de3a:	xor    r8d,r8d
  41de3d:	xor    ecx,ecx
  41de3f:	mov    rdi,rbx
  41de42:	call   41cab0 <__flatcc_error_report@@Base>
  41de47:	jmp    41db48 <__flatcc_error_report@@Base+0x1098>
  41de4c:	call   40526e <__sprintf_chk@plt+0x5e>
  41de51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41de5c:	nop    DWORD PTR [rax+0x0]

000000000041de60 <error_ref_sym@@Base>:
  41de60:	push   r15
  41de62:	push   r14
  41de64:	push   r13
  41de66:	push   r12
  41de68:	mov    r12,rsi
  41de6b:	push   rbp
  41de6c:	push   rbx
  41de6d:	sub    rsp,0x68
  41de71:	mov    rax,QWORD PTR fs:0x28
  41de7a:	mov    QWORD PTR [rsp+0x58],rax
  41de7f:	xor    eax,eax
  41de81:	test   rsi,rsi
  41de84:	mov    QWORD PTR [rsp+0x8],rdi
  41de89:	mov    QWORD PTR [rsp+0x10],rdx
  41de8e:	mov    QWORD PTR [rsp+0x18],rcx
  41de93:	je     41df6c <error_ref_sym@@Base+0x10c>
  41de99:	mov    r13,rsi
  41de9c:	xor    r15d,r15d
  41de9f:	mov    r14d,0x32
  41dea5:	lea    rbp,[rsp+0x20]
  41deaa:	jmp    41deb5 <error_ref_sym@@Base+0x55>
  41deac:	nop    DWORD PTR [rax+0x0]
  41deb0:	test   r14d,r14d
  41deb3:	jle    41def7 <error_ref_sym@@Base+0x97>
  41deb5:	mov    rax,QWORD PTR [r13+0x8]
  41deb9:	movsxd rdi,r15d
  41debc:	mov    rbx,QWORD PTR [rax+0x8]
  41dec0:	mov    rsi,QWORD PTR [rax]
  41dec3:	cmp    ebx,r14d
  41dec6:	cmovg  ebx,r14d
  41deca:	add    rdi,rbp
  41decd:	movsxd rdx,ebx
  41ded0:	call   405160 <memcpy@plt>
  41ded5:	lea    r9d,[rbx+r15*1]
  41ded9:	mov    ecx,r14d
  41dedc:	sub    ecx,ebx
  41dede:	movsxd rax,r9d
  41dee1:	lea    r14d,[rcx-0x1]
  41dee5:	lea    r15d,[r9+0x1]
  41dee9:	mov    BYTE PTR [rsp+rax*1+0x20],0x2e
  41deee:	mov    r13,QWORD PTR [r13+0x0]
  41def2:	test   r13,r13
  41def5:	jne    41deb0 <error_ref_sym@@Base+0x50>
  41def7:	test   r15d,r15d
  41defa:	movsxd rax,r15d
  41defd:	cmovle r9d,r15d
  41df01:	test   r14d,r14d
  41df04:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41df09:	jle    41df50 <error_ref_sym@@Base+0xf0>
  41df0b:	mov    rax,QWORD PTR [rsp+0x18]
  41df10:	test   rax,rax
  41df13:	je     41df68 <error_ref_sym@@Base+0x108>
  41df15:	mov    rcx,QWORD PTR [rax+0x8]
  41df19:	mov    rsi,QWORD PTR [r12+0x8]
  41df1e:	mov    rdx,QWORD PTR [rsp+0x10]
  41df23:	mov    r8,rbp
  41df26:	mov    rdi,QWORD PTR [rsp+0x8]
  41df2b:	call   41cab0 <__flatcc_error_report@@Base>
  41df30:	mov    rax,QWORD PTR [rsp+0x58]
  41df35:	xor    rax,QWORD PTR fs:0x28
  41df3e:	jne    41df7b <error_ref_sym@@Base+0x11b>
  41df40:	add    rsp,0x68
  41df44:	pop    rbx
  41df45:	pop    rbp
  41df46:	pop    r12
  41df48:	pop    r13
  41df4a:	pop    r14
  41df4c:	pop    r15
  41df4e:	ret    
  41df4f:	nop
  41df50:	mov    rax,QWORD PTR [rsp+0x18]
  41df55:	mov    DWORD PTR [rsp+0x4f],0x2e2e2e
  41df5d:	mov    r9d,0x32
  41df63:	test   rax,rax
  41df66:	jne    41df15 <error_ref_sym@@Base+0xb5>
  41df68:	xor    ecx,ecx
  41df6a:	jmp    41df19 <error_ref_sym@@Base+0xb9>
  41df6c:	mov    BYTE PTR [rsp+0x20],0x0
  41df71:	xor    r9d,r9d
  41df74:	lea    rbp,[rsp+0x20]
  41df79:	jmp    41df0b <error_ref_sym@@Base+0xab>
  41df7b:	call   4050d0 <__stack_chk_fail@plt>

000000000041df80 <__flatcc_fb_init_parser@@Base>:
  41df80:	push   r15
  41df82:	push   r14
  41df84:	xor    eax,eax
  41df86:	push   r13
  41df88:	push   r12
  41df8a:	mov    r12,rdx
  41df8d:	push   rbp
  41df8e:	push   rbx
  41df8f:	mov    rbp,rdi
  41df92:	add    rdi,0x8
  41df96:	mov    rdx,rcx
  41df99:	mov    rcx,rbp
  41df9c:	sub    rsp,0x18
  41dfa0:	mov    QWORD PTR [rdi-0x8],0x0
  41dfa8:	mov    QWORD PTR [rdi+0x348],0x0
  41dfb3:	and    rdi,0xfffffffffffffff8
  41dfb7:	mov    r14,rsi
  41dfba:	sub    rcx,rdi
  41dfbd:	add    ecx,0x358
  41dfc3:	shr    ecx,0x3
  41dfc6:	test   rdx,rdx
  41dfc9:	rep stos QWORD PTR es:[rdi],rax
  41dfcc:	je     41e1c0 <__flatcc_fb_init_parser@@Base+0x240>
  41dfd2:	test   r14,r14
  41dfd5:	mov    QWORD PTR [rbp+0x10],rdx
  41dfd9:	mov    QWORD PTR [rbp+0x18],r8
  41dfdd:	je     41e1d8 <__flatcc_fb_init_parser@@Base+0x258>
  41dfe3:	mov    rax,QWORD PTR [r14]
  41dfe6:	lea    rdi,[rbp+0xf0]
  41dfed:	lea    rcx,[rbp+0xe8]
  41dff4:	mov    rsi,r14
  41dff7:	and    rdi,0xfffffffffffffff8
  41dffb:	mov    QWORD PTR [rbp+0xe8],rax
  41e002:	mov    rax,QWORD PTR [r14+0x108]
  41e009:	sub    rcx,rdi
  41e00c:	sub    rsi,rcx
  41e00f:	add    ecx,0x110
  41e015:	shr    ecx,0x3
  41e018:	mov    QWORD PTR [rbp+0x1f0],rax
  41e01f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41e022:	lea    rax,[rbp+0x268]
  41e029:	test   r9,r9
  41e02c:	cmove  r9,rax
  41e030:	mov    eax,DWORD PTR [rbp+0x12c]
  41e036:	mov    QWORD PTR [rbp+0x260],r9
  41e03d:	cmp    eax,0x8
  41e040:	ja     41e256 <__flatcc_fb_init_parser@@Base+0x2d6>
  41e046:	mov    edx,0x1
  41e04b:	shlx   rax,rdx,rax
  41e050:	test   eax,0x114
  41e055:	je     41e256 <__flatcc_fb_init_parser@@Base+0x2d6>
  41e05b:	mov    eax,DWORD PTR [rbp+0x130]
  41e061:	cmp    eax,0x8
  41e064:	ja     41e279 <__flatcc_fb_init_parser@@Base+0x2f9>
  41e06a:	shlx   rdx,rdx,rax
  41e06f:	test   edx,0x114
  41e075:	je     41e279 <__flatcc_fb_init_parser@@Base+0x2f9>
  41e07b:	test   r12,r12
  41e07e:	je     41e1f8 <__flatcc_fb_init_parser@@Base+0x278>
  41e084:	mov    rdi,r12
  41e087:	call   4050c0 <strlen@plt>
  41e08c:	mov    r13,rax
  41e08f:	mov    rdx,QWORD PTR [r14+0x68]
  41e093:	mov    rsi,r13
  41e096:	mov    rdi,r12
  41e099:	call   41c530 <__flatcc_fb_create_basename@@Base>
  41e09e:	test   rax,rax
  41e0a1:	mov    rbx,rax
  41e0a4:	mov    QWORD PTR [rbp+0x308],rax
  41e0ab:	je     41e2f2 <__flatcc_fb_init_parser@@Base+0x372>
  41e0b1:	mov    rdi,rax
  41e0b4:	call   4050c0 <strlen@plt>
  41e0b9:	mov    rdi,rbx
  41e0bc:	mov    rsi,rax
  41e0bf:	mov    r15,rax
  41e0c2:	call   41c060 <__flatcc_fb_copy_path_n@@Base>
  41e0c7:	test   rax,rax
  41e0ca:	mov    rdi,rax
  41e0cd:	je     41e2f2 <__flatcc_fb_init_parser@@Base+0x372>
  41e0d3:	test   r15,r15
  41e0d6:	je     41e11b <__flatcc_fb_init_parser@@Base+0x19b>
  41e0d8:	movsx  rbx,BYTE PTR [rax]
  41e0dc:	test   bl,bl
  41e0de:	je     41e11b <__flatcc_fb_init_parser@@Base+0x19b>
  41e0e0:	mov    QWORD PTR [rsp+0x8],rax
  41e0e5:	call   405030 <__ctype_toupper_loc@plt>
  41e0ea:	mov    rdi,QWORD PTR [rsp+0x8]
  41e0ef:	lea    rdx,[rdi+0x1]
  41e0f3:	lea    rsi,[rdi+r15*1]
  41e0f7:	jmp    41e10d <__flatcc_fb_init_parser@@Base+0x18d>
  41e0f9:	nop    DWORD PTR [rax+0x0]
  41e100:	add    rdx,0x1
  41e104:	movsx  rbx,BYTE PTR [rdx-0x1]
  41e109:	test   bl,bl
  41e10b:	je     41e11b <__flatcc_fb_init_parser@@Base+0x19b>
  41e10d:	mov    rcx,QWORD PTR [rax]
  41e110:	cmp    rsi,rdx
  41e113:	mov    ecx,DWORD PTR [rcx+rbx*4]
  41e116:	mov    BYTE PTR [rdx-0x1],cl
  41e119:	jne    41e100 <__flatcc_fb_init_parser@@Base+0x180>
  41e11b:	lea    rdx,[rip+0x25fcc]        # 4440ee <_IO_stdin_used@@Base+0x180ee>
  41e122:	mov    QWORD PTR [rbp+0x310],rdi
  41e129:	mov    QWORD PTR [rbp+0x2f0],rdi
  41e130:	mov    DWORD PTR [rbp+0x2f8],r15d
  41e137:	mov    rsi,r13
  41e13a:	mov    rdi,r12
  41e13d:	call   41c530 <__flatcc_fb_create_basename@@Base>
  41e142:	test   rax,rax
  41e145:	mov    QWORD PTR [rbp+0x318],rax
  41e14c:	je     41e2f2 <__flatcc_fb_init_parser@@Base+0x372>
  41e152:	mov    rdi,QWORD PTR [r14+0xe0]
  41e159:	test   rdi,rdi
  41e15c:	je     41e170 <__flatcc_fb_init_parser@@Base+0x1f0>
  41e15e:	mov    QWORD PTR [rbp+0x2d8],rdi
  41e165:	call   4050c0 <strlen@plt>
  41e16a:	mov    DWORD PTR [rbp+0x2e0],eax
  41e170:	mov    rdi,QWORD PTR [rbp+0x260]
  41e177:	xor    edx,edx
  41e179:	xor    esi,esi
  41e17b:	call   41b7e0 <fb_scope_table_find@@Base>
  41e180:	test   rax,rax
  41e183:	mov    rbx,rax
  41e186:	je     41e20a <__flatcc_fb_init_parser@@Base+0x28a>
  41e18c:	mov    rdi,QWORD PTR [rbp+0x260]
  41e193:	xor    edx,edx
  41e195:	xor    esi,esi
  41e197:	mov    QWORD PTR [rbp+0x340],rbx
  41e19e:	call   41b7e0 <fb_scope_table_find@@Base>
  41e1a3:	cmp    rax,rbx
  41e1a6:	jne    41e2d3 <__flatcc_fb_init_parser@@Base+0x353>
  41e1ac:	xor    eax,eax
  41e1ae:	add    rsp,0x18
  41e1b2:	pop    rbx
  41e1b3:	pop    rbp
  41e1b4:	pop    r12
  41e1b6:	pop    r13
  41e1b8:	pop    r14
  41e1ba:	pop    r15
  41e1bc:	ret    
  41e1bd:	nop    DWORD PTR [rax]
  41e1c0:	mov    rax,0x41c6b0
  41e1c7:	test   r14,r14
  41e1ca:	mov    QWORD PTR [rbp+0x10],rax
  41e1ce:	jne    41dfe3 <__flatcc_fb_init_parser@@Base+0x63>
  41e1d4:	nop    DWORD PTR [rax+0x0]
  41e1d8:	lea    rdi,[rbp+0xe8]
  41e1df:	mov    QWORD PTR [rsp+0x8],r9
  41e1e4:	call   405670 <flatcc_init_options@@Base>
  41e1e9:	mov    r9,QWORD PTR [rsp+0x8]
  41e1ee:	jmp    41e022 <__flatcc_fb_init_parser@@Base+0xa2>
  41e1f3:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1f8:	mov    r13d,0x4
  41e1fe:	lea    r12,[rip+0x274a5]        # 4456aa <fb_schema_table_missing@@Base+0xa5a>
  41e205:	jmp    41e08f <__flatcc_fb_init_parser@@Base+0x10f>
  41e20a:	mov    rbx,QWORD PTR [rbp+0x60]
  41e20e:	lea    rax,[rbx+0x40]
  41e212:	cmp    rax,QWORD PTR [rbp+0x50]
  41e216:	ja     41e29c <__flatcc_fb_init_parser@@Base+0x31c>
  41e21c:	mov    QWORD PTR [rbp+0x60],rax
  41e220:	mov    rdx,QWORD PTR [rbp+0x2e0]
  41e227:	mov    rsi,rbx
  41e22a:	mov    rax,QWORD PTR [rbp+0x2d8]
  41e231:	mov    rdi,QWORD PTR [rbp+0x260]
  41e238:	mov    QWORD PTR [rbx],0x0
  41e23f:	mov    QWORD PTR [rbx+0x30],rdx
  41e243:	mov    edx,0x1
  41e248:	mov    QWORD PTR [rbx+0x28],rax
  41e24c:	call   41b7d0 <fb_scope_table_insert_item@@Base>
  41e251:	jmp    41e18c <__flatcc_fb_init_parser@@Base+0x20c>
  41e256:	lea    rdx,[rip+0x26e63]        # 4450c0 <fb_schema_table_missing@@Base+0x470>
  41e25d:	xor    r9d,r9d
  41e260:	xor    r8d,r8d
  41e263:	xor    ecx,ecx
  41e265:	xor    esi,esi
  41e267:	mov    rdi,rbp
  41e26a:	call   41cab0 <__flatcc_error_report@@Base>
  41e26f:	mov    eax,0xffffffff
  41e274:	jmp    41e1ae <__flatcc_fb_init_parser@@Base+0x22e>
  41e279:	lea    rdx,[rip+0x26e78]        # 4450f8 <fb_schema_table_missing@@Base+0x4a8>
  41e280:	xor    r9d,r9d
  41e283:	xor    r8d,r8d
  41e286:	xor    ecx,ecx
  41e288:	xor    esi,esi
  41e28a:	mov    rdi,rbp
  41e28d:	call   41cab0 <__flatcc_error_report@@Base>
  41e292:	mov    eax,0xffffffff
  41e297:	jmp    41e1ae <__flatcc_fb_init_parser@@Base+0x22e>
  41e29c:	mov    esi,0x1
  41e2a1:	mov    edi,0x10000
  41e2a6:	call   405130 <calloc@plt>
  41e2ab:	test   rax,rax
  41e2ae:	je     41e2f2 <__flatcc_fb_init_parser@@Base+0x372>
  41e2b0:	mov    rdx,QWORD PTR [rbp+0x58]
  41e2b4:	lea    rbx,[rax+0x10]
  41e2b8:	mov    QWORD PTR [rbp+0x58],rax
  41e2bc:	mov    QWORD PTR [rax],rdx
  41e2bf:	lea    rdx,[rax+0x10000]
  41e2c6:	add    rax,0x50
  41e2ca:	mov    QWORD PTR [rbp+0x50],rdx
  41e2ce:	jmp    41e21c <__flatcc_fb_init_parser@@Base+0x29c>
  41e2d3:	lea    rcx,[rip+0x27816]        # 445af0 <fb_schema_table_missing@@Base+0xea0>
  41e2da:	lea    rsi,[rip+0x2697f]        # 444c60 <fb_schema_table_missing@@Base+0x10>
  41e2e1:	lea    rdi,[rip+0x26e50]        # 445138 <fb_schema_table_missing@@Base+0x4e8>
  41e2e8:	mov    edx,0x533
  41e2ed:	call   4050f0 <__assert_fail@plt>
  41e2f2:	call   40526e <__sprintf_chk@plt+0x5e>
  41e2f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e300 <__flatcc_fb_parse@@Base>:
  41e300:	push   r15
  41e302:	push   r14
  41e304:	push   r13
  41e306:	push   r12
  41e308:	mov    r13,rdi
  41e30b:	push   rbp
  41e30c:	push   rbx
  41e30d:	mov    rbx,rsi
  41e310:	sub    rsp,0x48
  41e314:	mov    QWORD PTR [rdi+0x70],rsi
  41e318:	mov    QWORD PTR [rdi+0x78],0x1
  41e320:	mov    rax,QWORD PTR fs:0x28
  41e329:	mov    QWORD PTR [rsp+0x38],rax
  41e32e:	xor    eax,eax
  41e330:	lea    rax,[rip+0x27378]        # 4456af <fb_schema_table_missing@@Base+0xa5f>
  41e337:	test   ecx,ecx
  41e339:	mov    QWORD PTR [rdi+0xa0],0x9
  41e344:	mov    QWORD PTR [rdi+0x88],0x4
  41e34f:	mov    QWORD PTR [rdi+0x98],0x0
  41e35a:	mov    QWORD PTR [rdi+0x80],rax
  41e361:	lea    rax,[rip+0x2734c]        # 4456b4 <fb_schema_table_missing@@Base+0xa64>
  41e368:	mov    QWORD PTR [rdi+0x90],0x0
  41e373:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41e37e:	mov    QWORD PTR [rdi+0xb0],0x5
  41e389:	mov    QWORD PTR [rdi+0xa8],rax
  41e390:	mov    QWORD PTR [rdi+0xc0],0x0
  41e39b:	mov    QWORD PTR [rdi+0xb8],0x0
  41e3a6:	je     41e3ac <__flatcc_fb_parse@@Base+0xac>
  41e3a8:	mov    QWORD PTR [r13+0x20],rsi
  41e3ac:	lea    r15,[rbx+rdx*1]
  41e3b0:	lea    rbp,[rip+0x27531]        # 4458e8 <fb_schema_table_missing@@Base+0xc98>
  41e3b7:	cmp    r15,rbx
  41e3ba:	je     41fc7a <__flatcc_fb_parse@@Base+0x197a>
  41e3c0:	movzx  eax,BYTE PTR [rbx]
  41e3c3:	cmp    al,0x7e
  41e3c5:	ja     41ebb7 <__flatcc_fb_parse@@Base+0x8b7>
  41e3cb:	movzx  edx,al
  41e3ce:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41e3d3:	add    rdx,rbp
  41e3d6:	jmp    rdx
  41e3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3e0:	add    rbx,0x1
  41e3e4:	cmp    r15,rbx
  41e3e7:	je     41fc7a <__flatcc_fb_parse@@Base+0x197a>
  41e3ed:	movzx  eax,BYTE PTR [rbx]
  41e3f0:	cmp    al,0x20
  41e3f2:	je     41e3e0 <__flatcc_fb_parse@@Base+0xe0>
  41e3f4:	cmp    al,0x9
  41e3f6:	je     41e3e0 <__flatcc_fb_parse@@Base+0xe0>
  41e3f8:	jmp    41e3c3 <__flatcc_fb_parse@@Base+0xc3>
  41e3fa:	lea    r14,[rbx+0x1]
  41e3fe:	mov    rdx,rbx
  41e401:	mov    esi,0x13
  41e406:	mov    rdi,r13
  41e409:	mov    rcx,r14
  41e40c:	mov    r12,r14
  41e40f:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e414:	nop    DWORD PTR [rax+0x0]
  41e418:	sub    r14,0x1
  41e41c:	jmp    41e437 <__flatcc_fb_parse@@Base+0x137>
  41e41e:	xchg   ax,ax
  41e420:	movzx  eax,BYTE PTR [r14+0x1]
  41e425:	cmp    al,0x22
  41e427:	je     41e443 <__flatcc_fb_parse@@Base+0x143>
  41e429:	cmp    al,0x5c
  41e42b:	je     41e443 <__flatcc_fb_parse@@Base+0x143>
  41e42d:	sub    eax,0x20
  41e430:	cmp    al,0x5e
  41e432:	ja     41e443 <__flatcc_fb_parse@@Base+0x143>
  41e434:	mov    r14,rbx
  41e437:	lea    rbx,[r14+0x1]
  41e43b:	cmp    r15,rbx
  41e43e:	jne    41e420 <__flatcc_fb_parse@@Base+0x120>
  41e440:	mov    rbx,r15
  41e443:	cmp    r12,rbx
  41e446:	je     41e45b <__flatcc_fb_parse@@Base+0x15b>
  41e448:	mov    rcx,rbx
  41e44b:	mov    rdx,r12
  41e44e:	mov    esi,0x14
  41e453:	mov    rdi,r13
  41e456:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e45b:	movzx  eax,BYTE PTR [rbx]
  41e45e:	cmp    al,0x22
  41e460:	je     41fc5b <__flatcc_fb_parse@@Base+0x195b>
  41e466:	cmp    r15,rbx
  41e469:	je     41e4f1 <__flatcc_fb_parse@@Base+0x1f1>
  41e46f:	test   al,al
  41e471:	je     41e4f1 <__flatcc_fb_parse@@Base+0x1f1>
  41e473:	cmp    al,0x5c
  41e475:	je     41e4a0 <__flatcc_fb_parse@@Base+0x1a0>
  41e477:	cmp    al,0xa
  41e479:	je     41e4f1 <__flatcc_fb_parse@@Base+0x1f1>
  41e47b:	cmp    al,0xd
  41e47d:	je     41e4f1 <__flatcc_fb_parse@@Base+0x1f1>
  41e47f:	lea    r14,[rbx+0x1]
  41e483:	mov    rdx,rbx
  41e486:	mov    esi,0x6
  41e48b:	mov    rdi,r13
  41e48e:	mov    rcx,r14
  41e491:	mov    r12,r14
  41e494:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e499:	jmp    41e418 <__flatcc_fb_parse@@Base+0x118>
  41e49e:	xchg   ax,ax
  41e4a0:	lea    r12,[r14+0x2]
  41e4a4:	mov    rdx,rbx
  41e4a7:	mov    esi,0x15
  41e4ac:	mov    rdi,r13
  41e4af:	mov    rcx,r12
  41e4b2:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e4b7:	cmp    r15,r12
  41e4ba:	je     42068a <__flatcc_fb_parse@@Base+0x238a>
  41e4c0:	movzx  eax,BYTE PTR [rbx+0x1]
  41e4c4:	test   al,al
  41e4c6:	je     41e4ee <__flatcc_fb_parse@@Base+0x1ee>
  41e4c8:	cmp    al,0x5c
  41e4ca:	je     41e4e5 <__flatcc_fb_parse@@Base+0x1e5>
  41e4cc:	cmp    al,0x22
  41e4ce:	je     41e4e5 <__flatcc_fb_parse@@Base+0x1e5>
  41e4d0:	cmp    al,0xa
  41e4d2:	je     41eb7e <__flatcc_fb_parse@@Base+0x87e>
  41e4d8:	cmp    al,0xd
  41e4da:	je     420137 <__flatcc_fb_parse@@Base+0x1e37>
  41e4e0:	mov    rbx,r12
  41e4e3:	jmp    41e47f <__flatcc_fb_parse@@Base+0x17f>
  41e4e5:	lea    r14,[rbx+0x2]
  41e4e9:	jmp    41e418 <__flatcc_fb_parse@@Base+0x118>
  41e4ee:	mov    rbx,r12
  41e4f1:	mov    rcx,rbx
  41e4f4:	mov    rdx,rbx
  41e4f7:	mov    esi,0x17
  41e4fc:	mov    rdi,r13
  41e4ff:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e504:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e509:	lea    r14,[rbx+0x1]
  41e50d:	cmp    r15,r14
  41e510:	je     41e526 <__flatcc_fb_parse@@Base+0x226>
  41e512:	movzx  eax,BYTE PTR [rbx+0x1]
  41e516:	cmp    al,0x58
  41e518:	je     41eac0 <__flatcc_fb_parse@@Base+0x7c0>
  41e51e:	cmp    al,0x78
  41e520:	je     41eac0 <__flatcc_fb_parse@@Base+0x7c0>
  41e526:	mov    r14,rbx
  41e529:	jmp    41e540 <__flatcc_fb_parse@@Base+0x240>
  41e52b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e530:	movzx  eax,BYTE PTR [r14]
  41e534:	lea    edx,[rax-0x30]
  41e537:	cmp    dl,0x9
  41e53a:	ja     41f951 <__flatcc_fb_parse@@Base+0x1651>
  41e540:	add    r14,0x1
  41e544:	jne    41e530 <__flatcc_fb_parse@@Base+0x230>
  41e546:	movzx  eax,BYTE PTR ds:0x0
  41e54e:	ud2    
  41e550:	lea    r14,[rbx+0x1]
  41e554:	cmp    r15,r14
  41e557:	je     41e575 <__flatcc_fb_parse@@Base+0x275>
  41e559:	movzx  eax,BYTE PTR [rbx+0x1]
  41e55d:	cmp    al,0x3c
  41e55f:	je     4203e5 <__flatcc_fb_parse@@Base+0x20e5>
  41e565:	cmp    al,0x3d
  41e567:	je     4203c6 <__flatcc_fb_parse@@Base+0x20c6>
  41e56d:	cmp    al,0x2d
  41e56f:	je     41ff21 <__flatcc_fb_parse@@Base+0x1c21>
  41e575:	mov    rdx,rbx
  41e578:	mov    rcx,r14
  41e57b:	mov    esi,0x3c
  41e580:	mov    rdi,r13
  41e583:	mov    rbx,r14
  41e586:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e58b:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e590:	lea    r14,[rbx+0x1]
  41e594:	cmp    r15,r14
  41e597:	je     41ec3e <__flatcc_fb_parse@@Base+0x93e>
  41e59d:	movzx  eax,BYTE PTR [rbx+0x1]
  41e5a1:	cmp    al,0x3d
  41e5a3:	je     41ec18 <__flatcc_fb_parse@@Base+0x918>
  41e5a9:	cmp    al,0x3e
  41e5ab:	jne    41ec3e <__flatcc_fb_parse@@Base+0x93e>
  41e5b1:	lea    r14,[rbx+0x2]
  41e5b5:	mov    rdx,rbx
  41e5b8:	mov    esi,0x3e3d
  41e5bd:	mov    rdi,r13
  41e5c0:	mov    rcx,r14
  41e5c3:	mov    rbx,r14
  41e5c6:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e5cb:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e5d0:	lea    r14,[rbx+0x1]
  41e5d4:	cmp    r15,r14
  41e5d7:	je     41fe3a <__flatcc_fb_parse@@Base+0x1b3a>
  41e5dd:	movzx  eax,BYTE PTR [rbx+0x1]
  41e5e1:	cmp    al,0x3d
  41e5e3:	je     42020e <__flatcc_fb_parse@@Base+0x1f0e>
  41e5e9:	cmp    al,0x3e
  41e5eb:	jne    41fe3a <__flatcc_fb_parse@@Base+0x1b3a>
  41e5f1:	lea    r14,[rbx+0x2]
  41e5f5:	cmp    r15,r14
  41e5f8:	je     4204d5 <__flatcc_fb_parse@@Base+0x21d5>
  41e5fe:	movzx  eax,BYTE PTR [rbx+0x2]
  41e602:	cmp    al,0x3d
  41e604:	je     4204b6 <__flatcc_fb_parse@@Base+0x21b6>
  41e60a:	cmp    al,0x3e
  41e60c:	jne    4204d5 <__flatcc_fb_parse@@Base+0x21d5>
  41e612:	lea    r14,[rbx+0x3]
  41e616:	cmp    r15,r14
  41e619:	je     41e625 <__flatcc_fb_parse@@Base+0x325>
  41e61b:	cmp    BYTE PTR [rbx+0x3],0x3d
  41e61f:	je     420be9 <__flatcc_fb_parse@@Base+0x28e9>
  41e625:	mov    rdx,rbx
  41e628:	mov    rcx,r14
  41e62b:	mov    esi,0x3e3e3e
  41e630:	mov    rdi,r13
  41e633:	mov    rbx,r14
  41e636:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e63b:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e640:	movsx  rax,al
  41e644:	lea    r14,[rbx+0x1]
  41e648:	mov    rsi,rax
  41e64b:	shl    rsi,0x8
  41e64f:	cmp    r15,r14
  41e652:	je     41e6a1 <__flatcc_fb_parse@@Base+0x3a1>
  41e654:	movzx  edx,BYTE PTR [rbx+0x1]
  41e658:	lea    rdi,[rip+0x274c1]        # 445b20 <fb_schema_table_missing@@Base+0xed0>
  41e65f:	cmp    BYTE PTR [rdi+rdx*1],0x0
  41e663:	je     41e6a1 <__flatcc_fb_parse@@Base+0x3a1>
  41e665:	movsx  rcx,dl
  41e669:	shl    rcx,0x10
  41e66d:	or     rsi,rcx
  41e670:	jmp    41e691 <__flatcc_fb_parse@@Base+0x391>
  41e672:	nop    WORD PTR [rax+rax*1+0x0]
  41e678:	movzx  eax,BYTE PTR [r14+0x1]
  41e67d:	lea    rdi,[rip+0x2749c]        # 445b20 <fb_schema_table_missing@@Base+0xed0>
  41e684:	cmp    BYTE PTR [rdi+rax*1],0x0
  41e688:	je     420425 <__flatcc_fb_parse@@Base+0x2125>
  41e68e:	mov    r14,rdx
  41e691:	lea    rdx,[r14+0x1]
  41e695:	cmp    r15,rdx
  41e698:	jne    41e678 <__flatcc_fb_parse@@Base+0x378>
  41e69a:	movsx  rax,BYTE PTR [r14]
  41e69e:	mov    r14,r15
  41e6a1:	shl    rax,0x18
  41e6a5:	or     rax,rsi
  41e6a8:	mov    rdx,rax
  41e6ab:	mov    rax,r14
  41e6ae:	sub    rax,rbx
  41e6b1:	movzx  eax,al
  41e6b4:	add    rax,0x30
  41e6b8:	or     rax,rdx
  41e6bb:	cmp    rax,0x6570723b
  41e6c1:	je     420afe <__flatcc_fb_parse@@Base+0x27fe>
  41e6c7:	ja     41fcf0 <__flatcc_fb_parse@@Base+0x19f0>
  41e6cd:	cmp    rax,0x38697535
  41e6d3:	je     420ad4 <__flatcc_fb_parse@@Base+0x27d4>
  41e6d9:	ja     41fe55 <__flatcc_fb_parse@@Base+0x1b55>
  41e6df:	cmp    rax,0x34697536
  41e6e5:	je     4207a6 <__flatcc_fb_parse@@Base+0x24a6>
  41e6eb:	jbe    420542 <__flatcc_fb_parse@@Base+0x2242>
  41e6f1:	cmp    rax,0x346e6935
  41e6f7:	je     42077c <__flatcc_fb_parse@@Base+0x247c>
  41e6fd:	jbe    420746 <__flatcc_fb_parse@@Base+0x2446>
  41e703:	cmp    rax,0x36697536
  41e709:	je     42089e <__flatcc_fb_parse@@Base+0x259e>
  41e70f:	cmp    rax,0x366e6935
  41e715:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  41e71b:	lea    rdi,[rip+0x16467]        # 434b89 <_IO_stdin_used@@Base+0x8b89>
  41e722:	mov    rsi,rbx
  41e725:	mov    edx,0x5
  41e72a:	call   405120 <memcmp@plt>
  41e72f:	cmp    eax,0x1
  41e732:	sbb    rsi,rsi
  41e735:	and    rsi,0xfffffffffffffc17
  41e73c:	add    rsi,0x9
  41e740:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  41e742:	nop    WORD PTR [rax+rax*1+0x0]
  41e748:	lea    r14,[rbx+0x1]
  41e74c:	cmp    r15,r14
  41e74f:	je     41e778 <__flatcc_fb_parse@@Base+0x478>
  41e751:	movzx  eax,BYTE PTR [rbx+0x1]
  41e755:	cmp    al,0x3d
  41e757:	je     420174 <__flatcc_fb_parse@@Base+0x1e74>
  41e75d:	cmp    al,0x7c
  41e75f:	jne    41e778 <__flatcc_fb_parse@@Base+0x478>
  41e761:	lea    r14,[rbx+0x2]
  41e765:	mov    rdx,rbx
  41e768:	mov    esi,0x7c7c
  41e76d:	mov    rdi,r13
  41e770:	mov    rcx,r14
  41e773:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e778:	mov    rdx,rbx
  41e77b:	mov    rcx,r14
  41e77e:	mov    esi,0x7c
  41e783:	mov    rdi,r13
  41e786:	mov    rbx,r14
  41e789:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e78e:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e793:	lea    r14,[rbx+0x1]
  41e797:	cmp    r15,r14
  41e79a:	je     41e7a6 <__flatcc_fb_parse@@Base+0x4a6>
  41e79c:	cmp    BYTE PTR [rbx+0x1],0x3d
  41e7a0:	je     4204a3 <__flatcc_fb_parse@@Base+0x21a3>
  41e7a6:	movsx  rsi,al
  41e7aa:	mov    rdx,rbx
  41e7ad:	mov    rcx,r14
  41e7b0:	mov    rdi,r13
  41e7b3:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e7b8:	mov    rbx,r14
  41e7bb:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e7c0:	lea    r14,[rbx+0x1]
  41e7c4:	cmp    r15,r14
  41e7c7:	je     41ebfd <__flatcc_fb_parse@@Base+0x8fd>
  41e7cd:	movzx  eax,BYTE PTR [rbx+0x1]
  41e7d1:	cmp    al,0x26
  41e7d3:	je     41ebe6 <__flatcc_fb_parse@@Base+0x8e6>
  41e7d9:	cmp    al,0x3d
  41e7db:	jne    41ebfd <__flatcc_fb_parse@@Base+0x8fd>
  41e7e1:	lea    r14,[rbx+0x2]
  41e7e5:	mov    rdx,rbx
  41e7e8:	mov    esi,0x3d26
  41e7ed:	mov    rdi,r13
  41e7f0:	mov    rcx,r14
  41e7f3:	mov    rbx,r14
  41e7f6:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e7fb:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e800:	lea    r14,[rbx+0x1]
  41e804:	movsx  rsi,al
  41e808:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  41e80a:	mov    rcx,rbx
  41e80d:	mov    rdx,rbx
  41e810:	xor    esi,esi
  41e812:	mov    rdi,r13
  41e815:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e81a:	mov    rax,QWORD PTR [r13+0x48]
  41e81e:	mov    rbp,QWORD PTR [r13+0x28]
  41e822:	mov    rdi,QWORD PTR [r13+0x148]
  41e829:	mov    QWORD PTR [r13+0x30],rax
  41e82d:	mov    QWORD PTR [r13+0x48],rbp
  41e831:	call   405170 <malloc@plt>
  41e836:	test   rax,rax
  41e839:	mov    QWORD PTR [r13+0xd8],rax
  41e840:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41e846:	mov    rdx,QWORD PTR [rbp+0x20]
  41e84a:	cmp    rdx,0xfffffffffffffc3c
  41e851:	je     41fb89 <__flatcc_fb_parse@@Base+0x1889>
  41e857:	mov    rbx,rbp
  41e85a:	lea    r12,[rip+0x2692f]        # 445190 <fb_schema_table_missing@@Base+0x540>
  41e861:	jmp    41e8a8 <__flatcc_fb_parse@@Base+0x5a8>
  41e863:	nop    DWORD PTR [rax+rax*1+0x0]
  41e868:	mov    QWORD PTR [r13+0x60],rax
  41e86c:	mov    rax,QWORD PTR [r13+0x1f8]
  41e873:	mov    rdi,r13
  41e876:	mov    QWORD PTR [rsi],rax
  41e879:	mov    QWORD PTR [r13+0x1f8],rsi
  41e880:	add    rsi,0x8
  41e884:	call   41d0e0 <__flatcc_error_report@@Base+0x630>
  41e889:	mov    rsi,QWORD PTR [r13+0x48]
  41e88d:	cmp    QWORD PTR [rsi+0x20],0x3b
  41e892:	jne    41ecc0 <__flatcc_fb_parse@@Base+0x9c0>
  41e898:	mov    rdi,r13
  41e89b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41e8a0:	mov    rbx,QWORD PTR [r13+0x48]
  41e8a4:	mov    rdx,QWORD PTR [rbx+0x20]
  41e8a8:	cmp    rdx,0xfffffffffffffc35
  41e8af:	jne    41ece0 <__flatcc_fb_parse@@Base+0x9e0>
  41e8b5:	mov    rdi,r13
  41e8b8:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41e8bd:	mov    eax,DWORD PTR [r13+0xf8]
  41e8c4:	test   eax,eax
  41e8c6:	jne    41ec60 <__flatcc_fb_parse@@Base+0x960>
  41e8cc:	mov    eax,DWORD PTR [r13+0xd0]
  41e8d3:	cmp    eax,0x9
  41e8d6:	jg     41ec86 <__flatcc_fb_parse@@Base+0x986>
  41e8dc:	mov    rsi,QWORD PTR [r13+0x48]
  41e8e0:	cmp    QWORD PTR [rsi+0x20],0x13
  41e8e5:	jne    41ec90 <__flatcc_fb_parse@@Base+0x990>
  41e8eb:	mov    rdi,r13
  41e8ee:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41e8f3:	mov    rsi,QWORD PTR [r13+0x60]
  41e8f7:	lea    rax,[rsi+0x20]
  41e8fb:	cmp    rax,QWORD PTR [r13+0x50]
  41e8ff:	jbe    41e868 <__flatcc_fb_parse@@Base+0x568>
  41e905:	mov    esi,0x1
  41e90a:	mov    edi,0x10000
  41e90f:	call   405130 <calloc@plt>
  41e914:	test   rax,rax
  41e917:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41e91d:	mov    rdx,QWORD PTR [r13+0x58]
  41e921:	lea    rsi,[rax+0x10]
  41e925:	mov    QWORD PTR [r13+0x58],rax
  41e929:	mov    QWORD PTR [rax],rdx
  41e92c:	lea    rdx,[rax+0x10000]
  41e933:	add    rax,0x30
  41e937:	mov    QWORD PTR [r13+0x50],rdx
  41e93b:	jmp    41e868 <__flatcc_fb_parse@@Base+0x568>
  41e940:	lea    rax,[rbx+0x1]
  41e944:	cmp    r15,rax
  41e947:	je     41e955 <__flatcc_fb_parse@@Base+0x655>
  41e949:	cmp    BYTE PTR [rbx+0x1],0xd
  41e94d:	lea    rdx,[rbx+0x2]
  41e951:	cmove  rax,rdx
  41e955:	add    QWORD PTR [r13+0x78],0x1
  41e95a:	mov    QWORD PTR [r13+0x70],rax
  41e95e:	mov    rbx,rax
  41e961:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e966:	lea    rax,[rbx+0x1]
  41e96a:	cmp    r15,rax
  41e96d:	je     41e955 <__flatcc_fb_parse@@Base+0x655>
  41e96f:	cmp    BYTE PTR [rbx+0x1],0xa
  41e973:	lea    rdx,[rbx+0x2]
  41e977:	cmove  rax,rdx
  41e97b:	jmp    41e955 <__flatcc_fb_parse@@Base+0x655>
  41e97d:	lea    r14,[rbx+0x1]
  41e981:	cmp    r15,r14
  41e984:	je     41fe1f <__flatcc_fb_parse@@Base+0x1b1f>
  41e98a:	movzx  eax,BYTE PTR [rbx+0x1]
  41e98e:	cmp    al,0x3a
  41e990:	je     4201c1 <__flatcc_fb_parse@@Base+0x1ec1>
  41e996:	cmp    al,0x3d
  41e998:	jne    41fe1f <__flatcc_fb_parse@@Base+0x1b1f>
  41e99e:	lea    r14,[rbx+0x2]
  41e9a2:	mov    rdx,rbx
  41e9a5:	mov    esi,0x3d3a
  41e9aa:	mov    rdi,r13
  41e9ad:	mov    rcx,r14
  41e9b0:	mov    rbx,r14
  41e9b3:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e9b8:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e9bd:	lea    r14,[rbx+0x1]
  41e9c1:	cmp    r15,r14
  41e9c4:	je     41e9e2 <__flatcc_fb_parse@@Base+0x6e2>
  41e9c6:	movzx  eax,BYTE PTR [rbx+0x1]
  41e9ca:	cmp    al,0x3d
  41e9cc:	je     4203a7 <__flatcc_fb_parse@@Base+0x20a7>
  41e9d2:	cmp    al,0x3e
  41e9d4:	je     420388 <__flatcc_fb_parse@@Base+0x2088>
  41e9da:	cmp    al,0x2d
  41e9dc:	je     420039 <__flatcc_fb_parse@@Base+0x1d39>
  41e9e2:	mov    rdx,rbx
  41e9e5:	mov    rcx,r14
  41e9e8:	mov    esi,0x2d
  41e9ed:	mov    rdi,r13
  41e9f0:	mov    rbx,r14
  41e9f3:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41e9f8:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41e9fd:	lea    r14,[rbx+0x1]
  41ea01:	cmp    r15,r14
  41ea04:	je     41ea1e <__flatcc_fb_parse@@Base+0x71e>
  41ea06:	movzx  eax,BYTE PTR [rbx+0x1]
  41ea0a:	cmp    al,0x2e
  41ea0c:	je     420193 <__flatcc_fb_parse@@Base+0x1e93>
  41ea12:	jl     41ea1e <__flatcc_fb_parse@@Base+0x71e>
  41ea14:	sub    eax,0x30
  41ea17:	mov    rcx,rbx
  41ea1a:	cmp    al,0x9
  41ea1c:	jbe    41ea50 <__flatcc_fb_parse@@Base+0x750>
  41ea1e:	mov    rdx,rbx
  41ea21:	mov    rcx,r14
  41ea24:	mov    esi,0x2e
  41ea29:	mov    rdi,r13
  41ea2c:	mov    rbx,r14
  41ea2f:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ea34:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41ea39:	nop    DWORD PTR [rax+0x0]
  41ea40:	movzx  eax,BYTE PTR [r14]
  41ea44:	lea    edx,[rax-0x30]
  41ea47:	cmp    dl,0x9
  41ea4a:	ja     41fd70 <__flatcc_fb_parse@@Base+0x1a70>
  41ea50:	add    r14,0x1
  41ea54:	cmp    r15,r14
  41ea57:	jne    41ea40 <__flatcc_fb_parse@@Base+0x740>
  41ea59:	mov    r14,r15
  41ea5c:	cmp    r14,rcx
  41ea5f:	je     42022d <__flatcc_fb_parse@@Base+0x1f2d>
  41ea65:	mov    rdx,rbx
  41ea68:	mov    rcx,r14
  41ea6b:	mov    esi,0xb
  41ea70:	mov    rdi,r13
  41ea73:	mov    rbx,r14
  41ea76:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ea7b:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41ea80:	lea    r14,[rbx+0x1]
  41ea84:	cmp    r15,r14
  41ea87:	je     41eaa5 <__flatcc_fb_parse@@Base+0x7a5>
  41ea89:	movzx  eax,BYTE PTR [rbx+0x1]
  41ea8d:	cmp    al,0x2f
  41ea8f:	je     42026f <__flatcc_fb_parse@@Base+0x1f6f>
  41ea95:	cmp    al,0x3d
  41ea97:	je     420250 <__flatcc_fb_parse@@Base+0x1f50>
  41ea9d:	cmp    al,0x2a
  41ea9f:	je     41ff40 <__flatcc_fb_parse@@Base+0x1c40>
  41eaa5:	mov    rdx,rbx
  41eaa8:	mov    rcx,r14
  41eaab:	mov    esi,0x2f
  41eab0:	mov    rdi,r13
  41eab3:	mov    rbx,r14
  41eab6:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41eabb:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41eac0:	add    r14,0x1
  41eac4:	cmp    r15,r14
  41eac7:	je     420248 <__flatcc_fb_parse@@Base+0x1f48>
  41eacd:	movzx  eax,BYTE PTR [r14]
  41ead1:	lea    edx,[rax-0x30]
  41ead4:	cmp    dl,0x9
  41ead7:	jbe    41eac0 <__flatcc_fb_parse@@Base+0x7c0>
  41ead9:	or     eax,0x20
  41eadc:	sub    eax,0x61
  41eadf:	cmp    al,0x5
  41eae1:	jbe    41eac0 <__flatcc_fb_parse@@Base+0x7c0>
  41eae3:	mov    rdx,rbx
  41eae6:	mov    rcx,r14
  41eae9:	mov    esi,0xe
  41eaee:	mov    rdi,r13
  41eaf1:	mov    rbx,r14
  41eaf4:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41eaf9:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41eafe:	lea    r14,[rbx+0x1]
  41eb02:	cmp    r15,r14
  41eb05:	je     41fe04 <__flatcc_fb_parse@@Base+0x1b04>
  41eb0b:	movzx  eax,BYTE PTR [rbx+0x1]
  41eb0f:	cmp    al,0x2a
  41eb11:	je     420155 <__flatcc_fb_parse@@Base+0x1e55>
  41eb17:	cmp    al,0x3d
  41eb19:	jne    41fe04 <__flatcc_fb_parse@@Base+0x1b04>
  41eb1f:	mov    rdx,rbx
  41eb22:	mov    rcx,r14
  41eb25:	mov    esi,0x3d2a
  41eb2a:	mov    rdi,r13
  41eb2d:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41eb32:	movzx  eax,BYTE PTR [rbx+0x1]
  41eb36:	mov    rbx,r14
  41eb39:	jmp    41e3c3 <__flatcc_fb_parse@@Base+0xc3>
  41eb3e:	lea    r14,[rbx+0x1]
  41eb42:	cmp    r15,r14
  41eb45:	je     41fde9 <__flatcc_fb_parse@@Base+0x1ae9>
  41eb4b:	movzx  eax,BYTE PTR [rbx+0x1]
  41eb4f:	cmp    al,0x2b
  41eb51:	je     4201ef <__flatcc_fb_parse@@Base+0x1eef>
  41eb57:	cmp    al,0x3d
  41eb59:	jne    41fde9 <__flatcc_fb_parse@@Base+0x1ae9>
  41eb5f:	lea    r14,[rbx+0x2]
  41eb63:	mov    rdx,rbx
  41eb66:	mov    esi,0x3d2b
  41eb6b:	mov    rdi,r13
  41eb6e:	mov    rcx,r14
  41eb71:	mov    rbx,r14
  41eb74:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41eb79:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41eb7e:	lea    r14,[rbx+0x2]
  41eb82:	cmp    r15,r14
  41eb85:	je     41eb93 <__flatcc_fb_parse@@Base+0x893>
  41eb87:	cmp    BYTE PTR [rbx+0x2],0xd
  41eb8b:	lea    rax,[rbx+0x3]
  41eb8f:	cmove  r14,rax
  41eb93:	add    QWORD PTR [r13+0x78],0x1
  41eb98:	mov    rdx,r12
  41eb9b:	mov    QWORD PTR [r13+0x70],r14
  41eb9f:	mov    rcx,r14
  41eba2:	mov    esi,0x12
  41eba7:	mov    rdi,r13
  41ebaa:	mov    r12,r14
  41ebad:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ebb2:	jmp    41e418 <__flatcc_fb_parse@@Base+0x118>
  41ebb7:	lea    edx,[rax-0x20]
  41ebba:	lea    r14,[rbx+0x1]
  41ebbe:	cmp    dl,0x5e
  41ebc1:	jbe    41ebcb <__flatcc_fb_parse@@Base+0x8cb>
  41ebc3:	cmp    al,0x9
  41ebc5:	jne    420431 <__flatcc_fb_parse@@Base+0x2131>
  41ebcb:	mov    rdx,rbx
  41ebce:	mov    rcx,r14
  41ebd1:	mov    esi,0x8
  41ebd6:	mov    rdi,r13
  41ebd9:	mov    rbx,r14
  41ebdc:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ebe1:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41ebe6:	lea    r14,[rbx+0x2]
  41ebea:	mov    rdx,rbx
  41ebed:	mov    esi,0x2626
  41ebf2:	mov    rdi,r13
  41ebf5:	mov    rcx,r14
  41ebf8:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ebfd:	mov    rdx,rbx
  41ec00:	mov    rcx,r14
  41ec03:	mov    esi,0x26
  41ec08:	mov    rdi,r13
  41ec0b:	mov    rbx,r14
  41ec0e:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ec13:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41ec18:	lea    r14,[rbx+0x2]
  41ec1c:	cmp    r15,r14
  41ec1f:	je     41ec2b <__flatcc_fb_parse@@Base+0x92b>
  41ec21:	cmp    BYTE PTR [rbx+0x2],0x3d
  41ec25:	je     420b28 <__flatcc_fb_parse@@Base+0x2828>
  41ec2b:	mov    rcx,r14
  41ec2e:	mov    rdx,rbx
  41ec31:	mov    esi,0x3d3d
  41ec36:	mov    rdi,r13
  41ec39:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ec3e:	mov    rdx,rbx
  41ec41:	mov    rcx,r14
  41ec44:	mov    esi,0x3d
  41ec49:	mov    rdi,r13
  41ec4c:	mov    rbx,r14
  41ec4f:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ec54:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41ec59:	nop    DWORD PTR [rax+0x0]
  41ec60:	xor    r9d,r9d
  41ec63:	xor    r8d,r8d
  41ec66:	xor    ecx,ecx
  41ec68:	mov    rdx,r12
  41ec6b:	mov    rsi,rbp
  41ec6e:	mov    rdi,r13
  41ec71:	call   41cab0 <__flatcc_error_report@@Base>
  41ec76:	mov    eax,DWORD PTR [r13+0xd0]
  41ec7d:	cmp    eax,0x9
  41ec80:	jle    41e8dc <__flatcc_fb_parse@@Base+0x5dc>
  41ec86:	mov    rbx,QWORD PTR [r13+0x48]
  41ec8a:	mov    rdx,QWORD PTR [rbx+0x20]
  41ec8e:	jmp    41ece7 <__flatcc_fb_parse@@Base+0x9e7>
  41ec90:	lea    rdx,[rip+0x26531]        # 4451c8 <fb_schema_table_missing@@Base+0x578>
  41ec97:	mov    rdi,r13
  41ec9a:	xor    r9d,r9d
  41ec9d:	xor    r8d,r8d
  41eca0:	xor    ecx,ecx
  41eca2:	call   41cab0 <__flatcc_error_report@@Base>
  41eca7:	mov    esi,0x3b
  41ecac:	mov    rdi,r13
  41ecaf:	call   41c900 <__flatcc_fb_default_error_out@@Base+0x250>
  41ecb4:	jmp    41e8f3 <__flatcc_fb_parse@@Base+0x5f3>
  41ecb9:	nop    DWORD PTR [rax+0x0]
  41ecc0:	lea    rdx,[rip+0x26531]        # 4451f8 <fb_schema_table_missing@@Base+0x5a8>
  41ecc7:	xor    r9d,r9d
  41ecca:	xor    r8d,r8d
  41eccd:	xor    ecx,ecx
  41eccf:	mov    rdi,r13
  41ecd2:	call   41cab0 <__flatcc_error_report@@Base>
  41ecd7:	jmp    41e8a0 <__flatcc_fb_parse@@Base+0x5a0>
  41ecdc:	nop    DWORD PTR [rax+0x0]
  41ece0:	mov    eax,DWORD PTR [r13+0xd0]
  41ece7:	lea    rdi,[r13+0x248]
  41ecee:	lea    r15,[rsp+0x30]
  41ecf3:	mov    QWORD PTR [rsp+0x8],rdi
  41ecf8:	lea    rdi,[rsp+0x28]
  41ecfd:	mov    QWORD PTR [rsp+0x18],rdi
  41ed02:	jmp    41ed73 <__flatcc_fb_parse@@Base+0xa73>
  41ed04:	nop    DWORD PTR [rax+0x0]
  41ed08:	cmp    rax,0xfffffffffffffc33
  41ed0e:	je     41ef4a <__flatcc_fb_parse@@Base+0xc4a>
  41ed14:	jg     41ef10 <__flatcc_fb_parse@@Base+0xc10>
  41ed1a:	cmp    rax,0xfffffffffffffc29
  41ed20:	je     41f71d <__flatcc_fb_parse@@Base+0x141d>
  41ed26:	cmp    rax,0xfffffffffffffc30
  41ed2c:	je     41f46d <__flatcc_fb_parse@@Base+0x116d>
  41ed32:	cmp    rax,0xfffffffffffffc1b
  41ed38:	je     41f248 <__flatcc_fb_parse@@Base+0xf48>
  41ed3e:	lea    rdx,[rip+0x26803]        # 445548 <fb_schema_table_missing@@Base+0x8f8>
  41ed45:	xor    r9d,r9d
  41ed48:	xor    r8d,r8d
  41ed4b:	xor    ecx,ecx
  41ed4d:	mov    rdi,r13
  41ed50:	call   41cab0 <__flatcc_error_report@@Base>
  41ed55:	nop    DWORD PTR [rax]
  41ed58:	mov    rcx,QWORD PTR [r13+0x48]
  41ed5c:	cmp    rbx,rcx
  41ed5f:	je     41ee70 <__flatcc_fb_parse@@Base+0xb70>
  41ed65:	mov    rdx,QWORD PTR [rcx+0x20]
  41ed69:	mov    eax,DWORD PTR [r13+0xd0]
  41ed70:	mov    rbx,rcx
  41ed73:	test   rdx,rdx
  41ed76:	je     41f9b8 <__flatcc_fb_parse@@Base+0x16b8>
  41ed7c:	cmp    eax,0x9
  41ed7f:	jg     41eea0 <__flatcc_fb_parse@@Base+0xba0>
  41ed85:	mov    rsi,QWORD PTR [r13+0x48]
  41ed89:	mov    rax,QWORD PTR [rsi+0x20]
  41ed8d:	cmp    rax,0xfffffffffffffc38
  41ed93:	je     41efd1 <__flatcc_fb_parse@@Base+0xcd1>
  41ed99:	jle    41ed08 <__flatcc_fb_parse@@Base+0xa08>
  41ed9f:	cmp    rax,0x5
  41eda3:	je     41f12c <__flatcc_fb_parse@@Base+0xe2c>
  41eda9:	jg     41eec8 <__flatcc_fb_parse@@Base+0xbc8>
  41edaf:	cmp    rax,0xfffffffffffffc3a
  41edb5:	je     41f0c1 <__flatcc_fb_parse@@Base+0xdc1>
  41edbb:	jl     41f038 <__flatcc_fb_parse@@Base+0xd38>
  41edc1:	cmp    rax,0xfffffffffffffc3b
  41edc7:	jne    41ed3e <__flatcc_fb_parse@@Base+0xa3e>
  41edcd:	mov    rdi,r13
  41edd0:	lea    rbp,[r13+0x208]
  41edd7:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41eddc:	cmp    WORD PTR [r13+0x218],0x0
  41ede5:	jne    41fb9e <__flatcc_fb_parse@@Base+0x189e>
  41edeb:	mov    rsi,QWORD PTR [r13+0x48]
  41edef:	cmp    QWORD PTR [rsi+0x20],0x13
  41edf4:	jne    41fbc6 <__flatcc_fb_parse@@Base+0x18c6>
  41edfa:	mov    rdi,r13
  41edfd:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41ee02:	mov    rsi,rbp
  41ee05:	mov    rdi,r13
  41ee08:	mov    r12,QWORD PTR [r13+0x48]
  41ee0c:	call   41d0e0 <__flatcc_error_report@@Base+0x630>
  41ee11:	cmp    QWORD PTR [r13+0x208],0x0
  41ee19:	je     41ee4c <__flatcc_fb_parse@@Base+0xb4c>
  41ee1b:	cmp    DWORD PTR [r13+0x210],0x4
  41ee23:	je     41ee4c <__flatcc_fb_parse@@Base+0xb4c>
  41ee25:	mov    eax,0x1
  41ee2a:	lea    rdx,[rip+0x2647f]        # 4452b0 <fb_schema_table_missing@@Base+0x660>
  41ee31:	xor    r9d,r9d
  41ee34:	mov    WORD PTR [r13+0x218],ax
  41ee3c:	xor    r8d,r8d
  41ee3f:	xor    ecx,ecx
  41ee41:	mov    rsi,r12
  41ee44:	mov    rdi,r13
  41ee47:	call   41cab0 <__flatcc_error_report@@Base>
  41ee4c:	mov    rsi,QWORD PTR [r13+0x48]
  41ee50:	cmp    QWORD PTR [rsi+0x20],0x3b
  41ee55:	jne    41fcb3 <__flatcc_fb_parse@@Base+0x19b3>
  41ee5b:	mov    rdi,r13
  41ee5e:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41ee63:	mov    rcx,QWORD PTR [r13+0x48]
  41ee67:	cmp    rbx,rcx
  41ee6a:	jne    41ed65 <__flatcc_fb_parse@@Base+0xa65>
  41ee70:	mov    eax,DWORD PTR [r13+0xd0]
  41ee77:	test   eax,eax
  41ee79:	jne    41eea0 <__flatcc_fb_parse@@Base+0xba0>
  41ee7b:	lea    rdx,[rip+0x26a02]        # 445884 <fb_schema_table_missing@@Base+0xc34>
  41ee82:	xor    r9d,r9d
  41ee85:	xor    r8d,r8d
  41ee88:	xor    ecx,ecx
  41ee8a:	mov    rsi,rbx
  41ee8d:	mov    rdi,r13
  41ee90:	call   41cab0 <__flatcc_error_report@@Base>
  41ee95:	mov    eax,DWORD PTR [r13+0xd0]
  41ee9c:	nop    DWORD PTR [rax+0x0]
  41eea0:	mov    rdi,QWORD PTR [rsp+0x38]
  41eea5:	xor    rdi,QWORD PTR fs:0x28
  41eeae:	jne    420be4 <__flatcc_fb_parse@@Base+0x28e4>
  41eeb4:	add    rsp,0x48
  41eeb8:	pop    rbx
  41eeb9:	pop    rbp
  41eeba:	pop    r12
  41eebc:	pop    r13
  41eebe:	pop    r14
  41eec0:	pop    r15
  41eec2:	ret    
  41eec3:	nop    DWORD PTR [rax+rax*1+0x0]
  41eec8:	cmp    rax,0x1b
  41eecc:	je     41f7bd <__flatcc_fb_parse@@Base+0x14bd>
  41eed2:	cmp    rax,0x7b
  41eed6:	je     41f7a1 <__flatcc_fb_parse@@Base+0x14a1>
  41eedc:	cmp    rax,0x7
  41eee0:	jne    41ed3e <__flatcc_fb_parse@@Base+0xa3e>
  41eee6:	lea    r8,[rip+0x266f4]        # 4455e1 <fb_schema_table_missing@@Base+0x991>
  41eeed:	lea    rdx,[rip+0x2662c]        # 445520 <fb_schema_table_missing@@Base+0x8d0>
  41eef4:	mov    r9d,0x1
  41eefa:	xor    ecx,ecx
  41eefc:	mov    rdi,r13
  41eeff:	call   41cab0 <__flatcc_error_report@@Base>
  41ef04:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41ef09:	nop    DWORD PTR [rax+0x0]
  41ef10:	cmp    rax,0xfffffffffffffc36
  41ef16:	je     41f1a8 <__flatcc_fb_parse@@Base+0xea8>
  41ef1c:	jg     41f14f <__flatcc_fb_parse@@Base+0xe4f>
  41ef22:	cmp    rax,0xfffffffffffffc35
  41ef28:	jne    41ed3e <__flatcc_fb_parse@@Base+0xa3e>
  41ef2e:	lea    rdx,[rip+0x26513]        # 445448 <fb_schema_table_missing@@Base+0x7f8>
  41ef35:	xor    r9d,r9d
  41ef38:	xor    r8d,r8d
  41ef3b:	xor    ecx,ecx
  41ef3d:	mov    rdi,r13
  41ef40:	call   41cab0 <__flatcc_error_report@@Base>
  41ef45:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41ef4a:	mov    rdi,r13
  41ef4d:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41ef52:	mov    rsi,QWORD PTR [r13+0x60]
  41ef56:	lea    rax,[rsi+0xd0]
  41ef5d:	cmp    rax,QWORD PTR [r13+0x50]
  41ef61:	ja     41fa5a <__flatcc_fb_parse@@Base+0x175a>
  41ef67:	mov    QWORD PTR [r13+0x60],rax
  41ef6b:	mov    rax,QWORD PTR [r13+0x238]
  41ef72:	mov    QWORD PTR [rsi],rax
  41ef75:	mov    eax,0x1
  41ef7a:	mov    WORD PTR [rsi+0x10],ax
  41ef7e:	mov    rax,QWORD PTR [r13+0x340]
  41ef85:	mov    QWORD PTR [r13+0x238],rsi
  41ef8c:	mov    QWORD PTR [rsi+0x18],rax
  41ef90:	mov    rax,QWORD PTR [r13+0x40]
  41ef94:	test   rax,rax
  41ef97:	je     41efb1 <__flatcc_fb_parse@@Base+0xcb1>
  41ef99:	xor    ecx,ecx
  41ef9b:	jmp    41efa3 <__flatcc_fb_parse@@Base+0xca3>
  41ef9d:	nop    DWORD PTR [rax]
  41efa0:	mov    rax,rdx
  41efa3:	mov    rdx,QWORD PTR [rax]
  41efa6:	mov    QWORD PTR [rax],rcx
  41efa9:	mov    rcx,rax
  41efac:	test   rdx,rdx
  41efaf:	jne    41efa0 <__flatcc_fb_parse@@Base+0xca0>
  41efb1:	mov    QWORD PTR [rsi+0x40],rax
  41efb5:	mov    rdx,0xfffffffffffffc33
  41efbc:	mov    QWORD PTR [r13+0x40],0x0
  41efc4:	mov    rdi,r13
  41efc7:	call   41d9e0 <__flatcc_error_report@@Base+0xf30>
  41efcc:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41efd1:	mov    rdi,r13
  41efd4:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41efd9:	cmp    QWORD PTR [r13+0x248],0x0
  41efe1:	mov    rbp,QWORD PTR [r13+0x48]
  41efe5:	je     41f001 <__flatcc_fb_parse@@Base+0xd01>
  41efe7:	lea    rdx,[rip+0x267c7]        # 4457b5 <fb_schema_table_missing@@Base+0xb65>
  41efee:	xor    r9d,r9d
  41eff1:	xor    r8d,r8d
  41eff4:	xor    ecx,ecx
  41eff6:	mov    rsi,rbp
  41eff9:	mov    rdi,r13
  41effc:	call   41cab0 <__flatcc_error_report@@Base>
  41f001:	mov    rsi,QWORD PTR [rsp+0x8]
  41f006:	mov    rdi,r13
  41f009:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  41f00e:	mov    rax,QWORD PTR [r13+0x340]
  41f015:	lea    rdx,[rip+0x262bc]        # 4452d8 <fb_schema_table_missing@@Base+0x688>
  41f01c:	mov    rcx,rbp
  41f01f:	mov    esi,0x3b
  41f024:	mov    rdi,r13
  41f027:	mov    QWORD PTR [r13+0x258],rax
  41f02e:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41f033:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f038:	mov    rdi,r13
  41f03b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f040:	mov    rsi,QWORD PTR [r13+0x60]
  41f044:	lea    rax,[rsi+0xd0]
  41f04b:	cmp    rax,QWORD PTR [r13+0x50]
  41f04f:	ja     41fa1d <__flatcc_fb_parse@@Base+0x171d>
  41f055:	mov    QWORD PTR [r13+0x60],rax
  41f059:	mov    rax,QWORD PTR [r13+0x238]
  41f060:	mov    r14d,0x2
  41f066:	mov    WORD PTR [rsi+0x10],r14w
  41f06b:	mov    QWORD PTR [rsi],rax
  41f06e:	mov    rax,QWORD PTR [r13+0x340]
  41f075:	mov    QWORD PTR [r13+0x238],rsi
  41f07c:	mov    QWORD PTR [rsi+0x18],rax
  41f080:	mov    rax,QWORD PTR [r13+0x40]
  41f084:	test   rax,rax
  41f087:	je     41f0a1 <__flatcc_fb_parse@@Base+0xda1>
  41f089:	xor    ecx,ecx
  41f08b:	jmp    41f093 <__flatcc_fb_parse@@Base+0xd93>
  41f08d:	nop    DWORD PTR [rax]
  41f090:	mov    rax,rdx
  41f093:	mov    rdx,QWORD PTR [rax]
  41f096:	mov    QWORD PTR [rax],rcx
  41f099:	mov    rcx,rax
  41f09c:	test   rdx,rdx
  41f09f:	jne    41f090 <__flatcc_fb_parse@@Base+0xd90>
  41f0a1:	mov    QWORD PTR [rsi+0x40],rax
  41f0a5:	mov    rdx,0xfffffffffffffc39
  41f0ac:	mov    QWORD PTR [r13+0x40],0x0
  41f0b4:	mov    rdi,r13
  41f0b7:	call   41d9e0 <__flatcc_error_report@@Base+0xf30>
  41f0bc:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f0c1:	mov    rdi,r13
  41f0c4:	lea    rbp,[r13+0x220]
  41f0cb:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f0d0:	cmp    WORD PTR [r13+0x230],0x2
  41f0d9:	je     41fdc1 <__flatcc_fb_parse@@Base+0x1ac1>
  41f0df:	mov    rsi,QWORD PTR [r13+0x48]
  41f0e3:	cmp    QWORD PTR [rsi+0x20],0x13
  41f0e8:	jne    41fc47 <__flatcc_fb_parse@@Base+0x1947>
  41f0ee:	mov    rdi,r13
  41f0f1:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f0f6:	mov    rsi,rbp
  41f0f9:	mov    rdi,r13
  41f0fc:	call   41d0e0 <__flatcc_error_report@@Base+0x630>
  41f101:	mov    rsi,QWORD PTR [r13+0x48]
  41f105:	cmp    QWORD PTR [rsi+0x20],0x3b
  41f10a:	je     41ee5b <__flatcc_fb_parse@@Base+0xb5b>
  41f110:	lea    rdx,[rip+0x26649]        # 445760 <fb_schema_table_missing@@Base+0xb10>
  41f117:	xor    r9d,r9d
  41f11a:	xor    r8d,r8d
  41f11d:	xor    ecx,ecx
  41f11f:	mov    rdi,r13
  41f122:	call   41cab0 <__flatcc_error_report@@Base>
  41f127:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f12c:	lea    r8,[rip+0x264ae]        # 4455e1 <fb_schema_table_missing@@Base+0x991>
  41f133:	lea    rdx,[rip+0x263ae]        # 4454e8 <fb_schema_table_missing@@Base+0x898>
  41f13a:	mov    r9d,0x1
  41f140:	xor    ecx,ecx
  41f142:	mov    rdi,r13
  41f145:	call   41cab0 <__flatcc_error_report@@Base>
  41f14a:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f14f:	mov    rdi,r13
  41f152:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f157:	mov    rbp,QWORD PTR [r13+0x48]
  41f15b:	mov    QWORD PTR [rsp+0x28],0x0
  41f164:	mov    rax,QWORD PTR [rbp+0x20]
  41f168:	cmp    rax,0x3b
  41f16c:	je     41f8cd <__flatcc_fb_parse@@Base+0x15cd>
  41f172:	cmp    rax,0x9
  41f176:	je     420454 <__flatcc_fb_parse@@Base+0x2154>
  41f17c:	lea    rdx,[rip+0x26095]        # 445218 <fb_schema_table_missing@@Base+0x5c8>
  41f183:	xor    r9d,r9d
  41f186:	xor    r8d,r8d
  41f189:	xor    ecx,ecx
  41f18b:	mov    rsi,rbp
  41f18e:	mov    rdi,r13
  41f191:	call   41cab0 <__flatcc_error_report@@Base>
  41f196:	mov    esi,0x3b
  41f19b:	mov    rdi,r13
  41f19e:	call   41c900 <__flatcc_fb_default_error_out@@Base+0x250>
  41f1a3:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f1a8:	mov    rdi,r13
  41f1ab:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f1b0:	mov    rbp,QWORD PTR [r13+0x60]
  41f1b4:	lea    rax,[rbp+0x30]
  41f1b8:	cmp    rax,QWORD PTR [r13+0x50]
  41f1bc:	ja     41fb4e <__flatcc_fb_parse@@Base+0x184e>
  41f1c2:	mov    r12,QWORD PTR [r13+0x48]
  41f1c6:	mov    QWORD PTR [r13+0x60],rax
  41f1ca:	mov    rax,QWORD PTR [r13+0x200]
  41f1d1:	cmp    QWORD PTR [r12+0x20],0x13
  41f1d7:	mov    QWORD PTR [rbp+0x0],rax
  41f1db:	mov    QWORD PTR [r13+0x200],rbp
  41f1e2:	jne    41fbda <__flatcc_fb_parse@@Base+0x18da>
  41f1e8:	mov    rdi,r13
  41f1eb:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f1f0:	lea    rsi,[rbp+0x8]
  41f1f4:	mov    rdi,r13
  41f1f7:	call   41d0e0 <__flatcc_error_report@@Base+0x630>
  41f1fc:	mov    eax,DWORD PTR [rbp+0x10]
  41f1ff:	test   eax,eax
  41f201:	jne    41f21d <__flatcc_fb_parse@@Base+0xf1d>
  41f203:	lea    rdx,[rip+0x2611e]        # 445328 <fb_schema_table_missing@@Base+0x6d8>
  41f20a:	xor    r9d,r9d
  41f20d:	xor    r8d,r8d
  41f210:	xor    ecx,ecx
  41f212:	mov    rsi,r12
  41f215:	mov    rdi,r13
  41f218:	call   41cab0 <__flatcc_error_report@@Base>
  41f21d:	mov    rsi,QWORD PTR [r13+0x48]
  41f221:	cmp    QWORD PTR [rsi+0x20],0x3b
  41f226:	je     41ee5b <__flatcc_fb_parse@@Base+0xb5b>
  41f22c:	lea    rdx,[rip+0x26598]        # 4457cb <fb_schema_table_missing@@Base+0xb7b>
  41f233:	xor    r9d,r9d
  41f236:	xor    r8d,r8d
  41f239:	xor    ecx,ecx
  41f23b:	mov    rdi,r13
  41f23e:	call   41cab0 <__flatcc_error_report@@Base>
  41f243:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f248:	mov    rdi,r13
  41f24b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f250:	mov    rbp,QWORD PTR [r13+0x60]
  41f254:	lea    rax,[rbp+0xd0]
  41f25b:	cmp    rax,QWORD PTR [r13+0x50]
  41f25f:	ja     41fb11 <__flatcc_fb_parse@@Base+0x1811>
  41f265:	mov    QWORD PTR [r13+0x60],rax
  41f269:	mov    rax,QWORD PTR [r13+0x238]
  41f270:	mov    r12d,0x3
  41f276:	mov    WORD PTR [rbp+0x10],r12w
  41f27b:	mov    QWORD PTR [rbp+0x0],rax
  41f27f:	mov    rax,QWORD PTR [r13+0x340]
  41f286:	mov    QWORD PTR [r13+0x238],rbp
  41f28d:	mov    QWORD PTR [rbp+0x18],rax
  41f291:	mov    rax,QWORD PTR [r13+0x40]
  41f295:	test   rax,rax
  41f298:	je     41f2b1 <__flatcc_fb_parse@@Base+0xfb1>
  41f29a:	xor    ecx,ecx
  41f29c:	jmp    41f2a3 <__flatcc_fb_parse@@Base+0xfa3>
  41f29e:	xchg   ax,ax
  41f2a0:	mov    rax,rdx
  41f2a3:	mov    rdx,QWORD PTR [rax]
  41f2a6:	mov    QWORD PTR [rax],rcx
  41f2a9:	mov    rcx,rax
  41f2ac:	test   rdx,rdx
  41f2af:	jne    41f2a0 <__flatcc_fb_parse@@Base+0xfa0>
  41f2b1:	mov    r12,QWORD PTR [r13+0x48]
  41f2b5:	mov    QWORD PTR [rbp+0x40],rax
  41f2b9:	mov    QWORD PTR [r13+0x40],0x0
  41f2c1:	cmp    QWORD PTR [r12+0x20],0x9
  41f2c7:	jne    41fbf9 <__flatcc_fb_parse@@Base+0x18f9>
  41f2cd:	mov    rdi,r13
  41f2d0:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f2d5:	mov    rax,QWORD PTR [r13+0x48]
  41f2d9:	mov    QWORD PTR [rbp+0x8],r12
  41f2dd:	cmp    QWORD PTR [rax+0x20],0x3a
  41f2e2:	je     41f8ed <__flatcc_fb_parse@@Base+0x15ed>
  41f2e8:	mov    rdi,r13
  41f2eb:	call   41d850 <__flatcc_error_report@@Base+0xda0>
  41f2f0:	mov    QWORD PTR [rbp+0x38],rax
  41f2f4:	mov    rax,QWORD PTR [r13+0x48]
  41f2f8:	cmp    QWORD PTR [rax+0x20],0x7b
  41f2fd:	mov    QWORD PTR [rsp+0x10],rax
  41f302:	jne    41fc92 <__flatcc_fb_parse@@Base+0x1992>
  41f308:	mov    rdi,r13
  41f30b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f310:	mov    r14,QWORD PTR [r13+0x48]
  41f314:	cmp    QWORD PTR [r14+0x20],0x9
  41f319:	jne    41f3ff <__flatcc_fb_parse@@Base+0x10ff>
  41f31f:	nop
  41f320:	mov    rdi,r13
  41f323:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f328:	cmp    DWORD PTR [r13+0xd0],0x9
  41f330:	jg     41f419 <__flatcc_fb_parse@@Base+0x1119>
  41f336:	mov    r12,QWORD PTR [r13+0x60]
  41f33a:	lea    rax,[r12+0xb0]
  41f342:	cmp    rax,QWORD PTR [r13+0x50]
  41f346:	ja     41f430 <__flatcc_fb_parse@@Base+0x1130>
  41f34c:	mov    QWORD PTR [r13+0x60],rax
  41f350:	mov    rax,QWORD PTR [rbp+0x28]
  41f354:	mov    r11d,0x5
  41f35a:	mov    WORD PTR [r12+0x10],r11w
  41f360:	mov    QWORD PTR [r12],rax
  41f364:	mov    QWORD PTR [rbp+0x28],r12
  41f368:	mov    rax,QWORD PTR [r13+0x40]
  41f36c:	test   rax,rax
  41f36f:	je     41f389 <__flatcc_fb_parse@@Base+0x1089>
  41f371:	xor    ecx,ecx
  41f373:	jmp    41f37b <__flatcc_fb_parse@@Base+0x107b>
  41f375:	nop    DWORD PTR [rax]
  41f378:	mov    rax,rdx
  41f37b:	mov    rdx,QWORD PTR [rax]
  41f37e:	mov    QWORD PTR [rax],rcx
  41f381:	mov    rcx,rax
  41f384:	test   rdx,rdx
  41f387:	jne    41f378 <__flatcc_fb_parse@@Base+0x1078>
  41f389:	mov    QWORD PTR [r12+0x68],rax
  41f38e:	mov    rax,QWORD PTR [r13+0x48]
  41f392:	mov    QWORD PTR [r13+0x40],0x0
  41f39a:	mov    QWORD PTR [r12+0x8],r14
  41f39f:	cmp    QWORD PTR [rax+0x20],0x3d
  41f3a4:	jne    41f3c8 <__flatcc_fb_parse@@Base+0x10c8>
  41f3a6:	mov    rdi,r13
  41f3a9:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f3ae:	lea    rsi,[r12+0x48]
  41f3b3:	lea    rcx,[rip+0x26478]        # 445832 <fb_schema_table_missing@@Base+0xbe2>
  41f3ba:	xor    edx,edx
  41f3bc:	mov    rdi,r13
  41f3bf:	call   41d250 <__flatcc_error_report@@Base+0x7a0>
  41f3c4:	mov    rax,QWORD PTR [r13+0x48]
  41f3c8:	cmp    QWORD PTR [rax+0x20],0x2c
  41f3cd:	jne    41f7e0 <__flatcc_fb_parse@@Base+0x14e0>
  41f3d3:	mov    rdi,r13
  41f3d6:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f3db:	mov    r14,QWORD PTR [r13+0x48]
  41f3df:	mov    rax,QWORD PTR [r14+0x20]
  41f3e3:	cmp    rax,0x7d
  41f3e7:	je     41f7e0 <__flatcc_fb_parse@@Base+0x14e0>
  41f3ed:	cmp    rax,0x9
  41f3f1:	mov    QWORD PTR [r13+0x40],0x0
  41f3f9:	je     41f320 <__flatcc_fb_parse@@Base+0x1020>
  41f3ff:	lea    rdx,[rip+0x26411]        # 445817 <fb_schema_table_missing@@Base+0xbc7>
  41f406:	xor    r9d,r9d
  41f409:	xor    r8d,r8d
  41f40c:	xor    ecx,ecx
  41f40e:	mov    rsi,r14
  41f411:	mov    rdi,r13
  41f414:	call   41cab0 <__flatcc_error_report@@Base>
  41f419:	mov    esi,0x7d
  41f41e:	mov    rdi,r13
  41f421:	call   41c900 <__flatcc_fb_default_error_out@@Base+0x250>
  41f426:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f430:	mov    esi,0x1
  41f435:	mov    edi,0x10000
  41f43a:	call   405130 <calloc@plt>
  41f43f:	test   rax,rax
  41f442:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41f448:	mov    rdx,QWORD PTR [r13+0x58]
  41f44c:	lea    r12,[rax+0x10]
  41f450:	mov    QWORD PTR [r13+0x58],rax
  41f454:	mov    QWORD PTR [rax],rdx
  41f457:	lea    rdx,[rax+0x10000]
  41f45e:	add    rax,0xc0
  41f464:	mov    QWORD PTR [r13+0x50],rdx
  41f468:	jmp    41f34c <__flatcc_fb_parse@@Base+0x104c>
  41f46d:	mov    rdi,r13
  41f470:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f475:	mov    rbp,QWORD PTR [r13+0x60]
  41f479:	lea    rax,[rbp+0xd0]
  41f480:	cmp    rax,QWORD PTR [r13+0x50]
  41f484:	ja     41fad4 <__flatcc_fb_parse@@Base+0x17d4>
  41f48a:	mov    QWORD PTR [r13+0x60],rax
  41f48e:	mov    rax,QWORD PTR [r13+0x238]
  41f495:	mov    r10d,0x4
  41f49b:	mov    WORD PTR [rbp+0x10],r10w
  41f4a0:	mov    QWORD PTR [rbp+0x0],rax
  41f4a4:	mov    rax,QWORD PTR [r13+0x340]
  41f4ab:	mov    QWORD PTR [r13+0x238],rbp
  41f4b2:	mov    QWORD PTR [rbp+0x18],rax
  41f4b6:	mov    rax,QWORD PTR [r13+0x40]
  41f4ba:	test   rax,rax
  41f4bd:	je     41f4d9 <__flatcc_fb_parse@@Base+0x11d9>
  41f4bf:	xor    ecx,ecx
  41f4c1:	jmp    41f4cb <__flatcc_fb_parse@@Base+0x11cb>
  41f4c3:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4c8:	mov    rax,rdx
  41f4cb:	mov    rdx,QWORD PTR [rax]
  41f4ce:	mov    QWORD PTR [rax],rcx
  41f4d1:	mov    rcx,rax
  41f4d4:	test   rdx,rdx
  41f4d7:	jne    41f4c8 <__flatcc_fb_parse@@Base+0x11c8>
  41f4d9:	mov    r12,QWORD PTR [r13+0x48]
  41f4dd:	mov    QWORD PTR [rbp+0x40],rax
  41f4e1:	mov    QWORD PTR [r13+0x40],0x0
  41f4e9:	cmp    QWORD PTR [r12+0x20],0x9
  41f4ef:	jne    41fc20 <__flatcc_fb_parse@@Base+0x1920>
  41f4f5:	mov    rdi,r13
  41f4f8:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f4fd:	mov    QWORD PTR [rbp+0x8],r12
  41f501:	mov    rdi,r13
  41f504:	call   41d850 <__flatcc_error_report@@Base+0xda0>
  41f509:	mov    QWORD PTR [rbp+0x38],rax
  41f50d:	mov    rax,QWORD PTR [r13+0x48]
  41f511:	cmp    QWORD PTR [rax+0x20],0x7b
  41f516:	mov    QWORD PTR [rsp+0x10],rax
  41f51b:	jne    41fccf <__flatcc_fb_parse@@Base+0x19cf>
  41f521:	mov    rdi,r13
  41f524:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f529:	mov    r12,QWORD PTR [r13+0x48]
  41f52d:	cmp    QWORD PTR [r12+0x20],0x9
  41f533:	jne    41f66c <__flatcc_fb_parse@@Base+0x136c>
  41f539:	nop    DWORD PTR [rax+0x0]
  41f540:	cmp    DWORD PTR [r13+0xd0],0x9
  41f548:	jg     41f686 <__flatcc_fb_parse@@Base+0x1386>
  41f54e:	mov    r14,QWORD PTR [r13+0x60]
  41f552:	lea    rax,[r14+0xb0]
  41f559:	cmp    rax,QWORD PTR [r13+0x50]
  41f55d:	ja     41f6e0 <__flatcc_fb_parse@@Base+0x13e0>
  41f563:	mov    QWORD PTR [r13+0x60],rax
  41f567:	mov    rax,QWORD PTR [rbp+0x28]
  41f56b:	mov    r9d,0x5
  41f571:	mov    WORD PTR [r14+0x10],r9w
  41f576:	mov    QWORD PTR [r14],rax
  41f579:	mov    QWORD PTR [rbp+0x28],r14
  41f57d:	mov    rax,QWORD PTR [r13+0x40]
  41f581:	test   rax,rax
  41f584:	je     41f5a1 <__flatcc_fb_parse@@Base+0x12a1>
  41f586:	xor    ecx,ecx
  41f588:	jmp    41f593 <__flatcc_fb_parse@@Base+0x1293>
  41f58a:	nop    WORD PTR [rax+rax*1+0x0]
  41f590:	mov    rax,rdx
  41f593:	mov    rdx,QWORD PTR [rax]
  41f596:	mov    QWORD PTR [rax],rcx
  41f599:	mov    rcx,rax
  41f59c:	test   rdx,rdx
  41f59f:	jne    41f590 <__flatcc_fb_parse@@Base+0x1290>
  41f5a1:	mov    QWORD PTR [r14+0x68],rax
  41f5a5:	mov    rsi,r15
  41f5a8:	mov    QWORD PTR [r13+0x40],0x0
  41f5b0:	mov    rdi,r13
  41f5b3:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  41f5b8:	mov    rax,QWORD PTR [rsp+0x30]
  41f5bd:	mov    r8d,0xc
  41f5c3:	mov    WORD PTR [r14+0x28],r8w
  41f5c8:	mov    QWORD PTR [r14+0x18],rax
  41f5cc:	mov    rdx,QWORD PTR [rax]
  41f5cf:	test   rdx,rdx
  41f5d2:	jne    41f5e3 <__flatcc_fb_parse@@Base+0x12e3>
  41f5d4:	jmp    41f8e5 <__flatcc_fb_parse@@Base+0x15e5>
  41f5d9:	nop    DWORD PTR [rax+0x0]
  41f5e0:	mov    rdx,rax
  41f5e3:	mov    rax,QWORD PTR [rdx]
  41f5e6:	test   rax,rax
  41f5e9:	jne    41f5e0 <__flatcc_fb_parse@@Base+0x12e0>
  41f5eb:	mov    QWORD PTR [rsp+0x30],rdx
  41f5f0:	mov    rax,QWORD PTR [rdx+0x8]
  41f5f4:	mov    QWORD PTR [r14+0x8],rax
  41f5f8:	mov    rax,QWORD PTR [r13+0x48]
  41f5fc:	mov    rax,QWORD PTR [rax+0x20]
  41f600:	cmp    rax,0x3a
  41f604:	je     41f698 <__flatcc_fb_parse@@Base+0x1398>
  41f60a:	cmp    rax,0x3d
  41f60e:	jne    41f635 <__flatcc_fb_parse@@Base+0x1335>
  41f610:	mov    rdi,r13
  41f613:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f618:	lea    rsi,[r14+0x48]
  41f61c:	lea    rcx,[rip+0x2620f]        # 445832 <fb_schema_table_missing@@Base+0xbe2>
  41f623:	xor    edx,edx
  41f625:	mov    rdi,r13
  41f628:	call   41d250 <__flatcc_error_report@@Base+0x7a0>
  41f62d:	mov    rax,QWORD PTR [r13+0x48]
  41f631:	mov    rax,QWORD PTR [rax+0x20]
  41f635:	cmp    rax,0x2c
  41f639:	jne    41f82a <__flatcc_fb_parse@@Base+0x152a>
  41f63f:	mov    rdi,r13
  41f642:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f647:	mov    r12,QWORD PTR [r13+0x48]
  41f64b:	mov    rax,QWORD PTR [r12+0x20]
  41f650:	cmp    rax,0x7d
  41f654:	je     41f82a <__flatcc_fb_parse@@Base+0x152a>
  41f65a:	cmp    rax,0x9
  41f65e:	mov    QWORD PTR [r13+0x40],0x0
  41f666:	je     41f540 <__flatcc_fb_parse@@Base+0x1240>
  41f66c:	lea    rdx,[rip+0x261da]        # 44584d <fb_schema_table_missing@@Base+0xbfd>
  41f673:	xor    r9d,r9d
  41f676:	xor    r8d,r8d
  41f679:	xor    ecx,ecx
  41f67b:	mov    rsi,r12
  41f67e:	mov    rdi,r13
  41f681:	call   41cab0 <__flatcc_error_report@@Base>
  41f686:	mov    rdi,r13
  41f689:	call   41c8a0 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41f68e:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f693:	nop    DWORD PTR [rax+rax*1+0x0]
  41f698:	mov    rdi,r13
  41f69b:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f6a0:	mov    rax,QWORD PTR [r14+0x18]
  41f6a4:	cmp    QWORD PTR [rax],0x0
  41f6a8:	je     41f6c4 <__flatcc_fb_parse@@Base+0x13c4>
  41f6aa:	lea    rdx,[rip+0x25d2f]        # 4453e0 <fb_schema_table_missing@@Base+0x790>
  41f6b1:	xor    r9d,r9d
  41f6b4:	xor    r8d,r8d
  41f6b7:	xor    ecx,ecx
  41f6b9:	mov    rsi,r12
  41f6bc:	mov    rdi,r13
  41f6bf:	call   41cab0 <__flatcc_error_report@@Base>
  41f6c4:	lea    rsi,[r14+0x18]
  41f6c8:	mov    rdi,r13
  41f6cb:	call   41cdf0 <__flatcc_error_report@@Base+0x340>
  41f6d0:	mov    rax,QWORD PTR [r13+0x48]
  41f6d4:	mov    rax,QWORD PTR [rax+0x20]
  41f6d8:	jmp    41f60a <__flatcc_fb_parse@@Base+0x130a>
  41f6dd:	nop    DWORD PTR [rax]
  41f6e0:	mov    esi,0x1
  41f6e5:	mov    edi,0x10000
  41f6ea:	call   405130 <calloc@plt>
  41f6ef:	test   rax,rax
  41f6f2:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41f6f8:	mov    rdx,QWORD PTR [r13+0x58]
  41f6fc:	lea    r14,[rax+0x10]
  41f700:	mov    QWORD PTR [r13+0x58],rax
  41f704:	mov    QWORD PTR [rax],rdx
  41f707:	lea    rdx,[rax+0x10000]
  41f70e:	add    rax,0xc0
  41f714:	mov    QWORD PTR [r13+0x50],rdx
  41f718:	jmp    41f563 <__flatcc_fb_parse@@Base+0x1263>
  41f71d:	mov    rdi,r13
  41f720:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f725:	mov    rsi,QWORD PTR [r13+0x60]
  41f729:	lea    rax,[rsi+0xd0]
  41f730:	cmp    rax,QWORD PTR [r13+0x50]
  41f734:	ja     41fa97 <__flatcc_fb_parse@@Base+0x1797>
  41f73a:	mov    QWORD PTR [r13+0x60],rax
  41f73e:	mov    rax,QWORD PTR [r13+0x238]
  41f745:	mov    QWORD PTR [rsi],rax
  41f748:	xor    eax,eax
  41f74a:	mov    WORD PTR [rsi+0x10],ax
  41f74e:	mov    rax,QWORD PTR [r13+0x340]
  41f755:	mov    QWORD PTR [r13+0x238],rsi
  41f75c:	mov    QWORD PTR [rsi+0x18],rax
  41f760:	mov    rax,QWORD PTR [r13+0x40]
  41f764:	test   rax,rax
  41f767:	je     41f781 <__flatcc_fb_parse@@Base+0x1481>
  41f769:	xor    ecx,ecx
  41f76b:	jmp    41f773 <__flatcc_fb_parse@@Base+0x1473>
  41f76d:	nop    DWORD PTR [rax]
  41f770:	mov    rax,rdx
  41f773:	mov    rdx,QWORD PTR [rax]
  41f776:	mov    QWORD PTR [rax],rcx
  41f779:	mov    rcx,rax
  41f77c:	test   rdx,rdx
  41f77f:	jne    41f770 <__flatcc_fb_parse@@Base+0x1470>
  41f781:	mov    QWORD PTR [rsi+0x40],rax
  41f785:	mov    rdx,0xfffffffffffffc29
  41f78c:	mov    QWORD PTR [r13+0x40],0x0
  41f794:	mov    rdi,r13
  41f797:	call   41d9e0 <__flatcc_error_report@@Base+0xf30>
  41f79c:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f7a1:	lea    rdx,[rip+0x25cd8]        # 445480 <fb_schema_table_missing@@Base+0x830>
  41f7a8:	xor    r9d,r9d
  41f7ab:	xor    r8d,r8d
  41f7ae:	xor    ecx,ecx
  41f7b0:	mov    rdi,r13
  41f7b3:	call   41cab0 <__flatcc_error_report@@Base>
  41f7b8:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f7bd:	lea    r8,[rip+0x260a5]        # 445869 <fb_schema_table_missing@@Base+0xc19>
  41f7c4:	lea    rdx,[rip+0x260a4]        # 44586f <fb_schema_table_missing@@Base+0xc1f>
  41f7cb:	mov    r9d,0x5
  41f7d1:	xor    ecx,ecx
  41f7d3:	mov    rdi,r13
  41f7d6:	call   41cab0 <__flatcc_error_report@@Base>
  41f7db:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f7e0:	mov    rcx,QWORD PTR [rsp+0x10]
  41f7e5:	lea    rdx,[rip+0x25b84]        # 445370 <fb_schema_table_missing@@Base+0x720>
  41f7ec:	mov    esi,0x7d
  41f7f1:	mov    rdi,r13
  41f7f4:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41f7f9:	mov    rax,QWORD PTR [rbp+0x28]
  41f7fd:	test   rax,rax
  41f800:	je     41f821 <__flatcc_fb_parse@@Base+0x1521>
  41f802:	xor    ecx,ecx
  41f804:	jmp    41f813 <__flatcc_fb_parse@@Base+0x1513>
  41f806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f810:	mov    rax,rdx
  41f813:	mov    rdx,QWORD PTR [rax]
  41f816:	mov    QWORD PTR [rax],rcx
  41f819:	mov    rcx,rax
  41f81c:	test   rdx,rdx
  41f81f:	jne    41f810 <__flatcc_fb_parse@@Base+0x1510>
  41f821:	mov    QWORD PTR [rbp+0x28],rax
  41f825:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f82a:	mov    rcx,QWORD PTR [rsp+0x10]
  41f82f:	lea    rdx,[rip+0x25bea]        # 445420 <fb_schema_table_missing@@Base+0x7d0>
  41f836:	mov    esi,0x7d
  41f83b:	mov    rdi,r13
  41f83e:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  41f843:	mov    rdx,QWORD PTR [rbp+0x28]
  41f847:	test   rdx,rdx
  41f84a:	je     41f861 <__flatcc_fb_parse@@Base+0x1561>
  41f84c:	xor    ecx,ecx
  41f84e:	jmp    41f853 <__flatcc_fb_parse@@Base+0x1553>
  41f850:	mov    rdx,rax
  41f853:	mov    rax,QWORD PTR [rdx]
  41f856:	mov    QWORD PTR [rdx],rcx
  41f859:	mov    rcx,rdx
  41f85c:	test   rax,rax
  41f85f:	jne    41f850 <__flatcc_fb_parse@@Base+0x1550>
  41f861:	mov    rsi,QWORD PTR [r13+0x60]
  41f865:	mov    QWORD PTR [rbp+0x28],rdx
  41f869:	lea    rax,[rsi+0xb0]
  41f870:	cmp    rax,QWORD PTR [r13+0x50]
  41f874:	ja     41fd80 <__flatcc_fb_parse@@Base+0x1a80>
  41f87a:	mov    edi,0x5
  41f87f:	mov    QWORD PTR [r13+0x60],rax
  41f883:	mov    QWORD PTR [rsi],rdx
  41f886:	mov    WORD PTR [rsi+0x10],di
  41f88a:	mov    QWORD PTR [rbp+0x28],rsi
  41f88e:	mov    rax,QWORD PTR [r13+0x40]
  41f892:	test   rax,rax
  41f895:	je     41f8b1 <__flatcc_fb_parse@@Base+0x15b1>
  41f897:	xor    ecx,ecx
  41f899:	jmp    41f8a3 <__flatcc_fb_parse@@Base+0x15a3>
  41f89b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8a0:	mov    rax,rdx
  41f8a3:	mov    rdx,QWORD PTR [rax]
  41f8a6:	mov    QWORD PTR [rax],rcx
  41f8a9:	mov    rcx,rax
  41f8ac:	test   rdx,rdx
  41f8af:	jne    41f8a0 <__flatcc_fb_parse@@Base+0x15a0>
  41f8b1:	mov    QWORD PTR [rsi+0x68],rax
  41f8b5:	lea    rax,[r13+0x80]
  41f8bc:	mov    QWORD PTR [r13+0x40],0x0
  41f8c4:	mov    QWORD PTR [rsi+0x8],rax
  41f8c8:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f8cd:	mov    rdi,r13
  41f8d0:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f8d5:	mov    QWORD PTR [r13+0x340],0x0
  41f8e0:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41f8e5:	mov    rdx,rax
  41f8e8:	jmp    41f5f0 <__flatcc_fb_parse@@Base+0x12f0>
  41f8ed:	mov    rdi,r13
  41f8f0:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41f8f5:	lea    rsi,[rbp+0x48]
  41f8f9:	mov    rdi,r13
  41f8fc:	call   41cdf0 <__flatcc_error_report@@Base+0x340>
  41f901:	cmp    WORD PTR [rbp+0x58],0x8
  41f906:	mov    rsi,QWORD PTR [rbp+0x48]
  41f90a:	jne    41f935 <__flatcc_fb_parse@@Base+0x1635>
  41f90c:	mov    rax,QWORD PTR [rsi+0x20]
  41f910:	add    rax,0x3e4
  41f916:	cmp    rax,0x15
  41f91a:	ja     41f2e8 <__flatcc_fb_parse@@Base+0xfe8>
  41f920:	mov    edx,0x1
  41f925:	shlx   rax,rdx,rax
  41f92a:	test   eax,0x200803
  41f92f:	je     41f2e8 <__flatcc_fb_parse@@Base+0xfe8>
  41f935:	lea    rdx,[rip+0x25ea6]        # 4457e2 <fb_schema_table_missing@@Base+0xb92>
  41f93c:	xor    r9d,r9d
  41f93f:	xor    r8d,r8d
  41f942:	xor    ecx,ecx
  41f944:	mov    rdi,r13
  41f947:	call   41cab0 <__flatcc_error_report@@Base>
  41f94c:	jmp    41f2e8 <__flatcc_fb_parse@@Base+0xfe8>
  41f951:	cmp    al,0x2e
  41f953:	mov    rcx,r14
  41f956:	je     41ea50 <__flatcc_fb_parse@@Base+0x750>
  41f95c:	cmp    r15,r14
  41f95f:	je     42022d <__flatcc_fb_parse@@Base+0x1f2d>
  41f965:	and    eax,0xffffffdf
  41f968:	mov    rcx,r14
  41f96b:	cmp    al,0x45
  41f96d:	jne    42022d <__flatcc_fb_parse@@Base+0x1f2d>
  41f973:	lea    rax,[r14+0x1]
  41f977:	cmp    r15,rax
  41f97a:	je     4204f0 <__flatcc_fb_parse@@Base+0x21f0>
  41f980:	movzx  edx,BYTE PTR [r14+0x1]
  41f985:	sub    edx,0x2b
  41f988:	and    edx,0xfffffffd
  41f98b:	cmp    dl,0x1
  41f98e:	adc    rax,0x0
  41f992:	jmp    41f9ab <__flatcc_fb_parse@@Base+0x16ab>
  41f994:	nop    DWORD PTR [rax+0x0]
  41f998:	movzx  edi,BYTE PTR [rax]
  41f99b:	lea    edx,[rdi-0x30]
  41f99e:	cmp    dl,0x9
  41f9a1:	ja     41ea5c <__flatcc_fb_parse@@Base+0x75c>
  41f9a7:	add    rax,0x1
  41f9ab:	cmp    r15,rax
  41f9ae:	mov    r14,rax
  41f9b1:	jne    41f998 <__flatcc_fb_parse@@Base+0x1698>
  41f9b3:	jmp    41ea59 <__flatcc_fb_parse@@Base+0x759>
  41f9b8:	mov    rdx,QWORD PTR [r13+0x200]
  41f9bf:	test   rdx,rdx
  41f9c2:	je     41f9e1 <__flatcc_fb_parse@@Base+0x16e1>
  41f9c4:	xor    esi,esi
  41f9c6:	jmp    41f9d3 <__flatcc_fb_parse@@Base+0x16d3>
  41f9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9d0:	mov    rdx,rcx
  41f9d3:	mov    rcx,QWORD PTR [rdx]
  41f9d6:	mov    QWORD PTR [rdx],rsi
  41f9d9:	mov    rsi,rdx
  41f9dc:	test   rcx,rcx
  41f9df:	jne    41f9d0 <__flatcc_fb_parse@@Base+0x16d0>
  41f9e1:	mov    QWORD PTR [r13+0x200],rdx
  41f9e8:	mov    rdx,QWORD PTR [r13+0x238]
  41f9ef:	test   rdx,rdx
  41f9f2:	je     41fa11 <__flatcc_fb_parse@@Base+0x1711>
  41f9f4:	xor    esi,esi
  41f9f6:	jmp    41fa03 <__flatcc_fb_parse@@Base+0x1703>
  41f9f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa00:	mov    rdx,rcx
  41fa03:	mov    rcx,QWORD PTR [rdx]
  41fa06:	mov    QWORD PTR [rdx],rsi
  41fa09:	mov    rsi,rdx
  41fa0c:	test   rcx,rcx
  41fa0f:	jne    41fa00 <__flatcc_fb_parse@@Base+0x1700>
  41fa11:	mov    QWORD PTR [r13+0x238],rdx
  41fa18:	jmp    41eea0 <__flatcc_fb_parse@@Base+0xba0>
  41fa1d:	mov    esi,0x1
  41fa22:	mov    edi,0x10000
  41fa27:	call   405130 <calloc@plt>
  41fa2c:	test   rax,rax
  41fa2f:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41fa35:	mov    rdx,QWORD PTR [r13+0x58]
  41fa39:	lea    rsi,[rax+0x10]
  41fa3d:	mov    QWORD PTR [r13+0x58],rax
  41fa41:	mov    QWORD PTR [rax],rdx
  41fa44:	lea    rdx,[rax+0x10000]
  41fa4b:	add    rax,0xe0
  41fa51:	mov    QWORD PTR [r13+0x50],rdx
  41fa55:	jmp    41f055 <__flatcc_fb_parse@@Base+0xd55>
  41fa5a:	mov    esi,0x1
  41fa5f:	mov    edi,0x10000
  41fa64:	call   405130 <calloc@plt>
  41fa69:	test   rax,rax
  41fa6c:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41fa72:	mov    rdx,QWORD PTR [r13+0x58]
  41fa76:	lea    rsi,[rax+0x10]
  41fa7a:	mov    QWORD PTR [r13+0x58],rax
  41fa7e:	mov    QWORD PTR [rax],rdx
  41fa81:	lea    rdx,[rax+0x10000]
  41fa88:	add    rax,0xe0
  41fa8e:	mov    QWORD PTR [r13+0x50],rdx
  41fa92:	jmp    41ef67 <__flatcc_fb_parse@@Base+0xc67>
  41fa97:	mov    esi,0x1
  41fa9c:	mov    edi,0x10000
  41faa1:	call   405130 <calloc@plt>
  41faa6:	test   rax,rax
  41faa9:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41faaf:	mov    rdx,QWORD PTR [r13+0x58]
  41fab3:	lea    rsi,[rax+0x10]
  41fab7:	mov    QWORD PTR [r13+0x58],rax
  41fabb:	mov    QWORD PTR [rax],rdx
  41fabe:	lea    rdx,[rax+0x10000]
  41fac5:	add    rax,0xe0
  41facb:	mov    QWORD PTR [r13+0x50],rdx
  41facf:	jmp    41f73a <__flatcc_fb_parse@@Base+0x143a>
  41fad4:	mov    esi,0x1
  41fad9:	mov    edi,0x10000
  41fade:	call   405130 <calloc@plt>
  41fae3:	test   rax,rax
  41fae6:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41faec:	mov    rdx,QWORD PTR [r13+0x58]
  41faf0:	lea    rbp,[rax+0x10]
  41faf4:	mov    QWORD PTR [r13+0x58],rax
  41faf8:	mov    QWORD PTR [rax],rdx
  41fafb:	lea    rdx,[rax+0x10000]
  41fb02:	add    rax,0xe0
  41fb08:	mov    QWORD PTR [r13+0x50],rdx
  41fb0c:	jmp    41f48a <__flatcc_fb_parse@@Base+0x118a>
  41fb11:	mov    esi,0x1
  41fb16:	mov    edi,0x10000
  41fb1b:	call   405130 <calloc@plt>
  41fb20:	test   rax,rax
  41fb23:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41fb29:	mov    rdx,QWORD PTR [r13+0x58]
  41fb2d:	lea    rbp,[rax+0x10]
  41fb31:	mov    QWORD PTR [r13+0x58],rax
  41fb35:	mov    QWORD PTR [rax],rdx
  41fb38:	lea    rdx,[rax+0x10000]
  41fb3f:	add    rax,0xe0
  41fb45:	mov    QWORD PTR [r13+0x50],rdx
  41fb49:	jmp    41f265 <__flatcc_fb_parse@@Base+0xf65>
  41fb4e:	mov    esi,0x1
  41fb53:	mov    edi,0x10000
  41fb58:	call   405130 <calloc@plt>
  41fb5d:	test   rax,rax
  41fb60:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41fb66:	mov    rdx,QWORD PTR [r13+0x58]
  41fb6a:	lea    rbp,[rax+0x10]
  41fb6e:	mov    QWORD PTR [r13+0x58],rax
  41fb72:	mov    QWORD PTR [rax],rdx
  41fb75:	lea    rdx,[rax+0x10000]
  41fb7c:	add    rax,0x40
  41fb80:	mov    QWORD PTR [r13+0x50],rdx
  41fb84:	jmp    41f1c2 <__flatcc_fb_parse@@Base+0xec2>
  41fb89:	mov    rdi,r13
  41fb8c:	call   41c7b0 <__flatcc_fb_default_error_out@@Base+0x100>
  41fb91:	mov    rbp,QWORD PTR [r13+0x48]
  41fb95:	mov    rdx,QWORD PTR [rbp+0x20]
  41fb99:	jmp    41e857 <__flatcc_fb_parse@@Base+0x557>
  41fb9e:	mov    rsi,QWORD PTR [r13+0x48]
  41fba2:	mov    r9d,DWORD PTR [r13+0x210]
  41fba9:	lea    rdx,[rip+0x25bcc]        # 44577c <fb_schema_table_missing@@Base+0xb2c>
  41fbb0:	mov    r8,QWORD PTR [r13+0x208]
  41fbb7:	xor    ecx,ecx
  41fbb9:	mov    rdi,r13
  41fbbc:	call   41cab0 <__flatcc_error_report@@Base>
  41fbc1:	jmp    41edeb <__flatcc_fb_parse@@Base+0xaeb>
  41fbc6:	xor    r9d,r9d
  41fbc9:	xor    r8d,r8d
  41fbcc:	xor    ecx,ecx
  41fbce:	lea    rdx,[rip+0x256b3]        # 445288 <fb_schema_table_missing@@Base+0x638>
  41fbd5:	jmp    41f18e <__flatcc_fb_parse@@Base+0xe8e>
  41fbda:	lea    rdx,[rip+0x2571f]        # 445300 <fb_schema_table_missing@@Base+0x6b0>
  41fbe1:	xor    r9d,r9d
  41fbe4:	xor    r8d,r8d
  41fbe7:	xor    ecx,ecx
  41fbe9:	mov    rsi,r12
  41fbec:	mov    rdi,r13
  41fbef:	call   41cab0 <__flatcc_error_report@@Base>
  41fbf4:	jmp    41f21d <__flatcc_fb_parse@@Base+0xf1d>
  41fbf9:	lea    rdx,[rip+0x25748]        # 445348 <fb_schema_table_missing@@Base+0x6f8>
  41fc00:	xor    r9d,r9d
  41fc03:	xor    r8d,r8d
  41fc06:	xor    ecx,ecx
  41fc08:	mov    rsi,r12
  41fc0b:	mov    rdi,r13
  41fc0e:	call   41cab0 <__flatcc_error_report@@Base>
  41fc13:	mov    QWORD PTR [rbp+0x8],0x0
  41fc1b:	jmp    41f419 <__flatcc_fb_parse@@Base+0x1119>
  41fc20:	lea    rdx,[rip+0x25771]        # 445398 <fb_schema_table_missing@@Base+0x748>
  41fc27:	xor    r9d,r9d
  41fc2a:	xor    r8d,r8d
  41fc2d:	xor    ecx,ecx
  41fc2f:	mov    rsi,r12
  41fc32:	mov    rdi,r13
  41fc35:	call   41cab0 <__flatcc_error_report@@Base>
  41fc3a:	mov    QWORD PTR [rbp+0x8],0x0
  41fc42:	jmp    41f686 <__flatcc_fb_parse@@Base+0x1386>
  41fc47:	xor    r9d,r9d
  41fc4a:	xor    r8d,r8d
  41fc4d:	xor    ecx,ecx
  41fc4f:	lea    rdx,[rip+0x2560a]        # 445260 <fb_schema_table_missing@@Base+0x610>
  41fc56:	jmp    41f18e <__flatcc_fb_parse@@Base+0xe8e>
  41fc5b:	add    r14,0x2
  41fc5f:	mov    rdx,rbx
  41fc62:	mov    esi,0x16
  41fc67:	mov    rcx,r14
  41fc6a:	mov    rdi,r13
  41fc6d:	mov    rbx,r14
  41fc70:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41fc75:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41fc7a:	mov    r12,r15
  41fc7d:	mov    rcx,r12
  41fc80:	mov    rdx,r12
  41fc83:	xor    esi,esi
  41fc85:	mov    rdi,r13
  41fc88:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41fc8d:	jmp    41e81a <__flatcc_fb_parse@@Base+0x51a>
  41fc92:	mov    rsi,QWORD PTR [rsp+0x10]
  41fc97:	lea    rdx,[rip+0x25b5b]        # 4457f9 <fb_schema_table_missing@@Base+0xba9>
  41fc9e:	xor    r9d,r9d
  41fca1:	xor    r8d,r8d
  41fca4:	xor    ecx,ecx
  41fca6:	mov    rdi,r13
  41fca9:	call   41cab0 <__flatcc_error_report@@Base>
  41fcae:	jmp    41f419 <__flatcc_fb_parse@@Base+0x1119>
  41fcb3:	lea    rdx,[rip+0x25ade]        # 445798 <fb_schema_table_missing@@Base+0xb48>
  41fcba:	xor    r9d,r9d
  41fcbd:	xor    r8d,r8d
  41fcc0:	xor    ecx,ecx
  41fcc2:	mov    rdi,r13
  41fcc5:	call   41cab0 <__flatcc_error_report@@Base>
  41fcca:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  41fccf:	mov    rsi,QWORD PTR [rsp+0x10]
  41fcd4:	lea    rdx,[rip+0x256e5]        # 4453c0 <fb_schema_table_missing@@Base+0x770>
  41fcdb:	xor    r9d,r9d
  41fcde:	xor    r8d,r8d
  41fce1:	xor    ecx,ecx
  41fce3:	mov    rdi,r13
  41fce6:	call   41cab0 <__flatcc_error_report@@Base>
  41fceb:	jmp    41f686 <__flatcc_fb_parse@@Base+0x1386>
  41fcf0:	cmp    rax,0x6e69663e
  41fcf6:	je     4208c8 <__flatcc_fb_parse@@Base+0x25c8>
  41fcfc:	ja     41febb <__flatcc_fb_parse@@Base+0x1bbb>
  41fd02:	cmp    rax,0x676c7535
  41fd08:	je     420952 <__flatcc_fb_parse@@Base+0x2652>
  41fd0e:	jbe    4204f9 <__flatcc_fb_parse@@Base+0x21f9>
  41fd14:	cmp    rax,0x67747336
  41fd1a:	je     420928 <__flatcc_fb_parse@@Base+0x2628>
  41fd20:	jbe    4208f2 <__flatcc_fb_parse@@Base+0x25f2>
  41fd26:	cmp    rax,0x6c6f6234
  41fd2c:	je     42097c <__flatcc_fb_parse@@Base+0x267c>
  41fd32:	cmp    rax,0x6d6e6534
  41fd38:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  41fd3e:	lea    rdi,[rip+0x27343]        # 447088 <fb_schema_table_missing@@Base+0x2438>
  41fd45:	mov    rsi,rbx
  41fd48:	mov    edx,0x4
  41fd4d:	call   405120 <memcmp@plt>
  41fd52:	cmp    eax,0x1
  41fd55:	sbb    rsi,rsi
  41fd58:	and    rsi,0xfffffffffffffc12
  41fd5f:	add    rsi,0x9
  41fd63:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  41fd68:	nop    DWORD PTR [rax+rax*1+0x0]
  41fd70:	and    eax,0xffffffdf
  41fd73:	cmp    al,0x45
  41fd75:	jne    41ea5c <__flatcc_fb_parse@@Base+0x75c>
  41fd7b:	jmp    41f973 <__flatcc_fb_parse@@Base+0x1673>
  41fd80:	mov    esi,0x1
  41fd85:	mov    edi,0x10000
  41fd8a:	call   405130 <calloc@plt>
  41fd8f:	test   rax,rax
  41fd92:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  41fd98:	mov    rdx,QWORD PTR [r13+0x58]
  41fd9c:	lea    rsi,[rax+0x10]
  41fda0:	mov    QWORD PTR [r13+0x58],rax
  41fda4:	mov    QWORD PTR [rax],rdx
  41fda7:	lea    rdx,[rax+0x10000]
  41fdae:	add    rax,0xc0
  41fdb4:	mov    QWORD PTR [r13+0x50],rdx
  41fdb8:	mov    rdx,QWORD PTR [rbp+0x28]
  41fdbc:	jmp    41f87a <__flatcc_fb_parse@@Base+0x157a>
  41fdc1:	mov    rsi,QWORD PTR [r13+0x48]
  41fdc5:	mov    r9d,DWORD PTR [r13+0x228]
  41fdcc:	lea    rdx,[rip+0x25972]        # 445745 <fb_schema_table_missing@@Base+0xaf5>
  41fdd3:	mov    r8,QWORD PTR [r13+0x220]
  41fdda:	xor    ecx,ecx
  41fddc:	mov    rdi,r13
  41fddf:	call   41cab0 <__flatcc_error_report@@Base>
  41fde4:	jmp    41f0df <__flatcc_fb_parse@@Base+0xddf>
  41fde9:	mov    rdx,rbx
  41fdec:	mov    rcx,r14
  41fdef:	mov    esi,0x2b
  41fdf4:	mov    rdi,r13
  41fdf7:	mov    rbx,r14
  41fdfa:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41fdff:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41fe04:	mov    rdx,rbx
  41fe07:	mov    rcx,r14
  41fe0a:	mov    esi,0x2a
  41fe0f:	mov    rdi,r13
  41fe12:	mov    rbx,r14
  41fe15:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41fe1a:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41fe1f:	mov    rdx,rbx
  41fe22:	mov    rcx,r14
  41fe25:	mov    esi,0x3a
  41fe2a:	mov    rdi,r13
  41fe2d:	mov    rbx,r14
  41fe30:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41fe35:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41fe3a:	mov    rdx,rbx
  41fe3d:	mov    rcx,r14
  41fe40:	mov    esi,0x3e
  41fe45:	mov    rdi,r13
  41fe48:	mov    rbx,r14
  41fe4b:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41fe50:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41fe55:	cmp    rax,0x65617435
  41fe5b:	je     420a06 <__flatcc_fb_parse@@Base+0x2706>
  41fe61:	jbe    4205d4 <__flatcc_fb_parse@@Base+0x22d4>
  41fe67:	cmp    rax,0x656e6937
  41fe6d:	je     4209dc <__flatcc_fb_parse@@Base+0x26dc>
  41fe73:	jbe    4209a6 <__flatcc_fb_parse@@Base+0x26a6>
  41fe79:	cmp    rax,0x656f6436
  41fe7f:	je     420b47 <__flatcc_fb_parse@@Base+0x2847>
  41fe85:	cmp    rax,0x656f7239
  41fe8b:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  41fe91:	lea    rdi,[rip+0x25878]        # 445710 <fb_schema_table_missing@@Base+0xac0>
  41fe98:	mov    rsi,rbx
  41fe9b:	mov    edx,0x9
  41fea0:	call   405120 <memcmp@plt>
  41fea5:	cmp    eax,0x1
  41fea8:	sbb    rsi,rsi
  41feab:	and    rsi,0xfffffffffffffc2f
  41feb2:	add    rsi,0x9
  41feb6:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  41febb:	cmp    rax,0x74697534
  41fec1:	je     420692 <__flatcc_fb_parse@@Base+0x2392>
  41fec7:	jbe    42063c <__flatcc_fb_parse@@Base+0x233c>
  41fecd:	cmp    rax,0x746e6933
  41fed3:	je     4206f2 <__flatcc_fb_parse@@Base+0x23f2>
  41fed9:	jbe    4206bc <__flatcc_fb_parse@@Base+0x23bc>
  41fedf:	cmp    rax,0x74737536
  41fee5:	je     42071c <__flatcc_fb_parse@@Base+0x241c>
  41feeb:	cmp    rax,0x74747336
  41fef1:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  41fef7:	lea    rdi,[rip+0x257d8]        # 4456d6 <fb_schema_table_missing@@Base+0xa86>
  41fefe:	mov    rsi,rbx
  41ff01:	mov    edx,0x6
  41ff06:	call   405120 <memcmp@plt>
  41ff0b:	cmp    eax,0x1
  41ff0e:	sbb    rsi,rsi
  41ff11:	and    rsi,0xfffffffffffffc2a
  41ff18:	add    rsi,0x9
  41ff1c:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  41ff21:	lea    r14,[rbx+0x2]
  41ff25:	mov    rdx,rbx
  41ff28:	mov    esi,0x2d3c
  41ff2d:	mov    rdi,r13
  41ff30:	mov    rcx,r14
  41ff33:	mov    rbx,r14
  41ff36:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ff3b:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  41ff40:	lea    r14,[rbx+0x2]
  41ff44:	cmp    r15,r14
  41ff47:	je     4207d0 <__flatcc_fb_parse@@Base+0x24d0>
  41ff4d:	movzx  edx,BYTE PTR [rbx+0x2]
  41ff51:	cmp    dl,0x2a
  41ff54:	sete   al
  41ff57:	cmp    dl,0x21
  41ff5a:	sete   dl
  41ff5d:	or     eax,edx
  41ff5f:	movzx  eax,al
  41ff62:	xor    edx,edx
  41ff64:	add    r14,rax
  41ff67:	mov    rax,r14
  41ff6a:	sub    rax,rbx
  41ff6d:	cmp    rax,0x3
  41ff71:	sete   dl
  41ff74:	mov    DWORD PTR [r13+0x3c],edx
  41ff78:	je     42058c <__flatcc_fb_parse@@Base+0x228c>
  41ff7e:	xchg   ax,ax
  41ff80:	lea    rdx,[r14-0x1]
  41ff84:	jmp    41ff93 <__flatcc_fb_parse@@Base+0x1c93>
  41ff86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff90:	mov    rdx,r12
  41ff93:	lea    r12,[rdx+0x1]
  41ff97:	cmp    r15,r12
  41ff9a:	je     420060 <__flatcc_fb_parse@@Base+0x1d60>
  41ffa0:	movzx  eax,BYTE PTR [rdx+0x1]
  41ffa4:	lea    ecx,[rax-0x20]
  41ffa7:	cmp    cl,0x5e
  41ffaa:	ja     420092 <__flatcc_fb_parse@@Base+0x1d92>
  41ffb0:	cmp    al,0x2f
  41ffb2:	jne    41ff90 <__flatcc_fb_parse@@Base+0x1c90>
  41ffb4:	cmp    BYTE PTR [r12-0x1],0x2a
  41ffba:	jne    41ff90 <__flatcc_fb_parse@@Base+0x1c90>
  41ffbc:	cmp    r14,rdx
  41ffbf:	je     420c0d <__flatcc_fb_parse@@Base+0x290d>
  41ffc5:	mov    r12,rdx
  41ffc8:	mov    edx,DWORD PTR [r13+0x3c]
  41ffcc:	test   edx,edx
  41ffce:	jne    420078 <__flatcc_fb_parse@@Base+0x1d78>
  41ffd4:	cmp    r15,r12
  41ffd7:	je     42044c <__flatcc_fb_parse@@Base+0x214c>
  41ffdd:	movzx  eax,BYTE PTR [r12]
  41ffe2:	test   al,al
  41ffe4:	je     4200da <__flatcc_fb_parse@@Base+0x1dda>
  41ffea:	cmp    al,0xa
  41ffec:	je     4200b0 <__flatcc_fb_parse@@Base+0x1db0>
  41fff2:	cmp    al,0xd
  41fff4:	je     420104 <__flatcc_fb_parse@@Base+0x1e04>
  41fffa:	lea    edx,[rax-0x20]
  41fffd:	cmp    dl,0x5e
  420000:	jbe    4200f2 <__flatcc_fb_parse@@Base+0x1df2>
  420006:	cmp    al,0x9
  420008:	lea    r14,[r12+0x1]
  42000d:	jne    42011f <__flatcc_fb_parse@@Base+0x1e1f>
  420013:	mov    eax,DWORD PTR [r13+0x3c]
  420017:	test   eax,eax
  420019:	je     41ff80 <__flatcc_fb_parse@@Base+0x1c80>
  42001f:	mov    rcx,r14
  420022:	mov    rdx,r12
  420025:	mov    rsi,0xfffffffffffffc3c
  42002c:	mov    rdi,r13
  42002f:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420034:	jmp    41ff80 <__flatcc_fb_parse@@Base+0x1c80>
  420039:	lea    r14,[rbx+0x2]
  42003d:	mov    rdx,rbx
  420040:	mov    esi,0x2d2d
  420045:	mov    rdi,r13
  420048:	mov    rcx,r14
  42004b:	mov    rbx,r14
  42004e:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420053:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420058:	nop    DWORD PTR [rax+rax*1+0x0]
  420060:	cmp    r15,r14
  420063:	je     42044c <__flatcc_fb_parse@@Base+0x214c>
  420069:	mov    eax,DWORD PTR [r13+0x3c]
  42006d:	test   eax,eax
  42006f:	je     42044c <__flatcc_fb_parse@@Base+0x214c>
  420075:	mov    r12,r15
  420078:	mov    rcx,r12
  42007b:	mov    rdx,r14
  42007e:	mov    rsi,0xfffffffffffffc3c
  420085:	mov    rdi,r13
  420088:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  42008d:	jmp    41ffd4 <__flatcc_fb_parse@@Base+0x1cd4>
  420092:	cmp    r14,r12
  420095:	je     41ffe2 <__flatcc_fb_parse@@Base+0x1ce2>
  42009b:	mov    edx,DWORD PTR [r13+0x3c]
  42009f:	test   edx,edx
  4200a1:	je     41ffdd <__flatcc_fb_parse@@Base+0x1cdd>
  4200a7:	jmp    420078 <__flatcc_fb_parse@@Base+0x1d78>
  4200a9:	nop    DWORD PTR [rax+0x0]
  4200b0:	lea    r14,[r12+0x1]
  4200b5:	cmp    r15,r14
  4200b8:	je     4200c9 <__flatcc_fb_parse@@Base+0x1dc9>
  4200ba:	cmp    BYTE PTR [r12+0x1],0xd
  4200c0:	lea    rax,[r12+0x2]
  4200c5:	cmove  r14,rax
  4200c9:	add    QWORD PTR [r13+0x78],0x1
  4200ce:	mov    QWORD PTR [r13+0x70],r14
  4200d2:	jmp    41ff80 <__flatcc_fb_parse@@Base+0x1c80>
  4200d7:	mov    r12,rbx
  4200da:	mov    rcx,r12
  4200dd:	mov    rdx,r12
  4200e0:	mov    esi,0x1b
  4200e5:	mov    rdi,r13
  4200e8:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4200ed:	jmp    41fc7d <__flatcc_fb_parse@@Base+0x197d>
  4200f2:	lea    rbx,[r12+0x2]
  4200f7:	mov    DWORD PTR [r13+0x3c],0x0
  4200ff:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420104:	lea    r14,[r12+0x1]
  420109:	cmp    r15,r14
  42010c:	je     4200c9 <__flatcc_fb_parse@@Base+0x1dc9>
  42010e:	cmp    BYTE PTR [r12+0x1],0xa
  420114:	lea    rax,[r12+0x2]
  420119:	cmove  r14,rax
  42011d:	jmp    4200c9 <__flatcc_fb_parse@@Base+0x1dc9>
  42011f:	mov    rcx,r14
  420122:	mov    rdx,r12
  420125:	mov    esi,0x7
  42012a:	mov    rdi,r13
  42012d:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420132:	jmp    41ff80 <__flatcc_fb_parse@@Base+0x1c80>
  420137:	lea    r14,[rbx+0x2]
  42013b:	cmp    r15,r14
  42013e:	je     41eb93 <__flatcc_fb_parse@@Base+0x893>
  420144:	cmp    BYTE PTR [rbx+0x2],0xa
  420148:	lea    rax,[rbx+0x3]
  42014c:	cmove  r14,rax
  420150:	jmp    41eb93 <__flatcc_fb_parse@@Base+0x893>
  420155:	mov    rdx,rbx
  420158:	mov    rcx,r14
  42015b:	mov    esi,0x2a2a
  420160:	mov    rdi,r13
  420163:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420168:	movzx  eax,BYTE PTR [rbx+0x1]
  42016c:	mov    rbx,r14
  42016f:	jmp    41e3c3 <__flatcc_fb_parse@@Base+0xc3>
  420174:	lea    r14,[rbx+0x2]
  420178:	mov    rdx,rbx
  42017b:	mov    esi,0x3d7c
  420180:	mov    rdi,r13
  420183:	mov    rcx,r14
  420186:	mov    rbx,r14
  420189:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  42018e:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420193:	lea    r14,[rbx+0x2]
  420197:	cmp    r15,r14
  42019a:	je     4201a6 <__flatcc_fb_parse@@Base+0x1ea6>
  42019c:	cmp    BYTE PTR [rbx+0x2],0x2e
  4201a0:	je     4207d7 <__flatcc_fb_parse@@Base+0x24d7>
  4201a6:	mov    rdx,rbx
  4201a9:	mov    rcx,r14
  4201ac:	mov    esi,0x2e2e
  4201b1:	mov    rdi,r13
  4201b4:	mov    rbx,r14
  4201b7:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4201bc:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4201c1:	lea    r14,[rbx+0x2]
  4201c5:	cmp    r15,r14
  4201c8:	je     4201d4 <__flatcc_fb_parse@@Base+0x1ed4>
  4201ca:	cmp    BYTE PTR [rbx+0x2],0x3d
  4201ce:	je     420ab5 <__flatcc_fb_parse@@Base+0x27b5>
  4201d4:	mov    rdx,rbx
  4201d7:	mov    rcx,r14
  4201da:	mov    esi,0x3a3a
  4201df:	mov    rdi,r13
  4201e2:	mov    rbx,r14
  4201e5:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4201ea:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4201ef:	lea    r14,[rbx+0x2]
  4201f3:	mov    rdx,rbx
  4201f6:	mov    esi,0x2b2b
  4201fb:	mov    rdi,r13
  4201fe:	mov    rcx,r14
  420201:	mov    rbx,r14
  420204:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420209:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  42020e:	lea    r14,[rbx+0x2]
  420212:	mov    rdx,rbx
  420215:	mov    esi,0x3d3e
  42021a:	mov    rdi,r13
  42021d:	mov    rcx,r14
  420220:	mov    rbx,r14
  420223:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420228:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  42022d:	mov    rdx,rbx
  420230:	mov    rcx,r14
  420233:	mov    esi,0xa
  420238:	mov    rdi,r13
  42023b:	mov    rbx,r14
  42023e:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420243:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420248:	mov    r14,r15
  42024b:	jmp    41eae3 <__flatcc_fb_parse@@Base+0x7e3>
  420250:	lea    r14,[rbx+0x2]
  420254:	mov    rdx,rbx
  420257:	mov    esi,0x3d2f
  42025c:	mov    rdi,r13
  42025f:	mov    rcx,r14
  420262:	mov    rbx,r14
  420265:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  42026a:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  42026f:	lea    r9,[rbx+0x2]
  420273:	cmp    r15,r9
  420276:	je     420a30 <__flatcc_fb_parse@@Base+0x2730>
  42027c:	movzx  edx,BYTE PTR [rbx+0x2]
  420280:	cmp    dl,0x2f
  420283:	sete   al
  420286:	cmp    dl,0x21
  420289:	sete   dl
  42028c:	or     eax,edx
  42028e:	movzx  eax,al
  420291:	xor    edx,edx
  420293:	lea    r12,[r9+rax*1]
  420297:	mov    rax,r12
  42029a:	sub    rax,rbx
  42029d:	cmp    rax,0x3
  4202a1:	sete   dl
  4202a4:	mov    DWORD PTR [r13+0x3c],edx
  4202a8:	je     420622 <__flatcc_fb_parse@@Base+0x2322>
  4202ae:	xchg   ax,ax
  4202b0:	lea    r14,[r12-0x1]
  4202b5:	jmp    4202d3 <__flatcc_fb_parse@@Base+0x1fd3>
  4202b7:	nop    WORD PTR [rax+rax*1+0x0]
  4202c0:	movzx  eax,BYTE PTR [r14+0x1]
  4202c5:	sub    eax,0x20
  4202c8:	cmp    al,0x5e
  4202ca:	ja     420360 <__flatcc_fb_parse@@Base+0x2060>
  4202d0:	mov    r14,rbx
  4202d3:	lea    rbx,[r14+0x1]
  4202d7:	cmp    r15,rbx
  4202da:	jne    4202c0 <__flatcc_fb_parse@@Base+0x1fc0>
  4202dc:	cmp    r15,r12
  4202df:	je     4200da <__flatcc_fb_parse@@Base+0x1dda>
  4202e5:	mov    esi,DWORD PTR [r13+0x3c]
  4202e9:	test   esi,esi
  4202eb:	je     42044c <__flatcc_fb_parse@@Base+0x214c>
  4202f1:	mov    rbx,r15
  4202f4:	mov    rcx,rbx
  4202f7:	mov    rdx,r12
  4202fa:	mov    rsi,0xfffffffffffffc3c
  420301:	mov    rdi,r13
  420304:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420309:	cmp    r15,rbx
  42030c:	je     42044c <__flatcc_fb_parse@@Base+0x214c>
  420312:	movzx  eax,BYTE PTR [rbx]
  420315:	test   al,al
  420317:	je     4200d7 <__flatcc_fb_parse@@Base+0x1dd7>
  42031d:	cmp    al,0xa
  42031f:	je     4200f7 <__flatcc_fb_parse@@Base+0x1df7>
  420325:	cmp    al,0xd
  420327:	je     4200f7 <__flatcc_fb_parse@@Base+0x1df7>
  42032d:	cmp    al,0x20
  42032f:	lea    r12,[r14+0x2]
  420333:	je     420339 <__flatcc_fb_parse@@Base+0x2039>
  420335:	cmp    al,0x9
  420337:	jne    420370 <__flatcc_fb_parse@@Base+0x2070>
  420339:	mov    ecx,DWORD PTR [r13+0x3c]
  42033d:	test   ecx,ecx
  42033f:	je     4202b0 <__flatcc_fb_parse@@Base+0x1fb0>
  420345:	mov    rcx,r12
  420348:	mov    rdx,rbx
  42034b:	mov    rsi,0xfffffffffffffc3c
  420352:	mov    rdi,r13
  420355:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  42035a:	jmp    4202b0 <__flatcc_fb_parse@@Base+0x1fb0>
  42035f:	nop
  420360:	cmp    r12,rbx
  420363:	je     420312 <__flatcc_fb_parse@@Base+0x2012>
  420365:	mov    ecx,DWORD PTR [r13+0x3c]
  420369:	test   ecx,ecx
  42036b:	je     420312 <__flatcc_fb_parse@@Base+0x2012>
  42036d:	jmp    4202f4 <__flatcc_fb_parse@@Base+0x1ff4>
  42036f:	nop
  420370:	mov    rcx,r12
  420373:	mov    rdx,rbx
  420376:	mov    esi,0x7
  42037b:	mov    rdi,r13
  42037e:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420383:	jmp    4202b0 <__flatcc_fb_parse@@Base+0x1fb0>
  420388:	lea    r14,[rbx+0x2]
  42038c:	mov    rdx,rbx
  42038f:	mov    esi,0x3e2d
  420394:	mov    rdi,r13
  420397:	mov    rcx,r14
  42039a:	mov    rbx,r14
  42039d:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4203a2:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4203a7:	lea    r14,[rbx+0x2]
  4203ab:	mov    rdx,rbx
  4203ae:	mov    esi,0x3d2d
  4203b3:	mov    rdi,r13
  4203b6:	mov    rcx,r14
  4203b9:	mov    rbx,r14
  4203bc:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4203c1:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4203c6:	lea    r14,[rbx+0x2]
  4203ca:	mov    rdx,rbx
  4203cd:	mov    esi,0x3d3c
  4203d2:	mov    rdi,r13
  4203d5:	mov    rcx,r14
  4203d8:	mov    rbx,r14
  4203db:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4203e0:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4203e5:	lea    r14,[rbx+0x2]
  4203e9:	cmp    r15,r14
  4203ec:	je     420527 <__flatcc_fb_parse@@Base+0x2227>
  4203f2:	movzx  eax,BYTE PTR [rbx+0x2]
  4203f6:	cmp    al,0x3c
  4203f8:	je     4205a6 <__flatcc_fb_parse@@Base+0x22a6>
  4203fe:	cmp    al,0x3d
  420400:	jne    420527 <__flatcc_fb_parse@@Base+0x2227>
  420406:	lea    r14,[rbx+0x3]
  42040a:	mov    rdx,rbx
  42040d:	mov    esi,0x3d3c3c
  420412:	mov    rdi,r13
  420415:	mov    rcx,r14
  420418:	mov    rbx,r14
  42041b:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420420:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420425:	movsx  rax,BYTE PTR [r14]
  420429:	mov    r14,rdx
  42042c:	jmp    41e6a1 <__flatcc_fb_parse@@Base+0x3a1>
  420431:	mov    rdx,rbx
  420434:	mov    rcx,r14
  420437:	mov    esi,0x5
  42043c:	mov    rdi,r13
  42043f:	mov    rbx,r14
  420442:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420447:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  42044c:	mov    r12,r15
  42044f:	jmp    4200da <__flatcc_fb_parse@@Base+0x1dda>
  420454:	mov    rsi,QWORD PTR [rsp+0x18]
  420459:	mov    rdi,r13
  42045c:	call   41cc70 <__flatcc_error_report@@Base+0x1c0>
  420461:	lea    rdx,[rip+0x24dd0]        # 445238 <fb_schema_table_missing@@Base+0x5e8>
  420468:	mov    rcx,rbp
  42046b:	mov    esi,0x3b
  420470:	mov    rdi,r13
  420473:	call   41cdb0 <__flatcc_error_report@@Base+0x300>
  420478:	mov    rbp,QWORD PTR [rsp+0x28]
  42047d:	mov    rdi,QWORD PTR [r13+0x260]
  420484:	xor    edx,edx
  420486:	mov    rsi,rbp
  420489:	call   41b7e0 <fb_scope_table_find@@Base>
  42048e:	test   rax,rax
  420491:	je     420c15 <__flatcc_fb_parse@@Base+0x2915>
  420497:	mov    QWORD PTR [r13+0x340],rax
  42049e:	jmp    41ed58 <__flatcc_fb_parse@@Base+0xa58>
  4204a3:	movsx  rax,al
  4204a7:	lea    r14,[rbx+0x2]
  4204ab:	or     ah,0x3d
  4204ae:	mov    rsi,rax
  4204b1:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4204b6:	lea    r14,[rbx+0x3]
  4204ba:	mov    rdx,rbx
  4204bd:	mov    esi,0x3d3e3e
  4204c2:	mov    rdi,r13
  4204c5:	mov    rcx,r14
  4204c8:	mov    rbx,r14
  4204cb:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4204d0:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4204d5:	mov    rdx,rbx
  4204d8:	mov    rcx,r14
  4204db:	mov    esi,0x3e3e
  4204e0:	mov    rdi,r13
  4204e3:	mov    rbx,r14
  4204e6:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4204eb:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4204f0:	lea    rax,[r14+0x2]
  4204f4:	jmp    41f9ab <__flatcc_fb_parse@@Base+0x16ab>
  4204f9:	cmp    rax,0x65746139
  4204ff:	je     420874 <__flatcc_fb_parse@@Base+0x2574>
  420505:	cmp    rax,0x65796234
  42050b:	je     42084a <__flatcc_fb_parse@@Base+0x254a>
  420511:	cmp    rax,0x65727434
  420517:	je     420a37 <__flatcc_fb_parse@@Base+0x2737>
  42051d:	mov    esi,0x9
  420522:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420527:	mov    rdx,rbx
  42052a:	mov    rcx,r14
  42052d:	mov    esi,0x3c3c
  420532:	mov    rdi,r13
  420535:	mov    rbx,r14
  420538:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  42053d:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420542:	cmp    rax,0x326c6637
  420548:	je     420820 <__flatcc_fb_parse@@Base+0x2520>
  42054e:	cmp    rax,0x326e6935
  420554:	je     4207f6 <__flatcc_fb_parse@@Base+0x24f6>
  42055a:	cmp    rax,0x32697536
  420560:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  420562:	lea    rdi,[rip+0x14618]        # 434b81 <_IO_stdin_used@@Base+0x8b81>
  420569:	mov    rsi,rbx
  42056c:	mov    edx,0x6
  420571:	call   405120 <memcmp@plt>
  420576:	cmp    eax,0x1
  420579:	sbb    rsi,rsi
  42057c:	and    rsi,0xfffffffffffffc24
  420583:	add    rsi,0x9
  420587:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42058c:	mov    rcx,r14
  42058f:	mov    rdx,r14
  420592:	mov    rsi,0xfffffffffffffc3c
  420599:	mov    rdi,r13
  42059c:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4205a1:	jmp    41ff80 <__flatcc_fb_parse@@Base+0x1c80>
  4205a6:	lea    r14,[rbx+0x3]
  4205aa:	cmp    r15,r14
  4205ad:	je     4205b9 <__flatcc_fb_parse@@Base+0x22b9>
  4205af:	cmp    BYTE PTR [rbx+0x3],0x3d
  4205b3:	je     420bc5 <__flatcc_fb_parse@@Base+0x28c5>
  4205b9:	mov    rdx,rbx
  4205bc:	mov    rcx,r14
  4205bf:	mov    esi,0x3c3c3c
  4205c4:	mov    rdi,r13
  4205c7:	mov    rbx,r14
  4205ca:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4205cf:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4205d4:	cmp    rax,0x65616635
  4205da:	je     420a8b <__flatcc_fb_parse@@Base+0x278b>
  4205e0:	cmp    rax,0x65616e39
  4205e6:	je     420a61 <__flatcc_fb_parse@@Base+0x2761>
  4205ec:	cmp    rax,0x386e6934
  4205f2:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  4205f8:	lea    rdi,[rip+0x14591]        # 434b90 <_IO_stdin_used@@Base+0x8b90>
  4205ff:	mov    rsi,rbx
  420602:	mov    edx,0x4
  420607:	call   405120 <memcmp@plt>
  42060c:	cmp    eax,0x1
  42060f:	sbb    rsi,rsi
  420612:	and    rsi,0xfffffffffffffc16
  420619:	add    rsi,0x9
  42061d:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420622:	mov    rcx,r12
  420625:	mov    rdx,r12
  420628:	mov    rsi,0xfffffffffffffc3c
  42062f:	mov    rdi,r13
  420632:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420637:	jmp    4202b0 <__flatcc_fb_parse@@Base+0x1fb0>
  42063c:	cmp    rax,0x7269663f
  420642:	je     420b9b <__flatcc_fb_parse@@Base+0x289b>
  420648:	cmp    rax,0x74687335
  42064e:	je     420b71 <__flatcc_fb_parse@@Base+0x2871>
  420654:	cmp    rax,0x6e6e7535
  42065a:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  420660:	lea    rdi,[rip+0x25069]        # 4456d0 <fb_schema_table_missing@@Base+0xa80>
  420667:	mov    rsi,rbx
  42066a:	mov    edx,0x5
  42066f:	call   405120 <memcmp@plt>
  420674:	cmp    eax,0x1
  420677:	sbb    rsi,rsi
  42067a:	and    rsi,0xfffffffffffffc27
  420681:	add    rsi,0x9
  420685:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42068a:	mov    rbx,r15
  42068d:	jmp    41e4f1 <__flatcc_fb_parse@@Base+0x1f1>
  420692:	lea    rdi,[rip+0x25026]        # 4456bf <fb_schema_table_missing@@Base+0xa6f>
  420699:	mov    rsi,rbx
  42069c:	mov    edx,0x4
  4206a1:	call   405120 <memcmp@plt>
  4206a6:	cmp    eax,0x1
  4206a9:	sbb    rsi,rsi
  4206ac:	and    rsi,0xfffffffffffffc1c
  4206b3:	add    rsi,0x9
  4206b7:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4206bc:	cmp    rax,0x746c6635
  4206c2:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  4206c8:	lea    rdi,[rip+0x143b7]        # 434a86 <_IO_stdin_used@@Base+0x8a86>
  4206cf:	mov    rsi,rbx
  4206d2:	mov    edx,0x5
  4206d7:	call   405120 <memcmp@plt>
  4206dc:	cmp    eax,0x1
  4206df:	sbb    rsi,rsi
  4206e2:	and    rsi,0xfffffffffffffc1e
  4206e9:	add    rsi,0x9
  4206ed:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4206f2:	lea    rdi,[rip+0x24fc7]        # 4456c0 <fb_schema_table_missing@@Base+0xa70>
  4206f9:	mov    rsi,rbx
  4206fc:	mov    edx,0x3
  420701:	call   405120 <memcmp@plt>
  420706:	cmp    eax,0x1
  420709:	sbb    rsi,rsi
  42070c:	and    rsi,0xfffffffffffffc15
  420713:	add    rsi,0x9
  420717:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42071c:	lea    rdi,[rip+0x24fba]        # 4456dd <fb_schema_table_missing@@Base+0xa8d>
  420723:	mov    rsi,rbx
  420726:	mov    edx,0x6
  42072b:	call   405120 <memcmp@plt>
  420730:	cmp    eax,0x1
  420733:	sbb    rsi,rsi
  420736:	and    rsi,0xfffffffffffffc2b
  42073d:	add    rsi,0x9
  420741:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420746:	cmp    rax,0x346c6637
  42074c:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  420752:	lea    rdi,[rip+0x24f93]        # 4456ec <fb_schema_table_missing@@Base+0xa9c>
  420759:	mov    rsi,rbx
  42075c:	mov    edx,0x7
  420761:	call   405120 <memcmp@plt>
  420766:	cmp    eax,0x1
  420769:	sbb    rsi,rsi
  42076c:	and    rsi,0xfffffffffffffc14
  420773:	add    rsi,0x9
  420777:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42077c:	lea    rdi,[rip+0x143f8]        # 434b7b <_IO_stdin_used@@Base+0x8b7b>
  420783:	mov    rsi,rbx
  420786:	mov    edx,0x5
  42078b:	call   405120 <memcmp@plt>
  420790:	cmp    eax,0x1
  420793:	sbb    rsi,rsi
  420796:	and    rsi,0xfffffffffffffc19
  42079d:	add    rsi,0x9
  4207a1:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4207a6:	lea    rdi,[rip+0x143cd]        # 434b7a <_IO_stdin_used@@Base+0x8b7a>
  4207ad:	mov    rsi,rbx
  4207b0:	mov    edx,0x6
  4207b5:	call   405120 <memcmp@plt>
  4207ba:	cmp    eax,0x1
  4207bd:	sbb    rsi,rsi
  4207c0:	and    rsi,0xfffffffffffffc25
  4207c7:	add    rsi,0x9
  4207cb:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4207d0:	xor    eax,eax
  4207d2:	jmp    41ff5f <__flatcc_fb_parse@@Base+0x1c5f>
  4207d7:	lea    r14,[rbx+0x3]
  4207db:	mov    rdx,rbx
  4207de:	mov    esi,0x2e2e2e
  4207e3:	mov    rdi,r13
  4207e6:	mov    rcx,r14
  4207e9:	mov    rbx,r14
  4207ec:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  4207f1:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  4207f6:	lea    rdi,[rip+0x14385]        # 434b82 <_IO_stdin_used@@Base+0x8b82>
  4207fd:	mov    rsi,rbx
  420800:	mov    edx,0x5
  420805:	call   405120 <memcmp@plt>
  42080a:	cmp    eax,0x1
  42080d:	sbb    rsi,rsi
  420810:	and    rsi,0xfffffffffffffc18
  420817:	add    rsi,0x9
  42081b:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420820:	lea    rdi,[rip+0x24ebd]        # 4456e4 <fb_schema_table_missing@@Base+0xa94>
  420827:	mov    rsi,rbx
  42082a:	mov    edx,0x7
  42082f:	call   405120 <memcmp@plt>
  420834:	cmp    eax,0x1
  420837:	sbb    rsi,rsi
  42083a:	and    rsi,0xfffffffffffffc13
  420841:	add    rsi,0x9
  420845:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42084a:	lea    rdi,[rip+0x24e64]        # 4456b5 <fb_schema_table_missing@@Base+0xa65>
  420851:	mov    rsi,rbx
  420854:	mov    edx,0x4
  420859:	call   405120 <memcmp@plt>
  42085e:	cmp    eax,0x1
  420861:	sbb    rsi,rsi
  420864:	and    rsi,0xfffffffffffffc11
  42086b:	add    rsi,0x9
  42086f:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420874:	lea    rdi,[rip+0x24e81]        # 4456fc <fb_schema_table_missing@@Base+0xaac>
  42087b:	mov    rsi,rbx
  42087e:	mov    edx,0x9
  420883:	call   405120 <memcmp@plt>
  420888:	cmp    eax,0x1
  42088b:	sbb    rsi,rsi
  42088e:	and    rsi,0xfffffffffffffc2d
  420895:	add    rsi,0x9
  420899:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42089e:	lea    rdi,[rip+0x142e3]        # 434b88 <_IO_stdin_used@@Base+0x8b88>
  4208a5:	mov    rsi,rbx
  4208a8:	mov    edx,0x6
  4208ad:	call   405120 <memcmp@plt>
  4208b2:	cmp    eax,0x1
  4208b5:	sbb    rsi,rsi
  4208b8:	and    rsi,0xfffffffffffffc23
  4208bf:	add    rsi,0x9
  4208c3:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4208c8:	lea    rdi,[rip+0x24e57]        # 445726 <fb_schema_table_missing@@Base+0xad6>
  4208cf:	mov    rsi,rbx
  4208d2:	mov    edx,0xe
  4208d7:	call   405120 <memcmp@plt>
  4208dc:	cmp    eax,0x1
  4208df:	sbb    rsi,rsi
  4208e2:	and    rsi,0xfffffffffffffc31
  4208e9:	add    rsi,0x9
  4208ed:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4208f2:	cmp    rax,0x676f6c34
  4208f8:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  4208fe:	lea    rdi,[rip+0x24dc6]        # 4456cb <fb_schema_table_missing@@Base+0xa7b>
  420905:	mov    rsi,rbx
  420908:	mov    edx,0x4
  42090d:	call   405120 <memcmp@plt>
  420912:	cmp    eax,0x1
  420915:	sbb    rsi,rsi
  420918:	and    rsi,0xfffffffffffffc1a
  42091f:	add    rsi,0x9
  420923:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420928:	lea    rdi,[rip+0x24cc1]        # 4455f0 <fb_schema_table_missing@@Base+0x9a0>
  42092f:	mov    rsi,rbx
  420932:	mov    edx,0x6
  420937:	call   405120 <memcmp@plt>
  42093c:	cmp    eax,0x1
  42093f:	sbb    rsi,rsi
  420942:	and    rsi,0xfffffffffffffc29
  420949:	add    rsi,0x9
  42094d:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420952:	lea    rdi,[rip+0x24d71]        # 4456ca <fb_schema_table_missing@@Base+0xa7a>
  420959:	mov    rsi,rbx
  42095c:	mov    edx,0x5
  420961:	call   405120 <memcmp@plt>
  420966:	cmp    eax,0x1
  420969:	sbb    rsi,rsi
  42096c:	and    rsi,0xfffffffffffffc26
  420973:	add    rsi,0x9
  420977:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  42097c:	lea    rdi,[rip+0x14212]        # 434b95 <_IO_stdin_used@@Base+0x8b95>
  420983:	mov    rsi,rbx
  420986:	mov    edx,0x4
  42098b:	call   405120 <memcmp@plt>
  420990:	cmp    eax,0x1
  420993:	sbb    rsi,rsi
  420996:	and    rsi,0xfffffffffffffc10
  42099d:	add    rsi,0x9
  4209a1:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4209a6:	cmp    rax,0x65627535
  4209ac:	jne    42051d <__flatcc_fb_parse@@Base+0x221d>
  4209b2:	lea    rdi,[rip+0x24cfb]        # 4456b4 <fb_schema_table_missing@@Base+0xa64>
  4209b9:	mov    rsi,rbx
  4209bc:	mov    edx,0x5
  4209c1:	call   405120 <memcmp@plt>
  4209c6:	cmp    eax,0x1
  4209c9:	sbb    rsi,rsi
  4209cc:	and    rsi,0xfffffffffffffc21
  4209d3:	add    rsi,0x9
  4209d7:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  4209dc:	lea    rdi,[rip+0x24d11]        # 4456f4 <fb_schema_table_missing@@Base+0xaa4>
  4209e3:	mov    rsi,rbx
  4209e6:	mov    edx,0x7
  4209eb:	call   405120 <memcmp@plt>
  4209f0:	cmp    eax,0x1
  4209f3:	sbb    rsi,rsi
  4209f6:	and    rsi,0xfffffffffffffc2c
  4209fd:	add    rsi,0x9
  420a01:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420a06:	lea    rdi,[rip+0x26829]        # 447236 <fb_schema_table_missing@@Base+0x25e6>
  420a0d:	mov    rsi,rbx
  420a10:	mov    edx,0x5
  420a15:	call   405120 <memcmp@plt>
  420a1a:	cmp    eax,0x1
  420a1d:	sbb    rsi,rsi
  420a20:	and    rsi,0xfffffffffffffc20
  420a27:	add    rsi,0x9
  420a2b:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420a30:	xor    eax,eax
  420a32:	jmp    42028e <__flatcc_fb_parse@@Base+0x1f8e>
  420a37:	lea    rdi,[rip+0x24c7c]        # 4456ba <fb_schema_table_missing@@Base+0xa6a>
  420a3e:	mov    rsi,rbx
  420a41:	mov    edx,0x4
  420a46:	call   405120 <memcmp@plt>
  420a4b:	cmp    eax,0x1
  420a4e:	sbb    rsi,rsi
  420a51:	and    rsi,0xfffffffffffffc1b
  420a58:	add    rsi,0x9
  420a5c:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420a61:	lea    rdi,[rip+0x24c9e]        # 445706 <fb_schema_table_missing@@Base+0xab6>
  420a68:	mov    rsi,rbx
  420a6b:	mov    edx,0x9
  420a70:	call   405120 <memcmp@plt>
  420a75:	cmp    eax,0x1
  420a78:	sbb    rsi,rsi
  420a7b:	and    rsi,0xfffffffffffffc2e
  420a82:	add    rsi,0x9
  420a86:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420a8b:	lea    rdi,[rip+0x24c32]        # 4456c4 <fb_schema_table_missing@@Base+0xa74>
  420a92:	mov    rsi,rbx
  420a95:	mov    edx,0x5
  420a9a:	call   405120 <memcmp@plt>
  420a9f:	cmp    eax,0x1
  420aa2:	sbb    rsi,rsi
  420aa5:	and    rsi,0xfffffffffffffc1d
  420aac:	add    rsi,0x9
  420ab0:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420ab5:	lea    r14,[rbx+0x3]
  420ab9:	mov    rdx,rbx
  420abc:	mov    esi,0x3d3a3a
  420ac1:	mov    rdi,r13
  420ac4:	mov    rcx,r14
  420ac7:	mov    rbx,r14
  420aca:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420acf:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420ad4:	lea    rdi,[rip+0x140b4]        # 434b8f <_IO_stdin_used@@Base+0x8b8f>
  420adb:	mov    rsi,rbx
  420ade:	mov    edx,0x5
  420ae3:	call   405120 <memcmp@plt>
  420ae8:	cmp    eax,0x1
  420aeb:	sbb    rsi,rsi
  420aee:	and    rsi,0xfffffffffffffc22
  420af5:	add    rsi,0x9
  420af9:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420afe:	lea    rdi,[rip+0x24c15]        # 44571a <fb_schema_table_missing@@Base+0xaca>
  420b05:	mov    rsi,rbx
  420b08:	mov    edx,0xb
  420b0d:	call   405120 <memcmp@plt>
  420b12:	cmp    eax,0x1
  420b15:	sbb    rsi,rsi
  420b18:	and    rsi,0xfffffffffffffc30
  420b1f:	add    rsi,0x9
  420b23:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420b28:	lea    r14,[rbx+0x3]
  420b2c:	mov    rdx,rbx
  420b2f:	mov    esi,0x3d3d3d
  420b34:	mov    rdi,r13
  420b37:	mov    rcx,r14
  420b3a:	mov    rbx,r14
  420b3d:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420b42:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420b47:	lea    rdi,[rip+0x13f3e]        # 434a8c <_IO_stdin_used@@Base+0x8a8c>
  420b4e:	mov    rsi,rbx
  420b51:	mov    edx,0x6
  420b56:	call   405120 <memcmp@plt>
  420b5b:	cmp    eax,0x1
  420b5e:	sbb    rsi,rsi
  420b61:	and    rsi,0xfffffffffffffc28
  420b68:	add    rsi,0x9
  420b6c:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420b71:	lea    rdi,[rip+0x24b66]        # 4456de <fb_schema_table_missing@@Base+0xa8e>
  420b78:	mov    rsi,rbx
  420b7b:	mov    edx,0x5
  420b80:	call   405120 <memcmp@plt>
  420b85:	cmp    eax,0x1
  420b88:	sbb    rsi,rsi
  420b8b:	and    rsi,0xfffffffffffffc1f
  420b92:	add    rsi,0x9
  420b96:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420b9b:	lea    rdi,[rip+0x24b93]        # 445735 <fb_schema_table_missing@@Base+0xae5>
  420ba2:	mov    rsi,rbx
  420ba5:	mov    edx,0xf
  420baa:	call   405120 <memcmp@plt>
  420baf:	cmp    eax,0x1
  420bb2:	sbb    rsi,rsi
  420bb5:	and    rsi,0xfffffffffffffc32
  420bbc:	add    rsi,0x9
  420bc0:	jmp    41e7aa <__flatcc_fb_parse@@Base+0x4aa>
  420bc5:	lea    r14,[rbx+0x4]
  420bc9:	mov    rdx,rbx
  420bcc:	mov    esi,0x3d3c3c3c
  420bd1:	mov    rdi,r13
  420bd4:	mov    rcx,r14
  420bd7:	mov    rbx,r14
  420bda:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420bdf:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420be4:	call   4050d0 <__stack_chk_fail@plt>
  420be9:	lea    r14,[rbx+0x4]
  420bed:	mov    rdx,rbx
  420bf0:	mov    esi,0x3d3e3e3e
  420bf5:	mov    rdi,r13
  420bf8:	mov    rcx,r14
  420bfb:	mov    rbx,r14
  420bfe:	call   41c6e0 <__flatcc_fb_default_error_out@@Base+0x30>
  420c03:	jmp    41e3b7 <__flatcc_fb_parse@@Base+0xb7>
  420c08:	call   40526e <__sprintf_chk@plt+0x5e>
  420c0d:	mov    r12,r14
  420c10:	jmp    41ffd4 <__flatcc_fb_parse@@Base+0x1cd4>
  420c15:	mov    r12,QWORD PTR [r13+0x60]
  420c19:	lea    rax,[r12+0x40]
  420c1e:	cmp    rax,QWORD PTR [r13+0x50]
  420c22:	ja     420c60 <__flatcc_fb_parse@@Base+0x2960>
  420c24:	mov    QWORD PTR [r13+0x60],rax
  420c28:	mov    rdx,QWORD PTR [r13+0x2e0]
  420c2f:	mov    rsi,r12
  420c32:	mov    rax,QWORD PTR [r13+0x2d8]
  420c39:	mov    rdi,QWORD PTR [r13+0x260]
  420c40:	mov    QWORD PTR [r12],rbp
  420c44:	mov    QWORD PTR [r12+0x30],rdx
  420c49:	mov    edx,0x1
  420c4e:	mov    QWORD PTR [r12+0x28],rax
  420c53:	call   41b7d0 <fb_scope_table_insert_item@@Base>
  420c58:	mov    rax,r12
  420c5b:	jmp    420497 <__flatcc_fb_parse@@Base+0x2197>
  420c60:	mov    esi,0x1
  420c65:	mov    edi,0x10000
  420c6a:	call   405130 <calloc@plt>
  420c6f:	test   rax,rax
  420c72:	je     420c08 <__flatcc_fb_parse@@Base+0x2908>
  420c74:	mov    rdx,QWORD PTR [r13+0x58]
  420c78:	lea    r12,[rax+0x10]
  420c7c:	mov    QWORD PTR [r13+0x58],rax
  420c80:	mov    QWORD PTR [rax],rdx
  420c83:	lea    rdx,[rax+0x10000]
  420c8a:	add    rax,0x50
  420c8e:	mov    QWORD PTR [r13+0x50],rdx
  420c92:	jmp    420c24 <__flatcc_fb_parse@@Base+0x2924>
  420c94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420c9f:	nop

0000000000420ca0 <__flatcc_fb_clear_parser@@Base>:
  420ca0:	push   rbp
  420ca1:	push   rbx
  420ca2:	mov    rbp,rdi
  420ca5:	sub    rsp,0x8
  420ca9:	mov    rbx,QWORD PTR [rdi+0x238]
  420cb0:	test   rbx,rbx
  420cb3:	jne    420cc8 <__flatcc_fb_clear_parser@@Base+0x28>
  420cb5:	jmp    420cec <__flatcc_fb_clear_parser@@Base+0x4c>
  420cb7:	nop    WORD PTR [rax+rax*1+0x0]
  420cc0:	mov    rbx,QWORD PTR [rbx]
  420cc3:	test   rbx,rbx
  420cc6:	je     420cec <__flatcc_fb_clear_parser@@Base+0x4c>
  420cc8:	cmp    WORD PTR [rbx+0x10],0x4
  420ccd:	ja     420cc0 <__flatcc_fb_clear_parser@@Base+0x20>
  420ccf:	lea    rdi,[rbx+0x60]
  420cd3:	call   41a710 <fb_symbol_table_clear@@Base>
  420cd8:	lea    rdi,[rbx+0x80]
  420cdf:	call   42b880 <fb_value_set_clear@@Base>
  420ce4:	mov    rbx,QWORD PTR [rbx]
  420ce7:	test   rbx,rbx
  420cea:	jne    420cc8 <__flatcc_fb_clear_parser@@Base+0x28>
  420cec:	lea    rdi,[rbp+0x2a8]
  420cf3:	call   41be80 <fb_schema_table_clear@@Base>
  420cf8:	lea    rdi,[rbp+0x288]
  420cff:	call   42b130 <fb_name_table_clear@@Base>
  420d04:	lea    rdi,[rbp+0x320]
  420d0b:	call   419fb0 <ptr_set_clear@@Base>
  420d10:	mov    rdi,QWORD PTR [rbp+0xd8]
  420d17:	test   rdi,rdi
  420d1a:	je     420d21 <__flatcc_fb_clear_parser@@Base+0x81>
  420d1c:	call   405040 <free@plt>
  420d21:	mov    rdi,QWORD PTR [rbp+0x28]
  420d25:	test   rdi,rdi
  420d28:	je     420d2f <__flatcc_fb_clear_parser@@Base+0x8f>
  420d2a:	call   405040 <free@plt>
  420d2f:	mov    rdi,QWORD PTR [rbp+0x308]
  420d36:	test   rdi,rdi
  420d39:	je     420d40 <__flatcc_fb_clear_parser@@Base+0xa0>
  420d3b:	call   405040 <free@plt>
  420d40:	mov    rdi,QWORD PTR [rbp+0x310]
  420d47:	test   rdi,rdi
  420d4a:	je     420d51 <__flatcc_fb_clear_parser@@Base+0xb1>
  420d4c:	call   405040 <free@plt>
  420d51:	mov    rdi,QWORD PTR [rbp+0x318]
  420d58:	test   rdi,rdi
  420d5b:	je     420d62 <__flatcc_fb_clear_parser@@Base+0xc2>
  420d5d:	call   405040 <free@plt>
  420d62:	mov    rdi,QWORD PTR [rbp+0x348]
  420d69:	test   rdi,rdi
  420d6c:	je     420d73 <__flatcc_fb_clear_parser@@Base+0xd3>
  420d6e:	call   405040 <free@plt>
  420d73:	lea    rdi,[rbp+0x268]
  420d7a:	lea    rsi,[rip+0xffffffffffffb94f]        # 41c6d0 <__flatcc_fb_default_error_out@@Base+0x20>
  420d81:	xor    edx,edx
  420d83:	call   41b6e0 <fb_scope_table_destroy@@Base>
  420d88:	mov    rdi,QWORD PTR [rbp+0x58]
  420d8c:	test   rdi,rdi
  420d8f:	je     420da8 <__flatcc_fb_clear_parser@@Base+0x108>
  420d91:	nop    DWORD PTR [rax+0x0]
  420d98:	mov    rbx,QWORD PTR [rdi]
  420d9b:	call   405040 <free@plt>
  420da0:	test   rbx,rbx
  420da3:	mov    rdi,rbx
  420da6:	jne    420d98 <__flatcc_fb_clear_parser@@Base+0xf8>
  420da8:	mov    rdi,QWORD PTR [rbp+0x20]
  420dac:	test   rdi,rdi
  420daf:	je     420db6 <__flatcc_fb_clear_parser@@Base+0x116>
  420db1:	call   405040 <free@plt>
  420db6:	lea    rdi,[rbp+0x8]
  420dba:	mov    QWORD PTR [rbp+0x0],0x0
  420dc2:	mov    QWORD PTR [rbp+0x350],0x0
  420dcd:	xor    eax,eax
  420dcf:	and    rdi,0xfffffffffffffff8
  420dd3:	sub    rbp,rdi
  420dd6:	lea    ecx,[rbp+0x358]
  420ddc:	shr    ecx,0x3
  420ddf:	rep stos QWORD PTR es:[rdi],rax
  420de2:	add    rsp,0x8
  420de6:	pop    rbx
  420de7:	pop    rbp
  420de8:	ret    
  420de9:	nop    DWORD PTR [rax+0x0]
  420df0:	push   r15
  420df2:	push   r14
  420df4:	push   r13
  420df6:	push   r12
  420df8:	push   rbp
  420df9:	push   rbx
  420dfa:	sub    rsp,0x18
  420dfe:	movzx  r12d,WORD PTR [rsi+0x10]
  420e03:	cmp    r12w,0x1
  420e08:	jne    42123a <__flatcc_fb_clear_parser@@Base+0x59a>
  420e0e:	movzx  eax,WORD PTR [rsi+0x12]
  420e12:	mov    rbp,rsi
  420e15:	test   al,0x1
  420e17:	jne    421259 <__flatcc_fb_clear_parser@@Base+0x5b9>
  420e1d:	test   al,0x2
  420e1f:	jne    420f46 <__flatcc_fb_clear_parser@@Base+0x2a6>
  420e25:	cmp    QWORD PTR [rsi+0xc0],0x0
  420e2d:	jne    421278 <__flatcc_fb_clear_parser@@Base+0x5d8>
  420e33:	mov    rbx,QWORD PTR [rsi+0x28]
  420e37:	or     eax,0x1
  420e3a:	mov    r14,rdi
  420e3d:	mov    WORD PTR [rsi+0x12],ax
  420e41:	test   rbx,rbx
  420e44:	je     420ec0 <__flatcc_fb_clear_parser@@Base+0x220>
  420e46:	cmp    DWORD PTR [rdi+0xe0],0x63
  420e4d:	jg     42110c <__flatcc_fb_clear_parser@@Base+0x46c>
  420e53:	lea    r15,[rip+0x264a6]        # 447300 <fb_schema_table_missing@@Base+0x26b0>
  420e5a:	lea    r13,[rip+0x24f3f]        # 445da0 <fb_schema_table_missing@@Base+0x1150>
  420e61:	movzx  edx,WORD PTR [rbx+0x28]
  420e65:	cmp    dx,0x8
  420e69:	je     421008 <__flatcc_fb_clear_parser@@Base+0x368>
  420e6f:	cmp    dx,0xe
  420e73:	je     420f60 <__flatcc_fb_clear_parser@@Base+0x2c0>
  420e79:	cmp    dx,0x1
  420e7d:	mov    eax,0xffffffff
  420e82:	je     420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  420e84:	mov    rsi,QWORD PTR [rbx+0x8]
  420e88:	lea    rdx,[rip+0x261bb]        # 44704a <fb_schema_table_missing@@Base+0x23fa>
  420e8f:	xor    r9d,r9d
  420e92:	xor    r8d,r8d
  420e95:	xor    ecx,ecx
  420e97:	mov    rdi,r14
  420e9a:	mov    DWORD PTR [rsp+0x8],eax
  420e9e:	call   41cab0 <__flatcc_error_report@@Base>
  420ea3:	mov    eax,DWORD PTR [rsp+0x8]
  420ea7:	add    rsp,0x18
  420eab:	pop    rbx
  420eac:	pop    rbp
  420ead:	pop    r12
  420eaf:	pop    r13
  420eb1:	pop    r14
  420eb3:	pop    r15
  420eb5:	ret    
  420eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ec0:	movzx  eax,WORD PTR [rbp+0xb0]
  420ec7:	test   ax,ax
  420eca:	je     4211b1 <__flatcc_fb_clear_parser@@Base+0x511>
  420ed0:	cmp    ax,r12w
  420ed4:	jb     42120e <__flatcc_fb_clear_parser@@Base+0x56e>
  420eda:	lea    rdx,[rax-0x1]
  420ede:	mov    rcx,QWORD PTR [rbp+0xb8]
  420ee5:	cmp    rdx,0xff
  420eec:	ja     420fff <__flatcc_fb_clear_parser@@Base+0x35f>
  420ef2:	cmp    rax,0x1
  420ef6:	je     420f11 <__flatcc_fb_clear_parser@@Base+0x271>
  420ef8:	mov    edx,0x2
  420efd:	jmp    420f0c <__flatcc_fb_clear_parser@@Base+0x26c>
  420eff:	nop
  420f00:	add    rdx,rdx
  420f03:	cmp    rax,rdx
  420f06:	jb     420fff <__flatcc_fb_clear_parser@@Base+0x35f>
  420f0c:	cmp    rdx,rax
  420f0f:	jne    420f00 <__flatcc_fb_clear_parser@@Base+0x260>
  420f11:	lea    rdx,[rax+rcx*1-0x1]
  420f16:	neg    rax
  420f19:	and    rax,rdx
  420f1c:	mov    QWORD PTR [rbp+0xb8],rax
  420f23:	movzx  eax,WORD PTR [rbp+0x12]
  420f27:	and    eax,0xfffffffe
  420f2a:	or     eax,0x2
  420f2d:	mov    WORD PTR [rbp+0x12],ax
  420f31:	mov    rax,QWORD PTR [r14+0x240]
  420f38:	mov    QWORD PTR [rbp+0xc0],rax
  420f3f:	mov    QWORD PTR [r14+0x240],rbp
  420f46:	add    rsp,0x18
  420f4a:	xor    eax,eax
  420f4c:	pop    rbx
  420f4d:	pop    rbp
  420f4e:	pop    r12
  420f50:	pop    r13
  420f52:	pop    r14
  420f54:	pop    r15
  420f56:	ret    
  420f57:	nop    WORD PTR [rax+rax*1+0x0]
  420f60:	mov    r11,QWORD PTR [rbx+0x18]
  420f64:	movzx  eax,WORD PTR [r11+0x10]
  420f69:	cmp    ax,0x3
  420f6d:	je     421080 <__flatcc_fb_clear_parser@@Base+0x3e0>
  420f73:	cmp    ax,0x1
  420f77:	jne    4211e9 <__flatcc_fb_clear_parser@@Base+0x549>
  420f7d:	movzx  eax,WORD PTR [r11+0x12]
  420f82:	test   al,0x1
  420f84:	jne    4211c2 <__flatcc_fb_clear_parser@@Base+0x522>
  420f8a:	test   al,0x2
  420f8c:	jne    420fca <__flatcc_fb_clear_parser@@Base+0x32a>
  420f8e:	mov    eax,DWORD PTR [r14+0x128]
  420f95:	test   eax,eax
  420f97:	jne    421160 <__flatcc_fb_clear_parser@@Base+0x4c0>
  420f9d:	add    DWORD PTR [r14+0xe0],0x1
  420fa5:	mov    rsi,r11
  420fa8:	mov    rdi,r14
  420fab:	mov    QWORD PTR [rsp+0x8],r11
  420fb0:	call   420df0 <__flatcc_fb_clear_parser@@Base+0x150>
  420fb5:	sub    DWORD PTR [r14+0xe0],0x1
  420fbd:	test   eax,eax
  420fbf:	mov    r11,QWORD PTR [rsp+0x8]
  420fc4:	jne    420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  420fca:	movzx  ecx,WORD PTR [r11+0xb0]
  420fd2:	mov    rax,QWORD PTR [r11+0xb8]
  420fd9:	mov    QWORD PTR [rbx+0x80],rax
  420fe0:	mov    WORD PTR [rbx+0x72],cx
  420fe4:	movzx  eax,cx
  420fe7:	mov    rsi,QWORD PTR [rbp+0xb8]
  420fee:	lea    rdx,[rax-0x1]
  420ff2:	cmp    rdx,0xff
  420ff9:	jbe    421090 <__flatcc_fb_clear_parser@@Base+0x3f0>
  420fff:	call   405299 <__sprintf_chk@plt+0x89>
  421004:	nop    DWORD PTR [rax+0x0]
  421008:	mov    rcx,QWORD PTR [rbx+0x18]
  42100c:	mov    rax,QWORD PTR [rcx+0x20]
  421010:	add    rax,0x3e7
  421016:	cmp    rax,0x1b
  42101a:	jbe    421050 <__flatcc_fb_clear_parser@@Base+0x3b0>
  42101c:	mov    DWORD PTR [rbx+0x18],0x0
  421023:	mov    rsi,QWORD PTR [rbx+0x8]
  421027:	lea    rdx,[rip+0x2601c]        # 44704a <fb_schema_table_missing@@Base+0x23fa>
  42102e:	xor    r9d,r9d
  421031:	xor    r8d,r8d
  421034:	mov    rdi,r14
  421037:	call   41cab0 <__flatcc_error_report@@Base>
  42103c:	mov    eax,0xffffffff
  421041:	jmp    420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  421046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421050:	mov    eax,DWORD PTR [r15+rax*4]
  421054:	lea    rdi,[rip+0x263a5]        # 447400 <fb_schema_table_missing@@Base+0x27b0>
  42105b:	mov    DWORD PTR [rbx+0x18],eax
  42105e:	movsxd rax,DWORD PTR [rdi+rax*4]
  421062:	test   rax,rax
  421065:	je     421023 <__flatcc_fb_clear_parser@@Base+0x383>
  421067:	mov    ecx,eax
  421069:	mov    WORD PTR [rbx+0x72],ax
  42106d:	mov    QWORD PTR [rbx+0x80],rax
  421074:	jmp    420fe4 <__flatcc_fb_clear_parser@@Base+0x344>
  421079:	nop    DWORD PTR [rax+0x0]
  421080:	mov    rax,QWORD PTR [r11+0xb8]
  421087:	jmp    421067 <__flatcc_fb_clear_parser@@Base+0x3c7>
  421089:	nop    DWORD PTR [rax+0x0]
  421090:	cmp    rax,0x1
  421094:	je     4210b1 <__flatcc_fb_clear_parser@@Base+0x411>
  421096:	mov    edx,0x2
  42109b:	jmp    4210ac <__flatcc_fb_clear_parser@@Base+0x40c>
  42109d:	nop    DWORD PTR [rax]
  4210a0:	add    rdx,rdx
  4210a3:	cmp    rax,rdx
  4210a6:	jb     420fff <__flatcc_fb_clear_parser@@Base+0x35f>
  4210ac:	cmp    rax,rdx
  4210af:	jne    4210a0 <__flatcc_fb_clear_parser@@Base+0x400>
  4210b1:	lea    rdx,[rax+rsi*1-0x1]
  4210b6:	neg    rax
  4210b9:	and    rax,rdx
  4210bc:	cmp    rsi,rax
  4210bf:	mov    QWORD PTR [rbx+0x78],rax
  4210c3:	ja     42118c <__flatcc_fb_clear_parser@@Base+0x4ec>
  4210c9:	add    rax,QWORD PTR [rbx+0x80]
  4210d0:	jb     42118c <__flatcc_fb_clear_parser@@Base+0x4ec>
  4210d6:	cmp    rsi,rax
  4210d9:	ja     421130 <__flatcc_fb_clear_parser@@Base+0x490>
  4210db:	cmp    rax,0xffff
  4210e1:	ja     421130 <__flatcc_fb_clear_parser@@Base+0x490>
  4210e3:	mov    rbx,QWORD PTR [rbx]
  4210e6:	cmp    r12w,cx
  4210ea:	mov    QWORD PTR [rbp+0xb8],rax
  4210f1:	cmovb  r12d,ecx
  4210f5:	test   rbx,rbx
  4210f8:	je     420ec0 <__flatcc_fb_clear_parser@@Base+0x220>
  4210fe:	cmp    DWORD PTR [r14+0xe0],0x63
  421106:	jle    420e61 <__flatcc_fb_clear_parser@@Base+0x1c1>
  42110c:	lea    rdx,[rip+0x24bad]        # 445cc0 <fb_schema_table_missing@@Base+0x1070>
  421113:	xor    r9d,r9d
  421116:	xor    r8d,r8d
  421119:	xor    ecx,ecx
  42111b:	xor    esi,esi
  42111d:	mov    rdi,r14
  421120:	call   41cab0 <__flatcc_error_report@@Base>
  421125:	mov    eax,0xffffffff
  42112a:	jmp    420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  42112f:	nop
  421130:	mov    rsi,QWORD PTR [rbx+0x8]
  421134:	xor    ecx,ecx
  421136:	xor    r9d,r9d
  421139:	xor    r8d,r8d
  42113c:	mov    rdx,r13
  42113f:	mov    rdi,r14
  421142:	mov    QWORD PTR [rsp+0x8],rax
  421147:	call   41cab0 <__flatcc_error_report@@Base>
  42114c:	movzx  ecx,WORD PTR [rbx+0x72]
  421150:	mov    rax,QWORD PTR [rsp+0x8]
  421155:	jmp    4210e3 <__flatcc_fb_clear_parser@@Base+0x443>
  421157:	nop    WORD PTR [rax+rax*1+0x0]
  421160:	mov    rcx,QWORD PTR [r11+0x8]
  421164:	mov    rsi,QWORD PTR [rbx+0x8]
  421168:	lea    rdx,[rip+0x24bc1]        # 445d30 <fb_schema_table_missing@@Base+0x10e0>
  42116f:	xor    r9d,r9d
  421172:	xor    r8d,r8d
  421175:	mov    rdi,r14
  421178:	mov    QWORD PTR [rsp+0x8],r11
  42117d:	call   41cab0 <__flatcc_error_report@@Base>
  421182:	mov    r11,QWORD PTR [rsp+0x8]
  421187:	jmp    420f9d <__flatcc_fb_clear_parser@@Base+0x2fd>
  42118c:	mov    rsi,QWORD PTR [rbx+0x8]
  421190:	lea    rdx,[rip+0x25ec3]        # 44705a <fb_schema_table_missing@@Base+0x240a>
  421197:	xor    r9d,r9d
  42119a:	xor    r8d,r8d
  42119d:	xor    ecx,ecx
  42119f:	mov    rdi,r14
  4211a2:	call   41cab0 <__flatcc_error_report@@Base>
  4211a7:	mov    eax,0xffffffff
  4211ac:	jmp    420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  4211b1:	mov    WORD PTR [rbp+0xb0],r12w
  4211b9:	movzx  eax,r12w
  4211bd:	jmp    420eda <__flatcc_fb_clear_parser@@Base+0x23a>
  4211c2:	mov    rcx,QWORD PTR [r11+0x8]
  4211c6:	mov    rsi,QWORD PTR [rbx+0x8]
  4211ca:	lea    rdx,[rip+0x24b3f]        # 445d10 <fb_schema_table_missing@@Base+0x10c0>
  4211d1:	xor    r9d,r9d
  4211d4:	xor    r8d,r8d
  4211d7:	mov    rdi,r14
  4211da:	call   41cab0 <__flatcc_error_report@@Base>
  4211df:	mov    eax,0xffffffff
  4211e4:	jmp    420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  4211e9:	mov    rsi,QWORD PTR [rbx+0x8]
  4211ed:	lea    rdx,[rip+0x24b84]        # 445d78 <fb_schema_table_missing@@Base+0x1128>
  4211f4:	xor    r9d,r9d
  4211f7:	xor    r8d,r8d
  4211fa:	xor    ecx,ecx
  4211fc:	mov    rdi,r14
  4211ff:	call   41cab0 <__flatcc_error_report@@Base>
  421204:	mov    eax,0xffffffff
  421209:	jmp    420ea7 <__flatcc_fb_clear_parser@@Base+0x207>
  42120e:	mov    rsi,QWORD PTR [rbp+0x8]
  421212:	lea    rdx,[rip+0x24bbf]        # 445dd8 <fb_schema_table_missing@@Base+0x1188>
  421219:	xor    r9d,r9d
  42121c:	xor    r8d,r8d
  42121f:	xor    ecx,ecx
  421221:	mov    rdi,r14
  421224:	call   41cab0 <__flatcc_error_report@@Base>
  421229:	mov    WORD PTR [rbp+0xb0],r12w
  421231:	movzx  eax,r12w
  421235:	jmp    420eda <__flatcc_fb_clear_parser@@Base+0x23a>
  42123a:	lea    rcx,[rip+0x261a7]        # 4473e8 <fb_schema_table_missing@@Base+0x2798>
  421241:	lea    rsi,[rip+0x249e8]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  421248:	lea    rdi,[rip+0xc521]        # 42d770 <_IO_stdin_used@@Base+0x1770>
  42124f:	mov    edx,0x1f6
  421254:	call   4050f0 <__assert_fail@plt>
  421259:	lea    rcx,[rip+0x26188]        # 4473e8 <fb_schema_table_missing@@Base+0x2798>
  421260:	lea    rsi,[rip+0x249c9]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  421267:	lea    rdi,[rip+0x24a2a]        # 445c98 <fb_schema_table_missing@@Base+0x1048>
  42126e:	mov    edx,0x1f8
  421273:	call   4050f0 <__assert_fail@plt>
  421278:	lea    rcx,[rip+0x26169]        # 4473e8 <fb_schema_table_missing@@Base+0x2798>
  42127f:	lea    rsi,[rip+0x249aa]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  421286:	lea    rdi,[rip+0x25db2]        # 44703f <fb_schema_table_missing@@Base+0x23ef>
  42128d:	mov    edx,0x1fc
  421292:	call   4050f0 <__assert_fail@plt>
  421297:	nop    WORD PTR [rax+rax*1+0x0]
  4212a0:	push   r15
  4212a2:	push   r14
  4212a4:	mov    r14,rsi
  4212a7:	push   r13
  4212a9:	push   r12
  4212ab:	push   rbp
  4212ac:	push   rbx
  4212ad:	mov    rbx,rdi
  4212b0:	sub    rsp,0xf8
  4212b7:	mov    rax,QWORD PTR fs:0x28
  4212c0:	mov    QWORD PTR [rsp+0xe8],rax
  4212c8:	xor    eax,eax
  4212ca:	movzx  eax,WORD PTR [rsi+0x10]
  4212ce:	cmp    ax,0x4
  4212d2:	mov    WORD PTR [rsp+0x6],ax
  4212d7:	je     421980 <__flatcc_fb_clear_parser@@Base+0xce0>
  4212dd:	cmp    ax,0x3
  4212e1:	jne    421f64 <__flatcc_fb_clear_parser@@Base+0x12c4>
  4212e7:	movzx  eax,WORD PTR [rsi+0x58]
  4212eb:	test   ax,ax
  4212ee:	je     421e25 <__flatcc_fb_clear_parser@@Base+0x1185>
  4212f4:	cmp    ax,0x8
  4212f8:	jne    421dd9 <__flatcc_fb_clear_parser@@Base+0x1139>
  4212fe:	mov    rax,QWORD PTR [rsi+0x48]
  421302:	mov    rax,QWORD PTR [rax+0x20]
  421306:	add    rax,0x3e7
  42130c:	cmp    rax,0x1b
  421310:	ja     4216e8 <__flatcc_fb_clear_parser@@Base+0xa48>
  421316:	lea    rdx,[rip+0x25fe3]        # 447300 <fb_schema_table_missing@@Base+0x26b0>
  42131d:	mov    ecx,DWORD PTR [rdx+rax*4]
  421320:	lea    rax,[rip+0x260d9]        # 447400 <fb_schema_table_missing@@Base+0x27b0>
  421327:	movsxd rax,DWORD PTR [rax+rcx*4]
  42132b:	mov    rdx,rcx
  42132e:	mov    ecx,eax
  421330:	mov    DWORD PTR [r14+0x48],edx
  421334:	mov    QWORD PTR [r14+0xb8],rax
  42133b:	mov    WORD PTR [r14+0xb0],cx
  421343:	mov    r15,QWORD PTR [r14+0x38]
  421347:	lea    r13,[rsp+0x80]
  42134f:	xor    eax,eax
  421351:	mov    ecx,0xc
  421356:	mov    rdi,r13
  421359:	test   r15,r15
  42135c:	rep stos QWORD PTR es:[rdi],rax
  42135f:	je     421bed <__flatcc_fb_clear_parser@@Base+0xf4d>
  421365:	mov    ebp,0x64
  42136a:	xor    r12d,r12d
  42136d:	jmp    4213b6 <__flatcc_fb_clear_parser@@Base+0x716>
  42136f:	nop
  421370:	mov    edx,0x1
  421375:	shlx   edx,edx,eax
  42137a:	or     r12d,edx
  42137d:	lea    rdx,[r13+rax*8+0x0]
  421382:	cmp    QWORD PTR [rdx],0x0
  421386:	je     4216f8 <__flatcc_fb_clear_parser@@Base+0xa58>
  42138c:	mov    rsi,QWORD PTR [r15+0x8]
  421390:	lea    rdx,[rip+0x24b49]        # 445ee0 <fb_schema_table_missing@@Base+0x1290>
  421397:	xor    r9d,r9d
  42139a:	xor    r8d,r8d
  42139d:	xor    ecx,ecx
  42139f:	mov    rdi,rbx
  4213a2:	call   41cab0 <__flatcc_error_report@@Base>
  4213a7:	mov    r15,QWORD PTR [r15]
  4213aa:	sub    ebp,0x1
  4213ad:	test   r15,r15
  4213b0:	je     421410 <__flatcc_fb_clear_parser@@Base+0x770>
  4213b2:	test   ebp,ebp
  4213b4:	je     421410 <__flatcc_fb_clear_parser@@Base+0x770>
  4213b6:	mov    rax,QWORD PTR [r15+0x8]
  4213ba:	mov    rdi,QWORD PTR [rbx+0x260]
  4213c1:	mov    rdx,QWORD PTR [rax+0x8]
  4213c5:	mov    rsi,QWORD PTR [rax]
  4213c8:	add    rdi,0x20
  4213cc:	call   42b250 <fb_name_table_find@@Base>
  4213d1:	test   rax,rax
  4213d4:	je     421810 <__flatcc_fb_clear_parser@@Base+0xb70>
  4213da:	movsxd rax,DWORD PTR [rax+0x20]
  4213de:	test   eax,eax
  4213e0:	je     4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  4213e2:	cmp    al,0x5
  4213e4:	je     421370 <__flatcc_fb_clear_parser@@Base+0x6d0>
  4213e6:	mov    rsi,QWORD PTR [r15+0x8]
  4213ea:	lea    rdx,[rip+0x24abf]        # 445eb0 <fb_schema_table_missing@@Base+0x1260>
  4213f1:	xor    r9d,r9d
  4213f4:	xor    r8d,r8d
  4213f7:	xor    ecx,ecx
  4213f9:	mov    rdi,rbx
  4213fc:	sub    ebp,0x1
  4213ff:	call   41cab0 <__flatcc_error_report@@Base>
  421404:	mov    r15,QWORD PTR [r15]
  421407:	test   r15,r15
  42140a:	jne    4213b2 <__flatcc_fb_clear_parser@@Base+0x712>
  42140c:	nop    DWORD PTR [rax+0x0]
  421410:	test   r15,r15
  421413:	je     421430 <__flatcc_fb_clear_parser@@Base+0x790>
  421415:	mov    rsi,QWORD PTR [r15+0x8]
  421419:	lea    rdx,[rip+0x25c83]        # 4470a3 <fb_schema_table_missing@@Base+0x2453>
  421420:	xor    r9d,r9d
  421423:	xor    r8d,r8d
  421426:	xor    ecx,ecx
  421428:	mov    rdi,rbx
  42142b:	call   41cab0 <__flatcc_error_report@@Base>
  421430:	mov    eax,r12d
  421433:	mov    WORD PTR [r14+0xa4],r12w
  42143b:	mov    DWORD PTR [rsp+0x38],0x0
  421443:	and    eax,0x20
  421446:	test   ax,ax
  421449:	je     42145c <__flatcc_fb_clear_parser@@Base+0x7bc>
  42144b:	mov    QWORD PTR [rsp+0x40],0x0
  421454:	mov    DWORD PTR [rsp+0x38],0x1
  42145c:	mov    edx,DWORD PTR [r14+0x48]
  421460:	cmp    edx,0x5
  421463:	jne    421830 <__flatcc_fb_clear_parser@@Base+0xb90>
  421469:	mov    edi,0x6
  42146e:	mov    BYTE PTR [rsp+0x40],0x0
  421473:	mov    WORD PTR [rsp+0x50],di
  421478:	mov    rax,QWORD PTR [rsp+0x40]
  42147d:	mov    r13,QWORD PTR [r14+0x28]
  421481:	mov    QWORD PTR [rsp+0x60],rax
  421486:	mov    rax,QWORD PTR [rsp+0x48]
  42148b:	test   r13,r13
  42148e:	mov    QWORD PTR [rsp+0x68],rax
  421493:	mov    rax,QWORD PTR [rsp+0x50]
  421498:	mov    QWORD PTR [rsp+0x70],rax
  42149d:	je     4216b8 <__flatcc_fb_clear_parser@@Base+0xa18>
  4214a3:	lea    rax,[r14+0x80]
  4214aa:	lea    r12,[r14+0x60]
  4214ae:	mov    ebp,0x1
  4214b3:	lea    r15,[rbx+0x1f8]
  4214ba:	mov    QWORD PTR [rsp+0x10],r14
  4214bf:	mov    QWORD PTR [rsp+0x8],rax
  4214c4:	lea    rax,[rsp+0x40]
  4214c9:	mov    QWORD PTR [rsp+0x18],rax
  4214ce:	jmp    421516 <__flatcc_fb_clear_parser@@Base+0x876>
  4214d0:	mov    rcx,QWORD PTR [rax+0x8]
  4214d4:	lea    rax,[rbx+0x80]
  4214db:	xor    r9d,r9d
  4214de:	xor    r8d,r8d
  4214e1:	mov    rsi,QWORD PTR [r13+0x8]
  4214e5:	cmp    rcx,rax
  4214e8:	je     421740 <__flatcc_fb_clear_parser@@Base+0xaa0>
  4214ee:	lea    rdx,[rip+0x25bdf]        # 4470d4 <fb_schema_table_missing@@Base+0x2484>
  4214f5:	mov    rdi,rbx
  4214f8:	call   41cab0 <__flatcc_error_report@@Base>
  4214fd:	mov    edx,0x1
  421502:	mov    WORD PTR [r13+0x28],dx
  421507:	mov    r13,QWORD PTR [r13+0x0]
  42150b:	xor    ebp,ebp
  42150d:	test   r13,r13
  421510:	je     4216b8 <__flatcc_fb_clear_parser@@Base+0xa18>
  421516:	mov    edx,0x1
  42151b:	mov    rsi,r13
  42151e:	mov    rdi,r12
  421521:	call   41a810 <fb_symbol_table_insert_item@@Base>
  421526:	test   rax,rax
  421529:	jne    4214d0 <__flatcc_fb_clear_parser@@Base+0x830>
  42152b:	cmp    WORD PTR [r13+0x10],0x5
  421531:	jne    421bc8 <__flatcc_fb_clear_parser@@Base+0xf28>
  421537:	cmp    QWORD PTR [r13+0x60],0x0
  42153c:	jne    421f45 <__flatcc_fb_clear_parser@@Base+0x12a5>
  421542:	cmp    WORD PTR [rsp+0x6],0x4
  421548:	je     4217b0 <__flatcc_fb_clear_parser@@Base+0xb10>
  42154e:	movzx  eax,WORD PTR [r13+0x58]
  421553:	xor    ebp,0x1
  421556:	test   ax,ax
  421559:	jne    421c60 <__flatcc_fb_clear_parser@@Base+0xfc0>
  42155f:	test   bpl,bpl
  421562:	je     421c60 <__flatcc_fb_clear_parser@@Base+0xfc0>
  421568:	movzx  eax,WORD PTR [rsp+0x50]
  42156d:	cmp    ax,0x5
  421571:	je     421760 <__flatcc_fb_clear_parser@@Base+0xac0>
  421577:	cmp    ax,0x4
  42157b:	je     4219ec <__flatcc_fb_clear_parser@@Base+0xd4c>
  421581:	cmp    ax,0x6
  421585:	je     421a76 <__flatcc_fb_clear_parser@@Base+0xdd6>
  42158b:	nop    DWORD PTR [rax+rax*1+0x0]
  421590:	mov    r11d,DWORD PTR [rsp+0x38]
  421595:	test   r11d,r11d
  421598:	je     421788 <__flatcc_fb_clear_parser@@Base+0xae8>
  42159e:	mov    rax,QWORD PTR [rsp+0x10]
  4215a3:	mov    rcx,QWORD PTR [rsp+0x40]
  4215a8:	mov    esi,DWORD PTR [rax+0x48]
  4215ab:	lea    rax,[rip+0x25e4e]        # 447400 <fb_schema_table_missing@@Base+0x27b0>
  4215b2:	movsxd rax,DWORD PTR [rax+rsi*4]
  4215b6:	mov    rdx,rsi
  4215b9:	shl    rax,0x3
  4215bd:	cmp    rcx,rax
  4215c0:	jae    421c04 <__flatcc_fb_clear_parser@@Base+0xf64>
  4215c6:	mov    eax,0x1
  4215cb:	mov    r9d,0x5
  4215d1:	mov    rsi,r13
  4215d4:	shlx   rax,rax,rcx
  4215d9:	lea    rcx,[r13+0x48]
  4215dd:	mov    WORD PTR [r13+0x58],r9w
  4215e2:	mov    QWORD PTR [r13+0x48],rax
  4215e6:	mov    rdi,rbx
  4215e9:	call   425900 <__flatcc_fb_coerce_scalar_type@@Base>
  4215ee:	test   eax,eax
  4215f0:	jne    421c04 <__flatcc_fb_clear_parser@@Base+0xf64>
  4215f6:	test   bpl,bpl
  4215f9:	je     421638 <__flatcc_fb_clear_parser@@Base+0x998>
  4215fb:	mov    r8d,DWORD PTR [rbx+0x120]
  421602:	test   r8d,r8d
  421605:	je     421638 <__flatcc_fb_clear_parser@@Base+0x998>
  421607:	movzx  eax,WORD PTR [rsp+0x50]
  42160c:	cmp    ax,0x5
  421610:	je     4218b8 <__flatcc_fb_clear_parser@@Base+0xc18>
  421616:	cmp    ax,0x4
  42161a:	je     421910 <__flatcc_fb_clear_parser@@Base+0xc70>
  421620:	cmp    ax,0x6
  421624:	jne    421638 <__flatcc_fb_clear_parser@@Base+0x998>
  421626:	movzx  eax,BYTE PTR [rsp+0x60]
  42162b:	cmp    BYTE PTR [rsp+0x40],al
  42162f:	jbe    421ed1 <__flatcc_fb_clear_parser@@Base+0x1231>
  421635:	nop    DWORD PTR [rax]
  421638:	mov    rax,QWORD PTR [rsp+0x40]
  42163d:	mov    rdi,QWORD PTR [rsp+0x8]
  421642:	lea    rsi,[r13+0x48]
  421646:	mov    edx,0x1
  42164b:	mov    QWORD PTR [rsp+0x60],rax
  421650:	mov    rax,QWORD PTR [rsp+0x48]
  421655:	mov    QWORD PTR [rsp+0x68],rax
  42165a:	mov    rax,QWORD PTR [rsp+0x50]
  42165f:	mov    QWORD PTR [rsp+0x70],rax
  421664:	call   42b980 <fb_value_set_insert_item@@Base>
  421669:	test   rax,rax
  42166c:	je     421680 <__flatcc_fb_clear_parser@@Base+0x9e0>
  42166e:	cmp    WORD PTR [rsp+0x6],0x4
  421674:	je     421cbc <__flatcc_fb_clear_parser@@Base+0x101c>
  42167a:	or     WORD PTR [r13+0x12],0x4
  421680:	cmp    QWORD PTR [r13+0x60],0x0
  421685:	je     421507 <__flatcc_fb_clear_parser@@Base+0x867>
  42168b:	mov    rsi,QWORD PTR [r13+0x8]
  42168f:	lea    rdx,[rip+0x24c22]        # 4462b8 <fb_schema_table_missing@@Base+0x1668>
  421696:	xor    r9d,r9d
  421699:	xor    r8d,r8d
  42169c:	xor    ecx,ecx
  42169e:	mov    rdi,rbx
  4216a1:	xor    ebp,ebp
  4216a3:	call   41cab0 <__flatcc_error_report@@Base>
  4216a8:	mov    r13,QWORD PTR [r13+0x0]
  4216ac:	test   r13,r13
  4216af:	jne    421516 <__flatcc_fb_clear_parser@@Base+0x876>
  4216b5:	nop    DWORD PTR [rax]
  4216b8:	xor    eax,eax
  4216ba:	mov    rbx,QWORD PTR [rsp+0xe8]
  4216c2:	xor    rbx,QWORD PTR fs:0x28
  4216cb:	jne    421f83 <__flatcc_fb_clear_parser@@Base+0x12e3>
  4216d1:	add    rsp,0xf8
  4216d8:	pop    rbx
  4216d9:	pop    rbp
  4216da:	pop    r12
  4216dc:	pop    r13
  4216de:	pop    r14
  4216e0:	pop    r15
  4216e2:	ret    
  4216e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4216e8:	xor    ecx,ecx
  4216ea:	xor    eax,eax
  4216ec:	xor    edx,edx
  4216ee:	jmp    421330 <__flatcc_fb_clear_parser@@Base+0x690>
  4216f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4216f8:	lea    rcx,[rip+0x25d61]        # 447460 <fb_schema_table_missing@@Base+0x2810>
  4216ff:	mov    QWORD PTR [rdx],r15
  421702:	mov    eax,DWORD PTR [rcx+rax*4]
  421705:	test   eax,eax
  421707:	jne    421880 <__flatcc_fb_clear_parser@@Base+0xbe0>
  42170d:	cmp    WORD PTR [r15+0x20],0x0
  421713:	je     4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421719:	mov    rsi,QWORD PTR [r15+0x8]
  42171d:	lea    rdx,[rip+0x247e4]        # 445f08 <fb_schema_table_missing@@Base+0x12b8>
  421724:	xor    r9d,r9d
  421727:	xor    r8d,r8d
  42172a:	xor    ecx,ecx
  42172c:	mov    rdi,rbx
  42172f:	call   41cab0 <__flatcc_error_report@@Base>
  421734:	jmp    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421739:	nop    DWORD PTR [rax+0x0]
  421740:	lea    rdx,[rip+0x25970]        # 4470b7 <fb_schema_table_missing@@Base+0x2467>
  421747:	xor    ecx,ecx
  421749:	mov    rdi,rbx
  42174c:	call   41cab0 <__flatcc_error_report@@Base>
  421751:	mov    ecx,0x1
  421756:	mov    WORD PTR [r13+0x28],cx
  42175b:	jmp    421507 <__flatcc_fb_clear_parser@@Base+0x867>
  421760:	mov    rax,QWORD PTR [rsp+0x10]
  421765:	cmp    DWORD PTR [rax+0x48],0x6
  421769:	je     421c29 <__flatcc_fb_clear_parser@@Base+0xf89>
  42176f:	mov    eax,DWORD PTR [rsp+0x38]
  421773:	add    QWORD PTR [rsp+0x40],0x1
  421779:	test   eax,eax
  42177b:	jne    42159e <__flatcc_fb_clear_parser@@Base+0x8fe>
  421781:	nop    DWORD PTR [rax+0x0]
  421788:	mov    rax,QWORD PTR [rsp+0x40]
  42178d:	mov    QWORD PTR [r13+0x48],rax
  421791:	mov    rax,QWORD PTR [rsp+0x48]
  421796:	mov    QWORD PTR [r13+0x50],rax
  42179a:	mov    rax,QWORD PTR [rsp+0x50]
  42179f:	mov    QWORD PTR [r13+0x58],rax
  4217a3:	jmp    4215f6 <__flatcc_fb_clear_parser@@Base+0x956>
  4217a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4217b0:	mov    rsi,QWORD PTR [r13+0x8]
  4217b4:	lea    rax,[rbx+0x80]
  4217bb:	cmp    rsi,rax
  4217be:	je     421a6a <__flatcc_fb_clear_parser@@Base+0xdca>
  4217c4:	movzx  eax,WORD PTR [r13+0x28]
  4217c9:	cmp    ax,0xa
  4217cd:	je     421970 <__flatcc_fb_clear_parser@@Base+0xcd0>
  4217d3:	cmp    ax,0xc
  4217d7:	je     421a8b <__flatcc_fb_clear_parser@@Base+0xdeb>
  4217dd:	cmp    ax,0x1
  4217e1:	je     421507 <__flatcc_fb_clear_parser@@Base+0x867>
  4217e7:	lea    rdx,[rip+0x24862]        # 446050 <fb_schema_table_missing@@Base+0x1400>
  4217ee:	xor    r9d,r9d
  4217f1:	xor    r8d,r8d
  4217f4:	xor    ecx,ecx
  4217f6:	mov    rdi,rbx
  4217f9:	call   41cab0 <__flatcc_error_report@@Base>
  4217fe:	mov    eax,0x1
  421803:	mov    WORD PTR [r13+0x28],ax
  421808:	jmp    421507 <__flatcc_fb_clear_parser@@Base+0x867>
  42180d:	nop    DWORD PTR [rax]
  421810:	mov    rsi,QWORD PTR [r15+0x8]
  421814:	lea    rdx,[rip+0x24675]        # 445e90 <fb_schema_table_missing@@Base+0x1240>
  42181b:	xor    r9d,r9d
  42181e:	xor    r8d,r8d
  421821:	xor    ecx,ecx
  421823:	mov    rdi,rbx
  421826:	call   41cab0 <__flatcc_error_report@@Base>
  42182b:	jmp    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421830:	mov    esi,0x4
  421835:	lea    rcx,[rsp+0x40]
  42183a:	mov    rdi,rbx
  42183d:	mov    WORD PTR [rsp+0x50],si
  421842:	mov    rsi,r14
  421845:	mov    QWORD PTR [rsp+0x40],0x0
  42184e:	call   425900 <__flatcc_fb_coerce_scalar_type@@Base>
  421853:	test   eax,eax
  421855:	je     421478 <__flatcc_fb_clear_parser@@Base+0x7d8>
  42185b:	lea    rdx,[rip+0x2477e]        # 445fe0 <fb_schema_table_missing@@Base+0x1390>
  421862:	xor    r9d,r9d
  421865:	xor    r8d,r8d
  421868:	xor    ecx,ecx
  42186a:	xor    esi,esi
  42186c:	mov    rdi,rbx
  42186f:	call   41cab0 <__flatcc_error_report@@Base>
  421874:	mov    eax,0xffffffff
  421879:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  42187e:	xchg   ax,ax
  421880:	cmp    eax,0x2
  421883:	jne    4219bb <__flatcc_fb_clear_parser@@Base+0xd1b>
  421889:	cmp    WORD PTR [r15+0x20],0x2
  42188f:	je     4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421895:	mov    rsi,QWORD PTR [r15+0x8]
  421899:	lea    rdx,[rip+0x24690]        # 445f30 <fb_schema_table_missing@@Base+0x12e0>
  4218a0:	xor    r9d,r9d
  4218a3:	xor    r8d,r8d
  4218a6:	xor    ecx,ecx
  4218a8:	mov    rdi,rbx
  4218ab:	call   41cab0 <__flatcc_error_report@@Base>
  4218b0:	jmp    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  4218b5:	nop    DWORD PTR [rax]
  4218b8:	mov    rax,QWORD PTR [rsp+0x60]
  4218bd:	cmp    QWORD PTR [rsp+0x40],rax
  4218c2:	ja     421638 <__flatcc_fb_clear_parser@@Base+0x998>
  4218c8:	xor    r9d,r9d
  4218cb:	xor    r8d,r8d
  4218ce:	xor    ecx,ecx
  4218d0:	cmp    WORD PTR [rsp+0x6],0x4
  4218d6:	mov    rsi,QWORD PTR [r13+0x8]
  4218da:	jne    4218e8 <__flatcc_fb_clear_parser@@Base+0xc48>
  4218dc:	cmp    QWORD PTR [rsp+0x60],0x0
  4218e2:	je     421f00 <__flatcc_fb_clear_parser@@Base+0x1260>
  4218e8:	lea    rdx,[rip+0x24911]        # 446200 <fb_schema_table_missing@@Base+0x15b0>
  4218ef:	mov    rdi,rbx
  4218f2:	call   41cab0 <__flatcc_error_report@@Base>
  4218f7:	mov    esi,0x1
  4218fc:	mov    eax,0xffffffff
  421901:	mov    WORD PTR [r13+0x58],si
  421906:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  42190b:	nop    DWORD PTR [rax+rax*1+0x0]
  421910:	mov    rax,QWORD PTR [rsp+0x60]
  421915:	cmp    QWORD PTR [rsp+0x40],rax
  42191a:	jg     421638 <__flatcc_fb_clear_parser@@Base+0x998>
  421920:	jmp    4218c8 <__flatcc_fb_clear_parser@@Base+0xc28>
  421922:	nop    WORD PTR [rax+rax*1+0x0]
  421928:	mov    rsi,QWORD PTR [rax+0x20]
  42192c:	mov    rdi,QWORD PTR [rsp+0x30]
  421931:	mov    QWORD PTR [rsp+0x20],rax
  421936:	call   41a0d0 <ptr_set_find_item@@Base>
  42193b:	test   rax,rax
  42193e:	mov    rdx,QWORD PTR [rsp+0x20]
  421943:	je     421b14 <__flatcc_fb_clear_parser@@Base+0xe74>
  421949:	mov    ebp,DWORD PTR [rsp+0x3c]
  42194d:	mov    r12,QWORD PTR [rsp+0x28]
  421952:	cmp    WORD PTR [rdx+0x10],0x1
  421957:	ja     421d78 <__flatcc_fb_clear_parser@@Base+0x10d8>
  42195d:	mov    eax,0xe
  421962:	mov    QWORD PTR [r13+0x18],rdx
  421966:	mov    WORD PTR [r13+0x28],ax
  42196b:	nop    DWORD PTR [rax+rax*1+0x0]
  421970:	mov    QWORD PTR [r13+0x80],0x0
  42197b:	jmp    42154e <__flatcc_fb_clear_parser@@Base+0x8ae>
  421980:	cmp    WORD PTR [rsi+0x58],0x0
  421985:	jne    421f23 <__flatcc_fb_clear_parser@@Base+0x1283>
  42198b:	mov    r8d,0x8
  421991:	mov    r9d,0x1
  421997:	mov    DWORD PTR [rsi+0x48],0x4
  42199e:	mov    WORD PTR [rsi+0x58],r8w
  4219a3:	mov    QWORD PTR [rsi+0xb8],0x1
  4219ae:	mov    WORD PTR [rsi+0xb0],r9w
  4219b6:	jmp    421343 <__flatcc_fb_clear_parser@@Base+0x6a3>
  4219bb:	cmp    eax,0x5
  4219be:	jne    421a2f <__flatcc_fb_clear_parser@@Base+0xd8f>
  4219c0:	cmp    WORD PTR [r15+0x20],0x5
  4219c6:	je     4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  4219cc:	mov    rsi,QWORD PTR [r15+0x8]
  4219d0:	lea    rdx,[rip+0x24581]        # 445f58 <fb_schema_table_missing@@Base+0x1308>
  4219d7:	xor    r9d,r9d
  4219da:	xor    r8d,r8d
  4219dd:	xor    ecx,ecx
  4219df:	mov    rdi,rbx
  4219e2:	call   41cab0 <__flatcc_error_report@@Base>
  4219e7:	jmp    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  4219ec:	mov    rax,QWORD PTR [rsp+0x10]
  4219f1:	cmp    DWORD PTR [rax+0x48],0x6
  4219f5:	jne    42176f <__flatcc_fb_clear_parser@@Base+0xacf>
  4219fb:	mov    rax,QWORD PTR [rsp+0x40]
  421a00:	movabs rdx,0x7fffffffffffffff
  421a0a:	cmp    rax,rdx
  421a0d:	je     421ea6 <__flatcc_fb_clear_parser@@Base+0x1206>
  421a13:	mov    r14d,DWORD PTR [rsp+0x38]
  421a18:	add    rax,0x1
  421a1c:	mov    QWORD PTR [rsp+0x40],rax
  421a21:	test   r14d,r14d
  421a24:	jne    42159e <__flatcc_fb_clear_parser@@Base+0x8fe>
  421a2a:	jmp    421788 <__flatcc_fb_clear_parser@@Base+0xae8>
  421a2f:	cmp    eax,0x4
  421a32:	jne    421da4 <__flatcc_fb_clear_parser@@Base+0x1104>
  421a38:	movzx  eax,WORD PTR [r15+0x20]
  421a3d:	sub    eax,0x4
  421a40:	cmp    ax,0x1
  421a44:	jbe    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421a4a:	mov    rsi,QWORD PTR [r15+0x8]
  421a4e:	lea    rdx,[rip+0x24533]        # 445f88 <fb_schema_table_missing@@Base+0x1338>
  421a55:	xor    r9d,r9d
  421a58:	xor    r8d,r8d
  421a5b:	xor    ecx,ecx
  421a5d:	mov    rdi,rbx
  421a60:	call   41cab0 <__flatcc_error_report@@Base>
  421a65:	jmp    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421a6a:	xor    eax,eax
  421a6c:	mov    WORD PTR [r13+0x28],ax
  421a71:	jmp    42154e <__flatcc_fb_clear_parser@@Base+0x8ae>
  421a76:	cmp    BYTE PTR [rsp+0x40],0x1
  421a7b:	je     421dfb <__flatcc_fb_clear_parser@@Base+0x115b>
  421a81:	mov    BYTE PTR [rsp+0x40],0x1
  421a86:	jmp    421590 <__flatcc_fb_clear_parser@@Base+0x8f0>
  421a8b:	mov    rax,QWORD PTR [rsp+0x10]
  421a90:	mov    rsi,QWORD PTR [r13+0x18]
  421a94:	mov    rax,QWORD PTR [rax+0x18]
  421a98:	test   rsi,rsi
  421a9b:	mov    r11,rax
  421a9e:	je     421b99 <__flatcc_fb_clear_parser@@Base+0xef9>
  421aa4:	mov    rdi,rsi
  421aa7:	xor    edx,edx
  421aa9:	jmp    421ab5 <__flatcc_fb_clear_parser@@Base+0xe15>
  421aab:	nop    DWORD PTR [rax+rax*1+0x0]
  421ab0:	mov    edx,ecx
  421ab2:	mov    rdi,rax
  421ab5:	mov    rax,QWORD PTR [rdi]
  421ab8:	lea    ecx,[rdx+0x1]
  421abb:	test   rax,rax
  421abe:	jne    421ab0 <__flatcc_fb_clear_parser@@Base+0xe10>
  421ac0:	test   r11,r11
  421ac3:	mov    r14,rdi
  421ac6:	je     421ceb <__flatcc_fb_clear_parser@@Base+0x104b>
  421acc:	cmp    ecx,0x1
  421acf:	jne    421ceb <__flatcc_fb_clear_parser@@Base+0x104b>
  421ad5:	lea    rax,[rbx+0x320]
  421adc:	mov    DWORD PTR [rsp+0x3c],ebp
  421ae0:	mov    r14,r11
  421ae3:	mov    QWORD PTR [rsp+0x28],r12
  421ae8:	mov    rbp,rdi
  421aeb:	mov    QWORD PTR [rsp+0x30],rax
  421af0:	mov    rax,QWORD PTR [rbp+0x8]
  421af4:	lea    rdi,[r14+0x8]
  421af8:	mov    rdx,QWORD PTR [rax+0x8]
  421afc:	mov    rsi,QWORD PTR [rax]
  421aff:	call   41a830 <fb_symbol_table_find@@Base>
  421b04:	test   rax,rax
  421b07:	je     421b14 <__flatcc_fb_clear_parser@@Base+0xe74>
  421b09:	cmp    WORD PTR [rax+0x10],0x4
  421b0e:	jbe    421928 <__flatcc_fb_clear_parser@@Base+0xc88>
  421b14:	mov    rax,QWORD PTR [r14]
  421b17:	test   rax,rax
  421b1a:	je     421b90 <__flatcc_fb_clear_parser@@Base+0xef0>
  421b1c:	xor    edx,edx
  421b1e:	xchg   ax,ax
  421b20:	mov    rax,QWORD PTR [rax]
  421b23:	add    edx,0x1
  421b26:	test   rax,rax
  421b29:	jne    421b20 <__flatcc_fb_clear_parser@@Base+0xe80>
  421b2b:	mov    r12d,0x1
  421b31:	sub    r12d,edx
  421b34:	jmp    421b65 <__flatcc_fb_clear_parser@@Base+0xec5>
  421b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b40:	test   r15,r15
  421b43:	je     421b61 <__flatcc_fb_clear_parser@@Base+0xec1>
  421b45:	mov    rdi,QWORD PTR [rbx+0x260]
  421b4c:	test   rdi,rdi
  421b4f:	je     421b61 <__flatcc_fb_clear_parser@@Base+0xec1>
  421b51:	mov    rsi,QWORD PTR [r14]
  421b54:	movsxd rdx,r12d
  421b57:	call   41b7e0 <fb_scope_table_find@@Base>
  421b5c:	test   rax,rax
  421b5f:	jne    421bc0 <__flatcc_fb_clear_parser@@Base+0xf20>
  421b61:	add    r12d,0x1
  421b65:	test   r12d,r12d
  421b68:	jne    421b40 <__flatcc_fb_clear_parser@@Base+0xea0>
  421b6a:	test   r15,r15
  421b6d:	je     421b90 <__flatcc_fb_clear_parser@@Base+0xef0>
  421b6f:	mov    rdi,QWORD PTR [rbx+0x260]
  421b76:	test   rdi,rdi
  421b79:	je     421b90 <__flatcc_fb_clear_parser@@Base+0xef0>
  421b7b:	xor    edx,edx
  421b7d:	xor    esi,esi
  421b7f:	call   41b7e0 <fb_scope_table_find@@Base>
  421b84:	test   rax,rax
  421b87:	mov    r14,rax
  421b8a:	jne    421af0 <__flatcc_fb_clear_parser@@Base+0xe50>
  421b90:	mov    r12,QWORD PTR [rsp+0x28]
  421b95:	mov    rsi,QWORD PTR [r13+0x18]
  421b99:	lea    rdx,[rip+0x244f8]        # 446098 <fb_schema_table_missing@@Base+0x1448>
  421ba0:	mov    rcx,r13
  421ba3:	mov    rdi,rbx
  421ba6:	call   41de60 <error_ref_sym@@Base>
  421bab:	mov    eax,0x1
  421bb0:	mov    WORD PTR [r13+0x28],ax
  421bb5:	jmp    421507 <__flatcc_fb_clear_parser@@Base+0x867>
  421bba:	nop    WORD PTR [rax+rax*1+0x0]
  421bc0:	mov    r14,rax
  421bc3:	jmp    421af0 <__flatcc_fb_clear_parser@@Base+0xe50>
  421bc8:	mov    rsi,QWORD PTR [r13+0x8]
  421bcc:	lea    rdx,[rip+0x2444d]        # 446020 <fb_schema_table_missing@@Base+0x13d0>
  421bd3:	xor    r9d,r9d
  421bd6:	xor    r8d,r8d
  421bd9:	xor    ecx,ecx
  421bdb:	mov    rdi,rbx
  421bde:	call   41cab0 <__flatcc_error_report@@Base>
  421be3:	mov    eax,0xffffffff
  421be8:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421bed:	xor    eax,eax
  421bef:	mov    DWORD PTR [rsp+0x38],0x0
  421bf7:	mov    WORD PTR [r14+0xa4],ax
  421bff:	jmp    42145c <__flatcc_fb_clear_parser@@Base+0x7bc>
  421c04:	mov    rsi,QWORD PTR [r13+0x8]
  421c08:	lea    rdx,[rip+0x24571]        # 446180 <fb_schema_table_missing@@Base+0x1530>
  421c0f:	xor    r9d,r9d
  421c12:	xor    r8d,r8d
  421c15:	xor    ecx,ecx
  421c17:	mov    rdi,rbx
  421c1a:	call   41cab0 <__flatcc_error_report@@Base>
  421c1f:	mov    eax,0xffffffff
  421c24:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421c29:	cmp    QWORD PTR [rsp+0x40],0xffffffffffffffff
  421c2f:	jne    42176f <__flatcc_fb_clear_parser@@Base+0xacf>
  421c35:	mov    rsi,QWORD PTR [r13+0x8]
  421c39:	lea    rdx,[rip+0x254c5]        # 447105 <fb_schema_table_missing@@Base+0x24b5>
  421c40:	xor    r9d,r9d
  421c43:	xor    r8d,r8d
  421c46:	xor    ecx,ecx
  421c48:	mov    rdi,rbx
  421c4b:	call   41cab0 <__flatcc_error_report@@Base>
  421c50:	movzx  eax,WORD PTR [r13+0x58]
  421c55:	add    QWORD PTR [rsp+0x40],0x1
  421c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  421c60:	mov    r10d,DWORD PTR [rsp+0x38]
  421c65:	test   r10d,r10d
  421c68:	jne    421e52 <__flatcc_fb_clear_parser@@Base+0x11b2>
  421c6e:	test   ax,ax
  421c71:	je     421788 <__flatcc_fb_clear_parser@@Base+0xae8>
  421c77:	mov    rax,QWORD PTR [r13+0x48]
  421c7b:	mov    rcx,QWORD PTR [rsp+0x18]
  421c80:	mov    rsi,r13
  421c83:	mov    rdi,rbx
  421c86:	mov    QWORD PTR [rsp+0x40],rax
  421c8b:	mov    rax,QWORD PTR [r13+0x50]
  421c8f:	mov    QWORD PTR [rsp+0x48],rax
  421c94:	mov    rax,QWORD PTR [r13+0x58]
  421c98:	mov    QWORD PTR [rsp+0x50],rax
  421c9d:	mov    rax,QWORD PTR [rsp+0x10]
  421ca2:	mov    edx,DWORD PTR [rax+0x48]
  421ca5:	call   425900 <__flatcc_fb_coerce_scalar_type@@Base>
  421caa:	test   eax,eax
  421cac:	je     421788 <__flatcc_fb_clear_parser@@Base+0xae8>
  421cb2:	mov    eax,0xffffffff
  421cb7:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421cbc:	mov    rsi,QWORD PTR [r13+0x8]
  421cc0:	lea    rdx,[rip+0x245a1]        # 446268 <fb_schema_table_missing@@Base+0x1618>
  421cc7:	xor    r9d,r9d
  421cca:	xor    r8d,r8d
  421ccd:	xor    ecx,ecx
  421ccf:	mov    rdi,rbx
  421cd2:	call   41cab0 <__flatcc_error_report@@Base>
  421cd7:	mov    edx,0x1
  421cdc:	mov    eax,0xffffffff
  421ce1:	mov    WORD PTR [r13+0x58],dx
  421ce6:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421ceb:	cmp    ecx,0x1
  421cee:	cmovne rax,rsi
  421cf2:	test   r15,r15
  421cf5:	je     421b99 <__flatcc_fb_clear_parser@@Base+0xef9>
  421cfb:	mov    rdi,QWORD PTR [rbx+0x260]
  421d02:	test   rdi,rdi
  421d05:	je     421b99 <__flatcc_fb_clear_parser@@Base+0xef9>
  421d0b:	neg    edx
  421d0d:	mov    rsi,rax
  421d10:	movsxd rdx,edx
  421d13:	call   41b7e0 <fb_scope_table_find@@Base>
  421d18:	test   rax,rax
  421d1b:	je     421b95 <__flatcc_fb_clear_parser@@Base+0xef5>
  421d21:	mov    rcx,QWORD PTR [r14+0x8]
  421d25:	lea    rdi,[rax+0x8]
  421d29:	mov    rdx,QWORD PTR [rcx+0x8]
  421d2d:	mov    rsi,QWORD PTR [rcx]
  421d30:	call   41a830 <fb_symbol_table_find@@Base>
  421d35:	test   rax,rax
  421d38:	je     421b95 <__flatcc_fb_clear_parser@@Base+0xef5>
  421d3e:	cmp    WORD PTR [rax+0x10],0x4
  421d43:	ja     421b95 <__flatcc_fb_clear_parser@@Base+0xef5>
  421d49:	mov    rsi,QWORD PTR [rax+0x20]
  421d4d:	lea    rdi,[rbx+0x320]
  421d54:	mov    QWORD PTR [rsp+0x20],rax
  421d59:	call   41a0d0 <ptr_set_find_item@@Base>
  421d5e:	test   rax,rax
  421d61:	mov    rdx,QWORD PTR [rsp+0x20]
  421d66:	jne    421952 <__flatcc_fb_clear_parser@@Base+0xcb2>
  421d6c:	jmp    421b95 <__flatcc_fb_clear_parser@@Base+0xef5>
  421d71:	nop    DWORD PTR [rax+0x0]
  421d78:	mov    rcx,QWORD PTR [rdx+0x8]
  421d7c:	mov    rsi,QWORD PTR [r13+0x8]
  421d80:	lea    rdx,[rip+0x24341]        # 4460c8 <fb_schema_table_missing@@Base+0x1478>
  421d87:	xor    r9d,r9d
  421d8a:	xor    r8d,r8d
  421d8d:	mov    rdi,rbx
  421d90:	call   41cab0 <__flatcc_error_report@@Base>
  421d95:	mov    eax,0x1
  421d9a:	mov    WORD PTR [r13+0x28],ax
  421d9f:	jmp    421507 <__flatcc_fb_clear_parser@@Base+0x867>
  421da4:	cmp    eax,0x6
  421da7:	jne    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421dad:	cmp    WORD PTR [r15+0x20],0x6
  421db3:	je     4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421db9:	mov    rsi,QWORD PTR [r15+0x8]
  421dbd:	lea    rdx,[rip+0x241ec]        # 445fb0 <fb_schema_table_missing@@Base+0x1360>
  421dc4:	xor    r9d,r9d
  421dc7:	xor    r8d,r8d
  421dca:	xor    ecx,ecx
  421dcc:	mov    rdi,rbx
  421dcf:	call   41cab0 <__flatcc_error_report@@Base>
  421dd4:	jmp    4213a7 <__flatcc_fb_clear_parser@@Base+0x707>
  421dd9:	mov    rsi,QWORD PTR [rsi+0x8]
  421ddd:	lea    rdx,[rip+0x24034]        # 445e18 <fb_schema_table_missing@@Base+0x11c8>
  421de4:	xor    r9d,r9d
  421de7:	xor    r8d,r8d
  421dea:	xor    ecx,ecx
  421dec:	call   41cab0 <__flatcc_error_report@@Base>
  421df1:	mov    eax,0xffffffff
  421df6:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421dfb:	mov    rsi,QWORD PTR [r13+0x8]
  421dff:	lea    rdx,[rip+0x2430a]        # 446110 <fb_schema_table_missing@@Base+0x14c0>
  421e06:	xor    r9d,r9d
  421e09:	xor    r8d,r8d
  421e0c:	xor    ecx,ecx
  421e0e:	mov    rdi,rbx
  421e11:	call   41cab0 <__flatcc_error_report@@Base>
  421e16:	movzx  eax,WORD PTR [r13+0x58]
  421e1b:	mov    BYTE PTR [rsp+0x40],0x1
  421e20:	jmp    421c60 <__flatcc_fb_clear_parser@@Base+0xfc0>
  421e25:	mov    r10d,0x1
  421e2b:	lea    rdx,[rip+0x2525b]        # 44708d <fb_schema_table_missing@@Base+0x243d>
  421e32:	xor    r9d,r9d
  421e35:	mov    WORD PTR [rsi+0x58],r10w
  421e3a:	mov    rsi,QWORD PTR [rsi+0x8]
  421e3e:	xor    r8d,r8d
  421e41:	xor    ecx,ecx
  421e43:	call   41cab0 <__flatcc_error_report@@Base>
  421e48:	mov    eax,0xffffffff
  421e4d:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421e52:	test   ax,ax
  421e55:	je     42159e <__flatcc_fb_clear_parser@@Base+0x8fe>
  421e5b:	cmp    ax,0x5
  421e5f:	jne    421e81 <__flatcc_fb_clear_parser@@Base+0x11e1>
  421e61:	mov    rax,QWORD PTR [r13+0x48]
  421e65:	mov    QWORD PTR [rsp+0x40],rax
  421e6a:	mov    rax,QWORD PTR [r13+0x50]
  421e6e:	mov    QWORD PTR [rsp+0x48],rax
  421e73:	mov    rax,QWORD PTR [r13+0x58]
  421e77:	mov    QWORD PTR [rsp+0x50],rax
  421e7c:	jmp    42159e <__flatcc_fb_clear_parser@@Base+0x8fe>
  421e81:	mov    rsi,QWORD PTR [r13+0x8]
  421e85:	lea    rdx,[rip+0x242b4]        # 446140 <fb_schema_table_missing@@Base+0x14f0>
  421e8c:	xor    r9d,r9d
  421e8f:	xor    r8d,r8d
  421e92:	xor    ecx,ecx
  421e94:	mov    rdi,rbx
  421e97:	call   41cab0 <__flatcc_error_report@@Base>
  421e9c:	mov    eax,0xffffffff
  421ea1:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421ea6:	mov    rsi,QWORD PTR [r13+0x8]
  421eaa:	lea    rdx,[rip+0x25271]        # 447122 <fb_schema_table_missing@@Base+0x24d2>
  421eb1:	xor    r9d,r9d
  421eb4:	xor    r8d,r8d
  421eb7:	xor    ecx,ecx
  421eb9:	mov    rdi,rbx
  421ebc:	call   41cab0 <__flatcc_error_report@@Base>
  421ec1:	movzx  eax,WORD PTR [r13+0x58]
  421ec6:	add    QWORD PTR [rsp+0x40],0x1
  421ecc:	jmp    421c60 <__flatcc_fb_clear_parser@@Base+0xfc0>
  421ed1:	mov    rsi,QWORD PTR [r13+0x8]
  421ed5:	lea    rdx,[rip+0x2434c]        # 446228 <fb_schema_table_missing@@Base+0x15d8>
  421edc:	xor    ecx,ecx
  421ede:	xor    r9d,r9d
  421ee1:	xor    r8d,r8d
  421ee4:	mov    rdi,rbx
  421ee7:	call   41cab0 <__flatcc_error_report@@Base>
  421eec:	mov    ecx,0x1
  421ef1:	mov    eax,0xffffffff
  421ef6:	mov    WORD PTR [r13+0x58],cx
  421efb:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421f00:	lea    rdx,[rip+0x242b1]        # 4461b8 <fb_schema_table_missing@@Base+0x1568>
  421f07:	mov    rdi,rbx
  421f0a:	call   41cab0 <__flatcc_error_report@@Base>
  421f0f:	mov    edi,0x1
  421f14:	mov    eax,0xffffffff
  421f19:	mov    WORD PTR [r13+0x58],di
  421f1e:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421f23:	mov    rsi,QWORD PTR [rsi+0x8]
  421f27:	lea    rdx,[rip+0x23f22]        # 445e50 <fb_schema_table_missing@@Base+0x1200>
  421f2e:	xor    r9d,r9d
  421f31:	xor    r8d,r8d
  421f34:	xor    ecx,ecx
  421f36:	call   41cab0 <__flatcc_error_report@@Base>
  421f3b:	mov    eax,0xffffffff
  421f40:	jmp    4216ba <__flatcc_fb_clear_parser@@Base+0xa1a>
  421f45:	lea    rcx,[rip+0x254e4]        # 447430 <fb_schema_table_missing@@Base+0x27e0>
  421f4c:	lea    rsi,[rip+0x23cdd]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  421f53:	lea    rdi,[rip+0x25195]        # 4470ef <fb_schema_table_missing@@Base+0x249f>
  421f5a:	mov    edx,0x523
  421f5f:	call   4050f0 <__assert_fail@plt>
  421f64:	lea    rcx,[rip+0x254c5]        # 447430 <fb_schema_table_missing@@Base+0x27e0>
  421f6b:	lea    rsi,[rip+0x23cbe]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  421f72:	lea    rdi,[rip+0x250f6]        # 44706f <fb_schema_table_missing@@Base+0x241f>
  421f79:	mov    edx,0x4cd
  421f7e:	call   4050f0 <__assert_fail@plt>
  421f83:	call   4050d0 <__stack_chk_fail@plt>
  421f88:	nop    DWORD PTR [rax+rax*1+0x0]
  421f90:	push   r15
  421f92:	push   r14
  421f94:	push   r13
  421f96:	push   r12
  421f98:	push   rbp
  421f99:	push   rbx
  421f9a:	sub    rsp,0x168
  421fa1:	mov    rcx,QWORD PTR fs:0x28
  421faa:	mov    QWORD PTR [rsp+0x158],rcx
  421fb2:	xor    ecx,ecx
  421fb4:	cmp    WORD PTR [rsi+0x10],0x0
  421fb9:	mov    QWORD PTR [rsp+0x38],rsi
  421fbe:	jne    423d0d <__flatcc_fb_clear_parser@@Base+0x306d>
  421fc4:	mov    rax,QWORD PTR [rsp+0x38]
  421fc9:	cmp    WORD PTR [rax+0x58],0x0
  421fce:	jne    423c51 <__flatcc_fb_clear_parser@@Base+0x2fb1>
  421fd4:	mov    rax,QWORD PTR [rsp+0x38]
  421fd9:	lea    r15,[rsp+0x90]
  421fe1:	mov    r14,rdi
  421fe4:	mov    ecx,0xc
  421fe9:	xor    ebp,ebp
  421feb:	mov    rdi,r15
  421fee:	mov    QWORD PTR [rsp+0x10],r15
  421ff3:	mov    r13,QWORD PTR [rax+0x38]
  421ff7:	xor    eax,eax
  421ff9:	rep stos QWORD PTR es:[rdi],rax
  421ffc:	test   r13,r13
  421fff:	je     4220d4 <__flatcc_fb_clear_parser@@Base+0x1434>
  422005:	mov    ebx,0x64
  42200a:	lea    r12,[rip+0x2544f]        # 447460 <fb_schema_table_missing@@Base+0x2810>
  422011:	jmp    42205d <__flatcc_fb_clear_parser@@Base+0x13bd>
  422013:	nop    DWORD PTR [rax+rax*1+0x0]
  422018:	mov    edx,0x1
  42201d:	shlx   edx,edx,eax
  422022:	or     ebp,edx
  422024:	lea    rdx,[r15+rax*8]
  422028:	cmp    QWORD PTR [rdx],0x0
  42202c:	je     422580 <__flatcc_fb_clear_parser@@Base+0x18e0>
  422032:	mov    rsi,QWORD PTR [r13+0x8]
  422036:	lea    rdx,[rip+0x23ea3]        # 445ee0 <fb_schema_table_missing@@Base+0x1290>
  42203d:	xor    r9d,r9d
  422040:	xor    r8d,r8d
  422043:	xor    ecx,ecx
  422045:	mov    rdi,r14
  422048:	call   41cab0 <__flatcc_error_report@@Base>
  42204d:	mov    r13,QWORD PTR [r13+0x0]
  422051:	sub    ebx,0x1
  422054:	test   r13,r13
  422057:	je     4220b4 <__flatcc_fb_clear_parser@@Base+0x1414>
  422059:	test   ebx,ebx
  42205b:	je     4220b4 <__flatcc_fb_clear_parser@@Base+0x1414>
  42205d:	mov    rax,QWORD PTR [r13+0x8]
  422061:	mov    rcx,QWORD PTR [r14+0x260]
  422068:	mov    rdx,QWORD PTR [rax+0x8]
  42206c:	mov    rsi,QWORD PTR [rax]
  42206f:	lea    rdi,[rcx+0x20]
  422073:	call   42b250 <fb_name_table_find@@Base>
  422078:	test   rax,rax
  42207b:	je     42284b <__flatcc_fb_clear_parser@@Base+0x1bab>
  422081:	movsxd rax,DWORD PTR [rax+0x20]
  422085:	test   eax,eax
  422087:	je     42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  422089:	cmp    al,0x3
  42208b:	je     422018 <__flatcc_fb_clear_parser@@Base+0x1378>
  42208d:	mov    rsi,QWORD PTR [r13+0x8]
  422091:	lea    rdx,[rip+0x23e18]        # 445eb0 <fb_schema_table_missing@@Base+0x1260>
  422098:	xor    r9d,r9d
  42209b:	xor    r8d,r8d
  42209e:	xor    ecx,ecx
  4220a0:	mov    rdi,r14
  4220a3:	sub    ebx,0x1
  4220a6:	call   41cab0 <__flatcc_error_report@@Base>
  4220ab:	mov    r13,QWORD PTR [r13+0x0]
  4220af:	test   r13,r13
  4220b2:	jne    422059 <__flatcc_fb_clear_parser@@Base+0x13b9>
  4220b4:	test   r13,r13
  4220b7:	je     4220d4 <__flatcc_fb_clear_parser@@Base+0x1434>
  4220b9:	mov    rsi,QWORD PTR [r13+0x8]
  4220bd:	lea    rdx,[rip+0x24fdf]        # 4470a3 <fb_schema_table_missing@@Base+0x2453>
  4220c4:	xor    r9d,r9d
  4220c7:	xor    r8d,r8d
  4220ca:	xor    ecx,ecx
  4220cc:	mov    rdi,r14
  4220cf:	call   41cab0 <__flatcc_error_report@@Base>
  4220d4:	mov    rax,QWORD PTR [rsp+0x38]
  4220d9:	mov    r12,QWORD PTR [rax+0x28]
  4220dd:	mov    WORD PTR [rax+0xa4],bp
  4220e4:	test   r12,r12
  4220e7:	je     42379f <__flatcc_fb_clear_parser@@Base+0x2aff>
  4220ed:	add    rax,0x60
  4220f1:	mov    QWORD PTR [rsp+0x50],0x0
  4220fa:	mov    DWORD PTR [rsp+0x48],0x0
  422102:	mov    QWORD PTR [rsp+0x8],rax
  422107:	lea    rax,[r14+0x320]
  42210e:	mov    QWORD PTR [rsp+0x68],0x0
  422117:	mov    DWORD PTR [rsp+0x2c],0x0
  42211f:	mov    DWORD PTR [rsp+0x4c],0x0
  422127:	mov    QWORD PTR [rsp+0x40],rax
  42212c:	lea    rax,[r14+0x1f8]
  422133:	mov    QWORD PTR [rsp+0x30],0x0
  42213c:	mov    QWORD PTR [rsp+0x58],rax
  422141:	jmp    422173 <__flatcc_fb_clear_parser@@Base+0x14d3>
  422143:	nop    DWORD PTR [rax+rax*1+0x0]
  422148:	mov    rcx,QWORD PTR [rax+0x8]
  42214c:	mov    rsi,QWORD PTR [r12+0x8]
  422151:	lea    rdx,[rip+0x24398]        # 4464f0 <fb_schema_table_missing@@Base+0x18a0>
  422158:	xor    r9d,r9d
  42215b:	xor    r8d,r8d
  42215e:	mov    rdi,r14
  422161:	call   41cab0 <__flatcc_error_report@@Base>
  422166:	mov    r12,QWORD PTR [r12]
  42216a:	test   r12,r12
  42216d:	je     422788 <__flatcc_fb_clear_parser@@Base+0x1ae8>
  422173:	mov    rdi,QWORD PTR [rsp+0x8]
  422178:	mov    edx,0x1
  42217d:	mov    rsi,r12
  422180:	call   41a810 <fb_symbol_table_insert_item@@Base>
  422185:	test   rax,rax
  422188:	mov    rbp,rax
  42218b:	jne    422148 <__flatcc_fb_clear_parser@@Base+0x14a8>
  42218d:	cmp    WORD PTR [r12+0x10],0x5
  422194:	jne    423290 <__flatcc_fb_clear_parser@@Base+0x25f0>
  42219a:	movzx  eax,WORD PTR [r12+0x28]
  4221a0:	cmp    ax,0x1
  4221a4:	je     422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4221a6:	sub    eax,0x7
  4221a9:	cmp    ax,0x1
  4221ad:	jbe    4226b0 <__flatcc_fb_clear_parser@@Base+0x1a10>
  4221b3:	mov    r15,QWORD PTR [r12+0x60]
  4221b8:	mov    rdi,QWORD PTR [rsp+0x10]
  4221bd:	xor    eax,eax
  4221bf:	mov    ecx,0xc
  4221c4:	xor    ebx,ebx
  4221c6:	mov    r13d,0x64
  4221cc:	test   r15,r15
  4221cf:	rep stos QWORD PTR es:[rdi],rax
  4221d2:	je     42310b <__flatcc_fb_clear_parser@@Base+0x246b>
  4221d8:	mov    rax,r15
  4221db:	mov    r15,r12
  4221de:	mov    r12,rbp
  4221e1:	mov    rbp,rax
  4221e4:	jmp    42223c <__flatcc_fb_clear_parser@@Base+0x159c>
  4221e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4221f0:	mov    rcx,QWORD PTR [rsp+0x10]
  4221f5:	mov    edx,0x1
  4221fa:	shlx   edx,edx,eax
  4221ff:	or     ebx,edx
  422201:	lea    rdx,[rcx+rax*8]
  422205:	cmp    QWORD PTR [rdx],0x0
  422209:	je     4225c0 <__flatcc_fb_clear_parser@@Base+0x1920>
  42220f:	mov    rsi,QWORD PTR [rbp+0x8]
  422213:	lea    rdx,[rip+0x23cc6]        # 445ee0 <fb_schema_table_missing@@Base+0x1290>
  42221a:	xor    r9d,r9d
  42221d:	xor    r8d,r8d
  422220:	xor    ecx,ecx
  422222:	mov    rdi,r14
  422225:	call   41cab0 <__flatcc_error_report@@Base>
  42222a:	mov    rbp,QWORD PTR [rbp+0x0]
  42222e:	sub    r13d,0x1
  422232:	test   rbp,rbp
  422235:	je     4222a0 <__flatcc_fb_clear_parser@@Base+0x1600>
  422237:	test   r13d,r13d
  42223a:	je     4222a0 <__flatcc_fb_clear_parser@@Base+0x1600>
  42223c:	mov    rax,QWORD PTR [rbp+0x8]
  422240:	mov    rcx,QWORD PTR [r14+0x260]
  422247:	mov    rdx,QWORD PTR [rax+0x8]
  42224b:	mov    rsi,QWORD PTR [rax]
  42224e:	lea    rdi,[rcx+0x20]
  422252:	call   42b250 <fb_name_table_find@@Base>
  422257:	test   rax,rax
  42225a:	je     422660 <__flatcc_fb_clear_parser@@Base+0x19c0>
  422260:	movsxd rax,DWORD PTR [rax+0x20]
  422264:	test   eax,eax
  422266:	je     42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  422268:	mov    edx,0xfc6
  42226d:	bt     edx,eax
  422270:	jb     4221f0 <__flatcc_fb_clear_parser@@Base+0x1550>
  422276:	mov    rsi,QWORD PTR [rbp+0x8]
  42227a:	lea    rdx,[rip+0x23c2f]        # 445eb0 <fb_schema_table_missing@@Base+0x1260>
  422281:	xor    r9d,r9d
  422284:	xor    r8d,r8d
  422287:	xor    ecx,ecx
  422289:	mov    rdi,r14
  42228c:	sub    r13d,0x1
  422290:	call   41cab0 <__flatcc_error_report@@Base>
  422295:	mov    rbp,QWORD PTR [rbp+0x0]
  422299:	test   rbp,rbp
  42229c:	jne    422237 <__flatcc_fb_clear_parser@@Base+0x1597>
  42229e:	xchg   ax,ax
  4222a0:	mov    rax,rbp
  4222a3:	mov    rbp,r12
  4222a6:	mov    r12,r15
  4222a9:	test   rax,rax
  4222ac:	je     4222c9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4222ae:	mov    rsi,QWORD PTR [rax+0x8]
  4222b2:	lea    rdx,[rip+0x24dea]        # 4470a3 <fb_schema_table_missing@@Base+0x2453>
  4222b9:	xor    r9d,r9d
  4222bc:	xor    r8d,r8d
  4222bf:	xor    ecx,ecx
  4222c1:	mov    rdi,r14
  4222c4:	call   41cab0 <__flatcc_error_report@@Base>
  4222c9:	mov    r13,QWORD PTR [rsp+0xc0]
  4222d1:	mov    WORD PTR [r12+0x70],bx
  4222d7:	test   r13,r13
  4222da:	je     422440 <__flatcc_fb_clear_parser@@Base+0x17a0>
  4222e0:	cmp    DWORD PTR [r12+0x18],0x4
  4222e6:	jne    4230e5 <__flatcc_fb_clear_parser@@Base+0x2445>
  4222ec:	cmp    WORD PTR [r12+0x28],0x7
  4222f3:	jne    4230e5 <__flatcc_fb_clear_parser@@Base+0x2445>
  4222f9:	cmp    WORD PTR [r13+0x20],0x2
  4222ff:	jne    422440 <__flatcc_fb_clear_parser@@Base+0x17a0>
  422305:	mov    r9d,DWORD PTR [r13+0x18]
  422309:	mov    r8,QWORD PTR [r13+0x10]
  42230d:	test   r9d,r9d
  422310:	jle    42361a <__flatcc_fb_clear_parser@@Base+0x297a>
  422316:	lea    esi,[r9-0x1]
  42231a:	movsxd rcx,esi
  42231d:	cmp    BYTE PTR [r8+rcx*1],0x2e
  422322:	je     42362a <__flatcc_fb_clear_parser@@Base+0x298a>
  422328:	sub    rcx,0x1
  42232c:	mov    eax,esi
  42232e:	jmp    422346 <__flatcc_fb_clear_parser@@Base+0x16a6>
  422330:	lea    rdx,[rcx-0x1]
  422334:	sub    eax,0x1
  422337:	cmp    BYTE PTR [r8+rdx*1+0x1],0x2e
  42233d:	je     422709 <__flatcc_fb_clear_parser@@Base+0x1a69>
  422343:	mov    rcx,rdx
  422346:	test   eax,eax
  422348:	jne    422330 <__flatcc_fb_clear_parser@@Base+0x1690>
  42234a:	mov    r10d,r9d
  42234d:	mov    QWORD PTR [rsp+0x18],r8
  422352:	mov    rcx,QWORD PTR [rsp+0x38]
  422357:	test   eax,eax
  422359:	mov    rbx,QWORD PTR [rcx+0x18]
  42235d:	jne    422729 <__flatcc_fb_clear_parser@@Base+0x1a89>
  422363:	movsxd rcx,r10d
  422366:	test   rbx,rbx
  422369:	mov    QWORD PTR [rsp+0x20],rcx
  42236e:	je     422729 <__flatcc_fb_clear_parser@@Base+0x1a89>
  422374:	nop    DWORD PTR [rax+0x0]
  422378:	mov    rdx,QWORD PTR [rsp+0x20]
  42237d:	mov    rsi,QWORD PTR [rsp+0x18]
  422382:	lea    rdi,[rbx+0x8]
  422386:	call   41a830 <fb_symbol_table_find@@Base>
  42238b:	test   rax,rax
  42238e:	mov    r15,rax
  422391:	je     42239e <__flatcc_fb_clear_parser@@Base+0x16fe>
  422393:	cmp    WORD PTR [rax+0x10],0x4
  422398:	jbe    422600 <__flatcc_fb_clear_parser@@Base+0x1960>
  42239e:	mov    rax,QWORD PTR [rbx]
  4223a1:	test   rax,rax
  4223a4:	je     422413 <__flatcc_fb_clear_parser@@Base+0x1773>
  4223a6:	xor    edx,edx
  4223a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4223b0:	mov    rax,QWORD PTR [rax]
  4223b3:	add    edx,0x1
  4223b6:	test   rax,rax
  4223b9:	jne    4223b0 <__flatcc_fb_clear_parser@@Base+0x1710>
  4223bb:	mov    ecx,0x1
  4223c0:	mov    rdi,QWORD PTR [r14+0x260]
  4223c7:	sub    ecx,edx
  4223c9:	mov    r15d,ecx
  4223cc:	jmp    4223f4 <__flatcc_fb_clear_parser@@Base+0x1754>
  4223ce:	xchg   ax,ax
  4223d0:	test   rdi,rdi
  4223d3:	je     4223f0 <__flatcc_fb_clear_parser@@Base+0x1750>
  4223d5:	mov    rsi,QWORD PTR [rbx]
  4223d8:	movsxd rdx,r15d
  4223db:	call   41b7e0 <fb_scope_table_find@@Base>
  4223e0:	test   rax,rax
  4223e3:	jne    422650 <__flatcc_fb_clear_parser@@Base+0x19b0>
  4223e9:	mov    rdi,QWORD PTR [r14+0x260]
  4223f0:	add    r15d,0x1
  4223f4:	test   r15d,r15d
  4223f7:	jne    4223d0 <__flatcc_fb_clear_parser@@Base+0x1730>
  4223f9:	test   rdi,rdi
  4223fc:	je     422413 <__flatcc_fb_clear_parser@@Base+0x1773>
  4223fe:	xor    edx,edx
  422400:	xor    esi,esi
  422402:	call   41b7e0 <fb_scope_table_find@@Base>
  422407:	test   rax,rax
  42240a:	mov    rbx,rax
  42240d:	jne    422378 <__flatcc_fb_clear_parser@@Base+0x16d8>
  422413:	mov    r9d,DWORD PTR [r13+0x18]
  422417:	mov    r8,QWORD PTR [r13+0x10]
  42241b:	mov    rsi,QWORD PTR [r13+0x8]
  42241f:	lea    rdx,[rip+0x24d26]        # 44714c <fb_schema_table_missing@@Base+0x24fc>
  422426:	xor    ecx,ecx
  422428:	mov    rdi,r14
  42242b:	call   41cab0 <__flatcc_error_report@@Base>
  422430:	movzx  ebx,WORD PTR [r12+0x70]
  422436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422440:	test   bh,0x1
  422443:	je     422452 <__flatcc_fb_clear_parser@@Base+0x17b2>
  422445:	cmp    WORD PTR [r12+0x28],0x8
  42244c:	je     42323c <__flatcc_fb_clear_parser@@Base+0x259c>
  422452:	test   bh,0x4
  422455:	je     42248e <__flatcc_fb_clear_parser@@Base+0x17ee>
  422457:	cmp    WORD PTR [r12+0x28],0x7
  42245e:	jne    42246c <__flatcc_fb_clear_parser@@Base+0x17cc>
  422460:	cmp    DWORD PTR [r12+0x18],0x4
  422466:	je     423228 <__flatcc_fb_clear_parser@@Base+0x2588>
  42246c:	mov    rsi,QWORD PTR [r12+0x8]
  422471:	lea    rdx,[rip+0x241a8]        # 446620 <fb_schema_table_missing@@Base+0x19d0>
  422478:	xor    r9d,r9d
  42247b:	xor    r8d,r8d
  42247e:	xor    ecx,ecx
  422480:	mov    rdi,r14
  422483:	call   41cab0 <__flatcc_error_report@@Base>
  422488:	movzx  ebx,WORD PTR [r12+0x70]
  42248e:	test   bh,0x8
  422491:	je     4224c2 <__flatcc_fb_clear_parser@@Base+0x1822>
  422493:	cmp    WORD PTR [r12+0x28],0x7
  42249a:	je     422808 <__flatcc_fb_clear_parser@@Base+0x1b68>
  4224a0:	mov    rsi,QWORD PTR [r12+0x8]
  4224a5:	lea    rdx,[rip+0x241b4]        # 446660 <fb_schema_table_missing@@Base+0x1a10>
  4224ac:	xor    r9d,r9d
  4224af:	xor    r8d,r8d
  4224b2:	xor    ecx,ecx
  4224b4:	mov    rdi,r14
  4224b7:	call   41cab0 <__flatcc_error_report@@Base>
  4224bc:	movzx  ebx,WORD PTR [r12+0x70]
  4224c2:	and    bx,0xc00
  4224c7:	cmp    bx,0xc00
  4224cc:	je     42282a <__flatcc_fb_clear_parser@@Base+0x1b8a>
  4224d2:	mov    rax,QWORD PTR [rsp+0x98]
  4224da:	test   rax,rax
  4224dd:	mov    QWORD PTR [rsp+0x20],rax
  4224e2:	setne  BYTE PTR [rsp+0x18]
  4224e7:	cmp    QWORD PTR [rsp+0x30],0x0
  4224ed:	movzx  eax,BYTE PTR [rsp+0x18]
  4224f2:	jne    42251d <__flatcc_fb_clear_parser@@Base+0x187d>
  4224f4:	test   al,al
  4224f6:	je     42251d <__flatcc_fb_clear_parser@@Base+0x187d>
  4224f8:	mov    rax,QWORD PTR [r14+0xd8]
  4224ff:	mov    rdx,QWORD PTR [r14+0x148]
  422506:	xor    esi,esi
  422508:	mov    rdi,rax
  42250b:	mov    QWORD PTR [rsp+0x50],rax
  422510:	call   405100 <memset@plt>
  422515:	mov    DWORD PTR [rsp+0x4c],0x1
  42251d:	mov    esi,DWORD PTR [rsp+0x2c]
  422521:	test   esi,esi
  422523:	jne    422556 <__flatcc_fb_clear_parser@@Base+0x18b6>
  422525:	mov    rax,QWORD PTR [rsp+0x30]
  42252a:	cmp    QWORD PTR [r14+0x148],rax
  422531:	jbe    4230bc <__flatcc_fb_clear_parser@@Base+0x241c>
  422537:	mov    ebx,DWORD PTR [rsp+0x4c]
  42253b:	test   ebx,ebx
  42253d:	jne    422550 <__flatcc_fb_clear_parser@@Base+0x18b0>
  42253f:	movzx  eax,WORD PTR [rsp+0x30]
  422544:	mov    DWORD PTR [rsp+0x2c],ebx
  422548:	mov    QWORD PTR [r12+0x88],rax
  422550:	add    QWORD PTR [rsp+0x30],0x1
  422556:	movzx  eax,WORD PTR [r12+0x28]
  42255c:	sub    eax,0x7
  42255f:	cmp    ax,0x5
  422563:	ja     423090 <__flatcc_fb_clear_parser@@Base+0x23f0>
  422569:	lea    rdx,[rip+0x24d50]        # 4472c0 <fb_schema_table_missing@@Base+0x2670>
  422570:	movzx  eax,ax
  422573:	movsxd rax,DWORD PTR [rdx+rax*4]
  422577:	add    rax,rdx
  42257a:	jmp    rax
  42257c:	nop    DWORD PTR [rax+0x0]
  422580:	mov    eax,DWORD PTR [r12+rax*4]
  422584:	mov    QWORD PTR [rdx],r13
  422587:	test   eax,eax
  422589:	jne    42286b <__flatcc_fb_clear_parser@@Base+0x1bcb>
  42258f:	cmp    WORD PTR [r13+0x20],0x0
  422595:	je     42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  42259b:	mov    rsi,QWORD PTR [r13+0x8]
  42259f:	lea    rdx,[rip+0x23962]        # 445f08 <fb_schema_table_missing@@Base+0x12b8>
  4225a6:	xor    r9d,r9d
  4225a9:	xor    r8d,r8d
  4225ac:	xor    ecx,ecx
  4225ae:	mov    rdi,r14
  4225b1:	call   41cab0 <__flatcc_error_report@@Base>
  4225b6:	jmp    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4225bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4225c0:	lea    rcx,[rip+0x24e99]        # 447460 <fb_schema_table_missing@@Base+0x2810>
  4225c7:	mov    QWORD PTR [rdx],rbp
  4225ca:	mov    eax,DWORD PTR [rcx+rax*4]
  4225cd:	test   eax,eax
  4225cf:	jne    422680 <__flatcc_fb_clear_parser@@Base+0x19e0>
  4225d5:	cmp    WORD PTR [rbp+0x20],0x0
  4225da:	je     42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  4225e0:	mov    rsi,QWORD PTR [rbp+0x8]
  4225e4:	lea    rdx,[rip+0x2391d]        # 445f08 <fb_schema_table_missing@@Base+0x12b8>
  4225eb:	xor    r9d,r9d
  4225ee:	xor    r8d,r8d
  4225f1:	xor    ecx,ecx
  4225f3:	mov    rdi,r14
  4225f6:	call   41cab0 <__flatcc_error_report@@Base>
  4225fb:	jmp    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  422600:	mov    rsi,QWORD PTR [rax+0x20]
  422604:	mov    rdi,QWORD PTR [rsp+0x40]
  422609:	call   41a0d0 <ptr_set_find_item@@Base>
  42260e:	test   rax,rax
  422611:	je     42239e <__flatcc_fb_clear_parser@@Base+0x16fe>
  422617:	mov    rdx,r15
  42261a:	movzx  eax,WORD PTR [rdx+0x10]
  42261e:	test   ax,ax
  422621:	je     42263c <__flatcc_fb_clear_parser@@Base+0x199c>
  422623:	mov    edi,DWORD PTR [r14+0x11c]
  42262a:	test   edi,edi
  42262c:	je     423b5b <__flatcc_fb_clear_parser@@Base+0x2ebb>
  422632:	cmp    ax,0x1
  422636:	jne    423ad1 <__flatcc_fb_clear_parser@@Base+0x2e31>
  42263c:	mov    QWORD PTR [r12+0x90],rdx
  422644:	movzx  ebx,WORD PTR [r12+0x70]
  42264a:	jmp    422440 <__flatcc_fb_clear_parser@@Base+0x17a0>
  42264f:	nop
  422650:	mov    rbx,rax
  422653:	jmp    422378 <__flatcc_fb_clear_parser@@Base+0x16d8>
  422658:	nop    DWORD PTR [rax+rax*1+0x0]
  422660:	mov    rsi,QWORD PTR [rbp+0x8]
  422664:	lea    rdx,[rip+0x23825]        # 445e90 <fb_schema_table_missing@@Base+0x1240>
  42266b:	xor    r9d,r9d
  42266e:	xor    r8d,r8d
  422671:	xor    ecx,ecx
  422673:	mov    rdi,r14
  422676:	call   41cab0 <__flatcc_error_report@@Base>
  42267b:	jmp    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  422680:	cmp    eax,0x2
  422683:	jne    4226d5 <__flatcc_fb_clear_parser@@Base+0x1a35>
  422685:	cmp    WORD PTR [rbp+0x20],0x2
  42268a:	je     42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  422690:	mov    rsi,QWORD PTR [rbp+0x8]
  422694:	lea    rdx,[rip+0x23895]        # 445f30 <fb_schema_table_missing@@Base+0x12e0>
  42269b:	xor    r9d,r9d
  42269e:	xor    r8d,r8d
  4226a1:	xor    ecx,ecx
  4226a3:	mov    rdi,r14
  4226a6:	call   41cab0 <__flatcc_error_report@@Base>
  4226ab:	jmp    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  4226b0:	mov    rax,QWORD PTR [r12+0x18]
  4226b5:	xor    edx,edx
  4226b7:	mov    rax,QWORD PTR [rax+0x20]
  4226bb:	add    rax,0x3e7
  4226c1:	cmp    rax,0x1b
  4226c5:	jbe    422cc1 <__flatcc_fb_clear_parser@@Base+0x2021>
  4226cb:	mov    DWORD PTR [r12+0x18],edx
  4226d0:	jmp    4221b3 <__flatcc_fb_clear_parser@@Base+0x1513>
  4226d5:	cmp    eax,0x5
  4226d8:	jne    423417 <__flatcc_fb_clear_parser@@Base+0x2777>
  4226de:	cmp    WORD PTR [rbp+0x20],0x5
  4226e3:	je     42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  4226e9:	mov    rsi,QWORD PTR [rbp+0x8]
  4226ed:	lea    rdx,[rip+0x23864]        # 445f58 <fb_schema_table_missing@@Base+0x1308>
  4226f4:	xor    r9d,r9d
  4226f7:	xor    r8d,r8d
  4226fa:	xor    ecx,ecx
  4226fc:	mov    rdi,r14
  4226ff:	call   41cab0 <__flatcc_error_report@@Base>
  422704:	jmp    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  422709:	sub    esi,eax
  42270b:	mov    r10d,esi
  42270e:	lea    rbx,[r8+rcx*1+0x1]
  422713:	mov    rcx,QWORD PTR [rsp+0x38]
  422718:	test   eax,eax
  42271a:	mov    QWORD PTR [rsp+0x18],rbx
  42271f:	mov    rbx,QWORD PTR [rcx+0x18]
  422723:	je     422363 <__flatcc_fb_clear_parser@@Base+0x16c3>
  422729:	mov    rdi,QWORD PTR [r14+0x260]
  422730:	test   rdi,rdi
  422733:	je     42241b <__flatcc_fb_clear_parser@@Base+0x177b>
  422739:	test   eax,eax
  42273b:	mov    esi,0x0
  422740:	movsxd rdx,eax
  422743:	cmovne rsi,r8
  422747:	mov    DWORD PTR [rsp+0x20],r10d
  42274c:	call   41b7e0 <fb_scope_table_find@@Base>
  422751:	test   rax,rax
  422754:	mov    r10d,DWORD PTR [rsp+0x20]
  422759:	je     422413 <__flatcc_fb_clear_parser@@Base+0x1773>
  42275f:	mov    rsi,QWORD PTR [rsp+0x18]
  422764:	lea    rdi,[rax+0x8]
  422768:	movsxd rdx,r10d
  42276b:	call   41a830 <fb_symbol_table_find@@Base>
  422770:	test   rax,rax
  422773:	mov    rdx,rax
  422776:	jne    42261a <__flatcc_fb_clear_parser@@Base+0x197a>
  42277c:	jmp    422413 <__flatcc_fb_clear_parser@@Base+0x1773>
  422781:	nop    DWORD PTR [rax+0x0]
  422788:	mov    ebp,DWORD PTR [rsp+0x2c]
  42278c:	test   ebp,ebp
  42278e:	je     422cd5 <__flatcc_fb_clear_parser@@Base+0x2035>
  422794:	mov    ecx,DWORD PTR [rsp+0x48]
  422798:	test   ecx,ecx
  42279a:	je     423ac4 <__flatcc_fb_clear_parser@@Base+0x2e24>
  4227a0:	mov    rax,QWORD PTR [rsp+0x38]
  4227a5:	or     WORD PTR [rax+0x12],0x8
  4227aa:	cmp    DWORD PTR [rsp+0x48],0x1
  4227af:	je     423ac4 <__flatcc_fb_clear_parser@@Base+0x2e24>
  4227b5:	mov    r10d,DWORD PTR [r14+0x108]
  4227bc:	test   r10d,r10d
  4227bf:	je     422dc5 <__flatcc_fb_clear_parser@@Base+0x2125>
  4227c5:	mov    DWORD PTR [rsp+0x48],0x0
  4227cd:	mov    r9d,DWORD PTR [rsp+0x2c]
  4227d2:	test   r9d,r9d
  4227d5:	jne    423ac4 <__flatcc_fb_clear_parser@@Base+0x2e24>
  4227db:	mov    rbx,QWORD PTR [rsp+0x158]
  4227e3:	xor    rbx,QWORD PTR fs:0x28
  4227ec:	mov    eax,DWORD PTR [rsp+0x48]
  4227f0:	jne    423cd4 <__flatcc_fb_clear_parser@@Base+0x3034>
  4227f6:	add    rsp,0x168
  4227fd:	pop    rbx
  4227fe:	pop    rbp
  4227ff:	pop    r12
  422801:	pop    r13
  422803:	pop    r14
  422805:	pop    r15
  422807:	ret    
  422808:	cmp    DWORD PTR [r12+0x18],0x4
  42280e:	jne    4224a0 <__flatcc_fb_clear_parser@@Base+0x1800>
  422814:	movzx  ebx,WORD PTR [r12+0x70]
  42281a:	and    bx,0xc00
  42281f:	cmp    bx,0xc00
  422824:	jne    4224d2 <__flatcc_fb_clear_parser@@Base+0x1832>
  42282a:	mov    rsi,QWORD PTR [r12+0x8]
  42282f:	lea    rdx,[rip+0x23e6a]        # 4466a0 <fb_schema_table_missing@@Base+0x1a50>
  422836:	xor    r9d,r9d
  422839:	xor    r8d,r8d
  42283c:	xor    ecx,ecx
  42283e:	mov    rdi,r14
  422841:	call   41cab0 <__flatcc_error_report@@Base>
  422846:	jmp    4224d2 <__flatcc_fb_clear_parser@@Base+0x1832>
  42284b:	mov    rsi,QWORD PTR [r13+0x8]
  42284f:	lea    rdx,[rip+0x2363a]        # 445e90 <fb_schema_table_missing@@Base+0x1240>
  422856:	xor    r9d,r9d
  422859:	xor    r8d,r8d
  42285c:	xor    ecx,ecx
  42285e:	mov    rdi,r14
  422861:	call   41cab0 <__flatcc_error_report@@Base>
  422866:	jmp    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  42286b:	cmp    eax,0x2
  42286e:	je     422df2 <__flatcc_fb_clear_parser@@Base+0x2152>
  422874:	cmp    eax,0x5
  422877:	jne    4233c0 <__flatcc_fb_clear_parser@@Base+0x2720>
  42287d:	cmp    WORD PTR [r13+0x20],0x5
  422883:	je     42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  422889:	mov    rsi,QWORD PTR [r13+0x8]
  42288d:	lea    rdx,[rip+0x236c4]        # 445f58 <fb_schema_table_missing@@Base+0x1308>
  422894:	xor    r9d,r9d
  422897:	xor    r8d,r8d
  42289a:	xor    ecx,ecx
  42289c:	mov    rdi,r14
  42289f:	call   41cab0 <__flatcc_error_report@@Base>
  4228a4:	jmp    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4228a9:	mov    rsi,QWORD PTR [r12+0x18]
  4228ae:	mov    rax,QWORD PTR [rsp+0x38]
  4228b3:	test   rsi,rsi
  4228b6:	mov    rbx,QWORD PTR [rax+0x18]
  4228ba:	je     4229b6 <__flatcc_fb_clear_parser@@Base+0x1d16>
  4228c0:	mov    r13,rsi
  4228c3:	xor    edx,edx
  4228c5:	jmp    4228d5 <__flatcc_fb_clear_parser@@Base+0x1c35>
  4228c7:	nop    WORD PTR [rax+rax*1+0x0]
  4228d0:	mov    edx,ecx
  4228d2:	mov    r13,rax
  4228d5:	mov    rax,QWORD PTR [r13+0x0]
  4228d9:	lea    ecx,[rdx+0x1]
  4228dc:	test   rax,rax
  4228df:	jne    4228d0 <__flatcc_fb_clear_parser@@Base+0x1c30>
  4228e1:	test   rbx,rbx
  4228e4:	je     4231a3 <__flatcc_fb_clear_parser@@Base+0x2503>
  4228ea:	cmp    ecx,0x1
  4228ed:	jne    4231a3 <__flatcc_fb_clear_parser@@Base+0x2503>
  4228f3:	mov    rbp,QWORD PTR [rsp+0x58]
  4228f8:	mov    r15d,0x1
  4228fe:	mov    QWORD PTR [rsp+0x70],r12
  422903:	nop    DWORD PTR [rax+rax*1+0x0]
  422908:	mov    rax,QWORD PTR [r13+0x8]
  42290c:	lea    rdi,[rbx+0x8]
  422910:	mov    rdx,QWORD PTR [rax+0x8]
  422914:	mov    rsi,QWORD PTR [rax]
  422917:	call   41a830 <fb_symbol_table_find@@Base>
  42291c:	test   rax,rax
  42291f:	je     42292c <__flatcc_fb_clear_parser@@Base+0x1c8c>
  422921:	cmp    WORD PTR [rax+0x10],0x4
  422926:	jbe    422e60 <__flatcc_fb_clear_parser@@Base+0x21c0>
  42292c:	mov    rax,QWORD PTR [rbx]
  42292f:	test   rax,rax
  422932:	je     4229ac <__flatcc_fb_clear_parser@@Base+0x1d0c>
  422934:	xor    edx,edx
  422936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422940:	mov    rax,QWORD PTR [rax]
  422943:	add    edx,0x1
  422946:	test   rax,rax
  422949:	jne    422940 <__flatcc_fb_clear_parser@@Base+0x1ca0>
  42294b:	mov    r12d,r15d
  42294e:	sub    r12d,edx
  422951:	jmp    422981 <__flatcc_fb_clear_parser@@Base+0x1ce1>
  422953:	nop    DWORD PTR [rax+rax*1+0x0]
  422958:	test   rbp,rbp
  42295b:	je     42297d <__flatcc_fb_clear_parser@@Base+0x1cdd>
  42295d:	mov    rdi,QWORD PTR [r14+0x260]
  422964:	test   rdi,rdi
  422967:	je     42297d <__flatcc_fb_clear_parser@@Base+0x1cdd>
  422969:	mov    rsi,QWORD PTR [rbx]
  42296c:	movsxd rdx,r12d
  42296f:	call   41b7e0 <fb_scope_table_find@@Base>
  422974:	test   rax,rax
  422977:	jne    423088 <__flatcc_fb_clear_parser@@Base+0x23e8>
  42297d:	add    r12d,0x1
  422981:	test   r12d,r12d
  422984:	jne    422958 <__flatcc_fb_clear_parser@@Base+0x1cb8>
  422986:	test   rbp,rbp
  422989:	je     4229ac <__flatcc_fb_clear_parser@@Base+0x1d0c>
  42298b:	mov    rdi,QWORD PTR [r14+0x260]
  422992:	test   rdi,rdi
  422995:	je     4229ac <__flatcc_fb_clear_parser@@Base+0x1d0c>
  422997:	xor    edx,edx
  422999:	xor    esi,esi
  42299b:	call   41b7e0 <fb_scope_table_find@@Base>
  4229a0:	test   rax,rax
  4229a3:	mov    rbx,rax
  4229a6:	jne    422908 <__flatcc_fb_clear_parser@@Base+0x1c68>
  4229ac:	mov    r12,QWORD PTR [rsp+0x70]
  4229b1:	mov    rsi,QWORD PTR [r12+0x18]
  4229b6:	lea    rdx,[rip+0x23f93]        # 446950 <fb_schema_table_missing@@Base+0x1d00>
  4229bd:	mov    rcx,r12
  4229c0:	mov    rdi,r14
  4229c3:	call   41de60 <error_ref_sym@@Base>
  4229c8:	mov    esi,0x1
  4229cd:	mov    WORD PTR [r12+0x28],si
  4229d3:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4229d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4229e0:	cmp    WORD PTR [r12+0x58],0x0
  4229e7:	jne    423451 <__flatcc_fb_clear_parser@@Base+0x27b1>
  4229ed:	mov    ebx,DWORD PTR [r14+0x110]
  4229f4:	mov    eax,DWORD PTR [rsp+0x2c]
  4229f8:	test   eax,eax
  4229fa:	jne    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  422a00:	mov    eax,DWORD PTR [rsp+0x4c]
  422a04:	test   eax,eax
  422a06:	jne    422a13 <__flatcc_fb_clear_parser@@Base+0x1d73>
  422a08:	cmp    BYTE PTR [rsp+0x18],0x0
  422a0d:	jne    423263 <__flatcc_fb_clear_parser@@Base+0x25c3>
  422a13:	cmp    QWORD PTR [rsp+0x20],0x0
  422a19:	jne    422a29 <__flatcc_fb_clear_parser@@Base+0x1d89>
  422a1b:	mov    r15d,DWORD PTR [rsp+0x4c]
  422a20:	test   r15d,r15d
  422a23:	jne    4232ff <__flatcc_fb_clear_parser@@Base+0x265f>
  422a29:	mov    rax,QWORD PTR [rsp+0x20]
  422a2e:	test   rax,rax
  422a31:	je     4234dd <__flatcc_fb_clear_parser@@Base+0x283d>
  422a37:	movzx  eax,WORD PTR [rax+0x20]
  422a3b:	cmp    ax,0x5
  422a3f:	je     4234ab <__flatcc_fb_clear_parser@@Base+0x280b>
  422a45:	cmp    ax,0x4
  422a49:	mov    rax,QWORD PTR [rsp+0x20]
  422a4e:	mov    r9d,0x0
  422a54:	mov    r8d,0x0
  422a5a:	mov    ecx,0x0
  422a5f:	mov    rsi,QWORD PTR [rax+0x8]
  422a63:	je     4233fb <__flatcc_fb_clear_parser@@Base+0x275b>
  422a69:	lea    rdx,[rip+0x24719]        # 447189 <fb_schema_table_missing@@Base+0x2539>
  422a70:	mov    rdi,r14
  422a73:	call   41cab0 <__flatcc_error_report@@Base>
  422a78:	mov    DWORD PTR [rsp+0x2c],0x1
  422a80:	test   BYTE PTR [r12+0x70],0x80
  422a86:	je     422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422a8c:	add    DWORD PTR [rsp+0x48],0x1
  422a91:	test   ebx,ebx
  422a93:	jne    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422a99:	mov    rsi,QWORD PTR [r12+0x8]
  422a9e:	lea    rdx,[rip+0x24063]        # 446b08 <fb_schema_table_missing@@Base+0x1eb8>
  422aa5:	xor    r9d,r9d
  422aa8:	xor    r8d,r8d
  422aab:	xor    ecx,ecx
  422aad:	mov    rdi,r14
  422ab0:	call   41cab0 <__flatcc_error_report@@Base>
  422ab5:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422aba:	xor    ebx,ebx
  422abc:	cmp    WORD PTR [r12+0x58],0x0
  422ac3:	je     4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  422ac9:	mov    rsi,QWORD PTR [r12+0x8]
  422ace:	lea    rdx,[rip+0x23cb3]        # 446788 <fb_schema_table_missing@@Base+0x1b38>
  422ad5:	xor    r9d,r9d
  422ad8:	xor    r8d,r8d
  422adb:	xor    ecx,ecx
  422add:	mov    rdi,r14
  422ae0:	call   41cab0 <__flatcc_error_report@@Base>
  422ae5:	mov    eax,0x1
  422aea:	mov    WORD PTR [r12+0x28],ax
  422af0:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422af5:	movzx  eax,WORD PTR [r12+0x58]
  422afb:	cmp    ax,0xd
  422aff:	je     423634 <__flatcc_fb_clear_parser@@Base+0x2994>
  422b05:	test   ax,ax
  422b08:	jne    422b1e <__flatcc_fb_clear_parser@@Base+0x1e7e>
  422b0a:	mov    edx,0x5
  422b0f:	mov    QWORD PTR [r12+0x48],0x0
  422b18:	mov    WORD PTR [r12+0x58],dx
  422b1e:	mov    edx,DWORD PTR [r12+0x18]
  422b23:	lea    rcx,[r12+0x48]
  422b28:	mov    rsi,r12
  422b2b:	mov    rdi,r14
  422b2e:	call   425900 <__flatcc_fb_coerce_scalar_type@@Base>
  422b33:	test   eax,eax
  422b35:	jne    422ba8 <__flatcc_fb_clear_parser@@Base+0x1f08>
  422b37:	mov    edx,DWORD PTR [r12+0x18]
  422b3c:	lea    rax,[rip+0x248bd]        # 447400 <fb_schema_table_missing@@Base+0x27b0>
  422b43:	mov    ebx,0x1
  422b48:	movsxd rax,DWORD PTR [rax+rdx*4]
  422b4c:	mov    QWORD PTR [r12+0x80],rax
  422b54:	mov    WORD PTR [r12+0x72],ax
  422b5a:	jmp    4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  422b5f:	mov    edx,DWORD PTR [r12+0x18]
  422b64:	lea    rax,[rip+0x24895]        # 447400 <fb_schema_table_missing@@Base+0x27b0>
  422b6b:	xor    ebx,ebx
  422b6d:	cmp    WORD PTR [r12+0x58],0x0
  422b74:	movsxd rax,DWORD PTR [rax+rdx*4]
  422b78:	mov    QWORD PTR [r12+0x80],rax
  422b80:	mov    WORD PTR [r12+0x72],ax
  422b86:	je     4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  422b8c:	mov    rsi,QWORD PTR [r12+0x8]
  422b91:	lea    rdx,[rip+0x23b98]        # 446730 <fb_schema_table_missing@@Base+0x1ae0>
  422b98:	xor    r9d,r9d
  422b9b:	xor    r8d,r8d
  422b9e:	xor    ecx,ecx
  422ba0:	mov    rdi,r14
  422ba3:	call   41cab0 <__flatcc_error_report@@Base>
  422ba8:	mov    eax,0x1
  422bad:	mov    WORD PTR [r12+0x28],ax
  422bb3:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422bb8:	mov    r8,QWORD PTR [r12+0x18]
  422bbd:	mov    rax,QWORD PTR [rsp+0x38]
  422bc2:	test   r8,r8
  422bc5:	mov    rbx,QWORD PTR [rax+0x18]
  422bc9:	je     423176 <__flatcc_fb_clear_parser@@Base+0x24d6>
  422bcf:	mov    r13,r8
  422bd2:	xor    eax,eax
  422bd4:	jmp    422be5 <__flatcc_fb_clear_parser@@Base+0x1f45>
  422bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422be0:	mov    eax,edx
  422be2:	mov    r13,r15
  422be5:	mov    r15,QWORD PTR [r13+0x0]
  422be9:	lea    edx,[rax+0x1]
  422bec:	test   r15,r15
  422bef:	jne    422be0 <__flatcc_fb_clear_parser@@Base+0x1f40>
  422bf1:	test   rbx,rbx
  422bf4:	je     423118 <__flatcc_fb_clear_parser@@Base+0x2478>
  422bfa:	cmp    edx,0x1
  422bfd:	jne    423118 <__flatcc_fb_clear_parser@@Base+0x2478>
  422c03:	mov    rbp,QWORD PTR [rsp+0x58]
  422c08:	mov    QWORD PTR [rsp+0x70],r15
  422c0d:	nop    DWORD PTR [rax]
  422c10:	mov    rax,QWORD PTR [r13+0x8]
  422c14:	lea    rdi,[rbx+0x8]
  422c18:	mov    rdx,QWORD PTR [rax+0x8]
  422c1c:	mov    rsi,QWORD PTR [rax]
  422c1f:	call   41a830 <fb_symbol_table_find@@Base>
  422c24:	test   rax,rax
  422c27:	je     422c34 <__flatcc_fb_clear_parser@@Base+0x1f94>
  422c29:	cmp    WORD PTR [rax+0x10],0x4
  422c2e:	jbe    422f3f <__flatcc_fb_clear_parser@@Base+0x229f>
  422c34:	mov    rax,QWORD PTR [rbx]
  422c37:	test   rax,rax
  422c3a:	je     423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  422c40:	xor    edx,edx
  422c42:	nop    WORD PTR [rax+rax*1+0x0]
  422c48:	mov    rax,QWORD PTR [rax]
  422c4b:	add    edx,0x1
  422c4e:	test   rax,rax
  422c51:	jne    422c48 <__flatcc_fb_clear_parser@@Base+0x1fa8>
  422c53:	mov    r15d,0x1
  422c59:	sub    r15d,edx
  422c5c:	jmp    422c89 <__flatcc_fb_clear_parser@@Base+0x1fe9>
  422c5e:	xchg   ax,ax
  422c60:	test   rbp,rbp
  422c63:	je     422c85 <__flatcc_fb_clear_parser@@Base+0x1fe5>
  422c65:	mov    rdi,QWORD PTR [r14+0x260]
  422c6c:	test   rdi,rdi
  422c6f:	je     422c85 <__flatcc_fb_clear_parser@@Base+0x1fe5>
  422c71:	mov    rsi,QWORD PTR [rbx]
  422c74:	movsxd rdx,r15d
  422c77:	call   41b7e0 <fb_scope_table_find@@Base>
  422c7c:	test   rax,rax
  422c7f:	jne    423080 <__flatcc_fb_clear_parser@@Base+0x23e0>
  422c85:	add    r15d,0x1
  422c89:	test   r15d,r15d
  422c8c:	jne    422c60 <__flatcc_fb_clear_parser@@Base+0x1fc0>
  422c8e:	test   rbp,rbp
  422c91:	je     423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  422c97:	mov    rdi,QWORD PTR [r14+0x260]
  422c9e:	test   rdi,rdi
  422ca1:	je     423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  422ca7:	xor    edx,edx
  422ca9:	xor    esi,esi
  422cab:	call   41b7e0 <fb_scope_table_find@@Base>
  422cb0:	test   rax,rax
  422cb3:	mov    rbx,rax
  422cb6:	jne    422c10 <__flatcc_fb_clear_parser@@Base+0x1f70>
  422cbc:	jmp    423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  422cc1:	lea    rdx,[rip+0x24638]        # 447300 <fb_schema_table_missing@@Base+0x26b0>
  422cc8:	mov    edx,DWORD PTR [rdx+rax*4]
  422ccb:	mov    DWORD PTR [r12+0x18],edx
  422cd0:	jmp    4221b3 <__flatcc_fb_clear_parser@@Base+0x1513>
  422cd5:	mov    ebx,DWORD PTR [rsp+0x4c]
  422cd9:	mov    rcx,QWORD PTR [rsp+0x38]
  422cde:	mov    rax,QWORD PTR [rsp+0x30]
  422ce3:	test   ebx,ebx
  422ce5:	mov    QWORD PTR [rcx+0xa8],rax
  422cec:	je     423c70 <__flatcc_fb_clear_parser@@Base+0x2fd0>
  422cf2:	test   rax,rax
  422cf5:	je     422e1e <__flatcc_fb_clear_parser@@Base+0x217e>
  422cfb:	mov    rbp,QWORD PTR [rsp+0x68]
  422d00:	cmp    rax,rbp
  422d03:	ja     422e1e <__flatcc_fb_clear_parser@@Base+0x217e>
  422d09:	test   rbp,rbp
  422d0c:	je     422d8d <__flatcc_fb_clear_parser@@Base+0x20ed>
  422d0e:	mov    r13,QWORD PTR [rsp+0x50]
  422d13:	lea    rbx,[rsp+0xf0]
  422d1b:	mov    QWORD PTR [rsp+0x8],r14
  422d20:	mov    eax,0xa
  422d25:	mov    r14,r12
  422d28:	mov    r12,rcx
  422d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d30:	cmp    BYTE PTR [r13+r14*1+0x0],0x0
  422d36:	jne    422d7f <__flatcc_fb_clear_parser@@Base+0x20df>
  422d38:	test   eax,eax
  422d3a:	lea    r15d,[rax-0x1]
  422d3e:	je     423775 <__flatcc_fb_clear_parser@@Base+0x2ad5>
  422d44:	lea    rcx,[rip+0x23df5]        # 446b40 <fb_schema_table_missing@@Base+0x1ef0>
  422d4b:	mov    r8,r14
  422d4e:	mov    edx,0x64
  422d53:	mov    esi,0x1
  422d58:	mov    rdi,rbx
  422d5b:	xor    eax,eax
  422d5d:	call   405210 <__sprintf_chk@plt>
  422d62:	mov    rsi,QWORD PTR [r12+0x8]
  422d67:	mov    rdi,QWORD PTR [rsp+0x8]
  422d6c:	xor    r9d,r9d
  422d6f:	xor    r8d,r8d
  422d72:	xor    ecx,ecx
  422d74:	mov    rdx,rbx
  422d77:	call   41cab0 <__flatcc_error_report@@Base>
  422d7c:	mov    eax,r15d
  422d7f:	add    r14,0x1
  422d83:	cmp    rbp,r14
  422d86:	jne    422d30 <__flatcc_fb_clear_parser@@Base+0x2090>
  422d88:	mov    r14,QWORD PTR [rsp+0x8]
  422d8d:	mov    edi,DWORD PTR [rsp+0x48]
  422d91:	test   edi,edi
  422d93:	je     423ac4 <__flatcc_fb_clear_parser@@Base+0x2e24>
  422d99:	mov    rax,QWORD PTR [rsp+0x38]
  422d9e:	or     WORD PTR [rax+0x12],0x8
  422da3:	cmp    DWORD PTR [rsp+0x48],0x1
  422da8:	je     423ac4 <__flatcc_fb_clear_parser@@Base+0x2e24>
  422dae:	mov    edx,DWORD PTR [r14+0x108]
  422db5:	test   edx,edx
  422db7:	jne    423ac4 <__flatcc_fb_clear_parser@@Base+0x2e24>
  422dbd:	mov    DWORD PTR [rsp+0x2c],0x1
  422dc5:	mov    rax,QWORD PTR [rsp+0x38]
  422dca:	lea    rdx,[rip+0x23da7]        # 446b78 <fb_schema_table_missing@@Base+0x1f28>
  422dd1:	xor    r9d,r9d
  422dd4:	xor    r8d,r8d
  422dd7:	xor    ecx,ecx
  422dd9:	mov    rdi,r14
  422ddc:	mov    rsi,QWORD PTR [rax+0x8]
  422de0:	call   41cab0 <__flatcc_error_report@@Base>
  422de5:	mov    DWORD PTR [rsp+0x48],0xffffffff
  422ded:	jmp    4227cd <__flatcc_fb_clear_parser@@Base+0x1b2d>
  422df2:	cmp    WORD PTR [r13+0x20],0x2
  422df8:	je     42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  422dfe:	mov    rsi,QWORD PTR [r13+0x8]
  422e02:	lea    rdx,[rip+0x23127]        # 445f30 <fb_schema_table_missing@@Base+0x12e0>
  422e09:	xor    r9d,r9d
  422e0c:	xor    r8d,r8d
  422e0f:	xor    ecx,ecx
  422e11:	mov    rdi,r14
  422e14:	call   41cab0 <__flatcc_error_report@@Base>
  422e19:	jmp    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  422e1e:	mov    r8d,DWORD PTR [rsp+0x48]
  422e23:	test   r8d,r8d
  422e26:	je     4227db <__flatcc_fb_clear_parser@@Base+0x1b3b>
  422e2c:	mov    rax,QWORD PTR [rsp+0x38]
  422e31:	or     WORD PTR [rax+0x12],0x8
  422e36:	cmp    DWORD PTR [rsp+0x48],0x1
  422e3b:	je     423c93 <__flatcc_fb_clear_parser@@Base+0x2ff3>
  422e41:	mov    eax,DWORD PTR [r14+0x108]
  422e48:	test   eax,eax
  422e4a:	jne    423c93 <__flatcc_fb_clear_parser@@Base+0x2ff3>
  422e50:	mov    DWORD PTR [rsp+0x2c],0x0
  422e58:	jmp    422dc5 <__flatcc_fb_clear_parser@@Base+0x2125>
  422e5d:	nop    DWORD PTR [rax]
  422e60:	mov    rsi,QWORD PTR [rax+0x20]
  422e64:	mov    rdi,QWORD PTR [rsp+0x40]
  422e69:	mov    QWORD PTR [rsp+0x60],rax
  422e6e:	call   41a0d0 <ptr_set_find_item@@Base>
  422e73:	test   rax,rax
  422e76:	mov    rdx,QWORD PTR [rsp+0x60]
  422e7b:	je     42292c <__flatcc_fb_clear_parser@@Base+0x1c8c>
  422e81:	mov    r12,QWORD PTR [rsp+0x70]
  422e86:	mov    rbp,rdx
  422e89:	movzx  eax,WORD PTR [rbp+0x10]
  422e8d:	cmp    ax,0x4
  422e91:	ja     422f10 <__flatcc_fb_clear_parser@@Base+0x2270>
  422e93:	mov    edx,0x1
  422e98:	shlx   rax,rdx,rax
  422e9d:	test   al,0x1b
  422e9f:	je     422f10 <__flatcc_fb_clear_parser@@Base+0x2270>
  422ea1:	cmp    WORD PTR [r12+0x58],0x0
  422ea8:	jne    4235ee <__flatcc_fb_clear_parser@@Base+0x294e>
  422eae:	mov    eax,0xf
  422eb3:	mov    QWORD PTR [r12+0x18],rbp
  422eb8:	xor    ebx,ebx
  422eba:	mov    WORD PTR [r12+0x28],ax
  422ec0:	mov    rax,QWORD PTR [rbp+0xb8]
  422ec7:	cmp    WORD PTR [rbp+0x10],0x4
  422ecc:	mov    QWORD PTR [r12+0x80],rax
  422ed4:	movzx  eax,WORD PTR [rbp+0xb0]
  422edb:	mov    WORD PTR [r12+0x72],ax
  422ee1:	jne    4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  422ee7:	mov    eax,DWORD PTR [rsp+0x2c]
  422eeb:	test   eax,eax
  422eed:	je     423c10 <__flatcc_fb_clear_parser@@Base+0x2f70>
  422ef3:	test   BYTE PTR [r12+0x70],0x80
  422ef9:	je     422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422eff:	add    DWORD PTR [rsp+0x48],0x1
  422f04:	jmp    422a99 <__flatcc_fb_clear_parser@@Base+0x1df9>
  422f09:	nop    DWORD PTR [rax+0x0]
  422f10:	mov    rcx,QWORD PTR [r12+0x18]
  422f15:	mov    rsi,QWORD PTR [r12+0x8]
  422f1a:	lea    rdx,[rip+0x23a67]        # 446988 <fb_schema_table_missing@@Base+0x1d38>
  422f21:	xor    r9d,r9d
  422f24:	xor    r8d,r8d
  422f27:	mov    rdi,r14
  422f2a:	call   41cab0 <__flatcc_error_report@@Base>
  422f2f:	mov    ecx,0x1
  422f34:	mov    WORD PTR [r12+0x28],cx
  422f3a:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422f3f:	mov    rsi,QWORD PTR [rax+0x20]
  422f43:	mov    rdi,QWORD PTR [rsp+0x40]
  422f48:	mov    QWORD PTR [rsp+0x60],rax
  422f4d:	call   41a0d0 <ptr_set_find_item@@Base>
  422f52:	test   rax,rax
  422f55:	mov    rdx,QWORD PTR [rsp+0x60]
  422f5a:	je     422c34 <__flatcc_fb_clear_parser@@Base+0x1f94>
  422f60:	mov    r15,QWORD PTR [rsp+0x70]
  422f65:	mov    rbp,rdx
  422f68:	cmp    WORD PTR [rbp+0x10],0x4
  422f6d:	ja     42347d <__flatcc_fb_clear_parser@@Base+0x27dd>
  422f73:	movzx  eax,WORD PTR [rbp+0x10]
  422f77:	lea    rdx,[rip+0x2435a]        # 4472d8 <fb_schema_table_missing@@Base+0x2688>
  422f7e:	movsxd rax,DWORD PTR [rdx+rax*4]
  422f82:	add    rax,rdx
  422f85:	jmp    rax
  422f87:	xor    ebx,ebx
  422f89:	mov    eax,0xe
  422f8e:	mov    QWORD PTR [r12+0x18],rbp
  422f93:	test   BYTE PTR [rsp+0x2c],0x1
  422f98:	mov    WORD PTR [r12+0x28],ax
  422f9e:	mov    rax,QWORD PTR [rbp+0xb8]
  422fa5:	mov    QWORD PTR [r12+0x80],rax
  422fad:	movzx  eax,WORD PTR [rbp+0xb0]
  422fb4:	mov    WORD PTR [r12+0x72],ax
  422fba:	movzx  eax,WORD PTR [rbp+0x10]
  422fbe:	jne    422fe3 <__flatcc_fb_clear_parser@@Base+0x2343>
  422fc0:	cmp    ax,0x4
  422fc4:	jne    422fe3 <__flatcc_fb_clear_parser@@Base+0x2343>
  422fc6:	mov    r13d,DWORD PTR [rsp+0x4c]
  422fcb:	test   r13d,r13d
  422fce:	jne    422fdd <__flatcc_fb_clear_parser@@Base+0x233d>
  422fd0:	movzx  edx,WORD PTR [rsp+0x30]
  422fd5:	mov    QWORD PTR [r12+0x88],rdx
  422fdd:	add    QWORD PTR [rsp+0x30],0x1
  422fe3:	movzx  edx,WORD PTR [r12+0x58]
  422fe9:	test   dx,dx
  422fec:	je     423328 <__flatcc_fb_clear_parser@@Base+0x2688>
  422ff2:	cmp    ax,0x3
  422ff6:	jne    4235ee <__flatcc_fb_clear_parser@@Base+0x294e>
  422ffc:	cmp    dx,0xd
  423000:	je     423898 <__flatcc_fb_clear_parser@@Base+0x2bf8>
  423006:	lea    r13,[r12+0x48]
  42300b:	mov    edx,DWORD PTR [rbp+0x48]
  42300e:	mov    rsi,r12
  423011:	mov    rdi,r14
  423014:	mov    rcx,r13
  423017:	call   425900 <__flatcc_fb_coerce_scalar_type@@Base>
  42301c:	test   eax,eax
  42301e:	jne    422ba8 <__flatcc_fb_clear_parser@@Base+0x1f08>
  423024:	mov    r11d,DWORD PTR [r14+0x140]
  42302b:	test   r11d,r11d
  42302e:	je     4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423034:	mov    rax,QWORD PTR [r12+0x18]
  423039:	mov    rsi,r13
  42303c:	lea    rdi,[rax+0x80]
  423043:	call   42b9a0 <fb_value_set_find_item@@Base>
  423048:	test   rax,rax
  42304b:	jne    4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423051:	mov    rsi,QWORD PTR [r12+0x8]
  423056:	lea    rdx,[rip+0x2387b]        # 4468d8 <fb_schema_table_missing@@Base+0x1c88>
  42305d:	xor    r9d,r9d
  423060:	xor    r8d,r8d
  423063:	xor    ecx,ecx
  423065:	mov    rdi,r14
  423068:	call   41cab0 <__flatcc_error_report@@Base>
  42306d:	mov    r10d,0x1
  423073:	mov    WORD PTR [r12+0x28],r10w
  423079:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  42307e:	xchg   ax,ax
  423080:	mov    rbx,rax
  423083:	jmp    422c10 <__flatcc_fb_clear_parser@@Base+0x1f70>
  423088:	mov    rbx,rax
  42308b:	jmp    422908 <__flatcc_fb_clear_parser@@Base+0x1c68>
  423090:	mov    rsi,QWORD PTR [r12+0x8]
  423095:	lea    rdx,[rip+0x2393c]        # 4469d8 <fb_schema_table_missing@@Base+0x1d88>
  42309c:	xor    r9d,r9d
  42309f:	xor    r8d,r8d
  4230a2:	xor    ecx,ecx
  4230a4:	mov    rdi,r14
  4230a7:	call   41cab0 <__flatcc_error_report@@Base>
  4230ac:	mov    eax,0x1
  4230b1:	mov    WORD PTR [r12+0x28],ax
  4230b7:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4230bc:	mov    rsi,QWORD PTR [r12+0x8]
  4230c1:	lea    rdx,[rip+0x23610]        # 4466d8 <fb_schema_table_missing@@Base+0x1a88>
  4230c8:	xor    r9d,r9d
  4230cb:	xor    r8d,r8d
  4230ce:	xor    ecx,ecx
  4230d0:	mov    rdi,r14
  4230d3:	call   41cab0 <__flatcc_error_report@@Base>
  4230d8:	mov    DWORD PTR [rsp+0x2c],0x1
  4230e0:	jmp    422550 <__flatcc_fb_clear_parser@@Base+0x18b0>
  4230e5:	mov    rsi,QWORD PTR [r13+0x8]
  4230e9:	lea    rdx,[rip+0x23450]        # 446540 <fb_schema_table_missing@@Base+0x18f0>
  4230f0:	xor    r9d,r9d
  4230f3:	xor    r8d,r8d
  4230f6:	xor    ecx,ecx
  4230f8:	mov    rdi,r14
  4230fb:	call   41cab0 <__flatcc_error_report@@Base>
  423100:	movzx  ebx,WORD PTR [r12+0x70]
  423106:	jmp    422440 <__flatcc_fb_clear_parser@@Base+0x17a0>
  42310b:	xor    esi,esi
  42310d:	mov    WORD PTR [r12+0x70],si
  423113:	jmp    422452 <__flatcc_fb_clear_parser@@Base+0x17b2>
  423118:	cmp    edx,0x1
  42311b:	mov    edx,0x0
  423120:	mov    rsi,rdx
  423123:	cmovne rsi,r8
  423127:	cmp    QWORD PTR [rsp+0x58],0x0
  42312d:	je     423176 <__flatcc_fb_clear_parser@@Base+0x24d6>
  42312f:	mov    rdi,QWORD PTR [r14+0x260]
  423136:	test   rdi,rdi
  423139:	je     423176 <__flatcc_fb_clear_parser@@Base+0x24d6>
  42313b:	neg    eax
  42313d:	movsxd rdx,eax
  423140:	call   41b7e0 <fb_scope_table_find@@Base>
  423145:	test   rax,rax
  423148:	je     423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  42314a:	mov    rcx,QWORD PTR [r13+0x8]
  42314e:	lea    rdi,[rax+0x8]
  423152:	mov    rdx,QWORD PTR [rcx+0x8]
  423156:	mov    rsi,QWORD PTR [rcx]
  423159:	call   41a830 <fb_symbol_table_find@@Base>
  42315e:	test   rax,rax
  423161:	mov    rbp,rax
  423164:	je     423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423166:	cmp    WORD PTR [rax+0x10],0x4
  42316b:	jbe    423759 <__flatcc_fb_clear_parser@@Base+0x2ab9>
  423171:	mov    r8,QWORD PTR [r12+0x18]
  423176:	lea    rdx,[rip+0x2363b]        # 4467b8 <fb_schema_table_missing@@Base+0x1b68>
  42317d:	mov    rcx,r12
  423180:	mov    rsi,r8
  423183:	mov    rdi,r14
  423186:	call   41de60 <error_ref_sym@@Base>
  42318b:	mov    eax,0x1
  423190:	mov    DWORD PTR [rsp+0x2c],0x1
  423198:	mov    WORD PTR [r12+0x28],ax
  42319e:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4231a3:	cmp    ecx,0x1
  4231a6:	cmovne rax,rsi
  4231aa:	cmp    QWORD PTR [rsp+0x58],0x0
  4231b0:	je     4229b6 <__flatcc_fb_clear_parser@@Base+0x1d16>
  4231b6:	mov    rdi,QWORD PTR [r14+0x260]
  4231bd:	test   rdi,rdi
  4231c0:	je     4229b6 <__flatcc_fb_clear_parser@@Base+0x1d16>
  4231c6:	neg    edx
  4231c8:	mov    rsi,rax
  4231cb:	movsxd rdx,edx
  4231ce:	call   41b7e0 <fb_scope_table_find@@Base>
  4231d3:	test   rax,rax
  4231d6:	je     4229b1 <__flatcc_fb_clear_parser@@Base+0x1d11>
  4231dc:	mov    rcx,QWORD PTR [r13+0x8]
  4231e0:	lea    rdi,[rax+0x8]
  4231e4:	mov    rdx,QWORD PTR [rcx+0x8]
  4231e8:	mov    rsi,QWORD PTR [rcx]
  4231eb:	call   41a830 <fb_symbol_table_find@@Base>
  4231f0:	test   rax,rax
  4231f3:	mov    rbp,rax
  4231f6:	je     4229b1 <__flatcc_fb_clear_parser@@Base+0x1d11>
  4231fc:	cmp    WORD PTR [rax+0x10],0x4
  423201:	ja     4229b1 <__flatcc_fb_clear_parser@@Base+0x1d11>
  423207:	mov    rsi,QWORD PTR [rax+0x20]
  42320b:	mov    rdi,QWORD PTR [rsp+0x40]
  423210:	call   41a0d0 <ptr_set_find_item@@Base>
  423215:	test   rax,rax
  423218:	jne    422e89 <__flatcc_fb_clear_parser@@Base+0x21e9>
  42321e:	jmp    4229b1 <__flatcc_fb_clear_parser@@Base+0x1d11>
  423223:	nop    DWORD PTR [rax+rax*1+0x0]
  423228:	test   bh,0x8
  42322b:	je     4224c2 <__flatcc_fb_clear_parser@@Base+0x1822>
  423231:	movzx  ebx,WORD PTR [r12+0x70]
  423237:	jmp    42281a <__flatcc_fb_clear_parser@@Base+0x1b7a>
  42323c:	mov    rsi,QWORD PTR [r12+0x8]
  423241:	lea    rdx,[rip+0x233a0]        # 4465e8 <fb_schema_table_missing@@Base+0x1998>
  423248:	xor    r9d,r9d
  42324b:	xor    r8d,r8d
  42324e:	xor    ecx,ecx
  423250:	mov    rdi,r14
  423253:	call   41cab0 <__flatcc_error_report@@Base>
  423258:	movzx  ebx,WORD PTR [r12+0x70]
  42325e:	jmp    422452 <__flatcc_fb_clear_parser@@Base+0x17b2>
  423263:	mov    rax,QWORD PTR [rsp+0x20]
  423268:	lea    rdx,[rip+0x23791]        # 446a00 <fb_schema_table_missing@@Base+0x1db0>
  42326f:	xor    r9d,r9d
  423272:	xor    r8d,r8d
  423275:	xor    ecx,ecx
  423277:	mov    rdi,r14
  42327a:	mov    rsi,QWORD PTR [rax+0x8]
  42327e:	call   41cab0 <__flatcc_error_report@@Base>
  423283:	mov    DWORD PTR [rsp+0x2c],0x1
  42328b:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423290:	mov    rsi,QWORD PTR [r12+0x8]
  423295:	lea    rdx,[rip+0x2327c]        # 446518 <fb_schema_table_missing@@Base+0x18c8>
  42329c:	xor    r9d,r9d
  42329f:	xor    r8d,r8d
  4232a2:	xor    ecx,ecx
  4232a4:	mov    rdi,r14
  4232a7:	call   41cab0 <__flatcc_error_report@@Base>
  4232ac:	mov    DWORD PTR [rsp+0x48],0xffffffff
  4232b4:	jmp    4227db <__flatcc_fb_clear_parser@@Base+0x1b3b>
  4232b9:	mov    rcx,QWORD PTR [rbp+0x8]
  4232bd:	mov    rsi,QWORD PTR [r12+0x8]
  4232c2:	lea    rdx,[rip+0x23557]        # 446820 <fb_schema_table_missing@@Base+0x1bd0>
  4232c9:	xor    r9d,r9d
  4232cc:	xor    r8d,r8d
  4232cf:	mov    rdi,r14
  4232d2:	call   41cab0 <__flatcc_error_report@@Base>
  4232d7:	mov    eax,0x1
  4232dc:	mov    WORD PTR [r12+0x28],ax
  4232e2:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4232e7:	test   BYTE PTR [r12+0x71],0x1
  4232ed:	jne    423a63 <__flatcc_fb_clear_parser@@Base+0x2dc3>
  4232f3:	mov    ebx,DWORD PTR [r14+0x100]
  4232fa:	jmp    422f89 <__flatcc_fb_clear_parser@@Base+0x22e9>
  4232ff:	mov    rsi,QWORD PTR [r12+0x8]
  423304:	lea    rdx,[rip+0x23735]        # 446a40 <fb_schema_table_missing@@Base+0x1df0>
  42330b:	xor    r9d,r9d
  42330e:	xor    r8d,r8d
  423311:	xor    ecx,ecx
  423313:	mov    rdi,r14
  423316:	call   41cab0 <__flatcc_error_report@@Base>
  42331b:	mov    DWORD PTR [rsp+0x2c],0x1
  423323:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423328:	cmp    ax,0x3
  42332c:	jne    4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423332:	mov    r9d,0x5
  423338:	mov    QWORD PTR [r12+0x48],0x0
  423341:	lea    r13,[r12+0x48]
  423346:	mov    WORD PTR [r12+0x58],r9w
  42334c:	mov    edx,DWORD PTR [rbp+0x48]
  42334f:	mov    rsi,rbp
  423352:	mov    rcx,r13
  423355:	mov    rdi,r14
  423358:	call   425900 <__flatcc_fb_coerce_scalar_type@@Base>
  42335d:	test   eax,eax
  42335f:	jne    422ba8 <__flatcc_fb_clear_parser@@Base+0x1f08>
  423365:	mov    r8d,DWORD PTR [r14+0x140]
  42336c:	test   r8d,r8d
  42336f:	je     4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423375:	mov    rax,QWORD PTR [r12+0x18]
  42337a:	mov    rsi,r13
  42337d:	lea    rdi,[rax+0x80]
  423384:	call   42b9a0 <fb_value_set_find_item@@Base>
  423389:	test   rax,rax
  42338c:	jne    4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423392:	mov    rcx,QWORD PTR [rbp+0x8]
  423396:	mov    rsi,QWORD PTR [r12+0x8]
  42339b:	lea    rdx,[rip+0x23566]        # 446908 <fb_schema_table_missing@@Base+0x1cb8>
  4233a2:	mov    rdi,r14
  4233a5:	xor    r9d,r9d
  4233a8:	xor    r8d,r8d
  4233ab:	call   41cab0 <__flatcc_error_report@@Base>
  4233b0:	mov    edi,0x1
  4233b5:	mov    WORD PTR [r12+0x28],di
  4233bb:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4233c0:	cmp    eax,0x4
  4233c3:	jne    4239fb <__flatcc_fb_clear_parser@@Base+0x2d5b>
  4233c9:	movzx  eax,WORD PTR [r13+0x20]
  4233ce:	sub    eax,0x4
  4233d1:	cmp    ax,0x1
  4233d5:	jbe    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4233db:	mov    rsi,QWORD PTR [r13+0x8]
  4233df:	lea    rdx,[rip+0x22ba2]        # 445f88 <fb_schema_table_missing@@Base+0x1338>
  4233e6:	xor    r9d,r9d
  4233e9:	xor    r8d,r8d
  4233ec:	xor    ecx,ecx
  4233ee:	mov    rdi,r14
  4233f1:	call   41cab0 <__flatcc_error_report@@Base>
  4233f6:	jmp    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4233fb:	lea    rdx,[rip+0x2367e]        # 446a80 <fb_schema_table_missing@@Base+0x1e30>
  423402:	mov    rdi,r14
  423405:	call   41cab0 <__flatcc_error_report@@Base>
  42340a:	mov    DWORD PTR [rsp+0x2c],0x1
  423412:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423417:	cmp    eax,0x4
  42341a:	jne    423cd9 <__flatcc_fb_clear_parser@@Base+0x3039>
  423420:	movzx  eax,WORD PTR [rbp+0x20]
  423424:	sub    eax,0x4
  423427:	cmp    ax,0x1
  42342b:	jbe    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  423431:	mov    rsi,QWORD PTR [rbp+0x8]
  423435:	lea    rdx,[rip+0x22b4c]        # 445f88 <fb_schema_table_missing@@Base+0x1338>
  42343c:	xor    r9d,r9d
  42343f:	xor    r8d,r8d
  423442:	xor    ecx,ecx
  423444:	mov    rdi,r14
  423447:	call   41cab0 <__flatcc_error_report@@Base>
  42344c:	jmp    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  423451:	mov    rsi,QWORD PTR [r12+0x8]
  423456:	lea    rdx,[rip+0x23303]        # 446760 <fb_schema_table_missing@@Base+0x1b10>
  42345d:	xor    r9d,r9d
  423460:	xor    r8d,r8d
  423463:	xor    ecx,ecx
  423465:	mov    rdi,r14
  423468:	call   41cab0 <__flatcc_error_report@@Base>
  42346d:	mov    eax,0x1
  423472:	mov    WORD PTR [r12+0x28],ax
  423478:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  42347d:	mov    rcx,QWORD PTR [rbp+0x8]
  423481:	mov    rsi,QWORD PTR [r12+0x8]
  423486:	lea    rdx,[rip+0x233c3]        # 446850 <fb_schema_table_missing@@Base+0x1c00>
  42348d:	xor    r9d,r9d
  423490:	xor    r8d,r8d
  423493:	mov    rdi,r14
  423496:	call   41cab0 <__flatcc_error_report@@Base>
  42349b:	mov    eax,0x1
  4234a0:	mov    WORD PTR [r12+0x28],ax
  4234a6:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4234ab:	mov    rax,QWORD PTR [rsp+0x20]
  4234b0:	mov    rax,QWORD PTR [rax+0x10]
  4234b4:	cmp    rax,QWORD PTR [r14+0x148]
  4234bb:	jae    423a84 <__flatcc_fb_clear_parser@@Base+0x2de4>
  4234c1:	mov    rcx,QWORD PTR [rsp+0x68]
  4234c6:	movzx  eax,ax
  4234c9:	mov    QWORD PTR [r12+0x88],rax
  4234d1:	cmp    rcx,rax
  4234d4:	cmovae rax,rcx
  4234d8:	mov    QWORD PTR [rsp+0x68],rax
  4234dd:	mov    r13d,DWORD PTR [rsp+0x4c]
  4234e2:	test   r13d,r13d
  4234e5:	je     423ca0 <__flatcc_fb_clear_parser@@Base+0x3000>
  4234eb:	mov    rdx,QWORD PTR [rsp+0x50]
  4234f0:	add    rdx,QWORD PTR [r12+0x88]
  4234f8:	movzx  eax,BYTE PTR [rdx]
  4234fb:	cmp    al,0x2
  4234fd:	je     4235c1 <__flatcc_fb_clear_parser@@Base+0x2921>
  423503:	test   al,al
  423505:	jne    42359c <__flatcc_fb_clear_parser@@Base+0x28fc>
  42350b:	mov    BYTE PTR [rdx],0x1
  42350e:	test   rbp,rbp
  423511:	mov    DWORD PTR [rsp+0x2c],0x0
  423519:	je     422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  42351f:	cmp    WORD PTR [rbp+0x10],0x4
  423524:	jne    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  42352a:	mov    rdx,QWORD PTR [r12+0x88]
  423532:	movzx  eax,WORD PTR [r12+0x28]
  423538:	cmp    rdx,0x1
  42353c:	jbe    423aad <__flatcc_fb_clear_parser@@Base+0x2e0d>
  423542:	mov    rcx,QWORD PTR [rsp+0x50]
  423547:	lea    rdx,[rcx+rdx*1-0x1]
  42354c:	movzx  ecx,BYTE PTR [rdx]
  42354f:	cmp    cl,0x2
  423552:	je     423af9 <__flatcc_fb_clear_parser@@Base+0x2e59>
  423558:	test   cl,cl
  42355a:	je     4237bc <__flatcc_fb_clear_parser@@Base+0x2b1c>
  423560:	cmp    ax,0xb
  423564:	lea    rdx,[rip+0x22f35]        # 4464a0 <fb_schema_table_missing@@Base+0x1850>
  42356b:	lea    rax,[rip+0x22ed6]        # 446448 <fb_schema_table_missing@@Base+0x17f8>
  423572:	cmove  rdx,rax
  423576:	mov    rax,QWORD PTR [rsp+0x20]
  42357b:	xor    r9d,r9d
  42357e:	xor    r8d,r8d
  423581:	xor    ecx,ecx
  423583:	mov    rdi,r14
  423586:	mov    rsi,QWORD PTR [rax+0x8]
  42358a:	call   41cab0 <__flatcc_error_report@@Base>
  42358f:	mov    eax,DWORD PTR [rsp+0x4c]
  423593:	mov    DWORD PTR [rsp+0x2c],eax
  423597:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  42359c:	mov    rax,QWORD PTR [rsp+0x20]
  4235a1:	lea    rdx,[rip+0x23530]        # 446ad8 <fb_schema_table_missing@@Base+0x1e88>
  4235a8:	xor    r9d,r9d
  4235ab:	xor    r8d,r8d
  4235ae:	xor    ecx,ecx
  4235b0:	mov    rdi,r14
  4235b3:	mov    rsi,QWORD PTR [rax+0x8]
  4235b7:	call   41cab0 <__flatcc_error_report@@Base>
  4235bc:	jmp    42350e <__flatcc_fb_clear_parser@@Base+0x286e>
  4235c1:	mov    rax,QWORD PTR [rsp+0x20]
  4235c6:	lea    rdx,[rip+0x234d3]        # 446aa0 <fb_schema_table_missing@@Base+0x1e50>
  4235cd:	xor    r9d,r9d
  4235d0:	xor    r8d,r8d
  4235d3:	xor    ecx,ecx
  4235d5:	mov    rdi,r14
  4235d8:	mov    rsi,QWORD PTR [rax+0x8]
  4235dc:	call   41cab0 <__flatcc_error_report@@Base>
  4235e1:	mov    eax,DWORD PTR [rsp+0x4c]
  4235e5:	mov    DWORD PTR [rsp+0x2c],eax
  4235e9:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  4235ee:	mov    rsi,QWORD PTR [r12+0x8]
  4235f3:	lea    rdx,[rip+0x2327e]        # 446878 <fb_schema_table_missing@@Base+0x1c28>
  4235fa:	xor    r9d,r9d
  4235fd:	xor    r8d,r8d
  423600:	xor    ecx,ecx
  423602:	mov    rdi,r14
  423605:	call   41cab0 <__flatcc_error_report@@Base>
  42360a:	mov    edx,0x1
  42360f:	mov    WORD PTR [r12+0x28],dx
  423615:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  42361a:	mov    eax,r9d
  42361d:	mov    QWORD PTR [rsp+0x18],r8
  423622:	xor    r10d,r10d
  423625:	jmp    422352 <__flatcc_fb_clear_parser@@Base+0x16b2>
  42362a:	mov    eax,esi
  42362c:	xor    r10d,r10d
  42362f:	jmp    42270e <__flatcc_fb_clear_parser@@Base+0x1a6e>
  423634:	mov    rsi,QWORD PTR [r12+0x48]
  423639:	mov    rax,QWORD PTR [rsp+0x38]
  42363e:	test   rsi,rsi
  423641:	mov    rbx,QWORD PTR [rax+0x18]
  423645:	je     423c32 <__flatcc_fb_clear_parser@@Base+0x2f92>
  42364b:	mov    r13,rsi
  42364e:	xor    edi,edi
  423650:	xor    edx,edx
  423652:	jmp    42365c <__flatcc_fb_clear_parser@@Base+0x29bc>
  423654:	mov    rdi,r13
  423657:	mov    edx,ecx
  423659:	mov    r13,rax
  42365c:	mov    rax,QWORD PTR [r13+0x0]
  423660:	lea    ecx,[rdx+0x1]
  423663:	test   rax,rax
  423666:	jne    423654 <__flatcc_fb_clear_parser@@Base+0x29b4>
  423668:	test   rdi,rdi
  42366b:	mov    QWORD PTR [rsp+0x60],rdi
  423670:	je     423737 <__flatcc_fb_clear_parser@@Base+0x2a97>
  423676:	test   rbx,rbx
  423679:	je     4237c4 <__flatcc_fb_clear_parser@@Base+0x2b24>
  42367f:	cmp    edx,0x1
  423682:	jne    4237c4 <__flatcc_fb_clear_parser@@Base+0x2b24>
  423688:	mov    r15,QWORD PTR [rsp+0x58]
  42368d:	mov    QWORD PTR [rsp+0x70],rbp
  423692:	mov    rax,QWORD PTR [rsp+0x60]
  423697:	lea    rdi,[rbx+0x8]
  42369b:	mov    rax,QWORD PTR [rax+0x8]
  42369f:	mov    rdx,QWORD PTR [rax+0x8]
  4236a3:	mov    rsi,QWORD PTR [rax]
  4236a6:	call   41a830 <fb_symbol_table_find@@Base>
  4236ab:	test   rax,rax
  4236ae:	je     4236bb <__flatcc_fb_clear_parser@@Base+0x2a1b>
  4236b0:	cmp    WORD PTR [rax+0x10],0x4
  4236b5:	jbe    423a30 <__flatcc_fb_clear_parser@@Base+0x2d90>
  4236bb:	mov    rax,QWORD PTR [rbx]
  4236be:	test   rax,rax
  4236c1:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  4236c3:	xor    edx,edx
  4236c5:	nop    DWORD PTR [rax]
  4236c8:	mov    rax,QWORD PTR [rax]
  4236cb:	add    edx,0x1
  4236ce:	test   rax,rax
  4236d1:	jne    4236c8 <__flatcc_fb_clear_parser@@Base+0x2a28>
  4236d3:	mov    ebp,0x1
  4236d8:	sub    ebp,edx
  4236da:	jmp    423708 <__flatcc_fb_clear_parser@@Base+0x2a68>
  4236dc:	nop    DWORD PTR [rax+0x0]
  4236e0:	test   r15,r15
  4236e3:	je     423705 <__flatcc_fb_clear_parser@@Base+0x2a65>
  4236e5:	mov    rdi,QWORD PTR [r14+0x260]
  4236ec:	test   rdi,rdi
  4236ef:	je     423705 <__flatcc_fb_clear_parser@@Base+0x2a65>
  4236f1:	mov    rsi,QWORD PTR [rbx]
  4236f4:	movsxd rdx,ebp
  4236f7:	call   41b7e0 <fb_scope_table_find@@Base>
  4236fc:	test   rax,rax
  4236ff:	jne    423a5b <__flatcc_fb_clear_parser@@Base+0x2dbb>
  423705:	add    ebp,0x1
  423708:	test   ebp,ebp
  42370a:	jne    4236e0 <__flatcc_fb_clear_parser@@Base+0x2a40>
  42370c:	test   r15,r15
  42370f:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  423711:	mov    rdi,QWORD PTR [r14+0x260]
  423718:	test   rdi,rdi
  42371b:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  42371d:	xor    edx,edx
  42371f:	xor    esi,esi
  423721:	call   41b7e0 <fb_scope_table_find@@Base>
  423726:	test   rax,rax
  423729:	mov    rbx,rax
  42372c:	jne    423692 <__flatcc_fb_clear_parser@@Base+0x29f2>
  423732:	mov    rsi,QWORD PTR [r12+0x48]
  423737:	lea    rdx,[rip+0x22fba]        # 4466f8 <fb_schema_table_missing@@Base+0x1aa8>
  42373e:	mov    rcx,r12
  423741:	mov    rdi,r14
  423744:	call   41de60 <error_ref_sym@@Base>
  423749:	mov    ecx,0x1
  42374e:	mov    WORD PTR [r12+0x28],cx
  423754:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423759:	mov    rsi,QWORD PTR [rax+0x20]
  42375d:	mov    rdi,QWORD PTR [rsp+0x40]
  423762:	call   41a0d0 <ptr_set_find_item@@Base>
  423767:	test   rax,rax
  42376a:	jne    422f68 <__flatcc_fb_clear_parser@@Base+0x22c8>
  423770:	jmp    423171 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423775:	mov    rax,QWORD PTR [rsp+0x38]
  42377a:	mov    r14,QWORD PTR [rsp+0x8]
  42377f:	lea    rdx,[rip+0x23a1f]        # 4471a5 <fb_schema_table_missing@@Base+0x2555>
  423786:	xor    r9d,r9d
  423789:	xor    r8d,r8d
  42378c:	xor    ecx,ecx
  42378e:	mov    rsi,QWORD PTR [rax+0x8]
  423792:	mov    rdi,r14
  423795:	call   41cab0 <__flatcc_error_report@@Base>
  42379a:	jmp    422d8d <__flatcc_fb_clear_parser@@Base+0x20ed>
  42379f:	mov    rax,QWORD PTR [rsp+0x38]
  4237a4:	mov    DWORD PTR [rsp+0x48],0x0
  4237ac:	mov    QWORD PTR [rax+0xa8],0x0
  4237b7:	jmp    4227db <__flatcc_fb_clear_parser@@Base+0x1b3b>
  4237bc:	mov    BYTE PTR [rdx],0x2
  4237bf:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  4237c4:	cmp    edx,0x1
  4237c7:	cmovne rax,rsi
  4237cb:	cmp    QWORD PTR [rsp+0x58],0x0
  4237d1:	je     423737 <__flatcc_fb_clear_parser@@Base+0x2a97>
  4237d7:	mov    rdi,QWORD PTR [r14+0x260]
  4237de:	test   rdi,rdi
  4237e1:	je     423737 <__flatcc_fb_clear_parser@@Base+0x2a97>
  4237e7:	mov    ecx,0x1
  4237ec:	mov    rsi,rax
  4237ef:	sub    ecx,edx
  4237f1:	movsxd rdx,ecx
  4237f4:	call   41b7e0 <fb_scope_table_find@@Base>
  4237f9:	test   rax,rax
  4237fc:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  423802:	mov    rbx,QWORD PTR [rsp+0x60]
  423807:	lea    rdi,[rax+0x8]
  42380b:	mov    rcx,QWORD PTR [rbx+0x8]
  42380f:	mov    rdx,QWORD PTR [rcx+0x8]
  423813:	mov    rsi,QWORD PTR [rcx]
  423816:	call   41a830 <fb_symbol_table_find@@Base>
  42381b:	test   rax,rax
  42381e:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  423824:	cmp    WORD PTR [rax+0x10],0x4
  423829:	ja     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  42382f:	mov    rsi,QWORD PTR [rax+0x20]
  423833:	mov    rdi,QWORD PTR [rsp+0x40]
  423838:	mov    QWORD PTR [rsp+0x60],rax
  42383d:	call   41a0d0 <ptr_set_find_item@@Base>
  423842:	test   rax,rax
  423845:	mov    rcx,QWORD PTR [rsp+0x60]
  42384a:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  423850:	cmp    WORD PTR [rcx+0x10],0x3
  423855:	jne    423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  42385b:	mov    rax,QWORD PTR [r13+0x8]
  42385f:	lea    rdi,[rcx+0x60]
  423863:	mov    rdx,QWORD PTR [rax+0x8]
  423867:	mov    rsi,QWORD PTR [rax]
  42386a:	call   41a830 <fb_symbol_table_find@@Base>
  42386f:	test   rax,rax
  423872:	je     423732 <__flatcc_fb_clear_parser@@Base+0x2a92>
  423878:	mov    rdx,QWORD PTR [rax+0x48]
  42387c:	mov    QWORD PTR [r12+0x48],rdx
  423881:	mov    rdx,QWORD PTR [rax+0x50]
  423885:	mov    QWORD PTR [r12+0x50],rdx
  42388a:	mov    rax,QWORD PTR [rax+0x58]
  42388e:	mov    QWORD PTR [r12+0x58],rax
  423893:	jmp    422b05 <__flatcc_fb_clear_parser@@Base+0x1e65>
  423898:	mov    rax,QWORD PTR [r12+0x48]
  42389d:	mov    rcx,QWORD PTR [rsp+0x38]
  4238a2:	test   rax,rax
  4238a5:	mov    QWORD PTR [rsp+0x78],rax
  4238aa:	mov    r13,QWORD PTR [rcx+0x18]
  4238ae:	je     423c32 <__flatcc_fb_clear_parser@@Base+0x2f92>
  4238b4:	mov    rdx,rax
  4238b7:	xor    eax,eax
  4238b9:	jmp    4238c3 <__flatcc_fb_clear_parser@@Base+0x2c23>
  4238bb:	mov    r15,rdx
  4238be:	mov    eax,ecx
  4238c0:	mov    rdx,rsi
  4238c3:	mov    rsi,QWORD PTR [rdx]
  4238c6:	lea    ecx,[rax+0x1]
  4238c9:	test   rsi,rsi
  4238cc:	jne    4238bb <__flatcc_fb_clear_parser@@Base+0x2c1b>
  4238ce:	test   r15,r15
  4238d1:	mov    QWORD PTR [rsp+0x80],rdx
  4238d9:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  4238df:	test   r13,r13
  4238e2:	je     423b83 <__flatcc_fb_clear_parser@@Base+0x2ee3>
  4238e8:	cmp    eax,0x1
  4238eb:	jne    423b83 <__flatcc_fb_clear_parser@@Base+0x2ee3>
  4238f1:	mov    QWORD PTR [rsp+0x60],rbp
  4238f6:	mov    rbp,QWORD PTR [rsp+0x58]
  4238fb:	mov    DWORD PTR [rsp+0x70],ebx
  4238ff:	mov    rax,QWORD PTR [r15+0x8]
  423903:	lea    rdi,[r13+0x8]
  423907:	mov    rdx,QWORD PTR [rax+0x8]
  42390b:	mov    rsi,QWORD PTR [rax]
  42390e:	call   41a830 <fb_symbol_table_find@@Base>
  423913:	test   rax,rax
  423916:	je     423923 <__flatcc_fb_clear_parser@@Base+0x2c83>
  423918:	cmp    WORD PTR [rax+0x10],0x4
  42391d:	jbe    423b18 <__flatcc_fb_clear_parser@@Base+0x2e78>
  423923:	mov    rax,QWORD PTR [r13+0x0]
  423927:	test   rax,rax
  42392a:	je     42399b <__flatcc_fb_clear_parser@@Base+0x2cfb>
  42392c:	xor    edx,edx
  42392e:	mov    rax,QWORD PTR [rax]
  423931:	add    edx,0x1
  423934:	test   rax,rax
  423937:	jne    42392e <__flatcc_fb_clear_parser@@Base+0x2c8e>
  423939:	mov    ecx,0x1
  42393e:	mov    ebx,ecx
  423940:	sub    ebx,edx
  423942:	jmp    423971 <__flatcc_fb_clear_parser@@Base+0x2cd1>
  423944:	nop    DWORD PTR [rax+0x0]
  423948:	test   rbp,rbp
  42394b:	je     42396e <__flatcc_fb_clear_parser@@Base+0x2cce>
  42394d:	mov    rdi,QWORD PTR [r14+0x260]
  423954:	test   rdi,rdi
  423957:	je     42396e <__flatcc_fb_clear_parser@@Base+0x2cce>
  423959:	mov    rsi,QWORD PTR [r13+0x0]
  42395d:	movsxd rdx,ebx
  423960:	call   41b7e0 <fb_scope_table_find@@Base>
  423965:	test   rax,rax
  423968:	jne    423b10 <__flatcc_fb_clear_parser@@Base+0x2e70>
  42396e:	add    ebx,0x1
  423971:	test   ebx,ebx
  423973:	jne    423948 <__flatcc_fb_clear_parser@@Base+0x2ca8>
  423975:	test   rbp,rbp
  423978:	je     42399b <__flatcc_fb_clear_parser@@Base+0x2cfb>
  42397a:	mov    rdi,QWORD PTR [r14+0x260]
  423981:	test   rdi,rdi
  423984:	je     42399b <__flatcc_fb_clear_parser@@Base+0x2cfb>
  423986:	xor    edx,edx
  423988:	xor    esi,esi
  42398a:	call   41b7e0 <fb_scope_table_find@@Base>
  42398f:	test   rax,rax
  423992:	mov    r13,rax
  423995:	jne    4238ff <__flatcc_fb_clear_parser@@Base+0x2c5f>
  42399b:	mov    rbp,QWORD PTR [rsp+0x60]
  4239a0:	mov    ebx,DWORD PTR [rsp+0x70]
  4239a4:	mov    rax,QWORD PTR [rsp+0x78]
  4239a9:	cmp    QWORD PTR [rax],0x0
  4239ad:	jne    423cad <__flatcc_fb_clear_parser@@Base+0x300d>
  4239b3:	mov    rax,rbp
  4239b6:	mov    rcx,QWORD PTR [rsp+0x80]
  4239be:	lea    rdi,[rax+0x60]
  4239c2:	mov    rcx,QWORD PTR [rcx+0x8]
  4239c6:	mov    rdx,QWORD PTR [rcx+0x8]
  4239ca:	mov    rsi,QWORD PTR [rcx]
  4239cd:	call   41a830 <fb_symbol_table_find@@Base>
  4239d2:	test   rax,rax
  4239d5:	je     423cad <__flatcc_fb_clear_parser@@Base+0x300d>
  4239db:	mov    rdx,QWORD PTR [rax+0x48]
  4239df:	mov    QWORD PTR [r12+0x48],rdx
  4239e4:	mov    rdx,QWORD PTR [rax+0x50]
  4239e8:	mov    QWORD PTR [r12+0x50],rdx
  4239ed:	mov    rax,QWORD PTR [rax+0x58]
  4239f1:	mov    QWORD PTR [r12+0x58],rax
  4239f6:	jmp    4229f4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  4239fb:	cmp    eax,0x6
  4239fe:	jne    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423a04:	cmp    WORD PTR [r13+0x20],0x6
  423a0a:	je     42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423a10:	mov    rsi,QWORD PTR [r13+0x8]
  423a14:	lea    rdx,[rip+0x22595]        # 445fb0 <fb_schema_table_missing@@Base+0x1360>
  423a1b:	xor    r9d,r9d
  423a1e:	xor    r8d,r8d
  423a21:	xor    ecx,ecx
  423a23:	mov    rdi,r14
  423a26:	call   41cab0 <__flatcc_error_report@@Base>
  423a2b:	jmp    42204d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423a30:	mov    rsi,QWORD PTR [rax+0x20]
  423a34:	mov    rdi,QWORD PTR [rsp+0x40]
  423a39:	mov    QWORD PTR [rsp+0x78],rax
  423a3e:	call   41a0d0 <ptr_set_find_item@@Base>
  423a43:	test   rax,rax
  423a46:	mov    rcx,QWORD PTR [rsp+0x78]
  423a4b:	je     4236bb <__flatcc_fb_clear_parser@@Base+0x2a1b>
  423a51:	mov    rbp,QWORD PTR [rsp+0x70]
  423a56:	jmp    423850 <__flatcc_fb_clear_parser@@Base+0x2bb0>
  423a5b:	mov    rbx,rax
  423a5e:	jmp    423692 <__flatcc_fb_clear_parser@@Base+0x29f2>
  423a63:	mov    rsi,QWORD PTR [r12+0x8]
  423a68:	lea    rdx,[rip+0x22d79]        # 4467e8 <fb_schema_table_missing@@Base+0x1b98>
  423a6f:	xor    r9d,r9d
  423a72:	xor    r8d,r8d
  423a75:	xor    ecx,ecx
  423a77:	mov    rdi,r14
  423a7a:	call   41cab0 <__flatcc_error_report@@Base>
  423a7f:	jmp    4232f3 <__flatcc_fb_clear_parser@@Base+0x2653>
  423a84:	mov    rsi,QWORD PTR [r12+0x8]
  423a89:	lea    rdx,[rip+0x236db]        # 44716b <fb_schema_table_missing@@Base+0x251b>
  423a90:	xor    r9d,r9d
  423a93:	xor    r8d,r8d
  423a96:	xor    ecx,ecx
  423a98:	mov    rdi,r14
  423a9b:	call   41cab0 <__flatcc_error_report@@Base>
  423aa0:	mov    DWORD PTR [rsp+0x2c],0x1
  423aa8:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423aad:	cmp    ax,0xb
  423ab1:	lea    rdx,[rip+0x22878]        # 446330 <fb_schema_table_missing@@Base+0x16e0>
  423ab8:	lea    rax,[rip+0x22821]        # 4462e0 <fb_schema_table_missing@@Base+0x1690>
  423abf:	jmp    423572 <__flatcc_fb_clear_parser@@Base+0x28d2>
  423ac4:	mov    DWORD PTR [rsp+0x48],0xffffffff
  423acc:	jmp    4227db <__flatcc_fb_clear_parser@@Base+0x1b3b>
  423ad1:	mov    rcx,QWORD PTR [rdx+0x8]
  423ad5:	mov    rsi,QWORD PTR [r13+0x8]
  423ad9:	lea    rdx,[rip+0x22ad0]        # 4465b0 <fb_schema_table_missing@@Base+0x1960>
  423ae0:	xor    r9d,r9d
  423ae3:	xor    r8d,r8d
  423ae6:	mov    rdi,r14
  423ae9:	call   41cab0 <__flatcc_error_report@@Base>
  423aee:	movzx  ebx,WORD PTR [r12+0x70]
  423af4:	jmp    422440 <__flatcc_fb_clear_parser@@Base+0x17a0>
  423af9:	cmp    ax,0xb
  423afd:	lea    rdx,[rip+0x228e4]        # 4463e8 <fb_schema_table_missing@@Base+0x1798>
  423b04:	lea    rax,[rip+0x22875]        # 446380 <fb_schema_table_missing@@Base+0x1730>
  423b0b:	jmp    423572 <__flatcc_fb_clear_parser@@Base+0x28d2>
  423b10:	mov    r13,rax
  423b13:	jmp    4238ff <__flatcc_fb_clear_parser@@Base+0x2c5f>
  423b18:	mov    rsi,QWORD PTR [rax+0x20]
  423b1c:	mov    rdi,QWORD PTR [rsp+0x40]
  423b21:	mov    QWORD PTR [rsp+0x88],rax
  423b29:	call   41a0d0 <ptr_set_find_item@@Base>
  423b2e:	test   rax,rax
  423b31:	mov    rdx,QWORD PTR [rsp+0x88]
  423b39:	je     423923 <__flatcc_fb_clear_parser@@Base+0x2c83>
  423b3f:	mov    rbp,QWORD PTR [rsp+0x60]
  423b44:	mov    ebx,DWORD PTR [rsp+0x70]
  423b48:	cmp    WORD PTR [rdx+0x10],0x3
  423b4d:	jne    4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423b53:	mov    rax,rdx
  423b56:	jmp    4239b6 <__flatcc_fb_clear_parser@@Base+0x2d16>
  423b5b:	mov    rcx,QWORD PTR [rdx+0x8]
  423b5f:	mov    rsi,QWORD PTR [r13+0x8]
  423b63:	lea    rdx,[rip+0x22a16]        # 446580 <fb_schema_table_missing@@Base+0x1930>
  423b6a:	xor    r9d,r9d
  423b6d:	xor    r8d,r8d
  423b70:	mov    rdi,r14
  423b73:	call   41cab0 <__flatcc_error_report@@Base>
  423b78:	movzx  ebx,WORD PTR [r12+0x70]
  423b7e:	jmp    422440 <__flatcc_fb_clear_parser@@Base+0x17a0>
  423b83:	cmp    eax,0x1
  423b86:	cmovne rsi,QWORD PTR [rsp+0x78]
  423b8c:	cmp    QWORD PTR [rsp+0x58],0x0
  423b92:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423b98:	mov    rdi,QWORD PTR [r14+0x260]
  423b9f:	test   rdi,rdi
  423ba2:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423ba8:	mov    edx,0x1
  423bad:	sub    edx,eax
  423baf:	movsxd rdx,edx
  423bb2:	call   41b7e0 <fb_scope_table_find@@Base>
  423bb7:	test   rax,rax
  423bba:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423bc0:	mov    rcx,QWORD PTR [r15+0x8]
  423bc4:	lea    rdi,[rax+0x8]
  423bc8:	mov    rdx,QWORD PTR [rcx+0x8]
  423bcc:	mov    rsi,QWORD PTR [rcx]
  423bcf:	call   41a830 <fb_symbol_table_find@@Base>
  423bd4:	test   rax,rax
  423bd7:	je     4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423bdd:	cmp    WORD PTR [rax+0x10],0x4
  423be2:	ja     4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423be8:	mov    rsi,QWORD PTR [rax+0x20]
  423bec:	mov    rdi,QWORD PTR [rsp+0x40]
  423bf1:	mov    QWORD PTR [rsp+0x60],rax
  423bf6:	call   41a0d0 <ptr_set_find_item@@Base>
  423bfb:	test   rax,rax
  423bfe:	mov    rdx,QWORD PTR [rsp+0x60]
  423c03:	jne    423b48 <__flatcc_fb_clear_parser@@Base+0x2ea8>
  423c09:	jmp    4239a4 <__flatcc_fb_clear_parser@@Base+0x2d04>
  423c0e:	xchg   ax,ax
  423c10:	mov    eax,DWORD PTR [rsp+0x4c]
  423c14:	test   eax,eax
  423c16:	jne    423c25 <__flatcc_fb_clear_parser@@Base+0x2f85>
  423c18:	movzx  eax,WORD PTR [rsp+0x30]
  423c1d:	mov    QWORD PTR [r12+0x88],rax
  423c25:	add    QWORD PTR [rsp+0x30],0x1
  423c2b:	xor    ebx,ebx
  423c2d:	jmp    422a00 <__flatcc_fb_clear_parser@@Base+0x1d60>
  423c32:	lea    rcx,[rip+0x23777]        # 4473b0 <fb_schema_table_missing@@Base+0x2760>
  423c39:	lea    rsi,[rip+0x21ff0]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  423c40:	lea    rdi,[rip+0x23520]        # 447167 <fb_schema_table_missing@@Base+0x2517>
  423c47:	mov    edx,0x15b
  423c4c:	call   4050f0 <__assert_fail@plt>
  423c51:	lea    rcx,[rip+0x23770]        # 4473c8 <fb_schema_table_missing@@Base+0x2778>
  423c58:	lea    rsi,[rip+0x21fd1]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  423c5f:	lea    rdi,[rip+0x234d7]        # 44713d <fb_schema_table_missing@@Base+0x24ed>
  423c66:	mov    edx,0x302
  423c6b:	call   4050f0 <__assert_fail@plt>
  423c70:	mov    r11d,DWORD PTR [rsp+0x48]
  423c75:	test   r11d,r11d
  423c78:	je     4227db <__flatcc_fb_clear_parser@@Base+0x1b3b>
  423c7e:	mov    rax,QWORD PTR [rsp+0x38]
  423c83:	or     WORD PTR [rax+0x12],0x8
  423c88:	cmp    DWORD PTR [rsp+0x48],0x1
  423c8d:	jne    4227b5 <__flatcc_fb_clear_parser@@Base+0x1b15>
  423c93:	mov    DWORD PTR [rsp+0x48],0x0
  423c9b:	jmp    4227db <__flatcc_fb_clear_parser@@Base+0x1b3b>
  423ca0:	mov    DWORD PTR [rsp+0x2c],0x0
  423ca8:	jmp    422a80 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423cad:	mov    rsi,QWORD PTR [r12+0x48]
  423cb2:	lea    rdx,[rip+0x22bef]        # 4468a8 <fb_schema_table_missing@@Base+0x1c58>
  423cb9:	mov    rcx,r12
  423cbc:	mov    rdi,r14
  423cbf:	mov    ebx,0x1
  423cc4:	call   41de60 <error_ref_sym@@Base>
  423cc9:	mov    WORD PTR [r12+0x28],bx
  423ccf:	jmp    422166 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423cd4:	call   4050d0 <__stack_chk_fail@plt>
  423cd9:	cmp    eax,0x6
  423cdc:	jne    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  423ce2:	cmp    WORD PTR [rbp+0x20],0x6
  423ce7:	je     42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  423ced:	mov    rsi,QWORD PTR [rbp+0x8]
  423cf1:	lea    rdx,[rip+0x222b8]        # 445fb0 <fb_schema_table_missing@@Base+0x1360>
  423cf8:	xor    r9d,r9d
  423cfb:	xor    r8d,r8d
  423cfe:	xor    ecx,ecx
  423d00:	mov    rdi,r14
  423d03:	call   41cab0 <__flatcc_error_report@@Base>
  423d08:	jmp    42222a <__flatcc_fb_clear_parser@@Base+0x158a>
  423d0d:	lea    rcx,[rip+0x236b4]        # 4473c8 <fb_schema_table_missing@@Base+0x2778>
  423d14:	lea    rsi,[rip+0x21f15]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  423d1b:	lea    rdi,[rip+0xa19e]        # 42dec0 <_IO_stdin_used@@Base+0x1ec0>
  423d22:	mov    edx,0x301
  423d27:	call   4050f0 <__assert_fail@plt>
  423d2c:	nop    DWORD PTR [rax+0x0]

0000000000423d30 <__flatcc_fb_build_schema@@Base>:
  423d30:	push   r15
  423d32:	push   r14
  423d34:	lea    r14,[rdi+0x1f8]
  423d3b:	push   r13
  423d3d:	push   r12
  423d3f:	mov    r15,rdi
  423d42:	push   rbp
  423d43:	push   rbx
  423d44:	mov    rsi,r14
  423d47:	sub    rsp,0x108
  423d4e:	mov    rax,QWORD PTR fs:0x28
  423d57:	mov    QWORD PTR [rsp+0xf8],rax
  423d5f:	xor    eax,eax
  423d61:	lea    rax,[rdi+0x320]
  423d68:	mov    rdi,rax
  423d6b:	mov    QWORD PTR [rsp+0x10],rax
  423d70:	call   41a0d0 <ptr_set_find_item@@Base>
  423d75:	test   rax,rax
  423d78:	je     4257f6 <__flatcc_fb_build_schema@@Base+0x1ac6>
  423d7e:	mov    rbp,QWORD PTR [r15+0x238]
  423d85:	mov    ebx,0x811c9dc5
  423d8a:	test   rbp,rbp
  423d8d:	jne    423da5 <__flatcc_fb_build_schema@@Base+0x75>
  423d8f:	jmp    423ea1 <__flatcc_fb_build_schema@@Base+0x171>
  423d94:	nop    DWORD PTR [rax+0x0]
  423d98:	mov    rbp,QWORD PTR [rbp+0x0]
  423d9c:	test   rbp,rbp
  423d9f:	je     423ea1 <__flatcc_fb_build_schema@@Base+0x171>
  423da5:	cmp    WORD PTR [rbp+0x10],0x4
  423daa:	ja     423d98 <__flatcc_fb_build_schema@@Base+0x68>
  423dac:	mov    r8,QWORD PTR [rbp+0x18]
  423db0:	test   r8,r8
  423db3:	je     424cba <__flatcc_fb_build_schema@@Base+0xf8a>
  423db9:	mov    rdi,QWORD PTR [r8]
  423dbc:	test   rdi,rdi
  423dbf:	je     424ce6 <__flatcc_fb_build_schema@@Base+0xfb6>
  423dc5:	mov    ecx,0x811c9dc5
  423dca:	nop    WORD PTR [rax+rax*1+0x0]
  423dd0:	mov    rax,QWORD PTR [rdi+0x8]
  423dd4:	mov    rsi,QWORD PTR [rax+0x8]
  423dd8:	mov    rax,QWORD PTR [rax]
  423ddb:	test   rsi,rsi
  423dde:	je     423dfd <__flatcc_fb_build_schema@@Base+0xcd>
  423de0:	add    rsi,rax
  423de3:	nop    DWORD PTR [rax+rax*1+0x0]
  423de8:	add    rax,0x1
  423dec:	movzx  edx,BYTE PTR [rax-0x1]
  423df0:	xor    edx,ecx
  423df2:	imul   ecx,edx,0x1000193
  423df8:	cmp    rax,rsi
  423dfb:	jne    423de8 <__flatcc_fb_build_schema@@Base+0xb8>
  423dfd:	mov    rdi,QWORD PTR [rdi]
  423e00:	xor    ecx,0x2e
  423e03:	imul   ecx,ecx,0x1000193
  423e09:	test   rdi,rdi
  423e0c:	jne    423dd0 <__flatcc_fb_build_schema@@Base+0xa0>
  423e0e:	mov    rax,QWORD PTR [rbp+0x8]
  423e12:	mov    rdx,QWORD PTR [rax+0x8]
  423e16:	mov    rax,QWORD PTR [rax]
  423e19:	test   rdx,rdx
  423e1c:	lea    rsi,[rdx-0x1]
  423e20:	je     424d12 <__flatcc_fb_build_schema@@Base+0xfe2>
  423e26:	lea    rsi,[rax+rsi*1+0x1]
  423e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  423e30:	add    rax,0x1
  423e34:	movzx  edx,BYTE PTR [rax-0x1]
  423e38:	xor    edx,ecx
  423e3a:	imul   ecx,edx,0x1000193
  423e40:	cmp    rax,rsi
  423e43:	jne    423e30 <__flatcc_fb_build_schema@@Base+0x100>
  423e45:	test   ecx,ecx
  423e47:	cmove  ecx,ebx
  423e4a:	test   r8,r8
  423e4d:	mov    DWORD PTR [rbp+0xa0],ecx
  423e53:	mov    QWORD PTR [rbp+0x20],r14
  423e57:	je     423d98 <__flatcc_fb_build_schema@@Base+0x68>
  423e5d:	lea    rdi,[r8+0x8]
  423e61:	mov    edx,0x1
  423e66:	mov    rsi,rbp
  423e69:	call   41a810 <fb_symbol_table_insert_item@@Base>
  423e6e:	test   rax,rax
  423e71:	je     423d98 <__flatcc_fb_build_schema@@Base+0x68>
  423e77:	mov    rsi,QWORD PTR [rbp+0x8]
  423e7b:	mov    rcx,QWORD PTR [rax+0x8]
  423e7f:	lea    rdx,[rip+0x23335]        # 4471bb <fb_schema_table_missing@@Base+0x256b>
  423e86:	xor    r9d,r9d
  423e89:	xor    r8d,r8d
  423e8c:	mov    rdi,r15
  423e8f:	call   41cab0 <__flatcc_error_report@@Base>
  423e94:	mov    rbp,QWORD PTR [rbp+0x0]
  423e98:	test   rbp,rbp
  423e9b:	jne    423da5 <__flatcc_fb_build_schema@@Base+0x75>
  423ea1:	mov    rbx,QWORD PTR [r15+0x200]
  423ea8:	lea    rbp,[rip+0x23328]        # 4471d7 <fb_schema_table_missing@@Base+0x2587>
  423eaf:	test   rbx,rbx
  423eb2:	je     423ef4 <__flatcc_fb_build_schema@@Base+0x1c4>
  423eb4:	nop    DWORD PTR [rax+0x0]
  423eb8:	mov    rax,QWORD PTR [r15+0x260]
  423ebf:	mov    edx,0x1
  423ec4:	mov    rsi,rbx
  423ec7:	lea    rdi,[rax+0x20]
  423ecb:	call   42b230 <fb_name_table_insert_item@@Base>
  423ed0:	test   rax,rax
  423ed3:	je     423eec <__flatcc_fb_build_schema@@Base+0x1bc>
  423ed5:	mov    r9d,DWORD PTR [rbx+0x10]
  423ed9:	mov    r8,QWORD PTR [rbx+0x8]
  423edd:	xor    ecx,ecx
  423edf:	mov    rdx,rbp
  423ee2:	xor    esi,esi
  423ee4:	mov    rdi,r15
  423ee7:	call   41cab0 <__flatcc_error_report@@Base>
  423eec:	mov    rbx,QWORD PTR [rbx]
  423eef:	test   rbx,rbx
  423ef2:	jne    423eb8 <__flatcc_fb_build_schema@@Base+0x188>
  423ef4:	xor    r12d,r12d
  423ef7:	lea    rbp,[rip+0x2bea2]        # 44fda0 <fb_value_set_missing@@Base+0x7698>
  423efe:	jmp    423f56 <__flatcc_fb_build_schema@@Base+0x226>
  423f00:	mov    rdi,QWORD PTR [rbp+r12*8+0x0]
  423f05:	mov    QWORD PTR [r15+0x60],rax
  423f09:	mov    DWORD PTR [rbx+0x20],r12d
  423f0d:	mov    QWORD PTR [rbx+0x8],rdi
  423f11:	call   4050c0 <strlen@plt>
  423f16:	mov    DWORD PTR [rbx+0x10],eax
  423f19:	mov    rax,QWORD PTR [r15+0x260]
  423f20:	mov    r9d,0x2
  423f26:	mov    WORD PTR [rbx+0x18],r9w
  423f2b:	mov    QWORD PTR [rbx],0x0
  423f32:	mov    edx,0x1
  423f37:	mov    rsi,rbx
  423f3a:	lea    rdi,[rax+0x20]
  423f3e:	call   42b230 <fb_name_table_insert_item@@Base>
  423f43:	test   rax,rax
  423f46:	je     423f4c <__flatcc_fb_build_schema@@Base+0x21c>
  423f48:	mov    DWORD PTR [rax+0x20],r12d
  423f4c:	add    r12,0x1
  423f50:	cmp    r12,0xc
  423f54:	je     423f9f <__flatcc_fb_build_schema@@Base+0x26f>
  423f56:	mov    rbx,QWORD PTR [r15+0x60]
  423f5a:	lea    rax,[rbx+0x30]
  423f5e:	cmp    rax,QWORD PTR [r15+0x50]
  423f62:	jbe    423f00 <__flatcc_fb_build_schema@@Base+0x1d0>
  423f64:	mov    esi,0x1
  423f69:	mov    edi,0x10000
  423f6e:	call   405130 <calloc@plt>
  423f73:	test   rax,rax
  423f76:	je     425885 <__flatcc_fb_build_schema@@Base+0x1b55>
  423f7c:	mov    rdx,QWORD PTR [r15+0x58]
  423f80:	lea    rbx,[rax+0x10]
  423f84:	mov    QWORD PTR [r15+0x58],rax
  423f88:	mov    QWORD PTR [rax],rdx
  423f8b:	lea    rdx,[rax+0x10000]
  423f92:	add    rax,0x40
  423f96:	mov    QWORD PTR [r15+0x50],rdx
  423f9a:	jmp    423f00 <__flatcc_fb_build_schema@@Base+0x1d0>
  423f9f:	mov    r8d,DWORD PTR [r15+0x124]
  423fa6:	test   r8d,r8d
  423fa9:	jne    4241e3 <__flatcc_fb_build_schema@@Base+0x4b3>
  423faf:	mov    rbx,QWORD PTR [r15+0x238]
  423fb6:	test   rbx,rbx
  423fb9:	jne    4241d4 <__flatcc_fb_build_schema@@Base+0x4a4>
  423fbf:	mov    rax,QWORD PTR [r15+0x240]
  423fc6:	xor    r13d,r13d
  423fc9:	test   rax,rax
  423fcc:	je     425715 <__flatcc_fb_build_schema@@Base+0x19e5>
  423fd2:	xor    ecx,ecx
  423fd4:	jmp    423fe3 <__flatcc_fb_build_schema@@Base+0x2b3>
  423fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423fe0:	mov    rax,rdx
  423fe3:	mov    rdx,QWORD PTR [rax+0xc0]
  423fea:	mov    QWORD PTR [rax+0xc0],rcx
  423ff1:	mov    rcx,rax
  423ff4:	test   rdx,rdx
  423ff7:	jne    423fe0 <__flatcc_fb_build_schema@@Base+0x2b0>
  423ff9:	test   r13,r13
  423ffc:	mov    QWORD PTR [r15+0x240],rax
  424003:	je     42407b <__flatcc_fb_build_schema@@Base+0x34b>
  424005:	lea    r11,[rsp+0x40]
  42400a:	lea    r10,[rsp+0x38]
  42400f:	xor    eax,eax
  424011:	mov    r8d,0x1
  424017:	mov    esi,0x7
  42401c:	lea    rbx,[r11+0x40]
  424020:	cmp    WORD PTR [r13+0x10],0x0
  424026:	jne    424072 <__flatcc_fb_build_schema@@Base+0x342>
  424028:	test   BYTE PTR [r13+0xa4],0x8
  424030:	je     4251e0 <__flatcc_fb_build_schema@@Base+0x14b0>
  424036:	mov    rdx,QWORD PTR [r13+0x28]
  42403a:	mov    QWORD PTR [rsp+0x38],0x0
  424043:	mov    rcx,r10
  424046:	test   rdx,rdx
  424049:	je     424062 <__flatcc_fb_build_schema@@Base+0x332>
  42404b:	nop    DWORD PTR [rax+rax*1+0x0]
  424050:	mov    QWORD PTR [rcx],rdx
  424053:	lea    rcx,[rdx+0x98]
  42405a:	mov    rdx,QWORD PTR [rdx]
  42405d:	test   rdx,rdx
  424060:	jne    424050 <__flatcc_fb_build_schema@@Base+0x320>
  424062:	mov    QWORD PTR [rcx],0x0
  424069:	mov    rdx,QWORD PTR [rsp+0x38]
  42406e:	mov    QWORD PTR [r13+0x30],rdx
  424072:	mov    r13,QWORD PTR [r13+0x0]
  424076:	test   r13,r13
  424079:	jne    424020 <__flatcc_fb_build_schema@@Base+0x2f0>
  42407b:	mov    rsi,QWORD PTR [r15+0x248]
  424082:	test   rsi,rsi
  424085:	je     425600 <__flatcc_fb_build_schema@@Base+0x18d0>
  42408b:	mov    rbx,QWORD PTR [r15+0x258]
  424092:	mov    rbp,rsi
  424095:	xor    edx,edx
  424097:	jmp    42409e <__flatcc_fb_build_schema@@Base+0x36e>
  424099:	mov    edx,ecx
  42409b:	mov    rbp,rax
  42409e:	mov    rax,QWORD PTR [rbp+0x0]
  4240a2:	lea    ecx,[rdx+0x1]
  4240a5:	test   rax,rax
  4240a8:	jne    424099 <__flatcc_fb_build_schema@@Base+0x369>
  4240aa:	test   rbx,rbx
  4240ad:	je     42557e <__flatcc_fb_build_schema@@Base+0x184e>
  4240b3:	cmp    ecx,0x1
  4240b6:	mov    r12d,0x1
  4240bc:	jne    42557e <__flatcc_fb_build_schema@@Base+0x184e>
  4240c2:	mov    rax,QWORD PTR [rbp+0x8]
  4240c6:	lea    rdi,[rbx+0x8]
  4240ca:	mov    rdx,QWORD PTR [rax+0x8]
  4240ce:	mov    rsi,QWORD PTR [rax]
  4240d1:	call   41a830 <fb_symbol_table_find@@Base>
  4240d6:	test   rax,rax
  4240d9:	mov    r13,rax
  4240dc:	je     4240e9 <__flatcc_fb_build_schema@@Base+0x3b9>
  4240de:	cmp    WORD PTR [rax+0x10],0x4
  4240e3:	jbe    42539a <__flatcc_fb_build_schema@@Base+0x166a>
  4240e9:	mov    rax,QWORD PTR [rbx]
  4240ec:	test   rax,rax
  4240ef:	je     4255df <__flatcc_fb_build_schema@@Base+0x18af>
  4240f5:	xor    edx,edx
  4240f7:	nop    WORD PTR [rax+rax*1+0x0]
  424100:	mov    rax,QWORD PTR [rax]
  424103:	add    edx,0x1
  424106:	test   rax,rax
  424109:	jne    424100 <__flatcc_fb_build_schema@@Base+0x3d0>
  42410b:	mov    r13d,r12d
  42410e:	sub    r13d,edx
  424111:	jmp    424141 <__flatcc_fb_build_schema@@Base+0x411>
  424113:	nop    DWORD PTR [rax+rax*1+0x0]
  424118:	test   r14,r14
  42411b:	je     42413d <__flatcc_fb_build_schema@@Base+0x40d>
  42411d:	mov    rdi,QWORD PTR [r15+0x260]
  424124:	test   rdi,rdi
  424127:	je     42413d <__flatcc_fb_build_schema@@Base+0x40d>
  424129:	mov    rsi,QWORD PTR [rbx]
  42412c:	movsxd rdx,r13d
  42412f:	call   41b7e0 <fb_scope_table_find@@Base>
  424134:	test   rax,rax
  424137:	jne    425392 <__flatcc_fb_build_schema@@Base+0x1662>
  42413d:	add    r13d,0x1
  424141:	test   r13d,r13d
  424144:	jne    424118 <__flatcc_fb_build_schema@@Base+0x3e8>
  424146:	test   r14,r14
  424149:	je     42416c <__flatcc_fb_build_schema@@Base+0x43c>
  42414b:	mov    rdi,QWORD PTR [r15+0x260]
  424152:	test   rdi,rdi
  424155:	je     42416c <__flatcc_fb_build_schema@@Base+0x43c>
  424157:	xor    edx,edx
  424159:	xor    esi,esi
  42415b:	call   41b7e0 <fb_scope_table_find@@Base>
  424160:	test   rax,rax
  424163:	mov    rbx,rax
  424166:	jne    4240c2 <__flatcc_fb_build_schema@@Base+0x392>
  42416c:	mov    rsi,QWORD PTR [r15+0x248]
  424173:	mov    QWORD PTR [r15+0x250],0x0
  42417e:	lea    rdx,[rip+0x23089]        # 44720e <fb_schema_table_missing@@Base+0x25be>
  424185:	xor    ecx,ecx
  424187:	mov    rdi,r15
  42418a:	call   41de60 <error_ref_sym@@Base>
  42418f:	mov    QWORD PTR [r15+0x248],0x0
  42419a:	mov    eax,DWORD PTR [r15+0xd0]
  4241a1:	xor    edx,edx
  4241a3:	test   eax,eax
  4241a5:	sete   dl
  4241a8:	mov    DWORD PTR [r15+0xe4],edx
  4241af:	jmp    424930 <__flatcc_fb_build_schema@@Base+0xc00>
  4241b4:	mov    rsi,rbx
  4241b7:	mov    rdi,r15
  4241ba:	call   4212a0 <__flatcc_fb_clear_parser@@Base+0x600>
  4241bf:	test   eax,eax
  4241c1:	je     4241cc <__flatcc_fb_build_schema@@Base+0x49c>
  4241c3:	mov    edi,0x1
  4241c8:	mov    WORD PTR [rbx+0x58],di
  4241cc:	mov    rbx,QWORD PTR [rbx]
  4241cf:	test   rbx,rbx
  4241d2:	je     4241e3 <__flatcc_fb_build_schema@@Base+0x4b3>
  4241d4:	cmp    WORD PTR [rbx+0x10],0x3
  4241d9:	je     4241b4 <__flatcc_fb_build_schema@@Base+0x484>
  4241db:	mov    rbx,QWORD PTR [rbx]
  4241de:	test   rbx,rbx
  4241e1:	jne    4241d4 <__flatcc_fb_build_schema@@Base+0x4a4>
  4241e3:	mov    r13,QWORD PTR [r15+0x238]
  4241ea:	test   r13,r13
  4241ed:	je     423fbf <__flatcc_fb_build_schema@@Base+0x28f>
  4241f3:	lea    rax,[rsp+0x90]
  4241fb:	mov    QWORD PTR [rsp],rax
  4241ff:	cmp    WORD PTR [r13+0x10],0x4
  424205:	ja     424910 <__flatcc_fb_build_schema@@Base+0xbe0>
  42420b:	movzx  eax,WORD PTR [r13+0x10]
  424210:	lea    rbx,[rip+0x230d5]        # 4472ec <fb_schema_table_missing@@Base+0x269c>
  424217:	movsxd rax,DWORD PTR [rbx+rax*4]
  42421b:	add    rax,rbx
  42421e:	jmp    rax
  424220:	mov    esi,DWORD PTR [r15+0x124]
  424227:	test   esi,esi
  424229:	je     424244 <__flatcc_fb_build_schema@@Base+0x514>
  42422b:	mov    rsi,r13
  42422e:	mov    rdi,r15
  424231:	call   4212a0 <__flatcc_fb_clear_parser@@Base+0x600>
  424236:	test   eax,eax
  424238:	je     424244 <__flatcc_fb_build_schema@@Base+0x514>
  42423a:	mov    esi,0x1
  42423f:	mov    WORD PTR [r13+0x58],si
  424244:	mov    r13,QWORD PTR [r13+0x0]
  424248:	test   r13,r13
  42424b:	jne    4241ff <__flatcc_fb_build_schema@@Base+0x4cf>
  42424d:	mov    rbx,QWORD PTR [r15+0x238]
  424254:	test   rbx,rbx
  424257:	je     425705 <__flatcc_fb_build_schema@@Base+0x19d5>
  42425d:	cmp    WORD PTR [rbx+0x10],0x1
  424262:	jne    424283 <__flatcc_fb_build_schema@@Base+0x553>
  424264:	cmp    WORD PTR [rbx+0x58],0x1
  424269:	je     424283 <__flatcc_fb_build_schema@@Base+0x553>
  42426b:	mov    rsi,rbx
  42426e:	mov    rdi,r15
  424271:	call   420df0 <__flatcc_fb_clear_parser@@Base+0x150>
  424276:	test   eax,eax
  424278:	je     424283 <__flatcc_fb_build_schema@@Base+0x553>
  42427a:	mov    ecx,0x1
  42427f:	mov    WORD PTR [rbx+0x58],cx
  424283:	mov    rbx,QWORD PTR [rbx]
  424286:	test   rbx,rbx
  424289:	jne    42425d <__flatcc_fb_build_schema@@Base+0x52d>
  42428b:	mov    rax,QWORD PTR [r15+0x238]
  424292:	test   rax,rax
  424295:	mov    QWORD PTR [rsp],rax
  424299:	je     425705 <__flatcc_fb_build_schema@@Base+0x19d5>
  42429f:	lea    rax,[rsp+0x90]
  4242a7:	mov    QWORD PTR [rsp+0x18],rax
  4242ac:	mov    rax,QWORD PTR [rsp]
  4242b0:	movzx  eax,WORD PTR [rax+0x10]
  4242b4:	test   ax,ax
  4242b7:	je     424dc8 <__flatcc_fb_build_schema@@Base+0x1098>
  4242bd:	cmp    ax,0x2
  4242c1:	jne    4244d2 <__flatcc_fb_build_schema@@Base+0x7a2>
  4242c7:	mov    rax,QWORD PTR [rsp]
  4242cb:	movzx  eax,WORD PTR [rax+0x58]
  4242cf:	cmp    ax,0x1
  4242d3:	je     4244d2 <__flatcc_fb_build_schema@@Base+0x7a2>
  4242d9:	test   ax,ax
  4242dc:	jne    4258ac <__flatcc_fb_build_schema@@Base+0x1b7c>
  4242e2:	mov    rax,QWORD PTR [rsp]
  4242e6:	cmp    QWORD PTR [rax+0x38],0x0
  4242eb:	je     424308 <__flatcc_fb_build_schema@@Base+0x5d8>
  4242ed:	mov    rsi,QWORD PTR [rax+0x8]
  4242f1:	lea    rdx,[rip+0x22b18]        # 446e10 <fb_schema_table_missing@@Base+0x21c0>
  4242f8:	xor    r9d,r9d
  4242fb:	xor    r8d,r8d
  4242fe:	xor    ecx,ecx
  424300:	mov    rdi,r15
  424303:	call   41cab0 <__flatcc_error_report@@Base>
  424308:	mov    rax,QWORD PTR [rsp]
  42430c:	mov    rbp,QWORD PTR [rax+0x28]
  424310:	test   rbp,rbp
  424313:	je     4244d2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424319:	add    rax,0x60
  42431d:	mov    QWORD PTR [rsp+0x8],rax
  424322:	jmp    424352 <__flatcc_fb_build_schema@@Base+0x622>
  424324:	nop    DWORD PTR [rax+0x0]
  424328:	mov    rcx,QWORD PTR [rax+0x8]
  42432c:	mov    rsi,QWORD PTR [rbp+0x8]
  424330:	lea    rdx,[rip+0x22b01]        # 446e38 <fb_schema_table_missing@@Base+0x21e8>
  424337:	xor    r9d,r9d
  42433a:	xor    r8d,r8d
  42433d:	mov    rdi,r15
  424340:	call   41cab0 <__flatcc_error_report@@Base>
  424345:	mov    rbp,QWORD PTR [rbp+0x0]
  424349:	test   rbp,rbp
  42434c:	je     4244d2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424352:	mov    rdi,QWORD PTR [rsp+0x8]
  424357:	mov    edx,0x1
  42435c:	mov    rsi,rbp
  42435f:	call   41a810 <fb_symbol_table_insert_item@@Base>
  424364:	test   rax,rax
  424367:	jne    424328 <__flatcc_fb_build_schema@@Base+0x5f8>
  424369:	cmp    WORD PTR [rbp+0x10],0x5
  42436e:	jne    425410 <__flatcc_fb_build_schema@@Base+0x16e0>
  424374:	cmp    WORD PTR [rbp+0x58],0x0
  424379:	jne    42501a <__flatcc_fb_build_schema@@Base+0x12ea>
  42437f:	movzx  eax,WORD PTR [rbp+0x28]
  424383:	cmp    ax,0x1
  424387:	je     424345 <__flatcc_fb_build_schema@@Base+0x615>
  424389:	cmp    ax,0xc
  42438d:	je     4243aa <__flatcc_fb_build_schema@@Base+0x67a>
  42438f:	mov    rsi,QWORD PTR [rbp+0x8]
  424393:	lea    rdx,[rip+0x22afe]        # 446e98 <fb_schema_table_missing@@Base+0x2248>
  42439a:	xor    r9d,r9d
  42439d:	xor    r8d,r8d
  4243a0:	xor    ecx,ecx
  4243a2:	mov    rdi,r15
  4243a5:	call   41cab0 <__flatcc_error_report@@Base>
  4243aa:	mov    rsi,QWORD PTR [rbp+0x30]
  4243ae:	mov    rax,QWORD PTR [rsp]
  4243b2:	test   rsi,rsi
  4243b5:	mov    rbx,QWORD PTR [rax+0x18]
  4243b9:	je     4244a8 <__flatcc_fb_build_schema@@Base+0x778>
  4243bf:	mov    r12,rsi
  4243c2:	xor    edx,edx
  4243c4:	jmp    4243d5 <__flatcc_fb_build_schema@@Base+0x6a5>
  4243c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243d0:	mov    edx,ecx
  4243d2:	mov    r12,rax
  4243d5:	mov    rax,QWORD PTR [r12]
  4243d9:	lea    ecx,[rdx+0x1]
  4243dc:	test   rax,rax
  4243df:	jne    4243d0 <__flatcc_fb_build_schema@@Base+0x6a0>
  4243e1:	test   rbx,rbx
  4243e4:	je     424e10 <__flatcc_fb_build_schema@@Base+0x10e0>
  4243ea:	cmp    ecx,0x1
  4243ed:	jne    424e10 <__flatcc_fb_build_schema@@Base+0x10e0>
  4243f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4243f8:	mov    rax,QWORD PTR [r12+0x8]
  4243fd:	lea    rdi,[rbx+0x8]
  424401:	mov    rdx,QWORD PTR [rax+0x8]
  424405:	mov    rsi,QWORD PTR [rax]
  424408:	call   41a830 <fb_symbol_table_find@@Base>
  42440d:	test   rax,rax
  424410:	mov    r13,rax
  424413:	je     424420 <__flatcc_fb_build_schema@@Base+0x6f0>
  424415:	cmp    WORD PTR [rax+0x10],0x4
  42441a:	jbe    424d70 <__flatcc_fb_build_schema@@Base+0x1040>
  424420:	mov    rax,QWORD PTR [rbx]
  424423:	test   rax,rax
  424426:	je     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  424428:	xor    edx,edx
  42442a:	nop    WORD PTR [rax+rax*1+0x0]
  424430:	mov    rax,QWORD PTR [rax]
  424433:	add    edx,0x1
  424436:	test   rax,rax
  424439:	jne    424430 <__flatcc_fb_build_schema@@Base+0x700>
  42443b:	mov    r13d,0x1
  424441:	sub    r13d,edx
  424444:	jmp    424479 <__flatcc_fb_build_schema@@Base+0x749>
  424446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424450:	test   r14,r14
  424453:	je     424475 <__flatcc_fb_build_schema@@Base+0x745>
  424455:	mov    rdi,QWORD PTR [r15+0x260]
  42445c:	test   rdi,rdi
  42445f:	je     424475 <__flatcc_fb_build_schema@@Base+0x745>
  424461:	mov    rsi,QWORD PTR [rbx]
  424464:	movsxd rdx,r13d
  424467:	call   41b7e0 <fb_scope_table_find@@Base>
  42446c:	test   rax,rax
  42446f:	jne    424dc0 <__flatcc_fb_build_schema@@Base+0x1090>
  424475:	add    r13d,0x1
  424479:	test   r13d,r13d
  42447c:	jne    424450 <__flatcc_fb_build_schema@@Base+0x720>
  42447e:	test   r14,r14
  424481:	je     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  424483:	mov    rdi,QWORD PTR [r15+0x260]
  42448a:	test   rdi,rdi
  42448d:	je     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  42448f:	xor    edx,edx
  424491:	xor    esi,esi
  424493:	call   41b7e0 <fb_scope_table_find@@Base>
  424498:	test   rax,rax
  42449b:	mov    rbx,rax
  42449e:	jne    4243f8 <__flatcc_fb_build_schema@@Base+0x6c8>
  4244a4:	mov    rsi,QWORD PTR [rbp+0x30]
  4244a8:	lea    rdx,[rip+0x22a29]        # 446ed8 <fb_schema_table_missing@@Base+0x2288>
  4244af:	mov    rcx,rbp
  4244b2:	mov    rdi,r15
  4244b5:	mov    r12d,0x1
  4244bb:	call   41de60 <error_ref_sym@@Base>
  4244c0:	mov    WORD PTR [rbp+0x28],r12w
  4244c5:	mov    rbp,QWORD PTR [rbp+0x0]
  4244c9:	test   rbp,rbp
  4244cc:	jne    424352 <__flatcc_fb_build_schema@@Base+0x622>
  4244d2:	mov    rax,QWORD PTR [rsp]
  4244d6:	mov    rax,QWORD PTR [rax]
  4244d9:	test   rax,rax
  4244dc:	mov    QWORD PTR [rsp],rax
  4244e0:	jne    4242ac <__flatcc_fb_build_schema@@Base+0x57c>
  4244e6:	mov    rax,QWORD PTR [r15+0x240]
  4244ed:	mov    r13,QWORD PTR [r15+0x238]
  4244f4:	test   rax,rax
  4244f7:	jne    423fd2 <__flatcc_fb_build_schema@@Base+0x2a2>
  4244fd:	jmp    423ff9 <__flatcc_fb_build_schema@@Base+0x2c9>
  424502:	nop    WORD PTR [rax+rax*1+0x0]
  424508:	cmp    WORD PTR [r13+0x58],0x0
  42450e:	jne    4256e5 <__flatcc_fb_build_schema@@Base+0x19b5>
  424514:	mov    r12,QWORD PTR [r13+0x38]
  424518:	mov    rdi,QWORD PTR [rsp]
  42451c:	xor    eax,eax
  42451e:	mov    ecx,0xc
  424523:	xor    ebp,ebp
  424525:	mov    ebx,0x64
  42452a:	test   r12,r12
  42452d:	rep stos QWORD PTR es:[rdi],rax
  424530:	jne    42458a <__flatcc_fb_build_schema@@Base+0x85a>
  424532:	jmp    425665 <__flatcc_fb_build_schema@@Base+0x1935>
  424537:	nop    WORD PTR [rax+rax*1+0x0]
  424540:	mov    rsi,QWORD PTR [rsp]
  424544:	mov    edx,0x1
  424549:	shlx   edx,edx,eax
  42454e:	or     ebp,edx
  424550:	lea    rdx,[rsi+rax*8]
  424554:	cmp    QWORD PTR [rdx],0x0
  424558:	je     424959 <__flatcc_fb_build_schema@@Base+0xc29>
  42455e:	mov    rsi,QWORD PTR [r12+0x8]
  424563:	lea    rdx,[rip+0x21976]        # 445ee0 <fb_schema_table_missing@@Base+0x1290>
  42456a:	xor    r9d,r9d
  42456d:	xor    r8d,r8d
  424570:	xor    ecx,ecx
  424572:	mov    rdi,r15
  424575:	call   41cab0 <__flatcc_error_report@@Base>
  42457a:	mov    r12,QWORD PTR [r12]
  42457e:	sub    ebx,0x1
  424581:	test   r12,r12
  424584:	je     4245e3 <__flatcc_fb_build_schema@@Base+0x8b3>
  424586:	test   ebx,ebx
  424588:	je     4245e3 <__flatcc_fb_build_schema@@Base+0x8b3>
  42458a:	mov    rax,QWORD PTR [r12+0x8]
  42458f:	mov    rsi,QWORD PTR [r15+0x260]
  424596:	mov    rdx,QWORD PTR [rax+0x8]
  42459a:	lea    rdi,[rsi+0x20]
  42459e:	mov    rsi,QWORD PTR [rax]
  4245a1:	call   42b250 <fb_name_table_find@@Base>
  4245a6:	test   rax,rax
  4245a9:	je     424b10 <__flatcc_fb_build_schema@@Base+0xde0>
  4245af:	movsxd rax,DWORD PTR [rax+0x20]
  4245b3:	test   eax,eax
  4245b5:	je     42457a <__flatcc_fb_build_schema@@Base+0x84a>
  4245b7:	cmp    al,0x4
  4245b9:	je     424540 <__flatcc_fb_build_schema@@Base+0x810>
  4245bb:	mov    rsi,QWORD PTR [r12+0x8]
  4245c0:	lea    rdx,[rip+0x218e9]        # 445eb0 <fb_schema_table_missing@@Base+0x1260>
  4245c7:	xor    r9d,r9d
  4245ca:	xor    r8d,r8d
  4245cd:	xor    ecx,ecx
  4245cf:	mov    rdi,r15
  4245d2:	sub    ebx,0x1
  4245d5:	call   41cab0 <__flatcc_error_report@@Base>
  4245da:	mov    r12,QWORD PTR [r12]
  4245de:	test   r12,r12
  4245e1:	jne    424586 <__flatcc_fb_build_schema@@Base+0x856>
  4245e3:	test   r12,r12
  4245e6:	je     424604 <__flatcc_fb_build_schema@@Base+0x8d4>
  4245e8:	mov    rsi,QWORD PTR [r12+0x8]
  4245ed:	lea    rdx,[rip+0x22aaf]        # 4470a3 <fb_schema_table_missing@@Base+0x2453>
  4245f4:	xor    r9d,r9d
  4245f7:	xor    r8d,r8d
  4245fa:	xor    ecx,ecx
  4245fc:	mov    rdi,r15
  4245ff:	call   41cab0 <__flatcc_error_report@@Base>
  424604:	mov    rax,QWORD PTR [rsp+0xb0]
  42460c:	mov    WORD PTR [r13+0xa4],bp
  424614:	test   rax,rax
  424617:	je     424648 <__flatcc_fb_build_schema@@Base+0x918>
  424619:	mov    rdx,QWORD PTR [rax+0x10]
  42461d:	lea    rax,[rdx-0x1]
  424621:	cmp    rax,0xff
  424627:	jbe    424b8d <__flatcc_fb_build_schema@@Base+0xe5d>
  42462d:	mov    rsi,QWORD PTR [r13+0x8]
  424631:	lea    rdx,[rip+0x229a8]        # 446fe0 <fb_schema_table_missing@@Base+0x2390>
  424638:	xor    r9d,r9d
  42463b:	xor    r8d,r8d
  42463e:	xor    ecx,ecx
  424640:	mov    rdi,r15
  424643:	call   41cab0 <__flatcc_error_report@@Base>
  424648:	mov    rbp,QWORD PTR [r13+0x28]
  42464c:	test   rbp,rbp
  42464f:	je     424244 <__flatcc_fb_build_schema@@Base+0x514>
  424655:	lea    rax,[r13+0x60]
  424659:	mov    DWORD PTR [rsp+0x2c],0x0
  424661:	mov    QWORD PTR [rsp+0x18],r13
  424666:	mov    QWORD PTR [rsp+0x8],rax
  42466b:	jmp    42469a <__flatcc_fb_build_schema@@Base+0x96a>
  42466d:	nop    DWORD PTR [rax]
  424670:	mov    rcx,QWORD PTR [rax+0x8]
  424674:	mov    rsi,QWORD PTR [rbp+0x8]
  424678:	lea    rdx,[rip+0x225a1]        # 446c20 <fb_schema_table_missing@@Base+0x1fd0>
  42467f:	xor    r9d,r9d
  424682:	xor    r8d,r8d
  424685:	mov    rdi,r15
  424688:	call   41cab0 <__flatcc_error_report@@Base>
  42468d:	mov    rbp,QWORD PTR [rbp+0x0]
  424691:	test   rbp,rbp
  424694:	je     424ab8 <__flatcc_fb_build_schema@@Base+0xd88>
  42469a:	mov    rdi,QWORD PTR [rsp+0x8]
  42469f:	mov    edx,0x1
  4246a4:	mov    rsi,rbp
  4246a7:	call   41a810 <fb_symbol_table_insert_item@@Base>
  4246ac:	test   rax,rax
  4246af:	jne    424670 <__flatcc_fb_build_schema@@Base+0x940>
  4246b1:	cmp    WORD PTR [rbp+0x10],0x5
  4246b6:	jne    4256c0 <__flatcc_fb_build_schema@@Base+0x1990>
  4246bc:	mov    r13d,DWORD PTR [r15+0x118]
  4246c3:	xor    r12d,r12d
  4246c6:	mov    ecx,DWORD PTR [r15+0x114]
  4246cd:	mov    rdi,QWORD PTR [rsp]
  4246d1:	test   r13d,r13d
  4246d4:	setne  r12b
  4246d8:	shl    r12d,0x7
  4246dc:	mov    edx,r12d
  4246df:	or     edx,0x4
  4246e2:	test   ecx,ecx
  4246e4:	mov    ecx,0xc
  4246e9:	cmovne r12d,edx
  4246ed:	movzx  ebx,r12w
  4246f1:	mov    r12,QWORD PTR [rbp+0x60]
  4246f5:	mov    esi,ebx
  4246f7:	rep stos QWORD PTR es:[rdi],rax
  4246fa:	test   r12,r12
  4246fd:	je     4254be <__flatcc_fb_build_schema@@Base+0x178e>
  424703:	mov    QWORD PTR [rsp+0x20],rbp
  424708:	xor    r13d,r13d
  42470b:	mov    ebx,0x64
  424710:	mov    ebp,esi
  424712:	jmp    424763 <__flatcc_fb_build_schema@@Base+0xa33>
  424714:	nop    DWORD PTR [rax+0x0]
  424718:	mov    rsi,QWORD PTR [rsp]
  42471c:	mov    edx,0x1
  424721:	shlx   edx,edx,eax
  424726:	or     r13d,edx
  424729:	lea    rdx,[rsi+rax*8]
  42472d:	cmp    QWORD PTR [rdx],0x0
  424731:	je     4249b0 <__flatcc_fb_build_schema@@Base+0xc80>
  424737:	mov    rsi,QWORD PTR [r12+0x8]
  42473c:	lea    rdx,[rip+0x2179d]        # 445ee0 <fb_schema_table_missing@@Base+0x1290>
  424743:	xor    r9d,r9d
  424746:	xor    r8d,r8d
  424749:	xor    ecx,ecx
  42474b:	mov    rdi,r15
  42474e:	call   41cab0 <__flatcc_error_report@@Base>
  424753:	mov    r12,QWORD PTR [r12]
  424757:	sub    ebx,0x1
  42475a:	test   r12,r12
  42475d:	je     4247bd <__flatcc_fb_build_schema@@Base+0xa8d>
  42475f:	test   ebx,ebx
  424761:	je     4247bd <__flatcc_fb_build_schema@@Base+0xa8d>
  424763:	mov    rax,QWORD PTR [r12+0x8]
  424768:	mov    rsi,QWORD PTR [r15+0x260]
  42476f:	mov    rdx,QWORD PTR [rax+0x8]
  424773:	lea    rdi,[rsi+0x20]
  424777:	mov    rsi,QWORD PTR [rax]
  42477a:	call   42b250 <fb_name_table_find@@Base>
  42477f:	test   rax,rax
  424782:	je     4249ef <__flatcc_fb_build_schema@@Base+0xcbf>
  424788:	movsxd rax,DWORD PTR [rax+0x20]
  42478c:	test   eax,eax
  42478e:	je     424753 <__flatcc_fb_build_schema@@Base+0xa23>
  424790:	bt     ebp,eax
  424793:	jb     424718 <__flatcc_fb_build_schema@@Base+0x9e8>
  424795:	mov    rsi,QWORD PTR [r12+0x8]
  42479a:	lea    rdx,[rip+0x2170f]        # 445eb0 <fb_schema_table_missing@@Base+0x1260>
  4247a1:	xor    r9d,r9d
  4247a4:	xor    r8d,r8d
  4247a7:	xor    ecx,ecx
  4247a9:	mov    rdi,r15
  4247ac:	sub    ebx,0x1
  4247af:	call   41cab0 <__flatcc_error_report@@Base>
  4247b4:	mov    r12,QWORD PTR [r12]
  4247b8:	test   r12,r12
  4247bb:	jne    42475f <__flatcc_fb_build_schema@@Base+0xa2f>
  4247bd:	test   r12,r12
  4247c0:	mov    rbp,QWORD PTR [rsp+0x20]
  4247c5:	je     4247e3 <__flatcc_fb_build_schema@@Base+0xab3>
  4247c7:	mov    rsi,QWORD PTR [r12+0x8]
  4247cc:	lea    rdx,[rip+0x228d0]        # 4470a3 <fb_schema_table_missing@@Base+0x2453>
  4247d3:	xor    r9d,r9d
  4247d6:	xor    r8d,r8d
  4247d9:	xor    ecx,ecx
  4247db:	mov    rdi,r15
  4247de:	call   41cab0 <__flatcc_error_report@@Base>
  4247e3:	movzx  eax,WORD PTR [rbp+0x28]
  4247e7:	mov    WORD PTR [rbp+0x70],r13w
  4247ec:	cmp    ax,0x8
  4247f0:	je     424a75 <__flatcc_fb_build_schema@@Base+0xd45>
  4247f6:	cmp    ax,0xc
  4247fa:	jne    424a50 <__flatcc_fb_build_schema@@Base+0xd20>
  424800:	mov    rsi,QWORD PTR [rbp+0x18]
  424804:	mov    rax,QWORD PTR [rsp+0x18]
  424809:	test   rsi,rsi
  42480c:	mov    rbx,QWORD PTR [rax+0x18]
  424810:	je     4248e8 <__flatcc_fb_build_schema@@Base+0xbb8>
  424816:	mov    r12,rsi
  424819:	xor    edx,edx
  42481b:	jmp    424825 <__flatcc_fb_build_schema@@Base+0xaf5>
  42481d:	nop    DWORD PTR [rax]
  424820:	mov    edx,ecx
  424822:	mov    r12,rax
  424825:	mov    rax,QWORD PTR [r12]
  424829:	lea    ecx,[rdx+0x1]
  42482c:	test   rax,rax
  42482f:	jne    424820 <__flatcc_fb_build_schema@@Base+0xaf0>
  424831:	test   rbx,rbx
  424834:	je     424bb8 <__flatcc_fb_build_schema@@Base+0xe88>
  42483a:	cmp    ecx,0x1
  42483d:	jne    424bb8 <__flatcc_fb_build_schema@@Base+0xe88>
  424843:	mov    rax,QWORD PTR [r12+0x8]
  424848:	lea    rdi,[rbx+0x8]
  42484c:	mov    rdx,QWORD PTR [rax+0x8]
  424850:	mov    rsi,QWORD PTR [rax]
  424853:	call   41a830 <fb_symbol_table_find@@Base>
  424858:	test   rax,rax
  42485b:	mov    r13,rax
  42485e:	je     42486b <__flatcc_fb_build_schema@@Base+0xb3b>
  424860:	cmp    WORD PTR [rax+0x10],0x4
  424865:	jbe    424c40 <__flatcc_fb_build_schema@@Base+0xf10>
  42486b:	mov    rax,QWORD PTR [rbx]
  42486e:	test   rax,rax
  424871:	je     4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  424873:	xor    edx,edx
  424875:	nop    DWORD PTR [rax]
  424878:	mov    rax,QWORD PTR [rax]
  42487b:	add    edx,0x1
  42487e:	test   rax,rax
  424881:	jne    424878 <__flatcc_fb_build_schema@@Base+0xb48>
  424883:	mov    r13d,0x1
  424889:	sub    r13d,edx
  42488c:	jmp    4248b9 <__flatcc_fb_build_schema@@Base+0xb89>
  42488e:	xchg   ax,ax
  424890:	test   r14,r14
  424893:	je     4248b5 <__flatcc_fb_build_schema@@Base+0xb85>
  424895:	mov    rdi,QWORD PTR [r15+0x260]
  42489c:	test   rdi,rdi
  42489f:	je     4248b5 <__flatcc_fb_build_schema@@Base+0xb85>
  4248a1:	mov    rsi,QWORD PTR [rbx]
  4248a4:	movsxd rdx,r13d
  4248a7:	call   41b7e0 <fb_scope_table_find@@Base>
  4248ac:	test   rax,rax
  4248af:	jne    424cb2 <__flatcc_fb_build_schema@@Base+0xf82>
  4248b5:	add    r13d,0x1
  4248b9:	test   r13d,r13d
  4248bc:	jne    424890 <__flatcc_fb_build_schema@@Base+0xb60>
  4248be:	test   r14,r14
  4248c1:	je     4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  4248c3:	mov    rdi,QWORD PTR [r15+0x260]
  4248ca:	test   rdi,rdi
  4248cd:	je     4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  4248cf:	xor    edx,edx
  4248d1:	xor    esi,esi
  4248d3:	call   41b7e0 <fb_scope_table_find@@Base>
  4248d8:	test   rax,rax
  4248db:	mov    rbx,rax
  4248de:	jne    424843 <__flatcc_fb_build_schema@@Base+0xb13>
  4248e4:	mov    rsi,QWORD PTR [rbp+0x18]
  4248e8:	lea    rdx,[rip+0x22381]        # 446c70 <fb_schema_table_missing@@Base+0x2020>
  4248ef:	mov    rcx,rbp
  4248f2:	mov    rdi,r15
  4248f5:	mov    r12d,0x1
  4248fb:	call   41de60 <error_ref_sym@@Base>
  424900:	mov    WORD PTR [rbp+0x28],r12w
  424905:	jmp    42468d <__flatcc_fb_build_schema@@Base+0x95d>
  42490a:	nop    WORD PTR [rax+rax*1+0x0]
  424910:	mov    rsi,QWORD PTR [r13+0x8]
  424914:	lea    rdx,[rip+0x224bd]        # 446dd8 <fb_schema_table_missing@@Base+0x2188>
  42491b:	xor    r9d,r9d
  42491e:	xor    r8d,r8d
  424921:	xor    ecx,ecx
  424923:	mov    rdi,r15
  424926:	call   41cab0 <__flatcc_error_report@@Base>
  42492b:	mov    eax,0xffffffff
  424930:	mov    rbx,QWORD PTR [rsp+0xf8]
  424938:	xor    rbx,QWORD PTR fs:0x28
  424941:	jne    425849 <__flatcc_fb_build_schema@@Base+0x1b19>
  424947:	add    rsp,0x108
  42494e:	pop    rbx
  42494f:	pop    rbp
  424950:	pop    r12
  424952:	pop    r13
  424954:	pop    r14
  424956:	pop    r15
  424958:	ret    
  424959:	lea    rsi,[rip+0x22b00]        # 447460 <fb_schema_table_missing@@Base+0x2810>
  424960:	mov    QWORD PTR [rdx],r12
  424963:	mov    eax,DWORD PTR [rsi+rax*4]
  424966:	test   eax,eax
  424968:	je     424b5f <__flatcc_fb_build_schema@@Base+0xe2f>
  42496e:	cmp    eax,0x2
  424971:	je     425453 <__flatcc_fb_build_schema@@Base+0x1723>
  424977:	cmp    eax,0x5
  42497a:	jne    424d2d <__flatcc_fb_build_schema@@Base+0xffd>
  424980:	cmp    WORD PTR [r12+0x20],0x5
  424987:	je     42457a <__flatcc_fb_build_schema@@Base+0x84a>
  42498d:	mov    rsi,QWORD PTR [r12+0x8]
  424992:	lea    rdx,[rip+0x215bf]        # 445f58 <fb_schema_table_missing@@Base+0x1308>
  424999:	xor    r9d,r9d
  42499c:	xor    r8d,r8d
  42499f:	xor    ecx,ecx
  4249a1:	mov    rdi,r15
  4249a4:	call   41cab0 <__flatcc_error_report@@Base>
  4249a9:	jmp    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  4249ae:	xchg   ax,ax
  4249b0:	lea    rsi,[rip+0x22aa9]        # 447460 <fb_schema_table_missing@@Base+0x2810>
  4249b7:	mov    QWORD PTR [rdx],r12
  4249ba:	mov    eax,DWORD PTR [rsi+rax*4]
  4249bd:	test   eax,eax
  4249bf:	jne    424a10 <__flatcc_fb_build_schema@@Base+0xce0>
  4249c1:	cmp    WORD PTR [r12+0x20],0x0
  4249c8:	je     424753 <__flatcc_fb_build_schema@@Base+0xa23>
  4249ce:	mov    rsi,QWORD PTR [r12+0x8]
  4249d3:	lea    rdx,[rip+0x2152e]        # 445f08 <fb_schema_table_missing@@Base+0x12b8>
  4249da:	xor    r9d,r9d
  4249dd:	xor    r8d,r8d
  4249e0:	xor    ecx,ecx
  4249e2:	mov    rdi,r15
  4249e5:	call   41cab0 <__flatcc_error_report@@Base>
  4249ea:	jmp    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  4249ef:	mov    rsi,QWORD PTR [r12+0x8]
  4249f4:	lea    rdx,[rip+0x21495]        # 445e90 <fb_schema_table_missing@@Base+0x1240>
  4249fb:	xor    r9d,r9d
  4249fe:	xor    r8d,r8d
  424a01:	xor    ecx,ecx
  424a03:	mov    rdi,r15
  424a06:	call   41cab0 <__flatcc_error_report@@Base>
  424a0b:	jmp    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  424a10:	cmp    eax,0x2
  424a13:	je     424b31 <__flatcc_fb_build_schema@@Base+0xe01>
  424a19:	cmp    eax,0x5
  424a1c:	jne    425518 <__flatcc_fb_build_schema@@Base+0x17e8>
  424a22:	cmp    WORD PTR [r12+0x20],0x5
  424a29:	je     424753 <__flatcc_fb_build_schema@@Base+0xa23>
  424a2f:	mov    rsi,QWORD PTR [r12+0x8]
  424a34:	lea    rdx,[rip+0x2151d]        # 445f58 <fb_schema_table_missing@@Base+0x1308>
  424a3b:	xor    r9d,r9d
  424a3e:	xor    r8d,r8d
  424a41:	xor    ecx,ecx
  424a43:	mov    rdi,r15
  424a46:	call   41cab0 <__flatcc_error_report@@Base>
  424a4b:	jmp    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  424a50:	mov    rsi,QWORD PTR [rbp+0x8]
  424a54:	lea    rdx,[rip+0x22305]        # 446d60 <fb_schema_table_missing@@Base+0x2110>
  424a5b:	xor    r9d,r9d
  424a5e:	xor    r8d,r8d
  424a61:	xor    ecx,ecx
  424a63:	mov    rdi,r15
  424a66:	mov    r13,QWORD PTR [rsp+0x18]
  424a6b:	call   41cab0 <__flatcc_error_report@@Base>
  424a70:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  424a75:	and    r13w,0x80
  424a7b:	cmp    r13w,0x1
  424a80:	sbb    DWORD PTR [rsp+0x2c],0xffffffff
  424a85:	cmp    WORD PTR [rbp+0x58],0x0
  424a8a:	je     42468d <__flatcc_fb_build_schema@@Base+0x95d>
  424a90:	mov    rsi,QWORD PTR [rbp+0x8]
  424a94:	lea    rdx,[rip+0x22305]        # 446da0 <fb_schema_table_missing@@Base+0x2150>
  424a9b:	xor    r9d,r9d
  424a9e:	xor    r8d,r8d
  424aa1:	xor    ecx,ecx
  424aa3:	mov    rdi,r15
  424aa6:	call   41cab0 <__flatcc_error_report@@Base>
  424aab:	mov    rbp,QWORD PTR [rbp+0x0]
  424aaf:	test   rbp,rbp
  424ab2:	jne    42469a <__flatcc_fb_build_schema@@Base+0x96a>
  424ab8:	mov    eax,DWORD PTR [rsp+0x2c]
  424abc:	mov    r13,QWORD PTR [rsp+0x18]
  424ac1:	test   eax,eax
  424ac3:	je     424244 <__flatcc_fb_build_schema@@Base+0x514>
  424ac9:	or     WORD PTR [r13+0x12],0x8
  424acf:	cmp    eax,0x1
  424ad2:	je     424244 <__flatcc_fb_build_schema@@Base+0x514>
  424ad8:	mov    edi,DWORD PTR [r15+0x108]
  424adf:	test   edi,edi
  424ae1:	jne    424244 <__flatcc_fb_build_schema@@Base+0x514>
  424ae7:	mov    rsi,QWORD PTR [r13+0x8]
  424aeb:	lea    rdx,[rip+0x22086]        # 446b78 <fb_schema_table_missing@@Base+0x1f28>
  424af2:	xor    r9d,r9d
  424af5:	xor    r8d,r8d
  424af8:	xor    ecx,ecx
  424afa:	mov    rdi,r15
  424afd:	call   41cab0 <__flatcc_error_report@@Base>
  424b02:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  424b07:	nop    WORD PTR [rax+rax*1+0x0]
  424b10:	mov    rsi,QWORD PTR [r12+0x8]
  424b15:	lea    rdx,[rip+0x21374]        # 445e90 <fb_schema_table_missing@@Base+0x1240>
  424b1c:	xor    r9d,r9d
  424b1f:	xor    r8d,r8d
  424b22:	xor    ecx,ecx
  424b24:	mov    rdi,r15
  424b27:	call   41cab0 <__flatcc_error_report@@Base>
  424b2c:	jmp    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  424b31:	cmp    WORD PTR [r12+0x20],0x2
  424b38:	je     424753 <__flatcc_fb_build_schema@@Base+0xa23>
  424b3e:	mov    rsi,QWORD PTR [r12+0x8]
  424b43:	lea    rdx,[rip+0x213e6]        # 445f30 <fb_schema_table_missing@@Base+0x12e0>
  424b4a:	xor    r9d,r9d
  424b4d:	xor    r8d,r8d
  424b50:	xor    ecx,ecx
  424b52:	mov    rdi,r15
  424b55:	call   41cab0 <__flatcc_error_report@@Base>
  424b5a:	jmp    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  424b5f:	cmp    WORD PTR [r12+0x20],0x0
  424b66:	je     42457a <__flatcc_fb_build_schema@@Base+0x84a>
  424b6c:	mov    rsi,QWORD PTR [r12+0x8]
  424b71:	lea    rdx,[rip+0x21390]        # 445f08 <fb_schema_table_missing@@Base+0x12b8>
  424b78:	xor    r9d,r9d
  424b7b:	xor    r8d,r8d
  424b7e:	xor    ecx,ecx
  424b80:	mov    rdi,r15
  424b83:	call   41cab0 <__flatcc_error_report@@Base>
  424b88:	jmp    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  424b8d:	cmp    rdx,0x1
  424b91:	je     424bab <__flatcc_fb_build_schema@@Base+0xe7b>
  424b93:	mov    eax,0x2
  424b98:	jmp    424ba6 <__flatcc_fb_build_schema@@Base+0xe76>
  424b9a:	add    rax,rax
  424b9d:	cmp    rdx,rax
  424ba0:	jb     42462d <__flatcc_fb_build_schema@@Base+0x8fd>
  424ba6:	cmp    rdx,rax
  424ba9:	jne    424b9a <__flatcc_fb_build_schema@@Base+0xe6a>
  424bab:	mov    WORD PTR [r13+0xb0],dx
  424bb3:	jmp    424648 <__flatcc_fb_build_schema@@Base+0x918>
  424bb8:	cmp    ecx,0x1
  424bbb:	cmovne rax,rsi
  424bbf:	test   r14,r14
  424bc2:	je     4248e8 <__flatcc_fb_build_schema@@Base+0xbb8>
  424bc8:	mov    rdi,QWORD PTR [r15+0x260]
  424bcf:	test   rdi,rdi
  424bd2:	je     4248e8 <__flatcc_fb_build_schema@@Base+0xbb8>
  424bd8:	neg    edx
  424bda:	mov    rsi,rax
  424bdd:	movsxd rdx,edx
  424be0:	call   41b7e0 <fb_scope_table_find@@Base>
  424be5:	test   rax,rax
  424be8:	je     4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  424bee:	mov    rcx,QWORD PTR [r12+0x8]
  424bf3:	lea    rdi,[rax+0x8]
  424bf7:	mov    rdx,QWORD PTR [rcx+0x8]
  424bfb:	mov    rsi,QWORD PTR [rcx]
  424bfe:	call   41a830 <fb_symbol_table_find@@Base>
  424c03:	test   rax,rax
  424c06:	je     4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  424c0c:	cmp    WORD PTR [rax+0x10],0x4
  424c11:	ja     4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  424c17:	mov    rsi,QWORD PTR [rax+0x20]
  424c1b:	mov    rdi,QWORD PTR [rsp+0x10]
  424c20:	mov    QWORD PTR [rsp+0x20],rax
  424c25:	call   41a0d0 <ptr_set_find_item@@Base>
  424c2a:	test   rax,rax
  424c2d:	mov    rdx,QWORD PTR [rsp+0x20]
  424c32:	jne    424c5a <__flatcc_fb_build_schema@@Base+0xf2a>
  424c34:	jmp    4248e4 <__flatcc_fb_build_schema@@Base+0xbb4>
  424c39:	nop    DWORD PTR [rax+0x0]
  424c40:	mov    rsi,QWORD PTR [rax+0x20]
  424c44:	mov    rdi,QWORD PTR [rsp+0x10]
  424c49:	call   41a0d0 <ptr_set_find_item@@Base>
  424c4e:	test   rax,rax
  424c51:	je     42486b <__flatcc_fb_build_schema@@Base+0xb3b>
  424c57:	mov    rdx,r13
  424c5a:	mov    QWORD PTR [rbp+0x18],rdx
  424c5e:	movzx  eax,WORD PTR [rdx+0x10]
  424c62:	mov    ecx,0xe
  424c67:	mov    WORD PTR [rbp+0x28],cx
  424c6b:	cmp    ax,0x1
  424c6f:	je     4254d7 <__flatcc_fb_build_schema@@Base+0x17a7>
  424c75:	mov    ebx,DWORD PTR [r15+0x104]
  424c7c:	test   ebx,ebx
  424c7e:	je     42578e <__flatcc_fb_build_schema@@Base+0x1a5e>
  424c84:	cmp    ax,0x3
  424c88:	jne    42575c <__flatcc_fb_build_schema@@Base+0x1a2c>
  424c8e:	test   BYTE PTR [rbp+0x70],0x80
  424c92:	je     424a85 <__flatcc_fb_build_schema@@Base+0xd55>
  424c98:	mov    r10d,DWORD PTR [r15+0x100]
  424c9f:	test   r10d,r10d
  424ca2:	je     4254e1 <__flatcc_fb_build_schema@@Base+0x17b1>
  424ca8:	add    DWORD PTR [rsp+0x2c],0x1
  424cad:	jmp    424a85 <__flatcc_fb_build_schema@@Base+0xd55>
  424cb2:	mov    rbx,rax
  424cb5:	jmp    424843 <__flatcc_fb_build_schema@@Base+0xb13>
  424cba:	mov    rax,QWORD PTR [rbp+0x8]
  424cbe:	mov    ecx,0x811c9dc5
  424cc3:	mov    rdx,QWORD PTR [rax+0x8]
  424cc7:	mov    rax,QWORD PTR [rax]
  424cca:	test   rdx,rdx
  424ccd:	lea    rsi,[rdx-0x1]
  424cd1:	jne    423e26 <__flatcc_fb_build_schema@@Base+0xf6>
  424cd7:	mov    DWORD PTR [rbp+0xa0],ecx
  424cdd:	mov    QWORD PTR [rbp+0x20],r14
  424ce1:	jmp    423d98 <__flatcc_fb_build_schema@@Base+0x68>
  424ce6:	mov    rax,QWORD PTR [rbp+0x8]
  424cea:	mov    ecx,0x811c9dc5
  424cef:	mov    rdx,QWORD PTR [rax+0x8]
  424cf3:	mov    rax,QWORD PTR [rax]
  424cf6:	test   rdx,rdx
  424cf9:	lea    rsi,[rdx-0x1]
  424cfd:	jne    423e26 <__flatcc_fb_build_schema@@Base+0xf6>
  424d03:	mov    DWORD PTR [rbp+0xa0],ecx
  424d09:	mov    QWORD PTR [rbp+0x20],r14
  424d0d:	jmp    423e5d <__flatcc_fb_build_schema@@Base+0x12d>
  424d12:	test   ecx,ecx
  424d14:	jne    423e4a <__flatcc_fb_build_schema@@Base+0x11a>
  424d1a:	mov    DWORD PTR [rbp+0xa0],0x811c9dc5
  424d24:	mov    QWORD PTR [rbp+0x20],r14
  424d28:	jmp    423e5d <__flatcc_fb_build_schema@@Base+0x12d>
  424d2d:	cmp    eax,0x4
  424d30:	jne    425725 <__flatcc_fb_build_schema@@Base+0x19f5>
  424d36:	movzx  eax,WORD PTR [r12+0x20]
  424d3c:	sub    eax,0x4
  424d3f:	cmp    ax,0x1
  424d43:	jbe    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  424d49:	mov    rsi,QWORD PTR [r12+0x8]
  424d4e:	lea    rdx,[rip+0x21233]        # 445f88 <fb_schema_table_missing@@Base+0x1338>
  424d55:	xor    r9d,r9d
  424d58:	xor    r8d,r8d
  424d5b:	xor    ecx,ecx
  424d5d:	mov    rdi,r15
  424d60:	call   41cab0 <__flatcc_error_report@@Base>
  424d65:	jmp    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  424d6a:	nop    WORD PTR [rax+rax*1+0x0]
  424d70:	mov    rsi,QWORD PTR [rax+0x20]
  424d74:	mov    rdi,QWORD PTR [rsp+0x10]
  424d79:	call   41a0d0 <ptr_set_find_item@@Base>
  424d7e:	test   rax,rax
  424d81:	je     424420 <__flatcc_fb_build_schema@@Base+0x6f0>
  424d87:	mov    rdx,r13
  424d8a:	cmp    WORD PTR [rdx+0x10],0x0
  424d8f:	je     424e9b <__flatcc_fb_build_schema@@Base+0x116b>
  424d95:	mov    rcx,QWORD PTR [rdx+0x8]
  424d99:	mov    rsi,QWORD PTR [rbp+0x8]
  424d9d:	lea    rdx,[rip+0x2216c]        # 446f10 <fb_schema_table_missing@@Base+0x22c0>
  424da4:	xor    r9d,r9d
  424da7:	xor    r8d,r8d
  424daa:	mov    rdi,r15
  424dad:	mov    ebx,0x1
  424db2:	call   41cab0 <__flatcc_error_report@@Base>
  424db7:	mov    WORD PTR [rbp+0x28],bx
  424dbb:	jmp    424345 <__flatcc_fb_build_schema@@Base+0x615>
  424dc0:	mov    rbx,rax
  424dc3:	jmp    4243f8 <__flatcc_fb_build_schema@@Base+0x6c8>
  424dc8:	mov    rbx,QWORD PTR [rsp]
  424dcc:	cmp    WORD PTR [rbx+0x58],0x1
  424dd1:	je     4244d2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424dd7:	mov    rsi,rbx
  424dda:	mov    rdi,r15
  424ddd:	call   421f90 <__flatcc_fb_clear_parser@@Base+0x12f0>
  424de2:	test   eax,eax
  424de4:	je     4244d2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424dea:	mov    rax,QWORD PTR [rsp]
  424dee:	mov    edx,0x1
  424df3:	mov    WORD PTR [rbx+0x58],dx
  424df7:	mov    rax,QWORD PTR [rax]
  424dfa:	test   rax,rax
  424dfd:	mov    QWORD PTR [rsp],rax
  424e01:	jne    4242ac <__flatcc_fb_build_schema@@Base+0x57c>
  424e07:	jmp    4244e6 <__flatcc_fb_build_schema@@Base+0x7b6>
  424e0c:	nop    DWORD PTR [rax+0x0]
  424e10:	cmp    ecx,0x1
  424e13:	cmovne rax,rsi
  424e17:	test   r14,r14
  424e1a:	je     4244a8 <__flatcc_fb_build_schema@@Base+0x778>
  424e20:	mov    rdi,QWORD PTR [r15+0x260]
  424e27:	test   rdi,rdi
  424e2a:	je     4244a8 <__flatcc_fb_build_schema@@Base+0x778>
  424e30:	neg    edx
  424e32:	mov    rsi,rax
  424e35:	movsxd rdx,edx
  424e38:	call   41b7e0 <fb_scope_table_find@@Base>
  424e3d:	test   rax,rax
  424e40:	je     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  424e46:	mov    rcx,QWORD PTR [r12+0x8]
  424e4b:	lea    rdi,[rax+0x8]
  424e4f:	mov    rdx,QWORD PTR [rcx+0x8]
  424e53:	mov    rsi,QWORD PTR [rcx]
  424e56:	call   41a830 <fb_symbol_table_find@@Base>
  424e5b:	test   rax,rax
  424e5e:	je     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  424e64:	cmp    WORD PTR [rax+0x10],0x4
  424e69:	ja     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  424e6f:	mov    rsi,QWORD PTR [rax+0x20]
  424e73:	mov    rdi,QWORD PTR [rsp+0x10]
  424e78:	mov    QWORD PTR [rsp+0x20],rax
  424e7d:	call   41a0d0 <ptr_set_find_item@@Base>
  424e82:	test   rax,rax
  424e85:	mov    rdx,QWORD PTR [rsp+0x20]
  424e8a:	je     4244a4 <__flatcc_fb_build_schema@@Base+0x774>
  424e90:	cmp    WORD PTR [rdx+0x10],0x0
  424e95:	jne    424d95 <__flatcc_fb_build_schema@@Base+0x1065>
  424e9b:	mov    rsi,QWORD PTR [rbp+0x18]
  424e9f:	mov    rax,QWORD PTR [rsp]
  424ea3:	mov    r11d,0xe
  424ea9:	mov    QWORD PTR [rbp+0x30],rdx
  424ead:	mov    WORD PTR [rbp+0x40],r11w
  424eb2:	test   rsi,rsi
  424eb5:	mov    rbx,QWORD PTR [rax+0x18]
  424eb9:	je     424f98 <__flatcc_fb_build_schema@@Base+0x1268>
  424ebf:	mov    r12,rsi
  424ec2:	xor    edx,edx
  424ec4:	jmp    424ed5 <__flatcc_fb_build_schema@@Base+0x11a5>
  424ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ed0:	mov    edx,ecx
  424ed2:	mov    r12,rax
  424ed5:	mov    rax,QWORD PTR [r12]
  424ed9:	lea    ecx,[rdx+0x1]
  424edc:	test   rax,rax
  424edf:	jne    424ed0 <__flatcc_fb_build_schema@@Base+0x11a0>
  424ee1:	test   rbx,rbx
  424ee4:	je     42503a <__flatcc_fb_build_schema@@Base+0x130a>
  424eea:	cmp    ecx,0x1
  424eed:	jne    42503a <__flatcc_fb_build_schema@@Base+0x130a>
  424ef3:	mov    rax,QWORD PTR [r12+0x8]
  424ef8:	lea    rdi,[rbx+0x8]
  424efc:	mov    rdx,QWORD PTR [rax+0x8]
  424f00:	mov    rsi,QWORD PTR [rax]
  424f03:	call   41a830 <fb_symbol_table_find@@Base>
  424f08:	test   rax,rax
  424f0b:	mov    r13,rax
  424f0e:	je     424f1b <__flatcc_fb_build_schema@@Base+0x11eb>
  424f10:	cmp    WORD PTR [rax+0x10],0x4
  424f15:	jbe    424fc0 <__flatcc_fb_build_schema@@Base+0x1290>
  424f1b:	mov    rax,QWORD PTR [rbx]
  424f1e:	test   rax,rax
  424f21:	je     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  424f23:	xor    edx,edx
  424f25:	nop    DWORD PTR [rax]
  424f28:	mov    rax,QWORD PTR [rax]
  424f2b:	add    edx,0x1
  424f2e:	test   rax,rax
  424f31:	jne    424f28 <__flatcc_fb_build_schema@@Base+0x11f8>
  424f33:	mov    r13d,0x1
  424f39:	sub    r13d,edx
  424f3c:	jmp    424f69 <__flatcc_fb_build_schema@@Base+0x1239>
  424f3e:	xchg   ax,ax
  424f40:	test   r14,r14
  424f43:	je     424f65 <__flatcc_fb_build_schema@@Base+0x1235>
  424f45:	mov    rdi,QWORD PTR [r15+0x260]
  424f4c:	test   rdi,rdi
  424f4f:	je     424f65 <__flatcc_fb_build_schema@@Base+0x1235>
  424f51:	mov    rsi,QWORD PTR [rbx]
  424f54:	movsxd rdx,r13d
  424f57:	call   41b7e0 <fb_scope_table_find@@Base>
  424f5c:	test   rax,rax
  424f5f:	jne    425012 <__flatcc_fb_build_schema@@Base+0x12e2>
  424f65:	add    r13d,0x1
  424f69:	test   r13d,r13d
  424f6c:	jne    424f40 <__flatcc_fb_build_schema@@Base+0x1210>
  424f6e:	test   r14,r14
  424f71:	je     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  424f73:	mov    rdi,QWORD PTR [r15+0x260]
  424f7a:	test   rdi,rdi
  424f7d:	je     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  424f7f:	xor    edx,edx
  424f81:	xor    esi,esi
  424f83:	call   41b7e0 <fb_scope_table_find@@Base>
  424f88:	test   rax,rax
  424f8b:	mov    rbx,rax
  424f8e:	jne    424ef3 <__flatcc_fb_build_schema@@Base+0x11c3>
  424f94:	mov    rsi,QWORD PTR [rbp+0x18]
  424f98:	lea    rdx,[rip+0x21fa9]        # 446f48 <fb_schema_table_missing@@Base+0x22f8>
  424f9f:	mov    rcx,rbp
  424fa2:	mov    rdi,r15
  424fa5:	call   41de60 <error_ref_sym@@Base>
  424faa:	mov    r10d,0x1
  424fb0:	mov    WORD PTR [rbp+0x28],r10w
  424fb5:	jmp    424345 <__flatcc_fb_build_schema@@Base+0x615>
  424fba:	nop    WORD PTR [rax+rax*1+0x0]
  424fc0:	mov    rsi,QWORD PTR [rax+0x20]
  424fc4:	mov    rdi,QWORD PTR [rsp+0x10]
  424fc9:	call   41a0d0 <ptr_set_find_item@@Base>
  424fce:	test   rax,rax
  424fd1:	je     424f1b <__flatcc_fb_build_schema@@Base+0x11eb>
  424fd7:	mov    rdx,r13
  424fda:	cmp    WORD PTR [rdx+0x10],0x0
  424fdf:	je     4250c5 <__flatcc_fb_build_schema@@Base+0x1395>
  424fe5:	mov    rcx,QWORD PTR [rdx+0x8]
  424fe9:	mov    rsi,QWORD PTR [rbp+0x8]
  424fed:	lea    rdx,[rip+0x21f8c]        # 446f80 <fb_schema_table_missing@@Base+0x2330>
  424ff4:	xor    r9d,r9d
  424ff7:	xor    r8d,r8d
  424ffa:	mov    rdi,r15
  424ffd:	call   41cab0 <__flatcc_error_report@@Base>
  425002:	mov    r9d,0x1
  425008:	mov    WORD PTR [rbp+0x28],r9w
  42500d:	jmp    424345 <__flatcc_fb_build_schema@@Base+0x615>
  425012:	mov    rbx,rax
  425015:	jmp    424ef3 <__flatcc_fb_build_schema@@Base+0x11c3>
  42501a:	mov    rsi,QWORD PTR [rbp+0x8]
  42501e:	lea    rdx,[rip+0x21e33]        # 446e58 <fb_schema_table_missing@@Base+0x2208>
  425025:	xor    r9d,r9d
  425028:	xor    r8d,r8d
  42502b:	xor    ecx,ecx
  42502d:	mov    rdi,r15
  425030:	call   41cab0 <__flatcc_error_report@@Base>
  425035:	jmp    42437f <__flatcc_fb_build_schema@@Base+0x64f>
  42503a:	cmp    ecx,0x1
  42503d:	cmovne rax,rsi
  425041:	test   r14,r14
  425044:	je     424f98 <__flatcc_fb_build_schema@@Base+0x1268>
  42504a:	mov    rdi,QWORD PTR [r15+0x260]
  425051:	test   rdi,rdi
  425054:	je     424f98 <__flatcc_fb_build_schema@@Base+0x1268>
  42505a:	neg    edx
  42505c:	mov    rsi,rax
  42505f:	movsxd rdx,edx
  425062:	call   41b7e0 <fb_scope_table_find@@Base>
  425067:	test   rax,rax
  42506a:	je     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  425070:	mov    rcx,QWORD PTR [r12+0x8]
  425075:	lea    rdi,[rax+0x8]
  425079:	mov    rdx,QWORD PTR [rcx+0x8]
  42507d:	mov    rsi,QWORD PTR [rcx]
  425080:	call   41a830 <fb_symbol_table_find@@Base>
  425085:	test   rax,rax
  425088:	je     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  42508e:	cmp    WORD PTR [rax+0x10],0x4
  425093:	ja     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  425099:	mov    rsi,QWORD PTR [rax+0x20]
  42509d:	mov    rdi,QWORD PTR [rsp+0x10]
  4250a2:	mov    QWORD PTR [rsp+0x20],rax
  4250a7:	call   41a0d0 <ptr_set_find_item@@Base>
  4250ac:	test   rax,rax
  4250af:	mov    rdx,QWORD PTR [rsp+0x20]
  4250b4:	je     424f94 <__flatcc_fb_build_schema@@Base+0x1264>
  4250ba:	cmp    WORD PTR [rdx+0x10],0x0
  4250bf:	jne    424fe5 <__flatcc_fb_build_schema@@Base+0x12b5>
  4250c5:	mov    r13,QWORD PTR [rbp+0x60]
  4250c9:	mov    rdi,QWORD PTR [rsp+0x18]
  4250ce:	xor    eax,eax
  4250d0:	mov    r8d,0xe
  4250d6:	mov    ecx,0xc
  4250db:	xor    r12d,r12d
  4250de:	mov    WORD PTR [rbp+0x28],r8w
  4250e3:	mov    QWORD PTR [rbp+0x18],rdx
  4250e7:	test   r13,r13
  4250ea:	mov    QWORD PTR [rbp+0x80],0x0
  4250f5:	rep stos QWORD PTR es:[rdi],rax
  4250f8:	je     4251d6 <__flatcc_fb_build_schema@@Base+0x14a6>
  4250fe:	mov    rax,r13
  425101:	mov    ebx,0x64
  425106:	mov    r13,rbp
  425109:	mov    rbp,rax
  42510c:	jmp    425159 <__flatcc_fb_build_schema@@Base+0x1429>
  42510e:	mov    rsi,QWORD PTR [rsp+0x18]
  425113:	mov    edx,0x1
  425118:	shlx   edx,edx,eax
  42511d:	or     r12d,edx
  425120:	lea    rdx,[rsi+rax*8]
  425124:	cmp    QWORD PTR [rdx],0x0
  425128:	je     425352 <__flatcc_fb_build_schema@@Base+0x1622>
  42512e:	mov    rsi,QWORD PTR [rbp+0x8]
  425132:	lea    rdx,[rip+0x20da7]        # 445ee0 <fb_schema_table_missing@@Base+0x1290>
  425139:	xor    r9d,r9d
  42513c:	xor    r8d,r8d
  42513f:	xor    ecx,ecx
  425141:	mov    rdi,r15
  425144:	call   41cab0 <__flatcc_error_report@@Base>
  425149:	mov    rbp,QWORD PTR [rbp+0x0]
  42514d:	sub    ebx,0x1
  425150:	test   rbp,rbp
  425153:	je     4251b0 <__flatcc_fb_build_schema@@Base+0x1480>
  425155:	test   ebx,ebx
  425157:	je     4251b0 <__flatcc_fb_build_schema@@Base+0x1480>
  425159:	mov    rax,QWORD PTR [rbp+0x8]
  42515d:	mov    rsi,QWORD PTR [r15+0x260]
  425164:	mov    rdx,QWORD PTR [rax+0x8]
  425168:	lea    rdi,[rsi+0x20]
  42516c:	mov    rsi,QWORD PTR [rax]
  42516f:	call   42b250 <fb_name_table_find@@Base>
  425174:	test   rax,rax
  425177:	je     4253f0 <__flatcc_fb_build_schema@@Base+0x16c0>
  42517d:	movsxd rax,DWORD PTR [rax+0x20]
  425181:	test   eax,eax
  425183:	je     425149 <__flatcc_fb_build_schema@@Base+0x1419>
  425185:	cmp    al,0x2
  425187:	je     42510e <__flatcc_fb_build_schema@@Base+0x13de>
  425189:	mov    rsi,QWORD PTR [rbp+0x8]
  42518d:	lea    rdx,[rip+0x20d1c]        # 445eb0 <fb_schema_table_missing@@Base+0x1260>
  425194:	xor    r9d,r9d
  425197:	xor    r8d,r8d
  42519a:	xor    ecx,ecx
  42519c:	mov    rdi,r15
  42519f:	sub    ebx,0x1
  4251a2:	call   41cab0 <__flatcc_error_report@@Base>
  4251a7:	mov    rbp,QWORD PTR [rbp+0x0]
  4251ab:	test   rbp,rbp
  4251ae:	jne    425155 <__flatcc_fb_build_schema@@Base+0x1425>
  4251b0:	mov    rax,rbp
  4251b3:	mov    rbp,r13
  4251b6:	test   rax,rax
  4251b9:	je     4251d6 <__flatcc_fb_build_schema@@Base+0x14a6>
  4251bb:	mov    rsi,QWORD PTR [rax+0x8]
  4251bf:	lea    rdx,[rip+0x21edd]        # 4470a3 <fb_schema_table_missing@@Base+0x2453>
  4251c6:	xor    r9d,r9d
  4251c9:	xor    r8d,r8d
  4251cc:	xor    ecx,ecx
  4251ce:	mov    rdi,r15
  4251d1:	call   41cab0 <__flatcc_error_report@@Base>
  4251d6:	mov    WORD PTR [rbp+0x70],r12w
  4251db:	jmp    424345 <__flatcc_fb_build_schema@@Base+0x615>
  4251e0:	mov    r9,QWORD PTR [r13+0x28]
  4251e4:	mov    ecx,0x9
  4251e9:	mov    rdi,r11
  4251ec:	rep stos QWORD PTR es:[rdi],rax
  4251ef:	lea    rdi,[rsp+0x90]
  4251f7:	mov    ecx,0x9
  4251fc:	test   r9,r9
  4251ff:	rep stos QWORD PTR es:[rdi],rax
  425202:	je     4258ea <__flatcc_fb_build_schema@@Base+0x1bba>
  425208:	mov    rdi,r9
  42520b:	nop    DWORD PTR [rax+rax*1+0x0]
  425210:	movzx  ecx,WORD PTR [rdi+0x28]
  425214:	movzx  edx,WORD PTR [rdi+0x72]
  425218:	cmp    cx,0xf
  42521c:	ja     425268 <__flatcc_fb_build_schema@@Base+0x1538>
  42521e:	shlx   rcx,r8,rcx
  425223:	test   ecx,0x8680
  425229:	jne    425260 <__flatcc_fb_build_schema@@Base+0x1530>
  42522b:	test   cl,0x2
  42522e:	jne    42562d <__flatcc_fb_build_schema@@Base+0x18fd>
  425234:	and    ch,0x40
  425237:	je     425268 <__flatcc_fb_build_schema@@Base+0x1538>
  425239:	mov    rcx,QWORD PTR [rdi+0x18]
  42523d:	movzx  edx,WORD PTR [rcx+0x10]
  425241:	cmp    dx,0x3
  425245:	je     425346 <__flatcc_fb_build_schema@@Base+0x1616>
  42524b:	cmp    dx,0x4
  42524f:	je     425260 <__flatcc_fb_build_schema@@Base+0x1530>
  425251:	cmp    dx,0x1
  425255:	je     425346 <__flatcc_fb_build_schema@@Base+0x1616>
  42525b:	nop    DWORD PTR [rax+rax*1+0x0]
  425260:	movzx  edx,WORD PTR [r15+0x12c]
  425268:	test   dx,dx
  42526b:	je     4258cb <__flatcc_fb_build_schema@@Base+0x1b9b>
  425271:	xor    ecx,ecx
  425273:	shr    dx,1
  425276:	je     42533f <__flatcc_fb_build_schema@@Base+0x160f>
  42527c:	nop    DWORD PTR [rax+0x0]
  425280:	add    ecx,0x1
  425283:	shr    dx,1
  425286:	jne    425280 <__flatcc_fb_build_schema@@Base+0x1550>
  425288:	cmp    cx,0x7
  42528c:	cmova  ecx,esi
  42528f:	movzx  edx,cx
  425292:	movsxd rdx,edx
  425295:	cmp    QWORD PTR [rsp+rdx*8+0x40],0x0
  42529b:	je     425335 <__flatcc_fb_build_schema@@Base+0x1605>
  4252a1:	mov    rcx,QWORD PTR [rsp+rdx*8+0x90]
  4252a9:	mov    QWORD PTR [rcx],rdi
  4252ac:	lea    rcx,[rdi+0x98]
  4252b3:	mov    rdi,QWORD PTR [rdi]
  4252b6:	mov    QWORD PTR [rsp+rdx*8+0x90],rcx
  4252be:	test   rdi,rdi
  4252c1:	jne    425210 <__flatcc_fb_build_schema@@Base+0x14e0>
  4252c7:	mov    r9,QWORD PTR [rsp+0x78]
  4252cc:	mov    QWORD PTR [rsp+0xd0],rbx
  4252d4:	mov    rdi,rbx
  4252d7:	mov    edx,0x8
  4252dc:	jmp    4252ed <__flatcc_fb_build_schema@@Base+0x15bd>
  4252de:	xchg   ax,ax
  4252e0:	sub    edx,0x2
  4252e3:	movzx  edx,dx
  4252e6:	mov    r9,QWORD PTR [rsp+rdx*8+0x40]
  4252eb:	mov    edx,ecx
  4252ed:	test   r9,r9
  4252f0:	lea    ecx,[rdx-0x1]
  4252f3:	jne    425313 <__flatcc_fb_build_schema@@Base+0x15e3>
  4252f5:	test   cx,cx
  4252f8:	jne    4252e0 <__flatcc_fb_build_schema@@Base+0x15b0>
  4252fa:	mov    rdx,QWORD PTR [rsp+0x40]
  4252ff:	mov    QWORD PTR [rdi],rdx
  425302:	mov    rdx,QWORD PTR [rsp+0x80]
  42530a:	mov    QWORD PTR [r13+0x30],rdx
  42530e:	jmp    424072 <__flatcc_fb_build_schema@@Base+0x342>
  425313:	test   cx,cx
  425316:	mov    QWORD PTR [rdi],r9
  425319:	je     425302 <__flatcc_fb_build_schema@@Base+0x15d2>
  42531b:	sub    edx,0x2
  42531e:	movzx  edi,cx
  425321:	movzx  edx,dx
  425324:	mov    rdi,QWORD PTR [rsp+rdi*8+0x90]
  42532c:	mov    r9,QWORD PTR [rsp+rdx*8+0x40]
  425331:	mov    edx,ecx
  425333:	jmp    4252ed <__flatcc_fb_build_schema@@Base+0x15bd>
  425335:	mov    QWORD PTR [rsp+rdx*8+0x40],rdi
  42533a:	jmp    4252ac <__flatcc_fb_build_schema@@Base+0x157c>
  42533f:	xor    edx,edx
  425341:	jmp    425292 <__flatcc_fb_build_schema@@Base+0x1562>
  425346:	movzx  edx,WORD PTR [rcx+0xb0]
  42534d:	jmp    425268 <__flatcc_fb_build_schema@@Base+0x1538>
  425352:	lea    rsi,[rip+0x22107]        # 447460 <fb_schema_table_missing@@Base+0x2810>
  425359:	mov    QWORD PTR [rdx],rbp
  42535c:	mov    eax,DWORD PTR [rsi+rax*4]
  42535f:	test   eax,eax
  425361:	jne    425481 <__flatcc_fb_build_schema@@Base+0x1751>
  425367:	cmp    WORD PTR [rbp+0x20],0x0
  42536c:	je     425149 <__flatcc_fb_build_schema@@Base+0x1419>
  425372:	mov    rsi,QWORD PTR [rbp+0x8]
  425376:	lea    rdx,[rip+0x20b8b]        # 445f08 <fb_schema_table_missing@@Base+0x12b8>
  42537d:	xor    r9d,r9d
  425380:	xor    r8d,r8d
  425383:	xor    ecx,ecx
  425385:	mov    rdi,r15
  425388:	call   41cab0 <__flatcc_error_report@@Base>
  42538d:	jmp    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  425392:	mov    rbx,rax
  425395:	jmp    4240c2 <__flatcc_fb_build_schema@@Base+0x392>
  42539a:	mov    rsi,QWORD PTR [rax+0x20]
  42539e:	mov    rdi,QWORD PTR [rsp+0x10]
  4253a3:	call   41a0d0 <ptr_set_find_item@@Base>
  4253a8:	test   rax,rax
  4253ab:	je     4240e9 <__flatcc_fb_build_schema@@Base+0x3b9>
  4253b1:	mov    edx,DWORD PTR [r15+0x11c]
  4253b8:	mov    QWORD PTR [r15+0x250],r13
  4253bf:	test   edx,edx
  4253c1:	je     425555 <__flatcc_fb_build_schema@@Base+0x1825>
  4253c7:	cmp    WORD PTR [r13+0x10],0x1
  4253cd:	jbe    42418f <__flatcc_fb_build_schema@@Base+0x45f>
  4253d3:	mov    rsi,QWORD PTR [r15+0x248]
  4253da:	lea    rdx,[rip+0x21bd7]        # 446fb8 <fb_schema_table_missing@@Base+0x2368>
  4253e1:	xor    ecx,ecx
  4253e3:	mov    rdi,r15
  4253e6:	call   41de60 <error_ref_sym@@Base>
  4253eb:	jmp    42418f <__flatcc_fb_build_schema@@Base+0x45f>
  4253f0:	mov    rsi,QWORD PTR [rbp+0x8]
  4253f4:	lea    rdx,[rip+0x20a95]        # 445e90 <fb_schema_table_missing@@Base+0x1240>
  4253fb:	xor    r9d,r9d
  4253fe:	xor    r8d,r8d
  425401:	xor    ecx,ecx
  425403:	mov    rdi,r15
  425406:	call   41cab0 <__flatcc_error_report@@Base>
  42540b:	jmp    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  425410:	mov    rsi,QWORD PTR [rbp+0x8]
  425414:	lea    rdx,[rip+0x210fd]        # 446518 <fb_schema_table_missing@@Base+0x18c8>
  42541b:	xor    r9d,r9d
  42541e:	xor    r8d,r8d
  425421:	xor    ecx,ecx
  425423:	mov    rdi,r15
  425426:	mov    r13d,0x1
  42542c:	call   41cab0 <__flatcc_error_report@@Base>
  425431:	mov    rax,QWORD PTR [rsp]
  425435:	mov    WORD PTR [rax+0x58],r13w
  42543a:	mov    rax,QWORD PTR [rsp]
  42543e:	mov    rax,QWORD PTR [rax]
  425441:	test   rax,rax
  425444:	mov    QWORD PTR [rsp],rax
  425448:	jne    4242ac <__flatcc_fb_build_schema@@Base+0x57c>
  42544e:	jmp    4244e6 <__flatcc_fb_build_schema@@Base+0x7b6>
  425453:	cmp    WORD PTR [r12+0x20],0x2
  42545a:	je     42457a <__flatcc_fb_build_schema@@Base+0x84a>
  425460:	mov    rsi,QWORD PTR [r12+0x8]
  425465:	lea    rdx,[rip+0x20ac4]        # 445f30 <fb_schema_table_missing@@Base+0x12e0>
  42546c:	xor    r9d,r9d
  42546f:	xor    r8d,r8d
  425472:	xor    ecx,ecx
  425474:	mov    rdi,r15
  425477:	call   41cab0 <__flatcc_error_report@@Base>
  42547c:	jmp    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  425481:	cmp    eax,0x2
  425484:	je     425674 <__flatcc_fb_build_schema@@Base+0x1944>
  42548a:	cmp    eax,0x5
  42548d:	jne    4257c0 <__flatcc_fb_build_schema@@Base+0x1a90>
  425493:	cmp    WORD PTR [rbp+0x20],0x5
  425498:	je     425149 <__flatcc_fb_build_schema@@Base+0x1419>
  42549e:	mov    rsi,QWORD PTR [rbp+0x8]
  4254a2:	lea    rdx,[rip+0x20aaf]        # 445f58 <fb_schema_table_missing@@Base+0x1308>
  4254a9:	xor    r9d,r9d
  4254ac:	xor    r8d,r8d
  4254af:	xor    ecx,ecx
  4254b1:	mov    rdi,r15
  4254b4:	call   41cab0 <__flatcc_error_report@@Base>
  4254b9:	jmp    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  4254be:	xor    eax,eax
  4254c0:	mov    WORD PTR [rbp+0x70],ax
  4254c4:	movzx  eax,WORD PTR [rbp+0x28]
  4254c8:	cmp    ax,0x8
  4254cc:	jne    4247f6 <__flatcc_fb_build_schema@@Base+0xac6>
  4254d2:	jmp    424a85 <__flatcc_fb_build_schema@@Base+0xd55>
  4254d7:	test   BYTE PTR [rbp+0x70],0x80
  4254db:	je     424a85 <__flatcc_fb_build_schema@@Base+0xd55>
  4254e1:	mov    rsi,QWORD PTR [rbp+0x8]
  4254e5:	lea    rdx,[rip+0x217fc]        # 446ce8 <fb_schema_table_missing@@Base+0x2098>
  4254ec:	xor    r8d,r8d
  4254ef:	xor    r9d,r9d
  4254f2:	xor    ecx,ecx
  4254f4:	mov    rdi,r15
  4254f7:	mov    r13,QWORD PTR [rsp+0x18]
  4254fc:	call   41cab0 <__flatcc_error_report@@Base>
  425501:	mov    r8d,0x1
  425507:	mov    WORD PTR [rbp+0x28],r8w
  42550c:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  425511:	nop    DWORD PTR [rax+0x0]
  425518:	cmp    eax,0x4
  42551b:	jne    42584e <__flatcc_fb_build_schema@@Base+0x1b1e>
  425521:	movzx  eax,WORD PTR [r12+0x20]
  425527:	sub    eax,0x4
  42552a:	cmp    ax,0x1
  42552e:	jbe    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  425534:	mov    rsi,QWORD PTR [r12+0x8]
  425539:	lea    rdx,[rip+0x20a48]        # 445f88 <fb_schema_table_missing@@Base+0x1338>
  425540:	xor    r9d,r9d
  425543:	xor    r8d,r8d
  425546:	xor    ecx,ecx
  425548:	mov    rdi,r15
  42554b:	call   41cab0 <__flatcc_error_report@@Base>
  425550:	jmp    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  425555:	cmp    WORD PTR [r13+0x10],0x0
  42555b:	je     42418f <__flatcc_fb_build_schema@@Base+0x45f>
  425561:	mov    rsi,QWORD PTR [r15+0x248]
  425568:	lea    rdx,[rip+0x21cb3]        # 447222 <fb_schema_table_missing@@Base+0x25d2>
  42556f:	xor    ecx,ecx
  425571:	mov    rdi,r15
  425574:	call   41de60 <error_ref_sym@@Base>
  425579:	jmp    42418f <__flatcc_fb_build_schema@@Base+0x45f>
  42557e:	cmp    ecx,0x1
  425581:	cmovne rax,rsi
  425585:	test   r14,r14
  425588:	je     424173 <__flatcc_fb_build_schema@@Base+0x443>
  42558e:	mov    rdi,QWORD PTR [r15+0x260]
  425595:	test   rdi,rdi
  425598:	je     424173 <__flatcc_fb_build_schema@@Base+0x443>
  42559e:	neg    edx
  4255a0:	mov    rsi,rax
  4255a3:	movsxd rdx,edx
  4255a6:	call   41b7e0 <fb_scope_table_find@@Base>
  4255ab:	test   rax,rax
  4255ae:	je     42416c <__flatcc_fb_build_schema@@Base+0x43c>
  4255b4:	mov    rcx,QWORD PTR [rbp+0x8]
  4255b8:	lea    rdi,[rax+0x8]
  4255bc:	mov    rdx,QWORD PTR [rcx+0x8]
  4255c0:	mov    rsi,QWORD PTR [rcx]
  4255c3:	call   41a830 <fb_symbol_table_find@@Base>
  4255c8:	test   rax,rax
  4255cb:	mov    r13,rax
  4255ce:	je     42416c <__flatcc_fb_build_schema@@Base+0x43c>
  4255d4:	cmp    WORD PTR [rax+0x10],0x4
  4255d9:	jbe    42569f <__flatcc_fb_build_schema@@Base+0x196f>
  4255df:	mov    QWORD PTR [r15+0x250],0x0
  4255ea:	mov    rsi,QWORD PTR [r15+0x248]
  4255f1:	jmp    42417e <__flatcc_fb_build_schema@@Base+0x44e>
  4255f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425600:	mov    edi,DWORD PTR [r15+0x13c]
  425607:	test   edi,edi
  425609:	je     42419a <__flatcc_fb_build_schema@@Base+0x46a>
  42560f:	lea    rdx,[rip+0x21be1]        # 4471f7 <fb_schema_table_missing@@Base+0x25a7>
  425616:	xor    r9d,r9d
  425619:	xor    r8d,r8d
  42561c:	xor    ecx,ecx
  42561e:	xor    esi,esi
  425620:	mov    rdi,r15
  425623:	call   41cab0 <__flatcc_error_report@@Base>
  425628:	jmp    42419a <__flatcc_fb_build_schema@@Base+0x46a>
  42562d:	mov    QWORD PTR [rsp+0x38],0x0
  425636:	mov    rcx,r10
  425639:	jmp    42563e <__flatcc_fb_build_schema@@Base+0x190e>
  42563b:	mov    r9,rdx
  42563e:	mov    rdx,QWORD PTR [r9]
  425641:	mov    QWORD PTR [rcx],r9
  425644:	lea    rcx,[r9+0x98]
  42564b:	test   rdx,rdx
  42564e:	jne    42563b <__flatcc_fb_build_schema@@Base+0x190b>
  425650:	mov    QWORD PTR [r9+0x98],0x0
  42565b:	mov    rdx,QWORD PTR [rsp+0x38]
  425660:	jmp    42530a <__flatcc_fb_build_schema@@Base+0x15da>
  425665:	xor    esi,esi
  425667:	mov    WORD PTR [r13+0xa4],si
  42566f:	jmp    424648 <__flatcc_fb_build_schema@@Base+0x918>
  425674:	cmp    WORD PTR [rbp+0x20],0x2
  425679:	je     425149 <__flatcc_fb_build_schema@@Base+0x1419>
  42567f:	mov    rsi,QWORD PTR [rbp+0x8]
  425683:	lea    rdx,[rip+0x208a6]        # 445f30 <fb_schema_table_missing@@Base+0x12e0>
  42568a:	xor    r9d,r9d
  42568d:	xor    r8d,r8d
  425690:	xor    ecx,ecx
  425692:	mov    rdi,r15
  425695:	call   41cab0 <__flatcc_error_report@@Base>
  42569a:	jmp    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  42569f:	mov    rsi,QWORD PTR [rax+0x20]
  4256a3:	mov    rdi,QWORD PTR [rsp+0x10]
  4256a8:	call   41a0d0 <ptr_set_find_item@@Base>
  4256ad:	test   rax,rax
  4256b0:	jne    4253b1 <__flatcc_fb_build_schema@@Base+0x1681>
  4256b6:	jmp    42416c <__flatcc_fb_build_schema@@Base+0x43c>
  4256bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4256c0:	mov    rsi,QWORD PTR [rbp+0x8]
  4256c4:	lea    rdx,[rip+0x2157d]        # 446c48 <fb_schema_table_missing@@Base+0x1ff8>
  4256cb:	xor    r9d,r9d
  4256ce:	xor    r8d,r8d
  4256d1:	xor    ecx,ecx
  4256d3:	mov    rdi,r15
  4256d6:	mov    r13,QWORD PTR [rsp+0x18]
  4256db:	call   41cab0 <__flatcc_error_report@@Base>
  4256e0:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  4256e5:	mov    rsi,QWORD PTR [r13+0x8]
  4256e9:	lea    rdx,[rip+0x21500]        # 446bf0 <fb_schema_table_missing@@Base+0x1fa0>
  4256f0:	xor    r9d,r9d
  4256f3:	xor    r8d,r8d
  4256f6:	xor    ecx,ecx
  4256f8:	mov    rdi,r15
  4256fb:	call   41cab0 <__flatcc_error_report@@Base>
  425700:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  425705:	mov    rax,QWORD PTR [r15+0x240]
  42570c:	test   rax,rax
  42570f:	jne    423fd2 <__flatcc_fb_build_schema@@Base+0x2a2>
  425715:	mov    QWORD PTR [r15+0x240],0x0
  425720:	jmp    42407b <__flatcc_fb_build_schema@@Base+0x34b>
  425725:	cmp    eax,0x6
  425728:	jne    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  42572e:	cmp    WORD PTR [r12+0x20],0x6
  425735:	je     42457a <__flatcc_fb_build_schema@@Base+0x84a>
  42573b:	mov    rsi,QWORD PTR [r12+0x8]
  425740:	lea    rdx,[rip+0x20869]        # 445fb0 <fb_schema_table_missing@@Base+0x1360>
  425747:	xor    r9d,r9d
  42574a:	xor    r8d,r8d
  42574d:	xor    ecx,ecx
  42574f:	mov    rdi,r15
  425752:	call   41cab0 <__flatcc_error_report@@Base>
  425757:	jmp    42457a <__flatcc_fb_build_schema@@Base+0x84a>
  42575c:	mov    rcx,QWORD PTR [rdx+0x8]
  425760:	mov    rsi,QWORD PTR [rbp+0x8]
  425764:	lea    rdx,[rip+0x21535]        # 446ca0 <fb_schema_table_missing@@Base+0x2050>
  42576b:	xor    r9d,r9d
  42576e:	xor    r8d,r8d
  425771:	mov    rdi,r15
  425774:	mov    r13,QWORD PTR [rsp+0x18]
  425779:	call   41cab0 <__flatcc_error_report@@Base>
  42577e:	mov    r11d,0x1
  425784:	mov    WORD PTR [rbp+0x28],r11w
  425789:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  42578e:	mov    rcx,QWORD PTR [rdx+0x8]
  425792:	mov    rsi,QWORD PTR [rbp+0x8]
  425796:	lea    rdx,[rip+0x21583]        # 446d20 <fb_schema_table_missing@@Base+0x20d0>
  42579d:	xor    r9d,r9d
  4257a0:	xor    r8d,r8d
  4257a3:	mov    rdi,r15
  4257a6:	mov    r13,QWORD PTR [rsp+0x18]
  4257ab:	call   41cab0 <__flatcc_error_report@@Base>
  4257b0:	mov    r9d,0x1
  4257b6:	mov    WORD PTR [rbp+0x28],r9w
  4257bb:	jmp    42423a <__flatcc_fb_build_schema@@Base+0x50a>
  4257c0:	cmp    eax,0x4
  4257c3:	jne    425815 <__flatcc_fb_build_schema@@Base+0x1ae5>
  4257c5:	movzx  eax,WORD PTR [rbp+0x20]
  4257c9:	sub    eax,0x4
  4257cc:	cmp    ax,0x1
  4257d0:	jbe    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  4257d6:	mov    rsi,QWORD PTR [rbp+0x8]
  4257da:	lea    rdx,[rip+0x207a7]        # 445f88 <fb_schema_table_missing@@Base+0x1338>
  4257e1:	xor    r9d,r9d
  4257e4:	xor    r8d,r8d
  4257e7:	xor    ecx,ecx
  4257e9:	mov    rdi,r15
  4257ec:	call   41cab0 <__flatcc_error_report@@Base>
  4257f1:	jmp    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  4257f6:	lea    rcx,[rip+0x21c43]        # 447440 <fb_schema_table_missing@@Base+0x27f0>
  4257fd:	lea    rsi,[rip+0x2042c]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  425804:	lea    rdi,[rip+0x213ad]        # 446bb8 <fb_schema_table_missing@@Base+0x1f68>
  42580b:	mov    edx,0x616
  425810:	call   4050f0 <__assert_fail@plt>
  425815:	cmp    eax,0x6
  425818:	jne    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  42581e:	cmp    WORD PTR [rbp+0x20],0x6
  425823:	je     425149 <__flatcc_fb_build_schema@@Base+0x1419>
  425829:	mov    rsi,QWORD PTR [rbp+0x8]
  42582d:	lea    rdx,[rip+0x2077c]        # 445fb0 <fb_schema_table_missing@@Base+0x1360>
  425834:	xor    r9d,r9d
  425837:	xor    r8d,r8d
  42583a:	xor    ecx,ecx
  42583c:	mov    rdi,r15
  42583f:	call   41cab0 <__flatcc_error_report@@Base>
  425844:	jmp    425149 <__flatcc_fb_build_schema@@Base+0x1419>
  425849:	call   4050d0 <__stack_chk_fail@plt>
  42584e:	cmp    eax,0x6
  425851:	jne    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  425857:	cmp    WORD PTR [r12+0x20],0x6
  42585e:	je     424753 <__flatcc_fb_build_schema@@Base+0xa23>
  425864:	mov    rsi,QWORD PTR [r12+0x8]
  425869:	lea    rdx,[rip+0x20740]        # 445fb0 <fb_schema_table_missing@@Base+0x1360>
  425870:	xor    r9d,r9d
  425873:	xor    r8d,r8d
  425876:	xor    ecx,ecx
  425878:	mov    rdi,r15
  42587b:	call   41cab0 <__flatcc_error_report@@Base>
  425880:	jmp    424753 <__flatcc_fb_build_schema@@Base+0xa23>
  425885:	mov    rax,QWORD PTR [rip+0x2a75c]        # 44ffe8 <stderr@GLIBC_2.2.5>
  42588c:	lea    rdx,[rip+0x770d]        # 42cfa0 <_IO_stdin_used@@Base+0xfa0>
  425893:	mov    esi,0x1
  425898:	mov    rdi,QWORD PTR [rax]
  42589b:	xor    eax,eax
  42589d:	call   4051f0 <__fprintf_chk@plt>
  4258a2:	mov    edi,0x1
  4258a7:	call   4051d0 <exit@plt>
  4258ac:	lea    rcx,[rip+0x21add]        # 447390 <fb_schema_table_missing@@Base+0x2740>
  4258b3:	lea    rsi,[rip+0x20376]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  4258ba:	lea    rdi,[rip+0x2187c]        # 44713d <fb_schema_table_missing@@Base+0x24ed>
  4258c1:	mov    edx,0x469
  4258c6:	call   4050f0 <__assert_fail@plt>
  4258cb:	lea    rcx,[rip+0x21a9e]        # 447370 <fb_schema_table_missing@@Base+0x2720>
  4258d2:	lea    rsi,[rip+0x20357]        # 445c30 <fb_schema_table_missing@@Base+0xfe0>
  4258d9:	lea    rdi,[rip+0x21911]        # 4471f1 <fb_schema_table_missing@@Base+0x25a1>
  4258e0:	mov    edx,0x5f1
  4258e5:	call   4050f0 <__assert_fail@plt>
  4258ea:	xor    r9d,r9d
  4258ed:	jmp    4252cc <__flatcc_fb_build_schema@@Base+0x159c>
  4258f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258fc:	nop    DWORD PTR [rax+0x0]

0000000000425900 <__flatcc_fb_coerce_scalar_type@@Base>:
  425900:	movzx  eax,WORD PTR [rcx+0x10]
  425904:	test   ax,ax
  425907:	je     4259a8 <__flatcc_fb_coerce_scalar_type@@Base+0xa8>
  42590d:	cmp    ax,0x4
  425911:	push   rbx
  425912:	mov    rbx,rcx
  425915:	je     425970 <__flatcc_fb_coerce_scalar_type@@Base+0x70>
  425917:	cmp    ax,0x1
  42591b:	je     4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425921:	cmp    ax,0x6
  425925:	jne    425983 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  425927:	cmp    edx,0x5
  42592a:	je     425983 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  42592c:	mov    r9d,DWORD PTR [rdi+0xfc]
  425933:	test   r9d,r9d
  425936:	je     425983 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  425938:	movzx  eax,BYTE PTR [rcx]
  42593b:	mov    r8d,0x5
  425941:	mov    WORD PTR [rcx+0x10],r8w
  425946:	cmp    rax,0x1
  42594a:	mov    QWORD PTR [rcx],rax
  42594d:	ja     4260a3 <__flatcc_fb_coerce_scalar_type@@Base+0x7a3>
  425953:	cmp    edx,0xb
  425956:	ja     425c88 <__flatcc_fb_coerce_scalar_type@@Base+0x388>
  42595c:	lea    rcx,[rip+0x21fdd]        # 447940 <fb_schema_table_missing@@Base+0x2cf0>
  425963:	mov    edx,edx
  425965:	movsxd rax,DWORD PTR [rcx+rdx*4]
  425969:	add    rax,rcx
  42596c:	jmp    rax
  42596e:	xchg   ax,ax
  425970:	mov    rax,QWORD PTR [rcx]
  425973:	test   rax,rax
  425976:	js     425983 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  425978:	mov    r10d,0x5
  42597e:	mov    WORD PTR [rcx+0x10],r10w
  425983:	cmp    edx,0xb
  425986:	ja     425c88 <__flatcc_fb_coerce_scalar_type@@Base+0x388>
  42598c:	lea    rcx,[rip+0x21fdd]        # 447970 <fb_schema_table_missing@@Base+0x2d20>
  425993:	mov    edx,edx
  425995:	movsxd rax,DWORD PTR [rcx+rdx*4]
  425999:	add    rax,rcx
  42599c:	jmp    rax
  42599e:	xchg   ax,ax
  4259a0:	xor    eax,eax
  4259a2:	pop    rbx
  4259a3:	ret    
  4259a4:	nop    DWORD PTR [rax+0x0]
  4259a8:	xor    eax,eax
  4259aa:	ret    
  4259ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4259b0:	cmp    WORD PTR [rbx+0x10],0x5
  4259b5:	je     4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  4259b7:	mov    rsi,QWORD PTR [rsi+0x8]
  4259bb:	lea    rdx,[rip+0x21b4e]        # 447510 <fb_schema_table_missing@@Base+0x28c0>
  4259c2:	xor    r9d,r9d
  4259c5:	xor    r8d,r8d
  4259c8:	xor    ecx,ecx
  4259ca:	call   41cab0 <__flatcc_error_report@@Base>
  4259cf:	mov    edi,0x1
  4259d4:	mov    eax,0xffffffff
  4259d9:	mov    WORD PTR [rbx+0x10],di
  4259dd:	pop    rbx
  4259de:	ret    
  4259df:	nop
  4259e0:	cmp    WORD PTR [rbx+0x10],0x5
  4259e5:	jne    425eff <__flatcc_fb_coerce_scalar_type@@Base+0x5ff>
  4259eb:	mov    eax,0xffffffff
  4259f0:	cmp    QWORD PTR [rbx],rax
  4259f3:	jbe    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  4259f5:	mov    rsi,QWORD PTR [rsi+0x8]
  4259f9:	lea    rdx,[rip+0x21e48]        # 447848 <fb_schema_table_missing@@Base+0x2bf8>
  425a00:	xor    r9d,r9d
  425a03:	xor    r8d,r8d
  425a06:	xor    ecx,ecx
  425a08:	call   41cab0 <__flatcc_error_report@@Base>
  425a0d:	mov    WORD PTR [rbx+0x10],0x1
  425a13:	or     eax,0xffffffff
  425a16:	pop    rbx
  425a17:	ret    
  425a18:	nop    DWORD PTR [rax+rax*1+0x0]
  425a20:	cmp    WORD PTR [rbx+0x10],0x5
  425a25:	jne    425f4f <__flatcc_fb_coerce_scalar_type@@Base+0x64f>
  425a2b:	cmp    QWORD PTR [rbx],0xffff
  425a32:	jbe    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425a38:	mov    rsi,QWORD PTR [rsi+0x8]
  425a3c:	lea    rdx,[rip+0x21b7d]        # 4475c0 <fb_schema_table_missing@@Base+0x2970>
  425a43:	xor    r9d,r9d
  425a46:	xor    r8d,r8d
  425a49:	xor    ecx,ecx
  425a4b:	call   41cab0 <__flatcc_error_report@@Base>
  425a50:	mov    WORD PTR [rbx+0x10],0x1
  425a56:	or     eax,0xffffffff
  425a59:	pop    rbx
  425a5a:	ret    
  425a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  425a60:	cmp    WORD PTR [rbx+0x10],0x5
  425a65:	jne    425f27 <__flatcc_fb_coerce_scalar_type@@Base+0x627>
  425a6b:	cmp    QWORD PTR [rbx],0xff
  425a72:	jbe    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425a78:	mov    rsi,QWORD PTR [rsi+0x8]
  425a7c:	lea    rdx,[rip+0x21de2]        # 447865 <fb_schema_table_missing@@Base+0x2c15>
  425a83:	xor    r9d,r9d
  425a86:	xor    r8d,r8d
  425a89:	xor    ecx,ecx
  425a8b:	call   41cab0 <__flatcc_error_report@@Base>
  425a90:	mov    WORD PTR [rbx+0x10],0x1
  425a96:	or     eax,0xffffffff
  425a99:	pop    rbx
  425a9a:	ret    
  425a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  425aa0:	movzx  eax,WORD PTR [rbx+0x10]
  425aa4:	cmp    ax,0x5
  425aa8:	je     425cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
  425aae:	cmp    ax,0x6
  425ab2:	je     4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425ab8:	mov    rsi,QWORD PTR [rsi+0x8]
  425abc:	lea    rdx,[rip+0x21c75]        # 447738 <fb_schema_table_missing@@Base+0x2ae8>
  425ac3:	xor    r9d,r9d
  425ac6:	xor    r8d,r8d
  425ac9:	xor    ecx,ecx
  425acb:	call   41cab0 <__flatcc_error_report@@Base>
  425ad0:	mov    r10d,0x1
  425ad6:	mov    eax,0xffffffff
  425adb:	mov    WORD PTR [rbx+0x10],r10w
  425ae0:	pop    rbx
  425ae1:	ret    
  425ae2:	nop    WORD PTR [rax+rax*1+0x0]
  425ae8:	movzx  eax,WORD PTR [rbx+0x10]
  425aec:	cmp    ax,0x4
  425af0:	je     4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425af6:	cmp    ax,0x5
  425afa:	jne    425f77 <__flatcc_fb_coerce_scalar_type@@Base+0x677>
  425b00:	mov    rax,QWORD PTR [rbx]
  425b03:	test   rax,rax
  425b06:	js     426080 <__flatcc_fb_coerce_scalar_type@@Base+0x780>
  425b0c:	mov    QWORD PTR [rbx],rax
  425b0f:	mov    eax,0x4
  425b14:	mov    WORD PTR [rbx+0x10],ax
  425b18:	xor    eax,eax
  425b1a:	pop    rbx
  425b1b:	ret    
  425b1c:	nop    DWORD PTR [rax+0x0]
  425b20:	movzx  eax,WORD PTR [rbx+0x10]
  425b24:	cmp    ax,0x4
  425b28:	je     425dc0 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
  425b2e:	cmp    ax,0x5
  425b32:	jne    425f9f <__flatcc_fb_coerce_scalar_type@@Base+0x69f>
  425b38:	cmp    QWORD PTR [rbx],0x7fff
  425b3f:	jg     42605d <__flatcc_fb_coerce_scalar_type@@Base+0x75d>
  425b45:	mov    eax,0x4
  425b4a:	mov    WORD PTR [rbx+0x10],ax
  425b4e:	xor    eax,eax
  425b50:	pop    rbx
  425b51:	ret    
  425b52:	nop    WORD PTR [rax+rax*1+0x0]
  425b58:	movzx  eax,WORD PTR [rbx+0x10]
  425b5c:	cmp    ax,0x4
  425b60:	je     425d90 <__flatcc_fb_coerce_scalar_type@@Base+0x490>
  425b66:	cmp    ax,0x5
  425b6a:	jne    425fc7 <__flatcc_fb_coerce_scalar_type@@Base+0x6c7>
  425b70:	cmp    QWORD PTR [rbx],0x7fffffff
  425b77:	jle    425b45 <__flatcc_fb_coerce_scalar_type@@Base+0x245>
  425b79:	mov    rsi,QWORD PTR [rsi+0x8]
  425b7d:	lea    rdx,[rip+0x21d1a]        # 44789e <fb_schema_table_missing@@Base+0x2c4e>
  425b84:	xor    r9d,r9d
  425b87:	xor    r8d,r8d
  425b8a:	xor    ecx,ecx
  425b8c:	call   41cab0 <__flatcc_error_report@@Base>
  425b91:	mov    WORD PTR [rbx+0x10],0x1
  425b97:	or     eax,0xffffffff
  425b9a:	pop    rbx
  425b9b:	ret    
  425b9c:	nop    DWORD PTR [rax+0x0]
  425ba0:	movzx  edx,WORD PTR [rbx+0x10]
  425ba4:	cmp    dx,0x4
  425ba8:	je     425e20 <__flatcc_fb_coerce_scalar_type@@Base+0x520>
  425bae:	cmp    dx,0x5
  425bb2:	je     425d40 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
  425bb8:	xor    eax,eax
  425bba:	cmp    dx,0x3
  425bbe:	je     4259a2 <__flatcc_fb_coerce_scalar_type@@Base+0xa2>
  425bc4:	mov    rsi,QWORD PTR [rsi+0x8]
  425bc8:	lea    rdx,[rip+0x21bd1]        # 4477a0 <fb_schema_table_missing@@Base+0x2b50>
  425bcf:	xor    r9d,r9d
  425bd2:	xor    r8d,r8d
  425bd5:	xor    ecx,ecx
  425bd7:	call   41cab0 <__flatcc_error_report@@Base>
  425bdc:	mov    edi,0x1
  425be1:	mov    eax,0xffffffff
  425be6:	mov    WORD PTR [rbx+0x10],di
  425bea:	pop    rbx
  425beb:	ret    
  425bec:	nop    DWORD PTR [rax+0x0]
  425bf0:	movzx  edx,WORD PTR [rbx+0x10]
  425bf4:	cmp    dx,0x4
  425bf8:	je     425e50 <__flatcc_fb_coerce_scalar_type@@Base+0x550>
  425bfe:	cmp    dx,0x5
  425c02:	je     425cf0 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
  425c08:	xor    eax,eax
  425c0a:	cmp    dx,0x3
  425c0e:	je     4259a2 <__flatcc_fb_coerce_scalar_type@@Base+0xa2>
  425c14:	mov    rsi,QWORD PTR [rsi+0x8]
  425c18:	lea    rdx,[rip+0x21bf1]        # 447810 <fb_schema_table_missing@@Base+0x2bc0>
  425c1f:	xor    r9d,r9d
  425c22:	xor    r8d,r8d
  425c25:	xor    ecx,ecx
  425c27:	call   41cab0 <__flatcc_error_report@@Base>
  425c2c:	mov    edx,0x1
  425c31:	mov    eax,0xffffffff
  425c36:	mov    WORD PTR [rbx+0x10],dx
  425c3a:	pop    rbx
  425c3b:	ret    
  425c3c:	nop    DWORD PTR [rax+0x0]
  425c40:	movzx  eax,WORD PTR [rbx+0x10]
  425c44:	cmp    ax,0x4
  425c48:	je     425df0 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
  425c4e:	cmp    ax,0x5
  425c52:	jne    425fef <__flatcc_fb_coerce_scalar_type@@Base+0x6ef>
  425c58:	cmp    QWORD PTR [rbx],0x7f
  425c5c:	jle    425b45 <__flatcc_fb_coerce_scalar_type@@Base+0x245>
  425c62:	mov    rsi,QWORD PTR [rsi+0x8]
  425c66:	lea    rdx,[rip+0x21ca3]        # 447910 <fb_schema_table_missing@@Base+0x2cc0>
  425c6d:	xor    r9d,r9d
  425c70:	xor    r8d,r8d
  425c73:	xor    ecx,ecx
  425c75:	call   41cab0 <__flatcc_error_report@@Base>
  425c7a:	mov    WORD PTR [rbx+0x10],0x1
  425c80:	or     eax,0xffffffff
  425c83:	pop    rbx
  425c84:	ret    
  425c85:	nop    DWORD PTR [rax]
  425c88:	mov    rsi,QWORD PTR [rsi+0x8]
  425c8c:	lea    rdx,[rip+0x21c98]        # 44792b <fb_schema_table_missing@@Base+0x2cdb>
  425c93:	xor    r9d,r9d
  425c96:	xor    r8d,r8d
  425c99:	xor    ecx,ecx
  425c9b:	call   41cab0 <__flatcc_error_report@@Base>
  425ca0:	mov    eax,0x1
  425ca5:	mov    WORD PTR [rbx+0x10],ax
  425ca9:	mov    eax,0xffffffff
  425cae:	pop    rbx
  425caf:	ret    
  425cb0:	mov    r11d,DWORD PTR [rdi+0xfc]
  425cb7:	test   r11d,r11d
  425cba:	je     425ab8 <__flatcc_fb_coerce_scalar_type@@Base+0x1b8>
  425cc0:	cmp    QWORD PTR [rbx],0x1
  425cc4:	jbe    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425cca:	mov    rsi,QWORD PTR [rsi+0x8]
  425cce:	lea    rdx,[rip+0x21a23]        # 4476f8 <fb_schema_table_missing@@Base+0x2aa8>
  425cd5:	xor    r9d,r9d
  425cd8:	xor    r8d,r8d
  425cdb:	xor    ecx,ecx
  425cdd:	call   41cab0 <__flatcc_error_report@@Base>
  425ce2:	mov    WORD PTR [rbx+0x10],0x1
  425ce8:	or     eax,0xffffffff
  425ceb:	pop    rbx
  425cec:	ret    
  425ced:	nop    DWORD PTR [rax]
  425cf0:	mov    rdx,QWORD PTR [rbx]
  425cf3:	test   rdx,rdx
  425cf6:	js     425ebd <__flatcc_fb_coerce_scalar_type@@Base+0x5bd>
  425cfc:	vxorps xmm0,xmm0,xmm0
  425d00:	vcvtsi2ss xmm0,xmm0,rdx
  425d05:	vucomiss xmm0,DWORD PTR [rip+0x21cbb]        # 4479c8 <fb_schema_table_missing@@Base+0x2d78>
  425d0d:	jae    425e83 <__flatcc_fb_coerce_scalar_type@@Base+0x583>
  425d13:	vcvttss2si rax,xmm0
  425d18:	cmp    rdx,rax
  425d1b:	jne    42603a <__flatcc_fb_coerce_scalar_type@@Base+0x73a>
  425d21:	vxorpd xmm3,xmm3,xmm3
  425d25:	mov    ecx,0x3
  425d2a:	xor    eax,eax
  425d2c:	mov    WORD PTR [rbx+0x10],cx
  425d30:	vcvtss2sd xmm3,xmm3,xmm0
  425d34:	vmovsd QWORD PTR [rbx],xmm3
  425d38:	pop    rbx
  425d39:	ret    
  425d3a:	nop    WORD PTR [rax+rax*1+0x0]
  425d40:	mov    rdx,QWORD PTR [rbx]
  425d43:	test   rdx,rdx
  425d46:	js     425ede <__flatcc_fb_coerce_scalar_type@@Base+0x5de>
  425d4c:	vxorpd xmm1,xmm1,xmm1
  425d50:	vcvtsi2sd xmm1,xmm1,rdx
  425d55:	vmovsd xmm0,QWORD PTR [rip+0x21c63]        # 4479c0 <fb_schema_table_missing@@Base+0x2d70>
  425d5d:	vucomisd xmm1,xmm0
  425d61:	jae    425ea2 <__flatcc_fb_coerce_scalar_type@@Base+0x5a2>
  425d67:	vcvttsd2si rax,xmm1
  425d6c:	cmp    rdx,rax
  425d6f:	jne    426017 <__flatcc_fb_coerce_scalar_type@@Base+0x717>
  425d75:	mov    r8d,0x3
  425d7b:	vmovsd QWORD PTR [rbx],xmm1
  425d7f:	xor    eax,eax
  425d81:	mov    WORD PTR [rbx+0x10],r8w
  425d86:	pop    rbx
  425d87:	ret    
  425d88:	nop    DWORD PTR [rax+rax*1+0x0]
  425d90:	cmp    QWORD PTR [rbx],0xffffffff80000000
  425d97:	jge    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425d9d:	mov    rsi,QWORD PTR [rsi+0x8]
  425da1:	lea    rdx,[rip+0x21ada]        # 447882 <fb_schema_table_missing@@Base+0x2c32>
  425da8:	xor    r9d,r9d
  425dab:	xor    r8d,r8d
  425dae:	xor    ecx,ecx
  425db0:	call   41cab0 <__flatcc_error_report@@Base>
  425db5:	mov    WORD PTR [rbx+0x10],0x1
  425dbb:	or     eax,0xffffffff
  425dbe:	pop    rbx
  425dbf:	ret    
  425dc0:	cmp    QWORD PTR [rbx],0xffffffffffff8000
  425dc7:	jge    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425dcd:	mov    rsi,QWORD PTR [rsi+0x8]
  425dd1:	lea    rdx,[rip+0x21ae1]        # 4478b9 <fb_schema_table_missing@@Base+0x2c69>
  425dd8:	xor    r9d,r9d
  425ddb:	xor    r8d,r8d
  425dde:	xor    ecx,ecx
  425de0:	call   41cab0 <__flatcc_error_report@@Base>
  425de5:	mov    WORD PTR [rbx+0x10],0x1
  425deb:	or     eax,0xffffffff
  425dee:	pop    rbx
  425def:	ret    
  425df0:	cmp    QWORD PTR [rbx],0xffffffffffffff80
  425df4:	jge    4259a0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  425dfa:	mov    rsi,QWORD PTR [rsi+0x8]
  425dfe:	lea    rdx,[rip+0x21aef]        # 4478f4 <fb_schema_table_missing@@Base+0x2ca4>
  425e05:	xor    r9d,r9d
  425e08:	xor    r8d,r8d
  425e0b:	xor    ecx,ecx
  425e0d:	call   41cab0 <__flatcc_error_report@@Base>
  425e12:	mov    WORD PTR [rbx+0x10],0x1
  425e18:	or     eax,0xffffffff
  425e1b:	pop    rbx
  425e1c:	ret    
  425e1d:	nop    DWORD PTR [rax]
  425e20:	mov    rax,QWORD PTR [rbx]
  425e23:	vxorpd xmm0,xmm0,xmm0
  425e27:	vcvtsi2sd xmm0,xmm0,rax
  425e2c:	vcvttsd2si rdx,xmm0
  425e31:	cmp    rax,rdx
  425e34:	jne    426017 <__flatcc_fb_coerce_scalar_type@@Base+0x717>
  425e3a:	mov    r9d,0x3
  425e40:	vmovsd QWORD PTR [rbx],xmm0
  425e44:	xor    eax,eax
  425e46:	mov    WORD PTR [rbx+0x10],r9w
  425e4b:	pop    rbx
  425e4c:	ret    
  425e4d:	nop    DWORD PTR [rax]
  425e50:	mov    rax,QWORD PTR [rbx]
  425e53:	vxorps xmm0,xmm0,xmm0
  425e57:	vcvtsi2ss xmm0,xmm0,rax
  425e5c:	vcvttss2si rdx,xmm0
  425e61:	cmp    rax,rdx
  425e64:	jne    42603a <__flatcc_fb_coerce_scalar_type@@Base+0x73a>
  425e6a:	vxorpd xmm2,xmm2,xmm2
  425e6e:	mov    esi,0x3
  425e73:	xor    eax,eax
  425e75:	mov    WORD PTR [rbx+0x10],si
  425e79:	vcvtss2sd xmm2,xmm2,xmm0
  425e7d:	vmovsd QWORD PTR [rbx],xmm2
  425e81:	pop    rbx
  425e82:	ret    
  425e83:	vsubss xmm1,xmm0,DWORD PTR [rip+0x21b3d]        # 4479c8 <fb_schema_table_missing@@Base+0x2d78>
  425e8b:	movabs rcx,0x8000000000000000
  425e95:	vcvttss2si rax,xmm1
  425e9a:	xor    rax,rcx
  425e9d:	jmp    425d18 <__flatcc_fb_coerce_scalar_type@@Base+0x418>
  425ea2:	vsubsd xmm0,xmm1,xmm0
  425ea6:	movabs rcx,0x8000000000000000
  425eb0:	vcvttsd2si rax,xmm0
  425eb5:	xor    rax,rcx
  425eb8:	jmp    425d6c <__flatcc_fb_coerce_scalar_type@@Base+0x46c>
  425ebd:	mov    rax,rdx
  425ec0:	mov    rcx,rdx
  425ec3:	vxorps xmm0,xmm0,xmm0
  425ec7:	shr    rax,1
  425eca:	and    ecx,0x1
  425ecd:	or     rax,rcx
  425ed0:	vcvtsi2ss xmm0,xmm0,rax
  425ed5:	vaddss xmm0,xmm0,xmm0
  425ed9:	jmp    425d05 <__flatcc_fb_coerce_scalar_type@@Base+0x405>
  425ede:	mov    rax,rdx
  425ee1:	mov    rcx,rdx
  425ee4:	vxorpd xmm1,xmm1,xmm1
  425ee8:	shr    rax,1
  425eeb:	and    ecx,0x1
  425eee:	or     rax,rcx
  425ef1:	vcvtsi2sd xmm1,xmm1,rax
  425ef6:	vaddsd xmm1,xmm1,xmm1
  425efa:	jmp    425d55 <__flatcc_fb_coerce_scalar_type@@Base+0x455>
  425eff:	mov    rsi,QWORD PTR [rsi+0x8]
  425f03:	lea    rdx,[rip+0x2163e]        # 447548 <fb_schema_table_missing@@Base+0x28f8>
  425f0a:	xor    r9d,r9d
  425f0d:	xor    r8d,r8d
  425f10:	xor    ecx,ecx
  425f12:	call   41cab0 <__flatcc_error_report@@Base>
  425f17:	mov    esi,0x1
  425f1c:	mov    eax,0xffffffff
  425f21:	mov    WORD PTR [rbx+0x10],si
  425f25:	pop    rbx
  425f26:	ret    
  425f27:	mov    rsi,QWORD PTR [rsi+0x8]
  425f2b:	lea    rdx,[rip+0x216ae]        # 4475e0 <fb_schema_table_missing@@Base+0x2990>
  425f32:	xor    r9d,r9d
  425f35:	xor    r8d,r8d
  425f38:	xor    ecx,ecx
  425f3a:	call   41cab0 <__flatcc_error_report@@Base>
  425f3f:	mov    edx,0x1
  425f44:	mov    eax,0xffffffff
  425f49:	mov    WORD PTR [rbx+0x10],dx
  425f4d:	pop    rbx
  425f4e:	ret    
  425f4f:	mov    rsi,QWORD PTR [rsi+0x8]
  425f53:	lea    rdx,[rip+0x21626]        # 447580 <fb_schema_table_missing@@Base+0x2930>
  425f5a:	xor    ecx,ecx
  425f5c:	xor    r9d,r9d
  425f5f:	xor    r8d,r8d
  425f62:	call   41cab0 <__flatcc_error_report@@Base>
  425f67:	mov    ecx,0x1
  425f6c:	mov    eax,0xffffffff
  425f71:	mov    WORD PTR [rbx+0x10],cx
  425f75:	pop    rbx
  425f76:	ret    
  425f77:	mov    rsi,QWORD PTR [rsi+0x8]
  425f7b:	lea    rdx,[rip+0x216b6]        # 447638 <fb_schema_table_missing@@Base+0x29e8>
  425f82:	xor    r9d,r9d
  425f85:	xor    r8d,r8d
  425f88:	xor    ecx,ecx
  425f8a:	call   41cab0 <__flatcc_error_report@@Base>
  425f8f:	mov    eax,0x1
  425f94:	mov    WORD PTR [rbx+0x10],ax
  425f98:	mov    eax,0xffffffff
  425f9d:	pop    rbx
  425f9e:	ret    
  425f9f:	mov    rsi,QWORD PTR [rsi+0x8]
  425fa3:	lea    rdx,[rip+0x216ee]        # 447698 <fb_schema_table_missing@@Base+0x2a48>
  425faa:	xor    r9d,r9d
  425fad:	xor    r8d,r8d
  425fb0:	xor    ecx,ecx
  425fb2:	call   41cab0 <__flatcc_error_report@@Base>
  425fb7:	mov    eax,0x1
  425fbc:	mov    WORD PTR [rbx+0x10],ax
  425fc0:	mov    eax,0xffffffff
  425fc5:	pop    rbx
  425fc6:	ret    
  425fc7:	mov    rsi,QWORD PTR [rsi+0x8]
  425fcb:	lea    rdx,[rip+0x21696]        # 447668 <fb_schema_table_missing@@Base+0x2a18>
  425fd2:	xor    r9d,r9d
  425fd5:	xor    r8d,r8d
  425fd8:	xor    ecx,ecx
  425fda:	call   41cab0 <__flatcc_error_report@@Base>
  425fdf:	mov    eax,0x1
  425fe4:	mov    WORD PTR [rbx+0x10],ax
  425fe8:	mov    eax,0xffffffff
  425fed:	pop    rbx
  425fee:	ret    
  425fef:	mov    rsi,QWORD PTR [rsi+0x8]
  425ff3:	lea    rdx,[rip+0x216ce]        # 4476c8 <fb_schema_table_missing@@Base+0x2a78>
  425ffa:	xor    r9d,r9d
  425ffd:	xor    r8d,r8d
  426000:	xor    ecx,ecx
  426002:	call   41cab0 <__flatcc_error_report@@Base>
  426007:	mov    eax,0x1
  42600c:	mov    WORD PTR [rbx+0x10],ax
  426010:	mov    eax,0xffffffff
  426015:	pop    rbx
  426016:	ret    
  426017:	mov    rsi,QWORD PTR [rsi+0x8]
  42601b:	lea    rdx,[rip+0x2174e]        # 447770 <fb_schema_table_missing@@Base+0x2b20>
  426022:	xor    r9d,r9d
  426025:	xor    r8d,r8d
  426028:	xor    ecx,ecx
  42602a:	call   41cab0 <__flatcc_error_report@@Base>
  42602f:	mov    WORD PTR [rbx+0x10],0x1
  426035:	or     eax,0xffffffff
  426038:	pop    rbx
  426039:	ret    
  42603a:	mov    rsi,QWORD PTR [rsi+0x8]
  42603e:	lea    rdx,[rip+0x2179b]        # 4477e0 <fb_schema_table_missing@@Base+0x2b90>
  426045:	xor    r9d,r9d
  426048:	xor    r8d,r8d
  42604b:	xor    ecx,ecx
  42604d:	call   41cab0 <__flatcc_error_report@@Base>
  426052:	mov    WORD PTR [rbx+0x10],0x1
  426058:	or     eax,0xffffffff
  42605b:	pop    rbx
  42605c:	ret    
  42605d:	mov    rsi,QWORD PTR [rsi+0x8]
  426061:	lea    rdx,[rip+0x2186f]        # 4478d7 <fb_schema_table_missing@@Base+0x2c87>
  426068:	xor    r9d,r9d
  42606b:	xor    r8d,r8d
  42606e:	xor    ecx,ecx
  426070:	call   41cab0 <__flatcc_error_report@@Base>
  426075:	mov    WORD PTR [rbx+0x10],0x1
  42607b:	or     eax,0xffffffff
  42607e:	pop    rbx
  42607f:	ret    
  426080:	mov    rsi,QWORD PTR [rsi+0x8]
  426084:	lea    rdx,[rip+0x2158d]        # 447618 <fb_schema_table_missing@@Base+0x29c8>
  42608b:	xor    r9d,r9d
  42608e:	xor    r8d,r8d
  426091:	xor    ecx,ecx
  426093:	call   41cab0 <__flatcc_error_report@@Base>
  426098:	mov    WORD PTR [rbx+0x10],0x1
  42609e:	or     eax,0xffffffff
  4260a1:	pop    rbx
  4260a2:	ret    
  4260a3:	lea    rcx,[rip+0x218f6]        # 4479a0 <fb_schema_table_missing@@Base+0x2d50>
  4260aa:	lea    rsi,[rip+0x213df]        # 447490 <fb_schema_table_missing@@Base+0x2840>
  4260b1:	lea    rdi,[rip+0x21438]        # 4474f0 <fb_schema_table_missing@@Base+0x28a0>
  4260b8:	mov    edx,0x34
  4260bd:	call   4050f0 <__assert_fail@plt>
  4260c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4260cc:	nop    DWORD PTR [rax+0x0]
  4260d0:	push   rbp
  4260d1:	push   rbx
  4260d2:	mov    ebp,edx
  4260d4:	mov    rbx,rdi
  4260d7:	mov    r8d,0x1
  4260dd:	mov    ecx,0x1
  4260e2:	sub    rsp,0x8
  4260e6:	mov    edx,DWORD PTR [rdi+0x28]
  4260e9:	add    rdx,rsi
  4260ec:	lea    rsi,[rdi+0x68]
  4260f0:	mov    rdi,QWORD PTR [rdi+0x40]
  4260f4:	call   QWORD PTR [rbx+0x50]
  4260f7:	test   eax,eax
  4260f9:	jne    426128 <__flatcc_fb_coerce_scalar_type@@Base+0x828>
  4260fb:	mov    edx,DWORD PTR [rbx+0x28]
  4260fe:	mov    rcx,rdx
  426101:	add    rdx,QWORD PTR [rbx+0x68]
  426105:	mov    QWORD PTR [rbx+0x18],rdx
  426109:	mov    edx,DWORD PTR [rbx+0x70]
  42610c:	sub    edx,ecx
  42610e:	cmp    ebp,edx
  426110:	cmovb  edx,ebp
  426113:	mov    DWORD PTR [rbx+0x24],edx
  426116:	mov    rdx,QWORD PTR [rbx+0x30]
  42611a:	mov    DWORD PTR [rdx+0x4],ebp
  42611d:	add    rsp,0x8
  426121:	pop    rbx
  426122:	pop    rbp
  426123:	ret    
  426124:	nop    DWORD PTR [rax+0x0]
  426128:	mov    eax,0xffffffff
  42612d:	jmp    42611d <__flatcc_fb_coerce_scalar_type@@Base+0x81d>
  42612f:	nop

0000000000426130 <flatcc_builder_default_alloc@@Base>:
  426130:	push   r12
  426132:	push   rbp
  426133:	mov    rbp,rsi
  426136:	push   rbx
  426137:	sub    rsp,0x10
  42613b:	test   rdx,rdx
  42613e:	jne    426170 <flatcc_builder_default_alloc@@Base+0x40>
  426140:	mov    rdi,QWORD PTR [rsi]
  426143:	xor    eax,eax
  426145:	test   rdi,rdi
  426148:	je     426167 <flatcc_builder_default_alloc@@Base+0x37>
  42614a:	mov    DWORD PTR [rsp+0xc],eax
  42614e:	call   405040 <free@plt>
  426153:	mov    eax,DWORD PTR [rsp+0xc]
  426157:	mov    QWORD PTR [rbp+0x0],0x0
  42615f:	mov    QWORD PTR [rbp+0x8],0x0
  426167:	add    rsp,0x10
  42616b:	pop    rbx
  42616c:	pop    rbp
  42616d:	pop    r12
  42616f:	ret    
  426170:	cmp    r8d,0x4
  426174:	je     426210 <flatcc_builder_default_alloc@@Base+0xe0>
  42617a:	jle    426220 <flatcc_builder_default_alloc@@Base+0xf0>
  426180:	cmp    r8d,0x5
  426184:	mov    rbx,rdx
  426187:	je     4261a8 <flatcc_builder_default_alloc@@Base+0x78>
  426189:	cmp    r8d,0x7
  42618d:	mov    ebx,0x40
  426192:	je     4261a3 <flatcc_builder_default_alloc@@Base+0x73>
  426194:	jmp    42622f <flatcc_builder_default_alloc@@Base+0xff>
  426199:	nop    DWORD PTR [rax+0x0]
  4261a0:	add    rbx,rbx
  4261a3:	cmp    rdx,rbx
  4261a6:	ja     4261a0 <flatcc_builder_default_alloc@@Base+0x70>
  4261a8:	mov    rax,QWORD PTR [rbp+0x8]
  4261ac:	cmp    rdx,rax
  4261af:	ja     4261be <flatcc_builder_default_alloc@@Base+0x8e>
  4261b1:	shr    rax,1
  4261b4:	mov    rdx,rax
  4261b7:	xor    eax,eax
  4261b9:	cmp    rdx,rbx
  4261bc:	jae    426167 <flatcc_builder_default_alloc@@Base+0x37>
  4261be:	mov    rdi,QWORD PTR [rbp+0x0]
  4261c2:	mov    rsi,rbx
  4261c5:	mov    DWORD PTR [rsp+0xc],ecx
  4261c9:	call   4051a0 <realloc@plt>
  4261ce:	test   rax,rax
  4261d1:	mov    r12,rax
  4261d4:	je     426239 <flatcc_builder_default_alloc@@Base+0x109>
  4261d6:	mov    ecx,DWORD PTR [rsp+0xc]
  4261da:	test   ecx,ecx
  4261dc:	je     4261f8 <flatcc_builder_default_alloc@@Base+0xc8>
  4261de:	mov    rax,QWORD PTR [rbp+0x8]
  4261e2:	cmp    rax,rbx
  4261e5:	jae    4261f8 <flatcc_builder_default_alloc@@Base+0xc8>
  4261e7:	mov    rdx,rbx
  4261ea:	lea    rdi,[r12+rax*1]
  4261ee:	xor    esi,esi
  4261f0:	sub    rdx,rax
  4261f3:	call   405100 <memset@plt>
  4261f8:	mov    QWORD PTR [rbp+0x0],r12
  4261fc:	mov    QWORD PTR [rbp+0x8],rbx
  426200:	add    rsp,0x10
  426204:	pop    rbx
  426205:	xor    eax,eax
  426207:	pop    rbp
  426208:	pop    r12
  42620a:	ret    
  42620b:	nop    DWORD PTR [rax+rax*1+0x0]
  426210:	mov    ebx,0x120
  426215:	jmp    4261a3 <flatcc_builder_default_alloc@@Base+0x73>
  426217:	nop    WORD PTR [rax+rax*1+0x0]
  426220:	cmp    r8d,0x1
  426224:	mov    ebx,0x100
  426229:	je     4261a3 <flatcc_builder_default_alloc@@Base+0x73>
  42622f:	mov    ebx,0x20
  426234:	jmp    4261a3 <flatcc_builder_default_alloc@@Base+0x73>
  426239:	mov    eax,0xffffffff
  42623e:	jmp    426167 <flatcc_builder_default_alloc@@Base+0x37>
  426243:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42624e:	xchg   ax,ax
  426250:	push   rbx
  426251:	mov    r9,rdi
  426254:	sub    rsp,0xa0
  42625b:	mov    rbx,QWORD PTR fs:0x28
  426264:	mov    QWORD PTR [rsp+0x98],rbx
  42626c:	xor    ebx,ebx
  42626e:	test   dx,dx
  426271:	je     4262d0 <flatcc_builder_default_alloc@@Base+0x1a0>
  426273:	mov    eax,edx
  426275:	movzx  edx,dx
  426278:	movzx  edi,WORD PTR [rsi]
  42627b:	cmp    di,0x3
  42627f:	ja     42628e <flatcc_builder_default_alloc@@Base+0x15e>
  426281:	mov    edi,0x4
  426286:	mov    WORD PTR [rsi],di
  426289:	mov    edi,0x4
  42628e:	cmp    ax,di
  426291:	jbe    426296 <flatcc_builder_default_alloc@@Base+0x166>
  426293:	mov    WORD PTR [rsi],ax
  426296:	test   ecx,ecx
  426298:	jne    4262a8 <flatcc_builder_default_alloc@@Base+0x178>
  42629a:	mov    ebx,DWORD PTR [r9+0xf4]
  4262a1:	sub    edx,0x1
  4262a4:	and    edx,ebx
  4262a6:	jne    4262f0 <flatcc_builder_default_alloc@@Base+0x1c0>
  4262a8:	xor    eax,eax
  4262aa:	mov    rbx,QWORD PTR [rsp+0x98]
  4262b2:	xor    rbx,QWORD PTR fs:0x28
  4262bb:	jne    42635d <flatcc_builder_default_alloc@@Base+0x22d>
  4262c1:	add    rsp,0xa0
  4262c8:	pop    rbx
  4262c9:	ret    
  4262ca:	nop    WORD PTR [rax+rax*1+0x0]
  4262d0:	movzx  eax,WORD PTR [rdi+0xec]
  4262d7:	test   ax,ax
  4262da:	movzx  edx,ax
  4262dd:	jne    426278 <flatcc_builder_default_alloc@@Base+0x148>
  4262df:	mov    edx,0x1
  4262e4:	mov    eax,0x1
  4262e9:	jmp    426278 <flatcc_builder_default_alloc@@Base+0x148>
  4262eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4262f0:	mov    rax,0x4484c0
  4262f7:	movsxd r8,edx
  4262fa:	add    edx,ebx
  4262fc:	cmp    ebx,edx
  4262fe:	mov    QWORD PTR [rsp],r8
  426302:	mov    QWORD PTR [rsp+0x18],r8
  426307:	mov    DWORD PTR [rsp+0x8],0x1
  42630f:	mov    DWORD PTR [r9+0xf4],edx
  426316:	mov    QWORD PTR [rsp+0x10],rax
  42631b:	jg     426362 <flatcc_builder_default_alloc@@Base+0x232>
  42631d:	lea    rsi,[rsp+0x10]
  426322:	mov    rdi,QWORD PTR [r9+0x38]
  426326:	mov    ecx,ebx
  426328:	mov    edx,0x1
  42632d:	call   QWORD PTR [r9+0x48]
  426331:	test   eax,eax
  426333:	jne    426367 <flatcc_builder_default_alloc@@Base+0x237>
  426335:	cmp    ebx,0xffffffff
  426338:	jne    4262a8 <flatcc_builder_default_alloc@@Base+0x178>
  42633e:	lea    rcx,[rip+0x220eb]        # 448430 <fb_schema_table_missing@@Base+0x37e0>
  426345:	lea    rsi,[rip+0x21684]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42634c:	lea    rdi,[rip+0xf7b6]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  426353:	mov    edx,0x2be
  426358:	call   4050f0 <__assert_fail@plt>
  42635d:	call   4050d0 <__stack_chk_fail@plt>
  426362:	call   4052df <__sprintf_chk@plt+0xcf>
  426367:	lea    rcx,[rip+0x220b2]        # 448420 <fb_schema_table_missing@@Base+0x37d0>
  42636e:	lea    rsi,[rip+0x2165b]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  426375:	lea    rdi,[rip+0xf78d]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  42637c:	mov    edx,0x2a5
  426381:	call   4050f0 <__assert_fail@plt>
  426386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426390:	push   r12
  426392:	push   rbp
  426393:	mov    r12d,esi
  426396:	push   rbx
  426397:	movsxd rax,DWORD PTR [rdi+0x104]
  42639e:	mov    rbx,rdi
  4263a1:	lea    edx,[rax+0x1]
  4263a4:	cmp    edx,DWORD PTR [rdi+0x108]
  4263aa:	mov    DWORD PTR [rdi+0x104],edx
  4263b0:	jle    426430 <flatcc_builder_default_alloc@@Base+0x300>
  4263b2:	mov    ecx,DWORD PTR [rdi+0x120]
  4263b8:	test   ecx,ecx
  4263ba:	jle    4263c4 <flatcc_builder_default_alloc@@Base+0x294>
  4263bc:	cmp    edx,ecx
  4263be:	jg     4264b0 <flatcc_builder_default_alloc@@Base+0x380>
  4263c4:	lea    rcx,[rax+rax*8]
  4263c8:	lea    rbp,[rcx*4+0x0]
  4263d0:	lea    rdx,[rbp+0x24]
  4263d4:	cmp    rdx,QWORD PTR [rbx+0xa0]
  4263db:	ja     426488 <flatcc_builder_default_alloc@@Base+0x358>
  4263e1:	mov    rcx,rbp
  4263e4:	add    rcx,QWORD PTR [rbx+0x98]
  4263eb:	test   rcx,rcx
  4263ee:	mov    QWORD PTR [rbx+0x30],rcx
  4263f2:	je     4264b0 <flatcc_builder_default_alloc@@Base+0x380>
  4263f8:	movabs rdx,0xe38e38e38e38e38f
  426402:	mov    rax,rdx
  426405:	mul    QWORD PTR [rbx+0xa0]
  42640c:	mov    eax,DWORD PTR [rbx+0x120]
  426412:	shr    rdx,0x5
  426416:	test   eax,eax
  426418:	mov    DWORD PTR [rbx+0x108],edx
  42641e:	jle    426480 <flatcc_builder_default_alloc@@Base+0x350>
  426420:	cmp    eax,edx
  426422:	jge    426480 <flatcc_builder_default_alloc@@Base+0x350>
  426424:	mov    DWORD PTR [rbx+0x108],eax
  42642a:	mov    rax,rcx
  42642d:	jmp    42643c <flatcc_builder_default_alloc@@Base+0x30c>
  42642f:	nop
  426430:	mov    rax,QWORD PTR [rdi+0x30]
  426434:	add    rax,0x24
  426438:	mov    QWORD PTR [rdi+0x30],rax
  42643c:	movzx  edx,WORD PTR [rbx+0xea]
  426443:	mov    ecx,DWORD PTR [rbx+0x20]
  426446:	mov    DWORD PTR [rax+0x8],ecx
  426449:	mov    WORD PTR [rax+0xc],dx
  42644d:	mov    edx,DWORD PTR [rbx+0x28]
  426450:	mov    WORD PTR [rbx+0xea],r12w
  426458:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42645f:	mov    DWORD PTR [rax],edx
  426461:	lea    eax,[rcx+rdx*1+0x7]
  426465:	mov    DWORD PTR [rbx+0x20],0x0
  42646c:	and    eax,0xfffffff8
  42646f:	mov    DWORD PTR [rbx+0x28],eax
  426472:	xor    eax,eax
  426474:	pop    rbx
  426475:	pop    rbp
  426476:	pop    r12
  426478:	ret    
  426479:	nop    DWORD PTR [rax+0x0]
  426480:	mov    rax,rcx
  426483:	jmp    42643c <flatcc_builder_default_alloc@@Base+0x30c>
  426485:	nop    DWORD PTR [rax]
  426488:	xor    ecx,ecx
  42648a:	lea    rsi,[rbx+0x98]
  426491:	mov    rdi,QWORD PTR [rbx+0x40]
  426495:	mov    r8d,0x4
  42649b:	call   QWORD PTR [rbx+0x50]
  42649e:	test   eax,eax
  4264a0:	je     4263e1 <flatcc_builder_default_alloc@@Base+0x2b1>
  4264a6:	call   4052bc <__sprintf_chk@plt+0xac>
  4264ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4264b0:	mov    eax,0xffffffff
  4264b5:	jmp    426474 <flatcc_builder_default_alloc@@Base+0x344>
  4264b7:	nop    WORD PTR [rax+rax*1+0x0]
  4264c0:	push   rbp
  4264c1:	push   rbx
  4264c2:	sub    rsp,0xb8
  4264c9:	mov    rax,QWORD PTR fs:0x28
  4264d2:	mov    QWORD PTR [rsp+0xa8],rax
  4264da:	xor    eax,eax
  4264dc:	cmp    edx,0x3fffffff
  4264e2:	ja     426678 <flatcc_builder_default_alloc@@Base+0x548>
  4264e8:	cmp    WORD PTR [rdi+0xe8],0x3
  4264f0:	mov    rbx,rdi
  4264f3:	mov    r10d,edx
  4264f6:	ja     426504 <flatcc_builder_default_alloc@@Base+0x3d4>
  4264f8:	mov    eax,0x4
  4264fd:	mov    WORD PTR [rdi+0xe8],ax
  426504:	mov    eax,DWORD PTR [rbx+0xf0]
  42650a:	lea    r9d,[rdx*4+0x0]
  426512:	lea    r8,[rsp+0xc]
  426517:	mov    DWORD PTR [rsp+0xc],edx
  42651b:	mov    QWORD PTR [rsp+0x10],0x4
  426524:	mov    QWORD PTR [rsp+0x20],r8
  426529:	mov    QWORD PTR [rsp+0x28],0x4
  426532:	mov    r8d,0x4
  426538:	mov    edi,eax
  42653a:	mov    DWORD PTR [rsp+0x18],0x1
  426542:	and    edi,0x3
  426545:	test   r9d,r9d
  426548:	je     426565 <flatcc_builder_default_alloc@@Base+0x435>
  42654a:	lea    r8,[r9+0x4]
  42654e:	mov    QWORD PTR [rsp+0x30],rsi
  426553:	mov    QWORD PTR [rsp+0x38],r9
  426558:	mov    DWORD PTR [rsp+0x18],0x2
  426560:	mov    QWORD PTR [rsp+0x10],r8
  426565:	test   edi,edi
  426567:	jne    426640 <flatcc_builder_default_alloc@@Base+0x510>
  42656d:	mov    r11d,eax
  426570:	sub    r11d,r8d
  426573:	test   edx,edx
  426575:	je     4265e6 <flatcc_builder_default_alloc@@Base+0x4b6>
  426577:	mov    edx,0xfffffffc
  42657c:	xor    eax,eax
  42657e:	jmp    4265a7 <flatcc_builder_default_alloc@@Base+0x477>
  426580:	mov    r9d,edx
  426583:	sub    r9d,r11d
  426586:	add    edi,r9d
  426589:	test   rcx,rcx
  42658c:	mov    DWORD PTR [rsi+rax*4],edi
  42658f:	je     42659b <flatcc_builder_default_alloc@@Base+0x46b>
  426591:	cmp    BYTE PTR [rcx+rax*1],0x0
  426595:	je     42669b <flatcc_builder_default_alloc@@Base+0x56b>
  42659b:	add    rax,0x1
  42659f:	sub    edx,0x4
  4265a2:	cmp    r10d,eax
  4265a5:	jbe    4265e0 <flatcc_builder_default_alloc@@Base+0x4b0>
  4265a7:	mov    edi,DWORD PTR [rsi+rax*4]
  4265aa:	test   edi,edi
  4265ac:	jne    426580 <flatcc_builder_default_alloc@@Base+0x450>
  4265ae:	test   rcx,rcx
  4265b1:	je     42667c <flatcc_builder_default_alloc@@Base+0x54c>
  4265b7:	cmp    BYTE PTR [rcx+rax*1],0x0
  4265bb:	je     42659b <flatcc_builder_default_alloc@@Base+0x46b>
  4265bd:	lea    rcx,[rip+0x21acc]        # 448090 <fb_schema_table_missing@@Base+0x3440>
  4265c4:	lea    rsi,[rip+0x21405]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4265cb:	lea    rdi,[rip+0x21797]        # 447d69 <fb_schema_table_missing@@Base+0x3119>
  4265d2:	mov    edx,0x5b5
  4265d7:	call   4050f0 <__assert_fail@plt>
  4265dc:	nop    DWORD PTR [rax+0x0]
  4265e0:	mov    eax,DWORD PTR [rbx+0xf0]
  4265e6:	mov    ebp,eax
  4265e8:	sub    ebp,r8d
  4265eb:	cmp    ebp,eax
  4265ed:	jge    4266ba <flatcc_builder_default_alloc@@Base+0x58a>
  4265f3:	lea    rsi,[rsp+0x20]
  4265f8:	mov    rdi,QWORD PTR [rbx+0x38]
  4265fc:	mov    ecx,ebp
  4265fe:	mov    edx,DWORD PTR [rsp+0x18]
  426602:	call   QWORD PTR [rbx+0x48]
  426605:	test   eax,eax
  426607:	jne    4266de <flatcc_builder_default_alloc@@Base+0x5ae>
  42660d:	mov    DWORD PTR [rbx+0xf0],ebp
  426613:	mov    rbx,QWORD PTR [rsp+0xa8]
  42661b:	xor    rbx,QWORD PTR fs:0x28
  426624:	mov    eax,ebp
  426626:	jne    4266d9 <flatcc_builder_default_alloc@@Base+0x5a9>
  42662c:	add    rsp,0xb8
  426633:	pop    rbx
  426634:	pop    rbp
  426635:	ret    
  426636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426640:	movsxd r11,DWORD PTR [rsp+0x18]
  426645:	mov    rbp,0x4484c0
  42664c:	add    r8,rdi
  42664f:	mov    QWORD PTR [rsp+0x10],r8
  426654:	mov    r9,r11
  426657:	shl    r11,0x4
  42665b:	add    r9d,0x1
  42665f:	mov    QWORD PTR [rsp+r11*1+0x20],rbp
  426664:	mov    QWORD PTR [rsp+r11*1+0x28],rdi
  426669:	mov    DWORD PTR [rsp+0x18],r9d
  42666e:	jmp    42656d <flatcc_builder_default_alloc@@Base+0x43d>
  426673:	nop    DWORD PTR [rax+rax*1+0x0]
  426678:	xor    ebp,ebp
  42667a:	jmp    426613 <flatcc_builder_default_alloc@@Base+0x4e3>
  42667c:	lea    rcx,[rip+0x21a0d]        # 448090 <fb_schema_table_missing@@Base+0x3440>
  426683:	lea    rsi,[rip+0x21346]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42668a:	lea    rdi,[rip+0xf478]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  426691:	mov    edx,0x5b7
  426696:	call   4050f0 <__assert_fail@plt>
  42669b:	lea    rcx,[rip+0x219ee]        # 448090 <fb_schema_table_missing@@Base+0x3440>
  4266a2:	lea    rsi,[rip+0x21327]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4266a9:	lea    rdi,[rip+0x216ab]        # 447d5b <fb_schema_table_missing@@Base+0x310b>
  4266b0:	mov    edx,0x5b1
  4266b5:	call   4050f0 <__assert_fail@plt>
  4266ba:	lea    rcx,[rip+0x21d4f]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  4266c1:	lea    rsi,[rip+0x21308]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4266c8:	lea    rdi,[rip+0xf43a]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4266cf:	mov    edx,0x287
  4266d4:	call   4050f0 <__assert_fail@plt>
  4266d9:	call   4050d0 <__stack_chk_fail@plt>
  4266de:	call   405302 <__sprintf_chk@plt+0xf2>
  4266e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4266ee:	xchg   ax,ax

00000000004266f0 <flatcc_builder_flush_vtable_cache@@Base>:
  4266f0:	cmp    QWORD PTR [rdi+0xd8],0x0
  4266f8:	jne    426700 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  4266fa:	ret    
  4266fb:	nop    DWORD PTR [rax+rax*1+0x0]
  426700:	push   rbx
  426701:	mov    rbx,rdi
  426704:	mov    rdi,QWORD PTR [rdi+0xa8]
  42670b:	mov    rdx,QWORD PTR [rbx+0xb0]
  426712:	xor    esi,esi
  426714:	call   405100 <memset@plt>
  426719:	mov    DWORD PTR [rbx+0xe4],0x10
  426723:	mov    DWORD PTR [rbx+0xe0],0x0
  42672d:	pop    rbx
  42672e:	ret    
  42672f:	nop

0000000000426730 <flatcc_builder_custom_init@@Base>:
  426730:	mov    QWORD PTR [rdi],0x0
  426737:	mov    QWORD PTR [rdi+0x180],0x0
  426742:	mov    r9,rdi
  426745:	lea    rdi,[rdi+0x8]
  426749:	mov    r10,rcx
  42674c:	mov    rcx,r9
  42674f:	xor    eax,eax
  426751:	and    rdi,0xfffffffffffffff8
  426755:	sub    rcx,rdi
  426758:	add    ecx,0x188
  42675e:	shr    ecx,0x3
  426761:	test   rsi,rsi
  426764:	rep stos QWORD PTR es:[rdi],rax
  426767:	je     426798 <flatcc_builder_custom_init@@Base+0x68>
  426769:	test   r10,r10
  42676c:	je     426788 <flatcc_builder_custom_init@@Base+0x58>
  42676e:	mov    QWORD PTR [r9+0x40],r8
  426772:	mov    QWORD PTR [r9+0x50],r10
  426776:	xor    eax,eax
  426778:	mov    QWORD PTR [r9+0x38],rdx
  42677c:	mov    QWORD PTR [r9+0x48],rsi
  426780:	ret    
  426781:	nop    DWORD PTR [rax+0x0]
  426788:	mov    r10,0x426130
  42678f:	jmp    42676e <flatcc_builder_custom_init@@Base+0x3e>
  426791:	nop    DWORD PTR [rax+0x0]
  426798:	mov    DWORD PTR [r9+0x128],0x1
  4267a3:	lea    rdx,[r9+0x130]
  4267aa:	mov    rsi,0x42a1e0
  4267b1:	jmp    426769 <flatcc_builder_custom_init@@Base+0x39>
  4267b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4267be:	xchg   ax,ax

00000000004267c0 <flatcc_builder_init@@Base>:
  4267c0:	xor    r8d,r8d
  4267c3:	xor    ecx,ecx
  4267c5:	xor    edx,edx
  4267c7:	xor    esi,esi
  4267c9:	jmp    426730 <flatcc_builder_custom_init@@Base>
  4267ce:	xchg   ax,ax

00000000004267d0 <flatcc_builder_custom_reset@@Base>:
  4267d0:	push   r14
  4267d2:	mov    r14d,esi
  4267d5:	push   r13
  4267d7:	mov    r13d,edx
  4267da:	push   r12
  4267dc:	mov    r12,rdi
  4267df:	push   rbp
  4267e0:	xor    ebp,ebp
  4267e2:	push   rbx
  4267e3:	lea    rbx,[rdi+0x58]
  4267e7:	jmp    426836 <flatcc_builder_custom_reset@@Base+0x66>
  4267e9:	nop    DWORD PTR [rax+0x0]
  4267f0:	cmp    ebp,0x5
  4267f3:	je     42681f <flatcc_builder_custom_reset@@Base+0x4f>
  4267f5:	test   r13d,r13d
  4267f8:	je     42681f <flatcc_builder_custom_reset@@Base+0x4f>
  4267fa:	mov    rdi,QWORD PTR [r12+0x40]
  4267ff:	mov    r8d,ebp
  426802:	mov    ecx,0x1
  426807:	mov    edx,0x1
  42680c:	mov    rsi,rbx
  42680f:	call   QWORD PTR [r12+0x50]
  426814:	test   eax,eax
  426816:	jne    426970 <flatcc_builder_custom_reset@@Base+0x1a0>
  42681c:	mov    rdi,QWORD PTR [rbx]
  42681f:	mov    rdx,QWORD PTR [rbx+0x8]
  426823:	xor    esi,esi
  426825:	call   405100 <memset@plt>
  42682a:	add    ebp,0x1
  42682d:	add    rbx,0x10
  426831:	cmp    ebp,0x8
  426834:	je     426868 <flatcc_builder_custom_reset@@Base+0x98>
  426836:	mov    rdi,QWORD PTR [rbx]
  426839:	test   rdi,rdi
  42683c:	jne    4267f0 <flatcc_builder_custom_reset@@Base+0x20>
  42683e:	cmp    QWORD PTR [rbx+0x8],0x0
  426843:	je     42682a <flatcc_builder_custom_reset@@Base+0x5a>
  426845:	lea    rcx,[rip+0x21c54]        # 4484a0 <fb_schema_table_missing@@Base+0x3850>
  42684c:	lea    rsi,[rip+0x2117d]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  426853:	lea    rdi,[rip+0x2151d]        # 447d77 <fb_schema_table_missing@@Base+0x3127>
  42685a:	mov    edx,0x1b2
  42685f:	call   4050f0 <__assert_fail@plt>
  426864:	nop    DWORD PTR [rax+0x0]
  426868:	mov    edx,DWORD PTR [r12+0xe4]
  426870:	mov    DWORD PTR [r12+0xe0],0x0
  42687c:	test   edx,edx
  42687e:	je     42688c <flatcc_builder_custom_reset@@Base+0xbc>
  426880:	mov    DWORD PTR [r12+0xe4],0x10
  42688c:	xor    eax,eax
  42688e:	test   r14d,r14d
  426891:	mov    DWORD PTR [r12+0xf0],0x0
  42689d:	mov    WORD PTR [r12+0xe8],ax
  4268a6:	mov    rax,QWORD PTR [r12+0x68]
  4268ab:	mov    DWORD PTR [r12+0xf4],0x0
  4268b7:	mov    DWORD PTR [r12+0x104],0x0
  4268c3:	mov    DWORD PTR [r12+0x108],0x0
  4268cf:	mov    DWORD PTR [r12+0x20],0x0
  4268d8:	mov    QWORD PTR [r12+0x18],rax
  4268dd:	mov    rax,QWORD PTR [r12+0x88]
  4268e5:	mov    DWORD PTR [r12+0x24],0x0
  4268ee:	mov    DWORD PTR [r12+0xfc],0x0
  4268fa:	mov    DWORD PTR [r12+0x100],0x0
  426906:	mov    QWORD PTR [r12+0x30],0x0
  42690f:	mov    QWORD PTR [r12],rax
  426913:	mov    rax,QWORD PTR [r12+0x58]
  426918:	mov    QWORD PTR [r12+0x8],rax
  42691d:	jne    426948 <flatcc_builder_custom_reset@@Base+0x178>
  42691f:	mov    eax,DWORD PTR [r12+0x128]
  426927:	test   eax,eax
  426929:	je     42693a <flatcc_builder_custom_reset@@Base+0x16a>
  42692b:	lea    rdi,[r12+0x130]
  426933:	call   42a070 <flatcc_emitter_reset@@Base>
  426938:	xor    eax,eax
  42693a:	pop    rbx
  42693b:	pop    rbp
  42693c:	pop    r12
  42693e:	pop    r13
  426940:	pop    r14
  426942:	ret    
  426943:	nop    DWORD PTR [rax+rax*1+0x0]
  426948:	mov    QWORD PTR [r12+0x118],0x0
  426954:	mov    DWORD PTR [r12+0x120],0x0
  426960:	mov    DWORD PTR [r12+0x124],0x0
  42696c:	jmp    42691f <flatcc_builder_custom_reset@@Base+0x14f>
  42696e:	xchg   ax,ax
  426970:	mov    eax,0xffffffff
  426975:	jmp    42693a <flatcc_builder_custom_reset@@Base+0x16a>
  426977:	nop    WORD PTR [rax+rax*1+0x0]

0000000000426980 <flatcc_builder_reset@@Base>:
  426980:	xor    edx,edx
  426982:	xor    esi,esi
  426984:	jmp    4267d0 <flatcc_builder_custom_reset@@Base>
  426989:	nop    DWORD PTR [rax+0x0]

0000000000426990 <flatcc_builder_clear@@Base>:
  426990:	push   r12
  426992:	lea    r12,[rdi+0x58]
  426996:	push   rbp
  426997:	xor    ebp,ebp
  426999:	push   rbx
  42699a:	mov    rbx,rdi
  42699d:	nop    DWORD PTR [rax]
  4269a0:	mov    r8d,ebp
  4269a3:	add    ebp,0x1
  4269a6:	xor    ecx,ecx
  4269a8:	xor    edx,edx
  4269aa:	mov    rsi,r12
  4269ad:	mov    rdi,QWORD PTR [rbx+0x40]
  4269b1:	add    r12,0x10
  4269b5:	call   QWORD PTR [rbx+0x50]
  4269b8:	cmp    ebp,0x8
  4269bb:	jne    4269a0 <flatcc_builder_clear@@Base+0x10>
  4269bd:	mov    eax,DWORD PTR [rbx+0x128]
  4269c3:	test   eax,eax
  4269c5:	je     4269d3 <flatcc_builder_clear@@Base+0x43>
  4269c7:	lea    rdi,[rbx+0x130]
  4269ce:	call   42a150 <flatcc_emitter_clear@@Base>
  4269d3:	lea    rdi,[rbx+0x8]
  4269d7:	mov    QWORD PTR [rbx],0x0
  4269de:	mov    QWORD PTR [rbx+0x180],0x0
  4269e9:	xor    eax,eax
  4269eb:	and    rdi,0xfffffffffffffff8
  4269ef:	sub    rbx,rdi
  4269f2:	lea    ecx,[rbx+0x188]
  4269f8:	shr    ecx,0x3
  4269fb:	rep stos QWORD PTR es:[rdi],rax
  4269fe:	pop    rbx
  4269ff:	pop    rbp
  426a00:	pop    r12
  426a02:	ret    
  426a03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426a0e:	xchg   ax,ax

0000000000426a10 <flatcc_builder_enter_user_frame_ptr@@Base>:
  426a10:	push   r12
  426a12:	push   rbp
  426a13:	mov    r12,rdi
  426a16:	push   rbx
  426a17:	lea    rbx,[rsi+0x7]
  426a1b:	mov    rbp,QWORD PTR [rdi+0x180]
  426a22:	and    rbx,0xfffffffffffffff8
  426a26:	add    rbx,0x8
  426a2a:	lea    rdx,[rbx+rbp*1]
  426a2e:	cmp    rdx,QWORD PTR [rdi+0xd0]
  426a35:	ja     426a88 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
  426a37:	add    rbp,QWORD PTR [r12+0xc8]
  426a3f:	je     426ab0 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
  426a41:	mov    rdx,rbx
  426a44:	xor    esi,esi
  426a46:	mov    rdi,rbp
  426a49:	call   405100 <memset@plt>
  426a4e:	mov    rax,QWORD PTR [r12+0x178]
  426a56:	mov    QWORD PTR [rbp+0x0],rax
  426a5a:	mov    rax,QWORD PTR [r12+0x180]
  426a62:	lea    rdx,[rax+0x8]
  426a66:	add    rbx,rax
  426a69:	lea    rax,[rbp+0x8]
  426a6d:	mov    QWORD PTR [r12+0x180],rbx
  426a75:	mov    QWORD PTR [r12+0x178],rdx
  426a7d:	pop    rbx
  426a7e:	pop    rbp
  426a7f:	pop    r12
  426a81:	ret    
  426a82:	nop    WORD PTR [rax+rax*1+0x0]
  426a88:	lea    rsi,[rdi+0xc8]
  426a8f:	xor    ecx,ecx
  426a91:	mov    rdi,QWORD PTR [rdi+0x40]
  426a95:	mov    r8d,0x7
  426a9b:	call   QWORD PTR [r12+0x50]
  426aa0:	test   eax,eax
  426aa2:	je     426a37 <flatcc_builder_enter_user_frame_ptr@@Base+0x27>
  426aa4:	call   4052bc <__sprintf_chk@plt+0xac>
  426aa9:	nop    DWORD PTR [rax+0x0]
  426ab0:	xor    eax,eax
  426ab2:	jmp    426a7d <flatcc_builder_enter_user_frame_ptr@@Base+0x6d>
  426ab4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426abf:	nop

0000000000426ac0 <flatcc_builder_enter_user_frame@@Base>:
  426ac0:	push   r12
  426ac2:	push   rbp
  426ac3:	mov    r12,rdi
  426ac6:	push   rbx
  426ac7:	lea    rbx,[rsi+0x7]
  426acb:	mov    rbp,QWORD PTR [rdi+0x180]
  426ad2:	and    rbx,0xfffffffffffffff8
  426ad6:	add    rbx,0x8
  426ada:	lea    rdx,[rbx+rbp*1]
  426ade:	cmp    rdx,QWORD PTR [rdi+0xd0]
  426ae5:	ja     426b30 <flatcc_builder_enter_user_frame@@Base+0x70>
  426ae7:	xor    eax,eax
  426ae9:	add    rbp,QWORD PTR [r12+0xc8]
  426af1:	je     426b2b <flatcc_builder_enter_user_frame@@Base+0x6b>
  426af3:	mov    rdx,rbx
  426af6:	xor    esi,esi
  426af8:	mov    rdi,rbp
  426afb:	call   405100 <memset@plt>
  426b00:	mov    rax,QWORD PTR [r12+0x178]
  426b08:	mov    QWORD PTR [rbp+0x0],rax
  426b0c:	mov    rdx,QWORD PTR [r12+0x180]
  426b14:	lea    rax,[rdx+0x8]
  426b18:	add    rbx,rdx
  426b1b:	mov    QWORD PTR [r12+0x180],rbx
  426b23:	mov    QWORD PTR [r12+0x178],rax
  426b2b:	pop    rbx
  426b2c:	pop    rbp
  426b2d:	pop    r12
  426b2f:	ret    
  426b30:	lea    rsi,[rdi+0xc8]
  426b37:	xor    ecx,ecx
  426b39:	mov    rdi,QWORD PTR [rdi+0x40]
  426b3d:	mov    r8d,0x7
  426b43:	call   QWORD PTR [r12+0x50]
  426b48:	test   eax,eax
  426b4a:	je     426ae7 <flatcc_builder_enter_user_frame@@Base+0x27>
  426b4c:	call   4052bc <__sprintf_chk@plt+0xac>
  426b51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426b5c:	nop    DWORD PTR [rax+0x0]

0000000000426b60 <flatcc_builder_exit_user_frame@@Base>:
  426b60:	mov    rax,QWORD PTR [rdi+0x178]
  426b67:	test   rax,rax
  426b6a:	je     426b8c <flatcc_builder_exit_user_frame@@Base+0x2c>
  426b6c:	mov    edx,eax
  426b6e:	add    rdx,QWORD PTR [rdi+0xc8]
  426b75:	sub    rax,0x8
  426b79:	mov    QWORD PTR [rdi+0x180],rax
  426b80:	mov    rax,QWORD PTR [rdx-0x8]
  426b84:	mov    QWORD PTR [rdi+0x178],rax
  426b8b:	ret    
  426b8c:	lea    rcx,[rip+0x218dd]        # 448470 <fb_schema_table_missing@@Base+0x3820>
  426b93:	lea    rsi,[rip+0x20e36]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  426b9a:	lea    rdi,[rip+0x211e8]        # 447d89 <fb_schema_table_missing@@Base+0x3139>
  426ba1:	sub    rsp,0x8
  426ba5:	mov    edx,0x21e
  426baa:	call   4050f0 <__assert_fail@plt>
  426baf:	nop

0000000000426bb0 <flatcc_builder_exit_user_frame_at@@Base>:
  426bb0:	cmp    QWORD PTR [rdi+0x178],rsi
  426bb7:	jb     426bc5 <flatcc_builder_exit_user_frame_at@@Base+0x15>
  426bb9:	mov    QWORD PTR [rdi+0x178],rsi
  426bc0:	jmp    426b60 <flatcc_builder_exit_user_frame@@Base>
  426bc5:	lea    rcx,[rip+0x21874]        # 448440 <fb_schema_table_missing@@Base+0x37f0>
  426bcc:	lea    rsi,[rip+0x20dfd]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  426bd3:	lea    rdi,[rip+0x20e56]        # 447a30 <fb_schema_table_missing@@Base+0x2de0>
  426bda:	sub    rsp,0x8
  426bde:	mov    edx,0x227
  426be3:	call   4050f0 <__assert_fail@plt>
  426be8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426bf0 <flatcc_builder_get_current_user_frame@@Base>:
  426bf0:	mov    rax,QWORD PTR [rdi+0x178]
  426bf7:	ret    
  426bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426c00 <flatcc_builder_get_user_frame_ptr@@Base>:
  426c00:	mov    eax,esi
  426c02:	add    rax,QWORD PTR [rdi+0xc8]
  426c09:	ret    
  426c0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000426c10 <flatcc_builder_embed_buffer@@Base>:
  426c10:	push   r13
  426c12:	push   r12
  426c14:	mov    r12,rcx
  426c17:	push   rbp
  426c18:	push   rbx
  426c19:	xor    ecx,ecx
  426c1b:	mov    rbp,rdx
  426c1e:	movzx  edx,si
  426c21:	mov    rbx,rdi
  426c24:	sub    rsp,0xc8
  426c2b:	mov    r13d,r9d
  426c2e:	mov    WORD PTR [rsp+0xc],r8w
  426c34:	mov    r8d,DWORD PTR [rdi+0x100]
  426c3b:	lea    rsi,[rsp+0xc]
  426c40:	mov    rax,QWORD PTR fs:0x28
  426c49:	mov    QWORD PTR [rsp+0xb8],rax
  426c51:	xor    eax,eax
  426c53:	test   r8d,r8d
  426c56:	setne  cl
  426c59:	call   426250 <flatcc_builder_default_alloc@@Base+0x120>
  426c5e:	test   eax,eax
  426c60:	jne    426da8 <flatcc_builder_embed_buffer@@Base+0x198>
  426c66:	mov    edx,DWORD PTR [rbx+0xf0]
  426c6c:	movzx  ecx,WORD PTR [rsp+0xc]
  426c71:	xor    esi,esi
  426c73:	and    r13d,0x2
  426c77:	mov    QWORD PTR [rsp+0x20],0x0
  426c80:	mov    DWORD PTR [rsp+0x28],0x0
  426c88:	setne  sil
  426c8c:	xor    r8d,r8d
  426c8f:	mov    eax,edx
  426c91:	shl    esi,0x2
  426c94:	sub    eax,r12d
  426c97:	sub    ecx,0x1
  426c9a:	sub    eax,esi
  426c9c:	and    eax,ecx
  426c9e:	lea    ecx,[rax+r12*1]
  426ca2:	mov    DWORD PTR [rsp+0x1c],ecx
  426ca6:	mov    ecx,DWORD PTR [rbx+0x100]
  426cac:	test   ecx,ecx
  426cae:	je     426cda <flatcc_builder_embed_buffer@@Base+0xca>
  426cb0:	lea    rcx,[rsp+0x1c]
  426cb5:	mov    QWORD PTR [rsp+0x20],0x4
  426cbe:	mov    QWORD PTR [rsp+0x38],0x4
  426cc7:	mov    DWORD PTR [rsp+0x28],0x1
  426ccf:	mov    r8d,0x4
  426cd5:	mov    QWORD PTR [rsp+0x30],rcx
  426cda:	test   r12,r12
  426cdd:	je     426d04 <flatcc_builder_embed_buffer@@Base+0xf4>
  426cdf:	movsxd rsi,DWORD PTR [rsp+0x28]
  426ce4:	add    r8,r12
  426ce7:	mov    QWORD PTR [rsp+0x20],r8
  426cec:	mov    rcx,rsi
  426cef:	shl    rsi,0x4
  426cf3:	add    ecx,0x1
  426cf6:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  426cfb:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  426d00:	mov    DWORD PTR [rsp+0x28],ecx
  426d04:	test   eax,eax
  426d06:	jne    426d70 <flatcc_builder_embed_buffer@@Base+0x160>
  426d08:	mov    ebp,edx
  426d0a:	sub    ebp,r8d
  426d0d:	cmp    edx,ebp
  426d0f:	jle    426dac <flatcc_builder_embed_buffer@@Base+0x19c>
  426d15:	movabs rax,0x10000000f
  426d1f:	cmp    r8,rax
  426d22:	ja     426dac <flatcc_builder_embed_buffer@@Base+0x19c>
  426d28:	lea    rsi,[rsp+0x30]
  426d2d:	mov    rdi,QWORD PTR [rbx+0x38]
  426d31:	mov    ecx,ebp
  426d33:	mov    edx,DWORD PTR [rsp+0x28]
  426d37:	call   QWORD PTR [rbx+0x48]
  426d3a:	test   eax,eax
  426d3c:	jne    426dd0 <flatcc_builder_embed_buffer@@Base+0x1c0>
  426d42:	mov    DWORD PTR [rbx+0xf0],ebp
  426d48:	mov    rdi,QWORD PTR [rsp+0xb8]
  426d50:	xor    rdi,QWORD PTR fs:0x28
  426d59:	mov    eax,ebp
  426d5b:	jne    426dcb <flatcc_builder_embed_buffer@@Base+0x1bb>
  426d5d:	add    rsp,0xc8
  426d64:	pop    rbx
  426d65:	pop    rbp
  426d66:	pop    r12
  426d68:	pop    r13
  426d6a:	ret    
  426d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  426d70:	movsxd rsi,DWORD PTR [rsp+0x28]
  426d75:	mov    rdi,0x4484c0
  426d7c:	add    r8,rax
  426d7f:	mov    QWORD PTR [rsp+0x20],r8
  426d84:	mov    rcx,rsi
  426d87:	shl    rsi,0x4
  426d8b:	add    ecx,0x1
  426d8e:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  426d93:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  426d98:	mov    DWORD PTR [rsp+0x28],ecx
  426d9c:	jmp    426d08 <flatcc_builder_embed_buffer@@Base+0xf8>
  426da1:	nop    DWORD PTR [rax+0x0]
  426da8:	xor    ebp,ebp
  426daa:	jmp    426d48 <flatcc_builder_embed_buffer@@Base+0x138>
  426dac:	lea    rcx,[rip+0x2165d]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  426db3:	lea    rsi,[rip+0x20c16]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  426dba:	lea    rdi,[rip+0xed48]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  426dc1:	mov    edx,0x287
  426dc6:	call   4050f0 <__assert_fail@plt>
  426dcb:	call   4050d0 <__stack_chk_fail@plt>
  426dd0:	call   405302 <__sprintf_chk@plt+0xf2>
  426dd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000426de0 <flatcc_builder_create_buffer@@Base>:
  426de0:	push   r14
  426de2:	push   r13
  426de4:	mov    r13d,r9d
  426de7:	push   r12
  426de9:	push   rbp
  426dea:	and    r13d,0x1
  426dee:	push   rbx
  426def:	mov    r14,rsi
  426df2:	mov    r12d,ecx
  426df5:	movzx  edx,dx
  426df8:	mov    ecx,r13d
  426dfb:	mov    rbp,rdi
  426dfe:	sub    rsp,0xc0
  426e05:	mov    ebx,r9d
  426e08:	lea    rsi,[rsp+0xc]
  426e0d:	mov    WORD PTR [rsp+0xc],r8w
  426e13:	mov    DWORD PTR [rsp+0x1c],0x0
  426e1b:	mov    rax,QWORD PTR fs:0x28
  426e24:	mov    QWORD PTR [rsp+0xb8],rax
  426e2c:	xor    eax,eax
  426e2e:	call   426250 <flatcc_builder_default_alloc@@Base+0x120>
  426e33:	test   eax,eax
  426e35:	jne    426ff0 <flatcc_builder_create_buffer@@Base+0x210>
  426e3b:	movzx  ecx,WORD PTR [rsp+0xc]
  426e40:	cmp    cx,WORD PTR [rbp+0xe8]
  426e47:	ja     426fe0 <flatcc_builder_create_buffer@@Base+0x200>
  426e4d:	test   r14,r14
  426e50:	mov    eax,DWORD PTR [rsp+0x1c]
  426e54:	je     426e5d <flatcc_builder_create_buffer@@Base+0x7d>
  426e56:	mov    eax,DWORD PTR [r14]
  426e59:	mov    DWORD PTR [rsp+0x1c],eax
  426e5d:	xor    r10d,r10d
  426e60:	test   eax,eax
  426e62:	mov    edi,ebx
  426e64:	setne  r10b
  426e68:	and    edi,0x1
  426e6b:	mov    edx,DWORD PTR [rbp+0xf0]
  426e71:	shl    r10d,0x2
  426e75:	and    ebx,0x2
  426e78:	jne    426fa8 <flatcc_builder_create_buffer@@Base+0x1c8>
  426e7e:	lea    eax,[rdx-0x4]
  426e81:	sub    ecx,0x1
  426e84:	sub    eax,r10d
  426e87:	and    eax,ecx
  426e89:	test   dil,dil
  426e8c:	jne    426fb3 <flatcc_builder_create_buffer@@Base+0x1d3>
  426e92:	mov    ecx,0x1
  426e97:	mov    r8d,0x4
  426e9d:	movsxd rsi,ebx
  426ea0:	lea    r9,[rsp+0x14]
  426ea5:	mov    QWORD PTR [rsp+0x20],r8
  426eaa:	shl    rsi,0x4
  426eae:	test   r10d,r10d
  426eb1:	mov    DWORD PTR [rsp+0x28],ecx
  426eb5:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  426eba:	mov    QWORD PTR [rsp+rsi*1+0x38],0x4
  426ec3:	je     426ee7 <flatcc_builder_create_buffer@@Base+0x107>
  426ec5:	lea    rsi,[rsp+0x1c]
  426eca:	shl    rcx,0x4
  426ece:	add    r8,r10
  426ed1:	add    ebx,0x2
  426ed4:	mov    QWORD PTR [rsp+0x20],r8
  426ed9:	mov    QWORD PTR [rsp+rcx*1+0x38],r10
  426ede:	mov    QWORD PTR [rsp+rcx*1+0x30],rsi
  426ee3:	mov    DWORD PTR [rsp+0x28],ebx
  426ee7:	test   eax,eax
  426ee9:	je     426f17 <flatcc_builder_create_buffer@@Base+0x137>
  426eeb:	movsxd rsi,DWORD PTR [rsp+0x28]
  426ef0:	mov    r9,0x4484c0
  426ef7:	add    r8,rax
  426efa:	mov    QWORD PTR [rsp+0x20],r8
  426eff:	mov    rcx,rsi
  426f02:	shl    rsi,0x4
  426f06:	add    ecx,0x1
  426f09:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  426f0e:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  426f13:	mov    DWORD PTR [rsp+0x28],ecx
  426f17:	mov    eax,edx
  426f19:	sub    eax,r8d
  426f1c:	test   dil,dil
  426f1f:	je     426ff8 <flatcc_builder_create_buffer@@Base+0x218>
  426f25:	add    eax,0x4
  426f28:	test   r13d,r13d
  426f2b:	je     426ff8 <flatcc_builder_create_buffer@@Base+0x218>
  426f31:	mov    ecx,DWORD PTR [rbp+0xf8]
  426f37:	sub    ecx,eax
  426f39:	mov    DWORD PTR [rsp+0x18],ecx
  426f3d:	mov    ebx,edx
  426f3f:	sub    r12d,eax
  426f42:	sub    ebx,r8d
  426f45:	mov    DWORD PTR [rsp+0x14],r12d
  426f4a:	cmp    ebx,edx
  426f4c:	jge    427009 <flatcc_builder_create_buffer@@Base+0x229>
  426f52:	lea    rsi,[rsp+0x30]
  426f57:	mov    rdi,QWORD PTR [rbp+0x38]
  426f5b:	mov    ecx,ebx
  426f5d:	mov    edx,DWORD PTR [rsp+0x28]
  426f61:	call   QWORD PTR [rbp+0x48]
  426f64:	test   eax,eax
  426f66:	jne    42702d <flatcc_builder_create_buffer@@Base+0x24d>
  426f6c:	test   ebx,ebx
  426f6e:	mov    DWORD PTR [rbp+0xf0],ebx
  426f74:	je     427032 <flatcc_builder_create_buffer@@Base+0x252>
  426f7a:	mov    rdi,QWORD PTR [rsp+0xb8]
  426f82:	xor    rdi,QWORD PTR fs:0x28
  426f8b:	mov    eax,ebx
  426f8d:	jne    427028 <flatcc_builder_create_buffer@@Base+0x248>
  426f93:	add    rsp,0xc0
  426f9a:	pop    rbx
  426f9b:	pop    rbp
  426f9c:	pop    r12
  426f9e:	pop    r13
  426fa0:	pop    r14
  426fa2:	ret    
  426fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  426fa8:	lea    eax,[rdx-0x8]
  426fab:	sub    ecx,0x1
  426fae:	sub    eax,r10d
  426fb1:	and    eax,ecx
  426fb3:	lea    rcx,[rsp+0x18]
  426fb8:	mov    QWORD PTR [rsp+0x38],0x4
  426fc1:	mov    ebx,0x1
  426fc6:	mov    r8d,0x8
  426fcc:	mov    edi,0x1
  426fd1:	mov    QWORD PTR [rsp+0x30],rcx
  426fd6:	mov    ecx,0x2
  426fdb:	jmp    426e9d <flatcc_builder_create_buffer@@Base+0xbd>
  426fe0:	mov    WORD PTR [rbp+0xe8],cx
  426fe7:	jmp    426e4d <flatcc_builder_create_buffer@@Base+0x6d>
  426fec:	nop    DWORD PTR [rax+0x0]
  426ff0:	xor    ebx,ebx
  426ff2:	jmp    426f7a <flatcc_builder_create_buffer@@Base+0x19a>
  426ff4:	nop    DWORD PTR [rax+0x0]
  426ff8:	mov    ecx,DWORD PTR [rbp+0xf4]
  426ffe:	sub    ecx,eax
  427000:	mov    DWORD PTR [rsp+0x18],ecx
  427004:	jmp    426f3d <flatcc_builder_create_buffer@@Base+0x15d>
  427009:	lea    rcx,[rip+0x21400]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  427010:	lea    rsi,[rip+0x209b9]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427017:	lea    rdi,[rip+0xeaeb]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  42701e:	mov    edx,0x287
  427023:	call   4050f0 <__assert_fail@plt>
  427028:	call   4050d0 <__stack_chk_fail@plt>
  42702d:	call   405302 <__sprintf_chk@plt+0xf2>
  427032:	lea    rcx,[rip+0x213b7]        # 4483f0 <fb_schema_table_missing@@Base+0x37a0>
  427039:	lea    rsi,[rip+0x20990]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427040:	lea    rdi,[rip+0xeac2]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  427047:	mov    edx,0x304
  42704c:	call   4050f0 <__assert_fail@plt>
  427051:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42705c:	nop    DWORD PTR [rax+0x0]

0000000000427060 <flatcc_builder_create_struct@@Base>:
  427060:	push   rbp
  427061:	push   rbx
  427062:	sub    rsp,0xa8
  427069:	mov    rax,QWORD PTR fs:0x28
  427072:	mov    QWORD PTR [rsp+0x98],rax
  42707a:	xor    eax,eax
  42707c:	test   cx,cx
  42707f:	je     42718f <flatcc_builder_create_struct@@Base+0x12f>
  427085:	mov    rbx,rdi
  427088:	mov    r8,rdx
  42708b:	movzx  edi,cx
  42708e:	cmp    cx,WORD PTR [rbx+0xe8]
  427095:	jbe    42709e <flatcc_builder_create_struct@@Base+0x3e>
  427097:	mov    WORD PTR [rbx+0xe8],cx
  42709e:	mov    edx,DWORD PTR [rbx+0xf0]
  4270a4:	lea    ecx,[rdi-0x1]
  4270a7:	mov    QWORD PTR [rsp],0x0
  4270af:	mov    DWORD PTR [rsp+0x8],0x0
  4270b7:	mov    eax,edx
  4270b9:	sub    eax,r8d
  4270bc:	and    eax,ecx
  4270be:	test   r8,r8
  4270c1:	jne    427150 <flatcc_builder_create_struct@@Base+0xf0>
  4270c7:	test   eax,eax
  4270c9:	je     4270f6 <flatcc_builder_create_struct@@Base+0x96>
  4270cb:	movsxd rsi,DWORD PTR [rsp+0x8]
  4270d0:	mov    rdi,0x4484c0
  4270d7:	add    r8,rax
  4270da:	mov    QWORD PTR [rsp],r8
  4270de:	mov    rcx,rsi
  4270e1:	shl    rsi,0x4
  4270e5:	add    ecx,0x1
  4270e8:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  4270ed:	mov    QWORD PTR [rsp+rsi*1+0x18],rax
  4270f2:	mov    DWORD PTR [rsp+0x8],ecx
  4270f6:	mov    ebp,edx
  4270f8:	movabs rax,0x10000000f
  427102:	sub    ebp,r8d
  427105:	cmp    r8,rax
  427108:	ja     42716b <flatcc_builder_create_struct@@Base+0x10b>
  42710a:	cmp    edx,ebp
  42710c:	jle    42716b <flatcc_builder_create_struct@@Base+0x10b>
  42710e:	lea    rsi,[rsp+0x10]
  427113:	mov    rdi,QWORD PTR [rbx+0x38]
  427117:	mov    ecx,ebp
  427119:	mov    edx,DWORD PTR [rsp+0x8]
  42711d:	call   QWORD PTR [rbx+0x48]
  427120:	test   eax,eax
  427122:	jne    42718a <flatcc_builder_create_struct@@Base+0x12a>
  427124:	mov    rdx,QWORD PTR [rsp+0x98]
  42712c:	xor    rdx,QWORD PTR fs:0x28
  427135:	mov    DWORD PTR [rbx+0xf0],ebp
  42713b:	mov    eax,ebp
  42713d:	jne    4271ae <flatcc_builder_create_struct@@Base+0x14e>
  42713f:	add    rsp,0xa8
  427146:	pop    rbx
  427147:	pop    rbp
  427148:	ret    
  427149:	nop    DWORD PTR [rax+0x0]
  427150:	mov    QWORD PTR [rsp],r8
  427154:	mov    QWORD PTR [rsp+0x10],rsi
  427159:	mov    QWORD PTR [rsp+0x18],r8
  42715e:	mov    DWORD PTR [rsp+0x8],0x1
  427166:	jmp    4270c7 <flatcc_builder_create_struct@@Base+0x67>
  42716b:	lea    rcx,[rip+0x2129e]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  427172:	lea    rsi,[rip+0x20857]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427179:	lea    rdi,[rip+0xe989]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  427180:	mov    edx,0x287
  427185:	call   4050f0 <__assert_fail@plt>
  42718a:	call   405302 <__sprintf_chk@plt+0xf2>
  42718f:	lea    rcx,[rip+0x2123a]        # 4483d0 <fb_schema_table_missing@@Base+0x3780>
  427196:	lea    rsi,[rip+0x20833]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42719d:	lea    rdi,[rip+0x20bfe]        # 447da2 <fb_schema_table_missing@@Base+0x3152>
  4271a4:	mov    edx,0x30f
  4271a9:	call   4050f0 <__assert_fail@plt>
  4271ae:	call   4050d0 <__stack_chk_fail@plt>
  4271b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4271be:	xchg   ax,ax

00000000004271c0 <flatcc_builder_start_buffer@@Base>:
  4271c0:	push   r13
  4271c2:	push   r12
  4271c4:	mov    r13d,edx
  4271c7:	push   rbp
  4271c8:	push   rbx
  4271c9:	mov    rbp,rsi
  4271cc:	mov    rbx,rdi
  4271cf:	mov    r12d,ecx
  4271d2:	sub    rsp,0x8
  4271d6:	movzx  esi,WORD PTR [rdi+0xe8]
  4271dd:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  4271e2:	test   eax,eax
  4271e4:	jne    427290 <flatcc_builder_start_buffer@@Base+0xd0>
  4271ea:	movzx  edx,WORD PTR [rbx+0xec]
  4271f1:	mov    rdi,QWORD PTR [rbx+0x30]
  4271f5:	mov    ecx,0x1
  4271fa:	mov    WORD PTR [rbx+0xe8],cx
  427201:	test   rbp,rbp
  427204:	mov    rsi,rbp
  427207:	mov    WORD PTR [rdi+0x22],dx
  42720b:	movzx  edx,WORD PTR [rbx+0x10c]
  427212:	mov    WORD PTR [rbx+0xec],r13w
  42721a:	mov    WORD PTR [rdi+0x20],dx
  42721e:	mov    edx,DWORD PTR [rbx+0xf8]
  427224:	mov    WORD PTR [rbx+0x10c],r12w
  42722c:	mov    DWORD PTR [rdi+0x14],edx
  42722f:	mov    edx,DWORD PTR [rbx+0x100]
  427235:	mov    DWORD PTR [rdi+0x1c],edx
  427238:	mov    edx,DWORD PTR [rbx+0xf0]
  42723e:	mov    DWORD PTR [rbx+0xf8],edx
  427244:	mov    edx,DWORD PTR [rbx+0xfc]
  42724a:	lea    ecx,[rdx+0x1]
  42724d:	mov    DWORD PTR [rbx+0x100],edx
  427253:	mov    edx,DWORD PTR [rbx+0x110]
  427259:	mov    DWORD PTR [rbx+0xfc],ecx
  42725f:	mov    DWORD PTR [rdi+0x10],edx
  427262:	je     427280 <flatcc_builder_start_buffer@@Base+0xc0>
  427264:	mov    edx,DWORD PTR [rsi]
  427266:	mov    DWORD PTR [rbx+0x110],edx
  42726c:	mov    edx,0x1
  427271:	mov    WORD PTR [rdi+0xe],dx
  427275:	add    rsp,0x8
  427279:	pop    rbx
  42727a:	pop    rbp
  42727b:	pop    r12
  42727d:	pop    r13
  42727f:	ret    
  427280:	mov    rsi,0x4484c0
  427287:	jmp    427264 <flatcc_builder_start_buffer@@Base+0xa4>
  427289:	nop    DWORD PTR [rax+0x0]
  427290:	mov    eax,0xffffffff
  427295:	jmp    427275 <flatcc_builder_start_buffer@@Base+0xb5>
  427297:	nop    WORD PTR [rax+rax*1+0x0]

00000000004272a0 <flatcc_builder_end_buffer@@Base>:
  4272a0:	push   rbp
  4272a1:	push   rbx
  4272a2:	xor    eax,eax
  4272a4:	sub    rsp,0x8
  4272a8:	movzx  r9d,WORD PTR [rdi+0x10c]
  4272b0:	mov    edx,DWORD PTR [rdi+0x100]
  4272b6:	and    r9d,0x2
  4272ba:	test   edx,edx
  4272bc:	setne  al
  4272bf:	or     r9d,eax
  4272c2:	mov    rax,QWORD PTR [rdi+0x30]
  4272c6:	cmp    WORD PTR [rax+0xe],0x1
  4272cb:	jne    4273c1 <flatcc_builder_end_buffer@@Base+0x121>
  4272d1:	movzx  edx,WORD PTR [rdi+0xec]
  4272d8:	movzx  r8d,WORD PTR [rdi+0xe8]
  4272e0:	mov    rbx,rdi
  4272e3:	mov    ecx,esi
  4272e5:	cmp    dx,r8w
  4272e9:	ja     427310 <flatcc_builder_end_buffer@@Base+0x70>
  4272eb:	lea    rsi,[rbx+0x110]
  4272f2:	mov    rdi,rbx
  4272f5:	call   426de0 <flatcc_builder_create_buffer@@Base>
  4272fa:	test   eax,eax
  4272fc:	mov    ebp,eax
  4272fe:	jne    427320 <flatcc_builder_end_buffer@@Base+0x80>
  427300:	add    rsp,0x8
  427304:	mov    eax,ebp
  427306:	pop    rbx
  427307:	pop    rbp
  427308:	ret    
  427309:	nop    DWORD PTR [rax+0x0]
  427310:	mov    WORD PTR [rbx+0xe8],dx
  427317:	mov    r8d,edx
  42731a:	jmp    4272eb <flatcc_builder_end_buffer@@Base+0x4b>
  42731c:	nop    DWORD PTR [rax+0x0]
  427320:	mov    rax,QWORD PTR [rbx+0x30]
  427324:	mov    rdi,QWORD PTR [rbx+0x18]
  427328:	xor    esi,esi
  42732a:	mov    edx,DWORD PTR [rax+0x14]
  42732d:	mov    DWORD PTR [rbx+0xf8],edx
  427333:	mov    edx,DWORD PTR [rax+0x1c]
  427336:	mov    DWORD PTR [rbx+0x100],edx
  42733c:	mov    edx,DWORD PTR [rax+0x10]
  42733f:	mov    DWORD PTR [rbx+0x110],edx
  427345:	movzx  eax,WORD PTR [rax+0x20]
  427349:	mov    edx,DWORD PTR [rbx+0x20]
  42734c:	mov    WORD PTR [rbx+0x10c],ax
  427353:	call   405100 <memset@plt>
  427358:	mov    rax,QWORD PTR [rbx+0x30]
  42735c:	mov    edi,DWORD PTR [rbx+0x70]
  42735f:	mov    esi,DWORD PTR [rax]
  427361:	mov    edx,DWORD PTR [rax+0x8]
  427364:	mov    ecx,DWORD PTR [rax+0x4]
  427367:	mov    DWORD PTR [rbx+0x20],edx
  42736a:	mov    rdx,rsi
  42736d:	mov    DWORD PTR [rbx+0x28],esi
  427370:	add    rsi,QWORD PTR [rbx+0x68]
  427374:	sub    edi,edx
  427376:	cmp    ecx,edi
  427378:	mov    edx,edi
  42737a:	cmovb  edx,ecx
  42737d:	mov    DWORD PTR [rbx+0x24],edx
  427380:	movzx  edx,WORD PTR [rbx+0xea]
  427387:	cmp    dx,WORD PTR [rbx+0xe8]
  42738e:	mov    QWORD PTR [rbx+0x18],rsi
  427392:	mov    DWORD PTR [rax+0x4],ecx
  427395:	jbe    42739e <flatcc_builder_end_buffer@@Base+0xfe>
  427397:	mov    WORD PTR [rbx+0xe8],dx
  42739e:	movzx  edx,WORD PTR [rax+0xc]
  4273a2:	sub    rax,0x24
  4273a6:	sub    DWORD PTR [rbx+0x104],0x1
  4273ad:	mov    QWORD PTR [rbx+0x30],rax
  4273b1:	mov    eax,ebp
  4273b3:	mov    WORD PTR [rbx+0xea],dx
  4273ba:	add    rsp,0x8
  4273be:	pop    rbx
  4273bf:	pop    rbp
  4273c0:	ret    
  4273c1:	lea    rcx,[rip+0x20fe8]        # 4483b0 <fb_schema_table_missing@@Base+0x3760>
  4273c8:	lea    rsi,[rip+0x20601]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4273cf:	lea    rdi,[rip+0x2067a]        # 447a50 <fb_schema_table_missing@@Base+0x2e00>
  4273d6:	mov    edx,0x346
  4273db:	call   4050f0 <__assert_fail@plt>

00000000004273e0 <flatcc_builder_start_struct@@Base>:
  4273e0:	push   r12
  4273e2:	push   rbp
  4273e3:	mov    rbp,rsi
  4273e6:	push   rbx
  4273e7:	movzx  esi,dx
  4273ea:	mov    rbx,rdi
  4273ed:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  4273f2:	test   eax,eax
  4273f4:	jne    427470 <flatcc_builder_start_struct@@Base+0x90>
  4273f6:	mov    rcx,QWORD PTR [rbx+0x30]
  4273fa:	mov    eax,0x2
  4273ff:	mov    edi,DWORD PTR [rbx+0x70]
  427402:	mov    WORD PTR [rcx+0xe],ax
  427406:	mov    eax,DWORD PTR [rbx+0x28]
  427409:	mov    rdx,rax
  42740c:	add    rax,QWORD PTR [rbx+0x68]
  427410:	sub    edi,edx
  427412:	cmp    edi,0xfffffffc
  427415:	mov    edx,edi
  427417:	mov    QWORD PTR [rbx+0x18],rax
  42741b:	ja     427440 <flatcc_builder_start_struct@@Base+0x60>
  42741d:	mov    DWORD PTR [rbx+0x24],edi
  427420:	mov    r12d,DWORD PTR [rbx+0x20]
  427424:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42742b:	mov    rsi,r12
  42742e:	add    esi,ebp
  427430:	cmp    esi,edx
  427432:	mov    DWORD PTR [rbx+0x20],esi
  427435:	jae    427450 <flatcc_builder_start_struct@@Base+0x70>
  427437:	add    rax,r12
  42743a:	pop    rbx
  42743b:	pop    rbp
  42743c:	pop    r12
  42743e:	ret    
  42743f:	nop
  427440:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  427447:	mov    edx,0xfffffffc
  42744c:	jmp    427420 <flatcc_builder_start_struct@@Base+0x40>
  42744e:	xchg   ax,ax
  427450:	add    esi,0x1
  427453:	mov    edx,0xfffffffc
  427458:	mov    rdi,rbx
  42745b:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  427460:	test   eax,eax
  427462:	jne    427470 <flatcc_builder_start_struct@@Base+0x90>
  427464:	mov    rax,QWORD PTR [rbx+0x18]
  427468:	jmp    427437 <flatcc_builder_start_struct@@Base+0x57>
  42746a:	nop    WORD PTR [rax+rax*1+0x0]
  427470:	pop    rbx
  427471:	xor    eax,eax
  427473:	pop    rbp
  427474:	pop    r12
  427476:	ret    
  427477:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427480 <flatcc_builder_struct_edit@@Base>:
  427480:	mov    rax,QWORD PTR [rdi+0x18]
  427484:	ret    
  427485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000427490 <flatcc_builder_end_struct@@Base>:
  427490:	push   rbp
  427491:	push   rbx
  427492:	sub    rsp,0x8
  427496:	mov    rax,QWORD PTR [rdi+0x30]
  42749a:	cmp    WORD PTR [rax+0xe],0x2
  42749f:	jne    427547 <flatcc_builder_end_struct@@Base+0xb7>
  4274a5:	movzx  ecx,WORD PTR [rdi+0xea]
  4274ac:	mov    edx,DWORD PTR [rdi+0x20]
  4274af:	mov    rbx,rdi
  4274b2:	mov    rsi,QWORD PTR [rdi+0x18]
  4274b6:	call   427060 <flatcc_builder_create_struct@@Base>
  4274bb:	test   eax,eax
  4274bd:	mov    ebp,eax
  4274bf:	jne    4274d0 <flatcc_builder_end_struct@@Base+0x40>
  4274c1:	add    rsp,0x8
  4274c5:	mov    eax,ebp
  4274c7:	pop    rbx
  4274c8:	pop    rbp
  4274c9:	ret    
  4274ca:	nop    WORD PTR [rax+rax*1+0x0]
  4274d0:	mov    edx,DWORD PTR [rbx+0x20]
  4274d3:	mov    rdi,QWORD PTR [rbx+0x18]
  4274d7:	xor    esi,esi
  4274d9:	call   405100 <memset@plt>
  4274de:	mov    rax,QWORD PTR [rbx+0x30]
  4274e2:	mov    edi,DWORD PTR [rbx+0x70]
  4274e5:	mov    esi,DWORD PTR [rax]
  4274e7:	mov    edx,DWORD PTR [rax+0x8]
  4274ea:	mov    ecx,DWORD PTR [rax+0x4]
  4274ed:	mov    DWORD PTR [rbx+0x20],edx
  4274f0:	mov    rdx,rsi
  4274f3:	mov    DWORD PTR [rbx+0x28],esi
  4274f6:	add    rsi,QWORD PTR [rbx+0x68]
  4274fa:	sub    edi,edx
  4274fc:	cmp    ecx,edi
  4274fe:	mov    edx,edi
  427500:	cmovb  edx,ecx
  427503:	mov    DWORD PTR [rbx+0x24],edx
  427506:	movzx  edx,WORD PTR [rbx+0xea]
  42750d:	cmp    dx,WORD PTR [rbx+0xe8]
  427514:	mov    QWORD PTR [rbx+0x18],rsi
  427518:	mov    DWORD PTR [rax+0x4],ecx
  42751b:	jbe    427524 <flatcc_builder_end_struct@@Base+0x94>
  42751d:	mov    WORD PTR [rbx+0xe8],dx
  427524:	movzx  edx,WORD PTR [rax+0xc]
  427528:	sub    rax,0x24
  42752c:	sub    DWORD PTR [rbx+0x104],0x1
  427533:	mov    QWORD PTR [rbx+0x30],rax
  427537:	mov    eax,ebp
  427539:	mov    WORD PTR [rbx+0xea],dx
  427540:	add    rsp,0x8
  427544:	pop    rbx
  427545:	pop    rbp
  427546:	ret    
  427547:	lea    rcx,[rip+0x20e42]        # 448390 <fb_schema_table_missing@@Base+0x3740>
  42754e:	lea    rsi,[rip+0x2047b]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427555:	lea    rdi,[rip+0x20524]        # 447a80 <fb_schema_table_missing@@Base+0x2e30>
  42755c:	mov    edx,0x368
  427561:	call   4050f0 <__assert_fail@plt>
  427566:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427570 <flatcc_builder_extend_vector@@Base>:
  427570:	push   rbp
  427571:	push   rbx
  427572:	mov    eax,esi
  427574:	sub    rsp,0x8
  427578:	mov    rdx,QWORD PTR [rdi+0x30]
  42757c:	add    eax,DWORD PTR [rdx+0x14]
  42757f:	setb   cl
  427582:	cmp    DWORD PTR [rdx+0x18],eax
  427585:	jb     4275cd <flatcc_builder_extend_vector@@Base+0x5d>
  427587:	movzx  ecx,cl
  42758a:	test   ecx,ecx
  42758c:	jne    4275cd <flatcc_builder_extend_vector@@Base+0x5d>
  42758e:	imul   esi,DWORD PTR [rdx+0x10]
  427592:	mov    DWORD PTR [rdx+0x14],eax
  427595:	mov    ebp,DWORD PTR [rdi+0x20]
  427598:	mov    rbx,rdi
  42759b:	add    esi,ebp
  42759d:	cmp    esi,DWORD PTR [rdi+0x24]
  4275a0:	mov    DWORD PTR [rdi+0x20],esi
  4275a3:	jae    4275b8 <flatcc_builder_extend_vector@@Base+0x48>
  4275a5:	mov    rax,rbp
  4275a8:	add    rax,QWORD PTR [rbx+0x18]
  4275ac:	add    rsp,0x8
  4275b0:	pop    rbx
  4275b1:	pop    rbp
  4275b2:	ret    
  4275b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4275b8:	add    esi,0x1
  4275bb:	mov    edx,0xfffffffc
  4275c0:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4275c5:	test   eax,eax
  4275c7:	je     4275a5 <flatcc_builder_extend_vector@@Base+0x35>
  4275c9:	xor    eax,eax
  4275cb:	jmp    4275ac <flatcc_builder_extend_vector@@Base+0x3c>
  4275cd:	call   405325 <__sprintf_chk@plt+0x115>
  4275d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4275dd:	nop    DWORD PTR [rax]

00000000004275e0 <flatcc_builder_vector_push@@Base>:
  4275e0:	push   r13
  4275e2:	push   r12
  4275e4:	push   rbp
  4275e5:	push   rbx
  4275e6:	sub    rsp,0x8
  4275ea:	mov    rax,QWORD PTR [rdi+0x30]
  4275ee:	cmp    WORD PTR [rax+0xe],0x4
  4275f3:	jne    427674 <flatcc_builder_vector_push@@Base+0x94>
  4275f5:	mov    edx,DWORD PTR [rax+0x14]
  4275f8:	cmp    edx,DWORD PTR [rax+0x18]
  4275fb:	ja     427655 <flatcc_builder_vector_push@@Base+0x75>
  4275fd:	add    edx,0x1
  427600:	mov    r12d,DWORD PTR [rax+0x10]
  427604:	mov    rbx,rdi
  427607:	mov    DWORD PTR [rax+0x14],edx
  42760a:	mov    ebp,DWORD PTR [rdi+0x20]
  42760d:	mov    r13,rsi
  427610:	mov    rcx,rbp
  427613:	add    ecx,r12d
  427616:	cmp    ecx,DWORD PTR [rdi+0x24]
  427619:	mov    DWORD PTR [rdi+0x20],ecx
  42761c:	jae    427640 <flatcc_builder_vector_push@@Base+0x60>
  42761e:	add    rbp,QWORD PTR [rbx+0x18]
  427622:	je     427632 <flatcc_builder_vector_push@@Base+0x52>
  427624:	mov    edx,r12d
  427627:	mov    rsi,r13
  42762a:	mov    rdi,rbp
  42762d:	call   405160 <memcpy@plt>
  427632:	add    rsp,0x8
  427636:	mov    rax,rbp
  427639:	pop    rbx
  42763a:	pop    rbp
  42763b:	pop    r12
  42763d:	pop    r13
  42763f:	ret    
  427640:	lea    esi,[rcx+0x1]
  427643:	mov    edx,0xfffffffc
  427648:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42764d:	test   eax,eax
  42764f:	je     42761e <flatcc_builder_vector_push@@Base+0x3e>
  427651:	xor    ebp,ebp
  427653:	jmp    427632 <flatcc_builder_vector_push@@Base+0x52>
  427655:	lea    rcx,[rip+0x20cf4]        # 448350 <fb_schema_table_missing@@Base+0x3700>
  42765c:	lea    rsi,[rip+0x2036d]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427663:	lea    rdi,[rip+0x20476]        # 447ae0 <fb_schema_table_missing@@Base+0x2e90>
  42766a:	mov    edx,0x38c
  42766f:	call   4050f0 <__assert_fail@plt>
  427674:	lea    rcx,[rip+0x20cd5]        # 448350 <fb_schema_table_missing@@Base+0x3700>
  42767b:	lea    rsi,[rip+0x2034e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427682:	lea    rdi,[rip+0x20427]        # 447ab0 <fb_schema_table_missing@@Base+0x2e60>
  427689:	mov    edx,0x38b
  42768e:	call   4050f0 <__assert_fail@plt>
  427693:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42769e:	xchg   ax,ax

00000000004276a0 <flatcc_builder_append_vector@@Base>:
  4276a0:	push   r13
  4276a2:	push   r12
  4276a4:	push   rbp
  4276a5:	push   rbx
  4276a6:	sub    rsp,0x8
  4276aa:	mov    rax,QWORD PTR [rdi+0x30]
  4276ae:	cmp    WORD PTR [rax+0xe],0x4
  4276b3:	jne    42772b <flatcc_builder_append_vector@@Base+0x8b>
  4276b5:	mov    r13,rsi
  4276b8:	mov    ecx,edx
  4276ba:	xor    esi,esi
  4276bc:	add    ecx,DWORD PTR [rax+0x14]
  4276bf:	setb   sil
  4276c3:	cmp    DWORD PTR [rax+0x18],ecx
  4276c6:	jb     427726 <flatcc_builder_append_vector@@Base+0x86>
  4276c8:	test   esi,esi
  4276ca:	jne    427726 <flatcc_builder_append_vector@@Base+0x86>
  4276cc:	mov    ebx,DWORD PTR [rax+0x10]
  4276cf:	mov    DWORD PTR [rax+0x14],ecx
  4276d2:	mov    rbp,rdi
  4276d5:	mov    r12d,DWORD PTR [rdi+0x20]
  4276d9:	imul   ebx,edx
  4276dc:	mov    rdx,r12
  4276df:	add    edx,ebx
  4276e1:	cmp    edx,DWORD PTR [rdi+0x24]
  4276e4:	mov    DWORD PTR [rdi+0x20],edx
  4276e7:	jae    427710 <flatcc_builder_append_vector@@Base+0x70>
  4276e9:	add    r12,QWORD PTR [rbp+0x18]
  4276ed:	je     4276fc <flatcc_builder_append_vector@@Base+0x5c>
  4276ef:	mov    edx,ebx
  4276f1:	mov    rsi,r13
  4276f4:	mov    rdi,r12
  4276f7:	call   405160 <memcpy@plt>
  4276fc:	add    rsp,0x8
  427700:	mov    rax,r12
  427703:	pop    rbx
  427704:	pop    rbp
  427705:	pop    r12
  427707:	pop    r13
  427709:	ret    
  42770a:	nop    WORD PTR [rax+rax*1+0x0]
  427710:	lea    esi,[rdx+0x1]
  427713:	mov    edx,0xfffffffc
  427718:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42771d:	test   eax,eax
  42771f:	je     4276e9 <flatcc_builder_append_vector@@Base+0x49>
  427721:	xor    r12d,r12d
  427724:	jmp    4276fc <flatcc_builder_append_vector@@Base+0x5c>
  427726:	call   405325 <__sprintf_chk@plt+0x115>
  42772b:	lea    rcx,[rip+0x20bfe]        # 448330 <fb_schema_table_missing@@Base+0x36e0>
  427732:	lea    rsi,[rip+0x20297]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427739:	lea    rdi,[rip+0x20370]        # 447ab0 <fb_schema_table_missing@@Base+0x2e60>
  427740:	mov    edx,0x393
  427745:	call   4050f0 <__assert_fail@plt>
  42774a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427750 <flatcc_builder_extend_offset_vector@@Base>:
  427750:	push   rbp
  427751:	push   rbx
  427752:	xor    edx,edx
  427754:	mov    ecx,esi
  427756:	sub    rsp,0x8
  42775a:	mov    rax,QWORD PTR [rdi+0x30]
  42775e:	add    ecx,DWORD PTR [rax+0x14]
  427761:	setb   dl
  427764:	test   edx,edx
  427766:	jne    4277ad <flatcc_builder_extend_offset_vector@@Base+0x5d>
  427768:	cmp    ecx,0x3fffffff
  42776e:	ja     4277ad <flatcc_builder_extend_offset_vector@@Base+0x5d>
  427770:	mov    DWORD PTR [rax+0x14],ecx
  427773:	mov    ebp,DWORD PTR [rdi+0x20]
  427776:	mov    rbx,rdi
  427779:	lea    eax,[rbp+rsi*4+0x0]
  42777d:	cmp    eax,DWORD PTR [rdi+0x24]
  427780:	mov    DWORD PTR [rdi+0x20],eax
  427783:	jae    427798 <flatcc_builder_extend_offset_vector@@Base+0x48>
  427785:	mov    rax,rbp
  427788:	add    rax,QWORD PTR [rbx+0x18]
  42778c:	add    rsp,0x8
  427790:	pop    rbx
  427791:	pop    rbp
  427792:	ret    
  427793:	nop    DWORD PTR [rax+rax*1+0x0]
  427798:	lea    esi,[rax+0x1]
  42779b:	mov    edx,0xfffffffc
  4277a0:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4277a5:	test   eax,eax
  4277a7:	je     427785 <flatcc_builder_extend_offset_vector@@Base+0x35>
  4277a9:	xor    eax,eax
  4277ab:	jmp    42778c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  4277ad:	call   405325 <__sprintf_chk@plt+0x115>
  4277b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4277bd:	nop    DWORD PTR [rax]

00000000004277c0 <flatcc_builder_offset_vector_push@@Base>:
  4277c0:	push   r12
  4277c2:	push   rbp
  4277c3:	push   rbx
  4277c4:	mov    rdx,QWORD PTR [rdi+0x30]
  4277c8:	cmp    WORD PTR [rdx+0xe],0x5
  4277cd:	jne    427820 <flatcc_builder_offset_vector_push@@Base+0x60>
  4277cf:	mov    eax,DWORD PTR [rdx+0x14]
  4277d2:	cmp    eax,0x3fffffff
  4277d7:	je     427819 <flatcc_builder_offset_vector_push@@Base+0x59>
  4277d9:	add    eax,0x1
  4277dc:	mov    rbp,rdi
  4277df:	mov    r12d,esi
  4277e2:	mov    DWORD PTR [rdx+0x14],eax
  4277e5:	mov    ebx,DWORD PTR [rdi+0x20]
  4277e8:	lea    edx,[rbx+0x4]
  4277eb:	cmp    edx,DWORD PTR [rdi+0x24]
  4277ee:	mov    DWORD PTR [rdi+0x20],edx
  4277f1:	jae    427808 <flatcc_builder_offset_vector_push@@Base+0x48>
  4277f3:	mov    rax,rbx
  4277f6:	add    rax,QWORD PTR [rbp+0x18]
  4277fa:	je     427819 <flatcc_builder_offset_vector_push@@Base+0x59>
  4277fc:	mov    DWORD PTR [rax],r12d
  4277ff:	pop    rbx
  427800:	pop    rbp
  427801:	pop    r12
  427803:	ret    
  427804:	nop    DWORD PTR [rax+0x0]
  427808:	lea    esi,[rbx+0x5]
  42780b:	mov    edx,0xfffffffc
  427810:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  427815:	test   eax,eax
  427817:	je     4277f3 <flatcc_builder_offset_vector_push@@Base+0x33>
  427819:	pop    rbx
  42781a:	xor    eax,eax
  42781c:	pop    rbp
  42781d:	pop    r12
  42781f:	ret    
  427820:	lea    rcx,[rip+0x20ad9]        # 448300 <fb_schema_table_missing@@Base+0x36b0>
  427827:	lea    rsi,[rip+0x201a2]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42782e:	lea    rdi,[rip+0x202eb]        # 447b20 <fb_schema_table_missing@@Base+0x2ed0>
  427835:	mov    edx,0x3a6
  42783a:	call   4050f0 <__assert_fail@plt>
  42783f:	nop

0000000000427840 <flatcc_builder_append_offset_vector@@Base>:
  427840:	push   r13
  427842:	push   r12
  427844:	push   rbp
  427845:	push   rbx
  427846:	sub    rsp,0x8
  42784a:	mov    rax,QWORD PTR [rdi+0x30]
  42784e:	cmp    WORD PTR [rax+0xe],0x5
  427853:	jne    4278cb <flatcc_builder_append_offset_vector@@Base+0x8b>
  427855:	mov    r13,rsi
  427858:	mov    ecx,edx
  42785a:	xor    esi,esi
  42785c:	add    ecx,DWORD PTR [rax+0x14]
  42785f:	setb   sil
  427863:	test   esi,esi
  427865:	jne    4278c6 <flatcc_builder_append_offset_vector@@Base+0x86>
  427867:	cmp    ecx,0x3fffffff
  42786d:	ja     4278c6 <flatcc_builder_append_offset_vector@@Base+0x86>
  42786f:	mov    DWORD PTR [rax+0x14],ecx
  427872:	mov    r12d,DWORD PTR [rdi+0x20]
  427876:	lea    ebx,[rdx*4+0x0]
  42787d:	mov    rbp,rdi
  427880:	mov    rdx,r12
  427883:	add    edx,ebx
  427885:	cmp    edx,DWORD PTR [rdi+0x24]
  427888:	mov    DWORD PTR [rdi+0x20],edx
  42788b:	jae    4278b0 <flatcc_builder_append_offset_vector@@Base+0x70>
  42788d:	add    r12,QWORD PTR [rbp+0x18]
  427891:	je     4278a0 <flatcc_builder_append_offset_vector@@Base+0x60>
  427893:	mov    edx,ebx
  427895:	mov    rsi,r13
  427898:	mov    rdi,r12
  42789b:	call   405160 <memcpy@plt>
  4278a0:	add    rsp,0x8
  4278a4:	mov    rax,r12
  4278a7:	pop    rbx
  4278a8:	pop    rbp
  4278a9:	pop    r12
  4278ab:	pop    r13
  4278ad:	ret    
  4278ae:	xchg   ax,ax
  4278b0:	lea    esi,[rdx+0x1]
  4278b3:	mov    edx,0xfffffffc
  4278b8:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4278bd:	test   eax,eax
  4278bf:	je     42788d <flatcc_builder_append_offset_vector@@Base+0x4d>
  4278c1:	xor    r12d,r12d
  4278c4:	jmp    4278a0 <flatcc_builder_append_offset_vector@@Base+0x60>
  4278c6:	call   405325 <__sprintf_chk@plt+0x115>
  4278cb:	lea    rcx,[rip+0x209ee]        # 4482c0 <fb_schema_table_missing@@Base+0x3670>
  4278d2:	lea    rsi,[rip+0x200f7]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4278d9:	lea    rdi,[rip+0x20240]        # 447b20 <fb_schema_table_missing@@Base+0x2ed0>
  4278e0:	mov    edx,0x3b4
  4278e5:	call   4050f0 <__assert_fail@plt>
  4278ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000004278f0 <flatcc_builder_extend_string@@Base>:
  4278f0:	push   rbp
  4278f1:	push   rbx
  4278f2:	sub    rsp,0x8
  4278f6:	mov    rax,QWORD PTR [rdi+0x30]
  4278fa:	cmp    WORD PTR [rax+0xe],0x6
  4278ff:	jne    42794a <flatcc_builder_extend_string@@Base+0x5a>
  427901:	mov    edx,esi
  427903:	add    edx,DWORD PTR [rax+0x14]
  427906:	jb     427945 <flatcc_builder_extend_string@@Base+0x55>
  427908:	mov    DWORD PTR [rax+0x14],edx
  42790b:	mov    ebp,DWORD PTR [rdi+0x20]
  42790e:	mov    rbx,rdi
  427911:	add    esi,ebp
  427913:	cmp    esi,DWORD PTR [rdi+0x24]
  427916:	mov    DWORD PTR [rdi+0x20],esi
  427919:	jae    427930 <flatcc_builder_extend_string@@Base+0x40>
  42791b:	mov    rax,rbp
  42791e:	add    rax,QWORD PTR [rbx+0x18]
  427922:	add    rsp,0x8
  427926:	pop    rbx
  427927:	pop    rbp
  427928:	ret    
  427929:	nop    DWORD PTR [rax+0x0]
  427930:	add    esi,0x1
  427933:	mov    edx,0xfffffffc
  427938:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42793d:	test   eax,eax
  42793f:	je     42791b <flatcc_builder_extend_string@@Base+0x2b>
  427941:	xor    eax,eax
  427943:	jmp    427922 <flatcc_builder_extend_string@@Base+0x32>
  427945:	call   405325 <__sprintf_chk@plt+0x115>
  42794a:	lea    rcx,[rip+0x2093f]        # 448290 <fb_schema_table_missing@@Base+0x3640>
  427951:	lea    rsi,[rip+0x20078]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427958:	lea    rdi,[rip+0x201f9]        # 447b58 <fb_schema_table_missing@@Base+0x2f08>
  42795f:	mov    edx,0x3bd
  427964:	call   4050f0 <__assert_fail@plt>
  427969:	nop    DWORD PTR [rax+0x0]

0000000000427970 <flatcc_builder_append_string@@Base>:
  427970:	push   r13
  427972:	push   r12
  427974:	push   rbp
  427975:	push   rbx
  427976:	sub    rsp,0x8
  42797a:	mov    rax,QWORD PTR [rdi+0x30]
  42797e:	cmp    WORD PTR [rax+0xe],0x6
  427983:	jne    4279eb <flatcc_builder_append_string@@Base+0x7b>
  427985:	mov    rbp,rdx
  427988:	add    edx,DWORD PTR [rax+0x14]
  42798b:	jb     4279e6 <flatcc_builder_append_string@@Base+0x76>
  42798d:	mov    DWORD PTR [rax+0x14],edx
  427990:	mov    r12d,DWORD PTR [rdi+0x20]
  427994:	mov    rbx,rdi
  427997:	mov    r13,rsi
  42799a:	mov    rdx,r12
  42799d:	add    edx,ebp
  42799f:	cmp    edx,DWORD PTR [rdi+0x24]
  4279a2:	mov    DWORD PTR [rdi+0x20],edx
  4279a5:	jae    4279d0 <flatcc_builder_append_string@@Base+0x60>
  4279a7:	add    r12,QWORD PTR [rbx+0x18]
  4279ab:	je     4279ba <flatcc_builder_append_string@@Base+0x4a>
  4279ad:	mov    edx,ebp
  4279af:	mov    rsi,r13
  4279b2:	mov    rdi,r12
  4279b5:	call   405160 <memcpy@plt>
  4279ba:	add    rsp,0x8
  4279be:	mov    rax,r12
  4279c1:	pop    rbx
  4279c2:	pop    rbp
  4279c3:	pop    r12
  4279c5:	pop    r13
  4279c7:	ret    
  4279c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4279d0:	lea    esi,[rdx+0x1]
  4279d3:	mov    edx,0xfffffffc
  4279d8:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4279dd:	test   eax,eax
  4279df:	je     4279a7 <flatcc_builder_append_string@@Base+0x37>
  4279e1:	xor    r12d,r12d
  4279e4:	jmp    4279ba <flatcc_builder_append_string@@Base+0x4a>
  4279e6:	call   405325 <__sprintf_chk@plt+0x115>
  4279eb:	lea    rcx,[rip+0x2087e]        # 448270 <fb_schema_table_missing@@Base+0x3620>
  4279f2:	lea    rsi,[rip+0x1ffd7]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4279f9:	lea    rdi,[rip+0x20158]        # 447b58 <fb_schema_table_missing@@Base+0x2f08>
  427a00:	mov    edx,0x3c6
  427a05:	call   4050f0 <__assert_fail@plt>
  427a0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427a10 <flatcc_builder_append_string_str@@Base>:
  427a10:	push   rbp
  427a11:	push   rbx
  427a12:	mov    rbp,rdi
  427a15:	mov    rdi,rsi
  427a18:	mov    rbx,rsi
  427a1b:	sub    rsp,0x8
  427a1f:	call   4050c0 <strlen@plt>
  427a24:	add    rsp,0x8
  427a28:	mov    rsi,rbx
  427a2b:	mov    rdi,rbp
  427a2e:	pop    rbx
  427a2f:	pop    rbp
  427a30:	mov    rdx,rax
  427a33:	jmp    427970 <flatcc_builder_append_string@@Base>
  427a38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427a40 <flatcc_builder_append_string_strn@@Base>:
  427a40:	push   r12
  427a42:	push   rbp
  427a43:	mov    rbp,rsi
  427a46:	push   rbx
  427a47:	mov    r12,rdi
  427a4a:	xor    esi,esi
  427a4c:	mov    rdi,rbp
  427a4f:	mov    rbx,rdx
  427a52:	call   405110 <memchr@plt>
  427a57:	mov    rdx,rax
  427a5a:	mov    rsi,rbp
  427a5d:	mov    rdi,r12
  427a60:	sub    rdx,rbp
  427a63:	test   rax,rax
  427a66:	cmovne rbx,rdx
  427a6a:	mov    rdx,rbx
  427a6d:	pop    rbx
  427a6e:	pop    rbp
  427a6f:	pop    r12
  427a71:	jmp    427970 <flatcc_builder_append_string@@Base>
  427a76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427a80 <flatcc_builder_truncate_vector@@Base>:
  427a80:	sub    rsp,0x8
  427a84:	mov    rax,QWORD PTR [rdi+0x30]
  427a88:	cmp    WORD PTR [rax+0xe],0x4
  427a8d:	jne    427ac3 <flatcc_builder_truncate_vector@@Base+0x43>
  427a8f:	mov    ecx,DWORD PTR [rax+0x14]
  427a92:	cmp    rcx,rsi
  427a95:	mov    rdx,rcx
  427a98:	jb     427ae2 <flatcc_builder_truncate_vector@@Base+0x62>
  427a9a:	sub    edx,esi
  427a9c:	imul   esi,DWORD PTR [rax+0x10]
  427aa0:	mov    DWORD PTR [rax+0x14],edx
  427aa3:	mov    eax,DWORD PTR [rdi+0x20]
  427aa6:	mov    rcx,QWORD PTR [rdi+0x18]
  427aaa:	sub    eax,esi
  427aac:	mov    edx,esi
  427aae:	xor    esi,esi
  427ab0:	mov    DWORD PTR [rdi+0x20],eax
  427ab3:	lea    rdi,[rcx+rax*1]
  427ab7:	call   405100 <memset@plt>
  427abc:	xor    eax,eax
  427abe:	add    rsp,0x8
  427ac2:	ret    
  427ac3:	lea    rcx,[rip+0x20786]        # 448250 <fb_schema_table_missing@@Base+0x3600>
  427aca:	lea    rsi,[rip+0x1feff]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427ad1:	lea    rdi,[rip+0x1ffd8]        # 447ab0 <fb_schema_table_missing@@Base+0x2e60>
  427ad8:	mov    edx,0x3d9
  427add:	call   4050f0 <__assert_fail@plt>
  427ae2:	lea    rcx,[rip+0x20767]        # 448250 <fb_schema_table_missing@@Base+0x3600>
  427ae9:	lea    rsi,[rip+0x1fee0]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427af0:	lea    rdi,[rip+0x20091]        # 447b88 <fb_schema_table_missing@@Base+0x2f38>
  427af7:	mov    edx,0x3da
  427afc:	call   4050f0 <__assert_fail@plt>
  427b01:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427b0c:	nop    DWORD PTR [rax+0x0]

0000000000427b10 <flatcc_builder_truncate_offset_vector@@Base>:
  427b10:	sub    rsp,0x8
  427b14:	mov    rax,QWORD PTR [rdi+0x30]
  427b18:	cmp    WORD PTR [rax+0xe],0x5
  427b1d:	jne    427b4f <flatcc_builder_truncate_offset_vector@@Base+0x3f>
  427b1f:	mov    edx,DWORD PTR [rax+0x14]
  427b22:	cmp    edx,esi
  427b24:	jb     427b6e <flatcc_builder_truncate_offset_vector@@Base+0x5e>
  427b26:	sub    edx,esi
  427b28:	imul   esi,DWORD PTR [rax+0x10]
  427b2c:	mov    DWORD PTR [rax+0x14],edx
  427b2f:	mov    eax,DWORD PTR [rdi+0x20]
  427b32:	mov    rcx,QWORD PTR [rdi+0x18]
  427b36:	sub    eax,esi
  427b38:	mov    edx,esi
  427b3a:	xor    esi,esi
  427b3c:	mov    DWORD PTR [rdi+0x20],eax
  427b3f:	lea    rdi,[rcx+rax*1]
  427b43:	call   405100 <memset@plt>
  427b48:	xor    eax,eax
  427b4a:	add    rsp,0x8
  427b4e:	ret    
  427b4f:	lea    rcx,[rip+0x206ca]        # 448220 <fb_schema_table_missing@@Base+0x35d0>
  427b56:	lea    rsi,[rip+0x1fe73]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427b5d:	lea    rdi,[rip+0x1ffbc]        # 447b20 <fb_schema_table_missing@@Base+0x2ed0>
  427b64:	mov    edx,0x3e2
  427b69:	call   4050f0 <__assert_fail@plt>
  427b6e:	lea    rcx,[rip+0x206ab]        # 448220 <fb_schema_table_missing@@Base+0x35d0>
  427b75:	lea    rsi,[rip+0x1fe54]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427b7c:	lea    rdi,[rip+0x2002d]        # 447bb0 <fb_schema_table_missing@@Base+0x2f60>
  427b83:	mov    edx,0x3e3
  427b88:	call   4050f0 <__assert_fail@plt>
  427b8d:	nop    DWORD PTR [rax]

0000000000427b90 <flatcc_builder_truncate_string@@Base>:
  427b90:	sub    rsp,0x8
  427b94:	mov    rdx,QWORD PTR [rdi+0x30]
  427b98:	cmp    WORD PTR [rdx+0xe],0x6
  427b9d:	jne    427bd0 <flatcc_builder_truncate_string@@Base+0x40>
  427b9f:	mov    ecx,DWORD PTR [rdx+0x14]
  427ba2:	cmp    rcx,rsi
  427ba5:	mov    rax,rcx
  427ba8:	jb     427bef <flatcc_builder_truncate_string@@Base+0x5f>
  427baa:	sub    eax,esi
  427bac:	mov    DWORD PTR [rdx+0x14],eax
  427baf:	mov    eax,DWORD PTR [rdi+0x20]
  427bb2:	mov    rdx,QWORD PTR [rdi+0x18]
  427bb6:	sub    eax,esi
  427bb8:	mov    DWORD PTR [rdi+0x20],eax
  427bbb:	lea    rdi,[rdx+rax*1]
  427bbf:	mov    rdx,rsi
  427bc2:	xor    esi,esi
  427bc4:	call   405100 <memset@plt>
  427bc9:	xor    eax,eax
  427bcb:	add    rsp,0x8
  427bcf:	ret    
  427bd0:	lea    rcx,[rip+0x20629]        # 448200 <fb_schema_table_missing@@Base+0x35b0>
  427bd7:	lea    rsi,[rip+0x1fdf2]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427bde:	lea    rdi,[rip+0x1ff73]        # 447b58 <fb_schema_table_missing@@Base+0x2f08>
  427be5:	mov    edx,0x3eb
  427bea:	call   4050f0 <__assert_fail@plt>
  427bef:	lea    rcx,[rip+0x2060a]        # 448200 <fb_schema_table_missing@@Base+0x35b0>
  427bf6:	lea    rsi,[rip+0x1fdd3]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427bfd:	lea    rdi,[rip+0x1ffec]        # 447bf0 <fb_schema_table_missing@@Base+0x2fa0>
  427c04:	mov    edx,0x3ec
  427c09:	call   4050f0 <__assert_fail@plt>
  427c0e:	xchg   ax,ax

0000000000427c10 <flatcc_builder_start_vector@@Base>:
  427c10:	push   r12
  427c12:	cmp    dx,0x4
  427c16:	push   rbp
  427c17:	mov    rbp,rsi
  427c1a:	mov    esi,0x4
  427c1f:	push   rbx
  427c20:	cmovb  edx,esi
  427c23:	mov    rbx,rdi
  427c26:	mov    r12,rcx
  427c29:	movzx  esi,dx
  427c2c:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  427c31:	test   eax,eax
  427c33:	jne    427c80 <flatcc_builder_start_vector@@Base+0x70>
  427c35:	mov    rsi,QWORD PTR [rbx+0x30]
  427c39:	mov    edx,0x4
  427c3e:	mov    DWORD PTR [rsi+0x10],ebp
  427c41:	mov    DWORD PTR [rsi+0x14],0x0
  427c48:	mov    DWORD PTR [rsi+0x18],r12d
  427c4c:	mov    WORD PTR [rsi+0xe],dx
  427c50:	mov    edx,DWORD PTR [rbx+0x28]
  427c53:	mov    rcx,rdx
  427c56:	add    rdx,QWORD PTR [rbx+0x68]
  427c5a:	mov    QWORD PTR [rbx+0x18],rdx
  427c5e:	mov    edx,DWORD PTR [rbx+0x70]
  427c61:	sub    edx,ecx
  427c63:	mov    ecx,0xfffffffc
  427c68:	cmp    edx,ecx
  427c6a:	cmova  edx,ecx
  427c6d:	mov    DWORD PTR [rbx+0x24],edx
  427c70:	mov    DWORD PTR [rsi+0x4],ecx
  427c73:	pop    rbx
  427c74:	pop    rbp
  427c75:	pop    r12
  427c77:	ret    
  427c78:	nop    DWORD PTR [rax+rax*1+0x0]
  427c80:	mov    eax,0xffffffff
  427c85:	jmp    427c73 <flatcc_builder_start_vector@@Base+0x63>
  427c87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427c90 <flatcc_builder_start_offset_vector@@Base>:
  427c90:	push   rbx
  427c91:	mov    esi,0x4
  427c96:	mov    rbx,rdi
  427c99:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  427c9e:	test   eax,eax
  427ca0:	jne    427ce8 <flatcc_builder_start_offset_vector@@Base+0x58>
  427ca2:	mov    rcx,QWORD PTR [rbx+0x30]
  427ca6:	mov    edx,0x5
  427cab:	mov    DWORD PTR [rcx+0x10],0x4
  427cb2:	mov    DWORD PTR [rcx+0x14],0x0
  427cb9:	mov    WORD PTR [rcx+0xe],dx
  427cbd:	mov    edx,DWORD PTR [rbx+0x28]
  427cc0:	mov    rsi,rdx
  427cc3:	add    rdx,QWORD PTR [rbx+0x68]
  427cc7:	mov    QWORD PTR [rbx+0x18],rdx
  427ccb:	mov    edx,DWORD PTR [rbx+0x70]
  427cce:	sub    edx,esi
  427cd0:	mov    esi,0xfffffffc
  427cd5:	cmp    edx,esi
  427cd7:	cmova  edx,esi
  427cda:	mov    DWORD PTR [rbx+0x24],edx
  427cdd:	mov    DWORD PTR [rcx+0x4],esi
  427ce0:	pop    rbx
  427ce1:	ret    
  427ce2:	nop    WORD PTR [rax+rax*1+0x0]
  427ce8:	mov    eax,0xffffffff
  427ced:	pop    rbx
  427cee:	ret    
  427cef:	nop

0000000000427cf0 <flatcc_builder_start_string@@Base>:
  427cf0:	push   rbx
  427cf1:	mov    esi,0x1
  427cf6:	mov    rbx,rdi
  427cf9:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  427cfe:	test   eax,eax
  427d00:	jne    427d48 <flatcc_builder_start_string@@Base+0x58>
  427d02:	mov    rcx,QWORD PTR [rbx+0x30]
  427d06:	mov    edx,0x6
  427d0b:	mov    DWORD PTR [rcx+0x10],0x1
  427d12:	mov    DWORD PTR [rcx+0x14],0x0
  427d19:	mov    WORD PTR [rcx+0xe],dx
  427d1d:	mov    edx,DWORD PTR [rbx+0x28]
  427d20:	mov    rsi,rdx
  427d23:	add    rdx,QWORD PTR [rbx+0x68]
  427d27:	mov    QWORD PTR [rbx+0x18],rdx
  427d2b:	mov    edx,DWORD PTR [rbx+0x70]
  427d2e:	sub    edx,esi
  427d30:	mov    esi,0xfffffffc
  427d35:	cmp    edx,esi
  427d37:	cmova  edx,esi
  427d3a:	mov    DWORD PTR [rbx+0x24],edx
  427d3d:	mov    DWORD PTR [rcx+0x4],esi
  427d40:	pop    rbx
  427d41:	ret    
  427d42:	nop    WORD PTR [rax+rax*1+0x0]
  427d48:	mov    eax,0xffffffff
  427d4d:	pop    rbx
  427d4e:	ret    
  427d4f:	nop

0000000000427d50 <flatcc_builder_reserve_table@@Base>:
  427d50:	test   esi,esi
  427d52:	push   r12
  427d54:	push   rbp
  427d55:	push   rbx
  427d56:	js     427e0f <flatcc_builder_reserve_table@@Base+0xbf>
  427d5c:	mov    rax,QWORD PTR [rdi+0x30]
  427d60:	lea    r12d,[rsi+rsi*1+0x4]
  427d65:	mov    rbx,rdi
  427d68:	movzx  edx,WORD PTR [rax+0x1c]
  427d6c:	mov    eax,DWORD PTR [rax+0x10]
  427d6f:	lea    ebp,[rax+rdx*2]
  427d72:	mov    edx,r12d
  427d75:	add    rdx,rbp
  427d78:	cmp    rdx,QWORD PTR [rdi+0x60]
  427d7c:	ja     427dc0 <flatcc_builder_reserve_table@@Base+0x70>
  427d7e:	add    rbp,QWORD PTR [rbx+0x58]
  427d82:	je     427e00 <flatcc_builder_reserve_table@@Base+0xb0>
  427d84:	mov    rax,QWORD PTR [rbx+0x30]
  427d88:	add    rbp,0x4
  427d8c:	lea    edx,[r12-0x3]
  427d91:	mov    QWORD PTR [rbx+0x8],rbp
  427d95:	mov    ebp,DWORD PTR [rax+0x14]
  427d98:	add    rdx,rbp
  427d9b:	cmp    rdx,QWORD PTR [rbx+0x90]
  427da2:	ja     427de0 <flatcc_builder_reserve_table@@Base+0x90>
  427da4:	add    rbp,QWORD PTR [rbx+0x88]
  427dab:	xor    eax,eax
  427dad:	test   rbp,rbp
  427db0:	mov    QWORD PTR [rbx],rbp
  427db3:	sete   al
  427db6:	neg    eax
  427db8:	pop    rbx
  427db9:	pop    rbp
  427dba:	pop    r12
  427dbc:	ret    
  427dbd:	nop    DWORD PTR [rax]
  427dc0:	lea    rsi,[rdi+0x58]
  427dc4:	xor    r8d,r8d
  427dc7:	mov    rdi,QWORD PTR [rdi+0x40]
  427dcb:	mov    ecx,0x1
  427dd0:	call   QWORD PTR [rbx+0x50]
  427dd3:	test   eax,eax
  427dd5:	je     427d7e <flatcc_builder_reserve_table@@Base+0x2e>
  427dd7:	call   4052bc <__sprintf_chk@plt+0xac>
  427ddc:	nop    DWORD PTR [rax+0x0]
  427de0:	xor    ecx,ecx
  427de2:	lea    rsi,[rbx+0x88]
  427de9:	mov    rdi,QWORD PTR [rbx+0x40]
  427ded:	mov    r8d,0x3
  427df3:	call   QWORD PTR [rbx+0x50]
  427df6:	test   eax,eax
  427df8:	je     427da4 <flatcc_builder_reserve_table@@Base+0x54>
  427dfa:	jmp    427dd7 <flatcc_builder_reserve_table@@Base+0x87>
  427dfc:	nop    DWORD PTR [rax+0x0]
  427e00:	mov    QWORD PTR [rbx+0x8],0x0
  427e08:	mov    eax,0xffffffff
  427e0d:	jmp    427db8 <flatcc_builder_reserve_table@@Base+0x68>
  427e0f:	lea    rcx,[rip+0x203ca]        # 4481e0 <fb_schema_table_missing@@Base+0x3590>
  427e16:	lea    rsi,[rip+0x1fbb3]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  427e1d:	lea    rdi,[rip+0x1ff9f]        # 447dc3 <fb_schema_table_missing@@Base+0x3173>
  427e24:	mov    edx,0x429
  427e29:	call   4050f0 <__assert_fail@plt>
  427e2e:	xchg   ax,ax

0000000000427e30 <flatcc_builder_start_table@@Base>:
  427e30:	push   r13
  427e32:	push   r12
  427e34:	mov    r12d,esi
  427e37:	push   rbp
  427e38:	push   rbx
  427e39:	mov    esi,0x4
  427e3e:	mov    rbx,rdi
  427e41:	sub    rsp,0x8
  427e45:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  427e4a:	test   eax,eax
  427e4c:	jne    427f80 <flatcc_builder_start_table@@Base+0x150>
  427e52:	mov    rcx,QWORD PTR [rbx+0x8]
  427e56:	mov    ebp,eax
  427e58:	mov    rax,QWORD PTR [rbx+0x58]
  427e5c:	mov    rdx,QWORD PTR [rbx+0x30]
  427e60:	xor    edi,edi
  427e62:	mov    r8d,0x3
  427e68:	sub    rcx,rax
  427e6b:	mov    DWORD PTR [rdx+0x10],ecx
  427e6e:	mov    rsi,QWORD PTR [rbx]
  427e71:	sub    rsi,QWORD PTR [rbx+0x88]
  427e78:	mov    DWORD PTR [rdx+0x14],esi
  427e7b:	mov    esi,DWORD PTR [rbx+0x14]
  427e7e:	mov    DWORD PTR [rdx+0x18],esi
  427e81:	movzx  esi,WORD PTR [rbx+0x10]
  427e85:	mov    WORD PTR [rdx+0x1c],si
  427e89:	lea    r13d,[rcx+rsi*2]
  427e8d:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  427e94:	mov    WORD PTR [rbx+0x10],di
  427e98:	mov    WORD PTR [rdx+0xe],r8w
  427e9d:	lea    edx,[r12+r12*1+0x4]
  427ea2:	add    rdx,r13
  427ea5:	cmp    rdx,QWORD PTR [rbx+0x60]
  427ea9:	ja     427f28 <flatcc_builder_start_table@@Base+0xf8>
  427eab:	add    rax,r13
  427eae:	je     427f78 <flatcc_builder_start_table@@Base+0x148>
  427eb4:	add    rax,0x4
  427eb8:	lea    edx,[r12+r12*1+0x1]
  427ebd:	mov    QWORD PTR [rbx+0x8],rax
  427ec1:	mov    rax,QWORD PTR [rbx+0x30]
  427ec5:	mov    r13d,DWORD PTR [rax+0x14]
  427ec9:	add    rdx,r13
  427ecc:	cmp    rdx,QWORD PTR [rbx+0x90]
  427ed3:	ja     427f50 <flatcc_builder_start_table@@Base+0x120>
  427ed5:	add    r13,QWORD PTR [rbx+0x88]
  427edc:	test   r13,r13
  427edf:	mov    QWORD PTR [rbx],r13
  427ee2:	je     427f80 <flatcc_builder_start_table@@Base+0x150>
  427ee8:	mov    eax,DWORD PTR [rbx+0x28]
  427eeb:	mov    rdx,rax
  427eee:	add    rax,QWORD PTR [rbx+0x68]
  427ef2:	mov    QWORD PTR [rbx+0x18],rax
  427ef6:	mov    eax,DWORD PTR [rbx+0x70]
  427ef9:	sub    eax,edx
  427efb:	mov    edx,0xfffc
  427f00:	cmp    eax,0xfffc
  427f05:	cmova  eax,edx
  427f08:	mov    DWORD PTR [rbx+0x24],eax
  427f0b:	mov    rax,QWORD PTR [rbx+0x30]
  427f0f:	mov    DWORD PTR [rax+0x4],0xfffc
  427f16:	add    rsp,0x8
  427f1a:	mov    eax,ebp
  427f1c:	pop    rbx
  427f1d:	pop    rbp
  427f1e:	pop    r12
  427f20:	pop    r13
  427f22:	ret    
  427f23:	nop    DWORD PTR [rax+rax*1+0x0]
  427f28:	xor    r8d,r8d
  427f2b:	lea    rsi,[rbx+0x58]
  427f2f:	mov    rdi,QWORD PTR [rbx+0x40]
  427f33:	mov    ecx,0x1
  427f38:	call   QWORD PTR [rbx+0x50]
  427f3b:	test   eax,eax
  427f3d:	jne    427f6e <flatcc_builder_start_table@@Base+0x13e>
  427f3f:	mov    rax,QWORD PTR [rbx+0x58]
  427f43:	jmp    427eab <flatcc_builder_start_table@@Base+0x7b>
  427f48:	nop    DWORD PTR [rax+rax*1+0x0]
  427f50:	xor    ecx,ecx
  427f52:	lea    rsi,[rbx+0x88]
  427f59:	mov    rdi,QWORD PTR [rbx+0x40]
  427f5d:	mov    r8d,0x3
  427f63:	call   QWORD PTR [rbx+0x50]
  427f66:	test   eax,eax
  427f68:	je     427ed5 <flatcc_builder_start_table@@Base+0xa5>
  427f6e:	call   4052bc <__sprintf_chk@plt+0xac>
  427f73:	nop    DWORD PTR [rax+rax*1+0x0]
  427f78:	mov    QWORD PTR [rbx+0x8],0x0
  427f80:	add    rsp,0x8
  427f84:	mov    ebp,0xffffffff
  427f89:	pop    rbx
  427f8a:	mov    eax,ebp
  427f8c:	pop    rbp
  427f8d:	pop    r12
  427f8f:	pop    r13
  427f91:	ret    
  427f92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427f9d:	nop    DWORD PTR [rax]

0000000000427fa0 <flatcc_builder_create_vtable@@Base>:
  427fa0:	push   rbp
  427fa1:	push   rbx
  427fa2:	mov    rbp,rdi
  427fa5:	sub    rsp,0xa8
  427fac:	mov    rax,QWORD PTR fs:0x28
  427fb5:	mov    QWORD PTR [rsp+0x98],rax
  427fbd:	xor    eax,eax
  427fbf:	test   dx,dx
  427fc2:	mov    QWORD PTR [rsp],0x0
  427fca:	mov    DWORD PTR [rsp+0x8],0x0
  427fd2:	je     428060 <flatcc_builder_create_vtable@@Base+0xc0>
  427fd8:	mov    QWORD PTR [rsp+0x10],rsi
  427fdd:	mov    esi,DWORD PTR [rdi+0x100]
  427fe3:	movzx  r8d,dx
  427fe7:	mov    QWORD PTR [rsp],r8
  427feb:	mov    QWORD PTR [rsp+0x18],r8
  427ff0:	movzx  edx,dx
  427ff3:	mov    DWORD PTR [rsp+0x8],0x1
  427ffb:	test   esi,esi
  427ffd:	je     428098 <flatcc_builder_create_vtable@@Base+0xf8>
  428003:	mov    eax,DWORD PTR [rbp+0xf0]
  428009:	mov    ebx,eax
  42800b:	sub    ebx,edx
  42800d:	cmp    eax,ebx
  42800f:	jle    428074 <flatcc_builder_create_vtable@@Base+0xd4>
  428011:	lea    rsi,[rsp+0x10]
  428016:	mov    rdi,QWORD PTR [rbp+0x38]
  42801a:	mov    ecx,ebx
  42801c:	mov    edx,DWORD PTR [rsp+0x8]
  428020:	call   QWORD PTR [rbp+0x48]
  428023:	test   eax,eax
  428025:	jne    4280f0 <flatcc_builder_create_vtable@@Base+0x150>
  42802b:	cmp    ebx,0x1
  42802e:	mov    DWORD PTR [rbp+0xf0],ebx
  428034:	sbb    ebx,0xffffffff
  428037:	mov    rcx,QWORD PTR [rsp+0x98]
  42803f:	xor    rcx,QWORD PTR fs:0x28
  428048:	mov    eax,ebx
  42804a:	jne    4280eb <flatcc_builder_create_vtable@@Base+0x14b>
  428050:	add    rsp,0xa8
  428057:	pop    rbx
  428058:	pop    rbp
  428059:	ret    
  42805a:	nop    WORD PTR [rax+rax*1+0x0]
  428060:	mov    edx,DWORD PTR [rdi+0x100]
  428066:	test   edx,edx
  428068:	jne    428074 <flatcc_builder_create_vtable@@Base+0xd4>
  42806a:	mov    eax,DWORD PTR [rdi+0x124]
  428070:	test   eax,eax
  428072:	je     4280e0 <flatcc_builder_create_vtable@@Base+0x140>
  428074:	lea    rcx,[rip+0x20395]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  42807b:	lea    rsi,[rip+0x1f94e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428082:	lea    rdi,[rip+0xda80]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  428089:	mov    edx,0x287
  42808e:	call   4050f0 <__assert_fail@plt>
  428093:	nop    DWORD PTR [rax+rax*1+0x0]
  428098:	mov    ecx,DWORD PTR [rdi+0x124]
  42809e:	test   ecx,ecx
  4280a0:	jne    428003 <flatcc_builder_create_vtable@@Base+0x63>
  4280a6:	mov    ebx,DWORD PTR [rdi+0xf4]
  4280ac:	add    edx,ebx
  4280ae:	cmp    ebx,edx
  4280b0:	mov    DWORD PTR [rdi+0xf4],edx
  4280b6:	jg     428114 <flatcc_builder_create_vtable@@Base+0x174>
  4280b8:	lea    rsi,[rsp+0x10]
  4280bd:	mov    rdi,QWORD PTR [rbp+0x38]
  4280c1:	mov    ecx,ebx
  4280c3:	mov    edx,DWORD PTR [rsp+0x8]
  4280c7:	call   QWORD PTR [rbp+0x48]
  4280ca:	test   eax,eax
  4280cc:	jne    4280f5 <flatcc_builder_create_vtable@@Base+0x155>
  4280ce:	add    ebx,0x1
  4280d1:	jmp    428037 <flatcc_builder_create_vtable@@Base+0x97>
  4280d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280e0:	mov    ebx,DWORD PTR [rbp+0xf4]
  4280e6:	xor    r8d,r8d
  4280e9:	jmp    4280b8 <flatcc_builder_create_vtable@@Base+0x118>
  4280eb:	call   4050d0 <__stack_chk_fail@plt>
  4280f0:	call   405302 <__sprintf_chk@plt+0xf2>
  4280f5:	lea    rcx,[rip+0x20324]        # 448420 <fb_schema_table_missing@@Base+0x37d0>
  4280fc:	lea    rsi,[rip+0x1f8cd]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428103:	lea    rdi,[rip+0xd9ff]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  42810a:	mov    edx,0x2a5
  42810f:	call   4050f0 <__assert_fail@plt>
  428114:	call   4052df <__sprintf_chk@plt+0xcf>
  428119:	nop    DWORD PTR [rax+0x0]

0000000000428120 <flatcc_builder_create_cached_vtable@@Base>:
  428120:	push   r15
  428122:	push   r14
  428124:	mov    r15,rdi
  428127:	push   r13
  428129:	push   r12
  42812b:	movzx  r14d,dx
  42812f:	push   rbp
  428130:	push   rbx
  428131:	mov    ebp,ecx
  428133:	sub    rsp,0x38
  428137:	mov    rbx,QWORD PTR [rdi+0xd8]
  42813e:	mov    QWORD PTR [rsp+0x10],rsi
  428143:	mov    DWORD PTR [rsp+0x2c],edx
  428147:	test   rbx,rbx
  42814a:	je     4282d8 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
  428150:	mov    eax,0x20
  428155:	sub    eax,ebx
  428157:	shrx   ebp,ebp,eax
  42815c:	mov    rax,QWORD PTR [r15+0xa8]
  428163:	lea    r12,[rax+rbp*4]
  428167:	test   r12,r12
  42816a:	je     4282c0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428170:	mov    ebp,DWORD PTR [r12]
  428174:	test   ebp,ebp
  428176:	je     4283e0 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
  42817c:	movzx  eax,r14w
  428180:	mov    r11,QWORD PTR [r15+0xb8]
  428187:	mov    r8,QWORD PTR [r15+0x78]
  42818b:	mov    r13,r12
  42818e:	mov    QWORD PTR [rsp+0x20],0x0
  428197:	mov    QWORD PTR [rsp+0x18],rax
  42819c:	jmp    4281ab <flatcc_builder_create_cached_vtable@@Base+0x8b>
  42819e:	xchg   ax,ax
  4281a0:	mov    ebp,DWORD PTR [rbx+0xc]
  4281a3:	lea    r13,[rbx+0xc]
  4281a7:	test   ebp,ebp
  4281a9:	je     428208 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  4281ab:	mov    ebx,ebp
  4281ad:	add    rbx,r11
  4281b0:	mov    esi,DWORD PTR [rbx+0x8]
  4281b3:	add    rsi,r8
  4281b6:	cmp    WORD PTR [rsi],r14w
  4281ba:	jne    4281a0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  4281bc:	mov    rdx,QWORD PTR [rsp+0x18]
  4281c1:	mov    rdi,QWORD PTR [rsp+0x10]
  4281c6:	mov    QWORD PTR [rsp+0x8],r8
  4281cb:	mov    QWORD PTR [rsp],r11
  4281cf:	call   405120 <memcmp@plt>
  4281d4:	test   eax,eax
  4281d6:	mov    r11,QWORD PTR [rsp]
  4281da:	mov    r8,QWORD PTR [rsp+0x8]
  4281df:	jne    4281a0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  4281e1:	mov    eax,DWORD PTR [r15+0x100]
  4281e8:	cmp    DWORD PTR [rbx+0x4],eax
  4281eb:	je     428290 <flatcc_builder_create_cached_vtable@@Base+0x170>
  4281f1:	mov    ebp,DWORD PTR [rbx+0xc]
  4281f4:	lea    r13,[rbx+0xc]
  4281f8:	mov    QWORD PTR [rsp+0x20],rbx
  4281fd:	test   ebp,ebp
  4281ff:	jne    4281ab <flatcc_builder_create_cached_vtable@@Base+0x8b>
  428201:	nop    DWORD PTR [rax+0x0]
  428208:	mov    ebx,DWORD PTR [r15+0xe4]
  42820f:	lea    rdx,[rbx+0x10]
  428213:	cmp    rdx,QWORD PTR [r15+0xc0]
  42821a:	ja     4283b8 <flatcc_builder_create_cached_vtable@@Base+0x298>
  428220:	add    rbx,QWORD PTR [r15+0xb8]
  428227:	je     4282c0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  42822d:	mov    eax,DWORD PTR [r15+0xe4]
  428234:	movzx  ebp,WORD PTR [rsp+0x2c]
  428239:	mov    rdi,r15
  42823c:	mov    rsi,QWORD PTR [rsp+0x10]
  428241:	lea    edx,[rax+0x10]
  428244:	mov    DWORD PTR [r15+0xe4],edx
  42824b:	mov    edx,DWORD PTR [r15+0x100]
  428252:	mov    DWORD PTR [rbx+0x4],edx
  428255:	mov    edx,DWORD PTR [r12]
  428259:	mov    DWORD PTR [rbx+0xc],edx
  42825c:	mov    DWORD PTR [r12],eax
  428260:	mov    edx,ebp
  428262:	call   427fa0 <flatcc_builder_create_vtable@@Base>
  428267:	test   eax,eax
  428269:	mov    DWORD PTR [rbx],eax
  42826b:	je     4282c0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  42826d:	mov    rdi,QWORD PTR [rsp+0x20]
  428272:	test   rdi,rdi
  428275:	je     4283ee <flatcc_builder_create_cached_vtable@@Base+0x2ce>
  42827b:	mov    edx,DWORD PTR [rdi+0x8]
  42827e:	mov    DWORD PTR [rbx+0x8],edx
  428281:	add    rsp,0x38
  428285:	pop    rbx
  428286:	pop    rbp
  428287:	pop    r12
  428289:	pop    r13
  42828b:	pop    r14
  42828d:	pop    r15
  42828f:	ret    
  428290:	cmp    r12,r13
  428293:	je     4282a7 <flatcc_builder_create_cached_vtable@@Base+0x187>
  428295:	mov    eax,DWORD PTR [rbx+0xc]
  428298:	mov    DWORD PTR [r13+0x0],eax
  42829c:	mov    eax,DWORD PTR [r12]
  4282a0:	mov    DWORD PTR [rbx+0xc],eax
  4282a3:	mov    DWORD PTR [r12],ebp
  4282a7:	mov    eax,DWORD PTR [rbx]
  4282a9:	add    rsp,0x38
  4282ad:	pop    rbx
  4282ae:	pop    rbp
  4282af:	pop    r12
  4282b1:	pop    r13
  4282b3:	pop    r14
  4282b5:	pop    r15
  4282b7:	ret    
  4282b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4282c0:	add    rsp,0x38
  4282c4:	xor    eax,eax
  4282c6:	pop    rbx
  4282c7:	pop    rbp
  4282c8:	pop    r12
  4282ca:	pop    r13
  4282cc:	pop    r14
  4282ce:	pop    r15
  4282d0:	ret    
  4282d1:	nop    DWORD PTR [rax+0x0]
  4282d8:	mov    eax,DWORD PTR [rdi+0xe4]
  4282de:	lea    r12,[rdi+0xa8]
  4282e5:	test   eax,eax
  4282e7:	jne    42847f <flatcc_builder_create_cached_vtable@@Base+0x35f>
  4282ed:	cmp    QWORD PTR [rdi+0xc0],0xf
  4282f5:	jbe    428388 <flatcc_builder_create_cached_vtable@@Base+0x268>
  4282fb:	cmp    QWORD PTR [r15+0xb8],0x0
  428303:	je     4282c0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428305:	mov    DWORD PTR [r15+0xe4],0x10
  428310:	mov    rdi,QWORD PTR [r15+0x40]
  428314:	mov    r8d,0x5
  42831a:	mov    ecx,0x1
  42831f:	mov    edx,0x100
  428324:	mov    rsi,r12
  428327:	call   QWORD PTR [r15+0x50]
  42832b:	test   eax,eax
  42832d:	jne    4282c0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  42832f:	mov    rcx,QWORD PTR [r15+0xb0]
  428336:	mov    eax,0x100
  42833b:	jmp    428343 <flatcc_builder_create_cached_vtable@@Base+0x223>
  42833d:	nop    DWORD PTR [rax]
  428340:	mov    rax,rdx
  428343:	lea    rdx,[rax+rax*1]
  428347:	cmp    rdx,rcx
  42834a:	jbe    428340 <flatcc_builder_create_cached_vtable@@Base+0x220>
  42834c:	shr    rax,0x2
  428350:	cmp    rax,0x1
  428354:	jbe    428448 <flatcc_builder_create_cached_vtable@@Base+0x328>
  42835a:	mov    esi,0x1
  42835f:	nop
  428360:	add    rbx,0x1
  428364:	shlx   rdx,rsi,rbx
  428369:	cmp    rax,rdx
  42836c:	ja     428360 <flatcc_builder_create_cached_vtable@@Base+0x240>
  42836e:	mov    eax,0x20
  428373:	sub    eax,ebx
  428375:	mov    QWORD PTR [r15+0xd8],rbx
  42837c:	jmp    428157 <flatcc_builder_create_cached_vtable@@Base+0x37>
  428381:	nop    DWORD PTR [rax+0x0]
  428388:	lea    rsi,[rdi+0xb8]
  42838f:	xor    ecx,ecx
  428391:	mov    rdi,QWORD PTR [rdi+0x40]
  428395:	mov    r8d,0x6
  42839b:	mov    edx,0x10
  4283a0:	call   QWORD PTR [r15+0x50]
  4283a4:	test   eax,eax
  4283a6:	je     4282fb <flatcc_builder_create_cached_vtable@@Base+0x1db>
  4283ac:	jmp    42846a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  4283b1:	nop    DWORD PTR [rax+0x0]
  4283b8:	xor    ecx,ecx
  4283ba:	lea    rsi,[r15+0xb8]
  4283c1:	mov    rdi,QWORD PTR [r15+0x40]
  4283c5:	mov    r8d,0x6
  4283cb:	call   QWORD PTR [r15+0x50]
  4283cf:	test   eax,eax
  4283d1:	je     428220 <flatcc_builder_create_cached_vtable@@Base+0x100>
  4283d7:	jmp    42846a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  4283dc:	nop    DWORD PTR [rax+0x0]
  4283e0:	mov    QWORD PTR [rsp+0x20],0x0
  4283e9:	jmp    428208 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  4283ee:	mov    rax,QWORD PTR [r15+0x118]
  4283f5:	mov    r12d,DWORD PTR [r15+0xe0]
  4283fc:	test   rax,rax
  4283ff:	je     42840b <flatcc_builder_create_cached_vtable@@Base+0x2eb>
  428401:	lea    edx,[rbp+r12*1+0x0]
  428406:	cmp    rax,rdx
  428409:	jb     428470 <flatcc_builder_create_cached_vtable@@Base+0x350>
  42840b:	lea    rdx,[r14+r12*1]
  42840f:	cmp    rdx,QWORD PTR [r15+0x80]
  428416:	ja     428452 <flatcc_builder_create_cached_vtable@@Base+0x332>
  428418:	mov    rdi,r12
  42841b:	add    rdi,QWORD PTR [r15+0x78]
  42841f:	je     42849e <flatcc_builder_create_cached_vtable@@Base+0x37e>
  428421:	mov    eax,DWORD PTR [r15+0xe0]
  428428:	mov    rsi,QWORD PTR [rsp+0x10]
  42842d:	mov    rdx,r14
  428430:	add    ebp,eax
  428432:	mov    DWORD PTR [rbx+0x8],eax
  428435:	mov    DWORD PTR [r15+0xe0],ebp
  42843c:	call   405160 <memcpy@plt>
  428441:	mov    eax,DWORD PTR [rbx]
  428443:	jmp    428281 <flatcc_builder_create_cached_vtable@@Base+0x161>
  428448:	mov    eax,0x20
  42844d:	jmp    428375 <flatcc_builder_create_cached_vtable@@Base+0x255>
  428452:	xor    ecx,ecx
  428454:	lea    rsi,[r15+0x78]
  428458:	mov    rdi,QWORD PTR [r15+0x40]
  42845c:	mov    r8d,0x2
  428462:	call   QWORD PTR [r15+0x50]
  428466:	test   eax,eax
  428468:	je     428418 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
  42846a:	call   4052bc <__sprintf_chk@plt+0xac>
  42846f:	nop
  428470:	mov    rdi,r15
  428473:	call   4266f0 <flatcc_builder_flush_vtable_cache@@Base>
  428478:	mov    eax,DWORD PTR [rbx]
  42847a:	jmp    4282a9 <flatcc_builder_create_cached_vtable@@Base+0x189>
  42847f:	lea    rcx,[rip+0x1fd4a]        # 4481d0 <fb_schema_table_missing@@Base+0x3580>
  428486:	lea    rsi,[rip+0x1f543]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42848d:	lea    rdi,[rip+0x1f919]        # 447dad <fb_schema_table_missing@@Base+0x315d>
  428494:	mov    edx,0x156
  428499:	call   4050f0 <__assert_fail@plt>
  42849e:	mov    eax,0xffffffff
  4284a3:	jmp    428281 <flatcc_builder_create_cached_vtable@@Base+0x161>
  4284a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004284b0 <flatcc_builder_create_table@@Base>:
  4284b0:	push   rbp
  4284b1:	push   rbx
  4284b2:	sub    rsp,0xb8
  4284b9:	mov    rax,QWORD PTR fs:0x28
  4284c2:	mov    QWORD PTR [rsp+0xa8],rax
  4284ca:	xor    eax,eax
  4284cc:	test   r9d,r9d
  4284cf:	mov    r11d,DWORD PTR [rsp+0xd0]
  4284d7:	js     42867d <flatcc_builder_create_table@@Base+0x1cd>
  4284dd:	test   r11b,0x1
  4284e1:	je     42865e <flatcc_builder_create_table@@Base+0x1ae>
  4284e7:	cmp    cx,0x4
  4284eb:	mov    eax,0x4
  4284f0:	mov    rbx,rdi
  4284f3:	cmovb  ecx,eax
  4284f6:	cmp    WORD PTR [rdi+0xe8],cx
  4284fd:	movzx  eax,cx
  428500:	jae    428509 <flatcc_builder_create_table@@Base+0x59>
  428502:	mov    WORD PTR [rdi+0xe8],cx
  428509:	mov    ecx,DWORD PTR [rbx+0xf0]
  42850f:	sub    eax,0x1
  428512:	mov    edi,0xfffffffc
  428517:	sub    r11d,0x1
  42851b:	mov    r10d,ecx
  42851e:	sub    r10d,edx
  428521:	and    r10d,eax
  428524:	mov    eax,edi
  428526:	sub    eax,edx
  428528:	add    eax,ecx
  42852a:	sub    eax,r10d
  42852d:	mov    ebp,eax
  42852f:	sub    ebp,r11d
  428532:	test   r9d,r9d
  428535:	mov    DWORD PTR [rsp+0xc],ebp
  428539:	je     42856d <flatcc_builder_create_table@@Base+0xbd>
  42853b:	lea    ecx,[r9-0x1]
  42853f:	sub    edi,eax
  428541:	lea    r9,[r8+rcx*2+0x2]
  428546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428550:	movzx  ecx,WORD PTR [r8]
  428554:	mov    r11d,edi
  428557:	add    r8,0x2
  42855b:	sub    r11d,ecx
  42855e:	add    DWORD PTR [rsi+rcx*1],r11d
  428562:	cmp    r9,r8
  428565:	jne    428550 <flatcc_builder_create_table@@Base+0xa0>
  428567:	mov    ecx,DWORD PTR [rbx+0xf0]
  42856d:	lea    rax,[rsp+0xc]
  428572:	test   rdx,rdx
  428575:	mov    QWORD PTR [rsp+0x10],0x4
  42857e:	mov    QWORD PTR [rsp+0x28],0x4
  428587:	mov    DWORD PTR [rsp+0x18],0x1
  42858f:	mov    r8d,0x4
  428595:	mov    QWORD PTR [rsp+0x20],rax
  42859a:	je     4285b7 <flatcc_builder_create_table@@Base+0x107>
  42859c:	lea    r8,[rdx+0x4]
  4285a0:	mov    QWORD PTR [rsp+0x30],rsi
  4285a5:	mov    QWORD PTR [rsp+0x38],rdx
  4285aa:	mov    DWORD PTR [rsp+0x18],0x2
  4285b2:	mov    QWORD PTR [rsp+0x10],r8
  4285b7:	test   r10d,r10d
  4285ba:	je     4285e8 <flatcc_builder_create_table@@Base+0x138>
  4285bc:	movsxd rdx,DWORD PTR [rsp+0x18]
  4285c1:	mov    rsi,0x4484c0
  4285c8:	add    r8,r10
  4285cb:	mov    QWORD PTR [rsp+0x10],r8
  4285d0:	mov    rax,rdx
  4285d3:	shl    rdx,0x4
  4285d7:	add    eax,0x1
  4285da:	mov    QWORD PTR [rsp+rdx*1+0x20],rsi
  4285df:	mov    QWORD PTR [rsp+rdx*1+0x28],r10
  4285e4:	mov    DWORD PTR [rsp+0x18],eax
  4285e8:	mov    ebp,ecx
  4285ea:	movabs rax,0x10000000f
  4285f4:	sub    ebp,r8d
  4285f7:	cmp    r8,rax
  4285fa:	ja     42863f <flatcc_builder_create_table@@Base+0x18f>
  4285fc:	cmp    ebp,ecx
  4285fe:	jge    42863f <flatcc_builder_create_table@@Base+0x18f>
  428600:	lea    rsi,[rsp+0x20]
  428605:	mov    rdi,QWORD PTR [rbx+0x38]
  428609:	mov    ecx,ebp
  42860b:	mov    edx,DWORD PTR [rsp+0x18]
  42860f:	call   QWORD PTR [rbx+0x48]
  428612:	test   eax,eax
  428614:	jne    4286a1 <flatcc_builder_create_table@@Base+0x1f1>
  42861a:	mov    DWORD PTR [rbx+0xf0],ebp
  428620:	mov    eax,ebp
  428622:	mov    rbx,QWORD PTR [rsp+0xa8]
  42862a:	xor    rbx,QWORD PTR fs:0x28
  428633:	jne    42869c <flatcc_builder_create_table@@Base+0x1ec>
  428635:	add    rsp,0xb8
  42863c:	pop    rbx
  42863d:	pop    rbp
  42863e:	ret    
  42863f:	lea    rcx,[rip+0x1fdca]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  428646:	lea    rsi,[rip+0x1f383]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42864d:	lea    rdi,[rip+0xd4b5]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  428654:	mov    edx,0x287
  428659:	call   4050f0 <__assert_fail@plt>
  42865e:	lea    rcx,[rip+0x1fb4b]        # 4481b0 <fb_schema_table_missing@@Base+0x3560>
  428665:	lea    rsi,[rip+0x1f364]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42866c:	lea    rdi,[rip+0x1f75b]        # 447dce <fb_schema_table_missing@@Base+0x317e>
  428673:	mov    edx,0x4db
  428678:	call   4050f0 <__assert_fail@plt>
  42867d:	lea    rcx,[rip+0x1fb2c]        # 4481b0 <fb_schema_table_missing@@Base+0x3560>
  428684:	lea    rsi,[rip+0x1f345]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42868b:	lea    rdi,[rip+0x1f72a]        # 447dbc <fb_schema_table_missing@@Base+0x316c>
  428692:	mov    edx,0x4d5
  428697:	call   4050f0 <__assert_fail@plt>
  42869c:	call   4050d0 <__stack_chk_fail@plt>
  4286a1:	call   405302 <__sprintf_chk@plt+0xf2>
  4286a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004286b0 <flatcc_builder_check_required_field@@Base>:
  4286b0:	mov    rax,QWORD PTR [rdi+0x30]
  4286b4:	cmp    WORD PTR [rax+0xe],0x3
  4286b9:	jne    4286d6 <flatcc_builder_check_required_field@@Base+0x26>
  4286bb:	xor    eax,eax
  4286bd:	cmp    WORD PTR [rdi+0x10],si
  4286c1:	jbe    4286d2 <flatcc_builder_check_required_field@@Base+0x22>
  4286c3:	mov    rax,QWORD PTR [rdi+0x8]
  4286c7:	movzx  edx,si
  4286ca:	cmp    WORD PTR [rax+rdx*2],0x0
  4286cf:	setne  al
  4286d2:	movzx  eax,al
  4286d5:	ret    
  4286d6:	lea    rcx,[rip+0x1faa3]        # 448180 <fb_schema_table_missing@@Base+0x3530>
  4286dd:	lea    rsi,[rip+0x1f2ec]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4286e4:	lea    rdi,[rip+0x1f52d]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  4286eb:	sub    rsp,0x8
  4286ef:	mov    edx,0x4f8
  4286f4:	call   4050f0 <__assert_fail@plt>
  4286f9:	nop    DWORD PTR [rax+0x0]

0000000000428700 <flatcc_builder_check_union_field@@Base>:
  428700:	mov    rax,QWORD PTR [rdi+0x30]
  428704:	cmp    WORD PTR [rax+0xe],0x3
  428709:	jne    42874b <flatcc_builder_check_union_field@@Base+0x4b>
  42870b:	xor    eax,eax
  42870d:	test   si,si
  428710:	je     42873d <flatcc_builder_check_union_field@@Base+0x3d>
  428712:	cmp    si,WORD PTR [rdi+0x10]
  428716:	jae    42873d <flatcc_builder_check_union_field@@Base+0x3d>
  428718:	mov    rcx,QWORD PTR [rdi+0x8]
  42871c:	movzx  edx,si
  42871f:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  428724:	test   ax,ax
  428727:	je     428733 <flatcc_builder_check_union_field@@Base+0x33>
  428729:	mov    rsi,QWORD PTR [rdi+0x18]
  42872d:	cmp    BYTE PTR [rsi+rax*1],0x0
  428731:	jne    428740 <flatcc_builder_check_union_field@@Base+0x40>
  428733:	xor    eax,eax
  428735:	cmp    WORD PTR [rcx+rdx*2],0x0
  42873a:	sete   al
  42873d:	repz ret 
  42873f:	nop
  428740:	xor    eax,eax
  428742:	cmp    WORD PTR [rcx+rdx*2],0x0
  428747:	setne  al
  42874a:	ret    
  42874b:	lea    rcx,[rip+0x1f9ee]        # 448140 <fb_schema_table_missing@@Base+0x34f0>
  428752:	lea    rsi,[rip+0x1f277]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428759:	lea    rdi,[rip+0x1f4b8]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  428760:	sub    rsp,0x8
  428764:	mov    edx,0x4ff
  428769:	call   4050f0 <__assert_fail@plt>
  42876e:	xchg   ax,ax

0000000000428770 <flatcc_builder_check_required@@Base>:
  428770:	mov    rax,QWORD PTR [rdi+0x30]
  428774:	cmp    WORD PTR [rax+0xe],0x3
  428779:	jne    4287cb <flatcc_builder_check_required@@Base+0x5b>
  42877b:	movzx  ecx,WORD PTR [rdi+0x10]
  42877f:	xor    eax,eax
  428781:	cmp    ecx,edx
  428783:	jl     4287c0 <flatcc_builder_check_required@@Base+0x50>
  428785:	test   edx,edx
  428787:	jle    4287bb <flatcc_builder_check_required@@Base+0x4b>
  428789:	mov    rcx,QWORD PTR [rdi+0x8]
  42878d:	movzx  edi,WORD PTR [rsi]
  428790:	cmp    WORD PTR [rcx+rdi*2],0x0
  428795:	je     4287c0 <flatcc_builder_check_required@@Base+0x50>
  428797:	sub    edx,0x1
  42879a:	lea    rax,[rsi+0x2]
  42879e:	lea    rsi,[rsi+rdx*2+0x2]
  4287a3:	jmp    4287b6 <flatcc_builder_check_required@@Base+0x46>
  4287a5:	nop    DWORD PTR [rax]
  4287a8:	movzx  edx,WORD PTR [rax]
  4287ab:	add    rax,0x2
  4287af:	cmp    WORD PTR [rcx+rdx*2],0x0
  4287b4:	je     4287c8 <flatcc_builder_check_required@@Base+0x58>
  4287b6:	cmp    rax,rsi
  4287b9:	jne    4287a8 <flatcc_builder_check_required@@Base+0x38>
  4287bb:	mov    eax,0x1
  4287c0:	repz ret 
  4287c2:	nop    WORD PTR [rax+rax*1+0x0]
  4287c8:	xor    eax,eax
  4287ca:	ret    
  4287cb:	lea    rcx,[rip+0x1f93e]        # 448110 <fb_schema_table_missing@@Base+0x34c0>
  4287d2:	lea    rsi,[rip+0x1f1f7]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4287d9:	lea    rdi,[rip+0x1f438]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  4287e0:	sub    rsp,0x8
  4287e4:	mov    edx,0x511
  4287e9:	call   4050f0 <__assert_fail@plt>
  4287ee:	xchg   ax,ax

00000000004287f0 <flatcc_builder_end_table@@Base>:
  4287f0:	push   r13
  4287f2:	push   r12
  4287f4:	push   rbp
  4287f5:	push   rbx
  4287f6:	sub    rsp,0x8
  4287fa:	mov    rax,QWORD PTR [rdi+0x30]
  4287fe:	cmp    WORD PTR [rax+0xe],0x3
  428803:	jne    42895e <flatcc_builder_end_table@@Base+0x16e>
  428809:	movzx  ebp,WORD PTR [rdi+0x10]
  42880d:	movzx  eax,WORD PTR [rdi+0x20]
  428811:	mov    rbx,rdi
  428814:	mov    rcx,QWORD PTR [rdi+0x8]
  428818:	add    ebp,0x2
  42881b:	add    eax,0x4
  42881e:	lea    r12,[rcx-0x4]
  428822:	add    ebp,ebp
  428824:	mov    WORD PTR [rcx-0x2],ax
  428828:	movzx  eax,ax
  42882b:	mov    WORD PTR [rcx-0x4],bp
  42882f:	mov    ecx,DWORD PTR [rdi+0x14]
  428832:	movzx  edx,bp
  428835:	mov    rsi,r12
  428838:	xor    ecx,edx
  42883a:	imul   ecx,ecx,0x9e3779b1
  428840:	xor    ecx,eax
  428842:	imul   ecx,ecx,0x9e3779b1
  428848:	mov    DWORD PTR [rdi+0x14],ecx
  42884b:	call   428120 <flatcc_builder_create_cached_vtable@@Base>
  428850:	test   eax,eax
  428852:	mov    r13d,eax
  428855:	jne    428870 <flatcc_builder_end_table@@Base+0x80>
  428857:	add    rsp,0x8
  42885b:	xor    ebp,ebp
  42885d:	pop    rbx
  42885e:	mov    eax,ebp
  428860:	pop    rbp
  428861:	pop    r12
  428863:	pop    r13
  428865:	ret    
  428866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428870:	movzx  edx,bp
  428873:	xor    esi,esi
  428875:	mov    rdi,r12
  428878:	call   405100 <memset@plt>
  42887d:	mov    rax,QWORD PTR [rbx+0x30]
  428881:	mov    r9,QWORD PTR [rbx]
  428884:	sub    rsp,0x8
  428888:	mov    edx,DWORD PTR [rbx+0x20]
  42888b:	movzx  ecx,WORD PTR [rbx+0xea]
  428892:	mov    rdi,rbx
  428895:	mov    rsi,QWORD PTR [rbx+0x18]
  428899:	mov    r8d,DWORD PTR [rax+0x14]
  42889d:	add    r8,QWORD PTR [rbx+0x88]
  4288a4:	push   r13
  4288a6:	sub    r9,r8
  4288a9:	shr    r9,1
  4288ac:	call   4284b0 <flatcc_builder_create_table@@Base>
  4288b1:	mov    ebp,eax
  4288b3:	test   ebp,ebp
  4288b5:	pop    rax
  4288b6:	pop    rdx
  4288b7:	je     428857 <flatcc_builder_end_table@@Base+0x67>
  4288b9:	mov    rax,QWORD PTR [rbx+0x30]
  4288bd:	mov    rdi,QWORD PTR [rbx+0x18]
  4288c1:	xor    esi,esi
  4288c3:	mov    edx,DWORD PTR [rax+0x18]
  4288c6:	mov    DWORD PTR [rbx+0x14],edx
  4288c9:	movzx  edx,WORD PTR [rax+0x1c]
  4288cd:	mov    WORD PTR [rbx+0x10],dx
  4288d1:	mov    edx,DWORD PTR [rax+0x10]
  4288d4:	add    rdx,QWORD PTR [rbx+0x58]
  4288d8:	mov    QWORD PTR [rbx+0x8],rdx
  4288dc:	mov    eax,DWORD PTR [rax+0x14]
  4288df:	add    rax,QWORD PTR [rbx+0x88]
  4288e6:	mov    edx,DWORD PTR [rbx+0x20]
  4288e9:	mov    QWORD PTR [rbx],rax
  4288ec:	call   405100 <memset@plt>
  4288f1:	mov    rax,QWORD PTR [rbx+0x30]
  4288f5:	mov    edi,DWORD PTR [rbx+0x70]
  4288f8:	mov    esi,DWORD PTR [rax]
  4288fa:	mov    edx,DWORD PTR [rax+0x8]
  4288fd:	mov    ecx,DWORD PTR [rax+0x4]
  428900:	mov    DWORD PTR [rbx+0x20],edx
  428903:	mov    rdx,rsi
  428906:	mov    DWORD PTR [rbx+0x28],esi
  428909:	add    rsi,QWORD PTR [rbx+0x68]
  42890d:	sub    edi,edx
  42890f:	cmp    ecx,edi
  428911:	mov    edx,edi
  428913:	cmovb  edx,ecx
  428916:	mov    DWORD PTR [rbx+0x24],edx
  428919:	movzx  edx,WORD PTR [rbx+0xea]
  428920:	cmp    dx,WORD PTR [rbx+0xe8]
  428927:	mov    QWORD PTR [rbx+0x18],rsi
  42892b:	mov    DWORD PTR [rax+0x4],ecx
  42892e:	jbe    428937 <flatcc_builder_end_table@@Base+0x147>
  428930:	mov    WORD PTR [rbx+0xe8],dx
  428937:	movzx  edx,WORD PTR [rax+0xc]
  42893b:	sub    rax,0x24
  42893f:	sub    DWORD PTR [rbx+0x104],0x1
  428946:	mov    QWORD PTR [rbx+0x30],rax
  42894a:	mov    eax,ebp
  42894c:	mov    WORD PTR [rbx+0xea],dx
  428953:	add    rsp,0x8
  428957:	pop    rbx
  428958:	pop    rbp
  428959:	pop    r12
  42895b:	pop    r13
  42895d:	ret    
  42895e:	lea    rcx,[rip+0x1f78b]        # 4480f0 <fb_schema_table_missing@@Base+0x34a0>
  428965:	lea    rsi,[rip+0x1f064]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42896c:	lea    rdi,[rip+0x1f2a5]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  428973:	mov    edx,0x525
  428978:	call   4050f0 <__assert_fail@plt>
  42897d:	nop    DWORD PTR [rax]

0000000000428980 <flatcc_builder_create_vector@@Base>:
  428980:	push   rbp
  428981:	push   rbx
  428982:	sub    rsp,0xb8
  428989:	mov    rax,QWORD PTR fs:0x28
  428992:	mov    QWORD PTR [rsp+0xa8],rax
  42899a:	xor    eax,eax
  42899c:	cmp    rdx,r9
  42899f:	ja     428ae4 <flatcc_builder_create_vector@@Base+0x164>
  4289a5:	mov    rbx,rdi
  4289a8:	cmp    r8w,0x4
  4289ad:	mov    eax,0x4
  4289b2:	cmovb  r8d,eax
  4289b6:	cmp    r8w,WORD PTR [rbx+0xe8]
  4289be:	movzx  edi,r8w
  4289c2:	jbe    4289cc <flatcc_builder_create_vector@@Base+0x4c>
  4289c4:	mov    WORD PTR [rbx+0xe8],r8w
  4289cc:	imul   ecx,edx
  4289cf:	mov    DWORD PTR [rsp+0xc],edx
  4289d3:	mov    edx,DWORD PTR [rbx+0xf0]
  4289d9:	sub    edi,0x1
  4289dc:	mov    QWORD PTR [rsp+0x10],0x4
  4289e5:	mov    QWORD PTR [rsp+0x28],0x4
  4289ee:	mov    DWORD PTR [rsp+0x18],0x1
  4289f6:	mov    r8d,0x4
  4289fc:	mov    eax,edx
  4289fe:	sub    eax,ecx
  428a00:	and    eax,edi
  428a02:	lea    rdi,[rsp+0xc]
  428a07:	test   ecx,ecx
  428a09:	mov    QWORD PTR [rsp+0x20],rdi
  428a0e:	jne    428aa0 <flatcc_builder_create_vector@@Base+0x120>
  428a14:	test   eax,eax
  428a16:	je     428a44 <flatcc_builder_create_vector@@Base+0xc4>
  428a18:	movsxd rsi,DWORD PTR [rsp+0x18]
  428a1d:	mov    rdi,0x4484c0
  428a24:	add    r8,rax
  428a27:	mov    QWORD PTR [rsp+0x10],r8
  428a2c:	mov    rcx,rsi
  428a2f:	shl    rsi,0x4
  428a33:	add    ecx,0x1
  428a36:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  428a3b:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  428a40:	mov    DWORD PTR [rsp+0x18],ecx
  428a44:	mov    ebp,edx
  428a46:	movabs rax,0x10000000f
  428a50:	sub    ebp,r8d
  428a53:	cmp    r8,rax
  428a56:	ja     428ac0 <flatcc_builder_create_vector@@Base+0x140>
  428a58:	cmp    edx,ebp
  428a5a:	jle    428ac0 <flatcc_builder_create_vector@@Base+0x140>
  428a5c:	lea    rsi,[rsp+0x20]
  428a61:	mov    rdi,QWORD PTR [rbx+0x38]
  428a65:	mov    ecx,ebp
  428a67:	mov    edx,DWORD PTR [rsp+0x18]
  428a6b:	call   QWORD PTR [rbx+0x48]
  428a6e:	test   eax,eax
  428a70:	jne    428adf <flatcc_builder_create_vector@@Base+0x15f>
  428a72:	mov    DWORD PTR [rbx+0xf0],ebp
  428a78:	mov    eax,ebp
  428a7a:	mov    rbx,QWORD PTR [rsp+0xa8]
  428a82:	xor    rbx,QWORD PTR fs:0x28
  428a8b:	jne    428b03 <flatcc_builder_create_vector@@Base+0x183>
  428a8d:	add    rsp,0xb8
  428a94:	pop    rbx
  428a95:	pop    rbp
  428a96:	ret    
  428a97:	nop    WORD PTR [rax+rax*1+0x0]
  428aa0:	lea    r8,[rcx+0x4]
  428aa4:	mov    QWORD PTR [rsp+0x30],rsi
  428aa9:	mov    QWORD PTR [rsp+0x38],rcx
  428aae:	mov    DWORD PTR [rsp+0x18],0x2
  428ab6:	mov    QWORD PTR [rsp+0x10],r8
  428abb:	jmp    428a14 <flatcc_builder_create_vector@@Base+0x94>
  428ac0:	lea    rcx,[rip+0x1f949]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  428ac7:	lea    rsi,[rip+0x1ef02]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428ace:	lea    rdi,[rip+0xd034]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  428ad5:	mov    edx,0x287
  428ada:	call   4050f0 <__assert_fail@plt>
  428adf:	call   405302 <__sprintf_chk@plt+0xf2>
  428ae4:	lea    rcx,[rip+0x1f5e5]        # 4480d0 <fb_schema_table_missing@@Base+0x3480>
  428aeb:	lea    rsi,[rip+0x1eede]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428af2:	lea    rdi,[rip+0x1f2e0]        # 447dd9 <fb_schema_table_missing@@Base+0x3189>
  428af9:	mov    edx,0x555
  428afe:	call   4050f0 <__assert_fail@plt>
  428b03:	call   4050d0 <__stack_chk_fail@plt>
  428b08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428b10 <flatcc_builder_end_vector@@Base>:
  428b10:	push   rbp
  428b11:	push   rbx
  428b12:	sub    rsp,0x8
  428b16:	mov    rax,QWORD PTR [rdi+0x30]
  428b1a:	cmp    WORD PTR [rax+0xe],0x4
  428b1f:	jne    428bcf <flatcc_builder_end_vector@@Base+0xbf>
  428b25:	mov    ecx,DWORD PTR [rax+0x10]
  428b28:	mov    edx,DWORD PTR [rax+0x14]
  428b2b:	mov    rbx,rdi
  428b2e:	mov    r9d,DWORD PTR [rax+0x18]
  428b32:	movzx  r8d,WORD PTR [rdi+0xea]
  428b3a:	mov    rsi,QWORD PTR [rdi+0x18]
  428b3e:	call   428980 <flatcc_builder_create_vector@@Base>
  428b43:	test   eax,eax
  428b45:	mov    ebp,eax
  428b47:	jne    428b58 <flatcc_builder_end_vector@@Base+0x48>
  428b49:	add    rsp,0x8
  428b4d:	mov    eax,ebp
  428b4f:	pop    rbx
  428b50:	pop    rbp
  428b51:	ret    
  428b52:	nop    WORD PTR [rax+rax*1+0x0]
  428b58:	mov    edx,DWORD PTR [rbx+0x20]
  428b5b:	mov    rdi,QWORD PTR [rbx+0x18]
  428b5f:	xor    esi,esi
  428b61:	call   405100 <memset@plt>
  428b66:	mov    rax,QWORD PTR [rbx+0x30]
  428b6a:	mov    edi,DWORD PTR [rbx+0x70]
  428b6d:	mov    esi,DWORD PTR [rax]
  428b6f:	mov    edx,DWORD PTR [rax+0x8]
  428b72:	mov    ecx,DWORD PTR [rax+0x4]
  428b75:	mov    DWORD PTR [rbx+0x20],edx
  428b78:	mov    rdx,rsi
  428b7b:	mov    DWORD PTR [rbx+0x28],esi
  428b7e:	add    rsi,QWORD PTR [rbx+0x68]
  428b82:	sub    edi,edx
  428b84:	cmp    ecx,edi
  428b86:	mov    edx,edi
  428b88:	cmovb  edx,ecx
  428b8b:	mov    DWORD PTR [rbx+0x24],edx
  428b8e:	movzx  edx,WORD PTR [rbx+0xea]
  428b95:	cmp    dx,WORD PTR [rbx+0xe8]
  428b9c:	mov    QWORD PTR [rbx+0x18],rsi
  428ba0:	mov    DWORD PTR [rax+0x4],ecx
  428ba3:	jbe    428bac <flatcc_builder_end_vector@@Base+0x9c>
  428ba5:	mov    WORD PTR [rbx+0xe8],dx
  428bac:	movzx  edx,WORD PTR [rax+0xc]
  428bb0:	sub    rax,0x24
  428bb4:	sub    DWORD PTR [rbx+0x104],0x1
  428bbb:	mov    QWORD PTR [rbx+0x30],rax
  428bbf:	mov    eax,ebp
  428bc1:	mov    WORD PTR [rbx+0xea],dx
  428bc8:	add    rsp,0x8
  428bcc:	pop    rbx
  428bcd:	pop    rbp
  428bce:	ret    
  428bcf:	lea    rcx,[rip+0x1f4da]        # 4480b0 <fb_schema_table_missing@@Base+0x3460>
  428bd6:	lea    rsi,[rip+0x1edf3]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428bdd:	lea    rdi,[rip+0x1eecc]        # 447ab0 <fb_schema_table_missing@@Base+0x2e60>
  428be4:	mov    edx,0x578
  428be9:	call   4050f0 <__assert_fail@plt>
  428bee:	xchg   ax,ax

0000000000428bf0 <flatcc_builder_vector_count@@Base>:
  428bf0:	mov    rax,QWORD PTR [rdi+0x30]
  428bf4:	mov    eax,DWORD PTR [rax+0x14]
  428bf7:	ret    
  428bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428c00 <flatcc_builder_vector_edit@@Base>:
  428c00:	mov    rax,QWORD PTR [rdi+0x18]
  428c04:	ret    
  428c05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000428c10 <flatcc_builder_create_offset_vector_direct@@Base>:
  428c10:	xor    ecx,ecx
  428c12:	jmp    4264c0 <flatcc_builder_default_alloc@@Base+0x390>
  428c17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428c20 <flatcc_builder_end_offset_vector@@Base>:
  428c20:	push   rbp
  428c21:	push   rbx
  428c22:	sub    rsp,0x8
  428c26:	mov    rax,QWORD PTR [rdi+0x30]
  428c2a:	cmp    WORD PTR [rax+0xe],0x5
  428c2f:	jne    428ccf <flatcc_builder_end_offset_vector@@Base+0xaf>
  428c35:	mov    edx,DWORD PTR [rax+0x14]
  428c38:	mov    rsi,QWORD PTR [rdi+0x18]
  428c3c:	mov    rbx,rdi
  428c3f:	call   428c10 <flatcc_builder_create_offset_vector_direct@@Base>
  428c44:	test   eax,eax
  428c46:	mov    ebp,eax
  428c48:	jne    428c58 <flatcc_builder_end_offset_vector@@Base+0x38>
  428c4a:	add    rsp,0x8
  428c4e:	mov    eax,ebp
  428c50:	pop    rbx
  428c51:	pop    rbp
  428c52:	ret    
  428c53:	nop    DWORD PTR [rax+rax*1+0x0]
  428c58:	mov    edx,DWORD PTR [rbx+0x20]
  428c5b:	mov    rdi,QWORD PTR [rbx+0x18]
  428c5f:	xor    esi,esi
  428c61:	call   405100 <memset@plt>
  428c66:	mov    rax,QWORD PTR [rbx+0x30]
  428c6a:	mov    edi,DWORD PTR [rbx+0x70]
  428c6d:	mov    esi,DWORD PTR [rax]
  428c6f:	mov    edx,DWORD PTR [rax+0x8]
  428c72:	mov    ecx,DWORD PTR [rax+0x4]
  428c75:	mov    DWORD PTR [rbx+0x20],edx
  428c78:	mov    rdx,rsi
  428c7b:	mov    DWORD PTR [rbx+0x28],esi
  428c7e:	add    rsi,QWORD PTR [rbx+0x68]
  428c82:	sub    edi,edx
  428c84:	cmp    ecx,edi
  428c86:	mov    edx,edi
  428c88:	cmovb  edx,ecx
  428c8b:	mov    DWORD PTR [rbx+0x24],edx
  428c8e:	movzx  edx,WORD PTR [rbx+0xea]
  428c95:	cmp    dx,WORD PTR [rbx+0xe8]
  428c9c:	mov    QWORD PTR [rbx+0x18],rsi
  428ca0:	mov    DWORD PTR [rax+0x4],ecx
  428ca3:	jbe    428cac <flatcc_builder_end_offset_vector@@Base+0x8c>
  428ca5:	mov    WORD PTR [rbx+0xe8],dx
  428cac:	movzx  edx,WORD PTR [rax+0xc]
  428cb0:	sub    rax,0x24
  428cb4:	sub    DWORD PTR [rbx+0x104],0x1
  428cbb:	mov    QWORD PTR [rbx+0x30],rax
  428cbf:	mov    eax,ebp
  428cc1:	mov    WORD PTR [rbx+0xea],dx
  428cc8:	add    rsp,0x8
  428ccc:	pop    rbx
  428ccd:	pop    rbp
  428cce:	ret    
  428ccf:	lea    rcx,[rip+0x1f38a]        # 448060 <fb_schema_table_missing@@Base+0x3410>
  428cd6:	lea    rsi,[rip+0x1ecf3]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428cdd:	lea    rdi,[rip+0x1ee3c]        # 447b20 <fb_schema_table_missing@@Base+0x2ed0>
  428ce4:	mov    edx,0x5c8
  428ce9:	call   4050f0 <__assert_fail@plt>
  428cee:	xchg   ax,ax

0000000000428cf0 <flatcc_builder_create_offset_vector@@Base>:
  428cf0:	push   r12
  428cf2:	push   rbp
  428cf3:	mov    r12,rsi
  428cf6:	push   rbx
  428cf7:	mov    rbp,rdx
  428cfa:	mov    rbx,rdi
  428cfd:	call   427c90 <flatcc_builder_start_offset_vector@@Base>
  428d02:	test   eax,eax
  428d04:	je     428d10 <flatcc_builder_create_offset_vector@@Base+0x20>
  428d06:	pop    rbx
  428d07:	xor    eax,eax
  428d09:	pop    rbp
  428d0a:	pop    r12
  428d0c:	ret    
  428d0d:	nop    DWORD PTR [rax]
  428d10:	mov    rsi,rbp
  428d13:	mov    rdi,rbx
  428d16:	call   427750 <flatcc_builder_extend_offset_vector@@Base>
  428d1b:	test   rax,rax
  428d1e:	je     428d06 <flatcc_builder_create_offset_vector@@Base+0x16>
  428d20:	lea    rdx,[rbp*4+0x0]
  428d28:	mov    rsi,r12
  428d2b:	mov    rdi,rax
  428d2e:	call   405160 <memcpy@plt>
  428d33:	mov    rdi,rbx
  428d36:	pop    rbx
  428d37:	pop    rbp
  428d38:	pop    r12
  428d3a:	jmp    428c20 <flatcc_builder_end_offset_vector@@Base>
  428d3f:	nop

0000000000428d40 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  428d40:	push   rbp
  428d41:	push   rbx
  428d42:	sub    rsp,0x8
  428d46:	mov    rax,QWORD PTR [rdi+0x30]
  428d4a:	cmp    WORD PTR [rax+0xe],0x5
  428d4f:	jne    428df7 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb7>
  428d55:	mov    edx,DWORD PTR [rax+0x14]
  428d58:	mov    rcx,rsi
  428d5b:	mov    rsi,QWORD PTR [rdi+0x18]
  428d5f:	mov    rbx,rdi
  428d62:	call   4264c0 <flatcc_builder_default_alloc@@Base+0x390>
  428d67:	test   eax,eax
  428d69:	mov    ebp,eax
  428d6b:	jne    428d80 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  428d6d:	add    rsp,0x8
  428d71:	mov    eax,ebp
  428d73:	pop    rbx
  428d74:	pop    rbp
  428d75:	ret    
  428d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428d80:	mov    edx,DWORD PTR [rbx+0x20]
  428d83:	mov    rdi,QWORD PTR [rbx+0x18]
  428d87:	xor    esi,esi
  428d89:	call   405100 <memset@plt>
  428d8e:	mov    rax,QWORD PTR [rbx+0x30]
  428d92:	mov    edi,DWORD PTR [rbx+0x70]
  428d95:	mov    esi,DWORD PTR [rax]
  428d97:	mov    edx,DWORD PTR [rax+0x8]
  428d9a:	mov    ecx,DWORD PTR [rax+0x4]
  428d9d:	mov    DWORD PTR [rbx+0x20],edx
  428da0:	mov    rdx,rsi
  428da3:	mov    DWORD PTR [rbx+0x28],esi
  428da6:	add    rsi,QWORD PTR [rbx+0x68]
  428daa:	sub    edi,edx
  428dac:	cmp    ecx,edi
  428dae:	mov    edx,edi
  428db0:	cmovb  edx,ecx
  428db3:	mov    DWORD PTR [rbx+0x24],edx
  428db6:	movzx  edx,WORD PTR [rbx+0xea]
  428dbd:	cmp    dx,WORD PTR [rbx+0xe8]
  428dc4:	mov    QWORD PTR [rbx+0x18],rsi
  428dc8:	mov    DWORD PTR [rax+0x4],ecx
  428dcb:	jbe    428dd4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  428dcd:	mov    WORD PTR [rbx+0xe8],dx
  428dd4:	movzx  edx,WORD PTR [rax+0xc]
  428dd8:	sub    rax,0x24
  428ddc:	sub    DWORD PTR [rbx+0x104],0x1
  428de3:	mov    QWORD PTR [rbx+0x30],rax
  428de7:	mov    eax,ebp
  428de9:	mov    WORD PTR [rbx+0xea],dx
  428df0:	add    rsp,0x8
  428df4:	pop    rbx
  428df5:	pop    rbp
  428df6:	ret    
  428df7:	lea    rcx,[rip+0x1f222]        # 448020 <fb_schema_table_missing@@Base+0x33d0>
  428dfe:	lea    rsi,[rip+0x1ebcb]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  428e05:	lea    rdi,[rip+0x1ed14]        # 447b20 <fb_schema_table_missing@@Base+0x2ed0>
  428e0c:	mov    edx,0x5d5
  428e11:	call   4050f0 <__assert_fail@plt>
  428e16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428e20 <flatcc_builder_offset_vector_edit@@Base>:
  428e20:	mov    rax,QWORD PTR [rdi+0x18]
  428e24:	ret    
  428e25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000428e30 <flatcc_builder_offset_vector_count@@Base>:
  428e30:	mov    rax,QWORD PTR [rdi+0x30]
  428e34:	mov    eax,DWORD PTR [rax+0x14]
  428e37:	ret    
  428e38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428e40 <flatcc_builder_create_union_vector_direct@@Base>:
  428e40:	push   r13
  428e42:	push   r12
  428e44:	mov    r13,rcx
  428e47:	push   rbp
  428e48:	push   rbx
  428e49:	mov    r12,rsi
  428e4c:	mov    rcx,r12
  428e4f:	mov    rsi,rdx
  428e52:	mov    rdx,r13
  428e55:	sub    rsp,0x8
  428e59:	mov    rbp,rdi
  428e5c:	call   4264c0 <flatcc_builder_default_alloc@@Base+0x390>
  428e61:	test   eax,eax
  428e63:	jne    428e78 <flatcc_builder_create_union_vector_direct@@Base+0x38>
  428e65:	add    rsp,0x8
  428e69:	xor    eax,eax
  428e6b:	pop    rbx
  428e6c:	pop    rbp
  428e6d:	pop    r12
  428e6f:	pop    r13
  428e71:	ret    
  428e72:	nop    WORD PTR [rax+rax*1+0x0]
  428e78:	mov    ebx,eax
  428e7a:	mov    rdx,r13
  428e7d:	mov    ecx,0x1
  428e82:	mov    rsi,r12
  428e85:	mov    rdi,rbp
  428e88:	mov    r9d,0xffffffff
  428e8e:	mov    r8d,0x1
  428e94:	call   428980 <flatcc_builder_create_vector@@Base>
  428e99:	mov    rcx,rbx
  428e9c:	mov    edx,eax
  428e9e:	shl    rcx,0x20
  428ea2:	mov    rbx,rcx
  428ea5:	or     rbx,rdx
  428ea8:	test   eax,eax
  428eaa:	mov    rax,rcx
  428ead:	cmovne rax,rbx
  428eb1:	add    rsp,0x8
  428eb5:	pop    rbx
  428eb6:	pop    rbp
  428eb7:	pop    r12
  428eb9:	pop    r13
  428ebb:	ret    
  428ebc:	nop    DWORD PTR [rax+0x0]

0000000000428ec0 <flatcc_builder_create_union_vector@@Base>:
  428ec0:	push   r13
  428ec2:	push   r12
  428ec4:	mov    r12,rdx
  428ec7:	push   rbp
  428ec8:	push   rbx
  428ec9:	mov    rbp,rsi
  428ecc:	mov    rbx,rdi
  428ecf:	sub    rsp,0x8
  428ed3:	call   427c90 <flatcc_builder_start_offset_vector@@Base>
  428ed8:	test   eax,eax
  428eda:	je     428ef0 <flatcc_builder_create_union_vector@@Base+0x30>
  428edc:	add    rsp,0x8
  428ee0:	xor    eax,eax
  428ee2:	pop    rbx
  428ee3:	pop    rbp
  428ee4:	pop    r12
  428ee6:	pop    r13
  428ee8:	ret    
  428ee9:	nop    DWORD PTR [rax+0x0]
  428ef0:	mov    rsi,r12
  428ef3:	mov    rdi,rbx
  428ef6:	call   427750 <flatcc_builder_extend_offset_vector@@Base>
  428efb:	test   rax,rax
  428efe:	je     428edc <flatcc_builder_create_union_vector@@Base+0x1c>
  428f00:	mov    r13d,DWORD PTR [rbx+0x20]
  428f04:	mov    rax,r13
  428f07:	add    eax,r12d
  428f0a:	cmp    eax,DWORD PTR [rbx+0x24]
  428f0d:	mov    DWORD PTR [rbx+0x20],eax
  428f10:	jae    428ff0 <flatcc_builder_create_union_vector@@Base+0x130>
  428f16:	add    r13,QWORD PTR [rbx+0x18]
  428f1a:	je     428edc <flatcc_builder_create_union_vector@@Base+0x1c>
  428f1c:	mov    rdi,rbx
  428f1f:	call   428e20 <flatcc_builder_offset_vector_edit@@Base>
  428f24:	xor    edi,edi
  428f26:	test   r12,r12
  428f29:	je     428f4d <flatcc_builder_create_union_vector@@Base+0x8d>
  428f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  428f30:	movzx  r8d,BYTE PTR [rbp+rdi*8+0x0]
  428f36:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  428f3b:	mov    r8d,DWORD PTR [rbp+rdi*8+0x4]
  428f40:	mov    DWORD PTR [rax+rdi*4],r8d
  428f44:	add    rdi,0x1
  428f48:	cmp    r12,rdi
  428f4b:	jne    428f30 <flatcc_builder_create_union_vector@@Base+0x70>
  428f4d:	mov    rcx,r12
  428f50:	mov    rdx,rax
  428f53:	mov    rsi,r13
  428f56:	mov    rdi,rbx
  428f59:	call   428e40 <flatcc_builder_create_union_vector_direct@@Base>
  428f5e:	mov    edx,DWORD PTR [rbx+0x20]
  428f61:	mov    rdi,QWORD PTR [rbx+0x18]
  428f65:	xor    esi,esi
  428f67:	mov    r12,rax
  428f6a:	mov    rbp,rax
  428f6d:	sar    r12,0x20
  428f71:	call   405100 <memset@plt>
  428f76:	mov    rax,QWORD PTR [rbx+0x30]
  428f7a:	mov    esi,DWORD PTR [rax]
  428f7c:	mov    edx,DWORD PTR [rax+0x8]
  428f7f:	mov    ecx,DWORD PTR [rax+0x4]
  428f82:	mov    DWORD PTR [rbx+0x20],edx
  428f85:	mov    DWORD PTR [rbx+0x28],esi
  428f88:	mov    rdx,rsi
  428f8b:	add    rsi,QWORD PTR [rbx+0x68]
  428f8f:	mov    QWORD PTR [rbx+0x18],rsi
  428f93:	mov    esi,DWORD PTR [rbx+0x70]
  428f96:	sub    esi,edx
  428f98:	cmp    ecx,esi
  428f9a:	mov    edx,esi
  428f9c:	cmovb  edx,ecx
  428f9f:	mov    DWORD PTR [rbx+0x24],edx
  428fa2:	movzx  edx,WORD PTR [rbx+0xea]
  428fa9:	cmp    dx,WORD PTR [rbx+0xe8]
  428fb0:	mov    DWORD PTR [rax+0x4],ecx
  428fb3:	jbe    428fbc <flatcc_builder_create_union_vector@@Base+0xfc>
  428fb5:	mov    WORD PTR [rbx+0xe8],dx
  428fbc:	movzx  edx,WORD PTR [rax+0xc]
  428fc0:	sub    rax,0x24
  428fc4:	sub    DWORD PTR [rbx+0x104],0x1
  428fcb:	mov    QWORD PTR [rbx+0x30],rax
  428fcf:	shl    r12,0x20
  428fd3:	mov    eax,ebp
  428fd5:	or     rax,r12
  428fd8:	mov    WORD PTR [rbx+0xea],dx
  428fdf:	add    rsp,0x8
  428fe3:	pop    rbx
  428fe4:	pop    rbp
  428fe5:	pop    r12
  428fe7:	pop    r13
  428fe9:	ret    
  428fea:	nop    WORD PTR [rax+rax*1+0x0]
  428ff0:	lea    esi,[rax+0x1]
  428ff3:	mov    edx,0xfffffffc
  428ff8:	mov    rdi,rbx
  428ffb:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429000:	test   eax,eax
  429002:	je     428f16 <flatcc_builder_create_union_vector@@Base+0x56>
  429008:	jmp    428edc <flatcc_builder_create_union_vector@@Base+0x1c>
  42900d:	nop    DWORD PTR [rax]

0000000000429010 <flatcc_builder_start_union_vector@@Base>:
  429010:	push   rbx
  429011:	mov    esi,0x4
  429016:	mov    rbx,rdi
  429019:	call   426390 <flatcc_builder_default_alloc@@Base+0x260>
  42901e:	test   eax,eax
  429020:	jne    429068 <flatcc_builder_start_union_vector@@Base+0x58>
  429022:	mov    rcx,QWORD PTR [rbx+0x30]
  429026:	mov    edx,0x7
  42902b:	mov    DWORD PTR [rcx+0x10],0x8
  429032:	mov    DWORD PTR [rcx+0x14],0x0
  429039:	mov    WORD PTR [rcx+0xe],dx
  42903d:	mov    edx,DWORD PTR [rbx+0x28]
  429040:	mov    rsi,rdx
  429043:	add    rdx,QWORD PTR [rbx+0x68]
  429047:	mov    QWORD PTR [rbx+0x18],rdx
  42904b:	mov    edx,DWORD PTR [rbx+0x70]
  42904e:	sub    edx,esi
  429050:	mov    esi,0xfffffffc
  429055:	cmp    edx,esi
  429057:	cmova  edx,esi
  42905a:	mov    DWORD PTR [rbx+0x24],edx
  42905d:	mov    DWORD PTR [rcx+0x4],esi
  429060:	pop    rbx
  429061:	ret    
  429062:	nop    WORD PTR [rax+rax*1+0x0]
  429068:	mov    eax,0xffffffff
  42906d:	pop    rbx
  42906e:	ret    
  42906f:	nop

0000000000429070 <flatcc_builder_union_vector_edit@@Base>:
  429070:	mov    rax,QWORD PTR [rdi+0x18]
  429074:	ret    
  429075:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429080 <flatcc_builder_union_vector_count@@Base>:
  429080:	mov    rax,QWORD PTR [rdi+0x30]
  429084:	mov    eax,DWORD PTR [rax+0x14]
  429087:	ret    
  429088:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429090 <flatcc_builder_end_union_vector@@Base>:
  429090:	push   r13
  429092:	push   r12
  429094:	push   rbp
  429095:	push   rbx
  429096:	sub    rsp,0x8
  42909a:	mov    rax,QWORD PTR [rdi+0x30]
  42909e:	cmp    WORD PTR [rax+0xe],0x7
  4290a3:	jne    4291d5 <flatcc_builder_end_union_vector@@Base+0x145>
  4290a9:	mov    rbx,rdi
  4290ac:	call   429080 <flatcc_builder_union_vector_count@@Base>
  4290b1:	mov    ebp,DWORD PTR [rbx+0x20]
  4290b4:	mov    r12,rax
  4290b7:	lea    eax,[rax+rax*4]
  4290ba:	add    eax,ebp
  4290bc:	cmp    eax,DWORD PTR [rbx+0x24]
  4290bf:	mov    DWORD PTR [rbx+0x20],eax
  4290c2:	jae    4291b0 <flatcc_builder_end_union_vector@@Base+0x120>
  4290c8:	add    rbp,QWORD PTR [rbx+0x18]
  4290cc:	je     4291c8 <flatcc_builder_end_union_vector@@Base+0x138>
  4290d2:	mov    rdi,rbx
  4290d5:	lea    r13,[rbp+r12*4+0x0]
  4290da:	call   429070 <flatcc_builder_union_vector_edit@@Base>
  4290df:	xor    edi,edi
  4290e1:	test   r12,r12
  4290e4:	je     42910d <flatcc_builder_end_union_vector@@Base+0x7d>
  4290e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4290f0:	movzx  r8d,BYTE PTR [rax+rdi*8]
  4290f5:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  4290fa:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  4290ff:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  429104:	add    rdi,0x1
  429108:	cmp    r12,rdi
  42910b:	jne    4290f0 <flatcc_builder_end_union_vector@@Base+0x60>
  42910d:	mov    rcx,r12
  429110:	mov    rdx,rbp
  429113:	mov    rsi,r13
  429116:	mov    rdi,rbx
  429119:	call   428e40 <flatcc_builder_create_union_vector_direct@@Base>
  42911e:	mov    edx,DWORD PTR [rbx+0x20]
  429121:	mov    rdi,QWORD PTR [rbx+0x18]
  429125:	xor    esi,esi
  429127:	mov    r12,rax
  42912a:	mov    rbp,rax
  42912d:	sar    r12,0x20
  429131:	call   405100 <memset@plt>
  429136:	mov    rax,QWORD PTR [rbx+0x30]
  42913a:	mov    esi,DWORD PTR [rax]
  42913c:	mov    edx,DWORD PTR [rax+0x8]
  42913f:	mov    ecx,DWORD PTR [rax+0x4]
  429142:	mov    DWORD PTR [rbx+0x20],edx
  429145:	mov    DWORD PTR [rbx+0x28],esi
  429148:	mov    rdx,rsi
  42914b:	add    rsi,QWORD PTR [rbx+0x68]
  42914f:	mov    QWORD PTR [rbx+0x18],rsi
  429153:	mov    esi,DWORD PTR [rbx+0x70]
  429156:	sub    esi,edx
  429158:	cmp    ecx,esi
  42915a:	mov    edx,esi
  42915c:	cmovb  edx,ecx
  42915f:	mov    DWORD PTR [rbx+0x24],edx
  429162:	movzx  edx,WORD PTR [rbx+0xea]
  429169:	cmp    dx,WORD PTR [rbx+0xe8]
  429170:	mov    DWORD PTR [rax+0x4],ecx
  429173:	jbe    42917c <flatcc_builder_end_union_vector@@Base+0xec>
  429175:	mov    WORD PTR [rbx+0xe8],dx
  42917c:	movzx  edx,WORD PTR [rax+0xc]
  429180:	sub    rax,0x24
  429184:	sub    DWORD PTR [rbx+0x104],0x1
  42918b:	mov    QWORD PTR [rbx+0x30],rax
  42918f:	shl    r12,0x20
  429193:	mov    eax,ebp
  429195:	or     rax,r12
  429198:	mov    WORD PTR [rbx+0xea],dx
  42919f:	add    rsp,0x8
  4291a3:	pop    rbx
  4291a4:	pop    rbp
  4291a5:	pop    r12
  4291a7:	pop    r13
  4291a9:	ret    
  4291aa:	nop    WORD PTR [rax+rax*1+0x0]
  4291b0:	lea    esi,[rax+0x1]
  4291b3:	mov    edx,0xfffffffc
  4291b8:	mov    rdi,rbx
  4291bb:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4291c0:	test   eax,eax
  4291c2:	je     4290c8 <flatcc_builder_end_union_vector@@Base+0x38>
  4291c8:	add    rsp,0x8
  4291cc:	xor    eax,eax
  4291ce:	pop    rbx
  4291cf:	pop    rbp
  4291d0:	pop    r12
  4291d2:	pop    r13
  4291d4:	ret    
  4291d5:	lea    rcx,[rip+0x1edc4]        # 447fa0 <fb_schema_table_missing@@Base+0x3350>
  4291dc:	lea    rsi,[rip+0x1e7ed]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4291e3:	lea    rdi,[rip+0x1ea5e]        # 447c48 <fb_schema_table_missing@@Base+0x2ff8>
  4291ea:	mov    edx,0x651
  4291ef:	call   4050f0 <__assert_fail@plt>
  4291f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4291ff:	nop

0000000000429200 <flatcc_builder_extend_union_vector@@Base>:
  429200:	push   rbp
  429201:	push   rbx
  429202:	xor    edx,edx
  429204:	mov    ecx,esi
  429206:	sub    rsp,0x8
  42920a:	mov    rax,QWORD PTR [rdi+0x30]
  42920e:	add    ecx,DWORD PTR [rax+0x14]
  429211:	setb   dl
  429214:	test   edx,edx
  429216:	jne    42925d <flatcc_builder_extend_union_vector@@Base+0x5d>
  429218:	cmp    ecx,0x1fffffff
  42921e:	ja     42925d <flatcc_builder_extend_union_vector@@Base+0x5d>
  429220:	mov    DWORD PTR [rax+0x14],ecx
  429223:	mov    ebp,DWORD PTR [rdi+0x20]
  429226:	mov    rbx,rdi
  429229:	lea    eax,[rbp+rsi*8+0x0]
  42922d:	cmp    eax,DWORD PTR [rdi+0x24]
  429230:	mov    DWORD PTR [rdi+0x20],eax
  429233:	jae    429248 <flatcc_builder_extend_union_vector@@Base+0x48>
  429235:	mov    rax,rbp
  429238:	add    rax,QWORD PTR [rbx+0x18]
  42923c:	add    rsp,0x8
  429240:	pop    rbx
  429241:	pop    rbp
  429242:	ret    
  429243:	nop    DWORD PTR [rax+rax*1+0x0]
  429248:	lea    esi,[rax+0x1]
  42924b:	mov    edx,0xfffffffc
  429250:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429255:	test   eax,eax
  429257:	je     429235 <flatcc_builder_extend_union_vector@@Base+0x35>
  429259:	xor    eax,eax
  42925b:	jmp    42923c <flatcc_builder_extend_union_vector@@Base+0x3c>
  42925d:	call   405325 <__sprintf_chk@plt+0x115>
  429262:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42926d:	nop    DWORD PTR [rax]

0000000000429270 <flatcc_builder_truncate_union_vector@@Base>:
  429270:	sub    rsp,0x8
  429274:	mov    rax,QWORD PTR [rdi+0x30]
  429278:	cmp    WORD PTR [rax+0xe],0x7
  42927d:	jne    4292af <flatcc_builder_truncate_union_vector@@Base+0x3f>
  42927f:	mov    edx,DWORD PTR [rax+0x14]
  429282:	cmp    edx,esi
  429284:	jb     4292ce <flatcc_builder_truncate_union_vector@@Base+0x5e>
  429286:	sub    edx,esi
  429288:	imul   esi,DWORD PTR [rax+0x10]
  42928c:	mov    DWORD PTR [rax+0x14],edx
  42928f:	mov    eax,DWORD PTR [rdi+0x20]
  429292:	mov    rcx,QWORD PTR [rdi+0x18]
  429296:	sub    eax,esi
  429298:	mov    edx,esi
  42929a:	xor    esi,esi
  42929c:	mov    DWORD PTR [rdi+0x20],eax
  42929f:	lea    rdi,[rcx+rax*1]
  4292a3:	call   405100 <memset@plt>
  4292a8:	xor    eax,eax
  4292aa:	add    rsp,0x8
  4292ae:	ret    
  4292af:	lea    rcx,[rip+0x1ecaa]        # 447f60 <fb_schema_table_missing@@Base+0x3310>
  4292b6:	lea    rsi,[rip+0x1e713]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4292bd:	lea    rdi,[rip+0x1e984]        # 447c48 <fb_schema_table_missing@@Base+0x2ff8>
  4292c4:	mov    edx,0x681
  4292c9:	call   4050f0 <__assert_fail@plt>
  4292ce:	lea    rcx,[rip+0x1ec8b]        # 447f60 <fb_schema_table_missing@@Base+0x3310>
  4292d5:	lea    rsi,[rip+0x1e6f4]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4292dc:	lea    rdi,[rip+0x1e8cd]        # 447bb0 <fb_schema_table_missing@@Base+0x2f60>
  4292e3:	mov    edx,0x682
  4292e8:	call   4050f0 <__assert_fail@plt>
  4292ed:	nop    DWORD PTR [rax]

00000000004292f0 <flatcc_builder_union_vector_push@@Base>:
  4292f0:	push   r12
  4292f2:	push   rbp
  4292f3:	push   rbx
  4292f4:	mov    rdx,QWORD PTR [rdi+0x30]
  4292f8:	cmp    WORD PTR [rdx+0xe],0x7
  4292fd:	jne    429350 <flatcc_builder_union_vector_push@@Base+0x60>
  4292ff:	mov    eax,DWORD PTR [rdx+0x14]
  429302:	cmp    eax,0x1fffffff
  429307:	je     429349 <flatcc_builder_union_vector_push@@Base+0x59>
  429309:	add    eax,0x1
  42930c:	mov    rbp,rdi
  42930f:	mov    r12,rsi
  429312:	mov    DWORD PTR [rdx+0x14],eax
  429315:	mov    ebx,DWORD PTR [rdi+0x20]
  429318:	lea    edx,[rbx+0x8]
  42931b:	cmp    edx,DWORD PTR [rdi+0x24]
  42931e:	mov    DWORD PTR [rdi+0x20],edx
  429321:	jae    429338 <flatcc_builder_union_vector_push@@Base+0x48>
  429323:	mov    rax,rbx
  429326:	add    rax,QWORD PTR [rbp+0x18]
  42932a:	je     429349 <flatcc_builder_union_vector_push@@Base+0x59>
  42932c:	mov    QWORD PTR [rax],r12
  42932f:	pop    rbx
  429330:	pop    rbp
  429331:	pop    r12
  429333:	ret    
  429334:	nop    DWORD PTR [rax+0x0]
  429338:	lea    esi,[rbx+0x9]
  42933b:	mov    edx,0xfffffffc
  429340:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429345:	test   eax,eax
  429347:	je     429323 <flatcc_builder_union_vector_push@@Base+0x33>
  429349:	pop    rbx
  42934a:	xor    eax,eax
  42934c:	pop    rbp
  42934d:	pop    r12
  42934f:	ret    
  429350:	lea    rcx,[rip+0x1ebc9]        # 447f20 <fb_schema_table_missing@@Base+0x32d0>
  429357:	lea    rsi,[rip+0x1e672]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  42935e:	lea    rdi,[rip+0x1e8e3]        # 447c48 <fb_schema_table_missing@@Base+0x2ff8>
  429365:	mov    edx,0x68d
  42936a:	call   4050f0 <__assert_fail@plt>
  42936f:	nop

0000000000429370 <flatcc_builder_append_union_vector@@Base>:
  429370:	push   r13
  429372:	push   r12
  429374:	push   rbp
  429375:	push   rbx
  429376:	sub    rsp,0x8
  42937a:	mov    rax,QWORD PTR [rdi+0x30]
  42937e:	cmp    WORD PTR [rax+0xe],0x7
  429383:	jne    4293fb <flatcc_builder_append_union_vector@@Base+0x8b>
  429385:	mov    r13,rsi
  429388:	mov    ecx,edx
  42938a:	xor    esi,esi
  42938c:	add    ecx,DWORD PTR [rax+0x14]
  42938f:	setb   sil
  429393:	test   esi,esi
  429395:	jne    4293f6 <flatcc_builder_append_union_vector@@Base+0x86>
  429397:	cmp    ecx,0x1fffffff
  42939d:	ja     4293f6 <flatcc_builder_append_union_vector@@Base+0x86>
  42939f:	mov    DWORD PTR [rax+0x14],ecx
  4293a2:	mov    r12d,DWORD PTR [rdi+0x20]
  4293a6:	lea    ebx,[rdx*8+0x0]
  4293ad:	mov    rbp,rdi
  4293b0:	mov    rdx,r12
  4293b3:	add    edx,ebx
  4293b5:	cmp    edx,DWORD PTR [rdi+0x24]
  4293b8:	mov    DWORD PTR [rdi+0x20],edx
  4293bb:	jae    4293e0 <flatcc_builder_append_union_vector@@Base+0x70>
  4293bd:	add    r12,QWORD PTR [rbp+0x18]
  4293c1:	je     4293d0 <flatcc_builder_append_union_vector@@Base+0x60>
  4293c3:	mov    edx,ebx
  4293c5:	mov    rsi,r13
  4293c8:	mov    rdi,r12
  4293cb:	call   405160 <memcpy@plt>
  4293d0:	add    rsp,0x8
  4293d4:	mov    rax,r12
  4293d7:	pop    rbx
  4293d8:	pop    rbp
  4293d9:	pop    r12
  4293db:	pop    r13
  4293dd:	ret    
  4293de:	xchg   ax,ax
  4293e0:	lea    esi,[rdx+0x1]
  4293e3:	mov    edx,0xfffffffc
  4293e8:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4293ed:	test   eax,eax
  4293ef:	je     4293bd <flatcc_builder_append_union_vector@@Base+0x4d>
  4293f1:	xor    r12d,r12d
  4293f4:	jmp    4293d0 <flatcc_builder_append_union_vector@@Base+0x60>
  4293f6:	call   405325 <__sprintf_chk@plt+0x115>
  4293fb:	lea    rcx,[rip+0x1eade]        # 447ee0 <fb_schema_table_missing@@Base+0x3290>
  429402:	lea    rsi,[rip+0x1e5c7]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429409:	lea    rdi,[rip+0x1e838]        # 447c48 <fb_schema_table_missing@@Base+0x2ff8>
  429410:	mov    edx,0x69c
  429415:	call   4050f0 <__assert_fail@plt>
  42941a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429420 <flatcc_builder_create_string@@Base>:
  429420:	push   rbp
  429421:	push   rbx
  429422:	sub    rsp,0xb8
  429429:	mov    rax,QWORD PTR fs:0x28
  429432:	mov    QWORD PTR [rsp+0xa8],rax
  42943a:	xor    eax,eax
  42943c:	mov    eax,0xffffffff
  429441:	cmp    rdx,rax
  429444:	ja     429510 <flatcc_builder_create_string@@Base+0xf0>
  42944a:	mov    rbx,rdi
  42944d:	mov    edi,DWORD PTR [rdi+0xf0]
  429453:	lea    rcx,[rsp+0xc]
  429458:	mov    DWORD PTR [rsp+0xc],edx
  42945c:	mov    QWORD PTR [rsp+0x28],0x4
  429465:	mov    QWORD PTR [rsp+0x20],rcx
  42946a:	lea    eax,[rdi-0x1]
  42946d:	sub    eax,edx
  42946f:	and    eax,0x3
  429472:	add    eax,0x1
  429475:	test   rdx,rdx
  429478:	jne    4294f0 <flatcc_builder_create_string@@Base+0xd0>
  42947a:	mov    edx,0x2
  42947f:	mov    ecx,0x1
  429484:	mov    r8d,0x4
  42948a:	add    r8,rax
  42948d:	mov    rsi,0x4484c0
  429494:	mov    ebp,edi
  429496:	sub    ebp,r8d
  429499:	shl    rcx,0x4
  42949d:	mov    QWORD PTR [rsp+0x10],r8
  4294a2:	cmp    edi,ebp
  4294a4:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  4294a9:	mov    DWORD PTR [rsp+0x18],edx
  4294ad:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  4294b2:	jle    429514 <flatcc_builder_create_string@@Base+0xf4>
  4294b4:	lea    rsi,[rsp+0x20]
  4294b9:	mov    rdi,QWORD PTR [rbx+0x38]
  4294bd:	mov    ecx,ebp
  4294bf:	call   QWORD PTR [rbx+0x48]
  4294c2:	test   eax,eax
  4294c4:	jne    429538 <flatcc_builder_create_string@@Base+0x118>
  4294c6:	mov    DWORD PTR [rbx+0xf0],ebp
  4294cc:	mov    rbx,QWORD PTR [rsp+0xa8]
  4294d4:	xor    rbx,QWORD PTR fs:0x28
  4294dd:	mov    eax,ebp
  4294df:	jne    429533 <flatcc_builder_create_string@@Base+0x113>
  4294e1:	add    rsp,0xb8
  4294e8:	pop    rbx
  4294e9:	pop    rbp
  4294ea:	ret    
  4294eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4294f0:	lea    r8,[rdx+0x4]
  4294f4:	mov    QWORD PTR [rsp+0x38],rdx
  4294f9:	mov    QWORD PTR [rsp+0x30],rsi
  4294fe:	mov    edx,0x3
  429503:	mov    ecx,0x2
  429508:	jmp    42948a <flatcc_builder_create_string@@Base+0x6a>
  42950d:	nop    DWORD PTR [rax]
  429510:	xor    ebp,ebp
  429512:	jmp    4294cc <flatcc_builder_create_string@@Base+0xac>
  429514:	lea    rcx,[rip+0x1eef5]        # 448410 <fb_schema_table_missing@@Base+0x37c0>
  42951b:	lea    rsi,[rip+0x1e4ae]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429522:	lea    rdi,[rip+0xc5e0]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  429529:	mov    edx,0x287
  42952e:	call   4050f0 <__assert_fail@plt>
  429533:	call   4050d0 <__stack_chk_fail@plt>
  429538:	call   405302 <__sprintf_chk@plt+0xf2>
  42953d:	nop    DWORD PTR [rax]

0000000000429540 <flatcc_builder_create_string_str@@Base>:
  429540:	push   rbp
  429541:	push   rbx
  429542:	mov    rbp,rdi
  429545:	mov    rdi,rsi
  429548:	mov    rbx,rsi
  42954b:	sub    rsp,0x8
  42954f:	call   4050c0 <strlen@plt>
  429554:	add    rsp,0x8
  429558:	mov    rsi,rbx
  42955b:	mov    rdi,rbp
  42955e:	pop    rbx
  42955f:	pop    rbp
  429560:	mov    rdx,rax
  429563:	jmp    429420 <flatcc_builder_create_string@@Base>
  429568:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429570 <flatcc_builder_create_string_strn@@Base>:
  429570:	push   r12
  429572:	push   rbp
  429573:	mov    rbp,rsi
  429576:	push   rbx
  429577:	mov    r12,rdi
  42957a:	xor    esi,esi
  42957c:	mov    rdi,rbp
  42957f:	mov    rbx,rdx
  429582:	call   405110 <memchr@plt>
  429587:	mov    rdx,rax
  42958a:	mov    rsi,rbp
  42958d:	mov    rdi,r12
  429590:	sub    rdx,rbp
  429593:	test   rax,rax
  429596:	cmovne rbx,rdx
  42959a:	mov    rdx,rbx
  42959d:	pop    rbx
  42959e:	pop    rbp
  42959f:	pop    r12
  4295a1:	jmp    429420 <flatcc_builder_create_string@@Base>
  4295a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004295b0 <flatcc_builder_end_string@@Base>:
  4295b0:	push   rbp
  4295b1:	push   rbx
  4295b2:	sub    rsp,0x8
  4295b6:	mov    rax,QWORD PTR [rdi+0x30]
  4295ba:	cmp    WORD PTR [rax+0xe],0x6
  4295bf:	jne    429686 <flatcc_builder_end_string@@Base+0xd6>
  4295c5:	mov    edx,DWORD PTR [rax+0x14]
  4295c8:	mov    rbx,rdi
  4295cb:	cmp    edx,DWORD PTR [rdi+0x20]
  4295ce:	jne    429667 <flatcc_builder_end_string@@Base+0xb7>
  4295d4:	mov    rsi,QWORD PTR [rdi+0x18]
  4295d8:	call   429420 <flatcc_builder_create_string@@Base>
  4295dd:	test   eax,eax
  4295df:	mov    ebp,eax
  4295e1:	jne    4295f0 <flatcc_builder_end_string@@Base+0x40>
  4295e3:	add    rsp,0x8
  4295e7:	mov    eax,ebp
  4295e9:	pop    rbx
  4295ea:	pop    rbp
  4295eb:	ret    
  4295ec:	nop    DWORD PTR [rax+0x0]
  4295f0:	mov    edx,DWORD PTR [rbx+0x20]
  4295f3:	mov    rdi,QWORD PTR [rbx+0x18]
  4295f7:	xor    esi,esi
  4295f9:	call   405100 <memset@plt>
  4295fe:	mov    rax,QWORD PTR [rbx+0x30]
  429602:	mov    edi,DWORD PTR [rbx+0x70]
  429605:	mov    esi,DWORD PTR [rax]
  429607:	mov    edx,DWORD PTR [rax+0x8]
  42960a:	mov    ecx,DWORD PTR [rax+0x4]
  42960d:	mov    DWORD PTR [rbx+0x20],edx
  429610:	mov    rdx,rsi
  429613:	mov    DWORD PTR [rbx+0x28],esi
  429616:	add    rsi,QWORD PTR [rbx+0x68]
  42961a:	sub    edi,edx
  42961c:	cmp    ecx,edi
  42961e:	mov    edx,edi
  429620:	cmovb  edx,ecx
  429623:	mov    DWORD PTR [rbx+0x24],edx
  429626:	movzx  edx,WORD PTR [rbx+0xea]
  42962d:	cmp    dx,WORD PTR [rbx+0xe8]
  429634:	mov    QWORD PTR [rbx+0x18],rsi
  429638:	mov    DWORD PTR [rax+0x4],ecx
  42963b:	jbe    429644 <flatcc_builder_end_string@@Base+0x94>
  42963d:	mov    WORD PTR [rbx+0xe8],dx
  429644:	movzx  edx,WORD PTR [rax+0xc]
  429648:	sub    rax,0x24
  42964c:	sub    DWORD PTR [rbx+0x104],0x1
  429653:	mov    QWORD PTR [rbx+0x30],rax
  429657:	mov    eax,ebp
  429659:	mov    WORD PTR [rbx+0xea],dx
  429660:	add    rsp,0x8
  429664:	pop    rbx
  429665:	pop    rbp
  429666:	ret    
  429667:	lea    rcx,[rip+0x1e852]        # 447ec0 <fb_schema_table_missing@@Base+0x3270>
  42966e:	lea    rsi,[rip+0x1e35b]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429675:	lea    rdi,[rip+0x1e604]        # 447c80 <fb_schema_table_missing@@Base+0x3030>
  42967c:	mov    edx,0x6c5
  429681:	call   4050f0 <__assert_fail@plt>
  429686:	lea    rcx,[rip+0x1e833]        # 447ec0 <fb_schema_table_missing@@Base+0x3270>
  42968d:	lea    rsi,[rip+0x1e33c]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429694:	lea    rdi,[rip+0x1e4bd]        # 447b58 <fb_schema_table_missing@@Base+0x2f08>
  42969b:	mov    edx,0x6c4
  4296a0:	call   4050f0 <__assert_fail@plt>
  4296a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004296b0 <flatcc_builder_string_edit@@Base>:
  4296b0:	mov    rax,QWORD PTR [rdi+0x18]
  4296b4:	ret    
  4296b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004296c0 <flatcc_builder_string_len@@Base>:
  4296c0:	mov    rax,QWORD PTR [rdi+0x30]
  4296c4:	mov    eax,DWORD PTR [rax+0x14]
  4296c7:	ret    
  4296c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004296d0 <flatcc_builder_table_add@@Base>:
  4296d0:	push   r13
  4296d2:	push   r12
  4296d4:	push   rbp
  4296d5:	push   rbx
  4296d6:	sub    rsp,0x8
  4296da:	mov    rax,QWORD PTR [rdi+0x30]
  4296de:	cmp    WORD PTR [rax+0xe],0x3
  4296e3:	jne    4297f2 <flatcc_builder_table_add@@Base+0x122>
  4296e9:	cmp    esi,0x7ffc
  4296ef:	mov    r12d,esi
  4296f2:	ja     4297d3 <flatcc_builder_table_add@@Base+0x103>
  4296f8:	cmp    WORD PTR [rdi+0xea],cx
  4296ff:	mov    rbx,rdi
  429702:	jb     429770 <flatcc_builder_table_add@@Base+0xa0>
  429704:	movsxd r13,r12d
  429707:	add    r13,r13
  42970a:	mov    rsi,r13
  42970d:	add    rsi,QWORD PTR [rbx+0x8]
  429711:	cmp    WORD PTR [rsi],0x0
  429715:	jne    4297b4 <flatcc_builder_table_add@@Base+0xe4>
  42971b:	mov    eax,DWORD PTR [rbx+0x14]
  42971e:	movzx  ecx,cx
  429721:	xor    eax,r12d
  429724:	imul   eax,eax,0x9e3779b1
  42972a:	xor    eax,edx
  42972c:	imul   eax,eax,0x9e3779b1
  429732:	mov    DWORD PTR [rbx+0x14],eax
  429735:	mov    eax,DWORD PTR [rbx+0x20]
  429738:	lea    ebp,[rcx+rax*1-0x1]
  42973c:	neg    ecx
  42973e:	and    ebp,ecx
  429740:	add    edx,ebp
  429742:	cmp    edx,DWORD PTR [rbx+0x24]
  429745:	mov    DWORD PTR [rbx+0x20],edx
  429748:	jae    429790 <flatcc_builder_table_add@@Base+0xc0>
  42974a:	lea    eax,[rbp+0x4]
  42974d:	mov    WORD PTR [rsi],ax
  429750:	cmp    r12w,WORD PTR [rbx+0x10]
  429755:	jae    429780 <flatcc_builder_table_add@@Base+0xb0>
  429757:	mov    eax,ebp
  429759:	add    rax,QWORD PTR [rbx+0x18]
  42975d:	add    rsp,0x8
  429761:	pop    rbx
  429762:	pop    rbp
  429763:	pop    r12
  429765:	pop    r13
  429767:	ret    
  429768:	nop    DWORD PTR [rax+rax*1+0x0]
  429770:	mov    WORD PTR [rdi+0xea],cx
  429777:	jmp    429704 <flatcc_builder_table_add@@Base+0x34>
  429779:	nop    DWORD PTR [rax+0x0]
  429780:	add    r12d,0x1
  429784:	mov    WORD PTR [rbx+0x10],r12w
  429789:	jmp    429757 <flatcc_builder_table_add@@Base+0x87>
  42978b:	nop    DWORD PTR [rax+rax*1+0x0]
  429790:	lea    esi,[rdx+0x1]
  429793:	mov    rdi,rbx
  429796:	mov    edx,0xfffc
  42979b:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4297a0:	test   eax,eax
  4297a2:	jne    4297b0 <flatcc_builder_table_add@@Base+0xe0>
  4297a4:	mov    rsi,r13
  4297a7:	add    rsi,QWORD PTR [rbx+0x8]
  4297ab:	jmp    42974a <flatcc_builder_table_add@@Base+0x7a>
  4297ad:	nop    DWORD PTR [rax]
  4297b0:	xor    eax,eax
  4297b2:	jmp    42975d <flatcc_builder_table_add@@Base+0x8d>
  4297b4:	lea    rcx,[rip+0x1e6e5]        # 447ea0 <fb_schema_table_missing@@Base+0x3250>
  4297bb:	lea    rsi,[rip+0x1e20e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4297c2:	lea    rdi,[rip+0xc340]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  4297c9:	mov    edx,0x6f8
  4297ce:	call   4050f0 <__assert_fail@plt>
  4297d3:	lea    rcx,[rip+0x1e6c6]        # 447ea0 <fb_schema_table_missing@@Base+0x3250>
  4297da:	lea    rsi,[rip+0x1e1ef]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4297e1:	lea    rdi,[rip+0x1e4c0]        # 447ca8 <fb_schema_table_missing@@Base+0x3058>
  4297e8:	mov    edx,0x6ee
  4297ed:	call   4050f0 <__assert_fail@plt>
  4297f2:	lea    rcx,[rip+0x1e6a7]        # 447ea0 <fb_schema_table_missing@@Base+0x3250>
  4297f9:	lea    rsi,[rip+0x1e1d0]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429800:	lea    rdi,[rip+0x1e411]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  429807:	mov    edx,0x6ed
  42980c:	call   4050f0 <__assert_fail@plt>
  429811:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42981c:	nop    DWORD PTR [rax+0x0]

0000000000429820 <flatcc_builder_table_edit@@Base>:
  429820:	mov    rax,QWORD PTR [rdi+0x30]
  429824:	cmp    WORD PTR [rax+0xe],0x3
  429829:	jne    429836 <flatcc_builder_table_edit@@Base+0x16>
  42982b:	mov    eax,DWORD PTR [rdi+0x20]
  42982e:	sub    rax,rsi
  429831:	add    rax,QWORD PTR [rdi+0x18]
  429835:	ret    
  429836:	lea    rcx,[rip+0x1e643]        # 447e80 <fb_schema_table_missing@@Base+0x3230>
  42983d:	lea    rsi,[rip+0x1e18c]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429844:	lea    rdi,[rip+0x1e3cd]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  42984b:	sub    rsp,0x8
  42984f:	mov    edx,0x702
  429854:	call   4050f0 <__assert_fail@plt>
  429859:	nop    DWORD PTR [rax+0x0]

0000000000429860 <flatcc_builder_table_add_copy@@Base>:
  429860:	push   rbp
  429861:	push   rbx
  429862:	mov    rbx,rcx
  429865:	mov    rbp,rdx
  429868:	movzx  ecx,r8w
  42986c:	mov    rdx,rbx
  42986f:	sub    rsp,0x8
  429873:	call   4296d0 <flatcc_builder_table_add@@Base>
  429878:	test   rax,rax
  42987b:	mov    rcx,rax
  42987e:	je     429891 <flatcc_builder_table_add_copy@@Base+0x31>
  429880:	mov    rdx,rbx
  429883:	mov    rsi,rbp
  429886:	mov    rdi,rax
  429889:	call   405160 <memcpy@plt>
  42988e:	mov    rcx,rax
  429891:	add    rsp,0x8
  429895:	mov    rax,rcx
  429898:	pop    rbx
  429899:	pop    rbp
  42989a:	ret    
  42989b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004298a0 <flatcc_builder_table_add_offset@@Base>:
  4298a0:	push   r13
  4298a2:	push   r12
  4298a4:	push   rbp
  4298a5:	push   rbx
  4298a6:	sub    rsp,0x8
  4298aa:	mov    rax,QWORD PTR [rdi+0x30]
  4298ae:	cmp    WORD PTR [rax+0xe],0x3
  4298b3:	jne    4299b2 <flatcc_builder_table_add_offset@@Base+0x112>
  4298b9:	cmp    esi,0x7ffc
  4298bf:	mov    r12d,esi
  4298c2:	ja     429993 <flatcc_builder_table_add_offset@@Base+0xf3>
  4298c8:	movsxd r13,esi
  4298cb:	mov    rbx,rdi
  4298ce:	add    r13,r13
  4298d1:	mov    rdx,r13
  4298d4:	add    rdx,QWORD PTR [rdi+0x8]
  4298d8:	cmp    WORD PTR [rdx],0x0
  4298dc:	jne    429974 <flatcc_builder_table_add_offset@@Base+0xd4>
  4298e2:	mov    eax,DWORD PTR [rdi+0x14]
  4298e5:	xor    eax,esi
  4298e7:	imul   eax,eax,0x9e3779b1
  4298ed:	xor    eax,0x4
  4298f0:	imul   eax,eax,0x9e3779b1
  4298f6:	mov    DWORD PTR [rdi+0x14],eax
  4298f9:	mov    eax,DWORD PTR [rdi+0x20]
  4298fc:	lea    ebp,[rax+0x3]
  4298ff:	and    ebp,0xfffffffc
  429902:	lea    esi,[rbp+0x4]
  429905:	cmp    esi,DWORD PTR [rdi+0x24]
  429908:	mov    DWORD PTR [rdi+0x20],esi
  42990b:	ja     429950 <flatcc_builder_table_add_offset@@Base+0xb0>
  42990d:	lea    eax,[rbp+0x4]
  429910:	mov    WORD PTR [rdx],ax
  429913:	cmp    r12w,WORD PTR [rbx+0x10]
  429918:	jae    429940 <flatcc_builder_table_add_offset@@Base+0xa0>
  42991a:	mov    rax,QWORD PTR [rbx]
  42991d:	lea    rdx,[rax+0x2]
  429921:	mov    QWORD PTR [rbx],rdx
  429924:	mov    WORD PTR [rax],bp
  429927:	mov    eax,ebp
  429929:	add    rax,QWORD PTR [rbx+0x18]
  42992d:	add    rsp,0x8
  429931:	pop    rbx
  429932:	pop    rbp
  429933:	pop    r12
  429935:	pop    r13
  429937:	ret    
  429938:	nop    DWORD PTR [rax+rax*1+0x0]
  429940:	lea    esi,[r12+0x1]
  429945:	mov    WORD PTR [rbx+0x10],si
  429949:	jmp    42991a <flatcc_builder_table_add_offset@@Base+0x7a>
  42994b:	nop    DWORD PTR [rax+rax*1+0x0]
  429950:	mov    edx,0xfffc
  429955:	call   4260d0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42995a:	test   eax,eax
  42995c:	jne    429970 <flatcc_builder_table_add_offset@@Base+0xd0>
  42995e:	mov    rdx,r13
  429961:	add    rdx,QWORD PTR [rbx+0x8]
  429965:	jmp    42990d <flatcc_builder_table_add_offset@@Base+0x6d>
  429967:	nop    WORD PTR [rax+rax*1+0x0]
  429970:	xor    eax,eax
  429972:	jmp    42992d <flatcc_builder_table_add_offset@@Base+0x8d>
  429974:	lea    rcx,[rip+0x1e4e5]        # 447e60 <fb_schema_table_missing@@Base+0x3210>
  42997b:	lea    rsi,[rip+0x1e04e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429982:	lea    rdi,[rip+0xc180]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  429989:	mov    edx,0x71b
  42998e:	call   4050f0 <__assert_fail@plt>
  429993:	lea    rcx,[rip+0x1e4c6]        # 447e60 <fb_schema_table_missing@@Base+0x3210>
  42999a:	lea    rsi,[rip+0x1e02f]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4299a1:	lea    rdi,[rip+0x1e300]        # 447ca8 <fb_schema_table_missing@@Base+0x3058>
  4299a8:	mov    edx,0x714
  4299ad:	call   4050f0 <__assert_fail@plt>
  4299b2:	lea    rcx,[rip+0x1e4a7]        # 447e60 <fb_schema_table_missing@@Base+0x3210>
  4299b9:	lea    rsi,[rip+0x1e010]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  4299c0:	lea    rdi,[rip+0x1e251]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  4299c7:	mov    edx,0x713
  4299cc:	call   4050f0 <__assert_fail@plt>
  4299d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4299dc:	nop    DWORD PTR [rax+0x0]

00000000004299e0 <flatcc_builder_table_add_union@@Base>:
  4299e0:	push   r13
  4299e2:	push   r12
  4299e4:	mov    r13,rdx
  4299e7:	push   rbp
  4299e8:	push   rbx
  4299e9:	sar    r13,0x20
  4299ed:	sub    rsp,0x8
  4299f1:	mov    rax,QWORD PTR [rdi+0x30]
  4299f5:	cmp    WORD PTR [rax+0xe],0x3
  4299fa:	jne    429a74 <flatcc_builder_table_add_union@@Base+0x94>
  4299fc:	test   dl,dl
  4299fe:	mov    r12,rdi
  429a01:	mov    ebx,esi
  429a03:	mov    rbp,rdx
  429a06:	je     429a50 <flatcc_builder_table_add_union@@Base+0x70>
  429a08:	test   r13d,r13d
  429a0b:	je     429a1e <flatcc_builder_table_add_union@@Base+0x3e>
  429a0d:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  429a12:	test   rax,rax
  429a15:	je     429ab2 <flatcc_builder_table_add_union@@Base+0xd2>
  429a1b:	mov    DWORD PTR [rax],r13d
  429a1e:	lea    esi,[rbx-0x1]
  429a21:	mov    ecx,0x1
  429a26:	mov    edx,0x1
  429a2b:	mov    rdi,r12
  429a2e:	call   4296d0 <flatcc_builder_table_add@@Base>
  429a33:	test   rax,rax
  429a36:	je     429a93 <flatcc_builder_table_add_union@@Base+0xb3>
  429a38:	mov    BYTE PTR [rax],bpl
  429a3b:	add    rsp,0x8
  429a3f:	xor    eax,eax
  429a41:	pop    rbx
  429a42:	pop    rbp
  429a43:	pop    r12
  429a45:	pop    r13
  429a47:	ret    
  429a48:	nop    DWORD PTR [rax+rax*1+0x0]
  429a50:	test   r13d,r13d
  429a53:	je     429a1e <flatcc_builder_table_add_union@@Base+0x3e>
  429a55:	lea    rcx,[rip+0x1e594]        # 447ff0 <fb_schema_table_missing@@Base+0x33a0>
  429a5c:	lea    rsi,[rip+0x1df6d]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429a63:	lea    rdi,[rip+0x1e286]        # 447cf0 <fb_schema_table_missing@@Base+0x30a0>
  429a6a:	mov    edx,0x5ef
  429a6f:	call   4050f0 <__assert_fail@plt>
  429a74:	lea    rcx,[rip+0x1e575]        # 447ff0 <fb_schema_table_missing@@Base+0x33a0>
  429a7b:	lea    rsi,[rip+0x1df4e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429a82:	lea    rdi,[rip+0x1e18f]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  429a89:	mov    edx,0x5ee
  429a8e:	call   4050f0 <__assert_fail@plt>
  429a93:	lea    rcx,[rip+0x1e556]        # 447ff0 <fb_schema_table_missing@@Base+0x33a0>
  429a9a:	lea    rsi,[rip+0x1df2f]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429aa1:	lea    rdi,[rip+0x1e34e]        # 447df6 <fb_schema_table_missing@@Base+0x31a6>
  429aa8:	mov    edx,0x5f6
  429aad:	call   4050f0 <__assert_fail@plt>
  429ab2:	lea    rcx,[rip+0x1e537]        # 447ff0 <fb_schema_table_missing@@Base+0x33a0>
  429ab9:	lea    rsi,[rip+0x1df10]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429ac0:	lea    rdi,[rip+0x1e325]        # 447dec <fb_schema_table_missing@@Base+0x319c>
  429ac7:	mov    edx,0x5f2
  429acc:	call   4050f0 <__assert_fail@plt>
  429ad1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429adc:	nop    DWORD PTR [rax+0x0]

0000000000429ae0 <flatcc_builder_table_add_union_vector@@Base>:
  429ae0:	push   r13
  429ae2:	push   r12
  429ae4:	push   rbp
  429ae5:	push   rbx
  429ae6:	mov    rbp,rdx
  429ae9:	sar    rbp,0x20
  429aed:	sub    rsp,0x18
  429af1:	mov    rax,QWORD PTR [rdi+0x30]
  429af5:	cmp    WORD PTR [rax+0xe],0x3
  429afa:	jne    429b76 <flatcc_builder_table_add_union_vector@@Base+0x96>
  429afc:	test   ebp,ebp
  429afe:	sete   al
  429b01:	test   edx,edx
  429b03:	sete   cl
  429b06:	cmp    cl,al
  429b08:	je     429b30 <flatcc_builder_table_add_union_vector@@Base+0x50>
  429b0a:	test   edx,edx
  429b0c:	setne  dl
  429b0f:	cmp    al,dl
  429b11:	je     429b95 <flatcc_builder_table_add_union_vector@@Base+0xb5>
  429b17:	mov    r12d,0xffffffff
  429b1d:	add    rsp,0x18
  429b21:	mov    eax,r12d
  429b24:	pop    rbx
  429b25:	pop    rbp
  429b26:	pop    r12
  429b28:	pop    r13
  429b2a:	ret    
  429b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  429b30:	xor    r12d,r12d
  429b33:	test   edx,edx
  429b35:	je     429b1d <flatcc_builder_table_add_union_vector@@Base+0x3d>
  429b37:	mov    r13d,esi
  429b3a:	lea    esi,[rsi-0x1]
  429b3d:	mov    QWORD PTR [rsp+0x8],rdx
  429b42:	mov    rbx,rdi
  429b45:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  429b4a:	test   rax,rax
  429b4d:	mov    rdx,QWORD PTR [rsp+0x8]
  429b52:	je     429bd3 <flatcc_builder_table_add_union_vector@@Base+0xf3>
  429b54:	mov    DWORD PTR [rax],edx
  429b56:	mov    esi,r13d
  429b59:	mov    rdi,rbx
  429b5c:	call   4298a0 <flatcc_builder_table_add_offset@@Base>
  429b61:	test   rax,rax
  429b64:	je     429bb4 <flatcc_builder_table_add_union_vector@@Base+0xd4>
  429b66:	mov    DWORD PTR [rax],ebp
  429b68:	add    rsp,0x18
  429b6c:	mov    eax,r12d
  429b6f:	pop    rbx
  429b70:	pop    rbp
  429b71:	pop    r12
  429b73:	pop    r13
  429b75:	ret    
  429b76:	lea    rcx,[rip+0x1e443]        # 447fc0 <fb_schema_table_missing@@Base+0x3370>
  429b7d:	lea    rsi,[rip+0x1de4c]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429b84:	lea    rdi,[rip+0x1e08d]        # 447c18 <fb_schema_table_missing@@Base+0x2fc8>
  429b8b:	mov    edx,0x600
  429b90:	call   4050f0 <__assert_fail@plt>
  429b95:	lea    rcx,[rip+0x1e424]        # 447fc0 <fb_schema_table_missing@@Base+0x3370>
  429b9c:	lea    rsi,[rip+0x1de2d]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429ba3:	lea    rdi,[rip+0x1e16e]        # 447d18 <fb_schema_table_missing@@Base+0x30c8>
  429baa:	mov    edx,0x601
  429baf:	call   4050f0 <__assert_fail@plt>
  429bb4:	lea    rcx,[rip+0x1e405]        # 447fc0 <fb_schema_table_missing@@Base+0x3370>
  429bbb:	lea    rsi,[rip+0x1de0e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429bc2:	lea    rdi,[rip+0x1e223]        # 447dec <fb_schema_table_missing@@Base+0x319c>
  429bc9:	mov    edx,0x608
  429bce:	call   4050f0 <__assert_fail@plt>
  429bd3:	lea    rcx,[rip+0x1e3e6]        # 447fc0 <fb_schema_table_missing@@Base+0x3370>
  429bda:	lea    rsi,[rip+0x1ddef]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429be1:	lea    rdi,[rip+0x1e204]        # 447dec <fb_schema_table_missing@@Base+0x319c>
  429be8:	mov    edx,0x604
  429bed:	call   4050f0 <__assert_fail@plt>
  429bf2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429bfd:	nop    DWORD PTR [rax]

0000000000429c00 <flatcc_builder_push_buffer_alignment@@Base>:
  429c00:	mov    edx,0x4
  429c05:	movzx  eax,WORD PTR [rdi+0xe8]
  429c0c:	mov    WORD PTR [rdi+0xe8],dx
  429c13:	ret    
  429c14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429c1f:	nop

0000000000429c20 <flatcc_builder_pop_buffer_alignment@@Base>:
  429c20:	cmp    si,WORD PTR [rdi+0xe8]
  429c27:	jbe    429c30 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  429c29:	mov    WORD PTR [rdi+0xe8],si
  429c30:	repz ret 
  429c32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429c3d:	nop    DWORD PTR [rax]

0000000000429c40 <flatcc_builder_get_buffer_alignment@@Base>:
  429c40:	movzx  eax,WORD PTR [rdi+0xe8]
  429c47:	ret    
  429c48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429c50 <flatcc_builder_set_vtable_clustering@@Base>:
  429c50:	xor    eax,eax
  429c52:	test   esi,esi
  429c54:	sete   al
  429c57:	mov    DWORD PTR [rdi+0x124],eax
  429c5d:	ret    
  429c5e:	xchg   ax,ax

0000000000429c60 <flatcc_builder_set_block_align@@Base>:
  429c60:	mov    WORD PTR [rdi+0xec],si
  429c67:	ret    
  429c68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429c70 <flatcc_builder_get_level@@Base>:
  429c70:	mov    eax,DWORD PTR [rdi+0x104]
  429c76:	ret    
  429c77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429c80 <flatcc_builder_set_max_level@@Base>:
  429c80:	cmp    esi,DWORD PTR [rdi+0x108]
  429c86:	mov    DWORD PTR [rdi+0x120],esi
  429c8c:	jle    429c94 <flatcc_builder_set_max_level@@Base+0x14>
  429c8e:	mov    DWORD PTR [rdi+0x108],esi
  429c94:	repz ret 
  429c96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429ca0 <flatcc_builder_get_buffer_size@@Base>:
  429ca0:	mov    eax,DWORD PTR [rdi+0xf4]
  429ca6:	sub    eax,DWORD PTR [rdi+0xf0]
  429cac:	cdqe   
  429cae:	ret    
  429caf:	nop

0000000000429cb0 <flatcc_builder_get_buffer_start@@Base>:
  429cb0:	mov    eax,DWORD PTR [rdi+0xf0]
  429cb6:	ret    
  429cb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429cc0 <flatcc_builder_get_buffer_end@@Base>:
  429cc0:	mov    eax,DWORD PTR [rdi+0xf4]
  429cc6:	ret    
  429cc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429cd0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  429cd0:	mov    QWORD PTR [rdi+0x118],rsi
  429cd7:	ret    
  429cd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429ce0 <flatcc_builder_set_identifier@@Base>:
  429ce0:	test   rsi,rsi
  429ce3:	je     429cf0 <flatcc_builder_set_identifier@@Base+0x10>
  429ce5:	mov    eax,DWORD PTR [rsi]
  429ce7:	mov    DWORD PTR [rdi+0x110],eax
  429ced:	ret    
  429cee:	xchg   ax,ax
  429cf0:	mov    rsi,0x4484c0
  429cf7:	mov    eax,DWORD PTR [rsi]
  429cf9:	mov    DWORD PTR [rdi+0x110],eax
  429cff:	ret    

0000000000429d00 <flatcc_builder_get_type@@Base>:
  429d00:	mov    rax,QWORD PTR [rdi+0x30]
  429d04:	test   rax,rax
  429d07:	je     429d10 <flatcc_builder_get_type@@Base+0x10>
  429d09:	movzx  eax,WORD PTR [rax+0xe]
  429d0d:	ret    
  429d0e:	xchg   ax,ax
  429d10:	xor    eax,eax
  429d12:	ret    
  429d13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429d1e:	xchg   ax,ax

0000000000429d20 <flatcc_builder_get_type_at@@Base>:
  429d20:	test   esi,esi
  429d22:	jle    429d50 <flatcc_builder_get_type_at@@Base+0x30>
  429d24:	mov    edx,DWORD PTR [rdi+0x104]
  429d2a:	xor    eax,eax
  429d2c:	cmp    esi,edx
  429d2e:	jg     429d52 <flatcc_builder_get_type_at@@Base+0x32>
  429d30:	sub    esi,edx
  429d32:	mov    rdx,QWORD PTR [rdi+0x30]
  429d36:	movsxd rsi,esi
  429d39:	lea    rax,[rsi+rsi*8]
  429d3d:	lea    rax,[rdx+rax*4]
  429d41:	movzx  eax,WORD PTR [rax+0xe]
  429d45:	ret    
  429d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d50:	xor    eax,eax
  429d52:	repz ret 
  429d54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429d5f:	nop

0000000000429d60 <flatcc_builder_get_direct_buffer@@Base>:
  429d60:	mov    eax,DWORD PTR [rdi+0x128]
  429d66:	test   eax,eax
  429d68:	je     429d7a <flatcc_builder_get_direct_buffer@@Base+0x1a>
  429d6a:	mov    rax,QWORD PTR [rdi+0x138]
  429d71:	cmp    QWORD PTR [rdi+0x130],rax
  429d78:	je     429d90 <flatcc_builder_get_direct_buffer@@Base+0x30>
  429d7a:	test   rsi,rsi
  429d7d:	jne    429d82 <flatcc_builder_get_direct_buffer@@Base+0x22>
  429d7f:	xor    eax,eax
  429d81:	ret    
  429d82:	mov    QWORD PTR [rsi],0x0
  429d89:	xor    eax,eax
  429d8b:	ret    
  429d8c:	nop    DWORD PTR [rax+0x0]
  429d90:	test   rsi,rsi
  429d93:	je     429d9f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  429d95:	mov    rax,QWORD PTR [rdi+0x160]
  429d9c:	mov    QWORD PTR [rsi],rax
  429d9f:	mov    rax,QWORD PTR [rdi+0x140]
  429da6:	ret    
  429da7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429db0 <flatcc_builder_copy_buffer@@Base>:
  429db0:	mov    eax,DWORD PTR [rdi+0x128]
  429db6:	test   eax,eax
  429db8:	je     429dd8 <flatcc_builder_copy_buffer@@Base+0x28>
  429dba:	sub    rsp,0x8
  429dbe:	add    rdi,0x130
  429dc5:	call   42a5b0 <flatcc_emitter_copy_buffer@@Base>
  429dca:	test   rax,rax
  429dcd:	je     429ddb <flatcc_builder_copy_buffer@@Base+0x2b>
  429dcf:	add    rsp,0x8
  429dd3:	ret    
  429dd4:	nop    DWORD PTR [rax+0x0]
  429dd8:	xor    eax,eax
  429dda:	ret    
  429ddb:	lea    rcx,[rip+0x1e05e]        # 447e40 <fb_schema_table_missing@@Base+0x31f0>
  429de2:	lea    rsi,[rip+0x1dbe7]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429de9:	lea    rdi,[rip+0x1d48a]        # 44727a <fb_schema_table_missing@@Base+0x262a>
  429df0:	mov    edx,0x786
  429df5:	call   4050f0 <__assert_fail@plt>
  429dfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429e00 <flatcc_builder_finalize_buffer@@Base>:
  429e00:	push   r12
  429e02:	push   rbp
  429e03:	mov    r12,rdi
  429e06:	push   rbx
  429e07:	mov    rbx,rsi
  429e0a:	call   429ca0 <flatcc_builder_get_buffer_size@@Base>
  429e0f:	test   rbx,rbx
  429e12:	mov    rbp,rax
  429e15:	je     429e1a <flatcc_builder_finalize_buffer@@Base+0x1a>
  429e17:	mov    QWORD PTR [rbx],rax
  429e1a:	mov    rdi,rbp
  429e1d:	call   405170 <malloc@plt>
  429e22:	test   rax,rax
  429e25:	mov    rbx,rax
  429e28:	je     429e45 <flatcc_builder_finalize_buffer@@Base+0x45>
  429e2a:	mov    rdx,rbp
  429e2d:	mov    rsi,rax
  429e30:	mov    rdi,r12
  429e33:	call   429db0 <flatcc_builder_copy_buffer@@Base>
  429e38:	test   rax,rax
  429e3b:	je     429e64 <flatcc_builder_finalize_buffer@@Base+0x64>
  429e3d:	mov    rax,rbx
  429e40:	pop    rbx
  429e41:	pop    rbp
  429e42:	pop    r12
  429e44:	ret    
  429e45:	lea    rcx,[rip+0x1dfd4]        # 447e20 <fb_schema_table_missing@@Base+0x31d0>
  429e4c:	lea    rsi,[rip+0x1db7d]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429e53:	lea    rdi,[rip+0xbcaf]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  429e5a:	mov    edx,0x798
  429e5f:	call   4050f0 <__assert_fail@plt>
  429e64:	lea    rcx,[rip+0x1dfb5]        # 447e20 <fb_schema_table_missing@@Base+0x31d0>
  429e6b:	lea    rsi,[rip+0x1db5e]        # 4479d0 <fb_schema_table_missing@@Base+0x2d80>
  429e72:	lea    rdi,[rip+0xbc90]        # 435b09 <_IO_stdin_used@@Base+0x9b09>
  429e79:	mov    edx,0x79c
  429e7e:	call   4050f0 <__assert_fail@plt>
  429e83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429e8e:	xchg   ax,ax

0000000000429e90 <flatcc_builder_finalize_aligned_buffer@@Base>:
  429e90:	push   r13
  429e92:	push   r12
  429e94:	mov    r12,rdi
  429e97:	push   rbp
  429e98:	push   rbx
  429e99:	mov    rbp,rsi
  429e9c:	sub    rsp,0x18
  429ea0:	mov    rax,QWORD PTR fs:0x28
  429ea9:	mov    QWORD PTR [rsp+0x8],rax
  429eae:	xor    eax,eax
  429eb0:	call   429ca0 <flatcc_builder_get_buffer_size@@Base>
  429eb5:	test   rbp,rbp
  429eb8:	mov    rbx,rax
  429ebb:	je     429ec1 <flatcc_builder_finalize_aligned_buffer@@Base+0x31>
  429ebd:	mov    QWORD PTR [rbp+0x0],rax
  429ec1:	mov    rdi,r12
  429ec4:	call   429c40 <flatcc_builder_get_buffer_alignment@@Base>
  429ec9:	movzx  eax,ax
  429ecc:	mov    esi,0x8
  429ed1:	mov    rdi,rsp
  429ed4:	lea    rdx,[rbx+rax*1-0x1]
  429ed9:	mov    rbx,rax
  429edc:	mov    QWORD PTR [rsp],0x0
  429ee4:	neg    rbx
  429ee7:	and    rbx,rdx
  429eea:	cmp    rax,0x8
  429eee:	cmovae rsi,rax
  429ef2:	mov    rdx,rbx
  429ef5:	call   405200 <posix_memalign@plt>
  429efa:	test   eax,eax
  429efc:	je     429f40 <flatcc_builder_finalize_aligned_buffer@@Base+0xb0>
  429efe:	mov    rdi,QWORD PTR [rsp]
  429f02:	test   rdi,rdi
  429f05:	je     429f0c <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  429f07:	call   405040 <free@plt>
  429f0c:	test   rbp,rbp
  429f0f:	je     429f66 <flatcc_builder_finalize_aligned_buffer@@Base+0xd6>
  429f11:	mov    QWORD PTR [rbp+0x0],0x0
  429f19:	xor    r13d,r13d
  429f1c:	mov    rcx,QWORD PTR [rsp+0x8]
  429f21:	xor    rcx,QWORD PTR fs:0x28
  429f2a:	mov    rax,r13
  429f2d:	jne    429f61 <flatcc_builder_finalize_aligned_buffer@@Base+0xd1>
  429f2f:	add    rsp,0x18
  429f33:	pop    rbx
  429f34:	pop    rbp
  429f35:	pop    r12
  429f37:	pop    r13
  429f39:	ret    
  429f3a:	nop    WORD PTR [rax+rax*1+0x0]
  429f40:	mov    r13,QWORD PTR [rsp]
  429f44:	test   r13,r13
  429f47:	je     429f0c <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  429f49:	mov    rdx,rbx
  429f4c:	mov    rsi,r13
  429f4f:	mov    rdi,r12
  429f52:	call   429db0 <flatcc_builder_copy_buffer@@Base>
  429f57:	test   rax,rax
  429f5a:	jne    429f1c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  429f5c:	mov    rdi,r13
  429f5f:	jmp    429f07 <flatcc_builder_finalize_aligned_buffer@@Base+0x77>
  429f61:	call   4050d0 <__stack_chk_fail@plt>
  429f66:	xor    r13d,r13d
  429f69:	jmp    429f1c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  429f6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429f70 <flatcc_builder_aligned_alloc@@Base>:
  429f70:	sub    rsp,0x18
  429f74:	mov    rdx,rsi
  429f77:	mov    esi,0x8
  429f7c:	mov    rax,QWORD PTR fs:0x28
  429f85:	mov    QWORD PTR [rsp+0x8],rax
  429f8a:	xor    eax,eax
  429f8c:	cmp    rdi,0x8
  429f90:	mov    QWORD PTR [rsp],0x0
  429f98:	cmovae rsi,rdi
  429f9c:	mov    rdi,rsp
  429f9f:	call   405200 <posix_memalign@plt>
  429fa4:	test   eax,eax
  429fa6:	mov    rax,QWORD PTR [rsp]
  429faa:	je     429fbb <flatcc_builder_aligned_alloc@@Base+0x4b>
  429fac:	test   rax,rax
  429faf:	je     429fbb <flatcc_builder_aligned_alloc@@Base+0x4b>
  429fb1:	mov    rdi,rax
  429fb4:	call   405040 <free@plt>
  429fb9:	xor    eax,eax
  429fbb:	mov    rcx,QWORD PTR [rsp+0x8]
  429fc0:	xor    rcx,QWORD PTR fs:0x28
  429fc9:	jne    429fd0 <flatcc_builder_aligned_alloc@@Base+0x60>
  429fcb:	add    rsp,0x18
  429fcf:	ret    
  429fd0:	call   4050d0 <__stack_chk_fail@plt>
  429fd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429fe0 <flatcc_builder_aligned_free@@Base>:
  429fe0:	jmp    405040 <free@plt>
  429fe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429ff0 <flatcc_builder_get_emit_context@@Base>:
  429ff0:	mov    rax,QWORD PTR [rdi+0x38]
  429ff4:	ret    
  429ff5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429fff:	nop

000000000042a000 <flatcc_emitter_recycle_page@@Base>:
  42a000:	mov    rax,QWORD PTR [rdi]
  42a003:	cmp    rax,rsi
  42a006:	je     42a060 <flatcc_emitter_recycle_page@@Base+0x60>
  42a008:	cmp    rsi,QWORD PTR [rdi+0x8]
  42a00c:	je     42a060 <flatcc_emitter_recycle_page@@Base+0x60>
  42a00e:	mov    rdx,QWORD PTR [rsi+0xb80]
  42a015:	mov    rcx,QWORD PTR [rsi+0xb88]
  42a01c:	mov    QWORD PTR [rdx+0xb88],rcx
  42a023:	mov    rcx,QWORD PTR [rsi+0xb88]
  42a02a:	mov    QWORD PTR [rcx+0xb80],rdx
  42a031:	mov    rdx,QWORD PTR [rax+0xb88]
  42a038:	mov    QWORD PTR [rsi+0xb80],rax
  42a03f:	mov    QWORD PTR [rsi+0xb88],rdx
  42a046:	mov    QWORD PTR [rdx+0xb80],rsi
  42a04d:	mov    rax,QWORD PTR [rsi+0xb80]
  42a054:	mov    QWORD PTR [rax+0xb88],rsi
  42a05b:	xor    eax,eax
  42a05d:	ret    
  42a05e:	xchg   ax,ax
  42a060:	mov    eax,0xffffffff
  42a065:	ret    
  42a066:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a070 <flatcc_emitter_reset@@Base>:
  42a070:	mov    rax,QWORD PTR [rdi]
  42a073:	test   rax,rax
  42a076:	je     42a13d <flatcc_emitter_reset@@Base+0xcd>
  42a07c:	lea    rdx,[rax+0x5c0]
  42a083:	mov    QWORD PTR [rdi+0x8],rax
  42a087:	mov    QWORD PTR [rdi+0x18],0x5c0
  42a08f:	mov    QWORD PTR [rdi+0x28],0x5c0
  42a097:	mov    rcx,QWORD PTR [rdi+0x30]
  42a09b:	mov    QWORD PTR [rdi+0x10],rdx
  42a09f:	mov    QWORD PTR [rdi+0x20],rdx
  42a0a3:	mov    rdx,QWORD PTR [rdi+0x40]
  42a0a7:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42a0b1:	test   rdx,rdx
  42a0b4:	je     42a140 <flatcc_emitter_reset@@Base+0xd0>
  42a0ba:	lea    rdx,[rdx+rdx*2]
  42a0be:	shr    rcx,0x2
  42a0c2:	mov    QWORD PTR [rdi+0x30],0x0
  42a0ca:	shr    rdx,0x2
  42a0ce:	add    rdx,rcx
  42a0d1:	mov    QWORD PTR [rdi+0x40],rdx
  42a0d5:	add    rdx,rdx
  42a0d8:	cmp    QWORD PTR [rdi+0x38],rdx
  42a0dc:	jbe    42a13d <flatcc_emitter_reset@@Base+0xcd>
  42a0de:	push   rbx
  42a0df:	mov    rbx,rdi
  42a0e2:	mov    rdi,QWORD PTR [rax+0xb80]
  42a0e9:	cmp    rax,rdi
  42a0ec:	jne    42a100 <flatcc_emitter_reset@@Base+0x90>
  42a0ee:	jmp    42a13c <flatcc_emitter_reset@@Base+0xcc>
  42a0f0:	mov    rax,QWORD PTR [rbx+0x8]
  42a0f4:	mov    rdi,QWORD PTR [rax+0xb80]
  42a0fb:	cmp    rdi,QWORD PTR [rbx]
  42a0fe:	je     42a13c <flatcc_emitter_reset@@Base+0xcc>
  42a100:	mov    rdx,QWORD PTR [rdi+0xb80]
  42a107:	mov    QWORD PTR [rax+0xb80],rdx
  42a10e:	mov    rdx,QWORD PTR [rdi+0xb80]
  42a115:	mov    QWORD PTR [rdx+0xb88],rax
  42a11c:	call   405040 <free@plt>
  42a121:	mov    rsi,QWORD PTR [rbx+0x40]
  42a125:	mov    rax,QWORD PTR [rbx+0x38]
  42a129:	lea    rdx,[rsi+rsi*1]
  42a12d:	sub    rax,0xb80
  42a133:	mov    QWORD PTR [rbx+0x38],rax
  42a137:	cmp    rdx,rax
  42a13a:	jb     42a0f0 <flatcc_emitter_reset@@Base+0x80>
  42a13c:	pop    rbx
  42a13d:	repz ret 
  42a13f:	nop
  42a140:	mov    rdx,rcx
  42a143:	jmp    42a0ba <flatcc_emitter_reset@@Base+0x4a>
  42a148:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a150 <flatcc_emitter_clear@@Base>:
  42a150:	mov    rax,QWORD PTR [rdi]
  42a153:	test   rax,rax
  42a156:	je     42a1d7 <flatcc_emitter_clear@@Base+0x87>
  42a158:	push   rbp
  42a159:	push   rbx
  42a15a:	mov    rbp,rdi
  42a15d:	sub    rsp,0x8
  42a161:	mov    rdx,QWORD PTR [rax+0xb88]
  42a168:	mov    QWORD PTR [rdx+0xb80],0x0
  42a173:	mov    rbx,QWORD PTR [rax+0xb80]
  42a17a:	test   rbx,rbx
  42a17d:	jne    42a18b <flatcc_emitter_clear@@Base+0x3b>
  42a17f:	jmp    42a1d9 <flatcc_emitter_clear@@Base+0x89>
  42a181:	nop    DWORD PTR [rax+0x0]
  42a188:	mov    rbx,rax
  42a18b:	mov    rdi,QWORD PTR [rbx+0xb88]
  42a192:	call   405040 <free@plt>
  42a197:	mov    rax,QWORD PTR [rbx+0xb80]
  42a19e:	test   rax,rax
  42a1a1:	jne    42a188 <flatcc_emitter_clear@@Base+0x38>
  42a1a3:	mov    rdi,rbx
  42a1a6:	call   405040 <free@plt>
  42a1ab:	lea    rdi,[rbp+0x8]
  42a1af:	mov    QWORD PTR [rbp+0x0],0x0
  42a1b7:	mov    QWORD PTR [rbp+0x40],0x0
  42a1bf:	xor    eax,eax
  42a1c1:	and    rdi,0xfffffffffffffff8
  42a1c5:	sub    rbp,rdi
  42a1c8:	lea    ecx,[rbp+0x48]
  42a1cb:	shr    ecx,0x3
  42a1ce:	rep stos QWORD PTR es:[rdi],rax
  42a1d1:	add    rsp,0x8
  42a1d5:	pop    rbx
  42a1d6:	pop    rbp
  42a1d7:	repz ret 
  42a1d9:	mov    rbx,rax
  42a1dc:	jmp    42a1a3 <flatcc_emitter_clear@@Base+0x53>
  42a1de:	xchg   ax,ax

000000000042a1e0 <flatcc_emitter@@Base>:
  42a1e0:	push   r15
  42a1e2:	push   r14
  42a1e4:	mov    r14,rsi
  42a1e7:	push   r13
  42a1e9:	push   r12
  42a1eb:	push   rbp
  42a1ec:	push   rbx
  42a1ed:	mov    rbx,rdi
  42a1f0:	sub    rsp,0x18
  42a1f4:	add    QWORD PTR [rdi+0x30],r8
  42a1f8:	test   ecx,ecx
  42a1fa:	js     42a3ee <flatcc_emitter@@Base+0x20e>
  42a200:	mov    rax,QWORD PTR [rdi+0x28]
  42a204:	cmp    r8,rax
  42a207:	jbe    42a294 <flatcc_emitter@@Base+0xb4>
  42a20d:	test   edx,edx
  42a20f:	je     42a283 <flatcc_emitter@@Base+0xa3>
  42a211:	lea    r15d,[rdx-0x1]
  42a215:	add    r15,0x1
  42a219:	shl    r15,0x4
  42a21d:	lea    rax,[rsi+r15*1]
  42a221:	mov    QWORD PTR [rsp+0x8],rax
  42a226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a230:	mov    r12,QWORD PTR [r14+0x8]
  42a234:	mov    r13,QWORD PTR [r14]
  42a237:	test   r12,r12
  42a23a:	je     42a278 <flatcc_emitter@@Base+0x98>
  42a23c:	nop    DWORD PTR [rax+0x0]
  42a240:	mov    rbp,QWORD PTR [rbx+0x28]
  42a244:	cmp    rbp,r12
  42a247:	jae    42a2e8 <flatcc_emitter@@Base+0x108>
  42a24d:	test   rbp,rbp
  42a250:	je     42a2f8 <flatcc_emitter@@Base+0x118>
  42a256:	sub    r12,rbp
  42a259:	mov    rdi,QWORD PTR [rbx+0x20]
  42a25d:	mov    rsi,r13
  42a260:	mov    rdx,rbp
  42a263:	add    r13,rbp
  42a266:	call   405160 <memcpy@plt>
  42a26b:	add    QWORD PTR [rbx+0x20],rbp
  42a26f:	sub    QWORD PTR [rbx+0x28],rbp
  42a273:	test   r12,r12
  42a276:	jne    42a240 <flatcc_emitter@@Base+0x60>
  42a278:	add    r14,0x10
  42a27c:	cmp    r14,QWORD PTR [rsp+0x8]
  42a281:	jne    42a230 <flatcc_emitter@@Base+0x50>
  42a283:	add    rsp,0x18
  42a287:	xor    eax,eax
  42a289:	pop    rbx
  42a28a:	pop    rbp
  42a28b:	pop    r12
  42a28d:	pop    r13
  42a28f:	pop    r14
  42a291:	pop    r15
  42a293:	ret    
  42a294:	mov    rcx,QWORD PTR [rdi+0x20]
  42a298:	sub    rax,r8
  42a29b:	mov    QWORD PTR [rdi+0x28],rax
  42a29f:	lea    rsi,[rcx+r8*1]
  42a2a3:	mov    QWORD PTR [rdi+0x20],rsi
  42a2a7:	test   edx,edx
  42a2a9:	je     42a283 <flatcc_emitter@@Base+0xa3>
  42a2ab:	lea    ebx,[rdx-0x1]
  42a2ae:	add    rbx,0x1
  42a2b2:	shl    rbx,0x4
  42a2b6:	add    rbx,r14
  42a2b9:	nop    DWORD PTR [rax+0x0]
  42a2c0:	mov    rsi,QWORD PTR [r14]
  42a2c3:	mov    rdx,QWORD PTR [r14+0x8]
  42a2c7:	mov    rdi,rcx
  42a2ca:	add    r14,0x10
  42a2ce:	call   405160 <memcpy@plt>
  42a2d3:	mov    rcx,rax
  42a2d6:	add    rcx,QWORD PTR [r14-0x8]
  42a2da:	cmp    rbx,r14
  42a2dd:	jne    42a2c0 <flatcc_emitter@@Base+0xe0>
  42a2df:	jmp    42a283 <flatcc_emitter@@Base+0xa3>
  42a2e1:	nop    DWORD PTR [rax+0x0]
  42a2e8:	mov    rbp,r12
  42a2eb:	xor    r12d,r12d
  42a2ee:	jmp    42a259 <flatcc_emitter@@Base+0x79>
  42a2f3:	nop    DWORD PTR [rax+rax*1+0x0]
  42a2f8:	mov    r15,QWORD PTR [rbx+0x8]
  42a2fc:	test   r15,r15
  42a2ff:	je     42a380 <flatcc_emitter@@Base+0x1a0>
  42a301:	mov    rbp,QWORD PTR [r15+0xb80]
  42a308:	cmp    rbp,QWORD PTR [rbx]
  42a30b:	je     42a340 <flatcc_emitter@@Base+0x160>
  42a30d:	mov    QWORD PTR [rbx+0x8],rbp
  42a311:	mov    rax,QWORD PTR [rbp+0xb88]
  42a318:	mov    QWORD PTR [rbx+0x20],rbp
  42a31c:	mov    QWORD PTR [rbx+0x28],0xb80
  42a324:	mov    eax,DWORD PTR [rax+0xb90]
  42a32a:	add    eax,0xb80
  42a32f:	mov    DWORD PTR [rbp+0xb90],eax
  42a335:	jmp    42a240 <flatcc_emitter@@Base+0x60>
  42a33a:	nop    WORD PTR [rax+rax*1+0x0]
  42a340:	mov    edi,0xb98
  42a345:	call   405170 <malloc@plt>
  42a34a:	test   rax,rax
  42a34d:	je     42a38f <flatcc_emitter@@Base+0x1af>
  42a34f:	mov    QWORD PTR [rax+0xb80],rbp
  42a356:	add    QWORD PTR [rbx+0x38],0xb80
  42a35e:	mov    QWORD PTR [rax+0xb88],r15
  42a365:	mov    QWORD PTR [rbp+0xb88],rax
  42a36c:	mov    rbp,rax
  42a36f:	mov    QWORD PTR [r15+0xb80],rax
  42a376:	mov    QWORD PTR [rbx+0x8],rax
  42a37a:	jmp    42a311 <flatcc_emitter@@Base+0x131>
  42a37c:	nop    DWORD PTR [rax+0x0]
  42a380:	mov    edi,0xb98
  42a385:	call   405170 <malloc@plt>
  42a38a:	test   rax,rax
  42a38d:	jne    42a3a3 <flatcc_emitter@@Base+0x1c3>
  42a38f:	add    rsp,0x18
  42a393:	mov    eax,0xffffffff
  42a398:	pop    rbx
  42a399:	pop    rbp
  42a39a:	pop    r12
  42a39c:	pop    r13
  42a39e:	pop    r14
  42a3a0:	pop    r15
  42a3a2:	ret    
  42a3a3:	lea    rdx,[rax+0x5c0]
  42a3aa:	add    QWORD PTR [rbx+0x38],0xb80
  42a3b2:	mov    QWORD PTR [rbx],rax
  42a3b5:	mov    QWORD PTR [rbx+0x8],rax
  42a3b9:	mov    QWORD PTR [rax+0xb80],rax
  42a3c0:	mov    QWORD PTR [rax+0xb88],rax
  42a3c7:	mov    QWORD PTR [rbx+0x10],rdx
  42a3cb:	mov    QWORD PTR [rbx+0x20],rdx
  42a3cf:	mov    QWORD PTR [rbx+0x18],0x5c0
  42a3d7:	mov    QWORD PTR [rbx+0x28],0x5c0
  42a3df:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42a3e9:	jmp    42a240 <flatcc_emitter@@Base+0x60>
  42a3ee:	mov    rax,QWORD PTR [rdi+0x18]
  42a3f2:	cmp    r8,rax
  42a3f5:	jbe    42a48c <flatcc_emitter@@Base+0x2ac>
  42a3fb:	movsxd rax,edx
  42a3fe:	shl    rax,0x4
  42a402:	add    r14,rax
  42a405:	mov    eax,edx
  42a407:	shl    rax,0x4
  42a40b:	mov    rcx,r14
  42a40e:	sub    rcx,rax
  42a411:	mov    QWORD PTR [rsp+0x8],rcx
  42a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a420:	cmp    r14,QWORD PTR [rsp+0x8]
  42a425:	je     42a283 <flatcc_emitter@@Base+0xa3>
  42a42b:	sub    r14,0x10
  42a42f:	mov    rbp,QWORD PTR [r14+0x8]
  42a433:	mov    r12,rbp
  42a436:	add    r12,QWORD PTR [r14]
  42a439:	test   rbp,rbp
  42a43c:	je     42a420 <flatcc_emitter@@Base+0x240>
  42a43e:	mov    rdx,QWORD PTR [rbx+0x18]
  42a442:	cmp    rdx,rbp
  42a445:	jae    42a47f <flatcc_emitter@@Base+0x29f>
  42a447:	test   rdx,rdx
  42a44a:	je     42a4a8 <flatcc_emitter@@Base+0x2c8>
  42a44c:	sub    rbp,rdx
  42a44f:	xor    ecx,ecx
  42a451:	mov    rax,rdx
  42a454:	mov    QWORD PTR [rbx+0x18],rcx
  42a458:	neg    rax
  42a45b:	mov    rdi,rax
  42a45e:	add    rdi,QWORD PTR [rbx+0x10]
  42a462:	add    r12,rax
  42a465:	mov    rsi,r12
  42a468:	mov    QWORD PTR [rbx+0x10],rdi
  42a46c:	call   405160 <memcpy@plt>
  42a471:	test   rbp,rbp
  42a474:	je     42a420 <flatcc_emitter@@Base+0x240>
  42a476:	mov    rdx,QWORD PTR [rbx+0x18]
  42a47a:	cmp    rdx,rbp
  42a47d:	jb     42a447 <flatcc_emitter@@Base+0x267>
  42a47f:	mov    rcx,rdx
  42a482:	mov    rdx,rbp
  42a485:	sub    rcx,rbp
  42a488:	xor    ebp,ebp
  42a48a:	jmp    42a451 <flatcc_emitter@@Base+0x271>
  42a48c:	mov    rcx,QWORD PTR [rdi+0x10]
  42a490:	sub    rax,r8
  42a493:	mov    QWORD PTR [rdi+0x18],rax
  42a497:	sub    rcx,r8
  42a49a:	mov    QWORD PTR [rdi+0x10],rcx
  42a49e:	jmp    42a2a7 <flatcc_emitter@@Base+0xc7>
  42a4a3:	nop    DWORD PTR [rax+rax*1+0x0]
  42a4a8:	mov    r13,QWORD PTR [rbx]
  42a4ab:	test   r13,r13
  42a4ae:	je     42a54f <flatcc_emitter@@Base+0x36f>
  42a4b4:	mov    r15,QWORD PTR [r13+0xb88]
  42a4bb:	cmp    r15,QWORD PTR [rbx+0x8]
  42a4bf:	je     42a510 <flatcc_emitter@@Base+0x330>
  42a4c1:	mov    eax,DWORD PTR [r13+0xb90]
  42a4c8:	sub    eax,0xb80
  42a4cd:	mov    DWORD PTR [r15+0xb90],eax
  42a4d4:	mov    QWORD PTR [rbx],r15
  42a4d7:	lea    rax,[r15+0xb80]
  42a4de:	mov    QWORD PTR [rbx+0x18],0xb80
  42a4e6:	mov    QWORD PTR [rbx+0x10],rax
  42a4ea:	mov    rax,QWORD PTR [r15+0xb80]
  42a4f1:	mov    eax,DWORD PTR [rax+0xb90]
  42a4f7:	sub    eax,0xb80
  42a4fc:	mov    DWORD PTR [r15+0xb90],eax
  42a503:	jmp    42a43e <flatcc_emitter@@Base+0x25e>
  42a508:	nop    DWORD PTR [rax+rax*1+0x0]
  42a510:	mov    edi,0xb98
  42a515:	call   405170 <malloc@plt>
  42a51a:	test   rax,rax
  42a51d:	je     42a38f <flatcc_emitter@@Base+0x1af>
  42a523:	mov    QWORD PTR [rax+0xb88],r15
  42a52a:	add    QWORD PTR [rbx+0x38],0xb80
  42a532:	mov    QWORD PTR [rax+0xb80],r13
  42a539:	mov    QWORD PTR [r13+0xb88],rax
  42a540:	mov    QWORD PTR [r15+0xb80],rax
  42a547:	mov    QWORD PTR [rbx],rax
  42a54a:	mov    r15,rax
  42a54d:	jmp    42a4d7 <flatcc_emitter@@Base+0x2f7>
  42a54f:	mov    edi,0xb98
  42a554:	call   405170 <malloc@plt>
  42a559:	test   rax,rax
  42a55c:	je     42a38f <flatcc_emitter@@Base+0x1af>
  42a562:	lea    rdx,[rax+0x5c0]
  42a569:	add    QWORD PTR [rbx+0x38],0xb80
  42a571:	mov    QWORD PTR [rbx],rax
  42a574:	mov    QWORD PTR [rbx+0x8],rax
  42a578:	mov    QWORD PTR [rax+0xb80],rax
  42a57f:	mov    QWORD PTR [rax+0xb88],rax
  42a586:	mov    QWORD PTR [rbx+0x10],rdx
  42a58a:	mov    QWORD PTR [rbx+0x20],rdx
  42a58e:	mov    QWORD PTR [rbx+0x18],0x5c0
  42a596:	mov    QWORD PTR [rbx+0x28],0x5c0
  42a59e:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42a5a8:	jmp    42a43e <flatcc_emitter@@Base+0x25e>
  42a5ad:	nop    DWORD PTR [rax]

000000000042a5b0 <flatcc_emitter_copy_buffer@@Base>:
  42a5b0:	push   rbp
  42a5b1:	push   rbx
  42a5b2:	sub    rsp,0x8
  42a5b6:	mov    r9,QWORD PTR [rdi+0x30]
  42a5ba:	cmp    r9,rdx
  42a5bd:	ja     42a680 <flatcc_emitter_copy_buffer@@Base+0xd0>
  42a5c3:	mov    rax,QWORD PTR [rdi]
  42a5c6:	test   rax,rax
  42a5c9:	je     42a680 <flatcc_emitter_copy_buffer@@Base+0xd0>
  42a5cf:	cmp    rax,QWORD PTR [rdi+0x8]
  42a5d3:	mov    rcx,rsi
  42a5d6:	mov    rbx,rdi
  42a5d9:	je     42a690 <flatcc_emitter_copy_buffer@@Base+0xe0>
  42a5df:	mov    r8d,0xb80
  42a5e5:	sub    r8,QWORD PTR [rdi+0x18]
  42a5e9:	mov    rsi,QWORD PTR [rdi+0x10]
  42a5ed:	mov    rdi,rcx
  42a5f0:	mov    rbp,r8
  42a5f3:	mov    rdx,r8
  42a5f6:	call   405160 <memcpy@plt>
  42a5fb:	add    rbp,rax
  42a5fe:	mov    rax,QWORD PTR [rbx]
  42a601:	mov    rsi,QWORD PTR [rbx+0x8]
  42a605:	mov    rax,QWORD PTR [rax+0xb80]
  42a60c:	cmp    rax,rsi
  42a60f:	je     42a664 <flatcc_emitter_copy_buffer@@Base+0xb4>
  42a611:	nop    DWORD PTR [rax+0x0]
  42a618:	mov    rdx,QWORD PTR [rax]
  42a61b:	lea    rdi,[rbp+0x8]
  42a61f:	mov    rcx,rbp
  42a622:	mov    rsi,rax
  42a625:	add    rbp,0xb80
  42a62c:	and    rdi,0xfffffffffffffff8
  42a630:	mov    QWORD PTR [rbp-0xb80],rdx
  42a637:	mov    rdx,QWORD PTR [rax+0xb78]
  42a63e:	sub    rcx,rdi
  42a641:	sub    rsi,rcx
  42a644:	add    ecx,0xb80
  42a64a:	shr    ecx,0x3
  42a64d:	mov    QWORD PTR [rbp-0x8],rdx
  42a651:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  42a654:	mov    rax,QWORD PTR [rax+0xb80]
  42a65b:	mov    rsi,QWORD PTR [rbx+0x8]
  42a65f:	cmp    rsi,rax
  42a662:	jne    42a618 <flatcc_emitter_copy_buffer@@Base+0x68>
  42a664:	mov    edx,0xb80
  42a669:	sub    rdx,QWORD PTR [rbx+0x28]
  42a66d:	mov    rdi,rbp
  42a670:	call   405160 <memcpy@plt>
  42a675:	add    rsp,0x8
  42a679:	mov    rax,rbp
  42a67c:	pop    rbx
  42a67d:	pop    rbp
  42a67e:	ret    
  42a67f:	nop
  42a680:	xor    ebp,ebp
  42a682:	add    rsp,0x8
  42a686:	mov    rax,rbp
  42a689:	pop    rbx
  42a68a:	pop    rbp
  42a68b:	ret    
  42a68c:	nop    DWORD PTR [rax+0x0]
  42a690:	mov    rsi,QWORD PTR [rdi+0x10]
  42a694:	mov    rdx,r9
  42a697:	mov    rdi,rcx
  42a69a:	call   405160 <memcpy@plt>
  42a69f:	mov    rbp,rax
  42a6a2:	jmp    42a675 <flatcc_emitter_copy_buffer@@Base+0xc5>
  42a6a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a6ae:	xchg   ax,ax

000000000042a6b0 <cmetrohash64_1@@Base>:
  42a6b0:	mov    edx,edx
  42a6b2:	mov    r10d,0xc83a91e1
  42a6b8:	movabs r8,0x60e25d3baf065edb
  42a6c2:	imul   rdx,r10
  42a6c6:	add    r8,rsi
  42a6c9:	push   r13
  42a6cb:	push   r12
  42a6cd:	push   rbp
  42a6ce:	lea    rbp,[rdi+rsi*1]
  42a6d2:	push   rbx
  42a6d3:	add    r8,rdx
  42a6d6:	cmp    rsi,0x1f
  42a6da:	jbe    42a7c0 <cmetrohash64_1@@Base+0x110>
  42a6e0:	lea    rbx,[rbp-0x20]
  42a6e4:	mov    r12,r8
  42a6e7:	mov    r13,r8
  42a6ea:	mov    rsi,r8
  42a6ed:	mov    r9,r8
  42a6f0:	mov    r11d,0x8648dbdb
  42a6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a700:	mov    rax,r10
  42a703:	add    rdi,0x20
  42a707:	imul   rax,QWORD PTR [rdi-0x20]
  42a70c:	imul   rdx,QWORD PTR [rdi-0x10],0x7bdec03b
  42a714:	add    r9,rax
  42a717:	mov    rax,r11
  42a71a:	imul   rax,QWORD PTR [rdi-0x18]
  42a71f:	add    rdx,r13
  42a722:	rorx   r9,r9,0x1d
  42a728:	add    r9,r13
  42a72b:	rorx   rdx,rdx,0x1d
  42a731:	lea    r13,[rdx+r9*1]
  42a735:	add    rsi,rax
  42a738:	imul   rax,QWORD PTR [rdi-0x8],0x2f5870a5
  42a740:	rorx   rsi,rsi,0x1d
  42a746:	add    rsi,r12
  42a749:	add    rax,r12
  42a74c:	cmp    rbx,rdi
  42a74f:	rorx   rax,rax,0x1d
  42a755:	lea    r12,[rax+rsi*1]
  42a759:	jae    42a700 <cmetrohash64_1@@Base+0x50>
  42a75b:	lea    rdx,[r9+r12*1]
  42a75f:	imul   rdx,r10
  42a763:	add    rdx,rsi
  42a766:	rorx   rdx,rdx,0x21
  42a76c:	imul   rdx,r11
  42a770:	xor    rdx,r13
  42a773:	lea    rax,[rsi+rdx*1]
  42a777:	lea    rbx,[r9+rdx*1]
  42a77b:	imul   rax,r11
  42a77f:	imul   rbx,r10
  42a783:	add    rax,r9
  42a786:	xor    r9,rsi
  42a789:	rorx   rax,rax,0x21
  42a78f:	imul   rax,r10
  42a793:	xor    rax,r12
  42a796:	add    rbx,rax
  42a799:	add    rsi,rax
  42a79c:	rorx   rbx,rbx,0x21
  42a7a2:	imul   rbx,r11
  42a7a6:	imul   r11,rsi
  42a7aa:	xor    r9,rbx
  42a7ad:	add    r11,rdx
  42a7b0:	rorx   r11,r11,0x21
  42a7b6:	imul   r10,r11
  42a7ba:	xor    r10,r9
  42a7bd:	add    r8,r10
  42a7c0:	mov    rax,rbp
  42a7c3:	sub    rax,rdi
  42a7c6:	cmp    rax,0xf
  42a7ca:	jle    42a832 <cmetrohash64_1@@Base+0x182>
  42a7cc:	mov    r9d,0xc83a91e1
  42a7d2:	mov    eax,0x8648dbdb
  42a7d7:	add    rdi,0x10
  42a7db:	mov    rsi,r9
  42a7de:	imul   rsi,QWORD PTR [rdi-0x10]
  42a7e3:	add    rsi,r8
  42a7e6:	rorx   rsi,rsi,0x21
  42a7ec:	imul   rsi,rax
  42a7f0:	imul   rax,QWORD PTR [rdi-0x8]
  42a7f5:	imul   r9,rsi
  42a7f9:	lea    rdx,[rax+r8*1]
  42a7fd:	rorx   r9,r9,0x23
  42a803:	rorx   rdx,rdx,0x21
  42a809:	imul   rax,rdx,0x7bdec03b
  42a810:	imul   rdx,rax,0x2f5870a5
  42a817:	add    r9,rax
  42a81a:	xor    rsi,r9
  42a81d:	rorx   rdx,rdx,0x23
  42a823:	add    rsi,rdx
  42a826:	xor    rax,rsi
  42a829:	add    r8,rax
  42a82c:	mov    rax,rbp
  42a82f:	sub    rax,rdi
  42a832:	cmp    rax,0x7
  42a836:	jle    42a85e <cmetrohash64_1@@Base+0x1ae>
  42a838:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42a83f:	mov    edx,0x8648dbdb
  42a844:	add    rdi,0x8
  42a848:	add    rax,r8
  42a84b:	rorx   r8,rax,0x21
  42a851:	imul   r8,rdx
  42a855:	xor    r8,rax
  42a858:	mov    rax,rbp
  42a85b:	sub    rax,rdi
  42a85e:	cmp    rax,0x3
  42a862:	jle    42a88c <cmetrohash64_1@@Base+0x1dc>
  42a864:	mov    eax,DWORD PTR [rdi]
  42a866:	mov    edx,0x8648dbdb
  42a86b:	add    rdi,0x4
  42a86f:	imul   rax,rax,0x2f5870a5
  42a876:	add    rax,r8
  42a879:	rorx   r8,rax,0xf
  42a87f:	imul   r8,rdx
  42a883:	xor    r8,rax
  42a886:	mov    rax,rbp
  42a889:	sub    rax,rdi
  42a88c:	cmp    rax,0x1
  42a890:	jle    42a8bb <cmetrohash64_1@@Base+0x20b>
  42a892:	movzx  eax,WORD PTR [rdi]
  42a895:	mov    edx,0x8648dbdb
  42a89a:	add    rdi,0x2
  42a89e:	imul   rax,rax,0x2f5870a5
  42a8a5:	add    rax,r8
  42a8a8:	rorx   r8,rax,0xd
  42a8ae:	imul   r8,rdx
  42a8b2:	xor    r8,rax
  42a8b5:	mov    rax,rbp
  42a8b8:	sub    rax,rdi
  42a8bb:	test   rax,rax
  42a8be:	jle    42a8df <cmetrohash64_1@@Base+0x22f>
  42a8c0:	movzx  eax,BYTE PTR [rdi]
  42a8c3:	mov    edx,0x8648dbdb
  42a8c8:	imul   rax,rax,0x2f5870a5
  42a8cf:	add    rax,r8
  42a8d2:	rorx   r8,rax,0x19
  42a8d8:	imul   r8,rdx
  42a8dc:	xor    r8,rax
  42a8df:	rorx   rax,r8,0x21
  42a8e5:	xor    r8,rax
  42a8e8:	mov    eax,0xc83a91e1
  42a8ed:	imul   r8,rax
  42a8f1:	pop    rbx
  42a8f2:	pop    rbp
  42a8f3:	pop    r12
  42a8f5:	rorx   rax,r8,0x21
  42a8fb:	xor    r8,rax
  42a8fe:	mov    QWORD PTR [rcx],r8
  42a901:	pop    r13
  42a903:	ret    
  42a904:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a90f:	nop

000000000042a910 <cmetrohash64_2@@Base>:
  42a910:	mov    edx,edx
  42a912:	mov    r10d,0xd6d018f5
  42a918:	movabs r8,0x52bc33fedbe4cbb5
  42a922:	imul   rdx,r10
  42a926:	add    r8,rsi
  42a929:	push   r13
  42a92b:	push   r12
  42a92d:	push   rbp
  42a92e:	lea    rbp,[rdi+rsi*1]
  42a932:	push   rbx
  42a933:	add    r8,rdx
  42a936:	cmp    rsi,0x1f
  42a93a:	jbe    42aa20 <cmetrohash64_2@@Base+0x110>
  42a940:	lea    rbx,[rbp-0x20]
  42a944:	mov    r12,r8
  42a947:	mov    r13,r8
  42a94a:	mov    rsi,r8
  42a94d:	mov    r9,r8
  42a950:	mov    r11d,0xa2aa033b
  42a956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a960:	mov    rax,r10
  42a963:	add    rdi,0x20
  42a967:	imul   rax,QWORD PTR [rdi-0x20]
  42a96c:	imul   rdx,QWORD PTR [rdi-0x10],0x62992fc1
  42a974:	add    r9,rax
  42a977:	mov    rax,r11
  42a97a:	imul   rax,QWORD PTR [rdi-0x18]
  42a97f:	add    rdx,r13
  42a982:	rorx   r9,r9,0x1d
  42a988:	add    r9,r13
  42a98b:	rorx   rdx,rdx,0x1d
  42a991:	lea    r13,[rdx+r9*1]
  42a995:	add    rsi,rax
  42a998:	imul   rax,QWORD PTR [rdi-0x8],0x30bc5b29
  42a9a0:	rorx   rsi,rsi,0x1d
  42a9a6:	add    rsi,r12
  42a9a9:	add    rax,r12
  42a9ac:	cmp    rbx,rdi
  42a9af:	rorx   rax,rax,0x1d
  42a9b5:	lea    r12,[rax+rsi*1]
  42a9b9:	jae    42a960 <cmetrohash64_2@@Base+0x50>
  42a9bb:	lea    rdx,[r9+r12*1]
  42a9bf:	imul   rdx,r10
  42a9c3:	add    rdx,rsi
  42a9c6:	rorx   rdx,rdx,0x1e
  42a9cc:	imul   rdx,r11
  42a9d0:	xor    rdx,r13
  42a9d3:	lea    rax,[rsi+rdx*1]
  42a9d7:	lea    rbx,[r9+rdx*1]
  42a9db:	imul   rax,r11
  42a9df:	imul   rbx,r10
  42a9e3:	add    rax,r9
  42a9e6:	xor    r9,rsi
  42a9e9:	rorx   rax,rax,0x1e
  42a9ef:	imul   rax,r10
  42a9f3:	xor    rax,r12
  42a9f6:	add    rbx,rax
  42a9f9:	add    rsi,rax
  42a9fc:	rorx   rbx,rbx,0x1e
  42aa02:	imul   rbx,r11
  42aa06:	imul   r11,rsi
  42aa0a:	xor    r9,rbx
  42aa0d:	add    r11,rdx
  42aa10:	rorx   r11,r11,0x1e
  42aa16:	imul   r10,r11
  42aa1a:	xor    r10,r9
  42aa1d:	add    r8,r10
  42aa20:	mov    rax,rbp
  42aa23:	sub    rax,rdi
  42aa26:	cmp    rax,0xf
  42aa2a:	jle    42aa90 <cmetrohash64_2@@Base+0x180>
  42aa2c:	imul   rsi,QWORD PTR [rdi],0x62992fc1
  42aa33:	imul   rdx,QWORD PTR [rdi+0x8],0x62992fc1
  42aa3b:	add    rdi,0x10
  42aa3f:	add    rsi,r8
  42aa42:	rorx   rsi,rsi,0x1d
  42aa48:	add    rdx,r8
  42aa4b:	imul   rsi,rsi,0x30bc5b29
  42aa52:	rorx   rdx,rdx,0x1d
  42aa58:	imul   rax,rdx,0x30bc5b29
  42aa5f:	mov    edx,0xd6d018f5
  42aa64:	imul   rdx,rsi
  42aa68:	imul   r9,rax,0x30bc5b29
  42aa6f:	rorx   rdx,rdx,0x22
  42aa75:	add    rdx,rax
  42aa78:	rorx   r9,r9,0x22
  42aa7e:	xor    rsi,rdx
  42aa81:	add    rsi,r9
  42aa84:	xor    rax,rsi
  42aa87:	add    r8,rax
  42aa8a:	mov    rax,rbp
  42aa8d:	sub    rax,rdi
  42aa90:	cmp    rax,0x7
  42aa94:	jle    42aabc <cmetrohash64_2@@Base+0x1ac>
  42aa96:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42aa9d:	mov    edx,0xa2aa033b
  42aaa2:	add    rdi,0x8
  42aaa6:	add    rax,r8
  42aaa9:	rorx   r8,rax,0x24
  42aaaf:	imul   r8,rdx
  42aab3:	xor    r8,rax
  42aab6:	mov    rax,rbp
  42aab9:	sub    rax,rdi
  42aabc:	cmp    rax,0x3
  42aac0:	jle    42aaea <cmetrohash64_2@@Base+0x1da>
  42aac2:	mov    eax,DWORD PTR [rdi]
  42aac4:	mov    edx,0xa2aa033b
  42aac9:	add    rdi,0x4
  42aacd:	imul   rax,rax,0x30bc5b29
  42aad4:	add    rax,r8
  42aad7:	rorx   r8,rax,0xf
  42aadd:	imul   r8,rdx
  42aae1:	xor    r8,rax
  42aae4:	mov    rax,rbp
  42aae7:	sub    rax,rdi
  42aaea:	cmp    rax,0x1
  42aaee:	jle    42ab19 <cmetrohash64_2@@Base+0x209>
  42aaf0:	movzx  eax,WORD PTR [rdi]
  42aaf3:	mov    edx,0xa2aa033b
  42aaf8:	add    rdi,0x2
  42aafc:	imul   rax,rax,0x30bc5b29
  42ab03:	add    rax,r8
  42ab06:	rorx   r8,rax,0xf
  42ab0c:	imul   r8,rdx
  42ab10:	xor    r8,rax
  42ab13:	mov    rax,rbp
  42ab16:	sub    rax,rdi
  42ab19:	test   rax,rax
  42ab1c:	jle    42ab3d <cmetrohash64_2@@Base+0x22d>
  42ab1e:	movzx  eax,BYTE PTR [rdi]
  42ab21:	mov    edx,0xa2aa033b
  42ab26:	imul   rax,rax,0x30bc5b29
  42ab2d:	add    rax,r8
  42ab30:	rorx   r8,rax,0x17
  42ab36:	imul   r8,rdx
  42ab3a:	xor    r8,rax
  42ab3d:	rorx   rax,r8,0x1c
  42ab43:	xor    r8,rax
  42ab46:	mov    eax,0xd6d018f5
  42ab4b:	imul   r8,rax
  42ab4f:	pop    rbx
  42ab50:	pop    rbp
  42ab51:	pop    r12
  42ab53:	rorx   rax,r8,0x1d
  42ab59:	xor    r8,rax
  42ab5c:	mov    QWORD PTR [rcx],r8
  42ab5f:	pop    r13
  42ab61:	ret    
  42ab62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab6c:	nop    DWORD PTR [rax+0x0]
  42ab70:	push   rbx
  42ab71:	mov    rbx,rdi
  42ab74:	mov    rdi,QWORD PTR [rdi]
  42ab77:	test   rdi,rdi
  42ab7a:	je     42ab81 <cmetrohash64_2@@Base+0x271>
  42ab7c:	call   405040 <free@plt>
  42ab81:	mov    QWORD PTR [rbx],0x0
  42ab88:	mov    QWORD PTR [rbx+0x8],0x0
  42ab90:	mov    QWORD PTR [rbx+0x10],0x0
  42ab98:	mov    QWORD PTR [rbx+0x18],0x0
  42aba0:	pop    rbx
  42aba1:	ret    
  42aba2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42abad:	nop    DWORD PTR [rax]
  42abb0:	push   r15
  42abb2:	push   r14
  42abb4:	push   r13
  42abb6:	push   r12
  42abb8:	push   rbp
  42abb9:	push   rbx
  42abba:	sub    rsp,0x38
  42abbe:	mov    r13,QWORD PTR [rdi]
  42abc1:	mov    rcx,QWORD PTR fs:0x28
  42abca:	mov    QWORD PTR [rsp+0x28],rcx
  42abcf:	xor    ecx,ecx
  42abd1:	mov    QWORD PTR [rsp+0x10],rdi
  42abd6:	mov    QWORD PTR [rsp+0x8],rsi
  42abdb:	test   r13,r13
  42abde:	je     42ac80 <cmetrohash64_2@@Base+0x370>
  42abe4:	mov    rax,QWORD PTR [rsp+0x10]
  42abe9:	mov    rdi,QWORD PTR [rsp+0x8]
  42abee:	mov    r14,rdx
  42abf1:	lea    rcx,[rsp+0x20]
  42abf6:	mov    edx,0x2f693b52
  42abfb:	mov    rsi,r14
  42abfe:	mov    rax,QWORD PTR [rax+0x18]
  42ac02:	mov    QWORD PTR [rsp+0x18],rax
  42ac07:	lea    r15,[rax-0x1]
  42ac0b:	call   42a6b0 <cmetrohash64_1@@Base>
  42ac10:	mov    ebp,DWORD PTR [rsp+0x20]
  42ac14:	mov    rax,r15
  42ac17:	and    rax,rbp
  42ac1a:	lea    r12,[r13+rax*8+0x0]
  42ac1f:	mov    rbx,QWORD PTR [r12]
  42ac23:	test   rbx,rbx
  42ac26:	je     42ac80 <cmetrohash64_2@@Base+0x370>
  42ac28:	add    rbp,0x1
  42ac2c:	jmp    42ac48 <cmetrohash64_2@@Base+0x338>
  42ac2e:	xchg   ax,ax
  42ac30:	mov    rax,rbp
  42ac33:	add    rbp,0x1
  42ac37:	and    rax,r15
  42ac3a:	lea    r12,[r13+rax*8+0x0]
  42ac3f:	mov    rbx,QWORD PTR [r12]
  42ac43:	test   rbx,rbx
  42ac46:	je     42ac80 <cmetrohash64_2@@Base+0x370>
  42ac48:	cmp    rbx,0x2
  42ac4c:	je     42ac30 <cmetrohash64_2@@Base+0x320>
  42ac4e:	movsxd rax,DWORD PTR [rbx+0x10]
  42ac52:	cmp    r14,rax
  42ac55:	jne    42ac30 <cmetrohash64_2@@Base+0x320>
  42ac57:	mov    rsi,QWORD PTR [rbx+0x8]
  42ac5b:	mov    rdi,QWORD PTR [rsp+0x8]
  42ac60:	mov    rdx,r14
  42ac63:	call   405120 <memcmp@plt>
  42ac68:	test   eax,eax
  42ac6a:	jne    42ac30 <cmetrohash64_2@@Base+0x320>
  42ac6c:	mov    rax,QWORD PTR [rsp+0x10]
  42ac71:	mov    QWORD PTR [r12],0x2
  42ac79:	sub    QWORD PTR [rax+0x10],0x1
  42ac7e:	jmp    42ac82 <cmetrohash64_2@@Base+0x372>
  42ac80:	xor    ebx,ebx
  42ac82:	mov    rcx,QWORD PTR [rsp+0x28]
  42ac87:	xor    rcx,QWORD PTR fs:0x28
  42ac90:	mov    rax,rbx
  42ac93:	jne    42aca4 <cmetrohash64_2@@Base+0x394>
  42ac95:	add    rsp,0x38
  42ac99:	pop    rbx
  42ac9a:	pop    rbp
  42ac9b:	pop    r12
  42ac9d:	pop    r13
  42ac9f:	pop    r14
  42aca1:	pop    r15
  42aca3:	ret    
  42aca4:	call   4050d0 <__stack_chk_fail@plt>
  42aca9:	nop    DWORD PTR [rax+0x0]
  42acb0:	push   r13
  42acb2:	push   r12
  42acb4:	push   rbp
  42acb5:	push   rbx
  42acb6:	mov    rbp,rdi
  42acb9:	mov    ebx,0x4
  42acbe:	sub    rsp,0x38
  42acc2:	mov    r12,QWORD PTR [rdi]
  42acc5:	mov    rax,QWORD PTR fs:0x28
  42acce:	mov    QWORD PTR [rsp+0x28],rax
  42acd3:	xor    eax,eax
  42acd5:	cmp    QWORD PTR [rdi+0x10],rsi
  42acd9:	cmovae rsi,QWORD PTR [rdi+0x10]
  42acde:	cmp    rsi,0x2
  42ace2:	jbe    42acfb <cmetrohash64_2@@Base+0x3eb>
  42ace4:	nop    DWORD PTR [rax+0x0]
  42ace8:	add    rbx,rbx
  42aceb:	imul   rax,rbx,0xb3
  42acf2:	shr    rax,0x8
  42acf6:	cmp    rsi,rax
  42acf9:	ja     42ace8 <cmetrohash64_2@@Base+0x3d8>
  42acfb:	mov    esi,0x8
  42ad00:	mov    rdi,rbx
  42ad03:	call   405130 <calloc@plt>
  42ad08:	test   rax,rax
  42ad0b:	mov    QWORD PTR [rsp],rax
  42ad0f:	je     42adb7 <cmetrohash64_2@@Base+0x4a7>
  42ad15:	mov    QWORD PTR [rsp+0x18],rbx
  42ad1a:	xor    ebx,ebx
  42ad1c:	cmp    QWORD PTR [rbp+0x18],0x0
  42ad21:	mov    QWORD PTR [rsp+0x8],0x0
  42ad2a:	mov    QWORD PTR [rsp+0x10],0x0
  42ad33:	mov    r13,rsp
  42ad36:	je     42ad6f <cmetrohash64_2@@Base+0x45f>
  42ad38:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad40:	mov    rcx,QWORD PTR [r12+rbx*8]
  42ad44:	test   rcx,rcx
  42ad47:	je     42ad65 <cmetrohash64_2@@Base+0x455>
  42ad49:	cmp    rcx,0x2
  42ad4d:	je     42ad65 <cmetrohash64_2@@Base+0x455>
  42ad4f:	movsxd rdx,DWORD PTR [rcx+0x10]
  42ad53:	mov    rsi,QWORD PTR [rcx+0x8]
  42ad57:	mov    r8d,0x3
  42ad5d:	mov    rdi,r13
  42ad60:	call   42add0 <cmetrohash64_2@@Base+0x4c0>
  42ad65:	add    rbx,0x1
  42ad69:	cmp    QWORD PTR [rbp+0x18],rbx
  42ad6d:	ja     42ad40 <cmetrohash64_2@@Base+0x430>
  42ad6f:	mov    rdi,rbp
  42ad72:	call   42ab70 <cmetrohash64_2@@Base+0x260>
  42ad77:	mov    rax,QWORD PTR [rsp]
  42ad7b:	mov    QWORD PTR [rbp+0x0],rax
  42ad7f:	mov    rax,QWORD PTR [rsp+0x8]
  42ad84:	mov    QWORD PTR [rbp+0x8],rax
  42ad88:	mov    rax,QWORD PTR [rsp+0x10]
  42ad8d:	mov    QWORD PTR [rbp+0x10],rax
  42ad91:	mov    rax,QWORD PTR [rsp+0x18]
  42ad96:	mov    QWORD PTR [rbp+0x18],rax
  42ad9a:	xor    eax,eax
  42ad9c:	mov    rdi,QWORD PTR [rsp+0x28]
  42ada1:	xor    rdi,QWORD PTR fs:0x28
  42adaa:	jne    42adbe <cmetrohash64_2@@Base+0x4ae>
  42adac:	add    rsp,0x38
  42adb0:	pop    rbx
  42adb1:	pop    rbp
  42adb2:	pop    r12
  42adb4:	pop    r13
  42adb6:	ret    
  42adb7:	mov    eax,0xffffffff
  42adbc:	jmp    42ad9c <cmetrohash64_2@@Base+0x48c>
  42adbe:	call   4050d0 <__stack_chk_fail@plt>
  42adc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42adce:	xchg   ax,ax
  42add0:	push   r15
  42add2:	push   r14
  42add4:	push   r13
  42add6:	push   r12
  42add8:	push   rbp
  42add9:	push   rbx
  42adda:	sub    rsp,0x48
  42adde:	mov    QWORD PTR [rsp+0x20],rdi
  42ade3:	mov    QWORD PTR [rsp+0x10],rsi
  42ade8:	mov    rdi,QWORD PTR fs:0x28
  42adf1:	mov    QWORD PTR [rsp+0x38],rdi
  42adf6:	xor    edi,edi
  42adf8:	test   rcx,rcx
  42adfb:	mov    QWORD PTR [rsp+0x18],rcx
  42ae00:	mov    DWORD PTR [rsp+0x2c],r8d
  42ae05:	je     42b030 <cmetrohash64_2@@Base+0x720>
  42ae0b:	cmp    QWORD PTR [rsp+0x18],0x2
  42ae11:	je     42b011 <cmetrohash64_2@@Base+0x701>
  42ae17:	cmp    QWORD PTR [rsp+0x18],0x1
  42ae1d:	je     42aff2 <cmetrohash64_2@@Base+0x6e2>
  42ae23:	mov    rbx,QWORD PTR [rsp+0x20]
  42ae28:	mov    r14,rdx
  42ae2b:	mov    r8,QWORD PTR [rbx+0x18]
  42ae2f:	mov    rsi,QWORD PTR [rbx+0x10]
  42ae33:	imul   rax,r8,0xb3
  42ae3a:	shr    rax,0x8
  42ae3e:	cmp    rsi,rax
  42ae41:	jb     42ae5a <cmetrohash64_2@@Base+0x54a>
  42ae43:	add    rsi,rsi
  42ae46:	mov    rdi,rbx
  42ae49:	call   42acb0 <cmetrohash64_2@@Base+0x3a0>
  42ae4e:	test   eax,eax
  42ae50:	jne    42afc4 <cmetrohash64_2@@Base+0x6b4>
  42ae56:	mov    r8,QWORD PTR [rbx+0x18]
  42ae5a:	mov    rax,QWORD PTR [rsp+0x20]
  42ae5f:	mov    rdi,QWORD PTR [rsp+0x10]
  42ae64:	lea    rcx,[rsp+0x30]
  42ae69:	mov    edx,0x2f693b52
  42ae6e:	mov    rsi,r14
  42ae71:	lea    r12,[r8-0x1]
  42ae75:	mov    r13,QWORD PTR [rax]
  42ae78:	call   42a6b0 <cmetrohash64_1@@Base>
  42ae7d:	mov    edi,DWORD PTR [rsp+0x2c]
  42ae81:	mov    ebp,DWORD PTR [rsp+0x30]
  42ae85:	mov    rax,r12
  42ae88:	lea    edx,[rdi-0x2]
  42ae8b:	and    rax,rbp
  42ae8e:	cmp    edx,0x1
  42ae91:	jbe    42af72 <cmetrohash64_2@@Base+0x662>
  42ae97:	lea    r15,[r13+rax*8+0x0]
  42ae9c:	add    rbp,0x1
  42aea0:	xor    ecx,ecx
  42aea2:	mov    rbx,QWORD PTR [r15]
  42aea5:	test   rbx,rbx
  42aea8:	jne    42aecb <cmetrohash64_2@@Base+0x5bb>
  42aeaa:	jmp    42af6d <cmetrohash64_2@@Base+0x65d>
  42aeaf:	nop
  42aeb0:	mov    rax,r12
  42aeb3:	and    rax,rbp
  42aeb6:	add    rbp,0x1
  42aeba:	lea    r15,[r13+rax*8+0x0]
  42aebf:	mov    rbx,QWORD PTR [r15]
  42aec2:	test   rbx,rbx
  42aec5:	je     42af50 <cmetrohash64_2@@Base+0x640>
  42aecb:	cmp    rbx,0x2
  42aecf:	je     42af30 <cmetrohash64_2@@Base+0x620>
  42aed1:	movsxd rax,DWORD PTR [rbx+0x10]
  42aed5:	cmp    r14,rax
  42aed8:	jne    42aeb0 <cmetrohash64_2@@Base+0x5a0>
  42aeda:	mov    rsi,QWORD PTR [rbx+0x8]
  42aede:	mov    rdi,QWORD PTR [rsp+0x10]
  42aee3:	mov    rdx,r14
  42aee6:	mov    QWORD PTR [rsp+0x8],rcx
  42aeeb:	call   405120 <memcmp@plt>
  42aef0:	test   eax,eax
  42aef2:	mov    rcx,QWORD PTR [rsp+0x8]
  42aef7:	jne    42aeb0 <cmetrohash64_2@@Base+0x5a0>
  42aef9:	mov    eax,DWORD PTR [rsp+0x2c]
  42aefd:	test   eax,eax
  42aeff:	je     42af40 <cmetrohash64_2@@Base+0x630>
  42af01:	nop    DWORD PTR [rax+0x0]
  42af08:	mov    rdx,QWORD PTR [rsp+0x38]
  42af0d:	xor    rdx,QWORD PTR fs:0x28
  42af16:	mov    rax,rbx
  42af19:	jne    42b04f <cmetrohash64_2@@Base+0x73f>
  42af1f:	add    rsp,0x48
  42af23:	pop    rbx
  42af24:	pop    rbp
  42af25:	pop    r12
  42af27:	pop    r13
  42af29:	pop    r14
  42af2b:	pop    r15
  42af2d:	ret    
  42af2e:	xchg   ax,ax
  42af30:	test   rcx,rcx
  42af33:	cmove  rcx,r15
  42af37:	jmp    42aeb0 <cmetrohash64_2@@Base+0x5a0>
  42af3c:	nop    DWORD PTR [rax+0x0]
  42af40:	mov    rax,QWORD PTR [rsp+0x18]
  42af45:	mov    QWORD PTR [r15],rax
  42af48:	jmp    42af08 <cmetrohash64_2@@Base+0x5f8>
  42af4a:	nop    WORD PTR [rax+rax*1+0x0]
  42af50:	test   rcx,rcx
  42af53:	cmove  rcx,r15
  42af57:	mov    rax,QWORD PTR [rsp+0x20]
  42af5c:	xor    ebx,ebx
  42af5e:	add    QWORD PTR [rax+0x10],0x1
  42af63:	mov    rax,QWORD PTR [rsp+0x18]
  42af68:	mov    QWORD PTR [rcx],rax
  42af6b:	jmp    42af08 <cmetrohash64_2@@Base+0x5f8>
  42af6d:	mov    rcx,r15
  42af70:	jmp    42af57 <cmetrohash64_2@@Base+0x647>
  42af72:	lea    rdx,[r13+rax*8+0x0]
  42af77:	mov    rdi,QWORD PTR [rsp+0x20]
  42af7c:	mov    rax,QWORD PTR [rdx]
  42af7f:	add    QWORD PTR [rdi+0x10],0x1
  42af84:	test   rax,rax
  42af87:	je     42afb5 <cmetrohash64_2@@Base+0x6a5>
  42af89:	cmp    rax,0x2
  42af8d:	je     42afb5 <cmetrohash64_2@@Base+0x6a5>
  42af8f:	add    rbp,0x1
  42af93:	jmp    42af9e <cmetrohash64_2@@Base+0x68e>
  42af95:	nop    DWORD PTR [rax]
  42af98:	cmp    rax,0x2
  42af9c:	je     42afb5 <cmetrohash64_2@@Base+0x6a5>
  42af9e:	mov    rax,r12
  42afa1:	and    rax,rbp
  42afa4:	add    rbp,0x1
  42afa8:	lea    rdx,[r13+rax*8+0x0]
  42afad:	mov    rax,QWORD PTR [rdx]
  42afb0:	test   rax,rax
  42afb3:	jne    42af98 <cmetrohash64_2@@Base+0x688>
  42afb5:	mov    rax,QWORD PTR [rsp+0x18]
  42afba:	xor    ebx,ebx
  42afbc:	mov    QWORD PTR [rdx],rax
  42afbf:	jmp    42af08 <cmetrohash64_2@@Base+0x5f8>
  42afc4:	mov    rax,QWORD PTR [rip+0x2501d]        # 44ffe8 <stderr@GLIBC_2.2.5>
  42afcb:	lea    rcx,[rip+0x19b2e]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  42afd2:	lea    rdx,[rip+0x19b9d]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  42afd9:	mov    esi,0x1
  42afde:	mov    rdi,QWORD PTR [rax]
  42afe1:	xor    eax,eax
  42afe3:	call   4051f0 <__fprintf_chk@plt>
  42afe8:	mov    edi,0x1
  42afed:	call   4051d0 <exit@plt>
  42aff2:	lea    rcx,[rip+0x1d6c7]        # 4486c0 <flatcc_builder_padding_base@@Base+0x200>
  42aff9:	lea    rsi,[rip+0x19a90]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  42b000:	lea    rdi,[rip+0x19b5a]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  42b007:	mov    edx,0x74
  42b00c:	call   4050f0 <__assert_fail@plt>
  42b011:	lea    rcx,[rip+0x1d6a8]        # 4486c0 <flatcc_builder_padding_base@@Base+0x200>
  42b018:	lea    rsi,[rip+0x19a71]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  42b01f:	lea    rdi,[rip+0x19b24]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  42b026:	mov    edx,0x73
  42b02b:	call   4050f0 <__assert_fail@plt>
  42b030:	lea    rcx,[rip+0x1d689]        # 4486c0 <flatcc_builder_padding_base@@Base+0x200>
  42b037:	lea    rsi,[rip+0x19a52]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  42b03e:	lea    rdi,[rip+0x19aee]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  42b045:	mov    edx,0x72
  42b04a:	call   4050f0 <__assert_fail@plt>
  42b04f:	call   4050d0 <__stack_chk_fail@plt>
  42b054:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b05f:	nop
  42b060:	push   r15
  42b062:	push   r14
  42b064:	push   r13
  42b066:	push   r12
  42b068:	push   rbp
  42b069:	push   rbx
  42b06a:	sub    rsp,0x18
  42b06e:	mov    rax,QWORD PTR fs:0x28
  42b077:	mov    QWORD PTR [rsp+0x8],rax
  42b07c:	xor    eax,eax
  42b07e:	test   rdi,rdi
  42b081:	je     42b120 <cmetrohash64_2@@Base+0x810>
  42b087:	mov    r12,rdx
  42b08a:	mov    r14,rcx
  42b08d:	mov    r13,QWORD PTR [rsi]
  42b090:	mov    r15,rdi
  42b093:	mov    rcx,rsp
  42b096:	mov    edx,0x2f693b52
  42b09b:	mov    rsi,r14
  42b09e:	mov    rdi,r12
  42b0a1:	call   42a6b0 <cmetrohash64_1@@Base>
  42b0a6:	mov    ebp,DWORD PTR [rsp]
  42b0a9:	sub    r13,0x1
  42b0ad:	mov    rax,r13
  42b0b0:	and    rax,rbp
  42b0b3:	mov    rbx,QWORD PTR [r15+rax*8]
  42b0b7:	test   rbx,rbx
  42b0ba:	je     42b120 <cmetrohash64_2@@Base+0x810>
  42b0bc:	add    rbp,0x1
  42b0c0:	jmp    42b0db <cmetrohash64_2@@Base+0x7cb>
  42b0c2:	nop    WORD PTR [rax+rax*1+0x0]
  42b0c8:	mov    rax,r13
  42b0cb:	and    rax,rbp
  42b0ce:	add    rbp,0x1
  42b0d2:	mov    rbx,QWORD PTR [r15+rax*8]
  42b0d6:	test   rbx,rbx
  42b0d9:	je     42b120 <cmetrohash64_2@@Base+0x810>
  42b0db:	cmp    rbx,0x2
  42b0df:	je     42b0c8 <cmetrohash64_2@@Base+0x7b8>
  42b0e1:	movsxd rax,DWORD PTR [rbx+0x10]
  42b0e5:	cmp    r14,rax
  42b0e8:	jne    42b0c8 <cmetrohash64_2@@Base+0x7b8>
  42b0ea:	mov    rsi,QWORD PTR [rbx+0x8]
  42b0ee:	mov    rdx,r14
  42b0f1:	mov    rdi,r12
  42b0f4:	call   405120 <memcmp@plt>
  42b0f9:	test   eax,eax
  42b0fb:	jne    42b0c8 <cmetrohash64_2@@Base+0x7b8>
  42b0fd:	mov    rcx,QWORD PTR [rsp+0x8]
  42b102:	xor    rcx,QWORD PTR fs:0x28
  42b10b:	mov    rax,rbx
  42b10e:	jne    42b124 <cmetrohash64_2@@Base+0x814>
  42b110:	add    rsp,0x18
  42b114:	pop    rbx
  42b115:	pop    rbp
  42b116:	pop    r12
  42b118:	pop    r13
  42b11a:	pop    r14
  42b11c:	pop    r15
  42b11e:	ret    
  42b11f:	nop
  42b120:	xor    ebx,ebx
  42b122:	jmp    42b0fd <cmetrohash64_2@@Base+0x7ed>
  42b124:	call   4050d0 <__stack_chk_fail@plt>
  42b129:	nop    DWORD PTR [rax+0x0]

000000000042b130 <fb_name_table_clear@@Base>:
  42b130:	jmp    42ab70 <cmetrohash64_2@@Base+0x260>
  42b135:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b140 <fb_name_table_destroy@@Base>:
  42b140:	test   rsi,rsi
  42b143:	push   r14
  42b145:	push   r13
  42b147:	push   r12
  42b149:	push   rbp
  42b14a:	mov    rbp,rdi
  42b14d:	push   rbx
  42b14e:	je     42b187 <fb_name_table_destroy@@Base+0x47>
  42b150:	cmp    QWORD PTR [rdi+0x18],0x0
  42b155:	mov    r12,QWORD PTR [rdi]
  42b158:	je     42b187 <fb_name_table_destroy@@Base+0x47>
  42b15a:	mov    r13,rsi
  42b15d:	mov    r14,rdx
  42b160:	xor    ebx,ebx
  42b162:	nop    WORD PTR [rax+rax*1+0x0]
  42b168:	mov    rsi,QWORD PTR [r12+rbx*8]
  42b16c:	test   rsi,rsi
  42b16f:	je     42b17d <fb_name_table_destroy@@Base+0x3d>
  42b171:	cmp    rsi,0x2
  42b175:	je     42b17d <fb_name_table_destroy@@Base+0x3d>
  42b177:	mov    rdi,r14
  42b17a:	call   r13
  42b17d:	add    rbx,0x1
  42b181:	cmp    rbx,QWORD PTR [rbp+0x18]
  42b185:	jb     42b168 <fb_name_table_destroy@@Base+0x28>
  42b187:	pop    rbx
  42b188:	mov    rdi,rbp
  42b18b:	pop    rbp
  42b18c:	pop    r12
  42b18e:	pop    r13
  42b190:	pop    r14
  42b192:	jmp    42ab70 <cmetrohash64_2@@Base+0x260>
  42b197:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b1a0 <fb_name_table_init@@Base>:
  42b1a0:	push   rbp
  42b1a1:	push   rbx
  42b1a2:	mov    rbp,rdi
  42b1a5:	mov    ebx,0x4
  42b1aa:	sub    rsp,0x8
  42b1ae:	cmp    rsi,0x2
  42b1b2:	jbe    42b1cb <fb_name_table_init@@Base+0x2b>
  42b1b4:	nop    DWORD PTR [rax+0x0]
  42b1b8:	add    rbx,rbx
  42b1bb:	imul   rax,rbx,0xb3
  42b1c2:	shr    rax,0x8
  42b1c6:	cmp    rsi,rax
  42b1c9:	ja     42b1b8 <fb_name_table_init@@Base+0x18>
  42b1cb:	mov    esi,0x8
  42b1d0:	mov    rdi,rbx
  42b1d3:	call   405130 <calloc@plt>
  42b1d8:	test   rax,rax
  42b1db:	mov    QWORD PTR [rbp+0x0],rax
  42b1df:	je     42b1fe <fb_name_table_init@@Base+0x5e>
  42b1e1:	mov    QWORD PTR [rbp+0x8],0x0
  42b1e9:	mov    QWORD PTR [rbp+0x18],rbx
  42b1ed:	xor    eax,eax
  42b1ef:	mov    QWORD PTR [rbp+0x10],0x0
  42b1f7:	add    rsp,0x8
  42b1fb:	pop    rbx
  42b1fc:	pop    rbp
  42b1fd:	ret    
  42b1fe:	mov    eax,0xffffffff
  42b203:	jmp    42b1f7 <fb_name_table_init@@Base+0x57>
  42b205:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b210 <fb_name_table_resize@@Base>:
  42b210:	jmp    42acb0 <cmetrohash64_2@@Base+0x3a0>
  42b215:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b220 <fb_name_table_insert@@Base>:
  42b220:	jmp    42add0 <cmetrohash64_2@@Base+0x4c0>
  42b225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b230 <fb_name_table_insert_item@@Base>:
  42b230:	mov    r8d,edx
  42b233:	movsxd rdx,DWORD PTR [rsi+0x10]
  42b237:	mov    rcx,rsi
  42b23a:	mov    rsi,QWORD PTR [rsi+0x8]
  42b23e:	jmp    42add0 <cmetrohash64_2@@Base+0x4c0>
  42b243:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b24e:	xchg   ax,ax

000000000042b250 <fb_name_table_find@@Base>:
  42b250:	mov    rax,rsi
  42b253:	lea    rsi,[rdi+0x18]
  42b257:	mov    rdi,QWORD PTR [rdi]
  42b25a:	mov    rcx,rdx
  42b25d:	mov    rdx,rax
  42b260:	jmp    42b060 <cmetrohash64_2@@Base+0x750>
  42b265:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b270 <fb_name_table_find_item@@Base>:
  42b270:	movsxd rcx,DWORD PTR [rsi+0x10]
  42b274:	mov    rdx,QWORD PTR [rsi+0x8]
  42b278:	lea    rsi,[rdi+0x18]
  42b27c:	mov    rdi,QWORD PTR [rdi]
  42b27f:	jmp    42b060 <cmetrohash64_2@@Base+0x750>
  42b284:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b28f:	nop

000000000042b290 <fb_name_table_remove@@Base>:
  42b290:	jmp    42abb0 <cmetrohash64_2@@Base+0x2a0>
  42b295:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b2a0 <fb_name_table_remove_item@@Base>:
  42b2a0:	movsxd rdx,DWORD PTR [rsi+0x10]
  42b2a4:	mov    rsi,QWORD PTR [rsi+0x8]
  42b2a8:	jmp    42abb0 <cmetrohash64_2@@Base+0x2a0>
  42b2ad:	nop    DWORD PTR [rax]

000000000042b2b0 <fb_name_table_visit@@Base>:
  42b2b0:	push   r14
  42b2b2:	push   r13
  42b2b4:	push   r12
  42b2b6:	push   rbp
  42b2b7:	push   rbx
  42b2b8:	cmp    QWORD PTR [rdi+0x18],0x0
  42b2bd:	mov    r12,QWORD PTR [rdi]
  42b2c0:	je     42b2ef <fb_name_table_visit@@Base+0x3f>
  42b2c2:	mov    rbp,rdi
  42b2c5:	mov    r14,rsi
  42b2c8:	mov    r13,rdx
  42b2cb:	xor    ebx,ebx
  42b2cd:	nop    DWORD PTR [rax]
  42b2d0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42b2d4:	test   rsi,rsi
  42b2d7:	je     42b2e5 <fb_name_table_visit@@Base+0x35>
  42b2d9:	cmp    rsi,0x2
  42b2dd:	je     42b2e5 <fb_name_table_visit@@Base+0x35>
  42b2df:	mov    rdi,r13
  42b2e2:	call   r14
  42b2e5:	add    rbx,0x1
  42b2e9:	cmp    rbx,QWORD PTR [rbp+0x18]
  42b2ed:	jb     42b2d0 <fb_name_table_visit@@Base+0x20>
  42b2ef:	pop    rbx
  42b2f0:	pop    rbp
  42b2f1:	pop    r12
  42b2f3:	pop    r13
  42b2f5:	pop    r14
  42b2f7:	ret    
  42b2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b300:	push   rbx
  42b301:	mov    rbx,rdi
  42b304:	mov    rdi,QWORD PTR [rdi]
  42b307:	test   rdi,rdi
  42b30a:	je     42b311 <fb_name_table_visit@@Base+0x61>
  42b30c:	call   405040 <free@plt>
  42b311:	mov    QWORD PTR [rbx],0x0
  42b318:	mov    QWORD PTR [rbx+0x8],0x0
  42b320:	mov    QWORD PTR [rbx+0x10],0x0
  42b328:	mov    QWORD PTR [rbx+0x18],0x0
  42b330:	pop    rbx
  42b331:	ret    
  42b332:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b33d:	nop    DWORD PTR [rax]
  42b340:	movzx  eax,WORD PTR [rdi+0x10]
  42b344:	cmp    ax,0x5
  42b348:	je     42b398 <fb_name_table_visit@@Base+0xe8>
  42b34a:	cmp    ax,0x6
  42b34e:	je     42b378 <fb_name_table_visit@@Base+0xc8>
  42b350:	cmp    ax,0x4
  42b354:	je     42b360 <fb_name_table_visit@@Base+0xb0>
  42b356:	xor    eax,eax
  42b358:	ret    
  42b359:	nop    DWORD PTR [rax+0x0]
  42b360:	mov    rax,QWORD PTR [rdi]
  42b363:	mov    edx,0x9e3779b1
  42b368:	xor    rax,0x2f693b56
  42b36e:	imul   rax,rdx
  42b372:	ret    
  42b373:	nop    DWORD PTR [rax+rax*1+0x0]
  42b378:	movzx  eax,BYTE PTR [rdi]
  42b37b:	mov    edx,0x9e3779b1
  42b380:	xor    eax,0x6
  42b383:	movzx  eax,al
  42b386:	xor    rax,0x2f693b52
  42b38c:	imul   rax,rdx
  42b390:	ret    
  42b391:	nop    DWORD PTR [rax+0x0]
  42b398:	mov    rax,QWORD PTR [rdi]
  42b39b:	mov    edx,0x9e3779b1
  42b3a0:	xor    rax,0x2f693b57
  42b3a6:	imul   rax,rdx
  42b3aa:	ret    
  42b3ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42b3b0:	test   rdi,rdi
  42b3b3:	je     42b445 <fb_name_table_visit@@Base+0x195>
  42b3b9:	mov    r10,QWORD PTR [rsi]
  42b3bc:	mov    r8,rdi
  42b3bf:	mov    rdi,rdx
  42b3c2:	mov    r9,rdx
  42b3c5:	sub    r10,0x1
  42b3c9:	call   42b340 <fb_name_table_visit@@Base+0x90>
  42b3ce:	mov    rdx,r10
  42b3d1:	and    rdx,rax
  42b3d4:	mov    rcx,QWORD PTR [r8+rdx*8]
  42b3d8:	test   rcx,rcx
  42b3db:	je     42b42d <fb_name_table_visit@@Base+0x17d>
  42b3dd:	add    rax,0x1
  42b3e1:	jmp    42b3fb <fb_name_table_visit@@Base+0x14b>
  42b3e3:	nop    DWORD PTR [rax+rax*1+0x0]
  42b3e8:	mov    rcx,r10
  42b3eb:	and    rcx,rax
  42b3ee:	add    rax,0x1
  42b3f2:	mov    rcx,QWORD PTR [r8+rcx*8]
  42b3f6:	test   rcx,rcx
  42b3f9:	je     42b42d <fb_name_table_visit@@Base+0x17d>
  42b3fb:	cmp    rcx,0x2
  42b3ff:	je     42b3e8 <fb_name_table_visit@@Base+0x138>
  42b401:	movzx  esi,WORD PTR [r9+0x10]
  42b406:	cmp    si,WORD PTR [rcx+0x10]
  42b40a:	jne    42b3e8 <fb_name_table_visit@@Base+0x138>
  42b40c:	cmp    si,0x5
  42b410:	je     42b41e <fb_name_table_visit@@Base+0x16e>
  42b412:	cmp    si,0x6
  42b416:	je     42b438 <fb_name_table_visit@@Base+0x188>
  42b418:	cmp    si,0x4
  42b41c:	jne    42b3e8 <fb_name_table_visit@@Base+0x138>
  42b41e:	xor    edx,edx
  42b420:	mov    rdi,QWORD PTR [rcx]
  42b423:	cmp    QWORD PTR [r9],rdi
  42b426:	sete   dl
  42b429:	test   edx,edx
  42b42b:	je     42b3e8 <fb_name_table_visit@@Base+0x138>
  42b42d:	mov    rax,rcx
  42b430:	ret    
  42b431:	nop    DWORD PTR [rax+0x0]
  42b438:	movzx  edi,BYTE PTR [rcx]
  42b43b:	xor    edx,edx
  42b43d:	cmp    BYTE PTR [r9],dil
  42b440:	sete   dl
  42b443:	jmp    42b429 <fb_name_table_visit@@Base+0x179>
  42b445:	xor    ecx,ecx
  42b447:	jmp    42b42d <fb_name_table_visit@@Base+0x17d>
  42b449:	nop    DWORD PTR [rax+0x0]
  42b450:	push   r15
  42b452:	push   r14
  42b454:	push   rbp
  42b455:	push   rbx
  42b456:	mov    rbx,QWORD PTR [rdi]
  42b459:	test   rbx,rbx
  42b45c:	je     42b4fd <fb_name_table_visit@@Base+0x24d>
  42b462:	mov    rax,QWORD PTR [rdi+0x18]
  42b466:	mov    rbp,rdi
  42b469:	mov    rdi,rsi
  42b46c:	mov    r14,rsi
  42b46f:	lea    r15,[rax-0x1]
  42b473:	call   42b340 <fb_name_table_visit@@Base+0x90>
  42b478:	mov    rdx,r15
  42b47b:	and    rdx,rax
  42b47e:	lea    r8,[rbx+rdx*8]
  42b482:	mov    rdx,QWORD PTR [r8]
  42b485:	test   rdx,rdx
  42b488:	je     42b4e4 <fb_name_table_visit@@Base+0x234>
  42b48a:	add    rax,0x1
  42b48e:	jmp    42b4a6 <fb_name_table_visit@@Base+0x1f6>
  42b490:	mov    rdx,r15
  42b493:	and    rdx,rax
  42b496:	add    rax,0x1
  42b49a:	lea    r8,[rbx+rdx*8]
  42b49e:	mov    rdx,QWORD PTR [r8]
  42b4a1:	test   rdx,rdx
  42b4a4:	je     42b4e4 <fb_name_table_visit@@Base+0x234>
  42b4a6:	cmp    rdx,0x2
  42b4aa:	je     42b490 <fb_name_table_visit@@Base+0x1e0>
  42b4ac:	movzx  ecx,WORD PTR [r14+0x10]
  42b4b1:	cmp    cx,WORD PTR [rdx+0x10]
  42b4b5:	jne    42b490 <fb_name_table_visit@@Base+0x1e0>
  42b4b7:	cmp    cx,0x5
  42b4bb:	je     42b4c9 <fb_name_table_visit@@Base+0x219>
  42b4bd:	cmp    cx,0x6
  42b4c1:	je     42b4f0 <fb_name_table_visit@@Base+0x240>
  42b4c3:	cmp    cx,0x4
  42b4c7:	jne    42b490 <fb_name_table_visit@@Base+0x1e0>
  42b4c9:	xor    ecx,ecx
  42b4cb:	mov    rsi,QWORD PTR [rdx]
  42b4ce:	cmp    QWORD PTR [r14],rsi
  42b4d1:	sete   cl
  42b4d4:	test   ecx,ecx
  42b4d6:	je     42b490 <fb_name_table_visit@@Base+0x1e0>
  42b4d8:	mov    QWORD PTR [r8],0x2
  42b4df:	sub    QWORD PTR [rbp+0x10],0x1
  42b4e4:	pop    rbx
  42b4e5:	mov    rax,rdx
  42b4e8:	pop    rbp
  42b4e9:	pop    r14
  42b4eb:	pop    r15
  42b4ed:	ret    
  42b4ee:	xchg   ax,ax
  42b4f0:	movzx  edi,BYTE PTR [rdx]
  42b4f3:	xor    ecx,ecx
  42b4f5:	cmp    BYTE PTR [r14],dil
  42b4f8:	sete   cl
  42b4fb:	jmp    42b4d4 <fb_name_table_visit@@Base+0x224>
  42b4fd:	xor    edx,edx
  42b4ff:	jmp    42b4e4 <fb_name_table_visit@@Base+0x234>
  42b501:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b50c:	nop    DWORD PTR [rax+0x0]
  42b510:	push   r13
  42b512:	push   r12
  42b514:	push   rbp
  42b515:	push   rbx
  42b516:	sub    rsp,0x8
  42b51a:	test   rdx,rdx
  42b51d:	je     42b723 <fb_name_table_visit@@Base+0x473>
  42b523:	cmp    rdx,0x2
  42b527:	mov    r13,rdx
  42b52a:	je     42b6d6 <fb_name_table_visit@@Base+0x426>
  42b530:	cmp    rdx,0x1
  42b534:	je     42b742 <fb_name_table_visit@@Base+0x492>
  42b53a:	mov    ebx,ecx
  42b53c:	mov    rcx,QWORD PTR [rdi+0x18]
  42b540:	mov    rbp,rsi
  42b543:	mov    rsi,QWORD PTR [rdi+0x10]
  42b547:	mov    r12,rdi
  42b54a:	imul   rax,rcx,0xb3
  42b551:	shr    rax,0x8
  42b555:	cmp    rsi,rax
  42b558:	jae    42b670 <fb_name_table_visit@@Base+0x3c0>
  42b55e:	mov    rdi,rbp
  42b561:	sub    rcx,0x1
  42b565:	mov    r9,QWORD PTR [r12]
  42b569:	call   42b340 <fb_name_table_visit@@Base+0x90>
  42b56e:	lea    esi,[rbx-0x2]
  42b571:	mov    rdx,rcx
  42b574:	and    rdx,rax
  42b577:	cmp    esi,0x1
  42b57a:	jbe    42b68b <fb_name_table_visit@@Base+0x3db>
  42b580:	lea    rdi,[r9+rdx*8]
  42b584:	add    rax,0x1
  42b588:	xor    edx,edx
  42b58a:	mov    rsi,QWORD PTR [rdi]
  42b58d:	test   rsi,rsi
  42b590:	jne    42b5ba <fb_name_table_visit@@Base+0x30a>
  42b592:	jmp    42b686 <fb_name_table_visit@@Base+0x3d6>
  42b597:	nop    WORD PTR [rax+rax*1+0x0]
  42b5a0:	mov    rsi,rcx
  42b5a3:	and    rsi,rax
  42b5a6:	add    rax,0x1
  42b5aa:	lea    rdi,[r9+rsi*8]
  42b5ae:	mov    rsi,QWORD PTR [rdi]
  42b5b1:	test   rsi,rsi
  42b5b4:	je     42b650 <fb_name_table_visit@@Base+0x3a0>
  42b5ba:	cmp    rsi,0x2
  42b5be:	je     42b610 <fb_name_table_visit@@Base+0x360>
  42b5c0:	movzx  r8d,WORD PTR [rbp+0x10]
  42b5c5:	cmp    r8w,WORD PTR [rsi+0x10]
  42b5ca:	jne    42b5a0 <fb_name_table_visit@@Base+0x2f0>
  42b5cc:	cmp    r8w,0x5
  42b5d1:	je     42b638 <fb_name_table_visit@@Base+0x388>
  42b5d3:	cmp    r8w,0x6
  42b5d8:	je     42b620 <fb_name_table_visit@@Base+0x370>
  42b5da:	cmp    r8w,0x4
  42b5df:	jne    42b5a0 <fb_name_table_visit@@Base+0x2f0>
  42b5e1:	xor    r8d,r8d
  42b5e4:	mov    r10,QWORD PTR [rsi]
  42b5e7:	cmp    QWORD PTR [rbp+0x0],r10
  42b5eb:	sete   r8b
  42b5ef:	test   r8d,r8d
  42b5f2:	je     42b5a0 <fb_name_table_visit@@Base+0x2f0>
  42b5f4:	test   ebx,ebx
  42b5f6:	jne    42b5fb <fb_name_table_visit@@Base+0x34b>
  42b5f8:	mov    QWORD PTR [rdi],r13
  42b5fb:	add    rsp,0x8
  42b5ff:	mov    rax,rsi
  42b602:	pop    rbx
  42b603:	pop    rbp
  42b604:	pop    r12
  42b606:	pop    r13
  42b608:	ret    
  42b609:	nop    DWORD PTR [rax+0x0]
  42b610:	test   rdx,rdx
  42b613:	cmove  rdx,rdi
  42b617:	jmp    42b5a0 <fb_name_table_visit@@Base+0x2f0>
  42b619:	nop    DWORD PTR [rax+0x0]
  42b620:	movzx  r10d,BYTE PTR [rsi]
  42b624:	xor    r8d,r8d
  42b627:	cmp    BYTE PTR [rbp+0x0],r10b
  42b62b:	sete   r8b
  42b62f:	jmp    42b5ef <fb_name_table_visit@@Base+0x33f>
  42b631:	nop    DWORD PTR [rax+0x0]
  42b638:	xor    r8d,r8d
  42b63b:	mov    r11,QWORD PTR [rsi]
  42b63e:	cmp    QWORD PTR [rbp+0x0],r11
  42b642:	sete   r8b
  42b646:	jmp    42b5ef <fb_name_table_visit@@Base+0x33f>
  42b648:	nop    DWORD PTR [rax+rax*1+0x0]
  42b650:	test   rdx,rdx
  42b653:	cmove  rdx,rdi
  42b657:	add    QWORD PTR [r12+0x10],0x1
  42b65d:	xor    esi,esi
  42b65f:	mov    QWORD PTR [rdx],r13
  42b662:	add    rsp,0x8
  42b666:	mov    rax,rsi
  42b669:	pop    rbx
  42b66a:	pop    rbp
  42b66b:	pop    r12
  42b66d:	pop    r13
  42b66f:	ret    
  42b670:	add    rsi,rsi
  42b673:	call   42b770 <fb_name_table_visit@@Base+0x4c0>
  42b678:	test   eax,eax
  42b67a:	jne    42b6f5 <fb_name_table_visit@@Base+0x445>
  42b67c:	mov    rcx,QWORD PTR [r12+0x18]
  42b681:	jmp    42b55e <fb_name_table_visit@@Base+0x2ae>
  42b686:	mov    rdx,rdi
  42b689:	jmp    42b657 <fb_name_table_visit@@Base+0x3a7>
  42b68b:	lea    rsi,[r9+rdx*8]
  42b68f:	add    QWORD PTR [r12+0x10],0x1
  42b695:	mov    rdx,QWORD PTR [rsi]
  42b698:	test   rdx,rdx
  42b69b:	je     42b6cc <fb_name_table_visit@@Base+0x41c>
  42b69d:	cmp    rdx,0x2
  42b6a1:	je     42b6cc <fb_name_table_visit@@Base+0x41c>
  42b6a3:	add    rax,0x1
  42b6a7:	jmp    42b6b6 <fb_name_table_visit@@Base+0x406>
  42b6a9:	nop    DWORD PTR [rax+0x0]
  42b6b0:	cmp    rdx,0x2
  42b6b4:	je     42b6cc <fb_name_table_visit@@Base+0x41c>
  42b6b6:	mov    rdx,rcx
  42b6b9:	and    rdx,rax
  42b6bc:	add    rax,0x1
  42b6c0:	lea    rsi,[r9+rdx*8]
  42b6c4:	mov    rdx,QWORD PTR [rsi]
  42b6c7:	test   rdx,rdx
  42b6ca:	jne    42b6b0 <fb_name_table_visit@@Base+0x400>
  42b6cc:	mov    QWORD PTR [rsi],r13
  42b6cf:	xor    esi,esi
  42b6d1:	jmp    42b5fb <fb_name_table_visit@@Base+0x34b>
  42b6d6:	lea    rcx,[rip+0x1d00b]        # 4486e8 <fb_name_table_missing@@Base+0x8>
  42b6dd:	lea    rsi,[rip+0x193ac]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  42b6e4:	lea    rdi,[rip+0x1945f]        # 444b4a <_IO_stdin_used@@Base+0x18b4a>
  42b6eb:	mov    edx,0x73
  42b6f0:	call   4050f0 <__assert_fail@plt>
  42b6f5:	mov    rax,QWORD PTR [rip+0x248ec]        # 44ffe8 <stderr@GLIBC_2.2.5>
  42b6fc:	lea    rcx,[rip+0x193fd]        # 444b00 <_IO_stdin_used@@Base+0x18b00>
  42b703:	lea    rdx,[rip+0x1946c]        # 444b76 <_IO_stdin_used@@Base+0x18b76>
  42b70a:	mov    esi,0x1
  42b70f:	mov    rdi,QWORD PTR [rax]
  42b712:	xor    eax,eax
  42b714:	call   4051f0 <__fprintf_chk@plt>
  42b719:	mov    edi,0x1
  42b71e:	call   4051d0 <exit@plt>
  42b723:	lea    rcx,[rip+0x1cfbe]        # 4486e8 <fb_name_table_missing@@Base+0x8>
  42b72a:	lea    rsi,[rip+0x1935f]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  42b731:	lea    rdi,[rip+0x193fb]        # 444b33 <_IO_stdin_used@@Base+0x18b33>
  42b738:	mov    edx,0x72
  42b73d:	call   4050f0 <__assert_fail@plt>
  42b742:	lea    rcx,[rip+0x1cf9f]        # 4486e8 <fb_name_table_missing@@Base+0x8>
  42b749:	lea    rsi,[rip+0x19340]        # 444a90 <_IO_stdin_used@@Base+0x18a90>
  42b750:	lea    rdi,[rip+0x1940a]        # 444b61 <_IO_stdin_used@@Base+0x18b61>
  42b757:	mov    edx,0x74
  42b75c:	call   4050f0 <__assert_fail@plt>
  42b761:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b76c:	nop    DWORD PTR [rax+0x0]
  42b770:	push   r13
  42b772:	push   r12
  42b774:	push   rbp
  42b775:	push   rbx
  42b776:	mov    rbp,rdi
  42b779:	mov    ebx,0x4
  42b77e:	sub    rsp,0x38
  42b782:	mov    r12,QWORD PTR [rdi]
  42b785:	mov    rax,QWORD PTR fs:0x28
  42b78e:	mov    QWORD PTR [rsp+0x28],rax
  42b793:	xor    eax,eax
  42b795:	cmp    QWORD PTR [rdi+0x10],rsi
  42b799:	cmovae rsi,QWORD PTR [rdi+0x10]
  42b79e:	cmp    rsi,0x2
  42b7a2:	jbe    42b7bb <fb_name_table_visit@@Base+0x50b>
  42b7a4:	nop    DWORD PTR [rax+0x0]
  42b7a8:	add    rbx,rbx
  42b7ab:	imul   rax,rbx,0xb3
  42b7b2:	shr    rax,0x8
  42b7b6:	cmp    rsi,rax
  42b7b9:	ja     42b7a8 <fb_name_table_visit@@Base+0x4f8>
  42b7bb:	mov    esi,0x8
  42b7c0:	mov    rdi,rbx
  42b7c3:	call   405130 <calloc@plt>
  42b7c8:	test   rax,rax
  42b7cb:	mov    QWORD PTR [rsp],rax
  42b7cf:	je     42b871 <fb_name_table_visit@@Base+0x5c1>
  42b7d5:	mov    QWORD PTR [rsp+0x18],rbx
  42b7da:	xor    ebx,ebx
  42b7dc:	cmp    QWORD PTR [rbp+0x18],0x0
  42b7e1:	mov    QWORD PTR [rsp+0x8],0x0
  42b7ea:	mov    QWORD PTR [rsp+0x10],0x0
  42b7f3:	mov    r13,rsp
  42b7f6:	je     42b829 <fb_name_table_visit@@Base+0x579>
  42b7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b800:	mov    rsi,QWORD PTR [r12+rbx*8]
  42b804:	test   rsi,rsi
  42b807:	je     42b81f <fb_name_table_visit@@Base+0x56f>
  42b809:	cmp    rsi,0x2
  42b80d:	je     42b81f <fb_name_table_visit@@Base+0x56f>
  42b80f:	mov    ecx,0x3
  42b814:	mov    rdx,rsi
  42b817:	mov    rdi,r13
  42b81a:	call   42b510 <fb_name_table_visit@@Base+0x260>
  42b81f:	add    rbx,0x1
  42b823:	cmp    QWORD PTR [rbp+0x18],rbx
  42b827:	ja     42b800 <fb_name_table_visit@@Base+0x550>
  42b829:	mov    rdi,rbp
  42b82c:	call   42b300 <fb_name_table_visit@@Base+0x50>
  42b831:	mov    rax,QWORD PTR [rsp]
  42b835:	mov    QWORD PTR [rbp+0x0],rax
  42b839:	mov    rax,QWORD PTR [rsp+0x8]
  42b83e:	mov    QWORD PTR [rbp+0x8],rax
  42b842:	mov    rax,QWORD PTR [rsp+0x10]
  42b847:	mov    QWORD PTR [rbp+0x10],rax
  42b84b:	mov    rax,QWORD PTR [rsp+0x18]
  42b850:	mov    QWORD PTR [rbp+0x18],rax
  42b854:	xor    eax,eax
  42b856:	mov    rdx,QWORD PTR [rsp+0x28]
  42b85b:	xor    rdx,QWORD PTR fs:0x28
  42b864:	jne    42b878 <fb_name_table_visit@@Base+0x5c8>
  42b866:	add    rsp,0x38
  42b86a:	pop    rbx
  42b86b:	pop    rbp
  42b86c:	pop    r12
  42b86e:	pop    r13
  42b870:	ret    
  42b871:	mov    eax,0xffffffff
  42b876:	jmp    42b856 <fb_name_table_visit@@Base+0x5a6>
  42b878:	call   4050d0 <__stack_chk_fail@plt>
  42b87d:	nop    DWORD PTR [rax]

000000000042b880 <fb_value_set_clear@@Base>:
  42b880:	jmp    42b300 <fb_name_table_visit@@Base+0x50>
  42b885:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b890 <fb_value_set_destroy@@Base>:
  42b890:	test   rsi,rsi
  42b893:	push   r14
  42b895:	push   r13
  42b897:	push   r12
  42b899:	push   rbp
  42b89a:	mov    rbp,rdi
  42b89d:	push   rbx
  42b89e:	je     42b8d7 <fb_value_set_destroy@@Base+0x47>
  42b8a0:	cmp    QWORD PTR [rdi+0x18],0x0
  42b8a5:	mov    r12,QWORD PTR [rdi]
  42b8a8:	je     42b8d7 <fb_value_set_destroy@@Base+0x47>
  42b8aa:	mov    r13,rsi
  42b8ad:	mov    r14,rdx
  42b8b0:	xor    ebx,ebx
  42b8b2:	nop    WORD PTR [rax+rax*1+0x0]
  42b8b8:	mov    rsi,QWORD PTR [r12+rbx*8]
  42b8bc:	test   rsi,rsi
  42b8bf:	je     42b8cd <fb_value_set_destroy@@Base+0x3d>
  42b8c1:	cmp    rsi,0x2
  42b8c5:	je     42b8cd <fb_value_set_destroy@@Base+0x3d>
  42b8c7:	mov    rdi,r14
  42b8ca:	call   r13
  42b8cd:	add    rbx,0x1
  42b8d1:	cmp    rbx,QWORD PTR [rbp+0x18]
  42b8d5:	jb     42b8b8 <fb_value_set_destroy@@Base+0x28>
  42b8d7:	pop    rbx
  42b8d8:	mov    rdi,rbp
  42b8db:	pop    rbp
  42b8dc:	pop    r12
  42b8de:	pop    r13
  42b8e0:	pop    r14
  42b8e2:	jmp    42b300 <fb_name_table_visit@@Base+0x50>
  42b8e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b8f0 <fb_value_set_init@@Base>:
  42b8f0:	push   rbp
  42b8f1:	push   rbx
  42b8f2:	mov    rbp,rdi
  42b8f5:	mov    ebx,0x4
  42b8fa:	sub    rsp,0x8
  42b8fe:	cmp    rsi,0x2
  42b902:	jbe    42b91b <fb_value_set_init@@Base+0x2b>
  42b904:	nop    DWORD PTR [rax+0x0]
  42b908:	add    rbx,rbx
  42b90b:	imul   rax,rbx,0xb3
  42b912:	shr    rax,0x8
  42b916:	cmp    rsi,rax
  42b919:	ja     42b908 <fb_value_set_init@@Base+0x18>
  42b91b:	mov    esi,0x8
  42b920:	mov    rdi,rbx
  42b923:	call   405130 <calloc@plt>
  42b928:	test   rax,rax
  42b92b:	mov    QWORD PTR [rbp+0x0],rax
  42b92f:	je     42b94e <fb_value_set_init@@Base+0x5e>
  42b931:	mov    QWORD PTR [rbp+0x8],0x0
  42b939:	mov    QWORD PTR [rbp+0x18],rbx
  42b93d:	xor    eax,eax
  42b93f:	mov    QWORD PTR [rbp+0x10],0x0
  42b947:	add    rsp,0x8
  42b94b:	pop    rbx
  42b94c:	pop    rbp
  42b94d:	ret    
  42b94e:	mov    eax,0xffffffff
  42b953:	jmp    42b947 <fb_value_set_init@@Base+0x57>
  42b955:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b960 <fb_value_set_resize@@Base>:
  42b960:	jmp    42b770 <fb_name_table_visit@@Base+0x4c0>
  42b965:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b970 <fb_value_set_insert@@Base>:
  42b970:	mov    rdx,rcx
  42b973:	mov    ecx,r8d
  42b976:	jmp    42b510 <fb_name_table_visit@@Base+0x260>
  42b97b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b980 <fb_value_set_insert_item@@Base>:
  42b980:	mov    ecx,edx
  42b982:	mov    rdx,rsi
  42b985:	jmp    42b510 <fb_name_table_visit@@Base+0x260>
  42b98a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b990 <fb_value_set_find@@Base>:
  42b990:	mov    rdx,rsi
  42b993:	lea    rsi,[rdi+0x18]
  42b997:	mov    rdi,QWORD PTR [rdi]
  42b99a:	jmp    42b3b0 <fb_name_table_visit@@Base+0x100>
  42b99f:	nop

000000000042b9a0 <fb_value_set_find_item@@Base>:
  42b9a0:	mov    rdx,rsi
  42b9a3:	lea    rsi,[rdi+0x18]
  42b9a7:	mov    rdi,QWORD PTR [rdi]
  42b9aa:	jmp    42b3b0 <fb_name_table_visit@@Base+0x100>
  42b9af:	nop

000000000042b9b0 <fb_value_set_remove@@Base>:
  42b9b0:	jmp    42b450 <fb_name_table_visit@@Base+0x1a0>
  42b9b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b9c0 <fb_value_set_remove_item@@Base>:
  42b9c0:	jmp    42b450 <fb_name_table_visit@@Base+0x1a0>
  42b9c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b9d0 <fb_value_set_visit@@Base>:
  42b9d0:	push   r14
  42b9d2:	push   r13
  42b9d4:	push   r12
  42b9d6:	push   rbp
  42b9d7:	push   rbx
  42b9d8:	cmp    QWORD PTR [rdi+0x18],0x0
  42b9dd:	mov    r12,QWORD PTR [rdi]
  42b9e0:	je     42ba0f <fb_value_set_visit@@Base+0x3f>
  42b9e2:	mov    rbp,rdi
  42b9e5:	mov    r14,rsi
  42b9e8:	mov    r13,rdx
  42b9eb:	xor    ebx,ebx
  42b9ed:	nop    DWORD PTR [rax]
  42b9f0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42b9f4:	test   rsi,rsi
  42b9f7:	je     42ba05 <fb_value_set_visit@@Base+0x35>
  42b9f9:	cmp    rsi,0x2
  42b9fd:	je     42ba05 <fb_value_set_visit@@Base+0x35>
  42b9ff:	mov    rdi,r13
  42ba02:	call   r14
  42ba05:	add    rbx,0x1
  42ba09:	cmp    rbx,QWORD PTR [rbp+0x18]
  42ba0d:	jb     42b9f0 <fb_value_set_visit@@Base+0x20>
  42ba0f:	pop    rbx
  42ba10:	pop    rbp
  42ba11:	pop    r12
  42ba13:	pop    r13
  42ba15:	pop    r14
  42ba17:	ret    
  42ba18:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ba20 <__libc_csu_init@@Base>:
  42ba20:	endbr64 
  42ba24:	push   r15
  42ba26:	lea    r15,[rip+0x2435b]        # 44fd88 <fb_value_set_missing@@Base+0x7680>
  42ba2d:	push   r14
  42ba2f:	mov    r14,rdx
  42ba32:	push   r13
  42ba34:	mov    r13,rsi
  42ba37:	push   r12
  42ba39:	mov    r12d,edi
  42ba3c:	push   rbp
  42ba3d:	lea    rbp,[rip+0x2434c]        # 44fd90 <fb_value_set_missing@@Base+0x7688>
  42ba44:	push   rbx
  42ba45:	sub    rbp,r15
  42ba48:	sub    rsp,0x8
  42ba4c:	call   405000 <__ctype_toupper_loc@plt-0x30>
  42ba51:	sar    rbp,0x3
  42ba55:	je     42ba76 <__libc_csu_init@@Base+0x56>
  42ba57:	xor    ebx,ebx
  42ba59:	nop    DWORD PTR [rax+0x0]
  42ba60:	mov    rdx,r14
  42ba63:	mov    rsi,r13
  42ba66:	mov    edi,r12d
  42ba69:	call   QWORD PTR [r15+rbx*8]
  42ba6d:	add    rbx,0x1
  42ba71:	cmp    rbp,rbx
  42ba74:	jne    42ba60 <__libc_csu_init@@Base+0x40>
  42ba76:	add    rsp,0x8
  42ba7a:	pop    rbx
  42ba7b:	pop    rbp
  42ba7c:	pop    r12
  42ba7e:	pop    r13
  42ba80:	pop    r14
  42ba82:	pop    r15
  42ba84:	ret    
  42ba85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042ba90 <__libc_csu_fini@@Base>:
  42ba90:	endbr64 
  42ba94:	ret    

Disassembly of section .fini:

000000000042ba98 <.fini>:
  42ba98:	endbr64 
  42ba9c:	sub    rsp,0x8
  42baa0:	add    rsp,0x8
  42baa4:	ret    
