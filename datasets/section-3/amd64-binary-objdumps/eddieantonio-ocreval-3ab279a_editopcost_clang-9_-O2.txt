
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe1]        # 403ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <error@@Base+0x23b8>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <error@@Base+0x23c0>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <unlink@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <unlink@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncmp@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <strncmp@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <getpid@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <getpid@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <fclose@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <fclose@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <strlen@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <strlen@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <printf@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <printf@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <fgets@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x2faa]        # 404050 <fgets@GLIBC_2.2.5>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <calloc@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x2fa2]        # 404058 <calloc@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <fprintf@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x2f9a]        # 404060 <fprintf@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <__sysv_signal@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x2f92]        # 404068 <__sysv_signal@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <__xstat@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x2f8a]        # 404070 <__xstat@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <__isoc99_sscanf@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x2f82]        # 404078 <__isoc99_sscanf@GLIBC_2.7>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <fopen@plt>:
  401100:	jmp    QWORD PTR [rip+0x2f7a]        # 404080 <fopen@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <sprintf@plt>:
  401110:	jmp    QWORD PTR [rip+0x2f72]        # 404088 <sprintf@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <exit@plt>:
  401120:	jmp    QWORD PTR [rip+0x2f6a]        # 404090 <exit@GLIBC_2.2.5>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <fwrite@plt>:
  401130:	jmp    QWORD PTR [rip+0x2f62]        # 404098 <fwrite@GLIBC_2.2.5>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <strdup@plt>:
  401140:	jmp    QWORD PTR [rip+0x2f5a]        # 4040a0 <strdup@GLIBC_2.2.5>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401150 <error@@Base-0xb00>:
  401150:	endbr64 
  401154:	xor    ebp,ebp
  401156:	mov    r9,rdx
  401159:	pop    rsi
  40115a:	mov    rdx,rsp
  40115d:	and    rsp,0xfffffffffffffff0
  401161:	push   rax
  401162:	push   rsp
  401163:	mov    r8,0x401e70
  40116a:	mov    rcx,0x401e00
  401171:	mov    rdi,0x401340
  401178:	call   QWORD PTR [rip+0x2e6a]        # 403fe8 <error@@Base+0x2398>
  40117e:	hlt    
  40117f:	nop
  401180:	endbr64 
  401184:	ret    
  401185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40118f:	nop
  401190:	mov    eax,0x4040c0
  401195:	cmp    rax,0x4040c0
  40119b:	je     4011b0 <strdup@plt+0x70>
  40119d:	mov    eax,0x0
  4011a2:	test   rax,rax
  4011a5:	je     4011b0 <strdup@plt+0x70>
  4011a7:	mov    edi,0x4040c0
  4011ac:	jmp    rax
  4011ae:	xchg   ax,ax
  4011b0:	ret    
  4011b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011bc:	nop    DWORD PTR [rax+0x0]
  4011c0:	mov    esi,0x4040c0
  4011c5:	sub    rsi,0x4040c0
  4011cc:	mov    rax,rsi
  4011cf:	shr    rsi,0x3f
  4011d3:	sar    rax,0x3
  4011d7:	add    rsi,rax
  4011da:	sar    rsi,1
  4011dd:	je     4011f0 <strdup@plt+0xb0>
  4011df:	mov    eax,0x0
  4011e4:	test   rax,rax
  4011e7:	je     4011f0 <strdup@plt+0xb0>
  4011e9:	mov    edi,0x4040c0
  4011ee:	jmp    rax
  4011f0:	ret    
  4011f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	endbr64 
  401204:	cmp    BYTE PTR [rip+0x2eb5],0x0        # 4040c0 <error@@Base+0x2470>
  40120b:	jne    401220 <strdup@plt+0xe0>
  40120d:	push   rbp
  40120e:	mov    rbp,rsp
  401211:	call   401190 <strdup@plt+0x50>
  401216:	mov    BYTE PTR [rip+0x2ea3],0x1        # 4040c0 <error@@Base+0x2470>
  40121d:	pop    rbp
  40121e:	ret    
  40121f:	nop
  401220:	ret    
  401221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40122c:	nop    DWORD PTR [rax+0x0]
  401230:	endbr64 
  401234:	jmp    4011c0 <strdup@plt+0x80>
  401236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401240:	lea    rax,[rip+0x2ef1]        # 404138 <error@@Base+0x24e8>
  401247:	lea    rcx,[rip+0x322a]        # 404478 <error@@Base+0x2828>
  40124e:	vmovdqu xmm0,XMMWORD PTR [rcx]
  401252:	vpsubq xmm0,xmm0,XMMWORD PTR [rax]
  401256:	vmovdqu XMMWORD PTR [rcx],xmm0
  40125a:	mov    rdx,QWORD PTR [rax+0x10]
  40125e:	sub    QWORD PTR [rcx+0x10],rdx
  401262:	mov    edx,0x14
  401267:	nop    WORD PTR [rax+rax*1+0x0]
  401270:	vmovdqu ymm0,YMMWORD PTR [rcx+rdx*8-0x80]
  401276:	vmovdqu ymm1,YMMWORD PTR [rcx+rdx*8-0x60]
  40127c:	vmovdqu ymm2,YMMWORD PTR [rcx+rdx*8-0x40]
  401282:	vmovdqu ymm3,YMMWORD PTR [rcx+rdx*8-0x20]
  401288:	vpsubq ymm0,ymm0,YMMWORD PTR [rax+rdx*8-0x80]
  40128e:	vmovdqu YMMWORD PTR [rcx+rdx*8-0x80],ymm0
  401294:	vpsubq ymm0,ymm1,YMMWORD PTR [rax+rdx*8-0x60]
  40129a:	vmovdqu YMMWORD PTR [rcx+rdx*8-0x60],ymm0
  4012a0:	vpsubq ymm0,ymm2,YMMWORD PTR [rax+rdx*8-0x40]
  4012a6:	vmovdqu YMMWORD PTR [rcx+rdx*8-0x40],ymm0
  4012ac:	vpsubq ymm0,ymm3,YMMWORD PTR [rax+rdx*8-0x20]
  4012b2:	vmovdqu YMMWORD PTR [rcx+rdx*8-0x20],ymm0
  4012b8:	vmovdqu ymm0,YMMWORD PTR [rcx+rdx*8]
  4012bd:	vpsubq ymm0,ymm0,YMMWORD PTR [rax+rdx*8]
  4012c2:	vmovdqu YMMWORD PTR [rcx+rdx*8],ymm0
  4012c7:	add    rdx,0x14
  4012cb:	cmp    rdx,0x78
  4012cf:	jne    401270 <strdup@plt+0x130>
  4012d1:	vzeroupper 
  4012d4:	ret    
  4012d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012df:	nop
  4012e0:	push   r15
  4012e2:	push   r14
  4012e4:	push   r13
  4012e6:	push   r12
  4012e8:	push   rbx
  4012e9:	lea    r15,[rip+0x3188]        # 404478 <error@@Base+0x2828>
  4012f0:	mov    r12,QWORD PTR [r15]
  4012f3:	mov    r13,QWORD PTR [r15+0x10]
  4012f7:	lea    r14,[rip+0xd06]        # 402004 <error@@Base+0x3b4>
  4012fe:	xor    ebx,ebx
  401300:	mov    rdx,rbx
  401303:	imul   rdx,r13
  401307:	add    rdx,r12
  40130a:	mov    rdi,r14
  40130d:	mov    rsi,rbx
  401310:	xor    eax,eax
  401312:	call   401090 <printf@plt>
  401317:	mov    rax,QWORD PTR [r15+rbx*8+0x18]
  40131c:	sub    r13,rax
  40131f:	imul   rax,rbx
  401323:	add    r12,rax
  401326:	inc    rbx
  401329:	cmp    rbx,0x65
  40132d:	jne    401300 <strdup@plt+0x1c0>
  40132f:	pop    rbx
  401330:	pop    r12
  401332:	pop    r13
  401334:	pop    r14
  401336:	pop    r15
  401338:	ret    
  401339:	nop    DWORD PTR [rax+0x0]
  401340:	push   r14
  401342:	push   rbx
  401343:	push   rax
  401344:	mov    r14,rsi
  401347:	mov    DWORD PTR [rsp+0x4],edi
  40134b:	lea    rdx,[rip+0xcbe]        # 402010 <error@@Base+0x3c0>
  401352:	lea    rdi,[rsp+0x4]
  401357:	xor    ecx,ecx
  401359:	xor    eax,eax
  40135b:	call   4019d0 <strdup@plt+0x890>
  401360:	mov    eax,DWORD PTR [rsp+0x4]
  401364:	dec    eax
  401366:	cmp    eax,0x2
  401369:	jae    401435 <strdup@plt+0x2f5>
  40136f:	mov    rsi,QWORD PTR [r14]
  401372:	lea    rbx,[rip+0x30ff]        # 404478 <error@@Base+0x2828>
  401379:	mov    rdi,rbx
  40137c:	xor    eax,eax
  40137e:	call   401450 <strdup@plt+0x310>
  401383:	cmp    DWORD PTR [rsp+0x4],0x2
  401388:	jne    401426 <strdup@plt+0x2e6>
  40138e:	mov    rsi,QWORD PTR [r14+0x8]
  401392:	lea    r14,[rip+0x2d9f]        # 404138 <error@@Base+0x24e8>
  401399:	mov    rdi,r14
  40139c:	xor    eax,eax
  40139e:	call   401450 <strdup@plt+0x310>
  4013a3:	vmovdqu xmm0,XMMWORD PTR [rbx]
  4013a7:	vpsubq xmm0,xmm0,XMMWORD PTR [r14]
  4013ac:	vmovdqu XMMWORD PTR [rbx],xmm0
  4013b0:	mov    rax,QWORD PTR [r14+0x10]
  4013b4:	sub    QWORD PTR [rbx+0x10],rax
  4013b8:	mov    eax,0x14
  4013bd:	nop    DWORD PTR [rax]
  4013c0:	vmovdqu ymm0,YMMWORD PTR [rbx+rax*8-0x80]
  4013c6:	vmovdqu ymm1,YMMWORD PTR [rbx+rax*8-0x60]
  4013cc:	vmovdqu ymm2,YMMWORD PTR [rbx+rax*8-0x40]
  4013d2:	vmovdqu ymm3,YMMWORD PTR [rbx+rax*8-0x20]
  4013d8:	vpsubq ymm0,ymm0,YMMWORD PTR [r14+rax*8-0x80]
  4013df:	vmovdqu YMMWORD PTR [rbx+rax*8-0x80],ymm0
  4013e5:	vpsubq ymm0,ymm1,YMMWORD PTR [r14+rax*8-0x60]
  4013ec:	vmovdqu YMMWORD PTR [rbx+rax*8-0x60],ymm0
  4013f2:	vpsubq ymm0,ymm2,YMMWORD PTR [r14+rax*8-0x40]
  4013f9:	vmovdqu YMMWORD PTR [rbx+rax*8-0x40],ymm0
  4013ff:	vpsubq ymm0,ymm3,YMMWORD PTR [r14+rax*8-0x20]
  401406:	vmovdqu YMMWORD PTR [rbx+rax*8-0x20],ymm0
  40140c:	vmovdqu ymm0,YMMWORD PTR [rbx+rax*8]
  401411:	vpsubq ymm0,ymm0,YMMWORD PTR [r14+rax*8]
  401417:	vmovdqu YMMWORD PTR [rbx+rax*8],ymm0
  40141c:	add    rax,0x14
  401420:	cmp    rax,0x78
  401424:	jne    4013c0 <strdup@plt+0x280>
  401426:	vzeroupper 
  401429:	call   4012e0 <strdup@plt+0x1a0>
  40142e:	xor    eax,eax
  401430:	call   401c10 <strdup@plt+0xad0>
  401435:	lea    rdi,[rip+0xbfb]        # 402037 <error@@Base+0x3e7>
  40143c:	xor    eax,eax
  40143e:	call   401c50 <error@@Base>
  401443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40144d:	nop    DWORD PTR [rax]
  401450:	push   rbp
  401451:	push   r15
  401453:	push   r14
  401455:	push   r13
  401457:	push   r12
  401459:	push   rbx
  40145a:	sub    rsp,0x18
  40145e:	mov    r15,rsi
  401461:	mov    r14,rdi
  401464:	lea    rsi,[rip+0xc75]        # 4020e0 <error@@Base+0x490>
  40146b:	mov    rdi,r15
  40146e:	xor    eax,eax
  401470:	call   401870 <strdup@plt+0x730>
  401475:	mov    rbx,rax
  401478:	lea    rdi,[rip+0x2c51]        # 4040d0 <error@@Base+0x2480>
  40147f:	mov    esi,0x63
  401484:	mov    rdx,rax
  401487:	call   4010a0 <fgets@plt>
  40148c:	test   rax,rax
  40148f:	je     4016d4 <strdup@plt+0x594>
  401495:	vmovdqu ymm0,YMMWORD PTR [rip+0x2c3d]        # 4040da <error@@Base+0x248a>
  40149d:	vpcmpeqb ymm0,ymm0,YMMWORD PTR [rip+0xbbb]        # 402060 <error@@Base+0x410>
  4014a5:	vmovdqu ymm1,YMMWORD PTR [rip+0x2c23]        # 4040d0 <error@@Base+0x2480>
  4014ad:	vpcmpeqb ymm1,ymm1,YMMWORD PTR [rip+0xbcb]        # 402080 <error@@Base+0x430>
  4014b5:	vpand  ymm0,ymm1,ymm0
  4014b9:	vpmovmskb eax,ymm0
  4014bd:	cmp    eax,0xffffffff
  4014c0:	jne    4016d4 <strdup@plt+0x594>
  4014c6:	lea    rdi,[rip+0x2c03]        # 4040d0 <error@@Base+0x2480>
  4014cd:	mov    esi,0x63
  4014d2:	mov    rdx,rbx
  4014d5:	vzeroupper 
  4014d8:	call   4010a0 <fgets@plt>
  4014dd:	test   rax,rax
  4014e0:	je     4016d4 <strdup@plt+0x594>
  4014e6:	vmovdqu ymm0,YMMWORD PTR [rip+0x2bef]        # 4040dd <error@@Base+0x248d>
  4014ee:	vpcmpeqb ymm0,ymm0,YMMWORD PTR [rip+0xbaa]        # 4020a0 <error@@Base+0x450>
  4014f6:	vmovdqu ymm1,YMMWORD PTR [rip+0x2bd2]        # 4040d0 <error@@Base+0x2480>
  4014fe:	vpcmpeqb ymm1,ymm1,YMMWORD PTR [rip+0xbba]        # 4020c0 <error@@Base+0x470>
  401506:	vpand  ymm0,ymm1,ymm0
  40150a:	vpmovmskb eax,ymm0
  40150e:	cmp    eax,0xffffffff
  401511:	jne    4016d4 <strdup@plt+0x594>
  401517:	lea    rdi,[rip+0x2bb2]        # 4040d0 <error@@Base+0x2480>
  40151e:	mov    esi,0x63
  401523:	mov    rdx,rbx
  401526:	vzeroupper 
  401529:	call   4010a0 <fgets@plt>
  40152e:	test   rax,rax
  401531:	je     4016d4 <strdup@plt+0x594>
  401537:	lea    rdi,[rip+0x2b92]        # 4040d0 <error@@Base+0x2480>
  40153e:	lea    rsi,[rip+0xc4f]        # 402194 <error@@Base+0x544>
  401545:	mov    rdx,rsp
  401548:	xor    eax,eax
  40154a:	call   4010f0 <__isoc99_sscanf@plt>
  40154f:	cmp    eax,0x1
  401552:	jne    4016d4 <strdup@plt+0x594>
  401558:	mov    rax,QWORD PTR [rsp]
  40155c:	add    QWORD PTR [r14],rax
  40155f:	lea    rdi,[rip+0x2b6a]        # 4040d0 <error@@Base+0x2480>
  401566:	mov    esi,0x63
  40156b:	mov    rdx,rbx
  40156e:	call   4010a0 <fgets@plt>
  401573:	test   rax,rax
  401576:	je     4016d4 <strdup@plt+0x594>
  40157c:	lea    rdi,[rip+0x2b4d]        # 4040d0 <error@@Base+0x2480>
  401583:	lea    rsi,[rip+0xc0a]        # 402194 <error@@Base+0x544>
  40158a:	mov    rdx,rsp
  40158d:	xor    eax,eax
  40158f:	call   4010f0 <__isoc99_sscanf@plt>
  401594:	cmp    eax,0x1
  401597:	jne    4016d4 <strdup@plt+0x594>
  40159d:	mov    rax,QWORD PTR [rsp]
  4015a1:	add    QWORD PTR [r14+0x8],rax
  4015a5:	lea    rdi,[rip+0x2b24]        # 4040d0 <error@@Base+0x2480>
  4015ac:	mov    esi,0x63
  4015b1:	mov    rdx,rbx
  4015b4:	call   4010a0 <fgets@plt>
  4015b9:	test   rax,rax
  4015bc:	je     4016d4 <strdup@plt+0x594>
  4015c2:	lea    rdi,[rip+0x2b07]        # 4040d0 <error@@Base+0x2480>
  4015c9:	lea    rsi,[rip+0xbc4]        # 402194 <error@@Base+0x544>
  4015d0:	lea    rdx,[rsp+0x10]
  4015d5:	xor    eax,eax
  4015d7:	call   4010f0 <__isoc99_sscanf@plt>
  4015dc:	cmp    eax,0x1
  4015df:	jne    4016d4 <strdup@plt+0x594>
  4015e5:	mov    rax,QWORD PTR [rsp+0x10]
  4015ea:	add    QWORD PTR [r14+0x10],rax
  4015ee:	test   rax,rax
  4015f1:	jle    4016bb <strdup@plt+0x57b>
  4015f7:	lea    rdi,[rip+0x2ad2]        # 4040d0 <error@@Base+0x2480>
  4015fe:	mov    esi,0x63
  401603:	mov    rdx,rbx
  401606:	call   4010a0 <fgets@plt>
  40160b:	test   rax,rax
  40160e:	je     4016bb <strdup@plt+0x57b>
  401614:	lea    rdi,[rip+0x2ab5]        # 4040d0 <error@@Base+0x2480>
  40161b:	mov    esi,0x63
  401620:	mov    rdx,rbx
  401623:	call   4010a0 <fgets@plt>
  401628:	test   rax,rax
  40162b:	je     4016bb <strdup@plt+0x57b>
  401631:	lea    rdi,[rip+0x2a98]        # 4040d0 <error@@Base+0x2480>
  401638:	mov    esi,0x63
  40163d:	mov    rdx,rbx
  401640:	call   4010a0 <fgets@plt>
  401645:	test   rax,rax
  401648:	je     4016bb <strdup@plt+0x57b>
  40164a:	lea    rdi,[rip+0x2a7f]        # 4040d0 <error@@Base+0x2480>
  401651:	mov    esi,0x63
  401656:	mov    rdx,rbx
  401659:	call   4010a0 <fgets@plt>
  40165e:	test   rax,rax
  401661:	je     4016bb <strdup@plt+0x57b>
  401663:	lea    r15,[rip+0x2a66]        # 4040d0 <error@@Base+0x2480>
  40166a:	lea    r12,[rip+0xb1f]        # 402190 <error@@Base+0x540>
  401671:	mov    r13,rsp
  401674:	lea    rbp,[rsp+0x8]
  401679:	nop    DWORD PTR [rax+0x0]
  401680:	mov    rdi,r15
  401683:	mov    rsi,r12
  401686:	mov    rdx,r13
  401689:	mov    rcx,rbp
  40168c:	xor    eax,eax
  40168e:	call   4010f0 <__isoc99_sscanf@plt>
  401693:	cmp    eax,0x2
  401696:	jne    4016bb <strdup@plt+0x57b>
  401698:	mov    rax,QWORD PTR [rsp]
  40169c:	mov    rcx,QWORD PTR [rsp+0x8]
  4016a1:	add    QWORD PTR [r14+rcx*8+0x18],rax
  4016a6:	mov    rdi,r15
  4016a9:	mov    esi,0x63
  4016ae:	mov    rdx,rbx
  4016b1:	call   4010a0 <fgets@plt>
  4016b6:	test   rax,rax
  4016b9:	jne    401680 <strdup@plt+0x540>
  4016bb:	mov    rdi,rbx
  4016be:	xor    eax,eax
  4016c0:	call   4018e0 <strdup@plt+0x7a0>
  4016c5:	add    rsp,0x18
  4016c9:	pop    rbx
  4016ca:	pop    r12
  4016cc:	pop    r13
  4016ce:	pop    r14
  4016d0:	pop    r15
  4016d2:	pop    rbp
  4016d3:	ret    
  4016d4:	test   r15,r15
  4016d7:	lea    rsi,[rip+0xa70]        # 40214e <error@@Base+0x4fe>
  4016de:	cmovne rsi,r15
  4016e2:	lea    rdi,[rip+0xa53]        # 40213c <error@@Base+0x4ec>
  4016e9:	xor    eax,eax
  4016eb:	vzeroupper 
  4016ee:	call   401c90 <error@@Base+0x40>
  4016f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016fd:	nop    DWORD PTR [rax]
  401700:	push   r15
  401702:	push   r14
  401704:	push   r12
  401706:	push   rbx
  401707:	push   rax
  401708:	mov    rax,rsi
  40170b:	mov    r12,rdi
  40170e:	lea    rsi,[rip+0xa3f]        # 402154 <error@@Base+0x504>
  401715:	mov    rdi,rax
  401718:	xor    eax,eax
  40171a:	call   401870 <strdup@plt+0x730>
  40171f:	mov    r14,rax
  401722:	lea    rsi,[rip+0xa2d]        # 402156 <error@@Base+0x506>
  401729:	lea    rdx,[rip+0x9b2]        # 4020e2 <error@@Base+0x492>
  401730:	lea    rcx,[rip+0x9d8]        # 40210f <error@@Base+0x4bf>
  401737:	mov    rdi,rax
  40173a:	xor    eax,eax
  40173c:	call   4010c0 <fprintf@plt>
  401741:	mov    rdx,QWORD PTR [r12]
  401745:	lea    r15,[rip+0xa4c]        # 402198 <error@@Base+0x548>
  40174c:	lea    rcx,[rip+0xa08]        # 40215b <error@@Base+0x50b>
  401753:	mov    rdi,r14
  401756:	mov    rsi,r15
  401759:	xor    eax,eax
  40175b:	call   4010c0 <fprintf@plt>
  401760:	mov    rdx,QWORD PTR [r12+0x8]
  401765:	lea    rcx,[rip+0x9fa]        # 402166 <error@@Base+0x516>
  40176c:	mov    rdi,r14
  40176f:	mov    rsi,r15
  401772:	xor    eax,eax
  401774:	call   4010c0 <fprintf@plt>
  401779:	mov    rdx,QWORD PTR [r12+0x10]
  40177e:	lea    rcx,[rip+0x9eb]        # 402170 <error@@Base+0x520>
  401785:	mov    rdi,r14
  401788:	mov    rsi,r15
  40178b:	xor    eax,eax
  40178d:	call   4010c0 <fprintf@plt>
  401792:	cmp    QWORD PTR [r12+0x10],0x0
  401798:	jle    4017f5 <strdup@plt+0x6b5>
  40179a:	lea    rdi,[rip+0x9d5]        # 402176 <error@@Base+0x526>
  4017a1:	mov    esi,0x19
  4017a6:	mov    edx,0x1
  4017ab:	mov    rcx,r14
  4017ae:	call   401130 <fwrite@plt>
  4017b3:	mov    ebx,0x4
  4017b8:	lea    r15,[rip+0x9e4]        # 4021a3 <error@@Base+0x553>
  4017bf:	jmp    4017d9 <strdup@plt+0x699>
  4017c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4017d0:	inc    rbx
  4017d3:	cmp    rbx,0x68
  4017d7:	je     4017f5 <strdup@plt+0x6b5>
  4017d9:	mov    rdx,QWORD PTR [r12+rbx*8]
  4017dd:	test   rdx,rdx
  4017e0:	jle    4017d0 <strdup@plt+0x690>
  4017e2:	lea    rcx,[rbx-0x3]
  4017e6:	mov    rdi,r14
  4017e9:	mov    rsi,r15
  4017ec:	xor    eax,eax
  4017ee:	call   4010c0 <fprintf@plt>
  4017f3:	jmp    4017d0 <strdup@plt+0x690>
  4017f5:	mov    rdi,r14
  4017f8:	xor    eax,eax
  4017fa:	add    rsp,0x8
  4017fe:	pop    rbx
  4017ff:	pop    r12
  401801:	pop    r14
  401803:	pop    r15
  401805:	jmp    4018e0 <strdup@plt+0x7a0>
  40180a:	nop    WORD PTR [rax+rax*1+0x0]
  401810:	push   rax
  401811:	call   4010b0 <calloc@plt>
  401816:	test   rax,rax
  401819:	je     40181d <strdup@plt+0x6dd>
  40181b:	pop    rcx
  40181c:	ret    
  40181d:	lea    rdi,[rip+0x98a]        # 4021ae <error@@Base+0x55e>
  401824:	call   401c50 <error@@Base>
  401829:	nop    DWORD PTR [rax+0x0]
  401830:	mov    dl,BYTE PTR [rdi]
  401832:	xor    eax,eax
  401834:	mov    r8b,BYTE PTR [rsi]
  401837:	xor    ecx,ecx
  401839:	test   dl,dl
  40183b:	je     401857 <strdup@plt+0x717>
  40183d:	nop    DWORD PTR [rax]
  401840:	cmp    dl,r8b
  401843:	jne    401861 <strdup@plt+0x721>
  401845:	movzx  edx,BYTE PTR [rdi+rcx*1+0x1]
  40184a:	movzx  r8d,BYTE PTR [rsi+rcx*1+0x1]
  401850:	inc    rcx
  401853:	test   dl,dl
  401855:	jne    401840 <strdup@plt+0x700>
  401857:	mov    edx,0x0
  40185c:	test   r8b,r8b
  40185f:	je     40186f <strdup@plt+0x72f>
  401861:	xor    eax,eax
  401863:	cmp    dl,BYTE PTR [rsi+rcx*1]
  401866:	setae  al
  401869:	lea    eax,[rax+rax*1]
  40186c:	add    eax,0xffffffff
  40186f:	ret    
  401870:	push   r14
  401872:	push   rbx
  401873:	push   rax
  401874:	mov    r14,rsi
  401877:	test   rdi,rdi
  40187a:	je     4018a1 <strdup@plt+0x761>
  40187c:	mov    rbx,rdi
  40187f:	mov    rsi,r14
  401882:	call   401100 <fopen@plt>
  401887:	test   rax,rax
  40188a:	jne    4018ba <strdup@plt+0x77a>
  40188c:	cmp    BYTE PTR [r14],0x77
  401890:	jne    4018c2 <strdup@plt+0x782>
  401892:	lea    rdi,[rip+0x92f]        # 4021c8 <error@@Base+0x578>
  401899:	mov    rsi,rbx
  40189c:	call   401c90 <error@@Base+0x40>
  4018a1:	cmp    BYTE PTR [r14],0x72
  4018a5:	jne    4018b0 <strdup@plt+0x770>
  4018a7:	mov    rax,QWORD PTR [rip+0x2732]        # 403fe0 <error@@Base+0x2390>
  4018ae:	jmp    4018b7 <strdup@plt+0x777>
  4018b0:	mov    rax,QWORD PTR [rip+0x2721]        # 403fd8 <error@@Base+0x2388>
  4018b7:	mov    rax,QWORD PTR [rax]
  4018ba:	add    rsp,0x8
  4018be:	pop    rbx
  4018bf:	pop    r14
  4018c1:	ret    
  4018c2:	lea    rdi,[rip+0x915]        # 4021de <error@@Base+0x58e>
  4018c9:	mov    rsi,rbx
  4018cc:	call   401c90 <error@@Base+0x40>
  4018d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018db:	nop    DWORD PTR [rax+rax*1+0x0]
  4018e0:	mov    rax,QWORD PTR [rip+0x26f9]        # 403fe0 <error@@Base+0x2390>
  4018e7:	cmp    QWORD PTR [rax],rdi
  4018ea:	je     4018fd <strdup@plt+0x7bd>
  4018ec:	mov    rax,QWORD PTR [rip+0x26e5]        # 403fd8 <error@@Base+0x2388>
  4018f3:	cmp    QWORD PTR [rax],rdi
  4018f6:	je     4018fd <strdup@plt+0x7bd>
  4018f8:	jmp    401070 <fclose@plt>
  4018fd:	ret    
  4018fe:	xchg   ax,ax
  401900:	sub    rsp,0x98
  401907:	mov    rsi,rdi
  40190a:	lea    rdx,[rsp+0x8]
  40190f:	mov    edi,0x1
  401914:	call   4010e0 <__xstat@plt>
  401919:	test   eax,eax
  40191b:	sete   al
  40191e:	add    rsp,0x98
  401925:	ret    
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	push   rbp
  401931:	push   r14
  401933:	push   rbx
  401934:	sub    rsp,0x70
  401938:	movzx  ebp,WORD PTR [rip+0x27f5]        # 404134 <error@@Base+0x24e4>
  40193f:	inc    ebp
  401941:	mov    WORD PTR [rip+0x27ec],bp        # 404134 <error@@Base+0x24e4>
  401948:	lea    rax,[rip+0x2e71]        # 4047c0 <error@@Base+0x2b70>
  40194f:	mov    rbx,QWORD PTR [rax]
  401952:	xor    eax,eax
  401954:	call   401060 <getpid@plt>
  401959:	movsx  r8d,bp
  40195d:	lea    rsi,[rip+0x8a3]        # 402207 <error@@Base+0x5b7>
  401964:	mov    r14,rsp
  401967:	mov    rdi,r14
  40196a:	mov    rdx,rbx
  40196d:	mov    ecx,eax
  40196f:	xor    eax,eax
  401971:	call   401110 <sprintf@plt>
  401976:	mov    rdi,r14
  401979:	call   401140 <strdup@plt>
  40197e:	mov    rbx,rax
  401981:	mov    rdi,rax
  401984:	xor    eax,eax
  401986:	call   401040 <unlink@plt>
  40198b:	mov    rax,rbx
  40198e:	add    rsp,0x70
  401992:	pop    rbx
  401993:	pop    r14
  401995:	pop    rbp
  401996:	ret    
  401997:	nop    WORD PTR [rax+rax*1+0x0]
  4019a0:	push   rbx
  4019a1:	mov    rbx,rdi
  4019a4:	call   401080 <strlen@plt>
  4019a9:	dec    eax
  4019ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4019b0:	movsx  rcx,ax
  4019b4:	test   cx,cx
  4019b7:	js     4019c2 <strdup@plt+0x882>
  4019b9:	lea    eax,[rcx-0x1]
  4019bc:	cmp    BYTE PTR [rbx+rcx*1],0x2f
  4019c0:	jne    4019b0 <strdup@plt+0x870>
  4019c2:	lea    rax,[rcx+rbx*1]
  4019c6:	add    rax,0x1
  4019ca:	pop    rbx
  4019cb:	ret    
  4019cc:	nop    DWORD PTR [rax+0x0]
  4019d0:	push   rbp
  4019d1:	push   r15
  4019d3:	push   r14
  4019d5:	push   r13
  4019d7:	push   r12
  4019d9:	push   rbx
  4019da:	sub    rsp,0x28
  4019de:	mov    rbx,rcx
  4019e1:	mov    r14,rdx
  4019e4:	mov    QWORD PTR [rsp+0x8],rdi
  4019e9:	mov    QWORD PTR [rsp+0x18],rsi
  4019ee:	mov    rbp,QWORD PTR [rsi]
  4019f1:	mov    rdi,rbp
  4019f4:	call   401080 <strlen@plt>
  4019f9:	dec    eax
  4019fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401a00:	movsx  rcx,ax
  401a04:	test   cx,cx
  401a07:	js     401a13 <strdup@plt+0x8d3>
  401a09:	lea    eax,[rcx-0x1]
  401a0c:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x2f
  401a11:	jne    401a00 <strdup@plt+0x8c0>
  401a13:	lea    rax,[rcx+rbp*1]
  401a17:	add    rax,0x1
  401a1b:	lea    rcx,[rip+0x2d9e]        # 4047c0 <error@@Base+0x2b70>
  401a22:	mov    QWORD PTR [rcx],rax
  401a25:	lea    rbp,[rip+0x2d4]        # 401d00 <error@@Base+0xb0>
  401a2c:	mov    edi,0x2
  401a31:	mov    rsi,rbp
  401a34:	call   4010d0 <__sysv_signal@plt>
  401a39:	mov    edi,0xf
  401a3e:	mov    rsi,rbp
  401a41:	call   4010d0 <__sysv_signal@plt>
  401a46:	mov    rax,QWORD PTR [rsp+0x8]
  401a4b:	mov    r13d,DWORD PTR [rax]
  401a4e:	cmp    r13d,0x1
  401a52:	jne    401a64 <strdup@plt+0x924>
  401a54:	lea    rax,[rip+0x265d]        # 4040b8 <error@@Base+0x2468>
  401a5b:	cmp    BYTE PTR [rax],0x0
  401a5e:	jne    401c03 <strdup@plt+0xac3>
  401a64:	cmp    r13d,0x2
  401a68:	mov    r9,QWORD PTR [rsp+0x18]
  401a6d:	jl     401bc0 <strdup@plt+0xa80>
  401a73:	mov    QWORD PTR [rsp+0x20],r14
  401a78:	mov    r14w,0x1
  401a7d:	mov    r15d,0x1
  401a83:	xor    ecx,ecx
  401a85:	jmp    401aaa <strdup@plt+0x96a>
  401a87:	nop    WORD PTR [rax+rax*1+0x0]
  401a90:	movsx  rax,cx
  401a94:	inc    ecx
  401a96:	mov    QWORD PTR [r9+rax*8],rbp
  401a9a:	inc    r14d
  401a9d:	movsx  r15d,r14w
  401aa1:	cmp    r13d,r15d
  401aa4:	jle    401bc2 <strdup@plt+0xa82>
  401aaa:	movsx  rax,r14w
  401aae:	mov    rbp,QWORD PTR [r9+rax*8]
  401ab2:	cmp    BYTE PTR [rbp+0x0],0x2d
  401ab6:	jne    401a90 <strdup@plt+0x950>
  401ab8:	mov    r12b,BYTE PTR [rbp+0x1]
  401abc:	test   r12b,r12b
  401abf:	je     401a90 <strdup@plt+0x950>
  401ac1:	mov    QWORD PTR [rsp+0x10],rcx
  401ac6:	mov    rdi,rbp
  401ac9:	call   401080 <strlen@plt>
  401ace:	lea    rdi,[rip+0x74f]        # 402224 <error@@Base+0x5d4>
  401ad5:	mov    rsi,rbp
  401ad8:	mov    rdx,rax
  401adb:	call   401050 <strncmp@plt>
  401ae0:	test   eax,eax
  401ae2:	je     401bea <strdup@plt+0xaaa>
  401ae8:	inc    r15d
  401aeb:	cmp    r15d,r13d
  401aee:	mov    r9,QWORD PTR [rsp+0x18]
  401af3:	jge    401b06 <strdup@plt+0x9c6>
  401af5:	movsxd rax,r15d
  401af8:	mov    r8,QWORD PTR [r9+rax*8]
  401afc:	test   rbx,rbx
  401aff:	jne    401b12 <strdup@plt+0x9d2>
  401b01:	jmp    401bdb <strdup@plt+0xa9b>
  401b06:	xor    r8d,r8d
  401b09:	test   rbx,rbx
  401b0c:	je     401bdb <strdup@plt+0xa9b>
  401b12:	mov    al,BYTE PTR [rbx]
  401b14:	test   al,al
  401b16:	je     401bdb <strdup@plt+0xa9b>
  401b1c:	cmp    r12b,al
  401b1f:	jne    401b25 <strdup@plt+0x9e5>
  401b21:	xor    ecx,ecx
  401b23:	jmp    401b4c <strdup@plt+0xa0c>
  401b25:	mov    dx,0x1
  401b29:	nop    DWORD PTR [rax+0x0]
  401b30:	movsx  rcx,dx
  401b34:	lea    rax,[rcx+rcx*2]
  401b38:	movzx  eax,BYTE PTR [rbx+rax*8]
  401b3c:	test   al,al
  401b3e:	je     401bdb <strdup@plt+0xa9b>
  401b44:	lea    edx,[rcx+0x1]
  401b47:	cmp    r12b,al
  401b4a:	jne    401b30 <strdup@plt+0x9f0>
  401b4c:	lea    rsi,[rcx+rcx*2]
  401b50:	mov    rcx,QWORD PTR [rbx+rsi*8+0x8]
  401b55:	test   rcx,rcx
  401b58:	je     401b66 <strdup@plt+0xa26>
  401b5a:	mov    dl,BYTE PTR [rbp+0x2]
  401b5d:	test   r8,r8
  401b60:	jne    401b90 <strdup@plt+0xa50>
  401b62:	test   dl,dl
  401b64:	jne    401b90 <strdup@plt+0xa50>
  401b66:	mov    rax,QWORD PTR [rbx+rsi*8+0x10]
  401b6b:	test   rax,rax
  401b6e:	je     401bdb <strdup@plt+0xa9b>
  401b70:	cmp    BYTE PTR [rbp+0x2],0x0
  401b74:	jne    401bdb <strdup@plt+0xa9b>
  401b76:	cmp    BYTE PTR [rax],0x0
  401b79:	jne    401bf4 <strdup@plt+0xab4>
  401b7b:	mov    BYTE PTR [rax],0x1
  401b7e:	mov    rax,QWORD PTR [rsp+0x8]
  401b83:	mov    r13d,DWORD PTR [rax]
  401b86:	mov    rcx,QWORD PTR [rsp+0x10]
  401b8b:	jmp    401a9a <strdup@plt+0x95a>
  401b90:	cmp    QWORD PTR [rcx],0x0
  401b94:	jne    401bf4 <strdup@plt+0xab4>
  401b96:	add    rbp,0x2
  401b9a:	test   dl,dl
  401b9c:	cmovne r8,rbp
  401ba0:	mov    QWORD PTR [rcx],r8
  401ba3:	cmp    BYTE PTR [rbp+0x0],0x0
  401ba7:	je     401bb3 <strdup@plt+0xa73>
  401ba9:	mov    rcx,QWORD PTR [rsp+0x10]
  401bae:	jmp    401a9a <strdup@plt+0x95a>
  401bb3:	inc    r14d
  401bb6:	mov    rcx,QWORD PTR [rsp+0x10]
  401bbb:	jmp    401a9a <strdup@plt+0x95a>
  401bc0:	xor    ecx,ecx
  401bc2:	movsx  eax,cx
  401bc5:	mov    rcx,QWORD PTR [rsp+0x8]
  401bca:	mov    DWORD PTR [rcx],eax
  401bcc:	add    rsp,0x28
  401bd0:	pop    rbx
  401bd1:	pop    r12
  401bd3:	pop    r13
  401bd5:	pop    r14
  401bd7:	pop    r15
  401bd9:	pop    rbp
  401bda:	ret    
  401bdb:	lea    rdi,[rip+0x657]        # 402239 <error@@Base+0x5e9>
  401be2:	mov    rsi,rbp
  401be5:	call   401c90 <error@@Base+0x40>
  401bea:	mov    rdi,QWORD PTR [rsp+0x20]
  401bef:	call   401d20 <error@@Base+0xd0>
  401bf4:	lea    rdi,[rip+0x64d]        # 402248 <error@@Base+0x5f8>
  401bfb:	mov    rsi,rbp
  401bfe:	call   401c90 <error@@Base+0x40>
  401c03:	mov    rdi,r14
  401c06:	call   401d20 <error@@Base+0xd0>
  401c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c10:	push   rax
  401c11:	xor    edi,edi
  401c13:	call   401c20 <strdup@plt+0xae0>
  401c18:	nop    DWORD PTR [rax+rax*1+0x0]
  401c20:	push   rbx
  401c21:	mov    ebx,edi
  401c23:	lea    rax,[rip+0x2b9e]        # 4047c8 <error@@Base+0x2b78>
  401c2a:	mov    rcx,QWORD PTR [rax]
  401c2d:	test   rcx,rcx
  401c30:	je     401c36 <strdup@plt+0xaf6>
  401c32:	xor    eax,eax
  401c34:	call   rcx
  401c36:	call   401d70 <error@@Base+0x120>
  401c3b:	mov    edi,ebx
  401c3d:	call   401120 <exit@plt>
  401c42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c4c:	nop    DWORD PTR [rax+0x0]

0000000000401c50 <error@@Base>:
  401c50:	push   rax
  401c51:	mov    rcx,rdi
  401c54:	mov    rax,QWORD PTR [rip+0x239d]        # 403ff8 <error@@Base+0x23a8>
  401c5b:	mov    rdi,QWORD PTR [rax]
  401c5e:	lea    rax,[rip+0x2b5b]        # 4047c0 <error@@Base+0x2b70>
  401c65:	mov    rdx,QWORD PTR [rax]
  401c68:	lea    rsi,[rip+0x583]        # 4021f2 <error@@Base+0x5a2>
  401c6f:	xor    eax,eax
  401c71:	call   4010c0 <fprintf@plt>
  401c76:	lea    rax,[rip+0x243f]        # 4040bc <error@@Base+0x246c>
  401c7d:	mov    edi,DWORD PTR [rax]
  401c7f:	call   401c20 <strdup@plt+0xae0>
  401c84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c8e:	xchg   ax,ax
  401c90:	push   rax
  401c91:	mov    r8,rsi
  401c94:	mov    rcx,rdi
  401c97:	mov    rax,QWORD PTR [rip+0x235a]        # 403ff8 <error@@Base+0x23a8>
  401c9e:	mov    rdi,QWORD PTR [rax]
  401ca1:	lea    rax,[rip+0x2b18]        # 4047c0 <error@@Base+0x2b70>
  401ca8:	mov    rdx,QWORD PTR [rax]
  401cab:	lea    rsi,[rip+0x548]        # 4021fa <error@@Base+0x5aa>
  401cb2:	xor    eax,eax
  401cb4:	call   4010c0 <fprintf@plt>
  401cb9:	lea    rax,[rip+0x23fc]        # 4040bc <error@@Base+0x246c>
  401cc0:	mov    edi,DWORD PTR [rax]
  401cc2:	call   401c20 <strdup@plt+0xae0>
  401cc7:	nop    WORD PTR [rax+rax*1+0x0]
  401cd0:	mov    r8,rsi
  401cd3:	mov    rcx,rdi
  401cd6:	mov    rax,QWORD PTR [rip+0x231b]        # 403ff8 <error@@Base+0x23a8>
  401cdd:	mov    rdi,QWORD PTR [rax]
  401ce0:	lea    rax,[rip+0x2ad9]        # 4047c0 <error@@Base+0x2b70>
  401ce7:	mov    rdx,QWORD PTR [rax]
  401cea:	lea    rsi,[rip+0x509]        # 4021fa <error@@Base+0x5aa>
  401cf1:	xor    eax,eax
  401cf3:	jmp    4010c0 <fprintf@plt>
  401cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  401d00:	push   rax
  401d01:	cmp    BYTE PTR [rip+0x242e],0x1        # 404136 <error@@Base+0x24e6>
  401d08:	jne    401d0c <error@@Base+0xbc>
  401d0a:	pop    rax
  401d0b:	ret    
  401d0c:	mov    BYTE PTR [rip+0x2423],0x1        # 404136 <error@@Base+0x24e6>
  401d13:	lea    rdi,[rip+0x4fb]        # 402215 <error@@Base+0x5c5>
  401d1a:	call   401c50 <error@@Base>
  401d1f:	nop
  401d20:	push   rax
  401d21:	lea    rax,[rip+0x2a90]        # 4047b8 <error@@Base+0x2b68>
  401d28:	mov    rdx,QWORD PTR [rax]
  401d2b:	test   rdx,rdx
  401d2e:	jne    401d5a <error@@Base+0x10a>
  401d30:	mov    rcx,rdi
  401d33:	mov    rax,QWORD PTR [rip+0x22be]        # 403ff8 <error@@Base+0x23a8>
  401d3a:	mov    rdi,QWORD PTR [rax]
  401d3d:	lea    rax,[rip+0x2a7c]        # 4047c0 <error@@Base+0x2b70>
  401d44:	mov    rdx,QWORD PTR [rax]
  401d47:	lea    rsi,[rip+0x4dc]        # 40222a <error@@Base+0x5da>
  401d4e:	xor    eax,eax
  401d50:	call   4010c0 <fprintf@plt>
  401d55:	call   401c10 <strdup@plt+0xad0>
  401d5a:	xor    eax,eax
  401d5c:	call   rdx
  401d5e:	call   401c10 <strdup@plt+0xad0>
  401d63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d6d:	nop    DWORD PTR [rax]
  401d70:	push   r15
  401d72:	push   r14
  401d74:	push   r13
  401d76:	push   r12
  401d78:	push   rbx
  401d79:	sub    rsp,0x70
  401d7d:	cmp    WORD PTR [rip+0x23af],0x0        # 404134 <error@@Base+0x24e4>
  401d85:	jle    401de9 <error@@Base+0x199>
  401d87:	mov    bx,0x1
  401d8b:	lea    r13,[rip+0x2a2e]        # 4047c0 <error@@Base+0x2b70>
  401d92:	lea    r14,[rip+0x46e]        # 402207 <error@@Base+0x5b7>
  401d99:	mov    r15,rsp
  401d9c:	nop    DWORD PTR [rax+0x0]
  401da0:	mov    r12,QWORD PTR [r13+0x0]
  401da4:	xor    eax,eax
  401da6:	call   401060 <getpid@plt>
  401dab:	movsx  r8d,bx
  401daf:	mov    rdi,r15
  401db2:	mov    rsi,r14
  401db5:	mov    rdx,r12
  401db8:	mov    ecx,eax
  401dba:	xor    eax,eax
  401dbc:	call   401110 <sprintf@plt>
  401dc1:	mov    rdi,r15
  401dc4:	call   401140 <strdup@plt>
  401dc9:	mov    r12,rax
  401dcc:	mov    rdi,rax
  401dcf:	xor    eax,eax
  401dd1:	call   401040 <unlink@plt>
  401dd6:	mov    rdi,r12
  401dd9:	call   401030 <free@plt>
  401dde:	inc    ebx
  401de0:	cmp    bx,WORD PTR [rip+0x234d]        # 404134 <error@@Base+0x24e4>
  401de7:	jle    401da0 <error@@Base+0x150>
  401de9:	add    rsp,0x70
  401ded:	pop    rbx
  401dee:	pop    r12
  401df0:	pop    r13
  401df2:	pop    r14
  401df4:	pop    r15
  401df6:	ret    
  401df7:	nop    WORD PTR [rax+rax*1+0x0]
  401e00:	endbr64 
  401e04:	push   r15
  401e06:	lea    r15,[rip+0x1fbb]        # 403dc8 <error@@Base+0x2178>
  401e0d:	push   r14
  401e0f:	mov    r14,rdx
  401e12:	push   r13
  401e14:	mov    r13,rsi
  401e17:	push   r12
  401e19:	mov    r12d,edi
  401e1c:	push   rbp
  401e1d:	lea    rbp,[rip+0x1fac]        # 403dd0 <error@@Base+0x2180>
  401e24:	push   rbx
  401e25:	sub    rbp,r15
  401e28:	sub    rsp,0x8
  401e2c:	call   401000 <free@plt-0x30>
  401e31:	sar    rbp,0x3
  401e35:	je     401e56 <error@@Base+0x206>
  401e37:	xor    ebx,ebx
  401e39:	nop    DWORD PTR [rax+0x0]
  401e40:	mov    rdx,r14
  401e43:	mov    rsi,r13
  401e46:	mov    edi,r12d
  401e49:	call   QWORD PTR [r15+rbx*8]
  401e4d:	add    rbx,0x1
  401e51:	cmp    rbp,rbx
  401e54:	jne    401e40 <error@@Base+0x1f0>
  401e56:	add    rsp,0x8
  401e5a:	pop    rbx
  401e5b:	pop    rbp
  401e5c:	pop    r12
  401e5e:	pop    r13
  401e60:	pop    r14
  401e62:	pop    r15
  401e64:	ret    
  401e65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e70:	endbr64 
  401e74:	ret    

Disassembly of section .fini:

0000000000401e78 <.fini>:
  401e78:	endbr64 
  401e7c:	sub    rsp,0x8
  401e80:	add    rsp,0x8
  401e84:	ret    
