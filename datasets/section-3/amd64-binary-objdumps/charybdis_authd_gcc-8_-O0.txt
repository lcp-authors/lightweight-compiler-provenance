
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x11fc9]        # 413fd8 <memcpy@plt+0x11528>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_strcasecmp@plt-0x55a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x11fe2]        # 414008 <memcpy@plt+0x11558>
  402026:	bnd jmp QWORD PTR [rip+0x11fe3]        # 414010 <memcpy@plt+0x11560>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40235f:	nop
  402360:	endbr64 
  402364:	push   0x33
  402369:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40236f:	nop
  402370:	endbr64 
  402374:	push   0x34
  402379:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40237f:	nop
  402380:	endbr64 
  402384:	push   0x35
  402389:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40238f:	nop
  402390:	endbr64 
  402394:	push   0x36
  402399:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40239f:	nop
  4023a0:	endbr64 
  4023a4:	push   0x37
  4023a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4023af:	nop
  4023b0:	endbr64 
  4023b4:	push   0x38
  4023b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4023bf:	nop
  4023c0:	endbr64 
  4023c4:	push   0x39
  4023c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4023cf:	nop
  4023d0:	endbr64 
  4023d4:	push   0x3a
  4023d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4023df:	nop
  4023e0:	endbr64 
  4023e4:	push   0x3b
  4023e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4023ef:	nop
  4023f0:	endbr64 
  4023f4:	push   0x3c
  4023f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4023ff:	nop
  402400:	endbr64 
  402404:	push   0x3d
  402409:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40240f:	nop
  402410:	endbr64 
  402414:	push   0x3e
  402419:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40241f:	nop
  402420:	endbr64 
  402424:	push   0x3f
  402429:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40242f:	nop
  402430:	endbr64 
  402434:	push   0x40
  402439:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40243f:	nop
  402440:	endbr64 
  402444:	push   0x41
  402449:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40244f:	nop
  402450:	endbr64 
  402454:	push   0x42
  402459:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40245f:	nop
  402460:	endbr64 
  402464:	push   0x43
  402469:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40246f:	nop
  402470:	endbr64 
  402474:	push   0x44
  402479:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40247f:	nop
  402480:	endbr64 
  402484:	push   0x45
  402489:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40248f:	nop
  402490:	endbr64 
  402494:	push   0x46
  402499:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40249f:	nop
  4024a0:	endbr64 
  4024a4:	push   0x47
  4024a9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4024af:	nop
  4024b0:	endbr64 
  4024b4:	push   0x48
  4024b9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4024bf:	nop
  4024c0:	endbr64 
  4024c4:	push   0x49
  4024c9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4024cf:	nop
  4024d0:	endbr64 
  4024d4:	push   0x4a
  4024d9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4024df:	nop
  4024e0:	endbr64 
  4024e4:	push   0x4b
  4024e9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4024ef:	nop
  4024f0:	endbr64 
  4024f4:	push   0x4c
  4024f9:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  4024ff:	nop
  402500:	endbr64 
  402504:	push   0x4d
  402509:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40250f:	nop
  402510:	endbr64 
  402514:	push   0x4e
  402519:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40251f:	nop
  402520:	endbr64 
  402524:	push   0x4f
  402529:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40252f:	nop
  402530:	endbr64 
  402534:	push   0x50
  402539:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40253f:	nop
  402540:	endbr64 
  402544:	push   0x51
  402549:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40254f:	nop
  402550:	endbr64 
  402554:	push   0x52
  402559:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40255f:	nop
  402560:	endbr64 
  402564:	push   0x53
  402569:	bnd jmp 402020 <rb_strcasecmp@plt-0x550>
  40256f:	nop

Disassembly of section .plt.got:

0000000000402570 <rb_strcasecmp@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x11a6d]        # 413fe8 <memcpy@plt+0x11538>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000402580 <rb_helper_loop@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x11a8d]        # 414018 <memcpy@plt+0x11568>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <memset@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x11a85]        # 414020 <memcpy@plt+0x11570>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <rb_event_addish@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x11a7d]        # 414028 <memcpy@plt+0x11578>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <rb_ignore_errno@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x11a75]        # 414030 <memcpy@plt+0x11580>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <rb_connect_tcp_ssl@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x11a6d]        # 414038 <memcpy@plt+0x11588>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <snprintf@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x11a65]        # 414040 <memcpy@plt+0x11590>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <rb_connect_tcp@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x11a5d]        # 414048 <memcpy@plt+0x11598>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <rb_event_delete@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x11a55]        # 414050 <memcpy@plt+0x115a0>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <rb_setselect@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x11a4d]        # 414058 <memcpy@plt+0x115a8>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <rb_get_fd@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x11a45]        # 414060 <memcpy@plt+0x115b0>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <htons@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x11a3d]        # 414068 <memcpy@plt+0x115b8>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <exit@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0x11a35]        # 414070 <memcpy@plt+0x115c0>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <__assert_fail@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0x11a2d]        # 414078 <memcpy@plt+0x115c8>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <getaddrinfo@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0x11a25]        # 414080 <memcpy@plt+0x115d0>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <rb_socket@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0x11a1d]        # 414088 <memcpy@plt+0x115d8>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <strcasecmp@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0x11a15]        # 414090 <memcpy@plt+0x115e0>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <rb_strtok_r@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0x11a0d]        # 414098 <memcpy@plt+0x115e8>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402690 <rb_dictionary_foreach_cur@plt>:
  402690:	endbr64 
  402694:	bnd jmp QWORD PTR [rip+0x11a05]        # 4140a0 <memcpy@plt+0x115f0>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026a0 <strpbrk@plt>:
  4026a0:	endbr64 
  4026a4:	bnd jmp QWORD PTR [rip+0x119fd]        # 4140a8 <memcpy@plt+0x115f8>
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026b0 <rb_helper_child@plt>:
  4026b0:	endbr64 
  4026b4:	bnd jmp QWORD PTR [rip+0x119f5]        # 4140b0 <memcpy@plt+0x11600>
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026c0 <strncmp@plt>:
  4026c0:	endbr64 
  4026c4:	bnd jmp QWORD PTR [rip+0x119ed]        # 4140b8 <memcpy@plt+0x11608>
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <malloc@plt>:
  4026d0:	endbr64 
  4026d4:	bnd jmp QWORD PTR [rip+0x119e5]        # 4140c0 <memcpy@plt+0x11610>
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026e0 <fopen@plt>:
  4026e0:	endbr64 
  4026e4:	bnd jmp QWORD PTR [rip+0x119dd]        # 4140c8 <memcpy@plt+0x11618>
  4026eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026f0 <rb_write@plt>:
  4026f0:	endbr64 
  4026f4:	bnd jmp QWORD PTR [rip+0x119d5]        # 4140d0 <memcpy@plt+0x11620>
  4026fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402700 <setsockopt@plt>:
  402700:	endbr64 
  402704:	bnd jmp QWORD PTR [rip+0x119cd]        # 4140d8 <memcpy@plt+0x11628>
  40270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402710 <fgets@plt>:
  402710:	endbr64 
  402714:	bnd jmp QWORD PTR [rip+0x119c5]        # 4140e0 <memcpy@plt+0x11630>
  40271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402720 <rb_strlcpy@plt>:
  402720:	endbr64 
  402724:	bnd jmp QWORD PTR [rip+0x119bd]        # 4140e8 <memcpy@plt+0x11638>
  40272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402730 <rb_dictionary_foreach_next@plt>:
  402730:	endbr64 
  402734:	bnd jmp QWORD PTR [rip+0x119b5]        # 4140f0 <memcpy@plt+0x11640>
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402740 <freeaddrinfo@plt>:
  402740:	endbr64 
  402744:	bnd jmp QWORD PTR [rip+0x119ad]        # 4140f8 <memcpy@plt+0x11648>
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402750 <free@plt>:
  402750:	endbr64 
  402754:	bnd jmp QWORD PTR [rip+0x119a5]        # 414100 <memcpy@plt+0x11650>
  40275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402760 <strlen@plt>:
  402760:	endbr64 
  402764:	bnd jmp QWORD PTR [rip+0x1199d]        # 414108 <memcpy@plt+0x11658>
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402770 <rb_string_to_array@plt>:
  402770:	endbr64 
  402774:	bnd jmp QWORD PTR [rip+0x11995]        # 414110 <memcpy@plt+0x11660>
  40277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402780 <rb_read@plt>:
  402780:	endbr64 
  402784:	bnd jmp QWORD PTR [rip+0x1198d]        # 414118 <memcpy@plt+0x11668>
  40278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402790 <__ctype_b_loc@plt>:
  402790:	endbr64 
  402794:	bnd jmp QWORD PTR [rip+0x11985]        # 414120 <memcpy@plt+0x11670>
  40279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027a0 <rb_dictionary_foreach_start@plt>:
  4027a0:	endbr64 
  4027a4:	bnd jmp QWORD PTR [rip+0x1197d]        # 414128 <memcpy@plt+0x11678>
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027b0 <sprintf@plt>:
  4027b0:	endbr64 
  4027b4:	bnd jmp QWORD PTR [rip+0x11975]        # 414130 <memcpy@plt+0x11680>
  4027bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027c0 <ntohs@plt>:
  4027c0:	endbr64 
  4027c4:	bnd jmp QWORD PTR [rip+0x1196d]        # 414138 <memcpy@plt+0x11688>
  4027cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027d0 <rb_inet_pton_sock@plt>:
  4027d0:	endbr64 
  4027d4:	bnd jmp QWORD PTR [rip+0x11965]        # 414140 <memcpy@plt+0x11690>
  4027db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027e0 <strrchr@plt>:
  4027e0:	endbr64 
  4027e4:	bnd jmp QWORD PTR [rip+0x1195d]        # 414148 <memcpy@plt+0x11698>
  4027eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027f0 <rb_current_time@plt>:
  4027f0:	endbr64 
  4027f4:	bnd jmp QWORD PTR [rip+0x11955]        # 414150 <memcpy@plt+0x116a0>
  4027fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402800 <rb_dictionary_delete@plt>:
  402800:	endbr64 
  402804:	bnd jmp QWORD PTR [rip+0x1194d]        # 414158 <memcpy@plt+0x116a8>
  40280b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402810 <strerror@plt>:
  402810:	endbr64 
  402814:	bnd jmp QWORD PTR [rip+0x11945]        # 414160 <memcpy@plt+0x116b0>
  40281b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402820 <strstr@plt>:
  402820:	endbr64 
  402824:	bnd jmp QWORD PTR [rip+0x1193d]        # 414168 <memcpy@plt+0x116b8>
  40282b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402830 <rb_free_rb_dlink_node@plt>:
  402830:	endbr64 
  402834:	bnd jmp QWORD PTR [rip+0x11935]        # 414170 <memcpy@plt+0x116c0>
  40283b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402840 <sigaction@plt>:
  402840:	endbr64 
  402844:	bnd jmp QWORD PTR [rip+0x1192d]        # 414178 <memcpy@plt+0x116c8>
  40284b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402850 <rb_close@plt>:
  402850:	endbr64 
  402854:	bnd jmp QWORD PTR [rip+0x11925]        # 414180 <memcpy@plt+0x116d0>
  40285b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402860 <strtol@plt>:
  402860:	endbr64 
  402864:	bnd jmp QWORD PTR [rip+0x1191d]        # 414188 <memcpy@plt+0x116d8>
  40286b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402870 <getsockname@plt>:
  402870:	endbr64 
  402874:	bnd jmp QWORD PTR [rip+0x11915]        # 414190 <memcpy@plt+0x116e0>
  40287b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402880 <atoi@plt>:
  402880:	endbr64 
  402884:	bnd jmp QWORD PTR [rip+0x1190d]        # 414198 <memcpy@plt+0x116e8>
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402890 <rb_dictionary_destroy@plt>:
  402890:	endbr64 
  402894:	bnd jmp QWORD PTR [rip+0x11905]        # 4141a0 <memcpy@plt+0x116f0>
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028a0 <rb_lib_log@plt>:
  4028a0:	endbr64 
  4028a4:	bnd jmp QWORD PTR [rip+0x118fd]        # 4141a8 <memcpy@plt+0x116f8>
  4028ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028b0 <memmove@plt>:
  4028b0:	endbr64 
  4028b4:	bnd jmp QWORD PTR [rip+0x118f5]        # 4141b0 <memcpy@plt+0x11700>
  4028bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028c0 <strchr@plt>:
  4028c0:	endbr64 
  4028c4:	bnd jmp QWORD PTR [rip+0x118ed]        # 4141b8 <memcpy@plt+0x11708>
  4028cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028d0 <vsnprintf@plt>:
  4028d0:	endbr64 
  4028d4:	bnd jmp QWORD PTR [rip+0x118e5]        # 4141c0 <memcpy@plt+0x11710>
  4028db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028e0 <rb_init_prng@plt>:
  4028e0:	endbr64 
  4028e4:	bnd jmp QWORD PTR [rip+0x118dd]        # 4141c8 <memcpy@plt+0x11718>
  4028eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004028f0 <rb_dictionary_retrieve@plt>:
  4028f0:	endbr64 
  4028f4:	bnd jmp QWORD PTR [rip+0x118d5]        # 4141d0 <memcpy@plt+0x11720>
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402900 <rb_outofmemory@plt>:
  402900:	endbr64 
  402904:	bnd jmp QWORD PTR [rip+0x118cd]        # 4141d8 <memcpy@plt+0x11728>
  40290b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402910 <__errno_location@plt>:
  402910:	endbr64 
  402914:	bnd jmp QWORD PTR [rip+0x118c5]        # 4141e0 <memcpy@plt+0x11730>
  40291b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402920 <rb_dictionary_add@plt>:
  402920:	endbr64 
  402924:	bnd jmp QWORD PTR [rip+0x118bd]        # 4141e8 <memcpy@plt+0x11738>
  40292b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402930 <rb_set_time@plt>:
  402930:	endbr64 
  402934:	bnd jmp QWORD PTR [rip+0x118b5]        # 4141f0 <memcpy@plt+0x11740>
  40293b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402940 <sigaddset@plt>:
  402940:	endbr64 
  402944:	bnd jmp QWORD PTR [rip+0x118ad]        # 4141f8 <memcpy@plt+0x11748>
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402950 <__stack_chk_fail@plt>:
  402950:	endbr64 
  402954:	bnd jmp QWORD PTR [rip+0x118a5]        # 414200 <memcpy@plt+0x11750>
  40295b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402960 <rb_helper_read@plt>:
  402960:	endbr64 
  402964:	bnd jmp QWORD PTR [rip+0x1189d]        # 414208 <memcpy@plt+0x11758>
  40296b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402970 <strcmp@plt>:
  402970:	endbr64 
  402974:	bnd jmp QWORD PTR [rip+0x11895]        # 414210 <memcpy@plt+0x11760>
  40297b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402980 <rb_inet_ntop_sock@plt>:
  402980:	endbr64 
  402984:	bnd jmp QWORD PTR [rip+0x1188d]        # 414218 <memcpy@plt+0x11768>
  40298b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402990 <rb_dictionary_find@plt>:
  402990:	endbr64 
  402994:	bnd jmp QWORD PTR [rip+0x11885]        # 414220 <memcpy@plt+0x11770>
  40299b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029a0 <strcpy@plt>:
  4029a0:	endbr64 
  4029a4:	bnd jmp QWORD PTR [rip+0x1187d]        # 414228 <memcpy@plt+0x11778>
  4029ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029b0 <rb_dictionary_create@plt>:
  4029b0:	endbr64 
  4029b4:	bnd jmp QWORD PTR [rip+0x11875]        # 414230 <memcpy@plt+0x11780>
  4029bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029c0 <rb_accept_tcp@plt>:
  4029c0:	endbr64 
  4029c4:	bnd jmp QWORD PTR [rip+0x1186d]        # 414238 <memcpy@plt+0x11788>
  4029cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029d0 <memcmp@plt>:
  4029d0:	endbr64 
  4029d4:	bnd jmp QWORD PTR [rip+0x11865]        # 414240 <memcpy@plt+0x11790>
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029e0 <calloc@plt>:
  4029e0:	endbr64 
  4029e4:	bnd jmp QWORD PTR [rip+0x1185d]        # 414248 <memcpy@plt+0x11798>
  4029eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004029f0 <rb_helper_write@plt>:
  4029f0:	endbr64 
  4029f4:	bnd jmp QWORD PTR [rip+0x11855]        # 414250 <memcpy@plt+0x117a0>
  4029fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a00 <fclose@plt>:
  402a00:	endbr64 
  402a04:	bnd jmp QWORD PTR [rip+0x1184d]        # 414258 <memcpy@plt+0x117a8>
  402a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a10 <recvfrom@plt>:
  402a10:	endbr64 
  402a14:	bnd jmp QWORD PTR [rip+0x11845]        # 414260 <memcpy@plt+0x117b0>
  402a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a20 <rb_event_add@plt>:
  402a20:	endbr64 
  402a24:	bnd jmp QWORD PTR [rip+0x1183d]        # 414268 <memcpy@plt+0x117b8>
  402a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a30 <strtoull@plt>:
  402a30:	endbr64 
  402a34:	bnd jmp QWORD PTR [rip+0x11835]        # 414270 <memcpy@plt+0x117c0>
  402a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a40 <rb_get_random@plt>:
  402a40:	endbr64 
  402a44:	bnd jmp QWORD PTR [rip+0x1182d]        # 414278 <memcpy@plt+0x117c8>
  402a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a50 <rb_make_rb_dlink_node@plt>:
  402a50:	endbr64 
  402a54:	bnd jmp QWORD PTR [rip+0x11825]        # 414280 <memcpy@plt+0x117d0>
  402a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a60 <sigemptyset@plt>:
  402a60:	endbr64 
  402a64:	bnd jmp QWORD PTR [rip+0x1181d]        # 414288 <memcpy@plt+0x117d8>
  402a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a70 <sendto@plt>:
  402a70:	endbr64 
  402a74:	bnd jmp QWORD PTR [rip+0x11815]        # 414290 <memcpy@plt+0x117e0>
  402a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a80 <bind@plt>:
  402a80:	endbr64 
  402a84:	bnd jmp QWORD PTR [rip+0x1180d]        # 414298 <memcpy@plt+0x117e8>
  402a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402a90 <fwrite@plt>:
  402a90:	endbr64 
  402a94:	bnd jmp QWORD PTR [rip+0x11805]        # 4142a0 <memcpy@plt+0x117f0>
  402a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402aa0 <rb_listen@plt>:
  402aa0:	endbr64 
  402aa4:	bnd jmp QWORD PTR [rip+0x117fd]        # 4142a8 <memcpy@plt+0x117f8>
  402aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402ab0 <memcpy@plt>:
  402ab0:	endbr64 
  402ab4:	bnd jmp QWORD PTR [rip+0x117f5]        # 4142b0 <memcpy@plt+0x11800>
  402abb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402ac0 <.text>:
  402ac0:	endbr64 
  402ac4:	xor    ebp,ebp
  402ac6:	mov    r9,rdx
  402ac9:	pop    rsi
  402aca:	mov    rdx,rsp
  402acd:	and    rsp,0xfffffffffffffff0
  402ad1:	push   rax
  402ad2:	push   rsp
  402ad3:	mov    r8,0x40e760
  402ada:	mov    rcx,0x40e6f0
  402ae1:	mov    rdi,0x402ff5
  402ae8:	call   QWORD PTR [rip+0x114f2]        # 413fe0 <memcpy@plt+0x11530>
  402aee:	hlt    
  402aef:	nop
  402af0:	endbr64 
  402af4:	ret    
  402af5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402aff:	nop
  402b00:	mov    eax,0x415f38
  402b05:	cmp    rax,0x415f38
  402b0b:	je     402b20 <memcpy@plt+0x70>
  402b0d:	mov    eax,0x0
  402b12:	test   rax,rax
  402b15:	je     402b20 <memcpy@plt+0x70>
  402b17:	mov    edi,0x415f38
  402b1c:	jmp    rax
  402b1e:	xchg   ax,ax
  402b20:	ret    
  402b21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b2c:	nop    DWORD PTR [rax+0x0]
  402b30:	mov    esi,0x415f38
  402b35:	sub    rsi,0x415f38
  402b3c:	sar    rsi,0x3
  402b40:	mov    rax,rsi
  402b43:	shr    rax,0x3f
  402b47:	add    rsi,rax
  402b4a:	sar    rsi,1
  402b4d:	je     402b60 <memcpy@plt+0xb0>
  402b4f:	mov    eax,0x0
  402b54:	test   rax,rax
  402b57:	je     402b60 <memcpy@plt+0xb0>
  402b59:	mov    edi,0x415f38
  402b5e:	jmp    rax
  402b60:	ret    
  402b61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b6c:	nop    DWORD PTR [rax+0x0]
  402b70:	endbr64 
  402b74:	cmp    BYTE PTR [rip+0x133c5],0x0        # 415f40 <memcpy@plt+0x13490>
  402b7b:	jne    402b90 <memcpy@plt+0xe0>
  402b7d:	push   rbp
  402b7e:	mov    rbp,rsp
  402b81:	call   402b00 <memcpy@plt+0x50>
  402b86:	mov    BYTE PTR [rip+0x133b3],0x1        # 415f40 <memcpy@plt+0x13490>
  402b8d:	pop    rbp
  402b8e:	ret    
  402b8f:	nop
  402b90:	ret    
  402b91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	endbr64 
  402ba4:	jmp    402b30 <memcpy@plt+0x80>
  402ba6:	endbr64 
  402baa:	push   rbp
  402bab:	mov    rbp,rsp
  402bae:	sub    rsp,0x20
  402bb2:	mov    DWORD PTR [rbp-0x14],edi
  402bb5:	mov    QWORD PTR [rbp-0x20],rsi
  402bb9:	cmp    DWORD PTR [rbp-0x14],0x2
  402bbd:	jg     402bdf <memcpy@plt+0x12f>
  402bbf:	mov    eax,DWORD PTR [rbp-0x14]
  402bc2:	mov    edx,eax
  402bc4:	lea    rsi,[rip+0xc43d]        # 40f008 <memcpy@plt+0xc558>
  402bcb:	mov    edi,0x43
  402bd0:	mov    eax,0x0
  402bd5:	call   403c26 <memcpy@plt+0x1176>
  402bda:	jmp    402c7f <memcpy@plt+0x1cf>
  402bdf:	mov    rax,QWORD PTR [rbp-0x20]
  402be3:	add    rax,0x8
  402be7:	mov    rax,QWORD PTR [rax]
  402bea:	mov    edx,0x10
  402bef:	mov    esi,0x0
  402bf4:	mov    rdi,rax
  402bf7:	call   402a30 <strtoull@plt>
  402bfc:	mov    QWORD PTR [rbp-0x10],rax
  402c00:	mov    eax,0xffffffff
  402c05:	cmp    QWORD PTR [rbp-0x10],rax
  402c09:	jbe    402c31 <memcpy@plt+0x181>
  402c0b:	mov    rax,QWORD PTR [rbp-0x20]
  402c0f:	add    rax,0x8
  402c13:	mov    rax,QWORD PTR [rax]
  402c16:	mov    rdx,rax
  402c19:	lea    rsi,[rip+0xc438]        # 40f058 <memcpy@plt+0xc5a8>
  402c20:	mov    edi,0x43
  402c25:	mov    eax,0x0
  402c2a:	call   403c26 <memcpy@plt+0x1176>
  402c2f:	jmp    402c7f <memcpy@plt+0x1cf>
  402c31:	mov    rax,QWORD PTR [rbp-0x20]
  402c35:	add    rax,0x10
  402c39:	mov    rax,QWORD PTR [rax]
  402c3c:	movzx  eax,BYTE PTR [rax]
  402c3f:	movzx  edx,al
  402c42:	mov    rax,0x414ae0
  402c49:	movsxd rdx,edx
  402c4c:	mov    rax,QWORD PTR [rax+rdx*8]
  402c50:	mov    QWORD PTR [rbp-0x8],rax
  402c54:	cmp    QWORD PTR [rbp-0x8],0x0
  402c59:	je     402c7e <memcpy@plt+0x1ce>
  402c5b:	mov    rax,QWORD PTR [rbp-0x20]
  402c5f:	add    rax,0x10
  402c63:	mov    rax,QWORD PTR [rax]
  402c66:	movzx  eax,BYTE PTR [rax]
  402c69:	movsx  edx,al
  402c6c:	mov    rax,QWORD PTR [rbp-0x10]
  402c70:	mov    ecx,eax
  402c72:	mov    rax,QWORD PTR [rbp-0x8]
  402c76:	mov    esi,edx
  402c78:	mov    edi,ecx
  402c7a:	call   rax
  402c7c:	jmp    402c7f <memcpy@plt+0x1cf>
  402c7e:	nop
  402c7f:	leave  
  402c80:	ret    
  402c81:	endbr64 
  402c85:	push   rbp
  402c86:	mov    rbp,rsp
  402c89:	sub    rsp,0x20
  402c8d:	mov    DWORD PTR [rbp-0x14],edi
  402c90:	mov    QWORD PTR [rbp-0x20],rsi
  402c94:	cmp    DWORD PTR [rbp-0x14],0x1
  402c98:	jg     402cba <memcpy@plt+0x20a>
  402c9a:	mov    eax,DWORD PTR [rbp-0x14]
  402c9d:	mov    edx,eax
  402c9f:	lea    rsi,[rip+0xc3ea]        # 40f090 <memcpy@plt+0xc5e0>
  402ca6:	mov    edi,0x43
  402cab:	mov    eax,0x0
  402cb0:	call   403c26 <memcpy@plt+0x1176>
  402cb5:	jmp    402d68 <memcpy@plt+0x2b8>
  402cba:	mov    rax,QWORD PTR [rbp-0x20]
  402cbe:	add    rax,0x8
  402cc2:	mov    rdx,QWORD PTR [rax]
  402cc5:	mov    rax,0x41a260
  402ccc:	mov    rax,QWORD PTR [rax]
  402ccf:	mov    rsi,rdx
  402cd2:	mov    rdi,rax
  402cd5:	call   4028f0 <rb_dictionary_retrieve@plt>
  402cda:	mov    QWORD PTR [rbp-0x8],rax
  402cde:	cmp    QWORD PTR [rbp-0x8],0x0
  402ce3:	jne    402d0b <memcpy@plt+0x25b>
  402ce5:	mov    rax,QWORD PTR [rbp-0x20]
  402ce9:	add    rax,0x8
  402ced:	mov    rax,QWORD PTR [rax]
  402cf0:	mov    rdx,rax
  402cf3:	lea    rsi,[rip+0xc3e6]        # 40f0e0 <memcpy@plt+0xc630>
  402cfa:	mov    edi,0x43
  402cff:	mov    eax,0x0
  402d04:	call   403c26 <memcpy@plt+0x1176>
  402d09:	jmp    402d68 <memcpy@plt+0x2b8>
  402d0b:	mov    eax,DWORD PTR [rbp-0x14]
  402d0e:	lea    edx,[rax-0x1]
  402d11:	mov    rax,QWORD PTR [rbp-0x8]
  402d15:	mov    eax,DWORD PTR [rax+0x8]
  402d18:	cmp    edx,eax
  402d1a:	jg     402d42 <memcpy@plt+0x292>
  402d1c:	mov    rax,QWORD PTR [rbp-0x8]
  402d20:	mov    eax,DWORD PTR [rax+0x8]
  402d23:	mov    edx,DWORD PTR [rbp-0x14]
  402d26:	mov    ecx,edx
  402d28:	mov    edx,eax
  402d2a:	lea    rsi,[rip+0xc3df]        # 40f110 <memcpy@plt+0xc660>
  402d31:	mov    edi,0x43
  402d36:	mov    eax,0x0
  402d3b:	call   403c26 <memcpy@plt+0x1176>
  402d40:	jmp    402d68 <memcpy@plt+0x2b8>
  402d42:	mov    rax,QWORD PTR [rbp-0x8]
  402d46:	mov    rax,QWORD PTR [rax+0x10]
  402d4a:	mov    rdx,QWORD PTR [rbp-0x20]
  402d4e:	add    rdx,0x10
  402d52:	mov    ecx,DWORD PTR [rbp-0x14]
  402d55:	lea    esi,[rcx-0x2]
  402d58:	mov    rcx,QWORD PTR [rbp-0x20]
  402d5c:	add    rcx,0x8
  402d60:	mov    rcx,QWORD PTR [rcx]
  402d63:	mov    rdi,rcx
  402d66:	call   rax
  402d68:	leave  
  402d69:	ret    
  402d6a:	endbr64 
  402d6e:	push   rbp
  402d6f:	mov    rbp,rsp
  402d72:	sub    rsp,0x20
  402d76:	mov    DWORD PTR [rbp-0x14],edi
  402d79:	mov    QWORD PTR [rbp-0x20],rsi
  402d7d:	cmp    DWORD PTR [rbp-0x14],0x2
  402d81:	jg     402dc8 <memcpy@plt+0x318>
  402d83:	mov    QWORD PTR [rbp-0x10],0x0
  402d8b:	jmp    402dbc <memcpy@plt+0x30c>
  402d8d:	mov    rax,QWORD PTR [rbp-0x10]
  402d91:	movzx  edx,al
  402d94:	mov    rax,0x4152e0
  402d9b:	movsxd rdx,edx
  402d9e:	mov    rax,QWORD PTR [rax+rdx*8]
  402da2:	mov    QWORD PTR [rbp-0x8],rax
  402da6:	cmp    QWORD PTR [rbp-0x8],0x0
  402dab:	je     402db8 <memcpy@plt+0x308>
  402dad:	mov    rax,QWORD PTR [rbp-0x8]
  402db1:	mov    edi,0x0
  402db6:	call   rax
  402db8:	inc    QWORD PTR [rbp-0x10]
  402dbc:	cmp    QWORD PTR [rbp-0x10],0xff
  402dc4:	jbe    402d8d <memcpy@plt+0x2dd>
  402dc6:	jmp    402e0e <memcpy@plt+0x35e>
  402dc8:	mov    rax,QWORD PTR [rbp-0x20]
  402dcc:	add    rax,0x8
  402dd0:	mov    rax,QWORD PTR [rax]
  402dd3:	movzx  eax,BYTE PTR [rax]
  402dd6:	movzx  edx,al
  402dd9:	mov    rax,0x4152e0
  402de0:	movsxd rdx,edx
  402de3:	mov    rax,QWORD PTR [rax+rdx*8]
  402de7:	mov    QWORD PTR [rbp-0x8],rax
  402deb:	cmp    QWORD PTR [rbp-0x8],0x0
  402df0:	je     402e0d <memcpy@plt+0x35d>
  402df2:	mov    rax,QWORD PTR [rbp-0x20]
  402df6:	add    rax,0x8
  402dfa:	mov    rax,QWORD PTR [rax]
  402dfd:	movzx  eax,BYTE PTR [rax]
  402e00:	movsx  edx,al
  402e03:	mov    rax,QWORD PTR [rbp-0x8]
  402e07:	mov    edi,edx
  402e09:	call   rax
  402e0b:	jmp    402e0e <memcpy@plt+0x35e>
  402e0d:	nop
  402e0e:	leave  
  402e0f:	ret    
  402e10:	endbr64 
  402e14:	push   rbp
  402e15:	mov    rbp,rsp
  402e18:	sub    rsp,0x20
  402e1c:	mov    QWORD PTR [rbp-0x18],rdi
  402e20:	jmp    402e7d <memcpy@plt+0x3cd>
  402e22:	mov    edx,0xa
  402e27:	lea    rsi,[rip+0x17152]        # 419f80 <memcpy@plt+0x174d0>
  402e2e:	lea    rdi,[rip+0x1314b]        # 415f80 <memcpy@plt+0x134d0>
  402e35:	call   402770 <rb_string_to_array@plt>
  402e3a:	mov    DWORD PTR [rbp-0xc],eax
  402e3d:	cmp    DWORD PTR [rbp-0xc],0x0
  402e41:	jg     402e45 <memcpy@plt+0x395>
  402e43:	jmp    402e7d <memcpy@plt+0x3cd>
  402e45:	mov    rax,QWORD PTR [rip+0x17134]        # 419f80 <memcpy@plt+0x174d0>
  402e4c:	movzx  eax,BYTE PTR [rax]
  402e4f:	movzx  edx,al
  402e52:	mov    rax,0x4142e0
  402e59:	movsxd rdx,edx
  402e5c:	mov    rax,QWORD PTR [rax+rdx*8]
  402e60:	mov    QWORD PTR [rbp-0x8],rax
  402e64:	cmp    QWORD PTR [rbp-0x8],0x0
  402e69:	je     402e7d <memcpy@plt+0x3cd>
  402e6b:	mov    edx,DWORD PTR [rbp-0xc]
  402e6e:	mov    rax,QWORD PTR [rbp-0x8]
  402e72:	lea    rsi,[rip+0x17107]        # 419f80 <memcpy@plt+0x174d0>
  402e79:	mov    edi,edx
  402e7b:	call   rax
  402e7d:	mov    rax,QWORD PTR [rbp-0x18]
  402e81:	mov    edx,0x4000
  402e86:	lea    rsi,[rip+0x130f3]        # 415f80 <memcpy@plt+0x134d0>
  402e8d:	mov    rdi,rax
  402e90:	call   402960 <rb_helper_read@plt>
  402e95:	mov    DWORD PTR [rbp-0x10],eax
  402e98:	cmp    DWORD PTR [rbp-0x10],0x0
  402e9c:	jg     402e22 <memcpy@plt+0x372>
  402e9e:	nop
  402e9f:	leave  
  402ea0:	ret    
  402ea1:	endbr64 
  402ea5:	push   rbp
  402ea6:	mov    rbp,rsp
  402ea9:	sub    rsp,0x10
  402ead:	mov    QWORD PTR [rbp-0x8],rdi
  402eb1:	mov    edi,0x1
  402eb6:	call   402630 <exit@plt>
  402ebb:	endbr64 
  402ebf:	push   rbp
  402ec0:	mov    rbp,rsp
  402ec3:	mov    DWORD PTR [rbp-0x4],edi
  402ec6:	nop
  402ec7:	pop    rbp
  402ec8:	ret    
  402ec9:	endbr64 
  402ecd:	push   rbp
  402ece:	mov    rbp,rsp
  402ed1:	sub    rsp,0xa0
  402ed8:	mov    rax,QWORD PTR fs:0x28
  402ee1:	mov    QWORD PTR [rbp-0x8],rax
  402ee5:	xor    eax,eax
  402ee7:	mov    DWORD PTR [rbp-0x18],0x0
  402eee:	mov    QWORD PTR [rbp-0xa0],0x1
  402ef9:	lea    rax,[rbp-0xa0]
  402f00:	add    rax,0x8
  402f04:	mov    rdi,rax
  402f07:	call   402a60 <sigemptyset@plt>
  402f0c:	lea    rax,[rbp-0xa0]
  402f13:	add    rax,0x8
  402f17:	mov    esi,0xd
  402f1c:	mov    rdi,rax
  402f1f:	call   402940 <sigaddset@plt>
  402f24:	lea    rax,[rbp-0xa0]
  402f2b:	add    rax,0x8
  402f2f:	mov    esi,0xe
  402f34:	mov    rdi,rax
  402f37:	call   402940 <sigaddset@plt>
  402f3c:	lea    rax,[rbp-0xa0]
  402f43:	add    rax,0x8
  402f47:	mov    esi,0x5
  402f4c:	mov    rdi,rax
  402f4f:	call   402940 <sigaddset@plt>
  402f54:	lea    rax,[rbp-0xa0]
  402f5b:	add    rax,0x8
  402f5f:	mov    esi,0x1c
  402f64:	mov    rdi,rax
  402f67:	call   402940 <sigaddset@plt>
  402f6c:	lea    rax,[rbp-0xa0]
  402f73:	mov    edx,0x0
  402f78:	mov    rsi,rax
  402f7b:	mov    edi,0x1c
  402f80:	call   402840 <sigaction@plt>
  402f85:	lea    rax,[rbp-0xa0]
  402f8c:	mov    edx,0x0
  402f91:	mov    rsi,rax
  402f94:	mov    edi,0xd
  402f99:	call   402840 <sigaction@plt>
  402f9e:	lea    rax,[rbp-0xa0]
  402fa5:	mov    edx,0x0
  402faa:	mov    rsi,rax
  402fad:	mov    edi,0x5
  402fb2:	call   402840 <sigaction@plt>
  402fb7:	lea    rax,[rip+0xfffffffffffffefd]        # 402ebb <memcpy@plt+0x40b>
  402fbe:	mov    QWORD PTR [rbp-0xa0],rax
  402fc5:	lea    rax,[rbp-0xa0]
  402fcc:	mov    edx,0x0
  402fd1:	mov    rsi,rax
  402fd4:	mov    edi,0xe
  402fd9:	call   402840 <sigaction@plt>
  402fde:	nop
  402fdf:	mov    rax,QWORD PTR [rbp-0x8]
  402fe3:	xor    rax,QWORD PTR fs:0x28
  402fec:	je     402ff3 <memcpy@plt+0x543>
  402fee:	call   402950 <__stack_chk_fail@plt>
  402ff3:	leave  
  402ff4:	ret    
  402ff5:	endbr64 
  402ff9:	push   rbp
  402ffa:	mov    rbp,rsp
  402ffd:	sub    rsp,0x10
  403001:	mov    DWORD PTR [rbp-0x4],edi
  403004:	mov    QWORD PTR [rbp-0x10],rsi
  403008:	call   402ec9 <memcpy@plt+0x419>
  40300d:	push   0x100
  403012:	push   0x100
  403017:	mov    r9d,0x100
  40301d:	mov    r8d,0x0
  403023:	mov    ecx,0x0
  403028:	mov    edx,0x0
  40302d:	lea    rsi,[rip+0xfffffffffffffe6d]        # 402ea1 <memcpy@plt+0x3f1>
  403034:	lea    rdi,[rip+0xfffffffffffffdd5]        # 402e10 <memcpy@plt+0x360>
  40303b:	call   4026b0 <rb_helper_child@plt>
  403040:	add    rsp,0x10
  403044:	mov    rdx,rax
  403047:	mov    rax,0x415f60
  40304e:	mov    QWORD PTR [rax],rdx
  403051:	mov    rax,0x415f60
  403058:	mov    rax,QWORD PTR [rax]
  40305b:	test   rax,rax
  40305e:	jne    40308d <memcpy@plt+0x5dd>
  403060:	mov    rax,QWORD PTR [rip+0x10f91]        # 413ff8 <memcpy@plt+0x11548>
  403067:	mov    rax,QWORD PTR [rax]
  40306a:	mov    rcx,rax
  40306d:	mov    edx,0x2e
  403072:	mov    esi,0x1
  403077:	lea    rdi,[rip+0xc0e2]        # 40f160 <memcpy@plt+0xc6b0>
  40307e:	call   402a90 <fwrite@plt>
  403083:	mov    edi,0x1
  403088:	call   402630 <exit@plt>
  40308d:	call   402930 <rb_set_time@plt>
  403092:	call   402ec9 <memcpy@plt+0x419>
  403097:	mov    rax,QWORD PTR [rip+0x10f4a]        # 413fe8 <memcpy@plt+0x11538>
  40309e:	mov    rsi,rax
  4030a1:	lea    rdi,[rip+0xc0e7]        # 40f18f <memcpy@plt+0xc6df>
  4030a8:	call   4029b0 <rb_dictionary_create@plt>
  4030ad:	mov    rdx,rax
  4030b0:	mov    rax,0x41a260
  4030b7:	mov    QWORD PTR [rax],rdx
  4030ba:	call   405828 <memcpy@plt+0x2d78>
  4030bf:	call   404394 <memcpy@plt+0x18e4>
  4030c4:	mov    esi,0x1
  4030c9:	mov    edi,0x0
  4030ce:	call   4028e0 <rb_init_prng@plt>
  4030d3:	mov    rax,0x415f60
  4030da:	mov    rax,QWORD PTR [rax]
  4030dd:	mov    esi,0x0
  4030e2:	mov    rdi,rax
  4030e5:	call   402580 <rb_helper_loop@plt>
  4030ea:	push   rbp
  4030eb:	mov    rbp,rsp
  4030ee:	sub    rsp,0x20
  4030f2:	mov    QWORD PTR [rbp-0x18],rdi
  4030f6:	mov    rax,QWORD PTR [rbp-0x18]
  4030fa:	mov    rsi,rax
  4030fd:	mov    edi,0x1
  403102:	call   4029e0 <calloc@plt>
  403107:	mov    QWORD PTR [rbp-0x8],rax
  40310b:	cmp    QWORD PTR [rbp-0x8],0x0
  403110:	sete   al
  403113:	movzx  eax,al
  403116:	test   rax,rax
  403119:	je     403120 <memcpy@plt+0x670>
  40311b:	call   402900 <rb_outofmemory@plt>
  403120:	mov    rax,QWORD PTR [rbp-0x8]
  403124:	leave  
  403125:	ret    
  403126:	push   rbp
  403127:	mov    rbp,rsp
  40312a:	sub    rsp,0x20
  40312e:	mov    QWORD PTR [rbp-0x18],rdi
  403132:	mov    rax,QWORD PTR [rbp-0x18]
  403136:	mov    rdi,rax
  403139:	call   402760 <strlen@plt>
  40313e:	inc    rax
  403141:	mov    rdi,rax
  403144:	call   4026d0 <malloc@plt>
  403149:	mov    QWORD PTR [rbp-0x8],rax
  40314d:	cmp    QWORD PTR [rbp-0x8],0x0
  403152:	sete   al
  403155:	movzx  eax,al
  403158:	test   rax,rax
  40315b:	je     403162 <memcpy@plt+0x6b2>
  40315d:	call   402900 <rb_outofmemory@plt>
  403162:	mov    rdx,QWORD PTR [rbp-0x18]
  403166:	mov    rax,QWORD PTR [rbp-0x8]
  40316a:	mov    rsi,rdx
  40316d:	mov    rdi,rax
  403170:	call   4029a0 <strcpy@plt>
  403175:	mov    rax,QWORD PTR [rbp-0x8]
  403179:	leave  
  40317a:	ret    
  40317b:	push   rbp
  40317c:	mov    rbp,rsp
  40317f:	sub    rsp,0x10
  403183:	mov    QWORD PTR [rbp-0x8],rdi
  403187:	cmp    QWORD PTR [rbp-0x8],0x0
  40318c:	setne  al
  40318f:	movzx  eax,al
  403192:	test   rax,rax
  403195:	je     4031a3 <memcpy@plt+0x6f3>
  403197:	mov    rax,QWORD PTR [rbp-0x8]
  40319b:	mov    rdi,rax
  40319e:	call   402750 <free@plt>
  4031a3:	nop
  4031a4:	leave  
  4031a5:	ret    
  4031a6:	endbr64 
  4031aa:	push   rbp
  4031ab:	mov    rbp,rsp
  4031ae:	sub    rsp,0x30
  4031b2:	mov    QWORD PTR [rbp-0x18],rdi
  4031b6:	mov    DWORD PTR [rbp-0x1c],esi
  4031b9:	mov    QWORD PTR [rbp-0x28],rdx
  4031bd:	mov    QWORD PTR [rbp-0x30],rcx
  4031c1:	mov    edi,0xb0
  4031c6:	call   4030ea <memcpy@plt+0x63a>
  4031cb:	mov    QWORD PTR [rbp-0x8],rax
  4031cf:	cmp    DWORD PTR [rbp-0x1c],0x2
  4031d3:	jne    4031e9 <memcpy@plt+0x739>
  4031d5:	mov    rax,QWORD PTR [rbp-0x8]
  4031d9:	mov    DWORD PTR [rax+0x10],0x34
  4031e0:	mov    DWORD PTR [rbp-0xc],0x1
  4031e7:	jmp    403216 <memcpy@plt+0x766>
  4031e9:	cmp    DWORD PTR [rbp-0x1c],0xa
  4031ed:	jne    403203 <memcpy@plt+0x753>
  4031ef:	mov    rax,QWORD PTR [rbp-0x8]
  4031f3:	mov    DWORD PTR [rax+0x10],0x36
  4031fa:	mov    DWORD PTR [rbp-0xc],0x1c
  403201:	jmp    403216 <memcpy@plt+0x766>
  403203:	mov    rax,QWORD PTR [rbp-0x8]
  403207:	mov    rdi,rax
  40320a:	call   40317b <memcpy@plt+0x6cb>
  40320f:	mov    eax,0x0
  403214:	jmp    40328b <memcpy@plt+0x7db>
  403216:	mov    rax,0x419fd8
  40321d:	mov    rax,QWORD PTR [rax]
  403220:	lea    rcx,[rax+0x1]
  403224:	mov    rdx,0x419fd8
  40322b:	mov    QWORD PTR [rdx],rcx
  40322e:	mov    rdx,QWORD PTR [rbp-0x8]
  403232:	mov    QWORD PTR [rdx+0x98],rax
  403239:	mov    rax,QWORD PTR [rbp-0x8]
  40323d:	mov    rdx,QWORD PTR [rbp-0x28]
  403241:	mov    QWORD PTR [rax+0xa0],rdx
  403248:	mov    rax,QWORD PTR [rbp-0x8]
  40324c:	mov    rdx,QWORD PTR [rbp-0x30]
  403250:	mov    QWORD PTR [rax+0xa8],rdx
  403257:	mov    rax,QWORD PTR [rbp-0x8]
  40325b:	mov    rdx,QWORD PTR [rbp-0x8]
  40325f:	mov    QWORD PTR [rax],rdx
  403262:	mov    rax,QWORD PTR [rbp-0x8]
  403266:	lea    rdx,[rip+0x166]        # 4033d3 <memcpy@plt+0x923>
  40326d:	mov    QWORD PTR [rax+0x8],rdx
  403271:	mov    rcx,QWORD PTR [rbp-0x8]
  403275:	mov    edx,DWORD PTR [rbp-0xc]
  403278:	mov    rax,QWORD PTR [rbp-0x18]
  40327c:	mov    rsi,rcx
  40327f:	mov    rdi,rax
  403282:	call   405d15 <memcpy@plt+0x3265>
  403287:	mov    rax,QWORD PTR [rbp-0x8]
  40328b:	leave  
  40328c:	ret    
  40328d:	endbr64 
  403291:	push   rbp
  403292:	mov    rbp,rsp
  403295:	sub    rsp,0x30
  403299:	mov    QWORD PTR [rbp-0x18],rdi
  40329d:	mov    QWORD PTR [rbp-0x20],rsi
  4032a1:	mov    QWORD PTR [rbp-0x28],rdx
  4032a5:	mov    edi,0xb0
  4032aa:	call   4030ea <memcpy@plt+0x63a>
  4032af:	mov    QWORD PTR [rbp-0x8],rax
  4032b3:	mov    rax,QWORD PTR [rbp-0x8]
  4032b7:	lea    rdx,[rax+0x18]
  4032bb:	mov    rax,QWORD PTR [rbp-0x18]
  4032bf:	mov    rsi,rdx
  4032c2:	mov    rdi,rax
  4032c5:	call   4027d0 <rb_inet_pton_sock@plt>
  4032ca:	test   eax,eax
  4032cc:	jne    4032e4 <memcpy@plt+0x834>
  4032ce:	mov    rax,QWORD PTR [rbp-0x8]
  4032d2:	mov    rdi,rax
  4032d5:	call   40317b <memcpy@plt+0x6cb>
  4032da:	mov    eax,0x0
  4032df:	jmp    4033a4 <memcpy@plt+0x8f4>
  4032e4:	mov    rax,QWORD PTR [rbp-0x8]
  4032e8:	add    rax,0x18
  4032ec:	movzx  eax,WORD PTR [rax]
  4032ef:	movzx  eax,ax
  4032f2:	mov    DWORD PTR [rbp-0xc],eax
  4032f5:	cmp    DWORD PTR [rbp-0xc],0x2
  4032f9:	jne    403308 <memcpy@plt+0x858>
  4032fb:	mov    rax,QWORD PTR [rbp-0x8]
  4032ff:	mov    DWORD PTR [rax+0x10],0x52
  403306:	jmp    40332e <memcpy@plt+0x87e>
  403308:	cmp    DWORD PTR [rbp-0xc],0xa
  40330c:	jne    40331b <memcpy@plt+0x86b>
  40330e:	mov    rax,QWORD PTR [rbp-0x8]
  403312:	mov    DWORD PTR [rax+0x10],0x53
  403319:	jmp    40332e <memcpy@plt+0x87e>
  40331b:	mov    rax,QWORD PTR [rbp-0x8]
  40331f:	mov    rdi,rax
  403322:	call   40317b <memcpy@plt+0x6cb>
  403327:	mov    eax,0x0
  40332c:	jmp    4033a4 <memcpy@plt+0x8f4>
  40332e:	mov    rax,0x419fd8
  403335:	mov    rax,QWORD PTR [rax]
  403338:	lea    rcx,[rax+0x1]
  40333c:	mov    rdx,0x419fd8
  403343:	mov    QWORD PTR [rdx],rcx
  403346:	mov    rdx,QWORD PTR [rbp-0x8]
  40334a:	mov    QWORD PTR [rdx+0x98],rax
  403351:	mov    rax,QWORD PTR [rbp-0x8]
  403355:	mov    rdx,QWORD PTR [rbp-0x20]
  403359:	mov    QWORD PTR [rax+0xa0],rdx
  403360:	mov    rax,QWORD PTR [rbp-0x8]
  403364:	mov    rdx,QWORD PTR [rbp-0x28]
  403368:	mov    QWORD PTR [rax+0xa8],rdx
  40336f:	mov    rax,QWORD PTR [rbp-0x8]
  403373:	mov    rdx,QWORD PTR [rbp-0x8]
  403377:	mov    QWORD PTR [rax],rdx
  40337a:	mov    rax,QWORD PTR [rbp-0x8]
  40337e:	lea    rdx,[rip+0x230]        # 4035b5 <memcpy@plt+0xb05>
  403385:	mov    QWORD PTR [rax+0x8],rdx
  403389:	mov    rax,QWORD PTR [rbp-0x8]
  40338d:	mov    rdx,QWORD PTR [rbp-0x8]
  403391:	add    rdx,0x18
  403395:	mov    rsi,rax
  403398:	mov    rdi,rdx
  40339b:	call   405e32 <memcpy@plt+0x3382>
  4033a0:	mov    rax,QWORD PTR [rbp-0x8]
  4033a4:	leave  
  4033a5:	ret    
  4033a6:	endbr64 
  4033aa:	push   rbp
  4033ab:	mov    rbp,rsp
  4033ae:	mov    QWORD PTR [rbp-0x8],rdi
  4033b2:	mov    rax,QWORD PTR [rbp-0x8]
  4033b6:	mov    QWORD PTR [rax+0xa8],0x0
  4033c1:	mov    rax,QWORD PTR [rbp-0x8]
  4033c5:	mov    QWORD PTR [rax+0xa0],0x0
  4033d0:	nop
  4033d1:	pop    rbp
  4033d2:	ret    
  4033d3:	endbr64 
  4033d7:	push   rbp
  4033d8:	mov    rbp,rsp
  4033db:	sub    rsp,0x60
  4033df:	mov    QWORD PTR [rbp-0x58],rdi
  4033e3:	mov    QWORD PTR [rbp-0x60],rsi
  4033e7:	mov    rax,QWORD PTR fs:0x28
  4033f0:	mov    QWORD PTR [rbp-0x8],rax
  4033f4:	xor    eax,eax
  4033f6:	mov    rax,QWORD PTR [rbp-0x58]
  4033fa:	mov    QWORD PTR [rbp-0x48],rax
  4033fe:	mov    QWORD PTR [rbp-0x40],0x2a
  403406:	mov    QWORD PTR [rbp-0x38],0x0
  40340e:	mov    QWORD PTR [rbp-0x30],0x0
  403416:	mov    QWORD PTR [rbp-0x28],0x0
  40341e:	mov    QWORD PTR [rbp-0x20],0x0
  403426:	mov    QWORD PTR [rbp-0x18],0x0
  40342e:	mov    DWORD PTR [rbp-0x10],0x0
  403435:	mov    BYTE PTR [rbp-0xc],0x0
  403439:	cmp    QWORD PTR [rbp-0x48],0x0
  40343e:	jne    403460 <memcpy@plt+0x9b0>
  403440:	lea    rsi,[rip+0xbd61]        # 40f1a8 <memcpy@plt+0xc6f8>
  403447:	mov    edi,0x43
  40344c:	mov    eax,0x0
  403451:	call   403c26 <memcpy@plt+0x1176>
  403456:	mov    edi,0x2
  40345b:	call   402630 <exit@plt>
  403460:	cmp    QWORD PTR [rbp-0x60],0x0
  403465:	je     403548 <memcpy@plt+0xa98>
  40346b:	mov    rax,QWORD PTR [rbp-0x48]
  40346f:	mov    eax,DWORD PTR [rax+0x10]
  403472:	cmp    eax,0x34
  403475:	je     403481 <memcpy@plt+0x9d1>
  403477:	cmp    eax,0x36
  40347a:	je     4034b7 <memcpy@plt+0xa07>
  40347c:	jmp    40351f <memcpy@plt+0xa6f>
  403481:	mov    rax,QWORD PTR [rbp-0x60]
  403485:	add    rax,0x8
  403489:	movzx  eax,WORD PTR [rax]
  40348c:	cmp    ax,0x2
  403490:	jne    40354b <memcpy@plt+0xa9b>
  403496:	mov    rax,QWORD PTR [rbp-0x60]
  40349a:	lea    rcx,[rax+0x8]
  40349e:	lea    rax,[rbp-0x40]
  4034a2:	mov    edx,0x35
  4034a7:	mov    rsi,rax
  4034aa:	mov    rdi,rcx
  4034ad:	call   402980 <rb_inet_ntop_sock@plt>
  4034b2:	jmp    40354b <memcpy@plt+0xa9b>
  4034b7:	mov    rax,QWORD PTR [rbp-0x60]
  4034bb:	add    rax,0x8
  4034bf:	movzx  eax,WORD PTR [rax]
  4034c2:	cmp    ax,0xa
  4034c6:	jne    40354e <memcpy@plt+0xa9e>
  4034cc:	mov    rax,QWORD PTR [rbp-0x60]
  4034d0:	lea    rcx,[rax+0x8]
  4034d4:	lea    rax,[rbp-0x40]
  4034d8:	mov    edx,0x35
  4034dd:	mov    rsi,rax
  4034e0:	mov    rdi,rcx
  4034e3:	call   402980 <rb_inet_ntop_sock@plt>
  4034e8:	movzx  eax,BYTE PTR [rbp-0x40]
  4034ec:	cmp    al,0x3a
  4034ee:	jne    40354e <memcpy@plt+0xa9e>
  4034f0:	lea    rax,[rbp-0x40]
  4034f4:	mov    rdi,rax
  4034f7:	call   402760 <strlen@plt>
  4034fc:	mov    rsi,rax
  4034ff:	lea    rax,[rbp-0x40]
  403503:	lea    rdx,[rbp-0x40]
  403507:	lea    rcx,[rdx+0x1]
  40350b:	mov    rdx,rsi
  40350e:	mov    rsi,rax
  403511:	mov    rdi,rcx
  403514:	call   4028b0 <memmove@plt>
  403519:	mov    BYTE PTR [rbp-0x40],0x30
  40351d:	jmp    40354e <memcpy@plt+0xa9e>
  40351f:	mov    rax,QWORD PTR [rbp-0x48]
  403523:	mov    eax,DWORD PTR [rax+0x10]
  403526:	mov    edx,eax
  403528:	lea    rsi,[rip+0xbca9]        # 40f1d8 <memcpy@plt+0xc728>
  40352f:	mov    edi,0x43
  403534:	mov    eax,0x0
  403539:	call   403c26 <memcpy@plt+0x1176>
  40353e:	mov    edi,0x2
  403543:	call   402630 <exit@plt>
  403548:	nop
  403549:	jmp    40354f <memcpy@plt+0xa9f>
  40354b:	nop
  40354c:	jmp    40354f <memcpy@plt+0xa9f>
  40354e:	nop
  40354f:	mov    rax,QWORD PTR [rbp-0x48]
  403553:	mov    rax,QWORD PTR [rax+0xa0]
  40355a:	test   rax,rax
  40355d:	je     403592 <memcpy@plt+0xae2>
  40355f:	mov    rax,QWORD PTR [rbp-0x48]
  403563:	mov    r8,QWORD PTR [rax+0xa0]
  40356a:	mov    rax,QWORD PTR [rbp-0x48]
  40356e:	mov    rcx,QWORD PTR [rax+0xa8]
  403575:	mov    rax,QWORD PTR [rbp-0x48]
  403579:	mov    edx,DWORD PTR [rax+0x10]
  40357c:	movzx  eax,BYTE PTR [rbp-0x40]
  403580:	cmp    al,0x2a
  403582:	setne  al
  403585:	movzx  esi,al
  403588:	lea    rax,[rbp-0x40]
  40358c:	mov    rdi,rax
  40358f:	call   r8
  403592:	mov    rax,QWORD PTR [rbp-0x48]
  403596:	mov    rdi,rax
  403599:	call   40317b <memcpy@plt+0x6cb>
  40359e:	nop
  40359f:	mov    rax,QWORD PTR [rbp-0x8]
  4035a3:	xor    rax,QWORD PTR fs:0x28
  4035ac:	je     4035b3 <memcpy@plt+0xb03>
  4035ae:	call   402950 <__stack_chk_fail@plt>
  4035b3:	leave  
  4035b4:	ret    
  4035b5:	endbr64 
  4035b9:	push   rbp
  4035ba:	mov    rbp,rsp
  4035bd:	sub    rsp,0x40
  4035c1:	mov    QWORD PTR [rbp-0x38],rdi
  4035c5:	mov    QWORD PTR [rbp-0x40],rsi
  4035c9:	mov    rax,QWORD PTR [rbp-0x38]
  4035cd:	mov    QWORD PTR [rbp-0x28],rax
  4035d1:	mov    QWORD PTR [rbp-0x30],0x0
  4035d9:	cmp    QWORD PTR [rbp-0x28],0x0
  4035de:	jne    403600 <memcpy@plt+0xb50>
  4035e0:	lea    rsi,[rip+0xbc29]        # 40f210 <memcpy@plt+0xc760>
  4035e7:	mov    edi,0x43
  4035ec:	mov    eax,0x0
  4035f1:	call   403c26 <memcpy@plt+0x1176>
  4035f6:	mov    edi,0x2
  4035fb:	call   402630 <exit@plt>
  403600:	cmp    QWORD PTR [rbp-0x40],0x0
  403605:	je     4036d0 <memcpy@plt+0xc20>
  40360b:	mov    rax,QWORD PTR [rbp-0x28]
  40360f:	mov    eax,DWORD PTR [rax+0x10]
  403612:	cmp    eax,0x52
  403615:	jne    403652 <memcpy@plt+0xba2>
  403617:	mov    rax,QWORD PTR [rbp-0x28]
  40361b:	add    rax,0x18
  40361f:	mov    QWORD PTR [rbp-0x20],rax
  403623:	mov    rax,QWORD PTR [rbp-0x40]
  403627:	add    rax,0x8
  40362b:	mov    QWORD PTR [rbp-0x18],rax
  40362f:	mov    rax,QWORD PTR [rbp-0x20]
  403633:	mov    edx,DWORD PTR [rax+0x4]
  403636:	mov    rax,QWORD PTR [rbp-0x18]
  40363a:	mov    eax,DWORD PTR [rax+0x4]
  40363d:	cmp    edx,eax
  40363f:	jne    4036d1 <memcpy@plt+0xc21>
  403645:	mov    rax,QWORD PTR [rbp-0x40]
  403649:	mov    rax,QWORD PTR [rax]
  40364c:	mov    QWORD PTR [rbp-0x30],rax
  403650:	jmp    4036d1 <memcpy@plt+0xc21>
  403652:	mov    rax,QWORD PTR [rbp-0x28]
  403656:	mov    eax,DWORD PTR [rax+0x10]
  403659:	cmp    eax,0x53
  40365c:	jne    4036a7 <memcpy@plt+0xbf7>
  40365e:	mov    rax,QWORD PTR [rbp-0x28]
  403662:	add    rax,0x18
  403666:	mov    QWORD PTR [rbp-0x10],rax
  40366a:	mov    rax,QWORD PTR [rbp-0x40]
  40366e:	add    rax,0x8
  403672:	mov    QWORD PTR [rbp-0x8],rax
  403676:	mov    rax,QWORD PTR [rbp-0x8]
  40367a:	lea    rcx,[rax+0x8]
  40367e:	mov    rax,QWORD PTR [rbp-0x10]
  403682:	add    rax,0x8
  403686:	mov    edx,0x10
  40368b:	mov    rsi,rcx
  40368e:	mov    rdi,rax
  403691:	call   4029d0 <memcmp@plt>
  403696:	test   eax,eax
  403698:	jne    4036d1 <memcpy@plt+0xc21>
  40369a:	mov    rax,QWORD PTR [rbp-0x40]
  40369e:	mov    rax,QWORD PTR [rax]
  4036a1:	mov    QWORD PTR [rbp-0x30],rax
  4036a5:	jmp    4036d1 <memcpy@plt+0xc21>
  4036a7:	mov    rax,QWORD PTR [rbp-0x28]
  4036ab:	mov    eax,DWORD PTR [rax+0x10]
  4036ae:	mov    edx,eax
  4036b0:	lea    rsi,[rip+0xbb91]        # 40f248 <memcpy@plt+0xc798>
  4036b7:	mov    edi,0x43
  4036bc:	mov    eax,0x0
  4036c1:	call   403c26 <memcpy@plt+0x1176>
  4036c6:	mov    edi,0x2
  4036cb:	call   402630 <exit@plt>
  4036d0:	nop
  4036d1:	mov    rax,QWORD PTR [rbp-0x28]
  4036d5:	mov    rax,QWORD PTR [rax+0xa0]
  4036dc:	test   rax,rax
  4036df:	je     403713 <memcpy@plt+0xc63>
  4036e1:	mov    rax,QWORD PTR [rbp-0x28]
  4036e5:	mov    r8,QWORD PTR [rax+0xa0]
  4036ec:	mov    rax,QWORD PTR [rbp-0x28]
  4036f0:	mov    rcx,QWORD PTR [rax+0xa8]
  4036f7:	mov    rax,QWORD PTR [rbp-0x28]
  4036fb:	mov    edx,DWORD PTR [rax+0x10]
  4036fe:	cmp    QWORD PTR [rbp-0x30],0x0
  403703:	setne  al
  403706:	movzx  esi,al
  403709:	mov    rax,QWORD PTR [rbp-0x30]
  40370d:	mov    rdi,rax
  403710:	call   r8
  403713:	mov    rax,QWORD PTR [rbp-0x28]
  403717:	mov    rdi,rax
  40371a:	call   40317b <memcpy@plt+0x6cb>
  40371f:	nop
  403720:	leave  
  403721:	ret    
  403722:	endbr64 
  403726:	push   rbp
  403727:	mov    rbp,rsp
  40372a:	sub    rsp,0x30
  40372e:	mov    QWORD PTR [rbp-0x18],rdi
  403732:	mov    eax,esi
  403734:	mov    DWORD PTR [rbp-0x20],edx
  403737:	mov    QWORD PTR [rbp-0x28],rcx
  40373b:	mov    BYTE PTR [rbp-0x1c],al
  40373e:	mov    rax,QWORD PTR [rbp-0x28]
  403742:	mov    QWORD PTR [rbp-0x8],rax
  403746:	cmp    QWORD PTR [rbp-0x8],0x0
  40374b:	je     403753 <memcpy@plt+0xca3>
  40374d:	cmp    DWORD PTR [rbp-0x20],0x0
  403751:	jne    403773 <memcpy@plt+0xcc3>
  403753:	lea    rsi,[rip+0xbb2e]        # 40f288 <memcpy@plt+0xc7d8>
  40375a:	mov    edi,0x43
  40375f:	mov    eax,0x0
  403764:	call   403c26 <memcpy@plt+0x1176>
  403769:	mov    edi,0x2
  40376e:	call   402630 <exit@plt>
  403773:	cmp    QWORD PTR [rbp-0x18],0x0
  403778:	je     403785 <memcpy@plt+0xcd5>
  40377a:	movzx  eax,BYTE PTR [rbp-0x1c]
  40377e:	xor    eax,0x1
  403781:	test   al,al
  403783:	je     4037b8 <memcpy@plt+0xd08>
  403785:	mov    rax,0x415f60
  40378c:	mov    rax,QWORD PTR [rax]
  40378f:	mov    ecx,DWORD PTR [rbp-0x20]
  403792:	mov    rdx,QWORD PTR [rbp-0x8]
  403796:	lea    rsi,[rip+0xbb16]        # 40f2b3 <memcpy@plt+0xc803>
  40379d:	mov    rdi,rax
  4037a0:	mov    eax,0x0
  4037a5:	call   4029f0 <rb_helper_write@plt>
  4037aa:	mov    rax,QWORD PTR [rbp-0x8]
  4037ae:	mov    rdi,rax
  4037b1:	call   40317b <memcpy@plt+0x6cb>
  4037b6:	jmp    4037f0 <memcpy@plt+0xd40>
  4037b8:	mov    rax,0x415f60
  4037bf:	mov    rax,QWORD PTR [rax]
  4037c2:	mov    rsi,QWORD PTR [rbp-0x18]
  4037c6:	mov    ecx,DWORD PTR [rbp-0x20]
  4037c9:	mov    rdx,QWORD PTR [rbp-0x8]
  4037cd:	mov    r8,rsi
  4037d0:	lea    rsi,[rip+0xbae8]        # 40f2bf <memcpy@plt+0xc80f>
  4037d7:	mov    rdi,rax
  4037da:	mov    eax,0x0
  4037df:	call   4029f0 <rb_helper_write@plt>
  4037e4:	mov    rax,QWORD PTR [rbp-0x8]
  4037e8:	mov    rdi,rax
  4037eb:	call   40317b <memcpy@plt+0x6cb>
  4037f0:	leave  
  4037f1:	ret    
  4037f2:	endbr64 
  4037f6:	push   rbp
  4037f7:	mov    rbp,rsp
  4037fa:	sub    rsp,0x30
  4037fe:	mov    DWORD PTR [rbp-0x24],edi
  403801:	mov    QWORD PTR [rbp-0x30],rsi
  403805:	mov    rax,QWORD PTR [rbp-0x30]
  403809:	add    rax,0x8
  40380d:	mov    rax,QWORD PTR [rax]
  403810:	mov    rdi,rax
  403813:	call   403126 <memcpy@plt+0x676>
  403818:	mov    QWORD PTR [rbp-0x10],rax
  40381c:	mov    rax,QWORD PTR [rbp-0x30]
  403820:	add    rax,0x10
  403824:	mov    rax,QWORD PTR [rax]
  403827:	movzx  eax,BYTE PTR [rax]
  40382a:	mov    BYTE PTR [rbp-0x15],al
  40382d:	mov    rax,QWORD PTR [rbp-0x30]
  403831:	mov    rax,QWORD PTR [rax+0x18]
  403835:	mov    QWORD PTR [rbp-0x8],rax
  403839:	mov    DWORD PTR [rbp-0x14],0x2
  403840:	movsx  eax,BYTE PTR [rbp-0x15]
  403844:	cmp    eax,0x36
  403847:	je     403862 <memcpy@plt+0xdb2>
  403849:	cmp    eax,0x36
  40384c:	jg     403858 <memcpy@plt+0xda8>
  40384e:	cmp    eax,0x34
  403851:	je     403869 <memcpy@plt+0xdb9>
  403853:	jmp    4038df <memcpy@plt+0xe2f>
  403858:	sub    eax,0x52
  40385b:	cmp    eax,0x1
  40385e:	ja     4038df <memcpy@plt+0xe2f>
  403860:	jmp    4038a7 <memcpy@plt+0xdf7>
  403862:	mov    DWORD PTR [rbp-0x14],0xa
  403869:	mov    rdx,QWORD PTR [rbp-0x10]
  40386d:	mov    esi,DWORD PTR [rbp-0x14]
  403870:	mov    rax,QWORD PTR [rbp-0x8]
  403874:	mov    rcx,rdx
  403877:	lea    rdx,[rip+0xfffffffffffffea4]        # 403722 <memcpy@plt+0xc72>
  40387e:	mov    rdi,rax
  403881:	call   4031a6 <memcpy@plt+0x6f6>
  403886:	test   rax,rax
  403889:	jne    403905 <memcpy@plt+0xe55>
  40388b:	movsx  eax,BYTE PTR [rbp-0x15]
  40388f:	mov    ecx,0x0
  403894:	mov    edx,eax
  403896:	mov    esi,0x0
  40389b:	mov    edi,0x0
  4038a0:	call   403722 <memcpy@plt+0xc72>
  4038a5:	jmp    403905 <memcpy@plt+0xe55>
  4038a7:	mov    rdx,QWORD PTR [rbp-0x10]
  4038ab:	mov    rax,QWORD PTR [rbp-0x8]
  4038af:	lea    rsi,[rip+0xfffffffffffffe6c]        # 403722 <memcpy@plt+0xc72>
  4038b6:	mov    rdi,rax
  4038b9:	call   40328d <memcpy@plt+0x7dd>
  4038be:	test   rax,rax
  4038c1:	jne    403908 <memcpy@plt+0xe58>
  4038c3:	movsx  eax,BYTE PTR [rbp-0x15]
  4038c7:	mov    ecx,0x0
  4038cc:	mov    edx,eax
  4038ce:	mov    esi,0x0
  4038d3:	mov    edi,0x0
  4038d8:	call   403722 <memcpy@plt+0xc72>
  4038dd:	jmp    403908 <memcpy@plt+0xe58>
  4038df:	movsx  eax,BYTE PTR [rbp-0x15]
  4038e3:	mov    edx,eax
  4038e5:	lea    rsi,[rip+0xb9e4]        # 40f2d0 <memcpy@plt+0xc820>
  4038ec:	mov    edi,0x43
  4038f1:	mov    eax,0x0
  4038f6:	call   403c26 <memcpy@plt+0x1176>
  4038fb:	mov    edi,0x2
  403900:	call   402630 <exit@plt>
  403905:	nop
  403906:	jmp    403909 <memcpy@plt+0xe59>
  403908:	nop
  403909:	nop
  40390a:	leave  
  40390b:	ret    
  40390c:	endbr64 
  403910:	push   rbp
  403911:	mov    rbp,rsp
  403914:	sub    rsp,0x2a0
  40391b:	mov    DWORD PTR [rbp-0x294],edi
  403921:	mov    eax,esi
  403923:	mov    BYTE PTR [rbp-0x298],al
  403929:	mov    rax,QWORD PTR fs:0x28
  403932:	mov    QWORD PTR [rbp-0x8],rax
  403936:	xor    eax,eax
  403938:	mov    QWORD PTR [rbp-0x280],0x0
  403943:	mov    rax,0x41a094
  40394a:	mov    eax,DWORD PTR [rax]
  40394c:	test   eax,eax
  40394e:	jne    403992 <memcpy@plt+0xee2>
  403950:	lea    rsi,[rip+0xb9aa]        # 40f301 <memcpy@plt+0xc851>
  403957:	mov    edi,0x43
  40395c:	mov    eax,0x0
  403961:	call   403c26 <memcpy@plt+0x1176>
  403966:	movsx  ecx,BYTE PTR [rbp-0x298]
  40396d:	mov    eax,DWORD PTR [rbp-0x294]
  403973:	lea    rdx,[rip+0xb99d]        # 40f317 <memcpy@plt+0xc867>
  40397a:	mov    esi,ecx
  40397c:	mov    edi,eax
  40397e:	mov    eax,0x0
  403983:	call   403e45 <memcpy@plt+0x1395>
  403988:	mov    edi,0x2
  40398d:	call   402630 <exit@plt>
  403992:	mov    DWORD PTR [rbp-0x284],0x0
  40399c:	jmp    403a88 <memcpy@plt+0xfd8>
  4039a1:	mov    eax,DWORD PTR [rbp-0x284]
  4039a7:	cdqe   
  4039a9:	shl    rax,0x7
  4039ad:	mov    rdx,rax
  4039b0:	mov    rax,0x41a3c0
  4039b7:	lea    rcx,[rdx+rax*1]
  4039bb:	lea    rax,[rbp-0x270]
  4039c2:	mov    edx,0x35
  4039c7:	mov    rsi,rax
  4039ca:	mov    rdi,rcx
  4039cd:	call   402980 <rb_inet_ntop_sock@plt>
  4039d2:	movzx  eax,BYTE PTR [rbp-0x270]
  4039d9:	test   al,al
  4039db:	jne    403a1f <memcpy@plt+0xf6f>
  4039dd:	lea    rsi,[rip+0xb941]        # 40f325 <memcpy@plt+0xc875>
  4039e4:	mov    edi,0x43
  4039e9:	mov    eax,0x0
  4039ee:	call   403c26 <memcpy@plt+0x1176>
  4039f3:	movsx  ecx,BYTE PTR [rbp-0x298]
  4039fa:	mov    eax,DWORD PTR [rbp-0x294]
  403a00:	lea    rdx,[rip+0xb933]        # 40f33a <memcpy@plt+0xc88a>
  403a07:	mov    esi,ecx
  403a09:	mov    edi,eax
  403a0b:	mov    eax,0x0
  403a10:	call   403e45 <memcpy@plt+0x1395>
  403a15:	mov    edi,0x2
  403a1a:	call   402630 <exit@plt>
  403a1f:	lea    rax,[rbp-0x270]
  403a26:	mov    rdi,rax
  403a29:	call   402760 <strlen@plt>
  403a2e:	inc    rax
  403a31:	mov    QWORD PTR [rbp-0x278],rax
  403a38:	mov    eax,0x21c
  403a3d:	sub    rax,QWORD PTR [rbp-0x280]
  403a44:	lea    rcx,[rbp-0x230]
  403a4b:	mov    rdx,QWORD PTR [rbp-0x280]
  403a52:	lea    rdi,[rcx+rdx*1]
  403a56:	lea    rdx,[rbp-0x270]
  403a5d:	mov    rcx,rdx
  403a60:	lea    rdx,[rip+0xb8e5]        # 40f34c <memcpy@plt+0xc89c>
  403a67:	mov    rsi,rax
  403a6a:	mov    eax,0x0
  403a6f:	call   4025d0 <snprintf@plt>
  403a74:	mov    rax,QWORD PTR [rbp-0x278]
  403a7b:	add    QWORD PTR [rbp-0x280],rax
  403a82:	inc    DWORD PTR [rbp-0x284]
  403a88:	mov    rax,0x41a094
  403a8f:	mov    eax,DWORD PTR [rax]
  403a91:	cmp    DWORD PTR [rbp-0x284],eax
  403a97:	jl     4039a1 <memcpy@plt+0xef1>
  403a9d:	cmp    QWORD PTR [rbp-0x280],0x0
  403aa5:	je     403ac2 <memcpy@plt+0x1012>
  403aa7:	dec    QWORD PTR [rbp-0x280]
  403aae:	lea    rdx,[rbp-0x230]
  403ab5:	mov    rax,QWORD PTR [rbp-0x280]
  403abc:	add    rax,rdx
  403abf:	mov    BYTE PTR [rax],0x0
  403ac2:	movsx  esi,BYTE PTR [rbp-0x298]
  403ac9:	lea    rdx,[rbp-0x230]
  403ad0:	mov    eax,DWORD PTR [rbp-0x294]
  403ad6:	mov    rcx,rdx
  403ad9:	lea    rdx,[rip+0xb870]        # 40f350 <memcpy@plt+0xc8a0>
  403ae0:	mov    edi,eax
  403ae2:	mov    eax,0x0
  403ae7:	call   403d30 <memcpy@plt+0x1280>
  403aec:	nop
  403aed:	mov    rax,QWORD PTR [rbp-0x8]
  403af1:	xor    rax,QWORD PTR fs:0x28
  403afa:	je     403b01 <memcpy@plt+0x1051>
  403afc:	call   402950 <__stack_chk_fail@plt>
  403b01:	leave  
  403b02:	ret    
  403b03:	endbr64 
  403b07:	push   rbp
  403b08:	mov    rbp,rsp
  403b0b:	sub    rsp,0x10
  403b0f:	mov    eax,edi
  403b11:	mov    BYTE PTR [rbp-0x4],al
  403b14:	call   405838 <memcpy@plt+0x2d88>
  403b19:	nop
  403b1a:	leave  
  403b1b:	ret    
  403b1c:	endbr64 
  403b20:	push   rbp
  403b21:	mov    rbp,rsp
  403b24:	sub    rsp,0x2f0
  403b2b:	mov    DWORD PTR [rbp-0x2e4],edi
  403b31:	mov    QWORD PTR [rbp-0x2f0],rsi
  403b38:	mov    QWORD PTR [rbp-0xa0],rdx
  403b3f:	mov    QWORD PTR [rbp-0x98],rcx
  403b46:	mov    QWORD PTR [rbp-0x90],r8
  403b4d:	mov    QWORD PTR [rbp-0x88],r9
  403b54:	test   al,al
  403b56:	je     403b80 <memcpy@plt+0x10d0>
  403b58:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  403b5d:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  403b62:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  403b67:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  403b6c:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403b71:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403b76:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  403b7b:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403b80:	mov    rax,QWORD PTR fs:0x28
  403b89:	mov    QWORD PTR [rbp-0xb8],rax
  403b90:	xor    eax,eax
  403b92:	mov    DWORD PTR [rbp-0x2d8],0x10
  403b9c:	mov    DWORD PTR [rbp-0x2d4],0x30
  403ba6:	lea    rax,[rbp+0x10]
  403baa:	mov    QWORD PTR [rbp-0x2d0],rax
  403bb1:	lea    rax,[rbp-0xb0]
  403bb8:	mov    QWORD PTR [rbp-0x2c8],rax
  403bbf:	lea    rcx,[rbp-0x2d8]
  403bc6:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403bcd:	lea    rax,[rbp-0x2c0]
  403bd4:	mov    esi,0x200
  403bd9:	mov    rdi,rax
  403bdc:	call   4028d0 <vsnprintf@plt>
  403be1:	mov    rax,0x415f60
  403be8:	mov    rax,QWORD PTR [rax]
  403beb:	lea    rcx,[rbp-0x2c0]
  403bf2:	mov    edx,DWORD PTR [rbp-0x2e4]
  403bf8:	lea    rsi,[rip+0xb754]        # 40f353 <memcpy@plt+0xc8a3>
  403bff:	mov    rdi,rax
  403c02:	mov    eax,0x0
  403c07:	call   4029f0 <rb_helper_write@plt>
  403c0c:	nop
  403c0d:	mov    rax,QWORD PTR [rbp-0xb8]
  403c14:	xor    rax,QWORD PTR fs:0x28
  403c1d:	je     403c24 <memcpy@plt+0x1174>
  403c1f:	call   402950 <__stack_chk_fail@plt>
  403c24:	leave  
  403c25:	ret    
  403c26:	endbr64 
  403c2a:	push   rbp
  403c2b:	mov    rbp,rsp
  403c2e:	sub    rsp,0x2f0
  403c35:	mov    DWORD PTR [rbp-0x2e4],edi
  403c3b:	mov    QWORD PTR [rbp-0x2f0],rsi
  403c42:	mov    QWORD PTR [rbp-0xa0],rdx
  403c49:	mov    QWORD PTR [rbp-0x98],rcx
  403c50:	mov    QWORD PTR [rbp-0x90],r8
  403c57:	mov    QWORD PTR [rbp-0x88],r9
  403c5e:	test   al,al
  403c60:	je     403c8a <memcpy@plt+0x11da>
  403c62:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  403c67:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  403c6c:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  403c71:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  403c76:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403c7b:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403c80:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  403c85:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403c8a:	mov    rax,QWORD PTR fs:0x28
  403c93:	mov    QWORD PTR [rbp-0xb8],rax
  403c9a:	xor    eax,eax
  403c9c:	mov    DWORD PTR [rbp-0x2d8],0x10
  403ca6:	mov    DWORD PTR [rbp-0x2d4],0x30
  403cb0:	lea    rax,[rbp+0x10]
  403cb4:	mov    QWORD PTR [rbp-0x2d0],rax
  403cbb:	lea    rax,[rbp-0xb0]
  403cc2:	mov    QWORD PTR [rbp-0x2c8],rax
  403cc9:	lea    rcx,[rbp-0x2d8]
  403cd0:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403cd7:	lea    rax,[rbp-0x2c0]
  403cde:	mov    esi,0x200
  403ce3:	mov    rdi,rax
  403ce6:	call   4028d0 <vsnprintf@plt>
  403ceb:	mov    rax,0x415f60
  403cf2:	mov    rax,QWORD PTR [rax]
  403cf5:	lea    rcx,[rbp-0x2c0]
  403cfc:	mov    edx,DWORD PTR [rbp-0x2e4]
  403d02:	lea    rsi,[rip+0xb653]        # 40f35c <memcpy@plt+0xc8ac>
  403d09:	mov    rdi,rax
  403d0c:	mov    eax,0x0
  403d11:	call   4029f0 <rb_helper_write@plt>
  403d16:	nop
  403d17:	mov    rax,QWORD PTR [rbp-0xb8]
  403d1e:	xor    rax,QWORD PTR fs:0x28
  403d27:	je     403d2e <memcpy@plt+0x127e>
  403d29:	call   402950 <__stack_chk_fail@plt>
  403d2e:	leave  
  403d2f:	ret    
  403d30:	endbr64 
  403d34:	push   rbp
  403d35:	mov    rbp,rsp
  403d38:	sub    rsp,0x2f0
  403d3f:	mov    DWORD PTR [rbp-0x2e4],edi
  403d45:	mov    QWORD PTR [rbp-0x2f0],rdx
  403d4c:	mov    QWORD PTR [rbp-0x98],rcx
  403d53:	mov    QWORD PTR [rbp-0x90],r8
  403d5a:	mov    QWORD PTR [rbp-0x88],r9
  403d61:	test   al,al
  403d63:	je     403d8d <memcpy@plt+0x12dd>
  403d65:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  403d6a:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  403d6f:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  403d74:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  403d79:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403d7e:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403d83:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  403d88:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403d8d:	mov    eax,esi
  403d8f:	mov    BYTE PTR [rbp-0x2e8],al
  403d95:	mov    rax,QWORD PTR fs:0x28
  403d9e:	mov    QWORD PTR [rbp-0xb8],rax
  403da5:	xor    eax,eax
  403da7:	mov    DWORD PTR [rbp-0x2d8],0x18
  403db1:	mov    DWORD PTR [rbp-0x2d4],0x30
  403dbb:	lea    rax,[rbp+0x10]
  403dbf:	mov    QWORD PTR [rbp-0x2d0],rax
  403dc6:	lea    rax,[rbp-0xb0]
  403dcd:	mov    QWORD PTR [rbp-0x2c8],rax
  403dd4:	lea    rcx,[rbp-0x2d8]
  403ddb:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403de2:	lea    rax,[rbp-0x2c0]
  403de9:	mov    esi,0x200
  403dee:	mov    rdi,rax
  403df1:	call   4028d0 <vsnprintf@plt>
  403df6:	movsx  ecx,BYTE PTR [rbp-0x2e8]
  403dfd:	mov    rax,0x415f60
  403e04:	mov    rax,QWORD PTR [rax]
  403e07:	lea    rsi,[rbp-0x2c0]
  403e0e:	mov    edx,DWORD PTR [rbp-0x2e4]
  403e14:	mov    r8,rsi
  403e17:	lea    rsi,[rip+0xb547]        # 40f365 <memcpy@plt+0xc8b5>
  403e1e:	mov    rdi,rax
  403e21:	mov    eax,0x0
  403e26:	call   4029f0 <rb_helper_write@plt>
  403e2b:	nop
  403e2c:	mov    rax,QWORD PTR [rbp-0xb8]
  403e33:	xor    rax,QWORD PTR fs:0x28
  403e3c:	je     403e43 <memcpy@plt+0x1393>
  403e3e:	call   402950 <__stack_chk_fail@plt>
  403e43:	leave  
  403e44:	ret    
  403e45:	endbr64 
  403e49:	push   rbp
  403e4a:	mov    rbp,rsp
  403e4d:	sub    rsp,0x2f0
  403e54:	mov    DWORD PTR [rbp-0x2e4],edi
  403e5a:	mov    QWORD PTR [rbp-0x2f0],rdx
  403e61:	mov    QWORD PTR [rbp-0x98],rcx
  403e68:	mov    QWORD PTR [rbp-0x90],r8
  403e6f:	mov    QWORD PTR [rbp-0x88],r9
  403e76:	test   al,al
  403e78:	je     403ea2 <memcpy@plt+0x13f2>
  403e7a:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  403e7f:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  403e84:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  403e89:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  403e8e:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403e93:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403e98:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  403e9d:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403ea2:	mov    eax,esi
  403ea4:	mov    BYTE PTR [rbp-0x2e8],al
  403eaa:	mov    rax,QWORD PTR fs:0x28
  403eb3:	mov    QWORD PTR [rbp-0xb8],rax
  403eba:	xor    eax,eax
  403ebc:	mov    DWORD PTR [rbp-0x2d8],0x18
  403ec6:	mov    DWORD PTR [rbp-0x2d4],0x30
  403ed0:	lea    rax,[rbp+0x10]
  403ed4:	mov    QWORD PTR [rbp-0x2d0],rax
  403edb:	lea    rax,[rbp-0xb0]
  403ee2:	mov    QWORD PTR [rbp-0x2c8],rax
  403ee9:	lea    rcx,[rbp-0x2d8]
  403ef0:	mov    rdx,QWORD PTR [rbp-0x2f0]
  403ef7:	lea    rax,[rbp-0x2c0]
  403efe:	mov    esi,0x200
  403f03:	mov    rdi,rax
  403f06:	call   4028d0 <vsnprintf@plt>
  403f0b:	movsx  ecx,BYTE PTR [rbp-0x2e8]
  403f12:	mov    rax,0x415f60
  403f19:	mov    rax,QWORD PTR [rax]
  403f1c:	lea    rsi,[rbp-0x2c0]
  403f23:	mov    edx,DWORD PTR [rbp-0x2e4]
  403f29:	mov    r8,rsi
  403f2c:	lea    rsi,[rip+0xb43d]        # 40f370 <memcpy@plt+0xc8c0>
  403f33:	mov    rdi,rax
  403f36:	mov    eax,0x0
  403f3b:	call   4029f0 <rb_helper_write@plt>
  403f40:	nop
  403f41:	mov    rax,QWORD PTR [rbp-0xb8]
  403f48:	xor    rax,QWORD PTR fs:0x28
  403f51:	je     403f58 <memcpy@plt+0x14a8>
  403f53:	call   402950 <__stack_chk_fail@plt>
  403f58:	leave  
  403f59:	ret    
  403f5a:	endbr64 
  403f5e:	push   rbp
  403f5f:	mov    rbp,rsp
  403f62:	sub    rsp,0x10
  403f66:	mov    DWORD PTR [rbp-0x4],edi
  403f69:	mov    eax,esi
  403f6b:	mov    BYTE PTR [rbp-0x8],al
  403f6e:	movsx  ecx,BYTE PTR [rbp-0x8]
  403f72:	mov    rax,0x415f60
  403f79:	mov    rax,QWORD PTR [rax]
  403f7c:	mov    edx,DWORD PTR [rbp-0x4]
  403f7f:	lea    rsi,[rip+0xb3f5]        # 40f37b <memcpy@plt+0xc8cb>
  403f86:	mov    rdi,rax
  403f89:	mov    eax,0x0
  403f8e:	call   4029f0 <rb_helper_write@plt>
  403f93:	nop
  403f94:	leave  
  403f95:	ret    
  403f96:	push   rbp
  403f97:	mov    rbp,rsp
  403f9a:	sub    rsp,0x20
  403f9e:	mov    QWORD PTR [rbp-0x8],rdi
  403fa2:	mov    QWORD PTR [rbp-0x10],rsi
  403fa6:	mov    QWORD PTR [rbp-0x18],rdx
  403faa:	cmp    QWORD PTR [rbp-0x8],0x0
  403faf:	jne    403fd0 <memcpy@plt+0x1520>
  403fb1:	lea    rcx,[rip+0xb610]        # 40f5c8 <memcpy@plt+0xcb18>
  403fb8:	mov    edx,0x8f
  403fbd:	lea    rsi,[rip+0xb3c4]        # 40f388 <memcpy@plt+0xc8d8>
  403fc4:	lea    rdi,[rip+0xb3d9]        # 40f3a4 <memcpy@plt+0xc8f4>
  403fcb:	call   402640 <__assert_fail@plt>
  403fd0:	cmp    QWORD PTR [rbp-0x10],0x0
  403fd5:	jne    403ff6 <memcpy@plt+0x1546>
  403fd7:	lea    rcx,[rip+0xb5ea]        # 40f5c8 <memcpy@plt+0xcb18>
  403fde:	mov    edx,0x90
  403fe3:	lea    rsi,[rip+0xb39e]        # 40f388 <memcpy@plt+0xc8d8>
  403fea:	lea    rdi,[rip+0xb3c0]        # 40f3b1 <memcpy@plt+0xc901>
  403ff1:	call   402640 <__assert_fail@plt>
  403ff6:	cmp    QWORD PTR [rbp-0x18],0x0
  403ffb:	jne    40401c <memcpy@plt+0x156c>
  403ffd:	lea    rcx,[rip+0xb5c4]        # 40f5c8 <memcpy@plt+0xcb18>
  404004:	mov    edx,0x91
  404009:	lea    rsi,[rip+0xb378]        # 40f388 <memcpy@plt+0xc8d8>
  404010:	lea    rdi,[rip+0xb3a4]        # 40f3bb <memcpy@plt+0xc90b>
  404017:	call   402640 <__assert_fail@plt>
  40401c:	mov    rax,QWORD PTR [rbp-0x10]
  404020:	mov    rdx,QWORD PTR [rbp-0x8]
  404024:	mov    QWORD PTR [rax],rdx
  404027:	mov    rax,QWORD PTR [rbp-0x10]
  40402b:	mov    QWORD PTR [rax+0x8],0x0
  404033:	mov    rax,QWORD PTR [rbp-0x18]
  404037:	mov    rdx,QWORD PTR [rax]
  40403a:	mov    rax,QWORD PTR [rbp-0x10]
  40403e:	mov    QWORD PTR [rax+0x10],rdx
  404042:	mov    rax,QWORD PTR [rbp-0x18]
  404046:	mov    rax,QWORD PTR [rax]
  404049:	test   rax,rax
  40404c:	je     40405f <memcpy@plt+0x15af>
  40404e:	mov    rax,QWORD PTR [rbp-0x18]
  404052:	mov    rax,QWORD PTR [rax]
  404055:	mov    rdx,QWORD PTR [rbp-0x10]
  404059:	mov    QWORD PTR [rax+0x8],rdx
  40405d:	jmp    404078 <memcpy@plt+0x15c8>
  40405f:	mov    rax,QWORD PTR [rbp-0x18]
  404063:	mov    rax,QWORD PTR [rax+0x8]
  404067:	test   rax,rax
  40406a:	jne    404078 <memcpy@plt+0x15c8>
  40406c:	mov    rax,QWORD PTR [rbp-0x18]
  404070:	mov    rdx,QWORD PTR [rbp-0x10]
  404074:	mov    QWORD PTR [rax+0x8],rdx
  404078:	mov    rax,QWORD PTR [rbp-0x18]
  40407c:	mov    rdx,QWORD PTR [rbp-0x10]
  404080:	mov    QWORD PTR [rax],rdx
  404083:	mov    rax,QWORD PTR [rbp-0x18]
  404087:	mov    rax,QWORD PTR [rax+0x10]
  40408b:	lea    rdx,[rax+0x1]
  40408f:	mov    rax,QWORD PTR [rbp-0x18]
  404093:	mov    QWORD PTR [rax+0x10],rdx
  404097:	nop
  404098:	leave  
  404099:	ret    
  40409a:	push   rbp
  40409b:	mov    rbp,rsp
  40409e:	sub    rsp,0x10
  4040a2:	mov    QWORD PTR [rbp-0x8],rdi
  4040a6:	mov    QWORD PTR [rbp-0x10],rsi
  4040aa:	cmp    QWORD PTR [rbp-0x8],0x0
  4040af:	jne    4040d0 <memcpy@plt+0x1620>
  4040b1:	lea    rcx,[rip+0xb500]        # 40f5b8 <memcpy@plt+0xcb08>
  4040b8:	mov    edx,0xeb
  4040bd:	lea    rsi,[rip+0xb2c4]        # 40f388 <memcpy@plt+0xc8d8>
  4040c4:	lea    rdi,[rip+0xb2e6]        # 40f3b1 <memcpy@plt+0xc901>
  4040cb:	call   402640 <__assert_fail@plt>
  4040d0:	cmp    QWORD PTR [rbp-0x10],0x0
  4040d5:	jne    4040f6 <memcpy@plt+0x1646>
  4040d7:	lea    rcx,[rip+0xb4da]        # 40f5b8 <memcpy@plt+0xcb08>
  4040de:	mov    edx,0xec
  4040e3:	lea    rsi,[rip+0xb29e]        # 40f388 <memcpy@plt+0xc8d8>
  4040ea:	lea    rdi,[rip+0xb2ca]        # 40f3bb <memcpy@plt+0xc90b>
  4040f1:	call   402640 <__assert_fail@plt>
  4040f6:	mov    rax,QWORD PTR [rbp-0x8]
  4040fa:	mov    rax,QWORD PTR [rax+0x10]
  4040fe:	test   rax,rax
  404101:	je     404119 <memcpy@plt+0x1669>
  404103:	mov    rax,QWORD PTR [rbp-0x8]
  404107:	mov    rax,QWORD PTR [rax+0x10]
  40410b:	mov    rdx,QWORD PTR [rbp-0x8]
  40410f:	mov    rdx,QWORD PTR [rdx+0x8]
  404113:	mov    QWORD PTR [rax+0x8],rdx
  404117:	jmp    404129 <memcpy@plt+0x1679>
  404119:	mov    rax,QWORD PTR [rbp-0x8]
  40411d:	mov    rdx,QWORD PTR [rax+0x8]
  404121:	mov    rax,QWORD PTR [rbp-0x10]
  404125:	mov    QWORD PTR [rax+0x8],rdx
  404129:	mov    rax,QWORD PTR [rbp-0x8]
  40412d:	mov    rax,QWORD PTR [rax+0x8]
  404131:	test   rax,rax
  404134:	je     40414c <memcpy@plt+0x169c>
  404136:	mov    rax,QWORD PTR [rbp-0x8]
  40413a:	mov    rax,QWORD PTR [rax+0x8]
  40413e:	mov    rdx,QWORD PTR [rbp-0x8]
  404142:	mov    rdx,QWORD PTR [rdx+0x10]
  404146:	mov    QWORD PTR [rax+0x10],rdx
  40414a:	jmp    40415b <memcpy@plt+0x16ab>
  40414c:	mov    rax,QWORD PTR [rbp-0x8]
  404150:	mov    rdx,QWORD PTR [rax+0x10]
  404154:	mov    rax,QWORD PTR [rbp-0x10]
  404158:	mov    QWORD PTR [rax],rdx
  40415b:	mov    rax,QWORD PTR [rbp-0x8]
  40415f:	mov    QWORD PTR [rax+0x8],0x0
  404167:	mov    rax,QWORD PTR [rbp-0x8]
  40416b:	mov    rdx,QWORD PTR [rax+0x8]
  40416f:	mov    rax,QWORD PTR [rbp-0x8]
  404173:	mov    QWORD PTR [rax+0x10],rdx
  404177:	mov    rax,QWORD PTR [rbp-0x10]
  40417b:	mov    rax,QWORD PTR [rax+0x10]
  40417f:	lea    rdx,[rax-0x1]
  404183:	mov    rax,QWORD PTR [rbp-0x10]
  404187:	mov    QWORD PTR [rax+0x10],rdx
  40418b:	nop
  40418c:	leave  
  40418d:	ret    
  40418e:	push   rbp
  40418f:	mov    rbp,rsp
  404192:	sub    rsp,0x20
  404196:	mov    QWORD PTR [rbp-0x18],rdi
  40419a:	mov    rax,QWORD PTR [rbp-0x18]
  40419e:	mov    rsi,rax
  4041a1:	mov    edi,0x1
  4041a6:	call   4029e0 <calloc@plt>
  4041ab:	mov    QWORD PTR [rbp-0x8],rax
  4041af:	cmp    QWORD PTR [rbp-0x8],0x0
  4041b4:	sete   al
  4041b7:	movzx  eax,al
  4041ba:	test   rax,rax
  4041bd:	je     4041c4 <memcpy@plt+0x1714>
  4041bf:	call   402900 <rb_outofmemory@plt>
  4041c4:	mov    rax,QWORD PTR [rbp-0x8]
  4041c8:	leave  
  4041c9:	ret    
  4041ca:	push   rbp
  4041cb:	mov    rbp,rsp
  4041ce:	sub    rsp,0x10
  4041d2:	mov    QWORD PTR [rbp-0x8],rdi
  4041d6:	cmp    QWORD PTR [rbp-0x8],0x0
  4041db:	setne  al
  4041de:	movzx  eax,al
  4041e1:	test   rax,rax
  4041e4:	je     4041f2 <memcpy@plt+0x1742>
  4041e6:	mov    rax,QWORD PTR [rbp-0x8]
  4041ea:	mov    rdi,rax
  4041ed:	call   402750 <free@plt>
  4041f2:	nop
  4041f3:	leave  
  4041f4:	ret    
  4041f5:	endbr64 
  4041f9:	push   rbp
  4041fa:	mov    rbp,rsp
  4041fd:	mov    QWORD PTR [rbp-0x8],rdi
  404201:	mov    QWORD PTR [rbp-0x10],rsi
  404205:	mov    rax,QWORD PTR [rbp-0x10]
  404209:	mov    edx,eax
  40420b:	mov    rax,QWORD PTR [rbp-0x8]
  40420f:	sub    edx,eax
  404211:	mov    eax,edx
  404213:	pop    rbp
  404214:	ret    
  404215:	push   rbp
  404216:	mov    rbp,rsp
  404219:	mov    QWORD PTR [rbp-0x8],rdi
  40421d:	mov    rax,QWORD PTR [rbp-0x8]
  404221:	mov    eax,DWORD PTR [rax+0x1cc]
  404227:	lea    edx,[rax+0x1]
  40422a:	mov    rax,QWORD PTR [rbp-0x8]
  40422e:	mov    DWORD PTR [rax+0x1cc],edx
  404234:	nop
  404235:	pop    rbp
  404236:	ret    
  404237:	push   rbp
  404238:	mov    rbp,rsp
  40423b:	sub    rsp,0x10
  40423f:	mov    QWORD PTR [rbp-0x8],rdi
  404243:	mov    rax,QWORD PTR [rbp-0x8]
  404247:	mov    eax,DWORD PTR [rax+0x1cc]
  40424d:	lea    edx,[rax-0x1]
  404250:	mov    rax,QWORD PTR [rbp-0x8]
  404254:	mov    DWORD PTR [rax+0x1cc],edx
  40425a:	mov    rax,QWORD PTR [rbp-0x8]
  40425e:	mov    eax,DWORD PTR [rax+0x1cc]
  404264:	test   eax,eax
  404266:	jne    404274 <memcpy@plt+0x17c4>
  404268:	mov    rax,QWORD PTR [rbp-0x8]
  40426c:	mov    rdi,rax
  40426f:	call   4047b8 <memcpy@plt+0x1d08>
  404274:	nop
  404275:	leave  
  404276:	ret    
  404277:	push   rbp
  404278:	mov    rbp,rsp
  40427b:	mov    QWORD PTR [rbp-0x8],rdi
  40427f:	mov    DWORD PTR [rbp-0xc],esi
  404282:	mov    rax,QWORD PTR [rbp-0x8]
  404286:	mov    rax,QWORD PTR [rax+0x1d0]
  40428d:	mov    edx,DWORD PTR [rbp-0xc]
  404290:	shl    rdx,0x5
  404294:	add    rax,rdx
  404297:	mov    eax,DWORD PTR [rax+0x18]
  40429a:	pop    rbp
  40429b:	ret    
  40429c:	push   rbp
  40429d:	mov    rbp,rsp
  4042a0:	sub    rsp,0x10
  4042a4:	mov    QWORD PTR [rbp-0x8],rdi
  4042a8:	mov    DWORD PTR [rbp-0xc],esi
  4042ab:	mov    edx,DWORD PTR [rbp-0xc]
  4042ae:	mov    rax,QWORD PTR [rbp-0x8]
  4042b2:	mov    esi,edx
  4042b4:	mov    rdi,rax
  4042b7:	call   404277 <memcpy@plt+0x17c7>
  4042bc:	cmp    eax,0x1
  4042bf:	sete   al
  4042c2:	leave  
  4042c3:	ret    
  4042c4:	push   rbp
  4042c5:	mov    rbp,rsp
  4042c8:	mov    QWORD PTR [rbp-0x8],rdi
  4042cc:	mov    DWORD PTR [rbp-0xc],esi
  4042cf:	mov    rax,QWORD PTR [rbp-0x8]
  4042d3:	mov    rax,QWORD PTR [rax+0x1d0]
  4042da:	mov    edx,DWORD PTR [rbp-0xc]
  4042dd:	shl    rdx,0x5
  4042e1:	add    rax,rdx
  4042e4:	mov    rax,QWORD PTR [rax+0x8]
  4042e8:	pop    rbp
  4042e9:	ret    
  4042ea:	push   rbp
  4042eb:	mov    rbp,rsp
  4042ee:	mov    QWORD PTR [rbp-0x8],rdi
  4042f2:	mov    DWORD PTR [rbp-0xc],esi
  4042f5:	mov    DWORD PTR [rbp-0x10],edx
  4042f8:	mov    rax,QWORD PTR [rbp-0x8]
  4042fc:	mov    rax,QWORD PTR [rax+0x1d0]
  404303:	mov    edx,DWORD PTR [rbp-0xc]
  404306:	shl    rdx,0x5
  40430a:	add    rdx,rax
  40430d:	mov    eax,DWORD PTR [rbp-0x10]
  404310:	mov    DWORD PTR [rdx+0x18],eax
  404313:	nop
  404314:	pop    rbp
  404315:	ret    
  404316:	push   rbp
  404317:	mov    rbp,rsp
  40431a:	sub    rsp,0x10
  40431e:	mov    QWORD PTR [rbp-0x8],rdi
  404322:	mov    DWORD PTR [rbp-0xc],esi
  404325:	mov    rax,QWORD PTR [rbp-0x8]
  404329:	mov    eax,DWORD PTR [rax+0x1c8]
  40432f:	lea    edx,[rax+0x1]
  404332:	mov    rax,QWORD PTR [rbp-0x8]
  404336:	mov    DWORD PTR [rax+0x1c8],edx
  40433c:	mov    ecx,DWORD PTR [rbp-0xc]
  40433f:	mov    rax,QWORD PTR [rbp-0x8]
  404343:	mov    edx,0x1
  404348:	mov    esi,ecx
  40434a:	mov    rdi,rax
  40434d:	call   4042ea <memcpy@plt+0x183a>
  404352:	nop
  404353:	leave  
  404354:	ret    
  404355:	push   rbp
  404356:	mov    rbp,rsp
  404359:	sub    rsp,0x10
  40435d:	mov    QWORD PTR [rbp-0x8],rdi
  404361:	mov    DWORD PTR [rbp-0xc],esi
  404364:	mov    ecx,DWORD PTR [rbp-0xc]
  404367:	mov    rax,QWORD PTR [rbp-0x8]
  40436b:	mov    edx,0x2
  404370:	mov    esi,ecx
  404372:	mov    rdi,rax
  404375:	call   4042ea <memcpy@plt+0x183a>
  40437a:	mov    rax,QWORD PTR [rbp-0x8]
  40437e:	mov    eax,DWORD PTR [rax+0x1c8]
  404384:	lea    edx,[rax-0x1]
  404387:	mov    rax,QWORD PTR [rbp-0x8]
  40438b:	mov    DWORD PTR [rax+0x1c8],edx
  404391:	nop
  404392:	leave  
  404393:	ret    
  404394:	endbr64 
  404398:	push   rbp
  404399:	mov    rbp,rsp
  40439c:	lea    rsi,[rip+0xfffffffffffffe52]        # 4041f5 <memcpy@plt+0x1745>
  4043a3:	lea    rdi,[rip+0xb01e]        # 40f3c8 <memcpy@plt+0xc918>
  4043aa:	call   4029b0 <rb_dictionary_create@plt>
  4043af:	mov    rdx,rax
  4043b2:	mov    rax,0x41a270
  4043b9:	mov    QWORD PTR [rax],rdx
  4043bc:	mov    ecx,0x1
  4043c1:	mov    edx,0x0
  4043c6:	lea    rsi,[rip+0xcc7]        # 405094 <memcpy@plt+0x25e4>
  4043cd:	lea    rdi,[rip+0xb009]        # 40f3dd <memcpy@plt+0xc92d>
  4043d4:	call   4025a0 <rb_event_addish@plt>
  4043d9:	mov    QWORD PTR [rip+0x15c20],rax        # 41a000 <memcpy@plt+0x17550>
  4043e0:	mov    rax,0x415b80
  4043e7:	mov    rdi,rax
  4043ea:	call   40459b <memcpy@plt+0x1aeb>
  4043ef:	mov    rax,0x415ec0
  4043f6:	mov    rdi,rax
  4043f9:	call   40459b <memcpy@plt+0x1aeb>
  4043fe:	mov    rax,0x415d80
  404405:	mov    rdi,rax
  404408:	call   40459b <memcpy@plt+0x1aeb>
  40440d:	mov    rax,0x415ca0
  404414:	mov    rdi,rax
  404417:	call   40459b <memcpy@plt+0x1aeb>
  40441c:	nop
  40441d:	pop    rbp
  40441e:	ret    
  40441f:	endbr64 
  404423:	push   rbp
  404424:	mov    rbp,rsp
  404427:	sub    rsp,0x40
  40442b:	mov    rax,QWORD PTR fs:0x28
  404434:	mov    QWORD PTR [rbp-0x8],rax
  404438:	xor    eax,eax
  40443a:	mov    rax,0x41a270
  404441:	mov    rax,QWORD PTR [rax]
  404444:	lea    rdx,[rbp-0x20]
  404448:	mov    rsi,rdx
  40444b:	mov    rdi,rax
  40444e:	call   4027a0 <rb_dictionary_foreach_start@plt>
  404453:	jmp    4044aa <memcpy@plt+0x19fa>
  404455:	mov    rax,QWORD PTR [rbp-0x30]
  404459:	mov    rdi,rax
  40445c:	call   404215 <memcpy@plt+0x1765>
  404461:	mov    rax,QWORD PTR [rbp-0x30]
  404465:	lea    rcx,[rip+0xaf8c]        # 40f3f8 <memcpy@plt+0xc948>
  40446c:	lea    rdx,[rip+0xafc8]        # 40f43b <memcpy@plt+0xc98b>
  404473:	mov    esi,0xffffffff
  404478:	mov    rdi,rax
  40447b:	mov    eax,0x0
  404480:	call   40496e <memcpy@plt+0x1ebe>
  404485:	mov    rax,QWORD PTR [rbp-0x30]
  404489:	mov    rdi,rax
  40448c:	call   404237 <memcpy@plt+0x1787>
  404491:	mov    rax,0x41a270
  404498:	mov    rax,QWORD PTR [rax]
  40449b:	lea    rdx,[rbp-0x20]
  40449f:	mov    rsi,rdx
  4044a2:	mov    rdi,rax
  4044a5:	call   402730 <rb_dictionary_foreach_next@plt>
  4044aa:	mov    rax,0x41a270
  4044b1:	mov    rax,QWORD PTR [rax]
  4044b4:	lea    rdx,[rbp-0x20]
  4044b8:	mov    rsi,rdx
  4044bb:	mov    rdi,rax
  4044be:	call   402690 <rb_dictionary_foreach_cur@plt>
  4044c3:	mov    QWORD PTR [rbp-0x30],rax
  4044c7:	cmp    QWORD PTR [rbp-0x30],0x0
  4044cc:	jne    404455 <memcpy@plt+0x19a5>
  4044ce:	mov    rax,0x41a280
  4044d5:	mov    rax,QWORD PTR [rax]
  4044d8:	mov    QWORD PTR [rbp-0x40],rax
  4044dc:	cmp    QWORD PTR [rbp-0x40],0x0
  4044e1:	je     4044ed <memcpy@plt+0x1a3d>
  4044e3:	mov    rax,QWORD PTR [rbp-0x40]
  4044e7:	mov    rax,QWORD PTR [rax+0x10]
  4044eb:	jmp    4044f2 <memcpy@plt+0x1a42>
  4044ed:	mov    eax,0x0
  4044f2:	mov    QWORD PTR [rbp-0x38],rax
  4044f6:	jmp    404552 <memcpy@plt+0x1aa2>
  4044f8:	mov    rax,QWORD PTR [rbp-0x40]
  4044fc:	mov    rax,QWORD PTR [rax]
  4044ff:	mov    QWORD PTR [rbp-0x28],rax
  404503:	mov    rax,QWORD PTR [rbp-0x28]
  404507:	mov    rax,QWORD PTR [rax+0x38]
  40450b:	test   rax,rax
  40450e:	je     40451a <memcpy@plt+0x1a6a>
  404510:	mov    rax,QWORD PTR [rbp-0x28]
  404514:	mov    rax,QWORD PTR [rax+0x38]
  404518:	call   rax
  40451a:	mov    rax,QWORD PTR [rbp-0x40]
  40451e:	mov    rdx,0x41a280
  404525:	mov    rsi,rdx
  404528:	mov    rdi,rax
  40452b:	call   40409a <memcpy@plt+0x15ea>
  404530:	mov    rax,QWORD PTR [rbp-0x38]
  404534:	mov    QWORD PTR [rbp-0x40],rax
  404538:	cmp    QWORD PTR [rbp-0x40],0x0
  40453d:	je     404549 <memcpy@plt+0x1a99>
  40453f:	mov    rax,QWORD PTR [rbp-0x40]
  404543:	mov    rax,QWORD PTR [rax+0x10]
  404547:	jmp    40454e <memcpy@plt+0x1a9e>
  404549:	mov    eax,0x0
  40454e:	mov    QWORD PTR [rbp-0x38],rax
  404552:	cmp    QWORD PTR [rbp-0x40],0x0
  404557:	jne    4044f8 <memcpy@plt+0x1a48>
  404559:	mov    rax,0x41a270
  404560:	mov    rax,QWORD PTR [rax]
  404563:	mov    edx,0x0
  404568:	mov    esi,0x0
  40456d:	mov    rdi,rax
  404570:	call   402890 <rb_dictionary_destroy@plt>
  404575:	mov    rax,QWORD PTR [rip+0x15a84]        # 41a000 <memcpy@plt+0x17550>
  40457c:	mov    rdi,rax
  40457f:	call   4025f0 <rb_event_delete@plt>
  404584:	nop
  404585:	mov    rax,QWORD PTR [rbp-0x8]
  404589:	xor    rax,QWORD PTR fs:0x28
  404592:	je     404599 <memcpy@plt+0x1ae9>
  404594:	call   402950 <__stack_chk_fail@plt>
  404599:	leave  
  40459a:	ret    
  40459b:	endbr64 
  40459f:	push   rbp
  4045a0:	mov    rbp,rsp
  4045a3:	sub    rsp,0x20
  4045a7:	mov    QWORD PTR [rbp-0x18],rdi
  4045ab:	mov    rax,QWORD PTR [rip+0x15a3e]        # 419ff0 <memcpy@plt+0x17540>
  4045b2:	test   rax,rax
  4045b5:	je     4045f1 <memcpy@plt+0x1b41>
  4045b7:	mov    rax,QWORD PTR [rip+0x15a22]        # 419fe0 <memcpy@plt+0x17530>
  4045be:	mov    rax,QWORD PTR [rax]
  4045c1:	mov    edx,eax
  4045c3:	mov    rax,QWORD PTR [rbp-0x18]
  4045c7:	mov    DWORD PTR [rax+0x18],edx
  4045ca:	mov    rax,QWORD PTR [rip+0x15a0f]        # 419fe0 <memcpy@plt+0x17530>
  4045d1:	lea    rsi,[rip+0x15a08]        # 419fe0 <memcpy@plt+0x17530>
  4045d8:	mov    rdi,rax
  4045db:	call   40409a <memcpy@plt+0x15ea>
  4045e0:	mov    rax,QWORD PTR [rip+0x159f9]        # 419fe0 <memcpy@plt+0x17530>
  4045e7:	mov    rdi,rax
  4045ea:	call   402830 <rb_free_rb_dlink_node@plt>
  4045ef:	jmp    404638 <memcpy@plt+0x1b88>
  4045f1:	mov    eax,DWORD PTR [rip+0x15a01]        # 419ff8 <memcpy@plt+0x17548>
  4045f7:	cmp    eax,0x20
  4045fa:	je     404607 <memcpy@plt+0x1b57>
  4045fc:	mov    eax,DWORD PTR [rip+0x159f6]        # 419ff8 <memcpy@plt+0x17548>
  404602:	cmp    eax,0xffffffff
  404605:	jne    404622 <memcpy@plt+0x1b72>
  404607:	lea    rsi,[rip+0xae3a]        # 40f448 <memcpy@plt+0xc998>
  40460e:	mov    edi,0x57
  404613:	mov    eax,0x0
  404618:	call   403c26 <memcpy@plt+0x1176>
  40461d:	jmp    4046e2 <memcpy@plt+0x1c32>
  404622:	mov    eax,DWORD PTR [rip+0x159d0]        # 419ff8 <memcpy@plt+0x17548>
  404628:	lea    edx,[rax+0x1]
  40462b:	mov    DWORD PTR [rip+0x159c7],edx        # 419ff8 <memcpy@plt+0x17548>
  404631:	mov    rdx,QWORD PTR [rbp-0x18]
  404635:	mov    DWORD PTR [rdx+0x18],eax
  404638:	mov    rax,QWORD PTR [rbp-0x18]
  40463c:	mov    rax,QWORD PTR [rax+0x70]
  404640:	test   rax,rax
  404643:	je     404684 <memcpy@plt+0x1bd4>
  404645:	mov    rax,QWORD PTR [rbp-0x18]
  404649:	mov    rax,QWORD PTR [rax+0x70]
  40464d:	mov    QWORD PTR [rbp-0x8],rax
  404651:	jmp    404678 <memcpy@plt+0x1bc8>
  404653:	mov    rax,QWORD PTR [rbp-0x8]
  404657:	mov    rcx,QWORD PTR [rax]
  40465a:	mov    rax,0x41a260
  404661:	mov    rax,QWORD PTR [rax]
  404664:	mov    rdx,QWORD PTR [rbp-0x8]
  404668:	mov    rsi,rcx
  40466b:	mov    rdi,rax
  40466e:	call   402920 <rb_dictionary_add@plt>
  404673:	add    QWORD PTR [rbp-0x8],0x18
  404678:	mov    rax,QWORD PTR [rbp-0x8]
  40467c:	mov    rax,QWORD PTR [rax]
  40467f:	test   rax,rax
  404682:	jne    404653 <memcpy@plt+0x1ba3>
  404684:	mov    rax,QWORD PTR [rbp-0x18]
  404688:	movzx  eax,BYTE PTR [rax+0x60]
  40468c:	test   al,al
  40468e:	je     4046b1 <memcpy@plt+0x1c01>
  404690:	mov    rax,QWORD PTR [rbp-0x18]
  404694:	movzx  eax,BYTE PTR [rax+0x60]
  404698:	movzx  edx,al
  40469b:	mov    rax,QWORD PTR [rbp-0x18]
  40469f:	mov    rcx,QWORD PTR [rax+0x68]
  4046a3:	mov    rax,0x414ae0
  4046aa:	movsxd rdx,edx
  4046ad:	mov    QWORD PTR [rax+rdx*8],rcx
  4046b1:	mov    rax,QWORD PTR [rbp-0x18]
  4046b5:	mov    rax,QWORD PTR [rax+0x30]
  4046b9:	test   rax,rax
  4046bc:	je     4046c8 <memcpy@plt+0x1c18>
  4046be:	mov    rax,QWORD PTR [rbp-0x18]
  4046c2:	mov    rax,QWORD PTR [rax+0x30]
  4046c6:	call   rax
  4046c8:	mov    rcx,QWORD PTR [rbp-0x18]
  4046cc:	mov    rax,QWORD PTR [rbp-0x18]
  4046d0:	mov    rdx,0x41a280
  4046d7:	mov    rsi,rcx
  4046da:	mov    rdi,rax
  4046dd:	call   403f96 <memcpy@plt+0x14e6>
  4046e2:	leave  
  4046e3:	ret    
  4046e4:	endbr64 
  4046e8:	push   rbp
  4046e9:	mov    rbp,rsp
  4046ec:	sub    rsp,0x20
  4046f0:	mov    QWORD PTR [rbp-0x18],rdi
  4046f4:	mov    rax,QWORD PTR [rbp-0x18]
  4046f8:	mov    rax,QWORD PTR [rax+0x70]
  4046fc:	test   rax,rax
  4046ff:	je     40473c <memcpy@plt+0x1c8c>
  404701:	mov    rax,QWORD PTR [rbp-0x18]
  404705:	mov    rax,QWORD PTR [rax+0x70]
  404709:	mov    QWORD PTR [rbp-0x8],rax
  40470d:	jmp    404730 <memcpy@plt+0x1c80>
  40470f:	mov    rax,QWORD PTR [rbp-0x8]
  404713:	mov    rdx,QWORD PTR [rax]
  404716:	mov    rax,0x41a260
  40471d:	mov    rax,QWORD PTR [rax]
  404720:	mov    rsi,rdx
  404723:	mov    rdi,rax
  404726:	call   402800 <rb_dictionary_delete@plt>
  40472b:	add    QWORD PTR [rbp-0x8],0x18
  404730:	mov    rax,QWORD PTR [rbp-0x8]
  404734:	mov    rax,QWORD PTR [rax]
  404737:	test   rax,rax
  40473a:	jne    40470f <memcpy@plt+0x1c5f>
  40473c:	mov    rax,QWORD PTR [rbp-0x18]
  404740:	movzx  eax,BYTE PTR [rax+0x60]
  404744:	test   al,al
  404746:	je     404765 <memcpy@plt+0x1cb5>
  404748:	mov    rax,QWORD PTR [rbp-0x18]
  40474c:	movzx  eax,BYTE PTR [rax+0x60]
  404750:	movzx  edx,al
  404753:	mov    rax,0x414ae0
  40475a:	movsxd rdx,edx
  40475d:	mov    QWORD PTR [rax+rdx*8],0x0
  404765:	mov    rax,QWORD PTR [rbp-0x18]
  404769:	mov    rax,QWORD PTR [rax+0x38]
  40476d:	test   rax,rax
  404770:	je     40477c <memcpy@plt+0x1ccc>
  404772:	mov    rax,QWORD PTR [rbp-0x18]
  404776:	mov    rax,QWORD PTR [rax+0x38]
  40477a:	call   rax
  40477c:	mov    rax,QWORD PTR [rbp-0x18]
  404780:	mov    rdx,0x41a280
  404787:	mov    rsi,rdx
  40478a:	mov    rdi,rax
  40478d:	call   40409a <memcpy@plt+0x15ea>
  404792:	call   402a50 <rb_make_rb_dlink_node@plt>
  404797:	mov    rcx,rax
  40479a:	mov    rax,QWORD PTR [rbp-0x18]
  40479e:	mov    eax,DWORD PTR [rax+0x18]
  4047a1:	mov    eax,eax
  4047a3:	lea    rdx,[rip+0x15836]        # 419fe0 <memcpy@plt+0x17530>
  4047aa:	mov    rsi,rcx
  4047ad:	mov    rdi,rax
  4047b0:	call   403f96 <memcpy@plt+0x14e6>
  4047b5:	nop
  4047b6:	leave  
  4047b7:	ret    
  4047b8:	endbr64 
  4047bc:	push   rbp
  4047bd:	mov    rbp,rsp
  4047c0:	sub    rsp,0x10
  4047c4:	mov    QWORD PTR [rbp-0x8],rdi
  4047c8:	mov    rax,QWORD PTR [rbp-0x8]
  4047cc:	mov    eax,DWORD PTR [rax]
  4047ce:	mov    eax,eax
  4047d0:	mov    rdx,rax
  4047d3:	mov    rax,0x41a270
  4047da:	mov    rax,QWORD PTR [rax]
  4047dd:	mov    rsi,rdx
  4047e0:	mov    rdi,rax
  4047e3:	call   402800 <rb_dictionary_delete@plt>
  4047e8:	mov    rax,QWORD PTR [rbp-0x8]
  4047ec:	mov    rax,QWORD PTR [rax+0x1d0]
  4047f3:	mov    rdi,rax
  4047f6:	call   4041ca <memcpy@plt+0x171a>
  4047fb:	mov    rax,QWORD PTR [rbp-0x8]
  4047ff:	mov    rdi,rax
  404802:	call   4041ca <memcpy@plt+0x171a>
  404807:	nop
  404808:	leave  
  404809:	ret    
  40480a:	endbr64 
  40480e:	push   rbp
  40480f:	mov    rbp,rsp
  404812:	sub    rsp,0x20
  404816:	mov    QWORD PTR [rbp-0x18],rdi
  40481a:	mov    rax,QWORD PTR [rbp-0x18]
  40481e:	movzx  eax,BYTE PTR [rax+0x1c4]
  404825:	test   al,al
  404827:	jne    4048ad <memcpy@plt+0x1dfd>
  40482d:	mov    rax,QWORD PTR [rbp-0x18]
  404831:	mov    BYTE PTR [rax+0x1c4],0x1
  404838:	mov    rax,QWORD PTR [rbp-0x18]
  40483c:	mov    eax,DWORD PTR [rax+0x1c8]
  404842:	test   eax,eax
  404844:	je     4048ae <memcpy@plt+0x1dfe>
  404846:	mov    rax,0x41a280
  40484d:	mov    rax,QWORD PTR [rax]
  404850:	mov    QWORD PTR [rbp-0x10],rax
  404854:	jmp    4048a4 <memcpy@plt+0x1df4>
  404856:	mov    rax,QWORD PTR [rbp-0x10]
  40485a:	mov    rax,QWORD PTR [rax]
  40485d:	mov    QWORD PTR [rbp-0x8],rax
  404861:	mov    rax,QWORD PTR [rbp-0x8]
  404865:	mov    rax,QWORD PTR [rax+0x48]
  404869:	test   rax,rax
  40486c:	je     404898 <memcpy@plt+0x1de8>
  40486e:	mov    rax,QWORD PTR [rbp-0x8]
  404872:	mov    edx,DWORD PTR [rax+0x18]
  404875:	mov    rax,QWORD PTR [rbp-0x18]
  404879:	mov    esi,edx
  40487b:	mov    rdi,rax
  40487e:	call   40429c <memcpy@plt+0x17ec>
  404883:	test   al,al
  404885:	je     404898 <memcpy@plt+0x1de8>
  404887:	mov    rax,QWORD PTR [rbp-0x8]
  40488b:	mov    rax,QWORD PTR [rax+0x48]
  40488f:	mov    rdx,QWORD PTR [rbp-0x18]
  404893:	mov    rdi,rdx
  404896:	call   rax
  404898:	mov    rax,QWORD PTR [rbp-0x10]
  40489c:	mov    rax,QWORD PTR [rax+0x10]
  4048a0:	mov    QWORD PTR [rbp-0x10],rax
  4048a4:	cmp    QWORD PTR [rbp-0x10],0x0
  4048a9:	jne    404856 <memcpy@plt+0x1da6>
  4048ab:	jmp    4048ae <memcpy@plt+0x1dfe>
  4048ad:	nop
  4048ae:	leave  
  4048af:	ret    
  4048b0:	endbr64 
  4048b4:	push   rbp
  4048b5:	mov    rbp,rsp
  4048b8:	sub    rsp,0x20
  4048bc:	mov    QWORD PTR [rbp-0x18],rdi
  4048c0:	mov    DWORD PTR [rbp-0x1c],esi
  4048c3:	mov    edx,DWORD PTR [rbp-0x1c]
  4048c6:	mov    rax,QWORD PTR [rbp-0x18]
  4048ca:	mov    esi,edx
  4048cc:	mov    rdi,rax
  4048cf:	call   404355 <memcpy@plt+0x18a5>
  4048d4:	mov    rax,QWORD PTR [rbp-0x18]
  4048d8:	mov    eax,DWORD PTR [rax+0x1c8]
  4048de:	test   eax,eax
  4048e0:	jne    404902 <memcpy@plt+0x1e52>
  4048e2:	mov    rax,QWORD PTR [rbp-0x18]
  4048e6:	movzx  eax,BYTE PTR [rax+0x1c3]
  4048ed:	xor    eax,0x1
  4048f0:	test   al,al
  4048f2:	je     404902 <memcpy@plt+0x1e52>
  4048f4:	mov    rax,QWORD PTR [rbp-0x18]
  4048f8:	mov    rdi,rax
  4048fb:	call   404b1c <memcpy@plt+0x206c>
  404900:	jmp    40496c <memcpy@plt+0x1ebc>
  404902:	mov    rax,0x41a280
  404909:	mov    rax,QWORD PTR [rax]
  40490c:	mov    QWORD PTR [rbp-0x10],rax
  404910:	jmp    404965 <memcpy@plt+0x1eb5>
  404912:	mov    rax,QWORD PTR [rbp-0x10]
  404916:	mov    rax,QWORD PTR [rax]
  404919:	mov    QWORD PTR [rbp-0x8],rax
  40491d:	mov    rax,QWORD PTR [rbp-0x8]
  404921:	mov    rax,QWORD PTR [rax+0x58]
  404925:	test   rax,rax
  404928:	je     404959 <memcpy@plt+0x1ea9>
  40492a:	mov    rax,QWORD PTR [rbp-0x8]
  40492e:	mov    edx,DWORD PTR [rax+0x18]
  404931:	mov    rax,QWORD PTR [rbp-0x18]
  404935:	mov    esi,edx
  404937:	mov    rdi,rax
  40493a:	call   40429c <memcpy@plt+0x17ec>
  40493f:	test   al,al
  404941:	je     404959 <memcpy@plt+0x1ea9>
  404943:	mov    rax,QWORD PTR [rbp-0x8]
  404947:	mov    rax,QWORD PTR [rax+0x58]
  40494b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40494e:	mov    rdx,QWORD PTR [rbp-0x18]
  404952:	mov    esi,ecx
  404954:	mov    rdi,rdx
  404957:	call   rax
  404959:	mov    rax,QWORD PTR [rbp-0x10]
  40495d:	mov    rax,QWORD PTR [rax+0x10]
  404961:	mov    QWORD PTR [rbp-0x10],rax
  404965:	cmp    QWORD PTR [rbp-0x10],0x0
  40496a:	jne    404912 <memcpy@plt+0x1e62>
  40496c:	leave  
  40496d:	ret    
  40496e:	endbr64 
  404972:	push   rbp
  404973:	mov    rbp,rsp
  404976:	sub    rsp,0x300
  40497d:	mov    QWORD PTR [rbp-0x2e8],rdi
  404984:	mov    DWORD PTR [rbp-0x2ec],esi
  40498a:	mov    QWORD PTR [rbp-0x2f8],rdx
  404991:	mov    QWORD PTR [rbp-0x300],rcx
  404998:	mov    QWORD PTR [rbp-0x90],r8
  40499f:	mov    QWORD PTR [rbp-0x88],r9
  4049a6:	test   al,al
  4049a8:	je     4049d2 <memcpy@plt+0x1f22>
  4049aa:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4049af:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  4049b4:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  4049b9:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  4049be:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  4049c3:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  4049c8:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  4049cd:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  4049d2:	mov    rax,QWORD PTR fs:0x28
  4049db:	mov    QWORD PTR [rbp-0xb8],rax
  4049e2:	xor    eax,eax
  4049e4:	mov    DWORD PTR [rbp-0x2d8],0x20
  4049ee:	mov    DWORD PTR [rbp-0x2d4],0x30
  4049f8:	lea    rax,[rbp+0x10]
  4049fc:	mov    QWORD PTR [rbp-0x2d0],rax
  404a03:	lea    rax,[rbp-0xb0]
  404a0a:	mov    QWORD PTR [rbp-0x2c8],rax
  404a11:	lea    rcx,[rbp-0x2d8]
  404a18:	mov    rdx,QWORD PTR [rbp-0x300]
  404a1f:	lea    rax,[rbp-0x2c0]
  404a26:	mov    esi,0x200
  404a2b:	mov    rdi,rax
  404a2e:	call   4028d0 <vsnprintf@plt>
  404a33:	cmp    QWORD PTR [rbp-0x2f8],0x0
  404a3b:	je     404a46 <memcpy@plt+0x1f96>
  404a3d:	mov    rdx,QWORD PTR [rbp-0x2f8]
  404a44:	jmp    404a4d <memcpy@plt+0x1f9d>
  404a46:	lea    rdx,[rip+0xaa29]        # 40f476 <memcpy@plt+0xc9c6>
  404a4d:	mov    rax,QWORD PTR [rbp-0x2e8]
  404a54:	lea    r9,[rax+0x178]
  404a5b:	mov    rax,QWORD PTR [rbp-0x2e8]
  404a62:	lea    r8,[rax+0x1b8]
  404a69:	cmp    DWORD PTR [rbp-0x2ec],0xffffffff
  404a70:	je     404a99 <memcpy@plt+0x1fe9>
  404a72:	mov    rax,QWORD PTR [rbp-0x2e8]
  404a79:	mov    rax,QWORD PTR [rax+0x1d0]
  404a80:	mov    ecx,DWORD PTR [rbp-0x2ec]
  404a86:	shl    rcx,0x5
  404a8a:	add    rax,rcx
  404a8d:	mov    rax,QWORD PTR [rax]
  404a90:	movzx  eax,BYTE PTR [rax+0x28]
  404a94:	movsx  eax,al
  404a97:	jmp    404a9e <memcpy@plt+0x1fee>
  404a99:	mov    eax,0x2a
  404a9e:	mov    rcx,QWORD PTR [rbp-0x2e8]
  404aa5:	mov    esi,DWORD PTR [rcx]
  404aa7:	mov    rcx,0x415f60
  404aae:	mov    rdi,QWORD PTR [rcx]
  404ab1:	lea    rcx,[rbp-0x2c0]
  404ab8:	push   rcx
  404ab9:	push   rdx
  404aba:	mov    ecx,eax
  404abc:	mov    edx,esi
  404abe:	lea    rsi,[rip+0xa9b3]        # 40f478 <memcpy@plt+0xc9c8>
  404ac5:	mov    eax,0x0
  404aca:	call   4029f0 <rb_helper_write@plt>
  404acf:	add    rsp,0x10
  404ad3:	cmp    DWORD PTR [rbp-0x2ec],0xffffffff
  404ada:	je     404af3 <memcpy@plt+0x2043>
  404adc:	mov    edx,DWORD PTR [rbp-0x2ec]
  404ae2:	mov    rax,QWORD PTR [rbp-0x2e8]
  404ae9:	mov    esi,edx
  404aeb:	mov    rdi,rax
  404aee:	call   404355 <memcpy@plt+0x18a5>
  404af3:	mov    rax,QWORD PTR [rbp-0x2e8]
  404afa:	mov    rdi,rax
  404afd:	call   40480a <memcpy@plt+0x1d5a>
  404b02:	nop
  404b03:	mov    rax,QWORD PTR [rbp-0xb8]
  404b0a:	xor    rax,QWORD PTR fs:0x28
  404b13:	je     404b1a <memcpy@plt+0x206a>
  404b15:	call   402950 <__stack_chk_fail@plt>
  404b1a:	leave  
  404b1b:	ret    
  404b1c:	endbr64 
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	sub    rsp,0x10
  404b28:	mov    QWORD PTR [rbp-0x8],rdi
  404b2c:	mov    rax,QWORD PTR [rbp-0x8]
  404b30:	lea    rsi,[rax+0x178]
  404b37:	mov    rax,QWORD PTR [rbp-0x8]
  404b3b:	lea    rcx,[rax+0x1b8]
  404b42:	mov    rax,QWORD PTR [rbp-0x8]
  404b46:	mov    edx,DWORD PTR [rax]
  404b48:	mov    rax,0x415f60
  404b4f:	mov    rax,QWORD PTR [rax]
  404b52:	mov    r8,rsi
  404b55:	lea    rsi,[rip+0xa931]        # 40f48d <memcpy@plt+0xc9dd>
  404b5c:	mov    rdi,rax
  404b5f:	mov    eax,0x0
  404b64:	call   4029f0 <rb_helper_write@plt>
  404b69:	mov    rax,QWORD PTR [rbp-0x8]
  404b6d:	mov    rdi,rax
  404b70:	call   40480a <memcpy@plt+0x1d5a>
  404b75:	nop
  404b76:	leave  
  404b77:	ret    
  404b78:	endbr64 
  404b7c:	push   rbp
  404b7d:	mov    rbp,rsp
  404b80:	push   rbx
  404b81:	sub    rsp,0x58
  404b85:	mov    QWORD PTR [rbp-0x38],rdi
  404b89:	mov    QWORD PTR [rbp-0x40],rsi
  404b8d:	mov    QWORD PTR [rbp-0x48],rdx
  404b91:	mov    QWORD PTR [rbp-0x50],rcx
  404b95:	mov    QWORD PTR [rbp-0x58],r8
  404b99:	mov    QWORD PTR [rbp-0x60],r9
  404b9d:	mov    rax,QWORD PTR [rbp-0x38]
  404ba1:	mov    edx,0x10
  404ba6:	mov    esi,0x0
  404bab:	mov    rdi,rax
  404bae:	call   402a30 <strtoull@plt>
  404bb3:	mov    QWORD PTR [rbp-0x28],rax
  404bb7:	cmp    QWORD PTR [rbp-0x28],0x0
  404bbc:	je     404f04 <memcpy@plt+0x2454>
  404bc2:	mov    eax,0xffffffff
  404bc7:	cmp    QWORD PTR [rbp-0x28],rax
  404bcb:	ja     404f04 <memcpy@plt+0x2454>
  404bd1:	mov    edi,0x1d8
  404bd6:	call   40418e <memcpy@plt+0x16de>
  404bdb:	mov    QWORD PTR [rbp-0x20],rax
  404bdf:	mov    rax,QWORD PTR [rbp-0x20]
  404be3:	mov    rdi,rax
  404be6:	call   404215 <memcpy@plt+0x1765>
  404beb:	mov    rax,QWORD PTR [rbp-0x28]
  404bef:	mov    edx,eax
  404bf1:	mov    rax,QWORD PTR [rbp-0x20]
  404bf5:	mov    DWORD PTR [rax],edx
  404bf7:	mov    rax,QWORD PTR [rbp-0x20]
  404bfb:	mov    eax,DWORD PTR [rax]
  404bfd:	mov    eax,eax
  404bff:	mov    rdx,rax
  404c02:	mov    rax,0x41a270
  404c09:	mov    rax,QWORD PTR [rax]
  404c0c:	mov    rsi,rdx
  404c0f:	mov    rdi,rax
  404c12:	call   402990 <rb_dictionary_find@plt>
  404c17:	test   rax,rax
  404c1a:	jne    404cbf <memcpy@plt+0x220f>
  404c20:	mov    rax,QWORD PTR [rbp-0x20]
  404c24:	mov    eax,DWORD PTR [rax]
  404c26:	mov    eax,eax
  404c28:	mov    rcx,rax
  404c2b:	mov    rax,0x41a270
  404c32:	mov    rax,QWORD PTR [rax]
  404c35:	mov    rdx,QWORD PTR [rbp-0x20]
  404c39:	mov    rsi,rcx
  404c3c:	mov    rdi,rax
  404c3f:	call   402920 <rb_dictionary_add@plt>
  404c44:	mov    rax,QWORD PTR [rbp-0x60]
  404c48:	mov    edx,0x10
  404c4d:	mov    esi,0x0
  404c52:	mov    rdi,rax
  404c55:	call   402a30 <strtoull@plt>
  404c5a:	mov    edx,eax
  404c5c:	mov    rax,QWORD PTR [rbp-0x20]
  404c60:	mov    DWORD PTR [rax+0x4],edx
  404c63:	mov    rax,QWORD PTR [rbp-0x20]
  404c67:	lea    rcx,[rax+0x8]
  404c6b:	mov    rax,QWORD PTR [rbp-0x40]
  404c6f:	mov    edx,0x36
  404c74:	mov    rsi,rax
  404c77:	mov    rdi,rcx
  404c7a:	call   402720 <rb_strlcpy@plt>
  404c7f:	mov    rax,QWORD PTR [rbp-0x48]
  404c83:	mov    rdi,rax
  404c86:	call   402880 <atoi@plt>
  404c8b:	mov    edx,eax
  404c8d:	mov    rax,QWORD PTR [rbp-0x20]
  404c91:	mov    WORD PTR [rax+0x3e],dx
  404c95:	mov    rax,QWORD PTR [rbp-0x20]
  404c99:	lea    rdx,[rax+0x40]
  404c9d:	mov    rax,QWORD PTR [rbp-0x40]
  404ca1:	mov    rsi,rdx
  404ca4:	mov    rdi,rax
  404ca7:	call   4027d0 <rb_inet_pton_sock@plt>
  404cac:	mov    rax,QWORD PTR [rbp-0x20]
  404cb0:	add    rax,0x40
  404cb4:	movzx  eax,WORD PTR [rax]
  404cb7:	cmp    ax,0x2
  404cbb:	jne    404d06 <memcpy@plt+0x2256>
  404cbd:	jmp    404ce6 <memcpy@plt+0x2236>
  404cbf:	mov    rax,QWORD PTR [rbp-0x38]
  404cc3:	mov    rdx,rax
  404cc6:	lea    rsi,[rip+0xa7cb]        # 40f498 <memcpy@plt+0xc9e8>
  404ccd:	mov    edi,0x43
  404cd2:	mov    eax,0x0
  404cd7:	call   403c26 <memcpy@plt+0x1176>
  404cdc:	mov    edi,0x3
  404ce1:	call   402630 <exit@plt>
  404ce6:	mov    rax,QWORD PTR [rbp-0x20]
  404cea:	movzx  eax,WORD PTR [rax+0x3e]
  404cee:	movzx  eax,ax
  404cf1:	mov    rdx,QWORD PTR [rbp-0x20]
  404cf5:	lea    rbx,[rdx+0x40]
  404cf9:	mov    edi,eax
  404cfb:	call   402620 <htons@plt>
  404d00:	mov    WORD PTR [rbx+0x2],ax
  404d04:	jmp    404d24 <memcpy@plt+0x2274>
  404d06:	mov    rax,QWORD PTR [rbp-0x20]
  404d0a:	movzx  eax,WORD PTR [rax+0x3e]
  404d0e:	movzx  eax,ax
  404d11:	mov    rdx,QWORD PTR [rbp-0x20]
  404d15:	lea    rbx,[rdx+0x40]
  404d19:	mov    edi,eax
  404d1b:	call   402620 <htons@plt>
  404d20:	mov    WORD PTR [rbx+0x2],ax
  404d24:	mov    rax,QWORD PTR [rbp-0x20]
  404d28:	lea    rcx,[rax+0xc0]
  404d2f:	mov    rax,QWORD PTR [rbp-0x50]
  404d33:	mov    edx,0x36
  404d38:	mov    rsi,rax
  404d3b:	mov    rdi,rcx
  404d3e:	call   402720 <rb_strlcpy@plt>
  404d43:	mov    rax,QWORD PTR [rbp-0x58]
  404d47:	mov    rdi,rax
  404d4a:	call   402880 <atoi@plt>
  404d4f:	mov    edx,eax
  404d51:	mov    rax,QWORD PTR [rbp-0x20]
  404d55:	mov    WORD PTR [rax+0xf6],dx
  404d5c:	mov    rax,QWORD PTR [rbp-0x20]
  404d60:	lea    rdx,[rax+0xf8]
  404d67:	mov    rax,QWORD PTR [rbp-0x50]
  404d6b:	mov    rsi,rdx
  404d6e:	mov    rdi,rax
  404d71:	call   4027d0 <rb_inet_pton_sock@plt>
  404d76:	mov    rax,QWORD PTR [rbp-0x20]
  404d7a:	add    rax,0xf8
  404d80:	movzx  eax,WORD PTR [rax]
  404d83:	cmp    ax,0x2
  404d87:	jne    404daf <memcpy@plt+0x22ff>
  404d89:	mov    rax,QWORD PTR [rbp-0x20]
  404d8d:	movzx  eax,WORD PTR [rax+0xf6]
  404d94:	movzx  eax,ax
  404d97:	mov    rdx,QWORD PTR [rbp-0x20]
  404d9b:	lea    rbx,[rdx+0xf8]
  404da2:	mov    edi,eax
  404da4:	call   402620 <htons@plt>
  404da9:	mov    WORD PTR [rbx+0x2],ax
  404dad:	jmp    404dd3 <memcpy@plt+0x2323>
  404daf:	mov    rax,QWORD PTR [rbp-0x20]
  404db3:	movzx  eax,WORD PTR [rax+0xf6]
  404dba:	movzx  eax,ax
  404dbd:	mov    rdx,QWORD PTR [rbp-0x20]
  404dc1:	lea    rbx,[rdx+0xf8]
  404dc8:	mov    edi,eax
  404dca:	call   402620 <htons@plt>
  404dcf:	mov    WORD PTR [rbx+0x2],ax
  404dd3:	mov    rax,QWORD PTR [rbp-0x20]
  404dd7:	add    rax,0x178
  404ddd:	mov    edx,0x40
  404de2:	lea    rsi,[rip+0xa68d]        # 40f476 <memcpy@plt+0xc9c6>
  404de9:	mov    rdi,rax
  404dec:	call   402720 <rb_strlcpy@plt>
  404df1:	mov    rax,QWORD PTR [rbp-0x20]
  404df5:	add    rax,0x1b8
  404dfb:	mov    edx,0xb
  404e00:	lea    rsi,[rip+0xa66f]        # 40f476 <memcpy@plt+0xc9c6>
  404e07:	mov    rdi,rax
  404e0a:	call   402720 <rb_strlcpy@plt>
  404e0f:	mov    eax,DWORD PTR [rip+0x151e3]        # 419ff8 <memcpy@plt+0x17548>
  404e15:	mov    eax,eax
  404e17:	shl    rax,0x5
  404e1b:	mov    rdi,rax
  404e1e:	call   40418e <memcpy@plt+0x16de>
  404e23:	mov    rdx,rax
  404e26:	mov    rax,QWORD PTR [rbp-0x20]
  404e2a:	mov    QWORD PTR [rax+0x1d0],rdx
  404e31:	mov    rax,QWORD PTR [rbp-0x20]
  404e35:	mov    BYTE PTR [rax+0x1c3],0x1
  404e3c:	mov    rax,0x41a280
  404e43:	mov    rax,QWORD PTR [rax]
  404e46:	mov    QWORD PTR [rbp-0x30],rax
  404e4a:	jmp    404ec1 <memcpy@plt+0x2411>
  404e4c:	mov    rax,QWORD PTR [rbp-0x30]
  404e50:	mov    rax,QWORD PTR [rax]
  404e53:	mov    QWORD PTR [rbp-0x18],rax
  404e57:	mov    rax,QWORD PTR [rbp-0x20]
  404e5b:	mov    rdx,QWORD PTR [rax+0x1d0]
  404e62:	mov    rax,QWORD PTR [rbp-0x18]
  404e66:	mov    eax,DWORD PTR [rax+0x18]
  404e69:	mov    eax,eax
  404e6b:	shl    rax,0x5
  404e6f:	add    rdx,rax
  404e72:	mov    rax,QWORD PTR [rbp-0x18]
  404e76:	mov    QWORD PTR [rdx],rax
  404e79:	mov    rax,QWORD PTR [rbp-0x18]
  404e7d:	mov    edx,DWORD PTR [rax+0x18]
  404e80:	mov    rax,QWORD PTR [rbp-0x20]
  404e84:	mov    esi,edx
  404e86:	mov    rdi,rax
  404e89:	call   404316 <memcpy@plt+0x1866>
  404e8e:	mov    rax,QWORD PTR [rbp-0x18]
  404e92:	mov    rax,QWORD PTR [rax+0x40]
  404e96:	mov    rdx,QWORD PTR [rbp-0x20]
  404e9a:	mov    rdi,rdx
  404e9d:	call   rax
  404e9f:	xor    eax,0x1
  404ea2:	test   al,al
  404ea4:	jne    404ef2 <memcpy@plt+0x2442>
  404ea6:	mov    rax,QWORD PTR [rbp-0x20]
  404eaa:	movzx  eax,BYTE PTR [rax+0x1c4]
  404eb1:	test   al,al
  404eb3:	jne    404eca <memcpy@plt+0x241a>
  404eb5:	mov    rax,QWORD PTR [rbp-0x30]
  404eb9:	mov    rax,QWORD PTR [rax+0x10]
  404ebd:	mov    QWORD PTR [rbp-0x30],rax
  404ec1:	cmp    QWORD PTR [rbp-0x30],0x0
  404ec6:	jne    404e4c <memcpy@plt+0x239c>
  404ec8:	jmp    404ecb <memcpy@plt+0x241b>
  404eca:	nop
  404ecb:	mov    rax,QWORD PTR [rbp-0x20]
  404ecf:	mov    BYTE PTR [rax+0x1c3],0x0
  404ed6:	mov    rax,QWORD PTR [rbp-0x20]
  404eda:	mov    eax,DWORD PTR [rax+0x1c8]
  404ee0:	test   eax,eax
  404ee2:	jne    404ef5 <memcpy@plt+0x2445>
  404ee4:	mov    rax,QWORD PTR [rbp-0x20]
  404ee8:	mov    rdi,rax
  404eeb:	call   404b1c <memcpy@plt+0x206c>
  404ef0:	jmp    404ef6 <memcpy@plt+0x2446>
  404ef2:	nop
  404ef3:	jmp    404ef6 <memcpy@plt+0x2446>
  404ef5:	nop
  404ef6:	mov    rax,QWORD PTR [rbp-0x20]
  404efa:	mov    rdi,rax
  404efd:	call   404237 <memcpy@plt+0x1787>
  404f02:	jmp    404f05 <memcpy@plt+0x2455>
  404f04:	nop
  404f05:	add    rsp,0x58
  404f09:	pop    rbx
  404f0a:	pop    rbp
  404f0b:	ret    
  404f0c:	endbr64 
  404f10:	push   rbp
  404f11:	mov    rbp,rsp
  404f14:	sub    rsp,0x10
  404f18:	mov    DWORD PTR [rbp-0x4],edi
  404f1b:	mov    QWORD PTR [rbp-0x10],rsi
  404f1f:	cmp    DWORD PTR [rbp-0x4],0x5
  404f23:	jg     404f4a <memcpy@plt+0x249a>
  404f25:	mov    eax,DWORD PTR [rbp-0x4]
  404f28:	mov    edx,eax
  404f2a:	lea    rsi,[rip+0xa59f]        # 40f4d0 <memcpy@plt+0xca20>
  404f31:	mov    edi,0x43
  404f36:	mov    eax,0x0
  404f3b:	call   403c26 <memcpy@plt+0x1176>
  404f40:	mov    edi,0x3
  404f45:	call   402630 <exit@plt>
  404f4a:	cmp    DWORD PTR [rbp-0x4],0x6
  404f4e:	jle    404f5a <memcpy@plt+0x24aa>
  404f50:	mov    rax,QWORD PTR [rbp-0x10]
  404f54:	mov    rax,QWORD PTR [rax+0x30]
  404f58:	jmp    404f61 <memcpy@plt+0x24b1>
  404f5a:	lea    rax,[rip+0xa5b9]        # 40f51a <memcpy@plt+0xca6a>
  404f61:	mov    rdx,QWORD PTR [rbp-0x10]
  404f65:	add    rdx,0x28
  404f69:	mov    r8,QWORD PTR [rdx]
  404f6c:	mov    rdx,QWORD PTR [rbp-0x10]
  404f70:	add    rdx,0x20
  404f74:	mov    rcx,QWORD PTR [rdx]
  404f77:	mov    rdx,QWORD PTR [rbp-0x10]
  404f7b:	add    rdx,0x18
  404f7f:	mov    rdx,QWORD PTR [rdx]
  404f82:	mov    rsi,QWORD PTR [rbp-0x10]
  404f86:	add    rsi,0x10
  404f8a:	mov    rsi,QWORD PTR [rsi]
  404f8d:	mov    rdi,QWORD PTR [rbp-0x10]
  404f91:	add    rdi,0x8
  404f95:	mov    rdi,QWORD PTR [rdi]
  404f98:	mov    r9,rax
  404f9b:	call   404b78 <memcpy@plt+0x20c8>
  404fa0:	nop
  404fa1:	leave  
  404fa2:	ret    
  404fa3:	endbr64 
  404fa7:	push   rbp
  404fa8:	mov    rbp,rsp
  404fab:	sub    rsp,0x20
  404faf:	mov    DWORD PTR [rbp-0x14],edi
  404fb2:	mov    QWORD PTR [rbp-0x20],rsi
  404fb6:	cmp    DWORD PTR [rbp-0x14],0x1
  404fba:	jg     404fe1 <memcpy@plt+0x2531>
  404fbc:	mov    eax,DWORD PTR [rbp-0x14]
  404fbf:	mov    edx,eax
  404fc1:	lea    rsi,[rip+0xa558]        # 40f520 <memcpy@plt+0xca70>
  404fc8:	mov    edi,0x43
  404fcd:	mov    eax,0x0
  404fd2:	call   403c26 <memcpy@plt+0x1176>
  404fd7:	mov    edi,0x3
  404fdc:	call   402630 <exit@plt>
  404fe1:	mov    rax,QWORD PTR [rbp-0x20]
  404fe5:	add    rax,0x8
  404fe9:	mov    rax,QWORD PTR [rax]
  404fec:	mov    edx,0x10
  404ff1:	mov    esi,0x0
  404ff6:	mov    rdi,rax
  404ff9:	call   402a30 <strtoull@plt>
  404ffe:	mov    QWORD PTR [rbp-0x10],rax
  405002:	cmp    QWORD PTR [rbp-0x10],0x0
  405007:	je     405014 <memcpy@plt+0x2564>
  405009:	mov    eax,0xffffffff
  40500e:	cmp    QWORD PTR [rbp-0x10],rax
  405012:	jbe    405042 <memcpy@plt+0x2592>
  405014:	mov    rax,QWORD PTR [rbp-0x20]
  405018:	add    rax,0x8
  40501c:	mov    rax,QWORD PTR [rax]
  40501f:	mov    rdx,rax
  405022:	lea    rsi,[rip+0xa547]        # 40f570 <memcpy@plt+0xcac0>
  405029:	mov    edi,0x43
  40502e:	mov    eax,0x0
  405033:	call   403c26 <memcpy@plt+0x1176>
  405038:	mov    edi,0x3
  40503d:	call   402630 <exit@plt>
  405042:	mov    rax,QWORD PTR [rbp-0x10]
  405046:	mov    eax,eax
  405048:	mov    rdx,rax
  40504b:	mov    rax,0x41a270
  405052:	mov    rax,QWORD PTR [rax]
  405055:	mov    rsi,rdx
  405058:	mov    rdi,rax
  40505b:	call   4028f0 <rb_dictionary_retrieve@plt>
  405060:	mov    QWORD PTR [rbp-0x8],rax
  405064:	cmp    QWORD PTR [rbp-0x8],0x0
  405069:	je     405091 <memcpy@plt+0x25e1>
  40506b:	mov    rax,QWORD PTR [rbp-0x8]
  40506f:	mov    rdi,rax
  405072:	call   404215 <memcpy@plt+0x1765>
  405077:	mov    rax,QWORD PTR [rbp-0x8]
  40507b:	mov    rdi,rax
  40507e:	call   40480a <memcpy@plt+0x1d5a>
  405083:	mov    rax,QWORD PTR [rbp-0x8]
  405087:	mov    rdi,rax
  40508a:	call   404237 <memcpy@plt+0x1787>
  40508f:	jmp    405092 <memcpy@plt+0x25e2>
  405091:	nop
  405092:	leave  
  405093:	ret    
  405094:	endbr64 
  405098:	push   rbp
  405099:	mov    rbp,rsp
  40509c:	sub    rsp,0x60
  4050a0:	mov    QWORD PTR [rbp-0x58],rdi
  4050a4:	mov    rax,QWORD PTR fs:0x28
  4050ad:	mov    QWORD PTR [rbp-0x8],rax
  4050b1:	xor    eax,eax
  4050b3:	call   4027f0 <rb_current_time@plt>
  4050b8:	mov    QWORD PTR [rbp-0x40],rax
  4050bc:	mov    rax,0x41a270
  4050c3:	mov    rax,QWORD PTR [rax]
  4050c6:	lea    rdx,[rbp-0x20]
  4050ca:	mov    rsi,rdx
  4050cd:	mov    rdi,rax
  4050d0:	call   4027a0 <rb_dictionary_foreach_start@plt>
  4050d5:	jmp    40519a <memcpy@plt+0x26ea>
  4050da:	mov    rax,QWORD PTR [rbp-0x38]
  4050de:	mov    rdi,rax
  4050e1:	call   404215 <memcpy@plt+0x1765>
  4050e6:	mov    rax,0x41a280
  4050ed:	mov    rax,QWORD PTR [rax]
  4050f0:	mov    QWORD PTR [rbp-0x48],rax
  4050f4:	jmp    40516e <memcpy@plt+0x26be>
  4050f6:	mov    rax,QWORD PTR [rbp-0x48]
  4050fa:	mov    rax,QWORD PTR [rax]
  4050fd:	mov    QWORD PTR [rbp-0x30],rax
  405101:	mov    rax,QWORD PTR [rbp-0x30]
  405105:	mov    edx,DWORD PTR [rax+0x18]
  405108:	mov    rax,QWORD PTR [rbp-0x38]
  40510c:	mov    esi,edx
  40510e:	mov    rdi,rax
  405111:	call   4042c4 <memcpy@plt+0x1814>
  405116:	mov    QWORD PTR [rbp-0x28],rax
  40511a:	mov    rax,QWORD PTR [rbp-0x30]
  40511e:	mov    edx,DWORD PTR [rax+0x18]
  405121:	mov    rax,QWORD PTR [rbp-0x38]
  405125:	mov    esi,edx
  405127:	mov    rdi,rax
  40512a:	call   40429c <memcpy@plt+0x17ec>
  40512f:	test   al,al
  405131:	je     405162 <memcpy@plt+0x26b2>
  405133:	mov    rax,QWORD PTR [rbp-0x30]
  405137:	mov    rax,QWORD PTR [rax+0x50]
  40513b:	test   rax,rax
  40513e:	je     405162 <memcpy@plt+0x26b2>
  405140:	cmp    QWORD PTR [rbp-0x28],0x0
  405145:	jle    405162 <memcpy@plt+0x26b2>
  405147:	mov    rax,QWORD PTR [rbp-0x28]
  40514b:	cmp    rax,QWORD PTR [rbp-0x40]
  40514f:	jge    405162 <memcpy@plt+0x26b2>
  405151:	mov    rax,QWORD PTR [rbp-0x30]
  405155:	mov    rax,QWORD PTR [rax+0x50]
  405159:	mov    rdx,QWORD PTR [rbp-0x38]
  40515d:	mov    rdi,rdx
  405160:	call   rax
  405162:	mov    rax,QWORD PTR [rbp-0x48]
  405166:	mov    rax,QWORD PTR [rax+0x10]
  40516a:	mov    QWORD PTR [rbp-0x48],rax
  40516e:	cmp    QWORD PTR [rbp-0x48],0x0
  405173:	jne    4050f6 <memcpy@plt+0x2646>
  405175:	mov    rax,QWORD PTR [rbp-0x38]
  405179:	mov    rdi,rax
  40517c:	call   404237 <memcpy@plt+0x1787>
  405181:	mov    rax,0x41a270
  405188:	mov    rax,QWORD PTR [rax]
  40518b:	lea    rdx,[rbp-0x20]
  40518f:	mov    rsi,rdx
  405192:	mov    rdi,rax
  405195:	call   402730 <rb_dictionary_foreach_next@plt>
  40519a:	mov    rax,0x41a270
  4051a1:	mov    rax,QWORD PTR [rax]
  4051a4:	lea    rdx,[rbp-0x20]
  4051a8:	mov    rsi,rdx
  4051ab:	mov    rdi,rax
  4051ae:	call   402690 <rb_dictionary_foreach_cur@plt>
  4051b3:	mov    QWORD PTR [rbp-0x38],rax
  4051b7:	cmp    QWORD PTR [rbp-0x38],0x0
  4051bc:	jne    4050da <memcpy@plt+0x262a>
  4051c2:	nop
  4051c3:	mov    rax,QWORD PTR [rbp-0x8]
  4051c7:	xor    rax,QWORD PTR fs:0x28
  4051d0:	je     4051d7 <memcpy@plt+0x2727>
  4051d2:	call   402950 <__stack_chk_fail@plt>
  4051d7:	leave  
  4051d8:	ret    
  4051d9:	push   rbp
  4051da:	mov    rbp,rsp
  4051dd:	sub    rsp,0x20
  4051e1:	mov    QWORD PTR [rbp-0x8],rdi
  4051e5:	mov    QWORD PTR [rbp-0x10],rsi
  4051e9:	mov    QWORD PTR [rbp-0x18],rdx
  4051ed:	cmp    QWORD PTR [rbp-0x8],0x0
  4051f2:	jne    405213 <memcpy@plt+0x2763>
  4051f4:	lea    rcx,[rip+0xa555]        # 40f750 <memcpy@plt+0xcca0>
  4051fb:	mov    edx,0x8f
  405200:	lea    rsi,[rip+0xa3d9]        # 40f5e0 <memcpy@plt+0xcb30>
  405207:	lea    rdi,[rip+0xa3ee]        # 40f5fc <memcpy@plt+0xcb4c>
  40520e:	call   402640 <__assert_fail@plt>
  405213:	cmp    QWORD PTR [rbp-0x10],0x0
  405218:	jne    405239 <memcpy@plt+0x2789>
  40521a:	lea    rcx,[rip+0xa52f]        # 40f750 <memcpy@plt+0xcca0>
  405221:	mov    edx,0x90
  405226:	lea    rsi,[rip+0xa3b3]        # 40f5e0 <memcpy@plt+0xcb30>
  40522d:	lea    rdi,[rip+0xa3d5]        # 40f609 <memcpy@plt+0xcb59>
  405234:	call   402640 <__assert_fail@plt>
  405239:	cmp    QWORD PTR [rbp-0x18],0x0
  40523e:	jne    40525f <memcpy@plt+0x27af>
  405240:	lea    rcx,[rip+0xa509]        # 40f750 <memcpy@plt+0xcca0>
  405247:	mov    edx,0x91
  40524c:	lea    rsi,[rip+0xa38d]        # 40f5e0 <memcpy@plt+0xcb30>
  405253:	lea    rdi,[rip+0xa3b9]        # 40f613 <memcpy@plt+0xcb63>
  40525a:	call   402640 <__assert_fail@plt>
  40525f:	mov    rax,QWORD PTR [rbp-0x10]
  405263:	mov    rdx,QWORD PTR [rbp-0x8]
  405267:	mov    QWORD PTR [rax],rdx
  40526a:	mov    rax,QWORD PTR [rbp-0x10]
  40526e:	mov    QWORD PTR [rax+0x8],0x0
  405276:	mov    rax,QWORD PTR [rbp-0x18]
  40527a:	mov    rdx,QWORD PTR [rax]
  40527d:	mov    rax,QWORD PTR [rbp-0x10]
  405281:	mov    QWORD PTR [rax+0x10],rdx
  405285:	mov    rax,QWORD PTR [rbp-0x18]
  405289:	mov    rax,QWORD PTR [rax]
  40528c:	test   rax,rax
  40528f:	je     4052a2 <memcpy@plt+0x27f2>
  405291:	mov    rax,QWORD PTR [rbp-0x18]
  405295:	mov    rax,QWORD PTR [rax]
  405298:	mov    rdx,QWORD PTR [rbp-0x10]
  40529c:	mov    QWORD PTR [rax+0x8],rdx
  4052a0:	jmp    4052bb <memcpy@plt+0x280b>
  4052a2:	mov    rax,QWORD PTR [rbp-0x18]
  4052a6:	mov    rax,QWORD PTR [rax+0x8]
  4052aa:	test   rax,rax
  4052ad:	jne    4052bb <memcpy@plt+0x280b>
  4052af:	mov    rax,QWORD PTR [rbp-0x18]
  4052b3:	mov    rdx,QWORD PTR [rbp-0x10]
  4052b7:	mov    QWORD PTR [rax+0x8],rdx
  4052bb:	mov    rax,QWORD PTR [rbp-0x18]
  4052bf:	mov    rdx,QWORD PTR [rbp-0x10]
  4052c3:	mov    QWORD PTR [rax],rdx
  4052c6:	mov    rax,QWORD PTR [rbp-0x18]
  4052ca:	mov    rax,QWORD PTR [rax+0x10]
  4052ce:	lea    rdx,[rax+0x1]
  4052d2:	mov    rax,QWORD PTR [rbp-0x18]
  4052d6:	mov    QWORD PTR [rax+0x10],rdx
  4052da:	nop
  4052db:	leave  
  4052dc:	ret    
  4052dd:	push   rbp
  4052de:	mov    rbp,rsp
  4052e1:	sub    rsp,0x10
  4052e5:	mov    QWORD PTR [rbp-0x8],rdi
  4052e9:	mov    QWORD PTR [rbp-0x10],rsi
  4052ed:	cmp    QWORD PTR [rbp-0x8],0x0
  4052f2:	jne    405313 <memcpy@plt+0x2863>
  4052f4:	lea    rcx,[rip+0xa445]        # 40f740 <memcpy@plt+0xcc90>
  4052fb:	mov    edx,0xeb
  405300:	lea    rsi,[rip+0xa2d9]        # 40f5e0 <memcpy@plt+0xcb30>
  405307:	lea    rdi,[rip+0xa2fb]        # 40f609 <memcpy@plt+0xcb59>
  40530e:	call   402640 <__assert_fail@plt>
  405313:	cmp    QWORD PTR [rbp-0x10],0x0
  405318:	jne    405339 <memcpy@plt+0x2889>
  40531a:	lea    rcx,[rip+0xa41f]        # 40f740 <memcpy@plt+0xcc90>
  405321:	mov    edx,0xec
  405326:	lea    rsi,[rip+0xa2b3]        # 40f5e0 <memcpy@plt+0xcb30>
  40532d:	lea    rdi,[rip+0xa2df]        # 40f613 <memcpy@plt+0xcb63>
  405334:	call   402640 <__assert_fail@plt>
  405339:	mov    rax,QWORD PTR [rbp-0x8]
  40533d:	mov    rax,QWORD PTR [rax+0x10]
  405341:	test   rax,rax
  405344:	je     40535c <memcpy@plt+0x28ac>
  405346:	mov    rax,QWORD PTR [rbp-0x8]
  40534a:	mov    rax,QWORD PTR [rax+0x10]
  40534e:	mov    rdx,QWORD PTR [rbp-0x8]
  405352:	mov    rdx,QWORD PTR [rdx+0x8]
  405356:	mov    QWORD PTR [rax+0x8],rdx
  40535a:	jmp    40536c <memcpy@plt+0x28bc>
  40535c:	mov    rax,QWORD PTR [rbp-0x8]
  405360:	mov    rdx,QWORD PTR [rax+0x8]
  405364:	mov    rax,QWORD PTR [rbp-0x10]
  405368:	mov    QWORD PTR [rax+0x8],rdx
  40536c:	mov    rax,QWORD PTR [rbp-0x8]
  405370:	mov    rax,QWORD PTR [rax+0x8]
  405374:	test   rax,rax
  405377:	je     40538f <memcpy@plt+0x28df>
  405379:	mov    rax,QWORD PTR [rbp-0x8]
  40537d:	mov    rax,QWORD PTR [rax+0x8]
  405381:	mov    rdx,QWORD PTR [rbp-0x8]
  405385:	mov    rdx,QWORD PTR [rdx+0x10]
  405389:	mov    QWORD PTR [rax+0x10],rdx
  40538d:	jmp    40539e <memcpy@plt+0x28ee>
  40538f:	mov    rax,QWORD PTR [rbp-0x8]
  405393:	mov    rdx,QWORD PTR [rax+0x10]
  405397:	mov    rax,QWORD PTR [rbp-0x10]
  40539b:	mov    QWORD PTR [rax],rdx
  40539e:	mov    rax,QWORD PTR [rbp-0x8]
  4053a2:	mov    QWORD PTR [rax+0x8],0x0
  4053aa:	mov    rax,QWORD PTR [rbp-0x8]
  4053ae:	mov    rdx,QWORD PTR [rax+0x8]
  4053b2:	mov    rax,QWORD PTR [rbp-0x8]
  4053b6:	mov    QWORD PTR [rax+0x10],rdx
  4053ba:	mov    rax,QWORD PTR [rbp-0x10]
  4053be:	mov    rax,QWORD PTR [rax+0x10]
  4053c2:	lea    rdx,[rax-0x1]
  4053c6:	mov    rax,QWORD PTR [rbp-0x10]
  4053ca:	mov    QWORD PTR [rax+0x10],rdx
  4053ce:	nop
  4053cf:	leave  
  4053d0:	ret    
  4053d1:	push   rbp
  4053d2:	mov    rbp,rsp
  4053d5:	sub    rsp,0x20
  4053d9:	mov    QWORD PTR [rbp-0x18],rdi
  4053dd:	mov    rax,QWORD PTR [rbp-0x18]
  4053e1:	mov    rsi,rax
  4053e4:	mov    edi,0x1
  4053e9:	call   4029e0 <calloc@plt>
  4053ee:	mov    QWORD PTR [rbp-0x8],rax
  4053f2:	cmp    QWORD PTR [rbp-0x8],0x0
  4053f7:	sete   al
  4053fa:	movzx  eax,al
  4053fd:	test   rax,rax
  405400:	je     405407 <memcpy@plt+0x2957>
  405402:	call   402900 <rb_outofmemory@plt>
  405407:	mov    rax,QWORD PTR [rbp-0x8]
  40540b:	leave  
  40540c:	ret    
  40540d:	push   rbp
  40540e:	mov    rbp,rsp
  405411:	sub    rsp,0x20
  405415:	mov    QWORD PTR [rbp-0x18],rdi
  405419:	mov    rax,QWORD PTR [rbp-0x18]
  40541d:	mov    rdi,rax
  405420:	call   402760 <strlen@plt>
  405425:	inc    rax
  405428:	mov    rdi,rax
  40542b:	call   4026d0 <malloc@plt>
  405430:	mov    QWORD PTR [rbp-0x8],rax
  405434:	cmp    QWORD PTR [rbp-0x8],0x0
  405439:	sete   al
  40543c:	movzx  eax,al
  40543f:	test   rax,rax
  405442:	je     405449 <memcpy@plt+0x2999>
  405444:	call   402900 <rb_outofmemory@plt>
  405449:	mov    rdx,QWORD PTR [rbp-0x18]
  40544d:	mov    rax,QWORD PTR [rbp-0x8]
  405451:	mov    rsi,rdx
  405454:	mov    rdi,rax
  405457:	call   4029a0 <strcpy@plt>
  40545c:	mov    rax,QWORD PTR [rbp-0x8]
  405460:	leave  
  405461:	ret    
  405462:	push   rbp
  405463:	mov    rbp,rsp
  405466:	sub    rsp,0x10
  40546a:	mov    QWORD PTR [rbp-0x8],rdi
  40546e:	cmp    QWORD PTR [rbp-0x8],0x0
  405473:	setne  al
  405476:	movzx  eax,al
  405479:	test   rax,rax
  40547c:	je     40548a <memcpy@plt+0x29da>
  40547e:	mov    rax,QWORD PTR [rbp-0x8]
  405482:	mov    rdi,rax
  405485:	call   402750 <free@plt>
  40548a:	nop
  40548b:	leave  
  40548c:	ret    
  40548d:	endbr64 
  405491:	push   rbp
  405492:	mov    rbp,rsp
  405495:	sub    rsp,0x40
  405499:	mov    QWORD PTR [rbp-0x38],rdi
  40549d:	mov    rax,QWORD PTR [rbp-0x38]
  4054a1:	mov    QWORD PTR [rbp-0x28],rax
  4054a5:	mov    rax,QWORD PTR [rbp-0x38]
  4054a9:	mov    QWORD PTR [rbp-0x20],rax
  4054ad:	mov    DWORD PTR [rbp-0x2c],0x0
  4054b4:	jmp    4055d3 <memcpy@plt+0x2b23>
  4054b9:	mov    eax,DWORD PTR [rbp-0x2c]
  4054bc:	cdqe   
  4054be:	shl    rax,0x7
  4054c2:	mov    rdx,rax
  4054c5:	mov    rax,0x41a3c0
  4054cc:	add    rax,rdx
  4054cf:	mov    QWORD PTR [rbp-0x18],rax
  4054d3:	mov    rax,QWORD PTR [rbp-0x18]
  4054d7:	mov    QWORD PTR [rbp-0x10],rax
  4054db:	mov    rax,QWORD PTR [rbp-0x18]
  4054df:	mov    QWORD PTR [rbp-0x8],rax
  4054e3:	mov    rax,QWORD PTR [rbp-0x18]
  4054e7:	movzx  eax,WORD PTR [rax]
  4054ea:	movzx  eax,ax
  4054ed:	cmp    eax,0x2
  4054f0:	je     40557d <memcpy@plt+0x2acd>
  4054f6:	cmp    eax,0xa
  4054f9:	jne    4055c9 <memcpy@plt+0x2b19>
  4054ff:	mov    rax,QWORD PTR [rbp-0x18]
  405503:	movzx  edx,WORD PTR [rax]
  405506:	mov    rax,QWORD PTR [rbp-0x38]
  40550a:	movzx  eax,WORD PTR [rax]
  40550d:	cmp    dx,ax
  405510:	jne    4055cc <memcpy@plt+0x2b1c>
  405516:	mov    rax,QWORD PTR [rbp-0x10]
  40551a:	movzx  edx,WORD PTR [rax+0x2]
  40551e:	mov    rax,QWORD PTR [rbp-0x28]
  405522:	movzx  eax,WORD PTR [rax+0x2]
  405526:	cmp    dx,ax
  405529:	jne    4055cc <memcpy@plt+0x2b1c>
  40552f:	mov    rax,QWORD PTR [rbp-0x28]
  405533:	lea    rcx,[rax+0x8]
  405537:	mov    rax,QWORD PTR [rbp-0x10]
  40553b:	add    rax,0x8
  40553f:	mov    edx,0x10
  405544:	mov    rsi,rcx
  405547:	mov    rdi,rax
  40554a:	call   4029d0 <memcmp@plt>
  40554f:	test   eax,eax
  405551:	je     405576 <memcpy@plt+0x2ac6>
  405553:	mov    rax,QWORD PTR [rbp-0x10]
  405557:	lea    rcx,[rax+0x8]
  40555b:	mov    edx,0x10
  405560:	mov    rax,QWORD PTR [rip+0xea89]        # 413ff0 <memcpy@plt+0x11540>
  405567:	mov    rsi,rax
  40556a:	mov    rdi,rcx
  40556d:	call   4029d0 <memcmp@plt>
  405572:	test   eax,eax
  405574:	jne    4055cc <memcpy@plt+0x2b1c>
  405576:	mov    eax,0x1
  40557b:	jmp    4055ea <memcpy@plt+0x2b3a>
  40557d:	mov    rax,QWORD PTR [rbp-0x18]
  405581:	movzx  edx,WORD PTR [rax]
  405584:	mov    rax,QWORD PTR [rbp-0x38]
  405588:	movzx  eax,WORD PTR [rax]
  40558b:	cmp    dx,ax
  40558e:	jne    4055cf <memcpy@plt+0x2b1f>
  405590:	mov    rax,QWORD PTR [rbp-0x8]
  405594:	movzx  edx,WORD PTR [rax+0x2]
  405598:	mov    rax,QWORD PTR [rbp-0x20]
  40559c:	movzx  eax,WORD PTR [rax+0x2]
  4055a0:	cmp    dx,ax
  4055a3:	jne    4055cf <memcpy@plt+0x2b1f>
  4055a5:	mov    rax,QWORD PTR [rbp-0x8]
  4055a9:	mov    eax,DWORD PTR [rax+0x4]
  4055ac:	test   eax,eax
  4055ae:	je     4055c2 <memcpy@plt+0x2b12>
  4055b0:	mov    rax,QWORD PTR [rbp-0x8]
  4055b4:	mov    edx,DWORD PTR [rax+0x4]
  4055b7:	mov    rax,QWORD PTR [rbp-0x20]
  4055bb:	mov    eax,DWORD PTR [rax+0x4]
  4055be:	cmp    edx,eax
  4055c0:	jne    4055cf <memcpy@plt+0x2b1f>
  4055c2:	mov    eax,0x1
  4055c7:	jmp    4055ea <memcpy@plt+0x2b3a>
  4055c9:	nop
  4055ca:	jmp    4055d0 <memcpy@plt+0x2b20>
  4055cc:	nop
  4055cd:	jmp    4055d0 <memcpy@plt+0x2b20>
  4055cf:	nop
  4055d0:	inc    DWORD PTR [rbp-0x2c]
  4055d3:	mov    rax,0x41a094
  4055da:	mov    eax,DWORD PTR [rax]
  4055dc:	cmp    DWORD PTR [rbp-0x2c],eax
  4055df:	jl     4054b9 <memcpy@plt+0x2a09>
  4055e5:	mov    eax,0x0
  4055ea:	leave  
  4055eb:	ret    
  4055ec:	endbr64 
  4055f0:	push   rbp
  4055f1:	mov    rbp,rsp
  4055f4:	sub    rsp,0x40
  4055f8:	mov    QWORD PTR [rbp-0x38],rdi
  4055fc:	mov    QWORD PTR [rbp-0x18],0x0
  405604:	mov    QWORD PTR [rbp-0x10],0x0
  40560c:	mov    rax,QWORD PTR [rip+0x14a1d]        # 41a030 <memcpy@plt+0x17580>
  405613:	mov    QWORD PTR [rbp-0x28],rax
  405617:	cmp    QWORD PTR [rbp-0x28],0x0
  40561c:	je     405628 <memcpy@plt+0x2b78>
  40561e:	mov    rax,QWORD PTR [rbp-0x28]
  405622:	mov    rax,QWORD PTR [rax+0x10]
  405626:	jmp    40562d <memcpy@plt+0x2b7d>
  405628:	mov    eax,0x0
  40562d:	mov    QWORD PTR [rbp-0x20],rax
  405631:	jmp    40570e <memcpy@plt+0x2c5e>
  405636:	mov    rax,QWORD PTR [rbp-0x28]
  40563a:	mov    rax,QWORD PTR [rax]
  40563d:	mov    QWORD PTR [rbp-0x8],rax
  405641:	mov    rax,QWORD PTR [rbp-0x8]
  405645:	mov    rdx,QWORD PTR [rax+0x130]
  40564c:	mov    rax,QWORD PTR [rbp-0x8]
  405650:	mov    rax,QWORD PTR [rax+0x138]
  405657:	add    rax,rdx
  40565a:	mov    QWORD PTR [rbp-0x10],rax
  40565e:	mov    rax,QWORD PTR [rbp-0x38]
  405662:	cmp    rax,QWORD PTR [rbp-0x10]
  405666:	jl     4056d3 <memcpy@plt+0x2c23>
  405668:	mov    rax,QWORD PTR [rbp-0x8]
  40566c:	mov    eax,DWORD PTR [rax+0x140]
  405672:	movsxd rdx,eax
  405675:	lea    rcx,[rdx*4+0x0]
  40567d:	lea    rdx,[rip+0x149dc]        # 41a060 <memcpy@plt+0x175b0>
  405684:	mov    edx,DWORD PTR [rcx+rdx*1]
  405687:	lea    ecx,[rdx+0x1]
  40568a:	cdqe   
  40568c:	lea    rdx,[rax*4+0x0]
  405694:	lea    rax,[rip+0x149c5]        # 41a060 <memcpy@plt+0x175b0>
  40569b:	mov    DWORD PTR [rdx+rax*1],ecx
  40569e:	mov    rax,QWORD PTR [rbp-0x8]
  4056a2:	mov    rdx,QWORD PTR [rbp-0x38]
  4056a6:	mov    QWORD PTR [rax+0x130],rdx
  4056ad:	mov    rax,QWORD PTR [rbp-0x8]
  4056b1:	mov    rax,QWORD PTR [rax+0x138]
  4056b8:	lea    rdx,[rax+rax*1]
  4056bc:	mov    rax,QWORD PTR [rbp-0x8]
  4056c0:	mov    QWORD PTR [rax+0x138],rdx
  4056c7:	mov    rax,QWORD PTR [rbp-0x8]
  4056cb:	mov    rdi,rax
  4056ce:	call   406567 <memcpy@plt+0x3ab7>
  4056d3:	cmp    QWORD PTR [rbp-0x18],0x0
  4056d8:	je     4056e4 <memcpy@plt+0x2c34>
  4056da:	mov    rax,QWORD PTR [rbp-0x10]
  4056de:	cmp    rax,QWORD PTR [rbp-0x18]
  4056e2:	jge    4056ec <memcpy@plt+0x2c3c>
  4056e4:	mov    rax,QWORD PTR [rbp-0x10]
  4056e8:	mov    QWORD PTR [rbp-0x18],rax
  4056ec:	mov    rax,QWORD PTR [rbp-0x20]
  4056f0:	mov    QWORD PTR [rbp-0x28],rax
  4056f4:	cmp    QWORD PTR [rbp-0x28],0x0
  4056f9:	je     405705 <memcpy@plt+0x2c55>
  4056fb:	mov    rax,QWORD PTR [rbp-0x28]
  4056ff:	mov    rax,QWORD PTR [rax+0x10]
  405703:	jmp    40570a <memcpy@plt+0x2c5a>
  405705:	mov    eax,0x0
  40570a:	mov    QWORD PTR [rbp-0x20],rax
  40570e:	cmp    QWORD PTR [rbp-0x28],0x0
  405713:	jne    405636 <memcpy@plt+0x2b86>
  405719:	mov    rax,QWORD PTR [rbp-0x18]
  40571d:	cmp    rax,QWORD PTR [rbp-0x38]
  405721:	jg     40572f <memcpy@plt+0x2c7f>
  405723:	mov    rax,QWORD PTR [rbp-0x38]
  405727:	add    rax,0x258
  40572d:	jmp    405733 <memcpy@plt+0x2c83>
  40572f:	mov    rax,QWORD PTR [rbp-0x18]
  405733:	leave  
  405734:	ret    
  405735:	endbr64 
  405739:	push   rbp
  40573a:	mov    rbp,rsp
  40573d:	sub    rsp,0x10
  405741:	mov    QWORD PTR [rbp-0x8],rdi
  405745:	call   4027f0 <rb_current_time@plt>
  40574a:	mov    rdi,rax
  40574d:	call   4055ec <memcpy@plt+0x2b3c>
  405752:	nop
  405753:	leave  
  405754:	ret    
  405755:	endbr64 
  405759:	push   rbp
  40575a:	mov    rbp,rsp
  40575d:	sub    rsp,0x10
  405761:	call   4071db <memcpy@plt+0x472b>
  405766:	mov    DWORD PTR [rbp-0x4],0x0
  40576d:	jmp    40578d <memcpy@plt+0x2cdd>
  40576f:	mov    eax,DWORD PTR [rbp-0x4]
  405772:	cdqe   
  405774:	lea    rdx,[rax*4+0x0]
  40577c:	lea    rax,[rip+0x148dd]        # 41a060 <memcpy@plt+0x175b0>
  405783:	mov    DWORD PTR [rdx+rax*1],0x0
  40578a:	inc    DWORD PTR [rbp-0x4]
  40578d:	mov    rax,0x41a094
  405794:	mov    eax,DWORD PTR [rax]
  405796:	cmp    DWORD PTR [rbp-0x4],eax
  405799:	jl     40576f <memcpy@plt+0x2cbf>
  40579b:	mov    rax,QWORD PTR [rip+0x1487e]        # 41a020 <memcpy@plt+0x17570>
  4057a2:	test   rax,rax
  4057a5:	jne    405826 <memcpy@plt+0x2d76>
  4057a7:	mov    rax,0x41a3c0
  4057ae:	movzx  eax,WORD PTR [rax]
  4057b1:	movzx  eax,ax
  4057b4:	lea    rcx,[rip+0x9e65]        # 40f620 <memcpy@plt+0xcb70>
  4057bb:	mov    edx,0x0
  4057c0:	mov    esi,0x2
  4057c5:	mov    edi,eax
  4057c7:	call   402660 <rb_socket@plt>
  4057cc:	mov    QWORD PTR [rip+0x1484d],rax        # 41a020 <memcpy@plt+0x17570>
  4057d3:	mov    rax,QWORD PTR [rip+0x14846]        # 41a020 <memcpy@plt+0x17570>
  4057da:	test   rax,rax
  4057dd:	je     405825 <memcpy@plt+0x2d75>
  4057df:	mov    rax,QWORD PTR [rip+0x1483a]        # 41a020 <memcpy@plt+0x17570>
  4057e6:	mov    ecx,0x0
  4057eb:	lea    rdx,[rip+0x18ea]        # 4070dc <memcpy@plt+0x462c>
  4057f2:	mov    esi,0x1
  4057f7:	mov    rdi,rax
  4057fa:	call   402600 <rb_setselect@plt>
  4057ff:	mov    ecx,0x1
  405804:	mov    edx,0x0
  405809:	lea    rsi,[rip+0xffffffffffffff25]        # 405735 <memcpy@plt+0x2c85>
  405810:	lea    rdi,[rip+0x9e1d]        # 40f634 <memcpy@plt+0xcb84>
  405817:	call   402a20 <rb_event_add@plt>
  40581c:	mov    QWORD PTR [rip+0x14865],rax        # 41a088 <memcpy@plt+0x175d8>
  405823:	jmp    405826 <memcpy@plt+0x2d76>
  405825:	nop
  405826:	leave  
  405827:	ret    
  405828:	endbr64 
  40582c:	push   rbp
  40582d:	mov    rbp,rsp
  405830:	call   405755 <memcpy@plt+0x2ca5>
  405835:	nop
  405836:	pop    rbp
  405837:	ret    
  405838:	endbr64 
  40583c:	push   rbp
  40583d:	mov    rbp,rsp
  405840:	mov    rax,QWORD PTR [rip+0x147d9]        # 41a020 <memcpy@plt+0x17570>
  405847:	mov    rdi,rax
  40584a:	call   402850 <rb_close@plt>
  40584f:	mov    QWORD PTR [rip+0x147c6],0x0        # 41a020 <memcpy@plt+0x17570>
  40585a:	mov    rax,QWORD PTR [rip+0x14827]        # 41a088 <memcpy@plt+0x175d8>
  405861:	mov    rdi,rax
  405864:	call   4025f0 <rb_event_delete@plt>
  405869:	call   405755 <memcpy@plt+0x2ca5>
  40586e:	nop
  40586f:	pop    rbp
  405870:	ret    
  405871:	endbr64 
  405875:	push   rbp
  405876:	mov    rbp,rsp
  405879:	sub    rsp,0x20
  40587d:	mov    QWORD PTR [rbp-0x18],rdi
  405881:	mov    QWORD PTR [rbp-0x20],rsi
  405885:	mov    rax,QWORD PTR [rbp-0x18]
  405889:	mov    esi,0x2e
  40588e:	mov    rdi,rax
  405891:	call   4028c0 <strchr@plt>
  405896:	test   rax,rax
  405899:	jne    40590f <memcpy@plt+0x2e5f>
  40589b:	mov    rax,0x41a2c0
  4058a2:	movzx  eax,BYTE PTR [rax]
  4058a5:	test   al,al
  4058a7:	je     40590f <memcpy@plt+0x2e5f>
  4058a9:	mov    rax,QWORD PTR [rbp-0x18]
  4058ad:	mov    rdi,rax
  4058b0:	call   402760 <strlen@plt>
  4058b5:	mov    QWORD PTR [rbp-0x8],rax
  4058b9:	mov    rax,0x41a2c0
  4058c0:	mov    rdi,rax
  4058c3:	call   402760 <strlen@plt>
  4058c8:	mov    rdx,rax
  4058cb:	mov    rax,QWORD PTR [rbp-0x8]
  4058cf:	add    rax,rdx
  4058d2:	add    rax,0x2
  4058d6:	cmp    QWORD PTR [rbp-0x20],rax
  4058da:	jbe    40590f <memcpy@plt+0x2e5f>
  4058dc:	mov    rax,QWORD PTR [rbp-0x8]
  4058e0:	lea    rdx,[rax+0x1]
  4058e4:	mov    QWORD PTR [rbp-0x8],rdx
  4058e8:	mov    rdx,QWORD PTR [rbp-0x18]
  4058ec:	add    rax,rdx
  4058ef:	mov    BYTE PTR [rax],0x2e
  4058f2:	mov    rdx,QWORD PTR [rbp-0x18]
  4058f6:	mov    rax,QWORD PTR [rbp-0x8]
  4058fa:	add    rdx,rax
  4058fd:	mov    rax,0x41a2c0
  405904:	mov    rsi,rax
  405907:	mov    rdi,rdx
  40590a:	call   4029a0 <strcpy@plt>
  40590f:	nop
  405910:	leave  
  405911:	ret    
  405912:	endbr64 
  405916:	push   rbp
  405917:	mov    rbp,rsp
  40591a:	sub    rsp,0x10
  40591e:	mov    QWORD PTR [rbp-0x8],rdi
  405922:	mov    rax,QWORD PTR [rbp-0x8]
  405926:	lea    rsi,[rip+0x14703]        # 41a030 <memcpy@plt+0x17580>
  40592d:	mov    rdi,rax
  405930:	call   4052dd <memcpy@plt+0x282d>
  405935:	mov    rax,QWORD PTR [rbp-0x8]
  405939:	mov    rax,QWORD PTR [rax+0x1c8]
  405940:	mov    rdi,rax
  405943:	call   405462 <memcpy@plt+0x29b2>
  405948:	mov    rax,QWORD PTR [rbp-0x8]
  40594c:	mov    rdi,rax
  40594f:	call   405462 <memcpy@plt+0x29b2>
  405954:	nop
  405955:	leave  
  405956:	ret    
  405957:	endbr64 
  40595b:	push   rbp
  40595c:	mov    rbp,rsp
  40595f:	sub    rsp,0x20
  405963:	mov    QWORD PTR [rbp-0x18],rdi
  405967:	mov    edi,0x1d8
  40596c:	call   4053d1 <memcpy@plt+0x2921>
  405971:	mov    QWORD PTR [rbp-0x8],rax
  405975:	call   4027f0 <rb_current_time@plt>
  40597a:	mov    rdx,rax
  40597d:	mov    rax,QWORD PTR [rbp-0x8]
  405981:	mov    QWORD PTR [rax+0x130],rdx
  405988:	mov    rax,QWORD PTR [rbp-0x8]
  40598c:	mov    BYTE PTR [rax+0x129],0x3
  405993:	mov    rax,QWORD PTR [rbp-0x8]
  405997:	mov    QWORD PTR [rax+0x138],0x4
  4059a2:	mov    rax,QWORD PTR [rbp-0x8]
  4059a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4059aa:	mov    QWORD PTR [rax+0x1d0],rdx
  4059b1:	call   405cb4 <memcpy@plt+0x3204>
  4059b6:	movzx  edx,ax
  4059b9:	mov    rax,QWORD PTR [rbp-0x8]
  4059bd:	mov    DWORD PTR [rax+0x18],edx
  4059c0:	mov    rcx,QWORD PTR [rbp-0x8]
  4059c4:	mov    rax,QWORD PTR [rbp-0x8]
  4059c8:	lea    rdx,[rip+0x14661]        # 41a030 <memcpy@plt+0x17580>
  4059cf:	mov    rsi,rcx
  4059d2:	mov    rdi,rax
  4059d5:	call   4051d9 <memcpy@plt+0x2729>
  4059da:	mov    rax,QWORD PTR [rbp-0x8]
  4059de:	leave  
  4059df:	ret    
  4059e0:	endbr64 
  4059e4:	push   rbp
  4059e5:	mov    rbp,rsp
  4059e8:	mov    DWORD PTR [rbp-0x4],edi
  4059eb:	cmp    DWORD PTR [rbp-0x4],0x2
  4059ef:	je     405a14 <memcpy@plt+0x2f64>
  4059f1:	cmp    DWORD PTR [rbp-0x4],0x2
  4059f5:	jg     4059ff <memcpy@plt+0x2f4f>
  4059f7:	cmp    DWORD PTR [rbp-0x4],0x1
  4059fb:	je     405a0d <memcpy@plt+0x2f5d>
  4059fd:	jmp    405a29 <memcpy@plt+0x2f79>
  4059ff:	cmp    DWORD PTR [rbp-0x4],0x3
  405a03:	je     405a1b <memcpy@plt+0x2f6b>
  405a05:	cmp    DWORD PTR [rbp-0x4],0x4
  405a09:	je     405a22 <memcpy@plt+0x2f72>
  405a0b:	jmp    405a29 <memcpy@plt+0x2f79>
  405a0d:	mov    eax,0x3
  405a12:	jmp    405a2e <memcpy@plt+0x2f7e>
  405a14:	mov    eax,0x9
  405a19:	jmp    405a2e <memcpy@plt+0x2f7e>
  405a1b:	mov    eax,0x1b
  405a20:	jmp    405a2e <memcpy@plt+0x2f7e>
  405a22:	mov    eax,0x51
  405a27:	jmp    405a2e <memcpy@plt+0x2f7e>
  405a29:	mov    eax,0xf3
  405a2e:	pop    rbp
  405a2f:	ret    
  405a30:	endbr64 
  405a34:	push   rbp
  405a35:	mov    rbp,rsp
  405a38:	push   r13
  405a3a:	push   r12
  405a3c:	push   rbx
  405a3d:	sub    rsp,0x28
  405a41:	mov    QWORD PTR [rbp-0x38],rdi
  405a45:	mov    DWORD PTR [rbp-0x3c],esi
  405a48:	mov    DWORD PTR [rbp-0x40],edx
  405a4b:	mov    eax,DWORD PTR [rip+0x1463f]        # 41a090 <memcpy@plt+0x175e0>
  405a51:	inc    eax
  405a53:	mov    DWORD PTR [rip+0x14637],eax        # 41a090 <memcpy@plt+0x175e0>
  405a59:	mov    DWORD PTR [rbp-0x28],0x0
  405a60:	jmp    405b5f <memcpy@plt+0x30af>
  405a65:	mov    edx,DWORD PTR [rbp-0x28]
  405a68:	mov    eax,DWORD PTR [rbp-0x40]
  405a6b:	add    eax,edx
  405a6d:	lea    edx,[rax-0x1]
  405a70:	mov    rax,0x41a094
  405a77:	mov    ecx,DWORD PTR [rax]
  405a79:	mov    eax,edx
  405a7b:	cdq    
  405a7c:	idiv   ecx
  405a7e:	mov    DWORD PTR [rbp-0x24],edx
  405a81:	mov    eax,DWORD PTR [rbp-0x24]
  405a84:	cdqe   
  405a86:	lea    rdx,[rax*4+0x0]
  405a8e:	lea    rax,[rip+0x145cb]        # 41a060 <memcpy@plt+0x175b0>
  405a95:	mov    eax,DWORD PTR [rdx+rax*1]
  405a98:	test   eax,eax
  405a9a:	je     405ad1 <memcpy@plt+0x3021>
  405a9c:	mov    ebx,DWORD PTR [rip+0x145ee]        # 41a090 <memcpy@plt+0x175e0>
  405aa2:	mov    eax,DWORD PTR [rbp-0x24]
  405aa5:	cdqe   
  405aa7:	lea    rdx,[rax*4+0x0]
  405aaf:	lea    rax,[rip+0x145aa]        # 41a060 <memcpy@plt+0x175b0>
  405ab6:	mov    eax,DWORD PTR [rdx+rax*1]
  405ab9:	mov    edi,eax
  405abb:	call   4059e0 <memcpy@plt+0x2f30>
  405ac0:	mov    ecx,eax
  405ac2:	mov    eax,ebx
  405ac4:	cdq    
  405ac5:	idiv   ecx
  405ac7:	mov    eax,edx
  405ac9:	test   eax,eax
  405acb:	jne    405b5b <memcpy@plt+0x30ab>
  405ad1:	mov    eax,DWORD PTR [rbp-0x24]
  405ad4:	cdqe   
  405ad6:	shl    rax,0x7
  405ada:	mov    rdx,rax
  405add:	mov    rax,0x41a3c0
  405ae4:	add    rax,rdx
  405ae7:	movzx  eax,WORD PTR [rax]
  405aea:	cmp    ax,0x2
  405aee:	jne    405af8 <memcpy@plt+0x3048>
  405af0:	mov    r13d,0x10
  405af6:	jmp    405afe <memcpy@plt+0x304e>
  405af8:	mov    r13d,0x1c
  405afe:	mov    eax,DWORD PTR [rbp-0x24]
  405b01:	cdqe   
  405b03:	shl    rax,0x7
  405b07:	mov    rdx,rax
  405b0a:	mov    rax,0x41a3c0
  405b11:	lea    r12,[rdx+rax*1]
  405b15:	mov    eax,DWORD PTR [rbp-0x3c]
  405b18:	movsxd rbx,eax
  405b1b:	mov    rax,QWORD PTR [rip+0x144fe]        # 41a020 <memcpy@plt+0x17570>
  405b22:	mov    rdi,rax
  405b25:	call   402610 <rb_get_fd@plt>
  405b2a:	mov    edi,eax
  405b2c:	mov    rax,QWORD PTR [rbp-0x38]
  405b30:	mov    r9d,r13d
  405b33:	mov    r8,r12
  405b36:	mov    ecx,0x0
  405b3b:	mov    rdx,rbx
  405b3e:	mov    rsi,rax
  405b41:	call   402a70 <sendto@plt>
  405b46:	mov    rdx,rax
  405b49:	mov    eax,DWORD PTR [rbp-0x3c]
  405b4c:	cdqe   
  405b4e:	cmp    rdx,rax
  405b51:	jne    405b5c <memcpy@plt+0x30ac>
  405b53:	mov    eax,DWORD PTR [rbp-0x24]
  405b56:	jmp    405c5a <memcpy@plt+0x31aa>
  405b5b:	nop
  405b5c:	inc    DWORD PTR [rbp-0x28]
  405b5f:	mov    rax,0x41a094
  405b66:	mov    eax,DWORD PTR [rax]
  405b68:	cmp    DWORD PTR [rbp-0x28],eax
  405b6b:	jl     405a65 <memcpy@plt+0x2fb5>
  405b71:	mov    DWORD PTR [rbp-0x28],0x0
  405b78:	jmp    405c43 <memcpy@plt+0x3193>
  405b7d:	mov    edx,DWORD PTR [rbp-0x28]
  405b80:	mov    eax,DWORD PTR [rbp-0x40]
  405b83:	add    eax,edx
  405b85:	lea    edx,[rax-0x1]
  405b88:	mov    rax,0x41a094
  405b8f:	mov    ecx,DWORD PTR [rax]
  405b91:	mov    eax,edx
  405b93:	cdq    
  405b94:	idiv   ecx
  405b96:	mov    DWORD PTR [rbp-0x24],edx
  405b99:	mov    eax,DWORD PTR [rbp-0x24]
  405b9c:	cdqe   
  405b9e:	lea    rdx,[rax*4+0x0]
  405ba6:	lea    rax,[rip+0x144b3]        # 41a060 <memcpy@plt+0x175b0>
  405bad:	mov    eax,DWORD PTR [rdx+rax*1]
  405bb0:	test   eax,eax
  405bb2:	je     405c3f <memcpy@plt+0x318f>
  405bb8:	mov    eax,DWORD PTR [rbp-0x24]
  405bbb:	cdqe   
  405bbd:	shl    rax,0x7
  405bc1:	mov    rdx,rax
  405bc4:	mov    rax,0x41a3c0
  405bcb:	add    rax,rdx
  405bce:	movzx  eax,WORD PTR [rax]
  405bd1:	cmp    ax,0x2
  405bd5:	jne    405bdf <memcpy@plt+0x312f>
  405bd7:	mov    r13d,0x10
  405bdd:	jmp    405be5 <memcpy@plt+0x3135>
  405bdf:	mov    r13d,0x1c
  405be5:	mov    eax,DWORD PTR [rbp-0x24]
  405be8:	cdqe   
  405bea:	shl    rax,0x7
  405bee:	mov    rdx,rax
  405bf1:	mov    rax,0x41a3c0
  405bf8:	lea    r12,[rdx+rax*1]
  405bfc:	mov    eax,DWORD PTR [rbp-0x3c]
  405bff:	movsxd rbx,eax
  405c02:	mov    rax,QWORD PTR [rip+0x14417]        # 41a020 <memcpy@plt+0x17570>
  405c09:	mov    rdi,rax
  405c0c:	call   402610 <rb_get_fd@plt>
  405c11:	mov    edi,eax
  405c13:	mov    rax,QWORD PTR [rbp-0x38]
  405c17:	mov    r9d,r13d
  405c1a:	mov    r8,r12
  405c1d:	mov    ecx,0x0
  405c22:	mov    rdx,rbx
  405c25:	mov    rsi,rax
  405c28:	call   402a70 <sendto@plt>
  405c2d:	mov    rdx,rax
  405c30:	mov    eax,DWORD PTR [rbp-0x3c]
  405c33:	cdqe   
  405c35:	cmp    rdx,rax
  405c38:	jne    405c40 <memcpy@plt+0x3190>
  405c3a:	mov    eax,DWORD PTR [rbp-0x24]
  405c3d:	jmp    405c5a <memcpy@plt+0x31aa>
  405c3f:	nop
  405c40:	inc    DWORD PTR [rbp-0x28]
  405c43:	mov    rax,0x41a094
  405c4a:	mov    eax,DWORD PTR [rax]
  405c4c:	cmp    DWORD PTR [rbp-0x28],eax
  405c4f:	jl     405b7d <memcpy@plt+0x30cd>
  405c55:	mov    eax,0xffffffff
  405c5a:	add    rsp,0x28
  405c5e:	pop    rbx
  405c5f:	pop    r12
  405c61:	pop    r13
  405c63:	pop    rbp
  405c64:	ret    
  405c65:	endbr64 
  405c69:	push   rbp
  405c6a:	mov    rbp,rsp
  405c6d:	mov    DWORD PTR [rbp-0x14],edi
  405c70:	mov    rax,QWORD PTR [rip+0x143b9]        # 41a030 <memcpy@plt+0x17580>
  405c77:	mov    QWORD PTR [rbp-0x10],rax
  405c7b:	jmp    405ca6 <memcpy@plt+0x31f6>
  405c7d:	mov    rax,QWORD PTR [rbp-0x10]
  405c81:	mov    rax,QWORD PTR [rax]
  405c84:	mov    QWORD PTR [rbp-0x8],rax
  405c88:	mov    rax,QWORD PTR [rbp-0x8]
  405c8c:	mov    eax,DWORD PTR [rax+0x18]
  405c8f:	cmp    DWORD PTR [rbp-0x14],eax
  405c92:	jne    405c9a <memcpy@plt+0x31ea>
  405c94:	mov    rax,QWORD PTR [rbp-0x8]
  405c98:	jmp    405cb2 <memcpy@plt+0x3202>
  405c9a:	mov    rax,QWORD PTR [rbp-0x10]
  405c9e:	mov    rax,QWORD PTR [rax+0x10]
  405ca2:	mov    QWORD PTR [rbp-0x10],rax
  405ca6:	cmp    QWORD PTR [rbp-0x10],0x0
  405cab:	jne    405c7d <memcpy@plt+0x31cd>
  405cad:	mov    eax,0x0
  405cb2:	pop    rbp
  405cb3:	ret    
  405cb4:	endbr64 
  405cb8:	push   rbp
  405cb9:	mov    rbp,rsp
  405cbc:	sub    rsp,0x10
  405cc0:	mov    rax,QWORD PTR fs:0x28
  405cc9:	mov    QWORD PTR [rbp-0x8],rax
  405ccd:	xor    eax,eax
  405ccf:	lea    rax,[rbp-0xa]
  405cd3:	mov    esi,0x2
  405cd8:	mov    rdi,rax
  405cdb:	call   402a40 <rb_get_random@plt>
  405ce0:	movzx  eax,WORD PTR [rbp-0xa]
  405ce4:	cmp    ax,0xffff
  405ce8:	movzx  eax,WORD PTR [rbp-0xa]
  405cec:	movzx  eax,ax
  405cef:	mov    edi,eax
  405cf1:	call   405c65 <memcpy@plt+0x31b5>
  405cf6:	test   rax,rax
  405cf9:	jne    405ccf <memcpy@plt+0x321f>
  405cfb:	movzx  eax,WORD PTR [rbp-0xa]
  405cff:	mov    rdx,QWORD PTR [rbp-0x8]
  405d03:	xor    rdx,QWORD PTR fs:0x28
  405d0c:	je     405d13 <memcpy@plt+0x3263>
  405d0e:	call   402950 <__stack_chk_fail@plt>
  405d13:	leave  
  405d14:	ret    
  405d15:	endbr64 
  405d19:	push   rbp
  405d1a:	mov    rbp,rsp
  405d1d:	sub    rsp,0x130
  405d24:	mov    QWORD PTR [rbp-0x118],rdi
  405d2b:	mov    QWORD PTR [rbp-0x120],rsi
  405d32:	mov    DWORD PTR [rbp-0x124],edx
  405d38:	mov    rax,QWORD PTR fs:0x28
  405d41:	mov    QWORD PTR [rbp-0x8],rax
  405d45:	xor    eax,eax
  405d47:	cmp    QWORD PTR [rbp-0x118],0x0
  405d4f:	jne    405d70 <memcpy@plt+0x32c0>
  405d51:	lea    rcx,[rip+0x9a08]        # 40f760 <memcpy@plt+0xccb0>
  405d58:	mov    edx,0x19c
  405d5d:	lea    rsi,[rip+0x98e1]        # 40f645 <memcpy@plt+0xcb95>
  405d64:	lea    rdi,[rip+0x98e0]        # 40f64b <memcpy@plt+0xcb9b>
  405d6b:	call   402640 <__assert_fail@plt>
  405d70:	mov    rcx,QWORD PTR [rbp-0x118]
  405d77:	lea    rax,[rbp-0x110]
  405d7e:	mov    edx,0x100
  405d83:	mov    rsi,rcx
  405d86:	mov    rdi,rax
  405d89:	call   402720 <rb_strlcpy@plt>
  405d8e:	lea    rax,[rbp-0x110]
  405d95:	mov    esi,0xff
  405d9a:	mov    rdi,rax
  405d9d:	call   405871 <memcpy@plt+0x2dc1>
  405da2:	mov    edx,DWORD PTR [rbp-0x124]
  405da8:	mov    rcx,QWORD PTR [rbp-0x120]
  405daf:	lea    rax,[rbp-0x110]
  405db6:	mov    rsi,rcx
  405db9:	mov    rdi,rax
  405dbc:	call   405dd8 <memcpy@plt+0x3328>
  405dc1:	nop
  405dc2:	mov    rax,QWORD PTR [rbp-0x8]
  405dc6:	xor    rax,QWORD PTR fs:0x28
  405dcf:	je     405dd6 <memcpy@plt+0x3326>
  405dd1:	call   402950 <__stack_chk_fail@plt>
  405dd6:	leave  
  405dd7:	ret    
  405dd8:	endbr64 
  405ddc:	push   rbp
  405ddd:	mov    rbp,rsp
  405de0:	sub    rsp,0x20
  405de4:	mov    QWORD PTR [rbp-0x8],rdi
  405de8:	mov    QWORD PTR [rbp-0x10],rsi
  405dec:	mov    DWORD PTR [rbp-0x14],edx
  405def:	cmp    QWORD PTR [rbp-0x8],0x0
  405df4:	jne    405e15 <memcpy@plt+0x3365>
  405df6:	lea    rcx,[rip+0x9983]        # 40f780 <memcpy@plt+0xccd0>
  405dfd:	mov    edx,0x1a9
  405e02:	lea    rsi,[rip+0x983c]        # 40f645 <memcpy@plt+0xcb95>
  405e09:	lea    rdi,[rip+0x983b]        # 40f64b <memcpy@plt+0xcb9b>
  405e10:	call   402640 <__assert_fail@plt>
  405e15:	mov    edx,DWORD PTR [rbp-0x14]
  405e18:	mov    rsi,QWORD PTR [rbp-0x8]
  405e1c:	mov    rax,QWORD PTR [rbp-0x10]
  405e20:	mov    ecx,edx
  405e22:	mov    edx,0x0
  405e27:	mov    rdi,rax
  405e2a:	call   405e61 <memcpy@plt+0x33b1>
  405e2f:	nop
  405e30:	leave  
  405e31:	ret    
  405e32:	endbr64 
  405e36:	push   rbp
  405e37:	mov    rbp,rsp
  405e3a:	sub    rsp,0x10
  405e3e:	mov    QWORD PTR [rbp-0x8],rdi
  405e42:	mov    QWORD PTR [rbp-0x10],rsi
  405e46:	mov    rcx,QWORD PTR [rbp-0x8]
  405e4a:	mov    rax,QWORD PTR [rbp-0x10]
  405e4e:	mov    edx,0x0
  405e53:	mov    rsi,rcx
  405e56:	mov    rdi,rax
  405e59:	call   406398 <memcpy@plt+0x38e8>
  405e5e:	nop
  405e5f:	leave  
  405e60:	ret    
  405e61:	endbr64 
  405e65:	push   rbp
  405e66:	mov    rbp,rsp
  405e69:	sub    rsp,0x20
  405e6d:	mov    QWORD PTR [rbp-0x8],rdi
  405e71:	mov    QWORD PTR [rbp-0x10],rsi
  405e75:	mov    QWORD PTR [rbp-0x18],rdx
  405e79:	mov    DWORD PTR [rbp-0x1c],ecx
  405e7c:	cmp    QWORD PTR [rbp-0x18],0x0
  405e81:	jne    405ead <memcpy@plt+0x33fd>
  405e83:	mov    rax,QWORD PTR [rbp-0x8]
  405e87:	mov    rdi,rax
  405e8a:	call   405957 <memcpy@plt+0x2ea7>
  405e8f:	mov    QWORD PTR [rbp-0x18],rax
  405e93:	mov    rax,QWORD PTR [rbp-0x10]
  405e97:	mov    rdi,rax
  405e9a:	call   40540d <memcpy@plt+0x295d>
  405e9f:	mov    rdx,rax
  405ea2:	mov    rax,QWORD PTR [rbp-0x18]
  405ea6:	mov    QWORD PTR [rax+0x1c8],rdx
  405ead:	mov    rax,QWORD PTR [rbp-0x18]
  405eb1:	lea    rcx,[rax+0x29]
  405eb5:	mov    rax,QWORD PTR [rbp-0x10]
  405eb9:	mov    edx,0x100
  405ebe:	mov    rsi,rax
  405ec1:	mov    rdi,rcx
  405ec4:	call   402720 <rb_strlcpy@plt>
  405ec9:	mov    eax,DWORD PTR [rbp-0x1c]
  405ecc:	mov    edx,eax
  405ece:	mov    rax,QWORD PTR [rbp-0x18]
  405ed2:	mov    BYTE PTR [rax+0x28],dl
  405ed5:	mov    rax,QWORD PTR [rbp-0x18]
  405ed9:	mov    rdi,rax
  405edc:	call   406433 <memcpy@plt+0x3983>
  405ee1:	nop
  405ee2:	leave  
  405ee3:	ret    
  405ee4:	endbr64 
  405ee8:	push   rbp
  405ee9:	mov    rbp,rsp
  405eec:	push   r15
  405eee:	push   r14
  405ef0:	push   r13
  405ef2:	push   r12
  405ef4:	push   rbx
  405ef5:	sub    rsp,0xa8
  405efc:	mov    QWORD PTR [rbp-0x58],rdi
  405f00:	mov    QWORD PTR [rbp-0x60],rsi
  405f04:	mov    QWORD PTR [rbp-0x68],rdx
  405f08:	mov    QWORD PTR [rbp-0x70],rcx
  405f0c:	mov    rax,QWORD PTR [rbp-0x68]
  405f10:	movzx  eax,WORD PTR [rax]
  405f13:	cmp    ax,0x2
  405f17:	jne    405fa1 <memcpy@plt+0x34f1>
  405f1d:	mov    rax,QWORD PTR [rbp-0x68]
  405f21:	mov    QWORD PTR [rbp-0x48],rax
  405f25:	mov    rax,QWORD PTR [rbp-0x48]
  405f29:	add    rax,0x4
  405f2d:	mov    QWORD PTR [rbp-0x40],rax
  405f31:	cmp    QWORD PTR [rbp-0x70],0x0
  405f36:	je     405f3e <memcpy@plt+0x348e>
  405f38:	mov    rdx,QWORD PTR [rbp-0x70]
  405f3c:	jmp    405f45 <memcpy@plt+0x3495>
  405f3e:	lea    rdx,[rip+0x9710]        # 40f655 <memcpy@plt+0xcba5>
  405f45:	mov    rax,QWORD PTR [rbp-0x40]
  405f49:	movzx  eax,BYTE PTR [rax]
  405f4c:	movzx  edi,al
  405f4f:	mov    rax,QWORD PTR [rbp-0x40]
  405f53:	inc    rax
  405f56:	movzx  eax,BYTE PTR [rax]
  405f59:	movzx  r9d,al
  405f5d:	mov    rax,QWORD PTR [rbp-0x40]
  405f61:	add    rax,0x2
  405f65:	movzx  eax,BYTE PTR [rax]
  405f68:	movzx  r8d,al
  405f6c:	mov    rax,QWORD PTR [rbp-0x40]
  405f70:	add    rax,0x3
  405f74:	movzx  eax,BYTE PTR [rax]
  405f77:	movzx  ecx,al
  405f7a:	mov    rsi,QWORD PTR [rbp-0x60]
  405f7e:	mov    rax,QWORD PTR [rbp-0x58]
  405f82:	push   rdx
  405f83:	push   rdi
  405f84:	lea    rdx,[rip+0x96d7]        # 40f662 <memcpy@plt+0xcbb2>
  405f8b:	mov    rdi,rax
  405f8e:	mov    eax,0x0
  405f93:	call   4025d0 <snprintf@plt>
  405f98:	add    rsp,0x10
  405f9c:	jmp    406388 <memcpy@plt+0x38d8>
  405fa1:	mov    rax,QWORD PTR [rbp-0x68]
  405fa5:	movzx  eax,WORD PTR [rax]
  405fa8:	cmp    ax,0xa
  405fac:	jne    406388 <memcpy@plt+0x38d8>
  405fb2:	mov    rax,QWORD PTR [rbp-0x68]
  405fb6:	mov    QWORD PTR [rbp-0x38],rax
  405fba:	mov    rax,QWORD PTR [rbp-0x38]
  405fbe:	add    rax,0x8
  405fc2:	mov    QWORD PTR [rbp-0x40],rax
  405fc6:	cmp    QWORD PTR [rbp-0x70],0x0
  405fcb:	je     405fd3 <memcpy@plt+0x3523>
  405fcd:	mov    r12,QWORD PTR [rbp-0x70]
  405fd1:	jmp    405fda <memcpy@plt+0x352a>
  405fd3:	lea    r12,[rip+0x9697]        # 40f671 <memcpy@plt+0xcbc1>
  405fda:	mov    rax,QWORD PTR [rbp-0x40]
  405fde:	movzx  eax,BYTE PTR [rax]
  405fe1:	shr    al,0x4
  405fe4:	movzx  eax,al
  405fe7:	mov    DWORD PTR [rbp-0x74],eax
  405fea:	mov    rax,QWORD PTR [rbp-0x40]
  405fee:	movzx  eax,BYTE PTR [rax]
  405ff1:	movzx  eax,al
  405ff4:	and    eax,0xf
  405ff7:	mov    DWORD PTR [rbp-0x78],eax
  405ffa:	mov    rax,QWORD PTR [rbp-0x40]
  405ffe:	inc    rax
  406001:	movzx  eax,BYTE PTR [rax]
  406004:	shr    al,0x4
  406007:	movzx  ebx,al
  40600a:	mov    DWORD PTR [rbp-0x7c],ebx
  40600d:	mov    rax,QWORD PTR [rbp-0x40]
  406011:	inc    rax
  406014:	movzx  eax,BYTE PTR [rax]
  406017:	movzx  eax,al
  40601a:	and    eax,0xf
  40601d:	mov    DWORD PTR [rbp-0x80],eax
  406020:	mov    rax,QWORD PTR [rbp-0x40]
  406024:	add    rax,0x2
  406028:	movzx  eax,BYTE PTR [rax]
  40602b:	shr    al,0x4
  40602e:	movzx  ecx,al
  406031:	mov    DWORD PTR [rbp-0x84],ecx
  406037:	mov    rax,QWORD PTR [rbp-0x40]
  40603b:	add    rax,0x2
  40603f:	movzx  eax,BYTE PTR [rax]
  406042:	movzx  eax,al
  406045:	mov    ebx,eax
  406047:	and    ebx,0xf
  40604a:	mov    DWORD PTR [rbp-0x88],ebx
  406050:	mov    rax,QWORD PTR [rbp-0x40]
  406054:	add    rax,0x3
  406058:	movzx  eax,BYTE PTR [rax]
  40605b:	shr    al,0x4
  40605e:	movzx  esi,al
  406061:	mov    DWORD PTR [rbp-0x8c],esi
  406067:	mov    rax,QWORD PTR [rbp-0x40]
  40606b:	add    rax,0x3
  40606f:	movzx  eax,BYTE PTR [rax]
  406072:	movzx  eax,al
  406075:	mov    ecx,eax
  406077:	and    ecx,0xf
  40607a:	mov    DWORD PTR [rbp-0x90],ecx
  406080:	mov    rax,QWORD PTR [rbp-0x40]
  406084:	add    rax,0x4
  406088:	movzx  eax,BYTE PTR [rax]
  40608b:	shr    al,0x4
  40608e:	movzx  edi,al
  406091:	mov    DWORD PTR [rbp-0x94],edi
  406097:	mov    rax,QWORD PTR [rbp-0x40]
  40609b:	add    rax,0x4
  40609f:	movzx  eax,BYTE PTR [rax]
  4060a2:	movzx  eax,al
  4060a5:	mov    esi,eax
  4060a7:	and    esi,0xf
  4060aa:	mov    DWORD PTR [rbp-0x98],esi
  4060b0:	mov    rax,QWORD PTR [rbp-0x40]
  4060b4:	add    rax,0x5
  4060b8:	movzx  eax,BYTE PTR [rax]
  4060bb:	shr    al,0x4
  4060be:	movzx  edx,al
  4060c1:	mov    DWORD PTR [rbp-0x9c],edx
  4060c7:	mov    rax,QWORD PTR [rbp-0x40]
  4060cb:	add    rax,0x5
  4060cf:	movzx  eax,BYTE PTR [rax]
  4060d2:	movzx  eax,al
  4060d5:	mov    edi,eax
  4060d7:	and    edi,0xf
  4060da:	mov    DWORD PTR [rbp-0xa0],edi
  4060e0:	mov    rax,QWORD PTR [rbp-0x40]
  4060e4:	add    rax,0x6
  4060e8:	movzx  eax,BYTE PTR [rax]
  4060eb:	shr    al,0x4
  4060ee:	movzx  r15d,al
  4060f2:	mov    DWORD PTR [rbp-0xa4],r15d
  4060f9:	mov    rax,QWORD PTR [rbp-0x40]
  4060fd:	add    rax,0x6
  406101:	movzx  eax,BYTE PTR [rax]
  406104:	movzx  eax,al
  406107:	mov    edx,eax
  406109:	and    edx,0xf
  40610c:	mov    DWORD PTR [rbp-0xa8],edx
  406112:	mov    rax,QWORD PTR [rbp-0x40]
  406116:	add    rax,0x7
  40611a:	movzx  eax,BYTE PTR [rax]
  40611d:	shr    al,0x4
  406120:	movzx  r11d,al
  406124:	mov    DWORD PTR [rbp-0xac],r11d
  40612b:	mov    rax,QWORD PTR [rbp-0x40]
  40612f:	add    rax,0x7
  406133:	movzx  eax,BYTE PTR [rax]
  406136:	movzx  eax,al
  406139:	mov    r10d,eax
  40613c:	and    r10d,0xf
  406140:	mov    DWORD PTR [rbp-0xb0],r10d
  406147:	mov    rax,QWORD PTR [rbp-0x40]
  40614b:	add    rax,0x8
  40614f:	movzx  eax,BYTE PTR [rax]
  406152:	shr    al,0x4
  406155:	movzx  r9d,al
  406159:	mov    DWORD PTR [rbp-0xb4],r9d
  406160:	mov    rax,QWORD PTR [rbp-0x40]
  406164:	add    rax,0x8
  406168:	movzx  eax,BYTE PTR [rax]
  40616b:	movzx  eax,al
  40616e:	mov    r11d,eax
  406171:	and    r11d,0xf
  406175:	mov    DWORD PTR [rbp-0xb8],r11d
  40617c:	mov    rax,QWORD PTR [rbp-0x40]
  406180:	add    rax,0x9
  406184:	movzx  eax,BYTE PTR [rax]
  406187:	shr    al,0x4
  40618a:	movzx  r14d,al
  40618e:	mov    DWORD PTR [rbp-0xbc],r14d
  406195:	mov    rax,QWORD PTR [rbp-0x40]
  406199:	add    rax,0x9
  40619d:	movzx  eax,BYTE PTR [rax]
  4061a0:	movzx  eax,al
  4061a3:	mov    r14d,eax
  4061a6:	and    r14d,0xf
  4061aa:	mov    DWORD PTR [rbp-0xc0],r14d
  4061b1:	mov    rax,QWORD PTR [rbp-0x40]
  4061b5:	add    rax,0xa
  4061b9:	movzx  eax,BYTE PTR [rax]
  4061bc:	shr    al,0x4
  4061bf:	movzx  r15d,al
  4061c3:	mov    rax,QWORD PTR [rbp-0x40]
  4061c7:	add    rax,0xa
  4061cb:	movzx  eax,BYTE PTR [rax]
  4061ce:	movzx  eax,al
  4061d1:	mov    r8d,eax
  4061d4:	and    r8d,0xf
  4061d8:	mov    DWORD PTR [rbp-0xc4],r8d
  4061df:	mov    rax,QWORD PTR [rbp-0x40]
  4061e3:	add    rax,0xb
  4061e7:	movzx  eax,BYTE PTR [rax]
  4061ea:	shr    al,0x4
  4061ed:	movzx  r13d,al
  4061f1:	mov    rax,QWORD PTR [rbp-0x40]
  4061f5:	add    rax,0xb
  4061f9:	movzx  eax,BYTE PTR [rax]
  4061fc:	movzx  eax,al
  4061ff:	mov    r14d,eax
  406202:	and    r14d,0xf
  406206:	mov    rax,QWORD PTR [rbp-0x40]
  40620a:	add    rax,0xc
  40620e:	movzx  eax,BYTE PTR [rax]
  406211:	shr    al,0x4
  406214:	movzx  r11d,al
  406218:	mov    rax,QWORD PTR [rbp-0x40]
  40621c:	add    rax,0xc
  406220:	movzx  eax,BYTE PTR [rax]
  406223:	movzx  eax,al
  406226:	mov    ebx,eax
  406228:	and    ebx,0xf
  40622b:	mov    rax,QWORD PTR [rbp-0x40]
  40622f:	add    rax,0xd
  406233:	movzx  eax,BYTE PTR [rax]
  406236:	shr    al,0x4
  406239:	movzx  r9d,al
  40623d:	mov    rax,QWORD PTR [rbp-0x40]
  406241:	add    rax,0xd
  406245:	movzx  eax,BYTE PTR [rax]
  406248:	movzx  eax,al
  40624b:	mov    r10d,eax
  40624e:	and    r10d,0xf
  406252:	mov    rax,QWORD PTR [rbp-0x40]
  406256:	add    rax,0xe
  40625a:	movzx  eax,BYTE PTR [rax]
  40625d:	shr    al,0x4
  406260:	movzx  edi,al
  406263:	mov    rax,QWORD PTR [rbp-0x40]
  406267:	add    rax,0xe
  40626b:	movzx  eax,BYTE PTR [rax]
  40626e:	movzx  eax,al
  406271:	mov    r8d,eax
  406274:	and    r8d,0xf
  406278:	mov    rax,QWORD PTR [rbp-0x40]
  40627c:	add    rax,0xf
  406280:	movzx  eax,BYTE PTR [rax]
  406283:	shr    al,0x4
  406286:	movzx  ecx,al
  406289:	mov    rax,QWORD PTR [rbp-0x40]
  40628d:	add    rax,0xf
  406291:	movzx  eax,BYTE PTR [rax]
  406294:	movzx  eax,al
  406297:	mov    edx,eax
  406299:	and    edx,0xf
  40629c:	mov    rsi,QWORD PTR [rbp-0x60]
  4062a0:	mov    rax,QWORD PTR [rbp-0x58]
  4062a4:	push   r12
  4062a6:	mov    r12d,DWORD PTR [rbp-0x74]
  4062aa:	push   r12
  4062ac:	mov    r12d,DWORD PTR [rbp-0x78]
  4062b0:	push   r12
  4062b2:	mov    r12d,DWORD PTR [rbp-0x7c]
  4062b6:	push   r12
  4062b8:	mov    r12d,DWORD PTR [rbp-0x80]
  4062bc:	push   r12
  4062be:	mov    r12d,DWORD PTR [rbp-0x84]
  4062c5:	push   r12
  4062c7:	mov    r12d,DWORD PTR [rbp-0x88]
  4062ce:	push   r12
  4062d0:	mov    r12d,DWORD PTR [rbp-0x8c]
  4062d7:	push   r12
  4062d9:	mov    r12d,DWORD PTR [rbp-0x90]
  4062e0:	push   r12
  4062e2:	mov    r12d,DWORD PTR [rbp-0x94]
  4062e9:	push   r12
  4062eb:	mov    r12d,DWORD PTR [rbp-0x98]
  4062f2:	push   r12
  4062f4:	mov    r12d,DWORD PTR [rbp-0x9c]
  4062fb:	push   r12
  4062fd:	mov    r12d,DWORD PTR [rbp-0xa0]
  406304:	push   r12
  406306:	mov    r12d,DWORD PTR [rbp-0xa4]
  40630d:	push   r12
  40630f:	mov    r12d,DWORD PTR [rbp-0xa8]
  406316:	push   r12
  406318:	mov    r12d,DWORD PTR [rbp-0xac]
  40631f:	push   r12
  406321:	mov    r12d,DWORD PTR [rbp-0xb0]
  406328:	push   r12
  40632a:	mov    r12d,DWORD PTR [rbp-0xb4]
  406331:	push   r12
  406333:	mov    r12d,DWORD PTR [rbp-0xb8]
  40633a:	push   r12
  40633c:	mov    r12d,DWORD PTR [rbp-0xbc]
  406343:	push   r12
  406345:	mov    r12d,DWORD PTR [rbp-0xc0]
  40634c:	push   r12
  40634e:	push   r15
  406350:	mov    r15d,DWORD PTR [rbp-0xc4]
  406357:	push   r15
  406359:	push   r13
  40635b:	push   r14
  40635d:	push   r11
  40635f:	push   rbx
  406360:	push   r9
  406362:	push   r10
  406364:	push   rdi
  406365:	mov    r9d,r8d
  406368:	mov    r8d,ecx
  40636b:	mov    ecx,edx
  40636d:	lea    rdx,[rip+0x930c]        # 40f680 <memcpy@plt+0xcbd0>
  406374:	mov    rdi,rax
  406377:	mov    eax,0x0
  40637c:	call   4025d0 <snprintf@plt>
  406381:	add    rsp,0xf0
  406388:	nop
  406389:	lea    rsp,[rbp-0x28]
  40638d:	pop    rbx
  40638e:	pop    r12
  406390:	pop    r13
  406392:	pop    r14
  406394:	pop    r15
  406396:	pop    rbp
  406397:	ret    
  406398:	endbr64 
  40639c:	push   rbp
  40639d:	mov    rbp,rsp
  4063a0:	sub    rsp,0x20
  4063a4:	mov    QWORD PTR [rbp-0x8],rdi
  4063a8:	mov    QWORD PTR [rbp-0x10],rsi
  4063ac:	mov    QWORD PTR [rbp-0x18],rdx
  4063b0:	cmp    QWORD PTR [rbp-0x18],0x0
  4063b5:	jne    4063fe <memcpy@plt+0x394e>
  4063b7:	mov    rax,QWORD PTR [rbp-0x8]
  4063bb:	mov    rdi,rax
  4063be:	call   405957 <memcpy@plt+0x2ea7>
  4063c3:	mov    QWORD PTR [rbp-0x18],rax
  4063c7:	mov    rax,QWORD PTR [rbp-0x18]
  4063cb:	lea    rcx,[rax+0x148]
  4063d2:	mov    rax,QWORD PTR [rbp-0x10]
  4063d6:	mov    edx,0x80
  4063db:	mov    rsi,rax
  4063de:	mov    rdi,rcx
  4063e1:	call   402ab0 <memcpy@plt>
  4063e6:	mov    edi,0x100
  4063eb:	call   4053d1 <memcpy@plt+0x2921>
  4063f0:	mov    rdx,rax
  4063f3:	mov    rax,QWORD PTR [rbp-0x18]
  4063f7:	mov    QWORD PTR [rax+0x1c8],rdx
  4063fe:	mov    rax,QWORD PTR [rbp-0x18]
  406402:	lea    rdi,[rax+0x29]
  406406:	mov    rax,QWORD PTR [rbp-0x10]
  40640a:	mov    ecx,0x0
  40640f:	mov    rdx,rax
  406412:	mov    esi,0x100
  406417:	call   405ee4 <memcpy@plt+0x3434>
  40641c:	mov    rax,QWORD PTR [rbp-0x18]
  406420:	mov    BYTE PTR [rax+0x28],0xc
  406424:	mov    rax,QWORD PTR [rbp-0x18]
  406428:	mov    rdi,rax
  40642b:	call   406433 <memcpy@plt+0x3983>
  406430:	nop
  406431:	leave  
  406432:	ret    
  406433:	endbr64 
  406437:	push   rbp
  406438:	mov    rbp,rsp
  40643b:	sub    rsp,0x430
  406442:	mov    QWORD PTR [rbp-0x428],rdi
  406449:	mov    rax,QWORD PTR fs:0x28
  406452:	mov    QWORD PTR [rbp-0x8],rax
  406456:	xor    eax,eax
  406458:	mov    DWORD PTR [rbp-0x420],0x0
  406462:	lea    rax,[rbp-0x410]
  406469:	mov    edx,0x400
  40646e:	mov    esi,0x0
  406473:	mov    rdi,rax
  406476:	call   402590 <memset@plt>
  40647b:	mov    rax,QWORD PTR [rbp-0x428]
  406482:	movzx  eax,BYTE PTR [rax+0x28]
  406486:	movsx  eax,al
  406489:	mov    rdx,QWORD PTR [rbp-0x428]
  406490:	lea    rdi,[rdx+0x29]
  406494:	lea    rdx,[rbp-0x410]
  40649b:	mov    r8d,0x400
  4064a1:	mov    rcx,rdx
  4064a4:	mov    edx,eax
  4064a6:	mov    esi,0x1
  4064ab:	call   40906a <memcpy@plt+0x65ba>
  4064b0:	mov    DWORD PTR [rbp-0x420],eax
  4064b6:	cmp    DWORD PTR [rbp-0x420],0x0
  4064bd:	jle    406550 <memcpy@plt+0x3aa0>
  4064c3:	lea    rax,[rbp-0x410]
  4064ca:	mov    QWORD PTR [rbp-0x418],rax
  4064d1:	mov    rax,QWORD PTR [rbp-0x428]
  4064d8:	mov    eax,DWORD PTR [rax+0x18]
  4064db:	mov    edx,eax
  4064dd:	mov    rax,QWORD PTR [rbp-0x418]
  4064e4:	mov    WORD PTR [rax],dx
  4064e7:	mov    rax,QWORD PTR [rbp-0x428]
  4064ee:	movzx  eax,BYTE PTR [rax+0x12a]
  4064f5:	inc    eax
  4064f7:	mov    edx,eax
  4064f9:	mov    rax,QWORD PTR [rbp-0x428]
  406500:	mov    BYTE PTR [rax+0x12a],dl
  406506:	mov    rax,QWORD PTR [rbp-0x428]
  40650d:	movzx  eax,BYTE PTR [rax+0x12a]
  406514:	movsx  edx,al
  406517:	mov    ecx,DWORD PTR [rbp-0x420]
  40651d:	lea    rax,[rbp-0x410]
  406524:	mov    esi,ecx
  406526:	mov    rdi,rax
  406529:	call   405a30 <memcpy@plt+0x2f80>
  40652e:	mov    DWORD PTR [rbp-0x41c],eax
  406534:	cmp    DWORD PTR [rbp-0x41c],0xffffffff
  40653b:	je     406550 <memcpy@plt+0x3aa0>
  40653d:	mov    rax,QWORD PTR [rbp-0x428]
  406544:	mov    edx,DWORD PTR [rbp-0x41c]
  40654a:	mov    DWORD PTR [rax+0x140],edx
  406550:	nop
  406551:	mov    rax,QWORD PTR [rbp-0x8]
  406555:	xor    rax,QWORD PTR fs:0x28
  40655e:	je     406565 <memcpy@plt+0x3ab5>
  406560:	call   402950 <__stack_chk_fail@plt>
  406565:	leave  
  406566:	ret    
  406567:	endbr64 
  40656b:	push   rbp
  40656c:	mov    rbp,rsp
  40656f:	sub    rsp,0x10
  406573:	mov    QWORD PTR [rbp-0x8],rdi
  406577:	mov    rax,QWORD PTR [rbp-0x8]
  40657b:	movzx  eax,BYTE PTR [rax+0x129]
  406582:	dec    eax
  406584:	mov    edx,eax
  406586:	mov    rax,QWORD PTR [rbp-0x8]
  40658a:	mov    BYTE PTR [rax+0x129],dl
  406590:	mov    rax,QWORD PTR [rbp-0x8]
  406594:	movzx  eax,BYTE PTR [rax+0x129]
  40659b:	test   al,al
  40659d:	jg     4065d4 <memcpy@plt+0x3b24>
  40659f:	mov    rax,QWORD PTR [rbp-0x8]
  4065a3:	mov    rax,QWORD PTR [rax+0x1d0]
  4065aa:	mov    rax,QWORD PTR [rax+0x8]
  4065ae:	mov    rdx,QWORD PTR [rbp-0x8]
  4065b2:	mov    rdx,QWORD PTR [rdx+0x1d0]
  4065b9:	mov    rdx,QWORD PTR [rdx]
  4065bc:	mov    esi,0x0
  4065c1:	mov    rdi,rdx
  4065c4:	call   rax
  4065c6:	mov    rax,QWORD PTR [rbp-0x8]
  4065ca:	mov    rdi,rax
  4065cd:	call   405912 <memcpy@plt+0x2e62>
  4065d2:	jmp    406639 <memcpy@plt+0x3b89>
  4065d4:	mov    rax,QWORD PTR [rbp-0x8]
  4065d8:	movzx  eax,BYTE PTR [rax+0x28]
  4065dc:	movsx  eax,al
  4065df:	cmp    eax,0xc
  4065e2:	je     4065f0 <memcpy@plt+0x3b40>
  4065e4:	cmp    eax,0x1c
  4065e7:	je     406611 <memcpy@plt+0x3b61>
  4065e9:	cmp    eax,0x1
  4065ec:	je     406611 <memcpy@plt+0x3b61>
  4065ee:	jmp    406639 <memcpy@plt+0x3b89>
  4065f0:	mov    rax,QWORD PTR [rbp-0x8]
  4065f4:	lea    rcx,[rax+0x148]
  4065fb:	mov    rax,QWORD PTR [rbp-0x8]
  4065ff:	mov    rdx,rax
  406602:	mov    rsi,rcx
  406605:	mov    edi,0x0
  40660a:	call   406398 <memcpy@plt+0x38e8>
  40660f:	jmp    406639 <memcpy@plt+0x3b89>
  406611:	mov    rax,QWORD PTR [rbp-0x8]
  406615:	movzx  eax,BYTE PTR [rax+0x28]
  406619:	movsx  ecx,al
  40661c:	mov    rax,QWORD PTR [rbp-0x8]
  406620:	mov    rax,QWORD PTR [rax+0x1c8]
  406627:	mov    rdx,QWORD PTR [rbp-0x8]
  40662b:	mov    rsi,rax
  40662e:	mov    edi,0x0
  406633:	call   405e61 <memcpy@plt+0x33b1>
  406638:	nop
  406639:	leave  
  40663a:	ret    
  40663b:	endbr64 
  40663f:	push   rbp
  406640:	mov    rbp,rsp
  406643:	sub    rsp,0x140
  40664a:	mov    QWORD PTR [rbp-0x128],rdi
  406651:	mov    QWORD PTR [rbp-0x130],rsi
  406658:	mov    QWORD PTR [rbp-0x138],rdx
  40665f:	mov    QWORD PTR [rbp-0x140],rcx
  406666:	mov    rax,QWORD PTR fs:0x28
  40666f:	mov    QWORD PTR [rbp-0x8],rax
  406673:	xor    eax,eax
  406675:	mov    rax,QWORD PTR [rbp-0x138]
  40667c:	add    rax,0xc
  406680:	mov    QWORD PTR [rbp-0x118],rax
  406687:	mov    rax,QWORD PTR [rbp-0x130]
  40668e:	movzx  eax,WORD PTR [rax+0x4]
  406692:	cmp    ax,0x1
  406696:	je     40669f <memcpy@plt+0x3bef>
  406698:	mov    eax,0x0
  40669d:	jmp    40670c <memcpy@plt+0x3c5c>
  40669f:	lea    rcx,[rbp-0x110]
  4066a6:	mov    rdx,QWORD PTR [rbp-0x118]
  4066ad:	mov    rsi,QWORD PTR [rbp-0x140]
  4066b4:	mov    rax,QWORD PTR [rbp-0x138]
  4066bb:	mov    r8d,0x100
  4066c1:	mov    rdi,rax
  4066c4:	call   4075f3 <memcpy@plt+0x4b43>
  4066c9:	mov    DWORD PTR [rbp-0x11c],eax
  4066cf:	cmp    DWORD PTR [rbp-0x11c],0x0
  4066d6:	jg     4066df <memcpy@plt+0x3c2f>
  4066d8:	mov    eax,0x0
  4066dd:	jmp    40670c <memcpy@plt+0x3c5c>
  4066df:	mov    rax,QWORD PTR [rbp-0x128]
  4066e6:	lea    rdx,[rax+0x29]
  4066ea:	lea    rax,[rbp-0x110]
  4066f1:	mov    rsi,rdx
  4066f4:	mov    rdi,rax
  4066f7:	call   402570 <rb_strcasecmp@plt>
  4066fc:	test   eax,eax
  4066fe:	je     406707 <memcpy@plt+0x3c57>
  406700:	mov    eax,0x0
  406705:	jmp    40670c <memcpy@plt+0x3c5c>
  406707:	mov    eax,0x1
  40670c:	mov    rdi,QWORD PTR [rbp-0x8]
  406710:	xor    rdi,QWORD PTR fs:0x28
  406719:	je     406720 <memcpy@plt+0x3c70>
  40671b:	call   402950 <__stack_chk_fail@plt>
  406720:	leave  
  406721:	ret    
  406722:	endbr64 
  406726:	push   rbp
  406727:	mov    rbp,rsp
  40672a:	sub    rsp,0x1c0
  406731:	mov    QWORD PTR [rbp-0x1a8],rdi
  406738:	mov    QWORD PTR [rbp-0x1b0],rsi
  40673f:	mov    QWORD PTR [rbp-0x1b8],rdx
  406746:	mov    QWORD PTR [rbp-0x1c0],rcx
  40674d:	mov    rax,QWORD PTR fs:0x28
  406756:	mov    QWORD PTR [rbp-0x8],rax
  40675a:	xor    eax,eax
  40675c:	mov    rax,QWORD PTR [rbp-0x1b8]
  406763:	add    rax,0xc
  406767:	mov    QWORD PTR [rbp-0x188],rax
  40676e:	jmp    4067cd <memcpy@plt+0x3d1d>
  406770:	mov    rdx,QWORD PTR [rbp-0x1c0]
  406777:	mov    rax,QWORD PTR [rbp-0x188]
  40677e:	mov    rsi,rdx
  406781:	mov    rdi,rax
  406784:	call   407d67 <memcpy@plt+0x52b7>
  406789:	mov    DWORD PTR [rbp-0x194],eax
  40678f:	cmp    DWORD PTR [rbp-0x194],0x0
  406796:	jns    4067a2 <memcpy@plt+0x3cf2>
  406798:	mov    eax,0x0
  40679d:	jmp    406b0c <memcpy@plt+0x405c>
  4067a2:	mov    eax,DWORD PTR [rbp-0x194]
  4067a8:	cdqe   
  4067aa:	add    rax,0x4
  4067ae:	add    QWORD PTR [rbp-0x188],rax
  4067b5:	mov    rax,QWORD PTR [rbp-0x1b0]
  4067bc:	movzx  eax,WORD PTR [rax+0x4]
  4067c0:	dec    eax
  4067c2:	mov    rdx,QWORD PTR [rbp-0x1b0]
  4067c9:	mov    WORD PTR [rdx+0x4],ax
  4067cd:	mov    rax,QWORD PTR [rbp-0x1b0]
  4067d4:	movzx  eax,WORD PTR [rax+0x4]
  4067d8:	test   ax,ax
  4067db:	jne    406770 <memcpy@plt+0x3cc0>
  4067dd:	jmp    406ae0 <memcpy@plt+0x4030>
  4067e2:	mov    rax,QWORD PTR [rbp-0x1b0]
  4067e9:	movzx  eax,WORD PTR [rax+0x6]
  4067ed:	dec    eax
  4067ef:	mov    rdx,QWORD PTR [rbp-0x1b0]
  4067f6:	mov    WORD PTR [rdx+0x6],ax
  4067fa:	lea    rcx,[rbp-0x170]
  406801:	mov    rdx,QWORD PTR [rbp-0x188]
  406808:	mov    rsi,QWORD PTR [rbp-0x1c0]
  40680f:	mov    rax,QWORD PTR [rbp-0x1b8]
  406816:	mov    r8d,0x163
  40681c:	mov    rdi,rax
  40681f:	call   4075f3 <memcpy@plt+0x4b43>
  406824:	mov    DWORD PTR [rbp-0x194],eax
  40682a:	cmp    DWORD PTR [rbp-0x194],0x0
  406831:	jns    40683d <memcpy@plt+0x3d8d>
  406833:	mov    eax,0x0
  406838:	jmp    406b0c <memcpy@plt+0x405c>
  40683d:	cmp    DWORD PTR [rbp-0x194],0x0
  406844:	jne    406850 <memcpy@plt+0x3da0>
  406846:	mov    eax,0x0
  40684b:	jmp    406b0c <memcpy@plt+0x405c>
  406850:	mov    BYTE PTR [rbp-0x71],0x0
  406854:	mov    eax,DWORD PTR [rbp-0x194]
  40685a:	cdqe   
  40685c:	add    QWORD PTR [rbp-0x188],rax
  406863:	mov    rax,QWORD PTR [rbp-0x188]
  40686a:	add    rax,0xa
  40686e:	cmp    QWORD PTR [rbp-0x1c0],rax
  406875:	jbe    406b06 <memcpy@plt+0x4056>
  40687b:	mov    rax,QWORD PTR [rbp-0x188]
  406882:	mov    rdi,rax
  406885:	call   407e93 <memcpy@plt+0x53e3>
  40688a:	mov    DWORD PTR [rbp-0x190],eax
  406890:	add    QWORD PTR [rbp-0x188],0x2
  406898:	mov    rax,QWORD PTR [rbp-0x188]
  40689f:	mov    rdi,rax
  4068a2:	call   407e93 <memcpy@plt+0x53e3>
  4068a7:	add    QWORD PTR [rbp-0x188],0x2
  4068af:	mov    rax,QWORD PTR [rbp-0x188]
  4068b6:	mov    rdi,rax
  4068b9:	call   407ed2 <memcpy@plt+0x5422>
  4068be:	mov    rdx,rax
  4068c1:	mov    rax,QWORD PTR [rbp-0x1a8]
  4068c8:	mov    QWORD PTR [rax+0x20],rdx
  4068cc:	add    QWORD PTR [rbp-0x188],0x4
  4068d4:	mov    rax,QWORD PTR [rbp-0x188]
  4068db:	mov    rdi,rax
  4068de:	call   407e93 <memcpy@plt+0x53e3>
  4068e3:	mov    DWORD PTR [rbp-0x18c],eax
  4068e9:	add    QWORD PTR [rbp-0x188],0x2
  4068f1:	cmp    DWORD PTR [rbp-0x190],0xc
  4068f8:	je     406a3c <memcpy@plt+0x3f8c>
  4068fe:	cmp    DWORD PTR [rbp-0x190],0x1c
  406905:	je     4069a5 <memcpy@plt+0x3ef5>
  40690b:	cmp    DWORD PTR [rbp-0x190],0x1
  406912:	jne    406ad1 <memcpy@plt+0x4021>
  406918:	mov    rax,QWORD PTR [rbp-0x1a8]
  40691f:	movzx  eax,BYTE PTR [rax+0x28]
  406923:	cmp    al,0x1
  406925:	je     406931 <memcpy@plt+0x3e81>
  406927:	mov    eax,0x0
  40692c:	jmp    406b0c <memcpy@plt+0x405c>
  406931:	cmp    DWORD PTR [rbp-0x18c],0x4
  406938:	je     406944 <memcpy@plt+0x3e94>
  40693a:	mov    eax,0x0
  40693f:	jmp    406b0c <memcpy@plt+0x405c>
  406944:	mov    rax,QWORD PTR [rbp-0x1a8]
  40694b:	add    rax,0x148
  406951:	mov    QWORD PTR [rbp-0x180],rax
  406958:	mov    rax,QWORD PTR [rbp-0x1a8]
  40695f:	add    rax,0x148
  406965:	mov    rdx,QWORD PTR [rbp-0x1a8]
  40696c:	add    rdx,0x148
  406973:	movzx  eax,WORD PTR [rax]
  406976:	mov    WORD PTR [rdx],ax
  406979:	mov    rax,QWORD PTR [rbp-0x180]
  406980:	mov    WORD PTR [rax],0x2
  406985:	mov    rax,QWORD PTR [rbp-0x180]
  40698c:	lea    rdx,[rax+0x4]
  406990:	mov    rax,QWORD PTR [rbp-0x188]
  406997:	mov    eax,DWORD PTR [rax]
  406999:	mov    DWORD PTR [rdx],eax
  40699b:	mov    eax,0x1
  4069a0:	jmp    406b0c <memcpy@plt+0x405c>
  4069a5:	mov    rax,QWORD PTR [rbp-0x1a8]
  4069ac:	movzx  eax,BYTE PTR [rax+0x28]
  4069b0:	cmp    al,0x1c
  4069b2:	je     4069be <memcpy@plt+0x3f0e>
  4069b4:	mov    eax,0x0
  4069b9:	jmp    406b0c <memcpy@plt+0x405c>
  4069be:	cmp    DWORD PTR [rbp-0x18c],0x10
  4069c5:	je     4069d1 <memcpy@plt+0x3f21>
  4069c7:	mov    eax,0x0
  4069cc:	jmp    406b0c <memcpy@plt+0x405c>
  4069d1:	mov    rax,QWORD PTR [rbp-0x1a8]
  4069d8:	add    rax,0x148
  4069de:	mov    rdx,QWORD PTR [rbp-0x1a8]
  4069e5:	add    rdx,0x148
  4069ec:	movzx  eax,WORD PTR [rax]
  4069ef:	mov    WORD PTR [rdx],ax
  4069f2:	mov    rax,QWORD PTR [rbp-0x1a8]
  4069f9:	add    rax,0x148
  4069ff:	mov    QWORD PTR [rbp-0x178],rax
  406a06:	mov    rax,QWORD PTR [rbp-0x178]
  406a0d:	mov    WORD PTR [rax],0xa
  406a12:	mov    rax,QWORD PTR [rbp-0x178]
  406a19:	lea    rcx,[rax+0x8]
  406a1d:	mov    rax,QWORD PTR [rbp-0x188]
  406a24:	mov    rdx,QWORD PTR [rax+0x8]
  406a28:	mov    rax,QWORD PTR [rax]
  406a2b:	mov    QWORD PTR [rcx],rax
  406a2e:	mov    QWORD PTR [rcx+0x8],rdx
  406a32:	mov    eax,0x1
  406a37:	jmp    406b0c <memcpy@plt+0x405c>
  406a3c:	mov    rax,QWORD PTR [rbp-0x1a8]
  406a43:	movzx  eax,BYTE PTR [rax+0x28]
  406a47:	cmp    al,0xc
  406a49:	je     406a55 <memcpy@plt+0x3fa5>
  406a4b:	mov    eax,0x0
  406a50:	jmp    406b0c <memcpy@plt+0x405c>
  406a55:	lea    rcx,[rbp-0x170]
  406a5c:	mov    rdx,QWORD PTR [rbp-0x188]
  406a63:	mov    rsi,QWORD PTR [rbp-0x1c0]
  406a6a:	mov    rax,QWORD PTR [rbp-0x1b8]
  406a71:	mov    r8d,0x163
  406a77:	mov    rdi,rax
  406a7a:	call   4075f3 <memcpy@plt+0x4b43>
  406a7f:	mov    DWORD PTR [rbp-0x194],eax
  406a85:	cmp    DWORD PTR [rbp-0x194],0x0
  406a8c:	jns    406a95 <memcpy@plt+0x3fe5>
  406a8e:	mov    eax,0x0
  406a93:	jmp    406b0c <memcpy@plt+0x405c>
  406a95:	cmp    DWORD PTR [rbp-0x194],0x0
  406a9c:	jne    406aa5 <memcpy@plt+0x3ff5>
  406a9e:	mov    eax,0x0
  406aa3:	jmp    406b0c <memcpy@plt+0x405c>
  406aa5:	mov    rax,QWORD PTR [rbp-0x1a8]
  406aac:	mov    rax,QWORD PTR [rax+0x1c8]
  406ab3:	lea    rcx,[rbp-0x170]
  406aba:	mov    edx,0x100
  406abf:	mov    rsi,rcx
  406ac2:	mov    rdi,rax
  406ac5:	call   402720 <rb_strlcpy@plt>
  406aca:	mov    eax,0x1
  406acf:	jmp    406b0c <memcpy@plt+0x405c>
  406ad1:	mov    eax,DWORD PTR [rbp-0x18c]
  406ad7:	cdqe   
  406ad9:	add    QWORD PTR [rbp-0x188],rax
  406ae0:	mov    rax,QWORD PTR [rbp-0x1b0]
  406ae7:	movzx  eax,WORD PTR [rax+0x6]
  406aeb:	test   ax,ax
  406aee:	je     406b07 <memcpy@plt+0x4057>
  406af0:	mov    rax,QWORD PTR [rbp-0x188]
  406af7:	cmp    rax,QWORD PTR [rbp-0x1c0]
  406afe:	jb     4067e2 <memcpy@plt+0x3d32>
  406b04:	jmp    406b07 <memcpy@plt+0x4057>
  406b06:	nop
  406b07:	mov    eax,0x1
  406b0c:	mov    rsi,QWORD PTR [rbp-0x8]
  406b10:	xor    rsi,QWORD PTR fs:0x28
  406b19:	je     406b20 <memcpy@plt+0x4070>
  406b1b:	call   402950 <__stack_chk_fail@plt>
  406b20:	leave  
  406b21:	ret    
  406b22:	endbr64 
  406b26:	push   rbp
  406b27:	mov    rbp,rsp
  406b2a:	sub    rsp,0x4e0
  406b31:	mov    QWORD PTR [rbp-0x4d8],rdi
  406b38:	mov    QWORD PTR [rbp-0x4e0],rsi
  406b3f:	mov    rax,QWORD PTR fs:0x28
  406b48:	mov    QWORD PTR [rbp-0x8],rax
  406b4c:	xor    eax,eax
  406b4e:	mov    QWORD PTR [rbp-0x4b8],0x0
  406b59:	mov    QWORD PTR [rbp-0x4b0],0x0
  406b64:	mov    DWORD PTR [rbp-0x4c8],0x80
  406b6e:	mov    rax,QWORD PTR [rbp-0x4d8]
  406b75:	mov    rdi,rax
  406b78:	call   402610 <rb_get_fd@plt>
  406b7d:	mov    edi,eax
  406b7f:	lea    rcx,[rbp-0x4c8]
  406b86:	lea    rdx,[rbp-0x4a0]
  406b8d:	lea    rax,[rbp-0x420]
  406b94:	mov    r9,rcx
  406b97:	mov    r8,rdx
  406b9a:	mov    ecx,0x0
  406b9f:	mov    edx,0x40c
  406ba4:	mov    rsi,rax
  406ba7:	call   402a10 <recvfrom@plt>
  406bac:	mov    DWORD PTR [rbp-0x4c4],eax
  406bb2:	cmp    DWORD PTR [rbp-0x4c4],0x0
  406bb9:	je     406bc4 <memcpy@plt+0x4114>
  406bbb:	cmp    DWORD PTR [rbp-0x4c4],0xffffffff
  406bc2:	jne    406bce <memcpy@plt+0x411e>
  406bc4:	mov    eax,0x0
  406bc9:	jmp    4070c6 <memcpy@plt+0x4616>
  406bce:	cmp    DWORD PTR [rbp-0x4c4],0xc
  406bd5:	jg     406be1 <memcpy@plt+0x4131>
  406bd7:	mov    eax,0x1
  406bdc:	jmp    4070c6 <memcpy@plt+0x4616>
  406be1:	lea    rax,[rbp-0x420]
  406be8:	mov    QWORD PTR [rbp-0x4a8],rax
  406bef:	mov    rax,QWORD PTR [rbp-0x4a8]
  406bf6:	movzx  eax,WORD PTR [rax+0x6]
  406bfa:	movzx  eax,ax
  406bfd:	mov    edi,eax
  406bff:	call   4027c0 <ntohs@plt>
  406c04:	mov    edx,eax
  406c06:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c0d:	mov    WORD PTR [rax+0x6],dx
  406c11:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c18:	movzx  eax,WORD PTR [rax+0x4]
  406c1c:	movzx  eax,ax
  406c1f:	mov    edi,eax
  406c21:	call   4027c0 <ntohs@plt>
  406c26:	mov    edx,eax
  406c28:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c2f:	mov    WORD PTR [rax+0x4],dx
  406c33:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c3a:	movzx  eax,WORD PTR [rax+0x8]
  406c3e:	movzx  eax,ax
  406c41:	mov    edi,eax
  406c43:	call   4027c0 <ntohs@plt>
  406c48:	mov    edx,eax
  406c4a:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c51:	mov    WORD PTR [rax+0x8],dx
  406c55:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c5c:	movzx  eax,WORD PTR [rax+0xa]
  406c60:	movzx  eax,ax
  406c63:	mov    edi,eax
  406c65:	call   4027c0 <ntohs@plt>
  406c6a:	mov    edx,eax
  406c6c:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c73:	mov    WORD PTR [rax+0xa],dx
  406c77:	mov    rax,QWORD PTR [rbp-0x4a8]
  406c7e:	movzx  eax,WORD PTR [rax]
  406c81:	movzx  eax,ax
  406c84:	mov    edi,eax
  406c86:	call   405c65 <memcpy@plt+0x31b5>
  406c8b:	mov    QWORD PTR [rbp-0x4b8],rax
  406c92:	cmp    QWORD PTR [rbp-0x4b8],0x0
  406c9a:	jne    406ca6 <memcpy@plt+0x41f6>
  406c9c:	mov    eax,0x1
  406ca1:	jmp    4070c6 <memcpy@plt+0x4616>
  406ca6:	lea    rax,[rbp-0x4a0]
  406cad:	mov    rdi,rax
  406cb0:	call   40548d <memcpy@plt+0x29dd>
  406cb5:	mov    DWORD PTR [rbp-0x4c0],eax
  406cbb:	cmp    DWORD PTR [rbp-0x4c0],0xffffffff
  406cc2:	jne    406cce <memcpy@plt+0x421e>
  406cc4:	mov    eax,0x1
  406cc9:	jmp    4070c6 <memcpy@plt+0x4616>
  406cce:	mov    rax,QWORD PTR [rbp-0x4b8]
  406cd5:	mov    eax,DWORD PTR [rax+0x140]
  406cdb:	cmp    DWORD PTR [rbp-0x4c0],eax
  406ce1:	je     406d1a <memcpy@plt+0x426a>
  406ce3:	mov    eax,DWORD PTR [rbp-0x4c0]
  406ce9:	cdqe   
  406ceb:	lea    rdx,[rax*4+0x0]
  406cf3:	lea    rax,[rip+0x13366]        # 41a060 <memcpy@plt+0x175b0>
  406cfa:	mov    eax,DWORD PTR [rdx+rax*1]
  406cfd:	lea    ecx,[rax+0x3]
  406d00:	mov    eax,DWORD PTR [rbp-0x4c0]
  406d06:	cdqe   
  406d08:	lea    rdx,[rax*4+0x0]
  406d10:	lea    rax,[rip+0x13349]        # 41a060 <memcpy@plt+0x175b0>
  406d17:	mov    DWORD PTR [rdx+rax*1],ecx
  406d1a:	mov    eax,DWORD PTR [rbp-0x4c4]
  406d20:	cdqe   
  406d22:	lea    rdx,[rbp-0x420]
  406d29:	lea    rcx,[rdx+rax*1]
  406d2d:	lea    rdx,[rbp-0x420]
  406d34:	mov    rsi,QWORD PTR [rbp-0x4a8]
  406d3b:	mov    rax,QWORD PTR [rbp-0x4b8]
  406d42:	mov    rdi,rax
  406d45:	call   40663b <memcpy@plt+0x3b8b>
  406d4a:	test   eax,eax
  406d4c:	jne    406d58 <memcpy@plt+0x42a8>
  406d4e:	mov    eax,0x1
  406d53:	jmp    4070c6 <memcpy@plt+0x4616>
  406d58:	mov    rax,QWORD PTR [rbp-0x4a8]
  406d5f:	movzx  eax,BYTE PTR [rax+0x3]
  406d63:	and    eax,0xf
  406d66:	test   al,al
  406d68:	jne    406d7e <memcpy@plt+0x42ce>
  406d6a:	mov    rax,QWORD PTR [rbp-0x4a8]
  406d71:	movzx  eax,WORD PTR [rax+0x6]
  406d75:	test   ax,ax
  406d78:	jne    406e98 <memcpy@plt+0x43e8>
  406d7e:	mov    rax,QWORD PTR [rbp-0x4a8]
  406d85:	movzx  eax,BYTE PTR [rax+0x3]
  406d89:	and    eax,0xf
  406d8c:	cmp    al,0x2
  406d8e:	je     406db4 <memcpy@plt+0x4304>
  406d90:	mov    rax,QWORD PTR [rbp-0x4a8]
  406d97:	movzx  eax,BYTE PTR [rax+0x3]
  406d9b:	and    eax,0xf
  406d9e:	cmp    al,0x4
  406da0:	je     406db4 <memcpy@plt+0x4304>
  406da2:	mov    rax,QWORD PTR [rbp-0x4a8]
  406da9:	movzx  eax,BYTE PTR [rax+0x3]
  406dad:	and    eax,0xf
  406db0:	cmp    al,0x5
  406db2:	jne    406dff <memcpy@plt+0x434f>
  406db4:	mov    eax,DWORD PTR [rbp-0x4c0]
  406dba:	cdqe   
  406dbc:	lea    rdx,[rax*4+0x0]
  406dc4:	lea    rax,[rip+0x13295]        # 41a060 <memcpy@plt+0x175b0>
  406dcb:	mov    eax,DWORD PTR [rdx+rax*1]
  406dce:	lea    ecx,[rax+0x1]
  406dd1:	mov    eax,DWORD PTR [rbp-0x4c0]
  406dd7:	cdqe   
  406dd9:	lea    rdx,[rax*4+0x0]
  406de1:	lea    rax,[rip+0x13278]        # 41a060 <memcpy@plt+0x175b0>
  406de8:	mov    DWORD PTR [rdx+rax*1],ecx
  406deb:	mov    rax,QWORD PTR [rbp-0x4b8]
  406df2:	mov    rdi,rax
  406df5:	call   406567 <memcpy@plt+0x3ab7>
  406dfa:	jmp    406e8e <memcpy@plt+0x43de>
  406dff:	mov    rax,QWORD PTR [rbp-0x4a8]
  406e06:	movzx  eax,BYTE PTR [rax+0x3]
  406e0a:	and    eax,0xf
  406e0d:	cmp    al,0x3
  406e0f:	jne    406e52 <memcpy@plt+0x43a2>
  406e11:	mov    eax,DWORD PTR [rbp-0x4c0]
  406e17:	cdqe   
  406e19:	lea    rdx,[rax*4+0x0]
  406e21:	lea    rax,[rip+0x13238]        # 41a060 <memcpy@plt+0x175b0>
  406e28:	mov    eax,DWORD PTR [rdx+rax*1]
  406e2b:	lea    edx,[rax+0x3]
  406e2e:	test   eax,eax
  406e30:	cmovs  eax,edx
  406e33:	sar    eax,0x2
  406e36:	mov    ecx,eax
  406e38:	mov    eax,DWORD PTR [rbp-0x4c0]
  406e3e:	cdqe   
  406e40:	lea    rdx,[rax*4+0x0]
  406e48:	lea    rax,[rip+0x13211]        # 41a060 <memcpy@plt+0x175b0>
  406e4f:	mov    DWORD PTR [rdx+rax*1],ecx
  406e52:	mov    rax,QWORD PTR [rbp-0x4b8]
  406e59:	mov    rax,QWORD PTR [rax+0x1d0]
  406e60:	mov    rax,QWORD PTR [rax+0x8]
  406e64:	mov    rdx,QWORD PTR [rbp-0x4b8]
  406e6b:	mov    rdx,QWORD PTR [rdx+0x1d0]
  406e72:	mov    rdx,QWORD PTR [rdx]
  406e75:	mov    esi,0x0
  406e7a:	mov    rdi,rdx
  406e7d:	call   rax
  406e7f:	mov    rax,QWORD PTR [rbp-0x4b8]
  406e86:	mov    rdi,rax
  406e89:	call   405912 <memcpy@plt+0x2e62>
  406e8e:	mov    eax,0x1
  406e93:	jmp    4070c6 <memcpy@plt+0x4616>
  406e98:	mov    eax,DWORD PTR [rbp-0x4c4]
  406e9e:	cdqe   
  406ea0:	lea    rdx,[rbp-0x420]
  406ea7:	lea    rcx,[rdx+rax*1]
  406eab:	lea    rdx,[rbp-0x420]
  406eb2:	mov    rsi,QWORD PTR [rbp-0x4a8]
  406eb9:	mov    rax,QWORD PTR [rbp-0x4b8]
  406ec0:	mov    rdi,rax
  406ec3:	call   406722 <memcpy@plt+0x3c72>
  406ec8:	mov    DWORD PTR [rbp-0x4bc],eax
  406ece:	cmp    DWORD PTR [rbp-0x4bc],0x0
  406ed5:	je     40707b <memcpy@plt+0x45cb>
  406edb:	mov    rax,QWORD PTR [rbp-0x4b8]
  406ee2:	movzx  eax,BYTE PTR [rax+0x28]
  406ee6:	cmp    al,0xc
  406ee8:	jne    406fd2 <memcpy@plt+0x4522>
  406eee:	mov    rax,QWORD PTR [rbp-0x4b8]
  406ef5:	mov    rax,QWORD PTR [rax+0x1c8]
  406efc:	test   rax,rax
  406eff:	jne    406f51 <memcpy@plt+0x44a1>
  406f01:	mov    eax,DWORD PTR [rbp-0x4c0]
  406f07:	cdqe   
  406f09:	lea    rdx,[rax*4+0x0]
  406f11:	lea    rax,[rip+0x13148]        # 41a060 <memcpy@plt+0x175b0>
  406f18:	mov    eax,DWORD PTR [rdx+rax*1]
  406f1b:	lea    ecx,[rax+0x1]
  406f1e:	mov    eax,DWORD PTR [rbp-0x4c0]
  406f24:	cdqe   
  406f26:	lea    rdx,[rax*4+0x0]
  406f2e:	lea    rax,[rip+0x1312b]        # 41a060 <memcpy@plt+0x175b0>
  406f35:	mov    DWORD PTR [rdx+rax*1],ecx
  406f38:	mov    rax,QWORD PTR [rbp-0x4b8]
  406f3f:	mov    rdi,rax
  406f42:	call   406567 <memcpy@plt+0x3ab7>
  406f47:	mov    eax,0x1
  406f4c:	jmp    4070c6 <memcpy@plt+0x4616>
  406f51:	mov    rax,QWORD PTR [rbp-0x4b8]
  406f58:	add    rax,0x148
  406f5e:	movzx  eax,WORD PTR [rax]
  406f61:	cmp    ax,0xa
  406f65:	jne    406f95 <memcpy@plt+0x44e5>
  406f67:	mov    rax,QWORD PTR [rbp-0x4b8]
  406f6e:	mov    rcx,QWORD PTR [rax+0x1d0]
  406f75:	mov    rax,QWORD PTR [rbp-0x4b8]
  406f7c:	mov    rax,QWORD PTR [rax+0x1c8]
  406f83:	mov    edx,0x1c
  406f88:	mov    rsi,rcx
  406f8b:	mov    rdi,rax
  406f8e:	call   405dd8 <memcpy@plt+0x3328>
  406f93:	jmp    406fc1 <memcpy@plt+0x4511>
  406f95:	mov    rax,QWORD PTR [rbp-0x4b8]
  406f9c:	mov    rcx,QWORD PTR [rax+0x1d0]
  406fa3:	mov    rax,QWORD PTR [rbp-0x4b8]
  406faa:	mov    rax,QWORD PTR [rax+0x1c8]
  406fb1:	mov    edx,0x1
  406fb6:	mov    rsi,rcx
  406fb9:	mov    rdi,rax
  406fbc:	call   405dd8 <memcpy@plt+0x3328>
  406fc1:	mov    rax,QWORD PTR [rbp-0x4b8]
  406fc8:	mov    rdi,rax
  406fcb:	call   405912 <memcpy@plt+0x2e62>
  406fd0:	jmp    407038 <memcpy@plt+0x4588>
  406fd2:	mov    rax,QWORD PTR [rbp-0x4b8]
  406fd9:	mov    rdi,rax
  406fdc:	call   407128 <memcpy@plt+0x4678>
  406fe1:	mov    QWORD PTR [rbp-0x4b0],rax
  406fe8:	mov    rax,QWORD PTR [rbp-0x4b8]
  406fef:	mov    rax,QWORD PTR [rax+0x1d0]
  406ff6:	mov    rax,QWORD PTR [rax+0x8]
  406ffa:	mov    rdx,QWORD PTR [rbp-0x4b8]
  407001:	mov    rdx,QWORD PTR [rdx+0x1d0]
  407008:	mov    rdx,QWORD PTR [rdx]
  40700b:	mov    rcx,QWORD PTR [rbp-0x4b0]
  407012:	mov    rsi,rcx
  407015:	mov    rdi,rdx
  407018:	call   rax
  40701a:	mov    rax,QWORD PTR [rbp-0x4b0]
  407021:	mov    rdi,rax
  407024:	call   405462 <memcpy@plt+0x29b2>
  407029:	mov    rax,QWORD PTR [rbp-0x4b8]
  407030:	mov    rdi,rax
  407033:	call   405912 <memcpy@plt+0x2e62>
  407038:	mov    eax,DWORD PTR [rbp-0x4c0]
  40703e:	cdqe   
  407040:	lea    rdx,[rax*4+0x0]
  407048:	lea    rax,[rip+0x13011]        # 41a060 <memcpy@plt+0x175b0>
  40704f:	mov    eax,DWORD PTR [rdx+rax*1]
  407052:	lea    edx,[rax+0x3]
  407055:	test   eax,eax
  407057:	cmovs  eax,edx
  40705a:	sar    eax,0x2
  40705d:	mov    ecx,eax
  40705f:	mov    eax,DWORD PTR [rbp-0x4c0]
  407065:	cdqe   
  407067:	lea    rdx,[rax*4+0x0]
  40706f:	lea    rax,[rip+0x12fea]        # 41a060 <memcpy@plt+0x175b0>
  407076:	mov    DWORD PTR [rdx+rax*1],ecx
  407079:	jmp    4070c1 <memcpy@plt+0x4611>
  40707b:	mov    eax,DWORD PTR [rbp-0x4c0]
  407081:	cdqe   
  407083:	lea    rdx,[rax*4+0x0]
  40708b:	lea    rax,[rip+0x12fce]        # 41a060 <memcpy@plt+0x175b0>
  407092:	mov    eax,DWORD PTR [rdx+rax*1]
  407095:	lea    ecx,[rax+0x1]
  407098:	mov    eax,DWORD PTR [rbp-0x4c0]
  40709e:	cdqe   
  4070a0:	lea    rdx,[rax*4+0x0]
  4070a8:	lea    rax,[rip+0x12fb1]        # 41a060 <memcpy@plt+0x175b0>
  4070af:	mov    DWORD PTR [rdx+rax*1],ecx
  4070b2:	mov    rax,QWORD PTR [rbp-0x4b8]
  4070b9:	mov    rdi,rax
  4070bc:	call   406567 <memcpy@plt+0x3ab7>
  4070c1:	mov    eax,0x1
  4070c6:	mov    rsi,QWORD PTR [rbp-0x8]
  4070ca:	xor    rsi,QWORD PTR fs:0x28
  4070d3:	je     4070da <memcpy@plt+0x462a>
  4070d5:	call   402950 <__stack_chk_fail@plt>
  4070da:	leave  
  4070db:	ret    
  4070dc:	endbr64 
  4070e0:	push   rbp
  4070e1:	mov    rbp,rsp
  4070e4:	sub    rsp,0x10
  4070e8:	mov    QWORD PTR [rbp-0x8],rdi
  4070ec:	mov    QWORD PTR [rbp-0x10],rsi
  4070f0:	nop
  4070f1:	mov    rdx,QWORD PTR [rbp-0x10]
  4070f5:	mov    rax,QWORD PTR [rbp-0x8]
  4070f9:	mov    rsi,rdx
  4070fc:	mov    rdi,rax
  4070ff:	call   406b22 <memcpy@plt+0x4072>
  407104:	test   eax,eax
  407106:	jne    4070f1 <memcpy@plt+0x4641>
  407108:	mov    rax,QWORD PTR [rbp-0x8]
  40710c:	mov    ecx,0x0
  407111:	lea    rdx,[rip+0xffffffffffffffc4]        # 4070dc <memcpy@plt+0x462c>
  407118:	mov    esi,0x1
  40711d:	mov    rdi,rax
  407120:	call   402600 <rb_setselect@plt>
  407125:	nop
  407126:	leave  
  407127:	ret    
  407128:	endbr64 
  40712c:	push   rbp
  40712d:	mov    rbp,rsp
  407130:	sub    rsp,0x20
  407134:	mov    QWORD PTR [rbp-0x18],rdi
  407138:	cmp    QWORD PTR [rbp-0x18],0x0
  40713d:	setne  al
  407140:	movzx  eax,al
  407143:	test   rax,rax
  407146:	jne    407192 <memcpy@plt+0x46e2>
  407148:	lea    r8,[rip+0x8594]        # 40f6e3 <memcpy@plt+0xcc33>
  40714f:	lea    rcx,[rip+0x864a]        # 40f7a0 <memcpy@plt+0xccf0>
  407156:	mov    edx,0x36e
  40715b:	lea    rsi,[rip+0x84e3]        # 40f645 <memcpy@plt+0xcb95>
  407162:	lea    rdi,[rip+0x8587]        # 40f6f0 <memcpy@plt+0xcc40>
  407169:	mov    eax,0x0
  40716e:	call   4028a0 <rb_lib_log@plt>
  407173:	lea    rcx,[rip+0x8626]        # 40f7a0 <memcpy@plt+0xccf0>
  40717a:	mov    edx,0x36e
  40717f:	lea    rsi,[rip+0x84bf]        # 40f645 <memcpy@plt+0xcb95>
  407186:	lea    rdi,[rip+0x8592]        # 40f71f <memcpy@plt+0xcc6f>
  40718d:	call   402640 <__assert_fail@plt>
  407192:	mov    edi,0x88
  407197:	call   4053d1 <memcpy@plt+0x2921>
  40719c:	mov    QWORD PTR [rbp-0x8],rax
  4071a0:	mov    rax,QWORD PTR [rbp-0x18]
  4071a4:	mov    rdx,QWORD PTR [rax+0x1c8]
  4071ab:	mov    rax,QWORD PTR [rbp-0x8]
  4071af:	mov    QWORD PTR [rax],rdx
  4071b2:	mov    rax,QWORD PTR [rbp-0x18]
  4071b6:	lea    rcx,[rax+0x148]
  4071bd:	mov    rax,QWORD PTR [rbp-0x8]
  4071c1:	add    rax,0x8
  4071c5:	mov    edx,0x80
  4071ca:	mov    rsi,rcx
  4071cd:	mov    rdi,rax
  4071d0:	call   402ab0 <memcpy@plt>
  4071d5:	mov    rax,QWORD PTR [rbp-0x8]
  4071d9:	leave  
  4071da:	ret    
  4071db:	endbr64 
  4071df:	push   rbp
  4071e0:	mov    rbp,rsp
  4071e3:	mov    rax,0x41a094
  4071ea:	mov    DWORD PTR [rax],0x0
  4071f0:	call   407215 <memcpy@plt+0x4765>
  4071f5:	mov    rax,0x41a094
  4071fc:	mov    eax,DWORD PTR [rax]
  4071fe:	test   eax,eax
  407200:	jne    40720e <memcpy@plt+0x475e>
  407202:	lea    rdi,[rip+0x86c2]        # 40f8cb <memcpy@plt+0xce1b>
  407209:	call   4074ac <memcpy@plt+0x49fc>
  40720e:	mov    eax,0x0
  407213:	pop    rbp
  407214:	ret    
  407215:	endbr64 
  407219:	push   rbp
  40721a:	mov    rbp,rsp
  40721d:	sub    rsp,0xb0
  407224:	mov    rax,QWORD PTR fs:0x28
  40722d:	mov    QWORD PTR [rbp-0x8],rax
  407231:	xor    eax,eax
  407233:	lea    rsi,[rip+0x869b]        # 40f8d5 <memcpy@plt+0xce25>
  40723a:	lea    rdi,[rip+0x8696]        # 40f8d7 <memcpy@plt+0xce27>
  407241:	call   4026e0 <fopen@plt>
  407246:	mov    QWORD PTR [rbp-0xa8],rax
  40724d:	cmp    QWORD PTR [rbp-0xa8],0x0
  407255:	jne    40745e <memcpy@plt+0x49ae>
  40725b:	mov    eax,0xffffffff
  407260:	jmp    407496 <memcpy@plt+0x49e6>
  407265:	lea    rax,[rbp-0x90]
  40726c:	lea    rsi,[rip+0x8675]        # 40f8e8 <memcpy@plt+0xce38>
  407273:	mov    rdi,rax
  407276:	call   4026a0 <strpbrk@plt>
  40727b:	mov    QWORD PTR [rbp-0xb0],rax
  407282:	cmp    QWORD PTR [rbp-0xb0],0x0
  40728a:	je     407296 <memcpy@plt+0x47e6>
  40728c:	mov    rax,QWORD PTR [rbp-0xb0]
  407293:	mov    BYTE PTR [rax],0x0
  407296:	lea    rax,[rbp-0x90]
  40729d:	mov    QWORD PTR [rbp-0xb0],rax
  4072a4:	jmp    4072ad <memcpy@plt+0x47fd>
  4072a6:	inc    QWORD PTR [rbp-0xb0]
  4072ad:	call   402790 <__ctype_b_loc@plt>
  4072b2:	mov    rdx,QWORD PTR [rax]
  4072b5:	mov    rax,QWORD PTR [rbp-0xb0]
  4072bc:	movzx  eax,BYTE PTR [rax]
  4072bf:	movsx  rax,al
  4072c3:	add    rax,rax
  4072c6:	add    rax,rdx
  4072c9:	movzx  eax,WORD PTR [rax]
  4072cc:	movzx  eax,ax
  4072cf:	and    eax,0x2000
  4072d4:	test   eax,eax
  4072d6:	jne    4072a6 <memcpy@plt+0x47f6>
  4072d8:	mov    rax,QWORD PTR [rbp-0xb0]
  4072df:	movzx  eax,BYTE PTR [rax]
  4072e2:	test   al,al
  4072e4:	jne    4072eb <memcpy@plt+0x483b>
  4072e6:	jmp    40745e <memcpy@plt+0x49ae>
  4072eb:	mov    rax,QWORD PTR [rbp-0xb0]
  4072f2:	movzx  eax,BYTE PTR [rax]
  4072f5:	cmp    al,0x23
  4072f7:	je     40745e <memcpy@plt+0x49ae>
  4072fd:	mov    rax,QWORD PTR [rbp-0xb0]
  407304:	movzx  eax,BYTE PTR [rax]
  407307:	cmp    al,0x3b
  407309:	jne    407310 <memcpy@plt+0x4860>
  40730b:	jmp    40745e <memcpy@plt+0x49ae>
  407310:	mov    rax,QWORD PTR [rbp-0xb0]
  407317:	mov    QWORD PTR [rbp-0xa0],rax
  40731e:	jmp    407327 <memcpy@plt+0x4877>
  407320:	inc    QWORD PTR [rbp-0xb0]
  407327:	call   402790 <__ctype_b_loc@plt>
  40732c:	mov    rdx,QWORD PTR [rax]
  40732f:	mov    rax,QWORD PTR [rbp-0xb0]
  407336:	movzx  eax,BYTE PTR [rax]
  407339:	movsx  rax,al
  40733d:	add    rax,rax
  407340:	add    rax,rdx
  407343:	movzx  eax,WORD PTR [rax]
  407346:	movzx  eax,ax
  407349:	and    eax,0x2000
  40734e:	test   eax,eax
  407350:	jne    407360 <memcpy@plt+0x48b0>
  407352:	mov    rax,QWORD PTR [rbp-0xb0]
  407359:	movzx  eax,BYTE PTR [rax]
  40735c:	test   al,al
  40735e:	jne    407320 <memcpy@plt+0x4870>
  407360:	mov    rax,QWORD PTR [rbp-0xb0]
  407367:	movzx  eax,BYTE PTR [rax]
  40736a:	test   al,al
  40736c:	jne    407373 <memcpy@plt+0x48c3>
  40736e:	jmp    40745e <memcpy@plt+0x49ae>
  407373:	mov    rax,QWORD PTR [rbp-0xb0]
  40737a:	lea    rdx,[rax+0x1]
  40737e:	mov    QWORD PTR [rbp-0xb0],rdx
  407385:	mov    BYTE PTR [rax],0x0
  407388:	jmp    407391 <memcpy@plt+0x48e1>
  40738a:	inc    QWORD PTR [rbp-0xb0]
  407391:	call   402790 <__ctype_b_loc@plt>
  407396:	mov    rdx,QWORD PTR [rax]
  407399:	mov    rax,QWORD PTR [rbp-0xb0]
  4073a0:	movzx  eax,BYTE PTR [rax]
  4073a3:	movsx  rax,al
  4073a7:	add    rax,rax
  4073aa:	add    rax,rdx
  4073ad:	movzx  eax,WORD PTR [rax]
  4073b0:	movzx  eax,ax
  4073b3:	and    eax,0x2000
  4073b8:	test   eax,eax
  4073ba:	jne    40738a <memcpy@plt+0x48da>
  4073bc:	mov    rax,QWORD PTR [rbp-0xb0]
  4073c3:	mov    QWORD PTR [rbp-0x98],rax
  4073ca:	mov    rax,QWORD PTR [rbp-0x98]
  4073d1:	lea    rsi,[rip+0x8513]        # 40f8eb <memcpy@plt+0xce3b>
  4073d8:	mov    rdi,rax
  4073db:	call   4026a0 <strpbrk@plt>
  4073e0:	mov    QWORD PTR [rbp-0xb0],rax
  4073e7:	cmp    QWORD PTR [rbp-0xb0],0x0
  4073ef:	je     4073fb <memcpy@plt+0x494b>
  4073f1:	mov    rax,QWORD PTR [rbp-0xb0]
  4073f8:	mov    BYTE PTR [rax],0x0
  4073fb:	mov    rax,QWORD PTR [rbp-0xa0]
  407402:	lea    rsi,[rip+0x84e5]        # 40f8ee <memcpy@plt+0xce3e>
  407409:	mov    rdi,rax
  40740c:	call   402570 <rb_strcasecmp@plt>
  407411:	test   eax,eax
  407413:	jne    407435 <memcpy@plt+0x4985>
  407415:	mov    rax,QWORD PTR [rbp-0x98]
  40741c:	mov    edx,0x100
  407421:	mov    rsi,rax
  407424:	mov    rax,0x41a2c0
  40742b:	mov    rdi,rax
  40742e:	call   402720 <rb_strlcpy@plt>
  407433:	jmp    40745e <memcpy@plt+0x49ae>
  407435:	mov    rax,QWORD PTR [rbp-0xa0]
  40743c:	lea    rsi,[rip+0x84b2]        # 40f8f5 <memcpy@plt+0xce45>
  407443:	mov    rdi,rax
  407446:	call   402570 <rb_strcasecmp@plt>
  40744b:	test   eax,eax
  40744d:	jne    40745e <memcpy@plt+0x49ae>
  40744f:	mov    rax,QWORD PTR [rbp-0x98]
  407456:	mov    rdi,rax
  407459:	call   4074ac <memcpy@plt+0x49fc>
  40745e:	mov    rdx,QWORD PTR [rbp-0xa8]
  407465:	lea    rax,[rbp-0x90]
  40746c:	mov    esi,0x80
  407471:	mov    rdi,rax
  407474:	call   402710 <fgets@plt>
  407479:	test   rax,rax
  40747c:	jne    407265 <memcpy@plt+0x47b5>
  407482:	mov    rax,QWORD PTR [rbp-0xa8]
  407489:	mov    rdi,rax
  40748c:	call   402a00 <fclose@plt>
  407491:	mov    eax,0x0
  407496:	mov    rcx,QWORD PTR [rbp-0x8]
  40749a:	xor    rcx,QWORD PTR fs:0x28
  4074a3:	je     4074aa <memcpy@plt+0x49fa>
  4074a5:	call   402950 <__stack_chk_fail@plt>
  4074aa:	leave  
  4074ab:	ret    
  4074ac:	endbr64 
  4074b0:	push   rbp
  4074b1:	mov    rbp,rsp
  4074b4:	sub    rsp,0x60
  4074b8:	mov    QWORD PTR [rbp-0x58],rdi
  4074bc:	mov    rax,QWORD PTR fs:0x28
  4074c5:	mov    QWORD PTR [rbp-0x8],rax
  4074c9:	xor    eax,eax
  4074cb:	mov    rax,0x41a094
  4074d2:	mov    eax,DWORD PTR [rax]
  4074d4:	cmp    eax,0x9
  4074d7:	jg     4075d6 <memcpy@plt+0x4b26>
  4074dd:	lea    rax,[rbp-0x40]
  4074e1:	mov    edx,0x30
  4074e6:	mov    esi,0x0
  4074eb:	mov    rdi,rax
  4074ee:	call   402590 <memset@plt>
  4074f3:	mov    DWORD PTR [rbp-0x3c],0x0
  4074fa:	mov    DWORD PTR [rbp-0x38],0x2
  407501:	mov    DWORD PTR [rbp-0x40],0x5
  407508:	lea    rcx,[rbp-0x48]
  40750c:	lea    rdx,[rbp-0x40]
  407510:	mov    rax,QWORD PTR [rbp-0x58]
  407514:	lea    rsi,[rip+0x83d3]        # 40f8ee <memcpy@plt+0xce3e>
  40751b:	mov    rdi,rax
  40751e:	call   402650 <getaddrinfo@plt>
  407523:	test   eax,eax
  407525:	jne    4075d9 <memcpy@plt+0x4b29>
  40752b:	mov    rax,QWORD PTR [rbp-0x48]
  40752f:	test   rax,rax
  407532:	je     4075dc <memcpy@plt+0x4b2c>
  407538:	mov    rax,QWORD PTR [rbp-0x48]
  40753c:	mov    eax,DWORD PTR [rax+0x10]
  40753f:	mov    esi,eax
  407541:	mov    rax,QWORD PTR [rbp-0x48]
  407545:	mov    rax,QWORD PTR [rax+0x18]
  407549:	mov    rdx,0x41a094
  407550:	mov    edx,DWORD PTR [rdx]
  407552:	movsxd rdx,edx
  407555:	mov    rcx,rdx
  407558:	shl    rcx,0x7
  40755c:	mov    rdx,0x41a3c0
  407563:	add    rcx,rdx
  407566:	mov    rdx,rsi
  407569:	mov    rsi,rax
  40756c:	mov    rdi,rcx
  40756f:	call   402ab0 <memcpy@plt>
  407574:	mov    rax,0x41a094
  40757b:	mov    eax,DWORD PTR [rax]
  40757d:	cdqe   
  40757f:	shl    rax,0x7
  407583:	mov    rdx,rax
  407586:	mov    rax,0x41a3c0
  40758d:	lea    rcx,[rdx+rax*1]
  407591:	mov    rax,0x41a094
  407598:	mov    eax,DWORD PTR [rax]
  40759a:	cdqe   
  40759c:	shl    rax,0x7
  4075a0:	mov    rdx,rax
  4075a3:	mov    rax,0x41a3c0
  4075aa:	add    rdx,rax
  4075ad:	movzx  eax,WORD PTR [rcx]
  4075b0:	mov    WORD PTR [rdx],ax
  4075b3:	mov    rax,0x41a094
  4075ba:	mov    eax,DWORD PTR [rax]
  4075bc:	lea    edx,[rax+0x1]
  4075bf:	mov    rax,0x41a094
  4075c6:	mov    DWORD PTR [rax],edx
  4075c8:	mov    rax,QWORD PTR [rbp-0x48]
  4075cc:	mov    rdi,rax
  4075cf:	call   402740 <freeaddrinfo@plt>
  4075d4:	jmp    4075dd <memcpy@plt+0x4b2d>
  4075d6:	nop
  4075d7:	jmp    4075dd <memcpy@plt+0x4b2d>
  4075d9:	nop
  4075da:	jmp    4075dd <memcpy@plt+0x4b2d>
  4075dc:	nop
  4075dd:	mov    rax,QWORD PTR [rbp-0x8]
  4075e1:	xor    rax,QWORD PTR fs:0x28
  4075ea:	je     4075f1 <memcpy@plt+0x4b41>
  4075ec:	call   402950 <__stack_chk_fail@plt>
  4075f1:	leave  
  4075f2:	ret    
  4075f3:	endbr64 
  4075f7:	push   rbp
  4075f8:	mov    rbp,rsp
  4075fb:	sub    rsp,0x40
  4075ff:	mov    QWORD PTR [rbp-0x18],rdi
  407603:	mov    QWORD PTR [rbp-0x20],rsi
  407607:	mov    QWORD PTR [rbp-0x28],rdx
  40760b:	mov    QWORD PTR [rbp-0x30],rcx
  40760f:	mov    DWORD PTR [rbp-0x34],r8d
  407613:	mov    eax,DWORD PTR [rbp-0x34]
  407616:	movsxd rdi,eax
  407619:	mov    rcx,QWORD PTR [rbp-0x30]
  40761d:	mov    rdx,QWORD PTR [rbp-0x28]
  407621:	mov    rsi,QWORD PTR [rbp-0x20]
  407625:	mov    rax,QWORD PTR [rbp-0x18]
  407629:	mov    r8,rdi
  40762c:	mov    rdi,rax
  40762f:	call   407654 <memcpy@plt+0x4ba4>
  407634:	mov    DWORD PTR [rbp-0x4],eax
  407637:	cmp    DWORD PTR [rbp-0x4],0x0
  40763b:	jle    40764f <memcpy@plt+0x4b9f>
  40763d:	mov    rax,QWORD PTR [rbp-0x30]
  407641:	movzx  eax,BYTE PTR [rax]
  407644:	cmp    al,0x2e
  407646:	jne    40764f <memcpy@plt+0x4b9f>
  407648:	mov    rax,QWORD PTR [rbp-0x30]
  40764c:	mov    BYTE PTR [rax],0x0
  40764f:	mov    eax,DWORD PTR [rbp-0x4]
  407652:	leave  
  407653:	ret    
  407654:	endbr64 
  407658:	push   rbp
  407659:	mov    rbp,rsp
  40765c:	sub    rsp,0x150
  407663:	mov    QWORD PTR [rbp-0x128],rdi
  40766a:	mov    QWORD PTR [rbp-0x130],rsi
  407671:	mov    QWORD PTR [rbp-0x138],rdx
  407678:	mov    QWORD PTR [rbp-0x140],rcx
  40767f:	mov    QWORD PTR [rbp-0x148],r8
  407686:	mov    rax,QWORD PTR fs:0x28
  40768f:	mov    QWORD PTR [rbp-0x8],rax
  407693:	xor    eax,eax
  407695:	lea    rcx,[rbp-0x110]
  40769c:	mov    rdx,QWORD PTR [rbp-0x138]
  4076a3:	mov    rsi,QWORD PTR [rbp-0x130]
  4076aa:	mov    rax,QWORD PTR [rbp-0x128]
  4076b1:	mov    r8d,0xff
  4076b7:	mov    rdi,rax
  4076ba:	call   40771d <memcpy@plt+0x4c6d>
  4076bf:	mov    DWORD PTR [rbp-0x114],eax
  4076c5:	cmp    DWORD PTR [rbp-0x114],0xffffffff
  4076cc:	jne    4076d5 <memcpy@plt+0x4c25>
  4076ce:	mov    eax,0xffffffff
  4076d3:	jmp    407707 <memcpy@plt+0x4c57>
  4076d5:	mov    rdx,QWORD PTR [rbp-0x148]
  4076dc:	mov    rcx,QWORD PTR [rbp-0x140]
  4076e3:	lea    rax,[rbp-0x110]
  4076ea:	mov    rsi,rcx
  4076ed:	mov    rdi,rax
  4076f0:	call   407961 <memcpy@plt+0x4eb1>
  4076f5:	cmp    eax,0xffffffff
  4076f8:	jne    407701 <memcpy@plt+0x4c51>
  4076fa:	mov    eax,0xffffffff
  4076ff:	jmp    407707 <memcpy@plt+0x4c57>
  407701:	mov    eax,DWORD PTR [rbp-0x114]
  407707:	mov    rdi,QWORD PTR [rbp-0x8]
  40770b:	xor    rdi,QWORD PTR fs:0x28
  407714:	je     40771b <memcpy@plt+0x4c6b>
  407716:	call   402950 <__stack_chk_fail@plt>
  40771b:	leave  
  40771c:	ret    
  40771d:	endbr64 
  407721:	push   rbp
  407722:	mov    rbp,rsp
  407725:	sub    rsp,0x60
  407729:	mov    QWORD PTR [rbp-0x38],rdi
  40772d:	mov    QWORD PTR [rbp-0x40],rsi
  407731:	mov    QWORD PTR [rbp-0x48],rdx
  407735:	mov    QWORD PTR [rbp-0x50],rcx
  407739:	mov    QWORD PTR [rbp-0x58],r8
  40773d:	mov    DWORD PTR [rbp-0x28],0xffffffff
  407744:	mov    DWORD PTR [rbp-0x24],0x0
  40774b:	mov    rax,QWORD PTR [rbp-0x50]
  40774f:	mov    QWORD PTR [rbp-0x10],rax
  407753:	mov    rax,QWORD PTR [rbp-0x48]
  407757:	mov    QWORD PTR [rbp-0x18],rax
  40775b:	mov    rdx,QWORD PTR [rbp-0x50]
  40775f:	mov    rax,QWORD PTR [rbp-0x58]
  407763:	add    rax,rdx
  407766:	mov    QWORD PTR [rbp-0x8],rax
  40776a:	mov    rax,QWORD PTR [rbp-0x18]
  40776e:	cmp    rax,QWORD PTR [rbp-0x38]
  407772:	jb     407782 <memcpy@plt+0x4cd2>
  407774:	mov    rax,QWORD PTR [rbp-0x18]
  407778:	cmp    rax,QWORD PTR [rbp-0x40]
  40777c:	jb     407925 <memcpy@plt+0x4e75>
  407782:	call   402910 <__errno_location@plt>
  407787:	mov    DWORD PTR [rax],0x5a
  40778d:	mov    eax,0xffffffff
  407792:	jmp    40795f <memcpy@plt+0x4eaf>
  407797:	mov    eax,DWORD PTR [rbp-0x20]
  40779a:	and    eax,0xc0
  40779f:	cmp    eax,0x40
  4077a2:	je     4077b7 <memcpy@plt+0x4d07>
  4077a4:	cmp    eax,0xc0
  4077a9:	je     40786b <memcpy@plt+0x4dbb>
  4077af:	test   eax,eax
  4077b1:	jne    407913 <memcpy@plt+0x4e63>
  4077b7:	mov    rax,QWORD PTR [rbp-0x18]
  4077bb:	dec    rax
  4077be:	mov    rdi,rax
  4077c1:	call   408049 <memcpy@plt+0x5599>
  4077c6:	mov    DWORD PTR [rbp-0x1c],eax
  4077c9:	cmp    DWORD PTR [rbp-0x1c],0x0
  4077cd:	jns    4077e4 <memcpy@plt+0x4d34>
  4077cf:	call   402910 <__errno_location@plt>
  4077d4:	mov    DWORD PTR [rax],0x5a
  4077da:	mov    eax,0xffffffff
  4077df:	jmp    40795f <memcpy@plt+0x4eaf>
  4077e4:	mov    eax,DWORD PTR [rbp-0x1c]
  4077e7:	cdqe   
  4077e9:	lea    rdx,[rax+0x1]
  4077ed:	mov    rax,QWORD PTR [rbp-0x10]
  4077f1:	add    rax,rdx
  4077f4:	cmp    QWORD PTR [rbp-0x8],rax
  4077f8:	jbe    40780d <memcpy@plt+0x4d5d>
  4077fa:	mov    eax,DWORD PTR [rbp-0x1c]
  4077fd:	movsxd rdx,eax
  407800:	mov    rax,QWORD PTR [rbp-0x18]
  407804:	add    rax,rdx
  407807:	cmp    QWORD PTR [rbp-0x40],rax
  40780b:	ja     407822 <memcpy@plt+0x4d72>
  40780d:	call   402910 <__errno_location@plt>
  407812:	mov    DWORD PTR [rax],0x5a
  407818:	mov    eax,0xffffffff
  40781d:	jmp    40795f <memcpy@plt+0x4eaf>
  407822:	mov    eax,DWORD PTR [rbp-0x1c]
  407825:	inc    eax
  407827:	add    DWORD PTR [rbp-0x24],eax
  40782a:	mov    rax,QWORD PTR [rbp-0x10]
  40782e:	lea    rdx,[rax+0x1]
  407832:	mov    QWORD PTR [rbp-0x10],rdx
  407836:	mov    edx,DWORD PTR [rbp-0x20]
  407839:	mov    BYTE PTR [rax],dl
  40783b:	mov    eax,DWORD PTR [rbp-0x1c]
  40783e:	movsxd rdx,eax
  407841:	mov    rcx,QWORD PTR [rbp-0x18]
  407845:	mov    rax,QWORD PTR [rbp-0x10]
  407849:	mov    rsi,rcx
  40784c:	mov    rdi,rax
  40784f:	call   402ab0 <memcpy@plt>
  407854:	mov    eax,DWORD PTR [rbp-0x1c]
  407857:	cdqe   
  407859:	add    QWORD PTR [rbp-0x10],rax
  40785d:	mov    eax,DWORD PTR [rbp-0x1c]
  407860:	cdqe   
  407862:	add    QWORD PTR [rbp-0x18],rax
  407866:	jmp    407925 <memcpy@plt+0x4e75>
  40786b:	mov    rax,QWORD PTR [rbp-0x18]
  40786f:	cmp    rax,QWORD PTR [rbp-0x40]
  407873:	jb     40788a <memcpy@plt+0x4dda>
  407875:	call   402910 <__errno_location@plt>
  40787a:	mov    DWORD PTR [rax],0x5a
  407880:	mov    eax,0xffffffff
  407885:	jmp    40795f <memcpy@plt+0x4eaf>
  40788a:	cmp    DWORD PTR [rbp-0x28],0x0
  40788e:	jns    40789d <memcpy@plt+0x4ded>
  407890:	mov    rax,QWORD PTR [rbp-0x18]
  407894:	sub    rax,QWORD PTR [rbp-0x48]
  407898:	inc    eax
  40789a:	mov    DWORD PTR [rbp-0x28],eax
  40789d:	mov    eax,DWORD PTR [rbp-0x20]
  4078a0:	shl    eax,0x8
  4078a3:	and    eax,0x3f00
  4078a8:	mov    edx,eax
  4078aa:	mov    rax,QWORD PTR [rbp-0x18]
  4078ae:	movzx  eax,BYTE PTR [rax]
  4078b1:	movzx  eax,al
  4078b4:	or     eax,edx
  4078b6:	movsxd rdx,eax
  4078b9:	mov    rax,QWORD PTR [rbp-0x38]
  4078bd:	add    rax,rdx
  4078c0:	mov    QWORD PTR [rbp-0x18],rax
  4078c4:	mov    rax,QWORD PTR [rbp-0x18]
  4078c8:	cmp    rax,QWORD PTR [rbp-0x38]
  4078cc:	jb     4078d8 <memcpy@plt+0x4e28>
  4078ce:	mov    rax,QWORD PTR [rbp-0x18]
  4078d2:	cmp    rax,QWORD PTR [rbp-0x40]
  4078d6:	jb     4078ea <memcpy@plt+0x4e3a>
  4078d8:	call   402910 <__errno_location@plt>
  4078dd:	mov    DWORD PTR [rax],0x5a
  4078e3:	mov    eax,0xffffffff
  4078e8:	jmp    40795f <memcpy@plt+0x4eaf>
  4078ea:	add    DWORD PTR [rbp-0x24],0x2
  4078ee:	mov    eax,DWORD PTR [rbp-0x24]
  4078f1:	movsxd rdx,eax
  4078f4:	mov    rax,QWORD PTR [rbp-0x40]
  4078f8:	sub    rax,QWORD PTR [rbp-0x38]
  4078fc:	cmp    rdx,rax
  4078ff:	jl     407925 <memcpy@plt+0x4e75>
  407901:	call   402910 <__errno_location@plt>
  407906:	mov    DWORD PTR [rax],0x5a
  40790c:	mov    eax,0xffffffff
  407911:	jmp    40795f <memcpy@plt+0x4eaf>
  407913:	call   402910 <__errno_location@plt>
  407918:	mov    DWORD PTR [rax],0x5a
  40791e:	mov    eax,0xffffffff
  407923:	jmp    40795f <memcpy@plt+0x4eaf>
  407925:	mov    rax,QWORD PTR [rbp-0x18]
  407929:	lea    rdx,[rax+0x1]
  40792d:	mov    QWORD PTR [rbp-0x18],rdx
  407931:	movzx  eax,BYTE PTR [rax]
  407934:	movzx  eax,al
  407937:	mov    DWORD PTR [rbp-0x20],eax
  40793a:	cmp    DWORD PTR [rbp-0x20],0x0
  40793e:	jne    407797 <memcpy@plt+0x4ce7>
  407944:	mov    rax,QWORD PTR [rbp-0x10]
  407948:	mov    BYTE PTR [rax],0x0
  40794b:	cmp    DWORD PTR [rbp-0x28],0x0
  40794f:	jns    40795c <memcpy@plt+0x4eac>
  407951:	mov    rax,QWORD PTR [rbp-0x18]
  407955:	sub    rax,QWORD PTR [rbp-0x48]
  407959:	mov    DWORD PTR [rbp-0x28],eax
  40795c:	mov    eax,DWORD PTR [rbp-0x28]
  40795f:	leave  
  407960:	ret    
  407961:	endbr64 
  407965:	push   rbp
  407966:	mov    rbp,rsp
  407969:	sub    rsp,0x50
  40796d:	mov    QWORD PTR [rbp-0x38],rdi
  407971:	mov    QWORD PTR [rbp-0x40],rsi
  407975:	mov    QWORD PTR [rbp-0x48],rdx
  407979:	mov    rax,QWORD PTR fs:0x28
  407982:	mov    QWORD PTR [rbp-0x8],rax
  407986:	xor    eax,eax
  407988:	mov    rax,QWORD PTR [rbp-0x38]
  40798c:	mov    QWORD PTR [rbp-0x20],rax
  407990:	mov    rax,QWORD PTR [rbp-0x40]
  407994:	mov    QWORD PTR [rbp-0x18],rax
  407998:	mov    rdx,QWORD PTR [rbp-0x40]
  40799c:	mov    rax,QWORD PTR [rbp-0x48]
  4079a0:	add    rax,rdx
  4079a3:	mov    QWORD PTR [rbp-0x10],rax
  4079a7:	jmp    407c88 <memcpy@plt+0x51d8>
  4079ac:	mov    eax,DWORD PTR [rbp-0x28]
  4079af:	and    eax,0xc0
  4079b4:	cmp    eax,0xc0
  4079b9:	jne    4079d0 <memcpy@plt+0x4f20>
  4079bb:	call   402910 <__errno_location@plt>
  4079c0:	mov    DWORD PTR [rax],0x5a
  4079c6:	mov    eax,0xffffffff
  4079cb:	jmp    407d0f <memcpy@plt+0x525f>
  4079d0:	mov    rax,QWORD PTR [rbp-0x18]
  4079d4:	cmp    rax,QWORD PTR [rbp-0x40]
  4079d8:	je     407a08 <memcpy@plt+0x4f58>
  4079da:	mov    rax,QWORD PTR [rbp-0x18]
  4079de:	cmp    rax,QWORD PTR [rbp-0x10]
  4079e2:	jb     4079f9 <memcpy@plt+0x4f49>
  4079e4:	call   402910 <__errno_location@plt>
  4079e9:	mov    DWORD PTR [rax],0x5a
  4079ef:	mov    eax,0xffffffff
  4079f4:	jmp    407d0f <memcpy@plt+0x525f>
  4079f9:	mov    rax,QWORD PTR [rbp-0x18]
  4079fd:	lea    rdx,[rax+0x1]
  407a01:	mov    QWORD PTR [rbp-0x18],rdx
  407a05:	mov    BYTE PTR [rax],0x2e
  407a08:	mov    rax,QWORD PTR [rbp-0x20]
  407a0c:	dec    rax
  407a0f:	mov    rdi,rax
  407a12:	call   408049 <memcpy@plt+0x5599>
  407a17:	mov    DWORD PTR [rbp-0x2c],eax
  407a1a:	cmp    DWORD PTR [rbp-0x2c],0x0
  407a1e:	jns    407a35 <memcpy@plt+0x4f85>
  407a20:	call   402910 <__errno_location@plt>
  407a25:	mov    DWORD PTR [rax],0x5a
  407a2b:	mov    eax,0xffffffff
  407a30:	jmp    407d0f <memcpy@plt+0x525f>
  407a35:	mov    eax,DWORD PTR [rbp-0x2c]
  407a38:	movsxd rdx,eax
  407a3b:	mov    rax,QWORD PTR [rbp-0x18]
  407a3f:	add    rax,rdx
  407a42:	cmp    QWORD PTR [rbp-0x10],rax
  407a46:	ja     407a5d <memcpy@plt+0x4fad>
  407a48:	call   402910 <__errno_location@plt>
  407a4d:	mov    DWORD PTR [rax],0x5a
  407a53:	mov    eax,0xffffffff
  407a58:	jmp    407d0f <memcpy@plt+0x525f>
  407a5d:	mov    eax,DWORD PTR [rbp-0x28]
  407a60:	and    eax,0xc0
  407a65:	cmp    eax,0x40
  407a68:	jne    407c7e <memcpy@plt+0x51ce>
  407a6e:	cmp    DWORD PTR [rbp-0x28],0x41
  407a72:	je     407a89 <memcpy@plt+0x4fd9>
  407a74:	call   402910 <__errno_location@plt>
  407a79:	mov    DWORD PTR [rax],0x16
  407a7f:	mov    eax,0xffffffff
  407a84:	jmp    407d0f <memcpy@plt+0x525f>
  407a89:	mov    rdx,QWORD PTR [rbp-0x10]
  407a8d:	mov    rcx,QWORD PTR [rbp-0x18]
  407a91:	lea    rax,[rbp-0x20]
  407a95:	mov    rsi,rcx
  407a98:	mov    rdi,rax
  407a9b:	call   4080ee <memcpy@plt+0x563e>
  407aa0:	mov    DWORD PTR [rbp-0x24],eax
  407aa3:	cmp    DWORD PTR [rbp-0x24],0x0
  407aa7:	jns    407abe <memcpy@plt+0x500e>
  407aa9:	call   402910 <__errno_location@plt>
  407aae:	mov    DWORD PTR [rax],0x5a
  407ab4:	mov    eax,0xffffffff
  407ab9:	jmp    407d0f <memcpy@plt+0x525f>
  407abe:	mov    eax,DWORD PTR [rbp-0x24]
  407ac1:	cdqe   
  407ac3:	add    QWORD PTR [rbp-0x18],rax
  407ac7:	jmp    407c88 <memcpy@plt+0x51d8>
  407acc:	mov    rax,QWORD PTR [rbp-0x20]
  407ad0:	lea    rdx,[rax+0x1]
  407ad4:	mov    QWORD PTR [rbp-0x20],rdx
  407ad8:	movzx  eax,BYTE PTR [rax]
  407adb:	mov    BYTE PTR [rbp-0x2d],al
  407ade:	movzx  eax,BYTE PTR [rbp-0x2d]
  407ae2:	mov    edi,eax
  407ae4:	call   408001 <memcpy@plt+0x5551>
  407ae9:	test   eax,eax
  407aeb:	je     407b35 <memcpy@plt+0x5085>
  407aed:	mov    rax,QWORD PTR [rbp-0x18]
  407af1:	inc    rax
  407af4:	cmp    QWORD PTR [rbp-0x10],rax
  407af8:	ja     407b0f <memcpy@plt+0x505f>
  407afa:	call   402910 <__errno_location@plt>
  407aff:	mov    DWORD PTR [rax],0x5a
  407b05:	mov    eax,0xffffffff
  407b0a:	jmp    407d0f <memcpy@plt+0x525f>
  407b0f:	mov    rax,QWORD PTR [rbp-0x18]
  407b13:	lea    rdx,[rax+0x1]
  407b17:	mov    QWORD PTR [rbp-0x18],rdx
  407b1b:	mov    BYTE PTR [rax],0x5c
  407b1e:	mov    rdx,QWORD PTR [rbp-0x18]
  407b22:	lea    rax,[rdx+0x1]
  407b26:	mov    QWORD PTR [rbp-0x18],rax
  407b2a:	movzx  eax,BYTE PTR [rbp-0x2d]
  407b2e:	mov    BYTE PTR [rdx],al
  407b30:	jmp    407c7b <memcpy@plt+0x51cb>
  407b35:	movzx  eax,BYTE PTR [rbp-0x2d]
  407b39:	mov    edi,eax
  407b3b:	call   4080c9 <memcpy@plt+0x5619>
  407b40:	test   eax,eax
  407b42:	jne    407c4a <memcpy@plt+0x519a>
  407b48:	mov    rax,QWORD PTR [rbp-0x18]
  407b4c:	add    rax,0x3
  407b50:	cmp    QWORD PTR [rbp-0x10],rax
  407b54:	ja     407b6b <memcpy@plt+0x50bb>
  407b56:	call   402910 <__errno_location@plt>
  407b5b:	mov    DWORD PTR [rax],0x5a
  407b61:	mov    eax,0xffffffff
  407b66:	jmp    407d0f <memcpy@plt+0x525f>
  407b6b:	mov    rax,QWORD PTR [rbp-0x18]
  407b6f:	lea    rdx,[rax+0x1]
  407b73:	mov    QWORD PTR [rbp-0x18],rdx
  407b77:	mov    BYTE PTR [rax],0x5c
  407b7a:	movzx  eax,BYTE PTR [rbp-0x2d]
  407b7e:	movzx  edx,al
  407b81:	mov    eax,edx
  407b83:	shl    eax,0x2
  407b86:	add    eax,edx
  407b88:	shl    eax,0x3
  407b8b:	add    eax,edx
  407b8d:	shr    ax,0x8
  407b91:	shr    al,0x4
  407b94:	movzx  ecx,al
  407b97:	mov    rdx,QWORD PTR [rbp-0x18]
  407b9b:	lea    rax,[rdx+0x1]
  407b9f:	mov    QWORD PTR [rbp-0x18],rax
  407ba3:	movsxd rcx,ecx
  407ba6:	lea    rax,[rip+0x7d13]        # 40f8c0 <memcpy@plt+0xce10>
  407bad:	movzx  eax,BYTE PTR [rcx+rax*1]
  407bb1:	mov    BYTE PTR [rdx],al
  407bb3:	movzx  ecx,BYTE PTR [rbp-0x2d]
  407bb7:	movzx  edx,cl
  407bba:	mov    eax,edx
  407bbc:	shl    eax,0x2
  407bbf:	add    eax,edx
  407bc1:	shl    eax,0x3
  407bc4:	add    eax,edx
  407bc6:	shr    ax,0x8
  407bca:	shr    al,0x4
  407bcd:	mov    edx,0x64
  407bd2:	imul   eax,edx
  407bd5:	sub    ecx,eax
  407bd7:	mov    eax,ecx
  407bd9:	mov    edx,0xffffffcd
  407bde:	mul    dl
  407be0:	shr    ax,0x8
  407be4:	shr    al,0x3
  407be7:	movzx  ecx,al
  407bea:	mov    rdx,QWORD PTR [rbp-0x18]
  407bee:	lea    rax,[rdx+0x1]
  407bf2:	mov    QWORD PTR [rbp-0x18],rax
  407bf6:	movsxd rcx,ecx
  407bf9:	lea    rax,[rip+0x7cc0]        # 40f8c0 <memcpy@plt+0xce10>
  407c00:	movzx  eax,BYTE PTR [rcx+rax*1]
  407c04:	mov    BYTE PTR [rdx],al
  407c06:	movzx  ecx,BYTE PTR [rbp-0x2d]
  407c0a:	mov    edx,0xffffffcd
  407c0f:	mov    eax,edx
  407c11:	mul    cl
  407c13:	shr    ax,0x8
  407c17:	mov    edx,eax
  407c19:	shr    dl,0x3
  407c1c:	mov    eax,edx
  407c1e:	shl    eax,0x2
  407c21:	add    eax,edx
  407c23:	add    eax,eax
  407c25:	sub    ecx,eax
  407c27:	mov    edx,ecx
  407c29:	movzx  ecx,dl
  407c2c:	mov    rdx,QWORD PTR [rbp-0x18]
  407c30:	lea    rax,[rdx+0x1]
  407c34:	mov    QWORD PTR [rbp-0x18],rax
  407c38:	movsxd rcx,ecx
  407c3b:	lea    rax,[rip+0x7c7e]        # 40f8c0 <memcpy@plt+0xce10>
  407c42:	movzx  eax,BYTE PTR [rcx+rax*1]
  407c46:	mov    BYTE PTR [rdx],al
  407c48:	jmp    407c7b <memcpy@plt+0x51cb>
  407c4a:	mov    rax,QWORD PTR [rbp-0x18]
  407c4e:	cmp    rax,QWORD PTR [rbp-0x10]
  407c52:	jb     407c69 <memcpy@plt+0x51b9>
  407c54:	call   402910 <__errno_location@plt>
  407c59:	mov    DWORD PTR [rax],0x5a
  407c5f:	mov    eax,0xffffffff
  407c64:	jmp    407d0f <memcpy@plt+0x525f>
  407c69:	mov    rdx,QWORD PTR [rbp-0x18]
  407c6d:	lea    rax,[rdx+0x1]
  407c71:	mov    QWORD PTR [rbp-0x18],rax
  407c75:	movzx  eax,BYTE PTR [rbp-0x2d]
  407c79:	mov    BYTE PTR [rdx],al
  407c7b:	dec    DWORD PTR [rbp-0x2c]
  407c7e:	cmp    DWORD PTR [rbp-0x2c],0x0
  407c82:	jg     407acc <memcpy@plt+0x501c>
  407c88:	mov    rax,QWORD PTR [rbp-0x20]
  407c8c:	lea    rdx,[rax+0x1]
  407c90:	mov    QWORD PTR [rbp-0x20],rdx
  407c94:	movzx  eax,BYTE PTR [rax]
  407c97:	movsx  eax,al
  407c9a:	mov    DWORD PTR [rbp-0x28],eax
  407c9d:	cmp    DWORD PTR [rbp-0x28],0x0
  407ca1:	jne    4079ac <memcpy@plt+0x4efc>
  407ca7:	mov    rax,QWORD PTR [rbp-0x18]
  407cab:	cmp    rax,QWORD PTR [rbp-0x40]
  407caf:	jne    407cdc <memcpy@plt+0x522c>
  407cb1:	mov    rax,QWORD PTR [rbp-0x18]
  407cb5:	cmp    rax,QWORD PTR [rbp-0x10]
  407cb9:	jb     407ccd <memcpy@plt+0x521d>
  407cbb:	call   402910 <__errno_location@plt>
  407cc0:	mov    DWORD PTR [rax],0x5a
  407cc6:	mov    eax,0xffffffff
  407ccb:	jmp    407d0f <memcpy@plt+0x525f>
  407ccd:	mov    rax,QWORD PTR [rbp-0x18]
  407cd1:	lea    rdx,[rax+0x1]
  407cd5:	mov    QWORD PTR [rbp-0x18],rdx
  407cd9:	mov    BYTE PTR [rax],0x2e
  407cdc:	mov    rax,QWORD PTR [rbp-0x18]
  407ce0:	cmp    rax,QWORD PTR [rbp-0x10]
  407ce4:	jb     407cf8 <memcpy@plt+0x5248>
  407ce6:	call   402910 <__errno_location@plt>
  407ceb:	mov    DWORD PTR [rax],0x5a
  407cf1:	mov    eax,0xffffffff
  407cf6:	jmp    407d0f <memcpy@plt+0x525f>
  407cf8:	mov    rax,QWORD PTR [rbp-0x18]
  407cfc:	lea    rdx,[rax+0x1]
  407d00:	mov    QWORD PTR [rbp-0x18],rdx
  407d04:	mov    BYTE PTR [rax],0x0
  407d07:	mov    rax,QWORD PTR [rbp-0x18]
  407d0b:	sub    rax,QWORD PTR [rbp-0x40]
  407d0f:	mov    rsi,QWORD PTR [rbp-0x8]
  407d13:	xor    rsi,QWORD PTR fs:0x28
  407d1c:	je     407d23 <memcpy@plt+0x5273>
  407d1e:	call   402950 <__stack_chk_fail@plt>
  407d23:	leave  
  407d24:	ret    
  407d25:	endbr64 
  407d29:	push   rbp
  407d2a:	mov    rbp,rsp
  407d2d:	sub    rsp,0x30
  407d31:	mov    QWORD PTR [rbp-0x8],rdi
  407d35:	mov    QWORD PTR [rbp-0x10],rsi
  407d39:	mov    DWORD PTR [rbp-0x14],edx
  407d3c:	mov    QWORD PTR [rbp-0x20],rcx
  407d40:	mov    QWORD PTR [rbp-0x28],r8
  407d44:	mov    eax,DWORD PTR [rbp-0x14]
  407d47:	movsxd rdx,eax
  407d4a:	mov    rdi,QWORD PTR [rbp-0x28]
  407d4e:	mov    rcx,QWORD PTR [rbp-0x20]
  407d52:	mov    rsi,QWORD PTR [rbp-0x10]
  407d56:	mov    rax,QWORD PTR [rbp-0x8]
  407d5a:	mov    r8,rdi
  407d5d:	mov    rdi,rax
  407d60:	call   408a71 <memcpy@plt+0x5fc1>
  407d65:	leave  
  407d66:	ret    
  407d67:	endbr64 
  407d6b:	push   rbp
  407d6c:	mov    rbp,rsp
  407d6f:	sub    rsp,0x20
  407d73:	mov    QWORD PTR [rbp-0x18],rdi
  407d77:	mov    QWORD PTR [rbp-0x20],rsi
  407d7b:	mov    rax,QWORD PTR [rbp-0x18]
  407d7f:	mov    QWORD PTR [rbp-0x8],rax
  407d83:	mov    rdx,QWORD PTR [rbp-0x20]
  407d87:	lea    rax,[rbp-0x18]
  407d8b:	mov    rsi,rdx
  407d8e:	mov    rdi,rax
  407d91:	call   407dac <memcpy@plt+0x52fc>
  407d96:	cmp    eax,0xffffffff
  407d99:	jne    407da2 <memcpy@plt+0x52f2>
  407d9b:	mov    eax,0xffffffff
  407da0:	jmp    407daa <memcpy@plt+0x52fa>
  407da2:	mov    rax,QWORD PTR [rbp-0x18]
  407da6:	sub    rax,QWORD PTR [rbp-0x8]
  407daa:	leave  
  407dab:	ret    
  407dac:	endbr64 
  407db0:	push   rbp
  407db1:	mov    rbp,rsp
  407db4:	sub    rsp,0x20
  407db8:	mov    QWORD PTR [rbp-0x18],rdi
  407dbc:	mov    QWORD PTR [rbp-0x20],rsi
  407dc0:	mov    rax,QWORD PTR [rbp-0x18]
  407dc4:	mov    rax,QWORD PTR [rax]
  407dc7:	mov    QWORD PTR [rbp-0x8],rax
  407dcb:	jmp    407e3c <memcpy@plt+0x538c>
  407dcd:	mov    eax,DWORD PTR [rbp-0x10]
  407dd0:	and    eax,0xc0
  407dd5:	cmp    eax,0x40
  407dd8:	je     407dee <memcpy@plt+0x533e>
  407dda:	cmp    eax,0xc0
  407ddf:	je     407e23 <memcpy@plt+0x5373>
  407de1:	test   eax,eax
  407de3:	jne    407e2a <memcpy@plt+0x537a>
  407de5:	mov    eax,DWORD PTR [rbp-0x10]
  407de8:	add    QWORD PTR [rbp-0x8],rax
  407dec:	jmp    407e3c <memcpy@plt+0x538c>
  407dee:	mov    rax,QWORD PTR [rbp-0x8]
  407df2:	dec    rax
  407df5:	mov    rdi,rax
  407df8:	call   408049 <memcpy@plt+0x5599>
  407dfd:	mov    DWORD PTR [rbp-0xc],eax
  407e00:	cmp    DWORD PTR [rbp-0xc],0x0
  407e04:	jns    407e18 <memcpy@plt+0x5368>
  407e06:	call   402910 <__errno_location@plt>
  407e0b:	mov    DWORD PTR [rax],0x5a
  407e11:	mov    eax,0xffffffff
  407e16:	jmp    407e91 <memcpy@plt+0x53e1>
  407e18:	mov    eax,DWORD PTR [rbp-0xc]
  407e1b:	cdqe   
  407e1d:	add    QWORD PTR [rbp-0x8],rax
  407e21:	jmp    407e3c <memcpy@plt+0x538c>
  407e23:	inc    QWORD PTR [rbp-0x8]
  407e27:	nop
  407e28:	jmp    407e65 <memcpy@plt+0x53b5>
  407e2a:	call   402910 <__errno_location@plt>
  407e2f:	mov    DWORD PTR [rax],0x5a
  407e35:	mov    eax,0xffffffff
  407e3a:	jmp    407e91 <memcpy@plt+0x53e1>
  407e3c:	mov    rax,QWORD PTR [rbp-0x8]
  407e40:	cmp    rax,QWORD PTR [rbp-0x20]
  407e44:	jae    407e65 <memcpy@plt+0x53b5>
  407e46:	mov    rax,QWORD PTR [rbp-0x8]
  407e4a:	lea    rdx,[rax+0x1]
  407e4e:	mov    QWORD PTR [rbp-0x8],rdx
  407e52:	movzx  eax,BYTE PTR [rax]
  407e55:	movzx  eax,al
  407e58:	mov    DWORD PTR [rbp-0x10],eax
  407e5b:	cmp    DWORD PTR [rbp-0x10],0x0
  407e5f:	jne    407dcd <memcpy@plt+0x531d>
  407e65:	mov    rax,QWORD PTR [rbp-0x8]
  407e69:	cmp    rax,QWORD PTR [rbp-0x20]
  407e6d:	jbe    407e81 <memcpy@plt+0x53d1>
  407e6f:	call   402910 <__errno_location@plt>
  407e74:	mov    DWORD PTR [rax],0x5a
  407e7a:	mov    eax,0xffffffff
  407e7f:	jmp    407e91 <memcpy@plt+0x53e1>
  407e81:	mov    rax,QWORD PTR [rbp-0x18]
  407e85:	mov    rdx,QWORD PTR [rbp-0x8]
  407e89:	mov    QWORD PTR [rax],rdx
  407e8c:	mov    eax,0x0
  407e91:	leave  
  407e92:	ret    
  407e93:	endbr64 
  407e97:	push   rbp
  407e98:	mov    rbp,rsp
  407e9b:	mov    QWORD PTR [rbp-0x18],rdi
  407e9f:	mov    rax,QWORD PTR [rbp-0x18]
  407ea3:	mov    QWORD PTR [rbp-0x8],rax
  407ea7:	mov    rax,QWORD PTR [rbp-0x8]
  407eab:	movzx  eax,BYTE PTR [rax]
  407eae:	movzx  eax,al
  407eb1:	shl    eax,0x8
  407eb4:	mov    edx,eax
  407eb6:	mov    rax,QWORD PTR [rbp-0x8]
  407eba:	inc    rax
  407ebd:	movzx  eax,BYTE PTR [rax]
  407ec0:	movzx  eax,al
  407ec3:	or     eax,edx
  407ec5:	mov    DWORD PTR [rbp-0xc],eax
  407ec8:	add    QWORD PTR [rbp-0x18],0x2
  407ecd:	mov    eax,DWORD PTR [rbp-0xc]
  407ed0:	pop    rbp
  407ed1:	ret    
  407ed2:	endbr64 
  407ed6:	push   rbp
  407ed7:	mov    rbp,rsp
  407eda:	mov    QWORD PTR [rbp-0x18],rdi
  407ede:	mov    rax,QWORD PTR [rbp-0x18]
  407ee2:	mov    QWORD PTR [rbp-0x10],rax
  407ee6:	mov    rax,QWORD PTR [rbp-0x10]
  407eea:	movzx  eax,BYTE PTR [rax]
  407eed:	movzx  eax,al
  407ef0:	shl    eax,0x18
  407ef3:	mov    edx,eax
  407ef5:	mov    rax,QWORD PTR [rbp-0x10]
  407ef9:	inc    rax
  407efc:	movzx  eax,BYTE PTR [rax]
  407eff:	movzx  eax,al
  407f02:	shl    eax,0x10
  407f05:	or     edx,eax
  407f07:	mov    rax,QWORD PTR [rbp-0x10]
  407f0b:	add    rax,0x2
  407f0f:	movzx  eax,BYTE PTR [rax]
  407f12:	movzx  eax,al
  407f15:	shl    eax,0x8
  407f18:	or     edx,eax
  407f1a:	mov    rax,QWORD PTR [rbp-0x10]
  407f1e:	add    rax,0x3
  407f22:	movzx  eax,BYTE PTR [rax]
  407f25:	movzx  eax,al
  407f28:	or     eax,edx
  407f2a:	mov    eax,eax
  407f2c:	mov    QWORD PTR [rbp-0x8],rax
  407f30:	add    QWORD PTR [rbp-0x18],0x4
  407f35:	mov    rax,QWORD PTR [rbp-0x8]
  407f39:	pop    rbp
  407f3a:	ret    
  407f3b:	endbr64 
  407f3f:	push   rbp
  407f40:	mov    rbp,rsp
  407f43:	mov    DWORD PTR [rbp-0x14],edi
  407f46:	mov    QWORD PTR [rbp-0x20],rsi
  407f4a:	mov    eax,DWORD PTR [rbp-0x14]
  407f4d:	mov    WORD PTR [rbp-0xa],ax
  407f51:	mov    rax,QWORD PTR [rbp-0x20]
  407f55:	mov    QWORD PTR [rbp-0x8],rax
  407f59:	movzx  eax,WORD PTR [rbp-0xa]
  407f5d:	shr    ax,0x8
  407f61:	mov    ecx,eax
  407f63:	mov    rax,QWORD PTR [rbp-0x8]
  407f67:	lea    rdx,[rax+0x1]
  407f6b:	mov    QWORD PTR [rbp-0x8],rdx
  407f6f:	mov    edx,ecx
  407f71:	mov    BYTE PTR [rax],dl
  407f73:	movzx  eax,WORD PTR [rbp-0xa]
  407f77:	mov    edx,eax
  407f79:	mov    rax,QWORD PTR [rbp-0x8]
  407f7d:	mov    BYTE PTR [rax],dl
  407f7f:	add    QWORD PTR [rbp-0x20],0x2
  407f84:	nop
  407f85:	pop    rbp
  407f86:	ret    
  407f87:	endbr64 
  407f8b:	push   rbp
  407f8c:	mov    rbp,rsp
  407f8f:	mov    QWORD PTR [rbp-0x18],rdi
  407f93:	mov    QWORD PTR [rbp-0x20],rsi
  407f97:	mov    rax,QWORD PTR [rbp-0x18]
  407f9b:	mov    DWORD PTR [rbp-0xc],eax
  407f9e:	mov    rax,QWORD PTR [rbp-0x20]
  407fa2:	mov    QWORD PTR [rbp-0x8],rax
  407fa6:	mov    eax,DWORD PTR [rbp-0xc]
  407fa9:	shr    eax,0x18
  407fac:	mov    ecx,eax
  407fae:	mov    rax,QWORD PTR [rbp-0x8]
  407fb2:	lea    rdx,[rax+0x1]
  407fb6:	mov    QWORD PTR [rbp-0x8],rdx
  407fba:	mov    edx,ecx
  407fbc:	mov    BYTE PTR [rax],dl
  407fbe:	mov    eax,DWORD PTR [rbp-0xc]
  407fc1:	shr    eax,0x10
  407fc4:	mov    ecx,eax
  407fc6:	mov    rax,QWORD PTR [rbp-0x8]
  407fca:	lea    rdx,[rax+0x1]
  407fce:	mov    QWORD PTR [rbp-0x8],rdx
  407fd2:	mov    edx,ecx
  407fd4:	mov    BYTE PTR [rax],dl
  407fd6:	mov    eax,DWORD PTR [rbp-0xc]
  407fd9:	shr    eax,0x8
  407fdc:	mov    ecx,eax
  407fde:	mov    rax,QWORD PTR [rbp-0x8]
  407fe2:	lea    rdx,[rax+0x1]
  407fe6:	mov    QWORD PTR [rbp-0x8],rdx
  407fea:	mov    edx,ecx
  407fec:	mov    BYTE PTR [rax],dl
  407fee:	mov    eax,DWORD PTR [rbp-0xc]
  407ff1:	mov    edx,eax
  407ff3:	mov    rax,QWORD PTR [rbp-0x8]
  407ff7:	mov    BYTE PTR [rax],dl
  407ff9:	add    QWORD PTR [rbp-0x20],0x4
  407ffe:	nop
  407fff:	pop    rbp
  408000:	ret    
  408001:	endbr64 
  408005:	push   rbp
  408006:	mov    rbp,rsp
  408009:	mov    DWORD PTR [rbp-0x4],edi
  40800c:	mov    eax,DWORD PTR [rbp-0x4]
  40800f:	sub    eax,0x22
  408012:	cmp    eax,0x3a
  408015:	ja     408042 <memcpy@plt+0x5592>
  408017:	mov    eax,eax
  408019:	lea    rdx,[rax*4+0x0]
  408021:	lea    rax,[rip+0x78d8]        # 40f900 <memcpy@plt+0xce50>
  408028:	mov    eax,DWORD PTR [rdx+rax*1]
  40802b:	movsxd rdx,eax
  40802e:	lea    rax,[rip+0x78cb]        # 40f900 <memcpy@plt+0xce50>
  408035:	add    rax,rdx
  408038:	notrack jmp rax
  40803b:	mov    eax,0x1
  408040:	jmp    408047 <memcpy@plt+0x5597>
  408042:	mov    eax,0x0
  408047:	pop    rbp
  408048:	ret    
  408049:	endbr64 
  40804d:	push   rbp
  40804e:	mov    rbp,rsp
  408051:	mov    QWORD PTR [rbp-0x18],rdi
  408055:	mov    rax,QWORD PTR [rbp-0x18]
  408059:	movzx  eax,BYTE PTR [rax]
  40805c:	mov    BYTE PTR [rbp-0x5],al
  40805f:	movzx  eax,BYTE PTR [rbp-0x5]
  408063:	and    eax,0xc0
  408068:	cmp    eax,0xc0
  40806d:	jne    408076 <memcpy@plt+0x55c6>
  40806f:	mov    eax,0xffffffff
  408074:	jmp    4080c7 <memcpy@plt+0x5617>
  408076:	movzx  eax,BYTE PTR [rbp-0x5]
  40807a:	and    eax,0xc0
  40807f:	cmp    eax,0x40
  408082:	jne    4080c3 <memcpy@plt+0x5613>
  408084:	cmp    BYTE PTR [rbp-0x5],0x41
  408088:	jne    4080bc <memcpy@plt+0x560c>
  40808a:	mov    rax,QWORD PTR [rbp-0x18]
  40808e:	inc    rax
  408091:	movzx  eax,BYTE PTR [rax]
  408094:	movzx  eax,al
  408097:	mov    DWORD PTR [rbp-0x4],eax
  40809a:	cmp    DWORD PTR [rbp-0x4],0x0
  40809e:	jne    4080a7 <memcpy@plt+0x55f7>
  4080a0:	mov    DWORD PTR [rbp-0x4],0x100
  4080a7:	mov    eax,DWORD PTR [rbp-0x4]
  4080aa:	add    eax,0x7
  4080ad:	lea    edx,[rax+0x7]
  4080b0:	test   eax,eax
  4080b2:	cmovs  eax,edx
  4080b5:	sar    eax,0x3
  4080b8:	inc    eax
  4080ba:	jmp    4080c7 <memcpy@plt+0x5617>
  4080bc:	mov    eax,0xffffffff
  4080c1:	jmp    4080c7 <memcpy@plt+0x5617>
  4080c3:	movzx  eax,BYTE PTR [rbp-0x5]
  4080c7:	pop    rbp
  4080c8:	ret    
  4080c9:	endbr64 
  4080cd:	push   rbp
  4080ce:	mov    rbp,rsp
  4080d1:	mov    DWORD PTR [rbp-0x4],edi
  4080d4:	cmp    DWORD PTR [rbp-0x4],0x20
  4080d8:	jle    4080e7 <memcpy@plt+0x5637>
  4080da:	cmp    DWORD PTR [rbp-0x4],0x7e
  4080de:	jg     4080e7 <memcpy@plt+0x5637>
  4080e0:	mov    eax,0x1
  4080e5:	jmp    4080ec <memcpy@plt+0x563c>
  4080e7:	mov    eax,0x0
  4080ec:	pop    rbp
  4080ed:	ret    
  4080ee:	endbr64 
  4080f2:	push   rbp
  4080f3:	mov    rbp,rsp
  4080f6:	sub    rsp,0x40
  4080fa:	mov    QWORD PTR [rbp-0x28],rdi
  4080fe:	mov    QWORD PTR [rbp-0x30],rsi
  408102:	mov    QWORD PTR [rbp-0x38],rdx
  408106:	mov    rax,QWORD PTR [rbp-0x28]
  40810a:	mov    rax,QWORD PTR [rax]
  40810d:	mov    QWORD PTR [rbp-0x10],rax
  408111:	mov    rax,QWORD PTR [rbp-0x30]
  408115:	mov    QWORD PTR [rbp-0x8],rax
  408119:	mov    rax,QWORD PTR [rbp-0x10]
  40811d:	movzx  eax,BYTE PTR [rax]
  408120:	movsx  eax,al
  408123:	and    eax,0xff
  408128:	mov    DWORD PTR [rbp-0x18],eax
  40812b:	cmp    DWORD PTR [rbp-0x18],0x0
  40812f:	jne    408138 <memcpy@plt+0x5688>
  408131:	mov    DWORD PTR [rbp-0x18],0x100
  408138:	mov    eax,DWORD PTR [rbp-0x18]
  40813b:	add    eax,0x3
  40813e:	lea    edx,[rax+0x3]
  408141:	test   eax,eax
  408143:	cmovs  eax,edx
  408146:	sar    eax,0x2
  408149:	mov    DWORD PTR [rbp-0x14],eax
  40814c:	cmp    DWORD PTR [rbp-0x18],0x63
  408150:	jg     408166 <memcpy@plt+0x56b6>
  408152:	cmp    DWORD PTR [rbp-0x18],0x9
  408156:	jle    40815f <memcpy@plt+0x56af>
  408158:	mov    eax,0x8
  40815d:	jmp    40816b <memcpy@plt+0x56bb>
  40815f:	mov    eax,0x7
  408164:	jmp    40816b <memcpy@plt+0x56bb>
  408166:	mov    eax,0x9
  40816b:	mov    edx,DWORD PTR [rbp-0x14]
  40816e:	add    eax,edx
  408170:	mov    DWORD PTR [rbp-0x14],eax
  408173:	mov    eax,DWORD PTR [rbp-0x14]
  408176:	movsxd rdx,eax
  408179:	mov    rax,QWORD PTR [rbp-0x30]
  40817d:	add    rax,rdx
  408180:	cmp    QWORD PTR [rbp-0x38],rax
  408184:	ja     408190 <memcpy@plt+0x56e0>
  408186:	mov    eax,0xffffffff
  40818b:	jmp    4082d0 <memcpy@plt+0x5820>
  408190:	inc    QWORD PTR [rbp-0x10]
  408194:	mov    rax,QWORD PTR [rbp-0x30]
  408198:	lea    rsi,[rip+0x784d]        # 40f9ec <memcpy@plt+0xcf3c>
  40819f:	mov    rdi,rax
  4081a2:	mov    eax,0x0
  4081a7:	call   4027b0 <sprintf@plt>
  4081ac:	cdqe   
  4081ae:	add    QWORD PTR [rbp-0x30],rax
  4081b2:	mov    eax,DWORD PTR [rbp-0x18]
  4081b5:	mov    DWORD PTR [rbp-0x1c],eax
  4081b8:	jmp    4081ed <memcpy@plt+0x573d>
  4081ba:	mov    rax,QWORD PTR [rbp-0x10]
  4081be:	movzx  eax,BYTE PTR [rax]
  4081c1:	movsx  eax,al
  4081c4:	movzx  edx,al
  4081c7:	mov    rax,QWORD PTR [rbp-0x30]
  4081cb:	lea    rsi,[rip+0x781e]        # 40f9f0 <memcpy@plt+0xcf40>
  4081d2:	mov    rdi,rax
  4081d5:	mov    eax,0x0
  4081da:	call   4027b0 <sprintf@plt>
  4081df:	cdqe   
  4081e1:	add    QWORD PTR [rbp-0x30],rax
  4081e5:	sub    DWORD PTR [rbp-0x1c],0x8
  4081e9:	inc    QWORD PTR [rbp-0x10]
  4081ed:	cmp    DWORD PTR [rbp-0x1c],0x7
  4081f1:	jg     4081ba <memcpy@plt+0x570a>
  4081f3:	cmp    DWORD PTR [rbp-0x1c],0x4
  4081f7:	jle    408243 <memcpy@plt+0x5793>
  4081f9:	mov    rax,QWORD PTR [rbp-0x10]
  4081fd:	lea    rdx,[rax+0x1]
  408201:	mov    QWORD PTR [rbp-0x10],rdx
  408205:	movzx  eax,BYTE PTR [rax]
  408208:	mov    BYTE PTR [rbp-0x1d],al
  40820b:	movsx  edx,BYTE PTR [rbp-0x1d]
  40820f:	mov    eax,0x8
  408214:	sub    eax,DWORD PTR [rbp-0x1c]
  408217:	mov    ecx,0xff
  40821c:	shlx   eax,ecx,eax
  408221:	and    edx,eax
  408223:	mov    rax,QWORD PTR [rbp-0x30]
  408227:	lea    rsi,[rip+0x77c2]        # 40f9f0 <memcpy@plt+0xcf40>
  40822e:	mov    rdi,rax
  408231:	mov    eax,0x0
  408236:	call   4027b0 <sprintf@plt>
  40823b:	cdqe   
  40823d:	add    QWORD PTR [rbp-0x30],rax
  408241:	jmp    40829c <memcpy@plt+0x57ec>
  408243:	cmp    DWORD PTR [rbp-0x1c],0x0
  408247:	jle    40829c <memcpy@plt+0x57ec>
  408249:	mov    rax,QWORD PTR [rbp-0x10]
  40824d:	lea    rdx,[rax+0x1]
  408251:	mov    QWORD PTR [rbp-0x10],rdx
  408255:	movzx  eax,BYTE PTR [rax]
  408258:	mov    BYTE PTR [rbp-0x1d],al
  40825b:	movzx  eax,BYTE PTR [rbp-0x1d]
  40825f:	sar    al,0x4
  408262:	movsx  eax,al
  408265:	and    eax,0xf
  408268:	mov    edx,eax
  40826a:	mov    eax,0x4
  40826f:	sub    eax,DWORD PTR [rbp-0x1c]
  408272:	mov    ecx,0xf
  408277:	shlx   eax,ecx,eax
  40827c:	and    edx,eax
  40827e:	mov    rax,QWORD PTR [rbp-0x30]
  408282:	lea    rsi,[rip+0x776c]        # 40f9f5 <memcpy@plt+0xcf45>
  408289:	mov    rdi,rax
  40828c:	mov    eax,0x0
  408291:	call   4027b0 <sprintf@plt>
  408296:	cdqe   
  408298:	add    QWORD PTR [rbp-0x30],rax
  40829c:	mov    edx,DWORD PTR [rbp-0x18]
  40829f:	mov    rax,QWORD PTR [rbp-0x30]
  4082a3:	lea    rsi,[rip+0x774f]        # 40f9f9 <memcpy@plt+0xcf49>
  4082aa:	mov    rdi,rax
  4082ad:	mov    eax,0x0
  4082b2:	call   4027b0 <sprintf@plt>
  4082b7:	cdqe   
  4082b9:	add    QWORD PTR [rbp-0x30],rax
  4082bd:	mov    rax,QWORD PTR [rbp-0x28]
  4082c1:	mov    rdx,QWORD PTR [rbp-0x10]
  4082c5:	mov    QWORD PTR [rax],rdx
  4082c8:	mov    rax,QWORD PTR [rbp-0x30]
  4082cc:	sub    rax,QWORD PTR [rbp-0x8]
  4082d0:	leave  
  4082d1:	ret    
  4082d2:	endbr64 
  4082d6:	push   rbp
  4082d7:	mov    rbp,rsp
  4082da:	sub    rsp,0x60
  4082de:	mov    QWORD PTR [rbp-0x48],rdi
  4082e2:	mov    QWORD PTR [rbp-0x50],rsi
  4082e6:	mov    QWORD PTR [rbp-0x58],rdx
  4082ea:	mov    rax,QWORD PTR fs:0x28
  4082f3:	mov    QWORD PTR [rbp-0x8],rax
  4082f7:	xor    eax,eax
  4082f9:	mov    DWORD PTR [rbp-0x30],0x0
  408300:	mov    DWORD PTR [rbp-0x34],0x0
  408307:	mov    rax,QWORD PTR [rbp-0x50]
  40830b:	mov    QWORD PTR [rbp-0x20],rax
  40830f:	mov    rdx,QWORD PTR [rbp-0x50]
  408313:	mov    rax,QWORD PTR [rbp-0x58]
  408317:	add    rax,rdx
  40831a:	mov    QWORD PTR [rbp-0x18],rax
  40831e:	mov    rax,QWORD PTR [rbp-0x20]
  408322:	lea    rdx,[rax+0x1]
  408326:	mov    QWORD PTR [rbp-0x20],rdx
  40832a:	mov    QWORD PTR [rbp-0x28],rax
  40832e:	jmp    40869e <memcpy@plt+0x5bee>
  408333:	cmp    DWORD PTR [rbp-0x34],0x0
  408337:	je     408550 <memcpy@plt+0x5aa0>
  40833d:	cmp    DWORD PTR [rbp-0x38],0x5b
  408341:	jne    408410 <memcpy@plt+0x5960>
  408347:	mov    rax,QWORD PTR [rbp-0x48]
  40834b:	mov    esi,0x5d
  408350:	mov    rdi,rax
  408353:	call   4028c0 <strchr@plt>
  408358:	mov    QWORD PTR [rbp-0x10],rax
  40835c:	cmp    QWORD PTR [rbp-0x10],0x0
  408361:	jne    408378 <memcpy@plt+0x58c8>
  408363:	call   402910 <__errno_location@plt>
  408368:	mov    DWORD PTR [rax],0x16
  40836e:	mov    eax,0xffffffff
  408373:	jmp    408772 <memcpy@plt+0x5cc2>
  408378:	mov    rax,QWORD PTR [rbp-0x10]
  40837c:	lea    rsi,[rax+0x2]
  408380:	mov    rdi,QWORD PTR [rbp-0x18]
  408384:	lea    rcx,[rbp-0x20]
  408388:	lea    rdx,[rbp-0x28]
  40838c:	lea    rax,[rbp-0x48]
  408390:	mov    r8,rdi
  408393:	mov    rdi,rax
  408396:	call   408b27 <memcpy@plt+0x6077>
  40839b:	mov    DWORD PTR [rbp-0x30],eax
  40839e:	cmp    DWORD PTR [rbp-0x30],0x0
  4083a2:	je     4083bb <memcpy@plt+0x590b>
  4083a4:	call   402910 <__errno_location@plt>
  4083a9:	mov    rdx,rax
  4083ac:	mov    eax,DWORD PTR [rbp-0x30]
  4083af:	mov    DWORD PTR [rdx],eax
  4083b1:	mov    eax,0xffffffff
  4083b6:	jmp    408772 <memcpy@plt+0x5cc2>
  4083bb:	mov    DWORD PTR [rbp-0x34],0x0
  4083c2:	mov    rax,QWORD PTR [rbp-0x20]
  4083c6:	lea    rdx,[rax+0x1]
  4083ca:	mov    QWORD PTR [rbp-0x20],rdx
  4083ce:	mov    QWORD PTR [rbp-0x28],rax
  4083d2:	mov    rax,QWORD PTR [rbp-0x48]
  4083d6:	lea    rdx,[rax+0x1]
  4083da:	mov    QWORD PTR [rbp-0x48],rdx
  4083de:	movzx  eax,BYTE PTR [rax]
  4083e1:	movsx  eax,al
  4083e4:	mov    DWORD PTR [rbp-0x38],eax
  4083e7:	cmp    DWORD PTR [rbp-0x38],0x0
  4083eb:	je     4086f1 <memcpy@plt+0x5c41>
  4083f1:	cmp    DWORD PTR [rbp-0x38],0x2e
  4083f5:	je     40869e <memcpy@plt+0x5bee>
  4083fb:	call   402910 <__errno_location@plt>
  408400:	mov    DWORD PTR [rax],0x16
  408406:	mov    eax,0xffffffff
  40840b:	jmp    408772 <memcpy@plt+0x5cc2>
  408410:	mov    eax,DWORD PTR [rbp-0x38]
  408413:	mov    esi,eax
  408415:	lea    rdi,[rip+0x74a4]        # 40f8c0 <memcpy@plt+0xce10>
  40841c:	call   4028c0 <strchr@plt>
  408421:	mov    QWORD PTR [rbp-0x10],rax
  408425:	cmp    QWORD PTR [rbp-0x10],0x0
  40842a:	je     408544 <memcpy@plt+0x5a94>
  408430:	lea    rax,[rip+0x7489]        # 40f8c0 <memcpy@plt+0xce10>
  408437:	mov    rdx,QWORD PTR [rbp-0x10]
  40843b:	sub    rdx,rax
  40843e:	mov    rax,rdx
  408441:	imul   eax,eax,0x64
  408444:	mov    DWORD PTR [rbp-0x2c],eax
  408447:	mov    rax,QWORD PTR [rbp-0x48]
  40844b:	lea    rdx,[rax+0x1]
  40844f:	mov    QWORD PTR [rbp-0x48],rdx
  408453:	movzx  eax,BYTE PTR [rax]
  408456:	movsx  eax,al
  408459:	mov    DWORD PTR [rbp-0x38],eax
  40845c:	cmp    DWORD PTR [rbp-0x38],0x0
  408460:	je     40847e <memcpy@plt+0x59ce>
  408462:	mov    eax,DWORD PTR [rbp-0x38]
  408465:	mov    esi,eax
  408467:	lea    rdi,[rip+0x7452]        # 40f8c0 <memcpy@plt+0xce10>
  40846e:	call   4028c0 <strchr@plt>
  408473:	mov    QWORD PTR [rbp-0x10],rax
  408477:	cmp    QWORD PTR [rbp-0x10],0x0
  40847c:	jne    408493 <memcpy@plt+0x59e3>
  40847e:	call   402910 <__errno_location@plt>
  408483:	mov    DWORD PTR [rax],0x5a
  408489:	mov    eax,0xffffffff
  40848e:	jmp    408772 <memcpy@plt+0x5cc2>
  408493:	lea    rax,[rip+0x7426]        # 40f8c0 <memcpy@plt+0xce10>
  40849a:	mov    rdx,QWORD PTR [rbp-0x10]
  40849e:	sub    rdx,rax
  4084a1:	mov    rax,rdx
  4084a4:	mov    edx,eax
  4084a6:	mov    eax,edx
  4084a8:	shl    eax,0x2
  4084ab:	add    eax,edx
  4084ad:	add    eax,eax
  4084af:	mov    edx,eax
  4084b1:	mov    eax,DWORD PTR [rbp-0x2c]
  4084b4:	add    eax,edx
  4084b6:	mov    DWORD PTR [rbp-0x2c],eax
  4084b9:	mov    rax,QWORD PTR [rbp-0x48]
  4084bd:	lea    rdx,[rax+0x1]
  4084c1:	mov    QWORD PTR [rbp-0x48],rdx
  4084c5:	movzx  eax,BYTE PTR [rax]
  4084c8:	movsx  eax,al
  4084cb:	mov    DWORD PTR [rbp-0x38],eax
  4084ce:	cmp    DWORD PTR [rbp-0x38],0x0
  4084d2:	je     4084f0 <memcpy@plt+0x5a40>
  4084d4:	mov    eax,DWORD PTR [rbp-0x38]
  4084d7:	mov    esi,eax
  4084d9:	lea    rdi,[rip+0x73e0]        # 40f8c0 <memcpy@plt+0xce10>
  4084e0:	call   4028c0 <strchr@plt>
  4084e5:	mov    QWORD PTR [rbp-0x10],rax
  4084e9:	cmp    QWORD PTR [rbp-0x10],0x0
  4084ee:	jne    408505 <memcpy@plt+0x5a55>
  4084f0:	call   402910 <__errno_location@plt>
  4084f5:	mov    DWORD PTR [rax],0x5a
  4084fb:	mov    eax,0xffffffff
  408500:	jmp    408772 <memcpy@plt+0x5cc2>
  408505:	lea    rax,[rip+0x73b4]        # 40f8c0 <memcpy@plt+0xce10>
  40850c:	mov    rdx,QWORD PTR [rbp-0x10]
  408510:	sub    rdx,rax
  408513:	mov    rax,rdx
  408516:	mov    edx,eax
  408518:	mov    eax,DWORD PTR [rbp-0x2c]
  40851b:	add    eax,edx
  40851d:	mov    DWORD PTR [rbp-0x2c],eax
  408520:	cmp    DWORD PTR [rbp-0x2c],0xff
  408527:	jle    40853e <memcpy@plt+0x5a8e>
  408529:	call   402910 <__errno_location@plt>
  40852e:	mov    DWORD PTR [rax],0x5a
  408534:	mov    eax,0xffffffff
  408539:	jmp    408772 <memcpy@plt+0x5cc2>
  40853e:	mov    eax,DWORD PTR [rbp-0x2c]
  408541:	mov    DWORD PTR [rbp-0x38],eax
  408544:	mov    DWORD PTR [rbp-0x34],0x0
  40854b:	jmp    40866e <memcpy@plt+0x5bbe>
  408550:	cmp    DWORD PTR [rbp-0x38],0x5c
  408554:	jne    408562 <memcpy@plt+0x5ab2>
  408556:	mov    DWORD PTR [rbp-0x34],0x1
  40855d:	jmp    40869e <memcpy@plt+0x5bee>
  408562:	cmp    DWORD PTR [rbp-0x38],0x2e
  408566:	jne    40866e <memcpy@plt+0x5bbe>
  40856c:	mov    rdx,QWORD PTR [rbp-0x20]
  408570:	mov    rax,QWORD PTR [rbp-0x28]
  408574:	sub    rdx,rax
  408577:	mov    rax,rdx
  40857a:	dec    eax
  40857c:	mov    DWORD PTR [rbp-0x38],eax
  40857f:	mov    eax,DWORD PTR [rbp-0x38]
  408582:	and    eax,0xc0
  408587:	test   eax,eax
  408589:	je     4085a0 <memcpy@plt+0x5af0>
  40858b:	call   402910 <__errno_location@plt>
  408590:	mov    DWORD PTR [rax],0x5a
  408596:	mov    eax,0xffffffff
  40859b:	jmp    408772 <memcpy@plt+0x5cc2>
  4085a0:	mov    rax,QWORD PTR [rbp-0x28]
  4085a4:	cmp    QWORD PTR [rbp-0x18],rax
  4085a8:	ja     4085bf <memcpy@plt+0x5b0f>
  4085aa:	call   402910 <__errno_location@plt>
  4085af:	mov    DWORD PTR [rax],0x5a
  4085b5:	mov    eax,0xffffffff
  4085ba:	jmp    408772 <memcpy@plt+0x5cc2>
  4085bf:	mov    rax,QWORD PTR [rbp-0x28]
  4085c3:	mov    edx,DWORD PTR [rbp-0x38]
  4085c6:	mov    BYTE PTR [rax],dl
  4085c8:	mov    rax,QWORD PTR [rbp-0x48]
  4085cc:	movzx  eax,BYTE PTR [rax]
  4085cf:	test   al,al
  4085d1:	jne    408636 <memcpy@plt+0x5b86>
  4085d3:	cmp    DWORD PTR [rbp-0x38],0x0
  4085d7:	je     408607 <memcpy@plt+0x5b57>
  4085d9:	mov    rax,QWORD PTR [rbp-0x20]
  4085dd:	cmp    QWORD PTR [rbp-0x18],rax
  4085e1:	ja     4085f8 <memcpy@plt+0x5b48>
  4085e3:	call   402910 <__errno_location@plt>
  4085e8:	mov    DWORD PTR [rax],0x5a
  4085ee:	mov    eax,0xffffffff
  4085f3:	jmp    408772 <memcpy@plt+0x5cc2>
  4085f8:	mov    rax,QWORD PTR [rbp-0x20]
  4085fc:	lea    rdx,[rax+0x1]
  408600:	mov    QWORD PTR [rbp-0x20],rdx
  408604:	mov    BYTE PTR [rax],0x0
  408607:	mov    rax,QWORD PTR [rbp-0x20]
  40860b:	sub    rax,QWORD PTR [rbp-0x50]
  40860f:	cmp    rax,0xff
  408615:	jle    40862c <memcpy@plt+0x5b7c>
  408617:	call   402910 <__errno_location@plt>
  40861c:	mov    DWORD PTR [rax],0x5a
  408622:	mov    eax,0xffffffff
  408627:	jmp    408772 <memcpy@plt+0x5cc2>
  40862c:	mov    eax,0x1
  408631:	jmp    408772 <memcpy@plt+0x5cc2>
  408636:	cmp    DWORD PTR [rbp-0x38],0x0
  40863a:	je     408647 <memcpy@plt+0x5b97>
  40863c:	mov    rax,QWORD PTR [rbp-0x48]
  408640:	movzx  eax,BYTE PTR [rax]
  408643:	cmp    al,0x2e
  408645:	jne    40865c <memcpy@plt+0x5bac>
  408647:	call   402910 <__errno_location@plt>
  40864c:	mov    DWORD PTR [rax],0x5a
  408652:	mov    eax,0xffffffff
  408657:	jmp    408772 <memcpy@plt+0x5cc2>
  40865c:	mov    rax,QWORD PTR [rbp-0x20]
  408660:	lea    rdx,[rax+0x1]
  408664:	mov    QWORD PTR [rbp-0x20],rdx
  408668:	mov    QWORD PTR [rbp-0x28],rax
  40866c:	jmp    40869e <memcpy@plt+0x5bee>
  40866e:	mov    rax,QWORD PTR [rbp-0x20]
  408672:	cmp    QWORD PTR [rbp-0x18],rax
  408676:	ja     40868d <memcpy@plt+0x5bdd>
  408678:	call   402910 <__errno_location@plt>
  40867d:	mov    DWORD PTR [rax],0x5a
  408683:	mov    eax,0xffffffff
  408688:	jmp    408772 <memcpy@plt+0x5cc2>
  40868d:	mov    rax,QWORD PTR [rbp-0x20]
  408691:	lea    rdx,[rax+0x1]
  408695:	mov    QWORD PTR [rbp-0x20],rdx
  408699:	mov    edx,DWORD PTR [rbp-0x38]
  40869c:	mov    BYTE PTR [rax],dl
  40869e:	mov    rax,QWORD PTR [rbp-0x48]
  4086a2:	lea    rdx,[rax+0x1]
  4086a6:	mov    QWORD PTR [rbp-0x48],rdx
  4086aa:	movzx  eax,BYTE PTR [rax]
  4086ad:	movsx  eax,al
  4086b0:	mov    DWORD PTR [rbp-0x38],eax
  4086b3:	cmp    DWORD PTR [rbp-0x38],0x0
  4086b7:	jne    408333 <memcpy@plt+0x5883>
  4086bd:	mov    rdx,QWORD PTR [rbp-0x20]
  4086c1:	mov    rax,QWORD PTR [rbp-0x28]
  4086c5:	sub    rdx,rax
  4086c8:	mov    rax,rdx
  4086cb:	dec    eax
  4086cd:	mov    DWORD PTR [rbp-0x38],eax
  4086d0:	mov    eax,DWORD PTR [rbp-0x38]
  4086d3:	and    eax,0xc0
  4086d8:	test   eax,eax
  4086da:	je     4086f4 <memcpy@plt+0x5c44>
  4086dc:	call   402910 <__errno_location@plt>
  4086e1:	mov    DWORD PTR [rax],0x5a
  4086e7:	mov    eax,0xffffffff
  4086ec:	jmp    408772 <memcpy@plt+0x5cc2>
  4086f1:	nop
  4086f2:	jmp    4086f5 <memcpy@plt+0x5c45>
  4086f4:	nop
  4086f5:	mov    rax,QWORD PTR [rbp-0x28]
  4086f9:	cmp    QWORD PTR [rbp-0x18],rax
  4086fd:	ja     408711 <memcpy@plt+0x5c61>
  4086ff:	call   402910 <__errno_location@plt>
  408704:	mov    DWORD PTR [rax],0x5a
  40870a:	mov    eax,0xffffffff
  40870f:	jmp    408772 <memcpy@plt+0x5cc2>
  408711:	mov    rax,QWORD PTR [rbp-0x28]
  408715:	mov    edx,DWORD PTR [rbp-0x38]
  408718:	mov    BYTE PTR [rax],dl
  40871a:	cmp    DWORD PTR [rbp-0x38],0x0
  40871e:	je     40874b <memcpy@plt+0x5c9b>
  408720:	mov    rax,QWORD PTR [rbp-0x20]
  408724:	cmp    QWORD PTR [rbp-0x18],rax
  408728:	ja     40873c <memcpy@plt+0x5c8c>
  40872a:	call   402910 <__errno_location@plt>
  40872f:	mov    DWORD PTR [rax],0x5a
  408735:	mov    eax,0xffffffff
  40873a:	jmp    408772 <memcpy@plt+0x5cc2>
  40873c:	mov    rax,QWORD PTR [rbp-0x20]
  408740:	lea    rdx,[rax+0x1]
  408744:	mov    QWORD PTR [rbp-0x20],rdx
  408748:	mov    BYTE PTR [rax],0x0
  40874b:	mov    rax,QWORD PTR [rbp-0x20]
  40874f:	sub    rax,QWORD PTR [rbp-0x50]
  408753:	cmp    rax,0xff
  408759:	jle    40876d <memcpy@plt+0x5cbd>
  40875b:	call   402910 <__errno_location@plt>
  408760:	mov    DWORD PTR [rax],0x5a
  408766:	mov    eax,0xffffffff
  40876b:	jmp    408772 <memcpy@plt+0x5cc2>
  40876d:	mov    eax,0x0
  408772:	mov    rcx,QWORD PTR [rbp-0x8]
  408776:	xor    rcx,QWORD PTR fs:0x28
  40877f:	je     408786 <memcpy@plt+0x5cd6>
  408781:	call   402950 <__stack_chk_fail@plt>
  408786:	leave  
  408787:	ret    
  408788:	endbr64 
  40878c:	push   rbp
  40878d:	mov    rbp,rsp
  408790:	sub    rsp,0x70
  408794:	mov    QWORD PTR [rbp-0x48],rdi
  408798:	mov    QWORD PTR [rbp-0x50],rsi
  40879c:	mov    DWORD PTR [rbp-0x54],edx
  40879f:	mov    QWORD PTR [rbp-0x60],rcx
  4087a3:	mov    QWORD PTR [rbp-0x68],r8
  4087a7:	mov    DWORD PTR [rbp-0x3c],0x1
  4087ae:	mov    rax,QWORD PTR [rbp-0x48]
  4087b2:	mov    QWORD PTR [rbp-0x10],rax
  4087b6:	mov    rax,QWORD PTR [rbp-0x50]
  4087ba:	mov    QWORD PTR [rbp-0x30],rax
  4087be:	mov    eax,DWORD PTR [rbp-0x54]
  4087c1:	movsxd rdx,eax
  4087c4:	mov    rax,QWORD PTR [rbp-0x30]
  4087c8:	add    rax,rdx
  4087cb:	mov    QWORD PTR [rbp-0x8],rax
  4087cf:	mov    QWORD PTR [rbp-0x28],0x0
  4087d7:	mov    rax,QWORD PTR [rbp-0x28]
  4087db:	mov    QWORD PTR [rbp-0x20],rax
  4087df:	cmp    QWORD PTR [rbp-0x60],0x0
  4087e4:	je     408825 <memcpy@plt+0x5d75>
  4087e6:	mov    rax,QWORD PTR [rbp-0x60]
  4087ea:	lea    rdx,[rax+0x8]
  4087ee:	mov    QWORD PTR [rbp-0x60],rdx
  4087f2:	mov    rax,QWORD PTR [rax]
  4087f5:	mov    QWORD PTR [rbp-0x18],rax
  4087f9:	cmp    QWORD PTR [rbp-0x18],0x0
  4087fe:	je     40882d <memcpy@plt+0x5d7d>
  408800:	mov    rax,QWORD PTR [rbp-0x60]
  408804:	mov    QWORD PTR [rbp-0x28],rax
  408808:	jmp    40880f <memcpy@plt+0x5d5f>
  40880a:	add    QWORD PTR [rbp-0x28],0x8
  40880f:	mov    rax,QWORD PTR [rbp-0x28]
  408813:	mov    rax,QWORD PTR [rax]
  408816:	test   rax,rax
  408819:	jne    40880a <memcpy@plt+0x5d5a>
  40881b:	mov    rax,QWORD PTR [rbp-0x28]
  40881f:	mov    QWORD PTR [rbp-0x20],rax
  408823:	jmp    40882d <memcpy@plt+0x5d7d>
  408825:	mov    QWORD PTR [rbp-0x18],0x0
  40882d:	mov    DWORD PTR [rbp-0x40],0x0
  408834:	mov    rax,QWORD PTR [rbp-0x10]
  408838:	movzx  eax,BYTE PTR [rax]
  40883b:	movzx  eax,al
  40883e:	mov    DWORD PTR [rbp-0x38],eax
  408841:	mov    eax,DWORD PTR [rbp-0x38]
  408844:	and    eax,0xc0
  408849:	cmp    eax,0xc0
  40884e:	jne    408865 <memcpy@plt+0x5db5>
  408850:	call   402910 <__errno_location@plt>
  408855:	mov    DWORD PTR [rax],0x5a
  40885b:	mov    eax,0xffffffff
  408860:	jmp    408a6f <memcpy@plt+0x5fbf>
  408865:	mov    rax,QWORD PTR [rbp-0x10]
  408869:	mov    rdi,rax
  40886c:	call   408049 <memcpy@plt+0x5599>
  408871:	mov    DWORD PTR [rbp-0x34],eax
  408874:	cmp    DWORD PTR [rbp-0x34],0x0
  408878:	jns    40888f <memcpy@plt+0x5ddf>
  40887a:	call   402910 <__errno_location@plt>
  40887f:	mov    DWORD PTR [rax],0x16
  408885:	mov    eax,0xffffffff
  40888a:	jmp    408a6f <memcpy@plt+0x5fbf>
  40888f:	mov    eax,DWORD PTR [rbp-0x34]
  408892:	inc    eax
  408894:	add    DWORD PTR [rbp-0x40],eax
  408897:	cmp    DWORD PTR [rbp-0x40],0xff
  40889e:	jle    4088b5 <memcpy@plt+0x5e05>
  4088a0:	call   402910 <__errno_location@plt>
  4088a5:	mov    DWORD PTR [rax],0x5a
  4088ab:	mov    eax,0xffffffff
  4088b0:	jmp    408a6f <memcpy@plt+0x5fbf>
  4088b5:	mov    eax,DWORD PTR [rbp-0x34]
  4088b8:	cdqe   
  4088ba:	inc    rax
  4088bd:	add    QWORD PTR [rbp-0x10],rax
  4088c1:	cmp    DWORD PTR [rbp-0x38],0x0
  4088c5:	jne    408834 <memcpy@plt+0x5d84>
  4088cb:	mov    rax,QWORD PTR [rbp-0x48]
  4088cf:	mov    QWORD PTR [rbp-0x10],rax
  4088d3:	mov    rax,QWORD PTR [rbp-0x10]
  4088d7:	movzx  eax,BYTE PTR [rax]
  4088da:	movzx  eax,al
  4088dd:	mov    DWORD PTR [rbp-0x38],eax
  4088e0:	cmp    DWORD PTR [rbp-0x38],0x0
  4088e4:	je     4089bf <memcpy@plt+0x5f0f>
  4088ea:	cmp    QWORD PTR [rbp-0x18],0x0
  4088ef:	je     4089bf <memcpy@plt+0x5f0f>
  4088f5:	mov    rcx,QWORD PTR [rbp-0x20]
  4088f9:	mov    rdx,QWORD PTR [rbp-0x60]
  4088fd:	mov    rsi,QWORD PTR [rbp-0x18]
  408901:	mov    rax,QWORD PTR [rbp-0x10]
  408905:	mov    rdi,rax
  408908:	call   408e65 <memcpy@plt+0x63b5>
  40890d:	mov    DWORD PTR [rbp-0x40],eax
  408910:	cmp    DWORD PTR [rbp-0x40],0x0
  408914:	js     40896f <memcpy@plt+0x5ebf>
  408916:	mov    rax,QWORD PTR [rbp-0x30]
  40891a:	inc    rax
  40891d:	cmp    QWORD PTR [rbp-0x8],rax
  408921:	jbe    408a3c <memcpy@plt+0x5f8c>
  408927:	mov    eax,DWORD PTR [rbp-0x40]
  40892a:	sar    eax,0x8
  40892d:	or     eax,0xffffffc0
  408930:	mov    ecx,eax
  408932:	mov    rax,QWORD PTR [rbp-0x30]
  408936:	lea    rdx,[rax+0x1]
  40893a:	mov    QWORD PTR [rbp-0x30],rdx
  40893e:	mov    edx,ecx
  408940:	mov    BYTE PTR [rax],dl
  408942:	mov    eax,DWORD PTR [rbp-0x40]
  408945:	cdq    
  408946:	shr    edx,0x18
  408949:	add    eax,edx
  40894b:	movzx  eax,al
  40894e:	sub    eax,edx
  408950:	mov    ecx,eax
  408952:	mov    rax,QWORD PTR [rbp-0x30]
  408956:	lea    rdx,[rax+0x1]
  40895a:	mov    QWORD PTR [rbp-0x30],rdx
  40895e:	mov    edx,ecx
  408960:	mov    BYTE PTR [rax],dl
  408962:	mov    rax,QWORD PTR [rbp-0x30]
  408966:	sub    rax,QWORD PTR [rbp-0x50]
  40896a:	jmp    408a6f <memcpy@plt+0x5fbf>
  40896f:	cmp    QWORD PTR [rbp-0x68],0x0
  408974:	je     4089bf <memcpy@plt+0x5f0f>
  408976:	mov    rax,QWORD PTR [rbp-0x68]
  40897a:	sub    rax,0x8
  40897e:	cmp    QWORD PTR [rbp-0x28],rax
  408982:	jae    4089bf <memcpy@plt+0x5f0f>
  408984:	mov    rax,QWORD PTR [rbp-0x30]
  408988:	sub    rax,QWORD PTR [rbp-0x18]
  40898c:	cmp    rax,0x3fff
  408992:	jg     4089bf <memcpy@plt+0x5f0f>
  408994:	cmp    DWORD PTR [rbp-0x3c],0x0
  408998:	je     4089bf <memcpy@plt+0x5f0f>
  40899a:	mov    rax,QWORD PTR [rbp-0x28]
  40899e:	lea    rdx,[rax+0x8]
  4089a2:	mov    QWORD PTR [rbp-0x28],rdx
  4089a6:	mov    rdx,QWORD PTR [rbp-0x30]
  4089aa:	mov    QWORD PTR [rax],rdx
  4089ad:	mov    rax,QWORD PTR [rbp-0x28]
  4089b1:	mov    QWORD PTR [rax],0x0
  4089b8:	mov    DWORD PTR [rbp-0x3c],0x0
  4089bf:	mov    eax,DWORD PTR [rbp-0x38]
  4089c2:	and    eax,0xc0
  4089c7:	cmp    eax,0xc0
  4089cc:	je     408a3f <memcpy@plt+0x5f8f>
  4089ce:	mov    rax,QWORD PTR [rbp-0x10]
  4089d2:	mov    rdi,rax
  4089d5:	call   408049 <memcpy@plt+0x5599>
  4089da:	mov    DWORD PTR [rbp-0x38],eax
  4089dd:	mov    eax,DWORD PTR [rbp-0x38]
  4089e0:	cdqe   
  4089e2:	lea    rdx,[rax+0x1]
  4089e6:	mov    rax,QWORD PTR [rbp-0x30]
  4089ea:	add    rax,rdx
  4089ed:	cmp    QWORD PTR [rbp-0x8],rax
  4089f1:	jbe    408a42 <memcpy@plt+0x5f92>
  4089f3:	mov    eax,DWORD PTR [rbp-0x38]
  4089f6:	inc    eax
  4089f8:	movsxd rdx,eax
  4089fb:	mov    rcx,QWORD PTR [rbp-0x10]
  4089ff:	mov    rax,QWORD PTR [rbp-0x30]
  408a03:	mov    rsi,rcx
  408a06:	mov    rdi,rax
  408a09:	call   402ab0 <memcpy@plt>
  408a0e:	mov    eax,DWORD PTR [rbp-0x38]
  408a11:	cdqe   
  408a13:	inc    rax
  408a16:	add    QWORD PTR [rbp-0x10],rax
  408a1a:	mov    eax,DWORD PTR [rbp-0x38]
  408a1d:	cdqe   
  408a1f:	inc    rax
  408a22:	add    QWORD PTR [rbp-0x30],rax
  408a26:	cmp    DWORD PTR [rbp-0x38],0x0
  408a2a:	jne    4088d3 <memcpy@plt+0x5e23>
  408a30:	mov    rax,QWORD PTR [rbp-0x30]
  408a34:	cmp    rax,QWORD PTR [rbp-0x8]
  408a38:	jbe    408a67 <memcpy@plt+0x5fb7>
  408a3a:	jmp    408a43 <memcpy@plt+0x5f93>
  408a3c:	nop
  408a3d:	jmp    408a43 <memcpy@plt+0x5f93>
  408a3f:	nop
  408a40:	jmp    408a43 <memcpy@plt+0x5f93>
  408a42:	nop
  408a43:	cmp    QWORD PTR [rbp-0x18],0x0
  408a48:	je     408a55 <memcpy@plt+0x5fa5>
  408a4a:	mov    rax,QWORD PTR [rbp-0x20]
  408a4e:	mov    QWORD PTR [rax],0x0
  408a55:	call   402910 <__errno_location@plt>
  408a5a:	mov    DWORD PTR [rax],0x5a
  408a60:	mov    eax,0xffffffff
  408a65:	jmp    408a6f <memcpy@plt+0x5fbf>
  408a67:	mov    rax,QWORD PTR [rbp-0x30]
  408a6b:	sub    rax,QWORD PTR [rbp-0x50]
  408a6f:	leave  
  408a70:	ret    
  408a71:	endbr64 
  408a75:	push   rbp
  408a76:	mov    rbp,rsp
  408a79:	sub    rsp,0x140
  408a80:	mov    QWORD PTR [rbp-0x118],rdi
  408a87:	mov    QWORD PTR [rbp-0x120],rsi
  408a8e:	mov    QWORD PTR [rbp-0x128],rdx
  408a95:	mov    QWORD PTR [rbp-0x130],rcx
  408a9c:	mov    QWORD PTR [rbp-0x138],r8
  408aa3:	mov    rax,QWORD PTR fs:0x28
  408aac:	mov    QWORD PTR [rbp-0x8],rax
  408ab0:	xor    eax,eax
  408ab2:	lea    rcx,[rbp-0x110]
  408ab9:	mov    rax,QWORD PTR [rbp-0x118]
  408ac0:	mov    edx,0xff
  408ac5:	mov    rsi,rcx
  408ac8:	mov    rdi,rax
  408acb:	call   4082d2 <memcpy@plt+0x5822>
  408ad0:	cmp    eax,0xffffffff
  408ad3:	jne    408adc <memcpy@plt+0x602c>
  408ad5:	mov    eax,0xffffffff
  408ada:	jmp    408b11 <memcpy@plt+0x6061>
  408adc:	mov    rax,QWORD PTR [rbp-0x128]
  408ae3:	mov    edi,eax
  408ae5:	mov    rcx,QWORD PTR [rbp-0x138]
  408aec:	mov    rdx,QWORD PTR [rbp-0x130]
  408af3:	mov    rsi,QWORD PTR [rbp-0x120]
  408afa:	lea    rax,[rbp-0x110]
  408b01:	mov    r8,rcx
  408b04:	mov    rcx,rdx
  408b07:	mov    edx,edi
  408b09:	mov    rdi,rax
  408b0c:	call   408788 <memcpy@plt+0x5cd8>
  408b11:	mov    rdx,QWORD PTR [rbp-0x8]
  408b15:	xor    rdx,QWORD PTR fs:0x28
  408b1e:	je     408b25 <memcpy@plt+0x6075>
  408b20:	call   402950 <__stack_chk_fail@plt>
  408b25:	leave  
  408b26:	ret    
  408b27:	endbr64 
  408b2b:	push   rbp
  408b2c:	mov    rbp,rsp
  408b2f:	add    rsp,0xffffffffffffff80
  408b33:	mov    QWORD PTR [rbp-0x58],rdi
  408b37:	mov    QWORD PTR [rbp-0x60],rsi
  408b3b:	mov    QWORD PTR [rbp-0x68],rdx
  408b3f:	mov    QWORD PTR [rbp-0x70],rcx
  408b43:	mov    QWORD PTR [rbp-0x78],r8
  408b47:	mov    rax,QWORD PTR fs:0x28
  408b50:	mov    QWORD PTR [rbp-0x8],rax
  408b54:	xor    eax,eax
  408b56:	mov    DWORD PTR [rbp-0x40],0x0
  408b5d:	mov    rax,QWORD PTR [rbp-0x58]
  408b61:	mov    rax,QWORD PTR [rax]
  408b64:	mov    QWORD PTR [rbp-0x20],rax
  408b68:	mov    QWORD PTR [rbp-0x28],0x0
  408b70:	mov    DWORD PTR [rbp-0x3c],0x0
  408b77:	mov    DWORD PTR [rbp-0x38],0x0
  408b7e:	mov    DWORD PTR [rbp-0x34],0x0
  408b85:	mov    DWORD PTR [rbp-0x30],0x0
  408b8c:	mov    QWORD PTR [rbp-0x28],0x0
  408b94:	mov    QWORD PTR [rbp-0x10],0x0
  408b9c:	mov    rax,QWORD PTR [rbp-0x60]
  408ba0:	sub    rax,QWORD PTR [rbp-0x20]
  408ba4:	cmp    rax,0x1
  408ba8:	jg     408bb4 <memcpy@plt+0x6104>
  408baa:	mov    eax,0x16
  408baf:	jmp    408e4f <memcpy@plt+0x639f>
  408bb4:	mov    rax,QWORD PTR [rbp-0x20]
  408bb8:	lea    rdx,[rax+0x1]
  408bbc:	mov    QWORD PTR [rbp-0x20],rdx
  408bc0:	movzx  eax,BYTE PTR [rax]
  408bc3:	cmp    al,0x78
  408bc5:	je     408bd1 <memcpy@plt+0x6121>
  408bc7:	mov    eax,0x16
  408bcc:	jmp    408e4f <memcpy@plt+0x639f>
  408bd1:	call   402790 <__ctype_b_loc@plt>
  408bd6:	mov    rdx,QWORD PTR [rax]
  408bd9:	mov    rax,QWORD PTR [rbp-0x20]
  408bdd:	movzx  eax,BYTE PTR [rax]
  408be0:	movsx  rax,al
  408be4:	movzx  eax,al
  408be7:	add    rax,rax
  408bea:	add    rax,rdx
  408bed:	movzx  eax,WORD PTR [rax]
  408bf0:	movzx  eax,ax
  408bf3:	and    eax,0x1000
  408bf8:	test   eax,eax
  408bfa:	jne    408c06 <memcpy@plt+0x6156>
  408bfc:	mov    eax,0x16
  408c01:	jmp    408e4f <memcpy@plt+0x639f>
  408c06:	mov    rax,QWORD PTR [rbp-0x70]
  408c0a:	add    rax,0x8
  408c0e:	mov    QWORD PTR [rbp-0x18],rax
  408c12:	jmp    408d8f <memcpy@plt+0x62df>
  408c17:	mov    rax,QWORD PTR [rbp-0x20]
  408c1b:	movzx  eax,BYTE PTR [rax]
  408c1e:	mov    BYTE PTR [rbp-0x41],al
  408c21:	movsx  eax,BYTE PTR [rbp-0x41]
  408c25:	cmp    eax,0x2f
  408c28:	je     408c9d <memcpy@plt+0x61ed>
  408c2a:	cmp    eax,0x5d
  408c2d:	jne    408ca9 <memcpy@plt+0x61f9>
  408c2f:	cmp    DWORD PTR [rbp-0x40],0x0
  408c33:	je     408c76 <memcpy@plt+0x61c6>
  408c35:	cmp    QWORD PTR [rbp-0x10],0x0
  408c3a:	jne    408c46 <memcpy@plt+0x6196>
  408c3c:	mov    eax,0x16
  408c41:	jmp    408e4f <memcpy@plt+0x639f>
  408c46:	lea    rcx,[rbp-0x28]
  408c4a:	mov    rax,QWORD PTR [rbp-0x10]
  408c4e:	mov    edx,0xa
  408c53:	mov    rsi,rcx
  408c56:	mov    rdi,rax
  408c59:	call   402860 <strtol@plt>
  408c5e:	mov    DWORD PTR [rbp-0x30],eax
  408c61:	mov    rax,QWORD PTR [rbp-0x28]
  408c65:	movzx  eax,BYTE PTR [rax]
  408c68:	cmp    al,0x5d
  408c6a:	je     408c76 <memcpy@plt+0x61c6>
  408c6c:	mov    eax,0x16
  408c71:	jmp    408e4f <memcpy@plt+0x639f>
  408c76:	cmp    DWORD PTR [rbp-0x38],0x0
  408c7a:	je     408c94 <memcpy@plt+0x61e4>
  408c7c:	mov    eax,DWORD PTR [rbp-0x3c]
  408c7f:	shl    eax,0x4
  408c82:	mov    ecx,eax
  408c84:	mov    rax,QWORD PTR [rbp-0x18]
  408c88:	lea    rdx,[rax+0x1]
  408c8c:	mov    QWORD PTR [rbp-0x18],rdx
  408c90:	mov    edx,ecx
  408c92:	mov    BYTE PTR [rax],dl
  408c94:	inc    QWORD PTR [rbp-0x20]
  408c98:	jmp    408da8 <memcpy@plt+0x62f8>
  408c9d:	mov    DWORD PTR [rbp-0x40],0x1
  408ca4:	jmp    408d8b <memcpy@plt+0x62db>
  408ca9:	cmp    DWORD PTR [rbp-0x40],0x0
  408cad:	je     408d06 <memcpy@plt+0x6256>
  408caf:	call   402790 <__ctype_b_loc@plt>
  408cb4:	mov    rdx,QWORD PTR [rax]
  408cb7:	movsx  rax,BYTE PTR [rbp-0x41]
  408cbc:	movzx  eax,al
  408cbf:	add    rax,rax
  408cc2:	add    rax,rdx
  408cc5:	movzx  eax,WORD PTR [rax]
  408cc8:	movzx  eax,ax
  408ccb:	and    eax,0x800
  408cd0:	test   eax,eax
  408cd2:	jne    408cde <memcpy@plt+0x622e>
  408cd4:	mov    eax,0x16
  408cd9:	jmp    408e4f <memcpy@plt+0x639f>
  408cde:	cmp    QWORD PTR [rbp-0x10],0x0
  408ce3:	jne    408d8a <memcpy@plt+0x62da>
  408ce9:	cmp    BYTE PTR [rbp-0x41],0x30
  408ced:	jne    408cf9 <memcpy@plt+0x6249>
  408cef:	mov    eax,0x16
  408cf4:	jmp    408e4f <memcpy@plt+0x639f>
  408cf9:	mov    rax,QWORD PTR [rbp-0x20]
  408cfd:	mov    QWORD PTR [rbp-0x10],rax
  408d01:	jmp    408d8a <memcpy@plt+0x62da>
  408d06:	call   402790 <__ctype_b_loc@plt>
  408d0b:	mov    rdx,QWORD PTR [rax]
  408d0e:	movsx  rax,BYTE PTR [rbp-0x41]
  408d13:	movzx  eax,al
  408d16:	add    rax,rax
  408d19:	add    rax,rdx
  408d1c:	movzx  eax,WORD PTR [rax]
  408d1f:	movzx  eax,ax
  408d22:	and    eax,0x1000
  408d27:	test   eax,eax
  408d29:	jne    408d35 <memcpy@plt+0x6285>
  408d2b:	mov    eax,0x16
  408d30:	jmp    408e4f <memcpy@plt+0x639f>
  408d35:	shl    DWORD PTR [rbp-0x3c],0x4
  408d39:	movsx  eax,BYTE PTR [rbp-0x41]
  408d3d:	movsxd rdx,eax
  408d40:	lea    rax,[rip+0x6a79]        # 40f7c0 <memcpy@plt+0xcd10>
  408d47:	movzx  eax,BYTE PTR [rdx+rax*1]
  408d4b:	movsx  eax,al
  408d4e:	add    DWORD PTR [rbp-0x3c],eax
  408d51:	add    DWORD PTR [rbp-0x38],0x4
  408d55:	add    DWORD PTR [rbp-0x34],0x4
  408d59:	cmp    DWORD PTR [rbp-0x34],0x100
  408d60:	jle    408d6c <memcpy@plt+0x62bc>
  408d62:	mov    eax,0x16
  408d67:	jmp    408e4f <memcpy@plt+0x639f>
  408d6c:	cmp    DWORD PTR [rbp-0x38],0x8
  408d70:	jne    408d8a <memcpy@plt+0x62da>
  408d72:	mov    rax,QWORD PTR [rbp-0x18]
  408d76:	lea    rdx,[rax+0x1]
  408d7a:	mov    QWORD PTR [rbp-0x18],rdx
  408d7e:	mov    edx,DWORD PTR [rbp-0x3c]
  408d81:	mov    BYTE PTR [rax],dl
  408d83:	mov    DWORD PTR [rbp-0x38],0x0
  408d8a:	nop
  408d8b:	inc    QWORD PTR [rbp-0x20]
  408d8f:	mov    rax,QWORD PTR [rbp-0x20]
  408d93:	cmp    rax,QWORD PTR [rbp-0x60]
  408d97:	jae    408da7 <memcpy@plt+0x62f7>
  408d99:	mov    rax,QWORD PTR [rbp-0x18]
  408d9d:	cmp    rax,QWORD PTR [rbp-0x78]
  408da1:	jb     408c17 <memcpy@plt+0x6167>
  408da7:	nop
  408da8:	mov    rax,QWORD PTR [rbp-0x20]
  408dac:	cmp    rax,QWORD PTR [rbp-0x60]
  408db0:	jae    408dbc <memcpy@plt+0x630c>
  408db2:	mov    rax,QWORD PTR [rbp-0x18]
  408db6:	cmp    rax,QWORD PTR [rbp-0x78]
  408dba:	jb     408dc6 <memcpy@plt+0x6316>
  408dbc:	mov    eax,0x5a
  408dc1:	jmp    408e4f <memcpy@plt+0x639f>
  408dc6:	cmp    DWORD PTR [rbp-0x30],0x0
  408dca:	jle    408e08 <memcpy@plt+0x6358>
  408dcc:	mov    eax,DWORD PTR [rbp-0x30]
  408dcf:	add    eax,0x3
  408dd2:	and    eax,0xfffffffc
  408dd5:	cmp    DWORD PTR [rbp-0x34],eax
  408dd8:	je     408de1 <memcpy@plt+0x6331>
  408dda:	mov    eax,0x16
  408ddf:	jmp    408e4f <memcpy@plt+0x639f>
  408de1:	mov    eax,DWORD PTR [rbp-0x34]
  408de4:	sub    eax,DWORD PTR [rbp-0x30]
  408de7:	mov    DWORD PTR [rbp-0x2c],eax
  408dea:	mov    eax,0x8
  408def:	sub    eax,DWORD PTR [rbp-0x2c]
  408df2:	mov    edx,DWORD PTR [rbp-0x3c]
  408df5:	shlx   eax,edx,eax
  408dfa:	movzx  eax,al
  408dfd:	test   eax,eax
  408dff:	je     408e0e <memcpy@plt+0x635e>
  408e01:	mov    eax,0x16
  408e06:	jmp    408e4f <memcpy@plt+0x639f>
  408e08:	mov    eax,DWORD PTR [rbp-0x34]
  408e0b:	mov    DWORD PTR [rbp-0x30],eax
  408e0e:	cmp    DWORD PTR [rbp-0x30],0x100
  408e15:	jne    408e1e <memcpy@plt+0x636e>
  408e17:	mov    DWORD PTR [rbp-0x30],0x0
  408e1e:	mov    rax,QWORD PTR [rbp-0x68]
  408e22:	mov    rax,QWORD PTR [rax]
  408e25:	mov    BYTE PTR [rax],0x41
  408e28:	mov    rax,QWORD PTR [rbp-0x70]
  408e2c:	mov    rax,QWORD PTR [rax]
  408e2f:	mov    edx,DWORD PTR [rbp-0x30]
  408e32:	mov    BYTE PTR [rax],dl
  408e34:	mov    rax,QWORD PTR [rbp-0x58]
  408e38:	mov    rdx,QWORD PTR [rbp-0x20]
  408e3c:	mov    QWORD PTR [rax],rdx
  408e3f:	mov    rax,QWORD PTR [rbp-0x70]
  408e43:	mov    rdx,QWORD PTR [rbp-0x18]
  408e47:	mov    QWORD PTR [rax],rdx
  408e4a:	mov    eax,0x0
  408e4f:	mov    rsi,QWORD PTR [rbp-0x8]
  408e53:	xor    rsi,QWORD PTR fs:0x28
  408e5c:	je     408e63 <memcpy@plt+0x63b3>
  408e5e:	call   402950 <__stack_chk_fail@plt>
  408e63:	leave  
  408e64:	ret    
  408e65:	endbr64 
  408e69:	push   rbp
  408e6a:	mov    rbp,rsp
  408e6d:	push   rbx
  408e6e:	sub    rsp,0x58
  408e72:	mov    QWORD PTR [rbp-0x48],rdi
  408e76:	mov    QWORD PTR [rbp-0x50],rsi
  408e7a:	mov    QWORD PTR [rbp-0x58],rdx
  408e7e:	mov    QWORD PTR [rbp-0x60],rcx
  408e82:	mov    rax,QWORD PTR [rbp-0x58]
  408e86:	mov    QWORD PTR [rbp-0x18],rax
  408e8a:	jmp    409021 <memcpy@plt+0x6571>
  408e8f:	mov    rax,QWORD PTR [rbp-0x18]
  408e93:	mov    rax,QWORD PTR [rax]
  408e96:	mov    QWORD PTR [rbp-0x20],rax
  408e9a:	jmp    408fea <memcpy@plt+0x653a>
  408e9f:	mov    rax,QWORD PTR [rbp-0x48]
  408ea3:	mov    QWORD PTR [rbp-0x30],rax
  408ea7:	mov    rax,QWORD PTR [rbp-0x20]
  408eab:	mov    QWORD PTR [rbp-0x28],rax
  408eaf:	jmp    408fb1 <memcpy@plt+0x6501>
  408eb4:	mov    eax,DWORD PTR [rbp-0x34]
  408eb7:	and    eax,0xc0
  408ebc:	test   eax,eax
  408ebe:	je     408ed0 <memcpy@plt+0x6420>
  408ec0:	cmp    eax,0xc0
  408ec5:	je     408f74 <memcpy@plt+0x64c4>
  408ecb:	jmp    408f9c <memcpy@plt+0x64ec>
  408ed0:	mov    rax,QWORD PTR [rbp-0x28]
  408ed4:	dec    rax
  408ed7:	mov    rdi,rax
  408eda:	call   408049 <memcpy@plt+0x5599>
  408edf:	mov    DWORD PTR [rbp-0x34],eax
  408ee2:	mov    rax,QWORD PTR [rbp-0x30]
  408ee6:	lea    rdx,[rax+0x1]
  408eea:	mov    QWORD PTR [rbp-0x30],rdx
  408eee:	movzx  eax,BYTE PTR [rax]
  408ef1:	movzx  eax,al
  408ef4:	cmp    DWORD PTR [rbp-0x34],eax
  408ef7:	jne    408fd2 <memcpy@plt+0x6522>
  408efd:	jmp    408f3e <memcpy@plt+0x648e>
  408eff:	mov    rax,QWORD PTR [rbp-0x30]
  408f03:	lea    rdx,[rax+0x1]
  408f07:	mov    QWORD PTR [rbp-0x30],rdx
  408f0b:	movzx  eax,BYTE PTR [rax]
  408f0e:	movzx  eax,al
  408f11:	mov    edi,eax
  408f13:	call   409046 <memcpy@plt+0x6596>
  408f18:	mov    ebx,eax
  408f1a:	mov    rax,QWORD PTR [rbp-0x28]
  408f1e:	lea    rdx,[rax+0x1]
  408f22:	mov    QWORD PTR [rbp-0x28],rdx
  408f26:	movzx  eax,BYTE PTR [rax]
  408f29:	movzx  eax,al
  408f2c:	mov    edi,eax
  408f2e:	call   409046 <memcpy@plt+0x6596>
  408f33:	cmp    ebx,eax
  408f35:	jne    408fd5 <memcpy@plt+0x6525>
  408f3b:	dec    DWORD PTR [rbp-0x34]
  408f3e:	cmp    DWORD PTR [rbp-0x34],0x0
  408f42:	jne    408eff <memcpy@plt+0x644f>
  408f44:	mov    rax,QWORD PTR [rbp-0x30]
  408f48:	movzx  eax,BYTE PTR [rax]
  408f4b:	test   al,al
  408f4d:	jne    408f67 <memcpy@plt+0x64b7>
  408f4f:	mov    rax,QWORD PTR [rbp-0x28]
  408f53:	movzx  eax,BYTE PTR [rax]
  408f56:	test   al,al
  408f58:	jne    408f67 <memcpy@plt+0x64b7>
  408f5a:	mov    rax,QWORD PTR [rbp-0x20]
  408f5e:	sub    rax,QWORD PTR [rbp-0x50]
  408f62:	jmp    40903f <memcpy@plt+0x658f>
  408f67:	mov    rax,QWORD PTR [rbp-0x30]
  408f6b:	movzx  eax,BYTE PTR [rax]
  408f6e:	test   al,al
  408f70:	je     408fd8 <memcpy@plt+0x6528>
  408f72:	jmp    408fb1 <memcpy@plt+0x6501>
  408f74:	mov    eax,DWORD PTR [rbp-0x34]
  408f77:	shl    eax,0x8
  408f7a:	and    eax,0x3f00
  408f7f:	mov    edx,eax
  408f81:	mov    rax,QWORD PTR [rbp-0x28]
  408f85:	movzx  eax,BYTE PTR [rax]
  408f88:	movzx  eax,al
  408f8b:	or     eax,edx
  408f8d:	mov    edx,eax
  408f8f:	mov    rax,QWORD PTR [rbp-0x50]
  408f93:	add    rax,rdx
  408f96:	mov    QWORD PTR [rbp-0x28],rax
  408f9a:	jmp    408fb1 <memcpy@plt+0x6501>
  408f9c:	call   402910 <__errno_location@plt>
  408fa1:	mov    DWORD PTR [rax],0x5a
  408fa7:	mov    eax,0xffffffff
  408fac:	jmp    40903f <memcpy@plt+0x658f>
  408fb1:	mov    rax,QWORD PTR [rbp-0x28]
  408fb5:	lea    rdx,[rax+0x1]
  408fb9:	mov    QWORD PTR [rbp-0x28],rdx
  408fbd:	movzx  eax,BYTE PTR [rax]
  408fc0:	movzx  eax,al
  408fc3:	mov    DWORD PTR [rbp-0x34],eax
  408fc6:	cmp    DWORD PTR [rbp-0x34],0x0
  408fca:	jne    408eb4 <memcpy@plt+0x6404>
  408fd0:	jmp    408fd9 <memcpy@plt+0x6529>
  408fd2:	nop
  408fd3:	jmp    408fd9 <memcpy@plt+0x6529>
  408fd5:	nop
  408fd6:	jmp    408fd9 <memcpy@plt+0x6529>
  408fd8:	nop
  408fd9:	mov    rax,QWORD PTR [rbp-0x20]
  408fdd:	movzx  eax,BYTE PTR [rax]
  408fe0:	movzx  eax,al
  408fe3:	inc    rax
  408fe6:	add    QWORD PTR [rbp-0x20],rax
  408fea:	mov    rax,QWORD PTR [rbp-0x20]
  408fee:	movzx  eax,BYTE PTR [rax]
  408ff1:	test   al,al
  408ff3:	je     40901c <memcpy@plt+0x656c>
  408ff5:	mov    rax,QWORD PTR [rbp-0x20]
  408ff9:	movzx  eax,BYTE PTR [rax]
  408ffc:	movzx  eax,al
  408fff:	and    eax,0xc0
  409004:	test   eax,eax
  409006:	jne    40901c <memcpy@plt+0x656c>
  409008:	mov    rax,QWORD PTR [rbp-0x20]
  40900c:	sub    rax,QWORD PTR [rbp-0x50]
  409010:	cmp    rax,0x3fff
  409016:	jle    408e9f <memcpy@plt+0x63ef>
  40901c:	add    QWORD PTR [rbp-0x18],0x8
  409021:	mov    rax,QWORD PTR [rbp-0x18]
  409025:	cmp    rax,QWORD PTR [rbp-0x60]
  409029:	jb     408e8f <memcpy@plt+0x63df>
  40902f:	call   402910 <__errno_location@plt>
  409034:	mov    DWORD PTR [rax],0x2
  40903a:	mov    eax,0xffffffff
  40903f:	add    rsp,0x58
  409043:	pop    rbx
  409044:	pop    rbp
  409045:	ret    
  409046:	endbr64 
  40904a:	push   rbp
  40904b:	mov    rbp,rsp
  40904e:	mov    DWORD PTR [rbp-0x4],edi
  409051:	cmp    DWORD PTR [rbp-0x4],0x40
  409055:	jle    409065 <memcpy@plt+0x65b5>
  409057:	cmp    DWORD PTR [rbp-0x4],0x5a
  40905b:	jg     409065 <memcpy@plt+0x65b5>
  40905d:	mov    eax,DWORD PTR [rbp-0x4]
  409060:	add    eax,0x20
  409063:	jmp    409068 <memcpy@plt+0x65b8>
  409065:	mov    eax,DWORD PTR [rbp-0x4]
  409068:	pop    rbp
  409069:	ret    
  40906a:	endbr64 
  40906e:	push   rbp
  40906f:	mov    rbp,rsp
  409072:	sub    rsp,0x110
  409079:	mov    QWORD PTR [rbp-0xf8],rdi
  409080:	mov    DWORD PTR [rbp-0xfc],esi
  409086:	mov    DWORD PTR [rbp-0x100],edx
  40908c:	mov    QWORD PTR [rbp-0x108],rcx
  409093:	mov    DWORD PTR [rbp-0x10c],r8d
  40909a:	mov    rax,QWORD PTR fs:0x28
  4090a3:	mov    QWORD PTR [rbp-0x8],rax
  4090a7:	xor    eax,eax
  4090a9:	cmp    QWORD PTR [rbp-0x108],0x0
  4090b1:	je     4090bc <memcpy@plt+0x660c>
  4090b3:	cmp    DWORD PTR [rbp-0x10c],0xb
  4090ba:	jg     4090c6 <memcpy@plt+0x6616>
  4090bc:	mov    eax,0xffffffff
  4090c1:	jmp    4092ec <memcpy@plt+0x683c>
  4090c6:	mov    rax,QWORD PTR [rbp-0x108]
  4090cd:	mov    edx,0xc
  4090d2:	mov    esi,0x0
  4090d7:	mov    rdi,rax
  4090da:	call   402590 <memset@plt>
  4090df:	mov    rax,QWORD PTR [rbp-0x108]
  4090e6:	mov    QWORD PTR [rbp-0xe0],rax
  4090ed:	mov    rax,QWORD PTR [rbp-0xe0]
  4090f4:	mov    WORD PTR [rax],0x0
  4090f9:	mov    rax,QWORD PTR [rbp-0xe0]
  409100:	movzx  edx,BYTE PTR [rax+0x2]
  409104:	and    edx,0xffffff87
  409107:	mov    BYTE PTR [rax+0x2],dl
  40910a:	mov    rax,QWORD PTR [rbp-0xe0]
  409111:	movzx  edx,BYTE PTR [rax+0x2]
  409115:	or     edx,0x1
  409118:	mov    BYTE PTR [rax+0x2],dl
  40911b:	mov    rax,QWORD PTR [rbp-0xe0]
  409122:	movzx  edx,BYTE PTR [rax+0x3]
  409126:	and    edx,0xfffffff0
  409129:	mov    BYTE PTR [rax+0x3],dl
  40912c:	mov    rax,QWORD PTR [rbp-0x108]
  409133:	add    rax,0xc
  409137:	mov    QWORD PTR [rbp-0xd8],rax
  40913e:	sub    DWORD PTR [rbp-0x10c],0xc
  409145:	lea    rax,[rbp-0xb0]
  40914c:	mov    QWORD PTR [rbp-0xd0],rax
  409153:	mov    rax,QWORD PTR [rbp-0xd0]
  40915a:	lea    rdx,[rax+0x8]
  40915e:	mov    QWORD PTR [rbp-0xd0],rdx
  409165:	mov    rdx,QWORD PTR [rbp-0x108]
  40916c:	mov    QWORD PTR [rax],rdx
  40916f:	mov    rax,QWORD PTR [rbp-0xd0]
  409176:	lea    rdx,[rax+0x8]
  40917a:	mov    QWORD PTR [rbp-0xd0],rdx
  409181:	mov    QWORD PTR [rax],0x0
  409188:	lea    rax,[rbp-0xb0]
  40918f:	add    rax,0xa0
  409195:	mov    QWORD PTR [rbp-0xc8],rax
  40919c:	sub    DWORD PTR [rbp-0x10c],0x4
  4091a3:	cmp    DWORD PTR [rbp-0x10c],0x0
  4091aa:	jns    4091b6 <memcpy@plt+0x6706>
  4091ac:	mov    eax,0xffffffff
  4091b1:	jmp    4092ec <memcpy@plt+0x683c>
  4091b6:	mov    rdi,QWORD PTR [rbp-0xc8]
  4091bd:	lea    rcx,[rbp-0xb0]
  4091c4:	mov    edx,DWORD PTR [rbp-0x10c]
  4091ca:	mov    rsi,QWORD PTR [rbp-0xd8]
  4091d1:	mov    rax,QWORD PTR [rbp-0xf8]
  4091d8:	mov    r8,rdi
  4091db:	mov    rdi,rax
  4091de:	call   407d25 <memcpy@plt+0x5275>
  4091e3:	mov    DWORD PTR [rbp-0xe4],eax
  4091e9:	cmp    DWORD PTR [rbp-0xe4],0x0
  4091f0:	jns    4091fc <memcpy@plt+0x674c>
  4091f2:	mov    eax,0xffffffff
  4091f7:	jmp    4092ec <memcpy@plt+0x683c>
  4091fc:	mov    eax,DWORD PTR [rbp-0xe4]
  409202:	cdqe   
  409204:	add    QWORD PTR [rbp-0xd8],rax
  40920b:	mov    eax,DWORD PTR [rbp-0xe4]
  409211:	sub    DWORD PTR [rbp-0x10c],eax
  409217:	mov    eax,DWORD PTR [rbp-0x100]
  40921d:	mov    WORD PTR [rbp-0xe8],ax
  409224:	mov    rax,QWORD PTR [rbp-0xd8]
  40922b:	mov    QWORD PTR [rbp-0xc0],rax
  409232:	movzx  eax,WORD PTR [rbp-0xe8]
  409239:	shr    ax,0x8
  40923d:	mov    ecx,eax
  40923f:	mov    rax,QWORD PTR [rbp-0xc0]
  409246:	lea    rdx,[rax+0x1]
  40924a:	mov    QWORD PTR [rbp-0xc0],rdx
  409251:	mov    edx,ecx
  409253:	mov    BYTE PTR [rax],dl
  409255:	movzx  eax,WORD PTR [rbp-0xe8]
  40925c:	mov    edx,eax
  40925e:	mov    rax,QWORD PTR [rbp-0xc0]
  409265:	mov    BYTE PTR [rax],dl
  409267:	add    QWORD PTR [rbp-0xd8],0x2
  40926f:	mov    eax,DWORD PTR [rbp-0xfc]
  409275:	mov    WORD PTR [rbp-0xe6],ax
  40927c:	mov    rax,QWORD PTR [rbp-0xd8]
  409283:	mov    QWORD PTR [rbp-0xb8],rax
  40928a:	movzx  eax,WORD PTR [rbp-0xe6]
  409291:	shr    ax,0x8
  409295:	mov    ecx,eax
  409297:	mov    rax,QWORD PTR [rbp-0xb8]
  40929e:	lea    rdx,[rax+0x1]
  4092a2:	mov    QWORD PTR [rbp-0xb8],rdx
  4092a9:	mov    edx,ecx
  4092ab:	mov    BYTE PTR [rax],dl
  4092ad:	movzx  eax,WORD PTR [rbp-0xe6]
  4092b4:	mov    edx,eax
  4092b6:	mov    rax,QWORD PTR [rbp-0xb8]
  4092bd:	mov    BYTE PTR [rax],dl
  4092bf:	add    QWORD PTR [rbp-0xd8],0x2
  4092c7:	mov    edi,0x1
  4092cc:	call   402620 <htons@plt>
  4092d1:	mov    edx,eax
  4092d3:	mov    rax,QWORD PTR [rbp-0xe0]
  4092da:	mov    WORD PTR [rax+0x4],dx
  4092de:	mov    rax,QWORD PTR [rbp-0xd8]
  4092e5:	sub    rax,QWORD PTR [rbp-0x108]
  4092ec:	mov    rsi,QWORD PTR [rbp-0x8]
  4092f0:	xor    rsi,QWORD PTR fs:0x28
  4092f9:	je     409300 <memcpy@plt+0x6850>
  4092fb:	call   402950 <__stack_chk_fail@plt>
  409300:	leave  
  409301:	ret    
  409302:	push   rbp
  409303:	mov    rbp,rsp
  409306:	sub    rsp,0x20
  40930a:	mov    QWORD PTR [rbp-0x8],rdi
  40930e:	mov    QWORD PTR [rbp-0x10],rsi
  409312:	mov    QWORD PTR [rbp-0x18],rdx
  409316:	cmp    QWORD PTR [rbp-0x8],0x0
  40931b:	jne    40933c <memcpy@plt+0x688c>
  40931d:	lea    rcx,[rip+0x6a24]        # 40fd48 <memcpy@plt+0xd298>
  409324:	mov    edx,0x8f
  409329:	lea    rsi,[rip+0x66d0]        # 40fa00 <memcpy@plt+0xcf50>
  409330:	lea    rdi,[rip+0x66e5]        # 40fa1c <memcpy@plt+0xcf6c>
  409337:	call   402640 <__assert_fail@plt>
  40933c:	cmp    QWORD PTR [rbp-0x10],0x0
  409341:	jne    409362 <memcpy@plt+0x68b2>
  409343:	lea    rcx,[rip+0x69fe]        # 40fd48 <memcpy@plt+0xd298>
  40934a:	mov    edx,0x90
  40934f:	lea    rsi,[rip+0x66aa]        # 40fa00 <memcpy@plt+0xcf50>
  409356:	lea    rdi,[rip+0x66cc]        # 40fa29 <memcpy@plt+0xcf79>
  40935d:	call   402640 <__assert_fail@plt>
  409362:	cmp    QWORD PTR [rbp-0x18],0x0
  409367:	jne    409388 <memcpy@plt+0x68d8>
  409369:	lea    rcx,[rip+0x69d8]        # 40fd48 <memcpy@plt+0xd298>
  409370:	mov    edx,0x91
  409375:	lea    rsi,[rip+0x6684]        # 40fa00 <memcpy@plt+0xcf50>
  40937c:	lea    rdi,[rip+0x66b0]        # 40fa33 <memcpy@plt+0xcf83>
  409383:	call   402640 <__assert_fail@plt>
  409388:	mov    rax,QWORD PTR [rbp-0x10]
  40938c:	mov    rdx,QWORD PTR [rbp-0x8]
  409390:	mov    QWORD PTR [rax],rdx
  409393:	mov    rax,QWORD PTR [rbp-0x10]
  409397:	mov    QWORD PTR [rax+0x8],0x0
  40939f:	mov    rax,QWORD PTR [rbp-0x18]
  4093a3:	mov    rdx,QWORD PTR [rax]
  4093a6:	mov    rax,QWORD PTR [rbp-0x10]
  4093aa:	mov    QWORD PTR [rax+0x10],rdx
  4093ae:	mov    rax,QWORD PTR [rbp-0x18]
  4093b2:	mov    rax,QWORD PTR [rax]
  4093b5:	test   rax,rax
  4093b8:	je     4093cb <memcpy@plt+0x691b>
  4093ba:	mov    rax,QWORD PTR [rbp-0x18]
  4093be:	mov    rax,QWORD PTR [rax]
  4093c1:	mov    rdx,QWORD PTR [rbp-0x10]
  4093c5:	mov    QWORD PTR [rax+0x8],rdx
  4093c9:	jmp    4093e4 <memcpy@plt+0x6934>
  4093cb:	mov    rax,QWORD PTR [rbp-0x18]
  4093cf:	mov    rax,QWORD PTR [rax+0x8]
  4093d3:	test   rax,rax
  4093d6:	jne    4093e4 <memcpy@plt+0x6934>
  4093d8:	mov    rax,QWORD PTR [rbp-0x18]
  4093dc:	mov    rdx,QWORD PTR [rbp-0x10]
  4093e0:	mov    QWORD PTR [rax+0x8],rdx
  4093e4:	mov    rax,QWORD PTR [rbp-0x18]
  4093e8:	mov    rdx,QWORD PTR [rbp-0x10]
  4093ec:	mov    QWORD PTR [rax],rdx
  4093ef:	mov    rax,QWORD PTR [rbp-0x18]
  4093f3:	mov    rax,QWORD PTR [rax+0x10]
  4093f7:	lea    rdx,[rax+0x1]
  4093fb:	mov    rax,QWORD PTR [rbp-0x18]
  4093ff:	mov    QWORD PTR [rax+0x10],rdx
  409403:	nop
  409404:	leave  
  409405:	ret    
  409406:	push   rbp
  409407:	mov    rbp,rsp
  40940a:	sub    rsp,0x10
  40940e:	mov    QWORD PTR [rbp-0x8],rdi
  409412:	mov    QWORD PTR [rbp-0x10],rsi
  409416:	cmp    QWORD PTR [rbp-0x8],0x0
  40941b:	jne    40943c <memcpy@plt+0x698c>
  40941d:	lea    rcx,[rip+0x68d4]        # 40fcf8 <memcpy@plt+0xd248>
  409424:	mov    edx,0xeb
  409429:	lea    rsi,[rip+0x65d0]        # 40fa00 <memcpy@plt+0xcf50>
  409430:	lea    rdi,[rip+0x65f2]        # 40fa29 <memcpy@plt+0xcf79>
  409437:	call   402640 <__assert_fail@plt>
  40943c:	cmp    QWORD PTR [rbp-0x10],0x0
  409441:	jne    409462 <memcpy@plt+0x69b2>
  409443:	lea    rcx,[rip+0x68ae]        # 40fcf8 <memcpy@plt+0xd248>
  40944a:	mov    edx,0xec
  40944f:	lea    rsi,[rip+0x65aa]        # 40fa00 <memcpy@plt+0xcf50>
  409456:	lea    rdi,[rip+0x65d6]        # 40fa33 <memcpy@plt+0xcf83>
  40945d:	call   402640 <__assert_fail@plt>
  409462:	mov    rax,QWORD PTR [rbp-0x8]
  409466:	mov    rax,QWORD PTR [rax+0x10]
  40946a:	test   rax,rax
  40946d:	je     409485 <memcpy@plt+0x69d5>
  40946f:	mov    rax,QWORD PTR [rbp-0x8]
  409473:	mov    rax,QWORD PTR [rax+0x10]
  409477:	mov    rdx,QWORD PTR [rbp-0x8]
  40947b:	mov    rdx,QWORD PTR [rdx+0x8]
  40947f:	mov    QWORD PTR [rax+0x8],rdx
  409483:	jmp    409495 <memcpy@plt+0x69e5>
  409485:	mov    rax,QWORD PTR [rbp-0x8]
  409489:	mov    rdx,QWORD PTR [rax+0x8]
  40948d:	mov    rax,QWORD PTR [rbp-0x10]
  409491:	mov    QWORD PTR [rax+0x8],rdx
  409495:	mov    rax,QWORD PTR [rbp-0x8]
  409499:	mov    rax,QWORD PTR [rax+0x8]
  40949d:	test   rax,rax
  4094a0:	je     4094b8 <memcpy@plt+0x6a08>
  4094a2:	mov    rax,QWORD PTR [rbp-0x8]
  4094a6:	mov    rax,QWORD PTR [rax+0x8]
  4094aa:	mov    rdx,QWORD PTR [rbp-0x8]
  4094ae:	mov    rdx,QWORD PTR [rdx+0x10]
  4094b2:	mov    QWORD PTR [rax+0x10],rdx
  4094b6:	jmp    4094c7 <memcpy@plt+0x6a17>
  4094b8:	mov    rax,QWORD PTR [rbp-0x8]
  4094bc:	mov    rdx,QWORD PTR [rax+0x10]
  4094c0:	mov    rax,QWORD PTR [rbp-0x10]
  4094c4:	mov    QWORD PTR [rax],rdx
  4094c7:	mov    rax,QWORD PTR [rbp-0x8]
  4094cb:	mov    QWORD PTR [rax+0x8],0x0
  4094d3:	mov    rax,QWORD PTR [rbp-0x8]
  4094d7:	mov    rdx,QWORD PTR [rax+0x8]
  4094db:	mov    rax,QWORD PTR [rbp-0x8]
  4094df:	mov    QWORD PTR [rax+0x10],rdx
  4094e3:	mov    rax,QWORD PTR [rbp-0x10]
  4094e7:	mov    rax,QWORD PTR [rax+0x10]
  4094eb:	lea    rdx,[rax-0x1]
  4094ef:	mov    rax,QWORD PTR [rbp-0x10]
  4094f3:	mov    QWORD PTR [rax+0x10],rdx
  4094f7:	nop
  4094f8:	leave  
  4094f9:	ret    
  4094fa:	push   rbp
  4094fb:	mov    rbp,rsp
  4094fe:	sub    rsp,0x20
  409502:	mov    QWORD PTR [rbp-0x18],rdi
  409506:	mov    QWORD PTR [rbp-0x20],rsi
  40950a:	cmp    QWORD PTR [rbp-0x20],0x0
  40950f:	jne    409530 <memcpy@plt+0x6a80>
  409511:	lea    rcx,[rip+0x6818]        # 40fd30 <memcpy@plt+0xd280>
  409518:	mov    edx,0x102
  40951d:	lea    rsi,[rip+0x64dc]        # 40fa00 <memcpy@plt+0xcf50>
  409524:	lea    rdi,[rip+0x6508]        # 40fa33 <memcpy@plt+0xcf83>
  40952b:	call   402640 <__assert_fail@plt>
  409530:	cmp    QWORD PTR [rbp-0x18],0x0
  409535:	jne    409556 <memcpy@plt+0x6aa6>
  409537:	lea    rcx,[rip+0x67f2]        # 40fd30 <memcpy@plt+0xd280>
  40953e:	mov    edx,0x103
  409543:	lea    rsi,[rip+0x64b6]        # 40fa00 <memcpy@plt+0xcf50>
  40954a:	lea    rdi,[rip+0x64cb]        # 40fa1c <memcpy@plt+0xcf6c>
  409551:	call   402640 <__assert_fail@plt>
  409556:	mov    rax,QWORD PTR [rbp-0x20]
  40955a:	mov    rax,QWORD PTR [rax]
  40955d:	mov    QWORD PTR [rbp-0x8],rax
  409561:	jmp    40961f <memcpy@plt+0x6b6f>
  409566:	mov    rax,QWORD PTR [rbp-0x8]
  40956a:	mov    rax,QWORD PTR [rax]
  40956d:	cmp    QWORD PTR [rbp-0x18],rax
  409571:	je     409584 <memcpy@plt+0x6ad4>
  409573:	mov    rax,QWORD PTR [rbp-0x8]
  409577:	mov    rax,QWORD PTR [rax+0x10]
  40957b:	mov    QWORD PTR [rbp-0x8],rax
  40957f:	jmp    40961f <memcpy@plt+0x6b6f>
  409584:	mov    rax,QWORD PTR [rbp-0x8]
  409588:	mov    rax,QWORD PTR [rax+0x10]
  40958c:	test   rax,rax
  40958f:	je     4095a7 <memcpy@plt+0x6af7>
  409591:	mov    rax,QWORD PTR [rbp-0x8]
  409595:	mov    rax,QWORD PTR [rax+0x10]
  409599:	mov    rdx,QWORD PTR [rbp-0x8]
  40959d:	mov    rdx,QWORD PTR [rdx+0x8]
  4095a1:	mov    QWORD PTR [rax+0x8],rdx
  4095a5:	jmp    4095b7 <memcpy@plt+0x6b07>
  4095a7:	mov    rax,QWORD PTR [rbp-0x8]
  4095ab:	mov    rdx,QWORD PTR [rax+0x8]
  4095af:	mov    rax,QWORD PTR [rbp-0x20]
  4095b3:	mov    QWORD PTR [rax+0x8],rdx
  4095b7:	mov    rax,QWORD PTR [rbp-0x8]
  4095bb:	mov    rax,QWORD PTR [rax+0x8]
  4095bf:	test   rax,rax
  4095c2:	je     4095da <memcpy@plt+0x6b2a>
  4095c4:	mov    rax,QWORD PTR [rbp-0x8]
  4095c8:	mov    rax,QWORD PTR [rax+0x8]
  4095cc:	mov    rdx,QWORD PTR [rbp-0x8]
  4095d0:	mov    rdx,QWORD PTR [rdx+0x10]
  4095d4:	mov    QWORD PTR [rax+0x10],rdx
  4095d8:	jmp    4095e9 <memcpy@plt+0x6b39>
  4095da:	mov    rax,QWORD PTR [rbp-0x8]
  4095de:	mov    rdx,QWORD PTR [rax+0x10]
  4095e2:	mov    rax,QWORD PTR [rbp-0x20]
  4095e6:	mov    QWORD PTR [rax],rdx
  4095e9:	mov    rax,QWORD PTR [rbp-0x8]
  4095ed:	mov    QWORD PTR [rax+0x8],0x0
  4095f5:	mov    rax,QWORD PTR [rbp-0x8]
  4095f9:	mov    rdx,QWORD PTR [rax+0x8]
  4095fd:	mov    rax,QWORD PTR [rbp-0x8]
  409601:	mov    QWORD PTR [rax+0x10],rdx
  409605:	mov    rax,QWORD PTR [rbp-0x20]
  409609:	mov    rax,QWORD PTR [rax+0x10]
  40960d:	lea    rdx,[rax-0x1]
  409611:	mov    rax,QWORD PTR [rbp-0x20]
  409615:	mov    QWORD PTR [rax+0x10],rdx
  409619:	mov    rax,QWORD PTR [rbp-0x8]
  40961d:	jmp    40962f <memcpy@plt+0x6b7f>
  40961f:	cmp    QWORD PTR [rbp-0x8],0x0
  409624:	jne    409566 <memcpy@plt+0x6ab6>
  40962a:	mov    eax,0x0
  40962f:	leave  
  409630:	ret    
  409631:	push   rbp
  409632:	mov    rbp,rsp
  409635:	sub    rsp,0x20
  409639:	mov    QWORD PTR [rbp-0x18],rdi
  40963d:	mov    QWORD PTR [rbp-0x20],rsi
  409641:	cmp    QWORD PTR [rbp-0x20],0x0
  409646:	jne    409667 <memcpy@plt+0x6bb7>
  409648:	lea    rcx,[rip+0x66c1]        # 40fd10 <memcpy@plt+0xd260>
  40964f:	mov    edx,0x11f
  409654:	lea    rsi,[rip+0x63a5]        # 40fa00 <memcpy@plt+0xcf50>
  40965b:	lea    rdi,[rip+0x63d1]        # 40fa33 <memcpy@plt+0xcf83>
  409662:	call   402640 <__assert_fail@plt>
  409667:	cmp    QWORD PTR [rbp-0x18],0x0
  40966c:	jne    40968d <memcpy@plt+0x6bdd>
  40966e:	lea    rcx,[rip+0x669b]        # 40fd10 <memcpy@plt+0xd260>
  409675:	mov    edx,0x120
  40967a:	lea    rsi,[rip+0x637f]        # 40fa00 <memcpy@plt+0xcf50>
  409681:	lea    rdi,[rip+0x6394]        # 40fa1c <memcpy@plt+0xcf6c>
  409688:	call   402640 <__assert_fail@plt>
  40968d:	mov    rdx,QWORD PTR [rbp-0x20]
  409691:	mov    rax,QWORD PTR [rbp-0x18]
  409695:	mov    rsi,rdx
  409698:	mov    rdi,rax
  40969b:	call   4094fa <memcpy@plt+0x6a4a>
  4096a0:	mov    QWORD PTR [rbp-0x8],rax
  4096a4:	cmp    QWORD PTR [rbp-0x8],0x0
  4096a9:	je     4096be <memcpy@plt+0x6c0e>
  4096ab:	mov    rax,QWORD PTR [rbp-0x8]
  4096af:	mov    rdi,rax
  4096b2:	call   402830 <rb_free_rb_dlink_node@plt>
  4096b7:	mov    eax,0x1
  4096bc:	jmp    4096c3 <memcpy@plt+0x6c13>
  4096be:	mov    eax,0x0
  4096c3:	leave  
  4096c4:	ret    
  4096c5:	push   rbp
  4096c6:	mov    rbp,rsp
  4096c9:	sub    rsp,0x10
  4096cd:	mov    QWORD PTR [rbp-0x8],rdi
  4096d1:	mov    QWORD PTR [rbp-0x10],rsi
  4096d5:	cmp    QWORD PTR [rbp-0x8],0x0
  4096da:	jne    4096fb <memcpy@plt+0x6c4b>
  4096dc:	lea    rcx,[rip+0x667d]        # 40fd60 <memcpy@plt+0xd2b0>
  4096e3:	mov    edx,0x144
  4096e8:	lea    rsi,[rip+0x6311]        # 40fa00 <memcpy@plt+0xcf50>
  4096ef:	lea    rdi,[rip+0x634a]        # 40fa40 <memcpy@plt+0xcf90>
  4096f6:	call   402640 <__assert_fail@plt>
  4096fb:	cmp    QWORD PTR [rbp-0x10],0x0
  409700:	jne    409721 <memcpy@plt+0x6c71>
  409702:	lea    rcx,[rip+0x6657]        # 40fd60 <memcpy@plt+0xd2b0>
  409709:	mov    edx,0x145
  40970e:	lea    rsi,[rip+0x62eb]        # 40fa00 <memcpy@plt+0xcf50>
  409715:	lea    rdi,[rip+0x6331]        # 40fa4d <memcpy@plt+0xcf9d>
  40971c:	call   402640 <__assert_fail@plt>
  409721:	mov    rax,QWORD PTR [rbp-0x8]
  409725:	mov    rax,QWORD PTR [rax]
  409728:	test   rax,rax
  40972b:	je     40980c <memcpy@plt+0x6d5c>
  409731:	mov    rax,QWORD PTR [rbp-0x10]
  409735:	mov    rax,QWORD PTR [rax]
  409738:	test   rax,rax
  40973b:	jne    409794 <memcpy@plt+0x6ce4>
  40973d:	mov    rax,QWORD PTR [rbp-0x8]
  409741:	mov    rdx,QWORD PTR [rax]
  409744:	mov    rax,QWORD PTR [rbp-0x10]
  409748:	mov    QWORD PTR [rax],rdx
  40974b:	mov    rax,QWORD PTR [rbp-0x8]
  40974f:	mov    rdx,QWORD PTR [rax+0x8]
  409753:	mov    rax,QWORD PTR [rbp-0x10]
  409757:	mov    QWORD PTR [rax+0x8],rdx
  40975b:	mov    rax,QWORD PTR [rbp-0x8]
  40975f:	mov    QWORD PTR [rax+0x8],0x0
  409767:	mov    rax,QWORD PTR [rbp-0x8]
  40976b:	mov    rdx,QWORD PTR [rax+0x8]
  40976f:	mov    rax,QWORD PTR [rbp-0x8]
  409773:	mov    QWORD PTR [rax],rdx
  409776:	mov    rax,QWORD PTR [rbp-0x8]
  40977a:	mov    rdx,QWORD PTR [rax+0x10]
  40977e:	mov    rax,QWORD PTR [rbp-0x10]
  409782:	mov    QWORD PTR [rax+0x10],rdx
  409786:	mov    rax,QWORD PTR [rbp-0x8]
  40978a:	mov    QWORD PTR [rax+0x10],0x0
  409792:	jmp    40980d <memcpy@plt+0x6d5d>
  409794:	mov    rax,QWORD PTR [rbp-0x8]
  409798:	mov    rax,QWORD PTR [rax+0x8]
  40979c:	mov    rdx,QWORD PTR [rbp-0x10]
  4097a0:	mov    rdx,QWORD PTR [rdx]
  4097a3:	mov    QWORD PTR [rax+0x10],rdx
  4097a7:	mov    rax,QWORD PTR [rbp-0x10]
  4097ab:	mov    rax,QWORD PTR [rax]
  4097ae:	mov    rdx,QWORD PTR [rbp-0x8]
  4097b2:	mov    rdx,QWORD PTR [rdx+0x8]
  4097b6:	mov    QWORD PTR [rax+0x8],rdx
  4097ba:	mov    rax,QWORD PTR [rbp-0x8]
  4097be:	mov    rdx,QWORD PTR [rax]
  4097c1:	mov    rax,QWORD PTR [rbp-0x10]
  4097c5:	mov    QWORD PTR [rax],rdx
  4097c8:	mov    rax,QWORD PTR [rbp-0x8]
  4097cc:	mov    QWORD PTR [rax+0x8],0x0
  4097d4:	mov    rax,QWORD PTR [rbp-0x8]
  4097d8:	mov    rdx,QWORD PTR [rax+0x8]
  4097dc:	mov    rax,QWORD PTR [rbp-0x8]
  4097e0:	mov    QWORD PTR [rax],rdx
  4097e3:	mov    rax,QWORD PTR [rbp-0x10]
  4097e7:	mov    rdx,QWORD PTR [rax+0x10]
  4097eb:	mov    rax,QWORD PTR [rbp-0x8]
  4097ef:	mov    rax,QWORD PTR [rax+0x10]
  4097f3:	add    rdx,rax
  4097f6:	mov    rax,QWORD PTR [rbp-0x10]
  4097fa:	mov    QWORD PTR [rax+0x10],rdx
  4097fe:	mov    rax,QWORD PTR [rbp-0x8]
  409802:	mov    QWORD PTR [rax+0x10],0x0
  40980a:	jmp    40980d <memcpy@plt+0x6d5d>
  40980c:	nop
  40980d:	leave  
  40980e:	ret    
  40980f:	push   rbp
  409810:	mov    rbp,rsp
  409813:	sub    rsp,0x20
  409817:	mov    QWORD PTR [rbp-0x18],rdi
  40981b:	mov    rax,QWORD PTR [rbp-0x18]
  40981f:	mov    rsi,rax
  409822:	mov    edi,0x1
  409827:	call   4029e0 <calloc@plt>
  40982c:	mov    QWORD PTR [rbp-0x8],rax
  409830:	cmp    QWORD PTR [rbp-0x8],0x0
  409835:	sete   al
  409838:	movzx  eax,al
  40983b:	test   rax,rax
  40983e:	je     409845 <memcpy@plt+0x6d95>
  409840:	call   402900 <rb_outofmemory@plt>
  409845:	mov    rax,QWORD PTR [rbp-0x8]
  409849:	leave  
  40984a:	ret    
  40984b:	push   rbp
  40984c:	mov    rbp,rsp
  40984f:	sub    rsp,0x20
  409853:	mov    QWORD PTR [rbp-0x18],rdi
  409857:	mov    rax,QWORD PTR [rbp-0x18]
  40985b:	mov    rdi,rax
  40985e:	call   402760 <strlen@plt>
  409863:	inc    rax
  409866:	mov    rdi,rax
  409869:	call   4026d0 <malloc@plt>
  40986e:	mov    QWORD PTR [rbp-0x8],rax
  409872:	cmp    QWORD PTR [rbp-0x8],0x0
  409877:	sete   al
  40987a:	movzx  eax,al
  40987d:	test   rax,rax
  409880:	je     409887 <memcpy@plt+0x6dd7>
  409882:	call   402900 <rb_outofmemory@plt>
  409887:	mov    rdx,QWORD PTR [rbp-0x18]
  40988b:	mov    rax,QWORD PTR [rbp-0x8]
  40988f:	mov    rsi,rdx
  409892:	mov    rdi,rax
  409895:	call   4029a0 <strcpy@plt>
  40989a:	mov    rax,QWORD PTR [rbp-0x8]
  40989e:	leave  
  40989f:	ret    
  4098a0:	push   rbp
  4098a1:	mov    rbp,rsp
  4098a4:	sub    rsp,0x10
  4098a8:	mov    QWORD PTR [rbp-0x8],rdi
  4098ac:	cmp    QWORD PTR [rbp-0x8],0x0
  4098b1:	setne  al
  4098b4:	movzx  eax,al
  4098b7:	test   rax,rax
  4098ba:	je     4098c8 <memcpy@plt+0x6e18>
  4098bc:	mov    rax,QWORD PTR [rbp-0x8]
  4098c0:	mov    rdi,rax
  4098c3:	call   402750 <free@plt>
  4098c8:	nop
  4098c9:	leave  
  4098ca:	ret    
  4098cb:	push   rbp
  4098cc:	mov    rbp,rsp
  4098cf:	mov    QWORD PTR [rbp-0x8],rdi
  4098d3:	mov    rax,QWORD PTR [rbp-0x8]
  4098d7:	mov    eax,DWORD PTR [rax+0x1cc]
  4098dd:	lea    edx,[rax+0x1]
  4098e0:	mov    rax,QWORD PTR [rbp-0x8]
  4098e4:	mov    DWORD PTR [rax+0x1cc],edx
  4098ea:	nop
  4098eb:	pop    rbp
  4098ec:	ret    
  4098ed:	push   rbp
  4098ee:	mov    rbp,rsp
  4098f1:	sub    rsp,0x10
  4098f5:	mov    QWORD PTR [rbp-0x8],rdi
  4098f9:	mov    rax,QWORD PTR [rbp-0x8]
  4098fd:	mov    eax,DWORD PTR [rax+0x1cc]
  409903:	lea    edx,[rax-0x1]
  409906:	mov    rax,QWORD PTR [rbp-0x8]
  40990a:	mov    DWORD PTR [rax+0x1cc],edx
  409910:	mov    rax,QWORD PTR [rbp-0x8]
  409914:	mov    eax,DWORD PTR [rax+0x1cc]
  40991a:	test   eax,eax
  40991c:	jne    40992a <memcpy@plt+0x6e7a>
  40991e:	mov    rax,QWORD PTR [rbp-0x8]
  409922:	mov    rdi,rax
  409925:	call   4047b8 <memcpy@plt+0x1d08>
  40992a:	nop
  40992b:	leave  
  40992c:	ret    
  40992d:	push   rbp
  40992e:	mov    rbp,rsp
  409931:	sub    rsp,0x20
  409935:	mov    QWORD PTR [rbp-0x18],rdi
  409939:	mov    rax,0x41a280
  409940:	mov    rax,QWORD PTR [rax]
  409943:	mov    QWORD PTR [rbp-0x10],rax
  409947:	jmp    409981 <memcpy@plt+0x6ed1>
  409949:	mov    rax,QWORD PTR [rbp-0x10]
  40994d:	mov    rax,QWORD PTR [rax]
  409950:	mov    QWORD PTR [rbp-0x8],rax
  409954:	mov    rax,QWORD PTR [rbp-0x8]
  409958:	mov    rax,QWORD PTR [rax+0x20]
  40995c:	mov    rdx,QWORD PTR [rbp-0x18]
  409960:	mov    rsi,rdx
  409963:	mov    rdi,rax
  409966:	call   402670 <strcasecmp@plt>
  40996b:	test   eax,eax
  40996d:	jne    409975 <memcpy@plt+0x6ec5>
  40996f:	mov    rax,QWORD PTR [rbp-0x8]
  409973:	jmp    40998d <memcpy@plt+0x6edd>
  409975:	mov    rax,QWORD PTR [rbp-0x10]
  409979:	mov    rax,QWORD PTR [rax+0x10]
  40997d:	mov    QWORD PTR [rbp-0x10],rax
  409981:	cmp    QWORD PTR [rbp-0x10],0x0
  409986:	jne    409949 <memcpy@plt+0x6e99>
  409988:	mov    eax,0x0
  40998d:	leave  
  40998e:	ret    
  40998f:	push   rbp
  409990:	mov    rbp,rsp
  409993:	sub    rsp,0x20
  409997:	mov    QWORD PTR [rbp-0x18],rdi
  40999b:	mov    QWORD PTR [rbp-0x20],rsi
  40999f:	mov    rax,QWORD PTR [rbp-0x18]
  4099a3:	mov    rdi,rax
  4099a6:	call   40992d <memcpy@plt+0x6e7d>
  4099ab:	mov    QWORD PTR [rbp-0x8],rax
  4099af:	cmp    QWORD PTR [rbp-0x8],0x0
  4099b4:	je     4099ca <memcpy@plt+0x6f1a>
  4099b6:	mov    rax,QWORD PTR [rbp-0x8]
  4099ba:	mov    edx,DWORD PTR [rax+0x18]
  4099bd:	mov    rax,QWORD PTR [rbp-0x20]
  4099c1:	mov    DWORD PTR [rax],edx
  4099c3:	mov    eax,0x1
  4099c8:	jmp    4099cf <memcpy@plt+0x6f1f>
  4099ca:	mov    eax,0x0
  4099cf:	leave  
  4099d0:	ret    
  4099d1:	push   rbp
  4099d2:	mov    rbp,rsp
  4099d5:	mov    QWORD PTR [rbp-0x8],rdi
  4099d9:	mov    DWORD PTR [rbp-0xc],esi
  4099dc:	mov    rax,QWORD PTR [rbp-0x8]
  4099e0:	mov    rax,QWORD PTR [rax+0x1d0]
  4099e7:	mov    edx,DWORD PTR [rbp-0xc]
  4099ea:	shl    rdx,0x5
  4099ee:	add    rax,rdx
  4099f1:	mov    eax,DWORD PTR [rax+0x18]
  4099f4:	pop    rbp
  4099f5:	ret    
  4099f6:	push   rbp
  4099f7:	mov    rbp,rsp
  4099fa:	sub    rsp,0x20
  4099fe:	mov    QWORD PTR [rbp-0x18],rdi
  409a02:	mov    QWORD PTR [rbp-0x20],rsi
  409a06:	mov    rax,QWORD PTR fs:0x28
  409a0f:	mov    QWORD PTR [rbp-0x8],rax
  409a13:	xor    eax,eax
  409a15:	lea    rdx,[rbp-0xc]
  409a19:	mov    rax,QWORD PTR [rbp-0x20]
  409a1d:	mov    rsi,rdx
  409a20:	mov    rdi,rax
  409a23:	call   40998f <memcpy@plt+0x6edf>
  409a28:	test   al,al
  409a2a:	je     409a45 <memcpy@plt+0x6f95>
  409a2c:	mov    edx,DWORD PTR [rbp-0xc]
  409a2f:	mov    rax,QWORD PTR [rbp-0x18]
  409a33:	mov    esi,edx
  409a35:	mov    rdi,rax
  409a38:	call   4099d1 <memcpy@plt+0x6f21>
  409a3d:	cmp    eax,0x2
  409a40:	sete   al
  409a43:	jmp    409a4a <memcpy@plt+0x6f9a>
  409a45:	mov    eax,0x1
  409a4a:	mov    rcx,QWORD PTR [rbp-0x8]
  409a4e:	xor    rcx,QWORD PTR fs:0x28
  409a57:	je     409a5e <memcpy@plt+0x6fae>
  409a59:	call   402950 <__stack_chk_fail@plt>
  409a5e:	leave  
  409a5f:	ret    
  409a60:	push   rbp
  409a61:	mov    rbp,rsp
  409a64:	mov    QWORD PTR [rbp-0x8],rdi
  409a68:	mov    DWORD PTR [rbp-0xc],esi
  409a6b:	mov    rax,QWORD PTR [rbp-0x8]
  409a6f:	mov    rax,QWORD PTR [rax+0x1d0]
  409a76:	mov    edx,DWORD PTR [rbp-0xc]
  409a79:	shl    rdx,0x5
  409a7d:	add    rax,rdx
  409a80:	mov    rax,QWORD PTR [rax+0x10]
  409a84:	pop    rbp
  409a85:	ret    
  409a86:	push   rbp
  409a87:	mov    rbp,rsp
  409a8a:	mov    QWORD PTR [rbp-0x8],rdi
  409a8e:	mov    DWORD PTR [rbp-0xc],esi
  409a91:	mov    QWORD PTR [rbp-0x18],rdx
  409a95:	mov    rax,QWORD PTR [rbp-0x8]
  409a99:	mov    rax,QWORD PTR [rax+0x1d0]
  409aa0:	mov    edx,DWORD PTR [rbp-0xc]
  409aa3:	shl    rdx,0x5
  409aa7:	add    rdx,rax
  409aaa:	mov    rax,QWORD PTR [rbp-0x18]
  409aae:	mov    QWORD PTR [rdx+0x10],rax
  409ab2:	nop
  409ab3:	pop    rbp
  409ab4:	ret    
  409ab5:	push   rbp
  409ab6:	mov    rbp,rsp
  409ab9:	sub    rsp,0x20
  409abd:	mov    QWORD PTR [rbp-0x8],rdi
  409ac1:	mov    DWORD PTR [rbp-0xc],esi
  409ac4:	mov    QWORD PTR [rbp-0x18],rdx
  409ac8:	call   4027f0 <rb_current_time@plt>
  409acd:	mov    rcx,rax
  409ad0:	mov    rax,QWORD PTR [rbp-0x8]
  409ad4:	mov    rax,QWORD PTR [rax+0x1d0]
  409adb:	mov    edx,DWORD PTR [rbp-0xc]
  409ade:	shl    rdx,0x5
  409ae2:	add    rax,rdx
  409ae5:	mov    rdx,QWORD PTR [rbp-0x18]
  409ae9:	add    rdx,rcx
  409aec:	mov    QWORD PTR [rax+0x8],rdx
  409af0:	nop
  409af1:	leave  
  409af2:	ret    
  409af3:	push   rbp
  409af4:	mov    rbp,rsp
  409af7:	mov    QWORD PTR [rbp-0x8],rdi
  409afb:	mov    DWORD PTR [rbp-0xc],esi
  409afe:	mov    QWORD PTR [rbp-0x18],rdx
  409b02:	mov    rax,QWORD PTR [rbp-0x8]
  409b06:	mov    rax,QWORD PTR [rax+0x1d0]
  409b0d:	mov    edx,DWORD PTR [rbp-0xc]
  409b10:	shl    rdx,0x5
  409b14:	add    rdx,rax
  409b17:	mov    rax,QWORD PTR [rbp-0x18]
  409b1b:	mov    QWORD PTR [rdx+0x8],rax
  409b1f:	nop
  409b20:	pop    rbp
  409b21:	ret    
  409b22:	endbr64 
  409b26:	push   rbp
  409b27:	mov    rbp,rsp
  409b2a:	sub    rsp,0x20
  409b2e:	mov    QWORD PTR [rbp-0x18],rdi
  409b32:	mov    rax,QWORD PTR [rbp-0x18]
  409b36:	mov    eax,DWORD PTR [rax+0x324]
  409b3c:	lea    edx,[rax-0x1]
  409b3f:	mov    rax,QWORD PTR [rbp-0x18]
  409b43:	mov    DWORD PTR [rax+0x324],edx
  409b49:	mov    rax,QWORD PTR [rbp-0x18]
  409b4d:	movzx  eax,BYTE PTR [rax+0x320]
  409b54:	test   al,al
  409b56:	je     409c07 <memcpy@plt+0x7157>
  409b5c:	mov    rax,QWORD PTR [rbp-0x18]
  409b60:	mov    eax,DWORD PTR [rax+0x324]
  409b66:	test   eax,eax
  409b68:	jg     409c07 <memcpy@plt+0x7157>
  409b6e:	mov    rax,QWORD PTR [rbp-0x18]
  409b72:	mov    rax,QWORD PTR [rax+0x308]
  409b79:	mov    QWORD PTR [rbp-0x10],rax
  409b7d:	cmp    QWORD PTR [rbp-0x10],0x0
  409b82:	je     409b8e <memcpy@plt+0x70de>
  409b84:	mov    rax,QWORD PTR [rbp-0x10]
  409b88:	mov    rax,QWORD PTR [rax+0x10]
  409b8c:	jmp    409b93 <memcpy@plt+0x70e3>
  409b8e:	mov    eax,0x0
  409b93:	mov    QWORD PTR [rbp-0x8],rax
  409b97:	jmp    409be1 <memcpy@plt+0x7131>
  409b99:	mov    rax,QWORD PTR [rbp-0x18]
  409b9d:	lea    rdx,[rax+0x308]
  409ba4:	mov    rax,QWORD PTR [rbp-0x10]
  409ba8:	mov    rsi,rdx
  409bab:	mov    rdi,rax
  409bae:	call   409406 <memcpy@plt+0x6956>
  409bb3:	mov    rax,QWORD PTR [rbp-0x10]
  409bb7:	mov    rdi,rax
  409bba:	call   4098a0 <memcpy@plt+0x6df0>
  409bbf:	mov    rax,QWORD PTR [rbp-0x8]
  409bc3:	mov    QWORD PTR [rbp-0x10],rax
  409bc7:	cmp    QWORD PTR [rbp-0x10],0x0
  409bcc:	je     409bd8 <memcpy@plt+0x7128>
  409bce:	mov    rax,QWORD PTR [rbp-0x10]
  409bd2:	mov    rax,QWORD PTR [rax+0x10]
  409bd6:	jmp    409bdd <memcpy@plt+0x712d>
  409bd8:	mov    eax,0x0
  409bdd:	mov    QWORD PTR [rbp-0x8],rax
  409be1:	cmp    QWORD PTR [rbp-0x10],0x0
  409be6:	jne    409b99 <memcpy@plt+0x70e9>
  409be8:	mov    rax,QWORD PTR [rbp-0x18]
  409bec:	lea    rsi,[rip+0x104ad]        # 41a0a0 <memcpy@plt+0x175f0>
  409bf3:	mov    rdi,rax
  409bf6:	call   409631 <memcpy@plt+0x6b81>
  409bfb:	mov    rax,QWORD PTR [rbp-0x18]
  409bff:	mov    rdi,rax
  409c02:	call   4098a0 <memcpy@plt+0x6df0>
  409c07:	nop
  409c08:	leave  
  409c09:	ret    
  409c0a:	endbr64 
  409c0e:	push   rbp
  409c0f:	mov    rbp,rsp
  409c12:	sub    rsp,0x30
  409c16:	mov    QWORD PTR [rbp-0x18],rdi
  409c1a:	mov    QWORD PTR [rbp-0x20],rsi
  409c1e:	mov    eax,edx
  409c20:	mov    QWORD PTR [rbp-0x30],rcx
  409c24:	mov    BYTE PTR [rbp-0x24],al
  409c27:	cmp    QWORD PTR [rbp-0x18],0x0
  409c2c:	je     409c3b <memcpy@plt+0x718b>
  409c2e:	cmp    QWORD PTR [rbp-0x20],0x0
  409c33:	je     409c3b <memcpy@plt+0x718b>
  409c35:	cmp    BYTE PTR [rbp-0x24],0x0
  409c39:	jne    409c45 <memcpy@plt+0x7195>
  409c3b:	mov    eax,0x0
  409c40:	jmp    409d07 <memcpy@plt+0x7257>
  409c45:	mov    rax,QWORD PTR [rbp-0x18]
  409c49:	mov    rdi,rax
  409c4c:	call   409d09 <memcpy@plt+0x7259>
  409c51:	mov    QWORD PTR [rbp-0x8],rax
  409c55:	cmp    QWORD PTR [rbp-0x8],0x0
  409c5a:	jne    409c8a <memcpy@plt+0x71da>
  409c5c:	mov    edi,0x338
  409c61:	call   40980f <memcpy@plt+0x6d5f>
  409c66:	mov    QWORD PTR [rbp-0x8],rax
  409c6a:	call   402a50 <rb_make_rb_dlink_node@plt>
  409c6f:	mov    rcx,rax
  409c72:	mov    rax,QWORD PTR [rbp-0x8]
  409c76:	lea    rdx,[rip+0x10423]        # 41a0a0 <memcpy@plt+0x175f0>
  409c7d:	mov    rsi,rcx
  409c80:	mov    rdi,rax
  409c83:	call   409302 <memcpy@plt+0x6852>
  409c88:	jmp    409c95 <memcpy@plt+0x71e5>
  409c8a:	mov    rax,QWORD PTR [rbp-0x8]
  409c8e:	mov    BYTE PTR [rax+0x320],0x0
  409c95:	mov    rax,QWORD PTR [rbp-0x8]
  409c99:	mov    rcx,QWORD PTR [rbp-0x18]
  409c9d:	mov    edx,0x100
  409ca2:	mov    rsi,rcx
  409ca5:	mov    rdi,rax
  409ca8:	call   402720 <rb_strlcpy@plt>
  409cad:	mov    rax,QWORD PTR [rbp-0x8]
  409cb1:	lea    rcx,[rax+0x100]
  409cb8:	mov    rax,QWORD PTR [rbp-0x20]
  409cbc:	mov    edx,0x200
  409cc1:	mov    rsi,rax
  409cc4:	mov    rdi,rcx
  409cc7:	call   402720 <rb_strlcpy@plt>
  409ccc:	mov    rdx,QWORD PTR [rbp-0x8]
  409cd0:	movzx  eax,BYTE PTR [rbp-0x24]
  409cd4:	mov    BYTE PTR [rdx+0x300],al
  409cda:	mov    rax,QWORD PTR [rbp-0x8]
  409cde:	lea    rdx,[rax+0x308]
  409ce5:	mov    rax,QWORD PTR [rbp-0x30]
  409ce9:	mov    rsi,rdx
  409cec:	mov    rdi,rax
  409cef:	call   4096c5 <memcpy@plt+0x6c15>
  409cf4:	mov    rax,QWORD PTR [rbp-0x8]
  409cf8:	mov    QWORD PTR [rax+0x330],0x0
  409d03:	mov    rax,QWORD PTR [rbp-0x8]
  409d07:	leave  
  409d08:	ret    
  409d09:	endbr64 
  409d0d:	push   rbp
  409d0e:	mov    rbp,rsp
  409d11:	sub    rsp,0x20
  409d15:	mov    QWORD PTR [rbp-0x18],rdi
  409d19:	mov    rax,QWORD PTR [rip+0x10380]        # 41a0a0 <memcpy@plt+0x175f0>
  409d20:	mov    QWORD PTR [rbp-0x10],rax
  409d24:	jmp    409d5a <memcpy@plt+0x72aa>
  409d26:	mov    rax,QWORD PTR [rbp-0x10]
  409d2a:	mov    rax,QWORD PTR [rax]
  409d2d:	mov    QWORD PTR [rbp-0x8],rax
  409d31:	mov    rax,QWORD PTR [rbp-0x8]
  409d35:	mov    rdx,QWORD PTR [rbp-0x18]
  409d39:	mov    rsi,rdx
  409d3c:	mov    rdi,rax
  409d3f:	call   402670 <strcasecmp@plt>
  409d44:	test   eax,eax
  409d46:	jne    409d4e <memcpy@plt+0x729e>
  409d48:	mov    rax,QWORD PTR [rbp-0x8]
  409d4c:	jmp    409d66 <memcpy@plt+0x72b6>
  409d4e:	mov    rax,QWORD PTR [rbp-0x10]
  409d52:	mov    rax,QWORD PTR [rax+0x10]
  409d56:	mov    QWORD PTR [rbp-0x10],rax
  409d5a:	cmp    QWORD PTR [rbp-0x10],0x0
  409d5f:	jne    409d26 <memcpy@plt+0x7276>
  409d61:	mov    eax,0x0
  409d66:	leave  
  409d67:	ret    
  409d68:	push   rbp
  409d69:	mov    rbp,rsp
  409d6c:	push   rbx
  409d6d:	sub    rsp,0x48
  409d71:	mov    QWORD PTR [rbp-0x48],rdi
  409d75:	mov    QWORD PTR [rbp-0x50],rsi
  409d79:	mov    rax,QWORD PTR [rbp-0x48]
  409d7d:	mov    rax,QWORD PTR [rax]
  409d80:	mov    QWORD PTR [rbp-0x28],rax
  409d84:	mov    rax,QWORD PTR [rbp-0x28]
  409d88:	mov    rax,QWORD PTR [rax+0x318]
  409d8f:	test   rax,rax
  409d92:	jne    409d9e <memcpy@plt+0x72ee>
  409d94:	mov    eax,0x1
  409d99:	jmp    409ee6 <memcpy@plt+0x7436>
  409d9e:	mov    rax,QWORD PTR [rbp-0x50]
  409da2:	mov    esi,0x2e
  409da7:	mov    rdi,rax
  409daa:	call   4027e0 <strrchr@plt>
  409daf:	mov    QWORD PTR [rbp-0x20],rax
  409db3:	cmp    QWORD PTR [rbp-0x20],0x0
  409db8:	je     409e89 <memcpy@plt+0x73d9>
  409dbe:	inc    QWORD PTR [rbp-0x20]
  409dc2:	mov    rax,QWORD PTR [rbp-0x20]
  409dc6:	movzx  eax,BYTE PTR [rax]
  409dc9:	test   al,al
  409dcb:	je     409e89 <memcpy@plt+0x73d9>
  409dd1:	mov    rax,QWORD PTR [rbp-0x28]
  409dd5:	mov    rax,QWORD PTR [rax+0x308]
  409ddc:	mov    QWORD PTR [rbp-0x38],rax
  409de0:	jmp    409e77 <memcpy@plt+0x73c7>
  409de5:	mov    rax,QWORD PTR [rbp-0x38]
  409de9:	mov    rax,QWORD PTR [rax]
  409dec:	mov    QWORD PTR [rbp-0x18],rax
  409df0:	mov    rax,QWORD PTR [rbp-0x18]
  409df4:	mov    eax,DWORD PTR [rax]
  409df6:	cmp    eax,0x1
  409df9:	jne    409e05 <memcpy@plt+0x7355>
  409dfb:	mov    rax,QWORD PTR [rbp-0x50]
  409dff:	mov    QWORD PTR [rbp-0x30],rax
  409e03:	jmp    409e49 <memcpy@plt+0x7399>
  409e05:	mov    rax,QWORD PTR [rbp-0x18]
  409e09:	mov    eax,DWORD PTR [rax]
  409e0b:	cmp    eax,0x2
  409e0e:	jne    409e1a <memcpy@plt+0x736a>
  409e10:	mov    rax,QWORD PTR [rbp-0x20]
  409e14:	mov    QWORD PTR [rbp-0x30],rax
  409e18:	jmp    409e49 <memcpy@plt+0x7399>
  409e1a:	mov    rax,QWORD PTR [rbp-0x18]
  409e1e:	mov    edx,DWORD PTR [rax]
  409e20:	mov    rax,QWORD PTR [rbp-0x28]
  409e24:	mov    ecx,edx
  409e26:	mov    rdx,rax
  409e29:	lea    rsi,[rip+0x5c28]        # 40fa58 <memcpy@plt+0xcfa8>
  409e30:	mov    edi,0x43
  409e35:	mov    eax,0x0
  409e3a:	call   403c26 <memcpy@plt+0x1176>
  409e3f:	mov    edi,0x3
  409e44:	call   402630 <exit@plt>
  409e49:	mov    rax,QWORD PTR [rbp-0x18]
  409e4d:	lea    rdx,[rax+0x4]
  409e51:	mov    rax,QWORD PTR [rbp-0x30]
  409e55:	mov    rsi,rdx
  409e58:	mov    rdi,rax
  409e5b:	call   402970 <strcmp@plt>
  409e60:	test   eax,eax
  409e62:	jne    409e6b <memcpy@plt+0x73bb>
  409e64:	mov    eax,0x1
  409e69:	jmp    409ee6 <memcpy@plt+0x7436>
  409e6b:	mov    rax,QWORD PTR [rbp-0x38]
  409e6f:	mov    rax,QWORD PTR [rax+0x10]
  409e73:	mov    QWORD PTR [rbp-0x38],rax
  409e77:	cmp    QWORD PTR [rbp-0x38],0x0
  409e7c:	jne    409de5 <memcpy@plt+0x7335>
  409e82:	mov    eax,0x0
  409e87:	jmp    409ee6 <memcpy@plt+0x7436>
  409e89:	nop
  409e8a:	endbr64 
  409e8e:	mov    rax,QWORD PTR [rbp-0x28]
  409e92:	mov    rax,QWORD PTR [rax+0x330]
  409e99:	lea    rbx,[rax+0xe10]
  409ea0:	call   4027f0 <rb_current_time@plt>
  409ea5:	cmp    rbx,rax
  409ea8:	jge    409ee1 <memcpy@plt+0x7431>
  409eaa:	mov    rax,QWORD PTR [rbp-0x28]
  409eae:	mov    rdx,QWORD PTR [rbp-0x50]
  409eb2:	mov    rcx,rdx
  409eb5:	mov    rdx,rax
  409eb8:	lea    rsi,[rip+0x5bc9]        # 40fa88 <memcpy@plt+0xcfd8>
  409ebf:	mov    edi,0x57
  409ec4:	mov    eax,0x0
  409ec9:	call   403c26 <memcpy@plt+0x1176>
  409ece:	call   4027f0 <rb_current_time@plt>
  409ed3:	mov    rdx,rax
  409ed6:	mov    rax,QWORD PTR [rbp-0x28]
  409eda:	mov    QWORD PTR [rax+0x330],rdx
  409ee1:	mov    eax,0x0
  409ee6:	add    rsp,0x48
  409eea:	pop    rbx
  409eeb:	pop    rbp
  409eec:	ret    
  409eed:	endbr64 
  409ef1:	push   rbp
  409ef2:	mov    rbp,rsp
  409ef5:	sub    rsp,0x40
  409ef9:	mov    QWORD PTR [rbp-0x28],rdi
  409efd:	mov    eax,esi
  409eff:	mov    DWORD PTR [rbp-0x30],edx
  409f02:	mov    QWORD PTR [rbp-0x38],rcx
  409f06:	mov    BYTE PTR [rbp-0x2c],al
  409f09:	mov    rax,QWORD PTR [rbp-0x38]
  409f0d:	mov    QWORD PTR [rbp-0x20],rax
  409f11:	mov    rax,QWORD PTR [rbp-0x20]
  409f15:	mov    rax,QWORD PTR [rax]
  409f18:	mov    QWORD PTR [rbp-0x18],rax
  409f1c:	mov    rax,QWORD PTR [rbp-0x20]
  409f20:	mov    rax,QWORD PTR [rax+0x8]
  409f24:	mov    QWORD PTR [rbp-0x10],rax
  409f28:	mov    rax,0x415b80
  409f2f:	mov    edx,DWORD PTR [rax+0x18]
  409f32:	mov    rax,QWORD PTR [rbp-0x10]
  409f36:	mov    esi,edx
  409f38:	mov    rdi,rax
  409f3b:	call   409a60 <memcpy@plt+0x6fb0>
  409f40:	mov    QWORD PTR [rbp-0x8],rax
  409f44:	cmp    QWORD PTR [rbp-0x8],0x0
  409f49:	je     40a09e <memcpy@plt+0x75ee>
  409f4f:	cmp    QWORD PTR [rbp-0x28],0x0
  409f54:	je     409fc5 <memcpy@plt+0x7515>
  409f56:	cmp    BYTE PTR [rbp-0x2c],0x0
  409f5a:	je     409fc5 <memcpy@plt+0x7515>
  409f5c:	mov    rdx,QWORD PTR [rbp-0x28]
  409f60:	mov    rax,QWORD PTR [rbp-0x20]
  409f64:	mov    rsi,rdx
  409f67:	mov    rdi,rax
  409f6a:	call   409d68 <memcpy@plt+0x72b8>
  409f6f:	test   al,al
  409f71:	je     409fc5 <memcpy@plt+0x7515>
  409f73:	mov    rax,QWORD PTR [rbp-0x18]
  409f77:	mov    eax,DWORD PTR [rax+0x328]
  409f7d:	lea    edx,[rax+0x1]
  409f80:	mov    rax,QWORD PTR [rbp-0x18]
  409f84:	mov    DWORD PTR [rax+0x328],edx
  409f8a:	mov    rax,QWORD PTR [rbp-0x18]
  409f8e:	lea    rcx,[rax+0x100]
  409f95:	mov    rdx,QWORD PTR [rbp-0x18]
  409f99:	mov    rax,0x415b80
  409fa0:	mov    esi,DWORD PTR [rax+0x18]
  409fa3:	mov    rax,QWORD PTR [rbp-0x10]
  409fa7:	mov    rdi,rax
  409faa:	mov    eax,0x0
  409faf:	call   40496e <memcpy@plt+0x1ebe>
  409fb4:	mov    rax,QWORD PTR [rbp-0x10]
  409fb8:	mov    rdi,rax
  409fbb:	call   40a726 <memcpy@plt+0x7c76>
  409fc0:	jmp    40a09f <memcpy@plt+0x75ef>
  409fc5:	mov    rax,QWORD PTR [rbp-0x18]
  409fc9:	mov    rdi,rax
  409fcc:	call   409b22 <memcpy@plt+0x7072>
  409fd1:	mov    rax,QWORD PTR [rbp-0x20]
  409fd5:	mov    rax,QWORD PTR [rax+0x10]
  409fd9:	mov    rdi,rax
  409fdc:	call   4033a6 <memcpy@plt+0x8f6>
  409fe1:	mov    rax,QWORD PTR [rbp-0x8]
  409fe5:	lea    rdx,[rax+0x8]
  409fe9:	mov    rax,QWORD PTR [rbp-0x20]
  409fed:	add    rax,0x18
  409ff1:	mov    rsi,rdx
  409ff4:	mov    rdi,rax
  409ff7:	call   409406 <memcpy@plt+0x6956>
  409ffc:	mov    rax,QWORD PTR [rbp-0x20]
  40a000:	mov    rdi,rax
  40a003:	call   4098a0 <memcpy@plt+0x6df0>
  40a008:	mov    rax,QWORD PTR [rbp-0x8]
  40a00c:	mov    rax,QWORD PTR [rax+0x18]
  40a010:	test   rax,rax
  40a013:	jne    40a09f <memcpy@plt+0x75ef>
  40a019:	mov    rax,QWORD PTR [rbp-0x10]
  40a01d:	mov    eax,DWORD PTR [rax]
  40a01f:	lea    rsi,[rip+0x5aa2]        # 40fac8 <memcpy@plt+0xd018>
  40a026:	mov    edi,eax
  40a028:	mov    eax,0x0
  40a02d:	call   403b1c <memcpy@plt+0x106c>
  40a032:	mov    rax,QWORD PTR [rbp-0x8]
  40a036:	mov    rdi,rax
  40a039:	call   4098a0 <memcpy@plt+0x6df0>
  40a03e:	mov    rax,0x415b80
  40a045:	mov    ecx,DWORD PTR [rax+0x18]
  40a048:	mov    rax,QWORD PTR [rbp-0x10]
  40a04c:	mov    edx,0x0
  40a051:	mov    esi,ecx
  40a053:	mov    rdi,rax
  40a056:	call   409a86 <memcpy@plt+0x6fd6>
  40a05b:	mov    rax,0x415b80
  40a062:	mov    ecx,DWORD PTR [rax+0x18]
  40a065:	mov    rax,QWORD PTR [rbp-0x10]
  40a069:	mov    edx,0x0
  40a06e:	mov    esi,ecx
  40a070:	mov    rdi,rax
  40a073:	call   409af3 <memcpy@plt+0x7043>
  40a078:	mov    rax,0x415b80
  40a07f:	mov    edx,DWORD PTR [rax+0x18]
  40a082:	mov    rax,QWORD PTR [rbp-0x10]
  40a086:	mov    esi,edx
  40a088:	mov    rdi,rax
  40a08b:	call   4048b0 <memcpy@plt+0x1e00>
  40a090:	mov    rax,QWORD PTR [rbp-0x10]
  40a094:	mov    rdi,rax
  40a097:	call   4098ed <memcpy@plt+0x6e3d>
  40a09c:	jmp    40a09f <memcpy@plt+0x75ef>
  40a09e:	nop
  40a09f:	leave  
  40a0a0:	ret    
  40a0a1:	endbr64 
  40a0a5:	push   rbp
  40a0a6:	mov    rbp,rsp
  40a0a9:	sub    rsp,0x140
  40a0b0:	mov    QWORD PTR [rbp-0x138],rdi
  40a0b7:	mov    QWORD PTR [rbp-0x140],rsi
  40a0be:	mov    rax,QWORD PTR fs:0x28
  40a0c7:	mov    QWORD PTR [rbp-0x8],rax
  40a0cb:	xor    eax,eax
  40a0cd:	mov    edi,0x30
  40a0d2:	call   40980f <memcpy@plt+0x6d5f>
  40a0d7:	mov    QWORD PTR [rbp-0x120],rax
  40a0de:	mov    rax,0x415b80
  40a0e5:	mov    edx,DWORD PTR [rax+0x18]
  40a0e8:	mov    rax,QWORD PTR [rbp-0x140]
  40a0ef:	mov    esi,edx
  40a0f1:	mov    rdi,rax
  40a0f4:	call   409a60 <memcpy@plt+0x6fb0>
  40a0f9:	mov    QWORD PTR [rbp-0x118],rax
  40a100:	mov    rax,QWORD PTR [rbp-0x120]
  40a107:	mov    rdx,QWORD PTR [rbp-0x138]
  40a10e:	mov    QWORD PTR [rax],rdx
  40a111:	mov    rax,QWORD PTR [rbp-0x120]
  40a118:	mov    rdx,QWORD PTR [rbp-0x140]
  40a11f:	mov    QWORD PTR [rax+0x8],rdx
  40a123:	mov    rax,QWORD PTR [rbp-0x140]
  40a12a:	add    rax,0xf8
  40a130:	movzx  eax,WORD PTR [rax]
  40a133:	movzx  eax,ax
  40a136:	mov    DWORD PTR [rbp-0x124],eax
  40a13c:	cmp    DWORD PTR [rbp-0x124],0x2
  40a143:	jne    40a15d <memcpy@plt+0x76ad>
  40a145:	mov    rax,QWORD PTR [rbp-0x138]
  40a14c:	movzx  eax,BYTE PTR [rax+0x300]
  40a153:	movzx  eax,al
  40a156:	and    eax,0x1
  40a159:	test   eax,eax
  40a15b:	je     40a17e <memcpy@plt+0x76ce>
  40a15d:	cmp    DWORD PTR [rbp-0x124],0xa
  40a164:	jne    40a192 <memcpy@plt+0x76e2>
  40a166:	mov    rax,QWORD PTR [rbp-0x138]
  40a16d:	movzx  eax,BYTE PTR [rax+0x300]
  40a174:	movzx  eax,al
  40a177:	and    eax,0x2
  40a17a:	test   eax,eax
  40a17c:	jne    40a192 <memcpy@plt+0x76e2>
  40a17e:	mov    rax,QWORD PTR [rbp-0x120]
  40a185:	mov    rdi,rax
  40a188:	call   4098a0 <memcpy@plt+0x6df0>
  40a18d:	jmp    40a239 <memcpy@plt+0x7789>
  40a192:	mov    rdx,QWORD PTR [rbp-0x138]
  40a199:	mov    rax,QWORD PTR [rbp-0x140]
  40a1a0:	lea    rsi,[rax+0xf8]
  40a1a7:	lea    rax,[rbp-0x110]
  40a1ae:	mov    rcx,rdx
  40a1b1:	mov    rdx,rsi
  40a1b4:	mov    esi,0x100
  40a1b9:	mov    rdi,rax
  40a1bc:	call   405ee4 <memcpy@plt+0x3434>
  40a1c1:	mov    rdx,QWORD PTR [rbp-0x120]
  40a1c8:	lea    rax,[rbp-0x110]
  40a1cf:	mov    rcx,rdx
  40a1d2:	lea    rdx,[rip+0xfffffffffffffd14]        # 409eed <memcpy@plt+0x743d>
  40a1d9:	mov    esi,0x2
  40a1de:	mov    rdi,rax
  40a1e1:	call   4031a6 <memcpy@plt+0x6f6>
  40a1e6:	mov    rdx,rax
  40a1e9:	mov    rax,QWORD PTR [rbp-0x120]
  40a1f0:	mov    QWORD PTR [rax+0x10],rdx
  40a1f4:	mov    rax,QWORD PTR [rbp-0x118]
  40a1fb:	lea    rdx,[rax+0x8]
  40a1ff:	mov    rax,QWORD PTR [rbp-0x120]
  40a206:	lea    rcx,[rax+0x18]
  40a20a:	mov    rax,QWORD PTR [rbp-0x120]
  40a211:	mov    rsi,rcx
  40a214:	mov    rdi,rax
  40a217:	call   409302 <memcpy@plt+0x6852>
  40a21c:	mov    rax,QWORD PTR [rbp-0x138]
  40a223:	mov    eax,DWORD PTR [rax+0x324]
  40a229:	lea    edx,[rax+0x1]
  40a22c:	mov    rax,QWORD PTR [rbp-0x138]
  40a233:	mov    DWORD PTR [rax+0x324],edx
  40a239:	mov    rax,QWORD PTR [rbp-0x8]
  40a23d:	xor    rax,QWORD PTR fs:0x28
  40a246:	je     40a24d <memcpy@plt+0x779d>
  40a248:	call   402950 <__stack_chk_fail@plt>
  40a24d:	leave  
  40a24e:	ret    
  40a24f:	push   rbp
  40a250:	mov    rbp,rsp
  40a253:	sub    rsp,0x30
  40a257:	mov    QWORD PTR [rbp-0x28],rdi
  40a25b:	mov    rax,0x415b80
  40a262:	mov    edx,DWORD PTR [rax+0x18]
  40a265:	mov    rax,QWORD PTR [rbp-0x28]
  40a269:	mov    esi,edx
  40a26b:	mov    rdi,rax
  40a26e:	call   409a60 <memcpy@plt+0x6fb0>
  40a273:	mov    QWORD PTR [rbp-0x10],rax
  40a277:	mov    rax,QWORD PTR [rbp-0x28]
  40a27b:	add    rax,0xf8
  40a281:	movzx  eax,WORD PTR [rax]
  40a284:	cmp    ax,0x2
  40a288:	jne    40a293 <memcpy@plt+0x77e3>
  40a28a:	mov    DWORD PTR [rbp-0x1c],0x1
  40a291:	jmp    40a2b9 <memcpy@plt+0x7809>
  40a293:	mov    rax,QWORD PTR [rbp-0x28]
  40a297:	add    rax,0xf8
  40a29d:	movzx  eax,WORD PTR [rax]
  40a2a0:	cmp    ax,0xa
  40a2a4:	jne    40a2af <memcpy@plt+0x77ff>
  40a2a6:	mov    DWORD PTR [rbp-0x1c],0x2
  40a2ad:	jmp    40a2b9 <memcpy@plt+0x7809>
  40a2af:	mov    eax,0x0
  40a2b4:	jmp    40a378 <memcpy@plt+0x78c8>
  40a2b9:	mov    rax,QWORD PTR [rbp-0x10]
  40a2bd:	mov    BYTE PTR [rax],0x1
  40a2c0:	mov    rax,QWORD PTR [rbp-0x28]
  40a2c4:	mov    eax,DWORD PTR [rax]
  40a2c6:	lea    rsi,[rip+0x5823]        # 40faf0 <memcpy@plt+0xd040>
  40a2cd:	mov    edi,eax
  40a2cf:	mov    eax,0x0
  40a2d4:	call   403b1c <memcpy@plt+0x106c>
  40a2d9:	mov    rax,QWORD PTR [rip+0xfdc0]        # 41a0a0 <memcpy@plt+0x175f0>
  40a2e0:	mov    QWORD PTR [rbp-0x18],rax
  40a2e4:	jmp    40a337 <memcpy@plt+0x7887>
  40a2e6:	mov    rax,QWORD PTR [rbp-0x18]
  40a2ea:	mov    rax,QWORD PTR [rax]
  40a2ed:	mov    QWORD PTR [rbp-0x8],rax
  40a2f1:	mov    rax,QWORD PTR [rbp-0x8]
  40a2f5:	movzx  eax,BYTE PTR [rax+0x320]
  40a2fc:	xor    eax,0x1
  40a2ff:	test   al,al
  40a301:	je     40a32b <memcpy@plt+0x787b>
  40a303:	mov    rax,QWORD PTR [rbp-0x8]
  40a307:	movzx  eax,BYTE PTR [rax+0x300]
  40a30e:	movzx  eax,al
  40a311:	and    eax,DWORD PTR [rbp-0x1c]
  40a314:	test   eax,eax
  40a316:	je     40a32b <memcpy@plt+0x787b>
  40a318:	mov    rdx,QWORD PTR [rbp-0x28]
  40a31c:	mov    rax,QWORD PTR [rbp-0x8]
  40a320:	mov    rsi,rdx
  40a323:	mov    rdi,rax
  40a326:	call   40a0a1 <memcpy@plt+0x75f1>
  40a32b:	mov    rax,QWORD PTR [rbp-0x18]
  40a32f:	mov    rax,QWORD PTR [rax+0x10]
  40a333:	mov    QWORD PTR [rbp-0x18],rax
  40a337:	cmp    QWORD PTR [rbp-0x18],0x0
  40a33c:	jne    40a2e6 <memcpy@plt+0x7836>
  40a33e:	mov    rax,QWORD PTR [rbp-0x10]
  40a342:	mov    rax,QWORD PTR [rax+0x18]
  40a346:	test   rax,rax
  40a349:	jne    40a352 <memcpy@plt+0x78a2>
  40a34b:	mov    eax,0x0
  40a350:	jmp    40a378 <memcpy@plt+0x78c8>
  40a352:	mov    eax,DWORD PTR [rip+0xb788]        # 415ae0 <memcpy@plt+0x13030>
  40a358:	movsxd rdx,eax
  40a35b:	mov    rax,0x415b80
  40a362:	mov    ecx,DWORD PTR [rax+0x18]
  40a365:	mov    rax,QWORD PTR [rbp-0x28]
  40a369:	mov    esi,ecx
  40a36b:	mov    rdi,rax
  40a36e:	call   409ab5 <memcpy@plt+0x7005>
  40a373:	mov    eax,0x1
  40a378:	leave  
  40a379:	ret    
  40a37a:	push   rbp
  40a37b:	mov    rbp,rsp
  40a37e:	sub    rsp,0x10
  40a382:	mov    QWORD PTR [rbp-0x8],rdi
  40a386:	mov    rax,QWORD PTR [rbp-0x8]
  40a38a:	mov    eax,DWORD PTR [rax+0x324]
  40a390:	test   eax,eax
  40a392:	jle    40a3a1 <memcpy@plt+0x78f1>
  40a394:	mov    rax,QWORD PTR [rbp-0x8]
  40a398:	mov    BYTE PTR [rax+0x320],0x1
  40a39f:	jmp    40a3c0 <memcpy@plt+0x7910>
  40a3a1:	mov    rax,QWORD PTR [rbp-0x8]
  40a3a5:	lea    rsi,[rip+0xfcf4]        # 41a0a0 <memcpy@plt+0x175f0>
  40a3ac:	mov    rdi,rax
  40a3af:	call   409631 <memcpy@plt+0x6b81>
  40a3b4:	mov    rax,QWORD PTR [rbp-0x8]
  40a3b8:	mov    rdi,rax
  40a3bb:	call   4098a0 <memcpy@plt+0x6df0>
  40a3c0:	nop
  40a3c1:	leave  
  40a3c2:	ret    
  40a3c3:	endbr64 
  40a3c7:	push   rbp
  40a3c8:	mov    rbp,rsp
  40a3cb:	sub    rsp,0x10
  40a3cf:	mov    rax,QWORD PTR [rip+0xfcca]        # 41a0a0 <memcpy@plt+0x175f0>
  40a3d6:	mov    QWORD PTR [rbp-0x10],rax
  40a3da:	cmp    QWORD PTR [rbp-0x10],0x0
  40a3df:	je     40a3eb <memcpy@plt+0x793b>
  40a3e1:	mov    rax,QWORD PTR [rbp-0x10]
  40a3e5:	mov    rax,QWORD PTR [rax+0x10]
  40a3e9:	jmp    40a3f0 <memcpy@plt+0x7940>
  40a3eb:	mov    eax,0x0
  40a3f0:	mov    QWORD PTR [rbp-0x8],rax
  40a3f4:	jmp    40a427 <memcpy@plt+0x7977>
  40a3f6:	mov    rax,QWORD PTR [rbp-0x10]
  40a3fa:	mov    rax,QWORD PTR [rax]
  40a3fd:	mov    rdi,rax
  40a400:	call   40a37a <memcpy@plt+0x78ca>
  40a405:	mov    rax,QWORD PTR [rbp-0x8]
  40a409:	mov    QWORD PTR [rbp-0x10],rax
  40a40d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a412:	je     40a41e <memcpy@plt+0x796e>
  40a414:	mov    rax,QWORD PTR [rbp-0x10]
  40a418:	mov    rax,QWORD PTR [rax+0x10]
  40a41c:	jmp    40a423 <memcpy@plt+0x7973>
  40a41e:	mov    eax,0x0
  40a423:	mov    QWORD PTR [rbp-0x8],rax
  40a427:	cmp    QWORD PTR [rbp-0x10],0x0
  40a42c:	jne    40a3f6 <memcpy@plt+0x7946>
  40a42e:	nop
  40a42f:	leave  
  40a430:	ret    
  40a431:	endbr64 
  40a435:	push   rbp
  40a436:	mov    rbp,rsp
  40a439:	sub    rsp,0x10
  40a43d:	mov    QWORD PTR [rbp-0x8],rdi
  40a441:	mov    rax,QWORD PTR [rip+0xfc68]        # 41a0b0 <memcpy@plt+0x17600>
  40a448:	test   rax,rax
  40a44b:	jne    40a46f <memcpy@plt+0x79bf>
  40a44d:	mov    rax,0x415b80
  40a454:	mov    edx,DWORD PTR [rax+0x18]
  40a457:	mov    rax,QWORD PTR [rbp-0x8]
  40a45b:	mov    esi,edx
  40a45d:	mov    rdi,rax
  40a460:	call   4048b0 <memcpy@plt+0x1e00>
  40a465:	mov    eax,0x1
  40a46a:	jmp    40a4f9 <memcpy@plt+0x7a49>
  40a46f:	mov    rax,QWORD PTR [rbp-0x8]
  40a473:	mov    rdi,rax
  40a476:	call   4098cb <memcpy@plt+0x6e1b>
  40a47b:	mov    edi,0x20
  40a480:	call   40980f <memcpy@plt+0x6d5f>
  40a485:	mov    rdx,rax
  40a488:	mov    rax,0x415b80
  40a48f:	mov    ecx,DWORD PTR [rax+0x18]
  40a492:	mov    rax,QWORD PTR [rbp-0x8]
  40a496:	mov    esi,ecx
  40a498:	mov    rdi,rax
  40a49b:	call   409a86 <memcpy@plt+0x6fd6>
  40a4a0:	mov    rax,QWORD PTR [rbp-0x8]
  40a4a4:	lea    rsi,[rip+0x5669]        # 40fb14 <memcpy@plt+0xd064>
  40a4ab:	mov    rdi,rax
  40a4ae:	call   4099f6 <memcpy@plt+0x6f46>
  40a4b3:	test   al,al
  40a4b5:	je     40a4f4 <memcpy@plt+0x7a44>
  40a4b7:	mov    rax,QWORD PTR [rbp-0x8]
  40a4bb:	lea    rsi,[rip+0x5657]        # 40fb19 <memcpy@plt+0xd069>
  40a4c2:	mov    rdi,rax
  40a4c5:	call   4099f6 <memcpy@plt+0x6f46>
  40a4ca:	test   al,al
  40a4cc:	je     40a4f4 <memcpy@plt+0x7a44>
  40a4ce:	mov    rax,QWORD PTR [rbp-0x8]
  40a4d2:	mov    rdi,rax
  40a4d5:	call   40a24f <memcpy@plt+0x779f>
  40a4da:	xor    eax,0x1
  40a4dd:	test   al,al
  40a4df:	je     40a4f4 <memcpy@plt+0x7a44>
  40a4e1:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e5:	mov    rdi,rax
  40a4e8:	call   40a74c <memcpy@plt+0x7c9c>
  40a4ed:	mov    eax,0x1
  40a4f2:	jmp    40a4f9 <memcpy@plt+0x7a49>
  40a4f4:	mov    eax,0x1
  40a4f9:	leave  
  40a4fa:	ret    
  40a4fb:	endbr64 
  40a4ff:	push   rbp
  40a500:	mov    rbp,rsp
  40a503:	sub    rsp,0x20
  40a507:	mov    QWORD PTR [rbp-0x18],rdi
  40a50b:	mov    DWORD PTR [rbp-0x1c],esi
  40a50e:	mov    rax,0x415b80
  40a515:	mov    edx,DWORD PTR [rax+0x18]
  40a518:	mov    rax,QWORD PTR [rbp-0x18]
  40a51c:	mov    esi,edx
  40a51e:	mov    rdi,rax
  40a521:	call   409a60 <memcpy@plt+0x6fb0>
  40a526:	mov    QWORD PTR [rbp-0x8],rax
  40a52a:	cmp    QWORD PTR [rbp-0x8],0x0
  40a52f:	je     40a58b <memcpy@plt+0x7adb>
  40a531:	mov    rax,QWORD PTR [rbp-0x8]
  40a535:	movzx  eax,BYTE PTR [rax]
  40a538:	test   al,al
  40a53a:	jne    40a58b <memcpy@plt+0x7adb>
  40a53c:	mov    rax,QWORD PTR [rbp-0x18]
  40a540:	lea    rsi,[rip+0x55cd]        # 40fb14 <memcpy@plt+0xd064>
  40a547:	mov    rdi,rax
  40a54a:	call   4099f6 <memcpy@plt+0x6f46>
  40a54f:	test   al,al
  40a551:	je     40a58c <memcpy@plt+0x7adc>
  40a553:	mov    rax,QWORD PTR [rbp-0x18]
  40a557:	lea    rsi,[rip+0x55bb]        # 40fb19 <memcpy@plt+0xd069>
  40a55e:	mov    rdi,rax
  40a561:	call   4099f6 <memcpy@plt+0x6f46>
  40a566:	test   al,al
  40a568:	je     40a58c <memcpy@plt+0x7adc>
  40a56a:	mov    rax,QWORD PTR [rbp-0x18]
  40a56e:	mov    rdi,rax
  40a571:	call   40a24f <memcpy@plt+0x779f>
  40a576:	xor    eax,0x1
  40a579:	test   al,al
  40a57b:	je     40a58c <memcpy@plt+0x7adc>
  40a57d:	mov    rax,QWORD PTR [rbp-0x18]
  40a581:	mov    rdi,rax
  40a584:	call   40a74c <memcpy@plt+0x7c9c>
  40a589:	jmp    40a58c <memcpy@plt+0x7adc>
  40a58b:	nop
  40a58c:	leave  
  40a58d:	ret    
  40a58e:	push   rbp
  40a58f:	mov    rbp,rsp
  40a592:	sub    rsp,0x30
  40a596:	mov    QWORD PTR [rbp-0x28],rdi
  40a59a:	mov    QWORD PTR [rbp-0x30],rsi
  40a59e:	mov    rax,0x415b80
  40a5a5:	mov    edx,DWORD PTR [rax+0x18]
  40a5a8:	mov    rax,QWORD PTR [rbp-0x28]
  40a5ac:	mov    esi,edx
  40a5ae:	mov    rdi,rax
  40a5b1:	call   409a60 <memcpy@plt+0x6fb0>
  40a5b6:	mov    QWORD PTR [rbp-0x10],rax
  40a5ba:	cmp    QWORD PTR [rbp-0x10],0x0
  40a5bf:	je     40a6fd <memcpy@plt+0x7c4d>
  40a5c5:	mov    rax,QWORD PTR [rbp-0x10]
  40a5c9:	mov    rax,QWORD PTR [rax+0x18]
  40a5cd:	test   rax,rax
  40a5d0:	je     40a691 <memcpy@plt+0x7be1>
  40a5d6:	mov    rax,QWORD PTR [rbp-0x28]
  40a5da:	mov    eax,DWORD PTR [rax]
  40a5dc:	mov    rdx,QWORD PTR [rbp-0x30]
  40a5e0:	mov    rsi,rdx
  40a5e3:	mov    edi,eax
  40a5e5:	mov    eax,0x0
  40a5ea:	call   403b1c <memcpy@plt+0x106c>
  40a5ef:	mov    rax,QWORD PTR [rbp-0x10]
  40a5f3:	mov    rax,QWORD PTR [rax+0x8]
  40a5f7:	mov    QWORD PTR [rbp-0x20],rax
  40a5fb:	cmp    QWORD PTR [rbp-0x20],0x0
  40a600:	je     40a60c <memcpy@plt+0x7b5c>
  40a602:	mov    rax,QWORD PTR [rbp-0x20]
  40a606:	mov    rax,QWORD PTR [rax+0x10]
  40a60a:	jmp    40a611 <memcpy@plt+0x7b61>
  40a60c:	mov    eax,0x0
  40a611:	mov    QWORD PTR [rbp-0x18],rax
  40a615:	jmp    40a68a <memcpy@plt+0x7bda>
  40a617:	mov    rax,QWORD PTR [rbp-0x20]
  40a61b:	mov    rax,QWORD PTR [rax]
  40a61e:	mov    QWORD PTR [rbp-0x8],rax
  40a622:	mov    rax,QWORD PTR [rbp-0x8]
  40a626:	mov    rax,QWORD PTR [rax+0x10]
  40a62a:	mov    rdi,rax
  40a62d:	call   4033a6 <memcpy@plt+0x8f6>
  40a632:	mov    rax,QWORD PTR [rbp-0x8]
  40a636:	mov    rax,QWORD PTR [rax]
  40a639:	mov    rdi,rax
  40a63c:	call   409b22 <memcpy@plt+0x7072>
  40a641:	mov    rax,QWORD PTR [rbp-0x10]
  40a645:	lea    rdx,[rax+0x8]
  40a649:	mov    rax,QWORD PTR [rbp-0x8]
  40a64d:	add    rax,0x18
  40a651:	mov    rsi,rdx
  40a654:	mov    rdi,rax
  40a657:	call   409406 <memcpy@plt+0x6956>
  40a65c:	mov    rax,QWORD PTR [rbp-0x8]
  40a660:	mov    rdi,rax
  40a663:	call   4098a0 <memcpy@plt+0x6df0>
  40a668:	mov    rax,QWORD PTR [rbp-0x18]
  40a66c:	mov    QWORD PTR [rbp-0x20],rax
  40a670:	cmp    QWORD PTR [rbp-0x20],0x0
  40a675:	je     40a681 <memcpy@plt+0x7bd1>
  40a677:	mov    rax,QWORD PTR [rbp-0x20]
  40a67b:	mov    rax,QWORD PTR [rax+0x10]
  40a67f:	jmp    40a686 <memcpy@plt+0x7bd6>
  40a681:	mov    eax,0x0
  40a686:	mov    QWORD PTR [rbp-0x18],rax
  40a68a:	cmp    QWORD PTR [rbp-0x20],0x0
  40a68f:	jne    40a617 <memcpy@plt+0x7b67>
  40a691:	mov    rax,QWORD PTR [rbp-0x10]
  40a695:	mov    rdi,rax
  40a698:	call   4098a0 <memcpy@plt+0x6df0>
  40a69d:	mov    rax,0x415b80
  40a6a4:	mov    ecx,DWORD PTR [rax+0x18]
  40a6a7:	mov    rax,QWORD PTR [rbp-0x28]
  40a6ab:	mov    edx,0x0
  40a6b0:	mov    esi,ecx
  40a6b2:	mov    rdi,rax
  40a6b5:	call   409a86 <memcpy@plt+0x6fd6>
  40a6ba:	mov    rax,0x415b80
  40a6c1:	mov    ecx,DWORD PTR [rax+0x18]
  40a6c4:	mov    rax,QWORD PTR [rbp-0x28]
  40a6c8:	mov    edx,0x0
  40a6cd:	mov    esi,ecx
  40a6cf:	mov    rdi,rax
  40a6d2:	call   409af3 <memcpy@plt+0x7043>
  40a6d7:	mov    rax,0x415b80
  40a6de:	mov    edx,DWORD PTR [rax+0x18]
  40a6e1:	mov    rax,QWORD PTR [rbp-0x28]
  40a6e5:	mov    esi,edx
  40a6e7:	mov    rdi,rax
  40a6ea:	call   4048b0 <memcpy@plt+0x1e00>
  40a6ef:	mov    rax,QWORD PTR [rbp-0x28]
  40a6f3:	mov    rdi,rax
  40a6f6:	call   4098ed <memcpy@plt+0x6e3d>
  40a6fb:	jmp    40a6fe <memcpy@plt+0x7c4e>
  40a6fd:	nop
  40a6fe:	leave  
  40a6ff:	ret    
  40a700:	endbr64 
  40a704:	push   rbp
  40a705:	mov    rbp,rsp
  40a708:	sub    rsp,0x10
  40a70c:	mov    QWORD PTR [rbp-0x8],rdi
  40a710:	mov    rax,QWORD PTR [rbp-0x8]
  40a714:	lea    rsi,[rip+0x5404]        # 40fb1f <memcpy@plt+0xd06f>
  40a71b:	mov    rdi,rax
  40a71e:	call   40a58e <memcpy@plt+0x7ade>
  40a723:	nop
  40a724:	leave  
  40a725:	ret    
  40a726:	endbr64 
  40a72a:	push   rbp
  40a72b:	mov    rbp,rsp
  40a72e:	sub    rsp,0x10
  40a732:	mov    QWORD PTR [rbp-0x8],rdi
  40a736:	mov    rax,QWORD PTR [rbp-0x8]
  40a73a:	lea    rsi,[rip+0x53fa]        # 40fb3b <memcpy@plt+0xd08b>
  40a741:	mov    rdi,rax
  40a744:	call   40a58e <memcpy@plt+0x7ade>
  40a749:	nop
  40a74a:	leave  
  40a74b:	ret    
  40a74c:	endbr64 
  40a750:	push   rbp
  40a751:	mov    rbp,rsp
  40a754:	sub    rsp,0x10
  40a758:	mov    QWORD PTR [rbp-0x8],rdi
  40a75c:	mov    rax,QWORD PTR [rbp-0x8]
  40a760:	lea    rsi,[rip+0x53ee]        # 40fb55 <memcpy@plt+0xd0a5>
  40a767:	mov    rdi,rax
  40a76a:	call   40a58e <memcpy@plt+0x7ade>
  40a76f:	nop
  40a770:	leave  
  40a771:	ret    
  40a772:	endbr64 
  40a776:	push   rbp
  40a777:	mov    rbp,rsp
  40a77a:	sub    rsp,0x30
  40a77e:	mov    rax,QWORD PTR fs:0x28
  40a787:	mov    QWORD PTR [rbp-0x8],rax
  40a78b:	xor    eax,eax
  40a78d:	mov    rax,0x41a270
  40a794:	mov    rax,QWORD PTR [rax]
  40a797:	lea    rdx,[rbp-0x20]
  40a79b:	mov    rsi,rdx
  40a79e:	mov    rdi,rax
  40a7a1:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40a7a6:	jmp    40a7cd <memcpy@plt+0x7d1d>
  40a7a8:	mov    rax,QWORD PTR [rbp-0x28]
  40a7ac:	mov    rdi,rax
  40a7af:	call   40a726 <memcpy@plt+0x7c76>
  40a7b4:	mov    rax,0x41a270
  40a7bb:	mov    rax,QWORD PTR [rax]
  40a7be:	lea    rdx,[rbp-0x20]
  40a7c2:	mov    rsi,rdx
  40a7c5:	mov    rdi,rax
  40a7c8:	call   402730 <rb_dictionary_foreach_next@plt>
  40a7cd:	mov    rax,0x41a270
  40a7d4:	mov    rax,QWORD PTR [rax]
  40a7d7:	lea    rdx,[rbp-0x20]
  40a7db:	mov    rsi,rdx
  40a7de:	mov    rdi,rax
  40a7e1:	call   402690 <rb_dictionary_foreach_cur@plt>
  40a7e6:	mov    QWORD PTR [rbp-0x28],rax
  40a7ea:	cmp    QWORD PTR [rbp-0x28],0x0
  40a7ef:	jne    40a7a8 <memcpy@plt+0x7cf8>
  40a7f1:	call   40a3c3 <memcpy@plt+0x7913>
  40a7f6:	nop
  40a7f7:	mov    rax,QWORD PTR [rbp-0x8]
  40a7fb:	xor    rax,QWORD PTR fs:0x28
  40a804:	je     40a80b <memcpy@plt+0x7d5b>
  40a806:	call   402950 <__stack_chk_fail@plt>
  40a80b:	leave  
  40a80c:	ret    
  40a80d:	endbr64 
  40a811:	push   rbp
  40a812:	mov    rbp,rsp
  40a815:	add    rsp,0xffffffffffffff80
  40a819:	mov    QWORD PTR [rbp-0x68],rdi
  40a81d:	mov    DWORD PTR [rbp-0x6c],esi
  40a820:	mov    QWORD PTR [rbp-0x78],rdx
  40a824:	mov    rax,QWORD PTR fs:0x28
  40a82d:	mov    QWORD PTR [rbp-0x8],rax
  40a831:	xor    eax,eax
  40a833:	mov    QWORD PTR [rbp-0x20],0x0
  40a83b:	mov    QWORD PTR [rbp-0x18],0x0
  40a843:	mov    QWORD PTR [rbp-0x10],0x0
  40a84b:	mov    rax,QWORD PTR [rbp-0x78]
  40a84f:	add    rax,0x10
  40a853:	mov    rax,QWORD PTR [rax]
  40a856:	mov    rdi,rax
  40a859:	call   40984b <memcpy@plt+0x6d9b>
  40a85e:	mov    QWORD PTR [rbp-0x30],rax
  40a862:	mov    rax,QWORD PTR [rbp-0x30]
  40a866:	movzx  eax,BYTE PTR [rax]
  40a869:	cmp    al,0x2a
  40a86b:	je     40a9f3 <memcpy@plt+0x7f43>
  40a871:	lea    rdx,[rbp-0x48]
  40a875:	mov    rax,QWORD PTR [rbp-0x30]
  40a879:	lea    rsi,[rip+0x52f0]        # 40fb70 <memcpy@plt+0xd0c0>
  40a880:	mov    rdi,rax
  40a883:	call   402680 <rb_strtok_r@plt>
  40a888:	mov    QWORD PTR [rbp-0x40],rax
  40a88c:	jmp    40a9e6 <memcpy@plt+0x7f36>
  40a891:	mov    edi,0x58
  40a896:	call   40980f <memcpy@plt+0x6d5f>
  40a89b:	mov    QWORD PTR [rbp-0x28],rax
  40a89f:	mov    DWORD PTR [rbp-0x50],0x0
  40a8a6:	mov    DWORD PTR [rbp-0x4c],0x2
  40a8ad:	mov    rax,QWORD PTR [rbp-0x40]
  40a8b1:	mov    QWORD PTR [rbp-0x38],rax
  40a8b5:	jmp    40a94f <memcpy@plt+0x7e9f>
  40a8ba:	mov    rax,QWORD PTR [rbp-0x38]
  40a8be:	movzx  eax,BYTE PTR [rax]
  40a8c1:	cmp    al,0x2e
  40a8c3:	jne    40a8f7 <memcpy@plt+0x7e47>
  40a8c5:	inc    DWORD PTR [rbp-0x50]
  40a8c8:	cmp    DWORD PTR [rbp-0x50],0x3
  40a8cc:	jle    40a8ee <memcpy@plt+0x7e3e>
  40a8ce:	lea    rsi,[rip+0x52a3]        # 40fb78 <memcpy@plt+0xd0c8>
  40a8d5:	mov    edi,0x43
  40a8da:	mov    eax,0x0
  40a8df:	call   403c26 <memcpy@plt+0x1176>
  40a8e4:	mov    edi,0x3
  40a8e9:	call   402630 <exit@plt>
  40a8ee:	mov    DWORD PTR [rbp-0x4c],0x1
  40a8f5:	jmp    40a94b <memcpy@plt+0x7e9b>
  40a8f7:	call   402790 <__ctype_b_loc@plt>
  40a8fc:	mov    rdx,QWORD PTR [rax]
  40a8ff:	mov    rax,QWORD PTR [rbp-0x38]
  40a903:	movzx  eax,BYTE PTR [rax]
  40a906:	movsx  rax,al
  40a90a:	add    rax,rax
  40a90d:	add    rax,rdx
  40a910:	movzx  eax,WORD PTR [rax]
  40a913:	movzx  eax,ax
  40a916:	and    eax,0x800
  40a91b:	test   eax,eax
  40a91d:	jne    40a94b <memcpy@plt+0x7e9b>
  40a91f:	mov    rax,QWORD PTR [rbp-0x38]
  40a923:	movzx  eax,BYTE PTR [rax]
  40a926:	movsx  eax,al
  40a929:	mov    edx,eax
  40a92b:	lea    rsi,[rip+0x5286]        # 40fbb8 <memcpy@plt+0xd108>
  40a932:	mov    edi,0x43
  40a937:	mov    eax,0x0
  40a93c:	call   403c26 <memcpy@plt+0x1176>
  40a941:	mov    edi,0x3
  40a946:	call   402630 <exit@plt>
  40a94b:	inc    QWORD PTR [rbp-0x38]
  40a94f:	mov    rax,QWORD PTR [rbp-0x38]
  40a953:	movzx  eax,BYTE PTR [rax]
  40a956:	test   al,al
  40a958:	jne    40a8ba <memcpy@plt+0x7e0a>
  40a95e:	cmp    DWORD PTR [rbp-0x50],0x0
  40a962:	jle    40a98a <memcpy@plt+0x7eda>
  40a964:	cmp    DWORD PTR [rbp-0x50],0x2
  40a968:	jg     40a98a <memcpy@plt+0x7eda>
  40a96a:	lea    rsi,[rip+0x5297]        # 40fc08 <memcpy@plt+0xd158>
  40a971:	mov    edi,0x43
  40a976:	mov    eax,0x0
  40a97b:	call   403c26 <memcpy@plt+0x1176>
  40a980:	mov    edi,0x3
  40a985:	call   402630 <exit@plt>
  40a98a:	mov    rax,QWORD PTR [rbp-0x28]
  40a98e:	mov    edx,DWORD PTR [rbp-0x4c]
  40a991:	mov    DWORD PTR [rax],edx
  40a993:	mov    rax,QWORD PTR [rbp-0x28]
  40a997:	lea    rcx,[rax+0x4]
  40a99b:	mov    rax,QWORD PTR [rbp-0x40]
  40a99f:	mov    edx,0x35
  40a9a4:	mov    rsi,rax
  40a9a7:	mov    rdi,rcx
  40a9aa:	call   402720 <rb_strlcpy@plt>
  40a9af:	mov    rax,QWORD PTR [rbp-0x28]
  40a9b3:	lea    rcx,[rax+0x40]
  40a9b7:	lea    rdx,[rbp-0x20]
  40a9bb:	mov    rax,QWORD PTR [rbp-0x28]
  40a9bf:	mov    rsi,rcx
  40a9c2:	mov    rdi,rax
  40a9c5:	call   409302 <memcpy@plt+0x6852>
  40a9ca:	lea    rax,[rbp-0x48]
  40a9ce:	mov    rdx,rax
  40a9d1:	lea    rsi,[rip+0x5198]        # 40fb70 <memcpy@plt+0xd0c0>
  40a9d8:	mov    edi,0x0
  40a9dd:	call   402680 <rb_strtok_r@plt>
  40a9e2:	mov    QWORD PTR [rbp-0x40],rax
  40a9e6:	cmp    QWORD PTR [rbp-0x40],0x0
  40a9eb:	jne    40a891 <memcpy@plt+0x7de1>
  40a9f1:	jmp    40a9f4 <memcpy@plt+0x7f44>
  40a9f3:	nop
  40a9f4:	mov    rax,QWORD PTR [rbp-0x30]
  40a9f8:	mov    rdi,rax
  40a9fb:	call   4098a0 <memcpy@plt+0x6df0>
  40aa00:	mov    rax,QWORD PTR [rbp-0x78]
  40aa04:	add    rax,0x8
  40aa08:	mov    rax,QWORD PTR [rax]
  40aa0b:	mov    rdi,rax
  40aa0e:	call   402880 <atoi@plt>
  40aa13:	and    eax,0x3
  40aa16:	mov    BYTE PTR [rbp-0x51],al
  40aa19:	movzx  edx,BYTE PTR [rbp-0x51]
  40aa1d:	mov    rax,QWORD PTR [rbp-0x78]
  40aa21:	add    rax,0x18
  40aa25:	mov    rsi,QWORD PTR [rax]
  40aa28:	mov    rax,QWORD PTR [rbp-0x78]
  40aa2c:	mov    rax,QWORD PTR [rax]
  40aa2f:	lea    rcx,[rbp-0x20]
  40aa33:	mov    rdi,rax
  40aa36:	call   409c0a <memcpy@plt+0x715a>
  40aa3b:	test   rax,rax
  40aa3e:	jne    40aa60 <memcpy@plt+0x7fb0>
  40aa40:	lea    rsi,[rip+0x5201]        # 40fc48 <memcpy@plt+0xd198>
  40aa47:	mov    edi,0x43
  40aa4c:	mov    eax,0x0
  40aa51:	call   403c26 <memcpy@plt+0x1176>
  40aa56:	mov    edi,0x3
  40aa5b:	call   402630 <exit@plt>
  40aa60:	nop
  40aa61:	mov    rax,QWORD PTR [rbp-0x8]
  40aa65:	xor    rax,QWORD PTR fs:0x28
  40aa6e:	je     40aa75 <memcpy@plt+0x7fc5>
  40aa70:	call   402950 <__stack_chk_fail@plt>
  40aa75:	leave  
  40aa76:	ret    
  40aa77:	endbr64 
  40aa7b:	push   rbp
  40aa7c:	mov    rbp,rsp
  40aa7f:	sub    rsp,0x30
  40aa83:	mov    QWORD PTR [rbp-0x18],rdi
  40aa87:	mov    DWORD PTR [rbp-0x1c],esi
  40aa8a:	mov    QWORD PTR [rbp-0x28],rdx
  40aa8e:	mov    rax,QWORD PTR [rbp-0x28]
  40aa92:	mov    rax,QWORD PTR [rax]
  40aa95:	mov    rdi,rax
  40aa98:	call   409d09 <memcpy@plt+0x7259>
  40aa9d:	mov    QWORD PTR [rbp-0x8],rax
  40aaa1:	cmp    QWORD PTR [rbp-0x8],0x0
  40aaa6:	jne    40aaca <memcpy@plt+0x801a>
  40aaa8:	mov    rax,QWORD PTR [rbp-0x28]
  40aaac:	mov    rax,QWORD PTR [rax]
  40aaaf:	mov    rdx,rax
  40aab2:	lea    rsi,[rip+0x51bf]        # 40fc78 <memcpy@plt+0xd1c8>
  40aab9:	mov    edi,0x57
  40aabe:	mov    eax,0x0
  40aac3:	call   403c26 <memcpy@plt+0x1176>
  40aac8:	jmp    40aad6 <memcpy@plt+0x8026>
  40aaca:	mov    rax,QWORD PTR [rbp-0x8]
  40aace:	mov    rdi,rax
  40aad1:	call   40a37a <memcpy@plt+0x78ca>
  40aad6:	leave  
  40aad7:	ret    
  40aad8:	endbr64 
  40aadc:	push   rbp
  40aadd:	mov    rbp,rsp
  40aae0:	sub    rsp,0x20
  40aae4:	mov    QWORD PTR [rbp-0x8],rdi
  40aae8:	mov    DWORD PTR [rbp-0xc],esi
  40aaeb:	mov    QWORD PTR [rbp-0x18],rdx
  40aaef:	call   40a3c3 <memcpy@plt+0x7913>
  40aaf4:	nop
  40aaf5:	leave  
  40aaf6:	ret    
  40aaf7:	endbr64 
  40aafb:	push   rbp
  40aafc:	mov    rbp,rsp
  40aaff:	sub    rsp,0x30
  40ab03:	mov    QWORD PTR [rbp-0x18],rdi
  40ab07:	mov    DWORD PTR [rbp-0x1c],esi
  40ab0a:	mov    QWORD PTR [rbp-0x28],rdx
  40ab0e:	mov    rax,QWORD PTR [rbp-0x28]
  40ab12:	mov    rax,QWORD PTR [rax]
  40ab15:	mov    rdi,rax
  40ab18:	call   402880 <atoi@plt>
  40ab1d:	mov    DWORD PTR [rbp-0x4],eax
  40ab20:	cmp    DWORD PTR [rbp-0x4],0x0
  40ab24:	jns    40ab4b <memcpy@plt+0x809b>
  40ab26:	mov    eax,DWORD PTR [rbp-0x4]
  40ab29:	mov    edx,eax
  40ab2b:	lea    rsi,[rip+0x5176]        # 40fca8 <memcpy@plt+0xd1f8>
  40ab32:	mov    edi,0x43
  40ab37:	mov    eax,0x0
  40ab3c:	call   403c26 <memcpy@plt+0x1176>
  40ab41:	mov    edi,0x3
  40ab46:	call   402630 <exit@plt>
  40ab4b:	mov    eax,DWORD PTR [rbp-0x4]
  40ab4e:	mov    DWORD PTR [rip+0xaf8c],eax        # 415ae0 <memcpy@plt+0x13030>
  40ab54:	nop
  40ab55:	leave  
  40ab56:	ret    
  40ab57:	push   rbp
  40ab58:	mov    rbp,rsp
  40ab5b:	sub    rsp,0x20
  40ab5f:	mov    QWORD PTR [rbp-0x18],rdi
  40ab63:	mov    rax,QWORD PTR [rbp-0x18]
  40ab67:	mov    rsi,rax
  40ab6a:	mov    edi,0x1
  40ab6f:	call   4029e0 <calloc@plt>
  40ab74:	mov    QWORD PTR [rbp-0x8],rax
  40ab78:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab7d:	sete   al
  40ab80:	movzx  eax,al
  40ab83:	test   rax,rax
  40ab86:	je     40ab8d <memcpy@plt+0x80dd>
  40ab88:	call   402900 <rb_outofmemory@plt>
  40ab8d:	mov    rax,QWORD PTR [rbp-0x8]
  40ab91:	leave  
  40ab92:	ret    
  40ab93:	push   rbp
  40ab94:	mov    rbp,rsp
  40ab97:	sub    rsp,0x10
  40ab9b:	mov    QWORD PTR [rbp-0x8],rdi
  40ab9f:	cmp    QWORD PTR [rbp-0x8],0x0
  40aba4:	setne  al
  40aba7:	movzx  eax,al
  40abaa:	test   rax,rax
  40abad:	je     40abbb <memcpy@plt+0x810b>
  40abaf:	mov    rax,QWORD PTR [rbp-0x8]
  40abb3:	mov    rdi,rax
  40abb6:	call   402750 <free@plt>
  40abbb:	nop
  40abbc:	leave  
  40abbd:	ret    
  40abbe:	push   rbp
  40abbf:	mov    rbp,rsp
  40abc2:	mov    QWORD PTR [rbp-0x8],rdi
  40abc6:	mov    rax,QWORD PTR [rbp-0x8]
  40abca:	mov    eax,DWORD PTR [rax+0x1cc]
  40abd0:	lea    edx,[rax+0x1]
  40abd3:	mov    rax,QWORD PTR [rbp-0x8]
  40abd7:	mov    DWORD PTR [rax+0x1cc],edx
  40abdd:	nop
  40abde:	pop    rbp
  40abdf:	ret    
  40abe0:	push   rbp
  40abe1:	mov    rbp,rsp
  40abe4:	sub    rsp,0x10
  40abe8:	mov    QWORD PTR [rbp-0x8],rdi
  40abec:	mov    rax,QWORD PTR [rbp-0x8]
  40abf0:	mov    eax,DWORD PTR [rax+0x1cc]
  40abf6:	lea    edx,[rax-0x1]
  40abf9:	mov    rax,QWORD PTR [rbp-0x8]
  40abfd:	mov    DWORD PTR [rax+0x1cc],edx
  40ac03:	mov    rax,QWORD PTR [rbp-0x8]
  40ac07:	mov    eax,DWORD PTR [rax+0x1cc]
  40ac0d:	test   eax,eax
  40ac0f:	jne    40ac1d <memcpy@plt+0x816d>
  40ac11:	mov    rax,QWORD PTR [rbp-0x8]
  40ac15:	mov    rdi,rax
  40ac18:	call   4047b8 <memcpy@plt+0x1d08>
  40ac1d:	nop
  40ac1e:	leave  
  40ac1f:	ret    
  40ac20:	push   rbp
  40ac21:	mov    rbp,rsp
  40ac24:	mov    QWORD PTR [rbp-0x8],rdi
  40ac28:	mov    DWORD PTR [rbp-0xc],esi
  40ac2b:	mov    rax,QWORD PTR [rbp-0x8]
  40ac2f:	mov    rax,QWORD PTR [rax+0x1d0]
  40ac36:	mov    edx,DWORD PTR [rbp-0xc]
  40ac39:	shl    rdx,0x5
  40ac3d:	add    rax,rdx
  40ac40:	mov    rax,QWORD PTR [rax+0x10]
  40ac44:	pop    rbp
  40ac45:	ret    
  40ac46:	push   rbp
  40ac47:	mov    rbp,rsp
  40ac4a:	mov    QWORD PTR [rbp-0x8],rdi
  40ac4e:	mov    DWORD PTR [rbp-0xc],esi
  40ac51:	mov    QWORD PTR [rbp-0x18],rdx
  40ac55:	mov    rax,QWORD PTR [rbp-0x8]
  40ac59:	mov    rax,QWORD PTR [rax+0x1d0]
  40ac60:	mov    edx,DWORD PTR [rbp-0xc]
  40ac63:	shl    rdx,0x5
  40ac67:	add    rdx,rax
  40ac6a:	mov    rax,QWORD PTR [rbp-0x18]
  40ac6e:	mov    QWORD PTR [rdx+0x10],rax
  40ac72:	nop
  40ac73:	pop    rbp
  40ac74:	ret    
  40ac75:	push   rbp
  40ac76:	mov    rbp,rsp
  40ac79:	sub    rsp,0x20
  40ac7d:	mov    QWORD PTR [rbp-0x8],rdi
  40ac81:	mov    DWORD PTR [rbp-0xc],esi
  40ac84:	mov    QWORD PTR [rbp-0x18],rdx
  40ac88:	call   4027f0 <rb_current_time@plt>
  40ac8d:	mov    rcx,rax
  40ac90:	mov    rax,QWORD PTR [rbp-0x8]
  40ac94:	mov    rax,QWORD PTR [rax+0x1d0]
  40ac9b:	mov    edx,DWORD PTR [rbp-0xc]
  40ac9e:	shl    rdx,0x5
  40aca2:	add    rax,rdx
  40aca5:	mov    rdx,QWORD PTR [rbp-0x18]
  40aca9:	add    rdx,rcx
  40acac:	mov    QWORD PTR [rax+0x8],rdx
  40acb0:	nop
  40acb1:	leave  
  40acb2:	ret    
  40acb3:	push   rbp
  40acb4:	mov    rbp,rsp
  40acb7:	mov    QWORD PTR [rbp-0x8],rdi
  40acbb:	mov    DWORD PTR [rbp-0xc],esi
  40acbe:	mov    QWORD PTR [rbp-0x18],rdx
  40acc2:	mov    rax,QWORD PTR [rbp-0x8]
  40acc6:	mov    rax,QWORD PTR [rax+0x1d0]
  40accd:	mov    edx,DWORD PTR [rbp-0xc]
  40acd0:	shl    rdx,0x5
  40acd4:	add    rdx,rax
  40acd7:	mov    rax,QWORD PTR [rbp-0x18]
  40acdb:	mov    QWORD PTR [rdx+0x8],rax
  40acdf:	nop
  40ace0:	pop    rbp
  40ace1:	ret    
  40ace2:	endbr64 
  40ace6:	push   rbp
  40ace7:	mov    rbp,rsp
  40acea:	sub    rsp,0x70
  40acee:	mov    QWORD PTR [rbp-0x58],rdi
  40acf2:	mov    DWORD PTR [rbp-0x5c],esi
  40acf5:	mov    QWORD PTR [rbp-0x68],rdx
  40acf9:	mov    rax,QWORD PTR fs:0x28
  40ad02:	mov    QWORD PTR [rbp-0x8],rax
  40ad06:	xor    eax,eax
  40ad08:	mov    rax,QWORD PTR [rbp-0x68]
  40ad0c:	mov    QWORD PTR [rbp-0x40],rax
  40ad10:	mov    rax,0x415ca0
  40ad17:	mov    edx,DWORD PTR [rax+0x18]
  40ad1a:	mov    rax,QWORD PTR [rbp-0x40]
  40ad1e:	mov    esi,edx
  40ad20:	mov    rdi,rax
  40ad23:	call   40ac20 <memcpy@plt+0x8170>
  40ad28:	mov    QWORD PTR [rbp-0x38],rax
  40ad2c:	cmp    DWORD PTR [rbp-0x5c],0x0
  40ad30:	je     40ad48 <memcpy@plt+0x8298>
  40ad32:	mov    rax,QWORD PTR [rbp-0x40]
  40ad36:	mov    esi,0x2
  40ad3b:	mov    rdi,rax
  40ad3e:	call   40b051 <memcpy@plt+0x85a1>
  40ad43:	jmp    40ade1 <memcpy@plt+0x8331>
  40ad48:	mov    rax,QWORD PTR [rbp-0x40]
  40ad4c:	movzx  eax,WORD PTR [rax+0x3e]
  40ad50:	movzx  ecx,ax
  40ad53:	mov    rax,QWORD PTR [rbp-0x40]
  40ad57:	movzx  eax,WORD PTR [rax+0xf6]
  40ad5e:	movzx  edx,ax
  40ad61:	lea    rax,[rbp-0x30]
  40ad65:	mov    r8d,ecx
  40ad68:	mov    ecx,edx
  40ad6a:	lea    rdx,[rip+0x50a6]        # 40fe17 <memcpy@plt+0xd367>
  40ad71:	mov    esi,0x20
  40ad76:	mov    rdi,rax
  40ad79:	mov    eax,0x0
  40ad7e:	call   4025d0 <snprintf@plt>
  40ad83:	lea    rax,[rbp-0x30]
  40ad87:	mov    rdi,rax
  40ad8a:	call   402760 <strlen@plt>
  40ad8f:	mov    DWORD PTR [rbp-0x44],eax
  40ad92:	mov    rax,QWORD PTR [rbp-0x38]
  40ad96:	mov    rax,QWORD PTR [rax]
  40ad99:	mov    edx,DWORD PTR [rbp-0x44]
  40ad9c:	lea    rcx,[rbp-0x30]
  40ada0:	mov    rsi,rcx
  40ada3:	mov    rdi,rax
  40ada6:	call   4026f0 <rb_write@plt>
  40adab:	mov    rdx,rax
  40adae:	mov    eax,DWORD PTR [rbp-0x44]
  40adb1:	cdqe   
  40adb3:	cmp    rdx,rax
  40adb6:	je     40adcb <memcpy@plt+0x831b>
  40adb8:	mov    rax,QWORD PTR [rbp-0x40]
  40adbc:	mov    esi,0x2
  40adc1:	mov    rdi,rax
  40adc4:	call   40b051 <memcpy@plt+0x85a1>
  40adc9:	jmp    40ade1 <memcpy@plt+0x8331>
  40adcb:	mov    rax,QWORD PTR [rbp-0x38]
  40adcf:	mov    rax,QWORD PTR [rax]
  40add2:	mov    rdx,QWORD PTR [rbp-0x40]
  40add6:	mov    rsi,rdx
  40add9:	mov    rdi,rax
  40addc:	call   40adf7 <memcpy@plt+0x8347>
  40ade1:	mov    rax,QWORD PTR [rbp-0x8]
  40ade5:	xor    rax,QWORD PTR fs:0x28
  40adee:	je     40adf5 <memcpy@plt+0x8345>
  40adf0:	call   402950 <__stack_chk_fail@plt>
  40adf5:	leave  
  40adf6:	ret    
  40adf7:	endbr64 
  40adfb:	push   rbp
  40adfc:	mov    rbp,rsp
  40adff:	sub    rsp,0xd0
  40ae06:	mov    QWORD PTR [rbp-0xc8],rdi
  40ae0d:	mov    QWORD PTR [rbp-0xd0],rsi
  40ae14:	mov    rax,QWORD PTR fs:0x28
  40ae1d:	mov    QWORD PTR [rbp-0x8],rax
  40ae21:	xor    eax,eax
  40ae23:	mov    rax,QWORD PTR [rbp-0xd0]
  40ae2a:	mov    QWORD PTR [rbp-0xa0],rax
  40ae31:	lea    rdx,[rbp-0x90]
  40ae38:	mov    eax,0x0
  40ae3d:	mov    ecx,0x10
  40ae42:	mov    rdi,rdx
  40ae45:	rep stos QWORD PTR es:[rdi],rax
  40ae48:	mov    rdx,rdi
  40ae4b:	mov    BYTE PTR [rdx],al
  40ae4d:	inc    rdx
  40ae50:	mov    DWORD PTR [rbp-0xb8],0x2
  40ae5a:	mov    QWORD PTR [rbp-0xb0],0x0
  40ae65:	mov    QWORD PTR [rbp-0xa8],0x0
  40ae70:	lea    rcx,[rbp-0x90]
  40ae77:	mov    rax,QWORD PTR [rbp-0xc8]
  40ae7e:	mov    edx,0x80
  40ae83:	mov    rsi,rcx
  40ae86:	mov    rdi,rax
  40ae89:	call   402780 <rb_read@plt>
  40ae8e:	mov    QWORD PTR [rbp-0x98],rax
  40ae95:	cmp    QWORD PTR [rbp-0x98],0x0
  40ae9d:	jns    40aedb <memcpy@plt+0x842b>
  40ae9f:	call   402910 <__errno_location@plt>
  40aea4:	mov    eax,DWORD PTR [rax]
  40aea6:	mov    edi,eax
  40aea8:	call   4025b0 <rb_ignore_errno@plt>
  40aead:	test   eax,eax
  40aeaf:	je     40aedb <memcpy@plt+0x842b>
  40aeb1:	mov    rdx,QWORD PTR [rbp-0xa0]
  40aeb8:	mov    rax,QWORD PTR [rbp-0xc8]
  40aebf:	mov    rcx,rdx
  40aec2:	lea    rdx,[rip+0xffffffffffffff2e]        # 40adf7 <memcpy@plt+0x8347>
  40aec9:	mov    esi,0x1
  40aece:	mov    rdi,rax
  40aed1:	call   402600 <rb_setselect@plt>
  40aed6:	jmp    40b03b <memcpy@plt+0x858b>
  40aedb:	cmp    QWORD PTR [rbp-0x98],0x0
  40aee3:	jle    40b009 <memcpy@plt+0x8559>
  40aee9:	lea    rax,[rbp-0x90]
  40aef0:	mov    rdi,rax
  40aef3:	call   40b221 <memcpy@plt+0x8771>
  40aef8:	mov    QWORD PTR [rbp-0xb0],rax
  40aeff:	cmp    QWORD PTR [rbp-0xb0],0x0
  40af07:	je     40afff <memcpy@plt+0x854f>
  40af0d:	mov    rax,QWORD PTR [rbp-0xa0]
  40af14:	add    rax,0x1b8
  40af1a:	mov    QWORD PTR [rbp-0xa8],rax
  40af21:	jmp    40af2a <memcpy@plt+0x847a>
  40af23:	inc    QWORD PTR [rbp-0xb0]
  40af2a:	mov    rax,QWORD PTR [rbp-0xb0]
  40af31:	movzx  eax,BYTE PTR [rax]
  40af34:	cmp    al,0x7e
  40af36:	je     40af23 <memcpy@plt+0x8473>
  40af38:	mov    rax,QWORD PTR [rbp-0xb0]
  40af3f:	movzx  eax,BYTE PTR [rax]
  40af42:	cmp    al,0x5e
  40af44:	je     40af23 <memcpy@plt+0x8473>
  40af46:	mov    DWORD PTR [rbp-0xb4],0xa
  40af50:	jmp    40afd8 <memcpy@plt+0x8528>
  40af55:	mov    rax,QWORD PTR [rbp-0xb0]
  40af5c:	movzx  eax,BYTE PTR [rax]
  40af5f:	cmp    al,0x40
  40af61:	je     40aff3 <memcpy@plt+0x8543>
  40af67:	mov    rax,QWORD PTR [rbp-0xb0]
  40af6e:	movzx  eax,BYTE PTR [rax]
  40af71:	cmp    al,0xd
  40af73:	je     40aff3 <memcpy@plt+0x8543>
  40af75:	mov    rax,QWORD PTR [rbp-0xb0]
  40af7c:	movzx  eax,BYTE PTR [rax]
  40af7f:	cmp    al,0xa
  40af81:	je     40aff3 <memcpy@plt+0x8543>
  40af83:	mov    rax,QWORD PTR [rbp-0xb0]
  40af8a:	movzx  eax,BYTE PTR [rax]
  40af8d:	cmp    al,0x20
  40af8f:	je     40afd1 <memcpy@plt+0x8521>
  40af91:	mov    rax,QWORD PTR [rbp-0xb0]
  40af98:	movzx  eax,BYTE PTR [rax]
  40af9b:	cmp    al,0x3a
  40af9d:	je     40afd1 <memcpy@plt+0x8521>
  40af9f:	mov    rax,QWORD PTR [rbp-0xb0]
  40afa6:	movzx  eax,BYTE PTR [rax]
  40afa9:	cmp    al,0x5b
  40afab:	je     40afd1 <memcpy@plt+0x8521>
  40afad:	mov    rdx,QWORD PTR [rbp-0xa8]
  40afb4:	lea    rax,[rdx+0x1]
  40afb8:	mov    QWORD PTR [rbp-0xa8],rax
  40afbf:	mov    rax,QWORD PTR [rbp-0xb0]
  40afc6:	movzx  eax,BYTE PTR [rax]
  40afc9:	mov    BYTE PTR [rdx],al
  40afcb:	dec    DWORD PTR [rbp-0xb4]
  40afd1:	inc    QWORD PTR [rbp-0xb0]
  40afd8:	mov    rax,QWORD PTR [rbp-0xb0]
  40afdf:	movzx  eax,BYTE PTR [rax]
  40afe2:	test   al,al
  40afe4:	je     40aff3 <memcpy@plt+0x8543>
  40afe6:	cmp    DWORD PTR [rbp-0xb4],0x0
  40afed:	jne    40af55 <memcpy@plt+0x84a5>
  40aff3:	mov    rax,QWORD PTR [rbp-0xa8]
  40affa:	mov    BYTE PTR [rax],0x0
  40affd:	jmp    40b009 <memcpy@plt+0x8559>
  40afff:	mov    DWORD PTR [rbp-0xb8],0x3
  40b009:	cmp    QWORD PTR [rbp-0xb0],0x0
  40b011:	jne    40b02c <memcpy@plt+0x857c>
  40b013:	mov    edx,DWORD PTR [rbp-0xb8]
  40b019:	mov    rax,QWORD PTR [rbp-0xa0]
  40b020:	mov    esi,edx
  40b022:	mov    rdi,rax
  40b025:	call   40b051 <memcpy@plt+0x85a1>
  40b02a:	jmp    40b03b <memcpy@plt+0x858b>
  40b02c:	mov    rax,QWORD PTR [rbp-0xa0]
  40b033:	mov    rdi,rax
  40b036:	call   40b151 <memcpy@plt+0x86a1>
  40b03b:	mov    rax,QWORD PTR [rbp-0x8]
  40b03f:	xor    rax,QWORD PTR fs:0x28
  40b048:	je     40b04f <memcpy@plt+0x859f>
  40b04a:	call   402950 <__stack_chk_fail@plt>
  40b04f:	leave  
  40b050:	ret    
  40b051:	endbr64 
  40b055:	push   rbp
  40b056:	mov    rbp,rsp
  40b059:	sub    rsp,0x20
  40b05d:	mov    QWORD PTR [rbp-0x18],rdi
  40b061:	mov    DWORD PTR [rbp-0x1c],esi
  40b064:	mov    rax,0x415ca0
  40b06b:	mov    edx,DWORD PTR [rax+0x18]
  40b06e:	mov    rax,QWORD PTR [rbp-0x18]
  40b072:	mov    esi,edx
  40b074:	mov    rdi,rax
  40b077:	call   40ac20 <memcpy@plt+0x8170>
  40b07c:	mov    QWORD PTR [rbp-0x8],rax
  40b080:	mov    rax,QWORD PTR [rbp-0x18]
  40b084:	add    rax,0x1b8
  40b08a:	mov    edx,0xb
  40b08f:	lea    rsi,[rip+0x4d8b]        # 40fe21 <memcpy@plt+0xd371>
  40b096:	mov    rdi,rax
  40b099:	call   402720 <rb_strlcpy@plt>
  40b09e:	mov    rax,QWORD PTR [rbp-0x8]
  40b0a2:	mov    rax,QWORD PTR [rax]
  40b0a5:	test   rax,rax
  40b0a8:	je     40b0b9 <memcpy@plt+0x8609>
  40b0aa:	mov    rax,QWORD PTR [rbp-0x8]
  40b0ae:	mov    rax,QWORD PTR [rax]
  40b0b1:	mov    rdi,rax
  40b0b4:	call   402850 <rb_close@plt>
  40b0b9:	mov    rax,QWORD PTR [rbp-0x8]
  40b0bd:	mov    rdi,rax
  40b0c0:	call   40ab93 <memcpy@plt+0x80e3>
  40b0c5:	mov    rax,0x415ca0
  40b0cc:	mov    ecx,DWORD PTR [rax+0x18]
  40b0cf:	mov    rax,QWORD PTR [rbp-0x18]
  40b0d3:	mov    edx,0x0
  40b0d8:	mov    esi,ecx
  40b0da:	mov    rdi,rax
  40b0dd:	call   40ac46 <memcpy@plt+0x8196>
  40b0e2:	mov    rax,0x415ca0
  40b0e9:	mov    ecx,DWORD PTR [rax+0x18]
  40b0ec:	mov    rax,QWORD PTR [rbp-0x18]
  40b0f0:	mov    edx,0x0
  40b0f5:	mov    esi,ecx
  40b0f7:	mov    rdi,rax
  40b0fa:	call   40acb3 <memcpy@plt+0x8203>
  40b0ff:	mov    eax,DWORD PTR [rbp-0x1c]
  40b102:	lea    rdx,[rax*8+0x0]
  40b10a:	lea    rax,[rip+0xaaef]        # 415c00 <memcpy@plt+0x13150>
  40b111:	mov    rdx,QWORD PTR [rdx+rax*1]
  40b115:	mov    rax,QWORD PTR [rbp-0x18]
  40b119:	mov    eax,DWORD PTR [rax]
  40b11b:	mov    rsi,rdx
  40b11e:	mov    edi,eax
  40b120:	mov    eax,0x0
  40b125:	call   403b1c <memcpy@plt+0x106c>
  40b12a:	mov    rax,0x415ca0
  40b131:	mov    edx,DWORD PTR [rax+0x18]
  40b134:	mov    rax,QWORD PTR [rbp-0x18]
  40b138:	mov    esi,edx
  40b13a:	mov    rdi,rax
  40b13d:	call   4048b0 <memcpy@plt+0x1e00>
  40b142:	mov    rax,QWORD PTR [rbp-0x18]
  40b146:	mov    rdi,rax
  40b149:	call   40abe0 <memcpy@plt+0x8130>
  40b14e:	nop
  40b14f:	leave  
  40b150:	ret    
  40b151:	endbr64 
  40b155:	push   rbp
  40b156:	mov    rbp,rsp
  40b159:	sub    rsp,0x20
  40b15d:	mov    QWORD PTR [rbp-0x18],rdi
  40b161:	mov    rax,0x415ca0
  40b168:	mov    edx,DWORD PTR [rax+0x18]
  40b16b:	mov    rax,QWORD PTR [rbp-0x18]
  40b16f:	mov    esi,edx
  40b171:	mov    rdi,rax
  40b174:	call   40ac20 <memcpy@plt+0x8170>
  40b179:	mov    QWORD PTR [rbp-0x8],rax
  40b17d:	mov    rax,QWORD PTR [rbp-0x8]
  40b181:	mov    rax,QWORD PTR [rax]
  40b184:	test   rax,rax
  40b187:	je     40b198 <memcpy@plt+0x86e8>
  40b189:	mov    rax,QWORD PTR [rbp-0x8]
  40b18d:	mov    rax,QWORD PTR [rax]
  40b190:	mov    rdi,rax
  40b193:	call   402850 <rb_close@plt>
  40b198:	mov    rax,QWORD PTR [rbp-0x8]
  40b19c:	mov    rdi,rax
  40b19f:	call   40ab93 <memcpy@plt+0x80e3>
  40b1a4:	mov    rax,0x415ca0
  40b1ab:	mov    ecx,DWORD PTR [rax+0x18]
  40b1ae:	mov    rax,QWORD PTR [rbp-0x18]
  40b1b2:	mov    edx,0x0
  40b1b7:	mov    esi,ecx
  40b1b9:	mov    rdi,rax
  40b1bc:	call   40ac46 <memcpy@plt+0x8196>
  40b1c1:	mov    rax,0x415ca0
  40b1c8:	mov    ecx,DWORD PTR [rax+0x18]
  40b1cb:	mov    rax,QWORD PTR [rbp-0x18]
  40b1cf:	mov    edx,0x0
  40b1d4:	mov    esi,ecx
  40b1d6:	mov    rdi,rax
  40b1d9:	call   40acb3 <memcpy@plt+0x8203>
  40b1de:	mov    rdx,QWORD PTR [rip+0xaa23]        # 415c08 <memcpy@plt+0x13158>
  40b1e5:	mov    rax,QWORD PTR [rbp-0x18]
  40b1e9:	mov    eax,DWORD PTR [rax]
  40b1eb:	mov    rsi,rdx
  40b1ee:	mov    edi,eax
  40b1f0:	mov    eax,0x0
  40b1f5:	call   403b1c <memcpy@plt+0x106c>
  40b1fa:	mov    rax,0x415ca0
  40b201:	mov    edx,DWORD PTR [rax+0x18]
  40b204:	mov    rax,QWORD PTR [rbp-0x18]
  40b208:	mov    esi,edx
  40b20a:	mov    rdi,rax
  40b20d:	call   4048b0 <memcpy@plt+0x1e00>
  40b212:	mov    rax,QWORD PTR [rbp-0x18]
  40b216:	mov    rdi,rax
  40b219:	call   40abe0 <memcpy@plt+0x8130>
  40b21e:	nop
  40b21f:	leave  
  40b220:	ret    
  40b221:	endbr64 
  40b225:	push   rbp
  40b226:	mov    rbp,rsp
  40b229:	sub    rsp,0x40
  40b22d:	mov    QWORD PTR [rbp-0x38],rdi
  40b231:	mov    DWORD PTR [rbp-0x30],0x0
  40b238:	mov    DWORD PTR [rbp-0x2c],0x0
  40b23f:	mov    rax,QWORD PTR [rbp-0x38]
  40b243:	mov    QWORD PTR [rbp-0x28],rax
  40b247:	mov    rax,QWORD PTR [rbp-0x28]
  40b24b:	mov    esi,0x3a
  40b250:	mov    rdi,rax
  40b253:	call   4028c0 <strchr@plt>
  40b258:	mov    QWORD PTR [rbp-0x20],rax
  40b25c:	cmp    QWORD PTR [rbp-0x20],0x0
  40b261:	jne    40b26d <memcpy@plt+0x87bd>
  40b263:	mov    eax,0x0
  40b268:	jmp    40b363 <memcpy@plt+0x88b3>
  40b26d:	mov    rax,QWORD PTR [rbp-0x20]
  40b271:	mov    BYTE PTR [rax],0x0
  40b274:	inc    QWORD PTR [rbp-0x20]
  40b278:	mov    rax,QWORD PTR [rbp-0x20]
  40b27c:	mov    esi,0x3a
  40b281:	mov    rdi,rax
  40b284:	call   4028c0 <strchr@plt>
  40b289:	mov    QWORD PTR [rbp-0x18],rax
  40b28d:	cmp    QWORD PTR [rbp-0x18],0x0
  40b292:	jne    40b29e <memcpy@plt+0x87ee>
  40b294:	mov    eax,0x0
  40b299:	jmp    40b363 <memcpy@plt+0x88b3>
  40b29e:	mov    rax,QWORD PTR [rbp-0x18]
  40b2a2:	mov    BYTE PTR [rax],0x0
  40b2a5:	inc    QWORD PTR [rbp-0x18]
  40b2a9:	mov    rax,QWORD PTR [rbp-0x28]
  40b2ad:	mov    esi,0x2c
  40b2b2:	mov    rdi,rax
  40b2b5:	call   4028c0 <strchr@plt>
  40b2ba:	mov    QWORD PTR [rbp-0x10],rax
  40b2be:	cmp    QWORD PTR [rbp-0x10],0x0
  40b2c3:	jne    40b2cf <memcpy@plt+0x881f>
  40b2c5:	mov    eax,0x0
  40b2ca:	jmp    40b363 <memcpy@plt+0x88b3>
  40b2cf:	mov    rax,QWORD PTR [rbp-0x10]
  40b2d3:	mov    BYTE PTR [rax],0x0
  40b2d6:	inc    QWORD PTR [rbp-0x10]
  40b2da:	mov    rax,QWORD PTR [rbp-0x28]
  40b2de:	mov    rdi,rax
  40b2e1:	call   402880 <atoi@plt>
  40b2e6:	mov    DWORD PTR [rbp-0x30],eax
  40b2e9:	cmp    DWORD PTR [rbp-0x30],0x0
  40b2ed:	jne    40b2f6 <memcpy@plt+0x8846>
  40b2ef:	mov    eax,0x0
  40b2f4:	jmp    40b363 <memcpy@plt+0x88b3>
  40b2f6:	mov    rax,QWORD PTR [rbp-0x10]
  40b2fa:	mov    rdi,rax
  40b2fd:	call   402880 <atoi@plt>
  40b302:	mov    DWORD PTR [rbp-0x2c],eax
  40b305:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b309:	jne    40b312 <memcpy@plt+0x8862>
  40b30b:	mov    eax,0x0
  40b310:	jmp    40b363 <memcpy@plt+0x88b3>
  40b312:	mov    rax,QWORD PTR [rbp-0x20]
  40b316:	lea    rsi,[rip+0x4b06]        # 40fe23 <memcpy@plt+0xd373>
  40b31d:	mov    rdi,rax
  40b320:	call   402820 <strstr@plt>
  40b325:	test   rax,rax
  40b328:	jne    40b331 <memcpy@plt+0x8881>
  40b32a:	mov    eax,0x0
  40b32f:	jmp    40b363 <memcpy@plt+0x88b3>
  40b331:	mov    rax,QWORD PTR [rbp-0x18]
  40b335:	mov    esi,0x3a
  40b33a:	mov    rdi,rax
  40b33d:	call   4028c0 <strchr@plt>
  40b342:	mov    QWORD PTR [rbp-0x8],rax
  40b346:	cmp    QWORD PTR [rbp-0x8],0x0
  40b34b:	jne    40b354 <memcpy@plt+0x88a4>
  40b34d:	mov    eax,0x0
  40b352:	jmp    40b363 <memcpy@plt+0x88b3>
  40b354:	mov    rax,QWORD PTR [rbp-0x8]
  40b358:	mov    BYTE PTR [rax],0x0
  40b35b:	inc    QWORD PTR [rbp-0x8]
  40b35f:	mov    rax,QWORD PTR [rbp-0x8]
  40b363:	leave  
  40b364:	ret    
  40b365:	endbr64 
  40b369:	push   rbp
  40b36a:	mov    rbp,rsp
  40b36d:	sub    rsp,0x30
  40b371:	mov    rax,QWORD PTR fs:0x28
  40b37a:	mov    QWORD PTR [rbp-0x8],rax
  40b37e:	xor    eax,eax
  40b380:	mov    rax,0x41a270
  40b387:	mov    rax,QWORD PTR [rax]
  40b38a:	lea    rdx,[rbp-0x20]
  40b38e:	mov    rsi,rdx
  40b391:	mov    rdi,rax
  40b394:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40b399:	jmp    40b3e2 <memcpy@plt+0x8932>
  40b39b:	mov    rax,0x415ca0
  40b3a2:	mov    edx,DWORD PTR [rax+0x18]
  40b3a5:	mov    rax,QWORD PTR [rbp-0x28]
  40b3a9:	mov    esi,edx
  40b3ab:	mov    rdi,rax
  40b3ae:	call   40ac20 <memcpy@plt+0x8170>
  40b3b3:	test   rax,rax
  40b3b6:	je     40b3c9 <memcpy@plt+0x8919>
  40b3b8:	mov    rax,QWORD PTR [rbp-0x28]
  40b3bc:	mov    esi,0x2
  40b3c1:	mov    rdi,rax
  40b3c4:	call   40b051 <memcpy@plt+0x85a1>
  40b3c9:	mov    rax,0x41a270
  40b3d0:	mov    rax,QWORD PTR [rax]
  40b3d3:	lea    rdx,[rbp-0x20]
  40b3d7:	mov    rsi,rdx
  40b3da:	mov    rdi,rax
  40b3dd:	call   402730 <rb_dictionary_foreach_next@plt>
  40b3e2:	mov    rax,0x41a270
  40b3e9:	mov    rax,QWORD PTR [rax]
  40b3ec:	lea    rdx,[rbp-0x20]
  40b3f0:	mov    rsi,rdx
  40b3f3:	mov    rdi,rax
  40b3f6:	call   402690 <rb_dictionary_foreach_cur@plt>
  40b3fb:	mov    QWORD PTR [rbp-0x28],rax
  40b3ff:	cmp    QWORD PTR [rbp-0x28],0x0
  40b404:	jne    40b39b <memcpy@plt+0x88eb>
  40b406:	nop
  40b407:	mov    rax,QWORD PTR [rbp-0x8]
  40b40b:	xor    rax,QWORD PTR fs:0x28
  40b414:	je     40b41b <memcpy@plt+0x896b>
  40b416:	call   402950 <__stack_chk_fail@plt>
  40b41b:	leave  
  40b41c:	ret    
  40b41d:	endbr64 
  40b421:	push   rbp
  40b422:	mov    rbp,rsp
  40b425:	push   rbx
  40b426:	sub    rsp,0x138
  40b42d:	mov    QWORD PTR [rbp-0x138],rdi
  40b434:	mov    rax,QWORD PTR fs:0x28
  40b43d:	mov    QWORD PTR [rbp-0x18],rax
  40b441:	xor    eax,eax
  40b443:	mov    edi,0x8
  40b448:	call   40ab57 <memcpy@plt+0x80a7>
  40b44d:	mov    QWORD PTR [rbp-0x128],rax
  40b454:	mov    rax,QWORD PTR [rbp-0x138]
  40b45b:	add    rax,0xf8
  40b461:	movzx  eax,WORD PTR [rax]
  40b464:	movzx  eax,ax
  40b467:	mov    DWORD PTR [rbp-0x12c],eax
  40b46d:	movzx  eax,BYTE PTR [rip+0xa788]        # 415bfc <memcpy@plt+0x1314c>
  40b474:	xor    eax,0x1
  40b477:	test   al,al
  40b479:	je     40b4ce <memcpy@plt+0x8a1e>
  40b47b:	mov    rax,QWORD PTR [rbp-0x128]
  40b482:	mov    rdi,rax
  40b485:	call   40ab93 <memcpy@plt+0x80e3>
  40b48a:	mov    rdx,QWORD PTR [rip+0xa78f]        # 415c20 <memcpy@plt+0x13170>
  40b491:	mov    rax,QWORD PTR [rbp-0x138]
  40b498:	mov    eax,DWORD PTR [rax]
  40b49a:	mov    rsi,rdx
  40b49d:	mov    edi,eax
  40b49f:	mov    eax,0x0
  40b4a4:	call   403b1c <memcpy@plt+0x106c>
  40b4a9:	mov    rax,0x415ca0
  40b4b0:	mov    edx,DWORD PTR [rax+0x18]
  40b4b3:	mov    rax,QWORD PTR [rbp-0x138]
  40b4ba:	mov    esi,edx
  40b4bc:	mov    rdi,rax
  40b4bf:	call   4048b0 <memcpy@plt+0x1e00>
  40b4c4:	mov    eax,0x1
  40b4c9:	jmp    40b7ff <memcpy@plt+0x8d4f>
  40b4ce:	mov    rax,QWORD PTR [rbp-0x138]
  40b4d5:	mov    rdi,rax
  40b4d8:	call   40abbe <memcpy@plt+0x810e>
  40b4dd:	mov    rdx,QWORD PTR [rip+0xa71c]        # 415c00 <memcpy@plt+0x13150>
  40b4e4:	mov    rax,QWORD PTR [rbp-0x138]
  40b4eb:	mov    eax,DWORD PTR [rax]
  40b4ed:	mov    rsi,rdx
  40b4f0:	mov    edi,eax
  40b4f2:	mov    eax,0x0
  40b4f7:	call   403b1c <memcpy@plt+0x106c>
  40b4fc:	mov    rax,0x415ca0
  40b503:	mov    ecx,DWORD PTR [rax+0x18]
  40b506:	mov    rdx,QWORD PTR [rbp-0x128]
  40b50d:	mov    rax,QWORD PTR [rbp-0x138]
  40b514:	mov    esi,ecx
  40b516:	mov    rdi,rax
  40b519:	call   40ac46 <memcpy@plt+0x8196>
  40b51e:	mov    eax,DWORD PTR [rip+0xa6d4]        # 415bf8 <memcpy@plt+0x13148>
  40b524:	movsxd rdx,eax
  40b527:	mov    rax,0x415ca0
  40b52e:	mov    ecx,DWORD PTR [rax+0x18]
  40b531:	mov    rax,QWORD PTR [rbp-0x138]
  40b538:	mov    esi,ecx
  40b53a:	mov    rdi,rax
  40b53d:	call   40ac75 <memcpy@plt+0x81c5>
  40b542:	mov    rax,QWORD PTR [rbp-0x138]
  40b549:	mov    edx,DWORD PTR [rax+0x4]
  40b54c:	mov    eax,DWORD PTR [rbp-0x12c]
  40b552:	lea    rcx,[rip+0x48d1]        # 40fe2a <memcpy@plt+0xd37a>
  40b559:	mov    esi,0x1
  40b55e:	mov    edi,eax
  40b560:	call   402660 <rb_socket@plt>
  40b565:	mov    rdx,rax
  40b568:	mov    rax,QWORD PTR [rbp-0x128]
  40b56f:	mov    QWORD PTR [rax],rdx
  40b572:	mov    rax,QWORD PTR [rbp-0x128]
  40b579:	mov    rax,QWORD PTR [rax]
  40b57c:	test   rax,rax
  40b57f:	jne    40b5c6 <memcpy@plt+0x8b16>
  40b581:	call   402910 <__errno_location@plt>
  40b586:	mov    eax,DWORD PTR [rax]
  40b588:	mov    edi,eax
  40b58a:	call   402810 <strerror@plt>
  40b58f:	mov    rdx,rax
  40b592:	lea    rsi,[rip+0x4897]        # 40fe30 <memcpy@plt+0xd380>
  40b599:	mov    edi,0x44
  40b59e:	mov    eax,0x0
  40b5a3:	call   403c26 <memcpy@plt+0x1176>
  40b5a8:	mov    rax,QWORD PTR [rbp-0x138]
  40b5af:	mov    esi,0x2
  40b5b4:	mov    rdi,rax
  40b5b7:	call   40b051 <memcpy@plt+0x85a1>
  40b5bc:	mov    eax,0x1
  40b5c1:	jmp    40b7ff <memcpy@plt+0x8d4f>
  40b5c6:	mov    rax,QWORD PTR [rbp-0x138]
  40b5cd:	mov    rdx,QWORD PTR [rax+0x40]
  40b5d1:	mov    rcx,QWORD PTR [rax+0x48]
  40b5d5:	mov    QWORD PTR [rbp-0x120],rdx
  40b5dc:	mov    QWORD PTR [rbp-0x118],rcx
  40b5e3:	mov    rdx,QWORD PTR [rax+0x50]
  40b5e7:	mov    rcx,QWORD PTR [rax+0x58]
  40b5eb:	mov    QWORD PTR [rbp-0x110],rdx
  40b5f2:	mov    QWORD PTR [rbp-0x108],rcx
  40b5f9:	mov    rdx,QWORD PTR [rax+0x60]
  40b5fd:	mov    rcx,QWORD PTR [rax+0x68]
  40b601:	mov    QWORD PTR [rbp-0x100],rdx
  40b608:	mov    QWORD PTR [rbp-0xf8],rcx
  40b60f:	mov    rdx,QWORD PTR [rax+0x70]
  40b613:	mov    rcx,QWORD PTR [rax+0x78]
  40b617:	mov    QWORD PTR [rbp-0xf0],rdx
  40b61e:	mov    QWORD PTR [rbp-0xe8],rcx
  40b625:	mov    rdx,QWORD PTR [rax+0x80]
  40b62c:	mov    rcx,QWORD PTR [rax+0x88]
  40b633:	mov    QWORD PTR [rbp-0xe0],rdx
  40b63a:	mov    QWORD PTR [rbp-0xd8],rcx
  40b641:	mov    rdx,QWORD PTR [rax+0x90]
  40b648:	mov    rcx,QWORD PTR [rax+0x98]
  40b64f:	mov    QWORD PTR [rbp-0xd0],rdx
  40b656:	mov    QWORD PTR [rbp-0xc8],rcx
  40b65d:	mov    rdx,QWORD PTR [rax+0xa0]
  40b664:	mov    rcx,QWORD PTR [rax+0xa8]
  40b66b:	mov    QWORD PTR [rbp-0xc0],rdx
  40b672:	mov    QWORD PTR [rbp-0xb8],rcx
  40b679:	mov    rdx,QWORD PTR [rax+0xb8]
  40b680:	mov    rax,QWORD PTR [rax+0xb0]
  40b687:	mov    QWORD PTR [rbp-0xb0],rax
  40b68e:	mov    QWORD PTR [rbp-0xa8],rdx
  40b695:	mov    rax,QWORD PTR [rbp-0x138]
  40b69c:	mov    rdx,QWORD PTR [rax+0xf8]
  40b6a3:	mov    rcx,QWORD PTR [rax+0x100]
  40b6aa:	mov    QWORD PTR [rbp-0xa0],rdx
  40b6b1:	mov    QWORD PTR [rbp-0x98],rcx
  40b6b8:	mov    rdx,QWORD PTR [rax+0x108]
  40b6bf:	mov    rcx,QWORD PTR [rax+0x110]
  40b6c6:	mov    QWORD PTR [rbp-0x90],rdx
  40b6cd:	mov    QWORD PTR [rbp-0x88],rcx
  40b6d4:	mov    rdx,QWORD PTR [rax+0x118]
  40b6db:	mov    rcx,QWORD PTR [rax+0x120]
  40b6e2:	mov    QWORD PTR [rbp-0x80],rdx
  40b6e6:	mov    QWORD PTR [rbp-0x78],rcx
  40b6ea:	mov    rdx,QWORD PTR [rax+0x128]
  40b6f1:	mov    rcx,QWORD PTR [rax+0x130]
  40b6f8:	mov    QWORD PTR [rbp-0x70],rdx
  40b6fc:	mov    QWORD PTR [rbp-0x68],rcx
  40b700:	mov    rdx,QWORD PTR [rax+0x138]
  40b707:	mov    rcx,QWORD PTR [rax+0x140]
  40b70e:	mov    QWORD PTR [rbp-0x60],rdx
  40b712:	mov    QWORD PTR [rbp-0x58],rcx
  40b716:	mov    rdx,QWORD PTR [rax+0x148]
  40b71d:	mov    rcx,QWORD PTR [rax+0x150]
  40b724:	mov    QWORD PTR [rbp-0x50],rdx
  40b728:	mov    QWORD PTR [rbp-0x48],rcx
  40b72c:	mov    rdx,QWORD PTR [rax+0x158]
  40b733:	mov    rcx,QWORD PTR [rax+0x160]
  40b73a:	mov    QWORD PTR [rbp-0x40],rdx
  40b73e:	mov    QWORD PTR [rbp-0x38],rcx
  40b742:	mov    rdx,QWORD PTR [rax+0x170]
  40b749:	mov    rax,QWORD PTR [rax+0x168]
  40b750:	mov    QWORD PTR [rbp-0x30],rax
  40b754:	mov    QWORD PTR [rbp-0x28],rdx
  40b758:	lea    rax,[rbp-0x120]
  40b75f:	movzx  eax,WORD PTR [rax]
  40b762:	cmp    ax,0x2
  40b766:	jne    40b777 <memcpy@plt+0x8cc7>
  40b768:	lea    rax,[rbp-0x120]
  40b76f:	mov    WORD PTR [rax+0x2],0x0
  40b775:	jmp    40b784 <memcpy@plt+0x8cd4>
  40b777:	lea    rax,[rbp-0x120]
  40b77e:	mov    WORD PTR [rax+0x2],0x0
  40b784:	lea    rax,[rbp-0xa0]
  40b78b:	movzx  eax,WORD PTR [rax]
  40b78e:	cmp    ax,0x2
  40b792:	jne    40b7ab <memcpy@plt+0x8cfb>
  40b794:	lea    rbx,[rbp-0xa0]
  40b79b:	mov    edi,0x71
  40b7a0:	call   402620 <htons@plt>
  40b7a5:	mov    WORD PTR [rbx+0x2],ax
  40b7a9:	jmp    40b7c0 <memcpy@plt+0x8d10>
  40b7ab:	lea    rbx,[rbp-0xa0]
  40b7b2:	mov    edi,0x71
  40b7b7:	call   402620 <htons@plt>
  40b7bc:	mov    WORD PTR [rbx+0x2],ax
  40b7c0:	mov    edi,DWORD PTR [rip+0xa432]        # 415bf8 <memcpy@plt+0x13148>
  40b7c6:	mov    rax,QWORD PTR [rbp-0x128]
  40b7cd:	mov    rax,QWORD PTR [rax]
  40b7d0:	mov    rcx,QWORD PTR [rbp-0x138]
  40b7d7:	lea    rdx,[rbp-0x120]
  40b7de:	lea    rsi,[rbp-0xa0]
  40b7e5:	mov    r9d,edi
  40b7e8:	mov    r8,rcx
  40b7eb:	lea    rcx,[rip+0xfffffffffffff4f0]        # 40ace2 <memcpy@plt+0x8232>
  40b7f2:	mov    rdi,rax
  40b7f5:	call   4025e0 <rb_connect_tcp@plt>
  40b7fa:	mov    eax,0x1
  40b7ff:	mov    rbx,QWORD PTR [rbp-0x18]
  40b803:	xor    rbx,QWORD PTR fs:0x28
  40b80c:	je     40b813 <memcpy@plt+0x8d63>
  40b80e:	call   402950 <__stack_chk_fail@plt>
  40b813:	add    rsp,0x138
  40b81a:	pop    rbx
  40b81b:	pop    rbp
  40b81c:	ret    
  40b81d:	endbr64 
  40b821:	push   rbp
  40b822:	mov    rbp,rsp
  40b825:	sub    rsp,0x20
  40b829:	mov    QWORD PTR [rbp-0x18],rdi
  40b82d:	mov    rax,0x415ca0
  40b834:	mov    edx,DWORD PTR [rax+0x18]
  40b837:	mov    rax,QWORD PTR [rbp-0x18]
  40b83b:	mov    esi,edx
  40b83d:	mov    rdi,rax
  40b840:	call   40ac20 <memcpy@plt+0x8170>
  40b845:	mov    QWORD PTR [rbp-0x8],rax
  40b849:	cmp    QWORD PTR [rbp-0x8],0x0
  40b84e:	je     40b861 <memcpy@plt+0x8db1>
  40b850:	mov    rax,QWORD PTR [rbp-0x18]
  40b854:	mov    esi,0x2
  40b859:	mov    rdi,rax
  40b85c:	call   40b051 <memcpy@plt+0x85a1>
  40b861:	nop
  40b862:	leave  
  40b863:	ret    
  40b864:	endbr64 
  40b868:	push   rbp
  40b869:	mov    rbp,rsp
  40b86c:	sub    rsp,0x30
  40b870:	mov    QWORD PTR [rbp-0x18],rdi
  40b874:	mov    DWORD PTR [rbp-0x1c],esi
  40b877:	mov    QWORD PTR [rbp-0x28],rdx
  40b87b:	mov    rax,QWORD PTR [rbp-0x28]
  40b87f:	mov    rax,QWORD PTR [rax]
  40b882:	mov    rdi,rax
  40b885:	call   402880 <atoi@plt>
  40b88a:	mov    DWORD PTR [rbp-0x4],eax
  40b88d:	cmp    DWORD PTR [rbp-0x4],0x0
  40b891:	jns    40b8b8 <memcpy@plt+0x8e08>
  40b893:	mov    eax,DWORD PTR [rbp-0x4]
  40b896:	mov    edx,eax
  40b898:	lea    rsi,[rip+0x45b9]        # 40fe58 <memcpy@plt+0xd3a8>
  40b89f:	mov    edi,0x43
  40b8a4:	mov    eax,0x0
  40b8a9:	call   403c26 <memcpy@plt+0x1176>
  40b8ae:	mov    edi,0x3
  40b8b3:	call   402630 <exit@plt>
  40b8b8:	mov    eax,DWORD PTR [rbp-0x4]
  40b8bb:	mov    DWORD PTR [rip+0xa337],eax        # 415bf8 <memcpy@plt+0x13148>
  40b8c1:	nop
  40b8c2:	leave  
  40b8c3:	ret    
  40b8c4:	endbr64 
  40b8c8:	push   rbp
  40b8c9:	mov    rbp,rsp
  40b8cc:	mov    QWORD PTR [rbp-0x8],rdi
  40b8d0:	mov    DWORD PTR [rbp-0xc],esi
  40b8d3:	mov    QWORD PTR [rbp-0x18],rdx
  40b8d7:	mov    rax,QWORD PTR [rbp-0x18]
  40b8db:	mov    rax,QWORD PTR [rax]
  40b8de:	movzx  eax,BYTE PTR [rax]
  40b8e1:	cmp    al,0x31
  40b8e3:	sete   al
  40b8e6:	mov    BYTE PTR [rip+0xa310],al        # 415bfc <memcpy@plt+0x1314c>
  40b8ec:	nop
  40b8ed:	pop    rbp
  40b8ee:	ret    
  40b8ef:	push   rbp
  40b8f0:	mov    rbp,rsp
  40b8f3:	sub    rsp,0x20
  40b8f7:	mov    QWORD PTR [rbp-0x18],rdi
  40b8fb:	mov    rax,QWORD PTR [rbp-0x18]
  40b8ff:	mov    rsi,rax
  40b902:	mov    edi,0x1
  40b907:	call   4029e0 <calloc@plt>
  40b90c:	mov    QWORD PTR [rbp-0x8],rax
  40b910:	cmp    QWORD PTR [rbp-0x8],0x0
  40b915:	sete   al
  40b918:	movzx  eax,al
  40b91b:	test   rax,rax
  40b91e:	je     40b925 <memcpy@plt+0x8e75>
  40b920:	call   402900 <rb_outofmemory@plt>
  40b925:	mov    rax,QWORD PTR [rbp-0x8]
  40b929:	leave  
  40b92a:	ret    
  40b92b:	push   rbp
  40b92c:	mov    rbp,rsp
  40b92f:	sub    rsp,0x10
  40b933:	mov    QWORD PTR [rbp-0x8],rdi
  40b937:	cmp    QWORD PTR [rbp-0x8],0x0
  40b93c:	setne  al
  40b93f:	movzx  eax,al
  40b942:	test   rax,rax
  40b945:	je     40b953 <memcpy@plt+0x8ea3>
  40b947:	mov    rax,QWORD PTR [rbp-0x8]
  40b94b:	mov    rdi,rax
  40b94e:	call   402750 <free@plt>
  40b953:	nop
  40b954:	leave  
  40b955:	ret    
  40b956:	push   rbp
  40b957:	mov    rbp,rsp
  40b95a:	mov    QWORD PTR [rbp-0x8],rdi
  40b95e:	mov    rax,QWORD PTR [rbp-0x8]
  40b962:	mov    eax,DWORD PTR [rax+0x1cc]
  40b968:	lea    edx,[rax+0x1]
  40b96b:	mov    rax,QWORD PTR [rbp-0x8]
  40b96f:	mov    DWORD PTR [rax+0x1cc],edx
  40b975:	nop
  40b976:	pop    rbp
  40b977:	ret    
  40b978:	push   rbp
  40b979:	mov    rbp,rsp
  40b97c:	sub    rsp,0x10
  40b980:	mov    QWORD PTR [rbp-0x8],rdi
  40b984:	mov    rax,QWORD PTR [rbp-0x8]
  40b988:	mov    eax,DWORD PTR [rax+0x1cc]
  40b98e:	lea    edx,[rax-0x1]
  40b991:	mov    rax,QWORD PTR [rbp-0x8]
  40b995:	mov    DWORD PTR [rax+0x1cc],edx
  40b99b:	mov    rax,QWORD PTR [rbp-0x8]
  40b99f:	mov    eax,DWORD PTR [rax+0x1cc]
  40b9a5:	test   eax,eax
  40b9a7:	jne    40b9b5 <memcpy@plt+0x8f05>
  40b9a9:	mov    rax,QWORD PTR [rbp-0x8]
  40b9ad:	mov    rdi,rax
  40b9b0:	call   4047b8 <memcpy@plt+0x1d08>
  40b9b5:	nop
  40b9b6:	leave  
  40b9b7:	ret    
  40b9b8:	push   rbp
  40b9b9:	mov    rbp,rsp
  40b9bc:	mov    QWORD PTR [rbp-0x8],rdi
  40b9c0:	mov    DWORD PTR [rbp-0xc],esi
  40b9c3:	mov    rax,QWORD PTR [rbp-0x8]
  40b9c7:	mov    rax,QWORD PTR [rax+0x1d0]
  40b9ce:	mov    edx,DWORD PTR [rbp-0xc]
  40b9d1:	shl    rdx,0x5
  40b9d5:	add    rax,rdx
  40b9d8:	mov    rax,QWORD PTR [rax+0x10]
  40b9dc:	pop    rbp
  40b9dd:	ret    
  40b9de:	push   rbp
  40b9df:	mov    rbp,rsp
  40b9e2:	mov    QWORD PTR [rbp-0x8],rdi
  40b9e6:	mov    DWORD PTR [rbp-0xc],esi
  40b9e9:	mov    QWORD PTR [rbp-0x18],rdx
  40b9ed:	mov    rax,QWORD PTR [rbp-0x8]
  40b9f1:	mov    rax,QWORD PTR [rax+0x1d0]
  40b9f8:	mov    edx,DWORD PTR [rbp-0xc]
  40b9fb:	shl    rdx,0x5
  40b9ff:	add    rdx,rax
  40ba02:	mov    rax,QWORD PTR [rbp-0x18]
  40ba06:	mov    QWORD PTR [rdx+0x10],rax
  40ba0a:	nop
  40ba0b:	pop    rbp
  40ba0c:	ret    
  40ba0d:	push   rbp
  40ba0e:	mov    rbp,rsp
  40ba11:	sub    rsp,0x20
  40ba15:	mov    QWORD PTR [rbp-0x8],rdi
  40ba19:	mov    DWORD PTR [rbp-0xc],esi
  40ba1c:	mov    QWORD PTR [rbp-0x18],rdx
  40ba20:	call   4027f0 <rb_current_time@plt>
  40ba25:	mov    rcx,rax
  40ba28:	mov    rax,QWORD PTR [rbp-0x8]
  40ba2c:	mov    rax,QWORD PTR [rax+0x1d0]
  40ba33:	mov    edx,DWORD PTR [rbp-0xc]
  40ba36:	shl    rdx,0x5
  40ba3a:	add    rax,rdx
  40ba3d:	mov    rdx,QWORD PTR [rbp-0x18]
  40ba41:	add    rdx,rcx
  40ba44:	mov    QWORD PTR [rax+0x8],rdx
  40ba48:	nop
  40ba49:	leave  
  40ba4a:	ret    
  40ba4b:	push   rbp
  40ba4c:	mov    rbp,rsp
  40ba4f:	mov    QWORD PTR [rbp-0x8],rdi
  40ba53:	mov    DWORD PTR [rbp-0xc],esi
  40ba56:	mov    QWORD PTR [rbp-0x18],rdx
  40ba5a:	mov    rax,QWORD PTR [rbp-0x8]
  40ba5e:	mov    rax,QWORD PTR [rax+0x1d0]
  40ba65:	mov    edx,DWORD PTR [rbp-0xc]
  40ba68:	shl    rdx,0x5
  40ba6c:	add    rdx,rax
  40ba6f:	mov    rax,QWORD PTR [rbp-0x18]
  40ba73:	mov    QWORD PTR [rdx+0x8],rax
  40ba77:	nop
  40ba78:	pop    rbp
  40ba79:	ret    
  40ba7a:	endbr64 
  40ba7e:	push   rbp
  40ba7f:	mov    rbp,rsp
  40ba82:	sub    rsp,0x30
  40ba86:	mov    QWORD PTR [rbp-0x18],rdi
  40ba8a:	mov    eax,esi
  40ba8c:	mov    DWORD PTR [rbp-0x20],edx
  40ba8f:	mov    QWORD PTR [rbp-0x28],rcx
  40ba93:	mov    BYTE PTR [rbp-0x1c],al
  40ba96:	mov    rax,QWORD PTR [rbp-0x28]
  40ba9a:	mov    QWORD PTR [rbp-0x8],rax
  40ba9e:	cmp    QWORD PTR [rbp-0x18],0x0
  40baa3:	je     40bab0 <memcpy@plt+0x9000>
  40baa5:	movzx  eax,BYTE PTR [rbp-0x1c]
  40baa9:	xor    eax,0x1
  40baac:	test   al,al
  40baae:	je     40bac3 <memcpy@plt+0x9013>
  40bab0:	mov    rax,QWORD PTR [rbp-0x8]
  40bab4:	mov    esi,0x1
  40bab9:	mov    rdi,rax
  40babc:	call   40bb16 <memcpy@plt+0x9066>
  40bac1:	jmp    40bb13 <memcpy@plt+0x9063>
  40bac3:	mov    rax,QWORD PTR [rbp-0x18]
  40bac7:	mov    rdi,rax
  40baca:	call   402760 <strlen@plt>
  40bacf:	cmp    rax,0x3f
  40bad3:	jbe    40bae8 <memcpy@plt+0x9038>
  40bad5:	mov    rax,QWORD PTR [rbp-0x8]
  40bad9:	mov    esi,0x2
  40bade:	mov    rdi,rax
  40bae1:	call   40bb16 <memcpy@plt+0x9066>
  40bae6:	jmp    40bb13 <memcpy@plt+0x9063>
  40bae8:	mov    rax,QWORD PTR [rbp-0x8]
  40baec:	lea    rcx,[rax+0x178]
  40baf3:	mov    rax,QWORD PTR [rbp-0x18]
  40baf7:	mov    edx,0x40
  40bafc:	mov    rsi,rax
  40baff:	mov    rdi,rcx
  40bb02:	call   402720 <rb_strlcpy@plt>
  40bb07:	mov    rax,QWORD PTR [rbp-0x8]
  40bb0b:	mov    rdi,rax
  40bb0e:	call   40bc0a <memcpy@plt+0x915a>
  40bb13:	nop
  40bb14:	leave  
  40bb15:	ret    
  40bb16:	endbr64 
  40bb1a:	push   rbp
  40bb1b:	mov    rbp,rsp
  40bb1e:	sub    rsp,0x20
  40bb22:	mov    QWORD PTR [rbp-0x18],rdi
  40bb26:	mov    DWORD PTR [rbp-0x1c],esi
  40bb29:	mov    rax,0x415d80
  40bb30:	mov    edx,DWORD PTR [rax+0x18]
  40bb33:	mov    rax,QWORD PTR [rbp-0x18]
  40bb37:	mov    esi,edx
  40bb39:	mov    rdi,rax
  40bb3c:	call   40b9b8 <memcpy@plt+0x8f08>
  40bb41:	mov    QWORD PTR [rbp-0x8],rax
  40bb45:	mov    rax,QWORD PTR [rbp-0x18]
  40bb49:	add    rax,0x178
  40bb4f:	mov    edx,0x40
  40bb54:	lea    rsi,[rip+0x43be]        # 40ff19 <memcpy@plt+0xd469>
  40bb5b:	mov    rdi,rax
  40bb5e:	call   402720 <rb_strlcpy@plt>
  40bb63:	mov    eax,DWORD PTR [rbp-0x1c]
  40bb66:	lea    rdx,[rax*8+0x0]
  40bb6e:	lea    rax,[rip+0xa1ab]        # 415d20 <memcpy@plt+0x13270>
  40bb75:	mov    rdx,QWORD PTR [rdx+rax*1]
  40bb79:	mov    rax,QWORD PTR [rbp-0x18]
  40bb7d:	mov    eax,DWORD PTR [rax]
  40bb7f:	mov    rsi,rdx
  40bb82:	mov    edi,eax
  40bb84:	mov    eax,0x0
  40bb89:	call   403b1c <memcpy@plt+0x106c>
  40bb8e:	mov    rax,QWORD PTR [rbp-0x8]
  40bb92:	mov    rax,QWORD PTR [rax]
  40bb95:	mov    rdi,rax
  40bb98:	call   4033a6 <memcpy@plt+0x8f6>
  40bb9d:	mov    rax,QWORD PTR [rbp-0x8]
  40bba1:	mov    rdi,rax
  40bba4:	call   40b92b <memcpy@plt+0x8e7b>
  40bba9:	mov    rax,0x415d80
  40bbb0:	mov    ecx,DWORD PTR [rax+0x18]
  40bbb3:	mov    rax,QWORD PTR [rbp-0x18]
  40bbb7:	mov    edx,0x0
  40bbbc:	mov    esi,ecx
  40bbbe:	mov    rdi,rax
  40bbc1:	call   40b9de <memcpy@plt+0x8f2e>
  40bbc6:	mov    rax,0x415d80
  40bbcd:	mov    ecx,DWORD PTR [rax+0x18]
  40bbd0:	mov    rax,QWORD PTR [rbp-0x18]
  40bbd4:	mov    edx,0x0
  40bbd9:	mov    esi,ecx
  40bbdb:	mov    rdi,rax
  40bbde:	call   40ba4b <memcpy@plt+0x8f9b>
  40bbe3:	mov    rax,0x415d80
  40bbea:	mov    edx,DWORD PTR [rax+0x18]
  40bbed:	mov    rax,QWORD PTR [rbp-0x18]
  40bbf1:	mov    esi,edx
  40bbf3:	mov    rdi,rax
  40bbf6:	call   4048b0 <memcpy@plt+0x1e00>
  40bbfb:	mov    rax,QWORD PTR [rbp-0x18]
  40bbff:	mov    rdi,rax
  40bc02:	call   40b978 <memcpy@plt+0x8ec8>
  40bc07:	nop
  40bc08:	leave  
  40bc09:	ret    
  40bc0a:	endbr64 
  40bc0e:	push   rbp
  40bc0f:	mov    rbp,rsp
  40bc12:	sub    rsp,0x20
  40bc16:	mov    QWORD PTR [rbp-0x18],rdi
  40bc1a:	mov    rax,0x415d80
  40bc21:	mov    edx,DWORD PTR [rax+0x18]
  40bc24:	mov    rax,QWORD PTR [rbp-0x18]
  40bc28:	mov    esi,edx
  40bc2a:	mov    rdi,rax
  40bc2d:	call   40b9b8 <memcpy@plt+0x8f08>
  40bc32:	mov    QWORD PTR [rbp-0x8],rax
  40bc36:	mov    rax,QWORD PTR [rbp-0x18]
  40bc3a:	lea    rdx,[rax+0x178]
  40bc41:	mov    rax,QWORD PTR [rbp-0x18]
  40bc45:	mov    eax,DWORD PTR [rax]
  40bc47:	lea    rsi,[rip+0x42cd]        # 40ff1b <memcpy@plt+0xd46b>
  40bc4e:	mov    edi,eax
  40bc50:	mov    eax,0x0
  40bc55:	call   403b1c <memcpy@plt+0x106c>
  40bc5a:	mov    rax,QWORD PTR [rbp-0x8]
  40bc5e:	mov    rax,QWORD PTR [rax]
  40bc61:	mov    rdi,rax
  40bc64:	call   4033a6 <memcpy@plt+0x8f6>
  40bc69:	mov    rax,QWORD PTR [rbp-0x8]
  40bc6d:	mov    rdi,rax
  40bc70:	call   40b92b <memcpy@plt+0x8e7b>
  40bc75:	mov    rax,0x415d80
  40bc7c:	mov    ecx,DWORD PTR [rax+0x18]
  40bc7f:	mov    rax,QWORD PTR [rbp-0x18]
  40bc83:	mov    edx,0x0
  40bc88:	mov    esi,ecx
  40bc8a:	mov    rdi,rax
  40bc8d:	call   40b9de <memcpy@plt+0x8f2e>
  40bc92:	mov    rax,0x415d80
  40bc99:	mov    ecx,DWORD PTR [rax+0x18]
  40bc9c:	mov    rax,QWORD PTR [rbp-0x18]
  40bca0:	mov    edx,0x0
  40bca5:	mov    esi,ecx
  40bca7:	mov    rdi,rax
  40bcaa:	call   40ba4b <memcpy@plt+0x8f9b>
  40bcaf:	mov    rax,0x415d80
  40bcb6:	mov    edx,DWORD PTR [rax+0x18]
  40bcb9:	mov    rax,QWORD PTR [rbp-0x18]
  40bcbd:	mov    esi,edx
  40bcbf:	mov    rdi,rax
  40bcc2:	call   4048b0 <memcpy@plt+0x1e00>
  40bcc7:	mov    rax,QWORD PTR [rbp-0x18]
  40bccb:	mov    rdi,rax
  40bcce:	call   40b978 <memcpy@plt+0x8ec8>
  40bcd3:	nop
  40bcd4:	leave  
  40bcd5:	ret    
  40bcd6:	endbr64 
  40bcda:	push   rbp
  40bcdb:	mov    rbp,rsp
  40bcde:	sub    rsp,0x30
  40bce2:	mov    rax,QWORD PTR fs:0x28
  40bceb:	mov    QWORD PTR [rbp-0x8],rax
  40bcef:	xor    eax,eax
  40bcf1:	mov    rax,0x41a270
  40bcf8:	mov    rax,QWORD PTR [rax]
  40bcfb:	lea    rdx,[rbp-0x20]
  40bcff:	mov    rsi,rdx
  40bd02:	mov    rdi,rax
  40bd05:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40bd0a:	jmp    40bd53 <memcpy@plt+0x92a3>
  40bd0c:	mov    rax,0x415d80
  40bd13:	mov    edx,DWORD PTR [rax+0x18]
  40bd16:	mov    rax,QWORD PTR [rbp-0x28]
  40bd1a:	mov    esi,edx
  40bd1c:	mov    rdi,rax
  40bd1f:	call   40b9b8 <memcpy@plt+0x8f08>
  40bd24:	test   rax,rax
  40bd27:	je     40bd3a <memcpy@plt+0x928a>
  40bd29:	mov    rax,QWORD PTR [rbp-0x28]
  40bd2d:	mov    esi,0x1
  40bd32:	mov    rdi,rax
  40bd35:	call   40bb16 <memcpy@plt+0x9066>
  40bd3a:	mov    rax,0x41a270
  40bd41:	mov    rax,QWORD PTR [rax]
  40bd44:	lea    rdx,[rbp-0x20]
  40bd48:	mov    rsi,rdx
  40bd4b:	mov    rdi,rax
  40bd4e:	call   402730 <rb_dictionary_foreach_next@plt>
  40bd53:	mov    rax,0x41a270
  40bd5a:	mov    rax,QWORD PTR [rax]
  40bd5d:	lea    rdx,[rbp-0x20]
  40bd61:	mov    rsi,rdx
  40bd64:	mov    rdi,rax
  40bd67:	call   402690 <rb_dictionary_foreach_cur@plt>
  40bd6c:	mov    QWORD PTR [rbp-0x28],rax
  40bd70:	cmp    QWORD PTR [rbp-0x28],0x0
  40bd75:	jne    40bd0c <memcpy@plt+0x925c>
  40bd77:	nop
  40bd78:	mov    rax,QWORD PTR [rbp-0x8]
  40bd7c:	xor    rax,QWORD PTR fs:0x28
  40bd85:	je     40bd8c <memcpy@plt+0x92dc>
  40bd87:	call   402950 <__stack_chk_fail@plt>
  40bd8c:	leave  
  40bd8d:	ret    
  40bd8e:	endbr64 
  40bd92:	push   rbp
  40bd93:	mov    rbp,rsp
  40bd96:	sub    rsp,0x20
  40bd9a:	mov    QWORD PTR [rbp-0x18],rdi
  40bd9e:	mov    edi,0x8
  40bda3:	call   40b8ef <memcpy@plt+0x8e3f>
  40bda8:	mov    QWORD PTR [rbp-0x8],rax
  40bdac:	mov    rax,QWORD PTR [rbp-0x18]
  40bdb0:	mov    rdi,rax
  40bdb3:	call   40b956 <memcpy@plt+0x8ea6>
  40bdb8:	mov    rax,0x415d80
  40bdbf:	mov    ecx,DWORD PTR [rax+0x18]
  40bdc2:	mov    rdx,QWORD PTR [rbp-0x8]
  40bdc6:	mov    rax,QWORD PTR [rbp-0x18]
  40bdca:	mov    esi,ecx
  40bdcc:	mov    rdi,rax
  40bdcf:	call   40b9de <memcpy@plt+0x8f2e>
  40bdd4:	mov    eax,DWORD PTR [rip+0x9f3e]        # 415d18 <memcpy@plt+0x13268>
  40bdda:	movsxd rdx,eax
  40bddd:	mov    rax,0x415d80
  40bde4:	mov    ecx,DWORD PTR [rax+0x18]
  40bde7:	mov    rax,QWORD PTR [rbp-0x18]
  40bdeb:	mov    esi,ecx
  40bded:	mov    rdi,rax
  40bdf0:	call   40ba0d <memcpy@plt+0x8f5d>
  40bdf5:	mov    rax,QWORD PTR [rbp-0x18]
  40bdf9:	lea    rcx,[rax+0xc0]
  40be00:	mov    rax,QWORD PTR [rbp-0x18]
  40be04:	mov    rdx,rax
  40be07:	lea    rsi,[rip+0xfffffffffffffc6c]        # 40ba7a <memcpy@plt+0x8fca>
  40be0e:	mov    rdi,rcx
  40be11:	call   40328d <memcpy@plt+0x7dd>
  40be16:	mov    rdx,rax
  40be19:	mov    rax,QWORD PTR [rbp-0x8]
  40be1d:	mov    QWORD PTR [rax],rdx
  40be20:	mov    rdx,QWORD PTR [rip+0x9ef9]        # 415d20 <memcpy@plt+0x13270>
  40be27:	mov    rax,QWORD PTR [rbp-0x18]
  40be2b:	mov    eax,DWORD PTR [rax]
  40be2d:	mov    rsi,rdx
  40be30:	mov    edi,eax
  40be32:	mov    eax,0x0
  40be37:	call   403b1c <memcpy@plt+0x106c>
  40be3c:	mov    eax,0x1
  40be41:	leave  
  40be42:	ret    
  40be43:	endbr64 
  40be47:	push   rbp
  40be48:	mov    rbp,rsp
  40be4b:	sub    rsp,0x20
  40be4f:	mov    QWORD PTR [rbp-0x18],rdi
  40be53:	mov    rax,0x415d80
  40be5a:	mov    edx,DWORD PTR [rax+0x18]
  40be5d:	mov    rax,QWORD PTR [rbp-0x18]
  40be61:	mov    esi,edx
  40be63:	mov    rdi,rax
  40be66:	call   40b9b8 <memcpy@plt+0x8f08>
  40be6b:	mov    QWORD PTR [rbp-0x8],rax
  40be6f:	cmp    QWORD PTR [rbp-0x8],0x0
  40be74:	je     40be87 <memcpy@plt+0x93d7>
  40be76:	mov    rax,QWORD PTR [rbp-0x18]
  40be7a:	mov    esi,0x1
  40be7f:	mov    rdi,rax
  40be82:	call   40bb16 <memcpy@plt+0x9066>
  40be87:	nop
  40be88:	leave  
  40be89:	ret    
  40be8a:	endbr64 
  40be8e:	push   rbp
  40be8f:	mov    rbp,rsp
  40be92:	sub    rsp,0x30
  40be96:	mov    QWORD PTR [rbp-0x18],rdi
  40be9a:	mov    DWORD PTR [rbp-0x1c],esi
  40be9d:	mov    QWORD PTR [rbp-0x28],rdx
  40bea1:	mov    rax,QWORD PTR [rbp-0x28]
  40bea5:	mov    rax,QWORD PTR [rax]
  40bea8:	mov    rdi,rax
  40beab:	call   402880 <atoi@plt>
  40beb0:	mov    DWORD PTR [rbp-0x4],eax
  40beb3:	cmp    DWORD PTR [rbp-0x4],0x0
  40beb7:	jns    40bede <memcpy@plt+0x942e>
  40beb9:	mov    eax,DWORD PTR [rbp-0x4]
  40bebc:	mov    edx,eax
  40bebe:	lea    rsi,[rip+0x4073]        # 40ff38 <memcpy@plt+0xd488>
  40bec5:	mov    edi,0x43
  40beca:	mov    eax,0x0
  40becf:	call   403c26 <memcpy@plt+0x1176>
  40bed4:	mov    edi,0x3
  40bed9:	call   402630 <exit@plt>
  40bede:	mov    eax,DWORD PTR [rbp-0x4]
  40bee1:	mov    DWORD PTR [rip+0x9e31],eax        # 415d18 <memcpy@plt+0x13268>
  40bee7:	nop
  40bee8:	leave  
  40bee9:	ret    
  40beea:	push   rbp
  40beeb:	mov    rbp,rsp
  40beee:	sub    rsp,0x20
  40bef2:	mov    QWORD PTR [rbp-0x8],rdi
  40bef6:	mov    QWORD PTR [rbp-0x10],rsi
  40befa:	mov    QWORD PTR [rbp-0x18],rdx
  40befe:	cmp    QWORD PTR [rbp-0x8],0x0
  40bf03:	jne    40bf24 <memcpy@plt+0x9474>
  40bf05:	lea    rcx,[rip+0x44a4]        # 4103b0 <memcpy@plt+0xd900>
  40bf0c:	mov    edx,0x8f
  40bf11:	lea    rsi,[rip+0x4058]        # 40ff70 <memcpy@plt+0xd4c0>
  40bf18:	lea    rdi,[rip+0x406d]        # 40ff8c <memcpy@plt+0xd4dc>
  40bf1f:	call   402640 <__assert_fail@plt>
  40bf24:	cmp    QWORD PTR [rbp-0x10],0x0
  40bf29:	jne    40bf4a <memcpy@plt+0x949a>
  40bf2b:	lea    rcx,[rip+0x447e]        # 4103b0 <memcpy@plt+0xd900>
  40bf32:	mov    edx,0x90
  40bf37:	lea    rsi,[rip+0x4032]        # 40ff70 <memcpy@plt+0xd4c0>
  40bf3e:	lea    rdi,[rip+0x4054]        # 40ff99 <memcpy@plt+0xd4e9>
  40bf45:	call   402640 <__assert_fail@plt>
  40bf4a:	cmp    QWORD PTR [rbp-0x18],0x0
  40bf4f:	jne    40bf70 <memcpy@plt+0x94c0>
  40bf51:	lea    rcx,[rip+0x4458]        # 4103b0 <memcpy@plt+0xd900>
  40bf58:	mov    edx,0x91
  40bf5d:	lea    rsi,[rip+0x400c]        # 40ff70 <memcpy@plt+0xd4c0>
  40bf64:	lea    rdi,[rip+0x4038]        # 40ffa3 <memcpy@plt+0xd4f3>
  40bf6b:	call   402640 <__assert_fail@plt>
  40bf70:	mov    rax,QWORD PTR [rbp-0x10]
  40bf74:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf78:	mov    QWORD PTR [rax],rdx
  40bf7b:	mov    rax,QWORD PTR [rbp-0x10]
  40bf7f:	mov    QWORD PTR [rax+0x8],0x0
  40bf87:	mov    rax,QWORD PTR [rbp-0x18]
  40bf8b:	mov    rdx,QWORD PTR [rax]
  40bf8e:	mov    rax,QWORD PTR [rbp-0x10]
  40bf92:	mov    QWORD PTR [rax+0x10],rdx
  40bf96:	mov    rax,QWORD PTR [rbp-0x18]
  40bf9a:	mov    rax,QWORD PTR [rax]
  40bf9d:	test   rax,rax
  40bfa0:	je     40bfb3 <memcpy@plt+0x9503>
  40bfa2:	mov    rax,QWORD PTR [rbp-0x18]
  40bfa6:	mov    rax,QWORD PTR [rax]
  40bfa9:	mov    rdx,QWORD PTR [rbp-0x10]
  40bfad:	mov    QWORD PTR [rax+0x8],rdx
  40bfb1:	jmp    40bfcc <memcpy@plt+0x951c>
  40bfb3:	mov    rax,QWORD PTR [rbp-0x18]
  40bfb7:	mov    rax,QWORD PTR [rax+0x8]
  40bfbb:	test   rax,rax
  40bfbe:	jne    40bfcc <memcpy@plt+0x951c>
  40bfc0:	mov    rax,QWORD PTR [rbp-0x18]
  40bfc4:	mov    rdx,QWORD PTR [rbp-0x10]
  40bfc8:	mov    QWORD PTR [rax+0x8],rdx
  40bfcc:	mov    rax,QWORD PTR [rbp-0x18]
  40bfd0:	mov    rdx,QWORD PTR [rbp-0x10]
  40bfd4:	mov    QWORD PTR [rax],rdx
  40bfd7:	mov    rax,QWORD PTR [rbp-0x18]
  40bfdb:	mov    rax,QWORD PTR [rax+0x10]
  40bfdf:	lea    rdx,[rax+0x1]
  40bfe3:	mov    rax,QWORD PTR [rbp-0x18]
  40bfe7:	mov    QWORD PTR [rax+0x10],rdx
  40bfeb:	nop
  40bfec:	leave  
  40bfed:	ret    
  40bfee:	push   rbp
  40bfef:	mov    rbp,rsp
  40bff2:	sub    rsp,0x10
  40bff6:	mov    QWORD PTR [rbp-0x8],rdi
  40bffa:	mov    QWORD PTR [rbp-0x10],rsi
  40bffe:	cmp    QWORD PTR [rbp-0x8],0x0
  40c003:	jne    40c024 <memcpy@plt+0x9574>
  40c005:	lea    rcx,[rip+0x4394]        # 4103a0 <memcpy@plt+0xd8f0>
  40c00c:	mov    edx,0xeb
  40c011:	lea    rsi,[rip+0x3f58]        # 40ff70 <memcpy@plt+0xd4c0>
  40c018:	lea    rdi,[rip+0x3f7a]        # 40ff99 <memcpy@plt+0xd4e9>
  40c01f:	call   402640 <__assert_fail@plt>
  40c024:	cmp    QWORD PTR [rbp-0x10],0x0
  40c029:	jne    40c04a <memcpy@plt+0x959a>
  40c02b:	lea    rcx,[rip+0x436e]        # 4103a0 <memcpy@plt+0xd8f0>
  40c032:	mov    edx,0xec
  40c037:	lea    rsi,[rip+0x3f32]        # 40ff70 <memcpy@plt+0xd4c0>
  40c03e:	lea    rdi,[rip+0x3f5e]        # 40ffa3 <memcpy@plt+0xd4f3>
  40c045:	call   402640 <__assert_fail@plt>
  40c04a:	mov    rax,QWORD PTR [rbp-0x8]
  40c04e:	mov    rax,QWORD PTR [rax+0x10]
  40c052:	test   rax,rax
  40c055:	je     40c06d <memcpy@plt+0x95bd>
  40c057:	mov    rax,QWORD PTR [rbp-0x8]
  40c05b:	mov    rax,QWORD PTR [rax+0x10]
  40c05f:	mov    rdx,QWORD PTR [rbp-0x8]
  40c063:	mov    rdx,QWORD PTR [rdx+0x8]
  40c067:	mov    QWORD PTR [rax+0x8],rdx
  40c06b:	jmp    40c07d <memcpy@plt+0x95cd>
  40c06d:	mov    rax,QWORD PTR [rbp-0x8]
  40c071:	mov    rdx,QWORD PTR [rax+0x8]
  40c075:	mov    rax,QWORD PTR [rbp-0x10]
  40c079:	mov    QWORD PTR [rax+0x8],rdx
  40c07d:	mov    rax,QWORD PTR [rbp-0x8]
  40c081:	mov    rax,QWORD PTR [rax+0x8]
  40c085:	test   rax,rax
  40c088:	je     40c0a0 <memcpy@plt+0x95f0>
  40c08a:	mov    rax,QWORD PTR [rbp-0x8]
  40c08e:	mov    rax,QWORD PTR [rax+0x8]
  40c092:	mov    rdx,QWORD PTR [rbp-0x8]
  40c096:	mov    rdx,QWORD PTR [rdx+0x10]
  40c09a:	mov    QWORD PTR [rax+0x10],rdx
  40c09e:	jmp    40c0af <memcpy@plt+0x95ff>
  40c0a0:	mov    rax,QWORD PTR [rbp-0x8]
  40c0a4:	mov    rdx,QWORD PTR [rax+0x10]
  40c0a8:	mov    rax,QWORD PTR [rbp-0x10]
  40c0ac:	mov    QWORD PTR [rax],rdx
  40c0af:	mov    rax,QWORD PTR [rbp-0x8]
  40c0b3:	mov    QWORD PTR [rax+0x8],0x0
  40c0bb:	mov    rax,QWORD PTR [rbp-0x8]
  40c0bf:	mov    rdx,QWORD PTR [rax+0x8]
  40c0c3:	mov    rax,QWORD PTR [rbp-0x8]
  40c0c7:	mov    QWORD PTR [rax+0x10],rdx
  40c0cb:	mov    rax,QWORD PTR [rbp-0x10]
  40c0cf:	mov    rax,QWORD PTR [rax+0x10]
  40c0d3:	lea    rdx,[rax-0x1]
  40c0d7:	mov    rax,QWORD PTR [rbp-0x10]
  40c0db:	mov    QWORD PTR [rax+0x10],rdx
  40c0df:	nop
  40c0e0:	leave  
  40c0e1:	ret    
  40c0e2:	push   rbp
  40c0e3:	mov    rbp,rsp
  40c0e6:	sub    rsp,0x20
  40c0ea:	mov    QWORD PTR [rbp-0x18],rdi
  40c0ee:	mov    rax,QWORD PTR [rbp-0x18]
  40c0f2:	mov    rsi,rax
  40c0f5:	mov    edi,0x1
  40c0fa:	call   4029e0 <calloc@plt>
  40c0ff:	mov    QWORD PTR [rbp-0x8],rax
  40c103:	cmp    QWORD PTR [rbp-0x8],0x0
  40c108:	sete   al
  40c10b:	movzx  eax,al
  40c10e:	test   rax,rax
  40c111:	je     40c118 <memcpy@plt+0x9668>
  40c113:	call   402900 <rb_outofmemory@plt>
  40c118:	mov    rax,QWORD PTR [rbp-0x8]
  40c11c:	leave  
  40c11d:	ret    
  40c11e:	push   rbp
  40c11f:	mov    rbp,rsp
  40c122:	sub    rsp,0x10
  40c126:	mov    QWORD PTR [rbp-0x8],rdi
  40c12a:	cmp    QWORD PTR [rbp-0x8],0x0
  40c12f:	setne  al
  40c132:	movzx  eax,al
  40c135:	test   rax,rax
  40c138:	je     40c146 <memcpy@plt+0x9696>
  40c13a:	mov    rax,QWORD PTR [rbp-0x8]
  40c13e:	mov    rdi,rax
  40c141:	call   402750 <free@plt>
  40c146:	nop
  40c147:	leave  
  40c148:	ret    
  40c149:	push   rbp
  40c14a:	mov    rbp,rsp
  40c14d:	mov    QWORD PTR [rbp-0x8],rdi
  40c151:	mov    rax,QWORD PTR [rbp-0x8]
  40c155:	mov    eax,DWORD PTR [rax+0x1cc]
  40c15b:	lea    edx,[rax+0x1]
  40c15e:	mov    rax,QWORD PTR [rbp-0x8]
  40c162:	mov    DWORD PTR [rax+0x1cc],edx
  40c168:	nop
  40c169:	pop    rbp
  40c16a:	ret    
  40c16b:	push   rbp
  40c16c:	mov    rbp,rsp
  40c16f:	sub    rsp,0x10
  40c173:	mov    QWORD PTR [rbp-0x8],rdi
  40c177:	mov    rax,QWORD PTR [rbp-0x8]
  40c17b:	mov    eax,DWORD PTR [rax+0x1cc]
  40c181:	lea    edx,[rax-0x1]
  40c184:	mov    rax,QWORD PTR [rbp-0x8]
  40c188:	mov    DWORD PTR [rax+0x1cc],edx
  40c18e:	mov    rax,QWORD PTR [rbp-0x8]
  40c192:	mov    eax,DWORD PTR [rax+0x1cc]
  40c198:	test   eax,eax
  40c19a:	jne    40c1a8 <memcpy@plt+0x96f8>
  40c19c:	mov    rax,QWORD PTR [rbp-0x8]
  40c1a0:	mov    rdi,rax
  40c1a3:	call   4047b8 <memcpy@plt+0x1d08>
  40c1a8:	nop
  40c1a9:	leave  
  40c1aa:	ret    
  40c1ab:	push   rbp
  40c1ac:	mov    rbp,rsp
  40c1af:	sub    rsp,0x20
  40c1b3:	mov    QWORD PTR [rbp-0x18],rdi
  40c1b7:	mov    rax,0x41a280
  40c1be:	mov    rax,QWORD PTR [rax]
  40c1c1:	mov    QWORD PTR [rbp-0x10],rax
  40c1c5:	jmp    40c1ff <memcpy@plt+0x974f>
  40c1c7:	mov    rax,QWORD PTR [rbp-0x10]
  40c1cb:	mov    rax,QWORD PTR [rax]
  40c1ce:	mov    QWORD PTR [rbp-0x8],rax
  40c1d2:	mov    rax,QWORD PTR [rbp-0x8]
  40c1d6:	mov    rax,QWORD PTR [rax+0x20]
  40c1da:	mov    rdx,QWORD PTR [rbp-0x18]
  40c1de:	mov    rsi,rdx
  40c1e1:	mov    rdi,rax
  40c1e4:	call   402670 <strcasecmp@plt>
  40c1e9:	test   eax,eax
  40c1eb:	jne    40c1f3 <memcpy@plt+0x9743>
  40c1ed:	mov    rax,QWORD PTR [rbp-0x8]
  40c1f1:	jmp    40c20b <memcpy@plt+0x975b>
  40c1f3:	mov    rax,QWORD PTR [rbp-0x10]
  40c1f7:	mov    rax,QWORD PTR [rax+0x10]
  40c1fb:	mov    QWORD PTR [rbp-0x10],rax
  40c1ff:	cmp    QWORD PTR [rbp-0x10],0x0
  40c204:	jne    40c1c7 <memcpy@plt+0x9717>
  40c206:	mov    eax,0x0
  40c20b:	leave  
  40c20c:	ret    
  40c20d:	push   rbp
  40c20e:	mov    rbp,rsp
  40c211:	sub    rsp,0x20
  40c215:	mov    QWORD PTR [rbp-0x18],rdi
  40c219:	mov    QWORD PTR [rbp-0x20],rsi
  40c21d:	mov    rax,QWORD PTR [rbp-0x18]
  40c221:	mov    rdi,rax
  40c224:	call   40c1ab <memcpy@plt+0x96fb>
  40c229:	mov    QWORD PTR [rbp-0x8],rax
  40c22d:	cmp    QWORD PTR [rbp-0x8],0x0
  40c232:	je     40c248 <memcpy@plt+0x9798>
  40c234:	mov    rax,QWORD PTR [rbp-0x8]
  40c238:	mov    edx,DWORD PTR [rax+0x18]
  40c23b:	mov    rax,QWORD PTR [rbp-0x20]
  40c23f:	mov    DWORD PTR [rax],edx
  40c241:	mov    eax,0x1
  40c246:	jmp    40c24d <memcpy@plt+0x979d>
  40c248:	mov    eax,0x0
  40c24d:	leave  
  40c24e:	ret    
  40c24f:	push   rbp
  40c250:	mov    rbp,rsp
  40c253:	mov    QWORD PTR [rbp-0x8],rdi
  40c257:	mov    DWORD PTR [rbp-0xc],esi
  40c25a:	mov    rax,QWORD PTR [rbp-0x8]
  40c25e:	mov    rax,QWORD PTR [rax+0x1d0]
  40c265:	mov    edx,DWORD PTR [rbp-0xc]
  40c268:	shl    rdx,0x5
  40c26c:	add    rax,rdx
  40c26f:	mov    eax,DWORD PTR [rax+0x18]
  40c272:	pop    rbp
  40c273:	ret    
  40c274:	push   rbp
  40c275:	mov    rbp,rsp
  40c278:	sub    rsp,0x20
  40c27c:	mov    QWORD PTR [rbp-0x18],rdi
  40c280:	mov    QWORD PTR [rbp-0x20],rsi
  40c284:	mov    rax,QWORD PTR fs:0x28
  40c28d:	mov    QWORD PTR [rbp-0x8],rax
  40c291:	xor    eax,eax
  40c293:	lea    rdx,[rbp-0xc]
  40c297:	mov    rax,QWORD PTR [rbp-0x20]
  40c29b:	mov    rsi,rdx
  40c29e:	mov    rdi,rax
  40c2a1:	call   40c20d <memcpy@plt+0x975d>
  40c2a6:	test   al,al
  40c2a8:	je     40c2c3 <memcpy@plt+0x9813>
  40c2aa:	mov    edx,DWORD PTR [rbp-0xc]
  40c2ad:	mov    rax,QWORD PTR [rbp-0x18]
  40c2b1:	mov    esi,edx
  40c2b3:	mov    rdi,rax
  40c2b6:	call   40c24f <memcpy@plt+0x979f>
  40c2bb:	cmp    eax,0x2
  40c2be:	sete   al
  40c2c1:	jmp    40c2c8 <memcpy@plt+0x9818>
  40c2c3:	mov    eax,0x1
  40c2c8:	mov    rcx,QWORD PTR [rbp-0x8]
  40c2cc:	xor    rcx,QWORD PTR fs:0x28
  40c2d5:	je     40c2dc <memcpy@plt+0x982c>
  40c2d7:	call   402950 <__stack_chk_fail@plt>
  40c2dc:	leave  
  40c2dd:	ret    
  40c2de:	push   rbp
  40c2df:	mov    rbp,rsp
  40c2e2:	mov    QWORD PTR [rbp-0x8],rdi
  40c2e6:	mov    DWORD PTR [rbp-0xc],esi
  40c2e9:	mov    rax,QWORD PTR [rbp-0x8]
  40c2ed:	mov    rax,QWORD PTR [rax+0x1d0]
  40c2f4:	mov    edx,DWORD PTR [rbp-0xc]
  40c2f7:	shl    rdx,0x5
  40c2fb:	add    rax,rdx
  40c2fe:	mov    rax,QWORD PTR [rax+0x10]
  40c302:	pop    rbp
  40c303:	ret    
  40c304:	push   rbp
  40c305:	mov    rbp,rsp
  40c308:	mov    QWORD PTR [rbp-0x8],rdi
  40c30c:	mov    DWORD PTR [rbp-0xc],esi
  40c30f:	mov    QWORD PTR [rbp-0x18],rdx
  40c313:	mov    rax,QWORD PTR [rbp-0x8]
  40c317:	mov    rax,QWORD PTR [rax+0x1d0]
  40c31e:	mov    edx,DWORD PTR [rbp-0xc]
  40c321:	shl    rdx,0x5
  40c325:	add    rdx,rax
  40c328:	mov    rax,QWORD PTR [rbp-0x18]
  40c32c:	mov    QWORD PTR [rdx+0x10],rax
  40c330:	nop
  40c331:	pop    rbp
  40c332:	ret    
  40c333:	push   rbp
  40c334:	mov    rbp,rsp
  40c337:	sub    rsp,0x20
  40c33b:	mov    QWORD PTR [rbp-0x8],rdi
  40c33f:	mov    DWORD PTR [rbp-0xc],esi
  40c342:	mov    QWORD PTR [rbp-0x18],rdx
  40c346:	call   4027f0 <rb_current_time@plt>
  40c34b:	mov    rcx,rax
  40c34e:	mov    rax,QWORD PTR [rbp-0x8]
  40c352:	mov    rax,QWORD PTR [rax+0x1d0]
  40c359:	mov    edx,DWORD PTR [rbp-0xc]
  40c35c:	shl    rdx,0x5
  40c360:	add    rax,rdx
  40c363:	mov    rdx,QWORD PTR [rbp-0x18]
  40c367:	add    rdx,rcx
  40c36a:	mov    QWORD PTR [rax+0x8],rdx
  40c36e:	nop
  40c36f:	leave  
  40c370:	ret    
  40c371:	push   rbp
  40c372:	mov    rbp,rsp
  40c375:	mov    QWORD PTR [rbp-0x8],rdi
  40c379:	mov    DWORD PTR [rbp-0xc],esi
  40c37c:	mov    QWORD PTR [rbp-0x18],rdx
  40c380:	mov    rax,QWORD PTR [rbp-0x8]
  40c384:	mov    rax,QWORD PTR [rax+0x1d0]
  40c38b:	mov    edx,DWORD PTR [rbp-0xc]
  40c38e:	shl    rdx,0x5
  40c392:	add    rdx,rax
  40c395:	mov    rax,QWORD PTR [rbp-0x18]
  40c399:	mov    QWORD PTR [rdx+0x8],rax
  40c39d:	nop
  40c39e:	pop    rbp
  40c39f:	ret    
  40c3a0:	push   rbp
  40c3a1:	mov    rbp,rsp
  40c3a4:	sub    rsp,0x10
  40c3a8:	mov    QWORD PTR [rbp-0x8],rdi
  40c3ac:	mov    rax,QWORD PTR [rbp-0x8]
  40c3b0:	lea    rsi,[rip+0x3bf9]        # 40ffb0 <memcpy@plt+0xd500>
  40c3b7:	mov    rdi,rax
  40c3ba:	call   402670 <strcasecmp@plt>
  40c3bf:	test   eax,eax
  40c3c1:	jne    40c3ca <memcpy@plt+0x991a>
  40c3c3:	mov    eax,0x1
  40c3c8:	jmp    40c429 <memcpy@plt+0x9979>
  40c3ca:	mov    rax,QWORD PTR [rbp-0x8]
  40c3ce:	lea    rsi,[rip+0x3be2]        # 40ffb7 <memcpy@plt+0xd507>
  40c3d5:	mov    rdi,rax
  40c3d8:	call   402670 <strcasecmp@plt>
  40c3dd:	test   eax,eax
  40c3df:	jne    40c3e8 <memcpy@plt+0x9938>
  40c3e1:	mov    eax,0x2
  40c3e6:	jmp    40c429 <memcpy@plt+0x9979>
  40c3e8:	mov    rax,QWORD PTR [rbp-0x8]
  40c3ec:	lea    rsi,[rip+0x3bcb]        # 40ffbe <memcpy@plt+0xd50e>
  40c3f3:	mov    rdi,rax
  40c3f6:	call   402670 <strcasecmp@plt>
  40c3fb:	test   eax,eax
  40c3fd:	jne    40c406 <memcpy@plt+0x9956>
  40c3ff:	mov    eax,0x3
  40c404:	jmp    40c429 <memcpy@plt+0x9979>
  40c406:	mov    rax,QWORD PTR [rbp-0x8]
  40c40a:	lea    rsi,[rip+0x3bb9]        # 40ffca <memcpy@plt+0xd51a>
  40c411:	mov    rdi,rax
  40c414:	call   402670 <strcasecmp@plt>
  40c419:	test   eax,eax
  40c41b:	jne    40c424 <memcpy@plt+0x9974>
  40c41d:	mov    eax,0x4
  40c422:	jmp    40c429 <memcpy@plt+0x9979>
  40c424:	mov    eax,0x0
  40c429:	leave  
  40c42a:	ret    
  40c42b:	push   rbp
  40c42c:	mov    rbp,rsp
  40c42f:	mov    DWORD PTR [rbp-0x14],edi
  40c432:	mov    eax,esi
  40c434:	mov    WORD PTR [rbp-0x18],ax
  40c438:	mov    rax,QWORD PTR [rip+0xdc81]        # 41a0c0 <memcpy@plt+0x17610>
  40c43f:	mov    QWORD PTR [rbp-0x10],rax
  40c443:	jmp    40c47c <memcpy@plt+0x99cc>
  40c445:	mov    rax,QWORD PTR [rbp-0x10]
  40c449:	mov    rax,QWORD PTR [rax]
  40c44c:	mov    QWORD PTR [rbp-0x8],rax
  40c450:	mov    rax,QWORD PTR [rbp-0x8]
  40c454:	mov    eax,DWORD PTR [rax+0x10]
  40c457:	cmp    DWORD PTR [rbp-0x14],eax
  40c45a:	jne    40c470 <memcpy@plt+0x99c0>
  40c45c:	mov    rax,QWORD PTR [rbp-0x8]
  40c460:	movzx  eax,WORD PTR [rax+0x14]
  40c464:	cmp    WORD PTR [rbp-0x18],ax
  40c468:	jne    40c470 <memcpy@plt+0x99c0>
  40c46a:	mov    rax,QWORD PTR [rbp-0x8]
  40c46e:	jmp    40c488 <memcpy@plt+0x99d8>
  40c470:	mov    rax,QWORD PTR [rbp-0x10]
  40c474:	mov    rax,QWORD PTR [rax+0x10]
  40c478:	mov    QWORD PTR [rbp-0x10],rax
  40c47c:	cmp    QWORD PTR [rbp-0x10],0x0
  40c481:	jne    40c445 <memcpy@plt+0x9995>
  40c483:	mov    eax,0x0
  40c488:	pop    rbp
  40c489:	ret    
  40c48a:	endbr64 
  40c48e:	push   rbp
  40c48f:	mov    rbp,rsp
  40c492:	sub    rsp,0xe0
  40c499:	mov    QWORD PTR [rbp-0xd8],rdi
  40c4a0:	mov    QWORD PTR [rbp-0xe0],rsi
  40c4a7:	mov    rax,QWORD PTR fs:0x28
  40c4b0:	mov    QWORD PTR [rbp-0x8],rax
  40c4b4:	xor    eax,eax
  40c4b6:	mov    rax,QWORD PTR [rbp-0xe0]
  40c4bd:	mov    QWORD PTR [rbp-0xb8],rax
  40c4c4:	mov    rax,0x415ec0
  40c4cb:	mov    edx,DWORD PTR [rax+0x18]
  40c4ce:	mov    rax,QWORD PTR [rbp-0xb8]
  40c4d5:	mov    esi,edx
  40c4d7:	mov    rdi,rax
  40c4da:	call   40c2de <memcpy@plt+0x982e>
  40c4df:	mov    QWORD PTR [rbp-0xb0],rax
  40c4e6:	lea    rcx,[rbp-0x90]
  40c4ed:	mov    rax,QWORD PTR [rbp-0xd8]
  40c4f4:	mov    edx,0x80
  40c4f9:	mov    rsi,rcx
  40c4fc:	mov    rdi,rax
  40c4ff:	call   402780 <rb_read@plt>
  40c504:	mov    QWORD PTR [rbp-0xa8],rax
  40c50b:	cmp    QWORD PTR [rbp-0xa8],0x0
  40c513:	jns    40c551 <memcpy@plt+0x9aa1>
  40c515:	call   402910 <__errno_location@plt>
  40c51a:	mov    eax,DWORD PTR [rax]
  40c51c:	mov    edi,eax
  40c51e:	call   4025b0 <rb_ignore_errno@plt>
  40c523:	test   eax,eax
  40c525:	je     40c551 <memcpy@plt+0x9aa1>
  40c527:	mov    rdx,QWORD PTR [rbp-0xb8]
  40c52e:	mov    rax,QWORD PTR [rbp-0xd8]
  40c535:	mov    rcx,rdx
  40c538:	lea    rdx,[rip+0xffffffffffffff4b]        # 40c48a <memcpy@plt+0x99da>
  40c53f:	mov    esi,0x1
  40c544:	mov    rdi,rax
  40c547:	call   402600 <rb_setselect@plt>
  40c54c:	jmp    40c6d6 <memcpy@plt+0x9c26>
  40c551:	cmp    QWORD PTR [rbp-0xa8],0x0
  40c559:	jg     40c56f <memcpy@plt+0x9abf>
  40c55b:	mov    rax,QWORD PTR [rbp-0xd8]
  40c562:	mov    rdi,rax
  40c565:	call   402850 <rb_close@plt>
  40c56a:	jmp    40c6d6 <memcpy@plt+0x9c26>
  40c56f:	mov    rax,QWORD PTR [rip+0xdb4a]        # 41a0c0 <memcpy@plt+0x17610>
  40c576:	mov    QWORD PTR [rbp-0xd0],rax
  40c57d:	jmp    40c6b9 <memcpy@plt+0x9c09>
  40c582:	mov    rax,QWORD PTR [rbp-0xd0]
  40c589:	mov    rax,QWORD PTR [rax]
  40c58c:	mov    QWORD PTR [rbp-0xa0],rax
  40c593:	mov    rax,QWORD PTR [rbp-0xa0]
  40c59a:	mov    rdi,rax
  40c59d:	call   402760 <strlen@plt>
  40c5a2:	mov    rdx,rax
  40c5a5:	mov    rax,QWORD PTR [rbp-0xa0]
  40c5ac:	lea    rcx,[rbp-0x90]
  40c5b3:	mov    rsi,rcx
  40c5b6:	mov    rdi,rax
  40c5b9:	call   4026c0 <strncmp@plt>
  40c5be:	test   eax,eax
  40c5c0:	jne    40c6a7 <memcpy@plt+0x9bf7>
  40c5c6:	mov    rax,QWORD PTR [rbp-0xb0]
  40c5cd:	mov    rax,QWORD PTR [rax]
  40c5d0:	mov    QWORD PTR [rbp-0xc8],rax
  40c5d7:	cmp    QWORD PTR [rbp-0xc8],0x0
  40c5df:	je     40c5ee <memcpy@plt+0x9b3e>
  40c5e1:	mov    rax,QWORD PTR [rbp-0xc8]
  40c5e8:	mov    rax,QWORD PTR [rax+0x10]
  40c5ec:	jmp    40c5f3 <memcpy@plt+0x9b43>
  40c5ee:	mov    eax,0x0
  40c5f3:	mov    QWORD PTR [rbp-0xc0],rax
  40c5fa:	jmp    40c660 <memcpy@plt+0x9bb0>
  40c5fc:	mov    rax,QWORD PTR [rbp-0xc8]
  40c603:	mov    rax,QWORD PTR [rax]
  40c606:	mov    QWORD PTR [rbp-0x98],rax
  40c60d:	mov    rax,QWORD PTR [rbp-0x98]
  40c614:	mov    rax,QWORD PTR [rax+0x8]
  40c618:	mov    rdi,rax
  40c61b:	call   402850 <rb_close@plt>
  40c620:	mov    rax,QWORD PTR [rbp-0x98]
  40c627:	mov    rdi,rax
  40c62a:	call   40c11e <memcpy@plt+0x966e>
  40c62f:	mov    rax,QWORD PTR [rbp-0xc0]
  40c636:	mov    QWORD PTR [rbp-0xc8],rax
  40c63d:	cmp    QWORD PTR [rbp-0xc8],0x0
  40c645:	je     40c654 <memcpy@plt+0x9ba4>
  40c647:	mov    rax,QWORD PTR [rbp-0xc8]
  40c64e:	mov    rax,QWORD PTR [rax+0x10]
  40c652:	jmp    40c659 <memcpy@plt+0x9ba9>
  40c654:	mov    eax,0x0
  40c659:	mov    QWORD PTR [rbp-0xc0],rax
  40c660:	cmp    QWORD PTR [rbp-0xc8],0x0
  40c668:	jne    40c5fc <memcpy@plt+0x9b4c>
  40c66a:	mov    rax,QWORD PTR [rbp-0xb0]
  40c671:	mov    rdi,rax
  40c674:	call   40c11e <memcpy@plt+0x966e>
  40c679:	mov    rax,0x415ec0
  40c680:	mov    esi,DWORD PTR [rax+0x18]
  40c683:	lea    rdx,[rbp-0x90]
  40c68a:	mov    rax,QWORD PTR [rbp-0xb8]
  40c691:	lea    rcx,[rip+0x393f]        # 40ffd7 <memcpy@plt+0xd527>
  40c698:	mov    rdi,rax
  40c69b:	mov    eax,0x0
  40c6a0:	call   40496e <memcpy@plt+0x1ebe>
  40c6a5:	jmp    40c6c7 <memcpy@plt+0x9c17>
  40c6a7:	mov    rax,QWORD PTR [rbp-0xd0]
  40c6ae:	mov    rax,QWORD PTR [rax+0x10]
  40c6b2:	mov    QWORD PTR [rbp-0xd0],rax
  40c6b9:	cmp    QWORD PTR [rbp-0xd0],0x0
  40c6c1:	jne    40c582 <memcpy@plt+0x9ad2>
  40c6c7:	mov    rax,QWORD PTR [rbp-0xd8]
  40c6ce:	mov    rdi,rax
  40c6d1:	call   402850 <rb_close@plt>
  40c6d6:	mov    rax,QWORD PTR [rbp-0x8]
  40c6da:	xor    rax,QWORD PTR fs:0x28
  40c6e3:	je     40c6ea <memcpy@plt+0x9c3a>
  40c6e5:	call   402950 <__stack_chk_fail@plt>
  40c6ea:	leave  
  40c6eb:	ret    
  40c6ec:	endbr64 
  40c6f0:	push   rbp
  40c6f1:	mov    rbp,rsp
  40c6f4:	sub    rsp,0x110
  40c6fb:	mov    QWORD PTR [rbp-0xf8],rdi
  40c702:	mov    DWORD PTR [rbp-0xfc],esi
  40c708:	mov    QWORD PTR [rbp-0x108],rdx
  40c70f:	mov    DWORD PTR [rbp-0x100],ecx
  40c715:	mov    QWORD PTR [rbp-0x110],r8
  40c71c:	mov    rax,QWORD PTR fs:0x28
  40c725:	mov    QWORD PTR [rbp-0x8],rax
  40c729:	xor    eax,eax
  40c72b:	mov    QWORD PTR [rbp-0xe0],0x0
  40c736:	mov    rax,QWORD PTR [rbp-0x110]
  40c73d:	mov    QWORD PTR [rbp-0xd8],rax
  40c744:	mov    DWORD PTR [rbp-0xe4],0x80
  40c74e:	cmp    DWORD PTR [rbp-0xfc],0x0
  40c755:	jne    40c761 <memcpy@plt+0x9cb1>
  40c757:	cmp    QWORD PTR [rbp-0xd8],0x0
  40c75f:	jne    40c775 <memcpy@plt+0x9cc5>
  40c761:	mov    rax,QWORD PTR [rbp-0xf8]
  40c768:	mov    rdi,rax
  40c76b:	call   402850 <rb_close@plt>
  40c770:	jmp    40c9df <memcpy@plt+0x9f2f>
  40c775:	mov    rax,QWORD PTR [rbp-0xf8]
  40c77c:	mov    rdi,rax
  40c77f:	call   402610 <rb_get_fd@plt>
  40c784:	mov    ecx,eax
  40c786:	lea    rdx,[rbp-0xe4]
  40c78d:	lea    rax,[rbp-0x90]
  40c794:	mov    rsi,rax
  40c797:	mov    edi,ecx
  40c799:	call   402870 <getsockname@plt>
  40c79e:	test   eax,eax
  40c7a0:	je     40c7b6 <memcpy@plt+0x9d06>
  40c7a2:	mov    rax,QWORD PTR [rbp-0xf8]
  40c7a9:	mov    rdi,rax
  40c7ac:	call   402850 <rb_close@plt>
  40c7b1:	jmp    40c9df <memcpy@plt+0x9f2f>
  40c7b6:	mov    rax,0x41a270
  40c7bd:	mov    rax,QWORD PTR [rax]
  40c7c0:	lea    rdx,[rbp-0xa0]
  40c7c7:	mov    rsi,rdx
  40c7ca:	mov    rdi,rax
  40c7cd:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40c7d2:	jmp    40c99f <memcpy@plt+0x9eef>
  40c7d7:	mov    rax,QWORD PTR [rbp-0xe0]
  40c7de:	add    rax,0xf8
  40c7e4:	movzx  edx,WORD PTR [rax]
  40c7e7:	lea    rax,[rbp-0x90]
  40c7ee:	movzx  eax,WORD PTR [rax]
  40c7f1:	cmp    dx,ax
  40c7f4:	jne    40c97c <memcpy@plt+0x9ecc>
  40c7fa:	lea    rax,[rbp-0x90]
  40c801:	movzx  eax,WORD PTR [rax]
  40c804:	movzx  eax,ax
  40c807:	cmp    eax,0x2
  40c80a:	je     40c816 <memcpy@plt+0x9d66>
  40c80c:	cmp    eax,0xa
  40c80f:	je     40c87e <memcpy@plt+0x9dce>
  40c811:	jmp    40c95c <memcpy@plt+0x9eac>
  40c816:	lea    rax,[rbp-0x90]
  40c81d:	mov    QWORD PTR [rbp-0xd0],rax
  40c824:	mov    rax,QWORD PTR [rbp-0xe0]
  40c82b:	add    rax,0xf8
  40c831:	mov    QWORD PTR [rbp-0xc8],rax
  40c838:	mov    rax,QWORD PTR [rbp-0xd0]
  40c83f:	mov    edx,DWORD PTR [rax+0x4]
  40c842:	mov    rax,QWORD PTR [rbp-0xc8]
  40c849:	mov    eax,DWORD PTR [rax+0x4]
  40c84c:	cmp    edx,eax
  40c84e:	jne    40c97f <memcpy@plt+0x9ecf>
  40c854:	mov    rdx,QWORD PTR [rbp-0xe0]
  40c85b:	mov    rax,QWORD PTR [rbp-0xf8]
  40c862:	mov    rcx,rdx
  40c865:	lea    rdx,[rip+0xfffffffffffffc1e]        # 40c48a <memcpy@plt+0x99da>
  40c86c:	mov    esi,0x1
  40c871:	mov    rdi,rax
  40c874:	call   402600 <rb_setselect@plt>
  40c879:	jmp    40c9df <memcpy@plt+0x9f2f>
  40c87e:	lea    rax,[rbp-0x90]
  40c885:	mov    QWORD PTR [rbp-0xc0],rax
  40c88c:	mov    rax,QWORD PTR [rbp-0xe0]
  40c893:	add    rax,0xf8
  40c899:	mov    QWORD PTR [rbp-0xb8],rax
  40c8a0:	mov    rax,QWORD PTR [rbp-0xc0]
  40c8a7:	add    rax,0x8
  40c8ab:	mov    QWORD PTR [rbp-0xb0],rax
  40c8b2:	mov    rax,QWORD PTR [rbp-0xb8]
  40c8b9:	add    rax,0x8
  40c8bd:	mov    QWORD PTR [rbp-0xa8],rax
  40c8c4:	mov    rax,QWORD PTR [rbp-0xb0]
  40c8cb:	mov    edx,DWORD PTR [rax]
  40c8cd:	mov    rax,QWORD PTR [rbp-0xa8]
  40c8d4:	mov    eax,DWORD PTR [rax]
  40c8d6:	cmp    edx,eax
  40c8d8:	jne    40c929 <memcpy@plt+0x9e79>
  40c8da:	mov    rax,QWORD PTR [rbp-0xb0]
  40c8e1:	mov    edx,DWORD PTR [rax+0x4]
  40c8e4:	mov    rax,QWORD PTR [rbp-0xa8]
  40c8eb:	mov    eax,DWORD PTR [rax+0x4]
  40c8ee:	cmp    edx,eax
  40c8f0:	jne    40c929 <memcpy@plt+0x9e79>
  40c8f2:	mov    rax,QWORD PTR [rbp-0xb0]
  40c8f9:	mov    edx,DWORD PTR [rax+0x8]
  40c8fc:	mov    rax,QWORD PTR [rbp-0xa8]
  40c903:	mov    eax,DWORD PTR [rax+0x8]
  40c906:	cmp    edx,eax
  40c908:	jne    40c929 <memcpy@plt+0x9e79>
  40c90a:	mov    rax,QWORD PTR [rbp-0xb0]
  40c911:	mov    edx,DWORD PTR [rax+0xc]
  40c914:	mov    rax,QWORD PTR [rbp-0xa8]
  40c91b:	mov    eax,DWORD PTR [rax+0xc]
  40c91e:	cmp    edx,eax
  40c920:	jne    40c929 <memcpy@plt+0x9e79>
  40c922:	mov    eax,0x1
  40c927:	jmp    40c92e <memcpy@plt+0x9e7e>
  40c929:	mov    eax,0x0
  40c92e:	test   eax,eax
  40c930:	je     40c982 <memcpy@plt+0x9ed2>
  40c932:	mov    rdx,QWORD PTR [rbp-0xe0]
  40c939:	mov    rax,QWORD PTR [rbp-0xf8]
  40c940:	mov    rcx,rdx
  40c943:	lea    rdx,[rip+0xfffffffffffffb40]        # 40c48a <memcpy@plt+0x99da>
  40c94a:	mov    esi,0x1
  40c94f:	mov    rdi,rax
  40c952:	call   402600 <rb_setselect@plt>
  40c957:	jmp    40c9df <memcpy@plt+0x9f2f>
  40c95c:	lea    rsi,[rip+0x368d]        # 40fff0 <memcpy@plt+0xd540>
  40c963:	mov    edi,0x43
  40c968:	mov    eax,0x0
  40c96d:	call   403c26 <memcpy@plt+0x1176>
  40c972:	mov    edi,0x3
  40c977:	call   402630 <exit@plt>
  40c97c:	nop
  40c97d:	jmp    40c983 <memcpy@plt+0x9ed3>
  40c97f:	nop
  40c980:	jmp    40c983 <memcpy@plt+0x9ed3>
  40c982:	nop
  40c983:	mov    rax,0x41a270
  40c98a:	mov    rax,QWORD PTR [rax]
  40c98d:	lea    rdx,[rbp-0xa0]
  40c994:	mov    rsi,rdx
  40c997:	mov    rdi,rax
  40c99a:	call   402730 <rb_dictionary_foreach_next@plt>
  40c99f:	mov    rax,0x41a270
  40c9a6:	mov    rax,QWORD PTR [rax]
  40c9a9:	lea    rdx,[rbp-0xa0]
  40c9b0:	mov    rsi,rdx
  40c9b3:	mov    rdi,rax
  40c9b6:	call   402690 <rb_dictionary_foreach_cur@plt>
  40c9bb:	mov    QWORD PTR [rbp-0xe0],rax
  40c9c2:	cmp    QWORD PTR [rbp-0xe0],0x0
  40c9ca:	jne    40c7d7 <memcpy@plt+0x9d27>
  40c9d0:	mov    rax,QWORD PTR [rbp-0xf8]
  40c9d7:	mov    rdi,rax
  40c9da:	call   402850 <rb_close@plt>
  40c9df:	mov    rax,QWORD PTR [rbp-0x8]
  40c9e3:	xor    rax,QWORD PTR fs:0x28
  40c9ec:	je     40c9f3 <memcpy@plt+0x9f43>
  40c9ee:	call   402950 <__stack_chk_fail@plt>
  40c9f3:	leave  
  40c9f4:	ret    
  40c9f5:	endbr64 
  40c9f9:	push   rbp
  40c9fa:	mov    rbp,rsp
  40c9fd:	sub    rsp,0x40
  40ca01:	mov    QWORD PTR [rbp-0x28],rdi
  40ca05:	mov    DWORD PTR [rbp-0x2c],esi
  40ca08:	mov    QWORD PTR [rbp-0x38],rdx
  40ca0c:	mov    rax,QWORD PTR [rbp-0x38]
  40ca10:	mov    QWORD PTR [rbp-0x20],rax
  40ca14:	mov    rax,QWORD PTR [rbp-0x20]
  40ca18:	mov    rax,QWORD PTR [rax+0x10]
  40ca1c:	mov    QWORD PTR [rbp-0x18],rax
  40ca20:	mov    rax,QWORD PTR [rbp-0x20]
  40ca24:	mov    rax,QWORD PTR [rax]
  40ca27:	mov    QWORD PTR [rbp-0x10],rax
  40ca2b:	mov    rax,0x415ec0
  40ca32:	mov    edx,DWORD PTR [rax+0x18]
  40ca35:	mov    rax,QWORD PTR [rbp-0x10]
  40ca39:	mov    esi,edx
  40ca3b:	mov    rdi,rax
  40ca3e:	call   40c2de <memcpy@plt+0x982e>
  40ca43:	mov    QWORD PTR [rbp-0x8],rax
  40ca47:	cmp    DWORD PTR [rbp-0x2c],0x0
  40ca4b:	jne    40cab6 <memcpy@plt+0xa006>
  40ca4d:	movzx  eax,BYTE PTR [rip+0xd684]        # 41a0d8 <memcpy@plt+0x17628>
  40ca54:	xor    eax,0x1
  40ca57:	test   al,al
  40ca59:	jne    40cab6 <memcpy@plt+0xa006>
  40ca5b:	mov    rax,QWORD PTR [rbp-0x10]
  40ca5f:	add    rax,0xf8
  40ca65:	movzx  eax,WORD PTR [rax]
  40ca68:	movzx  eax,ax
  40ca6b:	cmp    eax,0x2
  40ca6e:	je     40ca77 <memcpy@plt+0x9fc7>
  40ca70:	cmp    eax,0xa
  40ca73:	je     40ca85 <memcpy@plt+0x9fd5>
  40ca75:	jmp    40cabd <memcpy@plt+0xa00d>
  40ca77:	mov    rax,QWORD PTR [rip+0xd71a]        # 41a198 <memcpy@plt+0x176e8>
  40ca7e:	test   rax,rax
  40ca81:	jne    40caa2 <memcpy@plt+0x9ff2>
  40ca83:	jmp    40cabd <memcpy@plt+0xa00d>
  40ca85:	mov    rax,QWORD PTR [rbp-0x18]
  40ca89:	movzx  eax,BYTE PTR [rax+0x17]
  40ca8d:	xor    eax,0x1
  40ca90:	test   al,al
  40ca92:	jne    40cab9 <memcpy@plt+0xa009>
  40ca94:	mov    rax,QWORD PTR [rip+0xd7bd]        # 41a258 <memcpy@plt+0x177a8>
  40ca9b:	test   rax,rax
  40ca9e:	je     40cabc <memcpy@plt+0xa00c>
  40caa0:	jmp    40caa3 <memcpy@plt+0x9ff3>
  40caa2:	nop
  40caa3:	mov    rax,QWORD PTR [rbp-0x18]
  40caa7:	mov    rax,QWORD PTR [rax+0x18]
  40caab:	mov    rdx,QWORD PTR [rbp-0x20]
  40caaf:	mov    rdi,rdx
  40cab2:	call   rax
  40cab4:	jmp    40cabd <memcpy@plt+0xa00d>
  40cab6:	nop
  40cab7:	jmp    40cabd <memcpy@plt+0xa00d>
  40cab9:	nop
  40caba:	jmp    40cabd <memcpy@plt+0xa00d>
  40cabc:	nop
  40cabd:	mov    rax,QWORD PTR [rbp-0x20]
  40cac1:	mov    rax,QWORD PTR [rax+0x8]
  40cac5:	mov    rdi,rax
  40cac8:	call   402850 <rb_close@plt>
  40cacd:	mov    rax,QWORD PTR [rbp-0x8]
  40cad1:	mov    rdx,QWORD PTR [rbp-0x20]
  40cad5:	add    rdx,0x20
  40cad9:	mov    rsi,rax
  40cadc:	mov    rdi,rdx
  40cadf:	call   40bfee <memcpy@plt+0x953e>
  40cae4:	mov    rax,QWORD PTR [rbp-0x20]
  40cae8:	mov    rdi,rax
  40caeb:	call   40c11e <memcpy@plt+0x966e>
  40caf0:	nop
  40caf1:	leave  
  40caf2:	ret    
  40caf3:	endbr64 
  40caf7:	push   rbp
  40caf8:	mov    rbp,rsp
  40cafb:	sub    rsp,0x30
  40caff:	mov    QWORD PTR [rbp-0x28],rdi
  40cb03:	mov    rax,QWORD PTR fs:0x28
  40cb0c:	mov    QWORD PTR [rbp-0x8],rax
  40cb10:	xor    eax,eax
  40cb12:	lea    rax,[rbp-0x11]
  40cb16:	mov    QWORD PTR [rbp-0x20],rax
  40cb1a:	mov    rax,QWORD PTR [rbp-0x20]
  40cb1e:	mov    edx,0x2
  40cb23:	lea    rsi,[rip+0x34f3]        # 41001d <memcpy@plt+0xd56d>
  40cb2a:	mov    rdi,rax
  40cb2d:	call   402ab0 <memcpy@plt>
  40cb32:	add    QWORD PTR [rbp-0x20],0x2
  40cb37:	mov    rax,QWORD PTR [rbp-0x28]
  40cb3b:	mov    rax,QWORD PTR [rax+0x18]
  40cb3f:	add    rax,0x38
  40cb43:	add    rax,0x2
  40cb47:	movzx  eax,WORD PTR [rax]
  40cb4a:	mov    rdx,QWORD PTR [rbp-0x20]
  40cb4e:	mov    WORD PTR [rdx],ax
  40cb51:	add    QWORD PTR [rbp-0x20],0x2
  40cb56:	mov    rax,QWORD PTR [rbp-0x28]
  40cb5a:	mov    rax,QWORD PTR [rax+0x18]
  40cb5e:	add    rax,0x38
  40cb62:	add    rax,0x4
  40cb66:	mov    edx,DWORD PTR [rax]
  40cb68:	mov    rax,QWORD PTR [rbp-0x20]
  40cb6c:	mov    DWORD PTR [rax],edx
  40cb6e:	add    QWORD PTR [rbp-0x20],0x4
  40cb73:	mov    rax,QWORD PTR [rbp-0x20]
  40cb77:	mov    BYTE PTR [rax],0x0
  40cb7a:	mov    rax,QWORD PTR [rbp-0x28]
  40cb7e:	mov    rax,QWORD PTR [rax+0x8]
  40cb82:	lea    rcx,[rbp-0x11]
  40cb86:	mov    edx,0x9
  40cb8b:	mov    rsi,rcx
  40cb8e:	mov    rdi,rax
  40cb91:	call   4026f0 <rb_write@plt>
  40cb96:	test   rax,rax
  40cb99:	js     40cbd2 <memcpy@plt+0xa122>
  40cb9b:	mov    rax,QWORD PTR [rbp-0x28]
  40cb9f:	mov    rax,QWORD PTR [rax+0x10]
  40cba3:	mov    rdi,rax
  40cba6:	call   402760 <strlen@plt>
  40cbab:	inc    eax
  40cbad:	mov    edx,eax
  40cbaf:	mov    rax,QWORD PTR [rbp-0x28]
  40cbb3:	mov    rax,QWORD PTR [rax+0x10]
  40cbb7:	mov    rcx,rax
  40cbba:	mov    rax,QWORD PTR [rbp-0x28]
  40cbbe:	mov    rax,QWORD PTR [rax+0x8]
  40cbc2:	mov    rsi,rcx
  40cbc5:	mov    rdi,rax
  40cbc8:	call   4026f0 <rb_write@plt>
  40cbcd:	test   rax,rax
  40cbd0:	jmp    40cbd3 <memcpy@plt+0xa123>
  40cbd2:	nop
  40cbd3:	mov    rax,QWORD PTR [rbp-0x8]
  40cbd7:	xor    rax,QWORD PTR fs:0x28
  40cbe0:	je     40cbe7 <memcpy@plt+0xa137>
  40cbe2:	call   402950 <__stack_chk_fail@plt>
  40cbe7:	leave  
  40cbe8:	ret    
  40cbe9:	endbr64 
  40cbed:	push   rbp
  40cbee:	mov    rbp,rsp
  40cbf1:	sub    rsp,0x50
  40cbf5:	mov    QWORD PTR [rbp-0x48],rdi
  40cbf9:	mov    rax,QWORD PTR fs:0x28
  40cc02:	mov    QWORD PTR [rbp-0x8],rax
  40cc06:	xor    eax,eax
  40cc08:	mov    rax,QWORD PTR [rbp-0x48]
  40cc0c:	mov    rax,QWORD PTR [rax]
  40cc0f:	mov    QWORD PTR [rbp-0x38],rax
  40cc13:	lea    rax,[rbp-0x30]
  40cc17:	mov    QWORD PTR [rbp-0x40],rax
  40cc1b:	mov    rax,QWORD PTR [rbp-0x40]
  40cc1f:	mov    edx,0x6
  40cc24:	lea    rsi,[rip+0x33f5]        # 410020 <memcpy@plt+0xd570>
  40cc2b:	mov    rdi,rax
  40cc2e:	call   402ab0 <memcpy@plt>
  40cc33:	add    QWORD PTR [rbp-0x40],0x6
  40cc38:	mov    rax,QWORD PTR [rbp-0x38]
  40cc3c:	add    rax,0xf8
  40cc42:	movzx  eax,WORD PTR [rax]
  40cc45:	movzx  eax,ax
  40cc48:	cmp    eax,0x2
  40cc4b:	je     40cc57 <memcpy@plt+0xa1a7>
  40cc4d:	cmp    eax,0xa
  40cc50:	je     40cca4 <memcpy@plt+0xa1f4>
  40cc52:	jmp    40cd58 <memcpy@plt+0xa2a8>
  40cc57:	mov    rax,QWORD PTR [rbp-0x40]
  40cc5b:	lea    rdx,[rax+0x1]
  40cc5f:	mov    QWORD PTR [rbp-0x40],rdx
  40cc63:	mov    BYTE PTR [rax],0x1
  40cc66:	mov    rax,QWORD PTR [rbp-0x48]
  40cc6a:	mov    rax,QWORD PTR [rax+0x18]
  40cc6e:	add    rax,0x38
  40cc72:	add    rax,0x4
  40cc76:	mov    edx,DWORD PTR [rax]
  40cc78:	mov    rax,QWORD PTR [rbp-0x40]
  40cc7c:	mov    DWORD PTR [rax],edx
  40cc7e:	add    QWORD PTR [rbp-0x40],0x4
  40cc83:	mov    rax,QWORD PTR [rbp-0x48]
  40cc87:	mov    rax,QWORD PTR [rax+0x18]
  40cc8b:	add    rax,0x38
  40cc8f:	add    rax,0x2
  40cc93:	movzx  eax,WORD PTR [rax]
  40cc96:	mov    rdx,QWORD PTR [rbp-0x40]
  40cc9a:	mov    WORD PTR [rdx],ax
  40cc9d:	add    QWORD PTR [rbp-0x40],0x2
  40cca2:	jmp    40ccfa <memcpy@plt+0xa24a>
  40cca4:	mov    rax,QWORD PTR [rbp-0x40]
  40cca8:	lea    rdx,[rax+0x1]
  40ccac:	mov    QWORD PTR [rbp-0x40],rdx
  40ccb0:	mov    BYTE PTR [rax],0x4
  40ccb3:	mov    rax,QWORD PTR [rbp-0x48]
  40ccb7:	mov    rax,QWORD PTR [rax+0x18]
  40ccbb:	add    rax,0x38
  40ccbf:	add    rax,0x8
  40ccc3:	mov    rdx,QWORD PTR [rax+0x8]
  40ccc7:	mov    rax,QWORD PTR [rax]
  40ccca:	mov    rcx,QWORD PTR [rbp-0x40]
  40ccce:	mov    QWORD PTR [rcx],rax
  40ccd1:	mov    QWORD PTR [rcx+0x8],rdx
  40ccd5:	add    QWORD PTR [rbp-0x40],0x10
  40ccda:	mov    rax,QWORD PTR [rbp-0x48]
  40ccde:	mov    rax,QWORD PTR [rax+0x18]
  40cce2:	add    rax,0x38
  40cce6:	add    rax,0x2
  40ccea:	movzx  eax,WORD PTR [rax]
  40cced:	mov    rdx,QWORD PTR [rbp-0x40]
  40ccf1:	mov    WORD PTR [rdx],ax
  40ccf4:	add    QWORD PTR [rbp-0x40],0x2
  40ccf9:	nop
  40ccfa:	lea    rax,[rbp-0x30]
  40ccfe:	sub    rax,QWORD PTR [rbp-0x40]
  40cd02:	mov    edx,eax
  40cd04:	mov    rax,QWORD PTR [rbp-0x48]
  40cd08:	mov    rax,QWORD PTR [rax+0x8]
  40cd0c:	lea    rcx,[rbp-0x30]
  40cd10:	mov    rsi,rcx
  40cd13:	mov    rdi,rax
  40cd16:	call   4026f0 <rb_write@plt>
  40cd1b:	test   rax,rax
  40cd1e:	jle    40cd57 <memcpy@plt+0xa2a7>
  40cd20:	mov    rax,QWORD PTR [rbp-0x48]
  40cd24:	mov    rax,QWORD PTR [rax+0x10]
  40cd28:	mov    rdi,rax
  40cd2b:	call   402760 <strlen@plt>
  40cd30:	inc    eax
  40cd32:	mov    edx,eax
  40cd34:	mov    rax,QWORD PTR [rbp-0x48]
  40cd38:	mov    rax,QWORD PTR [rax+0x10]
  40cd3c:	mov    rcx,rax
  40cd3f:	mov    rax,QWORD PTR [rbp-0x48]
  40cd43:	mov    rax,QWORD PTR [rax+0x8]
  40cd47:	mov    rsi,rcx
  40cd4a:	mov    rdi,rax
  40cd4d:	call   4026f0 <rb_write@plt>
  40cd52:	test   rax,rax
  40cd55:	jmp    40cd58 <memcpy@plt+0xa2a8>
  40cd57:	nop
  40cd58:	mov    rax,QWORD PTR [rbp-0x8]
  40cd5c:	xor    rax,QWORD PTR fs:0x28
  40cd65:	je     40cd6c <memcpy@plt+0xa2bc>
  40cd67:	call   402950 <__stack_chk_fail@plt>
  40cd6c:	leave  
  40cd6d:	ret    
  40cd6e:	endbr64 
  40cd72:	push   rbp
  40cd73:	mov    rbp,rsp
  40cd76:	sub    rsp,0xa0
  40cd7d:	mov    QWORD PTR [rbp-0x98],rdi
  40cd84:	mov    rax,QWORD PTR fs:0x28
  40cd8d:	mov    QWORD PTR [rbp-0x8],rax
  40cd91:	xor    eax,eax
  40cd93:	mov    rax,QWORD PTR [rbp-0x98]
  40cd9a:	mov    rax,QWORD PTR [rax+0x18]
  40cd9e:	movzx  eax,WORD PTR [rax+0x36]
  40cda2:	movzx  edx,ax
  40cda5:	mov    rax,QWORD PTR [rbp-0x98]
  40cdac:	mov    rax,QWORD PTR [rax+0x18]
  40cdb0:	mov    rcx,rax
  40cdb3:	lea    rax,[rbp-0x90]
  40cdba:	mov    r8d,edx
  40cdbd:	lea    rdx,[rip+0x3263]        # 410027 <memcpy@plt+0xd577>
  40cdc4:	mov    esi,0x80
  40cdc9:	mov    rdi,rax
  40cdcc:	mov    eax,0x0
  40cdd1:	call   4025d0 <snprintf@plt>
  40cdd6:	lea    rax,[rbp-0x90]
  40cddd:	mov    rdi,rax
  40cde0:	call   402760 <strlen@plt>
  40cde5:	mov    edx,eax
  40cde7:	mov    rax,QWORD PTR [rbp-0x98]
  40cdee:	mov    rax,QWORD PTR [rax+0x8]
  40cdf2:	lea    rcx,[rbp-0x90]
  40cdf9:	mov    rsi,rcx
  40cdfc:	mov    rdi,rax
  40cdff:	call   4026f0 <rb_write@plt>
  40ce04:	test   rax,rax
  40ce07:	jle    40ce6d <memcpy@plt+0xa3bd>
  40ce09:	mov    rax,QWORD PTR [rbp-0x98]
  40ce10:	mov    rax,QWORD PTR [rax+0x10]
  40ce14:	mov    rdi,rax
  40ce17:	call   402760 <strlen@plt>
  40ce1c:	inc    eax
  40ce1e:	mov    edx,eax
  40ce20:	mov    rax,QWORD PTR [rbp-0x98]
  40ce27:	mov    rax,QWORD PTR [rax+0x10]
  40ce2b:	mov    rcx,rax
  40ce2e:	mov    rax,QWORD PTR [rbp-0x98]
  40ce35:	mov    rax,QWORD PTR [rax+0x8]
  40ce39:	mov    rsi,rcx
  40ce3c:	mov    rdi,rax
  40ce3f:	call   4026f0 <rb_write@plt>
  40ce44:	test   rax,rax
  40ce47:	jle    40ce70 <memcpy@plt+0xa3c0>
  40ce49:	mov    rax,QWORD PTR [rbp-0x98]
  40ce50:	mov    rax,QWORD PTR [rax+0x8]
  40ce54:	mov    edx,0x2
  40ce59:	lea    rsi,[rip+0x31e3]        # 410043 <memcpy@plt+0xd593>
  40ce60:	mov    rdi,rax
  40ce63:	call   4026f0 <rb_write@plt>
  40ce68:	test   rax,rax
  40ce6b:	jmp    40ce71 <memcpy@plt+0xa3c1>
  40ce6d:	nop
  40ce6e:	jmp    40ce71 <memcpy@plt+0xa3c1>
  40ce70:	nop
  40ce71:	mov    rax,QWORD PTR [rbp-0x8]
  40ce75:	xor    rax,QWORD PTR fs:0x28
  40ce7e:	je     40ce85 <memcpy@plt+0xa3d5>
  40ce80:	call   402950 <__stack_chk_fail@plt>
  40ce85:	leave  
  40ce86:	ret    
  40ce87:	push   rbp
  40ce88:	mov    rbp,rsp
  40ce8b:	push   rbx
  40ce8c:	sub    rsp,0x148
  40ce93:	mov    QWORD PTR [rbp-0x148],rdi
  40ce9a:	mov    QWORD PTR [rbp-0x150],rsi
  40cea1:	mov    rax,QWORD PTR fs:0x28
  40ceaa:	mov    QWORD PTR [rbp-0x18],rax
  40ceae:	xor    eax,eax
  40ceb0:	mov    rax,0x415ec0
  40ceb7:	mov    edx,DWORD PTR [rax+0x18]
  40ceba:	mov    rax,QWORD PTR [rbp-0x148]
  40cec1:	mov    esi,edx
  40cec3:	mov    rdi,rax
  40cec6:	call   40c2de <memcpy@plt+0x982e>
  40cecb:	mov    QWORD PTR [rbp-0x130],rax
  40ced2:	mov    edi,0x38
  40ced7:	call   40c0e2 <memcpy@plt+0x9632>
  40cedc:	mov    QWORD PTR [rbp-0x128],rax
  40cee3:	mov    DWORD PTR [rbp-0x13c],0x1
  40ceed:	mov    rax,QWORD PTR [rbp-0x148]
  40cef4:	add    rax,0xf8
  40cefa:	movzx  eax,WORD PTR [rax]
  40cefd:	cmp    ax,0xa
  40cf01:	jne    40cf36 <memcpy@plt+0xa486>
  40cf03:	mov    rax,QWORD PTR [rbp-0x150]
  40cf0a:	mov    eax,DWORD PTR [rax+0x10]
  40cf0d:	cmp    eax,0x1
  40cf10:	jne    40cf26 <memcpy@plt+0xa476>
  40cf12:	mov    rax,QWORD PTR [rbp-0x128]
  40cf19:	mov    rdi,rax
  40cf1c:	call   40c11e <memcpy@plt+0x966e>
  40cf21:	jmp    40d323 <memcpy@plt+0xa873>
  40cf26:	lea    rax,[rip+0xd273]        # 41a1a0 <memcpy@plt+0x176f0>
  40cf2d:	mov    QWORD PTR [rbp-0x138],rax
  40cf34:	jmp    40cf44 <memcpy@plt+0xa494>
  40cf36:	lea    rax,[rip+0xd1a3]        # 41a0e0 <memcpy@plt+0x17630>
  40cf3d:	mov    QWORD PTR [rbp-0x138],rax
  40cf44:	mov    rax,QWORD PTR [rbp-0x138]
  40cf4b:	mov    rax,QWORD PTR [rax+0xb8]
  40cf52:	test   rax,rax
  40cf55:	jne    40cf6b <memcpy@plt+0xa4bb>
  40cf57:	mov    rax,QWORD PTR [rbp-0x128]
  40cf5e:	mov    rdi,rax
  40cf61:	call   40c11e <memcpy@plt+0x966e>
  40cf66:	jmp    40d323 <memcpy@plt+0xa873>
  40cf6b:	mov    rax,QWORD PTR [rbp-0x148]
  40cf72:	mov    rdx,QWORD PTR [rax+0xf8]
  40cf79:	mov    rcx,QWORD PTR [rax+0x100]
  40cf80:	mov    QWORD PTR [rbp-0x120],rdx
  40cf87:	mov    QWORD PTR [rbp-0x118],rcx
  40cf8e:	mov    rdx,QWORD PTR [rax+0x108]
  40cf95:	mov    rcx,QWORD PTR [rax+0x110]
  40cf9c:	mov    QWORD PTR [rbp-0x110],rdx
  40cfa3:	mov    QWORD PTR [rbp-0x108],rcx
  40cfaa:	mov    rdx,QWORD PTR [rax+0x118]
  40cfb1:	mov    rcx,QWORD PTR [rax+0x120]
  40cfb8:	mov    QWORD PTR [rbp-0x100],rdx
  40cfbf:	mov    QWORD PTR [rbp-0xf8],rcx
  40cfc6:	mov    rdx,QWORD PTR [rax+0x128]
  40cfcd:	mov    rcx,QWORD PTR [rax+0x130]
  40cfd4:	mov    QWORD PTR [rbp-0xf0],rdx
  40cfdb:	mov    QWORD PTR [rbp-0xe8],rcx
  40cfe2:	mov    rdx,QWORD PTR [rax+0x138]
  40cfe9:	mov    rcx,QWORD PTR [rax+0x140]
  40cff0:	mov    QWORD PTR [rbp-0xe0],rdx
  40cff7:	mov    QWORD PTR [rbp-0xd8],rcx
  40cffe:	mov    rdx,QWORD PTR [rax+0x148]
  40d005:	mov    rcx,QWORD PTR [rax+0x150]
  40d00c:	mov    QWORD PTR [rbp-0xd0],rdx
  40d013:	mov    QWORD PTR [rbp-0xc8],rcx
  40d01a:	mov    rdx,QWORD PTR [rax+0x158]
  40d021:	mov    rcx,QWORD PTR [rax+0x160]
  40d028:	mov    QWORD PTR [rbp-0xc0],rdx
  40d02f:	mov    QWORD PTR [rbp-0xb8],rcx
  40d036:	mov    rdx,QWORD PTR [rax+0x170]
  40d03d:	mov    rax,QWORD PTR [rax+0x168]
  40d044:	mov    QWORD PTR [rbp-0xb0],rax
  40d04b:	mov    QWORD PTR [rbp-0xa8],rdx
  40d052:	mov    rax,QWORD PTR [rbp-0x138]
  40d059:	mov    rdx,QWORD PTR [rax+0x38]
  40d05d:	mov    rcx,QWORD PTR [rax+0x40]
  40d061:	mov    QWORD PTR [rbp-0xa0],rdx
  40d068:	mov    QWORD PTR [rbp-0x98],rcx
  40d06f:	mov    rdx,QWORD PTR [rax+0x48]
  40d073:	mov    rcx,QWORD PTR [rax+0x50]
  40d077:	mov    QWORD PTR [rbp-0x90],rdx
  40d07e:	mov    QWORD PTR [rbp-0x88],rcx
  40d085:	mov    rdx,QWORD PTR [rax+0x58]
  40d089:	mov    rcx,QWORD PTR [rax+0x60]
  40d08d:	mov    QWORD PTR [rbp-0x80],rdx
  40d091:	mov    QWORD PTR [rbp-0x78],rcx
  40d095:	mov    rdx,QWORD PTR [rax+0x68]
  40d099:	mov    rcx,QWORD PTR [rax+0x70]
  40d09d:	mov    QWORD PTR [rbp-0x70],rdx
  40d0a1:	mov    QWORD PTR [rbp-0x68],rcx
  40d0a5:	mov    rdx,QWORD PTR [rax+0x78]
  40d0a9:	mov    rcx,QWORD PTR [rax+0x80]
  40d0b0:	mov    QWORD PTR [rbp-0x60],rdx
  40d0b4:	mov    QWORD PTR [rbp-0x58],rcx
  40d0b8:	mov    rdx,QWORD PTR [rax+0x88]
  40d0bf:	mov    rcx,QWORD PTR [rax+0x90]
  40d0c6:	mov    QWORD PTR [rbp-0x50],rdx
  40d0ca:	mov    QWORD PTR [rbp-0x48],rcx
  40d0ce:	mov    rdx,QWORD PTR [rax+0x98]
  40d0d5:	mov    rcx,QWORD PTR [rax+0xa0]
  40d0dc:	mov    QWORD PTR [rbp-0x40],rdx
  40d0e0:	mov    QWORD PTR [rbp-0x38],rcx
  40d0e4:	mov    rdx,QWORD PTR [rax+0xb0]
  40d0eb:	mov    rax,QWORD PTR [rax+0xa8]
  40d0f2:	mov    QWORD PTR [rbp-0x30],rax
  40d0f6:	mov    QWORD PTR [rbp-0x28],rdx
  40d0fa:	mov    rax,QWORD PTR [rbp-0x128]
  40d101:	mov    rdx,QWORD PTR [rbp-0x148]
  40d108:	mov    QWORD PTR [rax],rdx
  40d10b:	mov    rax,QWORD PTR [rbp-0x128]
  40d112:	mov    rdx,QWORD PTR [rbp-0x150]
  40d119:	mov    QWORD PTR [rax+0x10],rdx
  40d11d:	mov    rax,QWORD PTR [rbp-0x128]
  40d124:	mov    rdx,QWORD PTR [rbp-0x138]
  40d12b:	mov    QWORD PTR [rax+0x18],rdx
  40d12f:	mov    rdx,QWORD PTR [rbp-0x150]
  40d136:	mov    rax,QWORD PTR [rbp-0x148]
  40d13d:	add    rax,0xf8
  40d143:	movzx  eax,WORD PTR [rax]
  40d146:	movzx  eax,ax
  40d149:	mov    rcx,rdx
  40d14c:	mov    edx,0x0
  40d151:	mov    esi,0x1
  40d156:	mov    edi,eax
  40d158:	call   402660 <rb_socket@plt>
  40d15d:	mov    rdx,rax
  40d160:	mov    rax,QWORD PTR [rbp-0x128]
  40d167:	mov    QWORD PTR [rax+0x8],rdx
  40d16b:	mov    rax,QWORD PTR [rbp-0x128]
  40d172:	mov    rax,QWORD PTR [rax+0x8]
  40d176:	test   rax,rax
  40d179:	jne    40d1c3 <memcpy@plt+0xa713>
  40d17b:	call   402910 <__errno_location@plt>
  40d180:	mov    eax,DWORD PTR [rax]
  40d182:	mov    edi,eax
  40d184:	call   402810 <strerror@plt>
  40d189:	mov    rdx,rax
  40d18c:	mov    rax,QWORD PTR [rbp-0x150]
  40d193:	mov    rcx,rdx
  40d196:	mov    rdx,rax
  40d199:	lea    rsi,[rip+0x2ea8]        # 410048 <memcpy@plt+0xd598>
  40d1a0:	mov    edi,0x57
  40d1a5:	mov    eax,0x0
  40d1aa:	call   403c26 <memcpy@plt+0x1176>
  40d1af:	mov    rax,QWORD PTR [rbp-0x128]
  40d1b6:	mov    rdi,rax
  40d1b9:	call   40c11e <memcpy@plt+0x966e>
  40d1be:	jmp    40d323 <memcpy@plt+0xa873>
  40d1c3:	mov    rax,QWORD PTR [rbp-0x128]
  40d1ca:	mov    rax,QWORD PTR [rax+0x8]
  40d1ce:	mov    rdi,rax
  40d1d1:	call   402610 <rb_get_fd@plt>
  40d1d6:	mov    edi,eax
  40d1d8:	lea    rax,[rbp-0x13c]
  40d1df:	mov    r8d,0x4
  40d1e5:	mov    rcx,rax
  40d1e8:	mov    edx,0x1
  40d1ed:	mov    esi,0x6
  40d1f2:	call   402700 <setsockopt@plt>
  40d1f7:	lea    rax,[rbp-0xa0]
  40d1fe:	movzx  eax,WORD PTR [rax]
  40d201:	cmp    ax,0x2
  40d205:	jne    40d216 <memcpy@plt+0xa766>
  40d207:	lea    rax,[rbp-0xa0]
  40d20e:	mov    WORD PTR [rax+0x2],0x0
  40d214:	jmp    40d223 <memcpy@plt+0xa773>
  40d216:	lea    rax,[rbp-0xa0]
  40d21d:	mov    WORD PTR [rax+0x2],0x0
  40d223:	lea    rax,[rbp-0x120]
  40d22a:	movzx  eax,WORD PTR [rax]
  40d22d:	cmp    ax,0x2
  40d231:	jne    40d255 <memcpy@plt+0xa7a5>
  40d233:	mov    rax,QWORD PTR [rbp-0x150]
  40d23a:	movzx  eax,WORD PTR [rax+0x14]
  40d23e:	movzx  eax,ax
  40d241:	lea    rbx,[rbp-0x120]
  40d248:	mov    edi,eax
  40d24a:	call   402620 <htons@plt>
  40d24f:	mov    WORD PTR [rbx+0x2],ax
  40d253:	jmp    40d275 <memcpy@plt+0xa7c5>
  40d255:	mov    rax,QWORD PTR [rbp-0x150]
  40d25c:	movzx  eax,WORD PTR [rax+0x14]
  40d260:	movzx  eax,ax
  40d263:	lea    rbx,[rbp-0x120]
  40d26a:	mov    edi,eax
  40d26c:	call   402620 <htons@plt>
  40d271:	mov    WORD PTR [rbx+0x2],ax
  40d275:	mov    rdx,QWORD PTR [rbp-0x130]
  40d27c:	mov    rax,QWORD PTR [rbp-0x128]
  40d283:	lea    rcx,[rax+0x20]
  40d287:	mov    rax,QWORD PTR [rbp-0x128]
  40d28e:	mov    rsi,rcx
  40d291:	mov    rdi,rax
  40d294:	call   40beea <memcpy@plt+0x943a>
  40d299:	mov    rax,QWORD PTR [rbp-0x150]
  40d2a0:	movzx  eax,BYTE PTR [rax+0x16]
  40d2a4:	xor    eax,0x1
  40d2a7:	test   al,al
  40d2a9:	je     40d2e8 <memcpy@plt+0xa838>
  40d2ab:	mov    edi,DWORD PTR [rip+0x8b47]        # 415df8 <memcpy@plt+0x13348>
  40d2b1:	mov    rax,QWORD PTR [rbp-0x128]
  40d2b8:	mov    rax,QWORD PTR [rax+0x8]
  40d2bc:	mov    rcx,QWORD PTR [rbp-0x128]
  40d2c3:	lea    rdx,[rbp-0xa0]
  40d2ca:	lea    rsi,[rbp-0x120]
  40d2d1:	mov    r9d,edi
  40d2d4:	mov    r8,rcx
  40d2d7:	lea    rcx,[rip+0xfffffffffffff717]        # 40c9f5 <memcpy@plt+0x9f45>
  40d2de:	mov    rdi,rax
  40d2e1:	call   4025e0 <rb_connect_tcp@plt>
  40d2e6:	jmp    40d323 <memcpy@plt+0xa873>
  40d2e8:	mov    edi,DWORD PTR [rip+0x8b0a]        # 415df8 <memcpy@plt+0x13348>
  40d2ee:	mov    rax,QWORD PTR [rbp-0x128]
  40d2f5:	mov    rax,QWORD PTR [rax+0x8]
  40d2f9:	mov    rcx,QWORD PTR [rbp-0x128]
  40d300:	lea    rdx,[rbp-0xa0]
  40d307:	lea    rsi,[rbp-0x120]
  40d30e:	mov    r9d,edi
  40d311:	mov    r8,rcx
  40d314:	lea    rcx,[rip+0xfffffffffffff6da]        # 40c9f5 <memcpy@plt+0x9f45>
  40d31b:	mov    rdi,rax
  40d31e:	call   4025c0 <rb_connect_tcp_ssl@plt>
  40d323:	mov    rax,QWORD PTR [rbp-0x18]
  40d327:	xor    rax,QWORD PTR fs:0x28
  40d330:	je     40d337 <memcpy@plt+0xa887>
  40d332:	call   402950 <__stack_chk_fail@plt>
  40d337:	add    rsp,0x148
  40d33e:	pop    rbx
  40d33f:	pop    rbp
  40d340:	ret    
  40d341:	endbr64 
  40d345:	push   rbp
  40d346:	mov    rbp,rsp
  40d349:	push   rbx
  40d34a:	sub    rsp,0x108
  40d351:	mov    QWORD PTR [rbp-0x108],rdi
  40d358:	mov    eax,esi
  40d35a:	mov    WORD PTR [rbp-0x10c],ax
  40d361:	mov    rax,QWORD PTR fs:0x28
  40d36a:	mov    QWORD PTR [rbp-0x18],rax
  40d36e:	xor    eax,eax
  40d370:	mov    DWORD PTR [rbp-0xfc],0x1
  40d37a:	lea    rdx,[rbp-0xa0]
  40d381:	mov    rax,QWORD PTR [rbp-0x108]
  40d388:	mov    rsi,rdx
  40d38b:	mov    rdi,rax
  40d38e:	call   4027d0 <rb_inet_pton_sock@plt>
  40d393:	test   eax,eax
  40d395:	jne    40d3ca <memcpy@plt+0xa91a>
  40d397:	movzx  edx,WORD PTR [rbp-0x10c]
  40d39e:	mov    rax,QWORD PTR [rbp-0x108]
  40d3a5:	mov    ecx,edx
  40d3a7:	mov    rdx,rax
  40d3aa:	lea    rsi,[rip+0x2cc7]        # 410078 <memcpy@plt+0xd5c8>
  40d3b1:	mov    edi,0x43
  40d3b6:	mov    eax,0x0
  40d3bb:	call   403c26 <memcpy@plt+0x1176>
  40d3c0:	mov    edi,0x3
  40d3c5:	call   402630 <exit@plt>
  40d3ca:	lea    rax,[rbp-0xa0]
  40d3d1:	movzx  eax,WORD PTR [rax]
  40d3d4:	cmp    ax,0x2
  40d3d8:	jne    40d3f5 <memcpy@plt+0xa945>
  40d3da:	movzx  eax,WORD PTR [rbp-0x10c]
  40d3e1:	lea    rbx,[rbp-0xa0]
  40d3e8:	mov    edi,eax
  40d3ea:	call   402620 <htons@plt>
  40d3ef:	mov    WORD PTR [rbx+0x2],ax
  40d3f3:	jmp    40d40e <memcpy@plt+0xa95e>
  40d3f5:	movzx  eax,WORD PTR [rbp-0x10c]
  40d3fc:	lea    rbx,[rbp-0xa0]
  40d403:	mov    edi,eax
  40d405:	call   402620 <htons@plt>
  40d40a:	mov    WORD PTR [rbx+0x2],ax
  40d40e:	lea    rax,[rbp-0xa0]
  40d415:	movzx  eax,WORD PTR [rax]
  40d418:	cmp    ax,0xa
  40d41c:	jne    40d577 <memcpy@plt+0xaac7>
  40d422:	lea    rax,[rip+0xcd77]        # 41a1a0 <memcpy@plt+0x176f0>
  40d429:	mov    QWORD PTR [rbp-0xf8],rax
  40d430:	lea    rax,[rbp-0xa0]
  40d437:	mov    QWORD PTR [rbp-0xf0],rax
  40d43e:	mov    rax,QWORD PTR [rbp-0xf8]
  40d445:	add    rax,0x38
  40d449:	mov    QWORD PTR [rbp-0xe8],rax
  40d450:	mov    rax,QWORD PTR [rbp-0xf0]
  40d457:	add    rax,0x8
  40d45b:	mov    QWORD PTR [rbp-0xe0],rax
  40d462:	mov    rax,QWORD PTR [rbp-0xe8]
  40d469:	add    rax,0x8
  40d46d:	mov    QWORD PTR [rbp-0xd8],rax
  40d474:	mov    rax,QWORD PTR [rbp-0xe0]
  40d47b:	mov    edx,DWORD PTR [rax]
  40d47d:	mov    rax,QWORD PTR [rbp-0xd8]
  40d484:	mov    eax,DWORD PTR [rax]
  40d486:	cmp    edx,eax
  40d488:	jne    40d4d9 <memcpy@plt+0xaa29>
  40d48a:	mov    rax,QWORD PTR [rbp-0xe0]
  40d491:	mov    edx,DWORD PTR [rax+0x4]
  40d494:	mov    rax,QWORD PTR [rbp-0xd8]
  40d49b:	mov    eax,DWORD PTR [rax+0x4]
  40d49e:	cmp    edx,eax
  40d4a0:	jne    40d4d9 <memcpy@plt+0xaa29>
  40d4a2:	mov    rax,QWORD PTR [rbp-0xe0]
  40d4a9:	mov    edx,DWORD PTR [rax+0x8]
  40d4ac:	mov    rax,QWORD PTR [rbp-0xd8]
  40d4b3:	mov    eax,DWORD PTR [rax+0x8]
  40d4b6:	cmp    edx,eax
  40d4b8:	jne    40d4d9 <memcpy@plt+0xaa29>
  40d4ba:	mov    rax,QWORD PTR [rbp-0xe0]
  40d4c1:	mov    edx,DWORD PTR [rax+0xc]
  40d4c4:	mov    rax,QWORD PTR [rbp-0xd8]
  40d4cb:	mov    eax,DWORD PTR [rax+0xc]
  40d4ce:	cmp    edx,eax
  40d4d0:	jne    40d4d9 <memcpy@plt+0xaa29>
  40d4d2:	mov    eax,0x1
  40d4d7:	jmp    40d4de <memcpy@plt+0xaa2e>
  40d4d9:	mov    eax,0x0
  40d4de:	test   eax,eax
  40d4e0:	je     40d64a <memcpy@plt+0xab9a>
  40d4e6:	lea    rax,[rbp-0xa0]
  40d4ed:	movzx  eax,WORD PTR [rax]
  40d4f0:	cmp    ax,0x2
  40d4f4:	jne    40d506 <memcpy@plt+0xaa56>
  40d4f6:	lea    rax,[rbp-0xa0]
  40d4fd:	movzx  eax,WORD PTR [rax+0x2]
  40d501:	movzx  edx,ax
  40d504:	jmp    40d514 <memcpy@plt+0xaa64>
  40d506:	lea    rax,[rbp-0xa0]
  40d50d:	movzx  eax,WORD PTR [rax+0x2]
  40d511:	movzx  edx,ax
  40d514:	mov    rax,QWORD PTR [rbp-0xf8]
  40d51b:	add    rax,0x38
  40d51f:	movzx  eax,WORD PTR [rax]
  40d522:	cmp    ax,0x2
  40d526:	jne    40d53c <memcpy@plt+0xaa8c>
  40d528:	mov    rax,QWORD PTR [rbp-0xf8]
  40d52f:	add    rax,0x38
  40d533:	movzx  eax,WORD PTR [rax+0x2]
  40d537:	movzx  eax,ax
  40d53a:	jmp    40d54e <memcpy@plt+0xaa9e>
  40d53c:	mov    rax,QWORD PTR [rbp-0xf8]
  40d543:	add    rax,0x38
  40d547:	movzx  eax,WORD PTR [rax+0x2]
  40d54b:	movzx  eax,ax
  40d54e:	cmp    edx,eax
  40d550:	jne    40d64a <memcpy@plt+0xab9a>
  40d556:	mov    rax,QWORD PTR [rbp-0xf8]
  40d55d:	mov    rax,QWORD PTR [rax+0xb8]
  40d564:	test   rax,rax
  40d567:	je     40d64a <memcpy@plt+0xab9a>
  40d56d:	mov    eax,0x0
  40d572:	jmp    40d9bb <memcpy@plt+0xaf0b>
  40d577:	lea    rax,[rip+0xcb62]        # 41a0e0 <memcpy@plt+0x17630>
  40d57e:	mov    QWORD PTR [rbp-0xf8],rax
  40d585:	lea    rax,[rbp-0xa0]
  40d58c:	mov    QWORD PTR [rbp-0xd0],rax
  40d593:	mov    rax,QWORD PTR [rbp-0xf8]
  40d59a:	add    rax,0x38
  40d59e:	mov    QWORD PTR [rbp-0xc8],rax
  40d5a5:	mov    rax,QWORD PTR [rbp-0xd0]
  40d5ac:	mov    edx,DWORD PTR [rax+0x4]
  40d5af:	mov    rax,QWORD PTR [rbp-0xc8]
  40d5b6:	mov    eax,DWORD PTR [rax+0x4]
  40d5b9:	cmp    edx,eax
  40d5bb:	jne    40d64a <memcpy@plt+0xab9a>
  40d5c1:	lea    rax,[rbp-0xa0]
  40d5c8:	movzx  eax,WORD PTR [rax]
  40d5cb:	cmp    ax,0x2
  40d5cf:	jne    40d5e1 <memcpy@plt+0xab31>
  40d5d1:	lea    rax,[rbp-0xa0]
  40d5d8:	movzx  eax,WORD PTR [rax+0x2]
  40d5dc:	movzx  edx,ax
  40d5df:	jmp    40d5ef <memcpy@plt+0xab3f>
  40d5e1:	lea    rax,[rbp-0xa0]
  40d5e8:	movzx  eax,WORD PTR [rax+0x2]
  40d5ec:	movzx  edx,ax
  40d5ef:	mov    rax,QWORD PTR [rbp-0xf8]
  40d5f6:	add    rax,0x38
  40d5fa:	movzx  eax,WORD PTR [rax]
  40d5fd:	cmp    ax,0x2
  40d601:	jne    40d617 <memcpy@plt+0xab67>
  40d603:	mov    rax,QWORD PTR [rbp-0xf8]
  40d60a:	add    rax,0x38
  40d60e:	movzx  eax,WORD PTR [rax+0x2]
  40d612:	movzx  eax,ax
  40d615:	jmp    40d629 <memcpy@plt+0xab79>
  40d617:	mov    rax,QWORD PTR [rbp-0xf8]
  40d61e:	add    rax,0x38
  40d622:	movzx  eax,WORD PTR [rax+0x2]
  40d626:	movzx  eax,ax
  40d629:	cmp    edx,eax
  40d62b:	jne    40d64a <memcpy@plt+0xab9a>
  40d62d:	mov    rax,QWORD PTR [rbp-0xf8]
  40d634:	mov    rax,QWORD PTR [rax+0xb8]
  40d63b:	test   rax,rax
  40d63e:	je     40d64a <memcpy@plt+0xab9a>
  40d640:	mov    eax,0x0
  40d645:	jmp    40d9bb <memcpy@plt+0xaf0b>
  40d64a:	lea    rax,[rbp-0xa0]
  40d651:	movzx  eax,WORD PTR [rax]
  40d654:	movzx  eax,ax
  40d657:	lea    rcx,[rip+0x2a3a]        # 410098 <memcpy@plt+0xd5e8>
  40d65e:	mov    edx,0x0
  40d663:	mov    esi,0x1
  40d668:	mov    edi,eax
  40d66a:	call   402660 <rb_socket@plt>
  40d66f:	mov    QWORD PTR [rbp-0xc0],rax
  40d676:	cmp    QWORD PTR [rbp-0xc0],0x0
  40d67e:	jne    40d6b1 <memcpy@plt+0xac01>
  40d680:	call   402910 <__errno_location@plt>
  40d685:	mov    eax,DWORD PTR [rax]
  40d687:	mov    edi,eax
  40d689:	call   402810 <strerror@plt>
  40d68e:	mov    rdx,rax
  40d691:	lea    rsi,[rip+0x2a14]        # 4100ac <memcpy@plt+0xd5fc>
  40d698:	mov    edi,0x43
  40d69d:	mov    eax,0x0
  40d6a2:	call   403c26 <memcpy@plt+0x1176>
  40d6a7:	mov    edi,0x3
  40d6ac:	call   402630 <exit@plt>
  40d6b1:	mov    rax,QWORD PTR [rbp-0xc0]
  40d6b8:	mov    rdi,rax
  40d6bb:	call   402610 <rb_get_fd@plt>
  40d6c0:	mov    edi,eax
  40d6c2:	lea    rax,[rbp-0xfc]
  40d6c9:	mov    r8d,0x4
  40d6cf:	mov    rcx,rax
  40d6d2:	mov    edx,0x2
  40d6d7:	mov    esi,0x1
  40d6dc:	call   402700 <setsockopt@plt>
  40d6e1:	test   eax,eax
  40d6e3:	je     40d716 <memcpy@plt+0xac66>
  40d6e5:	call   402910 <__errno_location@plt>
  40d6ea:	mov    eax,DWORD PTR [rax]
  40d6ec:	mov    edi,eax
  40d6ee:	call   402810 <strerror@plt>
  40d6f3:	mov    rdx,rax
  40d6f6:	lea    rsi,[rip+0x29d3]        # 4100d0 <memcpy@plt+0xd620>
  40d6fd:	mov    edi,0x43
  40d702:	mov    eax,0x0
  40d707:	call   403c26 <memcpy@plt+0x1176>
  40d70c:	mov    edi,0x3
  40d711:	call   402630 <exit@plt>
  40d716:	lea    rax,[rbp-0xa0]
  40d71d:	movzx  eax,WORD PTR [rax]
  40d720:	cmp    ax,0x2
  40d724:	jne    40d72d <memcpy@plt+0xac7d>
  40d726:	mov    ebx,0x10
  40d72b:	jmp    40d732 <memcpy@plt+0xac82>
  40d72d:	mov    ebx,0x1c
  40d732:	mov    rax,QWORD PTR [rbp-0xc0]
  40d739:	mov    rdi,rax
  40d73c:	call   402610 <rb_get_fd@plt>
  40d741:	mov    ecx,eax
  40d743:	lea    rax,[rbp-0xa0]
  40d74a:	mov    edx,ebx
  40d74c:	mov    rsi,rax
  40d74f:	mov    edi,ecx
  40d751:	call   402a80 <bind@plt>
  40d756:	test   eax,eax
  40d758:	je     40d79a <memcpy@plt+0xacea>
  40d75a:	call   402910 <__errno_location@plt>
  40d75f:	mov    eax,DWORD PTR [rax]
  40d761:	mov    edi,eax
  40d763:	call   402810 <strerror@plt>
  40d768:	mov    rdx,rax
  40d76b:	lea    rsi,[rip+0x2986]        # 4100f8 <memcpy@plt+0xd648>
  40d772:	mov    edi,0x57
  40d777:	mov    eax,0x0
  40d77c:	call   403c26 <memcpy@plt+0x1176>
  40d781:	mov    rax,QWORD PTR [rbp-0xc0]
  40d788:	mov    rdi,rax
  40d78b:	call   402850 <rb_close@plt>
  40d790:	mov    eax,0x0
  40d795:	jmp    40d9bb <memcpy@plt+0xaf0b>
  40d79a:	mov    rax,QWORD PTR [rbp-0xc0]
  40d7a1:	mov    edx,0x0
  40d7a6:	mov    esi,0x1000
  40d7ab:	mov    rdi,rax
  40d7ae:	call   402aa0 <rb_listen@plt>
  40d7b3:	test   eax,eax
  40d7b5:	je     40d7f7 <memcpy@plt+0xad47>
  40d7b7:	call   402910 <__errno_location@plt>
  40d7bc:	mov    eax,DWORD PTR [rax]
  40d7be:	mov    edi,eax
  40d7c0:	call   402810 <strerror@plt>
  40d7c5:	mov    rdx,rax
  40d7c8:	lea    rsi,[rip+0x2949]        # 410118 <memcpy@plt+0xd668>
  40d7cf:	mov    edi,0x57
  40d7d4:	mov    eax,0x0
  40d7d9:	call   403c26 <memcpy@plt+0x1176>
  40d7de:	mov    rax,QWORD PTR [rbp-0xc0]
  40d7e5:	mov    rdi,rax
  40d7e8:	call   402850 <rb_close@plt>
  40d7ed:	mov    eax,0x0
  40d7f2:	jmp    40d9bb <memcpy@plt+0xaf0b>
  40d7f7:	mov    rax,QWORD PTR [rbp-0xf8]
  40d7fe:	mov    rax,QWORD PTR [rax+0xb8]
  40d805:	test   rax,rax
  40d808:	je     40d820 <memcpy@plt+0xad70>
  40d80a:	mov    rax,QWORD PTR [rbp-0xf8]
  40d811:	mov    rax,QWORD PTR [rax+0xb8]
  40d818:	mov    rdi,rax
  40d81b:	call   402850 <rb_close@plt>
  40d820:	mov    rax,QWORD PTR [rbp-0xf8]
  40d827:	mov    rdx,QWORD PTR [rbp-0xc0]
  40d82e:	mov    QWORD PTR [rax+0xb8],rdx
  40d835:	mov    rax,0x41a270
  40d83c:	mov    rax,QWORD PTR [rax]
  40d83f:	lea    rdx,[rbp-0xb0]
  40d846:	mov    rsi,rdx
  40d849:	mov    rdi,rax
  40d84c:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40d851:	jmp    40d87e <memcpy@plt+0xadce>
  40d853:	mov    rax,QWORD PTR [rbp-0xb8]
  40d85a:	mov    rdi,rax
  40d85d:	call   40dbc4 <memcpy@plt+0xb114>
  40d862:	mov    rax,0x41a270
  40d869:	mov    rax,QWORD PTR [rax]
  40d86c:	lea    rdx,[rbp-0xb0]
  40d873:	mov    rsi,rdx
  40d876:	mov    rdi,rax
  40d879:	call   402730 <rb_dictionary_foreach_next@plt>
  40d87e:	mov    rax,0x41a270
  40d885:	mov    rax,QWORD PTR [rax]
  40d888:	lea    rdx,[rbp-0xb0]
  40d88f:	mov    rsi,rdx
  40d892:	mov    rdi,rax
  40d895:	call   402690 <rb_dictionary_foreach_cur@plt>
  40d89a:	mov    QWORD PTR [rbp-0xb8],rax
  40d8a1:	cmp    QWORD PTR [rbp-0xb8],0x0
  40d8a9:	jne    40d853 <memcpy@plt+0xada3>
  40d8ab:	mov    rax,QWORD PTR [rbp-0xf8]
  40d8b2:	mov    rcx,QWORD PTR [rbp-0x108]
  40d8b9:	mov    edx,0x35
  40d8be:	mov    rsi,rcx
  40d8c1:	mov    rdi,rax
  40d8c4:	call   402720 <rb_strlcpy@plt>
  40d8c9:	mov    rdx,QWORD PTR [rbp-0xf8]
  40d8d0:	movzx  eax,WORD PTR [rbp-0x10c]
  40d8d7:	mov    WORD PTR [rdx+0x36],ax
  40d8db:	mov    rax,QWORD PTR [rbp-0xf8]
  40d8e2:	mov    rdx,QWORD PTR [rbp-0xa0]
  40d8e9:	mov    rcx,QWORD PTR [rbp-0x98]
  40d8f0:	mov    QWORD PTR [rax+0x38],rdx
  40d8f4:	mov    QWORD PTR [rax+0x40],rcx
  40d8f8:	mov    rdx,QWORD PTR [rbp-0x90]
  40d8ff:	mov    rcx,QWORD PTR [rbp-0x88]
  40d906:	mov    QWORD PTR [rax+0x48],rdx
  40d90a:	mov    QWORD PTR [rax+0x50],rcx
  40d90e:	mov    rdx,QWORD PTR [rbp-0x80]
  40d912:	mov    rcx,QWORD PTR [rbp-0x78]
  40d916:	mov    QWORD PTR [rax+0x58],rdx
  40d91a:	mov    QWORD PTR [rax+0x60],rcx
  40d91e:	mov    rdx,QWORD PTR [rbp-0x70]
  40d922:	mov    rcx,QWORD PTR [rbp-0x68]
  40d926:	mov    QWORD PTR [rax+0x68],rdx
  40d92a:	mov    QWORD PTR [rax+0x70],rcx
  40d92e:	mov    rdx,QWORD PTR [rbp-0x60]
  40d932:	mov    rcx,QWORD PTR [rbp-0x58]
  40d936:	mov    QWORD PTR [rax+0x78],rdx
  40d93a:	mov    QWORD PTR [rax+0x80],rcx
  40d941:	mov    rdx,QWORD PTR [rbp-0x50]
  40d945:	mov    rcx,QWORD PTR [rbp-0x48]
  40d949:	mov    QWORD PTR [rax+0x88],rdx
  40d950:	mov    QWORD PTR [rax+0x90],rcx
  40d957:	mov    rdx,QWORD PTR [rbp-0x40]
  40d95b:	mov    rcx,QWORD PTR [rbp-0x38]
  40d95f:	mov    QWORD PTR [rax+0x98],rdx
  40d966:	mov    QWORD PTR [rax+0xa0],rcx
  40d96d:	mov    rdx,QWORD PTR [rbp-0x30]
  40d971:	mov    rcx,QWORD PTR [rbp-0x28]
  40d975:	mov    QWORD PTR [rax+0xa8],rdx
  40d97c:	mov    QWORD PTR [rax+0xb0],rcx
  40d983:	mov    BYTE PTR [rip+0xc74e],0x1        # 41a0d8 <memcpy@plt+0x17628>
  40d98a:	mov    rax,QWORD PTR [rbp-0xf8]
  40d991:	mov    rax,QWORD PTR [rax+0xb8]
  40d998:	mov    rdx,QWORD PTR [rbp-0xf8]
  40d99f:	mov    rcx,rdx
  40d9a2:	lea    rdx,[rip+0xffffffffffffed43]        # 40c6ec <memcpy@plt+0x9c3c>
  40d9a9:	mov    esi,0x0
  40d9ae:	mov    rdi,rax
  40d9b1:	call   4029c0 <rb_accept_tcp@plt>
  40d9b6:	mov    eax,0x1
  40d9bb:	mov    rbx,QWORD PTR [rbp-0x18]
  40d9bf:	xor    rbx,QWORD PTR fs:0x28
  40d9c8:	je     40d9cf <memcpy@plt+0xaf1f>
  40d9ca:	call   402950 <__stack_chk_fail@plt>
  40d9cf:	add    rsp,0x108
  40d9d6:	pop    rbx
  40d9d7:	pop    rbp
  40d9d8:	ret    
  40d9d9:	endbr64 
  40d9dd:	push   rbp
  40d9de:	mov    rbp,rsp
  40d9e1:	sub    rsp,0x30
  40d9e5:	mov    QWORD PTR [rbp-0x28],rdi
  40d9e9:	mov    rax,0x415ec0
  40d9f0:	mov    edx,DWORD PTR [rax+0x18]
  40d9f3:	mov    rax,QWORD PTR [rbp-0x28]
  40d9f7:	mov    esi,edx
  40d9f9:	mov    rdi,rax
  40d9fc:	call   40c2de <memcpy@plt+0x982e>
  40da01:	mov    QWORD PTR [rbp-0x10],rax
  40da05:	mov    eax,DWORD PTR [rip+0x83ed]        # 415df8 <memcpy@plt+0x13348>
  40da0b:	movsxd rdx,eax
  40da0e:	mov    rax,0x415ec0
  40da15:	mov    ecx,DWORD PTR [rax+0x18]
  40da18:	mov    rax,QWORD PTR [rbp-0x28]
  40da1c:	mov    esi,ecx
  40da1e:	mov    rdi,rax
  40da21:	call   40c333 <memcpy@plt+0x9883>
  40da26:	mov    rax,QWORD PTR [rbp-0x10]
  40da2a:	mov    BYTE PTR [rax+0x18],0x1
  40da2e:	mov    rax,QWORD PTR [rip+0xc68b]        # 41a0c0 <memcpy@plt+0x17610>
  40da35:	mov    QWORD PTR [rbp-0x18],rax
  40da39:	jmp    40da65 <memcpy@plt+0xafb5>
  40da3b:	mov    rax,QWORD PTR [rbp-0x18]
  40da3f:	mov    rax,QWORD PTR [rax]
  40da42:	mov    QWORD PTR [rbp-0x8],rax
  40da46:	mov    rdx,QWORD PTR [rbp-0x8]
  40da4a:	mov    rax,QWORD PTR [rbp-0x28]
  40da4e:	mov    rsi,rdx
  40da51:	mov    rdi,rax
  40da54:	call   40ce87 <memcpy@plt+0xa3d7>
  40da59:	mov    rax,QWORD PTR [rbp-0x18]
  40da5d:	mov    rax,QWORD PTR [rax+0x10]
  40da61:	mov    QWORD PTR [rbp-0x18],rax
  40da65:	cmp    QWORD PTR [rbp-0x18],0x0
  40da6a:	jne    40da3b <memcpy@plt+0xaf8b>
  40da6c:	mov    rax,QWORD PTR [rbp-0x28]
  40da70:	mov    eax,DWORD PTR [rax]
  40da72:	lea    rsi,[rip+0x26c7]        # 410140 <memcpy@plt+0xd690>
  40da79:	mov    edi,eax
  40da7b:	mov    eax,0x0
  40da80:	call   403b1c <memcpy@plt+0x106c>
  40da85:	nop
  40da86:	leave  
  40da87:	ret    
  40da88:	endbr64 
  40da8c:	push   rbp
  40da8d:	mov    rbp,rsp
  40da90:	sub    rsp,0x20
  40da94:	mov    QWORD PTR [rbp-0x18],rdi
  40da98:	mov    DWORD PTR [rbp-0x1c],esi
  40da9b:	mov    rax,0x415ec0
  40daa2:	mov    edx,DWORD PTR [rax+0x18]
  40daa5:	mov    rax,QWORD PTR [rbp-0x18]
  40daa9:	mov    esi,edx
  40daab:	mov    rdi,rax
  40daae:	call   40c2de <memcpy@plt+0x982e>
  40dab3:	mov    QWORD PTR [rbp-0x8],rax
  40dab7:	cmp    QWORD PTR [rbp-0x8],0x0
  40dabc:	je     40db06 <memcpy@plt+0xb056>
  40dabe:	mov    rax,QWORD PTR [rbp-0x8]
  40dac2:	movzx  eax,BYTE PTR [rax+0x18]
  40dac6:	test   al,al
  40dac8:	jne    40db06 <memcpy@plt+0xb056>
  40daca:	mov    rax,QWORD PTR [rbp-0x18]
  40dace:	lea    rsi,[rip+0x268c]        # 410161 <memcpy@plt+0xd6b1>
  40dad5:	mov    rdi,rax
  40dad8:	call   40c274 <memcpy@plt+0x97c4>
  40dadd:	test   al,al
  40dadf:	je     40db07 <memcpy@plt+0xb057>
  40dae1:	mov    rax,QWORD PTR [rbp-0x18]
  40dae5:	lea    rsi,[rip+0x267a]        # 410166 <memcpy@plt+0xd6b6>
  40daec:	mov    rdi,rax
  40daef:	call   40c274 <memcpy@plt+0x97c4>
  40daf4:	test   al,al
  40daf6:	je     40db07 <memcpy@plt+0xb057>
  40daf8:	mov    rax,QWORD PTR [rbp-0x18]
  40dafc:	mov    rdi,rax
  40daff:	call   40d9d9 <memcpy@plt+0xaf29>
  40db04:	jmp    40db07 <memcpy@plt+0xb057>
  40db06:	nop
  40db07:	leave  
  40db08:	ret    
  40db09:	endbr64 
  40db0d:	push   rbp
  40db0e:	mov    rbp,rsp
  40db11:	sub    rsp,0x10
  40db15:	mov    QWORD PTR [rbp-0x8],rdi
  40db19:	movzx  eax,BYTE PTR [rip+0xc5b8]        # 41a0d8 <memcpy@plt+0x17628>
  40db20:	xor    eax,0x1
  40db23:	test   al,al
  40db25:	jne    40db33 <memcpy@plt+0xb083>
  40db27:	mov    rax,QWORD PTR [rip+0xc5a2]        # 41a0d0 <memcpy@plt+0x17620>
  40db2e:	test   rax,rax
  40db31:	jne    40db52 <memcpy@plt+0xb0a2>
  40db33:	mov    rax,0x415ec0
  40db3a:	mov    edx,DWORD PTR [rax+0x18]
  40db3d:	mov    rax,QWORD PTR [rbp-0x8]
  40db41:	mov    esi,edx
  40db43:	mov    rdi,rax
  40db46:	call   4048b0 <memcpy@plt+0x1e00>
  40db4b:	mov    eax,0x1
  40db50:	jmp    40dbc2 <memcpy@plt+0xb112>
  40db52:	mov    rax,QWORD PTR [rbp-0x8]
  40db56:	mov    rdi,rax
  40db59:	call   40c149 <memcpy@plt+0x9699>
  40db5e:	mov    edi,0x20
  40db63:	call   40c0e2 <memcpy@plt+0x9632>
  40db68:	mov    rdx,rax
  40db6b:	mov    rax,0x415ec0
  40db72:	mov    ecx,DWORD PTR [rax+0x18]
  40db75:	mov    rax,QWORD PTR [rbp-0x8]
  40db79:	mov    esi,ecx
  40db7b:	mov    rdi,rax
  40db7e:	call   40c304 <memcpy@plt+0x9854>
  40db83:	mov    rax,QWORD PTR [rbp-0x8]
  40db87:	lea    rsi,[rip+0x25d3]        # 410161 <memcpy@plt+0xd6b1>
  40db8e:	mov    rdi,rax
  40db91:	call   40c274 <memcpy@plt+0x97c4>
  40db96:	test   al,al
  40db98:	je     40dbbd <memcpy@plt+0xb10d>
  40db9a:	mov    rax,QWORD PTR [rbp-0x8]
  40db9e:	lea    rsi,[rip+0x25c1]        # 410166 <memcpy@plt+0xd6b6>
  40dba5:	mov    rdi,rax
  40dba8:	call   40c274 <memcpy@plt+0x97c4>
  40dbad:	test   al,al
  40dbaf:	je     40dbbd <memcpy@plt+0xb10d>
  40dbb1:	mov    rax,QWORD PTR [rbp-0x8]
  40dbb5:	mov    rdi,rax
  40dbb8:	call   40d9d9 <memcpy@plt+0xaf29>
  40dbbd:	mov    eax,0x1
  40dbc2:	leave  
  40dbc3:	ret    
  40dbc4:	endbr64 
  40dbc8:	push   rbp
  40dbc9:	mov    rbp,rsp
  40dbcc:	sub    rsp,0x30
  40dbd0:	mov    QWORD PTR [rbp-0x28],rdi
  40dbd4:	mov    rax,0x415ec0
  40dbdb:	mov    edx,DWORD PTR [rax+0x18]
  40dbde:	mov    rax,QWORD PTR [rbp-0x28]
  40dbe2:	mov    esi,edx
  40dbe4:	mov    rdi,rax
  40dbe7:	call   40c2de <memcpy@plt+0x982e>
  40dbec:	mov    QWORD PTR [rbp-0x10],rax
  40dbf0:	cmp    QWORD PTR [rbp-0x10],0x0
  40dbf5:	je     40dcf5 <memcpy@plt+0xb245>
  40dbfb:	mov    rax,QWORD PTR [rbp-0x28]
  40dbff:	mov    eax,DWORD PTR [rax]
  40dc01:	lea    rsi,[rip+0x2568]        # 410170 <memcpy@plt+0xd6c0>
  40dc08:	mov    edi,eax
  40dc0a:	mov    eax,0x0
  40dc0f:	call   403b1c <memcpy@plt+0x106c>
  40dc14:	mov    rax,QWORD PTR [rbp-0x10]
  40dc18:	mov    rax,QWORD PTR [rax]
  40dc1b:	mov    QWORD PTR [rbp-0x20],rax
  40dc1f:	cmp    QWORD PTR [rbp-0x20],0x0
  40dc24:	je     40dc30 <memcpy@plt+0xb180>
  40dc26:	mov    rax,QWORD PTR [rbp-0x20]
  40dc2a:	mov    rax,QWORD PTR [rax+0x10]
  40dc2e:	jmp    40dc35 <memcpy@plt+0xb185>
  40dc30:	mov    eax,0x0
  40dc35:	mov    QWORD PTR [rbp-0x18],rax
  40dc39:	jmp    40dc84 <memcpy@plt+0xb1d4>
  40dc3b:	mov    rax,QWORD PTR [rbp-0x20]
  40dc3f:	mov    rax,QWORD PTR [rax]
  40dc42:	mov    QWORD PTR [rbp-0x8],rax
  40dc46:	mov    rax,QWORD PTR [rbp-0x8]
  40dc4a:	mov    rax,QWORD PTR [rax+0x8]
  40dc4e:	mov    rdi,rax
  40dc51:	call   402850 <rb_close@plt>
  40dc56:	mov    rax,QWORD PTR [rbp-0x8]
  40dc5a:	mov    rdi,rax
  40dc5d:	call   40c11e <memcpy@plt+0x966e>
  40dc62:	mov    rax,QWORD PTR [rbp-0x18]
  40dc66:	mov    QWORD PTR [rbp-0x20],rax
  40dc6a:	cmp    QWORD PTR [rbp-0x20],0x0
  40dc6f:	je     40dc7b <memcpy@plt+0xb1cb>
  40dc71:	mov    rax,QWORD PTR [rbp-0x20]
  40dc75:	mov    rax,QWORD PTR [rax+0x10]
  40dc79:	jmp    40dc80 <memcpy@plt+0xb1d0>
  40dc7b:	mov    eax,0x0
  40dc80:	mov    QWORD PTR [rbp-0x18],rax
  40dc84:	cmp    QWORD PTR [rbp-0x20],0x0
  40dc89:	jne    40dc3b <memcpy@plt+0xb18b>
  40dc8b:	mov    rax,QWORD PTR [rbp-0x10]
  40dc8f:	mov    rdi,rax
  40dc92:	call   40c11e <memcpy@plt+0x966e>
  40dc97:	mov    rax,0x415ec0
  40dc9e:	mov    ecx,DWORD PTR [rax+0x18]
  40dca1:	mov    rax,QWORD PTR [rbp-0x28]
  40dca5:	mov    edx,0x0
  40dcaa:	mov    esi,ecx
  40dcac:	mov    rdi,rax
  40dcaf:	call   40c304 <memcpy@plt+0x9854>
  40dcb4:	mov    rax,0x415ec0
  40dcbb:	mov    ecx,DWORD PTR [rax+0x18]
  40dcbe:	mov    rax,QWORD PTR [rbp-0x28]
  40dcc2:	mov    edx,0x0
  40dcc7:	mov    esi,ecx
  40dcc9:	mov    rdi,rax
  40dccc:	call   40c371 <memcpy@plt+0x98c1>
  40dcd1:	mov    rax,0x415ec0
  40dcd8:	mov    edx,DWORD PTR [rax+0x18]
  40dcdb:	mov    rax,QWORD PTR [rbp-0x28]
  40dcdf:	mov    esi,edx
  40dce1:	mov    rdi,rax
  40dce4:	call   4048b0 <memcpy@plt+0x1e00>
  40dce9:	mov    rax,QWORD PTR [rbp-0x28]
  40dced:	mov    rdi,rax
  40dcf0:	call   40c16b <memcpy@plt+0x96bb>
  40dcf5:	nop
  40dcf6:	leave  
  40dcf7:	ret    
  40dcf8:	endbr64 
  40dcfc:	push   rbp
  40dcfd:	mov    rbp,rsp
  40dd00:	sub    rsp,0x30
  40dd04:	mov    rax,QWORD PTR fs:0x28
  40dd0d:	mov    QWORD PTR [rbp-0x8],rax
  40dd11:	xor    eax,eax
  40dd13:	mov    rax,0x41a270
  40dd1a:	mov    rax,QWORD PTR [rax]
  40dd1d:	lea    rdx,[rbp-0x20]
  40dd21:	mov    rsi,rdx
  40dd24:	mov    rdi,rax
  40dd27:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40dd2c:	jmp    40dd53 <memcpy@plt+0xb2a3>
  40dd2e:	mov    rax,QWORD PTR [rbp-0x28]
  40dd32:	mov    rdi,rax
  40dd35:	call   40dbc4 <memcpy@plt+0xb114>
  40dd3a:	mov    rax,0x41a270
  40dd41:	mov    rax,QWORD PTR [rax]
  40dd44:	lea    rdx,[rbp-0x20]
  40dd48:	mov    rsi,rdx
  40dd4b:	mov    rdi,rax
  40dd4e:	call   402730 <rb_dictionary_foreach_next@plt>
  40dd53:	mov    rax,0x41a270
  40dd5a:	mov    rax,QWORD PTR [rax]
  40dd5d:	lea    rdx,[rbp-0x20]
  40dd61:	mov    rsi,rdx
  40dd64:	mov    rdi,rax
  40dd67:	call   402690 <rb_dictionary_foreach_cur@plt>
  40dd6c:	mov    QWORD PTR [rbp-0x28],rax
  40dd70:	cmp    QWORD PTR [rbp-0x28],0x0
  40dd75:	jne    40dd2e <memcpy@plt+0xb27e>
  40dd77:	nop
  40dd78:	mov    rax,QWORD PTR [rbp-0x8]
  40dd7c:	xor    rax,QWORD PTR fs:0x28
  40dd85:	je     40dd8c <memcpy@plt+0xb2dc>
  40dd87:	call   402950 <__stack_chk_fail@plt>
  40dd8c:	leave  
  40dd8d:	ret    
  40dd8e:	endbr64 
  40dd92:	push   rbp
  40dd93:	mov    rbp,rsp
  40dd96:	sub    rsp,0x30
  40dd9a:	mov    QWORD PTR [rbp-0x18],rdi
  40dd9e:	mov    DWORD PTR [rbp-0x1c],esi
  40dda1:	mov    QWORD PTR [rbp-0x28],rdx
  40dda5:	mov    rax,QWORD PTR [rbp-0x28]
  40dda9:	mov    rax,QWORD PTR [rax]
  40ddac:	mov    rdi,rax
  40ddaf:	call   402880 <atoi@plt>
  40ddb4:	mov    DWORD PTR [rbp-0x4],eax
  40ddb7:	cmp    DWORD PTR [rbp-0x4],0x0
  40ddbb:	jns    40ddda <memcpy@plt+0xb32a>
  40ddbd:	mov    eax,DWORD PTR [rbp-0x4]
  40ddc0:	mov    edx,eax
  40ddc2:	lea    rsi,[rip+0x23c7]        # 410190 <memcpy@plt+0xd6e0>
  40ddc9:	mov    edi,0x43
  40ddce:	mov    eax,0x0
  40ddd3:	call   403c26 <memcpy@plt+0x1176>
  40ddd8:	jmp    40dde3 <memcpy@plt+0xb333>
  40ddda:	mov    eax,DWORD PTR [rbp-0x4]
  40dddd:	mov    DWORD PTR [rip+0x8015],eax        # 415df8 <memcpy@plt+0x13348>
  40dde3:	leave  
  40dde4:	ret    
  40dde5:	endbr64 
  40dde9:	push   rbp
  40ddea:	mov    rbp,rsp
  40dded:	sub    rsp,0x50
  40ddf1:	mov    QWORD PTR [rbp-0x38],rdi
  40ddf5:	mov    DWORD PTR [rbp-0x3c],esi
  40ddf8:	mov    QWORD PTR [rbp-0x48],rdx
  40ddfc:	mov    rax,QWORD PTR fs:0x28
  40de05:	mov    QWORD PTR [rbp-0x8],rax
  40de09:	xor    eax,eax
  40de0b:	mov    rax,QWORD PTR [rbp-0x48]
  40de0f:	mov    rax,QWORD PTR [rax]
  40de12:	movzx  eax,BYTE PTR [rax]
  40de15:	cmp    al,0x31
  40de17:	sete   al
  40de1a:	mov    BYTE PTR [rbp-0x29],al
  40de1d:	movzx  eax,BYTE PTR [rbp-0x29]
  40de21:	xor    eax,0x1
  40de24:	test   al,al
  40de26:	je     40defd <memcpy@plt+0xb44d>
  40de2c:	mov    rax,QWORD PTR [rip+0xc365]        # 41a198 <memcpy@plt+0x176e8>
  40de33:	test   rax,rax
  40de36:	jne    40de48 <memcpy@plt+0xb398>
  40de38:	mov    rax,QWORD PTR [rip+0xc419]        # 41a258 <memcpy@plt+0x177a8>
  40de3f:	test   rax,rax
  40de42:	je     40df73 <memcpy@plt+0xb4c3>
  40de48:	mov    rax,QWORD PTR [rip+0xc349]        # 41a198 <memcpy@plt+0x176e8>
  40de4f:	test   rax,rax
  40de52:	je     40de63 <memcpy@plt+0xb3b3>
  40de54:	mov    rax,QWORD PTR [rip+0xc33d]        # 41a198 <memcpy@plt+0x176e8>
  40de5b:	mov    rdi,rax
  40de5e:	call   402850 <rb_close@plt>
  40de63:	mov    rax,QWORD PTR [rip+0xc3ee]        # 41a258 <memcpy@plt+0x177a8>
  40de6a:	test   rax,rax
  40de6d:	je     40de7e <memcpy@plt+0xb3ce>
  40de6f:	mov    rax,QWORD PTR [rip+0xc3e2]        # 41a258 <memcpy@plt+0x177a8>
  40de76:	mov    rdi,rax
  40de79:	call   402850 <rb_close@plt>
  40de7e:	mov    QWORD PTR [rip+0xc3cf],0x0        # 41a258 <memcpy@plt+0x177a8>
  40de89:	mov    rax,QWORD PTR [rip+0xc3c8]        # 41a258 <memcpy@plt+0x177a8>
  40de90:	mov    QWORD PTR [rip+0xc301],rax        # 41a198 <memcpy@plt+0x176e8>
  40de97:	mov    rax,0x41a270
  40de9e:	mov    rax,QWORD PTR [rax]
  40dea1:	lea    rdx,[rbp-0x20]
  40dea5:	mov    rsi,rdx
  40dea8:	mov    rdi,rax
  40deab:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40deb0:	jmp    40ded7 <memcpy@plt+0xb427>
  40deb2:	mov    rax,QWORD PTR [rbp-0x28]
  40deb6:	mov    rdi,rax
  40deb9:	call   40dbc4 <memcpy@plt+0xb114>
  40debe:	mov    rax,0x41a270
  40dec5:	mov    rax,QWORD PTR [rax]
  40dec8:	lea    rdx,[rbp-0x20]
  40decc:	mov    rsi,rdx
  40decf:	mov    rdi,rax
  40ded2:	call   402730 <rb_dictionary_foreach_next@plt>
  40ded7:	mov    rax,0x41a270
  40dede:	mov    rax,QWORD PTR [rax]
  40dee1:	lea    rdx,[rbp-0x20]
  40dee5:	mov    rsi,rdx
  40dee8:	mov    rdi,rax
  40deeb:	call   402690 <rb_dictionary_foreach_cur@plt>
  40def0:	mov    QWORD PTR [rbp-0x28],rax
  40def4:	cmp    QWORD PTR [rbp-0x28],0x0
  40def9:	jne    40deb2 <memcpy@plt+0xb402>
  40defb:	jmp    40df73 <memcpy@plt+0xb4c3>
  40defd:	movzx  eax,BYTE PTR [rip+0xc1dc]        # 41a0e0 <memcpy@plt+0x17630>
  40df04:	test   al,al
  40df06:	je     40df38 <memcpy@plt+0xb488>
  40df08:	movzx  eax,WORD PTR [rip+0xc207]        # 41a116 <memcpy@plt+0x17666>
  40df0f:	test   ax,ax
  40df12:	je     40df38 <memcpy@plt+0xb488>
  40df14:	mov    rax,QWORD PTR [rip+0xc27d]        # 41a198 <memcpy@plt+0x176e8>
  40df1b:	test   rax,rax
  40df1e:	jne    40df38 <memcpy@plt+0xb488>
  40df20:	movzx  eax,WORD PTR [rip+0xc1ef]        # 41a116 <memcpy@plt+0x17666>
  40df27:	movzx  eax,ax
  40df2a:	mov    esi,eax
  40df2c:	lea    rdi,[rip+0xc1ad]        # 41a0e0 <memcpy@plt+0x17630>
  40df33:	call   40d341 <memcpy@plt+0xa891>
  40df38:	movzx  eax,BYTE PTR [rip+0xc261]        # 41a1a0 <memcpy@plt+0x176f0>
  40df3f:	test   al,al
  40df41:	je     40df73 <memcpy@plt+0xb4c3>
  40df43:	movzx  eax,WORD PTR [rip+0xc28c]        # 41a1d6 <memcpy@plt+0x17726>
  40df4a:	test   ax,ax
  40df4d:	je     40df73 <memcpy@plt+0xb4c3>
  40df4f:	mov    rax,QWORD PTR [rip+0xc302]        # 41a258 <memcpy@plt+0x177a8>
  40df56:	test   rax,rax
  40df59:	jne    40df73 <memcpy@plt+0xb4c3>
  40df5b:	movzx  eax,WORD PTR [rip+0xc274]        # 41a1d6 <memcpy@plt+0x17726>
  40df62:	movzx  eax,ax
  40df65:	mov    esi,eax
  40df67:	lea    rdi,[rip+0xc232]        # 41a1a0 <memcpy@plt+0x176f0>
  40df6e:	call   40d341 <memcpy@plt+0xa891>
  40df73:	movzx  eax,BYTE PTR [rbp-0x29]
  40df77:	mov    BYTE PTR [rip+0xc15b],al        # 41a0d8 <memcpy@plt+0x17628>
  40df7d:	nop
  40df7e:	mov    rax,QWORD PTR [rbp-0x8]
  40df82:	xor    rax,QWORD PTR fs:0x28
  40df8b:	je     40df92 <memcpy@plt+0xb4e2>
  40df8d:	call   402950 <__stack_chk_fail@plt>
  40df92:	leave  
  40df93:	ret    
  40df94:	endbr64 
  40df98:	push   rbp
  40df99:	mov    rbp,rsp
  40df9c:	sub    rsp,0x30
  40dfa0:	mov    QWORD PTR [rbp-0x18],rdi
  40dfa4:	mov    DWORD PTR [rbp-0x1c],esi
  40dfa7:	mov    QWORD PTR [rbp-0x28],rdx
  40dfab:	mov    rax,QWORD PTR [rbp-0x28]
  40dfaf:	mov    rax,QWORD PTR [rax]
  40dfb2:	mov    QWORD PTR [rbp-0x8],rax
  40dfb6:	mov    rax,QWORD PTR [rbp-0x28]
  40dfba:	add    rax,0x8
  40dfbe:	mov    rax,QWORD PTR [rax]
  40dfc1:	mov    rdi,rax
  40dfc4:	call   402880 <atoi@plt>
  40dfc9:	mov    DWORD PTR [rbp-0xc],eax
  40dfcc:	cmp    DWORD PTR [rbp-0xc],0xffff
  40dfd3:	jg     40dfdb <memcpy@plt+0xb52b>
  40dfd5:	cmp    DWORD PTR [rbp-0xc],0x0
  40dfd9:	jg     40e013 <memcpy@plt+0xb563>
  40dfdb:	mov    rax,QWORD PTR [rbp-0x28]
  40dfdf:	add    rax,0x8
  40dfe3:	mov    rdx,QWORD PTR [rax]
  40dfe6:	mov    rax,QWORD PTR [rbp-0x28]
  40dfea:	mov    rax,QWORD PTR [rax]
  40dfed:	mov    rcx,rdx
  40dff0:	mov    rdx,rax
  40dff3:	lea    rsi,[rip+0x21be]        # 4101b8 <memcpy@plt+0xd708>
  40dffa:	mov    edi,0x43
  40dfff:	mov    eax,0x0
  40e004:	call   403c26 <memcpy@plt+0x1176>
  40e009:	mov    edi,0x3
  40e00e:	call   402630 <exit@plt>
  40e013:	mov    eax,DWORD PTR [rbp-0xc]
  40e016:	movzx  edx,ax
  40e019:	mov    rax,QWORD PTR [rbp-0x8]
  40e01d:	mov    esi,edx
  40e01f:	mov    rdi,rax
  40e022:	call   40d341 <memcpy@plt+0xa891>
  40e027:	nop
  40e028:	leave  
  40e029:	ret    
  40e02a:	endbr64 
  40e02e:	push   rbp
  40e02f:	mov    rbp,rsp
  40e032:	sub    rsp,0x30
  40e036:	mov    QWORD PTR [rbp-0x18],rdi
  40e03a:	mov    DWORD PTR [rbp-0x1c],esi
  40e03d:	mov    QWORD PTR [rbp-0x28],rdx
  40e041:	mov    rax,QWORD PTR [rbp-0x28]
  40e045:	add    rax,0x8
  40e049:	mov    rax,QWORD PTR [rax]
  40e04c:	mov    rdi,rax
  40e04f:	call   402880 <atoi@plt>
  40e054:	mov    DWORD PTR [rbp-0xc],eax
  40e057:	mov    edi,0x38
  40e05c:	call   40c0e2 <memcpy@plt+0x9632>
  40e061:	mov    QWORD PTR [rbp-0x8],rax
  40e065:	cmp    DWORD PTR [rbp-0xc],0x0
  40e069:	jle    40e074 <memcpy@plt+0xb5c4>
  40e06b:	cmp    DWORD PTR [rbp-0xc],0xffff
  40e072:	jle    40e0ac <memcpy@plt+0xb5fc>
  40e074:	mov    rax,QWORD PTR [rbp-0x28]
  40e078:	add    rax,0x8
  40e07c:	mov    rdx,QWORD PTR [rax]
  40e07f:	mov    rax,QWORD PTR [rbp-0x28]
  40e083:	mov    rax,QWORD PTR [rax]
  40e086:	mov    rcx,rdx
  40e089:	mov    rdx,rax
  40e08c:	lea    rsi,[rip+0x2145]        # 4101d8 <memcpy@plt+0xd728>
  40e093:	mov    edi,0x43
  40e098:	mov    eax,0x0
  40e09d:	call   403c26 <memcpy@plt+0x1176>
  40e0a2:	mov    edi,0x3
  40e0a7:	call   402630 <exit@plt>
  40e0ac:	mov    eax,DWORD PTR [rbp-0xc]
  40e0af:	mov    edx,eax
  40e0b1:	mov    rax,QWORD PTR [rbp-0x8]
  40e0b5:	mov    WORD PTR [rax+0x14],dx
  40e0b9:	mov    rax,QWORD PTR [rbp-0x28]
  40e0bd:	mov    rax,QWORD PTR [rax]
  40e0c0:	mov    rdi,rax
  40e0c3:	call   40c3a0 <memcpy@plt+0x98f0>
  40e0c8:	mov    edx,eax
  40e0ca:	mov    rax,QWORD PTR [rbp-0x8]
  40e0ce:	mov    DWORD PTR [rax+0x10],edx
  40e0d1:	mov    rax,QWORD PTR [rbp-0x8]
  40e0d5:	mov    eax,DWORD PTR [rax+0x10]
  40e0d8:	cmp    eax,0x2
  40e0db:	je     40e149 <memcpy@plt+0xb699>
  40e0dd:	cmp    eax,0x2
  40e0e0:	ja     40e0ec <memcpy@plt+0xb63c>
  40e0e2:	cmp    eax,0x1
  40e0e5:	je     40e103 <memcpy@plt+0xb653>
  40e0e7:	jmp    40e215 <memcpy@plt+0xb765>
  40e0ec:	cmp    eax,0x3
  40e0ef:	je     40e18f <memcpy@plt+0xb6df>
  40e0f5:	cmp    eax,0x4
  40e0f8:	je     40e1d2 <memcpy@plt+0xb722>
  40e0fe:	jmp    40e215 <memcpy@plt+0xb765>
  40e103:	mov    rax,QWORD PTR [rbp-0x8]
  40e107:	movzx  eax,WORD PTR [rax+0x14]
  40e10b:	movzx  edx,ax
  40e10e:	mov    rax,QWORD PTR [rbp-0x8]
  40e112:	mov    ecx,edx
  40e114:	lea    rdx,[rip+0x20e2]        # 4101fd <memcpy@plt+0xd74d>
  40e11b:	mov    esi,0x10
  40e120:	mov    rdi,rax
  40e123:	mov    eax,0x0
  40e128:	call   4025d0 <snprintf@plt>
  40e12d:	mov    rax,QWORD PTR [rbp-0x8]
  40e131:	mov    BYTE PTR [rax+0x16],0x0
  40e135:	mov    rax,QWORD PTR [rbp-0x8]
  40e139:	lea    rdx,[rip+0xffffffffffffe9b3]        # 40caf3 <memcpy@plt+0xa043>
  40e140:	mov    QWORD PTR [rax+0x18],rdx
  40e144:	jmp    40e24c <memcpy@plt+0xb79c>
  40e149:	mov    rax,QWORD PTR [rbp-0x8]
  40e14d:	movzx  eax,WORD PTR [rax+0x14]
  40e151:	movzx  edx,ax
  40e154:	mov    rax,QWORD PTR [rbp-0x8]
  40e158:	mov    ecx,edx
  40e15a:	lea    rdx,[rip+0x20a7]        # 410208 <memcpy@plt+0xd758>
  40e161:	mov    esi,0x10
  40e166:	mov    rdi,rax
  40e169:	mov    eax,0x0
  40e16e:	call   4025d0 <snprintf@plt>
  40e173:	mov    rax,QWORD PTR [rbp-0x8]
  40e177:	mov    BYTE PTR [rax+0x16],0x0
  40e17b:	mov    rax,QWORD PTR [rbp-0x8]
  40e17f:	lea    rdx,[rip+0xffffffffffffea63]        # 40cbe9 <memcpy@plt+0xa139>
  40e186:	mov    QWORD PTR [rax+0x18],rdx
  40e18a:	jmp    40e24c <memcpy@plt+0xb79c>
  40e18f:	mov    rax,QWORD PTR [rbp-0x8]
  40e193:	movzx  eax,WORD PTR [rax+0x14]
  40e197:	movzx  edx,ax
  40e19a:	mov    rax,QWORD PTR [rbp-0x8]
  40e19e:	mov    ecx,edx
  40e1a0:	lea    rdx,[rip+0x206c]        # 410213 <memcpy@plt+0xd763>
  40e1a7:	mov    esi,0x10
  40e1ac:	mov    rdi,rax
  40e1af:	mov    eax,0x0
  40e1b4:	call   4025d0 <snprintf@plt>
  40e1b9:	mov    rax,QWORD PTR [rbp-0x8]
  40e1bd:	mov    BYTE PTR [rax+0x16],0x0
  40e1c1:	mov    rax,QWORD PTR [rbp-0x8]
  40e1c5:	lea    rdx,[rip+0xffffffffffffeba2]        # 40cd6e <memcpy@plt+0xa2be>
  40e1cc:	mov    QWORD PTR [rax+0x18],rdx
  40e1d0:	jmp    40e24c <memcpy@plt+0xb79c>
  40e1d2:	mov    rax,QWORD PTR [rbp-0x8]
  40e1d6:	movzx  eax,WORD PTR [rax+0x14]
  40e1da:	movzx  edx,ax
  40e1dd:	mov    rax,QWORD PTR [rbp-0x8]
  40e1e1:	mov    ecx,edx
  40e1e3:	lea    rdx,[rip+0x2039]        # 410223 <memcpy@plt+0xd773>
  40e1ea:	mov    esi,0x10
  40e1ef:	mov    rdi,rax
  40e1f2:	mov    eax,0x0
  40e1f7:	call   4025d0 <snprintf@plt>
  40e1fc:	mov    rax,QWORD PTR [rbp-0x8]
  40e200:	lea    rdx,[rip+0xffffffffffffeb67]        # 40cd6e <memcpy@plt+0xa2be>
  40e207:	mov    QWORD PTR [rax+0x18],rdx
  40e20b:	mov    rax,QWORD PTR [rbp-0x8]
  40e20f:	mov    BYTE PTR [rax+0x16],0x1
  40e213:	jmp    40e24c <memcpy@plt+0xb79c>
  40e215:	mov    rax,QWORD PTR [rbp-0x8]
  40e219:	movzx  eax,WORD PTR [rax+0x14]
  40e21d:	movzx  edx,ax
  40e220:	mov    rax,QWORD PTR [rbp-0x28]
  40e224:	mov    rax,QWORD PTR [rax]
  40e227:	mov    ecx,edx
  40e229:	mov    rdx,rax
  40e22c:	lea    rsi,[rip+0x2005]        # 410238 <memcpy@plt+0xd788>
  40e233:	mov    edi,0x43
  40e238:	mov    eax,0x0
  40e23d:	call   403c26 <memcpy@plt+0x1176>
  40e242:	mov    edi,0x3
  40e247:	call   402630 <exit@plt>
  40e24c:	mov    rax,QWORD PTR [rbp-0x8]
  40e250:	movzx  eax,WORD PTR [rax+0x14]
  40e254:	movzx  edx,ax
  40e257:	mov    rax,QWORD PTR [rbp-0x8]
  40e25b:	mov    eax,DWORD PTR [rax+0x10]
  40e25e:	mov    esi,edx
  40e260:	mov    edi,eax
  40e262:	call   40c42b <memcpy@plt+0x997b>
  40e267:	test   rax,rax
  40e26a:	je     40e2a7 <memcpy@plt+0xb7f7>
  40e26c:	mov    rax,QWORD PTR [rbp-0x8]
  40e270:	movzx  eax,WORD PTR [rax+0x14]
  40e274:	movzx  edx,ax
  40e277:	mov    rax,QWORD PTR [rbp-0x28]
  40e27b:	mov    rax,QWORD PTR [rax]
  40e27e:	mov    ecx,edx
  40e280:	mov    rdx,rax
  40e283:	lea    rsi,[rip+0x1fde]        # 410268 <memcpy@plt+0xd7b8>
  40e28a:	mov    edi,0x43
  40e28f:	mov    eax,0x0
  40e294:	call   403c26 <memcpy@plt+0x1176>
  40e299:	mov    rax,QWORD PTR [rbp-0x8]
  40e29d:	mov    rdi,rax
  40e2a0:	call   40c11e <memcpy@plt+0x966e>
  40e2a5:	jmp    40e2c5 <memcpy@plt+0xb815>
  40e2a7:	mov    rax,QWORD PTR [rbp-0x8]
  40e2ab:	lea    rcx,[rax+0x20]
  40e2af:	mov    rax,QWORD PTR [rbp-0x8]
  40e2b3:	lea    rdx,[rip+0xbe06]        # 41a0c0 <memcpy@plt+0x17610>
  40e2ba:	mov    rsi,rcx
  40e2bd:	mov    rdi,rax
  40e2c0:	call   40beea <memcpy@plt+0x943a>
  40e2c5:	leave  
  40e2c6:	ret    
  40e2c7:	endbr64 
  40e2cb:	push   rbp
  40e2cc:	mov    rbp,rsp
  40e2cf:	sub    rsp,0x70
  40e2d3:	mov    QWORD PTR [rbp-0x58],rdi
  40e2d7:	mov    DWORD PTR [rbp-0x5c],esi
  40e2da:	mov    QWORD PTR [rbp-0x68],rdx
  40e2de:	mov    rax,QWORD PTR fs:0x28
  40e2e7:	mov    QWORD PTR [rbp-0x8],rax
  40e2eb:	xor    eax,eax
  40e2ed:	mov    rax,QWORD PTR [rbp-0x68]
  40e2f1:	mov    rax,QWORD PTR [rax]
  40e2f4:	mov    rdi,rax
  40e2f7:	call   40c3a0 <memcpy@plt+0x98f0>
  40e2fc:	mov    DWORD PTR [rbp-0x50],eax
  40e2ff:	mov    rax,QWORD PTR [rbp-0x68]
  40e303:	add    rax,0x8
  40e307:	mov    rax,QWORD PTR [rax]
  40e30a:	mov    rdi,rax
  40e30d:	call   402880 <atoi@plt>
  40e312:	mov    DWORD PTR [rbp-0x4c],eax
  40e315:	cmp    DWORD PTR [rbp-0x4c],0x0
  40e319:	jle    40e324 <memcpy@plt+0xb874>
  40e31b:	cmp    DWORD PTR [rbp-0x4c],0xffff
  40e322:	jle    40e35c <memcpy@plt+0xb8ac>
  40e324:	mov    rax,QWORD PTR [rbp-0x68]
  40e328:	add    rax,0x8
  40e32c:	mov    rdx,QWORD PTR [rax]
  40e32f:	mov    rax,QWORD PTR [rbp-0x68]
  40e333:	mov    rax,QWORD PTR [rax]
  40e336:	mov    rcx,rdx
  40e339:	mov    rdx,rax
  40e33c:	lea    rsi,[rip+0x1f55]        # 410298 <memcpy@plt+0xd7e8>
  40e343:	mov    edi,0x43
  40e348:	mov    eax,0x0
  40e34d:	call   403c26 <memcpy@plt+0x1176>
  40e352:	mov    edi,0x3
  40e357:	call   402630 <exit@plt>
  40e35c:	cmp    DWORD PTR [rbp-0x50],0x0
  40e360:	jne    40e391 <memcpy@plt+0xb8e1>
  40e362:	mov    rax,QWORD PTR [rbp-0x68]
  40e366:	mov    rax,QWORD PTR [rax]
  40e369:	mov    edx,DWORD PTR [rbp-0x4c]
  40e36c:	mov    ecx,edx
  40e36e:	mov    rdx,rax
  40e371:	lea    rsi,[rip+0x1f50]        # 4102c8 <memcpy@plt+0xd818>
  40e378:	mov    edi,0x43
  40e37d:	mov    eax,0x0
  40e382:	call   403c26 <memcpy@plt+0x1176>
  40e387:	mov    edi,0x3
  40e38c:	call   402630 <exit@plt>
  40e391:	mov    eax,DWORD PTR [rbp-0x4c]
  40e394:	movzx  edx,ax
  40e397:	mov    eax,DWORD PTR [rbp-0x50]
  40e39a:	mov    esi,edx
  40e39c:	mov    edi,eax
  40e39e:	call   40c42b <memcpy@plt+0x997b>
  40e3a3:	mov    QWORD PTR [rbp-0x40],rax
  40e3a7:	cmp    QWORD PTR [rbp-0x40],0x0
  40e3ac:	jne    40e3dd <memcpy@plt+0xb92d>
  40e3ae:	mov    rax,QWORD PTR [rbp-0x68]
  40e3b2:	mov    rax,QWORD PTR [rax]
  40e3b5:	mov    edx,DWORD PTR [rbp-0x4c]
  40e3b8:	mov    ecx,edx
  40e3ba:	mov    rdx,rax
  40e3bd:	lea    rsi,[rip+0x1f3c]        # 410300 <memcpy@plt+0xd850>
  40e3c4:	mov    edi,0x43
  40e3c9:	mov    eax,0x0
  40e3ce:	call   403c26 <memcpy@plt+0x1176>
  40e3d3:	mov    edi,0x3
  40e3d8:	call   402630 <exit@plt>
  40e3dd:	mov    rax,0x41a270
  40e3e4:	mov    rax,QWORD PTR [rax]
  40e3e7:	lea    rdx,[rbp-0x20]
  40e3eb:	mov    rsi,rdx
  40e3ee:	mov    rdi,rax
  40e3f1:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40e3f6:	jmp    40e4f8 <memcpy@plt+0xba48>
  40e3fb:	mov    rax,0x415ec0
  40e402:	mov    edx,DWORD PTR [rax+0x18]
  40e405:	mov    rax,QWORD PTR [rbp-0x38]
  40e409:	mov    esi,edx
  40e40b:	mov    rdi,rax
  40e40e:	call   40c2de <memcpy@plt+0x982e>
  40e413:	mov    QWORD PTR [rbp-0x30],rax
  40e417:	cmp    QWORD PTR [rbp-0x30],0x0
  40e41c:	je     40e4de <memcpy@plt+0xba2e>
  40e422:	mov    rax,QWORD PTR [rbp-0x38]
  40e426:	mov    rdi,rax
  40e429:	call   40c149 <memcpy@plt+0x9699>
  40e42e:	mov    rax,QWORD PTR [rbp-0x30]
  40e432:	mov    rax,QWORD PTR [rax]
  40e435:	mov    QWORD PTR [rbp-0x48],rax
  40e439:	jmp    40e4c2 <memcpy@plt+0xba12>
  40e43e:	mov    rax,QWORD PTR [rbp-0x48]
  40e442:	mov    rax,QWORD PTR [rax]
  40e445:	mov    QWORD PTR [rbp-0x28],rax
  40e449:	mov    rax,QWORD PTR [rbp-0x28]
  40e44d:	mov    rax,QWORD PTR [rax+0x10]
  40e451:	movzx  edx,WORD PTR [rax+0x14]
  40e455:	mov    rax,QWORD PTR [rbp-0x40]
  40e459:	movzx  eax,WORD PTR [rax+0x14]
  40e45d:	cmp    dx,ax
  40e460:	jne    40e4b6 <memcpy@plt+0xba06>
  40e462:	mov    rax,QWORD PTR [rbp-0x28]
  40e466:	mov    rax,QWORD PTR [rax+0x10]
  40e46a:	mov    edx,DWORD PTR [rax+0x10]
  40e46d:	mov    rax,QWORD PTR [rbp-0x40]
  40e471:	mov    eax,DWORD PTR [rax+0x10]
  40e474:	cmp    edx,eax
  40e476:	jne    40e4b6 <memcpy@plt+0xba06>
  40e478:	mov    rax,QWORD PTR [rbp-0x30]
  40e47c:	mov    rdx,QWORD PTR [rbp-0x28]
  40e480:	add    rdx,0x20
  40e484:	mov    rsi,rax
  40e487:	mov    rdi,rdx
  40e48a:	call   40bfee <memcpy@plt+0x953e>
  40e48f:	mov    rax,QWORD PTR [rbp-0x28]
  40e493:	mov    rdi,rax
  40e496:	call   40c11e <memcpy@plt+0x966e>
  40e49b:	mov    rax,QWORD PTR [rbp-0x30]
  40e49f:	mov    rax,QWORD PTR [rax+0x10]
  40e4a3:	test   rax,rax
  40e4a6:	jne    40e4cf <memcpy@plt+0xba1f>
  40e4a8:	mov    rax,QWORD PTR [rbp-0x38]
  40e4ac:	mov    rdi,rax
  40e4af:	call   40dbc4 <memcpy@plt+0xb114>
  40e4b4:	jmp    40e4cf <memcpy@plt+0xba1f>
  40e4b6:	mov    rax,QWORD PTR [rbp-0x48]
  40e4ba:	mov    rax,QWORD PTR [rax+0x10]
  40e4be:	mov    QWORD PTR [rbp-0x48],rax
  40e4c2:	cmp    QWORD PTR [rbp-0x48],0x0
  40e4c7:	jne    40e43e <memcpy@plt+0xb98e>
  40e4cd:	jmp    40e4d0 <memcpy@plt+0xba20>
  40e4cf:	nop
  40e4d0:	mov    rax,QWORD PTR [rbp-0x38]
  40e4d4:	mov    rdi,rax
  40e4d7:	call   40c16b <memcpy@plt+0x96bb>
  40e4dc:	jmp    40e4df <memcpy@plt+0xba2f>
  40e4de:	nop
  40e4df:	mov    rax,0x41a270
  40e4e6:	mov    rax,QWORD PTR [rax]
  40e4e9:	lea    rdx,[rbp-0x20]
  40e4ed:	mov    rsi,rdx
  40e4f0:	mov    rdi,rax
  40e4f3:	call   402730 <rb_dictionary_foreach_next@plt>
  40e4f8:	mov    rax,0x41a270
  40e4ff:	mov    rax,QWORD PTR [rax]
  40e502:	lea    rdx,[rbp-0x20]
  40e506:	mov    rsi,rdx
  40e509:	mov    rdi,rax
  40e50c:	call   402690 <rb_dictionary_foreach_cur@plt>
  40e511:	mov    QWORD PTR [rbp-0x38],rax
  40e515:	cmp    QWORD PTR [rbp-0x38],0x0
  40e51a:	jne    40e3fb <memcpy@plt+0xb94b>
  40e520:	mov    rax,QWORD PTR [rbp-0x40]
  40e524:	add    rax,0x20
  40e528:	lea    rsi,[rip+0xbb91]        # 41a0c0 <memcpy@plt+0x17610>
  40e52f:	mov    rdi,rax
  40e532:	call   40bfee <memcpy@plt+0x953e>
  40e537:	mov    rax,QWORD PTR [rbp-0x40]
  40e53b:	mov    rdi,rax
  40e53e:	call   40c11e <memcpy@plt+0x966e>
  40e543:	mov    rax,QWORD PTR [rip+0xbb86]        # 41a0d0 <memcpy@plt+0x17620>
  40e54a:	test   rax,rax
  40e54d:	jne    40e556 <memcpy@plt+0xbaa6>
  40e54f:	mov    BYTE PTR [rip+0xbb82],0x0        # 41a0d8 <memcpy@plt+0x17628>
  40e556:	nop
  40e557:	mov    rax,QWORD PTR [rbp-0x8]
  40e55b:	xor    rax,QWORD PTR fs:0x28
  40e564:	je     40e56b <memcpy@plt+0xbabb>
  40e566:	call   402950 <__stack_chk_fail@plt>
  40e56b:	leave  
  40e56c:	ret    
  40e56d:	endbr64 
  40e571:	push   rbp
  40e572:	mov    rbp,rsp
  40e575:	sub    rsp,0x60
  40e579:	mov    QWORD PTR [rbp-0x48],rdi
  40e57d:	mov    DWORD PTR [rbp-0x4c],esi
  40e580:	mov    QWORD PTR [rbp-0x58],rdx
  40e584:	mov    rax,QWORD PTR fs:0x28
  40e58d:	mov    QWORD PTR [rbp-0x8],rax
  40e591:	xor    eax,eax
  40e593:	mov    rax,QWORD PTR [rip+0xbb26]        # 41a0c0 <memcpy@plt+0x17610>
  40e59a:	mov    QWORD PTR [rbp-0x38],rax
  40e59e:	cmp    QWORD PTR [rbp-0x38],0x0
  40e5a3:	je     40e5af <memcpy@plt+0xbaff>
  40e5a5:	mov    rax,QWORD PTR [rbp-0x38]
  40e5a9:	mov    rax,QWORD PTR [rax+0x10]
  40e5ad:	jmp    40e5b4 <memcpy@plt+0xbb04>
  40e5af:	mov    eax,0x0
  40e5b4:	mov    QWORD PTR [rbp-0x30],rax
  40e5b8:	jmp    40e5fe <memcpy@plt+0xbb4e>
  40e5ba:	mov    rax,QWORD PTR [rbp-0x38]
  40e5be:	mov    rax,QWORD PTR [rax]
  40e5c1:	mov    rdi,rax
  40e5c4:	call   40c11e <memcpy@plt+0x966e>
  40e5c9:	mov    rax,QWORD PTR [rbp-0x38]
  40e5cd:	lea    rsi,[rip+0xbaec]        # 41a0c0 <memcpy@plt+0x17610>
  40e5d4:	mov    rdi,rax
  40e5d7:	call   40bfee <memcpy@plt+0x953e>
  40e5dc:	mov    rax,QWORD PTR [rbp-0x30]
  40e5e0:	mov    QWORD PTR [rbp-0x38],rax
  40e5e4:	cmp    QWORD PTR [rbp-0x38],0x0
  40e5e9:	je     40e5f5 <memcpy@plt+0xbb45>
  40e5eb:	mov    rax,QWORD PTR [rbp-0x38]
  40e5ef:	mov    rax,QWORD PTR [rax+0x10]
  40e5f3:	jmp    40e5fa <memcpy@plt+0xbb4a>
  40e5f5:	mov    eax,0x0
  40e5fa:	mov    QWORD PTR [rbp-0x30],rax
  40e5fe:	cmp    QWORD PTR [rbp-0x38],0x0
  40e603:	jne    40e5ba <memcpy@plt+0xbb0a>
  40e605:	mov    rax,0x41a270
  40e60c:	mov    rax,QWORD PTR [rax]
  40e60f:	lea    rdx,[rbp-0x20]
  40e613:	mov    rsi,rdx
  40e616:	mov    rdi,rax
  40e619:	call   4027a0 <rb_dictionary_foreach_start@plt>
  40e61e:	jmp    40e645 <memcpy@plt+0xbb95>
  40e620:	mov    rax,QWORD PTR [rbp-0x28]
  40e624:	mov    rdi,rax
  40e627:	call   40dbc4 <memcpy@plt+0xb114>
  40e62c:	mov    rax,0x41a270
  40e633:	mov    rax,QWORD PTR [rax]
  40e636:	lea    rdx,[rbp-0x20]
  40e63a:	mov    rsi,rdx
  40e63d:	mov    rdi,rax
  40e640:	call   402730 <rb_dictionary_foreach_next@plt>
  40e645:	mov    rax,0x41a270
  40e64c:	mov    rax,QWORD PTR [rax]
  40e64f:	lea    rdx,[rbp-0x20]
  40e653:	mov    rsi,rdx
  40e656:	mov    rdi,rax
  40e659:	call   402690 <rb_dictionary_foreach_cur@plt>
  40e65e:	mov    QWORD PTR [rbp-0x28],rax
  40e662:	cmp    QWORD PTR [rbp-0x28],0x0
  40e667:	jne    40e620 <memcpy@plt+0xbb70>
  40e669:	mov    BYTE PTR [rip+0xba68],0x0        # 41a0d8 <memcpy@plt+0x17628>
  40e670:	nop
  40e671:	mov    rax,QWORD PTR [rbp-0x8]
  40e675:	xor    rax,QWORD PTR fs:0x28
  40e67e:	je     40e685 <memcpy@plt+0xbbd5>
  40e680:	call   402950 <__stack_chk_fail@plt>
  40e685:	leave  
  40e686:	ret    
  40e687:	endbr64 
  40e68b:	push   rbp
  40e68c:	mov    rbp,rsp
  40e68f:	sub    rsp,0x20
  40e693:	mov    QWORD PTR [rbp-0x8],rdi
  40e697:	mov    DWORD PTR [rbp-0xc],esi
  40e69a:	mov    QWORD PTR [rbp-0x18],rdx
  40e69e:	mov    rax,QWORD PTR [rip+0xbaf3]        # 41a198 <memcpy@plt+0x176e8>
  40e6a5:	test   rax,rax
  40e6a8:	je     40e6b9 <memcpy@plt+0xbc09>
  40e6aa:	mov    rax,QWORD PTR [rip+0xbae7]        # 41a198 <memcpy@plt+0x176e8>
  40e6b1:	mov    rdi,rax
  40e6b4:	call   402850 <rb_close@plt>
  40e6b9:	mov    rax,QWORD PTR [rip+0xbb98]        # 41a258 <memcpy@plt+0x177a8>
  40e6c0:	test   rax,rax
  40e6c3:	je     40e6d4 <memcpy@plt+0xbc24>
  40e6c5:	mov    rax,QWORD PTR [rip+0xbb8c]        # 41a258 <memcpy@plt+0x177a8>
  40e6cc:	mov    rdi,rax
  40e6cf:	call   402850 <rb_close@plt>
  40e6d4:	mov    edx,0x180
  40e6d9:	mov    esi,0x0
  40e6de:	lea    rdi,[rip+0xb9fb]        # 41a0e0 <memcpy@plt+0x17630>
  40e6e5:	call   402590 <memset@plt>
  40e6ea:	nop
  40e6eb:	leave  
  40e6ec:	ret    
  40e6ed:	nop    DWORD PTR [rax]
  40e6f0:	endbr64 
  40e6f4:	push   r15
  40e6f6:	lea    r15,[rip+0x56db]        # 413dd8 <memcpy@plt+0x11328>
  40e6fd:	push   r14
  40e6ff:	mov    r14,rdx
  40e702:	push   r13
  40e704:	mov    r13,rsi
  40e707:	push   r12
  40e709:	mov    r12d,edi
  40e70c:	push   rbp
  40e70d:	lea    rbp,[rip+0x56cc]        # 413de0 <memcpy@plt+0x11330>
  40e714:	push   rbx
  40e715:	sub    rbp,r15
  40e718:	sub    rsp,0x8
  40e71c:	call   402000 <rb_strcasecmp@plt-0x570>
  40e721:	sar    rbp,0x3
  40e725:	je     40e746 <memcpy@plt+0xbc96>
  40e727:	xor    ebx,ebx
  40e729:	nop    DWORD PTR [rax+0x0]
  40e730:	mov    rdx,r14
  40e733:	mov    rsi,r13
  40e736:	mov    edi,r12d
  40e739:	call   QWORD PTR [r15+rbx*8]
  40e73d:	add    rbx,0x1
  40e741:	cmp    rbp,rbx
  40e744:	jne    40e730 <memcpy@plt+0xbc80>
  40e746:	add    rsp,0x8
  40e74a:	pop    rbx
  40e74b:	pop    rbp
  40e74c:	pop    r12
  40e74e:	pop    r13
  40e750:	pop    r14
  40e752:	pop    r15
  40e754:	ret    
  40e755:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e760:	endbr64 
  40e764:	ret    

Disassembly of section .fini:

000000000040e768 <.fini>:
  40e768:	endbr64 
  40e76c:	sub    rsp,0x8
  40e770:	add    rsp,0x8
  40e774:	ret    
