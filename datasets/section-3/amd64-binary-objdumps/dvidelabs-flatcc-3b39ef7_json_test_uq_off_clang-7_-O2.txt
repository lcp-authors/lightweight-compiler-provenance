
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x3afe1]        # 440ff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <free@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <free@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x3afe2]        # 441008 <flatcc_builder_padding_base@@Base+0xa468>
  406026:	jmp    QWORD PTR [rip+0x3afe4]        # 441010 <flatcc_builder_padding_base@@Base+0xa470>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <free@plt>:
  406030:	jmp    QWORD PTR [rip+0x3afe2]        # 441018 <free@GLIBC_2.2.5>
  406036:	push   0x0
  40603b:	jmp    406020 <free@plt-0x10>

0000000000406040 <strncpy@plt>:
  406040:	jmp    QWORD PTR [rip+0x3afda]        # 441020 <strncpy@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <free@plt-0x10>

0000000000406050 <strtod@plt>:
  406050:	jmp    QWORD PTR [rip+0x3afd2]        # 441028 <strtod@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <free@plt-0x10>

0000000000406060 <strlen@plt>:
  406060:	jmp    QWORD PTR [rip+0x3afca]        # 441030 <strlen@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <free@plt-0x10>

0000000000406070 <__assert_fail@plt>:
  406070:	jmp    QWORD PTR [rip+0x3afc2]        # 441038 <__assert_fail@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <free@plt-0x10>

0000000000406080 <memset@plt>:
  406080:	jmp    QWORD PTR [rip+0x3afba]        # 441040 <memset@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <free@plt-0x10>

0000000000406090 <fputc@plt>:
  406090:	jmp    QWORD PTR [rip+0x3afb2]        # 441048 <fputc@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <free@plt-0x10>

00000000004060a0 <memchr@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x3afaa]        # 441050 <memchr@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <free@plt-0x10>

00000000004060b0 <memcmp@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x3afa2]        # 441058 <memcmp@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <free@plt-0x10>

00000000004060c0 <strcmp@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x3af9a]        # 441060 <strcmp@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <free@plt-0x10>

00000000004060d0 <fprintf@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x3af92]        # 441068 <fprintf@GLIBC_2.2.5>
  4060d6:	push   0xa
  4060db:	jmp    406020 <free@plt-0x10>

00000000004060e0 <memcpy@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x3af8a]        # 441070 <memcpy@GLIBC_2.14>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <free@plt-0x10>

00000000004060f0 <malloc@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x3af82]        # 441078 <malloc@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <free@plt-0x10>

0000000000406100 <realloc@plt>:
  406100:	jmp    QWORD PTR [rip+0x3af7a]        # 441080 <realloc@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <free@plt-0x10>

0000000000406110 <memmove@plt>:
  406110:	jmp    QWORD PTR [rip+0x3af72]        # 441088 <memmove@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <free@plt-0x10>

0000000000406120 <sprintf@plt>:
  406120:	jmp    QWORD PTR [rip+0x3af6a]        # 441090 <sprintf@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <free@plt-0x10>

0000000000406130 <fwrite@plt>:
  406130:	jmp    QWORD PTR [rip+0x3af62]        # 441098 <fwrite@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <free@plt-0x10>

0000000000406140 <posix_memalign@plt>:
  406140:	jmp    QWORD PTR [rip+0x3af5a]        # 4410a0 <posix_memalign@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <free@plt-0x10>

Disassembly of section .text:

0000000000406150 <_start@@Base>:
  406150:	endbr64 
  406154:	xor    ebp,ebp
  406156:	mov    r9,rdx
  406159:	pop    rsi
  40615a:	mov    rdx,rsp
  40615d:	and    rsp,0xfffffffffffffff0
  406161:	push   rax
  406162:	push   rsp
  406163:	mov    r8,0x432990
  40616a:	mov    rcx,0x432920
  406171:	mov    rdi,0x406e20
  406178:	call   QWORD PTR [rip+0x3ae6a]        # 440fe8 <__libc_start_main@GLIBC_2.2.5>
  40617e:	hlt    
  40617f:	nop
  406180:	endbr64 
  406184:	ret    
  406185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40618f:	nop
  406190:	mov    eax,0x4417b8
  406195:	cmp    rax,0x4417b8
  40619b:	je     4061b0 <_start@@Base+0x60>
  40619d:	mov    eax,0x0
  4061a2:	test   rax,rax
  4061a5:	je     4061b0 <_start@@Base+0x60>
  4061a7:	mov    edi,0x4417b8
  4061ac:	jmp    rax
  4061ae:	xchg   ax,ax
  4061b0:	ret    
  4061b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061bc:	nop    DWORD PTR [rax+0x0]
  4061c0:	mov    esi,0x4417b8
  4061c5:	sub    rsi,0x4417b8
  4061cc:	mov    rax,rsi
  4061cf:	shr    rsi,0x3f
  4061d3:	sar    rax,0x3
  4061d7:	add    rsi,rax
  4061da:	sar    rsi,1
  4061dd:	je     4061f0 <_start@@Base+0xa0>
  4061df:	mov    eax,0x0
  4061e4:	test   rax,rax
  4061e7:	je     4061f0 <_start@@Base+0xa0>
  4061e9:	mov    edi,0x4417b8
  4061ee:	jmp    rax
  4061f0:	ret    
  4061f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061fc:	nop    DWORD PTR [rax+0x0]
  406200:	endbr64 
  406204:	cmp    BYTE PTR [rip+0x3b5ad],0x0        # 4417b8 <__bss_start@@Base>
  40620b:	jne    406220 <_start@@Base+0xd0>
  40620d:	push   rbp
  40620e:	mov    rbp,rsp
  406211:	call   406190 <_start@@Base+0x40>
  406216:	mov    BYTE PTR [rip+0x3b59b],0x1        # 4417b8 <__bss_start@@Base>
  40621d:	pop    rbp
  40621e:	ret    
  40621f:	nop
  406220:	ret    
  406221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40622c:	nop    DWORD PTR [rax+0x0]
  406230:	endbr64 
  406234:	jmp    4061c0 <_start@@Base+0x70>
  406236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406240 <test_json@@Base>:
  406240:	push   rbp
  406241:	push   r15
  406243:	push   r14
  406245:	push   r13
  406247:	push   r12
  406249:	push   rbx
  40624a:	sub    rsp,0x258
  406251:	mov    ebp,r9d
  406254:	mov    r13d,r8d
  406257:	mov    r15d,ecx
  40625a:	mov    r12,rdx
  40625d:	mov    r14,rsi
  406260:	mov    rbx,rdi
  406263:	lea    rdi,[rsp+0xd0]
  40626b:	call   41ca90 <flatcc_builder_init@@Base>
  406270:	lea    rdi,[rsp+0x38]
  406275:	xor    esi,esi
  406277:	call   432600 <flatcc_json_printer_init_dynamic_buffer@@Base>
  40627c:	mov    eax,ebp
  40627e:	and    al,0x1
  406280:	mov    BYTE PTR [rsp+0x6a],al
  406284:	mov    eax,ebp
  406286:	shr    al,1
  406288:	and    al,0x1
  40628a:	mov    BYTE PTR [rsp+0x6b],al
  40628e:	mov    eax,ebp
  406290:	shr    al,0x2
  406293:	and    al,0x1
  406295:	mov    BYTE PTR [rsp+0x6c],al
  406299:	mov    eax,ebp
  40629b:	shr    al,0x3
  40629e:	and    al,0x1
  4062a0:	mov    BYTE PTR [rsp+0x6d],al
  4062a4:	test   bpl,0x10
  4062a8:	je     4062af <test_json@@Base+0x6f>
  4062aa:	mov    BYTE PTR [rsp+0x69],0x2
  4062af:	test   bpl,0x20
  4062b3:	je     4062c1 <test_json@@Base+0x81>
  4062b5:	mov    WORD PTR [rsp+0x69],0x102
  4062bc:	mov    BYTE PTR [rsp+0x6b],0x0
  4062c1:	mov    ebp,DWORD PTR [rsp+0x290]
  4062c8:	mov    rdi,r14
  4062cb:	call   406060 <strlen@plt>
  4062d0:	mov    r9,QWORD PTR [rbx]
  4062d3:	mov    rcx,QWORD PTR [rbx+0x8]
  4062d7:	mov    QWORD PTR [rsp],rcx
  4062db:	lea    rdi,[rsp+0xd0]
  4062e3:	lea    rsi,[rsp+0x90]
  4062eb:	mov    rdx,r14
  4062ee:	mov    rcx,rax
  4062f1:	mov    r8d,r13d
  4062f4:	call   426af0 <flatcc_json_parser_table_as_root@@Base>
  4062f9:	cmp    eax,r15d
  4062fc:	jne    4063bd <test_json@@Base+0x17d>
  406302:	xor    r14d,r14d
  406305:	test   r15d,r15d
  406308:	je     40630e <test_json@@Base+0xce>
  40630a:	xor    ebp,ebp
  40630c:	jmp    406389 <test_json@@Base+0x149>
  40630e:	mov    r13d,ebp
  406311:	lea    rdi,[rsp+0xd0]
  406319:	lea    rsi,[rsp+0x10]
  40631e:	call   421210 <flatcc_builder_finalize_aligned_buffer@@Base>
  406323:	mov    rbp,rax
  406326:	mov    rsi,QWORD PTR [rsp+0x10]
  40632b:	mov    rdx,QWORD PTR [rbx]
  40632e:	mov    rcx,QWORD PTR [rbx+0x18]
  406332:	mov    rdi,rax
  406335:	call   422670 <flatcc_verify_table_as_root@@Base>
  40633a:	test   eax,eax
  40633c:	jne    406489 <test_json@@Base+0x249>
  406342:	mov    rdx,QWORD PTR [rsp+0x10]
  406347:	mov    rcx,QWORD PTR [rbx]
  40634a:	mov    r8,QWORD PTR [rbx+0x10]
  40634e:	lea    rbx,[rsp+0x38]
  406353:	mov    rdi,rbx
  406356:	mov    rsi,rbp
  406359:	call   431e10 <flatcc_json_printer_table_as_root@@Base>
  40635e:	lea    rsi,[rsp+0x88]
  406366:	mov    rdi,rbx
  406369:	call   432720 <flatcc_json_printer_get_buffer@@Base>
  40636e:	mov    rbx,rax
  406371:	test   rax,rax
  406374:	je     4063fb <test_json@@Base+0x1bb>
  40637a:	mov    rdi,r12
  40637d:	mov    rsi,rbx
  406380:	call   4060c0 <strcmp@plt>
  406385:	test   eax,eax
  406387:	jne    4063fb <test_json@@Base+0x1bb>
  406389:	mov    rdi,rbp
  40638c:	call   421340 <flatcc_builder_aligned_free@@Base>
  406391:	lea    rdi,[rsp+0xd0]
  406399:	call   41ce50 <flatcc_builder_clear@@Base>
  40639e:	lea    rdi,[rsp+0x38]
  4063a3:	call   4327a0 <flatcc_json_printer_clear@@Base>
  4063a8:	mov    eax,r14d
  4063ab:	add    rsp,0x258
  4063b2:	pop    rbx
  4063b3:	pop    r12
  4063b5:	pop    r13
  4063b7:	pop    r14
  4063b9:	pop    r15
  4063bb:	pop    rbp
  4063bc:	ret    
  4063bd:	test   r15d,r15d
  4063c0:	je     406458 <test_json@@Base+0x218>
  4063c6:	mov    r12d,ebp
  4063c9:	mov    rbp,QWORD PTR [rip+0x3ac28]        # 440ff8 <stderr@GLIBC_2.2.5>
  4063d0:	mov    rbx,QWORD PTR [rbp+0x0]
  4063d4:	test   eax,eax
  4063d6:	jne    4065ee <test_json@@Base+0x3ae>
  4063dc:	mov    edi,r15d
  4063df:	call   423600 <flatcc_json_parser_error_string@@Base>
  4063e4:	mov    rcx,rax
  4063e7:	lea    rsi,[rip+0x2d898]        # 433c86 <_IO_stdin_used@@Base+0xc86>
  4063ee:	xor    eax,eax
  4063f0:	mov    rdi,rbx
  4063f3:	mov    edx,r12d
  4063f6:	jmp    40647f <test_json@@Base+0x23f>
  4063fb:	mov    r15,QWORD PTR [rip+0x3abf6]        # 440ff8 <stderr@GLIBC_2.2.5>
  406402:	mov    rdi,QWORD PTR [r15]
  406405:	lea    rsi,[rip+0x2d96a]        # 433d76 <_IO_stdin_used@@Base+0xd76>
  40640c:	xor    eax,eax
  40640e:	mov    edx,r13d
  406411:	call   4060d0 <fprintf@plt>
  406416:	mov    rdi,QWORD PTR [r15]
  406419:	lea    r14,[rip+0x3039f]        # 4367bf <_IO_stdin_used@@Base+0x37bf>
  406420:	xor    eax,eax
  406422:	mov    rsi,r14
  406425:	mov    rdx,rbx
  406428:	call   4060d0 <fprintf@plt>
  40642d:	mov    rcx,QWORD PTR [r15]
  406430:	lea    rdi,[rip+0x2d974]        # 433dab <_IO_stdin_used@@Base+0xdab>
  406437:	mov    esi,0xa
  40643c:	mov    edx,0x1
  406441:	call   406130 <fwrite@plt>
  406446:	mov    rdi,QWORD PTR [r15]
  406449:	xor    eax,eax
  40644b:	mov    rsi,r14
  40644e:	mov    rdx,r12
  406451:	call   4060d0 <fprintf@plt>
  406456:	jmp    4064bb <test_json@@Base+0x27b>
  406458:	mov    r15d,ebp
  40645b:	mov    rbp,QWORD PTR [rip+0x3ab96]        # 440ff8 <stderr@GLIBC_2.2.5>
  406462:	mov    rbx,QWORD PTR [rbp+0x0]
  406466:	mov    edi,eax
  406468:	call   423600 <flatcc_json_parser_error_string@@Base>
  40646d:	mov    rcx,rax
  406470:	lea    rsi,[rip+0x2d84f]        # 433cc6 <_IO_stdin_used@@Base+0xcc6>
  406477:	xor    eax,eax
  406479:	mov    rdi,rbx
  40647c:	mov    edx,r15d
  40647f:	call   4060d0 <fprintf@plt>
  406484:	jmp    40662f <test_json@@Base+0x3ef>
  406489:	mov    rcx,QWORD PTR [rip+0x3ab68]        # 440ff8 <stderr@GLIBC_2.2.5>
  406490:	mov    r14,QWORD PTR [rcx]
  406493:	mov    edi,eax
  406495:	call   421af0 <flatcc_verify_error_string@@Base>
  40649a:	mov    rbx,rax
  40649d:	lea    rsi,[rip+0x2d846]        # 433cea <_IO_stdin_used@@Base+0xcea>
  4064a4:	lea    rdx,[rip+0x2d866]        # 433d11 <_IO_stdin_used@@Base+0xd11>
  4064ab:	xor    eax,eax
  4064ad:	mov    rdi,r14
  4064b0:	mov    ecx,r13d
  4064b3:	mov    r8,rbx
  4064b6:	call   4060d0 <fprintf@plt>
  4064bb:	mov    r14d,0xffffffff
  4064c1:	test   rbp,rbp
  4064c4:	je     40630a <test_json@@Base+0xca>
  4064ca:	mov    r15,QWORD PTR [rsp+0x10]
  4064cf:	mov    rax,QWORD PTR [rip+0x3ab22]        # 440ff8 <stderr@GLIBC_2.2.5>
  4064d6:	mov    rbx,QWORD PTR [rax]
  4064d9:	lea    rsi,[rip+0x302d8]        # 4367b8 <_IO_stdin_used@@Base+0x37b8>
  4064e0:	lea    rdx,[rip+0x2d8cf]        # 433db6 <_IO_stdin_used@@Base+0xdb6>
  4064e7:	xor    eax,eax
  4064e9:	mov    rdi,rbx
  4064ec:	call   4060d0 <fprintf@plt>
  4064f1:	test   r15d,r15d
  4064f4:	je     4065d3 <test_json@@Base+0x393>
  4064fa:	mov    QWORD PTR [rsp+0x18],r15
  4064ff:	mov    r15d,r15d
  406502:	xor    r13d,r13d
  406505:	mov    r12d,r13d
  406508:	and    r12d,0xf
  40650c:	test   r12d,r12d
  40650f:	jne    406542 <test_json@@Base+0x302>
  406511:	test   r13,r13
  406514:	je     40652c <test_json@@Base+0x2ec>
  406516:	xor    eax,eax
  406518:	mov    rdi,rbx
  40651b:	lea    rsi,[rip+0x3029b]        # 4367bd <_IO_stdin_used@@Base+0x37bd>
  406522:	lea    rdx,[rsp+0x20]
  406527:	call   4060d0 <fprintf@plt>
  40652c:	xor    eax,eax
  40652e:	mov    rdi,rbx
  406531:	lea    rsi,[rip+0x3028b]        # 4367c3 <_IO_stdin_used@@Base+0x37c3>
  406538:	mov    edx,r13d
  40653b:	call   4060d0 <fprintf@plt>
  406540:	jmp    406555 <test_json@@Base+0x315>
  406542:	test   r13b,0x7
  406546:	jne    406555 <test_json@@Base+0x315>
  406548:	mov    edi,0x20
  40654d:	mov    rsi,rbx
  406550:	call   406090 <fputc@plt>
  406555:	movzx  edx,BYTE PTR [rbp+r13*1+0x0]
  40655b:	xor    eax,eax
  40655d:	mov    rdi,rbx
  406560:	lea    rsi,[rip+0x30264]        # 4367cb <_IO_stdin_used@@Base+0x37cb>
  406567:	call   4060d0 <fprintf@plt>
  40656c:	movzx  eax,BYTE PTR [rbp+r13*1+0x0]
  406572:	mov    edx,eax
  406574:	add    dl,0xe0
  406577:	mov    cl,0x2e
  406579:	cmp    dl,0x5e
  40657c:	ja     406580 <test_json@@Base+0x340>
  40657e:	mov    ecx,eax
  406580:	mov    BYTE PTR [rsp+r12*1+0x20],cl
  406585:	mov    BYTE PTR [rsp+r12*1+0x21],0x0
  40658b:	add    r13,0x1
  40658f:	cmp    r15,r13
  406592:	jne    406505 <test_json@@Base+0x2c5>
  406598:	mov    r13,QWORD PTR [rsp+0x18]
  40659d:	test   r13b,0xf
  4065a1:	je     4065d3 <test_json@@Base+0x393>
  4065a3:	add    r13d,0x1
  4065a7:	lea    r12,[rip+0x30223]        # 4367d1 <_IO_stdin_used@@Base+0x37d1>
  4065ae:	mov    r15d,r13d
  4065b1:	mov    esi,0x3
  4065b6:	mov    edx,0x1
  4065bb:	mov    rdi,r12
  4065be:	mov    rcx,rbx
  4065c1:	call   406130 <fwrite@plt>
  4065c6:	add    r15d,0x1
  4065ca:	test   r13b,0xf
  4065ce:	mov    r13d,r15d
  4065d1:	jne    4065b1 <test_json@@Base+0x371>
  4065d3:	lea    rsi,[rip+0x301e3]        # 4367bd <_IO_stdin_used@@Base+0x37bd>
  4065da:	lea    rdx,[rsp+0x20]
  4065df:	xor    eax,eax
  4065e1:	mov    rdi,rbx
  4065e4:	call   4060d0 <fprintf@plt>
  4065e9:	jmp    406389 <test_json@@Base+0x149>
  4065ee:	mov    edi,eax
  4065f0:	call   423600 <flatcc_json_parser_error_string@@Base>
  4065f5:	mov    rcx,rax
  4065f8:	lea    rsi,[rip+0x2d661]        # 433c60 <_IO_stdin_used@@Base+0xc60>
  4065ff:	xor    eax,eax
  406601:	mov    rdi,rbx
  406604:	mov    edx,r12d
  406607:	call   4060d0 <fprintf@plt>
  40660c:	mov    rbx,QWORD PTR [rbp+0x0]
  406610:	mov    edi,r15d
  406613:	call   423600 <flatcc_json_parser_error_string@@Base>
  406618:	mov    rcx,rax
  40661b:	lea    rsi,[rip+0x2d685]        # 433ca7 <_IO_stdin_used@@Base+0xca7>
  406622:	xor    eax,eax
  406624:	mov    rdi,rbx
  406627:	mov    rdx,rcx
  40662a:	call   4060d0 <fprintf@plt>
  40662f:	mov    rdi,QWORD PTR [rbp+0x0]
  406633:	lea    rsi,[rip+0x30185]        # 4367bf <_IO_stdin_used@@Base+0x37bf>
  40663a:	xor    eax,eax
  40663c:	mov    rdx,r14
  40663f:	call   4060d0 <fprintf@plt>
  406644:	cmp    DWORD PTR [rsp+0xa8],0x2
  40664c:	mov    rbx,QWORD PTR [rip+0x3a9a5]        # 440ff8 <stderr@GLIBC_2.2.5>
  406653:	mov    rax,QWORD PTR [rbx]
  406656:	jl     40667b <test_json@@Base+0x43b>
  406658:	xor    ebp,ebp
  40665a:	mov    edi,0x20
  40665f:	mov    rsi,rax
  406662:	call   406090 <fputc@plt>
  406667:	add    ebp,0x1
  40666a:	mov    ecx,DWORD PTR [rsp+0xa8]
  406671:	add    ecx,0xffffffff
  406674:	mov    rax,QWORD PTR [rbx]
  406677:	cmp    ebp,ecx
  406679:	jl     40665a <test_json@@Base+0x41a>
  40667b:	lea    rdi,[rip+0x2d665]        # 433ce7 <_IO_stdin_used@@Base+0xce7>
  406682:	mov    esi,0x2
  406687:	mov    edx,0x1
  40668c:	mov    rcx,rax
  40668f:	call   406130 <fwrite@plt>
  406694:	mov    r14d,0xffffffff
  40669a:	jmp    40630a <test_json@@Base+0xca>
  40669f:	nop

00000000004066a0 <edge_case_tests@@Base>:
  4066a0:	push   rbp
  4066a1:	push   r15
  4066a3:	push   r14
  4066a5:	push   r13
  4066a7:	push   r12
  4066a9:	push   rbx
  4066aa:	push   rax
  4066ab:	mov    DWORD PTR [rsp],0x9e
  4066b2:	lea    r15,[rip+0x3a457]        # 440b10 <flatcc_builder_padding_base@@Base+0x9f70>
  4066b9:	lea    rsi,[rip+0x2d704]        # 433dc4 <_IO_stdin_used@@Base+0xdc4>
  4066c0:	lea    rdx,[rip+0x2d732]        # 433df9 <_IO_stdin_used@@Base+0xdf9>
  4066c7:	xor    ecx,ecx
  4066c9:	xor    r8d,r8d
  4066cc:	xor    r9d,r9d
  4066cf:	mov    rdi,r15
  4066d2:	call   406240 <test_json@@Base>
  4066d7:	mov    ebp,eax
  4066d9:	mov    DWORD PTR [rsp],0xa8
  4066e0:	lea    r12,[rip+0x2d730]        # 433e17 <_IO_stdin_used@@Base+0xe17>
  4066e7:	lea    r14,[rip+0x2d74a]        # 433e38 <_IO_stdin_used@@Base+0xe38>
  4066ee:	xor    ecx,ecx
  4066f0:	mov    r8d,0x2
  4066f6:	xor    r9d,r9d
  4066f9:	mov    rdi,r15
  4066fc:	mov    rsi,r12
  4066ff:	mov    rdx,r14
  406702:	call   406240 <test_json@@Base>
  406707:	mov    ebx,eax
  406709:	or     ebx,ebp
  40670b:	mov    DWORD PTR [rsp],0xac
  406712:	lea    rsi,[rip+0x2d741]        # 433e5a <_IO_stdin_used@@Base+0xe5a>
  406719:	lea    rdx,[rip+0x2d761]        # 433e81 <_IO_stdin_used@@Base+0xe81>
  406720:	xor    ecx,ecx
  406722:	xor    r8d,r8d
  406725:	mov    r9d,0x2
  40672b:	mov    rdi,r15
  40672e:	call   406240 <test_json@@Base>
  406733:	mov    r13d,eax
  406736:	mov    DWORD PTR [rsp],0xb0
  40673d:	lea    rdx,[rip+0x2d75a]        # 433e9e <_IO_stdin_used@@Base+0xe9e>
  406744:	xor    ecx,ecx
  406746:	mov    r8d,0x2
  40674c:	mov    r9d,0x4
  406752:	mov    rsi,r12
  406755:	mov    rdi,r15
  406758:	call   406240 <test_json@@Base>
  40675d:	mov    r12d,eax
  406760:	or     r12d,r13d
  406763:	or     r12d,ebx
  406766:	mov    DWORD PTR [rsp],0xb4
  40676d:	lea    rsi,[rip+0x2d73d]        # 433eb1 <_IO_stdin_used@@Base+0xeb1>
  406774:	lea    rdx,[rip+0x2d758]        # 433ed3 <_IO_stdin_used@@Base+0xed3>
  40677b:	xor    ecx,ecx
  40677d:	xor    r8d,r8d
  406780:	mov    r9d,0x8
  406786:	mov    rdi,r15
  406789:	call   406240 <test_json@@Base>
  40678e:	mov    ebx,eax
  406790:	mov    DWORD PTR [rsp],0xc3
  406797:	lea    rsi,[rip+0x2d847]        # 433fe5 <_IO_stdin_used@@Base+0xfe5>
  40679e:	xor    ecx,ecx
  4067a0:	mov    r8d,0x2
  4067a6:	xor    r9d,r9d
  4067a9:	mov    rdi,r15
  4067ac:	mov    rdx,r14
  4067af:	call   406240 <test_json@@Base>
  4067b4:	mov    ebp,eax
  4067b6:	or     ebp,ebx
  4067b8:	mov    DWORD PTR [rsp],0xc7
  4067bf:	lea    r13,[rip+0x2d845]        # 43400b <_IO_stdin_used@@Base+0x100b>
  4067c6:	lea    r14,[rip+0x2d870]        # 43403d <_IO_stdin_used@@Base+0x103d>
  4067cd:	xor    ecx,ecx
  4067cf:	mov    r8d,0x1
  4067d5:	xor    r9d,r9d
  4067d8:	mov    rdi,r15
  4067db:	mov    rsi,r13
  4067de:	mov    rdx,r14
  4067e1:	call   406240 <test_json@@Base>
  4067e6:	mov    ebx,eax
  4067e8:	or     ebx,ebp
  4067ea:	or     ebx,r12d
  4067ed:	mov    DWORD PTR [rsp],0xcb
  4067f4:	lea    rdx,[rip+0x2d85d]        # 434058 <_IO_stdin_used@@Base+0x1058>
  4067fb:	xor    ecx,ecx
  4067fd:	mov    r8d,0x1
  406803:	mov    r9d,0x1
  406809:	mov    rsi,r13
  40680c:	mov    rdi,r15
  40680f:	call   406240 <test_json@@Base>
  406814:	mov    ebp,eax
  406816:	mov    DWORD PTR [rsp],0xd1
  40681d:	lea    rsi,[rip+0x2d84b]        # 43406f <_IO_stdin_used@@Base+0x106f>
  406824:	xor    ecx,ecx
  406826:	mov    r8d,0x1
  40682c:	xor    r9d,r9d
  40682f:	mov    rdi,r15
  406832:	mov    rdx,r14
  406835:	call   406240 <test_json@@Base>
  40683a:	or     eax,ebp
  40683c:	or     eax,ebx
  40683e:	add    rsp,0x8
  406842:	pop    rbx
  406843:	pop    r12
  406845:	pop    r13
  406847:	pop    r14
  406849:	pop    r15
  40684b:	pop    rbp
  40684c:	ret    
  40684d:	nop    DWORD PTR [rax]

0000000000406850 <error_case_tests@@Base>:
  406850:	push   rbp
  406851:	push   r15
  406853:	push   r14
  406855:	push   rbx
  406856:	push   rax
  406857:	mov    DWORD PTR [rsp],0x11d
  40685e:	lea    r14,[rip+0x3a2ab]        # 440b10 <flatcc_builder_padding_base@@Base+0x9f70>
  406865:	lea    rsi,[rip+0x2d874]        # 4340e0 <_IO_stdin_used@@Base+0x10e0>
  40686c:	xor    edx,edx
  40686e:	mov    ecx,0xd
  406873:	xor    r8d,r8d
  406876:	xor    r9d,r9d
  406879:	mov    rdi,r14
  40687c:	call   406240 <test_json@@Base>
  406881:	mov    ebx,eax
  406883:	mov    DWORD PTR [rsp],0x11f
  40688a:	lea    rsi,[rip+0x2d869]        # 4340fa <_IO_stdin_used@@Base+0x10fa>
  406891:	xor    edx,edx
  406893:	mov    ecx,0xd
  406898:	xor    r8d,r8d
  40689b:	xor    r9d,r9d
  40689e:	mov    rdi,r14
  4068a1:	call   406240 <test_json@@Base>
  4068a6:	mov    ebp,eax
  4068a8:	or     ebp,ebx
  4068aa:	mov    DWORD PTR [rsp],0x121
  4068b1:	lea    rsi,[rip+0x2d8a3]        # 43415b <_IO_stdin_used@@Base+0x115b>
  4068b8:	xor    edx,edx
  4068ba:	mov    ecx,0xd
  4068bf:	xor    r8d,r8d
  4068c2:	xor    r9d,r9d
  4068c5:	mov    rdi,r14
  4068c8:	call   406240 <test_json@@Base>
  4068cd:	mov    r15d,eax
  4068d0:	mov    DWORD PTR [rsp],0x123
  4068d7:	lea    rsi,[rip+0x2d8db]        # 4341b9 <_IO_stdin_used@@Base+0x11b9>
  4068de:	xor    edx,edx
  4068e0:	mov    ecx,0xd
  4068e5:	xor    r8d,r8d
  4068e8:	xor    r9d,r9d
  4068eb:	mov    rdi,r14
  4068ee:	call   406240 <test_json@@Base>
  4068f3:	mov    ebx,eax
  4068f5:	or     ebx,r15d
  4068f8:	or     ebx,ebp
  4068fa:	mov    DWORD PTR [rsp],0x125
  406901:	lea    rsi,[rip+0x2d909]        # 434211 <_IO_stdin_used@@Base+0x1211>
  406908:	xor    edx,edx
  40690a:	mov    ecx,0xd
  40690f:	xor    r8d,r8d
  406912:	xor    r9d,r9d
  406915:	mov    rdi,r14
  406918:	call   406240 <test_json@@Base>
  40691d:	mov    r15d,eax
  406920:	mov    DWORD PTR [rsp],0x128
  406927:	lea    rsi,[rip+0x2d938]        # 434266 <_IO_stdin_used@@Base+0x1266>
  40692e:	xor    edx,edx
  406930:	mov    ecx,0xd
  406935:	xor    r8d,r8d
  406938:	xor    r9d,r9d
  40693b:	mov    rdi,r14
  40693e:	call   406240 <test_json@@Base>
  406943:	mov    ebp,eax
  406945:	or     ebp,r15d
  406948:	mov    DWORD PTR [rsp],0x12b
  40694f:	lea    rsi,[rip+0x2d9ae]        # 434304 <_IO_stdin_used@@Base+0x1304>
  406956:	xor    edx,edx
  406958:	mov    ecx,0xd
  40695d:	xor    r8d,r8d
  406960:	xor    r9d,r9d
  406963:	mov    rdi,r14
  406966:	call   406240 <test_json@@Base>
  40696b:	mov    r15d,eax
  40696e:	or     r15d,ebp
  406971:	or     r15d,ebx
  406974:	mov    DWORD PTR [rsp],0x12f
  40697b:	lea    rsi,[rip+0x2da1d]        # 43439f <_IO_stdin_used@@Base+0x139f>
  406982:	xor    edx,edx
  406984:	mov    ecx,0xd
  406989:	xor    r8d,r8d
  40698c:	xor    r9d,r9d
  40698f:	mov    rdi,r14
  406992:	call   406240 <test_json@@Base>
  406997:	mov    ebx,eax
  406999:	mov    DWORD PTR [rsp],0x133
  4069a0:	lea    rsi,[rip+0x2dabf]        # 434466 <_IO_stdin_used@@Base+0x1466>
  4069a7:	xor    edx,edx
  4069a9:	mov    ecx,0xd
  4069ae:	xor    r8d,r8d
  4069b1:	xor    r9d,r9d
  4069b4:	mov    rdi,r14
  4069b7:	call   406240 <test_json@@Base>
  4069bc:	mov    ebp,eax
  4069be:	or     ebp,ebx
  4069c0:	mov    DWORD PTR [rsp],0x137
  4069c7:	lea    rsi,[rip+0x2db5f]        # 43452d <_IO_stdin_used@@Base+0x152d>
  4069ce:	xor    edx,edx
  4069d0:	mov    ecx,0x5
  4069d5:	xor    r8d,r8d
  4069d8:	xor    r9d,r9d
  4069db:	mov    rdi,r14
  4069de:	call   406240 <test_json@@Base>
  4069e3:	mov    ebx,eax
  4069e5:	or     ebx,ebp
  4069e7:	mov    DWORD PTR [rsp],0x13a
  4069ee:	lea    rsi,[rip+0x2db50]        # 434545 <_IO_stdin_used@@Base+0x1545>
  4069f5:	xor    edx,edx
  4069f7:	mov    ecx,0x5
  4069fc:	xor    r8d,r8d
  4069ff:	xor    r9d,r9d
  406a02:	mov    rdi,r14
  406a05:	call   406240 <test_json@@Base>
  406a0a:	mov    ebp,eax
  406a0c:	or     ebp,ebx
  406a0e:	or     ebp,r15d
  406a11:	mov    DWORD PTR [rsp],0x13d
  406a18:	lea    rsi,[rip+0x2db4c]        # 43456b <_IO_stdin_used@@Base+0x156b>
  406a1f:	xor    edx,edx
  406a21:	mov    ecx,0x5
  406a26:	xor    r8d,r8d
  406a29:	xor    r9d,r9d
  406a2c:	mov    rdi,r14
  406a2f:	call   406240 <test_json@@Base>
  406a34:	or     eax,ebp
  406a36:	add    rsp,0x8
  406a3a:	pop    rbx
  406a3b:	pop    r14
  406a3d:	pop    r15
  406a3f:	pop    rbp
  406a40:	ret    
  406a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a50 <base64_tests@@Base>:
  406a50:	push   rbp
  406a51:	push   r15
  406a53:	push   r14
  406a55:	push   r13
  406a57:	push   r12
  406a59:	push   rbx
  406a5a:	push   rax
  406a5b:	mov    DWORD PTR [rsp],0x171
  406a62:	lea    r12,[rip+0x3a0a7]        # 440b10 <flatcc_builder_padding_base@@Base+0x9f70>
  406a69:	lea    rsi,[rip+0x2db33]        # 4345a3 <_IO_stdin_used@@Base+0x15a3>
  406a70:	lea    rdx,[rip+0x2d427]        # 433e9e <_IO_stdin_used@@Base+0xe9e>
  406a77:	xor    ecx,ecx
  406a79:	xor    r8d,r8d
  406a7c:	xor    r9d,r9d
  406a7f:	mov    rdi,r12
  406a82:	call   406240 <test_json@@Base>
  406a87:	mov    ebp,eax
  406a89:	mov    DWORD PTR [rsp],0x174
  406a90:	lea    rsi,[rip+0x2db22]        # 4345b9 <_IO_stdin_used@@Base+0x15b9>
  406a97:	lea    rdx,[rip+0x2db42]        # 4345e0 <_IO_stdin_used@@Base+0x15e0>
  406a9e:	xor    ecx,ecx
  406aa0:	xor    r8d,r8d
  406aa3:	xor    r9d,r9d
  406aa6:	mov    rdi,r12
  406aa9:	call   406240 <test_json@@Base>
  406aae:	mov    ebx,eax
  406ab0:	or     ebx,ebp
  406ab2:	mov    DWORD PTR [rsp],0x178
  406ab9:	lea    rsi,[rip+0x2db43]        # 434603 <_IO_stdin_used@@Base+0x1603>
  406ac0:	lea    r14,[rip+0x2dbf5]        # 4346bc <_IO_stdin_used@@Base+0x16bc>
  406ac7:	xor    ecx,ecx
  406ac9:	xor    r8d,r8d
  406acc:	xor    r9d,r9d
  406acf:	mov    rdi,r12
  406ad2:	mov    rdx,r14
  406ad5:	call   406240 <test_json@@Base>
  406ada:	mov    r13d,eax
  406add:	mov    DWORD PTR [rsp],0x17b
  406ae4:	lea    rsi,[rip+0x2dc85]        # 434770 <_IO_stdin_used@@Base+0x1770>
  406aeb:	lea    rbp,[rip+0x2dd3a]        # 43482c <_IO_stdin_used@@Base+0x182c>
  406af2:	xor    ecx,ecx
  406af4:	xor    r8d,r8d
  406af7:	xor    r9d,r9d
  406afa:	mov    rdi,r12
  406afd:	mov    rdx,rbp
  406b00:	call   406240 <test_json@@Base>
  406b05:	mov    r15d,eax
  406b08:	or     r15d,r13d
  406b0b:	or     r15d,ebx
  406b0e:	mov    DWORD PTR [rsp],0x17e
  406b15:	lea    rsi,[rip+0x2ddc7]        # 4348e3 <_IO_stdin_used@@Base+0x18e3>
  406b1c:	xor    ecx,ecx
  406b1e:	xor    r8d,r8d
  406b21:	xor    r9d,r9d
  406b24:	mov    rdi,r12
  406b27:	mov    rdx,r14
  406b2a:	call   406240 <test_json@@Base>
  406b2f:	mov    r14d,eax
  406b32:	mov    DWORD PTR [rsp],0x181
  406b39:	lea    rsi,[rip+0x2de5a]        # 43499a <_IO_stdin_used@@Base+0x199a>
  406b40:	xor    ecx,ecx
  406b42:	xor    r8d,r8d
  406b45:	xor    r9d,r9d
  406b48:	mov    rdi,r12
  406b4b:	mov    rdx,rbp
  406b4e:	call   406240 <test_json@@Base>
  406b53:	mov    ebx,eax
  406b55:	or     ebx,r14d
  406b58:	mov    DWORD PTR [rsp],0x184
  406b5f:	lea    rsi,[rip+0x2deee]        # 434a54 <_IO_stdin_used@@Base+0x1a54>
  406b66:	xor    edx,edx
  406b68:	mov    ecx,0x1f
  406b6d:	xor    r8d,r8d
  406b70:	xor    r9d,r9d
  406b73:	mov    rdi,r12
  406b76:	call   406240 <test_json@@Base>
  406b7b:	mov    ebp,eax
  406b7d:	or     ebp,ebx
  406b7f:	or     ebp,r15d
  406b82:	mov    DWORD PTR [rsp],0x187
  406b89:	lea    rsi,[rip+0x2df7d]        # 434b0d <_IO_stdin_used@@Base+0x1b0d>
  406b90:	xor    edx,edx
  406b92:	mov    ecx,0x20
  406b97:	xor    r8d,r8d
  406b9a:	xor    r9d,r9d
  406b9d:	mov    rdi,r12
  406ba0:	call   406240 <test_json@@Base>
  406ba5:	or     eax,ebp
  406ba7:	add    rsp,0x8
  406bab:	pop    rbx
  406bac:	pop    r12
  406bae:	pop    r13
  406bb0:	pop    r14
  406bb2:	pop    r15
  406bb4:	pop    rbp
  406bb5:	ret    
  406bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406bc0 <mixed_type_union_tests@@Base>:
  406bc0:	push   rbp
  406bc1:	push   r15
  406bc3:	push   r14
  406bc5:	push   r12
  406bc7:	push   rbx
  406bc8:	sub    rsp,0x10
  406bcc:	mov    DWORD PTR [rsp],0x1b0
  406bd3:	lea    r15,[rip+0x39f56]        # 440b30 <flatcc_builder_padding_base@@Base+0x9f90>
  406bda:	lea    rsi,[rip+0x2dfe8]        # 434bc9 <_IO_stdin_used@@Base+0x1bc9>
  406be1:	lea    rdx,[rip+0x2e030]        # 434c18 <_IO_stdin_used@@Base+0x1c18>
  406be8:	xor    ecx,ecx
  406bea:	xor    r8d,r8d
  406bed:	xor    r9d,r9d
  406bf0:	mov    rdi,r15
  406bf3:	call   406240 <test_json@@Base>
  406bf8:	mov    ebp,eax
  406bfa:	mov    DWORD PTR [rsp],0x1b5
  406c01:	lea    rsi,[rip+0x2e057]        # 434c5f <_IO_stdin_used@@Base+0x1c5f>
  406c08:	lea    r14,[rip+0x2e0d3]        # 434ce2 <_IO_stdin_used@@Base+0x1ce2>
  406c0f:	xor    ecx,ecx
  406c11:	xor    r8d,r8d
  406c14:	xor    r9d,r9d
  406c17:	mov    rdi,r15
  406c1a:	mov    rdx,r14
  406c1d:	call   406240 <test_json@@Base>
  406c22:	mov    ebx,eax
  406c24:	or     ebx,ebp
  406c26:	mov    DWORD PTR [rsp],0x1ba
  406c2d:	lea    rsi,[rip+0x2e125]        # 434d59 <_IO_stdin_used@@Base+0x1d59>
  406c34:	xor    ecx,ecx
  406c36:	xor    r8d,r8d
  406c39:	xor    r9d,r9d
  406c3c:	mov    rdi,r15
  406c3f:	mov    rdx,r14
  406c42:	call   406240 <test_json@@Base>
  406c47:	mov    r12d,eax
  406c4a:	mov    DWORD PTR [rsp],0x1c1
  406c51:	lea    rsi,[rip+0x2e197]        # 434def <_IO_stdin_used@@Base+0x1def>
  406c58:	lea    rdx,[rip+0x2e26d]        # 434ecc <_IO_stdin_used@@Base+0x1ecc>
  406c5f:	xor    ecx,ecx
  406c61:	xor    r8d,r8d
  406c64:	xor    r9d,r9d
  406c67:	mov    rdi,r15
  406c6a:	call   406240 <test_json@@Base>
  406c6f:	mov    ebp,eax
  406c71:	or     ebp,r12d
  406c74:	or     ebp,ebx
  406c76:	mov    DWORD PTR [rsp],0x1ca
  406c7d:	lea    rsi,[rip+0x2e301]        # 434f85 <_IO_stdin_used@@Base+0x1f85>
  406c84:	lea    rdx,[rip+0x2e400]        # 43508b <_IO_stdin_used@@Base+0x208b>
  406c8b:	xor    ecx,ecx
  406c8d:	xor    r8d,r8d
  406c90:	xor    r9d,r9d
  406c93:	mov    rdi,r15
  406c96:	call   406240 <test_json@@Base>
  406c9b:	mov    r12d,eax
  406c9e:	mov    DWORD PTR [rsp],0x1d5
  406ca5:	lea    rsi,[rip+0x2e4bd]        # 435169 <_IO_stdin_used@@Base+0x2169>
  406cac:	lea    rdx,[rip+0x2e637]        # 4352ea <_IO_stdin_used@@Base+0x22ea>
  406cb3:	xor    ecx,ecx
  406cb5:	xor    r8d,r8d
  406cb8:	xor    r9d,r9d
  406cbb:	mov    rdi,r15
  406cbe:	call   406240 <test_json@@Base>
  406cc3:	mov    ebx,eax
  406cc5:	or     ebx,r12d
  406cc8:	mov    DWORD PTR [rsp],0x1da
  406ccf:	lea    rsi,[rip+0x2e75a]        # 435430 <_IO_stdin_used@@Base+0x2430>
  406cd6:	xor    ecx,ecx
  406cd8:	xor    r8d,r8d
  406cdb:	xor    r9d,r9d
  406cde:	mov    rdi,r15
  406ce1:	mov    rdx,r14
  406ce4:	call   406240 <test_json@@Base>
  406ce9:	or     eax,ebx
  406ceb:	or     eax,ebp
  406ced:	add    rsp,0x10
  406cf1:	pop    rbx
  406cf2:	pop    r12
  406cf4:	pop    r14
  406cf6:	pop    r15
  406cf8:	pop    rbp
  406cf9:	ret    
  406cfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406d00 <union_vector_tests@@Base>:
  406d00:	push   rbp
  406d01:	push   r15
  406d03:	push   r14
  406d05:	push   r12
  406d07:	push   rbx
  406d08:	sub    rsp,0x10
  406d0c:	mov    DWORD PTR [rsp],0x1e5
  406d13:	lea    r15,[rip+0x39e36]        # 440b50 <flatcc_builder_padding_base@@Base+0x9fb0>
  406d1a:	lea    rsi,[rip+0x2e79c]        # 4354bd <_IO_stdin_used@@Base+0x24bd>
  406d21:	lea    r14,[rip+0x2e7d5]        # 4354fd <_IO_stdin_used@@Base+0x24fd>
  406d28:	xor    ecx,ecx
  406d2a:	xor    r8d,r8d
  406d2d:	xor    r9d,r9d
  406d30:	mov    rdi,r15
  406d33:	mov    rdx,r14
  406d36:	call   406240 <test_json@@Base>
  406d3b:	mov    ebp,eax
  406d3d:	mov    DWORD PTR [rsp],0x1e8
  406d44:	lea    rsi,[rip+0x2e7ea]        # 435535 <_IO_stdin_used@@Base+0x2535>
  406d4b:	lea    rdx,[rip+0x2e816]        # 435568 <_IO_stdin_used@@Base+0x2568>
  406d52:	xor    ecx,ecx
  406d54:	xor    r8d,r8d
  406d57:	xor    r9d,r9d
  406d5a:	mov    rdi,r15
  406d5d:	call   406240 <test_json@@Base>
  406d62:	mov    ebx,eax
  406d64:	or     ebx,ebp
  406d66:	mov    DWORD PTR [rsp],0x1eb
  406d6d:	lea    rsi,[rip+0x2e81f]        # 435593 <_IO_stdin_used@@Base+0x2593>
  406d74:	lea    rdx,[rip+0x2e865]        # 4355e0 <_IO_stdin_used@@Base+0x25e0>
  406d7b:	xor    ecx,ecx
  406d7d:	xor    r8d,r8d
  406d80:	xor    r9d,r9d
  406d83:	mov    rdi,r15
  406d86:	call   406240 <test_json@@Base>
  406d8b:	mov    r12d,eax
  406d8e:	mov    DWORD PTR [rsp],0x1ee
  406d95:	lea    rsi,[rip+0x2e888]        # 435624 <_IO_stdin_used@@Base+0x2624>
  406d9c:	lea    rdx,[rip+0x2e8fe]        # 4356a1 <_IO_stdin_used@@Base+0x26a1>
  406da3:	xor    ecx,ecx
  406da5:	xor    r8d,r8d
  406da8:	xor    r9d,r9d
  406dab:	mov    rdi,r15
  406dae:	call   406240 <test_json@@Base>
  406db3:	mov    ebp,eax
  406db5:	or     ebp,r12d
  406db8:	or     ebp,ebx
  406dba:	mov    DWORD PTR [rsp],0x1f1
  406dc1:	lea    rsi,[rip+0x2e945]        # 43570d <_IO_stdin_used@@Base+0x270d>
  406dc8:	xor    ecx,ecx
  406dca:	xor    r8d,r8d
  406dcd:	xor    r9d,r9d
  406dd0:	mov    rdi,r15
  406dd3:	mov    rdx,r14
  406dd6:	call   406240 <test_json@@Base>
  406ddb:	mov    ebx,eax
  406ddd:	mov    DWORD PTR [rsp],0x1f4
  406de4:	lea    rsi,[rip+0x2e961]        # 43574c <_IO_stdin_used@@Base+0x274c>
  406deb:	lea    rdx,[rip+0x2e9c0]        # 4357b2 <_IO_stdin_used@@Base+0x27b2>
  406df2:	xor    ecx,ecx
  406df4:	xor    r8d,r8d
  406df7:	xor    r9d,r9d
  406dfa:	mov    rdi,r15
  406dfd:	call   406240 <test_json@@Base>
  406e02:	or     eax,ebx
  406e04:	or     eax,ebp
  406e06:	add    rsp,0x10
  406e0a:	pop    rbx
  406e0b:	pop    r12
  406e0d:	pop    r14
  406e0f:	pop    r15
  406e11:	pop    rbp
  406e12:	ret    
  406e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e1d:	nop    DWORD PTR [rax]

0000000000406e20 <main@@Base>:
  406e20:	push   rbp
  406e21:	push   r15
  406e23:	push   r14
  406e25:	push   r13
  406e27:	push   r12
  406e29:	push   rbx
  406e2a:	push   rax
  406e2b:	call   4066a0 <edge_case_tests@@Base>
  406e30:	mov    ebx,eax
  406e32:	call   406850 <error_case_tests@@Base>
  406e37:	mov    ebp,eax
  406e39:	or     ebp,ebx
  406e3b:	call   406d00 <union_vector_tests@@Base>
  406e40:	mov    r14d,eax
  406e43:	call   406a50 <base64_tests@@Base>
  406e48:	mov    ebx,eax
  406e4a:	or     ebx,r14d
  406e4d:	or     ebx,ebp
  406e4f:	call   406bc0 <mixed_type_union_tests@@Base>
  406e54:	mov    ebp,eax
  406e56:	mov    DWORD PTR [rsp],0x20d
  406e5d:	lea    r13,[rip+0x39cac]        # 440b10 <flatcc_builder_padding_base@@Base+0x9f70>
  406e64:	lea    rsi,[rip+0x2e9a3]        # 43580e <_IO_stdin_used@@Base+0x280e>
  406e6b:	lea    rdx,[rip+0x2d02c]        # 433e9e <_IO_stdin_used@@Base+0xe9e>
  406e72:	xor    ecx,ecx
  406e74:	xor    r8d,r8d
  406e77:	xor    r9d,r9d
  406e7a:	mov    rdi,r13
  406e7d:	call   406240 <test_json@@Base>
  406e82:	mov    r15d,eax
  406e85:	or     r15d,ebp
  406e88:	or     r15d,ebx
  406e8b:	mov    DWORD PTR [rsp],0x210
  406e92:	lea    rsi,[rip+0x2e98c]        # 435825 <_IO_stdin_used@@Base+0x2825>
  406e99:	lea    rdx,[rip+0x2e9ac]        # 43584c <_IO_stdin_used@@Base+0x284c>
  406ea0:	xor    ecx,ecx
  406ea2:	xor    r8d,r8d
  406ea5:	xor    r9d,r9d
  406ea8:	mov    rdi,r13
  406eab:	mov    rbp,rdx
  406eae:	call   406240 <test_json@@Base>
  406eb3:	mov    ebx,eax
  406eb5:	mov    DWORD PTR [rsp],0x213
  406ebc:	lea    rsi,[rip+0x2e9aa]        # 43586d <_IO_stdin_used@@Base+0x286d>
  406ec3:	lea    rdx,[rip+0x2e9cb]        # 435895 <_IO_stdin_used@@Base+0x2895>
  406eca:	xor    ecx,ecx
  406ecc:	xor    r8d,r8d
  406ecf:	xor    r9d,r9d
  406ed2:	mov    rdi,r13
  406ed5:	call   406240 <test_json@@Base>
  406eda:	mov    r12d,eax
  406edd:	or     r12d,ebx
  406ee0:	mov    DWORD PTR [rsp],0x216
  406ee7:	lea    rsi,[rip+0x2e9ca]        # 4358b8 <_IO_stdin_used@@Base+0x28b8>
  406eee:	lea    rbx,[rip+0x2e9f4]        # 4358e9 <_IO_stdin_used@@Base+0x28e9>
  406ef5:	xor    ecx,ecx
  406ef7:	xor    r8d,r8d
  406efa:	xor    r9d,r9d
  406efd:	mov    rdi,r13
  406f00:	mov    rdx,rbx
  406f03:	call   406240 <test_json@@Base>
  406f08:	mov    r14d,eax
  406f0b:	or     r14d,r12d
  406f0e:	or     r14d,r15d
  406f11:	mov    DWORD PTR [rsp],0x219
  406f18:	lea    rsi,[rip+0x2e9f6]        # 435915 <_IO_stdin_used@@Base+0x2915>
  406f1f:	xor    ecx,ecx
  406f21:	xor    r8d,r8d
  406f24:	xor    r9d,r9d
  406f27:	mov    rdi,r13
  406f2a:	mov    rdx,rbx
  406f2d:	call   406240 <test_json@@Base>
  406f32:	mov    ebx,eax
  406f34:	mov    DWORD PTR [rsp],0x21c
  406f3b:	lea    rsi,[rip+0x2ea0d]        # 43594f <_IO_stdin_used@@Base+0x294f>
  406f42:	xor    ecx,ecx
  406f44:	xor    r8d,r8d
  406f47:	xor    r9d,r9d
  406f4a:	mov    rdi,r13
  406f4d:	mov    r12,rbp
  406f50:	mov    rdx,rbp
  406f53:	call   406240 <test_json@@Base>
  406f58:	mov    ebp,eax
  406f5a:	or     ebp,ebx
  406f5c:	mov    DWORD PTR [rsp],0x21f
  406f63:	lea    rsi,[rip+0x2ea0b]        # 435975 <_IO_stdin_used@@Base+0x2975>
  406f6a:	xor    ecx,ecx
  406f6c:	xor    r8d,r8d
  406f6f:	xor    r9d,r9d
  406f72:	mov    rdi,r13
  406f75:	lea    rdx,[rip+0x2e919]        # 435895 <_IO_stdin_used@@Base+0x2895>
  406f7c:	call   406240 <test_json@@Base>
  406f81:	mov    ebx,eax
  406f83:	or     ebx,ebp
  406f85:	mov    DWORD PTR [rsp],0x223
  406f8c:	lea    rsi,[rip+0x2ea0b]        # 43599e <_IO_stdin_used@@Base+0x299e>
  406f93:	xor    ecx,ecx
  406f95:	xor    r8d,r8d
  406f98:	xor    r9d,r9d
  406f9b:	mov    rdi,r13
  406f9e:	lea    rbp,[rip+0x2cef9]        # 433e9e <_IO_stdin_used@@Base+0xe9e>
  406fa5:	mov    rdx,rbp
  406fa8:	call   406240 <test_json@@Base>
  406fad:	mov    r15d,eax
  406fb0:	or     r15d,ebx
  406fb3:	or     r15d,r14d
  406fb6:	mov    DWORD PTR [rsp],0x227
  406fbd:	lea    rsi,[rip+0x2ce53]        # 433e17 <_IO_stdin_used@@Base+0xe17>
  406fc4:	xor    ecx,ecx
  406fc6:	xor    r8d,r8d
  406fc9:	xor    r9d,r9d
  406fcc:	mov    rdi,r13
  406fcf:	mov    rdx,rbp
  406fd2:	call   406240 <test_json@@Base>
  406fd7:	mov    r14d,eax
  406fda:	mov    DWORD PTR [rsp],0x259
  406fe1:	lea    rsi,[rip+0x2e9dd]        # 4359c5 <_IO_stdin_used@@Base+0x29c5>
  406fe8:	xor    ecx,ecx
  406fea:	xor    r8d,r8d
  406fed:	xor    r9d,r9d
  406ff0:	mov    rdi,r13
  406ff3:	mov    rdx,r12
  406ff6:	call   406240 <test_json@@Base>
  406ffb:	mov    ebx,eax
  406ffd:	or     ebx,r14d
  407000:	mov    DWORD PTR [rsp],0x25c
  407007:	lea    rsi,[rip+0x2e9d8]        # 4359e6 <_IO_stdin_used@@Base+0x29e6>
  40700e:	xor    ecx,ecx
  407010:	xor    r8d,r8d
  407013:	xor    r9d,r9d
  407016:	mov    rdi,r13
  407019:	lea    rdx,[rip+0x2e875]        # 435895 <_IO_stdin_used@@Base+0x2895>
  407020:	call   406240 <test_json@@Base>
  407025:	mov    ebp,eax
  407027:	or     ebp,ebx
  407029:	mov    DWORD PTR [rsp],0x25f
  407030:	lea    rsi,[rip+0x2e9d0]        # 435a07 <_IO_stdin_used@@Base+0x2a07>
  407037:	lea    rdx,[rip+0x2e9ea]        # 435a28 <_IO_stdin_used@@Base+0x2a28>
  40703e:	xor    ecx,ecx
  407040:	xor    r8d,r8d
  407043:	xor    r9d,r9d
  407046:	mov    rdi,r13
  407049:	call   406240 <test_json@@Base>
  40704e:	mov    ebx,eax
  407050:	or     ebx,ebp
  407052:	mov    DWORD PTR [rsp],0x262
  407059:	lea    rsi,[rip+0x2e9ee]        # 435a4e <_IO_stdin_used@@Base+0x2a4e>
  407060:	xor    ecx,ecx
  407062:	xor    r8d,r8d
  407065:	xor    r9d,r9d
  407068:	mov    rdi,r13
  40706b:	lea    rdx,[rip+0x2e877]        # 4358e9 <_IO_stdin_used@@Base+0x28e9>
  407072:	call   406240 <test_json@@Base>
  407077:	mov    r12d,eax
  40707a:	or     r12d,ebx
  40707d:	or     r12d,r15d
  407080:	mov    DWORD PTR [rsp],0x265
  407087:	lea    rsi,[rip+0x2e9e2]        # 435a70 <_IO_stdin_used@@Base+0x2a70>
  40708e:	lea    rdx,[rip+0x2e9fd]        # 435a92 <_IO_stdin_used@@Base+0x2a92>
  407095:	xor    ecx,ecx
  407097:	xor    r8d,r8d
  40709a:	xor    r9d,r9d
  40709d:	mov    rdi,r13
  4070a0:	call   406240 <test_json@@Base>
  4070a5:	mov    r14d,eax
  4070a8:	mov    DWORD PTR [rsp],0x268
  4070af:	lea    rsi,[rip+0x2e9fa]        # 435ab0 <_IO_stdin_used@@Base+0x2ab0>
  4070b6:	lea    rdx,[rip+0x2ea15]        # 435ad2 <_IO_stdin_used@@Base+0x2ad2>
  4070bd:	xor    ecx,ecx
  4070bf:	xor    r8d,r8d
  4070c2:	xor    r9d,r9d
  4070c5:	mov    rdi,r13
  4070c8:	call   406240 <test_json@@Base>
  4070cd:	mov    ebx,eax
  4070cf:	or     ebx,r14d
  4070d2:	mov    DWORD PTR [rsp],0x26b
  4070d9:	lea    rsi,[rip+0x2ea10]        # 435af0 <_IO_stdin_used@@Base+0x2af0>
  4070e0:	lea    rdx,[rip+0x2ea2a]        # 435b11 <_IO_stdin_used@@Base+0x2b11>
  4070e7:	xor    ecx,ecx
  4070e9:	xor    r8d,r8d
  4070ec:	xor    r9d,r9d
  4070ef:	mov    rdi,r13
  4070f2:	call   406240 <test_json@@Base>
  4070f7:	mov    ebp,eax
  4070f9:	or     ebp,ebx
  4070fb:	mov    DWORD PTR [rsp],0x26e
  407102:	lea    rsi,[rip+0x2ea25]        # 435b2e <_IO_stdin_used@@Base+0x2b2e>
  407109:	xor    ecx,ecx
  40710b:	xor    r8d,r8d
  40710e:	xor    r9d,r9d
  407111:	mov    rdi,r13
  407114:	lea    r14,[rip+0x2e731]        # 43584c <_IO_stdin_used@@Base+0x284c>
  40711b:	mov    rdx,r14
  40711e:	call   406240 <test_json@@Base>
  407123:	mov    ebx,eax
  407125:	or     ebx,ebp
  407127:	mov    DWORD PTR [rsp],0x271
  40712e:	lea    rsi,[rip+0x2ea24]        # 435b59 <_IO_stdin_used@@Base+0x2b59>
  407135:	xor    ecx,ecx
  407137:	xor    r8d,r8d
  40713a:	xor    r9d,r9d
  40713d:	mov    rdi,r13
  407140:	mov    rdx,r14
  407143:	call   406240 <test_json@@Base>
  407148:	mov    ebp,eax
  40714a:	or     ebp,ebx
  40714c:	mov    DWORD PTR [rsp],0x274
  407153:	lea    r14,[rip+0x2ea39]        # 435b93 <_IO_stdin_used@@Base+0x2b93>
  40715a:	lea    rbx,[rip+0x2ea5c]        # 435bbd <_IO_stdin_used@@Base+0x2bbd>
  407161:	xor    ecx,ecx
  407163:	xor    r8d,r8d
  407166:	xor    r9d,r9d
  407169:	mov    rdi,r13
  40716c:	mov    rsi,r14
  40716f:	mov    rdx,rbx
  407172:	call   406240 <test_json@@Base>
  407177:	mov    r15d,eax
  40717a:	or     r15d,ebp
  40717d:	or     r15d,r12d
  407180:	mov    DWORD PTR [rsp],0x277
  407187:	xor    ecx,ecx
  407189:	xor    r8d,r8d
  40718c:	xor    r9d,r9d
  40718f:	mov    rdi,r13
  407192:	mov    rsi,r14
  407195:	mov    rdx,rbx
  407198:	call   406240 <test_json@@Base>
  40719d:	mov    ebp,eax
  40719f:	mov    DWORD PTR [rsp],0x27a
  4071a6:	lea    rsi,[rip+0x2ea2a]        # 435bd7 <_IO_stdin_used@@Base+0x2bd7>
  4071ad:	lea    rdx,[rip+0x2ea74]        # 435c28 <_IO_stdin_used@@Base+0x2c28>
  4071b4:	xor    ecx,ecx
  4071b6:	xor    r8d,r8d
  4071b9:	xor    r9d,r9d
  4071bc:	mov    rdi,r13
  4071bf:	call   406240 <test_json@@Base>
  4071c4:	mov    ebx,eax
  4071c6:	or     ebx,ebp
  4071c8:	mov    DWORD PTR [rsp],0x27e
  4071cf:	lea    rsi,[rip+0x2ea99]        # 435c6f <_IO_stdin_used@@Base+0x2c6f>
  4071d6:	lea    rdx,[rip+0x2eae7]        # 435cc4 <_IO_stdin_used@@Base+0x2cc4>
  4071dd:	xor    ecx,ecx
  4071df:	xor    r8d,r8d
  4071e2:	xor    r9d,r9d
  4071e5:	mov    rdi,r13
  4071e8:	call   406240 <test_json@@Base>
  4071ed:	mov    ebp,eax
  4071ef:	or     ebp,ebx
  4071f1:	mov    DWORD PTR [rsp],0x282
  4071f8:	lea    rsi,[rip+0x2eb0f]        # 435d0e <_IO_stdin_used@@Base+0x2d0e>
  4071ff:	lea    rdx,[rip+0x2eb77]        # 435d7d <_IO_stdin_used@@Base+0x2d7d>
  407206:	xor    ecx,ecx
  407208:	xor    r8d,r8d
  40720b:	xor    r9d,r9d
  40720e:	mov    rdi,r13
  407211:	call   406240 <test_json@@Base>
  407216:	mov    ebx,eax
  407218:	or     ebx,ebp
  40721a:	mov    DWORD PTR [rsp],0x286
  407221:	lea    rsi,[rip+0x2ebb7]        # 435ddf <_IO_stdin_used@@Base+0x2ddf>
  407228:	xor    ecx,ecx
  40722a:	xor    r8d,r8d
  40722d:	xor    r9d,r9d
  407230:	mov    rdi,r13
  407233:	lea    r12,[rip+0x2cc64]        # 433e9e <_IO_stdin_used@@Base+0xe9e>
  40723a:	mov    rdx,r12
  40723d:	call   406240 <test_json@@Base>
  407242:	mov    ebp,eax
  407244:	or     ebp,ebx
  407246:	mov    DWORD PTR [rsp],0x289
  40724d:	lea    rsi,[rip+0x2ebb6]        # 435e0a <_IO_stdin_used@@Base+0x2e0a>
  407254:	xor    ecx,ecx
  407256:	xor    r8d,r8d
  407259:	xor    r9d,r9d
  40725c:	mov    rdi,r13
  40725f:	mov    rdx,r12
  407262:	call   406240 <test_json@@Base>
  407267:	mov    ebx,eax
  407269:	or     ebx,ebp
  40726b:	mov    DWORD PTR [rsp],0x2cc
  407272:	lea    rsi,[rip+0x2ebb7]        # 435e30 <_IO_stdin_used@@Base+0x2e30>
  407279:	lea    rdx,[rip+0x2ec1d]        # 435e9d <_IO_stdin_used@@Base+0x2e9d>
  407280:	xor    ecx,ecx
  407282:	xor    r8d,r8d
  407285:	xor    r9d,r9d
  407288:	mov    rdi,r13
  40728b:	call   406240 <test_json@@Base>
  407290:	mov    r14d,eax
  407293:	or     r14d,ebx
  407296:	or     r14d,r15d
  407299:	mov    DWORD PTR [rsp],0x2db
  4072a0:	lea    rsi,[rip+0x2ec54]        # 435efb <_IO_stdin_used@@Base+0x2efb>
  4072a7:	lea    rdx,[rip+0x2ec8a]        # 435f38 <_IO_stdin_used@@Base+0x2f38>
  4072ae:	xor    ecx,ecx
  4072b0:	xor    r8d,r8d
  4072b3:	xor    r9d,r9d
  4072b6:	mov    rdi,r13
  4072b9:	call   406240 <test_json@@Base>
  4072be:	mov    ebx,eax
  4072c0:	mov    DWORD PTR [rsp],0x2de
  4072c7:	lea    rsi,[rip+0x2ec9a]        # 435f68 <_IO_stdin_used@@Base+0x2f68>
  4072ce:	lea    rdx,[rip+0x2ecad]        # 435f82 <_IO_stdin_used@@Base+0x2f82>
  4072d5:	xor    ecx,ecx
  4072d7:	xor    r8d,r8d
  4072da:	xor    r9d,r9d
  4072dd:	mov    rdi,r13
  4072e0:	call   406240 <test_json@@Base>
  4072e5:	mov    ebp,eax
  4072e7:	or     ebp,ebx
  4072e9:	mov    DWORD PTR [rsp],0x2e2
  4072f0:	lea    rsi,[rip+0x2ec9d]        # 435f94 <_IO_stdin_used@@Base+0x2f94>
  4072f7:	lea    r15,[rip+0x2ecde]        # 435fdc <_IO_stdin_used@@Base+0x2fdc>
  4072fe:	xor    ecx,ecx
  407300:	xor    r8d,r8d
  407303:	xor    r9d,r9d
  407306:	mov    rdi,r13
  407309:	mov    rdx,r15
  40730c:	call   406240 <test_json@@Base>
  407311:	mov    ebx,eax
  407313:	or     ebx,ebp
  407315:	mov    DWORD PTR [rsp],0x2ee
  40731c:	lea    rsi,[rip+0x2ecfa]        # 43601d <_IO_stdin_used@@Base+0x301d>
  407323:	xor    ecx,ecx
  407325:	xor    r8d,r8d
  407328:	xor    r9d,r9d
  40732b:	mov    rdi,r13
  40732e:	mov    rdx,r15
  407331:	call   406240 <test_json@@Base>
  407336:	mov    ebp,eax
  407338:	or     ebp,ebx
  40733a:	mov    DWORD PTR [rsp],0x2fe
  407341:	lea    rsi,[rip+0x2ed72]        # 4360ba <_IO_stdin_used@@Base+0x30ba>
  407348:	lea    rdx,[rip+0x2ed92]        # 4360e1 <_IO_stdin_used@@Base+0x30e1>
  40734f:	xor    ecx,ecx
  407351:	xor    r8d,r8d
  407354:	xor    r9d,r9d
  407357:	mov    rdi,r13
  40735a:	call   406240 <test_json@@Base>
  40735f:	mov    ebx,eax
  407361:	or     ebx,ebp
  407363:	mov    DWORD PTR [rsp],0x302
  40736a:	lea    rsi,[rip+0x2ed92]        # 436103 <_IO_stdin_used@@Base+0x3103>
  407371:	lea    rdx,[rip+0x2edba]        # 436132 <_IO_stdin_used@@Base+0x3132>
  407378:	xor    ecx,ecx
  40737a:	xor    r8d,r8d
  40737d:	xor    r9d,r9d
  407380:	mov    rdi,r13
  407383:	call   406240 <test_json@@Base>
  407388:	mov    ebp,eax
  40738a:	or     ebp,ebx
  40738c:	mov    DWORD PTR [rsp],0x308
  407393:	lea    rsi,[rip+0x2edc2]        # 43615c <_IO_stdin_used@@Base+0x315c>
  40739a:	lea    rdx,[rip+0x2ee36]        # 4361d7 <_IO_stdin_used@@Base+0x31d7>
  4073a1:	xor    ecx,ecx
  4073a3:	xor    r8d,r8d
  4073a6:	xor    r9d,r9d
  4073a9:	mov    rdi,r13
  4073ac:	call   406240 <test_json@@Base>
  4073b1:	mov    ebx,eax
  4073b3:	or     ebx,ebp
  4073b5:	mov    DWORD PTR [rsp],0x30d
  4073bc:	lea    rsi,[rip+0x2ee84]        # 436247 <_IO_stdin_used@@Base+0x3247>
  4073c3:	xor    ecx,ecx
  4073c5:	xor    r8d,r8d
  4073c8:	xor    r9d,r9d
  4073cb:	mov    rdi,r13
  4073ce:	mov    rdx,r12
  4073d1:	call   406240 <test_json@@Base>
  4073d6:	mov    r15d,eax
  4073d9:	or     r15d,ebx
  4073dc:	or     r15d,r14d
  4073df:	mov    DWORD PTR [rsp],0x312
  4073e6:	lea    rsi,[rip+0x2eed2]        # 4362bf <_IO_stdin_used@@Base+0x32bf>
  4073ed:	lea    rdx,[rip+0x2ef45]        # 436339 <_IO_stdin_used@@Base+0x3339>
  4073f4:	xor    ecx,ecx
  4073f6:	xor    r8d,r8d
  4073f9:	xor    r9d,r9d
  4073fc:	mov    rdi,r13
  4073ff:	call   406240 <test_json@@Base>
  407404:	mov    r14d,eax
  407407:	mov    DWORD PTR [rsp],0x317
  40740e:	lea    rsi,[rip+0x2ef93]        # 4363a8 <_IO_stdin_used@@Base+0x33a8>
  407415:	lea    rdx,[rip+0x2f017]        # 436433 <_IO_stdin_used@@Base+0x3433>
  40741c:	xor    ecx,ecx
  40741e:	xor    r8d,r8d
  407421:	xor    r9d,r9d
  407424:	mov    rdi,r13
  407427:	call   406240 <test_json@@Base>
  40742c:	mov    ebx,eax
  40742e:	or     ebx,r14d
  407431:	mov    DWORD PTR [rsp],0x31c
  407438:	lea    rsi,[rip+0x2f072]        # 4364b1 <_IO_stdin_used@@Base+0x34b1>
  40743f:	lea    rdx,[rip+0x2f0e6]        # 43652c <_IO_stdin_used@@Base+0x352c>
  407446:	xor    ecx,ecx
  407448:	xor    r8d,r8d
  40744b:	xor    r9d,r9d
  40744e:	mov    rdi,r13
  407451:	call   406240 <test_json@@Base>
  407456:	mov    ebp,eax
  407458:	or     ebp,ebx
  40745a:	mov    DWORD PTR [rsp],0x321
  407461:	lea    rsi,[rip+0x2f134]        # 43659c <_IO_stdin_used@@Base+0x359c>
  407468:	lea    rdx,[rip+0x2f1b7]        # 436626 <_IO_stdin_used@@Base+0x3626>
  40746f:	xor    ecx,ecx
  407471:	xor    r8d,r8d
  407474:	xor    r9d,r9d
  407477:	mov    rdi,r13
  40747a:	call   406240 <test_json@@Base>
  40747f:	mov    ebx,eax
  407481:	or     ebx,ebp
  407483:	or     ebx,r15d
  407486:	mov    DWORD PTR [rsp],0x326
  40748d:	lea    rsi,[rip+0x2f211]        # 4366a5 <_IO_stdin_used@@Base+0x36a5>
  407494:	lea    rdx,[rip+0x2f299]        # 436734 <_IO_stdin_used@@Base+0x3734>
  40749b:	xor    ecx,ecx
  40749d:	xor    r8d,r8d
  4074a0:	xor    r9d,r9d
  4074a3:	mov    rdi,r13
  4074a6:	call   406240 <test_json@@Base>
  4074ab:	xor    ecx,ecx
  4074ad:	or     eax,ebx
  4074af:	setne  cl
  4074b2:	neg    ecx
  4074b4:	mov    eax,ecx
  4074b6:	add    rsp,0x8
  4074ba:	pop    rbx
  4074bb:	pop    r12
  4074bd:	pop    r13
  4074bf:	pop    r14
  4074c1:	pop    r15
  4074c3:	pop    rbp
  4074c4:	ret    
  4074c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074cf:	nop
  4074d0:	push   rbp
  4074d1:	push   r15
  4074d3:	push   r14
  4074d5:	push   r13
  4074d7:	push   r12
  4074d9:	push   rbx
  4074da:	sub    rsp,0x58
  4074de:	mov    rbp,rcx
  4074e1:	mov    r14,rdx
  4074e4:	mov    r12,rsi
  4074e7:	mov    r15,rdi
  4074ea:	mov    DWORD PTR [rcx],0x0
  4074f0:	mov    rdi,QWORD PTR [rdi]
  4074f3:	mov    esi,0x24
  4074f8:	call   41eb00 <flatcc_builder_start_table@@Base>
  4074fd:	test   eax,eax
  4074ff:	je     407529 <main@@Base+0x709>
  407501:	mov    ecx,0x21
  407506:	mov    rdi,r15
  407509:	mov    rsi,r12
  40750c:	mov    rdx,r14
  40750f:	call   423620 <flatcc_json_parser_set_error@@Base>
  407514:	mov    r12,rax
  407517:	mov    rax,r12
  40751a:	add    rsp,0x58
  40751e:	pop    rbx
  40751f:	pop    r12
  407521:	pop    r13
  407523:	pop    r14
  407525:	pop    r15
  407527:	pop    rbp
  407528:	ret    
  407529:	lea    r8,[rsp+0x48]
  40752e:	mov    ecx,0x1
  407533:	mov    rdi,r15
  407536:	mov    rsi,r12
  407539:	mov    rdx,r14
  40753c:	call   4258e0 <flatcc_json_parser_prepare_unions@@Base>
  407541:	cmp    rax,r14
  407544:	je     407501 <main@@Base+0x6e1>
  407546:	cmp    r12,r14
  407549:	je     407583 <main@@Base+0x763>
  40754b:	cmp    BYTE PTR [r12],0x7b
  407550:	jne    407583 <main@@Base+0x763>
  407552:	lea    rax,[r12+0x1]
  407557:	mov    rcx,r14
  40755a:	sub    rcx,rax
  40755d:	cmp    rcx,0x2
  407561:	jl     4075e9 <main@@Base+0x7c9>
  407567:	cmp    BYTE PTR [rax],0x20
  40756a:	jg     4075f7 <main@@Base+0x7d7>
  407570:	jne    4075e9 <main@@Base+0x7c9>
  407572:	cmp    BYTE PTR [r12+0x2],0x20
  407578:	jle    4075e9 <main@@Base+0x7c9>
  40757a:	add    r12,0x2
  40757e:	mov    rax,r12
  407581:	jmp    4075f7 <main@@Base+0x7d7>
  407583:	mov    ecx,0x15
  407588:	mov    rdi,r15
  40758b:	mov    rsi,r12
  40758e:	mov    rdx,r14
  407591:	call   423620 <flatcc_json_parser_set_error@@Base>
  407596:	mov    r12,rax
  407599:	lea    rbx,[r15+0x1c]
  40759d:	cmp    DWORD PTR [rbx],0x0
  4075a0:	jne    407501 <main@@Base+0x6e1>
  4075a6:	mov    rdi,QWORD PTR [r15]
  4075a9:	mov    esi,0x3
  4075ae:	call   41f3d0 <flatcc_builder_check_required_field@@Base>
  4075b3:	test   eax,eax
  4075b5:	je     40763c <main@@Base+0x81c>
  4075bb:	mov    rcx,QWORD PTR [rsp+0x48]
  4075c0:	mov    rdi,r15
  4075c3:	mov    rsi,r12
  4075c6:	mov    rdx,r14
  4075c9:	call   425960 <flatcc_json_parser_finalize_unions@@Base>
  4075ce:	mov    r12,rax
  4075d1:	mov    rdi,QWORD PTR [r15]
  4075d4:	call   41f510 <flatcc_builder_end_table@@Base>
  4075d9:	mov    DWORD PTR [rbp+0x0],eax
  4075dc:	test   eax,eax
  4075de:	jne    407517 <main@@Base+0x6f7>
  4075e4:	jmp    407501 <main@@Base+0x6e1>
  4075e9:	mov    rdi,r15
  4075ec:	mov    rsi,rax
  4075ef:	mov    rdx,r14
  4075f2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4075f7:	mov    rsi,r14
  4075fa:	cmp    rax,r14
  4075fd:	je     40765a <main@@Base+0x83a>
  4075ff:	cmp    BYTE PTR [rax],0x7d
  407602:	jne    407657 <main@@Base+0x837>
  407604:	lea    r12,[rax+0x1]
  407608:	mov    rcx,r14
  40760b:	sub    rcx,r12
  40760e:	cmp    rcx,0x2
  407612:	jl     4106ab <main@@Base+0x988b>
  407618:	cmp    BYTE PTR [r12],0x20
  40761d:	jg     407599 <main@@Base+0x779>
  407623:	jne    4106ab <main@@Base+0x988b>
  407629:	cmp    BYTE PTR [rax+0x2],0x20
  40762d:	jle    4106ab <main@@Base+0x988b>
  407633:	add    rax,0x2
  407637:	jmp    407596 <main@@Base+0x776>
  40763c:	mov    ecx,0x1d
  407641:	mov    rdi,r15
  407644:	mov    rsi,r12
  407647:	mov    rdx,r14
  40764a:	call   423620 <flatcc_json_parser_set_error@@Base>
  40764f:	mov    r12,rax
  407652:	jmp    407501 <main@@Base+0x6e1>
  407657:	mov    rsi,rax
  40765a:	movabs r12,0x7465737400000000
  407664:	lea    rbx,[r15+0x1c]
  407668:	lea    rax,[r12+0x61727261]
  407670:	mov    QWORD PTR [rsp+0x50],rax
  407675:	mov    QWORD PTR [rsp+0x8],r15
  40767a:	mov    QWORD PTR [rsp+0x18],rbp
  40767f:	mov    QWORD PTR [rsp+0x38],rbx
  407684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40768e:	xchg   ax,ax
  407690:	mov    r13,r14
  407693:	cmp    rsi,r14
  407696:	je     4076b9 <main@@Base+0x899>
  407698:	cmp    BYTE PTR [rsi],0x22
  40769b:	jne    4076a6 <main@@Base+0x886>
  40769d:	add    rsi,0x1
  4076a1:	mov    r13,rsi
  4076a4:	jmp    4076b9 <main@@Base+0x899>
  4076a6:	mov    ecx,0x5
  4076ab:	mov    rdi,r15
  4076ae:	mov    rdx,r14
  4076b1:	call   423620 <flatcc_json_parser_set_error@@Base>
  4076b6:	mov    r13,rax
  4076b9:	mov    r15,r14
  4076bc:	sub    r15,r13
  4076bf:	cmp    r15,0x8
  4076c3:	jb     40778d <main@@Base+0x96d>
  4076c9:	movbe  rbx,QWORD PTR [r13+0x0]
  4076cf:	cmp    rbx,QWORD PTR [rsp+0x50]
  4076d4:	jae    407822 <main@@Base+0xa02>
  4076da:	movabs rax,0x6e616d6500000000
  4076e4:	cmp    rbx,rax
  4076e7:	jae    40785c <main@@Base+0xa3c>
  4076ed:	movabs rax,0x666c657800000000
  4076f7:	cmp    rbx,rax
  4076fa:	jae    407979 <main@@Base+0xb59>
  407700:	and    rbx,0xffffffffff000000
  407707:	movabs rax,0x636f6c6f72000000
  407711:	cmp    rbx,rax
  407714:	je     407e1c <main@@Base+0xffc>
  40771a:	movabs rax,0x656e656d79000000
  407724:	cmp    rbx,rax
  407727:	jne    40a5a6 <main@@Base+0x3786>
  40772d:	mov    rax,r13
  407730:	cmp    r15,0x6
  407734:	mov    r15,QWORD PTR [rsp+0x8]
  407739:	jl     4099f5 <main@@Base+0x2bd5>
  40773f:	cmp    BYTE PTR [r13+0x5],0x22
  407744:	mov    rax,r13
  407747:	jne    4099f5 <main@@Base+0x2bd5>
  40774d:	lea    rsi,[r13+0x6]
  407751:	mov    rax,r14
  407754:	sub    rax,rsi
  407757:	cmp    rax,0x2
  40775b:	jl     408de5 <main@@Base+0x1fc5>
  407761:	cmp    BYTE PTR [rsi],0x20
  407764:	jg     408df3 <main@@Base+0x1fd3>
  40776a:	jne    408de5 <main@@Base+0x1fc5>
  407770:	cmp    BYTE PTR [r13+0x7],0x20
  407775:	jle    408de5 <main@@Base+0x1fc5>
  40777b:	lea    rsi,[r13+0x7]
  40777f:	cmp    rsi,r14
  407782:	jne    408dfc <main@@Base+0x1fdc>
  407788:	jmp    408ea1 <main@@Base+0x2081>
  40778d:	mov    eax,r15d
  407790:	and    al,0xf
  407792:	add    al,0xff
  407794:	cmp    al,0x7
  407796:	ja     40a5a6 <main@@Base+0x3786>
  40779c:	movzx  eax,al
  40779f:	lea    rcx,[rip+0x2b87a]        # 433020 <_IO_stdin_used@@Base+0x20>
  4077a6:	movsxd rsi,DWORD PTR [rcx+rax*4]
  4077aa:	add    rsi,rcx
  4077ad:	xor    r8d,r8d
  4077b0:	xor    eax,eax
  4077b2:	xor    ecx,ecx
  4077b4:	xor    edx,edx
  4077b6:	xor    edi,edi
  4077b8:	xor    ebx,ebx
  4077ba:	xor    ebp,ebp
  4077bc:	jmp    rsi
  4077be:	movsx  r8,BYTE PTR [r13+0x7]
  4077c3:	movsx  rax,BYTE PTR [r13+0x6]
  4077c8:	shl    rax,0x8
  4077cc:	or     rax,r8
  4077cf:	movsx  rcx,BYTE PTR [r13+0x5]
  4077d4:	shl    rcx,0x10
  4077d8:	or     rcx,rax
  4077db:	movsx  rdx,BYTE PTR [r13+0x4]
  4077e0:	shl    rdx,0x18
  4077e4:	or     rdx,rcx
  4077e7:	movsx  rdi,BYTE PTR [r13+0x3]
  4077ec:	shl    rdi,0x20
  4077f0:	or     rdi,rdx
  4077f3:	movsx  rbx,BYTE PTR [r13+0x2]
  4077f8:	shl    rbx,0x28
  4077fc:	or     rbx,rdi
  4077ff:	movsx  rbp,BYTE PTR [r13+0x1]
  407804:	shl    rbp,0x30
  407808:	or     rbp,rbx
  40780b:	movzx  ebx,BYTE PTR [r13+0x0]
  407810:	shl    rbx,0x38
  407814:	or     rbx,rbp
  407817:	cmp    rbx,QWORD PTR [rsp+0x50]
  40781c:	jb     4076da <main@@Base+0x8ba>
  407822:	lea    rax,[r12+0x66330000]
  40782a:	cmp    rbx,rax
  40782d:	jae    4078f8 <main@@Base+0xad8>
  407833:	cmp    rbx,QWORD PTR [rsp+0x50]
  407838:	jne    407a0c <main@@Base+0xbec>
  40783e:	lea    r15,[r13+0x8]
  407842:	mov    rax,r14
  407845:	sub    rax,r15
  407848:	cmp    rax,0x8
  40784c:	jb     407b02 <main@@Base+0xce2>
  407852:	movbe  rcx,QWORD PTR [r15]
  407857:	jmp    407b98 <main@@Base+0xd78>
  40785c:	cmp    rbx,r12
  40785f:	jae    407a61 <main@@Base+0xc41>
  407865:	movabs rax,0x706172656e745f6e
  40786f:	cmp    rbx,rax
  407872:	jae    407c29 <main@@Base+0xe09>
  407878:	movabs rax,0xffffffff00000000
  407882:	and    rbx,rax
  407885:	movabs rax,0x6e616d6500000000
  40788f:	cmp    rbx,rax
  407892:	jne    40a5a6 <main@@Base+0x3786>
  407898:	mov    rax,r13
  40789b:	cmp    r15,0x5
  40789f:	mov    r15,QWORD PTR [rsp+0x8]
  4078a4:	jl     409be7 <main@@Base+0x2dc7>
  4078aa:	cmp    BYTE PTR [r13+0x4],0x22
  4078af:	mov    rax,r13
  4078b2:	jne    409be7 <main@@Base+0x2dc7>
  4078b8:	lea    rsi,[r13+0x5]
  4078bc:	mov    rax,r14
  4078bf:	sub    rax,rsi
  4078c2:	cmp    rax,0x2
  4078c6:	jl     408ed4 <main@@Base+0x20b4>
  4078cc:	cmp    BYTE PTR [rsi],0x20
  4078cf:	jg     408ee2 <main@@Base+0x20c2>
  4078d5:	jne    408ed4 <main@@Base+0x20b4>
  4078db:	cmp    BYTE PTR [r13+0x6],0x20
  4078e0:	jle    408ed4 <main@@Base+0x20b4>
  4078e6:	lea    rsi,[r13+0x6]
  4078ea:	cmp    rsi,r14
  4078ed:	jne    408eeb <main@@Base+0x20cb>
  4078f3:	jmp    408ff3 <main@@Base+0x21d3>
  4078f8:	lea    rcx,[r12+0x68617368]
  407900:	cmp    rbx,rcx
  407903:	jae    407ade <main@@Base+0xcbe>
  407909:	and    rbx,0xffffffffffff0000
  407910:	cmp    rbx,rax
  407913:	jne    40a5a6 <main@@Base+0x3786>
  407919:	mov    rbx,r13
  40791c:	cmp    r15,0x7
  407920:	mov    r15,QWORD PTR [rsp+0x8]
  407925:	jl     40945a <main@@Base+0x263a>
  40792b:	cmp    BYTE PTR [r13+0x6],0x22
  407930:	mov    rbx,r13
  407933:	jne    40945a <main@@Base+0x263a>
  407939:	lea    rsi,[r13+0x7]
  40793d:	mov    rax,r14
  407940:	sub    rax,rsi
  407943:	cmp    rax,0x2
  407947:	jl     4083f6 <main@@Base+0x15d6>
  40794d:	cmp    BYTE PTR [rsi],0x20
  407950:	jg     408404 <main@@Base+0x15e4>
  407956:	jne    4083f6 <main@@Base+0x15d6>
  40795c:	cmp    BYTE PTR [r13+0x8],0x20
  407961:	jle    4083f6 <main@@Base+0x15d6>
  407967:	lea    rsi,[r13+0x8]
  40796b:	cmp    rsi,r14
  40796e:	jne    40840d <main@@Base+0x15ed>
  407974:	jmp    4084b4 <main@@Base+0x1694>
  407979:	mov    rax,rbx
  40797c:	shr    rax,0x34
  407980:	cmp    rax,0x686
  407986:	ja     407c52 <main@@Base+0xe32>
  40798c:	movabs rax,0xffffffff00000000
  407996:	and    rbx,rax
  407999:	movabs rax,0x666c657800000000
  4079a3:	cmp    rbx,rax
  4079a6:	jne    40a5a6 <main@@Base+0x3786>
  4079ac:	mov    r12,r13
  4079af:	cmp    r15,0x5
  4079b3:	mov    r15,QWORD PTR [rsp+0x8]
  4079b8:	jl     409c43 <main@@Base+0x2e23>
  4079be:	cmp    BYTE PTR [r13+0x4],0x22
  4079c3:	mov    r12,r13
  4079c6:	jne    409c43 <main@@Base+0x2e23>
  4079cc:	lea    rsi,[r13+0x5]
  4079d0:	mov    rax,r14
  4079d3:	sub    rax,rsi
  4079d6:	cmp    rax,0x2
  4079da:	jl     408f36 <main@@Base+0x2116>
  4079e0:	cmp    BYTE PTR [rsi],0x20
  4079e3:	jg     408f44 <main@@Base+0x2124>
  4079e9:	jne    408f36 <main@@Base+0x2116>
  4079ef:	cmp    BYTE PTR [r13+0x6],0x20
  4079f4:	jle    408f36 <main@@Base+0x2116>
  4079fa:	lea    rsi,[r13+0x6]
  4079fe:	cmp    rsi,r14
  407a01:	jne    408f4d <main@@Base+0x212d>
  407a07:	jmp    409011 <main@@Base+0x21f1>
  407a0c:	lea    rcx,[r12+0x656d7074]
  407a14:	cmp    rbx,rcx
  407a17:	jae    407ce5 <main@@Base+0xec5>
  407a1d:	movabs rax,0x74657374626f6f6c
  407a27:	cmp    rbx,rax
  407a2a:	je     408132 <main@@Base+0x1312>
  407a30:	movabs rax,0x7465737462617365
  407a3a:	cmp    rbx,rax
  407a3d:	jne    40a5a6 <main@@Base+0x3786>
  407a43:	lea    r15,[r13+0x8]
  407a47:	mov    rax,r14
  407a4a:	sub    rax,r15
  407a4d:	cmp    rax,0x8
  407a51:	jb     4084de <main@@Base+0x16be>
  407a57:	movbe  rcx,QWORD PTR [r15]
  407a5c:	jmp    40856a <main@@Base+0x174a>
  407a61:	mov    rdx,r12
  407a64:	mov    r12,rbx
  407a67:	and    r12,0xffffffffff000000
  407a6e:	lea    rax,[rdx+0x34000000]
  407a75:	cmp    r12,rax
  407a78:	jne    407d1d <main@@Base+0xefd>
  407a7e:	mov    r12,r13
  407a81:	cmp    r15,0x6
  407a85:	jl     4094f5 <main@@Base+0x26d5>
  407a8b:	cmp    BYTE PTR [r13+0x5],0x22
  407a90:	mov    r12,r13
  407a93:	jne    4094f5 <main@@Base+0x26d5>
  407a99:	lea    rsi,[r13+0x6]
  407a9d:	mov    rax,r14
  407aa0:	sub    rax,rsi
  407aa3:	cmp    rax,0x2
  407aa7:	mov    rbp,QWORD PTR [rsp+0x8]
  407aac:	jl     408458 <main@@Base+0x1638>
  407ab2:	cmp    BYTE PTR [rsi],0x20
  407ab5:	jg     408466 <main@@Base+0x1646>
  407abb:	jne    408458 <main@@Base+0x1638>
  407ac1:	cmp    BYTE PTR [r13+0x7],0x20
  407ac6:	jle    408458 <main@@Base+0x1638>
  407acc:	lea    rsi,[r13+0x7]
  407ad0:	cmp    rsi,r14
  407ad3:	jne    40846b <main@@Base+0x164b>
  407ad9:	jmp    4084c9 <main@@Base+0x16a9>
  407ade:	jne    407d91 <main@@Base+0xf71>
  407ae4:	lea    r15,[r13+0x8]
  407ae8:	mov    rax,r14
  407aeb:	sub    rax,r15
  407aee:	cmp    rax,0x8
  407af2:	jb     407e7c <main@@Base+0x105c>
  407af8:	movbe  rcx,QWORD PTR [r15]
  407afd:	jmp    407f08 <main@@Base+0x10e8>
  407b02:	mov    ecx,eax
  407b04:	and    cl,0xf
  407b07:	add    cl,0xff
  407b0a:	cmp    cl,0x7
  407b0d:	ja     40d3da <main@@Base+0x65ba>
  407b13:	movzx  ecx,cl
  407b16:	lea    rdx,[rip+0x2b6c3]        # 4331e0 <_IO_stdin_used@@Base+0x1e0>
  407b1d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  407b21:	add    rcx,rdx
  407b24:	xor    r8d,r8d
  407b27:	xor    r9d,r9d
  407b2a:	xor    edx,edx
  407b2c:	xor    esi,esi
  407b2e:	xor    ebx,ebx
  407b30:	xor    ebp,ebp
  407b32:	xor    edi,edi
  407b34:	jmp    rcx
  407b36:	movsx  r8,BYTE PTR [r13+0xf]
  407b3b:	movsx  r9,BYTE PTR [r13+0xe]
  407b40:	shl    r9,0x8
  407b44:	or     r9,r8
  407b47:	movsx  rdx,BYTE PTR [r13+0xd]
  407b4c:	shl    rdx,0x10
  407b50:	or     rdx,r9
  407b53:	movsx  rsi,BYTE PTR [r13+0xc]
  407b58:	shl    rsi,0x18
  407b5c:	or     rsi,rdx
  407b5f:	movsx  rbx,BYTE PTR [r13+0xb]
  407b64:	shl    rbx,0x20
  407b68:	or     rbx,rsi
  407b6b:	movsx  rbp,BYTE PTR [r13+0xa]
  407b70:	shl    rbp,0x28
  407b74:	or     rbp,rbx
  407b77:	movsx  rdi,BYTE PTR [r13+0x9]
  407b7c:	shl    rdi,0x30
  407b80:	or     rdi,rbp
  407b83:	movzx  ecx,BYTE PTR [r15]
  407b87:	shl    rcx,0x38
  407b8b:	or     rcx,rdi
  407b8e:	movabs r12,0x7465737400000000
  407b98:	movabs rdx,0x796f66737472696d
  407ba2:	cmp    rcx,rdx
  407ba5:	ja     407dd8 <main@@Base+0xfb8>
  407bab:	movabs rdx,0x796f66736f727465
  407bb5:	cmp    rcx,rdx
  407bb8:	je     408192 <main@@Base+0x1372>
  407bbe:	movabs rdx,0x796f66626f6f6c73
  407bc8:	cmp    rcx,rdx
  407bcb:	jne    40d3da <main@@Base+0x65ba>
  407bd1:	cmp    rax,0x9
  407bd5:	jl     40d3da <main@@Base+0x65ba>
  407bdb:	cmp    BYTE PTR [r13+0x10],0x22
  407be0:	jne    40d3da <main@@Base+0x65ba>
  407be6:	lea    rsi,[r13+0x11]
  407bea:	mov    rax,r14
  407bed:	sub    rax,rsi
  407bf0:	cmp    rax,0x2
  407bf4:	jl     4093d4 <main@@Base+0x25b4>
  407bfa:	cmp    BYTE PTR [rsi],0x20
  407bfd:	jg     4093e4 <main@@Base+0x25c4>
  407c03:	jne    4093d4 <main@@Base+0x25b4>
  407c09:	cmp    BYTE PTR [r13+0x12],0x20
  407c0e:	jle    4093d4 <main@@Base+0x25b4>
  407c14:	add    r13,0x12
  407c18:	mov    rsi,r13
  407c1b:	cmp    rsi,r14
  407c1e:	jne    4093e9 <main@@Base+0x25c9>
  407c24:	jmp    409432 <main@@Base+0x2612>
  407c29:	jne    407f83 <main@@Base+0x1163>
  407c2f:	lea    rsi,[r13+0x8]
  407c33:	mov    rax,r14
  407c36:	sub    rax,rsi
  407c39:	cmp    rax,0x8
  407c3d:	jb     4081ce <main@@Base+0x13ae>
  407c43:	movbe  rax,QWORD PTR [rsi]
  407c48:	mov    r15,QWORD PTR [rsp+0x8]
  407c4d:	jmp    408259 <main@@Base+0x1439>
  407c52:	movabs rax,0x696e76656e746f72
  407c5c:	cmp    rbx,rax
  407c5f:	jae    407ff4 <main@@Base+0x11d4>
  407c65:	movabs rax,0xffff000000000000
  407c6f:	and    rbx,rax
  407c72:	movabs rax,0x6870000000000000
  407c7c:	cmp    rbx,rax
  407c7f:	jne    40a5a6 <main@@Base+0x3786>
  407c85:	mov    rbx,r13
  407c88:	cmp    r15,0x3
  407c8c:	mov    r15,QWORD PTR [rsp+0x8]
  407c91:	jl     40ae58 <main@@Base+0x4038>
  407c97:	cmp    BYTE PTR [r13+0x2],0x22
  407c9c:	mov    rbx,r13
  407c9f:	jne    40ae58 <main@@Base+0x4038>
  407ca5:	lea    rsi,[r13+0x3]
  407ca9:	mov    rax,r14
  407cac:	sub    rax,rsi
  407caf:	cmp    rax,0x2
  407cb3:	jl     409706 <main@@Base+0x28e6>
  407cb9:	cmp    BYTE PTR [rsi],0x20
  407cbc:	jg     409714 <main@@Base+0x28f4>
  407cc2:	jne    409706 <main@@Base+0x28e6>
  407cc8:	cmp    BYTE PTR [r13+0x4],0x20
  407ccd:	jle    409706 <main@@Base+0x28e6>
  407cd3:	lea    rsi,[r13+0x4]
  407cd7:	cmp    rsi,r14
  407cda:	jne    40971d <main@@Base+0x28fd>
  407ce0:	jmp    409826 <main@@Base+0x2a06>
  407ce5:	lea    rax,[r12+0x66000000]
  407ced:	cmp    rbx,rax
  407cf0:	jae    408018 <main@@Base+0x11f8>
  407cf6:	cmp    rbx,rcx
  407cf9:	jne    40a5a6 <main@@Base+0x3786>
  407cff:	lea    r15,[r13+0x8]
  407d03:	mov    rax,r14
  407d06:	sub    rax,r15
  407d09:	cmp    rax,0x8
  407d0d:	jb     40891e <main@@Base+0x1afe>
  407d13:	movbe  rcx,QWORD PTR [r15]
  407d18:	jmp    4089aa <main@@Base+0x1b8a>
  407d1d:	mov    rax,rbx
  407d20:	movabs rcx,0xffffffff00000000
  407d2a:	and    rax,rcx
  407d2d:	cmp    rax,rdx
  407d30:	jne    409041 <main@@Base+0x2221>
  407d36:	mov    rax,r13
  407d39:	cmp    r15,0x5
  407d3d:	jl     409f05 <main@@Base+0x30e5>
  407d43:	cmp    BYTE PTR [r13+0x4],0x22
  407d48:	mov    rax,r13
  407d4b:	jne    409f05 <main@@Base+0x30e5>
  407d51:	lea    rsi,[r13+0x5]
  407d55:	mov    rax,r14
  407d58:	sub    rax,rsi
  407d5b:	cmp    rax,0x2
  407d5f:	jl     408f9a <main@@Base+0x217a>
  407d65:	cmp    BYTE PTR [rsi],0x20
  407d68:	jg     408faa <main@@Base+0x218a>
  407d6e:	jne    408f9a <main@@Base+0x217a>
  407d74:	cmp    BYTE PTR [r13+0x6],0x20
  407d79:	jle    408f9a <main@@Base+0x217a>
  407d7f:	lea    rsi,[r13+0x6]
  407d83:	cmp    rsi,r14
  407d86:	jne    408faf <main@@Base+0x218f>
  407d8c:	jmp    409026 <main@@Base+0x2206>
  407d91:	movabs rax,0x766563746f725f6f
  407d9b:	cmp    rbx,rax
  407d9e:	jae    408093 <main@@Base+0x1273>
  407da4:	lea    rax,[r12+0x6e657374]
  407dac:	cmp    rbx,rax
  407daf:	mov    r15,QWORD PTR [rsp+0x8]
  407db4:	jne    40a5ab <main@@Base+0x378b>
  407dba:	lea    rsi,[r13+0x8]
  407dbe:	mov    rax,r14
  407dc1:	sub    rax,rsi
  407dc4:	cmp    rax,0x8
  407dc8:	jb     408a10 <main@@Base+0x1bf0>
  407dce:	movbe  rax,QWORD PTR [rsi]
  407dd3:	jmp    408a96 <main@@Base+0x1c76>
  407dd8:	movabs rax,0x796f667461626c65
  407de2:	cmp    rcx,rax
  407de5:	je     4081b0 <main@@Base+0x1390>
  407deb:	movabs rax,0x796f66737472696e
  407df5:	cmp    rcx,rax
  407df8:	jne    40e96e <main@@Base+0x7b4e>
  407dfe:	lea    r15,[r13+0x10]
  407e02:	mov    rax,r14
  407e05:	sub    rax,r15
  407e08:	cmp    rax,0x8
  407e0c:	jb     4085d3 <main@@Base+0x17b3>
  407e12:	movbe  rcx,QWORD PTR [r15]
  407e17:	jmp    40865f <main@@Base+0x183f>
  407e1c:	mov    rbx,r13
  407e1f:	cmp    r15,0x6
  407e23:	mov    r15,QWORD PTR [rsp+0x8]
  407e28:	jl     409a3d <main@@Base+0x2c1d>
  407e2e:	cmp    BYTE PTR [r13+0x5],0x22
  407e33:	mov    rbx,r13
  407e36:	jne    409a3d <main@@Base+0x2c1d>
  407e3c:	lea    rsi,[r13+0x6]
  407e40:	mov    rax,r14
  407e43:	sub    rax,rsi
  407e46:	cmp    rax,0x2
  407e4a:	jl     408e47 <main@@Base+0x2027>
  407e50:	cmp    BYTE PTR [rsi],0x20
  407e53:	jg     408e55 <main@@Base+0x2035>
  407e59:	jne    408e47 <main@@Base+0x2027>
  407e5f:	cmp    BYTE PTR [r13+0x7],0x20
  407e64:	jle    408e47 <main@@Base+0x2027>
  407e6a:	lea    rsi,[r13+0x7]
  407e6e:	cmp    rsi,r14
  407e71:	jne    408e5a <main@@Base+0x203a>
  407e77:	jmp    408ebf <main@@Base+0x209f>
  407e7c:	mov    ecx,eax
  407e7e:	and    cl,0xf
  407e81:	add    cl,0xff
  407e84:	cmp    cl,0x7
  407e87:	ja     40e96e <main@@Base+0x7b4e>
  407e8d:	movzx  ecx,cl
  407e90:	lea    rdx,[rip+0x2b229]        # 4330c0 <_IO_stdin_used@@Base+0xc0>
  407e97:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  407e9b:	add    rcx,rdx
  407e9e:	xor    r8d,r8d
  407ea1:	xor    r9d,r9d
  407ea4:	xor    edx,edx
  407ea6:	xor    esi,esi
  407ea8:	xor    ebx,ebx
  407eaa:	xor    ebp,ebp
  407eac:	xor    edi,edi
  407eae:	jmp    rcx
  407eb0:	movsx  r8,BYTE PTR [r13+0xf]
  407eb5:	movsx  r9,BYTE PTR [r13+0xe]
  407eba:	shl    r9,0x8
  407ebe:	or     r9,r8
  407ec1:	movsx  rdx,BYTE PTR [r13+0xd]
  407ec6:	shl    rdx,0x10
  407eca:	or     rdx,r9
  407ecd:	movsx  rsi,BYTE PTR [r13+0xc]
  407ed2:	shl    rsi,0x18
  407ed6:	or     rsi,rdx
  407ed9:	movsx  rbx,BYTE PTR [r13+0xb]
  407ede:	shl    rbx,0x20
  407ee2:	or     rbx,rsi
  407ee5:	movsx  rbp,BYTE PTR [r13+0xa]
  407eea:	shl    rbp,0x28
  407eee:	or     rbp,rbx
  407ef1:	movsx  rdi,BYTE PTR [r13+0x9]
  407ef6:	shl    rdi,0x30
  407efa:	or     rdi,rbp
  407efd:	movzx  ecx,BYTE PTR [r15]
  407f01:	shl    rcx,0x38
  407f05:	or     rcx,rdi
  407f08:	movabs rdx,0x7336345f666e7631
  407f12:	cmp    rcx,rdx
  407f15:	jae    4080b7 <main@@Base+0x1297>
  407f1b:	movabs rdx,0x7333325f666e7631
  407f25:	cmp    rcx,rdx
  407f28:	jne    40e96e <main@@Base+0x7b4e>
  407f2e:	cmp    rax,0x9
  407f32:	jl     4098c4 <main@@Base+0x2aa4>
  407f38:	cmp    BYTE PTR [r13+0x10],0x22
  407f3d:	jne    4098c4 <main@@Base+0x2aa4>
  407f43:	lea    rsi,[r13+0x11]
  407f47:	mov    rax,r14
  407f4a:	sub    rax,rsi
  407f4d:	cmp    rax,0x2
  407f51:	jl     409865 <main@@Base+0x2a45>
  407f57:	cmp    BYTE PTR [rsi],0x20
  407f5a:	jg     409875 <main@@Base+0x2a55>
  407f60:	jne    409865 <main@@Base+0x2a45>
  407f66:	cmp    BYTE PTR [r13+0x12],0x20
  407f6b:	jle    409865 <main@@Base+0x2a45>
  407f71:	lea    rsi,[r13+0x12]
  407f75:	cmp    rsi,r14
  407f78:	jne    40987e <main@@Base+0x2a5e>
  407f7e:	jmp    4099d0 <main@@Base+0x2bb0>
  407f83:	shr    rbx,0x28
  407f87:	cmp    rbx,0x706f73
  407f8e:	jne    40a5a6 <main@@Base+0x3786>
  407f94:	mov    r12,r13
  407f97:	cmp    r15,0x4
  407f9b:	mov    r15,QWORD PTR [rsp+0x8]
  407fa0:	jl     40af94 <main@@Base+0x4174>
  407fa6:	cmp    BYTE PTR [r13+0x3],0x22
  407fab:	mov    r12,r13
  407fae:	jne    40af94 <main@@Base+0x4174>
  407fb4:	lea    rsi,[r13+0x4]
  407fb8:	mov    rax,r14
  407fbb:	sub    rax,rsi
  407fbe:	cmp    rax,0x2
  407fc2:	jl     409768 <main@@Base+0x2948>
  407fc8:	cmp    BYTE PTR [rsi],0x20
  407fcb:	jg     409776 <main@@Base+0x2956>
  407fd1:	jne    409768 <main@@Base+0x2948>
  407fd7:	cmp    BYTE PTR [r13+0x5],0x20
  407fdc:	jle    409768 <main@@Base+0x2948>
  407fe2:	lea    rsi,[r13+0x5]
  407fe6:	cmp    rsi,r14
  407fe9:	jne    40977f <main@@Base+0x295f>
  407fef:	jmp    40983b <main@@Base+0x2a1b>
  407ff4:	jne    40828b <main@@Base+0x146b>
  407ffa:	lea    r15,[r13+0x8]
  407ffe:	mov    rax,r14
  408001:	sub    rax,r15
  408004:	cmp    rax,0x8
  408008:	jb     408acb <main@@Base+0x1cab>
  40800e:	movbe  rcx,QWORD PTR [r15]
  408013:	jmp    408b57 <main@@Base+0x1d37>
  408018:	mov    rcx,rbx
  40801b:	and    rcx,0xffffffffffff0000
  408022:	lea    rdx,[r12+0x66320000]
  40802a:	cmp    rcx,rdx
  40802d:	jne    40830b <main@@Base+0x14eb>
  408033:	mov    rbx,r13
  408036:	cmp    r15,0x7
  40803a:	mov    r15,QWORD PTR [rsp+0x8]
  40803f:	jl     40bb0c <main@@Base+0x4cec>
  408045:	cmp    BYTE PTR [r13+0x6],0x22
  40804a:	mov    rbx,r13
  40804d:	jne    40bb0c <main@@Base+0x4cec>
  408053:	lea    rsi,[r13+0x7]
  408057:	mov    rax,r14
  40805a:	sub    rax,rsi
  40805d:	cmp    rax,0x2
  408061:	jl     4097cc <main@@Base+0x29ac>
  408067:	cmp    BYTE PTR [rsi],0x20
  40806a:	jg     4097da <main@@Base+0x29ba>
  408070:	jne    4097cc <main@@Base+0x29ac>
  408076:	cmp    BYTE PTR [r13+0x8],0x20
  40807b:	jle    4097cc <main@@Base+0x29ac>
  408081:	lea    rsi,[r13+0x8]
  408085:	cmp    rsi,r14
  408088:	jne    4097df <main@@Base+0x29bf>
  40808e:	jmp    409850 <main@@Base+0x2a30>
  408093:	jne    40a5a6 <main@@Base+0x3786>
  408099:	lea    r15,[r13+0x8]
  40809d:	mov    rax,r14
  4080a0:	sub    rax,r15
  4080a3:	cmp    rax,0x8
  4080a7:	jb     408bbd <main@@Base+0x1d9d>
  4080ad:	movbe  rcx,QWORD PTR [r15]
  4080b2:	jmp    408c49 <main@@Base+0x1e29>
  4080b7:	movabs rdx,0x7533325f666e7630
  4080c1:	cmp    rcx,rdx
  4080c4:	ja     40837b <main@@Base+0x155b>
  4080ca:	movabs rdx,0x7336345f666e7631
  4080d4:	cmp    rcx,rdx
  4080d7:	jne    40e96e <main@@Base+0x7b4e>
  4080dd:	cmp    rax,0x9
  4080e1:	jl     40a25a <main@@Base+0x343a>
  4080e7:	cmp    BYTE PTR [r13+0x10],0x22
  4080ec:	jne    40a25a <main@@Base+0x343a>
  4080f2:	lea    rsi,[r13+0x11]
  4080f6:	mov    rax,r14
  4080f9:	sub    rax,rsi
  4080fc:	cmp    rax,0x2
  408100:	jl     40a1fb <main@@Base+0x33db>
  408106:	cmp    BYTE PTR [rsi],0x20
  408109:	jg     40a20b <main@@Base+0x33eb>
  40810f:	jne    40a1fb <main@@Base+0x33db>
  408115:	cmp    BYTE PTR [r13+0x12],0x20
  40811a:	jle    40a1fb <main@@Base+0x33db>
  408120:	lea    rsi,[r13+0x12]
  408124:	cmp    rsi,r14
  408127:	jne    40a214 <main@@Base+0x33f4>
  40812d:	jmp    40a42a <main@@Base+0x360a>
  408132:	mov    r12,r13
  408135:	cmp    r15,0x9
  408139:	mov    r15,QWORD PTR [rsp+0x8]
  40813e:	jl     40a8fe <main@@Base+0x3ade>
  408144:	cmp    BYTE PTR [r13+0x8],0x22
  408149:	mov    r12,r13
  40814c:	jne    40a8fe <main@@Base+0x3ade>
  408152:	lea    rsi,[r13+0x9]
  408156:	mov    rax,r14
  408159:	sub    rax,rsi
  40815c:	cmp    rax,0x2
  408160:	jl     409363 <main@@Base+0x2543>
  408166:	cmp    BYTE PTR [rsi],0x20
  408169:	jg     409371 <main@@Base+0x2551>
  40816f:	jne    409363 <main@@Base+0x2543>
  408175:	cmp    BYTE PTR [r13+0xa],0x20
  40817a:	jle    409363 <main@@Base+0x2543>
  408180:	lea    rsi,[r13+0xa]
  408184:	cmp    rsi,r14
  408187:	jne    409376 <main@@Base+0x2556>
  40818d:	jmp    4093bf <main@@Base+0x259f>
  408192:	lea    r15,[r13+0x10]
  408196:	mov    rax,r14
  408199:	sub    rax,r15
  40819c:	cmp    rax,0x8
  4081a0:	jb     4086cb <main@@Base+0x18ab>
  4081a6:	movbe  rcx,QWORD PTR [r15]
  4081ab:	jmp    408757 <main@@Base+0x1937>
  4081b0:	lea    r15,[r13+0x10]
  4081b4:	mov    rax,r14
  4081b7:	sub    rax,r15
  4081ba:	cmp    rax,0x8
  4081be:	jb     4087c6 <main@@Base+0x19a6>
  4081c4:	movbe  rcx,QWORD PTR [r15]
  4081c9:	jmp    408852 <main@@Base+0x1a32>
  4081ce:	and    al,0xf
  4081d0:	add    al,0xff
  4081d2:	cmp    al,0x7
  4081d4:	mov    r15,QWORD PTR [rsp+0x8]
  4081d9:	ja     408ac3 <main@@Base+0x1ca3>
  4081df:	movzx  eax,al
  4081e2:	lea    rcx,[rip+0x2b0d7]        # 4332c0 <_IO_stdin_used@@Base+0x2c0>
  4081e9:	movsxd rax,DWORD PTR [rcx+rax*4]
  4081ed:	add    rax,rcx
  4081f0:	xor    r8d,r8d
  4081f3:	xor    r9d,r9d
  4081f6:	xor    ecx,ecx
  4081f8:	xor    edx,edx
  4081fa:	xor    ebp,ebp
  4081fc:	xor    ebx,ebx
  4081fe:	xor    edi,edi
  408200:	jmp    rax
  408202:	movsx  r8,BYTE PTR [r13+0xf]
  408207:	movsx  r9,BYTE PTR [r13+0xe]
  40820c:	shl    r9,0x8
  408210:	or     r9,r8
  408213:	movsx  rcx,BYTE PTR [r13+0xd]
  408218:	shl    rcx,0x10
  40821c:	or     rcx,r9
  40821f:	movsx  rdx,BYTE PTR [r13+0xc]
  408224:	shl    rdx,0x18
  408228:	or     rdx,rcx
  40822b:	movsx  rbp,BYTE PTR [r13+0xb]
  408230:	shl    rbp,0x20
  408234:	or     rbp,rdx
  408237:	movsx  rbx,BYTE PTR [r13+0xa]
  40823c:	shl    rbx,0x28
  408240:	or     rbx,rbp
  408243:	movsx  rdi,BYTE PTR [r13+0x9]
  408248:	shl    rdi,0x30
  40824c:	or     rdi,rbx
  40824f:	movzx  eax,BYTE PTR [rsi]
  408252:	shl    rax,0x38
  408256:	or     rax,rdi
  408259:	movabs rcx,0x616d657370616365
  408263:	cmp    rax,rcx
  408266:	jne    408ac3 <main@@Base+0x1ca3>
  40826c:	lea    r12,[r13+0x10]
  408270:	mov    rax,r14
  408273:	sub    rax,r12
  408276:	cmp    rax,0x8
  40827a:	jb     408c7a <main@@Base+0x1e5a>
  408280:	movbe  rcx,QWORD PTR [r12]
  408286:	jmp    408d07 <main@@Base+0x1ee7>
  40828b:	movabs rax,0xffffffff00000000
  408295:	and    rbx,rax
  408298:	movabs rax,0x6d616e6100000000
  4082a2:	cmp    rbx,rax
  4082a5:	jne    40a5a6 <main@@Base+0x3786>
  4082ab:	mov    rbx,r13
  4082ae:	cmp    r15,0x5
  4082b2:	mov    r15,QWORD PTR [rsp+0x8]
  4082b7:	jl     40c44f <main@@Base+0x562f>
  4082bd:	cmp    BYTE PTR [r13+0x4],0x22
  4082c2:	mov    rbx,r13
  4082c5:	jne    40c44f <main@@Base+0x562f>
  4082cb:	lea    rsi,[r13+0x5]
  4082cf:	mov    rax,r14
  4082d2:	sub    rax,rsi
  4082d5:	cmp    rax,0x2
  4082d9:	jl     40a115 <main@@Base+0x32f5>
  4082df:	cmp    BYTE PTR [rsi],0x20
  4082e2:	jg     40a123 <main@@Base+0x3303>
  4082e8:	jne    40a115 <main@@Base+0x32f5>
  4082ee:	cmp    BYTE PTR [r13+0x6],0x20
  4082f3:	jle    40a115 <main@@Base+0x32f5>
  4082f9:	lea    rsi,[r13+0x6]
  4082fd:	cmp    rsi,r14
  408300:	jne    40a12c <main@@Base+0x330c>
  408306:	jmp    40a1d1 <main@@Base+0x33b1>
  40830b:	and    rbx,0xffffffffff000000
  408312:	cmp    rbx,rax
  408315:	jne    40a5a6 <main@@Base+0x3786>
  40831b:	mov    rbx,r13
  40831e:	cmp    r15,0x6
  408322:	mov    r15,QWORD PTR [rsp+0x8]
  408327:	jl     40c591 <main@@Base+0x5771>
  40832d:	cmp    BYTE PTR [r13+0x5],0x22
  408332:	mov    rbx,r13
  408335:	jne    40c591 <main@@Base+0x5771>
  40833b:	lea    rsi,[r13+0x6]
  40833f:	mov    rax,r14
  408342:	sub    rax,rsi
  408345:	cmp    rax,0x2
  408349:	jl     40a177 <main@@Base+0x3357>
  40834f:	cmp    BYTE PTR [rsi],0x20
  408352:	jg     40a185 <main@@Base+0x3365>
  408358:	jne    40a177 <main@@Base+0x3357>
  40835e:	cmp    BYTE PTR [r13+0x7],0x20
  408363:	jle    40a177 <main@@Base+0x3357>
  408369:	lea    rsi,[r13+0x7]
  40836d:	cmp    rsi,r14
  408370:	jne    40a18a <main@@Base+0x336a>
  408376:	jmp    40a1e6 <main@@Base+0x33c6>
  40837b:	movabs rdx,0x7536345f666e7631
  408385:	cmp    rcx,rdx
  408388:	je     4090a7 <main@@Base+0x2287>
  40838e:	movabs rdx,0x7533325f666e7631
  408398:	cmp    rcx,rdx
  40839b:	jne    40e96e <main@@Base+0x7b4e>
  4083a1:	cmp    rax,0x9
  4083a5:	jl     40aba2 <main@@Base+0x3d82>
  4083ab:	cmp    BYTE PTR [r13+0x10],0x22
  4083b0:	jne    40aba2 <main@@Base+0x3d82>
  4083b6:	lea    rsi,[r13+0x11]
  4083ba:	mov    rax,r14
  4083bd:	sub    rax,rsi
  4083c0:	cmp    rax,0x2
  4083c4:	jl     40ab43 <main@@Base+0x3d23>
  4083ca:	cmp    BYTE PTR [rsi],0x20
  4083cd:	jg     40ab53 <main@@Base+0x3d33>
  4083d3:	jne    40ab43 <main@@Base+0x3d23>
  4083d9:	cmp    BYTE PTR [r13+0x12],0x20
  4083de:	jle    40ab43 <main@@Base+0x3d23>
  4083e4:	lea    rsi,[r13+0x12]
  4083e8:	cmp    rsi,r14
  4083eb:	jne    40ab5c <main@@Base+0x3d3c>
  4083f1:	jmp    40ae19 <main@@Base+0x3ff9>
  4083f6:	mov    rdi,r15
  4083f9:	mov    rdx,r14
  4083fc:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408401:	mov    rsi,rax
  408404:	cmp    rsi,r14
  408407:	je     4084b4 <main@@Base+0x1694>
  40840d:	cmp    BYTE PTR [rsi],0x3a
  408410:	jne    4084b4 <main@@Base+0x1694>
  408416:	lea    rbx,[rsi+0x1]
  40841a:	mov    rax,r14
  40841d:	sub    rax,rbx
  408420:	cmp    rax,0x2
  408424:	jl     409449 <main@@Base+0x2629>
  40842a:	cmp    BYTE PTR [rbx],0x20
  40842d:	jg     40945a <main@@Base+0x263a>
  408433:	jne    409449 <main@@Base+0x2629>
  408439:	cmp    BYTE PTR [rsi+0x2],0x20
  40843d:	jle    409449 <main@@Base+0x2629>
  408443:	add    rsi,0x2
  408447:	mov    rbx,rsi
  40844a:	cmp    r13,rbx
  40844d:	jne    409463 <main@@Base+0x2643>
  408453:	jmp    40a5ab <main@@Base+0x378b>
  408458:	mov    rdi,rbp
  40845b:	mov    rdx,r14
  40845e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408463:	mov    rsi,rax
  408466:	cmp    rsi,r14
  408469:	je     4084c9 <main@@Base+0x16a9>
  40846b:	cmp    BYTE PTR [rsi],0x3a
  40846e:	jne    4084c9 <main@@Base+0x16a9>
  408470:	lea    r12,[rsi+0x1]
  408474:	mov    rax,r14
  408477:	sub    rax,r12
  40847a:	cmp    rax,0x2
  40847e:	jl     4094e4 <main@@Base+0x26c4>
  408484:	cmp    BYTE PTR [r12],0x20
  408489:	jg     4094f5 <main@@Base+0x26d5>
  40848f:	jne    4094e4 <main@@Base+0x26c4>
  408495:	cmp    BYTE PTR [rsi+0x2],0x20
  408499:	jle    4094e4 <main@@Base+0x26c4>
  40849f:	add    rsi,0x2
  4084a3:	mov    r12,rsi
  4084a6:	cmp    r13,r12
  4084a9:	jne    4094fe <main@@Base+0x26de>
  4084af:	jmp    40a575 <main@@Base+0x3755>
  4084b4:	mov    ecx,0x4
  4084b9:	mov    rdi,r15
  4084bc:	mov    rdx,r14
  4084bf:	call   423620 <flatcc_json_parser_set_error@@Base>
  4084c4:	jmp    409457 <main@@Base+0x2637>
  4084c9:	mov    ecx,0x4
  4084ce:	mov    rdi,rbp
  4084d1:	mov    rdx,r14
  4084d4:	call   423620 <flatcc_json_parser_set_error@@Base>
  4084d9:	jmp    4094f2 <main@@Base+0x26d2>
  4084de:	mov    ecx,eax
  4084e0:	and    cl,0xf
  4084e3:	add    cl,0xff
  4084e6:	cmp    cl,0x7
  4084e9:	ja     40e96e <main@@Base+0x7b4e>
  4084ef:	movzx  ecx,cl
  4084f2:	lea    rdx,[rip+0x2aca7]        # 4331a0 <_IO_stdin_used@@Base+0x1a0>
  4084f9:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4084fd:	add    rcx,rdx
  408500:	xor    r8d,r8d
  408503:	xor    r9d,r9d
  408506:	xor    edx,edx
  408508:	xor    esi,esi
  40850a:	xor    ebx,ebx
  40850c:	xor    edi,edi
  40850e:	xor    ebp,ebp
  408510:	jmp    rcx
  408512:	movsx  r8,BYTE PTR [r13+0xf]
  408517:	movsx  r9,BYTE PTR [r13+0xe]
  40851c:	shl    r9,0x8
  408520:	or     r9,r8
  408523:	movsx  rdx,BYTE PTR [r13+0xd]
  408528:	shl    rdx,0x10
  40852c:	or     rdx,r9
  40852f:	movsx  rsi,BYTE PTR [r13+0xc]
  408534:	shl    rsi,0x18
  408538:	or     rsi,rdx
  40853b:	movsx  rbx,BYTE PTR [r13+0xb]
  408540:	shl    rbx,0x20
  408544:	or     rbx,rsi
  408547:	movsx  rdi,BYTE PTR [r13+0xa]
  40854c:	shl    rdi,0x28
  408550:	or     rdi,rbx
  408553:	movsx  rbp,BYTE PTR [r13+0x9]
  408558:	shl    rbp,0x30
  40855c:	or     rbp,rdi
  40855f:	movzx  ecx,BYTE PTR [r15]
  408563:	shl    rcx,0x38
  408567:	or     rcx,rbp
  40856a:	shr    rcx,0x30
  40856e:	cmp    rcx,0x3634
  408575:	jne    40e96e <main@@Base+0x7b4e>
  40857b:	cmp    rax,0x3
  40857f:	jl     40d3da <main@@Base+0x65ba>
  408585:	cmp    BYTE PTR [r13+0xa],0x22
  40858a:	jne    40d3da <main@@Base+0x65ba>
  408590:	lea    rsi,[r13+0xb]
  408594:	mov    rax,r14
  408597:	sub    rax,rsi
  40859a:	cmp    rax,0x2
  40859e:	jl     409b64 <main@@Base+0x2d44>
  4085a4:	cmp    BYTE PTR [rsi],0x20
  4085a7:	jg     409b74 <main@@Base+0x2d54>
  4085ad:	jne    409b64 <main@@Base+0x2d44>
  4085b3:	cmp    BYTE PTR [r13+0xc],0x20
  4085b8:	jle    409b64 <main@@Base+0x2d44>
  4085be:	add    r13,0xc
  4085c2:	mov    rsi,r13
  4085c5:	cmp    rsi,r14
  4085c8:	jne    409b79 <main@@Base+0x2d59>
  4085ce:	jmp    409bc2 <main@@Base+0x2da2>
  4085d3:	mov    ecx,eax
  4085d5:	and    cl,0xf
  4085d8:	add    cl,0xff
  4085db:	cmp    cl,0x7
  4085de:	ja     40e96e <main@@Base+0x7b4e>
  4085e4:	movzx  ecx,cl
  4085e7:	lea    rdx,[rip+0x2ac32]        # 433220 <_IO_stdin_used@@Base+0x220>
  4085ee:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4085f2:	add    rcx,rdx
  4085f5:	xor    r8d,r8d
  4085f8:	xor    r9d,r9d
  4085fb:	xor    edx,edx
  4085fd:	xor    esi,esi
  4085ff:	xor    ebx,ebx
  408601:	xor    ebp,ebp
  408603:	xor    edi,edi
  408605:	jmp    rcx
  408607:	movsx  r8,BYTE PTR [r13+0x17]
  40860c:	movsx  r9,BYTE PTR [r13+0x16]
  408611:	shl    r9,0x8
  408615:	or     r9,r8
  408618:	movsx  rdx,BYTE PTR [r13+0x15]
  40861d:	shl    rdx,0x10
  408621:	or     rdx,r9
  408624:	movsx  rsi,BYTE PTR [r13+0x14]
  408629:	shl    rsi,0x18
  40862d:	or     rsi,rdx
  408630:	movsx  rbx,BYTE PTR [r13+0x13]
  408635:	shl    rbx,0x20
  408639:	or     rbx,rsi
  40863c:	movsx  rbp,BYTE PTR [r13+0x12]
  408641:	shl    rbp,0x28
  408645:	or     rbp,rbx
  408648:	movsx  rdi,BYTE PTR [r13+0x11]
  40864d:	shl    rdi,0x30
  408651:	or     rdi,rbp
  408654:	movzx  ecx,BYTE PTR [r15]
  408658:	shl    rcx,0x38
  40865c:	or     rcx,rdi
  40865f:	mov    rdx,rcx
  408662:	shr    rdx,0x30
  408666:	cmp    rdx,0x6732
  40866d:	jne    4088b8 <main@@Base+0x1a98>
  408673:	cmp    rax,0x3
  408677:	jl     40d3da <main@@Base+0x65ba>
  40867d:	cmp    BYTE PTR [r13+0x12],0x22
  408682:	jne    40d3da <main@@Base+0x65ba>
  408688:	lea    rsi,[r13+0x13]
  40868c:	mov    rax,r14
  40868f:	sub    rax,rsi
  408692:	cmp    rax,0x2
  408696:	jl     409f8e <main@@Base+0x316e>
  40869c:	cmp    BYTE PTR [rsi],0x20
  40869f:	jg     409f9e <main@@Base+0x317e>
  4086a5:	jne    409f8e <main@@Base+0x316e>
  4086ab:	cmp    BYTE PTR [r13+0x14],0x20
  4086b0:	jle    409f8e <main@@Base+0x316e>
  4086b6:	add    r13,0x14
  4086ba:	mov    rsi,r13
  4086bd:	cmp    rsi,r14
  4086c0:	jne    409fa7 <main@@Base+0x3187>
  4086c6:	jmp    40a0b8 <main@@Base+0x3298>
  4086cb:	mov    ecx,eax
  4086cd:	and    cl,0xf
  4086d0:	add    cl,0xff
  4086d3:	cmp    cl,0x7
  4086d6:	ja     40e96e <main@@Base+0x7b4e>
  4086dc:	movzx  ecx,cl
  4086df:	lea    rdx,[rip+0x2ab5a]        # 433240 <_IO_stdin_used@@Base+0x240>
  4086e6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4086ea:	add    rcx,rdx
  4086ed:	xor    r8d,r8d
  4086f0:	xor    r9d,r9d
  4086f3:	xor    edx,edx
  4086f5:	xor    esi,esi
  4086f7:	xor    ebx,ebx
  4086f9:	xor    edi,edi
  4086fb:	xor    ebp,ebp
  4086fd:	jmp    rcx
  4086ff:	movsx  r8,BYTE PTR [r13+0x17]
  408704:	movsx  r9,BYTE PTR [r13+0x16]
  408709:	shl    r9,0x8
  40870d:	or     r9,r8
  408710:	movsx  rdx,BYTE PTR [r13+0x15]
  408715:	shl    rdx,0x10
  408719:	or     rdx,r9
  40871c:	movsx  rsi,BYTE PTR [r13+0x14]
  408721:	shl    rsi,0x18
  408725:	or     rsi,rdx
  408728:	movsx  rbx,BYTE PTR [r13+0x13]
  40872d:	shl    rbx,0x20
  408731:	or     rbx,rsi
  408734:	movsx  rdi,BYTE PTR [r13+0x12]
  408739:	shl    rdi,0x28
  40873d:	or     rdi,rbx
  408740:	movsx  rbp,BYTE PTR [r13+0x11]
  408745:	shl    rbp,0x30
  408749:	or     rbp,rdi
  40874c:	movzx  ecx,BYTE PTR [r15]
  408750:	shl    rcx,0x38
  408754:	or     rcx,rbp
  408757:	shr    rcx,0x8
  40875b:	movabs rdx,0x64737472756374
  408765:	cmp    rcx,rdx
  408768:	jne    40e96e <main@@Base+0x7b4e>
  40876e:	cmp    rax,0x8
  408772:	jl     40d3da <main@@Base+0x65ba>
  408778:	cmp    BYTE PTR [r13+0x17],0x22
  40877d:	jne    40d3da <main@@Base+0x65ba>
  408783:	lea    rsi,[r13+0x18]
  408787:	mov    rax,r14
  40878a:	sub    rax,rsi
  40878d:	cmp    rax,0x2
  408791:	jl     409ff4 <main@@Base+0x31d4>
  408797:	cmp    BYTE PTR [rsi],0x20
  40879a:	jg     40a004 <main@@Base+0x31e4>
  4087a0:	jne    409ff4 <main@@Base+0x31d4>
  4087a6:	cmp    BYTE PTR [r13+0x19],0x20
  4087ab:	jle    409ff4 <main@@Base+0x31d4>
  4087b1:	add    r13,0x19
  4087b5:	mov    rsi,r13
  4087b8:	cmp    rsi,r14
  4087bb:	jne    40a00d <main@@Base+0x31ed>
  4087c1:	jmp    40a0cf <main@@Base+0x32af>
  4087c6:	mov    ecx,eax
  4087c8:	and    cl,0xf
  4087cb:	add    cl,0xff
  4087ce:	cmp    cl,0x7
  4087d1:	ja     40e96e <main@@Base+0x7b4e>
  4087d7:	movzx  ecx,cl
  4087da:	lea    rdx,[rip+0x2aa1f]        # 433200 <_IO_stdin_used@@Base+0x200>
  4087e1:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4087e5:	add    rcx,rdx
  4087e8:	xor    r8d,r8d
  4087eb:	xor    r9d,r9d
  4087ee:	xor    edx,edx
  4087f0:	xor    esi,esi
  4087f2:	xor    ebx,ebx
  4087f4:	xor    edi,edi
  4087f6:	xor    ebp,ebp
  4087f8:	jmp    rcx
  4087fa:	movsx  r8,BYTE PTR [r13+0x17]
  4087ff:	movsx  r9,BYTE PTR [r13+0x16]
  408804:	shl    r9,0x8
  408808:	or     r9,r8
  40880b:	movsx  rdx,BYTE PTR [r13+0x15]
  408810:	shl    rdx,0x10
  408814:	or     rdx,r9
  408817:	movsx  rsi,BYTE PTR [r13+0x14]
  40881c:	shl    rsi,0x18
  408820:	or     rsi,rdx
  408823:	movsx  rbx,BYTE PTR [r13+0x13]
  408828:	shl    rbx,0x20
  40882c:	or     rbx,rsi
  40882f:	movsx  rdi,BYTE PTR [r13+0x12]
  408834:	shl    rdi,0x28
  408838:	or     rdi,rbx
  40883b:	movsx  rbp,BYTE PTR [r13+0x11]
  408840:	shl    rbp,0x30
  408844:	or     rbp,rdi
  408847:	movzx  ecx,BYTE PTR [r15]
  40884b:	shl    rcx,0x38
  40884f:	or     rcx,rbp
  408852:	shr    rcx,0x38
  408856:	cmp    rcx,0x73
  40885a:	jne    40e96e <main@@Base+0x7b4e>
  408860:	cmp    rax,0x2
  408864:	jl     40d3da <main@@Base+0x65ba>
  40886a:	cmp    BYTE PTR [r13+0x11],0x22
  40886f:	jne    40d3da <main@@Base+0x65ba>
  408875:	lea    rsi,[r13+0x12]
  408879:	mov    rax,r14
  40887c:	sub    rax,rsi
  40887f:	cmp    rax,0x2
  408883:	jl     40a05a <main@@Base+0x323a>
  408889:	cmp    BYTE PTR [rsi],0x20
  40888c:	jg     40a06a <main@@Base+0x324a>
  408892:	jne    40a05a <main@@Base+0x323a>
  408898:	cmp    BYTE PTR [r13+0x13],0x20
  40889d:	jle    40a05a <main@@Base+0x323a>
  4088a3:	add    r13,0x13
  4088a7:	mov    rsi,r13
  4088aa:	cmp    rsi,r14
  4088ad:	jne    40a06f <main@@Base+0x324f>
  4088b3:	jmp    40a0e6 <main@@Base+0x32c6>
  4088b8:	shr    rcx,0x38
  4088bc:	cmp    rcx,0x67
  4088c0:	jne    40e96e <main@@Base+0x7b4e>
  4088c6:	cmp    rax,0x2
  4088ca:	jl     40d3da <main@@Base+0x65ba>
  4088d0:	cmp    BYTE PTR [r13+0x11],0x22
  4088d5:	jne    40d3da <main@@Base+0x65ba>
  4088db:	lea    rsi,[r13+0x12]
  4088df:	mov    rax,r14
  4088e2:	sub    rax,rsi
  4088e5:	cmp    rax,0x2
  4088e9:	jl     40bbb1 <main@@Base+0x4d91>
  4088ef:	cmp    BYTE PTR [rsi],0x20
  4088f2:	jg     40bbc1 <main@@Base+0x4da1>
  4088f8:	jne    40bbb1 <main@@Base+0x4d91>
  4088fe:	cmp    BYTE PTR [r13+0x13],0x20
  408903:	jle    40bbb1 <main@@Base+0x4d91>
  408909:	add    r13,0x13
  40890d:	mov    rsi,r13
  408910:	cmp    rsi,r14
  408913:	jne    40bbc6 <main@@Base+0x4da6>
  408919:	jmp    40bc0f <main@@Base+0x4def>
  40891e:	mov    ecx,eax
  408920:	and    cl,0xf
  408923:	add    cl,0xff
  408926:	cmp    cl,0x7
  408929:	ja     40e96e <main@@Base+0x7b4e>
  40892f:	movzx  ecx,cl
  408932:	lea    rdx,[rip+0x2a827]        # 433160 <_IO_stdin_used@@Base+0x160>
  408939:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40893d:	add    rcx,rdx
  408940:	xor    r8d,r8d
  408943:	xor    r9d,r9d
  408946:	xor    edx,edx
  408948:	xor    esi,esi
  40894a:	xor    ebx,ebx
  40894c:	xor    edi,edi
  40894e:	xor    ebp,ebp
  408950:	jmp    rcx
  408952:	movsx  r8,BYTE PTR [r13+0xf]
  408957:	movsx  r9,BYTE PTR [r13+0xe]
  40895c:	shl    r9,0x8
  408960:	or     r9,r8
  408963:	movsx  rdx,BYTE PTR [r13+0xd]
  408968:	shl    rdx,0x10
  40896c:	or     rdx,r9
  40896f:	movsx  rsi,BYTE PTR [r13+0xc]
  408974:	shl    rsi,0x18
  408978:	or     rsi,rdx
  40897b:	movsx  rbx,BYTE PTR [r13+0xb]
  408980:	shl    rbx,0x20
  408984:	or     rbx,rsi
  408987:	movsx  rdi,BYTE PTR [r13+0xa]
  40898c:	shl    rdi,0x28
  408990:	or     rdi,rbx
  408993:	movsx  rbp,BYTE PTR [r13+0x9]
  408998:	shl    rbp,0x30
  40899c:	or     rbp,rdi
  40899f:	movzx  ecx,BYTE PTR [r15]
  4089a3:	shl    rcx,0x38
  4089a7:	or     rcx,rbp
  4089aa:	shr    rcx,0x38
  4089ae:	cmp    rcx,0x79
  4089b2:	jne    40e96e <main@@Base+0x7b4e>
  4089b8:	cmp    rax,0x2
  4089bc:	jl     40d3da <main@@Base+0x65ba>
  4089c2:	cmp    BYTE PTR [r13+0x9],0x22
  4089c7:	jne    40d3da <main@@Base+0x65ba>
  4089cd:	lea    rsi,[r13+0xa]
  4089d1:	mov    rax,r14
  4089d4:	sub    rax,rsi
  4089d7:	cmp    rax,0x2
  4089db:	jl     40a366 <main@@Base+0x3546>
  4089e1:	cmp    BYTE PTR [rsi],0x20
  4089e4:	jg     40a376 <main@@Base+0x3556>
  4089ea:	jne    40a366 <main@@Base+0x3546>
  4089f0:	cmp    BYTE PTR [r13+0xb],0x20
  4089f5:	jle    40a366 <main@@Base+0x3546>
  4089fb:	add    r13,0xb
  4089ff:	mov    rsi,r13
  408a02:	cmp    rsi,r14
  408a05:	jne    40a37f <main@@Base+0x355f>
  408a0b:	jmp    40a441 <main@@Base+0x3621>
  408a10:	and    al,0xf
  408a12:	add    al,0xff
  408a14:	cmp    al,0x7
  408a16:	ja     408ac3 <main@@Base+0x1ca3>
  408a1c:	movzx  eax,al
  408a1f:	lea    rcx,[rip+0x2a65a]        # 433080 <_IO_stdin_used@@Base+0x80>
  408a26:	movsxd rax,DWORD PTR [rcx+rax*4]
  408a2a:	add    rax,rcx
  408a2d:	xor    r8d,r8d
  408a30:	xor    r9d,r9d
  408a33:	xor    ecx,ecx
  408a35:	xor    edx,edx
  408a37:	xor    ebp,ebp
  408a39:	xor    ebx,ebx
  408a3b:	xor    edi,edi
  408a3d:	jmp    rax
  408a3f:	movsx  r8,BYTE PTR [r13+0xf]
  408a44:	movsx  r9,BYTE PTR [r13+0xe]
  408a49:	shl    r9,0x8
  408a4d:	or     r9,r8
  408a50:	movsx  rcx,BYTE PTR [r13+0xd]
  408a55:	shl    rcx,0x10
  408a59:	or     rcx,r9
  408a5c:	movsx  rdx,BYTE PTR [r13+0xc]
  408a61:	shl    rdx,0x18
  408a65:	or     rdx,rcx
  408a68:	movsx  rbp,BYTE PTR [r13+0xb]
  408a6d:	shl    rbp,0x20
  408a71:	or     rbp,rdx
  408a74:	movsx  rbx,BYTE PTR [r13+0xa]
  408a79:	shl    rbx,0x28
  408a7d:	or     rbx,rbp
  408a80:	movsx  rdi,BYTE PTR [r13+0x9]
  408a85:	shl    rdi,0x30
  408a89:	or     rdi,rbx
  408a8c:	movzx  eax,BYTE PTR [rsi]
  408a8f:	shl    rax,0x38
  408a93:	or     rax,rdi
  408a96:	movabs rcx,0x6564666c61746275
  408aa0:	cmp    rax,rcx
  408aa3:	jne    408ac3 <main@@Base+0x1ca3>
  408aa5:	lea    r15,[r13+0x10]
  408aa9:	mov    rax,r14
  408aac:	sub    rax,r15
  408aaf:	cmp    rax,0x8
  408ab3:	jb     40916d <main@@Base+0x234d>
  408ab9:	movbe  rcx,QWORD PTR [r15]
  408abe:	jmp    4091f9 <main@@Base+0x23d9>
  408ac3:	mov    rdi,r15
  408ac6:	jmp    40e979 <main@@Base+0x7b59>
  408acb:	mov    ecx,eax
  408acd:	and    cl,0xf
  408ad0:	add    cl,0xff
  408ad3:	cmp    cl,0x7
  408ad6:	ja     40e96e <main@@Base+0x7b4e>
  408adc:	movzx  ecx,cl
  408adf:	lea    rdx,[rip+0x2a81a]        # 433300 <_IO_stdin_used@@Base+0x300>
  408ae6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408aea:	add    rcx,rdx
  408aed:	xor    r8d,r8d
  408af0:	xor    r9d,r9d
  408af3:	xor    edx,edx
  408af5:	xor    esi,esi
  408af7:	xor    ebx,ebx
  408af9:	xor    edi,edi
  408afb:	xor    ebp,ebp
  408afd:	jmp    rcx
  408aff:	movsx  r8,BYTE PTR [r13+0xf]
  408b04:	movsx  r9,BYTE PTR [r13+0xe]
  408b09:	shl    r9,0x8
  408b0d:	or     r9,r8
  408b10:	movsx  rdx,BYTE PTR [r13+0xd]
  408b15:	shl    rdx,0x10
  408b19:	or     rdx,r9
  408b1c:	movsx  rsi,BYTE PTR [r13+0xc]
  408b21:	shl    rsi,0x18
  408b25:	or     rsi,rdx
  408b28:	movsx  rbx,BYTE PTR [r13+0xb]
  408b2d:	shl    rbx,0x20
  408b31:	or     rbx,rsi
  408b34:	movsx  rdi,BYTE PTR [r13+0xa]
  408b39:	shl    rdi,0x28
  408b3d:	or     rdi,rbx
  408b40:	movsx  rbp,BYTE PTR [r13+0x9]
  408b45:	shl    rbp,0x30
  408b49:	or     rbp,rdi
  408b4c:	movzx  ecx,BYTE PTR [r15]
  408b50:	shl    rcx,0x38
  408b54:	or     rcx,rbp
  408b57:	shr    rcx,0x38
  408b5b:	cmp    rcx,0x79
  408b5f:	jne    40e96e <main@@Base+0x7b4e>
  408b65:	cmp    rax,0x2
  408b69:	jl     40d3da <main@@Base+0x65ba>
  408b6f:	cmp    BYTE PTR [r13+0x9],0x22
  408b74:	jne    40d3da <main@@Base+0x65ba>
  408b7a:	lea    rsi,[r13+0xa]
  408b7e:	mov    rax,r14
  408b81:	sub    rax,rsi
  408b84:	cmp    rax,0x2
  408b88:	jl     40a3cc <main@@Base+0x35ac>
  408b8e:	cmp    BYTE PTR [rsi],0x20
  408b91:	jg     40a3dc <main@@Base+0x35bc>
  408b97:	jne    40a3cc <main@@Base+0x35ac>
  408b9d:	cmp    BYTE PTR [r13+0xb],0x20
  408ba2:	jle    40a3cc <main@@Base+0x35ac>
  408ba8:	add    r13,0xb
  408bac:	mov    rsi,r13
  408baf:	cmp    rsi,r14
  408bb2:	jne    40a3e1 <main@@Base+0x35c1>
  408bb8:	jmp    40a458 <main@@Base+0x3638>
  408bbd:	mov    ecx,eax
  408bbf:	and    cl,0xf
  408bc2:	add    cl,0xff
  408bc5:	cmp    cl,0x7
  408bc8:	ja     40e96e <main@@Base+0x7b4e>
  408bce:	movzx  ecx,cl
  408bd1:	lea    rdx,[rip+0x2a468]        # 433040 <_IO_stdin_used@@Base+0x40>
  408bd8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408bdc:	add    rcx,rdx
  408bdf:	xor    r8d,r8d
  408be2:	xor    r9d,r9d
  408be5:	xor    edx,edx
  408be7:	xor    esi,esi
  408be9:	xor    ebx,ebx
  408beb:	xor    ebp,ebp
  408bed:	xor    edi,edi
  408bef:	jmp    rcx
  408bf1:	movsx  r8,BYTE PTR [r13+0xf]
  408bf6:	movsx  r9,BYTE PTR [r13+0xe]
  408bfb:	shl    r9,0x8
  408bff:	or     r9,r8
  408c02:	movsx  rdx,BYTE PTR [r13+0xd]
  408c07:	shl    rdx,0x10
  408c0b:	or     rdx,r9
  408c0e:	movsx  rsi,BYTE PTR [r13+0xc]
  408c13:	shl    rsi,0x18
  408c17:	or     rsi,rdx
  408c1a:	movsx  rbx,BYTE PTR [r13+0xb]
  408c1f:	shl    rbx,0x20
  408c23:	or     rbx,rsi
  408c26:	movsx  rbp,BYTE PTR [r13+0xa]
  408c2b:	shl    rbp,0x28
  408c2f:	or     rbp,rbx
  408c32:	movsx  rdi,BYTE PTR [r13+0x9]
  408c37:	shl    rdi,0x30
  408c3b:	or     rdi,rbp
  408c3e:	movzx  ecx,BYTE PTR [r15]
  408c42:	shl    rcx,0x38
  408c46:	or     rcx,rdi
  408c49:	movabs rdx,0x665f646f75626c65
  408c53:	cmp    rcx,rdx
  408c56:	jne    408d76 <main@@Base+0x1f56>
  408c5c:	lea    r15,[r13+0x10]
  408c60:	mov    rax,r14
  408c63:	sub    rax,r15
  408c66:	cmp    rax,0x8
  408c6a:	jb     409271 <main@@Base+0x2451>
  408c70:	movbe  rcx,QWORD PTR [r15]
  408c75:	jmp    4092fd <main@@Base+0x24dd>
  408c7a:	mov    ecx,eax
  408c7c:	and    cl,0xf
  408c7f:	add    cl,0xff
  408c82:	cmp    cl,0x7
  408c85:	ja     40a4c6 <main@@Base+0x36a6>
  408c8b:	movzx  ecx,cl
  408c8e:	lea    rdx,[rip+0x2a64b]        # 4332e0 <_IO_stdin_used@@Base+0x2e0>
  408c95:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408c99:	add    rcx,rdx
  408c9c:	xor    r8d,r8d
  408c9f:	xor    r9d,r9d
  408ca2:	xor    edx,edx
  408ca4:	xor    esi,esi
  408ca6:	xor    ebp,ebp
  408ca8:	xor    ebx,ebx
  408caa:	xor    edi,edi
  408cac:	jmp    rcx
  408cae:	movsx  r8,BYTE PTR [r13+0x17]
  408cb3:	movsx  r9,BYTE PTR [r13+0x16]
  408cb8:	shl    r9,0x8
  408cbc:	or     r9,r8
  408cbf:	movsx  rdx,BYTE PTR [r13+0x15]
  408cc4:	shl    rdx,0x10
  408cc8:	or     rdx,r9
  408ccb:	movsx  rsi,BYTE PTR [r13+0x14]
  408cd0:	shl    rsi,0x18
  408cd4:	or     rsi,rdx
  408cd7:	movsx  rbp,BYTE PTR [r13+0x13]
  408cdc:	shl    rbp,0x20
  408ce0:	or     rbp,rsi
  408ce3:	movsx  rbx,BYTE PTR [r13+0x12]
  408ce8:	shl    rbx,0x28
  408cec:	or     rbx,rbp
  408cef:	movsx  rdi,BYTE PTR [r13+0x11]
  408cf4:	shl    rdi,0x30
  408cf8:	or     rdi,rbx
  408cfb:	movzx  ecx,BYTE PTR [r12]
  408d00:	shl    rcx,0x38
  408d04:	or     rcx,rdi
  408d07:	shr    rcx,0x18
  408d0b:	movabs rdx,0x5f74657374
  408d15:	cmp    rcx,rdx
  408d18:	jne    40a4c6 <main@@Base+0x36a6>
  408d1e:	cmp    rax,0x6
  408d22:	jl     40a4c6 <main@@Base+0x36a6>
  408d28:	cmp    BYTE PTR [r13+0x15],0x22
  408d2d:	jne    40a4c6 <main@@Base+0x36a6>
  408d33:	lea    rsi,[r13+0x16]
  408d37:	mov    rax,r14
  408d3a:	sub    rax,rsi
  408d3d:	cmp    rax,0x2
  408d41:	jl     40a46f <main@@Base+0x364f>
  408d47:	cmp    BYTE PTR [rsi],0x20
  408d4a:	jg     40a47d <main@@Base+0x365d>
  408d50:	jne    40a46f <main@@Base+0x364f>
  408d56:	cmp    BYTE PTR [r13+0x17],0x20
  408d5b:	jle    40a46f <main@@Base+0x364f>
  408d61:	add    r13,0x17
  408d65:	mov    rsi,r13
  408d68:	cmp    rsi,r14
  408d6b:	jne    40a482 <main@@Base+0x3662>
  408d71:	jmp    40a4d1 <main@@Base+0x36b1>
  408d76:	shr    rcx,0x8
  408d7a:	movabs rdx,0x665f6c6f6e6773
  408d84:	cmp    rcx,rdx
  408d87:	jne    40e96e <main@@Base+0x7b4e>
  408d8d:	cmp    rax,0x8
  408d91:	jl     40d3da <main@@Base+0x65ba>
  408d97:	cmp    BYTE PTR [r13+0xf],0x22
  408d9c:	jne    40d3da <main@@Base+0x65ba>
  408da2:	lea    rsi,[r13+0x10]
  408da6:	mov    rax,r14
  408da9:	sub    rax,rsi
  408dac:	cmp    rax,0x2
  408db0:	jl     40bec5 <main@@Base+0x50a5>
  408db6:	cmp    BYTE PTR [rsi],0x20
  408db9:	jg     40bed5 <main@@Base+0x50b5>
  408dbf:	jne    40bec5 <main@@Base+0x50a5>
  408dc5:	cmp    BYTE PTR [r13+0x11],0x20
  408dca:	jle    40bec5 <main@@Base+0x50a5>
  408dd0:	add    r13,0x11
  408dd4:	mov    rsi,r13
  408dd7:	cmp    rsi,r14
  408dda:	jne    40beda <main@@Base+0x50ba>
  408de0:	jmp    40bf23 <main@@Base+0x5103>
  408de5:	mov    rdi,r15
  408de8:	mov    rdx,r14
  408deb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408df0:	mov    rsi,rax
  408df3:	cmp    rsi,r14
  408df6:	je     408ea1 <main@@Base+0x2081>
  408dfc:	cmp    BYTE PTR [rsi],0x3a
  408dff:	jne    408ea1 <main@@Base+0x2081>
  408e05:	lea    rax,[rsi+0x1]
  408e09:	mov    rcx,r14
  408e0c:	sub    rcx,rax
  408e0f:	cmp    rcx,0x2
  408e13:	jl     4099e7 <main@@Base+0x2bc7>
  408e19:	cmp    BYTE PTR [rax],0x20
  408e1c:	jg     4099f5 <main@@Base+0x2bd5>
  408e22:	jne    4099e7 <main@@Base+0x2bc7>
  408e28:	cmp    BYTE PTR [rsi+0x2],0x20
  408e2c:	jle    4099e7 <main@@Base+0x2bc7>
  408e32:	add    rsi,0x2
  408e36:	mov    rax,rsi
  408e39:	cmp    r13,rax
  408e3c:	jne    4099fe <main@@Base+0x2bde>
  408e42:	jmp    40a5ab <main@@Base+0x378b>
  408e47:	mov    rdi,r15
  408e4a:	mov    rdx,r14
  408e4d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408e52:	mov    rsi,rax
  408e55:	cmp    rsi,r14
  408e58:	je     408ebf <main@@Base+0x209f>
  408e5a:	cmp    BYTE PTR [rsi],0x3a
  408e5d:	jne    408ebf <main@@Base+0x209f>
  408e5f:	lea    rbx,[rsi+0x1]
  408e63:	mov    rax,r14
  408e66:	sub    rax,rbx
  408e69:	cmp    rax,0x2
  408e6d:	jl     409a2c <main@@Base+0x2c0c>
  408e73:	cmp    BYTE PTR [rbx],0x20
  408e76:	jg     409a3d <main@@Base+0x2c1d>
  408e7c:	jne    409a2c <main@@Base+0x2c0c>
  408e82:	cmp    BYTE PTR [rsi+0x2],0x20
  408e86:	jle    409a2c <main@@Base+0x2c0c>
  408e8c:	add    rsi,0x2
  408e90:	mov    rbx,rsi
  408e93:	cmp    r13,rbx
  408e96:	jne    409a46 <main@@Base+0x2c26>
  408e9c:	jmp    40a5ab <main@@Base+0x378b>
  408ea1:	mov    ecx,0x4
  408ea6:	mov    rdi,r15
  408ea9:	mov    rdx,r14
  408eac:	call   423620 <flatcc_json_parser_set_error@@Base>
  408eb1:	cmp    r13,rax
  408eb4:	jne    4099fe <main@@Base+0x2bde>
  408eba:	jmp    40a5ab <main@@Base+0x378b>
  408ebf:	mov    ecx,0x4
  408ec4:	mov    rdi,r15
  408ec7:	mov    rdx,r14
  408eca:	call   423620 <flatcc_json_parser_set_error@@Base>
  408ecf:	jmp    409a3a <main@@Base+0x2c1a>
  408ed4:	mov    rdi,r15
  408ed7:	mov    rdx,r14
  408eda:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408edf:	mov    rsi,rax
  408ee2:	cmp    rsi,r14
  408ee5:	je     408ff3 <main@@Base+0x21d3>
  408eeb:	cmp    BYTE PTR [rsi],0x3a
  408eee:	jne    408ff3 <main@@Base+0x21d3>
  408ef4:	lea    rax,[rsi+0x1]
  408ef8:	mov    rcx,r14
  408efb:	sub    rcx,rax
  408efe:	cmp    rcx,0x2
  408f02:	jl     409bd9 <main@@Base+0x2db9>
  408f08:	cmp    BYTE PTR [rax],0x20
  408f0b:	jg     409be7 <main@@Base+0x2dc7>
  408f11:	jne    409bd9 <main@@Base+0x2db9>
  408f17:	cmp    BYTE PTR [rsi+0x2],0x20
  408f1b:	jle    409bd9 <main@@Base+0x2db9>
  408f21:	add    rsi,0x2
  408f25:	mov    rax,rsi
  408f28:	cmp    r13,rax
  408f2b:	jne    409bf0 <main@@Base+0x2dd0>
  408f31:	jmp    40a5ab <main@@Base+0x378b>
  408f36:	mov    rdi,r15
  408f39:	mov    rdx,r14
  408f3c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408f41:	mov    rsi,rax
  408f44:	cmp    rsi,r14
  408f47:	je     409011 <main@@Base+0x21f1>
  408f4d:	cmp    BYTE PTR [rsi],0x3a
  408f50:	jne    409011 <main@@Base+0x21f1>
  408f56:	lea    r12,[rsi+0x1]
  408f5a:	mov    rax,r14
  408f5d:	sub    rax,r12
  408f60:	cmp    rax,0x2
  408f64:	jl     409c32 <main@@Base+0x2e12>
  408f6a:	cmp    BYTE PTR [r12],0x20
  408f6f:	jg     409c43 <main@@Base+0x2e23>
  408f75:	jne    409c32 <main@@Base+0x2e12>
  408f7b:	cmp    BYTE PTR [rsi+0x2],0x20
  408f7f:	jle    409c32 <main@@Base+0x2e12>
  408f85:	add    rsi,0x2
  408f89:	mov    r12,rsi
  408f8c:	cmp    r13,r12
  408f8f:	jne    409c4c <main@@Base+0x2e2c>
  408f95:	jmp    40afee <main@@Base+0x41ce>
  408f9a:	mov    rdi,QWORD PTR [rsp+0x8]
  408f9f:	mov    rdx,r14
  408fa2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  408fa7:	mov    rsi,rax
  408faa:	cmp    rsi,r14
  408fad:	je     409026 <main@@Base+0x2206>
  408faf:	cmp    BYTE PTR [rsi],0x3a
  408fb2:	jne    409026 <main@@Base+0x2206>
  408fb4:	lea    rax,[rsi+0x1]
  408fb8:	mov    rcx,r14
  408fbb:	sub    rcx,rax
  408fbe:	cmp    rcx,0x2
  408fc2:	jl     409ef5 <main@@Base+0x30d5>
  408fc8:	cmp    BYTE PTR [rax],0x20
  408fcb:	jg     409f05 <main@@Base+0x30e5>
  408fd1:	jne    409ef5 <main@@Base+0x30d5>
  408fd7:	cmp    BYTE PTR [rsi+0x2],0x20
  408fdb:	jle    409ef5 <main@@Base+0x30d5>
  408fe1:	add    rsi,0x2
  408fe5:	mov    rax,rsi
  408fe8:	cmp    r13,rax
  408feb:	jne    409f0e <main@@Base+0x30ee>
  408ff1:	jmp    409041 <main@@Base+0x2221>
  408ff3:	mov    ecx,0x4
  408ff8:	mov    rdi,r15
  408ffb:	mov    rdx,r14
  408ffe:	call   423620 <flatcc_json_parser_set_error@@Base>
  409003:	cmp    r13,rax
  409006:	jne    409bf0 <main@@Base+0x2dd0>
  40900c:	jmp    40a5ab <main@@Base+0x378b>
  409011:	mov    ecx,0x4
  409016:	mov    rdi,r15
  409019:	mov    rdx,r14
  40901c:	call   423620 <flatcc_json_parser_set_error@@Base>
  409021:	jmp    409c40 <main@@Base+0x2e20>
  409026:	mov    ecx,0x4
  40902b:	mov    rdi,QWORD PTR [rsp+0x8]
  409030:	mov    rdx,r14
  409033:	call   423620 <flatcc_json_parser_set_error@@Base>
  409038:	cmp    r13,rax
  40903b:	jne    409f0e <main@@Base+0x30ee>
  409041:	movabs rax,0x7465737400000000
  40904b:	lea    rax,[rax+0x35000000]
  409052:	cmp    r12,rax
  409055:	jne    40a575 <main@@Base+0x3755>
  40905b:	mov    r12,r13
  40905e:	cmp    r15,0x6
  409062:	jl     40a4f7 <main@@Base+0x36d7>
  409068:	cmp    BYTE PTR [r13+0x5],0x22
  40906d:	mov    r12,r13
  409070:	jne    40a4f7 <main@@Base+0x36d7>
  409076:	lea    rsi,[r13+0x6]
  40907a:	mov    rax,r14
  40907d:	sub    rax,rsi
  409080:	cmp    rax,0x2
  409084:	mov    rbp,QWORD PTR [rsp+0x8]
  409089:	jl     4090fc <main@@Base+0x22dc>
  40908b:	cmp    BYTE PTR [rsi],0x20
  40908e:	jg     40910a <main@@Base+0x22ea>
  409090:	jne    4090fc <main@@Base+0x22dc>
  409092:	cmp    BYTE PTR [r13+0x7],0x20
  409097:	jle    4090fc <main@@Base+0x22dc>
  409099:	lea    rsi,[r13+0x7]
  40909d:	cmp    rsi,r14
  4090a0:	jne    40910f <main@@Base+0x22ef>
  4090a2:	jmp    409158 <main@@Base+0x2338>
  4090a7:	cmp    rax,0x9
  4090ab:	jl     40ad0d <main@@Base+0x3eed>
  4090b1:	cmp    BYTE PTR [r13+0x10],0x22
  4090b6:	jne    40ad0d <main@@Base+0x3eed>
  4090bc:	lea    rsi,[r13+0x11]
  4090c0:	mov    rax,r14
  4090c3:	sub    rax,rsi
  4090c6:	cmp    rax,0x2
  4090ca:	jl     40acae <main@@Base+0x3e8e>
  4090d0:	cmp    BYTE PTR [rsi],0x20
  4090d3:	jg     40acbe <main@@Base+0x3e9e>
  4090d9:	jne    40acae <main@@Base+0x3e8e>
  4090df:	cmp    BYTE PTR [r13+0x12],0x20
  4090e4:	jle    40acae <main@@Base+0x3e8e>
  4090ea:	lea    rsi,[r13+0x12]
  4090ee:	cmp    rsi,r14
  4090f1:	jne    40acc7 <main@@Base+0x3ea7>
  4090f7:	jmp    40ae30 <main@@Base+0x4010>
  4090fc:	mov    rdi,rbp
  4090ff:	mov    rdx,r14
  409102:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409107:	mov    rsi,rax
  40910a:	cmp    rsi,r14
  40910d:	je     409158 <main@@Base+0x2338>
  40910f:	cmp    BYTE PTR [rsi],0x3a
  409112:	jne    409158 <main@@Base+0x2338>
  409114:	lea    r12,[rsi+0x1]
  409118:	mov    rax,r14
  40911b:	sub    rax,r12
  40911e:	cmp    rax,0x2
  409122:	jl     40a4e6 <main@@Base+0x36c6>
  409128:	cmp    BYTE PTR [r12],0x20
  40912d:	jg     40a4f7 <main@@Base+0x36d7>
  409133:	jne    40a4e6 <main@@Base+0x36c6>
  409139:	cmp    BYTE PTR [rsi+0x2],0x20
  40913d:	jle    40a4e6 <main@@Base+0x36c6>
  409143:	add    rsi,0x2
  409147:	mov    r12,rsi
  40914a:	cmp    r13,r12
  40914d:	jne    40a4fc <main@@Base+0x36dc>
  409153:	jmp    40a575 <main@@Base+0x3755>
  409158:	mov    ecx,0x4
  40915d:	mov    rdi,rbp
  409160:	mov    rdx,r14
  409163:	call   423620 <flatcc_json_parser_set_error@@Base>
  409168:	jmp    40a4f4 <main@@Base+0x36d4>
  40916d:	mov    ecx,eax
  40916f:	and    cl,0xf
  409172:	add    cl,0xff
  409175:	cmp    cl,0x7
  409178:	ja     40e96e <main@@Base+0x7b4e>
  40917e:	movzx  ecx,cl
  409181:	lea    rdx,[rip+0x29f18]        # 4330a0 <_IO_stdin_used@@Base+0xa0>
  409188:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40918c:	add    rcx,rdx
  40918f:	xor    r8d,r8d
  409192:	xor    r9d,r9d
  409195:	xor    edx,edx
  409197:	xor    esi,esi
  409199:	xor    ebx,ebx
  40919b:	xor    edi,edi
  40919d:	xor    ebp,ebp
  40919f:	jmp    rcx
  4091a1:	movsx  r8,BYTE PTR [r13+0x17]
  4091a6:	movsx  r9,BYTE PTR [r13+0x16]
  4091ab:	shl    r9,0x8
  4091af:	or     r9,r8
  4091b2:	movsx  rdx,BYTE PTR [r13+0x15]
  4091b7:	shl    rdx,0x10
  4091bb:	or     rdx,r9
  4091be:	movsx  rsi,BYTE PTR [r13+0x14]
  4091c3:	shl    rsi,0x18
  4091c7:	or     rsi,rdx
  4091ca:	movsx  rbx,BYTE PTR [r13+0x13]
  4091cf:	shl    rbx,0x20
  4091d3:	or     rbx,rsi
  4091d6:	movsx  rdi,BYTE PTR [r13+0x12]
  4091db:	shl    rdi,0x28
  4091df:	or     rdi,rbx
  4091e2:	movsx  rbp,BYTE PTR [r13+0x11]
  4091e7:	shl    rbp,0x30
  4091eb:	or     rbp,rdi
  4091ee:	movzx  ecx,BYTE PTR [r15]
  4091f2:	shl    rcx,0x38
  4091f6:	or     rcx,rbp
  4091f9:	movabs rdx,0xffffffff00000000
  409203:	and    rcx,rdx
  409206:	movabs rdx,0x6666657200000000
  409210:	cmp    rcx,rdx
  409213:	jne    40e96e <main@@Base+0x7b4e>
  409219:	cmp    rax,0x5
  40921d:	jl     40d3da <main@@Base+0x65ba>
  409223:	cmp    BYTE PTR [r13+0x14],0x22
  409228:	jne    40d3da <main@@Base+0x65ba>
  40922e:	lea    rsi,[r13+0x15]
  409232:	mov    rax,r14
  409235:	sub    rax,rsi
  409238:	cmp    rax,0x2
  40923c:	jl     40bf3a <main@@Base+0x511a>
  409242:	cmp    BYTE PTR [rsi],0x20
  409245:	jg     40bf4a <main@@Base+0x512a>
  40924b:	jne    40bf3a <main@@Base+0x511a>
  409251:	cmp    BYTE PTR [r13+0x16],0x20
  409256:	jle    40bf3a <main@@Base+0x511a>
  40925c:	add    r13,0x16
  409260:	mov    rsi,r13
  409263:	cmp    rsi,r14
  409266:	jne    40bf53 <main@@Base+0x5133>
  40926c:	jmp    40bffe <main@@Base+0x51de>
  409271:	mov    ecx,eax
  409273:	and    cl,0xf
  409276:	add    cl,0xff
  409279:	cmp    cl,0x7
  40927c:	ja     40e96e <main@@Base+0x7b4e>
  409282:	movzx  ecx,cl
  409285:	lea    rdx,[rip+0x29dd4]        # 433060 <_IO_stdin_used@@Base+0x60>
  40928c:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  409290:	add    rcx,rdx
  409293:	xor    r8d,r8d
  409296:	xor    r9d,r9d
  409299:	xor    edx,edx
  40929b:	xor    esi,esi
  40929d:	xor    ebx,ebx
  40929f:	xor    edi,edi
  4092a1:	xor    ebp,ebp
  4092a3:	jmp    rcx
  4092a5:	movsx  r8,BYTE PTR [r13+0x17]
  4092aa:	movsx  r9,BYTE PTR [r13+0x16]
  4092af:	shl    r9,0x8
  4092b3:	or     r9,r8
  4092b6:	movsx  rdx,BYTE PTR [r13+0x15]
  4092bb:	shl    rdx,0x10
  4092bf:	or     rdx,r9
  4092c2:	movsx  rsi,BYTE PTR [r13+0x14]
  4092c7:	shl    rsi,0x18
  4092cb:	or     rsi,rdx
  4092ce:	movsx  rbx,BYTE PTR [r13+0x13]
  4092d3:	shl    rbx,0x20
  4092d7:	or     rbx,rsi
  4092da:	movsx  rdi,BYTE PTR [r13+0x12]
  4092df:	shl    rdi,0x28
  4092e3:	or     rdi,rbx
  4092e6:	movsx  rbp,BYTE PTR [r13+0x11]
  4092eb:	shl    rbp,0x30
  4092ef:	or     rbp,rdi
  4092f2:	movzx  ecx,BYTE PTR [r15]
  4092f6:	shl    rcx,0x38
  4092fa:	or     rcx,rbp
  4092fd:	shr    rcx,0x38
  409301:	cmp    rcx,0x73
  409305:	jne    40e96e <main@@Base+0x7b4e>
  40930b:	cmp    rax,0x2
  40930f:	jl     40d3da <main@@Base+0x65ba>
  409315:	cmp    BYTE PTR [r13+0x11],0x22
  40931a:	jne    40d3da <main@@Base+0x65ba>
  409320:	lea    rsi,[r13+0x12]
  409324:	mov    rax,r14
  409327:	sub    rax,rsi
  40932a:	cmp    rax,0x2
  40932e:	jl     40bfa0 <main@@Base+0x5180>
  409334:	cmp    BYTE PTR [rsi],0x20
  409337:	jg     40bfb0 <main@@Base+0x5190>
  40933d:	jne    40bfa0 <main@@Base+0x5180>
  409343:	cmp    BYTE PTR [r13+0x13],0x20
  409348:	jle    40bfa0 <main@@Base+0x5180>
  40934e:	add    r13,0x13
  409352:	mov    rsi,r13
  409355:	cmp    rsi,r14
  409358:	jne    40bfb5 <main@@Base+0x5195>
  40935e:	jmp    40c015 <main@@Base+0x51f5>
  409363:	mov    rdi,r15
  409366:	mov    rdx,r14
  409369:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40936e:	mov    rsi,rax
  409371:	cmp    rsi,r14
  409374:	je     4093bf <main@@Base+0x259f>
  409376:	cmp    BYTE PTR [rsi],0x3a
  409379:	jne    4093bf <main@@Base+0x259f>
  40937b:	lea    r12,[rsi+0x1]
  40937f:	mov    rax,r14
  409382:	sub    rax,r12
  409385:	cmp    rax,0x2
  409389:	jl     40a8ed <main@@Base+0x3acd>
  40938f:	cmp    BYTE PTR [r12],0x20
  409394:	jg     40a8fe <main@@Base+0x3ade>
  40939a:	jne    40a8ed <main@@Base+0x3acd>
  4093a0:	cmp    BYTE PTR [rsi+0x2],0x20
  4093a4:	jle    40a8ed <main@@Base+0x3acd>
  4093aa:	add    rsi,0x2
  4093ae:	mov    r12,rsi
  4093b1:	cmp    r13,r12
  4093b4:	jne    40a907 <main@@Base+0x3ae7>
  4093ba:	jmp    40afee <main@@Base+0x41ce>
  4093bf:	mov    ecx,0x4
  4093c4:	mov    rdi,r15
  4093c7:	mov    rdx,r14
  4093ca:	call   423620 <flatcc_json_parser_set_error@@Base>
  4093cf:	jmp    40a8fb <main@@Base+0x3adb>
  4093d4:	mov    rdi,QWORD PTR [rsp+0x8]
  4093d9:	mov    rdx,r14
  4093dc:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4093e1:	mov    rsi,rax
  4093e4:	cmp    rsi,r14
  4093e7:	je     409432 <main@@Base+0x2612>
  4093e9:	cmp    BYTE PTR [rsi],0x3a
  4093ec:	jne    409432 <main@@Base+0x2612>
  4093ee:	lea    r12,[rsi+0x1]
  4093f2:	mov    rax,r14
  4093f5:	sub    rax,r12
  4093f8:	cmp    rax,0x2
  4093fc:	jl     40a9ec <main@@Base+0x3bcc>
  409402:	cmp    BYTE PTR [r12],0x20
  409407:	jg     40a9ff <main@@Base+0x3bdf>
  40940d:	jne    40a9ec <main@@Base+0x3bcc>
  409413:	cmp    BYTE PTR [rsi+0x2],0x20
  409417:	jle    40a9ec <main@@Base+0x3bcc>
  40941d:	add    rsi,0x2
  409421:	mov    r12,rsi
  409424:	cmp    r15,r12
  409427:	jne    40aa08 <main@@Base+0x3be8>
  40942d:	jmp    40d3da <main@@Base+0x65ba>
  409432:	mov    ecx,0x4
  409437:	mov    rdi,QWORD PTR [rsp+0x8]
  40943c:	mov    rdx,r14
  40943f:	call   423620 <flatcc_json_parser_set_error@@Base>
  409444:	jmp    40a9fc <main@@Base+0x3bdc>
  409449:	mov    rdi,r15
  40944c:	mov    rsi,rbx
  40944f:	mov    rdx,r14
  409452:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409457:	mov    rbx,rax
  40945a:	cmp    r13,rbx
  40945d:	je     40a5ab <main@@Base+0x378b>
  409463:	mov    DWORD PTR [rsp+0x20],0x0
  40946b:	mov    rdi,r15
  40946e:	mov    rsi,rbx
  409471:	mov    rdx,r14
  409474:	lea    rcx,[rsp+0x20]
  409479:	call   425040 <flatcc_json_parser_float@@Base>
  40947e:	mov    r13,rax
  409481:	cmp    rbx,rax
  409484:	mov    rbp,QWORD PTR [rsp+0x18]
  409489:	jne    4094ba <main@@Base+0x269a>
  40948b:	mov    rdi,r15
  40948e:	mov    rsi,rbx
  409491:	mov    rdx,r14
  409494:	lea    rcx,[rip+0x37d65]        # 441200 <__data_start@@Base+0x150>
  40949b:	lea    r8,[rsp+0x20]
  4094a0:	call   4143b0 <main@@Base+0xd590>
  4094a5:	mov    r13,rax
  4094a8:	cmp    rax,rbx
  4094ab:	je     41078b <main@@Base+0x996b>
  4094b1:	cmp    r13,r14
  4094b4:	je     41078b <main@@Base+0x996b>
  4094ba:	vmovss xmm0,DWORD PTR [rsp+0x20]
  4094c0:	vucomiss xmm0,DWORD PTR [rip+0x29b44]        # 43300c <_IO_stdin_used@@Base+0xc>
  4094c8:	jne    4094d7 <main@@Base+0x26b7>
  4094ca:	jp     4094d7 <main@@Base+0x26b7>
  4094cc:	test   BYTE PTR [r15+0x10],0x2
  4094d1:	je     40e989 <main@@Base+0x7b69>
  4094d7:	mov    rdi,QWORD PTR [r15]
  4094da:	mov    esi,0x1b
  4094df:	jmp    40c616 <main@@Base+0x57f6>
  4094e4:	mov    rdi,rbp
  4094e7:	mov    rsi,r12
  4094ea:	mov    rdx,r14
  4094ed:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4094f2:	mov    r12,rax
  4094f5:	cmp    r13,r12
  4094f8:	je     40a575 <main@@Base+0x3755>
  4094fe:	mov    r15,QWORD PTR [rsp+0x8]
  409503:	mov    rdi,QWORD PTR [r15]
  409506:	mov    esi,0x4
  40950b:	mov    edx,0x2
  409510:	mov    ecx,0x3fffffff
  409515:	call   41e690 <flatcc_builder_start_vector@@Base>
  40951a:	test   eax,eax
  40951c:	jne    407501 <main@@Base+0x6e1>
  409522:	cmp    r12,r14
  409525:	je     40955c <main@@Base+0x273c>
  409527:	cmp    BYTE PTR [r12],0x5b
  40952c:	jne    40955c <main@@Base+0x273c>
  40952e:	lea    rax,[r12+0x1]
  409533:	mov    rcx,r14
  409536:	sub    rcx,rax
  409539:	cmp    rcx,0x2
  40953d:	mov    rbp,QWORD PTR [rsp+0x18]
  409542:	jl     4095a2 <main@@Base+0x2782>
  409544:	cmp    BYTE PTR [rax],0x20
  409547:	jg     4095b0 <main@@Base+0x2790>
  409549:	jne    4095a2 <main@@Base+0x2782>
  40954b:	cmp    BYTE PTR [r12+0x2],0x20
  409551:	jle    4095a2 <main@@Base+0x2782>
  409553:	add    r12,0x2
  409557:	mov    rax,r12
  40955a:	jmp    4095b0 <main@@Base+0x2790>
  40955c:	mov    ecx,0x16
  409561:	mov    rdi,r15
  409564:	mov    rsi,r12
  409567:	mov    rdx,r14
  40956a:	call   423620 <flatcc_json_parser_set_error@@Base>
  40956f:	mov    r13,rax
  409572:	mov    rbp,QWORD PTR [rsp+0x18]
  409577:	movabs r12,0x7465737400000000
  409581:	mov    rdi,QWORD PTR [r15]
  409584:	call   41f820 <flatcc_builder_end_vector@@Base>
  409589:	mov    DWORD PTR [rsp+0x2c],eax
  40958d:	test   eax,eax
  40958f:	je     41078b <main@@Base+0x996b>
  409595:	mov    rdi,QWORD PTR [r15]
  409598:	mov    esi,0x9
  40959d:	jmp    40a6e9 <main@@Base+0x38c9>
  4095a2:	mov    rdi,r15
  4095a5:	mov    rsi,rax
  4095a8:	mov    rdx,r14
  4095ab:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4095b0:	mov    r12,r14
  4095b3:	cmp    rax,r14
  4095b6:	je     4095fe <main@@Base+0x27de>
  4095b8:	cmp    BYTE PTR [rax],0x5d
  4095bb:	jne    4095fb <main@@Base+0x27db>
  4095bd:	lea    r13,[rax+0x1]
  4095c1:	mov    rcx,r14
  4095c4:	sub    rcx,r13
  4095c7:	cmp    rcx,0x2
  4095cb:	movabs r12,0x7465737400000000
  4095d5:	jl     409f78 <main@@Base+0x3158>
  4095db:	cmp    BYTE PTR [r13+0x0],0x20
  4095e0:	jg     409581 <main@@Base+0x2761>
  4095e2:	jne    409f78 <main@@Base+0x3158>
  4095e8:	cmp    BYTE PTR [rax+0x2],0x20
  4095ec:	jle    409f78 <main@@Base+0x3158>
  4095f2:	add    rax,0x2
  4095f6:	mov    r13,rax
  4095f9:	jmp    409581 <main@@Base+0x2761>
  4095fb:	mov    r12,rax
  4095fe:	mov    rdi,QWORD PTR [r15]
  409601:	mov    esi,0x1
  409606:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40960b:	test   rax,rax
  40960e:	je     407501 <main@@Base+0x6e1>
  409614:	mov    rdi,r15
  409617:	mov    rsi,r12
  40961a:	mov    rdx,r14
  40961d:	mov    rcx,rax
  409620:	call   412ab0 <main@@Base+0xbc90>
  409625:	mov    rcx,r14
  409628:	sub    rcx,rax
  40962b:	cmp    rcx,0x2
  40962f:	mov    rbp,QWORD PTR [rsp+0x18]
  409634:	movabs r12,0x7465737400000000
  40963e:	jl     40965b <main@@Base+0x283b>
  409640:	cmp    BYTE PTR [rax],0x20
  409643:	jg     409669 <main@@Base+0x2849>
  409645:	jne    40965b <main@@Base+0x283b>
  409647:	cmp    BYTE PTR [rax+0x1],0x20
  40964b:	jle    40965b <main@@Base+0x283b>
  40964d:	add    rax,0x1
  409651:	cmp    rax,r14
  409654:	jne    409672 <main@@Base+0x2852>
  409656:	jmp    409f46 <main@@Base+0x3126>
  40965b:	mov    rdi,r15
  40965e:	mov    rsi,rax
  409661:	mov    rdx,r14
  409664:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409669:	cmp    rax,r14
  40966c:	je     409f46 <main@@Base+0x3126>
  409672:	movzx  ecx,BYTE PTR [rax]
  409675:	cmp    cl,0x2c
  409678:	jne    409f4e <main@@Base+0x312e>
  40967e:	lea    r12,[rax+0x1]
  409682:	mov    rcx,r14
  409685:	sub    rcx,r12
  409688:	cmp    rcx,0x2
  40968c:	jl     4096a3 <main@@Base+0x2883>
  40968e:	cmp    BYTE PTR [r12],0x20
  409693:	jg     4096b4 <main@@Base+0x2894>
  409695:	jne    4096a3 <main@@Base+0x2883>
  409697:	cmp    BYTE PTR [rax+0x2],0x20
  40969b:	jle    4096a3 <main@@Base+0x2883>
  40969d:	add    rax,0x2
  4096a1:	jmp    4096b1 <main@@Base+0x2891>
  4096a3:	mov    rdi,r15
  4096a6:	mov    rsi,r12
  4096a9:	mov    rdx,r14
  4096ac:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4096b1:	mov    r12,rax
  4096b4:	cmp    r12,r14
  4096b7:	je     40a0fd <main@@Base+0x32dd>
  4096bd:	cmp    BYTE PTR [r12],0x5d
  4096c2:	jne    4095fe <main@@Base+0x27de>
  4096c8:	lea    r13,[r12+0x1]
  4096cd:	mov    rax,r14
  4096d0:	sub    rax,r13
  4096d3:	cmp    rax,0x2
  4096d7:	jl     40aaba <main@@Base+0x3c9a>
  4096dd:	cmp    BYTE PTR [r13+0x0],0x20
  4096e2:	jg     409577 <main@@Base+0x2757>
  4096e8:	jne    40aaba <main@@Base+0x3c9a>
  4096ee:	cmp    BYTE PTR [r12+0x2],0x20
  4096f4:	jle    40aaba <main@@Base+0x3c9a>
  4096fa:	add    r12,0x2
  4096fe:	mov    r13,r12
  409701:	jmp    409577 <main@@Base+0x2757>
  409706:	mov    rdi,r15
  409709:	mov    rdx,r14
  40970c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409711:	mov    rsi,rax
  409714:	cmp    rsi,r14
  409717:	je     409826 <main@@Base+0x2a06>
  40971d:	cmp    BYTE PTR [rsi],0x3a
  409720:	jne    409826 <main@@Base+0x2a06>
  409726:	lea    rbx,[rsi+0x1]
  40972a:	mov    rax,r14
  40972d:	sub    rax,rbx
  409730:	cmp    rax,0x2
  409734:	jl     40ae47 <main@@Base+0x4027>
  40973a:	cmp    BYTE PTR [rbx],0x20
  40973d:	jg     40ae58 <main@@Base+0x4038>
  409743:	jne    40ae47 <main@@Base+0x4027>
  409749:	cmp    BYTE PTR [rsi+0x2],0x20
  40974d:	jle    40ae47 <main@@Base+0x4027>
  409753:	add    rsi,0x2
  409757:	mov    rbx,rsi
  40975a:	cmp    r13,rbx
  40975d:	jne    40ae61 <main@@Base+0x4041>
  409763:	jmp    40a5ab <main@@Base+0x378b>
  409768:	mov    rdi,r15
  40976b:	mov    rdx,r14
  40976e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409773:	mov    rsi,rax
  409776:	cmp    rsi,r14
  409779:	je     40983b <main@@Base+0x2a1b>
  40977f:	cmp    BYTE PTR [rsi],0x3a
  409782:	jne    40983b <main@@Base+0x2a1b>
  409788:	lea    r12,[rsi+0x1]
  40978c:	mov    rax,r14
  40978f:	sub    rax,r12
  409792:	cmp    rax,0x2
  409796:	jl     40af83 <main@@Base+0x4163>
  40979c:	cmp    BYTE PTR [r12],0x20
  4097a1:	jg     40af94 <main@@Base+0x4174>
  4097a7:	jne    40af83 <main@@Base+0x4163>
  4097ad:	cmp    BYTE PTR [rsi+0x2],0x20
  4097b1:	jle    40af83 <main@@Base+0x4163>
  4097b7:	add    rsi,0x2
  4097bb:	mov    r12,rsi
  4097be:	cmp    r13,r12
  4097c1:	jne    40af99 <main@@Base+0x4179>
  4097c7:	jmp    40afee <main@@Base+0x41ce>
  4097cc:	mov    rdi,r15
  4097cf:	mov    rdx,r14
  4097d2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4097d7:	mov    rsi,rax
  4097da:	cmp    rsi,r14
  4097dd:	je     409850 <main@@Base+0x2a30>
  4097df:	cmp    BYTE PTR [rsi],0x3a
  4097e2:	jne    409850 <main@@Base+0x2a30>
  4097e4:	lea    rbx,[rsi+0x1]
  4097e8:	mov    rax,r14
  4097eb:	sub    rax,rbx
  4097ee:	cmp    rax,0x2
  4097f2:	jl     40bafb <main@@Base+0x4cdb>
  4097f8:	cmp    BYTE PTR [rbx],0x20
  4097fb:	jg     40bb0c <main@@Base+0x4cec>
  409801:	jne    40bafb <main@@Base+0x4cdb>
  409807:	cmp    BYTE PTR [rsi+0x2],0x20
  40980b:	jle    40bafb <main@@Base+0x4cdb>
  409811:	add    rsi,0x2
  409815:	mov    rbx,rsi
  409818:	cmp    r13,rbx
  40981b:	jne    40bb15 <main@@Base+0x4cf5>
  409821:	jmp    40a5ab <main@@Base+0x378b>
  409826:	mov    ecx,0x4
  40982b:	mov    rdi,r15
  40982e:	mov    rdx,r14
  409831:	call   423620 <flatcc_json_parser_set_error@@Base>
  409836:	jmp    40ae55 <main@@Base+0x4035>
  40983b:	mov    ecx,0x4
  409840:	mov    rdi,r15
  409843:	mov    rdx,r14
  409846:	call   423620 <flatcc_json_parser_set_error@@Base>
  40984b:	jmp    40af91 <main@@Base+0x4171>
  409850:	mov    ecx,0x4
  409855:	mov    rdi,r15
  409858:	mov    rdx,r14
  40985b:	call   423620 <flatcc_json_parser_set_error@@Base>
  409860:	jmp    40bb09 <main@@Base+0x4ce9>
  409865:	mov    rdi,QWORD PTR [rsp+0x8]
  40986a:	mov    rdx,r14
  40986d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409872:	mov    rsi,rax
  409875:	cmp    rsi,r14
  409878:	je     4099d0 <main@@Base+0x2bb0>
  40987e:	cmp    BYTE PTR [rsi],0x3a
  409881:	jne    4099d0 <main@@Base+0x2bb0>
  409887:	lea    rbx,[rsi+0x1]
  40988b:	mov    rax,r14
  40988e:	sub    rax,rbx
  409891:	cmp    rax,0x2
  409895:	jl     40bc26 <main@@Base+0x4e06>
  40989b:	cmp    BYTE PTR [rbx],0x20
  40989e:	jg     40bc39 <main@@Base+0x4e19>
  4098a4:	jne    40bc26 <main@@Base+0x4e06>
  4098aa:	cmp    BYTE PTR [rsi+0x2],0x20
  4098ae:	jle    40bc26 <main@@Base+0x4e06>
  4098b4:	add    rsi,0x2
  4098b8:	mov    rbx,rsi
  4098bb:	cmp    r15,rbx
  4098be:	jne    40bc42 <main@@Base+0x4e22>
  4098c4:	lea    r15,[r13+0x10]
  4098c8:	mov    rax,r14
  4098cb:	sub    rax,r15
  4098ce:	cmp    rax,0x8
  4098d2:	jb     4098de <main@@Base+0x2abe>
  4098d4:	movbe  rcx,QWORD PTR [r15]
  4098d9:	jmp    40996a <main@@Base+0x2b4a>
  4098de:	mov    ecx,eax
  4098e0:	and    cl,0xf
  4098e3:	add    cl,0xff
  4098e6:	cmp    cl,0x7
  4098e9:	ja     40e96e <main@@Base+0x7b4e>
  4098ef:	movzx  ecx,cl
  4098f2:	lea    rdx,[rip+0x29847]        # 433140 <_IO_stdin_used@@Base+0x140>
  4098f9:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4098fd:	add    rcx,rdx
  409900:	xor    r8d,r8d
  409903:	xor    r9d,r9d
  409906:	xor    edx,edx
  409908:	xor    esi,esi
  40990a:	xor    ebx,ebx
  40990c:	xor    edi,edi
  40990e:	xor    ebp,ebp
  409910:	jmp    rcx
  409912:	movsx  r8,BYTE PTR [r13+0x17]
  409917:	movsx  r9,BYTE PTR [r13+0x16]
  40991c:	shl    r9,0x8
  409920:	or     r9,r8
  409923:	movsx  rdx,BYTE PTR [r13+0x15]
  409928:	shl    rdx,0x10
  40992c:	or     rdx,r9
  40992f:	movsx  rsi,BYTE PTR [r13+0x14]
  409934:	shl    rsi,0x18
  409938:	or     rsi,rdx
  40993b:	movsx  rbx,BYTE PTR [r13+0x13]
  409940:	shl    rbx,0x20
  409944:	or     rbx,rsi
  409947:	movsx  rdi,BYTE PTR [r13+0x12]
  40994c:	shl    rdi,0x28
  409950:	or     rdi,rbx
  409953:	movsx  rbp,BYTE PTR [r13+0x11]
  409958:	shl    rbp,0x30
  40995c:	or     rbp,rdi
  40995f:	movzx  ecx,BYTE PTR [r15]
  409963:	shl    rcx,0x38
  409967:	or     rcx,rbp
  40996a:	shr    rcx,0x38
  40996e:	cmp    rcx,0x61
  409972:	jne    40e96e <main@@Base+0x7b4e>
  409978:	cmp    rax,0x2
  40997c:	jl     40e96e <main@@Base+0x7b4e>
  409982:	cmp    BYTE PTR [r13+0x11],0x22
  409987:	jne    40e96e <main@@Base+0x7b4e>
  40998d:	lea    rsi,[r13+0x12]
  409991:	mov    rax,r14
  409994:	sub    rax,rsi
  409997:	cmp    rax,0x2
  40999b:	jl     40aad0 <main@@Base+0x3cb0>
  4099a1:	cmp    BYTE PTR [rsi],0x20
  4099a4:	jg     40aae0 <main@@Base+0x3cc0>
  4099aa:	jne    40aad0 <main@@Base+0x3cb0>
  4099b0:	cmp    BYTE PTR [r13+0x13],0x20
  4099b5:	jle    40aad0 <main@@Base+0x3cb0>
  4099bb:	add    r13,0x13
  4099bf:	mov    rsi,r13
  4099c2:	cmp    rsi,r14
  4099c5:	jne    40aae5 <main@@Base+0x3cc5>
  4099cb:	jmp    40ab2c <main@@Base+0x3d0c>
  4099d0:	mov    ecx,0x4
  4099d5:	mov    rdi,QWORD PTR [rsp+0x8]
  4099da:	mov    rdx,r14
  4099dd:	call   423620 <flatcc_json_parser_set_error@@Base>
  4099e2:	jmp    40bc36 <main@@Base+0x4e16>
  4099e7:	mov    rdi,r15
  4099ea:	mov    rsi,rax
  4099ed:	mov    rdx,r14
  4099f0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4099f5:	cmp    r13,rax
  4099f8:	je     40a5ab <main@@Base+0x378b>
  4099fe:	mov    rdi,r15
  409a01:	mov    rsi,rax
  409a04:	mov    rdx,r14
  409a07:	lea    rcx,[rsp+0x2c]
  409a0c:	call   4074d0 <main@@Base+0x6b0>
  409a11:	mov    r13,rax
  409a14:	cmp    DWORD PTR [rsp+0x2c],0x0
  409a19:	je     41078b <main@@Base+0x996b>
  409a1f:	mov    rdi,QWORD PTR [r15]
  409a22:	mov    esi,0xc
  409a27:	jmp    409c19 <main@@Base+0x2df9>
  409a2c:	mov    rdi,r15
  409a2f:	mov    rsi,rbx
  409a32:	mov    rdx,r14
  409a35:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409a3a:	mov    rbx,rax
  409a3d:	cmp    r13,rbx
  409a40:	je     40a5ab <main@@Base+0x378b>
  409a46:	mov    QWORD PTR [rsp+0x20],0x0
  409a4f:	mov    DWORD PTR [rsp+0x30],0x0
  409a57:	mov    BYTE PTR [rsp+0x14],0x0
  409a5c:	cmp    rbx,r14
  409a5f:	je     409aa2 <main@@Base+0x2c82>
  409a61:	mov    rdi,r15
  409a64:	mov    rsi,rbx
  409a67:	mov    rdx,r14
  409a6a:	lea    rcx,[rsp+0x30]
  409a6f:	lea    r8,[rsp+0x20]
  409a74:	call   425160 <flatcc_json_parser_integer@@Base>
  409a79:	cmp    rax,rbx
  409a7c:	mov    rbp,QWORD PTR [rsp+0x18]
  409a81:	je     409ab4 <main@@Base+0x2c94>
  409a83:	mov    r13,rax
  409a86:	mov    r12,QWORD PTR [rsp+0x20]
  409a8b:	cmp    DWORD PTR [rsp+0x30],0x0
  409a90:	je     409ac1 <main@@Base+0x2ca1>
  409a92:	cmp    r12,0x81
  409a99:	jb     409aea <main@@Base+0x2cca>
  409a9b:	mov    ecx,0x8
  409aa0:	jmp    409acf <main@@Base+0x2caf>
  409aa2:	xor    r12d,r12d
  409aa5:	mov    r13,r14
  409aa8:	mov    rbp,QWORD PTR [rsp+0x18]
  409aad:	cmp    rbx,r13
  409ab0:	jne    409b2b <main@@Base+0x2d0b>
  409ab2:	jmp    409af7 <main@@Base+0x2cd7>
  409ab4:	xor    r12d,r12d
  409ab7:	mov    r13,rbx
  409aba:	cmp    rbx,r13
  409abd:	jne    409b2b <main@@Base+0x2d0b>
  409abf:	jmp    409af7 <main@@Base+0x2cd7>
  409ac1:	cmp    r12,0x80
  409ac8:	jb     409aed <main@@Base+0x2ccd>
  409aca:	mov    ecx,0x7
  409acf:	mov    rdi,r15
  409ad2:	mov    rsi,r13
  409ad5:	mov    rdx,r14
  409ad8:	call   423620 <flatcc_json_parser_set_error@@Base>
  409add:	mov    r13,rax
  409ae0:	xor    r12d,r12d
  409ae3:	cmp    rbx,r13
  409ae6:	jne    409b2b <main@@Base+0x2d0b>
  409ae8:	jmp    409af7 <main@@Base+0x2cd7>
  409aea:	neg    r12
  409aed:	mov    BYTE PTR [rsp+0x14],r12b
  409af2:	cmp    rbx,r13
  409af5:	jne    409b2b <main@@Base+0x2d0b>
  409af7:	mov    rdi,r15
  409afa:	mov    rsi,rbx
  409afd:	mov    rdx,r14
  409b00:	lea    rcx,[rip+0x375b9]        # 4410c0 <__data_start@@Base+0x10>
  409b07:	lea    r8,[rsp+0x14]
  409b0c:	call   4125d0 <main@@Base+0xb7b0>
  409b11:	mov    r13,rax
  409b14:	cmp    rax,rbx
  409b17:	je     41078b <main@@Base+0x996b>
  409b1d:	cmp    r13,r14
  409b20:	je     41078b <main@@Base+0x996b>
  409b26:	mov    r12b,BYTE PTR [rsp+0x14]
  409b2b:	cmp    r12b,0x8
  409b2f:	jne    409b3c <main@@Base+0x2d1c>
  409b31:	test   BYTE PTR [r15+0x10],0x2
  409b36:	je     40d3f5 <main@@Base+0x65d5>
  409b3c:	mov    rdi,QWORD PTR [r15]
  409b3f:	mov    esi,0x6
  409b44:	mov    edx,0x1
  409b49:	mov    ecx,0x1
  409b4e:	call   41fe80 <flatcc_builder_table_add@@Base>
  409b53:	test   rax,rax
  409b56:	je     41078b <main@@Base+0x996b>
  409b5c:	mov    BYTE PTR [rax],r12b
  409b5f:	jmp    40d3f5 <main@@Base+0x65d5>
  409b64:	mov    rdi,QWORD PTR [rsp+0x8]
  409b69:	mov    rdx,r14
  409b6c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409b71:	mov    rsi,rax
  409b74:	cmp    rsi,r14
  409b77:	je     409bc2 <main@@Base+0x2da2>
  409b79:	cmp    BYTE PTR [rsi],0x3a
  409b7c:	jne    409bc2 <main@@Base+0x2da2>
  409b7e:	lea    r12,[rsi+0x1]
  409b82:	mov    rax,r14
  409b85:	sub    rax,r12
  409b88:	cmp    rax,0x2
  409b8c:	jl     40c08f <main@@Base+0x526f>
  409b92:	cmp    BYTE PTR [r12],0x20
  409b97:	jg     40c0a2 <main@@Base+0x5282>
  409b9d:	jne    40c08f <main@@Base+0x526f>
  409ba3:	cmp    BYTE PTR [rsi+0x2],0x20
  409ba7:	jle    40c08f <main@@Base+0x526f>
  409bad:	add    rsi,0x2
  409bb1:	mov    r12,rsi
  409bb4:	cmp    r15,r12
  409bb7:	jne    40c0ab <main@@Base+0x528b>
  409bbd:	jmp    40d3da <main@@Base+0x65ba>
  409bc2:	mov    ecx,0x4
  409bc7:	mov    rdi,QWORD PTR [rsp+0x8]
  409bcc:	mov    rdx,r14
  409bcf:	call   423620 <flatcc_json_parser_set_error@@Base>
  409bd4:	jmp    40c09f <main@@Base+0x527f>
  409bd9:	mov    rdi,r15
  409bdc:	mov    rsi,rax
  409bdf:	mov    rdx,r14
  409be2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409be7:	cmp    r13,rax
  409bea:	je     40a5ab <main@@Base+0x378b>
  409bf0:	mov    rdi,r15
  409bf3:	mov    rsi,rax
  409bf6:	mov    rdx,r14
  409bf9:	lea    rcx,[rsp+0x2c]
  409bfe:	call   425630 <flatcc_json_parser_build_string@@Base>
  409c03:	mov    r13,rax
  409c06:	cmp    DWORD PTR [rsp+0x2c],0x0
  409c0b:	je     41078b <main@@Base+0x996b>
  409c11:	mov    rdi,QWORD PTR [r15]
  409c14:	mov    esi,0x3
  409c19:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  409c1e:	test   rax,rax
  409c21:	je     41078b <main@@Base+0x996b>
  409c27:	mov    ecx,DWORD PTR [rsp+0x2c]
  409c2b:	mov    DWORD PTR [rax],ecx
  409c2d:	jmp    40e984 <main@@Base+0x7b64>
  409c32:	mov    rdi,r15
  409c35:	mov    rsi,r12
  409c38:	mov    rdx,r14
  409c3b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409c40:	mov    r12,rax
  409c43:	cmp    r13,r12
  409c46:	je     40afee <main@@Base+0x41ce>
  409c4c:	mov    rdi,QWORD PTR [r15]
  409c4f:	mov    esi,0x1
  409c54:	mov    edx,0x1
  409c59:	mov    ecx,0xffffffff
  409c5e:	call   41e690 <flatcc_builder_start_vector@@Base>
  409c63:	test   eax,eax
  409c65:	jne    407501 <main@@Base+0x6e1>
  409c6b:	cmp    r12,r14
  409c6e:	je     409ca5 <main@@Base+0x2e85>
  409c70:	cmp    BYTE PTR [r12],0x5b
  409c75:	jne    409ca5 <main@@Base+0x2e85>
  409c77:	lea    rax,[r12+0x1]
  409c7c:	mov    rcx,r14
  409c7f:	sub    rcx,rax
  409c82:	cmp    rcx,0x2
  409c86:	mov    rbp,QWORD PTR [rsp+0x18]
  409c8b:	jl     409ceb <main@@Base+0x2ecb>
  409c8d:	cmp    BYTE PTR [rax],0x20
  409c90:	jg     409cf9 <main@@Base+0x2ed9>
  409c92:	jne    409ceb <main@@Base+0x2ecb>
  409c94:	cmp    BYTE PTR [r12+0x2],0x20
  409c9a:	jle    409ceb <main@@Base+0x2ecb>
  409c9c:	add    r12,0x2
  409ca0:	mov    rax,r12
  409ca3:	jmp    409cf9 <main@@Base+0x2ed9>
  409ca5:	mov    ecx,0x16
  409caa:	mov    rdi,r15
  409cad:	mov    rsi,r12
  409cb0:	mov    rdx,r14
  409cb3:	call   423620 <flatcc_json_parser_set_error@@Base>
  409cb8:	mov    r13,rax
  409cbb:	mov    rbp,QWORD PTR [rsp+0x18]
  409cc0:	movabs r12,0x7465737400000000
  409cca:	mov    rdi,QWORD PTR [r15]
  409ccd:	call   41f820 <flatcc_builder_end_vector@@Base>
  409cd2:	mov    DWORD PTR [rsp+0x2c],eax
  409cd6:	test   eax,eax
  409cd8:	je     41078b <main@@Base+0x996b>
  409cde:	mov    rdi,QWORD PTR [r15]
  409ce1:	mov    esi,0x1e
  409ce6:	jmp    40a6e9 <main@@Base+0x38c9>
  409ceb:	mov    rdi,r15
  409cee:	mov    rsi,rax
  409cf1:	mov    rdx,r14
  409cf4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409cf9:	mov    r12,r14
  409cfc:	cmp    rax,r14
  409cff:	je     409d47 <main@@Base+0x2f27>
  409d01:	cmp    BYTE PTR [rax],0x5d
  409d04:	jne    409d44 <main@@Base+0x2f24>
  409d06:	lea    r13,[rax+0x1]
  409d0a:	mov    rcx,r14
  409d0d:	sub    rcx,r13
  409d10:	cmp    rcx,0x2
  409d14:	movabs r12,0x7465737400000000
  409d1e:	jl     40bd97 <main@@Base+0x4f77>
  409d24:	cmp    BYTE PTR [r13+0x0],0x20
  409d29:	jg     409cca <main@@Base+0x2eaa>
  409d2b:	jne    40bd97 <main@@Base+0x4f77>
  409d31:	cmp    BYTE PTR [rax+0x2],0x20
  409d35:	jle    40bd97 <main@@Base+0x4f77>
  409d3b:	add    rax,0x2
  409d3f:	mov    r13,rax
  409d42:	jmp    409cca <main@@Base+0x2eaa>
  409d44:	mov    r12,rax
  409d47:	mov    BYTE PTR [rsp+0x14],0x0
  409d4c:	mov    rdi,QWORD PTR [r15]
  409d4f:	mov    esi,0x1
  409d54:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  409d59:	test   rax,rax
  409d5c:	je     407501 <main@@Base+0x6e1>
  409d62:	mov    rbx,rax
  409d65:	mov    QWORD PTR [rsp+0x20],0x0
  409d6e:	mov    DWORD PTR [rsp+0x30],0x0
  409d76:	mov    BYTE PTR [rsp+0x14],0x0
  409d7b:	cmp    r12,r14
  409d7e:	je     409dab <main@@Base+0x2f8b>
  409d80:	mov    rdi,r15
  409d83:	mov    rsi,r12
  409d86:	mov    rdx,r14
  409d89:	lea    rcx,[rsp+0x30]
  409d8e:	lea    r8,[rsp+0x20]
  409d93:	call   425160 <flatcc_json_parser_integer@@Base>
  409d98:	cmp    rax,r12
  409d9b:	je     409db7 <main@@Base+0x2f97>
  409d9d:	cmp    DWORD PTR [rsp+0x30],0x0
  409da2:	je     409dc3 <main@@Base+0x2fa3>
  409da4:	mov    ecx,0x8
  409da9:	jmp    409dda <main@@Base+0x2fba>
  409dab:	xor    ecx,ecx
  409dad:	mov    rax,r14
  409db0:	cmp    r12,rax
  409db3:	jne    409e20 <main@@Base+0x3000>
  409db5:	jmp    409def <main@@Base+0x2fcf>
  409db7:	xor    ecx,ecx
  409db9:	mov    rax,r12
  409dbc:	cmp    r12,rax
  409dbf:	jne    409e20 <main@@Base+0x3000>
  409dc1:	jmp    409def <main@@Base+0x2fcf>
  409dc3:	mov    rcx,QWORD PTR [rsp+0x20]
  409dc8:	cmp    rcx,0x100
  409dcf:	jb     409ee3 <main@@Base+0x30c3>
  409dd5:	mov    ecx,0x7
  409dda:	mov    rdi,r15
  409ddd:	mov    rsi,rax
  409de0:	mov    rdx,r14
  409de3:	call   423620 <flatcc_json_parser_set_error@@Base>
  409de8:	xor    ecx,ecx
  409dea:	cmp    r12,rax
  409ded:	jne    409e20 <main@@Base+0x3000>
  409def:	mov    rdi,r15
  409df2:	mov    rsi,r12
  409df5:	mov    rdx,r14
  409df8:	lea    rcx,[rip+0x372e1]        # 4410e0 <__data_start@@Base+0x30>
  409dff:	lea    r8,[rsp+0x14]
  409e04:	call   412760 <main@@Base+0xb940>
  409e09:	cmp    rax,r12
  409e0c:	je     4107c4 <main@@Base+0x99a4>
  409e12:	cmp    rax,r14
  409e15:	je     4107c4 <main@@Base+0x99a4>
  409e1b:	movzx  ecx,BYTE PTR [rsp+0x14]
  409e20:	mov    BYTE PTR [rbx],cl
  409e22:	mov    rcx,r14
  409e25:	sub    rcx,rax
  409e28:	cmp    rcx,0x2
  409e2c:	movabs r12,0x7465737400000000
  409e36:	jl     409e53 <main@@Base+0x3033>
  409e38:	cmp    BYTE PTR [rax],0x20
  409e3b:	jg     409e61 <main@@Base+0x3041>
  409e3d:	jne    409e53 <main@@Base+0x3033>
  409e3f:	cmp    BYTE PTR [rax+0x1],0x20
  409e43:	jle    409e53 <main@@Base+0x3033>
  409e45:	add    rax,0x1
  409e49:	cmp    rax,r14
  409e4c:	jne    409e6a <main@@Base+0x304a>
  409e4e:	jmp    40bcdb <main@@Base+0x4ebb>
  409e53:	mov    rdi,r15
  409e56:	mov    rsi,rax
  409e59:	mov    rdx,r14
  409e5c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409e61:	cmp    rax,r14
  409e64:	je     40bcdb <main@@Base+0x4ebb>
  409e6a:	movzx  ecx,BYTE PTR [rax]
  409e6d:	cmp    cl,0x2c
  409e70:	jne    40bd6d <main@@Base+0x4f4d>
  409e76:	lea    r12,[rax+0x1]
  409e7a:	mov    rcx,r14
  409e7d:	sub    rcx,r12
  409e80:	cmp    rcx,0x2
  409e84:	jl     409e9b <main@@Base+0x307b>
  409e86:	cmp    BYTE PTR [r12],0x20
  409e8b:	jg     409eac <main@@Base+0x308c>
  409e8d:	jne    409e9b <main@@Base+0x307b>
  409e8f:	cmp    BYTE PTR [rax+0x2],0x20
  409e93:	jle    409e9b <main@@Base+0x307b>
  409e95:	add    rax,0x2
  409e99:	jmp    409ea9 <main@@Base+0x3089>
  409e9b:	mov    rdi,r15
  409e9e:	mov    rsi,r12
  409ea1:	mov    rdx,r14
  409ea4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409ea9:	mov    r12,rax
  409eac:	cmp    r12,r14
  409eaf:	je     40bdad <main@@Base+0x4f8d>
  409eb5:	cmp    BYTE PTR [r12],0x5d
  409eba:	je     40bdd2 <main@@Base+0x4fb2>
  409ec0:	mov    BYTE PTR [rsp+0x14],0x0
  409ec5:	mov    rdi,QWORD PTR [r15]
  409ec8:	mov    esi,0x1
  409ecd:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  409ed2:	mov    rbx,rax
  409ed5:	test   rax,rax
  409ed8:	jne    409d65 <main@@Base+0x2f45>
  409ede:	jmp    407501 <main@@Base+0x6e1>
  409ee3:	mov    BYTE PTR [rsp+0x14],cl
  409ee7:	cmp    r12,rax
  409eea:	jne    409e20 <main@@Base+0x3000>
  409ef0:	jmp    409def <main@@Base+0x2fcf>
  409ef5:	mov    rdi,QWORD PTR [rsp+0x8]
  409efa:	mov    rsi,rax
  409efd:	mov    rdx,r14
  409f00:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409f05:	cmp    r13,rax
  409f08:	je     409041 <main@@Base+0x2221>
  409f0e:	mov    r9,QWORD PTR [rsp+0x48]
  409f13:	sub    rsp,0x8
  409f17:	mov    ecx,0x0
  409f1c:	mov    r8d,0x8
  409f22:	mov    r15,QWORD PTR [rsp+0x10]
  409f27:	mov    rdi,r15
  409f2a:	mov    rsi,rax
  409f2d:	mov    rdx,r14
  409f30:	lea    rax,[rip+0x9209]        # 413140 <main@@Base+0xc320>
  409f37:	push   rax
  409f38:	call   4259d0 <flatcc_json_parser_union@@Base>
  409f3d:	add    rsp,0x10
  409f41:	jmp    40d3ed <main@@Base+0x65cd>
  409f46:	mov    r13,r14
  409f49:	jmp    409581 <main@@Base+0x2761>
  409f4e:	cmp    cl,0x5d
  409f51:	jne    40bb96 <main@@Base+0x4d76>
  409f57:	lea    r13,[rax+0x1]
  409f5b:	mov    rcx,r14
  409f5e:	sub    rcx,r13
  409f61:	cmp    rcx,0x2
  409f65:	jl     409f78 <main@@Base+0x3158>
  409f67:	cmp    BYTE PTR [r13+0x0],0x20
  409f6c:	jg     409581 <main@@Base+0x2761>
  409f72:	je     4095e8 <main@@Base+0x27c8>
  409f78:	mov    rdi,r15
  409f7b:	mov    rsi,r13
  409f7e:	mov    rdx,r14
  409f81:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409f86:	mov    r13,rax
  409f89:	jmp    409581 <main@@Base+0x2761>
  409f8e:	mov    rdi,QWORD PTR [rsp+0x8]
  409f93:	mov    rdx,r14
  409f96:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  409f9b:	mov    rsi,rax
  409f9e:	cmp    rsi,r14
  409fa1:	je     40a0b8 <main@@Base+0x3298>
  409fa7:	cmp    BYTE PTR [rsi],0x3a
  409faa:	jne    40a0b8 <main@@Base+0x3298>
  409fb0:	lea    r12,[rsi+0x1]
  409fb4:	mov    rax,r14
  409fb7:	sub    rax,r12
  409fba:	cmp    rax,0x2
  409fbe:	jl     40c1bd <main@@Base+0x539d>
  409fc4:	cmp    BYTE PTR [r12],0x20
  409fc9:	jg     40c1d0 <main@@Base+0x53b0>
  409fcf:	jne    40c1bd <main@@Base+0x539d>
  409fd5:	cmp    BYTE PTR [rsi+0x2],0x20
  409fd9:	jle    40c1bd <main@@Base+0x539d>
  409fdf:	add    rsi,0x2
  409fe3:	mov    r12,rsi
  409fe6:	cmp    r15,r12
  409fe9:	jne    40c1d9 <main@@Base+0x53b9>
  409fef:	jmp    40d3da <main@@Base+0x65ba>
  409ff4:	mov    rdi,QWORD PTR [rsp+0x8]
  409ff9:	mov    rdx,r14
  409ffc:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a001:	mov    rsi,rax
  40a004:	cmp    rsi,r14
  40a007:	je     40a0cf <main@@Base+0x32af>
  40a00d:	cmp    BYTE PTR [rsi],0x3a
  40a010:	jne    40a0cf <main@@Base+0x32af>
  40a016:	lea    r12,[rsi+0x1]
  40a01a:	mov    rax,r14
  40a01d:	sub    rax,r12
  40a020:	cmp    rax,0x2
  40a024:	jl     40c281 <main@@Base+0x5461>
  40a02a:	cmp    BYTE PTR [r12],0x20
  40a02f:	jg     40c294 <main@@Base+0x5474>
  40a035:	jne    40c281 <main@@Base+0x5461>
  40a03b:	cmp    BYTE PTR [rsi+0x2],0x20
  40a03f:	jle    40c281 <main@@Base+0x5461>
  40a045:	add    rsi,0x2
  40a049:	mov    r12,rsi
  40a04c:	cmp    r15,r12
  40a04f:	jne    40c29d <main@@Base+0x547d>
  40a055:	jmp    40d3da <main@@Base+0x65ba>
  40a05a:	mov    rdi,QWORD PTR [rsp+0x8]
  40a05f:	mov    rdx,r14
  40a062:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a067:	mov    rsi,rax
  40a06a:	cmp    rsi,r14
  40a06d:	je     40a0e6 <main@@Base+0x32c6>
  40a06f:	cmp    BYTE PTR [rsi],0x3a
  40a072:	jne    40a0e6 <main@@Base+0x32c6>
  40a074:	lea    r12,[rsi+0x1]
  40a078:	mov    rax,r14
  40a07b:	sub    rax,r12
  40a07e:	cmp    rax,0x2
  40a082:	jl     40c354 <main@@Base+0x5534>
  40a088:	cmp    BYTE PTR [r12],0x20
  40a08d:	jg     40c367 <main@@Base+0x5547>
  40a093:	jne    40c354 <main@@Base+0x5534>
  40a099:	cmp    BYTE PTR [rsi+0x2],0x20
  40a09d:	jle    40c354 <main@@Base+0x5534>
  40a0a3:	add    rsi,0x2
  40a0a7:	mov    r12,rsi
  40a0aa:	cmp    r15,r12
  40a0ad:	jne    40c370 <main@@Base+0x5550>
  40a0b3:	jmp    40d3da <main@@Base+0x65ba>
  40a0b8:	mov    ecx,0x4
  40a0bd:	mov    rdi,QWORD PTR [rsp+0x8]
  40a0c2:	mov    rdx,r14
  40a0c5:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a0ca:	jmp    40c1cd <main@@Base+0x53ad>
  40a0cf:	mov    ecx,0x4
  40a0d4:	mov    rdi,QWORD PTR [rsp+0x8]
  40a0d9:	mov    rdx,r14
  40a0dc:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a0e1:	jmp    40c291 <main@@Base+0x5471>
  40a0e6:	mov    ecx,0x4
  40a0eb:	mov    rdi,QWORD PTR [rsp+0x8]
  40a0f0:	mov    rdx,r14
  40a0f3:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a0f8:	jmp    40c364 <main@@Base+0x5544>
  40a0fd:	mov    ecx,0x9
  40a102:	mov    rdi,r15
  40a105:	mov    rsi,r14
  40a108:	mov    rdx,r14
  40a10b:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a110:	jmp    40aac8 <main@@Base+0x3ca8>
  40a115:	mov    rdi,r15
  40a118:	mov    rdx,r14
  40a11b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a120:	mov    rsi,rax
  40a123:	cmp    rsi,r14
  40a126:	je     40a1d1 <main@@Base+0x33b1>
  40a12c:	cmp    BYTE PTR [rsi],0x3a
  40a12f:	jne    40a1d1 <main@@Base+0x33b1>
  40a135:	lea    rbx,[rsi+0x1]
  40a139:	mov    rax,r14
  40a13c:	sub    rax,rbx
  40a13f:	cmp    rax,0x2
  40a143:	jl     40c43e <main@@Base+0x561e>
  40a149:	cmp    BYTE PTR [rbx],0x20
  40a14c:	jg     40c44f <main@@Base+0x562f>
  40a152:	jne    40c43e <main@@Base+0x561e>
  40a158:	cmp    BYTE PTR [rsi+0x2],0x20
  40a15c:	jle    40c43e <main@@Base+0x561e>
  40a162:	add    rsi,0x2
  40a166:	mov    rbx,rsi
  40a169:	cmp    r13,rbx
  40a16c:	jne    40c458 <main@@Base+0x5638>
  40a172:	jmp    40a5ab <main@@Base+0x378b>
  40a177:	mov    rdi,r15
  40a17a:	mov    rdx,r14
  40a17d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a182:	mov    rsi,rax
  40a185:	cmp    rsi,r14
  40a188:	je     40a1e6 <main@@Base+0x33c6>
  40a18a:	cmp    BYTE PTR [rsi],0x3a
  40a18d:	jne    40a1e6 <main@@Base+0x33c6>
  40a18f:	lea    rbx,[rsi+0x1]
  40a193:	mov    rax,r14
  40a196:	sub    rax,rbx
  40a199:	cmp    rax,0x2
  40a19d:	jl     40c580 <main@@Base+0x5760>
  40a1a3:	cmp    BYTE PTR [rbx],0x20
  40a1a6:	jg     40c591 <main@@Base+0x5771>
  40a1ac:	jne    40c580 <main@@Base+0x5760>
  40a1b2:	cmp    BYTE PTR [rsi+0x2],0x20
  40a1b6:	jle    40c580 <main@@Base+0x5760>
  40a1bc:	add    rsi,0x2
  40a1c0:	mov    rbx,rsi
  40a1c3:	cmp    r13,rbx
  40a1c6:	jne    40c59a <main@@Base+0x577a>
  40a1cc:	jmp    40a5ab <main@@Base+0x378b>
  40a1d1:	mov    ecx,0x4
  40a1d6:	mov    rdi,r15
  40a1d9:	mov    rdx,r14
  40a1dc:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a1e1:	jmp    40c44c <main@@Base+0x562c>
  40a1e6:	mov    ecx,0x4
  40a1eb:	mov    rdi,r15
  40a1ee:	mov    rdx,r14
  40a1f1:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a1f6:	jmp    40c58e <main@@Base+0x576e>
  40a1fb:	mov    rdi,QWORD PTR [rsp+0x8]
  40a200:	mov    rdx,r14
  40a203:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a208:	mov    rsi,rax
  40a20b:	cmp    rsi,r14
  40a20e:	je     40a42a <main@@Base+0x360a>
  40a214:	cmp    BYTE PTR [rsi],0x3a
  40a217:	jne    40a42a <main@@Base+0x360a>
  40a21d:	lea    rbx,[rsi+0x1]
  40a221:	mov    rax,r14
  40a224:	sub    rax,rbx
  40a227:	cmp    rax,0x2
  40a22b:	jl     40c639 <main@@Base+0x5819>
  40a231:	cmp    BYTE PTR [rbx],0x20
  40a234:	jg     40c64c <main@@Base+0x582c>
  40a23a:	jne    40c639 <main@@Base+0x5819>
  40a240:	cmp    BYTE PTR [rsi+0x2],0x20
  40a244:	jle    40c639 <main@@Base+0x5819>
  40a24a:	add    rsi,0x2
  40a24e:	mov    rbx,rsi
  40a251:	cmp    r15,rbx
  40a254:	jne    40c655 <main@@Base+0x5835>
  40a25a:	lea    r15,[r13+0x10]
  40a25e:	mov    rax,r14
  40a261:	sub    rax,r15
  40a264:	cmp    rax,0x8
  40a268:	jb     40a274 <main@@Base+0x3454>
  40a26a:	movbe  rcx,QWORD PTR [r15]
  40a26f:	jmp    40a300 <main@@Base+0x34e0>
  40a274:	mov    ecx,eax
  40a276:	and    cl,0xf
  40a279:	add    cl,0xff
  40a27c:	cmp    cl,0x7
  40a27f:	ja     40e96e <main@@Base+0x7b4e>
  40a285:	movzx  ecx,cl
  40a288:	lea    rdx,[rip+0x28e91]        # 433120 <_IO_stdin_used@@Base+0x120>
  40a28f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40a293:	add    rcx,rdx
  40a296:	xor    r8d,r8d
  40a299:	xor    r9d,r9d
  40a29c:	xor    edx,edx
  40a29e:	xor    esi,esi
  40a2a0:	xor    ebx,ebx
  40a2a2:	xor    edi,edi
  40a2a4:	xor    ebp,ebp
  40a2a6:	jmp    rcx
  40a2a8:	movsx  r8,BYTE PTR [r13+0x17]
  40a2ad:	movsx  r9,BYTE PTR [r13+0x16]
  40a2b2:	shl    r9,0x8
  40a2b6:	or     r9,r8
  40a2b9:	movsx  rdx,BYTE PTR [r13+0x15]
  40a2be:	shl    rdx,0x10
  40a2c2:	or     rdx,r9
  40a2c5:	movsx  rsi,BYTE PTR [r13+0x14]
  40a2ca:	shl    rsi,0x18
  40a2ce:	or     rsi,rdx
  40a2d1:	movsx  rbx,BYTE PTR [r13+0x13]
  40a2d6:	shl    rbx,0x20
  40a2da:	or     rbx,rsi
  40a2dd:	movsx  rdi,BYTE PTR [r13+0x12]
  40a2e2:	shl    rdi,0x28
  40a2e6:	or     rdi,rbx
  40a2e9:	movsx  rbp,BYTE PTR [r13+0x11]
  40a2ee:	shl    rbp,0x30
  40a2f2:	or     rbp,rdi
  40a2f5:	movzx  ecx,BYTE PTR [r15]
  40a2f9:	shl    rcx,0x38
  40a2fd:	or     rcx,rbp
  40a300:	shr    rcx,0x38
  40a304:	cmp    rcx,0x61
  40a308:	jne    40e96e <main@@Base+0x7b4e>
  40a30e:	cmp    rax,0x2
  40a312:	jl     40e96e <main@@Base+0x7b4e>
  40a318:	cmp    BYTE PTR [r13+0x11],0x22
  40a31d:	jne    40e96e <main@@Base+0x7b4e>
  40a323:	lea    rsi,[r13+0x12]
  40a327:	mov    rax,r14
  40a32a:	sub    rax,rsi
  40a32d:	cmp    rax,0x2
  40a331:	jl     40c125 <main@@Base+0x5305>
  40a337:	cmp    BYTE PTR [rsi],0x20
  40a33a:	jg     40c135 <main@@Base+0x5315>
  40a340:	jne    40c125 <main@@Base+0x5305>
  40a346:	cmp    BYTE PTR [r13+0x13],0x20
  40a34b:	jle    40c125 <main@@Base+0x5305>
  40a351:	add    r13,0x13
  40a355:	mov    rsi,r13
  40a358:	cmp    rsi,r14
  40a35b:	jne    40c13a <main@@Base+0x531a>
  40a361:	jmp    40c174 <main@@Base+0x5354>
  40a366:	mov    rdi,QWORD PTR [rsp+0x8]
  40a36b:	mov    rdx,r14
  40a36e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a373:	mov    rsi,rax
  40a376:	cmp    rsi,r14
  40a379:	je     40a441 <main@@Base+0x3621>
  40a37f:	cmp    BYTE PTR [rsi],0x3a
  40a382:	jne    40a441 <main@@Base+0x3621>
  40a388:	lea    r12,[rsi+0x1]
  40a38c:	mov    rax,r14
  40a38f:	sub    rax,r12
  40a392:	cmp    rax,0x2
  40a396:	jl     40c6da <main@@Base+0x58ba>
  40a39c:	cmp    BYTE PTR [r12],0x20
  40a3a1:	jg     40c6ed <main@@Base+0x58cd>
  40a3a7:	jne    40c6da <main@@Base+0x58ba>
  40a3ad:	cmp    BYTE PTR [rsi+0x2],0x20
  40a3b1:	jle    40c6da <main@@Base+0x58ba>
  40a3b7:	add    rsi,0x2
  40a3bb:	mov    r12,rsi
  40a3be:	cmp    r15,r12
  40a3c1:	jne    40c6f6 <main@@Base+0x58d6>
  40a3c7:	jmp    40d3da <main@@Base+0x65ba>
  40a3cc:	mov    rdi,QWORD PTR [rsp+0x8]
  40a3d1:	mov    rdx,r14
  40a3d4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a3d9:	mov    rsi,rax
  40a3dc:	cmp    rsi,r14
  40a3df:	je     40a458 <main@@Base+0x3638>
  40a3e1:	cmp    BYTE PTR [rsi],0x3a
  40a3e4:	jne    40a458 <main@@Base+0x3638>
  40a3e6:	lea    r12,[rsi+0x1]
  40a3ea:	mov    rax,r14
  40a3ed:	sub    rax,r12
  40a3f0:	cmp    rax,0x2
  40a3f4:	jl     40c768 <main@@Base+0x5948>
  40a3fa:	cmp    BYTE PTR [r12],0x20
  40a3ff:	jg     40c77b <main@@Base+0x595b>
  40a405:	jne    40c768 <main@@Base+0x5948>
  40a40b:	cmp    BYTE PTR [rsi+0x2],0x20
  40a40f:	jle    40c768 <main@@Base+0x5948>
  40a415:	add    rsi,0x2
  40a419:	mov    r12,rsi
  40a41c:	cmp    r15,r12
  40a41f:	jne    40c784 <main@@Base+0x5964>
  40a425:	jmp    40d3da <main@@Base+0x65ba>
  40a42a:	mov    ecx,0x4
  40a42f:	mov    rdi,QWORD PTR [rsp+0x8]
  40a434:	mov    rdx,r14
  40a437:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a43c:	jmp    40c649 <main@@Base+0x5829>
  40a441:	mov    ecx,0x4
  40a446:	mov    rdi,QWORD PTR [rsp+0x8]
  40a44b:	mov    rdx,r14
  40a44e:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a453:	jmp    40c6ea <main@@Base+0x58ca>
  40a458:	mov    ecx,0x4
  40a45d:	mov    rdi,QWORD PTR [rsp+0x8]
  40a462:	mov    rdx,r14
  40a465:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a46a:	jmp    40c778 <main@@Base+0x5958>
  40a46f:	mov    rdi,r15
  40a472:	mov    rdx,r14
  40a475:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a47a:	mov    rsi,rax
  40a47d:	cmp    rsi,r14
  40a480:	je     40a4d1 <main@@Base+0x36b1>
  40a482:	cmp    BYTE PTR [rsi],0x3a
  40a485:	jne    40a4d1 <main@@Base+0x36b1>
  40a487:	lea    r13,[rsi+0x1]
  40a48b:	mov    rax,r14
  40a48e:	sub    rax,r13
  40a491:	cmp    rax,0x2
  40a495:	jl     40c8ae <main@@Base+0x5a8e>
  40a49b:	cmp    BYTE PTR [r13+0x0],0x20
  40a4a0:	jg     40c8bf <main@@Base+0x5a9f>
  40a4a6:	jne    40c8ae <main@@Base+0x5a8e>
  40a4ac:	cmp    BYTE PTR [rsi+0x2],0x20
  40a4b0:	jle    40c8ae <main@@Base+0x5a8e>
  40a4b6:	add    rsi,0x2
  40a4ba:	mov    r13,rsi
  40a4bd:	cmp    r12,r13
  40a4c0:	jne    40c8c8 <main@@Base+0x5aa8>
  40a4c6:	mov    rdi,r15
  40a4c9:	mov    rsi,r12
  40a4cc:	jmp    40d3e5 <main@@Base+0x65c5>
  40a4d1:	mov    ecx,0x4
  40a4d6:	mov    rdi,r15
  40a4d9:	mov    rdx,r14
  40a4dc:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a4e1:	jmp    40c8bc <main@@Base+0x5a9c>
  40a4e6:	mov    rdi,rbp
  40a4e9:	mov    rsi,r12
  40a4ec:	mov    rdx,r14
  40a4ef:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a4f4:	mov    r12,rax
  40a4f7:	cmp    r13,r12
  40a4fa:	je     40a575 <main@@Base+0x3755>
  40a4fc:	mov    r15,QWORD PTR [rsp+0x8]
  40a501:	mov    rdi,QWORD PTR [r15]
  40a504:	mov    esi,0x4
  40a509:	mov    edx,0x2
  40a50e:	mov    ecx,0x3fffffff
  40a513:	call   41e690 <flatcc_builder_start_vector@@Base>
  40a518:	test   eax,eax
  40a51a:	jne    407501 <main@@Base+0x6e1>
  40a520:	cmp    r12,r14
  40a523:	je     40a6a8 <main@@Base+0x3888>
  40a529:	cmp    BYTE PTR [r12],0x5b
  40a52e:	jne    40a6a8 <main@@Base+0x3888>
  40a534:	lea    rax,[r12+0x1]
  40a539:	mov    rcx,r14
  40a53c:	sub    rcx,rax
  40a53f:	cmp    rcx,0x2
  40a543:	mov    rbp,QWORD PTR [rsp+0x18]
  40a548:	jl     40a702 <main@@Base+0x38e2>
  40a54e:	cmp    BYTE PTR [rax],0x20
  40a551:	jg     40a710 <main@@Base+0x38f0>
  40a557:	jne    40a702 <main@@Base+0x38e2>
  40a55d:	cmp    BYTE PTR [r12+0x2],0x20
  40a563:	jle    40a702 <main@@Base+0x38e2>
  40a569:	add    r12,0x2
  40a56d:	mov    rax,r12
  40a570:	jmp    40a710 <main@@Base+0x38f0>
  40a575:	movabs r12,0x7465737400000000
  40a57f:	lea    rax,[r12+0x5f747970]
  40a587:	cmp    rbx,rax
  40a58a:	jne    40a5a6 <main@@Base+0x3786>
  40a58c:	lea    r15,[r13+0x8]
  40a590:	mov    rax,r14
  40a593:	sub    rax,r15
  40a596:	cmp    rax,0x8
  40a59a:	jb     40a5b6 <main@@Base+0x3796>
  40a59c:	movbe  rcx,QWORD PTR [r15]
  40a5a1:	jmp    40a642 <main@@Base+0x3822>
  40a5a6:	mov    r15,QWORD PTR [rsp+0x8]
  40a5ab:	mov    rdi,r15
  40a5ae:	mov    rsi,r13
  40a5b1:	jmp    40e979 <main@@Base+0x7b59>
  40a5b6:	mov    ecx,eax
  40a5b8:	and    cl,0xf
  40a5bb:	add    cl,0xff
  40a5be:	cmp    cl,0x7
  40a5c1:	ja     40e96e <main@@Base+0x7b4e>
  40a5c7:	movzx  ecx,cl
  40a5ca:	lea    rdx,[rip+0x28caf]        # 433280 <_IO_stdin_used@@Base+0x280>
  40a5d1:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40a5d5:	add    rcx,rdx
  40a5d8:	xor    r8d,r8d
  40a5db:	xor    r9d,r9d
  40a5de:	xor    edx,edx
  40a5e0:	xor    esi,esi
  40a5e2:	xor    ebx,ebx
  40a5e4:	xor    edi,edi
  40a5e6:	xor    ebp,ebp
  40a5e8:	jmp    rcx
  40a5ea:	movsx  r8,BYTE PTR [r13+0xf]
  40a5ef:	movsx  r9,BYTE PTR [r13+0xe]
  40a5f4:	shl    r9,0x8
  40a5f8:	or     r9,r8
  40a5fb:	movsx  rdx,BYTE PTR [r13+0xd]
  40a600:	shl    rdx,0x10
  40a604:	or     rdx,r9
  40a607:	movsx  rsi,BYTE PTR [r13+0xc]
  40a60c:	shl    rsi,0x18
  40a610:	or     rsi,rdx
  40a613:	movsx  rbx,BYTE PTR [r13+0xb]
  40a618:	shl    rbx,0x20
  40a61c:	or     rbx,rsi
  40a61f:	movsx  rdi,BYTE PTR [r13+0xa]
  40a624:	shl    rdi,0x28
  40a628:	or     rdi,rbx
  40a62b:	movsx  rbp,BYTE PTR [r13+0x9]
  40a630:	shl    rbp,0x30
  40a634:	or     rbp,rdi
  40a637:	movzx  ecx,BYTE PTR [r15]
  40a63b:	shl    rcx,0x38
  40a63f:	or     rcx,rbp
  40a642:	shr    rcx,0x38
  40a646:	cmp    rcx,0x65
  40a64a:	jne    40e96e <main@@Base+0x7b4e>
  40a650:	cmp    rax,0x2
  40a654:	jl     40e96e <main@@Base+0x7b4e>
  40a65a:	cmp    BYTE PTR [r13+0x9],0x22
  40a65f:	jne    40e96e <main@@Base+0x7b4e>
  40a665:	lea    rsi,[r13+0xa]
  40a669:	mov    rax,r14
  40a66c:	sub    rax,rsi
  40a66f:	cmp    rax,0x2
  40a673:	jl     40a766 <main@@Base+0x3946>
  40a679:	cmp    BYTE PTR [rsi],0x20
  40a67c:	jg     40a776 <main@@Base+0x3956>
  40a682:	jne    40a766 <main@@Base+0x3946>
  40a688:	cmp    BYTE PTR [r13+0xb],0x20
  40a68d:	jle    40a766 <main@@Base+0x3946>
  40a693:	add    r13,0xb
  40a697:	mov    rsi,r13
  40a69a:	cmp    rsi,r14
  40a69d:	jne    40a77b <main@@Base+0x395b>
  40a6a3:	jmp    40a7c2 <main@@Base+0x39a2>
  40a6a8:	mov    ecx,0x16
  40a6ad:	mov    rdi,r15
  40a6b0:	mov    rsi,r12
  40a6b3:	mov    rdx,r14
  40a6b6:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a6bb:	mov    r13,rax
  40a6be:	mov    rbp,QWORD PTR [rsp+0x18]
  40a6c3:	movabs r12,0x7465737400000000
  40a6cd:	mov    rdi,QWORD PTR [r15]
  40a6d0:	call   41f820 <flatcc_builder_end_vector@@Base>
  40a6d5:	mov    DWORD PTR [rsp+0x2c],eax
  40a6d9:	test   eax,eax
  40a6db:	je     41078b <main@@Base+0x996b>
  40a6e1:	mov    rdi,QWORD PTR [r15]
  40a6e4:	mov    esi,0x1f
  40a6e9:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  40a6ee:	test   rax,rax
  40a6f1:	je     41078b <main@@Base+0x996b>
  40a6f7:	mov    ecx,DWORD PTR [rsp+0x2c]
  40a6fb:	mov    DWORD PTR [rax],ecx
  40a6fd:	jmp    40e989 <main@@Base+0x7b69>
  40a702:	mov    rdi,r15
  40a705:	mov    rsi,rax
  40a708:	mov    rdx,r14
  40a70b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a710:	mov    r12,r14
  40a713:	cmp    rax,r14
  40a716:	je     40a7e5 <main@@Base+0x39c5>
  40a71c:	cmp    BYTE PTR [rax],0x5d
  40a71f:	jne    40a7e2 <main@@Base+0x39c2>
  40a725:	lea    r13,[rax+0x1]
  40a729:	mov    rcx,r14
  40a72c:	sub    rcx,r13
  40a72f:	cmp    rcx,0x2
  40a733:	movabs r12,0x7465737400000000
  40a73d:	jl     40e715 <main@@Base+0x78f5>
  40a743:	cmp    BYTE PTR [r13+0x0],0x20
  40a748:	jg     40a6cd <main@@Base+0x38ad>
  40a74a:	jne    40e715 <main@@Base+0x78f5>
  40a750:	cmp    BYTE PTR [rax+0x2],0x20
  40a754:	jle    40e715 <main@@Base+0x78f5>
  40a75a:	add    rax,0x2
  40a75e:	mov    r13,rax
  40a761:	jmp    40a6cd <main@@Base+0x38ad>
  40a766:	mov    rdi,QWORD PTR [rsp+0x8]
  40a76b:	mov    rdx,r14
  40a76e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a773:	mov    rsi,rax
  40a776:	cmp    rsi,r14
  40a779:	je     40a7c2 <main@@Base+0x39a2>
  40a77b:	cmp    BYTE PTR [rsi],0x3a
  40a77e:	jne    40a7c2 <main@@Base+0x39a2>
  40a780:	lea    rax,[rsi+0x1]
  40a784:	mov    rcx,r14
  40a787:	sub    rcx,rax
  40a78a:	cmp    rcx,0x2
  40a78e:	jl     40be10 <main@@Base+0x4ff0>
  40a794:	cmp    BYTE PTR [rax],0x20
  40a797:	jg     40be20 <main@@Base+0x5000>
  40a79d:	jne    40be10 <main@@Base+0x4ff0>
  40a7a3:	cmp    BYTE PTR [rsi+0x2],0x20
  40a7a7:	jle    40be10 <main@@Base+0x4ff0>
  40a7ad:	add    rsi,0x2
  40a7b1:	mov    rax,rsi
  40a7b4:	cmp    r15,rax
  40a7b7:	jne    40be29 <main@@Base+0x5009>
  40a7bd:	jmp    40e96e <main@@Base+0x7b4e>
  40a7c2:	mov    ecx,0x4
  40a7c7:	mov    rdi,QWORD PTR [rsp+0x8]
  40a7cc:	mov    rdx,r14
  40a7cf:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a7d4:	cmp    r15,rax
  40a7d7:	jne    40be29 <main@@Base+0x5009>
  40a7dd:	jmp    40e96e <main@@Base+0x7b4e>
  40a7e2:	mov    r12,rax
  40a7e5:	mov    rdi,QWORD PTR [r15]
  40a7e8:	mov    esi,0x1
  40a7ed:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40a7f2:	test   rax,rax
  40a7f5:	je     407501 <main@@Base+0x6e1>
  40a7fb:	mov    rdi,r15
  40a7fe:	mov    rsi,r12
  40a801:	mov    rdx,r14
  40a804:	mov    rcx,rax
  40a807:	call   412ab0 <main@@Base+0xbc90>
  40a80c:	mov    rcx,r14
  40a80f:	sub    rcx,rax
  40a812:	cmp    rcx,0x2
  40a816:	mov    rbp,QWORD PTR [rsp+0x18]
  40a81b:	movabs r12,0x7465737400000000
  40a825:	jl     40a842 <main@@Base+0x3a22>
  40a827:	cmp    BYTE PTR [rax],0x20
  40a82a:	jg     40a850 <main@@Base+0x3a30>
  40a82c:	jne    40a842 <main@@Base+0x3a22>
  40a82e:	cmp    BYTE PTR [rax+0x1],0x20
  40a832:	jle    40a842 <main@@Base+0x3a22>
  40a834:	add    rax,0x1
  40a838:	cmp    rax,r14
  40a83b:	jne    40a859 <main@@Base+0x3a39>
  40a83d:	jmp    40c02c <main@@Base+0x520c>
  40a842:	mov    rdi,r15
  40a845:	mov    rsi,rax
  40a848:	mov    rdx,r14
  40a84b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a850:	cmp    rax,r14
  40a853:	je     40c02c <main@@Base+0x520c>
  40a859:	movzx  ecx,BYTE PTR [rax]
  40a85c:	cmp    cl,0x2c
  40a85f:	jne    40c034 <main@@Base+0x5214>
  40a865:	lea    r12,[rax+0x1]
  40a869:	mov    rcx,r14
  40a86c:	sub    rcx,r12
  40a86f:	cmp    rcx,0x2
  40a873:	jl     40a88a <main@@Base+0x3a6a>
  40a875:	cmp    BYTE PTR [r12],0x20
  40a87a:	jg     40a89b <main@@Base+0x3a7b>
  40a87c:	jne    40a88a <main@@Base+0x3a6a>
  40a87e:	cmp    BYTE PTR [rax+0x2],0x20
  40a882:	jle    40a88a <main@@Base+0x3a6a>
  40a884:	add    rax,0x2
  40a888:	jmp    40a898 <main@@Base+0x3a78>
  40a88a:	mov    rdi,r15
  40a88d:	mov    rsi,r12
  40a890:	mov    rdx,r14
  40a893:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a898:	mov    r12,rax
  40a89b:	cmp    r12,r14
  40a89e:	je     40c066 <main@@Base+0x5246>
  40a8a4:	cmp    BYTE PTR [r12],0x5d
  40a8a9:	jne    40a7e5 <main@@Base+0x39c5>
  40a8af:	lea    r13,[r12+0x1]
  40a8b4:	mov    rax,r14
  40a8b7:	sub    rax,r13
  40a8ba:	cmp    rax,0x2
  40a8be:	jl     40c930 <main@@Base+0x5b10>
  40a8c4:	cmp    BYTE PTR [r13+0x0],0x20
  40a8c9:	jg     40a6c3 <main@@Base+0x38a3>
  40a8cf:	jne    40c930 <main@@Base+0x5b10>
  40a8d5:	cmp    BYTE PTR [r12+0x2],0x20
  40a8db:	jle    40c930 <main@@Base+0x5b10>
  40a8e1:	add    r12,0x2
  40a8e5:	mov    r13,r12
  40a8e8:	jmp    40a6c3 <main@@Base+0x38a3>
  40a8ed:	mov    rdi,r15
  40a8f0:	mov    rsi,r12
  40a8f3:	mov    rdx,r14
  40a8f6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a8fb:	mov    r12,rax
  40a8fe:	cmp    r13,r12
  40a901:	je     40afee <main@@Base+0x41ce>
  40a907:	mov    BYTE PTR [rsp+0x14],0x0
  40a90c:	mov    rax,r14
  40a90f:	sub    rax,r12
  40a912:	cmp    rax,0x4
  40a916:	jl     40a944 <main@@Base+0x3b24>
  40a918:	cmp    DWORD PTR [r12],0x65757274
  40a920:	je     40a999 <main@@Base+0x3b79>
  40a922:	cmp    rax,0x5
  40a926:	jl     40a944 <main@@Base+0x3b24>
  40a928:	mov    eax,DWORD PTR [r12]
  40a92c:	mov    ecx,0x736c6166
  40a931:	xor    eax,ecx
  40a933:	movzx  ecx,BYTE PTR [r12+0x4]
  40a939:	xor    ecx,0x65
  40a93c:	or     ecx,eax
  40a93e:	je     40bce3 <main@@Base+0x4ec3>
  40a944:	mov    QWORD PTR [rsp+0x20],0x0
  40a94d:	mov    DWORD PTR [rsp+0x30],0x0
  40a955:	cmp    r12,r14
  40a958:	je     40a98d <main@@Base+0x3b6d>
  40a95a:	mov    rdi,r15
  40a95d:	mov    rsi,r12
  40a960:	mov    rdx,r14
  40a963:	lea    rcx,[rsp+0x30]
  40a968:	lea    r8,[rsp+0x20]
  40a96d:	call   425160 <flatcc_json_parser_integer@@Base>
  40a972:	cmp    rax,r12
  40a975:	mov    rbp,QWORD PTR [rsp+0x18]
  40a97a:	je     40a9aa <main@@Base+0x3b8a>
  40a97c:	mov    r13,rax
  40a97f:	cmp    DWORD PTR [rsp+0x30],0x0
  40a984:	je     40a9b1 <main@@Base+0x3b91>
  40a986:	mov    ecx,0x8
  40a98b:	jmp    40a9c7 <main@@Base+0x3ba7>
  40a98d:	xor    ebx,ebx
  40a98f:	mov    r13,r14
  40a992:	mov    rbp,QWORD PTR [rsp+0x18]
  40a997:	jmp    40a9da <main@@Base+0x3bba>
  40a999:	mov    BYTE PTR [rsp+0x14],0x1
  40a99e:	lea    r13,[r12+0x4]
  40a9a3:	mov    bl,0x1
  40a9a5:	jmp    40bcef <main@@Base+0x4ecf>
  40a9aa:	xor    ebx,ebx
  40a9ac:	mov    r13,r12
  40a9af:	jmp    40a9da <main@@Base+0x3bba>
  40a9b1:	mov    rax,QWORD PTR [rsp+0x20]
  40a9b6:	cmp    rax,0x100
  40a9bc:	jb     40bdc8 <main@@Base+0x4fa8>
  40a9c2:	mov    ecx,0x7
  40a9c7:	mov    rdi,r15
  40a9ca:	mov    rsi,r13
  40a9cd:	mov    rdx,r14
  40a9d0:	call   423620 <flatcc_json_parser_set_error@@Base>
  40a9d5:	mov    r13,rax
  40a9d8:	xor    ebx,ebx
  40a9da:	mov    BYTE PTR [rsp+0x14],bl
  40a9de:	cmp    r12,r13
  40a9e1:	jne    40bd2c <main@@Base+0x4f0c>
  40a9e7:	jmp    40bcf9 <main@@Base+0x4ed9>
  40a9ec:	mov    rdi,QWORD PTR [rsp+0x8]
  40a9f1:	mov    rsi,r12
  40a9f4:	mov    rdx,r14
  40a9f7:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40a9fc:	mov    r12,rax
  40a9ff:	cmp    r15,r12
  40aa02:	je     40d3da <main@@Base+0x65ba>
  40aa08:	mov    r15,QWORD PTR [rsp+0x8]
  40aa0d:	mov    rdi,QWORD PTR [r15]
  40aa10:	mov    esi,0x1
  40aa15:	mov    edx,0x1
  40aa1a:	mov    ecx,0xffffffff
  40aa1f:	call   41e690 <flatcc_builder_start_vector@@Base>
  40aa24:	test   eax,eax
  40aa26:	jne    407501 <main@@Base+0x6e1>
  40aa2c:	cmp    r12,r14
  40aa2f:	je     40aa74 <main@@Base+0x3c54>
  40aa31:	cmp    BYTE PTR [r12],0x5b
  40aa36:	jne    40aa74 <main@@Base+0x3c54>
  40aa38:	lea    rax,[r12+0x1]
  40aa3d:	mov    rcx,r14
  40aa40:	sub    rcx,rax
  40aa43:	cmp    rcx,0x2
  40aa47:	jl     40be65 <main@@Base+0x5045>
  40aa4d:	cmp    BYTE PTR [rax],0x20
  40aa50:	jg     40be73 <main@@Base+0x5053>
  40aa56:	jne    40be65 <main@@Base+0x5045>
  40aa5c:	cmp    BYTE PTR [r12+0x2],0x20
  40aa62:	jle    40be65 <main@@Base+0x5045>
  40aa68:	add    r12,0x2
  40aa6c:	mov    rax,r12
  40aa6f:	jmp    40be73 <main@@Base+0x5053>
  40aa74:	mov    ecx,0x16
  40aa79:	mov    rdi,r15
  40aa7c:	mov    rsi,r12
  40aa7f:	mov    rdx,r14
  40aa82:	call   423620 <flatcc_json_parser_set_error@@Base>
  40aa87:	mov    r13,rax
  40aa8a:	mov    rbp,QWORD PTR [rsp+0x18]
  40aa8f:	movabs r12,0x7465737400000000
  40aa99:	mov    rdi,QWORD PTR [r15]
  40aa9c:	call   41f820 <flatcc_builder_end_vector@@Base>
  40aaa1:	mov    DWORD PTR [rsp+0x2c],eax
  40aaa5:	test   eax,eax
  40aaa7:	je     41078b <main@@Base+0x996b>
  40aaad:	mov    rdi,QWORD PTR [r15]
  40aab0:	mov    esi,0x18
  40aab5:	jmp    40a6e9 <main@@Base+0x38c9>
  40aaba:	mov    rdi,r15
  40aabd:	mov    rsi,r13
  40aac0:	mov    rdx,r14
  40aac3:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40aac8:	mov    r13,rax
  40aacb:	jmp    409577 <main@@Base+0x2757>
  40aad0:	mov    rdi,QWORD PTR [rsp+0x8]
  40aad5:	mov    rdx,r14
  40aad8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40aadd:	mov    rsi,rax
  40aae0:	cmp    rsi,r14
  40aae3:	je     40ab2c <main@@Base+0x3d0c>
  40aae5:	cmp    BYTE PTR [rsi],0x3a
  40aae8:	jne    40ab2c <main@@Base+0x3d0c>
  40aaea:	lea    rbx,[rsi+0x1]
  40aaee:	mov    rax,r14
  40aaf1:	sub    rax,rbx
  40aaf4:	cmp    rax,0x2
  40aaf8:	jl     40ca6a <main@@Base+0x5c4a>
  40aafe:	cmp    BYTE PTR [rbx],0x20
  40ab01:	jg     40ca7d <main@@Base+0x5c5d>
  40ab07:	jne    40ca6a <main@@Base+0x5c4a>
  40ab0d:	cmp    BYTE PTR [rsi+0x2],0x20
  40ab11:	jle    40ca6a <main@@Base+0x5c4a>
  40ab17:	add    rsi,0x2
  40ab1b:	mov    rbx,rsi
  40ab1e:	cmp    r15,rbx
  40ab21:	jne    40ca86 <main@@Base+0x5c66>
  40ab27:	jmp    40e96e <main@@Base+0x7b4e>
  40ab2c:	mov    ecx,0x4
  40ab31:	mov    rdi,QWORD PTR [rsp+0x8]
  40ab36:	mov    rdx,r14
  40ab39:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ab3e:	jmp    40ca7a <main@@Base+0x5c5a>
  40ab43:	mov    rdi,QWORD PTR [rsp+0x8]
  40ab48:	mov    rdx,r14
  40ab4b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ab50:	mov    rsi,rax
  40ab53:	cmp    rsi,r14
  40ab56:	je     40ae19 <main@@Base+0x3ff9>
  40ab5c:	cmp    BYTE PTR [rsi],0x3a
  40ab5f:	jne    40ae19 <main@@Base+0x3ff9>
  40ab65:	lea    rbx,[rsi+0x1]
  40ab69:	mov    rax,r14
  40ab6c:	sub    rax,rbx
  40ab6f:	cmp    rax,0x2
  40ab73:	jl     40cf36 <main@@Base+0x6116>
  40ab79:	cmp    BYTE PTR [rbx],0x20
  40ab7c:	jg     40cf49 <main@@Base+0x6129>
  40ab82:	jne    40cf36 <main@@Base+0x6116>
  40ab88:	cmp    BYTE PTR [rsi+0x2],0x20
  40ab8c:	jle    40cf36 <main@@Base+0x6116>
  40ab92:	add    rsi,0x2
  40ab96:	mov    rbx,rsi
  40ab99:	cmp    r15,rbx
  40ab9c:	jne    40cf52 <main@@Base+0x6132>
  40aba2:	lea    r15,[r13+0x10]
  40aba6:	mov    rax,r14
  40aba9:	sub    rax,r15
  40abac:	cmp    rax,0x8
  40abb0:	jb     40abbc <main@@Base+0x3d9c>
  40abb2:	movbe  rcx,QWORD PTR [r15]
  40abb7:	jmp    40ac48 <main@@Base+0x3e28>
  40abbc:	mov    ecx,eax
  40abbe:	and    cl,0xf
  40abc1:	add    cl,0xff
  40abc4:	cmp    cl,0x7
  40abc7:	ja     40e96e <main@@Base+0x7b4e>
  40abcd:	movzx  ecx,cl
  40abd0:	lea    rdx,[rip+0x28529]        # 433100 <_IO_stdin_used@@Base+0x100>
  40abd7:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40abdb:	add    rcx,rdx
  40abde:	xor    r8d,r8d
  40abe1:	xor    r9d,r9d
  40abe4:	xor    edx,edx
  40abe6:	xor    esi,esi
  40abe8:	xor    ebx,ebx
  40abea:	xor    edi,edi
  40abec:	xor    ebp,ebp
  40abee:	jmp    rcx
  40abf0:	movsx  r8,BYTE PTR [r13+0x17]
  40abf5:	movsx  r9,BYTE PTR [r13+0x16]
  40abfa:	shl    r9,0x8
  40abfe:	or     r9,r8
  40ac01:	movsx  rdx,BYTE PTR [r13+0x15]
  40ac06:	shl    rdx,0x10
  40ac0a:	or     rdx,r9
  40ac0d:	movsx  rsi,BYTE PTR [r13+0x14]
  40ac12:	shl    rsi,0x18
  40ac16:	or     rsi,rdx
  40ac19:	movsx  rbx,BYTE PTR [r13+0x13]
  40ac1e:	shl    rbx,0x20
  40ac22:	or     rbx,rsi
  40ac25:	movsx  rdi,BYTE PTR [r13+0x12]
  40ac2a:	shl    rdi,0x28
  40ac2e:	or     rdi,rbx
  40ac31:	movsx  rbp,BYTE PTR [r13+0x11]
  40ac36:	shl    rbp,0x30
  40ac3a:	or     rbp,rdi
  40ac3d:	movzx  ecx,BYTE PTR [r15]
  40ac41:	shl    rcx,0x38
  40ac45:	or     rcx,rbp
  40ac48:	shr    rcx,0x38
  40ac4c:	cmp    rcx,0x61
  40ac50:	jne    40e96e <main@@Base+0x7b4e>
  40ac56:	cmp    rax,0x2
  40ac5a:	jl     40e96e <main@@Base+0x7b4e>
  40ac60:	cmp    BYTE PTR [r13+0x11],0x22
  40ac65:	jne    40e96e <main@@Base+0x7b4e>
  40ac6b:	lea    rsi,[r13+0x12]
  40ac6f:	mov    rax,r14
  40ac72:	sub    rax,rsi
  40ac75:	cmp    rax,0x2
  40ac79:	jl     40c976 <main@@Base+0x5b56>
  40ac7f:	cmp    BYTE PTR [rsi],0x20
  40ac82:	jg     40c986 <main@@Base+0x5b66>
  40ac88:	jne    40c976 <main@@Base+0x5b56>
  40ac8e:	cmp    BYTE PTR [r13+0x13],0x20
  40ac93:	jle    40c976 <main@@Base+0x5b56>
  40ac99:	add    r13,0x13
  40ac9d:	mov    rsi,r13
  40aca0:	cmp    rsi,r14
  40aca3:	jne    40c98f <main@@Base+0x5b6f>
  40aca9:	jmp    40ca24 <main@@Base+0x5c04>
  40acae:	mov    rdi,QWORD PTR [rsp+0x8]
  40acb3:	mov    rdx,r14
  40acb6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40acbb:	mov    rsi,rax
  40acbe:	cmp    rsi,r14
  40acc1:	je     40ae30 <main@@Base+0x4010>
  40acc7:	cmp    BYTE PTR [rsi],0x3a
  40acca:	jne    40ae30 <main@@Base+0x4010>
  40acd0:	lea    rbx,[rsi+0x1]
  40acd4:	mov    rax,r14
  40acd7:	sub    rax,rbx
  40acda:	cmp    rax,0x2
  40acde:	jl     40cfbe <main@@Base+0x619e>
  40ace4:	cmp    BYTE PTR [rbx],0x20
  40ace7:	jg     40cfd1 <main@@Base+0x61b1>
  40aced:	jne    40cfbe <main@@Base+0x619e>
  40acf3:	cmp    BYTE PTR [rsi+0x2],0x20
  40acf7:	jle    40cfbe <main@@Base+0x619e>
  40acfd:	add    rsi,0x2
  40ad01:	mov    rbx,rsi
  40ad04:	cmp    r15,rbx
  40ad07:	jne    40cfda <main@@Base+0x61ba>
  40ad0d:	lea    r15,[r13+0x10]
  40ad11:	mov    rax,r14
  40ad14:	sub    rax,r15
  40ad17:	cmp    rax,0x8
  40ad1b:	jb     40ad27 <main@@Base+0x3f07>
  40ad1d:	movbe  rcx,QWORD PTR [r15]
  40ad22:	jmp    40adb3 <main@@Base+0x3f93>
  40ad27:	mov    ecx,eax
  40ad29:	and    cl,0xf
  40ad2c:	add    cl,0xff
  40ad2f:	cmp    cl,0x7
  40ad32:	ja     40e96e <main@@Base+0x7b4e>
  40ad38:	movzx  ecx,cl
  40ad3b:	lea    rdx,[rip+0x2839e]        # 4330e0 <_IO_stdin_used@@Base+0xe0>
  40ad42:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40ad46:	add    rcx,rdx
  40ad49:	xor    r8d,r8d
  40ad4c:	xor    r9d,r9d
  40ad4f:	xor    edx,edx
  40ad51:	xor    esi,esi
  40ad53:	xor    ebx,ebx
  40ad55:	xor    edi,edi
  40ad57:	xor    ebp,ebp
  40ad59:	jmp    rcx
  40ad5b:	movsx  r8,BYTE PTR [r13+0x17]
  40ad60:	movsx  r9,BYTE PTR [r13+0x16]
  40ad65:	shl    r9,0x8
  40ad69:	or     r9,r8
  40ad6c:	movsx  rdx,BYTE PTR [r13+0x15]
  40ad71:	shl    rdx,0x10
  40ad75:	or     rdx,r9
  40ad78:	movsx  rsi,BYTE PTR [r13+0x14]
  40ad7d:	shl    rsi,0x18
  40ad81:	or     rsi,rdx
  40ad84:	movsx  rbx,BYTE PTR [r13+0x13]
  40ad89:	shl    rbx,0x20
  40ad8d:	or     rbx,rsi
  40ad90:	movsx  rdi,BYTE PTR [r13+0x12]
  40ad95:	shl    rdi,0x28
  40ad99:	or     rdi,rbx
  40ad9c:	movsx  rbp,BYTE PTR [r13+0x11]
  40ada1:	shl    rbp,0x30
  40ada5:	or     rbp,rdi
  40ada8:	movzx  ecx,BYTE PTR [r15]
  40adac:	shl    rcx,0x38
  40adb0:	or     rcx,rbp
  40adb3:	shr    rcx,0x38
  40adb7:	cmp    rcx,0x61
  40adbb:	jne    40e96e <main@@Base+0x7b4e>
  40adc1:	cmp    rax,0x2
  40adc5:	jl     40e96e <main@@Base+0x7b4e>
  40adcb:	cmp    BYTE PTR [r13+0x11],0x22
  40add0:	jne    40e96e <main@@Base+0x7b4e>
  40add6:	lea    rsi,[r13+0x12]
  40adda:	mov    rax,r14
  40addd:	sub    rax,rsi
  40ade0:	cmp    rax,0x2
  40ade4:	jl     40c9d1 <main@@Base+0x5bb1>
  40adea:	cmp    BYTE PTR [rsi],0x20
  40aded:	jg     40c9e1 <main@@Base+0x5bc1>
  40adf3:	jne    40c9d1 <main@@Base+0x5bb1>
  40adf9:	cmp    BYTE PTR [r13+0x13],0x20
  40adfe:	jle    40c9d1 <main@@Base+0x5bb1>
  40ae04:	add    r13,0x13
  40ae08:	mov    rsi,r13
  40ae0b:	cmp    rsi,r14
  40ae0e:	jne    40c9e6 <main@@Base+0x5bc6>
  40ae14:	jmp    40ca47 <main@@Base+0x5c27>
  40ae19:	mov    ecx,0x4
  40ae1e:	mov    rdi,QWORD PTR [rsp+0x8]
  40ae23:	mov    rdx,r14
  40ae26:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ae2b:	jmp    40cf46 <main@@Base+0x6126>
  40ae30:	mov    ecx,0x4
  40ae35:	mov    rdi,QWORD PTR [rsp+0x8]
  40ae3a:	mov    rdx,r14
  40ae3d:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ae42:	jmp    40cfce <main@@Base+0x61ae>
  40ae47:	mov    rdi,r15
  40ae4a:	mov    rsi,rbx
  40ae4d:	mov    rdx,r14
  40ae50:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ae55:	mov    rbx,rax
  40ae58:	cmp    r13,rbx
  40ae5b:	je     40a5ab <main@@Base+0x378b>
  40ae61:	mov    QWORD PTR [rsp+0x20],0x0
  40ae6a:	mov    DWORD PTR [rsp+0x30],0x0
  40ae72:	mov    WORD PTR [rsp+0x14],0x0
  40ae79:	cmp    rbx,r14
  40ae7c:	je     40aebf <main@@Base+0x409f>
  40ae7e:	mov    rdi,r15
  40ae81:	mov    rsi,rbx
  40ae84:	mov    rdx,r14
  40ae87:	lea    rcx,[rsp+0x30]
  40ae8c:	lea    r8,[rsp+0x20]
  40ae91:	call   425160 <flatcc_json_parser_integer@@Base>
  40ae96:	cmp    rax,rbx
  40ae99:	mov    rbp,QWORD PTR [rsp+0x18]
  40ae9e:	je     40aed1 <main@@Base+0x40b1>
  40aea0:	mov    r13,rax
  40aea3:	mov    r12,QWORD PTR [rsp+0x20]
  40aea8:	cmp    DWORD PTR [rsp+0x30],0x0
  40aead:	je     40aede <main@@Base+0x40be>
  40aeaf:	cmp    r12,0x8001
  40aeb6:	jb     40af07 <main@@Base+0x40e7>
  40aeb8:	mov    ecx,0x8
  40aebd:	jmp    40aeec <main@@Base+0x40cc>
  40aebf:	xor    r12d,r12d
  40aec2:	mov    r13,r14
  40aec5:	mov    rbp,QWORD PTR [rsp+0x18]
  40aeca:	cmp    rbx,r13
  40aecd:	jne    40af4a <main@@Base+0x412a>
  40aecf:	jmp    40af15 <main@@Base+0x40f5>
  40aed1:	xor    r12d,r12d
  40aed4:	mov    r13,rbx
  40aed7:	cmp    rbx,r13
  40aeda:	jne    40af4a <main@@Base+0x412a>
  40aedc:	jmp    40af15 <main@@Base+0x40f5>
  40aede:	cmp    r12,0x8000
  40aee5:	jb     40af0a <main@@Base+0x40ea>
  40aee7:	mov    ecx,0x7
  40aeec:	mov    rdi,r15
  40aeef:	mov    rsi,r13
  40aef2:	mov    rdx,r14
  40aef5:	call   423620 <flatcc_json_parser_set_error@@Base>
  40aefa:	mov    r13,rax
  40aefd:	xor    r12d,r12d
  40af00:	cmp    rbx,r13
  40af03:	jne    40af4a <main@@Base+0x412a>
  40af05:	jmp    40af15 <main@@Base+0x40f5>
  40af07:	neg    r12
  40af0a:	mov    WORD PTR [rsp+0x14],r12w
  40af10:	cmp    rbx,r13
  40af13:	jne    40af4a <main@@Base+0x412a>
  40af15:	mov    rdi,r15
  40af18:	mov    rsi,rbx
  40af1b:	mov    rdx,r14
  40af1e:	lea    rcx,[rip+0x361db]        # 441100 <__data_start@@Base+0x50>
  40af25:	lea    r8,[rsp+0x14]
  40af2a:	call   412910 <main@@Base+0xbaf0>
  40af2f:	mov    r13,rax
  40af32:	cmp    rax,rbx
  40af35:	je     41078b <main@@Base+0x996b>
  40af3b:	cmp    r13,r14
  40af3e:	je     41078b <main@@Base+0x996b>
  40af44:	movzx  r12d,WORD PTR [rsp+0x14]
  40af4a:	movzx  eax,r12w
  40af4e:	cmp    eax,0x64
  40af51:	jne    40af5e <main@@Base+0x413e>
  40af53:	test   BYTE PTR [r15+0x10],0x2
  40af58:	je     40d3f5 <main@@Base+0x65d5>
  40af5e:	mov    rdi,QWORD PTR [r15]
  40af61:	mov    esi,0x2
  40af66:	mov    edx,0x2
  40af6b:	mov    ecx,0x2
  40af70:	call   41fe80 <flatcc_builder_table_add@@Base>
  40af75:	test   rax,rax
  40af78:	jne    40c577 <main@@Base+0x5757>
  40af7e:	jmp    41078b <main@@Base+0x996b>
  40af83:	mov    rdi,r15
  40af86:	mov    rsi,r12
  40af89:	mov    rdx,r14
  40af8c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40af91:	mov    r12,rax
  40af94:	cmp    r13,r12
  40af97:	je     40afee <main@@Base+0x41ce>
  40af99:	mov    rdi,QWORD PTR [r15]
  40af9c:	xor    esi,esi
  40af9e:	mov    edx,0x20
  40afa3:	mov    ecx,0x10
  40afa8:	call   41fe80 <flatcc_builder_table_add@@Base>
  40afad:	test   rax,rax
  40afb0:	je     407501 <main@@Base+0x6e1>
  40afb6:	cmp    r12,r14
  40afb9:	je     40aff9 <main@@Base+0x41d9>
  40afbb:	cmp    BYTE PTR [r12],0x7b
  40afc0:	jne    40aff9 <main@@Base+0x41d9>
  40afc2:	mov    r13,rax
  40afc5:	lea    rax,[r12+0x1]
  40afca:	mov    rcx,r14
  40afcd:	sub    rcx,rax
  40afd0:	cmp    rcx,0x2
  40afd4:	jl     40b011 <main@@Base+0x41f1>
  40afd6:	cmp    BYTE PTR [rax],0x20
  40afd9:	jg     40b01f <main@@Base+0x41ff>
  40afdb:	jne    40b011 <main@@Base+0x41f1>
  40afdd:	cmp    BYTE PTR [r12+0x2],0x20
  40afe3:	jle    40b011 <main@@Base+0x41f1>
  40afe5:	add    r12,0x2
  40afe9:	mov    rax,r12
  40afec:	jmp    40b01f <main@@Base+0x41ff>
  40afee:	mov    rdi,r15
  40aff1:	mov    rsi,r13
  40aff4:	jmp    40d3e5 <main@@Base+0x65c5>
  40aff9:	mov    ecx,0x15
  40affe:	mov    rdi,r15
  40b001:	mov    rsi,r12
  40b004:	mov    rdx,r14
  40b007:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b00c:	jmp    40d3ed <main@@Base+0x65cd>
  40b011:	mov    rdi,r15
  40b014:	mov    rsi,rax
  40b017:	mov    rdx,r14
  40b01a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b01f:	mov    rsi,r14
  40b022:	cmp    rax,r14
  40b025:	movabs r12,0x7465737400000000
  40b02f:	je     40b079 <main@@Base+0x4259>
  40b031:	cmp    BYTE PTR [rax],0x7d
  40b034:	jne    40b076 <main@@Base+0x4256>
  40b036:	lea    r13,[rax+0x1]
  40b03a:	mov    rcx,r14
  40b03d:	sub    rcx,r13
  40b040:	cmp    rcx,0x2
  40b044:	mov    rbp,QWORD PTR [rsp+0x18]
  40b049:	jl     40bae5 <main@@Base+0x4cc5>
  40b04f:	cmp    BYTE PTR [r13+0x0],0x20
  40b054:	jg     40e989 <main@@Base+0x7b69>
  40b05a:	jne    40bae5 <main@@Base+0x4cc5>
  40b060:	cmp    BYTE PTR [rax+0x2],0x20
  40b064:	jle    40bae5 <main@@Base+0x4cc5>
  40b06a:	add    rax,0x2
  40b06e:	mov    r13,rax
  40b071:	jmp    40e989 <main@@Base+0x7b69>
  40b076:	mov    rsi,rax
  40b079:	mov    r12,r13
  40b07c:	add    r12,0x1a
  40b080:	mov    r15,r14
  40b083:	cmp    rsi,r14
  40b086:	je     40b0ab <main@@Base+0x428b>
  40b088:	cmp    BYTE PTR [rsi],0x22
  40b08b:	jne    40b096 <main@@Base+0x4276>
  40b08d:	add    rsi,0x1
  40b091:	mov    r15,rsi
  40b094:	jmp    40b0ab <main@@Base+0x428b>
  40b096:	mov    ecx,0x5
  40b09b:	mov    rdi,QWORD PTR [rsp+0x8]
  40b0a0:	mov    rdx,r14
  40b0a3:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b0a8:	mov    r15,rax
  40b0ab:	mov    rcx,r14
  40b0ae:	sub    rcx,r15
  40b0b1:	cmp    rcx,0x8
  40b0b5:	jb     40b0c1 <main@@Base+0x42a1>
  40b0b7:	movbe  rax,QWORD PTR [r15]
  40b0bc:	jmp    40b14a <main@@Base+0x432a>
  40b0c1:	mov    eax,ecx
  40b0c3:	and    al,0xf
  40b0c5:	add    al,0xff
  40b0c7:	cmp    al,0x7
  40b0c9:	ja     40ba07 <main@@Base+0x4be7>
  40b0cf:	movzx  eax,al
  40b0d2:	lea    rdx,[rip+0x281c7]        # 4332a0 <_IO_stdin_used@@Base+0x2a0>
  40b0d9:	movsxd rax,DWORD PTR [rdx+rax*4]
  40b0dd:	add    rax,rdx
  40b0e0:	xor    r8d,r8d
  40b0e3:	xor    r9d,r9d
  40b0e6:	xor    edx,edx
  40b0e8:	xor    esi,esi
  40b0ea:	xor    ebx,ebx
  40b0ec:	xor    ebp,ebp
  40b0ee:	xor    edi,edi
  40b0f0:	jmp    rax
  40b0f2:	movsx  r8,BYTE PTR [r15+0x7]
  40b0f7:	movsx  r9,BYTE PTR [r15+0x6]
  40b0fc:	shl    r9,0x8
  40b100:	or     r9,r8
  40b103:	movsx  rdx,BYTE PTR [r15+0x5]
  40b108:	shl    rdx,0x10
  40b10c:	or     rdx,r9
  40b10f:	movsx  rsi,BYTE PTR [r15+0x4]
  40b114:	shl    rsi,0x18
  40b118:	or     rsi,rdx
  40b11b:	movsx  rbx,BYTE PTR [r15+0x3]
  40b120:	shl    rbx,0x20
  40b124:	or     rbx,rsi
  40b127:	movsx  rbp,BYTE PTR [r15+0x2]
  40b12c:	shl    rbp,0x28
  40b130:	or     rbp,rbx
  40b133:	movsx  rdi,BYTE PTR [r15+0x1]
  40b138:	shl    rdi,0x30
  40b13c:	or     rdi,rbp
  40b13f:	movzx  eax,BYTE PTR [r15]
  40b143:	shl    rax,0x38
  40b147:	or     rax,rdi
  40b14a:	movabs rdx,0x7465737400000000
  40b154:	lea    rdx,[rdx+0x33000000]
  40b15b:	cmp    rax,rdx
  40b15e:	jae    40b1eb <main@@Base+0x43cb>
  40b164:	and    rax,0xffffffffff000000
  40b16a:	movabs rdx,0x7465737431000000
  40b174:	cmp    rax,rdx
  40b177:	je     40b2f5 <main@@Base+0x44d5>
  40b17d:	movabs rdx,0x7465737432000000
  40b187:	cmp    rax,rdx
  40b18a:	jne    40ba07 <main@@Base+0x4be7>
  40b190:	mov    rbx,r15
  40b193:	cmp    rcx,0x6
  40b197:	jl     40b60e <main@@Base+0x47ee>
  40b19d:	cmp    BYTE PTR [r15+0x5],0x22
  40b1a2:	mov    rbx,r15
  40b1a5:	jne    40b60e <main@@Base+0x47ee>
  40b1ab:	lea    rsi,[r15+0x6]
  40b1af:	mov    rax,r14
  40b1b2:	sub    rax,rsi
  40b1b5:	cmp    rax,0x2
  40b1b9:	jl     40b41e <main@@Base+0x45fe>
  40b1bf:	cmp    BYTE PTR [rsi],0x20
  40b1c2:	jg     40b42e <main@@Base+0x460e>
  40b1c8:	jne    40b41e <main@@Base+0x45fe>
  40b1ce:	cmp    BYTE PTR [r15+0x7],0x20
  40b1d3:	jle    40b41e <main@@Base+0x45fe>
  40b1d9:	lea    rsi,[r15+0x7]
  40b1dd:	cmp    rsi,r14
  40b1e0:	jne    40b437 <main@@Base+0x4617>
  40b1e6:	jmp    40b4de <main@@Base+0x46be>
  40b1eb:	movabs rsi,0x7800000000000000
  40b1f5:	cmp    rax,rsi
  40b1f8:	jae    40b264 <main@@Base+0x4444>
  40b1fa:	and    rax,0xffffffffff000000
  40b200:	cmp    rax,rdx
  40b203:	jne    40ba07 <main@@Base+0x4be7>
  40b209:	mov    rax,r15
  40b20c:	cmp    rcx,0x6
  40b210:	jl     40b872 <main@@Base+0x4a52>
  40b216:	cmp    BYTE PTR [r15+0x5],0x22
  40b21b:	mov    rax,r15
  40b21e:	jne    40b872 <main@@Base+0x4a52>
  40b224:	lea    rsi,[r15+0x6]
  40b228:	mov    rax,r14
  40b22b:	sub    rax,rsi
  40b22e:	cmp    rax,0x2
  40b232:	jl     40b50c <main@@Base+0x46ec>
  40b238:	cmp    BYTE PTR [rsi],0x20
  40b23b:	jg     40b51c <main@@Base+0x46fc>
  40b241:	jne    40b50c <main@@Base+0x46ec>
  40b247:	cmp    BYTE PTR [r15+0x7],0x20
  40b24c:	jle    40b50c <main@@Base+0x46ec>
  40b252:	lea    rsi,[r15+0x7]
  40b256:	cmp    rsi,r14
  40b259:	jne    40b521 <main@@Base+0x4701>
  40b25f:	jmp    40b568 <main@@Base+0x4748>
  40b264:	mov    rdx,rax
  40b267:	movabs rsi,0xff00000000000000
  40b271:	and    rdx,rsi
  40b274:	movabs rsi,0x7900000000000000
  40b27e:	cmp    rax,rsi
  40b281:	jae    40b350 <main@@Base+0x4530>
  40b287:	movabs rax,0x7800000000000000
  40b291:	cmp    rdx,rax
  40b294:	jne    40ba07 <main@@Base+0x4be7>
  40b29a:	mov    rbx,r15
  40b29d:	cmp    rcx,0x2
  40b2a1:	jl     40b8a9 <main@@Base+0x4a89>
  40b2a7:	cmp    BYTE PTR [r15+0x1],0x22
  40b2ac:	mov    rbx,r15
  40b2af:	jne    40b8a9 <main@@Base+0x4a89>
  40b2b5:	lea    rsi,[r15+0x2]
  40b2b9:	mov    rax,r14
  40b2bc:	sub    rax,rsi
  40b2bf:	cmp    rax,0x2
  40b2c3:	jl     40b588 <main@@Base+0x4768>
  40b2c9:	cmp    BYTE PTR [rsi],0x20
  40b2cc:	jg     40b598 <main@@Base+0x4778>
  40b2d2:	jne    40b588 <main@@Base+0x4768>
  40b2d8:	cmp    BYTE PTR [r15+0x3],0x20
  40b2dd:	jle    40b588 <main@@Base+0x4768>
  40b2e3:	lea    rsi,[r15+0x3]
  40b2e7:	cmp    rsi,r14
  40b2ea:	jne    40b59d <main@@Base+0x477d>
  40b2f0:	jmp    40b5e4 <main@@Base+0x47c4>
  40b2f5:	mov    rbx,r15
  40b2f8:	cmp    rcx,0x6
  40b2fc:	jl     40b70b <main@@Base+0x48eb>
  40b302:	cmp    BYTE PTR [r15+0x5],0x22
  40b307:	mov    rbx,r15
  40b30a:	jne    40b70b <main@@Base+0x48eb>
  40b310:	lea    rsi,[r15+0x6]
  40b314:	mov    rax,r14
  40b317:	sub    rax,rsi
  40b31a:	cmp    rax,0x2
  40b31e:	jl     40b482 <main@@Base+0x4662>
  40b324:	cmp    BYTE PTR [rsi],0x20
  40b327:	jg     40b492 <main@@Base+0x4672>
  40b32d:	jne    40b482 <main@@Base+0x4662>
  40b333:	cmp    BYTE PTR [r15+0x7],0x20
  40b338:	jle    40b482 <main@@Base+0x4662>
  40b33e:	lea    rsi,[r15+0x7]
  40b342:	cmp    rsi,r14
  40b345:	jne    40b497 <main@@Base+0x4677>
  40b34b:	jmp    40b4f5 <main@@Base+0x46d5>
  40b350:	cmp    rdx,rsi
  40b353:	je     40b3c3 <main@@Base+0x45a3>
  40b355:	movabs rax,0x7a00000000000000
  40b35f:	cmp    rdx,rax
  40b362:	jne    40ba07 <main@@Base+0x4be7>
  40b368:	mov    rbx,r15
  40b36b:	cmp    rcx,0x2
  40b36f:	jl     40b923 <main@@Base+0x4b03>
  40b375:	cmp    BYTE PTR [r15+0x1],0x22
  40b37a:	mov    rbx,r15
  40b37d:	jne    40b923 <main@@Base+0x4b03>
  40b383:	lea    rsi,[r15+0x2]
  40b387:	mov    rax,r14
  40b38a:	sub    rax,rsi
  40b38d:	cmp    rax,0x2
  40b391:	jl     40b774 <main@@Base+0x4954>
  40b397:	cmp    BYTE PTR [rsi],0x20
  40b39a:	jg     40b784 <main@@Base+0x4964>
  40b3a0:	jne    40b774 <main@@Base+0x4954>
  40b3a6:	cmp    BYTE PTR [r15+0x3],0x20
  40b3ab:	jle    40b774 <main@@Base+0x4954>
  40b3b1:	lea    rsi,[r15+0x3]
  40b3b5:	cmp    rsi,r14
  40b3b8:	jne    40b78d <main@@Base+0x496d>
  40b3be:	jmp    40b834 <main@@Base+0x4a14>
  40b3c3:	mov    rbx,r15
  40b3c6:	cmp    rcx,0x2
  40b3ca:	jl     40b9a2 <main@@Base+0x4b82>
  40b3d0:	cmp    BYTE PTR [r15+0x1],0x22
  40b3d5:	mov    rbx,r15
  40b3d8:	jne    40b9a2 <main@@Base+0x4b82>
  40b3de:	lea    rsi,[r15+0x2]
  40b3e2:	mov    rax,r14
  40b3e5:	sub    rax,rsi
  40b3e8:	cmp    rax,0x2
  40b3ec:	jl     40b7d8 <main@@Base+0x49b8>
  40b3f2:	cmp    BYTE PTR [rsi],0x20
  40b3f5:	jg     40b7e8 <main@@Base+0x49c8>
  40b3fb:	jne    40b7d8 <main@@Base+0x49b8>
  40b401:	cmp    BYTE PTR [r15+0x3],0x20
  40b406:	jle    40b7d8 <main@@Base+0x49b8>
  40b40c:	lea    rsi,[r15+0x3]
  40b410:	cmp    rsi,r14
  40b413:	jne    40b7ed <main@@Base+0x49cd>
  40b419:	jmp    40b84b <main@@Base+0x4a2b>
  40b41e:	mov    rdi,QWORD PTR [rsp+0x8]
  40b423:	mov    rdx,r14
  40b426:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b42b:	mov    rsi,rax
  40b42e:	cmp    rsi,r14
  40b431:	je     40b4de <main@@Base+0x46be>
  40b437:	cmp    BYTE PTR [rsi],0x3a
  40b43a:	jne    40b4de <main@@Base+0x46be>
  40b440:	lea    rbx,[rsi+0x1]
  40b444:	mov    rax,r14
  40b447:	sub    rax,rbx
  40b44a:	cmp    rax,0x2
  40b44e:	jl     40b5fb <main@@Base+0x47db>
  40b454:	cmp    BYTE PTR [rbx],0x20
  40b457:	jg     40b60e <main@@Base+0x47ee>
  40b45d:	jne    40b5fb <main@@Base+0x47db>
  40b463:	cmp    BYTE PTR [rsi+0x2],0x20
  40b467:	jle    40b5fb <main@@Base+0x47db>
  40b46d:	add    rsi,0x2
  40b471:	mov    rbx,rsi
  40b474:	cmp    r15,rbx
  40b477:	jne    40b617 <main@@Base+0x47f7>
  40b47d:	jmp    40ba07 <main@@Base+0x4be7>
  40b482:	mov    rdi,QWORD PTR [rsp+0x8]
  40b487:	mov    rdx,r14
  40b48a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b48f:	mov    rsi,rax
  40b492:	cmp    rsi,r14
  40b495:	je     40b4f5 <main@@Base+0x46d5>
  40b497:	cmp    BYTE PTR [rsi],0x3a
  40b49a:	jne    40b4f5 <main@@Base+0x46d5>
  40b49c:	lea    rbx,[rsi+0x1]
  40b4a0:	mov    rax,r14
  40b4a3:	sub    rax,rbx
  40b4a6:	cmp    rax,0x2
  40b4aa:	jl     40b6f8 <main@@Base+0x48d8>
  40b4b0:	cmp    BYTE PTR [rbx],0x20
  40b4b3:	jg     40b70b <main@@Base+0x48eb>
  40b4b9:	jne    40b6f8 <main@@Base+0x48d8>
  40b4bf:	cmp    BYTE PTR [rsi+0x2],0x20
  40b4c3:	jle    40b6f8 <main@@Base+0x48d8>
  40b4c9:	add    rsi,0x2
  40b4cd:	mov    rbx,rsi
  40b4d0:	cmp    r15,rbx
  40b4d3:	jne    40b714 <main@@Base+0x48f4>
  40b4d9:	jmp    40ba07 <main@@Base+0x4be7>
  40b4de:	mov    ecx,0x4
  40b4e3:	mov    rdi,QWORD PTR [rsp+0x8]
  40b4e8:	mov    rdx,r14
  40b4eb:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b4f0:	jmp    40b60b <main@@Base+0x47eb>
  40b4f5:	mov    ecx,0x4
  40b4fa:	mov    rdi,QWORD PTR [rsp+0x8]
  40b4ff:	mov    rdx,r14
  40b502:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b507:	jmp    40b708 <main@@Base+0x48e8>
  40b50c:	mov    rdi,QWORD PTR [rsp+0x8]
  40b511:	mov    rdx,r14
  40b514:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b519:	mov    rsi,rax
  40b51c:	cmp    rsi,r14
  40b51f:	je     40b568 <main@@Base+0x4748>
  40b521:	cmp    BYTE PTR [rsi],0x3a
  40b524:	jne    40b568 <main@@Base+0x4748>
  40b526:	lea    rax,[rsi+0x1]
  40b52a:	mov    rcx,r14
  40b52d:	sub    rcx,rax
  40b530:	cmp    rcx,0x2
  40b534:	jl     40b862 <main@@Base+0x4a42>
  40b53a:	cmp    BYTE PTR [rax],0x20
  40b53d:	jg     40b872 <main@@Base+0x4a52>
  40b543:	jne    40b862 <main@@Base+0x4a42>
  40b549:	cmp    BYTE PTR [rsi+0x2],0x20
  40b54d:	jle    40b862 <main@@Base+0x4a42>
  40b553:	add    rsi,0x2
  40b557:	mov    rax,rsi
  40b55a:	cmp    r15,rax
  40b55d:	jne    40b87b <main@@Base+0x4a5b>
  40b563:	jmp    40ba07 <main@@Base+0x4be7>
  40b568:	mov    ecx,0x4
  40b56d:	mov    rdi,QWORD PTR [rsp+0x8]
  40b572:	mov    rdx,r14
  40b575:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b57a:	cmp    r15,rax
  40b57d:	jne    40b87b <main@@Base+0x4a5b>
  40b583:	jmp    40ba07 <main@@Base+0x4be7>
  40b588:	mov    rdi,QWORD PTR [rsp+0x8]
  40b58d:	mov    rdx,r14
  40b590:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b595:	mov    rsi,rax
  40b598:	cmp    rsi,r14
  40b59b:	je     40b5e4 <main@@Base+0x47c4>
  40b59d:	cmp    BYTE PTR [rsi],0x3a
  40b5a0:	jne    40b5e4 <main@@Base+0x47c4>
  40b5a2:	lea    rbx,[rsi+0x1]
  40b5a6:	mov    rax,r14
  40b5a9:	sub    rax,rbx
  40b5ac:	cmp    rax,0x2
  40b5b0:	jl     40b896 <main@@Base+0x4a76>
  40b5b6:	cmp    BYTE PTR [rbx],0x20
  40b5b9:	jg     40b8a9 <main@@Base+0x4a89>
  40b5bf:	jne    40b896 <main@@Base+0x4a76>
  40b5c5:	cmp    BYTE PTR [rsi+0x2],0x20
  40b5c9:	jle    40b896 <main@@Base+0x4a76>
  40b5cf:	add    rsi,0x2
  40b5d3:	mov    rbx,rsi
  40b5d6:	cmp    r15,rbx
  40b5d9:	jne    40b8b2 <main@@Base+0x4a92>
  40b5df:	jmp    40ba07 <main@@Base+0x4be7>
  40b5e4:	mov    ecx,0x4
  40b5e9:	mov    rdi,QWORD PTR [rsp+0x8]
  40b5ee:	mov    rdx,r14
  40b5f1:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b5f6:	jmp    40b8a6 <main@@Base+0x4a86>
  40b5fb:	mov    rdi,QWORD PTR [rsp+0x8]
  40b600:	mov    rsi,rbx
  40b603:	mov    rdx,r14
  40b606:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b60b:	mov    rbx,rax
  40b60e:	cmp    r15,rbx
  40b611:	je     40ba07 <main@@Base+0x4be7>
  40b617:	mov    QWORD PTR [rsp+0x20],0x0
  40b620:	mov    DWORD PTR [rsp+0x30],0x0
  40b628:	mov    BYTE PTR [rsp+0x14],0x0
  40b62d:	cmp    rbx,r14
  40b630:	je     40b670 <main@@Base+0x4850>
  40b632:	mov    r15,QWORD PTR [rsp+0x8]
  40b637:	mov    rdi,r15
  40b63a:	mov    rsi,rbx
  40b63d:	mov    rdx,r14
  40b640:	lea    rcx,[rsp+0x30]
  40b645:	lea    r8,[rsp+0x20]
  40b64a:	call   425160 <flatcc_json_parser_integer@@Base>
  40b64f:	cmp    rax,rbx
  40b652:	je     40b681 <main@@Base+0x4861>
  40b654:	mov    rcx,QWORD PTR [rsp+0x20]
  40b659:	cmp    DWORD PTR [rsp+0x30],0x0
  40b65e:	je     40b68d <main@@Base+0x486d>
  40b660:	cmp    rcx,0x81
  40b667:	jb     40b6b2 <main@@Base+0x4892>
  40b669:	mov    ecx,0x8
  40b66e:	jmp    40b69b <main@@Base+0x487b>
  40b670:	xor    ecx,ecx
  40b672:	mov    rax,r14
  40b675:	mov    r15,QWORD PTR [rsp+0x8]
  40b67a:	cmp    rbx,rax
  40b67d:	jne    40b6ef <main@@Base+0x48cf>
  40b67f:	jmp    40b6be <main@@Base+0x489e>
  40b681:	xor    ecx,ecx
  40b683:	mov    rax,rbx
  40b686:	cmp    rbx,rax
  40b689:	jne    40b6ef <main@@Base+0x48cf>
  40b68b:	jmp    40b6be <main@@Base+0x489e>
  40b68d:	cmp    rcx,0x80
  40b694:	jb     40b6b5 <main@@Base+0x4895>
  40b696:	mov    ecx,0x7
  40b69b:	mov    rdi,r15
  40b69e:	mov    rsi,rax
  40b6a1:	mov    rdx,r14
  40b6a4:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b6a9:	xor    ecx,ecx
  40b6ab:	cmp    rbx,rax
  40b6ae:	jne    40b6ef <main@@Base+0x48cf>
  40b6b0:	jmp    40b6be <main@@Base+0x489e>
  40b6b2:	neg    rcx
  40b6b5:	mov    BYTE PTR [rsp+0x14],cl
  40b6b9:	cmp    rbx,rax
  40b6bc:	jne    40b6ef <main@@Base+0x48cf>
  40b6be:	mov    rdi,r15
  40b6c1:	mov    rsi,rbx
  40b6c4:	mov    rdx,r14
  40b6c7:	lea    rcx,[rip+0x35cb2]        # 441380 <__data_start@@Base+0x2d0>
  40b6ce:	lea    r8,[rsp+0x14]
  40b6d3:	call   4125d0 <main@@Base+0xb7b0>
  40b6d8:	cmp    rax,rbx
  40b6db:	je     40f1d2 <main@@Base+0x83b2>
  40b6e1:	cmp    rax,r14
  40b6e4:	je     40f1d2 <main@@Base+0x83b2>
  40b6ea:	movzx  ecx,BYTE PTR [rsp+0x14]
  40b6ef:	mov    BYTE PTR [r13+0x18],cl
  40b6f3:	jmp    40ba1a <main@@Base+0x4bfa>
  40b6f8:	mov    rdi,QWORD PTR [rsp+0x8]
  40b6fd:	mov    rsi,rbx
  40b700:	mov    rdx,r14
  40b703:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b708:	mov    rbx,rax
  40b70b:	cmp    r15,rbx
  40b70e:	je     40ba07 <main@@Base+0x4be7>
  40b714:	mov    QWORD PTR [rsp+0x20],0x0
  40b71d:	mov    r15,QWORD PTR [rsp+0x8]
  40b722:	mov    rdi,r15
  40b725:	mov    rsi,rbx
  40b728:	mov    rdx,r14
  40b72b:	lea    rcx,[rsp+0x20]
  40b730:	call   424860 <flatcc_json_parser_double@@Base>
  40b735:	cmp    rbx,rax
  40b738:	jne    40b766 <main@@Base+0x4946>
  40b73a:	mov    rdi,r15
  40b73d:	mov    rsi,rbx
  40b740:	mov    rdx,r14
  40b743:	lea    rcx,[rip+0x35c56]        # 4413a0 <__data_start@@Base+0x2f0>
  40b74a:	lea    r8,[rsp+0x20]
  40b74f:	call   414bd0 <main@@Base+0xddb0>
  40b754:	cmp    rax,rbx
  40b757:	je     40f1d2 <main@@Base+0x83b2>
  40b75d:	cmp    rax,r14
  40b760:	je     40f1d2 <main@@Base+0x83b2>
  40b766:	mov    rcx,QWORD PTR [rsp+0x20]
  40b76b:	mov    QWORD PTR [r13+0x10],rcx
  40b76f:	jmp    40ba1a <main@@Base+0x4bfa>
  40b774:	mov    rdi,QWORD PTR [rsp+0x8]
  40b779:	mov    rdx,r14
  40b77c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b781:	mov    rsi,rax
  40b784:	cmp    rsi,r14
  40b787:	je     40b834 <main@@Base+0x4a14>
  40b78d:	cmp    BYTE PTR [rsi],0x3a
  40b790:	jne    40b834 <main@@Base+0x4a14>
  40b796:	lea    rbx,[rsi+0x1]
  40b79a:	mov    rax,r14
  40b79d:	sub    rax,rbx
  40b7a0:	cmp    rax,0x2
  40b7a4:	jl     40b910 <main@@Base+0x4af0>
  40b7aa:	cmp    BYTE PTR [rbx],0x20
  40b7ad:	jg     40b923 <main@@Base+0x4b03>
  40b7b3:	jne    40b910 <main@@Base+0x4af0>
  40b7b9:	cmp    BYTE PTR [rsi+0x2],0x20
  40b7bd:	jle    40b910 <main@@Base+0x4af0>
  40b7c3:	add    rsi,0x2
  40b7c7:	mov    rbx,rsi
  40b7ca:	cmp    r15,rbx
  40b7cd:	jne    40b92c <main@@Base+0x4b0c>
  40b7d3:	jmp    40ba07 <main@@Base+0x4be7>
  40b7d8:	mov    rdi,QWORD PTR [rsp+0x8]
  40b7dd:	mov    rdx,r14
  40b7e0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b7e5:	mov    rsi,rax
  40b7e8:	cmp    rsi,r14
  40b7eb:	je     40b84b <main@@Base+0x4a2b>
  40b7ed:	cmp    BYTE PTR [rsi],0x3a
  40b7f0:	jne    40b84b <main@@Base+0x4a2b>
  40b7f2:	lea    rbx,[rsi+0x1]
  40b7f6:	mov    rax,r14
  40b7f9:	sub    rax,rbx
  40b7fc:	cmp    rax,0x2
  40b800:	jl     40b98f <main@@Base+0x4b6f>
  40b806:	cmp    BYTE PTR [rbx],0x20
  40b809:	jg     40b9a2 <main@@Base+0x4b82>
  40b80f:	jne    40b98f <main@@Base+0x4b6f>
  40b815:	cmp    BYTE PTR [rsi+0x2],0x20
  40b819:	jle    40b98f <main@@Base+0x4b6f>
  40b81f:	add    rsi,0x2
  40b823:	mov    rbx,rsi
  40b826:	cmp    r15,rbx
  40b829:	jne    40b9a7 <main@@Base+0x4b87>
  40b82f:	jmp    40ba07 <main@@Base+0x4be7>
  40b834:	mov    ecx,0x4
  40b839:	mov    rdi,QWORD PTR [rsp+0x8]
  40b83e:	mov    rdx,r14
  40b841:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b846:	jmp    40b920 <main@@Base+0x4b00>
  40b84b:	mov    ecx,0x4
  40b850:	mov    rdi,QWORD PTR [rsp+0x8]
  40b855:	mov    rdx,r14
  40b858:	call   423620 <flatcc_json_parser_set_error@@Base>
  40b85d:	jmp    40b99f <main@@Base+0x4b7f>
  40b862:	mov    rdi,QWORD PTR [rsp+0x8]
  40b867:	mov    rsi,rax
  40b86a:	mov    rdx,r14
  40b86d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b872:	cmp    r15,rax
  40b875:	je     40ba07 <main@@Base+0x4be7>
  40b87b:	mov    r15,QWORD PTR [rsp+0x8]
  40b880:	mov    rdi,r15
  40b883:	mov    rsi,rax
  40b886:	mov    rdx,r14
  40b889:	mov    rcx,r12
  40b88c:	call   412ab0 <main@@Base+0xbc90>
  40b891:	jmp    40ba1a <main@@Base+0x4bfa>
  40b896:	mov    rdi,QWORD PTR [rsp+0x8]
  40b89b:	mov    rsi,rbx
  40b89e:	mov    rdx,r14
  40b8a1:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b8a6:	mov    rbx,rax
  40b8a9:	cmp    r15,rbx
  40b8ac:	je     40ba07 <main@@Base+0x4be7>
  40b8b2:	mov    DWORD PTR [rsp+0x20],0x0
  40b8ba:	mov    r15,QWORD PTR [rsp+0x8]
  40b8bf:	mov    rdi,r15
  40b8c2:	mov    rsi,rbx
  40b8c5:	mov    rdx,r14
  40b8c8:	lea    rcx,[rsp+0x20]
  40b8cd:	call   425040 <flatcc_json_parser_float@@Base>
  40b8d2:	cmp    rbx,rax
  40b8d5:	jne    40b903 <main@@Base+0x4ae3>
  40b8d7:	mov    rdi,r15
  40b8da:	mov    rsi,rbx
  40b8dd:	mov    rdx,r14
  40b8e0:	lea    rcx,[rip+0x35ad9]        # 4413c0 <__data_start@@Base+0x310>
  40b8e7:	lea    r8,[rsp+0x20]
  40b8ec:	call   4143b0 <main@@Base+0xd590>
  40b8f1:	cmp    rax,rbx
  40b8f4:	je     40f1d2 <main@@Base+0x83b2>
  40b8fa:	cmp    rax,r14
  40b8fd:	je     40f1d2 <main@@Base+0x83b2>
  40b903:	mov    ecx,DWORD PTR [rsp+0x20]
  40b907:	mov    DWORD PTR [r13+0x0],ecx
  40b90b:	jmp    40ba1a <main@@Base+0x4bfa>
  40b910:	mov    rdi,QWORD PTR [rsp+0x8]
  40b915:	mov    rsi,rbx
  40b918:	mov    rdx,r14
  40b91b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b920:	mov    rbx,rax
  40b923:	cmp    r15,rbx
  40b926:	je     40ba07 <main@@Base+0x4be7>
  40b92c:	mov    DWORD PTR [rsp+0x20],0x0
  40b934:	mov    r15,QWORD PTR [rsp+0x8]
  40b939:	mov    rdi,r15
  40b93c:	mov    rsi,rbx
  40b93f:	mov    rdx,r14
  40b942:	lea    rcx,[rsp+0x20]
  40b947:	call   425040 <flatcc_json_parser_float@@Base>
  40b94c:	cmp    rbx,rax
  40b94f:	jne    40b982 <main@@Base+0x4b62>
  40b951:	mov    rdi,r15
  40b954:	mov    rsi,rbx
  40b957:	mov    rdx,r14
  40b95a:	lea    rcx,[rip+0x35a7f]        # 4413e0 <__data_start@@Base+0x330>
  40b961:	lea    r8,[rsp+0x20]
  40b966:	call   4143b0 <main@@Base+0xd590>
  40b96b:	cmp    rax,rbx
  40b96e:	je     40f1d2 <main@@Base+0x83b2>
  40b974:	cmp    rax,r14
  40b977:	je     40f1d2 <main@@Base+0x83b2>
  40b97d:	mov    r15,QWORD PTR [rsp+0x8]
  40b982:	mov    ecx,DWORD PTR [rsp+0x20]
  40b986:	mov    DWORD PTR [r13+0x8],ecx
  40b98a:	jmp    40ba1a <main@@Base+0x4bfa>
  40b98f:	mov    rdi,QWORD PTR [rsp+0x8]
  40b994:	mov    rsi,rbx
  40b997:	mov    rdx,r14
  40b99a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40b99f:	mov    rbx,rax
  40b9a2:	cmp    r15,rbx
  40b9a5:	je     40ba07 <main@@Base+0x4be7>
  40b9a7:	mov    DWORD PTR [rsp+0x20],0x0
  40b9af:	mov    r15,QWORD PTR [rsp+0x8]
  40b9b4:	mov    rdi,r15
  40b9b7:	mov    rsi,rbx
  40b9ba:	mov    rdx,r14
  40b9bd:	lea    rcx,[rsp+0x20]
  40b9c2:	call   425040 <flatcc_json_parser_float@@Base>
  40b9c7:	cmp    rbx,rax
  40b9ca:	jne    40b9fd <main@@Base+0x4bdd>
  40b9cc:	mov    rdi,r15
  40b9cf:	mov    rsi,rbx
  40b9d2:	mov    rdx,r14
  40b9d5:	lea    rcx,[rip+0x35a24]        # 441400 <__data_start@@Base+0x350>
  40b9dc:	lea    r8,[rsp+0x20]
  40b9e1:	call   4143b0 <main@@Base+0xd590>
  40b9e6:	cmp    rax,rbx
  40b9e9:	je     40f1d2 <main@@Base+0x83b2>
  40b9ef:	cmp    rax,r14
  40b9f2:	je     40f1d2 <main@@Base+0x83b2>
  40b9f8:	mov    r15,QWORD PTR [rsp+0x8]
  40b9fd:	mov    ecx,DWORD PTR [rsp+0x20]
  40ba01:	mov    DWORD PTR [r13+0x4],ecx
  40ba05:	jmp    40ba1a <main@@Base+0x4bfa>
  40ba07:	mov    rdi,QWORD PTR [rsp+0x8]
  40ba0c:	mov    rsi,r15
  40ba0f:	mov    r15,rdi
  40ba12:	mov    rdx,r14
  40ba15:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40ba1a:	mov    rcx,r14
  40ba1d:	sub    rcx,rax
  40ba20:	cmp    rcx,0x2
  40ba24:	jl     40ba41 <main@@Base+0x4c21>
  40ba26:	cmp    BYTE PTR [rax],0x20
  40ba29:	jg     40ba4f <main@@Base+0x4c2f>
  40ba2b:	jne    40ba41 <main@@Base+0x4c21>
  40ba2d:	cmp    BYTE PTR [rax+0x1],0x20
  40ba31:	jle    40ba41 <main@@Base+0x4c21>
  40ba33:	add    rax,0x1
  40ba37:	cmp    rax,r14
  40ba3a:	jne    40ba58 <main@@Base+0x4c38>
  40ba3c:	jmp    40c11d <main@@Base+0x52fd>
  40ba41:	mov    rdi,r15
  40ba44:	mov    rsi,rax
  40ba47:	mov    rdx,r14
  40ba4a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ba4f:	cmp    rax,r14
  40ba52:	je     40c11d <main@@Base+0x52fd>
  40ba58:	movzx  ecx,BYTE PTR [rax]
  40ba5b:	cmp    cl,0x2c
  40ba5e:	jne    40c18b <main@@Base+0x536b>
  40ba64:	lea    rsi,[rax+0x1]
  40ba68:	mov    rcx,r14
  40ba6b:	sub    rcx,rsi
  40ba6e:	cmp    rcx,0x2
  40ba72:	jl     40ba87 <main@@Base+0x4c67>
  40ba74:	cmp    BYTE PTR [rsi],0x20
  40ba77:	jg     40ba95 <main@@Base+0x4c75>
  40ba79:	jne    40ba87 <main@@Base+0x4c67>
  40ba7b:	cmp    BYTE PTR [rax+0x2],0x20
  40ba7f:	jle    40ba87 <main@@Base+0x4c67>
  40ba81:	add    rax,0x2
  40ba85:	jmp    40ba92 <main@@Base+0x4c72>
  40ba87:	mov    rdi,r15
  40ba8a:	mov    rdx,r14
  40ba8d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ba92:	mov    rsi,rax
  40ba95:	cmp    rsi,r14
  40ba98:	je     40c418 <main@@Base+0x55f8>
  40ba9e:	cmp    BYTE PTR [rsi],0x7d
  40baa1:	jne    40b080 <main@@Base+0x4260>
  40baa7:	lea    r13,[rsi+0x1]
  40baab:	mov    rax,r14
  40baae:	sub    rax,r13
  40bab1:	cmp    rax,0x2
  40bab5:	mov    rbp,QWORD PTR [rsp+0x18]
  40baba:	movabs r12,0x7465737400000000
  40bac4:	jl     40bae5 <main@@Base+0x4cc5>
  40bac6:	cmp    BYTE PTR [r13+0x0],0x20
  40bacb:	jg     40e989 <main@@Base+0x7b69>
  40bad1:	jne    40bae5 <main@@Base+0x4cc5>
  40bad3:	cmp    BYTE PTR [rsi+0x2],0x20
  40bad7:	jle    40bae5 <main@@Base+0x4cc5>
  40bad9:	add    rsi,0x2
  40badd:	mov    r13,rsi
  40bae0:	jmp    40e989 <main@@Base+0x7b69>
  40bae5:	mov    rdi,r15
  40bae8:	mov    rsi,r13
  40baeb:	mov    rdx,r14
  40baee:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40baf3:	mov    r13,rax
  40baf6:	jmp    40e989 <main@@Base+0x7b69>
  40bafb:	mov    rdi,r15
  40bafe:	mov    rsi,rbx
  40bb01:	mov    rdx,r14
  40bb04:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bb09:	mov    rbx,rax
  40bb0c:	cmp    r13,rbx
  40bb0f:	je     40a5ab <main@@Base+0x378b>
  40bb15:	mov    DWORD PTR [rsp+0x20],0x0
  40bb1d:	mov    rdi,r15
  40bb20:	mov    rsi,rbx
  40bb23:	mov    rdx,r14
  40bb26:	lea    rcx,[rsp+0x20]
  40bb2b:	call   425040 <flatcc_json_parser_float@@Base>
  40bb30:	mov    r13,rax
  40bb33:	cmp    rbx,rax
  40bb36:	mov    rbp,QWORD PTR [rsp+0x18]
  40bb3b:	jne    40bb6c <main@@Base+0x4d4c>
  40bb3d:	mov    rdi,r15
  40bb40:	mov    rsi,rbx
  40bb43:	mov    rdx,r14
  40bb46:	lea    rcx,[rip+0x35673]        # 4411c0 <__data_start@@Base+0x110>
  40bb4d:	lea    r8,[rsp+0x20]
  40bb52:	call   4143b0 <main@@Base+0xd590>
  40bb57:	mov    r13,rax
  40bb5a:	cmp    rax,rbx
  40bb5d:	je     41078b <main@@Base+0x996b>
  40bb63:	cmp    r13,r14
  40bb66:	je     41078b <main@@Base+0x996b>
  40bb6c:	vmovss xmm0,DWORD PTR [rsp+0x20]
  40bb72:	vucomiss xmm0,DWORD PTR [rip+0x2748e]        # 433008 <_IO_stdin_used@@Base+0x8>
  40bb7a:	jne    40bb89 <main@@Base+0x4d69>
  40bb7c:	jp     40bb89 <main@@Base+0x4d69>
  40bb7e:	test   BYTE PTR [r15+0x10],0x2
  40bb83:	je     40e989 <main@@Base+0x7b69>
  40bb89:	mov    rdi,QWORD PTR [r15]
  40bb8c:	mov    esi,0x1a
  40bb91:	jmp    40c616 <main@@Base+0x57f6>
  40bb96:	mov    ecx,0x9
  40bb9b:	mov    rdi,r15
  40bb9e:	mov    rsi,rax
  40bba1:	mov    rdx,r14
  40bba4:	call   423620 <flatcc_json_parser_set_error@@Base>
  40bba9:	mov    r13,rax
  40bbac:	jmp    409581 <main@@Base+0x2761>
  40bbb1:	mov    rdi,QWORD PTR [rsp+0x8]
  40bbb6:	mov    rdx,r14
  40bbb9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bbbe:	mov    rsi,rax
  40bbc1:	cmp    rsi,r14
  40bbc4:	je     40bc0f <main@@Base+0x4def>
  40bbc6:	cmp    BYTE PTR [rsi],0x3a
  40bbc9:	jne    40bc0f <main@@Base+0x4def>
  40bbcb:	lea    r12,[rsi+0x1]
  40bbcf:	mov    rax,r14
  40bbd2:	sub    rax,r12
  40bbd5:	cmp    rax,0x2
  40bbd9:	jl     40d06b <main@@Base+0x624b>
  40bbdf:	cmp    BYTE PTR [r12],0x20
  40bbe4:	jg     40d07e <main@@Base+0x625e>
  40bbea:	jne    40d06b <main@@Base+0x624b>
  40bbf0:	cmp    BYTE PTR [rsi+0x2],0x20
  40bbf4:	jle    40d06b <main@@Base+0x624b>
  40bbfa:	add    rsi,0x2
  40bbfe:	mov    r12,rsi
  40bc01:	cmp    r15,r12
  40bc04:	jne    40d087 <main@@Base+0x6267>
  40bc0a:	jmp    40d3da <main@@Base+0x65ba>
  40bc0f:	mov    ecx,0x4
  40bc14:	mov    rdi,QWORD PTR [rsp+0x8]
  40bc19:	mov    rdx,r14
  40bc1c:	call   423620 <flatcc_json_parser_set_error@@Base>
  40bc21:	jmp    40d07b <main@@Base+0x625b>
  40bc26:	mov    rdi,QWORD PTR [rsp+0x8]
  40bc2b:	mov    rsi,rbx
  40bc2e:	mov    rdx,r14
  40bc31:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bc36:	mov    rbx,rax
  40bc39:	cmp    r15,rbx
  40bc3c:	je     4098c4 <main@@Base+0x2aa4>
  40bc42:	mov    QWORD PTR [rsp+0x20],0x0
  40bc4b:	mov    DWORD PTR [rsp+0x30],0x0
  40bc53:	mov    DWORD PTR [rsp+0x14],0x0
  40bc5b:	xor    r12d,r12d
  40bc5e:	cmp    rbx,r14
  40bc61:	je     40bcc0 <main@@Base+0x4ea0>
  40bc63:	mov    r15,QWORD PTR [rsp+0x8]
  40bc68:	mov    rdi,r15
  40bc6b:	mov    rsi,rbx
  40bc6e:	mov    rdx,r14
  40bc71:	lea    rcx,[rsp+0x30]
  40bc76:	lea    r8,[rsp+0x20]
  40bc7b:	call   425160 <flatcc_json_parser_integer@@Base>
  40bc80:	cmp    rax,rbx
  40bc83:	mov    rbp,QWORD PTR [rsp+0x18]
  40bc88:	je     40c07e <main@@Base+0x525e>
  40bc8e:	mov    r13,rax
  40bc91:	mov    rax,QWORD PTR [rsp+0x20]
  40bc96:	cmp    DWORD PTR [rsp+0x30],0x0
  40bc9b:	je     40c946 <main@@Base+0x5b26>
  40bca1:	mov    ecx,0xffffffff
  40bca6:	lea    rcx,[rcx-0x7fffffff]
  40bcad:	cmp    rax,rcx
  40bcb0:	jbe    40ce5b <main@@Base+0x603b>
  40bcb6:	mov    ecx,0x8
  40bcbb:	jmp    40c957 <main@@Base+0x5b37>
  40bcc0:	mov    r13,r14
  40bcc3:	mov    r15,QWORD PTR [rsp+0x8]
  40bcc8:	mov    rbp,QWORD PTR [rsp+0x18]
  40bccd:	cmp    rbx,r13
  40bcd0:	jne    40ce9e <main@@Base+0x607e>
  40bcd6:	jmp    40ce6a <main@@Base+0x604a>
  40bcdb:	mov    r13,r14
  40bcde:	jmp    409cca <main@@Base+0x2eaa>
  40bce3:	mov    BYTE PTR [rsp+0x14],0x0
  40bce8:	lea    r13,[r12+0x5]
  40bced:	xor    ebx,ebx
  40bcef:	mov    rbp,QWORD PTR [rsp+0x18]
  40bcf4:	cmp    r12,r13
  40bcf7:	jne    40bd2c <main@@Base+0x4f0c>
  40bcf9:	mov    rdi,r15
  40bcfc:	mov    rsi,r12
  40bcff:	mov    rdx,r14
  40bd02:	lea    rcx,[rip+0x35497]        # 4411a0 <__data_start@@Base+0xf0>
  40bd09:	lea    r8,[rsp+0x14]
  40bd0e:	call   414220 <main@@Base+0xd400>
  40bd13:	mov    r13,rax
  40bd16:	cmp    rax,r12
  40bd19:	je     41078b <main@@Base+0x996b>
  40bd1f:	cmp    r13,r14
  40bd22:	je     41078b <main@@Base+0x996b>
  40bd28:	mov    bl,BYTE PTR [rsp+0x14]
  40bd2c:	cmp    bl,0x1
  40bd2f:	movabs r12,0x7465737400000000
  40bd39:	jne    40bd46 <main@@Base+0x4f26>
  40bd3b:	test   BYTE PTR [r15+0x10],0x2
  40bd40:	je     40e989 <main@@Base+0x7b69>
  40bd46:	mov    rdi,QWORD PTR [r15]
  40bd49:	mov    esi,0xf
  40bd4e:	mov    edx,0x1
  40bd53:	mov    ecx,0x1
  40bd58:	call   41fe80 <flatcc_builder_table_add@@Base>
  40bd5d:	test   rax,rax
  40bd60:	je     41078b <main@@Base+0x996b>
  40bd66:	mov    BYTE PTR [rax],bl
  40bd68:	jmp    40e989 <main@@Base+0x7b69>
  40bd6d:	cmp    cl,0x5d
  40bd70:	jne    40c893 <main@@Base+0x5a73>
  40bd76:	lea    r13,[rax+0x1]
  40bd7a:	mov    rcx,r14
  40bd7d:	sub    rcx,r13
  40bd80:	cmp    rcx,0x2
  40bd84:	jl     40bd97 <main@@Base+0x4f77>
  40bd86:	cmp    BYTE PTR [r13+0x0],0x20
  40bd8b:	jg     409cca <main@@Base+0x2eaa>
  40bd91:	je     409d31 <main@@Base+0x2f11>
  40bd97:	mov    rdi,r15
  40bd9a:	mov    rsi,r13
  40bd9d:	mov    rdx,r14
  40bda0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bda5:	mov    r13,rax
  40bda8:	jmp    409cca <main@@Base+0x2eaa>
  40bdad:	mov    ecx,0x9
  40bdb2:	mov    rdi,r15
  40bdb5:	mov    rsi,r14
  40bdb8:	mov    rdx,r14
  40bdbb:	call   423620 <flatcc_json_parser_set_error@@Base>
  40bdc0:	mov    r13,rax
  40bdc3:	jmp    409cc0 <main@@Base+0x2ea0>
  40bdc8:	test   al,al
  40bdca:	setne  bl
  40bdcd:	jmp    40a9da <main@@Base+0x3bba>
  40bdd2:	lea    r13,[r12+0x1]
  40bdd7:	mov    rax,r14
  40bdda:	sub    rax,r13
  40bddd:	cmp    rax,0x2
  40bde1:	jl     40c428 <main@@Base+0x5608>
  40bde7:	cmp    BYTE PTR [r13+0x0],0x20
  40bdec:	jg     409cc0 <main@@Base+0x2ea0>
  40bdf2:	jne    40c428 <main@@Base+0x5608>
  40bdf8:	cmp    BYTE PTR [r12+0x2],0x20
  40bdfe:	jle    40c428 <main@@Base+0x5608>
  40be04:	add    r12,0x2
  40be08:	mov    r13,r12
  40be0b:	jmp    409cc0 <main@@Base+0x2ea0>
  40be10:	mov    rdi,QWORD PTR [rsp+0x8]
  40be15:	mov    rsi,rax
  40be18:	mov    rdx,r14
  40be1b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40be20:	cmp    r15,rax
  40be23:	je     40e96e <main@@Base+0x7b4e>
  40be29:	mov    r9,QWORD PTR [rsp+0x48]
  40be2e:	mov    ecx,0x0
  40be33:	mov    r8d,0x8
  40be39:	mov    r15,QWORD PTR [rsp+0x8]
  40be3e:	mov    rdi,r15
  40be41:	mov    rsi,rax
  40be44:	mov    rdx,r14
  40be47:	lea    rax,[rip+0x72f2]        # 413140 <main@@Base+0xc320>
  40be4e:	push   rax
  40be4f:	lea    rax,[rip+0x3530a]        # 441160 <__data_start@@Base+0xb0>
  40be56:	push   rax
  40be57:	call   425ae0 <flatcc_json_parser_union_type@@Base>
  40be5c:	add    rsp,0x10
  40be60:	jmp    40e981 <main@@Base+0x7b61>
  40be65:	mov    rdi,r15
  40be68:	mov    rsi,rax
  40be6b:	mov    rdx,r14
  40be6e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40be73:	mov    r12,r14
  40be76:	cmp    rax,r14
  40be79:	je     40cc64 <main@@Base+0x5e44>
  40be7f:	cmp    BYTE PTR [rax],0x5d
  40be82:	jne    40cc61 <main@@Base+0x5e41>
  40be88:	lea    r13,[rax+0x1]
  40be8c:	mov    rcx,r14
  40be8f:	sub    rcx,r13
  40be92:	cmp    rcx,0x2
  40be96:	jl     40fec3 <main@@Base+0x90a3>
  40be9c:	cmp    BYTE PTR [r13+0x0],0x20
  40bea1:	jg     40e23c <main@@Base+0x741c>
  40bea7:	mov    r15,QWORD PTR [rsp+0x8]
  40beac:	jne    40fec3 <main@@Base+0x90a3>
  40beb2:	cmp    BYTE PTR [rax+0x2],0x20
  40beb6:	jle    40fec3 <main@@Base+0x90a3>
  40bebc:	add    rax,0x2
  40bec0:	jmp    40aa87 <main@@Base+0x3c67>
  40bec5:	mov    rdi,QWORD PTR [rsp+0x8]
  40beca:	mov    rdx,r14
  40becd:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bed2:	mov    rsi,rax
  40bed5:	cmp    rsi,r14
  40bed8:	je     40bf23 <main@@Base+0x5103>
  40beda:	cmp    BYTE PTR [rsi],0x3a
  40bedd:	jne    40bf23 <main@@Base+0x5103>
  40bedf:	lea    r12,[rsi+0x1]
  40bee3:	mov    rax,r14
  40bee6:	sub    rax,r12
  40bee9:	cmp    rax,0x2
  40beed:	jl     40d1ab <main@@Base+0x638b>
  40bef3:	cmp    BYTE PTR [r12],0x20
  40bef8:	jg     40d1be <main@@Base+0x639e>
  40befe:	jne    40d1ab <main@@Base+0x638b>
  40bf04:	cmp    BYTE PTR [rsi+0x2],0x20
  40bf08:	jle    40d1ab <main@@Base+0x638b>
  40bf0e:	add    rsi,0x2
  40bf12:	mov    r12,rsi
  40bf15:	cmp    r15,r12
  40bf18:	jne    40d1c7 <main@@Base+0x63a7>
  40bf1e:	jmp    40d3da <main@@Base+0x65ba>
  40bf23:	mov    ecx,0x4
  40bf28:	mov    rdi,QWORD PTR [rsp+0x8]
  40bf2d:	mov    rdx,r14
  40bf30:	call   423620 <flatcc_json_parser_set_error@@Base>
  40bf35:	jmp    40d1bb <main@@Base+0x639b>
  40bf3a:	mov    rdi,QWORD PTR [rsp+0x8]
  40bf3f:	mov    rdx,r14
  40bf42:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bf47:	mov    rsi,rax
  40bf4a:	cmp    rsi,r14
  40bf4d:	je     40bffe <main@@Base+0x51de>
  40bf53:	cmp    BYTE PTR [rsi],0x3a
  40bf56:	jne    40bffe <main@@Base+0x51de>
  40bf5c:	lea    r12,[rsi+0x1]
  40bf60:	mov    rax,r14
  40bf63:	sub    rax,r12
  40bf66:	cmp    rax,0x2
  40bf6a:	jl     40d279 <main@@Base+0x6459>
  40bf70:	cmp    BYTE PTR [r12],0x20
  40bf75:	jg     40d28c <main@@Base+0x646c>
  40bf7b:	jne    40d279 <main@@Base+0x6459>
  40bf81:	cmp    BYTE PTR [rsi+0x2],0x20
  40bf85:	jle    40d279 <main@@Base+0x6459>
  40bf8b:	add    rsi,0x2
  40bf8f:	mov    r12,rsi
  40bf92:	cmp    r15,r12
  40bf95:	jne    40d295 <main@@Base+0x6475>
  40bf9b:	jmp    40d3da <main@@Base+0x65ba>
  40bfa0:	mov    rdi,QWORD PTR [rsp+0x8]
  40bfa5:	mov    rdx,r14
  40bfa8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40bfad:	mov    rsi,rax
  40bfb0:	cmp    rsi,r14
  40bfb3:	je     40c015 <main@@Base+0x51f5>
  40bfb5:	cmp    BYTE PTR [rsi],0x3a
  40bfb8:	jne    40c015 <main@@Base+0x51f5>
  40bfba:	lea    r12,[rsi+0x1]
  40bfbe:	mov    rax,r14
  40bfc1:	sub    rax,r12
  40bfc4:	cmp    rax,0x2
  40bfc8:	jl     40d356 <main@@Base+0x6536>
  40bfce:	cmp    BYTE PTR [r12],0x20
  40bfd3:	jg     40d369 <main@@Base+0x6549>
  40bfd9:	jne    40d356 <main@@Base+0x6536>
  40bfdf:	cmp    BYTE PTR [rsi+0x2],0x20
  40bfe3:	jle    40d356 <main@@Base+0x6536>
  40bfe9:	add    rsi,0x2
  40bfed:	mov    r12,rsi
  40bff0:	cmp    r15,r12
  40bff3:	jne    40d36e <main@@Base+0x654e>
  40bff9:	jmp    40d3da <main@@Base+0x65ba>
  40bffe:	mov    ecx,0x4
  40c003:	mov    rdi,QWORD PTR [rsp+0x8]
  40c008:	mov    rdx,r14
  40c00b:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c010:	jmp    40d289 <main@@Base+0x6469>
  40c015:	mov    ecx,0x4
  40c01a:	mov    rdi,QWORD PTR [rsp+0x8]
  40c01f:	mov    rdx,r14
  40c022:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c027:	jmp    40d366 <main@@Base+0x6546>
  40c02c:	mov    r13,r14
  40c02f:	jmp    40a6cd <main@@Base+0x38ad>
  40c034:	cmp    cl,0x5d
  40c037:	jne    40cf10 <main@@Base+0x60f0>
  40c03d:	lea    r13,[rax+0x1]
  40c041:	mov    rcx,r14
  40c044:	sub    rcx,r13
  40c047:	cmp    rcx,0x2
  40c04b:	jl     40e715 <main@@Base+0x78f5>
  40c051:	cmp    BYTE PTR [r13+0x0],0x20
  40c056:	jle    40e6fb <main@@Base+0x78db>
  40c05c:	mov    r15,QWORD PTR [rsp+0x8]
  40c061:	jmp    40a6be <main@@Base+0x389e>
  40c066:	mov    ecx,0x9
  40c06b:	mov    rdi,r15
  40c06e:	mov    rsi,r14
  40c071:	mov    rdx,r14
  40c074:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c079:	jmp    40c93e <main@@Base+0x5b1e>
  40c07e:	mov    r13,rbx
  40c081:	cmp    rbx,r13
  40c084:	jne    40ce9e <main@@Base+0x607e>
  40c08a:	jmp    40ce6a <main@@Base+0x604a>
  40c08f:	mov    rdi,QWORD PTR [rsp+0x8]
  40c094:	mov    rsi,r12
  40c097:	mov    rdx,r14
  40c09a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c09f:	mov    r12,rax
  40c0a2:	cmp    r15,r12
  40c0a5:	je     40d3da <main@@Base+0x65ba>
  40c0ab:	mov    DWORD PTR [rsp+0x2c],0x0
  40c0b3:	mov    r15,QWORD PTR [rsp+0x8]
  40c0b8:	mov    rdi,QWORD PTR [r15]
  40c0bb:	mov    esi,0x3
  40c0c0:	call   41eb00 <flatcc_builder_start_table@@Base>
  40c0c5:	test   eax,eax
  40c0c7:	jne    40c862 <main@@Base+0x5a42>
  40c0cd:	cmp    r12,r14
  40c0d0:	je     40c83b <main@@Base+0x5a1b>
  40c0d6:	cmp    BYTE PTR [r12],0x7b
  40c0db:	jne    40c83b <main@@Base+0x5a1b>
  40c0e1:	lea    rax,[r12+0x1]
  40c0e6:	mov    rcx,r14
  40c0e9:	sub    rcx,rax
  40c0ec:	cmp    rcx,0x2
  40c0f0:	jl     40df11 <main@@Base+0x70f1>
  40c0f6:	cmp    BYTE PTR [rax],0x20
  40c0f9:	jg     40df21 <main@@Base+0x7101>
  40c0ff:	jne    40df11 <main@@Base+0x70f1>
  40c105:	cmp    BYTE PTR [r12+0x2],0x20
  40c10b:	jle    40df11 <main@@Base+0x70f1>
  40c111:	add    r12,0x2
  40c115:	mov    rax,r12
  40c118:	jmp    40df21 <main@@Base+0x7101>
  40c11d:	mov    r13,r14
  40c120:	jmp    40d3f0 <main@@Base+0x65d0>
  40c125:	mov    rdi,QWORD PTR [rsp+0x8]
  40c12a:	mov    rdx,r14
  40c12d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c132:	mov    rsi,rax
  40c135:	cmp    rsi,r14
  40c138:	je     40c174 <main@@Base+0x5354>
  40c13a:	cmp    BYTE PTR [rsi],0x3a
  40c13d:	jne    40c174 <main@@Base+0x5354>
  40c13f:	lea    rbx,[rsi+0x1]
  40c143:	mov    rax,r14
  40c146:	sub    rax,rbx
  40c149:	cmp    rax,0x2
  40c14d:	jl     40ea3a <main@@Base+0x7c1a>
  40c153:	cmp    BYTE PTR [rbx],0x20
  40c156:	jle    40e944 <main@@Base+0x7b24>
  40c15c:	movabs r12,0x7465737400000000
  40c166:	cmp    r15,rbx
  40c169:	jne    40ea56 <main@@Base+0x7c36>
  40c16f:	jmp    40e96e <main@@Base+0x7b4e>
  40c174:	mov    ecx,0x4
  40c179:	mov    rdi,QWORD PTR [rsp+0x8]
  40c17e:	mov    rdx,r14
  40c181:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c186:	jmp    40ea4a <main@@Base+0x7c2a>
  40c18b:	cmp    cl,0x7d
  40c18e:	jne    40d05b <main@@Base+0x623b>
  40c194:	lea    r13,[rax+0x1]
  40c198:	mov    rcx,r14
  40c19b:	sub    rcx,r13
  40c19e:	cmp    rcx,0x2
  40c1a2:	jl     40e866 <main@@Base+0x7a46>
  40c1a8:	cmp    BYTE PTR [r13+0x0],0x20
  40c1ad:	jle    40e850 <main@@Base+0x7a30>
  40c1b3:	mov    r15,QWORD PTR [rsp+0x8]
  40c1b8:	jmp    40d3f0 <main@@Base+0x65d0>
  40c1bd:	mov    rdi,QWORD PTR [rsp+0x8]
  40c1c2:	mov    rsi,r12
  40c1c5:	mov    rdx,r14
  40c1c8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c1cd:	mov    r12,rax
  40c1d0:	cmp    r15,r12
  40c1d3:	je     40d3da <main@@Base+0x65ba>
  40c1d9:	mov    r15,QWORD PTR [rsp+0x8]
  40c1de:	mov    rdi,QWORD PTR [r15]
  40c1e1:	call   41e710 <flatcc_builder_start_offset_vector@@Base>
  40c1e6:	test   eax,eax
  40c1e8:	jne    407501 <main@@Base+0x6e1>
  40c1ee:	cmp    r12,r14
  40c1f1:	je     40c23b <main@@Base+0x541b>
  40c1f3:	cmp    BYTE PTR [r12],0x5b
  40c1f8:	jne    40c23b <main@@Base+0x541b>
  40c1fa:	lea    rax,[r12+0x1]
  40c1ff:	mov    rcx,r14
  40c202:	sub    rcx,rax
  40c205:	cmp    rcx,0x2
  40c209:	jl     40cb0c <main@@Base+0x5cec>
  40c20f:	cmp    BYTE PTR [rax],0x20
  40c212:	jg     40cb1a <main@@Base+0x5cfa>
  40c218:	mov    r15,QWORD PTR [rsp+0x8]
  40c21d:	jne    40cb0c <main@@Base+0x5cec>
  40c223:	cmp    BYTE PTR [r12+0x2],0x20
  40c229:	jle    40cb0c <main@@Base+0x5cec>
  40c22f:	add    r12,0x2
  40c233:	mov    rax,r12
  40c236:	jmp    40cb1a <main@@Base+0x5cfa>
  40c23b:	mov    ecx,0x16
  40c240:	mov    rdi,r15
  40c243:	mov    rsi,r12
  40c246:	mov    rdx,r14
  40c249:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c24e:	mov    r13,rax
  40c251:	mov    rdi,QWORD PTR [r15]
  40c254:	call   41e8d0 <flatcc_builder_end_offset_vector@@Base>
  40c259:	mov    DWORD PTR [rsp+0x2c],eax
  40c25d:	test   eax,eax
  40c25f:	mov    rbp,QWORD PTR [rsp+0x18]
  40c264:	movabs r12,0x7465737400000000
  40c26e:	je     41078b <main@@Base+0x996b>
  40c274:	mov    rdi,QWORD PTR [r15]
  40c277:	mov    esi,0x1c
  40c27c:	jmp    40a6e9 <main@@Base+0x38c9>
  40c281:	mov    rdi,QWORD PTR [rsp+0x8]
  40c286:	mov    rsi,r12
  40c289:	mov    rdx,r14
  40c28c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c291:	mov    r12,rax
  40c294:	cmp    r15,r12
  40c297:	je     40d3da <main@@Base+0x65ba>
  40c29d:	mov    r15,QWORD PTR [rsp+0x8]
  40c2a2:	mov    rdi,QWORD PTR [r15]
  40c2a5:	mov    esi,0x8
  40c2aa:	mov    edx,0x4
  40c2af:	mov    ecx,0x1fffffff
  40c2b4:	call   41e690 <flatcc_builder_start_vector@@Base>
  40c2b9:	test   eax,eax
  40c2bb:	jne    407501 <main@@Base+0x6e1>
  40c2c1:	cmp    r12,r14
  40c2c4:	je     40c30e <main@@Base+0x54ee>
  40c2c6:	cmp    BYTE PTR [r12],0x5b
  40c2cb:	jne    40c30e <main@@Base+0x54ee>
  40c2cd:	lea    rax,[r12+0x1]
  40c2d2:	mov    rcx,r14
  40c2d5:	sub    rcx,rax
  40c2d8:	cmp    rcx,0x2
  40c2dc:	jl     40cb6f <main@@Base+0x5d4f>
  40c2e2:	cmp    BYTE PTR [rax],0x20
  40c2e5:	jg     40cb7d <main@@Base+0x5d5d>
  40c2eb:	mov    r15,QWORD PTR [rsp+0x8]
  40c2f0:	jne    40cb6f <main@@Base+0x5d4f>
  40c2f6:	cmp    BYTE PTR [r12+0x2],0x20
  40c2fc:	jle    40cb6f <main@@Base+0x5d4f>
  40c302:	add    r12,0x2
  40c306:	mov    rax,r12
  40c309:	jmp    40cb7d <main@@Base+0x5d5d>
  40c30e:	mov    ecx,0x16
  40c313:	mov    rdi,r15
  40c316:	mov    rsi,r12
  40c319:	mov    rdx,r14
  40c31c:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c321:	mov    r13,rax
  40c324:	mov    rbp,QWORD PTR [rsp+0x18]
  40c329:	mov    rdi,QWORD PTR [r15]
  40c32c:	call   41f820 <flatcc_builder_end_vector@@Base>
  40c331:	mov    DWORD PTR [rsp+0x2c],eax
  40c335:	test   eax,eax
  40c337:	movabs r12,0x7465737400000000
  40c341:	je     41078b <main@@Base+0x996b>
  40c347:	mov    rdi,QWORD PTR [r15]
  40c34a:	mov    esi,0x1d
  40c34f:	jmp    40a6e9 <main@@Base+0x38c9>
  40c354:	mov    rdi,QWORD PTR [rsp+0x8]
  40c359:	mov    rsi,r12
  40c35c:	mov    rdx,r14
  40c35f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c364:	mov    r12,rax
  40c367:	cmp    r15,r12
  40c36a:	je     40d3da <main@@Base+0x65ba>
  40c370:	mov    r15,QWORD PTR [rsp+0x8]
  40c375:	mov    rdi,QWORD PTR [r15]
  40c378:	call   41e710 <flatcc_builder_start_offset_vector@@Base>
  40c37d:	test   eax,eax
  40c37f:	jne    407501 <main@@Base+0x6e1>
  40c385:	cmp    r12,r14
  40c388:	je     40c3d2 <main@@Base+0x55b2>
  40c38a:	cmp    BYTE PTR [r12],0x5b
  40c38f:	jne    40c3d2 <main@@Base+0x55b2>
  40c391:	lea    rax,[r12+0x1]
  40c396:	mov    rcx,r14
  40c399:	sub    rcx,rax
  40c39c:	cmp    rcx,0x2
  40c3a0:	jl     40cbd2 <main@@Base+0x5db2>
  40c3a6:	cmp    BYTE PTR [rax],0x20
  40c3a9:	jg     40cbe0 <main@@Base+0x5dc0>
  40c3af:	mov    r15,QWORD PTR [rsp+0x8]
  40c3b4:	jne    40cbd2 <main@@Base+0x5db2>
  40c3ba:	cmp    BYTE PTR [r12+0x2],0x20
  40c3c0:	jle    40cbd2 <main@@Base+0x5db2>
  40c3c6:	add    r12,0x2
  40c3ca:	mov    rax,r12
  40c3cd:	jmp    40cbe0 <main@@Base+0x5dc0>
  40c3d2:	mov    ecx,0x16
  40c3d7:	mov    rdi,r15
  40c3da:	mov    rsi,r12
  40c3dd:	mov    rdx,r14
  40c3e0:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c3e5:	mov    r13,rax
  40c3e8:	mov    rdi,QWORD PTR [r15]
  40c3eb:	call   41e8d0 <flatcc_builder_end_offset_vector@@Base>
  40c3f0:	mov    DWORD PTR [rsp+0x2c],eax
  40c3f4:	test   eax,eax
  40c3f6:	mov    rbp,QWORD PTR [rsp+0x18]
  40c3fb:	movabs r12,0x7465737400000000
  40c405:	je     41078b <main@@Base+0x996b>
  40c40b:	mov    rdi,QWORD PTR [r15]
  40c40e:	mov    esi,0xb
  40c413:	jmp    40a6e9 <main@@Base+0x38c9>
  40c418:	mov    ecx,0xa
  40c41d:	mov    rdi,r15
  40c420:	mov    rsi,r14
  40c423:	jmp    40b004 <main@@Base+0x41e4>
  40c428:	mov    rdi,r15
  40c42b:	mov    rsi,r13
  40c42e:	mov    rdx,r14
  40c431:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c436:	mov    r13,rax
  40c439:	jmp    409cc0 <main@@Base+0x2ea0>
  40c43e:	mov    rdi,r15
  40c441:	mov    rsi,rbx
  40c444:	mov    rdx,r14
  40c447:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c44c:	mov    rbx,rax
  40c44f:	cmp    r13,rbx
  40c452:	je     40a5ab <main@@Base+0x378b>
  40c458:	mov    QWORD PTR [rsp+0x20],0x0
  40c461:	mov    DWORD PTR [rsp+0x30],0x0
  40c469:	mov    WORD PTR [rsp+0x14],0x0
  40c470:	cmp    rbx,r14
  40c473:	je     40c4b6 <main@@Base+0x5696>
  40c475:	mov    rdi,r15
  40c478:	mov    rsi,rbx
  40c47b:	mov    rdx,r14
  40c47e:	lea    rcx,[rsp+0x30]
  40c483:	lea    r8,[rsp+0x20]
  40c488:	call   425160 <flatcc_json_parser_integer@@Base>
  40c48d:	cmp    rax,rbx
  40c490:	mov    rbp,QWORD PTR [rsp+0x18]
  40c495:	je     40c4c8 <main@@Base+0x56a8>
  40c497:	mov    r13,rax
  40c49a:	mov    r12,QWORD PTR [rsp+0x20]
  40c49f:	cmp    DWORD PTR [rsp+0x30],0x0
  40c4a4:	je     40c4d5 <main@@Base+0x56b5>
  40c4a6:	cmp    r12,0x8001
  40c4ad:	jb     40c4fe <main@@Base+0x56de>
  40c4af:	mov    ecx,0x8
  40c4b4:	jmp    40c4e3 <main@@Base+0x56c3>
  40c4b6:	xor    r12d,r12d
  40c4b9:	mov    r13,r14
  40c4bc:	mov    rbp,QWORD PTR [rsp+0x18]
  40c4c1:	cmp    rbx,r13
  40c4c4:	jne    40c541 <main@@Base+0x5721>
  40c4c6:	jmp    40c50c <main@@Base+0x56ec>
  40c4c8:	xor    r12d,r12d
  40c4cb:	mov    r13,rbx
  40c4ce:	cmp    rbx,r13
  40c4d1:	jne    40c541 <main@@Base+0x5721>
  40c4d3:	jmp    40c50c <main@@Base+0x56ec>
  40c4d5:	cmp    r12,0x8000
  40c4dc:	jb     40c501 <main@@Base+0x56e1>
  40c4de:	mov    ecx,0x7
  40c4e3:	mov    rdi,r15
  40c4e6:	mov    rsi,r13
  40c4e9:	mov    rdx,r14
  40c4ec:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c4f1:	mov    r13,rax
  40c4f4:	xor    r12d,r12d
  40c4f7:	cmp    rbx,r13
  40c4fa:	jne    40c541 <main@@Base+0x5721>
  40c4fc:	jmp    40c50c <main@@Base+0x56ec>
  40c4fe:	neg    r12
  40c501:	mov    WORD PTR [rsp+0x14],r12w
  40c507:	cmp    rbx,r13
  40c50a:	jne    40c541 <main@@Base+0x5721>
  40c50c:	mov    rdi,r15
  40c50f:	mov    rsi,rbx
  40c512:	mov    rdx,r14
  40c515:	lea    rcx,[rip+0x34c24]        # 441140 <__data_start@@Base+0x90>
  40c51c:	lea    r8,[rsp+0x14]
  40c521:	call   412910 <main@@Base+0xbaf0>
  40c526:	mov    r13,rax
  40c529:	cmp    rax,rbx
  40c52c:	je     4107b7 <main@@Base+0x9997>
  40c532:	cmp    r13,r14
  40c535:	je     4107b7 <main@@Base+0x9997>
  40c53b:	movzx  r12d,WORD PTR [rsp+0x14]
  40c541:	movzx  eax,r12w
  40c545:	cmp    eax,0x96
  40c54a:	jne    40c557 <main@@Base+0x5737>
  40c54c:	test   BYTE PTR [r15+0x10],0x2
  40c551:	je     40d3f5 <main@@Base+0x65d5>
  40c557:	mov    rdi,QWORD PTR [r15]
  40c55a:	mov    esi,0x1
  40c55f:	mov    edx,0x2
  40c564:	mov    ecx,0x2
  40c569:	call   41fe80 <flatcc_builder_table_add@@Base>
  40c56e:	test   rax,rax
  40c571:	je     4107b7 <main@@Base+0x9997>
  40c577:	mov    WORD PTR [rax],r12w
  40c57b:	jmp    40d3f5 <main@@Base+0x65d5>
  40c580:	mov    rdi,r15
  40c583:	mov    rsi,rbx
  40c586:	mov    rdx,r14
  40c589:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c58e:	mov    rbx,rax
  40c591:	cmp    r13,rbx
  40c594:	je     40a5ab <main@@Base+0x378b>
  40c59a:	mov    DWORD PTR [rsp+0x20],0x0
  40c5a2:	mov    rdi,r15
  40c5a5:	mov    rsi,rbx
  40c5a8:	mov    rdx,r14
  40c5ab:	lea    rcx,[rsp+0x20]
  40c5b0:	call   425040 <flatcc_json_parser_float@@Base>
  40c5b5:	mov    r13,rax
  40c5b8:	cmp    rbx,rax
  40c5bb:	mov    rbp,QWORD PTR [rsp+0x18]
  40c5c0:	jne    40c5f1 <main@@Base+0x57d1>
  40c5c2:	mov    rdi,r15
  40c5c5:	mov    rsi,rbx
  40c5c8:	mov    rdx,r14
  40c5cb:	lea    rcx,[rip+0x34c0e]        # 4411e0 <__data_start@@Base+0x130>
  40c5d2:	lea    r8,[rsp+0x20]
  40c5d7:	call   4143b0 <main@@Base+0xd590>
  40c5dc:	mov    r13,rax
  40c5df:	cmp    rax,rbx
  40c5e2:	je     41078b <main@@Base+0x996b>
  40c5e8:	cmp    r13,r14
  40c5eb:	je     41078b <main@@Base+0x996b>
  40c5f1:	vmovss xmm0,DWORD PTR [rsp+0x20]
  40c5f7:	vucomiss xmm0,DWORD PTR [rip+0x26a05]        # 433004 <_IO_stdin_used@@Base+0x4>
  40c5ff:	jne    40c60e <main@@Base+0x57ee>
  40c601:	jp     40c60e <main@@Base+0x57ee>
  40c603:	test   BYTE PTR [r15+0x10],0x2
  40c608:	je     40e989 <main@@Base+0x7b69>
  40c60e:	mov    rdi,QWORD PTR [r15]
  40c611:	mov    esi,0x19
  40c616:	mov    edx,0x4
  40c61b:	mov    ecx,0x4
  40c620:	call   41fe80 <flatcc_builder_table_add@@Base>
  40c625:	test   rax,rax
  40c628:	je     41078b <main@@Base+0x996b>
  40c62e:	mov    ecx,DWORD PTR [rsp+0x20]
  40c632:	mov    DWORD PTR [rax],ecx
  40c634:	jmp    40e989 <main@@Base+0x7b69>
  40c639:	mov    rdi,QWORD PTR [rsp+0x8]
  40c63e:	mov    rsi,rbx
  40c641:	mov    rdx,r14
  40c644:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c649:	mov    rbx,rax
  40c64c:	cmp    r15,rbx
  40c64f:	je     40a25a <main@@Base+0x343a>
  40c655:	mov    QWORD PTR [rsp+0x20],0x0
  40c65e:	mov    DWORD PTR [rsp+0x14],0x0
  40c666:	mov    QWORD PTR [rsp+0x30],0x0
  40c66f:	cmp    rbx,r14
  40c672:	je     40c6ca <main@@Base+0x58aa>
  40c674:	mov    r15,QWORD PTR [rsp+0x8]
  40c679:	mov    rdi,r15
  40c67c:	mov    rsi,rbx
  40c67f:	mov    rdx,r14
  40c682:	lea    rcx,[rsp+0x14]
  40c687:	lea    r8,[rsp+0x20]
  40c68c:	call   425160 <flatcc_json_parser_integer@@Base>
  40c691:	cmp    rax,rbx
  40c694:	je     40cf2b <main@@Base+0x610b>
  40c69a:	mov    r13,rax
  40c69d:	mov    r12,QWORD PTR [rsp+0x20]
  40c6a2:	cmp    DWORD PTR [rsp+0x14],0x0
  40c6a7:	je     40d432 <main@@Base+0x6612>
  40c6ad:	movabs rax,0x8000000000000000
  40c6b7:	cmp    r12,rax
  40c6ba:	jbe    40d4f3 <main@@Base+0x66d3>
  40c6c0:	mov    ecx,0x8
  40c6c5:	jmp    40d440 <main@@Base+0x6620>
  40c6ca:	xor    r12d,r12d
  40c6cd:	mov    r13,r14
  40c6d0:	mov    r15,QWORD PTR [rsp+0x8]
  40c6d5:	jmp    40d4fb <main@@Base+0x66db>
  40c6da:	mov    rdi,QWORD PTR [rsp+0x8]
  40c6df:	mov    rsi,r12
  40c6e2:	mov    rdx,r14
  40c6e5:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c6ea:	mov    r12,rax
  40c6ed:	cmp    r15,r12
  40c6f0:	je     40d3da <main@@Base+0x65ba>
  40c6f6:	mov    DWORD PTR [rsp+0x2c],0x0
  40c6fe:	mov    r15,QWORD PTR [rsp+0x8]
  40c703:	mov    rdi,QWORD PTR [r15]
  40c706:	mov    esi,0x3
  40c70b:	call   41eb00 <flatcc_builder_start_table@@Base>
  40c710:	test   eax,eax
  40c712:	jne    40e8d1 <main@@Base+0x7ab1>
  40c718:	cmp    r12,r14
  40c71b:	je     40cc35 <main@@Base+0x5e15>
  40c721:	cmp    BYTE PTR [r12],0x7b
  40c726:	jne    40cc35 <main@@Base+0x5e15>
  40c72c:	lea    rax,[r12+0x1]
  40c731:	mov    rcx,r14
  40c734:	sub    rcx,rax
  40c737:	cmp    rcx,0x2
  40c73b:	jl     40e52c <main@@Base+0x770c>
  40c741:	cmp    BYTE PTR [rax],0x20
  40c744:	jg     40e53c <main@@Base+0x771c>
  40c74a:	jne    40e52c <main@@Base+0x770c>
  40c750:	cmp    BYTE PTR [r12+0x2],0x20
  40c756:	jle    40e52c <main@@Base+0x770c>
  40c75c:	add    r12,0x2
  40c760:	mov    rax,r12
  40c763:	jmp    40e53c <main@@Base+0x771c>
  40c768:	mov    rdi,QWORD PTR [rsp+0x8]
  40c76d:	mov    rsi,r12
  40c770:	mov    rdx,r14
  40c773:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c778:	mov    r12,rax
  40c77b:	cmp    r15,r12
  40c77e:	je     40d3da <main@@Base+0x65ba>
  40c784:	mov    r15,QWORD PTR [rsp+0x8]
  40c789:	mov    rdi,QWORD PTR [r15]
  40c78c:	mov    esi,0x1
  40c791:	mov    edx,0x1
  40c796:	mov    ecx,0xffffffff
  40c79b:	call   41e690 <flatcc_builder_start_vector@@Base>
  40c7a0:	test   eax,eax
  40c7a2:	jne    407501 <main@@Base+0x6e1>
  40c7a8:	cmp    r12,r14
  40c7ab:	je     40c7f5 <main@@Base+0x59d5>
  40c7ad:	cmp    BYTE PTR [r12],0x5b
  40c7b2:	jne    40c7f5 <main@@Base+0x59d5>
  40c7b4:	lea    rax,[r12+0x1]
  40c7b9:	mov    rcx,r14
  40c7bc:	sub    rcx,rax
  40c7bf:	cmp    rcx,0x2
  40c7c3:	jl     40d12f <main@@Base+0x630f>
  40c7c9:	cmp    BYTE PTR [rax],0x20
  40c7cc:	jg     40d13d <main@@Base+0x631d>
  40c7d2:	mov    r15,QWORD PTR [rsp+0x8]
  40c7d7:	jne    40d12f <main@@Base+0x630f>
  40c7dd:	cmp    BYTE PTR [r12+0x2],0x20
  40c7e3:	jle    40d12f <main@@Base+0x630f>
  40c7e9:	add    r12,0x2
  40c7ed:	mov    rax,r12
  40c7f0:	jmp    40d13d <main@@Base+0x631d>
  40c7f5:	mov    ecx,0x16
  40c7fa:	mov    rdi,r15
  40c7fd:	mov    rsi,r12
  40c800:	mov    rdx,r14
  40c803:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c808:	mov    r13,rax
  40c80b:	mov    rdi,QWORD PTR [r15]
  40c80e:	call   41f820 <flatcc_builder_end_vector@@Base>
  40c813:	mov    DWORD PTR [rsp+0x2c],eax
  40c817:	test   eax,eax
  40c819:	mov    rbp,QWORD PTR [rsp+0x18]
  40c81e:	movabs r12,0x7465737400000000
  40c828:	je     41078b <main@@Base+0x996b>
  40c82e:	mov    rdi,QWORD PTR [r15]
  40c831:	mov    esi,0x5
  40c836:	jmp    40a6e9 <main@@Base+0x38c9>
  40c83b:	mov    ecx,0x15
  40c840:	mov    rdi,r15
  40c843:	mov    rsi,r12
  40c846:	mov    rdx,r14
  40c849:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c84e:	mov    r13,rax
  40c851:	mov    rax,QWORD PTR [rsp+0x38]
  40c856:	cmp    DWORD PTR [rax],0x0
  40c859:	je     40d192 <main@@Base+0x6372>
  40c85f:	mov    r12,r13
  40c862:	mov    ecx,0x21
  40c867:	mov    rdi,r15
  40c86a:	mov    rsi,r12
  40c86d:	mov    rdx,r14
  40c870:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c875:	mov    r13,rax
  40c878:	cmp    DWORD PTR [rsp+0x2c],0x0
  40c87d:	mov    r12,rax
  40c880:	je     407501 <main@@Base+0x6e1>
  40c886:	mov    rdi,QWORD PTR [r15]
  40c889:	mov    esi,0x23
  40c88e:	jmp    40e8fd <main@@Base+0x7add>
  40c893:	mov    ecx,0x9
  40c898:	mov    rdi,r15
  40c89b:	mov    rsi,rax
  40c89e:	mov    rdx,r14
  40c8a1:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c8a6:	mov    r13,rax
  40c8a9:	jmp    409cca <main@@Base+0x2eaa>
  40c8ae:	mov    rdi,r15
  40c8b1:	mov    rsi,r13
  40c8b4:	mov    rdx,r14
  40c8b7:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c8bc:	mov    r13,rax
  40c8bf:	cmp    r12,r13
  40c8c2:	je     40a4c6 <main@@Base+0x36a6>
  40c8c8:	mov    DWORD PTR [rsp+0x2c],0x0
  40c8d0:	mov    rdi,QWORD PTR [r15]
  40c8d3:	xor    esi,esi
  40c8d5:	call   41eb00 <flatcc_builder_start_table@@Base>
  40c8da:	test   eax,eax
  40c8dc:	jne    40cedf <main@@Base+0x60bf>
  40c8e2:	cmp    r13,r14
  40c8e5:	je     40cebb <main@@Base+0x609b>
  40c8eb:	cmp    BYTE PTR [r13+0x0],0x7b
  40c8f0:	jne    40cebb <main@@Base+0x609b>
  40c8f6:	lea    rax,[r13+0x1]
  40c8fa:	mov    rcx,r14
  40c8fd:	sub    rcx,rax
  40c900:	cmp    rcx,0x2
  40c904:	jl     40e591 <main@@Base+0x7771>
  40c90a:	cmp    BYTE PTR [rax],0x20
  40c90d:	jg     40e5a1 <main@@Base+0x7781>
  40c913:	jne    40e591 <main@@Base+0x7771>
  40c919:	cmp    BYTE PTR [r13+0x2],0x20
  40c91e:	jle    40e591 <main@@Base+0x7771>
  40c924:	add    r13,0x2
  40c928:	mov    rax,r13
  40c92b:	jmp    40e5a1 <main@@Base+0x7781>
  40c930:	mov    rdi,r15
  40c933:	mov    rsi,r13
  40c936:	mov    rdx,r14
  40c939:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c93e:	mov    r13,rax
  40c941:	jmp    40a6c3 <main@@Base+0x38a3>
  40c946:	test   rax,0xffffffff80000000
  40c94c:	je     40ce5e <main@@Base+0x603e>
  40c952:	mov    ecx,0x7
  40c957:	mov    rdi,r15
  40c95a:	mov    rsi,r13
  40c95d:	mov    rdx,r14
  40c960:	call   423620 <flatcc_json_parser_set_error@@Base>
  40c965:	mov    r13,rax
  40c968:	cmp    rbx,r13
  40c96b:	jne    40ce9e <main@@Base+0x607e>
  40c971:	jmp    40ce6a <main@@Base+0x604a>
  40c976:	mov    rdi,QWORD PTR [rsp+0x8]
  40c97b:	mov    rdx,r14
  40c97e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c983:	mov    rsi,rax
  40c986:	cmp    rsi,r14
  40c989:	je     40ca24 <main@@Base+0x5c04>
  40c98f:	cmp    BYTE PTR [rsi],0x3a
  40c992:	jne    40ca24 <main@@Base+0x5c04>
  40c998:	lea    rbx,[rsi+0x1]
  40c99c:	mov    rax,r14
  40c99f:	sub    rax,rbx
  40c9a2:	cmp    rax,0x2
  40c9a6:	jl     40e3f5 <main@@Base+0x75d5>
  40c9ac:	cmp    BYTE PTR [rbx],0x20
  40c9af:	jg     40e408 <main@@Base+0x75e8>
  40c9b5:	jne    40e3f5 <main@@Base+0x75d5>
  40c9bb:	cmp    BYTE PTR [rsi+0x2],0x20
  40c9bf:	jle    40e3f5 <main@@Base+0x75d5>
  40c9c5:	add    rsi,0x2
  40c9c9:	mov    rbx,rsi
  40c9cc:	jmp    40e408 <main@@Base+0x75e8>
  40c9d1:	mov    rdi,QWORD PTR [rsp+0x8]
  40c9d6:	mov    rdx,r14
  40c9d9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40c9de:	mov    rsi,rax
  40c9e1:	cmp    rsi,r14
  40c9e4:	je     40ca47 <main@@Base+0x5c27>
  40c9e6:	cmp    BYTE PTR [rsi],0x3a
  40c9e9:	jne    40ca47 <main@@Base+0x5c27>
  40c9eb:	lea    rbx,[rsi+0x1]
  40c9ef:	mov    rax,r14
  40c9f2:	sub    rax,rbx
  40c9f5:	cmp    rax,0x2
  40c9f9:	jl     40e47f <main@@Base+0x765f>
  40c9ff:	cmp    BYTE PTR [rbx],0x20
  40ca02:	jg     40e492 <main@@Base+0x7672>
  40ca08:	jne    40e47f <main@@Base+0x765f>
  40ca0e:	cmp    BYTE PTR [rsi+0x2],0x20
  40ca12:	jle    40e47f <main@@Base+0x765f>
  40ca18:	add    rsi,0x2
  40ca1c:	mov    rbx,rsi
  40ca1f:	jmp    40e492 <main@@Base+0x7672>
  40ca24:	mov    ecx,0x4
  40ca29:	mov    rdi,QWORD PTR [rsp+0x8]
  40ca2e:	mov    rdx,r14
  40ca31:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ca36:	mov    rbx,rax
  40ca39:	cmp    r15,rbx
  40ca3c:	jne    40e41b <main@@Base+0x75fb>
  40ca42:	jmp    40e96e <main@@Base+0x7b4e>
  40ca47:	mov    ecx,0x4
  40ca4c:	mov    rdi,QWORD PTR [rsp+0x8]
  40ca51:	mov    rdx,r14
  40ca54:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ca59:	mov    rbx,rax
  40ca5c:	cmp    r15,rbx
  40ca5f:	jne    40e4a5 <main@@Base+0x7685>
  40ca65:	jmp    40e96e <main@@Base+0x7b4e>
  40ca6a:	mov    rdi,QWORD PTR [rsp+0x8]
  40ca6f:	mov    rsi,rbx
  40ca72:	mov    rdx,r14
  40ca75:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ca7a:	mov    rbx,rax
  40ca7d:	cmp    r15,rbx
  40ca80:	je     40e96e <main@@Base+0x7b4e>
  40ca86:	mov    QWORD PTR [rsp+0x20],0x0
  40ca8f:	mov    DWORD PTR [rsp+0x30],0x0
  40ca97:	mov    DWORD PTR [rsp+0x14],0x0
  40ca9f:	xor    r12d,r12d
  40caa2:	cmp    rbx,r14
  40caa5:	je     40caff <main@@Base+0x5cdf>
  40caa7:	mov    r15,QWORD PTR [rsp+0x8]
  40caac:	mov    rdi,r15
  40caaf:	mov    rsi,rbx
  40cab2:	mov    rdx,r14
  40cab5:	lea    rcx,[rsp+0x30]
  40caba:	lea    r8,[rsp+0x20]
  40cabf:	call   425160 <flatcc_json_parser_integer@@Base>
  40cac4:	cmp    rax,rbx
  40cac7:	je     40d18a <main@@Base+0x636a>
  40cacd:	mov    r13,rax
  40cad0:	mov    rax,QWORD PTR [rsp+0x20]
  40cad5:	cmp    DWORD PTR [rsp+0x30],0x0
  40cada:	je     40deea <main@@Base+0x70ca>
  40cae0:	mov    ecx,0xffffffff
  40cae5:	lea    rcx,[rcx-0x7fffffff]
  40caec:	cmp    rax,rcx
  40caef:	jbe    40e192 <main@@Base+0x7372>
  40caf5:	mov    ecx,0x8
  40cafa:	jmp    40defb <main@@Base+0x70db>
  40caff:	mov    r13,r14
  40cb02:	mov    r15,QWORD PTR [rsp+0x8]
  40cb07:	jmp    40e19c <main@@Base+0x737c>
  40cb0c:	mov    rdi,r15
  40cb0f:	mov    rsi,rax
  40cb12:	mov    rdx,r14
  40cb15:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cb1a:	mov    rsi,r14
  40cb1d:	cmp    rax,r14
  40cb20:	je     40d559 <main@@Base+0x6739>
  40cb26:	cmp    BYTE PTR [rax],0x5d
  40cb29:	jne    40d556 <main@@Base+0x6736>
  40cb2f:	lea    r13,[rax+0x1]
  40cb33:	mov    rcx,r14
  40cb36:	sub    rcx,r13
  40cb39:	cmp    rcx,0x2
  40cb3d:	jl     410594 <main@@Base+0x9774>
  40cb43:	cmp    BYTE PTR [r13+0x0],0x20
  40cb48:	jg     40f53c <main@@Base+0x871c>
  40cb4e:	jne    410594 <main@@Base+0x9774>
  40cb54:	cmp    BYTE PTR [rax+0x2],0x20
  40cb58:	jle    410594 <main@@Base+0x9774>
  40cb5e:	add    rax,0x2
  40cb62:	mov    r13,rax
  40cb65:	mov    r15,QWORD PTR [rsp+0x8]
  40cb6a:	jmp    40c251 <main@@Base+0x5431>
  40cb6f:	mov    rdi,r15
  40cb72:	mov    rsi,rax
  40cb75:	mov    rdx,r14
  40cb78:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cb7d:	mov    r12,r14
  40cb80:	cmp    rax,r14
  40cb83:	je     40d67e <main@@Base+0x685e>
  40cb89:	cmp    BYTE PTR [rax],0x5d
  40cb8c:	jne    40d67b <main@@Base+0x685b>
  40cb92:	lea    r13,[rax+0x1]
  40cb96:	mov    rcx,r14
  40cb99:	sub    rcx,r13
  40cb9c:	cmp    rcx,0x2
  40cba0:	jl     4103dd <main@@Base+0x95bd>
  40cba6:	cmp    BYTE PTR [r13+0x0],0x20
  40cbab:	jg     40eb7f <main@@Base+0x7d5f>
  40cbb1:	jne    4103dd <main@@Base+0x95bd>
  40cbb7:	cmp    BYTE PTR [rax+0x2],0x20
  40cbbb:	jle    4103dd <main@@Base+0x95bd>
  40cbc1:	add    rax,0x2
  40cbc5:	mov    r13,rax
  40cbc8:	mov    r15,QWORD PTR [rsp+0x8]
  40cbcd:	jmp    40c324 <main@@Base+0x5504>
  40cbd2:	mov    rdi,r15
  40cbd5:	mov    rsi,rax
  40cbd8:	mov    rdx,r14
  40cbdb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cbe0:	mov    rsi,r14
  40cbe3:	cmp    rax,r14
  40cbe6:	je     40ddc8 <main@@Base+0x6fa8>
  40cbec:	cmp    BYTE PTR [rax],0x5d
  40cbef:	jne    40ddc5 <main@@Base+0x6fa5>
  40cbf5:	lea    r13,[rax+0x1]
  40cbf9:	mov    rcx,r14
  40cbfc:	sub    rcx,r13
  40cbff:	cmp    rcx,0x2
  40cc03:	jl     4105c7 <main@@Base+0x97a7>
  40cc09:	cmp    BYTE PTR [r13+0x0],0x20
  40cc0e:	jg     40f56e <main@@Base+0x874e>
  40cc14:	jne    4105c7 <main@@Base+0x97a7>
  40cc1a:	cmp    BYTE PTR [rax+0x2],0x20
  40cc1e:	jle    4105c7 <main@@Base+0x97a7>
  40cc24:	add    rax,0x2
  40cc28:	mov    r13,rax
  40cc2b:	mov    r15,QWORD PTR [rsp+0x8]
  40cc30:	jmp    40c3e8 <main@@Base+0x55c8>
  40cc35:	mov    ecx,0x15
  40cc3a:	mov    rdi,r15
  40cc3d:	mov    rsi,r12
  40cc40:	mov    rdx,r14
  40cc43:	call   423620 <flatcc_json_parser_set_error@@Base>
  40cc48:	mov    r13,rax
  40cc4b:	mov    rax,QWORD PTR [rsp+0x38]
  40cc50:	cmp    DWORD PTR [rax],0x0
  40cc53:	je     40d459 <main@@Base+0x6639>
  40cc59:	mov    r12,r13
  40cc5c:	jmp    40e8d1 <main@@Base+0x7ab1>
  40cc61:	mov    r12,rax
  40cc64:	mov    BYTE PTR [rsp+0x14],0x0
  40cc69:	mov    rdi,QWORD PTR [r15]
  40cc6c:	mov    esi,0x1
  40cc71:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40cc76:	test   rax,rax
  40cc79:	je     407501 <main@@Base+0x6e1>
  40cc7f:	mov    rbp,rax
  40cc82:	mov    rax,r14
  40cc85:	sub    rax,r12
  40cc88:	cmp    rax,0x4
  40cc8c:	jl     40ccba <main@@Base+0x5e9a>
  40cc8e:	cmp    DWORD PTR [r12],0x65757274
  40cc96:	je     40cd02 <main@@Base+0x5ee2>
  40cc98:	cmp    rax,0x5
  40cc9c:	jl     40ccba <main@@Base+0x5e9a>
  40cc9e:	mov    eax,DWORD PTR [r12]
  40cca2:	mov    ecx,0x736c6166
  40cca7:	xor    eax,ecx
  40cca9:	movzx  ecx,BYTE PTR [r12+0x4]
  40ccaf:	xor    ecx,0x65
  40ccb2:	or     ecx,eax
  40ccb4:	je     40ce37 <main@@Base+0x6017>
  40ccba:	mov    QWORD PTR [rsp+0x20],0x0
  40ccc3:	mov    DWORD PTR [rsp+0x30],0x0
  40cccb:	cmp    r12,r14
  40ccce:	je     40ccfb <main@@Base+0x5edb>
  40ccd0:	mov    rdi,r15
  40ccd3:	mov    rsi,r12
  40ccd6:	mov    rdx,r14
  40ccd9:	lea    rcx,[rsp+0x30]
  40ccde:	lea    r8,[rsp+0x20]
  40cce3:	call   425160 <flatcc_json_parser_integer@@Base>
  40cce8:	cmp    rax,r12
  40cceb:	je     40cd15 <main@@Base+0x5ef5>
  40cced:	cmp    DWORD PTR [rsp+0x30],0x0
  40ccf2:	je     40cd1c <main@@Base+0x5efc>
  40ccf4:	mov    ecx,0x8
  40ccf9:	jmp    40cd33 <main@@Base+0x5f13>
  40ccfb:	xor    ecx,ecx
  40ccfd:	mov    rax,r14
  40cd00:	jmp    40cd43 <main@@Base+0x5f23>
  40cd02:	mov    BYTE PTR [rsp+0x14],0x1
  40cd07:	lea    rax,[r12+0x4]
  40cd0c:	mov    cl,0x1
  40cd0e:	cmp    r12,rax
  40cd11:	jne    40cd7d <main@@Base+0x5f5d>
  40cd13:	jmp    40cd4c <main@@Base+0x5f2c>
  40cd15:	xor    ecx,ecx
  40cd17:	mov    rax,r12
  40cd1a:	jmp    40cd43 <main@@Base+0x5f23>
  40cd1c:	mov    rcx,QWORD PTR [rsp+0x20]
  40cd21:	cmp    rcx,0x100
  40cd28:	jb     40ce51 <main@@Base+0x6031>
  40cd2e:	mov    ecx,0x7
  40cd33:	mov    rdi,r15
  40cd36:	mov    rsi,rax
  40cd39:	mov    rdx,r14
  40cd3c:	call   423620 <flatcc_json_parser_set_error@@Base>
  40cd41:	xor    ecx,ecx
  40cd43:	mov    BYTE PTR [rsp+0x14],cl
  40cd47:	cmp    r12,rax
  40cd4a:	jne    40cd7d <main@@Base+0x5f5d>
  40cd4c:	mov    rdi,r15
  40cd4f:	mov    rsi,r12
  40cd52:	mov    rdx,r14
  40cd55:	lea    rcx,[rip+0x34424]        # 441180 <__data_start@@Base+0xd0>
  40cd5c:	lea    r8,[rsp+0x14]
  40cd61:	call   414220 <main@@Base+0xd400>
  40cd66:	cmp    rax,r12
  40cd69:	je     4107c4 <main@@Base+0x99a4>
  40cd6f:	cmp    rax,r14
  40cd72:	je     4107c4 <main@@Base+0x99a4>
  40cd78:	movzx  ecx,BYTE PTR [rsp+0x14]
  40cd7d:	mov    BYTE PTR [rbp+0x0],cl
  40cd80:	mov    rcx,r14
  40cd83:	sub    rcx,rax
  40cd86:	cmp    rcx,0x2
  40cd8a:	jl     40cda7 <main@@Base+0x5f87>
  40cd8c:	cmp    BYTE PTR [rax],0x20
  40cd8f:	jg     40cdb5 <main@@Base+0x5f95>
  40cd91:	jne    40cda7 <main@@Base+0x5f87>
  40cd93:	cmp    BYTE PTR [rax+0x1],0x20
  40cd97:	jle    40cda7 <main@@Base+0x5f87>
  40cd99:	add    rax,0x1
  40cd9d:	cmp    rax,r14
  40cda0:	jne    40cdbe <main@@Base+0x5f9e>
  40cda2:	jmp    40df76 <main@@Base+0x7156>
  40cda7:	mov    rdi,r15
  40cdaa:	mov    rsi,rax
  40cdad:	mov    rdx,r14
  40cdb0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cdb5:	cmp    rax,r14
  40cdb8:	je     40df76 <main@@Base+0x7156>
  40cdbe:	movzx  ecx,BYTE PTR [rax]
  40cdc1:	cmp    cl,0x2c
  40cdc4:	jne    40dfdb <main@@Base+0x71bb>
  40cdca:	lea    r12,[rax+0x1]
  40cdce:	mov    rcx,r14
  40cdd1:	sub    rcx,r12
  40cdd4:	cmp    rcx,0x2
  40cdd8:	jl     40cdef <main@@Base+0x5fcf>
  40cdda:	cmp    BYTE PTR [r12],0x20
  40cddf:	jg     40ce00 <main@@Base+0x5fe0>
  40cde1:	jne    40cdef <main@@Base+0x5fcf>
  40cde3:	cmp    BYTE PTR [rax+0x2],0x20
  40cde7:	jle    40cdef <main@@Base+0x5fcf>
  40cde9:	add    rax,0x2
  40cded:	jmp    40cdfd <main@@Base+0x5fdd>
  40cdef:	mov    rdi,r15
  40cdf2:	mov    rsi,r12
  40cdf5:	mov    rdx,r14
  40cdf8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cdfd:	mov    r12,rax
  40ce00:	cmp    r12,r14
  40ce03:	je     40e024 <main@@Base+0x7204>
  40ce09:	cmp    BYTE PTR [r12],0x5d
  40ce0e:	je     40e21c <main@@Base+0x73fc>
  40ce14:	mov    BYTE PTR [rsp+0x14],0x0
  40ce19:	mov    rdi,QWORD PTR [r15]
  40ce1c:	mov    esi,0x1
  40ce21:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40ce26:	mov    rbp,rax
  40ce29:	test   rax,rax
  40ce2c:	jne    40cc82 <main@@Base+0x5e62>
  40ce32:	jmp    407501 <main@@Base+0x6e1>
  40ce37:	mov    BYTE PTR [rsp+0x14],0x0
  40ce3c:	lea    rax,[r12+0x5]
  40ce41:	xor    ecx,ecx
  40ce43:	cmp    r12,rax
  40ce46:	jne    40cd7d <main@@Base+0x5f5d>
  40ce4c:	jmp    40cd4c <main@@Base+0x5f2c>
  40ce51:	test   cl,cl
  40ce53:	setne  cl
  40ce56:	jmp    40cd43 <main@@Base+0x5f23>
  40ce5b:	neg    rax
  40ce5e:	mov    DWORD PTR [rsp+0x14],eax
  40ce62:	mov    r12d,eax
  40ce65:	cmp    rbx,r13
  40ce68:	jne    40ce9e <main@@Base+0x607e>
  40ce6a:	mov    rdi,r15
  40ce6d:	mov    rsi,rbx
  40ce70:	mov    rdx,r14
  40ce73:	lea    rcx,[rip+0x343a6]        # 441220 <__data_start@@Base+0x170>
  40ce7a:	lea    r8,[rsp+0x14]
  40ce7f:	call   414540 <main@@Base+0xd720>
  40ce84:	mov    r13,rax
  40ce87:	cmp    rax,rbx
  40ce8a:	je     4107b7 <main@@Base+0x9997>
  40ce90:	cmp    r13,r14
  40ce93:	je     4107b7 <main@@Base+0x9997>
  40ce99:	mov    r12d,DWORD PTR [rsp+0x14]
  40ce9e:	test   r12d,r12d
  40cea1:	jne    40ceae <main@@Base+0x608e>
  40cea3:	test   BYTE PTR [r15+0x10],0x2
  40cea8:	je     40d3f5 <main@@Base+0x65d5>
  40ceae:	mov    rdi,QWORD PTR [r15]
  40ceb1:	mov    esi,0x10
  40ceb6:	jmp    40e1fc <main@@Base+0x73dc>
  40cebb:	mov    ecx,0x15
  40cec0:	mov    rdi,r15
  40cec3:	mov    rsi,r13
  40cec6:	mov    rdx,r14
  40cec9:	call   423620 <flatcc_json_parser_set_error@@Base>
  40cece:	mov    r13,rax
  40ced1:	mov    rax,QWORD PTR [rsp+0x38]
  40ced6:	cmp    DWORD PTR [rax],0x0
  40ced9:	je     40d477 <main@@Base+0x6657>
  40cedf:	mov    ecx,0x21
  40cee4:	mov    rdi,r15
  40cee7:	mov    rsi,r13
  40ceea:	mov    rdx,r14
  40ceed:	call   423620 <flatcc_json_parser_set_error@@Base>
  40cef2:	mov    r13,rax
  40cef5:	cmp    DWORD PTR [rsp+0x2c],0x0
  40cefa:	mov    r12,rax
  40cefd:	je     407501 <main@@Base+0x6e1>
  40cf03:	mov    rdi,QWORD PTR [r15]
  40cf06:	mov    esi,0x22
  40cf0b:	jmp    40e8fd <main@@Base+0x7add>
  40cf10:	mov    ecx,0x9
  40cf15:	mov    rdi,r15
  40cf18:	mov    rsi,rax
  40cf1b:	mov    rdx,r14
  40cf1e:	call   423620 <flatcc_json_parser_set_error@@Base>
  40cf23:	mov    r13,rax
  40cf26:	jmp    40a6cd <main@@Base+0x38ad>
  40cf2b:	xor    r12d,r12d
  40cf2e:	mov    r13,rbx
  40cf31:	jmp    40d4fb <main@@Base+0x66db>
  40cf36:	mov    rdi,QWORD PTR [rsp+0x8]
  40cf3b:	mov    rsi,rbx
  40cf3e:	mov    rdx,r14
  40cf41:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cf46:	mov    rbx,rax
  40cf49:	cmp    r15,rbx
  40cf4c:	je     40aba2 <main@@Base+0x3d82>
  40cf52:	mov    QWORD PTR [rsp+0x20],0x0
  40cf5b:	mov    DWORD PTR [rsp+0x30],0x0
  40cf63:	mov    DWORD PTR [rsp+0x14],0x0
  40cf6b:	xor    r12d,r12d
  40cf6e:	cmp    rbx,r14
  40cf71:	je     40cfb1 <main@@Base+0x6191>
  40cf73:	mov    r15,QWORD PTR [rsp+0x8]
  40cf78:	mov    rdi,r15
  40cf7b:	mov    rsi,rbx
  40cf7e:	mov    rdx,r14
  40cf81:	lea    rcx,[rsp+0x30]
  40cf86:	lea    r8,[rsp+0x20]
  40cf8b:	call   425160 <flatcc_json_parser_integer@@Base>
  40cf90:	cmp    rax,rbx
  40cf93:	je     40d41f <main@@Base+0x65ff>
  40cf99:	mov    r13,rax
  40cf9c:	cmp    DWORD PTR [rsp+0x30],0x0
  40cfa1:	je     40e091 <main@@Base+0x7271>
  40cfa7:	mov    ecx,0x8
  40cfac:	jmp    40e0ad <main@@Base+0x728d>
  40cfb1:	mov    r13,r14
  40cfb4:	mov    r15,QWORD PTR [rsp+0x8]
  40cfb9:	jmp    40e0be <main@@Base+0x729e>
  40cfbe:	mov    rdi,QWORD PTR [rsp+0x8]
  40cfc3:	mov    rsi,rbx
  40cfc6:	mov    rdx,r14
  40cfc9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40cfce:	mov    rbx,rax
  40cfd1:	cmp    r15,rbx
  40cfd4:	je     40ad0d <main@@Base+0x3eed>
  40cfda:	mov    QWORD PTR [rsp+0x20],0x0
  40cfe3:	mov    DWORD PTR [rsp+0x14],0x0
  40cfeb:	mov    QWORD PTR [rsp+0x30],0x0
  40cff4:	cmp    rbx,r14
  40cff7:	je     40d04b <main@@Base+0x622b>
  40cff9:	mov    r15,QWORD PTR [rsp+0x8]
  40cffe:	mov    rdi,r15
  40d001:	mov    rsi,rbx
  40d004:	mov    rdx,r14
  40d007:	lea    rcx,[rsp+0x14]
  40d00c:	lea    r8,[rsp+0x20]
  40d011:	call   425160 <flatcc_json_parser_integer@@Base>
  40d016:	cmp    rax,rbx
  40d019:	je     40d427 <main@@Base+0x6607>
  40d01f:	mov    r13,rax
  40d022:	cmp    DWORD PTR [rsp+0x14],0x0
  40d027:	je     40e123 <main@@Base+0x7303>
  40d02d:	mov    ecx,0x8
  40d032:	mov    rdi,r15
  40d035:	mov    rsi,r13
  40d038:	mov    rdx,r14
  40d03b:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d040:	mov    r13,rax
  40d043:	xor    r12d,r12d
  40d046:	jmp    40e12d <main@@Base+0x730d>
  40d04b:	xor    r12d,r12d
  40d04e:	mov    r13,r14
  40d051:	mov    r15,QWORD PTR [rsp+0x8]
  40d056:	jmp    40e12d <main@@Base+0x730d>
  40d05b:	mov    ecx,0xa
  40d060:	mov    rdi,r15
  40d063:	mov    rsi,rax
  40d066:	jmp    40b004 <main@@Base+0x41e4>
  40d06b:	mov    rdi,QWORD PTR [rsp+0x8]
  40d070:	mov    rsi,r12
  40d073:	mov    rdx,r14
  40d076:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d07b:	mov    r12,rax
  40d07e:	cmp    r15,r12
  40d081:	je     40d3da <main@@Base+0x65ba>
  40d087:	mov    r15,QWORD PTR [rsp+0x8]
  40d08c:	mov    rdi,QWORD PTR [r15]
  40d08f:	call   41e710 <flatcc_builder_start_offset_vector@@Base>
  40d094:	test   eax,eax
  40d096:	jne    407501 <main@@Base+0x6e1>
  40d09c:	cmp    r12,r14
  40d09f:	je     40d0e9 <main@@Base+0x62c9>
  40d0a1:	cmp    BYTE PTR [r12],0x5b
  40d0a6:	jne    40d0e9 <main@@Base+0x62c9>
  40d0a8:	lea    rax,[r12+0x1]
  40d0ad:	mov    rcx,r14
  40d0b0:	sub    rcx,rax
  40d0b3:	cmp    rcx,0x2
  40d0b7:	jl     40d490 <main@@Base+0x6670>
  40d0bd:	cmp    BYTE PTR [rax],0x20
  40d0c0:	jg     40d49e <main@@Base+0x667e>
  40d0c6:	mov    r15,QWORD PTR [rsp+0x8]
  40d0cb:	jne    40d490 <main@@Base+0x6670>
  40d0d1:	cmp    BYTE PTR [r12+0x2],0x20
  40d0d7:	jle    40d490 <main@@Base+0x6670>
  40d0dd:	add    r12,0x2
  40d0e1:	mov    rax,r12
  40d0e4:	jmp    40d49e <main@@Base+0x667e>
  40d0e9:	mov    ecx,0x16
  40d0ee:	mov    rdi,r15
  40d0f1:	mov    rsi,r12
  40d0f4:	mov    rdx,r14
  40d0f7:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d0fc:	mov    r13,rax
  40d0ff:	mov    rdi,QWORD PTR [r15]
  40d102:	call   41e8d0 <flatcc_builder_end_offset_vector@@Base>
  40d107:	mov    DWORD PTR [rsp+0x2c],eax
  40d10b:	test   eax,eax
  40d10d:	mov    rbp,QWORD PTR [rsp+0x18]
  40d112:	movabs r12,0x7465737400000000
  40d11c:	je     41078b <main@@Base+0x996b>
  40d122:	mov    rdi,QWORD PTR [r15]
  40d125:	mov    esi,0xa
  40d12a:	jmp    40a6e9 <main@@Base+0x38c9>
  40d12f:	mov    rdi,r15
  40d132:	mov    rsi,rax
  40d135:	mov    rdx,r14
  40d138:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d13d:	mov    r12,r14
  40d140:	cmp    rax,r14
  40d143:	je     40e249 <main@@Base+0x7429>
  40d149:	cmp    BYTE PTR [rax],0x5d
  40d14c:	jne    40e246 <main@@Base+0x7426>
  40d152:	lea    r13,[rax+0x1]
  40d156:	mov    rcx,r14
  40d159:	sub    rcx,r13
  40d15c:	cmp    rcx,0x2
  40d160:	jl     40e6d0 <main@@Base+0x78b0>
  40d166:	cmp    BYTE PTR [r13+0x0],0x20
  40d16b:	jg     40fe51 <main@@Base+0x9031>
  40d171:	jne    40e6d0 <main@@Base+0x78b0>
  40d177:	cmp    BYTE PTR [rax+0x2],0x20
  40d17b:	jle    40e6d0 <main@@Base+0x78b0>
  40d181:	add    rax,0x2
  40d185:	jmp    4104d8 <main@@Base+0x96b8>
  40d18a:	mov    r13,rbx
  40d18d:	jmp    40e19c <main@@Base+0x737c>
  40d192:	mov    rdi,QWORD PTR [r15]
  40d195:	call   41f510 <flatcc_builder_end_table@@Base>
  40d19a:	mov    DWORD PTR [rsp+0x2c],eax
  40d19e:	test   eax,eax
  40d1a0:	jne    40c886 <main@@Base+0x5a66>
  40d1a6:	jmp    40c85f <main@@Base+0x5a3f>
  40d1ab:	mov    rdi,QWORD PTR [rsp+0x8]
  40d1b0:	mov    rsi,r12
  40d1b3:	mov    rdx,r14
  40d1b6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d1bb:	mov    r12,rax
  40d1be:	cmp    r15,r12
  40d1c1:	je     40d3da <main@@Base+0x65ba>
  40d1c7:	mov    r15,QWORD PTR [rsp+0x8]
  40d1cc:	mov    rdi,QWORD PTR [r15]
  40d1cf:	mov    esi,0x8
  40d1d4:	mov    edx,0x8
  40d1d9:	mov    ecx,0x1fffffff
  40d1de:	call   41e690 <flatcc_builder_start_vector@@Base>
  40d1e3:	test   eax,eax
  40d1e5:	jne    407501 <main@@Base+0x6e1>
  40d1eb:	cmp    r12,r14
  40d1ee:	je     40d233 <main@@Base+0x6413>
  40d1f0:	cmp    BYTE PTR [r12],0x5b
  40d1f5:	jne    40d233 <main@@Base+0x6413>
  40d1f7:	lea    rax,[r12+0x1]
  40d1fc:	mov    rcx,r14
  40d1ff:	sub    rcx,rax
  40d202:	cmp    rcx,0x2
  40d206:	jl     40df7e <main@@Base+0x715e>
  40d20c:	cmp    BYTE PTR [rax],0x20
  40d20f:	jg     40df8e <main@@Base+0x716e>
  40d215:	jne    40df7e <main@@Base+0x715e>
  40d21b:	cmp    BYTE PTR [r12+0x2],0x20
  40d221:	jle    40df7e <main@@Base+0x715e>
  40d227:	add    r12,0x2
  40d22b:	mov    rax,r12
  40d22e:	jmp    40df8e <main@@Base+0x716e>
  40d233:	mov    ecx,0x16
  40d238:	mov    rdi,r15
  40d23b:	mov    rsi,r12
  40d23e:	mov    rdx,r14
  40d241:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d246:	mov    r13,rax
  40d249:	mov    rdi,QWORD PTR [r15]
  40d24c:	call   41f820 <flatcc_builder_end_vector@@Base>
  40d251:	mov    DWORD PTR [rsp+0x2c],eax
  40d255:	test   eax,eax
  40d257:	mov    rbp,QWORD PTR [rsp+0x18]
  40d25c:	movabs r12,0x7465737400000000
  40d266:	je     41078b <main@@Base+0x996b>
  40d26c:	mov    rdi,QWORD PTR [r15]
  40d26f:	mov    esi,0x20
  40d274:	jmp    40a6e9 <main@@Base+0x38c9>
  40d279:	mov    rdi,QWORD PTR [rsp+0x8]
  40d27e:	mov    rsi,r12
  40d281:	mov    rdx,r14
  40d284:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d289:	mov    r12,rax
  40d28c:	cmp    r15,r12
  40d28f:	je     40d3da <main@@Base+0x65ba>
  40d295:	cmp    r12,r14
  40d298:	je     40d30c <main@@Base+0x64ec>
  40d29a:	cmp    BYTE PTR [r12],0x5b
  40d29f:	jne    40d30c <main@@Base+0x64ec>
  40d2a1:	mov    rax,QWORD PTR [rsp+0x8]
  40d2a6:	mov    rdi,QWORD PTR [rax]
  40d2a9:	mov    esi,0x1
  40d2ae:	mov    edx,0x1
  40d2b3:	mov    ecx,0xffffffff
  40d2b8:	call   41e690 <flatcc_builder_start_vector@@Base>
  40d2bd:	test   eax,eax
  40d2bf:	jne    4107cc <main@@Base+0x99ac>
  40d2c5:	cmp    BYTE PTR [r12],0x5b
  40d2ca:	jne    40e6b6 <main@@Base+0x7896>
  40d2d0:	lea    rax,[r12+0x1]
  40d2d5:	mov    rcx,r14
  40d2d8:	sub    rcx,rax
  40d2db:	cmp    rcx,0x2
  40d2df:	jl     40eb02 <main@@Base+0x7ce2>
  40d2e5:	cmp    BYTE PTR [rax],0x20
  40d2e8:	jg     40eb12 <main@@Base+0x7cf2>
  40d2ee:	jne    40eb02 <main@@Base+0x7ce2>
  40d2f4:	cmp    BYTE PTR [r12+0x2],0x20
  40d2fa:	jle    40eb02 <main@@Base+0x7ce2>
  40d300:	add    r12,0x2
  40d304:	mov    rax,r12
  40d307:	jmp    40eb12 <main@@Base+0x7cf2>
  40d30c:	mov    r15,QWORD PTR [rsp+0x8]
  40d311:	mov    rdi,QWORD PTR [r15]
  40d314:	xor    esi,esi
  40d316:	xor    edx,edx
  40d318:	xor    ecx,ecx
  40d31a:	call   41d830 <flatcc_builder_start_buffer@@Base>
  40d31f:	test   eax,eax
  40d321:	jne    407501 <main@@Base+0x6e1>
  40d327:	mov    rdi,r15
  40d32a:	mov    rsi,r12
  40d32d:	mov    rdx,r14
  40d330:	lea    rcx,[rsp+0x2c]
  40d335:	call   4074d0 <main@@Base+0x6b0>
  40d33a:	mov    r13,rax
  40d33d:	mov    esi,DWORD PTR [rsp+0x2c]
  40d341:	test   esi,esi
  40d343:	je     41078b <main@@Base+0x996b>
  40d349:	mov    rdi,QWORD PTR [r15]
  40d34c:	call   41da50 <flatcc_builder_end_buffer@@Base>
  40d351:	jmp    410551 <main@@Base+0x9731>
  40d356:	mov    rdi,QWORD PTR [rsp+0x8]
  40d35b:	mov    rsi,r12
  40d35e:	mov    rdx,r14
  40d361:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d366:	mov    r12,rax
  40d369:	cmp    r15,r12
  40d36c:	je     40d3da <main@@Base+0x65ba>
  40d36e:	mov    r15,QWORD PTR [rsp+0x8]
  40d373:	mov    rdi,QWORD PTR [r15]
  40d376:	mov    esi,0x8
  40d37b:	mov    edx,0x8
  40d380:	mov    ecx,0x1fffffff
  40d385:	call   41e690 <flatcc_builder_start_vector@@Base>
  40d38a:	test   eax,eax
  40d38c:	jne    407501 <main@@Base+0x6e1>
  40d392:	cmp    r12,r14
  40d395:	je     40d404 <main@@Base+0x65e4>
  40d397:	cmp    BYTE PTR [r12],0x5b
  40d39c:	jne    40d404 <main@@Base+0x65e4>
  40d39e:	lea    rax,[r12+0x1]
  40d3a3:	mov    rcx,r14
  40d3a6:	sub    rcx,rax
  40d3a9:	cmp    rcx,0x2
  40d3ad:	jl     40e034 <main@@Base+0x7214>
  40d3b3:	cmp    BYTE PTR [rax],0x20
  40d3b6:	jg     40e044 <main@@Base+0x7224>
  40d3bc:	jne    40e034 <main@@Base+0x7214>
  40d3c2:	cmp    BYTE PTR [r12+0x2],0x20
  40d3c8:	jle    40e034 <main@@Base+0x7214>
  40d3ce:	add    r12,0x2
  40d3d2:	mov    rax,r12
  40d3d5:	jmp    40e044 <main@@Base+0x7224>
  40d3da:	mov    rdi,QWORD PTR [rsp+0x8]
  40d3df:	mov    rsi,r15
  40d3e2:	mov    r15,rdi
  40d3e5:	mov    rdx,r14
  40d3e8:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40d3ed:	mov    r13,rax
  40d3f0:	mov    rbp,QWORD PTR [rsp+0x18]
  40d3f5:	movabs r12,0x7465737400000000
  40d3ff:	jmp    40e989 <main@@Base+0x7b69>
  40d404:	mov    ecx,0x16
  40d409:	mov    rdi,r15
  40d40c:	mov    rsi,r12
  40d40f:	mov    rdx,r14
  40d412:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d417:	mov    r13,rax
  40d41a:	jmp    410482 <main@@Base+0x9662>
  40d41f:	mov    r13,rbx
  40d422:	jmp    40e0be <main@@Base+0x729e>
  40d427:	xor    r12d,r12d
  40d42a:	mov    r13,rbx
  40d42d:	jmp    40e12d <main@@Base+0x730d>
  40d432:	test   r12,r12
  40d435:	jns    40d4f6 <main@@Base+0x66d6>
  40d43b:	mov    ecx,0x7
  40d440:	mov    rdi,r15
  40d443:	mov    rsi,r13
  40d446:	mov    rdx,r14
  40d449:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d44e:	mov    r13,rax
  40d451:	xor    r12d,r12d
  40d454:	jmp    40d4fb <main@@Base+0x66db>
  40d459:	mov    rdi,QWORD PTR [r15]
  40d45c:	call   41f510 <flatcc_builder_end_table@@Base>
  40d461:	mov    DWORD PTR [rsp+0x2c],eax
  40d465:	test   eax,eax
  40d467:	je     40e8c9 <main@@Base+0x7aa9>
  40d46d:	mov    r15,QWORD PTR [rsp+0x8]
  40d472:	jmp    40e8f5 <main@@Base+0x7ad5>
  40d477:	mov    rdi,QWORD PTR [r15]
  40d47a:	call   41f510 <flatcc_builder_end_table@@Base>
  40d47f:	mov    DWORD PTR [rsp+0x2c],eax
  40d483:	test   eax,eax
  40d485:	jne    40cf03 <main@@Base+0x60e3>
  40d48b:	jmp    40cedf <main@@Base+0x60bf>
  40d490:	mov    rdi,r15
  40d493:	mov    rsi,rax
  40d496:	mov    rdx,r14
  40d499:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d49e:	mov    rsi,r14
  40d4a1:	cmp    rax,r14
  40d4a4:	je     40e72e <main@@Base+0x790e>
  40d4aa:	cmp    BYTE PTR [rax],0x5d
  40d4ad:	jne    40e72b <main@@Base+0x790b>
  40d4b3:	lea    r13,[rax+0x1]
  40d4b7:	mov    rcx,r14
  40d4ba:	sub    rcx,r13
  40d4bd:	cmp    rcx,0x2
  40d4c1:	jl     410660 <main@@Base+0x9840>
  40d4c7:	cmp    BYTE PTR [r13+0x0],0x20
  40d4cc:	jg     41010b <main@@Base+0x92eb>
  40d4d2:	jne    410660 <main@@Base+0x9840>
  40d4d8:	cmp    BYTE PTR [rax+0x2],0x20
  40d4dc:	jle    410660 <main@@Base+0x9840>
  40d4e2:	add    rax,0x2
  40d4e6:	mov    r13,rax
  40d4e9:	mov    r15,QWORD PTR [rsp+0x8]
  40d4ee:	jmp    40d0ff <main@@Base+0x62df>
  40d4f3:	neg    r12
  40d4f6:	mov    QWORD PTR [rsp+0x30],r12
  40d4fb:	mov    rbp,QWORD PTR [rsp+0x18]
  40d500:	cmp    rbx,r13
  40d503:	jne    40d539 <main@@Base+0x6719>
  40d505:	mov    rdi,r15
  40d508:	mov    rsi,rbx
  40d50b:	mov    rdx,r14
  40d50e:	lea    rcx,[rip+0x33d4b]        # 441260 <__data_start@@Base+0x1b0>
  40d515:	lea    r8,[rsp+0x30]
  40d51a:	call   4146e0 <main@@Base+0xd8c0>
  40d51f:	mov    r13,rax
  40d522:	cmp    rax,rbx
  40d525:	je     4107b7 <main@@Base+0x9997>
  40d52b:	cmp    r13,r14
  40d52e:	je     4107b7 <main@@Base+0x9997>
  40d534:	mov    r12,QWORD PTR [rsp+0x30]
  40d539:	test   r12,r12
  40d53c:	jne    40d549 <main@@Base+0x6729>
  40d53e:	test   BYTE PTR [r15+0x10],0x2
  40d543:	je     40d3f5 <main@@Base+0x65d5>
  40d549:	mov    rdi,QWORD PTR [r15]
  40d54c:	mov    esi,0x12
  40d551:	jmp    40f1b2 <main@@Base+0x8392>
  40d556:	mov    rsi,rax
  40d559:	mov    r15,QWORD PTR [rsp+0x8]
  40d55e:	mov    rdi,r15
  40d561:	mov    rdx,r14
  40d564:	lea    rcx,[rsp+0x2c]
  40d569:	call   425630 <flatcc_json_parser_build_string@@Base>
  40d56e:	mov    r12,rax
  40d571:	cmp    DWORD PTR [rsp+0x2c],0x0
  40d576:	je     407501 <main@@Base+0x6e1>
  40d57c:	mov    rdi,QWORD PTR [r15]
  40d57f:	mov    esi,0x1
  40d584:	call   41e010 <flatcc_builder_extend_offset_vector@@Base>
  40d589:	test   rax,rax
  40d58c:	je     407501 <main@@Base+0x6e1>
  40d592:	mov    ecx,DWORD PTR [rsp+0x2c]
  40d596:	mov    DWORD PTR [rax],ecx
  40d598:	mov    rax,r14
  40d59b:	sub    rax,r12
  40d59e:	cmp    rax,0x2
  40d5a2:	jl     40d5c3 <main@@Base+0x67a3>
  40d5a4:	cmp    BYTE PTR [r12],0x20
  40d5a9:	jg     40d5d4 <main@@Base+0x67b4>
  40d5ab:	jne    40d5c3 <main@@Base+0x67a3>
  40d5ad:	cmp    BYTE PTR [r12+0x1],0x20
  40d5b3:	jle    40d5c3 <main@@Base+0x67a3>
  40d5b5:	add    r12,0x1
  40d5b9:	cmp    r12,r14
  40d5bc:	jne    40d5dd <main@@Base+0x67bd>
  40d5be:	jmp    40f504 <main@@Base+0x86e4>
  40d5c3:	mov    rdi,r15
  40d5c6:	mov    rsi,r12
  40d5c9:	mov    rdx,r14
  40d5cc:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d5d1:	mov    r12,rax
  40d5d4:	cmp    r12,r14
  40d5d7:	je     40f504 <main@@Base+0x86e4>
  40d5dd:	movzx  eax,BYTE PTR [r12]
  40d5e2:	cmp    al,0x2c
  40d5e4:	jne    40f514 <main@@Base+0x86f4>
  40d5ea:	lea    rsi,[r12+0x1]
  40d5ef:	mov    rax,r14
  40d5f2:	sub    rax,rsi
  40d5f5:	cmp    rax,0x2
  40d5f9:	jl     40d61b <main@@Base+0x67fb>
  40d5fb:	cmp    BYTE PTR [rsi],0x20
  40d5fe:	jg     40d629 <main@@Base+0x6809>
  40d600:	jne    40d61b <main@@Base+0x67fb>
  40d602:	cmp    BYTE PTR [r12+0x2],0x20
  40d608:	jle    40d61b <main@@Base+0x67fb>
  40d60a:	add    r12,0x2
  40d60e:	mov    rsi,r12
  40d611:	cmp    rsi,r14
  40d614:	jne    40d632 <main@@Base+0x6812>
  40d616:	jmp    40f578 <main@@Base+0x8758>
  40d61b:	mov    rdi,r15
  40d61e:	mov    rdx,r14
  40d621:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d626:	mov    rsi,rax
  40d629:	cmp    rsi,r14
  40d62c:	je     40f578 <main@@Base+0x8758>
  40d632:	cmp    BYTE PTR [rsi],0x5d
  40d635:	jne    40d55e <main@@Base+0x673e>
  40d63b:	lea    r13,[rsi+0x1]
  40d63f:	mov    rax,r14
  40d642:	sub    rax,r13
  40d645:	cmp    rax,0x2
  40d649:	jl     410594 <main@@Base+0x9774>
  40d64f:	cmp    BYTE PTR [r13+0x0],0x20
  40d654:	jg     40f53c <main@@Base+0x871c>
  40d65a:	jne    410594 <main@@Base+0x9774>
  40d660:	cmp    BYTE PTR [rsi+0x2],0x20
  40d664:	jle    410594 <main@@Base+0x9774>
  40d66a:	add    rsi,0x2
  40d66e:	mov    r13,rsi
  40d671:	mov    r15,QWORD PTR [rsp+0x8]
  40d676:	jmp    40c251 <main@@Base+0x5431>
  40d67b:	mov    r12,rax
  40d67e:	mov    r15,QWORD PTR [rsp+0x8]
  40d683:	mov    rdi,QWORD PTR [r15]
  40d686:	mov    esi,0x1
  40d68b:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40d690:	test   rax,rax
  40d693:	je     407501 <main@@Base+0x6e1>
  40d699:	mov    r13,rax
  40d69c:	cmp    r12,r14
  40d69f:	je     40d6e4 <main@@Base+0x68c4>
  40d6a1:	cmp    BYTE PTR [r12],0x7b
  40d6a6:	jne    40d6e4 <main@@Base+0x68c4>
  40d6a8:	lea    rax,[r12+0x1]
  40d6ad:	mov    rcx,r14
  40d6b0:	sub    rcx,rax
  40d6b3:	cmp    rcx,0x2
  40d6b7:	jl     40d7b8 <main@@Base+0x6998>
  40d6bd:	cmp    BYTE PTR [rax],0x20
  40d6c0:	jg     40d7c6 <main@@Base+0x69a6>
  40d6c6:	jne    40d7b8 <main@@Base+0x6998>
  40d6cc:	cmp    BYTE PTR [r12+0x2],0x20
  40d6d2:	jle    40d7b8 <main@@Base+0x6998>
  40d6d8:	add    r12,0x2
  40d6dc:	mov    rax,r12
  40d6df:	jmp    40d7c6 <main@@Base+0x69a6>
  40d6e4:	mov    ecx,0x15
  40d6e9:	mov    rdi,r15
  40d6ec:	mov    rsi,r12
  40d6ef:	mov    rdx,r14
  40d6f2:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d6f7:	mov    rdx,rax
  40d6fa:	mov    rax,r14
  40d6fd:	sub    rax,rdx
  40d700:	cmp    rax,0x2
  40d704:	jl     40d721 <main@@Base+0x6901>
  40d706:	cmp    BYTE PTR [rdx],0x20
  40d709:	jg     40d732 <main@@Base+0x6912>
  40d70b:	jne    40d721 <main@@Base+0x6901>
  40d70d:	cmp    BYTE PTR [rdx+0x1],0x20
  40d711:	jle    40d721 <main@@Base+0x6901>
  40d713:	add    rdx,0x1
  40d717:	cmp    rdx,r14
  40d71a:	jne    40d73b <main@@Base+0x691b>
  40d71c:	jmp    40e879 <main@@Base+0x7a59>
  40d721:	mov    rdi,r15
  40d724:	mov    rsi,rdx
  40d727:	mov    rdx,r14
  40d72a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d72f:	mov    rdx,rax
  40d732:	cmp    rdx,r14
  40d735:	je     40e879 <main@@Base+0x7a59>
  40d73b:	mov    al,BYTE PTR [rdx]
  40d73d:	cmp    al,0x2c
  40d73f:	jne    40e881 <main@@Base+0x7a61>
  40d745:	lea    r12,[rdx+0x1]
  40d749:	mov    rax,r14
  40d74c:	sub    rax,r12
  40d74f:	cmp    rax,0x2
  40d753:	jl     40d775 <main@@Base+0x6955>
  40d755:	cmp    BYTE PTR [r12],0x20
  40d75a:	jg     40d786 <main@@Base+0x6966>
  40d75c:	jne    40d775 <main@@Base+0x6955>
  40d75e:	cmp    BYTE PTR [rdx+0x2],0x20
  40d762:	jle    40d775 <main@@Base+0x6955>
  40d764:	add    rdx,0x2
  40d768:	mov    r12,rdx
  40d76b:	cmp    r12,r14
  40d76e:	jne    40d78f <main@@Base+0x696f>
  40d770:	jmp    40e934 <main@@Base+0x7b14>
  40d775:	mov    rdi,r15
  40d778:	mov    rsi,r12
  40d77b:	mov    rdx,r14
  40d77e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d783:	mov    r12,rax
  40d786:	cmp    r12,r14
  40d789:	je     40e934 <main@@Base+0x7b14>
  40d78f:	cmp    BYTE PTR [r12],0x5d
  40d794:	je     40eb5f <main@@Base+0x7d3f>
  40d79a:	mov    rdi,QWORD PTR [r15]
  40d79d:	mov    esi,0x1
  40d7a2:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40d7a7:	mov    r13,rax
  40d7aa:	test   rax,rax
  40d7ad:	jne    40d69c <main@@Base+0x687c>
  40d7b3:	jmp    407501 <main@@Base+0x6e1>
  40d7b8:	mov    rdi,r15
  40d7bb:	mov    rsi,rax
  40d7be:	mov    rdx,r14
  40d7c1:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d7c6:	mov    rsi,r14
  40d7c9:	cmp    rax,r14
  40d7cc:	je     40d805 <main@@Base+0x69e5>
  40d7ce:	cmp    BYTE PTR [rax],0x7d
  40d7d1:	jne    40d7f5 <main@@Base+0x69d5>
  40d7d3:	lea    rdx,[rax+0x1]
  40d7d7:	mov    rcx,r14
  40d7da:	sub    rcx,rdx
  40d7dd:	cmp    rcx,0x2
  40d7e1:	jl     40dd91 <main@@Base+0x6f71>
  40d7e7:	cmp    BYTE PTR [rdx],0x20
  40d7ea:	jle    40dd78 <main@@Base+0x6f58>
  40d7f0:	jmp    40dd5e <main@@Base+0x6f3e>
  40d7f5:	mov    rsi,rax
  40d7f8:	jmp    40d805 <main@@Base+0x69e5>
  40d7fa:	mov    DWORD PTR [rsp+0x14],ecx
  40d7fe:	mov    ebp,ecx
  40d800:	jmp    40dc14 <main@@Base+0x6df4>
  40d805:	mov    r15,r14
  40d808:	cmp    rsi,r14
  40d80b:	je     40d830 <main@@Base+0x6a10>
  40d80d:	cmp    BYTE PTR [rsi],0x22
  40d810:	jne    40d81b <main@@Base+0x69fb>
  40d812:	add    rsi,0x1
  40d816:	mov    r15,rsi
  40d819:	jmp    40d830 <main@@Base+0x6a10>
  40d81b:	mov    ecx,0x5
  40d820:	mov    rdi,QWORD PTR [rsp+0x8]
  40d825:	mov    rdx,r14
  40d828:	call   423620 <flatcc_json_parser_set_error@@Base>
  40d82d:	mov    r15,rax
  40d830:	mov    rax,r14
  40d833:	sub    rax,r15
  40d836:	cmp    rax,0x8
  40d83a:	jb     40d846 <main@@Base+0x6a26>
  40d83c:	movbe  rcx,QWORD PTR [r15]
  40d841:	jmp    40d8d2 <main@@Base+0x6ab2>
  40d846:	mov    ecx,eax
  40d848:	and    cl,0xf
  40d84b:	add    cl,0xff
  40d84e:	cmp    cl,0x7
  40d851:	ja     40dbfc <main@@Base+0x6ddc>
  40d857:	movzx  ecx,cl
  40d85a:	lea    rdx,[rip+0x259ff]        # 433260 <_IO_stdin_used@@Base+0x260>
  40d861:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40d865:	add    rcx,rdx
  40d868:	xor    r8d,r8d
  40d86b:	xor    r9d,r9d
  40d86e:	xor    edx,edx
  40d870:	xor    esi,esi
  40d872:	xor    ebx,ebx
  40d874:	xor    edi,edi
  40d876:	xor    ebp,ebp
  40d878:	jmp    rcx
  40d87a:	movsx  r8,BYTE PTR [r15+0x7]
  40d87f:	movsx  r9,BYTE PTR [r15+0x6]
  40d884:	shl    r9,0x8
  40d888:	or     r9,r8
  40d88b:	movsx  rdx,BYTE PTR [r15+0x5]
  40d890:	shl    rdx,0x10
  40d894:	or     rdx,r9
  40d897:	movsx  rsi,BYTE PTR [r15+0x4]
  40d89c:	shl    rsi,0x18
  40d8a0:	or     rsi,rdx
  40d8a3:	movsx  rbx,BYTE PTR [r15+0x3]
  40d8a8:	shl    rbx,0x20
  40d8ac:	or     rbx,rsi
  40d8af:	movsx  rdi,BYTE PTR [r15+0x2]
  40d8b4:	shl    rdi,0x28
  40d8b8:	or     rdi,rbx
  40d8bb:	movsx  rbp,BYTE PTR [r15+0x1]
  40d8c0:	shl    rbp,0x30
  40d8c4:	or     rbp,rdi
  40d8c7:	movzx  ecx,BYTE PTR [r15]
  40d8cb:	shl    rcx,0x38
  40d8cf:	or     rcx,rbp
  40d8d2:	mov    rdx,rcx
  40d8d5:	movabs rsi,0xffff000000000000
  40d8df:	and    rdx,rsi
  40d8e2:	movabs rsi,0x6964000000000000
  40d8ec:	cmp    rdx,rsi
  40d8ef:	jne    40d94c <main@@Base+0x6b2c>
  40d8f1:	mov    rbx,r15
  40d8f4:	cmp    rax,0x3
  40d8f8:	jl     40dab3 <main@@Base+0x6c93>
  40d8fe:	cmp    BYTE PTR [r15+0x2],0x22
  40d903:	mov    rbx,r15
  40d906:	jne    40dab3 <main@@Base+0x6c93>
  40d90c:	lea    rsi,[r15+0x3]
  40d910:	mov    rax,r14
  40d913:	sub    rax,rsi
  40d916:	cmp    rax,0x2
  40d91a:	jl     40d9ba <main@@Base+0x6b9a>
  40d920:	cmp    BYTE PTR [rsi],0x20
  40d923:	jg     40d9ca <main@@Base+0x6baa>
  40d929:	jne    40d9ba <main@@Base+0x6b9a>
  40d92f:	cmp    BYTE PTR [r15+0x4],0x20
  40d934:	jle    40d9ba <main@@Base+0x6b9a>
  40d93a:	lea    rsi,[r15+0x4]
  40d93e:	cmp    rsi,r14
  40d941:	jne    40d9cf <main@@Base+0x6baf>
  40d947:	jmp    40da16 <main@@Base+0x6bf6>
  40d94c:	movabs rdx,0x64697374616e6365
  40d956:	cmp    rcx,rdx
  40d959:	jne    40dbfc <main@@Base+0x6ddc>
  40d95f:	mov    rbx,r15
  40d962:	cmp    rax,0x9
  40d966:	jl     40dba7 <main@@Base+0x6d87>
  40d96c:	cmp    BYTE PTR [r15+0x8],0x22
  40d971:	mov    rbx,r15
  40d974:	jne    40dba7 <main@@Base+0x6d87>
  40d97a:	lea    rsi,[r15+0x9]
  40d97e:	mov    rax,r14
  40d981:	sub    rax,rsi
  40d984:	cmp    rax,0x2
  40d988:	jl     40da2d <main@@Base+0x6c0d>
  40d98e:	cmp    BYTE PTR [rsi],0x20
  40d991:	jg     40da3d <main@@Base+0x6c1d>
  40d997:	jne    40da2d <main@@Base+0x6c0d>
  40d99d:	cmp    BYTE PTR [r15+0xa],0x20
  40d9a2:	jle    40da2d <main@@Base+0x6c0d>
  40d9a8:	lea    rsi,[r15+0xa]
  40d9ac:	cmp    rsi,r14
  40d9af:	jne    40da42 <main@@Base+0x6c22>
  40d9b5:	jmp    40da89 <main@@Base+0x6c69>
  40d9ba:	mov    rdi,QWORD PTR [rsp+0x8]
  40d9bf:	mov    rdx,r14
  40d9c2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40d9c7:	mov    rsi,rax
  40d9ca:	cmp    rsi,r14
  40d9cd:	je     40da16 <main@@Base+0x6bf6>
  40d9cf:	cmp    BYTE PTR [rsi],0x3a
  40d9d2:	jne    40da16 <main@@Base+0x6bf6>
  40d9d4:	lea    rbx,[rsi+0x1]
  40d9d8:	mov    rax,r14
  40d9db:	sub    rax,rbx
  40d9de:	cmp    rax,0x2
  40d9e2:	jl     40daa0 <main@@Base+0x6c80>
  40d9e8:	cmp    BYTE PTR [rbx],0x20
  40d9eb:	jg     40dab3 <main@@Base+0x6c93>
  40d9f1:	jne    40daa0 <main@@Base+0x6c80>
  40d9f7:	cmp    BYTE PTR [rsi+0x2],0x20
  40d9fb:	jle    40daa0 <main@@Base+0x6c80>
  40da01:	add    rsi,0x2
  40da05:	mov    rbx,rsi
  40da08:	cmp    r15,rbx
  40da0b:	jne    40dabc <main@@Base+0x6c9c>
  40da11:	jmp    40dbfc <main@@Base+0x6ddc>
  40da16:	mov    ecx,0x4
  40da1b:	mov    rdi,QWORD PTR [rsp+0x8]
  40da20:	mov    rdx,r14
  40da23:	call   423620 <flatcc_json_parser_set_error@@Base>
  40da28:	jmp    40dab0 <main@@Base+0x6c90>
  40da2d:	mov    rdi,QWORD PTR [rsp+0x8]
  40da32:	mov    rdx,r14
  40da35:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40da3a:	mov    rsi,rax
  40da3d:	cmp    rsi,r14
  40da40:	je     40da89 <main@@Base+0x6c69>
  40da42:	cmp    BYTE PTR [rsi],0x3a
  40da45:	jne    40da89 <main@@Base+0x6c69>
  40da47:	lea    rbx,[rsi+0x1]
  40da4b:	mov    rax,r14
  40da4e:	sub    rax,rbx
  40da51:	cmp    rax,0x2
  40da55:	jl     40db94 <main@@Base+0x6d74>
  40da5b:	cmp    BYTE PTR [rbx],0x20
  40da5e:	jg     40dba7 <main@@Base+0x6d87>
  40da64:	jne    40db94 <main@@Base+0x6d74>
  40da6a:	cmp    BYTE PTR [rsi+0x2],0x20
  40da6e:	jle    40db94 <main@@Base+0x6d74>
  40da74:	add    rsi,0x2
  40da78:	mov    rbx,rsi
  40da7b:	cmp    r15,rbx
  40da7e:	jne    40dbac <main@@Base+0x6d8c>
  40da84:	jmp    40dbfc <main@@Base+0x6ddc>
  40da89:	mov    ecx,0x4
  40da8e:	mov    rdi,QWORD PTR [rsp+0x8]
  40da93:	mov    rdx,r14
  40da96:	call   423620 <flatcc_json_parser_set_error@@Base>
  40da9b:	jmp    40dba4 <main@@Base+0x6d84>
  40daa0:	mov    rdi,QWORD PTR [rsp+0x8]
  40daa5:	mov    rsi,rbx
  40daa8:	mov    rdx,r14
  40daab:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40dab0:	mov    rbx,rax
  40dab3:	cmp    r15,rbx
  40dab6:	je     40dbfc <main@@Base+0x6ddc>
  40dabc:	mov    QWORD PTR [rsp+0x20],0x0
  40dac5:	mov    DWORD PTR [rsp+0x30],0x0
  40dacd:	mov    DWORD PTR [rsp+0x14],0x0
  40dad5:	xor    ebp,ebp
  40dad7:	cmp    rbx,r14
  40dada:	je     40db0c <main@@Base+0x6cec>
  40dadc:	mov    r15,QWORD PTR [rsp+0x8]
  40dae1:	mov    rdi,r15
  40dae4:	mov    rsi,rbx
  40dae7:	mov    rdx,r14
  40daea:	lea    rcx,[rsp+0x30]
  40daef:	lea    r8,[rsp+0x20]
  40daf4:	call   425160 <flatcc_json_parser_integer@@Base>
  40daf9:	cmp    rax,rbx
  40dafc:	je     40db1b <main@@Base+0x6cfb>
  40dafe:	cmp    DWORD PTR [rsp+0x30],0x0
  40db03:	je     40db25 <main@@Base+0x6d05>
  40db05:	mov    ecx,0x8
  40db0a:	jmp    40db3d <main@@Base+0x6d1d>
  40db0c:	mov    rax,r14
  40db0f:	mov    r15,QWORD PTR [rsp+0x8]
  40db14:	cmp    rbx,rax
  40db17:	jne    40db80 <main@@Base+0x6d60>
  40db19:	jmp    40db50 <main@@Base+0x6d30>
  40db1b:	mov    rax,rbx
  40db1e:	cmp    rbx,rax
  40db21:	jne    40db80 <main@@Base+0x6d60>
  40db23:	jmp    40db50 <main@@Base+0x6d30>
  40db25:	mov    rcx,QWORD PTR [rsp+0x20]
  40db2a:	mov    rdx,rcx
  40db2d:	shr    rdx,0x20
  40db31:	je     40db89 <main@@Base+0x6d69>
  40db33:	mov    ecx,0x7
  40db38:	mov    r15,QWORD PTR [rsp+0x8]
  40db3d:	mov    rdi,r15
  40db40:	mov    rsi,rax
  40db43:	mov    rdx,r14
  40db46:	call   423620 <flatcc_json_parser_set_error@@Base>
  40db4b:	cmp    rbx,rax
  40db4e:	jne    40db80 <main@@Base+0x6d60>
  40db50:	mov    rdi,r15
  40db53:	mov    rsi,rbx
  40db56:	mov    rdx,r14
  40db59:	lea    rcx,[rip+0x33be0]        # 441740 <__data_start@@Base+0x690>
  40db60:	lea    r8,[rsp+0x14]
  40db65:	call   414890 <main@@Base+0xda70>
  40db6a:	cmp    rax,rbx
  40db6d:	je     40ddb0 <main@@Base+0x6f90>
  40db73:	cmp    rax,r14
  40db76:	je     40ddb0 <main@@Base+0x6f90>
  40db7c:	mov    ebp,DWORD PTR [rsp+0x14]
  40db80:	mov    DWORD PTR [r13+0x0],ebp
  40db84:	jmp    40dc8d <main@@Base+0x6e6d>
  40db89:	mov    DWORD PTR [rsp+0x14],ecx
  40db8d:	mov    ebp,ecx
  40db8f:	jmp    40db0f <main@@Base+0x6cef>
  40db94:	mov    rdi,QWORD PTR [rsp+0x8]
  40db99:	mov    rsi,rbx
  40db9c:	mov    rdx,r14
  40db9f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40dba4:	mov    rbx,rax
  40dba7:	cmp    r15,rbx
  40dbaa:	je     40dbfc <main@@Base+0x6ddc>
  40dbac:	mov    QWORD PTR [rsp+0x20],0x0
  40dbb5:	mov    DWORD PTR [rsp+0x30],0x0
  40dbbd:	mov    DWORD PTR [rsp+0x14],0x0
  40dbc5:	xor    ebp,ebp
  40dbc7:	cmp    rbx,r14
  40dbca:	je     40dc11 <main@@Base+0x6df1>
  40dbcc:	mov    r15,QWORD PTR [rsp+0x8]
  40dbd1:	mov    rdi,r15
  40dbd4:	mov    rsi,rbx
  40dbd7:	mov    rdx,r14
  40dbda:	lea    rcx,[rsp+0x30]
  40dbdf:	lea    r8,[rsp+0x20]
  40dbe4:	call   425160 <flatcc_json_parser_integer@@Base>
  40dbe9:	cmp    rax,rbx
  40dbec:	je     40dc20 <main@@Base+0x6e00>
  40dbee:	cmp    DWORD PTR [rsp+0x30],0x0
  40dbf3:	je     40dc2a <main@@Base+0x6e0a>
  40dbf5:	mov    ecx,0x8
  40dbfa:	jmp    40dc41 <main@@Base+0x6e21>
  40dbfc:	mov    rdi,QWORD PTR [rsp+0x8]
  40dc01:	mov    rsi,r15
  40dc04:	mov    r15,rdi
  40dc07:	mov    rdx,r14
  40dc0a:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40dc0f:	jmp    40dc8d <main@@Base+0x6e6d>
  40dc11:	mov    rax,r14
  40dc14:	mov    r15,QWORD PTR [rsp+0x8]
  40dc19:	cmp    rbx,rax
  40dc1c:	jne    40dc89 <main@@Base+0x6e69>
  40dc1e:	jmp    40dc59 <main@@Base+0x6e39>
  40dc20:	mov    rax,rbx
  40dc23:	cmp    rbx,rax
  40dc26:	jne    40dc89 <main@@Base+0x6e69>
  40dc28:	jmp    40dc59 <main@@Base+0x6e39>
  40dc2a:	mov    rcx,QWORD PTR [rsp+0x20]
  40dc2f:	mov    rdx,rcx
  40dc32:	shr    rdx,0x20
  40dc36:	je     40d7fa <main@@Base+0x69da>
  40dc3c:	mov    ecx,0x7
  40dc41:	mov    r15,QWORD PTR [rsp+0x8]
  40dc46:	mov    rdi,r15
  40dc49:	mov    rsi,rax
  40dc4c:	mov    rdx,r14
  40dc4f:	call   423620 <flatcc_json_parser_set_error@@Base>
  40dc54:	cmp    rbx,rax
  40dc57:	jne    40dc89 <main@@Base+0x6e69>
  40dc59:	mov    rdi,r15
  40dc5c:	mov    rsi,rbx
  40dc5f:	mov    rdx,r14
  40dc62:	lea    rcx,[rip+0x33af7]        # 441760 <__data_start@@Base+0x6b0>
  40dc69:	lea    r8,[rsp+0x14]
  40dc6e:	call   414890 <main@@Base+0xda70>
  40dc73:	cmp    rax,rbx
  40dc76:	je     40ddb0 <main@@Base+0x6f90>
  40dc7c:	cmp    rax,r14
  40dc7f:	je     40ddb0 <main@@Base+0x6f90>
  40dc85:	mov    ebp,DWORD PTR [rsp+0x14]
  40dc89:	mov    DWORD PTR [r13+0x4],ebp
  40dc8d:	mov    rcx,r14
  40dc90:	sub    rcx,rax
  40dc93:	cmp    rcx,0x2
  40dc97:	jl     40dcb4 <main@@Base+0x6e94>
  40dc99:	cmp    BYTE PTR [rax],0x20
  40dc9c:	jg     40dcc2 <main@@Base+0x6ea2>
  40dc9e:	jne    40dcb4 <main@@Base+0x6e94>
  40dca0:	cmp    BYTE PTR [rax+0x1],0x20
  40dca4:	jle    40dcb4 <main@@Base+0x6e94>
  40dca6:	add    rax,0x1
  40dcaa:	cmp    rax,r14
  40dcad:	jne    40dcc7 <main@@Base+0x6ea7>
  40dcaf:	jmp    40dd3c <main@@Base+0x6f1c>
  40dcb4:	mov    rdi,r15
  40dcb7:	mov    rsi,rax
  40dcba:	mov    rdx,r14
  40dcbd:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40dcc2:	cmp    rax,r14
  40dcc5:	je     40dd3c <main@@Base+0x6f1c>
  40dcc7:	movzx  ecx,BYTE PTR [rax]
  40dcca:	cmp    cl,0x2c
  40dccd:	jne    40dd44 <main@@Base+0x6f24>
  40dccf:	lea    rsi,[rax+0x1]
  40dcd3:	mov    rcx,r14
  40dcd6:	sub    rcx,rsi
  40dcd9:	cmp    rcx,0x2
  40dcdd:	jl     40dcf2 <main@@Base+0x6ed2>
  40dcdf:	cmp    BYTE PTR [rsi],0x20
  40dce2:	jg     40dd00 <main@@Base+0x6ee0>
  40dce4:	jne    40dcf2 <main@@Base+0x6ed2>
  40dce6:	cmp    BYTE PTR [rax+0x2],0x20
  40dcea:	jle    40dcf2 <main@@Base+0x6ed2>
  40dcec:	add    rax,0x2
  40dcf0:	jmp    40dcfd <main@@Base+0x6edd>
  40dcf2:	mov    rdi,r15
  40dcf5:	mov    rdx,r14
  40dcf8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40dcfd:	mov    rsi,rax
  40dd00:	cmp    rsi,r14
  40dd03:	je     40dd68 <main@@Base+0x6f48>
  40dd05:	cmp    BYTE PTR [rsi],0x7d
  40dd08:	jne    40d805 <main@@Base+0x69e5>
  40dd0e:	lea    rdx,[rsi+0x1]
  40dd12:	mov    rax,r14
  40dd15:	sub    rax,rdx
  40dd18:	cmp    rax,0x2
  40dd1c:	jl     40dd91 <main@@Base+0x6f71>
  40dd1e:	cmp    BYTE PTR [rdx],0x20
  40dd21:	jg     40dd5e <main@@Base+0x6f3e>
  40dd23:	jne    40dd91 <main@@Base+0x6f71>
  40dd25:	cmp    BYTE PTR [rsi+0x2],0x20
  40dd29:	jle    40dd91 <main@@Base+0x6f71>
  40dd2b:	add    rsi,0x2
  40dd2f:	mov    rdx,rsi
  40dd32:	mov    r15,QWORD PTR [rsp+0x8]
  40dd37:	jmp    40d6fa <main@@Base+0x68da>
  40dd3c:	mov    rdx,r14
  40dd3f:	jmp    40d6fa <main@@Base+0x68da>
  40dd44:	cmp    cl,0x7d
  40dd47:	jne    40dda9 <main@@Base+0x6f89>
  40dd49:	lea    rdx,[rax+0x1]
  40dd4d:	mov    rcx,r14
  40dd50:	sub    rcx,rdx
  40dd53:	cmp    rcx,0x2
  40dd57:	jl     40dd91 <main@@Base+0x6f71>
  40dd59:	cmp    BYTE PTR [rdx],0x20
  40dd5c:	jle    40dd78 <main@@Base+0x6f58>
  40dd5e:	mov    r15,QWORD PTR [rsp+0x8]
  40dd63:	jmp    40d6fa <main@@Base+0x68da>
  40dd68:	mov    ecx,0xa
  40dd6d:	mov    rdi,r15
  40dd70:	mov    rsi,r14
  40dd73:	jmp    40d6ef <main@@Base+0x68cf>
  40dd78:	jne    40dd91 <main@@Base+0x6f71>
  40dd7a:	cmp    BYTE PTR [rax+0x2],0x20
  40dd7e:	jle    40dd91 <main@@Base+0x6f71>
  40dd80:	add    rax,0x2
  40dd84:	mov    rdx,rax
  40dd87:	mov    r15,QWORD PTR [rsp+0x8]
  40dd8c:	jmp    40d6fa <main@@Base+0x68da>
  40dd91:	mov    r15,QWORD PTR [rsp+0x8]
  40dd96:	mov    rdi,r15
  40dd99:	mov    rsi,rdx
  40dd9c:	mov    rdx,r14
  40dd9f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40dda4:	jmp    40d6f7 <main@@Base+0x68d7>
  40dda9:	mov    ecx,0xa
  40ddae:	jmp    40ddb5 <main@@Base+0x6f95>
  40ddb0:	mov    ecx,0x21
  40ddb5:	mov    r15,QWORD PTR [rsp+0x8]
  40ddba:	mov    rdi,r15
  40ddbd:	mov    rsi,rax
  40ddc0:	jmp    40d6ef <main@@Base+0x68cf>
  40ddc5:	mov    rsi,rax
  40ddc8:	mov    r15,QWORD PTR [rsp+0x8]
  40ddcd:	mov    rdi,r15
  40ddd0:	mov    rdx,r14
  40ddd3:	lea    rcx,[rsp+0x2c]
  40ddd8:	call   4074d0 <main@@Base+0x6b0>
  40dddd:	mov    r12,rax
  40dde0:	cmp    DWORD PTR [rsp+0x2c],0x0
  40dde5:	je     407501 <main@@Base+0x6e1>
  40ddeb:	mov    rdi,QWORD PTR [r15]
  40ddee:	mov    esi,0x1
  40ddf3:	call   41e010 <flatcc_builder_extend_offset_vector@@Base>
  40ddf8:	test   rax,rax
  40ddfb:	je     407501 <main@@Base+0x6e1>
  40de01:	mov    ecx,DWORD PTR [rsp+0x2c]
  40de05:	mov    DWORD PTR [rax],ecx
  40de07:	mov    rax,r14
  40de0a:	sub    rax,r12
  40de0d:	cmp    rax,0x2
  40de11:	jl     40de32 <main@@Base+0x7012>
  40de13:	cmp    BYTE PTR [r12],0x20
  40de18:	jg     40de43 <main@@Base+0x7023>
  40de1a:	jne    40de32 <main@@Base+0x7012>
  40de1c:	cmp    BYTE PTR [r12+0x1],0x20
  40de22:	jle    40de32 <main@@Base+0x7012>
  40de24:	add    r12,0x1
  40de28:	cmp    r12,r14
  40de2b:	jne    40de4c <main@@Base+0x702c>
  40de2d:	jmp    40f50c <main@@Base+0x86ec>
  40de32:	mov    rdi,r15
  40de35:	mov    rsi,r12
  40de38:	mov    rdx,r14
  40de3b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40de40:	mov    r12,rax
  40de43:	cmp    r12,r14
  40de46:	je     40f50c <main@@Base+0x86ec>
  40de4c:	movzx  eax,BYTE PTR [r12]
  40de51:	cmp    al,0x2c
  40de53:	jne    40f546 <main@@Base+0x8726>
  40de59:	lea    rsi,[r12+0x1]
  40de5e:	mov    rax,r14
  40de61:	sub    rax,rsi
  40de64:	cmp    rax,0x2
  40de68:	jl     40de8a <main@@Base+0x706a>
  40de6a:	cmp    BYTE PTR [rsi],0x20
  40de6d:	jg     40de98 <main@@Base+0x7078>
  40de6f:	jne    40de8a <main@@Base+0x706a>
  40de71:	cmp    BYTE PTR [r12+0x2],0x20
  40de77:	jle    40de8a <main@@Base+0x706a>
  40de79:	add    r12,0x2
  40de7d:	mov    rsi,r12
  40de80:	cmp    rsi,r14
  40de83:	jne    40dea1 <main@@Base+0x7081>
  40de85:	jmp    40f588 <main@@Base+0x8768>
  40de8a:	mov    rdi,r15
  40de8d:	mov    rdx,r14
  40de90:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40de95:	mov    rsi,rax
  40de98:	cmp    rsi,r14
  40de9b:	je     40f588 <main@@Base+0x8768>
  40dea1:	cmp    BYTE PTR [rsi],0x5d
  40dea4:	jne    40ddcd <main@@Base+0x6fad>
  40deaa:	lea    r13,[rsi+0x1]
  40deae:	mov    rax,r14
  40deb1:	sub    rax,r13
  40deb4:	cmp    rax,0x2
  40deb8:	jl     4105c7 <main@@Base+0x97a7>
  40debe:	cmp    BYTE PTR [r13+0x0],0x20
  40dec3:	jg     40f56e <main@@Base+0x874e>
  40dec9:	jne    4105c7 <main@@Base+0x97a7>
  40decf:	cmp    BYTE PTR [rsi+0x2],0x20
  40ded3:	jle    4105c7 <main@@Base+0x97a7>
  40ded9:	add    rsi,0x2
  40dedd:	mov    r13,rsi
  40dee0:	mov    r15,QWORD PTR [rsp+0x8]
  40dee5:	jmp    40c3e8 <main@@Base+0x55c8>
  40deea:	test   rax,0xffffffff80000000
  40def0:	je     40e195 <main@@Base+0x7375>
  40def6:	mov    ecx,0x7
  40defb:	mov    rdi,r15
  40defe:	mov    rsi,r13
  40df01:	mov    rdx,r14
  40df04:	call   423620 <flatcc_json_parser_set_error@@Base>
  40df09:	mov    r13,rax
  40df0c:	jmp    40e19c <main@@Base+0x737c>
  40df11:	mov    rdi,QWORD PTR [rsp+0x8]
  40df16:	mov    rsi,rax
  40df19:	mov    rdx,r14
  40df1c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40df21:	mov    rsi,r14
  40df24:	cmp    rax,r14
  40df27:	je     40eb8c <main@@Base+0x7d6c>
  40df2d:	cmp    BYTE PTR [rax],0x7d
  40df30:	jne    40eb89 <main@@Base+0x7d69>
  40df36:	lea    r13,[rax+0x1]
  40df3a:	mov    rcx,r14
  40df3d:	sub    rcx,r13
  40df40:	cmp    rcx,0x2
  40df44:	jl     41062d <main@@Base+0x980d>
  40df4a:	cmp    BYTE PTR [r13+0x0],0x20
  40df4f:	jg     40ff06 <main@@Base+0x90e6>
  40df55:	jne    41062d <main@@Base+0x980d>
  40df5b:	cmp    BYTE PTR [rax+0x2],0x20
  40df5f:	jle    41062d <main@@Base+0x980d>
  40df65:	add    rax,0x2
  40df69:	mov    r13,rax
  40df6c:	mov    r15,QWORD PTR [rsp+0x8]
  40df71:	jmp    40c851 <main@@Base+0x5a31>
  40df76:	mov    r13,r14
  40df79:	jmp    40aa8a <main@@Base+0x3c6a>
  40df7e:	mov    rdi,QWORD PTR [rsp+0x8]
  40df83:	mov    rsi,rax
  40df86:	mov    rdx,r14
  40df89:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40df8e:	mov    r12,r14
  40df91:	cmp    rax,r14
  40df94:	je     40f1e4 <main@@Base+0x83c4>
  40df9a:	cmp    BYTE PTR [rax],0x5d
  40df9d:	jne    40f1e1 <main@@Base+0x83c1>
  40dfa3:	lea    r13,[rax+0x1]
  40dfa7:	mov    rcx,r14
  40dfaa:	sub    rcx,r13
  40dfad:	cmp    rcx,0x2
  40dfb1:	jl     40fe5b <main@@Base+0x903b>
  40dfb7:	cmp    BYTE PTR [r13+0x0],0x20
  40dfbc:	jg     410318 <main@@Base+0x94f8>
  40dfc2:	jne    40fe5b <main@@Base+0x903b>
  40dfc8:	cmp    BYTE PTR [rax+0x2],0x20
  40dfcc:	jle    40fe5b <main@@Base+0x903b>
  40dfd2:	add    rax,0x2
  40dfd6:	jmp    410605 <main@@Base+0x97e5>
  40dfdb:	cmp    cl,0x5d
  40dfde:	jne    40e91f <main@@Base+0x7aff>
  40dfe4:	lea    r13,[rax+0x1]
  40dfe8:	mov    rcx,r14
  40dfeb:	sub    rcx,r13
  40dfee:	cmp    rcx,0x2
  40dff2:	jl     40febe <main@@Base+0x909e>
  40dff8:	cmp    BYTE PTR [r13+0x0],0x20
  40dffd:	jg     40e23c <main@@Base+0x741c>
  40e003:	jne    40febe <main@@Base+0x909e>
  40e009:	cmp    BYTE PTR [rax+0x2],0x20
  40e00d:	jle    40febe <main@@Base+0x909e>
  40e013:	add    rax,0x2
  40e017:	mov    r13,rax
  40e01a:	mov    r15,QWORD PTR [rsp+0x8]
  40e01f:	jmp    40aa8a <main@@Base+0x3c6a>
  40e024:	mov    ecx,0x9
  40e029:	mov    rdi,r15
  40e02c:	mov    rsi,r14
  40e02f:	jmp    40aa7f <main@@Base+0x3c5f>
  40e034:	mov    rdi,QWORD PTR [rsp+0x8]
  40e039:	mov    rsi,rax
  40e03c:	mov    rdx,r14
  40e03f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e044:	mov    rbx,r14
  40e047:	cmp    rax,r14
  40e04a:	je     40f3b5 <main@@Base+0x8595>
  40e050:	cmp    BYTE PTR [rax],0x5d
  40e053:	jne    40f3b2 <main@@Base+0x8592>
  40e059:	lea    r13,[rax+0x1]
  40e05d:	mov    rcx,r14
  40e060:	sub    rcx,r13
  40e063:	cmp    rcx,0x2
  40e067:	jl     40fe73 <main@@Base+0x9053>
  40e06d:	cmp    BYTE PTR [r13+0x0],0x20
  40e072:	jg     41047d <main@@Base+0x965d>
  40e078:	jne    40fe73 <main@@Base+0x9053>
  40e07e:	cmp    BYTE PTR [rax+0x2],0x20
  40e082:	jle    40fe73 <main@@Base+0x9053>
  40e088:	add    rax,0x2
  40e08c:	jmp    41047a <main@@Base+0x965a>
  40e091:	mov    rax,QWORD PTR [rsp+0x20]
  40e096:	mov    rcx,rax
  40e099:	shr    rcx,0x20
  40e09d:	je     40f139 <main@@Base+0x8319>
  40e0a3:	mov    ecx,0x7
  40e0a8:	mov    r15,QWORD PTR [rsp+0x8]
  40e0ad:	mov    rdi,r15
  40e0b0:	mov    rsi,r13
  40e0b3:	mov    rdx,r14
  40e0b6:	call   423620 <flatcc_json_parser_set_error@@Base>
  40e0bb:	mov    r13,rax
  40e0be:	mov    rbp,QWORD PTR [rsp+0x18]
  40e0c3:	cmp    rbx,r13
  40e0c6:	jne    40e106 <main@@Base+0x72e6>
  40e0c8:	mov    rdi,r15
  40e0cb:	mov    rsi,rbx
  40e0ce:	mov    rdx,r14
  40e0d1:	lea    rcx,[rip+0x331c8]        # 4412a0 <__data_start@@Base+0x1f0>
  40e0d8:	lea    r8,[rsp+0x14]
  40e0dd:	call   414890 <main@@Base+0xda70>
  40e0e2:	mov    r13,rax
  40e0e5:	cmp    rax,rbx
  40e0e8:	je     4107b7 <main@@Base+0x9997>
  40e0ee:	cmp    r13,r14
  40e0f1:	je     4107b7 <main@@Base+0x9997>
  40e0f7:	mov    r12d,DWORD PTR [rsp+0x14]
  40e0fc:	mov    r15,QWORD PTR [rsp+0x8]
  40e101:	mov    rbp,QWORD PTR [rsp+0x18]
  40e106:	test   r12d,r12d
  40e109:	jne    40e116 <main@@Base+0x72f6>
  40e10b:	test   BYTE PTR [r15+0x10],0x2
  40e110:	je     40d3f5 <main@@Base+0x65d5>
  40e116:	mov    rdi,QWORD PTR [r15]
  40e119:	mov    esi,0x11
  40e11e:	jmp    40e1fc <main@@Base+0x73dc>
  40e123:	mov    r12,QWORD PTR [rsp+0x20]
  40e128:	mov    QWORD PTR [rsp+0x30],r12
  40e12d:	mov    rbp,QWORD PTR [rsp+0x18]
  40e132:	cmp    rbx,r13
  40e135:	jne    40e175 <main@@Base+0x7355>
  40e137:	mov    rdi,r15
  40e13a:	mov    rsi,rbx
  40e13d:	mov    rdx,r14
  40e140:	lea    rcx,[rip+0x33199]        # 4412e0 <__data_start@@Base+0x230>
  40e147:	lea    r8,[rsp+0x30]
  40e14c:	call   414a40 <main@@Base+0xdc20>
  40e151:	mov    r13,rax
  40e154:	cmp    rax,rbx
  40e157:	je     4107b7 <main@@Base+0x9997>
  40e15d:	cmp    r13,r14
  40e160:	je     4107b7 <main@@Base+0x9997>
  40e166:	mov    r12,QWORD PTR [rsp+0x30]
  40e16b:	mov    r15,QWORD PTR [rsp+0x8]
  40e170:	mov    rbp,QWORD PTR [rsp+0x18]
  40e175:	test   r12,r12
  40e178:	jne    40e185 <main@@Base+0x7365>
  40e17a:	test   BYTE PTR [r15+0x10],0x2
  40e17f:	je     40d3f5 <main@@Base+0x65d5>
  40e185:	mov    rdi,QWORD PTR [r15]
  40e188:	mov    esi,0x13
  40e18d:	jmp    40f1b2 <main@@Base+0x8392>
  40e192:	neg    rax
  40e195:	mov    DWORD PTR [rsp+0x14],eax
  40e199:	mov    r12d,eax
  40e19c:	mov    rbp,QWORD PTR [rsp+0x18]
  40e1a1:	cmp    rbx,r13
  40e1a4:	jne    40e1e4 <main@@Base+0x73c4>
  40e1a6:	mov    rdi,r15
  40e1a9:	mov    rsi,rbx
  40e1ac:	mov    rdx,r14
  40e1af:	lea    rcx,[rip+0x3308a]        # 441240 <__data_start@@Base+0x190>
  40e1b6:	lea    r8,[rsp+0x14]
  40e1bb:	call   414540 <main@@Base+0xd720>
  40e1c0:	mov    r13,rax
  40e1c3:	cmp    rax,rbx
  40e1c6:	je     4107b7 <main@@Base+0x9997>
  40e1cc:	cmp    r13,r14
  40e1cf:	je     4107b7 <main@@Base+0x9997>
  40e1d5:	mov    r12d,DWORD PTR [rsp+0x14]
  40e1da:	mov    r15,QWORD PTR [rsp+0x8]
  40e1df:	mov    rbp,QWORD PTR [rsp+0x18]
  40e1e4:	test   r12d,r12d
  40e1e7:	jne    40e1f4 <main@@Base+0x73d4>
  40e1e9:	test   BYTE PTR [r15+0x10],0x2
  40e1ee:	je     40d3f5 <main@@Base+0x65d5>
  40e1f4:	mov    rdi,QWORD PTR [r15]
  40e1f7:	mov    esi,0x14
  40e1fc:	mov    edx,0x4
  40e201:	mov    ecx,0x4
  40e206:	call   41fe80 <flatcc_builder_table_add@@Base>
  40e20b:	test   rax,rax
  40e20e:	je     4107b7 <main@@Base+0x9997>
  40e214:	mov    DWORD PTR [rax],r12d
  40e217:	jmp    40d3f5 <main@@Base+0x65d5>
  40e21c:	lea    r13,[r12+0x1]
  40e221:	mov    rax,r14
  40e224:	sub    rax,r13
  40e227:	cmp    rax,0x2
  40e22b:	jl     40febe <main@@Base+0x909e>
  40e231:	cmp    BYTE PTR [r13+0x0],0x20
  40e236:	jle    40fea3 <main@@Base+0x9083>
  40e23c:	mov    r15,QWORD PTR [rsp+0x8]
  40e241:	jmp    40aa8a <main@@Base+0x3c6a>
  40e246:	mov    r12,rax
  40e249:	mov    BYTE PTR [rsp+0x14],0x0
  40e24e:	mov    r15,QWORD PTR [rsp+0x8]
  40e253:	mov    rdi,QWORD PTR [r15]
  40e256:	mov    esi,0x1
  40e25b:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40e260:	test   rax,rax
  40e263:	je     407501 <main@@Base+0x6e1>
  40e269:	mov    rbx,rax
  40e26c:	lea    rbp,[rip+0x32ead]        # 441120 <__data_start@@Base+0x70>
  40e273:	mov    QWORD PTR [rsp+0x20],0x0
  40e27c:	mov    DWORD PTR [rsp+0x30],0x0
  40e284:	mov    BYTE PTR [rsp+0x14],0x0
  40e289:	cmp    r12,r14
  40e28c:	je     40e2b9 <main@@Base+0x7499>
  40e28e:	mov    rdi,r15
  40e291:	mov    rsi,r12
  40e294:	mov    rdx,r14
  40e297:	lea    rcx,[rsp+0x30]
  40e29c:	lea    r8,[rsp+0x20]
  40e2a1:	call   425160 <flatcc_json_parser_integer@@Base>
  40e2a6:	cmp    rax,r12
  40e2a9:	je     40e2c5 <main@@Base+0x74a5>
  40e2ab:	cmp    DWORD PTR [rsp+0x30],0x0
  40e2b0:	je     40e2d1 <main@@Base+0x74b1>
  40e2b2:	mov    ecx,0x8
  40e2b7:	jmp    40e2e8 <main@@Base+0x74c8>
  40e2b9:	xor    ecx,ecx
  40e2bb:	mov    rax,r14
  40e2be:	cmp    r12,rax
  40e2c1:	jne    40e32a <main@@Base+0x750a>
  40e2c3:	jmp    40e2fd <main@@Base+0x74dd>
  40e2c5:	xor    ecx,ecx
  40e2c7:	mov    rax,r12
  40e2ca:	cmp    r12,rax
  40e2cd:	jne    40e32a <main@@Base+0x750a>
  40e2cf:	jmp    40e2fd <main@@Base+0x74dd>
  40e2d1:	mov    rcx,QWORD PTR [rsp+0x20]
  40e2d6:	cmp    rcx,0x100
  40e2dd:	jb     40e3e3 <main@@Base+0x75c3>
  40e2e3:	mov    ecx,0x7
  40e2e8:	mov    rdi,r15
  40e2eb:	mov    rsi,rax
  40e2ee:	mov    rdx,r14
  40e2f1:	call   423620 <flatcc_json_parser_set_error@@Base>
  40e2f6:	xor    ecx,ecx
  40e2f8:	cmp    r12,rax
  40e2fb:	jne    40e32a <main@@Base+0x750a>
  40e2fd:	mov    rdi,r15
  40e300:	mov    rsi,r12
  40e303:	mov    rdx,r14
  40e306:	mov    rcx,rbp
  40e309:	lea    r8,[rsp+0x14]
  40e30e:	call   412760 <main@@Base+0xb940>
  40e313:	cmp    rax,r12
  40e316:	je     4107c4 <main@@Base+0x99a4>
  40e31c:	cmp    rax,r14
  40e31f:	je     4107c4 <main@@Base+0x99a4>
  40e325:	movzx  ecx,BYTE PTR [rsp+0x14]
  40e32a:	mov    BYTE PTR [rbx],cl
  40e32c:	mov    rcx,r14
  40e32f:	sub    rcx,rax
  40e332:	cmp    rcx,0x2
  40e336:	jl     40e353 <main@@Base+0x7533>
  40e338:	cmp    BYTE PTR [rax],0x20
  40e33b:	jg     40e361 <main@@Base+0x7541>
  40e33d:	jne    40e353 <main@@Base+0x7533>
  40e33f:	cmp    BYTE PTR [rax+0x1],0x20
  40e343:	jle    40e353 <main@@Base+0x7533>
  40e345:	add    rax,0x1
  40e349:	cmp    rax,r14
  40e34c:	jne    40e36a <main@@Base+0x754a>
  40e34e:	jmp    40f598 <main@@Base+0x8778>
  40e353:	mov    rdi,r15
  40e356:	mov    rsi,rax
  40e359:	mov    rdx,r14
  40e35c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e361:	cmp    rax,r14
  40e364:	je     40f598 <main@@Base+0x8778>
  40e36a:	movzx  ecx,BYTE PTR [rax]
  40e36d:	cmp    cl,0x2c
  40e370:	jne    40f665 <main@@Base+0x8845>
  40e376:	lea    r12,[rax+0x1]
  40e37a:	mov    rcx,r14
  40e37d:	sub    rcx,r12
  40e380:	cmp    rcx,0x2
  40e384:	jl     40e39b <main@@Base+0x757b>
  40e386:	cmp    BYTE PTR [r12],0x20
  40e38b:	jg     40e3ac <main@@Base+0x758c>
  40e38d:	jne    40e39b <main@@Base+0x757b>
  40e38f:	cmp    BYTE PTR [rax+0x2],0x20
  40e393:	jle    40e39b <main@@Base+0x757b>
  40e395:	add    rax,0x2
  40e399:	jmp    40e3a9 <main@@Base+0x7589>
  40e39b:	mov    rdi,r15
  40e39e:	mov    rsi,r12
  40e3a1:	mov    rdx,r14
  40e3a4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e3a9:	mov    r12,rax
  40e3ac:	cmp    r12,r14
  40e3af:	je     40f6a2 <main@@Base+0x8882>
  40e3b5:	cmp    BYTE PTR [r12],0x5d
  40e3ba:	je     40fe31 <main@@Base+0x9011>
  40e3c0:	mov    BYTE PTR [rsp+0x14],0x0
  40e3c5:	mov    rdi,QWORD PTR [r15]
  40e3c8:	mov    esi,0x1
  40e3cd:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40e3d2:	mov    rbx,rax
  40e3d5:	test   rax,rax
  40e3d8:	jne    40e273 <main@@Base+0x7453>
  40e3de:	jmp    407501 <main@@Base+0x6e1>
  40e3e3:	mov    BYTE PTR [rsp+0x14],cl
  40e3e7:	cmp    r12,rax
  40e3ea:	jne    40e32a <main@@Base+0x750a>
  40e3f0:	jmp    40e2fd <main@@Base+0x74dd>
  40e3f5:	mov    rdi,QWORD PTR [rsp+0x8]
  40e3fa:	mov    rsi,rbx
  40e3fd:	mov    rdx,r14
  40e400:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e405:	mov    rbx,rax
  40e408:	movabs r12,0x7465737400000000
  40e412:	cmp    r15,rbx
  40e415:	je     40e96e <main@@Base+0x7b4e>
  40e41b:	mov    QWORD PTR [rsp+0x20],0x0
  40e424:	mov    DWORD PTR [rsp+0x30],0x0
  40e42c:	mov    DWORD PTR [rsp+0x14],0x0
  40e434:	xor    r12d,r12d
  40e437:	cmp    rbx,r14
  40e43a:	je     40e477 <main@@Base+0x7657>
  40e43c:	mov    rdi,QWORD PTR [rsp+0x8]
  40e441:	mov    rsi,rbx
  40e444:	mov    rdx,r14
  40e447:	lea    rcx,[rsp+0x30]
  40e44c:	lea    r8,[rsp+0x20]
  40e451:	call   425160 <flatcc_json_parser_integer@@Base>
  40e456:	cmp    rax,rbx
  40e459:	je     40e6e8 <main@@Base+0x78c8>
  40e45f:	mov    r13,rax
  40e462:	cmp    DWORD PTR [rsp+0x30],0x0
  40e467:	je     40f5a5 <main@@Base+0x8785>
  40e46d:	mov    ecx,0x8
  40e472:	jmp    40f5bc <main@@Base+0x879c>
  40e477:	mov    r13,r14
  40e47a:	jmp    41015f <main@@Base+0x933f>
  40e47f:	mov    rdi,QWORD PTR [rsp+0x8]
  40e484:	mov    rsi,rbx
  40e487:	mov    rdx,r14
  40e48a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e48f:	mov    rbx,rax
  40e492:	movabs r12,0x7465737400000000
  40e49c:	cmp    r15,rbx
  40e49f:	je     40e96e <main@@Base+0x7b4e>
  40e4a5:	mov    QWORD PTR [rsp+0x20],0x0
  40e4ae:	mov    DWORD PTR [rsp+0x14],0x0
  40e4b6:	mov    QWORD PTR [rsp+0x30],0x0
  40e4bf:	cmp    rbx,r14
  40e4c2:	je     40e521 <main@@Base+0x7701>
  40e4c4:	mov    rdi,QWORD PTR [rsp+0x8]
  40e4c9:	mov    rsi,rbx
  40e4cc:	mov    rdx,r14
  40e4cf:	lea    rcx,[rsp+0x14]
  40e4d4:	lea    r8,[rsp+0x20]
  40e4d9:	call   425160 <flatcc_json_parser_integer@@Base>
  40e4de:	cmp    rax,rbx
  40e4e1:	je     40e6f0 <main@@Base+0x78d0>
  40e4e7:	mov    r13,rax
  40e4ea:	cmp    DWORD PTR [rsp+0x14],0x0
  40e4ef:	je     40f5e0 <main@@Base+0x87c0>
  40e4f5:	mov    ecx,0x8
  40e4fa:	mov    r15,QWORD PTR [rsp+0x8]
  40e4ff:	mov    rdi,r15
  40e502:	mov    rsi,r13
  40e505:	mov    rdx,r14
  40e508:	call   423620 <flatcc_json_parser_set_error@@Base>
  40e50d:	mov    r13,rax
  40e510:	xor    r12d,r12d
  40e513:	cmp    rbx,r13
  40e516:	jne    40f62d <main@@Base+0x880d>
  40e51c:	jmp    40f5f4 <main@@Base+0x87d4>
  40e521:	xor    r12d,r12d
  40e524:	mov    r13,r14
  40e527:	jmp    40f5ea <main@@Base+0x87ca>
  40e52c:	mov    rdi,QWORD PTR [rsp+0x8]
  40e531:	mov    rsi,rax
  40e534:	mov    rdx,r14
  40e537:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e53c:	mov    rsi,r14
  40e53f:	cmp    rax,r14
  40e542:	je     40f6b5 <main@@Base+0x8895>
  40e548:	cmp    BYTE PTR [rax],0x7d
  40e54b:	jne    40f6b2 <main@@Base+0x8892>
  40e551:	lea    r13,[rax+0x1]
  40e555:	mov    rcx,r14
  40e558:	sub    rcx,r13
  40e55b:	cmp    rcx,0x2
  40e55f:	jl     410693 <main@@Base+0x9873>
  40e565:	cmp    BYTE PTR [r13+0x0],0x20
  40e56a:	jg     41034a <main@@Base+0x952a>
  40e570:	jne    410693 <main@@Base+0x9873>
  40e576:	cmp    BYTE PTR [rax+0x2],0x20
  40e57a:	jle    410693 <main@@Base+0x9873>
  40e580:	add    rax,0x2
  40e584:	mov    r13,rax
  40e587:	mov    r15,QWORD PTR [rsp+0x8]
  40e58c:	jmp    40cc4b <main@@Base+0x5e2b>
  40e591:	mov    rdi,QWORD PTR [rsp+0x8]
  40e596:	mov    rsi,rax
  40e599:	mov    rdx,r14
  40e59c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e5a1:	mov    rsi,r14
  40e5a4:	cmp    rax,r14
  40e5a7:	je     40e5b5 <main@@Base+0x7795>
  40e5a9:	cmp    BYTE PTR [rax],0x7d
  40e5ac:	je     4101e3 <main@@Base+0x93c3>
  40e5b2:	mov    rsi,rax
  40e5b5:	mov    r15,QWORD PTR [rsp+0x8]
  40e5ba:	mov    rax,r14
  40e5bd:	cmp    rsi,r14
  40e5c0:	je     40e5e0 <main@@Base+0x77c0>
  40e5c2:	cmp    BYTE PTR [rsi],0x22
  40e5c5:	jne    40e5d0 <main@@Base+0x77b0>
  40e5c7:	add    rsi,0x1
  40e5cb:	mov    rax,rsi
  40e5ce:	jmp    40e5e0 <main@@Base+0x77c0>
  40e5d0:	mov    ecx,0x5
  40e5d5:	mov    rdi,r15
  40e5d8:	mov    rdx,r14
  40e5db:	call   423620 <flatcc_json_parser_set_error@@Base>
  40e5e0:	mov    rdi,r15
  40e5e3:	mov    rsi,rax
  40e5e6:	mov    rdx,r14
  40e5e9:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40e5ee:	mov    rcx,r14
  40e5f1:	sub    rcx,rax
  40e5f4:	cmp    rcx,0x2
  40e5f8:	jl     40e615 <main@@Base+0x77f5>
  40e5fa:	cmp    BYTE PTR [rax],0x20
  40e5fd:	jg     40e623 <main@@Base+0x7803>
  40e5ff:	jne    40e615 <main@@Base+0x77f5>
  40e601:	cmp    BYTE PTR [rax+0x1],0x20
  40e605:	jle    40e615 <main@@Base+0x77f5>
  40e607:	add    rax,0x1
  40e60b:	cmp    rax,r14
  40e60e:	jne    40e62c <main@@Base+0x780c>
  40e610:	jmp    410143 <main@@Base+0x9323>
  40e615:	mov    rdi,r15
  40e618:	mov    rsi,rax
  40e61b:	mov    rdx,r14
  40e61e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e623:	cmp    rax,r14
  40e626:	je     410143 <main@@Base+0x9323>
  40e62c:	movzx  ecx,BYTE PTR [rax]
  40e62f:	cmp    cl,0x2c
  40e632:	jne    4101da <main@@Base+0x93ba>
  40e638:	lea    rsi,[rax+0x1]
  40e63c:	mov    rcx,r14
  40e63f:	sub    rcx,rsi
  40e642:	cmp    rcx,0x2
  40e646:	jl     40e65b <main@@Base+0x783b>
  40e648:	cmp    BYTE PTR [rsi],0x20
  40e64b:	jg     40e669 <main@@Base+0x7849>
  40e64d:	jne    40e65b <main@@Base+0x783b>
  40e64f:	cmp    BYTE PTR [rax+0x2],0x20
  40e653:	jle    40e65b <main@@Base+0x783b>
  40e655:	add    rax,0x2
  40e659:	jmp    40e666 <main@@Base+0x7846>
  40e65b:	mov    rdi,r15
  40e65e:	mov    rdx,r14
  40e661:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e666:	mov    rsi,rax
  40e669:	cmp    rsi,r14
  40e66c:	je     41028a <main@@Base+0x946a>
  40e672:	cmp    BYTE PTR [rsi],0x7d
  40e675:	jne    40e5ba <main@@Base+0x779a>
  40e67b:	lea    r13,[rsi+0x1]
  40e67f:	mov    rax,r14
  40e682:	sub    rax,r13
  40e685:	cmp    rax,0x2
  40e689:	jl     410213 <main@@Base+0x93f3>
  40e68f:	cmp    BYTE PTR [r13+0x0],0x20
  40e694:	jg     410209 <main@@Base+0x93e9>
  40e69a:	jne    410213 <main@@Base+0x93f3>
  40e6a0:	cmp    BYTE PTR [rsi+0x2],0x20
  40e6a4:	jle    410213 <main@@Base+0x93f3>
  40e6aa:	add    rsi,0x2
  40e6ae:	mov    r13,rsi
  40e6b1:	jmp    410209 <main@@Base+0x93e9>
  40e6b6:	mov    ecx,0x16
  40e6bb:	mov    rdi,QWORD PTR [rsp+0x8]
  40e6c0:	mov    rsi,r12
  40e6c3:	mov    rdx,r14
  40e6c6:	call   423620 <flatcc_json_parser_set_error@@Base>
  40e6cb:	jmp    410541 <main@@Base+0x9721>
  40e6d0:	mov    r15,QWORD PTR [rsp+0x8]
  40e6d5:	mov    rdi,r15
  40e6d8:	mov    rsi,r13
  40e6db:	mov    rdx,r14
  40e6de:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e6e3:	jmp    40c808 <main@@Base+0x59e8>
  40e6e8:	mov    r13,rbx
  40e6eb:	jmp    41015f <main@@Base+0x933f>
  40e6f0:	xor    r12d,r12d
  40e6f3:	mov    r13,rbx
  40e6f6:	jmp    40f5ea <main@@Base+0x87ca>
  40e6fb:	mov    r15,QWORD PTR [rsp+0x8]
  40e700:	mov    rbp,QWORD PTR [rsp+0x18]
  40e705:	movabs r12,0x7465737400000000
  40e70f:	je     40a750 <main@@Base+0x3930>
  40e715:	mov    rdi,r15
  40e718:	mov    rsi,r13
  40e71b:	mov    rdx,r14
  40e71e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e723:	mov    r13,rax
  40e726:	jmp    40a6cd <main@@Base+0x38ad>
  40e72b:	mov    rsi,rax
  40e72e:	mov    r15,QWORD PTR [rsp+0x8]
  40e733:	mov    rdi,r15
  40e736:	mov    rdx,r14
  40e739:	lea    rcx,[rsp+0x2c]
  40e73e:	call   425630 <flatcc_json_parser_build_string@@Base>
  40e743:	mov    r12,rax
  40e746:	cmp    DWORD PTR [rsp+0x2c],0x0
  40e74b:	je     407501 <main@@Base+0x6e1>
  40e751:	mov    rdi,QWORD PTR [r15]
  40e754:	mov    esi,0x1
  40e759:	call   41e010 <flatcc_builder_extend_offset_vector@@Base>
  40e75e:	test   rax,rax
  40e761:	je     407501 <main@@Base+0x6e1>
  40e767:	mov    ecx,DWORD PTR [rsp+0x2c]
  40e76b:	mov    DWORD PTR [rax],ecx
  40e76d:	mov    rax,r14
  40e770:	sub    rax,r12
  40e773:	cmp    rax,0x2
  40e777:	jl     40e798 <main@@Base+0x7978>
  40e779:	cmp    BYTE PTR [r12],0x20
  40e77e:	jg     40e7a9 <main@@Base+0x7989>
  40e780:	jne    40e798 <main@@Base+0x7978>
  40e782:	cmp    BYTE PTR [r12+0x1],0x20
  40e788:	jle    40e798 <main@@Base+0x7978>
  40e78a:	add    r12,0x1
  40e78e:	cmp    r12,r14
  40e791:	jne    40e7b2 <main@@Base+0x7992>
  40e793:	jmp    4100cb <main@@Base+0x92ab>
  40e798:	mov    rdi,r15
  40e79b:	mov    rsi,r12
  40e79e:	mov    rdx,r14
  40e7a1:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e7a6:	mov    r12,rax
  40e7a9:	cmp    r12,r14
  40e7ac:	je     4100cb <main@@Base+0x92ab>
  40e7b2:	movzx  eax,BYTE PTR [r12]
  40e7b7:	cmp    al,0x2c
  40e7b9:	jne    4100e3 <main@@Base+0x92c3>
  40e7bf:	lea    rsi,[r12+0x1]
  40e7c4:	mov    rax,r14
  40e7c7:	sub    rax,rsi
  40e7ca:	cmp    rax,0x2
  40e7ce:	jl     40e7f0 <main@@Base+0x79d0>
  40e7d0:	cmp    BYTE PTR [rsi],0x20
  40e7d3:	jg     40e7fe <main@@Base+0x79de>
  40e7d5:	jne    40e7f0 <main@@Base+0x79d0>
  40e7d7:	cmp    BYTE PTR [r12+0x2],0x20
  40e7dd:	jle    40e7f0 <main@@Base+0x79d0>
  40e7df:	add    r12,0x2
  40e7e3:	mov    rsi,r12
  40e7e6:	cmp    rsi,r14
  40e7e9:	jne    40e807 <main@@Base+0x79e7>
  40e7eb:	jmp    410133 <main@@Base+0x9313>
  40e7f0:	mov    rdi,r15
  40e7f3:	mov    rdx,r14
  40e7f6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e7fb:	mov    rsi,rax
  40e7fe:	cmp    rsi,r14
  40e801:	je     410133 <main@@Base+0x9313>
  40e807:	cmp    BYTE PTR [rsi],0x5d
  40e80a:	jne    40e733 <main@@Base+0x7913>
  40e810:	lea    r13,[rsi+0x1]
  40e814:	mov    rax,r14
  40e817:	sub    rax,r13
  40e81a:	cmp    rax,0x2
  40e81e:	jl     410660 <main@@Base+0x9840>
  40e824:	cmp    BYTE PTR [r13+0x0],0x20
  40e829:	jg     41010b <main@@Base+0x92eb>
  40e82f:	jne    410660 <main@@Base+0x9840>
  40e835:	cmp    BYTE PTR [rsi+0x2],0x20
  40e839:	jle    410660 <main@@Base+0x9840>
  40e83f:	add    rsi,0x2
  40e843:	mov    r13,rsi
  40e846:	mov    r15,QWORD PTR [rsp+0x8]
  40e84b:	jmp    40d0ff <main@@Base+0x62df>
  40e850:	mov    r15,QWORD PTR [rsp+0x8]
  40e855:	jne    40e866 <main@@Base+0x7a46>
  40e857:	cmp    BYTE PTR [rax+0x2],0x20
  40e85b:	jle    40e866 <main@@Base+0x7a46>
  40e85d:	add    rax,0x2
  40e861:	jmp    40d3ed <main@@Base+0x65cd>
  40e866:	mov    rdi,r15
  40e869:	mov    rsi,r13
  40e86c:	mov    rdx,r14
  40e86f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e874:	jmp    40d3ed <main@@Base+0x65cd>
  40e879:	mov    r13,r14
  40e87c:	jmp    40c324 <main@@Base+0x5504>
  40e881:	cmp    al,0x5d
  40e883:	jne    40fe8e <main@@Base+0x906e>
  40e889:	lea    r13,[rdx+0x1]
  40e88d:	mov    rax,r14
  40e890:	sub    rax,r13
  40e893:	cmp    rax,0x2
  40e897:	jl     4103dd <main@@Base+0x95bd>
  40e89d:	cmp    BYTE PTR [r13+0x0],0x20
  40e8a2:	jg     40eb7f <main@@Base+0x7d5f>
  40e8a8:	jne    4103dd <main@@Base+0x95bd>
  40e8ae:	cmp    BYTE PTR [rdx+0x2],0x20
  40e8b2:	jle    4103dd <main@@Base+0x95bd>
  40e8b8:	add    rdx,0x2
  40e8bc:	mov    r13,rdx
  40e8bf:	mov    r15,QWORD PTR [rsp+0x8]
  40e8c4:	jmp    40c324 <main@@Base+0x5504>
  40e8c9:	mov    r12,r13
  40e8cc:	mov    r15,QWORD PTR [rsp+0x8]
  40e8d1:	mov    ecx,0x21
  40e8d6:	mov    rdi,r15
  40e8d9:	mov    rsi,r12
  40e8dc:	mov    rdx,r14
  40e8df:	call   423620 <flatcc_json_parser_set_error@@Base>
  40e8e4:	mov    r13,rax
  40e8e7:	cmp    DWORD PTR [rsp+0x2c],0x0
  40e8ec:	mov    r12,rax
  40e8ef:	je     407501 <main@@Base+0x6e1>
  40e8f5:	mov    rdi,QWORD PTR [r15]
  40e8f8:	mov    esi,0xe
  40e8fd:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  40e902:	test   rax,rax
  40e905:	mov    rbp,QWORD PTR [rsp+0x18]
  40e90a:	movabs r12,0x7465737400000000
  40e914:	jne    40a6f7 <main@@Base+0x38d7>
  40e91a:	jmp    41078b <main@@Base+0x996b>
  40e91f:	mov    ecx,0x9
  40e924:	mov    r15,QWORD PTR [rsp+0x8]
  40e929:	mov    rdi,r15
  40e92c:	mov    rsi,rax
  40e92f:	jmp    40aa7f <main@@Base+0x3c5f>
  40e934:	mov    ecx,0x9
  40e939:	mov    rdi,r15
  40e93c:	mov    rsi,r14
  40e93f:	jmp    40c319 <main@@Base+0x54f9>
  40e944:	movabs r12,0x7465737400000000
  40e94e:	jne    40ea3a <main@@Base+0x7c1a>
  40e954:	cmp    BYTE PTR [rsi+0x2],0x20
  40e958:	jle    40ea3a <main@@Base+0x7c1a>
  40e95e:	add    rsi,0x2
  40e962:	mov    rbx,rsi
  40e965:	cmp    r15,rbx
  40e968:	jne    40ea56 <main@@Base+0x7c36>
  40e96e:	mov    rdi,QWORD PTR [rsp+0x8]
  40e973:	mov    rsi,r15
  40e976:	mov    r15,rdi
  40e979:	mov    rdx,r14
  40e97c:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40e981:	mov    r13,rax
  40e984:	mov    rbp,QWORD PTR [rsp+0x18]
  40e989:	mov    rax,r14
  40e98c:	sub    rax,r13
  40e98f:	cmp    rax,0x2
  40e993:	jl     40e9c0 <main@@Base+0x7ba0>
  40e995:	cmp    BYTE PTR [r13+0x0],0x20
  40e99a:	jg     40e9d1 <main@@Base+0x7bb1>
  40e99c:	jne    40e9c0 <main@@Base+0x7ba0>
  40e99e:	cmp    BYTE PTR [r13+0x1],0x20
  40e9a3:	jle    40e9c0 <main@@Base+0x7ba0>
  40e9a5:	add    r13,0x1
  40e9a9:	cmp    r13,r14
  40e9ac:	jne    40e9da <main@@Base+0x7bba>
  40e9ae:	jmp    4106be <main@@Base+0x989e>
  40e9b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e9bd:	nop    DWORD PTR [rax]
  40e9c0:	mov    rdi,r15
  40e9c3:	mov    rsi,r13
  40e9c6:	mov    rdx,r14
  40e9c9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40e9ce:	mov    r13,rax
  40e9d1:	cmp    r13,r14
  40e9d4:	je     4106be <main@@Base+0x989e>
  40e9da:	mov    al,BYTE PTR [r13+0x0]
  40e9de:	cmp    al,0x2c
  40e9e0:	jne    4106c6 <main@@Base+0x98a6>
  40e9e6:	lea    rsi,[r13+0x1]
  40e9ea:	mov    rax,r14
  40e9ed:	sub    rax,rsi
  40e9f0:	cmp    rax,0x2
  40e9f4:	jl     40ea10 <main@@Base+0x7bf0>
  40e9f6:	cmp    BYTE PTR [rsi],0x20
  40e9f9:	jg     40ea1e <main@@Base+0x7bfe>
  40e9fb:	jne    40ea10 <main@@Base+0x7bf0>
  40e9fd:	cmp    BYTE PTR [r13+0x2],0x20
  40ea02:	jle    40ea10 <main@@Base+0x7bf0>
  40ea04:	add    r13,0x2
  40ea08:	mov    rsi,r13
  40ea0b:	jmp    40ea1e <main@@Base+0x7bfe>
  40ea0d:	nop    DWORD PTR [rax]
  40ea10:	mov    rdi,r15
  40ea13:	mov    rdx,r14
  40ea16:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ea1b:	mov    rsi,rax
  40ea1e:	cmp    rsi,r14
  40ea21:	mov    rbx,QWORD PTR [rsp+0x38]
  40ea26:	je     41070a <main@@Base+0x98ea>
  40ea2c:	cmp    BYTE PTR [rsi],0x7d
  40ea2f:	jne    407690 <main@@Base+0x870>
  40ea35:	jmp    41071f <main@@Base+0x98ff>
  40ea3a:	mov    rdi,QWORD PTR [rsp+0x8]
  40ea3f:	mov    rsi,rbx
  40ea42:	mov    rdx,r14
  40ea45:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ea4a:	mov    rbx,rax
  40ea4d:	cmp    r15,rbx
  40ea50:	je     40e96e <main@@Base+0x7b4e>
  40ea56:	mov    QWORD PTR [rsp+0x20],0x0
  40ea5f:	mov    DWORD PTR [rsp+0x14],0x0
  40ea67:	mov    QWORD PTR [rsp+0x30],0x0
  40ea70:	cmp    rbx,r14
  40ea73:	je     40eac0 <main@@Base+0x7ca0>
  40ea75:	mov    r15,QWORD PTR [rsp+0x8]
  40ea7a:	mov    rdi,r15
  40ea7d:	mov    rsi,rbx
  40ea80:	mov    rdx,r14
  40ea83:	lea    rcx,[rsp+0x14]
  40ea88:	lea    r8,[rsp+0x20]
  40ea8d:	call   425160 <flatcc_json_parser_integer@@Base>
  40ea92:	cmp    rax,rbx
  40ea95:	je     40eacb <main@@Base+0x7cab>
  40ea97:	mov    r13,rax
  40ea9a:	mov    r12,QWORD PTR [rsp+0x20]
  40ea9f:	cmp    DWORD PTR [rsp+0x14],0x0
  40eaa4:	je     40ead6 <main@@Base+0x7cb6>
  40eaa6:	movabs rax,0x8000000000000000
  40eab0:	cmp    r12,rax
  40eab3:	jbe    40f145 <main@@Base+0x8325>
  40eab9:	mov    ecx,0x8
  40eabe:	jmp    40eae4 <main@@Base+0x7cc4>
  40eac0:	xor    r12d,r12d
  40eac3:	mov    r13,r14
  40eac6:	jmp    40f14d <main@@Base+0x832d>
  40eacb:	xor    r12d,r12d
  40eace:	mov    r13,rbx
  40ead1:	jmp    40f152 <main@@Base+0x8332>
  40ead6:	test   r12,r12
  40ead9:	jns    40f148 <main@@Base+0x8328>
  40eadf:	mov    ecx,0x7
  40eae4:	mov    r15,QWORD PTR [rsp+0x8]
  40eae9:	mov    rdi,r15
  40eaec:	mov    rsi,r13
  40eaef:	mov    rdx,r14
  40eaf2:	call   423620 <flatcc_json_parser_set_error@@Base>
  40eaf7:	mov    r13,rax
  40eafa:	xor    r12d,r12d
  40eafd:	jmp    40f152 <main@@Base+0x8332>
  40eb02:	mov    rdi,QWORD PTR [rsp+0x8]
  40eb07:	mov    rsi,rax
  40eb0a:	mov    rdx,r14
  40eb0d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40eb12:	mov    r12,r14
  40eb15:	cmp    rax,r14
  40eb18:	je     40ff13 <main@@Base+0x90f3>
  40eb1e:	cmp    BYTE PTR [rax],0x5d
  40eb21:	jne    40ff10 <main@@Base+0x90f0>
  40eb27:	lea    r13,[rax+0x1]
  40eb2b:	mov    rcx,r14
  40eb2e:	sub    rcx,r13
  40eb31:	cmp    rcx,0x2
  40eb35:	jl     410531 <main@@Base+0x9711>
  40eb3b:	cmp    BYTE PTR [r13+0x0],0x20
  40eb40:	jg     410544 <main@@Base+0x9724>
  40eb46:	jne    410531 <main@@Base+0x9711>
  40eb4c:	cmp    BYTE PTR [rax+0x2],0x20
  40eb50:	jle    410531 <main@@Base+0x9711>
  40eb56:	add    rax,0x2
  40eb5a:	jmp    410541 <main@@Base+0x9721>
  40eb5f:	lea    r13,[r12+0x1]
  40eb64:	mov    rax,r14
  40eb67:	sub    rax,r13
  40eb6a:	cmp    rax,0x2
  40eb6e:	jl     4103dd <main@@Base+0x95bd>
  40eb74:	cmp    BYTE PTR [r13+0x0],0x20
  40eb79:	jle    4103c2 <main@@Base+0x95a2>
  40eb7f:	mov    r15,QWORD PTR [rsp+0x8]
  40eb84:	jmp    40c324 <main@@Base+0x5504>
  40eb89:	mov    rsi,rax
  40eb8c:	mov    r15,r14
  40eb8f:	cmp    rsi,r14
  40eb92:	je     40ebb7 <main@@Base+0x7d97>
  40eb94:	cmp    BYTE PTR [rsi],0x22
  40eb97:	jne    40eba2 <main@@Base+0x7d82>
  40eb99:	add    rsi,0x1
  40eb9d:	mov    r15,rsi
  40eba0:	jmp    40ebb7 <main@@Base+0x7d97>
  40eba2:	mov    ecx,0x5
  40eba7:	mov    rdi,QWORD PTR [rsp+0x8]
  40ebac:	mov    rdx,r14
  40ebaf:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ebb4:	mov    r15,rax
  40ebb7:	mov    rcx,r14
  40ebba:	sub    rcx,r15
  40ebbd:	cmp    rcx,0x8
  40ebc1:	jb     40ebcd <main@@Base+0x7dad>
  40ebc3:	movbe  rax,QWORD PTR [r15]
  40ebc8:	jmp    40ec56 <main@@Base+0x7e36>
  40ebcd:	mov    eax,ecx
  40ebcf:	and    al,0xf
  40ebd1:	add    al,0xff
  40ebd3:	cmp    al,0x7
  40ebd5:	ja     40f03e <main@@Base+0x821e>
  40ebdb:	movzx  eax,al
  40ebde:	lea    rdx,[rip+0x245db]        # 4331c0 <_IO_stdin_used@@Base+0x1c0>
  40ebe5:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ebe9:	add    rax,rdx
  40ebec:	xor    r8d,r8d
  40ebef:	xor    r9d,r9d
  40ebf2:	xor    edx,edx
  40ebf4:	xor    esi,esi
  40ebf6:	xor    ebx,ebx
  40ebf8:	xor    edi,edi
  40ebfa:	xor    ebp,ebp
  40ebfc:	jmp    rax
  40ebfe:	movsx  r8,BYTE PTR [r15+0x7]
  40ec03:	movsx  r9,BYTE PTR [r15+0x6]
  40ec08:	shl    r9,0x8
  40ec0c:	or     r9,r8
  40ec0f:	movsx  rdx,BYTE PTR [r15+0x5]
  40ec14:	shl    rdx,0x10
  40ec18:	or     rdx,r9
  40ec1b:	movsx  rsi,BYTE PTR [r15+0x4]
  40ec20:	shl    rsi,0x18
  40ec24:	or     rsi,rdx
  40ec27:	movsx  rbx,BYTE PTR [r15+0x3]
  40ec2c:	shl    rbx,0x20
  40ec30:	or     rbx,rsi
  40ec33:	movsx  rdi,BYTE PTR [r15+0x2]
  40ec38:	shl    rdi,0x28
  40ec3c:	or     rdi,rbx
  40ec3f:	movsx  rbp,BYTE PTR [r15+0x1]
  40ec44:	shl    rbp,0x30
  40ec48:	or     rbp,rdi
  40ec4b:	movzx  eax,BYTE PTR [r15]
  40ec4f:	shl    rax,0x38
  40ec53:	or     rax,rbp
  40ec56:	movabs rdx,0x6e65737465640000
  40ec60:	cmp    rax,rdx
  40ec63:	jae    40ece0 <main@@Base+0x7ec0>
  40ec65:	movabs rdx,0xffffffff00000000
  40ec6f:	and    rax,rdx
  40ec72:	movabs rdx,0x6461746100000000
  40ec7c:	cmp    rax,rdx
  40ec7f:	jne    40f03e <main@@Base+0x821e>
  40ec85:	mov    rax,r15
  40ec88:	cmp    rcx,0x5
  40ec8c:	jl     40ef51 <main@@Base+0x8131>
  40ec92:	cmp    BYTE PTR [r15+0x4],0x22
  40ec97:	mov    rax,r15
  40ec9a:	jne    40ef51 <main@@Base+0x8131>
  40eca0:	lea    rsi,[r15+0x5]
  40eca4:	mov    rax,r14
  40eca7:	sub    rax,rsi
  40ecaa:	cmp    rax,0x2
  40ecae:	jl     40edc5 <main@@Base+0x7fa5>
  40ecb4:	cmp    BYTE PTR [rsi],0x20
  40ecb7:	jg     40edd5 <main@@Base+0x7fb5>
  40ecbd:	jne    40edc5 <main@@Base+0x7fa5>
  40ecc3:	cmp    BYTE PTR [r15+0x6],0x20
  40ecc8:	jle    40edc5 <main@@Base+0x7fa5>
  40ecce:	lea    rsi,[r15+0x6]
  40ecd2:	cmp    rsi,r14
  40ecd5:	jne    40edde <main@@Base+0x7fbe>
  40ecdb:	jmp    40ee85 <main@@Base+0x8065>
  40ece0:	mov    rdx,rax
  40ece3:	shr    rdx,0x8
  40ece7:	movabs rsi,0x75726c64617461
  40ecf1:	cmp    rdx,rsi
  40ecf4:	jne    40ed51 <main@@Base+0x7f31>
  40ecf6:	mov    rax,r15
  40ecf9:	cmp    rcx,0x8
  40ecfd:	jl     40ef9f <main@@Base+0x817f>
  40ed03:	cmp    BYTE PTR [r15+0x7],0x22
  40ed08:	mov    rax,r15
  40ed0b:	jne    40ef9f <main@@Base+0x817f>
  40ed11:	lea    rsi,[r15+0x8]
  40ed15:	mov    rax,r14
  40ed18:	sub    rax,rsi
  40ed1b:	cmp    rax,0x2
  40ed1f:	jl     40ee29 <main@@Base+0x8009>
  40ed25:	cmp    BYTE PTR [rsi],0x20
  40ed28:	jg     40ee39 <main@@Base+0x8019>
  40ed2e:	jne    40ee29 <main@@Base+0x8009>
  40ed34:	cmp    BYTE PTR [r15+0x9],0x20
  40ed39:	jle    40ee29 <main@@Base+0x8009>
  40ed3f:	lea    rsi,[r15+0x9]
  40ed43:	cmp    rsi,r14
  40ed46:	jne    40ee3e <main@@Base+0x801e>
  40ed4c:	jmp    40eea5 <main@@Base+0x8085>
  40ed51:	and    rax,0xffffffffffff0000
  40ed57:	movabs rdx,0x6e65737465640000
  40ed61:	cmp    rax,rdx
  40ed64:	jne    40f03e <main@@Base+0x821e>
  40ed6a:	mov    rax,r15
  40ed6d:	cmp    rcx,0x7
  40ed71:	jl     40eff0 <main@@Base+0x81d0>
  40ed77:	cmp    BYTE PTR [r15+0x6],0x22
  40ed7c:	mov    rax,r15
  40ed7f:	jne    40eff0 <main@@Base+0x81d0>
  40ed85:	lea    rsi,[r15+0x7]
  40ed89:	mov    rax,r14
  40ed8c:	sub    rax,rsi
  40ed8f:	cmp    rax,0x2
  40ed93:	jl     40eec5 <main@@Base+0x80a5>
  40ed99:	cmp    BYTE PTR [rsi],0x20
  40ed9c:	jg     40eed5 <main@@Base+0x80b5>
  40eda2:	jne    40eec5 <main@@Base+0x80a5>
  40eda8:	cmp    BYTE PTR [r15+0x8],0x20
  40edad:	jle    40eec5 <main@@Base+0x80a5>
  40edb3:	lea    rsi,[r15+0x8]
  40edb7:	cmp    rsi,r14
  40edba:	jne    40eeda <main@@Base+0x80ba>
  40edc0:	jmp    40ef21 <main@@Base+0x8101>
  40edc5:	mov    rdi,QWORD PTR [rsp+0x8]
  40edca:	mov    rdx,r14
  40edcd:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40edd2:	mov    rsi,rax
  40edd5:	cmp    rsi,r14
  40edd8:	je     40ee85 <main@@Base+0x8065>
  40edde:	cmp    BYTE PTR [rsi],0x3a
  40ede1:	jne    40ee85 <main@@Base+0x8065>
  40ede7:	lea    rax,[rsi+0x1]
  40edeb:	mov    rcx,r14
  40edee:	sub    rcx,rax
  40edf1:	cmp    rcx,0x2
  40edf5:	jl     40ef41 <main@@Base+0x8121>
  40edfb:	cmp    BYTE PTR [rax],0x20
  40edfe:	jg     40ef51 <main@@Base+0x8131>
  40ee04:	jne    40ef41 <main@@Base+0x8121>
  40ee0a:	cmp    BYTE PTR [rsi+0x2],0x20
  40ee0e:	jle    40ef41 <main@@Base+0x8121>
  40ee14:	add    rsi,0x2
  40ee18:	mov    rax,rsi
  40ee1b:	cmp    r15,rax
  40ee1e:	jne    40ef5a <main@@Base+0x813a>
  40ee24:	jmp    40f03e <main@@Base+0x821e>
  40ee29:	mov    rdi,QWORD PTR [rsp+0x8]
  40ee2e:	mov    rdx,r14
  40ee31:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ee36:	mov    rsi,rax
  40ee39:	cmp    rsi,r14
  40ee3c:	je     40eea5 <main@@Base+0x8085>
  40ee3e:	cmp    BYTE PTR [rsi],0x3a
  40ee41:	jne    40eea5 <main@@Base+0x8085>
  40ee43:	lea    rax,[rsi+0x1]
  40ee47:	mov    rcx,r14
  40ee4a:	sub    rcx,rax
  40ee4d:	cmp    rcx,0x2
  40ee51:	jl     40ef8f <main@@Base+0x816f>
  40ee57:	cmp    BYTE PTR [rax],0x20
  40ee5a:	jg     40ef9f <main@@Base+0x817f>
  40ee60:	jne    40ef8f <main@@Base+0x816f>
  40ee66:	cmp    BYTE PTR [rsi+0x2],0x20
  40ee6a:	jle    40ef8f <main@@Base+0x816f>
  40ee70:	add    rsi,0x2
  40ee74:	mov    rax,rsi
  40ee77:	cmp    r15,rax
  40ee7a:	jne    40efa8 <main@@Base+0x8188>
  40ee80:	jmp    40f03e <main@@Base+0x821e>
  40ee85:	mov    ecx,0x4
  40ee8a:	mov    rdi,QWORD PTR [rsp+0x8]
  40ee8f:	mov    rdx,r14
  40ee92:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ee97:	cmp    r15,rax
  40ee9a:	jne    40ef5a <main@@Base+0x813a>
  40eea0:	jmp    40f03e <main@@Base+0x821e>
  40eea5:	mov    ecx,0x4
  40eeaa:	mov    rdi,QWORD PTR [rsp+0x8]
  40eeaf:	mov    rdx,r14
  40eeb2:	call   423620 <flatcc_json_parser_set_error@@Base>
  40eeb7:	cmp    r15,rax
  40eeba:	jne    40efa8 <main@@Base+0x8188>
  40eec0:	jmp    40f03e <main@@Base+0x821e>
  40eec5:	mov    rdi,QWORD PTR [rsp+0x8]
  40eeca:	mov    rdx,r14
  40eecd:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40eed2:	mov    rsi,rax
  40eed5:	cmp    rsi,r14
  40eed8:	je     40ef21 <main@@Base+0x8101>
  40eeda:	cmp    BYTE PTR [rsi],0x3a
  40eedd:	jne    40ef21 <main@@Base+0x8101>
  40eedf:	lea    rax,[rsi+0x1]
  40eee3:	mov    rcx,r14
  40eee6:	sub    rcx,rax
  40eee9:	cmp    rcx,0x2
  40eeed:	jl     40efe0 <main@@Base+0x81c0>
  40eef3:	cmp    BYTE PTR [rax],0x20
  40eef6:	jg     40eff0 <main@@Base+0x81d0>
  40eefc:	jne    40efe0 <main@@Base+0x81c0>
  40ef02:	cmp    BYTE PTR [rsi+0x2],0x20
  40ef06:	jle    40efe0 <main@@Base+0x81c0>
  40ef0c:	add    rsi,0x2
  40ef10:	mov    rax,rsi
  40ef13:	cmp    r15,rax
  40ef16:	jne    40eff5 <main@@Base+0x81d5>
  40ef1c:	jmp    40f03e <main@@Base+0x821e>
  40ef21:	mov    ecx,0x4
  40ef26:	mov    rdi,QWORD PTR [rsp+0x8]
  40ef2b:	mov    rdx,r14
  40ef2e:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ef33:	cmp    r15,rax
  40ef36:	jne    40eff5 <main@@Base+0x81d5>
  40ef3c:	jmp    40f03e <main@@Base+0x821e>
  40ef41:	mov    rdi,QWORD PTR [rsp+0x8]
  40ef46:	mov    rsi,rax
  40ef49:	mov    rdx,r14
  40ef4c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ef51:	cmp    r15,rax
  40ef54:	je     40f03e <main@@Base+0x821e>
  40ef5a:	xor    r8d,r8d
  40ef5d:	mov    rdi,QWORD PTR [rsp+0x8]
  40ef62:	mov    rsi,rax
  40ef65:	mov    rdx,r14
  40ef68:	lea    rcx,[rsp+0x20]
  40ef6d:	call   425250 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40ef72:	mov    r12,rax
  40ef75:	cmp    DWORD PTR [rsp+0x20],0x0
  40ef7a:	je     410374 <main@@Base+0x9554>
  40ef80:	mov    rax,QWORD PTR [rsp+0x8]
  40ef85:	mov    rdi,QWORD PTR [rax]
  40ef88:	xor    esi,esi
  40ef8a:	jmp    40f028 <main@@Base+0x8208>
  40ef8f:	mov    rdi,QWORD PTR [rsp+0x8]
  40ef94:	mov    rsi,rax
  40ef97:	mov    rdx,r14
  40ef9a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40ef9f:	cmp    r15,rax
  40efa2:	je     40f03e <main@@Base+0x821e>
  40efa8:	mov    r8d,0x1
  40efae:	mov    rdi,QWORD PTR [rsp+0x8]
  40efb3:	mov    rsi,rax
  40efb6:	mov    rdx,r14
  40efb9:	lea    rcx,[rsp+0x20]
  40efbe:	call   425250 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40efc3:	mov    r12,rax
  40efc6:	cmp    DWORD PTR [rsp+0x20],0x0
  40efcb:	je     410374 <main@@Base+0x9554>
  40efd1:	mov    rax,QWORD PTR [rsp+0x8]
  40efd6:	mov    rdi,QWORD PTR [rax]
  40efd9:	mov    esi,0x1
  40efde:	jmp    40f028 <main@@Base+0x8208>
  40efe0:	mov    rdi,QWORD PTR [rsp+0x8]
  40efe5:	mov    rsi,rax
  40efe8:	mov    rdx,r14
  40efeb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40eff0:	cmp    r15,rax
  40eff3:	je     40f03e <main@@Base+0x821e>
  40eff5:	xor    r8d,r8d
  40eff8:	mov    rdi,QWORD PTR [rsp+0x8]
  40effd:	mov    rsi,rax
  40f000:	mov    rdx,r14
  40f003:	lea    rcx,[rsp+0x20]
  40f008:	call   425250 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f00d:	mov    r12,rax
  40f010:	cmp    DWORD PTR [rsp+0x20],0x0
  40f015:	je     410374 <main@@Base+0x9554>
  40f01b:	mov    rax,QWORD PTR [rsp+0x8]
  40f020:	mov    rdi,QWORD PTR [rax]
  40f023:	mov    esi,0x2
  40f028:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  40f02d:	test   rax,rax
  40f030:	je     410374 <main@@Base+0x9554>
  40f036:	mov    ecx,DWORD PTR [rsp+0x20]
  40f03a:	mov    DWORD PTR [rax],ecx
  40f03c:	jmp    40f051 <main@@Base+0x8231>
  40f03e:	mov    rdi,QWORD PTR [rsp+0x8]
  40f043:	mov    rsi,r15
  40f046:	mov    rdx,r14
  40f049:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40f04e:	mov    r12,rax
  40f051:	mov    rax,r14
  40f054:	sub    rax,r12
  40f057:	cmp    rax,0x2
  40f05b:	mov    r15,QWORD PTR [rsp+0x8]
  40f060:	jl     40f081 <main@@Base+0x8261>
  40f062:	cmp    BYTE PTR [r12],0x20
  40f067:	jg     40f092 <main@@Base+0x8272>
  40f069:	jne    40f081 <main@@Base+0x8261>
  40f06b:	cmp    BYTE PTR [r12+0x1],0x20
  40f071:	jle    40f081 <main@@Base+0x8261>
  40f073:	add    r12,0x1
  40f077:	cmp    r12,r14
  40f07a:	jne    40f09b <main@@Base+0x827b>
  40f07c:	jmp    40fed6 <main@@Base+0x90b6>
  40f081:	mov    rdi,r15
  40f084:	mov    rsi,r12
  40f087:	mov    rdx,r14
  40f08a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f08f:	mov    r12,rax
  40f092:	cmp    r12,r14
  40f095:	je     40fed6 <main@@Base+0x90b6>
  40f09b:	movzx  eax,BYTE PTR [r12]
  40f0a0:	cmp    al,0x2c
  40f0a2:	jne    40fede <main@@Base+0x90be>
  40f0a8:	lea    rsi,[r12+0x1]
  40f0ad:	mov    rax,r14
  40f0b0:	sub    rax,rsi
  40f0b3:	cmp    rax,0x2
  40f0b7:	jl     40f0d9 <main@@Base+0x82b9>
  40f0b9:	cmp    BYTE PTR [rsi],0x20
  40f0bc:	jg     40f0e7 <main@@Base+0x82c7>
  40f0be:	jne    40f0d9 <main@@Base+0x82b9>
  40f0c0:	cmp    BYTE PTR [r12+0x2],0x20
  40f0c6:	jle    40f0d9 <main@@Base+0x82b9>
  40f0c8:	add    r12,0x2
  40f0cc:	mov    rsi,r12
  40f0cf:	cmp    rsi,r14
  40f0d2:	jne    40f0f0 <main@@Base+0x82d0>
  40f0d4:	jmp    4100d3 <main@@Base+0x92b3>
  40f0d9:	mov    rdi,r15
  40f0dc:	mov    rdx,r14
  40f0df:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f0e4:	mov    rsi,rax
  40f0e7:	cmp    rsi,r14
  40f0ea:	je     4100d3 <main@@Base+0x92b3>
  40f0f0:	cmp    BYTE PTR [rsi],0x7d
  40f0f3:	jne    40eb8c <main@@Base+0x7d6c>
  40f0f9:	lea    r13,[rsi+0x1]
  40f0fd:	mov    rax,r14
  40f100:	sub    rax,r13
  40f103:	cmp    rax,0x2
  40f107:	jl     41062d <main@@Base+0x980d>
  40f10d:	cmp    BYTE PTR [r13+0x0],0x20
  40f112:	jg     40ff06 <main@@Base+0x90e6>
  40f118:	jne    41062d <main@@Base+0x980d>
  40f11e:	cmp    BYTE PTR [rsi+0x2],0x20
  40f122:	jle    41062d <main@@Base+0x980d>
  40f128:	add    rsi,0x2
  40f12c:	mov    r13,rsi
  40f12f:	mov    r15,QWORD PTR [rsp+0x8]
  40f134:	jmp    40c851 <main@@Base+0x5a31>
  40f139:	mov    DWORD PTR [rsp+0x14],eax
  40f13d:	mov    r12d,eax
  40f140:	jmp    40cfb4 <main@@Base+0x6194>
  40f145:	neg    r12
  40f148:	mov    QWORD PTR [rsp+0x30],r12
  40f14d:	mov    r15,QWORD PTR [rsp+0x8]
  40f152:	cmp    rbx,r13
  40f155:	mov    rbp,QWORD PTR [rsp+0x18]
  40f15a:	jne    40f19a <main@@Base+0x837a>
  40f15c:	mov    rdi,r15
  40f15f:	mov    rsi,rbx
  40f162:	mov    rdx,r14
  40f165:	lea    rcx,[rip+0x32114]        # 441280 <__data_start@@Base+0x1d0>
  40f16c:	lea    r8,[rsp+0x30]
  40f171:	call   4146e0 <main@@Base+0xd8c0>
  40f176:	mov    r13,rax
  40f179:	cmp    rax,rbx
  40f17c:	je     4107b7 <main@@Base+0x9997>
  40f182:	cmp    r13,r14
  40f185:	je     4107b7 <main@@Base+0x9997>
  40f18b:	mov    r12,QWORD PTR [rsp+0x30]
  40f190:	mov    r15,QWORD PTR [rsp+0x8]
  40f195:	mov    rbp,QWORD PTR [rsp+0x18]
  40f19a:	test   r12,r12
  40f19d:	jne    40f1aa <main@@Base+0x838a>
  40f19f:	test   BYTE PTR [r15+0x10],0x2
  40f1a4:	je     40d3f5 <main@@Base+0x65d5>
  40f1aa:	mov    rdi,QWORD PTR [r15]
  40f1ad:	mov    esi,0x16
  40f1b2:	mov    edx,0x8
  40f1b7:	mov    ecx,0x8
  40f1bc:	call   41fe80 <flatcc_builder_table_add@@Base>
  40f1c1:	test   rax,rax
  40f1c4:	je     4107b7 <main@@Base+0x9997>
  40f1ca:	mov    QWORD PTR [rax],r12
  40f1cd:	jmp    40d3f5 <main@@Base+0x65d5>
  40f1d2:	mov    ecx,0x21
  40f1d7:	mov    r15,QWORD PTR [rsp+0x8]
  40f1dc:	jmp    40d060 <main@@Base+0x6240>
  40f1e1:	mov    r12,rax
  40f1e4:	mov    QWORD PTR [rsp+0x30],0x0
  40f1ed:	mov    rax,QWORD PTR [rsp+0x8]
  40f1f2:	mov    rdi,QWORD PTR [rax]
  40f1f5:	mov    esi,0x1
  40f1fa:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40f1ff:	test   rax,rax
  40f202:	je     4107cc <main@@Base+0x99ac>
  40f208:	mov    rbx,rax
  40f20b:	mov    r15,QWORD PTR [rsp+0x8]
  40f210:	mov    QWORD PTR [rsp+0x20],0x0
  40f219:	mov    DWORD PTR [rsp+0x14],0x0
  40f221:	mov    QWORD PTR [rsp+0x30],0x0
  40f22a:	cmp    r12,r14
  40f22d:	je     40f26e <main@@Base+0x844e>
  40f22f:	mov    rdi,r15
  40f232:	mov    rsi,r12
  40f235:	mov    rdx,r14
  40f238:	lea    rcx,[rsp+0x14]
  40f23d:	lea    r8,[rsp+0x20]
  40f242:	call   425160 <flatcc_json_parser_integer@@Base>
  40f247:	cmp    rax,r12
  40f24a:	je     40f27a <main@@Base+0x845a>
  40f24c:	mov    rcx,QWORD PTR [rsp+0x20]
  40f251:	cmp    DWORD PTR [rsp+0x14],0x0
  40f256:	je     40f286 <main@@Base+0x8466>
  40f258:	movabs rdx,0x8000000000000000
  40f262:	cmp    rcx,rdx
  40f265:	jbe    40f2ac <main@@Base+0x848c>
  40f267:	mov    ecx,0x8
  40f26c:	jmp    40f290 <main@@Base+0x8470>
  40f26e:	xor    ecx,ecx
  40f270:	mov    rax,r14
  40f273:	cmp    r12,rax
  40f276:	jne    40f2f4 <main@@Base+0x84d4>
  40f278:	jmp    40f2be <main@@Base+0x849e>
  40f27a:	xor    ecx,ecx
  40f27c:	mov    rax,r12
  40f27f:	cmp    r12,rax
  40f282:	jne    40f2f4 <main@@Base+0x84d4>
  40f284:	jmp    40f2be <main@@Base+0x849e>
  40f286:	test   rcx,rcx
  40f289:	jns    40f2af <main@@Base+0x848f>
  40f28b:	mov    ecx,0x7
  40f290:	mov    r15,QWORD PTR [rsp+0x8]
  40f295:	mov    rdi,r15
  40f298:	mov    rsi,rax
  40f29b:	mov    rdx,r14
  40f29e:	call   423620 <flatcc_json_parser_set_error@@Base>
  40f2a3:	xor    ecx,ecx
  40f2a5:	cmp    r12,rax
  40f2a8:	jne    40f2f4 <main@@Base+0x84d4>
  40f2aa:	jmp    40f2be <main@@Base+0x849e>
  40f2ac:	neg    rcx
  40f2af:	mov    QWORD PTR [rsp+0x30],rcx
  40f2b4:	mov    r15,QWORD PTR [rsp+0x8]
  40f2b9:	cmp    r12,rax
  40f2bc:	jne    40f2f4 <main@@Base+0x84d4>
  40f2be:	mov    rdi,r15
  40f2c1:	mov    rsi,r12
  40f2c4:	mov    rdx,r14
  40f2c7:	lea    rcx,[rip+0x32092]        # 441360 <__data_start@@Base+0x2b0>
  40f2ce:	lea    r8,[rsp+0x30]
  40f2d3:	call   4146e0 <main@@Base+0xd8c0>
  40f2d8:	cmp    rax,r12
  40f2db:	je     4107d6 <main@@Base+0x99b6>
  40f2e1:	cmp    rax,r14
  40f2e4:	je     4107d6 <main@@Base+0x99b6>
  40f2ea:	mov    rcx,QWORD PTR [rsp+0x30]
  40f2ef:	mov    r15,QWORD PTR [rsp+0x8]
  40f2f4:	mov    QWORD PTR [rbx],rcx
  40f2f7:	mov    rcx,r14
  40f2fa:	sub    rcx,rax
  40f2fd:	cmp    rcx,0x2
  40f301:	jl     40f31e <main@@Base+0x84fe>
  40f303:	cmp    BYTE PTR [rax],0x20
  40f306:	jg     40f32c <main@@Base+0x850c>
  40f308:	jne    40f31e <main@@Base+0x84fe>
  40f30a:	cmp    BYTE PTR [rax+0x1],0x20
  40f30e:	jle    40f31e <main@@Base+0x84fe>
  40f310:	add    rax,0x1
  40f314:	cmp    rax,r14
  40f317:	jne    40f335 <main@@Base+0x8515>
  40f319:	jmp    41014b <main@@Base+0x932b>
  40f31e:	mov    rdi,r15
  40f321:	mov    rsi,rax
  40f324:	mov    rdx,r14
  40f327:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f32c:	cmp    rax,r14
  40f32f:	je     41014b <main@@Base+0x932b>
  40f335:	movzx  ecx,BYTE PTR [rax]
  40f338:	cmp    cl,0x2c
  40f33b:	jne    41022b <main@@Base+0x940b>
  40f341:	lea    r12,[rax+0x1]
  40f345:	mov    rcx,r14
  40f348:	sub    rcx,r12
  40f34b:	cmp    rcx,0x2
  40f34f:	jl     40f366 <main@@Base+0x8546>
  40f351:	cmp    BYTE PTR [r12],0x20
  40f356:	jg     40f377 <main@@Base+0x8557>
  40f358:	jne    40f366 <main@@Base+0x8546>
  40f35a:	cmp    BYTE PTR [rax+0x2],0x20
  40f35e:	jle    40f366 <main@@Base+0x8546>
  40f360:	add    rax,0x2
  40f364:	jmp    40f374 <main@@Base+0x8554>
  40f366:	mov    rdi,r15
  40f369:	mov    rsi,r12
  40f36c:	mov    rdx,r14
  40f36f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f374:	mov    r12,rax
  40f377:	cmp    r12,r14
  40f37a:	je     4102a2 <main@@Base+0x9482>
  40f380:	cmp    BYTE PTR [r12],0x5d
  40f385:	je     4102f8 <main@@Base+0x94d8>
  40f38b:	mov    QWORD PTR [rsp+0x30],0x0
  40f394:	mov    rdi,QWORD PTR [r15]
  40f397:	mov    esi,0x1
  40f39c:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40f3a1:	mov    rbx,rax
  40f3a4:	test   rax,rax
  40f3a7:	jne    40f210 <main@@Base+0x83f0>
  40f3ad:	jmp    407501 <main@@Base+0x6e1>
  40f3b2:	mov    rbx,rax
  40f3b5:	mov    QWORD PTR [rsp+0x20],0x0
  40f3be:	mov    rax,QWORD PTR [rsp+0x8]
  40f3c3:	mov    rdi,QWORD PTR [rax]
  40f3c6:	mov    esi,0x1
  40f3cb:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40f3d0:	test   rax,rax
  40f3d3:	je     4107e3 <main@@Base+0x99c3>
  40f3d9:	mov    rbp,rax
  40f3dc:	mov    r15,QWORD PTR [rsp+0x8]
  40f3e1:	mov    rdi,r15
  40f3e4:	mov    rsi,rbx
  40f3e7:	mov    rdx,r14
  40f3ea:	lea    rcx,[rsp+0x20]
  40f3ef:	call   424860 <flatcc_json_parser_double@@Base>
  40f3f4:	mov    r12,rax
  40f3f7:	cmp    rbx,rax
  40f3fa:	jne    40f42b <main@@Base+0x860b>
  40f3fc:	mov    rdi,r15
  40f3ff:	mov    rsi,rbx
  40f402:	mov    rdx,r14
  40f405:	lea    rcx,[rip+0x31f34]        # 441340 <__data_start@@Base+0x290>
  40f40c:	lea    r8,[rsp+0x20]
  40f411:	call   414bd0 <main@@Base+0xddb0>
  40f416:	mov    r12,rax
  40f419:	cmp    rax,rbx
  40f41c:	je     407501 <main@@Base+0x6e1>
  40f422:	cmp    r12,r14
  40f425:	je     407501 <main@@Base+0x6e1>
  40f42b:	mov    rax,QWORD PTR [rsp+0x20]
  40f430:	mov    QWORD PTR [rbp+0x0],rax
  40f434:	mov    rax,r14
  40f437:	sub    rax,r12
  40f43a:	cmp    rax,0x2
  40f43e:	jl     40f45f <main@@Base+0x863f>
  40f440:	cmp    BYTE PTR [r12],0x20
  40f445:	jg     40f470 <main@@Base+0x8650>
  40f447:	jne    40f45f <main@@Base+0x863f>
  40f449:	cmp    BYTE PTR [r12+0x1],0x20
  40f44f:	jle    40f45f <main@@Base+0x863f>
  40f451:	add    r12,0x1
  40f455:	cmp    r12,r14
  40f458:	jne    40f479 <main@@Base+0x8659>
  40f45a:	jmp    410282 <main@@Base+0x9462>
  40f45f:	mov    rdi,r15
  40f462:	mov    rsi,r12
  40f465:	mov    rdx,r14
  40f468:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f46d:	mov    r12,rax
  40f470:	cmp    r12,r14
  40f473:	je     410282 <main@@Base+0x9462>
  40f479:	movzx  eax,BYTE PTR [r12]
  40f47e:	cmp    al,0x2c
  40f480:	jne    4102b2 <main@@Base+0x9492>
  40f486:	lea    rbx,[r12+0x1]
  40f48b:	mov    rax,r14
  40f48e:	sub    rax,rbx
  40f491:	cmp    rax,0x2
  40f495:	jl     40f4b7 <main@@Base+0x8697>
  40f497:	cmp    BYTE PTR [rbx],0x20
  40f49a:	jg     40f4c8 <main@@Base+0x86a8>
  40f49c:	jne    40f4b7 <main@@Base+0x8697>
  40f49e:	cmp    BYTE PTR [r12+0x2],0x20
  40f4a4:	jle    40f4b7 <main@@Base+0x8697>
  40f4a6:	add    r12,0x2
  40f4aa:	mov    rbx,r12
  40f4ad:	cmp    rbx,r14
  40f4b0:	jne    40f4d1 <main@@Base+0x86b1>
  40f4b2:	jmp    410354 <main@@Base+0x9534>
  40f4b7:	mov    rdi,r15
  40f4ba:	mov    rsi,rbx
  40f4bd:	mov    rdx,r14
  40f4c0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f4c5:	mov    rbx,rax
  40f4c8:	cmp    rbx,r14
  40f4cb:	je     410354 <main@@Base+0x9534>
  40f4d1:	cmp    BYTE PTR [rbx],0x5d
  40f4d4:	je     41037e <main@@Base+0x955e>
  40f4da:	mov    QWORD PTR [rsp+0x20],0x0
  40f4e3:	mov    rdi,QWORD PTR [r15]
  40f4e6:	mov    esi,0x1
  40f4eb:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40f4f0:	mov    rbp,rax
  40f4f3:	mov    r12,rbx
  40f4f6:	test   rax,rax
  40f4f9:	jne    40f3e1 <main@@Base+0x85c1>
  40f4ff:	jmp    407501 <main@@Base+0x6e1>
  40f504:	mov    r13,r14
  40f507:	jmp    40c251 <main@@Base+0x5431>
  40f50c:	mov    r13,r14
  40f50f:	jmp    40c3e8 <main@@Base+0x55c8>
  40f514:	cmp    al,0x5d
  40f516:	jne    410115 <main@@Base+0x92f5>
  40f51c:	lea    r13,[r12+0x1]
  40f521:	mov    rax,r14
  40f524:	sub    rax,r13
  40f527:	cmp    rax,0x2
  40f52b:	jl     410594 <main@@Base+0x9774>
  40f531:	cmp    BYTE PTR [r13+0x0],0x20
  40f536:	jle    410579 <main@@Base+0x9759>
  40f53c:	mov    r15,QWORD PTR [rsp+0x8]
  40f541:	jmp    40c251 <main@@Base+0x5431>
  40f546:	cmp    al,0x5d
  40f548:	jne    410124 <main@@Base+0x9304>
  40f54e:	lea    r13,[r12+0x1]
  40f553:	mov    rax,r14
  40f556:	sub    rax,r13
  40f559:	cmp    rax,0x2
  40f55d:	jl     4105c7 <main@@Base+0x97a7>
  40f563:	cmp    BYTE PTR [r13+0x0],0x20
  40f568:	jle    4105ac <main@@Base+0x978c>
  40f56e:	mov    r15,QWORD PTR [rsp+0x8]
  40f573:	jmp    40c3e8 <main@@Base+0x55c8>
  40f578:	mov    ecx,0x9
  40f57d:	mov    rdi,r15
  40f580:	mov    rsi,r14
  40f583:	jmp    40c246 <main@@Base+0x5426>
  40f588:	mov    ecx,0x9
  40f58d:	mov    rdi,r15
  40f590:	mov    rsi,r14
  40f593:	jmp    40c3dd <main@@Base+0x55bd>
  40f598:	mov    r13,r14
  40f59b:	mov    r15,QWORD PTR [rsp+0x8]
  40f5a0:	jmp    40c80b <main@@Base+0x59eb>
  40f5a5:	mov    rax,QWORD PTR [rsp+0x20]
  40f5aa:	mov    rcx,rax
  40f5ad:	shr    rcx,0x20
  40f5b1:	je     410158 <main@@Base+0x9338>
  40f5b7:	mov    ecx,0x7
  40f5bc:	mov    r15,QWORD PTR [rsp+0x8]
  40f5c1:	mov    rdi,r15
  40f5c4:	mov    rsi,r13
  40f5c7:	mov    rdx,r14
  40f5ca:	call   423620 <flatcc_json_parser_set_error@@Base>
  40f5cf:	mov    r13,rax
  40f5d2:	cmp    rbx,r13
  40f5d5:	jne    4101a2 <main@@Base+0x9382>
  40f5db:	jmp    410169 <main@@Base+0x9349>
  40f5e0:	mov    r12,QWORD PTR [rsp+0x20]
  40f5e5:	mov    QWORD PTR [rsp+0x30],r12
  40f5ea:	mov    r15,QWORD PTR [rsp+0x8]
  40f5ef:	cmp    rbx,r13
  40f5f2:	jne    40f62d <main@@Base+0x880d>
  40f5f4:	mov    rdi,r15
  40f5f7:	mov    rsi,rbx
  40f5fa:	mov    rdx,r14
  40f5fd:	lea    rcx,[rip+0x31cfc]        # 441300 <__data_start@@Base+0x250>
  40f604:	lea    r8,[rsp+0x30]
  40f609:	call   414a40 <main@@Base+0xdc20>
  40f60e:	mov    r13,rax
  40f611:	cmp    rax,rbx
  40f614:	je     4107b7 <main@@Base+0x9997>
  40f61a:	cmp    r13,r14
  40f61d:	je     4107b7 <main@@Base+0x9997>
  40f623:	mov    r12,QWORD PTR [rsp+0x30]
  40f628:	mov    r15,QWORD PTR [rsp+0x8]
  40f62d:	test   r12,r12
  40f630:	jne    40f63d <main@@Base+0x881d>
  40f632:	test   BYTE PTR [r15+0x10],0x2
  40f637:	je     40d3f0 <main@@Base+0x65d0>
  40f63d:	mov    rdi,QWORD PTR [r15]
  40f640:	mov    esi,0x17
  40f645:	mov    edx,0x8
  40f64a:	mov    ecx,0x8
  40f64f:	call   41fe80 <flatcc_builder_table_add@@Base>
  40f654:	test   rax,rax
  40f657:	je     4107b7 <main@@Base+0x9997>
  40f65d:	mov    QWORD PTR [rax],r12
  40f660:	jmp    40d3f0 <main@@Base+0x65d0>
  40f665:	cmp    cl,0x5d
  40f668:	jne    410268 <main@@Base+0x9448>
  40f66e:	lea    r13,[rax+0x1]
  40f672:	mov    rcx,r14
  40f675:	sub    rcx,r13
  40f678:	cmp    rcx,0x2
  40f67c:	jl     4104c8 <main@@Base+0x96a8>
  40f682:	cmp    BYTE PTR [r13+0x0],0x20
  40f687:	jg     40fe51 <main@@Base+0x9031>
  40f68d:	jne    4104c8 <main@@Base+0x96a8>
  40f693:	cmp    BYTE PTR [rax+0x2],0x20
  40f697:	jg     40d181 <main@@Base+0x6361>
  40f69d:	jmp    4104c8 <main@@Base+0x96a8>
  40f6a2:	mov    ecx,0x9
  40f6a7:	mov    rdi,r15
  40f6aa:	mov    rsi,r14
  40f6ad:	jmp    410275 <main@@Base+0x9455>
  40f6b2:	mov    rsi,rax
  40f6b5:	mov    r15,r14
  40f6b8:	cmp    rsi,r14
  40f6bb:	je     40f6e0 <main@@Base+0x88c0>
  40f6bd:	cmp    BYTE PTR [rsi],0x22
  40f6c0:	jne    40f6cb <main@@Base+0x88ab>
  40f6c2:	add    rsi,0x1
  40f6c6:	mov    r15,rsi
  40f6c9:	jmp    40f6e0 <main@@Base+0x88c0>
  40f6cb:	mov    ecx,0x5
  40f6d0:	mov    rdi,QWORD PTR [rsp+0x8]
  40f6d5:	mov    rdx,r14
  40f6d8:	call   423620 <flatcc_json_parser_set_error@@Base>
  40f6dd:	mov    r15,rax
  40f6e0:	mov    rcx,r14
  40f6e3:	sub    rcx,r15
  40f6e6:	cmp    rcx,0x8
  40f6ea:	jb     40f6f6 <main@@Base+0x88d6>
  40f6ec:	movbe  rax,QWORD PTR [r15]
  40f6f1:	jmp    40f77f <main@@Base+0x895f>
  40f6f6:	mov    eax,ecx
  40f6f8:	and    al,0xf
  40f6fa:	add    al,0xff
  40f6fc:	cmp    al,0x7
  40f6fe:	ja     40fd31 <main@@Base+0x8f11>
  40f704:	movzx  eax,al
  40f707:	lea    rdx,[rip+0x23a72]        # 433180 <_IO_stdin_used@@Base+0x180>
  40f70e:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f712:	add    rax,rdx
  40f715:	xor    r8d,r8d
  40f718:	xor    r9d,r9d
  40f71b:	xor    edx,edx
  40f71d:	xor    esi,esi
  40f71f:	xor    ebx,ebx
  40f721:	xor    edi,edi
  40f723:	xor    ebp,ebp
  40f725:	jmp    rax
  40f727:	movsx  r8,BYTE PTR [r15+0x7]
  40f72c:	movsx  r9,BYTE PTR [r15+0x6]
  40f731:	shl    r9,0x8
  40f735:	or     r9,r8
  40f738:	movsx  rdx,BYTE PTR [r15+0x5]
  40f73d:	shl    rdx,0x10
  40f741:	or     rdx,r9
  40f744:	movsx  rsi,BYTE PTR [r15+0x4]
  40f749:	shl    rsi,0x18
  40f74d:	or     rsi,rdx
  40f750:	movsx  rbx,BYTE PTR [r15+0x3]
  40f755:	shl    rbx,0x20
  40f759:	or     rbx,rsi
  40f75c:	movsx  rdi,BYTE PTR [r15+0x2]
  40f761:	shl    rdi,0x28
  40f765:	or     rdi,rbx
  40f768:	movsx  rbp,BYTE PTR [r15+0x1]
  40f76d:	shl    rbp,0x30
  40f771:	or     rbp,rdi
  40f774:	movzx  eax,BYTE PTR [r15]
  40f778:	shl    rax,0x38
  40f77c:	or     rax,rbp
  40f77f:	movabs rdx,0x6964000000000000
  40f789:	cmp    rax,rdx
  40f78c:	jae    40f800 <main@@Base+0x89e0>
  40f78e:	shr    rax,0x18
  40f792:	movabs rdx,0x636f756e74
  40f79c:	cmp    rax,rdx
  40f79f:	jne    40fd31 <main@@Base+0x8f11>
  40f7a5:	mov    rbx,r15
  40f7a8:	cmp    rcx,0x6
  40f7ac:	jl     40fa72 <main@@Base+0x8c52>
  40f7b2:	cmp    BYTE PTR [r15+0x5],0x22
  40f7b7:	mov    rbx,r15
  40f7ba:	jne    40fa72 <main@@Base+0x8c52>
  40f7c0:	lea    rsi,[r15+0x6]
  40f7c4:	mov    rax,r14
  40f7c7:	sub    rax,rsi
  40f7ca:	cmp    rax,0x2
  40f7ce:	jl     40f8f5 <main@@Base+0x8ad5>
  40f7d4:	cmp    BYTE PTR [rsi],0x20
  40f7d7:	jg     40f905 <main@@Base+0x8ae5>
  40f7dd:	jne    40f8f5 <main@@Base+0x8ad5>
  40f7e3:	cmp    BYTE PTR [r15+0x7],0x20
  40f7e8:	jle    40f8f5 <main@@Base+0x8ad5>
  40f7ee:	lea    rsi,[r15+0x7]
  40f7f2:	cmp    rsi,r14
  40f7f5:	jne    40f90e <main@@Base+0x8aee>
  40f7fb:	jmp    40f9b5 <main@@Base+0x8b95>
  40f800:	mov    rdx,rax
  40f803:	movabs rsi,0xffffff0000000000
  40f80d:	and    rdx,rsi
  40f810:	movabs rsi,0x76616c0000000000
  40f81a:	cmp    rdx,rsi
  40f81d:	jne    40f87a <main@@Base+0x8a5a>
  40f81f:	mov    rbx,r15
  40f822:	cmp    rcx,0x4
  40f826:	jl     40fb9b <main@@Base+0x8d7b>
  40f82c:	cmp    BYTE PTR [r15+0x3],0x22
  40f831:	mov    rbx,r15
  40f834:	jne    40fb9b <main@@Base+0x8d7b>
  40f83a:	lea    rsi,[r15+0x4]
  40f83e:	mov    rax,r14
  40f841:	sub    rax,rsi
  40f844:	cmp    rax,0x2
  40f848:	jl     40f959 <main@@Base+0x8b39>
  40f84e:	cmp    BYTE PTR [rsi],0x20
  40f851:	jg     40f969 <main@@Base+0x8b49>
  40f857:	jne    40f959 <main@@Base+0x8b39>
  40f85d:	cmp    BYTE PTR [r15+0x5],0x20
  40f862:	jle    40f959 <main@@Base+0x8b39>
  40f868:	lea    rsi,[r15+0x5]
  40f86c:	cmp    rsi,r14
  40f86f:	jne    40f96e <main@@Base+0x8b4e>
  40f875:	jmp    40f9cc <main@@Base+0x8bac>
  40f87a:	movabs rdx,0xffff000000000000
  40f884:	and    rax,rdx
  40f887:	movabs rdx,0x6964000000000000
  40f891:	cmp    rax,rdx
  40f894:	jne    40fd31 <main@@Base+0x8f11>
  40f89a:	mov    rax,r15
  40f89d:	cmp    rcx,0x3
  40f8a1:	jl     40fce9 <main@@Base+0x8ec9>
  40f8a7:	cmp    BYTE PTR [r15+0x2],0x22
  40f8ac:	mov    rax,r15
  40f8af:	jne    40fce9 <main@@Base+0x8ec9>
  40f8b5:	lea    rsi,[r15+0x3]
  40f8b9:	mov    rax,r14
  40f8bc:	sub    rax,rsi
  40f8bf:	cmp    rax,0x2
  40f8c3:	jl     40f9e3 <main@@Base+0x8bc3>
  40f8c9:	cmp    BYTE PTR [rsi],0x20
  40f8cc:	jg     40f9f3 <main@@Base+0x8bd3>
  40f8d2:	jne    40f9e3 <main@@Base+0x8bc3>
  40f8d8:	cmp    BYTE PTR [r15+0x4],0x20
  40f8dd:	jle    40f9e3 <main@@Base+0x8bc3>
  40f8e3:	lea    rsi,[r15+0x4]
  40f8e7:	cmp    rsi,r14
  40f8ea:	jne    40f9f8 <main@@Base+0x8bd8>
  40f8f0:	jmp    40fa3f <main@@Base+0x8c1f>
  40f8f5:	mov    rdi,QWORD PTR [rsp+0x8]
  40f8fa:	mov    rdx,r14
  40f8fd:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f902:	mov    rsi,rax
  40f905:	cmp    rsi,r14
  40f908:	je     40f9b5 <main@@Base+0x8b95>
  40f90e:	cmp    BYTE PTR [rsi],0x3a
  40f911:	jne    40f9b5 <main@@Base+0x8b95>
  40f917:	lea    rbx,[rsi+0x1]
  40f91b:	mov    rax,r14
  40f91e:	sub    rax,rbx
  40f921:	cmp    rax,0x2
  40f925:	jl     40fa5f <main@@Base+0x8c3f>
  40f92b:	cmp    BYTE PTR [rbx],0x20
  40f92e:	jg     40fa72 <main@@Base+0x8c52>
  40f934:	jne    40fa5f <main@@Base+0x8c3f>
  40f93a:	cmp    BYTE PTR [rsi+0x2],0x20
  40f93e:	jle    40fa5f <main@@Base+0x8c3f>
  40f944:	add    rsi,0x2
  40f948:	mov    rbx,rsi
  40f94b:	cmp    r15,rbx
  40f94e:	jne    40fa7b <main@@Base+0x8c5b>
  40f954:	jmp    40fd31 <main@@Base+0x8f11>
  40f959:	mov    rdi,QWORD PTR [rsp+0x8]
  40f95e:	mov    rdx,r14
  40f961:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f966:	mov    rsi,rax
  40f969:	cmp    rsi,r14
  40f96c:	je     40f9cc <main@@Base+0x8bac>
  40f96e:	cmp    BYTE PTR [rsi],0x3a
  40f971:	jne    40f9cc <main@@Base+0x8bac>
  40f973:	lea    rbx,[rsi+0x1]
  40f977:	mov    rax,r14
  40f97a:	sub    rax,rbx
  40f97d:	cmp    rax,0x2
  40f981:	jl     40fb88 <main@@Base+0x8d68>
  40f987:	cmp    BYTE PTR [rbx],0x20
  40f98a:	jg     40fb9b <main@@Base+0x8d7b>
  40f990:	jne    40fb88 <main@@Base+0x8d68>
  40f996:	cmp    BYTE PTR [rsi+0x2],0x20
  40f99a:	jle    40fb88 <main@@Base+0x8d68>
  40f9a0:	add    rsi,0x2
  40f9a4:	mov    rbx,rsi
  40f9a7:	cmp    r15,rbx
  40f9aa:	jne    40fba4 <main@@Base+0x8d84>
  40f9b0:	jmp    40fd31 <main@@Base+0x8f11>
  40f9b5:	mov    ecx,0x4
  40f9ba:	mov    rdi,QWORD PTR [rsp+0x8]
  40f9bf:	mov    rdx,r14
  40f9c2:	call   423620 <flatcc_json_parser_set_error@@Base>
  40f9c7:	jmp    40fa6f <main@@Base+0x8c4f>
  40f9cc:	mov    ecx,0x4
  40f9d1:	mov    rdi,QWORD PTR [rsp+0x8]
  40f9d6:	mov    rdx,r14
  40f9d9:	call   423620 <flatcc_json_parser_set_error@@Base>
  40f9de:	jmp    40fb98 <main@@Base+0x8d78>
  40f9e3:	mov    rdi,QWORD PTR [rsp+0x8]
  40f9e8:	mov    rdx,r14
  40f9eb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40f9f0:	mov    rsi,rax
  40f9f3:	cmp    rsi,r14
  40f9f6:	je     40fa3f <main@@Base+0x8c1f>
  40f9f8:	cmp    BYTE PTR [rsi],0x3a
  40f9fb:	jne    40fa3f <main@@Base+0x8c1f>
  40f9fd:	lea    rax,[rsi+0x1]
  40fa01:	mov    rcx,r14
  40fa04:	sub    rcx,rax
  40fa07:	cmp    rcx,0x2
  40fa0b:	jl     40fcd9 <main@@Base+0x8eb9>
  40fa11:	cmp    BYTE PTR [rax],0x20
  40fa14:	jg     40fce9 <main@@Base+0x8ec9>
  40fa1a:	jne    40fcd9 <main@@Base+0x8eb9>
  40fa20:	cmp    BYTE PTR [rsi+0x2],0x20
  40fa24:	jle    40fcd9 <main@@Base+0x8eb9>
  40fa2a:	add    rsi,0x2
  40fa2e:	mov    rax,rsi
  40fa31:	cmp    r15,rax
  40fa34:	jne    40fcee <main@@Base+0x8ece>
  40fa3a:	jmp    40fd31 <main@@Base+0x8f11>
  40fa3f:	mov    ecx,0x4
  40fa44:	mov    rdi,QWORD PTR [rsp+0x8]
  40fa49:	mov    rdx,r14
  40fa4c:	call   423620 <flatcc_json_parser_set_error@@Base>
  40fa51:	cmp    r15,rax
  40fa54:	jne    40fcee <main@@Base+0x8ece>
  40fa5a:	jmp    40fd31 <main@@Base+0x8f11>
  40fa5f:	mov    rdi,QWORD PTR [rsp+0x8]
  40fa64:	mov    rsi,rbx
  40fa67:	mov    rdx,r14
  40fa6a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fa6f:	mov    rbx,rax
  40fa72:	cmp    r15,rbx
  40fa75:	je     40fd31 <main@@Base+0x8f11>
  40fa7b:	mov    QWORD PTR [rsp+0x20],0x0
  40fa84:	mov    DWORD PTR [rsp+0x30],0x0
  40fa8c:	mov    WORD PTR [rsp+0x14],0x0
  40fa93:	cmp    rbx,r14
  40fa96:	je     40fac8 <main@@Base+0x8ca8>
  40fa98:	mov    rdi,QWORD PTR [rsp+0x8]
  40fa9d:	mov    rsi,rbx
  40faa0:	mov    rdx,r14
  40faa3:	lea    rcx,[rsp+0x30]
  40faa8:	lea    r8,[rsp+0x20]
  40faad:	call   425160 <flatcc_json_parser_integer@@Base>
  40fab2:	cmp    rax,rbx
  40fab5:	je     40fad4 <main@@Base+0x8cb4>
  40fab7:	mov    r12,rax
  40faba:	cmp    DWORD PTR [rsp+0x30],0x0
  40fabf:	je     40fae0 <main@@Base+0x8cc0>
  40fac1:	mov    ecx,0x8
  40fac6:	jmp    40faf7 <main@@Base+0x8cd7>
  40fac8:	xor    ebp,ebp
  40faca:	mov    r12,r14
  40facd:	cmp    rbx,r12
  40fad0:	jne    40fb47 <main@@Base+0x8d27>
  40fad2:	jmp    40fb11 <main@@Base+0x8cf1>
  40fad4:	xor    ebp,ebp
  40fad6:	mov    r12,rbx
  40fad9:	cmp    rbx,r12
  40fadc:	jne    40fb47 <main@@Base+0x8d27>
  40fade:	jmp    40fb11 <main@@Base+0x8cf1>
  40fae0:	mov    rbp,QWORD PTR [rsp+0x20]
  40fae5:	cmp    rbp,0x10000
  40faec:	jb     40fcc6 <main@@Base+0x8ea6>
  40faf2:	mov    ecx,0x7
  40faf7:	mov    rdi,QWORD PTR [rsp+0x8]
  40fafc:	mov    rsi,r12
  40faff:	mov    rdx,r14
  40fb02:	call   423620 <flatcc_json_parser_set_error@@Base>
  40fb07:	mov    r12,rax
  40fb0a:	xor    ebp,ebp
  40fb0c:	cmp    rbx,r12
  40fb0f:	jne    40fb47 <main@@Base+0x8d27>
  40fb11:	mov    rdi,QWORD PTR [rsp+0x8]
  40fb16:	mov    rsi,rbx
  40fb19:	mov    rdx,r14
  40fb1c:	lea    rcx,[rip+0x31c5d]        # 441780 <__data_start@@Base+0x6d0>
  40fb23:	lea    r8,[rsp+0x14]
  40fb28:	call   41b8c0 <main@@Base+0x14aa0>
  40fb2d:	mov    r12,rax
  40fb30:	cmp    rax,rbx
  40fb33:	je     40e8cc <main@@Base+0x7aac>
  40fb39:	cmp    r12,r14
  40fb3c:	je     40e8cc <main@@Base+0x7aac>
  40fb42:	movzx  ebp,WORD PTR [rsp+0x14]
  40fb47:	test   bp,bp
  40fb4a:	jne    40fb5b <main@@Base+0x8d3b>
  40fb4c:	mov    rax,QWORD PTR [rsp+0x8]
  40fb51:	test   BYTE PTR [rax+0x10],0x2
  40fb55:	je     40fd44 <main@@Base+0x8f24>
  40fb5b:	mov    rax,QWORD PTR [rsp+0x8]
  40fb60:	mov    rdi,QWORD PTR [rax]
  40fb63:	mov    esi,0x2
  40fb68:	mov    edx,0x2
  40fb6d:	mov    ecx,0x2
  40fb72:	call   41fe80 <flatcc_builder_table_add@@Base>
  40fb77:	test   rax,rax
  40fb7a:	je     40e8cc <main@@Base+0x7aac>
  40fb80:	mov    WORD PTR [rax],bp
  40fb83:	jmp    40fd44 <main@@Base+0x8f24>
  40fb88:	mov    rdi,QWORD PTR [rsp+0x8]
  40fb8d:	mov    rsi,rbx
  40fb90:	mov    rdx,r14
  40fb93:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fb98:	mov    rbx,rax
  40fb9b:	cmp    r15,rbx
  40fb9e:	je     40fd31 <main@@Base+0x8f11>
  40fba4:	mov    QWORD PTR [rsp+0x20],0x0
  40fbad:	mov    DWORD PTR [rsp+0x14],0x0
  40fbb5:	mov    QWORD PTR [rsp+0x30],0x0
  40fbbe:	cmp    rbx,r14
  40fbc1:	je     40fc07 <main@@Base+0x8de7>
  40fbc3:	mov    rdi,QWORD PTR [rsp+0x8]
  40fbc8:	mov    rsi,rbx
  40fbcb:	mov    rdx,r14
  40fbce:	lea    rcx,[rsp+0x14]
  40fbd3:	lea    r8,[rsp+0x20]
  40fbd8:	call   425160 <flatcc_json_parser_integer@@Base>
  40fbdd:	cmp    rax,rbx
  40fbe0:	je     40fc13 <main@@Base+0x8df3>
  40fbe2:	mov    r12,rax
  40fbe5:	mov    rbp,QWORD PTR [rsp+0x20]
  40fbea:	cmp    DWORD PTR [rsp+0x14],0x0
  40fbef:	je     40fc1f <main@@Base+0x8dff>
  40fbf1:	movabs rax,0x8000000000000000
  40fbfb:	cmp    rbp,rax
  40fbfe:	jbe    40fc45 <main@@Base+0x8e25>
  40fc00:	mov    ecx,0x8
  40fc05:	jmp    40fc29 <main@@Base+0x8e09>
  40fc07:	xor    ebp,ebp
  40fc09:	mov    r12,r14
  40fc0c:	cmp    rbx,r12
  40fc0f:	jne    40fc88 <main@@Base+0x8e68>
  40fc11:	jmp    40fc52 <main@@Base+0x8e32>
  40fc13:	xor    ebp,ebp
  40fc15:	mov    r12,rbx
  40fc18:	cmp    rbx,r12
  40fc1b:	jne    40fc88 <main@@Base+0x8e68>
  40fc1d:	jmp    40fc52 <main@@Base+0x8e32>
  40fc1f:	test   rbp,rbp
  40fc22:	jns    40fc48 <main@@Base+0x8e28>
  40fc24:	mov    ecx,0x7
  40fc29:	mov    rdi,QWORD PTR [rsp+0x8]
  40fc2e:	mov    rsi,r12
  40fc31:	mov    rdx,r14
  40fc34:	call   423620 <flatcc_json_parser_set_error@@Base>
  40fc39:	mov    r12,rax
  40fc3c:	xor    ebp,ebp
  40fc3e:	cmp    rbx,r12
  40fc41:	jne    40fc88 <main@@Base+0x8e68>
  40fc43:	jmp    40fc52 <main@@Base+0x8e32>
  40fc45:	neg    rbp
  40fc48:	mov    QWORD PTR [rsp+0x30],rbp
  40fc4d:	cmp    rbx,r12
  40fc50:	jne    40fc88 <main@@Base+0x8e68>
  40fc52:	mov    rdi,QWORD PTR [rsp+0x8]
  40fc57:	mov    rsi,rbx
  40fc5a:	mov    rdx,r14
  40fc5d:	lea    rcx,[rip+0x31b3c]        # 4417a0 <__data_start@@Base+0x6f0>
  40fc64:	lea    r8,[rsp+0x30]
  40fc69:	call   4146e0 <main@@Base+0xd8c0>
  40fc6e:	mov    r12,rax
  40fc71:	cmp    rax,rbx
  40fc74:	je     40e8cc <main@@Base+0x7aac>
  40fc7a:	cmp    r12,r14
  40fc7d:	je     40e8cc <main@@Base+0x7aac>
  40fc83:	mov    rbp,QWORD PTR [rsp+0x30]
  40fc88:	test   rbp,rbp
  40fc8b:	jne    40fc9c <main@@Base+0x8e7c>
  40fc8d:	mov    rax,QWORD PTR [rsp+0x8]
  40fc92:	test   BYTE PTR [rax+0x10],0x2
  40fc96:	je     40fd44 <main@@Base+0x8f24>
  40fc9c:	mov    rax,QWORD PTR [rsp+0x8]
  40fca1:	mov    rdi,QWORD PTR [rax]
  40fca4:	mov    esi,0x1
  40fca9:	mov    edx,0x8
  40fcae:	mov    ecx,0x8
  40fcb3:	call   41fe80 <flatcc_builder_table_add@@Base>
  40fcb8:	test   rax,rax
  40fcbb:	je     40e8cc <main@@Base+0x7aac>
  40fcc1:	mov    QWORD PTR [rax],rbp
  40fcc4:	jmp    40fd44 <main@@Base+0x8f24>
  40fcc6:	mov    WORD PTR [rsp+0x14],bp
  40fccb:	cmp    rbx,r12
  40fcce:	jne    40fb47 <main@@Base+0x8d27>
  40fcd4:	jmp    40fb11 <main@@Base+0x8cf1>
  40fcd9:	mov    rdi,QWORD PTR [rsp+0x8]
  40fcde:	mov    rsi,rax
  40fce1:	mov    rdx,r14
  40fce4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fce9:	cmp    r15,rax
  40fcec:	je     40fd31 <main@@Base+0x8f11>
  40fcee:	mov    rdi,QWORD PTR [rsp+0x8]
  40fcf3:	mov    rsi,rax
  40fcf6:	mov    rdx,r14
  40fcf9:	lea    rcx,[rsp+0x44]
  40fcfe:	call   425630 <flatcc_json_parser_build_string@@Base>
  40fd03:	mov    r12,rax
  40fd06:	cmp    DWORD PTR [rsp+0x44],0x0
  40fd0b:	je     40e8cc <main@@Base+0x7aac>
  40fd11:	mov    rax,QWORD PTR [rsp+0x8]
  40fd16:	mov    rdi,QWORD PTR [rax]
  40fd19:	xor    esi,esi
  40fd1b:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  40fd20:	test   rax,rax
  40fd23:	je     40e8cc <main@@Base+0x7aac>
  40fd29:	mov    ecx,DWORD PTR [rsp+0x44]
  40fd2d:	mov    DWORD PTR [rax],ecx
  40fd2f:	jmp    40fd44 <main@@Base+0x8f24>
  40fd31:	mov    rdi,QWORD PTR [rsp+0x8]
  40fd36:	mov    rsi,r15
  40fd39:	mov    rdx,r14
  40fd3c:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  40fd41:	mov    r12,rax
  40fd44:	mov    rax,r14
  40fd47:	sub    rax,r12
  40fd4a:	cmp    rax,0x2
  40fd4e:	jl     40fd74 <main@@Base+0x8f54>
  40fd50:	cmp    BYTE PTR [r12],0x20
  40fd55:	jg     40fd65 <main@@Base+0x8f45>
  40fd57:	jne    40fd74 <main@@Base+0x8f54>
  40fd59:	cmp    BYTE PTR [r12+0x1],0x20
  40fd5f:	jle    40fd74 <main@@Base+0x8f54>
  40fd61:	add    r12,0x1
  40fd65:	mov    r15,QWORD PTR [rsp+0x8]
  40fd6a:	cmp    r12,r14
  40fd6d:	jne    40fd93 <main@@Base+0x8f73>
  40fd6f:	jmp    41029a <main@@Base+0x947a>
  40fd74:	mov    r15,QWORD PTR [rsp+0x8]
  40fd79:	mov    rdi,r15
  40fd7c:	mov    rsi,r12
  40fd7f:	mov    rdx,r14
  40fd82:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fd87:	mov    r12,rax
  40fd8a:	cmp    r12,r14
  40fd8d:	je     41029a <main@@Base+0x947a>
  40fd93:	movzx  eax,BYTE PTR [r12]
  40fd98:	cmp    al,0x2c
  40fd9a:	jne    410322 <main@@Base+0x9502>
  40fda0:	lea    rsi,[r12+0x1]
  40fda5:	mov    rax,r14
  40fda8:	sub    rax,rsi
  40fdab:	cmp    rax,0x2
  40fdaf:	jl     40fdd1 <main@@Base+0x8fb1>
  40fdb1:	cmp    BYTE PTR [rsi],0x20
  40fdb4:	jg     40fddf <main@@Base+0x8fbf>
  40fdb6:	jne    40fdd1 <main@@Base+0x8fb1>
  40fdb8:	cmp    BYTE PTR [r12+0x2],0x20
  40fdbe:	jle    40fdd1 <main@@Base+0x8fb1>
  40fdc0:	add    r12,0x2
  40fdc4:	mov    rsi,r12
  40fdc7:	cmp    rsi,r14
  40fdca:	jne    40fde8 <main@@Base+0x8fc8>
  40fdcc:	jmp    410364 <main@@Base+0x9544>
  40fdd1:	mov    rdi,r15
  40fdd4:	mov    rdx,r14
  40fdd7:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fddc:	mov    rsi,rax
  40fddf:	cmp    rsi,r14
  40fde2:	je     410364 <main@@Base+0x9544>
  40fde8:	cmp    BYTE PTR [rsi],0x7d
  40fdeb:	jne    40f6b5 <main@@Base+0x8895>
  40fdf1:	lea    r13,[rsi+0x1]
  40fdf5:	mov    rax,r14
  40fdf8:	sub    rax,r13
  40fdfb:	cmp    rax,0x2
  40fdff:	jl     410693 <main@@Base+0x9873>
  40fe05:	cmp    BYTE PTR [r13+0x0],0x20
  40fe0a:	jg     41034a <main@@Base+0x952a>
  40fe10:	jne    410693 <main@@Base+0x9873>
  40fe16:	cmp    BYTE PTR [rsi+0x2],0x20
  40fe1a:	jle    410693 <main@@Base+0x9873>
  40fe20:	add    rsi,0x2
  40fe24:	mov    r13,rsi
  40fe27:	mov    r15,QWORD PTR [rsp+0x8]
  40fe2c:	jmp    40cc4b <main@@Base+0x5e2b>
  40fe31:	lea    r13,[r12+0x1]
  40fe36:	mov    rax,r14
  40fe39:	sub    rax,r13
  40fe3c:	cmp    rax,0x2
  40fe40:	jl     4104c8 <main@@Base+0x96a8>
  40fe46:	cmp    BYTE PTR [r13+0x0],0x20
  40fe4b:	jle    4104b2 <main@@Base+0x9692>
  40fe51:	mov    r15,QWORD PTR [rsp+0x8]
  40fe56:	jmp    40c80b <main@@Base+0x59eb>
  40fe5b:	mov    r15,QWORD PTR [rsp+0x8]
  40fe60:	mov    rdi,r15
  40fe63:	mov    rsi,r13
  40fe66:	mov    rdx,r14
  40fe69:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fe6e:	jmp    40d246 <main@@Base+0x6426>
  40fe73:	mov    r15,QWORD PTR [rsp+0x8]
  40fe78:	mov    rdi,r15
  40fe7b:	mov    rsi,r13
  40fe7e:	mov    rdx,r14
  40fe81:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fe86:	mov    r13,rax
  40fe89:	jmp    410482 <main@@Base+0x9662>
  40fe8e:	mov    ecx,0x9
  40fe93:	mov    r15,QWORD PTR [rsp+0x8]
  40fe98:	mov    rdi,r15
  40fe9b:	mov    rsi,rdx
  40fe9e:	jmp    40c319 <main@@Base+0x54f9>
  40fea3:	jne    40febe <main@@Base+0x909e>
  40fea5:	cmp    BYTE PTR [r12+0x2],0x20
  40feab:	jle    40febe <main@@Base+0x909e>
  40fead:	add    r12,0x2
  40feb1:	mov    r13,r12
  40feb4:	mov    r15,QWORD PTR [rsp+0x8]
  40feb9:	jmp    40aa8a <main@@Base+0x3c6a>
  40febe:	mov    r15,QWORD PTR [rsp+0x8]
  40fec3:	mov    rdi,r15
  40fec6:	mov    rsi,r13
  40fec9:	mov    rdx,r14
  40fecc:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  40fed1:	jmp    40aa87 <main@@Base+0x3c67>
  40fed6:	mov    r13,r14
  40fed9:	jmp    40c851 <main@@Base+0x5a31>
  40fede:	cmp    al,0x7d
  40fee0:	jne    4103f5 <main@@Base+0x95d5>
  40fee6:	lea    r13,[r12+0x1]
  40feeb:	mov    rax,r14
  40feee:	sub    rax,r13
  40fef1:	cmp    rax,0x2
  40fef5:	jl     41062d <main@@Base+0x980d>
  40fefb:	cmp    BYTE PTR [r13+0x0],0x20
  40ff00:	jle    410612 <main@@Base+0x97f2>
  40ff06:	mov    r15,QWORD PTR [rsp+0x8]
  40ff0b:	jmp    40c851 <main@@Base+0x5a31>
  40ff10:	mov    r12,rax
  40ff13:	mov    BYTE PTR [rsp+0x14],0x0
  40ff18:	mov    rax,QWORD PTR [rsp+0x8]
  40ff1d:	mov    rdi,QWORD PTR [rax]
  40ff20:	mov    esi,0x1
  40ff25:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  40ff2a:	test   rax,rax
  40ff2d:	je     4107cc <main@@Base+0x99ac>
  40ff33:	mov    rbx,rax
  40ff36:	mov    QWORD PTR [rsp+0x20],0x0
  40ff3f:	mov    DWORD PTR [rsp+0x30],0x0
  40ff47:	mov    BYTE PTR [rsp+0x14],0x0
  40ff4c:	cmp    r12,r14
  40ff4f:	je     40ff7e <main@@Base+0x915e>
  40ff51:	mov    rdi,QWORD PTR [rsp+0x8]
  40ff56:	mov    rsi,r12
  40ff59:	mov    rdx,r14
  40ff5c:	lea    rcx,[rsp+0x30]
  40ff61:	lea    r8,[rsp+0x20]
  40ff66:	call   425160 <flatcc_json_parser_integer@@Base>
  40ff6b:	cmp    rax,r12
  40ff6e:	je     40ff8a <main@@Base+0x916a>
  40ff70:	cmp    DWORD PTR [rsp+0x30],0x0
  40ff75:	je     40ff96 <main@@Base+0x9176>
  40ff77:	mov    ecx,0x8
  40ff7c:	jmp    40ffad <main@@Base+0x918d>
  40ff7e:	xor    ecx,ecx
  40ff80:	mov    rax,r14
  40ff83:	cmp    r12,rax
  40ff86:	jne    40fff7 <main@@Base+0x91d7>
  40ff88:	jmp    40ffc4 <main@@Base+0x91a4>
  40ff8a:	xor    ecx,ecx
  40ff8c:	mov    rax,r12
  40ff8f:	cmp    r12,rax
  40ff92:	jne    40fff7 <main@@Base+0x91d7>
  40ff94:	jmp    40ffc4 <main@@Base+0x91a4>
  40ff96:	mov    rcx,QWORD PTR [rsp+0x20]
  40ff9b:	cmp    rcx,0x100
  40ffa2:	jb     4100b9 <main@@Base+0x9299>
  40ffa8:	mov    ecx,0x7
  40ffad:	mov    rdi,QWORD PTR [rsp+0x8]
  40ffb2:	mov    rsi,rax
  40ffb5:	mov    rdx,r14
  40ffb8:	call   423620 <flatcc_json_parser_set_error@@Base>
  40ffbd:	xor    ecx,ecx
  40ffbf:	cmp    r12,rax
  40ffc2:	jne    40fff7 <main@@Base+0x91d7>
  40ffc4:	mov    rdi,QWORD PTR [rsp+0x8]
  40ffc9:	mov    rsi,r12
  40ffcc:	mov    rdx,r14
  40ffcf:	lea    rcx,[rip+0x3134a]        # 441320 <__data_start@@Base+0x270>
  40ffd6:	lea    r8,[rsp+0x14]
  40ffdb:	call   412760 <main@@Base+0xb940>
  40ffe0:	cmp    rax,r12
  40ffe3:	je     4107d6 <main@@Base+0x99b6>
  40ffe9:	cmp    rax,r14
  40ffec:	je     4107d6 <main@@Base+0x99b6>
  40fff2:	movzx  ecx,BYTE PTR [rsp+0x14]
  40fff7:	mov    BYTE PTR [rbx],cl
  40fff9:	mov    rcx,r14
  40fffc:	sub    rcx,rax
  40ffff:	cmp    rcx,0x2
  410003:	jl     410020 <main@@Base+0x9200>
  410005:	cmp    BYTE PTR [rax],0x20
  410008:	jg     410030 <main@@Base+0x9210>
  41000a:	jne    410020 <main@@Base+0x9200>
  41000c:	cmp    BYTE PTR [rax+0x1],0x20
  410010:	jle    410020 <main@@Base+0x9200>
  410012:	add    rax,0x1
  410016:	cmp    rax,r14
  410019:	jne    410039 <main@@Base+0x9219>
  41001b:	jmp    410442 <main@@Base+0x9622>
  410020:	mov    rdi,QWORD PTR [rsp+0x8]
  410025:	mov    rsi,rax
  410028:	mov    rdx,r14
  41002b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410030:	cmp    rax,r14
  410033:	je     410442 <main@@Base+0x9622>
  410039:	movzx  ecx,BYTE PTR [rax]
  41003c:	cmp    cl,0x2c
  41003f:	jne    41044a <main@@Base+0x962a>
  410045:	lea    r12,[rax+0x1]
  410049:	mov    rcx,r14
  41004c:	sub    rcx,r12
  41004f:	cmp    rcx,0x2
  410053:	jl     41006a <main@@Base+0x924a>
  410055:	cmp    BYTE PTR [r12],0x20
  41005a:	jg     41007d <main@@Base+0x925d>
  41005c:	jne    41006a <main@@Base+0x924a>
  41005e:	cmp    BYTE PTR [rax+0x2],0x20
  410062:	jle    41006a <main@@Base+0x924a>
  410064:	add    rax,0x2
  410068:	jmp    41007a <main@@Base+0x925a>
  41006a:	mov    rdi,QWORD PTR [rsp+0x8]
  41006f:	mov    rsi,r12
  410072:	mov    rdx,r14
  410075:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41007a:	mov    r12,rax
  41007d:	cmp    r12,r14
  410080:	je     4104f4 <main@@Base+0x96d4>
  410086:	cmp    BYTE PTR [r12],0x5d
  41008b:	je     410506 <main@@Base+0x96e6>
  410091:	mov    BYTE PTR [rsp+0x14],0x0
  410096:	mov    rax,QWORD PTR [rsp+0x8]
  41009b:	mov    rdi,QWORD PTR [rax]
  41009e:	mov    esi,0x1
  4100a3:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  4100a8:	mov    rbx,rax
  4100ab:	test   rax,rax
  4100ae:	jne    40ff36 <main@@Base+0x9116>
  4100b4:	jmp    4107cc <main@@Base+0x99ac>
  4100b9:	mov    BYTE PTR [rsp+0x14],cl
  4100bd:	cmp    r12,rax
  4100c0:	jne    40fff7 <main@@Base+0x91d7>
  4100c6:	jmp    40ffc4 <main@@Base+0x91a4>
  4100cb:	mov    r13,r14
  4100ce:	jmp    40d0ff <main@@Base+0x62df>
  4100d3:	mov    ecx,0xa
  4100d8:	mov    rdi,r15
  4100db:	mov    rsi,r14
  4100de:	jmp    40c846 <main@@Base+0x5a26>
  4100e3:	cmp    al,0x5d
  4100e5:	jne    410404 <main@@Base+0x95e4>
  4100eb:	lea    r13,[r12+0x1]
  4100f0:	mov    rax,r14
  4100f3:	sub    rax,r13
  4100f6:	cmp    rax,0x2
  4100fa:	jl     410660 <main@@Base+0x9840>
  410100:	cmp    BYTE PTR [r13+0x0],0x20
  410105:	jle    410645 <main@@Base+0x9825>
  41010b:	mov    r15,QWORD PTR [rsp+0x8]
  410110:	jmp    40d0ff <main@@Base+0x62df>
  410115:	mov    ecx,0x9
  41011a:	mov    r15,QWORD PTR [rsp+0x8]
  41011f:	jmp    40c240 <main@@Base+0x5420>
  410124:	mov    ecx,0x9
  410129:	mov    r15,QWORD PTR [rsp+0x8]
  41012e:	jmp    40c3d7 <main@@Base+0x55b7>
  410133:	mov    ecx,0x9
  410138:	mov    rdi,r15
  41013b:	mov    rsi,r14
  41013e:	jmp    40d0f4 <main@@Base+0x62d4>
  410143:	mov    r13,r14
  410146:	jmp    40ced1 <main@@Base+0x60b1>
  41014b:	mov    r13,r14
  41014e:	mov    r15,QWORD PTR [rsp+0x8]
  410153:	jmp    40d249 <main@@Base+0x6429>
  410158:	mov    DWORD PTR [rsp+0x14],eax
  41015c:	mov    r12d,eax
  41015f:	mov    r15,QWORD PTR [rsp+0x8]
  410164:	cmp    rbx,r13
  410167:	jne    4101a2 <main@@Base+0x9382>
  410169:	mov    rdi,r15
  41016c:	mov    rsi,rbx
  41016f:	mov    rdx,r14
  410172:	lea    rcx,[rip+0x31147]        # 4412c0 <__data_start@@Base+0x210>
  410179:	lea    r8,[rsp+0x14]
  41017e:	call   414890 <main@@Base+0xda70>
  410183:	mov    r13,rax
  410186:	cmp    rax,rbx
  410189:	je     4107b7 <main@@Base+0x9997>
  41018f:	cmp    r13,r14
  410192:	je     4107b7 <main@@Base+0x9997>
  410198:	mov    r12d,DWORD PTR [rsp+0x14]
  41019d:	mov    r15,QWORD PTR [rsp+0x8]
  4101a2:	test   r12d,r12d
  4101a5:	jne    4101b2 <main@@Base+0x9392>
  4101a7:	test   BYTE PTR [r15+0x10],0x2
  4101ac:	je     40d3f0 <main@@Base+0x65d0>
  4101b2:	mov    rdi,QWORD PTR [r15]
  4101b5:	mov    esi,0x15
  4101ba:	mov    edx,0x4
  4101bf:	mov    ecx,0x4
  4101c4:	call   41fe80 <flatcc_builder_table_add@@Base>
  4101c9:	test   rax,rax
  4101cc:	je     4107b7 <main@@Base+0x9997>
  4101d2:	mov    DWORD PTR [rax],r12d
  4101d5:	jmp    40d3f0 <main@@Base+0x65d0>
  4101da:	cmp    cl,0x7d
  4101dd:	jne    410413 <main@@Base+0x95f3>
  4101e3:	lea    r13,[rax+0x1]
  4101e7:	mov    rcx,r14
  4101ea:	sub    rcx,r13
  4101ed:	cmp    rcx,0x2
  4101f1:	jl     410213 <main@@Base+0x93f3>
  4101f3:	cmp    BYTE PTR [r13+0x0],0x20
  4101f8:	jg     410209 <main@@Base+0x93e9>
  4101fa:	jne    410213 <main@@Base+0x93f3>
  4101fc:	cmp    BYTE PTR [rax+0x2],0x20
  410200:	jle    410213 <main@@Base+0x93f3>
  410202:	add    rax,0x2
  410206:	mov    r13,rax
  410209:	mov    r15,QWORD PTR [rsp+0x8]
  41020e:	jmp    40ced1 <main@@Base+0x60b1>
  410213:	mov    r15,QWORD PTR [rsp+0x8]
  410218:	mov    rdi,r15
  41021b:	mov    rsi,r13
  41021e:	mov    rdx,r14
  410221:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410226:	jmp    40cece <main@@Base+0x60ae>
  41022b:	cmp    cl,0x5d
  41022e:	jne    410428 <main@@Base+0x9608>
  410234:	lea    r13,[rax+0x1]
  410238:	mov    rcx,r14
  41023b:	sub    rcx,r13
  41023e:	cmp    rcx,0x2
  410242:	jl     4105f5 <main@@Base+0x97d5>
  410248:	cmp    BYTE PTR [r13+0x0],0x20
  41024d:	jg     410318 <main@@Base+0x94f8>
  410253:	jne    4105f5 <main@@Base+0x97d5>
  410259:	cmp    BYTE PTR [rax+0x2],0x20
  41025d:	jg     40dfd2 <main@@Base+0x71b2>
  410263:	jmp    4105f5 <main@@Base+0x97d5>
  410268:	mov    ecx,0x9
  41026d:	mov    rdi,QWORD PTR [rsp+0x8]
  410272:	mov    rsi,rax
  410275:	mov    rdx,r14
  410278:	call   423620 <flatcc_json_parser_set_error@@Base>
  41027d:	jmp    4104d8 <main@@Base+0x96b8>
  410282:	mov    r13,r14
  410285:	jmp    41047d <main@@Base+0x965d>
  41028a:	mov    ecx,0xa
  41028f:	mov    rdi,r15
  410292:	mov    rsi,r14
  410295:	jmp    40cec6 <main@@Base+0x60a6>
  41029a:	mov    r13,r14
  41029d:	jmp    40cc4b <main@@Base+0x5e2b>
  4102a2:	mov    ecx,0x9
  4102a7:	mov    rdi,r15
  4102aa:	mov    rsi,r14
  4102ad:	jmp    410435 <main@@Base+0x9615>
  4102b2:	cmp    al,0x5d
  4102b4:	jne    410465 <main@@Base+0x9645>
  4102ba:	lea    r13,[r12+0x1]
  4102bf:	mov    rax,r14
  4102c2:	sub    rax,r13
  4102c5:	cmp    rax,0x2
  4102c9:	jl     4103ad <main@@Base+0x958d>
  4102cf:	cmp    BYTE PTR [r13+0x0],0x20
  4102d4:	jg     41047d <main@@Base+0x965d>
  4102da:	jne    4103ad <main@@Base+0x958d>
  4102e0:	cmp    BYTE PTR [r12+0x2],0x20
  4102e6:	jle    4103ad <main@@Base+0x958d>
  4102ec:	add    r12,0x2
  4102f0:	mov    r13,r12
  4102f3:	jmp    41047d <main@@Base+0x965d>
  4102f8:	lea    r13,[r12+0x1]
  4102fd:	mov    rax,r14
  410300:	sub    rax,r13
  410303:	cmp    rax,0x2
  410307:	jl     4105f5 <main@@Base+0x97d5>
  41030d:	cmp    BYTE PTR [r13+0x0],0x20
  410312:	jle    4105df <main@@Base+0x97bf>
  410318:	mov    r15,QWORD PTR [rsp+0x8]
  41031d:	jmp    40d249 <main@@Base+0x6429>
  410322:	cmp    al,0x7d
  410324:	jne    4104e5 <main@@Base+0x96c5>
  41032a:	lea    r13,[r12+0x1]
  41032f:	mov    rax,r14
  410332:	sub    rax,r13
  410335:	cmp    rax,0x2
  410339:	jl     410693 <main@@Base+0x9873>
  41033f:	cmp    BYTE PTR [r13+0x0],0x20
  410344:	jle    410678 <main@@Base+0x9858>
  41034a:	mov    r15,QWORD PTR [rsp+0x8]
  41034f:	jmp    40cc4b <main@@Base+0x5e2b>
  410354:	mov    ecx,0x9
  410359:	mov    rdi,r15
  41035c:	mov    rsi,r14
  41035f:	jmp    410472 <main@@Base+0x9652>
  410364:	mov    ecx,0xa
  410369:	mov    rdi,r15
  41036c:	mov    rsi,r14
  41036f:	jmp    40cc40 <main@@Base+0x5e20>
  410374:	mov    r15,QWORD PTR [rsp+0x8]
  410379:	jmp    40c862 <main@@Base+0x5a42>
  41037e:	lea    r13,[rbx+0x1]
  410382:	mov    rax,r14
  410385:	sub    rax,r13
  410388:	cmp    rax,0x2
  41038c:	jl     4103ad <main@@Base+0x958d>
  41038e:	cmp    BYTE PTR [r13+0x0],0x20
  410393:	jg     41047d <main@@Base+0x965d>
  410399:	jne    4103ad <main@@Base+0x958d>
  41039b:	cmp    BYTE PTR [rbx+0x2],0x20
  41039f:	jle    4103ad <main@@Base+0x958d>
  4103a1:	add    rbx,0x2
  4103a5:	mov    r13,rbx
  4103a8:	jmp    41047d <main@@Base+0x965d>
  4103ad:	mov    rdi,QWORD PTR [rsp+0x8]
  4103b2:	mov    rsi,r13
  4103b5:	mov    rdx,r14
  4103b8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4103bd:	jmp    41047a <main@@Base+0x965a>
  4103c2:	jne    4103dd <main@@Base+0x95bd>
  4103c4:	cmp    BYTE PTR [r12+0x2],0x20
  4103ca:	jle    4103dd <main@@Base+0x95bd>
  4103cc:	add    r12,0x2
  4103d0:	mov    r13,r12
  4103d3:	mov    r15,QWORD PTR [rsp+0x8]
  4103d8:	jmp    40c324 <main@@Base+0x5504>
  4103dd:	mov    r15,QWORD PTR [rsp+0x8]
  4103e2:	mov    rdi,r15
  4103e5:	mov    rsi,r13
  4103e8:	mov    rdx,r14
  4103eb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4103f0:	jmp    40c321 <main@@Base+0x5501>
  4103f5:	mov    ecx,0xa
  4103fa:	mov    r15,QWORD PTR [rsp+0x8]
  4103ff:	jmp    40c840 <main@@Base+0x5a20>
  410404:	mov    ecx,0x9
  410409:	mov    r15,QWORD PTR [rsp+0x8]
  41040e:	jmp    40d0ee <main@@Base+0x62ce>
  410413:	mov    ecx,0xa
  410418:	mov    r15,QWORD PTR [rsp+0x8]
  41041d:	mov    rdi,r15
  410420:	mov    rsi,rax
  410423:	jmp    40cec6 <main@@Base+0x60a6>
  410428:	mov    ecx,0x9
  41042d:	mov    rdi,QWORD PTR [rsp+0x8]
  410432:	mov    rsi,rax
  410435:	mov    rdx,r14
  410438:	call   423620 <flatcc_json_parser_set_error@@Base>
  41043d:	jmp    410605 <main@@Base+0x97e5>
  410442:	mov    r13,r14
  410445:	jmp    410544 <main@@Base+0x9724>
  41044a:	cmp    cl,0x5d
  41044d:	je     40eb27 <main@@Base+0x7d07>
  410453:	mov    ecx,0x9
  410458:	mov    rdi,QWORD PTR [rsp+0x8]
  41045d:	mov    rsi,rax
  410460:	jmp    40e6c3 <main@@Base+0x78a3>
  410465:	mov    ecx,0x9
  41046a:	mov    rdi,QWORD PTR [rsp+0x8]
  41046f:	mov    rsi,r12
  410472:	mov    rdx,r14
  410475:	call   423620 <flatcc_json_parser_set_error@@Base>
  41047a:	mov    r13,rax
  41047d:	mov    r15,QWORD PTR [rsp+0x8]
  410482:	mov    rdi,QWORD PTR [r15]
  410485:	call   41f820 <flatcc_builder_end_vector@@Base>
  41048a:	mov    DWORD PTR [rsp+0x2c],eax
  41048e:	test   eax,eax
  410490:	mov    rbp,QWORD PTR [rsp+0x18]
  410495:	movabs r12,0x7465737400000000
  41049f:	je     41078b <main@@Base+0x996b>
  4104a5:	mov    rdi,QWORD PTR [r15]
  4104a8:	mov    esi,0x21
  4104ad:	jmp    40a6e9 <main@@Base+0x38c9>
  4104b2:	jne    4104c8 <main@@Base+0x96a8>
  4104b4:	cmp    BYTE PTR [r12+0x2],0x20
  4104ba:	jle    4104c8 <main@@Base+0x96a8>
  4104bc:	add    r12,0x2
  4104c0:	mov    r13,r12
  4104c3:	jmp    40fe51 <main@@Base+0x9031>
  4104c8:	mov    rdi,QWORD PTR [rsp+0x8]
  4104cd:	mov    rsi,r13
  4104d0:	mov    rdx,r14
  4104d3:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4104d8:	mov    r13,rax
  4104db:	mov    r15,QWORD PTR [rsp+0x8]
  4104e0:	jmp    40c80b <main@@Base+0x59eb>
  4104e5:	mov    ecx,0xa
  4104ea:	mov    r15,QWORD PTR [rsp+0x8]
  4104ef:	jmp    40cc3a <main@@Base+0x5e1a>
  4104f4:	mov    ecx,0x9
  4104f9:	mov    rdi,QWORD PTR [rsp+0x8]
  4104fe:	mov    rsi,r14
  410501:	jmp    40e6c3 <main@@Base+0x78a3>
  410506:	lea    r13,[r12+0x1]
  41050b:	mov    rax,r14
  41050e:	sub    rax,r13
  410511:	cmp    rax,0x2
  410515:	jl     410531 <main@@Base+0x9711>
  410517:	cmp    BYTE PTR [r13+0x0],0x20
  41051c:	jg     410544 <main@@Base+0x9724>
  41051e:	jne    410531 <main@@Base+0x9711>
  410520:	cmp    BYTE PTR [r12+0x2],0x20
  410526:	jle    410531 <main@@Base+0x9711>
  410528:	add    r12,0x2
  41052c:	mov    r13,r12
  41052f:	jmp    410544 <main@@Base+0x9724>
  410531:	mov    rdi,QWORD PTR [rsp+0x8]
  410536:	mov    rsi,r13
  410539:	mov    rdx,r14
  41053c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410541:	mov    r13,rax
  410544:	mov    r15,QWORD PTR [rsp+0x8]
  410549:	mov    rdi,QWORD PTR [r15]
  41054c:	call   41f820 <flatcc_builder_end_vector@@Base>
  410551:	mov    rbp,QWORD PTR [rsp+0x18]
  410556:	movabs r12,0x7465737400000000
  410560:	mov    DWORD PTR [rsp+0x2c],eax
  410564:	test   eax,eax
  410566:	je     41078b <main@@Base+0x996b>
  41056c:	mov    rdi,QWORD PTR [r15]
  41056f:	mov    esi,0xd
  410574:	jmp    40a6e9 <main@@Base+0x38c9>
  410579:	jne    410594 <main@@Base+0x9774>
  41057b:	cmp    BYTE PTR [r12+0x2],0x20
  410581:	jle    410594 <main@@Base+0x9774>
  410583:	add    r12,0x2
  410587:	mov    r13,r12
  41058a:	mov    r15,QWORD PTR [rsp+0x8]
  41058f:	jmp    40c251 <main@@Base+0x5431>
  410594:	mov    r15,QWORD PTR [rsp+0x8]
  410599:	mov    rdi,r15
  41059c:	mov    rsi,r13
  41059f:	mov    rdx,r14
  4105a2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4105a7:	jmp    40c24e <main@@Base+0x542e>
  4105ac:	jne    4105c7 <main@@Base+0x97a7>
  4105ae:	cmp    BYTE PTR [r12+0x2],0x20
  4105b4:	jle    4105c7 <main@@Base+0x97a7>
  4105b6:	add    r12,0x2
  4105ba:	mov    r13,r12
  4105bd:	mov    r15,QWORD PTR [rsp+0x8]
  4105c2:	jmp    40c3e8 <main@@Base+0x55c8>
  4105c7:	mov    r15,QWORD PTR [rsp+0x8]
  4105cc:	mov    rdi,r15
  4105cf:	mov    rsi,r13
  4105d2:	mov    rdx,r14
  4105d5:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4105da:	jmp    40c3e5 <main@@Base+0x55c5>
  4105df:	jne    4105f5 <main@@Base+0x97d5>
  4105e1:	cmp    BYTE PTR [r12+0x2],0x20
  4105e7:	jle    4105f5 <main@@Base+0x97d5>
  4105e9:	add    r12,0x2
  4105ed:	mov    r13,r12
  4105f0:	jmp    410318 <main@@Base+0x94f8>
  4105f5:	mov    rdi,QWORD PTR [rsp+0x8]
  4105fa:	mov    rsi,r13
  4105fd:	mov    rdx,r14
  410600:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410605:	mov    r13,rax
  410608:	mov    r15,QWORD PTR [rsp+0x8]
  41060d:	jmp    40d249 <main@@Base+0x6429>
  410612:	jne    41062d <main@@Base+0x980d>
  410614:	cmp    BYTE PTR [r12+0x2],0x20
  41061a:	jle    41062d <main@@Base+0x980d>
  41061c:	add    r12,0x2
  410620:	mov    r13,r12
  410623:	mov    r15,QWORD PTR [rsp+0x8]
  410628:	jmp    40c851 <main@@Base+0x5a31>
  41062d:	mov    r15,QWORD PTR [rsp+0x8]
  410632:	mov    rdi,r15
  410635:	mov    rsi,r13
  410638:	mov    rdx,r14
  41063b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410640:	jmp    40c84e <main@@Base+0x5a2e>
  410645:	jne    410660 <main@@Base+0x9840>
  410647:	cmp    BYTE PTR [r12+0x2],0x20
  41064d:	jle    410660 <main@@Base+0x9840>
  41064f:	add    r12,0x2
  410653:	mov    r13,r12
  410656:	mov    r15,QWORD PTR [rsp+0x8]
  41065b:	jmp    40d0ff <main@@Base+0x62df>
  410660:	mov    r15,QWORD PTR [rsp+0x8]
  410665:	mov    rdi,r15
  410668:	mov    rsi,r13
  41066b:	mov    rdx,r14
  41066e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410673:	jmp    40d0fc <main@@Base+0x62dc>
  410678:	jne    410693 <main@@Base+0x9873>
  41067a:	cmp    BYTE PTR [r12+0x2],0x20
  410680:	jle    410693 <main@@Base+0x9873>
  410682:	add    r12,0x2
  410686:	mov    r13,r12
  410689:	mov    r15,QWORD PTR [rsp+0x8]
  41068e:	jmp    40cc4b <main@@Base+0x5e2b>
  410693:	mov    r15,QWORD PTR [rsp+0x8]
  410698:	mov    rdi,r15
  41069b:	mov    rsi,r13
  41069e:	mov    rdx,r14
  4106a1:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4106a6:	jmp    40cc48 <main@@Base+0x5e28>
  4106ab:	mov    rdi,r15
  4106ae:	mov    rsi,r12
  4106b1:	mov    rdx,r14
  4106b4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4106b9:	jmp    407596 <main@@Base+0x776>
  4106be:	mov    r12,r14
  4106c1:	jmp    4107a4 <main@@Base+0x9984>
  4106c6:	cmp    al,0x7d
  4106c8:	jne    410776 <main@@Base+0x9956>
  4106ce:	lea    r12,[r13+0x1]
  4106d2:	mov    rax,r14
  4106d5:	sub    rax,r12
  4106d8:	cmp    rax,0x2
  4106dc:	jl     410793 <main@@Base+0x9973>
  4106e2:	cmp    BYTE PTR [r12],0x20
  4106e7:	jg     4107a4 <main@@Base+0x9984>
  4106ed:	jne    410793 <main@@Base+0x9973>
  4106f3:	cmp    BYTE PTR [r13+0x2],0x20
  4106f8:	jle    410793 <main@@Base+0x9973>
  4106fe:	add    r13,0x2
  410702:	mov    r12,r13
  410705:	jmp    4107a4 <main@@Base+0x9984>
  41070a:	mov    ecx,0xa
  41070f:	mov    rdi,r15
  410712:	mov    rsi,r14
  410715:	mov    rdx,r14
  410718:	call   423620 <flatcc_json_parser_set_error@@Base>
  41071d:	jmp    410765 <main@@Base+0x9945>
  41071f:	lea    r12,[rsi+0x1]
  410723:	mov    rax,r14
  410726:	sub    rax,r12
  410729:	cmp    rax,0x2
  41072d:	jl     410757 <main@@Base+0x9937>
  41072f:	cmp    BYTE PTR [r12],0x20
  410734:	jg     40759d <main@@Base+0x77d>
  41073a:	jne    410757 <main@@Base+0x9937>
  41073c:	cmp    BYTE PTR [rsi+0x2],0x20
  410740:	jle    410757 <main@@Base+0x9937>
  410742:	add    rsi,0x2
  410746:	mov    r12,rsi
  410749:	cmp    DWORD PTR [rbx],0x0
  41074c:	jne    407501 <main@@Base+0x6e1>
  410752:	jmp    4075a6 <main@@Base+0x786>
  410757:	mov    rdi,r15
  41075a:	mov    rsi,r12
  41075d:	mov    rdx,r14
  410760:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  410765:	mov    r12,rax
  410768:	cmp    DWORD PTR [rbx],0x0
  41076b:	jne    407501 <main@@Base+0x6e1>
  410771:	jmp    4075a6 <main@@Base+0x786>
  410776:	mov    ecx,0xa
  41077b:	mov    rdi,r15
  41077e:	mov    rsi,r13
  410781:	mov    rdx,r14
  410784:	call   423620 <flatcc_json_parser_set_error@@Base>
  410789:	jmp    4107a1 <main@@Base+0x9981>
  41078b:	mov    r12,r13
  41078e:	jmp    407501 <main@@Base+0x6e1>
  410793:	mov    rdi,r15
  410796:	mov    rsi,r12
  410799:	mov    rdx,r14
  41079c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4107a1:	mov    r12,rax
  4107a4:	mov    rbx,QWORD PTR [rsp+0x38]
  4107a9:	cmp    DWORD PTR [rbx],0x0
  4107ac:	jne    407501 <main@@Base+0x6e1>
  4107b2:	jmp    4075a6 <main@@Base+0x786>
  4107b7:	mov    r12,r13
  4107ba:	mov    r15,QWORD PTR [rsp+0x8]
  4107bf:	jmp    407501 <main@@Base+0x6e1>
  4107c4:	mov    r12,rax
  4107c7:	jmp    407501 <main@@Base+0x6e1>
  4107cc:	mov    r15,QWORD PTR [rsp+0x8]
  4107d1:	jmp    407501 <main@@Base+0x6e1>
  4107d6:	mov    r12,rax
  4107d9:	mov    r15,QWORD PTR [rsp+0x8]
  4107de:	jmp    407501 <main@@Base+0x6e1>
  4107e3:	mov    r12,rbx
  4107e6:	mov    r15,QWORD PTR [rsp+0x8]
  4107eb:	jmp    407501 <main@@Base+0x6e1>
  4107f0:	push   r15
  4107f2:	push   r14
  4107f4:	push   r12
  4107f6:	push   rbx
  4107f7:	push   rax
  4107f8:	mov    r14,rsi
  4107fb:	mov    rbx,rdi
  4107fe:	lea    rcx,[rip+0x25fe0]        # 4367e5 <_IO_stdin_used@@Base+0x37e5>
  410805:	lea    r9,[rip+0xb264]        # 41ba70 <main@@Base+0x14c50>
  41080c:	xor    edx,edx
  41080e:	mov    r8d,0x3
  410814:	call   431af0 <flatcc_json_printer_struct_field@@Base>
  410819:	lea    rcx,[rip+0x25fc9]        # 4367e9 <_IO_stdin_used@@Base+0x37e9>
  410820:	mov    edx,0x1
  410825:	mov    r8d,0x4
  41082b:	mov    r9d,0x96
  410831:	mov    rdi,rbx
  410834:	mov    rsi,r14
  410837:	call   429510 <flatcc_json_printer_int16_field@@Base>
  41083c:	lea    rcx,[rip+0x25fab]        # 4367ee <_IO_stdin_used@@Base+0x37ee>
  410843:	mov    edx,0x2
  410848:	mov    r8d,0x2
  41084e:	mov    r9d,0x64
  410854:	mov    rdi,rbx
  410857:	mov    rsi,r14
  41085a:	call   429510 <flatcc_json_printer_int16_field@@Base>
  41085f:	lea    rcx,[rip+0x25f8b]        # 4367f1 <_IO_stdin_used@@Base+0x37f1>
  410866:	mov    edx,0x3
  41086b:	mov    r8d,0x4
  410871:	mov    rdi,rbx
  410874:	mov    rsi,r14
  410877:	call   428bf0 <flatcc_json_printer_string_field@@Base>
  41087c:	lea    rcx,[rip+0x25f73]        # 4367f6 <_IO_stdin_used@@Base+0x37f6>
  410883:	mov    edx,0x5
  410888:	mov    r8d,0x9
  41088e:	mov    rdi,rbx
  410891:	mov    rsi,r14
  410894:	call   42b5d0 <flatcc_json_printer_uint8_vector_field@@Base>
  410899:	lea    rax,[rip+0xb2c0]        # 41bb60 <main@@Base+0x14d40>
  4108a0:	mov    QWORD PTR [rsp],rax
  4108a4:	lea    rcx,[rip+0x25f55]        # 436800 <_IO_stdin_used@@Base+0x3800>
  4108ab:	mov    edx,0x6
  4108b0:	mov    r8d,0x5
  4108b6:	mov    r9d,0x8
  4108bc:	mov    rdi,rbx
  4108bf:	mov    rsi,r14
  4108c2:	call   429e40 <flatcc_json_printer_int8_enum_field@@Base>
  4108c7:	lea    rax,[rip+0xb3f2]        # 41bcc0 <main@@Base+0x14ea0>
  4108ce:	mov    QWORD PTR [rsp],rax
  4108d2:	lea    rcx,[rip+0x2609f]        # 436978 <_IO_stdin_used@@Base+0x3978>
  4108d9:	lea    r9,[rip+0xb360]        # 41bc40 <main@@Base+0x14e20>
  4108e0:	mov    edx,0x8
  4108e5:	mov    r8d,0x4
  4108eb:	mov    rdi,rbx
  4108ee:	mov    rsi,r14
  4108f1:	call   431370 <flatcc_json_printer_union_field@@Base>
  4108f6:	lea    r12,[rip+0xb413]        # 41bd10 <main@@Base+0x14ef0>
  4108fd:	mov    QWORD PTR [rsp],r12
  410901:	lea    rcx,[rip+0x25efe]        # 436806 <_IO_stdin_used@@Base+0x3806>
  410908:	mov    edx,0x9
  41090d:	mov    r8d,0x5
  410913:	mov    r9d,0x4
  410919:	mov    rdi,rbx
  41091c:	mov    rsi,r14
  41091f:	call   4302b0 <flatcc_json_printer_struct_vector_field@@Base>
  410924:	lea    rcx,[rip+0x25ee1]        # 43680c <_IO_stdin_used@@Base+0x380c>
  41092b:	mov    edx,0xa
  410930:	mov    r8d,0x11
  410936:	mov    rdi,rbx
  410939:	mov    rsi,r14
  41093c:	call   430770 <flatcc_json_printer_string_vector_field@@Base>
  410941:	lea    rcx,[rip+0x25ed6]        # 43681e <_IO_stdin_used@@Base+0x381e>
  410948:	lea    r15,[rip+0xfffffffffffffea1]        # 4107f0 <main@@Base+0x99d0>
  41094f:	mov    edx,0xb
  410954:	mov    r8d,0x11
  41095a:	mov    rdi,rbx
  41095d:	mov    rsi,r14
  410960:	mov    r9,r15
  410963:	call   430a60 <flatcc_json_printer_table_vector_field@@Base>
  410968:	lea    rcx,[rip+0x25ec1]        # 436830 <_IO_stdin_used@@Base+0x3830>
  41096f:	mov    edx,0xc
  410974:	mov    r8d,0x5
  41097a:	mov    rdi,rbx
  41097d:	mov    rsi,r14
  410980:	mov    r9,r15
  410983:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  410988:	mov    QWORD PTR [rsp],r15
  41098c:	lea    rcx,[rip+0x25ea3]        # 436836 <_IO_stdin_used@@Base+0x3836>
  410993:	mov    edx,0xd
  410998:	mov    r8d,0x14
  41099e:	xor    r9d,r9d
  4109a1:	mov    rdi,rbx
  4109a4:	mov    rsi,r14
  4109a7:	call   432210 <flatcc_json_printer_table_as_nested_root@@Base>
  4109ac:	lea    rcx,[rip+0x25e98]        # 43684b <_IO_stdin_used@@Base+0x384b>
  4109b3:	lea    r9,[rip+0xb3a6]        # 41bd60 <main@@Base+0x14f40>
  4109ba:	mov    edx,0xe
  4109bf:	mov    r8d,0x9
  4109c5:	mov    rdi,rbx
  4109c8:	mov    rsi,r14
  4109cb:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  4109d0:	lea    rcx,[rip+0x25e7e]        # 436855 <_IO_stdin_used@@Base+0x3855>
  4109d7:	mov    edx,0xf
  4109dc:	mov    r8d,0x8
  4109e2:	mov    r9d,0x1
  4109e8:	mov    rdi,rbx
  4109eb:	mov    rsi,r14
  4109ee:	call   429810 <flatcc_json_printer_bool_field@@Base>
  4109f3:	lea    rcx,[rip+0x25e64]        # 43685e <_IO_stdin_used@@Base+0x385e>
  4109fa:	mov    edx,0x10
  4109ff:	mov    r8d,0x10
  410a05:	xor    r9d,r9d
  410a08:	mov    rdi,rbx
  410a0b:	mov    rsi,r14
  410a0e:	call   4296d0 <flatcc_json_printer_int32_field@@Base>
  410a13:	lea    rcx,[rip+0x25e55]        # 43686f <_IO_stdin_used@@Base+0x386f>
  410a1a:	mov    edx,0x11
  410a1f:	mov    r8d,0x10
  410a25:	xor    r9d,r9d
  410a28:	mov    rdi,rbx
  410a2b:	mov    rsi,r14
  410a2e:	call   4292d0 <flatcc_json_printer_uint32_field@@Base>
  410a33:	lea    rcx,[rip+0x25e46]        # 436880 <_IO_stdin_used@@Base+0x3880>
  410a3a:	mov    edx,0x12
  410a3f:	mov    r8d,0x10
  410a45:	xor    r9d,r9d
  410a48:	mov    rdi,rbx
  410a4b:	mov    rsi,r14
  410a4e:	call   429770 <flatcc_json_printer_int64_field@@Base>
  410a53:	lea    rcx,[rip+0x25e37]        # 436891 <_IO_stdin_used@@Base+0x3891>
  410a5a:	mov    edx,0x13
  410a5f:	mov    r8d,0x10
  410a65:	xor    r9d,r9d
  410a68:	mov    rdi,rbx
  410a6b:	mov    rsi,r14
  410a6e:	call   429360 <flatcc_json_printer_uint64_field@@Base>
  410a73:	lea    rcx,[rip+0x25e28]        # 4368a2 <_IO_stdin_used@@Base+0x38a2>
  410a7a:	mov    edx,0x14
  410a7f:	mov    r8d,0x11
  410a85:	xor    r9d,r9d
  410a88:	mov    rdi,rbx
  410a8b:	mov    rsi,r14
  410a8e:	call   4296d0 <flatcc_json_printer_int32_field@@Base>
  410a93:	lea    rcx,[rip+0x25e1a]        # 4368b4 <_IO_stdin_used@@Base+0x38b4>
  410a9a:	mov    edx,0x15
  410a9f:	mov    r8d,0x11
  410aa5:	xor    r9d,r9d
  410aa8:	mov    rdi,rbx
  410aab:	mov    rsi,r14
  410aae:	call   4292d0 <flatcc_json_printer_uint32_field@@Base>
  410ab3:	lea    rcx,[rip+0x25e0c]        # 4368c6 <_IO_stdin_used@@Base+0x38c6>
  410aba:	mov    edx,0x16
  410abf:	mov    r8d,0x11
  410ac5:	xor    r9d,r9d
  410ac8:	mov    rdi,rbx
  410acb:	mov    rsi,r14
  410ace:	call   429770 <flatcc_json_printer_int64_field@@Base>
  410ad3:	lea    rcx,[rip+0x25dfe]        # 4368d8 <_IO_stdin_used@@Base+0x38d8>
  410ada:	mov    edx,0x17
  410adf:	mov    r8d,0x11
  410ae5:	xor    r9d,r9d
  410ae8:	mov    rdi,rbx
  410aeb:	mov    rsi,r14
  410aee:	call   429360 <flatcc_json_printer_uint64_field@@Base>
  410af3:	lea    rcx,[rip+0x25df0]        # 4368ea <_IO_stdin_used@@Base+0x38ea>
  410afa:	mov    edx,0x18
  410aff:	mov    r8d,0x10
  410b05:	mov    rdi,rbx
  410b08:	mov    rsi,r14
  410b0b:	call   42d6a0 <flatcc_json_printer_bool_vector_field@@Base>
  410b10:	lea    rcx,[rip+0x25de4]        # 4368fb <_IO_stdin_used@@Base+0x38fb>
  410b17:	vmovss xmm0,DWORD PTR [rip+0x224e5]        # 433004 <_IO_stdin_used@@Base+0x4>
  410b1f:	mov    edx,0x19
  410b24:	mov    r8d,0x5
  410b2a:	mov    rdi,rbx
  410b2d:	mov    rsi,r14
  410b30:	call   4298c0 <flatcc_json_printer_float_field@@Base>
  410b35:	lea    rcx,[rip+0x25dc5]        # 436901 <_IO_stdin_used@@Base+0x3901>
  410b3c:	vmovss xmm0,DWORD PTR [rip+0x224c4]        # 433008 <_IO_stdin_used@@Base+0x8>
  410b44:	mov    edx,0x1a
  410b49:	mov    r8d,0x6
  410b4f:	mov    rdi,rbx
  410b52:	mov    rsi,r14
  410b55:	call   4298c0 <flatcc_json_printer_float_field@@Base>
  410b5a:	lea    rcx,[rip+0x25da7]        # 436908 <_IO_stdin_used@@Base+0x3908>
  410b61:	mov    edx,0x1b
  410b66:	mov    r8d,0x6
  410b6c:	vxorps xmm0,xmm0,xmm0
  410b70:	mov    rdi,rbx
  410b73:	mov    rsi,r14
  410b76:	call   4298c0 <flatcc_json_printer_float_field@@Base>
  410b7b:	lea    rcx,[rip+0x25d8d]        # 43690f <_IO_stdin_used@@Base+0x390f>
  410b82:	mov    edx,0x1c
  410b87:	mov    r8d,0x12
  410b8d:	mov    rdi,rbx
  410b90:	mov    rsi,r14
  410b93:	call   430770 <flatcc_json_printer_string_vector_field@@Base>
  410b98:	lea    rax,[rip+0xb231]        # 41bdd0 <main@@Base+0x14fb0>
  410b9f:	mov    QWORD PTR [rsp],rax
  410ba3:	lea    rcx,[rip+0x25d78]        # 436922 <_IO_stdin_used@@Base+0x3922>
  410baa:	mov    edx,0x1d
  410baf:	mov    r8d,0x17
  410bb5:	mov    r9d,0x8
  410bbb:	mov    rdi,rbx
  410bbe:	mov    rsi,r14
  410bc1:	call   4302b0 <flatcc_json_printer_struct_vector_field@@Base>
  410bc6:	lea    rcx,[rip+0x25d6d]        # 43693a <_IO_stdin_used@@Base+0x393a>
  410bcd:	mov    edx,0x1e
  410bd2:	mov    r8d,0x4
  410bd8:	mov    rdi,rbx
  410bdb:	mov    rsi,r14
  410bde:	call   42b5d0 <flatcc_json_printer_uint8_vector_field@@Base>
  410be3:	mov    QWORD PTR [rsp],r12
  410be7:	lea    rcx,[rip+0x25d51]        # 43693f <_IO_stdin_used@@Base+0x393f>
  410bee:	mov    edx,0x1f
  410bf3:	mov    r8d,0x5
  410bf9:	mov    r9d,0x4
  410bff:	mov    rdi,rbx
  410c02:	mov    rsi,r14
  410c05:	call   4302b0 <flatcc_json_printer_struct_vector_field@@Base>
  410c0a:	lea    rcx,[rip+0x25d34]        # 436945 <_IO_stdin_used@@Base+0x3945>
  410c11:	mov    edx,0x20
  410c16:	mov    r8d,0xf
  410c1c:	mov    rdi,rbx
  410c1f:	mov    rsi,r14
  410c22:	call   42d340 <flatcc_json_printer_int64_vector_field@@Base>
  410c27:	lea    rcx,[rip+0x25d27]        # 436955 <_IO_stdin_used@@Base+0x3955>
  410c2e:	mov    edx,0x21
  410c33:	mov    r8d,0x11
  410c39:	mov    rdi,rbx
  410c3c:	mov    rsi,r14
  410c3f:	call   42dd60 <flatcc_json_printer_double_vector_field@@Base>
  410c44:	lea    rcx,[rip+0x25d1c]        # 436967 <_IO_stdin_used@@Base+0x3967>
  410c4b:	lea    r9,[rip+0xb1ce]        # 41be20 <main@@Base+0x15000>
  410c52:	mov    edx,0x22
  410c57:	mov    r8d,0x15
  410c5d:	mov    rdi,rbx
  410c60:	mov    rsi,r14
  410c63:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  410c68:	lea    rcx,[rip+0x25d0e]        # 43697d <_IO_stdin_used@@Base+0x397d>
  410c6f:	lea    r9,[rip+0xb1ba]        # 41be30 <main@@Base+0x15010>
  410c76:	mov    edx,0x23
  410c7b:	mov    r8d,0xa
  410c81:	mov    rdi,rbx
  410c84:	mov    rsi,r14
  410c87:	add    rsp,0x8
  410c8b:	pop    rbx
  410c8c:	pop    r12
  410c8e:	pop    r14
  410c90:	pop    r15
  410c92:	jmp    4311e0 <flatcc_json_printer_table_field@@Base>
  410c97:	nop    WORD PTR [rax+rax*1+0x0]
  410ca0:	push   rbx
  410ca1:	mov    rbx,rdi
  410ca4:	xor    esi,esi
  410ca6:	mov    edx,0x20
  410cab:	mov    ecx,0x10
  410cb0:	call   421b10 <flatcc_verify_field@@Base>
  410cb5:	test   eax,eax
  410cb7:	jne    4110c2 <main@@Base+0xa2a2>
  410cbd:	mov    esi,0x2
  410cc2:	mov    edx,0x2
  410cc7:	mov    ecx,0x2
  410ccc:	mov    rdi,rbx
  410ccf:	call   421b10 <flatcc_verify_field@@Base>
  410cd4:	test   eax,eax
  410cd6:	jne    4110c2 <main@@Base+0xa2a2>
  410cdc:	mov    esi,0x1
  410ce1:	mov    edx,0x2
  410ce6:	mov    ecx,0x2
  410ceb:	mov    rdi,rbx
  410cee:	call   421b10 <flatcc_verify_field@@Base>
  410cf3:	test   eax,eax
  410cf5:	jne    4110c2 <main@@Base+0xa2a2>
  410cfb:	mov    esi,0x3
  410d00:	mov    edx,0x1
  410d05:	mov    rdi,rbx
  410d08:	call   421b70 <flatcc_verify_string_field@@Base>
  410d0d:	test   eax,eax
  410d0f:	jne    4110c2 <main@@Base+0xa2a2>
  410d15:	mov    esi,0x6
  410d1a:	mov    edx,0x1
  410d1f:	mov    ecx,0x1
  410d24:	mov    rdi,rbx
  410d27:	call   421b10 <flatcc_verify_field@@Base>
  410d2c:	test   eax,eax
  410d2e:	jne    4110c2 <main@@Base+0xa2a2>
  410d34:	mov    esi,0x5
  410d39:	xor    edx,edx
  410d3b:	mov    ecx,0x1
  410d40:	mov    r8d,0x1
  410d46:	mov    r9d,0xffffffff
  410d4c:	mov    rdi,rbx
  410d4f:	call   421c20 <flatcc_verify_vector_field@@Base>
  410d54:	test   eax,eax
  410d56:	jne    4110c2 <main@@Base+0xa2a2>
  410d5c:	lea    rcx,[rip+0xffffffffffffff3d]        # 410ca0 <main@@Base+0x9e80>
  410d63:	mov    esi,0xb
  410d68:	xor    edx,edx
  410d6a:	mov    rdi,rbx
  410d6d:	call   421f90 <flatcc_verify_table_vector_field@@Base>
  410d72:	test   eax,eax
  410d74:	jne    4110c2 <main@@Base+0xa2a2>
  410d7a:	mov    esi,0xa
  410d7f:	xor    edx,edx
  410d81:	mov    rdi,rbx
  410d84:	call   421cf0 <flatcc_verify_string_vector_field@@Base>
  410d89:	test   eax,eax
  410d8b:	jne    4110c2 <main@@Base+0xa2a2>
  410d91:	mov    esi,0x1c
  410d96:	xor    edx,edx
  410d98:	mov    rdi,rbx
  410d9b:	call   421cf0 <flatcc_verify_string_vector_field@@Base>
  410da0:	test   eax,eax
  410da2:	jne    4110c2 <main@@Base+0xa2a2>
  410da8:	mov    esi,0x18
  410dad:	xor    edx,edx
  410daf:	mov    ecx,0x1
  410db4:	mov    r8d,0x1
  410dba:	mov    r9d,0xffffffff
  410dc0:	mov    rdi,rbx
  410dc3:	call   421c20 <flatcc_verify_vector_field@@Base>
  410dc8:	test   eax,eax
  410dca:	jne    4110c2 <main@@Base+0xa2a2>
  410dd0:	mov    esi,0x1d
  410dd5:	xor    edx,edx
  410dd7:	mov    ecx,0x8
  410ddc:	mov    r8d,0x4
  410de2:	mov    r9d,0x1fffffff
  410de8:	mov    rdi,rbx
  410deb:	call   421c20 <flatcc_verify_vector_field@@Base>
  410df0:	test   eax,eax
  410df2:	jne    4110c2 <main@@Base+0xa2a2>
  410df8:	lea    rcx,[rip+0xfffffffffffffea1]        # 410ca0 <main@@Base+0x9e80>
  410dff:	mov    esi,0xc
  410e04:	xor    edx,edx
  410e06:	mov    rdi,rbx
  410e09:	call   421e50 <flatcc_verify_table_field@@Base>
  410e0e:	test   eax,eax
  410e10:	jne    4110c2 <main@@Base+0xa2a2>
  410e16:	lea    rcx,[rip+0xb633]        # 41c450 <main@@Base+0x15630>
  410e1d:	mov    esi,0x8
  410e22:	xor    edx,edx
  410e24:	mov    rdi,rbx
  410e27:	call   422d60 <flatcc_verify_union_field@@Base>
  410e2c:	test   eax,eax
  410e2e:	jne    4110c2 <main@@Base+0xa2a2>
  410e34:	mov    esi,0x9
  410e39:	xor    edx,edx
  410e3b:	mov    ecx,0x4
  410e40:	mov    r8d,0x2
  410e46:	mov    r9d,0x3fffffff
  410e4c:	mov    rdi,rbx
  410e4f:	call   421c20 <flatcc_verify_vector_field@@Base>
  410e54:	test   eax,eax
  410e56:	jne    4110c2 <main@@Base+0xa2a2>
  410e5c:	mov    esi,0x1f
  410e61:	xor    edx,edx
  410e63:	mov    ecx,0x4
  410e68:	mov    r8d,0x2
  410e6e:	mov    r9d,0x3fffffff
  410e74:	mov    rdi,rbx
  410e77:	call   421c20 <flatcc_verify_vector_field@@Base>
  410e7c:	test   eax,eax
  410e7e:	jne    4110c2 <main@@Base+0xa2a2>
  410e84:	lea    r9,[rip+0xfffffffffffffe15]        # 410ca0 <main@@Base+0x9e80>
  410e8b:	mov    esi,0xd
  410e90:	xor    edx,edx
  410e92:	xor    ecx,ecx
  410e94:	mov    r8d,0x1
  410e9a:	mov    rdi,rbx
  410e9d:	call   422a80 <flatcc_verify_table_as_nested_root@@Base>
  410ea2:	test   eax,eax
  410ea4:	jne    4110c2 <main@@Base+0xa2a2>
  410eaa:	lea    rcx,[rip+0xb5bf]        # 41c470 <main@@Base+0x15650>
  410eb1:	mov    esi,0xe
  410eb6:	xor    edx,edx
  410eb8:	mov    rdi,rbx
  410ebb:	call   421e50 <flatcc_verify_table_field@@Base>
  410ec0:	test   eax,eax
  410ec2:	jne    4110c2 <main@@Base+0xa2a2>
  410ec8:	mov    esi,0xf
  410ecd:	mov    edx,0x1
  410ed2:	mov    ecx,0x1
  410ed7:	mov    rdi,rbx
  410eda:	call   421b10 <flatcc_verify_field@@Base>
  410edf:	test   eax,eax
  410ee1:	jne    4110c2 <main@@Base+0xa2a2>
  410ee7:	mov    esi,0x10
  410eec:	mov    edx,0x4
  410ef1:	mov    ecx,0x4
  410ef6:	mov    rdi,rbx
  410ef9:	call   421b10 <flatcc_verify_field@@Base>
  410efe:	test   eax,eax
  410f00:	jne    4110c2 <main@@Base+0xa2a2>
  410f06:	mov    esi,0x11
  410f0b:	mov    edx,0x4
  410f10:	mov    ecx,0x4
  410f15:	mov    rdi,rbx
  410f18:	call   421b10 <flatcc_verify_field@@Base>
  410f1d:	test   eax,eax
  410f1f:	jne    4110c2 <main@@Base+0xa2a2>
  410f25:	mov    esi,0x12
  410f2a:	mov    edx,0x8
  410f2f:	mov    ecx,0x8
  410f34:	mov    rdi,rbx
  410f37:	call   421b10 <flatcc_verify_field@@Base>
  410f3c:	test   eax,eax
  410f3e:	jne    4110c2 <main@@Base+0xa2a2>
  410f44:	mov    esi,0x13
  410f49:	mov    edx,0x8
  410f4e:	mov    ecx,0x8
  410f53:	mov    rdi,rbx
  410f56:	call   421b10 <flatcc_verify_field@@Base>
  410f5b:	test   eax,eax
  410f5d:	jne    4110c2 <main@@Base+0xa2a2>
  410f63:	mov    esi,0x14
  410f68:	mov    edx,0x4
  410f6d:	mov    ecx,0x4
  410f72:	mov    rdi,rbx
  410f75:	call   421b10 <flatcc_verify_field@@Base>
  410f7a:	test   eax,eax
  410f7c:	jne    4110c2 <main@@Base+0xa2a2>
  410f82:	mov    esi,0x15
  410f87:	mov    edx,0x4
  410f8c:	mov    ecx,0x4
  410f91:	mov    rdi,rbx
  410f94:	call   421b10 <flatcc_verify_field@@Base>
  410f99:	test   eax,eax
  410f9b:	jne    4110c2 <main@@Base+0xa2a2>
  410fa1:	mov    esi,0x16
  410fa6:	mov    edx,0x8
  410fab:	mov    ecx,0x8
  410fb0:	mov    rdi,rbx
  410fb3:	call   421b10 <flatcc_verify_field@@Base>
  410fb8:	test   eax,eax
  410fba:	jne    4110c2 <main@@Base+0xa2a2>
  410fc0:	mov    esi,0x17
  410fc5:	mov    edx,0x8
  410fca:	mov    ecx,0x8
  410fcf:	mov    rdi,rbx
  410fd2:	call   421b10 <flatcc_verify_field@@Base>
  410fd7:	test   eax,eax
  410fd9:	jne    4110c2 <main@@Base+0xa2a2>
  410fdf:	mov    esi,0x19
  410fe4:	mov    edx,0x4
  410fe9:	mov    ecx,0x4
  410fee:	mov    rdi,rbx
  410ff1:	call   421b10 <flatcc_verify_field@@Base>
  410ff6:	test   eax,eax
  410ff8:	jne    4110c2 <main@@Base+0xa2a2>
  410ffe:	mov    esi,0x1a
  411003:	mov    edx,0x4
  411008:	mov    ecx,0x4
  41100d:	mov    rdi,rbx
  411010:	call   421b10 <flatcc_verify_field@@Base>
  411015:	test   eax,eax
  411017:	jne    4110c2 <main@@Base+0xa2a2>
  41101d:	mov    esi,0x1b
  411022:	mov    edx,0x4
  411027:	mov    ecx,0x4
  41102c:	mov    rdi,rbx
  41102f:	call   421b10 <flatcc_verify_field@@Base>
  411034:	test   eax,eax
  411036:	jne    4110c2 <main@@Base+0xa2a2>
  41103c:	mov    esi,0x1e
  411041:	xor    edx,edx
  411043:	mov    ecx,0x1
  411048:	mov    r8d,0x1
  41104e:	mov    r9d,0xffffffff
  411054:	mov    rdi,rbx
  411057:	call   421c20 <flatcc_verify_vector_field@@Base>
  41105c:	test   eax,eax
  41105e:	jne    4110c2 <main@@Base+0xa2a2>
  411060:	mov    esi,0x20
  411065:	xor    edx,edx
  411067:	mov    ecx,0x8
  41106c:	mov    r8d,0x8
  411072:	mov    r9d,0x1fffffff
  411078:	mov    rdi,rbx
  41107b:	call   421c20 <flatcc_verify_vector_field@@Base>
  411080:	test   eax,eax
  411082:	jne    4110c2 <main@@Base+0xa2a2>
  411084:	mov    esi,0x21
  411089:	xor    edx,edx
  41108b:	mov    ecx,0x8
  411090:	mov    r8d,0x8
  411096:	mov    r9d,0x1fffffff
  41109c:	mov    rdi,rbx
  41109f:	call   421c20 <flatcc_verify_vector_field@@Base>
  4110a4:	test   eax,eax
  4110a6:	jne    4110c2 <main@@Base+0xa2a2>
  4110a8:	lea    rcx,[rip+0xb411]        # 41c4c0 <main@@Base+0x156a0>
  4110af:	mov    esi,0x22
  4110b4:	xor    edx,edx
  4110b6:	mov    rdi,rbx
  4110b9:	call   421e50 <flatcc_verify_table_field@@Base>
  4110be:	test   eax,eax
  4110c0:	je     4110c4 <main@@Base+0xa2a4>
  4110c2:	pop    rbx
  4110c3:	ret    
  4110c4:	lea    rcx,[rip+0xb405]        # 41c4d0 <main@@Base+0x156b0>
  4110cb:	mov    esi,0x23
  4110d0:	xor    edx,edx
  4110d2:	mov    rdi,rbx
  4110d5:	pop    rbx
  4110d6:	jmp    421e50 <flatcc_verify_table_field@@Base>
  4110db:	nop    DWORD PTR [rax+rax*1+0x0]
  4110e0:	push   r15
  4110e2:	push   r14
  4110e4:	push   rbx
  4110e5:	mov    r15,r8
  4110e8:	mov    r14,rcx
  4110eb:	mov    rbx,rsi
  4110ee:	mov    rcx,rdx
  4110f1:	sub    rcx,rsi
  4110f4:	cmp    rcx,0x8
  4110f8:	jb     411101 <main@@Base+0xa2e1>
  4110fa:	movbe  rcx,QWORD PTR [rbx]
  4110ff:	jmp    41117c <main@@Base+0xa35c>
  411101:	and    cl,0xf
  411104:	add    cl,0xff
  411107:	cmp    cl,0x7
  41110a:	ja     411216 <main@@Base+0xa3f6>
  411110:	xor    eax,eax
  411112:	movzx  ecx,cl
  411115:	lea    rsi,[rip+0x22204]        # 433320 <_IO_stdin_used@@Base+0x320>
  41111c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  411120:	add    rcx,rsi
  411123:	jmp    rcx
  411125:	movsx  rax,BYTE PTR [rbx+0x7]
  41112a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41112f:	shl    rcx,0x8
  411133:	or     rax,rcx
  411136:	movsx  rcx,BYTE PTR [rbx+0x5]
  41113b:	shl    rcx,0x10
  41113f:	or     rax,rcx
  411142:	movsx  rcx,BYTE PTR [rbx+0x4]
  411147:	shl    rcx,0x18
  41114b:	or     rax,rcx
  41114e:	movsx  rcx,BYTE PTR [rbx+0x3]
  411153:	shl    rcx,0x20
  411157:	or     rax,rcx
  41115a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41115f:	shl    rcx,0x28
  411163:	or     rax,rcx
  411166:	movsx  rcx,BYTE PTR [rbx+0x1]
  41116b:	shl    rcx,0x30
  41116f:	or     rax,rcx
  411172:	movzx  ecx,BYTE PTR [rbx]
  411175:	shl    rcx,0x38
  411179:	or     rcx,rax
  41117c:	movabs rax,0x477265656e000000
  411186:	cmp    rcx,rax
  411189:	jae    4111b6 <main@@Base+0xa396>
  41118b:	shr    rcx,0x20
  41118f:	cmp    rcx,0x426c7565
  411196:	jne    411216 <main@@Base+0xa3f6>
  411198:	mov    ecx,0x4
  41119d:	mov    rsi,rbx
  4111a0:	mov    r8,r9
  4111a3:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4111a8:	cmp    rax,rbx
  4111ab:	je     411216 <main@@Base+0xa3f6>
  4111ad:	mov    QWORD PTR [r15],0x8
  4111b4:	jmp    41120c <main@@Base+0xa3ec>
  4111b6:	mov    rsi,rcx
  4111b9:	shr    rsi,0x28
  4111bd:	cmp    rsi,0x526564
  4111c4:	jne    4111e4 <main@@Base+0xa3c4>
  4111c6:	mov    ecx,0x3
  4111cb:	mov    rsi,rbx
  4111ce:	mov    r8,r9
  4111d1:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4111d6:	cmp    rax,rbx
  4111d9:	je     411216 <main@@Base+0xa3f6>
  4111db:	mov    QWORD PTR [r15],0x1
  4111e2:	jmp    41120c <main@@Base+0xa3ec>
  4111e4:	and    rcx,0xffffffffff000000
  4111eb:	cmp    rcx,rax
  4111ee:	jne    411216 <main@@Base+0xa3f6>
  4111f0:	mov    ecx,0x5
  4111f5:	mov    rsi,rbx
  4111f8:	mov    r8,r9
  4111fb:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  411200:	cmp    rax,rbx
  411203:	je     411216 <main@@Base+0xa3f6>
  411205:	mov    QWORD PTR [r15],0x2
  41120c:	mov    DWORD PTR [r14],0x0
  411213:	mov    rbx,rax
  411216:	mov    rax,rbx
  411219:	pop    rbx
  41121a:	pop    r14
  41121c:	pop    r15
  41121e:	ret    
  41121f:	nop
  411220:	push   r15
  411222:	push   r14
  411224:	push   r12
  411226:	push   rbx
  411227:	push   rax
  411228:	mov    r14,r8
  41122b:	mov    r12,rcx
  41122e:	mov    r10,rdx
  411231:	sub    r10,rsi
  411234:	cmp    r10,0x8
  411238:	jb     411241 <main@@Base+0xa421>
  41123a:	movbe  rbx,QWORD PTR [rsi]
  41123f:	jmp    4112bf <main@@Base+0xa49f>
  411241:	mov    ebx,r10d
  411244:	and    bl,0xf
  411247:	add    bl,0xff
  41124a:	cmp    bl,0x7
  41124d:	ja     411677 <main@@Base+0xa857>
  411253:	xor    ecx,ecx
  411255:	movzx  ebx,bl
  411258:	lea    r8,[rip+0x220e1]        # 433340 <_IO_stdin_used@@Base+0x340>
  41125f:	movsxd rbx,DWORD PTR [r8+rbx*4]
  411263:	add    rbx,r8
  411266:	jmp    rbx
  411268:	movsx  rcx,BYTE PTR [rsi+0x7]
  41126d:	movsx  rbx,BYTE PTR [rsi+0x6]
  411272:	shl    rbx,0x8
  411276:	or     rcx,rbx
  411279:	movsx  rbx,BYTE PTR [rsi+0x5]
  41127e:	shl    rbx,0x10
  411282:	or     rcx,rbx
  411285:	movsx  rbx,BYTE PTR [rsi+0x4]
  41128a:	shl    rbx,0x18
  41128e:	or     rcx,rbx
  411291:	movsx  rbx,BYTE PTR [rsi+0x3]
  411296:	shl    rbx,0x20
  41129a:	or     rcx,rbx
  41129d:	movsx  rbx,BYTE PTR [rsi+0x2]
  4112a2:	shl    rbx,0x28
  4112a6:	or     rcx,rbx
  4112a9:	movsx  rbx,BYTE PTR [rsi+0x1]
  4112ae:	shl    rbx,0x30
  4112b2:	or     rcx,rbx
  4112b5:	movzx  ebx,BYTE PTR [rsi]
  4112b8:	shl    rbx,0x38
  4112bc:	or     rbx,rcx
  4112bf:	movabs rcx,0x6865785f656e756d
  4112c9:	cmp    rbx,rcx
  4112cc:	jae    411339 <main@@Base+0xa519>
  4112ce:	movabs r8,0x436f6c6f72000000
  4112d8:	movabs rcx,0xffffff0000000000
  4112e2:	and    rcx,rbx
  4112e5:	cmp    rbx,r8
  4112e8:	jae    41138d <main@@Base+0xa56d>
  4112ee:	cmp    r10,0x4
  4112f2:	jl     411677 <main@@Base+0xa857>
  4112f8:	movabs rax,0x416e790000000000
  411302:	cmp    rcx,rax
  411305:	jne    411677 <main@@Base+0xa857>
  41130b:	lea    rax,[rsi+0x4]
  41130f:	cmp    BYTE PTR [rsi+0x3],0x2e
  411313:	cmovne rax,rsi
  411317:	cmp    rax,rsi
  41131a:	je     411677 <main@@Base+0xa857>
  411320:	mov    rsi,rax
  411323:	mov    rcx,r12
  411326:	mov    r8,r14
  411329:	add    rsp,0x8
  41132d:	pop    rbx
  41132e:	pop    r12
  411330:	pop    r14
  411332:	pop    r15
  411334:	jmp    413ed0 <main@@Base+0xd0b0>
  411339:	movabs r8,0x696e745f656e756d
  411343:	cmp    rbx,r8
  411346:	jae    4113d8 <main@@Base+0xa5b8>
  41134c:	cmp    r10,0x9
  411350:	jl     411677 <main@@Base+0xa857>
  411356:	cmp    rbx,rcx
  411359:	jne    411677 <main@@Base+0xa857>
  41135f:	lea    rax,[rsi+0x9]
  411363:	cmp    BYTE PTR [rsi+0x8],0x2e
  411367:	cmovne rax,rsi
  41136b:	cmp    rax,rsi
  41136e:	je     411677 <main@@Base+0xa857>
  411374:	mov    rsi,rax
  411377:	mov    rcx,r12
  41137a:	mov    r8,r14
  41137d:	add    rsp,0x8
  411381:	pop    rbx
  411382:	pop    r12
  411384:	pop    r14
  411386:	pop    r15
  411388:	jmp    414fa0 <main@@Base+0xe180>
  41138d:	movabs rax,0x466f6f0000000000
  411397:	cmp    rcx,rax
  41139a:	jne    41142c <main@@Base+0xa60c>
  4113a0:	cmp    r10,0x4
  4113a4:	jl     411677 <main@@Base+0xa857>
  4113aa:	lea    rax,[rsi+0x4]
  4113ae:	cmp    BYTE PTR [rsi+0x3],0x2e
  4113b2:	cmovne rax,rsi
  4113b6:	cmp    rax,rsi
  4113b9:	je     411677 <main@@Base+0xa857>
  4113bf:	mov    rsi,rax
  4113c2:	mov    rcx,r12
  4113c5:	mov    r8,r14
  4113c8:	add    rsp,0x8
  4113cc:	pop    rbx
  4113cd:	pop    r12
  4113cf:	pop    r14
  4113d1:	pop    r15
  4113d3:	jmp    414d40 <main@@Base+0xdf20>
  4113d8:	movabs rax,0x6e65675f656e756c
  4113e2:	cmp    rbx,rax
  4113e5:	ja     411474 <main@@Base+0xa654>
  4113eb:	cmp    r10,0x9
  4113ef:	jl     411677 <main@@Base+0xa857>
  4113f5:	cmp    rbx,r8
  4113f8:	jne    411677 <main@@Base+0xa857>
  4113fe:	lea    rax,[rsi+0x9]
  411402:	cmp    BYTE PTR [rsi+0x8],0x2e
  411406:	cmovne rax,rsi
  41140a:	cmp    rax,rsi
  41140d:	je     411677 <main@@Base+0xa857>
  411413:	mov    rsi,rax
  411416:	mov    rcx,r12
  411419:	mov    r8,r14
  41141c:	add    rsp,0x8
  411420:	pop    rbx
  411421:	pop    r12
  411423:	pop    r14
  411425:	pop    r15
  411427:	jmp    415110 <main@@Base+0xe2f0>
  41142c:	cmp    r10,0x6
  411430:	jl     411677 <main@@Base+0xa857>
  411436:	and    rbx,0xffffffffff000000
  41143d:	cmp    rbx,r8
  411440:	jne    411677 <main@@Base+0xa857>
  411446:	lea    rax,[rsi+0x6]
  41144a:	cmp    BYTE PTR [rsi+0x5],0x2e
  41144e:	cmovne rax,rsi
  411452:	cmp    rax,rsi
  411455:	je     411677 <main@@Base+0xa857>
  41145b:	mov    rsi,rax
  41145e:	mov    rcx,r12
  411461:	mov    r8,r14
  411464:	add    rsp,0x8
  411468:	pop    rbx
  411469:	pop    r12
  41146b:	pop    r14
  41146d:	pop    r15
  41146f:	jmp    4110e0 <main@@Base+0xa2c0>
  411474:	movabs rax,0x6e6f74656d707479
  41147e:	cmp    rbx,rax
  411481:	je     4114ce <main@@Base+0xa6ae>
  411483:	movabs rax,0x6e65675f656e756d
  41148d:	cmp    rbx,rax
  411490:	jne    411677 <main@@Base+0xa857>
  411496:	cmp    r10,0x9
  41149a:	jl     411677 <main@@Base+0xa857>
  4114a0:	lea    rax,[rsi+0x9]
  4114a4:	cmp    BYTE PTR [rsi+0x8],0x2e
  4114a8:	cmovne rax,rsi
  4114ac:	cmp    rax,rsi
  4114af:	je     411677 <main@@Base+0xa857>
  4114b5:	mov    rsi,rax
  4114b8:	mov    rcx,r12
  4114bb:	mov    r8,r14
  4114be:	add    rsp,0x8
  4114c2:	pop    rbx
  4114c3:	pop    r12
  4114c5:	pop    r14
  4114c7:	pop    r15
  4114c9:	jmp    4152c0 <main@@Base+0xe4a0>
  4114ce:	lea    r8,[rsi+0x8]
  4114d2:	mov    rcx,rdx
  4114d5:	sub    rcx,r8
  4114d8:	cmp    rcx,0x8
  4114dc:	jb     4114f2 <main@@Base+0xa6d2>
  4114de:	movbe  rbx,QWORD PTR [r8]
  4114e3:	cmp    rcx,0x5
  4114e7:	jge    41157a <main@@Base+0xa75a>
  4114ed:	jmp    411677 <main@@Base+0xa857>
  4114f2:	mov    ebx,ecx
  4114f4:	and    bl,0xf
  4114f7:	add    bl,0xff
  4114fa:	cmp    bl,0x7
  4114fd:	ja     411677 <main@@Base+0xa857>
  411503:	xor    eax,eax
  411505:	movzx  ebx,bl
  411508:	lea    r10,[rip+0x21e51]        # 433360 <_IO_stdin_used@@Base+0x360>
  41150f:	movsxd rbx,DWORD PTR [r10+rbx*4]
  411513:	add    rbx,r10
  411516:	jmp    rbx
  411518:	movsx  rax,BYTE PTR [rsi+0xf]
  41151d:	movsx  rbx,BYTE PTR [rsi+0xe]
  411522:	shl    rbx,0x8
  411526:	or     rax,rbx
  411529:	movsx  rbx,BYTE PTR [rsi+0xd]
  41152e:	shl    rbx,0x10
  411532:	or     rax,rbx
  411535:	movsx  rbx,BYTE PTR [rsi+0xc]
  41153a:	shl    rbx,0x18
  41153e:	or     rax,rbx
  411541:	movsx  rbx,BYTE PTR [rsi+0xb]
  411546:	shl    rbx,0x20
  41154a:	or     rax,rbx
  41154d:	movsx  rbx,BYTE PTR [rsi+0xa]
  411552:	shl    rbx,0x28
  411556:	or     rax,rbx
  411559:	movsx  rbx,BYTE PTR [rsi+0x9]
  41155e:	shl    rbx,0x30
  411562:	or     rax,rbx
  411565:	movzx  ebx,BYTE PTR [r8]
  411569:	shl    rbx,0x38
  41156d:	or     rbx,rax
  411570:	cmp    rcx,0x5
  411574:	jl     411677 <main@@Base+0xa857>
  41157a:	movabs rax,0xffffffff00000000
  411584:	and    rbx,rax
  411587:	movabs rax,0x656e756d00000000
  411591:	cmp    rbx,rax
  411594:	jne    411677 <main@@Base+0xa857>
  41159a:	lea    r15,[rsi+0xd]
  41159e:	cmp    BYTE PTR [rsi+0xc],0x2e
  4115a2:	cmovne r15,r8
  4115a6:	cmp    r15,r8
  4115a9:	je     411677 <main@@Base+0xa857>
  4115af:	mov    rcx,rdx
  4115b2:	sub    rcx,r15
  4115b5:	cmp    rcx,0x8
  4115b9:	jb     4115c2 <main@@Base+0xa7a2>
  4115bb:	movbe  rcx,QWORD PTR [r15]
  4115c0:	jmp    41163e <main@@Base+0xa81e>
  4115c2:	and    cl,0xf
  4115c5:	add    cl,0xff
  4115c8:	cmp    cl,0x7
  4115cb:	ja     411674 <main@@Base+0xa854>
  4115d1:	xor    eax,eax
  4115d3:	movzx  ecx,cl
  4115d6:	lea    rsi,[rip+0x21da3]        # 433380 <_IO_stdin_used@@Base+0x380>
  4115dd:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4115e1:	add    rcx,rsi
  4115e4:	jmp    rcx
  4115e6:	movsx  rax,BYTE PTR [r15+0x7]
  4115eb:	movsx  rcx,BYTE PTR [r15+0x6]
  4115f0:	shl    rcx,0x8
  4115f4:	or     rax,rcx
  4115f7:	movsx  rcx,BYTE PTR [r15+0x5]
  4115fc:	shl    rcx,0x10
  411600:	or     rax,rcx
  411603:	movsx  rcx,BYTE PTR [r15+0x4]
  411608:	shl    rcx,0x18
  41160c:	or     rax,rcx
  41160f:	movsx  rcx,BYTE PTR [r15+0x3]
  411614:	shl    rcx,0x20
  411618:	or     rax,rcx
  41161b:	movsx  rcx,BYTE PTR [r15+0x2]
  411620:	shl    rcx,0x28
  411624:	or     rax,rcx
  411627:	movsx  rcx,BYTE PTR [r15+0x1]
  41162c:	shl    rcx,0x30
  411630:	or     rax,rcx
  411633:	movzx  ecx,BYTE PTR [r15]
  411637:	shl    rcx,0x38
  41163b:	or     rcx,rax
  41163e:	shr    rcx,0x38
  411642:	cmp    rcx,0x78
  411646:	jne    411674 <main@@Base+0xa854>
  411648:	mov    ecx,0x1
  41164d:	mov    rsi,r15
  411650:	mov    r8,r9
  411653:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  411658:	mov    rsi,r15
  41165b:	cmp    rax,r15
  41165e:	je     411677 <main@@Base+0xa857>
  411660:	mov    QWORD PTR [r14],0x0
  411667:	mov    DWORD PTR [r12],0x0
  41166f:	mov    rsi,rax
  411672:	jmp    411677 <main@@Base+0xa857>
  411674:	mov    rsi,r15
  411677:	mov    rax,rsi
  41167a:	add    rsp,0x8
  41167e:	pop    rbx
  41167f:	pop    r12
  411681:	pop    r14
  411683:	pop    r15
  411685:	ret    
  411686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411690:	push   rbp
  411691:	push   r15
  411693:	push   r14
  411695:	push   r13
  411697:	push   r12
  411699:	push   rbx
  41169a:	push   rax
  41169b:	mov    r12,r9
  41169e:	mov    r14,r8
  4116a1:	mov    r15,rcx
  4116a4:	mov    rbp,rdx
  4116a7:	mov    r13,rdi
  4116aa:	mov    rcx,rdx
  4116ad:	sub    rcx,rsi
  4116b0:	cmp    rcx,0x8
  4116b4:	jb     4116bd <main@@Base+0xa89d>
  4116b6:	movbe  rcx,QWORD PTR [rsi]
  4116bb:	jmp    411738 <main@@Base+0xa918>
  4116bd:	and    cl,0xf
  4116c0:	add    cl,0xff
  4116c3:	cmp    cl,0x7
  4116c6:	ja     4125b2 <main@@Base+0xb792>
  4116cc:	xor    eax,eax
  4116ce:	movzx  ecx,cl
  4116d1:	lea    rdx,[rip+0x21cc8]        # 4333a0 <_IO_stdin_used@@Base+0x3a0>
  4116d8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4116dc:	add    rcx,rdx
  4116df:	jmp    rcx
  4116e1:	movsx  rax,BYTE PTR [rsi+0x7]
  4116e6:	movsx  rcx,BYTE PTR [rsi+0x6]
  4116eb:	shl    rcx,0x8
  4116ef:	or     rax,rcx
  4116f2:	movsx  rcx,BYTE PTR [rsi+0x5]
  4116f7:	shl    rcx,0x10
  4116fb:	or     rax,rcx
  4116fe:	movsx  rcx,BYTE PTR [rsi+0x4]
  411703:	shl    rcx,0x18
  411707:	or     rax,rcx
  41170a:	movsx  rcx,BYTE PTR [rsi+0x3]
  41170f:	shl    rcx,0x20
  411713:	or     rax,rcx
  411716:	movsx  rcx,BYTE PTR [rsi+0x2]
  41171b:	shl    rcx,0x28
  41171f:	or     rax,rcx
  411722:	movsx  rcx,BYTE PTR [rsi+0x1]
  411727:	shl    rcx,0x30
  41172b:	or     rax,rcx
  41172e:	movzx  ecx,BYTE PTR [rsi]
  411731:	shl    rcx,0x38
  411735:	or     rcx,rax
  411738:	movabs rax,0x4d7947616d652e44
  411742:	cmp    rcx,rax
  411745:	ja     411774 <main@@Base+0xa954>
  411747:	movabs rax,0x46616e746173792e
  411751:	cmp    rcx,rax
  411754:	jne    4125b2 <main@@Base+0xb792>
  41175a:	lea    rax,[rsi+0x8]
  41175e:	mov    rdx,rbp
  411761:	sub    rdx,rax
  411764:	cmp    rdx,0x8
  411768:	jb     4117d2 <main@@Base+0xa9b2>
  41176a:	movbe  rax,QWORD PTR [rax]
  41176f:	jmp    41184d <main@@Base+0xaa2d>
  411774:	movabs rax,0x4d7947616d652e4f
  41177e:	cmp    rcx,rax
  411781:	je     4117b4 <main@@Base+0xa994>
  411783:	movabs rax,0x4d7947616d652e45
  41178d:	cmp    rcx,rax
  411790:	jne    4125b2 <main@@Base+0xb792>
  411796:	lea    rax,[rsi+0x8]
  41179a:	mov    rdx,rbp
  41179d:	sub    rdx,rax
  4117a0:	cmp    rdx,0x8
  4117a4:	jb     411888 <main@@Base+0xaa68>
  4117aa:	movbe  rax,QWORD PTR [rax]
  4117af:	jmp    411903 <main@@Base+0xaae3>
  4117b4:	lea    rax,[rsi+0x8]
  4117b8:	mov    rdx,rbp
  4117bb:	sub    rdx,rax
  4117be:	cmp    rdx,0x8
  4117c2:	jb     411958 <main@@Base+0xab38>
  4117c8:	movbe  rax,QWORD PTR [rax]
  4117cd:	jmp    4119d3 <main@@Base+0xabb3>
  4117d2:	and    dl,0xf
  4117d5:	add    dl,0xff
  4117d8:	cmp    dl,0x7
  4117db:	ja     4125b2 <main@@Base+0xb792>
  4117e1:	xor    ecx,ecx
  4117e3:	movzx  edx,dl
  4117e6:	lea    rdi,[rip+0x21d73]        # 433560 <_IO_stdin_used@@Base+0x560>
  4117ed:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  4117f1:	add    rdx,rdi
  4117f4:	jmp    rdx
  4117f6:	movsx  rcx,BYTE PTR [rsi+0xf]
  4117fb:	movsx  rdx,BYTE PTR [rsi+0xe]
  411800:	shl    rdx,0x8
  411804:	or     rcx,rdx
  411807:	movsx  rdx,BYTE PTR [rsi+0xd]
  41180c:	shl    rdx,0x10
  411810:	or     rcx,rdx
  411813:	movsx  rdx,BYTE PTR [rsi+0xc]
  411818:	shl    rdx,0x18
  41181c:	or     rcx,rdx
  41181f:	movsx  rdx,BYTE PTR [rsi+0xb]
  411824:	shl    rdx,0x20
  411828:	or     rcx,rdx
  41182b:	movsx  rdx,BYTE PTR [rsi+0xa]
  411830:	shl    rdx,0x28
  411834:	or     rcx,rdx
  411837:	movsx  rdx,BYTE PTR [rsi+0x9]
  41183c:	shl    rdx,0x30
  411840:	or     rcx,rdx
  411843:	movzx  eax,BYTE PTR [rax]
  411846:	shl    rax,0x38
  41184a:	or     rax,rcx
  41184d:	movabs rcx,0x4368617261637465
  411857:	cmp    rax,rcx
  41185a:	jne    4125b2 <main@@Base+0xb792>
  411860:	lea    rcx,[rsi+0x10]
  411864:	mov    rax,rbp
  411867:	sub    rax,rcx
  41186a:	cmp    rax,0x8
  41186e:	jb     411a83 <main@@Base+0xac63>
  411874:	movbe  rdi,QWORD PTR [rcx]
  411879:	cmp    rax,0x2
  41187d:	jge    411b0a <main@@Base+0xacea>
  411883:	jmp    4125b2 <main@@Base+0xb792>
  411888:	and    dl,0xf
  41188b:	add    dl,0xff
  41188e:	cmp    dl,0x7
  411891:	ja     4125b2 <main@@Base+0xb792>
  411897:	xor    ecx,ecx
  411899:	movzx  edx,dl
  41189c:	lea    rdi,[rip+0x21bdd]        # 433480 <_IO_stdin_used@@Base+0x480>
  4118a3:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  4118a7:	add    rdx,rdi
  4118aa:	jmp    rdx
  4118ac:	movsx  rcx,BYTE PTR [rsi+0xf]
  4118b1:	movsx  rdx,BYTE PTR [rsi+0xe]
  4118b6:	shl    rdx,0x8
  4118ba:	or     rcx,rdx
  4118bd:	movsx  rdx,BYTE PTR [rsi+0xd]
  4118c2:	shl    rdx,0x10
  4118c6:	or     rcx,rdx
  4118c9:	movsx  rdx,BYTE PTR [rsi+0xc]
  4118ce:	shl    rdx,0x18
  4118d2:	or     rcx,rdx
  4118d5:	movsx  rdx,BYTE PTR [rsi+0xb]
  4118da:	shl    rdx,0x20
  4118de:	or     rcx,rdx
  4118e1:	movsx  rdx,BYTE PTR [rsi+0xa]
  4118e6:	shl    rdx,0x28
  4118ea:	or     rcx,rdx
  4118ed:	movsx  rdx,BYTE PTR [rsi+0x9]
  4118f2:	shl    rdx,0x30
  4118f6:	or     rcx,rdx
  4118f9:	movzx  eax,BYTE PTR [rax]
  4118fc:	shl    rax,0x38
  411900:	or     rax,rcx
  411903:	movabs rcx,0x78616d706c652e68
  41190d:	cmp    rax,rcx
  411910:	jae    411a04 <main@@Base+0xabe4>
  411916:	lea    rdx,[rcx-0x25]
  41191a:	cmp    rax,rdx
  41191d:	jae    411b64 <main@@Base+0xad44>
  411923:	add    rcx,0xffffffffffffffd9
  411927:	cmp    rax,rcx
  41192a:	jne    4125b2 <main@@Base+0xb792>
  411930:	lea    rbx,[rsi+0x10]
  411934:	mov    rax,rbp
  411937:	sub    rax,rbx
  41193a:	cmp    rax,0x8
  41193e:	jb     411e43 <main@@Base+0xb023>
  411944:	movbe  rdi,QWORD PTR [rbx]
  411949:	cmp    rax,0x3
  41194d:	jge    411eca <main@@Base+0xb0aa>
  411953:	jmp    4125b2 <main@@Base+0xb792>
  411958:	and    dl,0xf
  41195b:	add    dl,0xff
  41195e:	cmp    dl,0x7
  411961:	ja     4125b2 <main@@Base+0xb792>
  411967:	xor    ecx,ecx
  411969:	movzx  edx,dl
  41196c:	lea    rdi,[rip+0x21a4d]        # 4333c0 <_IO_stdin_used@@Base+0x3c0>
  411973:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  411977:	add    rdx,rdi
  41197a:	jmp    rdx
  41197c:	movsx  rcx,BYTE PTR [rsi+0xf]
  411981:	movsx  rdx,BYTE PTR [rsi+0xe]
  411986:	shl    rdx,0x8
  41198a:	or     rcx,rdx
  41198d:	movsx  rdx,BYTE PTR [rsi+0xd]
  411992:	shl    rdx,0x10
  411996:	or     rcx,rdx
  411999:	movsx  rdx,BYTE PTR [rsi+0xc]
  41199e:	shl    rdx,0x18
  4119a2:	or     rcx,rdx
  4119a5:	movsx  rdx,BYTE PTR [rsi+0xb]
  4119aa:	shl    rdx,0x20
  4119ae:	or     rcx,rdx
  4119b1:	movsx  rdx,BYTE PTR [rsi+0xa]
  4119b6:	shl    rdx,0x28
  4119ba:	or     rcx,rdx
  4119bd:	movsx  rdx,BYTE PTR [rsi+0x9]
  4119c2:	shl    rdx,0x30
  4119c6:	or     rcx,rdx
  4119c9:	movzx  eax,BYTE PTR [rax]
  4119cc:	shl    rax,0x38
  4119d0:	or     rax,rcx
  4119d3:	movabs rcx,0x746865724e616d65
  4119dd:	cmp    rax,rcx
  4119e0:	jne    4125b2 <main@@Base+0xb792>
  4119e6:	lea    rax,[rsi+0x10]
  4119ea:	mov    rdx,rbp
  4119ed:	sub    rdx,rax
  4119f0:	cmp    rdx,0x8
  4119f4:	jb     411bb2 <main@@Base+0xad92>
  4119fa:	movbe  rax,QWORD PTR [rax]
  4119ff:	jmp    411c2d <main@@Base+0xae0d>
  411a04:	jne    411c5e <main@@Base+0xae3e>
  411a0a:	lea    rcx,[rsi+0x10]
  411a0e:	mov    rax,rbp
  411a11:	sub    rax,rcx
  411a14:	cmp    rax,0x8
  411a18:	jb     4125b2 <main@@Base+0xb792>
  411a1e:	cmp    rax,0x8
  411a22:	jl     4125b2 <main@@Base+0xb792>
  411a28:	mov    al,0x38
  411a2a:	bzhi   rax,QWORD PTR [rcx],rax
  411a2f:	movabs rdx,0x6d756e655f746e
  411a39:	add    rdx,0x3f7
  411a40:	cmp    rax,rdx
  411a43:	jne    4125b2 <main@@Base+0xb792>
  411a49:	lea    rax,[rsi+0x18]
  411a4d:	cmp    BYTE PTR [rsi+0x17],0x2e
  411a51:	cmovne rax,rcx
  411a55:	cmp    rax,rcx
  411a58:	je     4125b2 <main@@Base+0xb792>
  411a5e:	mov    rdi,r13
  411a61:	mov    rsi,rax
  411a64:	mov    rdx,rbp
  411a67:	mov    rcx,r15
  411a6a:	mov    r8,r14
  411a6d:	mov    r9,r12
  411a70:	add    rsp,0x8
  411a74:	pop    rbx
  411a75:	pop    r12
  411a77:	pop    r13
  411a79:	pop    r14
  411a7b:	pop    r15
  411a7d:	pop    rbp
  411a7e:	jmp    414fa0 <main@@Base+0xe180>
  411a83:	mov    ebx,eax
  411a85:	and    bl,0xf
  411a88:	add    bl,0xff
  411a8b:	cmp    bl,0x7
  411a8e:	ja     4125b2 <main@@Base+0xb792>
  411a94:	xor    edx,edx
  411a96:	movzx  edi,bl
  411a99:	lea    rbx,[rip+0x21ae0]        # 433580 <_IO_stdin_used@@Base+0x580>
  411aa0:	movsxd rdi,DWORD PTR [rbx+rdi*4]
  411aa4:	add    rdi,rbx
  411aa7:	jmp    rdi
  411aa9:	movsx  rdx,BYTE PTR [rsi+0x17]
  411aae:	movsx  rdi,BYTE PTR [rsi+0x16]
  411ab3:	shl    rdi,0x8
  411ab7:	or     rdx,rdi
  411aba:	movsx  rdi,BYTE PTR [rsi+0x15]
  411abf:	shl    rdi,0x10
  411ac3:	or     rdx,rdi
  411ac6:	movsx  rdi,BYTE PTR [rsi+0x14]
  411acb:	shl    rdi,0x18
  411acf:	or     rdx,rdi
  411ad2:	movsx  rdi,BYTE PTR [rsi+0x13]
  411ad7:	shl    rdi,0x20
  411adb:	or     rdx,rdi
  411ade:	movsx  rdi,BYTE PTR [rsi+0x12]
  411ae3:	shl    rdi,0x28
  411ae7:	or     rdx,rdi
  411aea:	movsx  rdi,BYTE PTR [rsi+0x11]
  411aef:	shl    rdi,0x30
  411af3:	or     rdx,rdi
  411af6:	movzx  edi,BYTE PTR [rcx]
  411af9:	shl    rdi,0x38
  411afd:	or     rdi,rdx
  411b00:	cmp    rax,0x2
  411b04:	jl     4125b2 <main@@Base+0xb792>
  411b0a:	movabs rax,0xff00000000000000
  411b14:	and    rdi,rax
  411b17:	movabs rax,0x7200000000000000
  411b21:	cmp    rdi,rax
  411b24:	jne    4125b2 <main@@Base+0xb792>
  411b2a:	lea    rax,[rsi+0x12]
  411b2e:	cmp    BYTE PTR [rsi+0x11],0x2e
  411b32:	cmovne rax,rcx
  411b36:	cmp    rax,rcx
  411b39:	je     4125b2 <main@@Base+0xb792>
  411b3f:	mov    rdi,r13
  411b42:	mov    rsi,rax
  411b45:	mov    rdx,rbp
  411b48:	mov    rcx,r15
  411b4b:	mov    r8,r14
  411b4e:	mov    r9,r12
  411b51:	add    rsp,0x8
  411b55:	pop    rbx
  411b56:	pop    r12
  411b58:	pop    r13
  411b5a:	pop    r14
  411b5c:	pop    r15
  411b5e:	pop    rbp
  411b5f:	jmp    415420 <main@@Base+0xe600>
  411b64:	movabs rcx,0x78616d706c652e46
  411b6e:	cmp    rax,rcx
  411b71:	je     411e1b <main@@Base+0xaffb>
  411b77:	movabs rcx,0x78616d706c652e43
  411b81:	cmp    rax,rcx
  411b84:	jne    4125b2 <main@@Base+0xb792>
  411b8a:	lea    rbx,[rsi+0x10]
  411b8e:	mov    rax,rbp
  411b91:	sub    rax,rbx
  411b94:	cmp    rax,0x8
  411b98:	jb     411ff7 <main@@Base+0xb1d7>
  411b9e:	movbe  rdi,QWORD PTR [rbx]
  411ba3:	cmp    rax,0x5
  411ba7:	jge    41207e <main@@Base+0xb25e>
  411bad:	jmp    4125b2 <main@@Base+0xb792>
  411bb2:	and    dl,0xf
  411bb5:	add    dl,0xff
  411bb8:	cmp    dl,0x7
  411bbb:	ja     4125b2 <main@@Base+0xb792>
  411bc1:	xor    ecx,ecx
  411bc3:	movzx  edx,dl
  411bc6:	lea    rdi,[rip+0x21813]        # 4333e0 <_IO_stdin_used@@Base+0x3e0>
  411bcd:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  411bd1:	add    rdx,rdi
  411bd4:	jmp    rdx
  411bd6:	movsx  rcx,BYTE PTR [rsi+0x17]
  411bdb:	movsx  rdx,BYTE PTR [rsi+0x16]
  411be0:	shl    rdx,0x8
  411be4:	or     rcx,rdx
  411be7:	movsx  rdx,BYTE PTR [rsi+0x15]
  411bec:	shl    rdx,0x10
  411bf0:	or     rcx,rdx
  411bf3:	movsx  rdx,BYTE PTR [rsi+0x14]
  411bf8:	shl    rdx,0x18
  411bfc:	or     rcx,rdx
  411bff:	movsx  rdx,BYTE PTR [rsi+0x13]
  411c04:	shl    rdx,0x20
  411c08:	or     rcx,rdx
  411c0b:	movsx  rdx,BYTE PTR [rsi+0x12]
  411c10:	shl    rdx,0x28
  411c14:	or     rcx,rdx
  411c17:	movsx  rdx,BYTE PTR [rsi+0x11]
  411c1c:	shl    rdx,0x30
  411c20:	or     rcx,rdx
  411c23:	movzx  eax,BYTE PTR [rax]
  411c26:	shl    rax,0x38
  411c2a:	or     rax,rcx
  411c2d:	movabs rcx,0x53706163652e4672
  411c37:	cmp    rax,rcx
  411c3a:	jne    4125b2 <main@@Base+0xb792>
  411c40:	lea    rax,[rsi+0x18]
  411c44:	mov    rdx,rbp
  411c47:	sub    rdx,rax
  411c4a:	cmp    rdx,0x8
  411c4e:	jb     411d65 <main@@Base+0xaf45>
  411c54:	movbe  rax,QWORD PTR [rax]
  411c59:	jmp    411de0 <main@@Base+0xafc0>
  411c5e:	lea    rdx,[rcx+0x6]
  411c62:	cmp    rax,rdx
  411c65:	jae    411ce6 <main@@Base+0xaec6>
  411c67:	add    rcx,0x1
  411c6b:	cmp    rax,rcx
  411c6e:	jne    4125b2 <main@@Base+0xb792>
  411c74:	lea    rcx,[rsi+0x10]
  411c78:	mov    rax,rbp
  411c7b:	sub    rax,rcx
  411c7e:	cmp    rax,0x8
  411c82:	jb     4125b2 <main@@Base+0xb792>
  411c88:	cmp    rax,0x8
  411c8c:	jl     4125b2 <main@@Base+0xb792>
  411c92:	mov    al,0x38
  411c94:	bzhi   rax,QWORD PTR [rcx],rax
  411c99:	movabs rdx,0x6d756e655f746e
  411ca3:	cmp    rax,rdx
  411ca6:	jne    4125b2 <main@@Base+0xb792>
  411cac:	lea    rax,[rsi+0x18]
  411cb0:	cmp    BYTE PTR [rsi+0x17],0x2e
  411cb4:	cmovne rax,rcx
  411cb8:	cmp    rax,rcx
  411cbb:	je     4125b2 <main@@Base+0xb792>
  411cc1:	mov    rdi,r13
  411cc4:	mov    rsi,rax
  411cc7:	mov    rdx,rbp
  411cca:	mov    rcx,r15
  411ccd:	mov    r8,r14
  411cd0:	mov    r9,r12
  411cd3:	add    rsp,0x8
  411cd7:	pop    rbx
  411cd8:	pop    r12
  411cda:	pop    r13
  411cdc:	pop    r14
  411cde:	pop    r15
  411ce0:	pop    rbp
  411ce1:	jmp    415110 <main@@Base+0xe2f0>
  411ce6:	jne    4125b2 <main@@Base+0xb792>
  411cec:	lea    rcx,[rsi+0x10]
  411cf0:	mov    rdi,rbp
  411cf3:	sub    rdi,rcx
  411cf6:	cmp    rdi,0x7
  411cfa:	jbe    4121b9 <main@@Base+0xb399>
  411d00:	movbe  rdx,QWORD PTR [rcx]
  411d05:	cmp    rdi,0x8
  411d09:	jl     412238 <main@@Base+0xb418>
  411d0f:	mov    rax,rdx
  411d12:	and    rax,0xffffffffffffff00
  411d18:	movabs rdi,0x65675f656e756d00
  411d22:	cmp    rax,rdi
  411d25:	jne    412238 <main@@Base+0xb418>
  411d2b:	lea    rax,[rsi+0x18]
  411d2f:	cmp    BYTE PTR [rsi+0x17],0x2e
  411d33:	cmovne rax,rcx
  411d37:	cmp    rax,rcx
  411d3a:	je     412238 <main@@Base+0xb418>
  411d40:	mov    rdi,r13
  411d43:	mov    rsi,rax
  411d46:	mov    rdx,rbp
  411d49:	mov    rcx,r15
  411d4c:	mov    r8,r14
  411d4f:	mov    r9,r12
  411d52:	add    rsp,0x8
  411d56:	pop    rbx
  411d57:	pop    r12
  411d59:	pop    r13
  411d5b:	pop    r14
  411d5d:	pop    r15
  411d5f:	pop    rbp
  411d60:	jmp    4152c0 <main@@Base+0xe4a0>
  411d65:	and    dl,0xf
  411d68:	add    dl,0xff
  411d6b:	cmp    dl,0x7
  411d6e:	ja     4125b2 <main@@Base+0xb792>
  411d74:	xor    ecx,ecx
  411d76:	movzx  edx,dl
  411d79:	lea    rdi,[rip+0x21680]        # 433400 <_IO_stdin_used@@Base+0x400>
  411d80:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  411d84:	add    rdx,rdi
  411d87:	jmp    rdx
  411d89:	movsx  rcx,BYTE PTR [rsi+0x1f]
  411d8e:	movsx  rdx,BYTE PTR [rsi+0x1e]
  411d93:	shl    rdx,0x8
  411d97:	or     rcx,rdx
  411d9a:	movsx  rdx,BYTE PTR [rsi+0x1d]
  411d9f:	shl    rdx,0x10
  411da3:	or     rcx,rdx
  411da6:	movsx  rdx,BYTE PTR [rsi+0x1c]
  411dab:	shl    rdx,0x18
  411daf:	or     rcx,rdx
  411db2:	movsx  rdx,BYTE PTR [rsi+0x1b]
  411db7:	shl    rdx,0x20
  411dbb:	or     rcx,rdx
  411dbe:	movsx  rdx,BYTE PTR [rsi+0x1a]
  411dc3:	shl    rdx,0x28
  411dc7:	or     rcx,rdx
  411dca:	movsx  rdx,BYTE PTR [rsi+0x19]
  411dcf:	shl    rdx,0x30
  411dd3:	or     rcx,rdx
  411dd6:	movzx  eax,BYTE PTR [rax]
  411dd9:	shl    rax,0x38
  411ddd:	or     rax,rcx
  411de0:	movabs rcx,0x6f6d496e636c7564
  411dea:	cmp    rax,rcx
  411ded:	jne    4125b2 <main@@Base+0xb792>
  411df3:	lea    rbx,[rsi+0x20]
  411df7:	mov    rcx,rbp
  411dfa:	sub    rcx,rbx
  411dfd:	cmp    rcx,0x8
  411e01:	jb     411f24 <main@@Base+0xb104>
  411e07:	movbe  rdi,QWORD PTR [rbx]
  411e0c:	cmp    rcx,0x2
  411e10:	jge    411fa8 <main@@Base+0xb188>
  411e16:	jmp    4125b2 <main@@Base+0xb792>
  411e1b:	lea    rbx,[rsi+0x10]
  411e1f:	mov    rax,rbp
  411e22:	sub    rax,rbx
  411e25:	cmp    rax,0x8
  411e29:	jb     4120d8 <main@@Base+0xb2b8>
  411e2f:	movbe  rdi,QWORD PTR [rbx]
  411e34:	cmp    rax,0x3
  411e38:	jge    41215f <main@@Base+0xb33f>
  411e3e:	jmp    4125b2 <main@@Base+0xb792>
  411e43:	mov    ecx,eax
  411e45:	and    cl,0xf
  411e48:	add    cl,0xff
  411e4b:	cmp    cl,0x7
  411e4e:	ja     4125b2 <main@@Base+0xb792>
  411e54:	xor    edx,edx
  411e56:	movzx  ecx,cl
  411e59:	lea    rdi,[rip+0x216e0]        # 433540 <_IO_stdin_used@@Base+0x540>
  411e60:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  411e64:	add    rcx,rdi
  411e67:	jmp    rcx
  411e69:	movsx  rdx,BYTE PTR [rsi+0x17]
  411e6e:	movsx  rcx,BYTE PTR [rsi+0x16]
  411e73:	shl    rcx,0x8
  411e77:	or     rdx,rcx
  411e7a:	movsx  rcx,BYTE PTR [rsi+0x15]
  411e7f:	shl    rcx,0x10
  411e83:	or     rdx,rcx
  411e86:	movsx  rcx,BYTE PTR [rsi+0x14]
  411e8b:	shl    rcx,0x18
  411e8f:	or     rdx,rcx
  411e92:	movsx  rcx,BYTE PTR [rsi+0x13]
  411e97:	shl    rcx,0x20
  411e9b:	or     rdx,rcx
  411e9e:	movsx  rcx,BYTE PTR [rsi+0x12]
  411ea3:	shl    rcx,0x28
  411ea7:	or     rdx,rcx
  411eaa:	movsx  rcx,BYTE PTR [rsi+0x11]
  411eaf:	shl    rcx,0x30
  411eb3:	or     rdx,rcx
  411eb6:	movzx  edi,BYTE PTR [rbx]
  411eb9:	shl    rdi,0x38
  411ebd:	or     rdi,rdx
  411ec0:	cmp    rax,0x3
  411ec4:	jl     4125b2 <main@@Base+0xb792>
  411eca:	movabs rax,0xffff000000000000
  411ed4:	and    rdi,rax
  411ed7:	movabs rax,0x6e79000000000000
  411ee1:	cmp    rdi,rax
  411ee4:	jne    4125b2 <main@@Base+0xb792>
  411eea:	lea    rax,[rsi+0x13]
  411eee:	cmp    BYTE PTR [rsi+0x12],0x2e
  411ef2:	cmovne rax,rbx
  411ef6:	cmp    rax,rbx
  411ef9:	je     4125b2 <main@@Base+0xb792>
  411eff:	mov    rdi,r13
  411f02:	mov    rsi,rax
  411f05:	mov    rdx,rbp
  411f08:	mov    rcx,r15
  411f0b:	mov    r8,r14
  411f0e:	mov    r9,r12
  411f11:	add    rsp,0x8
  411f15:	pop    rbx
  411f16:	pop    r12
  411f18:	pop    r13
  411f1a:	pop    r14
  411f1c:	pop    r15
  411f1e:	pop    rbp
  411f1f:	jmp    413ed0 <main@@Base+0xd0b0>
  411f24:	mov    eax,ecx
  411f26:	and    al,0xf
  411f28:	add    al,0xff
  411f2a:	cmp    al,0x7
  411f2c:	ja     4125b2 <main@@Base+0xb792>
  411f32:	xor    edx,edx
  411f34:	movzx  eax,al
  411f37:	lea    rdi,[rip+0x214e2]        # 433420 <_IO_stdin_used@@Base+0x420>
  411f3e:	movsxd rax,DWORD PTR [rdi+rax*4]
  411f42:	add    rax,rdi
  411f45:	jmp    rax
  411f47:	movsx  rdx,BYTE PTR [rsi+0x27]
  411f4c:	movsx  rax,BYTE PTR [rsi+0x26]
  411f51:	shl    rax,0x8
  411f55:	or     rdx,rax
  411f58:	movsx  rax,BYTE PTR [rsi+0x25]
  411f5d:	shl    rax,0x10
  411f61:	or     rdx,rax
  411f64:	movsx  rax,BYTE PTR [rsi+0x24]
  411f69:	shl    rax,0x18
  411f6d:	or     rdx,rax
  411f70:	movsx  rax,BYTE PTR [rsi+0x23]
  411f75:	shl    rax,0x20
  411f79:	or     rdx,rax
  411f7c:	movsx  rax,BYTE PTR [rsi+0x22]
  411f81:	shl    rax,0x28
  411f85:	or     rdx,rax
  411f88:	movsx  rax,BYTE PTR [rsi+0x21]
  411f8d:	shl    rax,0x30
  411f91:	or     rdx,rax
  411f94:	movzx  edi,BYTE PTR [rbx]
  411f97:	shl    rdi,0x38
  411f9b:	or     rdi,rdx
  411f9e:	cmp    rcx,0x2
  411fa2:	jl     4125b2 <main@@Base+0xb792>
  411fa8:	movabs rax,0xff00000000000000
  411fb2:	and    rdi,rax
  411fb5:	movabs rax,0x6500000000000000
  411fbf:	cmp    rdi,rax
  411fc2:	jne    4125b2 <main@@Base+0xb792>
  411fc8:	lea    r8,[rsi+0x22]
  411fcc:	cmp    BYTE PTR [rsi+0x21],0x2e
  411fd0:	cmovne r8,rbx
  411fd4:	cmp    r8,rbx
  411fd7:	je     4125b2 <main@@Base+0xb792>
  411fdd:	mov    rcx,rbp
  411fe0:	sub    rcx,r8
  411fe3:	cmp    rcx,0x8
  411fe7:	jb     412273 <main@@Base+0xb453>
  411fed:	movbe  rbx,QWORD PTR [r8]
  411ff2:	jmp    4122ef <main@@Base+0xb4cf>
  411ff7:	mov    ecx,eax
  411ff9:	and    cl,0xf
  411ffc:	add    cl,0xff
  411fff:	cmp    cl,0x7
  412002:	ja     4125b2 <main@@Base+0xb792>
  412008:	xor    edx,edx
  41200a:	movzx  ecx,cl
  41200d:	lea    rdi,[rip+0x2150c]        # 433520 <_IO_stdin_used@@Base+0x520>
  412014:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  412018:	add    rcx,rdi
  41201b:	jmp    rcx
  41201d:	movsx  rdx,BYTE PTR [rsi+0x17]
  412022:	movsx  rcx,BYTE PTR [rsi+0x16]
  412027:	shl    rcx,0x8
  41202b:	or     rdx,rcx
  41202e:	movsx  rcx,BYTE PTR [rsi+0x15]
  412033:	shl    rcx,0x10
  412037:	or     rdx,rcx
  41203a:	movsx  rcx,BYTE PTR [rsi+0x14]
  41203f:	shl    rcx,0x18
  412043:	or     rdx,rcx
  412046:	movsx  rcx,BYTE PTR [rsi+0x13]
  41204b:	shl    rcx,0x20
  41204f:	or     rdx,rcx
  412052:	movsx  rcx,BYTE PTR [rsi+0x12]
  412057:	shl    rcx,0x28
  41205b:	or     rdx,rcx
  41205e:	movsx  rcx,BYTE PTR [rsi+0x11]
  412063:	shl    rcx,0x30
  412067:	or     rdx,rcx
  41206a:	movzx  edi,BYTE PTR [rbx]
  41206d:	shl    rdi,0x38
  412071:	or     rdi,rdx
  412074:	cmp    rax,0x5
  412078:	jl     4125b2 <main@@Base+0xb792>
  41207e:	movabs rax,0xffffffff00000000
  412088:	and    rdi,rax
  41208b:	movabs rax,0x6f6c6f7200000000
  412095:	cmp    rdi,rax
  412098:	jne    4125b2 <main@@Base+0xb792>
  41209e:	lea    rax,[rsi+0x15]
  4120a2:	cmp    BYTE PTR [rsi+0x14],0x2e
  4120a6:	cmovne rax,rbx
  4120aa:	cmp    rax,rbx
  4120ad:	je     4125b2 <main@@Base+0xb792>
  4120b3:	mov    rdi,r13
  4120b6:	mov    rsi,rax
  4120b9:	mov    rdx,rbp
  4120bc:	mov    rcx,r15
  4120bf:	mov    r8,r14
  4120c2:	mov    r9,r12
  4120c5:	add    rsp,0x8
  4120c9:	pop    rbx
  4120ca:	pop    r12
  4120cc:	pop    r13
  4120ce:	pop    r14
  4120d0:	pop    r15
  4120d2:	pop    rbp
  4120d3:	jmp    4110e0 <main@@Base+0xa2c0>
  4120d8:	mov    ecx,eax
  4120da:	and    cl,0xf
  4120dd:	add    cl,0xff
  4120e0:	cmp    cl,0x7
  4120e3:	ja     4125b2 <main@@Base+0xb792>
  4120e9:	xor    edx,edx
  4120eb:	movzx  ecx,cl
  4120ee:	lea    rdi,[rip+0x2140b]        # 433500 <_IO_stdin_used@@Base+0x500>
  4120f5:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  4120f9:	add    rcx,rdi
  4120fc:	jmp    rcx
  4120fe:	movsx  rdx,BYTE PTR [rsi+0x17]
  412103:	movsx  rcx,BYTE PTR [rsi+0x16]
  412108:	shl    rcx,0x8
  41210c:	or     rdx,rcx
  41210f:	movsx  rcx,BYTE PTR [rsi+0x15]
  412114:	shl    rcx,0x10
  412118:	or     rdx,rcx
  41211b:	movsx  rcx,BYTE PTR [rsi+0x14]
  412120:	shl    rcx,0x18
  412124:	or     rdx,rcx
  412127:	movsx  rcx,BYTE PTR [rsi+0x13]
  41212c:	shl    rcx,0x20
  412130:	or     rdx,rcx
  412133:	movsx  rcx,BYTE PTR [rsi+0x12]
  412138:	shl    rcx,0x28
  41213c:	or     rdx,rcx
  41213f:	movsx  rcx,BYTE PTR [rsi+0x11]
  412144:	shl    rcx,0x30
  412148:	or     rdx,rcx
  41214b:	movzx  edi,BYTE PTR [rbx]
  41214e:	shl    rdi,0x38
  412152:	or     rdi,rdx
  412155:	cmp    rax,0x3
  412159:	jl     4125b2 <main@@Base+0xb792>
  41215f:	movabs rax,0xffff000000000000
  412169:	and    rdi,rax
  41216c:	movabs rax,0x6f6f000000000000
  412176:	cmp    rdi,rax
  412179:	jne    4125b2 <main@@Base+0xb792>
  41217f:	lea    rax,[rsi+0x13]
  412183:	cmp    BYTE PTR [rsi+0x12],0x2e
  412187:	cmovne rax,rbx
  41218b:	cmp    rax,rbx
  41218e:	je     4125b2 <main@@Base+0xb792>
  412194:	mov    rdi,r13
  412197:	mov    rsi,rax
  41219a:	mov    rdx,rbp
  41219d:	mov    rcx,r15
  4121a0:	mov    r8,r14
  4121a3:	mov    r9,r12
  4121a6:	add    rsp,0x8
  4121aa:	pop    rbx
  4121ab:	pop    r12
  4121ad:	pop    r13
  4121af:	pop    r14
  4121b1:	pop    r15
  4121b3:	pop    rbp
  4121b4:	jmp    414d40 <main@@Base+0xdf20>
  4121b9:	and    dil,0xf
  4121bd:	add    dil,0xff
  4121c1:	cmp    dil,0x7
  4121c5:	ja     4125b2 <main@@Base+0xb792>
  4121cb:	xor    eax,eax
  4121cd:	movzx  edx,dil
  4121d1:	lea    rdi,[rip+0x212c8]        # 4334a0 <_IO_stdin_used@@Base+0x4a0>
  4121d8:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  4121dc:	add    rdx,rdi
  4121df:	jmp    rdx
  4121e1:	movsx  rax,BYTE PTR [rsi+0x17]
  4121e6:	movsx  rdx,BYTE PTR [rsi+0x16]
  4121eb:	shl    rdx,0x8
  4121ef:	or     rax,rdx
  4121f2:	movsx  rdx,BYTE PTR [rsi+0x15]
  4121f7:	shl    rdx,0x10
  4121fb:	or     rax,rdx
  4121fe:	movsx  rdx,BYTE PTR [rsi+0x14]
  412203:	shl    rdx,0x18
  412207:	or     rax,rdx
  41220a:	movsx  rdx,BYTE PTR [rsi+0x13]
  41220f:	shl    rdx,0x20
  412213:	or     rax,rdx
  412216:	movsx  rdx,BYTE PTR [rsi+0x12]
  41221b:	shl    rdx,0x28
  41221f:	or     rax,rdx
  412222:	movsx  rdx,BYTE PTR [rsi+0x11]
  412227:	shl    rdx,0x30
  41222b:	or     rax,rdx
  41222e:	movzx  edx,BYTE PTR [rcx]
  412231:	shl    rdx,0x38
  412235:	or     rdx,rax
  412238:	movabs rax,0x6f74656d70747965
  412242:	cmp    rdx,rax
  412245:	jne    4125b2 <main@@Base+0xb792>
  41224b:	lea    rbx,[rsi+0x18]
  41224f:	mov    rcx,rbp
  412252:	sub    rcx,rbx
  412255:	cmp    rcx,0x8
  412259:	jb     41235f <main@@Base+0xb53f>
  41225f:	movbe  rdi,QWORD PTR [rbx]
  412264:	cmp    rcx,0x4
  412268:	jge    4123e3 <main@@Base+0xb5c3>
  41226e:	jmp    4125b2 <main@@Base+0xb792>
  412273:	and    cl,0xf
  412276:	add    cl,0xff
  412279:	cmp    cl,0x7
  41227c:	ja     4124f3 <main@@Base+0xb6d3>
  412282:	xor    eax,eax
  412284:	movzx  ecx,cl
  412287:	lea    rdx,[rip+0x211b2]        # 433440 <_IO_stdin_used@@Base+0x440>
  41228e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412292:	add    rcx,rdx
  412295:	jmp    rcx
  412297:	movsx  rax,BYTE PTR [r8+0x7]
  41229c:	movsx  rcx,BYTE PTR [r8+0x6]
  4122a1:	shl    rcx,0x8
  4122a5:	or     rax,rcx
  4122a8:	movsx  rcx,BYTE PTR [r8+0x5]
  4122ad:	shl    rcx,0x10
  4122b1:	or     rax,rcx
  4122b4:	movsx  rcx,BYTE PTR [r8+0x4]
  4122b9:	shl    rcx,0x18
  4122bd:	or     rax,rcx
  4122c0:	movsx  rcx,BYTE PTR [r8+0x3]
  4122c5:	shl    rcx,0x20
  4122c9:	or     rax,rcx
  4122cc:	movsx  rcx,BYTE PTR [r8+0x2]
  4122d1:	shl    rcx,0x28
  4122d5:	or     rax,rcx
  4122d8:	movsx  rcx,BYTE PTR [r8+0x1]
  4122dd:	shl    rcx,0x30
  4122e1:	or     rax,rcx
  4122e4:	movzx  ebx,BYTE PTR [r8]
  4122e8:	shl    rbx,0x38
  4122ec:	or     rbx,rax
  4122ef:	mov    rax,rbx
  4122f2:	shr    rax,0x28
  4122f6:	cmp    rax,0x466f6f
  4122fc:	jne    41232e <main@@Base+0xb50e>
  4122fe:	mov    ecx,0x3
  412303:	mov    rdi,r13
  412306:	mov    rsi,r8
  412309:	mov    rdx,rbp
  41230c:	mov    QWORD PTR [rsp],r8
  412310:	mov    r8,r12
  412313:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  412318:	mov    r8,QWORD PTR [rsp]
  41231c:	cmp    rax,r8
  41231f:	je     41232e <main@@Base+0xb50e>
  412321:	mov    rsi,rax
  412324:	mov    ecx,0x11
  412329:	jmp    4124e4 <main@@Base+0xb6c4>
  41232e:	movabs rax,0x496e636c75646556
  412338:	cmp    rbx,rax
  41233b:	jne    4124f3 <main@@Base+0xb6d3>
  412341:	lea    rbx,[r8+0x8]
  412345:	mov    rcx,rbp
  412348:	sub    rcx,rbx
  41234b:	cmp    rcx,0x8
  41234f:	jb     412432 <main@@Base+0xb612>
  412355:	movbe  rcx,QWORD PTR [rbx]
  41235a:	jmp    4124ad <main@@Base+0xb68d>
  41235f:	mov    eax,ecx
  412361:	and    al,0xf
  412363:	add    al,0xff
  412365:	cmp    al,0x7
  412367:	ja     4125b2 <main@@Base+0xb792>
  41236d:	xor    edx,edx
  41236f:	movzx  eax,al
  412372:	lea    rdi,[rip+0x21147]        # 4334c0 <_IO_stdin_used@@Base+0x4c0>
  412379:	movsxd rax,DWORD PTR [rdi+rax*4]
  41237d:	add    rax,rdi
  412380:	jmp    rax
  412382:	movsx  rdx,BYTE PTR [rsi+0x1f]
  412387:	movsx  rax,BYTE PTR [rsi+0x1e]
  41238c:	shl    rax,0x8
  412390:	or     rdx,rax
  412393:	movsx  rax,BYTE PTR [rsi+0x1d]
  412398:	shl    rax,0x10
  41239c:	or     rdx,rax
  41239f:	movsx  rax,BYTE PTR [rsi+0x1c]
  4123a4:	shl    rax,0x18
  4123a8:	or     rdx,rax
  4123ab:	movsx  rax,BYTE PTR [rsi+0x1b]
  4123b0:	shl    rax,0x20
  4123b4:	or     rdx,rax
  4123b7:	movsx  rax,BYTE PTR [rsi+0x1a]
  4123bc:	shl    rax,0x28
  4123c0:	or     rdx,rax
  4123c3:	movsx  rax,BYTE PTR [rsi+0x19]
  4123c8:	shl    rax,0x30
  4123cc:	or     rdx,rax
  4123cf:	movzx  edi,BYTE PTR [rbx]
  4123d2:	shl    rdi,0x38
  4123d6:	or     rdi,rdx
  4123d9:	cmp    rcx,0x4
  4123dd:	jl     4125b2 <main@@Base+0xb792>
  4123e3:	movabs rax,0xffffff0000000000
  4123ed:	and    rdi,rax
  4123f0:	movabs rax,0x6e756d0000000000
  4123fa:	cmp    rdi,rax
  4123fd:	jne    4125b2 <main@@Base+0xb792>
  412403:	lea    rax,[rsi+0x1c]
  412407:	cmp    BYTE PTR [rsi+0x1b],0x2e
  41240b:	cmovne rax,rbx
  41240f:	cmp    rax,rbx
  412412:	je     4125b2 <main@@Base+0xb792>
  412418:	mov    rcx,rbp
  41241b:	sub    rcx,rax
  41241e:	cmp    rcx,0x8
  412422:	jb     4124fb <main@@Base+0xb6db>
  412428:	movbe  rcx,QWORD PTR [rax]
  41242d:	jmp    412576 <main@@Base+0xb756>
  412432:	and    cl,0xf
  412435:	add    cl,0xff
  412438:	cmp    cl,0x7
  41243b:	ja     4124f3 <main@@Base+0xb6d3>
  412441:	xor    eax,eax
  412443:	movzx  ecx,cl
  412446:	lea    rdx,[rip+0x21013]        # 433460 <_IO_stdin_used@@Base+0x460>
  41244d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412451:	add    rcx,rdx
  412454:	jmp    rcx
  412456:	movsx  rax,BYTE PTR [r8+0xf]
  41245b:	movsx  rcx,BYTE PTR [r8+0xe]
  412460:	shl    rcx,0x8
  412464:	or     rax,rcx
  412467:	movsx  rcx,BYTE PTR [r8+0xd]
  41246c:	shl    rcx,0x10
  412470:	or     rax,rcx
  412473:	movsx  rcx,BYTE PTR [r8+0xc]
  412478:	shl    rcx,0x18
  41247c:	or     rax,rcx
  41247f:	movsx  rcx,BYTE PTR [r8+0xb]
  412484:	shl    rcx,0x20
  412488:	or     rax,rcx
  41248b:	movsx  rcx,BYTE PTR [r8+0xa]
  412490:	shl    rcx,0x28
  412494:	or     rax,rcx
  412497:	movsx  rcx,BYTE PTR [r8+0x9]
  41249c:	shl    rcx,0x30
  4124a0:	or     rax,rcx
  4124a3:	movzx  ecx,BYTE PTR [rbx]
  4124a6:	shl    rcx,0x38
  4124aa:	or     rcx,rax
  4124ad:	shr    rcx,0x30
  4124b1:	cmp    rcx,0x616c
  4124b8:	jne    4124f3 <main@@Base+0xb6d3>
  4124ba:	mov    ecx,0x2
  4124bf:	mov    rdi,r13
  4124c2:	mov    rsi,rbx
  4124c5:	mov    rdx,rbp
  4124c8:	mov    rbp,r8
  4124cb:	mov    r8,r12
  4124ce:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4124d3:	mov    rsi,rbp
  4124d6:	cmp    rax,rbx
  4124d9:	je     4125b2 <main@@Base+0xb792>
  4124df:	xor    ecx,ecx
  4124e1:	mov    rsi,rax
  4124e4:	mov    QWORD PTR [r14],rcx
  4124e7:	mov    DWORD PTR [r15],0x0
  4124ee:	jmp    4125b2 <main@@Base+0xb792>
  4124f3:	mov    rsi,r8
  4124f6:	jmp    4125b2 <main@@Base+0xb792>
  4124fb:	and    cl,0xf
  4124fe:	add    cl,0xff
  412501:	cmp    cl,0x7
  412504:	ja     4125af <main@@Base+0xb78f>
  41250a:	xor    esi,esi
  41250c:	movzx  ecx,cl
  41250f:	lea    rdx,[rip+0x20fca]        # 4334e0 <_IO_stdin_used@@Base+0x4e0>
  412516:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41251a:	add    rcx,rdx
  41251d:	jmp    rcx
  41251f:	movsx  rsi,BYTE PTR [rax+0x7]
  412524:	movsx  rcx,BYTE PTR [rax+0x6]
  412529:	shl    rcx,0x8
  41252d:	or     rsi,rcx
  412530:	movsx  rcx,BYTE PTR [rax+0x5]
  412535:	shl    rcx,0x10
  412539:	or     rsi,rcx
  41253c:	movsx  rcx,BYTE PTR [rax+0x4]
  412541:	shl    rcx,0x18
  412545:	or     rsi,rcx
  412548:	movsx  rcx,BYTE PTR [rax+0x3]
  41254d:	shl    rcx,0x20
  412551:	or     rsi,rcx
  412554:	movsx  rcx,BYTE PTR [rax+0x2]
  412559:	shl    rcx,0x28
  41255d:	or     rsi,rcx
  412560:	movsx  rcx,BYTE PTR [rax+0x1]
  412565:	shl    rcx,0x30
  412569:	or     rsi,rcx
  41256c:	movzx  ecx,BYTE PTR [rax]
  41256f:	shl    rcx,0x38
  412573:	or     rcx,rsi
  412576:	shr    rcx,0x38
  41257a:	cmp    rcx,0x78
  41257e:	jne    4125af <main@@Base+0xb78f>
  412580:	mov    ecx,0x1
  412585:	mov    rdi,r13
  412588:	mov    rsi,rax
  41258b:	mov    rdx,rbp
  41258e:	mov    rbx,rax
  412591:	mov    r8,r12
  412594:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  412599:	mov    rsi,rbx
  41259c:	cmp    rax,rbx
  41259f:	je     4125b2 <main@@Base+0xb792>
  4125a1:	mov    QWORD PTR [r14],0x0
  4125a8:	mov    DWORD PTR [r15],0x0
  4125af:	mov    rsi,rax
  4125b2:	mov    rax,rsi
  4125b5:	add    rsp,0x8
  4125b9:	pop    rbx
  4125ba:	pop    r12
  4125bc:	pop    r13
  4125be:	pop    r14
  4125c0:	pop    r15
  4125c2:	pop    rbp
  4125c3:	ret    
  4125c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4125ce:	xchg   ax,ax
  4125d0:	push   rbp
  4125d1:	push   r15
  4125d3:	push   r14
  4125d5:	push   r13
  4125d7:	push   r12
  4125d9:	push   rbx
  4125da:	sub    rsp,0x38
  4125de:	mov    r15,r8
  4125e1:	mov    rbp,rcx
  4125e4:	mov    r13,rdx
  4125e7:	mov    rbx,rsi
  4125ea:	mov    r14,rdi
  4125ed:	mov    BYTE PTR [r8],0x0
  4125f1:	cmp    rsi,rdx
  4125f4:	je     412617 <main@@Base+0xb7f7>
  4125f6:	cmp    BYTE PTR [rbx],0x22
  4125f9:	jne    412601 <main@@Base+0xb7e1>
  4125fb:	add    rbx,0x1
  4125ff:	jmp    412617 <main@@Base+0xb7f7>
  412601:	mov    ecx,0x5
  412606:	mov    rdi,r14
  412609:	mov    rsi,rbx
  41260c:	mov    rdx,r13
  41260f:	call   423620 <flatcc_json_parser_set_error@@Base>
  412614:	mov    rbx,rax
  412617:	mov    rax,r13
  41261a:	sub    rax,rbx
  41261d:	cmp    rax,0x2
  412621:	jl     41263e <main@@Base+0xb81e>
  412623:	cmp    BYTE PTR [rbx],0x20
  412626:	jg     41264f <main@@Base+0xb82f>
  412628:	jne    41263e <main@@Base+0xb81e>
  41262a:	cmp    BYTE PTR [rbx+0x1],0x20
  41262e:	jle    41263e <main@@Base+0xb81e>
  412630:	add    rbx,0x1
  412634:	cmp    rbx,r13
  412637:	jne    412658 <main@@Base+0xb838>
  412639:	jmp    412730 <main@@Base+0xb910>
  41263e:	mov    rdi,r14
  412641:	mov    rsi,rbx
  412644:	mov    rdx,r13
  412647:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41264c:	mov    rbx,rax
  41264f:	cmp    rbx,r13
  412652:	je     412730 <main@@Base+0xb910>
  412658:	lea    rcx,[rbp+0x8]
  41265c:	xor    edx,edx
  41265e:	mov    rax,rbp
  412661:	lea    r12,[rsp+0x10]
  412666:	mov    QWORD PTR [rsp+0x18],r15
  41266b:	mov    QWORD PTR [rsp+0x20],rbp
  412670:	mov    QWORD PTR [rsp+0x28],rcx
  412675:	mov    DWORD PTR [rsp+0xc],edx
  412679:	mov    rbp,QWORD PTR [rax]
  41267c:	mov    r15,rcx
  41267f:	nop
  412680:	mov    rdi,r14
  412683:	mov    rsi,rbx
  412686:	mov    rdx,r13
  412689:	lea    rcx,[rsp+0x14]
  41268e:	lea    r8,[rsp+0x30]
  412693:	mov    r9,r12
  412696:	call   rbp
  412698:	cmp    rax,r13
  41269b:	je     412730 <main@@Base+0xb910>
  4126a1:	mov    rbp,rax
  4126a4:	cmp    rax,rbx
  4126a7:	jne    4126c0 <main@@Base+0xb8a0>
  4126a9:	mov    rbp,QWORD PTR [r15]
  4126ac:	add    r15,0x8
  4126b0:	test   rbp,rbp
  4126b3:	jne    412680 <main@@Base+0xb860>
  4126b5:	jmp    412735 <main@@Base+0xb915>
  4126b7:	nop    WORD PTR [rax+rax*1+0x0]
  4126c0:	mov    rax,QWORD PTR [rsp+0x30]
  4126c5:	cmp    DWORD PTR [rsp+0x14],0x0
  4126ca:	je     4126e0 <main@@Base+0xb8c0>
  4126cc:	cmp    rax,0x81
  4126d2:	mov    r15,QWORD PTR [rsp+0x18]
  4126d7:	jb     412706 <main@@Base+0xb8e6>
  4126d9:	mov    ecx,0x8
  4126de:	jmp    4126f2 <main@@Base+0xb8d2>
  4126e0:	cmp    rax,0x80
  4126e6:	mov    r15,QWORD PTR [rsp+0x18]
  4126eb:	jb     412709 <main@@Base+0xb8e9>
  4126ed:	mov    ecx,0x7
  4126f2:	mov    rdi,r14
  4126f5:	mov    rsi,rbp
  4126f8:	mov    rdx,r13
  4126fb:	call   423620 <flatcc_json_parser_set_error@@Base>
  412700:	mov    edx,DWORD PTR [rsp+0xc]
  412704:	jmp    41270e <main@@Base+0xb8ee>
  412706:	neg    rax
  412709:	mov    edx,eax
  41270b:	mov    rax,rbp
  41270e:	cmp    rax,r13
  412711:	mov    rcx,QWORD PTR [rsp+0x28]
  412716:	je     412730 <main@@Base+0xb910>
  412718:	mov    rbx,rbp
  41271b:	add    BYTE PTR [r15],dl
  41271e:	cmp    DWORD PTR [rsp+0x10],0x0
  412723:	mov    rax,QWORD PTR [rsp+0x20]
  412728:	jne    412675 <main@@Base+0xb855>
  41272e:	jmp    41274b <main@@Base+0xb92b>
  412730:	mov    rbp,r13
  412733:	jmp    41274b <main@@Base+0xb92b>
  412735:	mov    ecx,0x17
  41273a:	mov    rdi,r14
  41273d:	mov    rsi,rbx
  412740:	mov    rdx,r13
  412743:	call   423620 <flatcc_json_parser_set_error@@Base>
  412748:	mov    rbp,rax
  41274b:	mov    rax,rbp
  41274e:	add    rsp,0x38
  412752:	pop    rbx
  412753:	pop    r12
  412755:	pop    r13
  412757:	pop    r14
  412759:	pop    r15
  41275b:	pop    rbp
  41275c:	ret    
  41275d:	nop    DWORD PTR [rax]
  412760:	push   rbp
  412761:	push   r15
  412763:	push   r14
  412765:	push   r13
  412767:	push   r12
  412769:	push   rbx
  41276a:	sub    rsp,0x38
  41276e:	mov    r15,r8
  412771:	mov    rbp,rcx
  412774:	mov    r13,rdx
  412777:	mov    rbx,rsi
  41277a:	mov    r14,rdi
  41277d:	mov    BYTE PTR [r8],0x0
  412781:	cmp    rsi,rdx
  412784:	je     4127a7 <main@@Base+0xb987>
  412786:	cmp    BYTE PTR [rbx],0x22
  412789:	jne    412791 <main@@Base+0xb971>
  41278b:	add    rbx,0x1
  41278f:	jmp    4127a7 <main@@Base+0xb987>
  412791:	mov    ecx,0x5
  412796:	mov    rdi,r14
  412799:	mov    rsi,rbx
  41279c:	mov    rdx,r13
  41279f:	call   423620 <flatcc_json_parser_set_error@@Base>
  4127a4:	mov    rbx,rax
  4127a7:	mov    rax,r13
  4127aa:	sub    rax,rbx
  4127ad:	cmp    rax,0x2
  4127b1:	jl     4127ce <main@@Base+0xb9ae>
  4127b3:	cmp    BYTE PTR [rbx],0x20
  4127b6:	jg     4127df <main@@Base+0xb9bf>
  4127b8:	jne    4127ce <main@@Base+0xb9ae>
  4127ba:	cmp    BYTE PTR [rbx+0x1],0x20
  4127be:	jle    4127ce <main@@Base+0xb9ae>
  4127c0:	add    rbx,0x1
  4127c4:	cmp    rbx,r13
  4127c7:	jne    4127e8 <main@@Base+0xb9c8>
  4127c9:	jmp    4128d6 <main@@Base+0xbab6>
  4127ce:	mov    rdi,r14
  4127d1:	mov    rsi,rbx
  4127d4:	mov    rdx,r13
  4127d7:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4127dc:	mov    rbx,rax
  4127df:	cmp    rbx,r13
  4127e2:	je     4128d6 <main@@Base+0xbab6>
  4127e8:	lea    rcx,[rbp+0x8]
  4127ec:	mov    DWORD PTR [rsp+0xc],0x0
  4127f4:	mov    rax,rbp
  4127f7:	lea    r12,[rsp+0x18]
  4127fc:	mov    QWORD PTR [rsp+0x20],r15
  412801:	mov    QWORD PTR [rsp+0x28],rbp
  412806:	mov    QWORD PTR [rsp+0x10],rcx
  41280b:	mov    rbp,QWORD PTR [rax]
  41280e:	mov    r15,rcx
  412811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41281b:	nop    DWORD PTR [rax+rax*1+0x0]
  412820:	mov    rdi,r14
  412823:	mov    rsi,rbx
  412826:	mov    rdx,r13
  412829:	lea    rcx,[rsp+0x1c]
  41282e:	lea    r8,[rsp+0x30]
  412833:	mov    r9,r12
  412836:	call   rbp
  412838:	cmp    rax,r13
  41283b:	je     4128d6 <main@@Base+0xbab6>
  412841:	mov    rbp,rax
  412844:	cmp    rax,rbx
  412847:	jne    412860 <main@@Base+0xba40>
  412849:	mov    rbp,QWORD PTR [r15]
  41284c:	add    r15,0x8
  412850:	test   rbp,rbp
  412853:	jne    412820 <main@@Base+0xba00>
  412855:	jmp    4128db <main@@Base+0xbabb>
  41285a:	nop    WORD PTR [rax+rax*1+0x0]
  412860:	cmp    DWORD PTR [rsp+0x1c],0x0
  412865:	je     412881 <main@@Base+0xba61>
  412867:	mov    ecx,0x8
  41286c:	mov    rdi,r14
  41286f:	mov    rsi,rbp
  412872:	mov    rdx,r13
  412875:	call   423620 <flatcc_json_parser_set_error@@Base>
  41287a:	mov    r15,QWORD PTR [rsp+0x20]
  41287f:	jmp    4128b0 <main@@Base+0xba90>
  412881:	mov    rax,QWORD PTR [rsp+0x30]
  412886:	cmp    rax,0x100
  41288c:	mov    r15,QWORD PTR [rsp+0x20]
  412891:	jb     4128a8 <main@@Base+0xba88>
  412893:	mov    ecx,0x7
  412898:	mov    rdi,r14
  41289b:	mov    rsi,rbp
  41289e:	mov    rdx,r13
  4128a1:	call   423620 <flatcc_json_parser_set_error@@Base>
  4128a6:	jmp    4128b0 <main@@Base+0xba90>
  4128a8:	mov    DWORD PTR [rsp+0xc],eax
  4128ac:	mov    rax,rbp
  4128af:	nop
  4128b0:	mov    rcx,QWORD PTR [rsp+0x10]
  4128b5:	cmp    rax,r13
  4128b8:	je     4128d6 <main@@Base+0xbab6>
  4128ba:	mov    rbx,rbp
  4128bd:	mov    eax,DWORD PTR [rsp+0xc]
  4128c1:	add    BYTE PTR [r15],al
  4128c4:	cmp    DWORD PTR [rsp+0x18],0x0
  4128c9:	mov    rax,QWORD PTR [rsp+0x28]
  4128ce:	jne    41280b <main@@Base+0xb9eb>
  4128d4:	jmp    4128f1 <main@@Base+0xbad1>
  4128d6:	mov    rbp,r13
  4128d9:	jmp    4128f1 <main@@Base+0xbad1>
  4128db:	mov    ecx,0x17
  4128e0:	mov    rdi,r14
  4128e3:	mov    rsi,rbx
  4128e6:	mov    rdx,r13
  4128e9:	call   423620 <flatcc_json_parser_set_error@@Base>
  4128ee:	mov    rbp,rax
  4128f1:	mov    rax,rbp
  4128f4:	add    rsp,0x38
  4128f8:	pop    rbx
  4128f9:	pop    r12
  4128fb:	pop    r13
  4128fd:	pop    r14
  4128ff:	pop    r15
  412901:	pop    rbp
  412902:	ret    
  412903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41290d:	nop    DWORD PTR [rax]
  412910:	push   rbp
  412911:	push   r15
  412913:	push   r14
  412915:	push   r13
  412917:	push   r12
  412919:	push   rbx
  41291a:	sub    rsp,0x38
  41291e:	mov    r15,r8
  412921:	mov    rbp,rcx
  412924:	mov    r13,rdx
  412927:	mov    rbx,rsi
  41292a:	mov    r14,rdi
  41292d:	mov    WORD PTR [r8],0x0
  412933:	cmp    rsi,rdx
  412936:	je     412959 <main@@Base+0xbb39>
  412938:	cmp    BYTE PTR [rbx],0x22
  41293b:	jne    412943 <main@@Base+0xbb23>
  41293d:	add    rbx,0x1
  412941:	jmp    412959 <main@@Base+0xbb39>
  412943:	mov    ecx,0x5
  412948:	mov    rdi,r14
  41294b:	mov    rsi,rbx
  41294e:	mov    rdx,r13
  412951:	call   423620 <flatcc_json_parser_set_error@@Base>
  412956:	mov    rbx,rax
  412959:	mov    rax,r13
  41295c:	sub    rax,rbx
  41295f:	cmp    rax,0x2
  412963:	jl     412980 <main@@Base+0xbb60>
  412965:	cmp    BYTE PTR [rbx],0x20
  412968:	jg     412991 <main@@Base+0xbb71>
  41296a:	jne    412980 <main@@Base+0xbb60>
  41296c:	cmp    BYTE PTR [rbx+0x1],0x20
  412970:	jle    412980 <main@@Base+0xbb60>
  412972:	add    rbx,0x1
  412976:	cmp    rbx,r13
  412979:	jne    41299a <main@@Base+0xbb7a>
  41297b:	jmp    412a81 <main@@Base+0xbc61>
  412980:	mov    rdi,r14
  412983:	mov    rsi,rbx
  412986:	mov    rdx,r13
  412989:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41298e:	mov    rbx,rax
  412991:	cmp    rbx,r13
  412994:	je     412a81 <main@@Base+0xbc61>
  41299a:	lea    rcx,[rbp+0x8]
  41299e:	xor    edx,edx
  4129a0:	mov    rax,rbp
  4129a3:	lea    r12,[rsp+0x10]
  4129a8:	mov    QWORD PTR [rsp+0x18],r15
  4129ad:	mov    QWORD PTR [rsp+0x20],rbp
  4129b2:	mov    QWORD PTR [rsp+0x28],rcx
  4129b7:	mov    DWORD PTR [rsp+0xc],edx
  4129bb:	mov    rbp,QWORD PTR [rax]
  4129be:	mov    r15,rcx
  4129c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4129d0:	mov    rdi,r14
  4129d3:	mov    rsi,rbx
  4129d6:	mov    rdx,r13
  4129d9:	lea    rcx,[rsp+0x14]
  4129de:	lea    r8,[rsp+0x30]
  4129e3:	mov    r9,r12
  4129e6:	call   rbp
  4129e8:	cmp    rax,r13
  4129eb:	je     412a81 <main@@Base+0xbc61>
  4129f1:	mov    rbp,rax
  4129f4:	cmp    rax,rbx
  4129f7:	jne    412a10 <main@@Base+0xbbf0>
  4129f9:	mov    rbp,QWORD PTR [r15]
  4129fc:	add    r15,0x8
  412a00:	test   rbp,rbp
  412a03:	jne    4129d0 <main@@Base+0xbbb0>
  412a05:	jmp    412a86 <main@@Base+0xbc66>
  412a07:	nop    WORD PTR [rax+rax*1+0x0]
  412a10:	mov    rax,QWORD PTR [rsp+0x30]
  412a15:	cmp    DWORD PTR [rsp+0x14],0x0
  412a1a:	je     412a30 <main@@Base+0xbc10>
  412a1c:	cmp    rax,0x8001
  412a22:	mov    r15,QWORD PTR [rsp+0x18]
  412a27:	jb     412a56 <main@@Base+0xbc36>
  412a29:	mov    ecx,0x8
  412a2e:	jmp    412a42 <main@@Base+0xbc22>
  412a30:	cmp    rax,0x8000
  412a36:	mov    r15,QWORD PTR [rsp+0x18]
  412a3b:	jb     412a59 <main@@Base+0xbc39>
  412a3d:	mov    ecx,0x7
  412a42:	mov    rdi,r14
  412a45:	mov    rsi,rbp
  412a48:	mov    rdx,r13
  412a4b:	call   423620 <flatcc_json_parser_set_error@@Base>
  412a50:	mov    edx,DWORD PTR [rsp+0xc]
  412a54:	jmp    412a5e <main@@Base+0xbc3e>
  412a56:	neg    rax
  412a59:	mov    edx,eax
  412a5b:	mov    rax,rbp
  412a5e:	cmp    rax,r13
  412a61:	mov    rcx,QWORD PTR [rsp+0x28]
  412a66:	je     412a81 <main@@Base+0xbc61>
  412a68:	add    WORD PTR [r15],dx
  412a6c:	cmp    DWORD PTR [rsp+0x10],0x0
  412a71:	mov    rbx,rbp
  412a74:	mov    rax,QWORD PTR [rsp+0x20]
  412a79:	jne    4129b7 <main@@Base+0xbb97>
  412a7f:	jmp    412a9c <main@@Base+0xbc7c>
  412a81:	mov    rbp,r13
  412a84:	jmp    412a9c <main@@Base+0xbc7c>
  412a86:	mov    ecx,0x17
  412a8b:	mov    rdi,r14
  412a8e:	mov    rsi,rbx
  412a91:	mov    rdx,r13
  412a94:	call   423620 <flatcc_json_parser_set_error@@Base>
  412a99:	mov    rbp,rax
  412a9c:	mov    rax,rbp
  412a9f:	add    rsp,0x38
  412aa3:	pop    rbx
  412aa4:	pop    r12
  412aa6:	pop    r13
  412aa8:	pop    r14
  412aaa:	pop    r15
  412aac:	pop    rbp
  412aad:	ret    
  412aae:	xchg   ax,ax
  412ab0:	push   rbp
  412ab1:	push   r15
  412ab3:	push   r14
  412ab5:	push   r13
  412ab7:	push   r12
  412ab9:	push   rbx
  412aba:	sub    rsp,0x18
  412abe:	mov    r12,rdx
  412ac1:	mov    r14,rdi
  412ac4:	cmp    rsi,rdx
  412ac7:	je     412af7 <main@@Base+0xbcd7>
  412ac9:	cmp    BYTE PTR [rsi],0x7b
  412acc:	jne    412af7 <main@@Base+0xbcd7>
  412ace:	mov    r15,rcx
  412ad1:	lea    rax,[rsi+0x1]
  412ad5:	mov    rcx,r12
  412ad8:	sub    rcx,rax
  412adb:	cmp    rcx,0x2
  412adf:	jl     412b15 <main@@Base+0xbcf5>
  412ae1:	cmp    BYTE PTR [rax],0x20
  412ae4:	jg     412b23 <main@@Base+0xbd03>
  412ae6:	jne    412b15 <main@@Base+0xbcf5>
  412ae8:	cmp    BYTE PTR [rsi+0x2],0x20
  412aec:	jle    412b15 <main@@Base+0xbcf5>
  412aee:	add    rsi,0x2
  412af2:	mov    rax,rsi
  412af5:	jmp    412b23 <main@@Base+0xbd03>
  412af7:	mov    ecx,0x15
  412afc:	mov    rdi,r14
  412aff:	mov    rdx,r12
  412b02:	add    rsp,0x18
  412b06:	pop    rbx
  412b07:	pop    r12
  412b09:	pop    r13
  412b0b:	pop    r14
  412b0d:	pop    r15
  412b0f:	pop    rbp
  412b10:	jmp    423620 <flatcc_json_parser_set_error@@Base>
  412b15:	mov    rdi,r14
  412b18:	mov    rsi,rax
  412b1b:	mov    rdx,r12
  412b1e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  412b23:	mov    rsi,r12
  412b26:	cmp    rax,r12
  412b29:	je     412b74 <main@@Base+0xbd54>
  412b2b:	cmp    BYTE PTR [rax],0x7d
  412b2e:	jne    412b71 <main@@Base+0xbd51>
  412b30:	lea    rcx,[rax+0x1]
  412b34:	mov    rdx,r12
  412b37:	sub    rdx,rcx
  412b3a:	cmp    rdx,0x2
  412b3e:	jl     412b55 <main@@Base+0xbd35>
  412b40:	cmp    BYTE PTR [rcx],0x20
  412b43:	jg     413129 <main@@Base+0xc309>
  412b49:	jne    412b55 <main@@Base+0xbd35>
  412b4b:	cmp    BYTE PTR [rax+0x2],0x20
  412b4f:	jg     4130e9 <main@@Base+0xc2c9>
  412b55:	mov    rdi,r14
  412b58:	mov    rsi,rcx
  412b5b:	mov    rdx,r12
  412b5e:	add    rsp,0x18
  412b62:	pop    rbx
  412b63:	pop    r12
  412b65:	pop    r13
  412b67:	pop    r14
  412b69:	pop    r15
  412b6b:	pop    rbp
  412b6c:	jmp    4236b0 <flatcc_json_parser_space_ext@@Base>
  412b71:	mov    rsi,rax
  412b74:	movabs rbx,0xff00000000000000
  412b7e:	xchg   ax,ax
  412b80:	mov    r13,r12
  412b83:	cmp    rsi,r12
  412b86:	je     412bb3 <main@@Base+0xbd93>
  412b88:	cmp    BYTE PTR [rsi],0x22
  412b8b:	jne    412ba0 <main@@Base+0xbd80>
  412b8d:	add    rsi,0x1
  412b91:	mov    r13,rsi
  412b94:	jmp    412bb3 <main@@Base+0xbd93>
  412b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ba0:	mov    ecx,0x5
  412ba5:	mov    rdi,r14
  412ba8:	mov    rdx,r12
  412bab:	call   423620 <flatcc_json_parser_set_error@@Base>
  412bb0:	mov    r13,rax
  412bb3:	mov    rax,r12
  412bb6:	sub    rax,r13
  412bb9:	cmp    rax,0x8
  412bbd:	jb     412bd0 <main@@Base+0xbdb0>
  412bbf:	movbe  rcx,QWORD PTR [r13+0x0]
  412bc5:	jmp    412c63 <main@@Base+0xbe43>
  412bca:	nop    WORD PTR [rax+rax*1+0x0]
  412bd0:	mov    ecx,eax
  412bd2:	and    cl,0xf
  412bd5:	add    cl,0xff
  412bd8:	cmp    cl,0x7
  412bdb:	ja     412f70 <main@@Base+0xc150>
  412be1:	mov    r10,rbx
  412be4:	movzx  ecx,cl
  412be7:	lea    rdx,[rip+0x209b2]        # 4335a0 <_IO_stdin_used@@Base+0x5a0>
  412bee:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412bf2:	add    rcx,rdx
  412bf5:	xor    r8d,r8d
  412bf8:	xor    r9d,r9d
  412bfb:	xor    edx,edx
  412bfd:	xor    esi,esi
  412bff:	xor    ebp,ebp
  412c01:	xor    edi,edi
  412c03:	xor    ebx,ebx
  412c05:	jmp    rcx
  412c07:	movsx  r8,BYTE PTR [r13+0x7]
  412c0c:	movsx  r9,BYTE PTR [r13+0x6]
  412c11:	shl    r9,0x8
  412c15:	or     r9,r8
  412c18:	movsx  rdx,BYTE PTR [r13+0x5]
  412c1d:	shl    rdx,0x10
  412c21:	or     rdx,r9
  412c24:	movsx  rsi,BYTE PTR [r13+0x4]
  412c29:	shl    rsi,0x18
  412c2d:	or     rsi,rdx
  412c30:	movsx  rbp,BYTE PTR [r13+0x3]
  412c35:	shl    rbp,0x20
  412c39:	or     rbp,rsi
  412c3c:	movsx  rdi,BYTE PTR [r13+0x2]
  412c41:	shl    rdi,0x28
  412c45:	or     rdi,rbp
  412c48:	movsx  rbx,BYTE PTR [r13+0x1]
  412c4d:	shl    rbx,0x30
  412c51:	or     rbx,rdi
  412c54:	movzx  ecx,BYTE PTR [r13+0x0]
  412c59:	shl    rcx,0x38
  412c5d:	or     rcx,rbx
  412c60:	mov    rbx,r10
  412c63:	and    rcx,rbx
  412c66:	movabs rdx,0x6100000000000000
  412c70:	cmp    rcx,rdx
  412c73:	je     412cd0 <main@@Base+0xbeb0>
  412c75:	movabs rdx,0x6200000000000000
  412c7f:	cmp    rcx,rdx
  412c82:	jne    412f70 <main@@Base+0xc150>
  412c88:	mov    rbp,r13
  412c8b:	cmp    rax,0x2
  412c8f:	jl     412e15 <main@@Base+0xbff5>
  412c95:	cmp    BYTE PTR [r13+0x1],0x22
  412c9a:	mov    rbp,r13
  412c9d:	jne    412e15 <main@@Base+0xbff5>
  412ca3:	lea    rsi,[r13+0x2]
  412ca7:	mov    rax,r12
  412caa:	sub    rax,rsi
  412cad:	cmp    rax,0x2
  412cb1:	jl     412d1f <main@@Base+0xbeff>
  412cb3:	cmp    BYTE PTR [rsi],0x20
  412cb6:	jg     412d2d <main@@Base+0xbf0d>
  412cb8:	jne    412d1f <main@@Base+0xbeff>
  412cba:	cmp    BYTE PTR [r13+0x3],0x20
  412cbf:	jle    412d1f <main@@Base+0xbeff>
  412cc1:	lea    rsi,[r13+0x3]
  412cc5:	cmp    rsi,r12
  412cc8:	jne    412d36 <main@@Base+0xbf16>
  412cca:	jmp    412ddd <main@@Base+0xbfbd>
  412ccf:	nop
  412cd0:	mov    rbp,r13
  412cd3:	cmp    rax,0x2
  412cd7:	jl     412f06 <main@@Base+0xc0e6>
  412cdd:	cmp    BYTE PTR [r13+0x1],0x22
  412ce2:	mov    rbp,r13
  412ce5:	jne    412f06 <main@@Base+0xc0e6>
  412ceb:	lea    rsi,[r13+0x2]
  412cef:	mov    rax,r12
  412cf2:	sub    rax,rsi
  412cf5:	cmp    rax,0x2
  412cf9:	jl     412d82 <main@@Base+0xbf62>
  412cff:	cmp    BYTE PTR [rsi],0x20
  412d02:	jg     412d90 <main@@Base+0xbf70>
  412d08:	jne    412d82 <main@@Base+0xbf62>
  412d0a:	cmp    BYTE PTR [r13+0x3],0x20
  412d0f:	jle    412d82 <main@@Base+0xbf62>
  412d11:	lea    rsi,[r13+0x3]
  412d15:	cmp    rsi,r12
  412d18:	jne    412d95 <main@@Base+0xbf75>
  412d1a:	jmp    412def <main@@Base+0xbfcf>
  412d1f:	mov    rdi,r14
  412d22:	mov    rdx,r12
  412d25:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  412d2a:	mov    rsi,rax
  412d2d:	cmp    rsi,r12
  412d30:	je     412ddd <main@@Base+0xbfbd>
  412d36:	cmp    BYTE PTR [rsi],0x3a
  412d39:	jne    412ddd <main@@Base+0xbfbd>
  412d3f:	lea    rbp,[rsi+0x1]
  412d43:	mov    rax,r12
  412d46:	sub    rax,rbp
  412d49:	cmp    rax,0x2
  412d4d:	jl     412e04 <main@@Base+0xbfe4>
  412d53:	cmp    BYTE PTR [rbp+0x0],0x20
  412d57:	jg     412e15 <main@@Base+0xbff5>
  412d5d:	jne    412e04 <main@@Base+0xbfe4>
  412d63:	cmp    BYTE PTR [rsi+0x2],0x20
  412d67:	jle    412e04 <main@@Base+0xbfe4>
  412d6d:	add    rsi,0x2
  412d71:	mov    rbp,rsi
  412d74:	cmp    r13,rbp
  412d77:	jne    412e1e <main@@Base+0xbffe>
  412d7d:	jmp    412f70 <main@@Base+0xc150>
  412d82:	mov    rdi,r14
  412d85:	mov    rdx,r12
  412d88:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  412d8d:	mov    rsi,rax
  412d90:	cmp    rsi,r12
  412d93:	je     412def <main@@Base+0xbfcf>
  412d95:	cmp    BYTE PTR [rsi],0x3a
  412d98:	jne    412def <main@@Base+0xbfcf>
  412d9a:	lea    rbp,[rsi+0x1]
  412d9e:	mov    rax,r12
  412da1:	sub    rax,rbp
  412da4:	cmp    rax,0x2
  412da8:	jl     412ef5 <main@@Base+0xc0d5>
  412dae:	cmp    BYTE PTR [rbp+0x0],0x20
  412db2:	jg     412f06 <main@@Base+0xc0e6>
  412db8:	jne    412ef5 <main@@Base+0xc0d5>
  412dbe:	cmp    BYTE PTR [rsi+0x2],0x20
  412dc2:	jle    412ef5 <main@@Base+0xc0d5>
  412dc8:	add    rsi,0x2
  412dcc:	mov    rbp,rsi
  412dcf:	cmp    r13,rbp
  412dd2:	jne    412f0b <main@@Base+0xc0eb>
  412dd8:	jmp    412f70 <main@@Base+0xc150>
  412ddd:	mov    ecx,0x4
  412de2:	mov    rdi,r14
  412de5:	mov    rdx,r12
  412de8:	call   423620 <flatcc_json_parser_set_error@@Base>
  412ded:	jmp    412e12 <main@@Base+0xbff2>
  412def:	mov    ecx,0x4
  412df4:	mov    rdi,r14
  412df7:	mov    rdx,r12
  412dfa:	call   423620 <flatcc_json_parser_set_error@@Base>
  412dff:	jmp    412f03 <main@@Base+0xc0e3>
  412e04:	mov    rdi,r14
  412e07:	mov    rsi,rbp
  412e0a:	mov    rdx,r12
  412e0d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  412e12:	mov    rbp,rax
  412e15:	cmp    r13,rbp
  412e18:	je     412f70 <main@@Base+0xc150>
  412e1e:	mov    QWORD PTR [rsp+0x10],0x0
  412e27:	mov    DWORD PTR [rsp+0xc],0x0
  412e2f:	mov    BYTE PTR [rsp+0xa],0x0
  412e34:	cmp    rbp,r12
  412e37:	je     412e72 <main@@Base+0xc052>
  412e39:	mov    rdi,r14
  412e3c:	mov    rsi,rbp
  412e3f:	mov    rdx,r12
  412e42:	lea    rcx,[rsp+0xc]
  412e47:	lea    r8,[rsp+0x10]
  412e4c:	call   425160 <flatcc_json_parser_integer@@Base>
  412e51:	cmp    rax,rbp
  412e54:	je     412e7e <main@@Base+0xc05e>
  412e56:	mov    rcx,QWORD PTR [rsp+0x10]
  412e5b:	cmp    DWORD PTR [rsp+0xc],0x0
  412e60:	je     412e8a <main@@Base+0xc06a>
  412e62:	cmp    rcx,0x81
  412e69:	jb     412eaf <main@@Base+0xc08f>
  412e6b:	mov    ecx,0x8
  412e70:	jmp    412e98 <main@@Base+0xc078>
  412e72:	xor    ecx,ecx
  412e74:	mov    rax,r12
  412e77:	cmp    rbp,rax
  412e7a:	jne    412eec <main@@Base+0xc0cc>
  412e7c:	jmp    412ebb <main@@Base+0xc09b>
  412e7e:	xor    ecx,ecx
  412e80:	mov    rax,rbp
  412e83:	cmp    rbp,rax
  412e86:	jne    412eec <main@@Base+0xc0cc>
  412e88:	jmp    412ebb <main@@Base+0xc09b>
  412e8a:	cmp    rcx,0x80
  412e91:	jb     412eb2 <main@@Base+0xc092>
  412e93:	mov    ecx,0x7
  412e98:	mov    rdi,r14
  412e9b:	mov    rsi,rax
  412e9e:	mov    rdx,r12
  412ea1:	call   423620 <flatcc_json_parser_set_error@@Base>
  412ea6:	xor    ecx,ecx
  412ea8:	cmp    rbp,rax
  412eab:	jne    412eec <main@@Base+0xc0cc>
  412ead:	jmp    412ebb <main@@Base+0xc09b>
  412eaf:	neg    rcx
  412eb2:	mov    BYTE PTR [rsp+0xa],cl
  412eb6:	cmp    rbp,rax
  412eb9:	jne    412eec <main@@Base+0xc0cc>
  412ebb:	mov    rdi,r14
  412ebe:	mov    rsi,rbp
  412ec1:	mov    rdx,r12
  412ec4:	lea    rcx,[rip+0x2e555]        # 441420 <__data_start@@Base+0x370>
  412ecb:	lea    r8,[rsp+0xa]
  412ed0:	call   4125d0 <main@@Base+0xb7b0>
  412ed5:	cmp    rax,rbp
  412ed8:	je     413113 <main@@Base+0xc2f3>
  412ede:	cmp    rax,r12
  412ee1:	je     413113 <main@@Base+0xc2f3>
  412ee7:	movzx  ecx,BYTE PTR [rsp+0xa]
  412eec:	mov    BYTE PTR [r15+0x2],cl
  412ef0:	jmp    413010 <main@@Base+0xc1f0>
  412ef5:	mov    rdi,r14
  412ef8:	mov    rsi,rbp
  412efb:	mov    rdx,r12
  412efe:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  412f03:	mov    rbp,rax
  412f06:	cmp    r13,rbp
  412f09:	je     412f70 <main@@Base+0xc150>
  412f0b:	mov    QWORD PTR [rsp+0x10],0x0
  412f14:	mov    DWORD PTR [rsp+0xc],0x0
  412f1c:	mov    WORD PTR [rsp+0xa],0x0
  412f23:	cmp    rbp,r12
  412f26:	je     412f83 <main@@Base+0xc163>
  412f28:	mov    rdi,r14
  412f2b:	mov    rsi,rbp
  412f2e:	mov    rdx,r12
  412f31:	lea    rcx,[rsp+0xc]
  412f36:	lea    r8,[rsp+0x10]
  412f3b:	call   425160 <flatcc_json_parser_integer@@Base>
  412f40:	cmp    rax,rbp
  412f43:	je     412f8f <main@@Base+0xc16f>
  412f45:	mov    rcx,QWORD PTR [rsp+0x10]
  412f4a:	cmp    DWORD PTR [rsp+0xc],0x0
  412f4f:	je     412f9b <main@@Base+0xc17b>
  412f51:	cmp    rcx,0x8001
  412f58:	jb     412fc0 <main@@Base+0xc1a0>
  412f5a:	mov    ecx,0x8
  412f5f:	jmp    412fa9 <main@@Base+0xc189>
  412f61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  412f70:	mov    rdi,r14
  412f73:	mov    rsi,r13
  412f76:	mov    rdx,r12
  412f79:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  412f7e:	jmp    413010 <main@@Base+0xc1f0>
  412f83:	xor    ecx,ecx
  412f85:	mov    rax,r12
  412f88:	cmp    rbp,rax
  412f8b:	jne    412ffe <main@@Base+0xc1de>
  412f8d:	jmp    412fcd <main@@Base+0xc1ad>
  412f8f:	xor    ecx,ecx
  412f91:	mov    rax,rbp
  412f94:	cmp    rbp,rax
  412f97:	jne    412ffe <main@@Base+0xc1de>
  412f99:	jmp    412fcd <main@@Base+0xc1ad>
  412f9b:	cmp    rcx,0x8000
  412fa2:	jb     412fc3 <main@@Base+0xc1a3>
  412fa4:	mov    ecx,0x7
  412fa9:	mov    rdi,r14
  412fac:	mov    rsi,rax
  412faf:	mov    rdx,r12
  412fb2:	call   423620 <flatcc_json_parser_set_error@@Base>
  412fb7:	xor    ecx,ecx
  412fb9:	cmp    rbp,rax
  412fbc:	jne    412ffe <main@@Base+0xc1de>
  412fbe:	jmp    412fcd <main@@Base+0xc1ad>
  412fc0:	neg    rcx
  412fc3:	mov    WORD PTR [rsp+0xa],cx
  412fc8:	cmp    rbp,rax
  412fcb:	jne    412ffe <main@@Base+0xc1de>
  412fcd:	mov    rdi,r14
  412fd0:	mov    rsi,rbp
  412fd3:	mov    rdx,r12
  412fd6:	lea    rcx,[rip+0x2e463]        # 441440 <__data_start@@Base+0x390>
  412fdd:	lea    r8,[rsp+0xa]
  412fe2:	call   412910 <main@@Base+0xbaf0>
  412fe7:	cmp    rax,rbp
  412fea:	je     413113 <main@@Base+0xc2f3>
  412ff0:	cmp    rax,r12
  412ff3:	je     413113 <main@@Base+0xc2f3>
  412ff9:	movzx  ecx,WORD PTR [rsp+0xa]
  412ffe:	mov    WORD PTR [r15],cx
  413002:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41300c:	nop    DWORD PTR [rax+0x0]
  413010:	mov    rcx,r12
  413013:	sub    rcx,rax
  413016:	cmp    rcx,0x2
  41301a:	jl     413040 <main@@Base+0xc220>
  41301c:	cmp    BYTE PTR [rax],0x20
  41301f:	jg     41304e <main@@Base+0xc22e>
  413021:	jne    413040 <main@@Base+0xc220>
  413023:	cmp    BYTE PTR [rax+0x1],0x20
  413027:	jle    413040 <main@@Base+0xc220>
  413029:	add    rax,0x1
  41302d:	cmp    rax,r12
  413030:	jne    413053 <main@@Base+0xc233>
  413032:	jmp    4130c2 <main@@Base+0xc2a2>
  413037:	nop    WORD PTR [rax+rax*1+0x0]
  413040:	mov    rdi,r14
  413043:	mov    rsi,rax
  413046:	mov    rdx,r12
  413049:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41304e:	cmp    rax,r12
  413051:	je     4130c2 <main@@Base+0xc2a2>
  413053:	movzx  ecx,BYTE PTR [rax]
  413056:	cmp    cl,0x2c
  413059:	jne    4130c7 <main@@Base+0xc2a7>
  41305b:	lea    rsi,[rax+0x1]
  41305f:	mov    rcx,r12
  413062:	sub    rcx,rsi
  413065:	cmp    rcx,0x2
  413069:	jl     413080 <main@@Base+0xc260>
  41306b:	cmp    BYTE PTR [rsi],0x20
  41306e:	jg     41308e <main@@Base+0xc26e>
  413070:	jne    413080 <main@@Base+0xc260>
  413072:	cmp    BYTE PTR [rax+0x2],0x20
  413076:	jle    413080 <main@@Base+0xc260>
  413078:	add    rax,0x2
  41307c:	jmp    41308b <main@@Base+0xc26b>
  41307e:	xchg   ax,ax
  413080:	mov    rdi,r14
  413083:	mov    rdx,r12
  413086:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41308b:	mov    rsi,rax
  41308e:	cmp    rsi,r12
  413091:	je     4130ff <main@@Base+0xc2df>
  413093:	cmp    BYTE PTR [rsi],0x7d
  413096:	jne    412b80 <main@@Base+0xbd60>
  41309c:	lea    rcx,[rsi+0x1]
  4130a0:	mov    rax,r12
  4130a3:	sub    rax,rcx
  4130a6:	cmp    rax,0x2
  4130aa:	jl     4130ef <main@@Base+0xc2cf>
  4130ac:	cmp    BYTE PTR [rcx],0x20
  4130af:	jg     413129 <main@@Base+0xc309>
  4130b1:	jne    4130ef <main@@Base+0xc2cf>
  4130b3:	cmp    BYTE PTR [rsi+0x2],0x20
  4130b7:	jle    4130ef <main@@Base+0xc2cf>
  4130b9:	add    rsi,0x2
  4130bd:	mov    rcx,rsi
  4130c0:	jmp    413129 <main@@Base+0xc309>
  4130c2:	mov    rcx,r12
  4130c5:	jmp    413129 <main@@Base+0xc309>
  4130c7:	cmp    cl,0x7d
  4130ca:	jne    41310c <main@@Base+0xc2ec>
  4130cc:	lea    rcx,[rax+0x1]
  4130d0:	mov    rdx,r12
  4130d3:	sub    rdx,rcx
  4130d6:	cmp    rdx,0x2
  4130da:	jl     4130ef <main@@Base+0xc2cf>
  4130dc:	cmp    BYTE PTR [rcx],0x20
  4130df:	jg     413129 <main@@Base+0xc309>
  4130e1:	jne    4130ef <main@@Base+0xc2cf>
  4130e3:	cmp    BYTE PTR [rax+0x2],0x20
  4130e7:	jle    4130ef <main@@Base+0xc2cf>
  4130e9:	add    rax,0x2
  4130ed:	jmp    413126 <main@@Base+0xc306>
  4130ef:	mov    rdi,r14
  4130f2:	mov    rsi,rcx
  4130f5:	mov    rdx,r12
  4130f8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4130fd:	jmp    413126 <main@@Base+0xc306>
  4130ff:	mov    ecx,0xa
  413104:	mov    rdi,r14
  413107:	mov    rsi,r12
  41310a:	jmp    41311e <main@@Base+0xc2fe>
  41310c:	mov    ecx,0xa
  413111:	jmp    413118 <main@@Base+0xc2f8>
  413113:	mov    ecx,0x21
  413118:	mov    rdi,r14
  41311b:	mov    rsi,rax
  41311e:	mov    rdx,r12
  413121:	call   423620 <flatcc_json_parser_set_error@@Base>
  413126:	mov    rcx,rax
  413129:	mov    rax,rcx
  41312c:	add    rsp,0x18
  413130:	pop    rbx
  413131:	pop    r12
  413133:	pop    r13
  413135:	pop    r14
  413137:	pop    r15
  413139:	pop    rbp
  41313a:	ret    
  41313b:	nop    DWORD PTR [rax+rax*1+0x0]
  413140:	push   rbp
  413141:	push   r15
  413143:	push   r14
  413145:	push   r13
  413147:	push   r12
  413149:	push   rbx
  41314a:	sub    rsp,0x28
  41314e:	mov    r12,rdx
  413151:	mov    rbp,rsi
  413154:	mov    r14,rdi
  413157:	mov    DWORD PTR [r8],0x0
  41315e:	cmp    cl,0x4
  413161:	ja     413198 <main@@Base+0xc378>
  413163:	mov    rbx,r8
  413166:	mov    eax,ecx
  413168:	lea    rcx,[rip+0x20451]        # 4335c0 <_IO_stdin_used@@Base+0x5c0>
  41316f:	movsxd rax,DWORD PTR [rcx+rax*4]
  413173:	add    rax,rcx
  413176:	jmp    rax
  413178:	mov    rax,r12
  41317b:	sub    rax,rbp
  41317e:	cmp    rax,0x4
  413182:	jl     413191 <main@@Base+0xc371>
  413184:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  41318b:	je     413323 <main@@Base+0xc503>
  413191:	mov    ecx,0x1a
  413196:	jmp    4131a8 <main@@Base+0xc388>
  413198:	test   BYTE PTR [r14+0x10],0x1
  41319d:	jne    413307 <main@@Base+0xc4e7>
  4131a3:	mov    ecx,0xf
  4131a8:	mov    rdi,r14
  4131ab:	mov    rsi,rbp
  4131ae:	mov    rdx,r12
  4131b1:	add    rsp,0x28
  4131b5:	pop    rbx
  4131b6:	pop    r12
  4131b8:	pop    r13
  4131ba:	pop    r14
  4131bc:	pop    r15
  4131be:	pop    rbp
  4131bf:	jmp    423620 <flatcc_json_parser_set_error@@Base>
  4131c4:	mov    rdi,r14
  4131c7:	mov    rsi,rbp
  4131ca:	mov    rdx,r12
  4131cd:	mov    rcx,rbx
  4131d0:	call   4074d0 <main@@Base+0x6b0>
  4131d5:	jmp    4132e0 <main@@Base+0xc4c0>
  4131da:	mov    DWORD PTR [rbx],0x0
  4131e0:	mov    rdi,QWORD PTR [r14]
  4131e3:	mov    esi,0x4
  4131e8:	call   41eb00 <flatcc_builder_start_table@@Base>
  4131ed:	test   eax,eax
  4131ef:	jne    4132cd <main@@Base+0xc4ad>
  4131f5:	cmp    rbp,r12
  4131f8:	je     4132ac <main@@Base+0xc48c>
  4131fe:	cmp    BYTE PTR [rbp+0x0],0x7b
  413202:	jne    4132ac <main@@Base+0xc48c>
  413208:	lea    rax,[rbp+0x1]
  41320c:	mov    rcx,r12
  41320f:	sub    rcx,rax
  413212:	cmp    rcx,0x2
  413216:	jl     413339 <main@@Base+0xc519>
  41321c:	cmp    BYTE PTR [rax],0x20
  41321f:	jg     413347 <main@@Base+0xc527>
  413225:	jne    413339 <main@@Base+0xc519>
  41322b:	cmp    BYTE PTR [rbp+0x2],0x20
  41322f:	jle    413339 <main@@Base+0xc519>
  413235:	add    rbp,0x2
  413239:	mov    rax,rbp
  41323c:	jmp    413347 <main@@Base+0xc527>
  413241:	mov    DWORD PTR [rbx],0x0
  413247:	mov    rdi,QWORD PTR [r14]
  41324a:	xor    esi,esi
  41324c:	call   41eb00 <flatcc_builder_start_table@@Base>
  413251:	test   eax,eax
  413253:	jne    4132cd <main@@Base+0xc4ad>
  413255:	cmp    rbp,r12
  413258:	je     4132ac <main@@Base+0xc48c>
  41325a:	cmp    BYTE PTR [rbp+0x0],0x7b
  41325e:	jne    4132ac <main@@Base+0xc48c>
  413260:	lea    rax,[rbp+0x1]
  413264:	mov    rcx,r12
  413267:	sub    rcx,rax
  41326a:	cmp    rcx,0x2
  41326e:	jl     413385 <main@@Base+0xc565>
  413274:	cmp    BYTE PTR [rax],0x20
  413277:	jg     413393 <main@@Base+0xc573>
  41327d:	jne    413385 <main@@Base+0xc565>
  413283:	cmp    BYTE PTR [rbp+0x2],0x20
  413287:	jle    413385 <main@@Base+0xc565>
  41328d:	add    rbp,0x2
  413291:	mov    rax,rbp
  413294:	jmp    413393 <main@@Base+0xc573>
  413299:	mov    rdi,r14
  41329c:	mov    rsi,rbp
  41329f:	mov    rdx,r12
  4132a2:	mov    rcx,rbx
  4132a5:	call   415680 <main@@Base+0xe860>
  4132aa:	jmp    4132e0 <main@@Base+0xc4c0>
  4132ac:	mov    ecx,0x15
  4132b1:	mov    rdi,r14
  4132b4:	mov    rsi,rbp
  4132b7:	mov    rdx,r12
  4132ba:	call   423620 <flatcc_json_parser_set_error@@Base>
  4132bf:	mov    rbp,rax
  4132c2:	cmp    DWORD PTR [r14+0x1c],0x0
  4132c7:	je     413daf <main@@Base+0xcf8f>
  4132cd:	mov    ecx,0x21
  4132d2:	mov    rdi,r14
  4132d5:	mov    rsi,rbp
  4132d8:	mov    rdx,r12
  4132db:	call   423620 <flatcc_json_parser_set_error@@Base>
  4132e0:	mov    rbp,rax
  4132e3:	cmp    DWORD PTR [r14+0x1c],0x0
  4132e8:	jne    413327 <main@@Base+0xc507>
  4132ea:	cmp    DWORD PTR [rbx],0x0
  4132ed:	jne    413327 <main@@Base+0xc507>
  4132ef:	mov    ecx,0x21
  4132f4:	mov    rdi,r14
  4132f7:	mov    rsi,rbp
  4132fa:	mov    rdx,r12
  4132fd:	call   423620 <flatcc_json_parser_set_error@@Base>
  413302:	mov    rbp,rax
  413305:	jmp    413327 <main@@Base+0xc507>
  413307:	mov    rdi,r14
  41330a:	mov    rsi,rbp
  41330d:	mov    rdx,r12
  413310:	add    rsp,0x28
  413314:	pop    rbx
  413315:	pop    r12
  413317:	pop    r13
  413319:	pop    r14
  41331b:	pop    r15
  41331d:	pop    rbp
  41331e:	jmp    423cd0 <flatcc_json_parser_generic_json@@Base>
  413323:	add    rbp,0x4
  413327:	mov    rax,rbp
  41332a:	add    rsp,0x28
  41332e:	pop    rbx
  41332f:	pop    r12
  413331:	pop    r13
  413333:	pop    r14
  413335:	pop    r15
  413337:	pop    rbp
  413338:	ret    
  413339:	mov    rdi,r14
  41333c:	mov    rsi,rax
  41333f:	mov    rdx,r12
  413342:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413347:	mov    rsi,r12
  41334a:	cmp    rax,r12
  41334d:	je     413470 <main@@Base+0xc650>
  413353:	cmp    BYTE PTR [rax],0x7d
  413356:	jne    41346d <main@@Base+0xc64d>
  41335c:	lea    rbp,[rax+0x1]
  413360:	mov    rcx,r12
  413363:	sub    rcx,rbp
  413366:	cmp    rcx,0x2
  41336a:	jl     413e8a <main@@Base+0xd06a>
  413370:	cmp    BYTE PTR [rbp+0x0],0x20
  413374:	jg     4132c2 <main@@Base+0xc4a2>
  41337a:	jne    413e8a <main@@Base+0xd06a>
  413380:	jmp    413e3d <main@@Base+0xd01d>
  413385:	mov    rdi,r14
  413388:	mov    rsi,rax
  41338b:	mov    rdx,r12
  41338e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413393:	mov    rsi,r12
  413396:	cmp    rax,r12
  413399:	je     4133a7 <main@@Base+0xc587>
  41339b:	cmp    BYTE PTR [rax],0x7d
  41339e:	je     413e21 <main@@Base+0xd001>
  4133a4:	mov    rsi,rax
  4133a7:	mov    rax,r12
  4133aa:	cmp    rsi,r12
  4133ad:	je     4133cd <main@@Base+0xc5ad>
  4133af:	cmp    BYTE PTR [rsi],0x22
  4133b2:	jne    4133bd <main@@Base+0xc59d>
  4133b4:	add    rsi,0x1
  4133b8:	mov    rax,rsi
  4133bb:	jmp    4133cd <main@@Base+0xc5ad>
  4133bd:	mov    ecx,0x5
  4133c2:	mov    rdi,r14
  4133c5:	mov    rdx,r12
  4133c8:	call   423620 <flatcc_json_parser_set_error@@Base>
  4133cd:	mov    rdi,r14
  4133d0:	mov    rsi,rax
  4133d3:	mov    rdx,r12
  4133d6:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  4133db:	mov    rcx,r12
  4133de:	sub    rcx,rax
  4133e1:	cmp    rcx,0x2
  4133e5:	jl     413402 <main@@Base+0xc5e2>
  4133e7:	cmp    BYTE PTR [rax],0x20
  4133ea:	jg     413410 <main@@Base+0xc5f0>
  4133ec:	jne    413402 <main@@Base+0xc5e2>
  4133ee:	cmp    BYTE PTR [rax+0x1],0x20
  4133f2:	jle    413402 <main@@Base+0xc5e2>
  4133f4:	add    rax,0x1
  4133f8:	cmp    rax,r12
  4133fb:	jne    413419 <main@@Base+0xc5f9>
  4133fd:	jmp    413da1 <main@@Base+0xcf81>
  413402:	mov    rdi,r14
  413405:	mov    rsi,rax
  413408:	mov    rdx,r12
  41340b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413410:	cmp    rax,r12
  413413:	je     413da1 <main@@Base+0xcf81>
  413419:	movzx  ecx,BYTE PTR [rax]
  41341c:	cmp    cl,0x2c
  41341f:	jne    413e18 <main@@Base+0xcff8>
  413425:	lea    rsi,[rax+0x1]
  413429:	mov    rcx,r12
  41342c:	sub    rcx,rsi
  41342f:	cmp    rcx,0x2
  413433:	jl     413448 <main@@Base+0xc628>
  413435:	cmp    BYTE PTR [rsi],0x20
  413438:	jg     413456 <main@@Base+0xc636>
  41343a:	jne    413448 <main@@Base+0xc628>
  41343c:	cmp    BYTE PTR [rax+0x2],0x20
  413440:	jle    413448 <main@@Base+0xc628>
  413442:	add    rax,0x2
  413446:	jmp    413453 <main@@Base+0xc633>
  413448:	mov    rdi,r14
  41344b:	mov    rdx,r12
  41344e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413453:	mov    rsi,rax
  413456:	cmp    rsi,r12
  413459:	je     413dc6 <main@@Base+0xcfa6>
  41345f:	cmp    BYTE PTR [rsi],0x7d
  413462:	jne    4133a7 <main@@Base+0xc587>
  413468:	jmp    413dd6 <main@@Base+0xcfb6>
  41346d:	mov    rsi,rax
  413470:	movabs rax,0x636f6c6f72000000
  41347a:	lea    rax,[rax+0x320000]
  413481:	mov    QWORD PTR [rsp+0x20],rax
  413486:	mov    r10,r12
  413489:	cmp    rsi,r12
  41348c:	je     4134af <main@@Base+0xc68f>
  41348e:	cmp    BYTE PTR [rsi],0x22
  413491:	jne    41349c <main@@Base+0xc67c>
  413493:	add    rsi,0x1
  413497:	mov    r10,rsi
  41349a:	jmp    4134af <main@@Base+0xc68f>
  41349c:	mov    ecx,0x5
  4134a1:	mov    rdi,r14
  4134a4:	mov    rdx,r12
  4134a7:	call   423620 <flatcc_json_parser_set_error@@Base>
  4134ac:	mov    r10,rax
  4134af:	mov    r13,r12
  4134b2:	sub    r13,r10
  4134b5:	cmp    r13,0x8
  4134b9:	jb     4134c5 <main@@Base+0xc6a5>
  4134bb:	movbe  r15,QWORD PTR [r10]
  4134c0:	jmp    413554 <main@@Base+0xc734>
  4134c5:	mov    eax,r13d
  4134c8:	and    al,0xf
  4134ca:	add    al,0xff
  4134cc:	cmp    al,0x7
  4134ce:	ja     413c32 <main@@Base+0xce12>
  4134d4:	mov    r9,rbx
  4134d7:	movzx  eax,al
  4134da:	lea    rcx,[rip+0x200f3]        # 4335d4 <_IO_stdin_used@@Base+0x5d4>
  4134e1:	movsxd rbx,DWORD PTR [rcx+rax*4]
  4134e5:	add    rbx,rcx
  4134e8:	xor    r8d,r8d
  4134eb:	xor    eax,eax
  4134ed:	xor    ecx,ecx
  4134ef:	xor    edx,edx
  4134f1:	xor    edi,edi
  4134f3:	xor    ebp,ebp
  4134f5:	xor    esi,esi
  4134f7:	jmp    rbx
  4134f9:	movsx  r8,BYTE PTR [r10+0x7]
  4134fe:	movsx  rax,BYTE PTR [r10+0x6]
  413503:	shl    rax,0x8
  413507:	or     rax,r8
  41350a:	movsx  rcx,BYTE PTR [r10+0x5]
  41350f:	shl    rcx,0x10
  413513:	or     rcx,rax
  413516:	movsx  rdx,BYTE PTR [r10+0x4]
  41351b:	shl    rdx,0x18
  41351f:	or     rdx,rcx
  413522:	movsx  rdi,BYTE PTR [r10+0x3]
  413527:	shl    rdi,0x20
  41352b:	or     rdi,rdx
  41352e:	movsx  rbp,BYTE PTR [r10+0x2]
  413533:	shl    rbp,0x28
  413537:	or     rbp,rdi
  41353a:	movsx  rsi,BYTE PTR [r10+0x1]
  41353f:	shl    rsi,0x30
  413543:	or     rsi,rbp
  413546:	movzx  r15d,BYTE PTR [r10]
  41354a:	shl    r15,0x38
  41354e:	or     r15,rsi
  413551:	mov    rbx,r9
  413554:	mov    rax,r15
  413557:	and    rax,0xffffffffffff0000
  41355d:	cmp    rax,QWORD PTR [rsp+0x20]
  413562:	jne    4135c4 <main@@Base+0xc7a4>
  413564:	mov    rbp,r10
  413567:	cmp    r13,0x7
  41356b:	jl     413715 <main@@Base+0xc8f5>
  413571:	cmp    BYTE PTR [r10+0x6],0x22
  413576:	mov    rbp,r10
  413579:	jne    413715 <main@@Base+0xc8f5>
  41357f:	lea    rsi,[r10+0x7]
  413583:	mov    rax,r12
  413586:	sub    rax,rsi
  413589:	cmp    rax,0x2
  41358d:	mov    QWORD PTR [rsp+0x18],r10
  413592:	jl     413634 <main@@Base+0xc814>
  413598:	cmp    BYTE PTR [rsi],0x20
  41359b:	jg     413642 <main@@Base+0xc822>
  4135a1:	jne    413634 <main@@Base+0xc814>
  4135a7:	cmp    BYTE PTR [r10+0x8],0x20
  4135ac:	jle    413634 <main@@Base+0xc814>
  4135b2:	lea    rsi,[r10+0x8]
  4135b6:	cmp    rsi,r12
  4135b9:	jne    413647 <main@@Base+0xc827>
  4135bf:	jmp    413686 <main@@Base+0xc866>
  4135c4:	mov    rax,r15
  4135c7:	and    rax,0xffffffffff000000
  4135cd:	movabs rcx,0x636f6c6f72000000
  4135d7:	cmp    rax,rcx
  4135da:	jne    41389d <main@@Base+0xca7d>
  4135e0:	mov    rbp,r10
  4135e3:	cmp    r13,0x6
  4135e7:	jl     41382e <main@@Base+0xca0e>
  4135ed:	cmp    BYTE PTR [r10+0x5],0x22
  4135f2:	mov    rbp,r10
  4135f5:	jne    41382e <main@@Base+0xca0e>
  4135fb:	lea    rsi,[r10+0x6]
  4135ff:	mov    rax,r12
  413602:	sub    rax,rsi
  413605:	cmp    rax,0x2
  413609:	mov    QWORD PTR [rsp+0x18],r10
  41360e:	jl     413698 <main@@Base+0xc878>
  413614:	cmp    BYTE PTR [rsi],0x20
  413617:	jg     4136a6 <main@@Base+0xc886>
  41361d:	jne    413698 <main@@Base+0xc878>
  41361f:	cmp    BYTE PTR [r10+0x7],0x20
  413624:	jle    413698 <main@@Base+0xc878>
  413626:	lea    rsi,[r10+0x7]
  41362a:	cmp    rsi,r12
  41362d:	jne    4136ab <main@@Base+0xc88b>
  41362f:	jmp    4136ea <main@@Base+0xc8ca>
  413634:	mov    rdi,r14
  413637:	mov    rdx,r12
  41363a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41363f:	mov    rsi,rax
  413642:	cmp    rsi,r12
  413645:	je     413686 <main@@Base+0xc866>
  413647:	cmp    BYTE PTR [rsi],0x3a
  41364a:	jne    413686 <main@@Base+0xc866>
  41364c:	lea    rbp,[rsi+0x1]
  413650:	mov    rax,r12
  413653:	sub    rax,rbp
  413656:	cmp    rax,0x2
  41365a:	jl     4136ff <main@@Base+0xc8df>
  413660:	cmp    BYTE PTR [rbp+0x0],0x20
  413664:	jg     413710 <main@@Base+0xc8f0>
  41366a:	jne    4136ff <main@@Base+0xc8df>
  413670:	cmp    BYTE PTR [rsi+0x2],0x20
  413674:	jle    4136ff <main@@Base+0xc8df>
  41367a:	add    rsi,0x2
  41367e:	mov    rbp,rsi
  413681:	jmp    413710 <main@@Base+0xc8f0>
  413686:	mov    ecx,0x4
  41368b:	mov    rdi,r14
  41368e:	mov    rdx,r12
  413691:	call   423620 <flatcc_json_parser_set_error@@Base>
  413696:	jmp    41370d <main@@Base+0xc8ed>
  413698:	mov    rdi,r14
  41369b:	mov    rdx,r12
  41369e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4136a3:	mov    rsi,rax
  4136a6:	cmp    rsi,r12
  4136a9:	je     4136ea <main@@Base+0xc8ca>
  4136ab:	cmp    BYTE PTR [rsi],0x3a
  4136ae:	jne    4136ea <main@@Base+0xc8ca>
  4136b0:	lea    rbp,[rsi+0x1]
  4136b4:	mov    rax,r12
  4136b7:	sub    rax,rbp
  4136ba:	cmp    rax,0x2
  4136be:	jl     413818 <main@@Base+0xc9f8>
  4136c4:	cmp    BYTE PTR [rbp+0x0],0x20
  4136c8:	jg     413829 <main@@Base+0xca09>
  4136ce:	jne    413818 <main@@Base+0xc9f8>
  4136d4:	cmp    BYTE PTR [rsi+0x2],0x20
  4136d8:	jle    413818 <main@@Base+0xc9f8>
  4136de:	add    rsi,0x2
  4136e2:	mov    rbp,rsi
  4136e5:	jmp    413829 <main@@Base+0xca09>
  4136ea:	mov    ecx,0x4
  4136ef:	mov    rdi,r14
  4136f2:	mov    rdx,r12
  4136f5:	call   423620 <flatcc_json_parser_set_error@@Base>
  4136fa:	jmp    413826 <main@@Base+0xca06>
  4136ff:	mov    rdi,r14
  413702:	mov    rsi,rbp
  413705:	mov    rdx,r12
  413708:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41370d:	mov    rbp,rax
  413710:	mov    r10,QWORD PTR [rsp+0x18]
  413715:	cmp    r10,rbp
  413718:	je     41389d <main@@Base+0xca7d>
  41371e:	mov    QWORD PTR [rsp+0x10],0x0
  413727:	mov    DWORD PTR [rsp+0xc],0x0
  41372f:	mov    BYTE PTR [rsp+0xb],0x0
  413734:	cmp    rbp,r12
  413737:	je     413775 <main@@Base+0xc955>
  413739:	mov    rdi,r14
  41373c:	mov    rsi,rbp
  41373f:	mov    rdx,r12
  413742:	lea    rcx,[rsp+0xc]
  413747:	lea    r8,[rsp+0x10]
  41374c:	call   425160 <flatcc_json_parser_integer@@Base>
  413751:	cmp    rax,rbp
  413754:	je     413782 <main@@Base+0xc962>
  413756:	mov    r13,rax
  413759:	mov    r15,QWORD PTR [rsp+0x10]
  41375e:	cmp    DWORD PTR [rsp+0xc],0x0
  413763:	je     41378f <main@@Base+0xc96f>
  413765:	cmp    r15,0x81
  41376c:	jb     4137b8 <main@@Base+0xc998>
  41376e:	mov    ecx,0x8
  413773:	jmp    41379d <main@@Base+0xc97d>
  413775:	xor    r15d,r15d
  413778:	mov    r13,r12
  41377b:	cmp    rbp,r13
  41377e:	jne    4137fa <main@@Base+0xc9da>
  413780:	jmp    4137c5 <main@@Base+0xc9a5>
  413782:	xor    r15d,r15d
  413785:	mov    r13,rbp
  413788:	cmp    rbp,r13
  41378b:	jne    4137fa <main@@Base+0xc9da>
  41378d:	jmp    4137c5 <main@@Base+0xc9a5>
  41378f:	cmp    r15,0x80
  413796:	jb     4137bb <main@@Base+0xc99b>
  413798:	mov    ecx,0x7
  41379d:	mov    rdi,r14
  4137a0:	mov    rsi,r13
  4137a3:	mov    rdx,r12
  4137a6:	call   423620 <flatcc_json_parser_set_error@@Base>
  4137ab:	mov    r13,rax
  4137ae:	xor    r15d,r15d
  4137b1:	cmp    rbp,r13
  4137b4:	jne    4137fa <main@@Base+0xc9da>
  4137b6:	jmp    4137c5 <main@@Base+0xc9a5>
  4137b8:	neg    r15
  4137bb:	mov    BYTE PTR [rsp+0xb],r15b
  4137c0:	cmp    rbp,r13
  4137c3:	jne    4137fa <main@@Base+0xc9da>
  4137c5:	mov    rdi,r14
  4137c8:	mov    rsi,rbp
  4137cb:	mov    rdx,r12
  4137ce:	lea    rcx,[rip+0x2dc8b]        # 441460 <__data_start@@Base+0x3b0>
  4137d5:	lea    r8,[rsp+0xb]
  4137da:	call   4125d0 <main@@Base+0xb7b0>
  4137df:	mov    r13,rax
  4137e2:	cmp    rax,rbp
  4137e5:	je     413e9d <main@@Base+0xd07d>
  4137eb:	cmp    r13,r12
  4137ee:	je     413e9d <main@@Base+0xd07d>
  4137f4:	movzx  r15d,BYTE PTR [rsp+0xb]
  4137fa:	cmp    r15b,0x2
  4137fe:	jne    41380b <main@@Base+0xc9eb>
  413800:	test   BYTE PTR [r14+0x10],0x2
  413805:	je     413cf7 <main@@Base+0xced7>
  41380b:	mov    rdi,QWORD PTR [r14]
  41380e:	mov    esi,0x1
  413813:	jmp    413cdc <main@@Base+0xcebc>
  413818:	mov    rdi,r14
  41381b:	mov    rsi,rbp
  41381e:	mov    rdx,r12
  413821:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413826:	mov    rbp,rax
  413829:	mov    r10,QWORD PTR [rsp+0x18]
  41382e:	cmp    r10,rbp
  413831:	je     41389d <main@@Base+0xca7d>
  413833:	mov    QWORD PTR [rsp+0x10],0x0
  41383c:	mov    DWORD PTR [rsp+0xc],0x0
  413844:	mov    BYTE PTR [rsp+0xb],0x0
  413849:	cmp    rbp,r12
  41384c:	je     41394f <main@@Base+0xcb2f>
  413852:	mov    rdi,r14
  413855:	mov    rsi,rbp
  413858:	mov    rdx,r12
  41385b:	lea    rcx,[rsp+0xc]
  413860:	lea    r8,[rsp+0x10]
  413865:	call   425160 <flatcc_json_parser_integer@@Base>
  41386a:	cmp    rax,rbp
  41386d:	je     41395c <main@@Base+0xcb3c>
  413873:	mov    r13,rax
  413876:	mov    r15,QWORD PTR [rsp+0x10]
  41387b:	cmp    DWORD PTR [rsp+0xc],0x0
  413880:	je     413969 <main@@Base+0xcb49>
  413886:	cmp    r15,0x81
  41388d:	jb     413992 <main@@Base+0xcb72>
  413893:	mov    ecx,0x8
  413898:	jmp    413977 <main@@Base+0xcb57>
  41389d:	mov    rax,r15
  4138a0:	shr    rax,0x28
  4138a4:	cmp    rax,0x756332
  4138aa:	jne    4138f5 <main@@Base+0xcad5>
  4138ac:	mov    rbp,r10
  4138af:	cmp    r13,0x4
  4138b3:	jl     413a6e <main@@Base+0xcc4e>
  4138b9:	cmp    BYTE PTR [r10+0x3],0x22
  4138be:	mov    rbp,r10
  4138c1:	jne    413a6e <main@@Base+0xcc4e>
  4138c7:	lea    rsi,[r10+0x4]
  4138cb:	mov    rax,r12
  4138ce:	sub    rax,rsi
  4138d1:	cmp    rax,0x2
  4138d5:	jl     413a06 <main@@Base+0xcbe6>
  4138db:	cmp    BYTE PTR [rsi],0x20
  4138de:	jle    4139ef <main@@Base+0xcbcf>
  4138e4:	mov    r15,r10
  4138e7:	cmp    rsi,r12
  4138ea:	jne    413a1c <main@@Base+0xcbfc>
  4138f0:	jmp    413a48 <main@@Base+0xcc28>
  4138f5:	shr    r15,0x30
  4138f9:	cmp    r15,0x7563
  413900:	jne    413c32 <main@@Base+0xce12>
  413906:	mov    rbp,r10
  413909:	cmp    r13,0x3
  41390d:	jl     413be4 <main@@Base+0xcdc4>
  413913:	cmp    BYTE PTR [r10+0x2],0x22
  413918:	mov    rbp,r10
  41391b:	jne    413be4 <main@@Base+0xcdc4>
  413921:	lea    rsi,[r10+0x3]
  413925:	mov    rax,r12
  413928:	sub    rax,rsi
  41392b:	cmp    rax,0x2
  41392f:	jl     413b7c <main@@Base+0xcd5c>
  413935:	cmp    BYTE PTR [rsi],0x20
  413938:	jle    413b65 <main@@Base+0xcd45>
  41393e:	mov    r15,r10
  413941:	cmp    rsi,r12
  413944:	jne    413b92 <main@@Base+0xcd72>
  41394a:	jmp    413bbe <main@@Base+0xcd9e>
  41394f:	xor    r15d,r15d
  413952:	mov    r13,r12
  413955:	cmp    rbp,r13
  413958:	jne    4139d4 <main@@Base+0xcbb4>
  41395a:	jmp    41399f <main@@Base+0xcb7f>
  41395c:	xor    r15d,r15d
  41395f:	mov    r13,rbp
  413962:	cmp    rbp,r13
  413965:	jne    4139d4 <main@@Base+0xcbb4>
  413967:	jmp    41399f <main@@Base+0xcb7f>
  413969:	cmp    r15,0x80
  413970:	jb     413995 <main@@Base+0xcb75>
  413972:	mov    ecx,0x7
  413977:	mov    rdi,r14
  41397a:	mov    rsi,r13
  41397d:	mov    rdx,r12
  413980:	call   423620 <flatcc_json_parser_set_error@@Base>
  413985:	mov    r13,rax
  413988:	xor    r15d,r15d
  41398b:	cmp    rbp,r13
  41398e:	jne    4139d4 <main@@Base+0xcbb4>
  413990:	jmp    41399f <main@@Base+0xcb7f>
  413992:	neg    r15
  413995:	mov    BYTE PTR [rsp+0xb],r15b
  41399a:	cmp    rbp,r13
  41399d:	jne    4139d4 <main@@Base+0xcbb4>
  41399f:	mov    rdi,r14
  4139a2:	mov    rsi,rbp
  4139a5:	mov    rdx,r12
  4139a8:	lea    rcx,[rip+0x2dad1]        # 441480 <__data_start@@Base+0x3d0>
  4139af:	lea    r8,[rsp+0xb]
  4139b4:	call   4125d0 <main@@Base+0xb7b0>
  4139b9:	mov    r13,rax
  4139bc:	cmp    rax,rbp
  4139bf:	je     413e9d <main@@Base+0xd07d>
  4139c5:	cmp    r13,r12
  4139c8:	je     413e9d <main@@Base+0xd07d>
  4139ce:	movzx  r15d,BYTE PTR [rsp+0xb]
  4139d4:	cmp    r15b,0x2
  4139d8:	jne    4139e5 <main@@Base+0xcbc5>
  4139da:	test   BYTE PTR [r14+0x10],0x2
  4139df:	je     413cf7 <main@@Base+0xced7>
  4139e5:	mov    rdi,QWORD PTR [r14]
  4139e8:	xor    esi,esi
  4139ea:	jmp    413cdc <main@@Base+0xcebc>
  4139ef:	jne    413a06 <main@@Base+0xcbe6>
  4139f1:	cmp    BYTE PTR [r10+0x5],0x20
  4139f6:	jle    413a06 <main@@Base+0xcbe6>
  4139f8:	mov    r15,r10
  4139fb:	lea    rsi,[r10+0x5]
  4139ff:	cmp    rsi,r12
  413a02:	jne    413a1c <main@@Base+0xcbfc>
  413a04:	jmp    413a48 <main@@Base+0xcc28>
  413a06:	mov    r15,r10
  413a09:	mov    rdi,r14
  413a0c:	mov    rdx,r12
  413a0f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413a14:	mov    rsi,rax
  413a17:	cmp    rsi,r12
  413a1a:	je     413a48 <main@@Base+0xcc28>
  413a1c:	cmp    BYTE PTR [rsi],0x3a
  413a1f:	jne    413a48 <main@@Base+0xcc28>
  413a21:	lea    rbp,[rsi+0x1]
  413a25:	mov    rax,r12
  413a28:	sub    rax,rbp
  413a2b:	cmp    rax,0x2
  413a2f:	jl     413a5a <main@@Base+0xcc3a>
  413a31:	cmp    BYTE PTR [rbp+0x0],0x20
  413a35:	jg     413a6b <main@@Base+0xcc4b>
  413a37:	jne    413a5a <main@@Base+0xcc3a>
  413a39:	cmp    BYTE PTR [rsi+0x2],0x20
  413a3d:	jle    413a5a <main@@Base+0xcc3a>
  413a3f:	add    rsi,0x2
  413a43:	mov    rbp,rsi
  413a46:	jmp    413a6b <main@@Base+0xcc4b>
  413a48:	mov    ecx,0x4
  413a4d:	mov    rdi,r14
  413a50:	mov    rdx,r12
  413a53:	call   423620 <flatcc_json_parser_set_error@@Base>
  413a58:	jmp    413a68 <main@@Base+0xcc48>
  413a5a:	mov    rdi,r14
  413a5d:	mov    rsi,rbp
  413a60:	mov    rdx,r12
  413a63:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413a68:	mov    rbp,rax
  413a6b:	mov    r10,r15
  413a6e:	cmp    r10,rbp
  413a71:	je     413c32 <main@@Base+0xce12>
  413a77:	mov    QWORD PTR [rsp+0x10],0x0
  413a80:	mov    DWORD PTR [rsp+0xc],0x0
  413a88:	mov    BYTE PTR [rsp+0xb],0x0
  413a8d:	cmp    rbp,r12
  413a90:	je     413ac0 <main@@Base+0xcca0>
  413a92:	mov    rdi,r14
  413a95:	mov    rsi,rbp
  413a98:	mov    rdx,r12
  413a9b:	lea    rcx,[rsp+0xc]
  413aa0:	lea    r8,[rsp+0x10]
  413aa5:	call   425160 <flatcc_json_parser_integer@@Base>
  413aaa:	cmp    rax,rbp
  413aad:	je     413acd <main@@Base+0xccad>
  413aaf:	mov    r13,rax
  413ab2:	cmp    DWORD PTR [rsp+0xc],0x0
  413ab7:	je     413ada <main@@Base+0xccba>
  413ab9:	mov    ecx,0x8
  413abe:	jmp    413aed <main@@Base+0xcccd>
  413ac0:	xor    r15d,r15d
  413ac3:	mov    r13,r12
  413ac6:	cmp    rbp,r13
  413ac9:	jne    413b3b <main@@Base+0xcd1b>
  413acb:	jmp    413b06 <main@@Base+0xcce6>
  413acd:	xor    r15d,r15d
  413ad0:	mov    r13,rbp
  413ad3:	cmp    rbp,r13
  413ad6:	jne    413b3b <main@@Base+0xcd1b>
  413ad8:	jmp    413b06 <main@@Base+0xcce6>
  413ada:	mov    r15,QWORD PTR [rsp+0x10]
  413adf:	cmp    r15,0x100
  413ae6:	jb     413b59 <main@@Base+0xcd39>
  413ae8:	mov    ecx,0x7
  413aed:	mov    rdi,r14
  413af0:	mov    rsi,r13
  413af3:	mov    rdx,r12
  413af6:	call   423620 <flatcc_json_parser_set_error@@Base>
  413afb:	mov    r13,rax
  413afe:	xor    r15d,r15d
  413b01:	cmp    rbp,r13
  413b04:	jne    413b3b <main@@Base+0xcd1b>
  413b06:	mov    rdi,r14
  413b09:	mov    rsi,rbp
  413b0c:	mov    rdx,r12
  413b0f:	lea    rcx,[rip+0x2d98a]        # 4414a0 <__data_start@@Base+0x3f0>
  413b16:	lea    r8,[rsp+0xb]
  413b1b:	call   412760 <main@@Base+0xb940>
  413b20:	mov    r13,rax
  413b23:	cmp    rax,rbp
  413b26:	je     413e9d <main@@Base+0xd07d>
  413b2c:	cmp    r13,r12
  413b2f:	je     413e9d <main@@Base+0xd07d>
  413b35:	movzx  r15d,BYTE PTR [rsp+0xb]
  413b3b:	cmp    r15b,0x2
  413b3f:	jne    413b4c <main@@Base+0xcd2c>
  413b41:	test   BYTE PTR [r14+0x10],0x2
  413b46:	je     413cf7 <main@@Base+0xced7>
  413b4c:	mov    rdi,QWORD PTR [r14]
  413b4f:	mov    esi,0x3
  413b54:	jmp    413cdc <main@@Base+0xcebc>
  413b59:	mov    BYTE PTR [rsp+0xb],r15b
  413b5e:	cmp    rbp,r13
  413b61:	jne    413b3b <main@@Base+0xcd1b>
  413b63:	jmp    413b06 <main@@Base+0xcce6>
  413b65:	jne    413b7c <main@@Base+0xcd5c>
  413b67:	cmp    BYTE PTR [r10+0x4],0x20
  413b6c:	jle    413b7c <main@@Base+0xcd5c>
  413b6e:	mov    r15,r10
  413b71:	lea    rsi,[r10+0x4]
  413b75:	cmp    rsi,r12
  413b78:	jne    413b92 <main@@Base+0xcd72>
  413b7a:	jmp    413bbe <main@@Base+0xcd9e>
  413b7c:	mov    r15,r10
  413b7f:	mov    rdi,r14
  413b82:	mov    rdx,r12
  413b85:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413b8a:	mov    rsi,rax
  413b8d:	cmp    rsi,r12
  413b90:	je     413bbe <main@@Base+0xcd9e>
  413b92:	cmp    BYTE PTR [rsi],0x3a
  413b95:	jne    413bbe <main@@Base+0xcd9e>
  413b97:	lea    rbp,[rsi+0x1]
  413b9b:	mov    rax,r12
  413b9e:	sub    rax,rbp
  413ba1:	cmp    rax,0x2
  413ba5:	jl     413bd0 <main@@Base+0xcdb0>
  413ba7:	cmp    BYTE PTR [rbp+0x0],0x20
  413bab:	jg     413be1 <main@@Base+0xcdc1>
  413bad:	jne    413bd0 <main@@Base+0xcdb0>
  413baf:	cmp    BYTE PTR [rsi+0x2],0x20
  413bb3:	jle    413bd0 <main@@Base+0xcdb0>
  413bb5:	add    rsi,0x2
  413bb9:	mov    rbp,rsi
  413bbc:	jmp    413be1 <main@@Base+0xcdc1>
  413bbe:	mov    ecx,0x4
  413bc3:	mov    rdi,r14
  413bc6:	mov    rdx,r12
  413bc9:	call   423620 <flatcc_json_parser_set_error@@Base>
  413bce:	jmp    413bde <main@@Base+0xcdbe>
  413bd0:	mov    rdi,r14
  413bd3:	mov    rsi,rbp
  413bd6:	mov    rdx,r12
  413bd9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413bde:	mov    rbp,rax
  413be1:	mov    r10,r15
  413be4:	cmp    r10,rbp
  413be7:	je     413c32 <main@@Base+0xce12>
  413be9:	mov    QWORD PTR [rsp+0x10],0x0
  413bf2:	mov    DWORD PTR [rsp+0xc],0x0
  413bfa:	mov    BYTE PTR [rsp+0xb],0x0
  413bff:	cmp    rbp,r12
  413c02:	je     413c48 <main@@Base+0xce28>
  413c04:	mov    rdi,r14
  413c07:	mov    rsi,rbp
  413c0a:	mov    rdx,r12
  413c0d:	lea    rcx,[rsp+0xc]
  413c12:	lea    r8,[rsp+0x10]
  413c17:	call   425160 <flatcc_json_parser_integer@@Base>
  413c1c:	cmp    rax,rbp
  413c1f:	je     413c55 <main@@Base+0xce35>
  413c21:	mov    r13,rax
  413c24:	cmp    DWORD PTR [rsp+0xc],0x0
  413c29:	je     413c62 <main@@Base+0xce42>
  413c2b:	mov    ecx,0x8
  413c30:	jmp    413c79 <main@@Base+0xce59>
  413c32:	mov    rdi,r14
  413c35:	mov    rsi,r10
  413c38:	mov    rdx,r12
  413c3b:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  413c40:	mov    r13,rax
  413c43:	jmp    413cf7 <main@@Base+0xced7>
  413c48:	xor    r15d,r15d
  413c4b:	mov    r13,r12
  413c4e:	cmp    rbp,r13
  413c51:	jne    413cc7 <main@@Base+0xcea7>
  413c53:	jmp    413c92 <main@@Base+0xce72>
  413c55:	xor    r15d,r15d
  413c58:	mov    r13,rbp
  413c5b:	cmp    rbp,r13
  413c5e:	jne    413cc7 <main@@Base+0xcea7>
  413c60:	jmp    413c92 <main@@Base+0xce72>
  413c62:	mov    r15,QWORD PTR [rsp+0x10]
  413c67:	cmp    r15,0x100
  413c6e:	jb     413d8e <main@@Base+0xcf6e>
  413c74:	mov    ecx,0x7
  413c79:	mov    rdi,r14
  413c7c:	mov    rsi,r13
  413c7f:	mov    rdx,r12
  413c82:	call   423620 <flatcc_json_parser_set_error@@Base>
  413c87:	mov    r13,rax
  413c8a:	xor    r15d,r15d
  413c8d:	cmp    rbp,r13
  413c90:	jne    413cc7 <main@@Base+0xcea7>
  413c92:	mov    rdi,r14
  413c95:	mov    rsi,rbp
  413c98:	mov    rdx,r12
  413c9b:	lea    rcx,[rip+0x2d81e]        # 4414c0 <__data_start@@Base+0x410>
  413ca2:	lea    r8,[rsp+0xb]
  413ca7:	call   412760 <main@@Base+0xb940>
  413cac:	mov    r13,rax
  413caf:	cmp    rax,rbp
  413cb2:	je     413e9d <main@@Base+0xd07d>
  413cb8:	cmp    r13,r12
  413cbb:	je     413e9d <main@@Base+0xd07d>
  413cc1:	movzx  r15d,BYTE PTR [rsp+0xb]
  413cc7:	cmp    r15b,0x2
  413ccb:	jne    413cd4 <main@@Base+0xceb4>
  413ccd:	test   BYTE PTR [r14+0x10],0x2
  413cd2:	je     413cf7 <main@@Base+0xced7>
  413cd4:	mov    rdi,QWORD PTR [r14]
  413cd7:	mov    esi,0x2
  413cdc:	mov    edx,0x1
  413ce1:	mov    ecx,0x1
  413ce6:	call   41fe80 <flatcc_builder_table_add@@Base>
  413ceb:	test   rax,rax
  413cee:	je     413e9d <main@@Base+0xd07d>
  413cf4:	mov    BYTE PTR [rax],r15b
  413cf7:	mov    rax,r12
  413cfa:	sub    rax,r13
  413cfd:	cmp    rax,0x2
  413d01:	jl     413d21 <main@@Base+0xcf01>
  413d03:	cmp    BYTE PTR [r13+0x0],0x20
  413d08:	jg     413d32 <main@@Base+0xcf12>
  413d0a:	jne    413d21 <main@@Base+0xcf01>
  413d0c:	cmp    BYTE PTR [r13+0x1],0x20
  413d11:	jle    413d21 <main@@Base+0xcf01>
  413d13:	add    r13,0x1
  413d17:	cmp    r13,r12
  413d1a:	jne    413d37 <main@@Base+0xcf17>
  413d1c:	jmp    413da1 <main@@Base+0xcf81>
  413d21:	mov    rdi,r14
  413d24:	mov    rsi,r13
  413d27:	mov    rdx,r12
  413d2a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413d2f:	mov    r13,rax
  413d32:	cmp    r13,r12
  413d35:	je     413da1 <main@@Base+0xcf81>
  413d37:	movzx  eax,BYTE PTR [r13+0x0]
  413d3c:	cmp    al,0x2c
  413d3e:	jne    413e4c <main@@Base+0xd02c>
  413d44:	lea    rsi,[r13+0x1]
  413d48:	mov    rax,r12
  413d4b:	sub    rax,rsi
  413d4e:	cmp    rax,0x2
  413d52:	jl     413d70 <main@@Base+0xcf50>
  413d54:	cmp    BYTE PTR [rsi],0x20
  413d57:	jg     413d7e <main@@Base+0xcf5e>
  413d59:	jne    413d70 <main@@Base+0xcf50>
  413d5b:	cmp    BYTE PTR [r13+0x2],0x20
  413d60:	jle    413d70 <main@@Base+0xcf50>
  413d62:	add    r13,0x2
  413d66:	mov    rsi,r13
  413d69:	cmp    rsi,r12
  413d6c:	jne    413d83 <main@@Base+0xcf63>
  413d6e:	jmp    413dc6 <main@@Base+0xcfa6>
  413d70:	mov    rdi,r14
  413d73:	mov    rdx,r12
  413d76:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413d7b:	mov    rsi,rax
  413d7e:	cmp    rsi,r12
  413d81:	je     413dc6 <main@@Base+0xcfa6>
  413d83:	cmp    BYTE PTR [rsi],0x7d
  413d86:	jne    413486 <main@@Base+0xc666>
  413d8c:	jmp    413dd6 <main@@Base+0xcfb6>
  413d8e:	mov    BYTE PTR [rsp+0xb],r15b
  413d93:	cmp    rbp,r13
  413d96:	jne    413cc7 <main@@Base+0xcea7>
  413d9c:	jmp    413c92 <main@@Base+0xce72>
  413da1:	mov    rbp,r12
  413da4:	cmp    DWORD PTR [r14+0x1c],0x0
  413da9:	jne    4132cd <main@@Base+0xc4ad>
  413daf:	mov    rdi,QWORD PTR [r14]
  413db2:	call   41f510 <flatcc_builder_end_table@@Base>
  413db7:	mov    DWORD PTR [rbx],eax
  413db9:	test   eax,eax
  413dbb:	jne    4132e3 <main@@Base+0xc4c3>
  413dc1:	jmp    4132cd <main@@Base+0xc4ad>
  413dc6:	mov    ecx,0xa
  413dcb:	mov    rdi,r14
  413dce:	mov    rsi,r12
  413dd1:	jmp    4132b7 <main@@Base+0xc497>
  413dd6:	lea    rbp,[rsi+0x1]
  413dda:	mov    rax,r12
  413ddd:	sub    rax,rbp
  413de0:	cmp    rax,0x2
  413de4:	jl     413e8a <main@@Base+0xd06a>
  413dea:	cmp    BYTE PTR [rbp+0x0],0x20
  413dee:	jg     4132c2 <main@@Base+0xc4a2>
  413df4:	jne    413e8a <main@@Base+0xd06a>
  413dfa:	cmp    BYTE PTR [rsi+0x2],0x20
  413dfe:	jle    413e8a <main@@Base+0xd06a>
  413e04:	add    rsi,0x2
  413e08:	mov    rbp,rsi
  413e0b:	cmp    DWORD PTR [r14+0x1c],0x0
  413e10:	jne    4132cd <main@@Base+0xc4ad>
  413e16:	jmp    413daf <main@@Base+0xcf8f>
  413e18:	cmp    cl,0x7d
  413e1b:	jne    413ea5 <main@@Base+0xd085>
  413e21:	lea    rbp,[rax+0x1]
  413e25:	mov    rcx,r12
  413e28:	sub    rcx,rbp
  413e2b:	cmp    rcx,0x2
  413e2f:	jl     413e8a <main@@Base+0xd06a>
  413e31:	cmp    BYTE PTR [rbp+0x0],0x20
  413e35:	jg     4132c2 <main@@Base+0xc4a2>
  413e3b:	jne    413e8a <main@@Base+0xd06a>
  413e3d:	cmp    BYTE PTR [rax+0x2],0x20
  413e41:	jle    413e8a <main@@Base+0xd06a>
  413e43:	add    rax,0x2
  413e47:	jmp    4132bf <main@@Base+0xc49f>
  413e4c:	cmp    al,0x7d
  413e4e:	jne    413eb5 <main@@Base+0xd095>
  413e50:	lea    rbp,[r13+0x1]
  413e54:	mov    rax,r12
  413e57:	sub    rax,rbp
  413e5a:	cmp    rax,0x2
  413e5e:	jl     413e8a <main@@Base+0xd06a>
  413e60:	cmp    BYTE PTR [rbp+0x0],0x20
  413e64:	jg     4132c2 <main@@Base+0xc4a2>
  413e6a:	jne    413e8a <main@@Base+0xd06a>
  413e6c:	cmp    BYTE PTR [r13+0x2],0x20
  413e71:	jle    413e8a <main@@Base+0xd06a>
  413e73:	add    r13,0x2
  413e77:	mov    rbp,r13
  413e7a:	cmp    DWORD PTR [r14+0x1c],0x0
  413e7f:	jne    4132cd <main@@Base+0xc4ad>
  413e85:	jmp    413daf <main@@Base+0xcf8f>
  413e8a:	mov    rdi,r14
  413e8d:	mov    rsi,rbp
  413e90:	mov    rdx,r12
  413e93:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  413e98:	jmp    4132bf <main@@Base+0xc49f>
  413e9d:	mov    rbp,r13
  413ea0:	jmp    4132cd <main@@Base+0xc4ad>
  413ea5:	mov    ecx,0xa
  413eaa:	mov    rdi,r14
  413ead:	mov    rsi,rax
  413eb0:	jmp    4132b7 <main@@Base+0xc497>
  413eb5:	mov    ecx,0xa
  413eba:	mov    rdi,r14
  413ebd:	mov    rsi,r13
  413ec0:	jmp    4132b7 <main@@Base+0xc497>
  413ec5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ecf:	nop
  413ed0:	push   rbp
  413ed1:	push   r15
  413ed3:	push   r14
  413ed5:	push   r13
  413ed7:	push   r12
  413ed9:	push   rbx
  413eda:	push   rax
  413edb:	mov    rbp,rcx
  413ede:	mov    r12,rdx
  413ee1:	mov    rbx,rsi
  413ee4:	mov    rcx,rdx
  413ee7:	sub    rcx,rsi
  413eea:	cmp    rcx,0x8
  413eee:	jb     413ef7 <main@@Base+0xd0d7>
  413ef0:	movbe  r14,QWORD PTR [rbx]
  413ef5:	jmp    413f73 <main@@Base+0xd153>
  413ef7:	and    cl,0xf
  413efa:	add    cl,0xff
  413efd:	cmp    cl,0x7
  413f00:	ja     414082 <main@@Base+0xd262>
  413f06:	xor    eax,eax
  413f08:	movzx  ecx,cl
  413f0b:	lea    rdx,[rip+0x1f6e2]        # 4335f4 <_IO_stdin_used@@Base+0x5f4>
  413f12:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  413f16:	add    rcx,rdx
  413f19:	jmp    rcx
  413f1b:	movsx  rax,BYTE PTR [rbx+0x7]
  413f20:	movsx  rcx,BYTE PTR [rbx+0x6]
  413f25:	shl    rcx,0x8
  413f29:	or     rax,rcx
  413f2c:	movsx  rcx,BYTE PTR [rbx+0x5]
  413f31:	shl    rcx,0x10
  413f35:	or     rax,rcx
  413f38:	movsx  rcx,BYTE PTR [rbx+0x4]
  413f3d:	shl    rcx,0x18
  413f41:	or     rax,rcx
  413f44:	movsx  rcx,BYTE PTR [rbx+0x3]
  413f49:	shl    rcx,0x20
  413f4d:	or     rax,rcx
  413f50:	movsx  rcx,BYTE PTR [rbx+0x2]
  413f55:	shl    rcx,0x28
  413f59:	or     rax,rcx
  413f5c:	movsx  rcx,BYTE PTR [rbx+0x1]
  413f61:	shl    rcx,0x30
  413f65:	or     rax,rcx
  413f68:	movzx  r14d,BYTE PTR [rbx]
  413f6c:	shl    r14,0x38
  413f70:	or     r14,rax
  413f73:	movabs rax,0x4d6f6e7374657200
  413f7d:	cmp    r14,rax
  413f80:	jae    413fbe <main@@Base+0xd19e>
  413f82:	shr    r14,0x28
  413f86:	cmp    r14,0x416c74
  413f8d:	jne    414082 <main@@Base+0xd262>
  413f93:	mov    r14,r8
  413f96:	mov    ecx,0x3
  413f9b:	mov    rsi,rbx
  413f9e:	mov    rdx,r12
  413fa1:	mov    r8,r9
  413fa4:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  413fa9:	cmp    rax,rbx
  413fac:	je     414082 <main@@Base+0xd262>
  413fb2:	mov    QWORD PTR [r14],0x4
  413fb9:	jmp    414078 <main@@Base+0xd258>
  413fbe:	lea    rcx,[rax+0x32]
  413fc2:	cmp    r14,rcx
  413fc5:	jne    413ff2 <main@@Base+0xd1d2>
  413fc7:	mov    r14,r8
  413fca:	mov    ecx,0x8
  413fcf:	mov    rsi,rbx
  413fd2:	mov    rdx,r12
  413fd5:	mov    r8,r9
  413fd8:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  413fdd:	cmp    rax,rbx
  413fe0:	je     414082 <main@@Base+0xd262>
  413fe6:	mov    QWORD PTR [r14],0x3
  413fed:	jmp    414078 <main@@Base+0xd258>
  413ff2:	mov    rcx,r14
  413ff5:	and    rcx,0xffffffffffffff00
  413ffc:	cmp    rcx,rax
  413fff:	jne    414036 <main@@Base+0xd216>
  414001:	mov    ecx,0x7
  414006:	mov    r13,rdi
  414009:	mov    rsi,rbx
  41400c:	mov    rdx,r12
  41400f:	mov    QWORD PTR [rsp],r8
  414013:	mov    r8,r9
  414016:	mov    r15,r9
  414019:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41401e:	mov    rdi,r13
  414021:	mov    r9,r15
  414024:	mov    r8,QWORD PTR [rsp]
  414028:	cmp    rax,rbx
  41402b:	je     414036 <main@@Base+0xd216>
  41402d:	mov    QWORD PTR [r8],0x1
  414034:	jmp    414078 <main@@Base+0xd258>
  414036:	mov    rax,r14
  414039:	shr    rax,0x20
  41403d:	cmp    rax,0x4e4f4e45
  414043:	jne    414094 <main@@Base+0xd274>
  414045:	mov    ecx,0x4
  41404a:	mov    r13,rdi
  41404d:	mov    rsi,rbx
  414050:	mov    rdx,r12
  414053:	mov    QWORD PTR [rsp],r8
  414057:	mov    r8,r9
  41405a:	mov    r15,r9
  41405d:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  414062:	mov    rdi,r13
  414065:	mov    r9,r15
  414068:	mov    r8,QWORD PTR [rsp]
  41406c:	cmp    rax,rbx
  41406f:	je     414094 <main@@Base+0xd274>
  414071:	mov    QWORD PTR [r8],0x0
  414078:	mov    DWORD PTR [rbp+0x0],0x0
  41407f:	mov    rbx,rax
  414082:	mov    rax,rbx
  414085:	add    rsp,0x8
  414089:	pop    rbx
  41408a:	pop    r12
  41408c:	pop    r13
  41408e:	pop    r14
  414090:	pop    r15
  414092:	pop    rbp
  414093:	ret    
  414094:	movabs rax,0x5465737453696d70
  41409e:	cmp    r14,rax
  4140a1:	jne    414082 <main@@Base+0xd262>
  4140a3:	lea    rax,[rbx+0x8]
  4140a7:	mov    rdx,r12
  4140aa:	sub    rdx,rax
  4140ad:	cmp    rdx,0x8
  4140b1:	jb     4140ba <main@@Base+0xd29a>
  4140b3:	movbe  rax,QWORD PTR [rax]
  4140b8:	jmp    414131 <main@@Base+0xd311>
  4140ba:	and    dl,0xf
  4140bd:	add    dl,0xff
  4140c0:	cmp    dl,0x7
  4140c3:	ja     414082 <main@@Base+0xd262>
  4140c5:	xor    ecx,ecx
  4140c7:	movzx  edx,dl
  4140ca:	lea    rsi,[rip+0x1f543]        # 433614 <_IO_stdin_used@@Base+0x614>
  4140d1:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  4140d5:	add    rdx,rsi
  4140d8:	jmp    rdx
  4140da:	movsx  rcx,BYTE PTR [rbx+0xf]
  4140df:	movsx  rdx,BYTE PTR [rbx+0xe]
  4140e4:	shl    rdx,0x8
  4140e8:	or     rcx,rdx
  4140eb:	movsx  rdx,BYTE PTR [rbx+0xd]
  4140f0:	shl    rdx,0x10
  4140f4:	or     rcx,rdx
  4140f7:	movsx  rdx,BYTE PTR [rbx+0xc]
  4140fc:	shl    rdx,0x18
  414100:	or     rcx,rdx
  414103:	movsx  rdx,BYTE PTR [rbx+0xb]
  414108:	shl    rdx,0x20
  41410c:	or     rcx,rdx
  41410f:	movsx  rdx,BYTE PTR [rbx+0xa]
  414114:	shl    rdx,0x28
  414118:	or     rcx,rdx
  41411b:	movsx  rdx,BYTE PTR [rbx+0x9]
  414120:	shl    rdx,0x30
  414124:	or     rcx,rdx
  414127:	movzx  eax,BYTE PTR [rax]
  41412a:	shl    rax,0x38
  41412e:	or     rax,rcx
  414131:	movabs rcx,0x6c655461626c6557
  41413b:	cmp    rax,rcx
  41413e:	jne    414082 <main@@Base+0xd262>
  414144:	lea    r15,[rbx+0x10]
  414148:	mov    rcx,r12
  41414b:	sub    rcx,r15
  41414e:	cmp    rcx,0x8
  414152:	jb     41415b <main@@Base+0xd33b>
  414154:	movbe  rcx,QWORD PTR [r15]
  414159:	jmp    4141d7 <main@@Base+0xd3b7>
  41415b:	and    cl,0xf
  41415e:	add    cl,0xff
  414161:	cmp    cl,0x7
  414164:	ja     414082 <main@@Base+0xd262>
  41416a:	xor    eax,eax
  41416c:	movzx  ecx,cl
  41416f:	lea    rdx,[rip+0x1f4be]        # 433634 <_IO_stdin_used@@Base+0x634>
  414176:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41417a:	add    rcx,rdx
  41417d:	jmp    rcx
  41417f:	movsx  rax,BYTE PTR [rbx+0x17]
  414184:	movsx  rcx,BYTE PTR [rbx+0x16]
  414189:	shl    rcx,0x8
  41418d:	or     rax,rcx
  414190:	movsx  rcx,BYTE PTR [rbx+0x15]
  414195:	shl    rcx,0x10
  414199:	or     rax,rcx
  41419c:	movsx  rcx,BYTE PTR [rbx+0x14]
  4141a1:	shl    rcx,0x18
  4141a5:	or     rax,rcx
  4141a8:	movsx  rcx,BYTE PTR [rbx+0x13]
  4141ad:	shl    rcx,0x20
  4141b1:	or     rax,rcx
  4141b4:	movsx  rcx,BYTE PTR [rbx+0x12]
  4141b9:	shl    rcx,0x28
  4141bd:	or     rax,rcx
  4141c0:	movsx  rcx,BYTE PTR [rbx+0x11]
  4141c5:	shl    rcx,0x30
  4141c9:	or     rax,rcx
  4141cc:	movzx  ecx,BYTE PTR [r15]
  4141d0:	shl    rcx,0x38
  4141d4:	or     rcx,rax
  4141d7:	shr    rcx,0x8
  4141db:	movabs rax,0x697468456e756d
  4141e5:	cmp    rcx,rax
  4141e8:	jne    414082 <main@@Base+0xd262>
  4141ee:	mov    r14,r8
  4141f1:	mov    ecx,0x7
  4141f6:	mov    rsi,r15
  4141f9:	mov    rdx,r12
  4141fc:	mov    r8,r9
  4141ff:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  414204:	cmp    rax,r15
  414207:	je     414082 <main@@Base+0xd262>
  41420d:	mov    QWORD PTR [r14],0x2
  414214:	jmp    414078 <main@@Base+0xd258>
  414219:	nop    DWORD PTR [rax+0x0]
  414220:	push   rbp
  414221:	push   r15
  414223:	push   r14
  414225:	push   r13
  414227:	push   r12
  414229:	push   rbx
  41422a:	sub    rsp,0x38
  41422e:	mov    r15,r8
  414231:	mov    rbp,rcx
  414234:	mov    r13,rdx
  414237:	mov    rbx,rsi
  41423a:	mov    r14,rdi
  41423d:	mov    BYTE PTR [r8],0x0
  414241:	cmp    rsi,rdx
  414244:	je     414267 <main@@Base+0xd447>
  414246:	cmp    BYTE PTR [rbx],0x22
  414249:	jne    414251 <main@@Base+0xd431>
  41424b:	add    rbx,0x1
  41424f:	jmp    414267 <main@@Base+0xd447>
  414251:	mov    ecx,0x5
  414256:	mov    rdi,r14
  414259:	mov    rsi,rbx
  41425c:	mov    rdx,r13
  41425f:	call   423620 <flatcc_json_parser_set_error@@Base>
  414264:	mov    rbx,rax
  414267:	mov    rax,r13
  41426a:	sub    rax,rbx
  41426d:	cmp    rax,0x2
  414271:	jl     41428e <main@@Base+0xd46e>
  414273:	cmp    BYTE PTR [rbx],0x20
  414276:	jg     41429f <main@@Base+0xd47f>
  414278:	jne    41428e <main@@Base+0xd46e>
  41427a:	cmp    BYTE PTR [rbx+0x1],0x20
  41427e:	jle    41428e <main@@Base+0xd46e>
  414280:	add    rbx,0x1
  414284:	cmp    rbx,r13
  414287:	jne    4142a8 <main@@Base+0xd488>
  414289:	jmp    414377 <main@@Base+0xd557>
  41428e:	mov    rdi,r14
  414291:	mov    rsi,rbx
  414294:	mov    rdx,r13
  414297:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41429c:	mov    rbx,rax
  41429f:	cmp    rbx,r13
  4142a2:	je     414377 <main@@Base+0xd557>
  4142a8:	lea    rcx,[rbp+0x8]
  4142ac:	mov    DWORD PTR [rsp+0xc],0x0
  4142b4:	mov    rax,rbp
  4142b7:	lea    r12,[rsp+0x10]
  4142bc:	mov    QWORD PTR [rsp+0x20],r15
  4142c1:	mov    QWORD PTR [rsp+0x28],rbp
  4142c6:	mov    QWORD PTR [rsp+0x18],rcx
  4142cb:	mov    rbp,QWORD PTR [rax]
  4142ce:	mov    r15,rcx
  4142d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142db:	nop    DWORD PTR [rax+rax*1+0x0]
  4142e0:	mov    rdi,r14
  4142e3:	mov    rsi,rbx
  4142e6:	mov    rdx,r13
  4142e9:	lea    rcx,[rsp+0x14]
  4142ee:	lea    r8,[rsp+0x30]
  4142f3:	mov    r9,r12
  4142f6:	call   rbp
  4142f8:	cmp    rax,r13
  4142fb:	je     414377 <main@@Base+0xd557>
  4142fd:	mov    rbp,rax
  414300:	cmp    rax,rbx
  414303:	jne    414320 <main@@Base+0xd500>
  414305:	mov    rbp,QWORD PTR [r15]
  414308:	add    r15,0x8
  41430c:	test   rbp,rbp
  41430f:	jne    4142e0 <main@@Base+0xd4c0>
  414311:	jmp    41437c <main@@Base+0xd55c>
  414313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41431d:	nop    DWORD PTR [rax]
  414320:	cmp    DWORD PTR [rsp+0x14],0x0
  414325:	je     41433c <main@@Base+0xd51c>
  414327:	mov    ecx,0x8
  41432c:	mov    rdi,r14
  41432f:	mov    rsi,rbp
  414332:	mov    rdx,r13
  414335:	call   423620 <flatcc_json_parser_set_error@@Base>
  41433a:	jmp    41434c <main@@Base+0xd52c>
  41433c:	cmp    QWORD PTR [rsp+0x30],0x0
  414342:	setne  al
  414345:	mov    DWORD PTR [rsp+0xc],eax
  414349:	mov    rax,rbp
  41434c:	mov    r15,QWORD PTR [rsp+0x20]
  414351:	mov    rcx,QWORD PTR [rsp+0x18]
  414356:	cmp    rax,r13
  414359:	je     414377 <main@@Base+0xd557>
  41435b:	mov    rbx,rbp
  41435e:	mov    eax,DWORD PTR [rsp+0xc]
  414362:	add    BYTE PTR [r15],al
  414365:	cmp    DWORD PTR [rsp+0x10],0x0
  41436a:	mov    rax,QWORD PTR [rsp+0x28]
  41436f:	jne    4142cb <main@@Base+0xd4ab>
  414375:	jmp    414392 <main@@Base+0xd572>
  414377:	mov    rbp,r13
  41437a:	jmp    414392 <main@@Base+0xd572>
  41437c:	mov    ecx,0x17
  414381:	mov    rdi,r14
  414384:	mov    rsi,rbx
  414387:	mov    rdx,r13
  41438a:	call   423620 <flatcc_json_parser_set_error@@Base>
  41438f:	mov    rbp,rax
  414392:	mov    rax,rbp
  414395:	add    rsp,0x38
  414399:	pop    rbx
  41439a:	pop    r12
  41439c:	pop    r13
  41439e:	pop    r14
  4143a0:	pop    r15
  4143a2:	pop    rbp
  4143a3:	ret    
  4143a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4143ae:	xchg   ax,ax
  4143b0:	push   rbp
  4143b1:	push   r15
  4143b3:	push   r14
  4143b5:	push   r13
  4143b7:	push   r12
  4143b9:	push   rbx
  4143ba:	sub    rsp,0x48
  4143be:	mov    rbx,r8
  4143c1:	mov    rbp,rcx
  4143c4:	mov    r13,rdx
  4143c7:	mov    r12,rsi
  4143ca:	mov    r14,rdi
  4143cd:	mov    DWORD PTR [r8],0x0
  4143d4:	cmp    rsi,rdx
  4143d7:	je     4143fc <main@@Base+0xd5dc>
  4143d9:	cmp    BYTE PTR [r12],0x22
  4143de:	jne    4143e6 <main@@Base+0xd5c6>
  4143e0:	add    r12,0x1
  4143e4:	jmp    4143fc <main@@Base+0xd5dc>
  4143e6:	mov    ecx,0x5
  4143eb:	mov    rdi,r14
  4143ee:	mov    rsi,r12
  4143f1:	mov    rdx,r13
  4143f4:	call   423620 <flatcc_json_parser_set_error@@Base>
  4143f9:	mov    r12,rax
  4143fc:	mov    rax,r13
  4143ff:	sub    rax,r12
  414402:	cmp    rax,0x2
  414406:	jl     414427 <main@@Base+0xd607>
  414408:	cmp    BYTE PTR [r12],0x20
  41440d:	jg     414438 <main@@Base+0xd618>
  41440f:	jne    414427 <main@@Base+0xd607>
  414411:	cmp    BYTE PTR [r12+0x1],0x20
  414417:	jle    414427 <main@@Base+0xd607>
  414419:	add    r12,0x1
  41441d:	cmp    r12,r13
  414420:	jne    414441 <main@@Base+0xd621>
  414422:	jmp    41450a <main@@Base+0xd6ea>
  414427:	mov    rdi,r14
  41442a:	mov    rsi,r12
  41442d:	mov    rdx,r13
  414430:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  414435:	mov    r12,rax
  414438:	cmp    r12,r13
  41443b:	je     41450a <main@@Base+0xd6ea>
  414441:	mov    QWORD PTR [rsp+0x20],rbx
  414446:	lea    rdx,[rbp+0x8]
  41444a:	lea    r15,[rsp+0x8]
  41444f:	vbroadcastss xmm0,DWORD PTR [rip+0x1ebb8]        # 433010 <_IO_stdin_used@@Base+0x10>
  414458:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41445e:	mov    QWORD PTR [rsp+0x18],rbp
  414463:	mov    QWORD PTR [rsp+0x10],rdx
  414468:	mov    rbx,QWORD PTR [rbp+0x0]
  41446c:	mov    rbp,rdx
  41446f:	nop
  414470:	mov    rdi,r14
  414473:	mov    rsi,r12
  414476:	mov    rdx,r13
  414479:	lea    rcx,[rsp+0xc]
  41447e:	lea    r8,[rsp+0x28]
  414483:	mov    r9,r15
  414486:	call   rbx
  414488:	cmp    rax,r13
  41448b:	je     41450a <main@@Base+0xd6ea>
  41448d:	cmp    rax,r12
  414490:	jne    4144b0 <main@@Base+0xd690>
  414492:	mov    rbx,QWORD PTR [rbp+0x0]
  414496:	add    rbp,0x8
  41449a:	test   rbx,rbx
  41449d:	jne    414470 <main@@Base+0xd650>
  41449f:	jmp    41450f <main@@Base+0xd6ef>
  4144a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4144b0:	mov    rcx,QWORD PTR [rsp+0x28]
  4144b5:	test   rcx,rcx
  4144b8:	js     4144c1 <main@@Base+0xd6a1>
  4144ba:	vcvtsi2ss xmm0,xmm1,rcx
  4144bf:	jmp    4144d6 <main@@Base+0xd6b6>
  4144c1:	mov    rdx,rcx
  4144c4:	shr    rdx,1
  4144c7:	and    ecx,0x1
  4144ca:	or     rcx,rdx
  4144cd:	vcvtsi2ss xmm0,xmm1,rcx
  4144d2:	vaddss xmm0,xmm0,xmm0
  4144d6:	mov    rcx,QWORD PTR [rsp+0x20]
  4144db:	mov    rbp,QWORD PTR [rsp+0x18]
  4144e0:	mov    rdx,QWORD PTR [rsp+0x10]
  4144e5:	cmp    DWORD PTR [rsp+0xc],0x0
  4144ea:	je     4144f2 <main@@Base+0xd6d2>
  4144ec:	vxorps xmm0,xmm0,XMMWORD PTR [rsp+0x30]
  4144f2:	vaddss xmm0,xmm0,DWORD PTR [rcx]
  4144f6:	vmovss DWORD PTR [rcx],xmm0
  4144fa:	cmp    DWORD PTR [rsp+0x8],0x0
  4144ff:	mov    r12,rax
  414502:	jne    414468 <main@@Base+0xd648>
  414508:	jmp    414522 <main@@Base+0xd702>
  41450a:	mov    rax,r13
  41450d:	jmp    414522 <main@@Base+0xd702>
  41450f:	mov    ecx,0x17
  414514:	mov    rdi,r14
  414517:	mov    rsi,r12
  41451a:	mov    rdx,r13
  41451d:	call   423620 <flatcc_json_parser_set_error@@Base>
  414522:	add    rsp,0x48
  414526:	pop    rbx
  414527:	pop    r12
  414529:	pop    r13
  41452b:	pop    r14
  41452d:	pop    r15
  41452f:	pop    rbp
  414530:	ret    
  414531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41453b:	nop    DWORD PTR [rax+rax*1+0x0]
  414540:	push   rbp
  414541:	push   r15
  414543:	push   r14
  414545:	push   r13
  414547:	push   r12
  414549:	push   rbx
  41454a:	sub    rsp,0x38
  41454e:	mov    r15,r8
  414551:	mov    rbp,rcx
  414554:	mov    r13,rdx
  414557:	mov    rbx,rsi
  41455a:	mov    r14,rdi
  41455d:	mov    DWORD PTR [r8],0x0
  414564:	cmp    rsi,rdx
  414567:	je     41458a <main@@Base+0xd76a>
  414569:	cmp    BYTE PTR [rbx],0x22
  41456c:	jne    414574 <main@@Base+0xd754>
  41456e:	add    rbx,0x1
  414572:	jmp    41458a <main@@Base+0xd76a>
  414574:	mov    ecx,0x5
  414579:	mov    rdi,r14
  41457c:	mov    rsi,rbx
  41457f:	mov    rdx,r13
  414582:	call   423620 <flatcc_json_parser_set_error@@Base>
  414587:	mov    rbx,rax
  41458a:	mov    rax,r13
  41458d:	sub    rax,rbx
  414590:	cmp    rax,0x2
  414594:	jl     4145b1 <main@@Base+0xd791>
  414596:	cmp    BYTE PTR [rbx],0x20
  414599:	jg     4145c2 <main@@Base+0xd7a2>
  41459b:	jne    4145b1 <main@@Base+0xd791>
  41459d:	cmp    BYTE PTR [rbx+0x1],0x20
  4145a1:	jle    4145b1 <main@@Base+0xd791>
  4145a3:	add    rbx,0x1
  4145a7:	cmp    rbx,r13
  4145aa:	jne    4145cb <main@@Base+0xd7ab>
  4145ac:	jmp    4146b2 <main@@Base+0xd892>
  4145b1:	mov    rdi,r14
  4145b4:	mov    rsi,rbx
  4145b7:	mov    rdx,r13
  4145ba:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4145bf:	mov    rbx,rax
  4145c2:	cmp    rbx,r13
  4145c5:	je     4146b2 <main@@Base+0xd892>
  4145cb:	lea    rcx,[rbp+0x8]
  4145cf:	xor    edx,edx
  4145d1:	mov    rax,rbp
  4145d4:	lea    r12,[rsp+0x10]
  4145d9:	mov    QWORD PTR [rsp+0x18],r15
  4145de:	mov    QWORD PTR [rsp+0x20],rbp
  4145e3:	mov    QWORD PTR [rsp+0x28],rcx
  4145e8:	mov    DWORD PTR [rsp+0xc],edx
  4145ec:	mov    rbp,QWORD PTR [rax]
  4145ef:	mov    r15,rcx
  4145f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4145fc:	nop    DWORD PTR [rax+0x0]
  414600:	mov    rdi,r14
  414603:	mov    rsi,rbx
  414606:	mov    rdx,r13
  414609:	lea    rcx,[rsp+0x14]
  41460e:	lea    r8,[rsp+0x30]
  414613:	mov    r9,r12
  414616:	call   rbp
  414618:	cmp    rax,r13
  41461b:	je     4146b2 <main@@Base+0xd892>
  414621:	mov    rbp,rax
  414624:	cmp    rax,rbx
  414627:	jne    414640 <main@@Base+0xd820>
  414629:	mov    rbp,QWORD PTR [r15]
  41462c:	add    r15,0x8
  414630:	test   rbp,rbp
  414633:	jne    414600 <main@@Base+0xd7e0>
  414635:	jmp    4146b7 <main@@Base+0xd897>
  41463a:	nop    WORD PTR [rax+rax*1+0x0]
  414640:	mov    rax,QWORD PTR [rsp+0x30]
  414645:	cmp    DWORD PTR [rsp+0x14],0x0
  41464a:	je     414662 <main@@Base+0xd842>
  41464c:	mov    ecx,0x80000001
  414651:	cmp    rax,rcx
  414654:	mov    r15,QWORD PTR [rsp+0x18]
  414659:	jb     414688 <main@@Base+0xd868>
  41465b:	mov    ecx,0x8
  414660:	jmp    414674 <main@@Base+0xd854>
  414662:	test   rax,0xffffffff80000000
  414668:	mov    r15,QWORD PTR [rsp+0x18]
  41466d:	je     41468b <main@@Base+0xd86b>
  41466f:	mov    ecx,0x7
  414674:	mov    rdi,r14
  414677:	mov    rsi,rbp
  41467a:	mov    rdx,r13
  41467d:	call   423620 <flatcc_json_parser_set_error@@Base>
  414682:	mov    edx,DWORD PTR [rsp+0xc]
  414686:	jmp    414690 <main@@Base+0xd870>
  414688:	neg    rax
  41468b:	mov    edx,eax
  41468d:	mov    rax,rbp
  414690:	cmp    rax,r13
  414693:	mov    rcx,QWORD PTR [rsp+0x28]
  414698:	je     4146b2 <main@@Base+0xd892>
  41469a:	add    DWORD PTR [r15],edx
  41469d:	cmp    DWORD PTR [rsp+0x10],0x0
  4146a2:	mov    rbx,rbp
  4146a5:	mov    rax,QWORD PTR [rsp+0x20]
  4146aa:	jne    4145e8 <main@@Base+0xd7c8>
  4146b0:	jmp    4146cd <main@@Base+0xd8ad>
  4146b2:	mov    rbp,r13
  4146b5:	jmp    4146cd <main@@Base+0xd8ad>
  4146b7:	mov    ecx,0x17
  4146bc:	mov    rdi,r14
  4146bf:	mov    rsi,rbx
  4146c2:	mov    rdx,r13
  4146c5:	call   423620 <flatcc_json_parser_set_error@@Base>
  4146ca:	mov    rbp,rax
  4146cd:	mov    rax,rbp
  4146d0:	add    rsp,0x38
  4146d4:	pop    rbx
  4146d5:	pop    r12
  4146d7:	pop    r13
  4146d9:	pop    r14
  4146db:	pop    r15
  4146dd:	pop    rbp
  4146de:	ret    
  4146df:	nop
  4146e0:	push   rbp
  4146e1:	push   r15
  4146e3:	push   r14
  4146e5:	push   r13
  4146e7:	push   r12
  4146e9:	push   rbx
  4146ea:	sub    rsp,0x38
  4146ee:	mov    r15,r8
  4146f1:	mov    rbp,rcx
  4146f4:	mov    r13,rdx
  4146f7:	mov    rbx,rsi
  4146fa:	mov    r14,rdi
  4146fd:	mov    QWORD PTR [r8],0x0
  414704:	cmp    rsi,rdx
  414707:	je     41472a <main@@Base+0xd90a>
  414709:	cmp    BYTE PTR [rbx],0x22
  41470c:	jne    414714 <main@@Base+0xd8f4>
  41470e:	add    rbx,0x1
  414712:	jmp    41472a <main@@Base+0xd90a>
  414714:	mov    ecx,0x5
  414719:	mov    rdi,r14
  41471c:	mov    rsi,rbx
  41471f:	mov    rdx,r13
  414722:	call   423620 <flatcc_json_parser_set_error@@Base>
  414727:	mov    rbx,rax
  41472a:	mov    rax,r13
  41472d:	sub    rax,rbx
  414730:	cmp    rax,0x2
  414734:	jl     414751 <main@@Base+0xd931>
  414736:	cmp    BYTE PTR [rbx],0x20
  414739:	jg     414762 <main@@Base+0xd942>
  41473b:	jne    414751 <main@@Base+0xd931>
  41473d:	cmp    BYTE PTR [rbx+0x1],0x20
  414741:	jle    414751 <main@@Base+0xd931>
  414743:	add    rbx,0x1
  414747:	cmp    rbx,r13
  41474a:	jne    41476b <main@@Base+0xd94b>
  41474c:	jmp    41485e <main@@Base+0xda3e>
  414751:	mov    rdi,r14
  414754:	mov    rsi,rbx
  414757:	mov    rdx,r13
  41475a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41475f:	mov    rbx,rax
  414762:	cmp    rbx,r13
  414765:	je     41485e <main@@Base+0xda3e>
  41476b:	lea    rcx,[rbp+0x8]
  41476f:	xor    edx,edx
  414771:	mov    rax,rbp
  414774:	lea    r12,[rsp+0x8]
  414779:	mov    QWORD PTR [rsp+0x10],r15
  41477e:	mov    QWORD PTR [rsp+0x28],rbp
  414783:	mov    QWORD PTR [rsp+0x20],rcx
  414788:	mov    QWORD PTR [rsp+0x18],rdx
  41478d:	mov    rbp,QWORD PTR [rax]
  414790:	mov    r15,rcx
  414793:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41479d:	nop    DWORD PTR [rax]
  4147a0:	mov    rdi,r14
  4147a3:	mov    rsi,rbx
  4147a6:	mov    rdx,r13
  4147a9:	lea    rcx,[rsp+0xc]
  4147ae:	lea    r8,[rsp+0x30]
  4147b3:	mov    r9,r12
  4147b6:	call   rbp
  4147b8:	cmp    rax,r13
  4147bb:	je     41485e <main@@Base+0xda3e>
  4147c1:	mov    rbp,rax
  4147c4:	cmp    rax,rbx
  4147c7:	jne    4147e0 <main@@Base+0xd9c0>
  4147c9:	mov    rbp,QWORD PTR [r15]
  4147cc:	add    r15,0x8
  4147d0:	test   rbp,rbp
  4147d3:	jne    4147a0 <main@@Base+0xd980>
  4147d5:	jmp    414863 <main@@Base+0xda43>
  4147da:	nop    WORD PTR [rax+rax*1+0x0]
  4147e0:	mov    rcx,QWORD PTR [rsp+0x30]
  4147e5:	cmp    DWORD PTR [rsp+0xc],0x0
  4147ea:	je     414807 <main@@Base+0xd9e7>
  4147ec:	movabs rax,0x8000000000000001
  4147f6:	cmp    rcx,rax
  4147f9:	mov    r15,QWORD PTR [rsp+0x10]
  4147fe:	jb     414833 <main@@Base+0xda13>
  414800:	mov    ecx,0x8
  414805:	jmp    414819 <main@@Base+0xd9f9>
  414807:	mov    rax,rbp
  41480a:	test   rcx,rcx
  41480d:	mov    r15,QWORD PTR [rsp+0x10]
  414812:	jns    41482c <main@@Base+0xda0c>
  414814:	mov    ecx,0x7
  414819:	mov    rdi,r14
  41481c:	mov    rsi,rbp
  41481f:	mov    rdx,r13
  414822:	call   423620 <flatcc_json_parser_set_error@@Base>
  414827:	mov    rcx,QWORD PTR [rsp+0x18]
  41482c:	cmp    rax,r13
  41482f:	jne    41483e <main@@Base+0xda1e>
  414831:	jmp    41485e <main@@Base+0xda3e>
  414833:	neg    rcx
  414836:	mov    rax,rbp
  414839:	cmp    rax,r13
  41483c:	je     41485e <main@@Base+0xda3e>
  41483e:	add    QWORD PTR [r15],rcx
  414841:	cmp    DWORD PTR [rsp+0x8],0x0
  414846:	mov    rdx,rcx
  414849:	mov    rbx,rbp
  41484c:	mov    rax,QWORD PTR [rsp+0x28]
  414851:	mov    rcx,QWORD PTR [rsp+0x20]
  414856:	jne    414788 <main@@Base+0xd968>
  41485c:	jmp    414879 <main@@Base+0xda59>
  41485e:	mov    rbp,r13
  414861:	jmp    414879 <main@@Base+0xda59>
  414863:	mov    ecx,0x17
  414868:	mov    rdi,r14
  41486b:	mov    rsi,rbx
  41486e:	mov    rdx,r13
  414871:	call   423620 <flatcc_json_parser_set_error@@Base>
  414876:	mov    rbp,rax
  414879:	mov    rax,rbp
  41487c:	add    rsp,0x38
  414880:	pop    rbx
  414881:	pop    r12
  414883:	pop    r13
  414885:	pop    r14
  414887:	pop    r15
  414889:	pop    rbp
  41488a:	ret    
  41488b:	nop    DWORD PTR [rax+rax*1+0x0]
  414890:	push   rbp
  414891:	push   r15
  414893:	push   r14
  414895:	push   r13
  414897:	push   r12
  414899:	push   rbx
  41489a:	sub    rsp,0x38
  41489e:	mov    r15,r8
  4148a1:	mov    rbp,rcx
  4148a4:	mov    r13,rdx
  4148a7:	mov    rbx,rsi
  4148aa:	mov    r14,rdi
  4148ad:	mov    DWORD PTR [r8],0x0
  4148b4:	cmp    rsi,rdx
  4148b7:	je     4148da <main@@Base+0xdaba>
  4148b9:	cmp    BYTE PTR [rbx],0x22
  4148bc:	jne    4148c4 <main@@Base+0xdaa4>
  4148be:	add    rbx,0x1
  4148c2:	jmp    4148da <main@@Base+0xdaba>
  4148c4:	mov    ecx,0x5
  4148c9:	mov    rdi,r14
  4148cc:	mov    rsi,rbx
  4148cf:	mov    rdx,r13
  4148d2:	call   423620 <flatcc_json_parser_set_error@@Base>
  4148d7:	mov    rbx,rax
  4148da:	mov    rax,r13
  4148dd:	sub    rax,rbx
  4148e0:	cmp    rax,0x2
  4148e4:	jl     414901 <main@@Base+0xdae1>
  4148e6:	cmp    BYTE PTR [rbx],0x20
  4148e9:	jg     414912 <main@@Base+0xdaf2>
  4148eb:	jne    414901 <main@@Base+0xdae1>
  4148ed:	cmp    BYTE PTR [rbx+0x1],0x20
  4148f1:	jle    414901 <main@@Base+0xdae1>
  4148f3:	add    rbx,0x1
  4148f7:	cmp    rbx,r13
  4148fa:	jne    41491b <main@@Base+0xdafb>
  4148fc:	jmp    414a06 <main@@Base+0xdbe6>
  414901:	mov    rdi,r14
  414904:	mov    rsi,rbx
  414907:	mov    rdx,r13
  41490a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41490f:	mov    rbx,rax
  414912:	cmp    rbx,r13
  414915:	je     414a06 <main@@Base+0xdbe6>
  41491b:	lea    rcx,[rbp+0x8]
  41491f:	mov    DWORD PTR [rsp+0xc],0x0
  414927:	mov    rax,rbp
  41492a:	lea    r12,[rsp+0x10]
  41492f:	mov    QWORD PTR [rsp+0x18],r15
  414934:	mov    QWORD PTR [rsp+0x20],rbp
  414939:	mov    QWORD PTR [rsp+0x28],rcx
  41493e:	mov    rbp,QWORD PTR [rax]
  414941:	mov    r15,rcx
  414944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41494e:	xchg   ax,ax
  414950:	mov    rdi,r14
  414953:	mov    rsi,rbx
  414956:	mov    rdx,r13
  414959:	lea    rcx,[rsp+0x14]
  41495e:	lea    r8,[rsp+0x30]
  414963:	mov    r9,r12
  414966:	call   rbp
  414968:	cmp    rax,r13
  41496b:	je     414a06 <main@@Base+0xdbe6>
  414971:	mov    rbp,rax
  414974:	cmp    rax,rbx
  414977:	jne    414990 <main@@Base+0xdb70>
  414979:	mov    rbp,QWORD PTR [r15]
  41497c:	add    r15,0x8
  414980:	test   rbp,rbp
  414983:	jne    414950 <main@@Base+0xdb30>
  414985:	jmp    414a0b <main@@Base+0xdbeb>
  41498a:	nop    WORD PTR [rax+rax*1+0x0]
  414990:	cmp    DWORD PTR [rsp+0x14],0x0
  414995:	je     4149b1 <main@@Base+0xdb91>
  414997:	mov    ecx,0x8
  41499c:	mov    rdi,r14
  41499f:	mov    rsi,rbp
  4149a2:	mov    rdx,r13
  4149a5:	call   423620 <flatcc_json_parser_set_error@@Base>
  4149aa:	mov    r15,QWORD PTR [rsp+0x18]
  4149af:	jmp    4149e0 <main@@Base+0xdbc0>
  4149b1:	mov    rax,QWORD PTR [rsp+0x30]
  4149b6:	mov    rcx,rax
  4149b9:	shr    rcx,0x20
  4149bd:	mov    r15,QWORD PTR [rsp+0x18]
  4149c2:	je     4149d9 <main@@Base+0xdbb9>
  4149c4:	mov    ecx,0x7
  4149c9:	mov    rdi,r14
  4149cc:	mov    rsi,rbp
  4149cf:	mov    rdx,r13
  4149d2:	call   423620 <flatcc_json_parser_set_error@@Base>
  4149d7:	jmp    4149e0 <main@@Base+0xdbc0>
  4149d9:	mov    DWORD PTR [rsp+0xc],eax
  4149dd:	mov    rax,rbp
  4149e0:	cmp    rax,r13
  4149e3:	mov    rcx,QWORD PTR [rsp+0x28]
  4149e8:	je     414a06 <main@@Base+0xdbe6>
  4149ea:	mov    eax,DWORD PTR [rsp+0xc]
  4149ee:	add    DWORD PTR [r15],eax
  4149f1:	cmp    DWORD PTR [rsp+0x10],0x0
  4149f6:	mov    rbx,rbp
  4149f9:	mov    rax,QWORD PTR [rsp+0x20]
  4149fe:	jne    41493e <main@@Base+0xdb1e>
  414a04:	jmp    414a21 <main@@Base+0xdc01>
  414a06:	mov    rbp,r13
  414a09:	jmp    414a21 <main@@Base+0xdc01>
  414a0b:	mov    ecx,0x17
  414a10:	mov    rdi,r14
  414a13:	mov    rsi,rbx
  414a16:	mov    rdx,r13
  414a19:	call   423620 <flatcc_json_parser_set_error@@Base>
  414a1e:	mov    rbp,rax
  414a21:	mov    rax,rbp
  414a24:	add    rsp,0x38
  414a28:	pop    rbx
  414a29:	pop    r12
  414a2b:	pop    r13
  414a2d:	pop    r14
  414a2f:	pop    r15
  414a31:	pop    rbp
  414a32:	ret    
  414a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a3d:	nop    DWORD PTR [rax]
  414a40:	push   rbp
  414a41:	push   r15
  414a43:	push   r14
  414a45:	push   r13
  414a47:	push   r12
  414a49:	push   rbx
  414a4a:	sub    rsp,0x38
  414a4e:	mov    r15,r8
  414a51:	mov    rbp,rcx
  414a54:	mov    r13,rdx
  414a57:	mov    rbx,rsi
  414a5a:	mov    r14,rdi
  414a5d:	mov    QWORD PTR [r8],0x0
  414a64:	cmp    rsi,rdx
  414a67:	je     414a8a <main@@Base+0xdc6a>
  414a69:	cmp    BYTE PTR [rbx],0x22
  414a6c:	jne    414a74 <main@@Base+0xdc54>
  414a6e:	add    rbx,0x1
  414a72:	jmp    414a8a <main@@Base+0xdc6a>
  414a74:	mov    ecx,0x5
  414a79:	mov    rdi,r14
  414a7c:	mov    rsi,rbx
  414a7f:	mov    rdx,r13
  414a82:	call   423620 <flatcc_json_parser_set_error@@Base>
  414a87:	mov    rbx,rax
  414a8a:	mov    rax,r13
  414a8d:	sub    rax,rbx
  414a90:	cmp    rax,0x2
  414a94:	jl     414ab1 <main@@Base+0xdc91>
  414a96:	cmp    BYTE PTR [rbx],0x20
  414a99:	jg     414ac2 <main@@Base+0xdca2>
  414a9b:	jne    414ab1 <main@@Base+0xdc91>
  414a9d:	cmp    BYTE PTR [rbx+0x1],0x20
  414aa1:	jle    414ab1 <main@@Base+0xdc91>
  414aa3:	add    rbx,0x1
  414aa7:	cmp    rbx,r13
  414aaa:	jne    414acb <main@@Base+0xdcab>
  414aac:	jmp    414b95 <main@@Base+0xdd75>
  414ab1:	mov    rdi,r14
  414ab4:	mov    rsi,rbx
  414ab7:	mov    rdx,r13
  414aba:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  414abf:	mov    rbx,rax
  414ac2:	cmp    rbx,r13
  414ac5:	je     414b95 <main@@Base+0xdd75>
  414acb:	lea    rcx,[rbp+0x8]
  414acf:	xor    eax,eax
  414ad1:	mov    QWORD PTR [rsp+0x20],rax
  414ad6:	mov    rax,rbp
  414ad9:	lea    r12,[rsp+0x8]
  414ade:	mov    QWORD PTR [rsp+0x18],r15
  414ae3:	mov    QWORD PTR [rsp+0x28],rbp
  414ae8:	mov    QWORD PTR [rsp+0x10],rcx
  414aed:	mov    rbp,QWORD PTR [rax]
  414af0:	mov    r15,rcx
  414af3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414afd:	nop    DWORD PTR [rax]
  414b00:	mov    rdi,r14
  414b03:	mov    rsi,rbx
  414b06:	mov    rdx,r13
  414b09:	lea    rcx,[rsp+0xc]
  414b0e:	lea    r8,[rsp+0x30]
  414b13:	mov    r9,r12
  414b16:	call   rbp
  414b18:	cmp    rax,r13
  414b1b:	je     414b95 <main@@Base+0xdd75>
  414b1d:	mov    rbp,rax
  414b20:	cmp    rax,rbx
  414b23:	jne    414b40 <main@@Base+0xdd20>
  414b25:	mov    rbp,QWORD PTR [r15]
  414b28:	add    r15,0x8
  414b2c:	test   rbp,rbp
  414b2f:	jne    414b00 <main@@Base+0xdce0>
  414b31:	jmp    414b9a <main@@Base+0xdd7a>
  414b33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b3d:	nop    DWORD PTR [rax]
  414b40:	cmp    DWORD PTR [rsp+0xc],0x0
  414b45:	je     414b5c <main@@Base+0xdd3c>
  414b47:	mov    ecx,0x8
  414b4c:	mov    rdi,r14
  414b4f:	mov    rsi,rbp
  414b52:	mov    rdx,r13
  414b55:	call   423620 <flatcc_json_parser_set_error@@Base>
  414b5a:	jmp    414b69 <main@@Base+0xdd49>
  414b5c:	mov    rax,QWORD PTR [rsp+0x30]
  414b61:	mov    QWORD PTR [rsp+0x20],rax
  414b66:	mov    rax,rbp
  414b69:	mov    r15,QWORD PTR [rsp+0x18]
  414b6e:	mov    rcx,QWORD PTR [rsp+0x10]
  414b73:	cmp    rax,r13
  414b76:	je     414b95 <main@@Base+0xdd75>
  414b78:	mov    rax,QWORD PTR [rsp+0x20]
  414b7d:	add    QWORD PTR [r15],rax
  414b80:	cmp    DWORD PTR [rsp+0x8],0x0
  414b85:	mov    rbx,rbp
  414b88:	mov    rax,QWORD PTR [rsp+0x28]
  414b8d:	jne    414aed <main@@Base+0xdccd>
  414b93:	jmp    414bb0 <main@@Base+0xdd90>
  414b95:	mov    rbp,r13
  414b98:	jmp    414bb0 <main@@Base+0xdd90>
  414b9a:	mov    ecx,0x17
  414b9f:	mov    rdi,r14
  414ba2:	mov    rsi,rbx
  414ba5:	mov    rdx,r13
  414ba8:	call   423620 <flatcc_json_parser_set_error@@Base>
  414bad:	mov    rbp,rax
  414bb0:	mov    rax,rbp
  414bb3:	add    rsp,0x38
  414bb7:	pop    rbx
  414bb8:	pop    r12
  414bba:	pop    r13
  414bbc:	pop    r14
  414bbe:	pop    r15
  414bc0:	pop    rbp
  414bc1:	ret    
  414bc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bcc:	nop    DWORD PTR [rax+0x0]
  414bd0:	push   rbp
  414bd1:	push   r15
  414bd3:	push   r14
  414bd5:	push   r13
  414bd7:	push   r12
  414bd9:	push   rbx
  414bda:	sub    rsp,0x28
  414bde:	mov    rbx,r8
  414be1:	mov    rbp,rcx
  414be4:	mov    r13,rdx
  414be7:	mov    r12,rsi
  414bea:	mov    r14,rdi
  414bed:	mov    QWORD PTR [r8],0x0
  414bf4:	cmp    rsi,rdx
  414bf7:	je     414c1c <main@@Base+0xddfc>
  414bf9:	cmp    BYTE PTR [r12],0x22
  414bfe:	jne    414c06 <main@@Base+0xdde6>
  414c00:	add    r12,0x1
  414c04:	jmp    414c1c <main@@Base+0xddfc>
  414c06:	mov    ecx,0x5
  414c0b:	mov    rdi,r14
  414c0e:	mov    rsi,r12
  414c11:	mov    rdx,r13
  414c14:	call   423620 <flatcc_json_parser_set_error@@Base>
  414c19:	mov    r12,rax
  414c1c:	mov    rax,r13
  414c1f:	sub    rax,r12
  414c22:	cmp    rax,0x2
  414c26:	jl     414c47 <main@@Base+0xde27>
  414c28:	cmp    BYTE PTR [r12],0x20
  414c2d:	jg     414c58 <main@@Base+0xde38>
  414c2f:	jne    414c47 <main@@Base+0xde27>
  414c31:	cmp    BYTE PTR [r12+0x1],0x20
  414c37:	jle    414c47 <main@@Base+0xde27>
  414c39:	add    r12,0x1
  414c3d:	cmp    r12,r13
  414c40:	jne    414c61 <main@@Base+0xde41>
  414c42:	jmp    414d0f <main@@Base+0xdeef>
  414c47:	mov    rdi,r14
  414c4a:	mov    rsi,r12
  414c4d:	mov    rdx,r13
  414c50:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  414c55:	mov    r12,rax
  414c58:	cmp    r12,r13
  414c5b:	je     414d0f <main@@Base+0xdeef>
  414c61:	mov    QWORD PTR [rsp+0x18],rbx
  414c66:	lea    rcx,[rbp+0x8]
  414c6a:	mov    r15,rsp
  414c6d:	mov    QWORD PTR [rsp+0x10],rbp
  414c72:	mov    QWORD PTR [rsp+0x8],rcx
  414c77:	mov    rbx,QWORD PTR [rbp+0x0]
  414c7b:	mov    rbp,rcx
  414c7e:	xchg   ax,ax
  414c80:	mov    rdi,r14
  414c83:	mov    rsi,r12
  414c86:	mov    rdx,r13
  414c89:	lea    rcx,[rsp+0x4]
  414c8e:	lea    r8,[rsp+0x20]
  414c93:	mov    r9,r15
  414c96:	call   rbx
  414c98:	cmp    rax,r13
  414c9b:	je     414d0f <main@@Base+0xdeef>
  414c9d:	cmp    rax,r12
  414ca0:	jne    414cc0 <main@@Base+0xdea0>
  414ca2:	mov    rbx,QWORD PTR [rbp+0x0]
  414ca6:	add    rbp,0x8
  414caa:	test   rbx,rbx
  414cad:	jne    414c80 <main@@Base+0xde60>
  414caf:	jmp    414d14 <main@@Base+0xdef4>
  414cb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  414cc0:	cmp    DWORD PTR [rsp+0x4],0x0
  414cc5:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  414ccb:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x1ef5d]        # 433c30 <_IO_stdin_used@@Base+0xc30>
  414cd3:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1ef65]        # 433c40 <_IO_stdin_used@@Base+0xc40>
  414cdb:	vhaddpd xmm0,xmm0,xmm0
  414cdf:	je     414ce9 <main@@Base+0xdec9>
  414ce1:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x1ef67]        # 433c50 <_IO_stdin_used@@Base+0xc50>
  414ce9:	mov    rcx,QWORD PTR [rsp+0x18]
  414cee:	vaddsd xmm0,xmm0,QWORD PTR [rcx]
  414cf2:	vmovsd QWORD PTR [rcx],xmm0
  414cf6:	cmp    DWORD PTR [rsp],0x0
  414cfa:	mov    r12,rax
  414cfd:	mov    rbp,QWORD PTR [rsp+0x10]
  414d02:	mov    rcx,QWORD PTR [rsp+0x8]
  414d07:	jne    414c77 <main@@Base+0xde57>
  414d0d:	jmp    414d27 <main@@Base+0xdf07>
  414d0f:	mov    rax,r13
  414d12:	jmp    414d27 <main@@Base+0xdf07>
  414d14:	mov    ecx,0x17
  414d19:	mov    rdi,r14
  414d1c:	mov    rsi,r12
  414d1f:	mov    rdx,r13
  414d22:	call   423620 <flatcc_json_parser_set_error@@Base>
  414d27:	add    rsp,0x28
  414d2b:	pop    rbx
  414d2c:	pop    r12
  414d2e:	pop    r13
  414d30:	pop    r14
  414d32:	pop    r15
  414d34:	pop    rbp
  414d35:	ret    
  414d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d40:	push   r15
  414d42:	push   r14
  414d44:	push   r12
  414d46:	push   rbx
  414d47:	push   rax
  414d48:	mov    r15,r8
  414d4b:	mov    r14,rcx
  414d4e:	mov    rbx,rsi
  414d51:	mov    rcx,rdx
  414d54:	sub    rcx,rsi
  414d57:	cmp    rcx,0x8
  414d5b:	jb     414d64 <main@@Base+0xdf44>
  414d5d:	movbe  rcx,QWORD PTR [rbx]
  414d62:	jmp    414ddf <main@@Base+0xdfbf>
  414d64:	and    cl,0xf
  414d67:	add    cl,0xff
  414d6a:	cmp    cl,0x7
  414d6d:	ja     414f91 <main@@Base+0xe171>
  414d73:	xor    eax,eax
  414d75:	movzx  ecx,cl
  414d78:	lea    rsi,[rip+0x1e8d5]        # 433654 <_IO_stdin_used@@Base+0x654>
  414d7f:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  414d83:	add    rcx,rsi
  414d86:	jmp    rcx
  414d88:	movsx  rax,BYTE PTR [rbx+0x7]
  414d8d:	movsx  rcx,BYTE PTR [rbx+0x6]
  414d92:	shl    rcx,0x8
  414d96:	or     rax,rcx
  414d99:	movsx  rcx,BYTE PTR [rbx+0x5]
  414d9e:	shl    rcx,0x10
  414da2:	or     rax,rcx
  414da5:	movsx  rcx,BYTE PTR [rbx+0x4]
  414daa:	shl    rcx,0x18
  414dae:	or     rax,rcx
  414db1:	movsx  rcx,BYTE PTR [rbx+0x3]
  414db6:	shl    rcx,0x20
  414dba:	or     rax,rcx
  414dbd:	movsx  rcx,BYTE PTR [rbx+0x2]
  414dc2:	shl    rcx,0x28
  414dc6:	or     rax,rcx
  414dc9:	movsx  rcx,BYTE PTR [rbx+0x1]
  414dce:	shl    rcx,0x30
  414dd2:	or     rax,rcx
  414dd5:	movzx  ecx,BYTE PTR [rbx]
  414dd8:	shl    rcx,0x38
  414ddc:	or     rcx,rax
  414ddf:	movabs rax,0x496e506172656e74
  414de9:	cmp    rcx,rax
  414dec:	jne    414e08 <main@@Base+0xdfe8>
  414dee:	lea    rax,[rbx+0x8]
  414df2:	mov    rsi,rdx
  414df5:	sub    rsi,rax
  414df8:	cmp    rsi,0x8
  414dfc:	jb     414e39 <main@@Base+0xe019>
  414dfe:	movbe  rax,QWORD PTR [rax]
  414e03:	jmp    414eb8 <main@@Base+0xe098>
  414e08:	shr    rcx,0x20
  414e0c:	cmp    rcx,0x4e4f4e45
  414e13:	jne    414f91 <main@@Base+0xe171>
  414e19:	mov    ecx,0x4
  414e1e:	mov    rsi,rbx
  414e21:	mov    r8,r9
  414e24:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  414e29:	cmp    rax,rbx
  414e2c:	je     414f91 <main@@Base+0xe171>
  414e32:	xor    ecx,ecx
  414e34:	jmp    414f84 <main@@Base+0xe164>
  414e39:	and    sil,0xf
  414e3d:	add    sil,0xff
  414e41:	cmp    sil,0x7
  414e45:	ja     414f91 <main@@Base+0xe171>
  414e4b:	xor    ecx,ecx
  414e4d:	movzx  esi,sil
  414e51:	lea    r8,[rip+0x1e81c]        # 433674 <_IO_stdin_used@@Base+0x674>
  414e58:	movsxd rsi,DWORD PTR [r8+rsi*4]
  414e5c:	add    rsi,r8
  414e5f:	jmp    rsi
  414e61:	movsx  rcx,BYTE PTR [rbx+0xf]
  414e66:	movsx  rsi,BYTE PTR [rbx+0xe]
  414e6b:	shl    rsi,0x8
  414e6f:	or     rcx,rsi
  414e72:	movsx  rsi,BYTE PTR [rbx+0xd]
  414e77:	shl    rsi,0x10
  414e7b:	or     rcx,rsi
  414e7e:	movsx  rsi,BYTE PTR [rbx+0xc]
  414e83:	shl    rsi,0x18
  414e87:	or     rcx,rsi
  414e8a:	movsx  rsi,BYTE PTR [rbx+0xb]
  414e8f:	shl    rsi,0x20
  414e93:	or     rcx,rsi
  414e96:	movsx  rsi,BYTE PTR [rbx+0xa]
  414e9b:	shl    rsi,0x28
  414e9f:	or     rcx,rsi
  414ea2:	movsx  rsi,BYTE PTR [rbx+0x9]
  414ea7:	shl    rsi,0x30
  414eab:	or     rcx,rsi
  414eae:	movzx  eax,BYTE PTR [rax]
  414eb1:	shl    rax,0x38
  414eb5:	or     rax,rcx
  414eb8:	movabs rcx,0x4e616d6573706163
  414ec2:	cmp    rax,rcx
  414ec5:	jne    414f91 <main@@Base+0xe171>
  414ecb:	lea    r12,[rbx+0x10]
  414ecf:	mov    rcx,rdx
  414ed2:	sub    rcx,r12
  414ed5:	cmp    rcx,0x8
  414ed9:	jb     414ee3 <main@@Base+0xe0c3>
  414edb:	movbe  rcx,QWORD PTR [r12]
  414ee1:	jmp    414f60 <main@@Base+0xe140>
  414ee3:	and    cl,0xf
  414ee6:	add    cl,0xff
  414ee9:	cmp    cl,0x7
  414eec:	ja     414f91 <main@@Base+0xe171>
  414ef2:	xor    eax,eax
  414ef4:	movzx  ecx,cl
  414ef7:	lea    rsi,[rip+0x1e796]        # 433694 <_IO_stdin_used@@Base+0x694>
  414efe:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  414f02:	add    rcx,rsi
  414f05:	jmp    rcx
  414f07:	movsx  rax,BYTE PTR [rbx+0x17]
  414f0c:	movsx  rcx,BYTE PTR [rbx+0x16]
  414f11:	shl    rcx,0x8
  414f15:	or     rax,rcx
  414f18:	movsx  rcx,BYTE PTR [rbx+0x15]
  414f1d:	shl    rcx,0x10
  414f21:	or     rax,rcx
  414f24:	movsx  rcx,BYTE PTR [rbx+0x14]
  414f29:	shl    rcx,0x18
  414f2d:	or     rax,rcx
  414f30:	movsx  rcx,BYTE PTR [rbx+0x13]
  414f35:	shl    rcx,0x20
  414f39:	or     rax,rcx
  414f3c:	movsx  rcx,BYTE PTR [rbx+0x12]
  414f41:	shl    rcx,0x28
  414f45:	or     rax,rcx
  414f48:	movsx  rcx,BYTE PTR [rbx+0x11]
  414f4d:	shl    rcx,0x30
  414f51:	or     rax,rcx
  414f54:	movzx  ecx,BYTE PTR [r12]
  414f59:	shl    rcx,0x38
  414f5d:	or     rcx,rax
  414f60:	shr    rcx,0x38
  414f64:	cmp    rcx,0x65
  414f68:	jne    414f91 <main@@Base+0xe171>
  414f6a:	mov    ecx,0x1
  414f6f:	mov    rsi,r12
  414f72:	mov    r8,r9
  414f75:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  414f7a:	cmp    rax,r12
  414f7d:	je     414f91 <main@@Base+0xe171>
  414f7f:	mov    ecx,0x1
  414f84:	mov    rbx,rax
  414f87:	mov    QWORD PTR [r15],rcx
  414f8a:	mov    DWORD PTR [r14],0x0
  414f91:	mov    rax,rbx
  414f94:	add    rsp,0x8
  414f98:	pop    rbx
  414f99:	pop    r12
  414f9b:	pop    r14
  414f9d:	pop    r15
  414f9f:	ret    
  414fa0:	push   r15
  414fa2:	push   r14
  414fa4:	push   rbx
  414fa5:	mov    r15,r8
  414fa8:	mov    r14,rcx
  414fab:	mov    rbx,rsi
  414fae:	mov    rcx,rdx
  414fb1:	sub    rcx,rsi
  414fb4:	cmp    rcx,0x8
  414fb8:	jb     414fc1 <main@@Base+0xe1a1>
  414fba:	movbe  rcx,QWORD PTR [rbx]
  414fbf:	jmp    41503c <main@@Base+0xe21c>
  414fc1:	and    cl,0xf
  414fc4:	add    cl,0xff
  414fc7:	cmp    cl,0x7
  414fca:	ja     4150fb <main@@Base+0xe2db>
  414fd0:	xor    eax,eax
  414fd2:	movzx  ecx,cl
  414fd5:	lea    rsi,[rip+0x1e6d8]        # 4336b4 <_IO_stdin_used@@Base+0x6b4>
  414fdc:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  414fe0:	add    rcx,rsi
  414fe3:	jmp    rcx
  414fe5:	movsx  rax,BYTE PTR [rbx+0x7]
  414fea:	movsx  rcx,BYTE PTR [rbx+0x6]
  414fef:	shl    rcx,0x8
  414ff3:	or     rax,rcx
  414ff6:	movsx  rcx,BYTE PTR [rbx+0x5]
  414ffb:	shl    rcx,0x10
  414fff:	or     rax,rcx
  415002:	movsx  rcx,BYTE PTR [rbx+0x4]
  415007:	shl    rcx,0x18
  41500b:	or     rax,rcx
  41500e:	movsx  rcx,BYTE PTR [rbx+0x3]
  415013:	shl    rcx,0x20
  415017:	or     rax,rcx
  41501a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41501f:	shl    rcx,0x28
  415023:	or     rax,rcx
  415026:	movsx  rcx,BYTE PTR [rbx+0x1]
  41502b:	shl    rcx,0x30
  41502f:	or     rax,rcx
  415032:	movzx  ecx,BYTE PTR [rbx]
  415035:	shl    rcx,0x38
  415039:	or     rcx,rax
  41503c:	mov    rax,rcx
  41503f:	shr    rax,0x21
  415043:	cmp    rax,0x3432bc18
  415049:	ja     41507e <main@@Base+0xe25e>
  41504b:	shr    rcx,0x20
  41504f:	cmp    rcx,0x68657831
  415056:	jne    4150fb <main@@Base+0xe2db>
  41505c:	mov    ecx,0x4
  415061:	mov    rsi,rbx
  415064:	mov    r8,r9
  415067:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41506c:	cmp    rax,rbx
  41506f:	je     4150fb <main@@Base+0xe2db>
  415075:	mov    QWORD PTR [r15],0x3
  41507c:	jmp    4150f1 <main@@Base+0xe2d1>
  41507e:	mov    rax,rcx
  415081:	shr    rax,0x10
  415085:	movabs rsi,0x6865786e6567
  41508f:	cmp    rax,rsi
  415092:	jne    4150b9 <main@@Base+0xe299>
  415094:	mov    ecx,0x6
  415099:	mov    rsi,rbx
  41509c:	mov    r8,r9
  41509f:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4150a4:	cmp    rax,rbx
  4150a7:	je     4150fb <main@@Base+0xe2db>
  4150a9:	mov    QWORD PTR [r15],0xfffffffffffffffe
  4150b0:	mov    DWORD PTR [r14],0x1
  4150b7:	jmp    4150f8 <main@@Base+0xe2d8>
  4150b9:	movabs rax,0x6865783200000000
  4150c3:	movabs rsi,0xffffffff00000000
  4150cd:	and    rcx,rsi
  4150d0:	cmp    rcx,rax
  4150d3:	jne    4150fb <main@@Base+0xe2db>
  4150d5:	mov    ecx,0x4
  4150da:	mov    rsi,rbx
  4150dd:	mov    r8,r9
  4150e0:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4150e5:	cmp    rax,rbx
  4150e8:	je     4150fb <main@@Base+0xe2db>
  4150ea:	mov    QWORD PTR [r15],0x7eafbeaf
  4150f1:	mov    DWORD PTR [r14],0x0
  4150f8:	mov    rbx,rax
  4150fb:	mov    rax,rbx
  4150fe:	pop    rbx
  4150ff:	pop    r14
  415101:	pop    r15
  415103:	ret    
  415104:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41510e:	xchg   ax,ax
  415110:	push   r15
  415112:	push   r14
  415114:	push   rbx
  415115:	mov    r15,r8
  415118:	mov    r14,rcx
  41511b:	mov    rbx,rsi
  41511e:	mov    rcx,rdx
  415121:	sub    rcx,rsi
  415124:	cmp    rcx,0x8
  415128:	jb     415131 <main@@Base+0xe311>
  41512a:	movbe  rcx,QWORD PTR [rbx]
  41512f:	jmp    4151ac <main@@Base+0xe38c>
  415131:	and    cl,0xf
  415134:	add    cl,0xff
  415137:	cmp    cl,0x7
  41513a:	ja     4152b2 <main@@Base+0xe492>
  415140:	xor    eax,eax
  415142:	movzx  ecx,cl
  415145:	lea    rsi,[rip+0x1e588]        # 4336d4 <_IO_stdin_used@@Base+0x6d4>
  41514c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  415150:	add    rcx,rsi
  415153:	jmp    rcx
  415155:	movsx  rax,BYTE PTR [rbx+0x7]
  41515a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41515f:	shl    rcx,0x8
  415163:	or     rax,rcx
  415166:	movsx  rcx,BYTE PTR [rbx+0x5]
  41516b:	shl    rcx,0x10
  41516f:	or     rax,rcx
  415172:	movsx  rcx,BYTE PTR [rbx+0x4]
  415177:	shl    rcx,0x18
  41517b:	or     rax,rcx
  41517e:	movsx  rcx,BYTE PTR [rbx+0x3]
  415183:	shl    rcx,0x20
  415187:	or     rax,rcx
  41518a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41518f:	shl    rcx,0x28
  415193:	or     rax,rcx
  415196:	movsx  rcx,BYTE PTR [rbx+0x1]
  41519b:	shl    rcx,0x30
  41519f:	or     rax,rcx
  4151a2:	movzx  ecx,BYTE PTR [rbx]
  4151a5:	shl    rcx,0x38
  4151a9:	or     rcx,rax
  4151ac:	mov    rax,rcx
  4151af:	shr    rax,0x21
  4151b3:	cmp    rax,0x34b73a18
  4151b9:	ja     4151f8 <main@@Base+0xe3d8>
  4151bb:	shr    rcx,0x20
  4151bf:	cmp    rcx,0x696e7431
  4151c6:	jne    4152b2 <main@@Base+0xe492>
  4151cc:	mov    ecx,0x4
  4151d1:	mov    rsi,rbx
  4151d4:	mov    r8,r9
  4151d7:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4151dc:	cmp    rax,rbx
  4151df:	je     4152b2 <main@@Base+0xe492>
  4151e5:	mov    QWORD PTR [r15],0x2
  4151ec:	mov    DWORD PTR [r14],0x0
  4151f3:	jmp    4152af <main@@Base+0xe48f>
  4151f8:	movabs r8,0x696e746e65670000
  415202:	cmp    rcx,r8
  415205:	jae    41524c <main@@Base+0xe42c>
  415207:	movabs rax,0x696e743200000000
  415211:	movabs rsi,0xffffffff00000000
  41521b:	and    rcx,rsi
  41521e:	cmp    rcx,rax
  415221:	jne    4152b2 <main@@Base+0xe492>
  415227:	mov    ecx,0x4
  41522c:	mov    rsi,rbx
  41522f:	mov    r8,r9
  415232:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  415237:	cmp    rax,rbx
  41523a:	je     4152b2 <main@@Base+0xe492>
  41523c:	mov    QWORD PTR [r15],0x2a
  415243:	mov    DWORD PTR [r14],0x0
  41524a:	jmp    4152af <main@@Base+0xe48f>
  41524c:	mov    rsi,rcx
  41524f:	and    rsi,0xffffffffffffff00
  415256:	lea    rax,[r8+0x3200]
  41525d:	cmp    rsi,rax
  415260:	jne    415280 <main@@Base+0xe460>
  415262:	mov    ecx,0x7
  415267:	mov    rsi,rbx
  41526a:	mov    r8,r9
  41526d:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  415272:	cmp    rax,rbx
  415275:	je     4152b2 <main@@Base+0xe492>
  415277:	mov    QWORD PTR [r15],0xffffffffffffffff
  41527e:	jmp    4152a8 <main@@Base+0xe488>
  415280:	and    rcx,0xffffffffffff0000
  415287:	cmp    rcx,r8
  41528a:	jne    4152b2 <main@@Base+0xe492>
  41528c:	mov    ecx,0x6
  415291:	mov    rsi,rbx
  415294:	mov    r8,r9
  415297:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41529c:	cmp    rax,rbx
  41529f:	je     4152b2 <main@@Base+0xe492>
  4152a1:	mov    QWORD PTR [r15],0xfffffffffffffffe
  4152a8:	mov    DWORD PTR [r14],0x1
  4152af:	mov    rbx,rax
  4152b2:	mov    rax,rbx
  4152b5:	pop    rbx
  4152b6:	pop    r14
  4152b8:	pop    r15
  4152ba:	ret    
  4152bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4152c0:	push   r15
  4152c2:	push   r14
  4152c4:	push   rbx
  4152c5:	mov    r15,r8
  4152c8:	mov    r14,rcx
  4152cb:	mov    rbx,rsi
  4152ce:	mov    rcx,rdx
  4152d1:	sub    rcx,rsi
  4152d4:	cmp    rcx,0x8
  4152d8:	jb     4152e1 <main@@Base+0xe4c1>
  4152da:	movbe  rcx,QWORD PTR [rbx]
  4152df:	jmp    41535c <main@@Base+0xe53c>
  4152e1:	and    cl,0xf
  4152e4:	add    cl,0xff
  4152e7:	cmp    cl,0x7
  4152ea:	ja     41540c <main@@Base+0xe5ec>
  4152f0:	xor    eax,eax
  4152f2:	movzx  ecx,cl
  4152f5:	lea    rsi,[rip+0x1e3f8]        # 4336f4 <_IO_stdin_used@@Base+0x6f4>
  4152fc:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  415300:	add    rcx,rsi
  415303:	jmp    rcx
  415305:	movsx  rax,BYTE PTR [rbx+0x7]
  41530a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41530f:	shl    rcx,0x8
  415313:	or     rax,rcx
  415316:	movsx  rcx,BYTE PTR [rbx+0x5]
  41531b:	shl    rcx,0x10
  41531f:	or     rax,rcx
  415322:	movsx  rcx,BYTE PTR [rbx+0x4]
  415327:	shl    rcx,0x18
  41532b:	or     rax,rcx
  41532e:	movsx  rcx,BYTE PTR [rbx+0x3]
  415333:	shl    rcx,0x20
  415337:	or     rax,rcx
  41533a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41533f:	shl    rcx,0x28
  415343:	or     rax,rcx
  415346:	movsx  rcx,BYTE PTR [rbx+0x1]
  41534b:	shl    rcx,0x30
  41534f:	or     rax,rcx
  415352:	movzx  ecx,BYTE PTR [rbx]
  415355:	shl    rcx,0x38
  415359:	or     rcx,rax
  41535c:	mov    rsi,rcx
  41535f:	shr    rsi,0x21
  415363:	movabs rax,0xffffffff00000000
  41536d:	and    rax,rcx
  415370:	cmp    rsi,0x3732b398
  415377:	ja     4153aa <main@@Base+0xe58a>
  415379:	movabs rcx,0x6e65673100000000
  415383:	cmp    rax,rcx
  415386:	jne    41540c <main@@Base+0xe5ec>
  41538c:	mov    ecx,0x4
  415391:	mov    rsi,rbx
  415394:	mov    r8,r9
  415397:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41539c:	cmp    rax,rbx
  41539f:	je     41540c <main@@Base+0xe5ec>
  4153a1:	mov    QWORD PTR [r15],0xfffffffffffffff4
  4153a8:	jmp    415402 <main@@Base+0xe5e2>
  4153aa:	movabs rcx,0x6e65673200000000
  4153b4:	cmp    rax,rcx
  4153b7:	je     4153e6 <main@@Base+0xe5c6>
  4153b9:	movabs rcx,0x6e65673300000000
  4153c3:	cmp    rax,rcx
  4153c6:	jne    41540c <main@@Base+0xe5ec>
  4153c8:	mov    ecx,0x4
  4153cd:	mov    rsi,rbx
  4153d0:	mov    r8,r9
  4153d3:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4153d8:	cmp    rax,rbx
  4153db:	je     41540c <main@@Base+0xe5ec>
  4153dd:	mov    QWORD PTR [r15],0xfffffffffffffff6
  4153e4:	jmp    415402 <main@@Base+0xe5e2>
  4153e6:	mov    ecx,0x4
  4153eb:	mov    rsi,rbx
  4153ee:	mov    r8,r9
  4153f1:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4153f6:	cmp    rax,rbx
  4153f9:	je     41540c <main@@Base+0xe5ec>
  4153fb:	mov    QWORD PTR [r15],0xfffffffffffffff5
  415402:	mov    DWORD PTR [r14],0x1
  415409:	mov    rbx,rax
  41540c:	mov    rax,rbx
  41540f:	pop    rbx
  415410:	pop    r14
  415412:	pop    r15
  415414:	ret    
  415415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41541f:	nop
  415420:	push   r15
  415422:	push   r14
  415424:	push   rbx
  415425:	mov    r15,r8
  415428:	mov    r14,rcx
  41542b:	mov    rbx,rsi
  41542e:	mov    rcx,rdx
  415431:	sub    rcx,rsi
  415434:	cmp    rcx,0x8
  415438:	jb     415441 <main@@Base+0xe621>
  41543a:	movbe  rcx,QWORD PTR [rbx]
  41543f:	jmp    4154bc <main@@Base+0xe69c>
  415441:	and    cl,0xf
  415444:	add    cl,0xff
  415447:	cmp    cl,0x7
  41544a:	ja     415672 <main@@Base+0xe852>
  415450:	xor    eax,eax
  415452:	movzx  ecx,cl
  415455:	lea    rsi,[rip+0x1e2b8]        # 433714 <_IO_stdin_used@@Base+0x714>
  41545c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  415460:	add    rcx,rsi
  415463:	jmp    rcx
  415465:	movsx  rax,BYTE PTR [rbx+0x7]
  41546a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41546f:	shl    rcx,0x8
  415473:	or     rax,rcx
  415476:	movsx  rcx,BYTE PTR [rbx+0x5]
  41547b:	shl    rcx,0x10
  41547f:	or     rax,rcx
  415482:	movsx  rcx,BYTE PTR [rbx+0x4]
  415487:	shl    rcx,0x18
  41548b:	or     rax,rcx
  41548e:	movsx  rcx,BYTE PTR [rbx+0x3]
  415493:	shl    rcx,0x20
  415497:	or     rax,rcx
  41549a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41549f:	shl    rcx,0x28
  4154a3:	or     rax,rcx
  4154a6:	movsx  rcx,BYTE PTR [rbx+0x1]
  4154ab:	shl    rcx,0x30
  4154af:	or     rax,rcx
  4154b2:	movzx  ecx,BYTE PTR [rbx]
  4154b5:	shl    rcx,0x38
  4154b9:	or     rcx,rax
  4154bc:	mov    rax,rcx
  4154bf:	shr    rax,0x20
  4154c3:	cmp    rax,0x4e4f4e44
  4154c9:	ja     415520 <main@@Base+0xe700>
  4154cb:	movabs r8,0x426f6f6b46616e00
  4154d5:	mov    rsi,rcx
  4154d8:	and    rsi,0xffffffffff000000
  4154df:	cmp    rcx,r8
  4154e2:	jae    415574 <main@@Base+0xe754>
  4154e8:	movabs rax,0x42656c6c65000000
  4154f2:	cmp    rsi,rax
  4154f5:	jne    415672 <main@@Base+0xe852>
  4154fb:	mov    ecx,0x5
  415500:	mov    rsi,rbx
  415503:	mov    r8,r9
  415506:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41550b:	cmp    rax,rbx
  41550e:	je     415672 <main@@Base+0xe852>
  415514:	mov    QWORD PTR [r15],0x9
  41551b:	jmp    415668 <main@@Base+0xe848>
  415520:	movabs rax,0x4f74686572000000
  41552a:	cmp    rcx,rax
  41552d:	jae    4155a8 <main@@Base+0xe788>
  41552f:	movabs rax,0x4e4f4e4500000000
  415539:	movabs rsi,0xffffffff00000000
  415543:	and    rcx,rsi
  415546:	cmp    rcx,rax
  415549:	jne    415672 <main@@Base+0xe852>
  41554f:	mov    ecx,0x4
  415554:	mov    rsi,rbx
  415557:	mov    r8,r9
  41555a:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41555f:	cmp    rax,rbx
  415562:	je     415672 <main@@Base+0xe852>
  415568:	mov    QWORD PTR [r15],0x0
  41556f:	jmp    415668 <main@@Base+0xe848>
  415574:	movabs rax,0x4d754c616e000000
  41557e:	cmp    rsi,rax
  415581:	jne    4155e9 <main@@Base+0xe7c9>
  415583:	mov    ecx,0x5
  415588:	mov    rsi,rbx
  41558b:	mov    r8,r9
  41558e:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  415593:	cmp    rax,rbx
  415596:	je     415672 <main@@Base+0xe852>
  41559c:	mov    QWORD PTR [r15],0x2
  4155a3:	jmp    415668 <main@@Base+0xe848>
  4155a8:	movabs r8,0x526170756e7a656c
  4155b2:	cmp    rcx,r8
  4155b5:	jae    415613 <main@@Base+0xe7f3>
  4155b7:	and    rcx,0xffffffffff000000
  4155be:	cmp    rcx,rax
  4155c1:	jne    415672 <main@@Base+0xe852>
  4155c7:	mov    ecx,0x5
  4155cc:	mov    rsi,rbx
  4155cf:	mov    r8,r9
  4155d2:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  4155d7:	cmp    rax,rbx
  4155da:	je     415672 <main@@Base+0xe852>
  4155e0:	mov    QWORD PTR [r15],0xb
  4155e7:	jmp    415668 <main@@Base+0xe848>
  4155e9:	and    rcx,0xffffffffffffff00
  4155f0:	cmp    rcx,r8
  4155f3:	jne    415672 <main@@Base+0xe852>
  4155f5:	mov    ecx,0x7
  4155fa:	mov    rsi,rbx
  4155fd:	mov    r8,r9
  415600:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  415605:	cmp    rax,rbx
  415608:	je     415672 <main@@Base+0xe852>
  41560a:	mov    QWORD PTR [r15],0xa
  415611:	jmp    415668 <main@@Base+0xe848>
  415613:	mov    rax,rcx
  415616:	shr    rax,0x10
  41561a:	movabs rsi,0x556e75736564
  415624:	cmp    rax,rsi
  415627:	jne    415647 <main@@Base+0xe827>
  415629:	mov    ecx,0x6
  41562e:	mov    rsi,rbx
  415631:	mov    r8,r9
  415634:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  415639:	cmp    rax,rbx
  41563c:	je     415672 <main@@Base+0xe852>
  41563e:	mov    QWORD PTR [r15],0xff
  415645:	jmp    415668 <main@@Base+0xe848>
  415647:	cmp    rcx,r8
  41564a:	jne    415672 <main@@Base+0xe852>
  41564c:	mov    ecx,0x8
  415651:	mov    rsi,rbx
  415654:	mov    r8,r9
  415657:	call   423aa0 <flatcc_json_parser_match_constant@@Base>
  41565c:	cmp    rax,rbx
  41565f:	je     415672 <main@@Base+0xe852>
  415661:	mov    QWORD PTR [r15],0x8
  415668:	mov    DWORD PTR [r14],0x0
  41566f:	mov    rbx,rax
  415672:	mov    rax,rbx
  415675:	pop    rbx
  415676:	pop    r14
  415678:	pop    r15
  41567a:	ret    
  41567b:	nop    DWORD PTR [rax+rax*1+0x0]
  415680:	push   rbp
  415681:	push   r15
  415683:	push   r14
  415685:	push   r13
  415687:	push   r12
  415689:	push   rbx
  41568a:	sub    rsp,0x28
  41568e:	mov    rbp,rcx
  415691:	mov    r14,rdx
  415694:	mov    rbx,rsi
  415697:	mov    r15,rdi
  41569a:	mov    DWORD PTR [rcx],0x0
  4156a0:	mov    rdi,QWORD PTR [rdi]
  4156a3:	mov    esi,0x4
  4156a8:	call   41eb00 <flatcc_builder_start_table@@Base>
  4156ad:	test   eax,eax
  4156af:	je     4156d9 <main@@Base+0xe8b9>
  4156b1:	mov    ecx,0x21
  4156b6:	mov    rdi,r15
  4156b9:	mov    rsi,rbx
  4156bc:	mov    rdx,r14
  4156bf:	call   423620 <flatcc_json_parser_set_error@@Base>
  4156c4:	mov    rbx,rax
  4156c7:	mov    rax,rbx
  4156ca:	add    rsp,0x28
  4156ce:	pop    rbx
  4156cf:	pop    r12
  4156d1:	pop    r13
  4156d3:	pop    r14
  4156d5:	pop    r15
  4156d7:	pop    rbp
  4156d8:	ret    
  4156d9:	lea    r8,[rsp+0x8]
  4156de:	mov    ecx,0x1
  4156e3:	mov    rdi,r15
  4156e6:	mov    rsi,rbx
  4156e9:	mov    rdx,r14
  4156ec:	call   4258e0 <flatcc_json_parser_prepare_unions@@Base>
  4156f1:	cmp    rax,r14
  4156f4:	je     4156b1 <main@@Base+0xe891>
  4156f6:	cmp    rbx,r14
  4156f9:	je     415726 <main@@Base+0xe906>
  4156fb:	cmp    BYTE PTR [rbx],0x7b
  4156fe:	jne    415726 <main@@Base+0xe906>
  415700:	lea    rcx,[rbx+0x1]
  415704:	mov    rax,r14
  415707:	sub    rax,rcx
  41570a:	cmp    rax,0x2
  41570e:	jl     41574c <main@@Base+0xe92c>
  415710:	cmp    BYTE PTR [rcx],0x20
  415713:	jg     41575d <main@@Base+0xe93d>
  415715:	jne    41574c <main@@Base+0xe92c>
  415717:	cmp    BYTE PTR [rbx+0x2],0x20
  41571b:	jle    41574c <main@@Base+0xe92c>
  41571d:	add    rbx,0x2
  415721:	mov    rcx,rbx
  415724:	jmp    41575d <main@@Base+0xe93d>
  415726:	mov    ecx,0x15
  41572b:	mov    rdi,r15
  41572e:	mov    rsi,rbx
  415731:	mov    rdx,r14
  415734:	call   423620 <flatcc_json_parser_set_error@@Base>
  415739:	cmp    DWORD PTR [r15+0x1c],0x0
  41573e:	je     415fb1 <main@@Base+0xf191>
  415744:	mov    rbx,rax
  415747:	jmp    4156b1 <main@@Base+0xe891>
  41574c:	mov    rdi,r15
  41574f:	mov    rsi,rcx
  415752:	mov    rdx,r14
  415755:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41575a:	mov    rcx,rax
  41575d:	mov    rsi,r14
  415760:	cmp    rcx,r14
  415763:	je     4157a9 <main@@Base+0xe989>
  415765:	cmp    BYTE PTR [rcx],0x7d
  415768:	jne    4157a6 <main@@Base+0xe986>
  41576a:	lea    rax,[rcx+0x1]
  41576e:	mov    rdx,r14
  415771:	sub    rdx,rax
  415774:	cmp    rdx,0x2
  415778:	jl     415f98 <main@@Base+0xf178>
  41577e:	cmp    BYTE PTR [rax],0x20
  415781:	jg     415739 <main@@Base+0xe919>
  415783:	jne    415f98 <main@@Base+0xf178>
  415789:	cmp    BYTE PTR [rcx+0x2],0x20
  41578d:	jle    415f98 <main@@Base+0xf178>
  415793:	add    rcx,0x2
  415797:	mov    rax,rcx
  41579a:	cmp    DWORD PTR [r15+0x1c],0x0
  41579f:	jne    415744 <main@@Base+0xe924>
  4157a1:	jmp    415fb1 <main@@Base+0xf191>
  4157a6:	mov    rsi,rcx
  4157a9:	movabs rax,0x6d616e79616e7900
  4157b3:	lea    rax,[rax+0x5f]
  4157b7:	mov    QWORD PTR [rsp+0x18],rax
  4157bc:	mov    QWORD PTR [rsp+0x10],r15
  4157c1:	mov    QWORD PTR [rsp+0x20],rbp
  4157c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4157d0:	mov    r13,r14
  4157d3:	cmp    rsi,r14
  4157d6:	je     4157f9 <main@@Base+0xe9d9>
  4157d8:	cmp    BYTE PTR [rsi],0x22
  4157db:	jne    4157e6 <main@@Base+0xe9c6>
  4157dd:	add    rsi,0x1
  4157e1:	mov    r13,rsi
  4157e4:	jmp    4157f9 <main@@Base+0xe9d9>
  4157e6:	mov    ecx,0x5
  4157eb:	mov    rdi,r15
  4157ee:	mov    rdx,r14
  4157f1:	call   423620 <flatcc_json_parser_set_error@@Base>
  4157f6:	mov    r13,rax
  4157f9:	mov    rbx,r15
  4157fc:	mov    r15,r14
  4157ff:	sub    r15,r13
  415802:	cmp    r15,0x8
  415806:	jb     41583b <main@@Base+0xea1b>
  415808:	movbe  r12,QWORD PTR [r13+0x0]
  41580e:	cmp    r12,QWORD PTR [rsp+0x18]
  415813:	jne    4158d5 <main@@Base+0xeab5>
  415819:	lea    r12,[r13+0x8]
  41581d:	mov    rax,r14
  415820:	sub    rax,r12
  415823:	cmp    rax,0x8
  415827:	jb     41594c <main@@Base+0xeb2c>
  41582d:	movbe  rcx,QWORD PTR [r12]
  415833:	mov    r15,rbx
  415836:	jmp    4159e1 <main@@Base+0xebc1>
  41583b:	mov    eax,r15d
  41583e:	and    al,0xf
  415840:	add    al,0xff
  415842:	cmp    al,0x7
  415844:	ja     415b9f <main@@Base+0xed7f>
  41584a:	movzx  eax,al
  41584d:	lea    rcx,[rip+0x1dee0]        # 433734 <_IO_stdin_used@@Base+0x734>
  415854:	movsxd rbx,DWORD PTR [rcx+rax*4]
  415858:	add    rbx,rcx
  41585b:	xor    r8d,r8d
  41585e:	xor    eax,eax
  415860:	xor    ecx,ecx
  415862:	xor    edx,edx
  415864:	xor    edi,edi
  415866:	xor    esi,esi
  415868:	xor    ebp,ebp
  41586a:	jmp    rbx
  41586c:	movsx  r8,BYTE PTR [r13+0x7]
  415871:	movsx  rax,BYTE PTR [r13+0x6]
  415876:	shl    rax,0x8
  41587a:	or     rax,r8
  41587d:	movsx  rcx,BYTE PTR [r13+0x5]
  415882:	shl    rcx,0x10
  415886:	or     rcx,rax
  415889:	movsx  rdx,BYTE PTR [r13+0x4]
  41588e:	shl    rdx,0x18
  415892:	or     rdx,rcx
  415895:	movsx  rdi,BYTE PTR [r13+0x3]
  41589a:	shl    rdi,0x20
  41589e:	or     rdi,rdx
  4158a1:	movsx  rsi,BYTE PTR [r13+0x2]
  4158a6:	shl    rsi,0x28
  4158aa:	or     rsi,rdi
  4158ad:	movsx  rbp,BYTE PTR [r13+0x1]
  4158b2:	shl    rbp,0x30
  4158b6:	or     rbp,rsi
  4158b9:	movzx  r12d,BYTE PTR [r13+0x0]
  4158be:	shl    r12,0x38
  4158c2:	or     r12,rbp
  4158c5:	mov    rbx,QWORD PTR [rsp+0x10]
  4158ca:	cmp    r12,QWORD PTR [rsp+0x18]
  4158cf:	je     415819 <main@@Base+0xe9f9>
  4158d5:	mov    rax,r12
  4158d8:	and    rax,0xffffffffffffff00
  4158de:	movabs rcx,0x6d616e79616e7900
  4158e8:	cmp    rax,rcx
  4158eb:	jne    415aba <main@@Base+0xec9a>
  4158f1:	mov    rax,r13
  4158f4:	cmp    r15,0x8
  4158f8:	jl     415d23 <main@@Base+0xef03>
  4158fe:	cmp    BYTE PTR [r13+0x7],0x22
  415903:	mov    rax,r13
  415906:	jne    415d23 <main@@Base+0xef03>
  41590c:	lea    rsi,[r13+0x8]
  415910:	mov    rax,r14
  415913:	sub    rax,rsi
  415916:	cmp    rax,0x2
  41591a:	jl     415a4a <main@@Base+0xec2a>
  415920:	cmp    BYTE PTR [rsi],0x20
  415923:	jg     415a58 <main@@Base+0xec38>
  415929:	jne    415a4a <main@@Base+0xec2a>
  41592f:	cmp    BYTE PTR [r13+0x9],0x20
  415934:	jle    415a4a <main@@Base+0xec2a>
  41593a:	lea    rsi,[r13+0x9]
  41593e:	cmp    rsi,r14
  415941:	jne    415a5d <main@@Base+0xec3d>
  415947:	jmp    415aa1 <main@@Base+0xec81>
  41594c:	mov    ecx,eax
  41594e:	and    cl,0xf
  415951:	add    cl,0xff
  415954:	cmp    cl,0x7
  415957:	mov    r15,rbx
  41595a:	ja     415c1a <main@@Base+0xedfa>
  415960:	movzx  ecx,cl
  415963:	lea    rdx,[rip+0x1ddea]        # 433754 <_IO_stdin_used@@Base+0x754>
  41596a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41596e:	add    rcx,rdx
  415971:	xor    r8d,r8d
  415974:	xor    r9d,r9d
  415977:	xor    edx,edx
  415979:	xor    esi,esi
  41597b:	xor    edi,edi
  41597d:	xor    ebp,ebp
  41597f:	xor    ebx,ebx
  415981:	jmp    rcx
  415983:	movsx  r8,BYTE PTR [r13+0xf]
  415988:	movsx  r9,BYTE PTR [r13+0xe]
  41598d:	shl    r9,0x8
  415991:	or     r9,r8
  415994:	movsx  rdx,BYTE PTR [r13+0xd]
  415999:	shl    rdx,0x10
  41599d:	or     rdx,r9
  4159a0:	movsx  rsi,BYTE PTR [r13+0xc]
  4159a5:	shl    rsi,0x18
  4159a9:	or     rsi,rdx
  4159ac:	movsx  rdi,BYTE PTR [r13+0xb]
  4159b1:	shl    rdi,0x20
  4159b5:	or     rdi,rsi
  4159b8:	movsx  rbp,BYTE PTR [r13+0xa]
  4159bd:	shl    rbp,0x28
  4159c1:	or     rbp,rdi
  4159c4:	movsx  rbx,BYTE PTR [r13+0x9]
  4159c9:	shl    rbx,0x30
  4159cd:	or     rbx,rbp
  4159d0:	movzx  ecx,BYTE PTR [r12]
  4159d5:	shl    rcx,0x38
  4159d9:	or     rcx,rbx
  4159dc:	mov    r15,QWORD PTR [rsp+0x10]
  4159e1:	shr    rcx,0x20
  4159e5:	cmp    rcx,0x74797065
  4159ec:	jne    415c1a <main@@Base+0xedfa>
  4159f2:	cmp    rax,0x5
  4159f6:	jl     415c1a <main@@Base+0xedfa>
  4159fc:	cmp    BYTE PTR [r13+0xc],0x22
  415a01:	jne    415c1a <main@@Base+0xedfa>
  415a07:	lea    rsi,[r13+0xd]
  415a0b:	mov    rax,r14
  415a0e:	sub    rax,rsi
  415a11:	cmp    rax,0x2
  415a15:	jl     415baa <main@@Base+0xed8a>
  415a1b:	cmp    BYTE PTR [rsi],0x20
  415a1e:	jg     415bb8 <main@@Base+0xed98>
  415a24:	jne    415baa <main@@Base+0xed8a>
  415a2a:	cmp    BYTE PTR [r13+0xe],0x20
  415a2f:	jle    415baa <main@@Base+0xed8a>
  415a35:	add    r13,0xe
  415a39:	mov    rsi,r13
  415a3c:	cmp    rsi,r14
  415a3f:	jne    415bbd <main@@Base+0xed9d>
  415a45:	jmp    415c01 <main@@Base+0xede1>
  415a4a:	mov    rdi,rbx
  415a4d:	mov    rdx,r14
  415a50:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415a55:	mov    rsi,rax
  415a58:	cmp    rsi,r14
  415a5b:	je     415aa1 <main@@Base+0xec81>
  415a5d:	cmp    BYTE PTR [rsi],0x3a
  415a60:	jne    415aa1 <main@@Base+0xec81>
  415a62:	lea    rax,[rsi+0x1]
  415a66:	mov    rcx,r14
  415a69:	sub    rcx,rax
  415a6c:	cmp    rcx,0x2
  415a70:	jl     415d15 <main@@Base+0xeef5>
  415a76:	cmp    BYTE PTR [rax],0x20
  415a79:	jg     415d23 <main@@Base+0xef03>
  415a7f:	jne    415d15 <main@@Base+0xeef5>
  415a85:	cmp    BYTE PTR [rsi+0x2],0x20
  415a89:	jle    415d15 <main@@Base+0xeef5>
  415a8f:	add    rsi,0x2
  415a93:	mov    rax,rsi
  415a96:	cmp    r13,rax
  415a99:	jne    415d2c <main@@Base+0xef0c>
  415a9f:	jmp    415aba <main@@Base+0xec9a>
  415aa1:	mov    ecx,0x4
  415aa6:	mov    rdi,rbx
  415aa9:	mov    rdx,r14
  415aac:	call   423620 <flatcc_json_parser_set_error@@Base>
  415ab1:	cmp    r13,rax
  415ab4:	jne    415d2c <main@@Base+0xef0c>
  415aba:	mov    rax,r12
  415abd:	shr    rax,0x10
  415ac1:	movabs rcx,0x707265666978
  415acb:	cmp    rax,rcx
  415ace:	jne    415b2e <main@@Base+0xed0e>
  415ad0:	mov    rax,r13
  415ad3:	cmp    r15,0x7
  415ad7:	mov    r15,rbx
  415ada:	jl     415dca <main@@Base+0xefaa>
  415ae0:	cmp    BYTE PTR [r13+0x6],0x22
  415ae5:	mov    rax,r13
  415ae8:	jne    415dca <main@@Base+0xefaa>
  415aee:	lea    rsi,[r13+0x7]
  415af2:	mov    rax,r14
  415af5:	sub    rax,rsi
  415af8:	cmp    rax,0x2
  415afc:	jl     415c25 <main@@Base+0xee05>
  415b02:	cmp    BYTE PTR [rsi],0x20
  415b05:	jg     415c33 <main@@Base+0xee13>
  415b0b:	jne    415c25 <main@@Base+0xee05>
  415b11:	cmp    BYTE PTR [r13+0x8],0x20
  415b16:	jle    415c25 <main@@Base+0xee05>
  415b1c:	lea    rsi,[r13+0x8]
  415b20:	cmp    rsi,r14
  415b23:	jne    415c38 <main@@Base+0xee18>
  415b29:	jmp    415c7f <main@@Base+0xee5f>
  415b2e:	shr    r12,0x18
  415b32:	movabs rax,0x6d6f766965
  415b3c:	cmp    r12,rax
  415b3f:	jne    415b9f <main@@Base+0xed7f>
  415b41:	mov    rax,r13
  415b44:	cmp    r15,0x6
  415b48:	mov    r15,rbx
  415b4b:	jl     415e08 <main@@Base+0xefe8>
  415b51:	cmp    BYTE PTR [r13+0x5],0x22
  415b56:	mov    rax,r13
  415b59:	jne    415e08 <main@@Base+0xefe8>
  415b5f:	lea    rsi,[r13+0x6]
  415b63:	mov    rax,r14
  415b66:	sub    rax,rsi
  415b69:	cmp    rax,0x2
  415b6d:	jl     415c9d <main@@Base+0xee7d>
  415b73:	cmp    BYTE PTR [rsi],0x20
  415b76:	jg     415cab <main@@Base+0xee8b>
  415b7c:	jne    415c9d <main@@Base+0xee7d>
  415b82:	cmp    BYTE PTR [r13+0x7],0x20
  415b87:	jle    415c9d <main@@Base+0xee7d>
  415b8d:	lea    rsi,[r13+0x7]
  415b91:	cmp    rsi,r14
  415b94:	jne    415cb0 <main@@Base+0xee90>
  415b9a:	jmp    415cf7 <main@@Base+0xeed7>
  415b9f:	mov    r15,rbx
  415ba2:	mov    rdi,rbx
  415ba5:	jmp    415e4f <main@@Base+0xf02f>
  415baa:	mov    rdi,r15
  415bad:	mov    rdx,r14
  415bb0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415bb5:	mov    rsi,rax
  415bb8:	cmp    rsi,r14
  415bbb:	je     415c01 <main@@Base+0xede1>
  415bbd:	cmp    BYTE PTR [rsi],0x3a
  415bc0:	jne    415c01 <main@@Base+0xede1>
  415bc2:	lea    rax,[rsi+0x1]
  415bc6:	mov    rcx,r14
  415bc9:	sub    rcx,rax
  415bcc:	cmp    rcx,0x2
  415bd0:	jl     415d62 <main@@Base+0xef42>
  415bd6:	cmp    BYTE PTR [rax],0x20
  415bd9:	jg     415d70 <main@@Base+0xef50>
  415bdf:	jne    415d62 <main@@Base+0xef42>
  415be5:	cmp    BYTE PTR [rsi+0x2],0x20
  415be9:	jle    415d62 <main@@Base+0xef42>
  415bef:	add    rsi,0x2
  415bf3:	mov    rax,rsi
  415bf6:	cmp    r12,rax
  415bf9:	jne    415d79 <main@@Base+0xef59>
  415bff:	jmp    415c1a <main@@Base+0xedfa>
  415c01:	mov    ecx,0x4
  415c06:	mov    rdi,r15
  415c09:	mov    rdx,r14
  415c0c:	call   423620 <flatcc_json_parser_set_error@@Base>
  415c11:	cmp    r12,rax
  415c14:	jne    415d79 <main@@Base+0xef59>
  415c1a:	mov    rdi,r15
  415c1d:	mov    rsi,r12
  415c20:	jmp    415e52 <main@@Base+0xf032>
  415c25:	mov    rdi,r15
  415c28:	mov    rdx,r14
  415c2b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415c30:	mov    rsi,rax
  415c33:	cmp    rsi,r14
  415c36:	je     415c7f <main@@Base+0xee5f>
  415c38:	cmp    BYTE PTR [rsi],0x3a
  415c3b:	jne    415c7f <main@@Base+0xee5f>
  415c3d:	lea    rax,[rsi+0x1]
  415c41:	mov    rcx,r14
  415c44:	sub    rcx,rax
  415c47:	cmp    rcx,0x2
  415c4b:	jl     415dbc <main@@Base+0xef9c>
  415c51:	cmp    BYTE PTR [rax],0x20
  415c54:	jg     415dca <main@@Base+0xefaa>
  415c5a:	jne    415dbc <main@@Base+0xef9c>
  415c60:	cmp    BYTE PTR [rsi+0x2],0x20
  415c64:	jle    415dbc <main@@Base+0xef9c>
  415c6a:	add    rsi,0x2
  415c6e:	mov    rax,rsi
  415c71:	cmp    r13,rax
  415c74:	jne    415dcf <main@@Base+0xefaf>
  415c7a:	jmp    415e4c <main@@Base+0xf02c>
  415c7f:	mov    ecx,0x4
  415c84:	mov    rdi,r15
  415c87:	mov    rdx,r14
  415c8a:	call   423620 <flatcc_json_parser_set_error@@Base>
  415c8f:	cmp    r13,rax
  415c92:	jne    415dcf <main@@Base+0xefaf>
  415c98:	jmp    415e4c <main@@Base+0xf02c>
  415c9d:	mov    rdi,r15
  415ca0:	mov    rdx,r14
  415ca3:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415ca8:	mov    rsi,rax
  415cab:	cmp    rsi,r14
  415cae:	je     415cf7 <main@@Base+0xeed7>
  415cb0:	cmp    BYTE PTR [rsi],0x3a
  415cb3:	jne    415cf7 <main@@Base+0xeed7>
  415cb5:	lea    rax,[rsi+0x1]
  415cb9:	mov    rcx,r14
  415cbc:	sub    rcx,rax
  415cbf:	cmp    rcx,0x2
  415cc3:	jl     415dfa <main@@Base+0xefda>
  415cc9:	cmp    BYTE PTR [rax],0x20
  415ccc:	jg     415e08 <main@@Base+0xefe8>
  415cd2:	jne    415dfa <main@@Base+0xefda>
  415cd8:	cmp    BYTE PTR [rsi+0x2],0x20
  415cdc:	jle    415dfa <main@@Base+0xefda>
  415ce2:	add    rsi,0x2
  415ce6:	mov    rax,rsi
  415ce9:	cmp    r13,rax
  415cec:	jne    415e0d <main@@Base+0xefed>
  415cf2:	jmp    415e4c <main@@Base+0xf02c>
  415cf7:	mov    ecx,0x4
  415cfc:	mov    rdi,r15
  415cff:	mov    rdx,r14
  415d02:	call   423620 <flatcc_json_parser_set_error@@Base>
  415d07:	cmp    r13,rax
  415d0a:	jne    415e0d <main@@Base+0xefed>
  415d10:	jmp    415e4c <main@@Base+0xf02c>
  415d15:	mov    rdi,rbx
  415d18:	mov    rsi,rax
  415d1b:	mov    rdx,r14
  415d1e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415d23:	cmp    r13,rax
  415d26:	je     415aba <main@@Base+0xec9a>
  415d2c:	mov    r9,QWORD PTR [rsp+0x8]
  415d31:	sub    rsp,0x8
  415d35:	mov    ecx,0x0
  415d3a:	mov    r8d,0x3
  415d40:	mov    r15,rbx
  415d43:	mov    rdi,rbx
  415d46:	mov    rsi,rax
  415d49:	mov    rdx,r14
  415d4c:	lea    rax,[rip+0xffffffffffffd3ed]        # 413140 <main@@Base+0xc320>
  415d53:	push   rax
  415d54:	call   425f50 <flatcc_json_parser_union_vector@@Base>
  415d59:	add    rsp,0x10
  415d5d:	jmp    415e5a <main@@Base+0xf03a>
  415d62:	mov    rdi,r15
  415d65:	mov    rsi,rax
  415d68:	mov    rdx,r14
  415d6b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415d70:	cmp    r12,rax
  415d73:	je     415c1a <main@@Base+0xedfa>
  415d79:	mov    r9,QWORD PTR [rsp+0x8]
  415d7e:	sub    rsp,0x8
  415d82:	mov    ecx,0x0
  415d87:	mov    r8d,0x3
  415d8d:	mov    rdi,r15
  415d90:	mov    rsi,rax
  415d93:	mov    rdx,r14
  415d96:	lea    rax,[rip+0x253]        # 415ff0 <main@@Base+0xf1d0>
  415d9d:	push   rax
  415d9e:	lea    rax,[rip+0xffffffffffffd39b]        # 413140 <main@@Base+0xc320>
  415da5:	push   rax
  415da6:	lea    rax,[rip+0x2b733]        # 4414e0 <__data_start@@Base+0x430>
  415dad:	push   rax
  415dae:	call   426400 <flatcc_json_parser_union_type_vector@@Base>
  415db3:	add    rsp,0x20
  415db7:	jmp    415e5a <main@@Base+0xf03a>
  415dbc:	mov    rdi,r15
  415dbf:	mov    rsi,rax
  415dc2:	mov    rdx,r14
  415dc5:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415dca:	cmp    r13,rax
  415dcd:	je     415e4c <main@@Base+0xf02c>
  415dcf:	mov    rdi,r15
  415dd2:	mov    rsi,rax
  415dd5:	mov    rdx,r14
  415dd8:	lea    rcx,[rsp+0x4]
  415ddd:	call   416000 <main@@Base+0xf1e0>
  415de2:	mov    rbx,rax
  415de5:	mov    r12d,DWORD PTR [rsp+0x4]
  415dea:	test   r12d,r12d
  415ded:	je     4156b1 <main@@Base+0xe891>
  415df3:	mov    rdi,QWORD PTR [r15]
  415df6:	xor    esi,esi
  415df8:	jmp    415e39 <main@@Base+0xf019>
  415dfa:	mov    rdi,r15
  415dfd:	mov    rsi,rax
  415e00:	mov    rdx,r14
  415e03:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415e08:	cmp    r13,rax
  415e0b:	je     415e4c <main@@Base+0xf02c>
  415e0d:	mov    rdi,r15
  415e10:	mov    rsi,rax
  415e13:	mov    rdx,r14
  415e16:	lea    rcx,[rsp+0x4]
  415e1b:	call   418fb0 <main@@Base+0x12190>
  415e20:	mov    rbx,rax
  415e23:	mov    r12d,DWORD PTR [rsp+0x4]
  415e28:	test   r12d,r12d
  415e2b:	je     4156b1 <main@@Base+0xe891>
  415e31:	mov    rdi,QWORD PTR [r15]
  415e34:	mov    esi,0x1
  415e39:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  415e3e:	test   rax,rax
  415e41:	je     4156b1 <main@@Base+0xe891>
  415e47:	mov    DWORD PTR [rax],r12d
  415e4a:	jmp    415e5d <main@@Base+0xf03d>
  415e4c:	mov    rdi,r15
  415e4f:	mov    rsi,r13
  415e52:	mov    rdx,r14
  415e55:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  415e5a:	mov    rbx,rax
  415e5d:	mov    rax,r14
  415e60:	sub    rax,rbx
  415e63:	cmp    rax,0x2
  415e67:	mov    rbp,QWORD PTR [rsp+0x20]
  415e6c:	jl     415e90 <main@@Base+0xf070>
  415e6e:	cmp    BYTE PTR [rbx],0x20
  415e71:	jg     415ea1 <main@@Base+0xf081>
  415e73:	jne    415e90 <main@@Base+0xf070>
  415e75:	cmp    BYTE PTR [rbx+0x1],0x20
  415e79:	jle    415e90 <main@@Base+0xf070>
  415e7b:	add    rbx,0x1
  415e7f:	cmp    rbx,r14
  415e82:	jne    415ea6 <main@@Base+0xf086>
  415e84:	jmp    415f13 <main@@Base+0xf0f3>
  415e89:	nop    DWORD PTR [rax+0x0]
  415e90:	mov    rdi,r15
  415e93:	mov    rsi,rbx
  415e96:	mov    rdx,r14
  415e99:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415e9e:	mov    rbx,rax
  415ea1:	cmp    rbx,r14
  415ea4:	je     415f13 <main@@Base+0xf0f3>
  415ea6:	movzx  eax,BYTE PTR [rbx]
  415ea9:	cmp    al,0x2c
  415eab:	jne    415f26 <main@@Base+0xf106>
  415ead:	lea    rsi,[rbx+0x1]
  415eb1:	mov    rax,r14
  415eb4:	sub    rax,rsi
  415eb7:	cmp    rax,0x2
  415ebb:	jl     415ef0 <main@@Base+0xf0d0>
  415ebd:	cmp    BYTE PTR [rsi],0x20
  415ec0:	jg     415efe <main@@Base+0xf0de>
  415ec2:	jne    415ef0 <main@@Base+0xf0d0>
  415ec4:	cmp    BYTE PTR [rbx+0x2],0x20
  415ec8:	jle    415ef0 <main@@Base+0xf0d0>
  415eca:	add    rbx,0x2
  415ece:	mov    rsi,rbx
  415ed1:	cmp    rsi,r14
  415ed4:	je     415f03 <main@@Base+0xf0e3>
  415ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ee0:	cmp    BYTE PTR [rsi],0x7d
  415ee3:	jne    4157d0 <main@@Base+0xe9b0>
  415ee9:	jmp    415f63 <main@@Base+0xf143>
  415eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  415ef0:	mov    rdi,r15
  415ef3:	mov    rdx,r14
  415ef6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415efb:	mov    rsi,rax
  415efe:	cmp    rsi,r14
  415f01:	jne    415ee0 <main@@Base+0xf0c0>
  415f03:	mov    ecx,0xa
  415f08:	mov    rdi,r15
  415f0b:	mov    rsi,r14
  415f0e:	jmp    415731 <main@@Base+0xe911>
  415f13:	mov    rax,r14
  415f16:	cmp    DWORD PTR [r15+0x1c],0x0
  415f1b:	jne    415744 <main@@Base+0xe924>
  415f21:	jmp    415fb1 <main@@Base+0xf191>
  415f26:	cmp    al,0x7d
  415f28:	jne    415fdf <main@@Base+0xf1bf>
  415f2e:	lea    rax,[rbx+0x1]
  415f32:	mov    rcx,r14
  415f35:	sub    rcx,rax
  415f38:	cmp    rcx,0x2
  415f3c:	jl     415f98 <main@@Base+0xf178>
  415f3e:	cmp    BYTE PTR [rax],0x20
  415f41:	jg     415739 <main@@Base+0xe919>
  415f47:	jne    415f98 <main@@Base+0xf178>
  415f49:	cmp    BYTE PTR [rbx+0x2],0x20
  415f4d:	jle    415f98 <main@@Base+0xf178>
  415f4f:	add    rbx,0x2
  415f53:	mov    rax,rbx
  415f56:	cmp    DWORD PTR [r15+0x1c],0x0
  415f5b:	jne    415744 <main@@Base+0xe924>
  415f61:	jmp    415fb1 <main@@Base+0xf191>
  415f63:	lea    rax,[rsi+0x1]
  415f67:	mov    rcx,r14
  415f6a:	sub    rcx,rax
  415f6d:	cmp    rcx,0x2
  415f71:	jl     415f98 <main@@Base+0xf178>
  415f73:	cmp    BYTE PTR [rax],0x20
  415f76:	jg     415739 <main@@Base+0xe919>
  415f7c:	jne    415f98 <main@@Base+0xf178>
  415f7e:	cmp    BYTE PTR [rsi+0x2],0x20
  415f82:	jle    415f98 <main@@Base+0xf178>
  415f84:	add    rsi,0x2
  415f88:	mov    rax,rsi
  415f8b:	cmp    DWORD PTR [r15+0x1c],0x0
  415f90:	jne    415744 <main@@Base+0xe924>
  415f96:	jmp    415fb1 <main@@Base+0xf191>
  415f98:	mov    rdi,r15
  415f9b:	mov    rsi,rax
  415f9e:	mov    rdx,r14
  415fa1:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  415fa6:	cmp    DWORD PTR [r15+0x1c],0x0
  415fab:	jne    415744 <main@@Base+0xe924>
  415fb1:	mov    rcx,QWORD PTR [rsp+0x8]
  415fb6:	mov    rdi,r15
  415fb9:	mov    rsi,rax
  415fbc:	mov    rdx,r14
  415fbf:	call   425960 <flatcc_json_parser_finalize_unions@@Base>
  415fc4:	mov    rbx,rax
  415fc7:	mov    rdi,QWORD PTR [r15]
  415fca:	call   41f510 <flatcc_builder_end_table@@Base>
  415fcf:	mov    DWORD PTR [rbp+0x0],eax
  415fd2:	test   eax,eax
  415fd4:	jne    4156c7 <main@@Base+0xe8a7>
  415fda:	jmp    4156b1 <main@@Base+0xe891>
  415fdf:	mov    ecx,0xa
  415fe4:	jmp    41572b <main@@Base+0xe90b>
  415fe9:	nop    DWORD PTR [rax+0x0]
  415ff0:	xor    eax,eax
  415ff2:	cmp    dil,0x5
  415ff6:	setb   al
  415ff9:	ret    
  415ffa:	nop    WORD PTR [rax+rax*1+0x0]
  416000:	push   rbp
  416001:	push   r15
  416003:	push   r14
  416005:	push   r13
  416007:	push   r12
  416009:	push   rbx
  41600a:	sub    rsp,0x38
  41600e:	mov    r12,rcx
  416011:	mov    r15,rdx
  416014:	mov    rbx,rsi
  416017:	mov    r13,rdi
  41601a:	mov    DWORD PTR [rcx],0x0
  416020:	mov    rdi,QWORD PTR [rdi]
  416023:	mov    esi,0x3
  416028:	call   41eb00 <flatcc_builder_start_table@@Base>
  41602d:	test   eax,eax
  41602f:	jne    418f43 <main@@Base+0x12123>
  416035:	cmp    rbx,r15
  416038:	je     416065 <main@@Base+0xf245>
  41603a:	cmp    BYTE PTR [rbx],0x7b
  41603d:	jne    416065 <main@@Base+0xf245>
  41603f:	lea    rax,[rbx+0x1]
  416043:	mov    rcx,r15
  416046:	sub    rcx,rax
  416049:	cmp    rcx,0x2
  41604d:	jl     41608d <main@@Base+0xf26d>
  41604f:	cmp    BYTE PTR [rax],0x20
  416052:	jg     41609b <main@@Base+0xf27b>
  416054:	jne    41608d <main@@Base+0xf26d>
  416056:	cmp    BYTE PTR [rbx+0x2],0x20
  41605a:	jle    41608d <main@@Base+0xf26d>
  41605c:	add    rbx,0x2
  416060:	mov    rax,rbx
  416063:	jmp    41609b <main@@Base+0xf27b>
  416065:	mov    ecx,0x15
  41606a:	mov    rdi,r13
  41606d:	mov    rsi,rbx
  416070:	mov    rdx,r15
  416073:	call   423620 <flatcc_json_parser_set_error@@Base>
  416078:	mov    rbx,rax
  41607b:	lea    rax,[r13+0x1c]
  41607f:	cmp    DWORD PTR [rax],0x0
  416082:	jne    418f43 <main@@Base+0x12123>
  416088:	jmp    418f32 <main@@Base+0x12112>
  41608d:	mov    rdi,r13
  416090:	mov    rsi,rax
  416093:	mov    rdx,r15
  416096:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41609b:	mov    rsi,r15
  41609e:	cmp    rax,r15
  4160a1:	je     4160da <main@@Base+0xf2ba>
  4160a3:	cmp    BYTE PTR [rax],0x7d
  4160a6:	jne    4160d7 <main@@Base+0xf2b7>
  4160a8:	lea    rbx,[rax+0x1]
  4160ac:	mov    rcx,r15
  4160af:	sub    rcx,rbx
  4160b2:	cmp    rcx,0x2
  4160b6:	jl     418e8a <main@@Base+0x1206a>
  4160bc:	cmp    BYTE PTR [rbx],0x20
  4160bf:	jg     41607b <main@@Base+0xf25b>
  4160c1:	jne    418e8a <main@@Base+0x1206a>
  4160c7:	cmp    BYTE PTR [rax+0x2],0x20
  4160cb:	jle    418e8a <main@@Base+0x1206a>
  4160d1:	add    rax,0x2
  4160d5:	jmp    416078 <main@@Base+0xf258>
  4160d7:	mov    rsi,rax
  4160da:	lea    rax,[r13+0x1c]
  4160de:	mov    QWORD PTR [rsp+0x18],rax
  4160e3:	mov    QWORD PTR [rsp],r13
  4160e7:	mov    QWORD PTR [rsp+0x10],r12
  4160ec:	nop    DWORD PTR [rax+0x0]
  4160f0:	mov    r14,r15
  4160f3:	cmp    rsi,r15
  4160f6:	je     416123 <main@@Base+0xf303>
  4160f8:	cmp    BYTE PTR [rsi],0x22
  4160fb:	jne    416110 <main@@Base+0xf2f0>
  4160fd:	add    rsi,0x1
  416101:	mov    r14,rsi
  416104:	jmp    416123 <main@@Base+0xf303>
  416106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416110:	mov    ecx,0x5
  416115:	mov    rdi,r13
  416118:	mov    rdx,r15
  41611b:	call   423620 <flatcc_json_parser_set_error@@Base>
  416120:	mov    r14,rax
  416123:	mov    rax,r15
  416126:	sub    rax,r14
  416129:	cmp    rax,0x8
  41612d:	jb     416140 <main@@Base+0xf320>
  41612f:	movbe  rax,QWORD PTR [r14]
  416134:	jmp    4161c6 <main@@Base+0xf3a6>
  416139:	nop    DWORD PTR [rax+0x0]
  416140:	and    al,0xf
  416142:	add    al,0xff
  416144:	cmp    al,0x7
  416146:	ja     4161f0 <main@@Base+0xf3d0>
  41614c:	movzx  eax,al
  41614f:	lea    rcx,[rip+0x1d61e]        # 433774 <_IO_stdin_used@@Base+0x774>
  416156:	movsxd rbp,DWORD PTR [rcx+rax*4]
  41615a:	add    rbp,rcx
  41615d:	xor    r8d,r8d
  416160:	xor    eax,eax
  416162:	xor    ecx,ecx
  416164:	xor    edx,edx
  416166:	xor    edi,edi
  416168:	xor    ebx,ebx
  41616a:	xor    esi,esi
  41616c:	jmp    rbp
  41616e:	movsx  r8,BYTE PTR [r14+0x7]
  416173:	movsx  rax,BYTE PTR [r14+0x6]
  416178:	shl    rax,0x8
  41617c:	or     rax,r8
  41617f:	movsx  rcx,BYTE PTR [r14+0x5]
  416184:	shl    rcx,0x10
  416188:	or     rcx,rax
  41618b:	movsx  rdx,BYTE PTR [r14+0x4]
  416190:	shl    rdx,0x18
  416194:	or     rdx,rcx
  416197:	movsx  rdi,BYTE PTR [r14+0x3]
  41619c:	shl    rdi,0x20
  4161a0:	or     rdi,rdx
  4161a3:	movsx  rbx,BYTE PTR [r14+0x2]
  4161a8:	shl    rbx,0x28
  4161ac:	or     rbx,rdi
  4161af:	movsx  rsi,BYTE PTR [r14+0x1]
  4161b4:	shl    rsi,0x30
  4161b8:	or     rsi,rbx
  4161bb:	movzx  eax,BYTE PTR [r14]
  4161bf:	shl    rax,0x38
  4161c3:	or     rax,rsi
  4161c6:	movabs rcx,0x746573746a736f6e
  4161d0:	cmp    rax,rcx
  4161d3:	jne    4161f0 <main@@Base+0xf3d0>
  4161d5:	lea    rsi,[r14+0x8]
  4161d9:	mov    rax,r15
  4161dc:	sub    rax,rsi
  4161df:	cmp    rax,0x8
  4161e3:	jb     4161fb <main@@Base+0xf3db>
  4161e5:	movbe  rcx,QWORD PTR [rsi]
  4161ea:	jmp    416281 <main@@Base+0xf461>
  4161ef:	nop
  4161f0:	mov    rdi,r13
  4161f3:	mov    rsi,r14
  4161f6:	jmp    4162b2 <main@@Base+0xf492>
  4161fb:	and    al,0xf
  4161fd:	add    al,0xff
  4161ff:	cmp    al,0x7
  416201:	ja     4162af <main@@Base+0xf48f>
  416207:	movzx  eax,al
  41620a:	lea    rcx,[rip+0x1d583]        # 433794 <_IO_stdin_used@@Base+0x794>
  416211:	movsxd rbp,DWORD PTR [rcx+rax*4]
  416215:	add    rbp,rcx
  416218:	xor    r8d,r8d
  41621b:	xor    r9d,r9d
  41621e:	xor    ecx,ecx
  416220:	xor    edx,edx
  416222:	xor    ebx,ebx
  416224:	xor    edi,edi
  416226:	xor    eax,eax
  416228:	jmp    rbp
  41622a:	movsx  r8,BYTE PTR [r14+0xf]
  41622f:	movsx  r9,BYTE PTR [r14+0xe]
  416234:	shl    r9,0x8
  416238:	or     r9,r8
  41623b:	movsx  rcx,BYTE PTR [r14+0xd]
  416240:	shl    rcx,0x10
  416244:	or     rcx,r9
  416247:	movsx  rdx,BYTE PTR [r14+0xc]
  41624c:	shl    rdx,0x18
  416250:	or     rdx,rcx
  416253:	movsx  rbx,BYTE PTR [r14+0xb]
  416258:	shl    rbx,0x20
  41625c:	or     rbx,rdx
  41625f:	movsx  rdi,BYTE PTR [r14+0xa]
  416264:	shl    rdi,0x28
  416268:	or     rdi,rbx
  41626b:	movsx  rax,BYTE PTR [r14+0x9]
  416270:	shl    rax,0x30
  416274:	or     rax,rdi
  416277:	movzx  ecx,BYTE PTR [rsi]
  41627a:	shl    rcx,0x38
  41627e:	or     rcx,rax
  416281:	movabs rax,0x7072656669787061
  41628b:	cmp    rcx,rax
  41628e:	jne    4162af <main@@Base+0xf48f>
  416290:	lea    r12,[r14+0x10]
  416294:	mov    r13,r15
  416297:	sub    r13,r12
  41629a:	cmp    r13,0x8
  41629e:	jb     416378 <main@@Base+0xf558>
  4162a4:	movbe  rax,QWORD PTR [r12]
  4162aa:	jmp    416402 <main@@Base+0xf5e2>
  4162af:	mov    rdi,r13
  4162b2:	mov    rdx,r15
  4162b5:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  4162ba:	mov    rbp,rax
  4162bd:	mov    rax,r15
  4162c0:	sub    rax,rbp
  4162c3:	cmp    rax,0x2
  4162c7:	jl     4162f0 <main@@Base+0xf4d0>
  4162c9:	cmp    BYTE PTR [rbp+0x0],0x20
  4162cd:	jg     416301 <main@@Base+0xf4e1>
  4162cf:	jne    4162f0 <main@@Base+0xf4d0>
  4162d1:	cmp    BYTE PTR [rbp+0x1],0x20
  4162d5:	jle    4162f0 <main@@Base+0xf4d0>
  4162d7:	add    rbp,0x1
  4162db:	cmp    rbp,r15
  4162de:	jne    41630a <main@@Base+0xf4ea>
  4162e0:	jmp    418e9d <main@@Base+0x1207d>
  4162e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162ef:	nop
  4162f0:	mov    rdi,r13
  4162f3:	mov    rsi,rbp
  4162f6:	mov    rdx,r15
  4162f9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4162fe:	mov    rbp,rax
  416301:	cmp    rbp,r15
  416304:	je     418e9d <main@@Base+0x1207d>
  41630a:	mov    al,BYTE PTR [rbp+0x0]
  41630d:	cmp    al,0x2c
  41630f:	jne    418ea5 <main@@Base+0x12085>
  416315:	lea    rsi,[rbp+0x1]
  416319:	mov    rax,r15
  41631c:	sub    rax,rsi
  41631f:	cmp    rax,0x2
  416323:	jl     416360 <main@@Base+0xf540>
  416325:	cmp    BYTE PTR [rsi],0x20
  416328:	jg     41636e <main@@Base+0xf54e>
  41632a:	jne    416360 <main@@Base+0xf540>
  41632c:	cmp    BYTE PTR [rbp+0x2],0x20
  416330:	jle    416360 <main@@Base+0xf540>
  416332:	add    rbp,0x2
  416336:	mov    rsi,rbp
  416339:	cmp    rsi,r15
  41633c:	je     418ecf <main@@Base+0x120af>
  416342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41634c:	nop    DWORD PTR [rax+0x0]
  416350:	cmp    BYTE PTR [rsi],0x7d
  416353:	jne    4160f0 <main@@Base+0xf2d0>
  416359:	jmp    418edc <main@@Base+0x120bc>
  41635e:	xchg   ax,ax
  416360:	mov    rdi,r13
  416363:	mov    rdx,r15
  416366:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41636b:	mov    rsi,rax
  41636e:	cmp    rsi,r15
  416371:	jne    416350 <main@@Base+0xf530>
  416373:	jmp    418ecf <main@@Base+0x120af>
  416378:	mov    eax,r13d
  41637b:	and    al,0xf
  41637d:	add    al,0xff
  41637f:	cmp    al,0x7
  416381:	ja     41672c <main@@Base+0xf90c>
  416387:	movzx  eax,al
  41638a:	lea    rcx,[rip+0x1d423]        # 4337b4 <_IO_stdin_used@@Base+0x7b4>
  416391:	movsxd rbp,DWORD PTR [rcx+rax*4]
  416395:	add    rbp,rcx
  416398:	xor    r8d,r8d
  41639b:	xor    eax,eax
  41639d:	xor    ecx,ecx
  41639f:	xor    edx,edx
  4163a1:	xor    edi,edi
  4163a3:	xor    ebx,ebx
  4163a5:	xor    esi,esi
  4163a7:	jmp    rbp
  4163a9:	movsx  r8,BYTE PTR [r14+0x17]
  4163ae:	movsx  rax,BYTE PTR [r14+0x16]
  4163b3:	shl    rax,0x8
  4163b7:	or     rax,r8
  4163ba:	movsx  rcx,BYTE PTR [r14+0x15]
  4163bf:	shl    rcx,0x10
  4163c3:	or     rcx,rax
  4163c6:	movsx  rdx,BYTE PTR [r14+0x14]
  4163cb:	shl    rdx,0x18
  4163cf:	or     rdx,rcx
  4163d2:	movsx  rdi,BYTE PTR [r14+0x13]
  4163d7:	shl    rdi,0x20
  4163db:	or     rdi,rdx
  4163de:	movsx  rbx,BYTE PTR [r14+0x12]
  4163e3:	shl    rbx,0x28
  4163e7:	or     rbx,rdi
  4163ea:	movsx  rsi,BYTE PTR [r14+0x11]
  4163ef:	shl    rsi,0x30
  4163f3:	or     rsi,rbx
  4163f6:	movzx  eax,BYTE PTR [r12]
  4163fb:	shl    rax,0x38
  4163ff:	or     rax,rsi
  416402:	mov    rbx,rax
  416405:	and    rbx,0xffffffffffff0000
  41640c:	movabs rcx,0x7273696e67000000
  416416:	lea    rcx,[rcx+0x320000]
  41641d:	cmp    rbx,rcx
  416420:	jne    41647a <main@@Base+0xf65a>
  416422:	cmp    r13,0x7
  416426:	jl     41672c <main@@Base+0xf90c>
  41642c:	cmp    BYTE PTR [r14+0x16],0x22
  416431:	jne    41672c <main@@Base+0xf90c>
  416437:	lea    rsi,[r14+0x17]
  41643b:	mov    rax,r15
  41643e:	sub    rax,rsi
  416441:	cmp    rax,0x2
  416445:	mov    rbx,QWORD PTR [rsp]
  416449:	jl     4164e0 <main@@Base+0xf6c0>
  41644f:	cmp    BYTE PTR [rsi],0x20
  416452:	jg     4164ee <main@@Base+0xf6ce>
  416458:	jne    4164e0 <main@@Base+0xf6c0>
  41645e:	cmp    BYTE PTR [r14+0x18],0x20
  416463:	jle    4164e0 <main@@Base+0xf6c0>
  416465:	add    r14,0x18
  416469:	mov    rsi,r14
  41646c:	cmp    rsi,r15
  41646f:	jne    4164f7 <main@@Base+0xf6d7>
  416475:	jmp    41660e <main@@Base+0xf7ee>
  41647a:	cmp    r13,0x6
  41647e:	jl     4165a2 <main@@Base+0xf782>
  416484:	and    rax,0xffffffffff000000
  41648a:	movabs rcx,0x7273696e67000000
  416494:	cmp    rax,rcx
  416497:	jne    4165a2 <main@@Base+0xf782>
  41649d:	cmp    BYTE PTR [r14+0x15],0x22
  4164a2:	jne    4165a2 <main@@Base+0xf782>
  4164a8:	lea    rsi,[r14+0x16]
  4164ac:	mov    rax,r15
  4164af:	sub    rax,rsi
  4164b2:	cmp    rax,0x2
  4164b6:	jl     416543 <main@@Base+0xf723>
  4164bc:	cmp    BYTE PTR [rsi],0x20
  4164bf:	jg     416552 <main@@Base+0xf732>
  4164c5:	jne    416543 <main@@Base+0xf723>
  4164c7:	cmp    BYTE PTR [r14+0x17],0x20
  4164cc:	jle    416543 <main@@Base+0xf723>
  4164ce:	lea    rsi,[r14+0x17]
  4164d2:	cmp    rsi,r15
  4164d5:	jne    41655b <main@@Base+0xf73b>
  4164db:	jmp    416623 <main@@Base+0xf803>
  4164e0:	mov    rdi,rbx
  4164e3:	mov    rdx,r15
  4164e6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4164eb:	mov    rsi,rax
  4164ee:	cmp    rsi,r15
  4164f1:	je     41660e <main@@Base+0xf7ee>
  4164f7:	cmp    BYTE PTR [rsi],0x3a
  4164fa:	jne    41660e <main@@Base+0xf7ee>
  416500:	lea    rbp,[rsi+0x1]
  416504:	mov    rax,r15
  416507:	sub    rax,rbp
  41650a:	cmp    rax,0x2
  41650e:	jl     4166a9 <main@@Base+0xf889>
  416514:	cmp    BYTE PTR [rbp+0x0],0x20
  416518:	jg     4166ba <main@@Base+0xf89a>
  41651e:	jne    4166a9 <main@@Base+0xf889>
  416524:	cmp    BYTE PTR [rsi+0x2],0x20
  416528:	jle    4166a9 <main@@Base+0xf889>
  41652e:	add    rsi,0x2
  416532:	mov    rbp,rsi
  416535:	cmp    r12,rbp
  416538:	jne    4166bf <main@@Base+0xf89f>
  41653e:	jmp    41672c <main@@Base+0xf90c>
  416543:	mov    rdi,QWORD PTR [rsp]
  416547:	mov    rdx,r15
  41654a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41654f:	mov    rsi,rax
  416552:	cmp    rsi,r15
  416555:	je     416623 <main@@Base+0xf803>
  41655b:	cmp    BYTE PTR [rsi],0x3a
  41655e:	jne    416623 <main@@Base+0xf803>
  416564:	lea    rbp,[rsi+0x1]
  416568:	mov    rax,r15
  41656b:	sub    rax,rbp
  41656e:	cmp    rax,0x2
  416572:	jl     416795 <main@@Base+0xf975>
  416578:	cmp    BYTE PTR [rbp+0x0],0x20
  41657c:	jg     4167a7 <main@@Base+0xf987>
  416582:	jne    416795 <main@@Base+0xf975>
  416588:	cmp    BYTE PTR [rsi+0x2],0x20
  41658c:	jle    416795 <main@@Base+0xf975>
  416592:	add    rsi,0x2
  416596:	mov    rbp,rsi
  416599:	cmp    r12,rbp
  41659c:	jne    4167b0 <main@@Base+0xf990>
  4165a2:	movabs rax,0x7273696e67000000
  4165ac:	lea    rax,[rax+0x330000]
  4165b3:	cmp    rbx,rax
  4165b6:	jne    41672c <main@@Base+0xf90c>
  4165bc:	cmp    r13,0x7
  4165c0:	mov    r13,QWORD PTR [rsp]
  4165c4:	movabs rbx,0x625f73746172745f
  4165ce:	jl     416730 <main@@Base+0xf910>
  4165d4:	cmp    BYTE PTR [r14+0x16],0x22
  4165d9:	jne    416730 <main@@Base+0xf910>
  4165df:	lea    rsi,[r14+0x17]
  4165e3:	mov    rax,r15
  4165e6:	sub    rax,rsi
  4165e9:	cmp    rax,0x2
  4165ed:	jl     416639 <main@@Base+0xf819>
  4165ef:	cmp    BYTE PTR [rsi],0x20
  4165f2:	jg     416647 <main@@Base+0xf827>
  4165f4:	jne    416639 <main@@Base+0xf819>
  4165f6:	cmp    BYTE PTR [r14+0x18],0x20
  4165fb:	jle    416639 <main@@Base+0xf819>
  4165fd:	add    r14,0x18
  416601:	mov    rsi,r14
  416604:	cmp    rsi,r15
  416607:	jne    41664c <main@@Base+0xf82c>
  416609:	jmp    416694 <main@@Base+0xf874>
  41660e:	mov    ecx,0x4
  416613:	mov    rdi,rbx
  416616:	mov    rdx,r15
  416619:	call   423620 <flatcc_json_parser_set_error@@Base>
  41661e:	jmp    4166b7 <main@@Base+0xf897>
  416623:	mov    ecx,0x4
  416628:	mov    rdi,QWORD PTR [rsp]
  41662c:	mov    rdx,r15
  41662f:	call   423620 <flatcc_json_parser_set_error@@Base>
  416634:	jmp    4167a4 <main@@Base+0xf984>
  416639:	mov    rdi,r13
  41663c:	mov    rdx,r15
  41663f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  416644:	mov    rsi,rax
  416647:	cmp    rsi,r15
  41664a:	je     416694 <main@@Base+0xf874>
  41664c:	cmp    BYTE PTR [rsi],0x3a
  41664f:	jne    416694 <main@@Base+0xf874>
  416651:	lea    rbp,[rsi+0x1]
  416655:	mov    rax,r15
  416658:	sub    rax,rbp
  41665b:	cmp    rax,0x2
  41665f:	jl     4168e7 <main@@Base+0xfac7>
  416665:	cmp    BYTE PTR [rbp+0x0],0x20
  416669:	jg     4168f8 <main@@Base+0xfad8>
  41666f:	jne    4168e7 <main@@Base+0xfac7>
  416675:	cmp    BYTE PTR [rsi+0x2],0x20
  416679:	jle    4168e7 <main@@Base+0xfac7>
  41667f:	add    rsi,0x2
  416683:	mov    rbp,rsi
  416686:	cmp    r12,rbp
  416689:	jne    416901 <main@@Base+0xfae1>
  41668f:	jmp    416730 <main@@Base+0xf910>
  416694:	mov    ecx,0x4
  416699:	mov    rdi,r13
  41669c:	mov    rdx,r15
  41669f:	call   423620 <flatcc_json_parser_set_error@@Base>
  4166a4:	jmp    4168f5 <main@@Base+0xfad5>
  4166a9:	mov    rdi,rbx
  4166ac:	mov    rsi,rbp
  4166af:	mov    rdx,r15
  4166b2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4166b7:	mov    rbp,rax
  4166ba:	cmp    r12,rbp
  4166bd:	je     41672c <main@@Base+0xf90c>
  4166bf:	mov    r13,QWORD PTR [rsp]
  4166c3:	mov    rdi,QWORD PTR [r13+0x0]
  4166c7:	mov    esi,0x2
  4166cc:	call   41eb00 <flatcc_builder_start_table@@Base>
  4166d1:	test   eax,eax
  4166d3:	jne    418f8e <main@@Base+0x1216e>
  4166d9:	cmp    rbp,r15
  4166dc:	je     41674b <main@@Base+0xf92b>
  4166de:	cmp    BYTE PTR [rbp+0x0],0x7b
  4166e2:	jne    41674b <main@@Base+0xf92b>
  4166e4:	lea    rax,[rbp+0x1]
  4166e8:	mov    rcx,r15
  4166eb:	sub    rcx,rax
  4166ee:	cmp    rcx,0x2
  4166f2:	mov    r12,QWORD PTR [rsp+0x10]
  4166f7:	movabs rbx,0x625f73746172745f
  416701:	jl     416833 <main@@Base+0xfa13>
  416707:	cmp    BYTE PTR [rax],0x20
  41670a:	jg     416841 <main@@Base+0xfa21>
  416710:	jne    416833 <main@@Base+0xfa13>
  416716:	cmp    BYTE PTR [rbp+0x2],0x20
  41671a:	jle    416833 <main@@Base+0xfa13>
  416720:	add    rbp,0x2
  416724:	mov    rax,rbp
  416727:	jmp    416841 <main@@Base+0xfa21>
  41672c:	mov    r13,QWORD PTR [rsp]
  416730:	mov    rdi,r13
  416733:	mov    rsi,r12
  416736:	mov    rdx,r15
  416739:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41673e:	mov    rbp,rax
  416741:	mov    r12,QWORD PTR [rsp+0x10]
  416746:	jmp    4162bd <main@@Base+0xf49d>
  41674b:	mov    ecx,0x15
  416750:	mov    rdi,r13
  416753:	mov    rsi,rbp
  416756:	mov    rdx,r15
  416759:	call   423620 <flatcc_json_parser_set_error@@Base>
  41675e:	mov    rbp,rax
  416761:	mov    r12,QWORD PTR [rsp+0x10]
  416766:	mov    rax,QWORD PTR [rsp+0x18]
  41676b:	cmp    DWORD PTR [rax],0x0
  41676e:	jne    418f8e <main@@Base+0x1216e>
  416774:	mov    rdi,QWORD PTR [r13+0x0]
  416778:	call   41f510 <flatcc_builder_end_table@@Base>
  41677d:	test   eax,eax
  41677f:	je     418f8e <main@@Base+0x1216e>
  416785:	mov    ebx,eax
  416787:	mov    rdi,QWORD PTR [r13+0x0]
  41678b:	mov    esi,0x1
  416790:	jmp    418e75 <main@@Base+0x12055>
  416795:	mov    rdi,QWORD PTR [rsp]
  416799:	mov    rsi,rbp
  41679c:	mov    rdx,r15
  41679f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4167a4:	mov    rbp,rax
  4167a7:	cmp    r12,rbp
  4167aa:	je     4165a2 <main@@Base+0xf782>
  4167b0:	mov    r13,QWORD PTR [rsp]
  4167b4:	mov    rdi,QWORD PTR [r13+0x0]
  4167b8:	mov    esi,0x9
  4167bd:	call   41eb00 <flatcc_builder_start_table@@Base>
  4167c2:	test   eax,eax
  4167c4:	jne    418f8e <main@@Base+0x1216e>
  4167ca:	cmp    rbp,r15
  4167cd:	je     416813 <main@@Base+0xf9f3>
  4167cf:	cmp    BYTE PTR [rbp+0x0],0x7b
  4167d3:	jne    416813 <main@@Base+0xf9f3>
  4167d5:	lea    rax,[rbp+0x1]
  4167d9:	mov    rcx,r15
  4167dc:	sub    rcx,rax
  4167df:	cmp    rcx,0x2
  4167e3:	mov    r12,QWORD PTR [rsp+0x10]
  4167e8:	jl     41688d <main@@Base+0xfa6d>
  4167ee:	cmp    BYTE PTR [rax],0x20
  4167f1:	jg     41689b <main@@Base+0xfa7b>
  4167f7:	jne    41688d <main@@Base+0xfa6d>
  4167fd:	cmp    BYTE PTR [rbp+0x2],0x20
  416801:	jle    41688d <main@@Base+0xfa6d>
  416807:	add    rbp,0x2
  41680b:	mov    rax,rbp
  41680e:	jmp    41689b <main@@Base+0xfa7b>
  416813:	mov    ecx,0x15
  416818:	mov    rdi,r13
  41681b:	mov    rsi,rbp
  41681e:	mov    rdx,r15
  416821:	call   423620 <flatcc_json_parser_set_error@@Base>
  416826:	mov    rbp,rax
  416829:	mov    r12,QWORD PTR [rsp+0x10]
  41682e:	jmp    418e4e <main@@Base+0x1202e>
  416833:	mov    rdi,r13
  416836:	mov    rsi,rax
  416839:	mov    rdx,r15
  41683c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  416841:	mov    rdx,r15
  416844:	cmp    rax,r15
  416847:	je     4173a7 <main@@Base+0x10587>
  41684d:	cmp    BYTE PTR [rax],0x7d
  416850:	jne    416997 <main@@Base+0xfb77>
  416856:	lea    rbp,[rax+0x1]
  41685a:	mov    rcx,r15
  41685d:	sub    rcx,rbp
  416860:	cmp    rcx,0x2
  416864:	jl     4178fd <main@@Base+0x10add>
  41686a:	cmp    BYTE PTR [rbp+0x0],0x20
  41686e:	jg     416766 <main@@Base+0xf946>
  416874:	jne    4178fd <main@@Base+0x10add>
  41687a:	cmp    BYTE PTR [rax+0x2],0x20
  41687e:	jle    4178fd <main@@Base+0x10add>
  416884:	add    rax,0x2
  416888:	jmp    41795d <main@@Base+0x10b3d>
  41688d:	mov    rdi,r13
  416890:	mov    rsi,rax
  416893:	mov    rdx,r15
  416896:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41689b:	mov    rsi,r15
  41689e:	cmp    rax,r15
  4168a1:	je     417a9b <main@@Base+0x10c7b>
  4168a7:	cmp    BYTE PTR [rax],0x7d
  4168aa:	jne    41699f <main@@Base+0xfb7f>
  4168b0:	lea    rbp,[rax+0x1]
  4168b4:	mov    rcx,r15
  4168b7:	sub    rcx,rbp
  4168ba:	cmp    rcx,0x2
  4168be:	jl     418e1b <main@@Base+0x11ffb>
  4168c4:	cmp    BYTE PTR [rbp+0x0],0x20
  4168c8:	jg     418e4e <main@@Base+0x1202e>
  4168ce:	jne    418e1b <main@@Base+0x11ffb>
  4168d4:	cmp    BYTE PTR [rax+0x2],0x20
  4168d8:	jle    418e1b <main@@Base+0x11ffb>
  4168de:	add    rax,0x2
  4168e2:	jmp    418e4b <main@@Base+0x1202b>
  4168e7:	mov    rdi,r13
  4168ea:	mov    rsi,rbp
  4168ed:	mov    rdx,r15
  4168f0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4168f5:	mov    rbp,rax
  4168f8:	cmp    r12,rbp
  4168fb:	je     416730 <main@@Base+0xf910>
  416901:	mov    rdi,QWORD PTR [r13+0x0]
  416905:	mov    esi,0x2
  41690a:	call   41eb00 <flatcc_builder_start_table@@Base>
  41690f:	test   eax,eax
  416911:	jne    418f8e <main@@Base+0x1216e>
  416917:	cmp    rbp,r15
  41691a:	je     41694d <main@@Base+0xfb2d>
  41691c:	cmp    BYTE PTR [rbp+0x0],0x7b
  416920:	jne    41694d <main@@Base+0xfb2d>
  416922:	lea    rax,[rbp+0x1]
  416926:	mov    rcx,r15
  416929:	sub    rcx,rax
  41692c:	cmp    rcx,0x2
  416930:	mov    r12,QWORD PTR [rsp+0x10]
  416935:	jl     4169a7 <main@@Base+0xfb87>
  416937:	cmp    BYTE PTR [rax],0x20
  41693a:	jg     4169b5 <main@@Base+0xfb95>
  41693c:	jne    4169a7 <main@@Base+0xfb87>
  41693e:	cmp    BYTE PTR [rbp+0x2],0x20
  416942:	jle    4169a7 <main@@Base+0xfb87>
  416944:	add    rbp,0x2
  416948:	mov    rax,rbp
  41694b:	jmp    4169b5 <main@@Base+0xfb95>
  41694d:	mov    ecx,0x15
  416952:	mov    rdi,r13
  416955:	mov    rsi,rbp
  416958:	mov    rdx,r15
  41695b:	call   423620 <flatcc_json_parser_set_error@@Base>
  416960:	mov    rbp,rax
  416963:	mov    r12,QWORD PTR [rsp+0x10]
  416968:	mov    rax,QWORD PTR [rsp+0x18]
  41696d:	cmp    DWORD PTR [rax],0x0
  416970:	jne    418f8e <main@@Base+0x1216e>
  416976:	mov    rdi,QWORD PTR [r13+0x0]
  41697a:	call   41f510 <flatcc_builder_end_table@@Base>
  41697f:	test   eax,eax
  416981:	je     418f8e <main@@Base+0x1216e>
  416987:	mov    ebx,eax
  416989:	mov    rdi,QWORD PTR [r13+0x0]
  41698d:	mov    esi,0x2
  416992:	jmp    418e75 <main@@Base+0x12055>
  416997:	mov    rdx,rax
  41699a:	jmp    4173a7 <main@@Base+0x10587>
  41699f:	mov    rsi,rax
  4169a2:	jmp    417a9b <main@@Base+0x10c7b>
  4169a7:	mov    rdi,r13
  4169aa:	mov    rsi,rax
  4169ad:	mov    rdx,r15
  4169b0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4169b5:	mov    rdx,r15
  4169b8:	cmp    rax,r15
  4169bb:	je     416da7 <main@@Base+0xff87>
  4169c1:	cmp    BYTE PTR [rax],0x7d
  4169c4:	jne    4169f9 <main@@Base+0xfbd9>
  4169c6:	lea    rbp,[rax+0x1]
  4169ca:	mov    rcx,r15
  4169cd:	sub    rcx,rbp
  4169d0:	cmp    rcx,0x2
  4169d4:	jl     4171c7 <main@@Base+0x103a7>
  4169da:	cmp    BYTE PTR [rbp+0x0],0x20
  4169de:	jg     416968 <main@@Base+0xfb48>
  4169e0:	jne    4171c7 <main@@Base+0x103a7>
  4169e6:	cmp    BYTE PTR [rax+0x2],0x20
  4169ea:	jle    4171c7 <main@@Base+0x103a7>
  4169f0:	add    rax,0x2
  4169f4:	jmp    417222 <main@@Base+0x10402>
  4169f9:	mov    rdx,rax
  4169fc:	jmp    416da7 <main@@Base+0xff87>
  416a01:	mov    rdi,r13
  416a04:	mov    rsi,rax
  416a07:	mov    rdx,r15
  416a0a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  416a0f:	cmp    rax,r15
  416a12:	je     416a5b <main@@Base+0xfc3b>
  416a14:	cmp    BYTE PTR [rax],0x3a
  416a17:	jne    416a5b <main@@Base+0xfc3b>
  416a19:	lea    rbx,[rax+0x1]
  416a1d:	mov    rcx,r15
  416a20:	sub    rcx,rbx
  416a23:	cmp    rcx,0x2
  416a27:	jl     416ae5 <main@@Base+0xfcc5>
  416a2d:	cmp    BYTE PTR [rbx],0x20
  416a30:	jg     416a49 <main@@Base+0xfc29>
  416a32:	jne    416ae5 <main@@Base+0xfcc5>
  416a38:	cmp    BYTE PTR [rax+0x2],0x20
  416a3c:	jle    416ae5 <main@@Base+0xfcc5>
  416a42:	add    rax,0x2
  416a46:	mov    rbx,rax
  416a49:	mov    r13,QWORD PTR [rsp]
  416a4d:	cmp    r12,rbx
  416a50:	jne    416b03 <main@@Base+0xfce3>
  416a56:	jmp    416bf1 <main@@Base+0xfdd1>
  416a5b:	mov    ecx,0x4
  416a60:	mov    rdi,r13
  416a63:	mov    rsi,rax
  416a66:	mov    rdx,r15
  416a69:	call   423620 <flatcc_json_parser_set_error@@Base>
  416a6e:	jmp    416af7 <main@@Base+0xfcd7>
  416a73:	mov    rdi,r13
  416a76:	mov    rsi,rax
  416a79:	mov    rdx,r15
  416a7c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  416a81:	cmp    rax,r15
  416a84:	je     416acd <main@@Base+0xfcad>
  416a86:	cmp    BYTE PTR [rax],0x3a
  416a89:	jne    416acd <main@@Base+0xfcad>
  416a8b:	lea    rbx,[rax+0x1]
  416a8f:	mov    rcx,r15
  416a92:	sub    rcx,rbx
  416a95:	cmp    rcx,0x2
  416a99:	jl     416b86 <main@@Base+0xfd66>
  416a9f:	cmp    BYTE PTR [rbx],0x20
  416aa2:	jg     416abb <main@@Base+0xfc9b>
  416aa4:	jne    416b86 <main@@Base+0xfd66>
  416aaa:	cmp    BYTE PTR [rax+0x2],0x20
  416aae:	jle    416b86 <main@@Base+0xfd66>
  416ab4:	add    rax,0x2
  416ab8:	mov    rbx,rax
  416abb:	mov    r13,QWORD PTR [rsp]
  416abf:	cmp    r12,rbx
  416ac2:	jne    416ba0 <main@@Base+0xfd80>
  416ac8:	jmp    416bf1 <main@@Base+0xfdd1>
  416acd:	mov    ecx,0x4
  416ad2:	mov    rdi,r13
  416ad5:	mov    rsi,rax
  416ad8:	mov    rdx,r15
  416adb:	call   423620 <flatcc_json_parser_set_error@@Base>
  416ae0:	jmp    416b98 <main@@Base+0xfd78>
  416ae5:	mov    r13,QWORD PTR [rsp]
  416ae9:	mov    rdi,r13
  416aec:	mov    rsi,rbx
  416aef:	mov    rdx,r15
  416af2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  416af7:	mov    rbx,rax
  416afa:	cmp    r12,rbx
  416afd:	je     416bf1 <main@@Base+0xfdd1>
  416b03:	mov    QWORD PTR [rsp+0x28],0x0
  416b0c:	mov    DWORD PTR [rsp+0xc],0x0
  416b14:	mov    QWORD PTR [rsp+0x20],0x0
  416b1d:	cmp    rbx,r15
  416b20:	je     416b73 <main@@Base+0xfd53>
  416b22:	mov    rdi,r13
  416b25:	mov    rsi,rbx
  416b28:	mov    rdx,r15
  416b2b:	lea    rcx,[rsp+0xc]
  416b30:	lea    r8,[rsp+0x28]
  416b35:	call   425160 <flatcc_json_parser_integer@@Base>
  416b3a:	cmp    rax,rbx
  416b3d:	je     416c22 <main@@Base+0xfe02>
  416b43:	mov    r12,rax
  416b46:	mov    rbp,QWORD PTR [rsp+0x28]
  416b4b:	cmp    DWORD PTR [rsp+0xc],0x0
  416b50:	je     416c31 <main@@Base+0xfe11>
  416b56:	movabs rax,0x8000000000000000
  416b60:	cmp    rbp,rax
  416b63:	jbe    416c97 <main@@Base+0xfe77>
  416b69:	mov    ecx,0x8
  416b6e:	jmp    416c3b <main@@Base+0xfe1b>
  416b73:	xor    ebp,ebp
  416b75:	mov    r12,r15
  416b78:	cmp    rbx,r12
  416b7b:	jne    416ce0 <main@@Base+0xfec0>
  416b81:	jmp    416ca8 <main@@Base+0xfe88>
  416b86:	mov    r13,QWORD PTR [rsp]
  416b8a:	mov    rdi,r13
  416b8d:	mov    rsi,rbx
  416b90:	mov    rdx,r15
  416b93:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  416b98:	mov    rbx,rax
  416b9b:	cmp    r12,rbx
  416b9e:	je     416bf1 <main@@Base+0xfdd1>
  416ba0:	mov    QWORD PTR [rsp+0x28],0x0
  416ba9:	mov    DWORD PTR [rsp+0x20],0x0
  416bb1:	mov    DWORD PTR [rsp+0xc],0x0
  416bb9:	xor    ebp,ebp
  416bbb:	cmp    rbx,r15
  416bbe:	je     416c11 <main@@Base+0xfdf1>
  416bc0:	mov    rdi,r13
  416bc3:	mov    rsi,rbx
  416bc6:	mov    rdx,r15
  416bc9:	lea    rcx,[rsp+0x20]
  416bce:	lea    r8,[rsp+0x28]
  416bd3:	call   425160 <flatcc_json_parser_integer@@Base>
  416bd8:	cmp    rax,rbx
  416bdb:	je     416c29 <main@@Base+0xfe09>
  416bdd:	mov    r12,rax
  416be0:	cmp    DWORD PTR [rsp+0x20],0x0
  416be5:	je     416c5d <main@@Base+0xfe3d>
  416be7:	mov    ecx,0x8
  416bec:	jmp    416c74 <main@@Base+0xfe54>
  416bf1:	mov    rdi,r13
  416bf4:	mov    rsi,r12
  416bf7:	mov    rdx,r15
  416bfa:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  416bff:	mov    r12,rax
  416c02:	movabs rbx,0x625f73746172745f
  416c0c:	jmp    4170fa <main@@Base+0x102da>
  416c11:	mov    r12,r15
  416c14:	cmp    rbx,r12
  416c17:	jne    416d66 <main@@Base+0xff46>
  416c1d:	jmp    416d2f <main@@Base+0xff0f>
  416c22:	xor    ebp,ebp
  416c24:	mov    r12,rbx
  416c27:	jmp    416c9f <main@@Base+0xfe7f>
  416c29:	mov    r12,rbx
  416c2c:	jmp    416d26 <main@@Base+0xff06>
  416c31:	test   rbp,rbp
  416c34:	jns    416c9a <main@@Base+0xfe7a>
  416c36:	mov    ecx,0x7
  416c3b:	mov    r13,QWORD PTR [rsp]
  416c3f:	mov    rdi,r13
  416c42:	mov    rsi,r12
  416c45:	mov    rdx,r15
  416c48:	call   423620 <flatcc_json_parser_set_error@@Base>
  416c4d:	mov    r12,rax
  416c50:	xor    ebp,ebp
  416c52:	cmp    rbx,r12
  416c55:	jne    416ce0 <main@@Base+0xfec0>
  416c5b:	jmp    416ca8 <main@@Base+0xfe88>
  416c5d:	mov    rax,QWORD PTR [rsp+0x28]
  416c62:	mov    rcx,rax
  416c65:	shr    rcx,0x20
  416c69:	je     416d20 <main@@Base+0xff00>
  416c6f:	mov    ecx,0x7
  416c74:	mov    r13,QWORD PTR [rsp]
  416c78:	mov    rdi,r13
  416c7b:	mov    rsi,r12
  416c7e:	mov    rdx,r15
  416c81:	call   423620 <flatcc_json_parser_set_error@@Base>
  416c86:	mov    r12,rax
  416c89:	cmp    rbx,r12
  416c8c:	jne    416d66 <main@@Base+0xff46>
  416c92:	jmp    416d2f <main@@Base+0xff0f>
  416c97:	neg    rbp
  416c9a:	mov    QWORD PTR [rsp+0x20],rbp
  416c9f:	mov    r13,QWORD PTR [rsp]
  416ca3:	cmp    rbx,r12
  416ca6:	jne    416ce0 <main@@Base+0xfec0>
  416ca8:	mov    rdi,r13
  416cab:	mov    rsi,rbx
  416cae:	mov    rdx,r15
  416cb1:	lea    rcx,[rip+0x2a968]        # 441620 <__data_start@@Base+0x570>
  416cb8:	lea    r8,[rsp+0x20]
  416cbd:	call   4146e0 <main@@Base+0xd8c0>
  416cc2:	mov    r12,rax
  416cc5:	cmp    rax,rbx
  416cc8:	je     418f70 <main@@Base+0x12150>
  416cce:	cmp    r12,r15
  416cd1:	je     418f70 <main@@Base+0x12150>
  416cd7:	mov    rbp,QWORD PTR [rsp+0x20]
  416cdc:	mov    r13,QWORD PTR [rsp]
  416ce0:	test   rbp,rbp
  416ce3:	movabs rbx,0x625f73746172745f
  416ced:	jne    416cfa <main@@Base+0xfeda>
  416cef:	test   BYTE PTR [r13+0x10],0x2
  416cf4:	je     4170fa <main@@Base+0x102da>
  416cfa:	mov    rdi,QWORD PTR [r13+0x0]
  416cfe:	xor    esi,esi
  416d00:	mov    edx,0x8
  416d05:	mov    ecx,0x8
  416d0a:	call   41fe80 <flatcc_builder_table_add@@Base>
  416d0f:	test   rax,rax
  416d12:	je     418f70 <main@@Base+0x12150>
  416d18:	mov    QWORD PTR [rax],rbp
  416d1b:	jmp    4170fa <main@@Base+0x102da>
  416d20:	mov    DWORD PTR [rsp+0xc],eax
  416d24:	mov    ebp,eax
  416d26:	mov    r13,QWORD PTR [rsp]
  416d2a:	cmp    rbx,r12
  416d2d:	jne    416d66 <main@@Base+0xff46>
  416d2f:	mov    rdi,r13
  416d32:	mov    rsi,rbx
  416d35:	mov    rdx,r15
  416d38:	lea    rcx,[rip+0x2a8c1]        # 441600 <__data_start@@Base+0x550>
  416d3f:	lea    r8,[rsp+0xc]
  416d44:	call   414890 <main@@Base+0xda70>
  416d49:	mov    r12,rax
  416d4c:	cmp    rax,rbx
  416d4f:	je     418f70 <main@@Base+0x12150>
  416d55:	cmp    r12,r15
  416d58:	je     418f70 <main@@Base+0x12150>
  416d5e:	mov    ebp,DWORD PTR [rsp+0xc]
  416d62:	mov    r13,QWORD PTR [rsp]
  416d66:	test   ebp,ebp
  416d68:	movabs rbx,0x625f73746172745f
  416d72:	jne    416d7f <main@@Base+0xff5f>
  416d74:	test   BYTE PTR [r13+0x10],0x2
  416d79:	je     4170fa <main@@Base+0x102da>
  416d7f:	mov    rdi,QWORD PTR [r13+0x0]
  416d83:	mov    esi,0x1
  416d88:	mov    edx,0x4
  416d8d:	mov    ecx,0x4
  416d92:	call   41fe80 <flatcc_builder_table_add@@Base>
  416d97:	test   rax,rax
  416d9a:	je     418f70 <main@@Base+0x12150>
  416da0:	mov    DWORD PTR [rax],ebp
  416da2:	jmp    4170fa <main@@Base+0x102da>
  416da7:	mov    rsi,r15
  416daa:	cmp    rdx,r15
  416dad:	movabs r14,0x616161615f626262
  416db7:	je     416ddd <main@@Base+0xffbd>
  416db9:	cmp    BYTE PTR [rdx],0x22
  416dbc:	jne    416dc7 <main@@Base+0xffa7>
  416dbe:	add    rdx,0x1
  416dc2:	mov    rsi,rdx
  416dc5:	jmp    416ddd <main@@Base+0xffbd>
  416dc7:	mov    ecx,0x5
  416dcc:	mov    rdi,r13
  416dcf:	mov    rsi,rdx
  416dd2:	mov    rdx,r15
  416dd5:	call   423620 <flatcc_json_parser_set_error@@Base>
  416dda:	mov    rsi,rax
  416ddd:	mov    rax,r15
  416de0:	sub    rax,rsi
  416de3:	cmp    rax,0x8
  416de7:	jb     416dfc <main@@Base+0xffdc>
  416de9:	movbe  rax,QWORD PTR [rsi]
  416dee:	cmp    rax,r14
  416df1:	je     416e91 <main@@Base+0x10071>
  416df7:	jmp    416ecf <main@@Base+0x100af>
  416dfc:	and    al,0xf
  416dfe:	add    al,0xff
  416e00:	cmp    al,0x7
  416e02:	ja     416ecf <main@@Base+0x100af>
  416e08:	movzx  eax,al
  416e0b:	lea    rcx,[rip+0x1ca42]        # 433854 <_IO_stdin_used@@Base+0x854>
  416e12:	movsxd rax,DWORD PTR [rcx+rax*4]
  416e16:	add    rax,rcx
  416e19:	xor    r8d,r8d
  416e1c:	xor    r9d,r9d
  416e1f:	xor    ecx,ecx
  416e21:	xor    edx,edx
  416e23:	xor    ebp,ebp
  416e25:	xor    ebx,ebx
  416e27:	xor    edi,edi
  416e29:	jmp    rax
  416e2b:	movsx  r8,BYTE PTR [rsi+0x7]
  416e30:	movsx  r9,BYTE PTR [rsi+0x6]
  416e35:	shl    r9,0x8
  416e39:	or     r9,r8
  416e3c:	movsx  rcx,BYTE PTR [rsi+0x5]
  416e41:	shl    rcx,0x10
  416e45:	or     rcx,r9
  416e48:	movsx  rdx,BYTE PTR [rsi+0x4]
  416e4d:	shl    rdx,0x18
  416e51:	or     rdx,rcx
  416e54:	movsx  rbp,BYTE PTR [rsi+0x3]
  416e59:	shl    rbp,0x20
  416e5d:	or     rbp,rdx
  416e60:	movsx  rbx,BYTE PTR [rsi+0x2]
  416e65:	shl    rbx,0x28
  416e69:	or     rbx,rbp
  416e6c:	movsx  rdi,BYTE PTR [rsi+0x1]
  416e71:	shl    rdi,0x30
  416e75:	or     rdi,rbx
  416e78:	movzx  eax,BYTE PTR [rsi]
  416e7b:	shl    rax,0x38
  416e7f:	or     rax,rdi
  416e82:	movabs rbx,0x625f73746172745f
  416e8c:	cmp    rax,r14
  416e8f:	jne    416ecf <main@@Base+0x100af>
  416e91:	lea    r12,[rsi+0x8]
  416e95:	mov    rax,r15
  416e98:	sub    rax,r12
  416e9b:	cmp    rax,0x8
  416e9f:	jb     416ed7 <main@@Base+0x100b7>
  416ea1:	movbe  rcx,QWORD PTR [r12]
  416ea7:	cmp    rcx,rbx
  416eaa:	jne    416f78 <main@@Base+0x10158>
  416eb0:	lea    r12,[rsi+0x10]
  416eb4:	mov    rax,r15
  416eb7:	sub    rax,r12
  416eba:	cmp    rax,0x8
  416ebe:	jb     416fe5 <main@@Base+0x101c5>
  416ec4:	movbe  rdx,QWORD PTR [r12]
  416eca:	jmp    417080 <main@@Base+0x10260>
  416ecf:	mov    rdi,r13
  416ed2:	jmp    4170ef <main@@Base+0x102cf>
  416ed7:	mov    ecx,eax
  416ed9:	and    cl,0xf
  416edc:	add    cl,0xff
  416edf:	cmp    cl,0x7
  416ee2:	ja     4170e9 <main@@Base+0x102c9>
  416ee8:	movzx  ecx,cl
  416eeb:	lea    rdx,[rip+0x1c982]        # 433874 <_IO_stdin_used@@Base+0x874>
  416ef2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416ef6:	add    rcx,rdx
  416ef9:	xor    r8d,r8d
  416efc:	xor    r9d,r9d
  416eff:	xor    r10d,r10d
  416f02:	xor    edi,edi
  416f04:	xor    ebp,ebp
  416f06:	xor    ebx,ebx
  416f08:	xor    edx,edx
  416f0a:	jmp    rcx
  416f0c:	movsx  r8,BYTE PTR [rsi+0xf]
  416f11:	movsx  r9,BYTE PTR [rsi+0xe]
  416f16:	shl    r9,0x8
  416f1a:	or     r9,r8
  416f1d:	movsx  r10,BYTE PTR [rsi+0xd]
  416f22:	shl    r10,0x10
  416f26:	or     r10,r9
  416f29:	movsx  rdi,BYTE PTR [rsi+0xc]
  416f2e:	shl    rdi,0x18
  416f32:	or     rdi,r10
  416f35:	movsx  rbp,BYTE PTR [rsi+0xb]
  416f3a:	shl    rbp,0x20
  416f3e:	or     rbp,rdi
  416f41:	movsx  rbx,BYTE PTR [rsi+0xa]
  416f46:	shl    rbx,0x28
  416f4a:	or     rbx,rbp
  416f4d:	movsx  rdx,BYTE PTR [rsi+0x9]
  416f52:	shl    rdx,0x30
  416f56:	or     rdx,rbx
  416f59:	movzx  ecx,BYTE PTR [r12]
  416f5e:	shl    rcx,0x38
  416f62:	or     rcx,rdx
  416f65:	movabs rbx,0x625f73746172745f
  416f6f:	cmp    rcx,rbx
  416f72:	je     416eb0 <main@@Base+0x10090>
  416f78:	and    rcx,0xffffffffffffff00
  416f7f:	lea    rdx,[rbx+0x3fdfea1]
  416f86:	cmp    rcx,rdx
  416f89:	jne    4170e9 <main@@Base+0x102c9>
  416f8f:	cmp    rax,0x8
  416f93:	jl     416bf1 <main@@Base+0xfdd1>
  416f99:	cmp    BYTE PTR [rsi+0xf],0x22
  416f9d:	jne    416bf1 <main@@Base+0xfdd1>
  416fa3:	lea    rax,[rsi+0x10]
  416fa7:	mov    rcx,r15
  416faa:	sub    rcx,rax
  416fad:	cmp    rcx,0x2
  416fb1:	jl     416a01 <main@@Base+0xfbe1>
  416fb7:	cmp    BYTE PTR [rax],0x20
  416fba:	jg     416a0f <main@@Base+0xfbef>
  416fc0:	jne    416a01 <main@@Base+0xfbe1>
  416fc6:	cmp    BYTE PTR [rsi+0x11],0x20
  416fca:	jle    416a01 <main@@Base+0xfbe1>
  416fd0:	add    rsi,0x11
  416fd4:	mov    rax,rsi
  416fd7:	cmp    rax,r15
  416fda:	jne    416a14 <main@@Base+0xfbf4>
  416fe0:	jmp    416a5b <main@@Base+0xfc3b>
  416fe5:	mov    ecx,eax
  416fe7:	and    cl,0xf
  416fea:	add    cl,0xff
  416fed:	cmp    cl,0x7
  416ff0:	ja     4170e9 <main@@Base+0x102c9>
  416ff6:	movzx  ecx,cl
  416ff9:	lea    rdx,[rip+0x1c894]        # 433894 <_IO_stdin_used@@Base+0x894>
  417000:	mov    rdi,rdx
  417003:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  417007:	add    rdx,rdi
  41700a:	xor    r8d,r8d
  41700d:	xor    r9d,r9d
  417010:	xor    r10d,r10d
  417013:	xor    edi,edi
  417015:	xor    ebx,ebx
  417017:	xor    ebp,ebp
  417019:	xor    ecx,ecx
  41701b:	jmp    rdx
  41701d:	movsx  r8,BYTE PTR [rsi+0x17]
  417022:	movsx  r9,BYTE PTR [rsi+0x16]
  417027:	shl    r9,0x8
  41702b:	or     r9,r8
  41702e:	movsx  r10,BYTE PTR [rsi+0x15]
  417033:	shl    r10,0x10
  417037:	or     r10,r9
  41703a:	movsx  rdi,BYTE PTR [rsi+0x14]
  41703f:	shl    rdi,0x18
  417043:	or     rdi,r10
  417046:	movsx  rbx,BYTE PTR [rsi+0x13]
  41704b:	shl    rbx,0x20
  41704f:	or     rbx,rdi
  417052:	movsx  rbp,BYTE PTR [rsi+0x12]
  417057:	shl    rbp,0x28
  41705b:	or     rbp,rbx
  41705e:	movsx  rcx,BYTE PTR [rsi+0x11]
  417063:	shl    rcx,0x30
  417067:	or     rcx,rbp
  41706a:	movzx  edx,BYTE PTR [r12]
  41706f:	shl    rdx,0x38
  417073:	or     rdx,rcx
  417076:	movabs rbx,0x625f73746172745f
  417080:	shr    rdx,0x18
  417084:	movabs rcx,0x7374657073
  41708e:	cmp    rdx,rcx
  417091:	jne    4170e9 <main@@Base+0x102c9>
  417093:	cmp    rax,0x6
  417097:	jl     416bf1 <main@@Base+0xfdd1>
  41709d:	cmp    BYTE PTR [rsi+0x15],0x22
  4170a1:	jne    416bf1 <main@@Base+0xfdd1>
  4170a7:	lea    rax,[rsi+0x16]
  4170ab:	mov    rcx,r15
  4170ae:	sub    rcx,rax
  4170b1:	cmp    rcx,0x2
  4170b5:	jl     416a73 <main@@Base+0xfc53>
  4170bb:	cmp    BYTE PTR [rax],0x20
  4170be:	jg     416a81 <main@@Base+0xfc61>
  4170c4:	jne    416a73 <main@@Base+0xfc53>
  4170ca:	cmp    BYTE PTR [rsi+0x17],0x20
  4170ce:	jle    416a73 <main@@Base+0xfc53>
  4170d4:	add    rsi,0x17
  4170d8:	mov    rax,rsi
  4170db:	cmp    rax,r15
  4170de:	jne    416a86 <main@@Base+0xfc66>
  4170e4:	jmp    416acd <main@@Base+0xfcad>
  4170e9:	mov    rdi,r13
  4170ec:	mov    rsi,r12
  4170ef:	mov    rdx,r15
  4170f2:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  4170f7:	mov    r12,rax
  4170fa:	mov    rax,r15
  4170fd:	sub    rax,r12
  417100:	cmp    rax,0x2
  417104:	jl     417125 <main@@Base+0x10305>
  417106:	cmp    BYTE PTR [r12],0x20
  41710b:	jg     417136 <main@@Base+0x10316>
  41710d:	jne    417125 <main@@Base+0x10305>
  41710f:	cmp    BYTE PTR [r12+0x1],0x20
  417115:	jle    417125 <main@@Base+0x10305>
  417117:	add    r12,0x1
  41711b:	cmp    r12,r15
  41711e:	jne    41713f <main@@Base+0x1031f>
  417120:	jmp    4171d7 <main@@Base+0x103b7>
  417125:	mov    rdi,r13
  417128:	mov    rsi,r12
  41712b:	mov    rdx,r15
  41712e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417133:	mov    r12,rax
  417136:	cmp    r12,r15
  417139:	je     4171d7 <main@@Base+0x103b7>
  41713f:	movzx  eax,BYTE PTR [r12]
  417144:	cmp    al,0x2c
  417146:	jne    4171df <main@@Base+0x103bf>
  41714c:	lea    rdx,[r12+0x1]
  417151:	mov    rax,r15
  417154:	sub    rax,rdx
  417157:	cmp    rax,0x2
  41715b:	jl     417175 <main@@Base+0x10355>
  41715d:	cmp    BYTE PTR [rdx],0x20
  417160:	jg     417186 <main@@Base+0x10366>
  417162:	jne    417175 <main@@Base+0x10355>
  417164:	cmp    BYTE PTR [r12+0x2],0x20
  41716a:	jle    417175 <main@@Base+0x10355>
  41716c:	add    r12,0x2
  417170:	mov    rdx,r12
  417173:	jmp    417186 <main@@Base+0x10366>
  417175:	mov    rdi,r13
  417178:	mov    rsi,rdx
  41717b:	mov    rdx,r15
  41717e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417183:	mov    rdx,rax
  417186:	cmp    rdx,r15
  417189:	mov    r12,QWORD PTR [rsp+0x10]
  41718e:	je     41720f <main@@Base+0x103ef>
  417190:	cmp    BYTE PTR [rdx],0x7d
  417193:	jne    416da7 <main@@Base+0xff87>
  417199:	lea    rbp,[rdx+0x1]
  41719d:	mov    rax,r15
  4171a0:	sub    rax,rbp
  4171a3:	cmp    rax,0x2
  4171a7:	jl     4171c7 <main@@Base+0x103a7>
  4171a9:	cmp    BYTE PTR [rbp+0x0],0x20
  4171ad:	jg     416968 <main@@Base+0xfb48>
  4171b3:	jne    4171c7 <main@@Base+0x103a7>
  4171b5:	cmp    BYTE PTR [rdx+0x2],0x20
  4171b9:	jle    4171c7 <main@@Base+0x103a7>
  4171bb:	add    rdx,0x2
  4171bf:	mov    rbp,rdx
  4171c2:	jmp    416968 <main@@Base+0xfb48>
  4171c7:	mov    rdi,r13
  4171ca:	mov    rsi,rbp
  4171cd:	mov    rdx,r15
  4171d0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4171d5:	jmp    417222 <main@@Base+0x10402>
  4171d7:	mov    rbp,r15
  4171da:	jmp    416963 <main@@Base+0xfb43>
  4171df:	cmp    al,0x7d
  4171e1:	jne    417988 <main@@Base+0x10b68>
  4171e7:	lea    rbp,[r12+0x1]
  4171ec:	mov    rax,r15
  4171ef:	sub    rax,rbp
  4171f2:	cmp    rax,0x2
  4171f6:	jl     4179b2 <main@@Base+0x10b92>
  4171fc:	cmp    BYTE PTR [rbp+0x0],0x20
  417200:	jle    417998 <main@@Base+0x10b78>
  417206:	mov    r13,QWORD PTR [rsp]
  41720a:	jmp    416963 <main@@Base+0xfb43>
  41720f:	mov    ecx,0xa
  417214:	mov    rdi,r13
  417217:	mov    rsi,r15
  41721a:	mov    rdx,r15
  41721d:	call   423620 <flatcc_json_parser_set_error@@Base>
  417222:	mov    rbp,rax
  417225:	jmp    416968 <main@@Base+0xfb48>
  41722a:	mov    r12,r15
  41722d:	cmp    rbx,r12
  417230:	jne    417352 <main@@Base+0x10532>
  417236:	jmp    41731b <main@@Base+0x104fb>
  41723b:	test   rbp,rbp
  41723e:	jns    417262 <main@@Base+0x10442>
  417240:	mov    ecx,0x7
  417245:	mov    rdi,r13
  417248:	mov    rsi,r12
  41724b:	mov    rdx,r15
  41724e:	call   423620 <flatcc_json_parser_set_error@@Base>
  417253:	mov    r12,rax
  417256:	xor    ebp,ebp
  417258:	cmp    rbx,r12
  41725b:	jne    4172a0 <main@@Base+0x10480>
  41725d:	jmp    41726c <main@@Base+0x1044c>
  41725f:	neg    rbp
  417262:	mov    QWORD PTR [rsp+0x20],rbp
  417267:	cmp    rbx,r12
  41726a:	jne    4172a0 <main@@Base+0x10480>
  41726c:	mov    rdi,r13
  41726f:	mov    rsi,rbx
  417272:	mov    rdx,r15
  417275:	lea    rcx,[rip+0x2a284]        # 441500 <__data_start@@Base+0x450>
  41727c:	lea    r8,[rsp+0x20]
  417281:	call   4146e0 <main@@Base+0xd8c0>
  417286:	mov    r12,rax
  417289:	cmp    rax,rbx
  41728c:	je     418f70 <main@@Base+0x12150>
  417292:	cmp    r12,r15
  417295:	je     418f70 <main@@Base+0x12150>
  41729b:	mov    rbp,QWORD PTR [rsp+0x20]
  4172a0:	test   rbp,rbp
  4172a3:	movabs rbx,0x625f73746172745f
  4172ad:	jne    4172ba <main@@Base+0x1049a>
  4172af:	test   BYTE PTR [r13+0x10],0x2
  4172b4:	je     41782c <main@@Base+0x10a0c>
  4172ba:	mov    rdi,QWORD PTR [r13+0x0]
  4172be:	xor    esi,esi
  4172c0:	mov    edx,0x8
  4172c5:	mov    ecx,0x8
  4172ca:	call   41fe80 <flatcc_builder_table_add@@Base>
  4172cf:	test   rax,rax
  4172d2:	je     418f70 <main@@Base+0x12150>
  4172d8:	mov    QWORD PTR [rax],rbp
  4172db:	jmp    41782c <main@@Base+0x10a0c>
  4172e0:	mov    r12,rbx
  4172e3:	cmp    rbx,r12
  4172e6:	jne    417352 <main@@Base+0x10532>
  4172e8:	jmp    41731b <main@@Base+0x104fb>
  4172ea:	mov    rax,QWORD PTR [rsp+0x28]
  4172ef:	mov    rcx,rax
  4172f2:	shr    rcx,0x20
  4172f6:	je     417393 <main@@Base+0x10573>
  4172fc:	mov    ecx,0x7
  417301:	mov    r13,QWORD PTR [rsp]
  417305:	mov    rdi,r13
  417308:	mov    rsi,r12
  41730b:	mov    rdx,r15
  41730e:	call   423620 <flatcc_json_parser_set_error@@Base>
  417313:	mov    r12,rax
  417316:	cmp    rbx,r12
  417319:	jne    417352 <main@@Base+0x10532>
  41731b:	mov    rdi,r13
  41731e:	mov    rsi,rbx
  417321:	mov    rdx,r15
  417324:	lea    rcx,[rip+0x2a1f5]        # 441520 <__data_start@@Base+0x470>
  41732b:	lea    r8,[rsp+0xc]
  417330:	call   414890 <main@@Base+0xda70>
  417335:	mov    r12,rax
  417338:	cmp    rax,rbx
  41733b:	je     418f70 <main@@Base+0x12150>
  417341:	cmp    r12,r15
  417344:	je     418f70 <main@@Base+0x12150>
  41734a:	mov    ebp,DWORD PTR [rsp+0xc]
  41734e:	mov    r13,QWORD PTR [rsp]
  417352:	test   ebp,ebp
  417354:	movabs rbx,0x625f73746172745f
  41735e:	jne    41736b <main@@Base+0x1054b>
  417360:	test   BYTE PTR [r13+0x10],0x2
  417365:	je     41782c <main@@Base+0x10a0c>
  41736b:	mov    rdi,QWORD PTR [r13+0x0]
  41736f:	mov    esi,0x1
  417374:	mov    edx,0x4
  417379:	mov    ecx,0x4
  41737e:	call   41fe80 <flatcc_builder_table_add@@Base>
  417383:	test   rax,rax
  417386:	je     418f70 <main@@Base+0x12150>
  41738c:	mov    DWORD PTR [rax],ebp
  41738e:	jmp    41782c <main@@Base+0x10a0c>
  417393:	mov    DWORD PTR [rsp+0xc],eax
  417397:	mov    ebp,eax
  417399:	mov    r13,QWORD PTR [rsp]
  41739d:	cmp    rbx,r12
  4173a0:	jne    417352 <main@@Base+0x10532>
  4173a2:	jmp    41731b <main@@Base+0x104fb>
  4173a7:	mov    rsi,r15
  4173aa:	cmp    rdx,r15
  4173ad:	movabs r14,0x616161615f626262
  4173b7:	je     4173dd <main@@Base+0x105bd>
  4173b9:	cmp    BYTE PTR [rdx],0x22
  4173bc:	jne    4173c7 <main@@Base+0x105a7>
  4173be:	add    rdx,0x1
  4173c2:	mov    rsi,rdx
  4173c5:	jmp    4173dd <main@@Base+0x105bd>
  4173c7:	mov    ecx,0x5
  4173cc:	mov    rdi,r13
  4173cf:	mov    rsi,rdx
  4173d2:	mov    rdx,r15
  4173d5:	call   423620 <flatcc_json_parser_set_error@@Base>
  4173da:	mov    rsi,rax
  4173dd:	mov    rax,r15
  4173e0:	sub    rax,rsi
  4173e3:	cmp    rax,0x8
  4173e7:	jb     4173fc <main@@Base+0x105dc>
  4173e9:	movbe  rax,QWORD PTR [rsi]
  4173ee:	cmp    rax,r14
  4173f1:	je     417491 <main@@Base+0x10671>
  4173f7:	jmp    4174ac <main@@Base+0x1068c>
  4173fc:	and    al,0xf
  4173fe:	add    al,0xff
  417400:	cmp    al,0x7
  417402:	ja     4174ac <main@@Base+0x1068c>
  417408:	movzx  eax,al
  41740b:	lea    rcx,[rip+0x1c4a2]        # 4338b4 <_IO_stdin_used@@Base+0x8b4>
  417412:	movsxd rax,DWORD PTR [rcx+rax*4]
  417416:	add    rax,rcx
  417419:	xor    r8d,r8d
  41741c:	xor    r9d,r9d
  41741f:	xor    ecx,ecx
  417421:	xor    edx,edx
  417423:	xor    ebp,ebp
  417425:	xor    ebx,ebx
  417427:	xor    edi,edi
  417429:	jmp    rax
  41742b:	movsx  r8,BYTE PTR [rsi+0x7]
  417430:	movsx  r9,BYTE PTR [rsi+0x6]
  417435:	shl    r9,0x8
  417439:	or     r9,r8
  41743c:	movsx  rcx,BYTE PTR [rsi+0x5]
  417441:	shl    rcx,0x10
  417445:	or     rcx,r9
  417448:	movsx  rdx,BYTE PTR [rsi+0x4]
  41744d:	shl    rdx,0x18
  417451:	or     rdx,rcx
  417454:	movsx  rbp,BYTE PTR [rsi+0x3]
  417459:	shl    rbp,0x20
  41745d:	or     rbp,rdx
  417460:	movsx  rbx,BYTE PTR [rsi+0x2]
  417465:	shl    rbx,0x28
  417469:	or     rbx,rbp
  41746c:	movsx  rdi,BYTE PTR [rsi+0x1]
  417471:	shl    rdi,0x30
  417475:	or     rdi,rbx
  417478:	movzx  eax,BYTE PTR [rsi]
  41747b:	shl    rax,0x38
  41747f:	or     rax,rdi
  417482:	movabs rbx,0x625f73746172745f
  41748c:	cmp    rax,r14
  41748f:	jne    4174ac <main@@Base+0x1068c>
  417491:	lea    r12,[rsi+0x8]
  417495:	mov    rax,r15
  417498:	sub    rax,r12
  41749b:	cmp    rax,0x8
  41749f:	jb     4174b4 <main@@Base+0x10694>
  4174a1:	movbe  rcx,QWORD PTR [r12]
  4174a7:	jmp    41754c <main@@Base+0x1072c>
  4174ac:	mov    rdi,r13
  4174af:	jmp    417619 <main@@Base+0x107f9>
  4174b4:	mov    ecx,eax
  4174b6:	and    cl,0xf
  4174b9:	add    cl,0xff
  4174bc:	cmp    cl,0x7
  4174bf:	ja     417613 <main@@Base+0x107f3>
  4174c5:	movzx  ecx,cl
  4174c8:	lea    rdx,[rip+0x1c405]        # 4338d4 <_IO_stdin_used@@Base+0x8d4>
  4174cf:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4174d3:	add    rcx,rdx
  4174d6:	xor    r8d,r8d
  4174d9:	xor    r9d,r9d
  4174dc:	xor    r10d,r10d
  4174df:	xor    edi,edi
  4174e1:	xor    ebp,ebp
  4174e3:	xor    ebx,ebx
  4174e5:	xor    edx,edx
  4174e7:	jmp    rcx
  4174e9:	movsx  r8,BYTE PTR [rsi+0xf]
  4174ee:	movsx  r9,BYTE PTR [rsi+0xe]
  4174f3:	shl    r9,0x8
  4174f7:	or     r9,r8
  4174fa:	movsx  r10,BYTE PTR [rsi+0xd]
  4174ff:	shl    r10,0x10
  417503:	or     r10,r9
  417506:	movsx  rdi,BYTE PTR [rsi+0xc]
  41750b:	shl    rdi,0x18
  41750f:	or     rdi,r10
  417512:	movsx  rbp,BYTE PTR [rsi+0xb]
  417517:	shl    rbp,0x20
  41751b:	or     rbp,rdi
  41751e:	movsx  rbx,BYTE PTR [rsi+0xa]
  417523:	shl    rbx,0x28
  417527:	or     rbx,rbp
  41752a:	movsx  rdx,BYTE PTR [rsi+0x9]
  41752f:	shl    rdx,0x30
  417533:	or     rdx,rbx
  417536:	movzx  ecx,BYTE PTR [r12]
  41753b:	shl    rcx,0x38
  41753f:	or     rcx,rdx
  417542:	movabs rbx,0x625f73746172745f
  41754c:	mov    rdx,rcx
  41754f:	and    rdx,0xffffffffffffff00
  417556:	lea    rdi,[rbx+0x3fdfea1]
  41755d:	cmp    rdx,rdi
  417560:	jne    4175b8 <main@@Base+0x10798>
  417562:	cmp    rax,0x8
  417566:	jl     417811 <main@@Base+0x109f1>
  41756c:	cmp    BYTE PTR [rsi+0xf],0x22
  417570:	jne    417811 <main@@Base+0x109f1>
  417576:	lea    rax,[rsi+0x10]
  41757a:	mov    rcx,r15
  41757d:	sub    rcx,rax
  417580:	cmp    rcx,0x2
  417584:	jl     417629 <main@@Base+0x10809>
  41758a:	cmp    BYTE PTR [rax],0x20
  41758d:	jg     417637 <main@@Base+0x10817>
  417593:	jne    417629 <main@@Base+0x10809>
  417599:	cmp    BYTE PTR [rsi+0x11],0x20
  41759d:	jle    417629 <main@@Base+0x10809>
  4175a3:	add    rsi,0x11
  4175a7:	mov    rax,rsi
  4175aa:	cmp    rax,r15
  4175ad:	jne    41763c <main@@Base+0x1081c>
  4175b3:	jmp    417677 <main@@Base+0x10857>
  4175b8:	cmp    rcx,rbx
  4175bb:	jne    417613 <main@@Base+0x107f3>
  4175bd:	cmp    rax,0x9
  4175c1:	jl     417811 <main@@Base+0x109f1>
  4175c7:	cmp    BYTE PTR [rsi+0x10],0x22
  4175cb:	jne    417811 <main@@Base+0x109f1>
  4175d1:	lea    rax,[rsi+0x11]
  4175d5:	mov    rcx,r15
  4175d8:	sub    rcx,rax
  4175db:	cmp    rcx,0x2
  4175df:	jl     41768c <main@@Base+0x1086c>
  4175e5:	cmp    BYTE PTR [rax],0x20
  4175e8:	jg     41769a <main@@Base+0x1087a>
  4175ee:	jne    41768c <main@@Base+0x1086c>
  4175f4:	cmp    BYTE PTR [rsi+0x12],0x20
  4175f8:	jle    41768c <main@@Base+0x1086c>
  4175fe:	add    rsi,0x12
  417602:	mov    rax,rsi
  417605:	cmp    rax,r15
  417608:	jne    41769f <main@@Base+0x1087f>
  41760e:	jmp    4176da <main@@Base+0x108ba>
  417613:	mov    rdi,r13
  417616:	mov    rsi,r12
  417619:	mov    rdx,r15
  41761c:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  417621:	mov    r12,rax
  417624:	jmp    41782c <main@@Base+0x10a0c>
  417629:	mov    rdi,r13
  41762c:	mov    rsi,rax
  41762f:	mov    rdx,r15
  417632:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417637:	cmp    rax,r15
  41763a:	je     417677 <main@@Base+0x10857>
  41763c:	cmp    BYTE PTR [rax],0x3a
  41763f:	jne    417677 <main@@Base+0x10857>
  417641:	lea    rbx,[rax+0x1]
  417645:	mov    rcx,r15
  417648:	sub    rcx,rbx
  41764b:	cmp    rcx,0x2
  41764f:	jl     4176f2 <main@@Base+0x108d2>
  417655:	cmp    BYTE PTR [rbx],0x20
  417658:	jg     417703 <main@@Base+0x108e3>
  41765e:	jne    4176f2 <main@@Base+0x108d2>
  417664:	cmp    BYTE PTR [rax+0x2],0x20
  417668:	jle    4176f2 <main@@Base+0x108d2>
  41766e:	add    rax,0x2
  417672:	jmp    417700 <main@@Base+0x108e0>
  417677:	mov    ecx,0x4
  41767c:	mov    rdi,r13
  41767f:	mov    rsi,rax
  417682:	mov    rdx,r15
  417685:	call   423620 <flatcc_json_parser_set_error@@Base>
  41768a:	jmp    417700 <main@@Base+0x108e0>
  41768c:	mov    rdi,r13
  41768f:	mov    rsi,rax
  417692:	mov    rdx,r15
  417695:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41769a:	cmp    rax,r15
  41769d:	je     4176da <main@@Base+0x108ba>
  41769f:	cmp    BYTE PTR [rax],0x3a
  4176a2:	jne    4176da <main@@Base+0x108ba>
  4176a4:	lea    rbx,[rax+0x1]
  4176a8:	mov    rcx,r15
  4176ab:	sub    rcx,rbx
  4176ae:	cmp    rcx,0x2
  4176b2:	jl     41779e <main@@Base+0x1097e>
  4176b8:	cmp    BYTE PTR [rbx],0x20
  4176bb:	jg     4177af <main@@Base+0x1098f>
  4176c1:	jne    41779e <main@@Base+0x1097e>
  4176c7:	cmp    BYTE PTR [rax+0x2],0x20
  4176cb:	jle    41779e <main@@Base+0x1097e>
  4176d1:	add    rax,0x2
  4176d5:	jmp    4177ac <main@@Base+0x1098c>
  4176da:	mov    ecx,0x4
  4176df:	mov    rdi,r13
  4176e2:	mov    rsi,rax
  4176e5:	mov    rdx,r15
  4176e8:	call   423620 <flatcc_json_parser_set_error@@Base>
  4176ed:	jmp    4177ac <main@@Base+0x1098c>
  4176f2:	mov    rdi,r13
  4176f5:	mov    rsi,rbx
  4176f8:	mov    rdx,r15
  4176fb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417700:	mov    rbx,rax
  417703:	cmp    r12,rbx
  417706:	je     417811 <main@@Base+0x109f1>
  41770c:	mov    QWORD PTR [rsp+0x28],0x0
  417715:	mov    DWORD PTR [rsp+0xc],0x0
  41771d:	mov    QWORD PTR [rsp+0x20],0x0
  417726:	cmp    rbx,r15
  417729:	je     417778 <main@@Base+0x10958>
  41772b:	mov    rdi,r13
  41772e:	mov    rsi,rbx
  417731:	mov    rdx,r15
  417734:	lea    rcx,[rsp+0xc]
  417739:	lea    r8,[rsp+0x28]
  41773e:	call   425160 <flatcc_json_parser_integer@@Base>
  417743:	cmp    rax,rbx
  417746:	je     41778b <main@@Base+0x1096b>
  417748:	mov    r12,rax
  41774b:	mov    rbp,QWORD PTR [rsp+0x28]
  417750:	cmp    DWORD PTR [rsp+0xc],0x0
  417755:	je     41723b <main@@Base+0x1041b>
  41775b:	movabs rax,0x8000000000000000
  417765:	cmp    rbp,rax
  417768:	jbe    41725f <main@@Base+0x1043f>
  41776e:	mov    ecx,0x8
  417773:	jmp    417245 <main@@Base+0x10425>
  417778:	xor    ebp,ebp
  41777a:	mov    r12,r15
  41777d:	cmp    rbx,r12
  417780:	jne    4172a0 <main@@Base+0x10480>
  417786:	jmp    41726c <main@@Base+0x1044c>
  41778b:	xor    ebp,ebp
  41778d:	mov    r12,rbx
  417790:	cmp    rbx,r12
  417793:	jne    4172a0 <main@@Base+0x10480>
  417799:	jmp    41726c <main@@Base+0x1044c>
  41779e:	mov    rdi,r13
  4177a1:	mov    rsi,rbx
  4177a4:	mov    rdx,r15
  4177a7:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4177ac:	mov    rbx,rax
  4177af:	cmp    r12,rbx
  4177b2:	je     417811 <main@@Base+0x109f1>
  4177b4:	mov    QWORD PTR [rsp+0x28],0x0
  4177bd:	mov    DWORD PTR [rsp+0x20],0x0
  4177c5:	mov    DWORD PTR [rsp+0xc],0x0
  4177cd:	xor    ebp,ebp
  4177cf:	cmp    rbx,r15
  4177d2:	je     41722a <main@@Base+0x1040a>
  4177d8:	mov    rdi,r13
  4177db:	mov    rsi,rbx
  4177de:	mov    rdx,r15
  4177e1:	lea    rcx,[rsp+0x20]
  4177e6:	lea    r8,[rsp+0x28]
  4177eb:	call   425160 <flatcc_json_parser_integer@@Base>
  4177f0:	cmp    rax,rbx
  4177f3:	je     4172e0 <main@@Base+0x104c0>
  4177f9:	mov    r12,rax
  4177fc:	cmp    DWORD PTR [rsp+0x20],0x0
  417801:	je     4172ea <main@@Base+0x104ca>
  417807:	mov    ecx,0x8
  41780c:	jmp    417305 <main@@Base+0x104e5>
  417811:	mov    rdi,r13
  417814:	mov    rsi,r12
  417817:	mov    rdx,r15
  41781a:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41781f:	mov    r12,rax
  417822:	movabs rbx,0x625f73746172745f
  41782c:	mov    rax,r15
  41782f:	sub    rax,r12
  417832:	cmp    rax,0x2
  417836:	jl     417857 <main@@Base+0x10a37>
  417838:	cmp    BYTE PTR [r12],0x20
  41783d:	jg     417868 <main@@Base+0x10a48>
  41783f:	jne    417857 <main@@Base+0x10a37>
  417841:	cmp    BYTE PTR [r12+0x1],0x20
  417847:	jle    417857 <main@@Base+0x10a37>
  417849:	add    r12,0x1
  41784d:	cmp    r12,r15
  417850:	jne    417871 <main@@Base+0x10a51>
  417852:	jmp    41790d <main@@Base+0x10aed>
  417857:	mov    rdi,r13
  41785a:	mov    rsi,r12
  41785d:	mov    rdx,r15
  417860:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417865:	mov    r12,rax
  417868:	cmp    r12,r15
  41786b:	je     41790d <main@@Base+0x10aed>
  417871:	movzx  eax,BYTE PTR [r12]
  417876:	cmp    al,0x2c
  417878:	jne    417915 <main@@Base+0x10af5>
  41787e:	lea    rdx,[r12+0x1]
  417883:	mov    rax,r15
  417886:	sub    rax,rdx
  417889:	cmp    rax,0x2
  41788d:	jl     4178a7 <main@@Base+0x10a87>
  41788f:	cmp    BYTE PTR [rdx],0x20
  417892:	jg     4178b8 <main@@Base+0x10a98>
  417894:	jne    4178a7 <main@@Base+0x10a87>
  417896:	cmp    BYTE PTR [r12+0x2],0x20
  41789c:	jle    4178a7 <main@@Base+0x10a87>
  41789e:	add    r12,0x2
  4178a2:	mov    rdx,r12
  4178a5:	jmp    4178b8 <main@@Base+0x10a98>
  4178a7:	mov    rdi,r13
  4178aa:	mov    rsi,rdx
  4178ad:	mov    rdx,r15
  4178b0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4178b5:	mov    rdx,rax
  4178b8:	cmp    rdx,r15
  4178bb:	mov    r12,QWORD PTR [rsp+0x10]
  4178c0:	je     41794a <main@@Base+0x10b2a>
  4178c6:	cmp    BYTE PTR [rdx],0x7d
  4178c9:	jne    4173a7 <main@@Base+0x10587>
  4178cf:	lea    rbp,[rdx+0x1]
  4178d3:	mov    rax,r15
  4178d6:	sub    rax,rbp
  4178d9:	cmp    rax,0x2
  4178dd:	jl     4178fd <main@@Base+0x10add>
  4178df:	cmp    BYTE PTR [rbp+0x0],0x20
  4178e3:	jg     416766 <main@@Base+0xf946>
  4178e9:	jne    4178fd <main@@Base+0x10add>
  4178eb:	cmp    BYTE PTR [rdx+0x2],0x20
  4178ef:	jle    4178fd <main@@Base+0x10add>
  4178f1:	add    rdx,0x2
  4178f5:	mov    rbp,rdx
  4178f8:	jmp    416766 <main@@Base+0xf946>
  4178fd:	mov    rdi,r13
  417900:	mov    rsi,rbp
  417903:	mov    rdx,r15
  417906:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41790b:	jmp    41795d <main@@Base+0x10b3d>
  41790d:	mov    rbp,r15
  417910:	jmp    416761 <main@@Base+0xf941>
  417915:	cmp    al,0x7d
  417917:	jne    417965 <main@@Base+0x10b45>
  417919:	lea    rbp,[r12+0x1]
  41791e:	mov    rax,r15
  417921:	sub    rax,rbp
  417924:	cmp    rax,0x2
  417928:	jl     417975 <main@@Base+0x10b55>
  41792a:	cmp    BYTE PTR [rbp+0x0],0x20
  41792e:	jg     416761 <main@@Base+0xf941>
  417934:	jne    417975 <main@@Base+0x10b55>
  417936:	cmp    BYTE PTR [r12+0x2],0x20
  41793c:	jle    417975 <main@@Base+0x10b55>
  41793e:	add    r12,0x2
  417942:	mov    rbp,r12
  417945:	jmp    416761 <main@@Base+0xf941>
  41794a:	mov    ecx,0xa
  41794f:	mov    rdi,r13
  417952:	mov    rsi,r15
  417955:	mov    rdx,r15
  417958:	call   423620 <flatcc_json_parser_set_error@@Base>
  41795d:	mov    rbp,rax
  417960:	jmp    416766 <main@@Base+0xf946>
  417965:	mov    ecx,0xa
  41796a:	mov    rdi,r13
  41796d:	mov    rsi,r12
  417970:	jmp    416756 <main@@Base+0xf936>
  417975:	mov    rdi,r13
  417978:	mov    rsi,rbp
  41797b:	mov    rdx,r15
  41797e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417983:	jmp    41675e <main@@Base+0xf93e>
  417988:	mov    ecx,0xa
  41798d:	mov    rdi,r13
  417990:	mov    rsi,r12
  417993:	jmp    416958 <main@@Base+0xfb38>
  417998:	mov    r13,QWORD PTR [rsp]
  41799c:	jne    4179b2 <main@@Base+0x10b92>
  41799e:	cmp    BYTE PTR [r12+0x2],0x20
  4179a4:	jle    4179b2 <main@@Base+0x10b92>
  4179a6:	add    r12,0x2
  4179aa:	mov    rbp,r12
  4179ad:	jmp    416963 <main@@Base+0xfb43>
  4179b2:	mov    rdi,r13
  4179b5:	mov    rsi,rbp
  4179b8:	mov    rdx,r15
  4179bb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4179c0:	jmp    416960 <main@@Base+0xfb40>
  4179c5:	mov    rbp,r15
  4179c8:	cmp    r12,rbp
  4179cb:	jne    417a51 <main@@Base+0x10c31>
  4179d1:	jmp    417a1d <main@@Base+0x10bfd>
  4179d3:	mov    rbp,r12
  4179d6:	cmp    r12,rbp
  4179d9:	jne    417a51 <main@@Base+0x10c31>
  4179db:	jmp    417a1d <main@@Base+0x10bfd>
  4179dd:	mov    DWORD PTR [rsp+0xc],eax
  4179e1:	mov    ebx,eax
  4179e3:	mov    r13,QWORD PTR [rsp]
  4179e7:	mov    rax,rsi
  4179ea:	jmp    418bb3 <main@@Base+0x11d93>
  4179ef:	mov    rax,QWORD PTR [rsp+0x28]
  4179f4:	mov    rcx,rax
  4179f7:	shr    rcx,0x20
  4179fb:	je     417a8e <main@@Base+0x10c6e>
  417a01:	mov    ecx,0x7
  417a06:	mov    rdi,QWORD PTR [rsp]
  417a0a:	mov    rsi,rbp
  417a0d:	mov    rdx,r15
  417a10:	call   423620 <flatcc_json_parser_set_error@@Base>
  417a15:	mov    rbp,rax
  417a18:	cmp    r12,rbp
  417a1b:	jne    417a51 <main@@Base+0x10c31>
  417a1d:	mov    rdi,QWORD PTR [rsp]
  417a21:	mov    rsi,r12
  417a24:	mov    rdx,r15
  417a27:	lea    rcx,[rip+0x29bb2]        # 4415e0 <__data_start@@Base+0x530>
  417a2e:	lea    r8,[rsp+0xc]
  417a33:	call   414890 <main@@Base+0xda70>
  417a38:	mov    rbp,rax
  417a3b:	cmp    rax,r12
  417a3e:	je     418f79 <main@@Base+0x12159>
  417a44:	cmp    rbp,r15
  417a47:	je     418f79 <main@@Base+0x12159>
  417a4d:	mov    ebx,DWORD PTR [rsp+0xc]
  417a51:	test   ebx,ebx
  417a53:	jne    417a5f <main@@Base+0x10c3f>
  417a55:	mov    rax,QWORD PTR [rsp]
  417a59:	test   BYTE PTR [rax+0x10],0x2
  417a5d:	je     417a85 <main@@Base+0x10c65>
  417a5f:	mov    rax,QWORD PTR [rsp]
  417a63:	mov    rdi,QWORD PTR [rax]
  417a66:	mov    esi,0x8
  417a6b:	mov    edx,0x4
  417a70:	mov    ecx,0x4
  417a75:	call   41fe80 <flatcc_builder_table_add@@Base>
  417a7a:	test   rax,rax
  417a7d:	je     418f79 <main@@Base+0x12159>
  417a83:	mov    DWORD PTR [rax],ebx
  417a85:	mov    r13,QWORD PTR [rsp]
  417a89:	jmp    418d2c <main@@Base+0x11f0c>
  417a8e:	mov    DWORD PTR [rsp+0xc],eax
  417a92:	mov    ebx,eax
  417a94:	cmp    r12,rbp
  417a97:	jne    417a51 <main@@Base+0x10c31>
  417a99:	jmp    417a1d <main@@Base+0x10bfd>
  417a9b:	mov    r14,r15
  417a9e:	cmp    rsi,r15
  417aa1:	je     417ac4 <main@@Base+0x10ca4>
  417aa3:	cmp    BYTE PTR [rsi],0x22
  417aa6:	jne    417ab1 <main@@Base+0x10c91>
  417aa8:	add    rsi,0x1
  417aac:	mov    r14,rsi
  417aaf:	jmp    417ac4 <main@@Base+0x10ca4>
  417ab1:	mov    ecx,0x5
  417ab6:	mov    rdi,r13
  417ab9:	mov    rdx,r15
  417abc:	call   423620 <flatcc_json_parser_set_error@@Base>
  417ac1:	mov    r14,rax
  417ac4:	mov    r12,r15
  417ac7:	sub    r12,r14
  417aca:	cmp    r12,0x8
  417ace:	jb     417ada <main@@Base+0x10cba>
  417ad0:	movbe  rbp,QWORD PTR [r14]
  417ad5:	jmp    417b63 <main@@Base+0x10d43>
  417ada:	mov    eax,r12d
  417add:	and    al,0xf
  417adf:	add    al,0xff
  417ae1:	cmp    al,0x7
  417ae3:	ja     4185c4 <main@@Base+0x117a4>
  417ae9:	movzx  eax,al
  417aec:	lea    rcx,[rip+0x1bce1]        # 4337d4 <_IO_stdin_used@@Base+0x7d4>
  417af3:	movsxd rsi,DWORD PTR [rcx+rax*4]
  417af7:	add    rsi,rcx
  417afa:	xor    r8d,r8d
  417afd:	xor    eax,eax
  417aff:	xor    ecx,ecx
  417b01:	xor    edx,edx
  417b03:	xor    edi,edi
  417b05:	xor    ebp,ebp
  417b07:	xor    ebx,ebx
  417b09:	jmp    rsi
  417b0b:	movsx  r8,BYTE PTR [r14+0x7]
  417b10:	movsx  rax,BYTE PTR [r14+0x6]
  417b15:	shl    rax,0x8
  417b19:	or     rax,r8
  417b1c:	movsx  rcx,BYTE PTR [r14+0x5]
  417b21:	shl    rcx,0x10
  417b25:	or     rcx,rax
  417b28:	movsx  rdx,BYTE PTR [r14+0x4]
  417b2d:	shl    rdx,0x18
  417b31:	or     rdx,rcx
  417b34:	movsx  rdi,BYTE PTR [r14+0x3]
  417b39:	shl    rdi,0x20
  417b3d:	or     rdi,rdx
  417b40:	movsx  rbp,BYTE PTR [r14+0x2]
  417b45:	shl    rbp,0x28
  417b49:	or     rbp,rdi
  417b4c:	movsx  rbx,BYTE PTR [r14+0x1]
  417b51:	shl    rbx,0x30
  417b55:	or     rbx,rbp
  417b58:	movzx  ebp,BYTE PTR [r14]
  417b5c:	shl    rbp,0x38
  417b60:	or     rbp,rbx
  417b63:	movabs rdx,0x6363636300000000
  417b6d:	movabs rsi,0x6262626200000000
  417b77:	cmp    rbp,rdx
  417b7a:	jae    417bba <main@@Base+0x10d9a>
  417b7c:	movabs rcx,0x616161615f626262
  417b86:	lea    rax,[rcx-0x2e302f2e]
  417b8d:	cmp    rbp,rax
  417b90:	jne    417c2a <main@@Base+0x10e0a>
  417b96:	lea    r13,[r14+0x8]
  417b9a:	mov    rax,r15
  417b9d:	sub    rax,r13
  417ba0:	cmp    rax,0x8
  417ba4:	jb     417d19 <main@@Base+0x10ef9>
  417baa:	movbe  rcx,QWORD PTR [r13+0x0]
  417bb0:	mov    r12,QWORD PTR [rsp+0x10]
  417bb5:	jmp    417dab <main@@Base+0x10f8b>
  417bba:	lea    rax,[rdx+0x31323334]
  417bc1:	cmp    rbp,rax
  417bc4:	jne    417ca5 <main@@Base+0x10e85>
  417bca:	mov    rbp,r14
  417bcd:	cmp    r12,0x9
  417bd1:	mov    r12,QWORD PTR [rsp+0x10]
  417bd6:	jl     418323 <main@@Base+0x11503>
  417bdc:	cmp    BYTE PTR [r14+0x8],0x22
  417be1:	mov    rbp,r14
  417be4:	jne    418323 <main@@Base+0x11503>
  417bea:	lea    rsi,[r14+0x9]
  417bee:	mov    rax,r15
  417bf1:	sub    rax,rsi
  417bf4:	cmp    rax,0x2
  417bf8:	jl     417e23 <main@@Base+0x11003>
  417bfe:	cmp    BYTE PTR [rsi],0x20
  417c01:	jg     417e31 <main@@Base+0x11011>
  417c07:	jne    417e23 <main@@Base+0x11003>
  417c0d:	cmp    BYTE PTR [r14+0xa],0x20
  417c12:	jle    417e23 <main@@Base+0x11003>
  417c18:	lea    rsi,[r14+0xa]
  417c1c:	cmp    rsi,r15
  417c1f:	jne    417e3a <main@@Base+0x1101a>
  417c25:	jmp    417fa1 <main@@Base+0x11181>
  417c2a:	mov    r13,rbp
  417c2d:	movabs rax,0xffffffff00000000
  417c37:	and    r13,rax
  417c3a:	lea    rax,[rcx-0x5f626262]
  417c41:	cmp    r13,rax
  417c44:	jne    4184f8 <main@@Base+0x116d8>
  417c4a:	mov    rax,r14
  417c4d:	cmp    r12,0x5
  417c51:	jl     4184c3 <main@@Base+0x116a3>
  417c57:	cmp    BYTE PTR [r14+0x4],0x22
  417c5c:	mov    rax,r14
  417c5f:	jne    4184c3 <main@@Base+0x116a3>
  417c65:	lea    rsi,[r14+0x5]
  417c69:	mov    rax,r15
  417c6c:	sub    rax,rsi
  417c6f:	cmp    rax,0x2
  417c73:	jl     417fb6 <main@@Base+0x11196>
  417c79:	cmp    BYTE PTR [rsi],0x20
  417c7c:	jg     417fc5 <main@@Base+0x111a5>
  417c82:	jne    417fb6 <main@@Base+0x11196>
  417c88:	cmp    BYTE PTR [r14+0x6],0x20
  417c8d:	jle    417fb6 <main@@Base+0x11196>
  417c93:	lea    rsi,[r14+0x6]
  417c97:	cmp    rsi,r15
  417c9a:	jne    417fce <main@@Base+0x111ae>
  417ca0:	jmp    418067 <main@@Base+0x11247>
  417ca5:	mov    rax,rbp
  417ca8:	movabs rcx,0xffffffff00000000
  417cb2:	and    rax,rcx
  417cb5:	cmp    rax,rdx
  417cb8:	jne    418096 <main@@Base+0x11276>
  417cbe:	mov    rax,r14
  417cc1:	cmp    r12,0x5
  417cc5:	jl     418692 <main@@Base+0x11872>
  417ccb:	cmp    BYTE PTR [r14+0x4],0x22
  417cd0:	mov    rax,r14
  417cd3:	jne    418692 <main@@Base+0x11872>
  417cd9:	lea    rsi,[r14+0x5]
  417cdd:	mov    rax,r15
  417ce0:	sub    rax,rsi
  417ce3:	cmp    rax,0x2
  417ce7:	jl     418010 <main@@Base+0x111f0>
  417ced:	cmp    BYTE PTR [rsi],0x20
  417cf0:	jg     41801e <main@@Base+0x111fe>
  417cf6:	jne    418010 <main@@Base+0x111f0>
  417cfc:	cmp    BYTE PTR [r14+0x6],0x20
  417d01:	jle    418010 <main@@Base+0x111f0>
  417d07:	lea    rsi,[r14+0x6]
  417d0b:	cmp    rsi,r15
  417d0e:	jne    418023 <main@@Base+0x11203>
  417d14:	jmp    41807d <main@@Base+0x1125d>
  417d19:	mov    ecx,eax
  417d1b:	and    cl,0xf
  417d1e:	add    cl,0xff
  417d21:	cmp    cl,0x7
  417d24:	mov    r12,QWORD PTR [rsp+0x10]
  417d29:	ja     4182e3 <main@@Base+0x114c3>
  417d2f:	movzx  ecx,cl
  417d32:	lea    rdx,[rip+0x1bafb]        # 433834 <_IO_stdin_used@@Base+0x834>
  417d39:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417d3d:	add    rcx,rdx
  417d40:	xor    r8d,r8d
  417d43:	xor    r9d,r9d
  417d46:	xor    edx,edx
  417d48:	xor    esi,esi
  417d4a:	xor    ebx,ebx
  417d4c:	xor    edi,edi
  417d4e:	xor    ebp,ebp
  417d50:	jmp    rcx
  417d52:	movsx  r8,BYTE PTR [r14+0xf]
  417d57:	movsx  r9,BYTE PTR [r14+0xe]
  417d5c:	shl    r9,0x8
  417d60:	or     r9,r8
  417d63:	movsx  rdx,BYTE PTR [r14+0xd]
  417d68:	shl    rdx,0x10
  417d6c:	or     rdx,r9
  417d6f:	movsx  rsi,BYTE PTR [r14+0xc]
  417d74:	shl    rsi,0x18
  417d78:	or     rsi,rdx
  417d7b:	movsx  rbx,BYTE PTR [r14+0xb]
  417d80:	shl    rbx,0x20
  417d84:	or     rbx,rsi
  417d87:	movsx  rdi,BYTE PTR [r14+0xa]
  417d8c:	shl    rdi,0x28
  417d90:	or     rdi,rbx
  417d93:	movsx  rbp,BYTE PTR [r14+0x9]
  417d98:	shl    rbp,0x30
  417d9c:	or     rbp,rdi
  417d9f:	movzx  ecx,BYTE PTR [r13+0x0]
  417da4:	shl    rcx,0x38
  417da8:	or     rcx,rbp
  417dab:	movabs rdx,0xff00000000000000
  417db5:	and    rcx,rdx
  417db8:	movabs rdx,0x3500000000000000
  417dc2:	cmp    rcx,rdx
  417dc5:	jne    4182e3 <main@@Base+0x114c3>
  417dcb:	cmp    rax,0x2
  417dcf:	jl     418d17 <main@@Base+0x11ef7>
  417dd5:	cmp    BYTE PTR [r14+0x9],0x22
  417dda:	jne    418d17 <main@@Base+0x11ef7>
  417de0:	lea    rsi,[r14+0xa]
  417de4:	mov    rax,r15
  417de7:	sub    rax,rsi
  417dea:	cmp    rax,0x2
  417dee:	jl     418104 <main@@Base+0x112e4>
  417df4:	cmp    BYTE PTR [rsi],0x20
  417df7:	jg     418113 <main@@Base+0x112f3>
  417dfd:	jne    418104 <main@@Base+0x112e4>
  417e03:	cmp    BYTE PTR [r14+0xb],0x20
  417e08:	jle    418104 <main@@Base+0x112e4>
  417e0e:	add    r14,0xb
  417e12:	mov    rsi,r14
  417e15:	cmp    rsi,r15
  417e18:	jne    418118 <main@@Base+0x112f8>
  417e1e:	jmp    418161 <main@@Base+0x11341>
  417e23:	mov    rdi,r13
  417e26:	mov    rdx,r15
  417e29:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417e2e:	mov    rsi,rax
  417e31:	cmp    rsi,r15
  417e34:	je     417fa1 <main@@Base+0x11181>
  417e3a:	cmp    BYTE PTR [rsi],0x3a
  417e3d:	jne    417fa1 <main@@Base+0x11181>
  417e43:	lea    rbp,[rsi+0x1]
  417e47:	mov    rax,r15
  417e4a:	sub    rax,rbp
  417e4d:	cmp    rax,0x2
  417e51:	jl     418312 <main@@Base+0x114f2>
  417e57:	cmp    BYTE PTR [rbp+0x0],0x20
  417e5b:	jg     418323 <main@@Base+0x11503>
  417e61:	jne    418312 <main@@Base+0x114f2>
  417e67:	cmp    BYTE PTR [rsi+0x2],0x20
  417e6b:	jle    418312 <main@@Base+0x114f2>
  417e71:	add    rsi,0x2
  417e75:	mov    rbp,rsi
  417e78:	cmp    r14,rbp
  417e7b:	jne    41832c <main@@Base+0x1150c>
  417e81:	lea    r13,[r14+0x8]
  417e85:	mov    rax,r15
  417e88:	sub    rax,r13
  417e8b:	cmp    rax,0x8
  417e8f:	jb     417e9c <main@@Base+0x1107c>
  417e91:	movbe  rcx,QWORD PTR [r13+0x0]
  417e97:	jmp    417f29 <main@@Base+0x11109>
  417e9c:	mov    ecx,eax
  417e9e:	and    cl,0xf
  417ea1:	add    cl,0xff
  417ea4:	cmp    cl,0x7
  417ea7:	ja     4182e3 <main@@Base+0x114c3>
  417ead:	movzx  ecx,cl
  417eb0:	lea    rdx,[rip+0x1b95d]        # 433814 <_IO_stdin_used@@Base+0x814>
  417eb7:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417ebb:	add    rcx,rdx
  417ebe:	xor    r8d,r8d
  417ec1:	xor    r9d,r9d
  417ec4:	xor    edx,edx
  417ec6:	xor    esi,esi
  417ec8:	xor    ebx,ebx
  417eca:	xor    edi,edi
  417ecc:	xor    ebp,ebp
  417ece:	jmp    rcx
  417ed0:	movsx  r8,BYTE PTR [r14+0xf]
  417ed5:	movsx  r9,BYTE PTR [r14+0xe]
  417eda:	shl    r9,0x8
  417ede:	or     r9,r8
  417ee1:	movsx  rdx,BYTE PTR [r14+0xd]
  417ee6:	shl    rdx,0x10
  417eea:	or     rdx,r9
  417eed:	movsx  rsi,BYTE PTR [r14+0xc]
  417ef2:	shl    rsi,0x18
  417ef6:	or     rsi,rdx
  417ef9:	movsx  rbx,BYTE PTR [r14+0xb]
  417efe:	shl    rbx,0x20
  417f02:	or     rbx,rsi
  417f05:	movsx  rdi,BYTE PTR [r14+0xa]
  417f0a:	shl    rdi,0x28
  417f0e:	or     rdi,rbx
  417f11:	movsx  rbp,BYTE PTR [r14+0x9]
  417f16:	shl    rbp,0x30
  417f1a:	or     rbp,rdi
  417f1d:	movzx  ecx,BYTE PTR [r13+0x0]
  417f22:	shl    rcx,0x38
  417f26:	or     rcx,rbp
  417f29:	movabs rdx,0xff00000000000000
  417f33:	and    rcx,rdx
  417f36:	movabs rdx,0x3500000000000000
  417f40:	cmp    rcx,rdx
  417f43:	jne    4182e3 <main@@Base+0x114c3>
  417f49:	cmp    rax,0x2
  417f4d:	jl     418d17 <main@@Base+0x11ef7>
  417f53:	cmp    BYTE PTR [r14+0x9],0x22
  417f58:	jne    418d17 <main@@Base+0x11ef7>
  417f5e:	lea    rsi,[r14+0xa]
  417f62:	mov    rax,r15
  417f65:	sub    rax,rsi
  417f68:	cmp    rax,0x2
  417f6c:	jl     418437 <main@@Base+0x11617>
  417f72:	cmp    BYTE PTR [rsi],0x20
  417f75:	jg     418446 <main@@Base+0x11626>
  417f7b:	jne    418437 <main@@Base+0x11617>
  417f81:	cmp    BYTE PTR [r14+0xb],0x20
  417f86:	jle    418437 <main@@Base+0x11617>
  417f8c:	add    r14,0xb
  417f90:	mov    rsi,r14
  417f93:	cmp    rsi,r15
  417f96:	jne    41844b <main@@Base+0x1162b>
  417f9c:	jmp    418494 <main@@Base+0x11674>
  417fa1:	mov    ecx,0x4
  417fa6:	mov    rdi,r13
  417fa9:	mov    rdx,r15
  417fac:	call   423620 <flatcc_json_parser_set_error@@Base>
  417fb1:	jmp    418320 <main@@Base+0x11500>
  417fb6:	mov    rdi,QWORD PTR [rsp]
  417fba:	mov    rdx,r15
  417fbd:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  417fc2:	mov    rsi,rax
  417fc5:	cmp    rsi,r15
  417fc8:	je     418067 <main@@Base+0x11247>
  417fce:	cmp    BYTE PTR [rsi],0x3a
  417fd1:	jne    418067 <main@@Base+0x11247>
  417fd7:	lea    rax,[rsi+0x1]
  417fdb:	mov    rcx,r15
  417fde:	sub    rcx,rax
  417fe1:	cmp    rcx,0x2
  417fe5:	jl     4184aa <main@@Base+0x1168a>
  417feb:	cmp    BYTE PTR [rax],0x20
  417fee:	jg     4184b9 <main@@Base+0x11699>
  417ff4:	jne    4184aa <main@@Base+0x1168a>
  417ffa:	cmp    BYTE PTR [rsi+0x2],0x20
  417ffe:	jle    4184aa <main@@Base+0x1168a>
  418004:	add    rsi,0x2
  418008:	mov    rax,rsi
  41800b:	jmp    4184b9 <main@@Base+0x11699>
  418010:	mov    rdi,r13
  418013:	mov    rdx,r15
  418016:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41801b:	mov    rsi,rax
  41801e:	cmp    rsi,r15
  418021:	je     41807d <main@@Base+0x1125d>
  418023:	cmp    BYTE PTR [rsi],0x3a
  418026:	jne    41807d <main@@Base+0x1125d>
  418028:	lea    rax,[rsi+0x1]
  41802c:	mov    rcx,r15
  41802f:	sub    rcx,rax
  418032:	cmp    rcx,0x2
  418036:	jl     418684 <main@@Base+0x11864>
  41803c:	cmp    BYTE PTR [rax],0x20
  41803f:	jg     418692 <main@@Base+0x11872>
  418045:	jne    418684 <main@@Base+0x11864>
  41804b:	cmp    BYTE PTR [rsi+0x2],0x20
  41804f:	jle    418684 <main@@Base+0x11864>
  418055:	add    rsi,0x2
  418059:	mov    rax,rsi
  41805c:	cmp    r14,rax
  41805f:	jne    41869b <main@@Base+0x1187b>
  418065:	jmp    418096 <main@@Base+0x11276>
  418067:	mov    ecx,0x4
  41806c:	mov    rdi,QWORD PTR [rsp]
  418070:	mov    rdx,r15
  418073:	call   423620 <flatcc_json_parser_set_error@@Base>
  418078:	jmp    4184b9 <main@@Base+0x11699>
  41807d:	mov    ecx,0x4
  418082:	mov    rdi,r13
  418085:	mov    rdx,r15
  418088:	call   423620 <flatcc_json_parser_set_error@@Base>
  41808d:	cmp    r14,rax
  418090:	jne    41869b <main@@Base+0x1187b>
  418096:	movabs rax,0x6464646431323334
  4180a0:	cmp    rbp,rax
  4180a3:	jne    4185c4 <main@@Base+0x117a4>
  4180a9:	mov    rbp,r14
  4180ac:	cmp    r12,0x9
  4180b0:	jl     418934 <main@@Base+0x11b14>
  4180b6:	cmp    BYTE PTR [r14+0x8],0x22
  4180bb:	mov    rbp,r14
  4180be:	jne    418934 <main@@Base+0x11b14>
  4180c4:	lea    rsi,[r14+0x9]
  4180c8:	mov    rax,r15
  4180cb:	sub    rax,rsi
  4180ce:	cmp    rax,0x2
  4180d2:	jl     418177 <main@@Base+0x11357>
  4180d8:	cmp    BYTE PTR [rsi],0x20
  4180db:	jg     418185 <main@@Base+0x11365>
  4180e1:	jne    418177 <main@@Base+0x11357>
  4180e7:	cmp    BYTE PTR [r14+0xa],0x20
  4180ec:	jle    418177 <main@@Base+0x11357>
  4180f2:	lea    rsi,[r14+0xa]
  4180f6:	cmp    rsi,r15
  4180f9:	jne    41818e <main@@Base+0x1136e>
  4180ff:	jmp    4182fd <main@@Base+0x114dd>
  418104:	mov    rdi,QWORD PTR [rsp]
  418108:	mov    rdx,r15
  41810b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418110:	mov    rsi,rax
  418113:	cmp    rsi,r15
  418116:	je     418161 <main@@Base+0x11341>
  418118:	cmp    BYTE PTR [rsi],0x3a
  41811b:	jne    418161 <main@@Base+0x11341>
  41811d:	lea    r12,[rsi+0x1]
  418121:	mov    rax,r15
  418124:	sub    rax,r12
  418127:	cmp    rax,0x2
  41812b:	jl     4186e3 <main@@Base+0x118c3>
  418131:	cmp    BYTE PTR [r12],0x20
  418136:	jg     4186f5 <main@@Base+0x118d5>
  41813c:	jne    4186e3 <main@@Base+0x118c3>
  418142:	cmp    BYTE PTR [rsi+0x2],0x20
  418146:	jle    4186e3 <main@@Base+0x118c3>
  41814c:	add    rsi,0x2
  418150:	mov    r12,rsi
  418153:	cmp    r13,r12
  418156:	jne    4186fe <main@@Base+0x118de>
  41815c:	jmp    418d17 <main@@Base+0x11ef7>
  418161:	mov    ecx,0x4
  418166:	mov    rdi,QWORD PTR [rsp]
  41816a:	mov    rdx,r15
  41816d:	call   423620 <flatcc_json_parser_set_error@@Base>
  418172:	jmp    4186f2 <main@@Base+0x118d2>
  418177:	mov    rdi,r13
  41817a:	mov    rdx,r15
  41817d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418182:	mov    rsi,rax
  418185:	cmp    rsi,r15
  418188:	je     4182fd <main@@Base+0x114dd>
  41818e:	cmp    BYTE PTR [rsi],0x3a
  418191:	jne    4182fd <main@@Base+0x114dd>
  418197:	lea    rbp,[rsi+0x1]
  41819b:	mov    rax,r15
  41819e:	sub    rax,rbp
  4181a1:	cmp    rax,0x2
  4181a5:	jl     418923 <main@@Base+0x11b03>
  4181ab:	cmp    BYTE PTR [rbp+0x0],0x20
  4181af:	jle    418906 <main@@Base+0x11ae6>
  4181b5:	mov    r13,QWORD PTR [rsp]
  4181b9:	cmp    r14,rbp
  4181bc:	jne    41893d <main@@Base+0x11b1d>
  4181c2:	lea    r13,[r14+0x8]
  4181c6:	mov    rax,r15
  4181c9:	sub    rax,r13
  4181cc:	cmp    rax,0x8
  4181d0:	mov    r12,QWORD PTR [rsp+0x10]
  4181d5:	jb     4181e2 <main@@Base+0x113c2>
  4181d7:	movbe  rcx,QWORD PTR [r13+0x0]
  4181dd:	jmp    41826f <main@@Base+0x1144f>
  4181e2:	mov    ecx,eax
  4181e4:	and    cl,0xf
  4181e7:	add    cl,0xff
  4181ea:	cmp    cl,0x7
  4181ed:	ja     4182e3 <main@@Base+0x114c3>
  4181f3:	movzx  ecx,cl
  4181f6:	lea    rdx,[rip+0x1b5f7]        # 4337f4 <_IO_stdin_used@@Base+0x7f4>
  4181fd:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  418201:	add    rcx,rdx
  418204:	xor    r8d,r8d
  418207:	xor    r9d,r9d
  41820a:	xor    edx,edx
  41820c:	xor    esi,esi
  41820e:	xor    ebx,ebx
  418210:	xor    edi,edi
  418212:	xor    ebp,ebp
  418214:	jmp    rcx
  418216:	movsx  r8,BYTE PTR [r14+0xf]
  41821b:	movsx  r9,BYTE PTR [r14+0xe]
  418220:	shl    r9,0x8
  418224:	or     r9,r8
  418227:	movsx  rdx,BYTE PTR [r14+0xd]
  41822c:	shl    rdx,0x10
  418230:	or     rdx,r9
  418233:	movsx  rsi,BYTE PTR [r14+0xc]
  418238:	shl    rsi,0x18
  41823c:	or     rsi,rdx
  41823f:	movsx  rbx,BYTE PTR [r14+0xb]
  418244:	shl    rbx,0x20
  418248:	or     rbx,rsi
  41824b:	movsx  rdi,BYTE PTR [r14+0xa]
  418250:	shl    rdi,0x28
  418254:	or     rdi,rbx
  418257:	movsx  rbp,BYTE PTR [r14+0x9]
  41825c:	shl    rbp,0x30
  418260:	or     rbp,rdi
  418263:	movzx  ecx,BYTE PTR [r13+0x0]
  418268:	shl    rcx,0x38
  41826c:	or     rcx,rbp
  41826f:	movabs rdx,0xff00000000000000
  418279:	and    rcx,rdx
  41827c:	movabs rdx,0x3500000000000000
  418286:	cmp    rcx,rdx
  418289:	jne    4182e3 <main@@Base+0x114c3>
  41828b:	cmp    rax,0x2
  41828f:	jl     418d17 <main@@Base+0x11ef7>
  418295:	cmp    BYTE PTR [r14+0x9],0x22
  41829a:	jne    418d17 <main@@Base+0x11ef7>
  4182a0:	lea    rsi,[r14+0xa]
  4182a4:	mov    rax,r15
  4182a7:	sub    rax,rsi
  4182aa:	cmp    rax,0x2
  4182ae:	jl     418812 <main@@Base+0x119f2>
  4182b4:	cmp    BYTE PTR [rsi],0x20
  4182b7:	jg     418821 <main@@Base+0x11a01>
  4182bd:	jne    418812 <main@@Base+0x119f2>
  4182c3:	cmp    BYTE PTR [r14+0xb],0x20
  4182c8:	jle    418812 <main@@Base+0x119f2>
  4182ce:	add    r14,0xb
  4182d2:	mov    rsi,r14
  4182d5:	cmp    rsi,r15
  4182d8:	jne    418826 <main@@Base+0x11a06>
  4182de:	jmp    41886f <main@@Base+0x11a4f>
  4182e3:	mov    rdi,QWORD PTR [rsp]
  4182e7:	mov    rsi,r13
  4182ea:	mov    r13,rdi
  4182ed:	mov    rdx,r15
  4182f0:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  4182f5:	mov    rbp,rax
  4182f8:	jmp    418d31 <main@@Base+0x11f11>
  4182fd:	mov    ecx,0x4
  418302:	mov    rdi,r13
  418305:	mov    rdx,r15
  418308:	call   423620 <flatcc_json_parser_set_error@@Base>
  41830d:	jmp    418931 <main@@Base+0x11b11>
  418312:	mov    rdi,r13
  418315:	mov    rsi,rbp
  418318:	mov    rdx,r15
  41831b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418320:	mov    rbp,rax
  418323:	cmp    r14,rbp
  418326:	je     417e81 <main@@Base+0x11061>
  41832c:	mov    QWORD PTR [rsp+0x28],0x0
  418335:	mov    DWORD PTR [rsp+0xc],0x0
  41833d:	mov    QWORD PTR [rsp+0x20],0x0
  418346:	cmp    rbp,r15
  418349:	je     41838d <main@@Base+0x1156d>
  41834b:	mov    rdi,r13
  41834e:	mov    rsi,rbp
  418351:	mov    rdx,r15
  418354:	lea    rcx,[rsp+0xc]
  418359:	lea    r8,[rsp+0x28]
  41835e:	call   425160 <flatcc_json_parser_integer@@Base>
  418363:	cmp    rax,rbp
  418366:	je     418394 <main@@Base+0x11574>
  418368:	mov    rsi,rax
  41836b:	mov    rbx,QWORD PTR [rsp+0x28]
  418370:	cmp    DWORD PTR [rsp+0xc],0x0
  418375:	je     41839b <main@@Base+0x1157b>
  418377:	movabs rax,0x8000000000000000
  418381:	cmp    rbx,rax
  418384:	jbe    4183b4 <main@@Base+0x11594>
  418386:	mov    ecx,0x8
  41838b:	jmp    4183a5 <main@@Base+0x11585>
  41838d:	xor    ebx,ebx
  41838f:	mov    rax,r15
  418392:	jmp    4183bf <main@@Base+0x1159f>
  418394:	xor    ebx,ebx
  418396:	mov    rax,rbp
  418399:	jmp    4183bf <main@@Base+0x1159f>
  41839b:	test   rbx,rbx
  41839e:	jns    4183b7 <main@@Base+0x11597>
  4183a0:	mov    ecx,0x7
  4183a5:	mov    rdi,r13
  4183a8:	mov    rdx,r15
  4183ab:	call   423620 <flatcc_json_parser_set_error@@Base>
  4183b0:	xor    ebx,ebx
  4183b2:	jmp    4183bf <main@@Base+0x1159f>
  4183b4:	neg    rbx
  4183b7:	mov    QWORD PTR [rsp+0x20],rbx
  4183bc:	mov    rax,rsi
  4183bf:	mov    rcx,rax
  4183c2:	cmp    rbp,rax
  4183c5:	jne    4183fe <main@@Base+0x115de>
  4183c7:	mov    rdi,r13
  4183ca:	mov    rsi,rbp
  4183cd:	mov    rdx,r15
  4183d0:	lea    rcx,[rip+0x291a9]        # 441580 <__data_start@@Base+0x4d0>
  4183d7:	lea    r8,[rsp+0x20]
  4183dc:	call   4146e0 <main@@Base+0xd8c0>
  4183e1:	cmp    rax,rbp
  4183e4:	mov    rbp,rax
  4183e7:	je     418f8e <main@@Base+0x1216e>
  4183ed:	mov    rcx,rbp
  4183f0:	cmp    rbp,r15
  4183f3:	je     418f7f <main@@Base+0x1215f>
  4183f9:	mov    rbx,QWORD PTR [rsp+0x20]
  4183fe:	test   rbx,rbx
  418401:	mov    rbp,rcx
  418404:	jne    418411 <main@@Base+0x115f1>
  418406:	test   BYTE PTR [r13+0x10],0x2
  41840b:	je     418d31 <main@@Base+0x11f11>
  418411:	mov    rdi,QWORD PTR [r13+0x0]
  418415:	mov    esi,0x5
  41841a:	mov    edx,0x8
  41841f:	mov    ecx,0x8
  418424:	call   41fe80 <flatcc_builder_table_add@@Base>
  418429:	test   rax,rax
  41842c:	jne    418b71 <main@@Base+0x11d51>
  418432:	jmp    418f8e <main@@Base+0x1216e>
  418437:	mov    rdi,QWORD PTR [rsp]
  41843b:	mov    rdx,r15
  41843e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418443:	mov    rsi,rax
  418446:	cmp    rsi,r15
  418449:	je     418494 <main@@Base+0x11674>
  41844b:	cmp    BYTE PTR [rsi],0x3a
  41844e:	jne    418494 <main@@Base+0x11674>
  418450:	lea    r12,[rsi+0x1]
  418454:	mov    rax,r15
  418457:	sub    rax,r12
  41845a:	cmp    rax,0x2
  41845e:	jl     418885 <main@@Base+0x11a65>
  418464:	cmp    BYTE PTR [r12],0x20
  418469:	jg     418897 <main@@Base+0x11a77>
  41846f:	jne    418885 <main@@Base+0x11a65>
  418475:	cmp    BYTE PTR [rsi+0x2],0x20
  418479:	jle    418885 <main@@Base+0x11a65>
  41847f:	add    rsi,0x2
  418483:	mov    r12,rsi
  418486:	cmp    r13,r12
  418489:	jne    4188a0 <main@@Base+0x11a80>
  41848f:	jmp    418d17 <main@@Base+0x11ef7>
  418494:	mov    ecx,0x4
  418499:	mov    rdi,QWORD PTR [rsp]
  41849d:	mov    rdx,r15
  4184a0:	call   423620 <flatcc_json_parser_set_error@@Base>
  4184a5:	jmp    418894 <main@@Base+0x11a74>
  4184aa:	mov    rdi,QWORD PTR [rsp]
  4184ae:	mov    rsi,rax
  4184b1:	mov    rdx,r15
  4184b4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4184b9:	movabs rsi,0x6262626200000000
  4184c3:	cmp    r14,rax
  4184c6:	je     4184f8 <main@@Base+0x116d8>
  4184c8:	mov    r13,QWORD PTR [rsp]
  4184cc:	mov    rdi,r13
  4184cf:	mov    rsi,rax
  4184d2:	mov    rdx,r15
  4184d5:	lea    rcx,[rsp+0x34]
  4184da:	call   425630 <flatcc_json_parser_build_string@@Base>
  4184df:	mov    rbp,rax
  4184e2:	cmp    DWORD PTR [rsp+0x34],0x0
  4184e7:	je     418f8e <main@@Base+0x1216e>
  4184ed:	mov    rdi,QWORD PTR [r13+0x0]
  4184f1:	xor    esi,esi
  4184f3:	jmp    4186c5 <main@@Base+0x118a5>
  4184f8:	lea    rax,[rsi+0x31323334]
  4184ff:	cmp    rbp,rax
  418502:	jne    418564 <main@@Base+0x11744>
  418504:	mov    rbp,r14
  418507:	cmp    r12,0x9
  41850b:	mov    r13,QWORD PTR [rsp]
  41850f:	mov    r12,QWORD PTR [rsp+0x10]
  418514:	jl     418a65 <main@@Base+0x11c45>
  41851a:	cmp    BYTE PTR [r14+0x8],0x22
  41851f:	mov    rbp,r14
  418522:	jne    418a65 <main@@Base+0x11c45>
  418528:	lea    rsi,[r14+0x9]
  41852c:	mov    rax,r15
  41852f:	sub    rax,rsi
  418532:	cmp    rax,0x2
  418536:	jl     4185cf <main@@Base+0x117af>
  41853c:	cmp    BYTE PTR [rsi],0x20
  41853f:	jg     4185dd <main@@Base+0x117bd>
  418545:	jne    4185cf <main@@Base+0x117af>
  41854b:	cmp    BYTE PTR [r14+0xa],0x20
  418550:	jle    4185cf <main@@Base+0x117af>
  418552:	lea    rsi,[r14+0xa]
  418556:	cmp    rsi,r15
  418559:	jne    4185e2 <main@@Base+0x117c2>
  41855f:	jmp    41861c <main@@Base+0x117fc>
  418564:	cmp    r13,rsi
  418567:	mov    r13,QWORD PTR [rsp]
  41856b:	jne    4185c4 <main@@Base+0x117a4>
  41856d:	mov    rax,r14
  418570:	cmp    r12,0x5
  418574:	jl     418c50 <main@@Base+0x11e30>
  41857a:	cmp    BYTE PTR [r14+0x4],0x22
  41857f:	mov    rax,r14
  418582:	jne    418c50 <main@@Base+0x11e30>
  418588:	lea    rsi,[r14+0x5]
  41858c:	mov    rax,r15
  41858f:	sub    rax,rsi
  418592:	cmp    rax,0x2
  418596:	jl     418631 <main@@Base+0x11811>
  41859c:	cmp    BYTE PTR [rsi],0x20
  41859f:	jg     41863f <main@@Base+0x1181f>
  4185a5:	jne    418631 <main@@Base+0x11811>
  4185ab:	cmp    BYTE PTR [r14+0x6],0x20
  4185b0:	jle    418631 <main@@Base+0x11811>
  4185b2:	lea    rsi,[r14+0x6]
  4185b6:	cmp    rsi,r15
  4185b9:	jne    418644 <main@@Base+0x11824>
  4185bf:	jmp    41866f <main@@Base+0x1184f>
  4185c4:	mov    rdi,r13
  4185c7:	mov    rsi,r14
  4185ca:	jmp    418d21 <main@@Base+0x11f01>
  4185cf:	mov    rdi,r13
  4185d2:	mov    rdx,r15
  4185d5:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4185da:	mov    rsi,rax
  4185dd:	cmp    rsi,r15
  4185e0:	je     41861c <main@@Base+0x117fc>
  4185e2:	cmp    BYTE PTR [rsi],0x3a
  4185e5:	jne    41861c <main@@Base+0x117fc>
  4185e7:	lea    rbp,[rsi+0x1]
  4185eb:	mov    rax,r15
  4185ee:	sub    rax,rbp
  4185f1:	cmp    rax,0x2
  4185f5:	jl     418a54 <main@@Base+0x11c34>
  4185fb:	cmp    BYTE PTR [rbp+0x0],0x20
  4185ff:	jle    418a32 <main@@Base+0x11c12>
  418605:	mov    r13,QWORD PTR [rsp]
  418609:	mov    r12,QWORD PTR [rsp+0x10]
  41860e:	cmp    r14,rbp
  418611:	jne    418a6e <main@@Base+0x11c4e>
  418617:	jmp    418c97 <main@@Base+0x11e77>
  41861c:	mov    ecx,0x4
  418621:	mov    rdi,r13
  418624:	mov    rdx,r15
  418627:	call   423620 <flatcc_json_parser_set_error@@Base>
  41862c:	jmp    418a62 <main@@Base+0x11c42>
  418631:	mov    rdi,r13
  418634:	mov    rdx,r15
  418637:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41863c:	mov    rsi,rax
  41863f:	cmp    rsi,r15
  418642:	je     41866f <main@@Base+0x1184f>
  418644:	cmp    BYTE PTR [rsi],0x3a
  418647:	jne    41866f <main@@Base+0x1184f>
  418649:	lea    rax,[rsi+0x1]
  41864d:	mov    rcx,r15
  418650:	sub    rcx,rax
  418653:	cmp    rcx,0x2
  418657:	jl     418c3e <main@@Base+0x11e1e>
  41865d:	cmp    BYTE PTR [rax],0x20
  418660:	jle    418c29 <main@@Base+0x11e09>
  418666:	mov    r13,QWORD PTR [rsp]
  41866a:	jmp    418c50 <main@@Base+0x11e30>
  41866f:	mov    ecx,0x4
  418674:	mov    rdi,r13
  418677:	mov    rdx,r15
  41867a:	call   423620 <flatcc_json_parser_set_error@@Base>
  41867f:	jmp    418c50 <main@@Base+0x11e30>
  418684:	mov    rdi,r13
  418687:	mov    rsi,rax
  41868a:	mov    rdx,r15
  41868d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418692:	cmp    r14,rax
  418695:	je     418096 <main@@Base+0x11276>
  41869b:	mov    rdi,r13
  41869e:	mov    rsi,rax
  4186a1:	mov    rdx,r15
  4186a4:	lea    rcx,[rsp+0x34]
  4186a9:	call   425630 <flatcc_json_parser_build_string@@Base>
  4186ae:	mov    rbp,rax
  4186b1:	cmp    DWORD PTR [rsp+0x34],0x0
  4186b6:	je     418f8e <main@@Base+0x1216e>
  4186bc:	mov    rdi,QWORD PTR [r13+0x0]
  4186c0:	mov    esi,0x4
  4186c5:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  4186ca:	test   rax,rax
  4186cd:	mov    r12,QWORD PTR [rsp+0x10]
  4186d2:	je     418f8e <main@@Base+0x1216e>
  4186d8:	mov    ecx,DWORD PTR [rsp+0x34]
  4186dc:	mov    DWORD PTR [rax],ecx
  4186de:	jmp    418d31 <main@@Base+0x11f11>
  4186e3:	mov    rdi,QWORD PTR [rsp]
  4186e7:	mov    rsi,r12
  4186ea:	mov    rdx,r15
  4186ed:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4186f2:	mov    r12,rax
  4186f5:	cmp    r13,r12
  4186f8:	je     418d17 <main@@Base+0x11ef7>
  4186fe:	mov    QWORD PTR [rsp+0x28],0x0
  418707:	mov    DWORD PTR [rsp+0x20],0x0
  41870f:	mov    DWORD PTR [rsp+0xc],0x0
  418717:	xor    ebx,ebx
  418719:	cmp    r12,r15
  41871c:	je     418753 <main@@Base+0x11933>
  41871e:	mov    r13,QWORD PTR [rsp]
  418722:	mov    rdi,r13
  418725:	mov    rsi,r12
  418728:	mov    rdx,r15
  41872b:	lea    rcx,[rsp+0x20]
  418730:	lea    r8,[rsp+0x28]
  418735:	call   425160 <flatcc_json_parser_integer@@Base>
  41873a:	cmp    rax,r12
  41873d:	je     418761 <main@@Base+0x11941>
  41873f:	cmp    DWORD PTR [rsp+0x20],0x0
  418744:	je     41876b <main@@Base+0x1194b>
  418746:	mov    ecx,0x8
  41874b:	mov    rdi,r13
  41874e:	mov    rsi,rax
  418751:	jmp    41878f <main@@Base+0x1196f>
  418753:	mov    rbp,r15
  418756:	mov    r13,QWORD PTR [rsp]
  41875a:	cmp    r12,rbp
  41875d:	jne    4187d6 <main@@Base+0x119b6>
  41875f:	jmp    41879f <main@@Base+0x1197f>
  418761:	mov    rbp,r12
  418764:	cmp    r12,rbp
  418767:	jne    4187d6 <main@@Base+0x119b6>
  418769:	jmp    41879f <main@@Base+0x1197f>
  41876b:	mov    rbp,rax
  41876e:	mov    rax,QWORD PTR [rsp+0x28]
  418773:	mov    rcx,rax
  418776:	shr    rcx,0x20
  41877a:	je     418b82 <main@@Base+0x11d62>
  418780:	mov    ecx,0x7
  418785:	mov    r13,QWORD PTR [rsp]
  418789:	mov    rdi,r13
  41878c:	mov    rsi,rbp
  41878f:	mov    rdx,r15
  418792:	call   423620 <flatcc_json_parser_set_error@@Base>
  418797:	mov    rbp,rax
  41879a:	cmp    r12,rbp
  41879d:	jne    4187d6 <main@@Base+0x119b6>
  41879f:	mov    rdi,r13
  4187a2:	mov    rsi,r12
  4187a5:	mov    rdx,r15
  4187a8:	lea    rcx,[rip+0x28d91]        # 441540 <__data_start@@Base+0x490>
  4187af:	lea    r8,[rsp+0xc]
  4187b4:	call   414890 <main@@Base+0xda70>
  4187b9:	mov    rbp,rax
  4187bc:	cmp    rax,r12
  4187bf:	je     418f79 <main@@Base+0x12159>
  4187c5:	cmp    rbp,r15
  4187c8:	je     418f79 <main@@Base+0x12159>
  4187ce:	mov    ebx,DWORD PTR [rsp+0xc]
  4187d2:	mov    r13,QWORD PTR [rsp]
  4187d6:	test   ebx,ebx
  4187d8:	mov    r12,QWORD PTR [rsp+0x10]
  4187dd:	jne    4187ea <main@@Base+0x119ca>
  4187df:	test   BYTE PTR [r13+0x10],0x2
  4187e4:	je     418d31 <main@@Base+0x11f11>
  4187ea:	mov    rdi,QWORD PTR [r13+0x0]
  4187ee:	mov    esi,0x1
  4187f3:	mov    edx,0x4
  4187f8:	mov    ecx,0x4
  4187fd:	call   41fe80 <flatcc_builder_table_add@@Base>
  418802:	test   rax,rax
  418805:	je     418f79 <main@@Base+0x12159>
  41880b:	mov    DWORD PTR [rax],ebx
  41880d:	jmp    418d31 <main@@Base+0x11f11>
  418812:	mov    rdi,QWORD PTR [rsp]
  418816:	mov    rdx,r15
  418819:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41881e:	mov    rsi,rax
  418821:	cmp    rsi,r15
  418824:	je     41886f <main@@Base+0x11a4f>
  418826:	cmp    BYTE PTR [rsi],0x3a
  418829:	jne    41886f <main@@Base+0x11a4f>
  41882b:	lea    r12,[rsi+0x1]
  41882f:	mov    rax,r15
  418832:	sub    rax,r12
  418835:	cmp    rax,0x2
  418839:	jl     418ca2 <main@@Base+0x11e82>
  41883f:	cmp    BYTE PTR [r12],0x20
  418844:	jg     418cb4 <main@@Base+0x11e94>
  41884a:	jne    418ca2 <main@@Base+0x11e82>
  418850:	cmp    BYTE PTR [rsi+0x2],0x20
  418854:	jle    418ca2 <main@@Base+0x11e82>
  41885a:	add    rsi,0x2
  41885e:	mov    r12,rsi
  418861:	cmp    r13,r12
  418864:	jne    418cb9 <main@@Base+0x11e99>
  41886a:	jmp    418d17 <main@@Base+0x11ef7>
  41886f:	mov    ecx,0x4
  418874:	mov    rdi,QWORD PTR [rsp]
  418878:	mov    rdx,r15
  41887b:	call   423620 <flatcc_json_parser_set_error@@Base>
  418880:	jmp    418cb1 <main@@Base+0x11e91>
  418885:	mov    rdi,QWORD PTR [rsp]
  418889:	mov    rsi,r12
  41888c:	mov    rdx,r15
  41888f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418894:	mov    r12,rax
  418897:	cmp    r13,r12
  41889a:	je     418d17 <main@@Base+0x11ef7>
  4188a0:	mov    QWORD PTR [rsp+0x28],0x0
  4188a9:	mov    DWORD PTR [rsp+0x20],0x0
  4188b1:	mov    DWORD PTR [rsp+0xc],0x0
  4188b9:	xor    ebx,ebx
  4188bb:	cmp    r12,r15
  4188be:	je     4188fa <main@@Base+0x11ada>
  4188c0:	mov    rdi,QWORD PTR [rsp]
  4188c4:	mov    rsi,r12
  4188c7:	mov    rdx,r15
  4188ca:	lea    rcx,[rsp+0x20]
  4188cf:	lea    r8,[rsp+0x28]
  4188d4:	call   425160 <flatcc_json_parser_integer@@Base>
  4188d9:	cmp    rax,r12
  4188dc:	je     418b79 <main@@Base+0x11d59>
  4188e2:	mov    rsi,rax
  4188e5:	cmp    DWORD PTR [rsp+0x20],0x0
  4188ea:	je     418b8d <main@@Base+0x11d6d>
  4188f0:	mov    ecx,0x8
  4188f5:	jmp    418ba4 <main@@Base+0x11d84>
  4188fa:	mov    rax,r15
  4188fd:	mov    r13,QWORD PTR [rsp]
  418901:	jmp    418bb3 <main@@Base+0x11d93>
  418906:	mov    r13,QWORD PTR [rsp]
  41890a:	jne    418923 <main@@Base+0x11b03>
  41890c:	cmp    BYTE PTR [rsi+0x2],0x20
  418910:	jle    418923 <main@@Base+0x11b03>
  418912:	add    rsi,0x2
  418916:	mov    rbp,rsi
  418919:	cmp    r14,rbp
  41891c:	jne    41893d <main@@Base+0x11b1d>
  41891e:	jmp    4181c2 <main@@Base+0x113a2>
  418923:	mov    rdi,r13
  418926:	mov    rsi,rbp
  418929:	mov    rdx,r15
  41892c:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418931:	mov    rbp,rax
  418934:	cmp    r14,rbp
  418937:	je     4181c2 <main@@Base+0x113a2>
  41893d:	mov    QWORD PTR [rsp+0x28],0x0
  418946:	mov    DWORD PTR [rsp+0xc],0x0
  41894e:	mov    QWORD PTR [rsp+0x20],0x0
  418957:	cmp    rbp,r15
  41895a:	mov    r12,QWORD PTR [rsp+0x10]
  41895f:	je     4189a3 <main@@Base+0x11b83>
  418961:	mov    rdi,r13
  418964:	mov    rsi,rbp
  418967:	mov    rdx,r15
  41896a:	lea    rcx,[rsp+0xc]
  41896f:	lea    r8,[rsp+0x28]
  418974:	call   425160 <flatcc_json_parser_integer@@Base>
  418979:	cmp    rax,rbp
  41897c:	je     4189aa <main@@Base+0x11b8a>
  41897e:	mov    rsi,rax
  418981:	mov    rbx,QWORD PTR [rsp+0x28]
  418986:	cmp    DWORD PTR [rsp+0xc],0x0
  41898b:	je     4189b1 <main@@Base+0x11b91>
  41898d:	movabs rax,0x8000000000000000
  418997:	cmp    rbx,rax
  41899a:	jbe    4189ca <main@@Base+0x11baa>
  41899c:	mov    ecx,0x8
  4189a1:	jmp    4189bb <main@@Base+0x11b9b>
  4189a3:	xor    ebx,ebx
  4189a5:	mov    rax,r15
  4189a8:	jmp    4189d5 <main@@Base+0x11bb5>
  4189aa:	xor    ebx,ebx
  4189ac:	mov    rax,rbp
  4189af:	jmp    4189d5 <main@@Base+0x11bb5>
  4189b1:	test   rbx,rbx
  4189b4:	jns    4189cd <main@@Base+0x11bad>
  4189b6:	mov    ecx,0x7
  4189bb:	mov    rdi,r13
  4189be:	mov    rdx,r15
  4189c1:	call   423620 <flatcc_json_parser_set_error@@Base>
  4189c6:	xor    ebx,ebx
  4189c8:	jmp    4189d5 <main@@Base+0x11bb5>
  4189ca:	neg    rbx
  4189cd:	mov    QWORD PTR [rsp+0x20],rbx
  4189d2:	mov    rax,rsi
  4189d5:	mov    r14,rax
  4189d8:	cmp    rbp,rax
  4189db:	jne    418a11 <main@@Base+0x11bf1>
  4189dd:	mov    rdi,r13
  4189e0:	mov    rsi,rbp
  4189e3:	mov    rdx,r15
  4189e6:	lea    rcx,[rip+0x28bd3]        # 4415c0 <__data_start@@Base+0x510>
  4189ed:	lea    r8,[rsp+0x20]
  4189f2:	call   4146e0 <main@@Base+0xd8c0>
  4189f7:	cmp    rax,rbp
  4189fa:	je     418f84 <main@@Base+0x12164>
  418a00:	mov    r14,rax
  418a03:	cmp    rax,r15
  418a06:	je     418f87 <main@@Base+0x12167>
  418a0c:	mov    rbx,QWORD PTR [rsp+0x20]
  418a11:	test   rbx,rbx
  418a14:	mov    rbp,r14
  418a17:	jne    418a24 <main@@Base+0x11c04>
  418a19:	test   BYTE PTR [r13+0x10],0x2
  418a1e:	je     418d31 <main@@Base+0x11f11>
  418a24:	mov    rdi,QWORD PTR [r13+0x0]
  418a28:	mov    esi,0x7
  418a2d:	jmp    418b59 <main@@Base+0x11d39>
  418a32:	mov    r13,QWORD PTR [rsp]
  418a36:	mov    r12,QWORD PTR [rsp+0x10]
  418a3b:	jne    418a54 <main@@Base+0x11c34>
  418a3d:	cmp    BYTE PTR [rsi+0x2],0x20
  418a41:	jle    418a54 <main@@Base+0x11c34>
  418a43:	add    rsi,0x2
  418a47:	mov    rbp,rsi
  418a4a:	cmp    r14,rbp
  418a4d:	jne    418a6e <main@@Base+0x11c4e>
  418a4f:	jmp    418c97 <main@@Base+0x11e77>
  418a54:	mov    rdi,r13
  418a57:	mov    rsi,rbp
  418a5a:	mov    rdx,r15
  418a5d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418a62:	mov    rbp,rax
  418a65:	cmp    r14,rbp
  418a68:	je     418c97 <main@@Base+0x11e77>
  418a6e:	mov    QWORD PTR [rsp+0x28],0x0
  418a77:	mov    DWORD PTR [rsp+0xc],0x0
  418a7f:	mov    QWORD PTR [rsp+0x20],0x0
  418a88:	cmp    rbp,r15
  418a8b:	je     418acf <main@@Base+0x11caf>
  418a8d:	mov    rdi,r13
  418a90:	mov    rsi,rbp
  418a93:	mov    rdx,r15
  418a96:	lea    rcx,[rsp+0xc]
  418a9b:	lea    r8,[rsp+0x28]
  418aa0:	call   425160 <flatcc_json_parser_integer@@Base>
  418aa5:	cmp    rax,rbp
  418aa8:	je     418ad6 <main@@Base+0x11cb6>
  418aaa:	mov    rsi,rax
  418aad:	mov    rbx,QWORD PTR [rsp+0x28]
  418ab2:	cmp    DWORD PTR [rsp+0xc],0x0
  418ab7:	je     418add <main@@Base+0x11cbd>
  418ab9:	movabs rax,0x8000000000000000
  418ac3:	cmp    rbx,rax
  418ac6:	jbe    418af6 <main@@Base+0x11cd6>
  418ac8:	mov    ecx,0x8
  418acd:	jmp    418ae7 <main@@Base+0x11cc7>
  418acf:	xor    ebx,ebx
  418ad1:	mov    rax,r15
  418ad4:	jmp    418b01 <main@@Base+0x11ce1>
  418ad6:	xor    ebx,ebx
  418ad8:	mov    rax,rbp
  418adb:	jmp    418b01 <main@@Base+0x11ce1>
  418add:	test   rbx,rbx
  418ae0:	jns    418af9 <main@@Base+0x11cd9>
  418ae2:	mov    ecx,0x7
  418ae7:	mov    rdi,r13
  418aea:	mov    rdx,r15
  418aed:	call   423620 <flatcc_json_parser_set_error@@Base>
  418af2:	xor    ebx,ebx
  418af4:	jmp    418b01 <main@@Base+0x11ce1>
  418af6:	neg    rbx
  418af9:	mov    QWORD PTR [rsp+0x20],rbx
  418afe:	mov    rax,rsi
  418b01:	mov    r14,rax
  418b04:	cmp    rbp,rax
  418b07:	jne    418b3d <main@@Base+0x11d1d>
  418b09:	mov    rdi,r13
  418b0c:	mov    rsi,rbp
  418b0f:	mov    rdx,r15
  418b12:	lea    rcx,[rip+0x28a47]        # 441560 <__data_start@@Base+0x4b0>
  418b19:	lea    r8,[rsp+0x20]
  418b1e:	call   4146e0 <main@@Base+0xd8c0>
  418b23:	cmp    rax,rbp
  418b26:	je     418f84 <main@@Base+0x12164>
  418b2c:	mov    r14,rax
  418b2f:	cmp    rax,r15
  418b32:	je     418f87 <main@@Base+0x12167>
  418b38:	mov    rbx,QWORD PTR [rsp+0x20]
  418b3d:	test   rbx,rbx
  418b40:	mov    rbp,r14
  418b43:	jne    418b50 <main@@Base+0x11d30>
  418b45:	test   BYTE PTR [r13+0x10],0x2
  418b4a:	je     418d31 <main@@Base+0x11f11>
  418b50:	mov    rdi,QWORD PTR [r13+0x0]
  418b54:	mov    esi,0x3
  418b59:	mov    edx,0x8
  418b5e:	mov    ecx,0x8
  418b63:	call   41fe80 <flatcc_builder_table_add@@Base>
  418b68:	test   rax,rax
  418b6b:	je     418f87 <main@@Base+0x12167>
  418b71:	mov    QWORD PTR [rax],rbx
  418b74:	jmp    418d31 <main@@Base+0x11f11>
  418b79:	mov    rax,r12
  418b7c:	mov    r13,QWORD PTR [rsp]
  418b80:	jmp    418bb3 <main@@Base+0x11d93>
  418b82:	mov    DWORD PTR [rsp+0xc],eax
  418b86:	mov    ebx,eax
  418b88:	jmp    418756 <main@@Base+0x11936>
  418b8d:	mov    rax,QWORD PTR [rsp+0x28]
  418b92:	mov    rcx,rax
  418b95:	shr    rcx,0x20
  418b99:	je     4179dd <main@@Base+0x10bbd>
  418b9f:	mov    ecx,0x7
  418ba4:	mov    r13,QWORD PTR [rsp]
  418ba8:	mov    rdi,r13
  418bab:	mov    rdx,r15
  418bae:	call   423620 <flatcc_json_parser_set_error@@Base>
  418bb3:	mov    rbp,rax
  418bb6:	cmp    r12,rax
  418bb9:	jne    418bf2 <main@@Base+0x11dd2>
  418bbb:	mov    rdi,r13
  418bbe:	mov    rsi,r12
  418bc1:	mov    rdx,r15
  418bc4:	lea    rcx,[rip+0x289d5]        # 4415a0 <__data_start@@Base+0x4f0>
  418bcb:	lea    r8,[rsp+0xc]
  418bd0:	call   414890 <main@@Base+0xda70>
  418bd5:	mov    rbp,rax
  418bd8:	cmp    rax,r12
  418bdb:	je     418f79 <main@@Base+0x12159>
  418be1:	cmp    rbp,r15
  418be4:	je     418f79 <main@@Base+0x12159>
  418bea:	mov    ebx,DWORD PTR [rsp+0xc]
  418bee:	mov    r13,QWORD PTR [rsp]
  418bf2:	test   ebx,ebx
  418bf4:	jne    418c01 <main@@Base+0x11de1>
  418bf6:	test   BYTE PTR [r13+0x10],0x2
  418bfb:	je     418d2c <main@@Base+0x11f0c>
  418c01:	mov    rdi,QWORD PTR [r13+0x0]
  418c05:	mov    esi,0x6
  418c0a:	mov    edx,0x4
  418c0f:	mov    ecx,0x4
  418c14:	call   41fe80 <flatcc_builder_table_add@@Base>
  418c19:	test   rax,rax
  418c1c:	je     418f79 <main@@Base+0x12159>
  418c22:	mov    DWORD PTR [rax],ebx
  418c24:	jmp    418d2c <main@@Base+0x11f0c>
  418c29:	jne    418c3e <main@@Base+0x11e1e>
  418c2b:	cmp    BYTE PTR [rsi+0x2],0x20
  418c2f:	jle    418c3e <main@@Base+0x11e1e>
  418c31:	add    rsi,0x2
  418c35:	mov    rax,rsi
  418c38:	mov    r13,QWORD PTR [rsp]
  418c3c:	jmp    418c50 <main@@Base+0x11e30>
  418c3e:	mov    r13,QWORD PTR [rsp]
  418c42:	mov    rdi,r13
  418c45:	mov    rsi,rax
  418c48:	mov    rdx,r15
  418c4b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418c50:	cmp    r14,rax
  418c53:	mov    r12,QWORD PTR [rsp+0x10]
  418c58:	je     418c97 <main@@Base+0x11e77>
  418c5a:	mov    rdi,r13
  418c5d:	mov    rsi,rax
  418c60:	mov    rdx,r15
  418c63:	lea    rcx,[rsp+0x34]
  418c68:	call   425630 <flatcc_json_parser_build_string@@Base>
  418c6d:	mov    rbp,rax
  418c70:	cmp    DWORD PTR [rsp+0x34],0x0
  418c75:	je     418f8e <main@@Base+0x1216e>
  418c7b:	mov    rdi,QWORD PTR [r13+0x0]
  418c7f:	mov    esi,0x2
  418c84:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  418c89:	test   rax,rax
  418c8c:	jne    4186d8 <main@@Base+0x118b8>
  418c92:	jmp    418f8e <main@@Base+0x1216e>
  418c97:	mov    rdi,r13
  418c9a:	mov    rsi,r14
  418c9d:	jmp    4182ed <main@@Base+0x114cd>
  418ca2:	mov    rdi,QWORD PTR [rsp]
  418ca6:	mov    rsi,r12
  418ca9:	mov    rdx,r15
  418cac:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418cb1:	mov    r12,rax
  418cb4:	cmp    r13,r12
  418cb7:	je     418d17 <main@@Base+0x11ef7>
  418cb9:	mov    QWORD PTR [rsp+0x28],0x0
  418cc2:	mov    DWORD PTR [rsp+0x20],0x0
  418cca:	mov    DWORD PTR [rsp+0xc],0x0
  418cd2:	xor    ebx,ebx
  418cd4:	cmp    r12,r15
  418cd7:	je     4179c5 <main@@Base+0x10ba5>
  418cdd:	mov    rdi,QWORD PTR [rsp]
  418ce1:	mov    rsi,r12
  418ce4:	mov    rdx,r15
  418ce7:	lea    rcx,[rsp+0x20]
  418cec:	lea    r8,[rsp+0x28]
  418cf1:	call   425160 <flatcc_json_parser_integer@@Base>
  418cf6:	cmp    rax,r12
  418cf9:	je     4179d3 <main@@Base+0x10bb3>
  418cff:	mov    rbp,rax
  418d02:	cmp    DWORD PTR [rsp+0x20],0x0
  418d07:	je     4179ef <main@@Base+0x10bcf>
  418d0d:	mov    ecx,0x8
  418d12:	jmp    417a06 <main@@Base+0x10be6>
  418d17:	mov    rdi,QWORD PTR [rsp]
  418d1b:	mov    rsi,r13
  418d1e:	mov    r13,rdi
  418d21:	mov    rdx,r15
  418d24:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  418d29:	mov    rbp,rax
  418d2c:	mov    r12,QWORD PTR [rsp+0x10]
  418d31:	mov    rax,r15
  418d34:	sub    rax,rbp
  418d37:	cmp    rax,0x2
  418d3b:	jl     418d59 <main@@Base+0x11f39>
  418d3d:	cmp    BYTE PTR [rbp+0x0],0x20
  418d41:	jg     418d6a <main@@Base+0x11f4a>
  418d43:	jne    418d59 <main@@Base+0x11f39>
  418d45:	cmp    BYTE PTR [rbp+0x1],0x20
  418d49:	jle    418d59 <main@@Base+0x11f39>
  418d4b:	add    rbp,0x1
  418d4f:	cmp    rbp,r15
  418d52:	jne    418d6f <main@@Base+0x11f4f>
  418d54:	jmp    418de8 <main@@Base+0x11fc8>
  418d59:	mov    rdi,r13
  418d5c:	mov    rsi,rbp
  418d5f:	mov    rdx,r15
  418d62:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418d67:	mov    rbp,rax
  418d6a:	cmp    rbp,r15
  418d6d:	je     418de8 <main@@Base+0x11fc8>
  418d6f:	movzx  eax,BYTE PTR [rbp+0x0]
  418d73:	cmp    al,0x2c
  418d75:	jne    418ded <main@@Base+0x11fcd>
  418d77:	lea    rsi,[rbp+0x1]
  418d7b:	mov    rax,r15
  418d7e:	sub    rax,rsi
  418d81:	cmp    rax,0x2
  418d85:	jl     418da5 <main@@Base+0x11f85>
  418d87:	cmp    BYTE PTR [rsi],0x20
  418d8a:	jg     418db3 <main@@Base+0x11f93>
  418d8c:	jne    418da5 <main@@Base+0x11f85>
  418d8e:	cmp    BYTE PTR [rbp+0x2],0x20
  418d92:	jle    418da5 <main@@Base+0x11f85>
  418d94:	add    rbp,0x2
  418d98:	mov    rsi,rbp
  418d9b:	cmp    rsi,r15
  418d9e:	jne    418db8 <main@@Base+0x11f98>
  418da0:	jmp    418e2b <main@@Base+0x1200b>
  418da5:	mov    rdi,r13
  418da8:	mov    rdx,r15
  418dab:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418db0:	mov    rsi,rax
  418db3:	cmp    rsi,r15
  418db6:	je     418e2b <main@@Base+0x1200b>
  418db8:	cmp    BYTE PTR [rsi],0x7d
  418dbb:	jne    417a9b <main@@Base+0x10c7b>
  418dc1:	lea    rbp,[rsi+0x1]
  418dc5:	mov    rax,r15
  418dc8:	sub    rax,rbp
  418dcb:	cmp    rax,0x2
  418dcf:	jl     418e1b <main@@Base+0x11ffb>
  418dd1:	cmp    BYTE PTR [rbp+0x0],0x20
  418dd5:	jg     418e4e <main@@Base+0x1202e>
  418dd7:	jne    418e1b <main@@Base+0x11ffb>
  418dd9:	cmp    BYTE PTR [rsi+0x2],0x20
  418ddd:	jle    418e1b <main@@Base+0x11ffb>
  418ddf:	add    rsi,0x2
  418de3:	mov    rbp,rsi
  418de6:	jmp    418e4e <main@@Base+0x1202e>
  418de8:	mov    rbp,r15
  418deb:	jmp    418e4e <main@@Base+0x1202e>
  418ded:	cmp    al,0x7d
  418def:	jne    418e38 <main@@Base+0x12018>
  418df1:	mov    rcx,rbp
  418df4:	lea    rbp,[rbp+0x1]
  418df8:	mov    rax,r15
  418dfb:	sub    rax,rbp
  418dfe:	cmp    rax,0x2
  418e02:	jl     418e1b <main@@Base+0x11ffb>
  418e04:	cmp    BYTE PTR [rbp+0x0],0x20
  418e08:	jg     418e4e <main@@Base+0x1202e>
  418e0a:	jne    418e1b <main@@Base+0x11ffb>
  418e0c:	cmp    BYTE PTR [rcx+0x2],0x20
  418e10:	jle    418e1b <main@@Base+0x11ffb>
  418e12:	mov    rbp,rcx
  418e15:	add    rbp,0x2
  418e19:	jmp    418e4e <main@@Base+0x1202e>
  418e1b:	mov    rdi,r13
  418e1e:	mov    rsi,rbp
  418e21:	mov    rdx,r15
  418e24:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418e29:	jmp    418e4b <main@@Base+0x1202b>
  418e2b:	mov    ecx,0xa
  418e30:	mov    rdi,r13
  418e33:	mov    rsi,r15
  418e36:	jmp    418e43 <main@@Base+0x12023>
  418e38:	mov    ecx,0xa
  418e3d:	mov    rdi,r13
  418e40:	mov    rsi,rbp
  418e43:	mov    rdx,r15
  418e46:	call   423620 <flatcc_json_parser_set_error@@Base>
  418e4b:	mov    rbp,rax
  418e4e:	mov    rax,QWORD PTR [rsp+0x18]
  418e53:	cmp    DWORD PTR [rax],0x0
  418e56:	jne    418f8e <main@@Base+0x1216e>
  418e5c:	mov    rdi,QWORD PTR [r13+0x0]
  418e60:	call   41f510 <flatcc_builder_end_table@@Base>
  418e65:	test   eax,eax
  418e67:	je     418f8e <main@@Base+0x1216e>
  418e6d:	mov    ebx,eax
  418e6f:	mov    rdi,QWORD PTR [r13+0x0]
  418e73:	xor    esi,esi
  418e75:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  418e7a:	test   rax,rax
  418e7d:	je     418f6b <main@@Base+0x1214b>
  418e83:	mov    DWORD PTR [rax],ebx
  418e85:	jmp    4162bd <main@@Base+0xf49d>
  418e8a:	mov    rdi,r13
  418e8d:	mov    rsi,rbx
  418e90:	mov    rdx,r15
  418e93:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418e98:	jmp    416078 <main@@Base+0xf258>
  418e9d:	mov    rbx,r15
  418ea0:	jmp    418f28 <main@@Base+0x12108>
  418ea5:	cmp    al,0x7d
  418ea7:	jne    418f12 <main@@Base+0x120f2>
  418ea9:	lea    rbx,[rbp+0x1]
  418ead:	mov    rax,r15
  418eb0:	sub    rax,rbx
  418eb3:	cmp    rax,0x2
  418eb7:	jl     418f02 <main@@Base+0x120e2>
  418eb9:	cmp    BYTE PTR [rbx],0x20
  418ebc:	jg     418f28 <main@@Base+0x12108>
  418ebe:	jne    418f02 <main@@Base+0x120e2>
  418ec0:	cmp    BYTE PTR [rbp+0x2],0x20
  418ec4:	jle    418f02 <main@@Base+0x120e2>
  418ec6:	add    rbp,0x2
  418eca:	mov    rbx,rbp
  418ecd:	jmp    418f28 <main@@Base+0x12108>
  418ecf:	mov    ecx,0xa
  418ed4:	mov    rdi,r13
  418ed7:	mov    rsi,r15
  418eda:	jmp    418f1d <main@@Base+0x120fd>
  418edc:	lea    rbx,[rsi+0x1]
  418ee0:	mov    rax,r15
  418ee3:	sub    rax,rbx
  418ee6:	cmp    rax,0x2
  418eea:	jl     418f02 <main@@Base+0x120e2>
  418eec:	cmp    BYTE PTR [rbx],0x20
  418eef:	jg     418f28 <main@@Base+0x12108>
  418ef1:	jne    418f02 <main@@Base+0x120e2>
  418ef3:	cmp    BYTE PTR [rsi+0x2],0x20
  418ef7:	jle    418f02 <main@@Base+0x120e2>
  418ef9:	add    rsi,0x2
  418efd:	mov    rbx,rsi
  418f00:	jmp    418f28 <main@@Base+0x12108>
  418f02:	mov    rdi,r13
  418f05:	mov    rsi,rbx
  418f08:	mov    rdx,r15
  418f0b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  418f10:	jmp    418f25 <main@@Base+0x12105>
  418f12:	mov    ecx,0xa
  418f17:	mov    rdi,r13
  418f1a:	mov    rsi,rbp
  418f1d:	mov    rdx,r15
  418f20:	call   423620 <flatcc_json_parser_set_error@@Base>
  418f25:	mov    rbx,rax
  418f28:	mov    rax,QWORD PTR [rsp+0x18]
  418f2d:	cmp    DWORD PTR [rax],0x0
  418f30:	jne    418f43 <main@@Base+0x12123>
  418f32:	mov    rdi,QWORD PTR [r13+0x0]
  418f36:	call   41f510 <flatcc_builder_end_table@@Base>
  418f3b:	mov    DWORD PTR [r12],eax
  418f3f:	test   eax,eax
  418f41:	jne    418f59 <main@@Base+0x12139>
  418f43:	mov    ecx,0x21
  418f48:	mov    rdi,r13
  418f4b:	mov    rsi,rbx
  418f4e:	mov    rdx,r15
  418f51:	call   423620 <flatcc_json_parser_set_error@@Base>
  418f56:	mov    rbx,rax
  418f59:	mov    rax,rbx
  418f5c:	add    rsp,0x38
  418f60:	pop    rbx
  418f61:	pop    r12
  418f63:	pop    r13
  418f65:	pop    r14
  418f67:	pop    r15
  418f69:	pop    rbp
  418f6a:	ret    
  418f6b:	mov    rbx,rbp
  418f6e:	jmp    418f43 <main@@Base+0x12123>
  418f70:	mov    rbp,r12
  418f73:	mov    r13,QWORD PTR [rsp]
  418f77:	jmp    418f8e <main@@Base+0x1216e>
  418f79:	mov    r13,QWORD PTR [rsp]
  418f7d:	jmp    418f8e <main@@Base+0x1216e>
  418f7f:	mov    rbp,rcx
  418f82:	jmp    418f8e <main@@Base+0x1216e>
  418f84:	mov    r14,rax
  418f87:	mov    r13,QWORD PTR [rsp]
  418f8b:	mov    rbp,r14
  418f8e:	mov    ecx,0x21
  418f93:	mov    rdi,r13
  418f96:	mov    rsi,rbp
  418f99:	mov    rdx,r15
  418f9c:	call   423620 <flatcc_json_parser_set_error@@Base>
  418fa1:	mov    rbx,rax
  418fa4:	jmp    418f43 <main@@Base+0x12123>
  418fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418fb0:	push   rbp
  418fb1:	push   r15
  418fb3:	push   r14
  418fb5:	push   r13
  418fb7:	push   r12
  418fb9:	push   rbx
  418fba:	sub    rsp,0x18
  418fbe:	mov    r13,rcx
  418fc1:	mov    r15,rdx
  418fc4:	mov    rbx,rsi
  418fc7:	mov    r14,rdi
  418fca:	mov    DWORD PTR [rcx],0x0
  418fd0:	mov    rdi,QWORD PTR [rdi]
  418fd3:	mov    esi,0xa
  418fd8:	call   41eb00 <flatcc_builder_start_table@@Base>
  418fdd:	test   eax,eax
  418fdf:	je     419009 <main@@Base+0x121e9>
  418fe1:	mov    ecx,0x21
  418fe6:	mov    rdi,r14
  418fe9:	mov    rsi,rbx
  418fec:	mov    rdx,r15
  418fef:	call   423620 <flatcc_json_parser_set_error@@Base>
  418ff4:	mov    rbx,rax
  418ff7:	mov    rax,rbx
  418ffa:	add    rsp,0x18
  418ffe:	pop    rbx
  418fff:	pop    r12
  419001:	pop    r13
  419003:	pop    r14
  419005:	pop    r15
  419007:	pop    rbp
  419008:	ret    
  419009:	lea    r8,[rsp+0x10]
  41900e:	mov    ecx,0x5
  419013:	mov    rdi,r14
  419016:	mov    rsi,rbx
  419019:	mov    rdx,r15
  41901c:	call   4258e0 <flatcc_json_parser_prepare_unions@@Base>
  419021:	cmp    rax,r15
  419024:	je     418fe1 <main@@Base+0x121c1>
  419026:	cmp    rbx,r15
  419029:	je     419056 <main@@Base+0x12236>
  41902b:	cmp    BYTE PTR [rbx],0x7b
  41902e:	jne    419056 <main@@Base+0x12236>
  419030:	lea    rax,[rbx+0x1]
  419034:	mov    rcx,r15
  419037:	sub    rcx,rax
  41903a:	cmp    rcx,0x2
  41903e:	jl     4190a6 <main@@Base+0x12286>
  419040:	cmp    BYTE PTR [rax],0x20
  419043:	jg     4190b4 <main@@Base+0x12294>
  419045:	jne    4190a6 <main@@Base+0x12286>
  419047:	cmp    BYTE PTR [rbx+0x2],0x20
  41904b:	jle    4190a6 <main@@Base+0x12286>
  41904d:	add    rbx,0x2
  419051:	mov    rax,rbx
  419054:	jmp    4190b4 <main@@Base+0x12294>
  419056:	mov    ecx,0x15
  41905b:	mov    rdi,r14
  41905e:	mov    rsi,rbx
  419061:	mov    rdx,r15
  419064:	call   423620 <flatcc_json_parser_set_error@@Base>
  419069:	mov    rbx,rax
  41906c:	cmp    DWORD PTR [r14+0x1c],0x0
  419071:	jne    418fe1 <main@@Base+0x121c1>
  419077:	mov    rcx,QWORD PTR [rsp+0x10]
  41907c:	mov    rdi,r14
  41907f:	mov    rsi,rbx
  419082:	mov    rdx,r15
  419085:	call   425960 <flatcc_json_parser_finalize_unions@@Base>
  41908a:	mov    rbx,rax
  41908d:	mov    rdi,QWORD PTR [r14]
  419090:	call   41f510 <flatcc_builder_end_table@@Base>
  419095:	mov    DWORD PTR [r13+0x0],eax
  419099:	test   eax,eax
  41909b:	jne    418ff7 <main@@Base+0x121d7>
  4190a1:	jmp    418fe1 <main@@Base+0x121c1>
  4190a6:	mov    rdi,r14
  4190a9:	mov    rsi,rax
  4190ac:	mov    rdx,r15
  4190af:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4190b4:	mov    rsi,r15
  4190b7:	cmp    rax,r15
  4190ba:	je     4190c8 <main@@Base+0x122a8>
  4190bc:	cmp    BYTE PTR [rax],0x7d
  4190bf:	je     41a3b0 <main@@Base+0x13590>
  4190c5:	mov    rsi,rax
  4190c8:	movabs rbx,0x7261637465720000
  4190d2:	mov    QWORD PTR [rsp+0x8],r13
  4190d7:	nop    WORD PTR [rax+rax*1+0x0]
  4190e0:	mov    r12,r15
  4190e3:	cmp    rsi,r15
  4190e6:	je     419109 <main@@Base+0x122e9>
  4190e8:	cmp    BYTE PTR [rsi],0x22
  4190eb:	jne    4190f6 <main@@Base+0x122d6>
  4190ed:	add    rsi,0x1
  4190f1:	mov    r12,rsi
  4190f4:	jmp    419109 <main@@Base+0x122e9>
  4190f6:	mov    ecx,0x5
  4190fb:	mov    rdi,r14
  4190fe:	mov    rdx,r15
  419101:	call   423620 <flatcc_json_parser_set_error@@Base>
  419106:	mov    r12,rax
  419109:	mov    rcx,r15
  41910c:	sub    rcx,r12
  41910f:	cmp    rcx,0x8
  419113:	jb     419120 <main@@Base+0x12300>
  419115:	movbe  rax,QWORD PTR [r12]
  41911b:	jmp    4191bb <main@@Base+0x1239b>
  419120:	mov    eax,ecx
  419122:	and    al,0xf
  419124:	add    al,0xff
  419126:	cmp    al,0x7
  419128:	ja     419bae <main@@Base+0x12d8e>
  41912e:	movzx  eax,al
  419131:	lea    rdx,[rip+0x1a7bc]        # 4338f4 <_IO_stdin_used@@Base+0x8f4>
  419138:	movsxd rax,DWORD PTR [rdx+rax*4]
  41913c:	add    rax,rdx
  41913f:	xor    r8d,r8d
  419142:	xor    r9d,r9d
  419145:	xor    edx,edx
  419147:	xor    esi,esi
  419149:	xor    ebx,ebx
  41914b:	xor    ebp,ebp
  41914d:	xor    edi,edi
  41914f:	jmp    rax
  419151:	movsx  r8,BYTE PTR [r12+0x7]
  419157:	movsx  r9,BYTE PTR [r12+0x6]
  41915d:	shl    r9,0x8
  419161:	or     r9,r8
  419164:	movsx  rdx,BYTE PTR [r12+0x5]
  41916a:	shl    rdx,0x10
  41916e:	or     rdx,r9
  419171:	movsx  rsi,BYTE PTR [r12+0x4]
  419177:	shl    rsi,0x18
  41917b:	or     rsi,rdx
  41917e:	movsx  rbx,BYTE PTR [r12+0x3]
  419184:	shl    rbx,0x20
  419188:	or     rbx,rsi
  41918b:	movsx  rbp,BYTE PTR [r12+0x2]
  419191:	shl    rbp,0x28
  419195:	or     rbp,rbx
  419198:	movsx  rdi,BYTE PTR [r12+0x1]
  41919e:	shl    rdi,0x30
  4191a2:	or     rdi,rbp
  4191a5:	movzx  eax,BYTE PTR [r12]
  4191aa:	shl    rax,0x38
  4191ae:	or     rax,rdi
  4191b1:	movabs rbx,0x7261637465720000
  4191bb:	movabs rdx,0x6368617261637465
  4191c5:	cmp    rax,rdx
  4191c8:	jae    419210 <main@@Base+0x123f0>
  4191ca:	movabs rdx,0x63616d656f5f7479
  4191d4:	cmp    rax,rdx
  4191d7:	je     419298 <main@@Base+0x12478>
  4191dd:	movabs rdx,0x616e7461676f6e69
  4191e7:	cmp    rax,rdx
  4191ea:	jne    4192b8 <main@@Base+0x12498>
  4191f0:	lea    r13,[r12+0x8]
  4191f5:	mov    rax,r15
  4191f8:	sub    rax,r13
  4191fb:	cmp    rax,0x8
  4191ff:	jb     41932e <main@@Base+0x1250e>
  419205:	movbe  rcx,QWORD PTR [r13+0x0]
  41920b:	jmp    4193cc <main@@Base+0x125ac>
  419210:	movabs rcx,0x6d61696e5f636860
  41921a:	cmp    rax,rcx
  41921d:	ja     419252 <main@@Base+0x12432>
  41921f:	movabs rcx,0x6368617261637465
  419229:	cmp    rax,rcx
  41922c:	jne    419bae <main@@Base+0x12d8e>
  419232:	lea    r13,[r12+0x8]
  419237:	mov    rax,r15
  41923a:	sub    rax,r13
  41923d:	cmp    rax,0x8
  419241:	jb     4195f5 <main@@Base+0x127d5>
  419247:	movbe  rcx,QWORD PTR [r13+0x0]
  41924d:	jmp    419693 <main@@Base+0x12873>
  419252:	movabs rcx,0x736964655f6b6963
  41925c:	cmp    rax,rcx
  41925f:	je     419441 <main@@Base+0x12621>
  419265:	movabs rcx,0x6d61696e5f636861
  41926f:	cmp    rax,rcx
  419272:	jne    419bae <main@@Base+0x12d8e>
  419278:	lea    r13,[r12+0x8]
  41927d:	mov    rax,r15
  419280:	sub    rax,r13
  419283:	cmp    rax,0x8
  419287:	jb     41977f <main@@Base+0x1295f>
  41928d:	movbe  rcx,QWORD PTR [r13+0x0]
  419293:	jmp    41981d <main@@Base+0x129fd>
  419298:	lea    r13,[r12+0x8]
  41929d:	mov    rax,r15
  4192a0:	sub    rax,r13
  4192a3:	cmp    rax,0x8
  4192a7:	jb     419461 <main@@Base+0x12641>
  4192ad:	movbe  rcx,QWORD PTR [r13+0x0]
  4192b3:	jmp    4194ff <main@@Base+0x126df>
  4192b8:	shr    rax,0x18
  4192bc:	movabs rdx,0x63616d656f
  4192c6:	cmp    rax,rdx
  4192c9:	jne    419bae <main@@Base+0x12d8e>
  4192cf:	mov    rax,r12
  4192d2:	cmp    rcx,0x6
  4192d6:	jl     419eaf <main@@Base+0x1308f>
  4192dc:	cmp    BYTE PTR [r12+0x5],0x22
  4192e2:	mov    rax,r12
  4192e5:	jne    419eaf <main@@Base+0x1308f>
  4192eb:	lea    rsi,[r12+0x6]
  4192f0:	mov    rax,r15
  4192f3:	sub    rax,rsi
  4192f6:	cmp    rax,0x2
  4192fa:	jl     419b3e <main@@Base+0x12d1e>
  419300:	cmp    BYTE PTR [rsi],0x20
  419303:	jg     419b4c <main@@Base+0x12d2c>
  419309:	jne    419b3e <main@@Base+0x12d1e>
  41930f:	cmp    BYTE PTR [r12+0x7],0x20
  419315:	jle    419b3e <main@@Base+0x12d1e>
  41931b:	lea    rsi,[r12+0x7]
  419320:	cmp    rsi,r15
  419323:	jne    419b51 <main@@Base+0x12d31>
  419329:	jmp    419b95 <main@@Base+0x12d75>
  41932e:	mov    ecx,eax
  419330:	and    cl,0xf
  419333:	add    cl,0xff
  419336:	cmp    cl,0x7
  419339:	ja     41a2b0 <main@@Base+0x13490>
  41933f:	movzx  ecx,cl
  419342:	lea    rdx,[rip+0x1a66b]        # 4339b4 <_IO_stdin_used@@Base+0x9b4>
  419349:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41934d:	add    rcx,rdx
  419350:	xor    r8d,r8d
  419353:	xor    r9d,r9d
  419356:	xor    edx,edx
  419358:	xor    esi,esi
  41935a:	xor    ebx,ebx
  41935c:	xor    ebp,ebp
  41935e:	xor    edi,edi
  419360:	jmp    rcx
  419362:	movsx  r8,BYTE PTR [r12+0xf]
  419368:	movsx  r9,BYTE PTR [r12+0xe]
  41936e:	shl    r9,0x8
  419372:	or     r9,r8
  419375:	movsx  rdx,BYTE PTR [r12+0xd]
  41937b:	shl    rdx,0x10
  41937f:	or     rdx,r9
  419382:	movsx  rsi,BYTE PTR [r12+0xc]
  419388:	shl    rsi,0x18
  41938c:	or     rsi,rdx
  41938f:	movsx  rbx,BYTE PTR [r12+0xb]
  419395:	shl    rbx,0x20
  419399:	or     rbx,rsi
  41939c:	movsx  rbp,BYTE PTR [r12+0xa]
  4193a2:	shl    rbp,0x28
  4193a6:	or     rbp,rbx
  4193a9:	movsx  rdi,BYTE PTR [r12+0x9]
  4193af:	shl    rdi,0x30
  4193b3:	or     rdi,rbp
  4193b6:	movzx  ecx,BYTE PTR [r13+0x0]
  4193bb:	shl    rcx,0x38
  4193bf:	or     rcx,rdi
  4193c2:	movabs rbx,0x7261637465720000
  4193cc:	mov    rdx,rcx
  4193cf:	shr    rdx,0x8
  4193d3:	movabs rsi,0x73745f74797065
  4193dd:	cmp    rdx,rsi
  4193e0:	jne    41957a <main@@Base+0x1275a>
  4193e6:	cmp    rax,0x8
  4193ea:	jl     41a2b0 <main@@Base+0x13490>
  4193f0:	cmp    BYTE PTR [r12+0xf],0x22
  4193f6:	jne    41a2b0 <main@@Base+0x13490>
  4193fc:	lea    rsi,[r12+0x10]
  419401:	mov    rax,r15
  419404:	sub    rax,rsi
  419407:	cmp    rax,0x2
  41940b:	jl     419bc1 <main@@Base+0x12da1>
  419411:	cmp    BYTE PTR [rsi],0x20
  419414:	jg     419bcf <main@@Base+0x12daf>
  41941a:	jne    419bc1 <main@@Base+0x12da1>
  419420:	cmp    BYTE PTR [r12+0x11],0x20
  419426:	jle    419bc1 <main@@Base+0x12da1>
  41942c:	add    r12,0x11
  419430:	mov    rsi,r12
  419433:	cmp    rsi,r15
  419436:	jne    419bd8 <main@@Base+0x12db8>
  41943c:	jmp    419c7d <main@@Base+0x12e5d>
  419441:	lea    r13,[r12+0x8]
  419446:	mov    rax,r15
  419449:	sub    rax,r13
  41944c:	cmp    rax,0x8
  419450:	jb     41984d <main@@Base+0x12a2d>
  419456:	movbe  rcx,QWORD PTR [r13+0x0]
  41945c:	jmp    4198eb <main@@Base+0x12acb>
  419461:	mov    ecx,eax
  419463:	and    cl,0xf
  419466:	add    cl,0xff
  419469:	cmp    cl,0x7
  41946c:	ja     41a2b0 <main@@Base+0x13490>
  419472:	movzx  ecx,cl
  419475:	lea    rdx,[rip+0x1a518]        # 433994 <_IO_stdin_used@@Base+0x994>
  41947c:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419480:	add    rcx,rdx
  419483:	xor    r8d,r8d
  419486:	xor    r9d,r9d
  419489:	xor    edx,edx
  41948b:	xor    esi,esi
  41948d:	xor    ebx,ebx
  41948f:	xor    ebp,ebp
  419491:	xor    edi,edi
  419493:	jmp    rcx
  419495:	movsx  r8,BYTE PTR [r12+0xf]
  41949b:	movsx  r9,BYTE PTR [r12+0xe]
  4194a1:	shl    r9,0x8
  4194a5:	or     r9,r8
  4194a8:	movsx  rdx,BYTE PTR [r12+0xd]
  4194ae:	shl    rdx,0x10
  4194b2:	or     rdx,r9
  4194b5:	movsx  rsi,BYTE PTR [r12+0xc]
  4194bb:	shl    rsi,0x18
  4194bf:	or     rsi,rdx
  4194c2:	movsx  rbx,BYTE PTR [r12+0xb]
  4194c8:	shl    rbx,0x20
  4194cc:	or     rbx,rsi
  4194cf:	movsx  rbp,BYTE PTR [r12+0xa]
  4194d5:	shl    rbp,0x28
  4194d9:	or     rbp,rbx
  4194dc:	movsx  rdi,BYTE PTR [r12+0x9]
  4194e2:	shl    rdi,0x30
  4194e6:	or     rdi,rbp
  4194e9:	movzx  ecx,BYTE PTR [r13+0x0]
  4194ee:	shl    rcx,0x38
  4194f2:	or     rcx,rdi
  4194f5:	movabs rbx,0x7261637465720000
  4194ff:	movabs rdx,0xffff000000000000
  419509:	and    rcx,rdx
  41950c:	movabs rdx,0x7065000000000000
  419516:	cmp    rcx,rdx
  419519:	jne    41a2b0 <main@@Base+0x13490>
  41951f:	cmp    rax,0x3
  419523:	jl     41a2b0 <main@@Base+0x13490>
  419529:	cmp    BYTE PTR [r12+0xa],0x22
  41952f:	jne    41a2b0 <main@@Base+0x13490>
  419535:	lea    rsi,[r12+0xb]
  41953a:	mov    rax,r15
  41953d:	sub    rax,rsi
  419540:	cmp    rax,0x2
  419544:	jl     419c23 <main@@Base+0x12e03>
  41954a:	cmp    BYTE PTR [rsi],0x20
  41954d:	jg     419c31 <main@@Base+0x12e11>
  419553:	jne    419c23 <main@@Base+0x12e03>
  419559:	cmp    BYTE PTR [r12+0xc],0x20
  41955f:	jle    419c23 <main@@Base+0x12e03>
  419565:	add    r12,0xc
  419569:	mov    rsi,r12
  41956c:	cmp    rsi,r15
  41956f:	jne    419c36 <main@@Base+0x12e16>
  419575:	jmp    419c9b <main@@Base+0x12e7b>
  41957a:	movabs rdx,0xffff000000000000
  419584:	and    rcx,rdx
  419587:	movabs rdx,0x7374000000000000
  419591:	cmp    rcx,rdx
  419594:	jne    41a2b0 <main@@Base+0x13490>
  41959a:	cmp    rax,0x3
  41959e:	jl     41a2b0 <main@@Base+0x13490>
  4195a4:	cmp    BYTE PTR [r12+0xa],0x22
  4195aa:	jne    41a2b0 <main@@Base+0x13490>
  4195b0:	lea    rsi,[r12+0xb]
  4195b5:	mov    rax,r15
  4195b8:	sub    rax,rsi
  4195bb:	cmp    rax,0x2
  4195bf:	jl     419d31 <main@@Base+0x12f11>
  4195c5:	cmp    BYTE PTR [rsi],0x20
  4195c8:	jg     419d3f <main@@Base+0x12f1f>
  4195ce:	jne    419d31 <main@@Base+0x12f11>
  4195d4:	cmp    BYTE PTR [r12+0xc],0x20
  4195da:	jle    419d31 <main@@Base+0x12f11>
  4195e0:	add    r12,0xc
  4195e4:	mov    rsi,r12
  4195e7:	cmp    rsi,r15
  4195ea:	jne    419d48 <main@@Base+0x12f28>
  4195f0:	jmp    419ded <main@@Base+0x12fcd>
  4195f5:	mov    ecx,eax
  4195f7:	and    cl,0xf
  4195fa:	add    cl,0xff
  4195fd:	cmp    cl,0x7
  419600:	ja     41a2b0 <main@@Base+0x13490>
  419606:	movzx  ecx,cl
  419609:	lea    rdx,[rip+0x1a364]        # 433974 <_IO_stdin_used@@Base+0x974>
  419610:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419614:	add    rcx,rdx
  419617:	xor    r8d,r8d
  41961a:	xor    r9d,r9d
  41961d:	xor    edx,edx
  41961f:	xor    esi,esi
  419621:	xor    ebx,ebx
  419623:	xor    ebp,ebp
  419625:	xor    edi,edi
  419627:	jmp    rcx
  419629:	movsx  r8,BYTE PTR [r12+0xf]
  41962f:	movsx  r9,BYTE PTR [r12+0xe]
  419635:	shl    r9,0x8
  419639:	or     r9,r8
  41963c:	movsx  rdx,BYTE PTR [r12+0xd]
  419642:	shl    rdx,0x10
  419646:	or     rdx,r9
  419649:	movsx  rsi,BYTE PTR [r12+0xc]
  41964f:	shl    rsi,0x18
  419653:	or     rsi,rdx
  419656:	movsx  rbx,BYTE PTR [r12+0xb]
  41965c:	shl    rbx,0x20
  419660:	or     rbx,rsi
  419663:	movsx  rbp,BYTE PTR [r12+0xa]
  419669:	shl    rbp,0x28
  41966d:	or     rbp,rbx
  419670:	movsx  rdi,BYTE PTR [r12+0x9]
  419676:	shl    rdi,0x30
  41967a:	or     rdi,rbp
  41967d:	movzx  ecx,BYTE PTR [r13+0x0]
  419682:	shl    rcx,0x38
  419686:	or     rcx,rdi
  419689:	movabs rbx,0x7261637465720000
  419693:	mov    rdx,rcx
  419696:	shr    rdx,0x8
  41969a:	movabs rsi,0x72735f74797065
  4196a4:	cmp    rdx,rsi
  4196a7:	jne    419704 <main@@Base+0x128e4>
  4196a9:	cmp    rax,0x8
  4196ad:	jl     41a2b0 <main@@Base+0x13490>
  4196b3:	cmp    BYTE PTR [r12+0xf],0x22
  4196b9:	jne    41a2b0 <main@@Base+0x13490>
  4196bf:	lea    rsi,[r12+0x10]
  4196c4:	mov    rax,r15
  4196c7:	sub    rax,rsi
  4196ca:	cmp    rax,0x2
  4196ce:	jl     419cb9 <main@@Base+0x12e99>
  4196d4:	cmp    BYTE PTR [rsi],0x20
  4196d7:	jg     419cc7 <main@@Base+0x12ea7>
  4196dd:	jne    419cb9 <main@@Base+0x12e99>
  4196e3:	cmp    BYTE PTR [r12+0x11],0x20
  4196e9:	jle    419cb9 <main@@Base+0x12e99>
  4196ef:	add    r12,0x11
  4196f3:	mov    rsi,r12
  4196f6:	cmp    rsi,r15
  4196f9:	jne    419ccc <main@@Base+0x12eac>
  4196ff:	jmp    419d13 <main@@Base+0x12ef3>
  419704:	movabs rdx,0xffff000000000000
  41970e:	and    rcx,rdx
  419711:	movabs rdx,0x7273000000000000
  41971b:	cmp    rcx,rdx
  41971e:	jne    41a2b0 <main@@Base+0x13490>
  419724:	cmp    rax,0x3
  419728:	jl     41a2b0 <main@@Base+0x13490>
  41972e:	cmp    BYTE PTR [r12+0xa],0x22
  419734:	jne    41a2b0 <main@@Base+0x13490>
  41973a:	lea    rsi,[r12+0xb]
  41973f:	mov    rax,r15
  419742:	sub    rax,rsi
  419745:	cmp    rax,0x2
  419749:	jl     419e29 <main@@Base+0x13009>
  41974f:	cmp    BYTE PTR [rsi],0x20
  419752:	jg     419e37 <main@@Base+0x13017>
  419758:	jne    419e29 <main@@Base+0x13009>
  41975e:	cmp    BYTE PTR [r12+0xc],0x20
  419764:	jle    419e29 <main@@Base+0x13009>
  41976a:	add    r12,0xc
  41976e:	mov    rsi,r12
  419771:	cmp    rsi,r15
  419774:	jne    419e3c <main@@Base+0x1301c>
  41977a:	jmp    419e83 <main@@Base+0x13063>
  41977f:	mov    ecx,eax
  419781:	and    cl,0xf
  419784:	add    cl,0xff
  419787:	cmp    cl,0x7
  41978a:	ja     41a2b0 <main@@Base+0x13490>
  419790:	movzx  ecx,cl
  419793:	lea    rdx,[rip+0x1a19a]        # 433934 <_IO_stdin_used@@Base+0x934>
  41979a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41979e:	add    rcx,rdx
  4197a1:	xor    r8d,r8d
  4197a4:	xor    r9d,r9d
  4197a7:	xor    edx,edx
  4197a9:	xor    esi,esi
  4197ab:	xor    ebx,ebx
  4197ad:	xor    ebp,ebp
  4197af:	xor    edi,edi
  4197b1:	jmp    rcx
  4197b3:	movsx  r8,BYTE PTR [r12+0xf]
  4197b9:	movsx  r9,BYTE PTR [r12+0xe]
  4197bf:	shl    r9,0x8
  4197c3:	or     r9,r8
  4197c6:	movsx  rdx,BYTE PTR [r12+0xd]
  4197cc:	shl    rdx,0x10
  4197d0:	or     rdx,r9
  4197d3:	movsx  rsi,BYTE PTR [r12+0xc]
  4197d9:	shl    rsi,0x18
  4197dd:	or     rsi,rdx
  4197e0:	movsx  rbx,BYTE PTR [r12+0xb]
  4197e6:	shl    rbx,0x20
  4197ea:	or     rbx,rsi
  4197ed:	movsx  rbp,BYTE PTR [r12+0xa]
  4197f3:	shl    rbp,0x28
  4197f7:	or     rbp,rbx
  4197fa:	movsx  rdi,BYTE PTR [r12+0x9]
  419800:	shl    rdi,0x30
  419804:	or     rdi,rbp
  419807:	movzx  ecx,BYTE PTR [r13+0x0]
  41980c:	shl    rcx,0x38
  419810:	or     rcx,rdi
  419813:	movabs rbx,0x7261637465720000
  41981d:	lea    rdx,[rbx+0x5f74]
  419824:	cmp    rcx,rdx
  419827:	jne    419960 <main@@Base+0x12b40>
  41982d:	lea    r13,[r12+0x10]
  419832:	mov    rax,r15
  419835:	sub    rax,r13
  419838:	cmp    rax,0x8
  41983c:	jb     419a34 <main@@Base+0x12c14>
  419842:	movbe  rcx,QWORD PTR [r13+0x0]
  419848:	jmp    419ad2 <main@@Base+0x12cb2>
  41984d:	mov    ecx,eax
  41984f:	and    cl,0xf
  419852:	add    cl,0xff
  419855:	cmp    cl,0x7
  419858:	ja     41a2b0 <main@@Base+0x13490>
  41985e:	movzx  ecx,cl
  419861:	lea    rdx,[rip+0x1a0ac]        # 433914 <_IO_stdin_used@@Base+0x914>
  419868:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41986c:	add    rcx,rdx
  41986f:	xor    r8d,r8d
  419872:	xor    r9d,r9d
  419875:	xor    edx,edx
  419877:	xor    esi,esi
  419879:	xor    ebx,ebx
  41987b:	xor    ebp,ebp
  41987d:	xor    edi,edi
  41987f:	jmp    rcx
  419881:	movsx  r8,BYTE PTR [r12+0xf]
  419887:	movsx  r9,BYTE PTR [r12+0xe]
  41988d:	shl    r9,0x8
  419891:	or     r9,r8
  419894:	movsx  rdx,BYTE PTR [r12+0xd]
  41989a:	shl    rdx,0x10
  41989e:	or     rdx,r9
  4198a1:	movsx  rsi,BYTE PTR [r12+0xc]
  4198a7:	shl    rsi,0x18
  4198ab:	or     rsi,rdx
  4198ae:	movsx  rbx,BYTE PTR [r12+0xb]
  4198b4:	shl    rbx,0x20
  4198b8:	or     rbx,rsi
  4198bb:	movsx  rbp,BYTE PTR [r12+0xa]
  4198c1:	shl    rbp,0x28
  4198c5:	or     rbp,rbx
  4198c8:	movsx  rdi,BYTE PTR [r12+0x9]
  4198ce:	shl    rdi,0x30
  4198d2:	or     rdi,rbp
  4198d5:	movzx  ecx,BYTE PTR [r13+0x0]
  4198da:	shl    rcx,0x38
  4198de:	or     rcx,rdi
  4198e1:	movabs rbx,0x7261637465720000
  4198eb:	mov    rdx,rcx
  4198ee:	shr    rdx,0x10
  4198f2:	movabs rsi,0x6b5f74797065
  4198fc:	cmp    rdx,rsi
  4198ff:	jne    4199cb <main@@Base+0x12bab>
  419905:	cmp    rax,0x7
  419909:	jl     41a2b0 <main@@Base+0x13490>
  41990f:	cmp    BYTE PTR [r12+0xe],0x22
  419915:	jne    41a2b0 <main@@Base+0x13490>
  41991b:	lea    rsi,[r12+0xf]
  419920:	mov    rax,r15
  419923:	sub    rax,rsi
  419926:	cmp    rax,0x2
  41992a:	jl     419d93 <main@@Base+0x12f73>
  419930:	cmp    BYTE PTR [rsi],0x20
  419933:	jg     419da1 <main@@Base+0x12f81>
  419939:	jne    419d93 <main@@Base+0x12f73>
  41993f:	cmp    BYTE PTR [r12+0x10],0x20
  419945:	jle    419d93 <main@@Base+0x12f73>
  41994b:	add    r12,0x10
  41994f:	mov    rsi,r12
  419952:	cmp    rsi,r15
  419955:	jne    419da6 <main@@Base+0x12f86>
  41995b:	jmp    419e0b <main@@Base+0x12feb>
  419960:	and    rcx,0xffffffffffff0000
  419967:	cmp    rcx,rbx
  41996a:	jne    41a2b0 <main@@Base+0x13490>
  419970:	cmp    rax,0x7
  419974:	jl     41a2b0 <main@@Base+0x13490>
  41997a:	cmp    BYTE PTR [r12+0xe],0x22
  419980:	jne    41a2b0 <main@@Base+0x13490>
  419986:	lea    rsi,[r12+0xf]
  41998b:	mov    rax,r15
  41998e:	sub    rax,rsi
  419991:	cmp    rax,0x2
  419995:	jl     419f73 <main@@Base+0x13153>
  41999b:	cmp    BYTE PTR [rsi],0x20
  41999e:	jg     419f81 <main@@Base+0x13161>
  4199a4:	jne    419f73 <main@@Base+0x13153>
  4199aa:	cmp    BYTE PTR [r12+0x10],0x20
  4199b0:	jle    419f73 <main@@Base+0x13153>
  4199b6:	add    r12,0x10
  4199ba:	mov    rsi,r12
  4199bd:	cmp    rsi,r15
  4199c0:	jne    419f8a <main@@Base+0x1316a>
  4199c6:	jmp    41a02f <main@@Base+0x1320f>
  4199cb:	shr    rcx,0x38
  4199cf:	cmp    rcx,0x6b
  4199d3:	jne    41a2b0 <main@@Base+0x13490>
  4199d9:	cmp    rax,0x2
  4199dd:	jl     41a2b0 <main@@Base+0x13490>
  4199e3:	cmp    BYTE PTR [r12+0x9],0x22
  4199e9:	jne    41a2b0 <main@@Base+0x13490>
  4199ef:	lea    rsi,[r12+0xa]
  4199f4:	mov    rax,r15
  4199f7:	sub    rax,rsi
  4199fa:	cmp    rax,0x2
  4199fe:	jl     419fd5 <main@@Base+0x131b5>
  419a04:	cmp    BYTE PTR [rsi],0x20
  419a07:	jg     419fe3 <main@@Base+0x131c3>
  419a0d:	jne    419fd5 <main@@Base+0x131b5>
  419a13:	cmp    BYTE PTR [r12+0xb],0x20
  419a19:	jle    419fd5 <main@@Base+0x131b5>
  419a1f:	add    r12,0xb
  419a23:	mov    rsi,r12
  419a26:	cmp    rsi,r15
  419a29:	jne    419fe8 <main@@Base+0x131c8>
  419a2f:	jmp    41a04d <main@@Base+0x1322d>
  419a34:	mov    ecx,eax
  419a36:	and    cl,0xf
  419a39:	add    cl,0xff
  419a3c:	cmp    cl,0x7
  419a3f:	ja     41a2b0 <main@@Base+0x13490>
  419a45:	movzx  ecx,cl
  419a48:	lea    rdx,[rip+0x19f05]        # 433954 <_IO_stdin_used@@Base+0x954>
  419a4f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419a53:	add    rcx,rdx
  419a56:	xor    r8d,r8d
  419a59:	xor    r9d,r9d
  419a5c:	xor    edx,edx
  419a5e:	xor    esi,esi
  419a60:	xor    ebx,ebx
  419a62:	xor    ebp,ebp
  419a64:	xor    edi,edi
  419a66:	jmp    rcx
  419a68:	movsx  r8,BYTE PTR [r12+0x17]
  419a6e:	movsx  r9,BYTE PTR [r12+0x16]
  419a74:	shl    r9,0x8
  419a78:	or     r9,r8
  419a7b:	movsx  rdx,BYTE PTR [r12+0x15]
  419a81:	shl    rdx,0x10
  419a85:	or     rdx,r9
  419a88:	movsx  rsi,BYTE PTR [r12+0x14]
  419a8e:	shl    rsi,0x18
  419a92:	or     rsi,rdx
  419a95:	movsx  rbx,BYTE PTR [r12+0x13]
  419a9b:	shl    rbx,0x20
  419a9f:	or     rbx,rsi
  419aa2:	movsx  rbp,BYTE PTR [r12+0x12]
  419aa8:	shl    rbp,0x28
  419aac:	or     rbp,rbx
  419aaf:	movsx  rdi,BYTE PTR [r12+0x11]
  419ab5:	shl    rdi,0x30
  419ab9:	or     rdi,rbp
  419abc:	movzx  ecx,BYTE PTR [r13+0x0]
  419ac1:	shl    rcx,0x38
  419ac5:	or     rcx,rdi
  419ac8:	movabs rbx,0x7261637465720000
  419ad2:	shr    rcx,0x28
  419ad6:	cmp    rcx,0x797065
  419add:	jne    41a2b0 <main@@Base+0x13490>
  419ae3:	cmp    rax,0x4
  419ae7:	jl     41a2b0 <main@@Base+0x13490>
  419aed:	cmp    BYTE PTR [r12+0x13],0x22
  419af3:	jne    41a2b0 <main@@Base+0x13490>
  419af9:	lea    rsi,[r12+0x14]
  419afe:	mov    rax,r15
  419b01:	sub    rax,rsi
  419b04:	cmp    rax,0x2
  419b08:	jl     41a06b <main@@Base+0x1324b>
  419b0e:	cmp    BYTE PTR [rsi],0x20
  419b11:	jg     41a079 <main@@Base+0x13259>
  419b17:	jne    41a06b <main@@Base+0x1324b>
  419b1d:	cmp    BYTE PTR [r12+0x15],0x20
  419b23:	jle    41a06b <main@@Base+0x1324b>
  419b29:	add    r12,0x15
  419b2d:	mov    rsi,r12
  419b30:	cmp    rsi,r15
  419b33:	jne    41a07e <main@@Base+0x1325e>
  419b39:	jmp    41a0c5 <main@@Base+0x132a5>
  419b3e:	mov    rdi,r14
  419b41:	mov    rdx,r15
  419b44:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419b49:	mov    rsi,rax
  419b4c:	cmp    rsi,r15
  419b4f:	je     419b95 <main@@Base+0x12d75>
  419b51:	cmp    BYTE PTR [rsi],0x3a
  419b54:	jne    419b95 <main@@Base+0x12d75>
  419b56:	lea    rax,[rsi+0x1]
  419b5a:	mov    rcx,r15
  419b5d:	sub    rcx,rax
  419b60:	cmp    rcx,0x2
  419b64:	jl     419ea1 <main@@Base+0x13081>
  419b6a:	cmp    BYTE PTR [rax],0x20
  419b6d:	jg     419eaf <main@@Base+0x1308f>
  419b73:	jne    419ea1 <main@@Base+0x13081>
  419b79:	cmp    BYTE PTR [rsi+0x2],0x20
  419b7d:	jle    419ea1 <main@@Base+0x13081>
  419b83:	add    rsi,0x2
  419b87:	mov    rax,rsi
  419b8a:	cmp    r12,rax
  419b8d:	jne    419eb8 <main@@Base+0x13098>
  419b93:	jmp    419bae <main@@Base+0x12d8e>
  419b95:	mov    ecx,0x4
  419b9a:	mov    rdi,r14
  419b9d:	mov    rdx,r15
  419ba0:	call   423620 <flatcc_json_parser_set_error@@Base>
  419ba5:	cmp    r12,rax
  419ba8:	jne    419eb8 <main@@Base+0x13098>
  419bae:	mov    rdi,r14
  419bb1:	mov    rsi,r12
  419bb4:	mov    rdx,r15
  419bb7:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  419bbc:	jmp    41a2c3 <main@@Base+0x134a3>
  419bc1:	mov    rdi,r14
  419bc4:	mov    rdx,r15
  419bc7:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419bcc:	mov    rsi,rax
  419bcf:	cmp    rsi,r15
  419bd2:	je     419c7d <main@@Base+0x12e5d>
  419bd8:	cmp    BYTE PTR [rsi],0x3a
  419bdb:	jne    419c7d <main@@Base+0x12e5d>
  419be1:	lea    rax,[rsi+0x1]
  419be5:	mov    rcx,r15
  419be8:	sub    rcx,rax
  419beb:	cmp    rcx,0x2
  419bef:	jl     419eeb <main@@Base+0x130cb>
  419bf5:	cmp    BYTE PTR [rax],0x20
  419bf8:	jg     419ef9 <main@@Base+0x130d9>
  419bfe:	jne    419eeb <main@@Base+0x130cb>
  419c04:	cmp    BYTE PTR [rsi+0x2],0x20
  419c08:	jle    419eeb <main@@Base+0x130cb>
  419c0e:	add    rsi,0x2
  419c12:	mov    rax,rsi
  419c15:	cmp    r13,rax
  419c18:	jne    419f02 <main@@Base+0x130e2>
  419c1e:	jmp    41a2b0 <main@@Base+0x13490>
  419c23:	mov    rdi,r14
  419c26:	mov    rdx,r15
  419c29:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419c2e:	mov    rsi,rax
  419c31:	cmp    rsi,r15
  419c34:	je     419c9b <main@@Base+0x12e7b>
  419c36:	cmp    BYTE PTR [rsi],0x3a
  419c39:	jne    419c9b <main@@Base+0x12e7b>
  419c3b:	lea    rax,[rsi+0x1]
  419c3f:	mov    rcx,r15
  419c42:	sub    rcx,rax
  419c45:	cmp    rcx,0x2
  419c49:	jl     419f2f <main@@Base+0x1310f>
  419c4f:	cmp    BYTE PTR [rax],0x20
  419c52:	jg     419f3d <main@@Base+0x1311d>
  419c58:	jne    419f2f <main@@Base+0x1310f>
  419c5e:	cmp    BYTE PTR [rsi+0x2],0x20
  419c62:	jle    419f2f <main@@Base+0x1310f>
  419c68:	add    rsi,0x2
  419c6c:	mov    rax,rsi
  419c6f:	cmp    r13,rax
  419c72:	jne    419f46 <main@@Base+0x13126>
  419c78:	jmp    41a2b0 <main@@Base+0x13490>
  419c7d:	mov    ecx,0x4
  419c82:	mov    rdi,r14
  419c85:	mov    rdx,r15
  419c88:	call   423620 <flatcc_json_parser_set_error@@Base>
  419c8d:	cmp    r13,rax
  419c90:	jne    419f02 <main@@Base+0x130e2>
  419c96:	jmp    41a2b0 <main@@Base+0x13490>
  419c9b:	mov    ecx,0x4
  419ca0:	mov    rdi,r14
  419ca3:	mov    rdx,r15
  419ca6:	call   423620 <flatcc_json_parser_set_error@@Base>
  419cab:	cmp    r13,rax
  419cae:	jne    419f46 <main@@Base+0x13126>
  419cb4:	jmp    41a2b0 <main@@Base+0x13490>
  419cb9:	mov    rdi,r14
  419cbc:	mov    rdx,r15
  419cbf:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419cc4:	mov    rsi,rax
  419cc7:	cmp    rsi,r15
  419cca:	je     419d13 <main@@Base+0x12ef3>
  419ccc:	cmp    BYTE PTR [rsi],0x3a
  419ccf:	jne    419d13 <main@@Base+0x12ef3>
  419cd1:	lea    rax,[rsi+0x1]
  419cd5:	mov    rcx,r15
  419cd8:	sub    rcx,rax
  419cdb:	cmp    rcx,0x2
  419cdf:	jl     41a0e3 <main@@Base+0x132c3>
  419ce5:	cmp    BYTE PTR [rax],0x20
  419ce8:	jg     41a0f1 <main@@Base+0x132d1>
  419cee:	jne    41a0e3 <main@@Base+0x132c3>
  419cf4:	cmp    BYTE PTR [rsi+0x2],0x20
  419cf8:	jle    41a0e3 <main@@Base+0x132c3>
  419cfe:	add    rsi,0x2
  419d02:	mov    rax,rsi
  419d05:	cmp    r13,rax
  419d08:	jne    41a0fa <main@@Base+0x132da>
  419d0e:	jmp    41a2b0 <main@@Base+0x13490>
  419d13:	mov    ecx,0x4
  419d18:	mov    rdi,r14
  419d1b:	mov    rdx,r15
  419d1e:	call   423620 <flatcc_json_parser_set_error@@Base>
  419d23:	cmp    r13,rax
  419d26:	jne    41a0fa <main@@Base+0x132da>
  419d2c:	jmp    41a2b0 <main@@Base+0x13490>
  419d31:	mov    rdi,r14
  419d34:	mov    rdx,r15
  419d37:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419d3c:	mov    rsi,rax
  419d3f:	cmp    rsi,r15
  419d42:	je     419ded <main@@Base+0x12fcd>
  419d48:	cmp    BYTE PTR [rsi],0x3a
  419d4b:	jne    419ded <main@@Base+0x12fcd>
  419d51:	lea    rax,[rsi+0x1]
  419d55:	mov    rcx,r15
  419d58:	sub    rcx,rax
  419d5b:	cmp    rcx,0x2
  419d5f:	jl     41a13d <main@@Base+0x1331d>
  419d65:	cmp    BYTE PTR [rax],0x20
  419d68:	jg     41a14b <main@@Base+0x1332b>
  419d6e:	jne    41a13d <main@@Base+0x1331d>
  419d74:	cmp    BYTE PTR [rsi+0x2],0x20
  419d78:	jle    41a13d <main@@Base+0x1331d>
  419d7e:	add    rsi,0x2
  419d82:	mov    rax,rsi
  419d85:	cmp    r13,rax
  419d88:	jne    41a154 <main@@Base+0x13334>
  419d8e:	jmp    41a2b0 <main@@Base+0x13490>
  419d93:	mov    rdi,r14
  419d96:	mov    rdx,r15
  419d99:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419d9e:	mov    rsi,rax
  419da1:	cmp    rsi,r15
  419da4:	je     419e0b <main@@Base+0x12feb>
  419da6:	cmp    BYTE PTR [rsi],0x3a
  419da9:	jne    419e0b <main@@Base+0x12feb>
  419dab:	lea    rax,[rsi+0x1]
  419daf:	mov    rcx,r15
  419db2:	sub    rcx,rax
  419db5:	cmp    rcx,0x2
  419db9:	jl     41a16d <main@@Base+0x1334d>
  419dbf:	cmp    BYTE PTR [rax],0x20
  419dc2:	jg     41a17b <main@@Base+0x1335b>
  419dc8:	jne    41a16d <main@@Base+0x1334d>
  419dce:	cmp    BYTE PTR [rsi+0x2],0x20
  419dd2:	jle    41a16d <main@@Base+0x1334d>
  419dd8:	add    rsi,0x2
  419ddc:	mov    rax,rsi
  419ddf:	cmp    r13,rax
  419de2:	jne    41a184 <main@@Base+0x13364>
  419de8:	jmp    41a2b0 <main@@Base+0x13490>
  419ded:	mov    ecx,0x4
  419df2:	mov    rdi,r14
  419df5:	mov    rdx,r15
  419df8:	call   423620 <flatcc_json_parser_set_error@@Base>
  419dfd:	cmp    r13,rax
  419e00:	jne    41a154 <main@@Base+0x13334>
  419e06:	jmp    41a2b0 <main@@Base+0x13490>
  419e0b:	mov    ecx,0x4
  419e10:	mov    rdi,r14
  419e13:	mov    rdx,r15
  419e16:	call   423620 <flatcc_json_parser_set_error@@Base>
  419e1b:	cmp    r13,rax
  419e1e:	jne    41a184 <main@@Base+0x13364>
  419e24:	jmp    41a2b0 <main@@Base+0x13490>
  419e29:	mov    rdi,r14
  419e2c:	mov    rdx,r15
  419e2f:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419e34:	mov    rsi,rax
  419e37:	cmp    rsi,r15
  419e3a:	je     419e83 <main@@Base+0x13063>
  419e3c:	cmp    BYTE PTR [rsi],0x3a
  419e3f:	jne    419e83 <main@@Base+0x13063>
  419e41:	lea    rax,[rsi+0x1]
  419e45:	mov    rcx,r15
  419e48:	sub    rcx,rax
  419e4b:	cmp    rcx,0x2
  419e4f:	jl     41a1b1 <main@@Base+0x13391>
  419e55:	cmp    BYTE PTR [rax],0x20
  419e58:	jg     41a1bf <main@@Base+0x1339f>
  419e5e:	jne    41a1b1 <main@@Base+0x13391>
  419e64:	cmp    BYTE PTR [rsi+0x2],0x20
  419e68:	jle    41a1b1 <main@@Base+0x13391>
  419e6e:	add    rsi,0x2
  419e72:	mov    rax,rsi
  419e75:	cmp    r13,rax
  419e78:	jne    41a1c8 <main@@Base+0x133a8>
  419e7e:	jmp    41a2b0 <main@@Base+0x13490>
  419e83:	mov    ecx,0x4
  419e88:	mov    rdi,r14
  419e8b:	mov    rdx,r15
  419e8e:	call   423620 <flatcc_json_parser_set_error@@Base>
  419e93:	cmp    r13,rax
  419e96:	jne    41a1c8 <main@@Base+0x133a8>
  419e9c:	jmp    41a2b0 <main@@Base+0x13490>
  419ea1:	mov    rdi,r14
  419ea4:	mov    rsi,rax
  419ea7:	mov    rdx,r15
  419eaa:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419eaf:	cmp    r12,rax
  419eb2:	je     419bae <main@@Base+0x12d8e>
  419eb8:	mov    r9,QWORD PTR [rsp+0x10]
  419ebd:	sub    rsp,0x8
  419ec1:	mov    ecx,0x3
  419ec6:	mov    r8d,0x7
  419ecc:	mov    rdi,r14
  419ecf:	mov    rsi,rax
  419ed2:	mov    rdx,r15
  419ed5:	lea    rax,[rip+0x6d4]        # 41a5b0 <main@@Base+0x13790>
  419edc:	push   rax
  419edd:	call   4259d0 <flatcc_json_parser_union@@Base>
  419ee2:	add    rsp,0x10
  419ee6:	jmp    41a2c3 <main@@Base+0x134a3>
  419eeb:	mov    rdi,r14
  419eee:	mov    rsi,rax
  419ef1:	mov    rdx,r15
  419ef4:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419ef9:	cmp    r13,rax
  419efc:	je     41a2b0 <main@@Base+0x13490>
  419f02:	mov    r9,QWORD PTR [rsp+0x10]
  419f07:	mov    ecx,0x1
  419f0c:	mov    r8d,0x3
  419f12:	mov    rdi,r14
  419f15:	mov    rsi,rax
  419f18:	mov    rdx,r15
  419f1b:	lea    rax,[rip+0x68e]        # 41a5b0 <main@@Base+0x13790>
  419f22:	push   rax
  419f23:	lea    rax,[rip+0x27716]        # 441640 <__data_start@@Base+0x590>
  419f2a:	jmp    41a2a2 <main@@Base+0x13482>
  419f2f:	mov    rdi,r14
  419f32:	mov    rsi,rax
  419f35:	mov    rdx,r15
  419f38:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419f3d:	cmp    r13,rax
  419f40:	je     41a2b0 <main@@Base+0x13490>
  419f46:	mov    r9,QWORD PTR [rsp+0x10]
  419f4b:	mov    ecx,0x3
  419f50:	mov    r8d,0x7
  419f56:	mov    rdi,r14
  419f59:	mov    rsi,rax
  419f5c:	mov    rdx,r15
  419f5f:	lea    rax,[rip+0x64a]        # 41a5b0 <main@@Base+0x13790>
  419f66:	push   rax
  419f67:	lea    rax,[rip+0x276f2]        # 441660 <__data_start@@Base+0x5b0>
  419f6e:	jmp    41a2a2 <main@@Base+0x13482>
  419f73:	mov    rdi,r14
  419f76:	mov    rdx,r15
  419f79:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419f7e:	mov    rsi,rax
  419f81:	cmp    rsi,r15
  419f84:	je     41a02f <main@@Base+0x1320f>
  419f8a:	cmp    BYTE PTR [rsi],0x3a
  419f8d:	jne    41a02f <main@@Base+0x1320f>
  419f93:	lea    rax,[rsi+0x1]
  419f97:	mov    rcx,r15
  419f9a:	sub    rcx,rax
  419f9d:	cmp    rcx,0x2
  419fa1:	jl     41a1f7 <main@@Base+0x133d7>
  419fa7:	cmp    BYTE PTR [rax],0x20
  419faa:	jg     41a205 <main@@Base+0x133e5>
  419fb0:	jne    41a1f7 <main@@Base+0x133d7>
  419fb6:	cmp    BYTE PTR [rsi+0x2],0x20
  419fba:	jle    41a1f7 <main@@Base+0x133d7>
  419fc0:	add    rsi,0x2
  419fc4:	mov    rax,rsi
  419fc7:	cmp    r13,rax
  419fca:	jne    41a20e <main@@Base+0x133ee>
  419fd0:	jmp    41a2b0 <main@@Base+0x13490>
  419fd5:	mov    rdi,r14
  419fd8:	mov    rdx,r15
  419fdb:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  419fe0:	mov    rsi,rax
  419fe3:	cmp    rsi,r15
  419fe6:	je     41a04d <main@@Base+0x1322d>
  419fe8:	cmp    BYTE PTR [rsi],0x3a
  419feb:	jne    41a04d <main@@Base+0x1322d>
  419fed:	lea    rax,[rsi+0x1]
  419ff1:	mov    rcx,r15
  419ff4:	sub    rcx,rax
  419ff7:	cmp    rcx,0x2
  419ffb:	jl     41a224 <main@@Base+0x13404>
  41a001:	cmp    BYTE PTR [rax],0x20
  41a004:	jg     41a232 <main@@Base+0x13412>
  41a00a:	jne    41a224 <main@@Base+0x13404>
  41a010:	cmp    BYTE PTR [rsi+0x2],0x20
  41a014:	jle    41a224 <main@@Base+0x13404>
  41a01a:	add    rsi,0x2
  41a01e:	mov    rax,rsi
  41a021:	cmp    r13,rax
  41a024:	jne    41a23b <main@@Base+0x1341b>
  41a02a:	jmp    41a2b0 <main@@Base+0x13490>
  41a02f:	mov    ecx,0x4
  41a034:	mov    rdi,r14
  41a037:	mov    rdx,r15
  41a03a:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a03f:	cmp    r13,rax
  41a042:	jne    41a20e <main@@Base+0x133ee>
  41a048:	jmp    41a2b0 <main@@Base+0x13490>
  41a04d:	mov    ecx,0x4
  41a052:	mov    rdi,r14
  41a055:	mov    rdx,r15
  41a058:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a05d:	cmp    r13,rax
  41a060:	jne    41a23b <main@@Base+0x1341b>
  41a066:	jmp    41a2b0 <main@@Base+0x13490>
  41a06b:	mov    rdi,r14
  41a06e:	mov    rdx,r15
  41a071:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a076:	mov    rsi,rax
  41a079:	cmp    rsi,r15
  41a07c:	je     41a0c5 <main@@Base+0x132a5>
  41a07e:	cmp    BYTE PTR [rsi],0x3a
  41a081:	jne    41a0c5 <main@@Base+0x132a5>
  41a083:	lea    rax,[rsi+0x1]
  41a087:	mov    rcx,r15
  41a08a:	sub    rcx,rax
  41a08d:	cmp    rcx,0x2
  41a091:	jl     41a267 <main@@Base+0x13447>
  41a097:	cmp    BYTE PTR [rax],0x20
  41a09a:	jg     41a275 <main@@Base+0x13455>
  41a0a0:	jne    41a267 <main@@Base+0x13447>
  41a0a6:	cmp    BYTE PTR [rsi+0x2],0x20
  41a0aa:	jle    41a267 <main@@Base+0x13447>
  41a0b0:	add    rsi,0x2
  41a0b4:	mov    rax,rsi
  41a0b7:	cmp    r13,rax
  41a0ba:	jne    41a27a <main@@Base+0x1345a>
  41a0c0:	jmp    41a2b0 <main@@Base+0x13490>
  41a0c5:	mov    ecx,0x4
  41a0ca:	mov    rdi,r14
  41a0cd:	mov    rdx,r15
  41a0d0:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a0d5:	cmp    r13,rax
  41a0d8:	jne    41a27a <main@@Base+0x1345a>
  41a0de:	jmp    41a2b0 <main@@Base+0x13490>
  41a0e3:	mov    rdi,r14
  41a0e6:	mov    rsi,rax
  41a0e9:	mov    rdx,r15
  41a0ec:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a0f1:	cmp    r13,rax
  41a0f4:	je     41a2b0 <main@@Base+0x13490>
  41a0fa:	mov    r9,QWORD PTR [rsp+0x10]
  41a0ff:	sub    rsp,0x8
  41a103:	mov    ecx,0x4
  41a108:	mov    r8d,0x9
  41a10e:	mov    rdi,r14
  41a111:	mov    rsi,rax
  41a114:	mov    rdx,r15
  41a117:	lea    rax,[rip+0x11c2]        # 41b2e0 <main@@Base+0x144c0>
  41a11e:	push   rax
  41a11f:	lea    rax,[rip+0x48a]        # 41a5b0 <main@@Base+0x13790>
  41a126:	push   rax
  41a127:	lea    rax,[rip+0x27552]        # 441680 <__data_start@@Base+0x5d0>
  41a12e:	push   rax
  41a12f:	call   426400 <flatcc_json_parser_union_type_vector@@Base>
  41a134:	add    rsp,0x20
  41a138:	jmp    41a2be <main@@Base+0x1349e>
  41a13d:	mov    rdi,r14
  41a140:	mov    rsi,rax
  41a143:	mov    rdx,r15
  41a146:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a14b:	cmp    r13,rax
  41a14e:	je     41a2b0 <main@@Base+0x13490>
  41a154:	mov    r9,QWORD PTR [rsp+0x10]
  41a159:	sub    rsp,0x8
  41a15d:	mov    ecx,0x1
  41a162:	mov    r8d,0x3
  41a168:	jmp    41a24f <main@@Base+0x1342f>
  41a16d:	mov    rdi,r14
  41a170:	mov    rsi,rax
  41a173:	mov    rdx,r15
  41a176:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a17b:	cmp    r13,rax
  41a17e:	je     41a2b0 <main@@Base+0x13490>
  41a184:	mov    r9,QWORD PTR [rsp+0x10]
  41a189:	mov    ecx,0x2
  41a18e:	mov    r8d,0x5
  41a194:	mov    rdi,r14
  41a197:	mov    rsi,rax
  41a19a:	mov    rdx,r15
  41a19d:	lea    rax,[rip+0x40c]        # 41a5b0 <main@@Base+0x13790>
  41a1a4:	push   rax
  41a1a5:	lea    rax,[rip+0x27514]        # 4416c0 <__data_start@@Base+0x610>
  41a1ac:	jmp    41a2a2 <main@@Base+0x13482>
  41a1b1:	mov    rdi,r14
  41a1b4:	mov    rsi,rax
  41a1b7:	mov    rdx,r15
  41a1ba:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a1bf:	cmp    r13,rax
  41a1c2:	je     41a2b0 <main@@Base+0x13490>
  41a1c8:	mov    r9,QWORD PTR [rsp+0x10]
  41a1cd:	sub    rsp,0x8
  41a1d1:	mov    ecx,0x4
  41a1d6:	mov    r8d,0x9
  41a1dc:	mov    rdi,r14
  41a1df:	mov    rsi,rax
  41a1e2:	mov    rdx,r15
  41a1e5:	lea    rax,[rip+0x3c4]        # 41a5b0 <main@@Base+0x13790>
  41a1ec:	push   rax
  41a1ed:	call   425f50 <flatcc_json_parser_union_vector@@Base>
  41a1f2:	jmp    41a2a8 <main@@Base+0x13488>
  41a1f7:	mov    rdi,r14
  41a1fa:	mov    rsi,rax
  41a1fd:	mov    rdx,r15
  41a200:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a205:	cmp    r13,rax
  41a208:	je     41a2b0 <main@@Base+0x13490>
  41a20e:	mov    r9,QWORD PTR [rsp+0x10]
  41a213:	sub    rsp,0x8
  41a217:	mov    ecx,0x0
  41a21c:	mov    r8d,0x1
  41a222:	jmp    41a24f <main@@Base+0x1342f>
  41a224:	mov    rdi,r14
  41a227:	mov    rsi,rax
  41a22a:	mov    rdx,r15
  41a22d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a232:	cmp    r13,rax
  41a235:	je     41a2b0 <main@@Base+0x13490>
  41a23b:	mov    r9,QWORD PTR [rsp+0x10]
  41a240:	sub    rsp,0x8
  41a244:	mov    ecx,0x2
  41a249:	mov    r8d,0x5
  41a24f:	mov    rdi,r14
  41a252:	mov    rsi,rax
  41a255:	mov    rdx,r15
  41a258:	lea    rax,[rip+0x351]        # 41a5b0 <main@@Base+0x13790>
  41a25f:	push   rax
  41a260:	call   4259d0 <flatcc_json_parser_union@@Base>
  41a265:	jmp    41a2a8 <main@@Base+0x13488>
  41a267:	mov    rdi,r14
  41a26a:	mov    rsi,rax
  41a26d:	mov    rdx,r15
  41a270:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a275:	cmp    r13,rax
  41a278:	je     41a2b0 <main@@Base+0x13490>
  41a27a:	mov    r9,QWORD PTR [rsp+0x10]
  41a27f:	mov    ecx,0x0
  41a284:	mov    r8d,0x1
  41a28a:	mov    rdi,r14
  41a28d:	mov    rsi,rax
  41a290:	mov    rdx,r15
  41a293:	lea    rax,[rip+0x316]        # 41a5b0 <main@@Base+0x13790>
  41a29a:	push   rax
  41a29b:	lea    rax,[rip+0x273fe]        # 4416a0 <__data_start@@Base+0x5f0>
  41a2a2:	push   rax
  41a2a3:	call   425ae0 <flatcc_json_parser_union_type@@Base>
  41a2a8:	add    rsp,0x10
  41a2ac:	jmp    41a2be <main@@Base+0x1349e>
  41a2ae:	xchg   ax,ax
  41a2b0:	mov    rdi,r14
  41a2b3:	mov    rsi,r13
  41a2b6:	mov    rdx,r15
  41a2b9:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41a2be:	mov    r13,QWORD PTR [rsp+0x8]
  41a2c3:	mov    rcx,r15
  41a2c6:	sub    rcx,rax
  41a2c9:	cmp    rcx,0x2
  41a2cd:	jl     41a2f0 <main@@Base+0x134d0>
  41a2cf:	cmp    BYTE PTR [rax],0x20
  41a2d2:	jg     41a2fe <main@@Base+0x134de>
  41a2d4:	jne    41a2f0 <main@@Base+0x134d0>
  41a2d6:	cmp    BYTE PTR [rax+0x1],0x20
  41a2da:	jle    41a2f0 <main@@Base+0x134d0>
  41a2dc:	add    rax,0x1
  41a2e0:	cmp    rax,r15
  41a2e3:	jne    41a307 <main@@Base+0x134e7>
  41a2e5:	jmp    41a398 <main@@Base+0x13578>
  41a2ea:	nop    WORD PTR [rax+rax*1+0x0]
  41a2f0:	mov    rdi,r14
  41a2f3:	mov    rsi,rax
  41a2f6:	mov    rdx,r15
  41a2f9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a2fe:	cmp    rax,r15
  41a301:	je     41a398 <main@@Base+0x13578>
  41a307:	movzx  ecx,BYTE PTR [rax]
  41a30a:	cmp    cl,0x2c
  41a30d:	jne    41a3ab <main@@Base+0x1358b>
  41a313:	lea    rsi,[rax+0x1]
  41a317:	mov    rcx,r15
  41a31a:	sub    rcx,rsi
  41a31d:	cmp    rcx,0x2
  41a321:	jl     41a340 <main@@Base+0x13520>
  41a323:	cmp    BYTE PTR [rsi],0x20
  41a326:	jg     41a34e <main@@Base+0x1352e>
  41a328:	jne    41a340 <main@@Base+0x13520>
  41a32a:	cmp    BYTE PTR [rax+0x2],0x20
  41a32e:	jle    41a340 <main@@Base+0x13520>
  41a330:	add    rax,0x2
  41a334:	jmp    41a34b <main@@Base+0x1352b>
  41a336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a340:	mov    rdi,r14
  41a343:	mov    rdx,r15
  41a346:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a34b:	mov    rsi,rax
  41a34e:	cmp    rsi,r15
  41a351:	je     41a3f8 <main@@Base+0x135d8>
  41a357:	cmp    BYTE PTR [rsi],0x7d
  41a35a:	jne    4190e0 <main@@Base+0x122c0>
  41a360:	lea    rbx,[rsi+0x1]
  41a364:	mov    rax,r15
  41a367:	sub    rax,rbx
  41a36a:	cmp    rax,0x2
  41a36e:	jl     41a3d7 <main@@Base+0x135b7>
  41a370:	cmp    BYTE PTR [rbx],0x20
  41a373:	jg     41906c <main@@Base+0x1224c>
  41a379:	jne    41a3d7 <main@@Base+0x135b7>
  41a37b:	cmp    BYTE PTR [rsi+0x2],0x20
  41a37f:	jle    41a3d7 <main@@Base+0x135b7>
  41a381:	add    rsi,0x2
  41a385:	mov    rbx,rsi
  41a388:	cmp    DWORD PTR [r14+0x1c],0x0
  41a38d:	jne    418fe1 <main@@Base+0x121c1>
  41a393:	jmp    419077 <main@@Base+0x12257>
  41a398:	mov    rbx,r15
  41a39b:	cmp    DWORD PTR [r14+0x1c],0x0
  41a3a0:	jne    418fe1 <main@@Base+0x121c1>
  41a3a6:	jmp    419077 <main@@Base+0x12257>
  41a3ab:	cmp    cl,0x7d
  41a3ae:	jne    41a408 <main@@Base+0x135e8>
  41a3b0:	lea    rbx,[rax+0x1]
  41a3b4:	mov    rcx,r15
  41a3b7:	sub    rcx,rbx
  41a3ba:	cmp    rcx,0x2
  41a3be:	jl     41a3d7 <main@@Base+0x135b7>
  41a3c0:	cmp    BYTE PTR [rbx],0x20
  41a3c3:	jg     41906c <main@@Base+0x1224c>
  41a3c9:	jne    41a3d7 <main@@Base+0x135b7>
  41a3cb:	cmp    BYTE PTR [rax+0x2],0x20
  41a3cf:	jle    41a3d7 <main@@Base+0x135b7>
  41a3d1:	add    rax,0x2
  41a3d5:	jmp    41a3e5 <main@@Base+0x135c5>
  41a3d7:	mov    rdi,r14
  41a3da:	mov    rsi,rbx
  41a3dd:	mov    rdx,r15
  41a3e0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a3e5:	mov    rbx,rax
  41a3e8:	cmp    DWORD PTR [r14+0x1c],0x0
  41a3ed:	jne    418fe1 <main@@Base+0x121c1>
  41a3f3:	jmp    419077 <main@@Base+0x12257>
  41a3f8:	mov    ecx,0xa
  41a3fd:	mov    rdi,r14
  41a400:	mov    rsi,r15
  41a403:	jmp    419061 <main@@Base+0x12241>
  41a408:	mov    ecx,0xa
  41a40d:	mov    rdi,r14
  41a410:	mov    rsi,rax
  41a413:	jmp    419061 <main@@Base+0x12241>
  41a418:	nop    DWORD PTR [rax+rax*1+0x0]
  41a420:	push   r14
  41a422:	push   rbx
  41a423:	mov    rbx,rdx
  41a426:	sub    rbx,rsi
  41a429:	cmp    rbx,0x8
  41a42d:	jb     41a436 <main@@Base+0x13616>
  41a42f:	movbe  rbx,QWORD PTR [rsi]
  41a434:	jmp    41a4b1 <main@@Base+0x13691>
  41a436:	and    bl,0xf
  41a439:	add    bl,0xff
  41a43c:	cmp    bl,0x7
  41a43f:	ja     41a5a5 <main@@Base+0x13785>
  41a445:	xor    eax,eax
  41a447:	movzx  ebx,bl
  41a44a:	lea    r10,[rip+0x19583]        # 4339d4 <_IO_stdin_used@@Base+0x9d4>
  41a451:	movsxd rbx,DWORD PTR [r10+rbx*4]
  41a455:	add    rbx,r10
  41a458:	jmp    rbx
  41a45a:	movsx  rax,BYTE PTR [rsi+0x7]
  41a45f:	movsx  rbx,BYTE PTR [rsi+0x6]
  41a464:	shl    rbx,0x8
  41a468:	or     rax,rbx
  41a46b:	movsx  rbx,BYTE PTR [rsi+0x5]
  41a470:	shl    rbx,0x10
  41a474:	or     rax,rbx
  41a477:	movsx  rbx,BYTE PTR [rsi+0x4]
  41a47c:	shl    rbx,0x18
  41a480:	or     rax,rbx
  41a483:	movsx  rbx,BYTE PTR [rsi+0x3]
  41a488:	shl    rbx,0x20
  41a48c:	or     rax,rbx
  41a48f:	movsx  rbx,BYTE PTR [rsi+0x2]
  41a494:	shl    rbx,0x28
  41a498:	or     rax,rbx
  41a49b:	movsx  rbx,BYTE PTR [rsi+0x1]
  41a4a0:	shl    rbx,0x30
  41a4a4:	or     rax,rbx
  41a4a7:	movzx  ebx,BYTE PTR [rsi]
  41a4aa:	shl    rbx,0x38
  41a4ae:	or     rbx,rax
  41a4b1:	movabs rax,0x4368617261637465
  41a4bb:	cmp    rbx,rax
  41a4be:	jne    41a5a5 <main@@Base+0x13785>
  41a4c4:	lea    r10,[rsi+0x8]
  41a4c8:	mov    rax,rdx
  41a4cb:	sub    rax,r10
  41a4ce:	cmp    rax,0x8
  41a4d2:	jb     41a4e8 <main@@Base+0x136c8>
  41a4d4:	movbe  rbx,QWORD PTR [r10]
  41a4d9:	cmp    rax,0x2
  41a4dd:	jge    41a56d <main@@Base+0x1374d>
  41a4e3:	jmp    41a5a5 <main@@Base+0x13785>
  41a4e8:	mov    ebx,eax
  41a4ea:	and    bl,0xf
  41a4ed:	add    bl,0xff
  41a4f0:	cmp    bl,0x7
  41a4f3:	ja     41a5a5 <main@@Base+0x13785>
  41a4f9:	xor    r11d,r11d
  41a4fc:	movzx  ebx,bl
  41a4ff:	lea    r14,[rip+0x194ee]        # 4339f4 <_IO_stdin_used@@Base+0x9f4>
  41a506:	movsxd rbx,DWORD PTR [r14+rbx*4]
  41a50a:	add    rbx,r14
  41a50d:	jmp    rbx
  41a50f:	movsx  r11,BYTE PTR [rsi+0xf]
  41a514:	movsx  rbx,BYTE PTR [rsi+0xe]
  41a519:	shl    rbx,0x8
  41a51d:	or     r11,rbx
  41a520:	movsx  rbx,BYTE PTR [rsi+0xd]
  41a525:	shl    rbx,0x10
  41a529:	or     r11,rbx
  41a52c:	movsx  rbx,BYTE PTR [rsi+0xc]
  41a531:	shl    rbx,0x18
  41a535:	or     r11,rbx
  41a538:	movsx  rbx,BYTE PTR [rsi+0xb]
  41a53d:	shl    rbx,0x20
  41a541:	or     r11,rbx
  41a544:	movsx  rbx,BYTE PTR [rsi+0xa]
  41a549:	shl    rbx,0x28
  41a54d:	or     r11,rbx
  41a550:	movsx  rbx,BYTE PTR [rsi+0x9]
  41a555:	shl    rbx,0x30
  41a559:	or     r11,rbx
  41a55c:	movzx  ebx,BYTE PTR [r10]
  41a560:	shl    rbx,0x38
  41a564:	or     rbx,r11
  41a567:	cmp    rax,0x2
  41a56b:	jl     41a5a5 <main@@Base+0x13785>
  41a56d:	movabs rax,0xff00000000000000
  41a577:	and    rbx,rax
  41a57a:	movabs rax,0x7200000000000000
  41a584:	cmp    rbx,rax
  41a587:	jne    41a5a5 <main@@Base+0x13785>
  41a589:	lea    rax,[rsi+0xa]
  41a58d:	cmp    BYTE PTR [rsi+0x9],0x2e
  41a591:	cmovne rax,r10
  41a595:	cmp    rax,r10
  41a598:	je     41a5a5 <main@@Base+0x13785>
  41a59a:	mov    rsi,rax
  41a59d:	pop    rbx
  41a59e:	pop    r14
  41a5a0:	jmp    415420 <main@@Base+0xe600>
  41a5a5:	mov    rax,rsi
  41a5a8:	pop    rbx
  41a5a9:	pop    r14
  41a5ab:	ret    
  41a5ac:	nop    DWORD PTR [rax+0x0]
  41a5b0:	push   rbp
  41a5b1:	push   r15
  41a5b3:	push   r14
  41a5b5:	push   r13
  41a5b7:	push   r12
  41a5b9:	push   rbx
  41a5ba:	sub    rsp,0x18
  41a5be:	mov    r12,rdx
  41a5c1:	mov    rbp,rsi
  41a5c4:	mov    r14,rdi
  41a5c7:	mov    DWORD PTR [r8],0x0
  41a5ce:	add    cl,0x1
  41a5d1:	cmp    cl,0xc
  41a5d4:	ja     41a638 <main@@Base+0x13818>
  41a5d6:	mov    r15,r8
  41a5d9:	movzx  eax,cl
  41a5dc:	lea    rcx,[rip+0x19431]        # 433a14 <_IO_stdin_used@@Base+0xa14>
  41a5e3:	movsxd rax,DWORD PTR [rcx+rax*4]
  41a5e7:	add    rax,rcx
  41a5ea:	jmp    rax
  41a5ec:	mov    rdi,r14
  41a5ef:	mov    rsi,rbp
  41a5f2:	mov    rdx,r12
  41a5f5:	mov    rcx,r15
  41a5f8:	call   425630 <flatcc_json_parser_build_string@@Base>
  41a5fd:	jmp    41a7c6 <main@@Base+0x139a6>
  41a602:	mov    rdi,r14
  41a605:	mov    rsi,rbp
  41a608:	mov    rdx,r12
  41a60b:	mov    rcx,r15
  41a60e:	call   41b300 <main@@Base+0x144e0>
  41a613:	jmp    41a7c6 <main@@Base+0x139a6>
  41a618:	mov    rax,r12
  41a61b:	sub    rax,rbp
  41a61e:	cmp    rax,0x4
  41a622:	jl     41a631 <main@@Base+0x13811>
  41a624:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  41a62b:	je     41a7fe <main@@Base+0x139de>
  41a631:	mov    ecx,0x1a
  41a636:	jmp    41a648 <main@@Base+0x13828>
  41a638:	test   BYTE PTR [r14+0x10],0x1
  41a63d:	jne    41a737 <main@@Base+0x13917>
  41a643:	mov    ecx,0xf
  41a648:	mov    rdi,r14
  41a64b:	mov    rsi,rbp
  41a64e:	mov    rdx,r12
  41a651:	add    rsp,0x18
  41a655:	pop    rbx
  41a656:	pop    r12
  41a658:	pop    r13
  41a65a:	pop    r14
  41a65c:	pop    r15
  41a65e:	pop    rbp
  41a65f:	jmp    423620 <flatcc_json_parser_set_error@@Base>
  41a664:	mov    DWORD PTR [r15],0x0
  41a66b:	mov    rdi,QWORD PTR [r14]
  41a66e:	mov    esi,0x1
  41a673:	call   41eb00 <flatcc_builder_start_table@@Base>
  41a678:	test   eax,eax
  41a67a:	jne    41a7b3 <main@@Base+0x13993>
  41a680:	cmp    rbp,r12
  41a683:	je     41a792 <main@@Base+0x13972>
  41a689:	cmp    BYTE PTR [rbp+0x0],0x7b
  41a68d:	jne    41a792 <main@@Base+0x13972>
  41a693:	lea    rax,[rbp+0x1]
  41a697:	mov    rcx,r12
  41a69a:	sub    rcx,rax
  41a69d:	cmp    rcx,0x2
  41a6a1:	jl     41ac25 <main@@Base+0x13e05>
  41a6a7:	cmp    BYTE PTR [rax],0x20
  41a6aa:	jg     41ac33 <main@@Base+0x13e13>
  41a6b0:	jne    41ac25 <main@@Base+0x13e05>
  41a6b6:	cmp    BYTE PTR [rbp+0x2],0x20
  41a6ba:	jle    41ac25 <main@@Base+0x13e05>
  41a6c0:	add    rbp,0x2
  41a6c4:	mov    rax,rbp
  41a6c7:	jmp    41ac33 <main@@Base+0x13e13>
  41a6cc:	mov    DWORD PTR [r15],0x0
  41a6d3:	mov    rdi,QWORD PTR [r14]
  41a6d6:	mov    esi,0x2
  41a6db:	mov    edx,0x2
  41a6e0:	call   41db80 <flatcc_builder_start_struct@@Base>
  41a6e5:	test   rax,rax
  41a6e8:	je     41a785 <main@@Base+0x13965>
  41a6ee:	cmp    rbp,r12
  41a6f1:	je     41a753 <main@@Base+0x13933>
  41a6f3:	cmp    BYTE PTR [rbp+0x0],0x7b
  41a6f7:	jne    41a753 <main@@Base+0x13933>
  41a6f9:	mov    QWORD PTR [rsp+0x10],rax
  41a6fe:	lea    rax,[rbp+0x1]
  41a702:	mov    rcx,r12
  41a705:	sub    rcx,rax
  41a708:	cmp    rcx,0x2
  41a70c:	jl     41a804 <main@@Base+0x139e4>
  41a712:	cmp    BYTE PTR [rax],0x20
  41a715:	jg     41a812 <main@@Base+0x139f2>
  41a71b:	jne    41a804 <main@@Base+0x139e4>
  41a721:	cmp    BYTE PTR [rbp+0x2],0x20
  41a725:	jle    41a804 <main@@Base+0x139e4>
  41a72b:	add    rbp,0x2
  41a72f:	mov    rax,rbp
  41a732:	jmp    41a812 <main@@Base+0x139f2>
  41a737:	mov    rdi,r14
  41a73a:	mov    rsi,rbp
  41a73d:	mov    rdx,r12
  41a740:	add    rsp,0x18
  41a744:	pop    rbx
  41a745:	pop    r12
  41a747:	pop    r13
  41a749:	pop    r14
  41a74b:	pop    r15
  41a74d:	pop    rbp
  41a74e:	jmp    423cd0 <flatcc_json_parser_generic_json@@Base>
  41a753:	mov    ecx,0x15
  41a758:	mov    rdi,r14
  41a75b:	mov    rsi,rbp
  41a75e:	mov    rdx,r12
  41a761:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a766:	mov    rbp,rax
  41a769:	mov    rsi,r12
  41a76c:	cmp    rbp,r12
  41a76f:	je     41a788 <main@@Base+0x13968>
  41a771:	mov    rdi,QWORD PTR [r14]
  41a774:	call   41dc50 <flatcc_builder_end_struct@@Base>
  41a779:	mov    DWORD PTR [r15],eax
  41a77c:	mov    rsi,rbp
  41a77f:	test   eax,eax
  41a781:	jne    41a7c9 <main@@Base+0x139a9>
  41a783:	jmp    41a788 <main@@Base+0x13968>
  41a785:	mov    rsi,rbp
  41a788:	mov    ecx,0x21
  41a78d:	mov    rdi,r14
  41a790:	jmp    41a7be <main@@Base+0x1399e>
  41a792:	mov    ecx,0x15
  41a797:	mov    rdi,r14
  41a79a:	mov    rsi,rbp
  41a79d:	mov    rdx,r12
  41a7a0:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a7a5:	mov    rbp,rax
  41a7a8:	cmp    DWORD PTR [r14+0x1c],0x0
  41a7ad:	je     41b1f1 <main@@Base+0x143d1>
  41a7b3:	mov    ecx,0x21
  41a7b8:	mov    rdi,r14
  41a7bb:	mov    rsi,rbp
  41a7be:	mov    rdx,r12
  41a7c1:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a7c6:	mov    rbp,rax
  41a7c9:	cmp    DWORD PTR [r14+0x1c],0x0
  41a7ce:	jne    41a7ec <main@@Base+0x139cc>
  41a7d0:	cmp    DWORD PTR [r15],0x0
  41a7d4:	jne    41a7ec <main@@Base+0x139cc>
  41a7d6:	mov    ecx,0x21
  41a7db:	mov    rdi,r14
  41a7de:	mov    rsi,rbp
  41a7e1:	mov    rdx,r12
  41a7e4:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a7e9:	mov    rbp,rax
  41a7ec:	mov    rax,rbp
  41a7ef:	add    rsp,0x18
  41a7f3:	pop    rbx
  41a7f4:	pop    r12
  41a7f6:	pop    r13
  41a7f8:	pop    r14
  41a7fa:	pop    r15
  41a7fc:	pop    rbp
  41a7fd:	ret    
  41a7fe:	add    rbp,0x4
  41a802:	jmp    41a7ec <main@@Base+0x139cc>
  41a804:	mov    rdi,r14
  41a807:	mov    rsi,rax
  41a80a:	mov    rdx,r12
  41a80d:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41a812:	mov    rdx,r12
  41a815:	cmp    rax,r12
  41a818:	je     41a826 <main@@Base+0x13a06>
  41a81a:	cmp    BYTE PTR [rax],0x7d
  41a81d:	je     41b167 <main@@Base+0x14347>
  41a823:	mov    rdx,rax
  41a826:	movabs r13,0x686169725f6c656e
  41a830:	mov    rsi,r12
  41a833:	cmp    rdx,r12
  41a836:	je     41a85c <main@@Base+0x13a3c>
  41a838:	cmp    BYTE PTR [rdx],0x22
  41a83b:	jne    41a846 <main@@Base+0x13a26>
  41a83d:	add    rdx,0x1
  41a841:	mov    rsi,rdx
  41a844:	jmp    41a85c <main@@Base+0x13a3c>
  41a846:	mov    ecx,0x5
  41a84b:	mov    rdi,r14
  41a84e:	mov    rsi,rdx
  41a851:	mov    rdx,r12
  41a854:	call   423620 <flatcc_json_parser_set_error@@Base>
  41a859:	mov    rsi,rax
  41a85c:	mov    rax,r12
  41a85f:	sub    rax,rsi
  41a862:	cmp    rax,0x8
  41a866:	jb     41a87b <main@@Base+0x13a5b>
  41a868:	movbe  rax,QWORD PTR [rsi]
  41a86d:	cmp    rax,r13
  41a870:	je     41a906 <main@@Base+0x13ae6>
  41a876:	jmp    41a921 <main@@Base+0x13b01>
  41a87b:	and    al,0xf
  41a87d:	add    al,0xff
  41a87f:	cmp    al,0x7
  41a881:	ja     41a921 <main@@Base+0x13b01>
  41a887:	movzx  eax,al
  41a88a:	lea    rcx,[rip+0x191b7]        # 433a48 <_IO_stdin_used@@Base+0xa48>
  41a891:	movsxd rax,DWORD PTR [rcx+rax*4]
  41a895:	add    rax,rcx
  41a898:	xor    r8d,r8d
  41a89b:	xor    r9d,r9d
  41a89e:	xor    ecx,ecx
  41a8a0:	xor    edx,edx
  41a8a2:	xor    ebp,ebp
  41a8a4:	xor    edi,edi
  41a8a6:	xor    ebx,ebx
  41a8a8:	jmp    rax
  41a8aa:	movsx  r8,BYTE PTR [rsi+0x7]
  41a8af:	movsx  r9,BYTE PTR [rsi+0x6]
  41a8b4:	shl    r9,0x8
  41a8b8:	or     r9,r8
  41a8bb:	movsx  rcx,BYTE PTR [rsi+0x5]
  41a8c0:	shl    rcx,0x10
  41a8c4:	or     rcx,r9
  41a8c7:	movsx  rdx,BYTE PTR [rsi+0x4]
  41a8cc:	shl    rdx,0x18
  41a8d0:	or     rdx,rcx
  41a8d3:	movsx  rbp,BYTE PTR [rsi+0x3]
  41a8d8:	shl    rbp,0x20
  41a8dc:	or     rbp,rdx
  41a8df:	movsx  rdi,BYTE PTR [rsi+0x2]
  41a8e4:	shl    rdi,0x28
  41a8e8:	or     rdi,rbp
  41a8eb:	movsx  rbx,BYTE PTR [rsi+0x1]
  41a8f0:	shl    rbx,0x30
  41a8f4:	or     rbx,rdi
  41a8f7:	movzx  eax,BYTE PTR [rsi]
  41a8fa:	shl    rax,0x38
  41a8fe:	or     rax,rbx
  41a901:	cmp    rax,r13
  41a904:	jne    41a921 <main@@Base+0x13b01>
  41a906:	lea    r13,[rsi+0x8]
  41a90a:	mov    rax,r12
  41a90d:	sub    rax,r13
  41a910:	cmp    rax,0x8
  41a914:	jb     41a931 <main@@Base+0x13b11>
  41a916:	movbe  rdx,QWORD PTR [r13+0x0]
  41a91c:	jmp    41a9c2 <main@@Base+0x13ba2>
  41a921:	mov    rdi,r14
  41a924:	mov    rdx,r12
  41a927:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41a92c:	jmp    41ab00 <main@@Base+0x13ce0>
  41a931:	mov    ecx,eax
  41a933:	and    cl,0xf
  41a936:	add    cl,0xff
  41a939:	cmp    cl,0x7
  41a93c:	ja     41aae8 <main@@Base+0x13cc8>
  41a942:	movzx  ecx,cl
  41a945:	lea    rdx,[rip+0x1911c]        # 433a68 <_IO_stdin_used@@Base+0xa68>
  41a94c:	mov    rdi,rdx
  41a94f:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41a953:	add    rdx,rdi
  41a956:	xor    r8d,r8d
  41a959:	xor    r9d,r9d
  41a95c:	xor    r10d,r10d
  41a95f:	xor    edi,edi
  41a961:	xor    ebp,ebp
  41a963:	xor    ebx,ebx
  41a965:	xor    ecx,ecx
  41a967:	jmp    rdx
  41a969:	movsx  r8,BYTE PTR [rsi+0xf]
  41a96e:	movsx  r9,BYTE PTR [rsi+0xe]
  41a973:	shl    r9,0x8
  41a977:	or     r9,r8
  41a97a:	movsx  r10,BYTE PTR [rsi+0xd]
  41a97f:	shl    r10,0x10
  41a983:	or     r10,r9
  41a986:	movsx  rdi,BYTE PTR [rsi+0xc]
  41a98b:	shl    rdi,0x18
  41a98f:	or     rdi,r10
  41a992:	movsx  rbp,BYTE PTR [rsi+0xb]
  41a997:	shl    rbp,0x20
  41a99b:	or     rbp,rdi
  41a99e:	movsx  rbx,BYTE PTR [rsi+0xa]
  41a9a3:	shl    rbx,0x28
  41a9a7:	or     rbx,rbp
  41a9aa:	movsx  rcx,BYTE PTR [rsi+0x9]
  41a9af:	shl    rcx,0x30
  41a9b3:	or     rcx,rbx
  41a9b6:	movzx  edx,BYTE PTR [r13+0x0]
  41a9bb:	shl    rdx,0x38
  41a9bf:	or     rdx,rcx
  41a9c2:	movabs rcx,0xffffff0000000000
  41a9cc:	and    rdx,rcx
  41a9cf:	movabs rcx,0x6774680000000000
  41a9d9:	cmp    rdx,rcx
  41a9dc:	jne    41aae8 <main@@Base+0x13cc8>
  41a9e2:	cmp    rax,0x4
  41a9e6:	jl     41aae8 <main@@Base+0x13cc8>
  41a9ec:	cmp    BYTE PTR [rsi+0xb],0x22
  41a9f0:	jne    41aae8 <main@@Base+0x13cc8>
  41a9f6:	lea    rax,[rsi+0xc]
  41a9fa:	mov    rcx,r12
  41a9fd:	sub    rcx,rax
  41aa00:	cmp    rcx,0x2
  41aa04:	jl     41aa21 <main@@Base+0x13c01>
  41aa06:	cmp    BYTE PTR [rax],0x20
  41aa09:	jg     41aa2f <main@@Base+0x13c0f>
  41aa0b:	jne    41aa21 <main@@Base+0x13c01>
  41aa0d:	cmp    BYTE PTR [rsi+0xd],0x20
  41aa11:	jle    41aa21 <main@@Base+0x13c01>
  41aa13:	add    rsi,0xd
  41aa17:	mov    rax,rsi
  41aa1a:	cmp    rax,r12
  41aa1d:	jne    41aa34 <main@@Base+0x13c14>
  41aa1f:	jmp    41aa5d <main@@Base+0x13c3d>
  41aa21:	mov    rdi,r14
  41aa24:	mov    rsi,rax
  41aa27:	mov    rdx,r12
  41aa2a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41aa2f:	cmp    rax,r12
  41aa32:	je     41aa5d <main@@Base+0x13c3d>
  41aa34:	cmp    BYTE PTR [rax],0x3a
  41aa37:	jne    41aa5d <main@@Base+0x13c3d>
  41aa39:	lea    rbp,[rax+0x1]
  41aa3d:	mov    rcx,r12
  41aa40:	sub    rcx,rbp
  41aa43:	cmp    rcx,0x2
  41aa47:	jl     41aa72 <main@@Base+0x13c52>
  41aa49:	cmp    BYTE PTR [rbp+0x0],0x20
  41aa4d:	jg     41aa83 <main@@Base+0x13c63>
  41aa4f:	jne    41aa72 <main@@Base+0x13c52>
  41aa51:	cmp    BYTE PTR [rax+0x2],0x20
  41aa55:	jle    41aa72 <main@@Base+0x13c52>
  41aa57:	add    rax,0x2
  41aa5b:	jmp    41aa80 <main@@Base+0x13c60>
  41aa5d:	mov    ecx,0x4
  41aa62:	mov    rdi,r14
  41aa65:	mov    rsi,rax
  41aa68:	mov    rdx,r12
  41aa6b:	call   423620 <flatcc_json_parser_set_error@@Base>
  41aa70:	jmp    41aa80 <main@@Base+0x13c60>
  41aa72:	mov    rdi,r14
  41aa75:	mov    rsi,rbp
  41aa78:	mov    rdx,r12
  41aa7b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41aa80:	mov    rbp,rax
  41aa83:	cmp    r13,rbp
  41aa86:	je     41aae8 <main@@Base+0x13cc8>
  41aa88:	mov    QWORD PTR [rsp+0x8],0x0
  41aa91:	mov    DWORD PTR [rsp+0x4],0x0
  41aa99:	mov    WORD PTR [rsp],0x0
  41aa9f:	cmp    rbp,r12
  41aaa2:	je     41ab95 <main@@Base+0x13d75>
  41aaa8:	mov    rdi,r14
  41aaab:	mov    rsi,rbp
  41aaae:	mov    rdx,r12
  41aab1:	lea    rcx,[rsp+0x4]
  41aab6:	lea    r8,[rsp+0x8]
  41aabb:	call   425160 <flatcc_json_parser_integer@@Base>
  41aac0:	cmp    rax,rbp
  41aac3:	movabs r13,0x686169725f6c656e
  41aacd:	je     41abab <main@@Base+0x13d8b>
  41aad3:	cmp    DWORD PTR [rsp+0x4],0x0
  41aad8:	je     41abb7 <main@@Base+0x13d97>
  41aade:	mov    ecx,0x8
  41aae3:	jmp    41abca <main@@Base+0x13daa>
  41aae8:	mov    rdi,r14
  41aaeb:	mov    rsi,r13
  41aaee:	mov    rdx,r12
  41aaf1:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41aaf6:	movabs r13,0x686169725f6c656e
  41ab00:	mov    rcx,r12
  41ab03:	sub    rcx,rax
  41ab06:	cmp    rcx,0x2
  41ab0a:	jl     41ab27 <main@@Base+0x13d07>
  41ab0c:	cmp    BYTE PTR [rax],0x20
  41ab0f:	jg     41ab35 <main@@Base+0x13d15>
  41ab11:	jne    41ab27 <main@@Base+0x13d07>
  41ab13:	cmp    BYTE PTR [rax+0x1],0x20
  41ab17:	jle    41ab27 <main@@Base+0x13d07>
  41ab19:	add    rax,0x1
  41ab1d:	cmp    rax,r12
  41ab20:	jne    41ab3e <main@@Base+0x13d1e>
  41ab22:	jmp    41b156 <main@@Base+0x14336>
  41ab27:	mov    rdi,r14
  41ab2a:	mov    rsi,rax
  41ab2d:	mov    rdx,r12
  41ab30:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41ab35:	cmp    rax,r12
  41ab38:	je     41b156 <main@@Base+0x14336>
  41ab3e:	movzx  ecx,BYTE PTR [rax]
  41ab41:	cmp    cl,0x2c
  41ab44:	jne    41b15e <main@@Base+0x1433e>
  41ab4a:	lea    rdx,[rax+0x1]
  41ab4e:	mov    rcx,r12
  41ab51:	sub    rcx,rdx
  41ab54:	cmp    rcx,0x2
  41ab58:	jl     41ab6d <main@@Base+0x13d4d>
  41ab5a:	cmp    BYTE PTR [rdx],0x20
  41ab5d:	jg     41ab7e <main@@Base+0x13d5e>
  41ab5f:	jne    41ab6d <main@@Base+0x13d4d>
  41ab61:	cmp    BYTE PTR [rax+0x2],0x20
  41ab65:	jle    41ab6d <main@@Base+0x13d4d>
  41ab67:	add    rax,0x2
  41ab6b:	jmp    41ab7b <main@@Base+0x13d5b>
  41ab6d:	mov    rdi,r14
  41ab70:	mov    rsi,rdx
  41ab73:	mov    rdx,r12
  41ab76:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41ab7b:	mov    rdx,rax
  41ab7e:	cmp    rdx,r12
  41ab81:	je     41b192 <main@@Base+0x14372>
  41ab87:	cmp    BYTE PTR [rdx],0x7d
  41ab8a:	jne    41a830 <main@@Base+0x13a10>
  41ab90:	jmp    41b1a2 <main@@Base+0x14382>
  41ab95:	xor    ecx,ecx
  41ab97:	mov    rax,r12
  41ab9a:	movabs r13,0x686169725f6c656e
  41aba4:	cmp    rbp,rax
  41aba7:	jne    41ac0d <main@@Base+0x13ded>
  41aba9:	jmp    41abdf <main@@Base+0x13dbf>
  41abab:	xor    ecx,ecx
  41abad:	mov    rax,rbp
  41abb0:	cmp    rbp,rax
  41abb3:	jne    41ac0d <main@@Base+0x13ded>
  41abb5:	jmp    41abdf <main@@Base+0x13dbf>
  41abb7:	mov    rcx,QWORD PTR [rsp+0x8]
  41abbc:	cmp    rcx,0x10000
  41abc3:	jb     41ac1a <main@@Base+0x13dfa>
  41abc5:	mov    ecx,0x7
  41abca:	mov    rdi,r14
  41abcd:	mov    rsi,rax
  41abd0:	mov    rdx,r12
  41abd3:	call   423620 <flatcc_json_parser_set_error@@Base>
  41abd8:	xor    ecx,ecx
  41abda:	cmp    rbp,rax
  41abdd:	jne    41ac0d <main@@Base+0x13ded>
  41abdf:	mov    rdi,r14
  41abe2:	mov    rsi,rbp
  41abe5:	mov    rdx,r12
  41abe8:	lea    rcx,[rip+0x26b11]        # 441700 <__data_start@@Base+0x650>
  41abef:	mov    r8,rsp
  41abf2:	call   41b8c0 <main@@Base+0x14aa0>
  41abf7:	cmp    rax,rbp
  41abfa:	je     41b2c4 <main@@Base+0x144a4>
  41ac00:	cmp    rax,r12
  41ac03:	je     41b2c4 <main@@Base+0x144a4>
  41ac09:	movzx  ecx,WORD PTR [rsp]
  41ac0d:	mov    rdx,QWORD PTR [rsp+0x10]
  41ac12:	mov    WORD PTR [rdx],cx
  41ac15:	jmp    41ab00 <main@@Base+0x13ce0>
  41ac1a:	mov    WORD PTR [rsp],cx
  41ac1e:	cmp    rbp,rax
  41ac21:	jne    41ac0d <main@@Base+0x13ded>
  41ac23:	jmp    41abdf <main@@Base+0x13dbf>
  41ac25:	mov    rdi,r14
  41ac28:	mov    rsi,rax
  41ac2b:	mov    rdx,r12
  41ac2e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41ac33:	mov    rdx,r12
  41ac36:	cmp    rax,r12
  41ac39:	je     41ac7a <main@@Base+0x13e5a>
  41ac3b:	cmp    BYTE PTR [rax],0x7d
  41ac3e:	jne    41ac77 <main@@Base+0x13e57>
  41ac40:	lea    rbp,[rax+0x1]
  41ac44:	mov    rcx,r12
  41ac47:	sub    rcx,rbp
  41ac4a:	cmp    rcx,0x2
  41ac4e:	jl     41b291 <main@@Base+0x14471>
  41ac54:	cmp    BYTE PTR [rbp+0x0],0x20
  41ac58:	jg     41a7a8 <main@@Base+0x13988>
  41ac5e:	jne    41b291 <main@@Base+0x14471>
  41ac64:	cmp    BYTE PTR [rax+0x2],0x20
  41ac68:	jle    41b291 <main@@Base+0x14471>
  41ac6e:	add    rax,0x2
  41ac72:	jmp    41a7a5 <main@@Base+0x13985>
  41ac77:	mov    rdx,rax
  41ac7a:	mov    rsi,r12
  41ac7d:	cmp    rdx,r12
  41ac80:	je     41aca6 <main@@Base+0x13e86>
  41ac82:	cmp    BYTE PTR [rdx],0x22
  41ac85:	jne    41ac90 <main@@Base+0x13e70>
  41ac87:	add    rdx,0x1
  41ac8b:	mov    rsi,rdx
  41ac8e:	jmp    41aca6 <main@@Base+0x13e86>
  41ac90:	mov    ecx,0x5
  41ac95:	mov    rdi,r14
  41ac98:	mov    rsi,rdx
  41ac9b:	mov    rdx,r12
  41ac9e:	call   423620 <flatcc_json_parser_set_error@@Base>
  41aca3:	mov    rsi,rax
  41aca6:	mov    rax,r12
  41aca9:	sub    rax,rsi
  41acac:	cmp    rax,0x8
  41acb0:	jb     41acbc <main@@Base+0x13e9c>
  41acb2:	movbe  rcx,QWORD PTR [rsi]
  41acb7:	jmp    41ad42 <main@@Base+0x13f22>
  41acbc:	and    al,0xf
  41acbe:	add    al,0xff
  41acc0:	cmp    al,0x7
  41acc2:	ja     41ad6b <main@@Base+0x13f4b>
  41acc8:	movzx  eax,al
  41accb:	lea    rcx,[rip+0x18db6]        # 433a88 <_IO_stdin_used@@Base+0xa88>
  41acd2:	movsxd rbx,DWORD PTR [rcx+rax*4]
  41acd6:	add    rbx,rcx
  41acd9:	xor    r8d,r8d
  41acdc:	xor    r9d,r9d
  41acdf:	xor    ecx,ecx
  41ace1:	xor    edx,edx
  41ace3:	xor    ebp,ebp
  41ace5:	xor    edi,edi
  41ace7:	xor    eax,eax
  41ace9:	jmp    rbx
  41aceb:	movsx  r8,BYTE PTR [rsi+0x7]
  41acf0:	movsx  r9,BYTE PTR [rsi+0x6]
  41acf5:	shl    r9,0x8
  41acf9:	or     r9,r8
  41acfc:	movsx  rcx,BYTE PTR [rsi+0x5]
  41ad01:	shl    rcx,0x10
  41ad05:	or     rcx,r9
  41ad08:	movsx  rdx,BYTE PTR [rsi+0x4]
  41ad0d:	shl    rdx,0x18
  41ad11:	or     rdx,rcx
  41ad14:	movsx  rbp,BYTE PTR [rsi+0x3]
  41ad19:	shl    rbp,0x20
  41ad1d:	or     rbp,rdx
  41ad20:	movsx  rdi,BYTE PTR [rsi+0x2]
  41ad25:	shl    rdi,0x28
  41ad29:	or     rdi,rbp
  41ad2c:	movsx  rax,BYTE PTR [rsi+0x1]
  41ad31:	shl    rax,0x30
  41ad35:	or     rax,rdi
  41ad38:	movzx  ecx,BYTE PTR [rsi]
  41ad3b:	shl    rcx,0x38
  41ad3f:	or     rcx,rax
  41ad42:	movabs rax,0x73776f72645f6174
  41ad4c:	cmp    rcx,rax
  41ad4f:	jne    41ad6b <main@@Base+0x13f4b>
  41ad51:	lea    r10,[rsi+0x8]
  41ad55:	mov    rcx,r12
  41ad58:	sub    rcx,r10
  41ad5b:	cmp    rcx,0x8
  41ad5f:	jb     41ad73 <main@@Base+0x13f53>
  41ad61:	movbe  rcx,QWORD PTR [r10]
  41ad66:	jmp    41adfd <main@@Base+0x13fdd>
  41ad6b:	mov    rdi,r14
  41ad6e:	jmp    41affa <main@@Base+0x141da>
  41ad73:	and    cl,0xf
  41ad76:	add    cl,0xff
  41ad79:	cmp    cl,0x7
  41ad7c:	ja     41ae27 <main@@Base+0x14007>
  41ad82:	movzx  eax,cl
  41ad85:	lea    rcx,[rip+0x18d1c]        # 433aa8 <_IO_stdin_used@@Base+0xaa8>
  41ad8c:	movsxd rbx,DWORD PTR [rcx+rax*4]
  41ad90:	add    rbx,rcx
  41ad93:	xor    r8d,r8d
  41ad96:	xor    r9d,r9d
  41ad99:	xor    edx,edx
  41ad9b:	xor    edi,edi
  41ad9d:	xor    ebp,ebp
  41ad9f:	xor    ecx,ecx
  41ada1:	xor    eax,eax
  41ada3:	jmp    rbx
  41ada5:	movsx  r8,BYTE PTR [rsi+0xf]
  41adaa:	movsx  r9,BYTE PTR [rsi+0xe]
  41adaf:	shl    r9,0x8
  41adb3:	or     r9,r8
  41adb6:	movsx  rdx,BYTE PTR [rsi+0xd]
  41adbb:	shl    rdx,0x10
  41adbf:	or     rdx,r9
  41adc2:	movsx  rdi,BYTE PTR [rsi+0xc]
  41adc7:	shl    rdi,0x18
  41adcb:	or     rdi,rdx
  41adce:	movsx  rbp,BYTE PTR [rsi+0xb]
  41add3:	shl    rbp,0x20
  41add7:	or     rbp,rdi
  41adda:	movsx  rcx,BYTE PTR [rsi+0xa]
  41addf:	shl    rcx,0x28
  41ade3:	or     rcx,rbp
  41ade6:	movsx  rax,BYTE PTR [rsi+0x9]
  41adeb:	shl    rax,0x30
  41adef:	or     rax,rcx
  41adf2:	movzx  ecx,BYTE PTR [r10]
  41adf6:	shl    rcx,0x38
  41adfa:	or     rcx,rax
  41adfd:	movabs rax,0x7461636b5f64616d
  41ae07:	cmp    rcx,rax
  41ae0a:	jne    41ae27 <main@@Base+0x14007>
  41ae0c:	lea    r13,[rsi+0x10]
  41ae10:	mov    rax,r12
  41ae13:	sub    rax,r13
  41ae16:	cmp    rax,0x8
  41ae1a:	jb     41ae32 <main@@Base+0x14012>
  41ae1c:	movbe  rcx,QWORD PTR [r13+0x0]
  41ae22:	jmp    41aec0 <main@@Base+0x140a0>
  41ae27:	mov    rdi,r14
  41ae2a:	mov    rsi,r10
  41ae2d:	jmp    41affa <main@@Base+0x141da>
  41ae32:	mov    ecx,eax
  41ae34:	and    cl,0xf
  41ae37:	add    cl,0xff
  41ae3a:	cmp    cl,0x7
  41ae3d:	ja     41aff4 <main@@Base+0x141d4>
  41ae43:	movzx  ecx,cl
  41ae46:	lea    rdx,[rip+0x18c7b]        # 433ac8 <_IO_stdin_used@@Base+0xac8>
  41ae4d:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  41ae51:	add    rbx,rdx
  41ae54:	xor    r8d,r8d
  41ae57:	xor    r9d,r9d
  41ae5a:	xor    r10d,r10d
  41ae5d:	xor    edi,edi
  41ae5f:	xor    ebp,ebp
  41ae61:	xor    ecx,ecx
  41ae63:	xor    edx,edx
  41ae65:	jmp    rbx
  41ae67:	movsx  r8,BYTE PTR [rsi+0x17]
  41ae6c:	movsx  r9,BYTE PTR [rsi+0x16]
  41ae71:	shl    r9,0x8
  41ae75:	or     r9,r8
  41ae78:	movsx  r10,BYTE PTR [rsi+0x15]
  41ae7d:	shl    r10,0x10
  41ae81:	or     r10,r9
  41ae84:	movsx  rdi,BYTE PTR [rsi+0x14]
  41ae89:	shl    rdi,0x18
  41ae8d:	or     rdi,r10
  41ae90:	movsx  rbp,BYTE PTR [rsi+0x13]
  41ae95:	shl    rbp,0x20
  41ae99:	or     rbp,rdi
  41ae9c:	movsx  rcx,BYTE PTR [rsi+0x12]
  41aea1:	shl    rcx,0x28
  41aea5:	or     rcx,rbp
  41aea8:	movsx  rdx,BYTE PTR [rsi+0x11]
  41aead:	shl    rdx,0x30
  41aeb1:	or     rdx,rcx
  41aeb4:	movzx  ecx,BYTE PTR [r13+0x0]
  41aeb9:	shl    rcx,0x38
  41aebd:	or     rcx,rdx
  41aec0:	movabs rdx,0xffffff0000000000
  41aeca:	and    rcx,rdx
  41aecd:	movabs rdx,0x6167650000000000
  41aed7:	cmp    rcx,rdx
  41aeda:	jne    41aff4 <main@@Base+0x141d4>
  41aee0:	cmp    rax,0x4
  41aee4:	jl     41aff4 <main@@Base+0x141d4>
  41aeea:	cmp    BYTE PTR [rsi+0x13],0x22
  41aeee:	jne    41aff4 <main@@Base+0x141d4>
  41aef4:	lea    rax,[rsi+0x14]
  41aef8:	mov    rcx,r12
  41aefb:	sub    rcx,rax
  41aefe:	cmp    rcx,0x2
  41af02:	jl     41af1f <main@@Base+0x140ff>
  41af04:	cmp    BYTE PTR [rax],0x20
  41af07:	jg     41af2d <main@@Base+0x1410d>
  41af09:	jne    41af1f <main@@Base+0x140ff>
  41af0b:	cmp    BYTE PTR [rsi+0x15],0x20
  41af0f:	jle    41af1f <main@@Base+0x140ff>
  41af11:	add    rsi,0x15
  41af15:	mov    rax,rsi
  41af18:	cmp    rax,r12
  41af1b:	jne    41af32 <main@@Base+0x14112>
  41af1d:	jmp    41af5a <main@@Base+0x1413a>
  41af1f:	mov    rdi,r14
  41af22:	mov    rsi,rax
  41af25:	mov    rdx,r12
  41af28:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41af2d:	cmp    rax,r12
  41af30:	je     41af5a <main@@Base+0x1413a>
  41af32:	cmp    BYTE PTR [rax],0x3a
  41af35:	jne    41af5a <main@@Base+0x1413a>
  41af37:	lea    rbx,[rax+0x1]
  41af3b:	mov    rcx,r12
  41af3e:	sub    rcx,rbx
  41af41:	cmp    rcx,0x2
  41af45:	jl     41af6f <main@@Base+0x1414f>
  41af47:	cmp    BYTE PTR [rbx],0x20
  41af4a:	jg     41af80 <main@@Base+0x14160>
  41af4c:	jne    41af6f <main@@Base+0x1414f>
  41af4e:	cmp    BYTE PTR [rax+0x2],0x20
  41af52:	jle    41af6f <main@@Base+0x1414f>
  41af54:	add    rax,0x2
  41af58:	jmp    41af7d <main@@Base+0x1415d>
  41af5a:	mov    ecx,0x4
  41af5f:	mov    rdi,r14
  41af62:	mov    rsi,rax
  41af65:	mov    rdx,r12
  41af68:	call   423620 <flatcc_json_parser_set_error@@Base>
  41af6d:	jmp    41af7d <main@@Base+0x1415d>
  41af6f:	mov    rdi,r14
  41af72:	mov    rsi,rbx
  41af75:	mov    rdx,r12
  41af78:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41af7d:	mov    rbx,rax
  41af80:	cmp    r13,rbx
  41af83:	je     41aff4 <main@@Base+0x141d4>
  41af85:	mov    QWORD PTR [rsp+0x8],0x0
  41af8e:	mov    DWORD PTR [rsp+0x4],0x0
  41af96:	mov    DWORD PTR [rsp],0x0
  41af9d:	xor    ebp,ebp
  41af9f:	cmp    rbx,r12
  41afa2:	je     41b0ad <main@@Base+0x1428d>
  41afa8:	mov    rdi,r14
  41afab:	mov    rsi,rbx
  41afae:	mov    rdx,r12
  41afb1:	lea    rcx,[rsp+0x4]
  41afb6:	lea    r8,[rsp+0x8]
  41afbb:	call   425160 <flatcc_json_parser_integer@@Base>
  41afc0:	cmp    rax,rbx
  41afc3:	je     41b0b7 <main@@Base+0x14297>
  41afc9:	mov    r13,rax
  41afcc:	mov    rax,QWORD PTR [rsp+0x8]
  41afd1:	cmp    DWORD PTR [rsp+0x4],0x0
  41afd6:	je     41b0c1 <main@@Base+0x142a1>
  41afdc:	mov    ecx,0x80000001
  41afe1:	cmp    rax,rcx
  41afe4:	jb     41b0e6 <main@@Base+0x142c6>
  41afea:	mov    ecx,0x8
  41afef:	jmp    41b0ce <main@@Base+0x142ae>
  41aff4:	mov    rdi,r14
  41aff7:	mov    rsi,r13
  41affa:	mov    rdx,r12
  41affd:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41b002:	mov    r13,rax
  41b005:	mov    rax,r12
  41b008:	sub    rax,r13
  41b00b:	cmp    rax,0x2
  41b00f:	jl     41b02f <main@@Base+0x1420f>
  41b011:	cmp    BYTE PTR [r13+0x0],0x20
  41b016:	jg     41b040 <main@@Base+0x14220>
  41b018:	jne    41b02f <main@@Base+0x1420f>
  41b01a:	cmp    BYTE PTR [r13+0x1],0x20
  41b01f:	jle    41b02f <main@@Base+0x1420f>
  41b021:	add    r13,0x1
  41b025:	cmp    r13,r12
  41b028:	jne    41b049 <main@@Base+0x14229>
  41b02a:	jmp    41b1e3 <main@@Base+0x143c3>
  41b02f:	mov    rdi,r14
  41b032:	mov    rsi,r13
  41b035:	mov    rdx,r12
  41b038:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b03d:	mov    r13,rax
  41b040:	cmp    r13,r12
  41b043:	je     41b1e3 <main@@Base+0x143c3>
  41b049:	movzx  eax,BYTE PTR [r13+0x0]
  41b04e:	cmp    al,0x2c
  41b050:	jne    41b209 <main@@Base+0x143e9>
  41b056:	lea    rdx,[r13+0x1]
  41b05a:	mov    rax,r12
  41b05d:	sub    rax,rdx
  41b060:	cmp    rax,0x2
  41b064:	jl     41b085 <main@@Base+0x14265>
  41b066:	cmp    BYTE PTR [rdx],0x20
  41b069:	jg     41b096 <main@@Base+0x14276>
  41b06b:	jne    41b085 <main@@Base+0x14265>
  41b06d:	cmp    BYTE PTR [r13+0x2],0x20
  41b072:	jle    41b085 <main@@Base+0x14265>
  41b074:	add    r13,0x2
  41b078:	mov    rdx,r13
  41b07b:	cmp    rdx,r12
  41b07e:	jne    41b09f <main@@Base+0x1427f>
  41b080:	jmp    41b248 <main@@Base+0x14428>
  41b085:	mov    rdi,r14
  41b088:	mov    rsi,rdx
  41b08b:	mov    rdx,r12
  41b08e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b093:	mov    rdx,rax
  41b096:	cmp    rdx,r12
  41b099:	je     41b248 <main@@Base+0x14428>
  41b09f:	cmp    BYTE PTR [rdx],0x7d
  41b0a2:	jne    41ac7a <main@@Base+0x13e5a>
  41b0a8:	jmp    41b258 <main@@Base+0x14438>
  41b0ad:	mov    r13,r12
  41b0b0:	cmp    rbx,r13
  41b0b3:	jne    41b123 <main@@Base+0x14303>
  41b0b5:	jmp    41b0f3 <main@@Base+0x142d3>
  41b0b7:	mov    r13,rbx
  41b0ba:	cmp    rbx,r13
  41b0bd:	jne    41b123 <main@@Base+0x14303>
  41b0bf:	jmp    41b0f3 <main@@Base+0x142d3>
  41b0c1:	test   rax,0xffffffff80000000
  41b0c7:	je     41b0e9 <main@@Base+0x142c9>
  41b0c9:	mov    ecx,0x7
  41b0ce:	mov    rdi,r14
  41b0d1:	mov    rsi,r13
  41b0d4:	mov    rdx,r12
  41b0d7:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b0dc:	mov    r13,rax
  41b0df:	cmp    rbx,r13
  41b0e2:	jne    41b123 <main@@Base+0x14303>
  41b0e4:	jmp    41b0f3 <main@@Base+0x142d3>
  41b0e6:	neg    rax
  41b0e9:	mov    DWORD PTR [rsp],eax
  41b0ec:	mov    ebp,eax
  41b0ee:	cmp    rbx,r13
  41b0f1:	jne    41b123 <main@@Base+0x14303>
  41b0f3:	mov    rdi,r14
  41b0f6:	mov    rsi,rbx
  41b0f9:	mov    rdx,r12
  41b0fc:	lea    rcx,[rip+0x265dd]        # 4416e0 <__data_start@@Base+0x630>
  41b103:	mov    r8,rsp
  41b106:	call   414540 <main@@Base+0xd720>
  41b10b:	mov    r13,rax
  41b10e:	cmp    rax,rbx
  41b111:	je     41b2cb <main@@Base+0x144ab>
  41b117:	cmp    r13,r12
  41b11a:	je     41b2cb <main@@Base+0x144ab>
  41b120:	mov    ebp,DWORD PTR [rsp]
  41b123:	test   ebp,ebp
  41b125:	jne    41b132 <main@@Base+0x14312>
  41b127:	test   BYTE PTR [r14+0x10],0x2
  41b12c:	je     41b005 <main@@Base+0x141e5>
  41b132:	mov    rdi,QWORD PTR [r14]
  41b135:	xor    esi,esi
  41b137:	mov    edx,0x4
  41b13c:	mov    ecx,0x4
  41b141:	call   41fe80 <flatcc_builder_table_add@@Base>
  41b146:	test   rax,rax
  41b149:	je     41b2cb <main@@Base+0x144ab>
  41b14f:	mov    DWORD PTR [rax],ebp
  41b151:	jmp    41b005 <main@@Base+0x141e5>
  41b156:	mov    rsi,r12
  41b159:	jmp    41a788 <main@@Base+0x13968>
  41b15e:	cmp    cl,0x7d
  41b161:	jne    41b2a4 <main@@Base+0x14484>
  41b167:	lea    rbp,[rax+0x1]
  41b16b:	mov    rcx,r12
  41b16e:	sub    rcx,rbp
  41b171:	cmp    rcx,0x2
  41b175:	jl     41b1d0 <main@@Base+0x143b0>
  41b177:	cmp    BYTE PTR [rbp+0x0],0x20
  41b17b:	jg     41a769 <main@@Base+0x13949>
  41b181:	jne    41b1d0 <main@@Base+0x143b0>
  41b183:	cmp    BYTE PTR [rax+0x2],0x20
  41b187:	jle    41b1d0 <main@@Base+0x143b0>
  41b189:	add    rax,0x2
  41b18d:	jmp    41a766 <main@@Base+0x13946>
  41b192:	mov    ecx,0xa
  41b197:	mov    rdi,r14
  41b19a:	mov    rsi,r12
  41b19d:	jmp    41a75e <main@@Base+0x1393e>
  41b1a2:	lea    rbp,[rdx+0x1]
  41b1a6:	mov    rax,r12
  41b1a9:	sub    rax,rbp
  41b1ac:	cmp    rax,0x2
  41b1b0:	jl     41b1d0 <main@@Base+0x143b0>
  41b1b2:	cmp    BYTE PTR [rbp+0x0],0x20
  41b1b6:	jg     41a769 <main@@Base+0x13949>
  41b1bc:	jne    41b1d0 <main@@Base+0x143b0>
  41b1be:	cmp    BYTE PTR [rdx+0x2],0x20
  41b1c2:	jle    41b1d0 <main@@Base+0x143b0>
  41b1c4:	add    rdx,0x2
  41b1c8:	mov    rbp,rdx
  41b1cb:	jmp    41a769 <main@@Base+0x13949>
  41b1d0:	mov    rdi,r14
  41b1d3:	mov    rsi,rbp
  41b1d6:	mov    rdx,r12
  41b1d9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b1de:	jmp    41a766 <main@@Base+0x13946>
  41b1e3:	mov    rbp,r12
  41b1e6:	cmp    DWORD PTR [r14+0x1c],0x0
  41b1eb:	jne    41a7b3 <main@@Base+0x13993>
  41b1f1:	mov    rdi,QWORD PTR [r14]
  41b1f4:	call   41f510 <flatcc_builder_end_table@@Base>
  41b1f9:	mov    DWORD PTR [r15],eax
  41b1fc:	test   eax,eax
  41b1fe:	jne    41a7c9 <main@@Base+0x139a9>
  41b204:	jmp    41a7b3 <main@@Base+0x13993>
  41b209:	cmp    al,0x7d
  41b20b:	jne    41b2b4 <main@@Base+0x14494>
  41b211:	lea    rbp,[r13+0x1]
  41b215:	mov    rax,r12
  41b218:	sub    rax,rbp
  41b21b:	cmp    rax,0x2
  41b21f:	jl     41b291 <main@@Base+0x14471>
  41b221:	cmp    BYTE PTR [rbp+0x0],0x20
  41b225:	jg     41a7a8 <main@@Base+0x13988>
  41b22b:	jne    41b291 <main@@Base+0x14471>
  41b22d:	cmp    BYTE PTR [r13+0x2],0x20
  41b232:	jle    41b291 <main@@Base+0x14471>
  41b234:	add    r13,0x2
  41b238:	mov    rbp,r13
  41b23b:	cmp    DWORD PTR [r14+0x1c],0x0
  41b240:	jne    41a7b3 <main@@Base+0x13993>
  41b246:	jmp    41b1f1 <main@@Base+0x143d1>
  41b248:	mov    ecx,0xa
  41b24d:	mov    rdi,r14
  41b250:	mov    rsi,r12
  41b253:	jmp    41a79d <main@@Base+0x1397d>
  41b258:	lea    rbp,[rdx+0x1]
  41b25c:	mov    rax,r12
  41b25f:	sub    rax,rbp
  41b262:	cmp    rax,0x2
  41b266:	jl     41b291 <main@@Base+0x14471>
  41b268:	cmp    BYTE PTR [rbp+0x0],0x20
  41b26c:	jg     41a7a8 <main@@Base+0x13988>
  41b272:	jne    41b291 <main@@Base+0x14471>
  41b274:	cmp    BYTE PTR [rdx+0x2],0x20
  41b278:	jle    41b291 <main@@Base+0x14471>
  41b27a:	add    rdx,0x2
  41b27e:	mov    rbp,rdx
  41b281:	cmp    DWORD PTR [r14+0x1c],0x0
  41b286:	jne    41a7b3 <main@@Base+0x13993>
  41b28c:	jmp    41b1f1 <main@@Base+0x143d1>
  41b291:	mov    rdi,r14
  41b294:	mov    rsi,rbp
  41b297:	mov    rdx,r12
  41b29a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b29f:	jmp    41a7a5 <main@@Base+0x13985>
  41b2a4:	mov    ecx,0xa
  41b2a9:	mov    rdi,r14
  41b2ac:	mov    rsi,rax
  41b2af:	jmp    41a75e <main@@Base+0x1393e>
  41b2b4:	mov    ecx,0xa
  41b2b9:	mov    rdi,r14
  41b2bc:	mov    rsi,r13
  41b2bf:	jmp    41a79d <main@@Base+0x1397d>
  41b2c4:	mov    ecx,0x21
  41b2c9:	jmp    41b2a9 <main@@Base+0x14489>
  41b2cb:	mov    rbp,r13
  41b2ce:	jmp    41a7b3 <main@@Base+0x13993>
  41b2d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b2dd:	nop    DWORD PTR [rax]
  41b2e0:	add    dil,0x1
  41b2e4:	cmp    dil,0xc
  41b2e8:	ja     41b2f9 <main@@Base+0x144d9>
  41b2ea:	movsx  rax,dil
  41b2ee:	lea    rcx,[rip+0x188fb]        # 433bf0 <_IO_stdin_used@@Base+0xbf0>
  41b2f5:	mov    eax,DWORD PTR [rcx+rax*4]
  41b2f8:	ret    
  41b2f9:	xor    eax,eax
  41b2fb:	ret    
  41b2fc:	nop    DWORD PTR [rax+0x0]
  41b300:	push   rbp
  41b301:	push   r15
  41b303:	push   r14
  41b305:	push   r13
  41b307:	push   r12
  41b309:	push   rbx
  41b30a:	sub    rsp,0x18
  41b30e:	mov    r13,rcx
  41b311:	mov    r15,rdx
  41b314:	mov    rbx,rsi
  41b317:	mov    r14,rdi
  41b31a:	mov    DWORD PTR [rcx],0x0
  41b320:	mov    rdi,QWORD PTR [rdi]
  41b323:	mov    esi,0x4
  41b328:	mov    edx,0x4
  41b32d:	call   41db80 <flatcc_builder_start_struct@@Base>
  41b332:	test   rax,rax
  41b335:	je     41b7e7 <main@@Base+0x149c7>
  41b33b:	cmp    rbx,r15
  41b33e:	je     41b36e <main@@Base+0x1454e>
  41b340:	cmp    BYTE PTR [rbx],0x7b
  41b343:	jne    41b36e <main@@Base+0x1454e>
  41b345:	mov    r12,rax
  41b348:	lea    rax,[rbx+0x1]
  41b34c:	mov    rcx,r15
  41b34f:	sub    rcx,rax
  41b352:	cmp    rcx,0x2
  41b356:	jl     41b3ac <main@@Base+0x1458c>
  41b358:	cmp    BYTE PTR [rax],0x20
  41b35b:	jg     41b3ba <main@@Base+0x1459a>
  41b35d:	jne    41b3ac <main@@Base+0x1458c>
  41b35f:	cmp    BYTE PTR [rbx+0x2],0x20
  41b363:	jle    41b3ac <main@@Base+0x1458c>
  41b365:	add    rbx,0x2
  41b369:	mov    rax,rbx
  41b36c:	jmp    41b3ba <main@@Base+0x1459a>
  41b36e:	mov    ecx,0x15
  41b373:	mov    rdi,r14
  41b376:	mov    rsi,rbx
  41b379:	mov    rdx,r15
  41b37c:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b381:	mov    rbp,rax
  41b384:	mov    rbx,r15
  41b387:	cmp    rbp,r15
  41b38a:	je     41b7e7 <main@@Base+0x149c7>
  41b390:	mov    rdi,QWORD PTR [r14]
  41b393:	call   41dc50 <flatcc_builder_end_struct@@Base>
  41b398:	mov    DWORD PTR [r13+0x0],eax
  41b39c:	mov    rbx,rbp
  41b39f:	test   eax,eax
  41b3a1:	jne    41b7fd <main@@Base+0x149dd>
  41b3a7:	jmp    41b7e7 <main@@Base+0x149c7>
  41b3ac:	mov    rdi,r14
  41b3af:	mov    rsi,rax
  41b3b2:	mov    rdx,r15
  41b3b5:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b3ba:	mov    rdx,r15
  41b3bd:	cmp    rax,r15
  41b3c0:	je     41b3ce <main@@Base+0x145ae>
  41b3c2:	cmp    BYTE PTR [rax],0x7d
  41b3c5:	je     41b814 <main@@Base+0x149f4>
  41b3cb:	mov    rdx,rax
  41b3ce:	mov    QWORD PTR [rsp+0x8],r13
  41b3d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3dd:	nop    DWORD PTR [rax]
  41b3e0:	mov    rsi,r15
  41b3e3:	cmp    rdx,r15
  41b3e6:	je     41b416 <main@@Base+0x145f6>
  41b3e8:	cmp    BYTE PTR [rdx],0x22
  41b3eb:	jne    41b400 <main@@Base+0x145e0>
  41b3ed:	add    rdx,0x1
  41b3f1:	mov    rsi,rdx
  41b3f4:	jmp    41b416 <main@@Base+0x145f6>
  41b3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b400:	mov    ecx,0x5
  41b405:	mov    rdi,r14
  41b408:	mov    rsi,rdx
  41b40b:	mov    rdx,r15
  41b40e:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b413:	mov    rsi,rax
  41b416:	mov    rax,r15
  41b419:	sub    rax,rsi
  41b41c:	cmp    rax,0x8
  41b420:	jb     41b430 <main@@Base+0x14610>
  41b422:	movbe  rax,QWORD PTR [rsi]
  41b427:	jmp    41b4b6 <main@@Base+0x14696>
  41b42c:	nop    DWORD PTR [rax+0x0]
  41b430:	and    al,0xf
  41b432:	add    al,0xff
  41b434:	cmp    al,0x7
  41b436:	ja     41b4e0 <main@@Base+0x146c0>
  41b43c:	movzx  eax,al
  41b43f:	lea    rcx,[rip+0x186a2]        # 433ae8 <_IO_stdin_used@@Base+0xae8>
  41b446:	movsxd rax,DWORD PTR [rcx+rax*4]
  41b44a:	add    rax,rcx
  41b44d:	xor    r8d,r8d
  41b450:	xor    r9d,r9d
  41b453:	xor    ecx,ecx
  41b455:	xor    edx,edx
  41b457:	xor    ebp,ebp
  41b459:	xor    ebx,ebx
  41b45b:	xor    edi,edi
  41b45d:	jmp    rax
  41b45f:	movsx  r8,BYTE PTR [rsi+0x7]
  41b464:	movsx  r9,BYTE PTR [rsi+0x6]
  41b469:	shl    r9,0x8
  41b46d:	or     r9,r8
  41b470:	movsx  rcx,BYTE PTR [rsi+0x5]
  41b475:	shl    rcx,0x10
  41b479:	or     rcx,r9
  41b47c:	movsx  rdx,BYTE PTR [rsi+0x4]
  41b481:	shl    rdx,0x18
  41b485:	or     rdx,rcx
  41b488:	movsx  rbp,BYTE PTR [rsi+0x3]
  41b48d:	shl    rbp,0x20
  41b491:	or     rbp,rdx
  41b494:	movsx  rbx,BYTE PTR [rsi+0x2]
  41b499:	shl    rbx,0x28
  41b49d:	or     rbx,rbp
  41b4a0:	movsx  rdi,BYTE PTR [rsi+0x1]
  41b4a5:	shl    rdi,0x30
  41b4a9:	or     rdi,rbx
  41b4ac:	movzx  eax,BYTE PTR [rsi]
  41b4af:	shl    rax,0x38
  41b4b3:	or     rax,rdi
  41b4b6:	movabs rcx,0x626f6f6b735f7265
  41b4c0:	cmp    rax,rcx
  41b4c3:	jne    41b4e0 <main@@Base+0x146c0>
  41b4c5:	lea    r13,[rsi+0x8]
  41b4c9:	mov    rax,r15
  41b4cc:	sub    rax,r13
  41b4cf:	cmp    rax,0x8
  41b4d3:	jb     41b4f0 <main@@Base+0x146d0>
  41b4d5:	movbe  rdx,QWORD PTR [r13+0x0]
  41b4db:	jmp    41b581 <main@@Base+0x14761>
  41b4e0:	mov    rdi,r14
  41b4e3:	mov    rdx,r15
  41b4e6:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41b4eb:	jmp    41b6c3 <main@@Base+0x148a3>
  41b4f0:	mov    ecx,eax
  41b4f2:	and    cl,0xf
  41b4f5:	add    cl,0xff
  41b4f8:	cmp    cl,0x7
  41b4fb:	ja     41b6b0 <main@@Base+0x14890>
  41b501:	movzx  ecx,cl
  41b504:	lea    rdx,[rip+0x185fd]        # 433b08 <_IO_stdin_used@@Base+0xb08>
  41b50b:	mov    rdi,rdx
  41b50e:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41b512:	add    rdx,rdi
  41b515:	xor    r8d,r8d
  41b518:	xor    r9d,r9d
  41b51b:	xor    r10d,r10d
  41b51e:	xor    edi,edi
  41b520:	xor    ebx,ebx
  41b522:	xor    ebp,ebp
  41b524:	xor    ecx,ecx
  41b526:	jmp    rdx
  41b528:	movsx  r8,BYTE PTR [rsi+0xf]
  41b52d:	movsx  r9,BYTE PTR [rsi+0xe]
  41b532:	shl    r9,0x8
  41b536:	or     r9,r8
  41b539:	movsx  r10,BYTE PTR [rsi+0xd]
  41b53e:	shl    r10,0x10
  41b542:	or     r10,r9
  41b545:	movsx  rdi,BYTE PTR [rsi+0xc]
  41b54a:	shl    rdi,0x18
  41b54e:	or     rdi,r10
  41b551:	movsx  rbx,BYTE PTR [rsi+0xb]
  41b556:	shl    rbx,0x20
  41b55a:	or     rbx,rdi
  41b55d:	movsx  rbp,BYTE PTR [rsi+0xa]
  41b562:	shl    rbp,0x28
  41b566:	or     rbp,rbx
  41b569:	movsx  rcx,BYTE PTR [rsi+0x9]
  41b56e:	shl    rcx,0x30
  41b572:	or     rcx,rbp
  41b575:	movzx  edx,BYTE PTR [r13+0x0]
  41b57a:	shl    rdx,0x38
  41b57e:	or     rdx,rcx
  41b581:	shr    rdx,0x30
  41b585:	cmp    rdx,0x6164
  41b58c:	jne    41b6b0 <main@@Base+0x14890>
  41b592:	cmp    rax,0x3
  41b596:	jl     41b6b0 <main@@Base+0x14890>
  41b59c:	cmp    BYTE PTR [rsi+0xa],0x22
  41b5a0:	jne    41b6b0 <main@@Base+0x14890>
  41b5a6:	lea    rax,[rsi+0xb]
  41b5aa:	mov    rcx,r15
  41b5ad:	sub    rcx,rax
  41b5b0:	cmp    rcx,0x2
  41b5b4:	jl     41b5d1 <main@@Base+0x147b1>
  41b5b6:	cmp    BYTE PTR [rax],0x20
  41b5b9:	jg     41b5df <main@@Base+0x147bf>
  41b5bb:	jne    41b5d1 <main@@Base+0x147b1>
  41b5bd:	cmp    BYTE PTR [rsi+0xc],0x20
  41b5c1:	jle    41b5d1 <main@@Base+0x147b1>
  41b5c3:	add    rsi,0xc
  41b5c7:	mov    rax,rsi
  41b5ca:	cmp    rax,r15
  41b5cd:	jne    41b5e4 <main@@Base+0x147c4>
  41b5cf:	jmp    41b60d <main@@Base+0x147ed>
  41b5d1:	mov    rdi,r14
  41b5d4:	mov    rsi,rax
  41b5d7:	mov    rdx,r15
  41b5da:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b5df:	cmp    rax,r15
  41b5e2:	je     41b60d <main@@Base+0x147ed>
  41b5e4:	cmp    BYTE PTR [rax],0x3a
  41b5e7:	jne    41b60d <main@@Base+0x147ed>
  41b5e9:	lea    rbp,[rax+0x1]
  41b5ed:	mov    rcx,r15
  41b5f0:	sub    rcx,rbp
  41b5f3:	cmp    rcx,0x2
  41b5f7:	jl     41b622 <main@@Base+0x14802>
  41b5f9:	cmp    BYTE PTR [rbp+0x0],0x20
  41b5fd:	jg     41b633 <main@@Base+0x14813>
  41b5ff:	jne    41b622 <main@@Base+0x14802>
  41b601:	cmp    BYTE PTR [rax+0x2],0x20
  41b605:	jle    41b622 <main@@Base+0x14802>
  41b607:	add    rax,0x2
  41b60b:	jmp    41b630 <main@@Base+0x14810>
  41b60d:	mov    ecx,0x4
  41b612:	mov    rdi,r14
  41b615:	mov    rsi,rax
  41b618:	mov    rdx,r15
  41b61b:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b620:	jmp    41b630 <main@@Base+0x14810>
  41b622:	mov    rdi,r14
  41b625:	mov    rsi,rbp
  41b628:	mov    rdx,r15
  41b62b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b630:	mov    rbp,rax
  41b633:	cmp    r13,rbp
  41b636:	je     41b6b0 <main@@Base+0x14890>
  41b638:	mov    QWORD PTR [rsp+0x10],0x0
  41b641:	mov    DWORD PTR [rsp+0x4],0x0
  41b649:	mov    DWORD PTR [rsp],0x0
  41b650:	xor    r13d,r13d
  41b653:	cmp    rbp,r15
  41b656:	je     41b768 <main@@Base+0x14948>
  41b65c:	mov    rdi,r14
  41b65f:	mov    rsi,rbp
  41b662:	mov    rdx,r15
  41b665:	lea    rcx,[rsp+0x4]
  41b66a:	lea    r8,[rsp+0x10]
  41b66f:	call   425160 <flatcc_json_parser_integer@@Base>
  41b674:	cmp    rax,rbp
  41b677:	je     41b772 <main@@Base+0x14952>
  41b67d:	mov    rcx,QWORD PTR [rsp+0x10]
  41b682:	cmp    DWORD PTR [rsp+0x4],0x0
  41b687:	je     41b77c <main@@Base+0x1495c>
  41b68d:	mov    edx,0x80000001
  41b692:	cmp    rcx,rdx
  41b695:	jb     41b79f <main@@Base+0x1497f>
  41b69b:	mov    ecx,0x8
  41b6a0:	jmp    41b78a <main@@Base+0x1496a>
  41b6a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6af:	nop
  41b6b0:	mov    rdi,r14
  41b6b3:	mov    rsi,r13
  41b6b6:	mov    rdx,r15
  41b6b9:	call   423b80 <flatcc_json_parser_unmatched_symbol@@Base>
  41b6be:	mov    r13,QWORD PTR [rsp+0x8]
  41b6c3:	mov    rcx,r15
  41b6c6:	sub    rcx,rax
  41b6c9:	cmp    rcx,0x2
  41b6cd:	jl     41b6f0 <main@@Base+0x148d0>
  41b6cf:	cmp    BYTE PTR [rax],0x20
  41b6d2:	jg     41b6fe <main@@Base+0x148de>
  41b6d4:	jne    41b6f0 <main@@Base+0x148d0>
  41b6d6:	cmp    BYTE PTR [rax+0x1],0x20
  41b6da:	jle    41b6f0 <main@@Base+0x148d0>
  41b6dc:	add    rax,0x1
  41b6e0:	cmp    rax,r15
  41b6e3:	jne    41b707 <main@@Base+0x148e7>
  41b6e5:	jmp    41b7e4 <main@@Base+0x149c4>
  41b6ea:	nop    WORD PTR [rax+rax*1+0x0]
  41b6f0:	mov    rdi,r14
  41b6f3:	mov    rsi,rax
  41b6f6:	mov    rdx,r15
  41b6f9:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b6fe:	cmp    rax,r15
  41b701:	je     41b7e4 <main@@Base+0x149c4>
  41b707:	movzx  ecx,BYTE PTR [rax]
  41b70a:	cmp    cl,0x2c
  41b70d:	jne    41b80f <main@@Base+0x149ef>
  41b713:	lea    rdx,[rax+0x1]
  41b717:	mov    rcx,r15
  41b71a:	sub    rcx,rdx
  41b71d:	cmp    rcx,0x2
  41b721:	jl     41b740 <main@@Base+0x14920>
  41b723:	cmp    BYTE PTR [rdx],0x20
  41b726:	jg     41b751 <main@@Base+0x14931>
  41b728:	jne    41b740 <main@@Base+0x14920>
  41b72a:	cmp    BYTE PTR [rax+0x2],0x20
  41b72e:	jle    41b740 <main@@Base+0x14920>
  41b730:	add    rax,0x2
  41b734:	jmp    41b74e <main@@Base+0x1492e>
  41b736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b740:	mov    rdi,r14
  41b743:	mov    rsi,rdx
  41b746:	mov    rdx,r15
  41b749:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b74e:	mov    rdx,rax
  41b751:	cmp    rdx,r15
  41b754:	je     41b83f <main@@Base+0x14a1f>
  41b75a:	cmp    BYTE PTR [rdx],0x7d
  41b75d:	jne    41b3e0 <main@@Base+0x145c0>
  41b763:	jmp    41b84f <main@@Base+0x14a2f>
  41b768:	mov    rax,r15
  41b76b:	cmp    rbp,rax
  41b76e:	jne    41b7db <main@@Base+0x149bb>
  41b770:	jmp    41b7ad <main@@Base+0x1498d>
  41b772:	mov    rax,rbp
  41b775:	cmp    rbp,rax
  41b778:	jne    41b7db <main@@Base+0x149bb>
  41b77a:	jmp    41b7ad <main@@Base+0x1498d>
  41b77c:	test   rcx,0xffffffff80000000
  41b783:	je     41b7a2 <main@@Base+0x14982>
  41b785:	mov    ecx,0x7
  41b78a:	mov    rdi,r14
  41b78d:	mov    rsi,rax
  41b790:	mov    rdx,r15
  41b793:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b798:	cmp    rbp,rax
  41b79b:	jne    41b7db <main@@Base+0x149bb>
  41b79d:	jmp    41b7ad <main@@Base+0x1498d>
  41b79f:	neg    rcx
  41b7a2:	mov    DWORD PTR [rsp],ecx
  41b7a5:	mov    r13d,ecx
  41b7a8:	cmp    rbp,rax
  41b7ab:	jne    41b7db <main@@Base+0x149bb>
  41b7ad:	mov    rdi,r14
  41b7b0:	mov    rsi,rbp
  41b7b3:	mov    rdx,r15
  41b7b6:	lea    rcx,[rip+0x25f63]        # 441720 <__data_start@@Base+0x670>
  41b7bd:	mov    r8,rsp
  41b7c0:	call   414540 <main@@Base+0xd720>
  41b7c5:	cmp    rax,rbp
  41b7c8:	je     41b8a0 <main@@Base+0x14a80>
  41b7ce:	cmp    rax,r15
  41b7d1:	je     41b8a0 <main@@Base+0x14a80>
  41b7d7:	mov    r13d,DWORD PTR [rsp]
  41b7db:	mov    DWORD PTR [r12],r13d
  41b7df:	jmp    41b6be <main@@Base+0x1489e>
  41b7e4:	mov    rbx,r15
  41b7e7:	mov    ecx,0x21
  41b7ec:	mov    rdi,r14
  41b7ef:	mov    rsi,rbx
  41b7f2:	mov    rdx,r15
  41b7f5:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b7fa:	mov    rbp,rax
  41b7fd:	mov    rax,rbp
  41b800:	add    rsp,0x18
  41b804:	pop    rbx
  41b805:	pop    r12
  41b807:	pop    r13
  41b809:	pop    r14
  41b80b:	pop    r15
  41b80d:	pop    rbp
  41b80e:	ret    
  41b80f:	cmp    cl,0x7d
  41b812:	jne    41b890 <main@@Base+0x14a70>
  41b814:	lea    rbp,[rax+0x1]
  41b818:	mov    rcx,r15
  41b81b:	sub    rcx,rbp
  41b81e:	cmp    rcx,0x2
  41b822:	jl     41b87d <main@@Base+0x14a5d>
  41b824:	cmp    BYTE PTR [rbp+0x0],0x20
  41b828:	jg     41b384 <main@@Base+0x14564>
  41b82e:	jne    41b87d <main@@Base+0x14a5d>
  41b830:	cmp    BYTE PTR [rax+0x2],0x20
  41b834:	jle    41b87d <main@@Base+0x14a5d>
  41b836:	add    rax,0x2
  41b83a:	jmp    41b381 <main@@Base+0x14561>
  41b83f:	mov    ecx,0xa
  41b844:	mov    rdi,r14
  41b847:	mov    rsi,r15
  41b84a:	jmp    41b379 <main@@Base+0x14559>
  41b84f:	lea    rbp,[rdx+0x1]
  41b853:	mov    rax,r15
  41b856:	sub    rax,rbp
  41b859:	cmp    rax,0x2
  41b85d:	jl     41b87d <main@@Base+0x14a5d>
  41b85f:	cmp    BYTE PTR [rbp+0x0],0x20
  41b863:	jg     41b384 <main@@Base+0x14564>
  41b869:	jne    41b87d <main@@Base+0x14a5d>
  41b86b:	cmp    BYTE PTR [rdx+0x2],0x20
  41b86f:	jle    41b87d <main@@Base+0x14a5d>
  41b871:	add    rdx,0x2
  41b875:	mov    rbp,rdx
  41b878:	jmp    41b384 <main@@Base+0x14564>
  41b87d:	mov    rdi,r14
  41b880:	mov    rsi,rbp
  41b883:	mov    rdx,r15
  41b886:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b88b:	jmp    41b381 <main@@Base+0x14561>
  41b890:	mov    ecx,0xa
  41b895:	mov    rdi,r14
  41b898:	mov    rsi,rax
  41b89b:	jmp    41b379 <main@@Base+0x14559>
  41b8a0:	mov    ecx,0x21
  41b8a5:	mov    rdi,r14
  41b8a8:	mov    rsi,rax
  41b8ab:	mov    rdx,r15
  41b8ae:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b8b3:	mov    rbp,rax
  41b8b6:	mov    r13,QWORD PTR [rsp+0x8]
  41b8bb:	jmp    41b384 <main@@Base+0x14564>
  41b8c0:	push   rbp
  41b8c1:	push   r15
  41b8c3:	push   r14
  41b8c5:	push   r13
  41b8c7:	push   r12
  41b8c9:	push   rbx
  41b8ca:	sub    rsp,0x38
  41b8ce:	mov    r15,r8
  41b8d1:	mov    rbp,rcx
  41b8d4:	mov    r13,rdx
  41b8d7:	mov    rbx,rsi
  41b8da:	mov    r14,rdi
  41b8dd:	mov    WORD PTR [r8],0x0
  41b8e3:	cmp    rsi,rdx
  41b8e6:	je     41b909 <main@@Base+0x14ae9>
  41b8e8:	cmp    BYTE PTR [rbx],0x22
  41b8eb:	jne    41b8f3 <main@@Base+0x14ad3>
  41b8ed:	add    rbx,0x1
  41b8f1:	jmp    41b909 <main@@Base+0x14ae9>
  41b8f3:	mov    ecx,0x5
  41b8f8:	mov    rdi,r14
  41b8fb:	mov    rsi,rbx
  41b8fe:	mov    rdx,r13
  41b901:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b906:	mov    rbx,rax
  41b909:	mov    rax,r13
  41b90c:	sub    rax,rbx
  41b90f:	cmp    rax,0x2
  41b913:	jl     41b930 <main@@Base+0x14b10>
  41b915:	cmp    BYTE PTR [rbx],0x20
  41b918:	jg     41b941 <main@@Base+0x14b21>
  41b91a:	jne    41b930 <main@@Base+0x14b10>
  41b91c:	cmp    BYTE PTR [rbx+0x1],0x20
  41b920:	jle    41b930 <main@@Base+0x14b10>
  41b922:	add    rbx,0x1
  41b926:	cmp    rbx,r13
  41b929:	jne    41b94a <main@@Base+0x14b2a>
  41b92b:	jmp    41ba37 <main@@Base+0x14c17>
  41b930:	mov    rdi,r14
  41b933:	mov    rsi,rbx
  41b936:	mov    rdx,r13
  41b939:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  41b93e:	mov    rbx,rax
  41b941:	cmp    rbx,r13
  41b944:	je     41ba37 <main@@Base+0x14c17>
  41b94a:	lea    rcx,[rbp+0x8]
  41b94e:	mov    DWORD PTR [rsp+0xc],0x0
  41b956:	mov    rax,rbp
  41b959:	lea    r12,[rsp+0x18]
  41b95e:	mov    QWORD PTR [rsp+0x20],r15
  41b963:	mov    QWORD PTR [rsp+0x28],rbp
  41b968:	mov    QWORD PTR [rsp+0x10],rcx
  41b96d:	mov    rbp,QWORD PTR [rax]
  41b970:	mov    r15,rcx
  41b973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b97d:	nop    DWORD PTR [rax]
  41b980:	mov    rdi,r14
  41b983:	mov    rsi,rbx
  41b986:	mov    rdx,r13
  41b989:	lea    rcx,[rsp+0x1c]
  41b98e:	lea    r8,[rsp+0x30]
  41b993:	mov    r9,r12
  41b996:	call   rbp
  41b998:	cmp    rax,r13
  41b99b:	je     41ba37 <main@@Base+0x14c17>
  41b9a1:	mov    rbp,rax
  41b9a4:	cmp    rax,rbx
  41b9a7:	jne    41b9c0 <main@@Base+0x14ba0>
  41b9a9:	mov    rbp,QWORD PTR [r15]
  41b9ac:	add    r15,0x8
  41b9b0:	test   rbp,rbp
  41b9b3:	jne    41b980 <main@@Base+0x14b60>
  41b9b5:	jmp    41ba3c <main@@Base+0x14c1c>
  41b9ba:	nop    WORD PTR [rax+rax*1+0x0]
  41b9c0:	cmp    DWORD PTR [rsp+0x1c],0x0
  41b9c5:	je     41b9e1 <main@@Base+0x14bc1>
  41b9c7:	mov    ecx,0x8
  41b9cc:	mov    rdi,r14
  41b9cf:	mov    rsi,rbp
  41b9d2:	mov    rdx,r13
  41b9d5:	call   423620 <flatcc_json_parser_set_error@@Base>
  41b9da:	mov    r15,QWORD PTR [rsp+0x20]
  41b9df:	jmp    41ba10 <main@@Base+0x14bf0>
  41b9e1:	mov    rax,QWORD PTR [rsp+0x30]
  41b9e6:	cmp    rax,0x10000
  41b9ec:	mov    r15,QWORD PTR [rsp+0x20]
  41b9f1:	jb     41ba08 <main@@Base+0x14be8>
  41b9f3:	mov    ecx,0x7
  41b9f8:	mov    rdi,r14
  41b9fb:	mov    rsi,rbp
  41b9fe:	mov    rdx,r13
  41ba01:	call   423620 <flatcc_json_parser_set_error@@Base>
  41ba06:	jmp    41ba10 <main@@Base+0x14bf0>
  41ba08:	mov    DWORD PTR [rsp+0xc],eax
  41ba0c:	mov    rax,rbp
  41ba0f:	nop
  41ba10:	mov    rcx,QWORD PTR [rsp+0x10]
  41ba15:	cmp    rax,r13
  41ba18:	je     41ba37 <main@@Base+0x14c17>
  41ba1a:	mov    eax,DWORD PTR [rsp+0xc]
  41ba1e:	add    WORD PTR [r15],ax
  41ba22:	cmp    DWORD PTR [rsp+0x18],0x0
  41ba27:	mov    rbx,rbp
  41ba2a:	mov    rax,QWORD PTR [rsp+0x28]
  41ba2f:	jne    41b96d <main@@Base+0x14b4d>
  41ba35:	jmp    41ba52 <main@@Base+0x14c32>
  41ba37:	mov    rbp,r13
  41ba3a:	jmp    41ba52 <main@@Base+0x14c32>
  41ba3c:	mov    ecx,0x17
  41ba41:	mov    rdi,r14
  41ba44:	mov    rsi,rbx
  41ba47:	mov    rdx,r13
  41ba4a:	call   423620 <flatcc_json_parser_set_error@@Base>
  41ba4f:	mov    rbp,rax
  41ba52:	mov    rax,rbp
  41ba55:	add    rsp,0x38
  41ba59:	pop    rbx
  41ba5a:	pop    r12
  41ba5c:	pop    r13
  41ba5e:	pop    r14
  41ba60:	pop    r15
  41ba62:	pop    rbp
  41ba63:	ret    
  41ba64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba6e:	xchg   ax,ax
  41ba70:	push   r14
  41ba72:	push   rbx
  41ba73:	push   rax
  41ba74:	mov    r14,rsi
  41ba77:	mov    rbx,rdi
  41ba7a:	lea    r8,[rip+0x1ad4e]        # 4367cf <_IO_stdin_used@@Base+0x37cf>
  41ba81:	xor    esi,esi
  41ba83:	xor    ecx,ecx
  41ba85:	mov    r9d,0x1
  41ba8b:	mov    rdx,r14
  41ba8e:	call   42a9e0 <flatcc_json_printer_float_struct_field@@Base>
  41ba93:	lea    r8,[rip+0x1d7eb]        # 439285 <flatcc_builder_padding_base@@Base+0x26e5>
  41ba9a:	mov    esi,0x1
  41ba9f:	mov    ecx,0x4
  41baa4:	mov    r9d,0x1
  41baaa:	mov    rdi,rbx
  41baad:	mov    rdx,r14
  41bab0:	call   42a9e0 <flatcc_json_printer_float_struct_field@@Base>
  41bab5:	lea    r8,[rip+0x1aecc]        # 436988 <_IO_stdin_used@@Base+0x3988>
  41babc:	mov    esi,0x2
  41bac1:	mov    ecx,0x8
  41bac6:	mov    r9d,0x1
  41bacc:	mov    rdi,rbx
  41bacf:	mov    rdx,r14
  41bad2:	call   42a9e0 <flatcc_json_printer_float_struct_field@@Base>
  41bad7:	lea    r8,[rip+0x1aeac]        # 43698a <_IO_stdin_used@@Base+0x398a>
  41bade:	mov    esi,0x3
  41bae3:	mov    ecx,0x10
  41bae8:	mov    r9d,0x5
  41baee:	mov    rdi,rbx
  41baf1:	mov    rdx,r14
  41baf4:	call   42aa40 <flatcc_json_printer_double_struct_field@@Base>
  41baf9:	lea    rax,[rip+0x60]        # 41bb60 <main@@Base+0x14d40>
  41bb00:	mov    QWORD PTR [rsp],rax
  41bb04:	lea    r8,[rip+0x1ae85]        # 436990 <_IO_stdin_used@@Base+0x3990>
  41bb0b:	mov    esi,0x4
  41bb10:	mov    ecx,0x18
  41bb15:	mov    r9d,0x5
  41bb1b:	mov    rdi,rbx
  41bb1e:	mov    rdx,r14
  41bb21:	call   42ada0 <flatcc_json_printer_int8_enum_struct_field@@Base>
  41bb26:	lea    rax,[rip+0x1e3]        # 41bd10 <main@@Base+0x14ef0>
  41bb2d:	mov    QWORD PTR [rsp],rax
  41bb31:	lea    r8,[rip+0x1ae5e]        # 436996 <_IO_stdin_used@@Base+0x3996>
  41bb38:	mov    esi,0x5
  41bb3d:	mov    ecx,0x1a
  41bb42:	mov    r9d,0x5
  41bb48:	mov    rdi,rbx
  41bb4b:	mov    rdx,r14
  41bb4e:	call   4319d0 <flatcc_json_printer_embedded_struct_field@@Base>
  41bb53:	add    rsp,0x8
  41bb57:	pop    rbx
  41bb58:	pop    r14
  41bb5a:	ret    
  41bb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb60:	push   rbp
  41bb61:	push   r15
  41bb63:	push   r14
  41bb65:	push   rbx
  41bb66:	push   rax
  41bb67:	mov    ebp,esi
  41bb69:	mov    rbx,rdi
  41bb6c:	movzx  ecx,bpl
  41bb70:	lea    eax,[rcx-0x1]
  41bb73:	xor    r14d,r14d
  41bb76:	test   eax,ecx
  41bb78:	setne  al
  41bb7b:	test   cl,cl
  41bb7d:	je     41bbd4 <main@@Base+0x14db4>
  41bb7f:	mov    ecx,ebp
  41bb81:	and    ecx,0xf4
  41bb87:	jne    41bbd4 <main@@Base+0x14db4>
  41bb89:	mov    r14b,al
  41bb8c:	mov    rdi,rbx
  41bb8f:	mov    esi,r14d
  41bb92:	call   428b20 <flatcc_json_printer_delimit_enum_flags@@Base>
  41bb97:	xor    esi,esi
  41bb99:	test   bpl,0x1
  41bb9d:	jne    41bbea <main@@Base+0x14dca>
  41bb9f:	test   bpl,0x2
  41bba3:	jne    41bc0b <main@@Base+0x14deb>
  41bba5:	test   bpl,0x8
  41bba9:	je     41bbbf <main@@Base+0x14d9f>
  41bbab:	lea    rdx,[rip+0x1adf4]        # 4369a6 <_IO_stdin_used@@Base+0x39a6>
  41bbb2:	mov    ecx,0x4
  41bbb7:	mov    rdi,rbx
  41bbba:	call   428b40 <flatcc_json_printer_enum_flag@@Base>
  41bbbf:	mov    rdi,rbx
  41bbc2:	mov    esi,r14d
  41bbc5:	add    rsp,0x8
  41bbc9:	pop    rbx
  41bbca:	pop    r14
  41bbcc:	pop    r15
  41bbce:	pop    rbp
  41bbcf:	jmp    428b20 <flatcc_json_printer_delimit_enum_flags@@Base>
  41bbd4:	movsx  esi,bpl
  41bbd8:	mov    rdi,rbx
  41bbdb:	add    rsp,0x8
  41bbdf:	pop    rbx
  41bbe0:	pop    r14
  41bbe2:	pop    r15
  41bbe4:	pop    rbp
  41bbe5:	jmp    428790 <flatcc_json_printer_int8@@Base>
  41bbea:	lea    rdx,[rip+0x1adab]        # 43699c <_IO_stdin_used@@Base+0x399c>
  41bbf1:	xor    esi,esi
  41bbf3:	mov    ecx,0x3
  41bbf8:	mov    rdi,rbx
  41bbfb:	call   428b40 <flatcc_json_printer_enum_flag@@Base>
  41bc00:	mov    esi,0x1
  41bc05:	test   bpl,0x2
  41bc09:	je     41bba5 <main@@Base+0x14d85>
  41bc0b:	lea    r15d,[rsi+0x1]
  41bc0f:	lea    rdx,[rip+0x1ad8a]        # 4369a0 <_IO_stdin_used@@Base+0x39a0>
  41bc16:	mov    ecx,0x5
  41bc1b:	mov    rdi,rbx
  41bc1e:	call   428b40 <flatcc_json_printer_enum_flag@@Base>
  41bc23:	mov    esi,r15d
  41bc26:	test   bpl,0x8
  41bc2a:	jne    41bbab <main@@Base+0x14d8b>
  41bc30:	jmp    41bbbf <main@@Base+0x14d9f>
  41bc32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc3c:	nop    DWORD PTR [rax+0x0]
  41bc40:	add    sil,0xff
  41bc44:	cmp    sil,0x3
  41bc48:	ja     41bc6f <main@@Base+0x14e4f>
  41bc4a:	movzx  eax,sil
  41bc4e:	lea    rcx,[rip+0x17ed3]        # 433b28 <_IO_stdin_used@@Base+0xb28>
  41bc55:	movsxd rax,DWORD PTR [rcx+rax*4]
  41bc59:	add    rax,rcx
  41bc5c:	jmp    rax
  41bc5e:	lea    rsi,[rip+0x1ad46]        # 4369ab <_IO_stdin_used@@Base+0x39ab>
  41bc65:	mov    edx,0x7
  41bc6a:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41bc6f:	lea    rsi,[rip+0x1c6a4]        # 43831a <flatcc_builder_padding_base@@Base+0x177a>
  41bc76:	mov    edx,0x4
  41bc7b:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41bc80:	lea    rsi,[rip+0x1ad2c]        # 4369b3 <_IO_stdin_used@@Base+0x39b3>
  41bc87:	mov    edx,0x17
  41bc8c:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41bc91:	lea    rsi,[rip+0x1ad33]        # 4369cb <_IO_stdin_used@@Base+0x39cb>
  41bc98:	mov    edx,0x8
  41bc9d:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41bca2:	lea    rsi,[rip+0x1ad2b]        # 4369d4 <_IO_stdin_used@@Base+0x39d4>
  41bca9:	mov    edx,0x3
  41bcae:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41bcb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bcbd:	nop    DWORD PTR [rax]
  41bcc0:	mov    al,BYTE PTR [rsi+0xc]
  41bcc3:	add    al,0xff
  41bcc5:	cmp    al,0x3
  41bcc7:	ja     41bce8 <main@@Base+0x14ec8>
  41bcc9:	movzx  eax,al
  41bccc:	lea    rcx,[rip+0x17e65]        # 433b38 <_IO_stdin_used@@Base+0xb38>
  41bcd3:	movsxd rax,DWORD PTR [rcx+rax*4]
  41bcd7:	add    rax,rcx
  41bcda:	jmp    rax
  41bcdc:	lea    rdx,[rip+0xffffffffffff4b0d]        # 4107f0 <main@@Base+0x99d0>
  41bce3:	jmp    431790 <flatcc_json_printer_union_table@@Base>
  41bce8:	ret    
  41bce9:	lea    rdx,[rip+0x1b0]        # 41bea0 <main@@Base+0x15080>
  41bcf0:	jmp    431790 <flatcc_json_printer_union_table@@Base>
  41bcf5:	lea    rdx,[rip+0x254]        # 41bf50 <main@@Base+0x15130>
  41bcfc:	jmp    431790 <flatcc_json_printer_union_table@@Base>
  41bd01:	lea    rdx,[rip+0x258]        # 41bf60 <main@@Base+0x15140>
  41bd08:	jmp    431790 <flatcc_json_printer_union_table@@Base>
  41bd0d:	nop    DWORD PTR [rax]
  41bd10:	push   r14
  41bd12:	push   rbx
  41bd13:	push   rax
  41bd14:	mov    r14,rsi
  41bd17:	mov    rbx,rdi
  41bd1a:	lea    r8,[rip+0x1ab91]        # 4368b2 <_IO_stdin_used@@Base+0x38b2>
  41bd21:	xor    esi,esi
  41bd23:	xor    ecx,ecx
  41bd25:	mov    r9d,0x1
  41bd2b:	mov    rdx,r14
  41bd2e:	call   42a740 <flatcc_json_printer_int16_struct_field@@Base>
  41bd33:	lea    r8,[rip+0x1ad17]        # 436a51 <_IO_stdin_used@@Base+0x3a51>
  41bd3a:	mov    esi,0x1
  41bd3f:	mov    ecx,0x2
  41bd44:	mov    r9d,0x1
  41bd4a:	mov    rdi,rbx
  41bd4d:	mov    rdx,r14
  41bd50:	add    rsp,0x8
  41bd54:	pop    rbx
  41bd55:	pop    r14
  41bd57:	jmp    42a660 <flatcc_json_printer_int8_struct_field@@Base>
  41bd5c:	nop    DWORD PTR [rax+0x0]
  41bd60:	push   r14
  41bd62:	push   rbx
  41bd63:	push   rax
  41bd64:	mov    r14,rsi
  41bd67:	mov    rbx,rdi
  41bd6a:	lea    rcx,[rip+0x1add7]        # 436b48 <_IO_stdin_used@@Base+0x3b48>
  41bd71:	xor    edx,edx
  41bd73:	mov    r8d,0x2
  41bd79:	call   428bf0 <flatcc_json_printer_string_field@@Base>
  41bd7e:	lea    rcx,[rip+0x1adc6]        # 436b4b <_IO_stdin_used@@Base+0x3b4b>
  41bd85:	mov    edx,0x1
  41bd8a:	mov    r8d,0x3
  41bd90:	xor    r9d,r9d
  41bd93:	mov    rdi,rbx
  41bd96:	mov    rsi,r14
  41bd99:	call   429770 <flatcc_json_printer_int64_field@@Base>
  41bd9e:	lea    rcx,[rip+0x1b6d1]        # 437476 <flatcc_builder_padding_base@@Base+0x8d6>
  41bda5:	mov    edx,0x2
  41bdaa:	mov    r8d,0x5
  41bdb0:	xor    r9d,r9d
  41bdb3:	mov    rdi,rbx
  41bdb6:	mov    rsi,r14
  41bdb9:	add    rsp,0x8
  41bdbd:	pop    rbx
  41bdbe:	pop    r14
  41bdc0:	jmp    429130 <flatcc_json_printer_uint16_field@@Base>
  41bdc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdcf:	nop
  41bdd0:	push   r14
  41bdd2:	push   rbx
  41bdd3:	push   rax
  41bdd4:	mov    r14,rsi
  41bdd7:	mov    rbx,rdi
  41bdda:	lea    r8,[rip+0x1ad67]        # 436b48 <_IO_stdin_used@@Base+0x3b48>
  41bde1:	xor    esi,esi
  41bde3:	xor    ecx,ecx
  41bde5:	mov    r9d,0x2
  41bdeb:	mov    rdx,r14
  41bdee:	call   42a5c0 <flatcc_json_printer_uint32_struct_field@@Base>
  41bdf3:	lea    r8,[rip+0x1ad55]        # 436b4f <_IO_stdin_used@@Base+0x3b4f>
  41bdfa:	mov    esi,0x1
  41bdff:	mov    ecx,0x4
  41be04:	mov    r9d,0x8
  41be0a:	mov    rdi,rbx
  41be0d:	mov    rdx,r14
  41be10:	add    rsp,0x8
  41be14:	pop    rbx
  41be15:	pop    r14
  41be17:	jmp    42a5c0 <flatcc_json_printer_uint32_struct_field@@Base>
  41be1c:	nop    DWORD PTR [rax+0x0]
  41be20:	ret    
  41be21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be30:	push   r14
  41be32:	push   rbx
  41be33:	push   rax
  41be34:	mov    r14,rsi
  41be37:	mov    rbx,rdi
  41be3a:	lea    rcx,[rip+0x1ad1a]        # 436b5b <_IO_stdin_used@@Base+0x3b5b>
  41be41:	xor    edx,edx
  41be43:	mov    r8d,0x4
  41be49:	xor    r9d,r9d
  41be4c:	call   428e50 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41be51:	lea    rcx,[rip+0x1ad00]        # 436b58 <_IO_stdin_used@@Base+0x3b58>
  41be58:	mov    edx,0x1
  41be5d:	mov    r8d,0x7
  41be63:	mov    r9d,0x1
  41be69:	mov    rdi,rbx
  41be6c:	mov    rsi,r14
  41be6f:	call   428e50 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41be74:	lea    rcx,[rip+0x1ace5]        # 436b60 <_IO_stdin_used@@Base+0x3b60>
  41be7b:	mov    edx,0x2
  41be80:	mov    r8d,0x6
  41be86:	xor    r9d,r9d
  41be89:	mov    rdi,rbx
  41be8c:	mov    rsi,r14
  41be8f:	add    rsp,0x8
  41be93:	pop    rbx
  41be94:	pop    r14
  41be96:	jmp    428e50 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41be9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bea0:	push   r15
  41bea2:	push   r14
  41bea4:	push   rbx
  41bea5:	sub    rsp,0x10
  41bea9:	mov    r14,rsi
  41beac:	mov    rbx,rdi
  41beaf:	lea    r15,[rip+0xfffffffffffffcaa]        # 41bb60 <main@@Base+0x14d40>
  41beb6:	mov    QWORD PTR [rsp],r15
  41beba:	lea    rcx,[rip+0x1a93f]        # 436800 <_IO_stdin_used@@Base+0x3800>
  41bec1:	xor    edx,edx
  41bec3:	mov    r8d,0x5
  41bec9:	mov    r9d,0x2
  41becf:	call   429e40 <flatcc_json_printer_int8_enum_field@@Base>
  41bed4:	mov    QWORD PTR [rsp],r15
  41bed8:	lea    rcx,[rip+0x1aaf9]        # 4369d8 <_IO_stdin_used@@Base+0x39d8>
  41bedf:	mov    edx,0x1
  41bee4:	mov    r8d,0x6
  41beea:	mov    r9d,0x2
  41bef0:	mov    rdi,rbx
  41bef3:	mov    rsi,r14
  41bef6:	call   429e40 <flatcc_json_printer_int8_enum_field@@Base>
  41befb:	lea    rcx,[rip+0x1aadd]        # 4369df <_IO_stdin_used@@Base+0x39df>
  41bf02:	mov    edx,0x2
  41bf07:	mov    r8d,0x2
  41bf0d:	mov    r9d,0x2
  41bf13:	mov    rdi,rbx
  41bf16:	mov    rsi,r14
  41bf19:	call   429020 <flatcc_json_printer_uint8_field@@Base>
  41bf1e:	lea    rcx,[rip+0x1aabd]        # 4369e2 <_IO_stdin_used@@Base+0x39e2>
  41bf25:	mov    edx,0x3
  41bf2a:	mov    r8d,0x3
  41bf30:	mov    r9d,0x2
  41bf36:	mov    rdi,rbx
  41bf39:	mov    rsi,r14
  41bf3c:	add    rsp,0x10
  41bf40:	pop    rbx
  41bf41:	pop    r14
  41bf43:	pop    r15
  41bf45:	jmp    429020 <flatcc_json_printer_uint8_field@@Base>
  41bf4a:	nop    WORD PTR [rax+rax*1+0x0]
  41bf50:	ret    
  41bf51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf60:	push   r14
  41bf62:	push   rbx
  41bf63:	push   rax
  41bf64:	mov    r14,rsi
  41bf67:	mov    rbx,rdi
  41bf6a:	lea    rcx,[rip+0x1aa75]        # 4369e6 <_IO_stdin_used@@Base+0x39e6>
  41bf71:	lea    r9,[rip+0x68]        # 41bfe0 <main@@Base+0x151c0>
  41bf78:	xor    edx,edx
  41bf7a:	mov    r8d,0x6
  41bf80:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  41bf85:	lea    rcx,[rip+0x1aa61]        # 4369ed <_IO_stdin_used@@Base+0x39ed>
  41bf8c:	lea    r9,[rip+0xcd]        # 41c060 <main@@Base+0x15240>
  41bf93:	mov    edx,0x1
  41bf98:	mov    r8d,0x5
  41bf9e:	mov    rdi,rbx
  41bfa1:	mov    rsi,r14
  41bfa4:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  41bfa9:	lea    rax,[rip+0xfffffffffffffd10]        # 41bcc0 <main@@Base+0x14ea0>
  41bfb0:	mov    QWORD PTR [rsp],rax
  41bfb4:	lea    rcx,[rip+0x1aa38]        # 4369f3 <_IO_stdin_used@@Base+0x39f3>
  41bfbb:	lea    r9,[rip+0xfffffffffffffc7e]        # 41bc40 <main@@Base+0x14e20>
  41bfc2:	mov    edx,0x3
  41bfc7:	mov    r8d,0x7
  41bfcd:	mov    rdi,rbx
  41bfd0:	mov    rsi,r14
  41bfd3:	call   430e70 <flatcc_json_printer_union_vector_field@@Base>
  41bfd8:	add    rsp,0x8
  41bfdc:	pop    rbx
  41bfdd:	pop    r14
  41bfdf:	ret    
  41bfe0:	push   r14
  41bfe2:	push   rbx
  41bfe3:	push   rax
  41bfe4:	mov    r14,rsi
  41bfe7:	mov    rbx,rdi
  41bfea:	lea    rcx,[rip+0x1aa0a]        # 4369fb <_IO_stdin_used@@Base+0x39fb>
  41bff1:	lea    r9,[rip+0x148]        # 41c140 <main@@Base+0x15320>
  41bff8:	xor    edx,edx
  41bffa:	mov    r8d,0x15
  41c000:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  41c005:	lea    rcx,[rip+0x1aa05]        # 436a11 <_IO_stdin_used@@Base+0x3a11>
  41c00c:	lea    r9,[rip+0x24d]        # 41c260 <main@@Base+0x15440>
  41c013:	mov    edx,0x1
  41c018:	mov    r8d,0x16
  41c01e:	mov    rdi,rbx
  41c021:	mov    rsi,r14
  41c024:	call   4311e0 <flatcc_json_printer_table_field@@Base>
  41c029:	lea    rcx,[rip+0x1a9f8]        # 436a28 <_IO_stdin_used@@Base+0x3a28>
  41c030:	lea    r9,[rip+0x279]        # 41c2b0 <main@@Base+0x15490>
  41c037:	mov    edx,0x2
  41c03c:	mov    r8d,0x16
  41c042:	mov    rdi,rbx
  41c045:	mov    rsi,r14
  41c048:	add    rsp,0x8
  41c04c:	pop    rbx
  41c04d:	pop    r14
  41c04f:	jmp    4311e0 <flatcc_json_printer_table_field@@Base>
  41c054:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c05e:	xchg   ax,ax
  41c060:	push   r15
  41c062:	push   r14
  41c064:	push   r12
  41c066:	push   rbx
  41c067:	push   rax
  41c068:	mov    r14,rsi
  41c06b:	mov    rbx,rdi
  41c06e:	lea    r12,[rip+0x32b]        # 41c3a0 <main@@Base+0x15580>
  41c075:	mov    QWORD PTR [rsp],r12
  41c079:	lea    rcx,[rip+0x1aa3e]        # 436abe <_IO_stdin_used@@Base+0x3abe>
  41c080:	lea    r15,[rip+0x279]        # 41c300 <main@@Base+0x154e0>
  41c087:	mov    edx,0x1
  41c08c:	mov    r8d,0xe
  41c092:	mov    r9,r15
  41c095:	call   431370 <flatcc_json_printer_union_field@@Base>
  41c09a:	mov    QWORD PTR [rsp],r12
  41c09e:	lea    rcx,[rip+0x1aa28]        # 436acd <_IO_stdin_used@@Base+0x3acd>
  41c0a5:	mov    edx,0x3
  41c0aa:	mov    r8d,0xa
  41c0b0:	mov    rdi,rbx
  41c0b3:	mov    rsi,r14
  41c0b6:	mov    r9,r15
  41c0b9:	call   431370 <flatcc_json_printer_union_field@@Base>
  41c0be:	mov    QWORD PTR [rsp],r12
  41c0c2:	lea    rcx,[rip+0x1aa0f]        # 436ad8 <_IO_stdin_used@@Base+0x3ad8>
  41c0c9:	mov    edx,0x5
  41c0ce:	mov    r8d,0x9
  41c0d4:	mov    rdi,rbx
  41c0d7:	mov    rsi,r14
  41c0da:	mov    r9,r15
  41c0dd:	call   431370 <flatcc_json_printer_union_field@@Base>
  41c0e2:	mov    QWORD PTR [rsp],r12
  41c0e6:	lea    rcx,[rip+0x1a9f5]        # 436ae2 <_IO_stdin_used@@Base+0x3ae2>
  41c0ed:	mov    edx,0x7
  41c0f2:	mov    r8d,0x5
  41c0f8:	mov    rdi,rbx
  41c0fb:	mov    rsi,r14
  41c0fe:	mov    r9,r15
  41c101:	call   431370 <flatcc_json_printer_union_field@@Base>
  41c106:	mov    QWORD PTR [rsp],r12
  41c10a:	lea    rcx,[rip+0x1a9d7]        # 436ae8 <_IO_stdin_used@@Base+0x3ae8>
  41c111:	mov    edx,0x9
  41c116:	mov    r8d,0xa
  41c11c:	mov    rdi,rbx
  41c11f:	mov    rsi,r14
  41c122:	mov    r9,r15
  41c125:	call   430e70 <flatcc_json_printer_union_vector_field@@Base>
  41c12a:	add    rsp,0x8
  41c12e:	pop    rbx
  41c12f:	pop    r12
  41c131:	pop    r14
  41c133:	pop    r15
  41c135:	ret    
  41c136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c140:	push   r14
  41c142:	push   rbx
  41c143:	push   rax
  41c144:	mov    r14,rsi
  41c147:	mov    rbx,rdi
  41c14a:	lea    rcx,[rip+0x1a8ee]        # 436a3f <_IO_stdin_used@@Base+0x3a3f>
  41c151:	xor    edx,edx
  41c153:	mov    r8d,0x4
  41c159:	call   428bf0 <flatcc_json_printer_string_field@@Base>
  41c15e:	lea    rcx,[rip+0x1a8df]        # 436a44 <_IO_stdin_used@@Base+0x3a44>
  41c165:	mov    edx,0x1
  41c16a:	mov    r8d,0x9
  41c170:	xor    r9d,r9d
  41c173:	mov    rdi,rbx
  41c176:	mov    rsi,r14
  41c179:	call   4292d0 <flatcc_json_printer_uint32_field@@Base>
  41c17e:	lea    rcx,[rip+0x1a8c9]        # 436a4e <_IO_stdin_used@@Base+0x3a4e>
  41c185:	mov    edx,0x2
  41c18a:	mov    r8d,0x4
  41c190:	mov    rdi,rbx
  41c193:	mov    rsi,r14
  41c196:	call   428bf0 <flatcc_json_printer_string_field@@Base>
  41c19b:	lea    rcx,[rip+0x1a8b1]        # 436a53 <_IO_stdin_used@@Base+0x3a53>
  41c1a2:	mov    edx,0x3
  41c1a7:	mov    r8d,0x8
  41c1ad:	xor    r9d,r9d
  41c1b0:	mov    rdi,rbx
  41c1b3:	mov    rsi,r14
  41c1b6:	call   429770 <flatcc_json_printer_int64_field@@Base>
  41c1bb:	lea    rcx,[rip+0x1a89a]        # 436a5c <_IO_stdin_used@@Base+0x3a5c>
  41c1c2:	mov    edx,0x4
  41c1c7:	mov    r8d,0x4
  41c1cd:	mov    rdi,rbx
  41c1d0:	mov    rsi,r14
  41c1d3:	call   428bf0 <flatcc_json_printer_string_field@@Base>
  41c1d8:	lea    rcx,[rip+0x1a882]        # 436a61 <_IO_stdin_used@@Base+0x3a61>
  41c1df:	mov    edx,0x5
  41c1e4:	mov    r8d,0x8
  41c1ea:	xor    r9d,r9d
  41c1ed:	mov    rdi,rbx
  41c1f0:	mov    rsi,r14
  41c1f3:	call   429770 <flatcc_json_printer_int64_field@@Base>
  41c1f8:	lea    rcx,[rip+0x1a86b]        # 436a6a <_IO_stdin_used@@Base+0x3a6a>
  41c1ff:	mov    edx,0x6
  41c204:	mov    r8d,0x9
  41c20a:	xor    r9d,r9d
  41c20d:	mov    rdi,rbx
  41c210:	mov    rsi,r14
  41c213:	call   4292d0 <flatcc_json_printer_uint32_field@@Base>
  41c218:	lea    rcx,[rip+0x1a855]        # 436a74 <_IO_stdin_used@@Base+0x3a74>
  41c21f:	mov    edx,0x7
  41c224:	mov    r8d,0x8
  41c22a:	xor    r9d,r9d
  41c22d:	mov    rdi,rbx
  41c230:	mov    rsi,r14
  41c233:	call   429770 <flatcc_json_printer_int64_field@@Base>
  41c238:	lea    rcx,[rip+0x1a83e]        # 436a7d <_IO_stdin_used@@Base+0x3a7d>
  41c23f:	mov    edx,0x8
  41c244:	mov    r8d,0x9
  41c24a:	xor    r9d,r9d
  41c24d:	mov    rdi,rbx
  41c250:	mov    rsi,r14
  41c253:	add    rsp,0x8
  41c257:	pop    rbx
  41c258:	pop    r14
  41c25a:	jmp    4292d0 <flatcc_json_printer_uint32_field@@Base>
  41c25f:	nop
  41c260:	push   r14
  41c262:	push   rbx
  41c263:	push   rax
  41c264:	mov    r14,rsi
  41c267:	mov    rbx,rdi
  41c26a:	lea    rcx,[rip+0x1a816]        # 436a87 <_IO_stdin_used@@Base+0x3a87>
  41c271:	xor    edx,edx
  41c273:	mov    r8d,0xf
  41c279:	xor    r9d,r9d
  41c27c:	call   429770 <flatcc_json_printer_int64_field@@Base>
  41c281:	lea    rcx,[rip+0x1a80f]        # 436a97 <_IO_stdin_used@@Base+0x3a97>
  41c288:	mov    edx,0x1
  41c28d:	mov    r8d,0x10
  41c293:	xor    r9d,r9d
  41c296:	mov    rdi,rbx
  41c299:	mov    rsi,r14
  41c29c:	add    rsp,0x8
  41c2a0:	pop    rbx
  41c2a1:	pop    r14
  41c2a3:	jmp    4292d0 <flatcc_json_printer_uint32_field@@Base>
  41c2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2b0:	push   r14
  41c2b2:	push   rbx
  41c2b3:	push   rax
  41c2b4:	mov    r14,rsi
  41c2b7:	mov    rbx,rdi
  41c2ba:	lea    rcx,[rip+0x1a7c6]        # 436a87 <_IO_stdin_used@@Base+0x3a87>
  41c2c1:	xor    edx,edx
  41c2c3:	mov    r8d,0xf
  41c2c9:	xor    r9d,r9d
  41c2cc:	call   429770 <flatcc_json_printer_int64_field@@Base>
  41c2d1:	lea    rcx,[rip+0x1a7d0]        # 436aa8 <_IO_stdin_used@@Base+0x3aa8>
  41c2d8:	mov    edx,0x1
  41c2dd:	mov    r8d,0x15
  41c2e3:	xor    r9d,r9d
  41c2e6:	mov    rdi,rbx
  41c2e9:	mov    rsi,r14
  41c2ec:	add    rsp,0x8
  41c2f0:	pop    rbx
  41c2f1:	pop    r14
  41c2f3:	jmp    4292d0 <flatcc_json_printer_uint32_field@@Base>
  41c2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c300:	add    sil,0x1
  41c304:	cmp    sil,0xc
  41c308:	ja     41c32f <main@@Base+0x1550f>
  41c30a:	movzx  eax,sil
  41c30e:	lea    rcx,[rip+0x17833]        # 433b48 <_IO_stdin_used@@Base+0xb48>
  41c315:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c319:	add    rax,rcx
  41c31c:	jmp    rax
  41c31e:	lea    rsi,[rip+0x1a7f1]        # 436b16 <_IO_stdin_used@@Base+0x3b16>
  41c325:	mov    edx,0x6
  41c32a:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c32f:	lea    rsi,[rip+0x1bfe4]        # 43831a <flatcc_builder_padding_base@@Base+0x177a>
  41c336:	mov    edx,0x4
  41c33b:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c340:	lea    rsi,[rip+0x1a7ac]        # 436af3 <_IO_stdin_used@@Base+0x3af3>
  41c347:	mov    edx,0x5
  41c34c:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c351:	lea    rsi,[rip+0x1a7a1]        # 436af9 <_IO_stdin_used@@Base+0x3af9>
  41c358:	mov    edx,0x8
  41c35d:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c362:	lea    rsi,[rip+0x1a799]        # 436b02 <_IO_stdin_used@@Base+0x3b02>
  41c369:	mov    edx,0x5
  41c36e:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c373:	lea    rsi,[rip+0x1a78e]        # 436b08 <_IO_stdin_used@@Base+0x3b08>
  41c37a:	mov    edx,0x7
  41c37f:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c384:	lea    rsi,[rip+0x1a785]        # 436b10 <_IO_stdin_used@@Base+0x3b10>
  41c38b:	mov    edx,0x5
  41c390:	jmp    428a60 <flatcc_json_printer_enum@@Base>
  41c395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c39f:	nop
  41c3a0:	mov    al,BYTE PTR [rsi+0xc]
  41c3a3:	add    al,0x1
  41c3a5:	cmp    al,0xc
  41c3a7:	ja     41c3cd <main@@Base+0x155ad>
  41c3a9:	movzx  eax,al
  41c3ac:	lea    rcx,[rip+0x177c9]        # 433b7c <_IO_stdin_used@@Base+0xb7c>
  41c3b3:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c3b7:	add    rax,rcx
  41c3ba:	jmp    rax
  41c3bc:	jmp    4319b0 <flatcc_json_printer_union_string@@Base>
  41c3c1:	lea    rdx,[rip+0x68]        # 41c430 <main@@Base+0x15610>
  41c3c8:	jmp    4318c0 <flatcc_json_printer_union_struct@@Base>
  41c3cd:	ret    
  41c3ce:	lea    rdx,[rip+0x1b]        # 41c3f0 <main@@Base+0x155d0>
  41c3d5:	jmp    431790 <flatcc_json_printer_union_table@@Base>
  41c3da:	lea    rdx,[rip+0x2f]        # 41c410 <main@@Base+0x155f0>
  41c3e1:	jmp    4318c0 <flatcc_json_printer_union_struct@@Base>
  41c3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c3f0:	lea    rcx,[rip+0x1a726]        # 436b1d <_IO_stdin_used@@Base+0x3b1d>
  41c3f7:	xor    edx,edx
  41c3f9:	mov    r8d,0x13
  41c3ff:	xor    r9d,r9d
  41c402:	jmp    4296d0 <flatcc_json_printer_int32_field@@Base>
  41c407:	nop    WORD PTR [rax+rax*1+0x0]
  41c410:	mov    rax,rsi
  41c413:	lea    r8,[rip+0x1a717]        # 436b31 <_IO_stdin_used@@Base+0x3b31>
  41c41a:	xor    esi,esi
  41c41c:	xor    ecx,ecx
  41c41e:	mov    r9d,0xb
  41c424:	mov    rdx,rax
  41c427:	jmp    42a460 <flatcc_json_printer_uint16_struct_field@@Base>
  41c42c:	nop    DWORD PTR [rax+0x0]
  41c430:	mov    rax,rsi
  41c433:	lea    r8,[rip+0x1a703]        # 436b3d <_IO_stdin_used@@Base+0x3b3d>
  41c43a:	xor    esi,esi
  41c43c:	xor    ecx,ecx
  41c43e:	mov    r9d,0xa
  41c444:	mov    rdx,rax
  41c447:	jmp    42a8b0 <flatcc_json_printer_int32_struct_field@@Base>
  41c44c:	nop    DWORD PTR [rax+0x0]
  41c450:	mov    al,BYTE PTR [rdi+0x10]
  41c453:	add    al,0xff
  41c455:	cmp    al,0x3
  41c457:	ja     41c46d <main@@Base+0x1564d>
  41c459:	movsx  rax,al
  41c45d:	lea    rcx,[rip+0x2470c]        # 440b70 <flatcc_builder_padding_base@@Base+0x9fd0>
  41c464:	mov    rsi,QWORD PTR [rcx+rax*8]
  41c468:	jmp    4222d0 <flatcc_verify_union_table@@Base>
  41c46d:	xor    eax,eax
  41c46f:	ret    
  41c470:	push   rbx
  41c471:	mov    rbx,rdi
  41c474:	xor    esi,esi
  41c476:	xor    edx,edx
  41c478:	call   421b70 <flatcc_verify_string_field@@Base>
  41c47d:	test   eax,eax
  41c47f:	jne    41c49c <main@@Base+0x1567c>
  41c481:	mov    esi,0x1
  41c486:	mov    edx,0x8
  41c48b:	mov    ecx,0x8
  41c490:	mov    rdi,rbx
  41c493:	call   421b10 <flatcc_verify_field@@Base>
  41c498:	test   eax,eax
  41c49a:	je     41c49e <main@@Base+0x1567e>
  41c49c:	pop    rbx
  41c49d:	ret    
  41c49e:	mov    esi,0x2
  41c4a3:	mov    edx,0x2
  41c4a8:	mov    ecx,0x2
  41c4ad:	mov    rdi,rbx
  41c4b0:	pop    rbx
  41c4b1:	jmp    421b10 <flatcc_verify_field@@Base>
  41c4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4c0:	xor    eax,eax
  41c4c2:	ret    
  41c4c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4cd:	nop    DWORD PTR [rax]
  41c4d0:	push   rbx
  41c4d1:	mov    rbx,rdi
  41c4d4:	xor    esi,esi
  41c4d6:	xor    edx,edx
  41c4d8:	mov    ecx,0x1
  41c4dd:	mov    r8d,0x1
  41c4e3:	mov    r9d,0xffffffff
  41c4e9:	call   421c20 <flatcc_verify_vector_field@@Base>
  41c4ee:	test   eax,eax
  41c4f0:	jne    41c516 <main@@Base+0x156f6>
  41c4f2:	mov    esi,0x1
  41c4f7:	xor    edx,edx
  41c4f9:	mov    ecx,0x1
  41c4fe:	mov    r8d,0x1
  41c504:	mov    r9d,0xffffffff
  41c50a:	mov    rdi,rbx
  41c50d:	call   421c20 <flatcc_verify_vector_field@@Base>
  41c512:	test   eax,eax
  41c514:	je     41c518 <main@@Base+0x156f8>
  41c516:	pop    rbx
  41c517:	ret    
  41c518:	lea    r9,[rip+0xffffffffffff4781]        # 410ca0 <main@@Base+0x9e80>
  41c51f:	mov    esi,0x2
  41c524:	xor    edx,edx
  41c526:	xor    ecx,ecx
  41c528:	mov    r8d,0x1
  41c52e:	mov    rdi,rbx
  41c531:	pop    rbx
  41c532:	jmp    422a80 <flatcc_verify_table_as_nested_root@@Base>
  41c537:	nop    WORD PTR [rax+rax*1+0x0]
  41c540:	push   rbx
  41c541:	mov    rbx,rdi
  41c544:	xor    esi,esi
  41c546:	mov    edx,0x1
  41c54b:	mov    ecx,0x1
  41c550:	call   421b10 <flatcc_verify_field@@Base>
  41c555:	test   eax,eax
  41c557:	jne    41c58f <main@@Base+0x1576f>
  41c559:	mov    esi,0x1
  41c55e:	mov    edx,0x1
  41c563:	mov    ecx,0x1
  41c568:	mov    rdi,rbx
  41c56b:	call   421b10 <flatcc_verify_field@@Base>
  41c570:	test   eax,eax
  41c572:	jne    41c58f <main@@Base+0x1576f>
  41c574:	mov    esi,0x2
  41c579:	mov    edx,0x1
  41c57e:	mov    ecx,0x1
  41c583:	mov    rdi,rbx
  41c586:	call   421b10 <flatcc_verify_field@@Base>
  41c58b:	test   eax,eax
  41c58d:	je     41c591 <main@@Base+0x15771>
  41c58f:	pop    rbx
  41c590:	ret    
  41c591:	mov    esi,0x3
  41c596:	mov    edx,0x1
  41c59b:	mov    ecx,0x1
  41c5a0:	mov    rdi,rbx
  41c5a3:	pop    rbx
  41c5a4:	jmp    421b10 <flatcc_verify_field@@Base>
  41c5a9:	nop    DWORD PTR [rax+0x0]
  41c5b0:	xor    eax,eax
  41c5b2:	ret    
  41c5b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c5bd:	nop    DWORD PTR [rax]
  41c5c0:	push   rbx
  41c5c1:	mov    rbx,rdi
  41c5c4:	lea    rcx,[rip+0x45]        # 41c610 <main@@Base+0x157f0>
  41c5cb:	xor    esi,esi
  41c5cd:	xor    edx,edx
  41c5cf:	call   421e50 <flatcc_verify_table_field@@Base>
  41c5d4:	test   eax,eax
  41c5d6:	jne    41c5f2 <main@@Base+0x157d2>
  41c5d8:	lea    rcx,[rip+0x81]        # 41c660 <main@@Base+0x15840>
  41c5df:	mov    esi,0x1
  41c5e4:	xor    edx,edx
  41c5e6:	mov    rdi,rbx
  41c5e9:	call   421e50 <flatcc_verify_table_field@@Base>
  41c5ee:	test   eax,eax
  41c5f0:	je     41c5f4 <main@@Base+0x157d4>
  41c5f2:	pop    rbx
  41c5f3:	ret    
  41c5f4:	lea    rcx,[rip+0xfffffffffffffe55]        # 41c450 <main@@Base+0x15630>
  41c5fb:	mov    esi,0x3
  41c600:	xor    edx,edx
  41c602:	mov    rdi,rbx
  41c605:	pop    rbx
  41c606:	jmp    422ea0 <flatcc_verify_union_vector_field@@Base>
  41c60b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c610:	push   rbx
  41c611:	mov    rbx,rdi
  41c614:	lea    rcx,[rip+0xd5]        # 41c6f0 <main@@Base+0x158d0>
  41c61b:	xor    esi,esi
  41c61d:	xor    edx,edx
  41c61f:	call   421e50 <flatcc_verify_table_field@@Base>
  41c624:	test   eax,eax
  41c626:	jne    41c642 <main@@Base+0x15822>
  41c628:	lea    rcx,[rip+0x1a1]        # 41c7d0 <main@@Base+0x159b0>
  41c62f:	mov    esi,0x1
  41c634:	xor    edx,edx
  41c636:	mov    rdi,rbx
  41c639:	call   421e50 <flatcc_verify_table_field@@Base>
  41c63e:	test   eax,eax
  41c640:	je     41c644 <main@@Base+0x15824>
  41c642:	pop    rbx
  41c643:	ret    
  41c644:	lea    rcx,[rip+0x1c5]        # 41c810 <main@@Base+0x159f0>
  41c64b:	mov    esi,0x2
  41c650:	xor    edx,edx
  41c652:	mov    rdi,rbx
  41c655:	pop    rbx
  41c656:	jmp    421e50 <flatcc_verify_table_field@@Base>
  41c65b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c660:	push   rbx
  41c661:	mov    rbx,rdi
  41c664:	lea    rcx,[rip+0x1e5]        # 41c850 <main@@Base+0x15a30>
  41c66b:	mov    esi,0x1
  41c670:	xor    edx,edx
  41c672:	call   422d60 <flatcc_verify_union_field@@Base>
  41c677:	test   eax,eax
  41c679:	jne    41c6c9 <main@@Base+0x158a9>
  41c67b:	lea    rcx,[rip+0x1ce]        # 41c850 <main@@Base+0x15a30>
  41c682:	mov    esi,0x3
  41c687:	xor    edx,edx
  41c689:	mov    rdi,rbx
  41c68c:	call   422d60 <flatcc_verify_union_field@@Base>
  41c691:	test   eax,eax
  41c693:	jne    41c6c9 <main@@Base+0x158a9>
  41c695:	lea    rcx,[rip+0x1b4]        # 41c850 <main@@Base+0x15a30>
  41c69c:	mov    esi,0x5
  41c6a1:	xor    edx,edx
  41c6a3:	mov    rdi,rbx
  41c6a6:	call   422d60 <flatcc_verify_union_field@@Base>
  41c6ab:	test   eax,eax
  41c6ad:	jne    41c6c9 <main@@Base+0x158a9>
  41c6af:	lea    rcx,[rip+0x19a]        # 41c850 <main@@Base+0x15a30>
  41c6b6:	mov    esi,0x7
  41c6bb:	xor    edx,edx
  41c6bd:	mov    rdi,rbx
  41c6c0:	call   422d60 <flatcc_verify_union_field@@Base>
  41c6c5:	test   eax,eax
  41c6c7:	je     41c6cb <main@@Base+0x158ab>
  41c6c9:	pop    rbx
  41c6ca:	ret    
  41c6cb:	lea    rcx,[rip+0x17e]        # 41c850 <main@@Base+0x15a30>
  41c6d2:	mov    esi,0x9
  41c6d7:	xor    edx,edx
  41c6d9:	mov    rdi,rbx
  41c6dc:	pop    rbx
  41c6dd:	jmp    422ea0 <flatcc_verify_union_vector_field@@Base>
  41c6e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c6ec:	nop    DWORD PTR [rax+0x0]
  41c6f0:	push   rbx
  41c6f1:	mov    rbx,rdi
  41c6f4:	xor    esi,esi
  41c6f6:	xor    edx,edx
  41c6f8:	call   421b70 <flatcc_verify_string_field@@Base>
  41c6fd:	test   eax,eax
  41c6ff:	jne    41c7b6 <main@@Base+0x15996>
  41c705:	mov    esi,0x1
  41c70a:	mov    edx,0x4
  41c70f:	mov    ecx,0x4
  41c714:	mov    rdi,rbx
  41c717:	call   421b10 <flatcc_verify_field@@Base>
  41c71c:	test   eax,eax
  41c71e:	jne    41c7b6 <main@@Base+0x15996>
  41c724:	mov    esi,0x2
  41c729:	xor    edx,edx
  41c72b:	mov    rdi,rbx
  41c72e:	call   421b70 <flatcc_verify_string_field@@Base>
  41c733:	test   eax,eax
  41c735:	jne    41c7b6 <main@@Base+0x15996>
  41c737:	mov    esi,0x3
  41c73c:	mov    edx,0x8
  41c741:	mov    ecx,0x8
  41c746:	mov    rdi,rbx
  41c749:	call   421b10 <flatcc_verify_field@@Base>
  41c74e:	test   eax,eax
  41c750:	jne    41c7b6 <main@@Base+0x15996>
  41c752:	mov    esi,0x4
  41c757:	xor    edx,edx
  41c759:	mov    rdi,rbx
  41c75c:	call   421b70 <flatcc_verify_string_field@@Base>
  41c761:	test   eax,eax
  41c763:	jne    41c7b6 <main@@Base+0x15996>
  41c765:	mov    esi,0x5
  41c76a:	mov    edx,0x8
  41c76f:	mov    ecx,0x8
  41c774:	mov    rdi,rbx
  41c777:	call   421b10 <flatcc_verify_field@@Base>
  41c77c:	test   eax,eax
  41c77e:	jne    41c7b6 <main@@Base+0x15996>
  41c780:	mov    esi,0x6
  41c785:	mov    edx,0x4
  41c78a:	mov    ecx,0x4
  41c78f:	mov    rdi,rbx
  41c792:	call   421b10 <flatcc_verify_field@@Base>
  41c797:	test   eax,eax
  41c799:	jne    41c7b6 <main@@Base+0x15996>
  41c79b:	mov    esi,0x7
  41c7a0:	mov    edx,0x8
  41c7a5:	mov    ecx,0x8
  41c7aa:	mov    rdi,rbx
  41c7ad:	call   421b10 <flatcc_verify_field@@Base>
  41c7b2:	test   eax,eax
  41c7b4:	je     41c7b8 <main@@Base+0x15998>
  41c7b6:	pop    rbx
  41c7b7:	ret    
  41c7b8:	mov    esi,0x8
  41c7bd:	mov    edx,0x4
  41c7c2:	mov    ecx,0x4
  41c7c7:	mov    rdi,rbx
  41c7ca:	pop    rbx
  41c7cb:	jmp    421b10 <flatcc_verify_field@@Base>
  41c7d0:	push   rbx
  41c7d1:	mov    rbx,rdi
  41c7d4:	xor    esi,esi
  41c7d6:	mov    edx,0x8
  41c7db:	mov    ecx,0x8
  41c7e0:	call   421b10 <flatcc_verify_field@@Base>
  41c7e5:	test   eax,eax
  41c7e7:	je     41c7eb <main@@Base+0x159cb>
  41c7e9:	pop    rbx
  41c7ea:	ret    
  41c7eb:	mov    esi,0x1
  41c7f0:	mov    edx,0x4
  41c7f5:	mov    ecx,0x4
  41c7fa:	mov    rdi,rbx
  41c7fd:	pop    rbx
  41c7fe:	jmp    421b10 <flatcc_verify_field@@Base>
  41c803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c80d:	nop    DWORD PTR [rax]
  41c810:	push   rbx
  41c811:	mov    rbx,rdi
  41c814:	xor    esi,esi
  41c816:	mov    edx,0x8
  41c81b:	mov    ecx,0x8
  41c820:	call   421b10 <flatcc_verify_field@@Base>
  41c825:	test   eax,eax
  41c827:	je     41c82b <main@@Base+0x15a0b>
  41c829:	pop    rbx
  41c82a:	ret    
  41c82b:	mov    esi,0x1
  41c830:	mov    edx,0x4
  41c835:	mov    ecx,0x4
  41c83a:	mov    rdi,rbx
  41c83d:	pop    rbx
  41c83e:	jmp    421b10 <flatcc_verify_field@@Base>
  41c843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c84d:	nop    DWORD PTR [rax]
  41c850:	mov    al,BYTE PTR [rdi+0x10]
  41c853:	add    al,0x1
  41c855:	cmp    al,0xc
  41c857:	ja     41c880 <main@@Base+0x15a60>
  41c859:	movzx  eax,al
  41c85c:	lea    rcx,[rip+0x1734d]        # 433bb0 <_IO_stdin_used@@Base+0xbb0>
  41c863:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c867:	add    rax,rcx
  41c86a:	jmp    rax
  41c86c:	jmp    422400 <flatcc_verify_union_string@@Base>
  41c871:	mov    esi,0x4
  41c876:	mov    edx,0x4
  41c87b:	jmp    4223c0 <flatcc_verify_union_struct@@Base>
  41c880:	xor    eax,eax
  41c882:	ret    
  41c883:	lea    rsi,[rip+0x16]        # 41c8a0 <main@@Base+0x15a80>
  41c88a:	jmp    4222d0 <flatcc_verify_union_table@@Base>
  41c88f:	mov    esi,0x2
  41c894:	mov    edx,0x2
  41c899:	jmp    4223c0 <flatcc_verify_union_struct@@Base>
  41c89e:	xchg   ax,ax
  41c8a0:	xor    esi,esi
  41c8a2:	mov    edx,0x4
  41c8a7:	mov    ecx,0x4
  41c8ac:	jmp    421b10 <flatcc_verify_field@@Base>
  41c8b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c8c0 <flatcc_builder_default_alloc@@Base>:
  41c8c0:	push   rbp
  41c8c1:	push   r15
  41c8c3:	push   r14
  41c8c5:	push   r12
  41c8c7:	push   rbx
  41c8c8:	mov    rbx,rsi
  41c8cb:	test   rdx,rdx
  41c8ce:	je     41c8f9 <flatcc_builder_default_alloc@@Base+0x39>
  41c8d0:	mov    r14d,ecx
  41c8d3:	add    r8d,0xffffffff
  41c8d7:	cmp    r8d,0x6
  41c8db:	ja     41c917 <flatcc_builder_default_alloc@@Base+0x57>
  41c8dd:	mov    eax,0x100
  41c8e2:	lea    rcx,[rip+0x1a297]        # 436b80 <_IO_stdin_used@@Base+0x3b80>
  41c8e9:	movsxd rsi,DWORD PTR [rcx+r8*4]
  41c8ed:	add    rsi,rcx
  41c8f0:	jmp    rsi
  41c8f2:	mov    eax,0x120
  41c8f7:	jmp    41c930 <flatcc_builder_default_alloc@@Base+0x70>
  41c8f9:	mov    rdi,QWORD PTR [rbx]
  41c8fc:	xor    r15d,r15d
  41c8ff:	test   rdi,rdi
  41c902:	je     41c990 <flatcc_builder_default_alloc@@Base+0xd0>
  41c908:	call   406030 <free@plt>
  41c90d:	vxorps xmm0,xmm0,xmm0
  41c911:	vmovups XMMWORD PTR [rbx],xmm0
  41c915:	jmp    41c990 <flatcc_builder_default_alloc@@Base+0xd0>
  41c917:	mov    eax,0x20
  41c91c:	jmp    41c930 <flatcc_builder_default_alloc@@Base+0x70>
  41c91e:	mov    rax,rdx
  41c921:	jmp    41c930 <flatcc_builder_default_alloc@@Base+0x70>
  41c923:	mov    eax,0x40
  41c928:	nop    DWORD PTR [rax+rax*1+0x0]
  41c930:	mov    rbp,rax
  41c933:	lea    rax,[rax+rax*1]
  41c937:	cmp    rbp,rdx
  41c93a:	jb     41c930 <flatcc_builder_default_alloc@@Base+0x70>
  41c93c:	mov    rax,QWORD PTR [rbx+0x8]
  41c940:	xor    r15d,r15d
  41c943:	cmp    rax,rdx
  41c946:	jb     41c950 <flatcc_builder_default_alloc@@Base+0x90>
  41c948:	shr    rax,1
  41c94b:	cmp    rax,rbp
  41c94e:	jae    41c990 <flatcc_builder_default_alloc@@Base+0xd0>
  41c950:	mov    rdi,QWORD PTR [rbx]
  41c953:	mov    rsi,rbp
  41c956:	call   406100 <realloc@plt>
  41c95b:	test   rax,rax
  41c95e:	je     41c98a <flatcc_builder_default_alloc@@Base+0xca>
  41c960:	mov    r12,rax
  41c963:	test   r14d,r14d
  41c966:	je     41c981 <flatcc_builder_default_alloc@@Base+0xc1>
  41c968:	mov    rax,QWORD PTR [rbx+0x8]
  41c96c:	mov    rdx,rbp
  41c96f:	sub    rdx,rax
  41c972:	jbe    41c981 <flatcc_builder_default_alloc@@Base+0xc1>
  41c974:	mov    rdi,r12
  41c977:	add    rdi,rax
  41c97a:	xor    esi,esi
  41c97c:	call   406080 <memset@plt>
  41c981:	mov    QWORD PTR [rbx],r12
  41c984:	mov    QWORD PTR [rbx+0x8],rbp
  41c988:	jmp    41c990 <flatcc_builder_default_alloc@@Base+0xd0>
  41c98a:	mov    r15d,0xffffffff
  41c990:	mov    eax,r15d
  41c993:	pop    rbx
  41c994:	pop    r12
  41c996:	pop    r14
  41c998:	pop    r15
  41c99a:	pop    rbp
  41c99b:	ret    
  41c99c:	nop    DWORD PTR [rax+0x0]

000000000041c9a0 <flatcc_builder_flush_vtable_cache@@Base>:
  41c9a0:	cmp    QWORD PTR [rdi+0xd8],0x0
  41c9a8:	je     41c9d5 <flatcc_builder_flush_vtable_cache@@Base+0x35>
  41c9aa:	push   rbx
  41c9ab:	mov    rbx,rdi
  41c9ae:	mov    rdi,QWORD PTR [rdi+0xa8]
  41c9b5:	mov    rdx,QWORD PTR [rbx+0xb0]
  41c9bc:	xor    esi,esi
  41c9be:	call   406080 <memset@plt>
  41c9c3:	movabs rax,0x1000000000
  41c9cd:	mov    QWORD PTR [rbx+0xe0],rax
  41c9d4:	pop    rbx
  41c9d5:	ret    
  41c9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041c9e0 <flatcc_builder_custom_init@@Base>:
  41c9e0:	vxorps xmm0,xmm0,xmm0
  41c9e4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41c9ec:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41c9f4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41c9fc:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41ca04:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41ca0c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41ca14:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41ca1c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41ca24:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41ca29:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41ca2e:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41ca33:	vmovups YMMWORD PTR [rdi],ymm0
  41ca37:	mov    QWORD PTR [rdi+0x180],0x0
  41ca42:	test   rsi,rsi
  41ca45:	je     41ca69 <flatcc_builder_custom_init@@Base+0x89>
  41ca47:	test   rcx,rcx
  41ca4a:	jne    41ca53 <flatcc_builder_custom_init@@Base+0x73>
  41ca4c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 41c8c0 <flatcc_builder_default_alloc@@Base>
  41ca53:	mov    QWORD PTR [rdi+0x40],r8
  41ca57:	mov    QWORD PTR [rdi+0x50],rcx
  41ca5b:	mov    QWORD PTR [rdi+0x38],rdx
  41ca5f:	mov    QWORD PTR [rdi+0x48],rsi
  41ca63:	xor    eax,eax
  41ca65:	vzeroupper 
  41ca68:	ret    
  41ca69:	mov    DWORD PTR [rdi+0x128],0x1
  41ca73:	lea    rdx,[rdi+0x130]
  41ca7a:	lea    rsi,[rip+0x4acf]        # 421550 <flatcc_emitter@@Base>
  41ca81:	test   rcx,rcx
  41ca84:	je     41ca4c <flatcc_builder_custom_init@@Base+0x6c>
  41ca86:	jmp    41ca53 <flatcc_builder_custom_init@@Base+0x73>
  41ca88:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ca90 <flatcc_builder_init@@Base>:
  41ca90:	vxorps xmm0,xmm0,xmm0
  41ca94:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41ca9c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41caa1:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41caa6:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41caae:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41cab6:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41cabe:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41cac6:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41cace:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41cad6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41cade:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41cae3:	vmovups YMMWORD PTR [rdi],ymm0
  41cae7:	mov    QWORD PTR [rdi+0x180],0x0
  41caf2:	mov    DWORD PTR [rdi+0x128],0x1
  41cafc:	lea    rax,[rdi+0x130]
  41cb03:	mov    QWORD PTR [rdi+0x40],0x0
  41cb0b:	lea    rcx,[rip+0xfffffffffffffdae]        # 41c8c0 <flatcc_builder_default_alloc@@Base>
  41cb12:	mov    QWORD PTR [rdi+0x50],rcx
  41cb16:	mov    QWORD PTR [rdi+0x38],rax
  41cb1a:	lea    rax,[rip+0x4a2f]        # 421550 <flatcc_emitter@@Base>
  41cb21:	mov    QWORD PTR [rdi+0x48],rax
  41cb25:	xor    eax,eax
  41cb27:	vzeroupper 
  41cb2a:	ret    
  41cb2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cb30 <flatcc_builder_custom_reset@@Base>:
  41cb30:	push   rbp
  41cb31:	push   r15
  41cb33:	push   r14
  41cb35:	push   r12
  41cb37:	push   rbx
  41cb38:	mov    r15d,edx
  41cb3b:	mov    r14d,esi
  41cb3e:	mov    r12,rdi
  41cb41:	lea    rbp,[rdi+0x58]
  41cb45:	xor    ebx,ebx
  41cb47:	nop    WORD PTR [rax+rax*1+0x0]
  41cb50:	mov    rdi,QWORD PTR [rbp+0x0]
  41cb54:	test   rdi,rdi
  41cb57:	je     41cba0 <flatcc_builder_custom_reset@@Base+0x70>
  41cb59:	test   r15d,r15d
  41cb5c:	je     41cb8a <flatcc_builder_custom_reset@@Base+0x5a>
  41cb5e:	cmp    rbx,0x5
  41cb62:	je     41cb8a <flatcc_builder_custom_reset@@Base+0x5a>
  41cb64:	mov    rdi,QWORD PTR [r12+0x40]
  41cb69:	mov    edx,0x1
  41cb6e:	mov    ecx,0x1
  41cb73:	mov    rsi,rbp
  41cb76:	mov    r8d,ebx
  41cb79:	call   QWORD PTR [r12+0x50]
  41cb7e:	test   eax,eax
  41cb80:	jne    41cc60 <flatcc_builder_custom_reset@@Base+0x130>
  41cb86:	mov    rdi,QWORD PTR [rbp+0x0]
  41cb8a:	mov    rdx,QWORD PTR [rbp+0x8]
  41cb8e:	xor    esi,esi
  41cb90:	call   406080 <memset@plt>
  41cb95:	jmp    41cbab <flatcc_builder_custom_reset@@Base+0x7b>
  41cb97:	nop    WORD PTR [rax+rax*1+0x0]
  41cba0:	cmp    QWORD PTR [rbp+0x8],0x0
  41cba5:	jne    41cc70 <flatcc_builder_custom_reset@@Base+0x140>
  41cbab:	add    rbx,0x1
  41cbaf:	add    rbp,0x10
  41cbb3:	cmp    rbx,0x8
  41cbb7:	jb     41cb50 <flatcc_builder_custom_reset@@Base+0x20>
  41cbb9:	mov    DWORD PTR [r12+0xe0],0x0
  41cbc5:	cmp    DWORD PTR [r12+0xe4],0x0
  41cbce:	je     41cbdc <flatcc_builder_custom_reset@@Base+0xac>
  41cbd0:	mov    DWORD PTR [r12+0xe4],0x10
  41cbdc:	mov    WORD PTR [r12+0xe8],0x0
  41cbe7:	mov    QWORD PTR [r12+0xf0],0x0
  41cbf3:	mov    QWORD PTR [r12+0x20],0x0
  41cbfc:	vxorps xmm0,xmm0,xmm0
  41cc00:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  41cc0a:	mov    rax,QWORD PTR [r12+0x58]
  41cc0f:	mov    rcx,QWORD PTR [r12+0x68]
  41cc14:	mov    QWORD PTR [r12+0x18],rcx
  41cc19:	mov    rcx,QWORD PTR [r12+0x88]
  41cc21:	mov    QWORD PTR [r12],rcx
  41cc25:	mov    QWORD PTR [r12+0x8],rax
  41cc2a:	mov    QWORD PTR [r12+0x30],0x0
  41cc33:	test   r14d,r14d
  41cc36:	je     41cc42 <flatcc_builder_custom_reset@@Base+0x112>
  41cc38:	vmovups XMMWORD PTR [r12+0x118],xmm0
  41cc42:	xor    ebx,ebx
  41cc44:	cmp    DWORD PTR [r12+0x128],0x0
  41cc4d:	je     41cc65 <flatcc_builder_custom_reset@@Base+0x135>
  41cc4f:	add    r12,0x130
  41cc56:	mov    rdi,r12
  41cc59:	call   4213d0 <flatcc_emitter_reset@@Base>
  41cc5e:	jmp    41cc65 <flatcc_builder_custom_reset@@Base+0x135>
  41cc60:	mov    ebx,0xffffffff
  41cc65:	mov    eax,ebx
  41cc67:	pop    rbx
  41cc68:	pop    r12
  41cc6a:	pop    r14
  41cc6c:	pop    r15
  41cc6e:	pop    rbp
  41cc6f:	ret    
  41cc70:	lea    rdi,[rip+0x1a199]        # 436e10 <flatcc_builder_padding_base@@Base+0x270>
  41cc77:	lea    rsi,[rip+0x1a1a4]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41cc7e:	lea    rcx,[rip+0x1a1fd]        # 436e82 <flatcc_builder_padding_base@@Base+0x2e2>
  41cc85:	mov    edx,0x1b2
  41cc8a:	call   406070 <__assert_fail@plt>
  41cc8f:	nop

000000000041cc90 <flatcc_builder_reset@@Base>:
  41cc90:	push   rbx
  41cc91:	mov    rbx,rdi
  41cc94:	mov    rdi,QWORD PTR [rdi+0x58]
  41cc98:	mov    rdx,QWORD PTR [rbx+0x60]
  41cc9c:	test   rdi,rdi
  41cc9f:	je     41ccaa <flatcc_builder_reset@@Base+0x1a>
  41cca1:	xor    esi,esi
  41cca3:	call   406080 <memset@plt>
  41cca8:	jmp    41ccb3 <flatcc_builder_reset@@Base+0x23>
  41ccaa:	test   rdx,rdx
  41ccad:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41ccb3:	mov    rdi,QWORD PTR [rbx+0x68]
  41ccb7:	mov    rdx,QWORD PTR [rbx+0x70]
  41ccbb:	test   rdi,rdi
  41ccbe:	je     41ccc9 <flatcc_builder_reset@@Base+0x39>
  41ccc0:	xor    esi,esi
  41ccc2:	call   406080 <memset@plt>
  41ccc7:	jmp    41ccd2 <flatcc_builder_reset@@Base+0x42>
  41ccc9:	test   rdx,rdx
  41cccc:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41ccd2:	mov    rdi,QWORD PTR [rbx+0x78]
  41ccd6:	mov    rdx,QWORD PTR [rbx+0x80]
  41ccdd:	test   rdi,rdi
  41cce0:	je     41cceb <flatcc_builder_reset@@Base+0x5b>
  41cce2:	xor    esi,esi
  41cce4:	call   406080 <memset@plt>
  41cce9:	jmp    41ccf4 <flatcc_builder_reset@@Base+0x64>
  41cceb:	test   rdx,rdx
  41ccee:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41ccf4:	mov    rdi,QWORD PTR [rbx+0x88]
  41ccfb:	mov    rdx,QWORD PTR [rbx+0x90]
  41cd02:	test   rdi,rdi
  41cd05:	je     41cd10 <flatcc_builder_reset@@Base+0x80>
  41cd07:	xor    esi,esi
  41cd09:	call   406080 <memset@plt>
  41cd0e:	jmp    41cd19 <flatcc_builder_reset@@Base+0x89>
  41cd10:	test   rdx,rdx
  41cd13:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41cd19:	mov    rdi,QWORD PTR [rbx+0x98]
  41cd20:	mov    rdx,QWORD PTR [rbx+0xa0]
  41cd27:	test   rdi,rdi
  41cd2a:	je     41cd35 <flatcc_builder_reset@@Base+0xa5>
  41cd2c:	xor    esi,esi
  41cd2e:	call   406080 <memset@plt>
  41cd33:	jmp    41cd3e <flatcc_builder_reset@@Base+0xae>
  41cd35:	test   rdx,rdx
  41cd38:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41cd3e:	mov    rdi,QWORD PTR [rbx+0xa8]
  41cd45:	mov    rdx,QWORD PTR [rbx+0xb0]
  41cd4c:	test   rdi,rdi
  41cd4f:	je     41cd5a <flatcc_builder_reset@@Base+0xca>
  41cd51:	xor    esi,esi
  41cd53:	call   406080 <memset@plt>
  41cd58:	jmp    41cd63 <flatcc_builder_reset@@Base+0xd3>
  41cd5a:	test   rdx,rdx
  41cd5d:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41cd63:	mov    rdi,QWORD PTR [rbx+0xb8]
  41cd6a:	mov    rdx,QWORD PTR [rbx+0xc0]
  41cd71:	test   rdi,rdi
  41cd74:	je     41cd7f <flatcc_builder_reset@@Base+0xef>
  41cd76:	xor    esi,esi
  41cd78:	call   406080 <memset@plt>
  41cd7d:	jmp    41cd88 <flatcc_builder_reset@@Base+0xf8>
  41cd7f:	test   rdx,rdx
  41cd82:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41cd88:	mov    rdi,QWORD PTR [rbx+0xc8]
  41cd8f:	mov    rdx,QWORD PTR [rbx+0xd0]
  41cd96:	test   rdi,rdi
  41cd99:	je     41cda4 <flatcc_builder_reset@@Base+0x114>
  41cd9b:	xor    esi,esi
  41cd9d:	call   406080 <memset@plt>
  41cda2:	jmp    41cdad <flatcc_builder_reset@@Base+0x11d>
  41cda4:	test   rdx,rdx
  41cda7:	jne    41ce30 <flatcc_builder_reset@@Base+0x1a0>
  41cdad:	mov    DWORD PTR [rbx+0xe0],0x0
  41cdb7:	cmp    DWORD PTR [rbx+0xe4],0x0
  41cdbe:	je     41cdca <flatcc_builder_reset@@Base+0x13a>
  41cdc0:	mov    DWORD PTR [rbx+0xe4],0x10
  41cdca:	mov    WORD PTR [rbx+0xe8],0x0
  41cdd3:	mov    QWORD PTR [rbx+0xf0],0x0
  41cdde:	mov    QWORD PTR [rbx+0x20],0x0
  41cde6:	vxorps xmm0,xmm0,xmm0
  41cdea:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  41cdf2:	mov    rax,QWORD PTR [rbx+0x58]
  41cdf6:	mov    rcx,QWORD PTR [rbx+0x68]
  41cdfa:	mov    QWORD PTR [rbx+0x18],rcx
  41cdfe:	mov    rcx,QWORD PTR [rbx+0x88]
  41ce05:	mov    QWORD PTR [rbx],rcx
  41ce08:	mov    QWORD PTR [rbx+0x8],rax
  41ce0c:	mov    QWORD PTR [rbx+0x30],0x0
  41ce14:	cmp    DWORD PTR [rbx+0x128],0x0
  41ce1b:	je     41ce2c <flatcc_builder_reset@@Base+0x19c>
  41ce1d:	add    rbx,0x130
  41ce24:	mov    rdi,rbx
  41ce27:	call   4213d0 <flatcc_emitter_reset@@Base>
  41ce2c:	xor    eax,eax
  41ce2e:	pop    rbx
  41ce2f:	ret    
  41ce30:	lea    rdi,[rip+0x19fd9]        # 436e10 <flatcc_builder_padding_base@@Base+0x270>
  41ce37:	lea    rsi,[rip+0x19fe4]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ce3e:	lea    rcx,[rip+0x1a03d]        # 436e82 <flatcc_builder_padding_base@@Base+0x2e2>
  41ce45:	mov    edx,0x1b2
  41ce4a:	call   406070 <__assert_fail@plt>
  41ce4f:	nop

000000000041ce50 <flatcc_builder_clear@@Base>:
  41ce50:	push   rbx
  41ce51:	mov    rbx,rdi
  41ce54:	lea    rsi,[rdi+0x58]
  41ce58:	mov    rdi,QWORD PTR [rdi+0x40]
  41ce5c:	xor    edx,edx
  41ce5e:	xor    ecx,ecx
  41ce60:	xor    r8d,r8d
  41ce63:	call   QWORD PTR [rbx+0x50]
  41ce66:	lea    rsi,[rbx+0x68]
  41ce6a:	mov    rdi,QWORD PTR [rbx+0x40]
  41ce6e:	xor    edx,edx
  41ce70:	xor    ecx,ecx
  41ce72:	mov    r8d,0x1
  41ce78:	call   QWORD PTR [rbx+0x50]
  41ce7b:	lea    rsi,[rbx+0x78]
  41ce7f:	mov    rdi,QWORD PTR [rbx+0x40]
  41ce83:	xor    edx,edx
  41ce85:	xor    ecx,ecx
  41ce87:	mov    r8d,0x2
  41ce8d:	call   QWORD PTR [rbx+0x50]
  41ce90:	lea    rsi,[rbx+0x88]
  41ce97:	mov    rdi,QWORD PTR [rbx+0x40]
  41ce9b:	xor    edx,edx
  41ce9d:	xor    ecx,ecx
  41ce9f:	mov    r8d,0x3
  41cea5:	call   QWORD PTR [rbx+0x50]
  41cea8:	lea    rsi,[rbx+0x98]
  41ceaf:	mov    rdi,QWORD PTR [rbx+0x40]
  41ceb3:	xor    edx,edx
  41ceb5:	xor    ecx,ecx
  41ceb7:	mov    r8d,0x4
  41cebd:	call   QWORD PTR [rbx+0x50]
  41cec0:	lea    rsi,[rbx+0xa8]
  41cec7:	mov    rdi,QWORD PTR [rbx+0x40]
  41cecb:	xor    edx,edx
  41cecd:	xor    ecx,ecx
  41cecf:	mov    r8d,0x5
  41ced5:	call   QWORD PTR [rbx+0x50]
  41ced8:	lea    rsi,[rbx+0xb8]
  41cedf:	mov    rdi,QWORD PTR [rbx+0x40]
  41cee3:	xor    edx,edx
  41cee5:	xor    ecx,ecx
  41cee7:	mov    r8d,0x6
  41ceed:	call   QWORD PTR [rbx+0x50]
  41cef0:	lea    rsi,[rbx+0xc8]
  41cef7:	mov    rdi,QWORD PTR [rbx+0x40]
  41cefb:	xor    edx,edx
  41cefd:	xor    ecx,ecx
  41ceff:	mov    r8d,0x7
  41cf05:	call   QWORD PTR [rbx+0x50]
  41cf08:	cmp    DWORD PTR [rbx+0x128],0x0
  41cf0f:	je     41cf1d <flatcc_builder_clear@@Base+0xcd>
  41cf11:	lea    rdi,[rbx+0x130]
  41cf18:	call   4214d0 <flatcc_emitter_clear@@Base>
  41cf1d:	vxorps xmm0,xmm0,xmm0
  41cf21:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  41cf29:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  41cf31:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  41cf39:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  41cf41:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  41cf49:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  41cf51:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  41cf59:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  41cf61:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  41cf66:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  41cf6b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  41cf70:	vmovups YMMWORD PTR [rbx],ymm0
  41cf74:	mov    QWORD PTR [rbx+0x180],0x0
  41cf7f:	pop    rbx
  41cf80:	vzeroupper 
  41cf83:	ret    
  41cf84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf8e:	xchg   ax,ax

000000000041cf90 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41cf90:	push   r15
  41cf92:	push   r14
  41cf94:	push   r12
  41cf96:	push   rbx
  41cf97:	push   rax
  41cf98:	mov    r14,rsi
  41cf9b:	mov    r15,rdi
  41cf9e:	add    r14,0xf
  41cfa2:	and    r14,0xfffffffffffffff8
  41cfa6:	mov    rbx,QWORD PTR [rdi+0x180]
  41cfad:	lea    r12,[rdi+0xc8]
  41cfb4:	lea    rdx,[rbx+r14*1]
  41cfb8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41cfbf:	jbe    41cfd8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  41cfc1:	mov    rdi,QWORD PTR [r15+0x40]
  41cfc5:	xor    ecx,ecx
  41cfc7:	mov    r8d,0x7
  41cfcd:	mov    rsi,r12
  41cfd0:	call   QWORD PTR [r15+0x50]
  41cfd4:	test   eax,eax
  41cfd6:	jne    41d028 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  41cfd8:	add    rbx,QWORD PTR [r12]
  41cfdc:	je     41d017 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  41cfde:	xor    esi,esi
  41cfe0:	mov    rdi,rbx
  41cfe3:	mov    rdx,r14
  41cfe6:	call   406080 <memset@plt>
  41cfeb:	mov    rax,QWORD PTR [r15+0x178]
  41cff2:	mov    QWORD PTR [rbx],rax
  41cff5:	add    rbx,0x8
  41cff9:	mov    rax,QWORD PTR [r15+0x180]
  41d000:	lea    rcx,[rax+0x8]
  41d004:	mov    QWORD PTR [r15+0x178],rcx
  41d00b:	add    rax,r14
  41d00e:	mov    QWORD PTR [r15+0x180],rax
  41d015:	jmp    41d019 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  41d017:	xor    ebx,ebx
  41d019:	mov    rax,rbx
  41d01c:	add    rsp,0x8
  41d020:	pop    rbx
  41d021:	pop    r12
  41d023:	pop    r14
  41d025:	pop    r15
  41d027:	ret    
  41d028:	lea    rdi,[rip+0x1afb3]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d02f:	lea    rsi,[rip+0x19dec]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d036:	lea    rcx,[rip+0x1addf]        # 437e1c <flatcc_builder_padding_base@@Base+0x127c>
  41d03d:	mov    edx,0x134
  41d042:	call   406070 <__assert_fail@plt>
  41d047:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d050 <flatcc_builder_enter_user_frame@@Base>:
  41d050:	push   r15
  41d052:	push   r14
  41d054:	push   r12
  41d056:	push   rbx
  41d057:	push   rax
  41d058:	mov    r14,rsi
  41d05b:	mov    rbx,rdi
  41d05e:	add    r14,0xf
  41d062:	and    r14,0xfffffffffffffff8
  41d066:	mov    r15,QWORD PTR [rdi+0x180]
  41d06d:	lea    r12,[rdi+0xc8]
  41d074:	lea    rdx,[r15+r14*1]
  41d078:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41d07f:	jbe    41d097 <flatcc_builder_enter_user_frame@@Base+0x47>
  41d081:	mov    rdi,QWORD PTR [rbx+0x40]
  41d085:	xor    ecx,ecx
  41d087:	mov    r8d,0x7
  41d08d:	mov    rsi,r12
  41d090:	call   QWORD PTR [rbx+0x50]
  41d093:	test   eax,eax
  41d095:	jne    41d0e0 <flatcc_builder_enter_user_frame@@Base+0x90>
  41d097:	add    r15,QWORD PTR [r12]
  41d09b:	je     41d0d2 <flatcc_builder_enter_user_frame@@Base+0x82>
  41d09d:	xor    esi,esi
  41d09f:	mov    rdi,r15
  41d0a2:	mov    rdx,r14
  41d0a5:	call   406080 <memset@plt>
  41d0aa:	mov    rax,QWORD PTR [rbx+0x178]
  41d0b1:	mov    QWORD PTR [r15],rax
  41d0b4:	mov    rcx,QWORD PTR [rbx+0x180]
  41d0bb:	lea    rax,[rcx+0x8]
  41d0bf:	mov    QWORD PTR [rbx+0x178],rax
  41d0c6:	add    rcx,r14
  41d0c9:	mov    QWORD PTR [rbx+0x180],rcx
  41d0d0:	jmp    41d0d4 <flatcc_builder_enter_user_frame@@Base+0x84>
  41d0d2:	xor    eax,eax
  41d0d4:	add    rsp,0x8
  41d0d8:	pop    rbx
  41d0d9:	pop    r12
  41d0db:	pop    r14
  41d0dd:	pop    r15
  41d0df:	ret    
  41d0e0:	lea    rdi,[rip+0x1aefb]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d0e7:	lea    rsi,[rip+0x19d34]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d0ee:	lea    rcx,[rip+0x1ad27]        # 437e1c <flatcc_builder_padding_base@@Base+0x127c>
  41d0f5:	mov    edx,0x134
  41d0fa:	call   406070 <__assert_fail@plt>
  41d0ff:	nop

000000000041d100 <flatcc_builder_exit_user_frame@@Base>:
  41d100:	mov    rax,QWORD PTR [rdi+0x178]
  41d107:	test   rax,rax
  41d10a:	je     41d12d <flatcc_builder_exit_user_frame@@Base+0x2d>
  41d10c:	mov    rcx,QWORD PTR [rdi+0xc8]
  41d113:	mov    edx,eax
  41d115:	add    rax,0xfffffffffffffff8
  41d119:	mov    QWORD PTR [rdi+0x180],rax
  41d120:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  41d125:	mov    QWORD PTR [rdi+0x178],rax
  41d12c:	ret    
  41d12d:	push   rax
  41d12e:	lea    rdi,[rip+0x19d8b]        # 436ec0 <flatcc_builder_padding_base@@Base+0x320>
  41d135:	lea    rsi,[rip+0x19ce6]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d13c:	lea    rcx,[rip+0x19d96]        # 436ed9 <flatcc_builder_padding_base@@Base+0x339>
  41d143:	mov    edx,0x21e
  41d148:	call   406070 <__assert_fail@plt>
  41d14d:	nop    DWORD PTR [rax]

000000000041d150 <flatcc_builder_exit_user_frame_at@@Base>:
  41d150:	push   rax
  41d151:	cmp    QWORD PTR [rdi+0x178],rsi
  41d158:	jb     41d188 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  41d15a:	mov    QWORD PTR [rdi+0x178],rsi
  41d161:	test   rsi,rsi
  41d164:	je     41d1a7 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  41d166:	mov    rax,QWORD PTR [rdi+0xc8]
  41d16d:	mov    ecx,esi
  41d16f:	add    rsi,0xfffffffffffffff8
  41d173:	mov    QWORD PTR [rdi+0x180],rsi
  41d17a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  41d17f:	mov    QWORD PTR [rdi+0x178],rax
  41d186:	pop    rcx
  41d187:	ret    
  41d188:	lea    rdi,[rip+0x19d84]        # 436f13 <flatcc_builder_padding_base@@Base+0x373>
  41d18f:	lea    rsi,[rip+0x19c8c]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d196:	lea    rcx,[rip+0x19d95]        # 436f32 <flatcc_builder_padding_base@@Base+0x392>
  41d19d:	mov    edx,0x227
  41d1a2:	call   406070 <__assert_fail@plt>
  41d1a7:	lea    rdi,[rip+0x19d12]        # 436ec0 <flatcc_builder_padding_base@@Base+0x320>
  41d1ae:	lea    rsi,[rip+0x19c6d]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d1b5:	lea    rcx,[rip+0x19d1d]        # 436ed9 <flatcc_builder_padding_base@@Base+0x339>
  41d1bc:	mov    edx,0x21e
  41d1c1:	call   406070 <__assert_fail@plt>
  41d1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041d1d0 <flatcc_builder_get_current_user_frame@@Base>:
  41d1d0:	mov    rax,QWORD PTR [rdi+0x178]
  41d1d7:	ret    
  41d1d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d1e0 <flatcc_builder_get_user_frame_ptr@@Base>:
  41d1e0:	mov    eax,esi
  41d1e2:	add    rax,QWORD PTR [rdi+0xc8]
  41d1e9:	ret    
  41d1ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d1f0 <flatcc_builder_embed_buffer@@Base>:
  41d1f0:	push   rbp
  41d1f1:	push   r15
  41d1f3:	push   r14
  41d1f5:	push   r12
  41d1f7:	push   rbx
  41d1f8:	sub    rsp,0xa0
  41d1ff:	mov    ebx,r9d
  41d202:	mov    rbp,rcx
  41d205:	mov    r15,rdx
  41d208:	mov    eax,esi
  41d20a:	mov    r12,rdi
  41d20d:	mov    WORD PTR [rsp+0xa],r8w
  41d213:	xor    ecx,ecx
  41d215:	cmp    DWORD PTR [rdi+0x100],0x0
  41d21c:	setne  cl
  41d21f:	lea    rsi,[rsp+0xa]
  41d224:	mov    edx,eax
  41d226:	call   41d390 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41d22b:	and    ebx,0x2
  41d22e:	movzx  eax,WORD PTR [rsp+0xa]
  41d233:	mov    r14d,DWORD PTR [r12+0xf0]
  41d23b:	lea    ecx,[rbp+rbx*2+0x0]
  41d23f:	mov    edx,r14d
  41d242:	sub    edx,ecx
  41d244:	add    eax,0xffffffff
  41d247:	and    eax,edx
  41d249:	lea    ecx,[rax+rbp*1]
  41d24c:	mov    DWORD PTR [rsp+0xc],ecx
  41d250:	mov    QWORD PTR [rsp+0x10],0x0
  41d259:	mov    DWORD PTR [rsp+0x18],0x0
  41d261:	cmp    DWORD PTR [r12+0x100],0x0
  41d26a:	je     41d33e <flatcc_builder_embed_buffer@@Base+0x14e>
  41d270:	mov    QWORD PTR [rsp+0x10],0x4
  41d279:	lea    rcx,[rsp+0xc]
  41d27e:	mov    QWORD PTR [rsp+0x20],rcx
  41d283:	mov    QWORD PTR [rsp+0x28],0x4
  41d28c:	mov    DWORD PTR [rsp+0x18],0x1
  41d294:	mov    edx,0x1
  41d299:	mov    r8d,0x4
  41d29f:	test   rbp,rbp
  41d2a2:	je     41d2c3 <flatcc_builder_embed_buffer@@Base+0xd3>
  41d2a4:	add    r8,rbp
  41d2a7:	mov    QWORD PTR [rsp+0x10],r8
  41d2ac:	mov    ecx,edx
  41d2ae:	shl    rcx,0x4
  41d2b2:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  41d2b7:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  41d2bc:	add    edx,0x1
  41d2bf:	mov    DWORD PTR [rsp+0x18],edx
  41d2c3:	test   eax,eax
  41d2c5:	je     41d2ef <flatcc_builder_embed_buffer@@Base+0xff>
  41d2c7:	mov    eax,eax
  41d2c9:	add    r8,rax
  41d2cc:	mov    QWORD PTR [rsp+0x10],r8
  41d2d1:	mov    ecx,edx
  41d2d3:	shl    rcx,0x4
  41d2d7:	lea    rsi,[rip+0x198c2]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41d2de:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  41d2e3:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  41d2e8:	add    edx,0x1
  41d2eb:	mov    DWORD PTR [rsp+0x18],edx
  41d2ef:	cmp    r8,0x11
  41d2f3:	setb   al
  41d2f6:	lea    rcx,[r8-0x10]
  41d2fa:	shr    rcx,0x20
  41d2fe:	sete   cl
  41d301:	test   r8d,r8d
  41d304:	jle    41d351 <flatcc_builder_embed_buffer@@Base+0x161>
  41d306:	or     al,cl
  41d308:	je     41d351 <flatcc_builder_embed_buffer@@Base+0x161>
  41d30a:	sub    r14d,r8d
  41d30d:	mov    rdi,QWORD PTR [r12+0x38]
  41d312:	lea    rsi,[rsp+0x20]
  41d317:	mov    ecx,r14d
  41d31a:	call   QWORD PTR [r12+0x48]
  41d31f:	test   eax,eax
  41d321:	jne    41d370 <flatcc_builder_embed_buffer@@Base+0x180>
  41d323:	mov    DWORD PTR [r12+0xf0],r14d
  41d32b:	mov    eax,r14d
  41d32e:	add    rsp,0xa0
  41d335:	pop    rbx
  41d336:	pop    r12
  41d338:	pop    r14
  41d33a:	pop    r15
  41d33c:	pop    rbp
  41d33d:	ret    
  41d33e:	xor    edx,edx
  41d340:	xor    r8d,r8d
  41d343:	test   rbp,rbp
  41d346:	jne    41d2a4 <flatcc_builder_embed_buffer@@Base+0xb4>
  41d34c:	jmp    41d2c3 <flatcc_builder_embed_buffer@@Base+0xd3>
  41d351:	lea    rdi,[rip+0x1ac8a]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d358:	lea    rsi,[rip+0x19ac3]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d35f:	lea    rcx,[rip+0x1ab3b]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41d366:	mov    edx,0x287
  41d36b:	call   406070 <__assert_fail@plt>
  41d370:	lea    rdi,[rip+0x1ac6b]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d377:	lea    rsi,[rip+0x19aa4]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d37e:	lea    rcx,[rip+0x1ab1c]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41d385:	mov    edx,0x28b
  41d38a:	call   406070 <__assert_fail@plt>
  41d38f:	nop
  41d390:	push   rbx
  41d391:	sub    rsp,0x90
  41d398:	mov    rax,rdi
  41d39b:	test   dx,dx
  41d39e:	jne    41d3b1 <flatcc_builder_embed_buffer@@Base+0x1c1>
  41d3a0:	mov    edi,DWORD PTR [rax+0xec]
  41d3a6:	test   di,di
  41d3a9:	mov    edx,0x1
  41d3ae:	cmovne edx,edi
  41d3b1:	movzx  ebx,WORD PTR [rsi]
  41d3b4:	mov    edi,0x4
  41d3b9:	cmp    ebx,0x4
  41d3bc:	cmovae edi,ebx
  41d3bf:	jb     41d3cc <flatcc_builder_embed_buffer@@Base+0x1dc>
  41d3c1:	cmp    di,dx
  41d3c4:	jb     41d3cc <flatcc_builder_embed_buffer@@Base+0x1dc>
  41d3c6:	test   ecx,ecx
  41d3c8:	jne    41d434 <flatcc_builder_embed_buffer@@Base+0x244>
  41d3ca:	jmp    41d3d9 <flatcc_builder_embed_buffer@@Base+0x1e9>
  41d3cc:	cmp    di,dx
  41d3cf:	cmovb  edi,edx
  41d3d2:	mov    WORD PTR [rsi],di
  41d3d5:	test   ecx,ecx
  41d3d7:	jne    41d434 <flatcc_builder_embed_buffer@@Base+0x244>
  41d3d9:	mov    ebx,DWORD PTR [rax+0xf4]
  41d3df:	movzx  r8d,dx
  41d3e3:	add    r8d,0xffffffff
  41d3e7:	and    r8d,ebx
  41d3ea:	je     41d434 <flatcc_builder_embed_buffer@@Base+0x244>
  41d3ec:	mov    QWORD PTR [rsp],r8
  41d3f0:	lea    rcx,[rip+0x197a9]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41d3f7:	mov    QWORD PTR [rsp+0x10],rcx
  41d3fc:	mov    QWORD PTR [rsp+0x18],r8
  41d401:	mov    DWORD PTR [rsp+0x8],0x1
  41d409:	lea    ecx,[r8+rbx*1]
  41d40d:	mov    DWORD PTR [rax+0xf4],ecx
  41d413:	test   r8d,r8d
  41d416:	js     41d43d <flatcc_builder_embed_buffer@@Base+0x24d>
  41d418:	mov    rdi,QWORD PTR [rax+0x38]
  41d41c:	lea    rsi,[rsp+0x10]
  41d421:	mov    edx,0x1
  41d426:	mov    ecx,ebx
  41d428:	call   QWORD PTR [rax+0x48]
  41d42b:	test   eax,eax
  41d42d:	jne    41d45c <flatcc_builder_embed_buffer@@Base+0x26c>
  41d42f:	cmp    ebx,0xffffffff
  41d432:	je     41d47b <flatcc_builder_embed_buffer@@Base+0x28b>
  41d434:	add    rsp,0x90
  41d43b:	pop    rbx
  41d43c:	ret    
  41d43d:	lea    rdi,[rip+0x1ab9e]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d444:	lea    rsi,[rip+0x199d7]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d44b:	lea    rcx,[rip+0x1ab0b]        # 437f5d <flatcc_builder_padding_base@@Base+0x13bd>
  41d452:	mov    edx,0x2a1
  41d457:	call   406070 <__assert_fail@plt>
  41d45c:	lea    rdi,[rip+0x1ab7f]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d463:	lea    rsi,[rip+0x199b8]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d46a:	lea    rcx,[rip+0x1aaec]        # 437f5d <flatcc_builder_padding_base@@Base+0x13bd>
  41d471:	mov    edx,0x2a5
  41d476:	call   406070 <__assert_fail@plt>
  41d47b:	lea    rdi,[rip+0x1ab60]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d482:	lea    rsi,[rip+0x19999]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d489:	lea    rcx,[rip+0x1a9cf]        # 437e5f <flatcc_builder_padding_base@@Base+0x12bf>
  41d490:	mov    edx,0x2be
  41d495:	call   406070 <__assert_fail@plt>
  41d49a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d4a0 <flatcc_builder_create_buffer@@Base>:
  41d4a0:	push   rbp
  41d4a1:	push   r15
  41d4a3:	push   r14
  41d4a5:	push   r13
  41d4a7:	push   r12
  41d4a9:	push   rbx
  41d4aa:	sub    rsp,0xa8
  41d4b1:	mov    r12d,r9d
  41d4b4:	mov    r14d,ecx
  41d4b7:	mov    rbp,rsi
  41d4ba:	mov    r13,rdi
  41d4bd:	mov    WORD PTR [rsp+0xa],r8w
  41d4c3:	mov    DWORD PTR [rsp+0xc],0x0
  41d4cb:	mov    r15d,r9d
  41d4ce:	and    r15d,0x1
  41d4d2:	lea    rsi,[rsp+0xa]
  41d4d7:	mov    ecx,r15d
  41d4da:	call   41d390 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41d4df:	movzx  eax,WORD PTR [rsp+0xa]
  41d4e4:	cmp    WORD PTR [r13+0xe8],ax
  41d4ec:	jae    41d4f6 <flatcc_builder_create_buffer@@Base+0x56>
  41d4ee:	mov    WORD PTR [r13+0xe8],ax
  41d4f6:	movzx  edx,ax
  41d4f9:	xor    eax,eax
  41d4fb:	test   rbp,rbp
  41d4fe:	je     41d518 <flatcc_builder_create_buffer@@Base+0x78>
  41d500:	mov    ecx,DWORD PTR [rbp+0x0]
  41d503:	mov    DWORD PTR [rsp+0xc],ecx
  41d507:	xor    edi,edi
  41d509:	test   ecx,ecx
  41d50b:	setne  dil
  41d50f:	mov    rsi,rdi
  41d512:	shl    rsi,0x2
  41d516:	jmp    41d51c <flatcc_builder_create_buffer@@Base+0x7c>
  41d518:	xor    edi,edi
  41d51a:	xor    esi,esi
  41d51c:	lea    ecx,[r12+r12*1]
  41d520:	and    ecx,0x4
  41d523:	mov    ebp,DWORD PTR [r13+0xf0]
  41d52a:	xor    ecx,0xfffffffc
  41d52d:	add    ecx,ebp
  41d52f:	sub    ecx,esi
  41d531:	add    edx,0xffffffff
  41d534:	mov    QWORD PTR [rsp+0x18],0x0
  41d53d:	mov    DWORD PTR [rsp+0x20],0x0
  41d545:	test   r12b,0x3
  41d549:	je     41d57c <flatcc_builder_create_buffer@@Base+0xdc>
  41d54b:	mov    QWORD PTR [rsp+0x18],0x4
  41d554:	lea    rax,[rsp+0x10]
  41d559:	mov    QWORD PTR [rsp+0x28],rax
  41d55e:	mov    QWORD PTR [rsp+0x30],0x4
  41d567:	mov    DWORD PTR [rsp+0x20],0x1
  41d56f:	mov    eax,0x1
  41d574:	mov    r8d,0x8
  41d57a:	jmp    41d582 <flatcc_builder_create_buffer@@Base+0xe2>
  41d57c:	mov    r8d,0x4
  41d582:	and    ecx,edx
  41d584:	mov    QWORD PTR [rsp+0x18],r8
  41d589:	mov    edx,eax
  41d58b:	shl    rdx,0x4
  41d58f:	lea    rbx,[rsp+0x14]
  41d594:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  41d599:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  41d5a2:	lea    edx,[rax+0x1]
  41d5a5:	mov    DWORD PTR [rsp+0x20],edx
  41d5a9:	test   dil,dil
  41d5ac:	je     41d5d4 <flatcc_builder_create_buffer@@Base+0x134>
  41d5ae:	add    r8,rsi
  41d5b1:	mov    QWORD PTR [rsp+0x18],r8
  41d5b6:	mov    edx,edx
  41d5b8:	shl    rdx,0x4
  41d5bc:	lea    rdi,[rsp+0xc]
  41d5c1:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  41d5c6:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  41d5cb:	or     eax,0x2
  41d5ce:	mov    DWORD PTR [rsp+0x20],eax
  41d5d2:	mov    edx,eax
  41d5d4:	test   ecx,ecx
  41d5d6:	je     41d600 <flatcc_builder_create_buffer@@Base+0x160>
  41d5d8:	mov    eax,ecx
  41d5da:	add    r8,rax
  41d5dd:	mov    QWORD PTR [rsp+0x18],r8
  41d5e2:	mov    ecx,edx
  41d5e4:	shl    rcx,0x4
  41d5e8:	lea    rsi,[rip+0x195b1]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41d5ef:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  41d5f4:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  41d5f9:	add    edx,0x1
  41d5fc:	mov    DWORD PTR [rsp+0x20],edx
  41d600:	xor    eax,eax
  41d602:	test   r12b,0x3
  41d606:	setne  al
  41d609:	sub    ebp,r8d
  41d60c:	lea    eax,[rbp+rax*4+0x0]
  41d610:	mov    ecx,r15d
  41d613:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  41d61b:	sub    ecx,eax
  41d61d:	mov    DWORD PTR [rsp+0x10],ecx
  41d621:	sub    r14d,eax
  41d624:	mov    DWORD PTR [rsp+0x14],r14d
  41d629:	cmp    r8,0x11
  41d62d:	setb   al
  41d630:	lea    rcx,[r8-0x10]
  41d634:	shr    rcx,0x20
  41d638:	sete   cl
  41d63b:	test   r8d,r8d
  41d63e:	jle    41d676 <flatcc_builder_create_buffer@@Base+0x1d6>
  41d640:	or     al,cl
  41d642:	je     41d676 <flatcc_builder_create_buffer@@Base+0x1d6>
  41d644:	mov    rdi,QWORD PTR [r13+0x38]
  41d648:	lea    rsi,[rsp+0x28]
  41d64d:	mov    ecx,ebp
  41d64f:	call   QWORD PTR [r13+0x48]
  41d653:	test   eax,eax
  41d655:	jne    41d695 <flatcc_builder_create_buffer@@Base+0x1f5>
  41d657:	mov    DWORD PTR [r13+0xf0],ebp
  41d65e:	test   ebp,ebp
  41d660:	je     41d6b4 <flatcc_builder_create_buffer@@Base+0x214>
  41d662:	mov    eax,ebp
  41d664:	add    rsp,0xa8
  41d66b:	pop    rbx
  41d66c:	pop    r12
  41d66e:	pop    r13
  41d670:	pop    r14
  41d672:	pop    r15
  41d674:	pop    rbp
  41d675:	ret    
  41d676:	lea    rdi,[rip+0x1a965]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d67d:	lea    rsi,[rip+0x1979e]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d684:	lea    rcx,[rip+0x1a816]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41d68b:	mov    edx,0x287
  41d690:	call   406070 <__assert_fail@plt>
  41d695:	lea    rdi,[rip+0x1a946]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d69c:	lea    rsi,[rip+0x1977f]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d6a3:	lea    rcx,[rip+0x1a7f7]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41d6aa:	mov    edx,0x28b
  41d6af:	call   406070 <__assert_fail@plt>
  41d6b4:	lea    rdi,[rip+0x1a927]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d6bb:	lea    rsi,[rip+0x19760]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d6c2:	lea    rcx,[rip+0x198ae]        # 436f77 <flatcc_builder_padding_base@@Base+0x3d7>
  41d6c9:	mov    edx,0x304
  41d6ce:	call   406070 <__assert_fail@plt>
  41d6d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6dd:	nop    DWORD PTR [rax]

000000000041d6e0 <flatcc_builder_create_struct@@Base>:
  41d6e0:	push   rbp
  41d6e1:	push   r14
  41d6e3:	push   rbx
  41d6e4:	sub    rsp,0x90
  41d6eb:	test   cx,cx
  41d6ee:	je     41d7e9 <flatcc_builder_create_struct@@Base+0x109>
  41d6f4:	mov    rax,rdx
  41d6f7:	mov    r14,rdi
  41d6fa:	cmp    WORD PTR [rdi+0xe8],cx
  41d701:	jae    41d70b <flatcc_builder_create_struct@@Base+0x2b>
  41d703:	mov    WORD PTR [r14+0xe8],cx
  41d70b:	mov    ebp,DWORD PTR [r14+0xf0]
  41d712:	mov    edx,ebp
  41d714:	sub    edx,eax
  41d716:	movzx  ecx,cx
  41d719:	add    ecx,0xffffffff
  41d71c:	and    ecx,edx
  41d71e:	mov    QWORD PTR [rsp],0x0
  41d726:	mov    DWORD PTR [rsp+0x8],0x0
  41d72e:	test   rax,rax
  41d731:	je     41d7c2 <flatcc_builder_create_struct@@Base+0xe2>
  41d737:	mov    QWORD PTR [rsp],rax
  41d73b:	mov    QWORD PTR [rsp+0x10],rsi
  41d740:	mov    QWORD PTR [rsp+0x18],rax
  41d745:	mov    DWORD PTR [rsp+0x8],0x1
  41d74d:	mov    edx,0x1
  41d752:	test   ecx,ecx
  41d754:	je     41d77b <flatcc_builder_create_struct@@Base+0x9b>
  41d756:	add    rax,rcx
  41d759:	mov    QWORD PTR [rsp],rax
  41d75d:	mov    esi,edx
  41d75f:	shl    rsi,0x4
  41d763:	lea    rdi,[rip+0x19436]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41d76a:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  41d76f:	mov    QWORD PTR [rsp+rsi*1+0x18],rcx
  41d774:	add    edx,0x1
  41d777:	mov    DWORD PTR [rsp+0x8],edx
  41d77b:	cmp    rax,0x11
  41d77f:	setb   cl
  41d782:	lea    rsi,[rax-0x10]
  41d786:	shr    rsi,0x20
  41d78a:	sete   bl
  41d78d:	test   eax,eax
  41d78f:	jle    41d7ca <flatcc_builder_create_struct@@Base+0xea>
  41d791:	or     cl,bl
  41d793:	je     41d7ca <flatcc_builder_create_struct@@Base+0xea>
  41d795:	sub    ebp,eax
  41d797:	mov    rdi,QWORD PTR [r14+0x38]
  41d79b:	lea    rsi,[rsp+0x10]
  41d7a0:	mov    ecx,ebp
  41d7a2:	mov    r8,rax
  41d7a5:	call   QWORD PTR [r14+0x48]
  41d7a9:	test   eax,eax
  41d7ab:	jne    41d808 <flatcc_builder_create_struct@@Base+0x128>
  41d7ad:	mov    DWORD PTR [r14+0xf0],ebp
  41d7b4:	mov    eax,ebp
  41d7b6:	add    rsp,0x90
  41d7bd:	pop    rbx
  41d7be:	pop    r14
  41d7c0:	pop    rbp
  41d7c1:	ret    
  41d7c2:	xor    edx,edx
  41d7c4:	test   ecx,ecx
  41d7c6:	jne    41d756 <flatcc_builder_create_struct@@Base+0x76>
  41d7c8:	jmp    41d77b <flatcc_builder_create_struct@@Base+0x9b>
  41d7ca:	lea    rdi,[rip+0x1a811]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d7d1:	lea    rsi,[rip+0x1964a]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d7d8:	lea    rcx,[rip+0x1a6c2]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41d7df:	mov    edx,0x287
  41d7e4:	call   406070 <__assert_fail@plt>
  41d7e9:	lea    rdi,[rip+0x1980a]        # 436ffa <flatcc_builder_padding_base@@Base+0x45a>
  41d7f0:	lea    rsi,[rip+0x1962b]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d7f7:	lea    rcx,[rip+0x19807]        # 437005 <flatcc_builder_padding_base@@Base+0x465>
  41d7fe:	mov    edx,0x30f
  41d803:	call   406070 <__assert_fail@plt>
  41d808:	lea    rdi,[rip+0x1a7d3]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41d80f:	lea    rsi,[rip+0x1960c]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41d816:	lea    rcx,[rip+0x1a684]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41d81d:	mov    edx,0x28b
  41d822:	call   406070 <__assert_fail@plt>
  41d827:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d830 <flatcc_builder_start_buffer@@Base>:
  41d830:	push   rbp
  41d831:	push   r15
  41d833:	push   r14
  41d835:	push   rbx
  41d836:	push   rax
  41d837:	mov    r15d,ecx
  41d83a:	mov    ebp,edx
  41d83c:	mov    r14,rsi
  41d83f:	mov    rbx,rdi
  41d842:	movzx  esi,WORD PTR [rdi+0xe8]
  41d849:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41d84e:	mov    ecx,eax
  41d850:	mov    eax,0xffffffff
  41d855:	test   ecx,ecx
  41d857:	jne    41d8fc <flatcc_builder_start_buffer@@Base+0xcc>
  41d85d:	mov    WORD PTR [rbx+0xe8],0x1
  41d866:	movzx  eax,WORD PTR [rbx+0xec]
  41d86d:	mov    rcx,QWORD PTR [rbx+0x30]
  41d871:	mov    WORD PTR [rcx+0x22],ax
  41d875:	mov    WORD PTR [rbx+0xec],bp
  41d87c:	movzx  eax,WORD PTR [rbx+0x10c]
  41d883:	mov    rcx,QWORD PTR [rbx+0x30]
  41d887:	mov    WORD PTR [rcx+0x20],ax
  41d88b:	mov    WORD PTR [rbx+0x10c],r15w
  41d893:	mov    eax,DWORD PTR [rbx+0xf8]
  41d899:	mov    rcx,QWORD PTR [rbx+0x30]
  41d89d:	mov    DWORD PTR [rcx+0x14],eax
  41d8a0:	mov    eax,DWORD PTR [rbx+0x100]
  41d8a6:	mov    rcx,QWORD PTR [rbx+0x30]
  41d8aa:	mov    DWORD PTR [rcx+0x1c],eax
  41d8ad:	mov    eax,DWORD PTR [rbx+0xf0]
  41d8b3:	mov    DWORD PTR [rbx+0xf8],eax
  41d8b9:	mov    eax,DWORD PTR [rbx+0xfc]
  41d8bf:	lea    ecx,[rax+0x1]
  41d8c2:	mov    DWORD PTR [rbx+0xfc],ecx
  41d8c8:	mov    DWORD PTR [rbx+0x100],eax
  41d8ce:	mov    eax,DWORD PTR [rbx+0x110]
  41d8d4:	mov    rcx,QWORD PTR [rbx+0x30]
  41d8d8:	mov    DWORD PTR [rcx+0x10],eax
  41d8db:	test   r14,r14
  41d8de:	jne    41d8e7 <flatcc_builder_start_buffer@@Base+0xb7>
  41d8e0:	lea    r14,[rip+0x192b9]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41d8e7:	mov    eax,DWORD PTR [r14]
  41d8ea:	mov    DWORD PTR [rbx+0x110],eax
  41d8f0:	mov    rax,QWORD PTR [rbx+0x30]
  41d8f4:	mov    WORD PTR [rax+0xe],0x1
  41d8fa:	xor    eax,eax
  41d8fc:	add    rsp,0x8
  41d900:	pop    rbx
  41d901:	pop    r14
  41d903:	pop    r15
  41d905:	pop    rbp
  41d906:	ret    
  41d907:	nop    WORD PTR [rax+rax*1+0x0]
  41d910:	push   rbp
  41d911:	push   r15
  41d913:	push   r14
  41d915:	push   rbx
  41d916:	push   rax
  41d917:	mov    r14d,esi
  41d91a:	mov    rbx,rdi
  41d91d:	movsxd rbp,DWORD PTR [rdi+0x104]
  41d924:	lea    eax,[rbp+0x1]
  41d927:	mov    DWORD PTR [rdi+0x104],eax
  41d92d:	cmp    ebp,DWORD PTR [rdi+0x108]
  41d933:	jge    41d946 <flatcc_builder_start_buffer@@Base+0x116>
  41d935:	mov    rax,QWORD PTR [rbx+0x30]
  41d939:	add    rax,0x24
  41d93d:	mov    QWORD PTR [rbx+0x30],rax
  41d941:	jmp    41d9db <flatcc_builder_start_buffer@@Base+0x1ab>
  41d946:	mov    eax,DWORD PTR [rbx+0x120]
  41d94c:	mov    r15d,0xffffffff
  41d952:	test   eax,eax
  41d954:	jle    41d95e <flatcc_builder_start_buffer@@Base+0x12e>
  41d956:	cmp    ebp,eax
  41d958:	jge    41da16 <flatcc_builder_start_buffer@@Base+0x1e6>
  41d95e:	shl    rbp,0x2
  41d962:	lea    rdx,[rbp*8+0x24]
  41d96a:	add    rdx,rbp
  41d96d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  41d974:	jbe    41d994 <flatcc_builder_start_buffer@@Base+0x164>
  41d976:	lea    rsi,[rbx+0x98]
  41d97d:	mov    rdi,QWORD PTR [rbx+0x40]
  41d981:	xor    ecx,ecx
  41d983:	mov    r8d,0x4
  41d989:	call   QWORD PTR [rbx+0x50]
  41d98c:	test   eax,eax
  41d98e:	jne    41da24 <flatcc_builder_start_buffer@@Base+0x1f4>
  41d994:	lea    rax,[rbp*8+0x0]
  41d99c:	add    rax,rbp
  41d99f:	add    rax,QWORD PTR [rbx+0x98]
  41d9a6:	mov    QWORD PTR [rbx+0x30],rax
  41d9aa:	je     41da16 <flatcc_builder_start_buffer@@Base+0x1e6>
  41d9ac:	movabs rdx,0xe38e38e38e38e38f
  41d9b6:	mulx   rdx,rcx,QWORD PTR [rbx+0xa0]
  41d9bf:	shr    rdx,0x5
  41d9c3:	mov    ecx,DWORD PTR [rbx+0x120]
  41d9c9:	cmp    ecx,edx
  41d9cb:	mov    esi,edx
  41d9cd:	cmovle esi,ecx
  41d9d0:	test   ecx,ecx
  41d9d2:	cmovle esi,edx
  41d9d5:	mov    DWORD PTR [rbx+0x108],esi
  41d9db:	mov    ecx,DWORD PTR [rbx+0x20]
  41d9de:	mov    DWORD PTR [rax+0x8],ecx
  41d9e1:	movzx  edx,WORD PTR [rbx+0xea]
  41d9e8:	mov    WORD PTR [rax+0xc],dx
  41d9ec:	mov    WORD PTR [rbx+0xea],r14w
  41d9f4:	mov    edx,DWORD PTR [rbx+0x28]
  41d9f7:	mov    DWORD PTR [rax],edx
  41d9f9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41da00:	lea    eax,[rcx+rdx*1]
  41da03:	add    eax,0x7
  41da06:	and    eax,0xfffffff8
  41da09:	mov    DWORD PTR [rbx+0x28],eax
  41da0c:	mov    DWORD PTR [rbx+0x20],0x0
  41da13:	xor    r15d,r15d
  41da16:	mov    eax,r15d
  41da19:	add    rsp,0x8
  41da1d:	pop    rbx
  41da1e:	pop    r14
  41da20:	pop    r15
  41da22:	pop    rbp
  41da23:	ret    
  41da24:	lea    rdi,[rip+0x1a5b7]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41da2b:	lea    rsi,[rip+0x193f0]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41da32:	lea    rcx,[rip+0x1a3e3]        # 437e1c <flatcc_builder_padding_base@@Base+0x127c>
  41da39:	mov    edx,0x134
  41da3e:	call   406070 <__assert_fail@plt>
  41da43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da4d:	nop    DWORD PTR [rax]

000000000041da50 <flatcc_builder_end_buffer@@Base>:
  41da50:	push   rbp
  41da51:	push   rbx
  41da52:	push   rax
  41da53:	mov    rcx,QWORD PTR [rdi+0x30]
  41da57:	movzx  ecx,WORD PTR [rcx+0xe]
  41da5b:	cmp    ecx,0x1
  41da5e:	jne    41db5e <flatcc_builder_end_buffer@@Base+0x10e>
  41da64:	mov    eax,esi
  41da66:	mov    rbx,rdi
  41da69:	movzx  ecx,WORD PTR [rdi+0x10c]
  41da70:	and    ecx,0x2
  41da73:	xor    r9d,r9d
  41da76:	cmp    DWORD PTR [rdi+0x100],0x0
  41da7d:	setne  r9b
  41da81:	or     r9d,ecx
  41da84:	movzx  edi,WORD PTR [rdi+0xe8]
  41da8b:	movzx  ecx,WORD PTR [rbx+0xec]
  41da92:	cmp    di,cx
  41da95:	jae    41daa0 <flatcc_builder_end_buffer@@Base+0x50>
  41da97:	mov    WORD PTR [rbx+0xe8],cx
  41da9e:	mov    edi,ecx
  41daa0:	lea    rsi,[rbx+0x110]
  41daa7:	movzx  edx,cx
  41daaa:	movzx  r8d,di
  41daae:	mov    rdi,rbx
  41dab1:	mov    ecx,eax
  41dab3:	call   41d4a0 <flatcc_builder_create_buffer@@Base>
  41dab8:	mov    ebp,eax
  41daba:	test   eax,eax
  41dabc:	je     41db55 <flatcc_builder_end_buffer@@Base+0x105>
  41dac2:	mov    rax,QWORD PTR [rbx+0x30]
  41dac6:	mov    ecx,DWORD PTR [rax+0x14]
  41dac9:	mov    DWORD PTR [rbx+0xf8],ecx
  41dacf:	mov    ecx,DWORD PTR [rax+0x1c]
  41dad2:	mov    DWORD PTR [rbx+0x100],ecx
  41dad8:	mov    ecx,DWORD PTR [rax+0x10]
  41dadb:	mov    DWORD PTR [rbx+0x110],ecx
  41dae1:	movzx  eax,WORD PTR [rax+0x20]
  41dae5:	mov    WORD PTR [rbx+0x10c],ax
  41daec:	mov    rdi,QWORD PTR [rbx+0x18]
  41daf0:	mov    edx,DWORD PTR [rbx+0x20]
  41daf3:	xor    esi,esi
  41daf5:	call   406080 <memset@plt>
  41dafa:	mov    rax,QWORD PTR [rbx+0x30]
  41dafe:	mov    ecx,DWORD PTR [rax+0x8]
  41db01:	mov    DWORD PTR [rbx+0x20],ecx
  41db04:	mov    ecx,DWORD PTR [rax]
  41db06:	mov    DWORD PTR [rbx+0x28],ecx
  41db09:	mov    edx,DWORD PTR [rax+0x4]
  41db0c:	mov    rsi,rcx
  41db0f:	add    rsi,QWORD PTR [rbx+0x68]
  41db13:	mov    QWORD PTR [rbx+0x18],rsi
  41db17:	mov    esi,DWORD PTR [rbx+0x70]
  41db1a:	sub    esi,ecx
  41db1c:	cmp    esi,edx
  41db1e:	cmova  esi,edx
  41db21:	mov    DWORD PTR [rbx+0x24],esi
  41db24:	movzx  ecx,WORD PTR [rbx+0xea]
  41db2b:	cmp    WORD PTR [rbx+0xe8],cx
  41db32:	jae    41db3b <flatcc_builder_end_buffer@@Base+0xeb>
  41db34:	mov    WORD PTR [rbx+0xe8],cx
  41db3b:	movzx  ecx,WORD PTR [rax+0xc]
  41db3f:	mov    WORD PTR [rbx+0xea],cx
  41db46:	add    rax,0xffffffffffffffdc
  41db4a:	mov    QWORD PTR [rbx+0x30],rax
  41db4e:	add    DWORD PTR [rbx+0x104],0xffffffff
  41db55:	mov    eax,ebp
  41db57:	add    rsp,0x8
  41db5b:	pop    rbx
  41db5c:	pop    rbp
  41db5d:	ret    
  41db5e:	lea    rdi,[rip+0x19506]        # 43706b <flatcc_builder_padding_base@@Base+0x4cb>
  41db65:	lea    rsi,[rip+0x192b6]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41db6c:	lea    rcx,[rip+0x19524]        # 437097 <flatcc_builder_padding_base@@Base+0x4f7>
  41db73:	mov    edx,0x346
  41db78:	call   406070 <__assert_fail@plt>
  41db7d:	nop    DWORD PTR [rax]

000000000041db80 <flatcc_builder_start_struct@@Base>:
  41db80:	push   r15
  41db82:	push   r14
  41db84:	push   rbx
  41db85:	mov    r14,rsi
  41db88:	mov    rbx,rdi
  41db8b:	mov    esi,edx
  41db8d:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41db92:	test   eax,eax
  41db94:	je     41db9d <flatcc_builder_start_struct@@Base+0x1d>
  41db96:	xor    eax,eax
  41db98:	jmp    41dc32 <flatcc_builder_start_struct@@Base+0xb2>
  41db9d:	mov    rdx,QWORD PTR [rbx+0x30]
  41dba1:	mov    WORD PTR [rdx+0xe],0x2
  41dba7:	mov    ecx,DWORD PTR [rbx+0x28]
  41dbaa:	mov    esi,DWORD PTR [rbx+0x70]
  41dbad:	mov    rax,QWORD PTR [rbx+0x68]
  41dbb1:	add    rax,rcx
  41dbb4:	mov    QWORD PTR [rbx+0x18],rax
  41dbb8:	sub    esi,ecx
  41dbba:	cmp    esi,0xfffffffc
  41dbbd:	mov    edi,0xfffffffc
  41dbc2:	cmovb  edi,esi
  41dbc5:	mov    DWORD PTR [rbx+0x24],edi
  41dbc8:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  41dbcf:	mov    r15d,DWORD PTR [rbx+0x20]
  41dbd3:	add    r14d,r15d
  41dbd6:	mov    DWORD PTR [rbx+0x20],r14d
  41dbda:	cmp    r14d,edi
  41dbdd:	jb     41dc2f <flatcc_builder_start_struct@@Base+0xaf>
  41dbdf:	add    r14d,0x1
  41dbe3:	lea    rsi,[rbx+0x68]
  41dbe7:	mov    rdi,QWORD PTR [rbx+0x40]
  41dbeb:	add    r14,rcx
  41dbee:	mov    ecx,0x1
  41dbf3:	mov    r8d,0x1
  41dbf9:	mov    rdx,r14
  41dbfc:	call   QWORD PTR [rbx+0x50]
  41dbff:	test   eax,eax
  41dc01:	jne    41db96 <flatcc_builder_start_struct@@Base+0x16>
  41dc03:	mov    ecx,DWORD PTR [rbx+0x28]
  41dc06:	mov    rax,rcx
  41dc09:	add    rax,QWORD PTR [rbx+0x68]
  41dc0d:	mov    QWORD PTR [rbx+0x18],rax
  41dc11:	mov    edx,DWORD PTR [rbx+0x70]
  41dc14:	sub    edx,ecx
  41dc16:	cmp    edx,0xfffffffc
  41dc19:	mov    ecx,0xfffffffc
  41dc1e:	cmovb  ecx,edx
  41dc21:	mov    DWORD PTR [rbx+0x24],ecx
  41dc24:	mov    rcx,QWORD PTR [rbx+0x30]
  41dc28:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41dc2f:	add    rax,r15
  41dc32:	pop    rbx
  41dc33:	pop    r14
  41dc35:	pop    r15
  41dc37:	ret    
  41dc38:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041dc40 <flatcc_builder_struct_edit@@Base>:
  41dc40:	mov    rax,QWORD PTR [rdi+0x18]
  41dc44:	ret    
  41dc45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc4f:	nop

000000000041dc50 <flatcc_builder_end_struct@@Base>:
  41dc50:	push   rbp
  41dc51:	push   rbx
  41dc52:	push   rax
  41dc53:	mov    rax,QWORD PTR [rdi+0x30]
  41dc57:	movzx  eax,WORD PTR [rax+0xe]
  41dc5b:	cmp    eax,0x2
  41dc5e:	jne    41dcf2 <flatcc_builder_end_struct@@Base+0xa2>
  41dc64:	mov    rbx,rdi
  41dc67:	mov    rsi,QWORD PTR [rdi+0x18]
  41dc6b:	mov    edx,DWORD PTR [rdi+0x20]
  41dc6e:	movzx  ecx,WORD PTR [rdi+0xea]
  41dc75:	call   41d6e0 <flatcc_builder_create_struct@@Base>
  41dc7a:	mov    ebp,eax
  41dc7c:	test   eax,eax
  41dc7e:	je     41dce9 <flatcc_builder_end_struct@@Base+0x99>
  41dc80:	mov    rdi,QWORD PTR [rbx+0x18]
  41dc84:	mov    edx,DWORD PTR [rbx+0x20]
  41dc87:	xor    esi,esi
  41dc89:	call   406080 <memset@plt>
  41dc8e:	mov    rax,QWORD PTR [rbx+0x30]
  41dc92:	mov    ecx,DWORD PTR [rax+0x8]
  41dc95:	mov    DWORD PTR [rbx+0x20],ecx
  41dc98:	mov    ecx,DWORD PTR [rax]
  41dc9a:	mov    DWORD PTR [rbx+0x28],ecx
  41dc9d:	mov    edx,DWORD PTR [rax+0x4]
  41dca0:	mov    rsi,rcx
  41dca3:	add    rsi,QWORD PTR [rbx+0x68]
  41dca7:	mov    QWORD PTR [rbx+0x18],rsi
  41dcab:	mov    esi,DWORD PTR [rbx+0x70]
  41dcae:	sub    esi,ecx
  41dcb0:	cmp    esi,edx
  41dcb2:	cmova  esi,edx
  41dcb5:	mov    DWORD PTR [rbx+0x24],esi
  41dcb8:	movzx  ecx,WORD PTR [rbx+0xea]
  41dcbf:	cmp    WORD PTR [rbx+0xe8],cx
  41dcc6:	jae    41dccf <flatcc_builder_end_struct@@Base+0x7f>
  41dcc8:	mov    WORD PTR [rbx+0xe8],cx
  41dccf:	movzx  ecx,WORD PTR [rax+0xc]
  41dcd3:	mov    WORD PTR [rbx+0xea],cx
  41dcda:	add    rax,0xffffffffffffffdc
  41dcde:	mov    QWORD PTR [rbx+0x30],rax
  41dce2:	add    DWORD PTR [rbx+0x104],0xffffffff
  41dce9:	mov    eax,ebp
  41dceb:	add    rsp,0x8
  41dcef:	pop    rbx
  41dcf0:	pop    rbp
  41dcf1:	ret    
  41dcf2:	lea    rdi,[rip+0x193f7]        # 4370f0 <flatcc_builder_padding_base@@Base+0x550>
  41dcf9:	lea    rsi,[rip+0x19122]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41dd00:	lea    rcx,[rip+0x19415]        # 43711c <flatcc_builder_padding_base@@Base+0x57c>
  41dd07:	mov    edx,0x368
  41dd0c:	call   406070 <__assert_fail@plt>
  41dd11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041dd20 <flatcc_builder_extend_vector@@Base>:
  41dd20:	push   r14
  41dd22:	push   rbx
  41dd23:	push   rax
  41dd24:	mov    rax,QWORD PTR [rdi+0x30]
  41dd28:	mov    ecx,DWORD PTR [rax+0x14]
  41dd2b:	add    ecx,esi
  41dd2d:	jb     41ddc0 <flatcc_builder_extend_vector@@Base+0xa0>
  41dd33:	cmp    ecx,DWORD PTR [rax+0x18]
  41dd36:	ja     41ddc0 <flatcc_builder_extend_vector@@Base+0xa0>
  41dd3c:	mov    rbx,rdi
  41dd3f:	mov    DWORD PTR [rax+0x14],ecx
  41dd42:	mov    rax,QWORD PTR [rdi+0x30]
  41dd46:	imul   esi,DWORD PTR [rax+0x10]
  41dd4a:	mov    r14d,DWORD PTR [rdi+0x20]
  41dd4e:	add    esi,r14d
  41dd51:	mov    DWORD PTR [rdi+0x20],esi
  41dd54:	cmp    esi,DWORD PTR [rdi+0x24]
  41dd57:	jae    41dd5f <flatcc_builder_extend_vector@@Base+0x3f>
  41dd59:	mov    rax,QWORD PTR [rbx+0x18]
  41dd5d:	jmp    41ddb5 <flatcc_builder_extend_vector@@Base+0x95>
  41dd5f:	add    esi,0x1
  41dd62:	lea    rax,[rbx+0x68]
  41dd66:	mov    rdi,QWORD PTR [rbx+0x40]
  41dd6a:	mov    edx,DWORD PTR [rbx+0x28]
  41dd6d:	add    rdx,rsi
  41dd70:	mov    ecx,0x1
  41dd75:	mov    r8d,0x1
  41dd7b:	mov    rsi,rax
  41dd7e:	call   QWORD PTR [rbx+0x50]
  41dd81:	test   eax,eax
  41dd83:	je     41dd89 <flatcc_builder_extend_vector@@Base+0x69>
  41dd85:	xor    eax,eax
  41dd87:	jmp    41ddb8 <flatcc_builder_extend_vector@@Base+0x98>
  41dd89:	mov    ecx,DWORD PTR [rbx+0x28]
  41dd8c:	mov    rax,rcx
  41dd8f:	add    rax,QWORD PTR [rbx+0x68]
  41dd93:	mov    QWORD PTR [rbx+0x18],rax
  41dd97:	mov    edx,DWORD PTR [rbx+0x70]
  41dd9a:	sub    edx,ecx
  41dd9c:	cmp    edx,0xfffffffc
  41dd9f:	mov    ecx,0xfffffffc
  41dda4:	cmovb  ecx,edx
  41dda7:	mov    DWORD PTR [rbx+0x24],ecx
  41ddaa:	mov    rcx,QWORD PTR [rbx+0x30]
  41ddae:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ddb5:	add    rax,r14
  41ddb8:	add    rsp,0x8
  41ddbc:	pop    rbx
  41ddbd:	pop    r14
  41ddbf:	ret    
  41ddc0:	lea    rdi,[rip+0x1a124]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41ddc7:	lea    rsi,[rip+0x19054]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ddce:	lea    rcx,[rip+0x1a131]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41ddd5:	mov    edx,0x37c
  41ddda:	call   406070 <__assert_fail@plt>
  41dddf:	nop

000000000041dde0 <flatcc_builder_vector_push@@Base>:
  41dde0:	push   r15
  41dde2:	push   r14
  41dde4:	push   r13
  41dde6:	push   r12
  41dde8:	push   rbx
  41dde9:	mov    rax,QWORD PTR [rdi+0x30]
  41dded:	movzx  ecx,WORD PTR [rax+0xe]
  41ddf1:	cmp    ecx,0x4
  41ddf4:	jne    41dea9 <flatcc_builder_vector_push@@Base+0xc9>
  41ddfa:	mov    ecx,DWORD PTR [rax+0x14]
  41ddfd:	cmp    ecx,DWORD PTR [rax+0x18]
  41de00:	ja     41dec8 <flatcc_builder_vector_push@@Base+0xe8>
  41de06:	mov    r14,rsi
  41de09:	mov    rbx,rdi
  41de0c:	add    ecx,0x1
  41de0f:	mov    DWORD PTR [rax+0x14],ecx
  41de12:	mov    rax,QWORD PTR [rdi+0x30]
  41de16:	mov    r15d,DWORD PTR [rax+0x10]
  41de1a:	mov    r13d,DWORD PTR [rdi+0x20]
  41de1e:	lea    eax,[r15+r13*1]
  41de22:	mov    DWORD PTR [rdi+0x20],eax
  41de25:	cmp    eax,DWORD PTR [rdi+0x24]
  41de28:	jae    41de35 <flatcc_builder_vector_push@@Base+0x55>
  41de2a:	mov    r12,QWORD PTR [rbx+0x18]
  41de2e:	add    r12,r13
  41de31:	jne    41de8e <flatcc_builder_vector_push@@Base+0xae>
  41de33:	jmp    41de58 <flatcc_builder_vector_push@@Base+0x78>
  41de35:	add    eax,0x1
  41de38:	lea    rsi,[rbx+0x68]
  41de3c:	mov    rdi,QWORD PTR [rbx+0x40]
  41de40:	mov    edx,DWORD PTR [rbx+0x28]
  41de43:	add    rdx,rax
  41de46:	mov    ecx,0x1
  41de4b:	mov    r8d,0x1
  41de51:	call   QWORD PTR [rbx+0x50]
  41de54:	test   eax,eax
  41de56:	je     41de5d <flatcc_builder_vector_push@@Base+0x7d>
  41de58:	xor    r12d,r12d
  41de5b:	jmp    41de9c <flatcc_builder_vector_push@@Base+0xbc>
  41de5d:	mov    eax,DWORD PTR [rbx+0x28]
  41de60:	mov    r12,rax
  41de63:	add    r12,QWORD PTR [rbx+0x68]
  41de67:	mov    QWORD PTR [rbx+0x18],r12
  41de6b:	mov    ecx,DWORD PTR [rbx+0x70]
  41de6e:	sub    ecx,eax
  41de70:	cmp    ecx,0xfffffffc
  41de73:	mov    eax,0xfffffffc
  41de78:	cmovb  eax,ecx
  41de7b:	mov    DWORD PTR [rbx+0x24],eax
  41de7e:	mov    rax,QWORD PTR [rbx+0x30]
  41de82:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41de89:	add    r12,r13
  41de8c:	je     41de58 <flatcc_builder_vector_push@@Base+0x78>
  41de8e:	mov    rdi,r12
  41de91:	mov    rsi,r14
  41de94:	mov    rdx,r15
  41de97:	call   4060e0 <memcpy@plt>
  41de9c:	mov    rax,r12
  41de9f:	pop    rbx
  41dea0:	pop    r12
  41dea2:	pop    r13
  41dea4:	pop    r14
  41dea6:	pop    r15
  41dea8:	ret    
  41dea9:	lea    rdi,[rip+0x192af]        # 43715f <flatcc_builder_padding_base@@Base+0x5bf>
  41deb0:	lea    rsi,[rip+0x18f6b]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41deb7:	lea    rcx,[rip+0x192cd]        # 43718b <flatcc_builder_padding_base@@Base+0x5eb>
  41debe:	mov    edx,0x38b
  41dec3:	call   406070 <__assert_fail@plt>
  41dec8:	lea    rdi,[rip+0x192ff]        # 4371ce <flatcc_builder_padding_base@@Base+0x62e>
  41decf:	lea    rsi,[rip+0x18f4c]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ded6:	lea    rcx,[rip+0x192ae]        # 43718b <flatcc_builder_padding_base@@Base+0x5eb>
  41dedd:	mov    edx,0x38c
  41dee2:	call   406070 <__assert_fail@plt>
  41dee7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041def0 <flatcc_builder_append_vector@@Base>:
  41def0:	push   r15
  41def2:	push   r14
  41def4:	push   r13
  41def6:	push   r12
  41def8:	push   rbx
  41def9:	mov    rax,QWORD PTR [rdi+0x30]
  41defd:	movzx  ecx,WORD PTR [rax+0xe]
  41df01:	cmp    ecx,0x4
  41df04:	jne    41dfe2 <flatcc_builder_append_vector@@Base+0xf2>
  41df0a:	mov    r15,rdx
  41df0d:	mov    ecx,DWORD PTR [rax+0x14]
  41df10:	add    ecx,r15d
  41df13:	jb     41dfc3 <flatcc_builder_append_vector@@Base+0xd3>
  41df19:	cmp    ecx,DWORD PTR [rax+0x18]
  41df1c:	ja     41dfc3 <flatcc_builder_append_vector@@Base+0xd3>
  41df22:	mov    r14,rsi
  41df25:	mov    rbx,rdi
  41df28:	mov    DWORD PTR [rax+0x14],ecx
  41df2b:	mov    rax,QWORD PTR [rdi+0x30]
  41df2f:	imul   r15d,DWORD PTR [rax+0x10]
  41df34:	mov    r13d,DWORD PTR [rdi+0x20]
  41df38:	lea    eax,[r15+r13*1]
  41df3c:	mov    DWORD PTR [rdi+0x20],eax
  41df3f:	cmp    eax,DWORD PTR [rdi+0x24]
  41df42:	jae    41df4f <flatcc_builder_append_vector@@Base+0x5f>
  41df44:	mov    r12,QWORD PTR [rbx+0x18]
  41df48:	add    r12,r13
  41df4b:	jne    41dfa8 <flatcc_builder_append_vector@@Base+0xb8>
  41df4d:	jmp    41df72 <flatcc_builder_append_vector@@Base+0x82>
  41df4f:	add    eax,0x1
  41df52:	lea    rsi,[rbx+0x68]
  41df56:	mov    rdi,QWORD PTR [rbx+0x40]
  41df5a:	mov    edx,DWORD PTR [rbx+0x28]
  41df5d:	add    rdx,rax
  41df60:	mov    ecx,0x1
  41df65:	mov    r8d,0x1
  41df6b:	call   QWORD PTR [rbx+0x50]
  41df6e:	test   eax,eax
  41df70:	je     41df77 <flatcc_builder_append_vector@@Base+0x87>
  41df72:	xor    r12d,r12d
  41df75:	jmp    41dfb6 <flatcc_builder_append_vector@@Base+0xc6>
  41df77:	mov    eax,DWORD PTR [rbx+0x28]
  41df7a:	mov    r12,rax
  41df7d:	add    r12,QWORD PTR [rbx+0x68]
  41df81:	mov    QWORD PTR [rbx+0x18],r12
  41df85:	mov    ecx,DWORD PTR [rbx+0x70]
  41df88:	sub    ecx,eax
  41df8a:	cmp    ecx,0xfffffffc
  41df8d:	mov    eax,0xfffffffc
  41df92:	cmovb  eax,ecx
  41df95:	mov    DWORD PTR [rbx+0x24],eax
  41df98:	mov    rax,QWORD PTR [rbx+0x30]
  41df9c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41dfa3:	add    r12,r13
  41dfa6:	je     41df72 <flatcc_builder_append_vector@@Base+0x82>
  41dfa8:	mov    edx,r15d
  41dfab:	mov    rdi,r12
  41dfae:	mov    rsi,r14
  41dfb1:	call   4060e0 <memcpy@plt>
  41dfb6:	mov    rax,r12
  41dfb9:	pop    rbx
  41dfba:	pop    r12
  41dfbc:	pop    r13
  41dfbe:	pop    r14
  41dfc0:	pop    r15
  41dfc2:	ret    
  41dfc3:	lea    rdi,[rip+0x19f21]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41dfca:	lea    rsi,[rip+0x18e51]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41dfd1:	lea    rcx,[rip+0x19f2e]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41dfd8:	mov    edx,0x37c
  41dfdd:	call   406070 <__assert_fail@plt>
  41dfe2:	lea    rdi,[rip+0x19176]        # 43715f <flatcc_builder_padding_base@@Base+0x5bf>
  41dfe9:	lea    rsi,[rip+0x18e32]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41dff0:	lea    rcx,[rip+0x19214]        # 43720b <flatcc_builder_padding_base@@Base+0x66b>
  41dff7:	mov    edx,0x393
  41dffc:	call   406070 <__assert_fail@plt>
  41e001:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e00b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e010 <flatcc_builder_extend_offset_vector@@Base>:
  41e010:	push   r14
  41e012:	push   rbx
  41e013:	push   rax
  41e014:	mov    rax,QWORD PTR [rdi+0x30]
  41e018:	mov    ecx,DWORD PTR [rax+0x14]
  41e01b:	add    ecx,esi
  41e01d:	jb     41e0a5 <flatcc_builder_extend_offset_vector@@Base+0x95>
  41e023:	cmp    ecx,0x40000000
  41e029:	jae    41e0a5 <flatcc_builder_extend_offset_vector@@Base+0x95>
  41e02b:	mov    rbx,rdi
  41e02e:	mov    DWORD PTR [rax+0x14],ecx
  41e031:	mov    r14d,DWORD PTR [rdi+0x20]
  41e035:	lea    eax,[r14+rsi*4]
  41e039:	mov    DWORD PTR [rdi+0x20],eax
  41e03c:	cmp    eax,DWORD PTR [rdi+0x24]
  41e03f:	jae    41e047 <flatcc_builder_extend_offset_vector@@Base+0x37>
  41e041:	mov    rax,QWORD PTR [rbx+0x18]
  41e045:	jmp    41e09a <flatcc_builder_extend_offset_vector@@Base+0x8a>
  41e047:	add    eax,0x1
  41e04a:	lea    rsi,[rbx+0x68]
  41e04e:	mov    rdi,QWORD PTR [rbx+0x40]
  41e052:	mov    edx,DWORD PTR [rbx+0x28]
  41e055:	add    rdx,rax
  41e058:	mov    ecx,0x1
  41e05d:	mov    r8d,0x1
  41e063:	call   QWORD PTR [rbx+0x50]
  41e066:	test   eax,eax
  41e068:	je     41e06e <flatcc_builder_extend_offset_vector@@Base+0x5e>
  41e06a:	xor    eax,eax
  41e06c:	jmp    41e09d <flatcc_builder_extend_offset_vector@@Base+0x8d>
  41e06e:	mov    ecx,DWORD PTR [rbx+0x28]
  41e071:	mov    rax,rcx
  41e074:	add    rax,QWORD PTR [rbx+0x68]
  41e078:	mov    QWORD PTR [rbx+0x18],rax
  41e07c:	mov    edx,DWORD PTR [rbx+0x70]
  41e07f:	sub    edx,ecx
  41e081:	cmp    edx,0xfffffffc
  41e084:	mov    ecx,0xfffffffc
  41e089:	cmovb  ecx,edx
  41e08c:	mov    DWORD PTR [rbx+0x24],ecx
  41e08f:	mov    rcx,QWORD PTR [rbx+0x30]
  41e093:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e09a:	add    rax,r14
  41e09d:	add    rsp,0x8
  41e0a1:	pop    rbx
  41e0a2:	pop    r14
  41e0a4:	ret    
  41e0a5:	lea    rdi,[rip+0x19e3f]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41e0ac:	lea    rsi,[rip+0x18d6f]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e0b3:	lea    rcx,[rip+0x19e4c]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41e0ba:	mov    edx,0x37c
  41e0bf:	call   406070 <__assert_fail@plt>
  41e0c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0ce:	xchg   ax,ax

000000000041e0d0 <flatcc_builder_offset_vector_push@@Base>:
  41e0d0:	push   rbp
  41e0d1:	push   r14
  41e0d3:	push   rbx
  41e0d4:	mov    rax,QWORD PTR [rdi+0x30]
  41e0d8:	movzx  ecx,WORD PTR [rax+0xe]
  41e0dc:	cmp    ecx,0x5
  41e0df:	jne    41e175 <flatcc_builder_offset_vector_push@@Base+0xa5>
  41e0e5:	mov    ecx,DWORD PTR [rax+0x14]
  41e0e8:	cmp    ecx,0x3fffffff
  41e0ee:	je     41e138 <flatcc_builder_offset_vector_push@@Base+0x68>
  41e0f0:	mov    r14d,esi
  41e0f3:	mov    rbx,rdi
  41e0f6:	add    ecx,0x1
  41e0f9:	mov    DWORD PTR [rax+0x14],ecx
  41e0fc:	mov    ebp,DWORD PTR [rdi+0x20]
  41e0ff:	lea    eax,[rbp+0x4]
  41e102:	mov    DWORD PTR [rdi+0x20],eax
  41e105:	cmp    eax,DWORD PTR [rdi+0x24]
  41e108:	jae    41e115 <flatcc_builder_offset_vector_push@@Base+0x45>
  41e10a:	mov    rax,QWORD PTR [rbx+0x18]
  41e10e:	add    rax,rbp
  41e111:	jne    41e16d <flatcc_builder_offset_vector_push@@Base+0x9d>
  41e113:	jmp    41e138 <flatcc_builder_offset_vector_push@@Base+0x68>
  41e115:	lea    eax,[rbp+0x5]
  41e118:	lea    rsi,[rbx+0x68]
  41e11c:	mov    rdi,QWORD PTR [rbx+0x40]
  41e120:	mov    edx,DWORD PTR [rbx+0x28]
  41e123:	add    rdx,rax
  41e126:	mov    ecx,0x1
  41e12b:	mov    r8d,0x1
  41e131:	call   QWORD PTR [rbx+0x50]
  41e134:	test   eax,eax
  41e136:	je     41e13c <flatcc_builder_offset_vector_push@@Base+0x6c>
  41e138:	xor    eax,eax
  41e13a:	jmp    41e170 <flatcc_builder_offset_vector_push@@Base+0xa0>
  41e13c:	mov    ecx,DWORD PTR [rbx+0x28]
  41e13f:	mov    rax,rcx
  41e142:	add    rax,QWORD PTR [rbx+0x68]
  41e146:	mov    QWORD PTR [rbx+0x18],rax
  41e14a:	mov    edx,DWORD PTR [rbx+0x70]
  41e14d:	sub    edx,ecx
  41e14f:	cmp    edx,0xfffffffc
  41e152:	mov    ecx,0xfffffffc
  41e157:	cmovb  ecx,edx
  41e15a:	mov    DWORD PTR [rbx+0x24],ecx
  41e15d:	mov    rcx,QWORD PTR [rbx+0x30]
  41e161:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e168:	add    rax,rbp
  41e16b:	je     41e138 <flatcc_builder_offset_vector_push@@Base+0x68>
  41e16d:	mov    DWORD PTR [rax],r14d
  41e170:	pop    rbx
  41e171:	pop    r14
  41e173:	pop    rbp
  41e174:	ret    
  41e175:	lea    rdi,[rip+0x190dc]        # 437258 <flatcc_builder_padding_base@@Base+0x6b8>
  41e17c:	lea    rsi,[rip+0x18c9f]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e183:	lea    rcx,[rip+0x19101]        # 43728b <flatcc_builder_padding_base@@Base+0x6eb>
  41e18a:	mov    edx,0x3a6
  41e18f:	call   406070 <__assert_fail@plt>
  41e194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e19e:	xchg   ax,ax

000000000041e1a0 <flatcc_builder_append_offset_vector@@Base>:
  41e1a0:	push   r15
  41e1a2:	push   r14
  41e1a4:	push   r13
  41e1a6:	push   r12
  41e1a8:	push   rbx
  41e1a9:	mov    rax,QWORD PTR [rdi+0x30]
  41e1ad:	movzx  ecx,WORD PTR [rax+0xe]
  41e1b1:	cmp    ecx,0x5
  41e1b4:	jne    41e291 <flatcc_builder_append_offset_vector@@Base+0xf1>
  41e1ba:	mov    r15,rdx
  41e1bd:	mov    ecx,DWORD PTR [rax+0x14]
  41e1c0:	add    ecx,r15d
  41e1c3:	jb     41e272 <flatcc_builder_append_offset_vector@@Base+0xd2>
  41e1c9:	cmp    ecx,0x40000000
  41e1cf:	jae    41e272 <flatcc_builder_append_offset_vector@@Base+0xd2>
  41e1d5:	mov    r14,rsi
  41e1d8:	mov    rbx,rdi
  41e1db:	mov    DWORD PTR [rax+0x14],ecx
  41e1de:	mov    r13d,DWORD PTR [rdi+0x20]
  41e1e2:	lea    eax,[r13+r15*4+0x0]
  41e1e7:	mov    DWORD PTR [rdi+0x20],eax
  41e1ea:	cmp    eax,DWORD PTR [rdi+0x24]
  41e1ed:	jae    41e1fa <flatcc_builder_append_offset_vector@@Base+0x5a>
  41e1ef:	mov    r12,QWORD PTR [rbx+0x18]
  41e1f3:	add    r12,r13
  41e1f6:	jne    41e253 <flatcc_builder_append_offset_vector@@Base+0xb3>
  41e1f8:	jmp    41e21d <flatcc_builder_append_offset_vector@@Base+0x7d>
  41e1fa:	add    eax,0x1
  41e1fd:	lea    rsi,[rbx+0x68]
  41e201:	mov    rdi,QWORD PTR [rbx+0x40]
  41e205:	mov    edx,DWORD PTR [rbx+0x28]
  41e208:	add    rdx,rax
  41e20b:	mov    ecx,0x1
  41e210:	mov    r8d,0x1
  41e216:	call   QWORD PTR [rbx+0x50]
  41e219:	test   eax,eax
  41e21b:	je     41e222 <flatcc_builder_append_offset_vector@@Base+0x82>
  41e21d:	xor    r12d,r12d
  41e220:	jmp    41e265 <flatcc_builder_append_offset_vector@@Base+0xc5>
  41e222:	mov    eax,DWORD PTR [rbx+0x28]
  41e225:	mov    r12,rax
  41e228:	add    r12,QWORD PTR [rbx+0x68]
  41e22c:	mov    QWORD PTR [rbx+0x18],r12
  41e230:	mov    ecx,DWORD PTR [rbx+0x70]
  41e233:	sub    ecx,eax
  41e235:	cmp    ecx,0xfffffffc
  41e238:	mov    eax,0xfffffffc
  41e23d:	cmovb  eax,ecx
  41e240:	mov    DWORD PTR [rbx+0x24],eax
  41e243:	mov    rax,QWORD PTR [rbx+0x30]
  41e247:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e24e:	add    r12,r13
  41e251:	je     41e21d <flatcc_builder_append_offset_vector@@Base+0x7d>
  41e253:	shl    r15d,0x2
  41e257:	mov    edx,r15d
  41e25a:	mov    rdi,r12
  41e25d:	mov    rsi,r14
  41e260:	call   4060e0 <memcpy@plt>
  41e265:	mov    rax,r12
  41e268:	pop    rbx
  41e269:	pop    r12
  41e26b:	pop    r13
  41e26d:	pop    r14
  41e26f:	pop    r15
  41e271:	ret    
  41e272:	lea    rdi,[rip+0x19c72]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41e279:	lea    rsi,[rip+0x18ba2]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e280:	lea    rcx,[rip+0x19c7f]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41e287:	mov    edx,0x37c
  41e28c:	call   406070 <__assert_fail@plt>
  41e291:	lea    rdi,[rip+0x18fc0]        # 437258 <flatcc_builder_padding_base@@Base+0x6b8>
  41e298:	lea    rsi,[rip+0x18b83]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e29f:	lea    rcx,[rip+0x19047]        # 4372ed <flatcc_builder_padding_base@@Base+0x74d>
  41e2a6:	mov    edx,0x3b4
  41e2ab:	call   406070 <__assert_fail@plt>

000000000041e2b0 <flatcc_builder_extend_string@@Base>:
  41e2b0:	push   r14
  41e2b2:	push   rbx
  41e2b3:	push   rax
  41e2b4:	mov    rax,QWORD PTR [rdi+0x30]
  41e2b8:	movzx  ecx,WORD PTR [rax+0xe]
  41e2bc:	cmp    ecx,0x6
  41e2bf:	jne    41e34c <flatcc_builder_extend_string@@Base+0x9c>
  41e2c5:	mov    ecx,DWORD PTR [rax+0x14]
  41e2c8:	add    ecx,esi
  41e2ca:	jb     41e36b <flatcc_builder_extend_string@@Base+0xbb>
  41e2d0:	mov    rbx,rdi
  41e2d3:	mov    DWORD PTR [rax+0x14],ecx
  41e2d6:	mov    r14d,DWORD PTR [rdi+0x20]
  41e2da:	add    esi,r14d
  41e2dd:	mov    DWORD PTR [rdi+0x20],esi
  41e2e0:	cmp    esi,DWORD PTR [rdi+0x24]
  41e2e3:	jae    41e2eb <flatcc_builder_extend_string@@Base+0x3b>
  41e2e5:	mov    rax,QWORD PTR [rbx+0x18]
  41e2e9:	jmp    41e341 <flatcc_builder_extend_string@@Base+0x91>
  41e2eb:	add    esi,0x1
  41e2ee:	lea    rax,[rbx+0x68]
  41e2f2:	mov    rdi,QWORD PTR [rbx+0x40]
  41e2f6:	mov    edx,DWORD PTR [rbx+0x28]
  41e2f9:	add    rdx,rsi
  41e2fc:	mov    ecx,0x1
  41e301:	mov    r8d,0x1
  41e307:	mov    rsi,rax
  41e30a:	call   QWORD PTR [rbx+0x50]
  41e30d:	test   eax,eax
  41e30f:	je     41e315 <flatcc_builder_extend_string@@Base+0x65>
  41e311:	xor    eax,eax
  41e313:	jmp    41e344 <flatcc_builder_extend_string@@Base+0x94>
  41e315:	mov    ecx,DWORD PTR [rbx+0x28]
  41e318:	mov    rax,rcx
  41e31b:	add    rax,QWORD PTR [rbx+0x68]
  41e31f:	mov    QWORD PTR [rbx+0x18],rax
  41e323:	mov    edx,DWORD PTR [rbx+0x70]
  41e326:	sub    edx,ecx
  41e328:	cmp    edx,0xfffffffc
  41e32b:	mov    ecx,0xfffffffc
  41e330:	cmovb  ecx,edx
  41e333:	mov    DWORD PTR [rbx+0x24],ecx
  41e336:	mov    rcx,QWORD PTR [rbx+0x30]
  41e33a:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e341:	add    rax,r14
  41e344:	add    rsp,0x8
  41e348:	pop    rbx
  41e349:	pop    r14
  41e34b:	ret    
  41e34c:	lea    rdi,[rip+0x1900e]        # 437361 <flatcc_builder_padding_base@@Base+0x7c1>
  41e353:	lea    rsi,[rip+0x18ac8]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e35a:	lea    rcx,[rip+0x1902c]        # 43738d <flatcc_builder_padding_base@@Base+0x7ed>
  41e361:	mov    edx,0x3bd
  41e366:	call   406070 <__assert_fail@plt>
  41e36b:	lea    rdi,[rip+0x19b79]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41e372:	lea    rsi,[rip+0x18aa9]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e379:	lea    rcx,[rip+0x19b86]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41e380:	mov    edx,0x37c
  41e385:	call   406070 <__assert_fail@plt>
  41e38a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e390 <flatcc_builder_append_string@@Base>:
  41e390:	push   r15
  41e392:	push   r14
  41e394:	push   r13
  41e396:	push   r12
  41e398:	push   rbx
  41e399:	mov    rax,QWORD PTR [rdi+0x30]
  41e39d:	movzx  ecx,WORD PTR [rax+0xe]
  41e3a1:	cmp    ecx,0x6
  41e3a4:	jne    41e451 <flatcc_builder_append_string@@Base+0xc1>
  41e3aa:	mov    r15,rdx
  41e3ad:	mov    ecx,DWORD PTR [rax+0x14]
  41e3b0:	add    ecx,r15d
  41e3b3:	jb     41e470 <flatcc_builder_append_string@@Base+0xe0>
  41e3b9:	mov    r14,rsi
  41e3bc:	mov    rbx,rdi
  41e3bf:	mov    DWORD PTR [rax+0x14],ecx
  41e3c2:	mov    r13d,DWORD PTR [rdi+0x20]
  41e3c6:	lea    eax,[r15+r13*1]
  41e3ca:	mov    DWORD PTR [rdi+0x20],eax
  41e3cd:	cmp    eax,DWORD PTR [rdi+0x24]
  41e3d0:	jae    41e3dd <flatcc_builder_append_string@@Base+0x4d>
  41e3d2:	mov    r12,QWORD PTR [rbx+0x18]
  41e3d6:	add    r12,r13
  41e3d9:	jne    41e436 <flatcc_builder_append_string@@Base+0xa6>
  41e3db:	jmp    41e400 <flatcc_builder_append_string@@Base+0x70>
  41e3dd:	add    eax,0x1
  41e3e0:	lea    rsi,[rbx+0x68]
  41e3e4:	mov    rdi,QWORD PTR [rbx+0x40]
  41e3e8:	mov    edx,DWORD PTR [rbx+0x28]
  41e3eb:	add    rdx,rax
  41e3ee:	mov    ecx,0x1
  41e3f3:	mov    r8d,0x1
  41e3f9:	call   QWORD PTR [rbx+0x50]
  41e3fc:	test   eax,eax
  41e3fe:	je     41e405 <flatcc_builder_append_string@@Base+0x75>
  41e400:	xor    r12d,r12d
  41e403:	jmp    41e444 <flatcc_builder_append_string@@Base+0xb4>
  41e405:	mov    eax,DWORD PTR [rbx+0x28]
  41e408:	mov    r12,rax
  41e40b:	add    r12,QWORD PTR [rbx+0x68]
  41e40f:	mov    QWORD PTR [rbx+0x18],r12
  41e413:	mov    ecx,DWORD PTR [rbx+0x70]
  41e416:	sub    ecx,eax
  41e418:	cmp    ecx,0xfffffffc
  41e41b:	mov    eax,0xfffffffc
  41e420:	cmovb  eax,ecx
  41e423:	mov    DWORD PTR [rbx+0x24],eax
  41e426:	mov    rax,QWORD PTR [rbx+0x30]
  41e42a:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e431:	add    r12,r13
  41e434:	je     41e400 <flatcc_builder_append_string@@Base+0x70>
  41e436:	mov    edx,r15d
  41e439:	mov    rdi,r12
  41e43c:	mov    rsi,r14
  41e43f:	call   4060e0 <memcpy@plt>
  41e444:	mov    rax,r12
  41e447:	pop    rbx
  41e448:	pop    r12
  41e44a:	pop    r13
  41e44c:	pop    r14
  41e44e:	pop    r15
  41e450:	ret    
  41e451:	lea    rdi,[rip+0x18f09]        # 437361 <flatcc_builder_padding_base@@Base+0x7c1>
  41e458:	lea    rsi,[rip+0x189c3]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e45f:	lea    rcx,[rip+0x18f66]        # 4373cc <flatcc_builder_padding_base@@Base+0x82c>
  41e466:	mov    edx,0x3c6
  41e46b:	call   406070 <__assert_fail@plt>
  41e470:	lea    rdi,[rip+0x19a74]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41e477:	lea    rsi,[rip+0x189a4]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e47e:	lea    rcx,[rip+0x19a81]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41e485:	mov    edx,0x37c
  41e48a:	call   406070 <__assert_fail@plt>
  41e48f:	nop

000000000041e490 <flatcc_builder_append_string_str@@Base>:
  41e490:	push   r14
  41e492:	push   rbx
  41e493:	push   rax
  41e494:	mov    rbx,rsi
  41e497:	mov    r14,rdi
  41e49a:	mov    rdi,rsi
  41e49d:	call   406060 <strlen@plt>
  41e4a2:	mov    rdi,r14
  41e4a5:	mov    rsi,rbx
  41e4a8:	mov    rdx,rax
  41e4ab:	add    rsp,0x8
  41e4af:	pop    rbx
  41e4b0:	pop    r14
  41e4b2:	jmp    41e390 <flatcc_builder_append_string@@Base>
  41e4b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e4c0 <flatcc_builder_append_string_strn@@Base>:
  41e4c0:	push   r15
  41e4c2:	push   r14
  41e4c4:	push   rbx
  41e4c5:	mov    rbx,rdx
  41e4c8:	mov    r14,rsi
  41e4cb:	mov    r15,rdi
  41e4ce:	xor    esi,esi
  41e4d0:	mov    rdi,r14
  41e4d3:	call   4060a0 <memchr@plt>
  41e4d8:	mov    rcx,rax
  41e4db:	sub    rcx,r14
  41e4de:	test   rax,rax
  41e4e1:	cmovne rbx,rcx
  41e4e5:	mov    rdi,r15
  41e4e8:	mov    rsi,r14
  41e4eb:	mov    rdx,rbx
  41e4ee:	pop    rbx
  41e4ef:	pop    r14
  41e4f1:	pop    r15
  41e4f3:	jmp    41e390 <flatcc_builder_append_string@@Base>
  41e4f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e500 <flatcc_builder_truncate_vector@@Base>:
  41e500:	push   rax
  41e501:	mov    rcx,QWORD PTR [rdi+0x30]
  41e505:	movzx  edx,WORD PTR [rcx+0xe]
  41e509:	cmp    edx,0x4
  41e50c:	jne    41e543 <flatcc_builder_truncate_vector@@Base+0x43>
  41e50e:	mov    rax,rsi
  41e511:	mov    edx,DWORD PTR [rcx+0x14]
  41e514:	cmp    rdx,rsi
  41e517:	jb     41e562 <flatcc_builder_truncate_vector@@Base+0x62>
  41e519:	sub    edx,eax
  41e51b:	mov    DWORD PTR [rcx+0x14],edx
  41e51e:	mov    rcx,QWORD PTR [rdi+0x30]
  41e522:	imul   eax,DWORD PTR [rcx+0x10]
  41e526:	mov    ecx,DWORD PTR [rdi+0x20]
  41e529:	sub    ecx,eax
  41e52b:	mov    DWORD PTR [rdi+0x20],ecx
  41e52e:	add    rcx,QWORD PTR [rdi+0x18]
  41e532:	xor    esi,esi
  41e534:	mov    rdi,rcx
  41e537:	mov    rdx,rax
  41e53a:	call   406080 <memset@plt>
  41e53f:	xor    eax,eax
  41e541:	pop    rcx
  41e542:	ret    
  41e543:	lea    rdi,[rip+0x18c15]        # 43715f <flatcc_builder_padding_base@@Base+0x5bf>
  41e54a:	lea    rsi,[rip+0x188d1]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e551:	lea    rcx,[rip+0x18ec1]        # 437419 <flatcc_builder_padding_base@@Base+0x879>
  41e558:	mov    edx,0x3d9
  41e55d:	call   406070 <__assert_fail@plt>
  41e562:	lea    rdi,[rip+0x18eef]        # 437458 <flatcc_builder_padding_base@@Base+0x8b8>
  41e569:	lea    rsi,[rip+0x188b2]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e570:	lea    rcx,[rip+0x18ea2]        # 437419 <flatcc_builder_padding_base@@Base+0x879>
  41e577:	mov    edx,0x3da
  41e57c:	call   406070 <__assert_fail@plt>
  41e581:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e58b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e590 <flatcc_builder_truncate_offset_vector@@Base>:
  41e590:	push   rax
  41e591:	mov    rcx,QWORD PTR [rdi+0x30]
  41e595:	movzx  edx,WORD PTR [rcx+0xe]
  41e599:	cmp    edx,0x5
  41e59c:	jne    41e5d0 <flatcc_builder_truncate_offset_vector@@Base+0x40>
  41e59e:	mov    rax,rsi
  41e5a1:	mov    edx,DWORD PTR [rcx+0x14]
  41e5a4:	sub    edx,eax
  41e5a6:	jb     41e5ef <flatcc_builder_truncate_offset_vector@@Base+0x5f>
  41e5a8:	mov    DWORD PTR [rcx+0x14],edx
  41e5ab:	mov    rcx,QWORD PTR [rdi+0x30]
  41e5af:	imul   eax,DWORD PTR [rcx+0x10]
  41e5b3:	mov    ecx,DWORD PTR [rdi+0x20]
  41e5b6:	sub    ecx,eax
  41e5b8:	mov    DWORD PTR [rdi+0x20],ecx
  41e5bb:	add    rcx,QWORD PTR [rdi+0x18]
  41e5bf:	xor    esi,esi
  41e5c1:	mov    rdi,rcx
  41e5c4:	mov    rdx,rax
  41e5c7:	call   406080 <memset@plt>
  41e5cc:	xor    eax,eax
  41e5ce:	pop    rcx
  41e5cf:	ret    
  41e5d0:	lea    rdi,[rip+0x18c81]        # 437258 <flatcc_builder_padding_base@@Base+0x6b8>
  41e5d7:	lea    rsi,[rip+0x18844]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e5de:	lea    rcx,[rip+0x18e97]        # 43747c <flatcc_builder_padding_base@@Base+0x8dc>
  41e5e5:	mov    edx,0x3e2
  41e5ea:	call   406070 <__assert_fail@plt>
  41e5ef:	lea    rdi,[rip+0x18ecc]        # 4374c2 <flatcc_builder_padding_base@@Base+0x922>
  41e5f6:	lea    rsi,[rip+0x18825]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e5fd:	lea    rcx,[rip+0x18e78]        # 43747c <flatcc_builder_padding_base@@Base+0x8dc>
  41e604:	mov    edx,0x3e3
  41e609:	call   406070 <__assert_fail@plt>
  41e60e:	xchg   ax,ax

000000000041e610 <flatcc_builder_truncate_string@@Base>:
  41e610:	push   rax
  41e611:	mov    rax,QWORD PTR [rdi+0x30]
  41e615:	movzx  ecx,WORD PTR [rax+0xe]
  41e619:	cmp    ecx,0x6
  41e61c:	jne    41e647 <flatcc_builder_truncate_string@@Base+0x37>
  41e61e:	mov    ecx,DWORD PTR [rax+0x14]
  41e621:	cmp    rcx,rsi
  41e624:	jb     41e666 <flatcc_builder_truncate_string@@Base+0x56>
  41e626:	sub    ecx,esi
  41e628:	mov    DWORD PTR [rax+0x14],ecx
  41e62b:	mov    eax,DWORD PTR [rdi+0x20]
  41e62e:	sub    eax,esi
  41e630:	mov    DWORD PTR [rdi+0x20],eax
  41e633:	add    rax,QWORD PTR [rdi+0x18]
  41e637:	mov    edx,esi
  41e639:	xor    esi,esi
  41e63b:	mov    rdi,rax
  41e63e:	call   406080 <memset@plt>
  41e643:	xor    eax,eax
  41e645:	pop    rcx
  41e646:	ret    
  41e647:	lea    rdi,[rip+0x18d13]        # 437361 <flatcc_builder_padding_base@@Base+0x7c1>
  41e64e:	lea    rsi,[rip+0x187cd]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e655:	lea    rcx,[rip+0x18ea1]        # 4374fd <flatcc_builder_padding_base@@Base+0x95d>
  41e65c:	mov    edx,0x3eb
  41e661:	call   406070 <__assert_fail@plt>
  41e666:	lea    rdi,[rip+0x18ecf]        # 43753c <flatcc_builder_padding_base@@Base+0x99c>
  41e66d:	lea    rsi,[rip+0x187ae]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e674:	lea    rcx,[rip+0x18e82]        # 4374fd <flatcc_builder_padding_base@@Base+0x95d>
  41e67b:	mov    edx,0x3ec
  41e680:	call   406070 <__assert_fail@plt>
  41e685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e68f:	nop

000000000041e690 <flatcc_builder_start_vector@@Base>:
  41e690:	push   r15
  41e692:	push   r14
  41e694:	push   rbx
  41e695:	mov    r14,rcx
  41e698:	mov    r15,rsi
  41e69b:	mov    rbx,rdi
  41e69e:	cmp    edx,0x4
  41e6a1:	mov    esi,0x4
  41e6a6:	cmova  esi,edx
  41e6a9:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41e6ae:	mov    ecx,eax
  41e6b0:	mov    eax,0xffffffff
  41e6b5:	test   ecx,ecx
  41e6b7:	jne    41e705 <flatcc_builder_start_vector@@Base+0x75>
  41e6b9:	mov    rax,QWORD PTR [rbx+0x30]
  41e6bd:	mov    DWORD PTR [rax+0x10],r15d
  41e6c1:	mov    rax,QWORD PTR [rbx+0x30]
  41e6c5:	mov    DWORD PTR [rax+0x14],0x0
  41e6cc:	mov    rax,QWORD PTR [rbx+0x30]
  41e6d0:	mov    DWORD PTR [rax+0x18],r14d
  41e6d4:	mov    rax,QWORD PTR [rbx+0x30]
  41e6d8:	mov    WORD PTR [rax+0xe],0x4
  41e6de:	mov    ecx,DWORD PTR [rbx+0x28]
  41e6e1:	mov    edx,DWORD PTR [rbx+0x70]
  41e6e4:	sub    edx,ecx
  41e6e6:	add    rcx,QWORD PTR [rbx+0x68]
  41e6ea:	mov    QWORD PTR [rbx+0x18],rcx
  41e6ee:	cmp    edx,0xfffffffc
  41e6f1:	mov    ecx,0xfffffffc
  41e6f6:	cmovb  ecx,edx
  41e6f9:	mov    DWORD PTR [rbx+0x24],ecx
  41e6fc:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e703:	xor    eax,eax
  41e705:	pop    rbx
  41e706:	pop    r14
  41e708:	pop    r15
  41e70a:	ret    
  41e70b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e710 <flatcc_builder_start_offset_vector@@Base>:
  41e710:	push   rbx
  41e711:	mov    rbx,rdi
  41e714:	mov    esi,0x4
  41e719:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41e71e:	mov    ecx,eax
  41e720:	mov    eax,0xffffffff
  41e725:	test   ecx,ecx
  41e727:	je     41e72b <flatcc_builder_start_offset_vector@@Base+0x1b>
  41e729:	pop    rbx
  41e72a:	ret    
  41e72b:	mov    rax,QWORD PTR [rbx+0x30]
  41e72f:	mov    DWORD PTR [rax+0x10],0x4
  41e736:	mov    rax,QWORD PTR [rbx+0x30]
  41e73a:	mov    DWORD PTR [rax+0x14],0x0
  41e741:	mov    rax,QWORD PTR [rbx+0x30]
  41e745:	mov    WORD PTR [rax+0xe],0x5
  41e74b:	mov    ecx,DWORD PTR [rbx+0x28]
  41e74e:	mov    edx,DWORD PTR [rbx+0x70]
  41e751:	sub    edx,ecx
  41e753:	add    rcx,QWORD PTR [rbx+0x68]
  41e757:	mov    QWORD PTR [rbx+0x18],rcx
  41e75b:	cmp    edx,0xfffffffc
  41e75e:	mov    ecx,0xfffffffc
  41e763:	cmovb  ecx,edx
  41e766:	mov    DWORD PTR [rbx+0x24],ecx
  41e769:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e770:	xor    eax,eax
  41e772:	pop    rbx
  41e773:	ret    
  41e774:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e77e:	xchg   ax,ax

000000000041e780 <flatcc_builder_create_offset_vector@@Base>:
  41e780:	push   r15
  41e782:	push   r14
  41e784:	push   r12
  41e786:	push   rbx
  41e787:	push   rax
  41e788:	mov    r14,rdx
  41e78b:	mov    r15,rsi
  41e78e:	mov    rbx,rdi
  41e791:	mov    esi,0x4
  41e796:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41e79b:	test   eax,eax
  41e79d:	je     41e7ad <flatcc_builder_create_offset_vector@@Base+0x2d>
  41e79f:	xor    eax,eax
  41e7a1:	add    rsp,0x8
  41e7a5:	pop    rbx
  41e7a6:	pop    r12
  41e7a8:	pop    r14
  41e7aa:	pop    r15
  41e7ac:	ret    
  41e7ad:	mov    rax,QWORD PTR [rbx+0x30]
  41e7b1:	mov    DWORD PTR [rax+0x10],0x4
  41e7b8:	mov    rax,QWORD PTR [rbx+0x30]
  41e7bc:	mov    DWORD PTR [rax+0x14],0x0
  41e7c3:	mov    rax,QWORD PTR [rbx+0x30]
  41e7c7:	mov    WORD PTR [rax+0xe],0x5
  41e7cd:	mov    ecx,DWORD PTR [rbx+0x28]
  41e7d0:	mov    edx,DWORD PTR [rbx+0x70]
  41e7d3:	sub    edx,ecx
  41e7d5:	add    rcx,QWORD PTR [rbx+0x68]
  41e7d9:	mov    QWORD PTR [rbx+0x18],rcx
  41e7dd:	cmp    edx,0xfffffffc
  41e7e0:	mov    ecx,0xfffffffc
  41e7e5:	cmovb  ecx,edx
  41e7e8:	mov    DWORD PTR [rbx+0x24],ecx
  41e7eb:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e7f2:	mov    ecx,DWORD PTR [rax+0x14]
  41e7f5:	add    ecx,r14d
  41e7f8:	jb     41e8a9 <flatcc_builder_create_offset_vector@@Base+0x129>
  41e7fe:	cmp    ecx,0x40000000
  41e804:	jae    41e8a9 <flatcc_builder_create_offset_vector@@Base+0x129>
  41e80a:	mov    DWORD PTR [rax+0x14],ecx
  41e80d:	mov    r12d,DWORD PTR [rbx+0x20]
  41e811:	lea    eax,[r12+r14*4]
  41e815:	mov    DWORD PTR [rbx+0x20],eax
  41e818:	cmp    eax,DWORD PTR [rbx+0x24]
  41e81b:	jae    41e82b <flatcc_builder_create_offset_vector@@Base+0xab>
  41e81d:	mov    rdi,QWORD PTR [rbx+0x18]
  41e821:	add    rdi,r12
  41e824:	jne    41e887 <flatcc_builder_create_offset_vector@@Base+0x107>
  41e826:	jmp    41e79f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41e82b:	add    eax,0x1
  41e82e:	lea    rsi,[rbx+0x68]
  41e832:	mov    rdi,QWORD PTR [rbx+0x40]
  41e836:	mov    edx,DWORD PTR [rbx+0x28]
  41e839:	add    rdx,rax
  41e83c:	mov    ecx,0x1
  41e841:	mov    r8d,0x1
  41e847:	call   QWORD PTR [rbx+0x50]
  41e84a:	test   eax,eax
  41e84c:	jne    41e79f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41e852:	mov    eax,DWORD PTR [rbx+0x28]
  41e855:	mov    rdi,rax
  41e858:	add    rdi,QWORD PTR [rbx+0x68]
  41e85c:	mov    QWORD PTR [rbx+0x18],rdi
  41e860:	mov    ecx,DWORD PTR [rbx+0x70]
  41e863:	sub    ecx,eax
  41e865:	cmp    ecx,0xfffffffc
  41e868:	mov    eax,0xfffffffc
  41e86d:	cmovb  eax,ecx
  41e870:	mov    DWORD PTR [rbx+0x24],eax
  41e873:	mov    rax,QWORD PTR [rbx+0x30]
  41e877:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e87e:	add    rdi,r12
  41e881:	je     41e79f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41e887:	shl    r14,0x2
  41e88b:	mov    rsi,r15
  41e88e:	mov    rdx,r14
  41e891:	call   4060e0 <memcpy@plt>
  41e896:	mov    rdi,rbx
  41e899:	add    rsp,0x8
  41e89d:	pop    rbx
  41e89e:	pop    r12
  41e8a0:	pop    r14
  41e8a2:	pop    r15
  41e8a4:	jmp    41e8d0 <flatcc_builder_end_offset_vector@@Base>
  41e8a9:	lea    rdi,[rip+0x1963b]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  41e8b0:	lea    rsi,[rip+0x1856b]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e8b7:	lea    rcx,[rip+0x19648]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  41e8be:	mov    edx,0x37c
  41e8c3:	call   406070 <__assert_fail@plt>
  41e8c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e8d0 <flatcc_builder_end_offset_vector@@Base>:
  41e8d0:	push   rbp
  41e8d1:	push   rbx
  41e8d2:	push   rax
  41e8d3:	mov    rax,QWORD PTR [rdi+0x30]
  41e8d7:	movzx  ecx,WORD PTR [rax+0xe]
  41e8db:	cmp    ecx,0x5
  41e8de:	jne    41e96d <flatcc_builder_end_offset_vector@@Base+0x9d>
  41e8e4:	mov    rbx,rdi
  41e8e7:	mov    rsi,QWORD PTR [rdi+0x18]
  41e8eb:	mov    edx,DWORD PTR [rax+0x14]
  41e8ee:	xor    ecx,ecx
  41e8f0:	call   41f920 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41e8f5:	mov    ebp,eax
  41e8f7:	test   eax,eax
  41e8f9:	je     41e964 <flatcc_builder_end_offset_vector@@Base+0x94>
  41e8fb:	mov    rdi,QWORD PTR [rbx+0x18]
  41e8ff:	mov    edx,DWORD PTR [rbx+0x20]
  41e902:	xor    esi,esi
  41e904:	call   406080 <memset@plt>
  41e909:	mov    rax,QWORD PTR [rbx+0x30]
  41e90d:	mov    ecx,DWORD PTR [rax+0x8]
  41e910:	mov    DWORD PTR [rbx+0x20],ecx
  41e913:	mov    ecx,DWORD PTR [rax]
  41e915:	mov    DWORD PTR [rbx+0x28],ecx
  41e918:	mov    edx,DWORD PTR [rax+0x4]
  41e91b:	mov    rsi,rcx
  41e91e:	add    rsi,QWORD PTR [rbx+0x68]
  41e922:	mov    QWORD PTR [rbx+0x18],rsi
  41e926:	mov    esi,DWORD PTR [rbx+0x70]
  41e929:	sub    esi,ecx
  41e92b:	cmp    esi,edx
  41e92d:	cmova  esi,edx
  41e930:	mov    DWORD PTR [rbx+0x24],esi
  41e933:	movzx  ecx,WORD PTR [rbx+0xea]
  41e93a:	cmp    WORD PTR [rbx+0xe8],cx
  41e941:	jae    41e94a <flatcc_builder_end_offset_vector@@Base+0x7a>
  41e943:	mov    WORD PTR [rbx+0xe8],cx
  41e94a:	movzx  ecx,WORD PTR [rax+0xc]
  41e94e:	mov    WORD PTR [rbx+0xea],cx
  41e955:	add    rax,0xffffffffffffffdc
  41e959:	mov    QWORD PTR [rbx+0x30],rax
  41e95d:	add    DWORD PTR [rbx+0x104],0xffffffff
  41e964:	mov    eax,ebp
  41e966:	add    rsp,0x8
  41e96a:	pop    rbx
  41e96b:	pop    rbp
  41e96c:	ret    
  41e96d:	lea    rdi,[rip+0x188e4]        # 437258 <flatcc_builder_padding_base@@Base+0x6b8>
  41e974:	lea    rsi,[rip+0x184a7]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41e97b:	lea    rcx,[rip+0x18f05]        # 437887 <flatcc_builder_padding_base@@Base+0xce7>
  41e982:	mov    edx,0x5c8
  41e987:	call   406070 <__assert_fail@plt>
  41e98c:	nop    DWORD PTR [rax+0x0]

000000000041e990 <flatcc_builder_start_string@@Base>:
  41e990:	push   rbx
  41e991:	mov    rbx,rdi
  41e994:	mov    esi,0x1
  41e999:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41e99e:	mov    ecx,eax
  41e9a0:	mov    eax,0xffffffff
  41e9a5:	test   ecx,ecx
  41e9a7:	je     41e9ab <flatcc_builder_start_string@@Base+0x1b>
  41e9a9:	pop    rbx
  41e9aa:	ret    
  41e9ab:	mov    rax,QWORD PTR [rbx+0x30]
  41e9af:	mov    DWORD PTR [rax+0x10],0x1
  41e9b6:	mov    rax,QWORD PTR [rbx+0x30]
  41e9ba:	mov    DWORD PTR [rax+0x14],0x0
  41e9c1:	mov    rax,QWORD PTR [rbx+0x30]
  41e9c5:	mov    WORD PTR [rax+0xe],0x6
  41e9cb:	mov    ecx,DWORD PTR [rbx+0x28]
  41e9ce:	mov    edx,DWORD PTR [rbx+0x70]
  41e9d1:	sub    edx,ecx
  41e9d3:	add    rcx,QWORD PTR [rbx+0x68]
  41e9d7:	mov    QWORD PTR [rbx+0x18],rcx
  41e9db:	cmp    edx,0xfffffffc
  41e9de:	mov    ecx,0xfffffffc
  41e9e3:	cmovb  ecx,edx
  41e9e6:	mov    DWORD PTR [rbx+0x24],ecx
  41e9e9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e9f0:	xor    eax,eax
  41e9f2:	pop    rbx
  41e9f3:	ret    
  41e9f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9fe:	xchg   ax,ax

000000000041ea00 <flatcc_builder_reserve_table@@Base>:
  41ea00:	push   r15
  41ea02:	push   r14
  41ea04:	push   rbx
  41ea05:	test   esi,esi
  41ea07:	js     41eab4 <flatcc_builder_reserve_table@@Base+0xb4>
  41ea0d:	mov    r14d,esi
  41ea10:	mov    r15,rdi
  41ea13:	mov    rax,QWORD PTR [rdi+0x30]
  41ea17:	movzx  ebx,WORD PTR [rax+0x1c]
  41ea1b:	add    ebx,ebx
  41ea1d:	add    ebx,DWORD PTR [rax+0x10]
  41ea20:	lea    edx,[r14+r14*1]
  41ea24:	add    edx,0x4
  41ea27:	add    rdx,rbx
  41ea2a:	cmp    rdx,QWORD PTR [rdi+0x60]
  41ea2e:	jbe    41ea4c <flatcc_builder_reserve_table@@Base+0x4c>
  41ea30:	lea    rsi,[r15+0x58]
  41ea34:	mov    rdi,QWORD PTR [r15+0x40]
  41ea38:	mov    ecx,0x1
  41ea3d:	xor    r8d,r8d
  41ea40:	call   QWORD PTR [r15+0x50]
  41ea44:	test   eax,eax
  41ea46:	jne    41ead3 <flatcc_builder_reserve_table@@Base+0xd3>
  41ea4c:	add    rbx,QWORD PTR [r15+0x58]
  41ea50:	mov    QWORD PTR [r15+0x8],rbx
  41ea54:	je     41eaa9 <flatcc_builder_reserve_table@@Base+0xa9>
  41ea56:	add    r14d,r14d
  41ea59:	add    rbx,0x4
  41ea5d:	mov    QWORD PTR [r15+0x8],rbx
  41ea61:	mov    rax,QWORD PTR [r15+0x30]
  41ea65:	mov    ebx,DWORD PTR [rax+0x14]
  41ea68:	or     r14d,0x1
  41ea6c:	add    r14,rbx
  41ea6f:	cmp    r14,QWORD PTR [r15+0x90]
  41ea76:	jbe    41ea96 <flatcc_builder_reserve_table@@Base+0x96>
  41ea78:	lea    rsi,[r15+0x88]
  41ea7f:	mov    rdi,QWORD PTR [r15+0x40]
  41ea83:	xor    ecx,ecx
  41ea85:	mov    r8d,0x3
  41ea8b:	mov    rdx,r14
  41ea8e:	call   QWORD PTR [r15+0x50]
  41ea92:	test   eax,eax
  41ea94:	jne    41ead3 <flatcc_builder_reserve_table@@Base+0xd3>
  41ea96:	xor    eax,eax
  41ea98:	add    rbx,QWORD PTR [r15+0x88]
  41ea9f:	mov    QWORD PTR [r15],rbx
  41eaa2:	sete   al
  41eaa5:	neg    eax
  41eaa7:	jmp    41eaae <flatcc_builder_reserve_table@@Base+0xae>
  41eaa9:	mov    eax,0xffffffff
  41eaae:	pop    rbx
  41eaaf:	pop    r14
  41eab1:	pop    r15
  41eab3:	ret    
  41eab4:	lea    rdi,[rip+0x18ae4]        # 43759f <flatcc_builder_padding_base@@Base+0x9ff>
  41eabb:	lea    rsi,[rip+0x18360]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41eac2:	lea    rcx,[rip+0x18a95]        # 43755e <flatcc_builder_padding_base@@Base+0x9be>
  41eac9:	mov    edx,0x429
  41eace:	call   406070 <__assert_fail@plt>
  41ead3:	lea    rdi,[rip+0x19508]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41eada:	lea    rsi,[rip+0x18341]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41eae1:	lea    rcx,[rip+0x19334]        # 437e1c <flatcc_builder_padding_base@@Base+0x127c>
  41eae8:	mov    edx,0x134
  41eaed:	call   406070 <__assert_fail@plt>
  41eaf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eafc:	nop    DWORD PTR [rax+0x0]

000000000041eb00 <flatcc_builder_start_table@@Base>:
  41eb00:	push   rbp
  41eb01:	push   r15
  41eb03:	push   r14
  41eb05:	push   rbx
  41eb06:	push   rax
  41eb07:	mov    r15d,esi
  41eb0a:	mov    rbx,rdi
  41eb0d:	mov    esi,0x4
  41eb12:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  41eb17:	mov    r14d,0xffffffff
  41eb1d:	test   eax,eax
  41eb1f:	je     41eb2f <flatcc_builder_start_table@@Base+0x2f>
  41eb21:	mov    eax,r14d
  41eb24:	add    rsp,0x8
  41eb28:	pop    rbx
  41eb29:	pop    r14
  41eb2b:	pop    r15
  41eb2d:	pop    rbp
  41eb2e:	ret    
  41eb2f:	mov    eax,DWORD PTR [rbx+0x8]
  41eb32:	sub    eax,DWORD PTR [rbx+0x58]
  41eb35:	mov    rcx,QWORD PTR [rbx+0x30]
  41eb39:	mov    DWORD PTR [rcx+0x10],eax
  41eb3c:	mov    eax,DWORD PTR [rbx]
  41eb3e:	sub    eax,DWORD PTR [rbx+0x88]
  41eb44:	mov    rcx,QWORD PTR [rbx+0x30]
  41eb48:	mov    DWORD PTR [rcx+0x14],eax
  41eb4b:	mov    eax,DWORD PTR [rbx+0x14]
  41eb4e:	mov    rcx,QWORD PTR [rbx+0x30]
  41eb52:	mov    DWORD PTR [rcx+0x18],eax
  41eb55:	movzx  eax,WORD PTR [rbx+0x10]
  41eb59:	mov    rcx,QWORD PTR [rbx+0x30]
  41eb5d:	mov    WORD PTR [rcx+0x1c],ax
  41eb61:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  41eb68:	mov    WORD PTR [rbx+0x10],0x0
  41eb6e:	mov    rax,QWORD PTR [rbx+0x30]
  41eb72:	mov    WORD PTR [rax+0xe],0x3
  41eb78:	movzx  ebp,WORD PTR [rax+0x1c]
  41eb7c:	add    ebp,ebp
  41eb7e:	add    ebp,DWORD PTR [rax+0x10]
  41eb81:	lea    edx,[r15+r15*1]
  41eb85:	add    edx,0x4
  41eb88:	add    rdx,rbp
  41eb8b:	cmp    rdx,QWORD PTR [rbx+0x60]
  41eb8f:	jbe    41ebac <flatcc_builder_start_table@@Base+0xac>
  41eb91:	lea    rsi,[rbx+0x58]
  41eb95:	mov    rdi,QWORD PTR [rbx+0x40]
  41eb99:	mov    ecx,0x1
  41eb9e:	xor    r8d,r8d
  41eba1:	call   QWORD PTR [rbx+0x50]
  41eba4:	test   eax,eax
  41eba6:	jne    41ec40 <flatcc_builder_start_table@@Base+0x140>
  41ebac:	add    rbp,QWORD PTR [rbx+0x58]
  41ebb0:	mov    QWORD PTR [rbx+0x8],rbp
  41ebb4:	je     41eb21 <flatcc_builder_start_table@@Base+0x21>
  41ebba:	add    r15d,r15d
  41ebbd:	add    rbp,0x4
  41ebc1:	mov    QWORD PTR [rbx+0x8],rbp
  41ebc5:	mov    rax,QWORD PTR [rbx+0x30]
  41ebc9:	mov    ebp,DWORD PTR [rax+0x14]
  41ebcc:	or     r15d,0x1
  41ebd0:	add    r15,rbp
  41ebd3:	cmp    r15,QWORD PTR [rbx+0x90]
  41ebda:	jbe    41ebf9 <flatcc_builder_start_table@@Base+0xf9>
  41ebdc:	lea    rsi,[rbx+0x88]
  41ebe3:	mov    rdi,QWORD PTR [rbx+0x40]
  41ebe7:	xor    ecx,ecx
  41ebe9:	mov    r8d,0x3
  41ebef:	mov    rdx,r15
  41ebf2:	call   QWORD PTR [rbx+0x50]
  41ebf5:	test   eax,eax
  41ebf7:	jne    41ec40 <flatcc_builder_start_table@@Base+0x140>
  41ebf9:	add    rbp,QWORD PTR [rbx+0x88]
  41ec00:	mov    QWORD PTR [rbx],rbp
  41ec03:	je     41eb21 <flatcc_builder_start_table@@Base+0x21>
  41ec09:	mov    eax,DWORD PTR [rbx+0x28]
  41ec0c:	mov    rcx,rax
  41ec0f:	add    rcx,QWORD PTR [rbx+0x68]
  41ec13:	mov    QWORD PTR [rbx+0x18],rcx
  41ec17:	mov    ecx,DWORD PTR [rbx+0x70]
  41ec1a:	sub    ecx,eax
  41ec1c:	cmp    ecx,0xfffc
  41ec22:	mov    eax,0xfffc
  41ec27:	cmovb  eax,ecx
  41ec2a:	mov    DWORD PTR [rbx+0x24],eax
  41ec2d:	mov    rax,QWORD PTR [rbx+0x30]
  41ec31:	mov    DWORD PTR [rax+0x4],0xfffc
  41ec38:	xor    r14d,r14d
  41ec3b:	jmp    41eb21 <flatcc_builder_start_table@@Base+0x21>
  41ec40:	lea    rdi,[rip+0x1939b]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41ec47:	lea    rsi,[rip+0x181d4]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ec4e:	lea    rcx,[rip+0x191c7]        # 437e1c <flatcc_builder_padding_base@@Base+0x127c>
  41ec55:	mov    edx,0x134
  41ec5a:	call   406070 <__assert_fail@plt>
  41ec5f:	nop

000000000041ec60 <flatcc_builder_create_vtable@@Base>:
  41ec60:	push   r14
  41ec62:	push   rbx
  41ec63:	sub    rsp,0x98
  41ec6a:	mov    r14,rdi
  41ec6d:	mov    QWORD PTR [rsp+0x8],0x0
  41ec76:	mov    DWORD PTR [rsp+0x10],0x0
  41ec7e:	test   dx,dx
  41ec81:	je     41ece7 <flatcc_builder_create_vtable@@Base+0x87>
  41ec83:	movzx  r8d,dx
  41ec87:	mov    QWORD PTR [rsp+0x8],r8
  41ec8c:	mov    QWORD PTR [rsp+0x18],rsi
  41ec91:	mov    QWORD PTR [rsp+0x20],r8
  41ec96:	mov    DWORD PTR [rsp+0x10],0x1
  41ec9e:	mov    edx,0x1
  41eca3:	cmp    DWORD PTR [r14+0x100],0x0
  41ecab:	jne    41ecf6 <flatcc_builder_create_vtable@@Base+0x96>
  41ecad:	cmp    DWORD PTR [r14+0x124],0x0
  41ecb5:	jne    41ecf6 <flatcc_builder_create_vtable@@Base+0x96>
  41ecb7:	mov    ebx,DWORD PTR [r14+0xf4]
  41ecbe:	lea    eax,[r8+rbx*1]
  41ecc2:	mov    DWORD PTR [r14+0xf4],eax
  41ecc9:	mov    rdi,QWORD PTR [r14+0x38]
  41eccd:	lea    rsi,[rsp+0x18]
  41ecd2:	mov    ecx,ebx
  41ecd4:	call   QWORD PTR [r14+0x48]
  41ecd8:	test   eax,eax
  41ecda:	jne    41ed8b <flatcc_builder_create_vtable@@Base+0x12b>
  41ece0:	add    ebx,0x1
  41ece3:	jne    41ed40 <flatcc_builder_create_vtable@@Base+0xe0>
  41ece5:	jmp    41ed3e <flatcc_builder_create_vtable@@Base+0xde>
  41ece7:	xor    edx,edx
  41ece9:	xor    r8d,r8d
  41ecec:	cmp    DWORD PTR [r14+0x100],0x0
  41ecf4:	je     41ecad <flatcc_builder_create_vtable@@Base+0x4d>
  41ecf6:	cmp    r8,0x11
  41ecfa:	setb   al
  41ecfd:	lea    rcx,[r8-0x10]
  41ed01:	shr    rcx,0x20
  41ed05:	sete   cl
  41ed08:	test   r8d,r8d
  41ed0b:	je     41ed4d <flatcc_builder_create_vtable@@Base+0xed>
  41ed0d:	or     al,cl
  41ed0f:	je     41ed4d <flatcc_builder_create_vtable@@Base+0xed>
  41ed11:	mov    ebx,DWORD PTR [r14+0xf0]
  41ed18:	sub    ebx,r8d
  41ed1b:	mov    rdi,QWORD PTR [r14+0x38]
  41ed1f:	lea    rsi,[rsp+0x18]
  41ed24:	mov    ecx,ebx
  41ed26:	call   QWORD PTR [r14+0x48]
  41ed2a:	test   eax,eax
  41ed2c:	jne    41ed6c <flatcc_builder_create_vtable@@Base+0x10c>
  41ed2e:	mov    DWORD PTR [r14+0xf0],ebx
  41ed35:	test   ebx,ebx
  41ed37:	je     41ed3e <flatcc_builder_create_vtable@@Base+0xde>
  41ed39:	add    ebx,0x1
  41ed3c:	jmp    41ed40 <flatcc_builder_create_vtable@@Base+0xe0>
  41ed3e:	xor    ebx,ebx
  41ed40:	mov    eax,ebx
  41ed42:	add    rsp,0x98
  41ed49:	pop    rbx
  41ed4a:	pop    r14
  41ed4c:	ret    
  41ed4d:	lea    rdi,[rip+0x1928e]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41ed54:	lea    rsi,[rip+0x180c7]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ed5b:	lea    rcx,[rip+0x1913f]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41ed62:	mov    edx,0x287
  41ed67:	call   406070 <__assert_fail@plt>
  41ed6c:	lea    rdi,[rip+0x1926f]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41ed73:	lea    rsi,[rip+0x180a8]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ed7a:	lea    rcx,[rip+0x19120]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41ed81:	mov    edx,0x28b
  41ed86:	call   406070 <__assert_fail@plt>
  41ed8b:	lea    rdi,[rip+0x19250]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41ed92:	lea    rsi,[rip+0x18089]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ed99:	lea    rcx,[rip+0x191bd]        # 437f5d <flatcc_builder_padding_base@@Base+0x13bd>
  41eda0:	mov    edx,0x2a5
  41eda5:	call   406070 <__assert_fail@plt>
  41edaa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041edb0 <flatcc_builder_create_cached_vtable@@Base>:
  41edb0:	push   rbp
  41edb1:	push   r15
  41edb3:	push   r14
  41edb5:	push   r13
  41edb7:	push   r12
  41edb9:	push   rbx
  41edba:	sub    rsp,0x28
  41edbe:	mov    r15d,ecx
  41edc1:	mov    r8d,edx
  41edc4:	mov    QWORD PTR [rsp+0x18],rsi
  41edc9:	mov    r13,rdi
  41edcc:	mov    rax,QWORD PTR [rdi+0xd8]
  41edd3:	test   rax,rax
  41edd6:	je     41eeaa <flatcc_builder_create_cached_vtable@@Base+0xfa>
  41eddc:	mov    ecx,0x20
  41ede1:	sub    ecx,eax
  41ede3:	shrx   r15d,r15d,ecx
  41ede8:	shl    r15,0x2
  41edec:	add    r15,QWORD PTR [r13+0xa8]
  41edf3:	je     41ef7a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  41edf9:	mov    ebp,DWORD PTR [r15]
  41edfc:	test   ebp,ebp
  41edfe:	je     41ef82 <flatcc_builder_create_cached_vtable@@Base+0x1d2>
  41ee04:	mov    rbx,QWORD PTR [r13+0x78]
  41ee08:	mov    QWORD PTR [rsp+0x10],r13
  41ee0d:	mov    r13,QWORD PTR [r13+0xb8]
  41ee14:	movzx  eax,r8w
  41ee18:	mov    QWORD PTR [rsp+0x20],rax
  41ee1d:	xor    eax,eax
  41ee1f:	mov    QWORD PTR [rsp],rax
  41ee23:	mov    QWORD PTR [rsp+0x8],r15
  41ee28:	mov    r14,r15
  41ee2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee30:	mov    eax,ebp
  41ee32:	lea    r15,[rax+r13*1]
  41ee36:	mov    esi,DWORD PTR [r13+rax*1+0x8]
  41ee3b:	cmp    WORD PTR [rbx+rsi*1],r8w
  41ee40:	jne    41ee5e <flatcc_builder_create_cached_vtable@@Base+0xae>
  41ee42:	add    rsi,rbx
  41ee45:	mov    rdi,QWORD PTR [rsp+0x18]
  41ee4a:	mov    rdx,QWORD PTR [rsp+0x20]
  41ee4f:	mov    r12d,r8d
  41ee52:	call   4060b0 <memcmp@plt>
  41ee57:	mov    r8d,r12d
  41ee5a:	test   eax,eax
  41ee5c:	je     41ee6f <flatcc_builder_create_cached_vtable@@Base+0xbf>
  41ee5e:	mov    ebp,DWORD PTR [r15+0xc]
  41ee62:	add    r15,0xc
  41ee66:	mov    r14,r15
  41ee69:	test   ebp,ebp
  41ee6b:	jne    41ee30 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41ee6d:	jmp    41ee9b <flatcc_builder_create_cached_vtable@@Base+0xeb>
  41ee6f:	mov    eax,DWORD PTR [r15+0x4]
  41ee73:	mov    rcx,QWORD PTR [rsp+0x10]
  41ee78:	cmp    eax,DWORD PTR [rcx+0x100]
  41ee7e:	je     41f0e4 <flatcc_builder_create_cached_vtable@@Base+0x334>
  41ee84:	lea    r14,[r15+0xc]
  41ee88:	mov    ebp,DWORD PTR [r15+0xc]
  41ee8c:	mov    rax,r15
  41ee8f:	mov    QWORD PTR [rsp],r15
  41ee93:	test   ebp,ebp
  41ee95:	jne    41ee30 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41ee97:	mov    QWORD PTR [rsp],r15
  41ee9b:	mov    r13,QWORD PTR [rsp+0x10]
  41eea0:	mov    r15,QWORD PTR [rsp+0x8]
  41eea5:	jmp    41ef88 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
  41eeaa:	cmp    DWORD PTR [r13+0xe4],0x0
  41eeb2:	jne    41f121 <flatcc_builder_create_cached_vtable@@Base+0x371>
  41eeb8:	lea    rbx,[r13+0xb8]
  41eebf:	cmp    QWORD PTR [r13+0xc0],0xf
  41eec7:	ja     41eeef <flatcc_builder_create_cached_vtable@@Base+0x13f>
  41eec9:	mov    rdi,QWORD PTR [r13+0x40]
  41eecd:	mov    edx,0x10
  41eed2:	xor    ecx,ecx
  41eed4:	mov    ebp,r8d
  41eed7:	mov    r8d,0x6
  41eedd:	mov    rsi,rbx
  41eee0:	call   QWORD PTR [r13+0x50]
  41eee4:	mov    r8d,ebp
  41eee7:	test   eax,eax
  41eee9:	jne    41f102 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41eeef:	xor    r12d,r12d
  41eef2:	cmp    QWORD PTR [rbx],0x0
  41eef6:	je     41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41eefc:	mov    ebx,r8d
  41eeff:	lea    rsi,[r13+0xa8]
  41ef06:	mov    DWORD PTR [r13+0xe4],0x10
  41ef11:	mov    rdi,QWORD PTR [r13+0x40]
  41ef15:	mov    edx,0x100
  41ef1a:	mov    ecx,0x1
  41ef1f:	mov    r8d,0x5
  41ef25:	call   QWORD PTR [r13+0x50]
  41ef29:	test   eax,eax
  41ef2b:	jne    41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41ef31:	mov    rax,QWORD PTR [r13+0xb0]
  41ef38:	mov    edx,0x100
  41ef3d:	nop    DWORD PTR [rax]
  41ef40:	mov    rcx,rdx
  41ef43:	lea    rdx,[rdx+rdx*1]
  41ef47:	cmp    rdx,rax
  41ef4a:	jbe    41ef40 <flatcc_builder_create_cached_vtable@@Base+0x190>
  41ef4c:	shr    rcx,0x2
  41ef50:	mov    rax,0xffffffffffffffff
  41ef57:	mov    edx,0x1
  41ef5c:	mov    r8d,ebx
  41ef5f:	nop
  41ef60:	add    rax,0x1
  41ef64:	shlx   rsi,rdx,rax
  41ef69:	cmp    rsi,rcx
  41ef6c:	jb     41ef60 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  41ef6e:	mov    QWORD PTR [r13+0xd8],rax
  41ef75:	jmp    41eddc <flatcc_builder_create_cached_vtable@@Base+0x2c>
  41ef7a:	xor    r12d,r12d
  41ef7d:	jmp    41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41ef82:	xor    eax,eax
  41ef84:	mov    QWORD PTR [rsp],rax
  41ef88:	mov    ebp,DWORD PTR [r13+0xe4]
  41ef8f:	lea    rbx,[r13+0xb8]
  41ef96:	lea    rdx,[rbp+0x10]
  41ef9a:	cmp    rdx,QWORD PTR [r13+0xc0]
  41efa1:	jbe    41efc4 <flatcc_builder_create_cached_vtable@@Base+0x214>
  41efa3:	mov    rdi,QWORD PTR [r13+0x40]
  41efa7:	xor    ecx,ecx
  41efa9:	mov    r14d,r8d
  41efac:	mov    r8d,0x6
  41efb2:	mov    rsi,rbx
  41efb5:	call   QWORD PTR [r13+0x50]
  41efb9:	mov    r8d,r14d
  41efbc:	test   eax,eax
  41efbe:	jne    41f102 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41efc4:	xor    r12d,r12d
  41efc7:	add    rbp,QWORD PTR [rbx]
  41efca:	je     41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41efd0:	mov    eax,DWORD PTR [r13+0xe4]
  41efd7:	mov    ecx,DWORD PTR [r13+0x100]
  41efde:	lea    edx,[rax+0x10]
  41efe1:	mov    DWORD PTR [r13+0xe4],edx
  41efe8:	mov    DWORD PTR [rbp+0x4],ecx
  41efeb:	mov    ecx,DWORD PTR [r15]
  41efee:	mov    DWORD PTR [rbp+0xc],ecx
  41eff1:	mov    DWORD PTR [r15],eax
  41eff4:	movzx  ebx,r8w
  41eff8:	mov    rdi,r13
  41effb:	mov    rsi,QWORD PTR [rsp+0x18]
  41f000:	mov    edx,ebx
  41f002:	call   41ec60 <flatcc_builder_create_vtable@@Base>
  41f007:	mov    DWORD PTR [rbp+0x0],eax
  41f00a:	test   eax,eax
  41f00c:	je     41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41f012:	mov    rax,QWORD PTR [rsp]
  41f016:	test   rax,rax
  41f019:	je     41f026 <flatcc_builder_create_cached_vtable@@Base+0x276>
  41f01b:	mov    eax,DWORD PTR [rax+0x8]
  41f01e:	mov    DWORD PTR [rbp+0x8],eax
  41f021:	jmp    41f0c6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  41f026:	mov    rax,QWORD PTR [r13+0x118]
  41f02d:	mov    r14d,DWORD PTR [r13+0xe0]
  41f034:	test   rax,rax
  41f037:	je     41f074 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  41f039:	lea    ecx,[r14+rbx*1]
  41f03d:	cmp    rax,rcx
  41f040:	jae    41f074 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  41f042:	cmp    QWORD PTR [r13+0xd8],0x0
  41f04a:	je     41f0c6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  41f04c:	mov    rdi,QWORD PTR [r13+0xa8]
  41f053:	mov    rdx,QWORD PTR [r13+0xb0]
  41f05a:	xor    esi,esi
  41f05c:	call   406080 <memset@plt>
  41f061:	movabs rax,0x1000000000
  41f06b:	mov    QWORD PTR [r13+0xe0],rax
  41f072:	jmp    41f0c6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  41f074:	lea    r15,[r13+0x78]
  41f078:	lea    rdx,[r14+rbx*1]
  41f07c:	cmp    rdx,QWORD PTR [r13+0x80]
  41f083:	jbe    41f09c <flatcc_builder_create_cached_vtable@@Base+0x2ec>
  41f085:	mov    rdi,QWORD PTR [r13+0x40]
  41f089:	xor    ecx,ecx
  41f08b:	mov    r8d,0x2
  41f091:	mov    rsi,r15
  41f094:	call   QWORD PTR [r13+0x50]
  41f098:	test   eax,eax
  41f09a:	jne    41f102 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41f09c:	add    r14,QWORD PTR [r15]
  41f09f:	je     41f0dc <flatcc_builder_create_cached_vtable@@Base+0x32c>
  41f0a1:	mov    eax,DWORD PTR [r13+0xe0]
  41f0a8:	mov    DWORD PTR [rbp+0x8],eax
  41f0ab:	mov    ecx,ebx
  41f0ad:	add    ecx,eax
  41f0af:	mov    DWORD PTR [r13+0xe0],ecx
  41f0b6:	mov    rdi,r14
  41f0b9:	mov    rsi,QWORD PTR [rsp+0x18]
  41f0be:	mov    rdx,rbx
  41f0c1:	call   4060e0 <memcpy@plt>
  41f0c6:	mov    r12d,DWORD PTR [rbp+0x0]
  41f0ca:	mov    eax,r12d
  41f0cd:	add    rsp,0x28
  41f0d1:	pop    rbx
  41f0d2:	pop    r12
  41f0d4:	pop    r13
  41f0d6:	pop    r14
  41f0d8:	pop    r15
  41f0da:	pop    rbp
  41f0db:	ret    
  41f0dc:	mov    r12d,0xffffffff
  41f0e2:	jmp    41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41f0e4:	mov    rcx,QWORD PTR [rsp+0x8]
  41f0e9:	cmp    r14,rcx
  41f0ec:	je     41f0fd <flatcc_builder_create_cached_vtable@@Base+0x34d>
  41f0ee:	mov    eax,DWORD PTR [r15+0xc]
  41f0f2:	mov    DWORD PTR [r14],eax
  41f0f5:	mov    eax,DWORD PTR [rcx]
  41f0f7:	mov    DWORD PTR [r15+0xc],eax
  41f0fb:	mov    DWORD PTR [rcx],ebp
  41f0fd:	mov    r12d,DWORD PTR [r15]
  41f100:	jmp    41f0ca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41f102:	lea    rdi,[rip+0x18ed9]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41f109:	lea    rsi,[rip+0x17d12]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f110:	lea    rcx,[rip+0x18d05]        # 437e1c <flatcc_builder_padding_base@@Base+0x127c>
  41f117:	mov    edx,0x134
  41f11c:	call   406070 <__assert_fail@plt>
  41f121:	lea    rdi,[rip+0x18e7e]        # 437fa6 <flatcc_builder_padding_base@@Base+0x1406>
  41f128:	lea    rsi,[rip+0x17cf3]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f12f:	lea    rcx,[rip+0x18e7f]        # 437fb5 <flatcc_builder_padding_base@@Base+0x1415>
  41f136:	mov    edx,0x156
  41f13b:	call   406070 <__assert_fail@plt>

000000000041f140 <flatcc_builder_create_table@@Base>:
  41f140:	push   rbp
  41f141:	push   r14
  41f143:	push   rbx
  41f144:	sub    rsp,0xa0
  41f14b:	test   r9d,r9d
  41f14e:	js     41f365 <flatcc_builder_create_table@@Base+0x225>
  41f154:	mov    r14,rdi
  41f157:	mov    edi,DWORD PTR [rsp+0xc0]
  41f15e:	test   dil,0x1
  41f162:	je     41f384 <flatcc_builder_create_table@@Base+0x244>
  41f168:	movzx  ecx,cx
  41f16b:	cmp    ecx,0x4
  41f16e:	mov    eax,0x4
  41f173:	cmova  eax,ecx
  41f176:	cmp    WORD PTR [r14+0xe8],ax
  41f17e:	jae    41f188 <flatcc_builder_create_table@@Base+0x48>
  41f180:	mov    WORD PTR [r14+0xe8],ax
  41f188:	mov    ebp,DWORD PTR [r14+0xf0]
  41f18f:	mov    ecx,ebp
  41f191:	sub    ecx,edx
  41f193:	movzx  r10d,ax
  41f197:	add    r10d,0xffffffff
  41f19b:	and    r10d,ecx
  41f19e:	mov    ecx,0xfffffffc
  41f1a3:	mov    ebx,0xfffffffc
  41f1a8:	sub    ebx,edx
  41f1aa:	add    edi,r10d
  41f1ad:	lea    eax,[rbx+rbp*1]
  41f1b0:	add    eax,0x1
  41f1b3:	sub    eax,edi
  41f1b5:	mov    DWORD PTR [rsp+0xc],eax
  41f1b9:	test   r9d,r9d
  41f1bc:	jle    41f267 <flatcc_builder_create_table@@Base+0x127>
  41f1c2:	add    ebx,ebp
  41f1c4:	sub    ebx,r10d
  41f1c7:	sub    ecx,ebx
  41f1c9:	mov    edi,r9d
  41f1cc:	lea    rax,[rdi-0x1]
  41f1d0:	mov    r9d,edi
  41f1d3:	and    r9d,0x3
  41f1d7:	cmp    rax,0x3
  41f1db:	jae    41f1e9 <flatcc_builder_create_table@@Base+0xa9>
  41f1dd:	xor    ebx,ebx
  41f1df:	test   r9,r9
  41f1e2:	jne    41f23d <flatcc_builder_create_table@@Base+0xfd>
  41f1e4:	jmp    41f267 <flatcc_builder_create_table@@Base+0x127>
  41f1e9:	sub    rdi,r9
  41f1ec:	xor    ebx,ebx
  41f1ee:	xchg   ax,ax
  41f1f0:	movzx  eax,WORD PTR [r8+rbx*2]
  41f1f5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41f1f8:	add    ebp,ecx
  41f1fa:	sub    ebp,eax
  41f1fc:	mov    DWORD PTR [rax+rsi*1],ebp
  41f1ff:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  41f205:	mov    ebp,DWORD PTR [rax+rsi*1]
  41f208:	add    ebp,ecx
  41f20a:	sub    ebp,eax
  41f20c:	mov    DWORD PTR [rax+rsi*1],ebp
  41f20f:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  41f215:	mov    ebp,DWORD PTR [rax+rsi*1]
  41f218:	add    ebp,ecx
  41f21a:	sub    ebp,eax
  41f21c:	mov    DWORD PTR [rax+rsi*1],ebp
  41f21f:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  41f225:	mov    ebp,DWORD PTR [rax+rsi*1]
  41f228:	add    ebp,ecx
  41f22a:	sub    ebp,eax
  41f22c:	mov    DWORD PTR [rax+rsi*1],ebp
  41f22f:	add    rbx,0x4
  41f233:	cmp    rdi,rbx
  41f236:	jne    41f1f0 <flatcc_builder_create_table@@Base+0xb0>
  41f238:	test   r9,r9
  41f23b:	je     41f267 <flatcc_builder_create_table@@Base+0x127>
  41f23d:	lea    rdi,[r8+rbx*2]
  41f241:	xor    ebx,ebx
  41f243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f24d:	nop    DWORD PTR [rax]
  41f250:	movzx  eax,WORD PTR [rdi+rbx*2]
  41f254:	mov    ebp,DWORD PTR [rax+rsi*1]
  41f257:	add    ebp,ecx
  41f259:	sub    ebp,eax
  41f25b:	mov    DWORD PTR [rax+rsi*1],ebp
  41f25e:	add    rbx,0x1
  41f262:	cmp    r9,rbx
  41f265:	jne    41f250 <flatcc_builder_create_table@@Base+0x110>
  41f267:	mov    QWORD PTR [rsp+0x10],0x4
  41f270:	lea    rax,[rsp+0xc]
  41f275:	mov    QWORD PTR [rsp+0x20],rax
  41f27a:	mov    QWORD PTR [rsp+0x28],0x4
  41f283:	mov    DWORD PTR [rsp+0x18],0x1
  41f28b:	test   rdx,rdx
  41f28e:	je     41f330 <flatcc_builder_create_table@@Base+0x1f0>
  41f294:	lea    r8,[rdx+0x4]
  41f298:	mov    QWORD PTR [rsp+0x10],r8
  41f29d:	mov    QWORD PTR [rsp+0x30],rsi
  41f2a2:	mov    QWORD PTR [rsp+0x38],rdx
  41f2a7:	mov    DWORD PTR [rsp+0x18],0x2
  41f2af:	mov    edx,0x2
  41f2b4:	test   r10d,r10d
  41f2b7:	je     41f2df <flatcc_builder_create_table@@Base+0x19f>
  41f2b9:	add    r8,r10
  41f2bc:	mov    QWORD PTR [rsp+0x10],r8
  41f2c1:	mov    eax,edx
  41f2c3:	shl    rax,0x4
  41f2c7:	lea    rcx,[rip+0x178d2]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41f2ce:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  41f2d3:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  41f2d8:	add    edx,0x1
  41f2db:	mov    DWORD PTR [rsp+0x18],edx
  41f2df:	cmp    r8,0x11
  41f2e3:	setb   al
  41f2e6:	lea    rcx,[r8-0x10]
  41f2ea:	shr    rcx,0x20
  41f2ee:	sete   cl
  41f2f1:	test   r8d,r8d
  41f2f4:	jle    41f346 <flatcc_builder_create_table@@Base+0x206>
  41f2f6:	or     al,cl
  41f2f8:	je     41f346 <flatcc_builder_create_table@@Base+0x206>
  41f2fa:	mov    ebp,DWORD PTR [r14+0xf0]
  41f301:	sub    ebp,r8d
  41f304:	mov    rdi,QWORD PTR [r14+0x38]
  41f308:	lea    rsi,[rsp+0x20]
  41f30d:	mov    ecx,ebp
  41f30f:	call   QWORD PTR [r14+0x48]
  41f313:	test   eax,eax
  41f315:	jne    41f3a3 <flatcc_builder_create_table@@Base+0x263>
  41f31b:	mov    DWORD PTR [r14+0xf0],ebp
  41f322:	mov    eax,ebp
  41f324:	add    rsp,0xa0
  41f32b:	pop    rbx
  41f32c:	pop    r14
  41f32e:	pop    rbp
  41f32f:	ret    
  41f330:	mov    edx,0x1
  41f335:	mov    r8d,0x4
  41f33b:	test   r10d,r10d
  41f33e:	jne    41f2b9 <flatcc_builder_create_table@@Base+0x179>
  41f344:	jmp    41f2df <flatcc_builder_create_table@@Base+0x19f>
  41f346:	lea    rdi,[rip+0x18c95]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41f34d:	lea    rsi,[rip+0x17ace]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f354:	lea    rcx,[rip+0x18b46]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41f35b:	mov    edx,0x287
  41f360:	call   406070 <__assert_fail@plt>
  41f365:	lea    rdi,[rip+0x1822c]        # 437598 <flatcc_builder_padding_base@@Base+0x9f8>
  41f36c:	lea    rsi,[rip+0x17aaf]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f373:	lea    rcx,[rip+0x18230]        # 4375aa <flatcc_builder_padding_base@@Base+0xa0a>
  41f37a:	mov    edx,0x4d5
  41f37f:	call   406070 <__assert_fail@plt>
  41f384:	lea    rdi,[rip+0x182bb]        # 437646 <flatcc_builder_padding_base@@Base+0xaa6>
  41f38b:	lea    rsi,[rip+0x17a90]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f392:	lea    rcx,[rip+0x18211]        # 4375aa <flatcc_builder_padding_base@@Base+0xa0a>
  41f399:	mov    edx,0x4db
  41f39e:	call   406070 <__assert_fail@plt>
  41f3a3:	lea    rdi,[rip+0x18c38]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41f3aa:	lea    rsi,[rip+0x17a71]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f3b1:	lea    rcx,[rip+0x18ae9]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41f3b8:	mov    edx,0x28b
  41f3bd:	call   406070 <__assert_fail@plt>
  41f3c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3cc:	nop    DWORD PTR [rax+0x0]

000000000041f3d0 <flatcc_builder_check_required_field@@Base>:
  41f3d0:	mov    rax,QWORD PTR [rdi+0x30]
  41f3d4:	movzx  eax,WORD PTR [rax+0xe]
  41f3d8:	cmp    eax,0x3
  41f3db:	jne    41f3f7 <flatcc_builder_check_required_field@@Base+0x27>
  41f3dd:	xor    eax,eax
  41f3df:	cmp    WORD PTR [rdi+0x10],si
  41f3e3:	jbe    41f3f6 <flatcc_builder_check_required_field@@Base+0x26>
  41f3e5:	mov    rcx,QWORD PTR [rdi+0x8]
  41f3e9:	movzx  edx,si
  41f3ec:	xor    eax,eax
  41f3ee:	cmp    WORD PTR [rcx+rdx*2],0x0
  41f3f3:	setne  al
  41f3f6:	ret    
  41f3f7:	push   rax
  41f3f8:	lea    rdi,[rip+0x18252]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41f3ff:	lea    rsi,[rip+0x17a1c]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f406:	lea    rcx,[rip+0x1826f]        # 43767c <flatcc_builder_padding_base@@Base+0xadc>
  41f40d:	mov    edx,0x4f8
  41f412:	call   406070 <__assert_fail@plt>
  41f417:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f420 <flatcc_builder_check_union_field@@Base>:
  41f420:	mov    rax,QWORD PTR [rdi+0x30]
  41f424:	movzx  eax,WORD PTR [rax+0xe]
  41f428:	cmp    eax,0x3
  41f42b:	jne    41f47e <flatcc_builder_check_union_field@@Base+0x5e>
  41f42d:	test   si,si
  41f430:	je     41f461 <flatcc_builder_check_union_field@@Base+0x41>
  41f432:	cmp    WORD PTR [rdi+0x10],si
  41f436:	jbe    41f467 <flatcc_builder_check_union_field@@Base+0x47>
  41f438:	movzx  eax,si
  41f43b:	mov    rcx,QWORD PTR [rdi+0x8]
  41f43f:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  41f444:	test   rdx,rdx
  41f447:	je     41f46d <flatcc_builder_check_union_field@@Base+0x4d>
  41f449:	mov    rsi,QWORD PTR [rdi+0x18]
  41f44d:	cmp    BYTE PTR [rsi+rdx*1],0x0
  41f451:	movzx  eax,WORD PTR [rcx+rax*2]
  41f455:	je     41f474 <flatcc_builder_check_union_field@@Base+0x54>
  41f457:	test   ax,ax
  41f45a:	setne  al
  41f45d:	movzx  eax,al
  41f460:	ret    
  41f461:	xor    eax,eax
  41f463:	movzx  eax,al
  41f466:	ret    
  41f467:	xor    eax,eax
  41f469:	movzx  eax,al
  41f46c:	ret    
  41f46d:	cmp    WORD PTR [rcx+rax*2],0x0
  41f472:	jmp    41f477 <flatcc_builder_check_union_field@@Base+0x57>
  41f474:	test   ax,ax
  41f477:	sete   al
  41f47a:	movzx  eax,al
  41f47d:	ret    
  41f47e:	push   rax
  41f47f:	lea    rdi,[rip+0x181cb]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41f486:	lea    rsi,[rip+0x17995]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f48d:	lea    rcx,[rip+0x1823b]        # 4376cf <flatcc_builder_padding_base@@Base+0xb2f>
  41f494:	mov    edx,0x4ff
  41f499:	call   406070 <__assert_fail@plt>
  41f49e:	xchg   ax,ax

000000000041f4a0 <flatcc_builder_check_required@@Base>:
  41f4a0:	mov    rax,QWORD PTR [rdi+0x30]
  41f4a4:	movzx  eax,WORD PTR [rax+0xe]
  41f4a8:	cmp    eax,0x3
  41f4ab:	jne    41f4e8 <flatcc_builder_check_required@@Base+0x48>
  41f4ad:	movzx  ecx,WORD PTR [rdi+0x10]
  41f4b1:	xor    eax,eax
  41f4b3:	cmp    ecx,edx
  41f4b5:	jl     41f4e4 <flatcc_builder_check_required@@Base+0x44>
  41f4b7:	mov    eax,0x1
  41f4bc:	test   edx,edx
  41f4be:	jle    41f4e4 <flatcc_builder_check_required@@Base+0x44>
  41f4c0:	mov    rcx,QWORD PTR [rdi+0x8]
  41f4c4:	movsxd r8,edx
  41f4c7:	xor    edi,edi
  41f4c9:	nop    DWORD PTR [rax+0x0]
  41f4d0:	movzx  edx,WORD PTR [rsi+rdi*2]
  41f4d4:	cmp    WORD PTR [rcx+rdx*2],0x0
  41f4d9:	je     41f4e5 <flatcc_builder_check_required@@Base+0x45>
  41f4db:	add    rdi,0x1
  41f4df:	cmp    rdi,r8
  41f4e2:	jl     41f4d0 <flatcc_builder_check_required@@Base+0x30>
  41f4e4:	ret    
  41f4e5:	xor    eax,eax
  41f4e7:	ret    
  41f4e8:	push   rax
  41f4e9:	lea    rdi,[rip+0x18161]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41f4f0:	lea    rsi,[rip+0x1792b]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f4f7:	lea    rcx,[rip+0x18221]        # 43771f <flatcc_builder_padding_base@@Base+0xb7f>
  41f4fe:	mov    edx,0x511
  41f503:	call   406070 <__assert_fail@plt>
  41f508:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f510 <flatcc_builder_end_table@@Base>:
  41f510:	push   rbp
  41f511:	push   r15
  41f513:	push   r14
  41f515:	push   r12
  41f517:	push   rbx
  41f518:	sub    rsp,0x10
  41f51c:	mov    rax,QWORD PTR [rdi+0x30]
  41f520:	movzx  eax,WORD PTR [rax+0xe]
  41f524:	cmp    eax,0x3
  41f527:	jne    41f678 <flatcc_builder_end_table@@Base+0x168>
  41f52d:	mov    rbx,rdi
  41f530:	mov    rax,QWORD PTR [rdi+0x8]
  41f534:	mov    ecx,DWORD PTR [rdi+0x10]
  41f537:	lea    ecx,[rcx+rcx*1]
  41f53a:	add    ecx,0x4
  41f53d:	mov    WORD PTR [rax-0x4],cx
  41f541:	mov    edx,DWORD PTR [rdi+0x20]
  41f544:	add    edx,0x4
  41f547:	mov    WORD PTR [rax-0x2],dx
  41f54b:	lea    r12,[rax-0x4]
  41f54f:	movzx  ebp,cx
  41f552:	mov    eax,DWORD PTR [rdi+0x14]
  41f555:	xor    eax,ebp
  41f557:	imul   eax,eax,0x9e3779b1
  41f55d:	movzx  ecx,dx
  41f560:	xor    ecx,eax
  41f562:	imul   ecx,ecx,0x9e3779b1
  41f568:	mov    DWORD PTR [rdi+0x14],ecx
  41f56b:	mov    rsi,r12
  41f56e:	mov    edx,ebp
  41f570:	call   41edb0 <flatcc_builder_create_cached_vtable@@Base>
  41f575:	test   eax,eax
  41f577:	je     41f665 <flatcc_builder_end_table@@Base+0x155>
  41f57d:	mov    r14d,eax
  41f580:	xor    r15d,r15d
  41f583:	xor    esi,esi
  41f585:	mov    rdi,r12
  41f588:	mov    rdx,rbp
  41f58b:	call   406080 <memset@plt>
  41f590:	mov    rax,QWORD PTR [rbx+0x30]
  41f594:	mov    r8d,DWORD PTR [rax+0x14]
  41f598:	add    r8,QWORD PTR [rbx+0x88]
  41f59f:	mov    r9,QWORD PTR [rbx]
  41f5a2:	mov    rsi,QWORD PTR [rbx+0x18]
  41f5a6:	sub    r9,r8
  41f5a9:	shr    r9,1
  41f5ac:	mov    edx,DWORD PTR [rbx+0x20]
  41f5af:	movzx  ecx,WORD PTR [rbx+0xea]
  41f5b6:	mov    DWORD PTR [rsp],r14d
  41f5ba:	mov    rdi,rbx
  41f5bd:	call   41f140 <flatcc_builder_create_table@@Base>
  41f5c2:	test   eax,eax
  41f5c4:	je     41f668 <flatcc_builder_end_table@@Base+0x158>
  41f5ca:	mov    r14d,eax
  41f5cd:	mov    rax,QWORD PTR [rbx+0x30]
  41f5d1:	mov    ecx,DWORD PTR [rax+0x18]
  41f5d4:	mov    DWORD PTR [rbx+0x14],ecx
  41f5d7:	movzx  ecx,WORD PTR [rax+0x1c]
  41f5db:	mov    WORD PTR [rbx+0x10],cx
  41f5df:	mov    ecx,DWORD PTR [rax+0x10]
  41f5e2:	add    rcx,QWORD PTR [rbx+0x58]
  41f5e6:	mov    QWORD PTR [rbx+0x8],rcx
  41f5ea:	mov    eax,DWORD PTR [rax+0x14]
  41f5ed:	add    rax,QWORD PTR [rbx+0x88]
  41f5f4:	mov    QWORD PTR [rbx],rax
  41f5f7:	mov    rdi,QWORD PTR [rbx+0x18]
  41f5fb:	mov    edx,DWORD PTR [rbx+0x20]
  41f5fe:	xor    esi,esi
  41f600:	call   406080 <memset@plt>
  41f605:	mov    rax,QWORD PTR [rbx+0x30]
  41f609:	mov    ecx,DWORD PTR [rax+0x8]
  41f60c:	mov    DWORD PTR [rbx+0x20],ecx
  41f60f:	mov    ecx,DWORD PTR [rax]
  41f611:	mov    DWORD PTR [rbx+0x28],ecx
  41f614:	mov    edx,DWORD PTR [rax+0x4]
  41f617:	mov    rsi,rcx
  41f61a:	add    rsi,QWORD PTR [rbx+0x68]
  41f61e:	mov    QWORD PTR [rbx+0x18],rsi
  41f622:	mov    esi,DWORD PTR [rbx+0x70]
  41f625:	sub    esi,ecx
  41f627:	cmp    esi,edx
  41f629:	cmova  esi,edx
  41f62c:	mov    DWORD PTR [rbx+0x24],esi
  41f62f:	movzx  ecx,WORD PTR [rbx+0xea]
  41f636:	cmp    WORD PTR [rbx+0xe8],cx
  41f63d:	jae    41f646 <flatcc_builder_end_table@@Base+0x136>
  41f63f:	mov    WORD PTR [rbx+0xe8],cx
  41f646:	movzx  ecx,WORD PTR [rax+0xc]
  41f64a:	mov    WORD PTR [rbx+0xea],cx
  41f651:	add    rax,0xffffffffffffffdc
  41f655:	mov    QWORD PTR [rbx+0x30],rax
  41f659:	add    DWORD PTR [rbx+0x104],0xffffffff
  41f660:	mov    r15d,r14d
  41f663:	jmp    41f668 <flatcc_builder_end_table@@Base+0x158>
  41f665:	xor    r15d,r15d
  41f668:	mov    eax,r15d
  41f66b:	add    rsp,0x10
  41f66f:	pop    rbx
  41f670:	pop    r12
  41f672:	pop    r14
  41f674:	pop    r15
  41f676:	pop    rbp
  41f677:	ret    
  41f678:	lea    rdi,[rip+0x17fd2]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41f67f:	lea    rsi,[rip+0x1779c]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f686:	lea    rcx,[rip+0x180ec]        # 437779 <flatcc_builder_padding_base@@Base+0xbd9>
  41f68d:	mov    edx,0x525
  41f692:	call   406070 <__assert_fail@plt>
  41f697:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f6a0 <flatcc_builder_create_vector@@Base>:
  41f6a0:	push   rbp
  41f6a1:	push   rbx
  41f6a2:	sub    rsp,0x98
  41f6a9:	cmp    rdx,r9
  41f6ac:	ja     41f7d9 <flatcc_builder_create_vector@@Base+0x139>
  41f6b2:	mov    rbx,rdi
  41f6b5:	movzx  edi,r8w
  41f6b9:	cmp    edi,0x4
  41f6bc:	mov    eax,0x4
  41f6c1:	cmova  eax,edi
  41f6c4:	cmp    WORD PTR [rbx+0xe8],ax
  41f6cb:	jae    41f6d4 <flatcc_builder_create_vector@@Base+0x34>
  41f6cd:	mov    WORD PTR [rbx+0xe8],ax
  41f6d4:	imul   ecx,edx
  41f6d7:	mov    DWORD PTR [rsp+0x4],edx
  41f6db:	mov    ebp,DWORD PTR [rbx+0xf0]
  41f6e1:	mov    edx,ebp
  41f6e3:	sub    edx,ecx
  41f6e5:	movzx  eax,ax
  41f6e8:	add    eax,0xffffffff
  41f6eb:	and    eax,edx
  41f6ed:	mov    QWORD PTR [rsp+0x8],0x4
  41f6f6:	lea    rdx,[rsp+0x4]
  41f6fb:	mov    QWORD PTR [rsp+0x18],rdx
  41f700:	mov    QWORD PTR [rsp+0x20],0x4
  41f709:	mov    DWORD PTR [rsp+0x10],0x1
  41f711:	test   ecx,ecx
  41f713:	je     41f7a9 <flatcc_builder_create_vector@@Base+0x109>
  41f719:	mov    ecx,ecx
  41f71b:	lea    r8,[rcx+0x4]
  41f71f:	mov    QWORD PTR [rsp+0x8],r8
  41f724:	mov    QWORD PTR [rsp+0x28],rsi
  41f729:	mov    QWORD PTR [rsp+0x30],rcx
  41f72e:	mov    DWORD PTR [rsp+0x10],0x2
  41f736:	mov    edx,0x2
  41f73b:	test   eax,eax
  41f73d:	je     41f767 <flatcc_builder_create_vector@@Base+0xc7>
  41f73f:	mov    eax,eax
  41f741:	add    r8,rax
  41f744:	mov    QWORD PTR [rsp+0x8],r8
  41f749:	mov    ecx,edx
  41f74b:	shl    rcx,0x4
  41f74f:	lea    rsi,[rip+0x1744a]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41f756:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  41f75b:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  41f760:	add    edx,0x1
  41f763:	mov    DWORD PTR [rsp+0x10],edx
  41f767:	cmp    r8,0x11
  41f76b:	setb   al
  41f76e:	lea    rcx,[r8-0x10]
  41f772:	shr    rcx,0x20
  41f776:	sete   cl
  41f779:	test   r8d,r8d
  41f77c:	jle    41f7ba <flatcc_builder_create_vector@@Base+0x11a>
  41f77e:	or     al,cl
  41f780:	je     41f7ba <flatcc_builder_create_vector@@Base+0x11a>
  41f782:	sub    ebp,r8d
  41f785:	mov    rdi,QWORD PTR [rbx+0x38]
  41f789:	lea    rsi,[rsp+0x18]
  41f78e:	mov    ecx,ebp
  41f790:	call   QWORD PTR [rbx+0x48]
  41f793:	test   eax,eax
  41f795:	jne    41f7f8 <flatcc_builder_create_vector@@Base+0x158>
  41f797:	mov    DWORD PTR [rbx+0xf0],ebp
  41f79d:	mov    eax,ebp
  41f79f:	add    rsp,0x98
  41f7a6:	pop    rbx
  41f7a7:	pop    rbp
  41f7a8:	ret    
  41f7a9:	mov    edx,0x1
  41f7ae:	mov    r8d,0x4
  41f7b4:	test   eax,eax
  41f7b6:	jne    41f73f <flatcc_builder_create_vector@@Base+0x9f>
  41f7b8:	jmp    41f767 <flatcc_builder_create_vector@@Base+0xc7>
  41f7ba:	lea    rdi,[rip+0x18821]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41f7c1:	lea    rsi,[rip+0x1765a]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f7c8:	lea    rcx,[rip+0x186d2]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41f7cf:	mov    edx,0x287
  41f7d4:	call   406070 <__assert_fail@plt>
  41f7d9:	lea    rdi,[rip+0x17fdb]        # 4377bb <flatcc_builder_padding_base@@Base+0xc1b>
  41f7e0:	lea    rsi,[rip+0x1763b]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f7e7:	lea    rcx,[rip+0x17fe0]        # 4377ce <flatcc_builder_padding_base@@Base+0xc2e>
  41f7ee:	mov    edx,0x555
  41f7f3:	call   406070 <__assert_fail@plt>
  41f7f8:	lea    rdi,[rip+0x187e3]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41f7ff:	lea    rsi,[rip+0x1761c]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f806:	lea    rcx,[rip+0x18694]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41f80d:	mov    edx,0x28b
  41f812:	call   406070 <__assert_fail@plt>
  41f817:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f820 <flatcc_builder_end_vector@@Base>:
  41f820:	push   rbp
  41f821:	push   rbx
  41f822:	push   rax
  41f823:	mov    rax,QWORD PTR [rdi+0x30]
  41f827:	movzx  ecx,WORD PTR [rax+0xe]
  41f82b:	cmp    ecx,0x4
  41f82e:	jne    41f8ca <flatcc_builder_end_vector@@Base+0xaa>
  41f834:	mov    rbx,rdi
  41f837:	mov    rsi,QWORD PTR [rdi+0x18]
  41f83b:	mov    ecx,DWORD PTR [rax+0x10]
  41f83e:	mov    edx,DWORD PTR [rax+0x14]
  41f841:	movzx  r8d,WORD PTR [rdi+0xea]
  41f849:	mov    r9d,DWORD PTR [rax+0x18]
  41f84d:	call   41f6a0 <flatcc_builder_create_vector@@Base>
  41f852:	mov    ebp,eax
  41f854:	test   eax,eax
  41f856:	je     41f8c1 <flatcc_builder_end_vector@@Base+0xa1>
  41f858:	mov    rdi,QWORD PTR [rbx+0x18]
  41f85c:	mov    edx,DWORD PTR [rbx+0x20]
  41f85f:	xor    esi,esi
  41f861:	call   406080 <memset@plt>
  41f866:	mov    rax,QWORD PTR [rbx+0x30]
  41f86a:	mov    ecx,DWORD PTR [rax+0x8]
  41f86d:	mov    DWORD PTR [rbx+0x20],ecx
  41f870:	mov    ecx,DWORD PTR [rax]
  41f872:	mov    DWORD PTR [rbx+0x28],ecx
  41f875:	mov    edx,DWORD PTR [rax+0x4]
  41f878:	mov    rsi,rcx
  41f87b:	add    rsi,QWORD PTR [rbx+0x68]
  41f87f:	mov    QWORD PTR [rbx+0x18],rsi
  41f883:	mov    esi,DWORD PTR [rbx+0x70]
  41f886:	sub    esi,ecx
  41f888:	cmp    esi,edx
  41f88a:	cmova  esi,edx
  41f88d:	mov    DWORD PTR [rbx+0x24],esi
  41f890:	movzx  ecx,WORD PTR [rbx+0xea]
  41f897:	cmp    WORD PTR [rbx+0xe8],cx
  41f89e:	jae    41f8a7 <flatcc_builder_end_vector@@Base+0x87>
  41f8a0:	mov    WORD PTR [rbx+0xe8],cx
  41f8a7:	movzx  ecx,WORD PTR [rax+0xc]
  41f8ab:	mov    WORD PTR [rbx+0xea],cx
  41f8b2:	add    rax,0xffffffffffffffdc
  41f8b6:	mov    QWORD PTR [rbx+0x30],rax
  41f8ba:	add    DWORD PTR [rbx+0x104],0xffffffff
  41f8c1:	mov    eax,ebp
  41f8c3:	add    rsp,0x8
  41f8c7:	pop    rbx
  41f8c8:	pop    rbp
  41f8c9:	ret    
  41f8ca:	lea    rdi,[rip+0x1788e]        # 43715f <flatcc_builder_padding_base@@Base+0x5bf>
  41f8d1:	lea    rsi,[rip+0x1754a]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41f8d8:	lea    rcx,[rip+0x17f65]        # 437844 <flatcc_builder_padding_base@@Base+0xca4>
  41f8df:	mov    edx,0x578
  41f8e4:	call   406070 <__assert_fail@plt>
  41f8e9:	nop    DWORD PTR [rax+0x0]

000000000041f8f0 <flatcc_builder_vector_count@@Base>:
  41f8f0:	mov    rax,QWORD PTR [rdi+0x30]
  41f8f4:	mov    eax,DWORD PTR [rax+0x14]
  41f8f7:	ret    
  41f8f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f900 <flatcc_builder_vector_edit@@Base>:
  41f900:	mov    rax,QWORD PTR [rdi+0x18]
  41f904:	ret    
  41f905:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f90f:	nop

000000000041f910 <flatcc_builder_create_offset_vector_direct@@Base>:
  41f910:	xor    ecx,ecx
  41f912:	jmp    41f920 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41f914:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f91e:	xchg   ax,ax
  41f920:	push   r14
  41f922:	push   rbx
  41f923:	sub    rsp,0x98
  41f92a:	mov    r10,rdx
  41f92d:	xor    ebx,ebx
  41f92f:	test   r10d,0xc0000000
  41f936:	jne    41fa8a <flatcc_builder_create_offset_vector_direct@@Base+0x17a>
  41f93c:	mov    r14,rdi
  41f93f:	movzx  edx,WORD PTR [rdi+0xe8]
  41f946:	cmp    edx,0x3
  41f949:	ja     41f955 <flatcc_builder_create_offset_vector_direct@@Base+0x45>
  41f94b:	mov    WORD PTR [r14+0xe8],0x4
  41f955:	lea    r8d,[r10*4+0x0]
  41f95d:	mov    DWORD PTR [rsp+0x4],r10d
  41f962:	mov    ebx,DWORD PTR [r14+0xf0]
  41f969:	mov    r9d,ebx
  41f96c:	and    r9d,0x3
  41f970:	mov    QWORD PTR [rsp+0x8],0x4
  41f979:	lea    rdx,[rsp+0x4]
  41f97e:	mov    QWORD PTR [rsp+0x18],rdx
  41f983:	mov    QWORD PTR [rsp+0x20],0x4
  41f98c:	mov    DWORD PTR [rsp+0x10],0x1
  41f994:	test   r8d,r8d
  41f997:	je     41fa97 <flatcc_builder_create_offset_vector_direct@@Base+0x187>
  41f99d:	mov    edx,r8d
  41f9a0:	lea    r8,[rdx+0x4]
  41f9a4:	mov    QWORD PTR [rsp+0x8],r8
  41f9a9:	mov    QWORD PTR [rsp+0x28],rsi
  41f9ae:	mov    QWORD PTR [rsp+0x30],rdx
  41f9b3:	mov    DWORD PTR [rsp+0x10],0x2
  41f9bb:	mov    edx,0x2
  41f9c0:	test   r9d,r9d
  41f9c3:	je     41f9eb <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  41f9c5:	add    r8,r9
  41f9c8:	mov    QWORD PTR [rsp+0x8],r8
  41f9cd:	mov    edi,edx
  41f9cf:	shl    rdi,0x4
  41f9d3:	lea    rax,[rip+0x171c6]        # 436ba0 <flatcc_builder_padding_base@@Base>
  41f9da:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  41f9df:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  41f9e4:	add    edx,0x1
  41f9e7:	mov    DWORD PTR [rsp+0x10],edx
  41f9eb:	test   r10d,r10d
  41f9ee:	je     41fa46 <flatcc_builder_create_offset_vector_direct@@Base+0x136>
  41f9f0:	mov    edi,0xfffffffc
  41f9f5:	sub    edi,ebx
  41f9f7:	add    edi,r8d
  41f9fa:	mov    r9d,r10d
  41f9fd:	xor    ebx,ebx
  41f9ff:	nop
  41fa00:	mov    eax,DWORD PTR [rsi+rbx*4]
  41fa03:	test   eax,eax
  41fa05:	je     41fa20 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
  41fa07:	add    eax,edi
  41fa09:	mov    DWORD PTR [rsi+rbx*4],eax
  41fa0c:	test   rcx,rcx
  41fa0f:	je     41fa33 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  41fa11:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41fa15:	jne    41fa33 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  41fa17:	jmp    41fab0 <flatcc_builder_create_offset_vector_direct@@Base+0x1a0>
  41fa1c:	nop    DWORD PTR [rax+0x0]
  41fa20:	test   rcx,rcx
  41fa23:	je     41facf <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  41fa29:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41fa2d:	jne    41faee <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  41fa33:	add    rbx,0x1
  41fa37:	add    edi,0xfffffffc
  41fa3a:	cmp    rbx,r9
  41fa3d:	jb     41fa00 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41fa3f:	mov    ebx,DWORD PTR [r14+0xf0]
  41fa46:	cmp    r8,0x11
  41fa4a:	setb   al
  41fa4d:	lea    rcx,[r8-0x10]
  41fa51:	shr    rcx,0x20
  41fa55:	sete   cl
  41fa58:	test   r8d,r8d
  41fa5b:	jle    41fb0d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41fa61:	or     al,cl
  41fa63:	je     41fb0d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41fa69:	sub    ebx,r8d
  41fa6c:	mov    rdi,QWORD PTR [r14+0x38]
  41fa70:	lea    rsi,[rsp+0x18]
  41fa75:	mov    ecx,ebx
  41fa77:	call   QWORD PTR [r14+0x48]
  41fa7b:	test   eax,eax
  41fa7d:	jne    41fb2c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  41fa83:	mov    DWORD PTR [r14+0xf0],ebx
  41fa8a:	mov    eax,ebx
  41fa8c:	add    rsp,0x98
  41fa93:	pop    rbx
  41fa94:	pop    r14
  41fa96:	ret    
  41fa97:	mov    edx,0x1
  41fa9c:	mov    r8d,0x4
  41faa2:	test   r9d,r9d
  41faa5:	jne    41f9c5 <flatcc_builder_create_offset_vector_direct@@Base+0xb5>
  41faab:	jmp    41f9eb <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  41fab0:	lea    rdi,[rip+0x1851f]        # 437fd6 <flatcc_builder_padding_base@@Base+0x1436>
  41fab7:	lea    rsi,[rip+0x17364]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fabe:	lea    rcx,[rip+0x1851f]        # 437fe4 <flatcc_builder_padding_base@@Base+0x1444>
  41fac5:	mov    edx,0x5b1
  41faca:	call   406070 <__assert_fail@plt>
  41facf:	lea    rdi,[rip+0x1850c]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41fad6:	lea    rsi,[rip+0x17345]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fadd:	lea    rcx,[rip+0x18500]        # 437fe4 <flatcc_builder_padding_base@@Base+0x1444>
  41fae4:	mov    edx,0x5b7
  41fae9:	call   406070 <__assert_fail@plt>
  41faee:	lea    rdi,[rip+0x18572]        # 438067 <flatcc_builder_padding_base@@Base+0x14c7>
  41faf5:	lea    rsi,[rip+0x17326]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fafc:	lea    rcx,[rip+0x184e1]        # 437fe4 <flatcc_builder_padding_base@@Base+0x1444>
  41fb03:	mov    edx,0x5b5
  41fb08:	call   406070 <__assert_fail@plt>
  41fb0d:	lea    rdi,[rip+0x184ce]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41fb14:	lea    rsi,[rip+0x17307]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fb1b:	lea    rcx,[rip+0x1837f]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41fb22:	mov    edx,0x287
  41fb27:	call   406070 <__assert_fail@plt>
  41fb2c:	lea    rdi,[rip+0x184af]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41fb33:	lea    rsi,[rip+0x172e8]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fb3a:	lea    rcx,[rip+0x18360]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  41fb41:	mov    edx,0x28b
  41fb46:	call   406070 <__assert_fail@plt>
  41fb4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041fb50 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41fb50:	push   rbp
  41fb51:	push   rbx
  41fb52:	push   rax
  41fb53:	mov    rcx,QWORD PTR [rdi+0x30]
  41fb57:	movzx  edx,WORD PTR [rcx+0xe]
  41fb5b:	cmp    edx,0x5
  41fb5e:	jne    41fbf1 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa1>
  41fb64:	mov    rax,rsi
  41fb67:	mov    rbx,rdi
  41fb6a:	mov    rsi,QWORD PTR [rdi+0x18]
  41fb6e:	mov    edx,DWORD PTR [rcx+0x14]
  41fb71:	mov    rcx,rax
  41fb74:	call   41f920 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41fb79:	mov    ebp,eax
  41fb7b:	test   eax,eax
  41fb7d:	je     41fbe8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
  41fb7f:	mov    rdi,QWORD PTR [rbx+0x18]
  41fb83:	mov    edx,DWORD PTR [rbx+0x20]
  41fb86:	xor    esi,esi
  41fb88:	call   406080 <memset@plt>
  41fb8d:	mov    rax,QWORD PTR [rbx+0x30]
  41fb91:	mov    ecx,DWORD PTR [rax+0x8]
  41fb94:	mov    DWORD PTR [rbx+0x20],ecx
  41fb97:	mov    ecx,DWORD PTR [rax]
  41fb99:	mov    DWORD PTR [rbx+0x28],ecx
  41fb9c:	mov    edx,DWORD PTR [rax+0x4]
  41fb9f:	mov    rsi,rcx
  41fba2:	add    rsi,QWORD PTR [rbx+0x68]
  41fba6:	mov    QWORD PTR [rbx+0x18],rsi
  41fbaa:	mov    esi,DWORD PTR [rbx+0x70]
  41fbad:	sub    esi,ecx
  41fbaf:	cmp    esi,edx
  41fbb1:	cmova  esi,edx
  41fbb4:	mov    DWORD PTR [rbx+0x24],esi
  41fbb7:	movzx  ecx,WORD PTR [rbx+0xea]
  41fbbe:	cmp    WORD PTR [rbx+0xe8],cx
  41fbc5:	jae    41fbce <flatcc_builder_end_offset_vector_for_unions@@Base+0x7e>
  41fbc7:	mov    WORD PTR [rbx+0xe8],cx
  41fbce:	movzx  ecx,WORD PTR [rax+0xc]
  41fbd2:	mov    WORD PTR [rbx+0xea],cx
  41fbd9:	add    rax,0xffffffffffffffdc
  41fbdd:	mov    QWORD PTR [rbx+0x30],rax
  41fbe1:	add    DWORD PTR [rbx+0x104],0xffffffff
  41fbe8:	mov    eax,ebp
  41fbea:	add    rsp,0x8
  41fbee:	pop    rbx
  41fbef:	pop    rbp
  41fbf0:	ret    
  41fbf1:	lea    rdi,[rip+0x17660]        # 437258 <flatcc_builder_padding_base@@Base+0x6b8>
  41fbf8:	lea    rsi,[rip+0x17223]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fbff:	lea    rcx,[rip+0x17ccb]        # 4378d1 <flatcc_builder_padding_base@@Base+0xd31>
  41fc06:	mov    edx,0x5d5
  41fc0b:	call   406070 <__assert_fail@plt>

000000000041fc10 <flatcc_builder_offset_vector_edit@@Base>:
  41fc10:	mov    rax,QWORD PTR [rdi+0x18]
  41fc14:	ret    
  41fc15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc1f:	nop

000000000041fc20 <flatcc_builder_offset_vector_count@@Base>:
  41fc20:	mov    rax,QWORD PTR [rdi+0x30]
  41fc24:	mov    eax,DWORD PTR [rax+0x14]
  41fc27:	ret    
  41fc28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041fc30 <flatcc_builder_table_add_union@@Base>:
  41fc30:	push   rbp
  41fc31:	push   r15
  41fc33:	push   r14
  41fc35:	push   rbx
  41fc36:	push   rax
  41fc37:	mov    rax,QWORD PTR [rdi+0x30]
  41fc3b:	movzx  eax,WORD PTR [rax+0xe]
  41fc3f:	cmp    eax,0x3
  41fc42:	jne    41fca1 <flatcc_builder_table_add_union@@Base+0x71>
  41fc44:	mov    r14,rdx
  41fc47:	mov    ebp,esi
  41fc49:	mov    r15,rdi
  41fc4c:	mov    rbx,rdx
  41fc4f:	shr    rbx,0x20
  41fc53:	test   r14b,r14b
  41fc56:	jne    41fc5c <flatcc_builder_table_add_union@@Base+0x2c>
  41fc58:	test   ebx,ebx
  41fc5a:	jne    41fcc0 <flatcc_builder_table_add_union@@Base+0x90>
  41fc5c:	test   ebx,ebx
  41fc5e:	je     41fc75 <flatcc_builder_table_add_union@@Base+0x45>
  41fc60:	mov    rdi,r15
  41fc63:	mov    esi,ebp
  41fc65:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  41fc6a:	test   rax,rax
  41fc6d:	je     41fcfe <flatcc_builder_table_add_union@@Base+0xce>
  41fc73:	mov    DWORD PTR [rax],ebx
  41fc75:	add    ebp,0xffffffff
  41fc78:	mov    edx,0x1
  41fc7d:	mov    ecx,0x1
  41fc82:	mov    rdi,r15
  41fc85:	mov    esi,ebp
  41fc87:	call   41fe80 <flatcc_builder_table_add@@Base>
  41fc8c:	test   rax,rax
  41fc8f:	je     41fcdf <flatcc_builder_table_add_union@@Base+0xaf>
  41fc91:	mov    BYTE PTR [rax],r14b
  41fc94:	xor    eax,eax
  41fc96:	add    rsp,0x8
  41fc9a:	pop    rbx
  41fc9b:	pop    r14
  41fc9d:	pop    r15
  41fc9f:	pop    rbp
  41fca0:	ret    
  41fca1:	lea    rdi,[rip+0x179a9]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41fca8:	lea    rsi,[rip+0x17173]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fcaf:	lea    rcx,[rip+0x17c8d]        # 437943 <flatcc_builder_padding_base@@Base+0xda3>
  41fcb6:	mov    edx,0x5ee
  41fcbb:	call   406070 <__assert_fail@plt>
  41fcc0:	lea    rdi,[rip+0x17cd4]        # 43799b <flatcc_builder_padding_base@@Base+0xdfb>
  41fcc7:	lea    rsi,[rip+0x17154]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fcce:	lea    rcx,[rip+0x17c6e]        # 437943 <flatcc_builder_padding_base@@Base+0xda3>
  41fcd5:	mov    edx,0x5ef
  41fcda:	call   406070 <__assert_fail@plt>
  41fcdf:	lea    rdi,[rip+0x17ce1]        # 4379c7 <flatcc_builder_padding_base@@Base+0xe27>
  41fce6:	lea    rsi,[rip+0x17135]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fced:	lea    rcx,[rip+0x17c4f]        # 437943 <flatcc_builder_padding_base@@Base+0xda3>
  41fcf4:	mov    edx,0x5f6
  41fcf9:	call   406070 <__assert_fail@plt>
  41fcfe:	lea    rdi,[rip+0x17cb8]        # 4379bd <flatcc_builder_padding_base@@Base+0xe1d>
  41fd05:	lea    rsi,[rip+0x17116]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fd0c:	lea    rcx,[rip+0x17c30]        # 437943 <flatcc_builder_padding_base@@Base+0xda3>
  41fd13:	mov    edx,0x5f2
  41fd18:	call   406070 <__assert_fail@plt>
  41fd1d:	nop    DWORD PTR [rax]

000000000041fd20 <flatcc_builder_table_add_offset@@Base>:
  41fd20:	push   rbp
  41fd21:	push   r15
  41fd23:	push   r14
  41fd25:	push   rbx
  41fd26:	push   rax
  41fd27:	mov    rax,QWORD PTR [rdi+0x30]
  41fd2b:	movzx  eax,WORD PTR [rax+0xe]
  41fd2f:	cmp    eax,0x3
  41fd32:	jne    41fe1e <flatcc_builder_table_add_offset@@Base+0xfe>
  41fd38:	mov    r14d,esi
  41fd3b:	cmp    esi,0x7ffd
  41fd41:	jae    41fe3d <flatcc_builder_table_add_offset@@Base+0x11d>
  41fd47:	mov    rbx,rdi
  41fd4a:	mov    rax,QWORD PTR [rdi+0x8]
  41fd4e:	movsxd rcx,r14d
  41fd51:	cmp    WORD PTR [rax+rcx*2],0x0
  41fd56:	jne    41fe5c <flatcc_builder_table_add_offset@@Base+0x13c>
  41fd5c:	mov    ecx,DWORD PTR [rbx+0x14]
  41fd5f:	xor    ecx,r14d
  41fd62:	imul   ecx,ecx,0x9e3779b1
  41fd68:	xor    ecx,0x4
  41fd6b:	imul   ecx,ecx,0x9e3779b1
  41fd71:	mov    DWORD PTR [rbx+0x14],ecx
  41fd74:	mov    ebp,DWORD PTR [rbx+0x20]
  41fd77:	mov    ecx,DWORD PTR [rbx+0x24]
  41fd7a:	add    ebp,0x3
  41fd7d:	and    ebp,0xfffffffc
  41fd80:	lea    r15,[rbp+0x4]
  41fd84:	mov    DWORD PTR [rbx+0x20],r15d
  41fd88:	cmp    ecx,r15d
  41fd8b:	jae    41fde7 <flatcc_builder_table_add_offset@@Base+0xc7>
  41fd8d:	lea    eax,[rbp+0x4]
  41fd90:	lea    rsi,[rbx+0x68]
  41fd94:	mov    rdi,QWORD PTR [rbx+0x40]
  41fd98:	mov    edx,DWORD PTR [rbx+0x28]
  41fd9b:	add    rdx,rax
  41fd9e:	mov    ecx,0x1
  41fda3:	mov    r8d,0x1
  41fda9:	call   QWORD PTR [rbx+0x50]
  41fdac:	test   eax,eax
  41fdae:	je     41fdb4 <flatcc_builder_table_add_offset@@Base+0x94>
  41fdb0:	xor    ebp,ebp
  41fdb2:	jmp    41fe10 <flatcc_builder_table_add_offset@@Base+0xf0>
  41fdb4:	mov    eax,DWORD PTR [rbx+0x28]
  41fdb7:	mov    rcx,rax
  41fdba:	add    rcx,QWORD PTR [rbx+0x68]
  41fdbe:	mov    QWORD PTR [rbx+0x18],rcx
  41fdc2:	mov    ecx,DWORD PTR [rbx+0x70]
  41fdc5:	sub    ecx,eax
  41fdc7:	cmp    ecx,0xfffc
  41fdcd:	mov    eax,0xfffc
  41fdd2:	cmovb  eax,ecx
  41fdd5:	mov    DWORD PTR [rbx+0x24],eax
  41fdd8:	mov    rax,QWORD PTR [rbx+0x30]
  41fddc:	mov    DWORD PTR [rax+0x4],0xfffc
  41fde3:	mov    rax,QWORD PTR [rbx+0x8]
  41fde7:	movzx  ecx,r14w
  41fdeb:	mov    WORD PTR [rax+rcx*2],r15w
  41fdf0:	cmp    WORD PTR [rbx+0x10],cx
  41fdf4:	ja     41fdff <flatcc_builder_table_add_offset@@Base+0xdf>
  41fdf6:	add    r14d,0x1
  41fdfa:	mov    WORD PTR [rbx+0x10],r14w
  41fdff:	mov    rax,QWORD PTR [rbx]
  41fe02:	lea    rcx,[rax+0x2]
  41fe06:	mov    QWORD PTR [rbx],rcx
  41fe09:	mov    WORD PTR [rax],bp
  41fe0c:	add    rbp,QWORD PTR [rbx+0x18]
  41fe10:	mov    rax,rbp
  41fe13:	add    rsp,0x8
  41fe17:	pop    rbx
  41fe18:	pop    r14
  41fe1a:	pop    r15
  41fe1c:	pop    rbp
  41fe1d:	ret    
  41fe1e:	lea    rdi,[rip+0x1782c]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41fe25:	lea    rsi,[rip+0x16ff6]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fe2c:	lea    rcx,[rip+0x17f12]        # 437d45 <flatcc_builder_padding_base@@Base+0x11a5>
  41fe33:	mov    edx,0x713
  41fe38:	call   406070 <__assert_fail@plt>
  41fe3d:	lea    rdi,[rip+0x17e81]        # 437cc5 <flatcc_builder_padding_base@@Base+0x1125>
  41fe44:	lea    rsi,[rip+0x16fd7]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fe4b:	lea    rcx,[rip+0x17ef3]        # 437d45 <flatcc_builder_padding_base@@Base+0x11a5>
  41fe52:	mov    edx,0x714
  41fe57:	call   406070 <__assert_fail@plt>
  41fe5c:	lea    rdi,[rip+0x1817f]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41fe63:	lea    rsi,[rip+0x16fb8]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41fe6a:	lea    rcx,[rip+0x17ed4]        # 437d45 <flatcc_builder_padding_base@@Base+0x11a5>
  41fe71:	mov    edx,0x71b
  41fe76:	call   406070 <__assert_fail@plt>
  41fe7b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041fe80 <flatcc_builder_table_add@@Base>:
  41fe80:	push   rbp
  41fe81:	push   r14
  41fe83:	push   rbx
  41fe84:	mov    rax,QWORD PTR [rdi+0x30]
  41fe88:	movzx  eax,WORD PTR [rax+0xe]
  41fe8c:	cmp    eax,0x3
  41fe8f:	jne    41ff7c <flatcc_builder_table_add@@Base+0xfc>
  41fe95:	mov    r14d,esi
  41fe98:	cmp    esi,0x7ffd
  41fe9e:	jae    41ff9b <flatcc_builder_table_add@@Base+0x11b>
  41fea4:	mov    rbx,rdi
  41fea7:	cmp    WORD PTR [rdi+0xea],cx
  41feae:	jae    41feb7 <flatcc_builder_table_add@@Base+0x37>
  41feb0:	mov    WORD PTR [rbx+0xea],cx
  41feb7:	mov    rsi,QWORD PTR [rbx+0x8]
  41febb:	movsxd rax,r14d
  41febe:	cmp    WORD PTR [rsi+rax*2],0x0
  41fec3:	jne    41ffba <flatcc_builder_table_add@@Base+0x13a>
  41fec9:	mov    eax,DWORD PTR [rbx+0x14]
  41fecc:	xor    eax,r14d
  41fecf:	imul   eax,eax,0x9e3779b1
  41fed5:	xor    eax,edx
  41fed7:	imul   eax,eax,0x9e3779b1
  41fedd:	mov    DWORD PTR [rbx+0x14],eax
  41fee0:	mov    eax,DWORD PTR [rbx+0x20]
  41fee3:	movzx  ebp,cx
  41fee6:	lea    eax,[rax+rbp*1]
  41fee9:	add    eax,0xffffffff
  41feec:	neg    ebp
  41feee:	and    ebp,eax
  41fef0:	add    edx,ebp
  41fef2:	mov    DWORD PTR [rbx+0x20],edx
  41fef5:	cmp    edx,DWORD PTR [rbx+0x24]
  41fef8:	jb     41ff57 <flatcc_builder_table_add@@Base+0xd7>
  41fefa:	add    edx,0x1
  41fefd:	lea    rsi,[rbx+0x68]
  41ff01:	mov    rdi,QWORD PTR [rbx+0x40]
  41ff05:	mov    eax,DWORD PTR [rbx+0x28]
  41ff08:	add    rax,rdx
  41ff0b:	mov    ecx,0x1
  41ff10:	mov    r8d,0x1
  41ff16:	mov    rdx,rax
  41ff19:	call   QWORD PTR [rbx+0x50]
  41ff1c:	test   eax,eax
  41ff1e:	je     41ff24 <flatcc_builder_table_add@@Base+0xa4>
  41ff20:	xor    eax,eax
  41ff22:	jmp    41ff77 <flatcc_builder_table_add@@Base+0xf7>
  41ff24:	mov    eax,DWORD PTR [rbx+0x28]
  41ff27:	mov    rcx,rax
  41ff2a:	add    rcx,QWORD PTR [rbx+0x68]
  41ff2e:	mov    QWORD PTR [rbx+0x18],rcx
  41ff32:	mov    ecx,DWORD PTR [rbx+0x70]
  41ff35:	sub    ecx,eax
  41ff37:	cmp    ecx,0xfffc
  41ff3d:	mov    eax,0xfffc
  41ff42:	cmovb  eax,ecx
  41ff45:	mov    DWORD PTR [rbx+0x24],eax
  41ff48:	mov    rax,QWORD PTR [rbx+0x30]
  41ff4c:	mov    DWORD PTR [rax+0x4],0xfffc
  41ff53:	mov    rsi,QWORD PTR [rbx+0x8]
  41ff57:	mov    eax,ebp
  41ff59:	add    ebp,0x4
  41ff5c:	movzx  ecx,r14w
  41ff60:	mov    WORD PTR [rsi+rcx*2],bp
  41ff64:	cmp    WORD PTR [rbx+0x10],cx
  41ff68:	ja     41ff73 <flatcc_builder_table_add@@Base+0xf3>
  41ff6a:	add    r14d,0x1
  41ff6e:	mov    WORD PTR [rbx+0x10],r14w
  41ff73:	add    rax,QWORD PTR [rbx+0x18]
  41ff77:	pop    rbx
  41ff78:	pop    r14
  41ff7a:	pop    rbp
  41ff7b:	ret    
  41ff7c:	lea    rdi,[rip+0x176ce]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  41ff83:	lea    rsi,[rip+0x16e98]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ff8a:	lea    rcx,[rip+0x17cea]        # 437c7b <flatcc_builder_padding_base@@Base+0x10db>
  41ff91:	mov    edx,0x6ed
  41ff96:	call   406070 <__assert_fail@plt>
  41ff9b:	lea    rdi,[rip+0x17d23]        # 437cc5 <flatcc_builder_padding_base@@Base+0x1125>
  41ffa2:	lea    rsi,[rip+0x16e79]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ffa9:	lea    rcx,[rip+0x17ccb]        # 437c7b <flatcc_builder_padding_base@@Base+0x10db>
  41ffb0:	mov    edx,0x6ee
  41ffb5:	call   406070 <__assert_fail@plt>
  41ffba:	lea    rdi,[rip+0x18021]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  41ffc1:	lea    rsi,[rip+0x16e5a]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  41ffc8:	lea    rcx,[rip+0x17cac]        # 437c7b <flatcc_builder_padding_base@@Base+0x10db>
  41ffcf:	mov    edx,0x6f8
  41ffd4:	call   406070 <__assert_fail@plt>
  41ffd9:	nop    DWORD PTR [rax+0x0]

000000000041ffe0 <flatcc_builder_table_add_union_vector@@Base>:
  41ffe0:	push   r15
  41ffe2:	push   r14
  41ffe4:	push   r12
  41ffe6:	push   rbx
  41ffe7:	push   rax
  41ffe8:	mov    rax,QWORD PTR [rdi+0x30]
  41ffec:	movzx  eax,WORD PTR [rax+0xe]
  41fff0:	cmp    eax,0x3
  41fff3:	jne    420049 <flatcc_builder_table_add_union_vector@@Base+0x69>
  41fff5:	mov    rbx,rdx
  41fff8:	mov    r12,rdx
  41fffb:	shr    r12,0x20
  41ffff:	test   ebx,ebx
  420001:	sete   al
  420004:	test   r12d,r12d
  420007:	sete   cl
  42000a:	cmp    al,cl
  42000c:	jne    420068 <flatcc_builder_table_add_union_vector@@Base+0x88>
  42000e:	test   ebx,ebx
  420010:	je     42003b <flatcc_builder_table_add_union_vector@@Base+0x5b>
  420012:	mov    r14d,esi
  420015:	mov    r15,rdi
  420018:	lea    esi,[r14-0x1]
  42001c:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  420021:	test   rax,rax
  420024:	je     420087 <flatcc_builder_table_add_union_vector@@Base+0xa7>
  420026:	mov    DWORD PTR [rax],ebx
  420028:	mov    rdi,r15
  42002b:	mov    esi,r14d
  42002e:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  420033:	test   rax,rax
  420036:	je     4200a6 <flatcc_builder_table_add_union_vector@@Base+0xc6>
  420038:	mov    DWORD PTR [rax],r12d
  42003b:	xor    eax,eax
  42003d:	add    rsp,0x8
  420041:	pop    rbx
  420042:	pop    r12
  420044:	pop    r14
  420046:	pop    r15
  420048:	ret    
  420049:	lea    rdi,[rip+0x17601]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  420050:	lea    rsi,[rip+0x16dcb]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420057:	lea    rcx,[rip+0x17975]        # 4379d3 <flatcc_builder_padding_base@@Base+0xe33>
  42005e:	mov    edx,0x600
  420063:	call   406070 <__assert_fail@plt>
  420068:	lea    rdi,[rip+0x179c7]        # 437a36 <flatcc_builder_padding_base@@Base+0xe96>
  42006f:	lea    rsi,[rip+0x16dac]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420076:	lea    rcx,[rip+0x17956]        # 4379d3 <flatcc_builder_padding_base@@Base+0xe33>
  42007d:	mov    edx,0x601
  420082:	call   406070 <__assert_fail@plt>
  420087:	lea    rdi,[rip+0x1792f]        # 4379bd <flatcc_builder_padding_base@@Base+0xe1d>
  42008e:	lea    rsi,[rip+0x16d8d]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420095:	lea    rcx,[rip+0x17937]        # 4379d3 <flatcc_builder_padding_base@@Base+0xe33>
  42009c:	mov    edx,0x604
  4200a1:	call   406070 <__assert_fail@plt>
  4200a6:	lea    rdi,[rip+0x17910]        # 4379bd <flatcc_builder_padding_base@@Base+0xe1d>
  4200ad:	lea    rsi,[rip+0x16d6e]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4200b4:	lea    rcx,[rip+0x17918]        # 4379d3 <flatcc_builder_padding_base@@Base+0xe33>
  4200bb:	mov    edx,0x608
  4200c0:	call   406070 <__assert_fail@plt>
  4200c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200cf:	nop

00000000004200d0 <flatcc_builder_create_union_vector@@Base>:
  4200d0:	push   r15
  4200d2:	push   r14
  4200d4:	push   r13
  4200d6:	push   r12
  4200d8:	push   rbx
  4200d9:	mov    r14,rdx
  4200dc:	mov    r15,rsi
  4200df:	mov    rbx,rdi
  4200e2:	mov    esi,0x4
  4200e7:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  4200ec:	test   eax,eax
  4200ee:	je     420100 <flatcc_builder_create_union_vector@@Base+0x30>
  4200f0:	xor    r14d,r14d
  4200f3:	mov    rax,r14
  4200f6:	pop    rbx
  4200f7:	pop    r12
  4200f9:	pop    r13
  4200fb:	pop    r14
  4200fd:	pop    r15
  4200ff:	ret    
  420100:	mov    rax,QWORD PTR [rbx+0x30]
  420104:	mov    DWORD PTR [rax+0x10],0x4
  42010b:	mov    rax,QWORD PTR [rbx+0x30]
  42010f:	mov    DWORD PTR [rax+0x14],0x0
  420116:	mov    rax,QWORD PTR [rbx+0x30]
  42011a:	mov    WORD PTR [rax+0xe],0x5
  420120:	mov    ecx,DWORD PTR [rbx+0x28]
  420123:	mov    edx,DWORD PTR [rbx+0x70]
  420126:	sub    edx,ecx
  420128:	add    rcx,QWORD PTR [rbx+0x68]
  42012c:	mov    QWORD PTR [rbx+0x18],rcx
  420130:	cmp    edx,0xfffffffc
  420133:	mov    ecx,0xfffffffc
  420138:	cmovb  ecx,edx
  42013b:	mov    DWORD PTR [rbx+0x24],ecx
  42013e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420145:	mov    ecx,DWORD PTR [rax+0x14]
  420148:	add    ecx,r14d
  42014b:	jb     4203ba <flatcc_builder_create_union_vector@@Base+0x2ea>
  420151:	cmp    ecx,0x40000000
  420157:	jae    4203ba <flatcc_builder_create_union_vector@@Base+0x2ea>
  42015d:	mov    DWORD PTR [rax+0x14],ecx
  420160:	mov    r12d,DWORD PTR [rbx+0x20]
  420164:	mov    eax,DWORD PTR [rbx+0x24]
  420167:	lea    ecx,[r12+r14*4]
  42016b:	mov    DWORD PTR [rbx+0x20],ecx
  42016e:	cmp    ecx,eax
  420170:	jae    420180 <flatcc_builder_create_union_vector@@Base+0xb0>
  420172:	mov    rsi,QWORD PTR [rbx+0x18]
  420176:	add    r12,rsi
  420179:	jne    4201dc <flatcc_builder_create_union_vector@@Base+0x10c>
  42017b:	jmp    4200f0 <flatcc_builder_create_union_vector@@Base+0x20>
  420180:	add    ecx,0x1
  420183:	lea    rsi,[rbx+0x68]
  420187:	mov    rdi,QWORD PTR [rbx+0x40]
  42018b:	mov    edx,DWORD PTR [rbx+0x28]
  42018e:	add    rdx,rcx
  420191:	mov    ecx,0x1
  420196:	mov    r8d,0x1
  42019c:	call   QWORD PTR [rbx+0x50]
  42019f:	test   eax,eax
  4201a1:	jne    4200f0 <flatcc_builder_create_union_vector@@Base+0x20>
  4201a7:	mov    eax,DWORD PTR [rbx+0x28]
  4201aa:	mov    rsi,rax
  4201ad:	add    rsi,QWORD PTR [rbx+0x68]
  4201b1:	mov    QWORD PTR [rbx+0x18],rsi
  4201b5:	mov    ecx,DWORD PTR [rbx+0x70]
  4201b8:	sub    ecx,eax
  4201ba:	cmp    ecx,0xfffffffc
  4201bd:	mov    eax,0xfffffffc
  4201c2:	cmovb  eax,ecx
  4201c5:	mov    DWORD PTR [rbx+0x24],eax
  4201c8:	mov    rcx,QWORD PTR [rbx+0x30]
  4201cc:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4201d3:	add    r12,rsi
  4201d6:	je     4200f0 <flatcc_builder_create_union_vector@@Base+0x20>
  4201dc:	mov    r13d,DWORD PTR [rbx+0x20]
  4201e0:	lea    ecx,[r14+r13*1]
  4201e4:	mov    DWORD PTR [rbx+0x20],ecx
  4201e7:	cmp    ecx,eax
  4201e9:	jb     42023e <flatcc_builder_create_union_vector@@Base+0x16e>
  4201eb:	add    ecx,0x1
  4201ee:	lea    rsi,[rbx+0x68]
  4201f2:	mov    rdi,QWORD PTR [rbx+0x40]
  4201f6:	mov    edx,DWORD PTR [rbx+0x28]
  4201f9:	add    rdx,rcx
  4201fc:	mov    ecx,0x1
  420201:	mov    r8d,0x1
  420207:	call   QWORD PTR [rbx+0x50]
  42020a:	test   eax,eax
  42020c:	jne    4200f0 <flatcc_builder_create_union_vector@@Base+0x20>
  420212:	mov    eax,DWORD PTR [rbx+0x28]
  420215:	mov    rsi,rax
  420218:	add    rsi,QWORD PTR [rbx+0x68]
  42021c:	mov    QWORD PTR [rbx+0x18],rsi
  420220:	mov    ecx,DWORD PTR [rbx+0x70]
  420223:	sub    ecx,eax
  420225:	cmp    ecx,0xfffffffc
  420228:	mov    eax,0xfffffffc
  42022d:	cmovb  eax,ecx
  420230:	mov    DWORD PTR [rbx+0x24],eax
  420233:	mov    rax,QWORD PTR [rbx+0x30]
  420237:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42023e:	mov    r12,rsi
  420241:	add    r12,r13
  420244:	je     4200f0 <flatcc_builder_create_union_vector@@Base+0x20>
  42024a:	test   r14,r14
  42024d:	je     420309 <flatcc_builder_create_union_vector@@Base+0x239>
  420253:	lea    rcx,[r14-0x1]
  420257:	mov    r8d,r14d
  42025a:	and    r8d,0x3
  42025e:	cmp    rcx,0x3
  420262:	jae    420270 <flatcc_builder_create_union_vector@@Base+0x1a0>
  420264:	xor    ecx,ecx
  420266:	test   r8,r8
  420269:	jne    4202d7 <flatcc_builder_create_union_vector@@Base+0x207>
  42026b:	jmp    420309 <flatcc_builder_create_union_vector@@Base+0x239>
  420270:	mov    rdx,r14
  420273:	sub    rdx,r8
  420276:	lea    rdi,[rsi+r13*1]
  42027a:	add    rdi,0x3
  42027e:	xor    ecx,ecx
  420280:	movzx  eax,BYTE PTR [r15+rcx*8]
  420285:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  420289:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  42028e:	mov    DWORD PTR [rsi+rcx*4],eax
  420291:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  420297:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  42029b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  4202a0:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  4202a4:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  4202aa:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  4202ae:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  4202b3:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  4202b7:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  4202bd:	mov    BYTE PTR [rdi+rcx*1],al
  4202c0:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  4202c5:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  4202c9:	add    rcx,0x4
  4202cd:	cmp    rdx,rcx
  4202d0:	jne    420280 <flatcc_builder_create_union_vector@@Base+0x1b0>
  4202d2:	test   r8,r8
  4202d5:	je     420309 <flatcc_builder_create_union_vector@@Base+0x239>
  4202d7:	lea    rdx,[rsi+rcx*4]
  4202db:	lea    rdi,[r15+rcx*8]
  4202df:	add    rdi,0x4
  4202e3:	add    r13,rcx
  4202e6:	add    r13,rsi
  4202e9:	xor    ecx,ecx
  4202eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4202f0:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  4202f5:	mov    BYTE PTR [r13+rcx*1+0x0],al
  4202fa:	mov    eax,DWORD PTR [rdi+rcx*8]
  4202fd:	mov    DWORD PTR [rdx+rcx*4],eax
  420300:	add    rcx,0x1
  420304:	cmp    r8,rcx
  420307:	jne    4202f0 <flatcc_builder_create_union_vector@@Base+0x220>
  420309:	mov    rdi,rbx
  42030c:	mov    rdx,r14
  42030f:	mov    rcx,r12
  420312:	call   41f920 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  420317:	mov    r15d,eax
  42031a:	test   eax,eax
  42031c:	je     420342 <flatcc_builder_create_union_vector@@Base+0x272>
  42031e:	mov    ecx,0x1
  420323:	mov    r8d,0x1
  420329:	mov    r9d,0xffffffff
  42032f:	mov    rdi,rbx
  420332:	mov    rsi,r12
  420335:	mov    rdx,r14
  420338:	call   41f6a0 <flatcc_builder_create_vector@@Base>
  42033d:	mov    r14d,eax
  420340:	jmp    420345 <flatcc_builder_create_union_vector@@Base+0x275>
  420342:	xor    r14d,r14d
  420345:	shl    r15,0x20
  420349:	mov    rdi,QWORD PTR [rbx+0x18]
  42034d:	mov    edx,DWORD PTR [rbx+0x20]
  420350:	xor    esi,esi
  420352:	call   406080 <memset@plt>
  420357:	mov    rax,QWORD PTR [rbx+0x30]
  42035b:	mov    ecx,DWORD PTR [rax+0x8]
  42035e:	mov    DWORD PTR [rbx+0x20],ecx
  420361:	mov    ecx,DWORD PTR [rax]
  420363:	mov    DWORD PTR [rbx+0x28],ecx
  420366:	mov    edx,DWORD PTR [rax+0x4]
  420369:	mov    rsi,rcx
  42036c:	add    rsi,QWORD PTR [rbx+0x68]
  420370:	mov    QWORD PTR [rbx+0x18],rsi
  420374:	mov    esi,DWORD PTR [rbx+0x70]
  420377:	sub    esi,ecx
  420379:	cmp    esi,edx
  42037b:	cmova  esi,edx
  42037e:	mov    DWORD PTR [rbx+0x24],esi
  420381:	movzx  ecx,WORD PTR [rbx+0xea]
  420388:	cmp    WORD PTR [rbx+0xe8],cx
  42038f:	jae    420398 <flatcc_builder_create_union_vector@@Base+0x2c8>
  420391:	mov    WORD PTR [rbx+0xe8],cx
  420398:	or     r14,r15
  42039b:	movzx  ecx,WORD PTR [rax+0xc]
  42039f:	mov    WORD PTR [rbx+0xea],cx
  4203a6:	add    rax,0xffffffffffffffdc
  4203aa:	mov    QWORD PTR [rbx+0x30],rax
  4203ae:	add    DWORD PTR [rbx+0x104],0xffffffff
  4203b5:	jmp    4200f3 <flatcc_builder_create_union_vector@@Base+0x23>
  4203ba:	lea    rdi,[rip+0x17b2a]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  4203c1:	lea    rsi,[rip+0x16a5a]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4203c8:	lea    rcx,[rip+0x17b37]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  4203cf:	mov    edx,0x37c
  4203d4:	call   406070 <__assert_fail@plt>
  4203d9:	nop    DWORD PTR [rax+0x0]

00000000004203e0 <flatcc_builder_create_union_vector_direct@@Base>:
  4203e0:	push   r15
  4203e2:	push   r14
  4203e4:	push   r12
  4203e6:	push   rbx
  4203e7:	push   rax
  4203e8:	mov    r14,rcx
  4203eb:	mov    r15,rsi
  4203ee:	mov    r12,rdi
  4203f1:	mov    rsi,rdx
  4203f4:	mov    rdx,rcx
  4203f7:	mov    rcx,r15
  4203fa:	call   41f920 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4203ff:	mov    ebx,eax
  420401:	test   eax,eax
  420403:	je     420428 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  420405:	mov    ecx,0x1
  42040a:	mov    r8d,0x1
  420410:	mov    r9d,0xffffffff
  420416:	mov    rdi,r12
  420419:	mov    rsi,r15
  42041c:	mov    rdx,r14
  42041f:	call   41f6a0 <flatcc_builder_create_vector@@Base>
  420424:	mov    eax,eax
  420426:	jmp    42042a <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  420428:	xor    eax,eax
  42042a:	shl    rbx,0x20
  42042e:	or     rbx,rax
  420431:	mov    rax,rbx
  420434:	add    rsp,0x8
  420438:	pop    rbx
  420439:	pop    r12
  42043b:	pop    r14
  42043d:	pop    r15
  42043f:	ret    

0000000000420440 <flatcc_builder_start_union_vector@@Base>:
  420440:	push   rbx
  420441:	mov    rbx,rdi
  420444:	mov    esi,0x4
  420449:	call   41d910 <flatcc_builder_start_buffer@@Base+0xe0>
  42044e:	mov    ecx,eax
  420450:	mov    eax,0xffffffff
  420455:	test   ecx,ecx
  420457:	je     42045b <flatcc_builder_start_union_vector@@Base+0x1b>
  420459:	pop    rbx
  42045a:	ret    
  42045b:	mov    rax,QWORD PTR [rbx+0x30]
  42045f:	mov    DWORD PTR [rax+0x10],0x8
  420466:	mov    rax,QWORD PTR [rbx+0x30]
  42046a:	mov    DWORD PTR [rax+0x14],0x0
  420471:	mov    rax,QWORD PTR [rbx+0x30]
  420475:	mov    WORD PTR [rax+0xe],0x7
  42047b:	mov    ecx,DWORD PTR [rbx+0x28]
  42047e:	mov    edx,DWORD PTR [rbx+0x70]
  420481:	sub    edx,ecx
  420483:	add    rcx,QWORD PTR [rbx+0x68]
  420487:	mov    QWORD PTR [rbx+0x18],rcx
  42048b:	cmp    edx,0xfffffffc
  42048e:	mov    ecx,0xfffffffc
  420493:	cmovb  ecx,edx
  420496:	mov    DWORD PTR [rbx+0x24],ecx
  420499:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4204a0:	xor    eax,eax
  4204a2:	pop    rbx
  4204a3:	ret    
  4204a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204ae:	xchg   ax,ax

00000000004204b0 <flatcc_builder_end_union_vector@@Base>:
  4204b0:	push   rbp
  4204b1:	push   r15
  4204b3:	push   r14
  4204b5:	push   r13
  4204b7:	push   r12
  4204b9:	push   rbx
  4204ba:	push   rax
  4204bb:	mov    rax,QWORD PTR [rdi+0x30]
  4204bf:	movzx  ecx,WORD PTR [rax+0xe]
  4204c3:	cmp    ecx,0x7
  4204c6:	jne    4208c6 <flatcc_builder_end_union_vector@@Base+0x416>
  4204cc:	mov    r13,rdi
  4204cf:	mov    r14d,DWORD PTR [rax+0x14]
  4204d3:	lea    eax,[r14+r14*4]
  4204d7:	mov    r12d,DWORD PTR [rdi+0x20]
  4204db:	add    eax,r12d
  4204de:	mov    DWORD PTR [rdi+0x20],eax
  4204e1:	cmp    eax,DWORD PTR [rdi+0x24]
  4204e4:	jae    4204ec <flatcc_builder_end_union_vector@@Base+0x3c>
  4204e6:	mov    r8,QWORD PTR [r13+0x18]
  4204ea:	jmp    420544 <flatcc_builder_end_union_vector@@Base+0x94>
  4204ec:	add    eax,0x1
  4204ef:	lea    rsi,[r13+0x68]
  4204f3:	mov    rdi,QWORD PTR [r13+0x40]
  4204f7:	mov    edx,DWORD PTR [r13+0x28]
  4204fb:	add    rdx,rax
  4204fe:	mov    ecx,0x1
  420503:	mov    r8d,0x1
  420509:	call   QWORD PTR [r13+0x50]
  42050d:	test   eax,eax
  42050f:	jne    420686 <flatcc_builder_end_union_vector@@Base+0x1d6>
  420515:	mov    eax,DWORD PTR [r13+0x28]
  420519:	mov    r8,rax
  42051c:	add    r8,QWORD PTR [r13+0x68]
  420520:	mov    QWORD PTR [r13+0x18],r8
  420524:	mov    ecx,DWORD PTR [r13+0x70]
  420528:	sub    ecx,eax
  42052a:	cmp    ecx,0xfffffffc
  42052d:	mov    eax,0xfffffffc
  420532:	cmovb  eax,ecx
  420535:	mov    DWORD PTR [r13+0x24],eax
  420539:	mov    rax,QWORD PTR [r13+0x30]
  42053d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420544:	mov    rsi,r8
  420547:	add    rsi,r12
  42054a:	je     420686 <flatcc_builder_end_union_vector@@Base+0x1d6>
  420550:	lea    r15,[rsi+r14*4]
  420554:	test   r14d,r14d
  420557:	je     42064a <flatcc_builder_end_union_vector@@Base+0x19a>
  42055d:	cmp    r14d,0x9
  420561:	jae    42071a <flatcc_builder_end_union_vector@@Base+0x26a>
  420567:	xor    r9d,r9d
  42056a:	mov    r11d,r14d
  42056d:	sub    r11d,r9d
  420570:	mov    r10,r9
  420573:	not    r10
  420576:	add    r10,r14
  420579:	and    r11,0x3
  42057d:	je     4205c2 <flatcc_builder_end_union_vector@@Base+0x112>
  42057f:	mov    rdx,r9
  420582:	neg    rdx
  420585:	lea    rbp,[r12+r9*4]
  420589:	add    rbp,r8
  42058c:	lea    rbx,[r8+r9*8]
  420590:	add    rbx,0x4
  420594:	lea    rax,[r9+r14*4]
  420598:	add    rax,r12
  42059b:	add    rax,r8
  42059e:	xor    edi,edi
  4205a0:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  4205a5:	mov    BYTE PTR [rax+rdi*1],cl
  4205a8:	mov    ecx,DWORD PTR [rbx+rdi*8]
  4205ab:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  4205af:	add    rdx,0xffffffffffffffff
  4205b3:	add    rdi,0x1
  4205b7:	cmp    r11,rdi
  4205ba:	jne    4205a0 <flatcc_builder_end_union_vector@@Base+0xf0>
  4205bc:	neg    rdx
  4205bf:	mov    r9,rdx
  4205c2:	cmp    r10,0x3
  4205c6:	jb     42064a <flatcc_builder_end_union_vector@@Base+0x19a>
  4205cc:	mov    rbp,r14
  4205cf:	sub    rbp,r9
  4205d2:	lea    rcx,[r12+r9*4]
  4205d6:	lea    rdx,[r8+rcx*1]
  4205da:	add    rdx,0xc
  4205de:	lea    rdi,[r8+r9*8]
  4205e2:	add    rdi,0x1c
  4205e6:	lea    rcx,[r9+r14*4]
  4205ea:	add    rcx,r12
  4205ed:	add    rcx,r8
  4205f0:	add    rcx,0x3
  4205f4:	xor    ebx,ebx
  4205f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420600:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  420605:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  420609:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  42060d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  420611:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  420616:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  42061a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  42061e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  420622:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  420627:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  42062b:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  42062f:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  420633:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  420638:	mov    BYTE PTR [rcx+rbx*1],al
  42063b:	mov    eax,DWORD PTR [rdi+rbx*8]
  42063e:	mov    DWORD PTR [rdx+rbx*4],eax
  420641:	add    rbx,0x4
  420645:	cmp    rbp,rbx
  420648:	jne    420600 <flatcc_builder_end_union_vector@@Base+0x150>
  42064a:	mov    rdi,r13
  42064d:	mov    rdx,r14
  420650:	mov    rcx,r15
  420653:	vzeroupper 
  420656:	call   41f920 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42065b:	mov    r12d,eax
  42065e:	test   eax,eax
  420660:	je     42068b <flatcc_builder_end_union_vector@@Base+0x1db>
  420662:	mov    ecx,0x1
  420667:	mov    r8d,0x1
  42066d:	mov    r9d,0xffffffff
  420673:	mov    rdi,r13
  420676:	mov    rsi,r15
  420679:	mov    rdx,r14
  42067c:	call   41f6a0 <flatcc_builder_create_vector@@Base>
  420681:	mov    r14d,eax
  420684:	jmp    42068e <flatcc_builder_end_union_vector@@Base+0x1de>
  420686:	xor    r14d,r14d
  420689:	jmp    420708 <flatcc_builder_end_union_vector@@Base+0x258>
  42068b:	xor    r14d,r14d
  42068e:	shl    r12,0x20
  420692:	mov    rdi,QWORD PTR [r13+0x18]
  420696:	mov    edx,DWORD PTR [r13+0x20]
  42069a:	xor    esi,esi
  42069c:	call   406080 <memset@plt>
  4206a1:	mov    rax,QWORD PTR [r13+0x30]
  4206a5:	mov    ecx,DWORD PTR [rax+0x8]
  4206a8:	mov    DWORD PTR [r13+0x20],ecx
  4206ac:	mov    ecx,DWORD PTR [rax]
  4206ae:	mov    DWORD PTR [r13+0x28],ecx
  4206b2:	mov    edx,DWORD PTR [rax+0x4]
  4206b5:	mov    rsi,rcx
  4206b8:	add    rsi,QWORD PTR [r13+0x68]
  4206bc:	mov    QWORD PTR [r13+0x18],rsi
  4206c0:	mov    esi,DWORD PTR [r13+0x70]
  4206c4:	sub    esi,ecx
  4206c6:	cmp    esi,edx
  4206c8:	cmova  esi,edx
  4206cb:	mov    DWORD PTR [r13+0x24],esi
  4206cf:	movzx  ecx,WORD PTR [r13+0xea]
  4206d7:	cmp    WORD PTR [r13+0xe8],cx
  4206df:	jae    4206e9 <flatcc_builder_end_union_vector@@Base+0x239>
  4206e1:	mov    WORD PTR [r13+0xe8],cx
  4206e9:	or     r14,r12
  4206ec:	movzx  ecx,WORD PTR [rax+0xc]
  4206f0:	mov    WORD PTR [r13+0xea],cx
  4206f8:	add    rax,0xffffffffffffffdc
  4206fc:	mov    QWORD PTR [r13+0x30],rax
  420700:	add    DWORD PTR [r13+0x104],0xffffffff
  420708:	mov    rax,r14
  42070b:	add    rsp,0x8
  42070f:	pop    rbx
  420710:	pop    r12
  420712:	pop    r13
  420714:	pop    r14
  420716:	pop    r15
  420718:	pop    rbp
  420719:	ret    
  42071a:	lea    rax,[r14-0x1]
  42071e:	mov    ecx,0x8
  420723:	mul    rcx
  420726:	seto   cl
  420729:	lea    rdi,[r8+0x4]
  42072d:	mov    rdx,rax
  420730:	add    rdx,rdi
  420733:	setb   dl
  420736:	xor    r9d,r9d
  420739:	add    rax,r8
  42073c:	jb     42056a <flatcc_builder_end_union_vector@@Base+0xba>
  420742:	test   cl,cl
  420744:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  42074a:	test   dl,dl
  42074c:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  420752:	test   cl,cl
  420754:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  42075a:	lea    rcx,[r14+r14*4]
  42075e:	add    rcx,r12
  420761:	add    rcx,r8
  420764:	lea    rdx,[r8+r14*8]
  420768:	add    rdx,0xfffffffffffffff9
  42076c:	cmp    rdx,r15
  42076f:	seta   r11b
  420773:	lea    rbx,[r8+r14*8]
  420777:	cmp    r8,rcx
  42077a:	setb   r10b
  42077e:	cmp    rbx,r15
  420781:	seta   al
  420784:	cmp    rdi,rcx
  420787:	setb   bpl
  42078b:	cmp    rsi,rdx
  42078e:	setb   cl
  420791:	cmp    r8,r15
  420794:	setb   BYTE PTR [rsp+0x7]
  420799:	cmp    rsi,rbx
  42079c:	setb   dl
  42079f:	cmp    rdi,r15
  4207a2:	setb   dil
  4207a6:	xor    r9d,r9d
  4207a9:	test   r11b,r10b
  4207ac:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  4207b2:	and    al,bpl
  4207b5:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  4207bb:	and    cl,BYTE PTR [rsp+0x7]
  4207bf:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  4207c5:	and    dl,dil
  4207c8:	jne    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  4207ce:	mov    eax,r14d
  4207d1:	and    eax,0x7
  4207d4:	test   rax,rax
  4207d7:	mov    ecx,0x8
  4207dc:	cmovne rcx,rax
  4207e0:	mov    r9,r14
  4207e3:	sub    r9,rcx
  4207e6:	vmovdqa ymm0,YMMWORD PTR [rip+0x165b2]        # 436da0 <flatcc_builder_padding_base@@Base+0x200>
  4207ee:	vmovdqa ymm1,YMMWORD PTR [rip+0x165ca]        # 436dc0 <flatcc_builder_padding_base@@Base+0x220>
  4207f6:	xor    eax,eax
  4207f8:	vmovdqa xmm8,XMMWORD PTR [rip+0x165e0]        # 436de0 <flatcc_builder_padding_base@@Base+0x240>
  420800:	vmovdqa xmm9,XMMWORD PTR [rip+0x165e8]        # 436df0 <flatcc_builder_padding_base@@Base+0x250>
  420808:	vpbroadcastq ymm4,QWORD PTR [rip+0x165ef]        # 436e00 <flatcc_builder_padding_base@@Base+0x260>
  420811:	vpbroadcastq ymm5,QWORD PTR [rip+0x165ee]        # 436e08 <flatcc_builder_padding_base@@Base+0x268>
  42081a:	mov    rdi,r8
  42081d:	nop    DWORD PTR [rax]
  420820:	vmovdqu ymm6,YMMWORD PTR [rdi]
  420824:	vmovdqu ymm7,YMMWORD PTR [rdi+0x20]
  420829:	vextracti128 xmm2,ymm7,0x1
  42082f:	vpshufb xmm2,xmm2,xmm8
  420834:	vpshufb xmm7,xmm7,xmm8
  420839:	vpunpcklwd xmm2,xmm7,xmm2
  42083d:	vextracti128 xmm7,ymm6,0x1
  420843:	vpshufb xmm7,xmm7,xmm9
  420848:	vpshufb xmm6,xmm6,xmm9
  42084d:	vpunpcklwd xmm6,xmm6,xmm7
  420851:	vpblendd xmm2,xmm6,xmm2,0x2
  420857:	vmovq  QWORD PTR [r15+rax*1],xmm2
  42085d:	vpsllq ymm2,ymm1,0x3
  420862:	vmovq  xmm6,r8
  420867:	vpbroadcastq ymm6,xmm6
  42086c:	vpaddq ymm2,ymm6,ymm2
  420870:	vpaddq ymm2,ymm2,ymm4
  420874:	vpsllq ymm7,ymm0,0x3
  420879:	vpaddq ymm6,ymm6,ymm7
  42087d:	vpaddq ymm6,ymm6,ymm4
  420881:	vpcmpeqd xmm7,xmm7,xmm7
  420885:	vpgatherqd xmm3,DWORD PTR [ymm6*1+0x0],xmm7
  42088f:	vpcmpeqd xmm6,xmm6,xmm6
  420893:	vpgatherqd xmm7,DWORD PTR [ymm2*1+0x0],xmm6
  42089d:	vinserti128 ymm2,ymm7,xmm3,0x1
  4208a3:	vmovdqu YMMWORD PTR [rsi+rax*4],ymm2
  4208a8:	add    rax,0x8
  4208ac:	vpaddq ymm1,ymm1,ymm5
  4208b0:	vpaddq ymm0,ymm0,ymm5
  4208b4:	add    rdi,0x40
  4208b8:	cmp    r9,rax
  4208bb:	jne    420820 <flatcc_builder_end_union_vector@@Base+0x370>
  4208c1:	jmp    42056a <flatcc_builder_end_union_vector@@Base+0xba>
  4208c6:	lea    rdi,[rip+0x17191]        # 437a5e <flatcc_builder_padding_base@@Base+0xebe>
  4208cd:	lea    rsi,[rip+0x1654e]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4208d4:	lea    rcx,[rip+0x171b5]        # 437a90 <flatcc_builder_padding_base@@Base+0xef0>
  4208db:	mov    edx,0x651
  4208e0:	call   406070 <__assert_fail@plt>
  4208e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4208ef:	nop

00000000004208f0 <flatcc_builder_union_vector_count@@Base>:
  4208f0:	mov    rax,QWORD PTR [rdi+0x30]
  4208f4:	mov    eax,DWORD PTR [rax+0x14]
  4208f7:	ret    
  4208f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420900 <flatcc_builder_union_vector_edit@@Base>:
  420900:	mov    rax,QWORD PTR [rdi+0x18]
  420904:	ret    
  420905:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42090f:	nop

0000000000420910 <flatcc_builder_extend_union_vector@@Base>:
  420910:	push   r14
  420912:	push   rbx
  420913:	push   rax
  420914:	mov    rax,QWORD PTR [rdi+0x30]
  420918:	mov    ecx,DWORD PTR [rax+0x14]
  42091b:	add    ecx,esi
  42091d:	jb     4209a5 <flatcc_builder_extend_union_vector@@Base+0x95>
  420923:	cmp    ecx,0x20000000
  420929:	jae    4209a5 <flatcc_builder_extend_union_vector@@Base+0x95>
  42092b:	mov    rbx,rdi
  42092e:	mov    DWORD PTR [rax+0x14],ecx
  420931:	mov    r14d,DWORD PTR [rdi+0x20]
  420935:	lea    eax,[r14+rsi*8]
  420939:	mov    DWORD PTR [rdi+0x20],eax
  42093c:	cmp    eax,DWORD PTR [rdi+0x24]
  42093f:	jae    420947 <flatcc_builder_extend_union_vector@@Base+0x37>
  420941:	mov    rax,QWORD PTR [rbx+0x18]
  420945:	jmp    42099a <flatcc_builder_extend_union_vector@@Base+0x8a>
  420947:	add    eax,0x1
  42094a:	lea    rsi,[rbx+0x68]
  42094e:	mov    rdi,QWORD PTR [rbx+0x40]
  420952:	mov    edx,DWORD PTR [rbx+0x28]
  420955:	add    rdx,rax
  420958:	mov    ecx,0x1
  42095d:	mov    r8d,0x1
  420963:	call   QWORD PTR [rbx+0x50]
  420966:	test   eax,eax
  420968:	je     42096e <flatcc_builder_extend_union_vector@@Base+0x5e>
  42096a:	xor    eax,eax
  42096c:	jmp    42099d <flatcc_builder_extend_union_vector@@Base+0x8d>
  42096e:	mov    ecx,DWORD PTR [rbx+0x28]
  420971:	mov    rax,rcx
  420974:	add    rax,QWORD PTR [rbx+0x68]
  420978:	mov    QWORD PTR [rbx+0x18],rax
  42097c:	mov    edx,DWORD PTR [rbx+0x70]
  42097f:	sub    edx,ecx
  420981:	cmp    edx,0xfffffffc
  420984:	mov    ecx,0xfffffffc
  420989:	cmovb  ecx,edx
  42098c:	mov    DWORD PTR [rbx+0x24],ecx
  42098f:	mov    rcx,QWORD PTR [rbx+0x30]
  420993:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42099a:	add    rax,r14
  42099d:	add    rsp,0x8
  4209a1:	pop    rbx
  4209a2:	pop    r14
  4209a4:	ret    
  4209a5:	lea    rdi,[rip+0x1753f]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  4209ac:	lea    rsi,[rip+0x1646f]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4209b3:	lea    rcx,[rip+0x1754c]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  4209ba:	mov    edx,0x37c
  4209bf:	call   406070 <__assert_fail@plt>
  4209c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4209ce:	xchg   ax,ax

00000000004209d0 <flatcc_builder_truncate_union_vector@@Base>:
  4209d0:	push   rax
  4209d1:	mov    rcx,QWORD PTR [rdi+0x30]
  4209d5:	movzx  edx,WORD PTR [rcx+0xe]
  4209d9:	cmp    edx,0x7
  4209dc:	jne    420a10 <flatcc_builder_truncate_union_vector@@Base+0x40>
  4209de:	mov    rax,rsi
  4209e1:	mov    edx,DWORD PTR [rcx+0x14]
  4209e4:	sub    edx,eax
  4209e6:	jb     420a2f <flatcc_builder_truncate_union_vector@@Base+0x5f>
  4209e8:	mov    DWORD PTR [rcx+0x14],edx
  4209eb:	mov    rcx,QWORD PTR [rdi+0x30]
  4209ef:	imul   eax,DWORD PTR [rcx+0x10]
  4209f3:	mov    ecx,DWORD PTR [rdi+0x20]
  4209f6:	sub    ecx,eax
  4209f8:	mov    DWORD PTR [rdi+0x20],ecx
  4209fb:	add    rcx,QWORD PTR [rdi+0x18]
  4209ff:	xor    esi,esi
  420a01:	mov    rdi,rcx
  420a04:	mov    rdx,rax
  420a07:	call   406080 <memset@plt>
  420a0c:	xor    eax,eax
  420a0e:	pop    rcx
  420a0f:	ret    
  420a10:	lea    rdi,[rip+0x17047]        # 437a5e <flatcc_builder_padding_base@@Base+0xebe>
  420a17:	lea    rsi,[rip+0x16404]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420a1e:	lea    rcx,[rip+0x170be]        # 437ae3 <flatcc_builder_padding_base@@Base+0xf43>
  420a25:	mov    edx,0x681
  420a2a:	call   406070 <__assert_fail@plt>
  420a2f:	lea    rdi,[rip+0x16a8c]        # 4374c2 <flatcc_builder_padding_base@@Base+0x922>
  420a36:	lea    rsi,[rip+0x163e5]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420a3d:	lea    rcx,[rip+0x1709f]        # 437ae3 <flatcc_builder_padding_base@@Base+0xf43>
  420a44:	mov    edx,0x682
  420a49:	call   406070 <__assert_fail@plt>
  420a4e:	xchg   ax,ax

0000000000420a50 <flatcc_builder_union_vector_push@@Base>:
  420a50:	push   r15
  420a52:	push   r14
  420a54:	push   rbx
  420a55:	mov    rax,QWORD PTR [rdi+0x30]
  420a59:	movzx  ecx,WORD PTR [rax+0xe]
  420a5d:	cmp    ecx,0x7
  420a60:	jne    420afa <flatcc_builder_union_vector_push@@Base+0xaa>
  420a66:	mov    ecx,DWORD PTR [rax+0x14]
  420a69:	cmp    ecx,0x1fffffff
  420a6f:	je     420abc <flatcc_builder_union_vector_push@@Base+0x6c>
  420a71:	mov    r14,rsi
  420a74:	mov    rbx,rdi
  420a77:	add    ecx,0x1
  420a7a:	mov    DWORD PTR [rax+0x14],ecx
  420a7d:	mov    r15d,DWORD PTR [rdi+0x20]
  420a81:	lea    eax,[r15+0x8]
  420a85:	mov    DWORD PTR [rdi+0x20],eax
  420a88:	cmp    eax,DWORD PTR [rdi+0x24]
  420a8b:	jae    420a98 <flatcc_builder_union_vector_push@@Base+0x48>
  420a8d:	mov    rax,QWORD PTR [rbx+0x18]
  420a91:	add    rax,r15
  420a94:	jne    420af1 <flatcc_builder_union_vector_push@@Base+0xa1>
  420a96:	jmp    420abc <flatcc_builder_union_vector_push@@Base+0x6c>
  420a98:	lea    eax,[r15+0x9]
  420a9c:	lea    rsi,[rbx+0x68]
  420aa0:	mov    rdi,QWORD PTR [rbx+0x40]
  420aa4:	mov    edx,DWORD PTR [rbx+0x28]
  420aa7:	add    rdx,rax
  420aaa:	mov    ecx,0x1
  420aaf:	mov    r8d,0x1
  420ab5:	call   QWORD PTR [rbx+0x50]
  420ab8:	test   eax,eax
  420aba:	je     420ac0 <flatcc_builder_union_vector_push@@Base+0x70>
  420abc:	xor    eax,eax
  420abe:	jmp    420af4 <flatcc_builder_union_vector_push@@Base+0xa4>
  420ac0:	mov    ecx,DWORD PTR [rbx+0x28]
  420ac3:	mov    rax,rcx
  420ac6:	add    rax,QWORD PTR [rbx+0x68]
  420aca:	mov    QWORD PTR [rbx+0x18],rax
  420ace:	mov    edx,DWORD PTR [rbx+0x70]
  420ad1:	sub    edx,ecx
  420ad3:	cmp    edx,0xfffffffc
  420ad6:	mov    ecx,0xfffffffc
  420adb:	cmovb  ecx,edx
  420ade:	mov    DWORD PTR [rbx+0x24],ecx
  420ae1:	mov    rcx,QWORD PTR [rbx+0x30]
  420ae5:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  420aec:	add    rax,r15
  420aef:	je     420abc <flatcc_builder_union_vector_push@@Base+0x6c>
  420af1:	mov    QWORD PTR [rax],r14
  420af4:	pop    rbx
  420af5:	pop    r14
  420af7:	pop    r15
  420af9:	ret    
  420afa:	lea    rdi,[rip+0x16f5d]        # 437a5e <flatcc_builder_padding_base@@Base+0xebe>
  420b01:	lea    rsi,[rip+0x1631a]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420b08:	lea    rcx,[rip+0x17019]        # 437b28 <flatcc_builder_padding_base@@Base+0xf88>
  420b0f:	mov    edx,0x68d
  420b14:	call   406070 <__assert_fail@plt>
  420b19:	nop    DWORD PTR [rax+0x0]

0000000000420b20 <flatcc_builder_append_union_vector@@Base>:
  420b20:	push   r15
  420b22:	push   r14
  420b24:	push   r13
  420b26:	push   r12
  420b28:	push   rbx
  420b29:	mov    rax,QWORD PTR [rdi+0x30]
  420b2d:	movzx  ecx,WORD PTR [rax+0xe]
  420b31:	cmp    ecx,0x7
  420b34:	jne    420c11 <flatcc_builder_append_union_vector@@Base+0xf1>
  420b3a:	mov    r15,rdx
  420b3d:	mov    ecx,DWORD PTR [rax+0x14]
  420b40:	add    ecx,r15d
  420b43:	jb     420bf2 <flatcc_builder_append_union_vector@@Base+0xd2>
  420b49:	cmp    ecx,0x20000000
  420b4f:	jae    420bf2 <flatcc_builder_append_union_vector@@Base+0xd2>
  420b55:	mov    r14,rsi
  420b58:	mov    rbx,rdi
  420b5b:	mov    DWORD PTR [rax+0x14],ecx
  420b5e:	mov    r13d,DWORD PTR [rdi+0x20]
  420b62:	lea    eax,[r13+r15*8+0x0]
  420b67:	mov    DWORD PTR [rdi+0x20],eax
  420b6a:	cmp    eax,DWORD PTR [rdi+0x24]
  420b6d:	jae    420b7a <flatcc_builder_append_union_vector@@Base+0x5a>
  420b6f:	mov    r12,QWORD PTR [rbx+0x18]
  420b73:	add    r12,r13
  420b76:	jne    420bd3 <flatcc_builder_append_union_vector@@Base+0xb3>
  420b78:	jmp    420b9d <flatcc_builder_append_union_vector@@Base+0x7d>
  420b7a:	add    eax,0x1
  420b7d:	lea    rsi,[rbx+0x68]
  420b81:	mov    rdi,QWORD PTR [rbx+0x40]
  420b85:	mov    edx,DWORD PTR [rbx+0x28]
  420b88:	add    rdx,rax
  420b8b:	mov    ecx,0x1
  420b90:	mov    r8d,0x1
  420b96:	call   QWORD PTR [rbx+0x50]
  420b99:	test   eax,eax
  420b9b:	je     420ba2 <flatcc_builder_append_union_vector@@Base+0x82>
  420b9d:	xor    r12d,r12d
  420ba0:	jmp    420be5 <flatcc_builder_append_union_vector@@Base+0xc5>
  420ba2:	mov    eax,DWORD PTR [rbx+0x28]
  420ba5:	mov    r12,rax
  420ba8:	add    r12,QWORD PTR [rbx+0x68]
  420bac:	mov    QWORD PTR [rbx+0x18],r12
  420bb0:	mov    ecx,DWORD PTR [rbx+0x70]
  420bb3:	sub    ecx,eax
  420bb5:	cmp    ecx,0xfffffffc
  420bb8:	mov    eax,0xfffffffc
  420bbd:	cmovb  eax,ecx
  420bc0:	mov    DWORD PTR [rbx+0x24],eax
  420bc3:	mov    rax,QWORD PTR [rbx+0x30]
  420bc7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420bce:	add    r12,r13
  420bd1:	je     420b9d <flatcc_builder_append_union_vector@@Base+0x7d>
  420bd3:	shl    r15d,0x3
  420bd7:	mov    edx,r15d
  420bda:	mov    rdi,r12
  420bdd:	mov    rsi,r14
  420be0:	call   4060e0 <memcpy@plt>
  420be5:	mov    rax,r12
  420be8:	pop    rbx
  420be9:	pop    r12
  420beb:	pop    r13
  420bed:	pop    r14
  420bef:	pop    r15
  420bf1:	ret    
  420bf2:	lea    rdi,[rip+0x172f2]        # 437eeb <flatcc_builder_padding_base@@Base+0x134b>
  420bf9:	lea    rsi,[rip+0x16222]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420c00:	lea    rcx,[rip+0x172ff]        # 437f06 <flatcc_builder_padding_base@@Base+0x1366>
  420c07:	mov    edx,0x37c
  420c0c:	call   406070 <__assert_fail@plt>
  420c11:	lea    rdi,[rip+0x16e46]        # 437a5e <flatcc_builder_padding_base@@Base+0xebe>
  420c18:	lea    rsi,[rip+0x16203]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420c1f:	lea    rcx,[rip+0x16f6f]        # 437b95 <flatcc_builder_padding_base@@Base+0xff5>
  420c26:	mov    edx,0x69c
  420c2b:	call   406070 <__assert_fail@plt>

0000000000420c30 <flatcc_builder_create_string@@Base>:
  420c30:	push   rbp
  420c31:	push   rbx
  420c32:	sub    rsp,0x98
  420c39:	xor    ebp,ebp
  420c3b:	mov    rax,rdx
  420c3e:	shr    rax,0x20
  420c42:	jne    420d18 <flatcc_builder_create_string@@Base+0xe8>
  420c48:	mov    rbx,rdi
  420c4b:	mov    DWORD PTR [rsp+0x4],edx
  420c4f:	mov    ebp,DWORD PTR [rdi+0xf0]
  420c55:	mov    eax,edx
  420c57:	not    eax
  420c59:	add    eax,ebp
  420c5b:	and    eax,0x3
  420c5e:	add    eax,0x1
  420c61:	mov    QWORD PTR [rsp+0x8],0x4
  420c6a:	lea    rcx,[rsp+0x4]
  420c6f:	mov    QWORD PTR [rsp+0x18],rcx
  420c74:	mov    QWORD PTR [rsp+0x20],0x4
  420c7d:	mov    DWORD PTR [rsp+0x10],0x1
  420c85:	test   rdx,rdx
  420c88:	je     420cac <flatcc_builder_create_string@@Base+0x7c>
  420c8a:	lea    rcx,[rdx+0x4]
  420c8e:	mov    QWORD PTR [rsp+0x8],rcx
  420c93:	mov    QWORD PTR [rsp+0x28],rsi
  420c98:	mov    QWORD PTR [rsp+0x30],rdx
  420c9d:	mov    DWORD PTR [rsp+0x10],0x2
  420ca5:	mov    edx,0x2
  420caa:	jmp    420cb6 <flatcc_builder_create_string@@Base+0x86>
  420cac:	mov    edx,0x1
  420cb1:	mov    ecx,0x4
  420cb6:	mov    esi,eax
  420cb8:	lea    r8,[rcx+rsi*1]
  420cbc:	mov    QWORD PTR [rsp+0x8],r8
  420cc1:	mov    eax,edx
  420cc3:	shl    rax,0x4
  420cc7:	lea    rdi,[rip+0x15ed2]        # 436ba0 <flatcc_builder_padding_base@@Base>
  420cce:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  420cd3:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  420cd8:	add    edx,0x1
  420cdb:	mov    DWORD PTR [rsp+0x10],edx
  420cdf:	cmp    r8,0x11
  420ce3:	setb   al
  420ce6:	add    rcx,rsi
  420ce9:	add    rcx,0xfffffffffffffff0
  420ced:	shr    rcx,0x20
  420cf1:	sete   cl
  420cf4:	test   r8d,r8d
  420cf7:	jle    420d24 <flatcc_builder_create_string@@Base+0xf4>
  420cf9:	or     al,cl
  420cfb:	je     420d24 <flatcc_builder_create_string@@Base+0xf4>
  420cfd:	sub    ebp,r8d
  420d00:	mov    rdi,QWORD PTR [rbx+0x38]
  420d04:	lea    rsi,[rsp+0x18]
  420d09:	mov    ecx,ebp
  420d0b:	call   QWORD PTR [rbx+0x48]
  420d0e:	test   eax,eax
  420d10:	jne    420d43 <flatcc_builder_create_string@@Base+0x113>
  420d12:	mov    DWORD PTR [rbx+0xf0],ebp
  420d18:	mov    eax,ebp
  420d1a:	add    rsp,0x98
  420d21:	pop    rbx
  420d22:	pop    rbp
  420d23:	ret    
  420d24:	lea    rdi,[rip+0x172b7]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  420d2b:	lea    rsi,[rip+0x160f0]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420d32:	lea    rcx,[rip+0x17168]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  420d39:	mov    edx,0x287
  420d3e:	call   406070 <__assert_fail@plt>
  420d43:	lea    rdi,[rip+0x17298]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  420d4a:	lea    rsi,[rip+0x160d1]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420d51:	lea    rcx,[rip+0x17149]        # 437ea1 <flatcc_builder_padding_base@@Base+0x1301>
  420d58:	mov    edx,0x28b
  420d5d:	call   406070 <__assert_fail@plt>
  420d62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d6c:	nop    DWORD PTR [rax+0x0]

0000000000420d70 <flatcc_builder_create_string_str@@Base>:
  420d70:	push   r14
  420d72:	push   rbx
  420d73:	push   rax
  420d74:	mov    rbx,rsi
  420d77:	mov    r14,rdi
  420d7a:	mov    rdi,rsi
  420d7d:	call   406060 <strlen@plt>
  420d82:	mov    rdi,r14
  420d85:	mov    rsi,rbx
  420d88:	mov    rdx,rax
  420d8b:	add    rsp,0x8
  420d8f:	pop    rbx
  420d90:	pop    r14
  420d92:	jmp    420c30 <flatcc_builder_create_string@@Base>
  420d97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420da0 <flatcc_builder_create_string_strn@@Base>:
  420da0:	push   r15
  420da2:	push   r14
  420da4:	push   rbx
  420da5:	mov    rbx,rdx
  420da8:	mov    r14,rsi
  420dab:	mov    r15,rdi
  420dae:	xor    esi,esi
  420db0:	mov    rdi,r14
  420db3:	call   4060a0 <memchr@plt>
  420db8:	mov    rcx,rax
  420dbb:	sub    rcx,r14
  420dbe:	test   rax,rax
  420dc1:	cmovne rbx,rcx
  420dc5:	mov    rdi,r15
  420dc8:	mov    rsi,r14
  420dcb:	mov    rdx,rbx
  420dce:	pop    rbx
  420dcf:	pop    r14
  420dd1:	pop    r15
  420dd3:	jmp    420c30 <flatcc_builder_create_string@@Base>
  420dd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420de0 <flatcc_builder_end_string@@Base>:
  420de0:	push   rbp
  420de1:	push   rbx
  420de2:	push   rax
  420de3:	mov    rax,QWORD PTR [rdi+0x30]
  420de7:	movzx  ecx,WORD PTR [rax+0xe]
  420deb:	cmp    ecx,0x6
  420dee:	jne    420e87 <flatcc_builder_end_string@@Base+0xa7>
  420df4:	mov    rbx,rdi
  420df7:	mov    edx,DWORD PTR [rax+0x14]
  420dfa:	cmp    edx,DWORD PTR [rdi+0x20]
  420dfd:	jne    420ea6 <flatcc_builder_end_string@@Base+0xc6>
  420e03:	mov    rsi,QWORD PTR [rbx+0x18]
  420e07:	mov    rdi,rbx
  420e0a:	call   420c30 <flatcc_builder_create_string@@Base>
  420e0f:	mov    ebp,eax
  420e11:	test   eax,eax
  420e13:	je     420e7e <flatcc_builder_end_string@@Base+0x9e>
  420e15:	mov    rdi,QWORD PTR [rbx+0x18]
  420e19:	mov    edx,DWORD PTR [rbx+0x20]
  420e1c:	xor    esi,esi
  420e1e:	call   406080 <memset@plt>
  420e23:	mov    rax,QWORD PTR [rbx+0x30]
  420e27:	mov    ecx,DWORD PTR [rax+0x8]
  420e2a:	mov    DWORD PTR [rbx+0x20],ecx
  420e2d:	mov    ecx,DWORD PTR [rax]
  420e2f:	mov    DWORD PTR [rbx+0x28],ecx
  420e32:	mov    edx,DWORD PTR [rax+0x4]
  420e35:	mov    rsi,rcx
  420e38:	add    rsi,QWORD PTR [rbx+0x68]
  420e3c:	mov    QWORD PTR [rbx+0x18],rsi
  420e40:	mov    esi,DWORD PTR [rbx+0x70]
  420e43:	sub    esi,ecx
  420e45:	cmp    esi,edx
  420e47:	cmova  esi,edx
  420e4a:	mov    DWORD PTR [rbx+0x24],esi
  420e4d:	movzx  ecx,WORD PTR [rbx+0xea]
  420e54:	cmp    WORD PTR [rbx+0xe8],cx
  420e5b:	jae    420e64 <flatcc_builder_end_string@@Base+0x84>
  420e5d:	mov    WORD PTR [rbx+0xe8],cx
  420e64:	movzx  ecx,WORD PTR [rax+0xc]
  420e68:	mov    WORD PTR [rbx+0xea],cx
  420e6f:	add    rax,0xffffffffffffffdc
  420e73:	mov    QWORD PTR [rbx+0x30],rax
  420e77:	add    DWORD PTR [rbx+0x104],0xffffffff
  420e7e:	mov    eax,ebp
  420e80:	add    rsp,0x8
  420e84:	pop    rbx
  420e85:	pop    rbp
  420e86:	ret    
  420e87:	lea    rdi,[rip+0x164d3]        # 437361 <flatcc_builder_padding_base@@Base+0x7c1>
  420e8e:	lea    rsi,[rip+0x15f8d]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420e95:	lea    rcx,[rip+0x16d78]        # 437c14 <flatcc_builder_padding_base@@Base+0x1074>
  420e9c:	mov    edx,0x6c4
  420ea1:	call   406070 <__assert_fail@plt>
  420ea6:	lea    rdi,[rip+0x16daa]        # 437c57 <flatcc_builder_padding_base@@Base+0x10b7>
  420ead:	lea    rsi,[rip+0x15f6e]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420eb4:	lea    rcx,[rip+0x16d59]        # 437c14 <flatcc_builder_padding_base@@Base+0x1074>
  420ebb:	mov    edx,0x6c5
  420ec0:	call   406070 <__assert_fail@plt>
  420ec5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ecf:	nop

0000000000420ed0 <flatcc_builder_string_edit@@Base>:
  420ed0:	mov    rax,QWORD PTR [rdi+0x18]
  420ed4:	ret    
  420ed5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420edf:	nop

0000000000420ee0 <flatcc_builder_string_len@@Base>:
  420ee0:	mov    rax,QWORD PTR [rdi+0x30]
  420ee4:	mov    eax,DWORD PTR [rax+0x14]
  420ee7:	ret    
  420ee8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420ef0 <flatcc_builder_table_edit@@Base>:
  420ef0:	mov    rax,QWORD PTR [rdi+0x30]
  420ef4:	movzx  eax,WORD PTR [rax+0xe]
  420ef8:	cmp    eax,0x3
  420efb:	jne    420f08 <flatcc_builder_table_edit@@Base+0x18>
  420efd:	mov    eax,DWORD PTR [rdi+0x20]
  420f00:	add    rax,QWORD PTR [rdi+0x18]
  420f04:	sub    rax,rsi
  420f07:	ret    
  420f08:	push   rax
  420f09:	lea    rdi,[rip+0x16741]        # 437651 <flatcc_builder_padding_base@@Base+0xab1>
  420f10:	lea    rsi,[rip+0x15f0b]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  420f17:	lea    rcx,[rip+0x16deb]        # 437d09 <flatcc_builder_padding_base@@Base+0x1169>
  420f1e:	mov    edx,0x702
  420f23:	call   406070 <__assert_fail@plt>
  420f28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420f30 <flatcc_builder_table_add_copy@@Base>:
  420f30:	push   r15
  420f32:	push   r14
  420f34:	push   rbx
  420f35:	mov    r15,rcx
  420f38:	mov    r14,rdx
  420f3b:	mov    rdx,rcx
  420f3e:	mov    ecx,r8d
  420f41:	call   41fe80 <flatcc_builder_table_add@@Base>
  420f46:	mov    rbx,rax
  420f49:	test   rax,rax
  420f4c:	je     420f5c <flatcc_builder_table_add_copy@@Base+0x2c>
  420f4e:	mov    rdi,rbx
  420f51:	mov    rsi,r14
  420f54:	mov    rdx,r15
  420f57:	call   4060e0 <memcpy@plt>
  420f5c:	mov    rax,rbx
  420f5f:	pop    rbx
  420f60:	pop    r14
  420f62:	pop    r15
  420f64:	ret    
  420f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f6f:	nop

0000000000420f70 <flatcc_builder_push_buffer_alignment@@Base>:
  420f70:	movzx  eax,WORD PTR [rdi+0xe8]
  420f77:	mov    WORD PTR [rdi+0xe8],0x4
  420f80:	ret    
  420f81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420f90 <flatcc_builder_pop_buffer_alignment@@Base>:
  420f90:	cmp    WORD PTR [rdi+0xe8],si
  420f97:	jae    420fa0 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  420f99:	mov    WORD PTR [rdi+0xe8],si
  420fa0:	ret    
  420fa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420fab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420fb0 <flatcc_builder_get_buffer_alignment@@Base>:
  420fb0:	movzx  eax,WORD PTR [rdi+0xe8]
  420fb7:	ret    
  420fb8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420fc0 <flatcc_builder_set_vtable_clustering@@Base>:
  420fc0:	xor    eax,eax
  420fc2:	test   esi,esi
  420fc4:	sete   al
  420fc7:	mov    DWORD PTR [rdi+0x124],eax
  420fcd:	ret    
  420fce:	xchg   ax,ax

0000000000420fd0 <flatcc_builder_set_block_align@@Base>:
  420fd0:	mov    WORD PTR [rdi+0xec],si
  420fd7:	ret    
  420fd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420fe0 <flatcc_builder_get_level@@Base>:
  420fe0:	mov    eax,DWORD PTR [rdi+0x104]
  420fe6:	ret    
  420fe7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420ff0 <flatcc_builder_set_max_level@@Base>:
  420ff0:	mov    DWORD PTR [rdi+0x120],esi
  420ff6:	cmp    DWORD PTR [rdi+0x108],esi
  420ffc:	jge    421004 <flatcc_builder_set_max_level@@Base+0x14>
  420ffe:	mov    DWORD PTR [rdi+0x108],esi
  421004:	ret    
  421005:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42100f:	nop

0000000000421010 <flatcc_builder_get_buffer_size@@Base>:
  421010:	movsxd rax,DWORD PTR [rdi+0xf4]
  421017:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42101e:	sub    rax,rcx
  421021:	ret    
  421022:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42102c:	nop    DWORD PTR [rax+0x0]

0000000000421030 <flatcc_builder_get_buffer_start@@Base>:
  421030:	mov    eax,DWORD PTR [rdi+0xf0]
  421036:	ret    
  421037:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421040 <flatcc_builder_get_buffer_end@@Base>:
  421040:	mov    eax,DWORD PTR [rdi+0xf4]
  421046:	ret    
  421047:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421050 <flatcc_builder_set_vtable_cache_limit@@Base>:
  421050:	mov    QWORD PTR [rdi+0x118],rsi
  421057:	ret    
  421058:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421060 <flatcc_builder_set_identifier@@Base>:
  421060:	test   rsi,rsi
  421063:	jne    42106c <flatcc_builder_set_identifier@@Base+0xc>
  421065:	lea    rsi,[rip+0x15b34]        # 436ba0 <flatcc_builder_padding_base@@Base>
  42106c:	mov    eax,DWORD PTR [rsi]
  42106e:	mov    DWORD PTR [rdi+0x110],eax
  421074:	ret    
  421075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42107f:	nop

0000000000421080 <flatcc_builder_get_type@@Base>:
  421080:	mov    rax,QWORD PTR [rdi+0x30]
  421084:	test   rax,rax
  421087:	je     42108e <flatcc_builder_get_type@@Base+0xe>
  421089:	movzx  eax,WORD PTR [rax+0xe]
  42108d:	ret    
  42108e:	xor    eax,eax
  421090:	ret    
  421091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004210a0 <flatcc_builder_get_type_at@@Base>:
  4210a0:	xor    eax,eax
  4210a2:	test   esi,esi
  4210a4:	jle    4210c2 <flatcc_builder_get_type_at@@Base+0x22>
  4210a6:	mov    ecx,DWORD PTR [rdi+0x104]
  4210ac:	cmp    ecx,esi
  4210ae:	jl     4210c2 <flatcc_builder_get_type_at@@Base+0x22>
  4210b0:	mov    rax,QWORD PTR [rdi+0x30]
  4210b4:	sub    esi,ecx
  4210b6:	movsxd rcx,esi
  4210b9:	lea    rcx,[rcx+rcx*8]
  4210bd:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  4210c2:	ret    
  4210c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210cd:	nop    DWORD PTR [rax]

00000000004210d0 <flatcc_builder_get_direct_buffer@@Base>:
  4210d0:	cmp    DWORD PTR [rdi+0x128],0x0
  4210d7:	je     4210e9 <flatcc_builder_get_direct_buffer@@Base+0x19>
  4210d9:	mov    rax,QWORD PTR [rdi+0x130]
  4210e0:	cmp    rax,QWORD PTR [rdi+0x138]
  4210e7:	je     4210f8 <flatcc_builder_get_direct_buffer@@Base+0x28>
  4210e9:	test   rsi,rsi
  4210ec:	je     4210f5 <flatcc_builder_get_direct_buffer@@Base+0x25>
  4210ee:	mov    QWORD PTR [rsi],0x0
  4210f5:	xor    eax,eax
  4210f7:	ret    
  4210f8:	test   rsi,rsi
  4210fb:	je     421107 <flatcc_builder_get_direct_buffer@@Base+0x37>
  4210fd:	mov    rax,QWORD PTR [rdi+0x160]
  421104:	mov    QWORD PTR [rsi],rax
  421107:	mov    rax,QWORD PTR [rdi+0x140]
  42110e:	ret    
  42110f:	nop

0000000000421110 <flatcc_builder_copy_buffer@@Base>:
  421110:	push   rax
  421111:	cmp    DWORD PTR [rdi+0x128],0x0
  421118:	je     42112d <flatcc_builder_copy_buffer@@Base+0x1d>
  42111a:	add    rdi,0x130
  421121:	call   421a30 <flatcc_emitter_copy_buffer@@Base>
  421126:	test   rax,rax
  421129:	je     421131 <flatcc_builder_copy_buffer@@Base+0x21>
  42112b:	pop    rcx
  42112c:	ret    
  42112d:	xor    eax,eax
  42112f:	pop    rcx
  421130:	ret    
  421131:	lea    rdi,[rip+0x12c85]        # 433dbd <_IO_stdin_used@@Base+0xdbd>
  421138:	lea    rsi,[rip+0x15ce3]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  42113f:	lea    rcx,[rip+0x16c4e]        # 437d94 <flatcc_builder_padding_base@@Base+0x11f4>
  421146:	mov    edx,0x786
  42114b:	call   406070 <__assert_fail@plt>

0000000000421150 <flatcc_builder_finalize_buffer@@Base>:
  421150:	push   r15
  421152:	push   r14
  421154:	push   rbx
  421155:	mov    rbx,rdi
  421158:	movsxd r14,DWORD PTR [rdi+0xf4]
  42115f:	movsxd rax,DWORD PTR [rdi+0xf0]
  421166:	sub    r14,rax
  421169:	test   rsi,rsi
  42116c:	je     421171 <flatcc_builder_finalize_buffer@@Base+0x21>
  42116e:	mov    QWORD PTR [rsi],r14
  421171:	mov    rdi,r14
  421174:	call   4060f0 <malloc@plt>
  421179:	test   rax,rax
  42117c:	je     4211ad <flatcc_builder_finalize_buffer@@Base+0x5d>
  42117e:	cmp    DWORD PTR [rbx+0x128],0x0
  421185:	je     4211cc <flatcc_builder_finalize_buffer@@Base+0x7c>
  421187:	mov    r15,rax
  42118a:	add    rbx,0x130
  421191:	mov    rdi,rbx
  421194:	mov    rsi,rax
  421197:	mov    rdx,r14
  42119a:	call   421a30 <flatcc_emitter_copy_buffer@@Base>
  42119f:	test   rax,rax
  4211a2:	je     4211eb <flatcc_builder_finalize_buffer@@Base+0x9b>
  4211a4:	mov    rax,r15
  4211a7:	pop    rbx
  4211a8:	pop    r14
  4211aa:	pop    r15
  4211ac:	ret    
  4211ad:	lea    rdi,[rip+0x16e2e]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  4211b4:	lea    rsi,[rip+0x15c67]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4211bb:	lea    rcx,[rip+0x16c17]        # 437dd9 <flatcc_builder_padding_base@@Base+0x1239>
  4211c2:	mov    edx,0x798
  4211c7:	call   406070 <__assert_fail@plt>
  4211cc:	lea    rdi,[rip+0x16e0f]        # 437fe2 <flatcc_builder_padding_base@@Base+0x1442>
  4211d3:	lea    rsi,[rip+0x15c48]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4211da:	lea    rcx,[rip+0x16bf8]        # 437dd9 <flatcc_builder_padding_base@@Base+0x1239>
  4211e1:	mov    edx,0x79c
  4211e6:	call   406070 <__assert_fail@plt>
  4211eb:	lea    rdi,[rip+0x12bcb]        # 433dbd <_IO_stdin_used@@Base+0xdbd>
  4211f2:	lea    rsi,[rip+0x15c29]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4211f9:	lea    rcx,[rip+0x16b94]        # 437d94 <flatcc_builder_padding_base@@Base+0x11f4>
  421200:	mov    edx,0x786
  421205:	call   406070 <__assert_fail@plt>
  42120a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421210 <flatcc_builder_finalize_aligned_buffer@@Base>:
  421210:	push   r15
  421212:	push   r14
  421214:	push   r12
  421216:	push   rbx
  421217:	push   rax
  421218:	mov    r14,rsi
  42121b:	mov    r15,rdi
  42121e:	movsxd rax,DWORD PTR [rdi+0xf4]
  421225:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42122c:	sub    rax,rcx
  42122f:	test   rsi,rsi
  421232:	je     421237 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  421234:	mov    QWORD PTR [r14],rax
  421237:	movzx  ecx,WORD PTR [r15+0xe8]
  42123f:	add    rax,rcx
  421242:	add    rax,0xffffffffffffffff
  421246:	mov    rbx,rcx
  421249:	neg    rbx
  42124c:	and    rbx,rax
  42124f:	cmp    rcx,0x8
  421253:	mov    QWORD PTR [rsp],0x0
  42125b:	mov    esi,0x8
  421260:	cmova  rsi,rcx
  421264:	mov    rdi,rsp
  421267:	mov    rdx,rbx
  42126a:	call   406140 <posix_memalign@plt>
  42126f:	mov    r12,QWORD PTR [rsp]
  421273:	test   eax,eax
  421275:	je     421286 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  421277:	test   r12,r12
  42127a:	je     421286 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42127c:	mov    rdi,r12
  42127f:	call   406030 <free@plt>
  421284:	jmp    4212ce <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  421286:	test   r12,r12
  421289:	je     4212ce <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42128b:	cmp    DWORD PTR [r15+0x128],0x0
  421293:	je     42127c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  421295:	add    r15,0x130
  42129c:	mov    rdi,r15
  42129f:	mov    rsi,r12
  4212a2:	mov    rdx,rbx
  4212a5:	call   421a30 <flatcc_emitter_copy_buffer@@Base>
  4212aa:	test   rax,rax
  4212ad:	jne    4212dd <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  4212af:	lea    rdi,[rip+0x12b07]        # 433dbd <_IO_stdin_used@@Base+0xdbd>
  4212b6:	lea    rsi,[rip+0x15b65]        # 436e22 <flatcc_builder_padding_base@@Base+0x282>
  4212bd:	lea    rcx,[rip+0x16ad0]        # 437d94 <flatcc_builder_padding_base@@Base+0x11f4>
  4212c4:	mov    edx,0x786
  4212c9:	call   406070 <__assert_fail@plt>
  4212ce:	test   r14,r14
  4212d1:	je     4212da <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  4212d3:	mov    QWORD PTR [r14],0x0
  4212da:	xor    r12d,r12d
  4212dd:	mov    rax,r12
  4212e0:	add    rsp,0x8
  4212e4:	pop    rbx
  4212e5:	pop    r12
  4212e7:	pop    r14
  4212e9:	pop    r15
  4212eb:	ret    
  4212ec:	nop    DWORD PTR [rax+0x0]

00000000004212f0 <flatcc_builder_aligned_alloc@@Base>:
  4212f0:	push   rax
  4212f1:	mov    rax,rsi
  4212f4:	mov    QWORD PTR [rsp],0x0
  4212fc:	cmp    rdi,0x8
  421300:	mov    esi,0x8
  421305:	cmova  rsi,rdi
  421309:	mov    rdi,rsp
  42130c:	mov    rdx,rax
  42130f:	call   406140 <posix_memalign@plt>
  421314:	mov    ecx,eax
  421316:	mov    rax,QWORD PTR [rsp]
  42131a:	test   ecx,ecx
  42131c:	je     421335 <flatcc_builder_aligned_alloc@@Base+0x45>
  42131e:	test   rax,rax
  421321:	je     421335 <flatcc_builder_aligned_alloc@@Base+0x45>
  421323:	mov    rdi,rax
  421326:	call   406030 <free@plt>
  42132b:	mov    QWORD PTR [rsp],0x0
  421333:	xor    eax,eax
  421335:	pop    rcx
  421336:	ret    
  421337:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421340 <flatcc_builder_aligned_free@@Base>:
  421340:	jmp    406030 <free@plt>
  421345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42134f:	nop

0000000000421350 <flatcc_builder_get_emit_context@@Base>:
  421350:	mov    rax,QWORD PTR [rdi+0x38]
  421354:	ret    
  421355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42135f:	nop

0000000000421360 <flatcc_emitter_recycle_page@@Base>:
  421360:	mov    rcx,QWORD PTR [rdi]
  421363:	mov    eax,0xffffffff
  421368:	cmp    rcx,rsi
  42136b:	je     4213c2 <flatcc_emitter_recycle_page@@Base+0x62>
  42136d:	cmp    QWORD PTR [rdi+0x8],rsi
  421371:	je     4213c2 <flatcc_emitter_recycle_page@@Base+0x62>
  421373:	mov    rax,QWORD PTR [rsi+0xb80]
  42137a:	mov    rdx,QWORD PTR [rsi+0xb88]
  421381:	mov    QWORD PTR [rax+0xb88],rdx
  421388:	mov    rdx,QWORD PTR [rsi+0xb88]
  42138f:	mov    QWORD PTR [rdx+0xb80],rax
  421396:	mov    rax,QWORD PTR [rcx+0xb88]
  42139d:	mov    QWORD PTR [rsi+0xb88],rax
  4213a4:	mov    QWORD PTR [rsi+0xb80],rcx
  4213ab:	mov    QWORD PTR [rax+0xb80],rsi
  4213b2:	mov    rax,QWORD PTR [rsi+0xb80]
  4213b9:	mov    QWORD PTR [rax+0xb88],rsi
  4213c0:	xor    eax,eax
  4213c2:	ret    
  4213c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4213cd:	nop    DWORD PTR [rax]

00000000004213d0 <flatcc_emitter_reset@@Base>:
  4213d0:	push   r14
  4213d2:	push   rbx
  4213d3:	push   rax
  4213d4:	mov    rax,QWORD PTR [rdi]
  4213d7:	test   rax,rax
  4213da:	je     4214bb <flatcc_emitter_reset@@Base+0xeb>
  4213e0:	mov    rbx,rdi
  4213e3:	mov    QWORD PTR [rdi+0x8],rax
  4213e7:	lea    rcx,[rax+0x5c0]
  4213ee:	mov    QWORD PTR [rdi+0x10],rcx
  4213f2:	mov    QWORD PTR [rdi+0x20],rcx
  4213f6:	mov    QWORD PTR [rdi+0x18],0x5c0
  4213fe:	mov    QWORD PTR [rdi+0x28],0x5c0
  421406:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  421410:	mov    rcx,QWORD PTR [rdi+0x30]
  421414:	mov    rdx,QWORD PTR [rdi+0x40]
  421418:	test   rdx,rdx
  42141b:	jne    421424 <flatcc_emitter_reset@@Base+0x54>
  42141d:	mov    QWORD PTR [rbx+0x40],rcx
  421421:	mov    rdx,rcx
  421424:	lea    rdx,[rdx+rdx*2]
  421428:	shr    rdx,0x2
  42142c:	shr    rcx,0x2
  421430:	add    rcx,rdx
  421433:	mov    QWORD PTR [rbx+0x40],rcx
  421437:	mov    QWORD PTR [rbx+0x30],0x0
  42143f:	add    rcx,rcx
  421442:	cmp    rcx,QWORD PTR [rbx+0x38]
  421446:	jae    4214bb <flatcc_emitter_reset@@Base+0xeb>
  421448:	mov    rdi,QWORD PTR [rax+0xb80]
  42144f:	cmp    rdi,rax
  421452:	je     4214bb <flatcc_emitter_reset@@Base+0xeb>
  421454:	lea    rcx,[rax+0xb80]
  42145b:	mov    r14,0xfffffffffffff480
  421462:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42146c:	nop    DWORD PTR [rax+0x0]
  421470:	mov    rdx,QWORD PTR [rdi+0xb80]
  421477:	mov    QWORD PTR [rcx],rdx
  42147a:	mov    rcx,QWORD PTR [rdi+0xb80]
  421481:	mov    QWORD PTR [rcx+0xb88],rax
  421488:	call   406030 <free@plt>
  42148d:	mov    rax,QWORD PTR [rbx+0x38]
  421491:	add    rax,r14
  421494:	mov    QWORD PTR [rbx+0x38],rax
  421498:	mov    rcx,QWORD PTR [rbx+0x40]
  42149c:	add    rcx,rcx
  42149f:	cmp    rcx,rax
  4214a2:	jae    4214bb <flatcc_emitter_reset@@Base+0xeb>
  4214a4:	mov    rax,QWORD PTR [rbx+0x8]
  4214a8:	lea    rcx,[rax+0xb80]
  4214af:	mov    rdi,QWORD PTR [rax+0xb80]
  4214b6:	cmp    rdi,QWORD PTR [rbx]
  4214b9:	jne    421470 <flatcc_emitter_reset@@Base+0xa0>
  4214bb:	add    rsp,0x8
  4214bf:	pop    rbx
  4214c0:	pop    r14
  4214c2:	ret    
  4214c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4214cd:	nop    DWORD PTR [rax]

00000000004214d0 <flatcc_emitter_clear@@Base>:
  4214d0:	push   r14
  4214d2:	push   rbx
  4214d3:	push   rax
  4214d4:	mov    rbx,QWORD PTR [rdi]
  4214d7:	test   rbx,rbx
  4214da:	je     42153a <flatcc_emitter_clear@@Base+0x6a>
  4214dc:	mov    r14,rdi
  4214df:	mov    rax,QWORD PTR [rbx+0xb88]
  4214e6:	mov    QWORD PTR [rax+0xb80],0x0
  4214f1:	jmp    42150f <flatcc_emitter_clear@@Base+0x3f>
  4214f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4214fd:	nop    DWORD PTR [rax]
  421500:	mov    rbx,rax
  421503:	mov    rdi,QWORD PTR [rax+0xb88]
  42150a:	call   406030 <free@plt>
  42150f:	mov    rax,QWORD PTR [rbx+0xb80]
  421516:	test   rax,rax
  421519:	jne    421500 <flatcc_emitter_clear@@Base+0x30>
  42151b:	mov    rdi,rbx
  42151e:	call   406030 <free@plt>
  421523:	vxorps xmm0,xmm0,xmm0
  421527:	vmovups YMMWORD PTR [r14+0x20],ymm0
  42152d:	vmovups YMMWORD PTR [r14],ymm0
  421532:	mov    QWORD PTR [r14+0x40],0x0
  42153a:	add    rsp,0x8
  42153e:	pop    rbx
  42153f:	pop    r14
  421541:	vzeroupper 
  421544:	ret    
  421545:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42154f:	nop

0000000000421550 <flatcc_emitter@@Base>:
  421550:	push   rbp
  421551:	push   r15
  421553:	push   r14
  421555:	push   r13
  421557:	push   r12
  421559:	push   rbx
  42155a:	sub    rsp,0x18
  42155e:	mov    r13d,edx
  421561:	mov    r14,rsi
  421564:	mov    r12,rdi
  421567:	add    QWORD PTR [rdi+0x30],r8
  42156b:	test   ecx,ecx
  42156d:	js     421701 <flatcc_emitter@@Base+0x1b1>
  421573:	mov    rdx,QWORD PTR [r12+0x28]
  421578:	cmp    rdx,r8
  42157b:	jae    4218e8 <flatcc_emitter@@Base+0x398>
  421581:	xor    eax,eax
  421583:	test   r13d,r13d
  421586:	je     421a1f <flatcc_emitter@@Base+0x4cf>
  42158c:	mov    QWORD PTR [rsp+0x8],r13
  421591:	mov    r15,QWORD PTR [r14+0x8]
  421595:	test   r15,r15
  421598:	je     4216e6 <flatcc_emitter@@Base+0x196>
  42159e:	mov    r13,QWORD PTR [r14]
  4215a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4215ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4215b0:	mov    rbp,r15
  4215b3:	cmp    r15,rdx
  4215b6:	jbe    4216b8 <flatcc_emitter@@Base+0x168>
  4215bc:	mov    rbp,rdx
  4215bf:	nop
  4215c0:	test   rbp,rbp
  4215c3:	jne    4216b8 <flatcc_emitter@@Base+0x168>
  4215c9:	mov    rbx,QWORD PTR [r12+0x8]
  4215ce:	test   rbx,rbx
  4215d1:	je     4215e0 <flatcc_emitter@@Base+0x90>
  4215d3:	mov    rax,QWORD PTR [rbx+0xb80]
  4215da:	cmp    rax,QWORD PTR [r12]
  4215de:	jne    421621 <flatcc_emitter@@Base+0xd1>
  4215e0:	mov    edi,0xb98
  4215e5:	call   4060f0 <malloc@plt>
  4215ea:	test   rax,rax
  4215ed:	je     4218fd <flatcc_emitter@@Base+0x3ad>
  4215f3:	add    QWORD PTR [r12+0x38],0xb80
  4215fc:	test   rbx,rbx
  4215ff:	je     421660 <flatcc_emitter@@Base+0x110>
  421601:	mov    QWORD PTR [rax+0xb88],rbx
  421608:	mov    rcx,QWORD PTR [r12]
  42160c:	mov    QWORD PTR [rax+0xb80],rcx
  421613:	mov    QWORD PTR [rcx+0xb88],rax
  42161a:	mov    QWORD PTR [rbx+0xb80],rax
  421621:	mov    QWORD PTR [r12+0x8],rax
  421626:	mov    QWORD PTR [r12+0x20],rax
  42162b:	mov    QWORD PTR [r12+0x28],0xb80
  421634:	mov    rcx,QWORD PTR [rax+0xb88]
  42163b:	mov    ecx,DWORD PTR [rcx+0xb90]
  421641:	mov    edx,0xb80
  421646:	add    ecx,edx
  421648:	mov    DWORD PTR [rax+0xb90],ecx
  42164e:	mov    ebp,0xb80
  421653:	cmp    r15,rbp
  421656:	ja     4215c0 <flatcc_emitter@@Base+0x70>
  42165c:	jmp    4216b5 <flatcc_emitter@@Base+0x165>
  42165e:	xchg   ax,ax
  421660:	mov    QWORD PTR [r12],rax
  421664:	mov    QWORD PTR [r12+0x8],rax
  421669:	mov    QWORD PTR [rax+0xb80],rax
  421670:	mov    QWORD PTR [rax+0xb88],rax
  421677:	mov    rcx,rax
  42167a:	add    rcx,0x5c0
  421681:	mov    QWORD PTR [r12+0x10],rcx
  421686:	mov    QWORD PTR [r12+0x20],rcx
  42168b:	mov    QWORD PTR [r12+0x18],0x5c0
  421694:	mov    QWORD PTR [r12+0x28],0x5c0
  42169d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  4216a7:	mov    ebp,0x5c0
  4216ac:	cmp    r15,rbp
  4216af:	ja     4215c0 <flatcc_emitter@@Base+0x70>
  4216b5:	mov    rbp,r15
  4216b8:	mov    rdi,QWORD PTR [r12+0x20]
  4216bd:	mov    rsi,r13
  4216c0:	mov    rdx,rbp
  4216c3:	call   4060e0 <memcpy@plt>
  4216c8:	add    QWORD PTR [r12+0x20],rbp
  4216cd:	add    r13,rbp
  4216d0:	mov    rdx,QWORD PTR [r12+0x28]
  4216d5:	sub    rdx,rbp
  4216d8:	mov    QWORD PTR [r12+0x28],rdx
  4216dd:	sub    r15,rbp
  4216e0:	jne    4215b0 <flatcc_emitter@@Base+0x60>
  4216e6:	mov    r13,QWORD PTR [rsp+0x8]
  4216eb:	add    r13d,0xffffffff
  4216ef:	add    r14,0x10
  4216f3:	test   r13d,r13d
  4216f6:	jne    42158c <flatcc_emitter@@Base+0x3c>
  4216fc:	jmp    421a1d <flatcc_emitter@@Base+0x4cd>
  421701:	lea    rsi,[r12+0x18]
  421706:	mov    rdx,QWORD PTR [r12+0x18]
  42170b:	cmp    rdx,r8
  42170e:	jae    421907 <flatcc_emitter@@Base+0x3b7>
  421714:	xor    eax,eax
  421716:	test   r13d,r13d
  421719:	je     421a1f <flatcc_emitter@@Base+0x4cf>
  42171f:	mov    QWORD PTR [rsp+0x10],rsi
  421724:	movsxd rax,r13d
  421727:	shl    rax,0x4
  42172b:	add    r14,rax
  42172e:	mov    esi,0xfffff480
  421733:	mov    QWORD PTR [rsp+0x8],r13
  421738:	mov    r15,QWORD PTR [r14-0x8]
  42173c:	add    r14,0xfffffffffffffff0
  421740:	test   r15,r15
  421743:	je     4218d4 <flatcc_emitter@@Base+0x384>
  421749:	mov    r13,QWORD PTR [r14]
  42174c:	add    r13,r15
  42174f:	nop
  421750:	mov    rax,QWORD PTR [rsp+0x10]
  421755:	mov    rax,QWORD PTR [rax]
  421758:	cmp    r15,rax
  42175b:	jbe    4218a0 <flatcc_emitter@@Base+0x350>
  421761:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42176b:	nop    DWORD PTR [rax+rax*1+0x0]
  421770:	mov    rbp,rax
  421773:	test   rax,rax
  421776:	jne    4218a3 <flatcc_emitter@@Base+0x353>
  42177c:	mov    rbx,QWORD PTR [r12]
  421780:	test   rbx,rbx
  421783:	je     4217b0 <flatcc_emitter@@Base+0x260>
  421785:	mov    rax,QWORD PTR [rbx+0xb88]
  42178c:	cmp    rax,QWORD PTR [r12+0x8]
  421791:	je     4217b0 <flatcc_emitter@@Base+0x260>
  421793:	mov    edx,DWORD PTR [rbx+0xb90]
  421799:	add    edx,esi
  42179b:	lea    rcx,[rax+0xb90]
  4217a2:	mov    DWORD PTR [rax+0xb90],edx
  4217a8:	mov    QWORD PTR [r12],rax
  4217ac:	jmp    421805 <flatcc_emitter@@Base+0x2b5>
  4217ae:	xchg   ax,ax
  4217b0:	mov    edi,0xb98
  4217b5:	call   4060f0 <malloc@plt>
  4217ba:	test   rax,rax
  4217bd:	je     4218fd <flatcc_emitter@@Base+0x3ad>
  4217c3:	add    QWORD PTR [r12+0x38],0xb80
  4217cc:	test   rbx,rbx
  4217cf:	je     421840 <flatcc_emitter@@Base+0x2f0>
  4217d1:	mov    rcx,QWORD PTR [r12+0x8]
  4217d6:	mov    QWORD PTR [rax+0xb88],rcx
  4217dd:	mov    QWORD PTR [rax+0xb80],rbx
  4217e4:	mov    QWORD PTR [rbx+0xb88],rax
  4217eb:	mov    QWORD PTR [rcx+0xb80],rax
  4217f2:	mov    QWORD PTR [r12],rax
  4217f6:	mov    rcx,rax
  4217f9:	add    rcx,0xb90
  421800:	mov    esi,0xfffff480
  421805:	lea    rdx,[rax+0xb80]
  42180c:	mov    QWORD PTR [r12+0x10],rdx
  421811:	mov    QWORD PTR [r12+0x18],0xb80
  42181a:	mov    rax,QWORD PTR [rax+0xb80]
  421821:	mov    eax,DWORD PTR [rax+0xb90]
  421827:	add    eax,esi
  421829:	mov    DWORD PTR [rcx],eax
  42182b:	mov    eax,0xb80
  421830:	cmp    r15,rax
  421833:	ja     421770 <flatcc_emitter@@Base+0x220>
  421839:	jmp    4218a0 <flatcc_emitter@@Base+0x350>
  42183b:	nop    DWORD PTR [rax+rax*1+0x0]
  421840:	mov    QWORD PTR [r12],rax
  421844:	mov    QWORD PTR [r12+0x8],rax
  421849:	mov    QWORD PTR [rax+0xb80],rax
  421850:	mov    QWORD PTR [rax+0xb88],rax
  421857:	mov    rcx,rax
  42185a:	add    rcx,0x5c0
  421861:	mov    QWORD PTR [r12+0x10],rcx
  421866:	mov    QWORD PTR [r12+0x20],rcx
  42186b:	mov    QWORD PTR [r12+0x18],0x5c0
  421874:	mov    QWORD PTR [r12+0x28],0x5c0
  42187d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  421887:	mov    eax,0x5c0
  42188c:	mov    esi,0xfffff480
  421891:	cmp    r15,rax
  421894:	ja     421770 <flatcc_emitter@@Base+0x220>
  42189a:	nop    WORD PTR [rax+rax*1+0x0]
  4218a0:	mov    rbp,r15
  4218a3:	mov    rdi,QWORD PTR [r12+0x10]
  4218a8:	sub    rdi,rbp
  4218ab:	mov    QWORD PTR [r12+0x10],rdi
  4218b0:	sub    rax,rbp
  4218b3:	mov    QWORD PTR [r12+0x18],rax
  4218b8:	sub    r13,rbp
  4218bb:	mov    rsi,r13
  4218be:	mov    rdx,rbp
  4218c1:	call   4060e0 <memcpy@plt>
  4218c6:	mov    esi,0xfffff480
  4218cb:	sub    r15,rbp
  4218ce:	jne    421750 <flatcc_emitter@@Base+0x200>
  4218d4:	mov    r13,QWORD PTR [rsp+0x8]
  4218d9:	add    r13d,0xffffffff
  4218dd:	jne    421733 <flatcc_emitter@@Base+0x1e3>
  4218e3:	jmp    421a1d <flatcc_emitter@@Base+0x4cd>
  4218e8:	lea    rsi,[r12+0x28]
  4218ed:	mov    rbp,QWORD PTR [r12+0x20]
  4218f2:	lea    rcx,[r8+rbp*1]
  4218f6:	mov    QWORD PTR [r12+0x20],rcx
  4218fb:	jmp    421914 <flatcc_emitter@@Base+0x3c4>
  4218fd:	mov    eax,0xffffffff
  421902:	jmp    421a1f <flatcc_emitter@@Base+0x4cf>
  421907:	mov    rbp,QWORD PTR [r12+0x10]
  42190c:	sub    rbp,r8
  42190f:	mov    QWORD PTR [r12+0x10],rbp
  421914:	sub    rdx,r8
  421917:	mov    QWORD PTR [rsi],rdx
  42191a:	xor    eax,eax
  42191c:	test   r13d,r13d
  42191f:	je     421a1f <flatcc_emitter@@Base+0x4cf>
  421925:	lea    r15d,[r13-0x1]
  421929:	mov    r12d,r13d
  42192c:	and    r12d,0x7
  421930:	je     421962 <flatcc_emitter@@Base+0x412>
  421932:	xor    ebx,ebx
  421934:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42193e:	xchg   ax,ax
  421940:	mov    rsi,QWORD PTR [r14]
  421943:	mov    rdx,QWORD PTR [r14+0x8]
  421947:	mov    rdi,rbp
  42194a:	call   4060e0 <memcpy@plt>
  42194f:	add    rbp,QWORD PTR [r14+0x8]
  421953:	add    r14,0x10
  421957:	add    ebx,0x1
  42195a:	cmp    r12d,ebx
  42195d:	jne    421940 <flatcc_emitter@@Base+0x3f0>
  42195f:	sub    r13d,ebx
  421962:	cmp    r15d,0x7
  421966:	jb     421a1d <flatcc_emitter@@Base+0x4cd>
  42196c:	nop    DWORD PTR [rax+0x0]
  421970:	mov    rsi,QWORD PTR [r14]
  421973:	mov    rdx,QWORD PTR [r14+0x8]
  421977:	mov    rdi,rbp
  42197a:	call   4060e0 <memcpy@plt>
  42197f:	add    rbp,QWORD PTR [r14+0x8]
  421983:	mov    rsi,QWORD PTR [r14+0x10]
  421987:	mov    rdx,QWORD PTR [r14+0x18]
  42198b:	mov    rdi,rbp
  42198e:	call   4060e0 <memcpy@plt>
  421993:	add    rbp,QWORD PTR [r14+0x18]
  421997:	mov    rsi,QWORD PTR [r14+0x20]
  42199b:	mov    rdx,QWORD PTR [r14+0x28]
  42199f:	mov    rdi,rbp
  4219a2:	call   4060e0 <memcpy@plt>
  4219a7:	add    rbp,QWORD PTR [r14+0x28]
  4219ab:	mov    rsi,QWORD PTR [r14+0x30]
  4219af:	mov    rdx,QWORD PTR [r14+0x38]
  4219b3:	mov    rdi,rbp
  4219b6:	call   4060e0 <memcpy@plt>
  4219bb:	add    rbp,QWORD PTR [r14+0x38]
  4219bf:	mov    rsi,QWORD PTR [r14+0x40]
  4219c3:	mov    rdx,QWORD PTR [r14+0x48]
  4219c7:	mov    rdi,rbp
  4219ca:	call   4060e0 <memcpy@plt>
  4219cf:	add    rbp,QWORD PTR [r14+0x48]
  4219d3:	mov    rsi,QWORD PTR [r14+0x50]
  4219d7:	mov    rdx,QWORD PTR [r14+0x58]
  4219db:	mov    rdi,rbp
  4219de:	call   4060e0 <memcpy@plt>
  4219e3:	add    rbp,QWORD PTR [r14+0x58]
  4219e7:	mov    rsi,QWORD PTR [r14+0x60]
  4219eb:	mov    rdx,QWORD PTR [r14+0x68]
  4219ef:	mov    rdi,rbp
  4219f2:	call   4060e0 <memcpy@plt>
  4219f7:	add    rbp,QWORD PTR [r14+0x68]
  4219fb:	mov    rsi,QWORD PTR [r14+0x70]
  4219ff:	mov    rdx,QWORD PTR [r14+0x78]
  421a03:	mov    rdi,rbp
  421a06:	call   4060e0 <memcpy@plt>
  421a0b:	add    rbp,QWORD PTR [r14+0x78]
  421a0f:	sub    r14,0xffffffffffffff80
  421a13:	add    r13d,0xfffffff8
  421a17:	jne    421970 <flatcc_emitter@@Base+0x420>
  421a1d:	xor    eax,eax
  421a1f:	add    rsp,0x18
  421a23:	pop    rbx
  421a24:	pop    r12
  421a26:	pop    r13
  421a28:	pop    r14
  421a2a:	pop    r15
  421a2c:	pop    rbp
  421a2d:	ret    
  421a2e:	xchg   ax,ax

0000000000421a30 <flatcc_emitter_copy_buffer@@Base>:
  421a30:	push   r15
  421a32:	push   r14
  421a34:	push   r12
  421a36:	push   rbx
  421a37:	push   rax
  421a38:	mov    rax,rdx
  421a3b:	mov    rdx,QWORD PTR [rdi+0x30]
  421a3f:	cmp    rdx,rax
  421a42:	ja     421acd <flatcc_emitter_copy_buffer@@Base+0x9d>
  421a48:	mov    r14,rdi
  421a4b:	mov    rax,QWORD PTR [rdi]
  421a4e:	test   rax,rax
  421a51:	je     421acd <flatcc_emitter_copy_buffer@@Base+0x9d>
  421a53:	mov    r15,rsi
  421a56:	cmp    rax,QWORD PTR [r14+0x8]
  421a5a:	je     421adf <flatcc_emitter_copy_buffer@@Base+0xaf>
  421a60:	mov    r12d,0xb80
  421a66:	sub    r12,QWORD PTR [r14+0x18]
  421a6a:	mov    rsi,QWORD PTR [r14+0x10]
  421a6e:	mov    rdi,r15
  421a71:	mov    rdx,r12
  421a74:	call   4060e0 <memcpy@plt>
  421a79:	add    r12,r15
  421a7c:	mov    rax,QWORD PTR [r14]
  421a7f:	mov    rbx,QWORD PTR [rax+0xb80]
  421a86:	cmp    rbx,QWORD PTR [r14+0x8]
  421a8a:	je     421ab4 <flatcc_emitter_copy_buffer@@Base+0x84>
  421a8c:	nop    DWORD PTR [rax+0x0]
  421a90:	mov    edx,0xb80
  421a95:	mov    rdi,r12
  421a98:	mov    rsi,rbx
  421a9b:	call   4060e0 <memcpy@plt>
  421aa0:	add    r12,0xb80
  421aa7:	mov    rbx,QWORD PTR [rbx+0xb80]
  421aae:	cmp    rbx,QWORD PTR [r14+0x8]
  421ab2:	jne    421a90 <flatcc_emitter_copy_buffer@@Base+0x60>
  421ab4:	mov    edx,0xb80
  421ab9:	sub    rdx,QWORD PTR [r14+0x28]
  421abd:	mov    rdi,r12
  421ac0:	mov    rsi,rbx
  421ac3:	call   4060e0 <memcpy@plt>
  421ac8:	mov    r15,r12
  421acb:	jmp    421ad0 <flatcc_emitter_copy_buffer@@Base+0xa0>
  421acd:	xor    r15d,r15d
  421ad0:	mov    rax,r15
  421ad3:	add    rsp,0x8
  421ad7:	pop    rbx
  421ad8:	pop    r12
  421ada:	pop    r14
  421adc:	pop    r15
  421ade:	ret    
  421adf:	mov    rsi,QWORD PTR [r14+0x10]
  421ae3:	mov    rdi,r15
  421ae6:	call   4060e0 <memcpy@plt>
  421aeb:	jmp    421ad0 <flatcc_emitter_copy_buffer@@Base+0xa0>
  421aed:	nop    DWORD PTR [rax]

0000000000421af0 <flatcc_verify_error_string@@Base>:
  421af0:	cmp    edi,0x24
  421af3:	ja     421b04 <flatcc_verify_error_string@@Base+0x14>
  421af5:	movsxd rax,edi
  421af8:	lea    rcx,[rip+0x1f091]        # 440b90 <flatcc_builder_padding_base@@Base+0x9ff0>
  421aff:	mov    rax,QWORD PTR [rcx+rax*8]
  421b03:	ret    
  421b04:	lea    rax,[rip+0x16995]        # 4384a0 <flatcc_builder_padding_base@@Base+0x1900>
  421b0b:	ret    
  421b0c:	nop    DWORD PTR [rax+0x0]

0000000000421b10 <flatcc_verify_field@@Base>:
  421b10:	lea    esi,[rsi+rsi*1]
  421b13:	add    esi,0x4
  421b16:	xor    eax,eax
  421b18:	cmp    si,WORD PTR [rdi+0x1e]
  421b1c:	jae    421b62 <flatcc_verify_field@@Base+0x52>
  421b1e:	mov    r8,QWORD PTR [rdi+0x10]
  421b22:	movzx  esi,si
  421b25:	movzx  esi,WORD PTR [r8+rsi*1]
  421b2a:	test   esi,esi
  421b2c:	je     421b62 <flatcc_verify_field@@Base+0x52>
  421b2e:	add    edx,esi
  421b30:	movzx  r8d,WORD PTR [rdi+0x1c]
  421b35:	mov    eax,0xd
  421b3a:	cmp    edx,r8d
  421b3d:	ja     421b62 <flatcc_verify_field@@Base+0x52>
  421b3f:	add    esi,DWORD PTR [rdi]
  421b41:	mov    edx,DWORD PTR [rdi+0x18]
  421b44:	add    edx,esi
  421b46:	movzx  ecx,cx
  421b49:	add    ecx,0xffffffff
  421b4c:	mov    eax,0x0
  421b51:	test   edx,ecx
  421b53:	je     421b62 <flatcc_verify_field@@Base+0x52>
  421b55:	add    esi,DWORD PTR [rdi+0x18]
  421b58:	and    esi,ecx
  421b5a:	mov    eax,0xc
  421b5f:	cmove  eax,esi
  421b62:	ret    
  421b63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b6d:	nop    DWORD PTR [rax]

0000000000421b70 <flatcc_verify_string_field@@Base>:
  421b70:	lea    eax,[rsi+rsi*1]
  421b73:	add    eax,0x4
  421b76:	cmp    ax,WORD PTR [rdi+0x1e]
  421b7a:	jae    421baa <flatcc_verify_string_field@@Base+0x3a>
  421b7c:	mov    rcx,QWORD PTR [rdi+0x10]
  421b80:	movzx  eax,ax
  421b83:	movzx  esi,WORD PTR [rcx+rax*1]
  421b87:	test   esi,esi
  421b89:	je     421baa <flatcc_verify_string_field@@Base+0x3a>
  421b8b:	lea    ecx,[rsi+0x4]
  421b8e:	movzx  edx,WORD PTR [rdi+0x1c]
  421b92:	mov    eax,0xd
  421b97:	cmp    ecx,edx
  421b99:	ja     421ba9 <flatcc_verify_string_field@@Base+0x39>
  421b9b:	add    esi,DWORD PTR [rdi+0x18]
  421b9e:	mov    eax,0xc
  421ba3:	test   sil,0x3
  421ba7:	je     421bb5 <flatcc_verify_string_field@@Base+0x45>
  421ba9:	ret    
  421baa:	xor    eax,eax
  421bac:	test   edx,edx
  421bae:	setne  al
  421bb1:	shl    eax,0x2
  421bb4:	ret    
  421bb5:	test   esi,esi
  421bb7:	je     421c0f <flatcc_verify_string_field@@Base+0x9f>
  421bb9:	mov    rcx,QWORD PTR [rdi]
  421bbc:	mov    eax,esi
  421bbe:	mov    edx,DWORD PTR [rcx+rax*1]
  421bc1:	add    edx,esi
  421bc3:	mov    eax,0x11
  421bc8:	cmp    edx,esi
  421bca:	jbe    421ba9 <flatcc_verify_string_field@@Base+0x39>
  421bcc:	mov    r8d,DWORD PTR [rdi+0x8]
  421bd0:	mov    edi,edx
  421bd2:	lea    rsi,[rdi+0x4]
  421bd6:	cmp    rsi,r8
  421bd9:	ja     421ba9 <flatcc_verify_string_field@@Base+0x39>
  421bdb:	mov    esi,edi
  421bdd:	and    esi,0x3
  421be0:	test   rsi,rsi
  421be3:	jne    421ba9 <flatcc_verify_string_field@@Base+0x39>
  421be5:	mov    edi,DWORD PTR [rcx+rdi*1]
  421be8:	add    edx,0x4
  421beb:	sub    r8d,edx
  421bee:	lea    esi,[rdi+0x1]
  421bf1:	mov    eax,0x8
  421bf6:	cmp    r8d,esi
  421bf9:	jb     421ba9 <flatcc_verify_string_field@@Base+0x39>
  421bfb:	mov    eax,edx
  421bfd:	add    rcx,rax
  421c00:	xor    edx,edx
  421c02:	cmp    BYTE PTR [rdi+rcx*1],0x0
  421c06:	mov    eax,0x7
  421c0b:	cmove  eax,edx
  421c0e:	ret    
  421c0f:	xor    eax,eax
  421c11:	ret    
  421c12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c1c:	nop    DWORD PTR [rax+0x0]

0000000000421c20 <flatcc_verify_vector_field@@Base>:
  421c20:	lea    eax,[rsi+rsi*1]
  421c23:	add    eax,0x4
  421c26:	cmp    ax,WORD PTR [rdi+0x1e]
  421c2a:	jae    421c5c <flatcc_verify_vector_field@@Base+0x3c>
  421c2c:	mov    rsi,QWORD PTR [rdi+0x10]
  421c30:	movzx  eax,ax
  421c33:	movzx  esi,WORD PTR [rsi+rax*1]
  421c37:	test   esi,esi
  421c39:	je     421c5c <flatcc_verify_vector_field@@Base+0x3c>
  421c3b:	lea    r10d,[rsi+0x4]
  421c3f:	movzx  edx,WORD PTR [rdi+0x1c]
  421c43:	mov    eax,0xd
  421c48:	cmp    r10d,edx
  421c4b:	ja     421c5b <flatcc_verify_vector_field@@Base+0x3b>
  421c4d:	add    esi,DWORD PTR [rdi+0x18]
  421c50:	mov    eax,0xc
  421c55:	test   sil,0x3
  421c59:	je     421c67 <flatcc_verify_vector_field@@Base+0x47>
  421c5b:	ret    
  421c5c:	xor    eax,eax
  421c5e:	test   edx,edx
  421c60:	setne  al
  421c63:	shl    eax,0x2
  421c66:	ret    
  421c67:	test   esi,esi
  421c69:	je     421ce1 <flatcc_verify_vector_field@@Base+0xc1>
  421c6b:	mov    r10,QWORD PTR [rdi]
  421c6e:	mov    eax,esi
  421c70:	mov    r11d,DWORD PTR [r10+rax*1]
  421c74:	add    r11d,esi
  421c77:	movzx  eax,r8w
  421c7b:	cmp    eax,0x4
  421c7e:	mov    edx,0x4
  421c83:	cmova  edx,eax
  421c86:	mov    eax,0x10
  421c8b:	cmp    r11d,esi
  421c8e:	jbe    421c5b <flatcc_verify_vector_field@@Base+0x3b>
  421c90:	mov    r8d,DWORD PTR [rdi+0x8]
  421c94:	mov    edi,r11d
  421c97:	lea    rsi,[rdi+0x4]
  421c9b:	cmp    rsi,r8
  421c9e:	ja     421c5b <flatcc_verify_vector_field@@Base+0x3b>
  421ca0:	push   rbx
  421ca1:	movzx  edx,dx
  421ca4:	movabs rbx,0x1ffffffff
  421cae:	add    rbx,rdx
  421cb1:	or     rbx,0x3
  421cb5:	test   rsi,rbx
  421cb8:	pop    rbx
  421cb9:	jne    421c5b <flatcc_verify_vector_field@@Base+0x3b>
  421cbb:	mov    edx,DWORD PTR [r10+rdi*1]
  421cbf:	mov    eax,0x19
  421cc4:	cmp    edx,r9d
  421cc7:	ja     421c5b <flatcc_verify_vector_field@@Base+0x3b>
  421cc9:	add    r8d,0xfffffffc
  421ccd:	sub    r8d,r11d
  421cd0:	imul   edx,ecx
  421cd3:	xor    ecx,ecx
  421cd5:	cmp    r8d,edx
  421cd8:	mov    eax,0x1a
  421cdd:	cmovae eax,ecx
  421ce0:	ret    
  421ce1:	xor    eax,eax
  421ce3:	ret    
  421ce4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421cee:	xchg   ax,ax

0000000000421cf0 <flatcc_verify_string_vector_field@@Base>:
  421cf0:	push   r14
  421cf2:	push   rbx
  421cf3:	lea    eax,[rsi+rsi*1]
  421cf6:	add    eax,0x4
  421cf9:	cmp    ax,WORD PTR [rdi+0x1e]
  421cfd:	jae    421e2d <flatcc_verify_string_vector_field@@Base+0x13d>
  421d03:	mov    rcx,QWORD PTR [rdi+0x10]
  421d07:	movzx  eax,ax
  421d0a:	movzx  esi,WORD PTR [rcx+rax*1]
  421d0e:	test   esi,esi
  421d10:	je     421e2d <flatcc_verify_string_vector_field@@Base+0x13d>
  421d16:	lea    ecx,[rsi+0x4]
  421d19:	movzx  edx,WORD PTR [rdi+0x1c]
  421d1d:	mov    eax,0xd
  421d22:	cmp    ecx,edx
  421d24:	ja     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d2a:	mov    edx,DWORD PTR [rdi+0x18]
  421d2d:	lea    ebx,[rdx+rsi*1]
  421d30:	mov    eax,0xc
  421d35:	test   bl,0x3
  421d38:	jne    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d3e:	xor    eax,eax
  421d40:	test   ebx,ebx
  421d42:	je     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d48:	mov    r10,QWORD PTR [rdi]
  421d4b:	mov    eax,ebx
  421d4d:	mov    r14d,DWORD PTR [r10+rax*1]
  421d51:	lea    ecx,[r14+rbx*1]
  421d55:	mov    eax,0x10
  421d5a:	cmp    ecx,ebx
  421d5c:	jbe    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d62:	test   cl,0x3
  421d65:	jne    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d6b:	mov    r9d,DWORD PTR [rdi+0x8]
  421d6f:	mov    edi,ecx
  421d71:	lea    rbx,[rdi+0x4]
  421d75:	cmp    rbx,r9
  421d78:	ja     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d7e:	mov    r8d,DWORD PTR [r10+rdi*1]
  421d82:	mov    eax,0x19
  421d87:	cmp    r8d,0x3fffffff
  421d8e:	ja     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421d94:	lea    edi,[r9-0x4]
  421d98:	sub    edi,ecx
  421d9a:	lea    ecx,[r8*4+0x0]
  421da2:	mov    eax,0x1a
  421da7:	cmp    edi,ecx
  421da9:	jb     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421daf:	mov    eax,0x0
  421db4:	test   r8d,r8d
  421db7:	je     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421db9:	lea    eax,[r14+rdx*1]
  421dbd:	lea    edi,[rsi+rax*1]
  421dc0:	add    edi,0x4
  421dc3:	lea    r11d,[r9-0x8]
  421dc7:	sub    r11d,esi
  421dca:	sub    r11d,r14d
  421dcd:	sub    r11d,edx
  421dd0:	xor    edx,edx
  421dd2:	mov    eax,edi
  421dd4:	mov    ecx,DWORD PTR [r10+rax*1]
  421dd8:	lea    esi,[rdi+rcx*1]
  421ddb:	mov    eax,0x11
  421de0:	cmp    esi,edi
  421de2:	jbe    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421de4:	mov    esi,esi
  421de6:	lea    rbx,[rsi+0x4]
  421dea:	cmp    rbx,r9
  421ded:	ja     421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421def:	mov    ebx,esi
  421df1:	and    ebx,0x3
  421df4:	test   rbx,rbx
  421df7:	jne    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421df9:	mov    eax,DWORD PTR [r10+rsi*1]
  421dfd:	mov    esi,r11d
  421e00:	sub    esi,ecx
  421e02:	lea    ebx,[rax+0x1]
  421e05:	cmp    esi,ebx
  421e07:	jb     421e3b <flatcc_verify_string_vector_field@@Base+0x14b>
  421e09:	lea    ecx,[rdi+rcx*1]
  421e0c:	add    ecx,0x4
  421e0f:	mov    ecx,ecx
  421e11:	add    rcx,r10
  421e14:	cmp    BYTE PTR [rax+rcx*1],0x0
  421e18:	jne    421e42 <flatcc_verify_string_vector_field@@Base+0x152>
  421e1a:	add    edx,0x1
  421e1d:	add    edi,0x4
  421e20:	add    r11d,0xfffffffc
  421e24:	xor    eax,eax
  421e26:	cmp    edx,r8d
  421e29:	jb     421dd2 <flatcc_verify_string_vector_field@@Base+0xe2>
  421e2b:	jmp    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421e2d:	xor    eax,eax
  421e2f:	test   edx,edx
  421e31:	setne  al
  421e34:	shl    eax,0x2
  421e37:	pop    rbx
  421e38:	pop    r14
  421e3a:	ret    
  421e3b:	mov    eax,0x8
  421e40:	jmp    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421e42:	mov    eax,0x7
  421e47:	jmp    421e37 <flatcc_verify_string_vector_field@@Base+0x147>
  421e49:	nop    DWORD PTR [rax+0x0]

0000000000421e50 <flatcc_verify_table_field@@Base>:
  421e50:	lea    eax,[rsi+rsi*1]
  421e53:	add    eax,0x4
  421e56:	cmp    ax,WORD PTR [rdi+0x1e]
  421e5a:	jae    421e8c <flatcc_verify_table_field@@Base+0x3c>
  421e5c:	mov    rsi,QWORD PTR [rdi+0x10]
  421e60:	movzx  eax,ax
  421e63:	movzx  esi,WORD PTR [rsi+rax*1]
  421e67:	test   esi,esi
  421e69:	je     421e8c <flatcc_verify_table_field@@Base+0x3c>
  421e6b:	lea    r8d,[rsi+0x4]
  421e6f:	movzx  edx,WORD PTR [rdi+0x1c]
  421e73:	mov    eax,0xd
  421e78:	cmp    r8d,edx
  421e7b:	ja     421e8b <flatcc_verify_table_field@@Base+0x3b>
  421e7d:	add    esi,DWORD PTR [rdi+0x18]
  421e80:	mov    eax,0xc
  421e85:	test   sil,0x3
  421e89:	je     421e97 <flatcc_verify_table_field@@Base+0x47>
  421e8b:	ret    
  421e8c:	xor    eax,eax
  421e8e:	test   edx,edx
  421e90:	setne  al
  421e93:	shl    eax,0x2
  421e96:	ret    
  421e97:	test   esi,esi
  421e99:	je     421f7f <flatcc_verify_table_field@@Base+0x12f>
  421e9f:	sub    rsp,0x28
  421ea3:	mov    r10,QWORD PTR [rdi]
  421ea6:	mov    r8d,DWORD PTR [rdi+0x8]
  421eaa:	mov    eax,esi
  421eac:	mov    edx,DWORD PTR [r10+rax*1]
  421eb0:	mov    eax,DWORD PTR [rdi+0xc]
  421eb3:	add    eax,0xffffffff
  421eb6:	mov    DWORD PTR [rsp+0x14],eax
  421eba:	je     421f82 <flatcc_verify_table_field@@Base+0x132>
  421ec0:	add    edx,esi
  421ec2:	mov    eax,0xf
  421ec7:	cmp    edx,esi
  421ec9:	jbe    421f87 <flatcc_verify_table_field@@Base+0x137>
  421ecf:	mov    esi,edx
  421ed1:	lea    rdi,[rsi+0x4]
  421ed5:	cmp    rdi,r8
  421ed8:	ja     421f87 <flatcc_verify_table_field@@Base+0x137>
  421ede:	mov    edi,esi
  421ee0:	and    edi,0x3
  421ee3:	test   rdi,rdi
  421ee6:	jne    421f87 <flatcc_verify_table_field@@Base+0x137>
  421eec:	mov    DWORD PTR [rsp+0x20],edx
  421ef0:	mov    edi,edx
  421ef2:	sub    edi,DWORD PTR [r10+rsi*1]
  421ef6:	mov    eax,0x1d
  421efb:	test   edi,0x80000001
  421f01:	jne    421f87 <flatcc_verify_table_field@@Base+0x137>
  421f07:	mov    r9d,edi
  421f0a:	lea    rsi,[r9+0x2]
  421f0e:	mov    eax,0x1b
  421f13:	cmp    rsi,r8
  421f16:	ja     421f87 <flatcc_verify_table_field@@Base+0x137>
  421f18:	movzx  r11d,WORD PTR [r10+r9*1]
  421f1d:	mov    WORD PTR [rsp+0x26],r11w
  421f23:	mov    eax,0x1e
  421f28:	test   r11b,0x1
  421f2c:	jne    421f87 <flatcc_verify_table_field@@Base+0x137>
  421f2e:	mov    esi,r11d
  421f31:	add    esi,edi
  421f33:	cmp    esi,r8d
  421f36:	ja     421f87 <flatcc_verify_table_field@@Base+0x137>
  421f38:	movzx  esi,r11w
  421f3c:	mov    eax,0x1c
  421f41:	cmp    esi,0x4
  421f44:	jb     421f87 <flatcc_verify_table_field@@Base+0x137>
  421f46:	add    edi,0x2
  421f49:	movzx  esi,WORD PTR [r10+rdi*1]
  421f4e:	mov    WORD PTR [rsp+0x24],si
  421f53:	mov    edi,r8d
  421f56:	sub    edi,edx
  421f58:	mov    eax,0x14
  421f5d:	cmp    edi,esi
  421f5f:	jb     421f87 <flatcc_verify_table_field@@Base+0x137>
  421f61:	add    r9,r10
  421f64:	mov    QWORD PTR [rsp+0x18],r9
  421f69:	mov    QWORD PTR [rsp+0x8],r10
  421f6e:	mov    DWORD PTR [rsp+0x10],r8d
  421f73:	lea    rdi,[rsp+0x8]
  421f78:	call   rcx
  421f7a:	add    rsp,0x28
  421f7e:	ret    
  421f7f:	xor    eax,eax
  421f81:	ret    
  421f82:	mov    eax,0x3
  421f87:	add    rsp,0x28
  421f8b:	ret    
  421f8c:	nop    DWORD PTR [rax+0x0]

0000000000421f90 <flatcc_verify_table_vector_field@@Base>:
  421f90:	push   rbp
  421f91:	push   r15
  421f93:	push   r14
  421f95:	push   r13
  421f97:	push   r12
  421f99:	push   rbx
  421f9a:	sub    rsp,0x38
  421f9e:	lea    eax,[rsi+rsi*1]
  421fa1:	add    eax,0x4
  421fa4:	cmp    ax,WORD PTR [rdi+0x1e]
  421fa8:	jae    4221b1 <flatcc_verify_table_vector_field@@Base+0x221>
  421fae:	mov    rbx,rcx
  421fb1:	mov    rcx,QWORD PTR [rdi+0x10]
  421fb5:	movzx  eax,ax
  421fb8:	movzx  ecx,WORD PTR [rcx+rax*1]
  421fbc:	test   ecx,ecx
  421fbe:	je     4221b1 <flatcc_verify_table_vector_field@@Base+0x221>
  421fc4:	lea    edx,[rcx+0x4]
  421fc7:	movzx  esi,WORD PTR [rdi+0x1c]
  421fcb:	mov    eax,0xd
  421fd0:	cmp    edx,esi
  421fd2:	ja     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  421fd8:	mov    edx,DWORD PTR [rdi+0x18]
  421fdb:	lea    esi,[rdx+rcx*1]
  421fde:	mov    eax,0xc
  421fe3:	test   sil,0x3
  421fe7:	jne    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  421fed:	xor    eax,eax
  421fef:	test   esi,esi
  421ff1:	je     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  421ff7:	mov    r12d,DWORD PTR [rdi+0xc]
  421ffb:	test   r12d,r12d
  421ffe:	jle    4221ca <flatcc_verify_table_vector_field@@Base+0x23a>
  422004:	mov    r15,QWORD PTR [rdi]
  422007:	mov    eax,esi
  422009:	mov    r8d,DWORD PTR [r15+rax*1]
  42200d:	lea    ebp,[r8+rsi*1]
  422011:	mov    eax,0x10
  422016:	cmp    ebp,esi
  422018:	jbe    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  42201e:	test   bpl,0x3
  422022:	jne    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422028:	mov    r9d,DWORD PTR [rdi+0x8]
  42202c:	mov    esi,ebp
  42202e:	lea    rdi,[rsi+0x4]
  422032:	cmp    rdi,r9
  422035:	ja     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  42203b:	mov    r10d,DWORD PTR [r15+rsi*1]
  42203f:	mov    eax,0x19
  422044:	cmp    r10d,0x3fffffff
  42204b:	ja     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422051:	lea    r11d,[r9-0x4]
  422055:	mov    esi,r11d
  422058:	sub    esi,ebp
  42205a:	lea    edi,[r10*4+0x0]
  422062:	mov    eax,0x1a
  422067:	cmp    esi,edi
  422069:	jb     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  42206f:	mov    eax,0x0
  422074:	test   r10d,r10d
  422077:	je     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  42207d:	add    r12d,0xfffffffe
  422081:	lea    eax,[r8+rdx*1]
  422085:	lea    r13d,[rcx+rax*1]
  422089:	add    r13d,0x4
  42208d:	sub    r11d,ecx
  422090:	sub    r11d,r8d
  422093:	sub    r11d,edx
  422096:	xor    ecx,ecx
  422098:	mov    QWORD PTR [rsp+0x30],r9
  42209d:	mov    QWORD PTR [rsp+0x28],r15
  4220a2:	mov    r13d,r13d
  4220a5:	mov    r14d,DWORD PTR [r15+r13*1]
  4220a9:	mov    DWORD PTR [rsp+0x14],r12d
  4220ae:	test   r12d,r12d
  4220b1:	je     422299 <flatcc_verify_table_vector_field@@Base+0x309>
  4220b7:	lea    eax,[r14+r13*1]
  4220bb:	cmp    eax,r13d
  4220be:	jbe    4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  4220c4:	mov    edx,eax
  4220c6:	lea    rsi,[rdx+0x4]
  4220ca:	cmp    rsi,r9
  4220cd:	ja     4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  4220d3:	mov    esi,edx
  4220d5:	and    esi,0x3
  4220d8:	test   rsi,rsi
  4220db:	jne    4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  4220e1:	mov    DWORD PTR [rsp+0x20],eax
  4220e5:	mov    esi,DWORD PTR [r15+rdx*1]
  4220e9:	mov    edx,r14d
  4220ec:	sub    edx,esi
  4220ee:	lea    eax,[rdx+r13*1]
  4220f2:	test   eax,0x80000001
  4220f7:	jne    4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  4220fd:	mov    eax,eax
  4220ff:	lea    rdi,[rax+0x2]
  422103:	cmp    rdi,r9
  422106:	ja     4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  42210c:	movzx  ebp,WORD PTR [r15+rax*1]
  422111:	mov    WORD PTR [rsp+0x26],bp
  422116:	cmp    ebp,0x4
  422119:	jb     4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  42211f:	mov    edi,ebp
  422121:	and    edi,0x1
  422124:	test   di,di
  422127:	jne    4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  42212d:	add    ebp,r14d
  422130:	sub    ebp,esi
  422132:	add    ebp,r13d
  422135:	cmp    ebp,r9d
  422138:	ja     4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  42213e:	lea    edx,[rdx+r13*1]
  422142:	add    edx,0x2
  422145:	movzx  edx,WORD PTR [r15+rdx*1]
  42214a:	mov    WORD PTR [rsp+0x24],dx
  42214f:	mov    esi,r11d
  422152:	sub    esi,r14d
  422155:	cmp    esi,edx
  422157:	jb     4221d1 <flatcc_verify_table_vector_field@@Base+0x241>
  422159:	mov    rdx,r15
  42215c:	mov    r15d,ecx
  42215f:	mov    ebp,r11d
  422162:	mov    r14,r10
  422165:	add    rax,rdx
  422168:	mov    QWORD PTR [rsp+0x18],rax
  42216d:	mov    QWORD PTR [rsp+0x8],rdx
  422172:	mov    DWORD PTR [rsp+0x10],r9d
  422177:	lea    rdi,[rsp+0x8]
  42217c:	call   rbx
  42217e:	test   eax,eax
  422180:	jne    4222ab <flatcc_verify_table_vector_field@@Base+0x31b>
  422186:	mov    ecx,r15d
  422189:	add    ecx,0x1
  42218c:	add    r13d,0x4
  422190:	mov    r11d,ebp
  422193:	add    r11d,0xfffffffc
  422197:	xor    eax,eax
  422199:	mov    r10,r14
  42219c:	cmp    ecx,r10d
  42219f:	mov    r9,QWORD PTR [rsp+0x30]
  4221a4:	mov    r15,QWORD PTR [rsp+0x28]
  4221a9:	jb     4220a2 <flatcc_verify_table_vector_field@@Base+0x112>
  4221af:	jmp    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  4221b1:	xor    eax,eax
  4221b3:	test   edx,edx
  4221b5:	setne  al
  4221b8:	shl    eax,0x2
  4221bb:	add    rsp,0x38
  4221bf:	pop    rbx
  4221c0:	pop    r12
  4221c2:	pop    r13
  4221c4:	pop    r14
  4221c6:	pop    r15
  4221c8:	pop    rbp
  4221c9:	ret    
  4221ca:	mov    eax,0x3
  4221cf:	jmp    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  4221d1:	mov    DWORD PTR [rsp+0x14],r12d
  4221d6:	add    r14d,r13d
  4221d9:	mov    eax,0xf
  4221de:	cmp    r14d,r13d
  4221e1:	jbe    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  4221e3:	mov    edx,r14d
  4221e6:	lea    rsi,[rdx+0x4]
  4221ea:	cmp    rsi,r9
  4221ed:	ja     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  4221ef:	mov    esi,edx
  4221f1:	and    esi,0x3
  4221f4:	test   rsi,rsi
  4221f7:	jne    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  4221f9:	mov    DWORD PTR [rsp+0x20],r14d
  4221fe:	mov    esi,r14d
  422201:	sub    esi,DWORD PTR [r15+rdx*1]
  422205:	mov    eax,0x1d
  42220a:	test   esi,0x80000001
  422210:	jne    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422212:	mov    edx,esi
  422214:	lea    rdi,[rdx+0x2]
  422218:	mov    eax,0x1b
  42221d:	cmp    rdi,r9
  422220:	ja     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422222:	movzx  ebp,WORD PTR [r15+rdx*1]
  422227:	mov    WORD PTR [rsp+0x26],bp
  42222c:	mov    eax,0x1e
  422231:	test   bpl,0x1
  422235:	jne    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422237:	mov    edi,ebp
  422239:	add    edi,esi
  42223b:	mov    r8,r9
  42223e:	cmp    edi,r8d
  422241:	ja     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422247:	movzx  edi,bp
  42224a:	mov    eax,0x1c
  42224f:	cmp    edi,0x4
  422252:	jb     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422258:	mov    rcx,r15
  42225b:	add    esi,0x2
  42225e:	movzx  esi,WORD PTR [r15+rsi*1]
  422263:	mov    WORD PTR [rsp+0x24],si
  422268:	mov    edi,r8d
  42226b:	sub    edi,r14d
  42226e:	mov    eax,0x14
  422273:	cmp    edi,esi
  422275:	jb     4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  42227b:	add    rdx,rcx
  42227e:	mov    QWORD PTR [rsp+0x18],rdx
  422283:	mov    QWORD PTR [rsp+0x8],rcx
  422288:	mov    DWORD PTR [rsp+0x10],r8d
  42228d:	lea    rdi,[rsp+0x8]
  422292:	call   rbx
  422294:	jmp    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  422299:	mov    DWORD PTR [rsp+0x14],0x0
  4222a1:	mov    eax,0x3
  4222a6:	jmp    4221bb <flatcc_verify_table_vector_field@@Base+0x22b>
  4222ab:	mov    r15,QWORD PTR [rsp+0x28]
  4222b0:	mov    r14d,DWORD PTR [r15+r13*1]
  4222b4:	add    r14d,r13d
  4222b7:	mov    DWORD PTR [rsp+0x14],r12d
  4222bc:	mov    r9,QWORD PTR [rsp+0x30]
  4222c1:	jmp    4221d9 <flatcc_verify_table_vector_field@@Base+0x249>
  4222c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004222d0 <flatcc_verify_union_table@@Base>:
  4222d0:	sub    rsp,0x28
  4222d4:	mov    r8,QWORD PTR [rdi]
  4222d7:	mov    r11d,DWORD PTR [rdi+0x8]
  4222db:	mov    edx,DWORD PTR [rdi+0x14]
  4222de:	mov    ecx,DWORD PTR [rdi+0x18]
  4222e1:	mov    eax,DWORD PTR [rdi+0xc]
  4222e4:	add    eax,0xffffffff
  4222e7:	mov    DWORD PTR [rsp+0x14],eax
  4222eb:	je     4223ad <flatcc_verify_union_table@@Base+0xdd>
  4222f1:	add    ecx,edx
  4222f3:	mov    eax,0xf
  4222f8:	cmp    ecx,edx
  4222fa:	jbe    4223a8 <flatcc_verify_union_table@@Base+0xd8>
  422300:	mov    edi,ecx
  422302:	lea    rdx,[rdi+0x4]
  422306:	cmp    rdx,r11
  422309:	ja     4223a8 <flatcc_verify_union_table@@Base+0xd8>
  42230f:	mov    edx,edi
  422311:	and    edx,0x3
  422314:	test   rdx,rdx
  422317:	jne    4223a8 <flatcc_verify_union_table@@Base+0xd8>
  42231d:	mov    DWORD PTR [rsp+0x20],ecx
  422321:	mov    r10d,ecx
  422324:	sub    r10d,DWORD PTR [r8+rdi*1]
  422328:	mov    eax,0x1d
  42232d:	test   r10d,0x80000001
  422334:	jne    4223a8 <flatcc_verify_union_table@@Base+0xd8>
  422336:	mov    r9d,r10d
  422339:	lea    rdx,[r9+0x2]
  42233d:	mov    eax,0x1b
  422342:	cmp    rdx,r11
  422345:	ja     4223a8 <flatcc_verify_union_table@@Base+0xd8>
  422347:	movzx  edi,WORD PTR [r8+r9*1]
  42234c:	mov    WORD PTR [rsp+0x26],di
  422351:	mov    eax,0x1e
  422356:	test   dil,0x1
  42235a:	jne    4223a8 <flatcc_verify_union_table@@Base+0xd8>
  42235c:	mov    edx,edi
  42235e:	add    edx,r10d
  422361:	cmp    edx,r11d
  422364:	ja     4223a8 <flatcc_verify_union_table@@Base+0xd8>
  422366:	movzx  edx,di
  422369:	mov    eax,0x1c
  42236e:	cmp    edx,0x4
  422371:	jb     4223a8 <flatcc_verify_union_table@@Base+0xd8>
  422373:	add    r10d,0x2
  422377:	movzx  edx,WORD PTR [r8+r10*1]
  42237c:	mov    WORD PTR [rsp+0x24],dx
  422381:	mov    edi,r11d
  422384:	sub    edi,ecx
  422386:	mov    eax,0x14
  42238b:	cmp    edi,edx
  42238d:	jb     4223a8 <flatcc_verify_union_table@@Base+0xd8>
  42238f:	add    r9,r8
  422392:	mov    QWORD PTR [rsp+0x18],r9
  422397:	mov    QWORD PTR [rsp+0x8],r8
  42239c:	mov    DWORD PTR [rsp+0x10],r11d
  4223a1:	lea    rdi,[rsp+0x8]
  4223a6:	call   rsi
  4223a8:	add    rsp,0x28
  4223ac:	ret    
  4223ad:	mov    eax,0x3
  4223b2:	add    rsp,0x28
  4223b6:	ret    
  4223b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004223c0 <flatcc_verify_union_struct@@Base>:
  4223c0:	mov    ecx,DWORD PTR [rdi+0x18]
  4223c3:	mov    eax,0x12
  4223c8:	test   ecx,ecx
  4223ca:	je     4223fb <flatcc_verify_union_struct@@Base+0x3b>
  4223cc:	mov    r8d,DWORD PTR [rdi+0x8]
  4223d0:	add    ecx,DWORD PTR [rdi+0x14]
  4223d3:	cmp    ecx,r8d
  4223d6:	ja     4223fb <flatcc_verify_union_struct@@Base+0x3b>
  4223d8:	mov    eax,0xa
  4223dd:	add    esi,ecx
  4223df:	jb     4223fb <flatcc_verify_union_struct@@Base+0x3b>
  4223e1:	mov    eax,0x9
  4223e6:	cmp    esi,r8d
  4223e9:	ja     4223fb <flatcc_verify_union_struct@@Base+0x3b>
  4223eb:	movzx  eax,dx
  4223ee:	add    eax,0xffffffff
  4223f1:	and    ecx,eax
  4223f3:	mov    eax,0xb
  4223f8:	cmove  eax,ecx
  4223fb:	ret    
  4223fc:	nop    DWORD PTR [rax+0x0]

0000000000422400 <flatcc_verify_union_string@@Base>:
  422400:	mov    edx,DWORD PTR [rdi+0x14]
  422403:	mov    ecx,DWORD PTR [rdi+0x18]
  422406:	add    ecx,edx
  422408:	mov    eax,0x11
  42240d:	cmp    ecx,edx
  42240f:	jbe    422456 <flatcc_verify_union_string@@Base+0x56>
  422411:	mov    r8d,DWORD PTR [rdi+0x8]
  422415:	mov    esi,ecx
  422417:	lea    rdx,[rsi+0x4]
  42241b:	cmp    rdx,r8
  42241e:	ja     422456 <flatcc_verify_union_string@@Base+0x56>
  422420:	mov    edx,esi
  422422:	and    edx,0x3
  422425:	test   rdx,rdx
  422428:	jne    422456 <flatcc_verify_union_string@@Base+0x56>
  42242a:	mov    rdi,QWORD PTR [rdi]
  42242d:	mov    esi,DWORD PTR [rdi+rsi*1]
  422430:	add    ecx,0x4
  422433:	sub    r8d,ecx
  422436:	lea    edx,[rsi+0x1]
  422439:	mov    eax,0x8
  42243e:	cmp    r8d,edx
  422441:	jb     422456 <flatcc_verify_union_string@@Base+0x56>
  422443:	mov    eax,ecx
  422445:	add    rdi,rax
  422448:	xor    ecx,ecx
  42244a:	cmp    BYTE PTR [rsi+rdi*1],0x0
  42244e:	mov    eax,0x7
  422453:	cmove  eax,ecx
  422456:	ret    
  422457:	nop    WORD PTR [rax+rax*1+0x0]

0000000000422460 <flatcc_verify_buffer_header@@Base>:
  422460:	push   rbx
  422461:	sub    rsp,0x10
  422465:	mov    rbx,rdi
  422468:	mov    eax,0x5
  42246d:	test   bl,0x3
  422470:	jne    4224c8 <flatcc_verify_buffer_header@@Base+0x68>
  422472:	mov    rcx,rdx
  422475:	mov    rdx,rsi
  422478:	shr    rdx,0x3
  42247c:	mov    eax,0x6
  422481:	cmp    rdx,0x1ffffffe
  422488:	ja     4224c8 <flatcc_verify_buffer_header@@Base+0x68>
  42248a:	mov    eax,0x1
  42248f:	cmp    rsi,0x8
  422493:	jb     4224c8 <flatcc_verify_buffer_header@@Base+0x68>
  422495:	test   rcx,rcx
  422498:	je     4224c6 <flatcc_verify_buffer_header@@Base+0x66>
  42249a:	mov    DWORD PTR [rsp+0xc],0x0
  4224a2:	lea    rdi,[rsp+0xc]
  4224a7:	mov    edx,0x4
  4224ac:	mov    rsi,rcx
  4224af:	call   406040 <strncpy@plt>
  4224b4:	mov    ecx,DWORD PTR [rsp+0xc]
  4224b8:	test   ecx,ecx
  4224ba:	je     4224c6 <flatcc_verify_buffer_header@@Base+0x66>
  4224bc:	mov    eax,0x2
  4224c1:	cmp    DWORD PTR [rbx+0x4],ecx
  4224c4:	jne    4224c8 <flatcc_verify_buffer_header@@Base+0x68>
  4224c6:	xor    eax,eax
  4224c8:	add    rsp,0x10
  4224cc:	pop    rbx
  4224cd:	ret    
  4224ce:	xchg   ax,ax

00000000004224d0 <flatcc_verify_typed_buffer_header@@Base>:
  4224d0:	mov    eax,0x5
  4224d5:	test   dil,0x3
  4224d9:	jne    42250b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4224db:	mov    rcx,rsi
  4224de:	shr    rcx,0x3
  4224e2:	mov    eax,0x6
  4224e7:	cmp    rcx,0x1ffffffe
  4224ee:	ja     42250b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4224f0:	mov    eax,0x1
  4224f5:	cmp    rsi,0x8
  4224f9:	jb     42250b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4224fb:	test   edx,edx
  4224fd:	je     422509 <flatcc_verify_typed_buffer_header@@Base+0x39>
  4224ff:	mov    eax,0x2
  422504:	cmp    DWORD PTR [rdi+0x4],edx
  422507:	jne    42250b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  422509:	xor    eax,eax
  42250b:	ret    
  42250c:	nop    DWORD PTR [rax+0x0]

0000000000422510 <flatcc_verify_struct_as_root@@Base>:
  422510:	push   rbp
  422511:	push   r15
  422513:	push   r14
  422515:	push   r12
  422517:	push   rbx
  422518:	sub    rsp,0x10
  42251c:	mov    rbx,rdi
  42251f:	mov    eax,0x5
  422524:	test   bl,0x3
  422527:	jne    4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  42252d:	mov    r15,rcx
  422530:	mov    rbp,rsi
  422533:	mov    rcx,rsi
  422536:	shr    rcx,0x3
  42253a:	mov    eax,0x6
  42253f:	cmp    rcx,0x1ffffffe
  422546:	ja     4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  42254c:	mov    eax,0x1
  422551:	cmp    rbp,0x8
  422555:	jb     4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  42255b:	mov    r14d,r8d
  42255e:	mov    r12,rdx
  422561:	test   rdx,rdx
  422564:	je     4225bc <flatcc_verify_struct_as_root@@Base+0xac>
  422566:	mov    DWORD PTR [rsp+0x8],0x0
  42256e:	lea    rdi,[rsp+0x8]
  422573:	mov    edx,0x4
  422578:	mov    rsi,r12
  42257b:	call   406040 <strncpy@plt>
  422580:	mov    eax,DWORD PTR [rsp+0x8]
  422584:	test   eax,eax
  422586:	je     4225bc <flatcc_verify_struct_as_root@@Base+0xac>
  422588:	cmp    DWORD PTR [rbx+0x4],eax
  42258b:	je     4225bc <flatcc_verify_struct_as_root@@Base+0xac>
  42258d:	mov    DWORD PTR [rsp+0xc],0x0
  422595:	lea    rdi,[rsp+0xc]
  42259a:	mov    edx,0x4
  42259f:	mov    rsi,r12
  4225a2:	call   406040 <strncpy@plt>
  4225a7:	mov    ecx,DWORD PTR [rsp+0xc]
  4225ab:	xor    eax,eax
  4225ad:	cmp    DWORD PTR [rbx+0x4],ecx
  4225b0:	setne  al
  4225b3:	add    eax,eax
  4225b5:	test   ecx,ecx
  4225b7:	cmove  eax,ecx
  4225ba:	jmp    4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  4225bc:	mov    ecx,DWORD PTR [rbx]
  4225be:	lea    edx,[rcx-0x1]
  4225c1:	mov    eax,0x12
  4225c6:	cmp    edx,ebp
  4225c8:	jae    4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  4225ca:	mov    eax,0xa
  4225cf:	add    r15d,ecx
  4225d2:	jb     4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  4225d4:	mov    eax,0x9
  4225d9:	cmp    r15d,ebp
  4225dc:	ja     4225ef <flatcc_verify_struct_as_root@@Base+0xdf>
  4225de:	movzx  eax,r14w
  4225e2:	add    eax,0xffffffff
  4225e5:	and    ecx,eax
  4225e7:	mov    eax,0xb
  4225ec:	cmove  eax,ecx
  4225ef:	add    rsp,0x10
  4225f3:	pop    rbx
  4225f4:	pop    r12
  4225f6:	pop    r14
  4225f8:	pop    r15
  4225fa:	pop    rbp
  4225fb:	ret    
  4225fc:	nop    DWORD PTR [rax+0x0]

0000000000422600 <flatcc_verify_struct_as_typed_root@@Base>:
  422600:	mov    eax,0x5
  422605:	test   dil,0x3
  422609:	jne    42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  42260b:	mov    r9,rsi
  42260e:	shr    r9,0x3
  422612:	mov    eax,0x6
  422617:	cmp    r9,0x1ffffffe
  42261e:	ja     42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  422620:	mov    eax,0x1
  422625:	cmp    rsi,0x8
  422629:	jb     42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  42262b:	test   edx,edx
  42262d:	je     422639 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  42262f:	mov    eax,0x2
  422634:	cmp    DWORD PTR [rdi+0x4],edx
  422637:	jne    42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  422639:	mov    edx,DWORD PTR [rdi]
  42263b:	lea    edi,[rdx-0x1]
  42263e:	mov    eax,0x12
  422643:	cmp    edi,esi
  422645:	jae    42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  422647:	mov    eax,0xa
  42264c:	add    ecx,edx
  42264e:	jb     42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  422650:	mov    eax,0x9
  422655:	cmp    ecx,esi
  422657:	ja     42266a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  422659:	movzx  eax,r8w
  42265d:	add    eax,0xffffffff
  422660:	and    edx,eax
  422662:	mov    eax,0xb
  422667:	cmove  eax,edx
  42266a:	ret    
  42266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422670 <flatcc_verify_table_as_root@@Base>:
  422670:	push   r15
  422672:	push   r14
  422674:	push   r13
  422676:	push   r12
  422678:	push   rbx
  422679:	sub    rsp,0x20
  42267d:	mov    r12,rdi
  422680:	mov    eax,0x5
  422685:	test   r12b,0x3
  422689:	jne    4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  42268f:	mov    r14,rcx
  422692:	mov    r15,rsi
  422695:	mov    r13d,r15d
  422698:	mov    rcx,r13
  42269b:	shr    rcx,0x3
  42269f:	mov    eax,0x6
  4226a4:	cmp    rcx,0x1ffffffe
  4226ab:	ja     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  4226b1:	mov    eax,0x1
  4226b6:	cmp    r13,0x8
  4226ba:	jb     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  4226c0:	mov    rbx,rdx
  4226c3:	test   rdx,rdx
  4226c6:	je     42271d <flatcc_verify_table_as_root@@Base+0xad>
  4226c8:	mov    DWORD PTR [rsp],0x0
  4226cf:	mov    rdi,rsp
  4226d2:	mov    edx,0x4
  4226d7:	mov    rsi,rbx
  4226da:	call   406040 <strncpy@plt>
  4226df:	mov    eax,DWORD PTR [rsp]
  4226e2:	test   eax,eax
  4226e4:	je     42271d <flatcc_verify_table_as_root@@Base+0xad>
  4226e6:	cmp    DWORD PTR [r12+0x4],eax
  4226eb:	je     42271d <flatcc_verify_table_as_root@@Base+0xad>
  4226ed:	mov    DWORD PTR [rsp],0x0
  4226f4:	mov    rdi,rsp
  4226f7:	mov    edx,0x4
  4226fc:	mov    rsi,rbx
  4226ff:	call   406040 <strncpy@plt>
  422704:	mov    ecx,DWORD PTR [rsp]
  422707:	xor    eax,eax
  422709:	cmp    DWORD PTR [r12+0x4],ecx
  42270e:	setne  al
  422711:	add    eax,eax
  422713:	test   ecx,ecx
  422715:	cmove  eax,ecx
  422718:	jmp    4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  42271d:	mov    ecx,DWORD PTR [r12]
  422721:	mov    DWORD PTR [rsp+0xc],0x63
  422729:	mov    eax,0xf
  42272e:	test   rcx,rcx
  422731:	je     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  422737:	lea    rdx,[rcx+0x4]
  42273b:	cmp    rdx,r13
  42273e:	ja     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  422744:	mov    edx,ecx
  422746:	and    edx,0x3
  422749:	test   rdx,rdx
  42274c:	jne    4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  422752:	mov    DWORD PTR [rsp+0x18],ecx
  422756:	mov    esi,ecx
  422758:	sub    esi,DWORD PTR [r12+rcx*1]
  42275c:	mov    eax,0x1d
  422761:	test   esi,0x80000001
  422767:	jne    4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  422769:	mov    edx,esi
  42276b:	lea    rdi,[rdx+0x2]
  42276f:	mov    eax,0x1b
  422774:	cmp    rdi,r13
  422777:	ja     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  422779:	movzx  ebx,WORD PTR [r12+rdx*1]
  42277e:	mov    WORD PTR [rsp+0x1e],bx
  422783:	mov    eax,0x1e
  422788:	test   bl,0x1
  42278b:	jne    4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  42278d:	mov    edi,ebx
  42278f:	add    edi,esi
  422791:	cmp    edi,r15d
  422794:	ja     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  422796:	movzx  edi,bx
  422799:	mov    eax,0x1c
  42279e:	cmp    edi,0x4
  4227a1:	jb     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  4227a3:	add    esi,0x2
  4227a6:	movzx  esi,WORD PTR [r12+rsi*1]
  4227ab:	mov    WORD PTR [rsp+0x1c],si
  4227b0:	mov    edi,r15d
  4227b3:	sub    edi,ecx
  4227b5:	mov    eax,0x14
  4227ba:	cmp    edi,esi
  4227bc:	jb     4227d5 <flatcc_verify_table_as_root@@Base+0x165>
  4227be:	add    rdx,r12
  4227c1:	mov    QWORD PTR [rsp+0x10],rdx
  4227c6:	mov    QWORD PTR [rsp],r12
  4227ca:	mov    DWORD PTR [rsp+0x8],r15d
  4227cf:	mov    rdi,rsp
  4227d2:	call   r14
  4227d5:	add    rsp,0x20
  4227d9:	pop    rbx
  4227da:	pop    r12
  4227dc:	pop    r13
  4227de:	pop    r14
  4227e0:	pop    r15
  4227e2:	ret    
  4227e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227ed:	nop    DWORD PTR [rax]

00000000004227f0 <flatcc_verify_table_as_typed_root@@Base>:
  4227f0:	mov    eax,0x5
  4227f5:	test   dil,0x3
  4227f9:	jne    422908 <flatcc_verify_table_as_typed_root@@Base+0x118>
  4227ff:	mov    r8d,esi
  422802:	mov    r9,r8
  422805:	shr    r9,0x3
  422809:	mov    eax,0x6
  42280e:	cmp    r9,0x1ffffffe
  422815:	ja     422908 <flatcc_verify_table_as_typed_root@@Base+0x118>
  42281b:	mov    eax,0x1
  422820:	cmp    r8,0x8
  422824:	jb     422908 <flatcc_verify_table_as_typed_root@@Base+0x118>
  42282a:	test   edx,edx
  42282c:	je     42283c <flatcc_verify_table_as_typed_root@@Base+0x4c>
  42282e:	mov    eax,0x2
  422833:	cmp    DWORD PTR [rdi+0x4],edx
  422836:	jne    422908 <flatcc_verify_table_as_typed_root@@Base+0x118>
  42283c:	sub    rsp,0x28
  422840:	mov    r11d,DWORD PTR [rdi]
  422843:	mov    DWORD PTR [rsp+0x14],0x63
  42284b:	mov    eax,0xf
  422850:	test   r11,r11
  422853:	je     422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  422859:	lea    rdx,[r11+0x4]
  42285d:	cmp    rdx,r8
  422860:	ja     422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  422866:	mov    edx,r11d
  422869:	and    edx,0x3
  42286c:	test   rdx,rdx
  42286f:	jne    422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  422875:	mov    DWORD PTR [rsp+0x20],r11d
  42287a:	mov    r10d,r11d
  42287d:	sub    r10d,DWORD PTR [rdi+r11*1]
  422881:	mov    eax,0x1d
  422886:	test   r10d,0x80000001
  42288d:	jne    422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  42288f:	mov    r9d,r10d
  422892:	lea    rdx,[r9+0x2]
  422896:	mov    eax,0x1b
  42289b:	cmp    rdx,r8
  42289e:	ja     422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4228a0:	movzx  r8d,WORD PTR [rdi+r9*1]
  4228a5:	mov    WORD PTR [rsp+0x26],r8w
  4228ab:	mov    eax,0x1e
  4228b0:	test   r8b,0x1
  4228b4:	jne    422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4228b6:	mov    edx,r8d
  4228b9:	add    edx,r10d
  4228bc:	cmp    edx,esi
  4228be:	ja     422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4228c0:	movzx  edx,r8w
  4228c4:	mov    eax,0x1c
  4228c9:	cmp    edx,0x4
  4228cc:	jb     422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4228ce:	add    r10d,0x2
  4228d2:	movzx  r8d,WORD PTR [rdi+r10*1]
  4228d7:	mov    WORD PTR [rsp+0x24],r8w
  4228dd:	mov    edx,esi
  4228df:	sub    edx,r11d
  4228e2:	mov    eax,0x14
  4228e7:	cmp    edx,r8d
  4228ea:	jb     422904 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4228ec:	add    r9,rdi
  4228ef:	mov    QWORD PTR [rsp+0x18],r9
  4228f4:	mov    QWORD PTR [rsp+0x8],rdi
  4228f9:	mov    DWORD PTR [rsp+0x10],esi
  4228fd:	lea    rdi,[rsp+0x8]
  422902:	call   rcx
  422904:	add    rsp,0x28
  422908:	ret    
  422909:	nop    DWORD PTR [rax+0x0]

0000000000422910 <flatcc_verify_struct_as_nested_root@@Base>:
  422910:	push   r14
  422912:	push   rbx
  422913:	lea    esi,[rsi+rsi*1]
  422916:	add    esi,0x4
  422919:	movzx  r10d,WORD PTR [rdi+0x1e]
  42291e:	cmp    si,r10w
  422922:	jae    42298c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  422924:	mov    r11,QWORD PTR [rdi+0x10]
  422928:	movzx  ebx,si
  42292b:	movzx  eax,WORD PTR [r11+rbx*1]
  422930:	test   eax,eax
  422932:	je     42298c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  422934:	add    r11,rbx
  422937:	lea    esi,[rax+0x4]
  42293a:	movzx  ebx,WORD PTR [rdi+0x1c]
  42293e:	cmp    esi,ebx
  422940:	ja     4229a6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  422942:	add    eax,DWORD PTR [rdi+0x18]
  422945:	test   al,0x3
  422947:	jne    4229a6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  422949:	test   eax,eax
  42294b:	je     422a3d <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  422951:	mov    r10,QWORD PTR [rdi]
  422954:	mov    esi,eax
  422956:	mov    esi,DWORD PTR [r10+rsi*1]
  42295a:	add    esi,eax
  42295c:	cmp    esi,eax
  42295e:	jbe    4229a6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  422960:	test   sil,0x3
  422964:	jne    4229a6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  422966:	mov    eax,DWORD PTR [rdi+0x8]
  422969:	mov    r14d,esi
  42296c:	lea    rbx,[r14+0x4]
  422970:	cmp    rbx,rax
  422973:	ja     4229a6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  422975:	movzx  ebx,r9w
  422979:	add    eax,0xfffffffc
  42297c:	sub    eax,esi
  42297e:	imul   ebx,DWORD PTR [r10+r14*1]
  422983:	cmp    eax,ebx
  422985:	jb     4229a6 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  422987:	jmp    422a3d <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  42298c:	test   edx,edx
  42298e:	je     422a2d <flatcc_verify_struct_as_nested_root@@Base+0x11d>
  422994:	cmp    si,r10w
  422998:	jae    422a21 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  42299e:	movzx  r11d,si
  4229a2:	add    r11,QWORD PTR [rdi+0x10]
  4229a6:	movzx  ecx,WORD PTR [r11]
  4229aa:	test   ecx,ecx
  4229ac:	je     422a21 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  4229ae:	lea    edx,[rcx+0x4]
  4229b1:	movzx  esi,WORD PTR [rdi+0x1c]
  4229b5:	mov    eax,0xd
  4229ba:	cmp    edx,esi
  4229bc:	ja     422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4229c2:	add    ecx,DWORD PTR [rdi+0x18]
  4229c5:	mov    eax,0xc
  4229ca:	test   cl,0x3
  4229cd:	jne    422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4229d3:	test   ecx,ecx
  4229d5:	je     422a75 <flatcc_verify_struct_as_nested_root@@Base+0x165>
  4229db:	mov    rdx,QWORD PTR [rdi]
  4229de:	mov    eax,ecx
  4229e0:	mov    esi,DWORD PTR [rdx+rax*1]
  4229e3:	add    esi,ecx
  4229e5:	mov    eax,0x10
  4229ea:	cmp    esi,ecx
  4229ec:	jbe    422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4229f2:	test   sil,0x3
  4229f6:	jne    422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  4229f8:	mov    ecx,DWORD PTR [rdi+0x8]
  4229fb:	mov    edi,esi
  4229fd:	lea    rbx,[rdi+0x4]
  422a01:	cmp    rbx,rcx
  422a04:	ja     422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  422a06:	movzx  eax,r9w
  422a0a:	add    ecx,0xfffffffc
  422a0d:	sub    ecx,esi
  422a0f:	imul   eax,DWORD PTR [rdx+rdi*1]
  422a13:	xor    edx,edx
  422a15:	cmp    ecx,eax
  422a17:	mov    eax,0x1a
  422a1c:	cmovae eax,edx
  422a1f:	jmp    422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  422a21:	xor    eax,eax
  422a23:	test   edx,edx
  422a25:	setne  al
  422a28:	shl    eax,0x2
  422a2b:	jmp    422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  422a2d:	xor    eax,eax
  422a2f:	cmp    si,r10w
  422a33:	jae    422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  422a35:	movzx  r11d,si
  422a39:	add    r11,QWORD PTR [rdi+0x10]
  422a3d:	movzx  esi,WORD PTR [r11]
  422a41:	xor    eax,eax
  422a43:	test   rsi,rsi
  422a46:	je     422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  422a48:	mov    edx,DWORD PTR [rdi+0x18]
  422a4b:	add    rdx,QWORD PTR [rdi]
  422a4e:	add    rdx,rsi
  422a51:	je     422a77 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  422a53:	mov    eax,DWORD PTR [rdx]
  422a55:	mov    esi,DWORD PTR [rax+rdx*1]
  422a58:	lea    rdi,[rax+rdx*1]
  422a5c:	add    rdi,0x4
  422a60:	movzx  eax,r9w
  422a64:	mov    rdx,rcx
  422a67:	mov    rcx,r8
  422a6a:	mov    r8d,eax
  422a6d:	pop    rbx
  422a6e:	pop    r14
  422a70:	jmp    422510 <flatcc_verify_struct_as_root@@Base>
  422a75:	xor    eax,eax
  422a77:	pop    rbx
  422a78:	pop    r14
  422a7a:	ret    
  422a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422a80 <flatcc_verify_table_as_nested_root@@Base>:
  422a80:	push   rbp
  422a81:	push   r15
  422a83:	push   r14
  422a85:	push   r13
  422a87:	push   r12
  422a89:	push   rbx
  422a8a:	sub    rsp,0x28
  422a8e:	mov    r14,r9
  422a91:	mov    r15,rcx
  422a94:	mov    rbx,rdi
  422a97:	lea    esi,[rsi+rsi*1]
  422a9a:	add    esi,0x4
  422a9d:	movzx  edi,WORD PTR [rdi+0x1e]
  422aa1:	cmp    si,di
  422aa4:	jae    422b0d <flatcc_verify_table_as_nested_root@@Base+0x8d>
  422aa6:	mov    rax,QWORD PTR [rbx+0x10]
  422aaa:	movzx  ebp,si
  422aad:	movzx  ecx,WORD PTR [rax+rbp*1]
  422ab1:	test   ecx,ecx
  422ab3:	je     422b0d <flatcc_verify_table_as_nested_root@@Base+0x8d>
  422ab5:	add    rax,rbp
  422ab8:	lea    esi,[rcx+0x4]
  422abb:	movzx  edi,WORD PTR [rbx+0x1c]
  422abf:	cmp    esi,edi
  422ac1:	ja     422b25 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  422ac3:	add    ecx,DWORD PTR [rbx+0x18]
  422ac6:	test   cl,0x3
  422ac9:	jne    422b25 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  422acb:	test   ecx,ecx
  422acd:	je     422bcb <flatcc_verify_table_as_nested_root@@Base+0x14b>
  422ad3:	mov    rsi,QWORD PTR [rbx]
  422ad6:	mov    edi,ecx
  422ad8:	mov    edi,DWORD PTR [rsi+rdi*1]
  422adb:	add    edi,ecx
  422add:	cmp    edi,ecx
  422adf:	jbe    422b25 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  422ae1:	test   dil,0x3
  422ae5:	jne    422b25 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  422ae7:	mov    ecx,DWORD PTR [rbx+0x8]
  422aea:	mov    r9d,edi
  422aed:	lea    rbp,[r9+0x4]
  422af1:	cmp    rbp,rcx
  422af4:	ja     422b25 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  422af6:	movzx  ebp,r8w
  422afa:	add    ecx,0xfffffffc
  422afd:	sub    ecx,edi
  422aff:	imul   ebp,DWORD PTR [rsi+r9*1]
  422b04:	cmp    ecx,ebp
  422b06:	jb     422b25 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  422b08:	jmp    422bcb <flatcc_verify_table_as_nested_root@@Base+0x14b>
  422b0d:	test   edx,edx
  422b0f:	je     422bb9 <flatcc_verify_table_as_nested_root@@Base+0x139>
  422b15:	cmp    si,di
  422b18:	jae    422baa <flatcc_verify_table_as_nested_root@@Base+0x12a>
  422b1e:	movzx  eax,si
  422b21:	add    rax,QWORD PTR [rbx+0x10]
  422b25:	movzx  ecx,WORD PTR [rax]
  422b28:	test   ecx,ecx
  422b2a:	je     422baa <flatcc_verify_table_as_nested_root@@Base+0x12a>
  422b2c:	lea    edx,[rcx+0x4]
  422b2f:	movzx  esi,WORD PTR [rbx+0x1c]
  422b33:	mov    eax,0xd
  422b38:	cmp    edx,esi
  422b3a:	ja     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422b40:	add    ecx,DWORD PTR [rbx+0x18]
  422b43:	mov    eax,0xc
  422b48:	test   cl,0x3
  422b4b:	jne    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422b51:	test   ecx,ecx
  422b53:	je     422c7c <flatcc_verify_table_as_nested_root@@Base+0x1fc>
  422b59:	mov    rdx,QWORD PTR [rbx]
  422b5c:	mov    eax,ecx
  422b5e:	mov    esi,DWORD PTR [rdx+rax*1]
  422b61:	add    esi,ecx
  422b63:	mov    eax,0x10
  422b68:	cmp    esi,ecx
  422b6a:	jbe    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422b70:	test   sil,0x3
  422b74:	jne    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422b7a:	mov    ecx,DWORD PTR [rbx+0x8]
  422b7d:	mov    edi,esi
  422b7f:	lea    rbp,[rdi+0x4]
  422b83:	cmp    rbp,rcx
  422b86:	ja     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422b8c:	movzx  eax,r8w
  422b90:	add    ecx,0xfffffffc
  422b93:	sub    ecx,esi
  422b95:	imul   eax,DWORD PTR [rdx+rdi*1]
  422b99:	xor    edx,edx
  422b9b:	cmp    ecx,eax
  422b9d:	mov    eax,0x1a
  422ba2:	cmovae eax,edx
  422ba5:	jmp    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422baa:	xor    eax,eax
  422bac:	test   edx,edx
  422bae:	setne  al
  422bb1:	shl    eax,0x2
  422bb4:	jmp    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422bb9:	xor    eax,eax
  422bbb:	cmp    si,di
  422bbe:	jae    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422bc4:	movzx  eax,si
  422bc7:	add    rax,QWORD PTR [rbx+0x10]
  422bcb:	movzx  ecx,WORD PTR [rax]
  422bce:	xor    eax,eax
  422bd0:	test   rcx,rcx
  422bd3:	je     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422bd9:	mov    r13d,DWORD PTR [rbx+0x18]
  422bdd:	add    r13,QWORD PTR [rbx]
  422be0:	add    r13,rcx
  422be3:	je     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422be9:	mov    ebp,DWORD PTR [r13+0x0]
  422bed:	lea    r12,[r13*1+0x4]
  422bf5:	add    r12,rbp
  422bf8:	mov    eax,0x5
  422bfd:	test   r12b,0x3
  422c01:	jne    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422c03:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  422c08:	mov    eax,0x6
  422c0d:	cmp    ecx,0xfffffff7
  422c10:	ja     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422c12:	mov    eax,0x1
  422c17:	cmp    ecx,0x8
  422c1a:	jb     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422c1c:	test   r15,r15
  422c1f:	je     422c8d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  422c21:	mov    DWORD PTR [rsp],0x0
  422c28:	mov    rdi,rsp
  422c2b:	mov    edx,0x4
  422c30:	mov    rsi,r15
  422c33:	mov    QWORD PTR [rsp+0x20],rcx
  422c38:	call   406040 <strncpy@plt>
  422c3d:	mov    rcx,QWORD PTR [rsp+0x20]
  422c42:	mov    eax,DWORD PTR [rsp]
  422c45:	test   eax,eax
  422c47:	je     422c8d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  422c49:	add    rbp,r13
  422c4c:	cmp    DWORD PTR [rbp+0x8],eax
  422c4f:	je     422c8d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  422c51:	mov    DWORD PTR [rsp],0x0
  422c58:	mov    rdi,rsp
  422c5b:	mov    edx,0x4
  422c60:	mov    rsi,r15
  422c63:	call   406040 <strncpy@plt>
  422c68:	mov    ecx,DWORD PTR [rsp]
  422c6b:	xor    eax,eax
  422c6d:	cmp    DWORD PTR [rbp+0x8],ecx
  422c70:	setne  al
  422c73:	add    eax,eax
  422c75:	test   ecx,ecx
  422c77:	cmove  eax,ecx
  422c7a:	jmp    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422c7c:	xor    eax,eax
  422c7e:	add    rsp,0x28
  422c82:	pop    rbx
  422c83:	pop    r12
  422c85:	pop    r13
  422c87:	pop    r14
  422c89:	pop    r15
  422c8b:	pop    rbp
  422c8c:	ret    
  422c8d:	mov    ebp,DWORD PTR [r12]
  422c91:	mov    eax,DWORD PTR [rbx+0xc]
  422c94:	add    eax,0xffffffff
  422c97:	mov    DWORD PTR [rsp+0xc],eax
  422c9b:	je     422d4e <flatcc_verify_table_as_nested_root@@Base+0x2ce>
  422ca1:	mov    eax,0xf
  422ca6:	test   ebp,ebp
  422ca8:	je     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422caa:	lea    rdx,[rbp+0x4]
  422cae:	cmp    rdx,rcx
  422cb1:	ja     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422cb3:	mov    edx,ebp
  422cb5:	and    edx,0x3
  422cb8:	test   rdx,rdx
  422cbb:	jne    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422cbd:	mov    DWORD PTR [rsp+0x18],ebp
  422cc1:	mov    esi,ebp
  422cc3:	sub    esi,DWORD PTR [r12+rbp*1]
  422cc7:	mov    eax,0x1d
  422ccc:	test   esi,0x80000001
  422cd2:	jne    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422cd4:	mov    edx,esi
  422cd6:	lea    rdi,[rdx+0x2]
  422cda:	mov    eax,0x1b
  422cdf:	cmp    rdi,rcx
  422ce2:	ja     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422ce4:	movzx  ebx,WORD PTR [r12+rdx*1]
  422ce9:	mov    WORD PTR [rsp+0x1e],bx
  422cee:	mov    eax,0x1e
  422cf3:	test   bl,0x1
  422cf6:	jne    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422cf8:	mov    edi,ebx
  422cfa:	add    edi,esi
  422cfc:	cmp    edi,ecx
  422cfe:	ja     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422d04:	movzx  edi,bx
  422d07:	mov    eax,0x1c
  422d0c:	cmp    edi,0x4
  422d0f:	jb     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422d15:	add    esi,0x2
  422d18:	movzx  esi,WORD PTR [r12+rsi*1]
  422d1d:	mov    WORD PTR [rsp+0x1c],si
  422d22:	mov    edi,ecx
  422d24:	sub    edi,ebp
  422d26:	mov    eax,0x14
  422d2b:	cmp    edi,esi
  422d2d:	jb     422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422d33:	add    rdx,r12
  422d36:	mov    QWORD PTR [rsp+0x10],rdx
  422d3b:	mov    QWORD PTR [rsp],r12
  422d3f:	mov    DWORD PTR [rsp+0x8],ecx
  422d43:	mov    rdi,rsp
  422d46:	call   r14
  422d49:	jmp    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422d4e:	mov    eax,0x3
  422d53:	jmp    422c7e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  422d58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422d60 <flatcc_verify_union_field@@Base>:
  422d60:	push   rbp
  422d61:	push   r14
  422d63:	push   rbx
  422d64:	sub    rsp,0x20
  422d68:	lea    r9d,[rsi+rsi*1]
  422d6c:	lea    eax,[rsi+rsi*1]
  422d6f:	add    eax,0x2
  422d72:	movzx  esi,WORD PTR [rdi+0x1e]
  422d76:	cmp    ax,si
  422d79:	jae    422e5b <flatcc_verify_union_field@@Base+0xfb>
  422d7f:	mov    rbx,QWORD PTR [rdi+0x10]
  422d83:	movzx  eax,ax
  422d86:	movzx  r10d,WORD PTR [rbx+rax*1]
  422d8b:	test   r10,r10
  422d8e:	je     422e5b <flatcc_verify_union_field@@Base+0xfb>
  422d94:	mov    eax,0xd
  422d99:	cmp    r10w,WORD PTR [rdi+0x1c]
  422d9e:	jae    422e83 <flatcc_verify_union_field@@Base+0x123>
  422da4:	mov    r8,QWORD PTR [rdi]
  422da7:	add    r9d,0x4
  422dab:	mov    al,0x1
  422dad:	cmp    r9w,si
  422db1:	jae    422dbf <flatcc_verify_union_field@@Base+0x5f>
  422db3:	movzx  eax,r9w
  422db7:	cmp    WORD PTR [rbx+rax*1],0x0
  422dbc:	sete   al
  422dbf:	mov    r14d,DWORD PTR [rdi+0x18]
  422dc3:	lea    r11,[r8+r14*1]
  422dc7:	mov    bpl,BYTE PTR [r10+r11*1]
  422dcb:	test   al,al
  422dcd:	jne    422ddd <flatcc_verify_union_field@@Base+0x7d>
  422dcf:	mov    eax,0x18
  422dd4:	test   bpl,bpl
  422dd7:	je     422e83 <flatcc_verify_union_field@@Base+0x123>
  422ddd:	xor    eax,eax
  422ddf:	test   bpl,bpl
  422de2:	je     422e83 <flatcc_verify_union_field@@Base+0x123>
  422de8:	cmp    r9w,si
  422dec:	jae    422e8c <flatcc_verify_union_field@@Base+0x12c>
  422df2:	movzx  eax,r9w
  422df6:	movzx  esi,WORD PTR [rbx+rax*1]
  422dfa:	test   esi,esi
  422dfc:	je     422e8c <flatcc_verify_union_field@@Base+0x12c>
  422e02:	lea    edx,[rsi+0x4]
  422e05:	movzx  ebp,WORD PTR [rdi+0x1c]
  422e09:	mov    eax,0xd
  422e0e:	cmp    edx,ebp
  422e10:	ja     422e83 <flatcc_verify_union_field@@Base+0x123>
  422e12:	add    r14d,esi
  422e15:	mov    eax,0xc
  422e1a:	test   r14b,0x3
  422e1e:	jne    422e83 <flatcc_verify_union_field@@Base+0x123>
  422e20:	mov    eax,0x0
  422e25:	test   r14d,r14d
  422e28:	je     422e83 <flatcc_verify_union_field@@Base+0x123>
  422e2a:	mov    QWORD PTR [rsp],r8
  422e2e:	mov    eax,DWORD PTR [rdi+0x8]
  422e31:	mov    DWORD PTR [rsp+0x8],eax
  422e35:	mov    eax,DWORD PTR [rdi+0xc]
  422e38:	mov    DWORD PTR [rsp+0xc],eax
  422e3c:	mov    DWORD PTR [rsp+0x14],r14d
  422e41:	mov    eax,r14d
  422e44:	mov    eax,DWORD PTR [r8+rax*1]
  422e48:	mov    DWORD PTR [rsp+0x18],eax
  422e4c:	mov    al,BYTE PTR [r11+r10*1]
  422e50:	mov    BYTE PTR [rsp+0x10],al
  422e54:	mov    rdi,rsp
  422e57:	call   rcx
  422e59:	jmp    422e83 <flatcc_verify_union_field@@Base+0x123>
  422e5b:	add    r9d,0x4
  422e5f:	cmp    r9w,si
  422e63:	jae    422e79 <flatcc_verify_union_field@@Base+0x119>
  422e65:	mov    rcx,QWORD PTR [rdi+0x10]
  422e69:	movzx  esi,r9w
  422e6d:	mov    eax,0x17
  422e72:	cmp    WORD PTR [rcx+rsi*1],0x0
  422e77:	jne    422e83 <flatcc_verify_union_field@@Base+0x123>
  422e79:	test   edx,edx
  422e7b:	mov    eax,0x15
  422e80:	cmove  eax,edx
  422e83:	add    rsp,0x20
  422e87:	pop    rbx
  422e88:	pop    r14
  422e8a:	pop    rbp
  422e8b:	ret    
  422e8c:	xor    eax,eax
  422e8e:	test   edx,edx
  422e90:	setne  al
  422e93:	shl    eax,0x2
  422e96:	jmp    422e83 <flatcc_verify_union_field@@Base+0x123>
  422e98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422ea0 <flatcc_verify_union_vector_field@@Base>:
  422ea0:	push   rbp
  422ea1:	push   r15
  422ea3:	push   r14
  422ea5:	push   r13
  422ea7:	push   r12
  422ea9:	push   rbx
  422eaa:	sub    rsp,0x28
  422eae:	mov    r12,rcx
  422eb1:	lea    r10d,[rsi+rsi*1]
  422eb5:	lea    ecx,[rsi+rsi*1]
  422eb8:	add    ecx,0x2
  422ebb:	movzx  esi,WORD PTR [rdi+0x1e]
  422ebf:	cmp    cx,si
  422ec2:	jae    422ed5 <flatcc_verify_union_vector_field@@Base+0x35>
  422ec4:	mov    r11,QWORD PTR [rdi+0x10]
  422ec8:	movzx  eax,cx
  422ecb:	movzx  ebp,WORD PTR [r11+rax*1]
  422ed0:	test   bp,bp
  422ed3:	jne    422f16 <flatcc_verify_union_vector_field@@Base+0x76>
  422ed5:	lea    eax,[r10+0x4]
  422ed9:	cmp    ax,si
  422edc:	jae    422f6b <flatcc_verify_union_vector_field@@Base+0xcb>
  422ee2:	test   edx,edx
  422ee4:	je     422f00 <flatcc_verify_union_vector_field@@Base+0x60>
  422ee6:	mov    rbp,QWORD PTR [rdi+0x10]
  422eea:	movzx  eax,ax
  422eed:	movzx  ebp,WORD PTR [rbp+rax*1+0x0]
  422ef2:	mov    eax,0x16
  422ef7:	test   bp,bp
  422efa:	je     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422f00:	cmp    cx,si
  422f03:	jae    422f7a <flatcc_verify_union_vector_field@@Base+0xda>
  422f05:	mov    r11,QWORD PTR [rdi+0x10]
  422f09:	movzx  eax,cx
  422f0c:	movzx  ebp,WORD PTR [r11+rax*1]
  422f11:	test   bp,bp
  422f14:	je     422f7a <flatcc_verify_union_vector_field@@Base+0xda>
  422f16:	add    rax,r11
  422f19:	movzx  ecx,bp
  422f1c:	lea    ebp,[rcx+0x4]
  422f1f:	movzx  ebx,WORD PTR [rdi+0x1c]
  422f23:	cmp    ebp,ebx
  422f25:	ja     422f92 <flatcc_verify_union_vector_field@@Base+0xf2>
  422f27:	add    ecx,DWORD PTR [rdi+0x18]
  422f2a:	test   cl,0x3
  422f2d:	jne    422f92 <flatcc_verify_union_vector_field@@Base+0xf2>
  422f2f:	test   ecx,ecx
  422f31:	je     423029 <flatcc_verify_union_vector_field@@Base+0x189>
  422f37:	mov    r8,QWORD PTR [rdi]
  422f3a:	mov    ebp,ecx
  422f3c:	mov    ebp,DWORD PTR [r8+rbp*1]
  422f40:	add    ebp,ecx
  422f42:	cmp    ebp,ecx
  422f44:	jbe    422f92 <flatcc_verify_union_vector_field@@Base+0xf2>
  422f46:	test   bpl,0x3
  422f4a:	jne    422f92 <flatcc_verify_union_vector_field@@Base+0xf2>
  422f4c:	mov    ecx,DWORD PTR [rdi+0x8]
  422f4f:	mov    r9d,ebp
  422f52:	lea    rbx,[r9+0x4]
  422f56:	cmp    rbx,rcx
  422f59:	ja     422f92 <flatcc_verify_union_vector_field@@Base+0xf2>
  422f5b:	add    ecx,0xfffffffc
  422f5e:	sub    ecx,ebp
  422f60:	cmp    ecx,DWORD PTR [r8+r9*1]
  422f64:	jb     422f92 <flatcc_verify_union_vector_field@@Base+0xf2>
  422f66:	jmp    423029 <flatcc_verify_union_vector_field@@Base+0x189>
  422f6b:	mov    eax,0x16
  422f70:	test   edx,edx
  422f72:	jne    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422f78:	jmp    422f00 <flatcc_verify_union_vector_field@@Base+0x60>
  422f7a:	test   edx,edx
  422f7c:	je     423014 <flatcc_verify_union_vector_field@@Base+0x174>
  422f82:	cmp    cx,si
  422f85:	jae    423187 <flatcc_verify_union_vector_field@@Base+0x2e7>
  422f8b:	movzx  eax,cx
  422f8e:	add    rax,QWORD PTR [rdi+0x10]
  422f92:	movzx  ecx,WORD PTR [rax]
  422f95:	test   ecx,ecx
  422f97:	je     423187 <flatcc_verify_union_vector_field@@Base+0x2e7>
  422f9d:	lea    edx,[rcx+0x4]
  422fa0:	movzx  esi,WORD PTR [rdi+0x1c]
  422fa4:	mov    eax,0xd
  422fa9:	cmp    edx,esi
  422fab:	ja     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422fb1:	add    ecx,DWORD PTR [rdi+0x18]
  422fb4:	mov    eax,0xc
  422fb9:	test   cl,0x3
  422fbc:	jne    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422fc2:	test   ecx,ecx
  422fc4:	je     4231a0 <flatcc_verify_union_vector_field@@Base+0x300>
  422fca:	mov    rdx,QWORD PTR [rdi]
  422fcd:	mov    eax,ecx
  422fcf:	mov    esi,DWORD PTR [rdx+rax*1]
  422fd2:	add    esi,ecx
  422fd4:	mov    eax,0x10
  422fd9:	cmp    esi,ecx
  422fdb:	jbe    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422fe1:	test   sil,0x3
  422fe5:	jne    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422feb:	mov    ecx,DWORD PTR [rdi+0x8]
  422fee:	mov    edi,esi
  422ff0:	lea    rbp,[rdi+0x4]
  422ff4:	cmp    rbp,rcx
  422ff7:	ja     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  422ffd:	add    ecx,0xfffffffc
  423000:	sub    ecx,esi
  423002:	xor    esi,esi
  423004:	cmp    ecx,DWORD PTR [rdx+rdi*1]
  423007:	mov    eax,0x1a
  42300c:	cmovae eax,esi
  42300f:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  423014:	xor    eax,eax
  423016:	cmp    cx,si
  423019:	jae    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42301f:	mov    r11,QWORD PTR [rdi+0x10]
  423023:	movzx  eax,cx
  423026:	add    rax,r11
  423029:	movzx  ecx,WORD PTR [rax]
  42302c:	xor    eax,eax
  42302e:	test   rcx,rcx
  423031:	je     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  423037:	mov    r15,QWORD PTR [rdi]
  42303a:	mov    r8d,DWORD PTR [rdi+0x18]
  42303e:	lea    r9,[r15+r8*1]
  423042:	add    r9,rcx
  423045:	je     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42304b:	add    r10d,0x4
  42304f:	cmp    r10w,si
  423053:	jae    423187 <flatcc_verify_union_vector_field@@Base+0x2e7>
  423059:	movzx  eax,r10w
  42305d:	movzx  ecx,WORD PTR [r11+rax*1]
  423062:	test   ecx,ecx
  423064:	je     423187 <flatcc_verify_union_vector_field@@Base+0x2e7>
  42306a:	lea    edx,[rcx+0x4]
  42306d:	movzx  esi,WORD PTR [rdi+0x1c]
  423071:	mov    eax,0xd
  423076:	cmp    edx,esi
  423078:	ja     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42307e:	lea    ebx,[r8+rcx*1]
  423082:	mov    eax,0xc
  423087:	test   bl,0x3
  42308a:	jne    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  423090:	mov    eax,0x0
  423095:	test   ebx,ebx
  423097:	je     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42309d:	mov    esi,DWORD PTR [rdi+0xc]
  4230a0:	test   esi,esi
  4230a2:	jle    4231a4 <flatcc_verify_union_vector_field@@Base+0x304>
  4230a8:	mov    eax,ebx
  4230aa:	mov    edx,DWORD PTR [r15+rax*1]
  4230ae:	lea    ebp,[rdx+rbx*1]
  4230b1:	mov    eax,0x10
  4230b6:	cmp    ebp,ebx
  4230b8:	jbe    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4230be:	test   bpl,0x3
  4230c2:	jne    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4230c8:	mov    r10d,DWORD PTR [rdi+0x8]
  4230cc:	mov    ebx,ebp
  4230ce:	lea    rdi,[rbx+0x4]
  4230d2:	cmp    rdi,r10
  4230d5:	ja     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4230db:	mov    ebx,DWORD PTR [r15+rbx*1]
  4230df:	mov    eax,0x19
  4230e4:	cmp    ebx,0x3fffffff
  4230ea:	ja     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4230f0:	lea    edi,[r10-0x4]
  4230f4:	sub    edi,ebp
  4230f6:	lea    ebp,[rbx*4+0x0]
  4230fd:	mov    eax,0x1a
  423102:	cmp    edi,ebp
  423104:	jb     423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42310a:	mov    r13d,DWORD PTR [r9]
  42310d:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  423112:	mov    eax,0x22
  423117:	cmp    ebx,edi
  423119:	jne    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42311b:	add    esi,0xffffffff
  42311e:	mov    QWORD PTR [rsp+0x8],r15
  423123:	mov    DWORD PTR [rsp+0x10],r10d
  423128:	mov    DWORD PTR [rsp+0x14],esi
  42312c:	test   edi,edi
  42312e:	je     4231a0 <flatcc_verify_union_vector_field@@Base+0x300>
  423130:	mov    rax,rdi
  423133:	add    r13,r9
  423136:	add    edx,r8d
  423139:	lea    ebp,[rcx+rdx*1]
  42313c:	add    ebp,0x4
  42313f:	xor    r14d,r14d
  423142:	mov    rbx,rdi
  423145:	mov    eax,ebp
  423147:	mov    eax,DWORD PTR [r15+rax*1]
  42314b:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  423151:	test   eax,eax
  423153:	je     423173 <flatcc_verify_union_vector_field@@Base+0x2d3>
  423155:	test   cl,cl
  423157:	je     4231ab <flatcc_verify_union_vector_field@@Base+0x30b>
  423159:	mov    BYTE PTR [rsp+0x18],cl
  42315d:	mov    DWORD PTR [rsp+0x1c],ebp
  423161:	mov    DWORD PTR [rsp+0x20],eax
  423165:	lea    rdi,[rsp+0x8]
  42316a:	call   r12
  42316d:	test   eax,eax
  42316f:	je     423177 <flatcc_verify_union_vector_field@@Base+0x2d7>
  423171:	jmp    4231b2 <flatcc_verify_union_vector_field@@Base+0x312>
  423173:	test   cl,cl
  423175:	jne    4231bc <flatcc_verify_union_vector_field@@Base+0x31c>
  423177:	add    r14,0x1
  42317b:	add    ebp,0x4
  42317e:	xor    eax,eax
  423180:	cmp    r14,rbx
  423183:	jb     423145 <flatcc_verify_union_vector_field@@Base+0x2a5>
  423185:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  423187:	xor    eax,eax
  423189:	test   edx,edx
  42318b:	setne  al
  42318e:	shl    eax,0x2
  423191:	add    rsp,0x28
  423195:	pop    rbx
  423196:	pop    r12
  423198:	pop    r13
  42319a:	pop    r14
  42319c:	pop    r15
  42319e:	pop    rbp
  42319f:	ret    
  4231a0:	xor    eax,eax
  4231a2:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4231a4:	mov    eax,0x3
  4231a9:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4231ab:	mov    eax,0x21
  4231b0:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4231b2:	lea    rdi,[rsp+0x8]
  4231b7:	call   r12
  4231ba:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4231bc:	mov    eax,0x20
  4231c1:	jmp    423191 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4231c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231cd:	nop    DWORD PTR [rax]

00000000004231d0 <grisu3_diy_fp_encode_double@@Base>:
  4231d0:	push   rbp
  4231d1:	push   r15
  4231d3:	push   r14
  4231d5:	push   r13
  4231d7:	push   r12
  4231d9:	push   rbx
  4231da:	push   rax
  4231db:	xor    ebx,ebx
  4231dd:	test   ecx,ecx
  4231df:	setne  r10b
  4231e3:	test   rdi,rdi
  4231e6:	je     42353e <grisu3_diy_fp_encode_double@@Base+0x36e>
  4231ec:	movabs r9,0x40000000000000
  4231f6:	xor    eax,eax
  4231f8:	mov    rcx,rdi
  4231fb:	shr    rcx,0x36
  4231ff:	jne    42321c <grisu3_diy_fp_encode_double@@Base+0x4c>
  423201:	xor    eax,eax
  423203:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42320d:	nop    DWORD PTR [rax]
  423210:	shl    rdi,0xa
  423214:	add    eax,0xfffffff6
  423217:	cmp    rdi,r9
  42321a:	jb     423210 <grisu3_diy_fp_encode_double@@Base+0x40>
  42321c:	sub    esi,edx
  42321e:	test   rdi,rdi
  423221:	js     42323b <grisu3_diy_fp_encode_double@@Base+0x6b>
  423223:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42322d:	nop    DWORD PTR [rax]
  423230:	add    rdi,rdi
  423233:	add    eax,0xffffffff
  423236:	test   rdi,rdi
  423239:	jns    423230 <grisu3_diy_fp_encode_double@@Base+0x60>
  42323b:	cmp    esi,0xfffffea3
  423241:	jle    42355d <grisu3_diy_fp_encode_double@@Base+0x38d>
  423247:	cmp    esi,0x15c
  42324d:	jge    42357c <grisu3_diy_fp_encode_double@@Base+0x3ac>
  423253:	lea    ecx,[rsi+0x15c]
  423259:	sar    ecx,0x1f
  42325c:	shr    ecx,0x1d
  42325f:	lea    ecx,[rsi+rcx*1]
  423262:	add    ecx,0x15c
  423268:	sar    ecx,0x3
  42326b:	movsxd r11,ecx
  42326e:	shl    r11,0x4
  423272:	lea    r14,[rip+0x15687]        # 438900 <flatcc_builder_padding_base@@Base+0x1d60>
  423279:	movsx  ecx,WORD PTR [r11+r14*1+0xa]
  42327f:	cmp    esi,ecx
  423281:	jl     42359b <grisu3_diy_fp_encode_double@@Base+0x3cb>
  423287:	lea    ebp,[rcx+0x8]
  42328a:	cmp    ebp,esi
  42328c:	jle    4235ba <grisu3_diy_fp_encode_double@@Base+0x3ea>
  423292:	mov    bl,r10b
  423295:	shl    ebx,0x2
  423298:	mov    ebp,eax
  42329a:	neg    ebp
  42329c:	shlx   r10d,ebx,ebp
  4232a1:	cmp    esi,ecx
  4232a3:	je     423335 <grisu3_diy_fp_encode_double@@Base+0x165>
  4232a9:	not    ecx
  4232ab:	add    esi,ecx
  4232ad:	cmp    esi,0x7
  4232b0:	jae    4235d9 <grisu3_diy_fp_encode_double@@Base+0x409>
  4232b6:	movsxd rcx,esi
  4232b9:	shl    rcx,0x4
  4232bd:	lea    rbx,[rip+0x155cc]        # 438890 <flatcc_builder_padding_base@@Base+0x1cf0>
  4232c4:	mov    rbp,QWORD PTR [rcx+rbx*1]
  4232c8:	mov    r15d,DWORD PTR [rcx+rbx*1+0x8]
  4232cd:	mov    rbx,rdi
  4232d0:	shr    rbx,0x20
  4232d4:	mov    r12d,edi
  4232d7:	mov    edi,ebp
  4232d9:	mov    rcx,rbp
  4232dc:	shr    rcx,0x20
  4232e0:	mov    r13,rcx
  4232e3:	imul   r13,rbx
  4232e7:	imul   rcx,r12
  4232eb:	imul   rbx,rdi
  4232ef:	imul   rdi,r12
  4232f3:	shr    rdi,0x20
  4232f7:	mov    ebp,ebx
  4232f9:	add    rbp,rdi
  4232fc:	mov    edi,ecx
  4232fe:	add    rdi,rbp
  423301:	sub    rdi,0xffffffff80000000
  423308:	shr    rbx,0x20
  42330c:	add    rbx,r13
  42330f:	shr    rcx,0x20
  423313:	add    rcx,rbx
  423316:	shr    rdi,0x20
  42331a:	add    rdi,rcx
  42331d:	lea    eax,[rax+r15*1]
  423321:	add    eax,0x40
  423324:	lea    ecx,[rdx+rsi*1]
  423327:	add    ecx,0x1
  42332a:	lea    edx,[r10+0x4]
  42332e:	cmp    ecx,0x13
  423331:	cmovg  r10d,edx
  423335:	mov    rsi,QWORD PTR [r11+r14*1]
  423339:	mov    rdx,rdi
  42333c:	shr    rdx,0x20
  423340:	mov    ecx,edi
  423342:	mov    edi,esi
  423344:	shr    rsi,0x20
  423348:	mov    rbx,rdx
  42334b:	imul   rbx,rsi
  42334f:	imul   rsi,rcx
  423353:	imul   rdx,rdi
  423357:	imul   rcx,rdi
  42335b:	shr    rcx,0x20
  42335f:	mov    edi,edx
  423361:	add    rdi,rcx
  423364:	mov    ecx,esi
  423366:	add    rcx,rdi
  423369:	sub    rcx,0xffffffff80000000
  423370:	shr    rdx,0x20
  423374:	add    rdx,rbx
  423377:	shr    rsi,0x20
  42337b:	add    rsi,rdx
  42337e:	shr    rcx,0x20
  423382:	cmp    r10d,0x1
  423386:	sbb    r10d,0x0
  42338a:	add    rcx,rsi
  42338d:	je     42353e <grisu3_diy_fp_encode_double@@Base+0x36e>
  423393:	movsx  edx,WORD PTR [r11+r14*1+0x8]
  423399:	lea    eax,[rdx+rax*1]
  42339c:	add    eax,0x40
  42339f:	mov    edx,eax
  4233a1:	cmp    rcx,r9
  4233a4:	jae    4233bc <grisu3_diy_fp_encode_double@@Base+0x1ec>
  4233a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233b0:	shl    rcx,0xa
  4233b4:	add    edx,0xfffffff6
  4233b7:	cmp    rcx,r9
  4233ba:	jb     4233b0 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  4233bc:	add    r10d,0x9
  4233c0:	test   rcx,rcx
  4233c3:	js     4233db <grisu3_diy_fp_encode_double@@Base+0x20b>
  4233c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233cf:	nop
  4233d0:	add    rcx,rcx
  4233d3:	add    edx,0xffffffff
  4233d6:	test   rcx,rcx
  4233d9:	jns    4233d0 <grisu3_diy_fp_encode_double@@Base+0x200>
  4233db:	sub    eax,edx
  4233dd:	shlx   r14d,r10d,eax
  4233e2:	xor    ebx,ebx
  4233e4:	cmp    edx,0xfffffbcd
  4233ea:	jg     423421 <grisu3_diy_fp_encode_double@@Base+0x251>
  4233ec:	mov    ebx,0x40
  4233f1:	cmp    edx,0xfffffb8f
  4233f7:	jl     423405 <grisu3_diy_fp_encode_double@@Base+0x235>
  4233f9:	mov    ebx,0xfffffbce
  4233fe:	sub    ebx,edx
  423400:	cmp    ebx,0x3d
  423403:	jl     423421 <grisu3_diy_fp_encode_double@@Base+0x251>
  423405:	lea    eax,[rbx-0x3e]
  423408:	shrx   rcx,rcx,rax
  42340d:	lea    edx,[rbx+rdx*1]
  423410:	add    edx,0xffffffc2
  423413:	sarx   r14d,r14d,eax
  423418:	add    r14d,0x9
  42341c:	mov    ebx,0x3e
  423421:	movabs r11,0x1fffffffffffff
  42342b:	shrx   rax,rcx,rbx
  423430:	add    edx,ebx
  423432:	lea    esi,[rbx-0x1]
  423435:	mov    edi,0x1
  42343a:	shlx   r15,rdi,rsi
  42343f:	lea    r10d,[r14+r15*8]
  423443:	cmp    ebx,r10d
  423446:	jl     42345b <grisu3_diy_fp_encode_double@@Base+0x28b>
  423448:	add    rax,0x1
  42344c:	lea    rsi,[r11+0x1]
  423450:	test   rax,rsi
  423453:	je     42345b <grisu3_diy_fp_encode_double@@Base+0x28b>
  423455:	shr    rax,1
  423458:	add    edx,0x1
  42345b:	and    ecx,r15d
  42345e:	cmp    rax,r11
  423461:	jbe    423480 <grisu3_diy_fp_encode_double@@Base+0x2b0>
  423463:	add    r9,0xffffffffffffffff
  423467:	mov    rdi,rax
  42346a:	nop    WORD PTR [rax+rax*1+0x0]
  423470:	shr    rdi,1
  423473:	add    edx,0x1
  423476:	cmp    rax,r9
  423479:	mov    rax,rdi
  42347c:	ja     423470 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  42347e:	jmp    423483 <grisu3_diy_fp_encode_double@@Base+0x2b3>
  423480:	mov    rdi,rax
  423483:	shl    ecx,0x3
  423486:	shl    r15d,0x3
  42348a:	vpxor  xmm0,xmm0,xmm0
  42348e:	cmp    edx,0xfffffbce
  423494:	jl     423516 <grisu3_diy_fp_encode_double@@Base+0x346>
  42349a:	movabs r9,0xfffffffffffff
  4234a4:	lea    rsi,[r9+0x1]
  4234a8:	and    rsi,rdi
  4234ab:	sete   al
  4234ae:	cmp    edx,0xfffffbce
  4234b4:	je     4234ef <grisu3_diy_fp_encode_double@@Base+0x31f>
  4234b6:	test   rsi,rsi
  4234b9:	jne    4234ef <grisu3_diy_fp_encode_double@@Base+0x31f>
  4234bb:	movabs rsi,0x8000000000000
  4234c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4234cf:	nop
  4234d0:	mov    ebp,edx
  4234d2:	lea    edx,[rbp-0x1]
  4234d5:	mov    rbx,rdi
  4234d8:	and    rbx,rsi
  4234db:	lea    rdi,[rdi+rdi*1]
  4234df:	sete   al
  4234e2:	cmp    ebp,0xfffffbd0
  4234e8:	jl     4234ef <grisu3_diy_fp_encode_double@@Base+0x31f>
  4234ea:	test   rbx,rbx
  4234ed:	je     4234d0 <grisu3_diy_fp_encode_double@@Base+0x300>
  4234ef:	lea    esi,[rdx+0x433]
  4234f5:	shl    rsi,0x34
  4234f9:	xor    ebp,ebp
  4234fb:	test   al,al
  4234fd:	cmove  rbp,rsi
  423501:	cmp    edx,0xfffffbce
  423507:	cmovne rbp,rsi
  42350b:	and    rdi,r9
  42350e:	or     rdi,rbp
  423511:	vmovq  xmm0,rdi
  423516:	vmovq  QWORD PTR [r8],xmm0
  42351b:	sub    r15d,r14d
  42351e:	cmp    r15d,ecx
  423521:	setge  al
  423524:	cmp    ecx,r10d
  423527:	setge  cl
  42352a:	or     cl,al
  42352c:	movzx  eax,cl
  42352f:	add    rsp,0x8
  423533:	pop    rbx
  423534:	pop    r12
  423536:	pop    r13
  423538:	pop    r14
  42353a:	pop    r15
  42353c:	pop    rbp
  42353d:	ret    
  42353e:	lea    rdi,[rip+0x1615d]        # 4396a2 <flatcc_builder_padding_base@@Base+0x2b02>
  423545:	lea    rsi,[rip+0x1615f]        # 4396ab <flatcc_builder_padding_base@@Base+0x2b0b>
  42354c:	lea    rcx,[rip+0x161c8]        # 43971b <flatcc_builder_padding_base@@Base+0x2b7b>
  423553:	mov    edx,0x104
  423558:	call   406070 <__assert_fail@plt>
  42355d:	lea    rdi,[rip+0x161f0]        # 439754 <flatcc_builder_padding_base@@Base+0x2bb4>
  423564:	lea    rsi,[rip+0x15bf9]        # 439164 <flatcc_builder_padding_base@@Base+0x25c4>
  42356b:	lea    rcx,[rip+0x16201]        # 439773 <flatcc_builder_padding_base@@Base+0x2bd3>
  423572:	mov    edx,0x50
  423577:	call   406070 <__assert_fail@plt>
  42357c:	lea    rdi,[rip+0x16229]        # 4397ac <flatcc_builder_padding_base@@Base+0x2c0c>
  423583:	lea    rsi,[rip+0x15bda]        # 439164 <flatcc_builder_padding_base@@Base+0x25c4>
  42358a:	lea    rcx,[rip+0x161e2]        # 439773 <flatcc_builder_padding_base@@Base+0x2bd3>
  423591:	mov    edx,0x51
  423596:	call   406070 <__assert_fail@plt>
  42359b:	lea    rdi,[rip+0x16235]        # 4397d7 <flatcc_builder_padding_base@@Base+0x2c37>
  4235a2:	lea    rsi,[rip+0x15bbb]        # 439164 <flatcc_builder_padding_base@@Base+0x25c4>
  4235a9:	lea    rcx,[rip+0x161c3]        # 439773 <flatcc_builder_padding_base@@Base+0x2bd3>
  4235b0:	mov    edx,0x58
  4235b5:	call   406070 <__assert_fail@plt>
  4235ba:	lea    rdi,[rip+0x16225]        # 4397e6 <flatcc_builder_padding_base@@Base+0x2c46>
  4235c1:	lea    rsi,[rip+0x15b9c]        # 439164 <flatcc_builder_padding_base@@Base+0x25c4>
  4235c8:	lea    rcx,[rip+0x161a4]        # 439773 <flatcc_builder_padding_base@@Base+0x2bd3>
  4235cf:	mov    edx,0x59
  4235d4:	call   406070 <__assert_fail@plt>
  4235d9:	lea    rdi,[rip+0x15b68]        # 439148 <flatcc_builder_padding_base@@Base+0x25a8>
  4235e0:	lea    rsi,[rip+0x15b7d]        # 439164 <flatcc_builder_padding_base@@Base+0x25c4>
  4235e7:	lea    rcx,[rip+0x15be7]        # 4391d5 <flatcc_builder_padding_base@@Base+0x2635>
  4235ee:	mov    edx,0xb9
  4235f3:	call   406070 <__assert_fail@plt>
  4235f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423600 <flatcc_json_parser_error_string@@Base>:
  423600:	cmp    edi,0x22
  423603:	ja     423614 <flatcc_json_parser_error_string@@Base+0x14>
  423605:	movsxd rax,edi
  423608:	lea    rcx,[rip+0x1d6b1]        # 440cc0 <flatcc_builder_padding_base@@Base+0xa120>
  42360f:	mov    rax,QWORD PTR [rcx+rax*8]
  423613:	ret    
  423614:	lea    rax,[rip+0x14e85]        # 4384a0 <flatcc_builder_padding_base@@Base+0x1900>
  42361b:	ret    
  42361c:	nop    DWORD PTR [rax+0x0]

0000000000423620 <flatcc_json_parser_set_error@@Base>:
  423620:	cmp    DWORD PTR [rdi+0x1c],0x0
  423624:	je     42362a <flatcc_json_parser_set_error@@Base+0xa>
  423626:	mov    rax,rdx
  423629:	ret    
  42362a:	mov    DWORD PTR [rdi+0x1c],ecx
  42362d:	mov    eax,DWORD PTR [rdi+0x8]
  423630:	mov    ecx,esi
  423632:	sub    ecx,eax
  423634:	add    ecx,0x1
  423637:	mov    DWORD PTR [rdi+0x18],ecx
  42363a:	mov    QWORD PTR [rdi+0x30],rsi
  42363e:	mov    rax,rdx
  423641:	ret    
  423642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42364c:	nop    DWORD PTR [rax+0x0]

0000000000423650 <flatcc_json_parser_string_part@@Base>:
  423650:	cmp    rsi,rdx
  423653:	je     42367b <flatcc_json_parser_string_part@@Base+0x2b>
  423655:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42365f:	nop
  423660:	movzx  eax,BYTE PTR [rsi]
  423663:	cmp    al,0x20
  423665:	jb     42368a <flatcc_json_parser_string_part@@Base+0x3a>
  423667:	cmp    al,0x22
  423669:	je     4236ab <flatcc_json_parser_string_part@@Base+0x5b>
  42366b:	cmp    al,0x5c
  42366d:	je     4236ab <flatcc_json_parser_string_part@@Base+0x5b>
  42366f:	add    rsi,0x1
  423673:	cmp    rdx,rsi
  423676:	jne    423660 <flatcc_json_parser_string_part@@Base+0x10>
  423678:	mov    rsi,rdx
  42367b:	cmp    DWORD PTR [rdi+0x1c],0x0
  42367f:	jne    4236a8 <flatcc_json_parser_string_part@@Base+0x58>
  423681:	mov    DWORD PTR [rdi+0x1c],0x14
  423688:	jmp    423697 <flatcc_json_parser_string_part@@Base+0x47>
  42368a:	cmp    DWORD PTR [rdi+0x1c],0x0
  42368e:	jne    4236a8 <flatcc_json_parser_string_part@@Base+0x58>
  423690:	mov    DWORD PTR [rdi+0x1c],0x11
  423697:	mov    eax,DWORD PTR [rdi+0x8]
  42369a:	mov    ecx,esi
  42369c:	sub    ecx,eax
  42369e:	add    ecx,0x1
  4236a1:	mov    DWORD PTR [rdi+0x18],ecx
  4236a4:	mov    QWORD PTR [rdi+0x30],rsi
  4236a8:	mov    rsi,rdx
  4236ab:	mov    rax,rsi
  4236ae:	ret    
  4236af:	nop

00000000004236b0 <flatcc_json_parser_space_ext@@Base>:
  4236b0:	lea    rax,[rip+0x14df9]        # 4384b0 <flatcc_builder_padding_base@@Base+0x1910>
  4236b7:	mov    rcx,rdx
  4236ba:	sub    rcx,rsi
  4236bd:	cmp    rcx,0x10
  4236c1:	jl     4236f3 <flatcc_json_parser_space_ext@@Base+0x43>
  4236c3:	cmp    BYTE PTR [rsi],0x20
  4236c6:	jg     423791 <flatcc_json_parser_space_ext@@Base+0xe1>
  4236cc:	movzx  r8d,WORD PTR [rsi]
  4236d0:	lea    rcx,[rsi+0x2]
  4236d4:	cmp    r8d,0x2020
  4236db:	cmovne rcx,rsi
  4236df:	lea    rsi,[rcx+0x1]
  4236e3:	cmp    BYTE PTR [rcx],0x20
  4236e6:	cmovne rsi,rcx
  4236ea:	cmp    BYTE PTR [rsi],0x20
  4236ed:	jg     423791 <flatcc_json_parser_space_ext@@Base+0xe1>
  4236f3:	cmp    rsi,rdx
  4236f6:	je     42378e <flatcc_json_parser_space_ext@@Base+0xde>
  4236fc:	nop    DWORD PTR [rax+0x0]
  423700:	cmp    BYTE PTR [rsi],0x20
  423703:	jne    423710 <flatcc_json_parser_space_ext@@Base+0x60>
  423705:	add    rsi,0x1
  423709:	cmp    rdx,rsi
  42370c:	jne    423700 <flatcc_json_parser_space_ext@@Base+0x50>
  42370e:	jmp    42378e <flatcc_json_parser_space_ext@@Base+0xde>
  423710:	cmp    rdx,rsi
  423713:	je     42378e <flatcc_json_parser_space_ext@@Base+0xde>
  423715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42371f:	nop
  423720:	movsx  ecx,BYTE PTR [rsi]
  423723:	cmp    ecx,0x20
  423726:	jg     423791 <flatcc_json_parser_space_ext@@Base+0xe1>
  423728:	add    ecx,0xfffffff7
  42372b:	cmp    ecx,0x17
  42372e:	ja     423770 <flatcc_json_parser_space_ext@@Base+0xc0>
  423730:	movsxd rcx,DWORD PTR [rax+rcx*4]
  423734:	add    rcx,rax
  423737:	jmp    rcx
  423739:	add    rsi,0x1
  42373d:	jmp    423769 <flatcc_json_parser_space_ext@@Base+0xb9>
  42373f:	nop
  423740:	mov    rcx,rdx
  423743:	sub    rcx,rsi
  423746:	cmp    rcx,0x2
  42374a:	jl     423755 <flatcc_json_parser_space_ext@@Base+0xa5>
  42374c:	cmp    BYTE PTR [rsi+0x1],0xa
  423750:	sete   cl
  423753:	jmp    423757 <flatcc_json_parser_space_ext@@Base+0xa7>
  423755:	xor    ecx,ecx
  423757:	movzx  ecx,cl
  42375a:	add    rsi,rcx
  42375d:	add    DWORD PTR [rdi+0x14],0x1
  423761:	add    rsi,0x1
  423765:	mov    QWORD PTR [rdi+0x8],rsi
  423769:	cmp    rsi,rdx
  42376c:	jne    423720 <flatcc_json_parser_space_ext@@Base+0x70>
  42376e:	jmp    42378e <flatcc_json_parser_space_ext@@Base+0xde>
  423770:	cmp    DWORD PTR [rdi+0x1c],0x0
  423774:	jne    42378e <flatcc_json_parser_space_ext@@Base+0xde>
  423776:	mov    DWORD PTR [rdi+0x1c],0x5
  42377d:	mov    eax,DWORD PTR [rdi+0x8]
  423780:	mov    ecx,esi
  423782:	sub    ecx,eax
  423784:	add    ecx,0x1
  423787:	mov    DWORD PTR [rdi+0x18],ecx
  42378a:	mov    QWORD PTR [rdi+0x30],rsi
  42378e:	mov    rsi,rdx
  423791:	mov    rax,rsi
  423794:	ret    
  423795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42379f:	nop

00000000004237a0 <flatcc_json_parser_string_escape@@Base>:
  4237a0:	push   rbp
  4237a1:	push   r14
  4237a3:	push   rbx
  4237a4:	mov    rax,rdx
  4237a7:	sub    rax,rsi
  4237aa:	cmp    rax,0x2
  4237ae:	jl     42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  4237b4:	cmp    BYTE PTR [rsi],0x5c
  4237b7:	jne    42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  4237bd:	movsx  ebp,BYTE PTR [rsi+0x1]
  4237c1:	add    ebp,0xffffffde
  4237c4:	cmp    ebp,0x56
  4237c7:	ja     42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  4237c9:	lea    rbx,[rip+0x14d40]        # 438510 <flatcc_builder_padding_base@@Base+0x1970>
  4237d0:	movsxd rbp,DWORD PTR [rbx+rbp*4]
  4237d4:	add    rbp,rbx
  4237d7:	jmp    rbp
  4237d9:	mov    WORD PTR [rcx],0x2201
  4237de:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  4237e0:	mov    WORD PTR [rcx],0x2f01
  4237e5:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  4237e7:	mov    WORD PTR [rcx],0x5c01
  4237ec:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  4237ee:	mov    WORD PTR [rcx],0x801
  4237f3:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  4237f5:	mov    WORD PTR [rcx],0xc01
  4237fa:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  4237fc:	mov    WORD PTR [rcx],0xa01
  423801:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  423803:	mov    WORD PTR [rcx],0xd01
  423808:	jmp    42380f <flatcc_json_parser_string_escape@@Base+0x6f>
  42380a:	mov    WORD PTR [rcx],0x901
  42380f:	add    rsi,0x2
  423813:	mov    rdx,rsi
  423816:	jmp    42385e <flatcc_json_parser_string_escape@@Base+0xbe>
  423818:	cmp    rax,0x5
  42381c:	jle    42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  42381e:	movzx  eax,BYTE PTR [rsi+0x2]
  423822:	mov    ebx,eax
  423824:	add    bl,0xd0
  423827:	cmp    bl,0x9
  42382a:	ja     423880 <flatcc_json_parser_string_escape@@Base+0xe0>
  42382c:	movzx  eax,ax
  42382f:	shl    eax,0xc
  423832:	jmp    423898 <flatcc_json_parser_string_escape@@Base+0xf8>
  423834:	mov    BYTE PTR [rcx],0x1
  423837:	cmp    rax,0x3
  42383b:	jg     423866 <flatcc_json_parser_string_escape@@Base+0xc6>
  42383d:	mov    BYTE PTR [rcx],0x0
  423840:	cmp    DWORD PTR [rdi+0x1c],0x0
  423844:	jne    42385e <flatcc_json_parser_string_escape@@Base+0xbe>
  423846:	mov    DWORD PTR [rdi+0x1c],0x12
  42384d:	mov    eax,DWORD PTR [rdi+0x8]
  423850:	mov    ecx,esi
  423852:	sub    ecx,eax
  423854:	add    ecx,0x1
  423857:	mov    DWORD PTR [rdi+0x18],ecx
  42385a:	mov    QWORD PTR [rdi+0x30],rsi
  42385e:	mov    rax,rdx
  423861:	pop    rbx
  423862:	pop    r14
  423864:	pop    rbp
  423865:	ret    
  423866:	mov    r8b,BYTE PTR [rsi+0x2]
  42386a:	mov    eax,r8d
  42386d:	add    al,0xd0
  42386f:	cmp    al,0x9
  423871:	ja     423956 <flatcc_json_parser_string_escape@@Base+0x1b6>
  423877:	shl    r8b,0x4
  42387b:	jmp    42396d <flatcc_json_parser_string_escape@@Base+0x1cd>
  423880:	mov    ebx,eax
  423882:	or     bl,0x20
  423885:	add    bl,0x9f
  423888:	cmp    bl,0x5
  42388b:	ja     42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  42388d:	movzx  eax,ax
  423890:	shl    eax,0xc
  423893:	add    eax,0xffff9000
  423898:	mov    r8b,BYTE PTR [rsi+0x3]
  42389c:	mov    ebx,r8d
  42389f:	add    bl,0xd0
  4238a2:	mov    r9w,0xd000
  4238a7:	cmp    bl,0xa
  4238aa:	jb     4238c4 <flatcc_json_parser_string_escape@@Base+0x124>
  4238ac:	or     r8b,0x20
  4238b0:	mov    ebx,r8d
  4238b3:	add    bl,0x9f
  4238b6:	mov    r9w,0xa900
  4238bb:	cmp    bl,0x6
  4238be:	jae    42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  4238c4:	mov    r10b,BYTE PTR [rsi+0x4]
  4238c8:	mov    ebx,r10d
  4238cb:	add    bl,0xd0
  4238ce:	mov    r11w,0xfd00
  4238d3:	cmp    bl,0xa
  4238d6:	jb     4238f0 <flatcc_json_parser_string_escape@@Base+0x150>
  4238d8:	or     r10b,0x20
  4238dc:	mov    ebx,r10d
  4238df:	add    bl,0x9f
  4238e2:	mov    r11w,0xfa90
  4238e7:	cmp    bl,0x6
  4238ea:	jae    42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  4238f0:	mov    r14b,BYTE PTR [rsi+0x5]
  4238f4:	mov    ebx,r14d
  4238f7:	add    bl,0xd0
  4238fa:	mov    bp,0xffd0
  4238fe:	cmp    bl,0xa
  423901:	jb     42391a <flatcc_json_parser_string_escape@@Base+0x17a>
  423903:	or     r14b,0x20
  423907:	mov    ebx,r14d
  42390a:	add    bl,0x9f
  42390d:	mov    bp,0xffa9
  423911:	cmp    bl,0x6
  423914:	jae    42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  42391a:	movzx  edx,r8b
  42391e:	shl    edx,0x8
  423921:	add    r9d,edx
  423924:	or     eax,r9d
  423927:	movsx  edx,r10b
  42392b:	shl    edx,0x4
  42392e:	movsx  edi,r11w
  423932:	add    edi,edx
  423934:	or     eax,edi
  423936:	movsx  edx,r14b
  42393a:	movsx  edi,bp
  42393d:	add    edi,edx
  42393f:	or     eax,edi
  423941:	movzx  edx,ax
  423944:	cmp    edx,0x7f
  423947:	ja     4239a6 <flatcc_json_parser_string_escape@@Base+0x206>
  423949:	mov    BYTE PTR [rcx],0x1
  42394c:	mov    edi,0x1
  423951:	jmp    4239ed <flatcc_json_parser_string_escape@@Base+0x24d>
  423956:	mov    eax,r8d
  423959:	or     al,0x20
  42395b:	add    al,0x9f
  42395d:	cmp    al,0x5
  42395f:	ja     42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  423965:	shl    r8b,0x4
  423969:	add    r8b,0x90
  42396d:	mov    r9b,BYTE PTR [rsi+0x3]
  423971:	mov    ebx,r9d
  423974:	add    bl,0xd0
  423977:	cmp    bl,0xa
  42397a:	jb     423994 <flatcc_json_parser_string_escape@@Base+0x1f4>
  42397c:	or     r9b,0x20
  423980:	mov    eax,r9d
  423983:	add    al,0x9f
  423985:	cmp    al,0x5
  423987:	ja     42383d <flatcc_json_parser_string_escape@@Base+0x9d>
  42398d:	add    r9b,0xa9
  423991:	mov    ebx,r9d
  423994:	or     bl,r8b
  423997:	mov    BYTE PTR [rcx+0x1],bl
  42399a:	add    rsi,0x4
  42399e:	mov    rdx,rsi
  4239a1:	jmp    42385e <flatcc_json_parser_string_escape@@Base+0xbe>
  4239a6:	cmp    edx,0x7ff
  4239ac:	ja     4239c7 <flatcc_json_parser_string_escape@@Base+0x227>
  4239ae:	mov    BYTE PTR [rcx],0x2
  4239b1:	mov    edx,eax
  4239b3:	shr    edx,0x6
  4239b6:	or     dl,0xc0
  4239b9:	mov    BYTE PTR [rcx+0x1],dl
  4239bc:	and    al,0x3f
  4239be:	or     al,0x80
  4239c0:	mov    edi,0x2
  4239c5:	jmp    4239ed <flatcc_json_parser_string_escape@@Base+0x24d>
  4239c7:	mov    BYTE PTR [rcx],0x3
  4239ca:	mov    eax,edx
  4239cc:	shr    eax,0xc
  4239cf:	or     al,0xe0
  4239d1:	mov    BYTE PTR [rcx+0x1],al
  4239d4:	mov    eax,edx
  4239d6:	shr    eax,0x6
  4239d9:	and    al,0x3f
  4239db:	or     al,0x80
  4239dd:	mov    BYTE PTR [rcx+0x2],al
  4239e0:	and    dl,0x3f
  4239e3:	or     dl,0x80
  4239e6:	mov    edi,0x3
  4239eb:	mov    eax,edx
  4239ed:	mov    BYTE PTR [rcx+rdi*1],al
  4239f0:	add    rsi,0x6
  4239f4:	mov    rdx,rsi
  4239f7:	jmp    42385e <flatcc_json_parser_string_escape@@Base+0xbe>
  4239fc:	nop    DWORD PTR [rax+0x0]

0000000000423a00 <flatcc_json_parser_skip_constant@@Base>:
  423a00:	push   r15
  423a02:	push   r14
  423a04:	push   rbx
  423a05:	mov    rbx,rsi
  423a08:	cmp    rsi,rdx
  423a0b:	je     423a91 <flatcc_json_parser_skip_constant@@Base+0x91>
  423a11:	mov    r14,rdx
  423a14:	mov    r15,rdi
  423a17:	nop    WORD PTR [rax+rax*1+0x0]
  423a20:	movzx  eax,BYTE PTR [rbx]
  423a23:	test   al,al
  423a25:	js     423a50 <flatcc_json_parser_skip_constant@@Base+0x50>
  423a27:	cmp    al,0x5f
  423a29:	je     423a50 <flatcc_json_parser_skip_constant@@Base+0x50>
  423a2b:	cmp    al,0x2e
  423a2d:	je     423a50 <flatcc_json_parser_skip_constant@@Base+0x50>
  423a2f:	mov    ecx,eax
  423a31:	add    cl,0xd0
  423a34:	cmp    cl,0x9
  423a37:	jbe    423a50 <flatcc_json_parser_skip_constant@@Base+0x50>
  423a39:	mov    ecx,eax
  423a3b:	or     cl,0x20
  423a3e:	add    cl,0x9f
  423a41:	cmp    cl,0x19
  423a44:	ja     423a61 <flatcc_json_parser_skip_constant@@Base+0x61>
  423a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a50:	add    rbx,0x1
  423a54:	mov    rax,rbx
  423a57:	mov    rbx,rax
  423a5a:	cmp    rax,r14
  423a5d:	jne    423a20 <flatcc_json_parser_skip_constant@@Base+0x20>
  423a5f:	jmp    423a8e <flatcc_json_parser_skip_constant@@Base+0x8e>
  423a61:	mov    rcx,r14
  423a64:	sub    rcx,rbx
  423a67:	cmp    rcx,0x2
  423a6b:	jl     423a79 <flatcc_json_parser_skip_constant@@Base+0x79>
  423a6d:	cmp    al,0x20
  423a6f:	jg     423a91 <flatcc_json_parser_skip_constant@@Base+0x91>
  423a71:	jne    423a79 <flatcc_json_parser_skip_constant@@Base+0x79>
  423a73:	cmp    BYTE PTR [rbx+0x1],0x20
  423a77:	jg     423a50 <flatcc_json_parser_skip_constant@@Base+0x50>
  423a79:	mov    rdi,r15
  423a7c:	mov    rsi,rbx
  423a7f:	mov    rdx,r14
  423a82:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  423a87:	cmp    rax,rbx
  423a8a:	jne    423a57 <flatcc_json_parser_skip_constant@@Base+0x57>
  423a8c:	jmp    423a91 <flatcc_json_parser_skip_constant@@Base+0x91>
  423a8e:	mov    rbx,r14
  423a91:	mov    rax,rbx
  423a94:	pop    rbx
  423a95:	pop    r14
  423a97:	pop    r15
  423a99:	ret    
  423a9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000423aa0 <flatcc_json_parser_match_constant@@Base>:
  423aa0:	push   r14
  423aa2:	push   rbx
  423aa3:	push   rax
  423aa4:	mov    r14,r8
  423aa7:	mov    rax,rsi
  423aaa:	movsxd rcx,ecx
  423aad:	mov    rsi,rdx
  423ab0:	sub    rsi,rax
  423ab3:	cmp    rsi,rcx
  423ab6:	jle    423b4b <flatcc_json_parser_match_constant@@Base+0xab>
  423abc:	add    rcx,rax
  423abf:	movsx  esi,BYTE PTR [rcx]
  423ac2:	cmp    esi,0x20
  423ac5:	jne    423af3 <flatcc_json_parser_match_constant@@Base+0x53>
  423ac7:	lea    rax,[rdx-0x1]
  423acb:	nop    DWORD PTR [rax+rax*1+0x0]
  423ad0:	cmp    rax,rcx
  423ad3:	je     423b35 <flatcc_json_parser_match_constant@@Base+0x95>
  423ad5:	movzx  ebx,BYTE PTR [rcx+0x1]
  423ad9:	add    rcx,0x1
  423add:	cmp    bl,0x20
  423ae0:	je     423ad0 <flatcc_json_parser_match_constant@@Base+0x30>
  423ae2:	cmp    bl,0x22
  423ae5:	je     423b0f <flatcc_json_parser_match_constant@@Base+0x6f>
  423ae7:	mov    DWORD PTR [r14],0x1
  423aee:	mov    rax,rcx
  423af1:	jmp    423b52 <flatcc_json_parser_match_constant@@Base+0xb2>
  423af3:	cmp    esi,0x22
  423af6:	je     423b0f <flatcc_json_parser_match_constant@@Base+0x6f>
  423af8:	cmp    esi,0x5c
  423afb:	jne    423b4b <flatcc_json_parser_match_constant@@Base+0xab>
  423afd:	mov    DWORD PTR [r14],0x0
  423b04:	cmp    DWORD PTR [rdi+0x1c],0x0
  423b08:	je     423b5a <flatcc_json_parser_match_constant@@Base+0xba>
  423b0a:	mov    rax,rdx
  423b0d:	jmp    423b52 <flatcc_json_parser_match_constant@@Base+0xb2>
  423b0f:	lea    rax,[rcx+0x1]
  423b13:	mov    rdx,rcx
  423b16:	not    rdx
  423b19:	cmp    rdx,0x2
  423b1d:	jl     423b41 <flatcc_json_parser_match_constant@@Base+0xa1>
  423b1f:	cmp    BYTE PTR [rax],0x20
  423b22:	jg     423b4b <flatcc_json_parser_match_constant@@Base+0xab>
  423b24:	jne    423b41 <flatcc_json_parser_match_constant@@Base+0xa1>
  423b26:	cmp    BYTE PTR [rcx+0x2],0x20
  423b2a:	jle    423b41 <flatcc_json_parser_match_constant@@Base+0xa1>
  423b2c:	add    rcx,0x2
  423b30:	mov    rax,rcx
  423b33:	jmp    423b4b <flatcc_json_parser_match_constant@@Base+0xab>
  423b35:	mov    DWORD PTR [r14],0x0
  423b3c:	mov    rax,rdx
  423b3f:	jmp    423b52 <flatcc_json_parser_match_constant@@Base+0xb2>
  423b41:	xor    edx,edx
  423b43:	mov    rsi,rax
  423b46:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  423b4b:	mov    DWORD PTR [r14],0x0
  423b52:	add    rsp,0x8
  423b56:	pop    rbx
  423b57:	pop    r14
  423b59:	ret    
  423b5a:	mov    DWORD PTR [rdi+0x1c],0x12
  423b61:	mov    eax,DWORD PTR [rdi+0x8]
  423b64:	mov    esi,ecx
  423b66:	sub    esi,eax
  423b68:	add    esi,0x1
  423b6b:	mov    DWORD PTR [rdi+0x18],esi
  423b6e:	mov    QWORD PTR [rdi+0x30],rcx
  423b72:	mov    rax,rdx
  423b75:	jmp    423b52 <flatcc_json_parser_match_constant@@Base+0xb2>
  423b77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000423b80 <flatcc_json_parser_unmatched_symbol@@Base>:
  423b80:	push   r14
  423b82:	push   rbx
  423b83:	push   rax
  423b84:	mov    rbx,rdx
  423b87:	mov    r14,rdi
  423b8a:	test   BYTE PTR [rdi+0x10],0x1
  423b8e:	jne    423bbb <flatcc_json_parser_unmatched_symbol@@Base+0x3b>
  423b90:	cmp    DWORD PTR [r14+0x1c],0x0
  423b95:	jne    423c9e <flatcc_json_parser_unmatched_symbol@@Base+0x11e>
  423b9b:	mov    DWORD PTR [r14+0x1c],0xd
  423ba3:	mov    eax,DWORD PTR [r14+0x8]
  423ba7:	mov    ecx,esi
  423ba9:	sub    ecx,eax
  423bab:	add    ecx,0x1
  423bae:	mov    DWORD PTR [r14+0x18],ecx
  423bb2:	mov    QWORD PTR [r14+0x30],rsi
  423bb6:	jmp    423c9e <flatcc_json_parser_unmatched_symbol@@Base+0x11e>
  423bbb:	cmp    rsi,rbx
  423bbe:	je     423bec <flatcc_json_parser_unmatched_symbol@@Base+0x6c>
  423bc0:	movzx  eax,BYTE PTR [rsi]
  423bc3:	cmp    al,0x5c
  423bc5:	je     423bd0 <flatcc_json_parser_unmatched_symbol@@Base+0x50>
  423bc7:	cmp    al,0x22
  423bc9:	jne    423be0 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
  423bcb:	jmp    423c16 <flatcc_json_parser_unmatched_symbol@@Base+0x96>
  423bcd:	nop    DWORD PTR [rax]
  423bd0:	mov    rax,rbx
  423bd3:	sub    rax,rsi
  423bd6:	cmp    rax,0x2
  423bda:	jl     423bec <flatcc_json_parser_unmatched_symbol@@Base+0x6c>
  423bdc:	add    rsi,0x1
  423be0:	add    rsi,0x1
  423be4:	cmp    rsi,rbx
  423be7:	jne    423bc0 <flatcc_json_parser_unmatched_symbol@@Base+0x40>
  423be9:	mov    rsi,rbx
  423bec:	cmp    DWORD PTR [r14+0x1c],0x0
  423bf1:	mov    rax,rbx
  423bf4:	jne    423c1d <flatcc_json_parser_unmatched_symbol@@Base+0x9d>
  423bf6:	mov    DWORD PTR [r14+0x1c],0x14
  423bfe:	mov    eax,DWORD PTR [r14+0x8]
  423c02:	mov    ecx,esi
  423c04:	sub    ecx,eax
  423c06:	add    ecx,0x1
  423c09:	mov    DWORD PTR [r14+0x18],ecx
  423c0d:	mov    QWORD PTR [r14+0x30],rsi
  423c11:	mov    rax,rbx
  423c14:	jmp    423c1d <flatcc_json_parser_unmatched_symbol@@Base+0x9d>
  423c16:	add    rsi,0x1
  423c1a:	mov    rax,rsi
  423c1d:	mov    rcx,rbx
  423c20:	sub    rcx,rax
  423c23:	cmp    rcx,0x2
  423c27:	jl     423c41 <flatcc_json_parser_unmatched_symbol@@Base+0xc1>
  423c29:	cmp    BYTE PTR [rax],0x20
  423c2c:	jg     423c4f <flatcc_json_parser_unmatched_symbol@@Base+0xcf>
  423c2e:	jne    423c41 <flatcc_json_parser_unmatched_symbol@@Base+0xc1>
  423c30:	cmp    BYTE PTR [rax+0x1],0x20
  423c34:	jle    423c41 <flatcc_json_parser_unmatched_symbol@@Base+0xc1>
  423c36:	add    rax,0x1
  423c3a:	cmp    rax,rbx
  423c3d:	jne    423c54 <flatcc_json_parser_unmatched_symbol@@Base+0xd4>
  423c3f:	jmp    423c7c <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
  423c41:	mov    rdi,r14
  423c44:	mov    rsi,rax
  423c47:	mov    rdx,rbx
  423c4a:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  423c4f:	cmp    rax,rbx
  423c52:	je     423c7c <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
  423c54:	cmp    BYTE PTR [rax],0x3a
  423c57:	jne    423c7c <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
  423c59:	lea    rsi,[rax+0x1]
  423c5d:	mov    rcx,rbx
  423c60:	sub    rcx,rsi
  423c63:	cmp    rcx,0x2
  423c67:	jl     423ca9 <flatcc_json_parser_unmatched_symbol@@Base+0x129>
  423c69:	cmp    BYTE PTR [rsi],0x20
  423c6c:	jg     423cb7 <flatcc_json_parser_unmatched_symbol@@Base+0x137>
  423c6e:	jne    423ca9 <flatcc_json_parser_unmatched_symbol@@Base+0x129>
  423c70:	cmp    BYTE PTR [rax+0x2],0x20
  423c74:	jle    423ca9 <flatcc_json_parser_unmatched_symbol@@Base+0x129>
  423c76:	add    rax,0x2
  423c7a:	jmp    423cb4 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
  423c7c:	cmp    DWORD PTR [r14+0x1c],0x0
  423c81:	jne    423c9e <flatcc_json_parser_unmatched_symbol@@Base+0x11e>
  423c83:	mov    DWORD PTR [r14+0x1c],0x4
  423c8b:	mov    ecx,DWORD PTR [r14+0x8]
  423c8f:	mov    edx,eax
  423c91:	sub    edx,ecx
  423c93:	add    edx,0x1
  423c96:	mov    DWORD PTR [r14+0x18],edx
  423c9a:	mov    QWORD PTR [r14+0x30],rax
  423c9e:	mov    rax,rbx
  423ca1:	add    rsp,0x8
  423ca5:	pop    rbx
  423ca6:	pop    r14
  423ca8:	ret    
  423ca9:	mov    rdi,r14
  423cac:	mov    rdx,rbx
  423caf:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  423cb4:	mov    rsi,rax
  423cb7:	mov    rdi,r14
  423cba:	mov    rdx,rbx
  423cbd:	add    rsp,0x8
  423cc1:	pop    rbx
  423cc2:	pop    r14
  423cc4:	jmp    423cd0 <flatcc_json_parser_generic_json@@Base>
  423cc9:	nop    DWORD PTR [rax+0x0]

0000000000423cd0 <flatcc_json_parser_generic_json@@Base>:
  423cd0:	push   rbp
  423cd1:	push   r15
  423cd3:	push   r14
  423cd5:	push   r13
  423cd7:	push   r12
  423cd9:	push   rbx
  423cda:	sub    rsp,0x228
  423ce1:	cmp    rsi,rdx
  423ce4:	je     4247f7 <flatcc_json_parser_generic_json@@Base+0xb27>
  423cea:	mov    rbx,rdx
  423ced:	mov    r14,rdi
  423cf0:	lea    rax,[rsp+0x20]
  423cf5:	lea    r15,[rdi+0x1c]
  423cf9:	lea    rbp,[rdi+0x8]
  423cfd:	lea    r13,[rdi+0x18]
  423d01:	lea    rcx,[rdi+0x30]
  423d05:	mov    QWORD PTR [rsp+0x8],rcx
  423d0a:	lea    rcx,[rdx-0x1]
  423d0e:	mov    QWORD PTR [rsp+0x10],rcx
  423d13:	xor    r12d,r12d
  423d16:	test   r12,r12
  423d19:	je     423e69 <flatcc_json_parser_generic_json@@Base+0x199>
  423d1f:	cmp    BYTE PTR [rax-0x1],0x7d
  423d23:	jne    423e69 <flatcc_json_parser_generic_json@@Base+0x199>
  423d29:	cmp    BYTE PTR [rsi],0x22
  423d2c:	jne    423d6f <flatcc_json_parser_generic_json@@Base+0x9f>
  423d2e:	add    rsi,0x1
  423d32:	mov    rax,rbx
  423d35:	cmp    rsi,rbx
  423d38:	je     423d9b <flatcc_json_parser_generic_json@@Base+0xcb>
  423d3a:	nop    WORD PTR [rax+rax*1+0x0]
  423d40:	movzx  eax,BYTE PTR [rsi]
  423d43:	cmp    al,0x5c
  423d45:	je     423d50 <flatcc_json_parser_generic_json@@Base+0x80>
  423d47:	cmp    al,0x22
  423d49:	jne    423d64 <flatcc_json_parser_generic_json@@Base+0x94>
  423d4b:	jmp    423dcc <flatcc_json_parser_generic_json@@Base+0xfc>
  423d4d:	nop    DWORD PTR [rax]
  423d50:	mov    rax,rbx
  423d53:	sub    rax,rsi
  423d56:	cmp    rax,0x2
  423d5a:	jl     424319 <flatcc_json_parser_generic_json@@Base+0x649>
  423d60:	add    rsi,0x1
  423d64:	add    rsi,0x1
  423d68:	cmp    rsi,rbx
  423d6b:	jne    423d40 <flatcc_json_parser_generic_json@@Base+0x70>
  423d6d:	jmp    423d98 <flatcc_json_parser_generic_json@@Base+0xc8>
  423d6f:	cmp    DWORD PTR [r15],0x0
  423d73:	mov    rdx,rbx
  423d76:	mov    rcx,rbx
  423d79:	jne    423de0 <flatcc_json_parser_generic_json@@Base+0x110>
  423d7b:	mov    DWORD PTR [r15],0x5
  423d82:	mov    eax,DWORD PTR [rbp+0x0]
  423d85:	mov    ecx,esi
  423d87:	sub    ecx,eax
  423d89:	add    ecx,0x1
  423d8c:	mov    DWORD PTR [r13+0x0],ecx
  423d90:	mov    rax,QWORD PTR [rsp+0x8]
  423d95:	mov    QWORD PTR [rax],rsi
  423d98:	mov    rax,rbx
  423d9b:	cmp    DWORD PTR [r15],0x0
  423d9f:	mov    rdx,rbx
  423da2:	mov    rcx,rbx
  423da5:	jne    423de0 <flatcc_json_parser_generic_json@@Base+0x110>
  423da7:	mov    DWORD PTR [r15],0x14
  423dae:	mov    ecx,DWORD PTR [rbp+0x0]
  423db1:	mov    edx,eax
  423db3:	sub    edx,ecx
  423db5:	add    edx,0x1
  423db8:	mov    DWORD PTR [r13+0x0],edx
  423dbc:	mov    rcx,QWORD PTR [rsp+0x8]
  423dc1:	mov    QWORD PTR [rcx],rax
  423dc4:	mov    rdx,rbx
  423dc7:	mov    rcx,rbx
  423dca:	jmp    423de0 <flatcc_json_parser_generic_json@@Base+0x110>
  423dcc:	add    rsi,0x1
  423dd0:	mov    rdx,rsi
  423dd3:	mov    rcx,rsi
  423dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423de0:	mov    rax,rbx
  423de3:	sub    rax,rdx
  423de6:	cmp    rax,0x2
  423dea:	jl     423e07 <flatcc_json_parser_generic_json@@Base+0x137>
  423dec:	cmp    BYTE PTR [rcx],0x20
  423def:	jg     423e18 <flatcc_json_parser_generic_json@@Base+0x148>
  423df1:	jne    423e07 <flatcc_json_parser_generic_json@@Base+0x137>
  423df3:	cmp    BYTE PTR [rcx+0x1],0x20
  423df7:	jle    423e07 <flatcc_json_parser_generic_json@@Base+0x137>
  423df9:	add    rcx,0x1
  423dfd:	cmp    rcx,rbx
  423e00:	jne    423e21 <flatcc_json_parser_generic_json@@Base+0x151>
  423e02:	jmp    42480c <flatcc_json_parser_generic_json@@Base+0xb3c>
  423e07:	mov    rdi,r14
  423e0a:	mov    rsi,rcx
  423e0d:	mov    rdx,rbx
  423e10:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  423e15:	mov    rcx,rax
  423e18:	cmp    rcx,rbx
  423e1b:	je     42480c <flatcc_json_parser_generic_json@@Base+0xb3c>
  423e21:	cmp    BYTE PTR [rcx],0x3a
  423e24:	jne    42481b <flatcc_json_parser_generic_json@@Base+0xb4b>
  423e2a:	lea    rax,[rcx+0x1]
  423e2e:	mov    rdx,rbx
  423e31:	sub    rdx,rax
  423e34:	cmp    rdx,0x2
  423e38:	jl     423e58 <flatcc_json_parser_generic_json@@Base+0x188>
  423e3a:	mov    r9b,BYTE PTR [rax]
  423e3d:	cmp    r9b,0x20
  423e41:	jg     423e6f <flatcc_json_parser_generic_json@@Base+0x19f>
  423e43:	jne    423e58 <flatcc_json_parser_generic_json@@Base+0x188>
  423e45:	mov    r9b,BYTE PTR [rcx+0x2]
  423e49:	cmp    r9b,0x20
  423e4d:	jle    423e58 <flatcc_json_parser_generic_json@@Base+0x188>
  423e4f:	add    rcx,0x2
  423e53:	mov    rax,rcx
  423e56:	jmp    423e6f <flatcc_json_parser_generic_json@@Base+0x19f>
  423e58:	mov    rdi,r14
  423e5b:	mov    rsi,rax
  423e5e:	mov    rdx,rbx
  423e61:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  423e66:	mov    rsi,rax
  423e69:	mov    r9b,BYTE PTR [rsi]
  423e6c:	mov    rax,rsi
  423e6f:	movsx  ecx,r9b
  423e73:	add    ecx,0xffffffde
  423e76:	cmp    ecx,0x59
  423e79:	ja     42478b <flatcc_json_parser_generic_json@@Base+0xabb>
  423e7f:	lea    rdx,[rip+0x147e6]        # 43866c <flatcc_builder_padding_base@@Base+0x1acc>
  423e86:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  423e8a:	add    rcx,rdx
  423e8d:	jmp    rcx
  423e8f:	cmp    rax,rbx
  423e92:	je     4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  423e98:	cmp    r9b,0x2d
  423e9c:	jne    423eae <flatcc_json_parser_generic_json@@Base+0x1de>
  423e9e:	add    rax,0x1
  423ea2:	cmp    rax,rbx
  423ea5:	je     42429a <flatcc_json_parser_generic_json@@Base+0x5ca>
  423eab:	mov    r9b,BYTE PTR [rax]
  423eae:	cmp    r9b,0x30
  423eb2:	mov    rdx,QWORD PTR [rsp+0x10]
  423eb7:	jne    423ef3 <flatcc_json_parser_generic_json@@Base+0x223>
  423eb9:	add    rax,0x1
  423ebd:	mov    rdx,rbx
  423ec0:	cmp    rax,rbx
  423ec3:	je     424497 <flatcc_json_parser_generic_json@@Base+0x7c7>
  423ec9:	mov    cl,BYTE PTR [rax]
  423ecb:	cmp    cl,0x2e
  423ece:	jne    424208 <flatcc_json_parser_generic_json@@Base+0x538>
  423ed4:	mov    cl,BYTE PTR [rax+0x1]
  423ed7:	add    cl,0xd0
  423eda:	cmp    cl,0xa
  423edd:	jb     4241c1 <flatcc_json_parser_generic_json@@Base+0x4f1>
  423ee3:	cmp    DWORD PTR [r15],0x0
  423ee7:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  423eed:	add    rax,0x1
  423ef1:	jmp    423f07 <flatcc_json_parser_generic_json@@Base+0x237>
  423ef3:	add    r9b,0xcf
  423ef7:	cmp    r9b,0x8
  423efb:	jbe    423f30 <flatcc_json_parser_generic_json@@Base+0x260>
  423efd:	cmp    DWORD PTR [r15],0x0
  423f01:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  423f07:	mov    DWORD PTR [r15],0x6
  423f0e:	mov    ecx,DWORD PTR [rbp+0x0]
  423f11:	mov    edx,eax
  423f13:	sub    edx,ecx
  423f15:	add    edx,0x1
  423f18:	mov    DWORD PTR [r13+0x0],edx
  423f1c:	mov    rcx,QWORD PTR [rsp+0x8]
  423f21:	mov    QWORD PTR [rcx],rax
  423f24:	jmp    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  423f29:	nop    DWORD PTR [rax+0x0]
  423f30:	cmp    rdx,rax
  423f33:	je     4241f6 <flatcc_json_parser_generic_json@@Base+0x526>
  423f39:	movzx  ecx,BYTE PTR [rax+0x1]
  423f3d:	add    rax,0x1
  423f41:	add    cl,0xd0
  423f44:	cmp    cl,0xa
  423f47:	jb     423f30 <flatcc_json_parser_generic_json@@Base+0x260>
  423f49:	jmp    423ebd <flatcc_json_parser_generic_json@@Base+0x1ed>
  423f4e:	mov    rcx,rbx
  423f51:	sub    rcx,rax
  423f54:	cmp    rcx,0x4
  423f58:	jl     423f84 <flatcc_json_parser_generic_json@@Base+0x2b4>
  423f5a:	cmp    DWORD PTR [rax],0x65757274
  423f60:	je     4242ff <flatcc_json_parser_generic_json@@Base+0x62f>
  423f66:	cmp    rcx,0x5
  423f6a:	jl     423f84 <flatcc_json_parser_generic_json@@Base+0x2b4>
  423f6c:	mov    ecx,DWORD PTR [rax]
  423f6e:	mov    edx,0x736c6166
  423f73:	xor    ecx,edx
  423f75:	movzx  esi,BYTE PTR [rax+0x4]
  423f79:	xor    esi,0x65
  423f7c:	or     esi,ecx
  423f7e:	je     424451 <flatcc_json_parser_generic_json@@Base+0x781>
  423f84:	mov    rsi,rbx
  423f87:	cmp    rax,rbx
  423f8a:	je     42448a <flatcc_json_parser_generic_json@@Base+0x7ba>
  423f90:	xor    ecx,ecx
  423f92:	cmp    r9b,0x2d
  423f96:	sete   cl
  423f99:	add    rcx,rax
  423f9c:	xor    edi,edi
  423f9e:	cmp    rcx,rbx
  423fa1:	je     424311 <flatcc_json_parser_generic_json@@Base+0x641>
  423fa7:	nop    WORD PTR [rax+rax*1+0x0]
  423fb0:	movsx  rsi,BYTE PTR [rcx]
  423fb4:	mov    edx,esi
  423fb6:	add    dl,0xd0
  423fb9:	cmp    dl,0x9
  423fbc:	ja     424366 <flatcc_json_parser_generic_json@@Base+0x696>
  423fc2:	lea    rdx,[rdi+rdi*4]
  423fc6:	lea    rsi,[rsi+rdx*2]
  423fca:	add    rsi,0xffffffffffffffd0
  423fce:	cmp    rdi,rsi
  423fd1:	ja     4243aa <flatcc_json_parser_generic_json@@Base+0x6da>
  423fd7:	add    rcx,0x1
  423fdb:	mov    rdi,rsi
  423fde:	cmp    rbx,rcx
  423fe1:	jne    423fb0 <flatcc_json_parser_generic_json@@Base+0x2e0>
  423fe3:	xor    r8d,r8d
  423fe6:	mov    rcx,rbx
  423fe9:	mov    rdi,rsi
  423fec:	jmp    424369 <flatcc_json_parser_generic_json@@Base+0x699>
  423ff1:	cmp    r9b,0x22
  423ff5:	jne    4242c6 <flatcc_json_parser_generic_json@@Base+0x5f6>
  423ffb:	cmp    rax,rbx
  423ffe:	je     4242c6 <flatcc_json_parser_generic_json@@Base+0x5f6>
  424004:	add    rax,0x1
  424008:	mov    rcx,rbx
  42400b:	cmp    rax,rbx
  42400e:	je     424462 <flatcc_json_parser_generic_json@@Base+0x792>
  424014:	mov    cl,BYTE PTR [rax]
  424016:	cmp    cl,0x22
  424019:	je     42443e <flatcc_json_parser_generic_json@@Base+0x76e>
  42401f:	cmp    cl,0x20
  424022:	mov    rdx,QWORD PTR [rsp+0x10]
  424027:	jb     42404c <flatcc_json_parser_generic_json@@Base+0x37c>
  424029:	nop    DWORD PTR [rax+0x0]
  424030:	cmp    cl,0x22
  424033:	je     424074 <flatcc_json_parser_generic_json@@Base+0x3a4>
  424035:	cmp    cl,0x5c
  424038:	je     424074 <flatcc_json_parser_generic_json@@Base+0x3a4>
  42403a:	cmp    rdx,rax
  42403d:	je     424089 <flatcc_json_parser_generic_json@@Base+0x3b9>
  42403f:	movzx  ecx,BYTE PTR [rax+0x1]
  424043:	add    rax,0x1
  424047:	cmp    cl,0x20
  42404a:	jae    424030 <flatcc_json_parser_generic_json@@Base+0x360>
  42404c:	cmp    DWORD PTR [r15],0x0
  424050:	mov    rsi,rbx
  424053:	jne    4240b2 <flatcc_json_parser_generic_json@@Base+0x3e2>
  424055:	mov    DWORD PTR [r15],0x11
  42405c:	mov    ecx,DWORD PTR [rbp+0x0]
  42405f:	mov    edx,eax
  424061:	sub    edx,ecx
  424063:	add    edx,0x1
  424066:	mov    DWORD PTR [r13+0x0],edx
  42406a:	mov    rcx,QWORD PTR [rsp+0x8]
  42406f:	mov    QWORD PTR [rcx],rax
  424072:	jmp    4240af <flatcc_json_parser_generic_json@@Base+0x3df>
  424074:	mov    rsi,rbx
  424077:	cmp    rbx,rax
  42407a:	je     4240b2 <flatcc_json_parser_generic_json@@Base+0x3e2>
  42407c:	mov    rsi,rax
  42407f:	cmp    cl,0x22
  424082:	jne    4240b2 <flatcc_json_parser_generic_json@@Base+0x3e2>
  424084:	jmp    42443e <flatcc_json_parser_generic_json@@Base+0x76e>
  424089:	cmp    DWORD PTR [r15],0x0
  42408d:	mov    rsi,rbx
  424090:	jne    4240b2 <flatcc_json_parser_generic_json@@Base+0x3e2>
  424092:	mov    DWORD PTR [r15],0x14
  424099:	mov    eax,DWORD PTR [rbp+0x0]
  42409c:	mov    ecx,ebx
  42409e:	sub    ecx,eax
  4240a0:	add    ecx,0x1
  4240a3:	mov    DWORD PTR [r13+0x0],ecx
  4240a7:	mov    rax,QWORD PTR [rsp+0x8]
  4240ac:	mov    QWORD PTR [rax],rbx
  4240af:	mov    rsi,rbx
  4240b2:	mov    rdi,r14
  4240b5:	mov    rdx,rbx
  4240b8:	lea    rcx,[rsp+0x1c]
  4240bd:	call   4237a0 <flatcc_json_parser_string_escape@@Base>
  4240c2:	cmp    rax,rbx
  4240c5:	jne    424014 <flatcc_json_parser_generic_json@@Base+0x344>
  4240cb:	jmp    4242ed <flatcc_json_parser_generic_json@@Base+0x61d>
  4240d0:	cmp    r12,0x200
  4240d7:	je     424840 <flatcc_json_parser_generic_json@@Base+0xb70>
  4240dd:	mov    BYTE PTR [rsp+r12*1+0x20],0x5d
  4240e3:	lea    rsi,[rax+0x1]
  4240e7:	mov    rcx,rbx
  4240ea:	sub    rcx,rsi
  4240ed:	cmp    rcx,0x2
  4240f1:	jl     42416f <flatcc_json_parser_generic_json@@Base+0x49f>
  4240f3:	cmp    BYTE PTR [rsi],0x20
  4240f6:	jg     42417d <flatcc_json_parser_generic_json@@Base+0x4ad>
  4240fc:	jne    42416f <flatcc_json_parser_generic_json@@Base+0x49f>
  4240fe:	cmp    BYTE PTR [rax+0x2],0x20
  424102:	jle    42416f <flatcc_json_parser_generic_json@@Base+0x49f>
  424104:	add    rax,0x2
  424108:	jmp    42417a <flatcc_json_parser_generic_json@@Base+0x4aa>
  42410a:	mov    rcx,rbx
  42410d:	sub    rcx,rax
  424110:	mov    rsi,rax
  424113:	cmp    rcx,0x4
  424117:	jl     42448a <flatcc_json_parser_generic_json@@Base+0x7ba>
  42411d:	lea    rsi,[rax+0x4]
  424121:	cmp    DWORD PTR [rax],0x6c6c756e
  424127:	cmovne rsi,rax
  42412b:	cmp    rax,rsi
  42412e:	jne    4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424134:	jmp    42478b <flatcc_json_parser_generic_json@@Base+0xabb>
  424139:	cmp    r12,0x200
  424140:	je     424840 <flatcc_json_parser_generic_json@@Base+0xb70>
  424146:	mov    BYTE PTR [rsp+r12*1+0x20],0x7d
  42414c:	lea    rsi,[rax+0x1]
  424150:	mov    rcx,rbx
  424153:	sub    rcx,rsi
  424156:	cmp    rcx,0x2
  42415a:	jl     424198 <flatcc_json_parser_generic_json@@Base+0x4c8>
  42415c:	cmp    BYTE PTR [rsi],0x20
  42415f:	jg     4241a6 <flatcc_json_parser_generic_json@@Base+0x4d6>
  424161:	jne    424198 <flatcc_json_parser_generic_json@@Base+0x4c8>
  424163:	cmp    BYTE PTR [rax+0x2],0x20
  424167:	jle    424198 <flatcc_json_parser_generic_json@@Base+0x4c8>
  424169:	add    rax,0x2
  42416d:	jmp    4241a3 <flatcc_json_parser_generic_json@@Base+0x4d3>
  42416f:	mov    rdi,r14
  424172:	mov    rdx,rbx
  424175:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42417a:	mov    rsi,rax
  42417d:	cmp    rsi,rbx
  424180:	je     4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  424186:	add    r12,0x1
  42418a:	cmp    BYTE PTR [rsi],0x5d
  42418d:	je     4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424193:	jmp    424778 <flatcc_json_parser_generic_json@@Base+0xaa8>
  424198:	mov    rdi,r14
  42419b:	mov    rdx,rbx
  42419e:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4241a3:	mov    rsi,rax
  4241a6:	cmp    rsi,rbx
  4241a9:	je     4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  4241af:	add    r12,0x1
  4241b3:	cmp    BYTE PTR [rsi],0x7d
  4241b6:	je     4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  4241bc:	jmp    424778 <flatcc_json_parser_generic_json@@Base+0xaa8>
  4241c1:	add    rax,0x2
  4241c5:	mov    rdx,rbx
  4241c8:	cmp    rax,rbx
  4241cb:	je     424497 <flatcc_json_parser_generic_json@@Base+0x7c7>
  4241d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241db:	nop    DWORD PTR [rax+rax*1+0x0]
  4241e0:	movzx  ecx,BYTE PTR [rax]
  4241e3:	mov    edx,ecx
  4241e5:	add    dl,0xd0
  4241e8:	cmp    dl,0x9
  4241eb:	ja     424208 <flatcc_json_parser_generic_json@@Base+0x538>
  4241ed:	add    rax,0x1
  4241f1:	cmp    rbx,rax
  4241f4:	jne    4241e0 <flatcc_json_parser_generic_json@@Base+0x510>
  4241f6:	mov    rdx,rbx
  4241f9:	cmp    DWORD PTR [r15],0x0
  4241fd:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424203:	jmp    42449d <flatcc_json_parser_generic_json@@Base+0x7cd>
  424208:	mov    rdx,rbx
  42420b:	cmp    rax,rbx
  42420e:	je     424497 <flatcc_json_parser_generic_json@@Base+0x7c7>
  424214:	mov    edx,ecx
  424216:	or     dl,0x20
  424219:	cmp    dl,0x65
  42421c:	jne    424321 <flatcc_json_parser_generic_json@@Base+0x651>
  424222:	lea    rsi,[rax+0x1]
  424226:	cmp    rsi,rbx
  424229:	mov    rdx,QWORD PTR [rsp+0x10]
  42422e:	je     42429a <flatcc_json_parser_generic_json@@Base+0x5ca>
  424230:	mov    cl,BYTE PTR [rsi]
  424232:	cmp    cl,0x2d
  424235:	je     42423c <flatcc_json_parser_generic_json@@Base+0x56c>
  424237:	cmp    cl,0x2b
  42423a:	jne    424243 <flatcc_json_parser_generic_json@@Base+0x573>
  42423c:	add    rax,0x2
  424240:	mov    rsi,rax
  424243:	cmp    rsi,rbx
  424246:	je     424250 <flatcc_json_parser_generic_json@@Base+0x580>
  424248:	mov    al,BYTE PTR [rsi]
  42424a:	add    al,0xd0
  42424c:	cmp    al,0x9
  42424e:	jbe    42427c <flatcc_json_parser_generic_json@@Base+0x5ac>
  424250:	cmp    DWORD PTR [r15],0x0
  424254:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  42425a:	mov    DWORD PTR [r15],0x6
  424261:	mov    eax,DWORD PTR [rbp+0x0]
  424264:	mov    ecx,esi
  424266:	sub    ecx,eax
  424268:	add    ecx,0x1
  42426b:	mov    DWORD PTR [r13+0x0],ecx
  42426f:	mov    rax,QWORD PTR [rsp+0x8]
  424274:	mov    QWORD PTR [rax],rsi
  424277:	jmp    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  42427c:	cmp    rdx,rsi
  42427f:	je     424494 <flatcc_json_parser_generic_json@@Base+0x7c4>
  424285:	movzx  ecx,BYTE PTR [rsi+0x1]
  424289:	add    rsi,0x1
  42428d:	mov    eax,ecx
  42428f:	add    al,0xd0
  424291:	cmp    al,0xa
  424293:	jb     42427c <flatcc_json_parser_generic_json@@Base+0x5ac>
  424295:	jmp    424324 <flatcc_json_parser_generic_json@@Base+0x654>
  42429a:	cmp    DWORD PTR [r15],0x0
  42429e:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  4242a4:	mov    DWORD PTR [r15],0x6
  4242ab:	mov    eax,DWORD PTR [rbp+0x0]
  4242ae:	mov    ecx,ebx
  4242b0:	sub    ecx,eax
  4242b2:	add    ecx,0x1
  4242b5:	mov    DWORD PTR [r13+0x0],ecx
  4242b9:	mov    rax,QWORD PTR [rsp+0x8]
  4242be:	mov    QWORD PTR [rax],rbx
  4242c1:	jmp    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  4242c6:	cmp    DWORD PTR [r15],0x0
  4242ca:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  4242d0:	mov    DWORD PTR [r15],0x10
  4242d7:	mov    ecx,DWORD PTR [rbp+0x0]
  4242da:	mov    edx,eax
  4242dc:	sub    edx,ecx
  4242de:	add    edx,0x1
  4242e1:	mov    DWORD PTR [r13+0x0],edx
  4242e5:	mov    rcx,QWORD PTR [rsp+0x8]
  4242ea:	mov    QWORD PTR [rcx],rax
  4242ed:	mov    rcx,rbx
  4242f0:	cmp    DWORD PTR [r15],0x0
  4242f4:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  4242fa:	jmp    424468 <flatcc_json_parser_generic_json@@Base+0x798>
  4242ff:	lea    rsi,[rax+0x4]
  424303:	cmp    rax,rsi
  424306:	jne    4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  42430c:	jmp    42478b <flatcc_json_parser_generic_json@@Base+0xabb>
  424311:	mov    rcx,rbx
  424314:	xor    r8d,r8d
  424317:	jmp    424369 <flatcc_json_parser_generic_json@@Base+0x699>
  424319:	mov    rax,rsi
  42431c:	jmp    423d9b <flatcc_json_parser_generic_json@@Base+0xcb>
  424321:	mov    rsi,rax
  424324:	mov    rdx,rbx
  424327:	cmp    rsi,rbx
  42432a:	je     424497 <flatcc_json_parser_generic_json@@Base+0x7c7>
  424330:	movsx  eax,cl
  424333:	cmp    eax,0x3a
  424336:	ja     42434c <flatcc_json_parser_generic_json@@Base+0x67c>
  424338:	movabs rcx,0x400100100002e00
  424342:	bt     rcx,rax
  424346:	jb     4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  42434c:	cmp    eax,0x5d
  42434f:	je     4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424355:	mov    rdx,rsi
  424358:	cmp    eax,0x7d
  42435b:	je     4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424361:	jmp    424497 <flatcc_json_parser_generic_json@@Base+0x7c7>
  424366:	mov    r8b,0x1
  424369:	mov    rsi,rax
  42436c:	cmp    rcx,rax
  42436f:	je     42448a <flatcc_json_parser_generic_json@@Base+0x7ba>
  424375:	test   r8b,r8b
  424378:	je     4243d2 <flatcc_json_parser_generic_json@@Base+0x702>
  42437a:	mov    sil,BYTE PTR [rcx]
  42437d:	add    sil,0xd2
  424381:	cmp    sil,0x37
  424385:	ja     4243d2 <flatcc_json_parser_generic_json@@Base+0x702>
  424387:	movzx  edx,sil
  42438b:	movabs rsi,0x80000000800001
  424395:	bt     rsi,rdx
  424399:	jae    4243d2 <flatcc_json_parser_generic_json@@Base+0x702>
  42439b:	cmp    DWORD PTR [r15],0x0
  42439f:	jne    4243cd <flatcc_json_parser_generic_json@@Base+0x6fd>
  4243a1:	mov    DWORD PTR [r15],0xc
  4243a8:	jmp    4243b7 <flatcc_json_parser_generic_json@@Base+0x6e7>
  4243aa:	cmp    DWORD PTR [r15],0x0
  4243ae:	jne    4243cd <flatcc_json_parser_generic_json@@Base+0x6fd>
  4243b0:	mov    DWORD PTR [r15],0x8
  4243b7:	mov    edx,DWORD PTR [rbp+0x0]
  4243ba:	mov    esi,ecx
  4243bc:	sub    esi,edx
  4243be:	add    esi,0x1
  4243c1:	mov    DWORD PTR [r13+0x0],esi
  4243c5:	mov    rdx,QWORD PTR [rsp+0x8]
  4243ca:	mov    QWORD PTR [rdx],rcx
  4243cd:	xor    edi,edi
  4243cf:	mov    rcx,rbx
  4243d2:	mov    rsi,rax
  4243d5:	cmp    rcx,rax
  4243d8:	je     42448a <flatcc_json_parser_generic_json@@Base+0x7ba>
  4243de:	cmp    r9b,0x2d
  4243e2:	jne    4243fa <flatcc_json_parser_generic_json@@Base+0x72a>
  4243e4:	cmp    DWORD PTR [r15],0x0
  4243e8:	mov    rsi,rbx
  4243eb:	jne    42448a <flatcc_json_parser_generic_json@@Base+0x7ba>
  4243f1:	mov    DWORD PTR [r15],0x8
  4243f8:	jmp    424417 <flatcc_json_parser_generic_json@@Base+0x747>
  4243fa:	cmp    rdi,0x100
  424401:	jb     424487 <flatcc_json_parser_generic_json@@Base+0x7b7>
  424407:	cmp    DWORD PTR [r15],0x0
  42440b:	mov    rsi,rbx
  42440e:	jne    42448a <flatcc_json_parser_generic_json@@Base+0x7ba>
  424410:	mov    DWORD PTR [r15],0x7
  424417:	mov    edx,DWORD PTR [rbp+0x0]
  42441a:	mov    esi,ecx
  42441c:	sub    esi,edx
  42441e:	add    esi,0x1
  424421:	mov    DWORD PTR [r13+0x0],esi
  424425:	mov    rdx,QWORD PTR [rsp+0x8]
  42442a:	mov    QWORD PTR [rdx],rcx
  42442d:	mov    rsi,rbx
  424430:	cmp    rax,rsi
  424433:	jne    4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424439:	jmp    42478b <flatcc_json_parser_generic_json@@Base+0xabb>
  42443e:	cmp    rax,rbx
  424441:	je     42445f <flatcc_json_parser_generic_json@@Base+0x78f>
  424443:	cmp    BYTE PTR [rax],0x22
  424446:	jne    42445f <flatcc_json_parser_generic_json@@Base+0x78f>
  424448:	add    rax,0x1
  42444c:	mov    rsi,rax
  42444f:	jmp    4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424451:	lea    rsi,[rax+0x5]
  424455:	cmp    rax,rsi
  424458:	jne    4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  42445a:	jmp    42478b <flatcc_json_parser_generic_json@@Base+0xabb>
  42445f:	mov    rcx,rax
  424462:	cmp    DWORD PTR [r15],0x0
  424466:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424468:	mov    DWORD PTR [r15],0x14
  42446f:	mov    eax,DWORD PTR [rbp+0x0]
  424472:	mov    edx,ecx
  424474:	sub    edx,eax
  424476:	add    edx,0x1
  424479:	mov    DWORD PTR [r13+0x0],edx
  42447d:	mov    rax,QWORD PTR [rsp+0x8]
  424482:	mov    QWORD PTR [rax],rcx
  424485:	jmp    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424487:	mov    rsi,rcx
  42448a:	cmp    rax,rsi
  42448d:	jne    4244c3 <flatcc_json_parser_generic_json@@Base+0x7f3>
  42448f:	jmp    42478b <flatcc_json_parser_generic_json@@Base+0xabb>
  424494:	mov    rdx,rbx
  424497:	cmp    DWORD PTR [r15],0x0
  42449b:	jne    4244c0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  42449d:	mov    DWORD PTR [r15],0x6
  4244a4:	mov    eax,DWORD PTR [rbp+0x0]
  4244a7:	mov    ecx,edx
  4244a9:	sub    ecx,eax
  4244ab:	add    ecx,0x1
  4244ae:	mov    DWORD PTR [r13+0x0],ecx
  4244b2:	mov    rax,QWORD PTR [rsp+0x8]
  4244b7:	mov    QWORD PTR [rax],rdx
  4244ba:	nop    WORD PTR [rax+rax*1+0x0]
  4244c0:	mov    rsi,rbx
  4244c3:	test   r12,r12
  4244c6:	setne  al
  4244c9:	cmp    rsi,rbx
  4244cc:	setne  dl
  4244cf:	je     4247b0 <flatcc_json_parser_generic_json@@Base+0xae0>
  4244d5:	test   r12,r12
  4244d8:	je     4247b9 <flatcc_json_parser_generic_json@@Base+0xae9>
  4244de:	xchg   ax,ax
  4244e0:	mov    rax,rbx
  4244e3:	sub    rax,rsi
  4244e6:	cmp    BYTE PTR [rsp+r12*1+0x1f],0x5d
  4244ec:	jne    424500 <flatcc_json_parser_generic_json@@Base+0x830>
  4244ee:	cmp    rax,0x2
  4244f2:	jl     424530 <flatcc_json_parser_generic_json@@Base+0x860>
  4244f4:	cmp    BYTE PTR [rsi],0x20
  4244f7:	jle    424517 <flatcc_json_parser_generic_json@@Base+0x847>
  4244f9:	mov    rax,rsi
  4244fc:	jmp    42453b <flatcc_json_parser_generic_json@@Base+0x86b>
  4244fe:	xchg   ax,ax
  424500:	cmp    rax,0x2
  424504:	jl     424590 <flatcc_json_parser_generic_json@@Base+0x8c0>
  42450a:	cmp    BYTE PTR [rsi],0x20
  42450d:	jle    424571 <flatcc_json_parser_generic_json@@Base+0x8a1>
  42450f:	mov    rax,rsi
  424512:	jmp    42459b <flatcc_json_parser_generic_json@@Base+0x8cb>
  424517:	jne    424530 <flatcc_json_parser_generic_json@@Base+0x860>
  424519:	cmp    BYTE PTR [rsi+0x1],0x20
  42451d:	jle    424530 <flatcc_json_parser_generic_json@@Base+0x860>
  42451f:	add    rsi,0x1
  424523:	mov    rax,rsi
  424526:	jmp    42453b <flatcc_json_parser_generic_json@@Base+0x86b>
  424528:	nop    DWORD PTR [rax+rax*1+0x0]
  424530:	mov    rdi,r14
  424533:	mov    rdx,rbx
  424536:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42453b:	mov    rsi,rbx
  42453e:	cmp    rax,rbx
  424541:	je     42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  424547:	movzx  ecx,BYTE PTR [rax]
  42454a:	cmp    cl,0x2c
  42454d:	je     4245ee <flatcc_json_parser_generic_json@@Base+0x91e>
  424553:	cmp    cl,0x5d
  424556:	je     4245b8 <flatcc_json_parser_generic_json@@Base+0x8e8>
  424558:	cmp    DWORD PTR [r15],0x0
  42455c:	mov    rsi,rbx
  42455f:	jne    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  424565:	mov    DWORD PTR [r15],0x9
  42456c:	jmp    42465f <flatcc_json_parser_generic_json@@Base+0x98f>
  424571:	jne    424590 <flatcc_json_parser_generic_json@@Base+0x8c0>
  424573:	cmp    BYTE PTR [rsi+0x1],0x20
  424577:	jle    424590 <flatcc_json_parser_generic_json@@Base+0x8c0>
  424579:	add    rsi,0x1
  42457d:	mov    rax,rsi
  424580:	jmp    42459b <flatcc_json_parser_generic_json@@Base+0x8cb>
  424582:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42458c:	nop    DWORD PTR [rax+0x0]
  424590:	mov    rdi,r14
  424593:	mov    rdx,rbx
  424596:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42459b:	mov    rsi,rbx
  42459e:	cmp    rax,rbx
  4245a1:	je     42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  4245a7:	movzx  ecx,BYTE PTR [rax]
  4245aa:	cmp    cl,0x2c
  4245ad:	je     424615 <flatcc_json_parser_generic_json@@Base+0x945>
  4245af:	cmp    cl,0x7d
  4245b2:	jne    42464b <flatcc_json_parser_generic_json@@Base+0x97b>
  4245b8:	lea    rsi,[rax+0x1]
  4245bc:	mov    rcx,rbx
  4245bf:	sub    rcx,rsi
  4245c2:	cmp    rcx,0x2
  4245c6:	jl     424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4245cc:	cmp    BYTE PTR [rsi],0x20
  4245cf:	jg     42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  4245d5:	jne    424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4245db:	cmp    BYTE PTR [rax+0x2],0x20
  4245df:	jle    424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4245e5:	add    rax,0x2
  4245e9:	jmp    42470b <flatcc_json_parser_generic_json@@Base+0xa3b>
  4245ee:	lea    rcx,[rax+0x1]
  4245f2:	mov    rdx,rbx
  4245f5:	sub    rdx,rcx
  4245f8:	cmp    rdx,0x2
  4245fc:	jl     42467d <flatcc_json_parser_generic_json@@Base+0x9ad>
  4245fe:	cmp    BYTE PTR [rcx],0x20
  424601:	jg     42468e <flatcc_json_parser_generic_json@@Base+0x9be>
  424607:	jne    42467d <flatcc_json_parser_generic_json@@Base+0x9ad>
  424609:	cmp    BYTE PTR [rax+0x2],0x20
  42460d:	jle    42467d <flatcc_json_parser_generic_json@@Base+0x9ad>
  42460f:	add    rax,0x2
  424613:	jmp    42468b <flatcc_json_parser_generic_json@@Base+0x9bb>
  424615:	lea    rcx,[rax+0x1]
  424619:	mov    rdx,rbx
  42461c:	sub    rdx,rcx
  42461f:	cmp    rdx,0x2
  424623:	jl     4246c6 <flatcc_json_parser_generic_json@@Base+0x9f6>
  424629:	cmp    BYTE PTR [rcx],0x20
  42462c:	jg     4246d7 <flatcc_json_parser_generic_json@@Base+0xa07>
  424632:	jne    4246c6 <flatcc_json_parser_generic_json@@Base+0x9f6>
  424638:	cmp    BYTE PTR [rax+0x2],0x20
  42463c:	jle    4246c6 <flatcc_json_parser_generic_json@@Base+0x9f6>
  424642:	add    rax,0x2
  424646:	jmp    4246d4 <flatcc_json_parser_generic_json@@Base+0xa04>
  42464b:	cmp    DWORD PTR [r15],0x0
  42464f:	mov    rsi,rbx
  424652:	jne    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  424658:	mov    DWORD PTR [r15],0xa
  42465f:	mov    ecx,DWORD PTR [rbp+0x0]
  424662:	mov    edx,eax
  424664:	sub    edx,ecx
  424666:	add    edx,0x1
  424669:	mov    DWORD PTR [r13+0x0],edx
  42466d:	mov    rcx,QWORD PTR [rsp+0x8]
  424672:	mov    QWORD PTR [rcx],rax
  424675:	mov    rsi,rbx
  424678:	jmp    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  42467d:	mov    rdi,r14
  424680:	mov    rsi,rcx
  424683:	mov    rdx,rbx
  424686:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42468b:	mov    rcx,rax
  42468e:	cmp    rcx,rbx
  424691:	je     424738 <flatcc_json_parser_generic_json@@Base+0xa68>
  424697:	cmp    BYTE PTR [rcx],0x5d
  42469a:	jne    424775 <flatcc_json_parser_generic_json@@Base+0xaa5>
  4246a0:	lea    rsi,[rcx+0x1]
  4246a4:	mov    rax,rbx
  4246a7:	sub    rax,rsi
  4246aa:	cmp    rax,0x2
  4246ae:	jl     424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4246b0:	cmp    BYTE PTR [rsi],0x20
  4246b3:	jg     42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  4246b5:	jne    424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4246b7:	cmp    BYTE PTR [rcx+0x2],0x20
  4246bb:	jle    424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4246bd:	add    rcx,0x2
  4246c1:	mov    rsi,rcx
  4246c4:	jmp    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  4246c6:	mov    rdi,r14
  4246c9:	mov    rsi,rcx
  4246cc:	mov    rdx,rbx
  4246cf:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4246d4:	mov    rcx,rax
  4246d7:	cmp    rcx,rbx
  4246da:	je     42474a <flatcc_json_parser_generic_json@@Base+0xa7a>
  4246dc:	cmp    BYTE PTR [rcx],0x7d
  4246df:	jne    424775 <flatcc_json_parser_generic_json@@Base+0xaa5>
  4246e5:	lea    rsi,[rcx+0x1]
  4246e9:	mov    rax,rbx
  4246ec:	sub    rax,rsi
  4246ef:	cmp    rax,0x2
  4246f3:	jl     424700 <flatcc_json_parser_generic_json@@Base+0xa30>
  4246f5:	cmp    BYTE PTR [rsi],0x20
  4246f8:	jg     42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  4246fa:	je     4246b7 <flatcc_json_parser_generic_json@@Base+0x9e7>
  4246fc:	nop    DWORD PTR [rax+0x0]
  424700:	mov    rdi,r14
  424703:	mov    rdx,rbx
  424706:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42470b:	mov    rsi,rax
  42470e:	lea    rcx,[r12-0x1]
  424713:	cmp    r12,0x1
  424717:	setne  al
  42471a:	cmp    rsi,rbx
  42471d:	setne  dl
  424720:	je     4247bc <flatcc_json_parser_generic_json@@Base+0xaec>
  424726:	cmp    r12,0x1
  42472a:	mov    r12,rcx
  42472d:	jne    4244e0 <flatcc_json_parser_generic_json@@Base+0x810>
  424733:	jmp    4247bc <flatcc_json_parser_generic_json@@Base+0xaec>
  424738:	cmp    DWORD PTR [r15],0x0
  42473c:	mov    rsi,rbx
  42473f:	jne    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  424741:	mov    DWORD PTR [r15],0x9
  424748:	jmp    42475a <flatcc_json_parser_generic_json@@Base+0xa8a>
  42474a:	cmp    DWORD PTR [r15],0x0
  42474e:	mov    rsi,rbx
  424751:	jne    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  424753:	mov    DWORD PTR [r15],0xa
  42475a:	mov    eax,DWORD PTR [rbp+0x0]
  42475d:	mov    ecx,ebx
  42475f:	sub    ecx,eax
  424761:	add    ecx,0x1
  424764:	mov    DWORD PTR [r13+0x0],ecx
  424768:	mov    rax,QWORD PTR [rsp+0x8]
  42476d:	mov    QWORD PTR [rax],rbx
  424770:	mov    rsi,rbx
  424773:	jmp    42470e <flatcc_json_parser_generic_json@@Base+0xa3e>
  424775:	mov    rsi,rcx
  424778:	lea    rax,[rsp+r12*1]
  42477c:	add    rax,0x20
  424780:	cmp    rsi,rbx
  424783:	jne    423d16 <flatcc_json_parser_generic_json@@Base+0x46>
  424789:	jmp    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  42478b:	cmp    DWORD PTR [r15],0x0
  42478f:	jne    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  424791:	mov    DWORD PTR [r15],0x5
  424798:	mov    ecx,DWORD PTR [rbp+0x0]
  42479b:	mov    edx,eax
  42479d:	sub    edx,ecx
  42479f:	add    edx,0x1
  4247a2:	mov    DWORD PTR [r13+0x0],edx
  4247a6:	mov    rcx,QWORD PTR [rsp+0x8]
  4247ab:	mov    QWORD PTR [rcx],rax
  4247ae:	jmp    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  4247b0:	mov    rcx,r12
  4247b3:	test   dl,dl
  4247b5:	je     4247c0 <flatcc_json_parser_generic_json@@Base+0xaf0>
  4247b7:	jmp    4247f7 <flatcc_json_parser_generic_json@@Base+0xb27>
  4247b9:	mov    rcx,r12
  4247bc:	test   dl,dl
  4247be:	jne    4247f7 <flatcc_json_parser_generic_json@@Base+0xb27>
  4247c0:	test   al,al
  4247c2:	je     4247f7 <flatcc_json_parser_generic_json@@Base+0xb27>
  4247c4:	cmp    DWORD PTR [r15],0x0
  4247c8:	jne    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  4247ca:	xor    eax,eax
  4247cc:	cmp    BYTE PTR [rsp+rcx*1+0x1f],0x5d
  4247d1:	sete   al
  4247d4:	mov    ecx,0xa
  4247d9:	sub    ecx,eax
  4247db:	mov    DWORD PTR [r15],ecx
  4247de:	mov    eax,DWORD PTR [rbp+0x0]
  4247e1:	mov    ecx,ebx
  4247e3:	sub    ecx,eax
  4247e5:	add    ecx,0x1
  4247e8:	mov    DWORD PTR [r13+0x0],ecx
  4247ec:	mov    rax,QWORD PTR [rsp+0x8]
  4247f1:	mov    QWORD PTR [rax],rbx
  4247f4:	mov    rsi,rbx
  4247f7:	mov    rax,rsi
  4247fa:	add    rsp,0x228
  424801:	pop    rbx
  424802:	pop    r12
  424804:	pop    r13
  424806:	pop    r14
  424808:	pop    r15
  42480a:	pop    rbp
  42480b:	ret    
  42480c:	cmp    DWORD PTR [r15],0x0
  424810:	jne    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  424812:	mov    DWORD PTR [r15],0xa
  424819:	jmp    4247de <flatcc_json_parser_generic_json@@Base+0xb0e>
  42481b:	cmp    DWORD PTR [r15],0x0
  42481f:	jne    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  424821:	mov    DWORD PTR [r15],0x4
  424828:	mov    eax,DWORD PTR [rbp+0x0]
  42482b:	mov    edx,ecx
  42482d:	sub    edx,eax
  42482f:	add    edx,0x1
  424832:	mov    DWORD PTR [r13+0x0],edx
  424836:	mov    rax,QWORD PTR [rsp+0x8]
  42483b:	mov    QWORD PTR [rax],rcx
  42483e:	jmp    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  424840:	cmp    DWORD PTR [r15],0x0
  424844:	jne    4247f4 <flatcc_json_parser_generic_json@@Base+0xb24>
  424846:	mov    DWORD PTR [r15],0x2
  42484d:	jmp    424798 <flatcc_json_parser_generic_json@@Base+0xac8>
  424852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42485c:	nop    DWORD PTR [rax+0x0]

0000000000424860 <flatcc_json_parser_double@@Base>:
  424860:	push   r15
  424862:	push   r14
  424864:	push   r12
  424866:	push   rbx
  424867:	push   rax
  424868:	mov    rbx,rsi
  42486b:	mov    QWORD PTR [rcx],0x0
  424872:	cmp    rsi,rdx
  424875:	je     424902 <flatcc_json_parser_double@@Base+0xa2>
  42487b:	mov    r12,rcx
  42487e:	mov    r14,rdx
  424881:	mov    r15,rdi
  424884:	lea    rax,[rbx+0x1]
  424888:	xor    ecx,ecx
  42488a:	cmp    BYTE PTR [rbx],0x2d
  42488d:	sete   dl
  424890:	cmovne rax,rbx
  424894:	mov    rsi,r14
  424897:	sub    rsi,rax
  42489a:	cmp    rsi,0x2
  42489e:	jl     4248be <flatcc_json_parser_double@@Base+0x5e>
  4248a0:	mov    cl,dl
  4248a2:	mov    cl,BYTE PTR [rbx+rcx*1]
  4248a5:	cmp    cl,0x2e
  4248a8:	je     4248b5 <flatcc_json_parser_double@@Base+0x55>
  4248aa:	cmp    cl,0x30
  4248ad:	jne    4248be <flatcc_json_parser_double@@Base+0x5e>
  4248af:	cmp    BYTE PTR [rax+0x1],0x30
  4248b3:	jne    4248be <flatcc_json_parser_double@@Base+0x5e>
  4248b5:	cmp    DWORD PTR [r15+0x1c],0x0
  4248ba:	jne    424926 <flatcc_json_parser_double@@Base+0xc6>
  4248bc:	jmp    42490b <flatcc_json_parser_double@@Base+0xab>
  4248be:	mov    esi,r14d
  4248c1:	sub    esi,ebx
  4248c3:	mov    rdi,rbx
  4248c6:	mov    rdx,r12
  4248c9:	call   424940 <flatcc_json_parser_double@@Base+0xe0>
  4248ce:	test   rax,rax
  4248d1:	je     4248d8 <flatcc_json_parser_double@@Base+0x78>
  4248d3:	cmp    rax,rbx
  4248d6:	jne    424929 <flatcc_json_parser_double@@Base+0xc9>
  4248d8:	vmovsd xmm0,QWORD PTR [r12]
  4248de:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x1478a]        # 439070 <flatcc_builder_padding_base@@Base+0x24d0>
  4248e6:	vucomisd xmm0,QWORD PTR [rip+0x14792]        # 439080 <flatcc_builder_padding_base@@Base+0x24e0>
  4248ee:	mov    eax,DWORD PTR [r15+0x1c]
  4248f2:	jb     424907 <flatcc_json_parser_double@@Base+0xa7>
  4248f4:	test   eax,eax
  4248f6:	jne    424926 <flatcc_json_parser_double@@Base+0xc6>
  4248f8:	mov    DWORD PTR [r15+0x1c],0x7
  424900:	jmp    424913 <flatcc_json_parser_double@@Base+0xb3>
  424902:	mov    rax,rbx
  424905:	jmp    424929 <flatcc_json_parser_double@@Base+0xc9>
  424907:	test   eax,eax
  424909:	jne    424926 <flatcc_json_parser_double@@Base+0xc6>
  42490b:	mov    DWORD PTR [r15+0x1c],0x6
  424913:	mov    eax,DWORD PTR [r15+0x8]
  424917:	mov    ecx,ebx
  424919:	sub    ecx,eax
  42491b:	add    ecx,0x1
  42491e:	mov    DWORD PTR [r15+0x18],ecx
  424922:	mov    QWORD PTR [r15+0x30],rbx
  424926:	mov    rax,r14
  424929:	add    rsp,0x8
  42492d:	pop    rbx
  42492e:	pop    r12
  424930:	pop    r14
  424932:	pop    r15
  424934:	ret    
  424935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42493f:	nop
  424940:	push   rbp
  424941:	push   r15
  424943:	push   r14
  424945:	push   r13
  424947:	push   r12
  424949:	push   rbx
  42494a:	sub    rsp,0x28
  42494e:	mov    r13,rdx
  424951:	mov    r14,rdi
  424954:	mov    QWORD PTR [rdx],0x0
  42495b:	cmp    esi,0x3e9
  424961:	mov    edx,0x3e8
  424966:	cmovl  edx,esi
  424969:	movsxd r12,edx
  42496c:	lea    r15,[rdi+r12*1]
  424970:	add    r15,0x1
  424974:	cmp    r15,rdi
  424977:	je     424d80 <flatcc_json_parser_double@@Base+0x520>
  42497d:	mov    al,BYTE PTR [r14]
  424980:	xor    ebx,ebx
  424982:	mov    rcx,r14
  424985:	cmp    al,0x2d
  424987:	jne    42499c <flatcc_json_parser_double@@Base+0x13c>
  424989:	test   edx,edx
  42498b:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424991:	lea    rcx,[r14+0x1]
  424995:	mov    al,BYTE PTR [rcx]
  424997:	mov    ebx,0x1
  42499c:	lea    r8,[r14+r12*1]
  4249a0:	cmp    al,0x30
  4249a2:	jne    4249c6 <flatcc_json_parser_double@@Base+0x166>
  4249a4:	lea    rsi,[rcx+0x1]
  4249a8:	cmp    rcx,r8
  4249ab:	je     4249f6 <flatcc_json_parser_double@@Base+0x196>
  4249ad:	mov    al,BYTE PTR [rsi]
  4249af:	mov    edx,eax
  4249b1:	or     dl,0x20
  4249b4:	cmp    dl,0x78
  4249b7:	jne    424a02 <flatcc_json_parser_double@@Base+0x1a2>
  4249b9:	mov    QWORD PTR [r13+0x0],0x0
  4249c1:	jmp    424d80 <flatcc_json_parser_double@@Base+0x520>
  4249c6:	mov    edx,eax
  4249c8:	add    dl,0xcf
  4249cb:	cmp    dl,0x9
  4249ce:	jb     4249dd <flatcc_json_parser_double@@Base+0x17d>
  4249d0:	xor    eax,eax
  4249d2:	test   ebx,ebx
  4249d4:	cmovne r14,rax
  4249d8:	jmp    424d80 <flatcc_json_parser_double@@Base+0x520>
  4249dd:	movsx  rdi,al
  4249e1:	add    rcx,0x1
  4249e5:	add    rdi,0xffffffffffffffd0
  4249e9:	mov    rsi,rcx
  4249ec:	cmp    rsi,r15
  4249ef:	jne    424a2e <flatcc_json_parser_double@@Base+0x1ce>
  4249f1:	jmp    424d7d <flatcc_json_parser_double@@Base+0x51d>
  4249f6:	xor    edi,edi
  4249f8:	cmp    rsi,r15
  4249fb:	jne    424a2e <flatcc_json_parser_double@@Base+0x1ce>
  4249fd:	jmp    424d7d <flatcc_json_parser_double@@Base+0x51d>
  424a02:	cmp    al,0x30
  424a04:	jne    424a23 <flatcc_json_parser_double@@Base+0x1c3>
  424a06:	add    rcx,0x2
  424a0a:	xor    edi,edi
  424a0c:	nop    DWORD PTR [rax+0x0]
  424a10:	mov    rsi,rcx
  424a13:	cmp    r15,rcx
  424a16:	je     424a25 <flatcc_json_parser_double@@Base+0x1c5>
  424a18:	lea    rcx,[rsi+0x1]
  424a1c:	cmp    BYTE PTR [rsi],0x30
  424a1f:	je     424a10 <flatcc_json_parser_double@@Base+0x1b0>
  424a21:	jmp    424a25 <flatcc_json_parser_double@@Base+0x1c5>
  424a23:	xor    edi,edi
  424a25:	cmp    rsi,r15
  424a28:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424a2e:	movabs r11,0x1999999999999998
  424a38:	mov    rbp,rsi
  424a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  424a40:	movsx  rax,BYTE PTR [rbp+0x0]
  424a45:	mov    edx,eax
  424a47:	add    dl,0xd0
  424a4a:	xor    ecx,ecx
  424a4c:	cmp    dl,0x9
  424a4f:	ja     424a6b <flatcc_json_parser_double@@Base+0x20b>
  424a51:	cmp    rdi,r11
  424a54:	ja     424a75 <flatcc_json_parser_double@@Base+0x215>
  424a56:	lea    rdx,[rdi+rdi*4]
  424a5a:	add    rbp,0x1
  424a5e:	lea    rdi,[rax+rdx*2]
  424a62:	add    rdi,0xffffffffffffffd0
  424a66:	cmp    r15,rbp
  424a69:	jne    424a40 <flatcc_json_parser_double@@Base+0x1e0>
  424a6b:	cmp    rbp,r15
  424a6e:	jne    424a8d <flatcc_json_parser_double@@Base+0x22d>
  424a70:	jmp    424d7d <flatcc_json_parser_double@@Base+0x51d>
  424a75:	xor    ecx,ecx
  424a77:	cmp    al,0x34
  424a79:	setg   cl
  424a7c:	add    rdi,rcx
  424a7f:	mov    ecx,0x1
  424a84:	cmp    rbp,r15
  424a87:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424a8d:	mov    DWORD PTR [rsp+0xc],ebx
  424a91:	mov    r10d,ebp
  424a94:	sub    r10d,esi
  424a97:	lea    r9,[r12+0x1]
  424a9c:	mov    rdx,r9
  424a9f:	sub    rdx,rbp
  424aa2:	add    rdx,r14
  424aa5:	xor    esi,esi
  424aa7:	nop    WORD PTR [rax+rax*1+0x0]
  424ab0:	movzx  eax,BYTE PTR [rbp+rsi*1+0x0]
  424ab5:	cmp    al,0x30
  424ab7:	jne    424ac4 <flatcc_json_parser_double@@Base+0x264>
  424ab9:	add    rsi,0x1
  424abd:	cmp    rdx,rsi
  424ac0:	jne    424ab0 <flatcc_json_parser_double@@Base+0x250>
  424ac2:	jmp    424b0b <flatcc_json_parser_double@@Base+0x2ab>
  424ac4:	add    al,0xcf
  424ac6:	cmp    al,0x9
  424ac8:	jae    424b0b <flatcc_json_parser_double@@Base+0x2ab>
  424aca:	add    rsi,0x1
  424ace:	mov    rax,rsi
  424ad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424adb:	nop    DWORD PTR [rax+rax*1+0x0]
  424ae0:	mov    rsi,rax
  424ae3:	cmp    rdx,rax
  424ae6:	je     424af9 <flatcc_json_parser_double@@Base+0x299>
  424ae8:	movzx  ecx,BYTE PTR [rbp+rsi*1+0x0]
  424aed:	add    cl,0xd0
  424af0:	lea    rax,[rsi+0x1]
  424af4:	cmp    cl,0xa
  424af7:	jb     424ae0 <flatcc_json_parser_double@@Base+0x280>
  424af9:	add    rbp,rsi
  424afc:	mov    ecx,0x1
  424b01:	cmp    rbp,r15
  424b04:	jne    424b17 <flatcc_json_parser_double@@Base+0x2b7>
  424b06:	jmp    424d7d <flatcc_json_parser_double@@Base+0x51d>
  424b0b:	add    rbp,rsi
  424b0e:	cmp    rbp,r15
  424b11:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424b17:	cmp    BYTE PTR [rbp+0x0],0x2e
  424b1b:	jne    424b98 <flatcc_json_parser_double@@Base+0x338>
  424b1d:	mov    QWORD PTR [rsp+0x18],r13
  424b22:	mov    r13b,BYTE PTR [rbp+0x1]
  424b26:	mov    eax,r13d
  424b29:	add    al,0xd0
  424b2b:	cmp    al,0x9
  424b2d:	ja     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424b33:	lea    rax,[rbp+0x1]
  424b37:	cmp    rbp,r8
  424b3a:	je     424c3d <flatcc_json_parser_double@@Base+0x3dd>
  424b40:	mov    QWORD PTR [rsp+0x10],rax
  424b45:	add    r12,0xffffffffffffffff
  424b49:	sub    r12,rbp
  424b4c:	add    r12,r14
  424b4f:	xor    edx,edx
  424b51:	mov    rax,rdx
  424b54:	cmp    rdi,r11
  424b57:	ja     424c42 <flatcc_json_parser_double@@Base+0x3e2>
  424b5d:	lea    rdx,[rdi+rdi*4]
  424b61:	movsx  rdi,r13b
  424b65:	lea    rdi,[rdi+rdx*2]
  424b69:	add    rdi,0xffffffffffffffd0
  424b6d:	cmp    r12,rax
  424b70:	je     424b87 <flatcc_json_parser_double@@Base+0x327>
  424b72:	movzx  r13d,BYTE PTR [rbp+rax*1+0x2]
  424b78:	mov    ebx,r13d
  424b7b:	add    bl,0xd0
  424b7e:	lea    rdx,[rax+0x1]
  424b82:	cmp    bl,0xa
  424b85:	jb     424b51 <flatcc_json_parser_double@@Base+0x2f1>
  424b87:	add    rbp,rax
  424b8a:	add    rbp,0x2
  424b8e:	add    esi,0xffffffff
  424b91:	sub    esi,eax
  424b93:	jmp    424c63 <flatcc_json_parser_double@@Base+0x403>
  424b98:	mov    edx,r10d
  424b9b:	xor    r9d,r9d
  424b9e:	cmp    rbp,r15
  424ba1:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424ba7:	mov    al,BYTE PTR [rbp+0x0]
  424baa:	or     al,0x20
  424bac:	cmp    al,0x65
  424bae:	jne    424beb <flatcc_json_parser_double@@Base+0x38b>
  424bb0:	mov    rax,r15
  424bb3:	sub    rax,rbp
  424bb6:	xor    r9d,r9d
  424bb9:	cmp    rax,0x2
  424bbd:	jl     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424bc3:	mov    al,BYTE PTR [rbp+0x1]
  424bc6:	cmp    al,0x2d
  424bc8:	je     424d5a <flatcc_json_parser_double@@Base+0x4fa>
  424bce:	cmp    al,0x2b
  424bd0:	jne    424d6b <flatcc_json_parser_double@@Base+0x50b>
  424bd6:	add    rbp,0x2
  424bda:	xor    r9d,r9d
  424bdd:	cmp    rbp,r15
  424be0:	jne    424d6f <flatcc_json_parser_double@@Base+0x50f>
  424be6:	jmp    424d7d <flatcc_json_parser_double@@Base+0x51d>
  424beb:	xor    r10d,r10d
  424bee:	cmp    rbp,r15
  424bf1:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424bf7:	mov    eax,r10d
  424bfa:	neg    eax
  424bfc:	test   r9d,r9d
  424bff:	cmove  eax,r10d
  424c03:	vxorpd xmm0,xmm0,xmm0
  424c07:	test   rdi,rdi
  424c0a:	je     424ce0 <flatcc_json_parser_double@@Base+0x480>
  424c10:	add    esi,edx
  424c12:	add    esi,eax
  424c14:	cmp    esi,0xfffffebc
  424c1a:	mov    ebx,DWORD PTR [rsp+0xc]
  424c1e:	jl     424ce4 <flatcc_json_parser_double@@Base+0x484>
  424c24:	cmp    esi,0x136
  424c2a:	jle    424d07 <flatcc_json_parser_double@@Base+0x4a7>
  424c30:	vmovsd xmm0,QWORD PTR [rip+0x14448]        # 439080 <flatcc_builder_padding_base@@Base+0x24e0>
  424c38:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424c3d:	mov    rbp,rax
  424c40:	jmp    424c68 <flatcc_json_parser_double@@Base+0x408>
  424c42:	mov    esi,esi
  424c44:	sub    rsi,rax
  424c47:	add    rbp,rax
  424c4a:	add    rbp,0x1
  424c4e:	test   ecx,ecx
  424c50:	jne    424c63 <flatcc_json_parser_double@@Base+0x403>
  424c52:	xor    eax,eax
  424c54:	cmp    r13b,0x34
  424c58:	setg   al
  424c5b:	add    rdi,rax
  424c5e:	mov    ecx,0x1
  424c63:	mov    rax,QWORD PTR [rsp+0x10]
  424c68:	cmp    rbp,r15
  424c6b:	mov    r13,QWORD PTR [rsp+0x18]
  424c70:	je     424d7d <flatcc_json_parser_double@@Base+0x51d>
  424c76:	mov    edx,ebp
  424c78:	sub    edx,eax
  424c7a:	add    edx,r10d
  424c7d:	lea    r10,[rbp+0x1]
  424c81:	sub    r9,rbp
  424c84:	add    r9,r14
  424c87:	xor    ebx,ebx
  424c89:	xor    r11d,r11d
  424c8c:	movzx  eax,BYTE PTR [rbp+rbx*1+0x0]
  424c91:	cmp    al,0x30
  424c93:	jne    424caa <flatcc_json_parser_double@@Base+0x44a>
  424c95:	add    r11,0xffffffffffffffff
  424c99:	add    rbx,0x1
  424c9d:	mov    rax,r9
  424ca0:	add    rax,r11
  424ca3:	jne    424c8c <flatcc_json_parser_double@@Base+0x42c>
  424ca5:	sub    esi,r11d
  424ca8:	jmp    424cd8 <flatcc_json_parser_double@@Base+0x478>
  424caa:	add    al,0xcf
  424cac:	mov    esi,esi
  424cae:	sub    rsi,r11
  424cb1:	cmp    al,0x9
  424cb3:	jae    424cd8 <flatcc_json_parser_double@@Base+0x478>
  424cb5:	sub    r10,r11
  424cb8:	mov    rbp,r10
  424cbb:	cmp    r15,r10
  424cbe:	je     424cce <flatcc_json_parser_double@@Base+0x46e>
  424cc0:	movzx  eax,BYTE PTR [rbp+0x0]
  424cc4:	add    al,0xd0
  424cc6:	lea    r10,[rbp+0x1]
  424cca:	cmp    al,0xa
  424ccc:	jb     424cb8 <flatcc_json_parser_double@@Base+0x458>
  424cce:	mov    ecx,0x1
  424cd3:	jmp    424b9b <flatcc_json_parser_double@@Base+0x33b>
  424cd8:	sub    rbp,r11
  424cdb:	jmp    424b9b <flatcc_json_parser_double@@Base+0x33b>
  424ce0:	mov    ebx,DWORD PTR [rsp+0xc]
  424ce4:	vmovsd QWORD PTR [r13+0x0],xmm0
  424cea:	test   ebx,ebx
  424cec:	je     424d02 <flatcc_json_parser_double@@Base+0x4a2>
  424cee:	vmovsd xmm0,QWORD PTR [r13+0x0]
  424cf4:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xef54]        # 433c50 <_IO_stdin_used@@Base+0xc50>
  424cfc:	vmovlpd QWORD PTR [r13+0x0],xmm0
  424d02:	mov    r14,rbp
  424d05:	jmp    424d80 <flatcc_json_parser_double@@Base+0x520>
  424d07:	mov    rax,rdi
  424d0a:	shr    rax,0x35
  424d0e:	jne    424dd8 <flatcc_json_parser_double@@Base+0x578>
  424d14:	cmp    esi,0x16
  424d17:	ja     424dd8 <flatcc_json_parser_double@@Base+0x578>
  424d1d:	vmovq  xmm0,rdi
  424d22:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xef06]        # 433c30 <_IO_stdin_used@@Base+0xc30>
  424d2a:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xef0e]        # 433c40 <_IO_stdin_used@@Base+0xc40>
  424d32:	vhaddpd xmm0,xmm0,xmm0
  424d36:	sub    esi,edx
  424d38:	add    esi,0x16
  424d3b:	cmp    esi,0x2c
  424d3e:	ja     424ce4 <flatcc_json_parser_double@@Base+0x484>
  424d40:	lea    rax,[rip+0x13a8d]        # 4387d4 <flatcc_builder_padding_base@@Base+0x1c34>
  424d47:	movsxd rcx,DWORD PTR [rax+rsi*4]
  424d4b:	add    rcx,rax
  424d4e:	jmp    rcx
  424d50:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x143d8]        # 439130 <flatcc_builder_padding_base@@Base+0x2590>
  424d58:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424d5a:	add    rbp,0x2
  424d5e:	mov    r9d,0x1
  424d64:	cmp    rbp,r15
  424d67:	jne    424d6f <flatcc_json_parser_double@@Base+0x50f>
  424d69:	jmp    424d7d <flatcc_json_parser_double@@Base+0x51d>
  424d6b:	add    rbp,0x1
  424d6f:	movsx  r10d,BYTE PTR [rbp+0x0]
  424d74:	mov    eax,r10d
  424d77:	add    al,0xd0
  424d79:	cmp    al,0x9
  424d7b:	jbe    424d92 <flatcc_json_parser_double@@Base+0x532>
  424d7d:	xor    r14d,r14d
  424d80:	mov    rax,r14
  424d83:	add    rsp,0x28
  424d87:	pop    rbx
  424d88:	pop    r12
  424d8a:	pop    r13
  424d8c:	pop    r14
  424d8e:	pop    r15
  424d90:	pop    rbp
  424d91:	ret    
  424d92:	add    r10d,0xffffffd0
  424d96:	cmp    rbp,r8
  424d99:	lea    rbp,[rbp+0x1]
  424d9d:	je     424bee <flatcc_json_parser_double@@Base+0x38e>
  424da3:	movsx  eax,BYTE PTR [rbp+0x0]
  424da7:	mov    ebx,eax
  424da9:	add    bl,0xd0
  424dac:	cmp    bl,0x9
  424daf:	ja     424bee <flatcc_json_parser_double@@Base+0x38e>
  424db5:	cmp    r10d,0x7fff
  424dbc:	jg     424dca <flatcc_json_parser_double@@Base+0x56a>
  424dbe:	lea    ebx,[r10+r10*4]
  424dc2:	lea    r10d,[rax+rbx*2]
  424dc6:	add    r10d,0xffffffd0
  424dca:	add    rbp,0x1
  424dce:	cmp    r15,rbp
  424dd1:	jne    424da3 <flatcc_json_parser_double@@Base+0x543>
  424dd3:	jmp    424bee <flatcc_json_parser_double@@Base+0x38e>
  424dd8:	mov    r8,r13
  424ddb:	call   4231d0 <grisu3_diy_fp_encode_double@@Base>
  424de0:	mov    ebx,DWORD PTR [rsp+0xc]
  424de4:	test   eax,eax
  424de6:	jne    424cea <flatcc_json_parser_double@@Base+0x48a>
  424dec:	lea    rsi,[rsp+0x20]
  424df1:	mov    rdi,r14
  424df4:	call   406050 <strtod@plt>
  424df9:	vmovsd QWORD PTR [r13+0x0],xmm0
  424dff:	mov    rax,QWORD PTR [rsp+0x20]
  424e04:	cmp    rax,rbp
  424e07:	cmovb  rbp,rax
  424e0b:	jmp    424d02 <flatcc_json_parser_double@@Base+0x4a2>
  424e10:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14270]        # 439088 <flatcc_builder_padding_base@@Base+0x24e8>
  424e18:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e1d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1426b]        # 439090 <flatcc_builder_padding_base@@Base+0x24f0>
  424e25:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e2a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14266]        # 439098 <flatcc_builder_padding_base@@Base+0x24f8>
  424e32:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e37:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14261]        # 4390a0 <flatcc_builder_padding_base@@Base+0x2500>
  424e3f:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e44:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1425c]        # 4390a8 <flatcc_builder_padding_base@@Base+0x2508>
  424e4c:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e51:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14257]        # 4390b0 <flatcc_builder_padding_base@@Base+0x2510>
  424e59:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e5e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14252]        # 4390b8 <flatcc_builder_padding_base@@Base+0x2518>
  424e66:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e6b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1424d]        # 4390c0 <flatcc_builder_padding_base@@Base+0x2520>
  424e73:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e78:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14248]        # 4390c8 <flatcc_builder_padding_base@@Base+0x2528>
  424e80:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e85:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14243]        # 4390d0 <flatcc_builder_padding_base@@Base+0x2530>
  424e8d:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e92:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1423e]        # 4390d8 <flatcc_builder_padding_base@@Base+0x2538>
  424e9a:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424e9f:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14239]        # 4390e0 <flatcc_builder_padding_base@@Base+0x2540>
  424ea7:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424eac:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14234]        # 4390e8 <flatcc_builder_padding_base@@Base+0x2548>
  424eb4:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424eb9:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1422f]        # 4390f0 <flatcc_builder_padding_base@@Base+0x2550>
  424ec1:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424ec6:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1422a]        # 4390f8 <flatcc_builder_padding_base@@Base+0x2558>
  424ece:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424ed3:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14225]        # 439100 <flatcc_builder_padding_base@@Base+0x2560>
  424edb:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424ee0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14220]        # 439108 <flatcc_builder_padding_base@@Base+0x2568>
  424ee8:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424eed:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1421b]        # 439110 <flatcc_builder_padding_base@@Base+0x2570>
  424ef5:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424efa:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14216]        # 439118 <flatcc_builder_padding_base@@Base+0x2578>
  424f02:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f07:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14211]        # 439120 <flatcc_builder_padding_base@@Base+0x2580>
  424f0f:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f14:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1420c]        # 439128 <flatcc_builder_padding_base@@Base+0x2588>
  424f1c:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f21:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x141ff]        # 439128 <flatcc_builder_padding_base@@Base+0x2588>
  424f29:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f2e:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x141ea]        # 439120 <flatcc_builder_padding_base@@Base+0x2580>
  424f36:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f3b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x141d5]        # 439118 <flatcc_builder_padding_base@@Base+0x2578>
  424f43:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f48:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x141c0]        # 439110 <flatcc_builder_padding_base@@Base+0x2570>
  424f50:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f55:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x141ab]        # 439108 <flatcc_builder_padding_base@@Base+0x2568>
  424f5d:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f62:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14196]        # 439100 <flatcc_builder_padding_base@@Base+0x2560>
  424f6a:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f6f:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14181]        # 4390f8 <flatcc_builder_padding_base@@Base+0x2558>
  424f77:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f7c:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1416c]        # 4390f0 <flatcc_builder_padding_base@@Base+0x2550>
  424f84:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f89:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14157]        # 4390e8 <flatcc_builder_padding_base@@Base+0x2548>
  424f91:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424f96:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14142]        # 4390e0 <flatcc_builder_padding_base@@Base+0x2540>
  424f9e:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424fa3:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1412d]        # 4390d8 <flatcc_builder_padding_base@@Base+0x2538>
  424fab:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424fb0:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14118]        # 4390d0 <flatcc_builder_padding_base@@Base+0x2530>
  424fb8:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424fbd:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14103]        # 4390c8 <flatcc_builder_padding_base@@Base+0x2528>
  424fc5:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424fca:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x140ee]        # 4390c0 <flatcc_builder_padding_base@@Base+0x2520>
  424fd2:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424fd7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x140d9]        # 4390b8 <flatcc_builder_padding_base@@Base+0x2518>
  424fdf:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424fe4:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x140c4]        # 4390b0 <flatcc_builder_padding_base@@Base+0x2510>
  424fec:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424ff1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x140af]        # 4390a8 <flatcc_builder_padding_base@@Base+0x2508>
  424ff9:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  424ffe:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1409a]        # 4390a0 <flatcc_builder_padding_base@@Base+0x2500>
  425006:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  42500b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14085]        # 439098 <flatcc_builder_padding_base@@Base+0x24f8>
  425013:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  425018:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14070]        # 439090 <flatcc_builder_padding_base@@Base+0x24f0>
  425020:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  425025:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1405b]        # 439088 <flatcc_builder_padding_base@@Base+0x24e8>
  42502d:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  425032:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x140f6]        # 439130 <flatcc_builder_padding_base@@Base+0x2590>
  42503a:	jmp    424ce4 <flatcc_json_parser_double@@Base+0x484>
  42503f:	nop

0000000000425040 <flatcc_json_parser_float@@Base>:
  425040:	push   r15
  425042:	push   r14
  425044:	push   r12
  425046:	push   rbx
  425047:	push   rax
  425048:	mov    rbx,rsi
  42504b:	mov    DWORD PTR [rcx],0x0
  425051:	cmp    rsi,rdx
  425054:	je     425123 <flatcc_json_parser_float@@Base+0xe3>
  42505a:	mov    r12,rcx
  42505d:	mov    r14,rdx
  425060:	mov    r15,rdi
  425063:	lea    rax,[rbx+0x1]
  425067:	xor    ecx,ecx
  425069:	cmp    BYTE PTR [rbx],0x2d
  42506c:	sete   dl
  42506f:	cmovne rax,rbx
  425073:	mov    rsi,r14
  425076:	sub    rsi,rax
  425079:	cmp    rsi,0x2
  42507d:	jl     4250a4 <flatcc_json_parser_float@@Base+0x64>
  42507f:	mov    cl,dl
  425081:	mov    cl,BYTE PTR [rbx+rcx*1]
  425084:	cmp    cl,0x2e
  425087:	je     425094 <flatcc_json_parser_float@@Base+0x54>
  425089:	cmp    cl,0x30
  42508c:	jne    4250a4 <flatcc_json_parser_float@@Base+0x64>
  42508e:	cmp    BYTE PTR [rax+0x1],0x30
  425092:	jne    4250a4 <flatcc_json_parser_float@@Base+0x64>
  425094:	cmp    DWORD PTR [r15+0x1c],0x0
  425099:	jne    425147 <flatcc_json_parser_float@@Base+0x107>
  42509f:	jmp    42512c <flatcc_json_parser_float@@Base+0xec>
  4250a4:	mov    esi,r14d
  4250a7:	sub    esi,ebx
  4250a9:	mov    rdx,rsp
  4250ac:	mov    rdi,rbx
  4250af:	call   424940 <flatcc_json_parser_double@@Base+0xe0>
  4250b4:	vmovsd xmm0,QWORD PTR [rsp]
  4250b9:	vxorps xmm1,xmm1,xmm1
  4250bd:	xor    ecx,ecx
  4250bf:	vucomisd xmm1,xmm0
  4250c3:	seta   dl
  4250c6:	vcvtsd2ss xmm1,xmm0,xmm0
  4250ca:	vbroadcastss xmm0,DWORD PTR [rip+0x1406d]        # 439140 <flatcc_builder_padding_base@@Base+0x25a0>
  4250d3:	vandps xmm2,xmm1,xmm0
  4250d7:	vucomiss xmm2,DWORD PTR [rip+0x14065]        # 439144 <flatcc_builder_padding_base@@Base+0x25a4>
  4250df:	jb     4250ef <flatcc_json_parser_float@@Base+0xaf>
  4250e1:	mov    cl,dl
  4250e3:	lea    rdx,[rip+0x1404e]        # 439138 <flatcc_builder_padding_base@@Base+0x2598>
  4250ea:	vmovss xmm1,DWORD PTR [rdx+rcx*4]
  4250ef:	cmovae rax,rbx
  4250f3:	vmovss DWORD PTR [r12],xmm1
  4250f9:	test   rax,rax
  4250fc:	je     425103 <flatcc_json_parser_float@@Base+0xc3>
  4250fe:	cmp    rax,rbx
  425101:	jne    42514a <flatcc_json_parser_float@@Base+0x10a>
  425103:	vandps xmm0,xmm1,xmm0
  425107:	vucomiss xmm0,DWORD PTR [rip+0x14035]        # 439144 <flatcc_builder_padding_base@@Base+0x25a4>
  42510f:	mov    eax,DWORD PTR [r15+0x1c]
  425113:	jb     425128 <flatcc_json_parser_float@@Base+0xe8>
  425115:	test   eax,eax
  425117:	jne    425147 <flatcc_json_parser_float@@Base+0x107>
  425119:	mov    DWORD PTR [r15+0x1c],0x7
  425121:	jmp    425134 <flatcc_json_parser_float@@Base+0xf4>
  425123:	mov    rax,rbx
  425126:	jmp    42514a <flatcc_json_parser_float@@Base+0x10a>
  425128:	test   eax,eax
  42512a:	jne    425147 <flatcc_json_parser_float@@Base+0x107>
  42512c:	mov    DWORD PTR [r15+0x1c],0x6
  425134:	mov    eax,DWORD PTR [r15+0x8]
  425138:	mov    ecx,ebx
  42513a:	sub    ecx,eax
  42513c:	add    ecx,0x1
  42513f:	mov    DWORD PTR [r15+0x18],ecx
  425143:	mov    QWORD PTR [r15+0x30],rbx
  425147:	mov    rax,r14
  42514a:	add    rsp,0x8
  42514e:	pop    rbx
  42514f:	pop    r12
  425151:	pop    r14
  425153:	pop    r15
  425155:	ret    
  425156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000425160 <flatcc_json_parser_integer@@Base>:
  425160:	cmp    rsi,rdx
  425163:	je     4251fb <flatcc_json_parser_integer@@Base+0x9b>
  425169:	xor    r10d,r10d
  42516c:	cmp    BYTE PTR [rsi],0x2d
  42516f:	sete   r10b
  425173:	mov    DWORD PTR [rcx],r10d
  425176:	add    r10,rsi
  425179:	xor    r9d,r9d
  42517c:	cmp    r10,rdx
  42517f:	je     4251f1 <flatcc_json_parser_integer@@Base+0x91>
  425181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42518b:	nop    DWORD PTR [rax+rax*1+0x0]
  425190:	movsx  r11,BYTE PTR [r10]
  425194:	mov    eax,r11d
  425197:	add    al,0xd0
  425199:	cmp    al,0x9
  42519b:	ja     425209 <flatcc_json_parser_integer@@Base+0xa9>
  42519d:	lea    rax,[r9+r9*4]
  4251a1:	lea    rax,[r11+rax*2]
  4251a5:	add    rax,0xffffffffffffffd0
  4251a9:	cmp    r9,rax
  4251ac:	ja     425212 <flatcc_json_parser_integer@@Base+0xb2>
  4251ae:	add    r10,0x1
  4251b2:	mov    r9,rax
  4251b5:	cmp    rdx,r10
  4251b8:	jne    425190 <flatcc_json_parser_integer@@Base+0x30>
  4251ba:	xor    ecx,ecx
  4251bc:	mov    r10,rdx
  4251bf:	mov    r9,rax
  4251c2:	cmp    r10,rsi
  4251c5:	je     4251fb <flatcc_json_parser_integer@@Base+0x9b>
  4251c7:	test   cl,cl
  4251c9:	je     4251ff <flatcc_json_parser_integer@@Base+0x9f>
  4251cb:	mov    al,BYTE PTR [r10]
  4251ce:	add    al,0xd2
  4251d0:	cmp    al,0x37
  4251d2:	ja     4251ff <flatcc_json_parser_integer@@Base+0x9f>
  4251d4:	movzx  eax,al
  4251d7:	movabs rcx,0x80000000800001
  4251e1:	bt     rcx,rax
  4251e5:	jae    4251ff <flatcc_json_parser_integer@@Base+0x9f>
  4251e7:	cmp    DWORD PTR [rdi+0x1c],0x0
  4251eb:	je     42521c <flatcc_json_parser_integer@@Base+0xbc>
  4251ed:	mov    rax,rdx
  4251f0:	ret    
  4251f1:	mov    r10,rdx
  4251f4:	xor    ecx,ecx
  4251f6:	cmp    r10,rsi
  4251f9:	jne    4251c7 <flatcc_json_parser_integer@@Base+0x67>
  4251fb:	mov    rax,rsi
  4251fe:	ret    
  4251ff:	mov    QWORD PTR [r8],r9
  425202:	mov    rsi,r10
  425205:	mov    rax,rsi
  425208:	ret    
  425209:	mov    cl,0x1
  42520b:	cmp    r10,rsi
  42520e:	jne    4251c7 <flatcc_json_parser_integer@@Base+0x67>
  425210:	jmp    4251fb <flatcc_json_parser_integer@@Base+0x9b>
  425212:	cmp    DWORD PTR [rdi+0x1c],0x0
  425216:	je     425225 <flatcc_json_parser_integer@@Base+0xc5>
  425218:	mov    rax,rdx
  42521b:	ret    
  42521c:	mov    DWORD PTR [rdi+0x1c],0xc
  425223:	jmp    425234 <flatcc_json_parser_integer@@Base+0xd4>
  425225:	cmp    rcx,0x1
  425229:	mov    eax,0x8
  42522e:	sbb    eax,0x0
  425231:	mov    DWORD PTR [rdi+0x1c],eax
  425234:	mov    eax,DWORD PTR [rdi+0x8]
  425237:	mov    ecx,r10d
  42523a:	sub    ecx,eax
  42523c:	add    ecx,0x1
  42523f:	mov    DWORD PTR [rdi+0x18],ecx
  425242:	mov    QWORD PTR [rdi+0x30],r10
  425246:	mov    rax,rdx
  425249:	ret    
  42524a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000425250 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  425250:	push   rbp
  425251:	push   r15
  425253:	push   r14
  425255:	push   r13
  425257:	push   r12
  425259:	push   rbx
  42525a:	sub    rsp,0x28
  42525e:	mov    r12d,r8d
  425261:	mov    r15,rcx
  425264:	mov    r14,rdx
  425267:	mov    r13,rsi
  42526a:	mov    rbx,rdi
  42526d:	cmp    rsi,rdx
  425270:	je     4252ba <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a>
  425272:	cmp    BYTE PTR [r13+0x0],0x22
  425277:	jne    4252ba <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a>
  425279:	add    r13,0x1
  42527d:	cmp    r13,r14
  425280:	je     4252d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  425282:	mov    rbp,r13
  425285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42528f:	nop
  425290:	movzx  ecx,BYTE PTR [rbp+0x0]
  425294:	cmp    cl,0x20
  425297:	jb     42533d <flatcc_json_parser_build_uint8_vector_base64@@Base+0xed>
  42529d:	cmp    cl,0x22
  4252a0:	je     425360 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
  4252a6:	cmp    cl,0x5c
  4252a9:	je     425360 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
  4252af:	add    rbp,0x1
  4252b3:	cmp    r14,rbp
  4252b6:	jne    425290 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  4252b8:	jmp    4252d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  4252ba:	cmp    DWORD PTR [rbx+0x1c],0x0
  4252be:	jne    4252d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  4252c0:	mov    DWORD PTR [rbx+0x1c],0x10
  4252c7:	mov    eax,DWORD PTR [rbx+0x8]
  4252ca:	mov    ecx,r13d
  4252cd:	sub    ecx,eax
  4252cf:	add    ecx,0x1
  4252d2:	mov    DWORD PTR [rbx+0x18],ecx
  4252d5:	mov    QWORD PTR [rbx+0x30],r13
  4252d9:	cmp    DWORD PTR [rbx+0x1c],0x0
  4252dd:	mov    rax,r14
  4252e0:	jne    4252fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  4252e2:	mov    DWORD PTR [rbx+0x1c],0x14
  4252e9:	mov    eax,DWORD PTR [rbx+0x8]
  4252ec:	mov    ecx,r14d
  4252ef:	sub    ecx,eax
  4252f1:	add    ecx,0x1
  4252f4:	mov    DWORD PTR [rbx+0x18],ecx
  4252f7:	mov    QWORD PTR [rbx+0x30],r14
  4252fb:	mov    rax,r14
  4252fe:	mov    DWORD PTR [r15],0x0
  425305:	cmp    DWORD PTR [rbx+0x1c],0x0
  425309:	jne    42532b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  42530b:	cmp    r12d,0x1
  42530f:	mov    ecx,0x1f
  425314:	sbb    ecx,0xffffffff
  425317:	mov    DWORD PTR [rbx+0x1c],ecx
  42531a:	mov    ecx,DWORD PTR [rbx+0x8]
  42531d:	mov    edx,eax
  42531f:	sub    edx,ecx
  425321:	add    edx,0x1
  425324:	mov    DWORD PTR [rbx+0x18],edx
  425327:	mov    QWORD PTR [rbx+0x30],rax
  42532b:	mov    rax,r14
  42532e:	add    rsp,0x28
  425332:	pop    rbx
  425333:	pop    r12
  425335:	pop    r13
  425337:	pop    r14
  425339:	pop    r15
  42533b:	pop    rbp
  42533c:	ret    
  42533d:	cmp    DWORD PTR [rbx+0x1c],0x0
  425341:	mov    rax,r14
  425344:	jne    4252fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  425346:	mov    DWORD PTR [rbx+0x1c],0x11
  42534d:	mov    eax,DWORD PTR [rbx+0x8]
  425350:	mov    ecx,ebp
  425352:	sub    ecx,eax
  425354:	add    ecx,0x1
  425357:	mov    DWORD PTR [rbx+0x18],ecx
  42535a:	mov    QWORD PTR [rbx+0x30],rbp
  42535e:	jmp    4252fb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  425360:	mov    rax,r14
  425363:	cmp    r14,rbp
  425366:	je     4252fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  425368:	cmp    cl,0x22
  42536b:	jne    425395 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  42536d:	mov    rcx,rbp
  425370:	sub    rcx,r13
  425373:	mov    rax,rcx
  425376:	shr    rax,0x2
  42537a:	lea    rdx,[rax+rax*2]
  42537e:	mov    QWORD PTR [rsp+0x18],rcx
  425383:	mov    eax,ecx
  425385:	and    al,0x3
  425387:	cmp    al,0x2
  425389:	je     42539d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  42538b:	cmp    al,0x3
  42538d:	jne    4253a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x151>
  42538f:	add    rdx,0x2
  425393:	jmp    4253a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x151>
  425395:	mov    rax,rbp
  425398:	jmp    4252fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  42539d:	add    rdx,0x1
  4253a1:	mov    QWORD PTR [rsp+0x8],rdx
  4253a6:	mov    rdi,QWORD PTR [rbx]
  4253a9:	mov    esi,0x1
  4253ae:	mov    edx,0x1
  4253b3:	mov    ecx,0xffffffff
  4253b8:	call   41e690 <flatcc_builder_start_vector@@Base>
  4253bd:	test   eax,eax
  4253bf:	je     4253ef <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19f>
  4253c1:	mov    DWORD PTR [r15],0x0
  4253c8:	cmp    DWORD PTR [rbx+0x1c],0x0
  4253cc:	jne    42532b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  4253d2:	mov    DWORD PTR [rbx+0x1c],0x21
  4253d9:	mov    eax,DWORD PTR [rbx+0x8]
  4253dc:	mov    ecx,ebp
  4253de:	sub    ecx,eax
  4253e0:	add    ecx,0x1
  4253e3:	mov    DWORD PTR [rbx+0x18],ecx
  4253e6:	mov    QWORD PTR [rbx+0x30],rbp
  4253ea:	jmp    42532b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  4253ef:	mov    rdi,QWORD PTR [rbx]
  4253f2:	mov    rsi,QWORD PTR [rsp+0x8]
  4253f7:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  4253fc:	test   rax,rax
  4253ff:	je     4253c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  425401:	test   r12d,r12d
  425404:	lea    rcx,[rip+0x13b65]        # 438f70 <flatcc_builder_padding_base@@Base+0x23d0>
  42540b:	lea    r11,[rip+0x13a5e]        # 438e70 <flatcc_builder_padding_base@@Base+0x22d0>
  425412:	cmovne r11,rcx
  425416:	mov    rcx,QWORD PTR [rsp+0x8]
  42541b:	cmp    rcx,0x1
  42541f:	sbb    r10,r10
  425422:	or     r10,rcx
  425425:	mov    QWORD PTR [rsp+0x20],rax
  42542a:	mov    r9,rax
  42542d:	mov    rdi,QWORD PTR [rsp+0x18]
  425432:	mov    r8,r13
  425435:	mov    rsi,rdi
  425438:	xor    edx,edx
  42543a:	cmp    rsi,rdx
  42543d:	je     4254d1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x281>
  425443:	movzx  ecx,BYTE PTR [r8+rdx*1]
  425448:	movzx  ecx,BYTE PTR [r11+rcx*1]
  42544d:	mov    BYTE PTR [rsp+rdx*1+0x4],cl
  425451:	cmp    cl,0x40
  425454:	jb     42546b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  425456:	cmp    cl,0x41
  425459:	jne    42552b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2db>
  42545f:	add    r8,0x1
  425463:	add    rsi,0xffffffffffffffff
  425467:	add    rdx,0xffffffffffffffff
  42546b:	add    rdx,0x1
  42546f:	cmp    rdx,0x4
  425473:	jb     42543a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  425475:	cmp    r10,0x3
  425479:	jb     4255b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42547f:	mov    al,BYTE PTR [rsp+0x4]
  425483:	mov    cl,BYTE PTR [rsp+0x5]
  425487:	shl    al,0x2
  42548a:	mov    edx,ecx
  42548c:	shr    dl,0x4
  42548f:	or     dl,al
  425491:	mov    BYTE PTR [r9],dl
  425494:	shl    cl,0x4
  425497:	mov    al,BYTE PTR [rsp+0x6]
  42549b:	shr    al,0x2
  42549e:	or     al,cl
  4254a0:	mov    BYTE PTR [r9+0x1],al
  4254a4:	mov    al,BYTE PTR [rsp+0x6]
  4254a8:	shl    al,0x6
  4254ab:	or     al,BYTE PTR [rsp+0x7]
  4254af:	mov    BYTE PTR [r9+0x2],al
  4254b3:	add    r9,0x3
  4254b7:	add    r8,0x4
  4254bb:	add    rsi,0xfffffffffffffffc
  4254bf:	mov    rdi,rsi
  4254c2:	add    r10,0xfffffffffffffffd
  4254c6:	jne    425438 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
  4254cc:	jmp    4255a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x351>
  4254d1:	mov    QWORD PTR [rsp+0x10],rdi
  4254d6:	mov    rdx,rsi
  4254d9:	mov    rdi,rsi
  4254dc:	sub    rsi,rdi
  4254df:	test   rdx,rdx
  4254e2:	je     4255a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x351>
  4254e8:	cmp    rdx,0x3
  4254ec:	je     425564 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x314>
  4254ee:	cmp    rdx,0x2
  4254f2:	mov    rdi,QWORD PTR [rsp+0x10]
  4254f7:	jne    4255b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  4254fd:	mov    cl,BYTE PTR [rsp+0x5]
  425501:	test   cl,0xf
  425504:	jne    4255b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42550a:	mov    al,BYTE PTR [rsp+0x4]
  42550e:	shl    al,0x2
  425511:	shr    cl,0x4
  425514:	or     cl,al
  425516:	mov    BYTE PTR [r9],cl
  425519:	add    r9,0x1
  42551d:	test   rsi,rsi
  425520:	jne    4255a6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x356>
  425526:	jmp    4255c3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x373>
  42552b:	mov    QWORD PTR [rsp+0x10],rdi
  425530:	cmp    cl,0x42
  425533:	jne    425609 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b9>
  425539:	lea    rcx,[rdx+0x1]
  42553d:	mov    rdi,rcx
  425540:	cmp    rcx,rsi
  425543:	jae    4254dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  425545:	cmp    rdi,0x7
  425549:	ja     4254dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  42554b:	movzx  ecx,BYTE PTR [r8+rdi*1]
  425550:	movzx  eax,BYTE PTR [r11+rcx*1]
  425555:	add    al,0xbf
  425557:	lea    rcx,[rdi+0x1]
  42555b:	cmp    al,0x2
  42555d:	jb     42553d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ed>
  42555f:	jmp    4254dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  425564:	cmp    r10,0x2
  425568:	mov    rdi,QWORD PTR [rsp+0x10]
  42556d:	jb     4255b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42556f:	mov    cl,BYTE PTR [rsp+0x6]
  425573:	mov    eax,ecx
  425575:	and    al,0x3
  425577:	jne    4255b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  425579:	mov    dil,BYTE PTR [rsp+0x4]
  42557e:	mov    al,BYTE PTR [rsp+0x5]
  425582:	shl    dil,0x2
  425586:	mov    edx,eax
  425588:	shr    dl,0x4
  42558b:	or     dl,dil
  42558e:	mov    BYTE PTR [r9],dl
  425591:	shl    al,0x4
  425594:	shr    cl,0x2
  425597:	or     cl,al
  425599:	mov    BYTE PTR [r9+0x1],cl
  42559d:	add    r9,0x2
  4255a1:	test   rsi,rsi
  4255a4:	je     4255c3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x373>
  4255a6:	mov    rax,QWORD PTR [rsp+0x18]
  4255ab:	sub    rax,rsi
  4255ae:	jmp    4255b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x368>
  4255b0:	mov    rax,QWORD PTR [rsp+0x18]
  4255b5:	sub    rax,rdi
  4255b8:	add    r13,rax
  4255bb:	mov    rax,r13
  4255be:	jmp    4252fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  4255c3:	sub    r9,QWORD PTR [rsp+0x20]
  4255c8:	sub    QWORD PTR [rsp+0x8],r9
  4255cd:	jbe    4255e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
  4255cf:	mov    rdi,QWORD PTR [rbx]
  4255d2:	mov    rsi,QWORD PTR [rsp+0x8]
  4255d7:	call   41e500 <flatcc_builder_truncate_vector@@Base>
  4255dc:	test   eax,eax
  4255de:	jne    4253c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  4255e4:	mov    rdi,QWORD PTR [rbx]
  4255e7:	call   41f820 <flatcc_builder_end_vector@@Base>
  4255ec:	mov    DWORD PTR [r15],eax
  4255ef:	test   eax,eax
  4255f1:	je     4253c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  4255f7:	cmp    BYTE PTR [rbp+0x0],0x22
  4255fb:	jne    425611 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c1>
  4255fd:	add    rbp,0x1
  425601:	mov    r14,rbp
  425604:	jmp    42532b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  425609:	mov    rdi,rdx
  42560c:	jmp    4254dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  425611:	cmp    DWORD PTR [rbx+0x1c],0x0
  425615:	jne    42532b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  42561b:	mov    DWORD PTR [rbx+0x1c],0x14
  425622:	jmp    4253d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x189>
  425627:	nop    WORD PTR [rax+rax*1+0x0]

0000000000425630 <flatcc_json_parser_build_string@@Base>:
  425630:	push   rbp
  425631:	push   r15
  425633:	push   r14
  425635:	push   r13
  425637:	push   r12
  425639:	push   rbx
  42563a:	push   rax
  42563b:	mov    r15,rcx
  42563e:	mov    r12,rdx
  425641:	mov    r14,rdi
  425644:	cmp    rsi,rdx
  425647:	je     425690 <flatcc_json_parser_build_string@@Base+0x60>
  425649:	cmp    BYTE PTR [rsi],0x22
  42564c:	jne    425690 <flatcc_json_parser_build_string@@Base+0x60>
  42564e:	add    rsi,0x1
  425652:	mov    rbp,r12
  425655:	cmp    rsi,r12
  425658:	je     42569e <flatcc_json_parser_build_string@@Base+0x6e>
  42565a:	mov    rbx,rsi
  42565d:	nop    DWORD PTR [rax]
  425660:	movzx  eax,BYTE PTR [rbx]
  425663:	cmp    al,0x20
  425665:	jb     4257e0 <flatcc_json_parser_build_string@@Base+0x1b0>
  42566b:	cmp    al,0x22
  42566d:	je     425804 <flatcc_json_parser_build_string@@Base+0x1d4>
  425673:	cmp    al,0x5c
  425675:	je     425804 <flatcc_json_parser_build_string@@Base+0x1d4>
  42567b:	add    rbx,0x1
  42567f:	cmp    r12,rbx
  425682:	jne    425660 <flatcc_json_parser_build_string@@Base+0x30>
  425684:	mov    rbp,rsi
  425687:	cmp    DWORD PTR [r14+0x1c],0x0
  42568c:	jne    4256c1 <flatcc_json_parser_build_string@@Base+0x91>
  42568e:	jmp    4256a5 <flatcc_json_parser_build_string@@Base+0x75>
  425690:	cmp    DWORD PTR [r14+0x1c],0x0
  425695:	mov    rbp,r12
  425698:	je     4257b2 <flatcc_json_parser_build_string@@Base+0x182>
  42569e:	cmp    DWORD PTR [r14+0x1c],0x0
  4256a3:	jne    4256c1 <flatcc_json_parser_build_string@@Base+0x91>
  4256a5:	mov    DWORD PTR [r14+0x1c],0x14
  4256ad:	mov    eax,DWORD PTR [r14+0x8]
  4256b1:	mov    ecx,r12d
  4256b4:	sub    ecx,eax
  4256b6:	add    ecx,0x1
  4256b9:	mov    DWORD PTR [r14+0x18],ecx
  4256bd:	mov    QWORD PTR [r14+0x30],r12
  4256c1:	mov    rbx,r12
  4256c4:	mov    rdi,QWORD PTR [r14]
  4256c7:	call   41e990 <flatcc_builder_start_string@@Base>
  4256cc:	test   eax,eax
  4256ce:	je     4256ec <flatcc_json_parser_build_string@@Base+0xbc>
  4256d0:	mov    DWORD PTR [r15],0x0
  4256d7:	mov    r12,rbx
  4256da:	mov    rax,r12
  4256dd:	add    rsp,0x8
  4256e1:	pop    rbx
  4256e2:	pop    r12
  4256e4:	pop    r13
  4256e6:	pop    r14
  4256e8:	pop    r15
  4256ea:	pop    rbp
  4256eb:	ret    
  4256ec:	mov    rdi,QWORD PTR [r14]
  4256ef:	mov    rdx,rbx
  4256f2:	sub    rdx,rbp
  4256f5:	mov    rsi,rbp
  4256f8:	call   41e390 <flatcc_builder_append_string@@Base>
  4256fd:	test   rax,rax
  425700:	je     4256d0 <flatcc_json_parser_build_string@@Base+0xa0>
  425702:	mov    rbp,r12
  425705:	cmp    rbx,r12
  425708:	je     425878 <flatcc_json_parser_build_string@@Base+0x248>
  42570e:	lea    rbp,[rsp+0x4]
  425713:	cmp    BYTE PTR [rbx],0x22
  425716:	je     4258c4 <flatcc_json_parser_build_string@@Base+0x294>
  42571c:	mov    rdi,r14
  42571f:	mov    rsi,rbx
  425722:	mov    rdx,r12
  425725:	mov    rcx,rbp
  425728:	call   4237a0 <flatcc_json_parser_string_escape@@Base>
  42572d:	mov    r13,rax
  425730:	mov    rdi,QWORD PTR [r14]
  425733:	movsx  rdx,BYTE PTR [rsp+0x4]
  425739:	lea    rsi,[rsp+0x5]
  42573e:	call   41e390 <flatcc_builder_append_string@@Base>
  425743:	test   rax,rax
  425746:	je     4258c9 <flatcc_json_parser_build_string@@Base+0x299>
  42574c:	cmp    r13,r12
  42574f:	je     425828 <flatcc_json_parser_build_string@@Base+0x1f8>
  425755:	mov    rbx,r13
  425758:	nop    DWORD PTR [rax+rax*1+0x0]
  425760:	movzx  eax,BYTE PTR [rbx]
  425763:	cmp    al,0x20
  425765:	jb     425850 <flatcc_json_parser_build_string@@Base+0x220>
  42576b:	cmp    al,0x22
  42576d:	je     425781 <flatcc_json_parser_build_string@@Base+0x151>
  42576f:	cmp    al,0x5c
  425771:	je     425781 <flatcc_json_parser_build_string@@Base+0x151>
  425773:	add    rbx,0x1
  425777:	cmp    r12,rbx
  42577a:	jne    425760 <flatcc_json_parser_build_string@@Base+0x130>
  42577c:	jmp    425828 <flatcc_json_parser_build_string@@Base+0x1f8>
  425781:	cmp    r12,rbx
  425784:	je     425875 <flatcc_json_parser_build_string@@Base+0x245>
  42578a:	mov    rdi,QWORD PTR [r14]
  42578d:	mov    rdx,rbx
  425790:	sub    rdx,r13
  425793:	mov    rsi,r13
  425796:	call   41e390 <flatcc_builder_append_string@@Base>
  42579b:	test   rax,rax
  42579e:	je     4256d0 <flatcc_json_parser_build_string@@Base+0xa0>
  4257a4:	cmp    r12,rbx
  4257a7:	jne    425713 <flatcc_json_parser_build_string@@Base+0xe3>
  4257ad:	jmp    425875 <flatcc_json_parser_build_string@@Base+0x245>
  4257b2:	mov    DWORD PTR [r14+0x1c],0x10
  4257ba:	mov    eax,DWORD PTR [r14+0x8]
  4257be:	mov    ecx,esi
  4257c0:	sub    ecx,eax
  4257c2:	add    ecx,0x1
  4257c5:	mov    DWORD PTR [r14+0x18],ecx
  4257c9:	mov    QWORD PTR [r14+0x30],rsi
  4257cd:	mov    rbp,r12
  4257d0:	cmp    DWORD PTR [r14+0x1c],0x0
  4257d5:	jne    4256c1 <flatcc_json_parser_build_string@@Base+0x91>
  4257db:	jmp    4256a5 <flatcc_json_parser_build_string@@Base+0x75>
  4257e0:	cmp    DWORD PTR [r14+0x1c],0x0
  4257e5:	jne    42581d <flatcc_json_parser_build_string@@Base+0x1ed>
  4257e7:	mov    DWORD PTR [r14+0x1c],0x11
  4257ef:	mov    eax,DWORD PTR [r14+0x8]
  4257f3:	mov    ecx,ebx
  4257f5:	sub    ecx,eax
  4257f7:	add    ecx,0x1
  4257fa:	mov    DWORD PTR [r14+0x18],ecx
  4257fe:	mov    QWORD PTR [r14+0x30],rbx
  425802:	jmp    42581d <flatcc_json_parser_build_string@@Base+0x1ed>
  425804:	cmp    r12,rbx
  425807:	je     42581d <flatcc_json_parser_build_string@@Base+0x1ed>
  425809:	cmp    al,0x22
  42580b:	jne    425820 <flatcc_json_parser_build_string@@Base+0x1f0>
  42580d:	mov    rdi,QWORD PTR [r14]
  425810:	mov    rdx,rbx
  425813:	sub    rdx,rsi
  425816:	call   420c30 <flatcc_builder_create_string@@Base>
  42581b:	jmp    425883 <flatcc_json_parser_build_string@@Base+0x253>
  42581d:	mov    rbx,r12
  425820:	mov    rbp,rsi
  425823:	jmp    4256c4 <flatcc_json_parser_build_string@@Base+0x94>
  425828:	cmp    DWORD PTR [r14+0x1c],0x0
  42582d:	mov    rbp,r12
  425830:	jne    425878 <flatcc_json_parser_build_string@@Base+0x248>
  425832:	mov    DWORD PTR [r14+0x1c],0x14
  42583a:	mov    eax,DWORD PTR [r14+0x8]
  42583e:	mov    ecx,r12d
  425841:	sub    ecx,eax
  425843:	add    ecx,0x1
  425846:	mov    DWORD PTR [r14+0x18],ecx
  42584a:	mov    QWORD PTR [r14+0x30],r12
  42584e:	jmp    425875 <flatcc_json_parser_build_string@@Base+0x245>
  425850:	cmp    DWORD PTR [r14+0x1c],0x0
  425855:	mov    rbp,r12
  425858:	jne    425878 <flatcc_json_parser_build_string@@Base+0x248>
  42585a:	mov    DWORD PTR [r14+0x1c],0x11
  425862:	mov    eax,DWORD PTR [r14+0x8]
  425866:	mov    ecx,ebx
  425868:	sub    ecx,eax
  42586a:	add    ecx,0x1
  42586d:	mov    DWORD PTR [r14+0x18],ecx
  425871:	mov    QWORD PTR [r14+0x30],rbx
  425875:	mov    rbp,r12
  425878:	mov    rdi,QWORD PTR [r14]
  42587b:	call   420de0 <flatcc_builder_end_string@@Base>
  425880:	mov    rbx,rbp
  425883:	mov    DWORD PTR [r15],eax
  425886:	cmp    rbx,r12
  425889:	je     425899 <flatcc_json_parser_build_string@@Base+0x269>
  42588b:	cmp    BYTE PTR [rbx],0x22
  42588e:	jne    425899 <flatcc_json_parser_build_string@@Base+0x269>
  425890:	add    rbx,0x1
  425894:	jmp    4256d7 <flatcc_json_parser_build_string@@Base+0xa7>
  425899:	cmp    DWORD PTR [r14+0x1c],0x0
  42589e:	jne    4256da <flatcc_json_parser_build_string@@Base+0xaa>
  4258a4:	mov    DWORD PTR [r14+0x1c],0x14
  4258ac:	mov    eax,DWORD PTR [r14+0x8]
  4258b0:	mov    ecx,ebx
  4258b2:	sub    ecx,eax
  4258b4:	add    ecx,0x1
  4258b7:	mov    DWORD PTR [r14+0x18],ecx
  4258bb:	mov    QWORD PTR [r14+0x30],rbx
  4258bf:	jmp    4256da <flatcc_json_parser_build_string@@Base+0xaa>
  4258c4:	mov    rbp,rbx
  4258c7:	jmp    425878 <flatcc_json_parser_build_string@@Base+0x248>
  4258c9:	mov    rbx,r13
  4258cc:	jmp    4256d0 <flatcc_json_parser_build_string@@Base+0xa0>
  4258d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004258e0 <flatcc_json_parser_prepare_unions@@Base>:
  4258e0:	push   r15
  4258e2:	push   r14
  4258e4:	push   r13
  4258e6:	push   r12
  4258e8:	push   rbx
  4258e9:	mov    r13,r8
  4258ec:	mov    r12,rcx
  4258ef:	mov    r15,rdx
  4258f2:	mov    r14,rsi
  4258f5:	mov    rbx,rdi
  4258f8:	mov    rdi,QWORD PTR [rdi]
  4258fb:	lea    rax,[rcx+rcx*4]
  4258ff:	lea    rsi,[rax*8+0x10]
  425907:	call   41d050 <flatcc_builder_enter_user_frame@@Base>
  42590c:	mov    QWORD PTR [r13+0x0],rax
  425910:	test   rax,rax
  425913:	je     425928 <flatcc_json_parser_prepare_unions@@Base+0x48>
  425915:	mov    rdi,QWORD PTR [rbx]
  425918:	mov    rsi,rax
  42591b:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  425920:	mov    QWORD PTR [rax],r12
  425923:	mov    r15,r14
  425926:	jmp    425947 <flatcc_json_parser_prepare_unions@@Base+0x67>
  425928:	cmp    DWORD PTR [rbx+0x1c],0x0
  42592c:	jne    425947 <flatcc_json_parser_prepare_unions@@Base+0x67>
  42592e:	mov    DWORD PTR [rbx+0x1c],0x21
  425935:	mov    eax,DWORD PTR [rbx+0x8]
  425938:	mov    ecx,r14d
  42593b:	sub    ecx,eax
  42593d:	add    ecx,0x1
  425940:	mov    DWORD PTR [rbx+0x18],ecx
  425943:	mov    QWORD PTR [rbx+0x30],r14
  425947:	mov    rax,r15
  42594a:	pop    rbx
  42594b:	pop    r12
  42594d:	pop    r13
  42594f:	pop    r14
  425951:	pop    r15
  425953:	ret    
  425954:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42595e:	xchg   ax,ax

0000000000425960 <flatcc_json_parser_finalize_unions@@Base>:
  425960:	push   r15
  425962:	push   r14
  425964:	push   r12
  425966:	push   rbx
  425967:	push   rax
  425968:	mov    r15,rcx
  42596b:	mov    r14,rdx
  42596e:	mov    r12,rsi
  425971:	mov    rbx,rdi
  425974:	mov    rdi,QWORD PTR [rdi]
  425977:	mov    rsi,rcx
  42597a:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  42597f:	cmp    QWORD PTR [rax+0x8],0x0
  425984:	je     4259a7 <flatcc_json_parser_finalize_unions@@Base+0x47>
  425986:	cmp    DWORD PTR [rbx+0x1c],0x0
  42598a:	jne    4259aa <flatcc_json_parser_finalize_unions@@Base+0x4a>
  42598c:	mov    DWORD PTR [rbx+0x1c],0x1b
  425993:	mov    eax,DWORD PTR [rbx+0x8]
  425996:	mov    ecx,r12d
  425999:	sub    ecx,eax
  42599b:	add    ecx,0x1
  42599e:	mov    DWORD PTR [rbx+0x18],ecx
  4259a1:	mov    QWORD PTR [rbx+0x30],r12
  4259a5:	jmp    4259aa <flatcc_json_parser_finalize_unions@@Base+0x4a>
  4259a7:	mov    r14,r12
  4259aa:	mov    rdi,QWORD PTR [rbx]
  4259ad:	mov    rsi,r15
  4259b0:	call   41d150 <flatcc_builder_exit_user_frame_at@@Base>
  4259b5:	mov    rax,r14
  4259b8:	add    rsp,0x8
  4259bc:	pop    rbx
  4259bd:	pop    r12
  4259bf:	pop    r14
  4259c1:	pop    r15
  4259c3:	ret    
  4259c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4259ce:	xchg   ax,ax

00000000004259d0 <flatcc_json_parser_union@@Base>:
  4259d0:	push   rbp
  4259d1:	push   r15
  4259d3:	push   r14
  4259d5:	push   r12
  4259d7:	push   rbx
  4259d8:	sub    rsp,0x10
  4259dc:	mov    r12d,r8d
  4259df:	mov    rbp,rcx
  4259e2:	mov    r14,rdx
  4259e5:	mov    r15,rsi
  4259e8:	mov    rbx,rdi
  4259eb:	mov    rdi,QWORD PTR [rdi]
  4259ee:	mov    rsi,r9
  4259f1:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4259f6:	lea    rcx,[rbp*4+0x0]
  4259fe:	add    rcx,rbp
  425a01:	cmp    QWORD PTR [rax+rcx*8+0x10],0x0
  425a07:	je     425a31 <flatcc_json_parser_union@@Base+0x61>
  425a09:	cmp    DWORD PTR [rbx+0x1c],0x0
  425a0d:	jne    425ac0 <flatcc_json_parser_union@@Base+0xf0>
  425a13:	mov    DWORD PTR [rbx+0x1c],0x1c
  425a1a:	mov    eax,DWORD PTR [rbx+0x8]
  425a1d:	mov    ecx,r15d
  425a20:	sub    ecx,eax
  425a22:	add    ecx,0x1
  425a25:	mov    DWORD PTR [rbx+0x18],ecx
  425a28:	mov    QWORD PTR [rbx+0x30],r15
  425a2c:	jmp    425ac0 <flatcc_json_parser_union@@Base+0xf0>
  425a31:	lea    rdx,[rax+0x10]
  425a35:	cmp    BYTE PTR [rdx+rcx*8+0x14],0x0
  425a3a:	je     425a87 <flatcc_json_parser_union@@Base+0xb7>
  425a3c:	mov    cl,BYTE PTR [rdx+rcx*8+0x15]
  425a40:	mov    BYTE PTR [rsp+0x8],cl
  425a44:	test   cl,cl
  425a46:	je     425aba <flatcc_json_parser_union@@Base+0xea>
  425a48:	mov    rbp,QWORD PTR [rsp+0x40]
  425a4d:	add    QWORD PTR [rax+0x8],0xffffffffffffffff
  425a52:	lea    r8,[rsp+0xc]
  425a57:	movzx  ecx,cl
  425a5a:	mov    rdi,rbx
  425a5d:	mov    rsi,r15
  425a60:	mov    rdx,r14
  425a63:	call   rbp
  425a65:	cmp    rax,r14
  425a68:	je     425ac0 <flatcc_json_parser_union@@Base+0xf0>
  425a6a:	mov    r15,rax
  425a6d:	mov    rdi,QWORD PTR [rbx]
  425a70:	movzx  esi,r12w
  425a74:	mov    rdx,QWORD PTR [rsp+0x8]
  425a79:	call   41fc30 <flatcc_builder_table_add_union@@Base>
  425a7e:	test   eax,eax
  425a80:	jne    425a09 <flatcc_json_parser_union@@Base+0x39>
  425a82:	mov    r14,r15
  425a85:	jmp    425ac0 <flatcc_json_parser_union@@Base+0xf0>
  425a87:	add    QWORD PTR [rax+0x8],0x1
  425a8c:	lea    rax,[rax+rcx*8]
  425a90:	add    rax,0x10
  425a94:	mov    esi,DWORD PTR [rbx+0x14]
  425a97:	mov    DWORD PTR [rdx+rcx*8+0x10],esi
  425a9b:	mov    rsi,QWORD PTR [rbx+0x8]
  425a9f:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  425aa4:	mov    QWORD PTR [rax],r15
  425aa7:	mov    rdi,rbx
  425aaa:	mov    rsi,r15
  425aad:	mov    rdx,r14
  425ab0:	call   423cd0 <flatcc_json_parser_generic_json@@Base>
  425ab5:	mov    r14,rax
  425ab8:	jmp    425ac0 <flatcc_json_parser_union@@Base+0xf0>
  425aba:	cmp    DWORD PTR [rbx+0x1c],0x0
  425abe:	je     425ad0 <flatcc_json_parser_union@@Base+0x100>
  425ac0:	mov    rax,r14
  425ac3:	add    rsp,0x10
  425ac7:	pop    rbx
  425ac8:	pop    r12
  425aca:	pop    r14
  425acc:	pop    r15
  425ace:	pop    rbp
  425acf:	ret    
  425ad0:	mov    DWORD PTR [rbx+0x1c],0x19
  425ad7:	jmp    425a1a <flatcc_json_parser_union@@Base+0x4a>
  425adc:	nop    DWORD PTR [rax+0x0]

0000000000425ae0 <flatcc_json_parser_union_type@@Base>:
  425ae0:	push   rbp
  425ae1:	push   r15
  425ae3:	push   r14
  425ae5:	push   r13
  425ae7:	push   r12
  425ae9:	push   rbx
  425aea:	sub    rsp,0x18
  425aee:	mov    ebx,r8d
  425af1:	mov    rbp,rcx
  425af4:	mov    r14,rdx
  425af7:	mov    r12,rsi
  425afa:	mov    r15,rdi
  425afd:	mov    rdi,QWORD PTR [rdi]
  425b00:	mov    rsi,r9
  425b03:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  425b08:	lea    r13,[rbp*4+0x0]
  425b10:	add    r13,rbp
  425b13:	cmp    BYTE PTR [rax+r13*8+0x24],0x0
  425b19:	je     425b47 <flatcc_json_parser_union_type@@Base+0x67>
  425b1b:	cmp    DWORD PTR [r15+0x1c],0x0
  425b20:	jne    425d76 <flatcc_json_parser_union_type@@Base+0x296>
  425b26:	mov    DWORD PTR [r15+0x1c],0x1c
  425b2e:	mov    eax,DWORD PTR [r15+0x8]
  425b32:	mov    ecx,r12d
  425b35:	sub    ecx,eax
  425b37:	add    ecx,0x1
  425b3a:	mov    DWORD PTR [r15+0x18],ecx
  425b3e:	mov    QWORD PTR [r15+0x30],r12
  425b42:	jmp    425d76 <flatcc_json_parser_union_type@@Base+0x296>
  425b47:	mov    r11,rax
  425b4a:	mov    DWORD PTR [rsp+0xc],ebx
  425b4e:	lea    r10,[rax+0x10]
  425b52:	lea    rax,[rax+r13*8]
  425b56:	add    rax,0x24
  425b5a:	mov    BYTE PTR [rax],0x1
  425b5d:	lea    r8,[r10+r13*8]
  425b61:	add    r8,0x15
  425b65:	mov    BYTE PTR [r10+r13*8+0x15],0x0
  425b6b:	cmp    r12,r14
  425b6e:	je     425ca2 <flatcc_json_parser_union_type@@Base+0x1c2>
  425b74:	mov    r9b,BYTE PTR [r12]
  425b78:	xor    eax,eax
  425b7a:	cmp    r9b,0x2d
  425b7e:	sete   al
  425b81:	add    rax,r12
  425b84:	xor    edx,edx
  425b86:	cmp    rax,r14
  425b89:	je     425bcd <flatcc_json_parser_union_type@@Base+0xed>
  425b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  425b90:	movsx  rdi,BYTE PTR [rax]
  425b94:	mov    ecx,edi
  425b96:	add    cl,0xd0
  425b99:	cmp    cl,0x9
  425b9c:	ja     425c0d <flatcc_json_parser_union_type@@Base+0x12d>
  425b9e:	lea    rcx,[rdx+rdx*4]
  425ba2:	lea    rdi,[rdi+rcx*2]
  425ba6:	add    rdi,0xffffffffffffffd0
  425baa:	cmp    rdx,rdi
  425bad:	ja     425c19 <flatcc_json_parser_union_type@@Base+0x139>
  425baf:	add    rax,0x1
  425bb3:	mov    rdx,rdi
  425bb6:	cmp    r14,rax
  425bb9:	jne    425b90 <flatcc_json_parser_union_type@@Base+0xb0>
  425bbb:	xor    ecx,ecx
  425bbd:	mov    rax,r14
  425bc0:	mov    rdx,rdi
  425bc3:	cmp    rax,r12
  425bc6:	jne    425bdb <flatcc_json_parser_union_type@@Base+0xfb>
  425bc8:	jmp    425ca2 <flatcc_json_parser_union_type@@Base+0x1c2>
  425bcd:	mov    rax,r14
  425bd0:	xor    ecx,ecx
  425bd2:	cmp    rax,r12
  425bd5:	je     425ca2 <flatcc_json_parser_union_type@@Base+0x1c2>
  425bdb:	test   cl,cl
  425bdd:	je     425c40 <flatcc_json_parser_union_type@@Base+0x160>
  425bdf:	mov    cl,BYTE PTR [rax]
  425be1:	add    cl,0xd2
  425be4:	cmp    cl,0x37
  425be7:	ja     425c40 <flatcc_json_parser_union_type@@Base+0x160>
  425be9:	movzx  ecx,cl
  425bec:	movabs rdi,0x80000000800001
  425bf6:	bt     rdi,rcx
  425bfa:	jae    425c40 <flatcc_json_parser_union_type@@Base+0x160>
  425bfc:	cmp    DWORD PTR [r15+0x1c],0x0
  425c01:	jne    425c3b <flatcc_json_parser_union_type@@Base+0x15b>
  425c03:	mov    DWORD PTR [r15+0x1c],0xc
  425c0b:	jmp    425c28 <flatcc_json_parser_union_type@@Base+0x148>
  425c0d:	mov    cl,0x1
  425c0f:	cmp    rax,r12
  425c12:	jne    425bdb <flatcc_json_parser_union_type@@Base+0xfb>
  425c14:	jmp    425ca2 <flatcc_json_parser_union_type@@Base+0x1c2>
  425c19:	cmp    DWORD PTR [r15+0x1c],0x0
  425c1e:	jne    425c3b <flatcc_json_parser_union_type@@Base+0x15b>
  425c20:	mov    DWORD PTR [r15+0x1c],0x8
  425c28:	mov    ecx,DWORD PTR [r15+0x8]
  425c2c:	mov    edx,eax
  425c2e:	sub    edx,ecx
  425c30:	add    edx,0x1
  425c33:	mov    DWORD PTR [r15+0x18],edx
  425c37:	mov    QWORD PTR [r15+0x30],rax
  425c3b:	xor    edx,edx
  425c3d:	mov    rax,r14
  425c40:	cmp    rax,r12
  425c43:	je     425ca2 <flatcc_json_parser_union_type@@Base+0x1c2>
  425c45:	cmp    r9b,0x2d
  425c49:	jne    425c5f <flatcc_json_parser_union_type@@Base+0x17f>
  425c4b:	cmp    DWORD PTR [r15+0x1c],0x0
  425c50:	mov    rbp,r14
  425c53:	jne    425c9d <flatcc_json_parser_union_type@@Base+0x1bd>
  425c55:	mov    DWORD PTR [r15+0x1c],0x8
  425c5d:	jmp    425c7a <flatcc_json_parser_union_type@@Base+0x19a>
  425c5f:	cmp    rdx,0x100
  425c66:	jb     425c97 <flatcc_json_parser_union_type@@Base+0x1b7>
  425c68:	cmp    DWORD PTR [r15+0x1c],0x0
  425c6d:	mov    rbp,r14
  425c70:	jne    425c9d <flatcc_json_parser_union_type@@Base+0x1bd>
  425c72:	mov    DWORD PTR [r15+0x1c],0x7
  425c7a:	mov    ecx,DWORD PTR [r15+0x8]
  425c7e:	mov    edx,eax
  425c80:	sub    edx,ecx
  425c82:	add    edx,0x1
  425c85:	mov    DWORD PTR [r15+0x18],edx
  425c89:	mov    QWORD PTR [r15+0x30],rax
  425c8d:	mov    rbp,r14
  425c90:	cmp    rbp,r12
  425c93:	jne    425cca <flatcc_json_parser_union_type@@Base+0x1ea>
  425c95:	jmp    425ca2 <flatcc_json_parser_union_type@@Base+0x1c2>
  425c97:	mov    BYTE PTR [r8],dl
  425c9a:	mov    rbp,rax
  425c9d:	cmp    rbp,r12
  425ca0:	jne    425cca <flatcc_json_parser_union_type@@Base+0x1ea>
  425ca2:	mov    rcx,QWORD PTR [rsp+0x50]
  425ca7:	mov    rdi,r15
  425caa:	mov    rsi,r12
  425cad:	mov    rdx,r14
  425cb0:	mov    rbx,r8
  425cb3:	mov    rbp,r10
  425cb6:	mov    r12,r11
  425cb9:	call   425db0 <flatcc_json_parser_union_type@@Base+0x2d0>
  425cbe:	mov    r11,r12
  425cc1:	mov    r10,rbp
  425cc4:	mov    r8,rbx
  425cc7:	mov    rbp,rax
  425cca:	mov    rsi,QWORD PTR [r10+r13*8]
  425cce:	test   rsi,rsi
  425cd1:	je     425d60 <flatcc_json_parser_union_type@@Base+0x280>
  425cd7:	mov    rax,QWORD PTR [r11+0x8]
  425cdb:	test   rax,rax
  425cde:	je     425d88 <flatcc_json_parser_union_type@@Base+0x2a8>
  425ce4:	mov    r9,QWORD PTR [rsp+0x58]
  425ce9:	add    rax,0xffffffffffffffff
  425ced:	mov    QWORD PTR [r11+0x8],rax
  425cf1:	mov    r12d,DWORD PTR [r15+0x14]
  425cf5:	mov    rbx,QWORD PTR [r15+0x8]
  425cf9:	mov    eax,DWORD PTR [r10+r13*8+0x10]
  425cfe:	mov    DWORD PTR [r15+0x14],eax
  425d02:	mov    rax,QWORD PTR [r10+r13*8+0x8]
  425d07:	mov    QWORD PTR [r15+0x8],rax
  425d0b:	movzx  ecx,BYTE PTR [r8]
  425d0f:	mov    BYTE PTR [rsp+0x10],cl
  425d13:	lea    r8,[rsp+0x14]
  425d18:	mov    rdi,r15
  425d1b:	mov    rdx,r14
  425d1e:	call   r9
  425d21:	cmp    rax,r14
  425d24:	je     425d76 <flatcc_json_parser_union_type@@Base+0x296>
  425d26:	mov    rdi,QWORD PTR [r15]
  425d29:	movzx  esi,WORD PTR [rsp+0xc]
  425d2e:	mov    rdx,QWORD PTR [rsp+0x10]
  425d33:	call   41fc30 <flatcc_builder_table_add_union@@Base>
  425d38:	test   eax,eax
  425d3a:	je     425d6b <flatcc_json_parser_union_type@@Base+0x28b>
  425d3c:	cmp    DWORD PTR [r15+0x1c],0x0
  425d41:	jne    425d76 <flatcc_json_parser_union_type@@Base+0x296>
  425d43:	mov    DWORD PTR [r15+0x1c],0x1c
  425d4b:	mov    eax,DWORD PTR [r15+0x8]
  425d4f:	mov    ecx,ebp
  425d51:	sub    ecx,eax
  425d53:	add    ecx,0x1
  425d56:	mov    DWORD PTR [r15+0x18],ecx
  425d5a:	mov    QWORD PTR [r15+0x30],rbp
  425d5e:	jmp    425d76 <flatcc_json_parser_union_type@@Base+0x296>
  425d60:	cmp    BYTE PTR [r8],0x1
  425d64:	sbb    QWORD PTR [r11+0x8],0xffffffffffffffff
  425d69:	jmp    425d73 <flatcc_json_parser_union_type@@Base+0x293>
  425d6b:	mov    DWORD PTR [r15+0x14],r12d
  425d6f:	mov    QWORD PTR [r15+0x8],rbx
  425d73:	mov    r14,rbp
  425d76:	mov    rax,r14
  425d79:	add    rsp,0x18
  425d7d:	pop    rbx
  425d7e:	pop    r12
  425d80:	pop    r13
  425d82:	pop    r14
  425d84:	pop    r15
  425d86:	pop    rbp
  425d87:	ret    
  425d88:	lea    rdi,[rip+0x136db]        # 43946a <flatcc_builder_padding_base@@Base+0x28ca>
  425d8f:	lea    rsi,[rip+0x136e3]        # 439479 <flatcc_builder_padding_base@@Base+0x28d9>
  425d96:	lea    rcx,[rip+0x13740]        # 4394dd <flatcc_builder_padding_base@@Base+0x293d>
  425d9d:	mov    edx,0x3c5
  425da2:	call   406070 <__assert_fail@plt>
  425da7:	nop    WORD PTR [rax+rax*1+0x0]
  425db0:	push   rbp
  425db1:	push   r15
  425db3:	push   r14
  425db5:	push   r13
  425db7:	push   r12
  425db9:	push   rbx
  425dba:	sub    rsp,0x28
  425dbe:	mov    rbx,r8
  425dc1:	mov    rbp,rcx
  425dc4:	mov    r13,rdx
  425dc7:	mov    r14,rdi
  425dca:	mov    BYTE PTR [r8],0x0
  425dce:	cmp    rsi,rdx
  425dd1:	je     425ddc <flatcc_json_parser_union_type@@Base+0x2fc>
  425dd3:	cmp    BYTE PTR [rsi],0x22
  425dd6:	jne    425de1 <flatcc_json_parser_union_type@@Base+0x301>
  425dd8:	add    rsi,0x1
  425ddc:	mov    r15,rsi
  425ddf:	jmp    425e09 <flatcc_json_parser_union_type@@Base+0x329>
  425de1:	cmp    DWORD PTR [r14+0x1c],0x0
  425de6:	mov    r15,r13
  425de9:	jne    425e09 <flatcc_json_parser_union_type@@Base+0x329>
  425deb:	mov    DWORD PTR [r14+0x1c],0x5
  425df3:	mov    eax,DWORD PTR [r14+0x8]
  425df7:	mov    ecx,esi
  425df9:	sub    ecx,eax
  425dfb:	add    ecx,0x1
  425dfe:	mov    DWORD PTR [r14+0x18],ecx
  425e02:	mov    QWORD PTR [r14+0x30],rsi
  425e06:	mov    r15,r13
  425e09:	mov    rax,r13
  425e0c:	sub    rax,r15
  425e0f:	cmp    rax,0x2
  425e13:	jl     425e32 <flatcc_json_parser_union_type@@Base+0x352>
  425e15:	cmp    BYTE PTR [r15],0x20
  425e19:	jg     425e43 <flatcc_json_parser_union_type@@Base+0x363>
  425e1b:	jne    425e32 <flatcc_json_parser_union_type@@Base+0x352>
  425e1d:	cmp    BYTE PTR [r15+0x1],0x20
  425e22:	jle    425e32 <flatcc_json_parser_union_type@@Base+0x352>
  425e24:	add    r15,0x1
  425e28:	cmp    r15,r13
  425e2b:	jne    425e4c <flatcc_json_parser_union_type@@Base+0x36c>
  425e2d:	jmp    425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425e32:	mov    rdi,r14
  425e35:	mov    rsi,r15
  425e38:	mov    rdx,r13
  425e3b:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  425e40:	mov    r15,rax
  425e43:	cmp    r15,r13
  425e46:	je     425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425e4c:	lea    rcx,[rbp+0x8]
  425e50:	mov    r12,rsp
  425e53:	mov    QWORD PTR [rsp+0x18],rbx
  425e58:	mov    QWORD PTR [rsp+0x10],rbp
  425e5d:	mov    QWORD PTR [rsp+0x8],rcx
  425e62:	mov    rbx,QWORD PTR [rbp+0x0]
  425e66:	mov    rbp,rcx
  425e69:	nop    DWORD PTR [rax+0x0]
  425e70:	mov    rdi,r14
  425e73:	mov    rsi,r15
  425e76:	mov    rdx,r13
  425e79:	lea    rcx,[rsp+0x4]
  425e7e:	lea    r8,[rsp+0x20]
  425e83:	mov    r9,r12
  425e86:	call   rbx
  425e88:	cmp    rax,r13
  425e8b:	je     425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425e8d:	cmp    rax,r15
  425e90:	jne    425eb0 <flatcc_json_parser_union_type@@Base+0x3d0>
  425e92:	mov    rbx,QWORD PTR [rbp+0x0]
  425e96:	add    rbp,0x8
  425e9a:	test   rbx,rbx
  425e9d:	jne    425e70 <flatcc_json_parser_union_type@@Base+0x390>
  425e9f:	jmp    425ee5 <flatcc_json_parser_union_type@@Base+0x405>
  425ea1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425eab:	nop    DWORD PTR [rax+rax*1+0x0]
  425eb0:	cmp    DWORD PTR [rsp+0x4],0x0
  425eb5:	jne    425f1a <flatcc_json_parser_union_type@@Base+0x43a>
  425eb7:	mov    rcx,QWORD PTR [rsp+0x20]
  425ebc:	cmp    rcx,0x100
  425ec3:	jae    425f2b <flatcc_json_parser_union_type@@Base+0x44b>
  425ec5:	mov    r15,rax
  425ec8:	mov    rbx,QWORD PTR [rsp+0x18]
  425ecd:	add    BYTE PTR [rbx],cl
  425ecf:	cmp    DWORD PTR [rsp],0x0
  425ed3:	mov    rbp,QWORD PTR [rsp+0x10]
  425ed8:	mov    rcx,QWORD PTR [rsp+0x8]
  425edd:	jne    425e62 <flatcc_json_parser_union_type@@Base+0x382>
  425ee3:	jmp    425f0b <flatcc_json_parser_union_type@@Base+0x42b>
  425ee5:	cmp    DWORD PTR [r14+0x1c],0x0
  425eea:	jne    425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425eec:	mov    DWORD PTR [r14+0x1c],0x17
  425ef4:	mov    eax,DWORD PTR [r14+0x8]
  425ef8:	mov    ecx,r15d
  425efb:	sub    ecx,eax
  425efd:	add    ecx,0x1
  425f00:	mov    DWORD PTR [r14+0x18],ecx
  425f04:	mov    QWORD PTR [r14+0x30],r15
  425f08:	mov    rax,r13
  425f0b:	add    rsp,0x28
  425f0f:	pop    rbx
  425f10:	pop    r12
  425f12:	pop    r13
  425f14:	pop    r14
  425f16:	pop    r15
  425f18:	pop    rbp
  425f19:	ret    
  425f1a:	cmp    DWORD PTR [r14+0x1c],0x0
  425f1f:	jne    425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425f21:	mov    DWORD PTR [r14+0x1c],0x8
  425f29:	jmp    425f3a <flatcc_json_parser_union_type@@Base+0x45a>
  425f2b:	cmp    DWORD PTR [r14+0x1c],0x0
  425f30:	jne    425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425f32:	mov    DWORD PTR [r14+0x1c],0x7
  425f3a:	mov    ecx,DWORD PTR [r14+0x8]
  425f3e:	mov    edx,eax
  425f40:	sub    edx,ecx
  425f42:	add    edx,0x1
  425f45:	mov    DWORD PTR [r14+0x18],edx
  425f49:	mov    QWORD PTR [r14+0x30],rax
  425f4d:	jmp    425f08 <flatcc_json_parser_union_type@@Base+0x428>
  425f4f:	nop

0000000000425f50 <flatcc_json_parser_union_vector@@Base>:
  425f50:	push   rbp
  425f51:	push   r15
  425f53:	push   r14
  425f55:	push   r12
  425f57:	push   rbx
  425f58:	mov    r12d,r8d
  425f5b:	mov    rbp,rcx
  425f5e:	mov    r14,rdx
  425f61:	mov    r15,rsi
  425f64:	mov    rbx,rdi
  425f67:	mov    rdi,QWORD PTR [rdi]
  425f6a:	mov    rsi,r9
  425f6d:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  425f72:	lea    rdx,[rbp*4+0x0]
  425f7a:	add    rdx,rbp
  425f7d:	cmp    QWORD PTR [rax+rdx*8+0x10],0x0
  425f83:	je     425fb0 <flatcc_json_parser_union_vector@@Base+0x60>
  425f85:	cmp    DWORD PTR [rbx+0x1c],0x0
  425f89:	jne    425fa4 <flatcc_json_parser_union_vector@@Base+0x54>
  425f8b:	mov    DWORD PTR [rbx+0x1c],0x1c
  425f92:	mov    eax,DWORD PTR [rbx+0x8]
  425f95:	mov    ecx,r15d
  425f98:	sub    ecx,eax
  425f9a:	add    ecx,0x1
  425f9d:	mov    DWORD PTR [rbx+0x18],ecx
  425fa0:	mov    QWORD PTR [rbx+0x30],r15
  425fa4:	mov    rax,r14
  425fa7:	pop    rbx
  425fa8:	pop    r12
  425faa:	pop    r14
  425fac:	pop    r15
  425fae:	pop    rbp
  425faf:	ret    
  425fb0:	lea    rsi,[rax+0x10]
  425fb4:	cmp    BYTE PTR [rsi+rdx*8+0x14],0x0
  425fb9:	mov    rcx,QWORD PTR [rax+0x8]
  425fbd:	je     425fe8 <flatcc_json_parser_union_vector@@Base+0x98>
  425fbf:	add    rcx,0xffffffffffffffff
  425fc3:	mov    QWORD PTR [rax+0x8],rcx
  425fc7:	mov    rcx,QWORD PTR [rsi+rdx*8+0x20]
  425fcc:	mov    r8d,DWORD PTR [rsi+rdx*8+0x18]
  425fd1:	movzx  r9d,r12w
  425fd5:	mov    rdi,rbx
  425fd8:	mov    rsi,r15
  425fdb:	mov    rdx,r14
  425fde:	pop    rbx
  425fdf:	pop    r12
  425fe1:	pop    r14
  425fe3:	pop    r15
  425fe5:	pop    rbp
  425fe6:	jmp    426030 <flatcc_json_parser_union_vector@@Base+0xe0>
  425fe8:	lea    rdi,[rax+rdx*8]
  425fec:	add    rdi,0x10
  425ff0:	add    rcx,0x1
  425ff4:	mov    QWORD PTR [rax+0x8],rcx
  425ff8:	mov    eax,DWORD PTR [rbx+0x14]
  425ffb:	mov    DWORD PTR [rsi+rdx*8+0x10],eax
  425fff:	mov    rax,QWORD PTR [rbx+0x8]
  426003:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  426008:	mov    QWORD PTR [rdi],r15
  42600b:	mov    rdi,rbx
  42600e:	mov    rsi,r15
  426011:	mov    rdx,r14
  426014:	pop    rbx
  426015:	pop    r12
  426017:	pop    r14
  426019:	pop    r15
  42601b:	pop    rbp
  42601c:	jmp    423cd0 <flatcc_json_parser_generic_json@@Base>
  426021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42602b:	nop    DWORD PTR [rax+rax*1+0x0]
  426030:	push   rbp
  426031:	push   r15
  426033:	push   r14
  426035:	push   r13
  426037:	push   r12
  426039:	push   rbx
  42603a:	sub    rsp,0x18
  42603e:	mov    r15d,r9d
  426041:	mov    r13d,r8d
  426044:	mov    r12,rcx
  426047:	mov    r14,rdx
  42604a:	mov    rbp,rsi
  42604d:	mov    rbx,rdi
  426050:	mov    DWORD PTR [rsp+0xc],0x0
  426058:	mov    rdi,QWORD PTR [rdi]
  42605b:	call   41e710 <flatcc_builder_start_offset_vector@@Base>
  426060:	test   eax,eax
  426062:	je     42607a <flatcc_json_parser_union_vector@@Base+0x12a>
  426064:	cmp    DWORD PTR [rbx+0x1c],0x0
  426068:	jne    4262ab <flatcc_json_parser_union_vector@@Base+0x35b>
  42606e:	mov    DWORD PTR [rbx+0x1c],0x21
  426075:	jmp    42629a <flatcc_json_parser_union_vector@@Base+0x34a>
  42607a:	cmp    rbp,r14
  42607d:	je     4260b0 <flatcc_json_parser_union_vector@@Base+0x160>
  42607f:	cmp    BYTE PTR [rbp+0x0],0x5b
  426083:	jne    4260b0 <flatcc_json_parser_union_vector@@Base+0x160>
  426085:	lea    rax,[rbp+0x1]
  426089:	mov    rcx,r14
  42608c:	sub    rcx,rax
  42608f:	cmp    rcx,0x2
  426093:	mov    DWORD PTR [rsp+0x8],r15d
  426098:	jl     4260dd <flatcc_json_parser_union_vector@@Base+0x18d>
  42609a:	cmp    BYTE PTR [rax],0x20
  42609d:	jg     4260eb <flatcc_json_parser_union_vector@@Base+0x19b>
  42609f:	jne    4260dd <flatcc_json_parser_union_vector@@Base+0x18d>
  4260a1:	cmp    BYTE PTR [rbp+0x2],0x20
  4260a5:	jle    4260dd <flatcc_json_parser_union_vector@@Base+0x18d>
  4260a7:	add    rbp,0x2
  4260ab:	mov    rax,rbp
  4260ae:	jmp    4260eb <flatcc_json_parser_union_vector@@Base+0x19b>
  4260b0:	cmp    DWORD PTR [rbx+0x1c],0x0
  4260b4:	mov    rcx,r14
  4260b7:	jne    426281 <flatcc_json_parser_union_vector@@Base+0x331>
  4260bd:	mov    DWORD PTR [rbx+0x1c],0x16
  4260c4:	mov    eax,DWORD PTR [rbx+0x8]
  4260c7:	mov    ecx,ebp
  4260c9:	sub    ecx,eax
  4260cb:	add    ecx,0x1
  4260ce:	mov    DWORD PTR [rbx+0x18],ecx
  4260d1:	mov    QWORD PTR [rbx+0x30],rbp
  4260d5:	mov    rcx,r14
  4260d8:	jmp    426281 <flatcc_json_parser_union_vector@@Base+0x331>
  4260dd:	mov    rdi,rbx
  4260e0:	mov    rsi,rax
  4260e3:	mov    rdx,r14
  4260e6:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4260eb:	mov    r15,r14
  4260ee:	cmp    rax,r14
  4260f1:	je     426136 <flatcc_json_parser_union_vector@@Base+0x1e6>
  4260f3:	cmp    BYTE PTR [rax],0x5d
  4260f6:	jne    426133 <flatcc_json_parser_union_vector@@Base+0x1e3>
  4260f8:	lea    rcx,[rax+0x1]
  4260fc:	mov    rdx,r14
  4260ff:	sub    rdx,rcx
  426102:	cmp    rdx,0x2
  426106:	mov    r15d,DWORD PTR [rsp+0x8]
  42610b:	jl     426270 <flatcc_json_parser_union_vector@@Base+0x320>
  426111:	cmp    BYTE PTR [rcx],0x20
  426114:	jg     426281 <flatcc_json_parser_union_vector@@Base+0x331>
  42611a:	jne    426270 <flatcc_json_parser_union_vector@@Base+0x320>
  426120:	cmp    BYTE PTR [rax+0x2],0x20
  426124:	jle    426270 <flatcc_json_parser_union_vector@@Base+0x320>
  42612a:	add    rax,0x2
  42612e:	jmp    42627e <flatcc_json_parser_union_vector@@Base+0x32e>
  426133:	mov    r15,rax
  426136:	test   r13d,r13d
  426139:	je     42624f <flatcc_json_parser_union_vector@@Base+0x2ff>
  42613f:	mov    eax,r13d
  426142:	mov    QWORD PTR [rsp+0x10],rax
  426147:	xor    r13d,r13d
  42614a:	nop    WORD PTR [rax+rax*1+0x0]
  426150:	mov    rdi,QWORD PTR [rbx]
  426153:	mov    rsi,r12
  426156:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  42615b:	movzx  ecx,BYTE PTR [rax+r13*1]
  426160:	mov    rdi,rbx
  426163:	mov    rsi,r15
  426166:	mov    rdx,r14
  426169:	lea    r8,[rsp+0xc]
  42616e:	call   QWORD PTR [rsp+0x50]
  426172:	cmp    rax,r14
  426175:	je     4262ab <flatcc_json_parser_union_vector@@Base+0x35b>
  42617b:	mov    rbp,rax
  42617e:	mov    rdi,QWORD PTR [rbx]
  426181:	mov    esi,0x1
  426186:	call   41e010 <flatcc_builder_extend_offset_vector@@Base>
  42618b:	test   rax,rax
  42618e:	je     426064 <flatcc_json_parser_union_vector@@Base+0x114>
  426194:	mov    ecx,DWORD PTR [rsp+0xc]
  426198:	mov    DWORD PTR [rax],ecx
  42619a:	mov    rax,r14
  42619d:	sub    rax,rbp
  4261a0:	cmp    rax,0x2
  4261a4:	mov    r15d,DWORD PTR [rsp+0x8]
  4261a9:	jl     4261c7 <flatcc_json_parser_union_vector@@Base+0x277>
  4261ab:	cmp    BYTE PTR [rbp+0x0],0x20
  4261af:	jg     4261d8 <flatcc_json_parser_union_vector@@Base+0x288>
  4261b1:	jne    4261c7 <flatcc_json_parser_union_vector@@Base+0x277>
  4261b3:	cmp    BYTE PTR [rbp+0x1],0x20
  4261b7:	jle    4261c7 <flatcc_json_parser_union_vector@@Base+0x277>
  4261b9:	add    rbp,0x1
  4261bd:	cmp    rbp,r14
  4261c0:	jne    4261e1 <flatcc_json_parser_union_vector@@Base+0x291>
  4261c2:	jmp    4262bd <flatcc_json_parser_union_vector@@Base+0x36d>
  4261c7:	mov    rdi,rbx
  4261ca:	mov    rsi,rbp
  4261cd:	mov    rdx,r14
  4261d0:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4261d5:	mov    rbp,rax
  4261d8:	cmp    rbp,r14
  4261db:	je     4262bd <flatcc_json_parser_union_vector@@Base+0x36d>
  4261e1:	movzx  eax,BYTE PTR [rbp+0x0]
  4261e5:	cmp    al,0x2c
  4261e7:	jne    4262c5 <flatcc_json_parser_union_vector@@Base+0x375>
  4261ed:	lea    r15,[rbp+0x1]
  4261f1:	mov    rax,r14
  4261f4:	sub    rax,r15
  4261f7:	cmp    rax,0x2
  4261fb:	jl     42621c <flatcc_json_parser_union_vector@@Base+0x2cc>
  4261fd:	cmp    BYTE PTR [r15],0x20
  426201:	jg     42622d <flatcc_json_parser_union_vector@@Base+0x2dd>
  426203:	jne    42621c <flatcc_json_parser_union_vector@@Base+0x2cc>
  426205:	cmp    BYTE PTR [rbp+0x2],0x20
  426209:	jle    42621c <flatcc_json_parser_union_vector@@Base+0x2cc>
  42620b:	add    rbp,0x2
  42620f:	mov    r15,rbp
  426212:	cmp    r15,r14
  426215:	jne    426236 <flatcc_json_parser_union_vector@@Base+0x2e6>
  426217:	jmp    426306 <flatcc_json_parser_union_vector@@Base+0x3b6>
  42621c:	mov    rdi,rbx
  42621f:	mov    rsi,r15
  426222:	mov    rdx,r14
  426225:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42622a:	mov    r15,rax
  42622d:	cmp    r15,r14
  426230:	je     426306 <flatcc_json_parser_union_vector@@Base+0x3b6>
  426236:	cmp    BYTE PTR [r15],0x5d
  42623a:	je     426336 <flatcc_json_parser_union_vector@@Base+0x3e6>
  426240:	add    r13,0x1
  426244:	cmp    QWORD PTR [rsp+0x10],r13
  426249:	jne    426150 <flatcc_json_parser_union_vector@@Base+0x200>
  42624f:	cmp    DWORD PTR [rbx+0x1c],0x0
  426253:	jne    4262ab <flatcc_json_parser_union_vector@@Base+0x35b>
  426255:	mov    DWORD PTR [rbx+0x1c],0x1e
  42625c:	mov    eax,DWORD PTR [rbx+0x8]
  42625f:	mov    ecx,r15d
  426262:	sub    ecx,eax
  426264:	add    ecx,0x1
  426267:	mov    DWORD PTR [rbx+0x18],ecx
  42626a:	mov    QWORD PTR [rbx+0x30],r15
  42626e:	jmp    4262ab <flatcc_json_parser_union_vector@@Base+0x35b>
  426270:	mov    rdi,rbx
  426273:	mov    rsi,rcx
  426276:	mov    rdx,r14
  426279:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42627e:	mov    rcx,rax
  426281:	mov    rbp,rcx
  426284:	test   r13d,r13d
  426287:	je     4263bb <flatcc_json_parser_union_vector@@Base+0x46b>
  42628d:	cmp    DWORD PTR [rbx+0x1c],0x0
  426291:	jne    4262ab <flatcc_json_parser_union_vector@@Base+0x35b>
  426293:	mov    DWORD PTR [rbx+0x1c],0x1e
  42629a:	mov    eax,DWORD PTR [rbx+0x8]
  42629d:	mov    ecx,ebp
  42629f:	sub    ecx,eax
  4262a1:	add    ecx,0x1
  4262a4:	mov    DWORD PTR [rbx+0x18],ecx
  4262a7:	mov    QWORD PTR [rbx+0x30],rbp
  4262ab:	mov    rax,r14
  4262ae:	add    rsp,0x18
  4262b2:	pop    rbx
  4262b3:	pop    r12
  4262b5:	pop    r13
  4262b7:	pop    r14
  4262b9:	pop    r15
  4262bb:	pop    rbp
  4262bc:	ret    
  4262bd:	mov    rax,r14
  4262c0:	jmp    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  4262c5:	cmp    al,0x5d
  4262c7:	jne    426372 <flatcc_json_parser_union_vector@@Base+0x422>
  4262cd:	lea    rax,[rbp+0x1]
  4262d1:	mov    rcx,r14
  4262d4:	sub    rcx,rax
  4262d7:	cmp    rcx,0x2
  4262db:	jl     426398 <flatcc_json_parser_union_vector@@Base+0x448>
  4262e1:	cmp    BYTE PTR [rax],0x20
  4262e4:	jg     4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  4262ea:	jne    426398 <flatcc_json_parser_union_vector@@Base+0x448>
  4262f0:	cmp    BYTE PTR [rbp+0x2],0x20
  4262f4:	jle    426398 <flatcc_json_parser_union_vector@@Base+0x448>
  4262fa:	add    rbp,0x2
  4262fe:	mov    rax,rbp
  426301:	jmp    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  426306:	cmp    DWORD PTR [rbx+0x1c],0x0
  42630a:	mov    rax,r14
  42630d:	mov    r15d,DWORD PTR [rsp+0x8]
  426312:	jne    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  426318:	mov    DWORD PTR [rbx+0x1c],0x9
  42631f:	mov    eax,DWORD PTR [rbx+0x8]
  426322:	mov    ecx,r14d
  426325:	sub    ecx,eax
  426327:	add    ecx,0x1
  42632a:	mov    DWORD PTR [rbx+0x18],ecx
  42632d:	mov    QWORD PTR [rbx+0x30],r14
  426331:	mov    rax,r14
  426334:	jmp    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  426336:	lea    rax,[r15+0x1]
  42633a:	mov    rcx,r14
  42633d:	sub    rcx,rax
  426340:	cmp    rcx,0x2
  426344:	jl     42635d <flatcc_json_parser_union_vector@@Base+0x40d>
  426346:	cmp    BYTE PTR [rax],0x20
  426349:	jg     42636b <flatcc_json_parser_union_vector@@Base+0x41b>
  42634b:	jne    42635d <flatcc_json_parser_union_vector@@Base+0x40d>
  42634d:	cmp    BYTE PTR [r15+0x2],0x20
  426352:	jle    42635d <flatcc_json_parser_union_vector@@Base+0x40d>
  426354:	add    r15,0x2
  426358:	mov    rax,r15
  42635b:	jmp    42636b <flatcc_json_parser_union_vector@@Base+0x41b>
  42635d:	mov    rdi,rbx
  426360:	mov    rsi,rax
  426363:	mov    rdx,r14
  426366:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42636b:	mov    r15d,DWORD PTR [rsp+0x8]
  426370:	jmp    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  426372:	cmp    DWORD PTR [rbx+0x1c],0x0
  426376:	mov    rax,r14
  426379:	jne    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  42637b:	mov    DWORD PTR [rbx+0x1c],0x9
  426382:	mov    eax,DWORD PTR [rbx+0x8]
  426385:	mov    ecx,ebp
  426387:	sub    ecx,eax
  426389:	add    ecx,0x1
  42638c:	mov    DWORD PTR [rbx+0x18],ecx
  42638f:	mov    QWORD PTR [rbx+0x30],rbp
  426393:	mov    rax,r14
  426396:	jmp    4263a6 <flatcc_json_parser_union_vector@@Base+0x456>
  426398:	mov    rdi,rbx
  42639b:	mov    rsi,rax
  42639e:	mov    rdx,r14
  4263a1:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4263a6:	mov    rcx,QWORD PTR [rsp+0x10]
  4263ab:	add    rcx,0xffffffffffffffff
  4263af:	mov    rbp,rax
  4263b2:	cmp    rcx,r13
  4263b5:	jne    42628d <flatcc_json_parser_union_vector@@Base+0x33d>
  4263bb:	mov    rdi,QWORD PTR [rbx]
  4263be:	mov    rsi,r12
  4263c1:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4263c6:	mov    rdi,QWORD PTR [rbx]
  4263c9:	mov    rsi,rax
  4263cc:	call   41fb50 <flatcc_builder_end_offset_vector_for_unions@@Base>
  4263d1:	mov    DWORD PTR [rsp+0xc],eax
  4263d5:	test   eax,eax
  4263d7:	je     426064 <flatcc_json_parser_union_vector@@Base+0x114>
  4263dd:	mov    rdi,QWORD PTR [rbx]
  4263e0:	movzx  esi,r15w
  4263e4:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  4263e9:	test   rax,rax
  4263ec:	je     426064 <flatcc_json_parser_union_vector@@Base+0x114>
  4263f2:	mov    ecx,DWORD PTR [rsp+0xc]
  4263f6:	mov    DWORD PTR [rax],ecx
  4263f8:	mov    r14,rbp
  4263fb:	jmp    4262ab <flatcc_json_parser_union_vector@@Base+0x35b>

0000000000426400 <flatcc_json_parser_union_type_vector@@Base>:
  426400:	push   rbp
  426401:	push   r15
  426403:	push   r14
  426405:	push   r13
  426407:	push   r12
  426409:	push   rbx
  42640a:	sub    rsp,0x48
  42640e:	mov    r12,r9
  426411:	mov    ebx,r8d
  426414:	mov    rbp,rcx
  426417:	mov    QWORD PTR [rsp+0x18],rdx
  42641c:	mov    r14,rsi
  42641f:	mov    r13,rdi
  426422:	mov    rdi,QWORD PTR [rdi]
  426425:	mov    rsi,r9
  426428:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  42642d:	lea    rbp,[rbp+rbp*4+0x0]
  426432:	cmp    BYTE PTR [rax+rbp*8+0x24],0x0
  426437:	je     426466 <flatcc_json_parser_union_type_vector@@Base+0x66>
  426439:	cmp    DWORD PTR [r13+0x1c],0x0
  42643e:	jne    42645c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  426440:	mov    DWORD PTR [r13+0x1c],0x1c
  426448:	mov    eax,DWORD PTR [r13+0x8]
  42644c:	mov    ecx,r14d
  42644f:	sub    ecx,eax
  426451:	add    ecx,0x1
  426454:	mov    DWORD PTR [r13+0x18],ecx
  426458:	mov    QWORD PTR [r13+0x30],r14
  42645c:	mov    r15,QWORD PTR [rsp+0x18]
  426461:	jmp    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  426466:	mov    r15,rax
  426469:	lea    rax,[rax+rbp*8]
  42646d:	add    rax,0x24
  426471:	mov    BYTE PTR [rax],0x1
  426474:	mov    QWORD PTR [rsp+0x20],r13
  426479:	mov    rdi,QWORD PTR [r13+0x0]
  42647d:	mov    esi,0x1
  426482:	mov    edx,0x1
  426487:	mov    ecx,0xffffffff
  42648c:	call   41e690 <flatcc_builder_start_vector@@Base>
  426491:	test   eax,eax
  426493:	je     4264b2 <flatcc_json_parser_union_type_vector@@Base+0xb2>
  426495:	mov    r15,QWORD PTR [rsp+0x18]
  42649a:	mov    rsi,r14
  42649d:	mov    r13,QWORD PTR [rsp+0x20]
  4264a2:	cmp    DWORD PTR [r13+0x1c],0x0
  4264a7:	jne    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  4264ad:	jmp    426a2e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  4264b2:	mov    QWORD PTR [rsp+0x40],r15
  4264b7:	cmp    r14,QWORD PTR [rsp+0x18]
  4264bc:	mov    QWORD PTR [rsp+0x28],rbp
  4264c1:	mov    QWORD PTR [rsp+0x38],r12
  4264c6:	mov    DWORD PTR [rsp+0x34],ebx
  4264ca:	je     4264f0 <flatcc_json_parser_union_type_vector@@Base+0xf0>
  4264cc:	cmp    BYTE PTR [r14],0x5b
  4264d0:	jne    4264f0 <flatcc_json_parser_union_type_vector@@Base+0xf0>
  4264d2:	lea    rax,[r14+0x1]
  4264d6:	mov    rcx,QWORD PTR [rsp+0x18]
  4264db:	sub    rcx,rax
  4264de:	cmp    rcx,0x2
  4264e2:	jl     426548 <flatcc_json_parser_union_type_vector@@Base+0x148>
  4264e4:	cmp    BYTE PTR [rax],0x20
  4264e7:	jle    426531 <flatcc_json_parser_union_type_vector@@Base+0x131>
  4264e9:	mov    r13,QWORD PTR [rsp+0x18]
  4264ee:	jmp    42655d <flatcc_json_parser_union_type_vector@@Base+0x15d>
  4264f0:	mov    r13,QWORD PTR [rsp+0x20]
  4264f5:	cmp    DWORD PTR [r13+0x1c],0x0
  4264fa:	mov    r15,QWORD PTR [rsp+0x18]
  4264ff:	mov    rdx,r15
  426502:	mov    rbp,QWORD PTR [rsp+0x28]
  426507:	jne    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  42650d:	mov    DWORD PTR [r13+0x1c],0x16
  426515:	mov    eax,DWORD PTR [r13+0x8]
  426519:	mov    ecx,r14d
  42651c:	sub    ecx,eax
  42651e:	add    ecx,0x1
  426521:	mov    DWORD PTR [r13+0x18],ecx
  426525:	mov    QWORD PTR [r13+0x30],r14
  426529:	mov    rdx,r15
  42652c:	jmp    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  426531:	jne    426548 <flatcc_json_parser_union_type_vector@@Base+0x148>
  426533:	cmp    BYTE PTR [r14+0x2],0x20
  426538:	jle    426548 <flatcc_json_parser_union_type_vector@@Base+0x148>
  42653a:	add    r14,0x2
  42653e:	mov    rax,r14
  426541:	mov    r13,QWORD PTR [rsp+0x18]
  426546:	jmp    42655d <flatcc_json_parser_union_type_vector@@Base+0x15d>
  426548:	mov    rdi,QWORD PTR [rsp+0x20]
  42654d:	mov    rsi,rax
  426550:	mov    r13,QWORD PTR [rsp+0x18]
  426555:	mov    rdx,r13
  426558:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42655d:	mov    rcx,r13
  426560:	cmp    rax,r13
  426563:	mov    r13,QWORD PTR [rsp+0x20]
  426568:	je     4265b2 <flatcc_json_parser_union_type_vector@@Base+0x1b2>
  42656a:	cmp    BYTE PTR [rax],0x5d
  42656d:	jne    4265af <flatcc_json_parser_union_type_vector@@Base+0x1af>
  42656f:	lea    rdx,[rax+0x1]
  426573:	mov    r15,QWORD PTR [rsp+0x18]
  426578:	mov    rcx,r15
  42657b:	sub    rcx,rdx
  42657e:	cmp    rcx,0x2
  426582:	mov    rbp,QWORD PTR [rsp+0x28]
  426587:	jl     4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  42658d:	cmp    BYTE PTR [rdx],0x20
  426590:	jg     426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  426596:	jne    4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  42659c:	cmp    BYTE PTR [rax+0x2],0x20
  4265a0:	jle    4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  4265a6:	add    rax,0x2
  4265aa:	jmp    4268fd <flatcc_json_parser_union_type_vector@@Base+0x4fd>
  4265af:	mov    rcx,rax
  4265b2:	mov    rbp,rcx
  4265b5:	mov    rdi,QWORD PTR [r13+0x0]
  4265b9:	mov    esi,0x1
  4265be:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  4265c3:	test   rax,rax
  4265c6:	je     426858 <flatcc_json_parser_union_type_vector@@Base+0x458>
  4265cc:	mov    rbx,rax
  4265cf:	mov    r14,QWORD PTR [rsp+0x90]
  4265d7:	mov    r15,QWORD PTR [rsp+0x18]
  4265dc:	mov    rsi,rbp
  4265df:	mov    BYTE PTR [rsp+0x17],0x0
  4265e4:	cmp    rsi,r15
  4265e7:	je     42671a <flatcc_json_parser_union_type_vector@@Base+0x31a>
  4265ed:	mov    al,BYTE PTR [rsi]
  4265ef:	xor    r12d,r12d
  4265f2:	cmp    al,0x2d
  4265f4:	sete   r12b
  4265f8:	add    r12,rsi
  4265fb:	xor    ebp,ebp
  4265fd:	cmp    r12,r15
  426600:	je     426655 <flatcc_json_parser_union_type_vector@@Base+0x255>
  426602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42660c:	nop    DWORD PTR [rax+0x0]
  426610:	movsx  rcx,BYTE PTR [r12]
  426615:	mov    edx,ecx
  426617:	add    dl,0xd0
  42661a:	cmp    dl,0x9
  42661d:	ja     426661 <flatcc_json_parser_union_type_vector@@Base+0x261>
  42661f:	lea    rdx,[rbp*4+0x0]
  426627:	add    rdx,rbp
  42662a:	lea    rdx,[rcx+rdx*2]
  42662e:	add    rdx,0xffffffffffffffd0
  426632:	cmp    rbp,rdx
  426635:	ja     42669c <flatcc_json_parser_union_type_vector@@Base+0x29c>
  426637:	add    r12,0x1
  42663b:	mov    rbp,rdx
  42663e:	cmp    r15,r12
  426641:	jne    426610 <flatcc_json_parser_union_type_vector@@Base+0x210>
  426643:	xor    ecx,ecx
  426645:	mov    r12,r15
  426648:	mov    rbp,rdx
  42664b:	cmp    r12,rsi
  42664e:	jne    426668 <flatcc_json_parser_union_type_vector@@Base+0x268>
  426650:	jmp    4266de <flatcc_json_parser_union_type_vector@@Base+0x2de>
  426655:	mov    r12,r15
  426658:	xor    ecx,ecx
  42665a:	cmp    r12,rsi
  42665d:	jne    426668 <flatcc_json_parser_union_type_vector@@Base+0x268>
  42665f:	jmp    4266de <flatcc_json_parser_union_type_vector@@Base+0x2de>
  426661:	mov    cl,0x1
  426663:	cmp    r12,rsi
  426666:	je     4266de <flatcc_json_parser_union_type_vector@@Base+0x2de>
  426668:	test   cl,cl
  42666a:	je     4266c4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  42666c:	mov    cl,BYTE PTR [r12]
  426670:	add    cl,0xd2
  426673:	cmp    cl,0x37
  426676:	ja     4266c4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  426678:	movzx  ecx,cl
  42667b:	movabs rdx,0x80000000800001
  426685:	bt     rdx,rcx
  426689:	jae    4266c4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  42668b:	cmp    DWORD PTR [r13+0x1c],0x0
  426690:	jne    4266bf <flatcc_json_parser_union_type_vector@@Base+0x2bf>
  426692:	mov    DWORD PTR [r13+0x1c],0xc
  42669a:	jmp    4266ab <flatcc_json_parser_union_type_vector@@Base+0x2ab>
  42669c:	cmp    DWORD PTR [r13+0x1c],0x0
  4266a1:	jne    4266bf <flatcc_json_parser_union_type_vector@@Base+0x2bf>
  4266a3:	mov    DWORD PTR [r13+0x1c],0x8
  4266ab:	mov    ecx,DWORD PTR [r13+0x8]
  4266af:	mov    edx,r12d
  4266b2:	sub    edx,ecx
  4266b4:	add    edx,0x1
  4266b7:	mov    DWORD PTR [r13+0x18],edx
  4266bb:	mov    QWORD PTR [r13+0x30],r12
  4266bf:	xor    ebp,ebp
  4266c1:	mov    r12,r15
  4266c4:	cmp    r12,rsi
  4266c7:	je     4266de <flatcc_json_parser_union_type_vector@@Base+0x2de>
  4266c9:	cmp    al,0x2d
  4266cb:	jne    4266ea <flatcc_json_parser_union_type_vector@@Base+0x2ea>
  4266cd:	cmp    DWORD PTR [r13+0x1c],0x0
  4266d2:	jne    42671a <flatcc_json_parser_union_type_vector@@Base+0x31a>
  4266d4:	mov    DWORD PTR [r13+0x1c],0x8
  4266dc:	jmp    426706 <flatcc_json_parser_union_type_vector@@Base+0x306>
  4266de:	xor    ebp,ebp
  4266e0:	mov    r12,rsi
  4266e3:	cmp    rsi,r12
  4266e6:	jne    426759 <flatcc_json_parser_union_type_vector@@Base+0x359>
  4266e8:	jmp    426724 <flatcc_json_parser_union_type_vector@@Base+0x324>
  4266ea:	cmp    rbp,0x100
  4266f1:	jb     426845 <flatcc_json_parser_union_type_vector@@Base+0x445>
  4266f7:	cmp    DWORD PTR [r13+0x1c],0x0
  4266fc:	jne    42671a <flatcc_json_parser_union_type_vector@@Base+0x31a>
  4266fe:	mov    DWORD PTR [r13+0x1c],0x7
  426706:	mov    eax,DWORD PTR [r13+0x8]
  42670a:	mov    ecx,r12d
  42670d:	sub    ecx,eax
  42670f:	add    ecx,0x1
  426712:	mov    DWORD PTR [r13+0x18],ecx
  426716:	mov    QWORD PTR [r13+0x30],r12
  42671a:	xor    ebp,ebp
  42671c:	mov    r12,r15
  42671f:	cmp    rsi,r12
  426722:	jne    426759 <flatcc_json_parser_union_type_vector@@Base+0x359>
  426724:	mov    rdi,r13
  426727:	mov    rbp,rsi
  42672a:	mov    rdx,r15
  42672d:	mov    rcx,QWORD PTR [rsp+0x80]
  426735:	lea    r8,[rsp+0x17]
  42673a:	call   425db0 <flatcc_json_parser_union_type@@Base+0x2d0>
  42673f:	mov    r12,rax
  426742:	cmp    rax,rbp
  426745:	je     426a9a <flatcc_json_parser_union_type_vector@@Base+0x69a>
  42674b:	cmp    r12,r15
  42674e:	je     426a9a <flatcc_json_parser_union_type_vector@@Base+0x69a>
  426754:	mov    bpl,BYTE PTR [rsp+0x17]
  426759:	movzx  edi,bpl
  42675d:	call   r14
  426760:	test   eax,eax
  426762:	jne    426776 <flatcc_json_parser_union_type_vector@@Base+0x376>
  426764:	test   BYTE PTR [r13+0x10],0x1
  426769:	je     426aa6 <flatcc_json_parser_union_type_vector@@Base+0x6a6>
  42676f:	mov    BYTE PTR [rsp+0x17],0x0
  426774:	xor    ebp,ebp
  426776:	mov    BYTE PTR [rbx],bpl
  426779:	mov    rax,r15
  42677c:	sub    rax,r12
  42677f:	cmp    rax,0x2
  426783:	mov    rbp,QWORD PTR [rsp+0x28]
  426788:	jl     4267a9 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  42678a:	cmp    BYTE PTR [r12],0x20
  42678f:	jg     4267ba <flatcc_json_parser_union_type_vector@@Base+0x3ba>
  426791:	jne    4267a9 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  426793:	cmp    BYTE PTR [r12+0x1],0x20
  426799:	jle    4267a9 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  42679b:	add    r12,0x1
  42679f:	cmp    r12,r15
  4267a2:	jne    4267c3 <flatcc_json_parser_union_type_vector@@Base+0x3c3>
  4267a4:	jmp    426870 <flatcc_json_parser_union_type_vector@@Base+0x470>
  4267a9:	mov    rdi,r13
  4267ac:	mov    rsi,r12
  4267af:	mov    rdx,r15
  4267b2:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4267b7:	mov    r12,rax
  4267ba:	cmp    r12,r15
  4267bd:	je     426870 <flatcc_json_parser_union_type_vector@@Base+0x470>
  4267c3:	mov    al,BYTE PTR [r12]
  4267c7:	cmp    al,0x2c
  4267c9:	jne    426878 <flatcc_json_parser_union_type_vector@@Base+0x478>
  4267cf:	lea    rax,[r12+0x1]
  4267d4:	mov    rcx,r15
  4267d7:	sub    rcx,rax
  4267da:	cmp    rcx,0x2
  4267de:	jl     426800 <flatcc_json_parser_union_type_vector@@Base+0x400>
  4267e0:	cmp    BYTE PTR [rax],0x20
  4267e3:	jg     42680e <flatcc_json_parser_union_type_vector@@Base+0x40e>
  4267e5:	jne    426800 <flatcc_json_parser_union_type_vector@@Base+0x400>
  4267e7:	cmp    BYTE PTR [r12+0x2],0x20
  4267ed:	jle    426800 <flatcc_json_parser_union_type_vector@@Base+0x400>
  4267ef:	add    r12,0x2
  4267f3:	mov    rax,r12
  4267f6:	cmp    rax,r15
  4267f9:	jne    426817 <flatcc_json_parser_union_type_vector@@Base+0x417>
  4267fb:	jmp    4268a9 <flatcc_json_parser_union_type_vector@@Base+0x4a9>
  426800:	mov    rdi,r13
  426803:	mov    rsi,rax
  426806:	mov    rdx,r15
  426809:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  42680e:	cmp    rax,r15
  426811:	je     4268a9 <flatcc_json_parser_union_type_vector@@Base+0x4a9>
  426817:	cmp    BYTE PTR [rax],0x5d
  42681a:	je     4268d4 <flatcc_json_parser_union_type_vector@@Base+0x4d4>
  426820:	mov    rdi,QWORD PTR [r13+0x0]
  426824:	mov    rbx,rax
  426827:	mov    esi,0x1
  42682c:	call   41dd20 <flatcc_builder_extend_vector@@Base>
  426831:	mov    rsi,rbx
  426834:	mov    rbx,rax
  426837:	test   rax,rax
  42683a:	jne    4265df <flatcc_json_parser_union_type_vector@@Base+0x1df>
  426840:	jmp    426a27 <flatcc_json_parser_union_type_vector@@Base+0x627>
  426845:	mov    BYTE PTR [rsp+0x17],bpl
  42684a:	cmp    rsi,r12
  42684d:	jne    426759 <flatcc_json_parser_union_type_vector@@Base+0x359>
  426853:	jmp    426724 <flatcc_json_parser_union_type_vector@@Base+0x324>
  426858:	mov    r15,QWORD PTR [rsp+0x18]
  42685d:	mov    rsi,rbp
  426860:	cmp    DWORD PTR [r13+0x1c],0x0
  426865:	jne    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  42686b:	jmp    426a2e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  426870:	mov    rdx,r15
  426873:	jmp    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  426878:	cmp    al,0x5d
  42687a:	jne    426a68 <flatcc_json_parser_union_type_vector@@Base+0x668>
  426880:	lea    rdx,[r12+0x1]
  426885:	mov    rax,r15
  426888:	sub    rax,rdx
  42688b:	cmp    rax,0x2
  42688f:	jl     4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  426891:	cmp    BYTE PTR [rdx],0x20
  426894:	jg     426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  426896:	jne    4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  426898:	cmp    BYTE PTR [r12+0x2],0x20
  42689e:	jle    4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  4268a0:	add    r12,0x2
  4268a4:	mov    rdx,r12
  4268a7:	jmp    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  4268a9:	cmp    DWORD PTR [r13+0x1c],0x0
  4268ae:	mov    rdx,r15
  4268b1:	jne    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  4268b3:	mov    DWORD PTR [r13+0x1c],0x9
  4268bb:	mov    eax,DWORD PTR [r13+0x8]
  4268bf:	mov    ecx,r15d
  4268c2:	sub    ecx,eax
  4268c4:	add    ecx,0x1
  4268c7:	mov    DWORD PTR [r13+0x18],ecx
  4268cb:	mov    QWORD PTR [r13+0x30],r15
  4268cf:	mov    rdx,r15
  4268d2:	jmp    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  4268d4:	lea    rdx,[rax+0x1]
  4268d8:	mov    rcx,r15
  4268db:	sub    rcx,rdx
  4268de:	cmp    rcx,0x2
  4268e2:	jl     4268ef <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  4268e4:	cmp    BYTE PTR [rdx],0x20
  4268e7:	jg     426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  4268e9:	je     42659c <flatcc_json_parser_union_type_vector@@Base+0x19c>
  4268ef:	mov    rdi,r13
  4268f2:	mov    rsi,rdx
  4268f5:	mov    rdx,r15
  4268f8:	call   4236b0 <flatcc_json_parser_space_ext@@Base>
  4268fd:	mov    rdx,rax
  426900:	mov    QWORD PTR [rsp+0x18],rdx
  426905:	mov    rbx,QWORD PTR [rsp+0x40]
  42690a:	add    rbx,0x10
  42690e:	mov    rdi,QWORD PTR [r13+0x0]
  426912:	call   41f8f0 <flatcc_builder_vector_count@@Base>
  426917:	mov    r12,rax
  42691a:	mov    DWORD PTR [rbx+rbp*8+0x18],r12d
  42691f:	mov    rbx,r13
  426922:	mov    r13d,r12d
  426925:	mov    rdi,QWORD PTR [rbx]
  426928:	mov    rsi,r13
  42692b:	call   41d050 <flatcc_builder_enter_user_frame@@Base>
  426930:	mov    r14,rax
  426933:	mov    rdi,QWORD PTR [rbx]
  426936:	mov    rsi,rax
  426939:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  42693e:	mov    rbp,rax
  426941:	mov    rdi,QWORD PTR [rbx]
  426944:	call   41f900 <flatcc_builder_vector_edit@@Base>
  426949:	mov    rdi,rbp
  42694c:	mov    rsi,rax
  42694f:	mov    rdx,r13
  426952:	call   4060e0 <memcpy@plt>
  426957:	mov    rdi,QWORD PTR [rbx]
  42695a:	call   41f820 <flatcc_builder_end_vector@@Base>
  42695f:	test   eax,eax
  426961:	je     426a1f <flatcc_json_parser_union_type_vector@@Base+0x61f>
  426967:	mov    r13d,eax
  42696a:	mov    rdi,QWORD PTR [rbx]
  42696d:	movzx  ebp,WORD PTR [rsp+0x34]
  426972:	lea    esi,[rbp-0x1]
  426975:	call   41fd20 <flatcc_builder_table_add_offset@@Base>
  42697a:	test   rax,rax
  42697d:	je     426a1f <flatcc_json_parser_union_type_vector@@Base+0x61f>
  426983:	mov    DWORD PTR [rax],r13d
  426986:	mov    rdi,QWORD PTR [rbx]
  426989:	mov    rsi,QWORD PTR [rsp+0x38]
  42698e:	call   41d1e0 <flatcc_builder_get_user_frame_ptr@@Base>
  426993:	mov    rcx,QWORD PTR [rsp+0x28]
  426998:	mov    QWORD PTR [rax+rcx*8+0x30],r14
  42699d:	mov    rsi,QWORD PTR [rax+rcx*8+0x10]
  4269a2:	mov    rcx,QWORD PTR [rax+0x8]
  4269a6:	test   rsi,rsi
  4269a9:	je     426a5b <flatcc_json_parser_union_type_vector@@Base+0x65b>
  4269af:	test   rcx,rcx
  4269b2:	je     426ace <flatcc_json_parser_union_type_vector@@Base+0x6ce>
  4269b8:	mov    r9,rbp
  4269bb:	mov    rdx,QWORD PTR [rsp+0x88]
  4269c3:	mov    rdi,rax
  4269c6:	add    rdi,0x10
  4269ca:	add    rcx,0xffffffffffffffff
  4269ce:	mov    QWORD PTR [rax+0x8],rcx
  4269d2:	mov    eax,DWORD PTR [rbx+0x14]
  4269d5:	mov    DWORD PTR [rsp+0x20],eax
  4269d9:	mov    rbp,rbx
  4269dc:	mov    r13,QWORD PTR [rbx+0x8]
  4269e0:	mov    rcx,QWORD PTR [rsp+0x28]
  4269e5:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
  4269e9:	mov    DWORD PTR [rbx+0x14],eax
  4269ec:	mov    rax,QWORD PTR [rdi+rcx*8+0x8]
  4269f1:	mov    QWORD PTR [rbx+0x8],rax
  4269f5:	mov    QWORD PTR [rsp],rdx
  4269f9:	mov    rdi,rbx
  4269fc:	mov    rdx,r15
  4269ff:	mov    rcx,r14
  426a02:	mov    r8d,r12d
  426a05:	call   426030 <flatcc_json_parser_union_vector@@Base+0xe0>
  426a0a:	cmp    rax,r15
  426a0d:	je     426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  426a0f:	mov    eax,DWORD PTR [rsp+0x20]
  426a13:	mov    DWORD PTR [rbp+0x14],eax
  426a16:	mov    QWORD PTR [rbp+0x8],r13
  426a1a:	jmp    42645c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  426a1f:	mov    rsi,QWORD PTR [rsp+0x18]
  426a24:	mov    r13,rbx
  426a27:	cmp    DWORD PTR [r13+0x1c],0x0
  426a2c:	jne    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  426a2e:	mov    DWORD PTR [r13+0x1c],0x21
  426a36:	mov    eax,DWORD PTR [r13+0x8]
  426a3a:	mov    ecx,esi
  426a3c:	sub    ecx,eax
  426a3e:	add    ecx,0x1
  426a41:	mov    DWORD PTR [r13+0x18],ecx
  426a45:	mov    QWORD PTR [r13+0x30],rsi
  426a49:	mov    rax,r15
  426a4c:	add    rsp,0x48
  426a50:	pop    rbx
  426a51:	pop    r12
  426a53:	pop    r13
  426a55:	pop    r14
  426a57:	pop    r15
  426a59:	pop    rbp
  426a5a:	ret    
  426a5b:	add    rcx,0x1
  426a5f:	mov    QWORD PTR [rax+0x8],rcx
  426a63:	jmp    42645c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  426a68:	cmp    DWORD PTR [r13+0x1c],0x0
  426a6d:	mov    rdx,r15
  426a70:	jne    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  426a76:	mov    DWORD PTR [r13+0x1c],0x9
  426a7e:	mov    eax,DWORD PTR [r13+0x8]
  426a82:	mov    ecx,r12d
  426a85:	sub    ecx,eax
  426a87:	add    ecx,0x1
  426a8a:	mov    DWORD PTR [r13+0x18],ecx
  426a8e:	mov    QWORD PTR [r13+0x30],r12
  426a92:	mov    rdx,r15
  426a95:	jmp    426900 <flatcc_json_parser_union_type_vector@@Base+0x500>
  426a9a:	mov    rsi,r12
  426a9d:	cmp    DWORD PTR [r13+0x1c],0x0
  426aa2:	jne    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  426aa4:	jmp    426a2e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  426aa6:	cmp    DWORD PTR [r13+0x1c],0x0
  426aab:	jne    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  426aad:	mov    DWORD PTR [r13+0x1c],0xf
  426ab5:	mov    eax,DWORD PTR [r13+0x8]
  426ab9:	mov    ecx,r12d
  426abc:	sub    ecx,eax
  426abe:	add    ecx,0x1
  426ac1:	mov    DWORD PTR [r13+0x18],ecx
  426ac5:	mov    QWORD PTR [r13+0x30],r12
  426ac9:	jmp    426a49 <flatcc_json_parser_union_type_vector@@Base+0x649>
  426ace:	lea    rdi,[rip+0x12995]        # 43946a <flatcc_builder_padding_base@@Base+0x28ca>
  426ad5:	lea    rsi,[rip+0x1299d]        # 439479 <flatcc_builder_padding_base@@Base+0x28d9>
  426adc:	lea    rcx,[rip+0x12ac6]        # 4395a9 <flatcc_builder_padding_base@@Base+0x2a09>
  426ae3:	mov    edx,0x462
  426ae8:	call   406070 <__assert_fail@plt>
  426aed:	nop    DWORD PTR [rax]

0000000000426af0 <flatcc_json_parser_table_as_root@@Base>:
  426af0:	push   r15
  426af2:	push   r14
  426af4:	push   r12
  426af6:	push   rbx
  426af7:	sub    rsp,0x48
  426afb:	mov    r12,rcx
  426afe:	mov    r14,rdx
  426b01:	mov    r15,rdi
  426b04:	mov    ecx,r8d
  426b07:	shr    ecx,1
  426b09:	and    ecx,0x2
  426b0c:	test   rsi,rsi
  426b0f:	lea    rbx,[rsp+0x8]
  426b14:	cmovne rbx,rsi
  426b18:	add    r12,rdx
  426b1b:	vxorps xmm0,xmm0,xmm0
  426b1f:	vmovups YMMWORD PTR [rbx+0x18],ymm0
  426b24:	mov    QWORD PTR [rbx+0x38],0x0
  426b2c:	mov    QWORD PTR [rbx],rdi
  426b2f:	mov    QWORD PTR [rbx+0x8],rdx
  426b33:	mov    DWORD PTR [rbx+0x14],0x1
  426b3a:	mov    DWORD PTR [rbx+0x10],r8d
  426b3e:	mov    QWORD PTR [rbx+0x20],rdx
  426b42:	mov    QWORD PTR [rbx+0x28],r12
  426b46:	mov    QWORD PTR [rbx+0x30],rdx
  426b4a:	xor    edx,edx
  426b4c:	mov    rsi,r9
  426b4f:	vzeroupper 
  426b52:	call   41d830 <flatcc_builder_start_buffer@@Base>
  426b57:	mov    ecx,eax
  426b59:	mov    eax,0xffffffff
  426b5e:	test   ecx,ecx
  426b60:	jne    426b98 <flatcc_json_parser_table_as_root@@Base+0xa8>
  426b62:	lea    rcx,[rsp+0x4]
  426b67:	mov    rdi,rbx
  426b6a:	mov    rsi,r14
  426b6d:	mov    rdx,r12
  426b70:	call   QWORD PTR [rsp+0x70]
  426b74:	mov    eax,DWORD PTR [rbx+0x1c]
  426b77:	test   eax,eax
  426b79:	jne    426b98 <flatcc_json_parser_table_as_root@@Base+0xa8>
  426b7b:	mov    esi,DWORD PTR [rsp+0x4]
  426b7f:	mov    rdi,r15
  426b82:	call   41da50 <flatcc_builder_end_buffer@@Base>
  426b87:	mov    ecx,eax
  426b89:	mov    eax,0xffffffff
  426b8e:	test   ecx,ecx
  426b90:	je     426b98 <flatcc_json_parser_table_as_root@@Base+0xa8>
  426b92:	mov    QWORD PTR [rbx+0x38],r14
  426b96:	xor    eax,eax
  426b98:	add    rsp,0x48
  426b9c:	pop    rbx
  426b9d:	pop    r12
  426b9f:	pop    r14
  426ba1:	pop    r15
  426ba3:	ret    
  426ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426bae:	xchg   ax,ax

0000000000426bb0 <flatcc_json_parser_struct_as_root@@Base>:
  426bb0:	push   r15
  426bb2:	push   r14
  426bb4:	push   r12
  426bb6:	push   rbx
  426bb7:	sub    rsp,0x48
  426bbb:	mov    r12,rcx
  426bbe:	mov    r14,rdx
  426bc1:	mov    r15,rdi
  426bc4:	mov    ecx,r8d
  426bc7:	shr    ecx,1
  426bc9:	and    ecx,0x2
  426bcc:	test   rsi,rsi
  426bcf:	lea    rbx,[rsp+0x8]
  426bd4:	cmovne rbx,rsi
  426bd8:	add    r12,rdx
  426bdb:	vxorps xmm0,xmm0,xmm0
  426bdf:	vmovups YMMWORD PTR [rbx+0x18],ymm0
  426be4:	mov    QWORD PTR [rbx+0x38],0x0
  426bec:	mov    QWORD PTR [rbx],rdi
  426bef:	mov    QWORD PTR [rbx+0x8],rdx
  426bf3:	mov    DWORD PTR [rbx+0x14],0x1
  426bfa:	mov    DWORD PTR [rbx+0x10],r8d
  426bfe:	mov    QWORD PTR [rbx+0x20],rdx
  426c02:	mov    QWORD PTR [rbx+0x28],r12
  426c06:	mov    QWORD PTR [rbx+0x30],rdx
  426c0a:	xor    edx,edx
  426c0c:	mov    rsi,r9
  426c0f:	vzeroupper 
  426c12:	call   41d830 <flatcc_builder_start_buffer@@Base>
  426c17:	mov    ecx,eax
  426c19:	mov    eax,0xffffffff
  426c1e:	test   ecx,ecx
  426c20:	jne    426c58 <flatcc_json_parser_struct_as_root@@Base+0xa8>
  426c22:	lea    rcx,[rsp+0x4]
  426c27:	mov    rdi,rbx
  426c2a:	mov    rsi,r14
  426c2d:	mov    rdx,r12
  426c30:	call   QWORD PTR [rsp+0x70]
  426c34:	mov    eax,DWORD PTR [rbx+0x1c]
  426c37:	test   eax,eax
  426c39:	jne    426c58 <flatcc_json_parser_struct_as_root@@Base+0xa8>
  426c3b:	mov    esi,DWORD PTR [rsp+0x4]
  426c3f:	mov    rdi,r15
  426c42:	call   41da50 <flatcc_builder_end_buffer@@Base>
  426c47:	mov    ecx,eax
  426c49:	mov    eax,0xffffffff
  426c4e:	test   ecx,ecx
  426c50:	je     426c58 <flatcc_json_parser_struct_as_root@@Base+0xa8>
  426c52:	mov    QWORD PTR [rbx+0x38],r14
  426c56:	xor    eax,eax
  426c58:	add    rsp,0x48
  426c5c:	pop    rbx
  426c5d:	pop    r12
  426c5f:	pop    r14
  426c61:	pop    r15
  426c63:	ret    
  426c64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426c6e:	xchg   ax,ax

0000000000426c70 <flatcc_json_printer_error_string@@Base>:
  426c70:	cmp    edi,0x3
  426c73:	ja     426c84 <flatcc_json_printer_error_string@@Base+0x14>
  426c75:	movsxd rax,edi
  426c78:	lea    rcx,[rip+0x1a161]        # 440de0 <flatcc_builder_padding_base@@Base+0xa240>
  426c7f:	mov    rax,QWORD PTR [rcx+rax*8]
  426c83:	ret    
  426c84:	lea    rax,[rip+0x11815]        # 4384a0 <flatcc_builder_padding_base@@Base+0x1900>
  426c8b:	ret    
  426c8c:	nop    DWORD PTR [rax+0x0]

0000000000426c90 <flatcc_json_printer_fmt_float@@Base>:
  426c90:	vcvtss2sd xmm0,xmm0,xmm0
  426c94:	jmp    426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  426c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ca0:	push   rbp
  426ca1:	push   r15
  426ca3:	push   r14
  426ca5:	push   r13
  426ca7:	push   r12
  426ca9:	push   rbx
  426caa:	sub    rsp,0x88
  426cb1:	test   rdi,rdi
  426cb4:	je     4279b6 <flatcc_json_printer_fmt_float@@Base+0xd26>
  426cba:	vmovq  rcx,xmm0
  426cbf:	lea    rax,[rcx+rcx*1]
  426cc3:	movabs rdx,0xffe0000000000001
  426ccd:	cmp    rax,rdx
  426cd0:	jb     426cf8 <flatcc_json_printer_fmt_float@@Base+0x68>
  426cd2:	mov    rdx,rcx
  426cd5:	shr    rdx,0x20
  426cd9:	lea    rsi,[rip+0x13475]        # 43a155 <flatcc_builder_padding_base@@Base+0x35b5>
  426ce0:	xor    eax,eax
  426ce2:	add    rsp,0x88
  426ce9:	pop    rbx
  426cea:	pop    r12
  426cec:	pop    r13
  426cee:	pop    r14
  426cf0:	pop    r15
  426cf2:	pop    rbp
  426cf3:	jmp    406120 <sprintf@plt>
  426cf8:	test   rcx,rcx
  426cfb:	js     426d02 <flatcc_json_printer_fmt_float@@Base+0x72>
  426cfd:	mov    rbx,rdi
  426d00:	jmp    426d1e <flatcc_json_printer_fmt_float@@Base+0x8e>
  426d02:	lea    rbx,[rdi+0x1]
  426d06:	mov    BYTE PTR [rdi],0x2d
  426d09:	vpxor  xmm0,xmm0,XMMWORD PTR [rip+0xcf3f]        # 433c50 <_IO_stdin_used@@Base+0xc50>
  426d11:	movabs rax,0x8000000000000000
  426d1b:	xor    rcx,rax
  426d1e:	movabs r11,0x7ff0000000000000
  426d28:	cmp    rcx,r11
  426d2b:	je     426d43 <flatcc_json_printer_fmt_float@@Base+0xb3>
  426d2d:	test   rcx,rcx
  426d30:	jne    426d53 <flatcc_json_printer_fmt_float@@Base+0xc3>
  426d32:	mov    WORD PTR [rbx],0x30
  426d37:	lea    eax,[rbx+0x1]
  426d3a:	sub    eax,edi
  426d3c:	mov    ebx,eax
  426d3e:	jmp    4277c9 <flatcc_json_printer_fmt_float@@Base+0xb39>
  426d43:	mov    DWORD PTR [rbx],0x666e69
  426d49:	add    ebx,0x3
  426d4c:	sub    ebx,edi
  426d4e:	jmp    4277c9 <flatcc_json_printer_fmt_float@@Base+0xb39>
  426d53:	vmovq  rax,xmm0
  426d58:	mov    cl,0x34
  426d5a:	bzhi   r8,rax,rcx
  426d5f:	and    r11,rax
  426d62:	je     426d84 <flatcc_json_printer_fmt_float@@Base+0xf4>
  426d64:	movabs r10,0xfffffffffffff
  426d6e:	add    r10,0x1
  426d72:	or     r10,r8
  426d75:	mov    rsi,r11
  426d78:	shr    rsi,0x34
  426d7c:	add    esi,0xfffffbcd
  426d82:	jmp    426d95 <flatcc_json_printer_fmt_float@@Base+0x105>
  426d84:	mov    esi,0xfffffbce
  426d89:	mov    r10,r8
  426d8c:	test   r8,r8
  426d8f:	je     427a13 <flatcc_json_printer_fmt_float@@Base+0xd83>
  426d95:	movabs rbp,0x40000000000000
  426d9f:	mov    rdx,r10
  426da2:	mov    eax,esi
  426da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426dae:	xchg   ax,ax
  426db0:	shl    rdx,0xa
  426db4:	add    eax,0xfffffff6
  426db7:	cmp    rdx,rbp
  426dba:	jb     426db0 <flatcc_json_printer_fmt_float@@Base+0x120>
  426dbc:	test   rdx,rdx
  426dbf:	mov    QWORD PTR [rsp],rbx
  426dc3:	js     426ddb <flatcc_json_printer_fmt_float@@Base+0x14b>
  426dc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426dcf:	nop
  426dd0:	add    rdx,rdx
  426dd3:	add    eax,0xffffffff
  426dd6:	test   rdx,rdx
  426dd9:	jns    426dd0 <flatcc_json_printer_fmt_float@@Base+0x140>
  426ddb:	lea    rcx,[r10+r10*1]
  426ddf:	add    rcx,0x1
  426de3:	lea    r9d,[rsi-0x1]
  426de7:	mov    ebx,r9d
  426dea:	jmp    426df7 <flatcc_json_printer_fmt_float@@Base+0x167>
  426dec:	nop    DWORD PTR [rax+0x0]
  426df0:	shl    rcx,0xa
  426df4:	add    ebx,0xfffffff6
  426df7:	cmp    rcx,rbp
  426dfa:	jb     426df0 <flatcc_json_printer_fmt_float@@Base+0x160>
  426dfc:	jmp    426e06 <flatcc_json_printer_fmt_float@@Base+0x176>
  426dfe:	xchg   ax,ax
  426e00:	add    rcx,rcx
  426e03:	add    ebx,0xffffffff
  426e06:	test   rcx,rcx
  426e09:	jns    426e00 <flatcc_json_printer_fmt_float@@Base+0x170>
  426e0b:	vxorps xmm1,xmm1,xmm1
  426e0f:	vucomisd xmm0,xmm1
  426e13:	jbe    4279f4 <flatcc_json_printer_fmt_float@@Base+0xd64>
  426e19:	vmovsd xmm1,QWORD PTR [rip+0x129ff]        # 439820 <flatcc_builder_padding_base@@Base+0x2c80>
  426e21:	vucomisd xmm1,xmm0
  426e25:	jb     4279f4 <flatcc_json_printer_fmt_float@@Base+0xd64>
  426e2b:	test   r11,r11
  426e2e:	sete   r11b
  426e32:	test   r8,r8
  426e35:	setne  r8b
  426e39:	or     r8b,r11b
  426e3c:	lea    r11,[r10+r10*1]
  426e40:	lea    rbp,[r10*4+0x0]
  426e48:	add    esi,0xfffffffe
  426e4b:	test   r8b,r8b
  426e4e:	cmovne rbp,r11
  426e52:	cmovne esi,r9d
  426e56:	add    rbp,0xffffffffffffffff
  426e5a:	sub    esi,ebx
  426e5c:	shlx   r9,rbp,rsi
  426e61:	mov    esi,0xffffffc3
  426e66:	sub    esi,eax
  426e68:	vcvtsi2sd xmm1,xmm2,esi
  426e6c:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x129b4]        # 439828 <flatcc_builder_padding_base@@Base+0x2c88>
  426e74:	vcvttsd2si ebp,xmm1
  426e78:	vxorpd xmm2,xmm2,xmm2
  426e7c:	vucomisd xmm2,xmm1
  426e80:	ja     426e9b <flatcc_json_printer_fmt_float@@Base+0x20b>
  426e82:	vcvtsi2sd xmm3,xmm3,ebp
  426e86:	vsubsd xmm1,xmm1,xmm3
  426e8a:	vcmpneqsd xmm1,xmm1,xmm2
  426e8f:	vmovq  rsi,xmm1
  426e94:	and    esi,0x1
  426e97:	add    esi,ebp
  426e99:	mov    ebp,esi
  426e9b:	lea    esi,[rbp+0x15b]
  426ea1:	sar    esi,0x1f
  426ea4:	shr    esi,0x1d
  426ea7:	lea    esi,[rsi+rbp*1]
  426eaa:	add    esi,0x15b
  426eb0:	sar    esi,0x3
  426eb3:	movsxd rsi,esi
  426eb6:	shl    rsi,0x4
  426eba:	lea    rbp,[rip+0x12a6f]        # 439930 <flatcc_builder_padding_base@@Base+0x2d90>
  426ec1:	mov    QWORD PTR [rsp+0x48],rsi
  426ec6:	mov    r12,QWORD PTR [rsi+rbp*1+0x10]
  426ecb:	mov    r11d,r12d
  426ece:	shr    r12,0x20
  426ed2:	mov    rsi,r9
  426ed5:	shr    rsi,0x20
  426ed9:	mov    ebp,r9d
  426edc:	mov    r9,r12
  426edf:	imul   r9,rsi
  426ee3:	mov    r14,r12
  426ee6:	imul   r14,rbp
  426eea:	mov    r8,r11
  426eed:	mov    QWORD PTR [rsp+0x80],rsi
  426ef5:	imul   r8,rsi
  426ef9:	imul   rbp,r11
  426efd:	shr    rbp,0x20
  426f01:	mov    esi,r8d
  426f04:	add    rsi,rbp
  426f07:	mov    r10d,r14d
  426f0a:	add    r10,rsi
  426f0d:	sub    r10,0xffffffff80000000
  426f14:	shr    r8,0x20
  426f18:	shr    r14,0x20
  426f1c:	shr    r10,0x20
  426f20:	mov    rsi,rcx
  426f23:	shr    rsi,0x20
  426f27:	mov    ecx,ecx
  426f29:	mov    r15,r12
  426f2c:	imul   r15,rsi
  426f30:	mov    r13,r12
  426f33:	imul   r13,rcx
  426f37:	mov    rbp,r11
  426f3a:	mov    QWORD PTR [rsp+0x68],rsi
  426f3f:	imul   rbp,rsi
  426f43:	imul   rcx,r11
  426f47:	shr    rcx,0x20
  426f4b:	mov    esi,ebp
  426f4d:	add    rsi,rcx
  426f50:	mov    ecx,r13d
  426f53:	add    rcx,rsi
  426f56:	sub    rcx,0xffffffff80000000
  426f5d:	shr    rbp,0x20
  426f61:	shr    r13,0x20
  426f65:	shr    rcx,0x20
  426f69:	mov    QWORD PTR [rsp+0x70],r8
  426f6e:	add    r9,r8
  426f71:	mov    QWORD PTR [rsp+0x78],r14
  426f76:	add    r9,r14
  426f79:	mov    QWORD PTR [rsp+0x60],r10
  426f7e:	add    r9,r10
  426f81:	add    r9,0xffffffffffffffff
  426f85:	lea    rsi,[r15+rbp*1]
  426f89:	add    rsi,r13
  426f8c:	mov    QWORD PTR [rsp+0x18],rcx
  426f91:	add    rcx,rsi
  426f94:	add    rcx,0x1
  426f98:	mov    r14,rcx
  426f9b:	sub    r14,r9
  426f9e:	jb     4279d5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  426fa4:	mov    QWORD PTR [rsp+0x20],r13
  426fa9:	mov    QWORD PTR [rsp+0x28],rbp
  426fae:	mov    QWORD PTR [rsp+0x38],r15
  426fb3:	mov    QWORD PTR [rsp+0x40],rdi
  426fb8:	mov    rsi,QWORD PTR [rsp+0x48]
  426fbd:	lea    rdi,[rip+0x1296c]        # 439930 <flatcc_builder_padding_base@@Base+0x2d90>
  426fc4:	movsx  r8d,WORD PTR [rsi+rdi*1+0x18]
  426fca:	mov    r10,rdx
  426fcd:	shr    r10,0x20
  426fd1:	and    edx,0xfffffffe
  426fd4:	mov    rsi,r12
  426fd7:	imul   rsi,r10
  426fdb:	mov    rbp,r12
  426fde:	imul   rbp,rdx
  426fe2:	mov    rdi,r11
  426fe5:	imul   rdi,r10
  426fe9:	imul   r11,rdx
  426fed:	shr    r11,0x20
  426ff1:	mov    edx,edi
  426ff3:	add    rdx,r11
  426ff6:	mov    r9d,ebp
  426ff9:	add    r9,rdx
  426ffc:	sub    r9,0xffffffff80000000
  427003:	shr    rdi,0x20
  427007:	add    rsi,rdi
  42700a:	shr    rbp,0x20
  42700e:	add    rsi,rbp
  427011:	shr    r9,0x20
  427015:	add    rsi,r9
  427018:	mov    QWORD PTR [rsp+0x30],rsi
  42701d:	lea    edx,[r8+rax*1]
  427021:	add    edx,0x40
  427024:	lea    eax,[r8+rbx*1]
  427028:	add    eax,0x40
  42702b:	mov    DWORD PTR [rsp+0x10],eax
  42702f:	mov    r11d,edx
  427032:	neg    r11d
  427035:	shrx   rax,rcx,r11
  42703a:	mov    QWORD PTR [rsp+0x8],rcx
  42703f:	bzhi   r8,rcx,r11
  427044:	mov    DWORD PTR [rsp+0x14],edx
  427048:	imul   edx,edx,0x4d1
  42704e:	add    edx,0x13911
  427054:	sar    edx,0xc
  427057:	movsxd r15,edx
  42705a:	add    edx,0x1
  42705d:	lea    rcx,[rip+0x12e3c]        # 439ea0 <flatcc_builder_padding_base@@Base+0x3300>
  427064:	cmp    DWORD PTR [rcx+r15*4+0x4],eax
  427069:	cmovbe r15d,edx
  42706d:	test   r15d,r15d
  427070:	jle    4270e3 <flatcc_json_printer_fmt_float@@Base+0x453>
  427072:	mov    QWORD PTR [rsp+0x50],rdi
  427077:	mov    QWORD PTR [rsp+0x58],rbp
  42707c:	movsxd rdx,r15d
  42707f:	mov    ecx,DWORD PTR [rcx+rdx*4]
  427082:	add    r15d,0xffffffff
  427086:	mov    r13d,0x1
  42708c:	mov    esi,0xcccccccd
  427091:	jmp    4270b2 <flatcc_json_printer_fmt_float@@Base+0x422>
  427093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42709d:	nop    DWORD PTR [rax]
  4270a0:	mov    ecx,ecx
  4270a2:	imul   rcx,rsi
  4270a6:	shr    rcx,0x23
  4270aa:	add    r13,0x1
  4270ae:	add    r15d,0xffffffff
  4270b2:	xor    edx,edx
  4270b4:	div    ecx
  4270b6:	add    al,0x30
  4270b8:	mov    rdi,QWORD PTR [rsp]
  4270bc:	mov    BYTE PTR [rdi+r13*1-0x1],al
  4270c1:	mov    eax,edx
  4270c3:	shlx   rbp,rax,r11
  4270c8:	lea    rdx,[r8+rbp*1]
  4270cc:	mov    rbx,r14
  4270cf:	sub    rbx,rdx
  4270d2:	ja     427223 <flatcc_json_printer_fmt_float@@Base+0x593>
  4270d8:	lea    edx,[r15+0x1]
  4270dc:	cmp    edx,0x2
  4270df:	jge    4270a0 <flatcc_json_printer_fmt_float@@Base+0x410>
  4270e1:	jmp    4270e6 <flatcc_json_printer_fmt_float@@Base+0x456>
  4270e3:	xor    r13d,r13d
  4270e6:	mov    eax,0x1
  4270eb:	shlx   r10,rax,r11
  4270f0:	lea    rsi,[r10-0x1]
  4270f4:	mov    r9d,0xffffffff
  4270fa:	mov    eax,r13d
  4270fd:	shl    r13,0x20
  427101:	movabs rcx,0xffffffff00000000
  42710b:	add    rcx,r13
  42710e:	mov    edx,0x1
  427113:	mov    r13,rax
  427116:	mov    rbp,QWORD PTR [rsp]
  42711a:	mov    r12,QWORD PTR [rsp+0x8]
  42711f:	nop
  427120:	mov    rax,rdx
  427123:	add    r8,r8
  427126:	lea    r8,[r8+r8*4]
  42712a:	lea    rdx,[rdx+rdx*1]
  42712e:	lea    rdx,[rdx+rdx*4]
  427132:	mov    rdi,r14
  427135:	add    rdi,r14
  427138:	lea    r14,[rdi+rdi*4]
  42713c:	shrx   rbx,r8,r11
  427141:	add    bl,0x30
  427144:	mov    BYTE PTR [rbp+r13*1+0x0],bl
  427149:	add    r13,0x1
  42714d:	and    r8,rsi
  427150:	add    r15d,0xffffffff
  427154:	mov    rbx,r14
  427157:	add    rcx,r9
  42715a:	add    rcx,0x1
  42715e:	sub    rbx,r8
  427161:	jbe    427120 <flatcc_json_printer_fmt_float@@Base+0x490>
  427163:	mov    esi,DWORD PTR [rsp+0x10]
  427167:	cmp    esi,DWORD PTR [rsp+0x14]
  42716b:	mov    rsi,QWORD PTR [rsp+0x30]
  427170:	jne    4279d5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  427176:	sub    r12,rsi
  427179:	jb     4279d5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  42717f:	imul   r12,rdx
  427183:	lea    r9,[r12+rdx*1]
  427187:	cmp    rbx,r10
  42718a:	setb   bl
  42718d:	jb     427355 <flatcc_json_printer_fmt_float@@Base+0x6c5>
  427193:	sub    r12,rdx
  427196:	mov    rbp,r12
  427199:	sub    rbp,r8
  42719c:	jbe    427355 <flatcc_json_printer_fmt_float@@Base+0x6c5>
  4271a2:	sar    rcx,0x20
  4271a6:	lea    rdi,[rdi+rdi*4]
  4271aa:	lea    rdx,[r10+r8*1]
  4271ae:	sub    rdi,rdx
  4271b1:	mov    rdx,QWORD PTR [rsp+0x28]
  4271b6:	add    rdx,QWORD PTR [rsp+0x20]
  4271bb:	add    rdx,QWORD PTR [rsp+0x18]
  4271c0:	add    rdx,QWORD PTR [rsp+0x38]
  4271c5:	add    rdx,rdx
  4271c8:	lea    rdx,[rdx+rdx*4]
  4271cc:	add    rsi,rsi
  4271cf:	lea    r11,[rsi+rsi*4]
  4271d3:	sub    r11,rdx
  4271d6:	imul   r11,rax
  4271da:	add    r11,r10
  4271dd:	nop    DWORD PTR [rax]
  4271e0:	lea    rsi,[r8+r10*1]
  4271e4:	cmp    rsi,r12
  4271e7:	jb     4271f6 <flatcc_json_printer_fmt_float@@Base+0x566>
  4271e9:	lea    rdx,[r11+r8*1]
  4271ed:	cmp    rbp,rdx
  4271f0:	jb     427353 <flatcc_json_printer_fmt_float@@Base+0x6c3>
  4271f6:	mov    rdx,QWORD PTR [rsp]
  4271fa:	add    BYTE PTR [rdx+rcx*1],0xff
  4271fe:	mov    rdx,rdi
  427201:	sub    rdx,r10
  427204:	setb   bl
  427207:	cmp    rsi,r12
  42720a:	jae    427358 <flatcc_json_printer_fmt_float@@Base+0x6c8>
  427210:	sub    rbp,r10
  427213:	mov    r8,rsi
  427216:	cmp    rdi,r10
  427219:	mov    rdi,rdx
  42721c:	jae    4271e0 <flatcc_json_printer_fmt_float@@Base+0x550>
  42721e:	jmp    427358 <flatcc_json_printer_fmt_float@@Base+0x6c8>
  427223:	mov    eax,DWORD PTR [rsp+0x10]
  427227:	cmp    eax,DWORD PTR [rsp+0x14]
  42722b:	mov    rsi,QWORD PTR [rsp+0x30]
  427230:	mov    rdi,QWORD PTR [rsp+0x8]
  427235:	jne    4279d5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  42723b:	sub    rdi,rsi
  42723e:	jb     4279d5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  427244:	mov    eax,ecx
  427246:	shlx   rax,rax,r11
  42724b:	lea    r11,[rdi-0x1]
  42724f:	add    rdi,0x1
  427253:	mov    QWORD PTR [rsp+0x8],rdi
  427258:	cmp    rbx,rax
  42725b:	setb   dil
  42725f:	cmp    r11,rdx
  427262:	jbe    427345 <flatcc_json_printer_fmt_float@@Base+0x6b5>
  427268:	cmp    rbx,rax
  42726b:	jb     427345 <flatcc_json_printer_fmt_float@@Base+0x6b5>
  427271:	mov    rdi,QWORD PTR [rsp+0x68]
  427276:	mov    rsi,rdi
  427279:	sub    rsi,QWORD PTR [rsp+0x80]
  427281:	mov    rcx,QWORD PTR [rsp+0x20]
  427286:	mov    rbx,QWORD PTR [rsp+0x28]
  42728b:	lea    rcx,[rbx+rcx*1]
  42728f:	add    rcx,QWORD PTR [rsp+0x18]
  427294:	imul   rsi,r12
  427298:	lea    rbx,[rsi+rcx*1]
  42729c:	add    rbx,0x2
  4272a0:	sub    rbx,QWORD PTR [rsp+0x70]
  4272a5:	sub    rbx,QWORD PTR [rsp+0x78]
  4272aa:	sub    rbx,QWORD PTR [rsp+0x60]
  4272af:	lea    rsi,[r8+rax*1]
  4272b3:	add    rsi,rbp
  4272b6:	sub    rbx,rsi
  4272b9:	mov    rsi,QWORD PTR [rsp+0x58]
  4272be:	add    rsi,r8
  4272c1:	add    rsi,QWORD PTR [rsp+0x50]
  4272c6:	add    rsi,r9
  4272c9:	sub    r10,rdi
  4272cc:	imul   r10,r12
  4272d0:	add    r10,rsi
  4272d3:	sub    r10,QWORD PTR [rsp+0x28]
  4272d8:	sub    r10,QWORD PTR [rsp+0x20]
  4272dd:	sub    r10,QWORD PTR [rsp+0x18]
  4272e2:	add    rcx,QWORD PTR [rsp+0x38]
  4272e7:	sub    rcx,QWORD PTR [rsp+0x30]
  4272ec:	add    r10,rbp
  4272ef:	add    rbp,r8
  4272f2:	sub    rcx,rbp
  4272f5:	mov    r9,QWORD PTR [rsp]
  4272f9:	mov    r8,QWORD PTR [rsp+0x8]
  4272fe:	xchg   ax,ax
  427300:	lea    rbp,[rdx+rax*1]
  427304:	cmp    rbp,r11
  427307:	jb     427316 <flatcc_json_printer_fmt_float@@Base+0x686>
  427309:	lea    rsi,[rax+r10*1]
  42730d:	cmp    rcx,rsi
  427310:	jb     4273c2 <flatcc_json_printer_fmt_float@@Base+0x732>
  427316:	add    BYTE PTR [r9+r13*1-0x1],0xff
  42731c:	mov    rsi,rbx
  42731f:	sub    rsi,rax
  427322:	setb   dil
  427326:	cmp    rbp,r11
  427329:	jae    4273c7 <flatcc_json_printer_fmt_float@@Base+0x737>
  42732f:	add    r10,rax
  427332:	sub    rcx,rax
  427335:	mov    rdx,rbp
  427338:	cmp    rbx,rax
  42733b:	mov    rbx,rsi
  42733e:	jae    427300 <flatcc_json_printer_fmt_float@@Base+0x670>
  427340:	jmp    4273c7 <flatcc_json_printer_fmt_float@@Base+0x737>
  427345:	mov    rbp,rdx
  427348:	mov    r9,QWORD PTR [rsp]
  42734c:	mov    r8,QWORD PTR [rsp+0x8]
  427351:	jmp    4273c7 <flatcc_json_printer_fmt_float@@Base+0x737>
  427353:	xor    ebx,ebx
  427355:	mov    rsi,r8
  427358:	mov    rcx,r9
  42735b:	sub    rcx,rsi
  42735e:	jbe    427393 <flatcc_json_printer_fmt_float@@Base+0x703>
  427360:	test   bl,bl
  427362:	jne    427393 <flatcc_json_printer_fmt_float@@Base+0x703>
  427364:	add    r10,rsi
  427367:	sub    r10,r9
  42736a:	mov    r9,QWORD PTR [rsp]
  42736e:	jb     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  427374:	lea    rdx,[rax*4+0x0]
  42737c:	lea    rdx,[rdx+rdx*4]
  427380:	cmp    rdx,rsi
  427383:	ja     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  427389:	cmp    rcx,r10
  42738c:	jbe    4273ac <flatcc_json_printer_fmt_float@@Base+0x71c>
  42738e:	jmp    427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  427393:	lea    rcx,[rax*4+0x0]
  42739b:	lea    rcx,[rcx+rcx*4]
  42739f:	cmp    rcx,rsi
  4273a2:	mov    r9,QWORD PTR [rsp]
  4273a6:	ja     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273ac:	lea    rax,[rax+rax*4]
  4273b0:	shl    rax,0x3
  4273b4:	sub    r14,rax
  4273b7:	cmp    rsi,r14
  4273ba:	ja     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273c0:	jmp    4273f8 <flatcc_json_printer_fmt_float@@Base+0x768>
  4273c2:	xor    edi,edi
  4273c4:	mov    rbp,rdx
  4273c7:	mov    rcx,r8
  4273ca:	sub    rcx,rbp
  4273cd:	jbe    4273e9 <flatcc_json_printer_fmt_float@@Base+0x759>
  4273cf:	test   dil,dil
  4273d2:	jne    4273e9 <flatcc_json_printer_fmt_float@@Base+0x759>
  4273d4:	add    rax,rbp
  4273d7:	sub    rax,r8
  4273da:	jb     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273dc:	cmp    rbp,0x2
  4273e0:	jb     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273e2:	cmp    rcx,rax
  4273e5:	jbe    4273ef <flatcc_json_printer_fmt_float@@Base+0x75f>
  4273e7:	jmp    427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273e9:	cmp    rbp,0x2
  4273ed:	jb     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273ef:	add    r14,0xfffffffffffffffc
  4273f3:	cmp    rbp,r14
  4273f6:	ja     427455 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4273f8:	mov    rax,QWORD PTR [rsp+0x48]
  4273fd:	lea    rcx,[rip+0x1252c]        # 439930 <flatcc_builder_padding_base@@Base+0x2d90>
  427404:	movsx  r14d,WORD PTR [rax+rcx*1+0x1a]
  42740a:	mov    ebp,r15d
  42740d:	sub    ebp,r14d
  427410:	mov    edx,ebp
  427412:	neg    edx
  427414:	lea    ecx,[r13-0x1]
  427418:	cmp    r13d,0x3
  42741c:	mov    eax,0x1
  427421:	cmovge eax,ecx
  427424:	cmp    eax,edx
  427426:	cmovg  eax,edx
  427429:	test   ebp,ebp
  42742b:	js     427475 <flatcc_json_printer_fmt_float@@Base+0x7e5>
  42742d:	cmp    ebp,0x3
  427430:	jb     4274f5 <flatcc_json_printer_fmt_float@@Base+0x865>
  427436:	movsxd rax,r13d
  427439:	mov    BYTE PTR [r9+rax*1],0x65
  42743e:	movsxd rax,r13d
  427441:	lea    r13d,[r13+0x1]
  427445:	lea    r8,[r9+rax*1]
  427449:	add    r8,0x1
  42744d:	mov    rcx,r8
  427450:	jmp    4275e5 <flatcc_json_printer_fmt_float@@Base+0x955>
  427455:	lea    rsi,[rip+0x12d07]        # 43a163 <flatcc_builder_padding_base@@Base+0x35c3>
  42745c:	mov    al,0x1
  42745e:	mov    rdi,r9
  427461:	call   406120 <sprintf@plt>
  427466:	mov    rbx,QWORD PTR [rsp]
  42746a:	sub    ebx,DWORD PTR [rsp+0x40]
  42746e:	add    ebx,eax
  427470:	jmp    4277c9 <flatcc_json_printer_fmt_float@@Base+0xb39>
  427475:	cmp    r13d,edx
  427478:	jg     42754d <flatcc_json_printer_fmt_float@@Base+0x8bd>
  42747e:	lea    ecx,[rbp+r13*1+0x0]
  427483:	cmp    ecx,0xfffffffe
  427486:	jl     42754d <flatcc_json_printer_fmt_float@@Base+0x8bd>
  42748c:	lea    rbx,[r9+0x2]
  427490:	movsxd rax,ebp
  427493:	mov    rdi,rbx
  427496:	sub    rdi,rax
  427499:	movsxd rdx,r13d
  42749c:	sub    rdi,rdx
  42749f:	mov    rsi,r9
  4274a2:	call   406110 <memmove@plt>
  4274a7:	mov    r9,QWORD PTR [rsp]
  4274ab:	mov    WORD PTR [r9],0x2e30
  4274b1:	mov    eax,0x2
  4274b6:	mov    ecx,0x2
  4274bb:	sub    ecx,r13d
  4274be:	sub    ecx,ebp
  4274c0:	cmp    ecx,0x3
  4274c3:	jl     4274ea <flatcc_json_printer_fmt_float@@Base+0x85a>
  4274c5:	not    r15d
  4274c8:	add    r15d,r14d
  4274cb:	sub    r15d,r13d
  4274ce:	lea    rdx,[r15+0x1]
  4274d2:	mov    esi,0x30
  4274d7:	mov    rdi,rbx
  4274da:	call   406080 <memset@plt>
  4274df:	mov    r9,QWORD PTR [rsp]
  4274e3:	add    r15d,0x3
  4274e7:	mov    eax,r15d
  4274ea:	add    eax,r13d
  4274ed:	mov    r13d,eax
  4274f0:	jmp    4277b7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  4274f5:	test   ebp,ebp
  4274f7:	je     4277b7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  4274fd:	movsxd r13,r13d
  427500:	lea    rdi,[r9+r13*1]
  427504:	mov    eax,r15d
  427507:	not    eax
  427509:	add    eax,r14d
  42750c:	cmp    eax,0xfffffffd
  42750f:	mov    ebx,0xfffffffe
  427514:	cmovle eax,ebx
  427517:	lea    edx,[r15+rax*1]
  42751b:	add    edx,0x1
  42751e:	sub    edx,r14d
  427521:	add    rdx,0x1
  427525:	mov    esi,0x30
  42752a:	call   406080 <memset@plt>
  42752f:	mov    eax,ebp
  427531:	not    eax
  427533:	cmp    eax,0xfffffffd
  427536:	cmovle eax,ebx
  427539:	lea    eax,[rax+rbp*1]
  42753c:	add    eax,0x2
  42753f:	cmp    eax,0x10
  427542:	jae    427581 <flatcc_json_printer_fmt_float@@Base+0x8f1>
  427544:	mov    r9,QWORD PTR [rsp]
  427548:	jmp    4277a8 <flatcc_json_printer_fmt_float@@Base+0xb18>
  42754d:	cmp    r13d,0x2
  427551:	jl     4275c1 <flatcc_json_printer_fmt_float@@Base+0x931>
  427553:	test   eax,eax
  427555:	jle    427841 <flatcc_json_printer_fmt_float@@Base+0xbb1>
  42755b:	movsxd rdx,eax
  42755e:	lea    rsi,[rdx-0x1]
  427562:	mov    ecx,eax
  427564:	and    ecx,0x7
  427567:	cmp    rsi,0x7
  42756b:	jae    4277e0 <flatcc_json_printer_fmt_float@@Base+0xb50>
  427571:	xor    edx,edx
  427573:	test   rcx,rcx
  427576:	jne    427822 <flatcc_json_printer_fmt_float@@Base+0xb92>
  42757c:	jmp    427841 <flatcc_json_printer_fmt_float@@Base+0xbb1>
  427581:	mov    ecx,eax
  427583:	and    ecx,0xfffffff0
  427586:	vmovq  xmm0,r13
  42758b:	lea    edi,[rcx-0x10]
  42758e:	mov    esi,edi
  427590:	shr    esi,0x4
  427593:	add    esi,0x1
  427596:	mov    edx,esi
  427598:	and    edx,0x7
  42759b:	cmp    edi,0x70
  42759e:	jae    427724 <flatcc_json_printer_fmt_float@@Base+0xa94>
  4275a4:	vpxor  xmm1,xmm1,xmm1
  4275a8:	vxorpd xmm2,xmm2,xmm2
  4275ac:	vxorpd xmm3,xmm3,xmm3
  4275b0:	mov    r9,QWORD PTR [rsp]
  4275b4:	test   edx,edx
  4275b6:	jne    427763 <flatcc_json_printer_fmt_float@@Base+0xad3>
  4275bc:	jmp    42777e <flatcc_json_printer_fmt_float@@Base+0xaee>
  4275c1:	movsxd rax,r13d
  4275c4:	movsxd rcx,r13d
  4275c7:	lea    r13,[rax+0x1]
  4275cb:	mov    BYTE PTR [r9+rcx*1],0x65
  4275d0:	lea    r8,[r9+rax*1+0x1]
  4275d5:	lea    rcx,[r9+rax*1]
  4275d9:	add    rcx,0x2
  4275dd:	mov    BYTE PTR [r9+rax*1+0x1],0x2d
  4275e3:	mov    ebp,edx
  4275e5:	mov    rdx,rcx
  4275e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4275f0:	movsxd rax,ebp
  4275f3:	imul   rbp,rax,0x66666667
  4275fa:	mov    rsi,rbp
  4275fd:	shr    rsi,0x3f
  427601:	sar    rbp,0x22
  427605:	add    ebp,esi
  427607:	lea    esi,[rbp+rbp*4+0x0]
  42760b:	add    esi,esi
  42760d:	mov    edi,eax
  42760f:	sub    edi,esi
  427611:	add    dil,0x30
  427615:	mov    BYTE PTR [rdx],dil
  427618:	add    rdx,0x1
  42761c:	add    eax,0x9
  42761f:	cmp    eax,0x12
  427622:	ja     4275f0 <flatcc_json_printer_fmt_float@@Base+0x960>
  427624:	mov    BYTE PTR [rdx],0x0
  427627:	mov    rbp,rdx
  42762a:	sub    rbp,rcx
  42762d:	cmp    ebp,0x2
  427630:	jl     427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  427636:	mov    r10d,0xffffffff
  42763c:	mov    rsi,rbp
  42763f:	shr    rsi,1
  427642:	mov    r9d,esi
  427645:	and    r9d,0x7fffffff
  42764c:	lea    rbx,[r9-0x1]
  427650:	and    esi,0x3
  427653:	cmp    rbx,0x3
  427657:	jae    427669 <flatcc_json_printer_fmt_float@@Base+0x9d9>
  427659:	xor    ebx,ebx
  42765b:	test   rsi,rsi
  42765e:	jne    4276ed <flatcc_json_printer_fmt_float@@Base+0xa5d>
  427664:	jmp    427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  427669:	sub    r9,rsi
  42766c:	xor    ebx,ebx
  42766e:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  427673:	mov    edi,ebx
  427675:	xor    edi,r10d
  427678:	add    edi,ebp
  42767a:	movsxd rdi,edi
  42767d:	movzx  eax,BYTE PTR [rcx+rdi*1]
  427681:	mov    BYTE PTR [rcx+rbx*1],al
  427684:	mov    BYTE PTR [rcx+rdi*1],r11b
  427688:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  42768e:	lea    edi,[r10-0x1]
  427692:	xor    edi,ebx
  427694:	add    edi,ebp
  427696:	movsxd rdi,edi
  427699:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42769d:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  4276a1:	mov    BYTE PTR [rcx+rdi*1],r11b
  4276a5:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  4276ab:	lea    edi,[r10-0x2]
  4276af:	xor    edi,ebx
  4276b1:	add    edi,ebp
  4276b3:	movsxd rdi,edi
  4276b6:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4276ba:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  4276be:	mov    BYTE PTR [rcx+rdi*1],r11b
  4276c2:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  4276c8:	lea    edi,[r10-0x3]
  4276cc:	xor    edi,ebx
  4276ce:	add    edi,ebp
  4276d0:	movsxd rdi,edi
  4276d3:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4276d7:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  4276db:	mov    BYTE PTR [rcx+rdi*1],r11b
  4276df:	add    rbx,0x4
  4276e3:	cmp    r9,rbx
  4276e6:	jne    42766e <flatcc_json_printer_fmt_float@@Base+0x9de>
  4276e8:	test   rsi,rsi
  4276eb:	je     427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  4276ed:	neg    rsi
  4276f0:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  4276f5:	mov    edi,ebx
  4276f7:	xor    edi,r10d
  4276fa:	lea    edi,[rdi+rbp*1]
  4276fd:	movsxd rdi,edi
  427700:	movzx  eax,BYTE PTR [rcx+rdi*1]
  427704:	mov    BYTE PTR [rcx+rbx*1],al
  427707:	mov    BYTE PTR [rcx+rdi*1],r9b
  42770b:	add    rbx,0x1
  42770f:	add    rsi,0x1
  427713:	jne    4276f0 <flatcc_json_printer_fmt_float@@Base+0xa60>
  427715:	sub    edx,r8d
  427718:	add    r13d,edx
  42771b:	mov    r9,QWORD PTR [rsp]
  42771f:	jmp    4277b7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  427724:	mov    edi,0x1
  427729:	sub    edi,esi
  42772b:	lea    esi,[rdx+rdi*1]
  42772e:	add    esi,0xffffffff
  427731:	vpxor  xmm1,xmm1,xmm1
  427735:	vpbroadcastq ymm4,QWORD PTR [rip+0xf6ca]        # 436e08 <flatcc_builder_padding_base@@Base+0x268>
  42773e:	vxorpd xmm2,xmm2,xmm2
  427742:	vxorpd xmm3,xmm3,xmm3
  427746:	mov    r9,QWORD PTR [rsp]
  42774a:	vpaddq ymm0,ymm0,ymm4
  42774e:	vpaddq ymm1,ymm1,ymm4
  427752:	vpaddq ymm2,ymm2,ymm4
  427756:	vpaddq ymm3,ymm3,ymm4
  42775a:	add    esi,0x8
  42775d:	jne    42774a <flatcc_json_printer_fmt_float@@Base+0xaba>
  42775f:	test   edx,edx
  427761:	je     42777e <flatcc_json_printer_fmt_float@@Base+0xaee>
  427763:	neg    edx
  427765:	vpcmpeqd ymm4,ymm4,ymm4
  427769:	vpsubq ymm0,ymm0,ymm4
  42776d:	vpsubq ymm1,ymm1,ymm4
  427771:	vpsubq ymm2,ymm2,ymm4
  427775:	vpsubq ymm3,ymm3,ymm4
  427779:	add    edx,0x1
  42777c:	jne    427769 <flatcc_json_printer_fmt_float@@Base+0xad9>
  42777e:	vpaddq ymm1,ymm1,ymm3
  427782:	vpaddq ymm0,ymm0,ymm2
  427786:	vpaddq ymm0,ymm0,ymm1
  42778a:	vextracti128 xmm1,ymm0,0x1
  427790:	vpaddq ymm0,ymm0,ymm1
  427794:	vpshufd xmm1,xmm0,0x4e
  427799:	vpaddq ymm0,ymm0,ymm1
  42779d:	vmovq  r13,xmm0
  4277a2:	cmp    eax,ecx
  4277a4:	je     4277b7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  4277a6:	sub    ebp,ecx
  4277a8:	add    ebp,0x1
  4277ab:	add    r13,0x1
  4277af:	add    ebp,0xffffffff
  4277b2:	cmp    ebp,0x1
  4277b5:	jg     4277ab <flatcc_json_printer_fmt_float@@Base+0xb1b>
  4277b7:	movsxd rax,r13d
  4277ba:	mov    BYTE PTR [r9+rax*1],0x0
  4277bf:	lea    rax,[r9+rax*1]
  4277c3:	sub    eax,DWORD PTR [rsp+0x40]
  4277c7:	mov    ebx,eax
  4277c9:	mov    eax,ebx
  4277cb:	add    rsp,0x88
  4277d2:	pop    rbx
  4277d3:	pop    r12
  4277d5:	pop    r13
  4277d7:	pop    r14
  4277d9:	pop    r15
  4277db:	pop    rbp
  4277dc:	vzeroupper 
  4277df:	ret    
  4277e0:	movsxd rsi,r13d
  4277e3:	add    rsi,r9
  4277e6:	mov    rdi,rcx
  4277e9:	sub    rdi,rdx
  4277ec:	xor    edx,edx
  4277ee:	movzx  ebx,BYTE PTR [rsi+rdx*1-0x1]
  4277f3:	mov    BYTE PTR [rsi+rdx*1],bl
  4277f6:	movzx  ebx,BYTE PTR [rsi+rdx*1-0x2]
  4277fb:	mov    BYTE PTR [rsi+rdx*1-0x1],bl
  4277ff:	movzx  ebx,WORD PTR [rsi+rdx*1-0x4]
  427804:	mov    WORD PTR [rsi+rdx*1-0x3],bx
  427809:	mov    ebx,DWORD PTR [rsi+rdx*1-0x8]
  42780d:	mov    DWORD PTR [rsi+rdx*1-0x7],ebx
  427811:	add    rdx,0xfffffffffffffff8
  427815:	cmp    rdi,rdx
  427818:	jne    4277ee <flatcc_json_printer_fmt_float@@Base+0xb5e>
  42781a:	neg    rdx
  42781d:	test   rcx,rcx
  427820:	je     427841 <flatcc_json_printer_fmt_float@@Base+0xbb1>
  427822:	movsxd rsi,r13d
  427825:	sub    rsi,rdx
  427828:	add    rsi,r9
  42782b:	neg    rcx
  42782e:	xor    edx,edx
  427830:	movzx  ebx,BYTE PTR [rsi+rdx*1-0x1]
  427835:	mov    BYTE PTR [rsi+rdx*1],bl
  427838:	add    rdx,0xffffffffffffffff
  42783c:	cmp    rcx,rdx
  42783f:	jne    427830 <flatcc_json_printer_fmt_float@@Base+0xba0>
  427841:	movsxd rdx,r13d
  427844:	lea    rcx,[rdx+0x1]
  427848:	mov    esi,r13d
  42784b:	sub    esi,eax
  42784d:	movsxd rsi,esi
  427850:	mov    BYTE PTR [r9+rsi*1],0x2e
  427855:	add    ebp,eax
  427857:	je     42786f <flatcc_json_printer_fmt_float@@Base+0xbdf>
  427859:	mov    BYTE PTR [r9+rcx*1],0x65
  42785e:	lea    r8,[r9+rdx*1]
  427862:	add    r8,0x2
  427866:	test   ebp,ebp
  427868:	js     427877 <flatcc_json_printer_fmt_float@@Base+0xbe7>
  42786a:	mov    rcx,r8
  42786d:	jmp    427881 <flatcc_json_printer_fmt_float@@Base+0xbf1>
  42786f:	mov    r13d,ecx
  427872:	jmp    4277b7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  427877:	lea    rcx,[r8+0x1]
  42787b:	mov    BYTE PTR [r8],0x2d
  42787f:	neg    ebp
  427881:	lea    r13d,[r13+0x2]
  427885:	mov    rdx,rcx
  427888:	movsxd rax,ebp
  42788b:	imul   rbp,rax,0x66666667
  427892:	mov    rsi,rbp
  427895:	shr    rsi,0x3f
  427899:	sar    rbp,0x22
  42789d:	add    ebp,esi
  42789f:	lea    esi,[rbp+rbp*4+0x0]
  4278a3:	add    esi,esi
  4278a5:	mov    edi,eax
  4278a7:	sub    edi,esi
  4278a9:	add    dil,0x30
  4278ad:	mov    BYTE PTR [rdx],dil
  4278b0:	add    rdx,0x1
  4278b4:	add    eax,0x9
  4278b7:	cmp    eax,0x12
  4278ba:	ja     427888 <flatcc_json_printer_fmt_float@@Base+0xbf8>
  4278bc:	mov    BYTE PTR [rdx],0x0
  4278bf:	mov    rbp,rdx
  4278c2:	sub    rbp,rcx
  4278c5:	cmp    ebp,0x2
  4278c8:	jl     427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  4278ce:	mov    r10d,0xffffffff
  4278d4:	mov    rsi,rbp
  4278d7:	shr    rsi,1
  4278da:	mov    r9d,esi
  4278dd:	and    r9d,0x7fffffff
  4278e4:	lea    rbx,[r9-0x1]
  4278e8:	and    esi,0x3
  4278eb:	cmp    rbx,0x3
  4278ef:	jae    427901 <flatcc_json_printer_fmt_float@@Base+0xc71>
  4278f1:	xor    ebx,ebx
  4278f3:	test   rsi,rsi
  4278f6:	jne    427989 <flatcc_json_printer_fmt_float@@Base+0xcf9>
  4278fc:	jmp    427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  427901:	sub    r9,rsi
  427904:	xor    ebx,ebx
  427906:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  42790b:	mov    edi,ebx
  42790d:	xor    edi,r10d
  427910:	add    edi,ebp
  427912:	movsxd rdi,edi
  427915:	movzx  eax,BYTE PTR [rcx+rdi*1]
  427919:	mov    BYTE PTR [rcx+rbx*1],al
  42791c:	mov    BYTE PTR [rcx+rdi*1],r11b
  427920:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  427926:	lea    edi,[r10-0x1]
  42792a:	xor    edi,ebx
  42792c:	add    edi,ebp
  42792e:	movsxd rdi,edi
  427931:	movzx  eax,BYTE PTR [rcx+rdi*1]
  427935:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  427939:	mov    BYTE PTR [rcx+rdi*1],r11b
  42793d:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  427943:	lea    edi,[r10-0x2]
  427947:	xor    edi,ebx
  427949:	add    edi,ebp
  42794b:	movsxd rdi,edi
  42794e:	movzx  eax,BYTE PTR [rcx+rdi*1]
  427952:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  427956:	mov    BYTE PTR [rcx+rdi*1],r11b
  42795a:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  427960:	lea    edi,[r10-0x3]
  427964:	xor    edi,ebx
  427966:	add    edi,ebp
  427968:	movsxd rdi,edi
  42796b:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42796f:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  427973:	mov    BYTE PTR [rcx+rdi*1],r11b
  427977:	add    rbx,0x4
  42797b:	cmp    r9,rbx
  42797e:	jne    427906 <flatcc_json_printer_fmt_float@@Base+0xc76>
  427980:	test   rsi,rsi
  427983:	je     427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  427989:	neg    rsi
  42798c:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  427991:	mov    edi,ebx
  427993:	xor    edi,r10d
  427996:	lea    edi,[rdi+rbp*1]
  427999:	movsxd rdi,edi
  42799c:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4279a0:	mov    BYTE PTR [rcx+rbx*1],al
  4279a3:	mov    BYTE PTR [rcx+rdi*1],r9b
  4279a7:	add    rbx,0x1
  4279ab:	add    rsi,0x1
  4279af:	jne    42798c <flatcc_json_printer_fmt_float@@Base+0xcfc>
  4279b1:	jmp    427715 <flatcc_json_printer_fmt_float@@Base+0xa85>
  4279b6:	lea    rdi,[rip+0x126fb]        # 43a0b8 <flatcc_builder_padding_base@@Base+0x3518>
  4279bd:	lea    rsi,[rip+0x126f8]        # 43a0bc <flatcc_builder_padding_base@@Base+0x351c>
  4279c4:	lea    rcx,[rip+0x12762]        # 43a12d <flatcc_builder_padding_base@@Base+0x358d>
  4279cb:	mov    edx,0xbd
  4279d0:	call   406070 <__assert_fail@plt>
  4279d5:	lea    rdi,[rip+0x127db]        # 43a1b7 <flatcc_builder_padding_base@@Base+0x3617>
  4279dc:	lea    rsi,[rip+0x11cc8]        # 4396ab <flatcc_builder_padding_base@@Base+0x2b0b>
  4279e3:	lea    rcx,[rip+0x127e6]        # 43a1d0 <flatcc_builder_padding_base@@Base+0x3630>
  4279ea:	mov    edx,0xef
  4279ef:	call   406070 <__assert_fail@plt>
  4279f4:	lea    rdi,[rip+0x1276e]        # 43a169 <flatcc_builder_padding_base@@Base+0x35c9>
  4279fb:	lea    rsi,[rip+0x126ba]        # 43a0bc <flatcc_builder_padding_base@@Base+0x351c>
  427a02:	lea    rcx,[rip+0x12785]        # 43a18e <flatcc_builder_padding_base@@Base+0x35ee>
  427a09:	mov    edx,0x8a
  427a0e:	call   406070 <__assert_fail@plt>
  427a13:	lea    rdi,[rip+0x11c88]        # 4396a2 <flatcc_builder_padding_base@@Base+0x2b02>
  427a1a:	lea    rsi,[rip+0x11c8a]        # 4396ab <flatcc_builder_padding_base@@Base+0x2b0b>
  427a21:	lea    rcx,[rip+0x11cf3]        # 43971b <flatcc_builder_padding_base@@Base+0x2b7b>
  427a28:	mov    edx,0x104
  427a2d:	call   406070 <__assert_fail@plt>
  427a32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a3c:	nop    DWORD PTR [rax+0x0]

0000000000427a40 <flatcc_json_printer_fmt_double@@Base>:
  427a40:	jmp    426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  427a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a4f:	nop

0000000000427a50 <flatcc_json_printer_fmt_bool@@Base>:
  427a50:	test   esi,esi
  427a52:	je     427a60 <flatcc_json_printer_fmt_bool@@Base+0x10>
  427a54:	mov    DWORD PTR [rdi],0x65757274
  427a5a:	mov    eax,0x4
  427a5f:	ret    
  427a60:	mov    BYTE PTR [rdi+0x4],0x65
  427a64:	mov    DWORD PTR [rdi],0x736c6166
  427a6a:	mov    eax,0x5
  427a6f:	ret    

0000000000427a70 <flatcc_json_printer_string@@Base>:
  427a70:	movsxd rdx,edx
  427a73:	jmp    427a80 <flatcc_json_printer_string@@Base+0x10>
  427a75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a7f:	nop
  427a80:	push   rbp
  427a81:	push   r15
  427a83:	push   r14
  427a85:	push   r13
  427a87:	push   r12
  427a89:	push   rbx
  427a8a:	sub    rsp,0x18
  427a8e:	mov    r8,rdx
  427a91:	mov    r13,rsi
  427a94:	mov    r15,rdi
  427a97:	lea    rax,[rdi+0x28]
  427a9b:	mov    QWORD PTR [rsp],rax
  427a9f:	mov    rax,QWORD PTR [rdi+0x28]
  427aa3:	lea    rcx,[rax+0x1]
  427aa7:	mov    QWORD PTR [rdi+0x28],rcx
  427aab:	mov    BYTE PTR [rax],0x22
  427aae:	jmp    427abb <flatcc_json_printer_string@@Base+0x4b>
  427ab0:	add    r14,0x1
  427ab4:	add    r8,0xffffffffffffffff
  427ab8:	mov    r13,r14
  427abb:	mov    r12b,BYTE PTR [r13+0x0]
  427abf:	mov    r14,r13
  427ac2:	cmp    r12b,0x20
  427ac6:	jb     427aeb <flatcc_json_printer_string@@Base+0x7b>
  427ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  427ad0:	cmp    r12b,0x22
  427ad4:	je     427aeb <flatcc_json_printer_string@@Base+0x7b>
  427ad6:	cmp    r12b,0x5c
  427ada:	je     427aeb <flatcc_json_printer_string@@Base+0x7b>
  427adc:	movzx  r12d,BYTE PTR [r14+0x1]
  427ae1:	add    r14,0x1
  427ae5:	cmp    r12b,0x1f
  427ae9:	ja     427ad0 <flatcc_json_printer_string@@Base+0x60>
  427aeb:	mov    rbx,r14
  427aee:	sub    rbx,r13
  427af1:	mov    rbp,QWORD PTR [r15+0x20]
  427af5:	mov    rdi,QWORD PTR [r15+0x28]
  427af9:	lea    rax,[rdi+rbx*1]
  427afd:	cmp    rax,rbp
  427b00:	jae    427b20 <flatcc_json_printer_string@@Base+0xb0>
  427b02:	mov    rsi,r13
  427b05:	mov    rbp,rbx
  427b08:	mov    rdx,rbx
  427b0b:	mov    rbx,r8
  427b0e:	call   4060e0 <memcpy@plt>
  427b13:	mov    rdi,QWORD PTR [rsp]
  427b17:	mov    r8,rbx
  427b1a:	mov    rbx,rbp
  427b1d:	jmp    427b97 <flatcc_json_printer_string@@Base+0x127>
  427b1f:	nop
  427b20:	cmp    rdi,rbp
  427b23:	mov    QWORD PTR [rsp+0x10],r8
  427b28:	jb     427b3b <flatcc_json_printer_string@@Base+0xcb>
  427b2a:	xor    esi,esi
  427b2c:	mov    rdi,r15
  427b2f:	call   QWORD PTR [r15+0x48]
  427b33:	mov    rbp,QWORD PTR [r15+0x20]
  427b37:	mov    rdi,QWORD PTR [r15+0x28]
  427b3b:	sub    rbp,rdi
  427b3e:	cmp    rbp,rbx
  427b41:	mov    QWORD PTR [rsp+0x8],rbx
  427b46:	jae    427b7e <flatcc_json_printer_string@@Base+0x10e>
  427b48:	nop    DWORD PTR [rax+rax*1+0x0]
  427b50:	mov    rsi,r13
  427b53:	mov    rdx,rbp
  427b56:	call   4060e0 <memcpy@plt>
  427b5b:	add    QWORD PTR [r15+0x28],rbp
  427b5f:	add    r13,rbp
  427b62:	sub    rbx,rbp
  427b65:	xor    esi,esi
  427b67:	mov    rdi,r15
  427b6a:	call   QWORD PTR [r15+0x48]
  427b6e:	mov    rbp,QWORD PTR [r15+0x20]
  427b72:	mov    rdi,QWORD PTR [r15+0x28]
  427b76:	sub    rbp,rdi
  427b79:	cmp    rbx,rbp
  427b7c:	ja     427b50 <flatcc_json_printer_string@@Base+0xe0>
  427b7e:	mov    rsi,r13
  427b81:	mov    rdx,rbx
  427b84:	call   4060e0 <memcpy@plt>
  427b89:	mov    r8,QWORD PTR [rsp+0x10]
  427b8e:	mov    rdi,QWORD PTR [rsp]
  427b92:	mov    rbp,QWORD PTR [rsp+0x8]
  427b97:	mov    rcx,QWORD PTR [rdi]
  427b9a:	lea    rax,[rcx+rbx*1]
  427b9e:	add    rcx,rbx
  427ba1:	add    rcx,0x1
  427ba5:	mov    QWORD PTR [rdi],rcx
  427ba8:	sub    r8,rbp
  427bab:	je     427cbb <flatcc_json_printer_string@@Base+0x24b>
  427bb1:	mov    BYTE PTR [rax],0x5c
  427bb4:	mov    eax,r12d
  427bb7:	add    al,0xf8
  427bb9:	cmp    al,0x1a
  427bbb:	ja     427be2 <flatcc_json_printer_string@@Base+0x172>
  427bbd:	movzx  eax,al
  427bc0:	lea    rcx,[rip+0x11c69]        # 439830 <flatcc_builder_padding_base@@Base+0x2c90>
  427bc7:	movsxd rax,DWORD PTR [rcx+rax*4]
  427bcb:	add    rax,rcx
  427bce:	jmp    rax
  427bd0:	mov    rax,QWORD PTR [rdi]
  427bd3:	lea    rcx,[rax+0x1]
  427bd7:	mov    QWORD PTR [rdi],rcx
  427bda:	mov    BYTE PTR [rax],0x62
  427bdd:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427be2:	cmp    r12b,0x5c
  427be6:	jne    427bfa <flatcc_json_printer_string@@Base+0x18a>
  427be8:	mov    rax,QWORD PTR [rdi]
  427beb:	lea    rcx,[rax+0x1]
  427bef:	mov    QWORD PTR [rdi],rcx
  427bf2:	mov    BYTE PTR [rax],0x5c
  427bf5:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427bfa:	mov    rax,QWORD PTR [rdi]
  427bfd:	lea    rcx,[rax+0x1]
  427c01:	mov    QWORD PTR [rdi],rcx
  427c04:	mov    BYTE PTR [rax],0x75
  427c07:	mov    rax,QWORD PTR [rdi]
  427c0a:	lea    rcx,[rax+0x1]
  427c0e:	mov    QWORD PTR [rdi],rcx
  427c11:	mov    BYTE PTR [rax],0x30
  427c14:	mov    rax,QWORD PTR [rdi]
  427c17:	lea    rcx,[rax+0x1]
  427c1b:	mov    QWORD PTR [rdi],rcx
  427c1e:	mov    BYTE PTR [rax],0x30
  427c21:	mov    ecx,r12d
  427c24:	shr    cl,0x4
  427c27:	mov    al,0x30
  427c29:	mov    dl,0x30
  427c2b:	cmp    r12b,0xa0
  427c2f:	jb     427c33 <flatcc_json_printer_string@@Base+0x1c3>
  427c31:	mov    dl,0x57
  427c33:	add    dl,cl
  427c35:	mov    rcx,QWORD PTR [rdi]
  427c38:	lea    rsi,[rcx+0x1]
  427c3c:	mov    QWORD PTR [rdi],rsi
  427c3f:	mov    BYTE PTR [rcx],dl
  427c41:	and    r12b,0xf
  427c45:	cmp    r12b,0xa
  427c49:	jb     427c4d <flatcc_json_printer_string@@Base+0x1dd>
  427c4b:	mov    al,0x57
  427c4d:	add    al,r12b
  427c50:	mov    rcx,QWORD PTR [rdi]
  427c53:	lea    rdx,[rcx+0x1]
  427c57:	mov    QWORD PTR [rdi],rdx
  427c5a:	mov    BYTE PTR [rcx],al
  427c5c:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427c61:	mov    rax,QWORD PTR [rdi]
  427c64:	lea    rcx,[rax+0x1]
  427c68:	mov    QWORD PTR [rdi],rcx
  427c6b:	mov    BYTE PTR [rax],0x74
  427c6e:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427c73:	mov    rax,QWORD PTR [rdi]
  427c76:	lea    rcx,[rax+0x1]
  427c7a:	mov    QWORD PTR [rdi],rcx
  427c7d:	mov    BYTE PTR [rax],0x6e
  427c80:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427c85:	mov    rax,QWORD PTR [rdi]
  427c88:	lea    rcx,[rax+0x1]
  427c8c:	mov    QWORD PTR [rdi],rcx
  427c8f:	mov    BYTE PTR [rax],0x66
  427c92:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427c97:	mov    rax,QWORD PTR [rdi]
  427c9a:	lea    rcx,[rax+0x1]
  427c9e:	mov    QWORD PTR [rdi],rcx
  427ca1:	mov    BYTE PTR [rax],0x72
  427ca4:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427ca9:	mov    rax,QWORD PTR [rdi]
  427cac:	lea    rcx,[rax+0x1]
  427cb0:	mov    QWORD PTR [rdi],rcx
  427cb3:	mov    BYTE PTR [rax],0x22
  427cb6:	jmp    427ab0 <flatcc_json_printer_string@@Base+0x40>
  427cbb:	mov    BYTE PTR [rax],0x22
  427cbe:	add    rsp,0x18
  427cc2:	pop    rbx
  427cc3:	pop    r12
  427cc5:	pop    r13
  427cc7:	pop    r14
  427cc9:	pop    r15
  427ccb:	pop    rbp
  427ccc:	ret    
  427ccd:	nop    DWORD PTR [rax]

0000000000427cd0 <flatcc_json_printer_write@@Base>:
  427cd0:	push   r15
  427cd2:	push   r14
  427cd4:	push   r12
  427cd6:	push   rbx
  427cd7:	push   rax
  427cd8:	mov    r12,rsi
  427cdb:	mov    r14,rdi
  427cde:	movsxd r15,edx
  427ce1:	mov    rbx,QWORD PTR [rdi+0x20]
  427ce5:	mov    rdi,QWORD PTR [rdi+0x28]
  427ce9:	lea    rax,[rdi+r15*1]
  427ced:	cmp    rax,rbx
  427cf0:	jb     427d3e <flatcc_json_printer_write@@Base+0x6e>
  427cf2:	cmp    rdi,rbx
  427cf5:	jb     427d08 <flatcc_json_printer_write@@Base+0x38>
  427cf7:	xor    esi,esi
  427cf9:	mov    rdi,r14
  427cfc:	call   QWORD PTR [r14+0x48]
  427d00:	mov    rbx,QWORD PTR [r14+0x20]
  427d04:	mov    rdi,QWORD PTR [r14+0x28]
  427d08:	sub    rbx,rdi
  427d0b:	cmp    rbx,r15
  427d0e:	jae    427d3e <flatcc_json_printer_write@@Base+0x6e>
  427d10:	mov    rsi,r12
  427d13:	mov    rdx,rbx
  427d16:	call   4060e0 <memcpy@plt>
  427d1b:	add    QWORD PTR [r14+0x28],rbx
  427d1f:	add    r12,rbx
  427d22:	sub    r15,rbx
  427d25:	xor    esi,esi
  427d27:	mov    rdi,r14
  427d2a:	call   QWORD PTR [r14+0x48]
  427d2e:	mov    rbx,QWORD PTR [r14+0x20]
  427d32:	mov    rdi,QWORD PTR [r14+0x28]
  427d36:	sub    rbx,rdi
  427d39:	cmp    r15,rbx
  427d3c:	ja     427d10 <flatcc_json_printer_write@@Base+0x40>
  427d3e:	mov    rsi,r12
  427d41:	mov    rdx,r15
  427d44:	call   4060e0 <memcpy@plt>
  427d49:	add    QWORD PTR [r14+0x28],r15
  427d4d:	add    rsp,0x8
  427d51:	pop    rbx
  427d52:	pop    r12
  427d54:	pop    r14
  427d56:	pop    r15
  427d58:	ret    
  427d59:	nop    DWORD PTR [rax+0x0]

0000000000427d60 <flatcc_json_printer_nl@@Base>:
  427d60:	mov    rax,QWORD PTR [rdi+0x28]
  427d64:	lea    rcx,[rax+0x1]
  427d68:	mov    QWORD PTR [rdi+0x28],rcx
  427d6c:	mov    BYTE PTR [rax],0xa
  427d6f:	mov    rax,QWORD PTR [rdi+0x28]
  427d73:	cmp    rax,QWORD PTR [rdi+0x20]
  427d77:	jae    427d7a <flatcc_json_printer_nl@@Base+0x1a>
  427d79:	ret    
  427d7a:	mov    rax,QWORD PTR [rdi+0x48]
  427d7e:	xor    esi,esi
  427d80:	jmp    rax
  427d82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d8c:	nop    DWORD PTR [rax+0x0]

0000000000427d90 <flatcc_json_printer_char@@Base>:
  427d90:	mov    rax,QWORD PTR [rdi+0x28]
  427d94:	lea    rcx,[rax+0x1]
  427d98:	mov    QWORD PTR [rdi+0x28],rcx
  427d9c:	mov    BYTE PTR [rax],sil
  427d9f:	ret    

0000000000427da0 <flatcc_json_printer_indent@@Base>:
  427da0:	push   r15
  427da2:	push   r14
  427da4:	push   rbx
  427da5:	mov    r14,rdi
  427da8:	movsxd rax,DWORD PTR [rdi+0x38]
  427dac:	movzx  r15d,BYTE PTR [rdi+0x31]
  427db1:	imul   r15,rax
  427db5:	mov    rbx,QWORD PTR [rdi+0x20]
  427db9:	mov    rdi,QWORD PTR [rdi+0x28]
  427dbd:	lea    rax,[rdi+r15*1]
  427dc1:	cmp    rax,rbx
  427dc4:	jbe    427e1d <flatcc_json_printer_indent@@Base+0x7d>
  427dc6:	cmp    rdi,rbx
  427dc9:	jb     427ddc <flatcc_json_printer_indent@@Base+0x3c>
  427dcb:	xor    esi,esi
  427dcd:	mov    rdi,r14
  427dd0:	call   QWORD PTR [r14+0x48]
  427dd4:	mov    rbx,QWORD PTR [r14+0x20]
  427dd8:	mov    rdi,QWORD PTR [r14+0x28]
  427ddc:	sub    rbx,rdi
  427ddf:	cmp    rbx,r15
  427de2:	jae    427e1d <flatcc_json_printer_indent@@Base+0x7d>
  427de4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427dee:	xchg   ax,ax
  427df0:	mov    esi,0x20
  427df5:	mov    rdx,rbx
  427df8:	call   406080 <memset@plt>
  427dfd:	add    QWORD PTR [r14+0x28],rbx
  427e01:	sub    r15,rbx
  427e04:	xor    esi,esi
  427e06:	mov    rdi,r14
  427e09:	call   QWORD PTR [r14+0x48]
  427e0d:	mov    rbx,QWORD PTR [r14+0x20]
  427e11:	mov    rdi,QWORD PTR [r14+0x28]
  427e15:	sub    rbx,rdi
  427e18:	cmp    r15,rbx
  427e1b:	ja     427df0 <flatcc_json_printer_indent@@Base+0x50>
  427e1d:	mov    esi,0x20
  427e22:	mov    rdx,r15
  427e25:	call   406080 <memset@plt>
  427e2a:	add    QWORD PTR [r14+0x28],r15
  427e2e:	pop    rbx
  427e2f:	pop    r14
  427e31:	pop    r15
  427e33:	ret    
  427e34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e3e:	xchg   ax,ax

0000000000427e40 <flatcc_json_printer_add_level@@Base>:
  427e40:	add    DWORD PTR [rdi+0x38],esi
  427e43:	ret    
  427e44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e4e:	xchg   ax,ax

0000000000427e50 <flatcc_json_printer_get_level@@Base>:
  427e50:	mov    eax,DWORD PTR [rdi+0x38]
  427e53:	ret    
  427e54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e5e:	xchg   ax,ax

0000000000427e60 <flatcc_json_printer_uint8@@Base>:
  427e60:	mov    rdx,QWORD PTR [rdi+0x28]
  427e64:	cmp    sil,0x64
  427e68:	jb     427ea8 <flatcc_json_printer_uint8@@Base+0x48>
  427e6a:	mov    BYTE PTR [rdx+0x3],0x0
  427e6e:	movzx  eax,sil
  427e72:	lea    ecx,[rax+rax*4]
  427e75:	lea    ecx,[rax+rcx*8]
  427e78:	shr    ecx,0xc
  427e7b:	mov    r8b,0x64
  427e7e:	mov    eax,ecx
  427e80:	mul    r8b
  427e83:	sub    sil,al
  427e86:	movzx  eax,sil
  427e8a:	lea    rsi,[rip+0x124ef]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  427e91:	movzx  eax,WORD PTR [rsi+rax*2]
  427e95:	mov    WORD PTR [rdx+0x1],ax
  427e99:	or     cl,0x30
  427e9c:	mov    BYTE PTR [rdx],cl
  427e9e:	mov    eax,0x3
  427ea3:	add    QWORD PTR [rdi+0x28],rax
  427ea7:	ret    
  427ea8:	cmp    sil,0xa
  427eac:	jb     427ee2 <flatcc_json_printer_uint8@@Base+0x82>
  427eae:	mov    BYTE PTR [rdx+0x2],0x0
  427eb2:	movzx  eax,sil
  427eb6:	lea    ecx,[rax+rax*4]
  427eb9:	lea    eax,[rax+rcx*8]
  427ebc:	shr    eax,0xc
  427ebf:	mov    cl,0x64
  427ec1:	mul    cl
  427ec3:	sub    sil,al
  427ec6:	movzx  eax,sil
  427eca:	lea    rcx,[rip+0x124af]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  427ed1:	movzx  eax,WORD PTR [rcx+rax*2]
  427ed5:	mov    WORD PTR [rdx],ax
  427ed8:	mov    eax,0x2
  427edd:	add    QWORD PTR [rdi+0x28],rax
  427ee1:	ret    
  427ee2:	mov    BYTE PTR [rdx+0x1],0x0
  427ee6:	add    sil,0x30
  427eea:	mov    BYTE PTR [rdx],sil
  427eed:	mov    eax,0x1
  427ef2:	add    QWORD PTR [rdi+0x28],rax
  427ef6:	ret    
  427ef7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427f00 <flatcc_json_printer_uint16@@Base>:
  427f00:	mov    rdx,QWORD PTR [rdi+0x28]
  427f04:	movzx  ecx,si
  427f07:	cmp    esi,0x3e8
  427f0d:	jb     427f1f <flatcc_json_printer_uint16@@Base+0x1f>
  427f0f:	xor    eax,eax
  427f11:	cmp    ecx,0x270f
  427f17:	seta   al
  427f1a:	or     eax,0x4
  427f1d:	jmp    427f44 <flatcc_json_printer_uint16@@Base+0x44>
  427f1f:	cmp    ecx,0x64
  427f22:	jb     427f39 <flatcc_json_printer_uint16@@Base+0x39>
  427f24:	mov    BYTE PTR [rdx+0x3],0x0
  427f28:	add    rdx,0x3
  427f2c:	mov    eax,0x3
  427f31:	mov    r8,rdx
  427f34:	jmp    427fef <flatcc_json_printer_uint16@@Base+0xef>
  427f39:	xor    eax,eax
  427f3b:	cmp    ecx,0x9
  427f3e:	seta   al
  427f41:	add    eax,0x1
  427f44:	mov    ecx,eax
  427f46:	lea    r8,[rdx+rcx*1]
  427f4a:	mov    BYTE PTR [rdx+rcx*1],0x0
  427f4e:	test   al,0x1
  427f50:	jne    427fb6 <flatcc_json_printer_uint16@@Base+0xb6>
  427f52:	cmp    al,0x2
  427f54:	je     427f8b <flatcc_json_printer_uint16@@Base+0x8b>
  427f56:	cmp    al,0x4
  427f58:	jne    428024 <flatcc_json_printer_uint16@@Base+0x124>
  427f5e:	movzx  ecx,si
  427f61:	mov    edx,ecx
  427f63:	shr    edx,0x2
  427f66:	imul   esi,edx,0x147b
  427f6c:	shr    esi,0x11
  427f6f:	imul   edx,esi,0x64
  427f72:	sub    ecx,edx
  427f74:	movzx  ecx,cx
  427f77:	lea    rdx,[rip+0x12402]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  427f7e:	movzx  ecx,WORD PTR [rdx+rcx*2]
  427f82:	mov    WORD PTR [r8-0x2],cx
  427f87:	lea    r8,[r8-0x2]
  427f8b:	movzx  ecx,si
  427f8e:	mov    edx,ecx
  427f90:	shr    edx,0x2
  427f93:	imul   edx,edx,0x147b
  427f99:	shr    edx,0x11
  427f9c:	imul   edx,edx,0x64
  427f9f:	sub    ecx,edx
  427fa1:	movzx  ecx,cx
  427fa4:	lea    rdx,[rip+0x123d5]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  427fab:	movzx  ecx,WORD PTR [rdx+rcx*2]
  427faf:	mov    WORD PTR [r8-0x2],cx
  427fb4:	jmp    428024 <flatcc_json_printer_uint16@@Base+0x124>
  427fb6:	cmp    al,0x1
  427fb8:	je     42801c <flatcc_json_printer_uint16@@Base+0x11c>
  427fba:	cmp    al,0x3
  427fbc:	je     427fef <flatcc_json_printer_uint16@@Base+0xef>
  427fbe:	cmp    al,0x5
  427fc0:	jne    428024 <flatcc_json_printer_uint16@@Base+0x124>
  427fc2:	movzx  ecx,si
  427fc5:	mov    edx,ecx
  427fc7:	shr    edx,0x2
  427fca:	imul   esi,edx,0x147b
  427fd0:	shr    esi,0x11
  427fd3:	imul   edx,esi,0x64
  427fd6:	sub    ecx,edx
  427fd8:	movzx  ecx,cx
  427fdb:	lea    rdx,[rip+0x1239e]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  427fe2:	movzx  ecx,WORD PTR [rdx+rcx*2]
  427fe6:	mov    WORD PTR [r8-0x2],cx
  427feb:	lea    r8,[r8-0x2]
  427fef:	movzx  ecx,si
  427ff2:	mov    edx,ecx
  427ff4:	shr    edx,0x2
  427ff7:	imul   esi,edx,0x147b
  427ffd:	shr    esi,0x11
  428000:	imul   edx,esi,0x64
  428003:	sub    ecx,edx
  428005:	movzx  ecx,cx
  428008:	lea    rdx,[rip+0x12371]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42800f:	movzx  ecx,WORD PTR [rdx+rcx*2]
  428013:	mov    WORD PTR [r8-0x2],cx
  428018:	lea    r8,[r8-0x2]
  42801c:	add    sil,0x30
  428020:	mov    BYTE PTR [r8-0x1],sil
  428024:	mov    eax,eax
  428026:	add    QWORD PTR [rdi+0x28],rax
  42802a:	ret    
  42802b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428030 <flatcc_json_printer_uint32@@Base>:
  428030:	push   rbx
  428031:	mov    rbx,rdi
  428034:	mov    rax,QWORD PTR [rdi+0x28]
  428038:	mov    edi,esi
  42803a:	mov    rsi,rax
  42803d:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  428042:	cdqe   
  428044:	add    QWORD PTR [rbx+0x28],rax
  428048:	pop    rbx
  428049:	ret    
  42804a:	nop    WORD PTR [rax+rax*1+0x0]
  428050:	cmp    edi,0x2710
  428056:	jb     42807c <flatcc_json_printer_uint32@@Base+0x4c>
  428058:	cmp    edi,0x989680
  42805e:	jb     428091 <flatcc_json_printer_uint32@@Base+0x61>
  428060:	cmp    edi,0x3b9aca00
  428066:	jb     4280bb <flatcc_json_printer_uint32@@Base+0x8b>
  428068:	mov    BYTE PTR [rsi+0xa],0x0
  42806c:	add    rsi,0xa
  428070:	mov    eax,0xa
  428075:	mov    dl,0xa
  428077:	mov    r8,rsi
  42807a:	jmp    4280ee <flatcc_json_printer_uint32@@Base+0xbe>
  42807c:	xor    edx,edx
  42807e:	cmp    edi,0x64
  428081:	jb     4280b0 <flatcc_json_printer_uint32@@Base+0x80>
  428083:	cmp    edi,0x3e7
  428089:	seta   dl
  42808c:	add    edx,0x3
  42808f:	jmp    4280d9 <flatcc_json_printer_uint32@@Base+0xa9>
  428091:	cmp    edi,0xf4240
  428097:	jb     4280cb <flatcc_json_printer_uint32@@Base+0x9b>
  428099:	mov    BYTE PTR [rsi+0x7],0x0
  42809d:	add    rsi,0x7
  4280a1:	mov    eax,0x7
  4280a6:	mov    dl,0x7
  4280a8:	mov    r8,rsi
  4280ab:	jmp    4281e1 <flatcc_json_printer_uint32@@Base+0x1b1>
  4280b0:	cmp    edi,0x9
  4280b3:	seta   dl
  4280b6:	add    edx,0x1
  4280b9:	jmp    4280d9 <flatcc_json_printer_uint32@@Base+0xa9>
  4280bb:	xor    edx,edx
  4280bd:	cmp    edi,0x5f5e0ff
  4280c3:	seta   dl
  4280c6:	or     edx,0x8
  4280c9:	jmp    4280d9 <flatcc_json_printer_uint32@@Base+0xa9>
  4280cb:	xor    edx,edx
  4280cd:	cmp    edi,0x1869f
  4280d3:	seta   dl
  4280d6:	add    edx,0x5
  4280d9:	mov    eax,edx
  4280db:	lea    r8,[rsi+rax*1]
  4280df:	mov    BYTE PTR [rsi+rax*1],0x0
  4280e3:	mov    eax,edx
  4280e5:	test   dl,0x1
  4280e8:	jne    4281e1 <flatcc_json_printer_uint32@@Base+0x1b1>
  4280ee:	mov    ecx,edx
  4280f0:	shr    cl,1
  4280f2:	shl    dl,0x3
  4280f5:	or     dl,cl
  4280f7:	xor    dl,0x4
  4280fa:	mov    ecx,edx
  4280fc:	shl    cl,0x4
  4280ff:	sar    cl,0x4
  428102:	js     4281e0 <flatcc_json_printer_uint32@@Base+0x1b0>
  428108:	movzx  ecx,dl
  42810b:	and    ecx,0xf
  42810e:	lea    rdx,[rip+0x117a7]        # 4398bc <flatcc_builder_padding_base@@Base+0x2d1c>
  428115:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  428119:	add    rcx,rdx
  42811c:	jmp    rcx
  42811e:	mov    ecx,edi
  428120:	imul   rcx,rcx,0x51eb851f
  428127:	shr    rcx,0x25
  42812b:	imul   edx,ecx,0x64
  42812e:	sub    edi,edx
  428130:	lea    rdx,[rip+0x12249]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428137:	movzx  edx,WORD PTR [rdx+rdi*2]
  42813b:	mov    WORD PTR [r8-0x2],dx
  428140:	add    r8,0xfffffffffffffffe
  428144:	mov    edi,ecx
  428146:	mov    ecx,edi
  428148:	imul   rcx,rcx,0x51eb851f
  42814f:	shr    rcx,0x25
  428153:	imul   edx,ecx,0x64
  428156:	sub    edi,edx
  428158:	lea    rdx,[rip+0x12221]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42815f:	movzx  edx,WORD PTR [rdx+rdi*2]
  428163:	mov    WORD PTR [r8-0x2],dx
  428168:	add    r8,0xfffffffffffffffe
  42816c:	mov    edi,ecx
  42816e:	mov    ecx,edi
  428170:	imul   rcx,rcx,0x51eb851f
  428177:	shr    rcx,0x25
  42817b:	imul   edx,ecx,0x64
  42817e:	sub    edi,edx
  428180:	lea    rdx,[rip+0x121f9]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428187:	movzx  edx,WORD PTR [rdx+rdi*2]
  42818b:	mov    WORD PTR [r8-0x2],dx
  428190:	add    r8,0xfffffffffffffffe
  428194:	mov    edi,ecx
  428196:	mov    ecx,edi
  428198:	imul   rcx,rcx,0x51eb851f
  42819f:	shr    rcx,0x25
  4281a3:	imul   edx,ecx,0x64
  4281a6:	sub    edi,edx
  4281a8:	lea    rdx,[rip+0x121d1]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4281af:	movzx  edx,WORD PTR [rdx+rdi*2]
  4281b3:	mov    WORD PTR [r8-0x2],dx
  4281b8:	add    r8,0xfffffffffffffffe
  4281bc:	mov    edi,ecx
  4281be:	mov    ecx,edi
  4281c0:	imul   rcx,rcx,0x51eb851f
  4281c7:	shr    rcx,0x25
  4281cb:	imul   ecx,ecx,0x64
  4281ce:	sub    edi,ecx
  4281d0:	lea    rcx,[rip+0x121a9]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4281d7:	movzx  ecx,WORD PTR [rcx+rdi*2]
  4281db:	mov    WORD PTR [r8-0x2],cx
  4281e0:	ret    
  4281e1:	add    dl,0x7
  4281e4:	mov    ecx,edx
  4281e6:	and    cl,0xe
  4281e9:	shr    cl,1
  4281eb:	shl    dl,0x3
  4281ee:	or     dl,cl
  4281f0:	mov    ecx,edx
  4281f2:	shl    cl,0x4
  4281f5:	sar    cl,0x4
  4281f8:	js     4281e0 <flatcc_json_printer_uint32@@Base+0x1b0>
  4281fa:	movzx  ecx,dl
  4281fd:	and    ecx,0xf
  428200:	lea    rdx,[rip+0x11695]        # 43989c <flatcc_builder_padding_base@@Base+0x2cfc>
  428207:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42820b:	add    rcx,rdx
  42820e:	jmp    rcx
  428210:	mov    ecx,edi
  428212:	imul   rcx,rcx,0x51eb851f
  428219:	shr    rcx,0x25
  42821d:	imul   edx,ecx,0x64
  428220:	sub    edi,edx
  428222:	lea    rdx,[rip+0x12157]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428229:	movzx  edx,WORD PTR [rdx+rdi*2]
  42822d:	mov    WORD PTR [r8-0x2],dx
  428232:	add    r8,0xfffffffffffffffe
  428236:	mov    edi,ecx
  428238:	mov    ecx,edi
  42823a:	imul   rcx,rcx,0x51eb851f
  428241:	shr    rcx,0x25
  428245:	imul   edx,ecx,0x64
  428248:	sub    edi,edx
  42824a:	lea    rdx,[rip+0x1212f]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428251:	movzx  edx,WORD PTR [rdx+rdi*2]
  428255:	mov    WORD PTR [r8-0x2],dx
  42825a:	add    r8,0xfffffffffffffffe
  42825e:	mov    edi,ecx
  428260:	mov    ecx,edi
  428262:	imul   rcx,rcx,0x51eb851f
  428269:	shr    rcx,0x25
  42826d:	imul   edx,ecx,0x64
  428270:	sub    edi,edx
  428272:	lea    rdx,[rip+0x12107]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428279:	movzx  edx,WORD PTR [rdx+rdi*2]
  42827d:	mov    WORD PTR [r8-0x2],dx
  428282:	add    r8,0xfffffffffffffffe
  428286:	mov    edi,ecx
  428288:	mov    ecx,edi
  42828a:	imul   rcx,rcx,0x51eb851f
  428291:	shr    rcx,0x25
  428295:	imul   edx,ecx,0x64
  428298:	sub    edi,edx
  42829a:	lea    rdx,[rip+0x120df]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4282a1:	movzx  edx,WORD PTR [rdx+rdi*2]
  4282a5:	mov    WORD PTR [r8-0x2],dx
  4282aa:	add    r8,0xfffffffffffffffe
  4282ae:	mov    edi,ecx
  4282b0:	add    dil,0x30
  4282b4:	mov    BYTE PTR [r8-0x1],dil
  4282b8:	ret    
  4282b9:	nop    DWORD PTR [rax+0x0]

00000000004282c0 <flatcc_json_printer_uint64@@Base>:
  4282c0:	push   rbx
  4282c1:	mov    rbx,rdi
  4282c4:	mov    rax,QWORD PTR [rdi+0x28]
  4282c8:	mov    rdi,rsi
  4282cb:	mov    rsi,rax
  4282ce:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  4282d3:	cdqe   
  4282d5:	add    QWORD PTR [rbx+0x28],rax
  4282d9:	pop    rbx
  4282da:	ret    
  4282db:	nop    DWORD PTR [rax+rax*1+0x0]
  4282e0:	cmp    rdi,0x3b9ac9ff
  4282e7:	ja     4282ee <flatcc_json_printer_uint64@@Base+0x2e>
  4282e9:	jmp    428050 <flatcc_json_printer_uint32@@Base+0x20>
  4282ee:	mov    rax,rdi
  4282f1:	shr    rax,0xd
  4282f5:	cmp    rax,0x48c27395
  4282fb:	jb     428335 <flatcc_json_printer_uint64@@Base+0x75>
  4282fd:	movabs rax,0x2386f26fc10000
  428307:	cmp    rdi,rax
  42830a:	jb     42835c <flatcc_json_printer_uint64@@Base+0x9c>
  42830c:	movabs rax,0xde0b6b3a7640000
  428316:	cmp    rdi,rax
  428319:	jb     428395 <flatcc_json_printer_uint64@@Base+0xd5>
  42831b:	movabs rcx,0x8ac7230489e7ffff
  428325:	xor    eax,eax
  428327:	cmp    rdi,rcx
  42832a:	seta   al
  42832d:	add    eax,0x13
  428330:	jmp    4283c1 <flatcc_json_printer_uint64@@Base+0x101>
  428335:	mov    rax,rdi
  428338:	shr    rax,0xb
  42833c:	mov    rcx,rdi
  42833f:	cmp    rax,0x2e90edd
  428345:	jb     428380 <flatcc_json_printer_uint64@@Base+0xc0>
  428347:	shr    rcx,0xc
  42834b:	xor    eax,eax
  42834d:	cmp    rcx,0xe8d4a50
  428354:	seta   al
  428357:	or     eax,0xc
  42835a:	jmp    4283c1 <flatcc_json_printer_uint64@@Base+0x101>
  42835c:	movabs rax,0x38d7ea4c68000
  428366:	cmp    rdi,rax
  428369:	jb     4283ac <flatcc_json_printer_uint64@@Base+0xec>
  42836b:	mov    BYTE PTR [rsi+0x10],0x0
  42836f:	add    rsi,0x10
  428373:	mov    eax,0x10
  428378:	mov    r8,rsi
  42837b:	jmp    428467 <flatcc_json_printer_uint64@@Base+0x1a7>
  428380:	shr    rcx,0xa
  428384:	xor    eax,eax
  428386:	cmp    rcx,0x9502f8
  42838d:	seta   al
  428390:	or     eax,0xa
  428393:	jmp    4283c1 <flatcc_json_printer_uint64@@Base+0x101>
  428395:	movabs rcx,0x16345785d89ffff
  42839f:	xor    eax,eax
  4283a1:	cmp    rdi,rcx
  4283a4:	seta   al
  4283a7:	add    eax,0x11
  4283aa:	jmp    4283c1 <flatcc_json_printer_uint64@@Base+0x101>
  4283ac:	movabs rcx,0x5af3107a3fff
  4283b6:	xor    eax,eax
  4283b8:	cmp    rdi,rcx
  4283bb:	seta   al
  4283be:	or     eax,0xe
  4283c1:	mov    ecx,eax
  4283c3:	lea    r8,[rsi+rcx*1]
  4283c7:	mov    BYTE PTR [rsi+rcx*1],0x0
  4283cb:	mov    ecx,eax
  4283cd:	and    cl,0x1f
  4283d0:	test   al,0x1
  4283d2:	jne    42854c <flatcc_json_printer_uint64@@Base+0x28c>
  4283d8:	add    cl,0xf6
  4283db:	cmp    cl,0xa
  4283de:	ja     4286be <flatcc_json_printer_uint64@@Base+0x3fe>
  4283e4:	movzx  ecx,cl
  4283e7:	lea    rdx,[rip+0x11512]        # 439900 <flatcc_builder_padding_base@@Base+0x2d60>
  4283ee:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4283f2:	add    rcx,rdx
  4283f5:	jmp    rcx
  4283f7:	mov    rdx,rdi
  4283fa:	shr    rdx,0x2
  4283fe:	movabs rcx,0x28f5c28f5c28f5c3
  428408:	mulx   rcx,rdx,rcx
  42840d:	shr    rcx,0x2
  428411:	imul   rdx,rcx,0x64
  428415:	sub    rdi,rdx
  428418:	lea    rdx,[rip+0x11f61]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42841f:	movzx  edx,WORD PTR [rdx+rdi*2]
  428423:	mov    WORD PTR [r8-0x2],dx
  428428:	add    r8,0xfffffffffffffffe
  42842c:	mov    rdi,rcx
  42842f:	mov    rdx,rdi
  428432:	shr    rdx,0x2
  428436:	movabs rcx,0x28f5c28f5c28f5c3
  428440:	mulx   rcx,rdx,rcx
  428445:	shr    rcx,0x2
  428449:	imul   rdx,rcx,0x64
  42844d:	sub    rdi,rdx
  428450:	lea    rdx,[rip+0x11f29]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428457:	movzx  edx,WORD PTR [rdx+rdi*2]
  42845b:	mov    WORD PTR [r8-0x2],dx
  428460:	add    r8,0xfffffffffffffffe
  428464:	mov    rdi,rcx
  428467:	mov    rdx,rdi
  42846a:	shr    rdx,0x2
  42846e:	movabs rcx,0x28f5c28f5c28f5c3
  428478:	mulx   rcx,rdx,rcx
  42847d:	shr    rcx,0x2
  428481:	imul   rdx,rcx,0x64
  428485:	sub    rdi,rdx
  428488:	lea    rdx,[rip+0x11ef1]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42848f:	movzx  edx,WORD PTR [rdx+rdi*2]
  428493:	mov    WORD PTR [r8-0x2],dx
  428498:	add    r8,0xfffffffffffffffe
  42849c:	mov    rdi,rcx
  42849f:	mov    rdx,rdi
  4284a2:	shr    rdx,0x2
  4284a6:	movabs rcx,0x28f5c28f5c28f5c3
  4284b0:	mulx   rcx,rdx,rcx
  4284b5:	shr    rcx,0x2
  4284b9:	imul   rdx,rcx,0x64
  4284bd:	sub    rdi,rdx
  4284c0:	lea    rdx,[rip+0x11eb9]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4284c7:	movzx  edx,WORD PTR [rdx+rdi*2]
  4284cb:	mov    WORD PTR [r8-0x2],dx
  4284d0:	add    r8,0xfffffffffffffffe
  4284d4:	mov    rdi,rcx
  4284d7:	mov    rdx,rdi
  4284da:	shr    rdx,0x2
  4284de:	movabs rcx,0x28f5c28f5c28f5c3
  4284e8:	mulx   rcx,rdx,rcx
  4284ed:	shr    rcx,0x2
  4284f1:	imul   rdx,rcx,0x64
  4284f5:	sub    rdi,rdx
  4284f8:	lea    rdx,[rip+0x11e81]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4284ff:	movzx  edx,WORD PTR [rdx+rdi*2]
  428503:	mov    WORD PTR [r8-0x2],dx
  428508:	add    r8,0xfffffffffffffffe
  42850c:	mov    rdi,rcx
  42850f:	mov    rdx,rdi
  428512:	shr    rdx,0x2
  428516:	movabs rcx,0x28f5c28f5c28f5c3
  428520:	mulx   rcx,rdx,rcx
  428525:	shr    rcx,0x2
  428529:	imul   rdx,rcx,0x64
  42852d:	sub    rdi,rdx
  428530:	lea    rdx,[rip+0x11e49]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428537:	movzx  edx,WORD PTR [rdx+rdi*2]
  42853b:	mov    WORD PTR [r8-0x2],dx
  428540:	add    r8,0xfffffffffffffffe
  428544:	mov    rdi,rcx
  428547:	jmp    4286be <flatcc_json_printer_uint64@@Base+0x3fe>
  42854c:	add    cl,0xf5
  42854f:	cmp    cl,0x8
  428552:	ja     4286be <flatcc_json_printer_uint64@@Base+0x3fe>
  428558:	movzx  ecx,cl
  42855b:	lea    rdx,[rip+0x1137a]        # 4398dc <flatcc_builder_padding_base@@Base+0x2d3c>
  428562:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  428566:	add    rcx,rdx
  428569:	jmp    rcx
  42856b:	mov    rdx,rdi
  42856e:	shr    rdx,0x2
  428572:	movabs rcx,0x28f5c28f5c28f5c3
  42857c:	mulx   rcx,rdx,rcx
  428581:	shr    rcx,0x2
  428585:	imul   rdx,rcx,0x64
  428589:	sub    rdi,rdx
  42858c:	lea    rdx,[rip+0x11ded]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428593:	movzx  edx,WORD PTR [rdx+rdi*2]
  428597:	mov    WORD PTR [r8-0x2],dx
  42859c:	add    r8,0xfffffffffffffffe
  4285a0:	mov    rdi,rcx
  4285a3:	mov    rdx,rdi
  4285a6:	shr    rdx,0x2
  4285aa:	movabs rcx,0x28f5c28f5c28f5c3
  4285b4:	mulx   rcx,rdx,rcx
  4285b9:	shr    rcx,0x2
  4285bd:	imul   rdx,rcx,0x64
  4285c1:	sub    rdi,rdx
  4285c4:	lea    rdx,[rip+0x11db5]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4285cb:	movzx  edx,WORD PTR [rdx+rdi*2]
  4285cf:	mov    WORD PTR [r8-0x2],dx
  4285d4:	add    r8,0xfffffffffffffffe
  4285d8:	mov    rdi,rcx
  4285db:	mov    rdx,rdi
  4285de:	shr    rdx,0x2
  4285e2:	movabs rcx,0x28f5c28f5c28f5c3
  4285ec:	mulx   rcx,rdx,rcx
  4285f1:	shr    rcx,0x2
  4285f5:	imul   rdx,rcx,0x64
  4285f9:	sub    rdi,rdx
  4285fc:	lea    rdx,[rip+0x11d7d]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428603:	movzx  edx,WORD PTR [rdx+rdi*2]
  428607:	mov    WORD PTR [r8-0x2],dx
  42860c:	add    r8,0xfffffffffffffffe
  428610:	mov    rdi,rcx
  428613:	mov    rdx,rdi
  428616:	shr    rdx,0x2
  42861a:	movabs rcx,0x28f5c28f5c28f5c3
  428624:	mulx   rcx,rdx,rcx
  428629:	shr    rcx,0x2
  42862d:	imul   rdx,rcx,0x64
  428631:	sub    rdi,rdx
  428634:	lea    rdx,[rip+0x11d45]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42863b:	movzx  edx,WORD PTR [rdx+rdi*2]
  42863f:	mov    WORD PTR [r8-0x2],dx
  428644:	add    r8,0xfffffffffffffffe
  428648:	mov    rdi,rcx
  42864b:	mov    rdx,rdi
  42864e:	shr    rdx,0x2
  428652:	movabs rcx,0x28f5c28f5c28f5c3
  42865c:	mulx   rdx,rcx,rcx
  428661:	shr    rdx,0x2
  428665:	imul   rcx,rdx,0x64
  428669:	mov    rsi,rdi
  42866c:	sub    rsi,rcx
  42866f:	lea    rcx,[rip+0x11d0a]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428676:	movzx  ecx,WORD PTR [rcx+rsi*2]
  42867a:	mov    WORD PTR [r8-0x2],cx
  42867f:	movabs rcx,0xcccccccccccccccd
  428689:	mulx   rsi,rcx,rcx
  42868e:	shr    esi,0x2
  428691:	and    esi,0xfffffffe
  428694:	lea    ecx,[rsi+rsi*4]
  428697:	sub    edx,ecx
  428699:	or     dl,0x30
  42869c:	mov    BYTE PTR [r8-0x3],dl
  4286a0:	add    r8,0xfffffffffffffffd
  4286a4:	shr    rdi,0x3
  4286a8:	movabs rcx,0x20c49ba5e353f7cf
  4286b2:	mov    rdx,rdi
  4286b5:	mulx   rdi,rcx,rcx
  4286ba:	shr    rdi,0x4
  4286be:	push   rbx
  4286bf:	mov    rdx,rdi
  4286c2:	shr    rdx,0x2
  4286c6:	movabs r9,0x28f5c28f5c28f5c3
  4286d0:	mulx   rdx,rcx,r9
  4286d5:	mov    rsi,rdx
  4286d8:	shr    rsi,0x2
  4286dc:	imul   r10,rsi,0x64
  4286e0:	mov    rcx,rdi
  4286e3:	sub    rcx,r10
  4286e6:	lea    r10,[rip+0x11c93]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4286ed:	movzx  r11d,WORD PTR [r10+rcx*2]
  4286f2:	shr    rdx,0x4
  4286f6:	mulx   rcx,rdx,r9
  4286fb:	mov    WORD PTR [r8-0x2],r11w
  428700:	shr    rcx,0x2
  428704:	imul   rbx,rcx,0x64
  428708:	movabs r11,0x346dc5d63886594b
  428712:	mov    rdx,rdi
  428715:	mulx   rdx,rcx,r11
  42871a:	sub    rsi,rbx
  42871d:	mov    rcx,rdx
  428720:	shr    rcx,0xb
  428724:	movzx  esi,WORD PTR [r10+rsi*2]
  428729:	shr    rdx,0xd
  42872d:	mulx   rbx,rdx,r9
  428732:	mov    WORD PTR [r8-0x4],si
  428737:	shr    rbx,0x2
  42873b:	imul   rsi,rbx,0x64
  42873f:	movabs rbx,0x431bde82d7b634db
  428749:	mov    rdx,rdi
  42874c:	mulx   rdx,rdi,rbx
  428751:	sub    rcx,rsi
  428754:	mov    rsi,rdx
  428757:	shr    rsi,0x12
  42875b:	movzx  ecx,WORD PTR [r10+rcx*2]
  428760:	shr    rdx,0x14
  428764:	mulx   rdi,rdx,r9
  428769:	mov    WORD PTR [r8-0x6],cx
  42876e:	shr    rdi,0x2
  428772:	imul   rcx,rdi,0x64
  428776:	sub    rsi,rcx
  428779:	movzx  ecx,WORD PTR [r10+rsi*2]
  42877e:	mov    WORD PTR [r8-0x8],cx
  428783:	pop    rbx
  428784:	ret    
  428785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42878f:	nop

0000000000428790 <flatcc_json_printer_int8@@Base>:
  428790:	mov    rdx,QWORD PTR [rdi+0x28]
  428794:	mov    eax,esi
  428796:	shr    al,0x7
  428799:	movzx  r8d,al
  42879d:	test   sil,sil
  4287a0:	js     4287e3 <flatcc_json_printer_int8@@Base+0x53>
  4287a2:	cmp    sil,0x64
  4287a6:	jb     4287f3 <flatcc_json_printer_int8@@Base+0x63>
  4287a8:	mov    BYTE PTR [rdx+0x3],0x0
  4287ac:	movzx  eax,sil
  4287b0:	lea    ecx,[rax+rax*4]
  4287b3:	lea    ecx,[rax+rcx*8]
  4287b6:	shr    ecx,0xc
  4287b9:	mov    r9b,0x64
  4287bc:	mov    eax,ecx
  4287be:	mul    r9b
  4287c1:	sub    sil,al
  4287c4:	movzx  eax,sil
  4287c8:	lea    rsi,[rip+0x11bb1]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4287cf:	movzx  eax,WORD PTR [rsi+rax*2]
  4287d3:	mov    WORD PTR [rdx+0x1],ax
  4287d7:	or     cl,0x30
  4287da:	mov    BYTE PTR [rdx],cl
  4287dc:	mov    eax,0x3
  4287e1:	jmp    42883a <flatcc_json_printer_int8@@Base+0xaa>
  4287e3:	mov    BYTE PTR [rdx],0x2d
  4287e6:	add    rdx,0x1
  4287ea:	neg    sil
  4287ed:	cmp    sil,0x64
  4287f1:	jae    4287a8 <flatcc_json_printer_int8@@Base+0x18>
  4287f3:	cmp    sil,0xa
  4287f7:	jb     42882a <flatcc_json_printer_int8@@Base+0x9a>
  4287f9:	mov    BYTE PTR [rdx+0x2],0x0
  4287fd:	movzx  eax,sil
  428801:	lea    ecx,[rax+rax*4]
  428804:	lea    eax,[rax+rcx*8]
  428807:	shr    eax,0xc
  42880a:	mov    cl,0x64
  42880c:	mul    cl
  42880e:	sub    sil,al
  428811:	movzx  eax,sil
  428815:	lea    rcx,[rip+0x11b64]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42881c:	movzx  eax,WORD PTR [rcx+rax*2]
  428820:	mov    WORD PTR [rdx],ax
  428823:	mov    eax,0x2
  428828:	jmp    42883a <flatcc_json_printer_int8@@Base+0xaa>
  42882a:	mov    BYTE PTR [rdx+0x1],0x0
  42882e:	add    sil,0x30
  428832:	mov    BYTE PTR [rdx],sil
  428835:	mov    eax,0x1
  42883a:	add    rax,r8
  42883d:	add    QWORD PTR [rdi+0x28],rax
  428841:	ret    
  428842:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42884c:	nop    DWORD PTR [rax+0x0]

0000000000428850 <flatcc_json_printer_int16@@Base>:
  428850:	movzx  r8d,si
  428854:	mov    rdx,QWORD PTR [rdi+0x28]
  428858:	test   r8w,r8w
  42885c:	jns    428867 <flatcc_json_printer_int16@@Base+0x17>
  42885e:	mov    BYTE PTR [rdx],0x2d
  428861:	add    rdx,0x1
  428865:	neg    esi
  428867:	shr    r8d,0xf
  42886b:	movzx  r10d,si
  42886f:	cmp    r10d,0x3e8
  428876:	jb     428889 <flatcc_json_printer_int16@@Base+0x39>
  428878:	xor    ecx,ecx
  42887a:	cmp    r10d,0x270f
  428881:	seta   cl
  428884:	or     ecx,0x4
  428887:	jmp    4288b0 <flatcc_json_printer_int16@@Base+0x60>
  428889:	cmp    r10d,0x64
  42888d:	jb     4288a4 <flatcc_json_printer_int16@@Base+0x54>
  42888f:	mov    BYTE PTR [rdx+0x3],0x0
  428893:	add    rdx,0x3
  428897:	mov    ecx,0x3
  42889c:	mov    r9,rdx
  42889f:	jmp    428961 <flatcc_json_printer_int16@@Base+0x111>
  4288a4:	xor    ecx,ecx
  4288a6:	cmp    r10d,0x9
  4288aa:	seta   cl
  4288ad:	add    ecx,0x1
  4288b0:	mov    eax,ecx
  4288b2:	lea    r9,[rdx+rax*1]
  4288b6:	mov    BYTE PTR [rdx+rax*1],0x0
  4288ba:	test   cl,0x1
  4288bd:	jne    428925 <flatcc_json_printer_int16@@Base+0xd5>
  4288bf:	cmp    cl,0x2
  4288c2:	je     4288fa <flatcc_json_printer_int16@@Base+0xaa>
  4288c4:	cmp    cl,0x4
  4288c7:	jne    428996 <flatcc_json_printer_int16@@Base+0x146>
  4288cd:	mov    eax,r10d
  4288d0:	shr    eax,0x2
  4288d3:	imul   esi,eax,0x147b
  4288d9:	shr    esi,0x11
  4288dc:	imul   eax,esi,0x64
  4288df:	sub    r10d,eax
  4288e2:	movzx  eax,r10w
  4288e6:	lea    rdx,[rip+0x11a93]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4288ed:	movzx  eax,WORD PTR [rdx+rax*2]
  4288f1:	mov    WORD PTR [r9-0x2],ax
  4288f6:	lea    r9,[r9-0x2]
  4288fa:	movzx  eax,si
  4288fd:	mov    edx,eax
  4288ff:	shr    edx,0x2
  428902:	imul   edx,edx,0x147b
  428908:	shr    edx,0x11
  42890b:	imul   edx,edx,0x64
  42890e:	sub    eax,edx
  428910:	movzx  eax,ax
  428913:	lea    rdx,[rip+0x11a66]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42891a:	movzx  eax,WORD PTR [rdx+rax*2]
  42891e:	mov    WORD PTR [r9-0x2],ax
  428923:	jmp    428996 <flatcc_json_printer_int16@@Base+0x146>
  428925:	cmp    cl,0x1
  428928:	je     42898e <flatcc_json_printer_int16@@Base+0x13e>
  42892a:	cmp    cl,0x3
  42892d:	je     428961 <flatcc_json_printer_int16@@Base+0x111>
  42892f:	cmp    cl,0x5
  428932:	jne    428996 <flatcc_json_printer_int16@@Base+0x146>
  428934:	mov    eax,r10d
  428937:	shr    eax,0x2
  42893a:	imul   esi,eax,0x147b
  428940:	shr    esi,0x11
  428943:	imul   eax,esi,0x64
  428946:	sub    r10d,eax
  428949:	movzx  eax,r10w
  42894d:	lea    rdx,[rip+0x11a2c]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428954:	movzx  eax,WORD PTR [rdx+rax*2]
  428958:	mov    WORD PTR [r9-0x2],ax
  42895d:	lea    r9,[r9-0x2]
  428961:	movzx  eax,si
  428964:	mov    edx,eax
  428966:	shr    edx,0x2
  428969:	imul   esi,edx,0x147b
  42896f:	shr    esi,0x11
  428972:	imul   edx,esi,0x64
  428975:	sub    eax,edx
  428977:	movzx  eax,ax
  42897a:	lea    rdx,[rip+0x119ff]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  428981:	movzx  eax,WORD PTR [rdx+rax*2]
  428985:	mov    WORD PTR [r9-0x2],ax
  42898a:	lea    r9,[r9-0x2]
  42898e:	add    sil,0x30
  428992:	mov    BYTE PTR [r9-0x1],sil
  428996:	add    ecx,r8d
  428999:	add    QWORD PTR [rdi+0x28],rcx
  42899d:	ret    
  42899e:	xchg   ax,ax

00000000004289a0 <flatcc_json_printer_int32@@Base>:
  4289a0:	push   rbp
  4289a1:	push   rbx
  4289a2:	push   rax
  4289a3:	mov    rbx,rdi
  4289a6:	mov    rax,QWORD PTR [rdi+0x28]
  4289aa:	mov    ebp,esi
  4289ac:	shr    ebp,0x1f
  4289af:	test   esi,esi
  4289b1:	jns    4289bc <flatcc_json_printer_int32@@Base+0x1c>
  4289b3:	mov    BYTE PTR [rax],0x2d
  4289b6:	add    rax,0x1
  4289ba:	neg    esi
  4289bc:	mov    edi,esi
  4289be:	mov    rsi,rax
  4289c1:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  4289c6:	add    eax,ebp
  4289c8:	cdqe   
  4289ca:	add    QWORD PTR [rbx+0x28],rax
  4289ce:	add    rsp,0x8
  4289d2:	pop    rbx
  4289d3:	pop    rbp
  4289d4:	ret    
  4289d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4289df:	nop

00000000004289e0 <flatcc_json_printer_int64@@Base>:
  4289e0:	push   r14
  4289e2:	push   rbx
  4289e3:	push   rax
  4289e4:	mov    r14,rdi
  4289e7:	mov    rax,QWORD PTR [rdi+0x28]
  4289eb:	mov    rbx,rsi
  4289ee:	shr    rbx,0x3f
  4289f2:	test   rsi,rsi
  4289f5:	jns    428a01 <flatcc_json_printer_int64@@Base+0x21>
  4289f7:	mov    BYTE PTR [rax],0x2d
  4289fa:	add    rax,0x1
  4289fe:	neg    rsi
  428a01:	mov    rdi,rsi
  428a04:	mov    rsi,rax
  428a07:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  428a0c:	add    eax,ebx
  428a0e:	cdqe   
  428a10:	add    QWORD PTR [r14+0x28],rax
  428a14:	add    rsp,0x8
  428a18:	pop    rbx
  428a19:	pop    r14
  428a1b:	ret    
  428a1c:	nop    DWORD PTR [rax+0x0]

0000000000428a20 <flatcc_json_printer_float@@Base>:
  428a20:	push   rbx
  428a21:	mov    rbx,rdi
  428a24:	vcvtss2sd xmm0,xmm0,xmm0
  428a28:	mov    rdi,QWORD PTR [rdi+0x28]
  428a2c:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  428a31:	cdqe   
  428a33:	add    QWORD PTR [rbx+0x28],rax
  428a37:	pop    rbx
  428a38:	ret    
  428a39:	nop    DWORD PTR [rax+0x0]

0000000000428a40 <flatcc_json_printer_double@@Base>:
  428a40:	push   rbx
  428a41:	mov    rbx,rdi
  428a44:	mov    rdi,QWORD PTR [rdi+0x28]
  428a48:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  428a4d:	cdqe   
  428a4f:	add    QWORD PTR [rbx+0x28],rax
  428a53:	pop    rbx
  428a54:	ret    
  428a55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428a5f:	nop

0000000000428a60 <flatcc_json_printer_enum@@Base>:
  428a60:	push   r15
  428a62:	push   r14
  428a64:	push   r12
  428a66:	push   rbx
  428a67:	push   rax
  428a68:	mov    r12,rsi
  428a6b:	mov    r14,rdi
  428a6e:	movsxd r15,edx
  428a71:	mov    rax,QWORD PTR [rdi+0x28]
  428a75:	mov    BYTE PTR [rax],0x22
  428a78:	mov    rbx,QWORD PTR [rdi+0x20]
  428a7c:	mov    rdi,QWORD PTR [rdi+0x28]
  428a80:	xor    eax,eax
  428a82:	cmp    BYTE PTR [r14+0x32],0x1
  428a87:	adcx   rdi,rax
  428a8d:	mov    QWORD PTR [r14+0x28],rdi
  428a91:	lea    rax,[rdi+r15*1]
  428a95:	cmp    rax,rbx
  428a98:	jb     428aee <flatcc_json_printer_enum@@Base+0x8e>
  428a9a:	cmp    rdi,rbx
  428a9d:	jb     428ab0 <flatcc_json_printer_enum@@Base+0x50>
  428a9f:	xor    esi,esi
  428aa1:	mov    rdi,r14
  428aa4:	call   QWORD PTR [r14+0x48]
  428aa8:	mov    rbx,QWORD PTR [r14+0x20]
  428aac:	mov    rdi,QWORD PTR [r14+0x28]
  428ab0:	sub    rbx,rdi
  428ab3:	cmp    rbx,r15
  428ab6:	jae    428aee <flatcc_json_printer_enum@@Base+0x8e>
  428ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  428ac0:	mov    rsi,r12
  428ac3:	mov    rdx,rbx
  428ac6:	call   4060e0 <memcpy@plt>
  428acb:	add    QWORD PTR [r14+0x28],rbx
  428acf:	add    r12,rbx
  428ad2:	sub    r15,rbx
  428ad5:	xor    esi,esi
  428ad7:	mov    rdi,r14
  428ada:	call   QWORD PTR [r14+0x48]
  428ade:	mov    rbx,QWORD PTR [r14+0x20]
  428ae2:	mov    rdi,QWORD PTR [r14+0x28]
  428ae6:	sub    rbx,rdi
  428ae9:	cmp    r15,rbx
  428aec:	ja     428ac0 <flatcc_json_printer_enum@@Base+0x60>
  428aee:	mov    rsi,r12
  428af1:	mov    rdx,r15
  428af4:	call   4060e0 <memcpy@plt>
  428af9:	mov    rax,QWORD PTR [r14+0x28]
  428afd:	lea    rcx,[rax+r15*1]
  428b01:	mov    QWORD PTR [r14+0x28],rcx
  428b05:	mov    BYTE PTR [rax+r15*1],0x22
  428b0a:	cmp    BYTE PTR [r14+0x32],0x1
  428b0f:	adc    QWORD PTR [r14+0x28],0x0
  428b14:	add    rsp,0x8
  428b18:	pop    rbx
  428b19:	pop    r12
  428b1b:	pop    r14
  428b1d:	pop    r15
  428b1f:	ret    

0000000000428b20 <flatcc_json_printer_delimit_enum_flags@@Base>:
  428b20:	cmp    BYTE PTR [rdi+0x32],0x0
  428b24:	sete   al
  428b27:	test   esi,esi
  428b29:	setne  cl
  428b2c:	or     cl,al
  428b2e:	mov    rax,QWORD PTR [rdi+0x28]
  428b32:	mov    BYTE PTR [rax],0x22
  428b35:	movzx  eax,cl
  428b38:	add    QWORD PTR [rdi+0x28],rax
  428b3c:	ret    
  428b3d:	nop    DWORD PTR [rax]

0000000000428b40 <flatcc_json_printer_enum_flag@@Base>:
  428b40:	push   r15
  428b42:	push   r14
  428b44:	push   r12
  428b46:	push   rbx
  428b47:	push   rax
  428b48:	mov    r14,rdi
  428b4b:	mov    rax,QWORD PTR [rdi+0x28]
  428b4f:	mov    BYTE PTR [rax],0x20
  428b52:	xor    edi,edi
  428b54:	test   esi,esi
  428b56:	setg   dil
  428b5a:	add    rdi,QWORD PTR [r14+0x28]
  428b5e:	mov    r12,rdx
  428b61:	mov    QWORD PTR [r14+0x28],rdi
  428b65:	movsxd r15,ecx
  428b68:	lea    rax,[rdi+r15*1]
  428b6c:	mov    rbx,QWORD PTR [r14+0x20]
  428b70:	cmp    rax,rbx
  428b73:	jb     428bce <flatcc_json_printer_enum_flag@@Base+0x8e>
  428b75:	cmp    rdi,rbx
  428b78:	jb     428b8b <flatcc_json_printer_enum_flag@@Base+0x4b>
  428b7a:	xor    esi,esi
  428b7c:	mov    rdi,r14
  428b7f:	call   QWORD PTR [r14+0x48]
  428b83:	mov    rbx,QWORD PTR [r14+0x20]
  428b87:	mov    rdi,QWORD PTR [r14+0x28]
  428b8b:	sub    rbx,rdi
  428b8e:	cmp    rbx,r15
  428b91:	jae    428bce <flatcc_json_printer_enum_flag@@Base+0x8e>
  428b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b9d:	nop    DWORD PTR [rax]
  428ba0:	mov    rsi,r12
  428ba3:	mov    rdx,rbx
  428ba6:	call   4060e0 <memcpy@plt>
  428bab:	add    QWORD PTR [r14+0x28],rbx
  428baf:	add    r12,rbx
  428bb2:	sub    r15,rbx
  428bb5:	xor    esi,esi
  428bb7:	mov    rdi,r14
  428bba:	call   QWORD PTR [r14+0x48]
  428bbe:	mov    rbx,QWORD PTR [r14+0x20]
  428bc2:	mov    rdi,QWORD PTR [r14+0x28]
  428bc6:	sub    rbx,rdi
  428bc9:	cmp    r15,rbx
  428bcc:	ja     428ba0 <flatcc_json_printer_enum_flag@@Base+0x60>
  428bce:	mov    rsi,r12
  428bd1:	mov    rdx,r15
  428bd4:	call   4060e0 <memcpy@plt>
  428bd9:	add    QWORD PTR [r14+0x28],r15
  428bdd:	add    rsp,0x8
  428be1:	pop    rbx
  428be2:	pop    r12
  428be4:	pop    r14
  428be6:	pop    r15
  428be8:	ret    
  428be9:	nop    DWORD PTR [rax+0x0]

0000000000428bf0 <flatcc_json_printer_string_field@@Base>:
  428bf0:	push   r14
  428bf2:	push   rbx
  428bf3:	push   rax
  428bf4:	lea    eax,[rdx+rdx*1]
  428bf7:	add    eax,0x4
  428bfa:	cmp    eax,DWORD PTR [rsi+0x10]
  428bfd:	jge    428c5c <flatcc_json_printer_string_field@@Base+0x6c>
  428bff:	mov    rdx,QWORD PTR [rsi+0x8]
  428c03:	mov    eax,eax
  428c05:	movzx  ebx,WORD PTR [rdx+rax*1]
  428c09:	test   rbx,rbx
  428c0c:	je     428c5c <flatcc_json_printer_string_field@@Base+0x6c>
  428c0e:	add    rbx,QWORD PTR [rsi]
  428c11:	je     428c5c <flatcc_json_printer_string_field@@Base+0x6c>
  428c13:	mov    r14,rdi
  428c16:	mov    eax,DWORD PTR [rsi+0x18]
  428c19:	lea    edx,[rax+0x1]
  428c1c:	mov    DWORD PTR [rsi+0x18],edx
  428c1f:	test   eax,eax
  428c21:	je     428c32 <flatcc_json_printer_string_field@@Base+0x42>
  428c23:	mov    rax,QWORD PTR [r14+0x28]
  428c27:	lea    rdx,[rax+0x1]
  428c2b:	mov    QWORD PTR [r14+0x28],rdx
  428c2f:	mov    BYTE PTR [rax],0x2c
  428c32:	movsxd rdx,r8d
  428c35:	mov    rdi,r14
  428c38:	mov    rsi,rcx
  428c3b:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  428c40:	mov    eax,DWORD PTR [rbx]
  428c42:	mov    edx,DWORD PTR [rbx+rax*1]
  428c45:	lea    rsi,[rbx+rax*1]
  428c49:	add    rsi,0x4
  428c4d:	mov    rdi,r14
  428c50:	add    rsp,0x8
  428c54:	pop    rbx
  428c55:	pop    r14
  428c57:	jmp    427a80 <flatcc_json_printer_string@@Base+0x10>
  428c5c:	add    rsp,0x8
  428c60:	pop    rbx
  428c61:	pop    r14
  428c63:	ret    
  428c64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428c6e:	xchg   ax,ax
  428c70:	push   rbp
  428c71:	push   r15
  428c73:	push   r14
  428c75:	push   r13
  428c77:	push   r12
  428c79:	push   rbx
  428c7a:	push   rax
  428c7b:	mov    r14,rdx
  428c7e:	mov    r15,rsi
  428c81:	mov    r12,rdi
  428c84:	cmp    BYTE PTR [rdi+0x31],0x0
  428c88:	mov    r13,QWORD PTR [rdi+0x28]
  428c8c:	je     428d3f <flatcc_json_printer_string_field@@Base+0x14f>
  428c92:	lea    rax,[r13+0x1]
  428c96:	mov    QWORD PTR [r12+0x28],rax
  428c9b:	mov    BYTE PTR [r13+0x0],0xa
  428ca0:	movsxd rax,DWORD PTR [r12+0x38]
  428ca5:	movzx  r13d,BYTE PTR [r12+0x31]
  428cab:	imul   r13,rax
  428caf:	mov    rbx,QWORD PTR [r12+0x20]
  428cb4:	mov    rdi,QWORD PTR [r12+0x28]
  428cb9:	lea    rax,[rdi+r13*1]
  428cbd:	cmp    rax,rbx
  428cc0:	jbe    428d21 <flatcc_json_printer_string_field@@Base+0x131>
  428cc2:	cmp    rdi,rbx
  428cc5:	jb     428cdb <flatcc_json_printer_string_field@@Base+0xeb>
  428cc7:	xor    esi,esi
  428cc9:	mov    rdi,r12
  428ccc:	call   QWORD PTR [r12+0x48]
  428cd1:	mov    rbx,QWORD PTR [r12+0x20]
  428cd6:	mov    rdi,QWORD PTR [r12+0x28]
  428cdb:	sub    rbx,rdi
  428cde:	cmp    rbx,r13
  428ce1:	jae    428d21 <flatcc_json_printer_string_field@@Base+0x131>
  428ce3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428ced:	nop    DWORD PTR [rax]
  428cf0:	mov    esi,0x20
  428cf5:	mov    rdx,rbx
  428cf8:	call   406080 <memset@plt>
  428cfd:	add    QWORD PTR [r12+0x28],rbx
  428d02:	sub    r13,rbx
  428d05:	xor    esi,esi
  428d07:	mov    rdi,r12
  428d0a:	call   QWORD PTR [r12+0x48]
  428d0f:	mov    rbx,QWORD PTR [r12+0x20]
  428d14:	mov    rdi,QWORD PTR [r12+0x28]
  428d19:	sub    rbx,rdi
  428d1c:	cmp    r13,rbx
  428d1f:	ja     428cf0 <flatcc_json_printer_string_field@@Base+0x100>
  428d21:	mov    esi,0x20
  428d26:	mov    rdx,r13
  428d29:	call   406080 <memset@plt>
  428d2e:	lea    rbp,[r12+0x20]
  428d33:	add    r13,QWORD PTR [r12+0x28]
  428d38:	mov    QWORD PTR [r12+0x28],r13
  428d3d:	jmp    428d5a <flatcc_json_printer_string_field@@Base+0x16a>
  428d3f:	lea    rbp,[r12+0x20]
  428d44:	cmp    r13,QWORD PTR [r12+0x20]
  428d49:	jb     428d5a <flatcc_json_printer_string_field@@Base+0x16a>
  428d4b:	xor    esi,esi
  428d4d:	mov    rdi,r12
  428d50:	call   QWORD PTR [r12+0x48]
  428d55:	mov    r13,QWORD PTR [r12+0x28]
  428d5a:	mov    BYTE PTR [r13+0x0],0x22
  428d5f:	mov    rbx,QWORD PTR [r12+0x20]
  428d64:	mov    rdi,QWORD PTR [r12+0x28]
  428d69:	xor    eax,eax
  428d6b:	cmp    BYTE PTR [r12+0x32],0x1
  428d71:	adcx   rdi,rax
  428d77:	mov    QWORD PTR [r12+0x28],rdi
  428d7c:	lea    rax,[rdi+r14*1]
  428d80:	cmp    rax,rbx
  428d83:	jb     428de1 <flatcc_json_printer_string_field@@Base+0x1f1>
  428d85:	cmp    rdi,rbx
  428d88:	jb     428d9d <flatcc_json_printer_string_field@@Base+0x1ad>
  428d8a:	xor    esi,esi
  428d8c:	mov    rdi,r12
  428d8f:	call   QWORD PTR [r12+0x48]
  428d94:	mov    rbx,QWORD PTR [rbp+0x0]
  428d98:	mov    rdi,QWORD PTR [r12+0x28]
  428d9d:	sub    rbx,rdi
  428da0:	cmp    rbx,r14
  428da3:	jae    428de1 <flatcc_json_printer_string_field@@Base+0x1f1>
  428da5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428daf:	nop
  428db0:	mov    rsi,r15
  428db3:	mov    rdx,rbx
  428db6:	call   4060e0 <memcpy@plt>
  428dbb:	add    QWORD PTR [r12+0x28],rbx
  428dc0:	add    r15,rbx
  428dc3:	sub    r14,rbx
  428dc6:	xor    esi,esi
  428dc8:	mov    rdi,r12
  428dcb:	call   QWORD PTR [r12+0x48]
  428dd0:	mov    rbx,QWORD PTR [rbp+0x0]
  428dd4:	mov    rdi,QWORD PTR [r12+0x28]
  428dd9:	sub    rbx,rdi
  428ddc:	cmp    r14,rbx
  428ddf:	ja     428db0 <flatcc_json_printer_string_field@@Base+0x1c0>
  428de1:	mov    rsi,r15
  428de4:	mov    rdx,r14
  428de7:	call   4060e0 <memcpy@plt>
  428dec:	mov    rax,QWORD PTR [r12+0x28]
  428df1:	lea    rcx,[rax+r14*1]
  428df5:	mov    QWORD PTR [r12+0x28],rcx
  428dfa:	mov    BYTE PTR [rax+r14*1],0x22
  428dff:	mov    rax,QWORD PTR [r12+0x28]
  428e04:	xor    ecx,ecx
  428e06:	cmp    BYTE PTR [r12+0x32],0x1
  428e0c:	adcx   rax,rcx
  428e12:	lea    rcx,[rax+0x1]
  428e16:	mov    QWORD PTR [r12+0x28],rcx
  428e1b:	mov    BYTE PTR [rax],0x3a
  428e1e:	mov    rax,QWORD PTR [r12+0x28]
  428e23:	mov    BYTE PTR [rax],0x20
  428e26:	cmp    BYTE PTR [r12+0x31],0x1
  428e2c:	sbb    QWORD PTR [r12+0x28],0xffffffffffffffff
  428e32:	add    rsp,0x8
  428e36:	pop    rbx
  428e37:	pop    r12
  428e39:	pop    r13
  428e3b:	pop    r14
  428e3d:	pop    r15
  428e3f:	pop    rbp
  428e40:	ret    
  428e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428e50 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  428e50:	push   rbp
  428e51:	push   r15
  428e53:	push   r14
  428e55:	push   r13
  428e57:	push   r12
  428e59:	push   rbx
  428e5a:	sub    rsp,0x18
  428e5e:	lea    eax,[rdx+rdx*1]
  428e61:	add    eax,0x4
  428e64:	cmp    eax,DWORD PTR [rsi+0x10]
  428e67:	jge    428fef <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19f>
  428e6d:	mov    rdx,QWORD PTR [rsi+0x8]
  428e71:	mov    eax,eax
  428e73:	movzx  ebp,WORD PTR [rdx+rax*1]
  428e77:	test   rbp,rbp
  428e7a:	je     428fef <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19f>
  428e80:	xor    r14d,r14d
  428e83:	test   r9d,r9d
  428e86:	setne  al
  428e89:	add    rbp,QWORD PTR [rsi]
  428e8c:	je     428fef <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19f>
  428e92:	mov    r13,rdi
  428e95:	mov    BYTE PTR [rsp+0x7],al
  428e99:	mov    eax,DWORD PTR [rsi+0x18]
  428e9c:	lea    edx,[rax+0x1]
  428e9f:	mov    DWORD PTR [rsi+0x18],edx
  428ea2:	test   eax,eax
  428ea4:	je     428eb5 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x65>
  428ea6:	mov    rax,QWORD PTR [r13+0x28]
  428eaa:	lea    rdx,[rax+0x1]
  428eae:	mov    QWORD PTR [r13+0x28],rdx
  428eb2:	mov    BYTE PTR [rax],0x2c
  428eb5:	movsxd rdx,r8d
  428eb8:	mov    rdi,r13
  428ebb:	mov    rsi,rcx
  428ebe:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  428ec3:	mov    r15d,DWORD PTR [rbp+0x0]
  428ec7:	mov    eax,DWORD PTR [rbp+r15*1+0x0]
  428ecc:	mov    QWORD PTR [rsp+0x8],rax
  428ed1:	mov    rax,QWORD PTR [r13+0x28]
  428ed5:	lea    rcx,[rax+0x1]
  428ed9:	mov    QWORD PTR [r13+0x28],rcx
  428edd:	mov    BYTE PTR [rax],0x22
  428ee0:	mov    rdx,QWORD PTR [rsp+0x8]
  428ee5:	shl    rdx,0x2
  428ee9:	movabs rax,0xaaaaaaaaaaaaaaab
  428ef3:	mulx   rbx,rax,rax
  428ef8:	shr    rbx,1
  428efb:	add    rbx,0x3
  428eff:	and    rbx,0xfffffffffffffffc
  428f03:	mov    r12,QWORD PTR [r13+0x20]
  428f07:	mov    rdi,QWORD PTR [r13+0x28]
  428f0b:	lea    rax,[rdi+rbx*1]
  428f0f:	cmp    rax,r12
  428f12:	jb     428f29 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd9>
  428f14:	xor    esi,esi
  428f16:	mov    rdi,r13
  428f19:	call   QWORD PTR [r13+0x48]
  428f1d:	mov    r12,QWORD PTR [r13+0x20]
  428f21:	mov    rdi,QWORD PTR [r13+0x28]
  428f25:	lea    rax,[rdi+rbx*1]
  428f29:	mov    cl,BYTE PTR [rsp+0x7]
  428f2d:	mov    r14b,cl
  428f30:	add    rbp,r15
  428f33:	add    rbp,0x4
  428f37:	cmp    rax,r12
  428f3a:	jbe    428fc4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x174>
  428f40:	lea    r15,[rsp+0x10]
  428f45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f4f:	nop
  428f50:	sub    r12,rdi
  428f53:	and    r12,0xfffffffffffffffc
  428f57:	lea    rbx,[r12+r12*2]
  428f5b:	test   rbx,rbx
  428f5e:	je     428ffe <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ae>
  428f64:	shr    rbx,0x2
  428f68:	mov    QWORD PTR [rsp+0x10],rbx
  428f6d:	mov    rsi,rbp
  428f70:	mov    rdx,r15
  428f73:	mov    ecx,r14d
  428f76:	call   4327d0 <flatcc_json_printer_clear@@Base+0x30>
  428f7b:	add    QWORD PTR [r13+0x28],r12
  428f7f:	add    rbp,rbx
  428f82:	sub    QWORD PTR [rsp+0x8],rbx
  428f87:	xor    esi,esi
  428f89:	mov    rdi,r13
  428f8c:	call   QWORD PTR [r13+0x48]
  428f90:	mov    rdx,QWORD PTR [rsp+0x8]
  428f95:	shl    rdx,0x2
  428f99:	movabs rax,0xaaaaaaaaaaaaaaab
  428fa3:	mulx   rbx,rax,rax
  428fa8:	shr    rbx,1
  428fab:	add    rbx,0x3
  428faf:	and    rbx,0xfffffffffffffffc
  428fb3:	mov    r12,QWORD PTR [r13+0x20]
  428fb7:	mov    rdi,QWORD PTR [r13+0x28]
  428fbb:	lea    rax,[rdi+rbx*1]
  428fbf:	cmp    rax,r12
  428fc2:	ja     428f50 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x100>
  428fc4:	or     r14d,0x80
  428fcb:	lea    rdx,[rsp+0x8]
  428fd0:	mov    rsi,rbp
  428fd3:	mov    ecx,r14d
  428fd6:	call   4327d0 <flatcc_json_printer_clear@@Base+0x30>
  428fdb:	mov    rax,QWORD PTR [r13+0x28]
  428fdf:	lea    rcx,[rax+rbx*1]
  428fe3:	add    rcx,0x1
  428fe7:	mov    QWORD PTR [r13+0x28],rcx
  428feb:	mov    BYTE PTR [rax+rbx*1],0x22
  428fef:	add    rsp,0x18
  428ff3:	pop    rbx
  428ff4:	pop    r12
  428ff6:	pop    r13
  428ff8:	pop    r14
  428ffa:	pop    r15
  428ffc:	pop    rbp
  428ffd:	ret    
  428ffe:	lea    rdi,[rip+0x11211]        # 43a216 <flatcc_builder_padding_base@@Base+0x3676>
  429005:	lea    rsi,[rip+0x10f01]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  42900c:	lea    rcx,[rip+0x11209]        # 43a21c <flatcc_builder_padding_base@@Base+0x367c>
  429013:	mov    edx,0x115
  429018:	call   406070 <__assert_fail@plt>
  42901d:	nop    DWORD PTR [rax]

0000000000429020 <flatcc_json_printer_uint8_field@@Base>:
  429020:	push   r14
  429022:	push   rbx
  429023:	push   rax
  429024:	mov    r14,rdi
  429027:	lea    eax,[rdx+rdx*1]
  42902a:	add    eax,0x4
  42902d:	cmp    eax,DWORD PTR [rsi+0x10]
  429030:	jge    42905d <flatcc_json_printer_uint8_field@@Base+0x3d>
  429032:	mov    rdx,QWORD PTR [rsi+0x8]
  429036:	mov    eax,eax
  429038:	movzx  eax,WORD PTR [rdx+rax*1]
  42903c:	test   rax,rax
  42903f:	je     42905d <flatcc_json_printer_uint8_field@@Base+0x3d>
  429041:	add    rax,QWORD PTR [rsi]
  429044:	je     42905d <flatcc_json_printer_uint8_field@@Base+0x3d>
  429046:	mov    bl,BYTE PTR [rax]
  429048:	cmp    bl,r9b
  42904b:	jne    42906b <flatcc_json_printer_uint8_field@@Base+0x4b>
  42904d:	cmp    BYTE PTR [r14+0x34],0x0
  429052:	mov    ebx,r9d
  429055:	jne    42911b <flatcc_json_printer_uint8_field@@Base+0xfb>
  42905b:	jmp    42906b <flatcc_json_printer_uint8_field@@Base+0x4b>
  42905d:	cmp    BYTE PTR [r14+0x35],0x0
  429062:	mov    ebx,r9d
  429065:	je     42911b <flatcc_json_printer_uint8_field@@Base+0xfb>
  42906b:	mov    eax,DWORD PTR [rsi+0x18]
  42906e:	lea    edx,[rax+0x1]
  429071:	mov    DWORD PTR [rsi+0x18],edx
  429074:	test   eax,eax
  429076:	je     429087 <flatcc_json_printer_uint8_field@@Base+0x67>
  429078:	mov    rax,QWORD PTR [r14+0x28]
  42907c:	lea    rdx,[rax+0x1]
  429080:	mov    QWORD PTR [r14+0x28],rdx
  429084:	mov    BYTE PTR [rax],0x2c
  429087:	movsxd rdx,r8d
  42908a:	mov    rdi,r14
  42908d:	mov    rsi,rcx
  429090:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429095:	mov    rdx,QWORD PTR [r14+0x28]
  429099:	cmp    bl,0x64
  42909c:	jb     4290d6 <flatcc_json_printer_uint8_field@@Base+0xb6>
  42909e:	mov    BYTE PTR [rdx+0x3],0x0
  4290a2:	movzx  eax,bl
  4290a5:	lea    ecx,[rax+rax*4]
  4290a8:	lea    ecx,[rax+rcx*8]
  4290ab:	shr    ecx,0xc
  4290ae:	mov    sil,0x64
  4290b1:	mov    eax,ecx
  4290b3:	mul    sil
  4290b6:	sub    bl,al
  4290b8:	movzx  eax,bl
  4290bb:	lea    rsi,[rip+0x112be]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4290c2:	movzx  eax,WORD PTR [rsi+rax*2]
  4290c6:	mov    WORD PTR [rdx+0x1],ax
  4290ca:	or     cl,0x30
  4290cd:	mov    BYTE PTR [rdx],cl
  4290cf:	mov    eax,0x3
  4290d4:	jmp    429117 <flatcc_json_printer_uint8_field@@Base+0xf7>
  4290d6:	cmp    bl,0xa
  4290d9:	jb     429109 <flatcc_json_printer_uint8_field@@Base+0xe9>
  4290db:	mov    BYTE PTR [rdx+0x2],0x0
  4290df:	movzx  eax,bl
  4290e2:	lea    ecx,[rax+rax*4]
  4290e5:	lea    eax,[rax+rcx*8]
  4290e8:	shr    eax,0xc
  4290eb:	mov    cl,0x64
  4290ed:	mul    cl
  4290ef:	sub    bl,al
  4290f1:	movzx  eax,bl
  4290f4:	lea    rcx,[rip+0x11285]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4290fb:	movzx  eax,WORD PTR [rcx+rax*2]
  4290ff:	mov    WORD PTR [rdx],ax
  429102:	mov    eax,0x2
  429107:	jmp    429117 <flatcc_json_printer_uint8_field@@Base+0xf7>
  429109:	mov    BYTE PTR [rdx+0x1],0x0
  42910d:	add    bl,0x30
  429110:	mov    BYTE PTR [rdx],bl
  429112:	mov    eax,0x1
  429117:	add    QWORD PTR [r14+0x28],rax
  42911b:	add    rsp,0x8
  42911f:	pop    rbx
  429120:	pop    r14
  429122:	ret    
  429123:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42912d:	nop    DWORD PTR [rax]

0000000000429130 <flatcc_json_printer_uint16_field@@Base>:
  429130:	push   rbp
  429131:	push   rbx
  429132:	push   rax
  429133:	mov    rbx,rdi
  429136:	lea    eax,[rdx+rdx*1]
  429139:	add    eax,0x4
  42913c:	cmp    eax,DWORD PTR [rsi+0x10]
  42913f:	jge    42916d <flatcc_json_printer_uint16_field@@Base+0x3d>
  429141:	mov    rdx,QWORD PTR [rsi+0x8]
  429145:	mov    eax,eax
  429147:	movzx  eax,WORD PTR [rdx+rax*1]
  42914b:	test   rax,rax
  42914e:	je     42916d <flatcc_json_printer_uint16_field@@Base+0x3d>
  429150:	add    rax,QWORD PTR [rsi]
  429153:	je     42916d <flatcc_json_printer_uint16_field@@Base+0x3d>
  429155:	movzx  ebp,WORD PTR [rax]
  429158:	cmp    bp,r9w
  42915c:	jne    42917a <flatcc_json_printer_uint16_field@@Base+0x4a>
  42915e:	cmp    BYTE PTR [rbx+0x34],0x0
  429162:	mov    ebp,r9d
  429165:	jne    4292c4 <flatcc_json_printer_uint16_field@@Base+0x194>
  42916b:	jmp    42917a <flatcc_json_printer_uint16_field@@Base+0x4a>
  42916d:	cmp    BYTE PTR [rbx+0x35],0x0
  429171:	mov    ebp,r9d
  429174:	je     4292c4 <flatcc_json_printer_uint16_field@@Base+0x194>
  42917a:	mov    eax,DWORD PTR [rsi+0x18]
  42917d:	lea    edx,[rax+0x1]
  429180:	mov    DWORD PTR [rsi+0x18],edx
  429183:	test   eax,eax
  429185:	je     429196 <flatcc_json_printer_uint16_field@@Base+0x66>
  429187:	mov    rax,QWORD PTR [rbx+0x28]
  42918b:	lea    rdx,[rax+0x1]
  42918f:	mov    QWORD PTR [rbx+0x28],rdx
  429193:	mov    BYTE PTR [rax],0x2c
  429196:	movsxd rdx,r8d
  429199:	mov    rdi,rbx
  42919c:	mov    rsi,rcx
  42919f:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4291a4:	mov    rsi,QWORD PTR [rbx+0x28]
  4291a8:	movzx  edx,bp
  4291ab:	cmp    edx,0x3e8
  4291b1:	jb     4291c3 <flatcc_json_printer_uint16_field@@Base+0x93>
  4291b3:	xor    eax,eax
  4291b5:	cmp    edx,0x270f
  4291bb:	seta   al
  4291be:	or     eax,0x4
  4291c1:	jmp    4291e8 <flatcc_json_printer_uint16_field@@Base+0xb8>
  4291c3:	cmp    edx,0x64
  4291c6:	jb     4291dd <flatcc_json_printer_uint16_field@@Base+0xad>
  4291c8:	mov    BYTE PTR [rsi+0x3],0x0
  4291cc:	add    rsi,0x3
  4291d0:	mov    eax,0x3
  4291d5:	mov    rcx,rsi
  4291d8:	jmp    42928a <flatcc_json_printer_uint16_field@@Base+0x15a>
  4291dd:	xor    eax,eax
  4291df:	cmp    edx,0x9
  4291e2:	seta   al
  4291e5:	add    eax,0x1
  4291e8:	mov    edi,eax
  4291ea:	lea    rcx,[rsi+rdi*1]
  4291ee:	mov    BYTE PTR [rsi+rdi*1],0x0
  4291f2:	test   al,0x1
  4291f4:	jne    429255 <flatcc_json_printer_uint16_field@@Base+0x125>
  4291f6:	cmp    al,0x2
  4291f8:	je     42922b <flatcc_json_printer_uint16_field@@Base+0xfb>
  4291fa:	cmp    al,0x4
  4291fc:	jne    4292be <flatcc_json_printer_uint16_field@@Base+0x18e>
  429202:	mov    esi,edx
  429204:	shr    esi,0x2
  429207:	imul   ebp,esi,0x147b
  42920d:	shr    ebp,0x11
  429210:	imul   esi,ebp,0x64
  429213:	sub    edx,esi
  429215:	movzx  edx,dx
  429218:	lea    rsi,[rip+0x11161]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42921f:	movzx  edx,WORD PTR [rsi+rdx*2]
  429223:	mov    WORD PTR [rcx-0x2],dx
  429227:	lea    rcx,[rcx-0x2]
  42922b:	movzx  edx,bp
  42922e:	mov    esi,edx
  429230:	shr    esi,0x2
  429233:	imul   esi,esi,0x147b
  429239:	shr    esi,0x11
  42923c:	imul   esi,esi,0x64
  42923f:	sub    edx,esi
  429241:	movzx  edx,dx
  429244:	lea    rsi,[rip+0x11135]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42924b:	movzx  edx,WORD PTR [rsi+rdx*2]
  42924f:	mov    WORD PTR [rcx-0x2],dx
  429253:	jmp    4292be <flatcc_json_printer_uint16_field@@Base+0x18e>
  429255:	cmp    al,0x1
  429257:	je     4292b6 <flatcc_json_printer_uint16_field@@Base+0x186>
  429259:	cmp    al,0x3
  42925b:	je     42928a <flatcc_json_printer_uint16_field@@Base+0x15a>
  42925d:	cmp    al,0x5
  42925f:	jne    4292be <flatcc_json_printer_uint16_field@@Base+0x18e>
  429261:	mov    esi,edx
  429263:	shr    esi,0x2
  429266:	imul   ebp,esi,0x147b
  42926c:	shr    ebp,0x11
  42926f:	imul   esi,ebp,0x64
  429272:	sub    edx,esi
  429274:	movzx  edx,dx
  429277:	lea    rsi,[rip+0x11102]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42927e:	movzx  edx,WORD PTR [rsi+rdx*2]
  429282:	mov    WORD PTR [rcx-0x2],dx
  429286:	lea    rcx,[rcx-0x2]
  42928a:	movzx  edx,bp
  42928d:	mov    esi,edx
  42928f:	shr    esi,0x2
  429292:	imul   ebp,esi,0x147b
  429298:	shr    ebp,0x11
  42929b:	imul   esi,ebp,0x64
  42929e:	sub    edx,esi
  4292a0:	movzx  edx,dx
  4292a3:	lea    rsi,[rip+0x110d6]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4292aa:	movzx  edx,WORD PTR [rsi+rdx*2]
  4292ae:	mov    WORD PTR [rcx-0x2],dx
  4292b2:	lea    rcx,[rcx-0x2]
  4292b6:	add    bpl,0x30
  4292ba:	mov    BYTE PTR [rcx-0x1],bpl
  4292be:	mov    eax,eax
  4292c0:	add    QWORD PTR [rbx+0x28],rax
  4292c4:	add    rsp,0x8
  4292c8:	pop    rbx
  4292c9:	pop    rbp
  4292ca:	ret    
  4292cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004292d0 <flatcc_json_printer_uint32_field@@Base>:
  4292d0:	push   rbp
  4292d1:	push   rbx
  4292d2:	push   rax
  4292d3:	mov    rbx,rdi
  4292d6:	lea    eax,[rdx+rdx*1]
  4292d9:	add    eax,0x4
  4292dc:	cmp    eax,DWORD PTR [rsi+0x10]
  4292df:	jge    429307 <flatcc_json_printer_uint32_field@@Base+0x37>
  4292e1:	mov    rdx,QWORD PTR [rsi+0x8]
  4292e5:	mov    eax,eax
  4292e7:	movzx  eax,WORD PTR [rdx+rax*1]
  4292eb:	test   rax,rax
  4292ee:	je     429307 <flatcc_json_printer_uint32_field@@Base+0x37>
  4292f0:	add    rax,QWORD PTR [rsi]
  4292f3:	je     429307 <flatcc_json_printer_uint32_field@@Base+0x37>
  4292f5:	mov    ebp,DWORD PTR [rax]
  4292f7:	cmp    ebp,r9d
  4292fa:	jne    429310 <flatcc_json_printer_uint32_field@@Base+0x40>
  4292fc:	cmp    BYTE PTR [rbx+0x34],0x0
  429300:	mov    ebp,r9d
  429303:	jne    42934b <flatcc_json_printer_uint32_field@@Base+0x7b>
  429305:	jmp    429310 <flatcc_json_printer_uint32_field@@Base+0x40>
  429307:	cmp    BYTE PTR [rbx+0x35],0x0
  42930b:	mov    ebp,r9d
  42930e:	je     42934b <flatcc_json_printer_uint32_field@@Base+0x7b>
  429310:	mov    eax,DWORD PTR [rsi+0x18]
  429313:	lea    edx,[rax+0x1]
  429316:	mov    DWORD PTR [rsi+0x18],edx
  429319:	test   eax,eax
  42931b:	je     42932c <flatcc_json_printer_uint32_field@@Base+0x5c>
  42931d:	mov    rax,QWORD PTR [rbx+0x28]
  429321:	lea    rdx,[rax+0x1]
  429325:	mov    QWORD PTR [rbx+0x28],rdx
  429329:	mov    BYTE PTR [rax],0x2c
  42932c:	movsxd rdx,r8d
  42932f:	mov    rdi,rbx
  429332:	mov    rsi,rcx
  429335:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42933a:	mov    rsi,QWORD PTR [rbx+0x28]
  42933e:	mov    edi,ebp
  429340:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  429345:	cdqe   
  429347:	add    QWORD PTR [rbx+0x28],rax
  42934b:	add    rsp,0x8
  42934f:	pop    rbx
  429350:	pop    rbp
  429351:	ret    
  429352:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42935c:	nop    DWORD PTR [rax+0x0]

0000000000429360 <flatcc_json_printer_uint64_field@@Base>:
  429360:	push   r14
  429362:	push   rbx
  429363:	push   rax
  429364:	mov    rbx,rdi
  429367:	lea    eax,[rdx+rdx*1]
  42936a:	add    eax,0x4
  42936d:	cmp    eax,DWORD PTR [rsi+0x10]
  429370:	jge    429399 <flatcc_json_printer_uint64_field@@Base+0x39>
  429372:	mov    rdx,QWORD PTR [rsi+0x8]
  429376:	mov    eax,eax
  429378:	movzx  eax,WORD PTR [rdx+rax*1]
  42937c:	test   rax,rax
  42937f:	je     429399 <flatcc_json_printer_uint64_field@@Base+0x39>
  429381:	add    rax,QWORD PTR [rsi]
  429384:	je     429399 <flatcc_json_printer_uint64_field@@Base+0x39>
  429386:	mov    r14,QWORD PTR [rax]
  429389:	cmp    r14,r9
  42938c:	jne    4293a2 <flatcc_json_printer_uint64_field@@Base+0x42>
  42938e:	cmp    BYTE PTR [rbx+0x34],0x0
  429392:	mov    r14,r9
  429395:	jne    4293de <flatcc_json_printer_uint64_field@@Base+0x7e>
  429397:	jmp    4293a2 <flatcc_json_printer_uint64_field@@Base+0x42>
  429399:	cmp    BYTE PTR [rbx+0x35],0x0
  42939d:	mov    r14,r9
  4293a0:	je     4293de <flatcc_json_printer_uint64_field@@Base+0x7e>
  4293a2:	mov    eax,DWORD PTR [rsi+0x18]
  4293a5:	lea    edx,[rax+0x1]
  4293a8:	mov    DWORD PTR [rsi+0x18],edx
  4293ab:	test   eax,eax
  4293ad:	je     4293be <flatcc_json_printer_uint64_field@@Base+0x5e>
  4293af:	mov    rax,QWORD PTR [rbx+0x28]
  4293b3:	lea    rdx,[rax+0x1]
  4293b7:	mov    QWORD PTR [rbx+0x28],rdx
  4293bb:	mov    BYTE PTR [rax],0x2c
  4293be:	movsxd rdx,r8d
  4293c1:	mov    rdi,rbx
  4293c4:	mov    rsi,rcx
  4293c7:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4293cc:	mov    rsi,QWORD PTR [rbx+0x28]
  4293d0:	mov    rdi,r14
  4293d3:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  4293d8:	cdqe   
  4293da:	add    QWORD PTR [rbx+0x28],rax
  4293de:	add    rsp,0x8
  4293e2:	pop    rbx
  4293e3:	pop    r14
  4293e5:	ret    
  4293e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004293f0 <flatcc_json_printer_int8_field@@Base>:
  4293f0:	push   r14
  4293f2:	push   rbx
  4293f3:	push   rax
  4293f4:	mov    r14,rdi
  4293f7:	lea    eax,[rdx+rdx*1]
  4293fa:	add    eax,0x4
  4293fd:	cmp    eax,DWORD PTR [rsi+0x10]
  429400:	jge    42942d <flatcc_json_printer_int8_field@@Base+0x3d>
  429402:	mov    rdx,QWORD PTR [rsi+0x8]
  429406:	mov    eax,eax
  429408:	movzx  eax,WORD PTR [rdx+rax*1]
  42940c:	test   rax,rax
  42940f:	je     42942d <flatcc_json_printer_int8_field@@Base+0x3d>
  429411:	add    rax,QWORD PTR [rsi]
  429414:	je     42942d <flatcc_json_printer_int8_field@@Base+0x3d>
  429416:	mov    bl,BYTE PTR [rax]
  429418:	cmp    bl,r9b
  42941b:	jne    42943b <flatcc_json_printer_int8_field@@Base+0x4b>
  42941d:	cmp    BYTE PTR [r14+0x34],0x0
  429422:	mov    ebx,r9d
  429425:	jne    429506 <flatcc_json_printer_int8_field@@Base+0x116>
  42942b:	jmp    42943b <flatcc_json_printer_int8_field@@Base+0x4b>
  42942d:	cmp    BYTE PTR [r14+0x35],0x0
  429432:	mov    ebx,r9d
  429435:	je     429506 <flatcc_json_printer_int8_field@@Base+0x116>
  42943b:	mov    eax,DWORD PTR [rsi+0x18]
  42943e:	lea    edx,[rax+0x1]
  429441:	mov    DWORD PTR [rsi+0x18],edx
  429444:	test   eax,eax
  429446:	je     429457 <flatcc_json_printer_int8_field@@Base+0x67>
  429448:	mov    rax,QWORD PTR [r14+0x28]
  42944c:	lea    rdx,[rax+0x1]
  429450:	mov    QWORD PTR [r14+0x28],rdx
  429454:	mov    BYTE PTR [rax],0x2c
  429457:	movsxd rdx,r8d
  42945a:	mov    rdi,r14
  42945d:	mov    rsi,rcx
  429460:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429465:	mov    rsi,QWORD PTR [r14+0x28]
  429469:	mov    eax,ebx
  42946b:	shr    al,0x7
  42946e:	movzx  edi,al
  429471:	test   bl,bl
  429473:	js     4294b0 <flatcc_json_printer_int8_field@@Base+0xc0>
  429475:	cmp    bl,0x64
  429478:	jb     4294be <flatcc_json_printer_int8_field@@Base+0xce>
  42947a:	mov    BYTE PTR [rsi+0x3],0x0
  42947e:	movzx  eax,bl
  429481:	lea    ecx,[rax+rax*4]
  429484:	lea    ecx,[rax+rcx*8]
  429487:	shr    ecx,0xc
  42948a:	mov    dl,0x64
  42948c:	mov    eax,ecx
  42948e:	mul    dl
  429490:	sub    bl,al
  429492:	movzx  eax,bl
  429495:	lea    rdx,[rip+0x10ee4]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42949c:	movzx  eax,WORD PTR [rdx+rax*2]
  4294a0:	mov    WORD PTR [rsi+0x1],ax
  4294a4:	or     cl,0x30
  4294a7:	mov    BYTE PTR [rsi],cl
  4294a9:	mov    eax,0x3
  4294ae:	jmp    4294ff <flatcc_json_printer_int8_field@@Base+0x10f>
  4294b0:	mov    BYTE PTR [rsi],0x2d
  4294b3:	add    rsi,0x1
  4294b7:	neg    bl
  4294b9:	cmp    bl,0x64
  4294bc:	jae    42947a <flatcc_json_printer_int8_field@@Base+0x8a>
  4294be:	cmp    bl,0xa
  4294c1:	jb     4294f1 <flatcc_json_printer_int8_field@@Base+0x101>
  4294c3:	mov    BYTE PTR [rsi+0x2],0x0
  4294c7:	movzx  eax,bl
  4294ca:	lea    ecx,[rax+rax*4]
  4294cd:	lea    eax,[rax+rcx*8]
  4294d0:	shr    eax,0xc
  4294d3:	mov    cl,0x64
  4294d5:	mul    cl
  4294d7:	sub    bl,al
  4294d9:	movzx  eax,bl
  4294dc:	lea    rcx,[rip+0x10e9d]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4294e3:	movzx  eax,WORD PTR [rcx+rax*2]
  4294e7:	mov    WORD PTR [rsi],ax
  4294ea:	mov    eax,0x2
  4294ef:	jmp    4294ff <flatcc_json_printer_int8_field@@Base+0x10f>
  4294f1:	mov    BYTE PTR [rsi+0x1],0x0
  4294f5:	add    bl,0x30
  4294f8:	mov    BYTE PTR [rsi],bl
  4294fa:	mov    eax,0x1
  4294ff:	add    rax,rdi
  429502:	add    QWORD PTR [r14+0x28],rax
  429506:	add    rsp,0x8
  42950a:	pop    rbx
  42950b:	pop    r14
  42950d:	ret    
  42950e:	xchg   ax,ax

0000000000429510 <flatcc_json_printer_int16_field@@Base>:
  429510:	push   rbp
  429511:	push   rbx
  429512:	push   rax
  429513:	mov    rbx,rdi
  429516:	lea    eax,[rdx+rdx*1]
  429519:	add    eax,0x4
  42951c:	cmp    eax,DWORD PTR [rsi+0x10]
  42951f:	jge    42954d <flatcc_json_printer_int16_field@@Base+0x3d>
  429521:	mov    rdx,QWORD PTR [rsi+0x8]
  429525:	mov    eax,eax
  429527:	movzx  eax,WORD PTR [rdx+rax*1]
  42952b:	test   rax,rax
  42952e:	je     42954d <flatcc_json_printer_int16_field@@Base+0x3d>
  429530:	add    rax,QWORD PTR [rsi]
  429533:	je     42954d <flatcc_json_printer_int16_field@@Base+0x3d>
  429535:	movzx  ebp,WORD PTR [rax]
  429538:	cmp    bp,r9w
  42953c:	jne    42955a <flatcc_json_printer_int16_field@@Base+0x4a>
  42953e:	cmp    BYTE PTR [rbx+0x34],0x0
  429542:	mov    ebp,r9d
  429545:	jne    4296c2 <flatcc_json_printer_int16_field@@Base+0x1b2>
  42954b:	jmp    42955a <flatcc_json_printer_int16_field@@Base+0x4a>
  42954d:	cmp    BYTE PTR [rbx+0x35],0x0
  429551:	mov    ebp,r9d
  429554:	je     4296c2 <flatcc_json_printer_int16_field@@Base+0x1b2>
  42955a:	mov    eax,DWORD PTR [rsi+0x18]
  42955d:	lea    edx,[rax+0x1]
  429560:	mov    DWORD PTR [rsi+0x18],edx
  429563:	test   eax,eax
  429565:	je     429576 <flatcc_json_printer_int16_field@@Base+0x66>
  429567:	mov    rax,QWORD PTR [rbx+0x28]
  42956b:	lea    rdx,[rax+0x1]
  42956f:	mov    QWORD PTR [rbx+0x28],rdx
  429573:	mov    BYTE PTR [rax],0x2c
  429576:	movsxd rdx,r8d
  429579:	mov    rdi,rbx
  42957c:	mov    rsi,rcx
  42957f:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429584:	mov    rdi,QWORD PTR [rbx+0x28]
  429588:	movzx  r8d,bp
  42958c:	test   r8w,r8w
  429590:	jns    42959b <flatcc_json_printer_int16_field@@Base+0x8b>
  429592:	mov    BYTE PTR [rdi],0x2d
  429595:	add    rdi,0x1
  429599:	neg    ebp
  42959b:	shr    r8d,0xf
  42959f:	movzx  esi,bp
  4295a2:	cmp    esi,0x3e8
  4295a8:	jb     4295ba <flatcc_json_printer_int16_field@@Base+0xaa>
  4295aa:	xor    ecx,ecx
  4295ac:	cmp    esi,0x270f
  4295b2:	seta   cl
  4295b5:	or     ecx,0x4
  4295b8:	jmp    4295df <flatcc_json_printer_int16_field@@Base+0xcf>
  4295ba:	cmp    esi,0x64
  4295bd:	jb     4295d4 <flatcc_json_printer_int16_field@@Base+0xc4>
  4295bf:	mov    BYTE PTR [rdi+0x3],0x0
  4295c3:	add    rdi,0x3
  4295c7:	mov    ecx,0x3
  4295cc:	mov    rdx,rdi
  4295cf:	jmp    429687 <flatcc_json_printer_int16_field@@Base+0x177>
  4295d4:	xor    ecx,ecx
  4295d6:	cmp    esi,0x9
  4295d9:	seta   cl
  4295dc:	add    ecx,0x1
  4295df:	mov    eax,ecx
  4295e1:	lea    rdx,[rdi+rax*1]
  4295e5:	mov    BYTE PTR [rdi+rax*1],0x0
  4295e9:	test   cl,0x1
  4295ec:	jne    42964f <flatcc_json_printer_int16_field@@Base+0x13f>
  4295ee:	cmp    cl,0x2
  4295f1:	je     429625 <flatcc_json_printer_int16_field@@Base+0x115>
  4295f3:	cmp    cl,0x4
  4295f6:	jne    4296bb <flatcc_json_printer_int16_field@@Base+0x1ab>
  4295fc:	mov    eax,esi
  4295fe:	shr    eax,0x2
  429601:	imul   ebp,eax,0x147b
  429607:	shr    ebp,0x11
  42960a:	imul   eax,ebp,0x64
  42960d:	sub    esi,eax
  42960f:	movzx  eax,si
  429612:	lea    rsi,[rip+0x10d67]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429619:	movzx  eax,WORD PTR [rsi+rax*2]
  42961d:	mov    WORD PTR [rdx-0x2],ax
  429621:	lea    rdx,[rdx-0x2]
  429625:	movzx  eax,bp
  429628:	mov    esi,eax
  42962a:	shr    esi,0x2
  42962d:	imul   esi,esi,0x147b
  429633:	shr    esi,0x11
  429636:	imul   esi,esi,0x64
  429639:	sub    eax,esi
  42963b:	movzx  eax,ax
  42963e:	lea    rsi,[rip+0x10d3b]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429645:	movzx  eax,WORD PTR [rsi+rax*2]
  429649:	mov    WORD PTR [rdx-0x2],ax
  42964d:	jmp    4296bb <flatcc_json_printer_int16_field@@Base+0x1ab>
  42964f:	cmp    cl,0x1
  429652:	je     4296b3 <flatcc_json_printer_int16_field@@Base+0x1a3>
  429654:	cmp    cl,0x3
  429657:	je     429687 <flatcc_json_printer_int16_field@@Base+0x177>
  429659:	cmp    cl,0x5
  42965c:	jne    4296bb <flatcc_json_printer_int16_field@@Base+0x1ab>
  42965e:	mov    eax,esi
  429660:	shr    eax,0x2
  429663:	imul   ebp,eax,0x147b
  429669:	shr    ebp,0x11
  42966c:	imul   eax,ebp,0x64
  42966f:	sub    esi,eax
  429671:	movzx  eax,si
  429674:	lea    rsi,[rip+0x10d05]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42967b:	movzx  eax,WORD PTR [rsi+rax*2]
  42967f:	mov    WORD PTR [rdx-0x2],ax
  429683:	lea    rdx,[rdx-0x2]
  429687:	movzx  eax,bp
  42968a:	mov    esi,eax
  42968c:	shr    esi,0x2
  42968f:	imul   ebp,esi,0x147b
  429695:	shr    ebp,0x11
  429698:	imul   esi,ebp,0x64
  42969b:	sub    eax,esi
  42969d:	movzx  eax,ax
  4296a0:	lea    rsi,[rip+0x10cd9]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4296a7:	movzx  eax,WORD PTR [rsi+rax*2]
  4296ab:	mov    WORD PTR [rdx-0x2],ax
  4296af:	lea    rdx,[rdx-0x2]
  4296b3:	add    bpl,0x30
  4296b7:	mov    BYTE PTR [rdx-0x1],bpl
  4296bb:	add    ecx,r8d
  4296be:	add    QWORD PTR [rbx+0x28],rcx
  4296c2:	add    rsp,0x8
  4296c6:	pop    rbx
  4296c7:	pop    rbp
  4296c8:	ret    
  4296c9:	nop    DWORD PTR [rax+0x0]

00000000004296d0 <flatcc_json_printer_int32_field@@Base>:
  4296d0:	push   rbp
  4296d1:	push   r14
  4296d3:	push   rbx
  4296d4:	mov    r14,rdi
  4296d7:	lea    eax,[rdx+rdx*1]
  4296da:	add    eax,0x4
  4296dd:	cmp    eax,DWORD PTR [rsi+0x10]
  4296e0:	jge    429709 <flatcc_json_printer_int32_field@@Base+0x39>
  4296e2:	mov    rdx,QWORD PTR [rsi+0x8]
  4296e6:	mov    eax,eax
  4296e8:	movzx  eax,WORD PTR [rdx+rax*1]
  4296ec:	test   rax,rax
  4296ef:	je     429709 <flatcc_json_printer_int32_field@@Base+0x39>
  4296f1:	add    rax,QWORD PTR [rsi]
  4296f4:	je     429709 <flatcc_json_printer_int32_field@@Base+0x39>
  4296f6:	mov    ebx,DWORD PTR [rax]
  4296f8:	cmp    ebx,r9d
  4296fb:	jne    429713 <flatcc_json_printer_int32_field@@Base+0x43>
  4296fd:	cmp    BYTE PTR [r14+0x34],0x0
  429702:	mov    ebx,r9d
  429705:	jne    429762 <flatcc_json_printer_int32_field@@Base+0x92>
  429707:	jmp    429713 <flatcc_json_printer_int32_field@@Base+0x43>
  429709:	cmp    BYTE PTR [r14+0x35],0x0
  42970e:	mov    ebx,r9d
  429711:	je     429762 <flatcc_json_printer_int32_field@@Base+0x92>
  429713:	mov    eax,DWORD PTR [rsi+0x18]
  429716:	lea    edx,[rax+0x1]
  429719:	mov    DWORD PTR [rsi+0x18],edx
  42971c:	test   eax,eax
  42971e:	je     42972f <flatcc_json_printer_int32_field@@Base+0x5f>
  429720:	mov    rax,QWORD PTR [r14+0x28]
  429724:	lea    rdx,[rax+0x1]
  429728:	mov    QWORD PTR [r14+0x28],rdx
  42972c:	mov    BYTE PTR [rax],0x2c
  42972f:	movsxd rdx,r8d
  429732:	mov    rdi,r14
  429735:	mov    rsi,rcx
  429738:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42973d:	mov    rsi,QWORD PTR [r14+0x28]
  429741:	mov    ebp,ebx
  429743:	shr    ebp,0x1f
  429746:	test   ebx,ebx
  429748:	jns    429753 <flatcc_json_printer_int32_field@@Base+0x83>
  42974a:	mov    BYTE PTR [rsi],0x2d
  42974d:	add    rsi,0x1
  429751:	neg    ebx
  429753:	mov    edi,ebx
  429755:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42975a:	add    eax,ebp
  42975c:	cdqe   
  42975e:	add    QWORD PTR [r14+0x28],rax
  429762:	pop    rbx
  429763:	pop    r14
  429765:	pop    rbp
  429766:	ret    
  429767:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429770 <flatcc_json_printer_int64_field@@Base>:
  429770:	push   r15
  429772:	push   r14
  429774:	push   rbx
  429775:	mov    r14,rdi
  429778:	lea    eax,[rdx+rdx*1]
  42977b:	add    eax,0x4
  42977e:	cmp    eax,DWORD PTR [rsi+0x10]
  429781:	jge    4297ab <flatcc_json_printer_int64_field@@Base+0x3b>
  429783:	mov    rdx,QWORD PTR [rsi+0x8]
  429787:	mov    eax,eax
  429789:	movzx  eax,WORD PTR [rdx+rax*1]
  42978d:	test   rax,rax
  429790:	je     4297ab <flatcc_json_printer_int64_field@@Base+0x3b>
  429792:	add    rax,QWORD PTR [rsi]
  429795:	je     4297ab <flatcc_json_printer_int64_field@@Base+0x3b>
  429797:	mov    r15,QWORD PTR [rax]
  42979a:	cmp    r15,r9
  42979d:	jne    4297b5 <flatcc_json_printer_int64_field@@Base+0x45>
  42979f:	cmp    BYTE PTR [r14+0x34],0x0
  4297a4:	mov    r15,r9
  4297a7:	jne    429809 <flatcc_json_printer_int64_field@@Base+0x99>
  4297a9:	jmp    4297b5 <flatcc_json_printer_int64_field@@Base+0x45>
  4297ab:	cmp    BYTE PTR [r14+0x35],0x0
  4297b0:	mov    r15,r9
  4297b3:	je     429809 <flatcc_json_printer_int64_field@@Base+0x99>
  4297b5:	mov    eax,DWORD PTR [rsi+0x18]
  4297b8:	lea    edx,[rax+0x1]
  4297bb:	mov    DWORD PTR [rsi+0x18],edx
  4297be:	test   eax,eax
  4297c0:	je     4297d1 <flatcc_json_printer_int64_field@@Base+0x61>
  4297c2:	mov    rax,QWORD PTR [r14+0x28]
  4297c6:	lea    rdx,[rax+0x1]
  4297ca:	mov    QWORD PTR [r14+0x28],rdx
  4297ce:	mov    BYTE PTR [rax],0x2c
  4297d1:	movsxd rdx,r8d
  4297d4:	mov    rdi,r14
  4297d7:	mov    rsi,rcx
  4297da:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4297df:	mov    rsi,QWORD PTR [r14+0x28]
  4297e3:	mov    rbx,r15
  4297e6:	shr    rbx,0x3f
  4297ea:	test   r15,r15
  4297ed:	jns    4297f9 <flatcc_json_printer_int64_field@@Base+0x89>
  4297ef:	mov    BYTE PTR [rsi],0x2d
  4297f2:	add    rsi,0x1
  4297f6:	neg    r15
  4297f9:	mov    rdi,r15
  4297fc:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  429801:	add    eax,ebx
  429803:	cdqe   
  429805:	add    QWORD PTR [r14+0x28],rax
  429809:	pop    rbx
  42980a:	pop    r14
  42980c:	pop    r15
  42980e:	ret    
  42980f:	nop

0000000000429810 <flatcc_json_printer_bool_field@@Base>:
  429810:	push   rbp
  429811:	push   rbx
  429812:	push   rax
  429813:	mov    rbx,rdi
  429816:	lea    eax,[rdx+rdx*1]
  429819:	add    eax,0x4
  42981c:	cmp    eax,DWORD PTR [rsi+0x10]
  42981f:	jge    429848 <flatcc_json_printer_bool_field@@Base+0x38>
  429821:	mov    rdx,QWORD PTR [rsi+0x8]
  429825:	mov    eax,eax
  429827:	movzx  eax,WORD PTR [rdx+rax*1]
  42982b:	test   rax,rax
  42982e:	je     429848 <flatcc_json_printer_bool_field@@Base+0x38>
  429830:	add    rax,QWORD PTR [rsi]
  429833:	je     429848 <flatcc_json_printer_bool_field@@Base+0x38>
  429835:	mov    bpl,BYTE PTR [rax]
  429838:	cmp    bpl,r9b
  42983b:	jne    429851 <flatcc_json_printer_bool_field@@Base+0x41>
  42983d:	cmp    BYTE PTR [rbx+0x34],0x0
  429841:	mov    ebp,r9d
  429844:	jne    4298aa <flatcc_json_printer_bool_field@@Base+0x9a>
  429846:	jmp    429851 <flatcc_json_printer_bool_field@@Base+0x41>
  429848:	cmp    BYTE PTR [rbx+0x35],0x0
  42984c:	mov    ebp,r9d
  42984f:	je     4298aa <flatcc_json_printer_bool_field@@Base+0x9a>
  429851:	mov    eax,DWORD PTR [rsi+0x18]
  429854:	lea    edx,[rax+0x1]
  429857:	mov    DWORD PTR [rsi+0x18],edx
  42985a:	test   eax,eax
  42985c:	je     42986d <flatcc_json_printer_bool_field@@Base+0x5d>
  42985e:	mov    rax,QWORD PTR [rbx+0x28]
  429862:	lea    rdx,[rax+0x1]
  429866:	mov    QWORD PTR [rbx+0x28],rdx
  42986a:	mov    BYTE PTR [rax],0x2c
  42986d:	movsxd rdx,r8d
  429870:	mov    rdi,rbx
  429873:	mov    rsi,rcx
  429876:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42987b:	mov    rax,QWORD PTR [rbx+0x28]
  42987f:	test   bpl,bpl
  429882:	je     429895 <flatcc_json_printer_bool_field@@Base+0x85>
  429884:	mov    BYTE PTR [rax+0x4],0x0
  429888:	mov    DWORD PTR [rax],0x65757274
  42988e:	mov    eax,0x4
  429893:	jmp    4298a6 <flatcc_json_printer_bool_field@@Base+0x96>
  429895:	mov    WORD PTR [rax+0x4],0x65
  42989b:	mov    DWORD PTR [rax],0x736c6166
  4298a1:	mov    eax,0x5
  4298a6:	add    QWORD PTR [rbx+0x28],rax
  4298aa:	add    rsp,0x8
  4298ae:	pop    rbx
  4298af:	pop    rbp
  4298b0:	ret    
  4298b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004298c0 <flatcc_json_printer_float_field@@Base>:
  4298c0:	push   rbx
  4298c1:	sub    rsp,0x10
  4298c5:	mov    rbx,rdi
  4298c8:	lea    eax,[rdx+rdx*1]
  4298cb:	add    eax,0x4
  4298ce:	cmp    eax,DWORD PTR [rsi+0x10]
  4298d1:	jge    4298ff <flatcc_json_printer_float_field@@Base+0x3f>
  4298d3:	mov    rdx,QWORD PTR [rsi+0x8]
  4298d7:	mov    eax,eax
  4298d9:	movzx  eax,WORD PTR [rdx+rax*1]
  4298dd:	test   rax,rax
  4298e0:	je     4298ff <flatcc_json_printer_float_field@@Base+0x3f>
  4298e2:	add    rax,QWORD PTR [rsi]
  4298e5:	je     4298ff <flatcc_json_printer_float_field@@Base+0x3f>
  4298e7:	vmovss xmm1,DWORD PTR [rax]
  4298eb:	vucomiss xmm1,xmm0
  4298ef:	jne    429954 <flatcc_json_printer_float_field@@Base+0x94>
  4298f1:	jp     429954 <flatcc_json_printer_float_field@@Base+0x94>
  4298f3:	cmp    BYTE PTR [rbx+0x34],0x0
  4298f7:	vmovaps xmm0,xmm1
  4298fb:	jne    42994e <flatcc_json_printer_float_field@@Base+0x8e>
  4298fd:	jmp    429905 <flatcc_json_printer_float_field@@Base+0x45>
  4298ff:	cmp    BYTE PTR [rbx+0x35],0x0
  429903:	je     42994e <flatcc_json_printer_float_field@@Base+0x8e>
  429905:	vmovss DWORD PTR [rsp+0xc],xmm0
  42990b:	mov    eax,DWORD PTR [rsi+0x18]
  42990e:	lea    edx,[rax+0x1]
  429911:	mov    DWORD PTR [rsi+0x18],edx
  429914:	test   eax,eax
  429916:	je     429927 <flatcc_json_printer_float_field@@Base+0x67>
  429918:	mov    rax,QWORD PTR [rbx+0x28]
  42991c:	lea    rdx,[rax+0x1]
  429920:	mov    QWORD PTR [rbx+0x28],rdx
  429924:	mov    BYTE PTR [rax],0x2c
  429927:	movsxd rdx,r8d
  42992a:	mov    rdi,rbx
  42992d:	mov    rsi,rcx
  429930:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429935:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42993b:	vcvtss2sd xmm0,xmm0,xmm0
  42993f:	mov    rdi,QWORD PTR [rbx+0x28]
  429943:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  429948:	cdqe   
  42994a:	add    QWORD PTR [rbx+0x28],rax
  42994e:	add    rsp,0x10
  429952:	pop    rbx
  429953:	ret    
  429954:	vmovaps xmm0,xmm1
  429958:	jmp    429905 <flatcc_json_printer_float_field@@Base+0x45>
  42995a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429960 <flatcc_json_printer_double_field@@Base>:
  429960:	push   rbx
  429961:	sub    rsp,0x10
  429965:	mov    rbx,rdi
  429968:	lea    eax,[rdx+rdx*1]
  42996b:	add    eax,0x4
  42996e:	cmp    eax,DWORD PTR [rsi+0x10]
  429971:	jge    42999f <flatcc_json_printer_double_field@@Base+0x3f>
  429973:	mov    rdx,QWORD PTR [rsi+0x8]
  429977:	mov    eax,eax
  429979:	movzx  eax,WORD PTR [rdx+rax*1]
  42997d:	test   rax,rax
  429980:	je     42999f <flatcc_json_printer_double_field@@Base+0x3f>
  429982:	add    rax,QWORD PTR [rsi]
  429985:	je     42999f <flatcc_json_printer_double_field@@Base+0x3f>
  429987:	vmovsd xmm1,QWORD PTR [rax]
  42998b:	vucomisd xmm1,xmm0
  42998f:	jne    4299f0 <flatcc_json_printer_double_field@@Base+0x90>
  429991:	jp     4299f0 <flatcc_json_printer_double_field@@Base+0x90>
  429993:	cmp    BYTE PTR [rbx+0x34],0x0
  429997:	vmovaps xmm0,xmm1
  42999b:	jne    4299ea <flatcc_json_printer_double_field@@Base+0x8a>
  42999d:	jmp    4299a5 <flatcc_json_printer_double_field@@Base+0x45>
  42999f:	cmp    BYTE PTR [rbx+0x35],0x0
  4299a3:	je     4299ea <flatcc_json_printer_double_field@@Base+0x8a>
  4299a5:	vmovsd QWORD PTR [rsp+0x8],xmm0
  4299ab:	mov    eax,DWORD PTR [rsi+0x18]
  4299ae:	lea    edx,[rax+0x1]
  4299b1:	mov    DWORD PTR [rsi+0x18],edx
  4299b4:	test   eax,eax
  4299b6:	je     4299c7 <flatcc_json_printer_double_field@@Base+0x67>
  4299b8:	mov    rax,QWORD PTR [rbx+0x28]
  4299bc:	lea    rdx,[rax+0x1]
  4299c0:	mov    QWORD PTR [rbx+0x28],rdx
  4299c4:	mov    BYTE PTR [rax],0x2c
  4299c7:	movsxd rdx,r8d
  4299ca:	mov    rdi,rbx
  4299cd:	mov    rsi,rcx
  4299d0:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4299d5:	mov    rdi,QWORD PTR [rbx+0x28]
  4299d9:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  4299df:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  4299e4:	cdqe   
  4299e6:	add    QWORD PTR [rbx+0x28],rax
  4299ea:	add    rsp,0x10
  4299ee:	pop    rbx
  4299ef:	ret    
  4299f0:	vmovaps xmm0,xmm1
  4299f4:	jmp    4299a5 <flatcc_json_printer_double_field@@Base+0x45>
  4299f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429a00 <flatcc_json_printer_uint8_enum_field@@Base>:
  429a00:	push   r15
  429a02:	push   r14
  429a04:	push   rbx
  429a05:	mov    r14,rdi
  429a08:	mov    rdi,QWORD PTR [rsp+0x20]
  429a0d:	lea    eax,[rdx+rdx*1]
  429a10:	add    eax,0x4
  429a13:	cmp    eax,DWORD PTR [rsi+0x10]
  429a16:	jge    429a43 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  429a18:	mov    rdx,QWORD PTR [rsi+0x8]
  429a1c:	mov    eax,eax
  429a1e:	movzx  eax,WORD PTR [rdx+rax*1]
  429a22:	test   rax,rax
  429a25:	je     429a43 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  429a27:	add    rax,QWORD PTR [rsi]
  429a2a:	je     429a43 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  429a2c:	mov    bl,BYTE PTR [rax]
  429a2e:	cmp    bl,r9b
  429a31:	jne    429a51 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  429a33:	cmp    BYTE PTR [r14+0x34],0x0
  429a38:	mov    ebx,r9d
  429a3b:	jne    429b1b <flatcc_json_printer_uint8_enum_field@@Base+0x11b>
  429a41:	jmp    429a51 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  429a43:	cmp    BYTE PTR [r14+0x35],0x0
  429a48:	mov    ebx,r9d
  429a4b:	je     429b1b <flatcc_json_printer_uint8_enum_field@@Base+0x11b>
  429a51:	mov    r15,rdi
  429a54:	mov    eax,DWORD PTR [rsi+0x18]
  429a57:	lea    edx,[rax+0x1]
  429a5a:	mov    DWORD PTR [rsi+0x18],edx
  429a5d:	test   eax,eax
  429a5f:	je     429a70 <flatcc_json_printer_uint8_enum_field@@Base+0x70>
  429a61:	mov    rax,QWORD PTR [r14+0x28]
  429a65:	lea    rdx,[rax+0x1]
  429a69:	mov    QWORD PTR [r14+0x28],rdx
  429a6d:	mov    BYTE PTR [rax],0x2c
  429a70:	movsxd rdx,r8d
  429a73:	mov    rdi,r14
  429a76:	mov    rsi,rcx
  429a79:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429a7e:	cmp    BYTE PTR [r14+0x33],0x0
  429a83:	je     429ac6 <flatcc_json_printer_uint8_enum_field@@Base+0xc6>
  429a85:	mov    rdx,QWORD PTR [r14+0x28]
  429a89:	cmp    bl,0x64
  429a8c:	jb     429ad6 <flatcc_json_printer_uint8_enum_field@@Base+0xd6>
  429a8e:	mov    BYTE PTR [rdx+0x3],0x0
  429a92:	movzx  eax,bl
  429a95:	lea    ecx,[rax+rax*4]
  429a98:	lea    ecx,[rax+rcx*8]
  429a9b:	shr    ecx,0xc
  429a9e:	mov    sil,0x64
  429aa1:	mov    eax,ecx
  429aa3:	mul    sil
  429aa6:	sub    bl,al
  429aa8:	movzx  eax,bl
  429aab:	lea    rsi,[rip+0x108ce]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429ab2:	movzx  eax,WORD PTR [rsi+rax*2]
  429ab6:	mov    WORD PTR [rdx+0x1],ax
  429aba:	or     cl,0x30
  429abd:	mov    BYTE PTR [rdx],cl
  429abf:	mov    eax,0x3
  429ac4:	jmp    429b17 <flatcc_json_printer_uint8_enum_field@@Base+0x117>
  429ac6:	movzx  esi,bl
  429ac9:	mov    rdi,r14
  429acc:	mov    rax,r15
  429acf:	pop    rbx
  429ad0:	pop    r14
  429ad2:	pop    r15
  429ad4:	jmp    rax
  429ad6:	cmp    bl,0xa
  429ad9:	jb     429b09 <flatcc_json_printer_uint8_enum_field@@Base+0x109>
  429adb:	mov    BYTE PTR [rdx+0x2],0x0
  429adf:	movzx  eax,bl
  429ae2:	lea    ecx,[rax+rax*4]
  429ae5:	lea    eax,[rax+rcx*8]
  429ae8:	shr    eax,0xc
  429aeb:	mov    cl,0x64
  429aed:	mul    cl
  429aef:	sub    bl,al
  429af1:	movzx  eax,bl
  429af4:	lea    rcx,[rip+0x10885]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429afb:	movzx  eax,WORD PTR [rcx+rax*2]
  429aff:	mov    WORD PTR [rdx],ax
  429b02:	mov    eax,0x2
  429b07:	jmp    429b17 <flatcc_json_printer_uint8_enum_field@@Base+0x117>
  429b09:	mov    BYTE PTR [rdx+0x1],0x0
  429b0d:	add    bl,0x30
  429b10:	mov    BYTE PTR [rdx],bl
  429b12:	mov    eax,0x1
  429b17:	add    QWORD PTR [r14+0x28],rax
  429b1b:	pop    rbx
  429b1c:	pop    r14
  429b1e:	pop    r15
  429b20:	ret    
  429b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429b30 <flatcc_json_printer_uint16_enum_field@@Base>:
  429b30:	push   rbp
  429b31:	push   r14
  429b33:	push   rbx
  429b34:	mov    rbx,rdi
  429b37:	mov    rdi,QWORD PTR [rsp+0x20]
  429b3c:	lea    eax,[rdx+rdx*1]
  429b3f:	add    eax,0x4
  429b42:	cmp    eax,DWORD PTR [rsi+0x10]
  429b45:	jge    429b73 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  429b47:	mov    rdx,QWORD PTR [rsi+0x8]
  429b4b:	mov    eax,eax
  429b4d:	movzx  eax,WORD PTR [rdx+rax*1]
  429b51:	test   rax,rax
  429b54:	je     429b73 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  429b56:	add    rax,QWORD PTR [rsi]
  429b59:	je     429b73 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  429b5b:	movzx  ebp,WORD PTR [rax]
  429b5e:	cmp    bp,r9w
  429b62:	jne    429b80 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  429b64:	cmp    BYTE PTR [rbx+0x34],0x0
  429b68:	mov    ebp,r9d
  429b6b:	jne    429ce2 <flatcc_json_printer_uint16_enum_field@@Base+0x1b2>
  429b71:	jmp    429b80 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  429b73:	cmp    BYTE PTR [rbx+0x35],0x0
  429b77:	mov    ebp,r9d
  429b7a:	je     429ce2 <flatcc_json_printer_uint16_enum_field@@Base+0x1b2>
  429b80:	mov    r14,rdi
  429b83:	mov    eax,DWORD PTR [rsi+0x18]
  429b86:	lea    edx,[rax+0x1]
  429b89:	mov    DWORD PTR [rsi+0x18],edx
  429b8c:	test   eax,eax
  429b8e:	je     429b9f <flatcc_json_printer_uint16_enum_field@@Base+0x6f>
  429b90:	mov    rax,QWORD PTR [rbx+0x28]
  429b94:	lea    rdx,[rax+0x1]
  429b98:	mov    QWORD PTR [rbx+0x28],rdx
  429b9c:	mov    BYTE PTR [rax],0x2c
  429b9f:	movsxd rdx,r8d
  429ba2:	mov    rdi,rbx
  429ba5:	mov    rsi,rcx
  429ba8:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429bad:	cmp    BYTE PTR [rbx+0x33],0x0
  429bb1:	je     429bd2 <flatcc_json_printer_uint16_enum_field@@Base+0xa2>
  429bb3:	mov    rsi,QWORD PTR [rbx+0x28]
  429bb7:	movzx  edx,bp
  429bba:	cmp    edx,0x3e8
  429bc0:	jb     429be1 <flatcc_json_printer_uint16_enum_field@@Base+0xb1>
  429bc2:	xor    eax,eax
  429bc4:	cmp    edx,0x270f
  429bca:	seta   al
  429bcd:	or     eax,0x4
  429bd0:	jmp    429c06 <flatcc_json_printer_uint16_enum_field@@Base+0xd6>
  429bd2:	movzx  esi,bp
  429bd5:	mov    rdi,rbx
  429bd8:	mov    rax,r14
  429bdb:	pop    rbx
  429bdc:	pop    r14
  429bde:	pop    rbp
  429bdf:	jmp    rax
  429be1:	cmp    edx,0x64
  429be4:	jb     429bfb <flatcc_json_printer_uint16_enum_field@@Base+0xcb>
  429be6:	mov    BYTE PTR [rsi+0x3],0x0
  429bea:	add    rsi,0x3
  429bee:	mov    eax,0x3
  429bf3:	mov    rcx,rsi
  429bf6:	jmp    429ca8 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
  429bfb:	xor    eax,eax
  429bfd:	cmp    edx,0x9
  429c00:	seta   al
  429c03:	add    eax,0x1
  429c06:	mov    edi,eax
  429c08:	lea    rcx,[rsi+rdi*1]
  429c0c:	mov    BYTE PTR [rsi+rdi*1],0x0
  429c10:	test   al,0x1
  429c12:	jne    429c73 <flatcc_json_printer_uint16_enum_field@@Base+0x143>
  429c14:	cmp    al,0x2
  429c16:	je     429c49 <flatcc_json_printer_uint16_enum_field@@Base+0x119>
  429c18:	cmp    al,0x4
  429c1a:	jne    429cdc <flatcc_json_printer_uint16_enum_field@@Base+0x1ac>
  429c20:	mov    esi,edx
  429c22:	shr    esi,0x2
  429c25:	imul   ebp,esi,0x147b
  429c2b:	shr    ebp,0x11
  429c2e:	imul   esi,ebp,0x64
  429c31:	sub    edx,esi
  429c33:	movzx  edx,dx
  429c36:	lea    rsi,[rip+0x10743]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429c3d:	movzx  edx,WORD PTR [rsi+rdx*2]
  429c41:	mov    WORD PTR [rcx-0x2],dx
  429c45:	lea    rcx,[rcx-0x2]
  429c49:	movzx  edx,bp
  429c4c:	mov    esi,edx
  429c4e:	shr    esi,0x2
  429c51:	imul   esi,esi,0x147b
  429c57:	shr    esi,0x11
  429c5a:	imul   esi,esi,0x64
  429c5d:	sub    edx,esi
  429c5f:	movzx  edx,dx
  429c62:	lea    rsi,[rip+0x10717]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429c69:	movzx  edx,WORD PTR [rsi+rdx*2]
  429c6d:	mov    WORD PTR [rcx-0x2],dx
  429c71:	jmp    429cdc <flatcc_json_printer_uint16_enum_field@@Base+0x1ac>
  429c73:	cmp    al,0x1
  429c75:	je     429cd4 <flatcc_json_printer_uint16_enum_field@@Base+0x1a4>
  429c77:	cmp    al,0x3
  429c79:	je     429ca8 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
  429c7b:	cmp    al,0x5
  429c7d:	jne    429cdc <flatcc_json_printer_uint16_enum_field@@Base+0x1ac>
  429c7f:	mov    esi,edx
  429c81:	shr    esi,0x2
  429c84:	imul   ebp,esi,0x147b
  429c8a:	shr    ebp,0x11
  429c8d:	imul   esi,ebp,0x64
  429c90:	sub    edx,esi
  429c92:	movzx  edx,dx
  429c95:	lea    rsi,[rip+0x106e4]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429c9c:	movzx  edx,WORD PTR [rsi+rdx*2]
  429ca0:	mov    WORD PTR [rcx-0x2],dx
  429ca4:	lea    rcx,[rcx-0x2]
  429ca8:	movzx  edx,bp
  429cab:	mov    esi,edx
  429cad:	shr    esi,0x2
  429cb0:	imul   ebp,esi,0x147b
  429cb6:	shr    ebp,0x11
  429cb9:	imul   esi,ebp,0x64
  429cbc:	sub    edx,esi
  429cbe:	movzx  edx,dx
  429cc1:	lea    rsi,[rip+0x106b8]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429cc8:	movzx  edx,WORD PTR [rsi+rdx*2]
  429ccc:	mov    WORD PTR [rcx-0x2],dx
  429cd0:	lea    rcx,[rcx-0x2]
  429cd4:	add    bpl,0x30
  429cd8:	mov    BYTE PTR [rcx-0x1],bpl
  429cdc:	mov    eax,eax
  429cde:	add    QWORD PTR [rbx+0x28],rax
  429ce2:	pop    rbx
  429ce3:	pop    r14
  429ce5:	pop    rbp
  429ce6:	ret    
  429ce7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429cf0 <flatcc_json_printer_uint32_enum_field@@Base>:
  429cf0:	push   rbp
  429cf1:	push   r14
  429cf3:	push   rbx
  429cf4:	mov    rbx,rdi
  429cf7:	mov    rdi,QWORD PTR [rsp+0x20]
  429cfc:	lea    eax,[rdx+rdx*1]
  429cff:	add    eax,0x4
  429d02:	cmp    eax,DWORD PTR [rsi+0x10]
  429d05:	jge    429d2d <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  429d07:	mov    rdx,QWORD PTR [rsi+0x8]
  429d0b:	mov    eax,eax
  429d0d:	movzx  eax,WORD PTR [rdx+rax*1]
  429d11:	test   rax,rax
  429d14:	je     429d2d <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  429d16:	add    rax,QWORD PTR [rsi]
  429d19:	je     429d2d <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  429d1b:	mov    ebp,DWORD PTR [rax]
  429d1d:	cmp    ebp,r9d
  429d20:	jne    429d36 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  429d22:	cmp    BYTE PTR [rbx+0x34],0x0
  429d26:	mov    ebp,r9d
  429d29:	jne    429d7a <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  429d2b:	jmp    429d36 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  429d2d:	cmp    BYTE PTR [rbx+0x35],0x0
  429d31:	mov    ebp,r9d
  429d34:	je     429d7a <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  429d36:	mov    r14,rdi
  429d39:	mov    eax,DWORD PTR [rsi+0x18]
  429d3c:	lea    edx,[rax+0x1]
  429d3f:	mov    DWORD PTR [rsi+0x18],edx
  429d42:	test   eax,eax
  429d44:	je     429d55 <flatcc_json_printer_uint32_enum_field@@Base+0x65>
  429d46:	mov    rax,QWORD PTR [rbx+0x28]
  429d4a:	lea    rdx,[rax+0x1]
  429d4e:	mov    QWORD PTR [rbx+0x28],rdx
  429d52:	mov    BYTE PTR [rax],0x2c
  429d55:	movsxd rdx,r8d
  429d58:	mov    rdi,rbx
  429d5b:	mov    rsi,rcx
  429d5e:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429d63:	cmp    BYTE PTR [rbx+0x33],0x0
  429d67:	je     429d7f <flatcc_json_printer_uint32_enum_field@@Base+0x8f>
  429d69:	mov    rsi,QWORD PTR [rbx+0x28]
  429d6d:	mov    edi,ebp
  429d6f:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  429d74:	cdqe   
  429d76:	add    QWORD PTR [rbx+0x28],rax
  429d7a:	pop    rbx
  429d7b:	pop    r14
  429d7d:	pop    rbp
  429d7e:	ret    
  429d7f:	mov    rdi,rbx
  429d82:	mov    esi,ebp
  429d84:	mov    rax,r14
  429d87:	pop    rbx
  429d88:	pop    r14
  429d8a:	pop    rbp
  429d8b:	jmp    rax
  429d8d:	nop    DWORD PTR [rax]

0000000000429d90 <flatcc_json_printer_uint64_enum_field@@Base>:
  429d90:	push   r15
  429d92:	push   r14
  429d94:	push   rbx
  429d95:	mov    rbx,rdi
  429d98:	mov    rdi,QWORD PTR [rsp+0x20]
  429d9d:	lea    eax,[rdx+rdx*1]
  429da0:	add    eax,0x4
  429da3:	cmp    eax,DWORD PTR [rsi+0x10]
  429da6:	jge    429dcf <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  429da8:	mov    rdx,QWORD PTR [rsi+0x8]
  429dac:	mov    eax,eax
  429dae:	movzx  eax,WORD PTR [rdx+rax*1]
  429db2:	test   rax,rax
  429db5:	je     429dcf <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  429db7:	add    rax,QWORD PTR [rsi]
  429dba:	je     429dcf <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  429dbc:	mov    r14,QWORD PTR [rax]
  429dbf:	cmp    r14,r9
  429dc2:	jne    429dd8 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  429dc4:	cmp    BYTE PTR [rbx+0x34],0x0
  429dc8:	mov    r14,r9
  429dcb:	jne    429e1d <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  429dcd:	jmp    429dd8 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  429dcf:	cmp    BYTE PTR [rbx+0x35],0x0
  429dd3:	mov    r14,r9
  429dd6:	je     429e1d <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  429dd8:	mov    r15,rdi
  429ddb:	mov    eax,DWORD PTR [rsi+0x18]
  429dde:	lea    edx,[rax+0x1]
  429de1:	mov    DWORD PTR [rsi+0x18],edx
  429de4:	test   eax,eax
  429de6:	je     429df7 <flatcc_json_printer_uint64_enum_field@@Base+0x67>
  429de8:	mov    rax,QWORD PTR [rbx+0x28]
  429dec:	lea    rdx,[rax+0x1]
  429df0:	mov    QWORD PTR [rbx+0x28],rdx
  429df4:	mov    BYTE PTR [rax],0x2c
  429df7:	movsxd rdx,r8d
  429dfa:	mov    rdi,rbx
  429dfd:	mov    rsi,rcx
  429e00:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429e05:	cmp    BYTE PTR [rbx+0x33],0x0
  429e09:	je     429e23 <flatcc_json_printer_uint64_enum_field@@Base+0x93>
  429e0b:	mov    rsi,QWORD PTR [rbx+0x28]
  429e0f:	mov    rdi,r14
  429e12:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  429e17:	cdqe   
  429e19:	add    QWORD PTR [rbx+0x28],rax
  429e1d:	pop    rbx
  429e1e:	pop    r14
  429e20:	pop    r15
  429e22:	ret    
  429e23:	mov    rdi,rbx
  429e26:	mov    rsi,r14
  429e29:	mov    rax,r15
  429e2c:	pop    rbx
  429e2d:	pop    r14
  429e2f:	pop    r15
  429e31:	jmp    rax
  429e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429e3d:	nop    DWORD PTR [rax]

0000000000429e40 <flatcc_json_printer_int8_enum_field@@Base>:
  429e40:	push   r15
  429e42:	push   r14
  429e44:	push   rbx
  429e45:	mov    r14,rdi
  429e48:	mov    rdi,QWORD PTR [rsp+0x20]
  429e4d:	lea    eax,[rdx+rdx*1]
  429e50:	add    eax,0x4
  429e53:	cmp    eax,DWORD PTR [rsi+0x10]
  429e56:	jge    429e83 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  429e58:	mov    rdx,QWORD PTR [rsi+0x8]
  429e5c:	mov    eax,eax
  429e5e:	movzx  eax,WORD PTR [rdx+rax*1]
  429e62:	test   rax,rax
  429e65:	je     429e83 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  429e67:	add    rax,QWORD PTR [rsi]
  429e6a:	je     429e83 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  429e6c:	mov    bl,BYTE PTR [rax]
  429e6e:	cmp    bl,r9b
  429e71:	jne    429e91 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  429e73:	cmp    BYTE PTR [r14+0x34],0x0
  429e78:	mov    ebx,r9d
  429e7b:	jne    429f76 <flatcc_json_printer_int8_enum_field@@Base+0x136>
  429e81:	jmp    429e91 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  429e83:	cmp    BYTE PTR [r14+0x35],0x0
  429e88:	mov    ebx,r9d
  429e8b:	je     429f76 <flatcc_json_printer_int8_enum_field@@Base+0x136>
  429e91:	mov    r15,rdi
  429e94:	mov    eax,DWORD PTR [rsi+0x18]
  429e97:	lea    edx,[rax+0x1]
  429e9a:	mov    DWORD PTR [rsi+0x18],edx
  429e9d:	test   eax,eax
  429e9f:	je     429eb0 <flatcc_json_printer_int8_enum_field@@Base+0x70>
  429ea1:	mov    rax,QWORD PTR [r14+0x28]
  429ea5:	lea    rdx,[rax+0x1]
  429ea9:	mov    QWORD PTR [r14+0x28],rdx
  429ead:	mov    BYTE PTR [rax],0x2c
  429eb0:	movsxd rdx,r8d
  429eb3:	mov    rdi,r14
  429eb6:	mov    rsi,rcx
  429eb9:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429ebe:	cmp    BYTE PTR [r14+0x33],0x0
  429ec3:	je     429f10 <flatcc_json_printer_int8_enum_field@@Base+0xd0>
  429ec5:	mov    rsi,QWORD PTR [r14+0x28]
  429ec9:	mov    eax,ebx
  429ecb:	shr    al,0x7
  429ece:	movzx  edi,al
  429ed1:	test   bl,bl
  429ed3:	js     429f20 <flatcc_json_printer_int8_enum_field@@Base+0xe0>
  429ed5:	cmp    bl,0x64
  429ed8:	jb     429f2e <flatcc_json_printer_int8_enum_field@@Base+0xee>
  429eda:	mov    BYTE PTR [rsi+0x3],0x0
  429ede:	movzx  eax,bl
  429ee1:	lea    ecx,[rax+rax*4]
  429ee4:	lea    ecx,[rax+rcx*8]
  429ee7:	shr    ecx,0xc
  429eea:	mov    dl,0x64
  429eec:	mov    eax,ecx
  429eee:	mul    dl
  429ef0:	sub    bl,al
  429ef2:	movzx  eax,bl
  429ef5:	lea    rdx,[rip+0x10484]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429efc:	movzx  eax,WORD PTR [rdx+rax*2]
  429f00:	mov    WORD PTR [rsi+0x1],ax
  429f04:	or     cl,0x30
  429f07:	mov    BYTE PTR [rsi],cl
  429f09:	mov    eax,0x3
  429f0e:	jmp    429f6f <flatcc_json_printer_int8_enum_field@@Base+0x12f>
  429f10:	movsx  esi,bl
  429f13:	mov    rdi,r14
  429f16:	mov    rax,r15
  429f19:	pop    rbx
  429f1a:	pop    r14
  429f1c:	pop    r15
  429f1e:	jmp    rax
  429f20:	mov    BYTE PTR [rsi],0x2d
  429f23:	add    rsi,0x1
  429f27:	neg    bl
  429f29:	cmp    bl,0x64
  429f2c:	jae    429eda <flatcc_json_printer_int8_enum_field@@Base+0x9a>
  429f2e:	cmp    bl,0xa
  429f31:	jb     429f61 <flatcc_json_printer_int8_enum_field@@Base+0x121>
  429f33:	mov    BYTE PTR [rsi+0x2],0x0
  429f37:	movzx  eax,bl
  429f3a:	lea    ecx,[rax+rax*4]
  429f3d:	lea    eax,[rax+rcx*8]
  429f40:	shr    eax,0xc
  429f43:	mov    cl,0x64
  429f45:	mul    cl
  429f47:	sub    bl,al
  429f49:	movzx  eax,bl
  429f4c:	lea    rcx,[rip+0x1042d]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  429f53:	movzx  eax,WORD PTR [rcx+rax*2]
  429f57:	mov    WORD PTR [rsi],ax
  429f5a:	mov    eax,0x2
  429f5f:	jmp    429f6f <flatcc_json_printer_int8_enum_field@@Base+0x12f>
  429f61:	mov    BYTE PTR [rsi+0x1],0x0
  429f65:	add    bl,0x30
  429f68:	mov    BYTE PTR [rsi],bl
  429f6a:	mov    eax,0x1
  429f6f:	add    rax,rdi
  429f72:	add    QWORD PTR [r14+0x28],rax
  429f76:	pop    rbx
  429f77:	pop    r14
  429f79:	pop    r15
  429f7b:	ret    
  429f7c:	nop    DWORD PTR [rax+0x0]

0000000000429f80 <flatcc_json_printer_int16_enum_field@@Base>:
  429f80:	push   rbp
  429f81:	push   r14
  429f83:	push   rbx
  429f84:	mov    rbx,rdi
  429f87:	mov    rdi,QWORD PTR [rsp+0x20]
  429f8c:	lea    eax,[rdx+rdx*1]
  429f8f:	add    eax,0x4
  429f92:	cmp    eax,DWORD PTR [rsi+0x10]
  429f95:	jge    429fc3 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  429f97:	mov    rdx,QWORD PTR [rsi+0x8]
  429f9b:	mov    eax,eax
  429f9d:	movzx  eax,WORD PTR [rdx+rax*1]
  429fa1:	test   rax,rax
  429fa4:	je     429fc3 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  429fa6:	add    rax,QWORD PTR [rsi]
  429fa9:	je     429fc3 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  429fab:	movzx  ebp,WORD PTR [rax]
  429fae:	cmp    bp,r9w
  429fb2:	jne    429fd0 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  429fb4:	cmp    BYTE PTR [rbx+0x34],0x0
  429fb8:	mov    ebp,r9d
  429fbb:	jne    42a150 <flatcc_json_printer_int16_enum_field@@Base+0x1d0>
  429fc1:	jmp    429fd0 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  429fc3:	cmp    BYTE PTR [rbx+0x35],0x0
  429fc7:	mov    ebp,r9d
  429fca:	je     42a150 <flatcc_json_printer_int16_enum_field@@Base+0x1d0>
  429fd0:	mov    r14,rdi
  429fd3:	mov    eax,DWORD PTR [rsi+0x18]
  429fd6:	lea    edx,[rax+0x1]
  429fd9:	mov    DWORD PTR [rsi+0x18],edx
  429fdc:	test   eax,eax
  429fde:	je     429fef <flatcc_json_printer_int16_enum_field@@Base+0x6f>
  429fe0:	mov    rax,QWORD PTR [rbx+0x28]
  429fe4:	lea    rdx,[rax+0x1]
  429fe8:	mov    QWORD PTR [rbx+0x28],rdx
  429fec:	mov    BYTE PTR [rax],0x2c
  429fef:	movsxd rdx,r8d
  429ff2:	mov    rdi,rbx
  429ff5:	mov    rsi,rcx
  429ff8:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  429ffd:	cmp    BYTE PTR [rbx+0x33],0x0
  42a001:	je     42a039 <flatcc_json_printer_int16_enum_field@@Base+0xb9>
  42a003:	mov    rdi,QWORD PTR [rbx+0x28]
  42a007:	movzx  r8d,bp
  42a00b:	test   r8w,r8w
  42a00f:	jns    42a01a <flatcc_json_printer_int16_enum_field@@Base+0x9a>
  42a011:	mov    BYTE PTR [rdi],0x2d
  42a014:	add    rdi,0x1
  42a018:	neg    ebp
  42a01a:	shr    r8d,0xf
  42a01e:	movzx  esi,bp
  42a021:	cmp    esi,0x3e8
  42a027:	jb     42a048 <flatcc_json_printer_int16_enum_field@@Base+0xc8>
  42a029:	xor    ecx,ecx
  42a02b:	cmp    esi,0x270f
  42a031:	seta   cl
  42a034:	or     ecx,0x4
  42a037:	jmp    42a06d <flatcc_json_printer_int16_enum_field@@Base+0xed>
  42a039:	movsx  esi,bp
  42a03c:	mov    rdi,rbx
  42a03f:	mov    rax,r14
  42a042:	pop    rbx
  42a043:	pop    r14
  42a045:	pop    rbp
  42a046:	jmp    rax
  42a048:	cmp    esi,0x64
  42a04b:	jb     42a062 <flatcc_json_printer_int16_enum_field@@Base+0xe2>
  42a04d:	mov    BYTE PTR [rdi+0x3],0x0
  42a051:	add    rdi,0x3
  42a055:	mov    ecx,0x3
  42a05a:	mov    rdx,rdi
  42a05d:	jmp    42a115 <flatcc_json_printer_int16_enum_field@@Base+0x195>
  42a062:	xor    ecx,ecx
  42a064:	cmp    esi,0x9
  42a067:	seta   cl
  42a06a:	add    ecx,0x1
  42a06d:	mov    eax,ecx
  42a06f:	lea    rdx,[rdi+rax*1]
  42a073:	mov    BYTE PTR [rdi+rax*1],0x0
  42a077:	test   cl,0x1
  42a07a:	jne    42a0dd <flatcc_json_printer_int16_enum_field@@Base+0x15d>
  42a07c:	cmp    cl,0x2
  42a07f:	je     42a0b3 <flatcc_json_printer_int16_enum_field@@Base+0x133>
  42a081:	cmp    cl,0x4
  42a084:	jne    42a149 <flatcc_json_printer_int16_enum_field@@Base+0x1c9>
  42a08a:	mov    eax,esi
  42a08c:	shr    eax,0x2
  42a08f:	imul   ebp,eax,0x147b
  42a095:	shr    ebp,0x11
  42a098:	imul   eax,ebp,0x64
  42a09b:	sub    esi,eax
  42a09d:	movzx  eax,si
  42a0a0:	lea    rsi,[rip+0x102d9]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a0a7:	movzx  eax,WORD PTR [rsi+rax*2]
  42a0ab:	mov    WORD PTR [rdx-0x2],ax
  42a0af:	lea    rdx,[rdx-0x2]
  42a0b3:	movzx  eax,bp
  42a0b6:	mov    esi,eax
  42a0b8:	shr    esi,0x2
  42a0bb:	imul   esi,esi,0x147b
  42a0c1:	shr    esi,0x11
  42a0c4:	imul   esi,esi,0x64
  42a0c7:	sub    eax,esi
  42a0c9:	movzx  eax,ax
  42a0cc:	lea    rsi,[rip+0x102ad]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a0d3:	movzx  eax,WORD PTR [rsi+rax*2]
  42a0d7:	mov    WORD PTR [rdx-0x2],ax
  42a0db:	jmp    42a149 <flatcc_json_printer_int16_enum_field@@Base+0x1c9>
  42a0dd:	cmp    cl,0x1
  42a0e0:	je     42a141 <flatcc_json_printer_int16_enum_field@@Base+0x1c1>
  42a0e2:	cmp    cl,0x3
  42a0e5:	je     42a115 <flatcc_json_printer_int16_enum_field@@Base+0x195>
  42a0e7:	cmp    cl,0x5
  42a0ea:	jne    42a149 <flatcc_json_printer_int16_enum_field@@Base+0x1c9>
  42a0ec:	mov    eax,esi
  42a0ee:	shr    eax,0x2
  42a0f1:	imul   ebp,eax,0x147b
  42a0f7:	shr    ebp,0x11
  42a0fa:	imul   eax,ebp,0x64
  42a0fd:	sub    esi,eax
  42a0ff:	movzx  eax,si
  42a102:	lea    rsi,[rip+0x10277]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a109:	movzx  eax,WORD PTR [rsi+rax*2]
  42a10d:	mov    WORD PTR [rdx-0x2],ax
  42a111:	lea    rdx,[rdx-0x2]
  42a115:	movzx  eax,bp
  42a118:	mov    esi,eax
  42a11a:	shr    esi,0x2
  42a11d:	imul   ebp,esi,0x147b
  42a123:	shr    ebp,0x11
  42a126:	imul   esi,ebp,0x64
  42a129:	sub    eax,esi
  42a12b:	movzx  eax,ax
  42a12e:	lea    rsi,[rip+0x1024b]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a135:	movzx  eax,WORD PTR [rsi+rax*2]
  42a139:	mov    WORD PTR [rdx-0x2],ax
  42a13d:	lea    rdx,[rdx-0x2]
  42a141:	add    bpl,0x30
  42a145:	mov    BYTE PTR [rdx-0x1],bpl
  42a149:	add    ecx,r8d
  42a14c:	add    QWORD PTR [rbx+0x28],rcx
  42a150:	pop    rbx
  42a151:	pop    r14
  42a153:	pop    rbp
  42a154:	ret    
  42a155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a15f:	nop

000000000042a160 <flatcc_json_printer_int32_enum_field@@Base>:
  42a160:	push   rbp
  42a161:	push   r14
  42a163:	push   rbx
  42a164:	mov    rbx,rdi
  42a167:	mov    rdi,QWORD PTR [rsp+0x20]
  42a16c:	lea    eax,[rdx+rdx*1]
  42a16f:	add    eax,0x4
  42a172:	cmp    eax,DWORD PTR [rsi+0x10]
  42a175:	jge    42a19d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42a177:	mov    rdx,QWORD PTR [rsi+0x8]
  42a17b:	mov    eax,eax
  42a17d:	movzx  eax,WORD PTR [rdx+rax*1]
  42a181:	test   rax,rax
  42a184:	je     42a19d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42a186:	add    rax,QWORD PTR [rsi]
  42a189:	je     42a19d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42a18b:	mov    ebp,DWORD PTR [rax]
  42a18d:	cmp    ebp,r9d
  42a190:	jne    42a1a6 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42a192:	cmp    BYTE PTR [rbx+0x34],0x0
  42a196:	mov    ebp,r9d
  42a199:	jne    42a201 <flatcc_json_printer_int32_enum_field@@Base+0xa1>
  42a19b:	jmp    42a1a6 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42a19d:	cmp    BYTE PTR [rbx+0x35],0x0
  42a1a1:	mov    ebp,r9d
  42a1a4:	je     42a201 <flatcc_json_printer_int32_enum_field@@Base+0xa1>
  42a1a6:	mov    r14,rdi
  42a1a9:	mov    eax,DWORD PTR [rsi+0x18]
  42a1ac:	lea    edx,[rax+0x1]
  42a1af:	mov    DWORD PTR [rsi+0x18],edx
  42a1b2:	test   eax,eax
  42a1b4:	je     42a1c5 <flatcc_json_printer_int32_enum_field@@Base+0x65>
  42a1b6:	mov    rax,QWORD PTR [rbx+0x28]
  42a1ba:	lea    rdx,[rax+0x1]
  42a1be:	mov    QWORD PTR [rbx+0x28],rdx
  42a1c2:	mov    BYTE PTR [rax],0x2c
  42a1c5:	movsxd rdx,r8d
  42a1c8:	mov    rdi,rbx
  42a1cb:	mov    rsi,rcx
  42a1ce:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a1d3:	cmp    BYTE PTR [rbx+0x33],0x0
  42a1d7:	je     42a206 <flatcc_json_printer_int32_enum_field@@Base+0xa6>
  42a1d9:	mov    rsi,QWORD PTR [rbx+0x28]
  42a1dd:	mov    r14d,ebp
  42a1e0:	shr    r14d,0x1f
  42a1e4:	test   ebp,ebp
  42a1e6:	jns    42a1f1 <flatcc_json_printer_int32_enum_field@@Base+0x91>
  42a1e8:	mov    BYTE PTR [rsi],0x2d
  42a1eb:	add    rsi,0x1
  42a1ef:	neg    ebp
  42a1f1:	mov    edi,ebp
  42a1f3:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42a1f8:	add    eax,r14d
  42a1fb:	cdqe   
  42a1fd:	add    QWORD PTR [rbx+0x28],rax
  42a201:	pop    rbx
  42a202:	pop    r14
  42a204:	pop    rbp
  42a205:	ret    
  42a206:	mov    rdi,rbx
  42a209:	mov    esi,ebp
  42a20b:	mov    rax,r14
  42a20e:	pop    rbx
  42a20f:	pop    r14
  42a211:	pop    rbp
  42a212:	jmp    rax
  42a214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a21e:	xchg   ax,ax

000000000042a220 <flatcc_json_printer_int64_enum_field@@Base>:
  42a220:	push   r15
  42a222:	push   r14
  42a224:	push   rbx
  42a225:	mov    rbx,rdi
  42a228:	mov    rdi,QWORD PTR [rsp+0x20]
  42a22d:	lea    eax,[rdx+rdx*1]
  42a230:	add    eax,0x4
  42a233:	cmp    eax,DWORD PTR [rsi+0x10]
  42a236:	jge    42a25f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42a238:	mov    rdx,QWORD PTR [rsi+0x8]
  42a23c:	mov    eax,eax
  42a23e:	movzx  eax,WORD PTR [rdx+rax*1]
  42a242:	test   rax,rax
  42a245:	je     42a25f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42a247:	add    rax,QWORD PTR [rsi]
  42a24a:	je     42a25f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42a24c:	mov    r14,QWORD PTR [rax]
  42a24f:	cmp    r14,r9
  42a252:	jne    42a268 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  42a254:	cmp    BYTE PTR [rbx+0x34],0x0
  42a258:	mov    r14,r9
  42a25b:	jne    42a2c6 <flatcc_json_printer_int64_enum_field@@Base+0xa6>
  42a25d:	jmp    42a268 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  42a25f:	cmp    BYTE PTR [rbx+0x35],0x0
  42a263:	mov    r14,r9
  42a266:	je     42a2c6 <flatcc_json_printer_int64_enum_field@@Base+0xa6>
  42a268:	mov    r15,rdi
  42a26b:	mov    eax,DWORD PTR [rsi+0x18]
  42a26e:	lea    edx,[rax+0x1]
  42a271:	mov    DWORD PTR [rsi+0x18],edx
  42a274:	test   eax,eax
  42a276:	je     42a287 <flatcc_json_printer_int64_enum_field@@Base+0x67>
  42a278:	mov    rax,QWORD PTR [rbx+0x28]
  42a27c:	lea    rdx,[rax+0x1]
  42a280:	mov    QWORD PTR [rbx+0x28],rdx
  42a284:	mov    BYTE PTR [rax],0x2c
  42a287:	movsxd rdx,r8d
  42a28a:	mov    rdi,rbx
  42a28d:	mov    rsi,rcx
  42a290:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a295:	cmp    BYTE PTR [rbx+0x33],0x0
  42a299:	je     42a2cc <flatcc_json_printer_int64_enum_field@@Base+0xac>
  42a29b:	mov    rsi,QWORD PTR [rbx+0x28]
  42a29f:	mov    r15,r14
  42a2a2:	shr    r15,0x3f
  42a2a6:	test   r14,r14
  42a2a9:	jns    42a2b5 <flatcc_json_printer_int64_enum_field@@Base+0x95>
  42a2ab:	mov    BYTE PTR [rsi],0x2d
  42a2ae:	add    rsi,0x1
  42a2b2:	neg    r14
  42a2b5:	mov    rdi,r14
  42a2b8:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42a2bd:	add    eax,r15d
  42a2c0:	cdqe   
  42a2c2:	add    QWORD PTR [rbx+0x28],rax
  42a2c6:	pop    rbx
  42a2c7:	pop    r14
  42a2c9:	pop    r15
  42a2cb:	ret    
  42a2cc:	mov    rdi,rbx
  42a2cf:	mov    rsi,r14
  42a2d2:	mov    rax,r15
  42a2d5:	pop    rbx
  42a2d6:	pop    r14
  42a2d8:	pop    r15
  42a2da:	jmp    rax
  42a2dc:	nop    DWORD PTR [rax+0x0]

000000000042a2e0 <flatcc_json_printer_bool_enum_field@@Base>:
  42a2e0:	push   rbp
  42a2e1:	push   r14
  42a2e3:	push   rbx
  42a2e4:	mov    rbx,rdi
  42a2e7:	mov    rdi,QWORD PTR [rsp+0x20]
  42a2ec:	lea    eax,[rdx+rdx*1]
  42a2ef:	add    eax,0x4
  42a2f2:	cmp    eax,DWORD PTR [rsi+0x10]
  42a2f5:	jge    42a31e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42a2f7:	mov    rdx,QWORD PTR [rsi+0x8]
  42a2fb:	mov    eax,eax
  42a2fd:	movzx  eax,WORD PTR [rdx+rax*1]
  42a301:	test   rax,rax
  42a304:	je     42a31e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42a306:	add    rax,QWORD PTR [rsi]
  42a309:	je     42a31e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42a30b:	mov    bpl,BYTE PTR [rax]
  42a30e:	cmp    bpl,r9b
  42a311:	jne    42a327 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42a313:	cmp    BYTE PTR [rbx+0x34],0x0
  42a317:	mov    ebp,r9d
  42a31a:	jne    42a399 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42a31c:	jmp    42a327 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42a31e:	cmp    BYTE PTR [rbx+0x35],0x0
  42a322:	mov    ebp,r9d
  42a325:	je     42a399 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42a327:	mov    r14,rdi
  42a32a:	mov    eax,DWORD PTR [rsi+0x18]
  42a32d:	lea    edx,[rax+0x1]
  42a330:	mov    DWORD PTR [rsi+0x18],edx
  42a333:	test   eax,eax
  42a335:	je     42a346 <flatcc_json_printer_bool_enum_field@@Base+0x66>
  42a337:	mov    rax,QWORD PTR [rbx+0x28]
  42a33b:	lea    rdx,[rax+0x1]
  42a33f:	mov    QWORD PTR [rbx+0x28],rdx
  42a343:	mov    BYTE PTR [rax],0x2c
  42a346:	movsxd rdx,r8d
  42a349:	mov    rdi,rbx
  42a34c:	mov    rsi,rcx
  42a34f:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a354:	cmp    BYTE PTR [rbx+0x33],0x0
  42a358:	je     42a374 <flatcc_json_printer_bool_enum_field@@Base+0x94>
  42a35a:	mov    rax,QWORD PTR [rbx+0x28]
  42a35e:	test   bpl,bpl
  42a361:	je     42a384 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
  42a363:	mov    BYTE PTR [rax+0x4],0x0
  42a367:	mov    DWORD PTR [rax],0x65757274
  42a36d:	mov    eax,0x4
  42a372:	jmp    42a395 <flatcc_json_printer_bool_enum_field@@Base+0xb5>
  42a374:	movzx  esi,bpl
  42a378:	mov    rdi,rbx
  42a37b:	mov    rax,r14
  42a37e:	pop    rbx
  42a37f:	pop    r14
  42a381:	pop    rbp
  42a382:	jmp    rax
  42a384:	mov    WORD PTR [rax+0x4],0x65
  42a38a:	mov    DWORD PTR [rax],0x736c6166
  42a390:	mov    eax,0x5
  42a395:	add    QWORD PTR [rbx+0x28],rax
  42a399:	pop    rbx
  42a39a:	pop    r14
  42a39c:	pop    rbp
  42a39d:	ret    
  42a39e:	xchg   ax,ax

000000000042a3a0 <flatcc_json_printer_uint8_struct_field@@Base>:
  42a3a0:	push   r14
  42a3a2:	push   rbx
  42a3a3:	push   rax
  42a3a4:	mov    r14,rdi
  42a3a7:	mov    bl,BYTE PTR [rdx+rcx*1]
  42a3aa:	test   esi,esi
  42a3ac:	je     42a3bd <flatcc_json_printer_uint8_struct_field@@Base+0x1d>
  42a3ae:	mov    rax,QWORD PTR [r14+0x28]
  42a3b2:	lea    rcx,[rax+0x1]
  42a3b6:	mov    QWORD PTR [r14+0x28],rcx
  42a3ba:	mov    BYTE PTR [rax],0x2c
  42a3bd:	movsxd rdx,r9d
  42a3c0:	mov    rdi,r14
  42a3c3:	mov    rsi,r8
  42a3c6:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a3cb:	mov    rdx,QWORD PTR [r14+0x28]
  42a3cf:	cmp    bl,0x64
  42a3d2:	jb     42a40c <flatcc_json_printer_uint8_struct_field@@Base+0x6c>
  42a3d4:	mov    BYTE PTR [rdx+0x3],0x0
  42a3d8:	movzx  eax,bl
  42a3db:	lea    ecx,[rax+rax*4]
  42a3de:	lea    ecx,[rax+rcx*8]
  42a3e1:	shr    ecx,0xc
  42a3e4:	mov    sil,0x64
  42a3e7:	mov    eax,ecx
  42a3e9:	mul    sil
  42a3ec:	sub    bl,al
  42a3ee:	movzx  eax,bl
  42a3f1:	lea    rsi,[rip+0xff88]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a3f8:	movzx  eax,WORD PTR [rsi+rax*2]
  42a3fc:	mov    WORD PTR [rdx+0x1],ax
  42a400:	or     cl,0x30
  42a403:	mov    BYTE PTR [rdx],cl
  42a405:	mov    eax,0x3
  42a40a:	jmp    42a44d <flatcc_json_printer_uint8_struct_field@@Base+0xad>
  42a40c:	cmp    bl,0xa
  42a40f:	jb     42a43f <flatcc_json_printer_uint8_struct_field@@Base+0x9f>
  42a411:	mov    BYTE PTR [rdx+0x2],0x0
  42a415:	movzx  eax,bl
  42a418:	lea    ecx,[rax+rax*4]
  42a41b:	lea    eax,[rax+rcx*8]
  42a41e:	shr    eax,0xc
  42a421:	mov    cl,0x64
  42a423:	mul    cl
  42a425:	sub    bl,al
  42a427:	movzx  eax,bl
  42a42a:	lea    rcx,[rip+0xff4f]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a431:	movzx  eax,WORD PTR [rcx+rax*2]
  42a435:	mov    WORD PTR [rdx],ax
  42a438:	mov    eax,0x2
  42a43d:	jmp    42a44d <flatcc_json_printer_uint8_struct_field@@Base+0xad>
  42a43f:	mov    BYTE PTR [rdx+0x1],0x0
  42a443:	add    bl,0x30
  42a446:	mov    BYTE PTR [rdx],bl
  42a448:	mov    eax,0x1
  42a44d:	add    QWORD PTR [r14+0x28],rax
  42a451:	add    rsp,0x8
  42a455:	pop    rbx
  42a456:	pop    r14
  42a458:	ret    
  42a459:	nop    DWORD PTR [rax+0x0]

000000000042a460 <flatcc_json_printer_uint16_struct_field@@Base>:
  42a460:	push   rbp
  42a461:	push   rbx
  42a462:	push   rax
  42a463:	mov    rbx,rdi
  42a466:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42a46a:	test   esi,esi
  42a46c:	je     42a47d <flatcc_json_printer_uint16_struct_field@@Base+0x1d>
  42a46e:	mov    rax,QWORD PTR [rbx+0x28]
  42a472:	lea    rcx,[rax+0x1]
  42a476:	mov    QWORD PTR [rbx+0x28],rcx
  42a47a:	mov    BYTE PTR [rax],0x2c
  42a47d:	movsxd rdx,r9d
  42a480:	mov    rdi,rbx
  42a483:	mov    rsi,r8
  42a486:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a48b:	mov    rsi,QWORD PTR [rbx+0x28]
  42a48f:	movzx  edx,bp
  42a492:	cmp    edx,0x3e8
  42a498:	jb     42a4aa <flatcc_json_printer_uint16_struct_field@@Base+0x4a>
  42a49a:	xor    eax,eax
  42a49c:	cmp    edx,0x270f
  42a4a2:	seta   al
  42a4a5:	or     eax,0x4
  42a4a8:	jmp    42a4cf <flatcc_json_printer_uint16_struct_field@@Base+0x6f>
  42a4aa:	cmp    edx,0x64
  42a4ad:	jb     42a4c4 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
  42a4af:	mov    BYTE PTR [rsi+0x3],0x0
  42a4b3:	add    rsi,0x3
  42a4b7:	mov    eax,0x3
  42a4bc:	mov    rcx,rsi
  42a4bf:	jmp    42a571 <flatcc_json_printer_uint16_struct_field@@Base+0x111>
  42a4c4:	xor    eax,eax
  42a4c6:	cmp    edx,0x9
  42a4c9:	seta   al
  42a4cc:	add    eax,0x1
  42a4cf:	mov    edi,eax
  42a4d1:	lea    rcx,[rsi+rdi*1]
  42a4d5:	mov    BYTE PTR [rsi+rdi*1],0x0
  42a4d9:	test   al,0x1
  42a4db:	jne    42a53c <flatcc_json_printer_uint16_struct_field@@Base+0xdc>
  42a4dd:	cmp    al,0x2
  42a4df:	je     42a512 <flatcc_json_printer_uint16_struct_field@@Base+0xb2>
  42a4e1:	cmp    al,0x4
  42a4e3:	jne    42a5a5 <flatcc_json_printer_uint16_struct_field@@Base+0x145>
  42a4e9:	mov    esi,edx
  42a4eb:	shr    esi,0x2
  42a4ee:	imul   ebp,esi,0x147b
  42a4f4:	shr    ebp,0x11
  42a4f7:	imul   esi,ebp,0x64
  42a4fa:	sub    edx,esi
  42a4fc:	movzx  edx,dx
  42a4ff:	lea    rsi,[rip+0xfe7a]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a506:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a50a:	mov    WORD PTR [rcx-0x2],dx
  42a50e:	lea    rcx,[rcx-0x2]
  42a512:	movzx  edx,bp
  42a515:	mov    esi,edx
  42a517:	shr    esi,0x2
  42a51a:	imul   esi,esi,0x147b
  42a520:	shr    esi,0x11
  42a523:	imul   esi,esi,0x64
  42a526:	sub    edx,esi
  42a528:	movzx  edx,dx
  42a52b:	lea    rsi,[rip+0xfe4e]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a532:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a536:	mov    WORD PTR [rcx-0x2],dx
  42a53a:	jmp    42a5a5 <flatcc_json_printer_uint16_struct_field@@Base+0x145>
  42a53c:	cmp    al,0x1
  42a53e:	je     42a59d <flatcc_json_printer_uint16_struct_field@@Base+0x13d>
  42a540:	cmp    al,0x3
  42a542:	je     42a571 <flatcc_json_printer_uint16_struct_field@@Base+0x111>
  42a544:	cmp    al,0x5
  42a546:	jne    42a5a5 <flatcc_json_printer_uint16_struct_field@@Base+0x145>
  42a548:	mov    esi,edx
  42a54a:	shr    esi,0x2
  42a54d:	imul   ebp,esi,0x147b
  42a553:	shr    ebp,0x11
  42a556:	imul   esi,ebp,0x64
  42a559:	sub    edx,esi
  42a55b:	movzx  edx,dx
  42a55e:	lea    rsi,[rip+0xfe1b]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a565:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a569:	mov    WORD PTR [rcx-0x2],dx
  42a56d:	lea    rcx,[rcx-0x2]
  42a571:	movzx  edx,bp
  42a574:	mov    esi,edx
  42a576:	shr    esi,0x2
  42a579:	imul   ebp,esi,0x147b
  42a57f:	shr    ebp,0x11
  42a582:	imul   esi,ebp,0x64
  42a585:	sub    edx,esi
  42a587:	movzx  edx,dx
  42a58a:	lea    rsi,[rip+0xfdef]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a591:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a595:	mov    WORD PTR [rcx-0x2],dx
  42a599:	lea    rcx,[rcx-0x2]
  42a59d:	add    bpl,0x30
  42a5a1:	mov    BYTE PTR [rcx-0x1],bpl
  42a5a5:	mov    eax,eax
  42a5a7:	add    QWORD PTR [rbx+0x28],rax
  42a5ab:	add    rsp,0x8
  42a5af:	pop    rbx
  42a5b0:	pop    rbp
  42a5b1:	ret    
  42a5b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a5bc:	nop    DWORD PTR [rax+0x0]

000000000042a5c0 <flatcc_json_printer_uint32_struct_field@@Base>:
  42a5c0:	push   rbp
  42a5c1:	push   rbx
  42a5c2:	push   rax
  42a5c3:	mov    rbx,rdi
  42a5c6:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42a5c9:	test   esi,esi
  42a5cb:	je     42a5dc <flatcc_json_printer_uint32_struct_field@@Base+0x1c>
  42a5cd:	mov    rax,QWORD PTR [rbx+0x28]
  42a5d1:	lea    rcx,[rax+0x1]
  42a5d5:	mov    QWORD PTR [rbx+0x28],rcx
  42a5d9:	mov    BYTE PTR [rax],0x2c
  42a5dc:	movsxd rdx,r9d
  42a5df:	mov    rdi,rbx
  42a5e2:	mov    rsi,r8
  42a5e5:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a5ea:	mov    rsi,QWORD PTR [rbx+0x28]
  42a5ee:	mov    edi,ebp
  42a5f0:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42a5f5:	cdqe   
  42a5f7:	add    QWORD PTR [rbx+0x28],rax
  42a5fb:	add    rsp,0x8
  42a5ff:	pop    rbx
  42a600:	pop    rbp
  42a601:	ret    
  42a602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a60c:	nop    DWORD PTR [rax+0x0]

000000000042a610 <flatcc_json_printer_uint64_struct_field@@Base>:
  42a610:	push   r14
  42a612:	push   rbx
  42a613:	push   rax
  42a614:	mov    rbx,rdi
  42a617:	mov    r14,QWORD PTR [rdx+rcx*1]
  42a61b:	test   esi,esi
  42a61d:	je     42a62e <flatcc_json_printer_uint64_struct_field@@Base+0x1e>
  42a61f:	mov    rax,QWORD PTR [rbx+0x28]
  42a623:	lea    rcx,[rax+0x1]
  42a627:	mov    QWORD PTR [rbx+0x28],rcx
  42a62b:	mov    BYTE PTR [rax],0x2c
  42a62e:	movsxd rdx,r9d
  42a631:	mov    rdi,rbx
  42a634:	mov    rsi,r8
  42a637:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a63c:	mov    rsi,QWORD PTR [rbx+0x28]
  42a640:	mov    rdi,r14
  42a643:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42a648:	cdqe   
  42a64a:	add    QWORD PTR [rbx+0x28],rax
  42a64e:	add    rsp,0x8
  42a652:	pop    rbx
  42a653:	pop    r14
  42a655:	ret    
  42a656:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a660 <flatcc_json_printer_int8_struct_field@@Base>:
  42a660:	push   r15
  42a662:	push   r14
  42a664:	push   rbx
  42a665:	mov    r15,rdi
  42a668:	mov    bl,BYTE PTR [rdx+rcx*1]
  42a66b:	movzx  r14d,bl
  42a66f:	test   esi,esi
  42a671:	je     42a682 <flatcc_json_printer_int8_struct_field@@Base+0x22>
  42a673:	mov    rax,QWORD PTR [r15+0x28]
  42a677:	lea    rcx,[rax+0x1]
  42a67b:	mov    QWORD PTR [r15+0x28],rcx
  42a67f:	mov    BYTE PTR [rax],0x2c
  42a682:	movsxd rdx,r9d
  42a685:	mov    rdi,r15
  42a688:	mov    rsi,r8
  42a68b:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a690:	mov    rdx,QWORD PTR [r15+0x28]
  42a694:	test   r14b,r14b
  42a697:	jns    42a6a2 <flatcc_json_printer_int8_struct_field@@Base+0x42>
  42a699:	mov    BYTE PTR [rdx],0x2d
  42a69c:	add    rdx,0x1
  42a6a0:	neg    bl
  42a6a2:	shr    r14,0x7
  42a6a6:	cmp    bl,0x64
  42a6a9:	jb     42a6e3 <flatcc_json_printer_int8_struct_field@@Base+0x83>
  42a6ab:	mov    BYTE PTR [rdx+0x3],0x0
  42a6af:	movzx  eax,bl
  42a6b2:	lea    ecx,[rax+rax*4]
  42a6b5:	lea    ecx,[rax+rcx*8]
  42a6b8:	shr    ecx,0xc
  42a6bb:	mov    sil,0x64
  42a6be:	mov    eax,ecx
  42a6c0:	mul    sil
  42a6c3:	sub    bl,al
  42a6c5:	movzx  eax,bl
  42a6c8:	lea    rsi,[rip+0xfcb1]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a6cf:	movzx  eax,WORD PTR [rsi+rax*2]
  42a6d3:	mov    WORD PTR [rdx+0x1],ax
  42a6d7:	or     cl,0x30
  42a6da:	mov    BYTE PTR [rdx],cl
  42a6dc:	mov    eax,0x3
  42a6e1:	jmp    42a724 <flatcc_json_printer_int8_struct_field@@Base+0xc4>
  42a6e3:	cmp    bl,0xa
  42a6e6:	jb     42a716 <flatcc_json_printer_int8_struct_field@@Base+0xb6>
  42a6e8:	mov    BYTE PTR [rdx+0x2],0x0
  42a6ec:	movzx  eax,bl
  42a6ef:	lea    ecx,[rax+rax*4]
  42a6f2:	lea    eax,[rax+rcx*8]
  42a6f5:	shr    eax,0xc
  42a6f8:	mov    cl,0x64
  42a6fa:	mul    cl
  42a6fc:	sub    bl,al
  42a6fe:	movzx  eax,bl
  42a701:	lea    rcx,[rip+0xfc78]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a708:	movzx  eax,WORD PTR [rcx+rax*2]
  42a70c:	mov    WORD PTR [rdx],ax
  42a70f:	mov    eax,0x2
  42a714:	jmp    42a724 <flatcc_json_printer_int8_struct_field@@Base+0xc4>
  42a716:	mov    BYTE PTR [rdx+0x1],0x0
  42a71a:	add    bl,0x30
  42a71d:	mov    BYTE PTR [rdx],bl
  42a71f:	mov    eax,0x1
  42a724:	add    rax,r14
  42a727:	add    QWORD PTR [r15+0x28],rax
  42a72b:	pop    rbx
  42a72c:	pop    r14
  42a72e:	pop    r15
  42a730:	ret    
  42a731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a73b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a740 <flatcc_json_printer_int16_struct_field@@Base>:
  42a740:	push   rbp
  42a741:	push   r14
  42a743:	push   rbx
  42a744:	mov    rbx,rdi
  42a747:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42a74b:	test   esi,esi
  42a74d:	je     42a75e <flatcc_json_printer_int16_struct_field@@Base+0x1e>
  42a74f:	mov    rax,QWORD PTR [rbx+0x28]
  42a753:	lea    rcx,[rax+0x1]
  42a757:	mov    QWORD PTR [rbx+0x28],rcx
  42a75b:	mov    BYTE PTR [rax],0x2c
  42a75e:	movzx  r14d,bp
  42a762:	movsxd rdx,r9d
  42a765:	mov    rdi,rbx
  42a768:	mov    rsi,r8
  42a76b:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a770:	mov    rsi,QWORD PTR [rbx+0x28]
  42a774:	test   r14w,r14w
  42a778:	jns    42a783 <flatcc_json_printer_int16_struct_field@@Base+0x43>
  42a77a:	mov    BYTE PTR [rsi],0x2d
  42a77d:	add    rsi,0x1
  42a781:	neg    ebp
  42a783:	shr    r14d,0xf
  42a787:	movzx  edx,bp
  42a78a:	cmp    edx,0x3e8
  42a790:	jb     42a7a2 <flatcc_json_printer_int16_struct_field@@Base+0x62>
  42a792:	xor    eax,eax
  42a794:	cmp    edx,0x270f
  42a79a:	seta   al
  42a79d:	or     eax,0x4
  42a7a0:	jmp    42a7c7 <flatcc_json_printer_int16_struct_field@@Base+0x87>
  42a7a2:	cmp    edx,0x64
  42a7a5:	jb     42a7bc <flatcc_json_printer_int16_struct_field@@Base+0x7c>
  42a7a7:	mov    BYTE PTR [rsi+0x3],0x0
  42a7ab:	add    rsi,0x3
  42a7af:	mov    eax,0x3
  42a7b4:	mov    rcx,rsi
  42a7b7:	jmp    42a869 <flatcc_json_printer_int16_struct_field@@Base+0x129>
  42a7bc:	xor    eax,eax
  42a7be:	cmp    edx,0x9
  42a7c1:	seta   al
  42a7c4:	add    eax,0x1
  42a7c7:	mov    edi,eax
  42a7c9:	lea    rcx,[rsi+rdi*1]
  42a7cd:	mov    BYTE PTR [rsi+rdi*1],0x0
  42a7d1:	test   al,0x1
  42a7d3:	jne    42a834 <flatcc_json_printer_int16_struct_field@@Base+0xf4>
  42a7d5:	cmp    al,0x2
  42a7d7:	je     42a80a <flatcc_json_printer_int16_struct_field@@Base+0xca>
  42a7d9:	cmp    al,0x4
  42a7db:	jne    42a89d <flatcc_json_printer_int16_struct_field@@Base+0x15d>
  42a7e1:	mov    esi,edx
  42a7e3:	shr    esi,0x2
  42a7e6:	imul   ebp,esi,0x147b
  42a7ec:	shr    ebp,0x11
  42a7ef:	imul   esi,ebp,0x64
  42a7f2:	sub    edx,esi
  42a7f4:	movzx  edx,dx
  42a7f7:	lea    rsi,[rip+0xfb82]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a7fe:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a802:	mov    WORD PTR [rcx-0x2],dx
  42a806:	lea    rcx,[rcx-0x2]
  42a80a:	movzx  edx,bp
  42a80d:	mov    esi,edx
  42a80f:	shr    esi,0x2
  42a812:	imul   esi,esi,0x147b
  42a818:	shr    esi,0x11
  42a81b:	imul   esi,esi,0x64
  42a81e:	sub    edx,esi
  42a820:	movzx  edx,dx
  42a823:	lea    rsi,[rip+0xfb56]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a82a:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a82e:	mov    WORD PTR [rcx-0x2],dx
  42a832:	jmp    42a89d <flatcc_json_printer_int16_struct_field@@Base+0x15d>
  42a834:	cmp    al,0x1
  42a836:	je     42a895 <flatcc_json_printer_int16_struct_field@@Base+0x155>
  42a838:	cmp    al,0x3
  42a83a:	je     42a869 <flatcc_json_printer_int16_struct_field@@Base+0x129>
  42a83c:	cmp    al,0x5
  42a83e:	jne    42a89d <flatcc_json_printer_int16_struct_field@@Base+0x15d>
  42a840:	mov    esi,edx
  42a842:	shr    esi,0x2
  42a845:	imul   ebp,esi,0x147b
  42a84b:	shr    ebp,0x11
  42a84e:	imul   esi,ebp,0x64
  42a851:	sub    edx,esi
  42a853:	movzx  edx,dx
  42a856:	lea    rsi,[rip+0xfb23]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a85d:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a861:	mov    WORD PTR [rcx-0x2],dx
  42a865:	lea    rcx,[rcx-0x2]
  42a869:	movzx  edx,bp
  42a86c:	mov    esi,edx
  42a86e:	shr    esi,0x2
  42a871:	imul   ebp,esi,0x147b
  42a877:	shr    ebp,0x11
  42a87a:	imul   esi,ebp,0x64
  42a87d:	sub    edx,esi
  42a87f:	movzx  edx,dx
  42a882:	lea    rsi,[rip+0xfaf7]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42a889:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a88d:	mov    WORD PTR [rcx-0x2],dx
  42a891:	lea    rcx,[rcx-0x2]
  42a895:	add    bpl,0x30
  42a899:	mov    BYTE PTR [rcx-0x1],bpl
  42a89d:	add    eax,r14d
  42a8a0:	add    QWORD PTR [rbx+0x28],rax
  42a8a4:	pop    rbx
  42a8a5:	pop    r14
  42a8a7:	pop    rbp
  42a8a8:	ret    
  42a8a9:	nop    DWORD PTR [rax+0x0]

000000000042a8b0 <flatcc_json_printer_int32_struct_field@@Base>:
  42a8b0:	push   rbp
  42a8b1:	push   r14
  42a8b3:	push   rbx
  42a8b4:	mov    r14,rdi
  42a8b7:	mov    ebx,DWORD PTR [rdx+rcx*1]
  42a8ba:	test   esi,esi
  42a8bc:	je     42a8cd <flatcc_json_printer_int32_struct_field@@Base+0x1d>
  42a8be:	mov    rax,QWORD PTR [r14+0x28]
  42a8c2:	lea    rcx,[rax+0x1]
  42a8c6:	mov    QWORD PTR [r14+0x28],rcx
  42a8ca:	mov    BYTE PTR [rax],0x2c
  42a8cd:	movsxd rdx,r9d
  42a8d0:	mov    rdi,r14
  42a8d3:	mov    rsi,r8
  42a8d6:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a8db:	mov    rsi,QWORD PTR [r14+0x28]
  42a8df:	mov    ebp,ebx
  42a8e1:	shr    ebp,0x1f
  42a8e4:	test   ebx,ebx
  42a8e6:	jns    42a8f1 <flatcc_json_printer_int32_struct_field@@Base+0x41>
  42a8e8:	mov    BYTE PTR [rsi],0x2d
  42a8eb:	add    rsi,0x1
  42a8ef:	neg    ebx
  42a8f1:	mov    edi,ebx
  42a8f3:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42a8f8:	add    eax,ebp
  42a8fa:	cdqe   
  42a8fc:	add    QWORD PTR [r14+0x28],rax
  42a900:	pop    rbx
  42a901:	pop    r14
  42a903:	pop    rbp
  42a904:	ret    
  42a905:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a90f:	nop

000000000042a910 <flatcc_json_printer_int64_struct_field@@Base>:
  42a910:	push   r15
  42a912:	push   r14
  42a914:	push   rbx
  42a915:	mov    r14,rdi
  42a918:	mov    r15,QWORD PTR [rdx+rcx*1]
  42a91c:	test   esi,esi
  42a91e:	je     42a92f <flatcc_json_printer_int64_struct_field@@Base+0x1f>
  42a920:	mov    rax,QWORD PTR [r14+0x28]
  42a924:	lea    rcx,[rax+0x1]
  42a928:	mov    QWORD PTR [r14+0x28],rcx
  42a92c:	mov    BYTE PTR [rax],0x2c
  42a92f:	movsxd rdx,r9d
  42a932:	mov    rdi,r14
  42a935:	mov    rsi,r8
  42a938:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a93d:	mov    rsi,QWORD PTR [r14+0x28]
  42a941:	mov    rbx,r15
  42a944:	shr    rbx,0x3f
  42a948:	test   r15,r15
  42a94b:	jns    42a957 <flatcc_json_printer_int64_struct_field@@Base+0x47>
  42a94d:	mov    BYTE PTR [rsi],0x2d
  42a950:	add    rsi,0x1
  42a954:	neg    r15
  42a957:	mov    rdi,r15
  42a95a:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42a95f:	add    eax,ebx
  42a961:	cdqe   
  42a963:	add    QWORD PTR [r14+0x28],rax
  42a967:	pop    rbx
  42a968:	pop    r14
  42a96a:	pop    r15
  42a96c:	ret    
  42a96d:	nop    DWORD PTR [rax]

000000000042a970 <flatcc_json_printer_bool_struct_field@@Base>:
  42a970:	push   rbp
  42a971:	push   rbx
  42a972:	push   rax
  42a973:	mov    rbx,rdi
  42a976:	mov    bpl,BYTE PTR [rdx+rcx*1]
  42a97a:	test   esi,esi
  42a97c:	je     42a98d <flatcc_json_printer_bool_struct_field@@Base+0x1d>
  42a97e:	mov    rax,QWORD PTR [rbx+0x28]
  42a982:	lea    rcx,[rax+0x1]
  42a986:	mov    QWORD PTR [rbx+0x28],rcx
  42a98a:	mov    BYTE PTR [rax],0x2c
  42a98d:	movsxd rdx,r9d
  42a990:	mov    rdi,rbx
  42a993:	mov    rsi,r8
  42a996:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42a99b:	mov    rax,QWORD PTR [rbx+0x28]
  42a99f:	test   bpl,bpl
  42a9a2:	je     42a9b5 <flatcc_json_printer_bool_struct_field@@Base+0x45>
  42a9a4:	mov    BYTE PTR [rax+0x4],0x0
  42a9a8:	mov    DWORD PTR [rax],0x65757274
  42a9ae:	mov    eax,0x4
  42a9b3:	jmp    42a9c6 <flatcc_json_printer_bool_struct_field@@Base+0x56>
  42a9b5:	mov    WORD PTR [rax+0x4],0x65
  42a9bb:	mov    DWORD PTR [rax],0x736c6166
  42a9c1:	mov    eax,0x5
  42a9c6:	add    QWORD PTR [rbx+0x28],rax
  42a9ca:	add    rsp,0x8
  42a9ce:	pop    rbx
  42a9cf:	pop    rbp
  42a9d0:	ret    
  42a9d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a9db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a9e0 <flatcc_json_printer_float_struct_field@@Base>:
  42a9e0:	push   rbx
  42a9e1:	sub    rsp,0x10
  42a9e5:	mov    rbx,rdi
  42a9e8:	vmovss xmm0,DWORD PTR [rdx+rcx*1]
  42a9ed:	vmovss DWORD PTR [rsp+0xc],xmm0
  42a9f3:	test   esi,esi
  42a9f5:	je     42aa06 <flatcc_json_printer_float_struct_field@@Base+0x26>
  42a9f7:	mov    rax,QWORD PTR [rbx+0x28]
  42a9fb:	lea    rcx,[rax+0x1]
  42a9ff:	mov    QWORD PTR [rbx+0x28],rcx
  42aa03:	mov    BYTE PTR [rax],0x2c
  42aa06:	movsxd rdx,r9d
  42aa09:	mov    rdi,rbx
  42aa0c:	mov    rsi,r8
  42aa0f:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42aa14:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42aa1a:	vcvtss2sd xmm0,xmm0,xmm0
  42aa1e:	mov    rdi,QWORD PTR [rbx+0x28]
  42aa22:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42aa27:	cdqe   
  42aa29:	add    QWORD PTR [rbx+0x28],rax
  42aa2d:	add    rsp,0x10
  42aa31:	pop    rbx
  42aa32:	ret    
  42aa33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa3d:	nop    DWORD PTR [rax]

000000000042aa40 <flatcc_json_printer_double_struct_field@@Base>:
  42aa40:	push   rbx
  42aa41:	sub    rsp,0x10
  42aa45:	mov    rbx,rdi
  42aa48:	vmovsd xmm0,QWORD PTR [rdx+rcx*1]
  42aa4d:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42aa53:	test   esi,esi
  42aa55:	je     42aa66 <flatcc_json_printer_double_struct_field@@Base+0x26>
  42aa57:	mov    rax,QWORD PTR [rbx+0x28]
  42aa5b:	lea    rcx,[rax+0x1]
  42aa5f:	mov    QWORD PTR [rbx+0x28],rcx
  42aa63:	mov    BYTE PTR [rax],0x2c
  42aa66:	movsxd rdx,r9d
  42aa69:	mov    rdi,rbx
  42aa6c:	mov    rsi,r8
  42aa6f:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42aa74:	mov    rdi,QWORD PTR [rbx+0x28]
  42aa78:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  42aa7e:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42aa83:	cdqe   
  42aa85:	add    QWORD PTR [rbx+0x28],rax
  42aa89:	add    rsp,0x10
  42aa8d:	pop    rbx
  42aa8e:	ret    
  42aa8f:	nop

000000000042aa90 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  42aa90:	push   r15
  42aa92:	push   r14
  42aa94:	push   rbx
  42aa95:	mov    r14,rdi
  42aa98:	mov    r15,QWORD PTR [rsp+0x20]
  42aa9d:	mov    bl,BYTE PTR [rdx+rcx*1]
  42aaa0:	test   esi,esi
  42aaa2:	je     42aab3 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x23>
  42aaa4:	mov    rax,QWORD PTR [r14+0x28]
  42aaa8:	lea    rcx,[rax+0x1]
  42aaac:	mov    QWORD PTR [r14+0x28],rcx
  42aab0:	mov    BYTE PTR [rax],0x2c
  42aab3:	movsxd rdx,r9d
  42aab6:	mov    rdi,r14
  42aab9:	mov    rsi,r8
  42aabc:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42aac1:	cmp    BYTE PTR [r14+0x33],0x0
  42aac6:	je     42ab09 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x79>
  42aac8:	mov    rdx,QWORD PTR [r14+0x28]
  42aacc:	cmp    bl,0x64
  42aacf:	jb     42ab19 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x89>
  42aad1:	mov    BYTE PTR [rdx+0x3],0x0
  42aad5:	movzx  eax,bl
  42aad8:	lea    ecx,[rax+rax*4]
  42aadb:	lea    ecx,[rax+rcx*8]
  42aade:	shr    ecx,0xc
  42aae1:	mov    sil,0x64
  42aae4:	mov    eax,ecx
  42aae6:	mul    sil
  42aae9:	sub    bl,al
  42aaeb:	movzx  eax,bl
  42aaee:	lea    rsi,[rip+0xf88b]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42aaf5:	movzx  eax,WORD PTR [rsi+rax*2]
  42aaf9:	mov    WORD PTR [rdx+0x1],ax
  42aafd:	or     cl,0x30
  42ab00:	mov    BYTE PTR [rdx],cl
  42ab02:	mov    eax,0x3
  42ab07:	jmp    42ab5a <flatcc_json_printer_uint8_enum_struct_field@@Base+0xca>
  42ab09:	movzx  esi,bl
  42ab0c:	mov    rdi,r14
  42ab0f:	mov    rax,r15
  42ab12:	pop    rbx
  42ab13:	pop    r14
  42ab15:	pop    r15
  42ab17:	jmp    rax
  42ab19:	cmp    bl,0xa
  42ab1c:	jb     42ab4c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
  42ab1e:	mov    BYTE PTR [rdx+0x2],0x0
  42ab22:	movzx  eax,bl
  42ab25:	lea    ecx,[rax+rax*4]
  42ab28:	lea    eax,[rax+rcx*8]
  42ab2b:	shr    eax,0xc
  42ab2e:	mov    cl,0x64
  42ab30:	mul    cl
  42ab32:	sub    bl,al
  42ab34:	movzx  eax,bl
  42ab37:	lea    rcx,[rip+0xf842]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ab3e:	movzx  eax,WORD PTR [rcx+rax*2]
  42ab42:	mov    WORD PTR [rdx],ax
  42ab45:	mov    eax,0x2
  42ab4a:	jmp    42ab5a <flatcc_json_printer_uint8_enum_struct_field@@Base+0xca>
  42ab4c:	mov    BYTE PTR [rdx+0x1],0x0
  42ab50:	add    bl,0x30
  42ab53:	mov    BYTE PTR [rdx],bl
  42ab55:	mov    eax,0x1
  42ab5a:	add    QWORD PTR [r14+0x28],rax
  42ab5e:	pop    rbx
  42ab5f:	pop    r14
  42ab61:	pop    r15
  42ab63:	ret    
  42ab64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab6e:	xchg   ax,ax

000000000042ab70 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  42ab70:	push   rbp
  42ab71:	push   r14
  42ab73:	push   rbx
  42ab74:	mov    r14,rdi
  42ab77:	mov    rbx,QWORD PTR [rsp+0x20]
  42ab7c:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42ab80:	test   esi,esi
  42ab82:	je     42ab93 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x23>
  42ab84:	mov    rax,QWORD PTR [r14+0x28]
  42ab88:	lea    rcx,[rax+0x1]
  42ab8c:	mov    QWORD PTR [r14+0x28],rcx
  42ab90:	mov    BYTE PTR [rax],0x2c
  42ab93:	movsxd rdx,r9d
  42ab96:	mov    rdi,r14
  42ab99:	mov    rsi,r8
  42ab9c:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42aba1:	cmp    BYTE PTR [r14+0x33],0x0
  42aba6:	je     42abc7 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x57>
  42aba8:	mov    rsi,QWORD PTR [r14+0x28]
  42abac:	movzx  edx,bp
  42abaf:	cmp    edx,0x3e8
  42abb5:	jb     42abd6 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x66>
  42abb7:	xor    eax,eax
  42abb9:	cmp    edx,0x270f
  42abbf:	seta   al
  42abc2:	or     eax,0x4
  42abc5:	jmp    42abfb <flatcc_json_printer_uint16_enum_struct_field@@Base+0x8b>
  42abc7:	movzx  esi,bp
  42abca:	mov    rdi,r14
  42abcd:	mov    rax,rbx
  42abd0:	pop    rbx
  42abd1:	pop    r14
  42abd3:	pop    rbp
  42abd4:	jmp    rax
  42abd6:	cmp    edx,0x64
  42abd9:	jb     42abf0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x80>
  42abdb:	mov    BYTE PTR [rsi+0x3],0x0
  42abdf:	add    rsi,0x3
  42abe3:	mov    eax,0x3
  42abe8:	mov    rcx,rsi
  42abeb:	jmp    42ac9d <flatcc_json_printer_uint16_enum_struct_field@@Base+0x12d>
  42abf0:	xor    eax,eax
  42abf2:	cmp    edx,0x9
  42abf5:	seta   al
  42abf8:	add    eax,0x1
  42abfb:	mov    edi,eax
  42abfd:	lea    rcx,[rsi+rdi*1]
  42ac01:	mov    BYTE PTR [rsi+rdi*1],0x0
  42ac05:	test   al,0x1
  42ac07:	jne    42ac68 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf8>
  42ac09:	cmp    al,0x2
  42ac0b:	je     42ac3e <flatcc_json_printer_uint16_enum_struct_field@@Base+0xce>
  42ac0d:	cmp    al,0x4
  42ac0f:	jne    42acd1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x161>
  42ac15:	mov    esi,edx
  42ac17:	shr    esi,0x2
  42ac1a:	imul   ebp,esi,0x147b
  42ac20:	shr    ebp,0x11
  42ac23:	imul   esi,ebp,0x64
  42ac26:	sub    edx,esi
  42ac28:	movzx  edx,dx
  42ac2b:	lea    rsi,[rip+0xf74e]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ac32:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ac36:	mov    WORD PTR [rcx-0x2],dx
  42ac3a:	lea    rcx,[rcx-0x2]
  42ac3e:	movzx  edx,bp
  42ac41:	mov    esi,edx
  42ac43:	shr    esi,0x2
  42ac46:	imul   esi,esi,0x147b
  42ac4c:	shr    esi,0x11
  42ac4f:	imul   esi,esi,0x64
  42ac52:	sub    edx,esi
  42ac54:	movzx  edx,dx
  42ac57:	lea    rsi,[rip+0xf722]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ac5e:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ac62:	mov    WORD PTR [rcx-0x2],dx
  42ac66:	jmp    42acd1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x161>
  42ac68:	cmp    al,0x1
  42ac6a:	je     42acc9 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x159>
  42ac6c:	cmp    al,0x3
  42ac6e:	je     42ac9d <flatcc_json_printer_uint16_enum_struct_field@@Base+0x12d>
  42ac70:	cmp    al,0x5
  42ac72:	jne    42acd1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x161>
  42ac74:	mov    esi,edx
  42ac76:	shr    esi,0x2
  42ac79:	imul   ebp,esi,0x147b
  42ac7f:	shr    ebp,0x11
  42ac82:	imul   esi,ebp,0x64
  42ac85:	sub    edx,esi
  42ac87:	movzx  edx,dx
  42ac8a:	lea    rsi,[rip+0xf6ef]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ac91:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ac95:	mov    WORD PTR [rcx-0x2],dx
  42ac99:	lea    rcx,[rcx-0x2]
  42ac9d:	movzx  edx,bp
  42aca0:	mov    esi,edx
  42aca2:	shr    esi,0x2
  42aca5:	imul   ebp,esi,0x147b
  42acab:	shr    ebp,0x11
  42acae:	imul   esi,ebp,0x64
  42acb1:	sub    edx,esi
  42acb3:	movzx  edx,dx
  42acb6:	lea    rsi,[rip+0xf6c3]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42acbd:	movzx  edx,WORD PTR [rsi+rdx*2]
  42acc1:	mov    WORD PTR [rcx-0x2],dx
  42acc5:	lea    rcx,[rcx-0x2]
  42acc9:	add    bpl,0x30
  42accd:	mov    BYTE PTR [rcx-0x1],bpl
  42acd1:	mov    eax,eax
  42acd3:	add    QWORD PTR [r14+0x28],rax
  42acd7:	pop    rbx
  42acd8:	pop    r14
  42acda:	pop    rbp
  42acdb:	ret    
  42acdc:	nop    DWORD PTR [rax+0x0]

000000000042ace0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  42ace0:	push   rbp
  42ace1:	push   r14
  42ace3:	push   rbx
  42ace4:	mov    rbx,rdi
  42ace7:	mov    r14,QWORD PTR [rsp+0x20]
  42acec:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42acef:	test   esi,esi
  42acf1:	je     42ad02 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x22>
  42acf3:	mov    rax,QWORD PTR [rbx+0x28]
  42acf7:	lea    rcx,[rax+0x1]
  42acfb:	mov    QWORD PTR [rbx+0x28],rcx
  42acff:	mov    BYTE PTR [rax],0x2c
  42ad02:	movsxd rdx,r9d
  42ad05:	mov    rdi,rbx
  42ad08:	mov    rsi,r8
  42ad0b:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42ad10:	cmp    BYTE PTR [rbx+0x33],0x0
  42ad14:	je     42ad2c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>
  42ad16:	mov    rsi,QWORD PTR [rbx+0x28]
  42ad1a:	mov    edi,ebp
  42ad1c:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42ad21:	cdqe   
  42ad23:	add    QWORD PTR [rbx+0x28],rax
  42ad27:	pop    rbx
  42ad28:	pop    r14
  42ad2a:	pop    rbp
  42ad2b:	ret    
  42ad2c:	mov    rdi,rbx
  42ad2f:	mov    esi,ebp
  42ad31:	mov    rax,r14
  42ad34:	pop    rbx
  42ad35:	pop    r14
  42ad37:	pop    rbp
  42ad38:	jmp    rax
  42ad3a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ad40 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  42ad40:	push   r15
  42ad42:	push   r14
  42ad44:	push   rbx
  42ad45:	mov    rbx,rdi
  42ad48:	mov    r15,QWORD PTR [rsp+0x20]
  42ad4d:	mov    r14,QWORD PTR [rdx+rcx*1]
  42ad51:	test   esi,esi
  42ad53:	je     42ad64 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x24>
  42ad55:	mov    rax,QWORD PTR [rbx+0x28]
  42ad59:	lea    rcx,[rax+0x1]
  42ad5d:	mov    QWORD PTR [rbx+0x28],rcx
  42ad61:	mov    BYTE PTR [rax],0x2c
  42ad64:	movsxd rdx,r9d
  42ad67:	mov    rdi,rbx
  42ad6a:	mov    rsi,r8
  42ad6d:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42ad72:	cmp    BYTE PTR [rbx+0x33],0x0
  42ad76:	je     42ad90 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x50>
  42ad78:	mov    rsi,QWORD PTR [rbx+0x28]
  42ad7c:	mov    rdi,r14
  42ad7f:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42ad84:	cdqe   
  42ad86:	add    QWORD PTR [rbx+0x28],rax
  42ad8a:	pop    rbx
  42ad8b:	pop    r14
  42ad8d:	pop    r15
  42ad8f:	ret    
  42ad90:	mov    rdi,rbx
  42ad93:	mov    rsi,r14
  42ad96:	mov    rax,r15
  42ad99:	pop    rbx
  42ad9a:	pop    r14
  42ad9c:	pop    r15
  42ad9e:	jmp    rax

000000000042ada0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  42ada0:	push   r15
  42ada2:	push   r14
  42ada4:	push   rbx
  42ada5:	mov    r14,rdi
  42ada8:	mov    r15,QWORD PTR [rsp+0x20]
  42adad:	mov    bl,BYTE PTR [rdx+rcx*1]
  42adb0:	test   esi,esi
  42adb2:	je     42adc3 <flatcc_json_printer_int8_enum_struct_field@@Base+0x23>
  42adb4:	mov    rax,QWORD PTR [r14+0x28]
  42adb8:	lea    rcx,[rax+0x1]
  42adbc:	mov    QWORD PTR [r14+0x28],rcx
  42adc0:	mov    BYTE PTR [rax],0x2c
  42adc3:	movsxd rdx,r9d
  42adc6:	mov    rdi,r14
  42adc9:	mov    rsi,r8
  42adcc:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42add1:	cmp    BYTE PTR [r14+0x33],0x0
  42add6:	je     42ae2d <flatcc_json_printer_int8_enum_struct_field@@Base+0x8d>
  42add8:	movzx  edx,bl
  42addb:	mov    rsi,QWORD PTR [r14+0x28]
  42addf:	test   dl,dl
  42ade1:	jns    42adec <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  42ade3:	mov    BYTE PTR [rsi],0x2d
  42ade6:	add    rsi,0x1
  42adea:	neg    bl
  42adec:	shr    rdx,0x7
  42adf0:	cmp    bl,0x64
  42adf3:	jb     42ae3d <flatcc_json_printer_int8_enum_struct_field@@Base+0x9d>
  42adf5:	mov    BYTE PTR [rsi+0x3],0x0
  42adf9:	movzx  eax,bl
  42adfc:	lea    ecx,[rax+rax*4]
  42adff:	lea    ecx,[rax+rcx*8]
  42ae02:	shr    ecx,0xc
  42ae05:	mov    dil,0x64
  42ae08:	mov    eax,ecx
  42ae0a:	mul    dil
  42ae0d:	sub    bl,al
  42ae0f:	movzx  eax,bl
  42ae12:	lea    rdi,[rip+0xf567]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ae19:	movzx  eax,WORD PTR [rdi+rax*2]
  42ae1d:	mov    WORD PTR [rsi+0x1],ax
  42ae21:	or     cl,0x30
  42ae24:	mov    BYTE PTR [rsi],cl
  42ae26:	mov    eax,0x3
  42ae2b:	jmp    42ae7e <flatcc_json_printer_int8_enum_struct_field@@Base+0xde>
  42ae2d:	movsx  esi,bl
  42ae30:	mov    rdi,r14
  42ae33:	mov    rax,r15
  42ae36:	pop    rbx
  42ae37:	pop    r14
  42ae39:	pop    r15
  42ae3b:	jmp    rax
  42ae3d:	cmp    bl,0xa
  42ae40:	jb     42ae70 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
  42ae42:	mov    BYTE PTR [rsi+0x2],0x0
  42ae46:	movzx  eax,bl
  42ae49:	lea    ecx,[rax+rax*4]
  42ae4c:	lea    eax,[rax+rcx*8]
  42ae4f:	shr    eax,0xc
  42ae52:	mov    cl,0x64
  42ae54:	mul    cl
  42ae56:	sub    bl,al
  42ae58:	movzx  eax,bl
  42ae5b:	lea    rcx,[rip+0xf51e]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ae62:	movzx  eax,WORD PTR [rcx+rax*2]
  42ae66:	mov    WORD PTR [rsi],ax
  42ae69:	mov    eax,0x2
  42ae6e:	jmp    42ae7e <flatcc_json_printer_int8_enum_struct_field@@Base+0xde>
  42ae70:	mov    BYTE PTR [rsi+0x1],0x0
  42ae74:	add    bl,0x30
  42ae77:	mov    BYTE PTR [rsi],bl
  42ae79:	mov    eax,0x1
  42ae7e:	add    rax,rdx
  42ae81:	add    QWORD PTR [r14+0x28],rax
  42ae85:	pop    rbx
  42ae86:	pop    r14
  42ae88:	pop    r15
  42ae8a:	ret    
  42ae8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ae90 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  42ae90:	push   rbp
  42ae91:	push   r14
  42ae93:	push   rbx
  42ae94:	mov    r14,rdi
  42ae97:	mov    rbx,QWORD PTR [rsp+0x20]
  42ae9c:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42aea0:	test   esi,esi
  42aea2:	je     42aeb3 <flatcc_json_printer_int16_enum_struct_field@@Base+0x23>
  42aea4:	mov    rax,QWORD PTR [r14+0x28]
  42aea8:	lea    rcx,[rax+0x1]
  42aeac:	mov    QWORD PTR [r14+0x28],rcx
  42aeb0:	mov    BYTE PTR [rax],0x2c
  42aeb3:	movsxd rdx,r9d
  42aeb6:	mov    rdi,r14
  42aeb9:	mov    rsi,r8
  42aebc:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42aec1:	cmp    BYTE PTR [r14+0x33],0x0
  42aec6:	je     42aefe <flatcc_json_printer_int16_enum_struct_field@@Base+0x6e>
  42aec8:	movzx  r8d,bp
  42aecc:	mov    rdi,QWORD PTR [r14+0x28]
  42aed0:	test   r8w,r8w
  42aed4:	jns    42aedf <flatcc_json_printer_int16_enum_struct_field@@Base+0x4f>
  42aed6:	mov    BYTE PTR [rdi],0x2d
  42aed9:	add    rdi,0x1
  42aedd:	neg    ebp
  42aedf:	shr    r8d,0xf
  42aee3:	movzx  esi,bp
  42aee6:	cmp    esi,0x3e8
  42aeec:	jb     42af0d <flatcc_json_printer_int16_enum_struct_field@@Base+0x7d>
  42aeee:	xor    ecx,ecx
  42aef0:	cmp    esi,0x270f
  42aef6:	seta   cl
  42aef9:	or     ecx,0x4
  42aefc:	jmp    42af32 <flatcc_json_printer_int16_enum_struct_field@@Base+0xa2>
  42aefe:	movsx  esi,bp
  42af01:	mov    rdi,r14
  42af04:	mov    rax,rbx
  42af07:	pop    rbx
  42af08:	pop    r14
  42af0a:	pop    rbp
  42af0b:	jmp    rax
  42af0d:	cmp    esi,0x64
  42af10:	jb     42af27 <flatcc_json_printer_int16_enum_struct_field@@Base+0x97>
  42af12:	mov    BYTE PTR [rdi+0x3],0x0
  42af16:	add    rdi,0x3
  42af1a:	mov    ecx,0x3
  42af1f:	mov    rdx,rdi
  42af22:	jmp    42afda <flatcc_json_printer_int16_enum_struct_field@@Base+0x14a>
  42af27:	xor    ecx,ecx
  42af29:	cmp    esi,0x9
  42af2c:	seta   cl
  42af2f:	add    ecx,0x1
  42af32:	mov    eax,ecx
  42af34:	lea    rdx,[rdi+rax*1]
  42af38:	mov    BYTE PTR [rdi+rax*1],0x0
  42af3c:	test   cl,0x1
  42af3f:	jne    42afa2 <flatcc_json_printer_int16_enum_struct_field@@Base+0x112>
  42af41:	cmp    cl,0x2
  42af44:	je     42af78 <flatcc_json_printer_int16_enum_struct_field@@Base+0xe8>
  42af46:	cmp    cl,0x4
  42af49:	jne    42b00e <flatcc_json_printer_int16_enum_struct_field@@Base+0x17e>
  42af4f:	mov    eax,esi
  42af51:	shr    eax,0x2
  42af54:	imul   ebp,eax,0x147b
  42af5a:	shr    ebp,0x11
  42af5d:	imul   eax,ebp,0x64
  42af60:	sub    esi,eax
  42af62:	movzx  eax,si
  42af65:	lea    rsi,[rip+0xf414]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42af6c:	movzx  eax,WORD PTR [rsi+rax*2]
  42af70:	mov    WORD PTR [rdx-0x2],ax
  42af74:	lea    rdx,[rdx-0x2]
  42af78:	movzx  eax,bp
  42af7b:	mov    esi,eax
  42af7d:	shr    esi,0x2
  42af80:	imul   esi,esi,0x147b
  42af86:	shr    esi,0x11
  42af89:	imul   esi,esi,0x64
  42af8c:	sub    eax,esi
  42af8e:	movzx  eax,ax
  42af91:	lea    rsi,[rip+0xf3e8]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42af98:	movzx  eax,WORD PTR [rsi+rax*2]
  42af9c:	mov    WORD PTR [rdx-0x2],ax
  42afa0:	jmp    42b00e <flatcc_json_printer_int16_enum_struct_field@@Base+0x17e>
  42afa2:	cmp    cl,0x1
  42afa5:	je     42b006 <flatcc_json_printer_int16_enum_struct_field@@Base+0x176>
  42afa7:	cmp    cl,0x3
  42afaa:	je     42afda <flatcc_json_printer_int16_enum_struct_field@@Base+0x14a>
  42afac:	cmp    cl,0x5
  42afaf:	jne    42b00e <flatcc_json_printer_int16_enum_struct_field@@Base+0x17e>
  42afb1:	mov    eax,esi
  42afb3:	shr    eax,0x2
  42afb6:	imul   ebp,eax,0x147b
  42afbc:	shr    ebp,0x11
  42afbf:	imul   eax,ebp,0x64
  42afc2:	sub    esi,eax
  42afc4:	movzx  eax,si
  42afc7:	lea    rsi,[rip+0xf3b2]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42afce:	movzx  eax,WORD PTR [rsi+rax*2]
  42afd2:	mov    WORD PTR [rdx-0x2],ax
  42afd6:	lea    rdx,[rdx-0x2]
  42afda:	movzx  eax,bp
  42afdd:	mov    esi,eax
  42afdf:	shr    esi,0x2
  42afe2:	imul   ebp,esi,0x147b
  42afe8:	shr    ebp,0x11
  42afeb:	imul   esi,ebp,0x64
  42afee:	sub    eax,esi
  42aff0:	movzx  eax,ax
  42aff3:	lea    rsi,[rip+0xf386]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42affa:	movzx  eax,WORD PTR [rsi+rax*2]
  42affe:	mov    WORD PTR [rdx-0x2],ax
  42b002:	lea    rdx,[rdx-0x2]
  42b006:	add    bpl,0x30
  42b00a:	mov    BYTE PTR [rdx-0x1],bpl
  42b00e:	add    ecx,r8d
  42b011:	add    QWORD PTR [r14+0x28],rcx
  42b015:	pop    rbx
  42b016:	pop    r14
  42b018:	pop    rbp
  42b019:	ret    
  42b01a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b020 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  42b020:	push   rbp
  42b021:	push   r14
  42b023:	push   rbx
  42b024:	mov    rbx,rdi
  42b027:	mov    r14,QWORD PTR [rsp+0x20]
  42b02c:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42b02f:	test   esi,esi
  42b031:	je     42b042 <flatcc_json_printer_int32_enum_struct_field@@Base+0x22>
  42b033:	mov    rax,QWORD PTR [rbx+0x28]
  42b037:	lea    rcx,[rax+0x1]
  42b03b:	mov    QWORD PTR [rbx+0x28],rcx
  42b03f:	mov    BYTE PTR [rax],0x2c
  42b042:	movsxd rdx,r9d
  42b045:	mov    rdi,rbx
  42b048:	mov    rsi,r8
  42b04b:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42b050:	cmp    BYTE PTR [rbx+0x33],0x0
  42b054:	je     42b083 <flatcc_json_printer_int32_enum_struct_field@@Base+0x63>
  42b056:	mov    rsi,QWORD PTR [rbx+0x28]
  42b05a:	mov    r14d,ebp
  42b05d:	shr    r14d,0x1f
  42b061:	test   ebp,ebp
  42b063:	jns    42b06e <flatcc_json_printer_int32_enum_struct_field@@Base+0x4e>
  42b065:	mov    BYTE PTR [rsi],0x2d
  42b068:	add    rsi,0x1
  42b06c:	neg    ebp
  42b06e:	mov    edi,ebp
  42b070:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42b075:	add    eax,r14d
  42b078:	cdqe   
  42b07a:	add    QWORD PTR [rbx+0x28],rax
  42b07e:	pop    rbx
  42b07f:	pop    r14
  42b081:	pop    rbp
  42b082:	ret    
  42b083:	mov    rdi,rbx
  42b086:	mov    esi,ebp
  42b088:	mov    rax,r14
  42b08b:	pop    rbx
  42b08c:	pop    r14
  42b08e:	pop    rbp
  42b08f:	jmp    rax
  42b091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b09b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b0a0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  42b0a0:	push   r15
  42b0a2:	push   r14
  42b0a4:	push   rbx
  42b0a5:	mov    rbx,rdi
  42b0a8:	mov    r15,QWORD PTR [rsp+0x20]
  42b0ad:	mov    r14,QWORD PTR [rdx+rcx*1]
  42b0b1:	test   esi,esi
  42b0b3:	je     42b0c4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x24>
  42b0b5:	mov    rax,QWORD PTR [rbx+0x28]
  42b0b9:	lea    rcx,[rax+0x1]
  42b0bd:	mov    QWORD PTR [rbx+0x28],rcx
  42b0c1:	mov    BYTE PTR [rax],0x2c
  42b0c4:	movsxd rdx,r9d
  42b0c7:	mov    rdi,rbx
  42b0ca:	mov    rsi,r8
  42b0cd:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42b0d2:	cmp    BYTE PTR [rbx+0x33],0x0
  42b0d6:	je     42b109 <flatcc_json_printer_int64_enum_struct_field@@Base+0x69>
  42b0d8:	mov    rsi,QWORD PTR [rbx+0x28]
  42b0dc:	mov    r15,r14
  42b0df:	shr    r15,0x3f
  42b0e3:	test   r14,r14
  42b0e6:	jns    42b0f2 <flatcc_json_printer_int64_enum_struct_field@@Base+0x52>
  42b0e8:	mov    BYTE PTR [rsi],0x2d
  42b0eb:	add    rsi,0x1
  42b0ef:	neg    r14
  42b0f2:	mov    rdi,r14
  42b0f5:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42b0fa:	add    eax,r15d
  42b0fd:	cdqe   
  42b0ff:	add    QWORD PTR [rbx+0x28],rax
  42b103:	pop    rbx
  42b104:	pop    r14
  42b106:	pop    r15
  42b108:	ret    
  42b109:	mov    rdi,rbx
  42b10c:	mov    rsi,r14
  42b10f:	mov    rax,r15
  42b112:	pop    rbx
  42b113:	pop    r14
  42b115:	pop    r15
  42b117:	jmp    rax
  42b119:	nop    DWORD PTR [rax+0x0]

000000000042b120 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  42b120:	push   rbp
  42b121:	push   r14
  42b123:	push   rbx
  42b124:	mov    rbx,rdi
  42b127:	mov    r14,QWORD PTR [rsp+0x20]
  42b12c:	mov    bpl,BYTE PTR [rdx+rcx*1]
  42b130:	test   esi,esi
  42b132:	je     42b143 <flatcc_json_printer_bool_enum_struct_field@@Base+0x23>
  42b134:	mov    rax,QWORD PTR [rbx+0x28]
  42b138:	lea    rcx,[rax+0x1]
  42b13c:	mov    QWORD PTR [rbx+0x28],rcx
  42b140:	mov    BYTE PTR [rax],0x2c
  42b143:	movsxd rdx,r9d
  42b146:	mov    rdi,rbx
  42b149:	mov    rsi,r8
  42b14c:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42b151:	cmp    BYTE PTR [rbx+0x33],0x0
  42b155:	je     42b171 <flatcc_json_printer_bool_enum_struct_field@@Base+0x51>
  42b157:	mov    rax,QWORD PTR [rbx+0x28]
  42b15b:	test   bpl,bpl
  42b15e:	je     42b181 <flatcc_json_printer_bool_enum_struct_field@@Base+0x61>
  42b160:	mov    BYTE PTR [rax+0x4],0x0
  42b164:	mov    DWORD PTR [rax],0x65757274
  42b16a:	mov    eax,0x4
  42b16f:	jmp    42b192 <flatcc_json_printer_bool_enum_struct_field@@Base+0x72>
  42b171:	movzx  esi,bpl
  42b175:	mov    rdi,rbx
  42b178:	mov    rax,r14
  42b17b:	pop    rbx
  42b17c:	pop    r14
  42b17e:	pop    rbp
  42b17f:	jmp    rax
  42b181:	mov    WORD PTR [rax+0x4],0x65
  42b187:	mov    DWORD PTR [rax],0x736c6166
  42b18d:	mov    eax,0x5
  42b192:	add    QWORD PTR [rbx+0x28],rax
  42b196:	pop    rbx
  42b197:	pop    r14
  42b199:	pop    rbp
  42b19a:	ret    
  42b19b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b1a0 <flatcc_json_printer_utype_vector_field@@Base>:
  42b1a0:	push   rbp
  42b1a1:	push   r15
  42b1a3:	push   r14
  42b1a5:	push   r13
  42b1a7:	push   r12
  42b1a9:	push   rbx
  42b1aa:	push   rax
  42b1ab:	lea    eax,[rdx+rdx*1]
  42b1ae:	add    eax,0x4
  42b1b1:	cmp    eax,DWORD PTR [rsi+0x10]
  42b1b4:	jge    42b5be <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42b1ba:	mov    rdx,QWORD PTR [rsi+0x8]
  42b1be:	mov    eax,eax
  42b1c0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42b1c5:	test   r12,r12
  42b1c8:	je     42b5be <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42b1ce:	add    r12,QWORD PTR [rsi]
  42b1d1:	je     42b5be <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42b1d7:	mov    r15,rdi
  42b1da:	mov    eax,DWORD PTR [rsi+0x18]
  42b1dd:	lea    edx,[rax+0x1]
  42b1e0:	mov    DWORD PTR [rsi+0x18],edx
  42b1e3:	test   eax,eax
  42b1e5:	je     42b1f6 <flatcc_json_printer_utype_vector_field@@Base+0x56>
  42b1e7:	mov    rax,QWORD PTR [r15+0x28]
  42b1eb:	lea    rdx,[rax+0x1]
  42b1ef:	mov    QWORD PTR [r15+0x28],rdx
  42b1f3:	mov    BYTE PTR [rax],0x2c
  42b1f6:	mov    ebx,DWORD PTR [r12]
  42b1fa:	mov    ebp,DWORD PTR [r12+rbx*1]
  42b1fe:	movsxd rdx,r8d
  42b201:	mov    rdi,r15
  42b204:	mov    rsi,rcx
  42b207:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42b20c:	add    DWORD PTR [r15+0x38],0x1
  42b211:	mov    rax,QWORD PTR [r15+0x28]
  42b215:	lea    rcx,[rax+0x1]
  42b219:	mov    QWORD PTR [r15+0x28],rcx
  42b21d:	mov    BYTE PTR [rax],0x5b
  42b220:	test   ebp,ebp
  42b222:	je     42b504 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42b228:	add    r12,rbx
  42b22b:	cmp    BYTE PTR [r15+0x31],0x0
  42b230:	mov    r14,QWORD PTR [r15+0x28]
  42b234:	je     42b2d4 <flatcc_json_printer_utype_vector_field@@Base+0x134>
  42b23a:	lea    rax,[r14+0x1]
  42b23e:	mov    QWORD PTR [r15+0x28],rax
  42b242:	mov    BYTE PTR [r14],0xa
  42b246:	movsxd rax,DWORD PTR [r15+0x38]
  42b24a:	movzx  r14d,BYTE PTR [r15+0x31]
  42b24f:	imul   r14,rax
  42b253:	mov    rbx,QWORD PTR [r15+0x20]
  42b257:	mov    rdi,QWORD PTR [r15+0x28]
  42b25b:	lea    rax,[rdi+r14*1]
  42b25f:	cmp    rax,rbx
  42b262:	jbe    42b2bd <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42b264:	cmp    rdi,rbx
  42b267:	jb     42b27a <flatcc_json_printer_utype_vector_field@@Base+0xda>
  42b269:	xor    esi,esi
  42b26b:	mov    rdi,r15
  42b26e:	call   QWORD PTR [r15+0x48]
  42b272:	mov    rbx,QWORD PTR [r15+0x20]
  42b276:	mov    rdi,QWORD PTR [r15+0x28]
  42b27a:	sub    rbx,rdi
  42b27d:	cmp    rbx,r14
  42b280:	jae    42b2bd <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42b282:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b28c:	nop    DWORD PTR [rax+0x0]
  42b290:	mov    esi,0x20
  42b295:	mov    rdx,rbx
  42b298:	call   406080 <memset@plt>
  42b29d:	add    QWORD PTR [r15+0x28],rbx
  42b2a1:	sub    r14,rbx
  42b2a4:	xor    esi,esi
  42b2a6:	mov    rdi,r15
  42b2a9:	call   QWORD PTR [r15+0x48]
  42b2ad:	mov    rbx,QWORD PTR [r15+0x20]
  42b2b1:	mov    rdi,QWORD PTR [r15+0x28]
  42b2b5:	sub    rbx,rdi
  42b2b8:	cmp    r14,rbx
  42b2bb:	ja     42b290 <flatcc_json_printer_utype_vector_field@@Base+0xf0>
  42b2bd:	mov    esi,0x20
  42b2c2:	mov    rdx,r14
  42b2c5:	call   406080 <memset@plt>
  42b2ca:	add    r14,QWORD PTR [r15+0x28]
  42b2ce:	mov    QWORD PTR [r15+0x28],r14
  42b2d2:	jmp    42b2e7 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42b2d4:	cmp    r14,QWORD PTR [r15+0x20]
  42b2d8:	jb     42b2e7 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42b2da:	xor    esi,esi
  42b2dc:	mov    rdi,r15
  42b2df:	call   QWORD PTR [r15+0x48]
  42b2e3:	mov    r14,QWORD PTR [r15+0x28]
  42b2e7:	mov    dl,BYTE PTR [r12+0x4]
  42b2ec:	cmp    dl,0x64
  42b2ef:	jb     42b32a <flatcc_json_printer_utype_vector_field@@Base+0x18a>
  42b2f1:	mov    BYTE PTR [r14+0x3],0x0
  42b2f6:	movzx  eax,dl
  42b2f9:	lea    ecx,[rax+rax*4]
  42b2fc:	lea    ecx,[rax+rcx*8]
  42b2ff:	shr    ecx,0xc
  42b302:	mov    bl,0x64
  42b304:	mov    eax,ecx
  42b306:	mul    bl
  42b308:	sub    dl,al
  42b30a:	movzx  eax,dl
  42b30d:	lea    rdx,[rip+0xf06c]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42b314:	movzx  eax,WORD PTR [rdx+rax*2]
  42b318:	mov    WORD PTR [r14+0x1],ax
  42b31d:	or     cl,0x30
  42b320:	mov    BYTE PTR [r14],cl
  42b323:	mov    eax,0x3
  42b328:	jmp    42b36f <flatcc_json_printer_utype_vector_field@@Base+0x1cf>
  42b32a:	cmp    dl,0xa
  42b32d:	jb     42b35f <flatcc_json_printer_utype_vector_field@@Base+0x1bf>
  42b32f:	mov    BYTE PTR [r14+0x2],0x0
  42b334:	movzx  eax,dl
  42b337:	lea    ecx,[rax+rax*4]
  42b33a:	lea    eax,[rax+rcx*8]
  42b33d:	shr    eax,0xc
  42b340:	mov    cl,0x64
  42b342:	mul    cl
  42b344:	sub    dl,al
  42b346:	movzx  eax,dl
  42b349:	lea    rcx,[rip+0xf030]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42b350:	movzx  eax,WORD PTR [rcx+rax*2]
  42b354:	mov    WORD PTR [r14],ax
  42b358:	mov    eax,0x2
  42b35d:	jmp    42b36f <flatcc_json_printer_utype_vector_field@@Base+0x1cf>
  42b35f:	mov    BYTE PTR [r14+0x1],0x0
  42b364:	add    dl,0x30
  42b367:	mov    BYTE PTR [r14],dl
  42b36a:	mov    eax,0x1
  42b36f:	add    QWORD PTR [r15+0x28],rax
  42b373:	add    ebp,0xffffffff
  42b376:	je     42b504 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42b37c:	add    r12,0x5
  42b380:	mov    rax,QWORD PTR [r15+0x28]
  42b384:	lea    r13,[rip+0xeff5]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42b38b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b390:	lea    rcx,[rax+0x1]
  42b394:	mov    QWORD PTR [r15+0x28],rcx
  42b398:	mov    BYTE PTR [rax],0x2c
  42b39b:	cmp    BYTE PTR [r15+0x31],0x0
  42b3a0:	mov    r14,QWORD PTR [r15+0x28]
  42b3a4:	je     42b450 <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
  42b3aa:	lea    rax,[r14+0x1]
  42b3ae:	mov    QWORD PTR [r15+0x28],rax
  42b3b2:	mov    BYTE PTR [r14],0xa
  42b3b6:	movsxd rax,DWORD PTR [r15+0x38]
  42b3ba:	movzx  r14d,BYTE PTR [r15+0x31]
  42b3bf:	imul   r14,rax
  42b3c3:	mov    rbx,QWORD PTR [r15+0x20]
  42b3c7:	mov    rdi,QWORD PTR [r15+0x28]
  42b3cb:	lea    rax,[rdi+r14*1]
  42b3cf:	cmp    rax,rbx
  42b3d2:	jbe    42b42d <flatcc_json_printer_utype_vector_field@@Base+0x28d>
  42b3d4:	cmp    rdi,rbx
  42b3d7:	jb     42b3ea <flatcc_json_printer_utype_vector_field@@Base+0x24a>
  42b3d9:	xor    esi,esi
  42b3db:	mov    rdi,r15
  42b3de:	call   QWORD PTR [r15+0x48]
  42b3e2:	mov    rbx,QWORD PTR [r15+0x20]
  42b3e6:	mov    rdi,QWORD PTR [r15+0x28]
  42b3ea:	sub    rbx,rdi
  42b3ed:	cmp    rbx,r14
  42b3f0:	jae    42b42d <flatcc_json_printer_utype_vector_field@@Base+0x28d>
  42b3f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b3fc:	nop    DWORD PTR [rax+0x0]
  42b400:	mov    esi,0x20
  42b405:	mov    rdx,rbx
  42b408:	call   406080 <memset@plt>
  42b40d:	add    QWORD PTR [r15+0x28],rbx
  42b411:	sub    r14,rbx
  42b414:	xor    esi,esi
  42b416:	mov    rdi,r15
  42b419:	call   QWORD PTR [r15+0x48]
  42b41d:	mov    rbx,QWORD PTR [r15+0x20]
  42b421:	mov    rdi,QWORD PTR [r15+0x28]
  42b425:	sub    rbx,rdi
  42b428:	cmp    r14,rbx
  42b42b:	ja     42b400 <flatcc_json_printer_utype_vector_field@@Base+0x260>
  42b42d:	mov    esi,0x20
  42b432:	mov    rdx,r14
  42b435:	call   406080 <memset@plt>
  42b43a:	add    r14,QWORD PTR [r15+0x28]
  42b43e:	mov    QWORD PTR [r15+0x28],r14
  42b442:	jmp    42b470 <flatcc_json_printer_utype_vector_field@@Base+0x2d0>
  42b444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b44e:	xchg   ax,ax
  42b450:	cmp    r14,QWORD PTR [r15+0x20]
  42b454:	jb     42b470 <flatcc_json_printer_utype_vector_field@@Base+0x2d0>
  42b456:	xor    esi,esi
  42b458:	mov    rdi,r15
  42b45b:	call   QWORD PTR [r15+0x48]
  42b45f:	mov    r14,QWORD PTR [r15+0x28]
  42b463:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b46d:	nop    DWORD PTR [rax]
  42b470:	add    ebp,0xffffffff
  42b473:	mov    dl,BYTE PTR [r12]
  42b477:	cmp    dl,0x64
  42b47a:	jb     42b4b0 <flatcc_json_printer_utype_vector_field@@Base+0x310>
  42b47c:	mov    BYTE PTR [r14+0x3],0x0
  42b481:	movzx  eax,dl
  42b484:	lea    ecx,[rax+rax*4]
  42b487:	lea    ecx,[rax+rcx*8]
  42b48a:	shr    ecx,0xc
  42b48d:	mov    eax,ecx
  42b48f:	mov    bl,0x64
  42b491:	mul    bl
  42b493:	sub    dl,al
  42b495:	movzx  eax,dl
  42b498:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42b49e:	mov    WORD PTR [r14+0x1],ax
  42b4a3:	or     cl,0x30
  42b4a6:	mov    BYTE PTR [r14],cl
  42b4a9:	mov    eax,0x3
  42b4ae:	jmp    42b4f0 <flatcc_json_printer_utype_vector_field@@Base+0x350>
  42b4b0:	cmp    dl,0xa
  42b4b3:	jb     42b4e0 <flatcc_json_printer_utype_vector_field@@Base+0x340>
  42b4b5:	mov    BYTE PTR [r14+0x2],0x0
  42b4ba:	movzx  eax,dl
  42b4bd:	lea    ecx,[rax+rax*4]
  42b4c0:	lea    eax,[rax+rcx*8]
  42b4c3:	shr    eax,0xc
  42b4c6:	mov    cl,0x64
  42b4c8:	mul    cl
  42b4ca:	sub    dl,al
  42b4cc:	movzx  eax,dl
  42b4cf:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42b4d5:	mov    WORD PTR [r14],ax
  42b4d9:	mov    eax,0x2
  42b4de:	jmp    42b4f0 <flatcc_json_printer_utype_vector_field@@Base+0x350>
  42b4e0:	mov    BYTE PTR [r14+0x1],0x0
  42b4e5:	add    dl,0x30
  42b4e8:	mov    BYTE PTR [r14],dl
  42b4eb:	mov    eax,0x1
  42b4f0:	add    rax,QWORD PTR [r15+0x28]
  42b4f4:	mov    QWORD PTR [r15+0x28],rax
  42b4f8:	add    r12,0x1
  42b4fc:	test   ebp,ebp
  42b4fe:	jne    42b390 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
  42b504:	cmp    BYTE PTR [r15+0x31],0x0
  42b509:	mov    r14,QWORD PTR [r15+0x28]
  42b50d:	je     42b5b2 <flatcc_json_printer_utype_vector_field@@Base+0x412>
  42b513:	lea    rax,[r14+0x1]
  42b517:	mov    QWORD PTR [r15+0x28],rax
  42b51b:	mov    BYTE PTR [r14],0xa
  42b51f:	movsxd rax,DWORD PTR [r15+0x38]
  42b523:	add    rax,0xffffffffffffffff
  42b527:	mov    DWORD PTR [r15+0x38],eax
  42b52b:	movzx  r14d,BYTE PTR [r15+0x31]
  42b530:	imul   r14,rax
  42b534:	mov    rbx,QWORD PTR [r15+0x20]
  42b538:	mov    rdi,QWORD PTR [r15+0x28]
  42b53c:	lea    rax,[rdi+r14*1]
  42b540:	cmp    rax,rbx
  42b543:	jbe    42b59d <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42b545:	cmp    rdi,rbx
  42b548:	jb     42b55b <flatcc_json_printer_utype_vector_field@@Base+0x3bb>
  42b54a:	xor    esi,esi
  42b54c:	mov    rdi,r15
  42b54f:	call   QWORD PTR [r15+0x48]
  42b553:	mov    rbx,QWORD PTR [r15+0x20]
  42b557:	mov    rdi,QWORD PTR [r15+0x28]
  42b55b:	sub    rbx,rdi
  42b55e:	cmp    rbx,r14
  42b561:	jae    42b59d <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42b563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b56d:	nop    DWORD PTR [rax]
  42b570:	mov    esi,0x20
  42b575:	mov    rdx,rbx
  42b578:	call   406080 <memset@plt>
  42b57d:	add    QWORD PTR [r15+0x28],rbx
  42b581:	sub    r14,rbx
  42b584:	xor    esi,esi
  42b586:	mov    rdi,r15
  42b589:	call   QWORD PTR [r15+0x48]
  42b58d:	mov    rbx,QWORD PTR [r15+0x20]
  42b591:	mov    rdi,QWORD PTR [r15+0x28]
  42b595:	sub    rbx,rdi
  42b598:	cmp    r14,rbx
  42b59b:	ja     42b570 <flatcc_json_printer_utype_vector_field@@Base+0x3d0>
  42b59d:	mov    esi,0x20
  42b5a2:	mov    rdx,r14
  42b5a5:	call   406080 <memset@plt>
  42b5aa:	add    r14,QWORD PTR [r15+0x28]
  42b5ae:	mov    QWORD PTR [r15+0x28],r14
  42b5b2:	lea    rax,[r14+0x1]
  42b5b6:	mov    QWORD PTR [r15+0x28],rax
  42b5ba:	mov    BYTE PTR [r14],0x5d
  42b5be:	add    rsp,0x8
  42b5c2:	pop    rbx
  42b5c3:	pop    r12
  42b5c5:	pop    r13
  42b5c7:	pop    r14
  42b5c9:	pop    r15
  42b5cb:	pop    rbp
  42b5cc:	ret    
  42b5cd:	nop    DWORD PTR [rax]

000000000042b5d0 <flatcc_json_printer_uint8_vector_field@@Base>:
  42b5d0:	push   rbp
  42b5d1:	push   r15
  42b5d3:	push   r14
  42b5d5:	push   r13
  42b5d7:	push   r12
  42b5d9:	push   rbx
  42b5da:	push   rax
  42b5db:	lea    eax,[rdx+rdx*1]
  42b5de:	add    eax,0x4
  42b5e1:	cmp    eax,DWORD PTR [rsi+0x10]
  42b5e4:	jge    42b9ee <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42b5ea:	mov    rdx,QWORD PTR [rsi+0x8]
  42b5ee:	mov    eax,eax
  42b5f0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42b5f5:	test   r12,r12
  42b5f8:	je     42b9ee <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42b5fe:	add    r12,QWORD PTR [rsi]
  42b601:	je     42b9ee <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42b607:	mov    r15,rdi
  42b60a:	mov    eax,DWORD PTR [rsi+0x18]
  42b60d:	lea    edx,[rax+0x1]
  42b610:	mov    DWORD PTR [rsi+0x18],edx
  42b613:	test   eax,eax
  42b615:	je     42b626 <flatcc_json_printer_uint8_vector_field@@Base+0x56>
  42b617:	mov    rax,QWORD PTR [r15+0x28]
  42b61b:	lea    rdx,[rax+0x1]
  42b61f:	mov    QWORD PTR [r15+0x28],rdx
  42b623:	mov    BYTE PTR [rax],0x2c
  42b626:	mov    ebx,DWORD PTR [r12]
  42b62a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42b62e:	movsxd rdx,r8d
  42b631:	mov    rdi,r15
  42b634:	mov    rsi,rcx
  42b637:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42b63c:	add    DWORD PTR [r15+0x38],0x1
  42b641:	mov    rax,QWORD PTR [r15+0x28]
  42b645:	lea    rcx,[rax+0x1]
  42b649:	mov    QWORD PTR [r15+0x28],rcx
  42b64d:	mov    BYTE PTR [rax],0x5b
  42b650:	test   ebp,ebp
  42b652:	je     42b934 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42b658:	add    r12,rbx
  42b65b:	cmp    BYTE PTR [r15+0x31],0x0
  42b660:	mov    r14,QWORD PTR [r15+0x28]
  42b664:	je     42b704 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
  42b66a:	lea    rax,[r14+0x1]
  42b66e:	mov    QWORD PTR [r15+0x28],rax
  42b672:	mov    BYTE PTR [r14],0xa
  42b676:	movsxd rax,DWORD PTR [r15+0x38]
  42b67a:	movzx  r14d,BYTE PTR [r15+0x31]
  42b67f:	imul   r14,rax
  42b683:	mov    rbx,QWORD PTR [r15+0x20]
  42b687:	mov    rdi,QWORD PTR [r15+0x28]
  42b68b:	lea    rax,[rdi+r14*1]
  42b68f:	cmp    rax,rbx
  42b692:	jbe    42b6ed <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42b694:	cmp    rdi,rbx
  42b697:	jb     42b6aa <flatcc_json_printer_uint8_vector_field@@Base+0xda>
  42b699:	xor    esi,esi
  42b69b:	mov    rdi,r15
  42b69e:	call   QWORD PTR [r15+0x48]
  42b6a2:	mov    rbx,QWORD PTR [r15+0x20]
  42b6a6:	mov    rdi,QWORD PTR [r15+0x28]
  42b6aa:	sub    rbx,rdi
  42b6ad:	cmp    rbx,r14
  42b6b0:	jae    42b6ed <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42b6b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b6bc:	nop    DWORD PTR [rax+0x0]
  42b6c0:	mov    esi,0x20
  42b6c5:	mov    rdx,rbx
  42b6c8:	call   406080 <memset@plt>
  42b6cd:	add    QWORD PTR [r15+0x28],rbx
  42b6d1:	sub    r14,rbx
  42b6d4:	xor    esi,esi
  42b6d6:	mov    rdi,r15
  42b6d9:	call   QWORD PTR [r15+0x48]
  42b6dd:	mov    rbx,QWORD PTR [r15+0x20]
  42b6e1:	mov    rdi,QWORD PTR [r15+0x28]
  42b6e5:	sub    rbx,rdi
  42b6e8:	cmp    r14,rbx
  42b6eb:	ja     42b6c0 <flatcc_json_printer_uint8_vector_field@@Base+0xf0>
  42b6ed:	mov    esi,0x20
  42b6f2:	mov    rdx,r14
  42b6f5:	call   406080 <memset@plt>
  42b6fa:	add    r14,QWORD PTR [r15+0x28]
  42b6fe:	mov    QWORD PTR [r15+0x28],r14
  42b702:	jmp    42b717 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42b704:	cmp    r14,QWORD PTR [r15+0x20]
  42b708:	jb     42b717 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42b70a:	xor    esi,esi
  42b70c:	mov    rdi,r15
  42b70f:	call   QWORD PTR [r15+0x48]
  42b713:	mov    r14,QWORD PTR [r15+0x28]
  42b717:	mov    dl,BYTE PTR [r12+0x4]
  42b71c:	cmp    dl,0x64
  42b71f:	jb     42b75a <flatcc_json_printer_uint8_vector_field@@Base+0x18a>
  42b721:	mov    BYTE PTR [r14+0x3],0x0
  42b726:	movzx  eax,dl
  42b729:	lea    ecx,[rax+rax*4]
  42b72c:	lea    ecx,[rax+rcx*8]
  42b72f:	shr    ecx,0xc
  42b732:	mov    bl,0x64
  42b734:	mov    eax,ecx
  42b736:	mul    bl
  42b738:	sub    dl,al
  42b73a:	movzx  eax,dl
  42b73d:	lea    rdx,[rip+0xec3c]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42b744:	movzx  eax,WORD PTR [rdx+rax*2]
  42b748:	mov    WORD PTR [r14+0x1],ax
  42b74d:	or     cl,0x30
  42b750:	mov    BYTE PTR [r14],cl
  42b753:	mov    eax,0x3
  42b758:	jmp    42b79f <flatcc_json_printer_uint8_vector_field@@Base+0x1cf>
  42b75a:	cmp    dl,0xa
  42b75d:	jb     42b78f <flatcc_json_printer_uint8_vector_field@@Base+0x1bf>
  42b75f:	mov    BYTE PTR [r14+0x2],0x0
  42b764:	movzx  eax,dl
  42b767:	lea    ecx,[rax+rax*4]
  42b76a:	lea    eax,[rax+rcx*8]
  42b76d:	shr    eax,0xc
  42b770:	mov    cl,0x64
  42b772:	mul    cl
  42b774:	sub    dl,al
  42b776:	movzx  eax,dl
  42b779:	lea    rcx,[rip+0xec00]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42b780:	movzx  eax,WORD PTR [rcx+rax*2]
  42b784:	mov    WORD PTR [r14],ax
  42b788:	mov    eax,0x2
  42b78d:	jmp    42b79f <flatcc_json_printer_uint8_vector_field@@Base+0x1cf>
  42b78f:	mov    BYTE PTR [r14+0x1],0x0
  42b794:	add    dl,0x30
  42b797:	mov    BYTE PTR [r14],dl
  42b79a:	mov    eax,0x1
  42b79f:	add    QWORD PTR [r15+0x28],rax
  42b7a3:	add    ebp,0xffffffff
  42b7a6:	je     42b934 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42b7ac:	add    r12,0x5
  42b7b0:	mov    rax,QWORD PTR [r15+0x28]
  42b7b4:	lea    r13,[rip+0xebc5]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42b7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b7c0:	lea    rcx,[rax+0x1]
  42b7c4:	mov    QWORD PTR [r15+0x28],rcx
  42b7c8:	mov    BYTE PTR [rax],0x2c
  42b7cb:	cmp    BYTE PTR [r15+0x31],0x0
  42b7d0:	mov    r14,QWORD PTR [r15+0x28]
  42b7d4:	je     42b880 <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
  42b7da:	lea    rax,[r14+0x1]
  42b7de:	mov    QWORD PTR [r15+0x28],rax
  42b7e2:	mov    BYTE PTR [r14],0xa
  42b7e6:	movsxd rax,DWORD PTR [r15+0x38]
  42b7ea:	movzx  r14d,BYTE PTR [r15+0x31]
  42b7ef:	imul   r14,rax
  42b7f3:	mov    rbx,QWORD PTR [r15+0x20]
  42b7f7:	mov    rdi,QWORD PTR [r15+0x28]
  42b7fb:	lea    rax,[rdi+r14*1]
  42b7ff:	cmp    rax,rbx
  42b802:	jbe    42b85d <flatcc_json_printer_uint8_vector_field@@Base+0x28d>
  42b804:	cmp    rdi,rbx
  42b807:	jb     42b81a <flatcc_json_printer_uint8_vector_field@@Base+0x24a>
  42b809:	xor    esi,esi
  42b80b:	mov    rdi,r15
  42b80e:	call   QWORD PTR [r15+0x48]
  42b812:	mov    rbx,QWORD PTR [r15+0x20]
  42b816:	mov    rdi,QWORD PTR [r15+0x28]
  42b81a:	sub    rbx,rdi
  42b81d:	cmp    rbx,r14
  42b820:	jae    42b85d <flatcc_json_printer_uint8_vector_field@@Base+0x28d>
  42b822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b82c:	nop    DWORD PTR [rax+0x0]
  42b830:	mov    esi,0x20
  42b835:	mov    rdx,rbx
  42b838:	call   406080 <memset@plt>
  42b83d:	add    QWORD PTR [r15+0x28],rbx
  42b841:	sub    r14,rbx
  42b844:	xor    esi,esi
  42b846:	mov    rdi,r15
  42b849:	call   QWORD PTR [r15+0x48]
  42b84d:	mov    rbx,QWORD PTR [r15+0x20]
  42b851:	mov    rdi,QWORD PTR [r15+0x28]
  42b855:	sub    rbx,rdi
  42b858:	cmp    r14,rbx
  42b85b:	ja     42b830 <flatcc_json_printer_uint8_vector_field@@Base+0x260>
  42b85d:	mov    esi,0x20
  42b862:	mov    rdx,r14
  42b865:	call   406080 <memset@plt>
  42b86a:	add    r14,QWORD PTR [r15+0x28]
  42b86e:	mov    QWORD PTR [r15+0x28],r14
  42b872:	jmp    42b8a0 <flatcc_json_printer_uint8_vector_field@@Base+0x2d0>
  42b874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b87e:	xchg   ax,ax
  42b880:	cmp    r14,QWORD PTR [r15+0x20]
  42b884:	jb     42b8a0 <flatcc_json_printer_uint8_vector_field@@Base+0x2d0>
  42b886:	xor    esi,esi
  42b888:	mov    rdi,r15
  42b88b:	call   QWORD PTR [r15+0x48]
  42b88f:	mov    r14,QWORD PTR [r15+0x28]
  42b893:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b89d:	nop    DWORD PTR [rax]
  42b8a0:	add    ebp,0xffffffff
  42b8a3:	mov    dl,BYTE PTR [r12]
  42b8a7:	cmp    dl,0x64
  42b8aa:	jb     42b8e0 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
  42b8ac:	mov    BYTE PTR [r14+0x3],0x0
  42b8b1:	movzx  eax,dl
  42b8b4:	lea    ecx,[rax+rax*4]
  42b8b7:	lea    ecx,[rax+rcx*8]
  42b8ba:	shr    ecx,0xc
  42b8bd:	mov    eax,ecx
  42b8bf:	mov    bl,0x64
  42b8c1:	mul    bl
  42b8c3:	sub    dl,al
  42b8c5:	movzx  eax,dl
  42b8c8:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42b8ce:	mov    WORD PTR [r14+0x1],ax
  42b8d3:	or     cl,0x30
  42b8d6:	mov    BYTE PTR [r14],cl
  42b8d9:	mov    eax,0x3
  42b8de:	jmp    42b920 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
  42b8e0:	cmp    dl,0xa
  42b8e3:	jb     42b910 <flatcc_json_printer_uint8_vector_field@@Base+0x340>
  42b8e5:	mov    BYTE PTR [r14+0x2],0x0
  42b8ea:	movzx  eax,dl
  42b8ed:	lea    ecx,[rax+rax*4]
  42b8f0:	lea    eax,[rax+rcx*8]
  42b8f3:	shr    eax,0xc
  42b8f6:	mov    cl,0x64
  42b8f8:	mul    cl
  42b8fa:	sub    dl,al
  42b8fc:	movzx  eax,dl
  42b8ff:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42b905:	mov    WORD PTR [r14],ax
  42b909:	mov    eax,0x2
  42b90e:	jmp    42b920 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
  42b910:	mov    BYTE PTR [r14+0x1],0x0
  42b915:	add    dl,0x30
  42b918:	mov    BYTE PTR [r14],dl
  42b91b:	mov    eax,0x1
  42b920:	add    rax,QWORD PTR [r15+0x28]
  42b924:	mov    QWORD PTR [r15+0x28],rax
  42b928:	add    r12,0x1
  42b92c:	test   ebp,ebp
  42b92e:	jne    42b7c0 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
  42b934:	cmp    BYTE PTR [r15+0x31],0x0
  42b939:	mov    r14,QWORD PTR [r15+0x28]
  42b93d:	je     42b9e2 <flatcc_json_printer_uint8_vector_field@@Base+0x412>
  42b943:	lea    rax,[r14+0x1]
  42b947:	mov    QWORD PTR [r15+0x28],rax
  42b94b:	mov    BYTE PTR [r14],0xa
  42b94f:	movsxd rax,DWORD PTR [r15+0x38]
  42b953:	add    rax,0xffffffffffffffff
  42b957:	mov    DWORD PTR [r15+0x38],eax
  42b95b:	movzx  r14d,BYTE PTR [r15+0x31]
  42b960:	imul   r14,rax
  42b964:	mov    rbx,QWORD PTR [r15+0x20]
  42b968:	mov    rdi,QWORD PTR [r15+0x28]
  42b96c:	lea    rax,[rdi+r14*1]
  42b970:	cmp    rax,rbx
  42b973:	jbe    42b9cd <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42b975:	cmp    rdi,rbx
  42b978:	jb     42b98b <flatcc_json_printer_uint8_vector_field@@Base+0x3bb>
  42b97a:	xor    esi,esi
  42b97c:	mov    rdi,r15
  42b97f:	call   QWORD PTR [r15+0x48]
  42b983:	mov    rbx,QWORD PTR [r15+0x20]
  42b987:	mov    rdi,QWORD PTR [r15+0x28]
  42b98b:	sub    rbx,rdi
  42b98e:	cmp    rbx,r14
  42b991:	jae    42b9cd <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42b993:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b99d:	nop    DWORD PTR [rax]
  42b9a0:	mov    esi,0x20
  42b9a5:	mov    rdx,rbx
  42b9a8:	call   406080 <memset@plt>
  42b9ad:	add    QWORD PTR [r15+0x28],rbx
  42b9b1:	sub    r14,rbx
  42b9b4:	xor    esi,esi
  42b9b6:	mov    rdi,r15
  42b9b9:	call   QWORD PTR [r15+0x48]
  42b9bd:	mov    rbx,QWORD PTR [r15+0x20]
  42b9c1:	mov    rdi,QWORD PTR [r15+0x28]
  42b9c5:	sub    rbx,rdi
  42b9c8:	cmp    r14,rbx
  42b9cb:	ja     42b9a0 <flatcc_json_printer_uint8_vector_field@@Base+0x3d0>
  42b9cd:	mov    esi,0x20
  42b9d2:	mov    rdx,r14
  42b9d5:	call   406080 <memset@plt>
  42b9da:	add    r14,QWORD PTR [r15+0x28]
  42b9de:	mov    QWORD PTR [r15+0x28],r14
  42b9e2:	lea    rax,[r14+0x1]
  42b9e6:	mov    QWORD PTR [r15+0x28],rax
  42b9ea:	mov    BYTE PTR [r14],0x5d
  42b9ee:	add    rsp,0x8
  42b9f2:	pop    rbx
  42b9f3:	pop    r12
  42b9f5:	pop    r13
  42b9f7:	pop    r14
  42b9f9:	pop    r15
  42b9fb:	pop    rbp
  42b9fc:	ret    
  42b9fd:	nop    DWORD PTR [rax]

000000000042ba00 <flatcc_json_printer_uint16_vector_field@@Base>:
  42ba00:	push   rbp
  42ba01:	push   r15
  42ba03:	push   r14
  42ba05:	push   r13
  42ba07:	push   r12
  42ba09:	push   rbx
  42ba0a:	push   rax
  42ba0b:	lea    eax,[rdx+rdx*1]
  42ba0e:	add    eax,0x4
  42ba11:	cmp    eax,DWORD PTR [rsi+0x10]
  42ba14:	jge    42bf6e <flatcc_json_printer_uint16_vector_field@@Base+0x56e>
  42ba1a:	mov    rdx,QWORD PTR [rsi+0x8]
  42ba1e:	mov    eax,eax
  42ba20:	movzx  r12d,WORD PTR [rdx+rax*1]
  42ba25:	test   r12,r12
  42ba28:	je     42bf6e <flatcc_json_printer_uint16_vector_field@@Base+0x56e>
  42ba2e:	add    r12,QWORD PTR [rsi]
  42ba31:	je     42bf6e <flatcc_json_printer_uint16_vector_field@@Base+0x56e>
  42ba37:	mov    r15,rdi
  42ba3a:	mov    eax,DWORD PTR [rsi+0x18]
  42ba3d:	lea    edx,[rax+0x1]
  42ba40:	mov    DWORD PTR [rsi+0x18],edx
  42ba43:	test   eax,eax
  42ba45:	je     42ba56 <flatcc_json_printer_uint16_vector_field@@Base+0x56>
  42ba47:	mov    rax,QWORD PTR [r15+0x28]
  42ba4b:	lea    rdx,[rax+0x1]
  42ba4f:	mov    QWORD PTR [r15+0x28],rdx
  42ba53:	mov    BYTE PTR [rax],0x2c
  42ba56:	mov    ebx,DWORD PTR [r12]
  42ba5a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42ba5e:	movsxd rdx,r8d
  42ba61:	mov    rdi,r15
  42ba64:	mov    rsi,rcx
  42ba67:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42ba6c:	add    DWORD PTR [r15+0x38],0x1
  42ba71:	mov    rax,QWORD PTR [r15+0x28]
  42ba75:	lea    rcx,[rax+0x1]
  42ba79:	mov    QWORD PTR [r15+0x28],rcx
  42ba7d:	mov    BYTE PTR [rax],0x5b
  42ba80:	test   ebp,ebp
  42ba82:	je     42beb6 <flatcc_json_printer_uint16_vector_field@@Base+0x4b6>
  42ba88:	add    r12,rbx
  42ba8b:	cmp    BYTE PTR [r15+0x31],0x0
  42ba90:	mov    r14,QWORD PTR [r15+0x28]
  42ba94:	je     42bb34 <flatcc_json_printer_uint16_vector_field@@Base+0x134>
  42ba9a:	lea    rax,[r14+0x1]
  42ba9e:	mov    QWORD PTR [r15+0x28],rax
  42baa2:	mov    BYTE PTR [r14],0xa
  42baa6:	movsxd rax,DWORD PTR [r15+0x38]
  42baaa:	movzx  r14d,BYTE PTR [r15+0x31]
  42baaf:	imul   r14,rax
  42bab3:	mov    rbx,QWORD PTR [r15+0x20]
  42bab7:	mov    rdi,QWORD PTR [r15+0x28]
  42babb:	lea    rax,[rdi+r14*1]
  42babf:	cmp    rax,rbx
  42bac2:	jbe    42bb1d <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42bac4:	cmp    rdi,rbx
  42bac7:	jb     42bada <flatcc_json_printer_uint16_vector_field@@Base+0xda>
  42bac9:	xor    esi,esi
  42bacb:	mov    rdi,r15
  42bace:	call   QWORD PTR [r15+0x48]
  42bad2:	mov    rbx,QWORD PTR [r15+0x20]
  42bad6:	mov    rdi,QWORD PTR [r15+0x28]
  42bada:	sub    rbx,rdi
  42badd:	cmp    rbx,r14
  42bae0:	jae    42bb1d <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42bae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42baec:	nop    DWORD PTR [rax+0x0]
  42baf0:	mov    esi,0x20
  42baf5:	mov    rdx,rbx
  42baf8:	call   406080 <memset@plt>
  42bafd:	add    QWORD PTR [r15+0x28],rbx
  42bb01:	sub    r14,rbx
  42bb04:	xor    esi,esi
  42bb06:	mov    rdi,r15
  42bb09:	call   QWORD PTR [r15+0x48]
  42bb0d:	mov    rbx,QWORD PTR [r15+0x20]
  42bb11:	mov    rdi,QWORD PTR [r15+0x28]
  42bb15:	sub    rbx,rdi
  42bb18:	cmp    r14,rbx
  42bb1b:	ja     42baf0 <flatcc_json_printer_uint16_vector_field@@Base+0xf0>
  42bb1d:	mov    esi,0x20
  42bb22:	mov    rdx,r14
  42bb25:	call   406080 <memset@plt>
  42bb2a:	add    r14,QWORD PTR [r15+0x28]
  42bb2e:	mov    QWORD PTR [r15+0x28],r14
  42bb32:	jmp    42bb47 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42bb34:	cmp    r14,QWORD PTR [r15+0x20]
  42bb38:	jb     42bb47 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42bb3a:	xor    esi,esi
  42bb3c:	mov    rdi,r15
  42bb3f:	call   QWORD PTR [r15+0x48]
  42bb43:	mov    r14,QWORD PTR [r15+0x28]
  42bb47:	movzx  ecx,WORD PTR [r12+0x4]
  42bb4d:	movzx  edx,cx
  42bb50:	cmp    ecx,0x3e8
  42bb56:	jb     42bb68 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
  42bb58:	xor    eax,eax
  42bb5a:	cmp    edx,0x270f
  42bb60:	seta   al
  42bb63:	or     eax,0x4
  42bb66:	jmp    42bb8e <flatcc_json_printer_uint16_vector_field@@Base+0x18e>
  42bb68:	cmp    edx,0x64
  42bb6b:	jb     42bb83 <flatcc_json_printer_uint16_vector_field@@Base+0x183>
  42bb6d:	mov    BYTE PTR [r14+0x3],0x0
  42bb72:	add    r14,0x3
  42bb76:	mov    eax,0x3
  42bb7b:	mov    rdx,r14
  42bb7e:	jmp    42bc37 <flatcc_json_printer_uint16_vector_field@@Base+0x237>
  42bb83:	xor    eax,eax
  42bb85:	cmp    edx,0x9
  42bb88:	seta   al
  42bb8b:	add    eax,0x1
  42bb8e:	mov    esi,eax
  42bb90:	lea    rdx,[r14+rsi*1]
  42bb94:	mov    BYTE PTR [r14+rsi*1],0x0
  42bb99:	test   al,0x1
  42bb9b:	jne    42bbff <flatcc_json_printer_uint16_vector_field@@Base+0x1ff>
  42bb9d:	cmp    al,0x2
  42bb9f:	je     42bbd5 <flatcc_json_printer_uint16_vector_field@@Base+0x1d5>
  42bba1:	cmp    al,0x4
  42bba3:	jne    42bc69 <flatcc_json_printer_uint16_vector_field@@Base+0x269>
  42bba9:	movzx  esi,cx
  42bbac:	mov    ecx,esi
  42bbae:	shr    ecx,0x2
  42bbb1:	imul   ecx,ecx,0x147b
  42bbb7:	shr    ecx,0x11
  42bbba:	imul   edi,ecx,0x64
  42bbbd:	sub    esi,edi
  42bbbf:	movzx  esi,si
  42bbc2:	lea    rdi,[rip+0xe7b7]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42bbc9:	movzx  esi,WORD PTR [rdi+rsi*2]
  42bbcd:	mov    WORD PTR [rdx-0x2],si
  42bbd1:	lea    rdx,[rdx-0x2]
  42bbd5:	movzx  ecx,cx
  42bbd8:	mov    esi,ecx
  42bbda:	shr    esi,0x2
  42bbdd:	imul   esi,esi,0x147b
  42bbe3:	shr    esi,0x11
  42bbe6:	imul   esi,esi,0x64
  42bbe9:	sub    ecx,esi
  42bbeb:	movzx  ecx,cx
  42bbee:	lea    rsi,[rip+0xe78b]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42bbf5:	movzx  ecx,WORD PTR [rsi+rcx*2]
  42bbf9:	mov    WORD PTR [rdx-0x2],cx
  42bbfd:	jmp    42bc69 <flatcc_json_printer_uint16_vector_field@@Base+0x269>
  42bbff:	cmp    al,0x1
  42bc01:	je     42bc63 <flatcc_json_printer_uint16_vector_field@@Base+0x263>
  42bc03:	cmp    al,0x3
  42bc05:	je     42bc37 <flatcc_json_printer_uint16_vector_field@@Base+0x237>
  42bc07:	cmp    al,0x5
  42bc09:	jne    42bc69 <flatcc_json_printer_uint16_vector_field@@Base+0x269>
  42bc0b:	movzx  esi,cx
  42bc0e:	mov    ecx,esi
  42bc10:	shr    ecx,0x2
  42bc13:	imul   ecx,ecx,0x147b
  42bc19:	shr    ecx,0x11
  42bc1c:	imul   edi,ecx,0x64
  42bc1f:	sub    esi,edi
  42bc21:	movzx  esi,si
  42bc24:	lea    rdi,[rip+0xe755]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42bc2b:	movzx  esi,WORD PTR [rdi+rsi*2]
  42bc2f:	mov    WORD PTR [rdx-0x2],si
  42bc33:	lea    rdx,[rdx-0x2]
  42bc37:	movzx  esi,cx
  42bc3a:	mov    ecx,esi
  42bc3c:	shr    ecx,0x2
  42bc3f:	imul   ecx,ecx,0x147b
  42bc45:	shr    ecx,0x11
  42bc48:	imul   edi,ecx,0x64
  42bc4b:	sub    esi,edi
  42bc4d:	movzx  esi,si
  42bc50:	lea    rdi,[rip+0xe729]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42bc57:	movzx  esi,WORD PTR [rdi+rsi*2]
  42bc5b:	mov    WORD PTR [rdx-0x2],si
  42bc5f:	lea    rdx,[rdx-0x2]
  42bc63:	add    cl,0x30
  42bc66:	mov    BYTE PTR [rdx-0x1],cl
  42bc69:	mov    eax,eax
  42bc6b:	add    QWORD PTR [r15+0x28],rax
  42bc6f:	add    ebp,0xffffffff
  42bc72:	je     42beb6 <flatcc_json_printer_uint16_vector_field@@Base+0x4b6>
  42bc78:	add    r12,0x6
  42bc7c:	mov    rax,QWORD PTR [r15+0x28]
  42bc80:	lea    r13,[rip+0xe6f9]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42bc87:	nop    WORD PTR [rax+rax*1+0x0]
  42bc90:	lea    rcx,[rax+0x1]
  42bc94:	mov    QWORD PTR [r15+0x28],rcx
  42bc98:	mov    BYTE PTR [rax],0x2c
  42bc9b:	cmp    BYTE PTR [r15+0x31],0x0
  42bca0:	mov    r14,QWORD PTR [r15+0x28]
  42bca4:	je     42bd50 <flatcc_json_printer_uint16_vector_field@@Base+0x350>
  42bcaa:	lea    rax,[r14+0x1]
  42bcae:	mov    QWORD PTR [r15+0x28],rax
  42bcb2:	mov    BYTE PTR [r14],0xa
  42bcb6:	movsxd rax,DWORD PTR [r15+0x38]
  42bcba:	movzx  r14d,BYTE PTR [r15+0x31]
  42bcbf:	imul   r14,rax
  42bcc3:	mov    rbx,QWORD PTR [r15+0x20]
  42bcc7:	mov    rdi,QWORD PTR [r15+0x28]
  42bccb:	lea    rax,[rdi+r14*1]
  42bccf:	cmp    rax,rbx
  42bcd2:	jbe    42bd2d <flatcc_json_printer_uint16_vector_field@@Base+0x32d>
  42bcd4:	cmp    rdi,rbx
  42bcd7:	jb     42bcea <flatcc_json_printer_uint16_vector_field@@Base+0x2ea>
  42bcd9:	xor    esi,esi
  42bcdb:	mov    rdi,r15
  42bcde:	call   QWORD PTR [r15+0x48]
  42bce2:	mov    rbx,QWORD PTR [r15+0x20]
  42bce6:	mov    rdi,QWORD PTR [r15+0x28]
  42bcea:	sub    rbx,rdi
  42bced:	cmp    rbx,r14
  42bcf0:	jae    42bd2d <flatcc_json_printer_uint16_vector_field@@Base+0x32d>
  42bcf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcfc:	nop    DWORD PTR [rax+0x0]
  42bd00:	mov    esi,0x20
  42bd05:	mov    rdx,rbx
  42bd08:	call   406080 <memset@plt>
  42bd0d:	add    QWORD PTR [r15+0x28],rbx
  42bd11:	sub    r14,rbx
  42bd14:	xor    esi,esi
  42bd16:	mov    rdi,r15
  42bd19:	call   QWORD PTR [r15+0x48]
  42bd1d:	mov    rbx,QWORD PTR [r15+0x20]
  42bd21:	mov    rdi,QWORD PTR [r15+0x28]
  42bd25:	sub    rbx,rdi
  42bd28:	cmp    r14,rbx
  42bd2b:	ja     42bd00 <flatcc_json_printer_uint16_vector_field@@Base+0x300>
  42bd2d:	mov    esi,0x20
  42bd32:	mov    rdx,r14
  42bd35:	call   406080 <memset@plt>
  42bd3a:	add    r14,QWORD PTR [r15+0x28]
  42bd3e:	mov    QWORD PTR [r15+0x28],r14
  42bd42:	jmp    42bd70 <flatcc_json_printer_uint16_vector_field@@Base+0x370>
  42bd44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd4e:	xchg   ax,ax
  42bd50:	cmp    r14,QWORD PTR [r15+0x20]
  42bd54:	jb     42bd70 <flatcc_json_printer_uint16_vector_field@@Base+0x370>
  42bd56:	xor    esi,esi
  42bd58:	mov    rdi,r15
  42bd5b:	call   QWORD PTR [r15+0x48]
  42bd5f:	mov    r14,QWORD PTR [r15+0x28]
  42bd63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd6d:	nop    DWORD PTR [rax]
  42bd70:	add    ebp,0xffffffff
  42bd73:	movzx  ecx,WORD PTR [r12]
  42bd78:	movzx  edx,cx
  42bd7b:	cmp    ecx,0x3e8
  42bd81:	jb     42bda0 <flatcc_json_printer_uint16_vector_field@@Base+0x3a0>
  42bd83:	xor    eax,eax
  42bd85:	cmp    edx,0x270f
  42bd8b:	seta   al
  42bd8e:	or     eax,0x4
  42bd91:	jmp    42bdcb <flatcc_json_printer_uint16_vector_field@@Base+0x3cb>
  42bd93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd9d:	nop    DWORD PTR [rax]
  42bda0:	cmp    edx,0x64
  42bda3:	jb     42bdc0 <flatcc_json_printer_uint16_vector_field@@Base+0x3c0>
  42bda5:	mov    BYTE PTR [r14+0x3],0x0
  42bdaa:	add    r14,0x3
  42bdae:	mov    eax,0x3
  42bdb3:	mov    rdx,r14
  42bdb6:	jmp    42be73 <flatcc_json_printer_uint16_vector_field@@Base+0x473>
  42bdbb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bdc0:	xor    eax,eax
  42bdc2:	cmp    edx,0x9
  42bdc5:	seta   al
  42bdc8:	add    eax,0x1
  42bdcb:	mov    esi,eax
  42bdcd:	lea    rdx,[r14+rsi*1]
  42bdd1:	mov    BYTE PTR [r14+rsi*1],0x0
  42bdd6:	test   al,0x1
  42bdd8:	jne    42be40 <flatcc_json_printer_uint16_vector_field@@Base+0x440>
  42bdda:	cmp    al,0x2
  42bddc:	je     42be0d <flatcc_json_printer_uint16_vector_field@@Base+0x40d>
  42bdde:	cmp    al,0x4
  42bde0:	jne    42bea0 <flatcc_json_printer_uint16_vector_field@@Base+0x4a0>
  42bde6:	movzx  esi,cx
  42bde9:	mov    ecx,esi
  42bdeb:	shr    ecx,0x2
  42bdee:	imul   ecx,ecx,0x147b
  42bdf4:	shr    ecx,0x11
  42bdf7:	imul   edi,ecx,0x64
  42bdfa:	sub    esi,edi
  42bdfc:	movzx  esi,si
  42bdff:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42be05:	mov    WORD PTR [rdx-0x2],si
  42be09:	lea    rdx,[rdx-0x2]
  42be0d:	movzx  ecx,cx
  42be10:	mov    esi,ecx
  42be12:	shr    esi,0x2
  42be15:	imul   esi,esi,0x147b
  42be1b:	shr    esi,0x11
  42be1e:	imul   esi,esi,0x64
  42be21:	sub    ecx,esi
  42be23:	movzx  ecx,cx
  42be26:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42be2c:	mov    WORD PTR [rdx-0x2],cx
  42be30:	jmp    42bea0 <flatcc_json_printer_uint16_vector_field@@Base+0x4a0>
  42be32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be3c:	nop    DWORD PTR [rax+0x0]
  42be40:	cmp    al,0x1
  42be42:	je     42be9a <flatcc_json_printer_uint16_vector_field@@Base+0x49a>
  42be44:	cmp    al,0x3
  42be46:	je     42be73 <flatcc_json_printer_uint16_vector_field@@Base+0x473>
  42be48:	cmp    al,0x5
  42be4a:	jne    42bea0 <flatcc_json_printer_uint16_vector_field@@Base+0x4a0>
  42be4c:	movzx  esi,cx
  42be4f:	mov    ecx,esi
  42be51:	shr    ecx,0x2
  42be54:	imul   ecx,ecx,0x147b
  42be5a:	shr    ecx,0x11
  42be5d:	imul   edi,ecx,0x64
  42be60:	sub    esi,edi
  42be62:	movzx  esi,si
  42be65:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42be6b:	mov    WORD PTR [rdx-0x2],si
  42be6f:	lea    rdx,[rdx-0x2]
  42be73:	movzx  esi,cx
  42be76:	mov    ecx,esi
  42be78:	shr    ecx,0x2
  42be7b:	imul   ecx,ecx,0x147b
  42be81:	shr    ecx,0x11
  42be84:	imul   edi,ecx,0x64
  42be87:	sub    esi,edi
  42be89:	movzx  esi,si
  42be8c:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42be92:	mov    WORD PTR [rdx-0x2],si
  42be96:	lea    rdx,[rdx-0x2]
  42be9a:	add    cl,0x30
  42be9d:	mov    BYTE PTR [rdx-0x1],cl
  42bea0:	mov    eax,eax
  42bea2:	add    rax,QWORD PTR [r15+0x28]
  42bea6:	mov    QWORD PTR [r15+0x28],rax
  42beaa:	add    r12,0x2
  42beae:	test   ebp,ebp
  42beb0:	jne    42bc90 <flatcc_json_printer_uint16_vector_field@@Base+0x290>
  42beb6:	cmp    BYTE PTR [r15+0x31],0x0
  42bebb:	mov    r14,QWORD PTR [r15+0x28]
  42bebf:	je     42bf62 <flatcc_json_printer_uint16_vector_field@@Base+0x562>
  42bec5:	lea    rax,[r14+0x1]
  42bec9:	mov    QWORD PTR [r15+0x28],rax
  42becd:	mov    BYTE PTR [r14],0xa
  42bed1:	movsxd rax,DWORD PTR [r15+0x38]
  42bed5:	add    rax,0xffffffffffffffff
  42bed9:	mov    DWORD PTR [r15+0x38],eax
  42bedd:	movzx  r14d,BYTE PTR [r15+0x31]
  42bee2:	imul   r14,rax
  42bee6:	mov    rbx,QWORD PTR [r15+0x20]
  42beea:	mov    rdi,QWORD PTR [r15+0x28]
  42beee:	lea    rax,[rdi+r14*1]
  42bef2:	cmp    rax,rbx
  42bef5:	jbe    42bf4d <flatcc_json_printer_uint16_vector_field@@Base+0x54d>
  42bef7:	cmp    rdi,rbx
  42befa:	jb     42bf0d <flatcc_json_printer_uint16_vector_field@@Base+0x50d>
  42befc:	xor    esi,esi
  42befe:	mov    rdi,r15
  42bf01:	call   QWORD PTR [r15+0x48]
  42bf05:	mov    rbx,QWORD PTR [r15+0x20]
  42bf09:	mov    rdi,QWORD PTR [r15+0x28]
  42bf0d:	sub    rbx,rdi
  42bf10:	cmp    rbx,r14
  42bf13:	jae    42bf4d <flatcc_json_printer_uint16_vector_field@@Base+0x54d>
  42bf15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf1f:	nop
  42bf20:	mov    esi,0x20
  42bf25:	mov    rdx,rbx
  42bf28:	call   406080 <memset@plt>
  42bf2d:	add    QWORD PTR [r15+0x28],rbx
  42bf31:	sub    r14,rbx
  42bf34:	xor    esi,esi
  42bf36:	mov    rdi,r15
  42bf39:	call   QWORD PTR [r15+0x48]
  42bf3d:	mov    rbx,QWORD PTR [r15+0x20]
  42bf41:	mov    rdi,QWORD PTR [r15+0x28]
  42bf45:	sub    rbx,rdi
  42bf48:	cmp    r14,rbx
  42bf4b:	ja     42bf20 <flatcc_json_printer_uint16_vector_field@@Base+0x520>
  42bf4d:	mov    esi,0x20
  42bf52:	mov    rdx,r14
  42bf55:	call   406080 <memset@plt>
  42bf5a:	add    r14,QWORD PTR [r15+0x28]
  42bf5e:	mov    QWORD PTR [r15+0x28],r14
  42bf62:	lea    rax,[r14+0x1]
  42bf66:	mov    QWORD PTR [r15+0x28],rax
  42bf6a:	mov    BYTE PTR [r14],0x5d
  42bf6e:	add    rsp,0x8
  42bf72:	pop    rbx
  42bf73:	pop    r12
  42bf75:	pop    r13
  42bf77:	pop    r14
  42bf79:	pop    r15
  42bf7b:	pop    rbp
  42bf7c:	ret    
  42bf7d:	nop    DWORD PTR [rax]

000000000042bf80 <flatcc_json_printer_uint32_vector_field@@Base>:
  42bf80:	push   rbp
  42bf81:	push   r15
  42bf83:	push   r14
  42bf85:	push   r12
  42bf87:	push   rbx
  42bf88:	lea    eax,[rdx+rdx*1]
  42bf8b:	add    eax,0x4
  42bf8e:	cmp    eax,DWORD PTR [rsi+0x10]
  42bf91:	jge    42c29e <flatcc_json_printer_uint32_vector_field@@Base+0x31e>
  42bf97:	mov    rdx,QWORD PTR [rsi+0x8]
  42bf9b:	mov    eax,eax
  42bf9d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42bfa2:	test   r12,r12
  42bfa5:	je     42c29e <flatcc_json_printer_uint32_vector_field@@Base+0x31e>
  42bfab:	add    r12,QWORD PTR [rsi]
  42bfae:	je     42c29e <flatcc_json_printer_uint32_vector_field@@Base+0x31e>
  42bfb4:	mov    r15,rdi
  42bfb7:	mov    eax,DWORD PTR [rsi+0x18]
  42bfba:	lea    edx,[rax+0x1]
  42bfbd:	mov    DWORD PTR [rsi+0x18],edx
  42bfc0:	test   eax,eax
  42bfc2:	je     42bfd3 <flatcc_json_printer_uint32_vector_field@@Base+0x53>
  42bfc4:	mov    rax,QWORD PTR [r15+0x28]
  42bfc8:	lea    rdx,[rax+0x1]
  42bfcc:	mov    QWORD PTR [r15+0x28],rdx
  42bfd0:	mov    BYTE PTR [rax],0x2c
  42bfd3:	mov    ebx,DWORD PTR [r12]
  42bfd7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42bfdb:	movsxd rdx,r8d
  42bfde:	mov    rdi,r15
  42bfe1:	mov    rsi,rcx
  42bfe4:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42bfe9:	add    DWORD PTR [r15+0x38],0x1
  42bfee:	mov    rax,QWORD PTR [r15+0x28]
  42bff2:	lea    rcx,[rax+0x1]
  42bff6:	mov    QWORD PTR [r15+0x28],rcx
  42bffa:	mov    BYTE PTR [rax],0x5b
  42bffd:	test   ebp,ebp
  42bfff:	je     42c1e2 <flatcc_json_printer_uint32_vector_field@@Base+0x262>
  42c005:	add    r12,rbx
  42c008:	cmp    BYTE PTR [r15+0x31],0x0
  42c00d:	mov    r14,QWORD PTR [r15+0x28]
  42c011:	je     42c0a4 <flatcc_json_printer_uint32_vector_field@@Base+0x124>
  42c017:	lea    rax,[r14+0x1]
  42c01b:	mov    QWORD PTR [r15+0x28],rax
  42c01f:	mov    BYTE PTR [r14],0xa
  42c023:	movsxd rax,DWORD PTR [r15+0x38]
  42c027:	movzx  r14d,BYTE PTR [r15+0x31]
  42c02c:	imul   r14,rax
  42c030:	mov    rbx,QWORD PTR [r15+0x20]
  42c034:	mov    rdi,QWORD PTR [r15+0x28]
  42c038:	lea    rax,[rdi+r14*1]
  42c03c:	cmp    rax,rbx
  42c03f:	jbe    42c08d <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42c041:	cmp    rdi,rbx
  42c044:	jb     42c057 <flatcc_json_printer_uint32_vector_field@@Base+0xd7>
  42c046:	xor    esi,esi
  42c048:	mov    rdi,r15
  42c04b:	call   QWORD PTR [r15+0x48]
  42c04f:	mov    rbx,QWORD PTR [r15+0x20]
  42c053:	mov    rdi,QWORD PTR [r15+0x28]
  42c057:	sub    rbx,rdi
  42c05a:	cmp    rbx,r14
  42c05d:	jae    42c08d <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42c05f:	nop
  42c060:	mov    esi,0x20
  42c065:	mov    rdx,rbx
  42c068:	call   406080 <memset@plt>
  42c06d:	add    QWORD PTR [r15+0x28],rbx
  42c071:	sub    r14,rbx
  42c074:	xor    esi,esi
  42c076:	mov    rdi,r15
  42c079:	call   QWORD PTR [r15+0x48]
  42c07d:	mov    rbx,QWORD PTR [r15+0x20]
  42c081:	mov    rdi,QWORD PTR [r15+0x28]
  42c085:	sub    rbx,rdi
  42c088:	cmp    r14,rbx
  42c08b:	ja     42c060 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
  42c08d:	mov    esi,0x20
  42c092:	mov    rdx,r14
  42c095:	call   406080 <memset@plt>
  42c09a:	add    r14,QWORD PTR [r15+0x28]
  42c09e:	mov    QWORD PTR [r15+0x28],r14
  42c0a2:	jmp    42c0b7 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42c0a4:	cmp    r14,QWORD PTR [r15+0x20]
  42c0a8:	jb     42c0b7 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42c0aa:	xor    esi,esi
  42c0ac:	mov    rdi,r15
  42c0af:	call   QWORD PTR [r15+0x48]
  42c0b3:	mov    r14,QWORD PTR [r15+0x28]
  42c0b7:	mov    edi,DWORD PTR [r12+0x4]
  42c0bc:	mov    rsi,r14
  42c0bf:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42c0c4:	cdqe   
  42c0c6:	add    QWORD PTR [r15+0x28],rax
  42c0ca:	add    ebp,0xffffffff
  42c0cd:	je     42c1e2 <flatcc_json_printer_uint32_vector_field@@Base+0x262>
  42c0d3:	add    r12,0x8
  42c0d7:	mov    rax,QWORD PTR [r15+0x28]
  42c0db:	nop    DWORD PTR [rax+rax*1+0x0]
  42c0e0:	add    ebp,0xffffffff
  42c0e3:	lea    rcx,[rax+0x1]
  42c0e7:	mov    QWORD PTR [r15+0x28],rcx
  42c0eb:	mov    BYTE PTR [rax],0x2c
  42c0ee:	cmp    BYTE PTR [r15+0x31],0x0
  42c0f3:	mov    r14,QWORD PTR [r15+0x28]
  42c0f7:	je     42c1a0 <flatcc_json_printer_uint32_vector_field@@Base+0x220>
  42c0fd:	lea    rax,[r14+0x1]
  42c101:	mov    QWORD PTR [r15+0x28],rax
  42c105:	mov    BYTE PTR [r14],0xa
  42c109:	movsxd rax,DWORD PTR [r15+0x38]
  42c10d:	movzx  r14d,BYTE PTR [r15+0x31]
  42c112:	imul   r14,rax
  42c116:	mov    rbx,QWORD PTR [r15+0x20]
  42c11a:	mov    rdi,QWORD PTR [r15+0x28]
  42c11e:	lea    rax,[rdi+r14*1]
  42c122:	cmp    rax,rbx
  42c125:	jbe    42c17d <flatcc_json_printer_uint32_vector_field@@Base+0x1fd>
  42c127:	cmp    rdi,rbx
  42c12a:	jb     42c13d <flatcc_json_printer_uint32_vector_field@@Base+0x1bd>
  42c12c:	xor    esi,esi
  42c12e:	mov    rdi,r15
  42c131:	call   QWORD PTR [r15+0x48]
  42c135:	mov    rbx,QWORD PTR [r15+0x20]
  42c139:	mov    rdi,QWORD PTR [r15+0x28]
  42c13d:	sub    rbx,rdi
  42c140:	cmp    rbx,r14
  42c143:	jae    42c17d <flatcc_json_printer_uint32_vector_field@@Base+0x1fd>
  42c145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c14f:	nop
  42c150:	mov    esi,0x20
  42c155:	mov    rdx,rbx
  42c158:	call   406080 <memset@plt>
  42c15d:	add    QWORD PTR [r15+0x28],rbx
  42c161:	sub    r14,rbx
  42c164:	xor    esi,esi
  42c166:	mov    rdi,r15
  42c169:	call   QWORD PTR [r15+0x48]
  42c16d:	mov    rbx,QWORD PTR [r15+0x20]
  42c171:	mov    rdi,QWORD PTR [r15+0x28]
  42c175:	sub    rbx,rdi
  42c178:	cmp    r14,rbx
  42c17b:	ja     42c150 <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
  42c17d:	mov    esi,0x20
  42c182:	mov    rdx,r14
  42c185:	call   406080 <memset@plt>
  42c18a:	add    r14,QWORD PTR [r15+0x28]
  42c18e:	mov    QWORD PTR [r15+0x28],r14
  42c192:	jmp    42c1c0 <flatcc_json_printer_uint32_vector_field@@Base+0x240>
  42c194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c19e:	xchg   ax,ax
  42c1a0:	cmp    r14,QWORD PTR [r15+0x20]
  42c1a4:	jb     42c1c0 <flatcc_json_printer_uint32_vector_field@@Base+0x240>
  42c1a6:	xor    esi,esi
  42c1a8:	mov    rdi,r15
  42c1ab:	call   QWORD PTR [r15+0x48]
  42c1af:	mov    r14,QWORD PTR [r15+0x28]
  42c1b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c1bd:	nop    DWORD PTR [rax]
  42c1c0:	mov    edi,DWORD PTR [r12]
  42c1c4:	mov    rsi,r14
  42c1c7:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42c1cc:	cdqe   
  42c1ce:	add    rax,QWORD PTR [r15+0x28]
  42c1d2:	mov    QWORD PTR [r15+0x28],rax
  42c1d6:	add    r12,0x4
  42c1da:	test   ebp,ebp
  42c1dc:	jne    42c0e0 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42c1e2:	cmp    BYTE PTR [r15+0x31],0x0
  42c1e7:	mov    r14,QWORD PTR [r15+0x28]
  42c1eb:	je     42c292 <flatcc_json_printer_uint32_vector_field@@Base+0x312>
  42c1f1:	lea    rax,[r14+0x1]
  42c1f5:	mov    QWORD PTR [r15+0x28],rax
  42c1f9:	mov    BYTE PTR [r14],0xa
  42c1fd:	movsxd rax,DWORD PTR [r15+0x38]
  42c201:	add    rax,0xffffffffffffffff
  42c205:	mov    DWORD PTR [r15+0x38],eax
  42c209:	movzx  r14d,BYTE PTR [r15+0x31]
  42c20e:	imul   r14,rax
  42c212:	mov    rbx,QWORD PTR [r15+0x20]
  42c216:	mov    rdi,QWORD PTR [r15+0x28]
  42c21a:	lea    rax,[rdi+r14*1]
  42c21e:	cmp    rax,rbx
  42c221:	jbe    42c27d <flatcc_json_printer_uint32_vector_field@@Base+0x2fd>
  42c223:	cmp    rdi,rbx
  42c226:	jb     42c239 <flatcc_json_printer_uint32_vector_field@@Base+0x2b9>
  42c228:	xor    esi,esi
  42c22a:	mov    rdi,r15
  42c22d:	call   QWORD PTR [r15+0x48]
  42c231:	mov    rbx,QWORD PTR [r15+0x20]
  42c235:	mov    rdi,QWORD PTR [r15+0x28]
  42c239:	sub    rbx,rdi
  42c23c:	cmp    rbx,r14
  42c23f:	jae    42c27d <flatcc_json_printer_uint32_vector_field@@Base+0x2fd>
  42c241:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c24b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c250:	mov    esi,0x20
  42c255:	mov    rdx,rbx
  42c258:	call   406080 <memset@plt>
  42c25d:	add    QWORD PTR [r15+0x28],rbx
  42c261:	sub    r14,rbx
  42c264:	xor    esi,esi
  42c266:	mov    rdi,r15
  42c269:	call   QWORD PTR [r15+0x48]
  42c26d:	mov    rbx,QWORD PTR [r15+0x20]
  42c271:	mov    rdi,QWORD PTR [r15+0x28]
  42c275:	sub    rbx,rdi
  42c278:	cmp    r14,rbx
  42c27b:	ja     42c250 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
  42c27d:	mov    esi,0x20
  42c282:	mov    rdx,r14
  42c285:	call   406080 <memset@plt>
  42c28a:	add    r14,QWORD PTR [r15+0x28]
  42c28e:	mov    QWORD PTR [r15+0x28],r14
  42c292:	lea    rax,[r14+0x1]
  42c296:	mov    QWORD PTR [r15+0x28],rax
  42c29a:	mov    BYTE PTR [r14],0x5d
  42c29e:	pop    rbx
  42c29f:	pop    r12
  42c2a1:	pop    r14
  42c2a3:	pop    r15
  42c2a5:	pop    rbp
  42c2a6:	ret    
  42c2a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c2b0 <flatcc_json_printer_uint64_vector_field@@Base>:
  42c2b0:	push   rbp
  42c2b1:	push   r15
  42c2b3:	push   r14
  42c2b5:	push   r12
  42c2b7:	push   rbx
  42c2b8:	lea    eax,[rdx+rdx*1]
  42c2bb:	add    eax,0x4
  42c2be:	cmp    eax,DWORD PTR [rsi+0x10]
  42c2c1:	jge    42c5ce <flatcc_json_printer_uint64_vector_field@@Base+0x31e>
  42c2c7:	mov    rdx,QWORD PTR [rsi+0x8]
  42c2cb:	mov    eax,eax
  42c2cd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c2d2:	test   r12,r12
  42c2d5:	je     42c5ce <flatcc_json_printer_uint64_vector_field@@Base+0x31e>
  42c2db:	add    r12,QWORD PTR [rsi]
  42c2de:	je     42c5ce <flatcc_json_printer_uint64_vector_field@@Base+0x31e>
  42c2e4:	mov    r15,rdi
  42c2e7:	mov    eax,DWORD PTR [rsi+0x18]
  42c2ea:	lea    edx,[rax+0x1]
  42c2ed:	mov    DWORD PTR [rsi+0x18],edx
  42c2f0:	test   eax,eax
  42c2f2:	je     42c303 <flatcc_json_printer_uint64_vector_field@@Base+0x53>
  42c2f4:	mov    rax,QWORD PTR [r15+0x28]
  42c2f8:	lea    rdx,[rax+0x1]
  42c2fc:	mov    QWORD PTR [r15+0x28],rdx
  42c300:	mov    BYTE PTR [rax],0x2c
  42c303:	mov    ebx,DWORD PTR [r12]
  42c307:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c30b:	movsxd rdx,r8d
  42c30e:	mov    rdi,r15
  42c311:	mov    rsi,rcx
  42c314:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42c319:	add    DWORD PTR [r15+0x38],0x1
  42c31e:	mov    rax,QWORD PTR [r15+0x28]
  42c322:	lea    rcx,[rax+0x1]
  42c326:	mov    QWORD PTR [r15+0x28],rcx
  42c32a:	mov    BYTE PTR [rax],0x5b
  42c32d:	test   ebp,ebp
  42c32f:	je     42c512 <flatcc_json_printer_uint64_vector_field@@Base+0x262>
  42c335:	add    r12,rbx
  42c338:	cmp    BYTE PTR [r15+0x31],0x0
  42c33d:	mov    r14,QWORD PTR [r15+0x28]
  42c341:	je     42c3d4 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
  42c347:	lea    rax,[r14+0x1]
  42c34b:	mov    QWORD PTR [r15+0x28],rax
  42c34f:	mov    BYTE PTR [r14],0xa
  42c353:	movsxd rax,DWORD PTR [r15+0x38]
  42c357:	movzx  r14d,BYTE PTR [r15+0x31]
  42c35c:	imul   r14,rax
  42c360:	mov    rbx,QWORD PTR [r15+0x20]
  42c364:	mov    rdi,QWORD PTR [r15+0x28]
  42c368:	lea    rax,[rdi+r14*1]
  42c36c:	cmp    rax,rbx
  42c36f:	jbe    42c3bd <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42c371:	cmp    rdi,rbx
  42c374:	jb     42c387 <flatcc_json_printer_uint64_vector_field@@Base+0xd7>
  42c376:	xor    esi,esi
  42c378:	mov    rdi,r15
  42c37b:	call   QWORD PTR [r15+0x48]
  42c37f:	mov    rbx,QWORD PTR [r15+0x20]
  42c383:	mov    rdi,QWORD PTR [r15+0x28]
  42c387:	sub    rbx,rdi
  42c38a:	cmp    rbx,r14
  42c38d:	jae    42c3bd <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42c38f:	nop
  42c390:	mov    esi,0x20
  42c395:	mov    rdx,rbx
  42c398:	call   406080 <memset@plt>
  42c39d:	add    QWORD PTR [r15+0x28],rbx
  42c3a1:	sub    r14,rbx
  42c3a4:	xor    esi,esi
  42c3a6:	mov    rdi,r15
  42c3a9:	call   QWORD PTR [r15+0x48]
  42c3ad:	mov    rbx,QWORD PTR [r15+0x20]
  42c3b1:	mov    rdi,QWORD PTR [r15+0x28]
  42c3b5:	sub    rbx,rdi
  42c3b8:	cmp    r14,rbx
  42c3bb:	ja     42c390 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
  42c3bd:	mov    esi,0x20
  42c3c2:	mov    rdx,r14
  42c3c5:	call   406080 <memset@plt>
  42c3ca:	add    r14,QWORD PTR [r15+0x28]
  42c3ce:	mov    QWORD PTR [r15+0x28],r14
  42c3d2:	jmp    42c3e7 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42c3d4:	cmp    r14,QWORD PTR [r15+0x20]
  42c3d8:	jb     42c3e7 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42c3da:	xor    esi,esi
  42c3dc:	mov    rdi,r15
  42c3df:	call   QWORD PTR [r15+0x48]
  42c3e3:	mov    r14,QWORD PTR [r15+0x28]
  42c3e7:	mov    rdi,QWORD PTR [r12+0x4]
  42c3ec:	mov    rsi,r14
  42c3ef:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42c3f4:	cdqe   
  42c3f6:	add    QWORD PTR [r15+0x28],rax
  42c3fa:	add    ebp,0xffffffff
  42c3fd:	je     42c512 <flatcc_json_printer_uint64_vector_field@@Base+0x262>
  42c403:	add    r12,0xc
  42c407:	mov    rax,QWORD PTR [r15+0x28]
  42c40b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c410:	add    ebp,0xffffffff
  42c413:	lea    rcx,[rax+0x1]
  42c417:	mov    QWORD PTR [r15+0x28],rcx
  42c41b:	mov    BYTE PTR [rax],0x2c
  42c41e:	cmp    BYTE PTR [r15+0x31],0x0
  42c423:	mov    r14,QWORD PTR [r15+0x28]
  42c427:	je     42c4d0 <flatcc_json_printer_uint64_vector_field@@Base+0x220>
  42c42d:	lea    rax,[r14+0x1]
  42c431:	mov    QWORD PTR [r15+0x28],rax
  42c435:	mov    BYTE PTR [r14],0xa
  42c439:	movsxd rax,DWORD PTR [r15+0x38]
  42c43d:	movzx  r14d,BYTE PTR [r15+0x31]
  42c442:	imul   r14,rax
  42c446:	mov    rbx,QWORD PTR [r15+0x20]
  42c44a:	mov    rdi,QWORD PTR [r15+0x28]
  42c44e:	lea    rax,[rdi+r14*1]
  42c452:	cmp    rax,rbx
  42c455:	jbe    42c4ad <flatcc_json_printer_uint64_vector_field@@Base+0x1fd>
  42c457:	cmp    rdi,rbx
  42c45a:	jb     42c46d <flatcc_json_printer_uint64_vector_field@@Base+0x1bd>
  42c45c:	xor    esi,esi
  42c45e:	mov    rdi,r15
  42c461:	call   QWORD PTR [r15+0x48]
  42c465:	mov    rbx,QWORD PTR [r15+0x20]
  42c469:	mov    rdi,QWORD PTR [r15+0x28]
  42c46d:	sub    rbx,rdi
  42c470:	cmp    rbx,r14
  42c473:	jae    42c4ad <flatcc_json_printer_uint64_vector_field@@Base+0x1fd>
  42c475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c47f:	nop
  42c480:	mov    esi,0x20
  42c485:	mov    rdx,rbx
  42c488:	call   406080 <memset@plt>
  42c48d:	add    QWORD PTR [r15+0x28],rbx
  42c491:	sub    r14,rbx
  42c494:	xor    esi,esi
  42c496:	mov    rdi,r15
  42c499:	call   QWORD PTR [r15+0x48]
  42c49d:	mov    rbx,QWORD PTR [r15+0x20]
  42c4a1:	mov    rdi,QWORD PTR [r15+0x28]
  42c4a5:	sub    rbx,rdi
  42c4a8:	cmp    r14,rbx
  42c4ab:	ja     42c480 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
  42c4ad:	mov    esi,0x20
  42c4b2:	mov    rdx,r14
  42c4b5:	call   406080 <memset@plt>
  42c4ba:	add    r14,QWORD PTR [r15+0x28]
  42c4be:	mov    QWORD PTR [r15+0x28],r14
  42c4c2:	jmp    42c4f0 <flatcc_json_printer_uint64_vector_field@@Base+0x240>
  42c4c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4ce:	xchg   ax,ax
  42c4d0:	cmp    r14,QWORD PTR [r15+0x20]
  42c4d4:	jb     42c4f0 <flatcc_json_printer_uint64_vector_field@@Base+0x240>
  42c4d6:	xor    esi,esi
  42c4d8:	mov    rdi,r15
  42c4db:	call   QWORD PTR [r15+0x48]
  42c4df:	mov    r14,QWORD PTR [r15+0x28]
  42c4e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4ed:	nop    DWORD PTR [rax]
  42c4f0:	mov    rdi,QWORD PTR [r12]
  42c4f4:	mov    rsi,r14
  42c4f7:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42c4fc:	cdqe   
  42c4fe:	add    rax,QWORD PTR [r15+0x28]
  42c502:	mov    QWORD PTR [r15+0x28],rax
  42c506:	add    r12,0x8
  42c50a:	test   ebp,ebp
  42c50c:	jne    42c410 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42c512:	cmp    BYTE PTR [r15+0x31],0x0
  42c517:	mov    r14,QWORD PTR [r15+0x28]
  42c51b:	je     42c5c2 <flatcc_json_printer_uint64_vector_field@@Base+0x312>
  42c521:	lea    rax,[r14+0x1]
  42c525:	mov    QWORD PTR [r15+0x28],rax
  42c529:	mov    BYTE PTR [r14],0xa
  42c52d:	movsxd rax,DWORD PTR [r15+0x38]
  42c531:	add    rax,0xffffffffffffffff
  42c535:	mov    DWORD PTR [r15+0x38],eax
  42c539:	movzx  r14d,BYTE PTR [r15+0x31]
  42c53e:	imul   r14,rax
  42c542:	mov    rbx,QWORD PTR [r15+0x20]
  42c546:	mov    rdi,QWORD PTR [r15+0x28]
  42c54a:	lea    rax,[rdi+r14*1]
  42c54e:	cmp    rax,rbx
  42c551:	jbe    42c5ad <flatcc_json_printer_uint64_vector_field@@Base+0x2fd>
  42c553:	cmp    rdi,rbx
  42c556:	jb     42c569 <flatcc_json_printer_uint64_vector_field@@Base+0x2b9>
  42c558:	xor    esi,esi
  42c55a:	mov    rdi,r15
  42c55d:	call   QWORD PTR [r15+0x48]
  42c561:	mov    rbx,QWORD PTR [r15+0x20]
  42c565:	mov    rdi,QWORD PTR [r15+0x28]
  42c569:	sub    rbx,rdi
  42c56c:	cmp    rbx,r14
  42c56f:	jae    42c5ad <flatcc_json_printer_uint64_vector_field@@Base+0x2fd>
  42c571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c57b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c580:	mov    esi,0x20
  42c585:	mov    rdx,rbx
  42c588:	call   406080 <memset@plt>
  42c58d:	add    QWORD PTR [r15+0x28],rbx
  42c591:	sub    r14,rbx
  42c594:	xor    esi,esi
  42c596:	mov    rdi,r15
  42c599:	call   QWORD PTR [r15+0x48]
  42c59d:	mov    rbx,QWORD PTR [r15+0x20]
  42c5a1:	mov    rdi,QWORD PTR [r15+0x28]
  42c5a5:	sub    rbx,rdi
  42c5a8:	cmp    r14,rbx
  42c5ab:	ja     42c580 <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
  42c5ad:	mov    esi,0x20
  42c5b2:	mov    rdx,r14
  42c5b5:	call   406080 <memset@plt>
  42c5ba:	add    r14,QWORD PTR [r15+0x28]
  42c5be:	mov    QWORD PTR [r15+0x28],r14
  42c5c2:	lea    rax,[r14+0x1]
  42c5c6:	mov    QWORD PTR [r15+0x28],rax
  42c5ca:	mov    BYTE PTR [r14],0x5d
  42c5ce:	pop    rbx
  42c5cf:	pop    r12
  42c5d1:	pop    r14
  42c5d3:	pop    r15
  42c5d5:	pop    rbp
  42c5d6:	ret    
  42c5d7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c5e0 <flatcc_json_printer_int8_vector_field@@Base>:
  42c5e0:	push   rbp
  42c5e1:	push   r15
  42c5e3:	push   r14
  42c5e5:	push   r13
  42c5e7:	push   r12
  42c5e9:	push   rbx
  42c5ea:	push   rax
  42c5eb:	lea    eax,[rdx+rdx*1]
  42c5ee:	add    eax,0x4
  42c5f1:	cmp    eax,DWORD PTR [rsi+0x10]
  42c5f4:	jge    42ca3e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42c5fa:	mov    rdx,QWORD PTR [rsi+0x8]
  42c5fe:	mov    eax,eax
  42c600:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c605:	test   r12,r12
  42c608:	je     42ca3e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42c60e:	add    r12,QWORD PTR [rsi]
  42c611:	je     42ca3e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42c617:	mov    r15,rdi
  42c61a:	mov    eax,DWORD PTR [rsi+0x18]
  42c61d:	lea    edx,[rax+0x1]
  42c620:	mov    DWORD PTR [rsi+0x18],edx
  42c623:	test   eax,eax
  42c625:	je     42c636 <flatcc_json_printer_int8_vector_field@@Base+0x56>
  42c627:	mov    rax,QWORD PTR [r15+0x28]
  42c62b:	lea    rdx,[rax+0x1]
  42c62f:	mov    QWORD PTR [r15+0x28],rdx
  42c633:	mov    BYTE PTR [rax],0x2c
  42c636:	mov    ebx,DWORD PTR [r12]
  42c63a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c63e:	movsxd rdx,r8d
  42c641:	mov    rdi,r15
  42c644:	mov    rsi,rcx
  42c647:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42c64c:	add    DWORD PTR [r15+0x38],0x1
  42c651:	mov    rax,QWORD PTR [r15+0x28]
  42c655:	lea    rcx,[rax+0x1]
  42c659:	mov    QWORD PTR [r15+0x28],rcx
  42c65d:	mov    BYTE PTR [rax],0x5b
  42c660:	test   ebp,ebp
  42c662:	je     42c987 <flatcc_json_printer_int8_vector_field@@Base+0x3a7>
  42c668:	add    r12,rbx
  42c66b:	cmp    BYTE PTR [r15+0x31],0x0
  42c670:	mov    r14,QWORD PTR [r15+0x28]
  42c674:	je     42c714 <flatcc_json_printer_int8_vector_field@@Base+0x134>
  42c67a:	lea    rax,[r14+0x1]
  42c67e:	mov    QWORD PTR [r15+0x28],rax
  42c682:	mov    BYTE PTR [r14],0xa
  42c686:	movsxd rax,DWORD PTR [r15+0x38]
  42c68a:	movzx  r14d,BYTE PTR [r15+0x31]
  42c68f:	imul   r14,rax
  42c693:	mov    rbx,QWORD PTR [r15+0x20]
  42c697:	mov    rdi,QWORD PTR [r15+0x28]
  42c69b:	lea    rax,[rdi+r14*1]
  42c69f:	cmp    rax,rbx
  42c6a2:	jbe    42c6fd <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42c6a4:	cmp    rdi,rbx
  42c6a7:	jb     42c6ba <flatcc_json_printer_int8_vector_field@@Base+0xda>
  42c6a9:	xor    esi,esi
  42c6ab:	mov    rdi,r15
  42c6ae:	call   QWORD PTR [r15+0x48]
  42c6b2:	mov    rbx,QWORD PTR [r15+0x20]
  42c6b6:	mov    rdi,QWORD PTR [r15+0x28]
  42c6ba:	sub    rbx,rdi
  42c6bd:	cmp    rbx,r14
  42c6c0:	jae    42c6fd <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42c6c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c6cc:	nop    DWORD PTR [rax+0x0]
  42c6d0:	mov    esi,0x20
  42c6d5:	mov    rdx,rbx
  42c6d8:	call   406080 <memset@plt>
  42c6dd:	add    QWORD PTR [r15+0x28],rbx
  42c6e1:	sub    r14,rbx
  42c6e4:	xor    esi,esi
  42c6e6:	mov    rdi,r15
  42c6e9:	call   QWORD PTR [r15+0x48]
  42c6ed:	mov    rbx,QWORD PTR [r15+0x20]
  42c6f1:	mov    rdi,QWORD PTR [r15+0x28]
  42c6f5:	sub    rbx,rdi
  42c6f8:	cmp    r14,rbx
  42c6fb:	ja     42c6d0 <flatcc_json_printer_int8_vector_field@@Base+0xf0>
  42c6fd:	mov    esi,0x20
  42c702:	mov    rdx,r14
  42c705:	call   406080 <memset@plt>
  42c70a:	add    r14,QWORD PTR [r15+0x28]
  42c70e:	mov    QWORD PTR [r15+0x28],r14
  42c712:	jmp    42c727 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42c714:	cmp    r14,QWORD PTR [r15+0x20]
  42c718:	jb     42c727 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42c71a:	xor    esi,esi
  42c71c:	mov    rdi,r15
  42c71f:	call   QWORD PTR [r15+0x48]
  42c723:	mov    r14,QWORD PTR [r15+0x28]
  42c727:	movzx  edx,BYTE PTR [r12+0x4]
  42c72d:	test   dl,dl
  42c72f:	js     42c735 <flatcc_json_printer_int8_vector_field@@Base+0x155>
  42c731:	mov    ebx,edx
  42c733:	jmp    42c741 <flatcc_json_printer_int8_vector_field@@Base+0x161>
  42c735:	mov    BYTE PTR [r14],0x2d
  42c739:	add    r14,0x1
  42c73d:	mov    ebx,edx
  42c73f:	neg    bl
  42c741:	shr    rdx,0x7
  42c745:	cmp    bl,0x64
  42c748:	jb     42c785 <flatcc_json_printer_int8_vector_field@@Base+0x1a5>
  42c74a:	mov    BYTE PTR [r14+0x3],0x0
  42c74f:	movzx  eax,bl
  42c752:	lea    ecx,[rax+rax*4]
  42c755:	lea    ecx,[rax+rcx*8]
  42c758:	shr    ecx,0xc
  42c75b:	mov    sil,0x64
  42c75e:	mov    eax,ecx
  42c760:	mul    sil
  42c763:	sub    bl,al
  42c765:	movzx  eax,bl
  42c768:	lea    rsi,[rip+0xdc11]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42c76f:	movzx  eax,WORD PTR [rsi+rax*2]
  42c773:	mov    WORD PTR [r14+0x1],ax
  42c778:	or     cl,0x30
  42c77b:	mov    BYTE PTR [r14],cl
  42c77e:	mov    eax,0x3
  42c783:	jmp    42c7ca <flatcc_json_printer_int8_vector_field@@Base+0x1ea>
  42c785:	cmp    bl,0xa
  42c788:	jb     42c7ba <flatcc_json_printer_int8_vector_field@@Base+0x1da>
  42c78a:	mov    BYTE PTR [r14+0x2],0x0
  42c78f:	movzx  eax,bl
  42c792:	lea    ecx,[rax+rax*4]
  42c795:	lea    eax,[rax+rcx*8]
  42c798:	shr    eax,0xc
  42c79b:	mov    cl,0x64
  42c79d:	mul    cl
  42c79f:	sub    bl,al
  42c7a1:	movzx  eax,bl
  42c7a4:	lea    rcx,[rip+0xdbd5]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42c7ab:	movzx  eax,WORD PTR [rcx+rax*2]
  42c7af:	mov    WORD PTR [r14],ax
  42c7b3:	mov    eax,0x2
  42c7b8:	jmp    42c7ca <flatcc_json_printer_int8_vector_field@@Base+0x1ea>
  42c7ba:	mov    BYTE PTR [r14+0x1],0x0
  42c7bf:	add    bl,0x30
  42c7c2:	mov    BYTE PTR [r14],bl
  42c7c5:	mov    eax,0x1
  42c7ca:	add    rax,rdx
  42c7cd:	add    QWORD PTR [r15+0x28],rax
  42c7d1:	add    ebp,0xffffffff
  42c7d4:	je     42c987 <flatcc_json_printer_int8_vector_field@@Base+0x3a7>
  42c7da:	add    r12,0x5
  42c7de:	mov    rax,QWORD PTR [r15+0x28]
  42c7e2:	lea    r13,[rip+0xdb97]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42c7e9:	nop    DWORD PTR [rax+0x0]
  42c7f0:	lea    rcx,[rax+0x1]
  42c7f4:	mov    QWORD PTR [r15+0x28],rcx
  42c7f8:	mov    BYTE PTR [rax],0x2c
  42c7fb:	cmp    BYTE PTR [r15+0x31],0x0
  42c800:	mov    r14,QWORD PTR [r15+0x28]
  42c804:	je     42c8b0 <flatcc_json_printer_int8_vector_field@@Base+0x2d0>
  42c80a:	lea    rax,[r14+0x1]
  42c80e:	mov    QWORD PTR [r15+0x28],rax
  42c812:	mov    BYTE PTR [r14],0xa
  42c816:	movsxd rax,DWORD PTR [r15+0x38]
  42c81a:	movzx  r14d,BYTE PTR [r15+0x31]
  42c81f:	imul   r14,rax
  42c823:	mov    rbx,QWORD PTR [r15+0x20]
  42c827:	mov    rdi,QWORD PTR [r15+0x28]
  42c82b:	lea    rax,[rdi+r14*1]
  42c82f:	cmp    rax,rbx
  42c832:	jbe    42c88d <flatcc_json_printer_int8_vector_field@@Base+0x2ad>
  42c834:	cmp    rdi,rbx
  42c837:	jb     42c84a <flatcc_json_printer_int8_vector_field@@Base+0x26a>
  42c839:	xor    esi,esi
  42c83b:	mov    rdi,r15
  42c83e:	call   QWORD PTR [r15+0x48]
  42c842:	mov    rbx,QWORD PTR [r15+0x20]
  42c846:	mov    rdi,QWORD PTR [r15+0x28]
  42c84a:	sub    rbx,rdi
  42c84d:	cmp    rbx,r14
  42c850:	jae    42c88d <flatcc_json_printer_int8_vector_field@@Base+0x2ad>
  42c852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c85c:	nop    DWORD PTR [rax+0x0]
  42c860:	mov    esi,0x20
  42c865:	mov    rdx,rbx
  42c868:	call   406080 <memset@plt>
  42c86d:	add    QWORD PTR [r15+0x28],rbx
  42c871:	sub    r14,rbx
  42c874:	xor    esi,esi
  42c876:	mov    rdi,r15
  42c879:	call   QWORD PTR [r15+0x48]
  42c87d:	mov    rbx,QWORD PTR [r15+0x20]
  42c881:	mov    rdi,QWORD PTR [r15+0x28]
  42c885:	sub    rbx,rdi
  42c888:	cmp    r14,rbx
  42c88b:	ja     42c860 <flatcc_json_printer_int8_vector_field@@Base+0x280>
  42c88d:	mov    esi,0x20
  42c892:	mov    rdx,r14
  42c895:	call   406080 <memset@plt>
  42c89a:	add    r14,QWORD PTR [r15+0x28]
  42c89e:	mov    QWORD PTR [r15+0x28],r14
  42c8a2:	jmp    42c8d0 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
  42c8a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c8ae:	xchg   ax,ax
  42c8b0:	cmp    r14,QWORD PTR [r15+0x20]
  42c8b4:	jb     42c8d0 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
  42c8b6:	xor    esi,esi
  42c8b8:	mov    rdi,r15
  42c8bb:	call   QWORD PTR [r15+0x48]
  42c8bf:	mov    r14,QWORD PTR [r15+0x28]
  42c8c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c8cd:	nop    DWORD PTR [rax]
  42c8d0:	movzx  esi,BYTE PTR [r12]
  42c8d5:	test   sil,sil
  42c8d8:	js     42c8e0 <flatcc_json_printer_int8_vector_field@@Base+0x300>
  42c8da:	mov    ebx,esi
  42c8dc:	jmp    42c8ec <flatcc_json_printer_int8_vector_field@@Base+0x30c>
  42c8de:	xchg   ax,ax
  42c8e0:	mov    BYTE PTR [r14],0x2d
  42c8e4:	add    r14,0x1
  42c8e8:	mov    ebx,esi
  42c8ea:	neg    bl
  42c8ec:	add    ebp,0xffffffff
  42c8ef:	shr    rsi,0x7
  42c8f3:	cmp    bl,0x64
  42c8f6:	jb     42c930 <flatcc_json_printer_int8_vector_field@@Base+0x350>
  42c8f8:	mov    BYTE PTR [r14+0x3],0x0
  42c8fd:	movzx  eax,bl
  42c900:	lea    ecx,[rax+rax*4]
  42c903:	lea    ecx,[rax+rcx*8]
  42c906:	shr    ecx,0xc
  42c909:	mov    eax,ecx
  42c90b:	mov    dl,0x64
  42c90d:	mul    dl
  42c90f:	sub    bl,al
  42c911:	movzx  eax,bl
  42c914:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42c91a:	mov    WORD PTR [r14+0x1],ax
  42c91f:	or     cl,0x30
  42c922:	mov    BYTE PTR [r14],cl
  42c925:	mov    eax,0x3
  42c92a:	jmp    42c970 <flatcc_json_printer_int8_vector_field@@Base+0x390>
  42c92c:	nop    DWORD PTR [rax+0x0]
  42c930:	cmp    bl,0xa
  42c933:	jb     42c960 <flatcc_json_printer_int8_vector_field@@Base+0x380>
  42c935:	mov    BYTE PTR [r14+0x2],0x0
  42c93a:	movzx  eax,bl
  42c93d:	lea    ecx,[rax+rax*4]
  42c940:	lea    eax,[rax+rcx*8]
  42c943:	shr    eax,0xc
  42c946:	mov    cl,0x64
  42c948:	mul    cl
  42c94a:	sub    bl,al
  42c94c:	movzx  eax,bl
  42c94f:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42c955:	mov    WORD PTR [r14],ax
  42c959:	mov    eax,0x2
  42c95e:	jmp    42c970 <flatcc_json_printer_int8_vector_field@@Base+0x390>
  42c960:	mov    BYTE PTR [r14+0x1],0x0
  42c965:	add    bl,0x30
  42c968:	mov    BYTE PTR [r14],bl
  42c96b:	mov    eax,0x1
  42c970:	add    rax,rsi
  42c973:	add    rax,QWORD PTR [r15+0x28]
  42c977:	mov    QWORD PTR [r15+0x28],rax
  42c97b:	add    r12,0x1
  42c97f:	test   ebp,ebp
  42c981:	jne    42c7f0 <flatcc_json_printer_int8_vector_field@@Base+0x210>
  42c987:	cmp    BYTE PTR [r15+0x31],0x0
  42c98c:	mov    r14,QWORD PTR [r15+0x28]
  42c990:	je     42ca32 <flatcc_json_printer_int8_vector_field@@Base+0x452>
  42c996:	lea    rax,[r14+0x1]
  42c99a:	mov    QWORD PTR [r15+0x28],rax
  42c99e:	mov    BYTE PTR [r14],0xa
  42c9a2:	movsxd rax,DWORD PTR [r15+0x38]
  42c9a6:	add    rax,0xffffffffffffffff
  42c9aa:	mov    DWORD PTR [r15+0x38],eax
  42c9ae:	movzx  r14d,BYTE PTR [r15+0x31]
  42c9b3:	imul   r14,rax
  42c9b7:	mov    rbx,QWORD PTR [r15+0x20]
  42c9bb:	mov    rdi,QWORD PTR [r15+0x28]
  42c9bf:	lea    rax,[rdi+r14*1]
  42c9c3:	cmp    rax,rbx
  42c9c6:	jbe    42ca1d <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42c9c8:	cmp    rdi,rbx
  42c9cb:	jb     42c9de <flatcc_json_printer_int8_vector_field@@Base+0x3fe>
  42c9cd:	xor    esi,esi
  42c9cf:	mov    rdi,r15
  42c9d2:	call   QWORD PTR [r15+0x48]
  42c9d6:	mov    rbx,QWORD PTR [r15+0x20]
  42c9da:	mov    rdi,QWORD PTR [r15+0x28]
  42c9de:	sub    rbx,rdi
  42c9e1:	cmp    rbx,r14
  42c9e4:	jae    42ca1d <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42c9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c9f0:	mov    esi,0x20
  42c9f5:	mov    rdx,rbx
  42c9f8:	call   406080 <memset@plt>
  42c9fd:	add    QWORD PTR [r15+0x28],rbx
  42ca01:	sub    r14,rbx
  42ca04:	xor    esi,esi
  42ca06:	mov    rdi,r15
  42ca09:	call   QWORD PTR [r15+0x48]
  42ca0d:	mov    rbx,QWORD PTR [r15+0x20]
  42ca11:	mov    rdi,QWORD PTR [r15+0x28]
  42ca15:	sub    rbx,rdi
  42ca18:	cmp    r14,rbx
  42ca1b:	ja     42c9f0 <flatcc_json_printer_int8_vector_field@@Base+0x410>
  42ca1d:	mov    esi,0x20
  42ca22:	mov    rdx,r14
  42ca25:	call   406080 <memset@plt>
  42ca2a:	add    r14,QWORD PTR [r15+0x28]
  42ca2e:	mov    QWORD PTR [r15+0x28],r14
  42ca32:	lea    rax,[r14+0x1]
  42ca36:	mov    QWORD PTR [r15+0x28],rax
  42ca3a:	mov    BYTE PTR [r14],0x5d
  42ca3e:	add    rsp,0x8
  42ca42:	pop    rbx
  42ca43:	pop    r12
  42ca45:	pop    r13
  42ca47:	pop    r14
  42ca49:	pop    r15
  42ca4b:	pop    rbp
  42ca4c:	ret    
  42ca4d:	nop    DWORD PTR [rax]

000000000042ca50 <flatcc_json_printer_int16_vector_field@@Base>:
  42ca50:	push   rbp
  42ca51:	push   r15
  42ca53:	push   r14
  42ca55:	push   r13
  42ca57:	push   r12
  42ca59:	push   rbx
  42ca5a:	push   rax
  42ca5b:	lea    eax,[rdx+rdx*1]
  42ca5e:	add    eax,0x4
  42ca61:	cmp    eax,DWORD PTR [rsi+0x10]
  42ca64:	jge    42cfde <flatcc_json_printer_int16_vector_field@@Base+0x58e>
  42ca6a:	mov    rdx,QWORD PTR [rsi+0x8]
  42ca6e:	mov    eax,eax
  42ca70:	movzx  r12d,WORD PTR [rdx+rax*1]
  42ca75:	test   r12,r12
  42ca78:	je     42cfde <flatcc_json_printer_int16_vector_field@@Base+0x58e>
  42ca7e:	add    r12,QWORD PTR [rsi]
  42ca81:	je     42cfde <flatcc_json_printer_int16_vector_field@@Base+0x58e>
  42ca87:	mov    r15,rdi
  42ca8a:	mov    eax,DWORD PTR [rsi+0x18]
  42ca8d:	lea    edx,[rax+0x1]
  42ca90:	mov    DWORD PTR [rsi+0x18],edx
  42ca93:	test   eax,eax
  42ca95:	je     42caa6 <flatcc_json_printer_int16_vector_field@@Base+0x56>
  42ca97:	mov    rax,QWORD PTR [r15+0x28]
  42ca9b:	lea    rdx,[rax+0x1]
  42ca9f:	mov    QWORD PTR [r15+0x28],rdx
  42caa3:	mov    BYTE PTR [rax],0x2c
  42caa6:	mov    ebx,DWORD PTR [r12]
  42caaa:	mov    ebp,DWORD PTR [r12+rbx*1]
  42caae:	movsxd rdx,r8d
  42cab1:	mov    rdi,r15
  42cab4:	mov    rsi,rcx
  42cab7:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42cabc:	add    DWORD PTR [r15+0x38],0x1
  42cac1:	mov    rax,QWORD PTR [r15+0x28]
  42cac5:	lea    rcx,[rax+0x1]
  42cac9:	mov    QWORD PTR [r15+0x28],rcx
  42cacd:	mov    BYTE PTR [rax],0x5b
  42cad0:	test   ebp,ebp
  42cad2:	je     42cf26 <flatcc_json_printer_int16_vector_field@@Base+0x4d6>
  42cad8:	add    r12,rbx
  42cadb:	cmp    BYTE PTR [r15+0x31],0x0
  42cae0:	mov    r14,QWORD PTR [r15+0x28]
  42cae4:	je     42cb84 <flatcc_json_printer_int16_vector_field@@Base+0x134>
  42caea:	lea    rax,[r14+0x1]
  42caee:	mov    QWORD PTR [r15+0x28],rax
  42caf2:	mov    BYTE PTR [r14],0xa
  42caf6:	movsxd rax,DWORD PTR [r15+0x38]
  42cafa:	movzx  r14d,BYTE PTR [r15+0x31]
  42caff:	imul   r14,rax
  42cb03:	mov    rbx,QWORD PTR [r15+0x20]
  42cb07:	mov    rdi,QWORD PTR [r15+0x28]
  42cb0b:	lea    rax,[rdi+r14*1]
  42cb0f:	cmp    rax,rbx
  42cb12:	jbe    42cb6d <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42cb14:	cmp    rdi,rbx
  42cb17:	jb     42cb2a <flatcc_json_printer_int16_vector_field@@Base+0xda>
  42cb19:	xor    esi,esi
  42cb1b:	mov    rdi,r15
  42cb1e:	call   QWORD PTR [r15+0x48]
  42cb22:	mov    rbx,QWORD PTR [r15+0x20]
  42cb26:	mov    rdi,QWORD PTR [r15+0x28]
  42cb2a:	sub    rbx,rdi
  42cb2d:	cmp    rbx,r14
  42cb30:	jae    42cb6d <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42cb32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb3c:	nop    DWORD PTR [rax+0x0]
  42cb40:	mov    esi,0x20
  42cb45:	mov    rdx,rbx
  42cb48:	call   406080 <memset@plt>
  42cb4d:	add    QWORD PTR [r15+0x28],rbx
  42cb51:	sub    r14,rbx
  42cb54:	xor    esi,esi
  42cb56:	mov    rdi,r15
  42cb59:	call   QWORD PTR [r15+0x48]
  42cb5d:	mov    rbx,QWORD PTR [r15+0x20]
  42cb61:	mov    rdi,QWORD PTR [r15+0x28]
  42cb65:	sub    rbx,rdi
  42cb68:	cmp    r14,rbx
  42cb6b:	ja     42cb40 <flatcc_json_printer_int16_vector_field@@Base+0xf0>
  42cb6d:	mov    esi,0x20
  42cb72:	mov    rdx,r14
  42cb75:	call   406080 <memset@plt>
  42cb7a:	add    r14,QWORD PTR [r15+0x28]
  42cb7e:	mov    QWORD PTR [r15+0x28],r14
  42cb82:	jmp    42cb97 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42cb84:	cmp    r14,QWORD PTR [r15+0x20]
  42cb88:	jb     42cb97 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42cb8a:	xor    esi,esi
  42cb8c:	mov    rdi,r15
  42cb8f:	call   QWORD PTR [r15+0x48]
  42cb93:	mov    r14,QWORD PTR [r15+0x28]
  42cb97:	movzx  eax,WORD PTR [r12+0x4]
  42cb9d:	test   ax,ax
  42cba0:	js     42cba6 <flatcc_json_printer_int16_vector_field@@Base+0x156>
  42cba2:	mov    edx,eax
  42cba4:	jmp    42cbb2 <flatcc_json_printer_int16_vector_field@@Base+0x162>
  42cba6:	mov    BYTE PTR [r14],0x2d
  42cbaa:	add    r14,0x1
  42cbae:	mov    edx,eax
  42cbb0:	neg    edx
  42cbb2:	shr    eax,0xf
  42cbb5:	movzx  edi,dx
  42cbb8:	cmp    edi,0x3e8
  42cbbe:	jb     42cbd0 <flatcc_json_printer_int16_vector_field@@Base+0x180>
  42cbc0:	xor    ecx,ecx
  42cbc2:	cmp    edi,0x270f
  42cbc8:	seta   cl
  42cbcb:	or     ecx,0x4
  42cbce:	jmp    42cbf6 <flatcc_json_printer_int16_vector_field@@Base+0x1a6>
  42cbd0:	cmp    edi,0x64
  42cbd3:	jb     42cbeb <flatcc_json_printer_int16_vector_field@@Base+0x19b>
  42cbd5:	mov    BYTE PTR [r14+0x3],0x0
  42cbda:	add    r14,0x3
  42cbde:	mov    ecx,0x3
  42cbe3:	mov    rsi,r14
  42cbe6:	jmp    42cc9f <flatcc_json_printer_int16_vector_field@@Base+0x24f>
  42cbeb:	xor    ecx,ecx
  42cbed:	cmp    edi,0x9
  42cbf0:	seta   cl
  42cbf3:	add    ecx,0x1
  42cbf6:	mov    ebx,ecx
  42cbf8:	lea    rsi,[r14+rbx*1]
  42cbfc:	mov    BYTE PTR [r14+rbx*1],0x0
  42cc01:	test   cl,0x1
  42cc04:	jne    42cc67 <flatcc_json_printer_int16_vector_field@@Base+0x217>
  42cc06:	cmp    cl,0x2
  42cc09:	je     42cc3d <flatcc_json_printer_int16_vector_field@@Base+0x1ed>
  42cc0b:	cmp    cl,0x4
  42cc0e:	jne    42ccd1 <flatcc_json_printer_int16_vector_field@@Base+0x281>
  42cc14:	mov    edx,edi
  42cc16:	shr    edx,0x2
  42cc19:	imul   edx,edx,0x147b
  42cc1f:	shr    edx,0x11
  42cc22:	imul   ebx,edx,0x64
  42cc25:	sub    edi,ebx
  42cc27:	movzx  edi,di
  42cc2a:	lea    rbx,[rip+0xd74f]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42cc31:	movzx  edi,WORD PTR [rbx+rdi*2]
  42cc35:	mov    WORD PTR [rsi-0x2],di
  42cc39:	lea    rsi,[rsi-0x2]
  42cc3d:	movzx  edx,dx
  42cc40:	mov    edi,edx
  42cc42:	shr    edi,0x2
  42cc45:	imul   edi,edi,0x147b
  42cc4b:	shr    edi,0x11
  42cc4e:	imul   edi,edi,0x64
  42cc51:	sub    edx,edi
  42cc53:	movzx  edx,dx
  42cc56:	lea    rdi,[rip+0xd723]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42cc5d:	movzx  edx,WORD PTR [rdi+rdx*2]
  42cc61:	mov    WORD PTR [rsi-0x2],dx
  42cc65:	jmp    42ccd1 <flatcc_json_printer_int16_vector_field@@Base+0x281>
  42cc67:	cmp    cl,0x1
  42cc6a:	je     42cccb <flatcc_json_printer_int16_vector_field@@Base+0x27b>
  42cc6c:	cmp    cl,0x3
  42cc6f:	je     42cc9f <flatcc_json_printer_int16_vector_field@@Base+0x24f>
  42cc71:	cmp    cl,0x5
  42cc74:	jne    42ccd1 <flatcc_json_printer_int16_vector_field@@Base+0x281>
  42cc76:	mov    edx,edi
  42cc78:	shr    edx,0x2
  42cc7b:	imul   edx,edx,0x147b
  42cc81:	shr    edx,0x11
  42cc84:	imul   ebx,edx,0x64
  42cc87:	sub    edi,ebx
  42cc89:	movzx  edi,di
  42cc8c:	lea    rbx,[rip+0xd6ed]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42cc93:	movzx  edi,WORD PTR [rbx+rdi*2]
  42cc97:	mov    WORD PTR [rsi-0x2],di
  42cc9b:	lea    rsi,[rsi-0x2]
  42cc9f:	movzx  edi,dx
  42cca2:	mov    edx,edi
  42cca4:	shr    edx,0x2
  42cca7:	imul   edx,edx,0x147b
  42ccad:	shr    edx,0x11
  42ccb0:	imul   ebx,edx,0x64
  42ccb3:	sub    edi,ebx
  42ccb5:	movzx  edi,di
  42ccb8:	lea    rbx,[rip+0xd6c1]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ccbf:	movzx  edi,WORD PTR [rbx+rdi*2]
  42ccc3:	mov    WORD PTR [rsi-0x2],di
  42ccc7:	lea    rsi,[rsi-0x2]
  42cccb:	add    dl,0x30
  42ccce:	mov    BYTE PTR [rsi-0x1],dl
  42ccd1:	add    ecx,eax
  42ccd3:	add    QWORD PTR [r15+0x28],rcx
  42ccd7:	add    ebp,0xffffffff
  42ccda:	je     42cf26 <flatcc_json_printer_int16_vector_field@@Base+0x4d6>
  42cce0:	add    r12,0x6
  42cce4:	mov    rcx,QWORD PTR [r15+0x28]
  42cce8:	lea    r13,[rip+0xd691]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  42ccef:	nop
  42ccf0:	lea    rax,[rcx+0x1]
  42ccf4:	mov    QWORD PTR [r15+0x28],rax
  42ccf8:	mov    BYTE PTR [rcx],0x2c
  42ccfb:	cmp    BYTE PTR [r15+0x31],0x0
  42cd00:	mov    r14,QWORD PTR [r15+0x28]
  42cd04:	je     42cdb0 <flatcc_json_printer_int16_vector_field@@Base+0x360>
  42cd0a:	lea    rax,[r14+0x1]
  42cd0e:	mov    QWORD PTR [r15+0x28],rax
  42cd12:	mov    BYTE PTR [r14],0xa
  42cd16:	movsxd rax,DWORD PTR [r15+0x38]
  42cd1a:	movzx  r14d,BYTE PTR [r15+0x31]
  42cd1f:	imul   r14,rax
  42cd23:	mov    rbx,QWORD PTR [r15+0x20]
  42cd27:	mov    rdi,QWORD PTR [r15+0x28]
  42cd2b:	lea    rax,[rdi+r14*1]
  42cd2f:	cmp    rax,rbx
  42cd32:	jbe    42cd8d <flatcc_json_printer_int16_vector_field@@Base+0x33d>
  42cd34:	cmp    rdi,rbx
  42cd37:	jb     42cd4a <flatcc_json_printer_int16_vector_field@@Base+0x2fa>
  42cd39:	xor    esi,esi
  42cd3b:	mov    rdi,r15
  42cd3e:	call   QWORD PTR [r15+0x48]
  42cd42:	mov    rbx,QWORD PTR [r15+0x20]
  42cd46:	mov    rdi,QWORD PTR [r15+0x28]
  42cd4a:	sub    rbx,rdi
  42cd4d:	cmp    rbx,r14
  42cd50:	jae    42cd8d <flatcc_json_printer_int16_vector_field@@Base+0x33d>
  42cd52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd5c:	nop    DWORD PTR [rax+0x0]
  42cd60:	mov    esi,0x20
  42cd65:	mov    rdx,rbx
  42cd68:	call   406080 <memset@plt>
  42cd6d:	add    QWORD PTR [r15+0x28],rbx
  42cd71:	sub    r14,rbx
  42cd74:	xor    esi,esi
  42cd76:	mov    rdi,r15
  42cd79:	call   QWORD PTR [r15+0x48]
  42cd7d:	mov    rbx,QWORD PTR [r15+0x20]
  42cd81:	mov    rdi,QWORD PTR [r15+0x28]
  42cd85:	sub    rbx,rdi
  42cd88:	cmp    r14,rbx
  42cd8b:	ja     42cd60 <flatcc_json_printer_int16_vector_field@@Base+0x310>
  42cd8d:	mov    esi,0x20
  42cd92:	mov    rdx,r14
  42cd95:	call   406080 <memset@plt>
  42cd9a:	add    r14,QWORD PTR [r15+0x28]
  42cd9e:	mov    QWORD PTR [r15+0x28],r14
  42cda2:	jmp    42cdd0 <flatcc_json_printer_int16_vector_field@@Base+0x380>
  42cda4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cdae:	xchg   ax,ax
  42cdb0:	cmp    r14,QWORD PTR [r15+0x20]
  42cdb4:	jb     42cdd0 <flatcc_json_printer_int16_vector_field@@Base+0x380>
  42cdb6:	xor    esi,esi
  42cdb8:	mov    rdi,r15
  42cdbb:	call   QWORD PTR [r15+0x48]
  42cdbf:	mov    r14,QWORD PTR [r15+0x28]
  42cdc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cdcd:	nop    DWORD PTR [rax]
  42cdd0:	movzx  eax,WORD PTR [r12]
  42cdd5:	test   ax,ax
  42cdd8:	js     42cde0 <flatcc_json_printer_int16_vector_field@@Base+0x390>
  42cdda:	mov    edx,eax
  42cddc:	jmp    42cdec <flatcc_json_printer_int16_vector_field@@Base+0x39c>
  42cdde:	xchg   ax,ax
  42cde0:	mov    BYTE PTR [r14],0x2d
  42cde4:	add    r14,0x1
  42cde8:	mov    edx,eax
  42cdea:	neg    edx
  42cdec:	add    ebp,0xffffffff
  42cdef:	shr    eax,0xf
  42cdf2:	movzx  edi,dx
  42cdf5:	cmp    edi,0x3e8
  42cdfb:	jb     42ce10 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
  42cdfd:	xor    ecx,ecx
  42cdff:	cmp    edi,0x270f
  42ce05:	seta   cl
  42ce08:	or     ecx,0x4
  42ce0b:	jmp    42ce3b <flatcc_json_printer_int16_vector_field@@Base+0x3eb>
  42ce0d:	nop    DWORD PTR [rax]
  42ce10:	cmp    edi,0x64
  42ce13:	jb     42ce30 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
  42ce15:	mov    BYTE PTR [r14+0x3],0x0
  42ce1a:	add    r14,0x3
  42ce1e:	mov    ecx,0x3
  42ce23:	mov    rsi,r14
  42ce26:	jmp    42cee3 <flatcc_json_printer_int16_vector_field@@Base+0x493>
  42ce2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ce30:	xor    ecx,ecx
  42ce32:	cmp    edi,0x9
  42ce35:	seta   cl
  42ce38:	add    ecx,0x1
  42ce3b:	mov    ebx,ecx
  42ce3d:	lea    rsi,[r14+rbx*1]
  42ce41:	mov    BYTE PTR [r14+rbx*1],0x0
  42ce46:	test   cl,0x1
  42ce49:	jne    42ceb0 <flatcc_json_printer_int16_vector_field@@Base+0x460>
  42ce4b:	cmp    cl,0x2
  42ce4e:	je     42ce7d <flatcc_json_printer_int16_vector_field@@Base+0x42d>
  42ce50:	cmp    cl,0x4
  42ce53:	jne    42cf10 <flatcc_json_printer_int16_vector_field@@Base+0x4c0>
  42ce59:	mov    edx,edi
  42ce5b:	shr    edx,0x2
  42ce5e:	imul   edx,edx,0x147b
  42ce64:	shr    edx,0x11
  42ce67:	imul   ebx,edx,0x64
  42ce6a:	sub    edi,ebx
  42ce6c:	movzx  edi,di
  42ce6f:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42ce75:	mov    WORD PTR [rsi-0x2],di
  42ce79:	lea    rsi,[rsi-0x2]
  42ce7d:	movzx  edx,dx
  42ce80:	mov    edi,edx
  42ce82:	shr    edi,0x2
  42ce85:	imul   edi,edi,0x147b
  42ce8b:	shr    edi,0x11
  42ce8e:	imul   edi,edi,0x64
  42ce91:	sub    edx,edi
  42ce93:	movzx  edx,dx
  42ce96:	movzx  edx,WORD PTR [r13+rdx*2+0x0]
  42ce9c:	mov    WORD PTR [rsi-0x2],dx
  42cea0:	jmp    42cf10 <flatcc_json_printer_int16_vector_field@@Base+0x4c0>
  42cea2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ceac:	nop    DWORD PTR [rax+0x0]
  42ceb0:	cmp    cl,0x1
  42ceb3:	je     42cf0a <flatcc_json_printer_int16_vector_field@@Base+0x4ba>
  42ceb5:	cmp    cl,0x3
  42ceb8:	je     42cee3 <flatcc_json_printer_int16_vector_field@@Base+0x493>
  42ceba:	cmp    cl,0x5
  42cebd:	jne    42cf10 <flatcc_json_printer_int16_vector_field@@Base+0x4c0>
  42cebf:	mov    edx,edi
  42cec1:	shr    edx,0x2
  42cec4:	imul   edx,edx,0x147b
  42ceca:	shr    edx,0x11
  42cecd:	imul   ebx,edx,0x64
  42ced0:	sub    edi,ebx
  42ced2:	movzx  edi,di
  42ced5:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42cedb:	mov    WORD PTR [rsi-0x2],di
  42cedf:	lea    rsi,[rsi-0x2]
  42cee3:	movzx  edi,dx
  42cee6:	mov    edx,edi
  42cee8:	shr    edx,0x2
  42ceeb:	imul   edx,edx,0x147b
  42cef1:	shr    edx,0x11
  42cef4:	imul   ebx,edx,0x64
  42cef7:	sub    edi,ebx
  42cef9:	movzx  edi,di
  42cefc:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42cf02:	mov    WORD PTR [rsi-0x2],di
  42cf06:	lea    rsi,[rsi-0x2]
  42cf0a:	add    dl,0x30
  42cf0d:	mov    BYTE PTR [rsi-0x1],dl
  42cf10:	add    ecx,eax
  42cf12:	add    rcx,QWORD PTR [r15+0x28]
  42cf16:	mov    QWORD PTR [r15+0x28],rcx
  42cf1a:	add    r12,0x2
  42cf1e:	test   ebp,ebp
  42cf20:	jne    42ccf0 <flatcc_json_printer_int16_vector_field@@Base+0x2a0>
  42cf26:	cmp    BYTE PTR [r15+0x31],0x0
  42cf2b:	mov    r14,QWORD PTR [r15+0x28]
  42cf2f:	je     42cfd2 <flatcc_json_printer_int16_vector_field@@Base+0x582>
  42cf35:	lea    rax,[r14+0x1]
  42cf39:	mov    QWORD PTR [r15+0x28],rax
  42cf3d:	mov    BYTE PTR [r14],0xa
  42cf41:	movsxd rax,DWORD PTR [r15+0x38]
  42cf45:	add    rax,0xffffffffffffffff
  42cf49:	mov    DWORD PTR [r15+0x38],eax
  42cf4d:	movzx  r14d,BYTE PTR [r15+0x31]
  42cf52:	imul   r14,rax
  42cf56:	mov    rbx,QWORD PTR [r15+0x20]
  42cf5a:	mov    rdi,QWORD PTR [r15+0x28]
  42cf5e:	lea    rax,[rdi+r14*1]
  42cf62:	cmp    rax,rbx
  42cf65:	jbe    42cfbd <flatcc_json_printer_int16_vector_field@@Base+0x56d>
  42cf67:	cmp    rdi,rbx
  42cf6a:	jb     42cf7d <flatcc_json_printer_int16_vector_field@@Base+0x52d>
  42cf6c:	xor    esi,esi
  42cf6e:	mov    rdi,r15
  42cf71:	call   QWORD PTR [r15+0x48]
  42cf75:	mov    rbx,QWORD PTR [r15+0x20]
  42cf79:	mov    rdi,QWORD PTR [r15+0x28]
  42cf7d:	sub    rbx,rdi
  42cf80:	cmp    rbx,r14
  42cf83:	jae    42cfbd <flatcc_json_printer_int16_vector_field@@Base+0x56d>
  42cf85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cf8f:	nop
  42cf90:	mov    esi,0x20
  42cf95:	mov    rdx,rbx
  42cf98:	call   406080 <memset@plt>
  42cf9d:	add    QWORD PTR [r15+0x28],rbx
  42cfa1:	sub    r14,rbx
  42cfa4:	xor    esi,esi
  42cfa6:	mov    rdi,r15
  42cfa9:	call   QWORD PTR [r15+0x48]
  42cfad:	mov    rbx,QWORD PTR [r15+0x20]
  42cfb1:	mov    rdi,QWORD PTR [r15+0x28]
  42cfb5:	sub    rbx,rdi
  42cfb8:	cmp    r14,rbx
  42cfbb:	ja     42cf90 <flatcc_json_printer_int16_vector_field@@Base+0x540>
  42cfbd:	mov    esi,0x20
  42cfc2:	mov    rdx,r14
  42cfc5:	call   406080 <memset@plt>
  42cfca:	add    r14,QWORD PTR [r15+0x28]
  42cfce:	mov    QWORD PTR [r15+0x28],r14
  42cfd2:	lea    rax,[r14+0x1]
  42cfd6:	mov    QWORD PTR [r15+0x28],rax
  42cfda:	mov    BYTE PTR [r14],0x5d
  42cfde:	add    rsp,0x8
  42cfe2:	pop    rbx
  42cfe3:	pop    r12
  42cfe5:	pop    r13
  42cfe7:	pop    r14
  42cfe9:	pop    r15
  42cfeb:	pop    rbp
  42cfec:	ret    
  42cfed:	nop    DWORD PTR [rax]

000000000042cff0 <flatcc_json_printer_int32_vector_field@@Base>:
  42cff0:	push   rbp
  42cff1:	push   r15
  42cff3:	push   r14
  42cff5:	push   r12
  42cff7:	push   rbx
  42cff8:	lea    eax,[rdx+rdx*1]
  42cffb:	add    eax,0x4
  42cffe:	cmp    eax,DWORD PTR [rsi+0x10]
  42d001:	jge    42d32e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42d007:	mov    rdx,QWORD PTR [rsi+0x8]
  42d00b:	mov    eax,eax
  42d00d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d012:	test   r12,r12
  42d015:	je     42d32e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42d01b:	add    r12,QWORD PTR [rsi]
  42d01e:	je     42d32e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42d024:	mov    r15,rdi
  42d027:	mov    eax,DWORD PTR [rsi+0x18]
  42d02a:	lea    edx,[rax+0x1]
  42d02d:	mov    DWORD PTR [rsi+0x18],edx
  42d030:	test   eax,eax
  42d032:	je     42d043 <flatcc_json_printer_int32_vector_field@@Base+0x53>
  42d034:	mov    rax,QWORD PTR [r15+0x28]
  42d038:	lea    rdx,[rax+0x1]
  42d03c:	mov    QWORD PTR [r15+0x28],rdx
  42d040:	mov    BYTE PTR [rax],0x2c
  42d043:	mov    ebx,DWORD PTR [r12]
  42d047:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d04b:	movsxd rdx,r8d
  42d04e:	mov    rdi,r15
  42d051:	mov    rsi,rcx
  42d054:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42d059:	add    DWORD PTR [r15+0x38],0x1
  42d05e:	mov    rax,QWORD PTR [r15+0x28]
  42d062:	lea    rcx,[rax+0x1]
  42d066:	mov    QWORD PTR [r15+0x28],rcx
  42d06a:	mov    BYTE PTR [rax],0x5b
  42d06d:	test   ebp,ebp
  42d06f:	je     42d27a <flatcc_json_printer_int32_vector_field@@Base+0x28a>
  42d075:	add    r12,rbx
  42d078:	cmp    BYTE PTR [r15+0x31],0x0
  42d07d:	mov    r14,QWORD PTR [r15+0x28]
  42d081:	je     42d114 <flatcc_json_printer_int32_vector_field@@Base+0x124>
  42d087:	lea    rax,[r14+0x1]
  42d08b:	mov    QWORD PTR [r15+0x28],rax
  42d08f:	mov    BYTE PTR [r14],0xa
  42d093:	movsxd rax,DWORD PTR [r15+0x38]
  42d097:	movzx  r14d,BYTE PTR [r15+0x31]
  42d09c:	imul   r14,rax
  42d0a0:	mov    rbx,QWORD PTR [r15+0x20]
  42d0a4:	mov    rdi,QWORD PTR [r15+0x28]
  42d0a8:	lea    rax,[rdi+r14*1]
  42d0ac:	cmp    rax,rbx
  42d0af:	jbe    42d0fd <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42d0b1:	cmp    rdi,rbx
  42d0b4:	jb     42d0c7 <flatcc_json_printer_int32_vector_field@@Base+0xd7>
  42d0b6:	xor    esi,esi
  42d0b8:	mov    rdi,r15
  42d0bb:	call   QWORD PTR [r15+0x48]
  42d0bf:	mov    rbx,QWORD PTR [r15+0x20]
  42d0c3:	mov    rdi,QWORD PTR [r15+0x28]
  42d0c7:	sub    rbx,rdi
  42d0ca:	cmp    rbx,r14
  42d0cd:	jae    42d0fd <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42d0cf:	nop
  42d0d0:	mov    esi,0x20
  42d0d5:	mov    rdx,rbx
  42d0d8:	call   406080 <memset@plt>
  42d0dd:	add    QWORD PTR [r15+0x28],rbx
  42d0e1:	sub    r14,rbx
  42d0e4:	xor    esi,esi
  42d0e6:	mov    rdi,r15
  42d0e9:	call   QWORD PTR [r15+0x48]
  42d0ed:	mov    rbx,QWORD PTR [r15+0x20]
  42d0f1:	mov    rdi,QWORD PTR [r15+0x28]
  42d0f5:	sub    rbx,rdi
  42d0f8:	cmp    r14,rbx
  42d0fb:	ja     42d0d0 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
  42d0fd:	mov    esi,0x20
  42d102:	mov    rdx,r14
  42d105:	call   406080 <memset@plt>
  42d10a:	add    r14,QWORD PTR [r15+0x28]
  42d10e:	mov    QWORD PTR [r15+0x28],r14
  42d112:	jmp    42d127 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42d114:	cmp    r14,QWORD PTR [r15+0x20]
  42d118:	jb     42d127 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42d11a:	xor    esi,esi
  42d11c:	mov    rdi,r15
  42d11f:	call   QWORD PTR [r15+0x48]
  42d123:	mov    r14,QWORD PTR [r15+0x28]
  42d127:	mov    edi,DWORD PTR [r12+0x4]
  42d12c:	mov    ebx,edi
  42d12e:	shr    ebx,0x1f
  42d131:	test   edi,edi
  42d133:	jns    42d13f <flatcc_json_printer_int32_vector_field@@Base+0x14f>
  42d135:	mov    BYTE PTR [r14],0x2d
  42d139:	add    r14,0x1
  42d13d:	neg    edi
  42d13f:	mov    rsi,r14
  42d142:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42d147:	add    eax,ebx
  42d149:	cdqe   
  42d14b:	add    QWORD PTR [r15+0x28],rax
  42d14f:	add    ebp,0xffffffff
  42d152:	je     42d27a <flatcc_json_printer_int32_vector_field@@Base+0x28a>
  42d158:	add    r12,0x8
  42d15c:	mov    rax,QWORD PTR [r15+0x28]
  42d160:	lea    rcx,[rax+0x1]
  42d164:	mov    QWORD PTR [r15+0x28],rcx
  42d168:	mov    BYTE PTR [rax],0x2c
  42d16b:	cmp    BYTE PTR [r15+0x31],0x0
  42d170:	mov    r14,QWORD PTR [r15+0x28]
  42d174:	je     42d220 <flatcc_json_printer_int32_vector_field@@Base+0x230>
  42d17a:	lea    rax,[r14+0x1]
  42d17e:	mov    QWORD PTR [r15+0x28],rax
  42d182:	mov    BYTE PTR [r14],0xa
  42d186:	movsxd rax,DWORD PTR [r15+0x38]
  42d18a:	movzx  r14d,BYTE PTR [r15+0x31]
  42d18f:	imul   r14,rax
  42d193:	mov    rbx,QWORD PTR [r15+0x20]
  42d197:	mov    rdi,QWORD PTR [r15+0x28]
  42d19b:	lea    rax,[rdi+r14*1]
  42d19f:	cmp    rax,rbx
  42d1a2:	jbe    42d1fd <flatcc_json_printer_int32_vector_field@@Base+0x20d>
  42d1a4:	cmp    rdi,rbx
  42d1a7:	jb     42d1ba <flatcc_json_printer_int32_vector_field@@Base+0x1ca>
  42d1a9:	xor    esi,esi
  42d1ab:	mov    rdi,r15
  42d1ae:	call   QWORD PTR [r15+0x48]
  42d1b2:	mov    rbx,QWORD PTR [r15+0x20]
  42d1b6:	mov    rdi,QWORD PTR [r15+0x28]
  42d1ba:	sub    rbx,rdi
  42d1bd:	cmp    rbx,r14
  42d1c0:	jae    42d1fd <flatcc_json_printer_int32_vector_field@@Base+0x20d>
  42d1c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d1cc:	nop    DWORD PTR [rax+0x0]
  42d1d0:	mov    esi,0x20
  42d1d5:	mov    rdx,rbx
  42d1d8:	call   406080 <memset@plt>
  42d1dd:	add    QWORD PTR [r15+0x28],rbx
  42d1e1:	sub    r14,rbx
  42d1e4:	xor    esi,esi
  42d1e6:	mov    rdi,r15
  42d1e9:	call   QWORD PTR [r15+0x48]
  42d1ed:	mov    rbx,QWORD PTR [r15+0x20]
  42d1f1:	mov    rdi,QWORD PTR [r15+0x28]
  42d1f5:	sub    rbx,rdi
  42d1f8:	cmp    r14,rbx
  42d1fb:	ja     42d1d0 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
  42d1fd:	mov    esi,0x20
  42d202:	mov    rdx,r14
  42d205:	call   406080 <memset@plt>
  42d20a:	add    r14,QWORD PTR [r15+0x28]
  42d20e:	mov    QWORD PTR [r15+0x28],r14
  42d212:	jmp    42d240 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  42d214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d21e:	xchg   ax,ax
  42d220:	cmp    r14,QWORD PTR [r15+0x20]
  42d224:	jb     42d240 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  42d226:	xor    esi,esi
  42d228:	mov    rdi,r15
  42d22b:	call   QWORD PTR [r15+0x48]
  42d22f:	mov    r14,QWORD PTR [r15+0x28]
  42d233:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d23d:	nop    DWORD PTR [rax]
  42d240:	add    ebp,0xffffffff
  42d243:	mov    edi,DWORD PTR [r12]
  42d247:	mov    ebx,edi
  42d249:	shr    ebx,0x1f
  42d24c:	test   edi,edi
  42d24e:	jns    42d25a <flatcc_json_printer_int32_vector_field@@Base+0x26a>
  42d250:	mov    BYTE PTR [r14],0x2d
  42d254:	add    r14,0x1
  42d258:	neg    edi
  42d25a:	mov    rsi,r14
  42d25d:	call   428050 <flatcc_json_printer_uint32@@Base+0x20>
  42d262:	add    eax,ebx
  42d264:	cdqe   
  42d266:	add    rax,QWORD PTR [r15+0x28]
  42d26a:	mov    QWORD PTR [r15+0x28],rax
  42d26e:	add    r12,0x4
  42d272:	test   ebp,ebp
  42d274:	jne    42d160 <flatcc_json_printer_int32_vector_field@@Base+0x170>
  42d27a:	cmp    BYTE PTR [r15+0x31],0x0
  42d27f:	mov    r14,QWORD PTR [r15+0x28]
  42d283:	je     42d322 <flatcc_json_printer_int32_vector_field@@Base+0x332>
  42d289:	lea    rax,[r14+0x1]
  42d28d:	mov    QWORD PTR [r15+0x28],rax
  42d291:	mov    BYTE PTR [r14],0xa
  42d295:	movsxd rax,DWORD PTR [r15+0x38]
  42d299:	add    rax,0xffffffffffffffff
  42d29d:	mov    DWORD PTR [r15+0x38],eax
  42d2a1:	movzx  r14d,BYTE PTR [r15+0x31]
  42d2a6:	imul   r14,rax
  42d2aa:	mov    rbx,QWORD PTR [r15+0x20]
  42d2ae:	mov    rdi,QWORD PTR [r15+0x28]
  42d2b2:	lea    rax,[rdi+r14*1]
  42d2b6:	cmp    rax,rbx
  42d2b9:	jbe    42d30d <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42d2bb:	cmp    rdi,rbx
  42d2be:	jb     42d2d1 <flatcc_json_printer_int32_vector_field@@Base+0x2e1>
  42d2c0:	xor    esi,esi
  42d2c2:	mov    rdi,r15
  42d2c5:	call   QWORD PTR [r15+0x48]
  42d2c9:	mov    rbx,QWORD PTR [r15+0x20]
  42d2cd:	mov    rdi,QWORD PTR [r15+0x28]
  42d2d1:	sub    rbx,rdi
  42d2d4:	cmp    rbx,r14
  42d2d7:	jae    42d30d <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42d2d9:	nop    DWORD PTR [rax+0x0]
  42d2e0:	mov    esi,0x20
  42d2e5:	mov    rdx,rbx
  42d2e8:	call   406080 <memset@plt>
  42d2ed:	add    QWORD PTR [r15+0x28],rbx
  42d2f1:	sub    r14,rbx
  42d2f4:	xor    esi,esi
  42d2f6:	mov    rdi,r15
  42d2f9:	call   QWORD PTR [r15+0x48]
  42d2fd:	mov    rbx,QWORD PTR [r15+0x20]
  42d301:	mov    rdi,QWORD PTR [r15+0x28]
  42d305:	sub    rbx,rdi
  42d308:	cmp    r14,rbx
  42d30b:	ja     42d2e0 <flatcc_json_printer_int32_vector_field@@Base+0x2f0>
  42d30d:	mov    esi,0x20
  42d312:	mov    rdx,r14
  42d315:	call   406080 <memset@plt>
  42d31a:	add    r14,QWORD PTR [r15+0x28]
  42d31e:	mov    QWORD PTR [r15+0x28],r14
  42d322:	lea    rax,[r14+0x1]
  42d326:	mov    QWORD PTR [r15+0x28],rax
  42d32a:	mov    BYTE PTR [r14],0x5d
  42d32e:	pop    rbx
  42d32f:	pop    r12
  42d331:	pop    r14
  42d333:	pop    r15
  42d335:	pop    rbp
  42d336:	ret    
  42d337:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d340 <flatcc_json_printer_int64_vector_field@@Base>:
  42d340:	push   rbp
  42d341:	push   r15
  42d343:	push   r14
  42d345:	push   r12
  42d347:	push   rbx
  42d348:	lea    eax,[rdx+rdx*1]
  42d34b:	add    eax,0x4
  42d34e:	cmp    eax,DWORD PTR [rsi+0x10]
  42d351:	jge    42d68e <flatcc_json_printer_int64_vector_field@@Base+0x34e>
  42d357:	mov    rdx,QWORD PTR [rsi+0x8]
  42d35b:	mov    eax,eax
  42d35d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d362:	test   r12,r12
  42d365:	je     42d68e <flatcc_json_printer_int64_vector_field@@Base+0x34e>
  42d36b:	add    r12,QWORD PTR [rsi]
  42d36e:	je     42d68e <flatcc_json_printer_int64_vector_field@@Base+0x34e>
  42d374:	mov    r15,rdi
  42d377:	mov    eax,DWORD PTR [rsi+0x18]
  42d37a:	lea    edx,[rax+0x1]
  42d37d:	mov    DWORD PTR [rsi+0x18],edx
  42d380:	test   eax,eax
  42d382:	je     42d393 <flatcc_json_printer_int64_vector_field@@Base+0x53>
  42d384:	mov    rax,QWORD PTR [r15+0x28]
  42d388:	lea    rdx,[rax+0x1]
  42d38c:	mov    QWORD PTR [r15+0x28],rdx
  42d390:	mov    BYTE PTR [rax],0x2c
  42d393:	mov    ebx,DWORD PTR [r12]
  42d397:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d39b:	movsxd rdx,r8d
  42d39e:	mov    rdi,r15
  42d3a1:	mov    rsi,rcx
  42d3a4:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42d3a9:	add    DWORD PTR [r15+0x38],0x1
  42d3ae:	mov    rax,QWORD PTR [r15+0x28]
  42d3b2:	lea    rcx,[rax+0x1]
  42d3b6:	mov    QWORD PTR [r15+0x28],rcx
  42d3ba:	mov    BYTE PTR [rax],0x5b
  42d3bd:	test   ebp,ebp
  42d3bf:	je     42d5de <flatcc_json_printer_int64_vector_field@@Base+0x29e>
  42d3c5:	add    r12,rbx
  42d3c8:	cmp    BYTE PTR [r15+0x31],0x0
  42d3cd:	mov    r14,QWORD PTR [r15+0x28]
  42d3d1:	je     42d464 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  42d3d7:	lea    rax,[r14+0x1]
  42d3db:	mov    QWORD PTR [r15+0x28],rax
  42d3df:	mov    BYTE PTR [r14],0xa
  42d3e3:	movsxd rax,DWORD PTR [r15+0x38]
  42d3e7:	movzx  r14d,BYTE PTR [r15+0x31]
  42d3ec:	imul   r14,rax
  42d3f0:	mov    rbx,QWORD PTR [r15+0x20]
  42d3f4:	mov    rdi,QWORD PTR [r15+0x28]
  42d3f8:	lea    rax,[rdi+r14*1]
  42d3fc:	cmp    rax,rbx
  42d3ff:	jbe    42d44d <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42d401:	cmp    rdi,rbx
  42d404:	jb     42d417 <flatcc_json_printer_int64_vector_field@@Base+0xd7>
  42d406:	xor    esi,esi
  42d408:	mov    rdi,r15
  42d40b:	call   QWORD PTR [r15+0x48]
  42d40f:	mov    rbx,QWORD PTR [r15+0x20]
  42d413:	mov    rdi,QWORD PTR [r15+0x28]
  42d417:	sub    rbx,rdi
  42d41a:	cmp    rbx,r14
  42d41d:	jae    42d44d <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42d41f:	nop
  42d420:	mov    esi,0x20
  42d425:	mov    rdx,rbx
  42d428:	call   406080 <memset@plt>
  42d42d:	add    QWORD PTR [r15+0x28],rbx
  42d431:	sub    r14,rbx
  42d434:	xor    esi,esi
  42d436:	mov    rdi,r15
  42d439:	call   QWORD PTR [r15+0x48]
  42d43d:	mov    rbx,QWORD PTR [r15+0x20]
  42d441:	mov    rdi,QWORD PTR [r15+0x28]
  42d445:	sub    rbx,rdi
  42d448:	cmp    r14,rbx
  42d44b:	ja     42d420 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
  42d44d:	mov    esi,0x20
  42d452:	mov    rdx,r14
  42d455:	call   406080 <memset@plt>
  42d45a:	add    r14,QWORD PTR [r15+0x28]
  42d45e:	mov    QWORD PTR [r15+0x28],r14
  42d462:	jmp    42d477 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42d464:	cmp    r14,QWORD PTR [r15+0x20]
  42d468:	jb     42d477 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42d46a:	xor    esi,esi
  42d46c:	mov    rdi,r15
  42d46f:	call   QWORD PTR [r15+0x48]
  42d473:	mov    r14,QWORD PTR [r15+0x28]
  42d477:	mov    rdi,QWORD PTR [r12+0x4]
  42d47c:	mov    rbx,rdi
  42d47f:	shr    rbx,0x3f
  42d483:	test   rdi,rdi
  42d486:	jns    42d493 <flatcc_json_printer_int64_vector_field@@Base+0x153>
  42d488:	mov    BYTE PTR [r14],0x2d
  42d48c:	add    r14,0x1
  42d490:	neg    rdi
  42d493:	mov    rsi,r14
  42d496:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42d49b:	add    eax,ebx
  42d49d:	cdqe   
  42d49f:	add    QWORD PTR [r15+0x28],rax
  42d4a3:	add    ebp,0xffffffff
  42d4a6:	je     42d5de <flatcc_json_printer_int64_vector_field@@Base+0x29e>
  42d4ac:	add    r12,0xc
  42d4b0:	mov    rax,QWORD PTR [r15+0x28]
  42d4b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d4be:	xchg   ax,ax
  42d4c0:	lea    rcx,[rax+0x1]
  42d4c4:	mov    QWORD PTR [r15+0x28],rcx
  42d4c8:	mov    BYTE PTR [rax],0x2c
  42d4cb:	cmp    BYTE PTR [r15+0x31],0x0
  42d4d0:	mov    r14,QWORD PTR [r15+0x28]
  42d4d4:	je     42d580 <flatcc_json_printer_int64_vector_field@@Base+0x240>
  42d4da:	lea    rax,[r14+0x1]
  42d4de:	mov    QWORD PTR [r15+0x28],rax
  42d4e2:	mov    BYTE PTR [r14],0xa
  42d4e6:	movsxd rax,DWORD PTR [r15+0x38]
  42d4ea:	movzx  r14d,BYTE PTR [r15+0x31]
  42d4ef:	imul   r14,rax
  42d4f3:	mov    rbx,QWORD PTR [r15+0x20]
  42d4f7:	mov    rdi,QWORD PTR [r15+0x28]
  42d4fb:	lea    rax,[rdi+r14*1]
  42d4ff:	cmp    rax,rbx
  42d502:	jbe    42d55d <flatcc_json_printer_int64_vector_field@@Base+0x21d>
  42d504:	cmp    rdi,rbx
  42d507:	jb     42d51a <flatcc_json_printer_int64_vector_field@@Base+0x1da>
  42d509:	xor    esi,esi
  42d50b:	mov    rdi,r15
  42d50e:	call   QWORD PTR [r15+0x48]
  42d512:	mov    rbx,QWORD PTR [r15+0x20]
  42d516:	mov    rdi,QWORD PTR [r15+0x28]
  42d51a:	sub    rbx,rdi
  42d51d:	cmp    rbx,r14
  42d520:	jae    42d55d <flatcc_json_printer_int64_vector_field@@Base+0x21d>
  42d522:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d52c:	nop    DWORD PTR [rax+0x0]
  42d530:	mov    esi,0x20
  42d535:	mov    rdx,rbx
  42d538:	call   406080 <memset@plt>
  42d53d:	add    QWORD PTR [r15+0x28],rbx
  42d541:	sub    r14,rbx
  42d544:	xor    esi,esi
  42d546:	mov    rdi,r15
  42d549:	call   QWORD PTR [r15+0x48]
  42d54d:	mov    rbx,QWORD PTR [r15+0x20]
  42d551:	mov    rdi,QWORD PTR [r15+0x28]
  42d555:	sub    rbx,rdi
  42d558:	cmp    r14,rbx
  42d55b:	ja     42d530 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
  42d55d:	mov    esi,0x20
  42d562:	mov    rdx,r14
  42d565:	call   406080 <memset@plt>
  42d56a:	add    r14,QWORD PTR [r15+0x28]
  42d56e:	mov    QWORD PTR [r15+0x28],r14
  42d572:	jmp    42d5a0 <flatcc_json_printer_int64_vector_field@@Base+0x260>
  42d574:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d57e:	xchg   ax,ax
  42d580:	cmp    r14,QWORD PTR [r15+0x20]
  42d584:	jb     42d5a0 <flatcc_json_printer_int64_vector_field@@Base+0x260>
  42d586:	xor    esi,esi
  42d588:	mov    rdi,r15
  42d58b:	call   QWORD PTR [r15+0x48]
  42d58f:	mov    r14,QWORD PTR [r15+0x28]
  42d593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d59d:	nop    DWORD PTR [rax]
  42d5a0:	add    ebp,0xffffffff
  42d5a3:	mov    rdi,QWORD PTR [r12]
  42d5a7:	mov    rbx,rdi
  42d5aa:	shr    rbx,0x3f
  42d5ae:	test   rdi,rdi
  42d5b1:	jns    42d5be <flatcc_json_printer_int64_vector_field@@Base+0x27e>
  42d5b3:	mov    BYTE PTR [r14],0x2d
  42d5b7:	add    r14,0x1
  42d5bb:	neg    rdi
  42d5be:	mov    rsi,r14
  42d5c1:	call   4282e0 <flatcc_json_printer_uint64@@Base+0x20>
  42d5c6:	add    eax,ebx
  42d5c8:	cdqe   
  42d5ca:	add    rax,QWORD PTR [r15+0x28]
  42d5ce:	mov    QWORD PTR [r15+0x28],rax
  42d5d2:	add    r12,0x8
  42d5d6:	test   ebp,ebp
  42d5d8:	jne    42d4c0 <flatcc_json_printer_int64_vector_field@@Base+0x180>
  42d5de:	cmp    BYTE PTR [r15+0x31],0x0
  42d5e3:	mov    r14,QWORD PTR [r15+0x28]
  42d5e7:	je     42d682 <flatcc_json_printer_int64_vector_field@@Base+0x342>
  42d5ed:	lea    rax,[r14+0x1]
  42d5f1:	mov    QWORD PTR [r15+0x28],rax
  42d5f5:	mov    BYTE PTR [r14],0xa
  42d5f9:	movsxd rax,DWORD PTR [r15+0x38]
  42d5fd:	add    rax,0xffffffffffffffff
  42d601:	mov    DWORD PTR [r15+0x38],eax
  42d605:	movzx  r14d,BYTE PTR [r15+0x31]
  42d60a:	imul   r14,rax
  42d60e:	mov    rbx,QWORD PTR [r15+0x20]
  42d612:	mov    rdi,QWORD PTR [r15+0x28]
  42d616:	lea    rax,[rdi+r14*1]
  42d61a:	cmp    rax,rbx
  42d61d:	jbe    42d66d <flatcc_json_printer_int64_vector_field@@Base+0x32d>
  42d61f:	cmp    rdi,rbx
  42d622:	jb     42d635 <flatcc_json_printer_int64_vector_field@@Base+0x2f5>
  42d624:	xor    esi,esi
  42d626:	mov    rdi,r15
  42d629:	call   QWORD PTR [r15+0x48]
  42d62d:	mov    rbx,QWORD PTR [r15+0x20]
  42d631:	mov    rdi,QWORD PTR [r15+0x28]
  42d635:	sub    rbx,rdi
  42d638:	cmp    rbx,r14
  42d63b:	jae    42d66d <flatcc_json_printer_int64_vector_field@@Base+0x32d>
  42d63d:	nop    DWORD PTR [rax]
  42d640:	mov    esi,0x20
  42d645:	mov    rdx,rbx
  42d648:	call   406080 <memset@plt>
  42d64d:	add    QWORD PTR [r15+0x28],rbx
  42d651:	sub    r14,rbx
  42d654:	xor    esi,esi
  42d656:	mov    rdi,r15
  42d659:	call   QWORD PTR [r15+0x48]
  42d65d:	mov    rbx,QWORD PTR [r15+0x20]
  42d661:	mov    rdi,QWORD PTR [r15+0x28]
  42d665:	sub    rbx,rdi
  42d668:	cmp    r14,rbx
  42d66b:	ja     42d640 <flatcc_json_printer_int64_vector_field@@Base+0x300>
  42d66d:	mov    esi,0x20
  42d672:	mov    rdx,r14
  42d675:	call   406080 <memset@plt>
  42d67a:	add    r14,QWORD PTR [r15+0x28]
  42d67e:	mov    QWORD PTR [r15+0x28],r14
  42d682:	lea    rax,[r14+0x1]
  42d686:	mov    QWORD PTR [r15+0x28],rax
  42d68a:	mov    BYTE PTR [r14],0x5d
  42d68e:	pop    rbx
  42d68f:	pop    r12
  42d691:	pop    r14
  42d693:	pop    r15
  42d695:	pop    rbp
  42d696:	ret    
  42d697:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d6a0 <flatcc_json_printer_bool_vector_field@@Base>:
  42d6a0:	push   rbp
  42d6a1:	push   r15
  42d6a3:	push   r14
  42d6a5:	push   r12
  42d6a7:	push   rbx
  42d6a8:	lea    eax,[rdx+rdx*1]
  42d6ab:	add    eax,0x4
  42d6ae:	cmp    eax,DWORD PTR [rsi+0x10]
  42d6b1:	jge    42da0e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42d6b7:	mov    rdx,QWORD PTR [rsi+0x8]
  42d6bb:	mov    eax,eax
  42d6bd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d6c2:	test   r12,r12
  42d6c5:	je     42da0e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42d6cb:	add    r12,QWORD PTR [rsi]
  42d6ce:	je     42da0e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42d6d4:	mov    r15,rdi
  42d6d7:	mov    eax,DWORD PTR [rsi+0x18]
  42d6da:	lea    edx,[rax+0x1]
  42d6dd:	mov    DWORD PTR [rsi+0x18],edx
  42d6e0:	test   eax,eax
  42d6e2:	je     42d6f3 <flatcc_json_printer_bool_vector_field@@Base+0x53>
  42d6e4:	mov    rax,QWORD PTR [r15+0x28]
  42d6e8:	lea    rdx,[rax+0x1]
  42d6ec:	mov    QWORD PTR [r15+0x28],rdx
  42d6f0:	mov    BYTE PTR [rax],0x2c
  42d6f3:	mov    ebx,DWORD PTR [r12]
  42d6f7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d6fb:	movsxd rdx,r8d
  42d6fe:	mov    rdi,r15
  42d701:	mov    rsi,rcx
  42d704:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42d709:	add    DWORD PTR [r15+0x38],0x1
  42d70e:	mov    rax,QWORD PTR [r15+0x28]
  42d712:	lea    rcx,[rax+0x1]
  42d716:	mov    QWORD PTR [r15+0x28],rcx
  42d71a:	mov    BYTE PTR [rax],0x5b
  42d71d:	test   ebp,ebp
  42d71f:	je     42d957 <flatcc_json_printer_bool_vector_field@@Base+0x2b7>
  42d725:	add    r12,rbx
  42d728:	cmp    BYTE PTR [r15+0x31],0x0
  42d72d:	mov    r14,QWORD PTR [r15+0x28]
  42d731:	je     42d7cc <flatcc_json_printer_bool_vector_field@@Base+0x12c>
  42d737:	lea    rax,[r14+0x1]
  42d73b:	mov    QWORD PTR [r15+0x28],rax
  42d73f:	mov    BYTE PTR [r14],0xa
  42d743:	movsxd rax,DWORD PTR [r15+0x38]
  42d747:	movzx  r14d,BYTE PTR [r15+0x31]
  42d74c:	imul   r14,rax
  42d750:	mov    rbx,QWORD PTR [r15+0x20]
  42d754:	mov    rdi,QWORD PTR [r15+0x28]
  42d758:	lea    rax,[rdi+r14*1]
  42d75c:	cmp    rax,rbx
  42d75f:	jbe    42d7ad <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42d761:	cmp    rdi,rbx
  42d764:	jb     42d777 <flatcc_json_printer_bool_vector_field@@Base+0xd7>
  42d766:	xor    esi,esi
  42d768:	mov    rdi,r15
  42d76b:	call   QWORD PTR [r15+0x48]
  42d76f:	mov    rbx,QWORD PTR [r15+0x20]
  42d773:	mov    rdi,QWORD PTR [r15+0x28]
  42d777:	sub    rbx,rdi
  42d77a:	cmp    rbx,r14
  42d77d:	jae    42d7ad <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42d77f:	nop
  42d780:	mov    esi,0x20
  42d785:	mov    rdx,rbx
  42d788:	call   406080 <memset@plt>
  42d78d:	add    QWORD PTR [r15+0x28],rbx
  42d791:	sub    r14,rbx
  42d794:	xor    esi,esi
  42d796:	mov    rdi,r15
  42d799:	call   QWORD PTR [r15+0x48]
  42d79d:	mov    rbx,QWORD PTR [r15+0x20]
  42d7a1:	mov    rdi,QWORD PTR [r15+0x28]
  42d7a5:	sub    rbx,rdi
  42d7a8:	cmp    r14,rbx
  42d7ab:	ja     42d780 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
  42d7ad:	mov    esi,0x20
  42d7b2:	mov    rdx,r14
  42d7b5:	call   406080 <memset@plt>
  42d7ba:	add    r14,QWORD PTR [r15+0x28]
  42d7be:	mov    QWORD PTR [r15+0x28],r14
  42d7c2:	cmp    BYTE PTR [r12+0x4],0x0
  42d7c8:	jne    42d7e7 <flatcc_json_printer_bool_vector_field@@Base+0x147>
  42d7ca:	jmp    42d7fa <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42d7cc:	cmp    r14,QWORD PTR [r15+0x20]
  42d7d0:	jb     42d7df <flatcc_json_printer_bool_vector_field@@Base+0x13f>
  42d7d2:	xor    esi,esi
  42d7d4:	mov    rdi,r15
  42d7d7:	call   QWORD PTR [r15+0x48]
  42d7db:	mov    r14,QWORD PTR [r15+0x28]
  42d7df:	cmp    BYTE PTR [r12+0x4],0x0
  42d7e5:	je     42d7fa <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42d7e7:	mov    BYTE PTR [r14+0x4],0x0
  42d7ec:	mov    DWORD PTR [r14],0x65757274
  42d7f3:	mov    eax,0x4
  42d7f8:	jmp    42d80d <flatcc_json_printer_bool_vector_field@@Base+0x16d>
  42d7fa:	mov    WORD PTR [r14+0x4],0x65
  42d801:	mov    DWORD PTR [r14],0x736c6166
  42d808:	mov    eax,0x5
  42d80d:	add    QWORD PTR [r15+0x28],rax
  42d811:	add    ebp,0xffffffff
  42d814:	je     42d957 <flatcc_json_printer_bool_vector_field@@Base+0x2b7>
  42d81a:	add    r12,0x5
  42d81e:	mov    rax,QWORD PTR [r15+0x28]
  42d822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d82c:	nop    DWORD PTR [rax+0x0]
  42d830:	lea    rcx,[rax+0x1]
  42d834:	mov    QWORD PTR [r15+0x28],rcx
  42d838:	mov    BYTE PTR [rax],0x2c
  42d83b:	cmp    BYTE PTR [r15+0x31],0x0
  42d840:	mov    r14,QWORD PTR [r15+0x28]
  42d844:	je     42d8f0 <flatcc_json_printer_bool_vector_field@@Base+0x250>
  42d84a:	lea    rax,[r14+0x1]
  42d84e:	mov    QWORD PTR [r15+0x28],rax
  42d852:	mov    BYTE PTR [r14],0xa
  42d856:	movsxd rax,DWORD PTR [r15+0x38]
  42d85a:	movzx  r14d,BYTE PTR [r15+0x31]
  42d85f:	imul   r14,rax
  42d863:	mov    rbx,QWORD PTR [r15+0x20]
  42d867:	mov    rdi,QWORD PTR [r15+0x28]
  42d86b:	lea    rax,[rdi+r14*1]
  42d86f:	cmp    rax,rbx
  42d872:	jbe    42d8cd <flatcc_json_printer_bool_vector_field@@Base+0x22d>
  42d874:	cmp    rdi,rbx
  42d877:	jb     42d88a <flatcc_json_printer_bool_vector_field@@Base+0x1ea>
  42d879:	xor    esi,esi
  42d87b:	mov    rdi,r15
  42d87e:	call   QWORD PTR [r15+0x48]
  42d882:	mov    rbx,QWORD PTR [r15+0x20]
  42d886:	mov    rdi,QWORD PTR [r15+0x28]
  42d88a:	sub    rbx,rdi
  42d88d:	cmp    rbx,r14
  42d890:	jae    42d8cd <flatcc_json_printer_bool_vector_field@@Base+0x22d>
  42d892:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d89c:	nop    DWORD PTR [rax+0x0]
  42d8a0:	mov    esi,0x20
  42d8a5:	mov    rdx,rbx
  42d8a8:	call   406080 <memset@plt>
  42d8ad:	add    QWORD PTR [r15+0x28],rbx
  42d8b1:	sub    r14,rbx
  42d8b4:	xor    esi,esi
  42d8b6:	mov    rdi,r15
  42d8b9:	call   QWORD PTR [r15+0x48]
  42d8bd:	mov    rbx,QWORD PTR [r15+0x20]
  42d8c1:	mov    rdi,QWORD PTR [r15+0x28]
  42d8c5:	sub    rbx,rdi
  42d8c8:	cmp    r14,rbx
  42d8cb:	ja     42d8a0 <flatcc_json_printer_bool_vector_field@@Base+0x200>
  42d8cd:	mov    esi,0x20
  42d8d2:	mov    rdx,r14
  42d8d5:	call   406080 <memset@plt>
  42d8da:	add    r14,QWORD PTR [r15+0x28]
  42d8de:	mov    QWORD PTR [r15+0x28],r14
  42d8e2:	jmp    42d910 <flatcc_json_printer_bool_vector_field@@Base+0x270>
  42d8e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d8ee:	xchg   ax,ax
  42d8f0:	cmp    r14,QWORD PTR [r15+0x20]
  42d8f4:	jb     42d910 <flatcc_json_printer_bool_vector_field@@Base+0x270>
  42d8f6:	xor    esi,esi
  42d8f8:	mov    rdi,r15
  42d8fb:	call   QWORD PTR [r15+0x48]
  42d8ff:	mov    r14,QWORD PTR [r15+0x28]
  42d903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d90d:	nop    DWORD PTR [rax]
  42d910:	add    ebp,0xffffffff
  42d913:	cmp    BYTE PTR [r12],0x0
  42d918:	je     42d930 <flatcc_json_printer_bool_vector_field@@Base+0x290>
  42d91a:	mov    BYTE PTR [r14+0x4],0x0
  42d91f:	mov    DWORD PTR [r14],0x65757274
  42d926:	mov    eax,0x4
  42d92b:	jmp    42d943 <flatcc_json_printer_bool_vector_field@@Base+0x2a3>
  42d92d:	nop    DWORD PTR [rax]
  42d930:	mov    WORD PTR [r14+0x4],0x65
  42d937:	mov    DWORD PTR [r14],0x736c6166
  42d93e:	mov    eax,0x5
  42d943:	add    rax,QWORD PTR [r15+0x28]
  42d947:	mov    QWORD PTR [r15+0x28],rax
  42d94b:	add    r12,0x1
  42d94f:	test   ebp,ebp
  42d951:	jne    42d830 <flatcc_json_printer_bool_vector_field@@Base+0x190>
  42d957:	cmp    BYTE PTR [r15+0x31],0x0
  42d95c:	mov    r14,QWORD PTR [r15+0x28]
  42d960:	je     42da02 <flatcc_json_printer_bool_vector_field@@Base+0x362>
  42d966:	lea    rax,[r14+0x1]
  42d96a:	mov    QWORD PTR [r15+0x28],rax
  42d96e:	mov    BYTE PTR [r14],0xa
  42d972:	movsxd rax,DWORD PTR [r15+0x38]
  42d976:	add    rax,0xffffffffffffffff
  42d97a:	mov    DWORD PTR [r15+0x38],eax
  42d97e:	movzx  r14d,BYTE PTR [r15+0x31]
  42d983:	imul   r14,rax
  42d987:	mov    rbx,QWORD PTR [r15+0x20]
  42d98b:	mov    rdi,QWORD PTR [r15+0x28]
  42d98f:	lea    rax,[rdi+r14*1]
  42d993:	cmp    rax,rbx
  42d996:	jbe    42d9ed <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42d998:	cmp    rdi,rbx
  42d99b:	jb     42d9ae <flatcc_json_printer_bool_vector_field@@Base+0x30e>
  42d99d:	xor    esi,esi
  42d99f:	mov    rdi,r15
  42d9a2:	call   QWORD PTR [r15+0x48]
  42d9a6:	mov    rbx,QWORD PTR [r15+0x20]
  42d9aa:	mov    rdi,QWORD PTR [r15+0x28]
  42d9ae:	sub    rbx,rdi
  42d9b1:	cmp    rbx,r14
  42d9b4:	jae    42d9ed <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42d9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d9c0:	mov    esi,0x20
  42d9c5:	mov    rdx,rbx
  42d9c8:	call   406080 <memset@plt>
  42d9cd:	add    QWORD PTR [r15+0x28],rbx
  42d9d1:	sub    r14,rbx
  42d9d4:	xor    esi,esi
  42d9d6:	mov    rdi,r15
  42d9d9:	call   QWORD PTR [r15+0x48]
  42d9dd:	mov    rbx,QWORD PTR [r15+0x20]
  42d9e1:	mov    rdi,QWORD PTR [r15+0x28]
  42d9e5:	sub    rbx,rdi
  42d9e8:	cmp    r14,rbx
  42d9eb:	ja     42d9c0 <flatcc_json_printer_bool_vector_field@@Base+0x320>
  42d9ed:	mov    esi,0x20
  42d9f2:	mov    rdx,r14
  42d9f5:	call   406080 <memset@plt>
  42d9fa:	add    r14,QWORD PTR [r15+0x28]
  42d9fe:	mov    QWORD PTR [r15+0x28],r14
  42da02:	lea    rax,[r14+0x1]
  42da06:	mov    QWORD PTR [r15+0x28],rax
  42da0a:	mov    BYTE PTR [r14],0x5d
  42da0e:	pop    rbx
  42da0f:	pop    r12
  42da11:	pop    r14
  42da13:	pop    r15
  42da15:	pop    rbp
  42da16:	ret    
  42da17:	nop    WORD PTR [rax+rax*1+0x0]

000000000042da20 <flatcc_json_printer_float_vector_field@@Base>:
  42da20:	push   rbp
  42da21:	push   r15
  42da23:	push   r14
  42da25:	push   r12
  42da27:	push   rbx
  42da28:	lea    eax,[rdx+rdx*1]
  42da2b:	add    eax,0x4
  42da2e:	cmp    eax,DWORD PTR [rsi+0x10]
  42da31:	jge    42dd4e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42da37:	mov    rdx,QWORD PTR [rsi+0x8]
  42da3b:	mov    eax,eax
  42da3d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42da42:	test   r12,r12
  42da45:	je     42dd4e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42da4b:	add    r12,QWORD PTR [rsi]
  42da4e:	je     42dd4e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42da54:	mov    r15,rdi
  42da57:	mov    eax,DWORD PTR [rsi+0x18]
  42da5a:	lea    edx,[rax+0x1]
  42da5d:	mov    DWORD PTR [rsi+0x18],edx
  42da60:	test   eax,eax
  42da62:	je     42da73 <flatcc_json_printer_float_vector_field@@Base+0x53>
  42da64:	mov    rax,QWORD PTR [r15+0x28]
  42da68:	lea    rdx,[rax+0x1]
  42da6c:	mov    QWORD PTR [r15+0x28],rdx
  42da70:	mov    BYTE PTR [rax],0x2c
  42da73:	mov    ebx,DWORD PTR [r12]
  42da77:	mov    ebp,DWORD PTR [r12+rbx*1]
  42da7b:	movsxd rdx,r8d
  42da7e:	mov    rdi,r15
  42da81:	mov    rsi,rcx
  42da84:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42da89:	add    DWORD PTR [r15+0x38],0x1
  42da8e:	mov    rax,QWORD PTR [r15+0x28]
  42da92:	lea    rcx,[rax+0x1]
  42da96:	mov    QWORD PTR [r15+0x28],rcx
  42da9a:	mov    BYTE PTR [rax],0x5b
  42da9d:	test   ebp,ebp
  42da9f:	je     42dc98 <flatcc_json_printer_float_vector_field@@Base+0x278>
  42daa5:	add    r12,rbx
  42daa8:	cmp    BYTE PTR [r15+0x31],0x0
  42daad:	mov    r14,QWORD PTR [r15+0x28]
  42dab1:	je     42db44 <flatcc_json_printer_float_vector_field@@Base+0x124>
  42dab7:	lea    rax,[r14+0x1]
  42dabb:	mov    QWORD PTR [r15+0x28],rax
  42dabf:	mov    BYTE PTR [r14],0xa
  42dac3:	movsxd rax,DWORD PTR [r15+0x38]
  42dac7:	movzx  r14d,BYTE PTR [r15+0x31]
  42dacc:	imul   r14,rax
  42dad0:	mov    rbx,QWORD PTR [r15+0x20]
  42dad4:	mov    rdi,QWORD PTR [r15+0x28]
  42dad8:	lea    rax,[rdi+r14*1]
  42dadc:	cmp    rax,rbx
  42dadf:	jbe    42db2d <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42dae1:	cmp    rdi,rbx
  42dae4:	jb     42daf7 <flatcc_json_printer_float_vector_field@@Base+0xd7>
  42dae6:	xor    esi,esi
  42dae8:	mov    rdi,r15
  42daeb:	call   QWORD PTR [r15+0x48]
  42daef:	mov    rbx,QWORD PTR [r15+0x20]
  42daf3:	mov    rdi,QWORD PTR [r15+0x28]
  42daf7:	sub    rbx,rdi
  42dafa:	cmp    rbx,r14
  42dafd:	jae    42db2d <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42daff:	nop
  42db00:	mov    esi,0x20
  42db05:	mov    rdx,rbx
  42db08:	call   406080 <memset@plt>
  42db0d:	add    QWORD PTR [r15+0x28],rbx
  42db11:	sub    r14,rbx
  42db14:	xor    esi,esi
  42db16:	mov    rdi,r15
  42db19:	call   QWORD PTR [r15+0x48]
  42db1d:	mov    rbx,QWORD PTR [r15+0x20]
  42db21:	mov    rdi,QWORD PTR [r15+0x28]
  42db25:	sub    rbx,rdi
  42db28:	cmp    r14,rbx
  42db2b:	ja     42db00 <flatcc_json_printer_float_vector_field@@Base+0xe0>
  42db2d:	mov    esi,0x20
  42db32:	mov    rdx,r14
  42db35:	call   406080 <memset@plt>
  42db3a:	add    r14,QWORD PTR [r15+0x28]
  42db3e:	mov    QWORD PTR [r15+0x28],r14
  42db42:	jmp    42db57 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42db44:	cmp    r14,QWORD PTR [r15+0x20]
  42db48:	jb     42db57 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42db4a:	xor    esi,esi
  42db4c:	mov    rdi,r15
  42db4f:	call   QWORD PTR [r15+0x48]
  42db53:	mov    r14,QWORD PTR [r15+0x28]
  42db57:	vmovss xmm0,DWORD PTR [r12+0x4]
  42db5e:	vcvtss2sd xmm0,xmm0,xmm0
  42db62:	mov    rdi,r14
  42db65:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42db6a:	cdqe   
  42db6c:	add    QWORD PTR [r15+0x28],rax
  42db70:	add    ebp,0xffffffff
  42db73:	je     42dc98 <flatcc_json_printer_float_vector_field@@Base+0x278>
  42db79:	add    r12,0x8
  42db7d:	mov    rax,QWORD PTR [r15+0x28]
  42db81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42db8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42db90:	add    ebp,0xffffffff
  42db93:	lea    rcx,[rax+0x1]
  42db97:	mov    QWORD PTR [r15+0x28],rcx
  42db9b:	mov    BYTE PTR [rax],0x2c
  42db9e:	cmp    BYTE PTR [r15+0x31],0x0
  42dba3:	mov    r14,QWORD PTR [r15+0x28]
  42dba7:	je     42dc50 <flatcc_json_printer_float_vector_field@@Base+0x230>
  42dbad:	lea    rax,[r14+0x1]
  42dbb1:	mov    QWORD PTR [r15+0x28],rax
  42dbb5:	mov    BYTE PTR [r14],0xa
  42dbb9:	movsxd rax,DWORD PTR [r15+0x38]
  42dbbd:	movzx  r14d,BYTE PTR [r15+0x31]
  42dbc2:	imul   r14,rax
  42dbc6:	mov    rbx,QWORD PTR [r15+0x20]
  42dbca:	mov    rdi,QWORD PTR [r15+0x28]
  42dbce:	lea    rax,[rdi+r14*1]
  42dbd2:	cmp    rax,rbx
  42dbd5:	jbe    42dc2d <flatcc_json_printer_float_vector_field@@Base+0x20d>
  42dbd7:	cmp    rdi,rbx
  42dbda:	jb     42dbed <flatcc_json_printer_float_vector_field@@Base+0x1cd>
  42dbdc:	xor    esi,esi
  42dbde:	mov    rdi,r15
  42dbe1:	call   QWORD PTR [r15+0x48]
  42dbe5:	mov    rbx,QWORD PTR [r15+0x20]
  42dbe9:	mov    rdi,QWORD PTR [r15+0x28]
  42dbed:	sub    rbx,rdi
  42dbf0:	cmp    rbx,r14
  42dbf3:	jae    42dc2d <flatcc_json_printer_float_vector_field@@Base+0x20d>
  42dbf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dbff:	nop
  42dc00:	mov    esi,0x20
  42dc05:	mov    rdx,rbx
  42dc08:	call   406080 <memset@plt>
  42dc0d:	add    QWORD PTR [r15+0x28],rbx
  42dc11:	sub    r14,rbx
  42dc14:	xor    esi,esi
  42dc16:	mov    rdi,r15
  42dc19:	call   QWORD PTR [r15+0x48]
  42dc1d:	mov    rbx,QWORD PTR [r15+0x20]
  42dc21:	mov    rdi,QWORD PTR [r15+0x28]
  42dc25:	sub    rbx,rdi
  42dc28:	cmp    r14,rbx
  42dc2b:	ja     42dc00 <flatcc_json_printer_float_vector_field@@Base+0x1e0>
  42dc2d:	mov    esi,0x20
  42dc32:	mov    rdx,r14
  42dc35:	call   406080 <memset@plt>
  42dc3a:	add    r14,QWORD PTR [r15+0x28]
  42dc3e:	mov    QWORD PTR [r15+0x28],r14
  42dc42:	jmp    42dc70 <flatcc_json_printer_float_vector_field@@Base+0x250>
  42dc44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc4e:	xchg   ax,ax
  42dc50:	cmp    r14,QWORD PTR [r15+0x20]
  42dc54:	jb     42dc70 <flatcc_json_printer_float_vector_field@@Base+0x250>
  42dc56:	xor    esi,esi
  42dc58:	mov    rdi,r15
  42dc5b:	call   QWORD PTR [r15+0x48]
  42dc5f:	mov    r14,QWORD PTR [r15+0x28]
  42dc63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc6d:	nop    DWORD PTR [rax]
  42dc70:	vmovss xmm0,DWORD PTR [r12]
  42dc76:	vcvtss2sd xmm0,xmm0,xmm0
  42dc7a:	mov    rdi,r14
  42dc7d:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42dc82:	cdqe   
  42dc84:	add    rax,QWORD PTR [r15+0x28]
  42dc88:	mov    QWORD PTR [r15+0x28],rax
  42dc8c:	add    r12,0x4
  42dc90:	test   ebp,ebp
  42dc92:	jne    42db90 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42dc98:	cmp    BYTE PTR [r15+0x31],0x0
  42dc9d:	mov    r14,QWORD PTR [r15+0x28]
  42dca1:	je     42dd42 <flatcc_json_printer_float_vector_field@@Base+0x322>
  42dca7:	lea    rax,[r14+0x1]
  42dcab:	mov    QWORD PTR [r15+0x28],rax
  42dcaf:	mov    BYTE PTR [r14],0xa
  42dcb3:	movsxd rax,DWORD PTR [r15+0x38]
  42dcb7:	add    rax,0xffffffffffffffff
  42dcbb:	mov    DWORD PTR [r15+0x38],eax
  42dcbf:	movzx  r14d,BYTE PTR [r15+0x31]
  42dcc4:	imul   r14,rax
  42dcc8:	mov    rbx,QWORD PTR [r15+0x20]
  42dccc:	mov    rdi,QWORD PTR [r15+0x28]
  42dcd0:	lea    rax,[rdi+r14*1]
  42dcd4:	cmp    rax,rbx
  42dcd7:	jbe    42dd2d <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42dcd9:	cmp    rdi,rbx
  42dcdc:	jb     42dcef <flatcc_json_printer_float_vector_field@@Base+0x2cf>
  42dcde:	xor    esi,esi
  42dce0:	mov    rdi,r15
  42dce3:	call   QWORD PTR [r15+0x48]
  42dce7:	mov    rbx,QWORD PTR [r15+0x20]
  42dceb:	mov    rdi,QWORD PTR [r15+0x28]
  42dcef:	sub    rbx,rdi
  42dcf2:	cmp    rbx,r14
  42dcf5:	jae    42dd2d <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42dcf7:	nop    WORD PTR [rax+rax*1+0x0]
  42dd00:	mov    esi,0x20
  42dd05:	mov    rdx,rbx
  42dd08:	call   406080 <memset@plt>
  42dd0d:	add    QWORD PTR [r15+0x28],rbx
  42dd11:	sub    r14,rbx
  42dd14:	xor    esi,esi
  42dd16:	mov    rdi,r15
  42dd19:	call   QWORD PTR [r15+0x48]
  42dd1d:	mov    rbx,QWORD PTR [r15+0x20]
  42dd21:	mov    rdi,QWORD PTR [r15+0x28]
  42dd25:	sub    rbx,rdi
  42dd28:	cmp    r14,rbx
  42dd2b:	ja     42dd00 <flatcc_json_printer_float_vector_field@@Base+0x2e0>
  42dd2d:	mov    esi,0x20
  42dd32:	mov    rdx,r14
  42dd35:	call   406080 <memset@plt>
  42dd3a:	add    r14,QWORD PTR [r15+0x28]
  42dd3e:	mov    QWORD PTR [r15+0x28],r14
  42dd42:	lea    rax,[r14+0x1]
  42dd46:	mov    QWORD PTR [r15+0x28],rax
  42dd4a:	mov    BYTE PTR [r14],0x5d
  42dd4e:	pop    rbx
  42dd4f:	pop    r12
  42dd51:	pop    r14
  42dd53:	pop    r15
  42dd55:	pop    rbp
  42dd56:	ret    
  42dd57:	nop    WORD PTR [rax+rax*1+0x0]

000000000042dd60 <flatcc_json_printer_double_vector_field@@Base>:
  42dd60:	push   rbp
  42dd61:	push   r15
  42dd63:	push   r14
  42dd65:	push   r12
  42dd67:	push   rbx
  42dd68:	lea    eax,[rdx+rdx*1]
  42dd6b:	add    eax,0x4
  42dd6e:	cmp    eax,DWORD PTR [rsi+0x10]
  42dd71:	jge    42e07e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42dd77:	mov    rdx,QWORD PTR [rsi+0x8]
  42dd7b:	mov    eax,eax
  42dd7d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42dd82:	test   r12,r12
  42dd85:	je     42e07e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42dd8b:	add    r12,QWORD PTR [rsi]
  42dd8e:	je     42e07e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42dd94:	mov    r15,rdi
  42dd97:	mov    eax,DWORD PTR [rsi+0x18]
  42dd9a:	lea    edx,[rax+0x1]
  42dd9d:	mov    DWORD PTR [rsi+0x18],edx
  42dda0:	test   eax,eax
  42dda2:	je     42ddb3 <flatcc_json_printer_double_vector_field@@Base+0x53>
  42dda4:	mov    rax,QWORD PTR [r15+0x28]
  42dda8:	lea    rdx,[rax+0x1]
  42ddac:	mov    QWORD PTR [r15+0x28],rdx
  42ddb0:	mov    BYTE PTR [rax],0x2c
  42ddb3:	mov    ebx,DWORD PTR [r12]
  42ddb7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42ddbb:	movsxd rdx,r8d
  42ddbe:	mov    rdi,r15
  42ddc1:	mov    rsi,rcx
  42ddc4:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42ddc9:	add    DWORD PTR [r15+0x38],0x1
  42ddce:	mov    rax,QWORD PTR [r15+0x28]
  42ddd2:	lea    rcx,[rax+0x1]
  42ddd6:	mov    QWORD PTR [r15+0x28],rcx
  42ddda:	mov    BYTE PTR [rax],0x5b
  42dddd:	test   ebp,ebp
  42dddf:	je     42dfc4 <flatcc_json_printer_double_vector_field@@Base+0x264>
  42dde5:	add    r12,rbx
  42dde8:	cmp    BYTE PTR [r15+0x31],0x0
  42dded:	mov    r14,QWORD PTR [r15+0x28]
  42ddf1:	je     42de84 <flatcc_json_printer_double_vector_field@@Base+0x124>
  42ddf7:	lea    rax,[r14+0x1]
  42ddfb:	mov    QWORD PTR [r15+0x28],rax
  42ddff:	mov    BYTE PTR [r14],0xa
  42de03:	movsxd rax,DWORD PTR [r15+0x38]
  42de07:	movzx  r14d,BYTE PTR [r15+0x31]
  42de0c:	imul   r14,rax
  42de10:	mov    rbx,QWORD PTR [r15+0x20]
  42de14:	mov    rdi,QWORD PTR [r15+0x28]
  42de18:	lea    rax,[rdi+r14*1]
  42de1c:	cmp    rax,rbx
  42de1f:	jbe    42de6d <flatcc_json_printer_double_vector_field@@Base+0x10d>
  42de21:	cmp    rdi,rbx
  42de24:	jb     42de37 <flatcc_json_printer_double_vector_field@@Base+0xd7>
  42de26:	xor    esi,esi
  42de28:	mov    rdi,r15
  42de2b:	call   QWORD PTR [r15+0x48]
  42de2f:	mov    rbx,QWORD PTR [r15+0x20]
  42de33:	mov    rdi,QWORD PTR [r15+0x28]
  42de37:	sub    rbx,rdi
  42de3a:	cmp    rbx,r14
  42de3d:	jae    42de6d <flatcc_json_printer_double_vector_field@@Base+0x10d>
  42de3f:	nop
  42de40:	mov    esi,0x20
  42de45:	mov    rdx,rbx
  42de48:	call   406080 <memset@plt>
  42de4d:	add    QWORD PTR [r15+0x28],rbx
  42de51:	sub    r14,rbx
  42de54:	xor    esi,esi
  42de56:	mov    rdi,r15
  42de59:	call   QWORD PTR [r15+0x48]
  42de5d:	mov    rbx,QWORD PTR [r15+0x20]
  42de61:	mov    rdi,QWORD PTR [r15+0x28]
  42de65:	sub    rbx,rdi
  42de68:	cmp    r14,rbx
  42de6b:	ja     42de40 <flatcc_json_printer_double_vector_field@@Base+0xe0>
  42de6d:	mov    esi,0x20
  42de72:	mov    rdx,r14
  42de75:	call   406080 <memset@plt>
  42de7a:	add    r14,QWORD PTR [r15+0x28]
  42de7e:	mov    QWORD PTR [r15+0x28],r14
  42de82:	jmp    42de97 <flatcc_json_printer_double_vector_field@@Base+0x137>
  42de84:	cmp    r14,QWORD PTR [r15+0x20]
  42de88:	jb     42de97 <flatcc_json_printer_double_vector_field@@Base+0x137>
  42de8a:	xor    esi,esi
  42de8c:	mov    rdi,r15
  42de8f:	call   QWORD PTR [r15+0x48]
  42de93:	mov    r14,QWORD PTR [r15+0x28]
  42de97:	vmovsd xmm0,QWORD PTR [r12+0x4]
  42de9e:	mov    rdi,r14
  42dea1:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42dea6:	cdqe   
  42dea8:	add    QWORD PTR [r15+0x28],rax
  42deac:	add    ebp,0xffffffff
  42deaf:	je     42dfc4 <flatcc_json_printer_double_vector_field@@Base+0x264>
  42deb5:	add    r12,0xc
  42deb9:	mov    rax,QWORD PTR [r15+0x28]
  42debd:	nop    DWORD PTR [rax]
  42dec0:	add    ebp,0xffffffff
  42dec3:	lea    rcx,[rax+0x1]
  42dec7:	mov    QWORD PTR [r15+0x28],rcx
  42decb:	mov    BYTE PTR [rax],0x2c
  42dece:	cmp    BYTE PTR [r15+0x31],0x0
  42ded3:	mov    r14,QWORD PTR [r15+0x28]
  42ded7:	je     42df80 <flatcc_json_printer_double_vector_field@@Base+0x220>
  42dedd:	lea    rax,[r14+0x1]
  42dee1:	mov    QWORD PTR [r15+0x28],rax
  42dee5:	mov    BYTE PTR [r14],0xa
  42dee9:	movsxd rax,DWORD PTR [r15+0x38]
  42deed:	movzx  r14d,BYTE PTR [r15+0x31]
  42def2:	imul   r14,rax
  42def6:	mov    rbx,QWORD PTR [r15+0x20]
  42defa:	mov    rdi,QWORD PTR [r15+0x28]
  42defe:	lea    rax,[rdi+r14*1]
  42df02:	cmp    rax,rbx
  42df05:	jbe    42df5d <flatcc_json_printer_double_vector_field@@Base+0x1fd>
  42df07:	cmp    rdi,rbx
  42df0a:	jb     42df1d <flatcc_json_printer_double_vector_field@@Base+0x1bd>
  42df0c:	xor    esi,esi
  42df0e:	mov    rdi,r15
  42df11:	call   QWORD PTR [r15+0x48]
  42df15:	mov    rbx,QWORD PTR [r15+0x20]
  42df19:	mov    rdi,QWORD PTR [r15+0x28]
  42df1d:	sub    rbx,rdi
  42df20:	cmp    rbx,r14
  42df23:	jae    42df5d <flatcc_json_printer_double_vector_field@@Base+0x1fd>
  42df25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df2f:	nop
  42df30:	mov    esi,0x20
  42df35:	mov    rdx,rbx
  42df38:	call   406080 <memset@plt>
  42df3d:	add    QWORD PTR [r15+0x28],rbx
  42df41:	sub    r14,rbx
  42df44:	xor    esi,esi
  42df46:	mov    rdi,r15
  42df49:	call   QWORD PTR [r15+0x48]
  42df4d:	mov    rbx,QWORD PTR [r15+0x20]
  42df51:	mov    rdi,QWORD PTR [r15+0x28]
  42df55:	sub    rbx,rdi
  42df58:	cmp    r14,rbx
  42df5b:	ja     42df30 <flatcc_json_printer_double_vector_field@@Base+0x1d0>
  42df5d:	mov    esi,0x20
  42df62:	mov    rdx,r14
  42df65:	call   406080 <memset@plt>
  42df6a:	add    r14,QWORD PTR [r15+0x28]
  42df6e:	mov    QWORD PTR [r15+0x28],r14
  42df72:	jmp    42dfa0 <flatcc_json_printer_double_vector_field@@Base+0x240>
  42df74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df7e:	xchg   ax,ax
  42df80:	cmp    r14,QWORD PTR [r15+0x20]
  42df84:	jb     42dfa0 <flatcc_json_printer_double_vector_field@@Base+0x240>
  42df86:	xor    esi,esi
  42df88:	mov    rdi,r15
  42df8b:	call   QWORD PTR [r15+0x48]
  42df8f:	mov    r14,QWORD PTR [r15+0x28]
  42df93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df9d:	nop    DWORD PTR [rax]
  42dfa0:	vmovsd xmm0,QWORD PTR [r12]
  42dfa6:	mov    rdi,r14
  42dfa9:	call   426ca0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42dfae:	cdqe   
  42dfb0:	add    rax,QWORD PTR [r15+0x28]
  42dfb4:	mov    QWORD PTR [r15+0x28],rax
  42dfb8:	add    r12,0x8
  42dfbc:	test   ebp,ebp
  42dfbe:	jne    42dec0 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42dfc4:	cmp    BYTE PTR [r15+0x31],0x0
  42dfc9:	mov    r14,QWORD PTR [r15+0x28]
  42dfcd:	je     42e072 <flatcc_json_printer_double_vector_field@@Base+0x312>
  42dfd3:	lea    rax,[r14+0x1]
  42dfd7:	mov    QWORD PTR [r15+0x28],rax
  42dfdb:	mov    BYTE PTR [r14],0xa
  42dfdf:	movsxd rax,DWORD PTR [r15+0x38]
  42dfe3:	add    rax,0xffffffffffffffff
  42dfe7:	mov    DWORD PTR [r15+0x38],eax
  42dfeb:	movzx  r14d,BYTE PTR [r15+0x31]
  42dff0:	imul   r14,rax
  42dff4:	mov    rbx,QWORD PTR [r15+0x20]
  42dff8:	mov    rdi,QWORD PTR [r15+0x28]
  42dffc:	lea    rax,[rdi+r14*1]
  42e000:	cmp    rax,rbx
  42e003:	jbe    42e05d <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  42e005:	cmp    rdi,rbx
  42e008:	jb     42e01b <flatcc_json_printer_double_vector_field@@Base+0x2bb>
  42e00a:	xor    esi,esi
  42e00c:	mov    rdi,r15
  42e00f:	call   QWORD PTR [r15+0x48]
  42e013:	mov    rbx,QWORD PTR [r15+0x20]
  42e017:	mov    rdi,QWORD PTR [r15+0x28]
  42e01b:	sub    rbx,rdi
  42e01e:	cmp    rbx,r14
  42e021:	jae    42e05d <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  42e023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e02d:	nop    DWORD PTR [rax]
  42e030:	mov    esi,0x20
  42e035:	mov    rdx,rbx
  42e038:	call   406080 <memset@plt>
  42e03d:	add    QWORD PTR [r15+0x28],rbx
  42e041:	sub    r14,rbx
  42e044:	xor    esi,esi
  42e046:	mov    rdi,r15
  42e049:	call   QWORD PTR [r15+0x48]
  42e04d:	mov    rbx,QWORD PTR [r15+0x20]
  42e051:	mov    rdi,QWORD PTR [r15+0x28]
  42e055:	sub    rbx,rdi
  42e058:	cmp    r14,rbx
  42e05b:	ja     42e030 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
  42e05d:	mov    esi,0x20
  42e062:	mov    rdx,r14
  42e065:	call   406080 <memset@plt>
  42e06a:	add    r14,QWORD PTR [r15+0x28]
  42e06e:	mov    QWORD PTR [r15+0x28],r14
  42e072:	lea    rax,[r14+0x1]
  42e076:	mov    QWORD PTR [r15+0x28],rax
  42e07a:	mov    BYTE PTR [r14],0x5d
  42e07e:	pop    rbx
  42e07f:	pop    r12
  42e081:	pop    r14
  42e083:	pop    r15
  42e085:	pop    rbp
  42e086:	ret    
  42e087:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e090 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  42e090:	push   rbp
  42e091:	push   r15
  42e093:	push   r14
  42e095:	push   r13
  42e097:	push   r12
  42e099:	push   rbx
  42e09a:	push   rax
  42e09b:	mov    r12,rdi
  42e09e:	cmp    BYTE PTR [rdi+0x33],0x0
  42e0a2:	je     42e0ba <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a>
  42e0a4:	mov    rdi,r12
  42e0a7:	add    rsp,0x8
  42e0ab:	pop    rbx
  42e0ac:	pop    r12
  42e0ae:	pop    r13
  42e0b0:	pop    r14
  42e0b2:	pop    r15
  42e0b4:	pop    rbp
  42e0b5:	jmp    42b1a0 <flatcc_json_printer_utype_vector_field@@Base>
  42e0ba:	lea    eax,[rdx+rdx*1]
  42e0bd:	add    eax,0x4
  42e0c0:	cmp    eax,DWORD PTR [rsi+0x10]
  42e0c3:	jge    42e3e5 <flatcc_json_printer_utype_enum_vector_field@@Base+0x355>
  42e0c9:	mov    rdx,QWORD PTR [rsi+0x8]
  42e0cd:	mov    eax,eax
  42e0cf:	movzx  r13d,WORD PTR [rdx+rax*1]
  42e0d4:	test   r13,r13
  42e0d7:	je     42e3e5 <flatcc_json_printer_utype_enum_vector_field@@Base+0x355>
  42e0dd:	add    r13,QWORD PTR [rsi]
  42e0e0:	je     42e3e5 <flatcc_json_printer_utype_enum_vector_field@@Base+0x355>
  42e0e6:	mov    r14,r9
  42e0e9:	mov    eax,DWORD PTR [rsi+0x18]
  42e0ec:	lea    edx,[rax+0x1]
  42e0ef:	mov    DWORD PTR [rsi+0x18],edx
  42e0f2:	test   eax,eax
  42e0f4:	je     42e107 <flatcc_json_printer_utype_enum_vector_field@@Base+0x77>
  42e0f6:	mov    rax,QWORD PTR [r12+0x28]
  42e0fb:	lea    rdx,[rax+0x1]
  42e0ff:	mov    QWORD PTR [r12+0x28],rdx
  42e104:	mov    BYTE PTR [rax],0x2c
  42e107:	mov    ebx,DWORD PTR [r13+0x0]
  42e10b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42e110:	movsxd rdx,r8d
  42e113:	mov    rdi,r12
  42e116:	mov    rsi,rcx
  42e119:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42e11e:	add    DWORD PTR [r12+0x38],0x1
  42e124:	mov    rax,QWORD PTR [r12+0x28]
  42e129:	lea    rcx,[rax+0x1]
  42e12d:	mov    QWORD PTR [r12+0x28],rcx
  42e132:	mov    BYTE PTR [rax],0x5b
  42e135:	test   ebp,ebp
  42e137:	je     42e317 <flatcc_json_printer_utype_enum_vector_field@@Base+0x287>
  42e13d:	add    r13,rbx
  42e140:	cmp    BYTE PTR [r12+0x31],0x0
  42e146:	mov    rax,QWORD PTR [r12+0x28]
  42e14b:	je     42e1e5 <flatcc_json_printer_utype_enum_vector_field@@Base+0x155>
  42e151:	lea    rcx,[rax+0x1]
  42e155:	mov    QWORD PTR [r12+0x28],rcx
  42e15a:	mov    BYTE PTR [rax],0xa
  42e15d:	movsxd rax,DWORD PTR [r12+0x38]
  42e162:	movzx  r15d,BYTE PTR [r12+0x31]
  42e168:	imul   r15,rax
  42e16c:	mov    rbx,QWORD PTR [r12+0x20]
  42e171:	mov    rdi,QWORD PTR [r12+0x28]
  42e176:	lea    rax,[rdi+r15*1]
  42e17a:	cmp    rax,rbx
  42e17d:	jbe    42e1d1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  42e17f:	cmp    rdi,rbx
  42e182:	jb     42e198 <flatcc_json_printer_utype_enum_vector_field@@Base+0x108>
  42e184:	xor    esi,esi
  42e186:	mov    rdi,r12
  42e189:	call   QWORD PTR [r12+0x48]
  42e18e:	mov    rbx,QWORD PTR [r12+0x20]
  42e193:	mov    rdi,QWORD PTR [r12+0x28]
  42e198:	sub    rbx,rdi
  42e19b:	cmp    rbx,r15
  42e19e:	jae    42e1d1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  42e1a0:	mov    esi,0x20
  42e1a5:	mov    rdx,rbx
  42e1a8:	call   406080 <memset@plt>
  42e1ad:	add    QWORD PTR [r12+0x28],rbx
  42e1b2:	sub    r15,rbx
  42e1b5:	xor    esi,esi
  42e1b7:	mov    rdi,r12
  42e1ba:	call   QWORD PTR [r12+0x48]
  42e1bf:	mov    rbx,QWORD PTR [r12+0x20]
  42e1c4:	mov    rdi,QWORD PTR [r12+0x28]
  42e1c9:	sub    rbx,rdi
  42e1cc:	cmp    r15,rbx
  42e1cf:	ja     42e1a0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x110>
  42e1d1:	mov    esi,0x20
  42e1d6:	mov    rdx,r15
  42e1d9:	call   406080 <memset@plt>
  42e1de:	add    QWORD PTR [r12+0x28],r15
  42e1e3:	jmp    42e1f6 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  42e1e5:	cmp    rax,QWORD PTR [r12+0x20]
  42e1ea:	jb     42e1f6 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  42e1ec:	xor    esi,esi
  42e1ee:	mov    rdi,r12
  42e1f1:	call   QWORD PTR [r12+0x48]
  42e1f6:	movzx  esi,BYTE PTR [r13+0x4]
  42e1fb:	mov    rdi,r12
  42e1fe:	call   r14
  42e201:	add    ebp,0xffffffff
  42e204:	je     42e317 <flatcc_json_printer_utype_enum_vector_field@@Base+0x287>
  42e20a:	add    r13,0x5
  42e20e:	xchg   ax,ax
  42e210:	add    ebp,0xffffffff
  42e213:	mov    rax,QWORD PTR [r12+0x28]
  42e218:	lea    rcx,[rax+0x1]
  42e21c:	mov    QWORD PTR [r12+0x28],rcx
  42e221:	mov    BYTE PTR [rax],0x2c
  42e224:	cmp    BYTE PTR [r12+0x31],0x0
  42e22a:	mov    rax,QWORD PTR [r12+0x28]
  42e22f:	je     42e2e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x250>
  42e235:	lea    rcx,[rax+0x1]
  42e239:	mov    QWORD PTR [r12+0x28],rcx
  42e23e:	mov    BYTE PTR [rax],0xa
  42e241:	movsxd rax,DWORD PTR [r12+0x38]
  42e246:	movzx  r15d,BYTE PTR [r12+0x31]
  42e24c:	imul   r15,rax
  42e250:	mov    rbx,QWORD PTR [r12+0x20]
  42e255:	mov    rdi,QWORD PTR [r12+0x28]
  42e25a:	lea    rax,[rdi+r15*1]
  42e25e:	cmp    rax,rbx
  42e261:	jbe    42e2c1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x231>
  42e263:	cmp    rdi,rbx
  42e266:	jb     42e27c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
  42e268:	xor    esi,esi
  42e26a:	mov    rdi,r12
  42e26d:	call   QWORD PTR [r12+0x48]
  42e272:	mov    rbx,QWORD PTR [r12+0x20]
  42e277:	mov    rdi,QWORD PTR [r12+0x28]
  42e27c:	sub    rbx,rdi
  42e27f:	cmp    rbx,r15
  42e282:	jae    42e2c1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x231>
  42e284:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e28e:	xchg   ax,ax
  42e290:	mov    esi,0x20
  42e295:	mov    rdx,rbx
  42e298:	call   406080 <memset@plt>
  42e29d:	add    QWORD PTR [r12+0x28],rbx
  42e2a2:	sub    r15,rbx
  42e2a5:	xor    esi,esi
  42e2a7:	mov    rdi,r12
  42e2aa:	call   QWORD PTR [r12+0x48]
  42e2af:	mov    rbx,QWORD PTR [r12+0x20]
  42e2b4:	mov    rdi,QWORD PTR [r12+0x28]
  42e2b9:	sub    rbx,rdi
  42e2bc:	cmp    r15,rbx
  42e2bf:	ja     42e290 <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
  42e2c1:	mov    esi,0x20
  42e2c6:	mov    rdx,r15
  42e2c9:	call   406080 <memset@plt>
  42e2ce:	add    QWORD PTR [r12+0x28],r15
  42e2d3:	jmp    42e300 <flatcc_json_printer_utype_enum_vector_field@@Base+0x270>
  42e2d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e2df:	nop
  42e2e0:	cmp    rax,QWORD PTR [r12+0x20]
  42e2e5:	jb     42e300 <flatcc_json_printer_utype_enum_vector_field@@Base+0x270>
  42e2e7:	xor    esi,esi
  42e2e9:	mov    rdi,r12
  42e2ec:	call   QWORD PTR [r12+0x48]
  42e2f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e2fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e300:	movzx  esi,BYTE PTR [r13+0x0]
  42e305:	mov    rdi,r12
  42e308:	call   r14
  42e30b:	add    r13,0x1
  42e30f:	test   ebp,ebp
  42e311:	jne    42e210 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42e317:	cmp    BYTE PTR [r12+0x31],0x0
  42e31d:	mov    r14,QWORD PTR [r12+0x28]
  42e322:	je     42e3d8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x348>
  42e328:	lea    rax,[r14+0x1]
  42e32c:	mov    QWORD PTR [r12+0x28],rax
  42e331:	mov    BYTE PTR [r14],0xa
  42e335:	movsxd rax,DWORD PTR [r12+0x38]
  42e33a:	add    rax,0xffffffffffffffff
  42e33e:	mov    DWORD PTR [r12+0x38],eax
  42e343:	movzx  r14d,BYTE PTR [r12+0x31]
  42e349:	imul   r14,rax
  42e34d:	mov    rbx,QWORD PTR [r12+0x20]
  42e352:	mov    rdi,QWORD PTR [r12+0x28]
  42e357:	lea    rax,[rdi+r14*1]
  42e35b:	cmp    rax,rbx
  42e35e:	jbe    42e3c1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x331>
  42e360:	cmp    rdi,rbx
  42e363:	jb     42e379 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e9>
  42e365:	xor    esi,esi
  42e367:	mov    rdi,r12
  42e36a:	call   QWORD PTR [r12+0x48]
  42e36f:	mov    rbx,QWORD PTR [r12+0x20]
  42e374:	mov    rdi,QWORD PTR [r12+0x28]
  42e379:	sub    rbx,rdi
  42e37c:	cmp    rbx,r14
  42e37f:	jae    42e3c1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x331>
  42e381:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e38b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e390:	mov    esi,0x20
  42e395:	mov    rdx,rbx
  42e398:	call   406080 <memset@plt>
  42e39d:	add    QWORD PTR [r12+0x28],rbx
  42e3a2:	sub    r14,rbx
  42e3a5:	xor    esi,esi
  42e3a7:	mov    rdi,r12
  42e3aa:	call   QWORD PTR [r12+0x48]
  42e3af:	mov    rbx,QWORD PTR [r12+0x20]
  42e3b4:	mov    rdi,QWORD PTR [r12+0x28]
  42e3b9:	sub    rbx,rdi
  42e3bc:	cmp    r14,rbx
  42e3bf:	ja     42e390 <flatcc_json_printer_utype_enum_vector_field@@Base+0x300>
  42e3c1:	mov    esi,0x20
  42e3c6:	mov    rdx,r14
  42e3c9:	call   406080 <memset@plt>
  42e3ce:	add    r14,QWORD PTR [r12+0x28]
  42e3d3:	mov    QWORD PTR [r12+0x28],r14
  42e3d8:	lea    rax,[r14+0x1]
  42e3dc:	mov    QWORD PTR [r12+0x28],rax
  42e3e1:	mov    BYTE PTR [r14],0x5d
  42e3e5:	add    rsp,0x8
  42e3e9:	pop    rbx
  42e3ea:	pop    r12
  42e3ec:	pop    r13
  42e3ee:	pop    r14
  42e3f0:	pop    r15
  42e3f2:	pop    rbp
  42e3f3:	ret    
  42e3f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e3fe:	xchg   ax,ax

000000000042e400 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  42e400:	push   rbp
  42e401:	push   r15
  42e403:	push   r14
  42e405:	push   r13
  42e407:	push   r12
  42e409:	push   rbx
  42e40a:	push   rax
  42e40b:	mov    r12,rdi
  42e40e:	cmp    BYTE PTR [rdi+0x33],0x0
  42e412:	je     42e42a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a>
  42e414:	mov    rdi,r12
  42e417:	add    rsp,0x8
  42e41b:	pop    rbx
  42e41c:	pop    r12
  42e41e:	pop    r13
  42e420:	pop    r14
  42e422:	pop    r15
  42e424:	pop    rbp
  42e425:	jmp    42b5d0 <flatcc_json_printer_uint8_vector_field@@Base>
  42e42a:	lea    eax,[rdx+rdx*1]
  42e42d:	add    eax,0x4
  42e430:	cmp    eax,DWORD PTR [rsi+0x10]
  42e433:	jge    42e755 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x355>
  42e439:	mov    rdx,QWORD PTR [rsi+0x8]
  42e43d:	mov    eax,eax
  42e43f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42e444:	test   r13,r13
  42e447:	je     42e755 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x355>
  42e44d:	add    r13,QWORD PTR [rsi]
  42e450:	je     42e755 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x355>
  42e456:	mov    r14,r9
  42e459:	mov    eax,DWORD PTR [rsi+0x18]
  42e45c:	lea    edx,[rax+0x1]
  42e45f:	mov    DWORD PTR [rsi+0x18],edx
  42e462:	test   eax,eax
  42e464:	je     42e477 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x77>
  42e466:	mov    rax,QWORD PTR [r12+0x28]
  42e46b:	lea    rdx,[rax+0x1]
  42e46f:	mov    QWORD PTR [r12+0x28],rdx
  42e474:	mov    BYTE PTR [rax],0x2c
  42e477:	mov    ebx,DWORD PTR [r13+0x0]
  42e47b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42e480:	movsxd rdx,r8d
  42e483:	mov    rdi,r12
  42e486:	mov    rsi,rcx
  42e489:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42e48e:	add    DWORD PTR [r12+0x38],0x1
  42e494:	mov    rax,QWORD PTR [r12+0x28]
  42e499:	lea    rcx,[rax+0x1]
  42e49d:	mov    QWORD PTR [r12+0x28],rcx
  42e4a2:	mov    BYTE PTR [rax],0x5b
  42e4a5:	test   ebp,ebp
  42e4a7:	je     42e687 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x287>
  42e4ad:	add    r13,rbx
  42e4b0:	cmp    BYTE PTR [r12+0x31],0x0
  42e4b6:	mov    rax,QWORD PTR [r12+0x28]
  42e4bb:	je     42e555 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x155>
  42e4c1:	lea    rcx,[rax+0x1]
  42e4c5:	mov    QWORD PTR [r12+0x28],rcx
  42e4ca:	mov    BYTE PTR [rax],0xa
  42e4cd:	movsxd rax,DWORD PTR [r12+0x38]
  42e4d2:	movzx  r15d,BYTE PTR [r12+0x31]
  42e4d8:	imul   r15,rax
  42e4dc:	mov    rbx,QWORD PTR [r12+0x20]
  42e4e1:	mov    rdi,QWORD PTR [r12+0x28]
  42e4e6:	lea    rax,[rdi+r15*1]
  42e4ea:	cmp    rax,rbx
  42e4ed:	jbe    42e541 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  42e4ef:	cmp    rdi,rbx
  42e4f2:	jb     42e508 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x108>
  42e4f4:	xor    esi,esi
  42e4f6:	mov    rdi,r12
  42e4f9:	call   QWORD PTR [r12+0x48]
  42e4fe:	mov    rbx,QWORD PTR [r12+0x20]
  42e503:	mov    rdi,QWORD PTR [r12+0x28]
  42e508:	sub    rbx,rdi
  42e50b:	cmp    rbx,r15
  42e50e:	jae    42e541 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  42e510:	mov    esi,0x20
  42e515:	mov    rdx,rbx
  42e518:	call   406080 <memset@plt>
  42e51d:	add    QWORD PTR [r12+0x28],rbx
  42e522:	sub    r15,rbx
  42e525:	xor    esi,esi
  42e527:	mov    rdi,r12
  42e52a:	call   QWORD PTR [r12+0x48]
  42e52f:	mov    rbx,QWORD PTR [r12+0x20]
  42e534:	mov    rdi,QWORD PTR [r12+0x28]
  42e539:	sub    rbx,rdi
  42e53c:	cmp    r15,rbx
  42e53f:	ja     42e510 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
  42e541:	mov    esi,0x20
  42e546:	mov    rdx,r15
  42e549:	call   406080 <memset@plt>
  42e54e:	add    QWORD PTR [r12+0x28],r15
  42e553:	jmp    42e566 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  42e555:	cmp    rax,QWORD PTR [r12+0x20]
  42e55a:	jb     42e566 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  42e55c:	xor    esi,esi
  42e55e:	mov    rdi,r12
  42e561:	call   QWORD PTR [r12+0x48]
  42e566:	movzx  esi,BYTE PTR [r13+0x4]
  42e56b:	mov    rdi,r12
  42e56e:	call   r14
  42e571:	add    ebp,0xffffffff
  42e574:	je     42e687 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x287>
  42e57a:	add    r13,0x5
  42e57e:	xchg   ax,ax
  42e580:	add    ebp,0xffffffff
  42e583:	mov    rax,QWORD PTR [r12+0x28]
  42e588:	lea    rcx,[rax+0x1]
  42e58c:	mov    QWORD PTR [r12+0x28],rcx
  42e591:	mov    BYTE PTR [rax],0x2c
  42e594:	cmp    BYTE PTR [r12+0x31],0x0
  42e59a:	mov    rax,QWORD PTR [r12+0x28]
  42e59f:	je     42e650 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x250>
  42e5a5:	lea    rcx,[rax+0x1]
  42e5a9:	mov    QWORD PTR [r12+0x28],rcx
  42e5ae:	mov    BYTE PTR [rax],0xa
  42e5b1:	movsxd rax,DWORD PTR [r12+0x38]
  42e5b6:	movzx  r15d,BYTE PTR [r12+0x31]
  42e5bc:	imul   r15,rax
  42e5c0:	mov    rbx,QWORD PTR [r12+0x20]
  42e5c5:	mov    rdi,QWORD PTR [r12+0x28]
  42e5ca:	lea    rax,[rdi+r15*1]
  42e5ce:	cmp    rax,rbx
  42e5d1:	jbe    42e631 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x231>
  42e5d3:	cmp    rdi,rbx
  42e5d6:	jb     42e5ec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
  42e5d8:	xor    esi,esi
  42e5da:	mov    rdi,r12
  42e5dd:	call   QWORD PTR [r12+0x48]
  42e5e2:	mov    rbx,QWORD PTR [r12+0x20]
  42e5e7:	mov    rdi,QWORD PTR [r12+0x28]
  42e5ec:	sub    rbx,rdi
  42e5ef:	cmp    rbx,r15
  42e5f2:	jae    42e631 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x231>
  42e5f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e5fe:	xchg   ax,ax
  42e600:	mov    esi,0x20
  42e605:	mov    rdx,rbx
  42e608:	call   406080 <memset@plt>
  42e60d:	add    QWORD PTR [r12+0x28],rbx
  42e612:	sub    r15,rbx
  42e615:	xor    esi,esi
  42e617:	mov    rdi,r12
  42e61a:	call   QWORD PTR [r12+0x48]
  42e61f:	mov    rbx,QWORD PTR [r12+0x20]
  42e624:	mov    rdi,QWORD PTR [r12+0x28]
  42e629:	sub    rbx,rdi
  42e62c:	cmp    r15,rbx
  42e62f:	ja     42e600 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
  42e631:	mov    esi,0x20
  42e636:	mov    rdx,r15
  42e639:	call   406080 <memset@plt>
  42e63e:	add    QWORD PTR [r12+0x28],r15
  42e643:	jmp    42e670 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
  42e645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e64f:	nop
  42e650:	cmp    rax,QWORD PTR [r12+0x20]
  42e655:	jb     42e670 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
  42e657:	xor    esi,esi
  42e659:	mov    rdi,r12
  42e65c:	call   QWORD PTR [r12+0x48]
  42e661:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e66b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e670:	movzx  esi,BYTE PTR [r13+0x0]
  42e675:	mov    rdi,r12
  42e678:	call   r14
  42e67b:	add    r13,0x1
  42e67f:	test   ebp,ebp
  42e681:	jne    42e580 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42e687:	cmp    BYTE PTR [r12+0x31],0x0
  42e68d:	mov    r14,QWORD PTR [r12+0x28]
  42e692:	je     42e748 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x348>
  42e698:	lea    rax,[r14+0x1]
  42e69c:	mov    QWORD PTR [r12+0x28],rax
  42e6a1:	mov    BYTE PTR [r14],0xa
  42e6a5:	movsxd rax,DWORD PTR [r12+0x38]
  42e6aa:	add    rax,0xffffffffffffffff
  42e6ae:	mov    DWORD PTR [r12+0x38],eax
  42e6b3:	movzx  r14d,BYTE PTR [r12+0x31]
  42e6b9:	imul   r14,rax
  42e6bd:	mov    rbx,QWORD PTR [r12+0x20]
  42e6c2:	mov    rdi,QWORD PTR [r12+0x28]
  42e6c7:	lea    rax,[rdi+r14*1]
  42e6cb:	cmp    rax,rbx
  42e6ce:	jbe    42e731 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x331>
  42e6d0:	cmp    rdi,rbx
  42e6d3:	jb     42e6e9 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e9>
  42e6d5:	xor    esi,esi
  42e6d7:	mov    rdi,r12
  42e6da:	call   QWORD PTR [r12+0x48]
  42e6df:	mov    rbx,QWORD PTR [r12+0x20]
  42e6e4:	mov    rdi,QWORD PTR [r12+0x28]
  42e6e9:	sub    rbx,rdi
  42e6ec:	cmp    rbx,r14
  42e6ef:	jae    42e731 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x331>
  42e6f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e700:	mov    esi,0x20
  42e705:	mov    rdx,rbx
  42e708:	call   406080 <memset@plt>
  42e70d:	add    QWORD PTR [r12+0x28],rbx
  42e712:	sub    r14,rbx
  42e715:	xor    esi,esi
  42e717:	mov    rdi,r12
  42e71a:	call   QWORD PTR [r12+0x48]
  42e71f:	mov    rbx,QWORD PTR [r12+0x20]
  42e724:	mov    rdi,QWORD PTR [r12+0x28]
  42e729:	sub    rbx,rdi
  42e72c:	cmp    r14,rbx
  42e72f:	ja     42e700 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x300>
  42e731:	mov    esi,0x20
  42e736:	mov    rdx,r14
  42e739:	call   406080 <memset@plt>
  42e73e:	add    r14,QWORD PTR [r12+0x28]
  42e743:	mov    QWORD PTR [r12+0x28],r14
  42e748:	lea    rax,[r14+0x1]
  42e74c:	mov    QWORD PTR [r12+0x28],rax
  42e751:	mov    BYTE PTR [r14],0x5d
  42e755:	add    rsp,0x8
  42e759:	pop    rbx
  42e75a:	pop    r12
  42e75c:	pop    r13
  42e75e:	pop    r14
  42e760:	pop    r15
  42e762:	pop    rbp
  42e763:	ret    
  42e764:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e76e:	xchg   ax,ax

000000000042e770 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  42e770:	push   rbp
  42e771:	push   r15
  42e773:	push   r14
  42e775:	push   r13
  42e777:	push   r12
  42e779:	push   rbx
  42e77a:	push   rax
  42e77b:	mov    r12,rdi
  42e77e:	cmp    BYTE PTR [rdi+0x33],0x0
  42e782:	je     42e79a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a>
  42e784:	mov    rdi,r12
  42e787:	add    rsp,0x8
  42e78b:	pop    rbx
  42e78c:	pop    r12
  42e78e:	pop    r13
  42e790:	pop    r14
  42e792:	pop    r15
  42e794:	pop    rbp
  42e795:	jmp    42ba00 <flatcc_json_printer_uint16_vector_field@@Base>
  42e79a:	lea    eax,[rdx+rdx*1]
  42e79d:	add    eax,0x4
  42e7a0:	cmp    eax,DWORD PTR [rsi+0x10]
  42e7a3:	jge    42eac5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x355>
  42e7a9:	mov    rdx,QWORD PTR [rsi+0x8]
  42e7ad:	mov    eax,eax
  42e7af:	movzx  r13d,WORD PTR [rdx+rax*1]
  42e7b4:	test   r13,r13
  42e7b7:	je     42eac5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x355>
  42e7bd:	add    r13,QWORD PTR [rsi]
  42e7c0:	je     42eac5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x355>
  42e7c6:	mov    r14,r9
  42e7c9:	mov    eax,DWORD PTR [rsi+0x18]
  42e7cc:	lea    edx,[rax+0x1]
  42e7cf:	mov    DWORD PTR [rsi+0x18],edx
  42e7d2:	test   eax,eax
  42e7d4:	je     42e7e7 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x77>
  42e7d6:	mov    rax,QWORD PTR [r12+0x28]
  42e7db:	lea    rdx,[rax+0x1]
  42e7df:	mov    QWORD PTR [r12+0x28],rdx
  42e7e4:	mov    BYTE PTR [rax],0x2c
  42e7e7:	mov    ebx,DWORD PTR [r13+0x0]
  42e7eb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42e7f0:	movsxd rdx,r8d
  42e7f3:	mov    rdi,r12
  42e7f6:	mov    rsi,rcx
  42e7f9:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42e7fe:	add    DWORD PTR [r12+0x38],0x1
  42e804:	mov    rax,QWORD PTR [r12+0x28]
  42e809:	lea    rcx,[rax+0x1]
  42e80d:	mov    QWORD PTR [r12+0x28],rcx
  42e812:	mov    BYTE PTR [rax],0x5b
  42e815:	test   ebp,ebp
  42e817:	je     42e9f7 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x287>
  42e81d:	add    r13,rbx
  42e820:	cmp    BYTE PTR [r12+0x31],0x0
  42e826:	mov    rax,QWORD PTR [r12+0x28]
  42e82b:	je     42e8c5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x155>
  42e831:	lea    rcx,[rax+0x1]
  42e835:	mov    QWORD PTR [r12+0x28],rcx
  42e83a:	mov    BYTE PTR [rax],0xa
  42e83d:	movsxd rax,DWORD PTR [r12+0x38]
  42e842:	movzx  r15d,BYTE PTR [r12+0x31]
  42e848:	imul   r15,rax
  42e84c:	mov    rbx,QWORD PTR [r12+0x20]
  42e851:	mov    rdi,QWORD PTR [r12+0x28]
  42e856:	lea    rax,[rdi+r15*1]
  42e85a:	cmp    rax,rbx
  42e85d:	jbe    42e8b1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  42e85f:	cmp    rdi,rbx
  42e862:	jb     42e878 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x108>
  42e864:	xor    esi,esi
  42e866:	mov    rdi,r12
  42e869:	call   QWORD PTR [r12+0x48]
  42e86e:	mov    rbx,QWORD PTR [r12+0x20]
  42e873:	mov    rdi,QWORD PTR [r12+0x28]
  42e878:	sub    rbx,rdi
  42e87b:	cmp    rbx,r15
  42e87e:	jae    42e8b1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  42e880:	mov    esi,0x20
  42e885:	mov    rdx,rbx
  42e888:	call   406080 <memset@plt>
  42e88d:	add    QWORD PTR [r12+0x28],rbx
  42e892:	sub    r15,rbx
  42e895:	xor    esi,esi
  42e897:	mov    rdi,r12
  42e89a:	call   QWORD PTR [r12+0x48]
  42e89f:	mov    rbx,QWORD PTR [r12+0x20]
  42e8a4:	mov    rdi,QWORD PTR [r12+0x28]
  42e8a9:	sub    rbx,rdi
  42e8ac:	cmp    r15,rbx
  42e8af:	ja     42e880 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
  42e8b1:	mov    esi,0x20
  42e8b6:	mov    rdx,r15
  42e8b9:	call   406080 <memset@plt>
  42e8be:	add    QWORD PTR [r12+0x28],r15
  42e8c3:	jmp    42e8d6 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  42e8c5:	cmp    rax,QWORD PTR [r12+0x20]
  42e8ca:	jb     42e8d6 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  42e8cc:	xor    esi,esi
  42e8ce:	mov    rdi,r12
  42e8d1:	call   QWORD PTR [r12+0x48]
  42e8d6:	movzx  esi,WORD PTR [r13+0x4]
  42e8db:	mov    rdi,r12
  42e8de:	call   r14
  42e8e1:	add    ebp,0xffffffff
  42e8e4:	je     42e9f7 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x287>
  42e8ea:	add    r13,0x6
  42e8ee:	xchg   ax,ax
  42e8f0:	add    ebp,0xffffffff
  42e8f3:	mov    rax,QWORD PTR [r12+0x28]
  42e8f8:	lea    rcx,[rax+0x1]
  42e8fc:	mov    QWORD PTR [r12+0x28],rcx
  42e901:	mov    BYTE PTR [rax],0x2c
  42e904:	cmp    BYTE PTR [r12+0x31],0x0
  42e90a:	mov    rax,QWORD PTR [r12+0x28]
  42e90f:	je     42e9c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x250>
  42e915:	lea    rcx,[rax+0x1]
  42e919:	mov    QWORD PTR [r12+0x28],rcx
  42e91e:	mov    BYTE PTR [rax],0xa
  42e921:	movsxd rax,DWORD PTR [r12+0x38]
  42e926:	movzx  r15d,BYTE PTR [r12+0x31]
  42e92c:	imul   r15,rax
  42e930:	mov    rbx,QWORD PTR [r12+0x20]
  42e935:	mov    rdi,QWORD PTR [r12+0x28]
  42e93a:	lea    rax,[rdi+r15*1]
  42e93e:	cmp    rax,rbx
  42e941:	jbe    42e9a1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x231>
  42e943:	cmp    rdi,rbx
  42e946:	jb     42e95c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
  42e948:	xor    esi,esi
  42e94a:	mov    rdi,r12
  42e94d:	call   QWORD PTR [r12+0x48]
  42e952:	mov    rbx,QWORD PTR [r12+0x20]
  42e957:	mov    rdi,QWORD PTR [r12+0x28]
  42e95c:	sub    rbx,rdi
  42e95f:	cmp    rbx,r15
  42e962:	jae    42e9a1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x231>
  42e964:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e96e:	xchg   ax,ax
  42e970:	mov    esi,0x20
  42e975:	mov    rdx,rbx
  42e978:	call   406080 <memset@plt>
  42e97d:	add    QWORD PTR [r12+0x28],rbx
  42e982:	sub    r15,rbx
  42e985:	xor    esi,esi
  42e987:	mov    rdi,r12
  42e98a:	call   QWORD PTR [r12+0x48]
  42e98f:	mov    rbx,QWORD PTR [r12+0x20]
  42e994:	mov    rdi,QWORD PTR [r12+0x28]
  42e999:	sub    rbx,rdi
  42e99c:	cmp    r15,rbx
  42e99f:	ja     42e970 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
  42e9a1:	mov    esi,0x20
  42e9a6:	mov    rdx,r15
  42e9a9:	call   406080 <memset@plt>
  42e9ae:	add    QWORD PTR [r12+0x28],r15
  42e9b3:	jmp    42e9e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x270>
  42e9b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e9bf:	nop
  42e9c0:	cmp    rax,QWORD PTR [r12+0x20]
  42e9c5:	jb     42e9e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x270>
  42e9c7:	xor    esi,esi
  42e9c9:	mov    rdi,r12
  42e9cc:	call   QWORD PTR [r12+0x48]
  42e9d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e9db:	nop    DWORD PTR [rax+rax*1+0x0]
  42e9e0:	movzx  esi,WORD PTR [r13+0x0]
  42e9e5:	mov    rdi,r12
  42e9e8:	call   r14
  42e9eb:	add    r13,0x2
  42e9ef:	test   ebp,ebp
  42e9f1:	jne    42e8f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42e9f7:	cmp    BYTE PTR [r12+0x31],0x0
  42e9fd:	mov    r14,QWORD PTR [r12+0x28]
  42ea02:	je     42eab8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x348>
  42ea08:	lea    rax,[r14+0x1]
  42ea0c:	mov    QWORD PTR [r12+0x28],rax
  42ea11:	mov    BYTE PTR [r14],0xa
  42ea15:	movsxd rax,DWORD PTR [r12+0x38]
  42ea1a:	add    rax,0xffffffffffffffff
  42ea1e:	mov    DWORD PTR [r12+0x38],eax
  42ea23:	movzx  r14d,BYTE PTR [r12+0x31]
  42ea29:	imul   r14,rax
  42ea2d:	mov    rbx,QWORD PTR [r12+0x20]
  42ea32:	mov    rdi,QWORD PTR [r12+0x28]
  42ea37:	lea    rax,[rdi+r14*1]
  42ea3b:	cmp    rax,rbx
  42ea3e:	jbe    42eaa1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x331>
  42ea40:	cmp    rdi,rbx
  42ea43:	jb     42ea59 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e9>
  42ea45:	xor    esi,esi
  42ea47:	mov    rdi,r12
  42ea4a:	call   QWORD PTR [r12+0x48]
  42ea4f:	mov    rbx,QWORD PTR [r12+0x20]
  42ea54:	mov    rdi,QWORD PTR [r12+0x28]
  42ea59:	sub    rbx,rdi
  42ea5c:	cmp    rbx,r14
  42ea5f:	jae    42eaa1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x331>
  42ea61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ea70:	mov    esi,0x20
  42ea75:	mov    rdx,rbx
  42ea78:	call   406080 <memset@plt>
  42ea7d:	add    QWORD PTR [r12+0x28],rbx
  42ea82:	sub    r14,rbx
  42ea85:	xor    esi,esi
  42ea87:	mov    rdi,r12
  42ea8a:	call   QWORD PTR [r12+0x48]
  42ea8f:	mov    rbx,QWORD PTR [r12+0x20]
  42ea94:	mov    rdi,QWORD PTR [r12+0x28]
  42ea99:	sub    rbx,rdi
  42ea9c:	cmp    r14,rbx
  42ea9f:	ja     42ea70 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x300>
  42eaa1:	mov    esi,0x20
  42eaa6:	mov    rdx,r14
  42eaa9:	call   406080 <memset@plt>
  42eaae:	add    r14,QWORD PTR [r12+0x28]
  42eab3:	mov    QWORD PTR [r12+0x28],r14
  42eab8:	lea    rax,[r14+0x1]
  42eabc:	mov    QWORD PTR [r12+0x28],rax
  42eac1:	mov    BYTE PTR [r14],0x5d
  42eac5:	add    rsp,0x8
  42eac9:	pop    rbx
  42eaca:	pop    r12
  42eacc:	pop    r13
  42eace:	pop    r14
  42ead0:	pop    r15
  42ead2:	pop    rbp
  42ead3:	ret    
  42ead4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eade:	xchg   ax,ax

000000000042eae0 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  42eae0:	push   rbp
  42eae1:	push   r15
  42eae3:	push   r14
  42eae5:	push   r13
  42eae7:	push   r12
  42eae9:	push   rbx
  42eaea:	push   rax
  42eaeb:	mov    r12,rdi
  42eaee:	cmp    BYTE PTR [rdi+0x33],0x0
  42eaf2:	je     42eb0a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a>
  42eaf4:	mov    rdi,r12
  42eaf7:	add    rsp,0x8
  42eafb:	pop    rbx
  42eafc:	pop    r12
  42eafe:	pop    r13
  42eb00:	pop    r14
  42eb02:	pop    r15
  42eb04:	pop    rbp
  42eb05:	jmp    42bf80 <flatcc_json_printer_uint32_vector_field@@Base>
  42eb0a:	lea    eax,[rdx+rdx*1]
  42eb0d:	add    eax,0x4
  42eb10:	cmp    eax,DWORD PTR [rsi+0x10]
  42eb13:	jge    42ee25 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42eb19:	mov    rdx,QWORD PTR [rsi+0x8]
  42eb1d:	mov    eax,eax
  42eb1f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42eb24:	test   r13,r13
  42eb27:	je     42ee25 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42eb2d:	add    r13,QWORD PTR [rsi]
  42eb30:	je     42ee25 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42eb36:	mov    r14,r9
  42eb39:	mov    eax,DWORD PTR [rsi+0x18]
  42eb3c:	lea    edx,[rax+0x1]
  42eb3f:	mov    DWORD PTR [rsi+0x18],edx
  42eb42:	test   eax,eax
  42eb44:	je     42eb57 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x77>
  42eb46:	mov    rax,QWORD PTR [r12+0x28]
  42eb4b:	lea    rdx,[rax+0x1]
  42eb4f:	mov    QWORD PTR [r12+0x28],rdx
  42eb54:	mov    BYTE PTR [rax],0x2c
  42eb57:	mov    ebx,DWORD PTR [r13+0x0]
  42eb5b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42eb60:	movsxd rdx,r8d
  42eb63:	mov    rdi,r12
  42eb66:	mov    rsi,rcx
  42eb69:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42eb6e:	add    DWORD PTR [r12+0x38],0x1
  42eb74:	mov    rax,QWORD PTR [r12+0x28]
  42eb79:	lea    rcx,[rax+0x1]
  42eb7d:	mov    QWORD PTR [r12+0x28],rcx
  42eb82:	mov    BYTE PTR [rax],0x5b
  42eb85:	test   ebp,ebp
  42eb87:	je     42ed66 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x286>
  42eb8d:	add    r13,rbx
  42eb90:	cmp    BYTE PTR [r12+0x31],0x0
  42eb96:	mov    rax,QWORD PTR [r12+0x28]
  42eb9b:	je     42ec35 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x155>
  42eba1:	lea    rcx,[rax+0x1]
  42eba5:	mov    QWORD PTR [r12+0x28],rcx
  42ebaa:	mov    BYTE PTR [rax],0xa
  42ebad:	movsxd rax,DWORD PTR [r12+0x38]
  42ebb2:	movzx  r15d,BYTE PTR [r12+0x31]
  42ebb8:	imul   r15,rax
  42ebbc:	mov    rbx,QWORD PTR [r12+0x20]
  42ebc1:	mov    rdi,QWORD PTR [r12+0x28]
  42ebc6:	lea    rax,[rdi+r15*1]
  42ebca:	cmp    rax,rbx
  42ebcd:	jbe    42ec21 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  42ebcf:	cmp    rdi,rbx
  42ebd2:	jb     42ebe8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x108>
  42ebd4:	xor    esi,esi
  42ebd6:	mov    rdi,r12
  42ebd9:	call   QWORD PTR [r12+0x48]
  42ebde:	mov    rbx,QWORD PTR [r12+0x20]
  42ebe3:	mov    rdi,QWORD PTR [r12+0x28]
  42ebe8:	sub    rbx,rdi
  42ebeb:	cmp    rbx,r15
  42ebee:	jae    42ec21 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  42ebf0:	mov    esi,0x20
  42ebf5:	mov    rdx,rbx
  42ebf8:	call   406080 <memset@plt>
  42ebfd:	add    QWORD PTR [r12+0x28],rbx
  42ec02:	sub    r15,rbx
  42ec05:	xor    esi,esi
  42ec07:	mov    rdi,r12
  42ec0a:	call   QWORD PTR [r12+0x48]
  42ec0f:	mov    rbx,QWORD PTR [r12+0x20]
  42ec14:	mov    rdi,QWORD PTR [r12+0x28]
  42ec19:	sub    rbx,rdi
  42ec1c:	cmp    r15,rbx
  42ec1f:	ja     42ebf0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
  42ec21:	mov    esi,0x20
  42ec26:	mov    rdx,r15
  42ec29:	call   406080 <memset@plt>
  42ec2e:	add    QWORD PTR [r12+0x28],r15
  42ec33:	jmp    42ec46 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  42ec35:	cmp    rax,QWORD PTR [r12+0x20]
  42ec3a:	jb     42ec46 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  42ec3c:	xor    esi,esi
  42ec3e:	mov    rdi,r12
  42ec41:	call   QWORD PTR [r12+0x48]
  42ec46:	mov    esi,DWORD PTR [r13+0x4]
  42ec4a:	mov    rdi,r12
  42ec4d:	call   r14
  42ec50:	add    ebp,0xffffffff
  42ec53:	je     42ed66 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x286>
  42ec59:	add    r13,0x8
  42ec5d:	nop    DWORD PTR [rax]
  42ec60:	add    ebp,0xffffffff
  42ec63:	mov    rax,QWORD PTR [r12+0x28]
  42ec68:	lea    rcx,[rax+0x1]
  42ec6c:	mov    QWORD PTR [r12+0x28],rcx
  42ec71:	mov    BYTE PTR [rax],0x2c
  42ec74:	cmp    BYTE PTR [r12+0x31],0x0
  42ec7a:	mov    rax,QWORD PTR [r12+0x28]
  42ec7f:	je     42ed30 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x250>
  42ec85:	lea    rcx,[rax+0x1]
  42ec89:	mov    QWORD PTR [r12+0x28],rcx
  42ec8e:	mov    BYTE PTR [rax],0xa
  42ec91:	movsxd rax,DWORD PTR [r12+0x38]
  42ec96:	movzx  r15d,BYTE PTR [r12+0x31]
  42ec9c:	imul   r15,rax
  42eca0:	mov    rbx,QWORD PTR [r12+0x20]
  42eca5:	mov    rdi,QWORD PTR [r12+0x28]
  42ecaa:	lea    rax,[rdi+r15*1]
  42ecae:	cmp    rax,rbx
  42ecb1:	jbe    42ed11 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x231>
  42ecb3:	cmp    rdi,rbx
  42ecb6:	jb     42eccc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
  42ecb8:	xor    esi,esi
  42ecba:	mov    rdi,r12
  42ecbd:	call   QWORD PTR [r12+0x48]
  42ecc2:	mov    rbx,QWORD PTR [r12+0x20]
  42ecc7:	mov    rdi,QWORD PTR [r12+0x28]
  42eccc:	sub    rbx,rdi
  42eccf:	cmp    rbx,r15
  42ecd2:	jae    42ed11 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x231>
  42ecd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ecde:	xchg   ax,ax
  42ece0:	mov    esi,0x20
  42ece5:	mov    rdx,rbx
  42ece8:	call   406080 <memset@plt>
  42eced:	add    QWORD PTR [r12+0x28],rbx
  42ecf2:	sub    r15,rbx
  42ecf5:	xor    esi,esi
  42ecf7:	mov    rdi,r12
  42ecfa:	call   QWORD PTR [r12+0x48]
  42ecff:	mov    rbx,QWORD PTR [r12+0x20]
  42ed04:	mov    rdi,QWORD PTR [r12+0x28]
  42ed09:	sub    rbx,rdi
  42ed0c:	cmp    r15,rbx
  42ed0f:	ja     42ece0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
  42ed11:	mov    esi,0x20
  42ed16:	mov    rdx,r15
  42ed19:	call   406080 <memset@plt>
  42ed1e:	add    QWORD PTR [r12+0x28],r15
  42ed23:	jmp    42ed50 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
  42ed25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ed2f:	nop
  42ed30:	cmp    rax,QWORD PTR [r12+0x20]
  42ed35:	jb     42ed50 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
  42ed37:	xor    esi,esi
  42ed39:	mov    rdi,r12
  42ed3c:	call   QWORD PTR [r12+0x48]
  42ed41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ed4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ed50:	mov    esi,DWORD PTR [r13+0x0]
  42ed54:	mov    rdi,r12
  42ed57:	call   r14
  42ed5a:	add    r13,0x4
  42ed5e:	test   ebp,ebp
  42ed60:	jne    42ec60 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42ed66:	cmp    BYTE PTR [r12+0x31],0x0
  42ed6c:	mov    r14,QWORD PTR [r12+0x28]
  42ed71:	je     42ee18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
  42ed77:	lea    rax,[r14+0x1]
  42ed7b:	mov    QWORD PTR [r12+0x28],rax
  42ed80:	mov    BYTE PTR [r14],0xa
  42ed84:	movsxd rax,DWORD PTR [r12+0x38]
  42ed89:	add    rax,0xffffffffffffffff
  42ed8d:	mov    DWORD PTR [r12+0x38],eax
  42ed92:	movzx  r14d,BYTE PTR [r12+0x31]
  42ed98:	imul   r14,rax
  42ed9c:	mov    rbx,QWORD PTR [r12+0x20]
  42eda1:	mov    rdi,QWORD PTR [r12+0x28]
  42eda6:	lea    rax,[rdi+r14*1]
  42edaa:	cmp    rax,rbx
  42edad:	jbe    42ee01 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  42edaf:	cmp    rdi,rbx
  42edb2:	jb     42edc8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e8>
  42edb4:	xor    esi,esi
  42edb6:	mov    rdi,r12
  42edb9:	call   QWORD PTR [r12+0x48]
  42edbe:	mov    rbx,QWORD PTR [r12+0x20]
  42edc3:	mov    rdi,QWORD PTR [r12+0x28]
  42edc8:	sub    rbx,rdi
  42edcb:	cmp    rbx,r14
  42edce:	jae    42ee01 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  42edd0:	mov    esi,0x20
  42edd5:	mov    rdx,rbx
  42edd8:	call   406080 <memset@plt>
  42eddd:	add    QWORD PTR [r12+0x28],rbx
  42ede2:	sub    r14,rbx
  42ede5:	xor    esi,esi
  42ede7:	mov    rdi,r12
  42edea:	call   QWORD PTR [r12+0x48]
  42edef:	mov    rbx,QWORD PTR [r12+0x20]
  42edf4:	mov    rdi,QWORD PTR [r12+0x28]
  42edf9:	sub    rbx,rdi
  42edfc:	cmp    r14,rbx
  42edff:	ja     42edd0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2f0>
  42ee01:	mov    esi,0x20
  42ee06:	mov    rdx,r14
  42ee09:	call   406080 <memset@plt>
  42ee0e:	add    r14,QWORD PTR [r12+0x28]
  42ee13:	mov    QWORD PTR [r12+0x28],r14
  42ee18:	lea    rax,[r14+0x1]
  42ee1c:	mov    QWORD PTR [r12+0x28],rax
  42ee21:	mov    BYTE PTR [r14],0x5d
  42ee25:	add    rsp,0x8
  42ee29:	pop    rbx
  42ee2a:	pop    r12
  42ee2c:	pop    r13
  42ee2e:	pop    r14
  42ee30:	pop    r15
  42ee32:	pop    rbp
  42ee33:	ret    
  42ee34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ee3e:	xchg   ax,ax

000000000042ee40 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  42ee40:	push   rbp
  42ee41:	push   r15
  42ee43:	push   r14
  42ee45:	push   r13
  42ee47:	push   r12
  42ee49:	push   rbx
  42ee4a:	push   rax
  42ee4b:	mov    r12,rdi
  42ee4e:	cmp    BYTE PTR [rdi+0x33],0x0
  42ee52:	je     42ee6a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a>
  42ee54:	mov    rdi,r12
  42ee57:	add    rsp,0x8
  42ee5b:	pop    rbx
  42ee5c:	pop    r12
  42ee5e:	pop    r13
  42ee60:	pop    r14
  42ee62:	pop    r15
  42ee64:	pop    rbp
  42ee65:	jmp    42c2b0 <flatcc_json_printer_uint64_vector_field@@Base>
  42ee6a:	lea    eax,[rdx+rdx*1]
  42ee6d:	add    eax,0x4
  42ee70:	cmp    eax,DWORD PTR [rsi+0x10]
  42ee73:	jge    42f185 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42ee79:	mov    rdx,QWORD PTR [rsi+0x8]
  42ee7d:	mov    eax,eax
  42ee7f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42ee84:	test   r13,r13
  42ee87:	je     42f185 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42ee8d:	add    r13,QWORD PTR [rsi]
  42ee90:	je     42f185 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42ee96:	mov    r14,r9
  42ee99:	mov    eax,DWORD PTR [rsi+0x18]
  42ee9c:	lea    edx,[rax+0x1]
  42ee9f:	mov    DWORD PTR [rsi+0x18],edx
  42eea2:	test   eax,eax
  42eea4:	je     42eeb7 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x77>
  42eea6:	mov    rax,QWORD PTR [r12+0x28]
  42eeab:	lea    rdx,[rax+0x1]
  42eeaf:	mov    QWORD PTR [r12+0x28],rdx
  42eeb4:	mov    BYTE PTR [rax],0x2c
  42eeb7:	mov    ebx,DWORD PTR [r13+0x0]
  42eebb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42eec0:	movsxd rdx,r8d
  42eec3:	mov    rdi,r12
  42eec6:	mov    rsi,rcx
  42eec9:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42eece:	add    DWORD PTR [r12+0x38],0x1
  42eed4:	mov    rax,QWORD PTR [r12+0x28]
  42eed9:	lea    rcx,[rax+0x1]
  42eedd:	mov    QWORD PTR [r12+0x28],rcx
  42eee2:	mov    BYTE PTR [rax],0x5b
  42eee5:	test   ebp,ebp
  42eee7:	je     42f0c6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x286>
  42eeed:	add    r13,rbx
  42eef0:	cmp    BYTE PTR [r12+0x31],0x0
  42eef6:	mov    rax,QWORD PTR [r12+0x28]
  42eefb:	je     42ef95 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x155>
  42ef01:	lea    rcx,[rax+0x1]
  42ef05:	mov    QWORD PTR [r12+0x28],rcx
  42ef0a:	mov    BYTE PTR [rax],0xa
  42ef0d:	movsxd rax,DWORD PTR [r12+0x38]
  42ef12:	movzx  r15d,BYTE PTR [r12+0x31]
  42ef18:	imul   r15,rax
  42ef1c:	mov    rbx,QWORD PTR [r12+0x20]
  42ef21:	mov    rdi,QWORD PTR [r12+0x28]
  42ef26:	lea    rax,[rdi+r15*1]
  42ef2a:	cmp    rax,rbx
  42ef2d:	jbe    42ef81 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  42ef2f:	cmp    rdi,rbx
  42ef32:	jb     42ef48 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x108>
  42ef34:	xor    esi,esi
  42ef36:	mov    rdi,r12
  42ef39:	call   QWORD PTR [r12+0x48]
  42ef3e:	mov    rbx,QWORD PTR [r12+0x20]
  42ef43:	mov    rdi,QWORD PTR [r12+0x28]
  42ef48:	sub    rbx,rdi
  42ef4b:	cmp    rbx,r15
  42ef4e:	jae    42ef81 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  42ef50:	mov    esi,0x20
  42ef55:	mov    rdx,rbx
  42ef58:	call   406080 <memset@plt>
  42ef5d:	add    QWORD PTR [r12+0x28],rbx
  42ef62:	sub    r15,rbx
  42ef65:	xor    esi,esi
  42ef67:	mov    rdi,r12
  42ef6a:	call   QWORD PTR [r12+0x48]
  42ef6f:	mov    rbx,QWORD PTR [r12+0x20]
  42ef74:	mov    rdi,QWORD PTR [r12+0x28]
  42ef79:	sub    rbx,rdi
  42ef7c:	cmp    r15,rbx
  42ef7f:	ja     42ef50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
  42ef81:	mov    esi,0x20
  42ef86:	mov    rdx,r15
  42ef89:	call   406080 <memset@plt>
  42ef8e:	add    QWORD PTR [r12+0x28],r15
  42ef93:	jmp    42efa6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  42ef95:	cmp    rax,QWORD PTR [r12+0x20]
  42ef9a:	jb     42efa6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  42ef9c:	xor    esi,esi
  42ef9e:	mov    rdi,r12
  42efa1:	call   QWORD PTR [r12+0x48]
  42efa6:	mov    rsi,QWORD PTR [r13+0x4]
  42efaa:	mov    rdi,r12
  42efad:	call   r14
  42efb0:	add    ebp,0xffffffff
  42efb3:	je     42f0c6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x286>
  42efb9:	add    r13,0xc
  42efbd:	nop    DWORD PTR [rax]
  42efc0:	add    ebp,0xffffffff
  42efc3:	mov    rax,QWORD PTR [r12+0x28]
  42efc8:	lea    rcx,[rax+0x1]
  42efcc:	mov    QWORD PTR [r12+0x28],rcx
  42efd1:	mov    BYTE PTR [rax],0x2c
  42efd4:	cmp    BYTE PTR [r12+0x31],0x0
  42efda:	mov    rax,QWORD PTR [r12+0x28]
  42efdf:	je     42f090 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x250>
  42efe5:	lea    rcx,[rax+0x1]
  42efe9:	mov    QWORD PTR [r12+0x28],rcx
  42efee:	mov    BYTE PTR [rax],0xa
  42eff1:	movsxd rax,DWORD PTR [r12+0x38]
  42eff6:	movzx  r15d,BYTE PTR [r12+0x31]
  42effc:	imul   r15,rax
  42f000:	mov    rbx,QWORD PTR [r12+0x20]
  42f005:	mov    rdi,QWORD PTR [r12+0x28]
  42f00a:	lea    rax,[rdi+r15*1]
  42f00e:	cmp    rax,rbx
  42f011:	jbe    42f071 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x231>
  42f013:	cmp    rdi,rbx
  42f016:	jb     42f02c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
  42f018:	xor    esi,esi
  42f01a:	mov    rdi,r12
  42f01d:	call   QWORD PTR [r12+0x48]
  42f022:	mov    rbx,QWORD PTR [r12+0x20]
  42f027:	mov    rdi,QWORD PTR [r12+0x28]
  42f02c:	sub    rbx,rdi
  42f02f:	cmp    rbx,r15
  42f032:	jae    42f071 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x231>
  42f034:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f03e:	xchg   ax,ax
  42f040:	mov    esi,0x20
  42f045:	mov    rdx,rbx
  42f048:	call   406080 <memset@plt>
  42f04d:	add    QWORD PTR [r12+0x28],rbx
  42f052:	sub    r15,rbx
  42f055:	xor    esi,esi
  42f057:	mov    rdi,r12
  42f05a:	call   QWORD PTR [r12+0x48]
  42f05f:	mov    rbx,QWORD PTR [r12+0x20]
  42f064:	mov    rdi,QWORD PTR [r12+0x28]
  42f069:	sub    rbx,rdi
  42f06c:	cmp    r15,rbx
  42f06f:	ja     42f040 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x200>
  42f071:	mov    esi,0x20
  42f076:	mov    rdx,r15
  42f079:	call   406080 <memset@plt>
  42f07e:	add    QWORD PTR [r12+0x28],r15
  42f083:	jmp    42f0b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
  42f085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f08f:	nop
  42f090:	cmp    rax,QWORD PTR [r12+0x20]
  42f095:	jb     42f0b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
  42f097:	xor    esi,esi
  42f099:	mov    rdi,r12
  42f09c:	call   QWORD PTR [r12+0x48]
  42f0a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42f0b0:	mov    rsi,QWORD PTR [r13+0x0]
  42f0b4:	mov    rdi,r12
  42f0b7:	call   r14
  42f0ba:	add    r13,0x8
  42f0be:	test   ebp,ebp
  42f0c0:	jne    42efc0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42f0c6:	cmp    BYTE PTR [r12+0x31],0x0
  42f0cc:	mov    r14,QWORD PTR [r12+0x28]
  42f0d1:	je     42f178 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x338>
  42f0d7:	lea    rax,[r14+0x1]
  42f0db:	mov    QWORD PTR [r12+0x28],rax
  42f0e0:	mov    BYTE PTR [r14],0xa
  42f0e4:	movsxd rax,DWORD PTR [r12+0x38]
  42f0e9:	add    rax,0xffffffffffffffff
  42f0ed:	mov    DWORD PTR [r12+0x38],eax
  42f0f2:	movzx  r14d,BYTE PTR [r12+0x31]
  42f0f8:	imul   r14,rax
  42f0fc:	mov    rbx,QWORD PTR [r12+0x20]
  42f101:	mov    rdi,QWORD PTR [r12+0x28]
  42f106:	lea    rax,[rdi+r14*1]
  42f10a:	cmp    rax,rbx
  42f10d:	jbe    42f161 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  42f10f:	cmp    rdi,rbx
  42f112:	jb     42f128 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
  42f114:	xor    esi,esi
  42f116:	mov    rdi,r12
  42f119:	call   QWORD PTR [r12+0x48]
  42f11e:	mov    rbx,QWORD PTR [r12+0x20]
  42f123:	mov    rdi,QWORD PTR [r12+0x28]
  42f128:	sub    rbx,rdi
  42f12b:	cmp    rbx,r14
  42f12e:	jae    42f161 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  42f130:	mov    esi,0x20
  42f135:	mov    rdx,rbx
  42f138:	call   406080 <memset@plt>
  42f13d:	add    QWORD PTR [r12+0x28],rbx
  42f142:	sub    r14,rbx
  42f145:	xor    esi,esi
  42f147:	mov    rdi,r12
  42f14a:	call   QWORD PTR [r12+0x48]
  42f14f:	mov    rbx,QWORD PTR [r12+0x20]
  42f154:	mov    rdi,QWORD PTR [r12+0x28]
  42f159:	sub    rbx,rdi
  42f15c:	cmp    r14,rbx
  42f15f:	ja     42f130 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2f0>
  42f161:	mov    esi,0x20
  42f166:	mov    rdx,r14
  42f169:	call   406080 <memset@plt>
  42f16e:	add    r14,QWORD PTR [r12+0x28]
  42f173:	mov    QWORD PTR [r12+0x28],r14
  42f178:	lea    rax,[r14+0x1]
  42f17c:	mov    QWORD PTR [r12+0x28],rax
  42f181:	mov    BYTE PTR [r14],0x5d
  42f185:	add    rsp,0x8
  42f189:	pop    rbx
  42f18a:	pop    r12
  42f18c:	pop    r13
  42f18e:	pop    r14
  42f190:	pop    r15
  42f192:	pop    rbp
  42f193:	ret    
  42f194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f19e:	xchg   ax,ax

000000000042f1a0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  42f1a0:	push   rbp
  42f1a1:	push   r15
  42f1a3:	push   r14
  42f1a5:	push   r13
  42f1a7:	push   r12
  42f1a9:	push   rbx
  42f1aa:	push   rax
  42f1ab:	mov    r12,rdi
  42f1ae:	cmp    BYTE PTR [rdi+0x33],0x0
  42f1b2:	je     42f1ca <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a>
  42f1b4:	mov    rdi,r12
  42f1b7:	add    rsp,0x8
  42f1bb:	pop    rbx
  42f1bc:	pop    r12
  42f1be:	pop    r13
  42f1c0:	pop    r14
  42f1c2:	pop    r15
  42f1c4:	pop    rbp
  42f1c5:	jmp    42c5e0 <flatcc_json_printer_int8_vector_field@@Base>
  42f1ca:	lea    eax,[rdx+rdx*1]
  42f1cd:	add    eax,0x4
  42f1d0:	cmp    eax,DWORD PTR [rsi+0x10]
  42f1d3:	jge    42f4f5 <flatcc_json_printer_int8_enum_vector_field@@Base+0x355>
  42f1d9:	mov    rdx,QWORD PTR [rsi+0x8]
  42f1dd:	mov    eax,eax
  42f1df:	movzx  r13d,WORD PTR [rdx+rax*1]
  42f1e4:	test   r13,r13
  42f1e7:	je     42f4f5 <flatcc_json_printer_int8_enum_vector_field@@Base+0x355>
  42f1ed:	add    r13,QWORD PTR [rsi]
  42f1f0:	je     42f4f5 <flatcc_json_printer_int8_enum_vector_field@@Base+0x355>
  42f1f6:	mov    r14,r9
  42f1f9:	mov    eax,DWORD PTR [rsi+0x18]
  42f1fc:	lea    edx,[rax+0x1]
  42f1ff:	mov    DWORD PTR [rsi+0x18],edx
  42f202:	test   eax,eax
  42f204:	je     42f217 <flatcc_json_printer_int8_enum_vector_field@@Base+0x77>
  42f206:	mov    rax,QWORD PTR [r12+0x28]
  42f20b:	lea    rdx,[rax+0x1]
  42f20f:	mov    QWORD PTR [r12+0x28],rdx
  42f214:	mov    BYTE PTR [rax],0x2c
  42f217:	mov    ebx,DWORD PTR [r13+0x0]
  42f21b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42f220:	movsxd rdx,r8d
  42f223:	mov    rdi,r12
  42f226:	mov    rsi,rcx
  42f229:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42f22e:	add    DWORD PTR [r12+0x38],0x1
  42f234:	mov    rax,QWORD PTR [r12+0x28]
  42f239:	lea    rcx,[rax+0x1]
  42f23d:	mov    QWORD PTR [r12+0x28],rcx
  42f242:	mov    BYTE PTR [rax],0x5b
  42f245:	test   ebp,ebp
  42f247:	je     42f427 <flatcc_json_printer_int8_enum_vector_field@@Base+0x287>
  42f24d:	add    r13,rbx
  42f250:	cmp    BYTE PTR [r12+0x31],0x0
  42f256:	mov    rax,QWORD PTR [r12+0x28]
  42f25b:	je     42f2f5 <flatcc_json_printer_int8_enum_vector_field@@Base+0x155>
  42f261:	lea    rcx,[rax+0x1]
  42f265:	mov    QWORD PTR [r12+0x28],rcx
  42f26a:	mov    BYTE PTR [rax],0xa
  42f26d:	movsxd rax,DWORD PTR [r12+0x38]
  42f272:	movzx  r15d,BYTE PTR [r12+0x31]
  42f278:	imul   r15,rax
  42f27c:	mov    rbx,QWORD PTR [r12+0x20]
  42f281:	mov    rdi,QWORD PTR [r12+0x28]
  42f286:	lea    rax,[rdi+r15*1]
  42f28a:	cmp    rax,rbx
  42f28d:	jbe    42f2e1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  42f28f:	cmp    rdi,rbx
  42f292:	jb     42f2a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x108>
  42f294:	xor    esi,esi
  42f296:	mov    rdi,r12
  42f299:	call   QWORD PTR [r12+0x48]
  42f29e:	mov    rbx,QWORD PTR [r12+0x20]
  42f2a3:	mov    rdi,QWORD PTR [r12+0x28]
  42f2a8:	sub    rbx,rdi
  42f2ab:	cmp    rbx,r15
  42f2ae:	jae    42f2e1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  42f2b0:	mov    esi,0x20
  42f2b5:	mov    rdx,rbx
  42f2b8:	call   406080 <memset@plt>
  42f2bd:	add    QWORD PTR [r12+0x28],rbx
  42f2c2:	sub    r15,rbx
  42f2c5:	xor    esi,esi
  42f2c7:	mov    rdi,r12
  42f2ca:	call   QWORD PTR [r12+0x48]
  42f2cf:	mov    rbx,QWORD PTR [r12+0x20]
  42f2d4:	mov    rdi,QWORD PTR [r12+0x28]
  42f2d9:	sub    rbx,rdi
  42f2dc:	cmp    r15,rbx
  42f2df:	ja     42f2b0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
  42f2e1:	mov    esi,0x20
  42f2e6:	mov    rdx,r15
  42f2e9:	call   406080 <memset@plt>
  42f2ee:	add    QWORD PTR [r12+0x28],r15
  42f2f3:	jmp    42f306 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  42f2f5:	cmp    rax,QWORD PTR [r12+0x20]
  42f2fa:	jb     42f306 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  42f2fc:	xor    esi,esi
  42f2fe:	mov    rdi,r12
  42f301:	call   QWORD PTR [r12+0x48]
  42f306:	movsx  esi,BYTE PTR [r13+0x4]
  42f30b:	mov    rdi,r12
  42f30e:	call   r14
  42f311:	add    ebp,0xffffffff
  42f314:	je     42f427 <flatcc_json_printer_int8_enum_vector_field@@Base+0x287>
  42f31a:	add    r13,0x5
  42f31e:	xchg   ax,ax
  42f320:	add    ebp,0xffffffff
  42f323:	mov    rax,QWORD PTR [r12+0x28]
  42f328:	lea    rcx,[rax+0x1]
  42f32c:	mov    QWORD PTR [r12+0x28],rcx
  42f331:	mov    BYTE PTR [rax],0x2c
  42f334:	cmp    BYTE PTR [r12+0x31],0x0
  42f33a:	mov    rax,QWORD PTR [r12+0x28]
  42f33f:	je     42f3f0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x250>
  42f345:	lea    rcx,[rax+0x1]
  42f349:	mov    QWORD PTR [r12+0x28],rcx
  42f34e:	mov    BYTE PTR [rax],0xa
  42f351:	movsxd rax,DWORD PTR [r12+0x38]
  42f356:	movzx  r15d,BYTE PTR [r12+0x31]
  42f35c:	imul   r15,rax
  42f360:	mov    rbx,QWORD PTR [r12+0x20]
  42f365:	mov    rdi,QWORD PTR [r12+0x28]
  42f36a:	lea    rax,[rdi+r15*1]
  42f36e:	cmp    rax,rbx
  42f371:	jbe    42f3d1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x231>
  42f373:	cmp    rdi,rbx
  42f376:	jb     42f38c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
  42f378:	xor    esi,esi
  42f37a:	mov    rdi,r12
  42f37d:	call   QWORD PTR [r12+0x48]
  42f382:	mov    rbx,QWORD PTR [r12+0x20]
  42f387:	mov    rdi,QWORD PTR [r12+0x28]
  42f38c:	sub    rbx,rdi
  42f38f:	cmp    rbx,r15
  42f392:	jae    42f3d1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x231>
  42f394:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f39e:	xchg   ax,ax
  42f3a0:	mov    esi,0x20
  42f3a5:	mov    rdx,rbx
  42f3a8:	call   406080 <memset@plt>
  42f3ad:	add    QWORD PTR [r12+0x28],rbx
  42f3b2:	sub    r15,rbx
  42f3b5:	xor    esi,esi
  42f3b7:	mov    rdi,r12
  42f3ba:	call   QWORD PTR [r12+0x48]
  42f3bf:	mov    rbx,QWORD PTR [r12+0x20]
  42f3c4:	mov    rdi,QWORD PTR [r12+0x28]
  42f3c9:	sub    rbx,rdi
  42f3cc:	cmp    r15,rbx
  42f3cf:	ja     42f3a0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
  42f3d1:	mov    esi,0x20
  42f3d6:	mov    rdx,r15
  42f3d9:	call   406080 <memset@plt>
  42f3de:	add    QWORD PTR [r12+0x28],r15
  42f3e3:	jmp    42f410 <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
  42f3e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f3ef:	nop
  42f3f0:	cmp    rax,QWORD PTR [r12+0x20]
  42f3f5:	jb     42f410 <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
  42f3f7:	xor    esi,esi
  42f3f9:	mov    rdi,r12
  42f3fc:	call   QWORD PTR [r12+0x48]
  42f401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f40b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f410:	movsx  esi,BYTE PTR [r13+0x0]
  42f415:	mov    rdi,r12
  42f418:	call   r14
  42f41b:	add    r13,0x1
  42f41f:	test   ebp,ebp
  42f421:	jne    42f320 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42f427:	cmp    BYTE PTR [r12+0x31],0x0
  42f42d:	mov    r14,QWORD PTR [r12+0x28]
  42f432:	je     42f4e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x348>
  42f438:	lea    rax,[r14+0x1]
  42f43c:	mov    QWORD PTR [r12+0x28],rax
  42f441:	mov    BYTE PTR [r14],0xa
  42f445:	movsxd rax,DWORD PTR [r12+0x38]
  42f44a:	add    rax,0xffffffffffffffff
  42f44e:	mov    DWORD PTR [r12+0x38],eax
  42f453:	movzx  r14d,BYTE PTR [r12+0x31]
  42f459:	imul   r14,rax
  42f45d:	mov    rbx,QWORD PTR [r12+0x20]
  42f462:	mov    rdi,QWORD PTR [r12+0x28]
  42f467:	lea    rax,[rdi+r14*1]
  42f46b:	cmp    rax,rbx
  42f46e:	jbe    42f4d1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x331>
  42f470:	cmp    rdi,rbx
  42f473:	jb     42f489 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e9>
  42f475:	xor    esi,esi
  42f477:	mov    rdi,r12
  42f47a:	call   QWORD PTR [r12+0x48]
  42f47f:	mov    rbx,QWORD PTR [r12+0x20]
  42f484:	mov    rdi,QWORD PTR [r12+0x28]
  42f489:	sub    rbx,rdi
  42f48c:	cmp    rbx,r14
  42f48f:	jae    42f4d1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x331>
  42f491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f49b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f4a0:	mov    esi,0x20
  42f4a5:	mov    rdx,rbx
  42f4a8:	call   406080 <memset@plt>
  42f4ad:	add    QWORD PTR [r12+0x28],rbx
  42f4b2:	sub    r14,rbx
  42f4b5:	xor    esi,esi
  42f4b7:	mov    rdi,r12
  42f4ba:	call   QWORD PTR [r12+0x48]
  42f4bf:	mov    rbx,QWORD PTR [r12+0x20]
  42f4c4:	mov    rdi,QWORD PTR [r12+0x28]
  42f4c9:	sub    rbx,rdi
  42f4cc:	cmp    r14,rbx
  42f4cf:	ja     42f4a0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x300>
  42f4d1:	mov    esi,0x20
  42f4d6:	mov    rdx,r14
  42f4d9:	call   406080 <memset@plt>
  42f4de:	add    r14,QWORD PTR [r12+0x28]
  42f4e3:	mov    QWORD PTR [r12+0x28],r14
  42f4e8:	lea    rax,[r14+0x1]
  42f4ec:	mov    QWORD PTR [r12+0x28],rax
  42f4f1:	mov    BYTE PTR [r14],0x5d
  42f4f5:	add    rsp,0x8
  42f4f9:	pop    rbx
  42f4fa:	pop    r12
  42f4fc:	pop    r13
  42f4fe:	pop    r14
  42f500:	pop    r15
  42f502:	pop    rbp
  42f503:	ret    
  42f504:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f50e:	xchg   ax,ax

000000000042f510 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  42f510:	push   rbp
  42f511:	push   r15
  42f513:	push   r14
  42f515:	push   r13
  42f517:	push   r12
  42f519:	push   rbx
  42f51a:	push   rax
  42f51b:	mov    r12,rdi
  42f51e:	cmp    BYTE PTR [rdi+0x33],0x0
  42f522:	je     42f53a <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a>
  42f524:	mov    rdi,r12
  42f527:	add    rsp,0x8
  42f52b:	pop    rbx
  42f52c:	pop    r12
  42f52e:	pop    r13
  42f530:	pop    r14
  42f532:	pop    r15
  42f534:	pop    rbp
  42f535:	jmp    42ca50 <flatcc_json_printer_int16_vector_field@@Base>
  42f53a:	lea    eax,[rdx+rdx*1]
  42f53d:	add    eax,0x4
  42f540:	cmp    eax,DWORD PTR [rsi+0x10]
  42f543:	jge    42f865 <flatcc_json_printer_int16_enum_vector_field@@Base+0x355>
  42f549:	mov    rdx,QWORD PTR [rsi+0x8]
  42f54d:	mov    eax,eax
  42f54f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42f554:	test   r13,r13
  42f557:	je     42f865 <flatcc_json_printer_int16_enum_vector_field@@Base+0x355>
  42f55d:	add    r13,QWORD PTR [rsi]
  42f560:	je     42f865 <flatcc_json_printer_int16_enum_vector_field@@Base+0x355>
  42f566:	mov    r14,r9
  42f569:	mov    eax,DWORD PTR [rsi+0x18]
  42f56c:	lea    edx,[rax+0x1]
  42f56f:	mov    DWORD PTR [rsi+0x18],edx
  42f572:	test   eax,eax
  42f574:	je     42f587 <flatcc_json_printer_int16_enum_vector_field@@Base+0x77>
  42f576:	mov    rax,QWORD PTR [r12+0x28]
  42f57b:	lea    rdx,[rax+0x1]
  42f57f:	mov    QWORD PTR [r12+0x28],rdx
  42f584:	mov    BYTE PTR [rax],0x2c
  42f587:	mov    ebx,DWORD PTR [r13+0x0]
  42f58b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42f590:	movsxd rdx,r8d
  42f593:	mov    rdi,r12
  42f596:	mov    rsi,rcx
  42f599:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42f59e:	add    DWORD PTR [r12+0x38],0x1
  42f5a4:	mov    rax,QWORD PTR [r12+0x28]
  42f5a9:	lea    rcx,[rax+0x1]
  42f5ad:	mov    QWORD PTR [r12+0x28],rcx
  42f5b2:	mov    BYTE PTR [rax],0x5b
  42f5b5:	test   ebp,ebp
  42f5b7:	je     42f797 <flatcc_json_printer_int16_enum_vector_field@@Base+0x287>
  42f5bd:	add    r13,rbx
  42f5c0:	cmp    BYTE PTR [r12+0x31],0x0
  42f5c6:	mov    rax,QWORD PTR [r12+0x28]
  42f5cb:	je     42f665 <flatcc_json_printer_int16_enum_vector_field@@Base+0x155>
  42f5d1:	lea    rcx,[rax+0x1]
  42f5d5:	mov    QWORD PTR [r12+0x28],rcx
  42f5da:	mov    BYTE PTR [rax],0xa
  42f5dd:	movsxd rax,DWORD PTR [r12+0x38]
  42f5e2:	movzx  r15d,BYTE PTR [r12+0x31]
  42f5e8:	imul   r15,rax
  42f5ec:	mov    rbx,QWORD PTR [r12+0x20]
  42f5f1:	mov    rdi,QWORD PTR [r12+0x28]
  42f5f6:	lea    rax,[rdi+r15*1]
  42f5fa:	cmp    rax,rbx
  42f5fd:	jbe    42f651 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  42f5ff:	cmp    rdi,rbx
  42f602:	jb     42f618 <flatcc_json_printer_int16_enum_vector_field@@Base+0x108>
  42f604:	xor    esi,esi
  42f606:	mov    rdi,r12
  42f609:	call   QWORD PTR [r12+0x48]
  42f60e:	mov    rbx,QWORD PTR [r12+0x20]
  42f613:	mov    rdi,QWORD PTR [r12+0x28]
  42f618:	sub    rbx,rdi
  42f61b:	cmp    rbx,r15
  42f61e:	jae    42f651 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  42f620:	mov    esi,0x20
  42f625:	mov    rdx,rbx
  42f628:	call   406080 <memset@plt>
  42f62d:	add    QWORD PTR [r12+0x28],rbx
  42f632:	sub    r15,rbx
  42f635:	xor    esi,esi
  42f637:	mov    rdi,r12
  42f63a:	call   QWORD PTR [r12+0x48]
  42f63f:	mov    rbx,QWORD PTR [r12+0x20]
  42f644:	mov    rdi,QWORD PTR [r12+0x28]
  42f649:	sub    rbx,rdi
  42f64c:	cmp    r15,rbx
  42f64f:	ja     42f620 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
  42f651:	mov    esi,0x20
  42f656:	mov    rdx,r15
  42f659:	call   406080 <memset@plt>
  42f65e:	add    QWORD PTR [r12+0x28],r15
  42f663:	jmp    42f676 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  42f665:	cmp    rax,QWORD PTR [r12+0x20]
  42f66a:	jb     42f676 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  42f66c:	xor    esi,esi
  42f66e:	mov    rdi,r12
  42f671:	call   QWORD PTR [r12+0x48]
  42f676:	movsx  esi,WORD PTR [r13+0x4]
  42f67b:	mov    rdi,r12
  42f67e:	call   r14
  42f681:	add    ebp,0xffffffff
  42f684:	je     42f797 <flatcc_json_printer_int16_enum_vector_field@@Base+0x287>
  42f68a:	add    r13,0x6
  42f68e:	xchg   ax,ax
  42f690:	add    ebp,0xffffffff
  42f693:	mov    rax,QWORD PTR [r12+0x28]
  42f698:	lea    rcx,[rax+0x1]
  42f69c:	mov    QWORD PTR [r12+0x28],rcx
  42f6a1:	mov    BYTE PTR [rax],0x2c
  42f6a4:	cmp    BYTE PTR [r12+0x31],0x0
  42f6aa:	mov    rax,QWORD PTR [r12+0x28]
  42f6af:	je     42f760 <flatcc_json_printer_int16_enum_vector_field@@Base+0x250>
  42f6b5:	lea    rcx,[rax+0x1]
  42f6b9:	mov    QWORD PTR [r12+0x28],rcx
  42f6be:	mov    BYTE PTR [rax],0xa
  42f6c1:	movsxd rax,DWORD PTR [r12+0x38]
  42f6c6:	movzx  r15d,BYTE PTR [r12+0x31]
  42f6cc:	imul   r15,rax
  42f6d0:	mov    rbx,QWORD PTR [r12+0x20]
  42f6d5:	mov    rdi,QWORD PTR [r12+0x28]
  42f6da:	lea    rax,[rdi+r15*1]
  42f6de:	cmp    rax,rbx
  42f6e1:	jbe    42f741 <flatcc_json_printer_int16_enum_vector_field@@Base+0x231>
  42f6e3:	cmp    rdi,rbx
  42f6e6:	jb     42f6fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
  42f6e8:	xor    esi,esi
  42f6ea:	mov    rdi,r12
  42f6ed:	call   QWORD PTR [r12+0x48]
  42f6f2:	mov    rbx,QWORD PTR [r12+0x20]
  42f6f7:	mov    rdi,QWORD PTR [r12+0x28]
  42f6fc:	sub    rbx,rdi
  42f6ff:	cmp    rbx,r15
  42f702:	jae    42f741 <flatcc_json_printer_int16_enum_vector_field@@Base+0x231>
  42f704:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f70e:	xchg   ax,ax
  42f710:	mov    esi,0x20
  42f715:	mov    rdx,rbx
  42f718:	call   406080 <memset@plt>
  42f71d:	add    QWORD PTR [r12+0x28],rbx
  42f722:	sub    r15,rbx
  42f725:	xor    esi,esi
  42f727:	mov    rdi,r12
  42f72a:	call   QWORD PTR [r12+0x48]
  42f72f:	mov    rbx,QWORD PTR [r12+0x20]
  42f734:	mov    rdi,QWORD PTR [r12+0x28]
  42f739:	sub    rbx,rdi
  42f73c:	cmp    r15,rbx
  42f73f:	ja     42f710 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
  42f741:	mov    esi,0x20
  42f746:	mov    rdx,r15
  42f749:	call   406080 <memset@plt>
  42f74e:	add    QWORD PTR [r12+0x28],r15
  42f753:	jmp    42f780 <flatcc_json_printer_int16_enum_vector_field@@Base+0x270>
  42f755:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f75f:	nop
  42f760:	cmp    rax,QWORD PTR [r12+0x20]
  42f765:	jb     42f780 <flatcc_json_printer_int16_enum_vector_field@@Base+0x270>
  42f767:	xor    esi,esi
  42f769:	mov    rdi,r12
  42f76c:	call   QWORD PTR [r12+0x48]
  42f771:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f77b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f780:	movsx  esi,WORD PTR [r13+0x0]
  42f785:	mov    rdi,r12
  42f788:	call   r14
  42f78b:	add    r13,0x2
  42f78f:	test   ebp,ebp
  42f791:	jne    42f690 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  42f797:	cmp    BYTE PTR [r12+0x31],0x0
  42f79d:	mov    r14,QWORD PTR [r12+0x28]
  42f7a2:	je     42f858 <flatcc_json_printer_int16_enum_vector_field@@Base+0x348>
  42f7a8:	lea    rax,[r14+0x1]
  42f7ac:	mov    QWORD PTR [r12+0x28],rax
  42f7b1:	mov    BYTE PTR [r14],0xa
  42f7b5:	movsxd rax,DWORD PTR [r12+0x38]
  42f7ba:	add    rax,0xffffffffffffffff
  42f7be:	mov    DWORD PTR [r12+0x38],eax
  42f7c3:	movzx  r14d,BYTE PTR [r12+0x31]
  42f7c9:	imul   r14,rax
  42f7cd:	mov    rbx,QWORD PTR [r12+0x20]
  42f7d2:	mov    rdi,QWORD PTR [r12+0x28]
  42f7d7:	lea    rax,[rdi+r14*1]
  42f7db:	cmp    rax,rbx
  42f7de:	jbe    42f841 <flatcc_json_printer_int16_enum_vector_field@@Base+0x331>
  42f7e0:	cmp    rdi,rbx
  42f7e3:	jb     42f7f9 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e9>
  42f7e5:	xor    esi,esi
  42f7e7:	mov    rdi,r12
  42f7ea:	call   QWORD PTR [r12+0x48]
  42f7ef:	mov    rbx,QWORD PTR [r12+0x20]
  42f7f4:	mov    rdi,QWORD PTR [r12+0x28]
  42f7f9:	sub    rbx,rdi
  42f7fc:	cmp    rbx,r14
  42f7ff:	jae    42f841 <flatcc_json_printer_int16_enum_vector_field@@Base+0x331>
  42f801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f80b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f810:	mov    esi,0x20
  42f815:	mov    rdx,rbx
  42f818:	call   406080 <memset@plt>
  42f81d:	add    QWORD PTR [r12+0x28],rbx
  42f822:	sub    r14,rbx
  42f825:	xor    esi,esi
  42f827:	mov    rdi,r12
  42f82a:	call   QWORD PTR [r12+0x48]
  42f82f:	mov    rbx,QWORD PTR [r12+0x20]
  42f834:	mov    rdi,QWORD PTR [r12+0x28]
  42f839:	sub    rbx,rdi
  42f83c:	cmp    r14,rbx
  42f83f:	ja     42f810 <flatcc_json_printer_int16_enum_vector_field@@Base+0x300>
  42f841:	mov    esi,0x20
  42f846:	mov    rdx,r14
  42f849:	call   406080 <memset@plt>
  42f84e:	add    r14,QWORD PTR [r12+0x28]
  42f853:	mov    QWORD PTR [r12+0x28],r14
  42f858:	lea    rax,[r14+0x1]
  42f85c:	mov    QWORD PTR [r12+0x28],rax
  42f861:	mov    BYTE PTR [r14],0x5d
  42f865:	add    rsp,0x8
  42f869:	pop    rbx
  42f86a:	pop    r12
  42f86c:	pop    r13
  42f86e:	pop    r14
  42f870:	pop    r15
  42f872:	pop    rbp
  42f873:	ret    
  42f874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f87e:	xchg   ax,ax

000000000042f880 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  42f880:	push   rbp
  42f881:	push   r15
  42f883:	push   r14
  42f885:	push   r13
  42f887:	push   r12
  42f889:	push   rbx
  42f88a:	push   rax
  42f88b:	mov    r12,rdi
  42f88e:	cmp    BYTE PTR [rdi+0x33],0x0
  42f892:	je     42f8aa <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a>
  42f894:	mov    rdi,r12
  42f897:	add    rsp,0x8
  42f89b:	pop    rbx
  42f89c:	pop    r12
  42f89e:	pop    r13
  42f8a0:	pop    r14
  42f8a2:	pop    r15
  42f8a4:	pop    rbp
  42f8a5:	jmp    42cff0 <flatcc_json_printer_int32_vector_field@@Base>
  42f8aa:	lea    eax,[rdx+rdx*1]
  42f8ad:	add    eax,0x4
  42f8b0:	cmp    eax,DWORD PTR [rsi+0x10]
  42f8b3:	jge    42fbc5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  42f8b9:	mov    rdx,QWORD PTR [rsi+0x8]
  42f8bd:	mov    eax,eax
  42f8bf:	movzx  r13d,WORD PTR [rdx+rax*1]
  42f8c4:	test   r13,r13
  42f8c7:	je     42fbc5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  42f8cd:	add    r13,QWORD PTR [rsi]
  42f8d0:	je     42fbc5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  42f8d6:	mov    r14,r9
  42f8d9:	mov    eax,DWORD PTR [rsi+0x18]
  42f8dc:	lea    edx,[rax+0x1]
  42f8df:	mov    DWORD PTR [rsi+0x18],edx
  42f8e2:	test   eax,eax
  42f8e4:	je     42f8f7 <flatcc_json_printer_int32_enum_vector_field@@Base+0x77>
  42f8e6:	mov    rax,QWORD PTR [r12+0x28]
  42f8eb:	lea    rdx,[rax+0x1]
  42f8ef:	mov    QWORD PTR [r12+0x28],rdx
  42f8f4:	mov    BYTE PTR [rax],0x2c
  42f8f7:	mov    ebx,DWORD PTR [r13+0x0]
  42f8fb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42f900:	movsxd rdx,r8d
  42f903:	mov    rdi,r12
  42f906:	mov    rsi,rcx
  42f909:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42f90e:	add    DWORD PTR [r12+0x38],0x1
  42f914:	mov    rax,QWORD PTR [r12+0x28]
  42f919:	lea    rcx,[rax+0x1]
  42f91d:	mov    QWORD PTR [r12+0x28],rcx
  42f922:	mov    BYTE PTR [rax],0x5b
  42f925:	test   ebp,ebp
  42f927:	je     42fb06 <flatcc_json_printer_int32_enum_vector_field@@Base+0x286>
  42f92d:	add    r13,rbx
  42f930:	cmp    BYTE PTR [r12+0x31],0x0
  42f936:	mov    rax,QWORD PTR [r12+0x28]
  42f93b:	je     42f9d5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x155>
  42f941:	lea    rcx,[rax+0x1]
  42f945:	mov    QWORD PTR [r12+0x28],rcx
  42f94a:	mov    BYTE PTR [rax],0xa
  42f94d:	movsxd rax,DWORD PTR [r12+0x38]
  42f952:	movzx  r15d,BYTE PTR [r12+0x31]
  42f958:	imul   r15,rax
  42f95c:	mov    rbx,QWORD PTR [r12+0x20]
  42f961:	mov    rdi,QWORD PTR [r12+0x28]
  42f966:	lea    rax,[rdi+r15*1]
  42f96a:	cmp    rax,rbx
  42f96d:	jbe    42f9c1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  42f96f:	cmp    rdi,rbx
  42f972:	jb     42f988 <flatcc_json_printer_int32_enum_vector_field@@Base+0x108>
  42f974:	xor    esi,esi
  42f976:	mov    rdi,r12
  42f979:	call   QWORD PTR [r12+0x48]
  42f97e:	mov    rbx,QWORD PTR [r12+0x20]
  42f983:	mov    rdi,QWORD PTR [r12+0x28]
  42f988:	sub    rbx,rdi
  42f98b:	cmp    rbx,r15
  42f98e:	jae    42f9c1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  42f990:	mov    esi,0x20
  42f995:	mov    rdx,rbx
  42f998:	call   406080 <memset@plt>
  42f99d:	add    QWORD PTR [r12+0x28],rbx
  42f9a2:	sub    r15,rbx
  42f9a5:	xor    esi,esi
  42f9a7:	mov    rdi,r12
  42f9aa:	call   QWORD PTR [r12+0x48]
  42f9af:	mov    rbx,QWORD PTR [r12+0x20]
  42f9b4:	mov    rdi,QWORD PTR [r12+0x28]
  42f9b9:	sub    rbx,rdi
  42f9bc:	cmp    r15,rbx
  42f9bf:	ja     42f990 <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
  42f9c1:	mov    esi,0x20
  42f9c6:	mov    rdx,r15
  42f9c9:	call   406080 <memset@plt>
  42f9ce:	add    QWORD PTR [r12+0x28],r15
  42f9d3:	jmp    42f9e6 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  42f9d5:	cmp    rax,QWORD PTR [r12+0x20]
  42f9da:	jb     42f9e6 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  42f9dc:	xor    esi,esi
  42f9de:	mov    rdi,r12
  42f9e1:	call   QWORD PTR [r12+0x48]
  42f9e6:	mov    esi,DWORD PTR [r13+0x4]
  42f9ea:	mov    rdi,r12
  42f9ed:	call   r14
  42f9f0:	add    ebp,0xffffffff
  42f9f3:	je     42fb06 <flatcc_json_printer_int32_enum_vector_field@@Base+0x286>
  42f9f9:	add    r13,0x8
  42f9fd:	nop    DWORD PTR [rax]
  42fa00:	add    ebp,0xffffffff
  42fa03:	mov    rax,QWORD PTR [r12+0x28]
  42fa08:	lea    rcx,[rax+0x1]
  42fa0c:	mov    QWORD PTR [r12+0x28],rcx
  42fa11:	mov    BYTE PTR [rax],0x2c
  42fa14:	cmp    BYTE PTR [r12+0x31],0x0
  42fa1a:	mov    rax,QWORD PTR [r12+0x28]
  42fa1f:	je     42fad0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x250>
  42fa25:	lea    rcx,[rax+0x1]
  42fa29:	mov    QWORD PTR [r12+0x28],rcx
  42fa2e:	mov    BYTE PTR [rax],0xa
  42fa31:	movsxd rax,DWORD PTR [r12+0x38]
  42fa36:	movzx  r15d,BYTE PTR [r12+0x31]
  42fa3c:	imul   r15,rax
  42fa40:	mov    rbx,QWORD PTR [r12+0x20]
  42fa45:	mov    rdi,QWORD PTR [r12+0x28]
  42fa4a:	lea    rax,[rdi+r15*1]
  42fa4e:	cmp    rax,rbx
  42fa51:	jbe    42fab1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x231>
  42fa53:	cmp    rdi,rbx
  42fa56:	jb     42fa6c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
  42fa58:	xor    esi,esi
  42fa5a:	mov    rdi,r12
  42fa5d:	call   QWORD PTR [r12+0x48]
  42fa62:	mov    rbx,QWORD PTR [r12+0x20]
  42fa67:	mov    rdi,QWORD PTR [r12+0x28]
  42fa6c:	sub    rbx,rdi
  42fa6f:	cmp    rbx,r15
  42fa72:	jae    42fab1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x231>
  42fa74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa7e:	xchg   ax,ax
  42fa80:	mov    esi,0x20
  42fa85:	mov    rdx,rbx
  42fa88:	call   406080 <memset@plt>
  42fa8d:	add    QWORD PTR [r12+0x28],rbx
  42fa92:	sub    r15,rbx
  42fa95:	xor    esi,esi
  42fa97:	mov    rdi,r12
  42fa9a:	call   QWORD PTR [r12+0x48]
  42fa9f:	mov    rbx,QWORD PTR [r12+0x20]
  42faa4:	mov    rdi,QWORD PTR [r12+0x28]
  42faa9:	sub    rbx,rdi
  42faac:	cmp    r15,rbx
  42faaf:	ja     42fa80 <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
  42fab1:	mov    esi,0x20
  42fab6:	mov    rdx,r15
  42fab9:	call   406080 <memset@plt>
  42fabe:	add    QWORD PTR [r12+0x28],r15
  42fac3:	jmp    42faf0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
  42fac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42facf:	nop
  42fad0:	cmp    rax,QWORD PTR [r12+0x20]
  42fad5:	jb     42faf0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
  42fad7:	xor    esi,esi
  42fad9:	mov    rdi,r12
  42fadc:	call   QWORD PTR [r12+0x48]
  42fae1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42faeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42faf0:	mov    esi,DWORD PTR [r13+0x0]
  42faf4:	mov    rdi,r12
  42faf7:	call   r14
  42fafa:	add    r13,0x4
  42fafe:	test   ebp,ebp
  42fb00:	jne    42fa00 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  42fb06:	cmp    BYTE PTR [r12+0x31],0x0
  42fb0c:	mov    r14,QWORD PTR [r12+0x28]
  42fb11:	je     42fbb8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
  42fb17:	lea    rax,[r14+0x1]
  42fb1b:	mov    QWORD PTR [r12+0x28],rax
  42fb20:	mov    BYTE PTR [r14],0xa
  42fb24:	movsxd rax,DWORD PTR [r12+0x38]
  42fb29:	add    rax,0xffffffffffffffff
  42fb2d:	mov    DWORD PTR [r12+0x38],eax
  42fb32:	movzx  r14d,BYTE PTR [r12+0x31]
  42fb38:	imul   r14,rax
  42fb3c:	mov    rbx,QWORD PTR [r12+0x20]
  42fb41:	mov    rdi,QWORD PTR [r12+0x28]
  42fb46:	lea    rax,[rdi+r14*1]
  42fb4a:	cmp    rax,rbx
  42fb4d:	jbe    42fba1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  42fb4f:	cmp    rdi,rbx
  42fb52:	jb     42fb68 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e8>
  42fb54:	xor    esi,esi
  42fb56:	mov    rdi,r12
  42fb59:	call   QWORD PTR [r12+0x48]
  42fb5e:	mov    rbx,QWORD PTR [r12+0x20]
  42fb63:	mov    rdi,QWORD PTR [r12+0x28]
  42fb68:	sub    rbx,rdi
  42fb6b:	cmp    rbx,r14
  42fb6e:	jae    42fba1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  42fb70:	mov    esi,0x20
  42fb75:	mov    rdx,rbx
  42fb78:	call   406080 <memset@plt>
  42fb7d:	add    QWORD PTR [r12+0x28],rbx
  42fb82:	sub    r14,rbx
  42fb85:	xor    esi,esi
  42fb87:	mov    rdi,r12
  42fb8a:	call   QWORD PTR [r12+0x48]
  42fb8f:	mov    rbx,QWORD PTR [r12+0x20]
  42fb94:	mov    rdi,QWORD PTR [r12+0x28]
  42fb99:	sub    rbx,rdi
  42fb9c:	cmp    r14,rbx
  42fb9f:	ja     42fb70 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2f0>
  42fba1:	mov    esi,0x20
  42fba6:	mov    rdx,r14
  42fba9:	call   406080 <memset@plt>
  42fbae:	add    r14,QWORD PTR [r12+0x28]
  42fbb3:	mov    QWORD PTR [r12+0x28],r14
  42fbb8:	lea    rax,[r14+0x1]
  42fbbc:	mov    QWORD PTR [r12+0x28],rax
  42fbc1:	mov    BYTE PTR [r14],0x5d
  42fbc5:	add    rsp,0x8
  42fbc9:	pop    rbx
  42fbca:	pop    r12
  42fbcc:	pop    r13
  42fbce:	pop    r14
  42fbd0:	pop    r15
  42fbd2:	pop    rbp
  42fbd3:	ret    
  42fbd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fbde:	xchg   ax,ax

000000000042fbe0 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  42fbe0:	push   rbp
  42fbe1:	push   r15
  42fbe3:	push   r14
  42fbe5:	push   r13
  42fbe7:	push   r12
  42fbe9:	push   rbx
  42fbea:	push   rax
  42fbeb:	mov    r12,rdi
  42fbee:	cmp    BYTE PTR [rdi+0x33],0x0
  42fbf2:	je     42fc0a <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a>
  42fbf4:	mov    rdi,r12
  42fbf7:	add    rsp,0x8
  42fbfb:	pop    rbx
  42fbfc:	pop    r12
  42fbfe:	pop    r13
  42fc00:	pop    r14
  42fc02:	pop    r15
  42fc04:	pop    rbp
  42fc05:	jmp    42d340 <flatcc_json_printer_int64_vector_field@@Base>
  42fc0a:	lea    eax,[rdx+rdx*1]
  42fc0d:	add    eax,0x4
  42fc10:	cmp    eax,DWORD PTR [rsi+0x10]
  42fc13:	jge    42ff25 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  42fc19:	mov    rdx,QWORD PTR [rsi+0x8]
  42fc1d:	mov    eax,eax
  42fc1f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42fc24:	test   r13,r13
  42fc27:	je     42ff25 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  42fc2d:	add    r13,QWORD PTR [rsi]
  42fc30:	je     42ff25 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  42fc36:	mov    r14,r9
  42fc39:	mov    eax,DWORD PTR [rsi+0x18]
  42fc3c:	lea    edx,[rax+0x1]
  42fc3f:	mov    DWORD PTR [rsi+0x18],edx
  42fc42:	test   eax,eax
  42fc44:	je     42fc57 <flatcc_json_printer_int64_enum_vector_field@@Base+0x77>
  42fc46:	mov    rax,QWORD PTR [r12+0x28]
  42fc4b:	lea    rdx,[rax+0x1]
  42fc4f:	mov    QWORD PTR [r12+0x28],rdx
  42fc54:	mov    BYTE PTR [rax],0x2c
  42fc57:	mov    ebx,DWORD PTR [r13+0x0]
  42fc5b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42fc60:	movsxd rdx,r8d
  42fc63:	mov    rdi,r12
  42fc66:	mov    rsi,rcx
  42fc69:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42fc6e:	add    DWORD PTR [r12+0x38],0x1
  42fc74:	mov    rax,QWORD PTR [r12+0x28]
  42fc79:	lea    rcx,[rax+0x1]
  42fc7d:	mov    QWORD PTR [r12+0x28],rcx
  42fc82:	mov    BYTE PTR [rax],0x5b
  42fc85:	test   ebp,ebp
  42fc87:	je     42fe66 <flatcc_json_printer_int64_enum_vector_field@@Base+0x286>
  42fc8d:	add    r13,rbx
  42fc90:	cmp    BYTE PTR [r12+0x31],0x0
  42fc96:	mov    rax,QWORD PTR [r12+0x28]
  42fc9b:	je     42fd35 <flatcc_json_printer_int64_enum_vector_field@@Base+0x155>
  42fca1:	lea    rcx,[rax+0x1]
  42fca5:	mov    QWORD PTR [r12+0x28],rcx
  42fcaa:	mov    BYTE PTR [rax],0xa
  42fcad:	movsxd rax,DWORD PTR [r12+0x38]
  42fcb2:	movzx  r15d,BYTE PTR [r12+0x31]
  42fcb8:	imul   r15,rax
  42fcbc:	mov    rbx,QWORD PTR [r12+0x20]
  42fcc1:	mov    rdi,QWORD PTR [r12+0x28]
  42fcc6:	lea    rax,[rdi+r15*1]
  42fcca:	cmp    rax,rbx
  42fccd:	jbe    42fd21 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  42fccf:	cmp    rdi,rbx
  42fcd2:	jb     42fce8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x108>
  42fcd4:	xor    esi,esi
  42fcd6:	mov    rdi,r12
  42fcd9:	call   QWORD PTR [r12+0x48]
  42fcde:	mov    rbx,QWORD PTR [r12+0x20]
  42fce3:	mov    rdi,QWORD PTR [r12+0x28]
  42fce8:	sub    rbx,rdi
  42fceb:	cmp    rbx,r15
  42fcee:	jae    42fd21 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  42fcf0:	mov    esi,0x20
  42fcf5:	mov    rdx,rbx
  42fcf8:	call   406080 <memset@plt>
  42fcfd:	add    QWORD PTR [r12+0x28],rbx
  42fd02:	sub    r15,rbx
  42fd05:	xor    esi,esi
  42fd07:	mov    rdi,r12
  42fd0a:	call   QWORD PTR [r12+0x48]
  42fd0f:	mov    rbx,QWORD PTR [r12+0x20]
  42fd14:	mov    rdi,QWORD PTR [r12+0x28]
  42fd19:	sub    rbx,rdi
  42fd1c:	cmp    r15,rbx
  42fd1f:	ja     42fcf0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
  42fd21:	mov    esi,0x20
  42fd26:	mov    rdx,r15
  42fd29:	call   406080 <memset@plt>
  42fd2e:	add    QWORD PTR [r12+0x28],r15
  42fd33:	jmp    42fd46 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  42fd35:	cmp    rax,QWORD PTR [r12+0x20]
  42fd3a:	jb     42fd46 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  42fd3c:	xor    esi,esi
  42fd3e:	mov    rdi,r12
  42fd41:	call   QWORD PTR [r12+0x48]
  42fd46:	mov    rsi,QWORD PTR [r13+0x4]
  42fd4a:	mov    rdi,r12
  42fd4d:	call   r14
  42fd50:	add    ebp,0xffffffff
  42fd53:	je     42fe66 <flatcc_json_printer_int64_enum_vector_field@@Base+0x286>
  42fd59:	add    r13,0xc
  42fd5d:	nop    DWORD PTR [rax]
  42fd60:	add    ebp,0xffffffff
  42fd63:	mov    rax,QWORD PTR [r12+0x28]
  42fd68:	lea    rcx,[rax+0x1]
  42fd6c:	mov    QWORD PTR [r12+0x28],rcx
  42fd71:	mov    BYTE PTR [rax],0x2c
  42fd74:	cmp    BYTE PTR [r12+0x31],0x0
  42fd7a:	mov    rax,QWORD PTR [r12+0x28]
  42fd7f:	je     42fe30 <flatcc_json_printer_int64_enum_vector_field@@Base+0x250>
  42fd85:	lea    rcx,[rax+0x1]
  42fd89:	mov    QWORD PTR [r12+0x28],rcx
  42fd8e:	mov    BYTE PTR [rax],0xa
  42fd91:	movsxd rax,DWORD PTR [r12+0x38]
  42fd96:	movzx  r15d,BYTE PTR [r12+0x31]
  42fd9c:	imul   r15,rax
  42fda0:	mov    rbx,QWORD PTR [r12+0x20]
  42fda5:	mov    rdi,QWORD PTR [r12+0x28]
  42fdaa:	lea    rax,[rdi+r15*1]
  42fdae:	cmp    rax,rbx
  42fdb1:	jbe    42fe11 <flatcc_json_printer_int64_enum_vector_field@@Base+0x231>
  42fdb3:	cmp    rdi,rbx
  42fdb6:	jb     42fdcc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
  42fdb8:	xor    esi,esi
  42fdba:	mov    rdi,r12
  42fdbd:	call   QWORD PTR [r12+0x48]
  42fdc2:	mov    rbx,QWORD PTR [r12+0x20]
  42fdc7:	mov    rdi,QWORD PTR [r12+0x28]
  42fdcc:	sub    rbx,rdi
  42fdcf:	cmp    rbx,r15
  42fdd2:	jae    42fe11 <flatcc_json_printer_int64_enum_vector_field@@Base+0x231>
  42fdd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fdde:	xchg   ax,ax
  42fde0:	mov    esi,0x20
  42fde5:	mov    rdx,rbx
  42fde8:	call   406080 <memset@plt>
  42fded:	add    QWORD PTR [r12+0x28],rbx
  42fdf2:	sub    r15,rbx
  42fdf5:	xor    esi,esi
  42fdf7:	mov    rdi,r12
  42fdfa:	call   QWORD PTR [r12+0x48]
  42fdff:	mov    rbx,QWORD PTR [r12+0x20]
  42fe04:	mov    rdi,QWORD PTR [r12+0x28]
  42fe09:	sub    rbx,rdi
  42fe0c:	cmp    r15,rbx
  42fe0f:	ja     42fde0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x200>
  42fe11:	mov    esi,0x20
  42fe16:	mov    rdx,r15
  42fe19:	call   406080 <memset@plt>
  42fe1e:	add    QWORD PTR [r12+0x28],r15
  42fe23:	jmp    42fe50 <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
  42fe25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe2f:	nop
  42fe30:	cmp    rax,QWORD PTR [r12+0x20]
  42fe35:	jb     42fe50 <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
  42fe37:	xor    esi,esi
  42fe39:	mov    rdi,r12
  42fe3c:	call   QWORD PTR [r12+0x48]
  42fe41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fe50:	mov    rsi,QWORD PTR [r13+0x0]
  42fe54:	mov    rdi,r12
  42fe57:	call   r14
  42fe5a:	add    r13,0x8
  42fe5e:	test   ebp,ebp
  42fe60:	jne    42fd60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  42fe66:	cmp    BYTE PTR [r12+0x31],0x0
  42fe6c:	mov    r14,QWORD PTR [r12+0x28]
  42fe71:	je     42ff18 <flatcc_json_printer_int64_enum_vector_field@@Base+0x338>
  42fe77:	lea    rax,[r14+0x1]
  42fe7b:	mov    QWORD PTR [r12+0x28],rax
  42fe80:	mov    BYTE PTR [r14],0xa
  42fe84:	movsxd rax,DWORD PTR [r12+0x38]
  42fe89:	add    rax,0xffffffffffffffff
  42fe8d:	mov    DWORD PTR [r12+0x38],eax
  42fe92:	movzx  r14d,BYTE PTR [r12+0x31]
  42fe98:	imul   r14,rax
  42fe9c:	mov    rbx,QWORD PTR [r12+0x20]
  42fea1:	mov    rdi,QWORD PTR [r12+0x28]
  42fea6:	lea    rax,[rdi+r14*1]
  42feaa:	cmp    rax,rbx
  42fead:	jbe    42ff01 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  42feaf:	cmp    rdi,rbx
  42feb2:	jb     42fec8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
  42feb4:	xor    esi,esi
  42feb6:	mov    rdi,r12
  42feb9:	call   QWORD PTR [r12+0x48]
  42febe:	mov    rbx,QWORD PTR [r12+0x20]
  42fec3:	mov    rdi,QWORD PTR [r12+0x28]
  42fec8:	sub    rbx,rdi
  42fecb:	cmp    rbx,r14
  42fece:	jae    42ff01 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  42fed0:	mov    esi,0x20
  42fed5:	mov    rdx,rbx
  42fed8:	call   406080 <memset@plt>
  42fedd:	add    QWORD PTR [r12+0x28],rbx
  42fee2:	sub    r14,rbx
  42fee5:	xor    esi,esi
  42fee7:	mov    rdi,r12
  42feea:	call   QWORD PTR [r12+0x48]
  42feef:	mov    rbx,QWORD PTR [r12+0x20]
  42fef4:	mov    rdi,QWORD PTR [r12+0x28]
  42fef9:	sub    rbx,rdi
  42fefc:	cmp    r14,rbx
  42feff:	ja     42fed0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2f0>
  42ff01:	mov    esi,0x20
  42ff06:	mov    rdx,r14
  42ff09:	call   406080 <memset@plt>
  42ff0e:	add    r14,QWORD PTR [r12+0x28]
  42ff13:	mov    QWORD PTR [r12+0x28],r14
  42ff18:	lea    rax,[r14+0x1]
  42ff1c:	mov    QWORD PTR [r12+0x28],rax
  42ff21:	mov    BYTE PTR [r14],0x5d
  42ff25:	add    rsp,0x8
  42ff29:	pop    rbx
  42ff2a:	pop    r12
  42ff2c:	pop    r13
  42ff2e:	pop    r14
  42ff30:	pop    r15
  42ff32:	pop    rbp
  42ff33:	ret    
  42ff34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ff3e:	xchg   ax,ax

000000000042ff40 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  42ff40:	push   rbp
  42ff41:	push   r15
  42ff43:	push   r14
  42ff45:	push   r13
  42ff47:	push   r12
  42ff49:	push   rbx
  42ff4a:	push   rax
  42ff4b:	mov    r12,rdi
  42ff4e:	cmp    BYTE PTR [rdi+0x33],0x0
  42ff52:	je     42ff6a <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a>
  42ff54:	mov    rdi,r12
  42ff57:	add    rsp,0x8
  42ff5b:	pop    rbx
  42ff5c:	pop    r12
  42ff5e:	pop    r13
  42ff60:	pop    r14
  42ff62:	pop    r15
  42ff64:	pop    rbp
  42ff65:	jmp    42d6a0 <flatcc_json_printer_bool_vector_field@@Base>
  42ff6a:	lea    eax,[rdx+rdx*1]
  42ff6d:	add    eax,0x4
  42ff70:	cmp    eax,DWORD PTR [rsi+0x10]
  42ff73:	jge    430295 <flatcc_json_printer_bool_enum_vector_field@@Base+0x355>
  42ff79:	mov    rdx,QWORD PTR [rsi+0x8]
  42ff7d:	mov    eax,eax
  42ff7f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42ff84:	test   r13,r13
  42ff87:	je     430295 <flatcc_json_printer_bool_enum_vector_field@@Base+0x355>
  42ff8d:	add    r13,QWORD PTR [rsi]
  42ff90:	je     430295 <flatcc_json_printer_bool_enum_vector_field@@Base+0x355>
  42ff96:	mov    r14,r9
  42ff99:	mov    eax,DWORD PTR [rsi+0x18]
  42ff9c:	lea    edx,[rax+0x1]
  42ff9f:	mov    DWORD PTR [rsi+0x18],edx
  42ffa2:	test   eax,eax
  42ffa4:	je     42ffb7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x77>
  42ffa6:	mov    rax,QWORD PTR [r12+0x28]
  42ffab:	lea    rdx,[rax+0x1]
  42ffaf:	mov    QWORD PTR [r12+0x28],rdx
  42ffb4:	mov    BYTE PTR [rax],0x2c
  42ffb7:	mov    ebx,DWORD PTR [r13+0x0]
  42ffbb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42ffc0:	movsxd rdx,r8d
  42ffc3:	mov    rdi,r12
  42ffc6:	mov    rsi,rcx
  42ffc9:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  42ffce:	add    DWORD PTR [r12+0x38],0x1
  42ffd4:	mov    rax,QWORD PTR [r12+0x28]
  42ffd9:	lea    rcx,[rax+0x1]
  42ffdd:	mov    QWORD PTR [r12+0x28],rcx
  42ffe2:	mov    BYTE PTR [rax],0x5b
  42ffe5:	test   ebp,ebp
  42ffe7:	je     4301c7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x287>
  42ffed:	add    r13,rbx
  42fff0:	cmp    BYTE PTR [r12+0x31],0x0
  42fff6:	mov    rax,QWORD PTR [r12+0x28]
  42fffb:	je     430095 <flatcc_json_printer_bool_enum_vector_field@@Base+0x155>
  430001:	lea    rcx,[rax+0x1]
  430005:	mov    QWORD PTR [r12+0x28],rcx
  43000a:	mov    BYTE PTR [rax],0xa
  43000d:	movsxd rax,DWORD PTR [r12+0x38]
  430012:	movzx  r15d,BYTE PTR [r12+0x31]
  430018:	imul   r15,rax
  43001c:	mov    rbx,QWORD PTR [r12+0x20]
  430021:	mov    rdi,QWORD PTR [r12+0x28]
  430026:	lea    rax,[rdi+r15*1]
  43002a:	cmp    rax,rbx
  43002d:	jbe    430081 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  43002f:	cmp    rdi,rbx
  430032:	jb     430048 <flatcc_json_printer_bool_enum_vector_field@@Base+0x108>
  430034:	xor    esi,esi
  430036:	mov    rdi,r12
  430039:	call   QWORD PTR [r12+0x48]
  43003e:	mov    rbx,QWORD PTR [r12+0x20]
  430043:	mov    rdi,QWORD PTR [r12+0x28]
  430048:	sub    rbx,rdi
  43004b:	cmp    rbx,r15
  43004e:	jae    430081 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  430050:	mov    esi,0x20
  430055:	mov    rdx,rbx
  430058:	call   406080 <memset@plt>
  43005d:	add    QWORD PTR [r12+0x28],rbx
  430062:	sub    r15,rbx
  430065:	xor    esi,esi
  430067:	mov    rdi,r12
  43006a:	call   QWORD PTR [r12+0x48]
  43006f:	mov    rbx,QWORD PTR [r12+0x20]
  430074:	mov    rdi,QWORD PTR [r12+0x28]
  430079:	sub    rbx,rdi
  43007c:	cmp    r15,rbx
  43007f:	ja     430050 <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
  430081:	mov    esi,0x20
  430086:	mov    rdx,r15
  430089:	call   406080 <memset@plt>
  43008e:	add    QWORD PTR [r12+0x28],r15
  430093:	jmp    4300a6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  430095:	cmp    rax,QWORD PTR [r12+0x20]
  43009a:	jb     4300a6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  43009c:	xor    esi,esi
  43009e:	mov    rdi,r12
  4300a1:	call   QWORD PTR [r12+0x48]
  4300a6:	movzx  esi,BYTE PTR [r13+0x4]
  4300ab:	mov    rdi,r12
  4300ae:	call   r14
  4300b1:	add    ebp,0xffffffff
  4300b4:	je     4301c7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x287>
  4300ba:	add    r13,0x5
  4300be:	xchg   ax,ax
  4300c0:	add    ebp,0xffffffff
  4300c3:	mov    rax,QWORD PTR [r12+0x28]
  4300c8:	lea    rcx,[rax+0x1]
  4300cc:	mov    QWORD PTR [r12+0x28],rcx
  4300d1:	mov    BYTE PTR [rax],0x2c
  4300d4:	cmp    BYTE PTR [r12+0x31],0x0
  4300da:	mov    rax,QWORD PTR [r12+0x28]
  4300df:	je     430190 <flatcc_json_printer_bool_enum_vector_field@@Base+0x250>
  4300e5:	lea    rcx,[rax+0x1]
  4300e9:	mov    QWORD PTR [r12+0x28],rcx
  4300ee:	mov    BYTE PTR [rax],0xa
  4300f1:	movsxd rax,DWORD PTR [r12+0x38]
  4300f6:	movzx  r15d,BYTE PTR [r12+0x31]
  4300fc:	imul   r15,rax
  430100:	mov    rbx,QWORD PTR [r12+0x20]
  430105:	mov    rdi,QWORD PTR [r12+0x28]
  43010a:	lea    rax,[rdi+r15*1]
  43010e:	cmp    rax,rbx
  430111:	jbe    430171 <flatcc_json_printer_bool_enum_vector_field@@Base+0x231>
  430113:	cmp    rdi,rbx
  430116:	jb     43012c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
  430118:	xor    esi,esi
  43011a:	mov    rdi,r12
  43011d:	call   QWORD PTR [r12+0x48]
  430122:	mov    rbx,QWORD PTR [r12+0x20]
  430127:	mov    rdi,QWORD PTR [r12+0x28]
  43012c:	sub    rbx,rdi
  43012f:	cmp    rbx,r15
  430132:	jae    430171 <flatcc_json_printer_bool_enum_vector_field@@Base+0x231>
  430134:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43013e:	xchg   ax,ax
  430140:	mov    esi,0x20
  430145:	mov    rdx,rbx
  430148:	call   406080 <memset@plt>
  43014d:	add    QWORD PTR [r12+0x28],rbx
  430152:	sub    r15,rbx
  430155:	xor    esi,esi
  430157:	mov    rdi,r12
  43015a:	call   QWORD PTR [r12+0x48]
  43015f:	mov    rbx,QWORD PTR [r12+0x20]
  430164:	mov    rdi,QWORD PTR [r12+0x28]
  430169:	sub    rbx,rdi
  43016c:	cmp    r15,rbx
  43016f:	ja     430140 <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
  430171:	mov    esi,0x20
  430176:	mov    rdx,r15
  430179:	call   406080 <memset@plt>
  43017e:	add    QWORD PTR [r12+0x28],r15
  430183:	jmp    4301b0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
  430185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43018f:	nop
  430190:	cmp    rax,QWORD PTR [r12+0x20]
  430195:	jb     4301b0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
  430197:	xor    esi,esi
  430199:	mov    rdi,r12
  43019c:	call   QWORD PTR [r12+0x48]
  4301a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4301ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4301b0:	movzx  esi,BYTE PTR [r13+0x0]
  4301b5:	mov    rdi,r12
  4301b8:	call   r14
  4301bb:	add    r13,0x1
  4301bf:	test   ebp,ebp
  4301c1:	jne    4300c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  4301c7:	cmp    BYTE PTR [r12+0x31],0x0
  4301cd:	mov    r14,QWORD PTR [r12+0x28]
  4301d2:	je     430288 <flatcc_json_printer_bool_enum_vector_field@@Base+0x348>
  4301d8:	lea    rax,[r14+0x1]
  4301dc:	mov    QWORD PTR [r12+0x28],rax
  4301e1:	mov    BYTE PTR [r14],0xa
  4301e5:	movsxd rax,DWORD PTR [r12+0x38]
  4301ea:	add    rax,0xffffffffffffffff
  4301ee:	mov    DWORD PTR [r12+0x38],eax
  4301f3:	movzx  r14d,BYTE PTR [r12+0x31]
  4301f9:	imul   r14,rax
  4301fd:	mov    rbx,QWORD PTR [r12+0x20]
  430202:	mov    rdi,QWORD PTR [r12+0x28]
  430207:	lea    rax,[rdi+r14*1]
  43020b:	cmp    rax,rbx
  43020e:	jbe    430271 <flatcc_json_printer_bool_enum_vector_field@@Base+0x331>
  430210:	cmp    rdi,rbx
  430213:	jb     430229 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e9>
  430215:	xor    esi,esi
  430217:	mov    rdi,r12
  43021a:	call   QWORD PTR [r12+0x48]
  43021f:	mov    rbx,QWORD PTR [r12+0x20]
  430224:	mov    rdi,QWORD PTR [r12+0x28]
  430229:	sub    rbx,rdi
  43022c:	cmp    rbx,r14
  43022f:	jae    430271 <flatcc_json_printer_bool_enum_vector_field@@Base+0x331>
  430231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43023b:	nop    DWORD PTR [rax+rax*1+0x0]
  430240:	mov    esi,0x20
  430245:	mov    rdx,rbx
  430248:	call   406080 <memset@plt>
  43024d:	add    QWORD PTR [r12+0x28],rbx
  430252:	sub    r14,rbx
  430255:	xor    esi,esi
  430257:	mov    rdi,r12
  43025a:	call   QWORD PTR [r12+0x48]
  43025f:	mov    rbx,QWORD PTR [r12+0x20]
  430264:	mov    rdi,QWORD PTR [r12+0x28]
  430269:	sub    rbx,rdi
  43026c:	cmp    r14,rbx
  43026f:	ja     430240 <flatcc_json_printer_bool_enum_vector_field@@Base+0x300>
  430271:	mov    esi,0x20
  430276:	mov    rdx,r14
  430279:	call   406080 <memset@plt>
  43027e:	add    r14,QWORD PTR [r12+0x28]
  430283:	mov    QWORD PTR [r12+0x28],r14
  430288:	lea    rax,[r14+0x1]
  43028c:	mov    QWORD PTR [r12+0x28],rax
  430291:	mov    BYTE PTR [r14],0x5d
  430295:	add    rsp,0x8
  430299:	pop    rbx
  43029a:	pop    r12
  43029c:	pop    r13
  43029e:	pop    r14
  4302a0:	pop    r15
  4302a2:	pop    rbp
  4302a3:	ret    
  4302a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4302ae:	xchg   ax,ax

00000000004302b0 <flatcc_json_printer_struct_vector_field@@Base>:
  4302b0:	push   rbp
  4302b1:	push   r15
  4302b3:	push   r14
  4302b5:	push   r13
  4302b7:	push   r12
  4302b9:	push   rbx
  4302ba:	push   rax
  4302bb:	lea    eax,[rdx+rdx*1]
  4302be:	add    eax,0x4
  4302c1:	cmp    eax,DWORD PTR [rsi+0x10]
  4302c4:	jge    43075e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  4302ca:	mov    rdx,QWORD PTR [rsi+0x8]
  4302ce:	mov    eax,eax
  4302d0:	movzx  ebx,WORD PTR [rdx+rax*1]
  4302d4:	test   rbx,rbx
  4302d7:	je     43075e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  4302dd:	add    rbx,QWORD PTR [rsi]
  4302e0:	je     43075e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  4302e6:	mov    r14,r9
  4302e9:	mov    r13,rdi
  4302ec:	mov    eax,DWORD PTR [rsi+0x18]
  4302ef:	lea    edx,[rax+0x1]
  4302f2:	mov    DWORD PTR [rsi+0x18],edx
  4302f5:	test   eax,eax
  4302f7:	je     430308 <flatcc_json_printer_struct_vector_field@@Base+0x58>
  4302f9:	mov    rax,QWORD PTR [r13+0x28]
  4302fd:	lea    rdx,[rax+0x1]
  430301:	mov    QWORD PTR [r13+0x28],rdx
  430305:	mov    BYTE PTR [rax],0x2c
  430308:	mov    r15d,DWORD PTR [rbx]
  43030b:	mov    ebp,DWORD PTR [rbx+r15*1]
  43030f:	movsxd rdx,r8d
  430312:	mov    rdi,r13
  430315:	mov    rsi,rcx
  430318:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  43031d:	add    DWORD PTR [r13+0x38],0x1
  430322:	mov    rax,QWORD PTR [r13+0x28]
  430326:	lea    rcx,[rax+0x1]
  43032a:	mov    QWORD PTR [r13+0x28],rcx
  43032e:	mov    BYTE PTR [rax],0x5b
  430331:	test   ebp,ebp
  430333:	je     4306a8 <flatcc_json_printer_struct_vector_field@@Base+0x3f8>
  430339:	add    r15,rbx
  43033c:	add    r15,0x4
  430340:	cmp    BYTE PTR [r13+0x31],0x0
  430345:	mov    r12,QWORD PTR [r13+0x28]
  430349:	je     4303e4 <flatcc_json_printer_struct_vector_field@@Base+0x134>
  43034f:	lea    rax,[r12+0x1]
  430354:	mov    QWORD PTR [r13+0x28],rax
  430358:	mov    BYTE PTR [r12],0xa
  43035d:	movsxd rax,DWORD PTR [r13+0x38]
  430361:	movzx  r12d,BYTE PTR [r13+0x31]
  430366:	imul   r12,rax
  43036a:	mov    rbx,QWORD PTR [r13+0x20]
  43036e:	mov    rdi,QWORD PTR [r13+0x28]
  430372:	lea    rax,[rdi+r12*1]
  430376:	cmp    rax,rbx
  430379:	jbe    4303cd <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  43037b:	cmp    rdi,rbx
  43037e:	jb     430391 <flatcc_json_printer_struct_vector_field@@Base+0xe1>
  430380:	xor    esi,esi
  430382:	mov    rdi,r13
  430385:	call   QWORD PTR [r13+0x48]
  430389:	mov    rbx,QWORD PTR [r13+0x20]
  43038d:	mov    rdi,QWORD PTR [r13+0x28]
  430391:	sub    rbx,rdi
  430394:	cmp    rbx,r12
  430397:	jae    4303cd <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  430399:	nop    DWORD PTR [rax+0x0]
  4303a0:	mov    esi,0x20
  4303a5:	mov    rdx,rbx
  4303a8:	call   406080 <memset@plt>
  4303ad:	add    QWORD PTR [r13+0x28],rbx
  4303b1:	sub    r12,rbx
  4303b4:	xor    esi,esi
  4303b6:	mov    rdi,r13
  4303b9:	call   QWORD PTR [r13+0x48]
  4303bd:	mov    rbx,QWORD PTR [r13+0x20]
  4303c1:	mov    rdi,QWORD PTR [r13+0x28]
  4303c5:	sub    rbx,rdi
  4303c8:	cmp    r12,rbx
  4303cb:	ja     4303a0 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
  4303cd:	mov    esi,0x20
  4303d2:	mov    rdx,r12
  4303d5:	call   406080 <memset@plt>
  4303da:	add    r12,QWORD PTR [r13+0x28]
  4303de:	mov    QWORD PTR [r13+0x28],r12
  4303e2:	jmp    4303f7 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  4303e4:	cmp    r12,QWORD PTR [r13+0x20]
  4303e8:	jb     4303f7 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  4303ea:	xor    esi,esi
  4303ec:	mov    rdi,r13
  4303ef:	call   QWORD PTR [r13+0x48]
  4303f3:	mov    r12,QWORD PTR [r13+0x28]
  4303f7:	add    DWORD PTR [r13+0x38],0x1
  4303fc:	lea    rax,[r12+0x1]
  430401:	mov    QWORD PTR [r13+0x28],rax
  430405:	mov    BYTE PTR [r12],0x7b
  43040a:	mov    rdi,r13
  43040d:	mov    rsi,r15
  430410:	call   QWORD PTR [rsp+0x40]
  430414:	cmp    BYTE PTR [r13+0x31],0x0
  430419:	mov    r12,QWORD PTR [r13+0x28]
  43041d:	je     4304c2 <flatcc_json_printer_struct_vector_field@@Base+0x212>
  430423:	lea    rax,[r12+0x1]
  430428:	mov    QWORD PTR [r13+0x28],rax
  43042c:	mov    BYTE PTR [r12],0xa
  430431:	movsxd rax,DWORD PTR [r13+0x38]
  430435:	add    rax,0xffffffffffffffff
  430439:	mov    DWORD PTR [r13+0x38],eax
  43043d:	movzx  r12d,BYTE PTR [r13+0x31]
  430442:	imul   r12,rax
  430446:	mov    rbx,QWORD PTR [r13+0x20]
  43044a:	mov    rdi,QWORD PTR [r13+0x28]
  43044e:	lea    rax,[rdi+r12*1]
  430452:	cmp    rax,rbx
  430455:	jbe    4304ad <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  430457:	cmp    rdi,rbx
  43045a:	jb     43046d <flatcc_json_printer_struct_vector_field@@Base+0x1bd>
  43045c:	xor    esi,esi
  43045e:	mov    rdi,r13
  430461:	call   QWORD PTR [r13+0x48]
  430465:	mov    rbx,QWORD PTR [r13+0x20]
  430469:	mov    rdi,QWORD PTR [r13+0x28]
  43046d:	sub    rbx,rdi
  430470:	cmp    rbx,r12
  430473:	jae    4304ad <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  430475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43047f:	nop
  430480:	mov    esi,0x20
  430485:	mov    rdx,rbx
  430488:	call   406080 <memset@plt>
  43048d:	add    QWORD PTR [r13+0x28],rbx
  430491:	sub    r12,rbx
  430494:	xor    esi,esi
  430496:	mov    rdi,r13
  430499:	call   QWORD PTR [r13+0x48]
  43049d:	mov    rbx,QWORD PTR [r13+0x20]
  4304a1:	mov    rdi,QWORD PTR [r13+0x28]
  4304a5:	sub    rbx,rdi
  4304a8:	cmp    r12,rbx
  4304ab:	ja     430480 <flatcc_json_printer_struct_vector_field@@Base+0x1d0>
  4304ad:	mov    esi,0x20
  4304b2:	mov    rdx,r12
  4304b5:	call   406080 <memset@plt>
  4304ba:	add    r12,QWORD PTR [r13+0x28]
  4304be:	mov    QWORD PTR [r13+0x28],r12
  4304c2:	lea    rax,[r12+0x1]
  4304c7:	mov    QWORD PTR [r13+0x28],rax
  4304cb:	mov    BYTE PTR [r12],0x7d
  4304d0:	add    ebp,0xffffffff
  4304d3:	je     4306a8 <flatcc_json_printer_struct_vector_field@@Base+0x3f8>
  4304d9:	nop    DWORD PTR [rax+0x0]
  4304e0:	add    r15,r14
  4304e3:	mov    rax,QWORD PTR [r13+0x28]
  4304e7:	lea    rcx,[rax+0x1]
  4304eb:	mov    QWORD PTR [r13+0x28],rcx
  4304ef:	mov    BYTE PTR [rax],0x2c
  4304f2:	cmp    BYTE PTR [r13+0x31],0x0
  4304f7:	mov    r12,QWORD PTR [r13+0x28]
  4304fb:	je     4305a0 <flatcc_json_printer_struct_vector_field@@Base+0x2f0>
  430501:	lea    rax,[r12+0x1]
  430506:	mov    QWORD PTR [r13+0x28],rax
  43050a:	mov    BYTE PTR [r12],0xa
  43050f:	movsxd rax,DWORD PTR [r13+0x38]
  430513:	movzx  r12d,BYTE PTR [r13+0x31]
  430518:	imul   r12,rax
  43051c:	mov    rbx,QWORD PTR [r13+0x20]
  430520:	mov    rdi,QWORD PTR [r13+0x28]
  430524:	lea    rax,[rdi+r12*1]
  430528:	cmp    rax,rbx
  43052b:	jbe    43057d <flatcc_json_printer_struct_vector_field@@Base+0x2cd>
  43052d:	cmp    rdi,rbx
  430530:	jb     430543 <flatcc_json_printer_struct_vector_field@@Base+0x293>
  430532:	xor    esi,esi
  430534:	mov    rdi,r13
  430537:	call   QWORD PTR [r13+0x48]
  43053b:	mov    rbx,QWORD PTR [r13+0x20]
  43053f:	mov    rdi,QWORD PTR [r13+0x28]
  430543:	sub    rbx,rdi
  430546:	cmp    rbx,r12
  430549:	jae    43057d <flatcc_json_printer_struct_vector_field@@Base+0x2cd>
  43054b:	nop    DWORD PTR [rax+rax*1+0x0]
  430550:	mov    esi,0x20
  430555:	mov    rdx,rbx
  430558:	call   406080 <memset@plt>
  43055d:	add    QWORD PTR [r13+0x28],rbx
  430561:	sub    r12,rbx
  430564:	xor    esi,esi
  430566:	mov    rdi,r13
  430569:	call   QWORD PTR [r13+0x48]
  43056d:	mov    rbx,QWORD PTR [r13+0x20]
  430571:	mov    rdi,QWORD PTR [r13+0x28]
  430575:	sub    rbx,rdi
  430578:	cmp    r12,rbx
  43057b:	ja     430550 <flatcc_json_printer_struct_vector_field@@Base+0x2a0>
  43057d:	mov    esi,0x20
  430582:	mov    rdx,r12
  430585:	call   406080 <memset@plt>
  43058a:	add    r12,QWORD PTR [r13+0x28]
  43058e:	mov    QWORD PTR [r13+0x28],r12
  430592:	jmp    4305c0 <flatcc_json_printer_struct_vector_field@@Base+0x310>
  430594:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43059e:	xchg   ax,ax
  4305a0:	cmp    r12,QWORD PTR [r13+0x20]
  4305a4:	jb     4305c0 <flatcc_json_printer_struct_vector_field@@Base+0x310>
  4305a6:	xor    esi,esi
  4305a8:	mov    rdi,r13
  4305ab:	call   QWORD PTR [r13+0x48]
  4305af:	mov    r12,QWORD PTR [r13+0x28]
  4305b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4305bd:	nop    DWORD PTR [rax]
  4305c0:	add    ebp,0xffffffff
  4305c3:	add    DWORD PTR [r13+0x38],0x1
  4305c8:	lea    rax,[r12+0x1]
  4305cd:	mov    QWORD PTR [r13+0x28],rax
  4305d1:	mov    BYTE PTR [r12],0x7b
  4305d6:	mov    rdi,r13
  4305d9:	mov    rsi,r15
  4305dc:	call   QWORD PTR [rsp+0x40]
  4305e0:	cmp    BYTE PTR [r13+0x31],0x0
  4305e5:	mov    r12,QWORD PTR [r13+0x28]
  4305e9:	je     430692 <flatcc_json_printer_struct_vector_field@@Base+0x3e2>
  4305ef:	lea    rax,[r12+0x1]
  4305f4:	mov    QWORD PTR [r13+0x28],rax
  4305f8:	mov    BYTE PTR [r12],0xa
  4305fd:	movsxd rax,DWORD PTR [r13+0x38]
  430601:	add    rax,0xffffffffffffffff
  430605:	mov    DWORD PTR [r13+0x38],eax
  430609:	movzx  r12d,BYTE PTR [r13+0x31]
  43060e:	imul   r12,rax
  430612:	mov    rbx,QWORD PTR [r13+0x20]
  430616:	mov    rdi,QWORD PTR [r13+0x28]
  43061a:	lea    rax,[rdi+r12*1]
  43061e:	cmp    rax,rbx
  430621:	jbe    43067d <flatcc_json_printer_struct_vector_field@@Base+0x3cd>
  430623:	cmp    rdi,rbx
  430626:	jb     430639 <flatcc_json_printer_struct_vector_field@@Base+0x389>
  430628:	xor    esi,esi
  43062a:	mov    rdi,r13
  43062d:	call   QWORD PTR [r13+0x48]
  430631:	mov    rbx,QWORD PTR [r13+0x20]
  430635:	mov    rdi,QWORD PTR [r13+0x28]
  430639:	sub    rbx,rdi
  43063c:	cmp    rbx,r12
  43063f:	jae    43067d <flatcc_json_printer_struct_vector_field@@Base+0x3cd>
  430641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43064b:	nop    DWORD PTR [rax+rax*1+0x0]
  430650:	mov    esi,0x20
  430655:	mov    rdx,rbx
  430658:	call   406080 <memset@plt>
  43065d:	add    QWORD PTR [r13+0x28],rbx
  430661:	sub    r12,rbx
  430664:	xor    esi,esi
  430666:	mov    rdi,r13
  430669:	call   QWORD PTR [r13+0x48]
  43066d:	mov    rbx,QWORD PTR [r13+0x20]
  430671:	mov    rdi,QWORD PTR [r13+0x28]
  430675:	sub    rbx,rdi
  430678:	cmp    r12,rbx
  43067b:	ja     430650 <flatcc_json_printer_struct_vector_field@@Base+0x3a0>
  43067d:	mov    esi,0x20
  430682:	mov    rdx,r12
  430685:	call   406080 <memset@plt>
  43068a:	add    r12,QWORD PTR [r13+0x28]
  43068e:	mov    QWORD PTR [r13+0x28],r12
  430692:	lea    rax,[r12+0x1]
  430697:	mov    QWORD PTR [r13+0x28],rax
  43069b:	mov    BYTE PTR [r12],0x7d
  4306a0:	test   ebp,ebp
  4306a2:	jne    4304e0 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  4306a8:	cmp    BYTE PTR [r13+0x31],0x0
  4306ad:	mov    r14,QWORD PTR [r13+0x28]
  4306b1:	je     430752 <flatcc_json_printer_struct_vector_field@@Base+0x4a2>
  4306b7:	lea    rax,[r14+0x1]
  4306bb:	mov    QWORD PTR [r13+0x28],rax
  4306bf:	mov    BYTE PTR [r14],0xa
  4306c3:	movsxd rax,DWORD PTR [r13+0x38]
  4306c7:	add    rax,0xffffffffffffffff
  4306cb:	mov    DWORD PTR [r13+0x38],eax
  4306cf:	movzx  r14d,BYTE PTR [r13+0x31]
  4306d4:	imul   r14,rax
  4306d8:	mov    rbx,QWORD PTR [r13+0x20]
  4306dc:	mov    rdi,QWORD PTR [r13+0x28]
  4306e0:	lea    rax,[rdi+r14*1]
  4306e4:	cmp    rax,rbx
  4306e7:	jbe    43073d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  4306e9:	cmp    rdi,rbx
  4306ec:	jb     4306ff <flatcc_json_printer_struct_vector_field@@Base+0x44f>
  4306ee:	xor    esi,esi
  4306f0:	mov    rdi,r13
  4306f3:	call   QWORD PTR [r13+0x48]
  4306f7:	mov    rbx,QWORD PTR [r13+0x20]
  4306fb:	mov    rdi,QWORD PTR [r13+0x28]
  4306ff:	sub    rbx,rdi
  430702:	cmp    rbx,r14
  430705:	jae    43073d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  430707:	nop    WORD PTR [rax+rax*1+0x0]
  430710:	mov    esi,0x20
  430715:	mov    rdx,rbx
  430718:	call   406080 <memset@plt>
  43071d:	add    QWORD PTR [r13+0x28],rbx
  430721:	sub    r14,rbx
  430724:	xor    esi,esi
  430726:	mov    rdi,r13
  430729:	call   QWORD PTR [r13+0x48]
  43072d:	mov    rbx,QWORD PTR [r13+0x20]
  430731:	mov    rdi,QWORD PTR [r13+0x28]
  430735:	sub    rbx,rdi
  430738:	cmp    r14,rbx
  43073b:	ja     430710 <flatcc_json_printer_struct_vector_field@@Base+0x460>
  43073d:	mov    esi,0x20
  430742:	mov    rdx,r14
  430745:	call   406080 <memset@plt>
  43074a:	add    r14,QWORD PTR [r13+0x28]
  43074e:	mov    QWORD PTR [r13+0x28],r14
  430752:	lea    rax,[r14+0x1]
  430756:	mov    QWORD PTR [r13+0x28],rax
  43075a:	mov    BYTE PTR [r14],0x5d
  43075e:	add    rsp,0x8
  430762:	pop    rbx
  430763:	pop    r12
  430765:	pop    r13
  430767:	pop    r14
  430769:	pop    r15
  43076b:	pop    rbp
  43076c:	ret    
  43076d:	nop    DWORD PTR [rax]

0000000000430770 <flatcc_json_printer_string_vector_field@@Base>:
  430770:	push   rbp
  430771:	push   r15
  430773:	push   r14
  430775:	push   r12
  430777:	push   rbx
  430778:	lea    eax,[rdx+rdx*1]
  43077b:	add    eax,0x4
  43077e:	cmp    eax,DWORD PTR [rsi+0x10]
  430781:	jge    430a4e <flatcc_json_printer_string_vector_field@@Base+0x2de>
  430787:	mov    rdx,QWORD PTR [rsi+0x8]
  43078b:	mov    eax,eax
  43078d:	movzx  ebx,WORD PTR [rdx+rax*1]
  430791:	test   rbx,rbx
  430794:	je     430a4e <flatcc_json_printer_string_vector_field@@Base+0x2de>
  43079a:	add    rbx,QWORD PTR [rsi]
  43079d:	je     430a4e <flatcc_json_printer_string_vector_field@@Base+0x2de>
  4307a3:	mov    r15,rdi
  4307a6:	mov    eax,DWORD PTR [rsi+0x18]
  4307a9:	lea    edx,[rax+0x1]
  4307ac:	mov    DWORD PTR [rsi+0x18],edx
  4307af:	test   eax,eax
  4307b1:	je     4307c2 <flatcc_json_printer_string_vector_field@@Base+0x52>
  4307b3:	mov    rax,QWORD PTR [r15+0x28]
  4307b7:	lea    rdx,[rax+0x1]
  4307bb:	mov    QWORD PTR [r15+0x28],rdx
  4307bf:	mov    BYTE PTR [rax],0x2c
  4307c2:	mov    ebp,DWORD PTR [rbx]
  4307c4:	mov    r12d,DWORD PTR [rbx+rbp*1]
  4307c8:	movsxd rdx,r8d
  4307cb:	mov    rdi,r15
  4307ce:	mov    rsi,rcx
  4307d1:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4307d6:	add    DWORD PTR [r15+0x38],0x1
  4307db:	mov    rax,QWORD PTR [r15+0x28]
  4307df:	lea    rcx,[rax+0x1]
  4307e3:	mov    QWORD PTR [r15+0x28],rcx
  4307e7:	mov    BYTE PTR [rax],0x5b
  4307ea:	test   r12d,r12d
  4307ed:	je     4309a0 <flatcc_json_printer_string_vector_field@@Base+0x230>
  4307f3:	add    rbp,rbx
  4307f6:	add    rbp,0x4
  4307fa:	cmp    BYTE PTR [r15+0x31],0x0
  4307ff:	mov    rax,QWORD PTR [r15+0x28]
  430803:	je     430890 <flatcc_json_printer_string_vector_field@@Base+0x120>
  430809:	lea    rcx,[rax+0x1]
  43080d:	mov    QWORD PTR [r15+0x28],rcx
  430811:	mov    BYTE PTR [rax],0xa
  430814:	movsxd rax,DWORD PTR [r15+0x38]
  430818:	movzx  r14d,BYTE PTR [r15+0x31]
  43081d:	imul   r14,rax
  430821:	mov    rbx,QWORD PTR [r15+0x20]
  430825:	mov    rdi,QWORD PTR [r15+0x28]
  430829:	lea    rax,[rdi+r14*1]
  43082d:	cmp    rax,rbx
  430830:	jbe    43087d <flatcc_json_printer_string_vector_field@@Base+0x10d>
  430832:	cmp    rdi,rbx
  430835:	jb     430848 <flatcc_json_printer_string_vector_field@@Base+0xd8>
  430837:	xor    esi,esi
  430839:	mov    rdi,r15
  43083c:	call   QWORD PTR [r15+0x48]
  430840:	mov    rbx,QWORD PTR [r15+0x20]
  430844:	mov    rdi,QWORD PTR [r15+0x28]
  430848:	sub    rbx,rdi
  43084b:	cmp    rbx,r14
  43084e:	jae    43087d <flatcc_json_printer_string_vector_field@@Base+0x10d>
  430850:	mov    esi,0x20
  430855:	mov    rdx,rbx
  430858:	call   406080 <memset@plt>
  43085d:	add    QWORD PTR [r15+0x28],rbx
  430861:	sub    r14,rbx
  430864:	xor    esi,esi
  430866:	mov    rdi,r15
  430869:	call   QWORD PTR [r15+0x48]
  43086d:	mov    rbx,QWORD PTR [r15+0x20]
  430871:	mov    rdi,QWORD PTR [r15+0x28]
  430875:	sub    rbx,rdi
  430878:	cmp    r14,rbx
  43087b:	ja     430850 <flatcc_json_printer_string_vector_field@@Base+0xe0>
  43087d:	mov    esi,0x20
  430882:	mov    rdx,r14
  430885:	call   406080 <memset@plt>
  43088a:	add    QWORD PTR [r15+0x28],r14
  43088e:	jmp    43089f <flatcc_json_printer_string_vector_field@@Base+0x12f>
  430890:	cmp    rax,QWORD PTR [r15+0x20]
  430894:	jb     43089f <flatcc_json_printer_string_vector_field@@Base+0x12f>
  430896:	xor    esi,esi
  430898:	mov    rdi,r15
  43089b:	call   QWORD PTR [r15+0x48]
  43089f:	mov    eax,DWORD PTR [rbp+0x0]
  4308a2:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  4308a6:	lea    rsi,[rax+rbp*1]
  4308aa:	add    rsi,0x4
  4308ae:	mov    rdi,r15
  4308b1:	call   427a80 <flatcc_json_printer_string@@Base+0x10>
  4308b6:	add    r12d,0xffffffff
  4308ba:	je     4309a0 <flatcc_json_printer_string_vector_field@@Base+0x230>
  4308c0:	add    r12d,0xffffffff
  4308c4:	add    rbp,0x4
  4308c8:	mov    rax,QWORD PTR [r15+0x28]
  4308cc:	lea    rcx,[rax+0x1]
  4308d0:	mov    QWORD PTR [r15+0x28],rcx
  4308d4:	mov    BYTE PTR [rax],0x2c
  4308d7:	cmp    BYTE PTR [r15+0x31],0x0
  4308dc:	mov    rax,QWORD PTR [r15+0x28]
  4308e0:	je     430970 <flatcc_json_printer_string_vector_field@@Base+0x200>
  4308e6:	lea    rcx,[rax+0x1]
  4308ea:	mov    QWORD PTR [r15+0x28],rcx
  4308ee:	mov    BYTE PTR [rax],0xa
  4308f1:	movsxd rax,DWORD PTR [r15+0x38]
  4308f5:	movzx  r14d,BYTE PTR [r15+0x31]
  4308fa:	imul   r14,rax
  4308fe:	mov    rbx,QWORD PTR [r15+0x20]
  430902:	mov    rdi,QWORD PTR [r15+0x28]
  430906:	lea    rax,[rdi+r14*1]
  43090a:	cmp    rax,rbx
  43090d:	jbe    43095d <flatcc_json_printer_string_vector_field@@Base+0x1ed>
  43090f:	cmp    rdi,rbx
  430912:	jb     430925 <flatcc_json_printer_string_vector_field@@Base+0x1b5>
  430914:	xor    esi,esi
  430916:	mov    rdi,r15
  430919:	call   QWORD PTR [r15+0x48]
  43091d:	mov    rbx,QWORD PTR [r15+0x20]
  430921:	mov    rdi,QWORD PTR [r15+0x28]
  430925:	sub    rbx,rdi
  430928:	cmp    rbx,r14
  43092b:	jae    43095d <flatcc_json_printer_string_vector_field@@Base+0x1ed>
  43092d:	nop    DWORD PTR [rax]
  430930:	mov    esi,0x20
  430935:	mov    rdx,rbx
  430938:	call   406080 <memset@plt>
  43093d:	add    QWORD PTR [r15+0x28],rbx
  430941:	sub    r14,rbx
  430944:	xor    esi,esi
  430946:	mov    rdi,r15
  430949:	call   QWORD PTR [r15+0x48]
  43094d:	mov    rbx,QWORD PTR [r15+0x20]
  430951:	mov    rdi,QWORD PTR [r15+0x28]
  430955:	sub    rbx,rdi
  430958:	cmp    r14,rbx
  43095b:	ja     430930 <flatcc_json_printer_string_vector_field@@Base+0x1c0>
  43095d:	mov    esi,0x20
  430962:	mov    rdx,r14
  430965:	call   406080 <memset@plt>
  43096a:	add    QWORD PTR [r15+0x28],r14
  43096e:	jmp    430980 <flatcc_json_printer_string_vector_field@@Base+0x210>
  430970:	cmp    rax,QWORD PTR [r15+0x20]
  430974:	jb     430980 <flatcc_json_printer_string_vector_field@@Base+0x210>
  430976:	xor    esi,esi
  430978:	mov    rdi,r15
  43097b:	call   QWORD PTR [r15+0x48]
  43097f:	nop
  430980:	mov    eax,DWORD PTR [rbp+0x0]
  430983:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  430987:	lea    rsi,[rax+rbp*1]
  43098b:	add    rsi,0x4
  43098f:	mov    rdi,r15
  430992:	call   427a80 <flatcc_json_printer_string@@Base+0x10>
  430997:	test   r12d,r12d
  43099a:	jne    4308c0 <flatcc_json_printer_string_vector_field@@Base+0x150>
  4309a0:	cmp    BYTE PTR [r15+0x31],0x0
  4309a5:	mov    r14,QWORD PTR [r15+0x28]
  4309a9:	je     430a42 <flatcc_json_printer_string_vector_field@@Base+0x2d2>
  4309af:	lea    rax,[r14+0x1]
  4309b3:	mov    QWORD PTR [r15+0x28],rax
  4309b7:	mov    BYTE PTR [r14],0xa
  4309bb:	movsxd rax,DWORD PTR [r15+0x38]
  4309bf:	add    rax,0xffffffffffffffff
  4309c3:	mov    DWORD PTR [r15+0x38],eax
  4309c7:	movzx  r14d,BYTE PTR [r15+0x31]
  4309cc:	imul   r14,rax
  4309d0:	mov    rbx,QWORD PTR [r15+0x20]
  4309d4:	mov    rdi,QWORD PTR [r15+0x28]
  4309d8:	lea    rax,[rdi+r14*1]
  4309dc:	cmp    rax,rbx
  4309df:	jbe    430a2d <flatcc_json_printer_string_vector_field@@Base+0x2bd>
  4309e1:	cmp    rdi,rbx
  4309e4:	jb     4309f7 <flatcc_json_printer_string_vector_field@@Base+0x287>
  4309e6:	xor    esi,esi
  4309e8:	mov    rdi,r15
  4309eb:	call   QWORD PTR [r15+0x48]
  4309ef:	mov    rbx,QWORD PTR [r15+0x20]
  4309f3:	mov    rdi,QWORD PTR [r15+0x28]
  4309f7:	sub    rbx,rdi
  4309fa:	cmp    rbx,r14
  4309fd:	jae    430a2d <flatcc_json_printer_string_vector_field@@Base+0x2bd>
  4309ff:	nop
  430a00:	mov    esi,0x20
  430a05:	mov    rdx,rbx
  430a08:	call   406080 <memset@plt>
  430a0d:	add    QWORD PTR [r15+0x28],rbx
  430a11:	sub    r14,rbx
  430a14:	xor    esi,esi
  430a16:	mov    rdi,r15
  430a19:	call   QWORD PTR [r15+0x48]
  430a1d:	mov    rbx,QWORD PTR [r15+0x20]
  430a21:	mov    rdi,QWORD PTR [r15+0x28]
  430a25:	sub    rbx,rdi
  430a28:	cmp    r14,rbx
  430a2b:	ja     430a00 <flatcc_json_printer_string_vector_field@@Base+0x290>
  430a2d:	mov    esi,0x20
  430a32:	mov    rdx,r14
  430a35:	call   406080 <memset@plt>
  430a3a:	add    r14,QWORD PTR [r15+0x28]
  430a3e:	mov    QWORD PTR [r15+0x28],r14
  430a42:	lea    rax,[r14+0x1]
  430a46:	mov    QWORD PTR [r15+0x28],rax
  430a4a:	mov    BYTE PTR [r14],0x5d
  430a4e:	pop    rbx
  430a4f:	pop    r12
  430a51:	pop    r14
  430a53:	pop    r15
  430a55:	pop    rbp
  430a56:	ret    
  430a57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000430a60 <flatcc_json_printer_table_vector_field@@Base>:
  430a60:	push   rbp
  430a61:	push   r15
  430a63:	push   r14
  430a65:	push   r13
  430a67:	push   r12
  430a69:	push   rbx
  430a6a:	sub    rsp,0x38
  430a6e:	mov    QWORD PTR [rsp+0x10],r9
  430a73:	lea    eax,[rdx+rdx*1]
  430a76:	add    eax,0x4
  430a79:	cmp    eax,DWORD PTR [rsi+0x10]
  430a7c:	jge    430e5e <flatcc_json_printer_table_vector_field@@Base+0x3fe>
  430a82:	mov    rdx,QWORD PTR [rsi+0x8]
  430a86:	mov    eax,eax
  430a88:	movzx  ebx,WORD PTR [rdx+rax*1]
  430a8c:	test   rbx,rbx
  430a8f:	je     430e5e <flatcc_json_printer_table_vector_field@@Base+0x3fe>
  430a95:	add    rbx,QWORD PTR [rsi]
  430a98:	je     430e5e <flatcc_json_printer_table_vector_field@@Base+0x3fe>
  430a9e:	mov    r13,rdi
  430aa1:	mov    eax,DWORD PTR [rsi+0x18]
  430aa4:	lea    edx,[rax+0x1]
  430aa7:	mov    QWORD PTR [rsp+0x8],rsi
  430aac:	mov    DWORD PTR [rsi+0x18],edx
  430aaf:	test   eax,eax
  430ab1:	je     430ac2 <flatcc_json_printer_table_vector_field@@Base+0x62>
  430ab3:	mov    rax,QWORD PTR [r13+0x28]
  430ab7:	lea    rdx,[rax+0x1]
  430abb:	mov    QWORD PTR [r13+0x28],rdx
  430abf:	mov    BYTE PTR [rax],0x2c
  430ac2:	mov    ebp,DWORD PTR [rbx]
  430ac4:	mov    r14d,DWORD PTR [rbx+rbp*1]
  430ac8:	movsxd rdx,r8d
  430acb:	mov    rdi,r13
  430ace:	mov    rsi,rcx
  430ad1:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  430ad6:	add    DWORD PTR [r13+0x38],0x1
  430adb:	mov    rax,QWORD PTR [r13+0x28]
  430adf:	lea    rcx,[rax+0x1]
  430ae3:	mov    QWORD PTR [r13+0x28],rcx
  430ae7:	mov    BYTE PTR [rax],0x5b
  430aea:	test   r14d,r14d
  430aed:	mov    rdx,QWORD PTR [rsp+0x8]
  430af2:	je     430dad <flatcc_json_printer_table_vector_field@@Base+0x34d>
  430af8:	lea    r15,[rbx+rbp*1]
  430afc:	add    r15,0x4
  430b00:	mov    eax,DWORD PTR [rdx+0x14]
  430b03:	add    eax,0xffffffff
  430b06:	je     430c09 <flatcc_json_printer_table_vector_field@@Base+0x1a9>
  430b0c:	mov    ecx,DWORD PTR [r15]
  430b0f:	add    rcx,r15
  430b12:	add    DWORD PTR [r13+0x38],0x1
  430b17:	mov    rdx,QWORD PTR [r13+0x28]
  430b1b:	lea    rsi,[rdx+0x1]
  430b1f:	mov    QWORD PTR [r13+0x28],rsi
  430b23:	mov    BYTE PTR [rdx],0x7b
  430b26:	mov    DWORD PTR [rsp+0x30],0x0
  430b2e:	mov    DWORD PTR [rsp+0x2c],eax
  430b32:	mov    QWORD PTR [rsp+0x18],rcx
  430b37:	movsxd rax,DWORD PTR [rcx]
  430b3a:	sub    rcx,rax
  430b3d:	mov    QWORD PTR [rsp+0x20],rcx
  430b42:	movzx  eax,WORD PTR [rcx]
  430b45:	mov    DWORD PTR [rsp+0x28],eax
  430b49:	lea    rsi,[rsp+0x18]
  430b4e:	mov    rdi,r13
  430b51:	call   QWORD PTR [rsp+0x10]
  430b55:	cmp    BYTE PTR [r13+0x31],0x0
  430b5a:	mov    r12,QWORD PTR [r13+0x28]
  430b5e:	je     430c23 <flatcc_json_printer_table_vector_field@@Base+0x1c3>
  430b64:	lea    rax,[r12+0x1]
  430b69:	mov    QWORD PTR [r13+0x28],rax
  430b6d:	mov    BYTE PTR [r12],0xa
  430b72:	movsxd rax,DWORD PTR [r13+0x38]
  430b76:	add    rax,0xffffffffffffffff
  430b7a:	mov    DWORD PTR [r13+0x38],eax
  430b7e:	movzx  r12d,BYTE PTR [r13+0x31]
  430b83:	imul   r12,rax
  430b87:	mov    rbx,QWORD PTR [r13+0x20]
  430b8b:	mov    rdi,QWORD PTR [r13+0x28]
  430b8f:	lea    rax,[rdi+r12*1]
  430b93:	cmp    rax,rbx
  430b96:	jbe    430bed <flatcc_json_printer_table_vector_field@@Base+0x18d>
  430b98:	cmp    rdi,rbx
  430b9b:	jb     430bae <flatcc_json_printer_table_vector_field@@Base+0x14e>
  430b9d:	xor    esi,esi
  430b9f:	mov    rdi,r13
  430ba2:	call   QWORD PTR [r13+0x48]
  430ba6:	mov    rbx,QWORD PTR [r13+0x20]
  430baa:	mov    rdi,QWORD PTR [r13+0x28]
  430bae:	sub    rbx,rdi
  430bb1:	cmp    rbx,r12
  430bb4:	jae    430bed <flatcc_json_printer_table_vector_field@@Base+0x18d>
  430bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430bc0:	mov    esi,0x20
  430bc5:	mov    rdx,rbx
  430bc8:	call   406080 <memset@plt>
  430bcd:	add    QWORD PTR [r13+0x28],rbx
  430bd1:	sub    r12,rbx
  430bd4:	xor    esi,esi
  430bd6:	mov    rdi,r13
  430bd9:	call   QWORD PTR [r13+0x48]
  430bdd:	mov    rbx,QWORD PTR [r13+0x20]
  430be1:	mov    rdi,QWORD PTR [r13+0x28]
  430be5:	sub    rbx,rdi
  430be8:	cmp    r12,rbx
  430beb:	ja     430bc0 <flatcc_json_printer_table_vector_field@@Base+0x160>
  430bed:	mov    esi,0x20
  430bf2:	mov    rdx,r12
  430bf5:	call   406080 <memset@plt>
  430bfa:	mov    rdx,QWORD PTR [rsp+0x8]
  430bff:	add    r12,QWORD PTR [r13+0x28]
  430c03:	mov    QWORD PTR [r13+0x28],r12
  430c07:	jmp    430c28 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
  430c09:	cmp    DWORD PTR [r13+0x3c],0x0
  430c0e:	jne    430c36 <flatcc_json_printer_table_vector_field@@Base+0x1d6>
  430c10:	mov    DWORD PTR [r13+0x3c],0x2
  430c18:	add    r14d,0xffffffff
  430c1c:	jne    430c40 <flatcc_json_printer_table_vector_field@@Base+0x1e0>
  430c1e:	jmp    430dad <flatcc_json_printer_table_vector_field@@Base+0x34d>
  430c23:	mov    rdx,QWORD PTR [rsp+0x8]
  430c28:	lea    rax,[r12+0x1]
  430c2d:	mov    QWORD PTR [r13+0x28],rax
  430c31:	mov    BYTE PTR [r12],0x7d
  430c36:	add    r14d,0xffffffff
  430c3a:	je     430dad <flatcc_json_printer_table_vector_field@@Base+0x34d>
  430c40:	lea    r12,[rsp+0x18]
  430c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430c4f:	nop
  430c50:	add    r14d,0xffffffff
  430c54:	mov    rax,QWORD PTR [r13+0x28]
  430c58:	lea    rcx,[rax+0x1]
  430c5c:	mov    QWORD PTR [r13+0x28],rcx
  430c60:	mov    BYTE PTR [rax],0x2c
  430c63:	mov    eax,DWORD PTR [rdx+0x14]
  430c66:	add    eax,0xffffffff
  430c69:	je     430d70 <flatcc_json_printer_table_vector_field@@Base+0x310>
  430c6f:	mov    ecx,DWORD PTR [r15+0x4]
  430c73:	add    rcx,r15
  430c76:	add    rcx,0x4
  430c7a:	add    DWORD PTR [r13+0x38],0x1
  430c7f:	mov    rdx,QWORD PTR [r13+0x28]
  430c83:	lea    rsi,[rdx+0x1]
  430c87:	mov    QWORD PTR [r13+0x28],rsi
  430c8b:	mov    BYTE PTR [rdx],0x7b
  430c8e:	mov    DWORD PTR [rsp+0x30],0x0
  430c96:	mov    DWORD PTR [rsp+0x2c],eax
  430c9a:	mov    QWORD PTR [rsp+0x18],rcx
  430c9f:	movsxd rax,DWORD PTR [rcx]
  430ca2:	sub    rcx,rax
  430ca5:	mov    QWORD PTR [rsp+0x20],rcx
  430caa:	movzx  eax,WORD PTR [rcx]
  430cad:	mov    DWORD PTR [rsp+0x28],eax
  430cb1:	mov    rdi,r13
  430cb4:	mov    rsi,r12
  430cb7:	call   QWORD PTR [rsp+0x10]
  430cbb:	cmp    BYTE PTR [r13+0x31],0x0
  430cc0:	mov    rbx,QWORD PTR [r13+0x28]
  430cc4:	je     430d90 <flatcc_json_printer_table_vector_field@@Base+0x330>
  430cca:	lea    rax,[rbx+0x1]
  430cce:	mov    QWORD PTR [r13+0x28],rax
  430cd2:	mov    BYTE PTR [rbx],0xa
  430cd5:	movsxd rax,DWORD PTR [r13+0x38]
  430cd9:	add    rax,0xffffffffffffffff
  430cdd:	mov    DWORD PTR [r13+0x38],eax
  430ce1:	movzx  ebx,BYTE PTR [r13+0x31]
  430ce6:	imul   rbx,rax
  430cea:	mov    rbp,QWORD PTR [r13+0x20]
  430cee:	mov    rdi,QWORD PTR [r13+0x28]
  430cf2:	lea    rax,[rdi+rbx*1]
  430cf6:	cmp    rax,rbp
  430cf9:	jbe    430d4d <flatcc_json_printer_table_vector_field@@Base+0x2ed>
  430cfb:	cmp    rdi,rbp
  430cfe:	jb     430d11 <flatcc_json_printer_table_vector_field@@Base+0x2b1>
  430d00:	xor    esi,esi
  430d02:	mov    rdi,r13
  430d05:	call   QWORD PTR [r13+0x48]
  430d09:	mov    rbp,QWORD PTR [r13+0x20]
  430d0d:	mov    rdi,QWORD PTR [r13+0x28]
  430d11:	sub    rbp,rdi
  430d14:	cmp    rbp,rbx
  430d17:	jae    430d4d <flatcc_json_printer_table_vector_field@@Base+0x2ed>
  430d19:	nop    DWORD PTR [rax+0x0]
  430d20:	mov    esi,0x20
  430d25:	mov    rdx,rbp
  430d28:	call   406080 <memset@plt>
  430d2d:	add    QWORD PTR [r13+0x28],rbp
  430d31:	sub    rbx,rbp
  430d34:	xor    esi,esi
  430d36:	mov    rdi,r13
  430d39:	call   QWORD PTR [r13+0x48]
  430d3d:	mov    rbp,QWORD PTR [r13+0x20]
  430d41:	mov    rdi,QWORD PTR [r13+0x28]
  430d45:	sub    rbp,rdi
  430d48:	cmp    rbx,rbp
  430d4b:	ja     430d20 <flatcc_json_printer_table_vector_field@@Base+0x2c0>
  430d4d:	mov    esi,0x20
  430d52:	mov    rdx,rbx
  430d55:	call   406080 <memset@plt>
  430d5a:	mov    rdx,QWORD PTR [rsp+0x8]
  430d5f:	add    rbx,QWORD PTR [r13+0x28]
  430d63:	mov    QWORD PTR [r13+0x28],rbx
  430d67:	jmp    430d95 <flatcc_json_printer_table_vector_field@@Base+0x335>
  430d69:	nop    DWORD PTR [rax+0x0]
  430d70:	cmp    DWORD PTR [r13+0x3c],0x0
  430d75:	jne    430da0 <flatcc_json_printer_table_vector_field@@Base+0x340>
  430d77:	mov    DWORD PTR [r13+0x3c],0x2
  430d7f:	jmp    430da0 <flatcc_json_printer_table_vector_field@@Base+0x340>
  430d81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  430d90:	mov    rdx,QWORD PTR [rsp+0x8]
  430d95:	lea    rax,[rbx+0x1]
  430d99:	mov    QWORD PTR [r13+0x28],rax
  430d9d:	mov    BYTE PTR [rbx],0x7d
  430da0:	add    r15,0x4
  430da4:	test   r14d,r14d
  430da7:	jne    430c50 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  430dad:	cmp    BYTE PTR [r13+0x31],0x0
  430db2:	mov    r14,QWORD PTR [r13+0x28]
  430db6:	je     430e52 <flatcc_json_printer_table_vector_field@@Base+0x3f2>
  430dbc:	lea    rax,[r14+0x1]
  430dc0:	mov    QWORD PTR [r13+0x28],rax
  430dc4:	mov    BYTE PTR [r14],0xa
  430dc8:	movsxd rax,DWORD PTR [r13+0x38]
  430dcc:	add    rax,0xffffffffffffffff
  430dd0:	mov    DWORD PTR [r13+0x38],eax
  430dd4:	movzx  r14d,BYTE PTR [r13+0x31]
  430dd9:	imul   r14,rax
  430ddd:	mov    rbx,QWORD PTR [r13+0x20]
  430de1:	mov    rdi,QWORD PTR [r13+0x28]
  430de5:	lea    rax,[rdi+r14*1]
  430de9:	cmp    rax,rbx
  430dec:	jbe    430e3d <flatcc_json_printer_table_vector_field@@Base+0x3dd>
  430dee:	cmp    rdi,rbx
  430df1:	jb     430e04 <flatcc_json_printer_table_vector_field@@Base+0x3a4>
  430df3:	xor    esi,esi
  430df5:	mov    rdi,r13
  430df8:	call   QWORD PTR [r13+0x48]
  430dfc:	mov    rbx,QWORD PTR [r13+0x20]
  430e00:	mov    rdi,QWORD PTR [r13+0x28]
  430e04:	sub    rbx,rdi
  430e07:	cmp    rbx,r14
  430e0a:	jae    430e3d <flatcc_json_printer_table_vector_field@@Base+0x3dd>
  430e0c:	nop    DWORD PTR [rax+0x0]
  430e10:	mov    esi,0x20
  430e15:	mov    rdx,rbx
  430e18:	call   406080 <memset@plt>
  430e1d:	add    QWORD PTR [r13+0x28],rbx
  430e21:	sub    r14,rbx
  430e24:	xor    esi,esi
  430e26:	mov    rdi,r13
  430e29:	call   QWORD PTR [r13+0x48]
  430e2d:	mov    rbx,QWORD PTR [r13+0x20]
  430e31:	mov    rdi,QWORD PTR [r13+0x28]
  430e35:	sub    rbx,rdi
  430e38:	cmp    r14,rbx
  430e3b:	ja     430e10 <flatcc_json_printer_table_vector_field@@Base+0x3b0>
  430e3d:	mov    esi,0x20
  430e42:	mov    rdx,r14
  430e45:	call   406080 <memset@plt>
  430e4a:	add    r14,QWORD PTR [r13+0x28]
  430e4e:	mov    QWORD PTR [r13+0x28],r14
  430e52:	lea    rax,[r14+0x1]
  430e56:	mov    QWORD PTR [r13+0x28],rax
  430e5a:	mov    BYTE PTR [r14],0x5d
  430e5e:	add    rsp,0x38
  430e62:	pop    rbx
  430e63:	pop    r12
  430e65:	pop    r13
  430e67:	pop    r14
  430e69:	pop    r15
  430e6b:	pop    rbp
  430e6c:	ret    
  430e6d:	nop    DWORD PTR [rax]

0000000000430e70 <flatcc_json_printer_union_vector_field@@Base>:
  430e70:	push   rbp
  430e71:	push   r15
  430e73:	push   r14
  430e75:	push   r13
  430e77:	push   r12
  430e79:	push   rbx
  430e7a:	sub    rsp,0xa8
  430e81:	mov    QWORD PTR [rsp],r9
  430e85:	mov    r13d,r8d
  430e88:	mov    r15d,edx
  430e8b:	mov    rbx,rsi
  430e8e:	mov    r14,rdi
  430e91:	lea    esi,[r15+r15*1]
  430e95:	add    esi,0x2
  430e98:	mov    eax,DWORD PTR [rbx+0x10]
  430e9b:	cmp    esi,eax
  430e9d:	jge    430eb3 <flatcc_json_printer_union_vector_field@@Base+0x43>
  430e9f:	mov    rdx,QWORD PTR [rbx+0x8]
  430ea3:	mov    esi,esi
  430ea5:	movzx  edx,WORD PTR [rdx+rsi*1]
  430ea9:	test   rdx,rdx
  430eac:	je     430eb3 <flatcc_json_printer_union_vector_field@@Base+0x43>
  430eae:	add    rdx,QWORD PTR [rbx]
  430eb1:	jmp    430eb5 <flatcc_json_printer_union_vector_field@@Base+0x45>
  430eb3:	xor    edx,edx
  430eb5:	lea    esi,[r15+r15*1]
  430eb9:	add    esi,0x4
  430ebc:	cmp    esi,eax
  430ebe:	jge    430ed4 <flatcc_json_printer_union_vector_field@@Base+0x64>
  430ec0:	mov    rax,QWORD PTR [rbx+0x8]
  430ec4:	mov    esi,esi
  430ec6:	movzx  ebp,WORD PTR [rax+rsi*1]
  430eca:	test   rbp,rbp
  430ecd:	je     430ed4 <flatcc_json_printer_union_vector_field@@Base+0x64>
  430ecf:	add    rbp,QWORD PTR [rbx]
  430ed2:	jmp    430ed6 <flatcc_json_printer_union_vector_field@@Base+0x66>
  430ed4:	xor    ebp,ebp
  430ed6:	mov    QWORD PTR [rsp+0x8],rdx
  430edb:	mov    eax,DWORD PTR [rbx+0x14]
  430ede:	mov    DWORD PTR [rsp+0x18],eax
  430ee2:	cmp    r13d,0x65
  430ee6:	jge    4311af <flatcc_json_printer_union_vector_field@@Base+0x33f>
  430eec:	movsxd r12,r13d
  430eef:	lea    rdi,[rsp+0x30]
  430ef4:	mov    QWORD PTR [rsp+0x28],rcx
  430ef9:	mov    rsi,rcx
  430efc:	mov    rdx,r12
  430eff:	call   4060e0 <memcpy@plt>
  430f04:	mov    BYTE PTR [rsp+r12*1+0x34],0x65
  430f0a:	mov    DWORD PTR [rsp+r12*1+0x30],0x7079745f
  430f13:	cmp    QWORD PTR [rsp+0x8],0x0
  430f19:	je     43119d <flatcc_json_printer_union_vector_field@@Base+0x32d>
  430f1f:	test   rbp,rbp
  430f22:	je     43119d <flatcc_json_printer_union_vector_field@@Base+0x32d>
  430f28:	add    r15d,0xffffffff
  430f2c:	add    r13d,0x5
  430f30:	lea    rcx,[rsp+0x30]
  430f35:	mov    rdi,r14
  430f38:	mov    rsi,rbx
  430f3b:	mov    edx,r15d
  430f3e:	mov    r8d,r13d
  430f41:	mov    r9,QWORD PTR [rsp]
  430f45:	call   42e090 <flatcc_json_printer_utype_enum_vector_field@@Base>
  430f4a:	mov    eax,DWORD PTR [rbx+0x18]
  430f4d:	lea    ecx,[rax+0x1]
  430f50:	mov    DWORD PTR [rbx+0x18],ecx
  430f53:	lea    r13,[r14+0x28]
  430f57:	test   eax,eax
  430f59:	je     430f6a <flatcc_json_printer_union_vector_field@@Base+0xfa>
  430f5b:	mov    rax,QWORD PTR [r13+0x0]
  430f5f:	lea    rcx,[rax+0x1]
  430f63:	mov    QWORD PTR [r13+0x0],rcx
  430f67:	mov    BYTE PTR [rax],0x2c
  430f6a:	mov    eax,DWORD PTR [rbp+0x0]
  430f6d:	mov    rbx,QWORD PTR [rsp+0x8]
  430f72:	mov    r15d,DWORD PTR [rbx]
  430f75:	mov    QWORD PTR [rsp],rax
  430f79:	mov    QWORD PTR [rsp+0x20],rbp
  430f7e:	mov    ebp,DWORD PTR [rbp+rax*1+0x0]
  430f82:	mov    rdi,r14
  430f85:	mov    rsi,QWORD PTR [rsp+0x28]
  430f8a:	mov    rdx,r12
  430f8d:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  430f92:	add    DWORD PTR [r14+0x38],0x1
  430f97:	mov    rax,QWORD PTR [r14+0x28]
  430f9b:	lea    rcx,[rax+0x1]
  430f9f:	mov    QWORD PTR [r14+0x28],rcx
  430fa3:	mov    BYTE PTR [rax],0x5b
  430fa6:	test   ebp,ebp
  430fa8:	je     4310ed <flatcc_json_printer_union_vector_field@@Base+0x27d>
  430fae:	mov    rdx,rbx
  430fb1:	mov    al,BYTE PTR [rbx+r15*1+0x4]
  430fb6:	test   al,al
  430fb8:	je     430ff1 <flatcc_json_printer_union_vector_field@@Base+0x181>
  430fba:	mov    rcx,QWORD PTR [rsp]
  430fbe:	mov    rdx,QWORD PTR [rsp+0x20]
  430fc3:	add    rcx,rdx
  430fc6:	add    rcx,0x4
  430fca:	mov    BYTE PTR [rsp+0x1c],al
  430fce:	mov    QWORD PTR [rsp+0x10],rcx
  430fd3:	lea    rsi,[rsp+0x10]
  430fd8:	mov    rdi,r14
  430fdb:	call   QWORD PTR [rsp+0xe0]
  430fe2:	mov    rdx,QWORD PTR [rsp+0x8]
  430fe7:	add    ebp,0xffffffff
  430fea:	jne    431036 <flatcc_json_printer_union_vector_field@@Base+0x1c6>
  430fec:	jmp    4310ed <flatcc_json_printer_union_vector_field@@Base+0x27d>
  430ff1:	mov    rax,QWORD PTR [r13+0x0]
  430ff5:	lea    rcx,[rax+0x1]
  430ff9:	mov    QWORD PTR [r13+0x0],rcx
  430ffd:	mov    BYTE PTR [rax],0x6e
  431000:	mov    rax,QWORD PTR [r13+0x0]
  431004:	lea    rcx,[rax+0x1]
  431008:	mov    QWORD PTR [r13+0x0],rcx
  43100c:	mov    BYTE PTR [rax],0x75
  43100f:	mov    rax,QWORD PTR [r13+0x0]
  431013:	lea    rcx,[rax+0x1]
  431017:	mov    QWORD PTR [r13+0x0],rcx
  43101b:	mov    BYTE PTR [rax],0x6c
  43101e:	mov    rax,QWORD PTR [r13+0x0]
  431022:	lea    rcx,[rax+0x1]
  431026:	mov    QWORD PTR [r13+0x0],rcx
  43102a:	mov    BYTE PTR [rax],0x6c
  43102d:	add    ebp,0xffffffff
  431030:	je     4310ed <flatcc_json_printer_union_vector_field@@Base+0x27d>
  431036:	mov    ebp,ebp
  431038:	lea    r12,[rdx+r15*1]
  43103c:	add    r12,0x5
  431040:	mov    rax,QWORD PTR [rsp]
  431044:	mov    rcx,QWORD PTR [rsp+0x20]
  431049:	lea    rbx,[rcx+rax*1]
  43104d:	add    rbx,0x8
  431051:	xor    r15d,r15d
  431054:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43105e:	xchg   ax,ax
  431060:	movzx  eax,BYTE PTR [r12+r15*1]
  431065:	mov    rcx,QWORD PTR [r13+0x0]
  431069:	lea    rdx,[rcx+0x1]
  43106d:	mov    QWORD PTR [r13+0x0],rdx
  431071:	mov    BYTE PTR [rcx],0x2c
  431074:	test   al,al
  431076:	je     4310a0 <flatcc_json_printer_union_vector_field@@Base+0x230>
  431078:	mov    BYTE PTR [rsp+0x1c],al
  43107c:	mov    QWORD PTR [rsp+0x10],rbx
  431081:	mov    rdi,r14
  431084:	lea    rsi,[rsp+0x10]
  431089:	call   QWORD PTR [rsp+0xe0]
  431090:	jmp    4310dc <flatcc_json_printer_union_vector_field@@Base+0x26c>
  431092:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43109c:	nop    DWORD PTR [rax+0x0]
  4310a0:	mov    rax,QWORD PTR [r13+0x0]
  4310a4:	lea    rcx,[rax+0x1]
  4310a8:	mov    QWORD PTR [r13+0x0],rcx
  4310ac:	mov    BYTE PTR [rax],0x6e
  4310af:	mov    rax,QWORD PTR [r13+0x0]
  4310b3:	lea    rcx,[rax+0x1]
  4310b7:	mov    QWORD PTR [r13+0x0],rcx
  4310bb:	mov    BYTE PTR [rax],0x75
  4310be:	mov    rax,QWORD PTR [r13+0x0]
  4310c2:	lea    rcx,[rax+0x1]
  4310c6:	mov    QWORD PTR [r13+0x0],rcx
  4310ca:	mov    BYTE PTR [rax],0x6c
  4310cd:	mov    rax,QWORD PTR [r13+0x0]
  4310d1:	lea    rcx,[rax+0x1]
  4310d5:	mov    QWORD PTR [r13+0x0],rcx
  4310d9:	mov    BYTE PTR [rax],0x6c
  4310dc:	add    r15,0x1
  4310e0:	add    rbx,0x4
  4310e4:	cmp    ebp,r15d
  4310e7:	jne    431060 <flatcc_json_printer_union_vector_field@@Base+0x1f0>
  4310ed:	cmp    BYTE PTR [r14+0x31],0x0
  4310f2:	mov    rbx,QWORD PTR [r14+0x28]
  4310f6:	je     431192 <flatcc_json_printer_union_vector_field@@Base+0x322>
  4310fc:	lea    rax,[rbx+0x1]
  431100:	mov    QWORD PTR [r14+0x28],rax
  431104:	mov    BYTE PTR [rbx],0xa
  431107:	movsxd rax,DWORD PTR [r14+0x38]
  43110b:	add    rax,0xffffffffffffffff
  43110f:	mov    DWORD PTR [r14+0x38],eax
  431113:	movzx  ebx,BYTE PTR [r14+0x31]
  431118:	imul   rbx,rax
  43111c:	mov    rbp,QWORD PTR [r14+0x20]
  431120:	mov    rdi,QWORD PTR [r14+0x28]
  431124:	lea    rax,[rdi+rbx*1]
  431128:	cmp    rax,rbp
  43112b:	jbe    43117d <flatcc_json_printer_union_vector_field@@Base+0x30d>
  43112d:	cmp    rdi,rbp
  431130:	jb     431143 <flatcc_json_printer_union_vector_field@@Base+0x2d3>
  431132:	xor    esi,esi
  431134:	mov    rdi,r14
  431137:	call   QWORD PTR [r14+0x48]
  43113b:	mov    rbp,QWORD PTR [r14+0x20]
  43113f:	mov    rdi,QWORD PTR [r14+0x28]
  431143:	sub    rbp,rdi
  431146:	cmp    rbp,rbx
  431149:	jae    43117d <flatcc_json_printer_union_vector_field@@Base+0x30d>
  43114b:	nop    DWORD PTR [rax+rax*1+0x0]
  431150:	mov    esi,0x20
  431155:	mov    rdx,rbp
  431158:	call   406080 <memset@plt>
  43115d:	add    QWORD PTR [r14+0x28],rbp
  431161:	sub    rbx,rbp
  431164:	xor    esi,esi
  431166:	mov    rdi,r14
  431169:	call   QWORD PTR [r14+0x48]
  43116d:	mov    rbp,QWORD PTR [r14+0x20]
  431171:	mov    rdi,QWORD PTR [r14+0x28]
  431175:	sub    rbp,rdi
  431178:	cmp    rbx,rbp
  43117b:	ja     431150 <flatcc_json_printer_union_vector_field@@Base+0x2e0>
  43117d:	mov    esi,0x20
  431182:	mov    rdx,rbx
  431185:	call   406080 <memset@plt>
  43118a:	add    rbx,QWORD PTR [r13+0x0]
  43118e:	mov    QWORD PTR [r13+0x0],rbx
  431192:	lea    rax,[rbx+0x1]
  431196:	mov    QWORD PTR [r13+0x0],rax
  43119a:	mov    BYTE PTR [rbx],0x5d
  43119d:	add    rsp,0xa8
  4311a4:	pop    rbx
  4311a5:	pop    r12
  4311a7:	pop    r13
  4311a9:	pop    r14
  4311ab:	pop    r15
  4311ad:	pop    rbp
  4311ae:	ret    
  4311af:	cmp    DWORD PTR [r14+0x3c],0x0
  4311b4:	jne    4311be <flatcc_json_printer_union_vector_field@@Base+0x34e>
  4311b6:	mov    DWORD PTR [r14+0x3c],0x1
  4311be:	lea    rdi,[rip+0x8d2d]        # 439ef2 <flatcc_builder_padding_base@@Base+0x3352>
  4311c5:	lea    rsi,[rip+0x8d41]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  4311cc:	lea    rcx,[rip+0x8d9f]        # 439f72 <flatcc_builder_padding_base@@Base+0x33d2>
  4311d3:	mov    edx,0x34b
  4311d8:	call   406070 <__assert_fail@plt>
  4311dd:	nop    DWORD PTR [rax]

00000000004311e0 <flatcc_json_printer_table_field@@Base>:
  4311e0:	push   r15
  4311e2:	push   r14
  4311e4:	push   r12
  4311e6:	push   rbx
  4311e7:	sub    rsp,0x28
  4311eb:	lea    eax,[rdx+rdx*1]
  4311ee:	add    eax,0x4
  4311f1:	cmp    eax,DWORD PTR [rsi+0x10]
  4311f4:	jge    43135f <flatcc_json_printer_table_field@@Base+0x17f>
  4311fa:	mov    rbx,rsi
  4311fd:	mov    rdx,QWORD PTR [rsi+0x8]
  431201:	mov    eax,eax
  431203:	movzx  r12d,WORD PTR [rdx+rax*1]
  431208:	test   r12,r12
  43120b:	je     43135f <flatcc_json_printer_table_field@@Base+0x17f>
  431211:	add    r12,QWORD PTR [rbx]
  431214:	je     43135f <flatcc_json_printer_table_field@@Base+0x17f>
  43121a:	mov    r15,r9
  43121d:	mov    r14,rdi
  431220:	mov    eax,DWORD PTR [rbx+0x18]
  431223:	lea    edx,[rax+0x1]
  431226:	mov    DWORD PTR [rbx+0x18],edx
  431229:	test   eax,eax
  43122b:	je     43123c <flatcc_json_printer_table_field@@Base+0x5c>
  43122d:	mov    rax,QWORD PTR [r14+0x28]
  431231:	lea    rdx,[rax+0x1]
  431235:	mov    QWORD PTR [r14+0x28],rdx
  431239:	mov    BYTE PTR [rax],0x2c
  43123c:	movsxd rdx,r8d
  43123f:	mov    rdi,r14
  431242:	mov    rsi,rcx
  431245:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  43124a:	mov    eax,DWORD PTR [rbx+0x14]
  43124d:	add    eax,0xffffffff
  431250:	je     431350 <flatcc_json_printer_table_field@@Base+0x170>
  431256:	mov    ecx,DWORD PTR [r12]
  43125a:	add    rcx,r12
  43125d:	add    DWORD PTR [r14+0x38],0x1
  431262:	mov    rdx,QWORD PTR [r14+0x28]
  431266:	lea    rsi,[rdx+0x1]
  43126a:	mov    QWORD PTR [r14+0x28],rsi
  43126e:	mov    BYTE PTR [rdx],0x7b
  431271:	mov    DWORD PTR [rsp+0x20],0x0
  431279:	mov    DWORD PTR [rsp+0x1c],eax
  43127d:	mov    QWORD PTR [rsp+0x8],rcx
  431282:	movsxd rax,DWORD PTR [rcx]
  431285:	sub    rcx,rax
  431288:	mov    QWORD PTR [rsp+0x10],rcx
  43128d:	movzx  eax,WORD PTR [rcx]
  431290:	mov    DWORD PTR [rsp+0x18],eax
  431294:	lea    rsi,[rsp+0x8]
  431299:	mov    rdi,r14
  43129c:	call   r15
  43129f:	cmp    BYTE PTR [r14+0x31],0x0
  4312a4:	mov    r15,QWORD PTR [r14+0x28]
  4312a8:	je     431342 <flatcc_json_printer_table_field@@Base+0x162>
  4312ae:	lea    rax,[r15+0x1]
  4312b2:	mov    QWORD PTR [r14+0x28],rax
  4312b6:	mov    BYTE PTR [r15],0xa
  4312ba:	movsxd rax,DWORD PTR [r14+0x38]
  4312be:	add    rax,0xffffffffffffffff
  4312c2:	mov    DWORD PTR [r14+0x38],eax
  4312c6:	movzx  r15d,BYTE PTR [r14+0x31]
  4312cb:	imul   r15,rax
  4312cf:	mov    rbx,QWORD PTR [r14+0x20]
  4312d3:	mov    rdi,QWORD PTR [r14+0x28]
  4312d7:	lea    rax,[rdi+r15*1]
  4312db:	cmp    rax,rbx
  4312de:	jbe    43132d <flatcc_json_printer_table_field@@Base+0x14d>
  4312e0:	cmp    rdi,rbx
  4312e3:	jb     4312f6 <flatcc_json_printer_table_field@@Base+0x116>
  4312e5:	xor    esi,esi
  4312e7:	mov    rdi,r14
  4312ea:	call   QWORD PTR [r14+0x48]
  4312ee:	mov    rbx,QWORD PTR [r14+0x20]
  4312f2:	mov    rdi,QWORD PTR [r14+0x28]
  4312f6:	sub    rbx,rdi
  4312f9:	cmp    rbx,r15
  4312fc:	jae    43132d <flatcc_json_printer_table_field@@Base+0x14d>
  4312fe:	xchg   ax,ax
  431300:	mov    esi,0x20
  431305:	mov    rdx,rbx
  431308:	call   406080 <memset@plt>
  43130d:	add    QWORD PTR [r14+0x28],rbx
  431311:	sub    r15,rbx
  431314:	xor    esi,esi
  431316:	mov    rdi,r14
  431319:	call   QWORD PTR [r14+0x48]
  43131d:	mov    rbx,QWORD PTR [r14+0x20]
  431321:	mov    rdi,QWORD PTR [r14+0x28]
  431325:	sub    rbx,rdi
  431328:	cmp    r15,rbx
  43132b:	ja     431300 <flatcc_json_printer_table_field@@Base+0x120>
  43132d:	mov    esi,0x20
  431332:	mov    rdx,r15
  431335:	call   406080 <memset@plt>
  43133a:	add    r15,QWORD PTR [r14+0x28]
  43133e:	mov    QWORD PTR [r14+0x28],r15
  431342:	lea    rax,[r15+0x1]
  431346:	mov    QWORD PTR [r14+0x28],rax
  43134a:	mov    BYTE PTR [r15],0x7d
  43134e:	jmp    43135f <flatcc_json_printer_table_field@@Base+0x17f>
  431350:	cmp    DWORD PTR [r14+0x3c],0x0
  431355:	jne    43135f <flatcc_json_printer_table_field@@Base+0x17f>
  431357:	mov    DWORD PTR [r14+0x3c],0x2
  43135f:	add    rsp,0x28
  431363:	pop    rbx
  431364:	pop    r12
  431366:	pop    r14
  431368:	pop    r15
  43136a:	ret    
  43136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000431370 <flatcc_json_printer_union_field@@Base>:
  431370:	push   rbp
  431371:	push   r15
  431373:	push   r14
  431375:	push   r13
  431377:	push   r12
  431379:	push   rbx
  43137a:	sub    rsp,0x48
  43137e:	mov    r13d,r8d
  431381:	mov    r14,rcx
  431384:	mov    r12,rsi
  431387:	mov    r15,rdi
  43138a:	lea    ecx,[rdx+rdx*1]
  43138d:	lea    eax,[rdx+rdx*1]
  431390:	add    eax,0x2
  431393:	mov    edx,DWORD PTR [rsi+0x10]
  431396:	cmp    eax,edx
  431398:	jge    4313b0 <flatcc_json_printer_union_field@@Base+0x40>
  43139a:	mov    rsi,QWORD PTR [r12+0x8]
  43139f:	mov    eax,eax
  4313a1:	movzx  eax,WORD PTR [rsi+rax*1]
  4313a5:	test   rax,rax
  4313a8:	je     4313b0 <flatcc_json_printer_union_field@@Base+0x40>
  4313aa:	add    rax,QWORD PTR [r12]
  4313ae:	jmp    4313b2 <flatcc_json_printer_union_field@@Base+0x42>
  4313b0:	xor    eax,eax
  4313b2:	add    ecx,0x4
  4313b5:	cmp    ecx,edx
  4313b7:	jge    43177b <flatcc_json_printer_union_field@@Base+0x40b>
  4313bd:	mov    rdx,QWORD PTR [r12+0x8]
  4313c2:	mov    ecx,ecx
  4313c4:	movzx  edx,WORD PTR [rdx+rcx*1]
  4313c8:	test   rdx,rdx
  4313cb:	je     43177b <flatcc_json_printer_union_field@@Base+0x40b>
  4313d1:	test   rax,rax
  4313d4:	je     43177b <flatcc_json_printer_union_field@@Base+0x40b>
  4313da:	add    rdx,QWORD PTR [r12]
  4313de:	je     43177b <flatcc_json_printer_union_field@@Base+0x40b>
  4313e4:	mov    QWORD PTR [rsp+0x28],r9
  4313e9:	mov    al,BYTE PTR [rax]
  4313eb:	mov    BYTE PTR [rsp+0xf],al
  4313ef:	mov    eax,DWORD PTR [r12+0x18]
  4313f4:	lea    ecx,[rax+0x1]
  4313f7:	mov    DWORD PTR [r12+0x18],ecx
  4313fc:	test   eax,eax
  4313fe:	je     43140f <flatcc_json_printer_union_field@@Base+0x9f>
  431400:	mov    rax,QWORD PTR [r15+0x28]
  431404:	lea    rcx,[rax+0x1]
  431408:	mov    QWORD PTR [r15+0x28],rcx
  43140c:	mov    BYTE PTR [rax],0x2c
  43140f:	cmp    BYTE PTR [r15+0x31],0x0
  431414:	mov    rbp,QWORD PTR [r15+0x28]
  431418:	mov    QWORD PTR [rsp+0x10],r14
  43141d:	mov    QWORD PTR [rsp+0x18],rdx
  431422:	je     4314b8 <flatcc_json_printer_union_field@@Base+0x148>
  431428:	lea    rax,[rbp+0x1]
  43142c:	mov    QWORD PTR [r15+0x28],rax
  431430:	mov    BYTE PTR [rbp+0x0],0xa
  431434:	movsxd rax,DWORD PTR [r15+0x38]
  431438:	movzx  ebp,BYTE PTR [r15+0x31]
  43143d:	imul   rbp,rax
  431441:	mov    rbx,QWORD PTR [r15+0x20]
  431445:	mov    rdi,QWORD PTR [r15+0x28]
  431449:	lea    rax,[rdi+rbp*1]
  43144d:	cmp    rax,rbx
  431450:	jbe    43149d <flatcc_json_printer_union_field@@Base+0x12d>
  431452:	cmp    rdi,rbx
  431455:	jb     431468 <flatcc_json_printer_union_field@@Base+0xf8>
  431457:	xor    esi,esi
  431459:	mov    rdi,r15
  43145c:	call   QWORD PTR [r15+0x48]
  431460:	mov    rbx,QWORD PTR [r15+0x20]
  431464:	mov    rdi,QWORD PTR [r15+0x28]
  431468:	sub    rbx,rdi
  43146b:	cmp    rbx,rbp
  43146e:	jae    43149d <flatcc_json_printer_union_field@@Base+0x12d>
  431470:	mov    esi,0x20
  431475:	mov    rdx,rbx
  431478:	call   406080 <memset@plt>
  43147d:	add    QWORD PTR [r15+0x28],rbx
  431481:	sub    rbp,rbx
  431484:	xor    esi,esi
  431486:	mov    rdi,r15
  431489:	call   QWORD PTR [r15+0x48]
  43148d:	mov    rbx,QWORD PTR [r15+0x20]
  431491:	mov    rdi,QWORD PTR [r15+0x28]
  431495:	sub    rbx,rdi
  431498:	cmp    rbp,rbx
  43149b:	ja     431470 <flatcc_json_printer_union_field@@Base+0x100>
  43149d:	mov    esi,0x20
  4314a2:	mov    rdx,rbp
  4314a5:	call   406080 <memset@plt>
  4314aa:	lea    r14,[r15+0x20]
  4314ae:	add    rbp,QWORD PTR [r15+0x28]
  4314b2:	mov    QWORD PTR [r15+0x28],rbp
  4314b6:	jmp    4314cf <flatcc_json_printer_union_field@@Base+0x15f>
  4314b8:	lea    r14,[r15+0x20]
  4314bc:	cmp    rbp,QWORD PTR [r15+0x20]
  4314c0:	jb     4314cf <flatcc_json_printer_union_field@@Base+0x15f>
  4314c2:	xor    esi,esi
  4314c4:	mov    rdi,r15
  4314c7:	call   QWORD PTR [r15+0x48]
  4314cb:	mov    rbp,QWORD PTR [r15+0x28]
  4314cf:	mov    BYTE PTR [rbp+0x0],0x22
  4314d3:	mov    rbp,QWORD PTR [r15+0x20]
  4314d7:	xor    eax,eax
  4314d9:	cmp    BYTE PTR [r15+0x32],0x1
  4314de:	mov    rdi,QWORD PTR [r15+0x28]
  4314e2:	adcx   rdi,rax
  4314e8:	mov    QWORD PTR [r15+0x28],rdi
  4314ec:	movsxd r13,r13d
  4314ef:	lea    rax,[rdi+r13*1]
  4314f3:	cmp    rax,rbp
  4314f6:	mov    QWORD PTR [rsp+0x20],r12
  4314fb:	mov    QWORD PTR [rsp+0x30],r13
  431500:	jae    431514 <flatcc_json_printer_union_field@@Base+0x1a4>
  431502:	mov    rsi,QWORD PTR [rsp+0x10]
  431507:	mov    rdx,r13
  43150a:	call   4060e0 <memcpy@plt>
  43150f:	mov    r12,r13
  431512:	jmp    431588 <flatcc_json_printer_union_field@@Base+0x218>
  431514:	cmp    rdi,rbp
  431517:	jb     431529 <flatcc_json_printer_union_field@@Base+0x1b9>
  431519:	xor    esi,esi
  43151b:	mov    rdi,r15
  43151e:	call   QWORD PTR [r15+0x48]
  431522:	mov    rbp,QWORD PTR [r14]
  431525:	mov    rdi,QWORD PTR [r15+0x28]
  431529:	sub    rbp,rdi
  43152c:	mov    rbx,QWORD PTR [rsp+0x10]
  431531:	mov    r12,r13
  431534:	cmp    rbp,r13
  431537:	jae    43157d <flatcc_json_printer_union_field@@Base+0x20d>
  431539:	mov    r12,r13
  43153c:	mov    rbx,QWORD PTR [rsp+0x10]
  431541:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43154b:	nop    DWORD PTR [rax+rax*1+0x0]
  431550:	mov    rsi,rbx
  431553:	mov    rdx,rbp
  431556:	call   4060e0 <memcpy@plt>
  43155b:	add    QWORD PTR [r15+0x28],rbp
  43155f:	add    rbx,rbp
  431562:	sub    r12,rbp
  431565:	xor    esi,esi
  431567:	mov    rdi,r15
  43156a:	call   QWORD PTR [r15+0x48]
  43156e:	mov    rbp,QWORD PTR [r14]
  431571:	mov    rdi,QWORD PTR [r15+0x28]
  431575:	sub    rbp,rdi
  431578:	cmp    r12,rbp
  43157b:	ja     431550 <flatcc_json_printer_union_field@@Base+0x1e0>
  43157d:	mov    rsi,rbx
  431580:	mov    rdx,r12
  431583:	call   4060e0 <memcpy@plt>
  431588:	mov    r13,QWORD PTR [r15+0x20]
  43158c:	mov    rax,QWORD PTR [r15+0x28]
  431590:	lea    rdi,[rax+r12*1]
  431594:	mov    QWORD PTR [r15+0x28],rdi
  431598:	add    rax,r12
  43159b:	add    rax,0x5
  43159f:	cmp    rax,r13
  4315a2:	jae    4315c4 <flatcc_json_printer_union_field@@Base+0x254>
  4315a4:	mov    BYTE PTR [rdi+0x4],0x65
  4315a8:	mov    DWORD PTR [rdi],0x7079745f
  4315ae:	mov    ebp,0x5
  4315b3:	mov    r12,QWORD PTR [rsp+0x20]
  4315b8:	mov    r14,QWORD PTR [rsp+0x10]
  4315bd:	mov    r13b,BYTE PTR [rsp+0xf]
  4315c2:	jmp    431642 <flatcc_json_printer_union_field@@Base+0x2d2>
  4315c4:	cmp    rdi,r13
  4315c7:	jb     4315d9 <flatcc_json_printer_union_field@@Base+0x269>
  4315c9:	xor    esi,esi
  4315cb:	mov    rdi,r15
  4315ce:	call   QWORD PTR [r15+0x48]
  4315d2:	mov    r13,QWORD PTR [r14]
  4315d5:	mov    rdi,QWORD PTR [r15+0x28]
  4315d9:	mov    r12,QWORD PTR [rsp+0x20]
  4315de:	sub    r13,rdi
  4315e1:	lea    rbx,[rip+0x8a54]        # 43a03c <flatcc_builder_padding_base@@Base+0x349c>
  4315e8:	mov    ebp,0x5
  4315ed:	cmp    r13,0x4
  4315f1:	ja     43162d <flatcc_json_printer_union_field@@Base+0x2bd>
  4315f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4315fd:	nop    DWORD PTR [rax]
  431600:	mov    rsi,rbx
  431603:	mov    rdx,r13
  431606:	call   4060e0 <memcpy@plt>
  43160b:	add    QWORD PTR [r15+0x28],r13
  43160f:	add    rbx,r13
  431612:	sub    rbp,r13
  431615:	xor    esi,esi
  431617:	mov    rdi,r15
  43161a:	call   QWORD PTR [r15+0x48]
  43161e:	mov    r13,QWORD PTR [r14]
  431621:	mov    rdi,QWORD PTR [r15+0x28]
  431625:	sub    r13,rdi
  431628:	cmp    rbp,r13
  43162b:	ja     431600 <flatcc_json_printer_union_field@@Base+0x290>
  43162d:	mov    r14,QWORD PTR [rsp+0x10]
  431632:	mov    r13b,BYTE PTR [rsp+0xf]
  431637:	mov    rsi,rbx
  43163a:	mov    rdx,rbp
  43163d:	call   4060e0 <memcpy@plt>
  431642:	mov    rax,QWORD PTR [r15+0x28]
  431646:	lea    rcx,[rax+rbp*1]
  43164a:	mov    QWORD PTR [r15+0x28],rcx
  43164e:	mov    BYTE PTR [rax+rbp*1],0x22
  431652:	mov    rax,QWORD PTR [r15+0x28]
  431656:	xor    ecx,ecx
  431658:	cmp    BYTE PTR [r15+0x32],0x1
  43165d:	adcx   rax,rcx
  431663:	lea    rcx,[rax+0x1]
  431667:	mov    QWORD PTR [r15+0x28],rcx
  43166b:	mov    BYTE PTR [rax],0x3a
  43166e:	mov    rax,QWORD PTR [r15+0x28]
  431672:	mov    BYTE PTR [rax],0x20
  431675:	mov    rdx,QWORD PTR [r15+0x28]
  431679:	cmp    BYTE PTR [r15+0x31],0x1
  43167e:	sbb    rdx,0xffffffffffffffff
  431682:	mov    QWORD PTR [r15+0x28],rdx
  431686:	cmp    BYTE PTR [r15+0x33],0x0
  43168b:	je     4316cd <flatcc_json_printer_union_field@@Base+0x35d>
  43168d:	cmp    r13b,0x64
  431691:	jb     4316da <flatcc_json_printer_union_field@@Base+0x36a>
  431693:	mov    BYTE PTR [rdx+0x3],0x0
  431697:	movzx  eax,r13b
  43169b:	lea    ecx,[rax+rax*4]
  43169e:	lea    ecx,[rax+rcx*8]
  4316a1:	shr    ecx,0xc
  4316a4:	mov    bl,0x64
  4316a6:	mov    eax,ecx
  4316a8:	mul    bl
  4316aa:	mov    ebx,r13d
  4316ad:	sub    bl,al
  4316af:	movzx  eax,bl
  4316b2:	lea    rsi,[rip+0x8cc7]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  4316b9:	movzx  eax,WORD PTR [rsi+rax*2]
  4316bd:	mov    WORD PTR [rdx+0x1],ax
  4316c1:	or     cl,0x30
  4316c4:	mov    BYTE PTR [rdx],cl
  4316c6:	mov    eax,0x3
  4316cb:	jmp    431722 <flatcc_json_printer_union_field@@Base+0x3b2>
  4316cd:	movzx  esi,r13b
  4316d1:	mov    rdi,r15
  4316d4:	call   QWORD PTR [rsp+0x28]
  4316d8:	jmp    431726 <flatcc_json_printer_union_field@@Base+0x3b6>
  4316da:	cmp    r13b,0xa
  4316de:	jb     431712 <flatcc_json_printer_union_field@@Base+0x3a2>
  4316e0:	mov    BYTE PTR [rdx+0x2],0x0
  4316e4:	movzx  eax,r13b
  4316e8:	lea    ecx,[rax+rax*4]
  4316eb:	lea    eax,[rax+rcx*8]
  4316ee:	shr    eax,0xc
  4316f1:	mov    cl,0x64
  4316f3:	mul    cl
  4316f5:	mov    ecx,r13d
  4316f8:	sub    cl,al
  4316fa:	movzx  eax,cl
  4316fd:	lea    rcx,[rip+0x8c7c]        # 43a380 <flatcc_builder_padding_base@@Base+0x37e0>
  431704:	movzx  eax,WORD PTR [rcx+rax*2]
  431708:	mov    WORD PTR [rdx],ax
  43170b:	mov    eax,0x2
  431710:	jmp    431722 <flatcc_json_printer_union_field@@Base+0x3b2>
  431712:	mov    BYTE PTR [rdx+0x1],0x0
  431716:	mov    eax,r13d
  431719:	add    al,0x30
  43171b:	mov    BYTE PTR [rdx],al
  43171d:	mov    eax,0x1
  431722:	add    QWORD PTR [r15+0x28],rax
  431726:	mov    rdx,QWORD PTR [rsp+0x18]
  43172b:	test   r13b,r13b
  43172e:	je     43177b <flatcc_json_printer_union_field@@Base+0x40b>
  431730:	mov    rsi,r14
  431733:	mov    r14,QWORD PTR [rsp+0x80]
  43173b:	lea    rbx,[rsp+0x38]
  431740:	mov    rax,QWORD PTR [r15+0x28]
  431744:	lea    rcx,[rax+0x1]
  431748:	mov    QWORD PTR [r15+0x28],rcx
  43174c:	mov    BYTE PTR [rax],0x2c
  43174f:	mov    rdi,r15
  431752:	mov    rbp,rdx
  431755:	mov    rdx,QWORD PTR [rsp+0x30]
  43175a:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  43175f:	mov    eax,DWORD PTR [r12+0x14]
  431764:	mov    DWORD PTR [rsp+0x40],eax
  431768:	mov    BYTE PTR [rsp+0x44],r13b
  43176d:	mov    QWORD PTR [rsp+0x38],rbp
  431772:	mov    rdi,r15
  431775:	mov    rsi,rbx
  431778:	call   r14
  43177b:	add    rsp,0x48
  43177f:	pop    rbx
  431780:	pop    r12
  431782:	pop    r13
  431784:	pop    r14
  431786:	pop    r15
  431788:	pop    rbp
  431789:	ret    
  43178a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000431790 <flatcc_json_printer_union_table@@Base>:
  431790:	push   r15
  431792:	push   r14
  431794:	push   rbx
  431795:	sub    rsp,0x20
  431799:	mov    r14,rdi
  43179c:	mov    eax,DWORD PTR [rsi+0x8]
  43179f:	add    eax,0xffffffff
  4317a2:	je     4318a0 <flatcc_json_printer_union_table@@Base+0x110>
  4317a8:	mov    rcx,QWORD PTR [rsi]
  4317ab:	mov    esi,DWORD PTR [rcx]
  4317ad:	add    rsi,rcx
  4317b0:	add    DWORD PTR [r14+0x38],0x1
  4317b5:	mov    rcx,QWORD PTR [r14+0x28]
  4317b9:	lea    rdi,[rcx+0x1]
  4317bd:	mov    QWORD PTR [r14+0x28],rdi
  4317c1:	mov    BYTE PTR [rcx],0x7b
  4317c4:	mov    DWORD PTR [rsp+0x18],0x0
  4317cc:	mov    DWORD PTR [rsp+0x14],eax
  4317d0:	mov    QWORD PTR [rsp],rsi
  4317d4:	movsxd rax,DWORD PTR [rsi]
  4317d7:	sub    rsi,rax
  4317da:	mov    QWORD PTR [rsp+0x8],rsi
  4317df:	movzx  eax,WORD PTR [rsi]
  4317e2:	mov    DWORD PTR [rsp+0x10],eax
  4317e6:	mov    rsi,rsp
  4317e9:	mov    rdi,r14
  4317ec:	call   rdx
  4317ee:	cmp    BYTE PTR [r14+0x31],0x0
  4317f3:	mov    r15,QWORD PTR [r14+0x28]
  4317f7:	je     431892 <flatcc_json_printer_union_table@@Base+0x102>
  4317fd:	lea    rax,[r15+0x1]
  431801:	mov    QWORD PTR [r14+0x28],rax
  431805:	mov    BYTE PTR [r15],0xa
  431809:	movsxd rax,DWORD PTR [r14+0x38]
  43180d:	add    rax,0xffffffffffffffff
  431811:	mov    DWORD PTR [r14+0x38],eax
  431815:	movzx  r15d,BYTE PTR [r14+0x31]
  43181a:	imul   r15,rax
  43181e:	mov    rbx,QWORD PTR [r14+0x20]
  431822:	mov    rdi,QWORD PTR [r14+0x28]
  431826:	lea    rax,[rdi+r15*1]
  43182a:	cmp    rax,rbx
  43182d:	jbe    43187d <flatcc_json_printer_union_table@@Base+0xed>
  43182f:	cmp    rdi,rbx
  431832:	jb     431845 <flatcc_json_printer_union_table@@Base+0xb5>
  431834:	xor    esi,esi
  431836:	mov    rdi,r14
  431839:	call   QWORD PTR [r14+0x48]
  43183d:	mov    rbx,QWORD PTR [r14+0x20]
  431841:	mov    rdi,QWORD PTR [r14+0x28]
  431845:	sub    rbx,rdi
  431848:	cmp    rbx,r15
  43184b:	jae    43187d <flatcc_json_printer_union_table@@Base+0xed>
  43184d:	nop    DWORD PTR [rax]
  431850:	mov    esi,0x20
  431855:	mov    rdx,rbx
  431858:	call   406080 <memset@plt>
  43185d:	add    QWORD PTR [r14+0x28],rbx
  431861:	sub    r15,rbx
  431864:	xor    esi,esi
  431866:	mov    rdi,r14
  431869:	call   QWORD PTR [r14+0x48]
  43186d:	mov    rbx,QWORD PTR [r14+0x20]
  431871:	mov    rdi,QWORD PTR [r14+0x28]
  431875:	sub    rbx,rdi
  431878:	cmp    r15,rbx
  43187b:	ja     431850 <flatcc_json_printer_union_table@@Base+0xc0>
  43187d:	mov    esi,0x20
  431882:	mov    rdx,r15
  431885:	call   406080 <memset@plt>
  43188a:	add    r15,QWORD PTR [r14+0x28]
  43188e:	mov    QWORD PTR [r14+0x28],r15
  431892:	lea    rax,[r15+0x1]
  431896:	mov    QWORD PTR [r14+0x28],rax
  43189a:	mov    BYTE PTR [r15],0x7d
  43189e:	jmp    4318af <flatcc_json_printer_union_table@@Base+0x11f>
  4318a0:	cmp    DWORD PTR [r14+0x3c],0x0
  4318a5:	jne    4318af <flatcc_json_printer_union_table@@Base+0x11f>
  4318a7:	mov    DWORD PTR [r14+0x3c],0x2
  4318af:	add    rsp,0x20
  4318b3:	pop    rbx
  4318b4:	pop    r14
  4318b6:	pop    r15
  4318b8:	ret    
  4318b9:	nop    DWORD PTR [rax+0x0]

00000000004318c0 <flatcc_json_printer_union_struct@@Base>:
  4318c0:	push   r15
  4318c2:	push   r14
  4318c4:	push   rbx
  4318c5:	mov    r14,rdi
  4318c8:	add    DWORD PTR [rdi+0x38],0x1
  4318cc:	mov    rax,QWORD PTR [rdi+0x28]
  4318d0:	lea    rcx,[rax+0x1]
  4318d4:	mov    QWORD PTR [rdi+0x28],rcx
  4318d8:	mov    BYTE PTR [rax],0x7b
  4318db:	mov    rax,QWORD PTR [rsi]
  4318de:	mov    esi,DWORD PTR [rax]
  4318e0:	add    rsi,rax
  4318e3:	call   rdx
  4318e5:	cmp    BYTE PTR [r14+0x31],0x0
  4318ea:	mov    r15,QWORD PTR [r14+0x28]
  4318ee:	je     431992 <flatcc_json_printer_union_struct@@Base+0xd2>
  4318f4:	lea    rax,[r15+0x1]
  4318f8:	mov    QWORD PTR [r14+0x28],rax
  4318fc:	mov    BYTE PTR [r15],0xa
  431900:	movsxd rax,DWORD PTR [r14+0x38]
  431904:	add    rax,0xffffffffffffffff
  431908:	mov    DWORD PTR [r14+0x38],eax
  43190c:	movzx  r15d,BYTE PTR [r14+0x31]
  431911:	imul   r15,rax
  431915:	mov    rbx,QWORD PTR [r14+0x20]
  431919:	mov    rdi,QWORD PTR [r14+0x28]
  43191d:	lea    rax,[rdi+r15*1]
  431921:	cmp    rax,rbx
  431924:	jbe    43197d <flatcc_json_printer_union_struct@@Base+0xbd>
  431926:	cmp    rdi,rbx
  431929:	jb     43193c <flatcc_json_printer_union_struct@@Base+0x7c>
  43192b:	xor    esi,esi
  43192d:	mov    rdi,r14
  431930:	call   QWORD PTR [r14+0x48]
  431934:	mov    rbx,QWORD PTR [r14+0x20]
  431938:	mov    rdi,QWORD PTR [r14+0x28]
  43193c:	sub    rbx,rdi
  43193f:	cmp    rbx,r15
  431942:	jae    43197d <flatcc_json_printer_union_struct@@Base+0xbd>
  431944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43194e:	xchg   ax,ax
  431950:	mov    esi,0x20
  431955:	mov    rdx,rbx
  431958:	call   406080 <memset@plt>
  43195d:	add    QWORD PTR [r14+0x28],rbx
  431961:	sub    r15,rbx
  431964:	xor    esi,esi
  431966:	mov    rdi,r14
  431969:	call   QWORD PTR [r14+0x48]
  43196d:	mov    rbx,QWORD PTR [r14+0x20]
  431971:	mov    rdi,QWORD PTR [r14+0x28]
  431975:	sub    rbx,rdi
  431978:	cmp    r15,rbx
  43197b:	ja     431950 <flatcc_json_printer_union_struct@@Base+0x90>
  43197d:	mov    esi,0x20
  431982:	mov    rdx,r15
  431985:	call   406080 <memset@plt>
  43198a:	add    r15,QWORD PTR [r14+0x28]
  43198e:	mov    QWORD PTR [r14+0x28],r15
  431992:	lea    rax,[r15+0x1]
  431996:	mov    QWORD PTR [r14+0x28],rax
  43199a:	mov    BYTE PTR [r15],0x7d
  43199e:	pop    rbx
  43199f:	pop    r14
  4319a1:	pop    r15
  4319a3:	ret    
  4319a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4319ae:	xchg   ax,ax

00000000004319b0 <flatcc_json_printer_union_string@@Base>:
  4319b0:	mov    rax,QWORD PTR [rsi]
  4319b3:	mov    ecx,DWORD PTR [rax]
  4319b5:	mov    edx,DWORD PTR [rax+rcx*1]
  4319b8:	lea    rsi,[rax+rcx*1]
  4319bc:	add    rsi,0x4
  4319c0:	jmp    427a80 <flatcc_json_printer_string@@Base+0x10>
  4319c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4319cf:	nop

00000000004319d0 <flatcc_json_printer_embedded_struct_field@@Base>:
  4319d0:	push   r15
  4319d2:	push   r14
  4319d4:	push   r12
  4319d6:	push   rbx
  4319d7:	push   rax
  4319d8:	mov    r15,rcx
  4319db:	mov    rbx,rdx
  4319de:	mov    r14,rdi
  4319e1:	mov    r12,QWORD PTR [rsp+0x30]
  4319e6:	test   esi,esi
  4319e8:	je     4319f9 <flatcc_json_printer_embedded_struct_field@@Base+0x29>
  4319ea:	mov    rax,QWORD PTR [r14+0x28]
  4319ee:	lea    rcx,[rax+0x1]
  4319f2:	mov    QWORD PTR [r14+0x28],rcx
  4319f6:	mov    BYTE PTR [rax],0x2c
  4319f9:	movsxd rdx,r9d
  4319fc:	mov    rdi,r14
  4319ff:	mov    rsi,r8
  431a02:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  431a07:	add    DWORD PTR [r14+0x38],0x1
  431a0c:	mov    rax,QWORD PTR [r14+0x28]
  431a10:	lea    rcx,[rax+0x1]
  431a14:	mov    QWORD PTR [r14+0x28],rcx
  431a18:	mov    BYTE PTR [rax],0x7b
  431a1b:	add    rbx,r15
  431a1e:	mov    rdi,r14
  431a21:	mov    rsi,rbx
  431a24:	call   r12
  431a27:	cmp    BYTE PTR [r14+0x31],0x0
  431a2c:	mov    r15,QWORD PTR [r14+0x28]
  431a30:	je     431ad2 <flatcc_json_printer_embedded_struct_field@@Base+0x102>
  431a36:	lea    rax,[r15+0x1]
  431a3a:	mov    QWORD PTR [r14+0x28],rax
  431a3e:	mov    BYTE PTR [r15],0xa
  431a42:	movsxd rax,DWORD PTR [r14+0x38]
  431a46:	add    rax,0xffffffffffffffff
  431a4a:	mov    DWORD PTR [r14+0x38],eax
  431a4e:	movzx  r15d,BYTE PTR [r14+0x31]
  431a53:	imul   r15,rax
  431a57:	mov    rbx,QWORD PTR [r14+0x20]
  431a5b:	mov    rdi,QWORD PTR [r14+0x28]
  431a5f:	lea    rax,[rdi+r15*1]
  431a63:	cmp    rax,rbx
  431a66:	jbe    431abd <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  431a68:	cmp    rdi,rbx
  431a6b:	jb     431a7e <flatcc_json_printer_embedded_struct_field@@Base+0xae>
  431a6d:	xor    esi,esi
  431a6f:	mov    rdi,r14
  431a72:	call   QWORD PTR [r14+0x48]
  431a76:	mov    rbx,QWORD PTR [r14+0x20]
  431a7a:	mov    rdi,QWORD PTR [r14+0x28]
  431a7e:	sub    rbx,rdi
  431a81:	cmp    rbx,r15
  431a84:	jae    431abd <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  431a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431a90:	mov    esi,0x20
  431a95:	mov    rdx,rbx
  431a98:	call   406080 <memset@plt>
  431a9d:	add    QWORD PTR [r14+0x28],rbx
  431aa1:	sub    r15,rbx
  431aa4:	xor    esi,esi
  431aa6:	mov    rdi,r14
  431aa9:	call   QWORD PTR [r14+0x48]
  431aad:	mov    rbx,QWORD PTR [r14+0x20]
  431ab1:	mov    rdi,QWORD PTR [r14+0x28]
  431ab5:	sub    rbx,rdi
  431ab8:	cmp    r15,rbx
  431abb:	ja     431a90 <flatcc_json_printer_embedded_struct_field@@Base+0xc0>
  431abd:	mov    esi,0x20
  431ac2:	mov    rdx,r15
  431ac5:	call   406080 <memset@plt>
  431aca:	add    r15,QWORD PTR [r14+0x28]
  431ace:	mov    QWORD PTR [r14+0x28],r15
  431ad2:	lea    rax,[r15+0x1]
  431ad6:	mov    QWORD PTR [r14+0x28],rax
  431ada:	mov    BYTE PTR [r15],0x7d
  431ade:	add    rsp,0x8
  431ae2:	pop    rbx
  431ae3:	pop    r12
  431ae5:	pop    r14
  431ae7:	pop    r15
  431ae9:	ret    
  431aea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000431af0 <flatcc_json_printer_struct_field@@Base>:
  431af0:	push   r15
  431af2:	push   r14
  431af4:	push   rbx
  431af5:	lea    eax,[rdx+rdx*1]
  431af8:	add    eax,0x4
  431afb:	cmp    eax,DWORD PTR [rsi+0x10]
  431afe:	jge    431c1e <flatcc_json_printer_struct_field@@Base+0x12e>
  431b04:	mov    rdx,QWORD PTR [rsi+0x8]
  431b08:	mov    eax,eax
  431b0a:	movzx  ebx,WORD PTR [rdx+rax*1]
  431b0e:	test   rbx,rbx
  431b11:	je     431c1e <flatcc_json_printer_struct_field@@Base+0x12e>
  431b17:	add    rbx,QWORD PTR [rsi]
  431b1a:	je     431c1e <flatcc_json_printer_struct_field@@Base+0x12e>
  431b20:	mov    r15,r9
  431b23:	mov    r14,rdi
  431b26:	mov    eax,DWORD PTR [rsi+0x18]
  431b29:	lea    edx,[rax+0x1]
  431b2c:	mov    DWORD PTR [rsi+0x18],edx
  431b2f:	test   eax,eax
  431b31:	je     431b42 <flatcc_json_printer_struct_field@@Base+0x52>
  431b33:	mov    rax,QWORD PTR [r14+0x28]
  431b37:	lea    rdx,[rax+0x1]
  431b3b:	mov    QWORD PTR [r14+0x28],rdx
  431b3f:	mov    BYTE PTR [rax],0x2c
  431b42:	movsxd rdx,r8d
  431b45:	mov    rdi,r14
  431b48:	mov    rsi,rcx
  431b4b:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  431b50:	add    DWORD PTR [r14+0x38],0x1
  431b55:	mov    rax,QWORD PTR [r14+0x28]
  431b59:	lea    rcx,[rax+0x1]
  431b5d:	mov    QWORD PTR [r14+0x28],rcx
  431b61:	mov    BYTE PTR [rax],0x7b
  431b64:	mov    rdi,r14
  431b67:	mov    rsi,rbx
  431b6a:	call   r15
  431b6d:	cmp    BYTE PTR [r14+0x31],0x0
  431b72:	mov    r15,QWORD PTR [r14+0x28]
  431b76:	je     431c12 <flatcc_json_printer_struct_field@@Base+0x122>
  431b7c:	lea    rax,[r15+0x1]
  431b80:	mov    QWORD PTR [r14+0x28],rax
  431b84:	mov    BYTE PTR [r15],0xa
  431b88:	movsxd rax,DWORD PTR [r14+0x38]
  431b8c:	add    rax,0xffffffffffffffff
  431b90:	mov    DWORD PTR [r14+0x38],eax
  431b94:	movzx  r15d,BYTE PTR [r14+0x31]
  431b99:	imul   r15,rax
  431b9d:	mov    rbx,QWORD PTR [r14+0x20]
  431ba1:	mov    rdi,QWORD PTR [r14+0x28]
  431ba5:	lea    rax,[rdi+r15*1]
  431ba9:	cmp    rax,rbx
  431bac:	jbe    431bfd <flatcc_json_printer_struct_field@@Base+0x10d>
  431bae:	cmp    rdi,rbx
  431bb1:	jb     431bc4 <flatcc_json_printer_struct_field@@Base+0xd4>
  431bb3:	xor    esi,esi
  431bb5:	mov    rdi,r14
  431bb8:	call   QWORD PTR [r14+0x48]
  431bbc:	mov    rbx,QWORD PTR [r14+0x20]
  431bc0:	mov    rdi,QWORD PTR [r14+0x28]
  431bc4:	sub    rbx,rdi
  431bc7:	cmp    rbx,r15
  431bca:	jae    431bfd <flatcc_json_printer_struct_field@@Base+0x10d>
  431bcc:	nop    DWORD PTR [rax+0x0]
  431bd0:	mov    esi,0x20
  431bd5:	mov    rdx,rbx
  431bd8:	call   406080 <memset@plt>
  431bdd:	add    QWORD PTR [r14+0x28],rbx
  431be1:	sub    r15,rbx
  431be4:	xor    esi,esi
  431be6:	mov    rdi,r14
  431be9:	call   QWORD PTR [r14+0x48]
  431bed:	mov    rbx,QWORD PTR [r14+0x20]
  431bf1:	mov    rdi,QWORD PTR [r14+0x28]
  431bf5:	sub    rbx,rdi
  431bf8:	cmp    r15,rbx
  431bfb:	ja     431bd0 <flatcc_json_printer_struct_field@@Base+0xe0>
  431bfd:	mov    esi,0x20
  431c02:	mov    rdx,r15
  431c05:	call   406080 <memset@plt>
  431c0a:	add    r15,QWORD PTR [r14+0x28]
  431c0e:	mov    QWORD PTR [r14+0x28],r15
  431c12:	lea    rax,[r15+0x1]
  431c16:	mov    QWORD PTR [r14+0x28],rax
  431c1a:	mov    BYTE PTR [r15],0x7d
  431c1e:	pop    rbx
  431c1f:	pop    r14
  431c21:	pop    r15
  431c23:	ret    
  431c24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c2e:	xchg   ax,ax

0000000000431c30 <flatcc_json_printer_struct_as_root@@Base>:
  431c30:	push   r15
  431c32:	push   r14
  431c34:	push   rbx
  431c35:	sub    rsp,0x10
  431c39:	mov    r14,rdi
  431c3c:	mov    DWORD PTR [rsp+0xc],0x0
  431c44:	test   rsi,rsi
  431c47:	je     431da8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  431c4d:	cmp    rdx,0x7
  431c51:	jbe    431da8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  431c57:	mov    r15,r8
  431c5a:	mov    rbx,rsi
  431c5d:	test   rcx,rcx
  431c60:	je     431c85 <flatcc_json_printer_struct_as_root@@Base+0x55>
  431c62:	lea    rdi,[rsp+0xc]
  431c67:	mov    edx,0x4
  431c6c:	mov    rsi,rcx
  431c6f:	call   406040 <strncpy@plt>
  431c74:	mov    eax,DWORD PTR [rsp+0xc]
  431c78:	test   eax,eax
  431c7a:	je     431c85 <flatcc_json_printer_struct_as_root@@Base+0x55>
  431c7c:	cmp    DWORD PTR [rbx+0x4],eax
  431c7f:	jne    431dd6 <flatcc_json_printer_struct_as_root@@Base+0x1a6>
  431c85:	add    DWORD PTR [r14+0x38],0x1
  431c8a:	mov    rax,QWORD PTR [r14+0x28]
  431c8e:	lea    rcx,[rax+0x1]
  431c92:	mov    QWORD PTR [r14+0x28],rcx
  431c96:	mov    BYTE PTR [rax],0x7b
  431c99:	mov    esi,DWORD PTR [rbx]
  431c9b:	add    rsi,rbx
  431c9e:	mov    rdi,r14
  431ca1:	call   r15
  431ca4:	cmp    BYTE PTR [r14+0x31],0x0
  431ca9:	mov    r15,QWORD PTR [r14+0x28]
  431cad:	je     431d52 <flatcc_json_printer_struct_as_root@@Base+0x122>
  431cb3:	lea    rax,[r15+0x1]
  431cb7:	mov    QWORD PTR [r14+0x28],rax
  431cbb:	mov    BYTE PTR [r15],0xa
  431cbf:	movsxd rax,DWORD PTR [r14+0x38]
  431cc3:	add    rax,0xffffffffffffffff
  431cc7:	mov    DWORD PTR [r14+0x38],eax
  431ccb:	movzx  r15d,BYTE PTR [r14+0x31]
  431cd0:	imul   r15,rax
  431cd4:	mov    rbx,QWORD PTR [r14+0x20]
  431cd8:	mov    rdi,QWORD PTR [r14+0x28]
  431cdc:	lea    rax,[rdi+r15*1]
  431ce0:	cmp    rax,rbx
  431ce3:	jbe    431d3d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  431ce5:	cmp    rdi,rbx
  431ce8:	jb     431cfb <flatcc_json_printer_struct_as_root@@Base+0xcb>
  431cea:	xor    esi,esi
  431cec:	mov    rdi,r14
  431cef:	call   QWORD PTR [r14+0x48]
  431cf3:	mov    rbx,QWORD PTR [r14+0x20]
  431cf7:	mov    rdi,QWORD PTR [r14+0x28]
  431cfb:	sub    rbx,rdi
  431cfe:	cmp    rbx,r15
  431d01:	jae    431d3d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  431d03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431d0d:	nop    DWORD PTR [rax]
  431d10:	mov    esi,0x20
  431d15:	mov    rdx,rbx
  431d18:	call   406080 <memset@plt>
  431d1d:	add    QWORD PTR [r14+0x28],rbx
  431d21:	sub    r15,rbx
  431d24:	xor    esi,esi
  431d26:	mov    rdi,r14
  431d29:	call   QWORD PTR [r14+0x48]
  431d2d:	mov    rbx,QWORD PTR [r14+0x20]
  431d31:	mov    rdi,QWORD PTR [r14+0x28]
  431d35:	sub    rbx,rdi
  431d38:	cmp    r15,rbx
  431d3b:	ja     431d10 <flatcc_json_printer_struct_as_root@@Base+0xe0>
  431d3d:	mov    esi,0x20
  431d42:	mov    rdx,r15
  431d45:	call   406080 <memset@plt>
  431d4a:	add    r15,QWORD PTR [r14+0x28]
  431d4e:	mov    QWORD PTR [r14+0x28],r15
  431d52:	lea    rax,[r15+0x1]
  431d56:	mov    QWORD PTR [r14+0x28],rax
  431d5a:	mov    BYTE PTR [r15],0x7d
  431d5e:	cmp    BYTE PTR [r14+0x31],0x0
  431d63:	je     431d7b <flatcc_json_printer_struct_as_root@@Base+0x14b>
  431d65:	cmp    DWORD PTR [r14+0x38],0x0
  431d6a:	jne    431d7b <flatcc_json_printer_struct_as_root@@Base+0x14b>
  431d6c:	mov    rax,QWORD PTR [r14+0x28]
  431d70:	lea    rcx,[rax+0x1]
  431d74:	mov    QWORD PTR [r14+0x28],rcx
  431d78:	mov    BYTE PTR [rax],0xa
  431d7b:	mov    esi,0x1
  431d80:	mov    rdi,r14
  431d83:	call   QWORD PTR [r14+0x48]
  431d87:	mov    eax,0xffffffff
  431d8c:	cmp    DWORD PTR [r14+0x3c],0x0
  431d91:	jne    431d9e <flatcc_json_printer_struct_as_root@@Base+0x16e>
  431d93:	mov    eax,DWORD PTR [r14+0x28]
  431d97:	add    eax,DWORD PTR [r14+0x18]
  431d9b:	sub    eax,DWORD PTR [r14]
  431d9e:	add    rsp,0x10
  431da2:	pop    rbx
  431da3:	pop    r14
  431da5:	pop    r15
  431da7:	ret    
  431da8:	cmp    DWORD PTR [r14+0x3c],0x0
  431dad:	jne    431db7 <flatcc_json_printer_struct_as_root@@Base+0x187>
  431daf:	mov    DWORD PTR [r14+0x3c],0x1
  431db7:	lea    rdi,[rip+0x8532]        # 43a2f0 <flatcc_builder_padding_base@@Base+0x3750>
  431dbe:	lea    rsi,[rip+0x8148]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  431dc5:	lea    rcx,[rip+0x8543]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  431dcc:	mov    edx,0x3fb
  431dd1:	call   406070 <__assert_fail@plt>
  431dd6:	cmp    DWORD PTR [r14+0x3c],0x0
  431ddb:	jne    431de5 <flatcc_json_printer_struct_as_root@@Base+0x1b5>
  431ddd:	mov    DWORD PTR [r14+0x3c],0x1
  431de5:	lea    rdi,[rip+0x8572]        # 43a35e <flatcc_builder_padding_base@@Base+0x37be>
  431dec:	lea    rsi,[rip+0x811a]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  431df3:	lea    rcx,[rip+0x8515]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  431dfa:	mov    edx,0x404
  431dff:	call   406070 <__assert_fail@plt>
  431e04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431e0e:	xchg   ax,ax

0000000000431e10 <flatcc_json_printer_table_as_root@@Base>:
  431e10:	push   r15
  431e12:	push   r14
  431e14:	push   rbx
  431e15:	sub    rsp,0x20
  431e19:	mov    r14,rdi
  431e1c:	mov    DWORD PTR [rsp],0x0
  431e23:	test   rsi,rsi
  431e26:	je     431fa8 <flatcc_json_printer_table_as_root@@Base+0x198>
  431e2c:	cmp    rdx,0x7
  431e30:	jbe    431fa8 <flatcc_json_printer_table_as_root@@Base+0x198>
  431e36:	mov    r15,r8
  431e39:	mov    rbx,rsi
  431e3c:	test   rcx,rcx
  431e3f:	je     431e61 <flatcc_json_printer_table_as_root@@Base+0x51>
  431e41:	mov    rdi,rsp
  431e44:	mov    edx,0x4
  431e49:	mov    rsi,rcx
  431e4c:	call   406040 <strncpy@plt>
  431e51:	mov    eax,DWORD PTR [rsp]
  431e54:	test   eax,eax
  431e56:	je     431e61 <flatcc_json_printer_table_as_root@@Base+0x51>
  431e58:	cmp    DWORD PTR [rbx+0x4],eax
  431e5b:	jne    431fd6 <flatcc_json_printer_table_as_root@@Base+0x1c6>
  431e61:	mov    eax,DWORD PTR [rbx]
  431e63:	add    DWORD PTR [r14+0x38],0x1
  431e68:	lea    rcx,[rbx+rax*1]
  431e6c:	mov    rdx,QWORD PTR [r14+0x28]
  431e70:	lea    rsi,[rdx+0x1]
  431e74:	mov    QWORD PTR [r14+0x28],rsi
  431e78:	mov    BYTE PTR [rdx],0x7b
  431e7b:	mov    QWORD PTR [rsp+0x14],0x63
  431e84:	mov    QWORD PTR [rsp],rcx
  431e88:	movsxd rax,DWORD PTR [rbx+rax*1]
  431e8c:	sub    rcx,rax
  431e8f:	mov    QWORD PTR [rsp+0x8],rcx
  431e94:	movzx  eax,WORD PTR [rcx]
  431e97:	mov    DWORD PTR [rsp+0x10],eax
  431e9b:	mov    rsi,rsp
  431e9e:	mov    rdi,r14
  431ea1:	call   r15
  431ea4:	cmp    BYTE PTR [r14+0x31],0x0
  431ea9:	mov    r15,QWORD PTR [r14+0x28]
  431ead:	je     431f52 <flatcc_json_printer_table_as_root@@Base+0x142>
  431eb3:	lea    rax,[r15+0x1]
  431eb7:	mov    QWORD PTR [r14+0x28],rax
  431ebb:	mov    BYTE PTR [r15],0xa
  431ebf:	movsxd rax,DWORD PTR [r14+0x38]
  431ec3:	add    rax,0xffffffffffffffff
  431ec7:	mov    DWORD PTR [r14+0x38],eax
  431ecb:	movzx  r15d,BYTE PTR [r14+0x31]
  431ed0:	imul   r15,rax
  431ed4:	mov    rbx,QWORD PTR [r14+0x20]
  431ed8:	mov    rdi,QWORD PTR [r14+0x28]
  431edc:	lea    rax,[rdi+r15*1]
  431ee0:	cmp    rax,rbx
  431ee3:	jbe    431f3d <flatcc_json_printer_table_as_root@@Base+0x12d>
  431ee5:	cmp    rdi,rbx
  431ee8:	jb     431efb <flatcc_json_printer_table_as_root@@Base+0xeb>
  431eea:	xor    esi,esi
  431eec:	mov    rdi,r14
  431eef:	call   QWORD PTR [r14+0x48]
  431ef3:	mov    rbx,QWORD PTR [r14+0x20]
  431ef7:	mov    rdi,QWORD PTR [r14+0x28]
  431efb:	sub    rbx,rdi
  431efe:	cmp    rbx,r15
  431f01:	jae    431f3d <flatcc_json_printer_table_as_root@@Base+0x12d>
  431f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431f0d:	nop    DWORD PTR [rax]
  431f10:	mov    esi,0x20
  431f15:	mov    rdx,rbx
  431f18:	call   406080 <memset@plt>
  431f1d:	add    QWORD PTR [r14+0x28],rbx
  431f21:	sub    r15,rbx
  431f24:	xor    esi,esi
  431f26:	mov    rdi,r14
  431f29:	call   QWORD PTR [r14+0x48]
  431f2d:	mov    rbx,QWORD PTR [r14+0x20]
  431f31:	mov    rdi,QWORD PTR [r14+0x28]
  431f35:	sub    rbx,rdi
  431f38:	cmp    r15,rbx
  431f3b:	ja     431f10 <flatcc_json_printer_table_as_root@@Base+0x100>
  431f3d:	mov    esi,0x20
  431f42:	mov    rdx,r15
  431f45:	call   406080 <memset@plt>
  431f4a:	add    r15,QWORD PTR [r14+0x28]
  431f4e:	mov    QWORD PTR [r14+0x28],r15
  431f52:	lea    rax,[r15+0x1]
  431f56:	mov    QWORD PTR [r14+0x28],rax
  431f5a:	mov    BYTE PTR [r15],0x7d
  431f5e:	cmp    BYTE PTR [r14+0x31],0x0
  431f63:	je     431f7b <flatcc_json_printer_table_as_root@@Base+0x16b>
  431f65:	cmp    DWORD PTR [r14+0x38],0x0
  431f6a:	jne    431f7b <flatcc_json_printer_table_as_root@@Base+0x16b>
  431f6c:	mov    rax,QWORD PTR [r14+0x28]
  431f70:	lea    rcx,[rax+0x1]
  431f74:	mov    QWORD PTR [r14+0x28],rcx
  431f78:	mov    BYTE PTR [rax],0xa
  431f7b:	mov    esi,0x1
  431f80:	mov    rdi,r14
  431f83:	call   QWORD PTR [r14+0x48]
  431f87:	mov    eax,0xffffffff
  431f8c:	cmp    DWORD PTR [r14+0x3c],0x0
  431f91:	jne    431f9e <flatcc_json_printer_table_as_root@@Base+0x18e>
  431f93:	mov    eax,DWORD PTR [r14+0x28]
  431f97:	add    eax,DWORD PTR [r14+0x18]
  431f9b:	sub    eax,DWORD PTR [r14]
  431f9e:	add    rsp,0x20
  431fa2:	pop    rbx
  431fa3:	pop    r14
  431fa5:	pop    r15
  431fa7:	ret    
  431fa8:	cmp    DWORD PTR [r14+0x3c],0x0
  431fad:	jne    431fb7 <flatcc_json_printer_table_as_root@@Base+0x1a7>
  431faf:	mov    DWORD PTR [r14+0x3c],0x1
  431fb7:	lea    rdi,[rip+0x8332]        # 43a2f0 <flatcc_builder_padding_base@@Base+0x3750>
  431fbe:	lea    rsi,[rip+0x7f48]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  431fc5:	lea    rcx,[rip+0x8343]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  431fcc:	mov    edx,0x3fb
  431fd1:	call   406070 <__assert_fail@plt>
  431fd6:	cmp    DWORD PTR [r14+0x3c],0x0
  431fdb:	jne    431fe5 <flatcc_json_printer_table_as_root@@Base+0x1d5>
  431fdd:	mov    DWORD PTR [r14+0x3c],0x1
  431fe5:	lea    rdi,[rip+0x8372]        # 43a35e <flatcc_builder_padding_base@@Base+0x37be>
  431fec:	lea    rsi,[rip+0x7f1a]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  431ff3:	lea    rcx,[rip+0x8315]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  431ffa:	mov    edx,0x404
  431fff:	call   406070 <__assert_fail@plt>
  432004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43200e:	xchg   ax,ax

0000000000432010 <flatcc_json_printer_struct_as_nested_root@@Base>:
  432010:	push   rbp
  432011:	push   r15
  432013:	push   r14
  432015:	push   r13
  432017:	push   r12
  432019:	push   rbx
  43201a:	push   rax
  43201b:	lea    eax,[rdx+rdx*1]
  43201e:	add    eax,0x4
  432021:	cmp    eax,DWORD PTR [rsi+0x10]
  432024:	jge    43219d <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  43202a:	mov    r15,rcx
  43202d:	mov    rbx,rsi
  432030:	mov    rcx,QWORD PTR [rsi+0x8]
  432034:	mov    eax,eax
  432036:	movzx  eax,WORD PTR [rcx+rax*1]
  43203a:	test   rax,rax
  43203d:	je     43219d <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  432043:	add    rax,QWORD PTR [rbx]
  432046:	je     43219d <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  43204c:	mov    r14,rdi
  43204f:	mov    ebp,DWORD PTR [rax]
  432051:	mov    ecx,DWORD PTR [rbp+rax*1+0x0]
  432055:	mov    DWORD PTR [rsp+0x4],0x0
  43205d:	cmp    ecx,0x8
  432060:	jb     4321ac <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  432066:	add    rbp,rax
  432069:	je     4321ac <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  43206f:	mov    r12d,r8d
  432072:	test   r9,r9
  432075:	je     43209a <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  432077:	lea    rdi,[rsp+0x4]
  43207c:	mov    edx,0x4
  432081:	mov    rsi,r9
  432084:	call   406040 <strncpy@plt>
  432089:	mov    eax,DWORD PTR [rsp+0x4]
  43208d:	test   eax,eax
  43208f:	je     43209a <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  432091:	cmp    DWORD PTR [rbp+0x4],eax
  432094:	jne    4321da <flatcc_json_printer_struct_as_nested_root@@Base+0x1ca>
  43209a:	mov    r13,QWORD PTR [rsp+0x40]
  43209f:	mov    eax,DWORD PTR [rbx+0x18]
  4320a2:	lea    ecx,[rax+0x1]
  4320a5:	mov    DWORD PTR [rbx+0x18],ecx
  4320a8:	test   eax,eax
  4320aa:	je     4320bb <flatcc_json_printer_struct_as_nested_root@@Base+0xab>
  4320ac:	mov    rax,QWORD PTR [r14+0x28]
  4320b0:	lea    rcx,[rax+0x1]
  4320b4:	mov    QWORD PTR [r14+0x28],rcx
  4320b8:	mov    BYTE PTR [rax],0x2c
  4320bb:	movsxd rdx,r12d
  4320be:	mov    rdi,r14
  4320c1:	mov    rsi,r15
  4320c4:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4320c9:	add    DWORD PTR [r14+0x38],0x1
  4320ce:	mov    rax,QWORD PTR [r14+0x28]
  4320d2:	lea    rcx,[rax+0x1]
  4320d6:	mov    QWORD PTR [r14+0x28],rcx
  4320da:	mov    BYTE PTR [rax],0x7b
  4320dd:	mov    esi,DWORD PTR [rbp+0x0]
  4320e0:	add    rsi,rbp
  4320e3:	mov    rdi,r14
  4320e6:	call   r13
  4320e9:	cmp    BYTE PTR [r14+0x31],0x0
  4320ee:	mov    rbx,QWORD PTR [r14+0x28]
  4320f2:	je     432192 <flatcc_json_printer_struct_as_nested_root@@Base+0x182>
  4320f8:	lea    rax,[rbx+0x1]
  4320fc:	mov    QWORD PTR [r14+0x28],rax
  432100:	mov    BYTE PTR [rbx],0xa
  432103:	movsxd rax,DWORD PTR [r14+0x38]
  432107:	add    rax,0xffffffffffffffff
  43210b:	mov    DWORD PTR [r14+0x38],eax
  43210f:	movzx  ebx,BYTE PTR [r14+0x31]
  432114:	imul   rbx,rax
  432118:	mov    rbp,QWORD PTR [r14+0x20]
  43211c:	mov    rdi,QWORD PTR [r14+0x28]
  432120:	lea    rax,[rdi+rbx*1]
  432124:	cmp    rax,rbp
  432127:	jbe    43217d <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  432129:	cmp    rdi,rbp
  43212c:	jb     43213f <flatcc_json_printer_struct_as_nested_root@@Base+0x12f>
  43212e:	xor    esi,esi
  432130:	mov    rdi,r14
  432133:	call   QWORD PTR [r14+0x48]
  432137:	mov    rbp,QWORD PTR [r14+0x20]
  43213b:	mov    rdi,QWORD PTR [r14+0x28]
  43213f:	sub    rbp,rdi
  432142:	cmp    rbp,rbx
  432145:	jae    43217d <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  432147:	nop    WORD PTR [rax+rax*1+0x0]
  432150:	mov    esi,0x20
  432155:	mov    rdx,rbp
  432158:	call   406080 <memset@plt>
  43215d:	add    QWORD PTR [r14+0x28],rbp
  432161:	sub    rbx,rbp
  432164:	xor    esi,esi
  432166:	mov    rdi,r14
  432169:	call   QWORD PTR [r14+0x48]
  43216d:	mov    rbp,QWORD PTR [r14+0x20]
  432171:	mov    rdi,QWORD PTR [r14+0x28]
  432175:	sub    rbp,rdi
  432178:	cmp    rbx,rbp
  43217b:	ja     432150 <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
  43217d:	mov    esi,0x20
  432182:	mov    rdx,rbx
  432185:	call   406080 <memset@plt>
  43218a:	add    rbx,QWORD PTR [r14+0x28]
  43218e:	mov    QWORD PTR [r14+0x28],rbx
  432192:	lea    rax,[rbx+0x1]
  432196:	mov    QWORD PTR [r14+0x28],rax
  43219a:	mov    BYTE PTR [rbx],0x7d
  43219d:	add    rsp,0x8
  4321a1:	pop    rbx
  4321a2:	pop    r12
  4321a4:	pop    r13
  4321a6:	pop    r14
  4321a8:	pop    r15
  4321aa:	pop    rbp
  4321ab:	ret    
  4321ac:	cmp    DWORD PTR [r14+0x3c],0x0
  4321b1:	jne    4321bb <flatcc_json_printer_struct_as_nested_root@@Base+0x1ab>
  4321b3:	mov    DWORD PTR [r14+0x3c],0x1
  4321bb:	lea    rdi,[rip+0x812e]        # 43a2f0 <flatcc_builder_padding_base@@Base+0x3750>
  4321c2:	lea    rsi,[rip+0x7d44]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  4321c9:	lea    rcx,[rip+0x813f]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  4321d0:	mov    edx,0x3fb
  4321d5:	call   406070 <__assert_fail@plt>
  4321da:	cmp    DWORD PTR [r14+0x3c],0x0
  4321df:	jne    4321e9 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d9>
  4321e1:	mov    DWORD PTR [r14+0x3c],0x1
  4321e9:	lea    rdi,[rip+0x816e]        # 43a35e <flatcc_builder_padding_base@@Base+0x37be>
  4321f0:	lea    rsi,[rip+0x7d16]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  4321f7:	lea    rcx,[rip+0x8111]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  4321fe:	mov    edx,0x404
  432203:	call   406070 <__assert_fail@plt>
  432208:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000432210 <flatcc_json_printer_table_as_nested_root@@Base>:
  432210:	push   rbp
  432211:	push   r15
  432213:	push   r14
  432215:	push   r13
  432217:	push   r12
  432219:	push   rbx
  43221a:	sub    rsp,0x28
  43221e:	lea    eax,[rdx+rdx*1]
  432221:	add    eax,0x4
  432224:	cmp    eax,DWORD PTR [rsi+0x10]
  432227:	jge    4323ee <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  43222d:	mov    r15,rcx
  432230:	mov    rbx,rsi
  432233:	mov    rcx,QWORD PTR [rsi+0x8]
  432237:	mov    eax,eax
  432239:	movzx  ebp,WORD PTR [rcx+rax*1]
  43223d:	test   rbp,rbp
  432240:	je     4323ee <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  432246:	add    rbp,QWORD PTR [rbx]
  432249:	je     4323ee <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  43224f:	mov    r14,rdi
  432252:	mov    r13d,DWORD PTR [rbp+0x0]
  432256:	mov    eax,DWORD PTR [r13+rbp*1+0x0]
  43225b:	mov    DWORD PTR [rsp+0x8],0x0
  432263:	cmp    eax,0x7
  432266:	jbe    4323fd <flatcc_json_printer_table_as_nested_root@@Base+0x1ed>
  43226c:	mov    r12d,r8d
  43226f:	test   r9,r9
  432272:	je     43229d <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  432274:	lea    rdi,[rsp+0x8]
  432279:	mov    edx,0x4
  43227e:	mov    rsi,r9
  432281:	call   406040 <strncpy@plt>
  432286:	mov    eax,DWORD PTR [rsp+0x8]
  43228a:	test   eax,eax
  43228c:	je     43229d <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  43228e:	mov    rcx,r13
  432291:	add    rcx,rbp
  432294:	cmp    DWORD PTR [rcx+0x8],eax
  432297:	jne    43242b <flatcc_json_printer_table_as_nested_root@@Base+0x21b>
  43229d:	mov    eax,DWORD PTR [rbx+0x18]
  4322a0:	lea    ecx,[rax+0x1]
  4322a3:	mov    DWORD PTR [rbx+0x18],ecx
  4322a6:	test   eax,eax
  4322a8:	je     4322b9 <flatcc_json_printer_table_as_nested_root@@Base+0xa9>
  4322aa:	mov    rax,QWORD PTR [r14+0x28]
  4322ae:	lea    rcx,[rax+0x1]
  4322b2:	mov    QWORD PTR [r14+0x28],rcx
  4322b6:	mov    BYTE PTR [rax],0x2c
  4322b9:	movsxd rdx,r12d
  4322bc:	mov    rdi,r14
  4322bf:	mov    rsi,r15
  4322c2:	call   428c70 <flatcc_json_printer_string_field@@Base+0x80>
  4322c7:	mov    eax,DWORD PTR [rbx+0x14]
  4322ca:	add    eax,0xffffffff
  4322cd:	je     4323df <flatcc_json_printer_table_as_nested_root@@Base+0x1cf>
  4322d3:	lea    rcx,[rbp*1+0x4]
  4322db:	add    rcx,r13
  4322de:	mov    rdx,QWORD PTR [rsp+0x60]
  4322e3:	mov    esi,DWORD PTR [rcx]
  4322e5:	add    rsi,rcx
  4322e8:	add    DWORD PTR [r14+0x38],0x1
  4322ed:	mov    rcx,QWORD PTR [r14+0x28]
  4322f1:	lea    rdi,[rcx+0x1]
  4322f5:	mov    QWORD PTR [r14+0x28],rdi
  4322f9:	mov    BYTE PTR [rcx],0x7b
  4322fc:	mov    DWORD PTR [rsp+0x20],0x0
  432304:	mov    DWORD PTR [rsp+0x1c],eax
  432308:	mov    QWORD PTR [rsp+0x8],rsi
  43230d:	movsxd rax,DWORD PTR [rsi]
  432310:	sub    rsi,rax
  432313:	mov    QWORD PTR [rsp+0x10],rsi
  432318:	movzx  eax,WORD PTR [rsi]
  43231b:	mov    DWORD PTR [rsp+0x18],eax
  43231f:	lea    rsi,[rsp+0x8]
  432324:	mov    rdi,r14
  432327:	call   rdx
  432329:	cmp    BYTE PTR [r14+0x31],0x0
  43232e:	mov    rbx,QWORD PTR [r14+0x28]
  432332:	je     4323d2 <flatcc_json_printer_table_as_nested_root@@Base+0x1c2>
  432338:	lea    rax,[rbx+0x1]
  43233c:	mov    QWORD PTR [r14+0x28],rax
  432340:	mov    BYTE PTR [rbx],0xa
  432343:	movsxd rax,DWORD PTR [r14+0x38]
  432347:	add    rax,0xffffffffffffffff
  43234b:	mov    DWORD PTR [r14+0x38],eax
  43234f:	movzx  ebx,BYTE PTR [r14+0x31]
  432354:	imul   rbx,rax
  432358:	mov    rbp,QWORD PTR [r14+0x20]
  43235c:	mov    rdi,QWORD PTR [r14+0x28]
  432360:	lea    rax,[rdi+rbx*1]
  432364:	cmp    rax,rbp
  432367:	jbe    4323bd <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  432369:	cmp    rdi,rbp
  43236c:	jb     43237f <flatcc_json_printer_table_as_nested_root@@Base+0x16f>
  43236e:	xor    esi,esi
  432370:	mov    rdi,r14
  432373:	call   QWORD PTR [r14+0x48]
  432377:	mov    rbp,QWORD PTR [r14+0x20]
  43237b:	mov    rdi,QWORD PTR [r14+0x28]
  43237f:	sub    rbp,rdi
  432382:	cmp    rbp,rbx
  432385:	jae    4323bd <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  432387:	nop    WORD PTR [rax+rax*1+0x0]
  432390:	mov    esi,0x20
  432395:	mov    rdx,rbp
  432398:	call   406080 <memset@plt>
  43239d:	add    QWORD PTR [r14+0x28],rbp
  4323a1:	sub    rbx,rbp
  4323a4:	xor    esi,esi
  4323a6:	mov    rdi,r14
  4323a9:	call   QWORD PTR [r14+0x48]
  4323ad:	mov    rbp,QWORD PTR [r14+0x20]
  4323b1:	mov    rdi,QWORD PTR [r14+0x28]
  4323b5:	sub    rbp,rdi
  4323b8:	cmp    rbx,rbp
  4323bb:	ja     432390 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
  4323bd:	mov    esi,0x20
  4323c2:	mov    rdx,rbx
  4323c5:	call   406080 <memset@plt>
  4323ca:	add    rbx,QWORD PTR [r14+0x28]
  4323ce:	mov    QWORD PTR [r14+0x28],rbx
  4323d2:	lea    rax,[rbx+0x1]
  4323d6:	mov    QWORD PTR [r14+0x28],rax
  4323da:	mov    BYTE PTR [rbx],0x7d
  4323dd:	jmp    4323ee <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  4323df:	cmp    DWORD PTR [r14+0x3c],0x0
  4323e4:	jne    4323ee <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  4323e6:	mov    DWORD PTR [r14+0x3c],0x2
  4323ee:	add    rsp,0x28
  4323f2:	pop    rbx
  4323f3:	pop    r12
  4323f5:	pop    r13
  4323f7:	pop    r14
  4323f9:	pop    r15
  4323fb:	pop    rbp
  4323fc:	ret    
  4323fd:	cmp    DWORD PTR [r14+0x3c],0x0
  432402:	jne    43240c <flatcc_json_printer_table_as_nested_root@@Base+0x1fc>
  432404:	mov    DWORD PTR [r14+0x3c],0x1
  43240c:	lea    rdi,[rip+0x7edd]        # 43a2f0 <flatcc_builder_padding_base@@Base+0x3750>
  432413:	lea    rsi,[rip+0x7af3]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  43241a:	lea    rcx,[rip+0x7eee]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  432421:	mov    edx,0x3fb
  432426:	call   406070 <__assert_fail@plt>
  43242b:	cmp    DWORD PTR [r14+0x3c],0x0
  432430:	jne    43243a <flatcc_json_printer_table_as_nested_root@@Base+0x22a>
  432432:	mov    DWORD PTR [r14+0x3c],0x1
  43243a:	lea    rdi,[rip+0x7f1d]        # 43a35e <flatcc_builder_padding_base@@Base+0x37be>
  432441:	lea    rsi,[rip+0x7ac5]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  432448:	lea    rcx,[rip+0x7ec0]        # 43a30f <flatcc_builder_padding_base@@Base+0x376f>
  43244f:	mov    edx,0x404
  432454:	call   406070 <__assert_fail@plt>
  432459:	nop    DWORD PTR [rax+0x0]

0000000000432460 <flatcc_json_printer_init@@Base>:
  432460:	push   rbx
  432461:	mov    rbx,rdi
  432464:	vxorps xmm0,xmm0,xmm0
  432468:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  43246d:	vmovups YMMWORD PTR [rdi],ymm0
  432471:	test   rsi,rsi
  432474:	jne    432480 <flatcc_json_printer_init@@Base+0x20>
  432476:	mov    rax,QWORD PTR [rip+0xeb63]        # 440fe0 <stdout@GLIBC_2.2.5>
  43247d:	mov    rsi,QWORD PTR [rax]
  432480:	mov    QWORD PTR [rbx+0x40],rsi
  432484:	lea    rax,[rip+0x45]        # 4324d0 <flatcc_json_printer_init@@Base+0x70>
  43248b:	mov    QWORD PTR [rbx+0x48],rax
  43248f:	mov    edi,0x4040
  432494:	vzeroupper 
  432497:	call   4060f0 <malloc@plt>
  43249c:	mov    QWORD PTR [rbx],rax
  43249f:	test   rax,rax
  4324a2:	je     4324c7 <flatcc_json_printer_init@@Base+0x67>
  4324a4:	mov    BYTE PTR [rbx+0x30],0x1
  4324a8:	vmovaps xmm0,XMMWORD PTR [rip+0x7360]        # 439810 <flatcc_builder_padding_base@@Base+0x2c70>
  4324b0:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  4324b5:	mov    QWORD PTR [rbx+0x28],rax
  4324b9:	add    rax,0x4000
  4324bf:	mov    QWORD PTR [rbx+0x20],rax
  4324c3:	xor    eax,eax
  4324c5:	pop    rbx
  4324c6:	ret    
  4324c7:	mov    eax,0xffffffff
  4324cc:	pop    rbx
  4324cd:	ret    
  4324ce:	xchg   ax,ax
  4324d0:	push   r15
  4324d2:	push   r14
  4324d4:	push   rbx
  4324d5:	mov    rbx,rdi
  4324d8:	test   esi,esi
  4324da:	je     4324e2 <flatcc_json_printer_init@@Base+0x82>
  4324dc:	mov    r15,QWORD PTR [rbx+0x28]
  4324e0:	jmp    4324ef <flatcc_json_printer_init@@Base+0x8f>
  4324e2:	mov    r15,QWORD PTR [rbx+0x28]
  4324e6:	mov    r14,r15
  4324e9:	sub    r14,QWORD PTR [rbx+0x20]
  4324ed:	jae    432513 <flatcc_json_printer_init@@Base+0xb3>
  4324ef:	mov    rdi,QWORD PTR [rbx]
  4324f2:	mov    rcx,QWORD PTR [rbx+0x40]
  4324f6:	sub    r15,rdi
  4324f9:	mov    edx,0x1
  4324fe:	mov    rsi,r15
  432501:	call   406130 <fwrite@plt>
  432506:	mov    r14,QWORD PTR [rbx]
  432509:	mov    QWORD PTR [rbx+0x28],r14
  43250d:	add    QWORD PTR [rbx+0x18],r15
  432511:	jmp    432549 <flatcc_json_printer_init@@Base+0xe9>
  432513:	mov    rdi,QWORD PTR [rbx]
  432516:	mov    rsi,QWORD PTR [rbx+0x10]
  43251a:	mov    rcx,QWORD PTR [rbx+0x40]
  43251e:	mov    edx,0x1
  432523:	call   406130 <fwrite@plt>
  432528:	mov    rdi,QWORD PTR [rbx]
  43252b:	mov    rsi,QWORD PTR [rbx+0x10]
  43252f:	add    rsi,rdi
  432532:	mov    rdx,r14
  432535:	call   4060e0 <memcpy@plt>
  43253a:	add    r14,QWORD PTR [rbx]
  43253d:	mov    QWORD PTR [rbx+0x28],r14
  432541:	mov    rax,QWORD PTR [rbx+0x10]
  432545:	add    QWORD PTR [rbx+0x18],rax
  432549:	mov    BYTE PTR [r14],0x0
  43254d:	pop    rbx
  43254e:	pop    r14
  432550:	pop    r15
  432552:	ret    
  432553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43255d:	nop    DWORD PTR [rax]

0000000000432560 <flatcc_json_printer_init_buffer@@Base>:
  432560:	cmp    rdx,0x3f
  432564:	jbe    4325a1 <flatcc_json_printer_init_buffer@@Base+0x41>
  432566:	vxorps xmm0,xmm0,xmm0
  43256a:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  43256f:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  432574:	mov    QWORD PTR [rdi],rsi
  432577:	mov    QWORD PTR [rdi+0x8],rdx
  43257b:	lea    rax,[rdx-0x40]
  43257f:	mov    QWORD PTR [rdi+0x10],rax
  432583:	mov    QWORD PTR [rdi+0x28],rsi
  432587:	lea    rax,[rsi+rdx*1-0x40]
  43258c:	mov    QWORD PTR [rdi+0x20],rax
  432590:	lea    rax,[rip+0x39]        # 4325d0 <flatcc_json_printer_init_buffer@@Base+0x70>
  432597:	mov    QWORD PTR [rdi+0x48],rax
  43259b:	xor    eax,eax
  43259d:	vzeroupper 
  4325a0:	ret    
  4325a1:	push   rax
  4325a2:	lea    rdi,[rip+0x7a99]        # 43a042 <flatcc_builder_padding_base@@Base+0x34a2>
  4325a9:	lea    rsi,[rip+0x795d]        # 439f0d <flatcc_builder_padding_base@@Base+0x336d>
  4325b0:	lea    rcx,[rip+0x7ab4]        # 43a06b <flatcc_builder_padding_base@@Base+0x34cb>
  4325b7:	mov    edx,0x48d
  4325bc:	call   406070 <__assert_fail@plt>
  4325c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4325cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4325d0:	mov    rax,QWORD PTR [rdi+0x28]
  4325d4:	cmp    rax,QWORD PTR [rdi+0x20]
  4325d8:	jb     4325f8 <flatcc_json_printer_init_buffer@@Base+0x98>
  4325da:	cmp    DWORD PTR [rdi+0x3c],0x0
  4325de:	jne    4325e7 <flatcc_json_printer_init_buffer@@Base+0x87>
  4325e0:	mov    DWORD PTR [rdi+0x3c],0x3
  4325e7:	mov    rcx,QWORD PTR [rdi]
  4325ea:	sub    rax,rcx
  4325ed:	add    QWORD PTR [rdi+0x18],rax
  4325f1:	mov    QWORD PTR [rdi+0x28],rcx
  4325f5:	mov    rax,rcx
  4325f8:	mov    BYTE PTR [rax],0x0
  4325fb:	ret    
  4325fc:	nop    DWORD PTR [rax+0x0]

0000000000432600 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  432600:	push   r14
  432602:	push   rbx
  432603:	push   rax
  432604:	test   rsi,rsi
  432607:	mov    eax,0x1000
  43260c:	cmovne rax,rsi
  432610:	cmp    rax,0x40
  432614:	mov    r14d,0x40
  43261a:	cmova  r14,rax
  43261e:	mov    rbx,rdi
  432621:	vxorps xmm0,xmm0,xmm0
  432625:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  43262a:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  43262f:	mov    rdi,r14
  432632:	vzeroupper 
  432635:	call   4060f0 <malloc@plt>
  43263a:	mov    rcx,rax
  43263d:	mov    QWORD PTR [rbx],rax
  432640:	mov    BYTE PTR [rbx+0x30],0x1
  432644:	mov    QWORD PTR [rbx+0x8],r14
  432648:	lea    rax,[r14-0x40]
  43264c:	mov    QWORD PTR [rbx+0x10],rax
  432650:	mov    QWORD PTR [rbx+0x28],rcx
  432654:	lea    rax,[rcx+r14*1-0x40]
  432659:	mov    QWORD PTR [rbx+0x20],rax
  43265d:	lea    rax,[rip+0x2c]        # 432690 <flatcc_json_printer_init_dynamic_buffer@@Base+0x90>
  432664:	mov    QWORD PTR [rbx+0x48],rax
  432668:	xor    eax,eax
  43266a:	test   rcx,rcx
  43266d:	jne    43267b <flatcc_json_printer_init_dynamic_buffer@@Base+0x7b>
  43266f:	mov    DWORD PTR [rbx+0x3c],0x3
  432676:	mov    eax,0xffffffff
  43267b:	add    rsp,0x8
  43267f:	pop    rbx
  432680:	pop    r14
  432682:	ret    
  432683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43268d:	nop    DWORD PTR [rax]
  432690:	push   r14
  432692:	push   rbx
  432693:	push   rax
  432694:	mov    rax,QWORD PTR [rdi+0x28]
  432698:	mov    r14,rax
  43269b:	sub    r14,QWORD PTR [rdi]
  43269e:	mov    BYTE PTR [rax],0x0
  4326a1:	mov    rax,QWORD PTR [rdi+0x28]
  4326a5:	cmp    rax,QWORD PTR [rdi+0x20]
  4326a9:	jb     43270e <flatcc_json_printer_init_dynamic_buffer@@Base+0x10e>
  4326ab:	mov    rbx,rdi
  4326ae:	mov    rdi,QWORD PTR [rdi]
  4326b1:	mov    rsi,QWORD PTR [rbx+0x8]
  4326b5:	add    rsi,rsi
  4326b8:	call   406100 <realloc@plt>
  4326bd:	test   rax,rax
  4326c0:	je     4326f2 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf2>
  4326c2:	mov    rcx,QWORD PTR [rbx+0x8]
  4326c6:	lea    rdx,[rcx+rcx*1]
  4326ca:	mov    QWORD PTR [rbx+0x8],rdx
  4326ce:	lea    rdx,[rcx+rcx*1]
  4326d2:	add    rdx,0xffffffffffffffc0
  4326d6:	mov    QWORD PTR [rbx+0x10],rdx
  4326da:	mov    QWORD PTR [rbx],rax
  4326dd:	add    r14,rax
  4326e0:	mov    QWORD PTR [rbx+0x28],r14
  4326e4:	lea    rax,[rax+rcx*2]
  4326e8:	add    rax,0xffffffffffffffc0
  4326ec:	mov    QWORD PTR [rbx+0x20],rax
  4326f0:	jmp    43270a <flatcc_json_printer_init_dynamic_buffer@@Base+0x10a>
  4326f2:	cmp    DWORD PTR [rbx+0x3c],0x0
  4326f6:	jne    4326ff <flatcc_json_printer_init_dynamic_buffer@@Base+0xff>
  4326f8:	mov    DWORD PTR [rbx+0x3c],0x3
  4326ff:	add    QWORD PTR [rbx+0x18],r14
  432703:	mov    r14,QWORD PTR [rbx]
  432706:	mov    QWORD PTR [rbx+0x28],r14
  43270a:	mov    BYTE PTR [r14],0x0
  43270e:	add    rsp,0x8
  432712:	pop    rbx
  432713:	pop    r14
  432715:	ret    
  432716:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000432720 <flatcc_json_printer_get_buffer@@Base>:
  432720:	push   r14
  432722:	push   rbx
  432723:	push   rax
  432724:	mov    r14,rsi
  432727:	mov    rbx,rdi
  43272a:	xor    esi,esi
  43272c:	call   QWORD PTR [rdi+0x48]
  43272f:	test   r14,r14
  432732:	je     432743 <flatcc_json_printer_get_buffer@@Base+0x23>
  432734:	mov    rax,QWORD PTR [rbx]
  432737:	mov    rcx,QWORD PTR [rbx+0x28]
  43273b:	sub    rcx,rax
  43273e:	mov    QWORD PTR [r14],rcx
  432741:	jmp    432746 <flatcc_json_printer_get_buffer@@Base+0x26>
  432743:	mov    rax,QWORD PTR [rbx]
  432746:	add    rsp,0x8
  43274a:	pop    rbx
  43274b:	pop    r14
  43274d:	ret    
  43274e:	xchg   ax,ax

0000000000432750 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  432750:	push   r14
  432752:	push   rbx
  432753:	push   rax
  432754:	mov    r14,rsi
  432757:	mov    rbx,rdi
  43275a:	xor    esi,esi
  43275c:	call   QWORD PTR [rdi+0x48]
  43275f:	test   r14,r14
  432762:	je     432773 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x23>
  432764:	mov    rax,QWORD PTR [rbx]
  432767:	mov    rcx,QWORD PTR [rbx+0x28]
  43276b:	sub    rcx,rax
  43276e:	mov    QWORD PTR [r14],rcx
  432771:	jmp    432776 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x26>
  432773:	mov    rax,QWORD PTR [rbx]
  432776:	vxorps xmm0,xmm0,xmm0
  43277a:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  43277f:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  432784:	vmovups YMMWORD PTR [rbx],ymm0
  432788:	add    rsp,0x8
  43278c:	pop    rbx
  43278d:	pop    r14
  43278f:	vzeroupper 
  432792:	ret    
  432793:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43279d:	nop    DWORD PTR [rax]

00000000004327a0 <flatcc_json_printer_clear@@Base>:
  4327a0:	push   rbx
  4327a1:	mov    rbx,rdi
  4327a4:	cmp    BYTE PTR [rdi+0x30],0x0
  4327a8:	je     4327b7 <flatcc_json_printer_clear@@Base+0x17>
  4327aa:	mov    rdi,QWORD PTR [rbx]
  4327ad:	test   rdi,rdi
  4327b0:	je     4327b7 <flatcc_json_printer_clear@@Base+0x17>
  4327b2:	call   406030 <free@plt>
  4327b7:	vxorps xmm0,xmm0,xmm0
  4327bb:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  4327c0:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4327c5:	vmovups YMMWORD PTR [rbx],ymm0
  4327c9:	pop    rbx
  4327ca:	vzeroupper 
  4327cd:	ret    
  4327ce:	xchg   ax,ax
  4327d0:	test   rdx,rdx
  4327d3:	je     432914 <flatcc_json_printer_clear@@Base+0x174>
  4327d9:	mov    r9,QWORD PTR [rdx]
  4327dc:	mov    r8d,ecx
  4327df:	and    r8d,0xffffff1f
  4327e6:	je     432804 <flatcc_json_printer_clear@@Base+0x64>
  4327e8:	cmp    r8d,0x1
  4327ec:	jne    4328db <flatcc_json_printer_clear@@Base+0x13b>
  4327f2:	lea    r8,[rip+0x7ab6]        # 43a2af <flatcc_builder_padding_base@@Base+0x370f>
  4327f9:	cmp    r9,0x3
  4327fd:	jae    432820 <flatcc_json_printer_clear@@Base+0x80>
  4327ff:	jmp    43288b <flatcc_json_printer_clear@@Base+0xeb>
  432804:	lea    r8,[rip+0x7a63]        # 43a26e <flatcc_builder_padding_base@@Base+0x36ce>
  43280b:	cmp    r9,0x3
  43280f:	jb     43288b <flatcc_json_printer_clear@@Base+0xeb>
  432811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43281b:	nop    DWORD PTR [rax+rax*1+0x0]
  432820:	movzx  eax,BYTE PTR [rsi]
  432823:	shr    rax,0x2
  432827:	movzx  eax,BYTE PTR [r8+rax*1]
  43282c:	mov    BYTE PTR [rdi],al
  43282e:	movzx  r10d,BYTE PTR [rsi]
  432832:	shl    r10,0x4
  432836:	and    r10d,0x30
  43283a:	movzx  eax,BYTE PTR [rsi+0x1]
  43283e:	shr    rax,0x4
  432842:	or     rax,r10
  432845:	movzx  eax,BYTE PTR [r8+rax*1]
  43284a:	mov    BYTE PTR [rdi+0x1],al
  43284d:	movzx  r10d,BYTE PTR [rsi+0x1]
  432852:	and    r10d,0xf
  432856:	movzx  eax,BYTE PTR [rsi+0x2]
  43285a:	shr    rax,0x6
  43285e:	lea    rax,[rax+r10*4]
  432862:	movzx  eax,BYTE PTR [r8+rax*1]
  432867:	mov    BYTE PTR [rdi+0x2],al
  43286a:	movzx  eax,BYTE PTR [rsi+0x2]
  43286e:	and    eax,0x3f
  432871:	movzx  eax,BYTE PTR [r8+rax*1]
  432876:	mov    BYTE PTR [rdi+0x3],al
  432879:	add    r9,0xfffffffffffffffd
  43287d:	add    rdi,0x4
  432881:	add    rsi,0x3
  432885:	cmp    r9,0x2
  432889:	ja     432820 <flatcc_json_printer_clear@@Base+0x80>
  43288b:	cmp    r9,0x1
  43288f:	je     4328e0 <flatcc_json_printer_clear@@Base+0x140>
  432891:	cmp    r9,0x2
  432895:	jne    432909 <flatcc_json_printer_clear@@Base+0x169>
  432897:	movzx  eax,BYTE PTR [rsi]
  43289a:	shr    rax,0x2
  43289e:	mov    al,BYTE PTR [r8+rax*1]
  4328a2:	mov    BYTE PTR [rdi],al
  4328a4:	movzx  r9d,BYTE PTR [rsi]
  4328a8:	shl    r9,0x4
  4328ac:	and    r9d,0x30
  4328b0:	movzx  eax,BYTE PTR [rsi+0x1]
  4328b4:	shr    rax,0x4
  4328b8:	or     rax,r9
  4328bb:	mov    al,BYTE PTR [r8+rax*1]
  4328bf:	mov    BYTE PTR [rdi+0x1],al
  4328c2:	movzx  eax,BYTE PTR [rsi+0x1]
  4328c6:	and    eax,0xf
  4328c9:	mov    al,BYTE PTR [r8+rax*4]
  4328cd:	mov    BYTE PTR [rdi+0x2],al
  4328d0:	test   cl,0x80
  4328d3:	je     432909 <flatcc_json_printer_clear@@Base+0x169>
  4328d5:	mov    BYTE PTR [rdi+0x3],0x3d
  4328d9:	jmp    432909 <flatcc_json_printer_clear@@Base+0x169>
  4328db:	mov    rcx,r9
  4328de:	jmp    43290e <flatcc_json_printer_clear@@Base+0x16e>
  4328e0:	movzx  eax,BYTE PTR [rsi]
  4328e3:	shr    rax,0x2
  4328e7:	mov    al,BYTE PTR [r8+rax*1]
  4328eb:	mov    BYTE PTR [rdi],al
  4328ed:	movzx  eax,BYTE PTR [rsi]
  4328f0:	shl    rax,0x4
  4328f4:	and    eax,0x30
  4328f7:	mov    al,BYTE PTR [r8+rax*1]
  4328fb:	mov    BYTE PTR [rdi+0x1],al
  4328fe:	test   cl,0x80
  432901:	je     432909 <flatcc_json_printer_clear@@Base+0x169>
  432903:	mov    WORD PTR [rdi+0x2],0x3d3d
  432909:	mov    r9,QWORD PTR [rdx]
  43290c:	xor    ecx,ecx
  43290e:	sub    r9,rcx
  432911:	mov    QWORD PTR [rdx],r9
  432914:	ret    
  432915:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43291f:	nop

0000000000432920 <__libc_csu_init@@Base>:
  432920:	endbr64 
  432924:	push   r15
  432926:	lea    r15,[rip+0xe1d3]        # 440b00 <flatcc_builder_padding_base@@Base+0x9f60>
  43292d:	push   r14
  43292f:	mov    r14,rdx
  432932:	push   r13
  432934:	mov    r13,rsi
  432937:	push   r12
  432939:	mov    r12d,edi
  43293c:	push   rbp
  43293d:	lea    rbp,[rip+0xe1c4]        # 440b08 <flatcc_builder_padding_base@@Base+0x9f68>
  432944:	push   rbx
  432945:	sub    rbp,r15
  432948:	sub    rsp,0x8
  43294c:	call   406000 <free@plt-0x30>
  432951:	sar    rbp,0x3
  432955:	je     432976 <__libc_csu_init@@Base+0x56>
  432957:	xor    ebx,ebx
  432959:	nop    DWORD PTR [rax+0x0]
  432960:	mov    rdx,r14
  432963:	mov    rsi,r13
  432966:	mov    edi,r12d
  432969:	call   QWORD PTR [r15+rbx*8]
  43296d:	add    rbx,0x1
  432971:	cmp    rbp,rbx
  432974:	jne    432960 <__libc_csu_init@@Base+0x40>
  432976:	add    rsp,0x8
  43297a:	pop    rbx
  43297b:	pop    rbp
  43297c:	pop    r12
  43297e:	pop    r13
  432980:	pop    r14
  432982:	pop    r15
  432984:	ret    
  432985:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000432990 <__libc_csu_fini@@Base>:
  432990:	endbr64 
  432994:	ret    

Disassembly of section .fini:

0000000000432998 <.fini>:
  432998:	endbr64 
  43299c:	sub    rsp,0x8
  4329a0:	add    rsp,0x8
  4329a4:	ret    
