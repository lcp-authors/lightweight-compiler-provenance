
../repos/charybdis/wsockd/.libs/wsockd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <rb_base64_encode@plt+0x5968>
  40200f:	test   rax,rax
  402012:	je     402016 <dup2@plt-0x34a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <rb_base64_encode@plt+0x5988>
  402026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 408010 <rb_base64_encode@plt+0x5990>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <dup2@plt-0x340>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <dup2@plt-0x340>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <dup2@plt-0x340>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <dup2@plt-0x340>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <dup2@plt-0x340>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <dup2@plt-0x340>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <dup2@plt-0x340>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <dup2@plt-0x340>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <dup2@plt-0x340>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <dup2@plt-0x340>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <dup2@plt-0x340>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <dup2@plt-0x340>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <dup2@plt-0x340>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <dup2@plt-0x340>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <dup2@plt-0x340>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <dup2@plt-0x340>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <dup2@plt-0x340>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <dup2@plt-0x340>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <dup2@plt-0x340>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <dup2@plt-0x340>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <dup2@plt-0x340>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <dup2@plt-0x340>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <dup2@plt-0x340>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <dup2@plt-0x340>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <dup2@plt-0x340>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <dup2@plt-0x340>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <dup2@plt-0x340>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <dup2@plt-0x340>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <dup2@plt-0x340>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <dup2@plt-0x340>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <dup2@plt-0x340>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <dup2@plt-0x340>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <dup2@plt-0x340>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <dup2@plt-0x340>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <dup2@plt-0x340>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <dup2@plt-0x340>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <dup2@plt-0x340>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <dup2@plt-0x340>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <dup2@plt-0x340>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <dup2@plt-0x340>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <dup2@plt-0x340>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <dup2@plt-0x340>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <dup2@plt-0x340>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <dup2@plt-0x340>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <dup2@plt-0x340>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <dup2@plt-0x340>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <dup2@plt-0x340>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <dup2@plt-0x340>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <dup2@plt-0x340>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <dup2@plt-0x340>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <dup2@plt-0x340>
  40235f:	nop

Disassembly of section .plt.sec:

0000000000402360 <dup2@plt>:
  402360:	endbr64 
  402364:	bnd jmp QWORD PTR [rip+0x5cad]        # 408018 <rb_base64_encode@plt+0x5998>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402370 <rb_get_type@plt>:
  402370:	endbr64 
  402374:	bnd jmp QWORD PTR [rip+0x5ca5]        # 408020 <rb_base64_encode@plt+0x59a0>
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402380 <memset@plt>:
  402380:	endbr64 
  402384:	bnd jmp QWORD PTR [rip+0x5c9d]        # 408028 <rb_base64_encode@plt+0x59a8>
  40238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402390 <rb_event_addish@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0x5c95]        # 408030 <rb_base64_encode@plt+0x59b0>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <rb_ignore_errno@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0x5c8d]        # 408038 <rb_base64_encode@plt+0x59b8>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <close@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x5c85]        # 408040 <rb_base64_encode@plt+0x59c0>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <rb_setselect@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x5c7d]        # 408048 <rb_base64_encode@plt+0x59c8>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <rb_send_fd_buf@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x5c75]        # 408050 <rb_base64_encode@plt+0x59d0>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <exit@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x5c6d]        # 408058 <rb_base64_encode@plt+0x59d8>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <__assert_fail@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x5c65]        # 408060 <rb_base64_encode@plt+0x59e0>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <rb_set_nb@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x5c5d]        # 408068 <rb_base64_encode@plt+0x59e8>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <rb_linebuf_parse@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x5c55]        # 408070 <rb_base64_encode@plt+0x59f0>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <__vsnprintf_chk@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x5c4d]        # 408078 <rb_base64_encode@plt+0x59f8>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <rb_strlcpy@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x5c45]        # 408080 <rb_base64_encode@plt+0x5a00>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <rb_init_rawbuffers@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x5c3d]        # 408088 <rb_base64_encode@plt+0x5a08>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <free@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x5c35]        # 408090 <rb_base64_encode@plt+0x5a10>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <strlen@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x5c2d]        # 408098 <rb_base64_encode@plt+0x5a18>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <rb_lib_loop@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x5c25]        # 4080a0 <rb_base64_encode@plt+0x5a20>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <rb_read@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x5c1d]        # 4080a8 <rb_base64_encode@plt+0x5a28>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <rb_set_type@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x5c15]        # 4080b0 <rb_base64_encode@plt+0x5a30>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <rb_linebuf_get@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x5c0d]        # 4080b8 <rb_base64_encode@plt+0x5a38>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <rb_linebuf_flush@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x5c05]        # 4080c0 <rb_base64_encode@plt+0x5a40>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <rb_linebuf_donebuf@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x5bfd]        # 4080c8 <rb_base64_encode@plt+0x5a48>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <strerror@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x5bf5]        # 4080d0 <rb_base64_encode@plt+0x5a50>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <sigaction@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x5bed]        # 4080d8 <rb_base64_encode@plt+0x5a58>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <rb_strcasestr@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x5be5]        # 4080e0 <rb_base64_encode@plt+0x5a60>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <rb_close@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x5bdd]        # 4080e8 <rb_base64_encode@plt+0x5a68>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <strtol@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x5bd5]        # 4080f0 <rb_base64_encode@plt+0x5a70>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <rb_rawbuf_length@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x5bcd]        # 4080f8 <rb_base64_encode@plt+0x5a78>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <rb_free_rawbuffer@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x5bc5]        # 408100 <rb_base64_encode@plt+0x5a80>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <getenv@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x5bbd]        # 408108 <rb_base64_encode@plt+0x5a88>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <rb_outofmemory@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x5bb5]        # 408110 <rb_base64_encode@plt+0x5a90>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <__errno_location@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x5bad]        # 408118 <rb_base64_encode@plt+0x5a98>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <sigaddset@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x5ba5]        # 408120 <rb_base64_encode@plt+0x5aa0>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <__stack_chk_fail@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x5b9d]        # 408128 <rb_base64_encode@plt+0x5aa8>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <rb_rawbuf_get@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x5b95]        # 408130 <rb_base64_encode@plt+0x5ab0>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <rb_lib_init@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x5b8d]        # 408138 <rb_base64_encode@plt+0x5ab8>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <rb_new_rawbuffer@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x5b85]        # 408140 <rb_base64_encode@plt+0x5ac0>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <rb_open@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x5b7d]        # 408148 <rb_base64_encode@plt+0x5ac8>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <rb_recv_fd_buf@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x5b75]        # 408150 <rb_base64_encode@plt+0x5ad0>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <calloc@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x5b6d]        # 408158 <rb_base64_encode@plt+0x5ad8>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <getrlimit@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x5b65]        # 408160 <rb_base64_encode@plt+0x5ae0>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <rb_linebuf_newbuf@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x5b5d]        # 408168 <rb_base64_encode@plt+0x5ae8>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <rb_linebuf_init@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x5b55]        # 408170 <rb_base64_encode@plt+0x5af0>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <sigemptyset@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x5b4d]        # 408178 <rb_base64_encode@plt+0x5af8>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <fwrite@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0x5b45]        # 408180 <rb_base64_encode@plt+0x5b00>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <rb_rawbuf_append@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0x5b3d]        # 408188 <rb_base64_encode@plt+0x5b08>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <rb_rawbuf_flush@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0x5b35]        # 408190 <rb_base64_encode@plt+0x5b10>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <memcpy@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0x5b2d]        # 408198 <rb_base64_encode@plt+0x5b18>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <open@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0x5b25]        # 4081a0 <rb_base64_encode@plt+0x5b20>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <rb_base64_encode@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0x5b1d]        # 4081a8 <rb_base64_encode@plt+0x5b28>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402690 <.text>:
  402690:	endbr64 
  402694:	push   r15
  402696:	mov    edi,0x7
  40269b:	push   r14
  40269d:	push   r13
  40269f:	push   r12
  4026a1:	push   rbp
  4026a2:	mov    ebp,0xffff
  4026a7:	push   rbx
  4026a8:	sub    rsp,0xc8
  4026af:	lea    rsi,[rsp+0x10]
  4026b4:	mov    rax,QWORD PTR fs:0x28
  4026bd:	mov    QWORD PTR [rsp+0xb8],rax
  4026c5:	xor    eax,eax
  4026c7:	call   4025f0 <getrlimit@plt>
  4026cc:	test   eax,eax
  4026ce:	jne    4026d4 <rb_base64_encode@plt+0x54>
  4026d0:	mov    ebp,DWORD PTR [rsp+0x10]
  4026d4:	lea    rdi,[rip+0x3999]        # 406074 <rb_base64_encode@plt+0x39f4>
  4026db:	call   402540 <getenv@plt>
  4026e0:	lea    rdi,[rip+0x3994]        # 40607b <rb_base64_encode@plt+0x39fb>
  4026e7:	mov    r12,rax
  4026ea:	call   402540 <getenv@plt>
  4026ef:	lea    rdi,[rip+0x398e]        # 406084 <rb_base64_encode@plt+0x3a04>
  4026f6:	mov    rbx,rax
  4026f9:	call   402540 <getenv@plt>
  4026fe:	test   r12,r12
  402701:	sete   dl
  402704:	test   rbx,rbx
  402707:	mov    rcx,rax
  40270a:	sete   al
  40270d:	or     dl,al
  40270f:	jne    40298d <rb_base64_encode@plt+0x30d>
  402715:	test   rcx,rcx
  402718:	je     40298d <rb_base64_encode@plt+0x30d>
  40271e:	mov    rdi,r12
  402721:	mov    edx,0xa
  402726:	xor    esi,esi
  402728:	mov    QWORD PTR [rsp+0x8],rcx
  40272d:	call   402510 <strtol@plt>
  402732:	mov    rdi,rbx
  402735:	mov    edx,0xa
  40273a:	xor    esi,esi
  40273c:	mov    r12,rax
  40273f:	mov    r15d,eax
  402742:	call   402510 <strtol@plt>
  402747:	mov    rcx,QWORD PTR [rsp+0x8]
  40274c:	mov    edx,0xa
  402751:	xor    esi,esi
  402753:	mov    rdi,rcx
  402756:	mov    r13,rax
  402759:	mov    r14d,eax
  40275c:	call   402510 <strtol@plt>
  402761:	mov    DWORD PTR [rip+0x11621],eax        # 413d88 <rb_base64_encode@plt+0x11708>
  402767:	xor    ebx,ebx
  402769:	test   ebp,ebp
  40276b:	jle    402798 <rb_base64_encode@plt+0x118>
  40276d:	nop    DWORD PTR [rax]
  402770:	inc    ebx
  402772:	cmp    ebx,ebp
  402774:	je     402798 <rb_base64_encode@plt+0x118>
  402776:	cmp    ebx,r15d
  402779:	setne  dl
  40277c:	cmp    ebx,r14d
  40277f:	setne  al
  402782:	test   dl,al
  402784:	je     402770 <rb_base64_encode@plt+0xf0>
  402786:	cmp    ebx,0x2
  402789:	jle    402770 <rb_base64_encode@plt+0xf0>
  40278b:	mov    edi,ebx
  40278d:	inc    ebx
  40278f:	call   4023b0 <close@plt>
  402794:	cmp    ebx,ebp
  402796:	jne    402776 <rb_base64_encode@plt+0xf6>
  402798:	mov    esi,0x2
  40279d:	lea    rdi,[rip+0x38e9]        # 40608d <rb_base64_encode@plt+0x3a0d>
  4027a4:	xor    eax,eax
  4027a6:	call   402670 <open@plt>
  4027ab:	mov    ebx,eax
  4027ad:	test   eax,eax
  4027af:	js     4027fd <rb_base64_encode@plt+0x17d>
  4027b1:	test   r12d,r12d
  4027b4:	je     4027c4 <rb_base64_encode@plt+0x144>
  4027b6:	test   r13d,r13d
  4027b9:	je     4027c4 <rb_base64_encode@plt+0x144>
  4027bb:	xor    esi,esi
  4027bd:	mov    edi,eax
  4027bf:	call   402360 <dup2@plt>
  4027c4:	cmp    r12d,0x1
  4027c8:	je     4027dc <rb_base64_encode@plt+0x15c>
  4027ca:	cmp    r13d,0x1
  4027ce:	je     4027dc <rb_base64_encode@plt+0x15c>
  4027d0:	mov    esi,0x1
  4027d5:	mov    edi,ebx
  4027d7:	call   402360 <dup2@plt>
  4027dc:	cmp    r12d,0x2
  4027e0:	je     4027f4 <rb_base64_encode@plt+0x174>
  4027e2:	cmp    r13d,0x2
  4027e6:	je     4027f4 <rb_base64_encode@plt+0x174>
  4027e8:	mov    esi,0x2
  4027ed:	mov    edi,ebx
  4027ef:	call   402360 <dup2@plt>
  4027f4:	cmp    ebx,0x2
  4027f7:	jg     4029d0 <rb_base64_encode@plt+0x350>
  4027fd:	lea    r14,[rsp+0x28]
  402802:	mov    rdi,r14
  402805:	mov    DWORD PTR [rsp+0xa8],0x0
  402810:	mov    QWORD PTR [rsp+0x20],0x1
  402819:	call   402620 <sigemptyset@plt>
  40281e:	mov    esi,0xd
  402823:	mov    rdi,r14
  402826:	call   402570 <sigaddset@plt>
  40282b:	mov    esi,0xe
  402830:	mov    rdi,r14
  402833:	call   402570 <sigaddset@plt>
  402838:	mov    esi,0x5
  40283d:	mov    rdi,r14
  402840:	call   402570 <sigaddset@plt>
  402845:	lea    rbx,[rsp+0x20]
  40284a:	mov    esi,0x1c
  40284f:	mov    rdi,r14
  402852:	call   402570 <sigaddset@plt>
  402857:	mov    rsi,rbx
  40285a:	xor    edx,edx
  40285c:	mov    edi,0x1c
  402861:	call   4024e0 <sigaction@plt>
  402866:	mov    rsi,rbx
  402869:	xor    edx,edx
  40286b:	mov    edi,0xd
  402870:	call   4024e0 <sigaction@plt>
  402875:	mov    rsi,rbx
  402878:	xor    edx,edx
  40287a:	mov    edi,0x5
  40287f:	call   4024e0 <sigaction@plt>
  402884:	mov    rsi,rbx
  402887:	lea    rax,[rip+0x252]        # 402ae0 <rb_base64_encode@plt+0x460>
  40288e:	xor    edx,edx
  402890:	mov    edi,0xe
  402895:	mov    QWORD PTR [rsp+0x20],rax
  40289a:	call   4024e0 <sigaction@plt>
  40289f:	push   rax
  4028a0:	xor    ecx,ecx
  4028a2:	xor    edx,edx
  4028a4:	push   0x1000
  4028a9:	mov    r9d,0x400
  4028af:	mov    r8d,ebp
  4028b2:	xor    esi,esi
  4028b4:	xor    edi,edi
  4028b6:	call   4025a0 <rb_lib_init@plt>
  4028bb:	mov    edi,0x1000
  4028c0:	call   402610 <rb_linebuf_init@plt>
  4028c5:	mov    edi,0x1000
  4028ca:	call   402440 <rb_init_rawbuffers@plt>
  4028cf:	mov    esi,0x60
  4028d4:	mov    edi,0x1
  4028d9:	call   4025e0 <calloc@plt>
  4028de:	pop    rdx
  4028df:	mov    rbx,rax
  4028e2:	pop    rcx
  4028e3:	test   rax,rax
  4028e6:	je     4029dc <rb_base64_encode@plt+0x35c>
  4028ec:	lea    rdx,[rip+0x37a4]        # 406097 <rb_base64_encode@plt+0x3a17>
  4028f3:	mov    esi,0x4
  4028f8:	mov    edi,r12d
  4028fb:	mov    QWORD PTR [rip+0x1147e],rax        # 413d80 <rb_base64_encode@plt+0x11700>
  402902:	call   4025c0 <rb_open@plt>
  402907:	mov    QWORD PTR [rbx+0x20],rax
  40290b:	lea    rdx,[rip+0x3799]        # 4060ab <rb_base64_encode@plt+0x3a2b>
  402912:	mov    esi,0x8
  402917:	mov    rbx,QWORD PTR [rip+0x11462]        # 413d80 <rb_base64_encode@plt+0x11700>
  40291e:	mov    edi,r13d
  402921:	call   4025c0 <rb_open@plt>
  402926:	mov    QWORD PTR [rbx+0x28],rax
  40292a:	mov    rax,QWORD PTR [rip+0x1144f]        # 413d80 <rb_base64_encode@plt+0x11700>
  402931:	mov    rdi,QWORD PTR [rax+0x20]
  402935:	call   402400 <rb_set_nb@plt>
  40293a:	mov    rax,QWORD PTR [rip+0x1143f]        # 413d80 <rb_base64_encode@plt+0x11700>
  402941:	mov    rdi,QWORD PTR [rax+0x28]
  402945:	call   402400 <rb_set_nb@plt>
  40294a:	mov    ecx,0xa
  40294f:	xor    edx,edx
  402951:	lea    rsi,[rip+0x198]        # 402af0 <rb_base64_encode@plt+0x470>
  402958:	lea    rdi,[rip+0x3756]        # 4060b5 <rb_base64_encode@plt+0x3a35>
  40295f:	call   402390 <rb_event_addish@plt>
  402964:	mov    rax,QWORD PTR [rip+0x11415]        # 413d80 <rb_base64_encode@plt+0x11700>
  40296b:	xor    esi,esi
  40296d:	mov    rdi,QWORD PTR [rax+0x28]
  402971:	call   402b70 <rb_base64_encode@plt+0x4f0>
  402976:	mov    rsi,QWORD PTR [rip+0x11403]        # 413d80 <rb_base64_encode@plt+0x11700>
  40297d:	mov    rdi,QWORD PTR [rsi+0x20]
  402981:	call   403e20 <rb_base64_encode@plt+0x17a0>
  402986:	xor    edi,edi
  402988:	call   402470 <rb_lib_loop@plt>
  40298d:	mov    rbx,QWORD PTR [rip+0x5664]        # 407ff8 <rb_base64_encode@plt+0x5978>
  402994:	mov    edx,0x34
  402999:	mov    rcx,QWORD PTR [rbx]
  40299c:	mov    esi,0x1
  4029a1:	lea    rdi,[rip+0x3888]        # 406230 <rb_base64_encode@plt+0x3bb0>
  4029a8:	call   402630 <fwrite@plt>
  4029ad:	mov    rcx,QWORD PTR [rbx]
  4029b0:	lea    rdi,[rip+0x38b1]        # 406268 <rb_base64_encode@plt+0x3be8>
  4029b7:	mov    edx,0x31
  4029bc:	mov    esi,0x1
  4029c1:	call   402630 <fwrite@plt>
  4029c6:	mov    edi,0x1
  4029cb:	call   4023e0 <exit@plt>
  4029d0:	mov    edi,ebx
  4029d2:	call   4023b0 <close@plt>
  4029d7:	jmp    4027fd <rb_base64_encode@plt+0x17d>
  4029dc:	call   402550 <rb_outofmemory@plt>
  4029e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	endbr64 
  4029f4:	xor    ebp,ebp
  4029f6:	mov    r9,rdx
  4029f9:	pop    rsi
  4029fa:	mov    rdx,rsp
  4029fd:	and    rsp,0xfffffffffffffff0
  402a01:	push   rax
  402a02:	push   rsp
  402a03:	mov    r8,0x405750
  402a0a:	mov    rcx,0x4056e0
  402a11:	mov    rdi,0x402690
  402a18:	call   QWORD PTR [rip+0x55d2]        # 407ff0 <rb_base64_encode@plt+0x5970>
  402a1e:	hlt    
  402a1f:	nop
  402a20:	endbr64 
  402a24:	ret    
  402a25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a2f:	nop
  402a30:	mov    eax,0x4081c0
  402a35:	cmp    rax,0x4081c0
  402a3b:	je     402a50 <rb_base64_encode@plt+0x3d0>
  402a3d:	mov    eax,0x0
  402a42:	test   rax,rax
  402a45:	je     402a50 <rb_base64_encode@plt+0x3d0>
  402a47:	mov    edi,0x4081c0
  402a4c:	jmp    rax
  402a4e:	xchg   ax,ax
  402a50:	ret    
  402a51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a5c:	nop    DWORD PTR [rax+0x0]
  402a60:	mov    esi,0x4081c0
  402a65:	sub    rsi,0x4081c0
  402a6c:	sar    rsi,0x3
  402a70:	mov    rax,rsi
  402a73:	shr    rax,0x3f
  402a77:	add    rsi,rax
  402a7a:	sar    rsi,1
  402a7d:	je     402a90 <rb_base64_encode@plt+0x410>
  402a7f:	mov    eax,0x0
  402a84:	test   rax,rax
  402a87:	je     402a90 <rb_base64_encode@plt+0x410>
  402a89:	mov    edi,0x4081c0
  402a8e:	jmp    rax
  402a90:	ret    
  402a91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a9c:	nop    DWORD PTR [rax+0x0]
  402aa0:	endbr64 
  402aa4:	cmp    BYTE PTR [rip+0x5715],0x0        # 4081c0 <rb_base64_encode@plt+0x5b40>
  402aab:	jne    402ac0 <rb_base64_encode@plt+0x440>
  402aad:	push   rbp
  402aae:	mov    rbp,rsp
  402ab1:	call   402a30 <rb_base64_encode@plt+0x3b0>
  402ab6:	mov    BYTE PTR [rip+0x5703],0x1        # 4081c0 <rb_base64_encode@plt+0x5b40>
  402abd:	pop    rbp
  402abe:	ret    
  402abf:	nop
  402ac0:	ret    
  402ac1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402acc:	nop    DWORD PTR [rax+0x0]
  402ad0:	endbr64 
  402ad4:	jmp    402a60 <rb_base64_encode@plt+0x3e0>
  402ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ae0:	endbr64 
  402ae4:	ret    
  402ae5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402af0:	endbr64 
  402af4:	push   rbp
  402af5:	push   rbx
  402af6:	sub    rsp,0x8
  402afa:	mov    rax,QWORD PTR [rip+0x56df]        # 4081e0 <rb_base64_encode@plt+0x5b60>
  402b01:	test   rax,rax
  402b04:	je     402b50 <rb_base64_encode@plt+0x4d0>
  402b06:	mov    rbp,QWORD PTR [rax+0x10]
  402b0a:	nop    WORD PTR [rax+rax*1+0x0]
  402b10:	mov    rbx,QWORD PTR [rax]
  402b13:	lea    rdi,[rbx+0x58]
  402b17:	call   4024c0 <rb_linebuf_donebuf@plt>
  402b1c:	lea    rdi,[rbx+0x30]
  402b20:	call   4024c0 <rb_linebuf_donebuf@plt>
  402b25:	mov    rdi,QWORD PTR [rbx+0x28]
  402b29:	call   402530 <rb_free_rawbuffer@plt>
  402b2e:	mov    rdi,QWORD PTR [rbx+0x20]
  402b32:	call   402530 <rb_free_rawbuffer@plt>
  402b37:	mov    rdi,rbx
  402b3a:	call   402450 <free@plt>
  402b3f:	test   rbp,rbp
  402b42:	je     402b50 <rb_base64_encode@plt+0x4d0>
  402b44:	mov    rax,rbp
  402b47:	mov    rbp,QWORD PTR [rbp+0x10]
  402b4b:	jmp    402b10 <rb_base64_encode@plt+0x490>
  402b4d:	nop    DWORD PTR [rax]
  402b50:	mov    QWORD PTR [rip+0x5685],0x0        # 4081e0 <rb_base64_encode@plt+0x5b60>
  402b5b:	mov    QWORD PTR [rip+0x5682],0x0        # 4081e8 <rb_base64_encode@plt+0x5b68>
  402b66:	add    rsp,0x8
  402b6a:	pop    rbx
  402b6b:	pop    rbp
  402b6c:	ret    
  402b6d:	nop    DWORD PTR [rax]
  402b70:	endbr64 
  402b74:	push   rbp
  402b75:	push   rbx
  402b76:	lea    r11,[rsp-0x4000]
  402b7e:	sub    rsp,0x1000
  402b85:	or     QWORD PTR [rsp],0x0
  402b8a:	cmp    rsp,r11
  402b8d:	jne    402b7e <rb_base64_encode@plt+0x4fe>
  402b8f:	sub    rsp,0x18
  402b93:	mov    rax,QWORD PTR fs:0x28
  402b9c:	mov    QWORD PTR [rsp+0x4008],rax
  402ba4:	xor    eax,eax
  402ba6:	mov    rbx,rdi
  402ba9:	mov    rbp,rsp
  402bac:	nop    DWORD PTR [rax+0x0]
  402bb0:	mov    edx,0x4000
  402bb5:	mov    rsi,rbp
  402bb8:	mov    rdi,rbx
  402bbb:	call   402480 <rb_read@plt>
  402bc0:	test   eax,eax
  402bc2:	jg     402bb0 <rb_base64_encode@plt+0x530>
  402bc4:	test   eax,eax
  402bc6:	je     402bd8 <rb_base64_encode@plt+0x558>
  402bc8:	call   402560 <__errno_location@plt>
  402bcd:	mov    edi,DWORD PTR [rax]
  402bcf:	call   4023a0 <rb_ignore_errno@plt>
  402bd4:	test   eax,eax
  402bd6:	jne    402be0 <rb_base64_encode@plt+0x560>
  402bd8:	xor    edi,edi
  402bda:	call   4023e0 <exit@plt>
  402bdf:	nop
  402be0:	xor    ecx,ecx
  402be2:	lea    rdx,[rip+0xffffffffffffff87]        # 402b70 <rb_base64_encode@plt+0x4f0>
  402be9:	mov    esi,0x1
  402bee:	mov    rdi,rbx
  402bf1:	call   4023c0 <rb_setselect@plt>
  402bf6:	mov    rax,QWORD PTR [rsp+0x4008]
  402bfe:	xor    rax,QWORD PTR fs:0x28
  402c07:	jne    402c13 <rb_base64_encode@plt+0x593>
  402c09:	add    rsp,0x4018
  402c10:	pop    rbx
  402c11:	pop    rbp
  402c12:	ret    
  402c13:	call   402580 <__stack_chk_fail@plt>
  402c18:	nop    DWORD PTR [rax+rax*1+0x0]
  402c20:	push   rax
  402c21:	pop    rax
  402c22:	lea    rcx,[rip+0x3687]        # 4062b0 <rb_base64_encode@plt+0x3c30>
  402c29:	mov    edx,0xd5
  402c2e:	lea    rsi,[rip+0x33cf]        # 406004 <rb_base64_encode@plt+0x3984>
  402c35:	lea    rdi,[rip+0x33e4]        # 406020 <rb_base64_encode@plt+0x39a0>
  402c3c:	sub    rsp,0x8
  402c40:	call   4023f0 <__assert_fail@plt>
  402c45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c50:	push   rax
  402c51:	pop    rax
  402c52:	lea    rcx,[rip+0x3647]        # 4062a0 <rb_base64_encode@plt+0x3c20>
  402c59:	mov    edx,0xec
  402c5e:	lea    rsi,[rip+0x339f]        # 406004 <rb_base64_encode@plt+0x3984>
  402c65:	lea    rdi,[rip+0x33c1]        # 40602d <rb_base64_encode@plt+0x39ad>
  402c6c:	sub    rsp,0x8
  402c70:	call   4023f0 <__assert_fail@plt>
  402c75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c80:	endbr64 
  402c84:	push   r13
  402c86:	mov    r13,rsi
  402c89:	push   r12
  402c8b:	push   rbp
  402c8c:	push   rbx
  402c8d:	sub    rsp,0x8
  402c91:	mov    rbp,QWORD PTR [rsi+0x48]
  402c95:	test   rbp,rbp
  402c98:	je     402cf0 <rb_base64_encode@plt+0x670>
  402c9a:	mov    r12,QWORD PTR [rbp+0x10]
  402c9e:	xchg   ax,ax
  402ca0:	mov    rbx,QWORD PTR [rbp+0x0]
  402ca4:	mov    rdi,QWORD PTR [r13+0x20]
  402ca8:	mov    rcx,QWORD PTR [rbx+0x18]
  402cac:	mov    edx,DWORD PTR [rbx+0x48]
  402caf:	mov    r9d,DWORD PTR [rip+0x110d2]        # 413d88 <rb_base64_encode@plt+0x11708>
  402cb6:	mov    r8,QWORD PTR [rbx+0x20]
  402cba:	lea    rsi,[rbx+0x28]
  402cbe:	call   4023d0 <rb_send_fd_buf@plt>
  402cc3:	test   eax,eax
  402cc5:	jg     402d10 <rb_base64_encode@plt+0x690>
  402cc7:	je     402da0 <rb_base64_encode@plt+0x720>
  402ccd:	call   402560 <__errno_location@plt>
  402cd2:	mov    edi,DWORD PTR [rax]
  402cd4:	call   4023a0 <rb_ignore_errno@plt>
  402cd9:	test   eax,eax
  402cdb:	je     402da0 <rb_base64_encode@plt+0x720>
  402ce1:	test   r12,r12
  402ce4:	je     402cf0 <rb_base64_encode@plt+0x670>
  402ce6:	mov    rbp,r12
  402ce9:	mov    r12,QWORD PTR [r12+0x10]
  402cee:	jmp    402ca0 <rb_base64_encode@plt+0x620>
  402cf0:	cmp    QWORD PTR [r13+0x58],0x0
  402cf5:	jne    402db0 <rb_base64_encode@plt+0x730>
  402cfb:	add    rsp,0x8
  402cff:	pop    rbx
  402d00:	pop    rbp
  402d01:	pop    r12
  402d03:	pop    r13
  402d05:	ret    
  402d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d10:	mov    rdx,QWORD PTR [rbp+0x10]
  402d14:	mov    rax,QWORD PTR [rbp+0x8]
  402d18:	test   rdx,rdx
  402d1b:	je     402d90 <rb_base64_encode@plt+0x710>
  402d1d:	mov    QWORD PTR [rdx+0x8],rax
  402d21:	mov    rax,QWORD PTR [rbp+0x8]
  402d25:	test   rax,rax
  402d28:	je     402d80 <rb_base64_encode@plt+0x700>
  402d2a:	mov    QWORD PTR [rax+0x10],rdx
  402d2e:	mov    eax,DWORD PTR [rbx+0x48]
  402d31:	mov    QWORD PTR [rbp+0x8],0x0
  402d39:	mov    QWORD PTR [rbp+0x10],0x0
  402d41:	dec    QWORD PTR [r13+0x58]
  402d45:	xor    ebp,ebp
  402d47:	test   eax,eax
  402d49:	jle    402d5d <rb_base64_encode@plt+0x6dd>
  402d4b:	mov    rdi,QWORD PTR [rbx+rbp*8+0x28]
  402d50:	inc    rbp
  402d53:	call   402500 <rb_close@plt>
  402d58:	cmp    DWORD PTR [rbx+0x48],ebp
  402d5b:	jg     402d4b <rb_base64_encode@plt+0x6cb>
  402d5d:	mov    rdi,QWORD PTR [rbx+0x18]
  402d61:	test   rdi,rdi
  402d64:	je     402d6b <rb_base64_encode@plt+0x6eb>
  402d66:	call   402450 <free@plt>
  402d6b:	mov    rdi,rbx
  402d6e:	call   402450 <free@plt>
  402d73:	jmp    402ce1 <rb_base64_encode@plt+0x661>
  402d78:	nop    DWORD PTR [rax+rax*1+0x0]
  402d80:	mov    QWORD PTR [r13+0x48],rdx
  402d84:	jmp    402d2e <rb_base64_encode@plt+0x6ae>
  402d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d90:	mov    QWORD PTR [r13+0x50],rax
  402d94:	jmp    402d25 <rb_base64_encode@plt+0x6a5>
  402d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402da0:	xor    edi,edi
  402da2:	call   4023e0 <exit@plt>
  402da7:	nop    WORD PTR [rax+rax*1+0x0]
  402db0:	mov    rdi,QWORD PTR [r13+0x20]
  402db4:	add    rsp,0x8
  402db8:	pop    rbx
  402db9:	pop    rbp
  402dba:	pop    r12
  402dbc:	mov    rcx,r13
  402dbf:	lea    rdx,[rip+0xfffffffffffffeba]        # 402c80 <rb_base64_encode@plt+0x600>
  402dc6:	mov    esi,0x2
  402dcb:	pop    r13
  402dcd:	jmp    4023c0 <rb_setselect@plt>
  402dd2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ddd:	nop    DWORD PTR [rax]
  402de0:	endbr64 
  402de4:	push   rbp
  402de5:	push   rbx
  402de6:	lea    r11,[rsp-0x4000]
  402dee:	sub    rsp,0x1000
  402df5:	or     QWORD PTR [rsp],0x0
  402dfa:	cmp    rsp,r11
  402dfd:	jne    402dee <rb_base64_encode@plt+0x76e>
  402dff:	sub    rsp,0x18
  402e03:	mov    rax,QWORD PTR fs:0x28
  402e0c:	mov    QWORD PTR [rsp+0x4008],rax
  402e14:	xor    eax,eax
  402e16:	test   rsi,rsi
  402e19:	je     402e6d <rb_base64_encode@plt+0x7ed>
  402e1b:	mov    rbx,rsi
  402e1e:	mov    rbp,rsp
  402e21:	nop    DWORD PTR [rax+0x0]
  402e28:	mov    rdi,QWORD PTR [rbx+0x90]
  402e2f:	mov    edx,0x4000
  402e34:	mov    rsi,rbp
  402e37:	call   402480 <rb_read@plt>
  402e3c:	test   eax,eax
  402e3e:	je     402e90 <rb_base64_encode@plt+0x810>
  402e40:	jns    402e28 <rb_base64_encode@plt+0x7a8>
  402e42:	call   402560 <__errno_location@plt>
  402e47:	mov    edi,DWORD PTR [rax]
  402e49:	call   4023a0 <rb_ignore_errno@plt>
  402e4e:	test   eax,eax
  402e50:	je     402e90 <rb_base64_encode@plt+0x810>
  402e52:	mov    rdi,QWORD PTR [rbx+0x90]
  402e59:	mov    rcx,rbx
  402e5c:	lea    rdx,[rip+0xffffffffffffff7d]        # 402de0 <rb_base64_encode@plt+0x760>
  402e63:	mov    esi,0x1
  402e68:	call   4023c0 <rb_setselect@plt>
  402e6d:	mov    rax,QWORD PTR [rsp+0x4008]
  402e75:	xor    rax,QWORD PTR fs:0x28
  402e7e:	jne    402ee3 <rb_base64_encode@plt+0x863>
  402e80:	add    rsp,0x4018
  402e87:	pop    rbx
  402e88:	pop    rbp
  402e89:	ret    
  402e8a:	nop    WORD PTR [rax+rax*1+0x0]
  402e90:	mov    rdi,QWORD PTR [rbx+0x90]
  402e97:	call   402500 <rb_close@plt>
  402e9c:	mov    rax,QWORD PTR [rip+0x533d]        # 4081e0 <rb_base64_encode@plt+0x5b60>
  402ea3:	mov    QWORD PTR [rbx],rbx
  402ea6:	mov    QWORD PTR [rbx+0x8],0x0
  402eae:	mov    QWORD PTR [rbx+0x10],rax
  402eb2:	test   rax,rax
  402eb5:	je     402ed0 <rb_base64_encode@plt+0x850>
  402eb7:	mov    QWORD PTR [rax+0x8],rbx
  402ebb:	mov    QWORD PTR [rip+0x531e],rbx        # 4081e0 <rb_base64_encode@plt+0x5b60>
  402ec2:	inc    QWORD PTR [rip+0x5327]        # 4081f0 <rb_base64_encode@plt+0x5b70>
  402ec9:	jmp    402e6d <rb_base64_encode@plt+0x7ed>
  402ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ed0:	cmp    QWORD PTR [rip+0x5310],0x0        # 4081e8 <rb_base64_encode@plt+0x5b68>
  402ed8:	jne    402ebb <rb_base64_encode@plt+0x83b>
  402eda:	mov    QWORD PTR [rip+0x5307],rbx        # 4081e8 <rb_base64_encode@plt+0x5b68>
  402ee1:	jmp    402ebb <rb_base64_encode@plt+0x83b>
  402ee3:	call   402580 <__stack_chk_fail@plt>
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	push   r15
  402ef2:	push   r14
  402ef4:	push   r13
  402ef6:	push   r12
  402ef8:	mov    r12d,esi
  402efb:	push   rbp
  402efc:	mov    rbp,rdx
  402eff:	push   rbx
  402f00:	mov    rbx,rdi
  402f03:	sub    rsp,0x268
  402f0a:	mov    QWORD PTR [rsp+0x1c8],rcx
  402f12:	mov    QWORD PTR [rsp+0x1d0],r8
  402f1a:	mov    QWORD PTR [rsp+0x1d8],r9
  402f22:	test   al,al
  402f24:	je     402f6e <rb_base64_encode@plt+0x8ee>
  402f26:	vmovaps XMMWORD PTR [rsp+0x1e0],xmm0
  402f2f:	vmovaps XMMWORD PTR [rsp+0x1f0],xmm1
  402f38:	vmovaps XMMWORD PTR [rsp+0x200],xmm2
  402f41:	vmovaps XMMWORD PTR [rsp+0x210],xmm3
  402f4a:	vmovaps XMMWORD PTR [rsp+0x220],xmm4
  402f53:	vmovaps XMMWORD PTR [rsp+0x230],xmm5
  402f5c:	vmovaps XMMWORD PTR [rsp+0x240],xmm6
  402f65:	vmovaps XMMWORD PTR [rsp+0x250],xmm7
  402f6e:	mov    rax,QWORD PTR fs:0x28
  402f77:	mov    QWORD PTR [rsp+0x1a8],rax
  402f7f:	xor    eax,eax
  402f81:	movzx  eax,BYTE PTR [rbx+0xb8]
  402f88:	test   al,0x2
  402f8a:	jne    4031dc <rb_base64_encode@plt+0xb5c>
  402f90:	test   al,0x8
  402f92:	jne    403208 <rb_base64_encode@plt+0xb88>
  402f98:	mov    rsi,QWORD PTR [rbx+0x88]
  402f9f:	mov    rdi,QWORD PTR [rbx+0x20]
  402fa3:	call   402650 <rb_rawbuf_flush@plt>
  402fa8:	mov    rdi,QWORD PTR [rbx+0x90]
  402faf:	lea    rsi,[rbx+0x30]
  402fb3:	call   4024b0 <rb_linebuf_flush@plt>
  402fb8:	mov    rdi,QWORD PTR [rbx+0x88]
  402fbf:	call   402500 <rb_close@plt>
  402fc4:	mov    ecx,DWORD PTR [rbx+0x80]
  402fca:	mov    edx,0x10624dd3
  402fcf:	mov    eax,ecx
  402fd1:	mul    edx
  402fd3:	mov    rax,QWORD PTR [rbx+0x10]
  402fd7:	or     BYTE PTR [rbx+0xb8],0x2
  402fde:	shr    edx,0x7
  402fe1:	imul   edx,edx,0x7d0
  402fe7:	sub    ecx,edx
  402fe9:	mov    edx,ecx
  402feb:	test   rax,rax
  402fee:	je     403250 <rb_base64_encode@plt+0xbd0>
  402ff4:	mov    rcx,QWORD PTR [rbx+0x8]
  402ff8:	mov    QWORD PTR [rax+0x8],rcx
  402ffc:	lea    rcx,[rip+0x51fd]        # 408200 <rb_base64_encode@plt+0x5b80>
  403003:	mov    rsi,QWORD PTR [rbx+0x8]
  403007:	test   rsi,rsi
  40300a:	je     40326d <rb_base64_encode@plt+0xbed>
  403010:	mov    QWORD PTR [rsi+0x10],rax
  403014:	lea    rax,[rdx+rdx*2]
  403018:	mov    QWORD PTR [rbx+0x8],0x0
  403020:	mov    QWORD PTR [rbx+0x10],0x0
  403028:	dec    QWORD PTR [rcx+rax*8+0x10]
  40302d:	and    r12d,0x1
  403031:	mov    rdi,QWORD PTR [rbx+0x90]
  403038:	je     403218 <rb_base64_encode@plt+0xb98>
  40303e:	test   rbp,rbp
  403041:	je     403218 <rb_base64_encode@plt+0xb98>
  403047:	mov    rcx,rbx
  40304a:	lea    rdx,[rip+0xfffffffffffffd8f]        # 402de0 <rb_base64_encode@plt+0x760>
  403051:	mov    esi,0x1
  403056:	call   4023c0 <rb_setselect@plt>
  40305b:	mov    rdi,QWORD PTR [rbx+0x90]
  403062:	xor    ecx,ecx
  403064:	xor    edx,edx
  403066:	mov    esi,0x2
  40306b:	call   4023c0 <rb_setselect@plt>
  403070:	lea    r13,[rsp+0x20]
  403075:	lea    rax,[rsp+0x2a0]
  40307d:	mov    r8,rbp
  403080:	mov    QWORD PTR [rsp+0x10],rax
  403085:	lea    r9,[rsp+0x8]
  40308a:	lea    rax,[rsp+0x1b0]
  403092:	mov    ecx,0x80
  403097:	mov    edx,0x1
  40309c:	mov    esi,0x80
  4030a1:	mov    rdi,r13
  4030a4:	mov    DWORD PTR [rsp+0x8],0x18
  4030ac:	mov    DWORD PTR [rsp+0xc],0x30
  4030b4:	mov    QWORD PTR [rsp+0x18],rax
  4030b9:	lea    r12,[rsp+0xa0]
  4030c1:	call   402420 <__vsnprintf_chk@plt>
  4030c6:	mov    eax,DWORD PTR [rbx+0x80]
  4030cc:	lea    rdi,[r12+0x5]
  4030d1:	mov    edx,0xfb
  4030d6:	mov    rsi,r13
  4030d9:	mov    BYTE PTR [rsp+0xa0],0x44
  4030e1:	mov    DWORD PTR [rsp+0xa1],eax
  4030e8:	mov    rbp,r13
  4030eb:	call   402430 <rb_strlcpy@plt>
  4030f0:	mov    edx,DWORD PTR [rbp+0x0]
  4030f3:	add    rbp,0x4
  4030f7:	lea    eax,[rdx-0x1010101]
  4030fd:	andn   eax,edx,eax
  403102:	and    eax,0x80808080
  403107:	je     4030f0 <rb_base64_encode@plt+0xa70>
  403109:	mov    edx,eax
  40310b:	shr    edx,0x10
  40310e:	test   eax,0x8080
  403113:	cmove  eax,edx
  403116:	lea    rdx,[rbp+0x2]
  40311a:	cmove  rbp,rdx
  40311e:	mov    ecx,eax
  403120:	add    cl,al
  403122:	sbb    rbp,0x3
  403126:	sub    rbp,r13
  403129:	mov    esi,0x50
  40312e:	mov    edi,0x1
  403133:	mov    r15,QWORD PTR [rbx+0x18]
  403137:	lea    r14d,[rbp+0x6]
  40313b:	call   4025e0 <calloc@plt>
  403140:	mov    r13,r14
  403143:	mov    rbx,rax
  403146:	test   rax,rax
  403149:	je     4032d0 <rb_base64_encode@plt+0xc50>
  40314f:	mov    rsi,r14
  403152:	mov    edi,0x1
  403157:	call   4025e0 <calloc@plt>
  40315c:	test   rax,rax
  40315f:	je     4032d0 <rb_base64_encode@plt+0xc50>
  403165:	mov    QWORD PTR [rbx+0x18],rax
  403169:	mov    QWORD PTR [rbx+0x20],r14
  40316d:	cmp    r14d,0x8
  403171:	jae    403280 <rb_base64_encode@plt+0xc00>
  403177:	test   r14b,0x4
  40317b:	jne    4032d8 <rb_base64_encode@plt+0xc58>
  403181:	test   r14d,r14d
  403184:	je     403197 <rb_base64_encode@plt+0xb17>
  403186:	movzx  edx,BYTE PTR [r12]
  40318b:	and    r13d,0x2
  40318f:	mov    BYTE PTR [rax],dl
  403191:	jne    4032ed <rb_base64_encode@plt+0xc6d>
  403197:	mov    DWORD PTR [rbx+0x48],0x0
  40319e:	cmp    r15,0xffffffffffffffb8
  4031a2:	je     403303 <rb_base64_encode@plt+0xc83>
  4031a8:	mov    rax,QWORD PTR [r15+0x50]
  4031ac:	mov    QWORD PTR [rbx],rbx
  4031af:	mov    QWORD PTR [rbx+0x10],0x0
  4031b7:	mov    QWORD PTR [rbx+0x8],rax
  4031bb:	test   rax,rax
  4031be:	je     4032b8 <rb_base64_encode@plt+0xc38>
  4031c4:	mov    QWORD PTR [rax+0x10],rbx
  4031c8:	inc    QWORD PTR [r15+0x58]
  4031cc:	mov    QWORD PTR [r15+0x50],rbx
  4031d0:	mov    rdi,QWORD PTR [r15+0x20]
  4031d4:	mov    rsi,r15
  4031d7:	call   402c80 <rb_base64_encode@plt+0x600>
  4031dc:	mov    rax,QWORD PTR [rsp+0x1a8]
  4031e4:	xor    rax,QWORD PTR fs:0x28
  4031ed:	jne    4032fe <rb_base64_encode@plt+0xc7e>
  4031f3:	add    rsp,0x268
  4031fa:	pop    rbx
  4031fb:	pop    rbp
  4031fc:	pop    r12
  4031fe:	pop    r13
  403200:	pop    r14
  403202:	pop    r15
  403204:	ret    
  403205:	nop    DWORD PTR [rax]
  403208:	mov    rdi,rbx
  40320b:	call   403450 <rb_base64_encode@plt+0xdd0>
  403210:	jmp    402f98 <rb_base64_encode@plt+0x918>
  403215:	nop    DWORD PTR [rax]
  403218:	call   402500 <rb_close@plt>
  40321d:	mov    rax,QWORD PTR [rip+0x4fbc]        # 4081e0 <rb_base64_encode@plt+0x5b60>
  403224:	mov    QWORD PTR [rbx],rbx
  403227:	mov    QWORD PTR [rbx+0x8],0x0
  40322f:	mov    QWORD PTR [rbx+0x10],rax
  403233:	test   rax,rax
  403236:	je     4032a0 <rb_base64_encode@plt+0xc20>
  403238:	mov    QWORD PTR [rax+0x8],rbx
  40323c:	mov    QWORD PTR [rip+0x4f9d],rbx        # 4081e0 <rb_base64_encode@plt+0x5b60>
  403243:	inc    QWORD PTR [rip+0x4fa6]        # 4081f0 <rb_base64_encode@plt+0x5b70>
  40324a:	jmp    4031dc <rb_base64_encode@plt+0xb5c>
  40324c:	nop    DWORD PTR [rax+0x0]
  403250:	mov    rsi,QWORD PTR [rbx+0x8]
  403254:	lea    rcx,[rip+0x4fa5]        # 408200 <rb_base64_encode@plt+0x5b80>
  40325b:	lea    rdi,[rdx+rdx*2]
  40325f:	mov    QWORD PTR [rcx+rdi*8+0x8],rsi
  403264:	test   rsi,rsi
  403267:	jne    403010 <rb_base64_encode@plt+0x990>
  40326d:	lea    rsi,[rdx+rdx*2]
  403271:	mov    QWORD PTR [rcx+rsi*8],rax
  403275:	jmp    403014 <rb_base64_encode@plt+0x994>
  40327a:	nop    WORD PTR [rax+rax*1+0x0]
  403280:	mov    rdx,QWORD PTR [r12+r14*1-0x8]
  403285:	lea    ecx,[rbp+0x5]
  403288:	mov    QWORD PTR [rax+r14*1-0x8],rdx
  40328d:	shr    ecx,0x3
  403290:	mov    rdi,rax
  403293:	mov    rsi,r12
  403296:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  403299:	jmp    403197 <rb_base64_encode@plt+0xb17>
  40329e:	xchg   ax,ax
  4032a0:	cmp    QWORD PTR [rip+0x4f40],0x0        # 4081e8 <rb_base64_encode@plt+0x5b68>
  4032a8:	jne    40323c <rb_base64_encode@plt+0xbbc>
  4032aa:	mov    QWORD PTR [rip+0x4f37],rbx        # 4081e8 <rb_base64_encode@plt+0x5b68>
  4032b1:	jmp    40323c <rb_base64_encode@plt+0xbbc>
  4032b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4032b8:	cmp    QWORD PTR [r15+0x48],0x0
  4032bd:	jne    4031c8 <rb_base64_encode@plt+0xb48>
  4032c3:	mov    QWORD PTR [r15+0x48],rbx
  4032c7:	jmp    4031c8 <rb_base64_encode@plt+0xb48>
  4032cc:	nop    DWORD PTR [rax+0x0]
  4032d0:	call   402550 <rb_outofmemory@plt>
  4032d5:	nop    DWORD PTR [rax]
  4032d8:	mov    edx,DWORD PTR [r12]
  4032dc:	mov    DWORD PTR [rax],edx
  4032de:	mov    edx,DWORD PTR [r12+r14*1-0x4]
  4032e3:	mov    DWORD PTR [rax+r14*1-0x4],edx
  4032e8:	jmp    403197 <rb_base64_encode@plt+0xb17>
  4032ed:	movzx  edx,WORD PTR [r12+r14*1-0x2]
  4032f3:	mov    WORD PTR [rax+r14*1-0x2],dx
  4032f9:	jmp    403197 <rb_base64_encode@plt+0xb17>
  4032fe:	call   402580 <__stack_chk_fail@plt>
  403303:	lea    rcx,[rip+0x2fa6]        # 4062b0 <rb_base64_encode@plt+0x3c30>
  40330a:	mov    edx,0xd4
  40330f:	lea    rsi,[rip+0x2cee]        # 406004 <rb_base64_encode@plt+0x3984>
  403316:	lea    rdi,[rip+0x2d10]        # 40602d <rb_base64_encode@plt+0x39ad>
  40331d:	call   4023f0 <__assert_fail@plt>
  403322:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40332d:	nop    DWORD PTR [rax]
  403330:	push   r12
  403332:	mov    r12,rdi
  403335:	push   rbp
  403336:	mov    rbp,rsi
  403339:	push   rbx
  40333a:	jmp    403347 <rb_base64_encode@plt+0xcc7>
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	add    QWORD PTR [rbp+0x98],rbx
  403347:	mov    rdi,QWORD PTR [rbp+0x20]
  40334b:	mov    rsi,r12
  40334e:	call   402650 <rb_rawbuf_flush@plt>
  403353:	movsxd rbx,eax
  403356:	test   ebx,ebx
  403358:	jg     403340 <rb_base64_encode@plt+0xcc0>
  40335a:	call   402560 <__errno_location@plt>
  40335f:	mov    r12,rax
  403362:	test   ebx,ebx
  403364:	jne    4033b0 <rb_base64_encode@plt+0xd30>
  403366:	lea    rcx,[rip+0x2d5b]        # 4060c8 <rb_base64_encode@plt+0x3a48>
  40336d:	lea    rdx,[rip+0x2cd3]        # 406047 <rb_base64_encode@plt+0x39c7>
  403374:	mov    esi,0x1
  403379:	mov    rdi,rbp
  40337c:	xor    eax,eax
  40337e:	call   402ef0 <rb_base64_encode@plt+0x870>
  403383:	mov    edi,DWORD PTR [r12]
  403387:	call   4024d0 <strerror@plt>
  40338c:	pop    rbx
  40338d:	mov    rdi,rbp
  403390:	pop    rbp
  403391:	mov    rcx,rax
  403394:	lea    rdx,[rip+0x2c9f]        # 40603a <rb_base64_encode@plt+0x39ba>
  40339b:	mov    esi,0x1
  4033a0:	xor    eax,eax
  4033a2:	pop    r12
  4033a4:	jmp    402ef0 <rb_base64_encode@plt+0x870>
  4033a9:	nop    DWORD PTR [rax+0x0]
  4033b0:	mov    edi,DWORD PTR [rax]
  4033b2:	call   4023a0 <rb_ignore_errno@plt>
  4033b7:	test   eax,eax
  4033b9:	je     403383 <rb_base64_encode@plt+0xd03>
  4033bb:	mov    rdi,QWORD PTR [rbp+0x20]
  4033bf:	call   402520 <rb_rawbuf_length@plt>
  4033c4:	mov    rdi,QWORD PTR [rbp+0x88]
  4033cb:	test   eax,eax
  4033cd:	jle    4033f8 <rb_base64_encode@plt+0xd78>
  4033cf:	mov    rcx,rbp
  4033d2:	lea    rdx,[rip+0x57]        # 403430 <rb_base64_encode@plt+0xdb0>
  4033d9:	mov    esi,0x2
  4033de:	call   4023c0 <rb_setselect@plt>
  4033e3:	test   BYTE PTR [rbp+0xb8],0x1
  4033ea:	jne    403408 <rb_base64_encode@plt+0xd88>
  4033ec:	pop    rbx
  4033ed:	pop    rbp
  4033ee:	pop    r12
  4033f0:	ret    
  4033f1:	nop    DWORD PTR [rax+0x0]
  4033f8:	xor    ecx,ecx
  4033fa:	xor    edx,edx
  4033fc:	mov    esi,0x2
  403401:	call   4023c0 <rb_setselect@plt>
  403406:	jmp    4033e3 <rb_base64_encode@plt+0xd63>
  403408:	mov    rdi,QWORD PTR [rbp+0x20]
  40340c:	call   402520 <rb_rawbuf_length@plt>
  403411:	test   eax,eax
  403413:	jne    4033ec <rb_base64_encode@plt+0xd6c>
  403415:	and    BYTE PTR [rbp+0xb8],0xfe
  40341c:	pop    rbx
  40341d:	mov    rdi,QWORD PTR [rbp+0x90]
  403424:	mov    rsi,rbp
  403427:	pop    rbp
  403428:	pop    r12
  40342a:	jmp    403610 <rb_base64_encode@plt+0xf90>
  40342f:	nop
  403430:	endbr64 
  403434:	test   BYTE PTR [rsi+0xb8],0x2
  40343b:	jne    403448 <rb_base64_encode@plt+0xdc8>
  40343d:	jmp    403330 <rb_base64_encode@plt+0xcb0>
  403442:	nop    WORD PTR [rax+rax*1+0x0]
  403448:	ret    
  403449:	nop    DWORD PTR [rax+0x0]
  403450:	push   r14
  403452:	push   r13
  403454:	push   r12
  403456:	push   rbp
  403457:	push   rbx
  403458:	lea    r11,[rsp-0x4000]
  403460:	sub    rsp,0x1000
  403467:	or     QWORD PTR [rsp],0x0
  40346c:	cmp    rsp,r11
  40346f:	jne    403460 <rb_base64_encode@plt+0xde0>
  403471:	sub    rsp,0x20
  403475:	mov    edx,0x4000
  40347a:	xor    esi,esi
  40347c:	lea    r12,[rsp+0x10]
  403481:	mov    rbp,rdi
  403484:	mov    rdi,r12
  403487:	mov    rax,QWORD PTR fs:0x28
  403490:	mov    QWORD PTR [rsp+0x4018],rax
  403498:	xor    eax,eax
  40349a:	lea    r13,[rbp+0x58]
  40349e:	call   402380 <memset@plt>
  4034a3:	lea    r14,[rsp+0xc]
  4034a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	xor    r8d,r8d
  4034b3:	xor    ecx,ecx
  4034b5:	mov    edx,0x4000
  4034ba:	mov    rsi,r12
  4034bd:	mov    rdi,r13
  4034c0:	call   4024a0 <rb_linebuf_get@plt>
  4034c5:	mov    ebx,eax
  4034c7:	test   eax,eax
  4034c9:	je     403570 <rb_base64_encode@plt+0xef0>
  4034cf:	test   BYTE PTR [rbp+0xb8],0x2
  4034d6:	jne    4034b0 <rb_base64_encode@plt+0xe30>
  4034d8:	mov    rdi,QWORD PTR [rbp+0x20]
  4034dc:	cmp    eax,0x7a
  4034df:	jle    403540 <rb_base64_encode@plt+0xec0>
  4034e1:	mov    eax,0x7e81
  4034e6:	mov    WORD PTR [rsp+0xc],ax
  4034eb:	mov    edx,0x4
  4034f0:	lea    eax,[rbx+0x2]
  4034f3:	mov    rsi,r14
  4034f6:	movbe  WORD PTR [rsp+0xe],ax
  4034fd:	call   402640 <rb_rawbuf_append@plt>
  403502:	test   BYTE PTR [rbp+0xb8],0x2
  403509:	jne    4034b0 <rb_base64_encode@plt+0xe30>
  40350b:	mov    rdi,QWORD PTR [rbp+0x20]
  40350f:	mov    edx,ebx
  403511:	mov    rsi,r12
  403514:	call   402640 <rb_rawbuf_append@plt>
  403519:	mov    rdi,QWORD PTR [rbp+0x20]
  40351d:	test   BYTE PTR [rbp+0xb8],0x2
  403524:	jne    4034b0 <rb_base64_encode@plt+0xe30>
  403526:	mov    edx,0x2
  40352b:	lea    rsi,[rip+0x2b3f]        # 406071 <rb_base64_encode@plt+0x39f1>
  403532:	call   402640 <rb_rawbuf_append@plt>
  403537:	jmp    4034b0 <rb_base64_encode@plt+0xe30>
  40353c:	nop    DWORD PTR [rax+0x0]
  403540:	lea    eax,[rax+0x2]
  403543:	and    eax,0x7f
  403546:	mov    edx,0x2
  40354b:	mov    rsi,r14
  40354e:	mov    BYTE PTR [rsp+0xc],0x81
  403553:	mov    BYTE PTR [rsp+0xd],al
  403557:	call   402640 <rb_rawbuf_append@plt>
  40355c:	test   BYTE PTR [rbp+0xb8],0x2
  403563:	jne    4034b0 <rb_base64_encode@plt+0xe30>
  403569:	jmp    40350b <rb_base64_encode@plt+0xe8b>
  40356b:	nop    DWORD PTR [rax+rax*1+0x0]
  403570:	movzx  eax,BYTE PTR [rbp+0xb8]
  403577:	test   al,0x8
  403579:	je     40358e <rb_base64_encode@plt+0xf0e>
  40357b:	test   al,0x2
  40357d:	jne    40358e <rb_base64_encode@plt+0xf0e>
  40357f:	mov    rdi,QWORD PTR [rbp+0x88]
  403586:	mov    rsi,rbp
  403589:	call   403330 <rb_base64_encode@plt+0xcb0>
  40358e:	mov    rax,QWORD PTR [rsp+0x4018]
  403596:	xor    rax,QWORD PTR fs:0x28
  40359f:	jne    4035b1 <rb_base64_encode@plt+0xf31>
  4035a1:	add    rsp,0x4020
  4035a8:	pop    rbx
  4035a9:	pop    rbp
  4035aa:	pop    r12
  4035ac:	pop    r13
  4035ae:	pop    r14
  4035b0:	ret    
  4035b1:	call   402580 <__stack_chk_fail@plt>
  4035b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035c0:	push   rbx
  4035c1:	mov    rbx,rdi
  4035c4:	xor    ecx,ecx
  4035c6:	or     BYTE PTR [rdi+0xb8],0x1
  4035cd:	mov    rdi,QWORD PTR [rdi+0x90]
  4035d4:	xor    edx,edx
  4035d6:	mov    esi,0x1
  4035db:	call   4023c0 <rb_setselect@plt>
  4035e0:	movzx  eax,BYTE PTR [rbx+0xb8]
  4035e7:	test   al,0x8
  4035e9:	je     4035fe <rb_base64_encode@plt+0xf7e>
  4035eb:	test   al,0x2
  4035ed:	jne    4035fe <rb_base64_encode@plt+0xf7e>
  4035ef:	mov    rdi,QWORD PTR [rbx+0x88]
  4035f6:	mov    rsi,rbx
  4035f9:	call   403330 <rb_base64_encode@plt+0xcb0>
  4035fe:	mov    eax,0x1
  403603:	pop    rbx
  403604:	ret    
  403605:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403610:	endbr64 
  403614:	push   r12
  403616:	push   rbp
  403617:	push   rbx
  403618:	lea    r11,[rsp-0x4000]
  403620:	sub    rsp,0x1000
  403627:	or     QWORD PTR [rsp],0x0
  40362c:	cmp    rsp,r11
  40362f:	jne    403620 <rb_base64_encode@plt+0xfa0>
  403631:	sub    rsp,0x10
  403635:	mov    edx,0x4000
  40363a:	mov    rbp,rsp
  40363d:	mov    rbx,rsi
  403640:	mov    rdi,rbp
  403643:	xor    esi,esi
  403645:	mov    rax,QWORD PTR fs:0x28
  40364e:	mov    QWORD PTR [rsp+0x4008],rax
  403656:	xor    eax,eax
  403658:	call   402380 <memset@plt>
  40365d:	test   rbx,rbx
  403660:	je     40366b <rb_base64_encode@plt+0xfeb>
  403662:	test   BYTE PTR [rbx+0xb8],0x2
  403669:	je     403690 <rb_base64_encode@plt+0x1010>
  40366b:	mov    rax,QWORD PTR [rsp+0x4008]
  403673:	xor    rax,QWORD PTR fs:0x28
  40367c:	jne    403793 <rb_base64_encode@plt+0x1113>
  403682:	add    rsp,0x4010
  403689:	pop    rbx
  40368a:	pop    rbp
  40368b:	pop    r12
  40368d:	ret    
  40368e:	xchg   ax,ax
  403690:	mov    rdi,QWORD PTR [rbx+0x20]
  403694:	call   402520 <rb_rawbuf_length@plt>
  403699:	cmp    eax,0xfff
  40369e:	jg     403768 <rb_base64_encode@plt+0x10e8>
  4036a4:	lea    r12,[rbx+0x58]
  4036a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036b0:	test   BYTE PTR [rbx+0xb8],0x2
  4036b7:	jne    40366b <rb_base64_encode@plt+0xfeb>
  4036b9:	mov    rdi,QWORD PTR [rbx+0x90]
  4036c0:	mov    edx,0x4000
  4036c5:	mov    rsi,rbp
  4036c8:	call   402480 <rb_read@plt>
  4036cd:	test   eax,eax
  4036cf:	je     403780 <rb_base64_encode@plt+0x1100>
  4036d5:	js     403720 <rb_base64_encode@plt+0x10a0>
  4036d7:	movsxd rdx,eax
  4036da:	add    QWORD PTR [rbx+0xa8],rdx
  4036e1:	xor    ecx,ecx
  4036e3:	mov    edx,eax
  4036e5:	mov    rsi,rbp
  4036e8:	mov    rdi,r12
  4036eb:	call   402410 <rb_linebuf_parse@plt>
  4036f0:	test   BYTE PTR [rbx+0xb8],0x2
  4036f7:	jne    40366b <rb_base64_encode@plt+0xfeb>
  4036fd:	mov    rdi,QWORD PTR [rbx+0x20]
  403701:	call   402520 <rb_rawbuf_length@plt>
  403706:	cmp    eax,0xfff
  40370b:	jle    4036b0 <rb_base64_encode@plt+0x1030>
  40370d:	mov    rdi,rbx
  403710:	call   4035c0 <rb_base64_encode@plt+0xf40>
  403715:	test   al,al
  403717:	je     4036b0 <rb_base64_encode@plt+0x1030>
  403719:	jmp    40366b <rb_base64_encode@plt+0xfeb>
  40371e:	xchg   ax,ax
  403720:	call   402560 <__errno_location@plt>
  403725:	mov    edi,DWORD PTR [rax]
  403727:	call   4023a0 <rb_ignore_errno@plt>
  40372c:	test   eax,eax
  40372e:	je     403780 <rb_base64_encode@plt+0x1100>
  403730:	mov    rdi,QWORD PTR [rbx+0x90]
  403737:	mov    rcx,rbx
  40373a:	lea    rdx,[rip+0xfffffffffffffecf]        # 403610 <rb_base64_encode@plt+0xf90>
  403741:	mov    esi,0x1
  403746:	call   4023c0 <rb_setselect@plt>
  40374b:	test   BYTE PTR [rbx+0xb8],0x8
  403752:	je     40366b <rb_base64_encode@plt+0xfeb>
  403758:	mov    rdi,rbx
  40375b:	call   403450 <rb_base64_encode@plt+0xdd0>
  403760:	jmp    40366b <rb_base64_encode@plt+0xfeb>
  403765:	nop    DWORD PTR [rax]
  403768:	mov    rdi,rbx
  40376b:	call   4035c0 <rb_base64_encode@plt+0xf40>
  403770:	test   al,al
  403772:	jne    40366b <rb_base64_encode@plt+0xfeb>
  403778:	jmp    4036a4 <rb_base64_encode@plt+0x1024>
  40377d:	nop    DWORD PTR [rax]
  403780:	xor    edx,edx
  403782:	xor    esi,esi
  403784:	mov    rdi,rbx
  403787:	xor    eax,eax
  403789:	call   402ef0 <rb_base64_encode@plt+0x870>
  40378e:	jmp    40366b <rb_base64_encode@plt+0xfeb>
  403793:	call   402580 <__stack_chk_fail@plt>
  403798:	nop    DWORD PTR [rax+rax*1+0x0]
  4037a0:	endbr64 
  4037a4:	test   BYTE PTR [rsi+0xb8],0x2
  4037ab:	jne    403828 <rb_base64_encode@plt+0x11a8>
  4037ad:	push   r12
  4037af:	lea    r12,[rsi+0x30]
  4037b3:	push   rbp
  4037b4:	mov    rbp,rdi
  4037b7:	push   rbx
  4037b8:	mov    rbx,rsi
  4037bb:	jmp    4037c9 <rb_base64_encode@plt+0x1149>
  4037bd:	nop    DWORD PTR [rax]
  4037c0:	cdqe   
  4037c2:	add    QWORD PTR [rbx+0xb0],rax
  4037c9:	mov    rsi,r12
  4037cc:	mov    rdi,rbp
  4037cf:	call   4024b0 <rb_linebuf_flush@plt>
  4037d4:	test   eax,eax
  4037d6:	jg     4037c0 <rb_base64_encode@plt+0x1140>
  4037d8:	je     403810 <rb_base64_encode@plt+0x1190>
  4037da:	call   402560 <__errno_location@plt>
  4037df:	mov    edi,DWORD PTR [rax]
  4037e1:	call   4023a0 <rb_ignore_errno@plt>
  4037e6:	test   eax,eax
  4037e8:	je     403810 <rb_base64_encode@plt+0x1190>
  4037ea:	mov    eax,DWORD PTR [rbx+0x4c]
  4037ed:	mov    rdi,QWORD PTR [rbx+0x90]
  4037f4:	test   eax,eax
  4037f6:	jle    403830 <rb_base64_encode@plt+0x11b0>
  4037f8:	mov    rcx,rbx
  4037fb:	pop    rbx
  4037fc:	pop    rbp
  4037fd:	lea    rdx,[rip+0xffffffffffffff9c]        # 4037a0 <rb_base64_encode@plt+0x1120>
  403804:	mov    esi,0x2
  403809:	pop    r12
  40380b:	jmp    4023c0 <rb_setselect@plt>
  403810:	mov    rdi,rbx
  403813:	pop    rbx
  403814:	pop    rbp
  403815:	xor    edx,edx
  403817:	xor    esi,esi
  403819:	xor    eax,eax
  40381b:	pop    r12
  40381d:	jmp    402ef0 <rb_base64_encode@plt+0x870>
  403822:	nop    WORD PTR [rax+rax*1+0x0]
  403828:	ret    
  403829:	nop    DWORD PTR [rax+0x0]
  403830:	pop    rbx
  403831:	pop    rbp
  403832:	xor    ecx,ecx
  403834:	xor    edx,edx
  403836:	mov    esi,0x2
  40383b:	pop    r12
  40383d:	jmp    4023c0 <rb_setselect@plt>
  403842:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40384d:	nop    DWORD PTR [rax]
  403850:	endbr64 
  403854:	push   r15
  403856:	push   r14
  403858:	push   r13
  40385a:	push   r12
  40385c:	push   rbp
  40385d:	push   rbx
  40385e:	lea    r11,[rsp-0x8000]
  403866:	sub    rsp,0x1000
  40386d:	or     QWORD PTR [rsp],0x0
  403872:	cmp    rsp,r11
  403875:	jne    403866 <rb_base64_encode@plt+0x11e6>
  403877:	sub    rsp,0xd8
  40387e:	mov    edx,0x4000
  403883:	mov    QWORD PTR [rsp+0x20],rdi
  403888:	mov    rbx,rsi
  40388b:	xor    esi,esi
  40388d:	mov    rax,QWORD PTR fs:0x28
  403896:	mov    QWORD PTR [rsp+0x80c8],rax
  40389e:	xor    eax,eax
  4038a0:	lea    rax,[rsp+0xc0]
  4038a8:	mov    rdi,rax
  4038ab:	mov    QWORD PTR [rsp+0x8],rax
  4038b0:	call   402380 <memset@plt>
  4038b5:	test   rbx,rbx
  4038b8:	je     403bb0 <rb_base64_encode@plt+0x1530>
  4038be:	test   BYTE PTR [rbx+0xb8],0x2
  4038c5:	jne    403bb0 <rb_base64_encode@plt+0x1530>
  4038cb:	lea    rax,[rsp+0x40]
  4038d0:	mov    QWORD PTR [rsp+0x28],rax
  4038d5:	lea    r15,[rsp+0x40c0]
  4038dd:	lea    r14,[r15+0x4000]
  4038e4:	nop    DWORD PTR [rax+0x0]
  4038e8:	mov    rsi,QWORD PTR [rsp+0x8]
  4038ed:	mov    rdi,QWORD PTR [rsp+0x20]
  4038f2:	mov    edx,0x4000
  4038f7:	call   402480 <rb_read@plt>
  4038fc:	mov    rbp,rax
  4038ff:	test   eax,eax
  403901:	js     403dd0 <rb_base64_encode@plt+0x1750>
  403907:	je     403db0 <rb_base64_encode@plt+0x1730>
  40390d:	mov    rdi,QWORD PTR [rbx+0x28]
  403911:	mov    rsi,QWORD PTR [rsp+0x8]
  403916:	mov    edx,eax
  403918:	call   402640 <rb_rawbuf_append@plt>
  40391d:	test   BYTE PTR [rbx+0xb8],0x8
  403924:	je     403b30 <rb_base64_encode@plt+0x14b0>
  40392a:	lea    rax,[rsp+0x3e]
  40392f:	mov    QWORD PTR [rsp+0x10],rax
  403934:	lea    rax,[rsp+0x3c]
  403939:	mov    QWORD PTR [rsp+0x18],rax
  40393e:	lea    rax,[rsp+0xa0]
  403946:	mov    QWORD PTR [rsp],rax
  40394a:	lea    r13,[rbx+0x30]
  40394e:	xchg   ax,ax
  403950:	mov    rdi,QWORD PTR [rbx+0x28]
  403954:	mov    rsi,QWORD PTR [rsp+0x10]
  403959:	mov    edx,0x2
  40395e:	call   402590 <rb_rawbuf_get@plt>
  403963:	cmp    eax,0x2
  403966:	jne    403be0 <rb_base64_encode@plt+0x1560>
  40396c:	movzx  edx,BYTE PTR [rsp+0x3f]
  403971:	mov    r12d,edx
  403974:	and    edx,0x7f
  403977:	shr    r12b,0x7
  40397b:	mov    BYTE PTR [rsp+0x3f],dl
  40397f:	cmp    dl,0x7e
  403982:	je     403a30 <rb_base64_encode@plt+0x13b0>
  403988:	cmp    dl,0x7f
  40398b:	je     403950 <rb_base64_encode@plt+0x12d0>
  40398d:	mov    rdi,QWORD PTR [rbx+0x28]
  403991:	cmp    r12b,0x1
  403995:	jne    403a00 <rb_base64_encode@plt+0x1380>
  403997:	mov    rsi,QWORD PTR [rsp]
  40399b:	mov    edx,0x4
  4039a0:	call   402590 <rb_rawbuf_get@plt>
  4039a5:	test   eax,eax
  4039a7:	je     403b10 <rb_base64_encode@plt+0x1490>
  4039ad:	movzx  edx,BYTE PTR [rsp+0x3f]
  4039b2:	mov    rdi,QWORD PTR [rbx+0x28]
  4039b6:	mov    rsi,r15
  4039b9:	call   402590 <rb_rawbuf_get@plt>
  4039be:	test   eax,eax
  4039c0:	je     403a0f <rb_base64_encode@plt+0x138f>
  4039c2:	mov    rcx,r15
  4039c5:	mov    edx,0x0
  4039ca:	jle    4039e9 <rb_base64_encode@plt+0x1369>
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	mov    esi,edx
  4039d2:	and    esi,0x3
  4039d5:	movzx  esi,BYTE PTR [rsp+rsi*1+0xa0]
  4039dd:	inc    edx
  4039df:	xor    BYTE PTR [rcx],sil
  4039e2:	inc    rcx
  4039e5:	cmp    edx,eax
  4039e7:	jne    4039d0 <rb_base64_encode@plt+0x1350>
  4039e9:	mov    ecx,0x1
  4039ee:	mov    edx,eax
  4039f0:	mov    rsi,r15
  4039f3:	mov    rdi,r13
  4039f6:	call   402410 <rb_linebuf_parse@plt>
  4039fb:	jmp    403950 <rb_base64_encode@plt+0x12d0>
  403a00:	movzx  edx,dl
  403a03:	mov    rsi,r15
  403a06:	call   402590 <rb_rawbuf_get@plt>
  403a0b:	test   eax,eax
  403a0d:	jne    4039e9 <rb_base64_encode@plt+0x1369>
  403a0f:	lea    rdx,[rip+0x27ea]        # 406200 <rb_base64_encode@plt+0x3b80>
  403a16:	mov    esi,0x1
  403a1b:	mov    rdi,rbx
  403a1e:	xor    eax,eax
  403a20:	call   402ef0 <rb_base64_encode@plt+0x870>
  403a25:	jmp    403950 <rb_base64_encode@plt+0x12d0>
  403a2a:	nop    WORD PTR [rax+rax*1+0x0]
  403a30:	xor    esi,esi
  403a32:	mov    edx,0x4000
  403a37:	mov    rdi,r15
  403a3a:	call   402380 <memset@plt>
  403a3f:	mov    rdi,QWORD PTR [rbx+0x28]
  403a43:	mov    rsi,QWORD PTR [rsp+0x18]
  403a48:	mov    edx,0x2
  403a4d:	call   402590 <rb_rawbuf_get@plt>
  403a52:	test   eax,eax
  403a54:	je     403af0 <rb_base64_encode@plt+0x1470>
  403a5a:	movbe  dx,WORD PTR [rsp+0x3c]
  403a61:	mov    rdi,QWORD PTR [rbx+0x28]
  403a65:	mov    WORD PTR [rsp+0x3c],dx
  403a6a:	cmp    r12b,0x1
  403a6e:	jne    403ad0 <rb_base64_encode@plt+0x1450>
  403a70:	mov    rsi,QWORD PTR [rsp]
  403a74:	mov    edx,0x4
  403a79:	call   402590 <rb_rawbuf_get@plt>
  403a7e:	test   eax,eax
  403a80:	je     403b10 <rb_base64_encode@plt+0x1490>
  403a86:	movzx  edx,WORD PTR [rsp+0x3c]
  403a8b:	mov    rdi,QWORD PTR [rbx+0x28]
  403a8f:	mov    rsi,r15
  403a92:	call   402590 <rb_rawbuf_get@plt>
  403a97:	test   eax,eax
  403a99:	je     403a0f <rb_base64_encode@plt+0x138f>
  403a9f:	mov    rcx,r15
  403aa2:	mov    edx,0x0
  403aa7:	jle    4039e9 <rb_base64_encode@plt+0x1369>
  403aad:	nop    DWORD PTR [rax]
  403ab0:	mov    esi,edx
  403ab2:	and    esi,0x3
  403ab5:	movzx  esi,BYTE PTR [rsp+rsi*1+0xa0]
  403abd:	inc    edx
  403abf:	xor    BYTE PTR [rcx],sil
  403ac2:	inc    rcx
  403ac5:	cmp    edx,eax
  403ac7:	jne    403ab0 <rb_base64_encode@plt+0x1430>
  403ac9:	jmp    4039e9 <rb_base64_encode@plt+0x1369>
  403ace:	xchg   ax,ax
  403ad0:	movzx  edx,dx
  403ad3:	mov    rsi,r15
  403ad6:	call   402590 <rb_rawbuf_get@plt>
  403adb:	test   eax,eax
  403add:	jne    4039e9 <rb_base64_encode@plt+0x1369>
  403ae3:	jmp    403a0f <rb_base64_encode@plt+0x138f>
  403ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  403af0:	lea    rdx,[rip+0x26a9]        # 4061a0 <rb_base64_encode@plt+0x3b20>
  403af7:	mov    esi,0x1
  403afc:	mov    rdi,rbx
  403aff:	call   402ef0 <rb_base64_encode@plt+0x870>
  403b04:	jmp    403950 <rb_base64_encode@plt+0x12d0>
  403b09:	nop    DWORD PTR [rax+0x0]
  403b10:	lea    rdx,[rip+0x26b9]        # 4061d0 <rb_base64_encode@plt+0x3b50>
  403b17:	mov    esi,0x1
  403b1c:	mov    rdi,rbx
  403b1f:	call   402ef0 <rb_base64_encode@plt+0x870>
  403b24:	jmp    403950 <rb_base64_encode@plt+0x12d0>
  403b29:	nop    DWORD PTR [rax+0x0]
  403b30:	mov    edx,0x4000
  403b35:	xor    esi,esi
  403b37:	mov    rdi,r15
  403b3a:	call   402380 <memset@plt>
  403b3f:	jmp    403b60 <rb_base64_encode@plt+0x14e0>
  403b41:	nop    DWORD PTR [rax+0x0]
  403b48:	lea    rsi,[rip+0x250d]        # 40605c <rb_base64_encode@plt+0x39dc>
  403b4f:	mov    rdi,r15
  403b52:	call   4024f0 <rb_strcasestr@plt>
  403b57:	test   rax,rax
  403b5a:	jne    403c18 <rb_base64_encode@plt+0x1598>
  403b60:	mov    rdi,QWORD PTR [rbx+0x28]
  403b64:	mov    edx,0x4000
  403b69:	mov    rsi,r15
  403b6c:	call   402590 <rb_rawbuf_get@plt>
  403b71:	test   eax,eax
  403b73:	jne    403b48 <rb_base64_encode@plt+0x14c8>
  403b75:	movzx  eax,BYTE PTR [rbx+0xb8]
  403b7c:	test   al,0x8
  403b7e:	jne    403cb0 <rb_base64_encode@plt+0x1630>
  403b84:	test   al,0x2
  403b86:	jne    403b97 <rb_base64_encode@plt+0x1517>
  403b88:	mov    rdi,QWORD PTR [rbx+0x88]
  403b8f:	mov    rsi,rbx
  403b92:	call   403330 <rb_base64_encode@plt+0xcb0>
  403b97:	cmp    ebp,0x3fff
  403b9d:	jbe    403bf7 <rb_base64_encode@plt+0x1577>
  403b9f:	test   BYTE PTR [rbx+0xb8],0x2
  403ba6:	je     4038e8 <rb_base64_encode@plt+0x1268>
  403bac:	nop    DWORD PTR [rax+0x0]
  403bb0:	mov    rax,QWORD PTR [rsp+0x80c8]
  403bb8:	xor    rax,QWORD PTR fs:0x28
  403bc1:	jne    403e0d <rb_base64_encode@plt+0x178d>
  403bc7:	add    rsp,0x80d8
  403bce:	pop    rbx
  403bcf:	pop    rbp
  403bd0:	pop    r12
  403bd2:	pop    r13
  403bd4:	pop    r14
  403bd6:	pop    r15
  403bd8:	ret    
  403bd9:	nop    DWORD PTR [rax+0x0]
  403be0:	mov    rdi,QWORD PTR [rbx+0x90]
  403be7:	mov    rsi,rbx
  403bea:	call   4037a0 <rb_base64_encode@plt+0x1120>
  403bef:	cmp    ebp,0x3fff
  403bf5:	ja     403b9f <rb_base64_encode@plt+0x151f>
  403bf7:	mov    rdi,QWORD PTR [rsp+0x20]
  403bfc:	mov    rcx,rbx
  403bff:	lea    rdx,[rip+0xfffffffffffffc4a]        # 403850 <rb_base64_encode@plt+0x11d0>
  403c06:	mov    esi,0x1
  403c0b:	call   4023c0 <rb_setselect@plt>
  403c10:	jmp    403bb0 <rb_base64_encode@plt+0x1530>
  403c12:	nop    WORD PTR [rax+rax*1+0x0]
  403c18:	lea    rsi,[rax+0x12]
  403c1c:	cmp    rsi,r14
  403c1f:	jae    403c90 <rb_base64_encode@plt+0x1610>
  403c21:	movzx  eax,BYTE PTR [rax+0x12]
  403c25:	test   al,al
  403c27:	je     403c90 <rb_base64_encode@plt+0x1610>
  403c29:	cmp    al,0x9
  403c2b:	je     403c38 <rb_base64_encode@plt+0x15b8>
  403c2d:	cmp    al,0x20
  403c2f:	jne    403c4f <rb_base64_encode@plt+0x15cf>
  403c31:	nop    DWORD PTR [rax+0x0]
  403c38:	inc    rsi
  403c3b:	cmp    rsi,r14
  403c3e:	je     403c90 <rb_base64_encode@plt+0x1610>
  403c40:	movzx  eax,BYTE PTR [rsi]
  403c43:	test   al,al
  403c45:	je     403c90 <rb_base64_encode@plt+0x1610>
  403c47:	cmp    al,0x20
  403c49:	je     403c38 <rb_base64_encode@plt+0x15b8>
  403c4b:	cmp    al,0x9
  403c4d:	je     403c38 <rb_base64_encode@plt+0x15b8>
  403c4f:	cmp    al,0xd
  403c51:	je     403d30 <rb_base64_encode@plt+0x16b0>
  403c57:	cmp    al,0xa
  403c59:	je     403d30 <rb_base64_encode@plt+0x16b0>
  403c5f:	mov    rax,rsi
  403c62:	jmp    403c81 <rb_base64_encode@plt+0x1601>
  403c64:	nop    DWORD PTR [rax+0x0]
  403c68:	movzx  edx,BYTE PTR [rax]
  403c6b:	test   dl,dl
  403c6d:	je     403c90 <rb_base64_encode@plt+0x1610>
  403c6f:	cmp    dl,0xd
  403c72:	je     403d38 <rb_base64_encode@plt+0x16b8>
  403c78:	cmp    dl,0xa
  403c7b:	je     403d38 <rb_base64_encode@plt+0x16b8>
  403c81:	inc    rax
  403c84:	cmp    rax,r14
  403c87:	jb     403c68 <rb_base64_encode@plt+0x15e8>
  403c89:	nop    DWORD PTR [rax+0x0]
  403c90:	lea    rdi,[rbx+0xb9]
  403c97:	mov    edx,0x25
  403c9c:	call   402430 <rb_strlcpy@plt>
  403ca1:	or     BYTE PTR [rbx+0xb8],0x8
  403ca8:	jmp    403b60 <rb_base64_encode@plt+0x14e0>
  403cad:	nop    DWORD PTR [rax]
  403cb0:	mov    r13,QWORD PTR [rsp+0x28]
  403cb5:	lea    r12,[rbx+0xb9]
  403cbc:	mov    rdi,r13
  403cbf:	call   405470 <rb_base64_encode@plt+0x2df0>
  403cc4:	mov    rdi,r12
  403cc7:	call   402460 <strlen@plt>
  403ccc:	mov    rdx,rax
  403ccf:	mov    rsi,r12
  403cd2:	mov    rdi,r13
  403cd5:	call   4054a0 <rb_base64_encode@plt+0x2e20>
  403cda:	lea    r12,[rsp+0xa0]
  403ce2:	mov    edx,0x24
  403ce7:	lea    rsi,[rip+0x2402]        # 4060f0 <rb_base64_encode@plt+0x3a70>
  403cee:	mov    rdi,r13
  403cf1:	call   4054a0 <rb_base64_encode@plt+0x2e20>
  403cf6:	mov    rsi,r12
  403cf9:	mov    rdi,r13
  403cfc:	call   4055e0 <rb_base64_encode@plt+0x2f60>
  403d01:	mov    rdi,r12
  403d04:	mov    esi,0x14
  403d09:	call   402680 <rb_base64_encode@plt>
  403d0e:	mov    r12,rax
  403d11:	test   BYTE PTR [rbx+0xb8],0x2
  403d18:	je     403d40 <rb_base64_encode@plt+0x16c0>
  403d1a:	mov    rdi,r12
  403d1d:	call   402450 <free@plt>
  403d22:	movzx  eax,BYTE PTR [rbx+0xb8]
  403d29:	jmp    403b84 <rb_base64_encode@plt+0x1504>
  403d2e:	xchg   ax,ax
  403d30:	mov    rax,rsi
  403d33:	nop    DWORD PTR [rax+rax*1+0x0]
  403d38:	mov    BYTE PTR [rax],0x0
  403d3b:	jmp    403c90 <rb_base64_encode@plt+0x1610>
  403d40:	mov    rdi,QWORD PTR [rbx+0x20]
  403d44:	mov    edx,0x81
  403d49:	lea    rsi,[rip+0x23c8]        # 406118 <rb_base64_encode@plt+0x3a98>
  403d50:	call   402640 <rb_rawbuf_append@plt>
  403d55:	mov    rdi,r12
  403d58:	call   402460 <strlen@plt>
  403d5d:	mov    rdi,QWORD PTR [rbx+0x20]
  403d61:	test   BYTE PTR [rbx+0xb8],0x2
  403d68:	jne    403d1a <rb_base64_encode@plt+0x169a>
  403d6a:	mov    edx,eax
  403d6c:	mov    rsi,r12
  403d6f:	call   402640 <rb_rawbuf_append@plt>
  403d74:	mov    rdi,QWORD PTR [rbx+0x20]
  403d78:	test   BYTE PTR [rbx+0xb8],0x2
  403d7f:	jne    403d1a <rb_base64_encode@plt+0x169a>
  403d81:	mov    edx,0x4
  403d86:	lea    rsi,[rip+0x22e2]        # 40606f <rb_base64_encode@plt+0x39ef>
  403d8d:	call   402640 <rb_rawbuf_append@plt>
  403d92:	mov    rdi,r12
  403d95:	call   402450 <free@plt>
  403d9a:	movzx  eax,BYTE PTR [rbx+0xb8]
  403da1:	jmp    403b84 <rb_base64_encode@plt+0x1504>
  403da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403db0:	lea    rdx,[rip+0x2293]        # 40604a <rb_base64_encode@plt+0x39ca>
  403db7:	xor    esi,esi
  403db9:	mov    rdi,rbx
  403dbc:	xor    eax,eax
  403dbe:	call   402ef0 <rb_base64_encode@plt+0x870>
  403dc3:	jmp    403bb0 <rb_base64_encode@plt+0x1530>
  403dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403dd0:	call   402560 <__errno_location@plt>
  403dd5:	mov    edi,DWORD PTR [rax]
  403dd7:	call   4023a0 <rb_ignore_errno@plt>
  403ddc:	test   eax,eax
  403dde:	je     403db0 <rb_base64_encode@plt+0x1730>
  403de0:	mov    rdi,QWORD PTR [rsp+0x20]
  403de5:	mov    rcx,rbx
  403de8:	lea    rdx,[rip+0xfffffffffffffa61]        # 403850 <rb_base64_encode@plt+0x11d0>
  403def:	mov    esi,0x1
  403df4:	call   4023c0 <rb_setselect@plt>
  403df9:	mov    rdi,QWORD PTR [rbx+0x90]
  403e00:	mov    rsi,rbx
  403e03:	call   4037a0 <rb_base64_encode@plt+0x1120>
  403e08:	jmp    403bb0 <rb_base64_encode@plt+0x1530>
  403e0d:	call   402580 <__stack_chk_fail@plt>
  403e12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403e1d:	nop    DWORD PTR [rax]
  403e20:	endbr64 
  403e24:	push   r15
  403e26:	push   r14
  403e28:	push   r13
  403e2a:	push   r12
  403e2c:	mov    r12,rsi
  403e2f:	push   rbp
  403e30:	push   rbx
  403e31:	sub    rsp,0x18
  403e35:	mov    esi,0x50
  403e3a:	mov    edi,0x1
  403e3f:	call   4025e0 <calloc@plt>
  403e44:	mov    rbx,rax
  403e47:	test   rax,rax
  403e4a:	je     403ed0 <rb_base64_encode@plt+0x1850>
  403e50:	mov    esi,0x4000
  403e55:	mov    edi,0x1
  403e5a:	call   4025e0 <calloc@plt>
  403e5f:	test   rax,rax
  403e62:	je     403ed0 <rb_base64_encode@plt+0x1850>
  403e64:	mov    QWORD PTR [rbx+0x18],rax
  403e68:	mov    QWORD PTR [rbx+0x20],0x4000
  403e70:	mov    rdi,QWORD PTR [r12+0x20]
  403e75:	lea    rcx,[rbx+0x28]
  403e79:	mov    r8d,0x4
  403e7f:	mov    edx,0x4000
  403e84:	mov    rsi,rax
  403e87:	call   4025d0 <rb_recv_fd_buf@plt>
  403e8c:	movsxd rbp,eax
  403e8f:	test   ebp,ebp
  403e91:	jg     403ed8 <rb_base64_encode@plt+0x1858>
  403e93:	mov    rdi,QWORD PTR [rbx+0x18]
  403e97:	test   rdi,rdi
  403e9a:	je     403ea1 <rb_base64_encode@plt+0x1821>
  403e9c:	call   402450 <free@plt>
  403ea1:	mov    rdi,rbx
  403ea4:	call   402450 <free@plt>
  403ea9:	test   ebp,ebp
  403eab:	je     403ec0 <rb_base64_encode@plt+0x1840>
  403ead:	call   402560 <__errno_location@plt>
  403eb2:	mov    edi,DWORD PTR [rax]
  403eb4:	call   4023a0 <rb_ignore_errno@plt>
  403eb9:	test   eax,eax
  403ebb:	jne    403f37 <rb_base64_encode@plt+0x18b7>
  403ebd:	nop    DWORD PTR [rax]
  403ec0:	xor    edi,edi
  403ec2:	call   4023e0 <exit@plt>
  403ec7:	nop    WORD PTR [rax+rax*1+0x0]
  403ed0:	call   402550 <rb_outofmemory@plt>
  403ed5:	nop    DWORD PTR [rax]
  403ed8:	mov    rax,QWORD PTR [r12+0x38]
  403edd:	mov    QWORD PTR [rbx+0x20],rbp
  403ee1:	mov    QWORD PTR [rbx],rbx
  403ee4:	mov    QWORD PTR [rbx+0x10],0x0
  403eec:	mov    QWORD PTR [rbx+0x8],rax
  403ef0:	test   rax,rax
  403ef3:	je     403f28 <rb_base64_encode@plt+0x18a8>
  403ef5:	mov    QWORD PTR [rax+0x10],rbx
  403ef9:	inc    QWORD PTR [r12+0x40]
  403efe:	mov    QWORD PTR [r12+0x38],rbx
  403f03:	xor    eax,eax
  403f05:	cmp    QWORD PTR [rbx+rax*8+0x28],0x0
  403f0b:	mov    edx,eax
  403f0d:	je     403f1d <rb_base64_encode@plt+0x189d>
  403f0f:	inc    rax
  403f12:	cmp    rax,0x4
  403f16:	jne    403f05 <rb_base64_encode@plt+0x1885>
  403f18:	mov    edx,0x4
  403f1d:	mov    DWORD PTR [rbx+0x48],edx
  403f20:	jmp    403e35 <rb_base64_encode@plt+0x17b5>
  403f25:	nop    DWORD PTR [rax]
  403f28:	cmp    QWORD PTR [r12+0x30],0x0
  403f2e:	jne    403ef9 <rb_base64_encode@plt+0x1879>
  403f30:	mov    QWORD PTR [r12+0x30],rbx
  403f35:	jmp    403ef9 <rb_base64_encode@plt+0x1879>
  403f37:	mov    rbx,QWORD PTR [r12+0x30]
  403f3c:	test   rbx,rbx
  403f3f:	je     404000 <rb_base64_encode@plt+0x1980>
  403f45:	mov    rbp,QWORD PTR [rbx]
  403f48:	mov    r13,QWORD PTR [rbx+0x10]
  403f4c:	mov    rdi,QWORD PTR [rbp+0x18]
  403f50:	lea    r14,[rip+0x42a9]        # 408200 <rb_base64_encode@plt+0x5b80>
  403f57:	cmp    BYTE PTR [rdi],0x41
  403f5a:	je     403fc5 <rb_base64_encode@plt+0x1945>
  403f5c:	nop    DWORD PTR [rax+0x0]
  403f60:	mov    rdx,QWORD PTR [rbx+0x10]
  403f64:	mov    rax,QWORD PTR [rbx+0x8]
  403f68:	test   rdx,rdx
  403f6b:	je     404040 <rb_base64_encode@plt+0x19c0>
  403f71:	mov    QWORD PTR [rdx+0x8],rax
  403f75:	mov    rax,QWORD PTR [rbx+0x8]
  403f79:	test   rax,rax
  403f7c:	je     404030 <rb_base64_encode@plt+0x19b0>
  403f82:	mov    QWORD PTR [rax+0x10],rdx
  403f86:	mov    QWORD PTR [rbx+0x8],0x0
  403f8e:	mov    QWORD PTR [rbx+0x10],0x0
  403f96:	dec    QWORD PTR [r12+0x40]
  403f9b:	test   rdi,rdi
  403f9e:	je     403fa5 <rb_base64_encode@plt+0x1925>
  403fa0:	call   402450 <free@plt>
  403fa5:	mov    rdi,rbp
  403fa8:	call   402450 <free@plt>
  403fad:	test   r13,r13
  403fb0:	je     404000 <rb_base64_encode@plt+0x1980>
  403fb2:	mov    rbx,r13
  403fb5:	mov    rbp,QWORD PTR [rbx]
  403fb8:	mov    r13,QWORD PTR [r13+0x10]
  403fbc:	mov    rdi,QWORD PTR [rbp+0x18]
  403fc0:	cmp    BYTE PTR [rdi],0x41
  403fc3:	jne    403f60 <rb_base64_encode@plt+0x18e0>
  403fc5:	mov    eax,DWORD PTR [rbp+0x48]
  403fc8:	cmp    eax,0x2
  403fcb:	jne    40417b <rb_base64_encode@plt+0x1afb>
  403fd1:	cmp    QWORD PTR [rbp+0x20],0x5
  403fd6:	mov    rdx,QWORD PTR [rbp+0x28]
  403fda:	je     40404a <rb_base64_encode@plt+0x19ca>
  403fdc:	xor    r15d,r15d
  403fdf:	mov    rdi,rdx
  403fe2:	inc    r15
  403fe5:	call   402500 <rb_close@plt>
  403fea:	cmp    DWORD PTR [rbp+0x48],r15d
  403fee:	jle    404172 <rb_base64_encode@plt+0x1af2>
  403ff4:	mov    rdx,QWORD PTR [rbp+r15*8+0x28]
  403ff9:	jmp    403fdf <rb_base64_encode@plt+0x195f>
  403ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  404000:	mov    rdi,QWORD PTR [r12+0x20]
  404005:	add    rsp,0x18
  404009:	pop    rbx
  40400a:	pop    rbp
  40400b:	mov    rcx,r12
  40400e:	pop    r12
  404010:	pop    r13
  404012:	pop    r14
  404014:	lea    rdx,[rip+0xfffffffffffffe05]        # 403e20 <rb_base64_encode@plt+0x17a0>
  40401b:	mov    esi,0x1
  404020:	pop    r15
  404022:	jmp    4023c0 <rb_setselect@plt>
  404027:	nop    WORD PTR [rax+rax*1+0x0]
  404030:	mov    QWORD PTR [r12+0x30],rdx
  404035:	jmp    403f86 <rb_base64_encode@plt+0x1906>
  40403a:	nop    WORD PTR [rax+rax*1+0x0]
  404040:	mov    QWORD PTR [r12+0x38],rax
  404045:	jmp    403f79 <rb_base64_encode@plt+0x18f9>
  40404a:	mov    rax,QWORD PTR [rbp+0x30]
  40404e:	mov    esi,0xe0
  404053:	mov    edi,0x1
  404058:	mov    QWORD PTR [rsp+0x8],rdx
  40405d:	mov    QWORD PTR [rsp],rax
  404061:	call   4025e0 <calloc@plt>
  404066:	mov    r15,rax
  404069:	test   rax,rax
  40406c:	je     403ed0 <rb_base64_encode@plt+0x1850>
  404072:	mov    rdx,QWORD PTR [rsp+0x8]
  404077:	mov    QWORD PTR [rax+0x18],r12
  40407b:	mov    QWORD PTR [rax+0x88],rdx
  404082:	mov    rax,QWORD PTR [rsp]
  404086:	mov    DWORD PTR [r15+0x80],0xffffffff
  404091:	mov    QWORD PTR [r15+0x90],rax
  404098:	mov    rdi,rdx
  40409b:	call   402400 <rb_set_nb@plt>
  4040a0:	mov    rdi,QWORD PTR [rsp]
  4040a4:	call   402400 <rb_set_nb@plt>
  4040a9:	lea    rdi,[r15+0x58]
  4040ad:	call   402600 <rb_linebuf_newbuf@plt>
  4040b2:	lea    rdi,[r15+0x30]
  4040b6:	call   402600 <rb_linebuf_newbuf@plt>
  4040bb:	call   4025b0 <rb_new_rawbuffer@plt>
  4040c0:	mov    QWORD PTR [r15+0x28],rax
  4040c4:	call   4025b0 <rb_new_rawbuffer@plt>
  4040c9:	mov    QWORD PTR [r15+0x20],rax
  4040cd:	mov    rax,QWORD PTR [rbp+0x18]
  4040d1:	mov    edx,0x10624dd3
  4040d6:	mov    esi,DWORD PTR [rax+0x1]
  4040d9:	mov    QWORD PTR [r15],r15
  4040dc:	mov    eax,esi
  4040de:	mul    edx
  4040e0:	mov    DWORD PTR [r15+0x80],esi
  4040e7:	mov    QWORD PTR [r15+0x8],0x0
  4040ef:	mov    eax,edx
  4040f1:	shr    eax,0x7
  4040f4:	imul   eax,eax,0x7d0
  4040fa:	mov    edx,esi
  4040fc:	sub    edx,eax
  4040fe:	mov    rax,rdx
  404101:	lea    rdx,[rdx+rdx*2]
  404105:	lea    rsi,[r14+rdx*8]
  404109:	mov    rdx,QWORD PTR [rsi]
  40410c:	mov    QWORD PTR [r15+0x10],rdx
  404110:	test   rdx,rdx
  404113:	je     40419f <rb_base64_encode@plt+0x1b1f>
  404119:	mov    QWORD PTR [rdx+0x8],r15
  40411d:	lea    rax,[rax+rax*2]
  404121:	lea    rax,[r14+rax*8]
  404125:	inc    QWORD PTR [rax+0x10]
  404129:	or     BYTE PTR [r15+0xb8],0x4
  404131:	mov    QWORD PTR [rax],r15
  404134:	mov    rdi,QWORD PTR [r15+0x88]
  40413b:	call   402370 <rb_get_type@plt>
  404140:	test   al,0x40
  404142:	jne    40418c <rb_base64_encode@plt+0x1b0c>
  404144:	mov    rdi,QWORD PTR [r15+0x90]
  40414b:	call   402370 <rb_get_type@plt>
  404150:	cmp    al,0x40
  404152:	je     4041b3 <rb_base64_encode@plt+0x1b33>
  404154:	mov    rdi,QWORD PTR [r15+0x88]
  40415b:	mov    rsi,r15
  40415e:	call   403850 <rb_base64_encode@plt+0x11d0>
  404163:	mov    rdi,QWORD PTR [r15+0x90]
  40416a:	mov    rsi,r15
  40416d:	call   403610 <rb_base64_encode@plt+0xf90>
  404172:	mov    rdi,QWORD PTR [rbp+0x18]
  404176:	jmp    403f60 <rb_base64_encode@plt+0x18e0>
  40417b:	test   eax,eax
  40417d:	jle    403f60 <rb_base64_encode@plt+0x18e0>
  404183:	mov    rdx,QWORD PTR [rbp+0x28]
  404187:	jmp    403fdc <rb_base64_encode@plt+0x195c>
  40418c:	mov    rdi,QWORD PTR [r15+0x88]
  404193:	mov    esi,0x4
  404198:	call   402490 <rb_set_type@plt>
  40419d:	jmp    404144 <rb_base64_encode@plt+0x1ac4>
  40419f:	cmp    QWORD PTR [rsi+0x8],0x0
  4041a4:	jne    40411d <rb_base64_encode@plt+0x1a9d>
  4041aa:	mov    QWORD PTR [rsi+0x8],r15
  4041ae:	jmp    40411d <rb_base64_encode@plt+0x1a9d>
  4041b3:	mov    rdi,QWORD PTR [r15+0x90]
  4041ba:	mov    esi,0x4
  4041bf:	call   402490 <rb_set_type@plt>
  4041c4:	jmp    404154 <rb_base64_encode@plt+0x1ad4>
  4041c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041d0:	push   r15
  4041d2:	mov    rax,rdi
  4041d5:	push   r14
  4041d7:	push   r13
  4041d9:	push   r12
  4041db:	push   rbp
  4041dc:	push   rbx
  4041dd:	mov    ebx,DWORD PTR [rax+0x8]
  4041e0:	mov    r15d,DWORD PTR [rax+0xc]
  4041e4:	mov    edx,DWORD PTR [rax+0x4]
  4041e7:	mov    edi,DWORD PTR [rdi]
  4041e9:	mov    r8d,ebx
  4041ec:	mov    r11d,DWORD PTR [rax+0x10]
  4041f0:	xor    r8d,r15d
  4041f3:	mov    ecx,edi
  4041f5:	mov    QWORD PTR [rsp-0x8],rax
  4041fa:	and    r8d,edx
  4041fd:	rorx   eax,edi,0x1b
  404203:	mov    edi,ebx
  404205:	xor    r8d,r15d
  404208:	lea    eax,[r11+rax*1+0x5a827999]
  404210:	mov    DWORD PTR [rsp-0x18],edx
  404214:	rorx   edx,edx,0x2
  40421a:	xor    edi,edx
  40421c:	add    r8d,eax
  40421f:	mov    eax,edi
  404221:	and    eax,ecx
  404223:	movbe  r14d,DWORD PTR [rsi]
  404228:	xor    eax,ebx
  40422a:	mov    DWORD PTR [rsp-0xc],r11d
  40422f:	movbe  r11d,DWORD PTR [rsi+0x4]
  404235:	lea    edi,[r15+rax*1+0x5a827999]
  40423d:	add    r8d,r14d
  404240:	add    edi,r11d
  404243:	mov    r9d,edx
  404246:	movbe  ebp,DWORD PTR [rsi+0x8]
  40424b:	rorx   eax,r8d,0x1b
  404251:	add    edi,eax
  404253:	rorx   eax,ecx,0x2
  404259:	xor    r9d,eax
  40425c:	and    r9d,r8d
  40425f:	mov    DWORD PTR [rsp-0x1c],ecx
  404263:	xor    r9d,edx
  404266:	lea    ecx,[rbx+rbp*1+0x5a827999]
  40426d:	mov    r10d,eax
  404270:	rorx   r8d,r8d,0x2
  404276:	add    r9d,ecx
  404279:	xor    r10d,r8d
  40427c:	movbe  r12d,DWORD PTR [rsi+0xc]
  404282:	rorx   ecx,edi,0x1b
  404288:	add    r9d,ecx
  40428b:	mov    ecx,r10d
  40428e:	and    ecx,edi
  404290:	xor    ecx,eax
  404292:	lea    edx,[rdx+r12*1+0x5a827999]
  40429a:	mov    r10d,r8d
  40429d:	rorx   edi,edi,0x2
  4042a3:	add    ecx,edx
  4042a5:	xor    r10d,edi
  4042a8:	movbe  r13d,DWORD PTR [rsi+0x10]
  4042ae:	rorx   edx,r9d,0x1b
  4042b4:	add    ecx,edx
  4042b6:	mov    edx,r10d
  4042b9:	and    edx,r9d
  4042bc:	xor    edx,r8d
  4042bf:	lea    eax,[rax+r13*1+0x5a827999]
  4042c7:	mov    r10d,edi
  4042ca:	rorx   r9d,r9d,0x2
  4042d0:	add    edx,eax
  4042d2:	xor    r10d,r9d
  4042d5:	mov    DWORD PTR [rsp-0x10],r15d
  4042da:	rorx   eax,ecx,0x1b
  4042e0:	movbe  r15d,DWORD PTR [rsi+0x14]
  4042e6:	add    edx,eax
  4042e8:	mov    eax,r10d
  4042eb:	and    eax,ecx
  4042ed:	xor    eax,edi
  4042ef:	lea    r8d,[r8+r15*1+0x5a827999]
  4042f7:	add    eax,r8d
  4042fa:	rorx   r8d,edx,0x1b
  404300:	add    eax,r8d
  404303:	mov    r8d,r9d
  404306:	rorx   ecx,ecx,0x2
  40430c:	mov    DWORD PTR [rsp-0x50],r11d
  404311:	xor    r8d,ecx
  404314:	movbe  r11d,DWORD PTR [rsi+0x18]
  40431a:	and    r8d,edx
  40431d:	xor    r8d,r9d
  404320:	lea    edi,[rdi+r11*1+0x5a827999]
  404328:	add    r8d,edi
  40432b:	rorx   edi,eax,0x1b
  404331:	add    r8d,edi
  404334:	mov    edi,ecx
  404336:	movbe  r10d,DWORD PTR [rsi+0x1c]
  40433c:	rorx   edx,edx,0x2
  404342:	xor    edi,edx
  404344:	and    edi,eax
  404346:	xor    edi,ecx
  404348:	lea    r9d,[r9+r10*1+0x5a827999]
  404350:	add    edi,r9d
  404353:	rorx   r9d,r8d,0x1b
  404359:	add    edi,r9d
  40435c:	mov    r9d,edx
  40435f:	rorx   eax,eax,0x2
  404365:	mov    DWORD PTR [rsp-0x4c],r11d
  40436a:	xor    r9d,eax
  40436d:	movbe  r11d,DWORD PTR [rsi+0x20]
  404373:	and    r9d,r8d
  404376:	xor    r9d,edx
  404379:	lea    ecx,[rcx+r11*1+0x5a827999]
  404381:	add    r9d,ecx
  404384:	rorx   ecx,edi,0x1b
  40438a:	add    r9d,ecx
  40438d:	mov    ecx,eax
  40438f:	rorx   r8d,r8d,0x2
  404395:	mov    DWORD PTR [rsp-0x44],r10d
  40439a:	xor    ecx,r8d
  40439d:	movbe  r10d,DWORD PTR [rsi+0x24]
  4043a3:	and    ecx,edi
  4043a5:	xor    ecx,eax
  4043a7:	lea    edx,[rdx+r10*1+0x5a827999]
  4043af:	add    ecx,edx
  4043b1:	mov    DWORD PTR [rsp-0x14],ebx
  4043b5:	mov    DWORD PTR [rsp-0x40],r11d
  4043ba:	mov    DWORD PTR [rsp-0x48],r10d
  4043bf:	rorx   edx,r9d,0x1b
  4043c5:	mov    ebx,r8d
  4043c8:	add    ecx,edx
  4043ca:	movbe  edx,DWORD PTR [rsi+0x28]
  4043cf:	rorx   edi,edi,0x2
  4043d5:	xor    ebx,edi
  4043d7:	mov    r11d,edx
  4043da:	mov    edx,ebx
  4043dc:	and    edx,r9d
  4043df:	xor    edx,r8d
  4043e2:	lea    eax,[rax+r11*1+0x5a827999]
  4043ea:	add    edx,eax
  4043ec:	rorx   eax,ecx,0x1b
  4043f2:	add    edx,eax
  4043f4:	mov    eax,edi
  4043f6:	movbe  r10d,DWORD PTR [rsi+0x2c]
  4043fc:	rorx   r9d,r9d,0x2
  404402:	xor    eax,r9d
  404405:	and    eax,ecx
  404407:	xor    eax,edi
  404409:	lea    r8d,[r8+r10*1+0x5a827999]
  404411:	add    eax,r8d
  404414:	rorx   r8d,edx,0x1b
  40441a:	add    eax,r8d
  40441d:	movbe  r8d,DWORD PTR [rsi+0x30]
  404423:	rorx   ecx,ecx,0x2
  404429:	mov    ebx,r8d
  40442c:	mov    r8d,r9d
  40442f:	xor    r8d,ecx
  404432:	and    r8d,edx
  404435:	xor    r8d,r9d
  404438:	lea    edi,[rdi+rbx*1+0x5a827999]
  40443f:	add    r8d,edi
  404442:	rorx   edi,eax,0x1b
  404448:	add    r8d,edi
  40444b:	mov    edi,ecx
  40444d:	mov    DWORD PTR [rsp-0x34],ebx
  404451:	rorx   edx,edx,0x2
  404457:	movbe  ebx,DWORD PTR [rsi+0x34]
  40445c:	xor    edi,edx
  40445e:	and    edi,eax
  404460:	xor    edi,ecx
  404462:	lea    r9d,[r9+rbx*1+0x5a827999]
  40446a:	add    edi,r9d
  40446d:	rorx   r9d,r8d,0x1b
  404473:	add    edi,r9d
  404476:	mov    r9d,edx
  404479:	mov    DWORD PTR [rsp-0x3c],r11d
  40447e:	rorx   eax,eax,0x2
  404484:	movbe  r11d,DWORD PTR [rsi+0x38]
  40448a:	xor    r9d,eax
  40448d:	and    r9d,r8d
  404490:	mov    DWORD PTR [rsp-0x38],r10d
  404495:	xor    r9d,edx
  404498:	movbe  r10d,DWORD PTR [rsi+0x3c]
  40449e:	lea    ecx,[rcx+r11*1+0x5a827999]
  4044a6:	mov    esi,eax
  4044a8:	rorx   r8d,r8d,0x2
  4044ae:	add    r9d,ecx
  4044b1:	xor    esi,r8d
  4044b4:	rorx   ecx,edi,0x1b
  4044ba:	add    r9d,ecx
  4044bd:	mov    ecx,esi
  4044bf:	and    ecx,edi
  4044c1:	xor    ecx,eax
  4044c3:	lea    edx,[rdx+r10*1+0x5a827999]
  4044cb:	add    ecx,edx
  4044cd:	mov    esi,r14d
  4044d0:	rorx   edx,r9d,0x1b
  4044d6:	add    ecx,edx
  4044d8:	mov    edx,DWORD PTR [rsp-0x40]
  4044dc:	xor    esi,ebp
  4044de:	xor    edx,esi
  4044e0:	mov    r14d,r8d
  4044e3:	rorx   edi,edi,0x2
  4044e9:	xor    edx,ebx
  4044eb:	xor    r14d,edi
  4044ee:	rorx   esi,edx,0x1f
  4044f4:	mov    edx,r14d
  4044f7:	and    edx,r9d
  4044fa:	xor    edx,r8d
  4044fd:	lea    eax,[rsi+rax*1+0x5a827999]
  404504:	mov    r14d,DWORD PTR [rsp-0x50]
  404509:	add    edx,eax
  40450b:	rorx   eax,ecx,0x1b
  404511:	add    edx,eax
  404513:	mov    eax,DWORD PTR [rsp-0x48]
  404517:	xor    r14d,r12d
  40451a:	mov    DWORD PTR [rsp-0x54],esi
  40451e:	xor    eax,r14d
  404521:	rorx   esi,r9d,0x2
  404527:	mov    r9d,edi
  40452a:	xor    eax,r11d
  40452d:	xor    r9d,esi
  404530:	rorx   r14d,eax,0x1f
  404536:	mov    eax,r9d
  404539:	and    eax,ecx
  40453b:	xor    eax,edi
  40453d:	lea    r8d,[r14+r8*1+0x5a827999]
  404545:	add    eax,r8d
  404548:	mov    r9d,esi
  40454b:	rorx   r8d,edx,0x1b
  404551:	add    eax,r8d
  404554:	mov    r8d,ebp
  404557:	xor    r8d,r13d
  40455a:	rorx   ecx,ecx,0x2
  404560:	xor    r9d,ecx
  404563:	mov    DWORD PTR [rsp-0x50],r14d
  404568:	xor    r8d,DWORD PTR [rsp-0x3c]
  40456d:	mov    r14d,r9d
  404570:	xor    r8d,r10d
  404573:	and    r14d,edx
  404576:	rorx   r8d,r8d,0x1f
  40457c:	xor    r14d,esi
  40457f:	lea    edi,[r8+rdi*1+0x5a827999]
  404587:	add    r14d,edi
  40458a:	rorx   edi,eax,0x1b
  404590:	add    r14d,edi
  404593:	mov    edi,r12d
  404596:	xor    edi,r15d
  404599:	mov    ebp,ecx
  40459b:	xor    edi,DWORD PTR [rsp-0x38]
  40459f:	rorx   edx,edx,0x2
  4045a5:	xor    ebp,edx
  4045a7:	xor    edi,DWORD PTR [rsp-0x54]
  4045ab:	and    ebp,eax
  4045ad:	rorx   edi,edi,0x1f
  4045b3:	xor    ebp,ecx
  4045b5:	lea    esi,[rdi+rsi*1+0x5a827999]
  4045bc:	mov    r9d,DWORD PTR [rsp-0x4c]
  4045c1:	add    ebp,esi
  4045c3:	rorx   esi,r14d,0x1b
  4045c9:	add    ebp,esi
  4045cb:	mov    esi,r13d
  4045ce:	xor    esi,r9d
  4045d1:	mov    r12d,edx
  4045d4:	xor    esi,DWORD PTR [rsp-0x34]
  4045d8:	rorx   eax,eax,0x2
  4045de:	xor    r12d,eax
  4045e1:	xor    esi,DWORD PTR [rsp-0x50]
  4045e5:	mov    r13d,r12d
  4045e8:	rorx   esi,esi,0x1f
  4045ee:	xor    r13d,r14d
  4045f1:	lea    ecx,[rsi+rcx*1+0x6ed9eba1]
  4045f8:	xor    r15d,DWORD PTR [rsp-0x44]
  4045fd:	add    r13d,ecx
  404600:	rorx   ecx,ebp,0x1b
  404606:	add    r13d,ecx
  404609:	mov    ecx,r15d
  40460c:	xor    ecx,ebx
  40460e:	mov    r12d,eax
  404611:	rorx   r14d,r14d,0x2
  404617:	xor    ecx,r8d
  40461a:	xor    r12d,r14d
  40461d:	rorx   ecx,ecx,0x1f
  404623:	xor    r12d,ebp
  404626:	lea    edx,[rcx+rdx*1+0x6ed9eba1]
  40462d:	mov    DWORD PTR [rsp-0x4c],ecx
  404631:	add    r12d,edx
  404634:	mov    ecx,DWORD PTR [rsp-0x40]
  404638:	rorx   edx,r13d,0x1b
  40463e:	add    r12d,edx
  404641:	mov    edx,r9d
  404644:	xor    edx,ecx
  404646:	xor    edx,r11d
  404649:	mov    r9d,r14d
  40464c:	xor    edx,edi
  40464e:	rorx   ebp,ebp,0x2
  404654:	xor    r9d,ebp
  404657:	mov    r15d,r9d
  40465a:	rorx   edx,edx,0x1f
  404660:	xor    r15d,r13d
  404663:	lea    eax,[rdx+rax*1+0x6ed9eba1]
  40466a:	add    r15d,eax
  40466d:	rorx   eax,r12d,0x1b
  404673:	add    r15d,eax
  404676:	mov    eax,DWORD PTR [rsp-0x44]
  40467a:	mov    r9d,ebp
  40467d:	xor    eax,DWORD PTR [rsp-0x48]
  404681:	xor    eax,r10d
  404684:	rorx   r13d,r13d,0x2
  40468a:	xor    eax,esi
  40468c:	xor    r9d,r13d
  40468f:	rorx   eax,eax,0x1f
  404695:	xor    r9d,r12d
  404698:	lea    r14d,[rax+r14*1+0x6ed9eba1]
  4046a0:	add    r9d,r14d
  4046a3:	rorx   r14d,r15d,0x1b
  4046a9:	add    r9d,r14d
  4046ac:	mov    r14d,DWORD PTR [rsp-0x54]
  4046b1:	xor    ecx,DWORD PTR [rsp-0x3c]
  4046b5:	xor    r14d,ecx
  4046b8:	xor    r14d,DWORD PTR [rsp-0x4c]
  4046bd:	rorx   r14d,r14d,0x1f
  4046c3:	mov    ecx,r14d
  4046c6:	mov    r14d,r13d
  4046c9:	rorx   r12d,r12d,0x2
  4046cf:	xor    r14d,r12d
  4046d2:	xor    r14d,r15d
  4046d5:	lea    ebp,[rcx+rbp*1+0x6ed9eba1]
  4046dc:	add    r14d,ebp
  4046df:	rorx   ebp,r9d,0x1b
  4046e5:	add    r14d,ebp
  4046e8:	mov    ebp,DWORD PTR [rsp-0x48]
  4046ec:	mov    DWORD PTR [rsp-0x44],ecx
  4046f0:	xor    ebp,DWORD PTR [rsp-0x38]
  4046f4:	xor    ebp,DWORD PTR [rsp-0x50]
  4046f8:	xor    ebp,edx
  4046fa:	rorx   ebp,ebp,0x1f
  404700:	mov    ecx,ebp
  404702:	mov    ebp,r12d
  404705:	rorx   r15d,r15d,0x2
  40470b:	xor    ebp,r15d
  40470e:	xor    ebp,r9d
  404711:	lea    r13d,[rcx+r13*1+0x6ed9eba1]
  404719:	add    r13d,ebp
  40471c:	mov    DWORD PTR [rsp-0x40],ecx
  404720:	rorx   ebp,r14d,0x1b
  404726:	add    r13d,ebp
  404729:	mov    ebp,DWORD PTR [rsp-0x3c]
  40472d:	rorx   r9d,r9d,0x2
  404733:	xor    ebp,DWORD PTR [rsp-0x34]
  404737:	xor    ebp,r8d
  40473a:	xor    ebp,eax
  40473c:	rorx   ebp,ebp,0x1f
  404742:	mov    ecx,ebp
  404744:	mov    ebp,r15d
  404747:	xor    ebp,r9d
  40474a:	xor    ebp,r14d
  40474d:	lea    r12d,[rcx+r12*1+0x6ed9eba1]
  404755:	add    ebp,r12d
  404758:	rorx   r12d,r13d,0x1b
  40475e:	add    r12d,ebp
  404761:	mov    ebp,DWORD PTR [rsp-0x38]
  404765:	mov    DWORD PTR [rsp-0x48],ecx
  404769:	xor    ebp,ebx
  40476b:	xor    ebp,edi
  40476d:	xor    ebp,DWORD PTR [rsp-0x44]
  404771:	rorx   ebp,ebp,0x1f
  404777:	mov    ecx,ebp
  404779:	mov    ebp,r9d
  40477c:	rorx   r14d,r14d,0x2
  404782:	xor    ebp,r14d
  404785:	xor    ebp,r13d
  404788:	lea    r15d,[rcx+r15*1+0x6ed9eba1]
  404790:	add    ebp,r15d
  404793:	rorx   r15d,r12d,0x1b
  404799:	add    ebp,r15d
  40479c:	mov    r15d,DWORD PTR [rsp-0x34]
  4047a1:	mov    DWORD PTR [rsp-0x3c],ecx
  4047a5:	xor    r15d,r11d
  4047a8:	xor    r15d,esi
  4047ab:	xor    r15d,DWORD PTR [rsp-0x40]
  4047b0:	rorx   r15d,r15d,0x1f
  4047b6:	mov    ecx,r15d
  4047b9:	mov    r15d,r14d
  4047bc:	rorx   r13d,r13d,0x2
  4047c2:	xor    ebx,r10d
  4047c5:	xor    r15d,r13d
  4047c8:	xor    r15d,r12d
  4047cb:	xor    ebx,DWORD PTR [rsp-0x4c]
  4047cf:	lea    r9d,[rcx+r9*1+0x6ed9eba1]
  4047d7:	xor    ebx,DWORD PTR [rsp-0x48]
  4047db:	add    r9d,r15d
  4047de:	rorx   r15d,ebp,0x1b
  4047e4:	add    r9d,r15d
  4047e7:	rorx   r15d,ebx,0x1f
  4047ed:	mov    ebx,r13d
  4047f0:	xor    r11d,DWORD PTR [rsp-0x54]
  4047f5:	rorx   r12d,r12d,0x2
  4047fb:	xor    ebx,r12d
  4047fe:	xor    ebx,ebp
  404800:	lea    r14d,[r15+r14*1+0x6ed9eba1]
  404808:	xor    r11d,edx
  40480b:	xor    r11d,DWORD PTR [rsp-0x3c]
  404810:	add    ebx,r14d
  404813:	rorx   r14d,r9d,0x1b
  404819:	add    ebx,r14d
  40481c:	rorx   r14d,r11d,0x1f
  404822:	mov    r11d,r12d
  404825:	xor    r10d,DWORD PTR [rsp-0x50]
  40482a:	rorx   ebp,ebp,0x2
  404830:	xor    r11d,ebp
  404833:	xor    r11d,r9d
  404836:	lea    r13d,[r14+r13*1+0x6ed9eba1]
  40483e:	xor    r10d,eax
  404841:	xor    r10d,ecx
  404844:	add    r11d,r13d
  404847:	rorx   r13d,ebx,0x1b
  40484d:	add    r11d,r13d
  404850:	rorx   r13d,r10d,0x1f
  404856:	mov    r10d,ebp
  404859:	rorx   r9d,r9d,0x2
  40485f:	xor    r10d,r9d
  404862:	xor    r10d,ebx
  404865:	lea    r12d,[r13+r12*1+0x6ed9eba1]
  40486d:	add    r10d,r12d
  404870:	rorx   r12d,r11d,0x1b
  404876:	add    r10d,r12d
  404879:	mov    r12d,DWORD PTR [rsp-0x54]
  40487e:	mov    DWORD PTR [rsp-0x24],ecx
  404882:	xor    r12d,r8d
  404885:	xor    r12d,DWORD PTR [rsp-0x44]
  40488a:	xor    r12d,r15d
  40488d:	rorx   r12d,r12d,0x1f
  404893:	mov    ecx,r12d
  404896:	mov    r12d,r9d
  404899:	rorx   ebx,ebx,0x2
  40489f:	xor    r12d,ebx
  4048a2:	xor    r12d,r11d
  4048a5:	lea    ebp,[rcx+rbp*1+0x6ed9eba1]
  4048ac:	add    ebp,r12d
  4048af:	rorx   r12d,r10d,0x1b
  4048b5:	add    ebp,r12d
  4048b8:	mov    r12d,DWORD PTR [rsp-0x50]
  4048bd:	mov    DWORD PTR [rsp-0x38],ecx
  4048c1:	xor    r12d,edi
  4048c4:	xor    r12d,DWORD PTR [rsp-0x40]
  4048c9:	xor    r12d,r14d
  4048cc:	rorx   r12d,r12d,0x1f
  4048d2:	mov    ecx,r12d
  4048d5:	mov    r12d,ebx
  4048d8:	rorx   r11d,r11d,0x2
  4048de:	xor    r8d,esi
  4048e1:	xor    r12d,r11d
  4048e4:	xor    r12d,r10d
  4048e7:	xor    r8d,DWORD PTR [rsp-0x48]
  4048ec:	lea    r9d,[rcx+r9*1+0x6ed9eba1]
  4048f4:	xor    r8d,r13d
  4048f7:	add    r9d,r12d
  4048fa:	rorx   r12d,ebp,0x1b
  404900:	add    r9d,r12d
  404903:	rorx   r12d,r8d,0x1f
  404909:	mov    r8d,r11d
  40490c:	xor    edi,DWORD PTR [rsp-0x4c]
  404910:	rorx   r10d,r10d,0x2
  404916:	xor    r8d,r10d
  404919:	xor    edi,DWORD PTR [rsp-0x3c]
  40491d:	xor    r8d,ebp
  404920:	lea    ebx,[r12+rbx*1+0x6ed9eba1]
  404928:	xor    edi,DWORD PTR [rsp-0x38]
  40492c:	add    r8d,ebx
  40492f:	rorx   ebx,r9d,0x1b
  404935:	add    r8d,ebx
  404938:	rorx   ebx,edi,0x1f
  40493e:	mov    edi,r10d
  404941:	rorx   ebp,ebp,0x2
  404947:	xor    edi,ebp
  404949:	xor    edi,r9d
  40494c:	lea    r11d,[rbx+r11*1+0x6ed9eba1]
  404954:	add    edi,r11d
  404957:	rorx   r11d,r8d,0x1b
  40495d:	add    edi,r11d
  404960:	xor    esi,edx
  404962:	xor    esi,DWORD PTR [rsp-0x24]
  404966:	mov    DWORD PTR [rsp-0x20],ecx
  40496a:	xor    esi,ecx
  40496c:	mov    ecx,DWORD PTR [rsp-0x4c]
  404970:	rorx   esi,esi,0x1f
  404976:	mov    r11d,esi
  404979:	mov    esi,ebp
  40497b:	rorx   r9d,r9d,0x2
  404981:	xor    ecx,eax
  404983:	xor    esi,r9d
  404986:	xor    esi,r8d
  404989:	lea    r10d,[r11+r10*1+0x6ed9eba1]
  404991:	xor    ecx,r15d
  404994:	xor    ecx,r12d
  404997:	add    esi,r10d
  40499a:	mov    DWORD PTR [rsp-0x34],r11d
  40499f:	rorx   r10d,edi,0x1b
  4049a5:	mov    r11d,DWORD PTR [rsp-0x44]
  4049aa:	add    esi,r10d
  4049ad:	rorx   r10d,ecx,0x1f
  4049b3:	mov    ecx,r9d
  4049b6:	rorx   r8d,r8d,0x2
  4049bc:	xor    ecx,r8d
  4049bf:	xor    ecx,edi
  4049c1:	mov    DWORD PTR [rsp-0x30],r10d
  4049c6:	xor    edx,r11d
  4049c9:	lea    r10d,[r10+rbp*1+0x6ed9eba1]
  4049d1:	add    ecx,r10d
  4049d4:	xor    edx,r14d
  4049d7:	rorx   r10d,esi,0x1b
  4049dd:	xor    edx,ebx
  4049df:	add    ecx,r10d
  4049e2:	mov    r10d,DWORD PTR [rsp-0x40]
  4049e7:	rorx   edx,edx,0x1f
  4049ed:	mov    ebp,edx
  4049ef:	mov    edx,r8d
  4049f2:	rorx   edi,edi,0x2
  4049f8:	xor    eax,r10d
  4049fb:	xor    edx,edi
  4049fd:	xor    edx,esi
  4049ff:	lea    r9d,[rbp+r9*1+0x6ed9eba1]
  404a07:	xor    eax,r13d
  404a0a:	xor    eax,DWORD PTR [rsp-0x34]
  404a0e:	add    edx,r9d
  404a11:	rorx   r9d,ecx,0x1b
  404a17:	add    edx,r9d
  404a1a:	rorx   r9d,eax,0x1f
  404a20:	mov    eax,edi
  404a22:	rorx   esi,esi,0x2
  404a28:	xor    eax,esi
  404a2a:	xor    eax,ecx
  404a2c:	lea    r8d,[r9+r8*1+0x6ed9eba1]
  404a34:	add    eax,r8d
  404a37:	mov    DWORD PTR [rsp-0x2c],ebp
  404a3b:	rorx   r8d,edx,0x1b
  404a41:	mov    DWORD PTR [rsp-0x28],r9d
  404a46:	add    eax,r8d
  404a49:	mov    r8d,DWORD PTR [rsp-0x38]
  404a4e:	xor    r11d,DWORD PTR [rsp-0x48]
  404a53:	xor    r8d,r11d
  404a56:	xor    r8d,DWORD PTR [rsp-0x30]
  404a5b:	rorx   r8d,r8d,0x1f
  404a61:	mov    ebp,r8d
  404a64:	mov    r8d,edx
  404a67:	rorx   ecx,ecx,0x2
  404a6d:	or     r8d,ecx
  404a70:	mov    r9d,r8d
  404a73:	mov    r8d,edx
  404a76:	and    r9d,esi
  404a79:	mov    r11d,DWORD PTR [rsp-0x3c]
  404a7e:	and    r8d,ecx
  404a81:	mov    DWORD PTR [rsp-0x54],ebp
  404a85:	or     r8d,r9d
  404a88:	lea    r9d,[rbp+rdi*1-0x70e44324]
  404a90:	mov    ebp,DWORD PTR [rsp-0x20]
  404a94:	xor    r10d,r11d
  404a97:	xor    ebp,r10d
  404a9a:	xor    ebp,DWORD PTR [rsp-0x2c]
  404a9e:	rorx   edi,ebp,0x1f
  404aa4:	mov    r10d,edi
  404aa7:	mov    edi,eax
  404aa9:	rorx   edx,edx,0x2
  404aaf:	add    r8d,r9d
  404ab2:	or     edi,edx
  404ab4:	rorx   r9d,eax,0x1b
  404aba:	add    r8d,r9d
  404abd:	mov    r9d,edi
  404ac0:	mov    edi,eax
  404ac2:	and    r9d,ecx
  404ac5:	and    edi,edx
  404ac7:	mov    DWORD PTR [rsp-0x50],r10d
  404acc:	mov    ebp,DWORD PTR [rsp-0x48]
  404ad0:	or     edi,r9d
  404ad3:	lea    r9d,[r10+rsi*1-0x70e44324]
  404adb:	mov    r10d,DWORD PTR [rsp-0x24]
  404ae0:	rorx   eax,eax,0x2
  404ae6:	xor    ebp,r10d
  404ae9:	xor    ebp,r12d
  404aec:	xor    ebp,DWORD PTR [rsp-0x28]
  404af0:	rorx   esi,ebp,0x1f
  404af6:	mov    ebp,esi
  404af8:	mov    esi,r8d
  404afb:	or     esi,eax
  404afd:	add    edi,r9d
  404b00:	rorx   r9d,r8d,0x1b
  404b06:	add    edi,r9d
  404b09:	mov    r9d,esi
  404b0c:	mov    esi,r8d
  404b0f:	and    r9d,edx
  404b12:	and    esi,eax
  404b14:	xor    r11d,r15d
  404b17:	or     esi,r9d
  404b1a:	lea    r9d,[rbp+rcx*1-0x70e44324]
  404b22:	rorx   ecx,r8d,0x2
  404b28:	mov    r8d,edi
  404b2b:	mov    DWORD PTR [rsp-0x4c],ebp
  404b2f:	or     r8d,ecx
  404b32:	add    esi,r9d
  404b35:	mov    ebp,r11d
  404b38:	rorx   r9d,edi,0x1b
  404b3e:	xor    ebp,ebx
  404b40:	add    esi,r9d
  404b43:	mov    r9d,r8d
  404b46:	mov    r8d,edi
  404b49:	xor    ebp,DWORD PTR [rsp-0x54]
  404b4d:	and    r9d,eax
  404b50:	and    r8d,ecx
  404b53:	rorx   r11d,ebp,0x1f
  404b59:	or     r8d,r9d
  404b5c:	lea    r9d,[r11+rdx*1-0x70e44324]
  404b64:	add    r8d,r9d
  404b67:	rorx   edx,edi,0x2
  404b6d:	mov    edi,r10d
  404b70:	rorx   r9d,esi,0x1b
  404b76:	add    r8d,r9d
  404b79:	xor    edi,r14d
  404b7c:	xor    edi,DWORD PTR [rsp-0x34]
  404b80:	xor    edi,DWORD PTR [rsp-0x50]
  404b84:	mov    r9d,esi
  404b87:	mov    DWORD PTR [rsp-0x48],r11d
  404b8c:	or     r9d,edx
  404b8f:	rorx   edi,edi,0x1f
  404b95:	mov    r11d,edi
  404b98:	mov    edi,esi
  404b9a:	and    r9d,ecx
  404b9d:	and    edi,edx
  404b9f:	or     edi,r9d
  404ba2:	lea    eax,[r11+rax*1-0x70e44324]
  404baa:	rorx   r9d,esi,0x2
  404bb0:	mov    esi,r8d
  404bb3:	add    edi,eax
  404bb5:	or     esi,r9d
  404bb8:	xor    r15d,r13d
  404bbb:	xor    r15d,DWORD PTR [rsp-0x30]
  404bc0:	rorx   eax,r8d,0x1b
  404bc6:	mov    ebp,esi
  404bc8:	add    eax,edi
  404bca:	mov    edi,r8d
  404bcd:	mov    r10d,DWORD PTR [rsp-0x38]
  404bd2:	xor    r15d,DWORD PTR [rsp-0x4c]
  404bd7:	and    ebp,edx
  404bd9:	and    edi,r9d
  404bdc:	rorx   r15d,r15d,0x1f
  404be2:	mov    DWORD PTR [rsp-0x44],r11d
  404be7:	or     edi,ebp
  404be9:	mov    r11d,DWORD PTR [rsp-0x2c]
  404bee:	lea    ebp,[r15+rcx*1-0x70e44324]
  404bf6:	add    edi,ebp
  404bf8:	xor    r14d,r10d
  404bfb:	xor    r11d,r14d
  404bfe:	rorx   ebp,eax,0x1b
  404c04:	add    ebp,edi
  404c06:	mov    edi,eax
  404c08:	rorx   r8d,r8d,0x2
  404c0e:	xor    r11d,DWORD PTR [rsp-0x48]
  404c13:	or     edi,r8d
  404c16:	rorx   esi,r11d,0x1f
  404c1c:	mov    r11d,edi
  404c1f:	mov    edi,eax
  404c21:	and    edi,r8d
  404c24:	mov    ecx,edi
  404c26:	mov    edi,r13d
  404c29:	mov    r13d,DWORD PTR [rsp-0x20]
  404c2e:	rorx   r14d,eax,0x2
  404c34:	and    r11d,r9d
  404c37:	mov    eax,DWORD PTR [rsp-0x28]
  404c3b:	mov    DWORD PTR [rsp-0x40],esi
  404c3f:	xor    edi,r13d
  404c42:	or     ecx,r11d
  404c45:	lea    r11d,[rsi+rdx*1-0x70e44324]
  404c4d:	mov    esi,ebp
  404c4f:	add    ecx,r11d
  404c52:	xor    eax,edi
  404c54:	or     esi,r14d
  404c57:	mov    edi,ebp
  404c59:	xor    eax,DWORD PTR [rsp-0x44]
  404c5d:	and    esi,r8d
  404c60:	rorx   r11d,ebp,0x1b
  404c66:	add    r11d,ecx
  404c69:	and    edi,r14d
  404c6c:	mov    edx,edi
  404c6e:	rorx   ecx,eax,0x1f
  404c74:	or     edx,esi
  404c76:	lea    esi,[rcx+r9*1-0x70e44324]
  404c7e:	add    edx,esi
  404c80:	mov    DWORD PTR [rsp-0x38],ecx
  404c84:	mov    ecx,r10d
  404c87:	xor    ecx,r12d
  404c8a:	rorx   esi,r11d,0x1b
  404c90:	add    esi,edx
  404c92:	mov    edx,r13d
  404c95:	xor    ecx,DWORD PTR [rsp-0x54]
  404c99:	xor    edx,ebx
  404c9b:	mov    eax,r11d
  404c9e:	rorx   edi,ebp,0x2
  404ca4:	xor    ecx,r15d
  404ca7:	xor    edx,DWORD PTR [rsp-0x50]
  404cab:	or     eax,edi
  404cad:	mov    ebp,r11d
  404cb0:	mov    r13d,esi
  404cb3:	xor    edx,DWORD PTR [rsp-0x40]
  404cb7:	rorx   r9d,ecx,0x1f
  404cbd:	and    eax,r14d
  404cc0:	rorx   ecx,r11d,0x2
  404cc6:	and    ebp,edi
  404cc8:	or     r13d,ecx
  404ccb:	rorx   r11d,edx,0x1f
  404cd1:	or     ebp,eax
  404cd3:	mov    edx,r13d
  404cd6:	lea    eax,[r9+r8*1-0x70e44324]
  404cde:	mov    r13d,esi
  404ce1:	and    r13d,ecx
  404ce4:	add    ebp,eax
  404ce6:	and    edx,edi
  404ce8:	rorx   eax,esi,0x1b
  404cee:	add    ebp,eax
  404cf0:	mov    eax,r13d
  404cf3:	or     eax,edx
  404cf5:	lea    edx,[r11+r14*1-0x70e44324]
  404cfd:	mov    r14d,DWORD PTR [rsp-0x34]
  404d02:	mov    r10d,r9d
  404d05:	mov    r9d,DWORD PTR [rsp-0x4c]
  404d0a:	xor    r12d,r14d
  404d0d:	add    eax,edx
  404d0f:	xor    r9d,r12d
  404d12:	mov    r12d,ebp
  404d15:	rorx   edx,ebp,0x1b
  404d1b:	mov    r8d,ebp
  404d1e:	add    eax,edx
  404d20:	rorx   edx,esi,0x2
  404d26:	or     r12d,edx
  404d29:	xor    r9d,DWORD PTR [rsp-0x38]
  404d2e:	and    r12d,ecx
  404d31:	and    r8d,edx
  404d34:	rorx   r13d,r9d,0x1f
  404d3a:	or     r8d,r12d
  404d3d:	mov    DWORD PTR [rsp-0x24],r13d
  404d42:	lea    r12d,[r13+rdi*1-0x70e44324]
  404d4a:	mov    r13d,DWORD PTR [rsp-0x30]
  404d4f:	add    r8d,r12d
  404d52:	xor    ebx,r13d
  404d55:	rorx   r12d,eax,0x1b
  404d5b:	mov    esi,eax
  404d5d:	add    r12d,r8d
  404d60:	xor    ebx,DWORD PTR [rsp-0x48]
  404d64:	rorx   ebp,ebp,0x2
  404d6a:	mov    DWORD PTR [rsp-0x34],r10d
  404d6f:	xor    ebx,r10d
  404d72:	or     esi,ebp
  404d74:	mov    r10d,eax
  404d77:	and    esi,edx
  404d79:	and    r10d,ebp
  404d7c:	mov    edi,r14d
  404d7f:	mov    r14d,DWORD PTR [rsp-0x2c]
  404d84:	rorx   ebx,ebx,0x1f
  404d8a:	or     r10d,esi
  404d8d:	mov    r8d,r12d
  404d90:	lea    esi,[rbx+rcx*1-0x70e44324]
  404d97:	rorx   eax,eax,0x2
  404d9d:	add    r10d,esi
  404da0:	or     r8d,eax
  404da3:	xor    edi,r14d
  404da6:	xor    edi,DWORD PTR [rsp-0x44]
  404daa:	rorx   ecx,r12d,0x1b
  404db0:	add    r10d,ecx
  404db3:	mov    ecx,r8d
  404db6:	mov    r8d,r12d
  404db9:	xor    edi,r11d
  404dbc:	and    r8d,eax
  404dbf:	rorx   esi,edi,0x1f
  404dc5:	and    ecx,ebp
  404dc7:	mov    r9d,r8d
  404dca:	mov    edi,r10d
  404dcd:	rorx   r8d,r12d,0x2
  404dd3:	or     r9d,ecx
  404dd6:	mov    r12d,DWORD PTR [rsp-0x28]
  404ddb:	lea    ecx,[rsi+rdx*1-0x70e44324]
  404de2:	or     edi,r8d
  404de5:	mov    DWORD PTR [rsp-0x3c],esi
  404de9:	add    r9d,ecx
  404dec:	mov    esi,r13d
  404def:	mov    ecx,edi
  404df1:	mov    edi,r10d
  404df4:	and    edi,r8d
  404df7:	xor    esi,r12d
  404dfa:	and    ecx,eax
  404dfc:	rorx   edx,r10d,0x1b
  404e02:	xor    esi,r15d
  404e05:	add    r9d,edx
  404e08:	mov    edx,edi
  404e0a:	xor    esi,DWORD PTR [rsp-0x24]
  404e0e:	or     edx,ecx
  404e10:	mov    ecx,DWORD PTR [rsp-0x54]
  404e14:	rorx   r13d,esi,0x1f
  404e1a:	mov    edi,r9d
  404e1d:	lea    ebp,[r13+rbp*1-0x70e44324]
  404e25:	rorx   r10d,r10d,0x2
  404e2b:	add    edx,ebp
  404e2d:	or     edi,r10d
  404e30:	xor    ecx,r14d
  404e33:	xor    ecx,DWORD PTR [rsp-0x40]
  404e37:	rorx   ebp,r9d,0x1b
  404e3d:	add    ebp,edx
  404e3f:	mov    edx,edi
  404e41:	mov    edi,r9d
  404e44:	xor    ecx,ebx
  404e46:	and    edx,r8d
  404e49:	and    edi,r10d
  404e4c:	or     edi,edx
  404e4e:	rorx   r14d,ecx,0x1f
  404e54:	lea    edx,[r14+rax*1-0x70e44324]
  404e5c:	add    edi,edx
  404e5e:	mov    edx,DWORD PTR [rsp-0x50]
  404e62:	rorx   eax,ebp,0x1b
  404e68:	xor    edx,r12d
  404e6b:	add    edi,eax
  404e6d:	mov    eax,ebp
  404e6f:	rorx   r9d,r9d,0x2
  404e75:	xor    edx,DWORD PTR [rsp-0x38]
  404e79:	or     eax,r9d
  404e7c:	mov    esi,ebp
  404e7e:	xor    edx,DWORD PTR [rsp-0x3c]
  404e82:	and    eax,r10d
  404e85:	and    esi,r9d
  404e88:	rorx   r12d,edx,0x1f
  404e8e:	or     esi,eax
  404e90:	rorx   edx,ebp,0x2
  404e96:	lea    eax,[r12+r8*1-0x70e44324]
  404e9e:	mov    ebp,edi
  404ea0:	mov    r8d,DWORD PTR [rsp-0x54]
  404ea5:	or     ebp,edx
  404ea7:	add    esi,eax
  404ea9:	xor    r8d,DWORD PTR [rsp-0x4c]
  404eae:	rorx   eax,edi,0x1b
  404eb4:	add    esi,eax
  404eb6:	mov    eax,ebp
  404eb8:	mov    ebp,edi
  404eba:	xor    r8d,DWORD PTR [rsp-0x34]
  404ebf:	and    ebp,edx
  404ec1:	and    eax,r9d
  404ec4:	xor    r8d,r13d
  404ec7:	mov    ecx,ebp
  404ec9:	rorx   r8d,r8d,0x1f
  404ecf:	or     ecx,eax
  404ed1:	lea    eax,[r8+r10*1-0x70e44324]
  404ed9:	mov    r10d,DWORD PTR [rsp-0x50]
  404ede:	rorx   edi,edi,0x2
  404ee4:	xor    r10d,DWORD PTR [rsp-0x48]
  404ee9:	xor    r10d,r11d
  404eec:	xor    r10d,r14d
  404eef:	rorx   ebp,r10d,0x1f
  404ef5:	mov    r10d,esi
  404ef8:	or     r10d,edi
  404efb:	mov    DWORD PTR [rsp-0x54],r8d
  404f00:	mov    r8d,r10d
  404f03:	mov    r10d,esi
  404f06:	and    r10d,edi
  404f09:	add    ecx,eax
  404f0b:	and    r8d,edx
  404f0e:	rorx   eax,esi,0x1b
  404f14:	add    ecx,eax
  404f16:	mov    eax,r10d
  404f19:	or     eax,r8d
  404f1c:	lea    r8d,[rbp+r9*1-0x70e44324]
  404f24:	mov    r9d,DWORD PTR [rsp-0x4c]
  404f29:	add    eax,r8d
  404f2c:	xor    r9d,DWORD PTR [rsp-0x44]
  404f31:	xor    r9d,DWORD PTR [rsp-0x24]
  404f36:	mov    r10d,ecx
  404f39:	rorx   esi,esi,0x2
  404f3f:	rorx   r8d,ecx,0x1b
  404f45:	add    eax,r8d
  404f48:	xor    r9d,r12d
  404f4b:	or     r10d,esi
  404f4e:	mov    r8d,r10d
  404f51:	mov    r10d,ecx
  404f54:	and    r8d,edi
  404f57:	and    r10d,esi
  404f5a:	rorx   r9d,r9d,0x1f
  404f60:	or     r10d,r8d
  404f63:	lea    r8d,[r9+rdx*1-0x70e44324]
  404f6b:	add    r10d,r8d
  404f6e:	mov    r8d,DWORD PTR [rsp-0x48]
  404f73:	rorx   edx,eax,0x1b
  404f79:	xor    r8d,r15d
  404f7c:	xor    r8d,ebx
  404f7f:	xor    r8d,DWORD PTR [rsp-0x54]
  404f84:	add    r10d,edx
  404f87:	rorx   edx,r8d,0x1f
  404f8d:	mov    r8d,eax
  404f90:	rorx   ecx,ecx,0x2
  404f96:	mov    DWORD PTR [rsp-0x50],r9d
  404f9b:	or     r8d,ecx
  404f9e:	mov    r9d,edx
  404fa1:	mov    edx,eax
  404fa3:	and    r8d,esi
  404fa6:	and    edx,ecx
  404fa8:	or     edx,r8d
  404fab:	lea    r8d,[r9+rdi*1-0x70e44324]
  404fb3:	add    edx,r8d
  404fb6:	rorx   edi,r10d,0x1b
  404fbc:	add    edx,edi
  404fbe:	mov    edi,DWORD PTR [rsp-0x44]
  404fc2:	mov    r8d,ecx
  404fc5:	xor    edi,DWORD PTR [rsp-0x40]
  404fc9:	xor    edi,DWORD PTR [rsp-0x3c]
  404fcd:	rorx   eax,eax,0x2
  404fd3:	xor    r8d,eax
  404fd6:	mov    DWORD PTR [rsp-0x4c],r9d
  404fdb:	xor    edi,ebp
  404fdd:	mov    r9d,r8d
  404fe0:	rorx   edi,edi,0x1f
  404fe6:	xor    r9d,r10d
  404fe9:	lea    esi,[rdi+rsi*1-0x359d3e2a]
  404ff0:	add    r9d,esi
  404ff3:	mov    DWORD PTR [rsp-0x48],edi
  404ff7:	rorx   esi,edx,0x1b
  404ffd:	add    r9d,esi
  405000:	mov    esi,r15d
  405003:	mov    r15d,DWORD PTR [rsp-0x38]
  405008:	mov    r8d,eax
  40500b:	xor    esi,r15d
  40500e:	xor    esi,r13d
  405011:	rorx   r10d,r10d,0x2
  405017:	xor    esi,DWORD PTR [rsp-0x50]
  40501b:	xor    r8d,r10d
  40501e:	rorx   esi,esi,0x1f
  405024:	xor    r8d,edx
  405027:	lea    ecx,[rsi+rcx*1-0x359d3e2a]
  40502e:	add    r8d,ecx
  405031:	rorx   ecx,r9d,0x1b
  405037:	add    r8d,ecx
  40503a:	mov    ecx,DWORD PTR [rsp-0x40]
  40503e:	mov    edi,r10d
  405041:	xor    ecx,DWORD PTR [rsp-0x34]
  405045:	xor    ecx,r14d
  405048:	xor    ecx,DWORD PTR [rsp-0x4c]
  40504c:	rorx   edx,edx,0x2
  405052:	xor    edi,edx
  405054:	rorx   ecx,ecx,0x1f
  40505a:	xor    edi,r9d
  40505d:	lea    eax,[rcx+rax*1-0x359d3e2a]
  405064:	xor    r15d,r11d
  405067:	add    edi,eax
  405069:	rorx   eax,r8d,0x1b
  40506f:	add    edi,eax
  405071:	mov    eax,r15d
  405074:	mov    DWORD PTR [rsp-0x44],esi
  405078:	xor    eax,r12d
  40507b:	mov    esi,edx
  40507d:	xor    eax,DWORD PTR [rsp-0x48]
  405081:	rorx   r9d,r9d,0x2
  405087:	xor    esi,r9d
  40508a:	mov    DWORD PTR [rsp-0x40],ecx
  40508e:	rorx   eax,eax,0x1f
  405094:	xor    esi,r8d
  405097:	lea    ecx,[rax+r10*1-0x359d3e2a]
  40509f:	add    esi,ecx
  4050a1:	mov    r15d,DWORD PTR [rsp-0x24]
  4050a6:	rorx   ecx,edi,0x1b
  4050ac:	add    esi,ecx
  4050ae:	mov    ecx,DWORD PTR [rsp-0x34]
  4050b2:	rorx   r8d,r8d,0x2
  4050b8:	xor    ecx,r15d
  4050bb:	xor    ecx,DWORD PTR [rsp-0x54]
  4050bf:	xor    ecx,DWORD PTR [rsp-0x44]
  4050c3:	rorx   r10d,ecx,0x1f
  4050c9:	mov    ecx,r9d
  4050cc:	xor    ecx,r8d
  4050cf:	xor    ecx,edi
  4050d1:	lea    edx,[r10+rdx*1-0x359d3e2a]
  4050d9:	xor    r11d,ebx
  4050dc:	add    ecx,edx
  4050de:	rorx   edx,esi,0x1b
  4050e4:	add    ecx,edx
  4050e6:	mov    edx,r11d
  4050e9:	xor    edx,ebp
  4050eb:	xor    edx,DWORD PTR [rsp-0x40]
  4050ef:	rorx   r11d,edx,0x1f
  4050f5:	mov    edx,r8d
  4050f8:	rorx   edi,edi,0x2
  4050fe:	xor    edx,edi
  405100:	xor    edx,esi
  405102:	lea    r9d,[r11+r9*1-0x359d3e2a]
  40510a:	add    edx,r9d
  40510d:	rorx   r9d,ecx,0x1b
  405113:	add    edx,r9d
  405116:	mov    r9d,DWORD PTR [rsp-0x50]
  40511b:	xor    r15d,DWORD PTR [rsp-0x3c]
  405120:	xor    r9d,r15d
  405123:	mov    r15d,edi
  405126:	rorx   esi,esi,0x2
  40512c:	xor    r15d,esi
  40512f:	mov    DWORD PTR [rsp-0x38],r11d
  405134:	xor    r9d,eax
  405137:	mov    r11d,r15d
  40513a:	rorx   r9d,r9d,0x1f
  405140:	xor    r11d,ecx
  405143:	lea    r8d,[r9+r8*1-0x359d3e2a]
  40514b:	add    r11d,r8d
  40514e:	rorx   r8d,edx,0x1b
  405154:	add    r11d,r8d
  405157:	mov    r8d,ebx
  40515a:	xor    r8d,r13d
  40515d:	xor    r8d,DWORD PTR [rsp-0x4c]
  405162:	mov    DWORD PTR [rsp-0x34],r10d
  405167:	xor    r8d,r10d
  40516a:	mov    r10d,esi
  40516d:	rorx   ecx,ecx,0x2
  405173:	xor    r10d,ecx
  405176:	rorx   r8d,r8d,0x1f
  40517c:	xor    r10d,edx
  40517f:	lea    edi,[r8+rdi*1-0x359d3e2a]
  405187:	add    r10d,edi
  40518a:	rorx   edi,r11d,0x1b
  405190:	add    r10d,edi
  405193:	mov    edi,DWORD PTR [rsp-0x3c]
  405197:	mov    ebx,ecx
  405199:	xor    edi,r14d
  40519c:	xor    edi,DWORD PTR [rsp-0x48]
  4051a0:	xor    edi,DWORD PTR [rsp-0x38]
  4051a4:	rorx   edx,edx,0x2
  4051aa:	xor    ebx,edx
  4051ac:	rorx   edi,edi,0x1f
  4051b2:	xor    ebx,r11d
  4051b5:	lea    esi,[rdi+rsi*1-0x359d3e2a]
  4051bc:	add    ebx,esi
  4051be:	rorx   esi,r10d,0x1b
  4051c4:	add    ebx,esi
  4051c6:	mov    esi,DWORD PTR [rsp-0x44]
  4051ca:	xor    r13d,r12d
  4051cd:	xor    esi,r13d
  4051d0:	mov    r13d,edx
  4051d3:	rorx   r11d,r11d,0x2
  4051d9:	xor    r13d,r11d
  4051dc:	xor    esi,r9d
  4051df:	mov    r15d,r13d
  4051e2:	rorx   esi,esi,0x1f
  4051e8:	xor    r15d,r10d
  4051eb:	lea    ecx,[rsi+rcx*1-0x359d3e2a]
  4051f2:	add    r15d,ecx
  4051f5:	rorx   ecx,ebx,0x1b
  4051fb:	add    r15d,ecx
  4051fe:	mov    ecx,DWORD PTR [rsp-0x40]
  405202:	xor    r14d,DWORD PTR [rsp-0x54]
  405207:	xor    ecx,r14d
  40520a:	mov    r14d,r11d
  40520d:	rorx   r10d,r10d,0x2
  405213:	xor    ecx,r8d
  405216:	xor    r14d,r10d
  405219:	rorx   ecx,ecx,0x1f
  40521f:	xor    r14d,ebx
  405222:	lea    edx,[rcx+rdx*1-0x359d3e2a]
  405229:	xor    r12d,ebp
  40522c:	add    r14d,edx
  40522f:	rorx   edx,r15d,0x1b
  405235:	add    r14d,edx
  405238:	mov    edx,r12d
  40523b:	xor    edx,eax
  40523d:	mov    r12d,r10d
  405240:	rorx   ebx,ebx,0x2
  405246:	xor    edx,edi
  405248:	xor    r12d,ebx
  40524b:	mov    r13d,r12d
  40524e:	rorx   edx,edx,0x1f
  405254:	xor    r13d,r15d
  405257:	lea    r11d,[rdx+r11*1-0x359d3e2a]
  40525f:	add    r13d,r11d
  405262:	rorx   r11d,r14d,0x1b
  405268:	add    r13d,r11d
  40526b:	mov    r11d,DWORD PTR [rsp-0x54]
  405270:	mov    r12d,ebx
  405273:	xor    r11d,DWORD PTR [rsp-0x50]
  405278:	xor    r11d,DWORD PTR [rsp-0x34]
  40527d:	rorx   r15d,r15d,0x2
  405283:	xor    r11d,esi
  405286:	xor    r12d,r15d
  405289:	xor    r12d,r14d
  40528c:	rorx   r11d,r11d,0x1f
  405292:	lea    r10d,[r11+r10*1-0x359d3e2a]
  40529a:	add    r10d,r12d
  40529d:	rorx   r12d,r13d,0x1b
  4052a3:	add    r12d,r10d
  4052a6:	mov    r10d,DWORD PTR [rsp-0x38]
  4052ab:	xor    ebp,DWORD PTR [rsp-0x4c]
  4052af:	xor    r10d,ebp
  4052b2:	mov    ebp,r15d
  4052b5:	rorx   r14d,r14d,0x2
  4052bb:	xor    r10d,ecx
  4052be:	xor    ebp,r14d
  4052c1:	xor    ebp,r13d
  4052c4:	rorx   r10d,r10d,0x1f
  4052ca:	lea    ebx,[r10+rbx*1-0x359d3e2a]
  4052d2:	add    ebx,ebp
  4052d4:	rorx   ebp,r12d,0x1b
  4052da:	add    ebp,ebx
  4052dc:	mov    ebx,DWORD PTR [rsp-0x50]
  4052e0:	rorx   r13d,r13d,0x2
  4052e6:	xor    ebx,DWORD PTR [rsp-0x48]
  4052ea:	xor    r9d,ebx
  4052ed:	mov    ebx,r14d
  4052f0:	xor    r9d,edx
  4052f3:	xor    ebx,r13d
  4052f6:	rorx   r9d,r9d,0x1f
  4052fc:	xor    ebx,r12d
  4052ff:	lea    r15d,[r9+r15*1-0x359d3e2a]
  405307:	add    ebx,r15d
  40530a:	rorx   r15d,ebp,0x1b
  405310:	add    ebx,r15d
  405313:	mov    r15d,DWORD PTR [rsp-0x4c]
  405318:	rorx   r12d,r12d,0x2
  40531e:	xor    r15d,DWORD PTR [rsp-0x44]
  405323:	xor    r8d,r15d
  405326:	xor    r8d,r11d
  405329:	mov    r11d,r13d
  40532c:	xor    r11d,r12d
  40532f:	xor    r11d,ebp
  405332:	rorx   r8d,r8d,0x1f
  405338:	lea    r14d,[r8+r14*1-0x359d3e2a]
  405340:	add    r14d,r11d
  405343:	mov    r15d,DWORD PTR [rsp-0x40]
  405348:	rorx   r11d,ebx,0x1b
  40534e:	add    r14d,r11d
  405351:	mov    r11d,DWORD PTR [rsp-0x48]
  405356:	rorx   ebp,ebp,0x2
  40535c:	xor    r11d,r15d
  40535f:	xor    edi,r11d
  405362:	xor    edi,r10d
  405365:	mov    r10d,r12d
  405368:	xor    r10d,ebp
  40536b:	xor    r10d,ebx
  40536e:	rorx   edi,edi,0x1f
  405374:	lea    r13d,[rdi+r13*1-0x359d3e2a]
  40537c:	add    r13d,r10d
  40537f:	rorx   r10d,r14d,0x1b
  405385:	add    r13d,r10d
  405388:	mov    r10d,DWORD PTR [rsp-0x44]
  40538d:	xor    r15d,DWORD PTR [rsp-0x34]
  405392:	xor    r10d,eax
  405395:	xor    esi,r10d
  405398:	xor    eax,DWORD PTR [rsp-0x38]
  40539c:	xor    esi,r9d
  40539f:	xor    edx,eax
  4053a1:	rorx   esi,esi,0x1f
  4053a7:	lea    r9d,[r12+rsi*1-0x359d3e2a]
  4053af:	mov    esi,ebp
  4053b1:	rorx   ebx,ebx,0x2
  4053b7:	xor    ecx,r15d
  4053ba:	xor    esi,ebx
  4053bc:	xor    edi,edx
  4053be:	mov    r10d,ebx
  4053c1:	mov    edx,DWORD PTR [rsp-0x1c]
  4053c5:	xor    esi,r14d
  4053c8:	xor    ecx,r8d
  4053cb:	rorx   r14d,r14d,0x2
  4053d1:	xor    r10d,r14d
  4053d4:	rorx   ecx,ecx,0x1f
  4053da:	rorx   edi,edi,0x1f
  4053e0:	lea    r8d,[rbp+rcx*1-0x359d3e2a]
  4053e8:	lea    r15d,[rdx+rdi*1-0x359d3e2a]
  4053f0:	mov    ecx,r10d
  4053f3:	mov    edi,r14d
  4053f6:	add    esi,r9d
  4053f9:	xor    ecx,r13d
  4053fc:	rorx   r9d,r13d,0x1b
  405402:	rorx   r13d,r13d,0x2
  405408:	xor    edi,r13d
  40540b:	add    esi,r9d
  40540e:	add    r15d,ebx
  405411:	mov    ebx,edi
  405413:	add    ecx,r8d
  405416:	xor    ebx,esi
  405418:	add    ebx,r15d
  40541b:	rorx   r8d,esi,0x1b
  405421:	add    ecx,r8d
  405424:	rorx   eax,ecx,0x1b
  40542a:	add    ebx,eax
  40542c:	mov    rax,QWORD PTR [rsp-0x8]
  405431:	add    r13d,DWORD PTR [rsp-0x10]
  405436:	add    ecx,DWORD PTR [rsp-0x18]
  40543a:	rorx   esi,esi,0x2
  405440:	add    esi,DWORD PTR [rsp-0x14]
  405444:	add    r14d,DWORD PTR [rsp-0xc]
  405449:	mov    DWORD PTR [rax],ebx
  40544b:	mov    DWORD PTR [rax+0x4],ecx
  40544e:	mov    DWORD PTR [rax+0x8],esi
  405451:	mov    DWORD PTR [rax+0xc],r13d
  405455:	mov    DWORD PTR [rax+0x10],r14d
  405459:	xor    eax,eax
  40545b:	pop    rbx
  40545c:	pop    rbp
  40545d:	pop    r12
  40545f:	pop    r13
  405461:	pop    r14
  405463:	pop    r15
  405465:	ret    
  405466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405470:	endbr64 
  405474:	movabs rax,0xefcdab8967452301
  40547e:	mov    QWORD PTR [rdi],rax
  405481:	movabs rax,0x1032547698badcfe
  40548b:	mov    QWORD PTR [rdi+0x8],rax
  40548f:	mov    DWORD PTR [rdi+0x10],0xc3d2e1f0
  405496:	mov    QWORD PTR [rdi+0x18],0x0
  40549e:	ret    
  40549f:	nop
  4054a0:	endbr64 
  4054a4:	push   r15
  4054a6:	push   r14
  4054a8:	push   r13
  4054aa:	mov    r13,rsi
  4054ad:	push   r12
  4054af:	push   rbp
  4054b0:	mov    rbp,rdx
  4054b3:	push   rbx
  4054b4:	sub    rsp,0x8
  4054b8:	mov    rax,QWORD PTR [rdi+0x18]
  4054bc:	mov    r14,rax
  4054bf:	shr    r14,0x3
  4054c3:	and    r14d,0x3f
  4054c7:	lea    rax,[rax+rdx*8]
  4054cb:	mov    QWORD PTR [rdi+0x18],rax
  4054cf:	lea    rax,[r14+rdx*1]
  4054d3:	lea    r15,[rdi+r14*1+0x20]
  4054d8:	cmp    rax,0x3f
  4054dc:	ja     405500 <rb_base64_encode@plt+0x2e80>
  4054de:	add    rsp,0x8
  4054e2:	pop    rbx
  4054e3:	mov    rdx,rbp
  4054e6:	pop    rbp
  4054e7:	pop    r12
  4054e9:	mov    rsi,r13
  4054ec:	pop    r13
  4054ee:	pop    r14
  4054f0:	mov    rdi,r15
  4054f3:	pop    r15
  4054f5:	jmp    402660 <memcpy@plt>
  4054fa:	nop    WORD PTR [rax+rax*1+0x0]
  405500:	mov    ebx,0x40
  405505:	sub    rbx,r14
  405508:	mov    r12,rdi
  40550b:	mov    eax,ebx
  40550d:	cmp    ebx,0x8
  405510:	jae    405578 <rb_base64_encode@plt+0x2ef8>
  405512:	test   bl,0x4
  405515:	jne    4055bd <rb_base64_encode@plt+0x2f3d>
  40551b:	test   eax,eax
  40551d:	je     40552d <rb_base64_encode@plt+0x2ead>
  40551f:	movzx  edx,BYTE PTR [rsi]
  405522:	mov    BYTE PTR [r15],dl
  405525:	test   al,0x2
  405527:	jne    4055d0 <rb_base64_encode@plt+0x2f50>
  40552d:	lea    r15,[r12+0x20]
  405532:	mov    rsi,r15
  405535:	mov    rdi,r12
  405538:	call   4041d0 <rb_base64_encode@plt+0x1b50>
  40553d:	mov    eax,0x7f
  405542:	sub    rax,r14
  405545:	cmp    rbp,rax
  405548:	jbe    4055b0 <rb_base64_encode@plt+0x2f30>
  40554a:	nop    WORD PTR [rax+rax*1+0x0]
  405550:	lea    rsi,[r13+rbx*1+0x0]
  405555:	mov    rdi,r12
  405558:	call   4041d0 <rb_base64_encode@plt+0x1b50>
  40555d:	lea    rax,[rbx+0x7f]
  405561:	add    rbx,0x40
  405565:	cmp    rbp,rax
  405568:	ja     405550 <rb_base64_encode@plt+0x2ed0>
  40556a:	add    r13,rbx
  40556d:	sub    rbp,rbx
  405570:	jmp    4054de <rb_base64_encode@plt+0x2e5e>
  405575:	nop    DWORD PTR [rax]
  405578:	mov    rax,QWORD PTR [rsi]
  40557b:	lea    rdi,[r15+0x8]
  40557f:	mov    QWORD PTR [r15],rax
  405582:	mov    eax,ebx
  405584:	and    rdi,0xfffffffffffffff8
  405588:	mov    rdx,QWORD PTR [rsi+rax*1-0x8]
  40558d:	mov    QWORD PTR [r15+rax*1-0x8],rdx
  405592:	sub    r15,rdi
  405595:	lea    eax,[rbx+r15*1]
  405599:	shr    eax,0x3
  40559c:	sub    rsi,r15
  40559f:	mov    ecx,eax
  4055a1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4055a4:	jmp    40552d <rb_base64_encode@plt+0x2ead>
  4055a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055b0:	add    r13,rbx
  4055b3:	lea    rbp,[r14+rbp*1-0x40]
  4055b8:	jmp    4054de <rb_base64_encode@plt+0x2e5e>
  4055bd:	mov    edx,DWORD PTR [rsi]
  4055bf:	mov    DWORD PTR [r15],edx
  4055c2:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
  4055c6:	mov    DWORD PTR [r15+rax*1-0x4],edx
  4055cb:	jmp    40552d <rb_base64_encode@plt+0x2ead>
  4055d0:	movzx  edx,WORD PTR [rsi+rax*1-0x2]
  4055d5:	mov    WORD PTR [r15+rax*1-0x2],dx
  4055db:	jmp    40552d <rb_base64_encode@plt+0x2ead>
  4055e0:	endbr64 
  4055e4:	push   r12
  4055e6:	mov    edx,0x1
  4055eb:	push   rbp
  4055ec:	mov    rbp,rsi
  4055ef:	lea    rsi,[rip+0xcca]        # 4062c0 <rb_base64_encode@plt+0x3c40>
  4055f6:	push   rbx
  4055f7:	mov    rbx,rdi
  4055fa:	sub    rsp,0x10
  4055fe:	mov    rax,QWORD PTR fs:0x28
  405607:	mov    QWORD PTR [rsp+0x8],rax
  40560c:	xor    eax,eax
  40560e:	movbe  rax,QWORD PTR [rdi+0x18]
  405614:	mov    QWORD PTR [rsp],rax
  405618:	call   4054a0 <rb_base64_encode@plt+0x2e20>
  40561d:	mov    rax,QWORD PTR [rbx+0x18]
  405621:	and    eax,0x1f8
  405626:	cmp    rax,0x1c0
  40562c:	je     405659 <rb_base64_encode@plt+0x2fd9>
  40562e:	lea    r12,[rip+0xc8d]        # 4062c2 <rb_base64_encode@plt+0x3c42>
  405635:	nop    DWORD PTR [rax]
  405638:	mov    edx,0x1
  40563d:	mov    rsi,r12
  405640:	mov    rdi,rbx
  405643:	call   4054a0 <rb_base64_encode@plt+0x2e20>
  405648:	mov    rax,QWORD PTR [rbx+0x18]
  40564c:	and    eax,0x1f8
  405651:	cmp    rax,0x1c0
  405657:	jne    405638 <rb_base64_encode@plt+0x2fb8>
  405659:	mov    rsi,rsp
  40565c:	mov    edx,0x8
  405661:	mov    rdi,rbx
  405664:	call   4054a0 <rb_base64_encode@plt+0x2e20>
  405669:	xor    eax,eax
  40566b:	nop    DWORD PTR [rax+rax*1+0x0]
  405670:	mov    ecx,eax
  405672:	mov    edx,eax
  405674:	shr    ecx,0x2
  405677:	not    edx
  405679:	mov    ecx,DWORD PTR [rbx+rcx*4]
  40567c:	and    edx,0x3
  40567f:	shl    edx,0x3
  405682:	shrx   edx,ecx,edx
  405687:	mov    BYTE PTR [rbp+rax*1+0x0],dl
  40568b:	inc    rax
  40568e:	cmp    rax,0x14
  405692:	jne    405670 <rb_base64_encode@plt+0x2ff0>
  405694:	lea    rdi,[rbx+0x8]
  405698:	and    rdi,0xfffffffffffffff8
  40569c:	mov    QWORD PTR [rbx],0x0
  4056a3:	mov    QWORD PTR [rbx+0x58],0x0
  4056ab:	sub    rbx,rdi
  4056ae:	lea    ecx,[rbx+0x60]
  4056b1:	shr    ecx,0x3
  4056b4:	xor    eax,eax
  4056b6:	rep stos QWORD PTR es:[rdi],rax
  4056b9:	mov    rax,QWORD PTR [rsp+0x8]
  4056be:	xor    rax,QWORD PTR fs:0x28
  4056c7:	jne    4056d2 <rb_base64_encode@plt+0x3052>
  4056c9:	add    rsp,0x10
  4056cd:	pop    rbx
  4056ce:	pop    rbp
  4056cf:	pop    r12
  4056d1:	ret    
  4056d2:	call   402580 <__stack_chk_fail@plt>
  4056d7:	nop    WORD PTR [rax+rax*1+0x0]
  4056e0:	endbr64 
  4056e4:	push   r15
  4056e6:	lea    r15,[rip+0x26fb]        # 407de8 <rb_base64_encode@plt+0x5768>
  4056ed:	push   r14
  4056ef:	mov    r14,rdx
  4056f2:	push   r13
  4056f4:	mov    r13,rsi
  4056f7:	push   r12
  4056f9:	mov    r12d,edi
  4056fc:	push   rbp
  4056fd:	lea    rbp,[rip+0x26ec]        # 407df0 <rb_base64_encode@plt+0x5770>
  405704:	push   rbx
  405705:	sub    rbp,r15
  405708:	sub    rsp,0x8
  40570c:	call   402000 <dup2@plt-0x360>
  405711:	sar    rbp,0x3
  405715:	je     405736 <rb_base64_encode@plt+0x30b6>
  405717:	xor    ebx,ebx
  405719:	nop    DWORD PTR [rax+0x0]
  405720:	mov    rdx,r14
  405723:	mov    rsi,r13
  405726:	mov    edi,r12d
  405729:	call   QWORD PTR [r15+rbx*8]
  40572d:	add    rbx,0x1
  405731:	cmp    rbp,rbx
  405734:	jne    405720 <rb_base64_encode@plt+0x30a0>
  405736:	add    rsp,0x8
  40573a:	pop    rbx
  40573b:	pop    rbp
  40573c:	pop    r12
  40573e:	pop    r13
  405740:	pop    r14
  405742:	pop    r15
  405744:	ret    
  405745:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405750:	endbr64 
  405754:	ret    

Disassembly of section .fini:

0000000000405758 <.fini>:
  405758:	endbr64 
  40575c:	sub    rsp,0x8
  405760:	add    rsp,0x8
  405764:	ret    
