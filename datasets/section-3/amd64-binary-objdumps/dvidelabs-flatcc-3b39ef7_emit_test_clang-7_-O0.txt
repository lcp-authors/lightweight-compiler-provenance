
../repos/dvidelabs-flatcc-3b39ef7/test/emit_test/emit_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xdfe1]        # 410ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xdfe2]        # 411008 <flatcc_builder_padding_base@@Base+0x4ac8>
  403026:	jmp    QWORD PTR [rip+0xdfe4]        # 411010 <flatcc_builder_padding_base@@Base+0x4ad0>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xdfe2]        # 411018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xdfda]        # 411020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xdfd2]        # 411028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <printf@plt>:
  403060:	jmp    QWORD PTR [rip+0xdfca]        # 411030 <printf@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__assert_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xdfc2]        # 411038 <__assert_fail@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memset@plt>:
  403080:	jmp    QWORD PTR [rip+0xdfba]        # 411040 <memset@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memchr@plt>:
  403090:	jmp    QWORD PTR [rip+0xdfb2]        # 411048 <memchr@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xdfaa]        # 411050 <memcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <fprintf@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xdfa2]        # 411058 <fprintf@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memcpy@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xdf9a]        # 411060 <memcpy@GLIBC_2.14>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <malloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xdf92]        # 411068 <malloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <realloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xdf8a]        # 411070 <realloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <posix_memalign@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xdf82]        # 411078 <posix_memalign@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403100 <_start@@Base>:
  403100:	endbr64 
  403104:	xor    ebp,ebp
  403106:	mov    r9,rdx
  403109:	pop    rsi
  40310a:	mov    rdx,rsp
  40310d:	and    rsp,0xfffffffffffffff0
  403111:	push   rax
  403112:	push   rsp
  403113:	mov    r8,0x40b060
  40311a:	mov    rcx,0x40aff0
  403121:	mov    rdi,0x403f60
  403128:	call   QWORD PTR [rip+0xdeba]        # 410fe8 <__libc_start_main@GLIBC_2.2.5>
  40312e:	hlt    
  40312f:	nop
  403130:	endbr64 
  403134:	ret    
  403135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40313f:	nop
  403140:	mov    eax,0x411090
  403145:	cmp    rax,0x411090
  40314b:	je     403160 <_start@@Base+0x60>
  40314d:	mov    eax,0x0
  403152:	test   rax,rax
  403155:	je     403160 <_start@@Base+0x60>
  403157:	mov    edi,0x411090
  40315c:	jmp    rax
  40315e:	xchg   ax,ax
  403160:	ret    
  403161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	mov    esi,0x411090
  403175:	sub    rsi,0x411090
  40317c:	mov    rax,rsi
  40317f:	shr    rsi,0x3f
  403183:	sar    rax,0x3
  403187:	add    rsi,rax
  40318a:	sar    rsi,1
  40318d:	je     4031a0 <_start@@Base+0xa0>
  40318f:	mov    eax,0x0
  403194:	test   rax,rax
  403197:	je     4031a0 <_start@@Base+0xa0>
  403199:	mov    edi,0x411090
  40319e:	jmp    rax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	cmp    BYTE PTR [rip+0xded5],0x0        # 411090 <__bss_start@@Base>
  4031bb:	jne    4031d0 <_start@@Base+0xd0>
  4031bd:	push   rbp
  4031be:	mov    rbp,rsp
  4031c1:	call   403140 <_start@@Base+0x40>
  4031c6:	mov    BYTE PTR [rip+0xdec3],0x1        # 411090 <__bss_start@@Base>
  4031cd:	pop    rbp
  4031ce:	ret    
  4031cf:	nop
  4031d0:	ret    
  4031d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	endbr64 
  4031e4:	jmp    403170 <_start@@Base+0x70>
  4031e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031f0 <dbg_emitter@@Base>:
  4031f0:	push   rbp
  4031f1:	mov    rbp,rsp
  4031f4:	sub    rsp,0x30
  4031f8:	mov    QWORD PTR [rbp-0x8],rdi
  4031fc:	mov    QWORD PTR [rbp-0x10],rsi
  403200:	mov    DWORD PTR [rbp-0x14],edx
  403203:	mov    DWORD PTR [rbp-0x18],ecx
  403206:	mov    QWORD PTR [rbp-0x20],r8
  40320a:	mov    esi,DWORD PTR [rbp-0x14]
  40320d:	movsxd rdx,DWORD PTR [rbp-0x18]
  403211:	mov    rcx,QWORD PTR [rbp-0x20]
  403215:	lea    rdi,[rip+0x8dec]        # 40c008 <_IO_stdin_used@@Base+0x8>
  40321c:	mov    al,0x0
  40321e:	call   403060 <printf@plt>
  403223:	mov    DWORD PTR [rbp-0x24],0x0
  40322a:	mov    DWORD PTR [rbp-0x28],eax
  40322d:	mov    eax,DWORD PTR [rbp-0x24]
  403230:	cmp    eax,DWORD PTR [rbp-0x14]
  403233:	jge    4032ea <dbg_emitter@@Base+0xfa>
  403239:	lea    rax,[rip+0x9300]        # 40c540 <flatcc_builder_padding_base@@Base>
  403240:	mov    rcx,QWORD PTR [rbp-0x10]
  403244:	movsxd rdx,DWORD PTR [rbp-0x24]
  403248:	shl    rdx,0x4
  40324c:	add    rcx,rdx
  40324f:	cmp    QWORD PTR [rcx],rax
  403252:	jne    403280 <dbg_emitter@@Base+0x90>
  403258:	movsxd rsi,DWORD PTR [rbp-0x18]
  40325c:	mov    rax,QWORD PTR [rbp-0x10]
  403260:	movsxd rcx,DWORD PTR [rbp-0x24]
  403264:	shl    rcx,0x4
  403268:	add    rax,rcx
  40326b:	mov    rdx,QWORD PTR [rax+0x8]
  40326f:	lea    rdi,[rip+0x8dc3]        # 40c039 <_IO_stdin_used@@Base+0x39>
  403276:	mov    al,0x0
  403278:	call   403060 <printf@plt>
  40327d:	mov    DWORD PTR [rbp-0x2c],eax
  403280:	mov    rax,QWORD PTR [rbp-0x10]
  403284:	movsxd rcx,DWORD PTR [rbp-0x24]
  403288:	shl    rcx,0x4
  40328c:	add    rax,rcx
  40328f:	cmp    QWORD PTR [rax],0x0
  403293:	jne    4032c1 <dbg_emitter@@Base+0xd1>
  403299:	movsxd rsi,DWORD PTR [rbp-0x18]
  40329d:	mov    rax,QWORD PTR [rbp-0x10]
  4032a1:	movsxd rcx,DWORD PTR [rbp-0x24]
  4032a5:	shl    rcx,0x4
  4032a9:	add    rax,rcx
  4032ac:	mov    rdx,QWORD PTR [rax+0x8]
  4032b0:	lea    rdi,[rip+0x8da3]        # 40c05a <_IO_stdin_used@@Base+0x5a>
  4032b7:	mov    al,0x0
  4032b9:	call   403060 <printf@plt>
  4032be:	mov    DWORD PTR [rbp-0x30],eax
  4032c1:	mov    rax,QWORD PTR [rbp-0x10]
  4032c5:	movsxd rcx,DWORD PTR [rbp-0x24]
  4032c9:	shl    rcx,0x4
  4032cd:	add    rax,rcx
  4032d0:	mov    rax,QWORD PTR [rax+0x8]
  4032d4:	mov    edx,eax
  4032d6:	add    edx,DWORD PTR [rbp-0x18]
  4032d9:	mov    DWORD PTR [rbp-0x18],edx
  4032dc:	mov    eax,DWORD PTR [rbp-0x24]
  4032df:	add    eax,0x1
  4032e2:	mov    DWORD PTR [rbp-0x24],eax
  4032e5:	jmp    40322d <dbg_emitter@@Base+0x3d>
  4032ea:	xor    eax,eax
  4032ec:	add    rsp,0x30
  4032f0:	pop    rbp
  4032f1:	ret    
  4032f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]

0000000000403300 <debug_test@@Base>:
  403300:	push   rbp
  403301:	mov    rbp,rsp
  403304:	sub    rsp,0x1e0
  40330b:	xor    esi,esi
  40330d:	mov    eax,0x28
  403312:	mov    edx,eax
  403314:	lea    rcx,[rbp-0x1c0]
  40331b:	mov    rdi,rcx
  40331e:	call   403080 <memset@plt>
  403323:	lea    rcx,[rbp-0x188]
  40332a:	mov    QWORD PTR [rbp-0x190],rcx
  403331:	lea    rdi,[rip+0x8d50]        # 40c088 <_IO_stdin_used@@Base+0x88>
  403338:	mov    al,0x0
  40333a:	call   403060 <printf@plt>
  40333f:	lea    rsi,[rip+0xfffffffffffffeaa]        # 4031f0 <dbg_emitter@@Base>
  403346:	xor    r8d,r8d
  403349:	mov    ecx,r8d
  40334c:	mov    rdi,QWORD PTR [rbp-0x190]
  403353:	mov    rdx,rcx
  403356:	mov    QWORD PTR [rbp-0x1c8],rcx
  40335d:	mov    r8,QWORD PTR [rbp-0x1c8]
  403364:	mov    DWORD PTR [rbp-0x1cc],eax
  40336a:	call   4047b0 <flatcc_builder_custom_init@@Base>
  40336f:	mov    r9d,0xa
  403375:	mov    edx,r9d
  403378:	lea    rsi,[rbp-0x1c0]
  40337f:	mov    rdi,QWORD PTR [rbp-0x190]
  403386:	mov    rcx,QWORD PTR [rbp-0x190]
  40338d:	mov    QWORD PTR [rbp-0x1d8],rdi
  403394:	mov    rdi,rcx
  403397:	mov    DWORD PTR [rbp-0x1dc],eax
  40339d:	call   403460 <debug_test@@Base+0x160>
  4033a2:	mov    r9d,0x2a
  4033a8:	mov    esi,r9d
  4033ab:	mov    rdi,QWORD PTR [rbp-0x1d8]
  4033b2:	mov    edx,0x1
  4033b7:	mov    ecx,eax
  4033b9:	call   4033e0 <debug_test@@Base+0xe0>
  4033be:	mov    rdi,QWORD PTR [rbp-0x190]
  4033c5:	mov    DWORD PTR [rbp-0x1e0],eax
  4033cb:	call   404b30 <flatcc_builder_clear@@Base>
  4033d0:	xor    eax,eax
  4033d2:	add    rsp,0x1e0
  4033d9:	pop    rbp
  4033da:	ret    
  4033db:	nop    DWORD PTR [rax+rax*1+0x0]
  4033e0:	push   rbp
  4033e1:	mov    rbp,rsp
  4033e4:	sub    rsp,0x30
  4033e8:	mov    al,dl
  4033ea:	xor    edx,edx
  4033ec:	mov    r8d,edx
  4033ef:	mov    QWORD PTR [rbp-0x10],rdi
  4033f3:	mov    QWORD PTR [rbp-0x18],rsi
  4033f7:	mov    BYTE PTR [rbp-0x19],al
  4033fa:	mov    DWORD PTR [rbp-0x20],ecx
  4033fd:	mov    rdi,QWORD PTR [rbp-0x10]
  403401:	mov    rsi,r8
  403404:	call   403fa0 <main@@Base+0x40>
  403409:	cmp    eax,0x0
  40340c:	je     40341e <debug_test@@Base+0x11e>
  403412:	mov    DWORD PTR [rbp-0x4],0x0
  403419:	jmp    403457 <debug_test@@Base+0x157>
  40341e:	mov    rdi,QWORD PTR [rbp-0x10]
  403422:	mov    rax,QWORD PTR [rbp-0x10]
  403426:	mov    rsi,QWORD PTR [rbp-0x18]
  40342a:	mov    cl,BYTE PTR [rbp-0x19]
  40342d:	mov    edx,DWORD PTR [rbp-0x20]
  403430:	mov    QWORD PTR [rbp-0x28],rdi
  403434:	mov    rdi,rax
  403437:	movzx  r8d,cl
  40343b:	mov    DWORD PTR [rbp-0x2c],edx
  40343e:	mov    edx,r8d
  403441:	mov    ecx,DWORD PTR [rbp-0x2c]
  403444:	call   404000 <main@@Base+0xa0>
  403449:	mov    rdi,QWORD PTR [rbp-0x28]
  40344d:	mov    esi,eax
  40344f:	call   403fd0 <main@@Base+0x70>
  403454:	mov    DWORD PTR [rbp-0x4],eax
  403457:	mov    eax,DWORD PTR [rbp-0x4]
  40345a:	add    rsp,0x30
  40345e:	pop    rbp
  40345f:	ret    
  403460:	push   rbp
  403461:	mov    rbp,rsp
  403464:	sub    rsp,0x20
  403468:	mov    eax,0x4
  40346d:	mov    ecx,eax
  40346f:	mov    eax,0x3fffffff
  403474:	mov    r9d,eax
  403477:	mov    QWORD PTR [rbp-0x8],rdi
  40347b:	mov    QWORD PTR [rbp-0x10],rsi
  40347f:	mov    QWORD PTR [rbp-0x18],rdx
  403483:	mov    rdi,QWORD PTR [rbp-0x8]
  403487:	mov    rdx,QWORD PTR [rbp-0x10]
  40348b:	mov    rsi,QWORD PTR [rbp-0x18]
  40348f:	mov    QWORD PTR [rbp-0x20],rsi
  403493:	mov    rsi,rdx
  403496:	mov    rdx,QWORD PTR [rbp-0x20]
  40349a:	mov    r8d,0x4
  4034a0:	call   408000 <flatcc_builder_create_vector@@Base>
  4034a5:	add    rsp,0x20
  4034a9:	pop    rbp
  4034aa:	ret    
  4034ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004034b0 <emit_test@@Base>:
  4034b0:	push   rbp
  4034b1:	mov    rbp,rsp
  4034b4:	sub    rsp,0x240
  4034bb:	mov    eax,0x3b
  4034c0:	mov    edx,eax
  4034c2:	lea    rcx,[rbp-0x40]
  4034c6:	mov    rdi,rcx
  4034c9:	lea    rsi,[rip+0x9000]        # 40c4d0 <_IO_stdin_used@@Base+0x4d0>
  4034d0:	call   4030c0 <memcpy@plt>
  4034d5:	mov    rcx,QWORD PTR [rip+0x9034]        # 40c510 <_IO_stdin_used@@Base+0x510>
  4034dc:	mov    QWORD PTR [rbp-0x200],rcx
  4034e3:	mov    rcx,QWORD PTR [rip+0x902e]        # 40c518 <_IO_stdin_used@@Base+0x518>
  4034ea:	mov    QWORD PTR [rbp-0x1f8],rcx
  4034f1:	lea    rcx,[rbp-0x1e0]
  4034f8:	mov    QWORD PTR [rbp-0x1e8],rcx
  4034ff:	mov    rdi,QWORD PTR [rbp-0x1e8]
  403506:	call   404870 <flatcc_builder_init@@Base>
  40350b:	mov    rdi,QWORD PTR [rbp-0x1e8]
  403512:	mov    DWORD PTR [rbp-0x214],eax
  403518:	call   40a110 <flatcc_builder_get_emit_context@@Base>
  40351d:	mov    r8d,0x4
  403523:	mov    edx,r8d
  403526:	lea    rsi,[rbp-0x200]
  40352d:	mov    QWORD PTR [rbp-0x58],rax
  403531:	mov    rdi,QWORD PTR [rbp-0x1e8]
  403538:	call   403460 <debug_test@@Base+0x160>
  40353d:	mov    r8d,0x2a
  403543:	mov    esi,r8d
  403546:	mov    DWORD PTR [rbp-0x1ec],eax
  40354c:	mov    rdi,QWORD PTR [rbp-0x1e8]
  403553:	mov    ecx,DWORD PTR [rbp-0x1ec]
  403559:	mov    edx,0x1
  40355e:	call   4033e0 <debug_test@@Base+0xe0>
  403563:	mov    rdi,QWORD PTR [rbp-0x58]
  403567:	lea    rsi,[rbp-0x48]
  40356b:	mov    DWORD PTR [rbp-0x218],eax
  403571:	call   4038a0 <emit_test@@Base+0x3f0>
  403576:	mov    QWORD PTR [rbp-0x50],rax
  40357a:	cmp    QWORD PTR [rbp-0x50],0x0
  40357f:	jne    403591 <emit_test@@Base+0xe1>
  403585:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40358c:	jmp    40388d <emit_test@@Base+0x3dd>
  403591:	jmp    403596 <emit_test@@Base+0xe6>
  403596:	mov    rax,QWORD PTR [rbp-0x48]
  40359a:	mov    rdi,QWORD PTR [rbp-0x58]
  40359e:	mov    QWORD PTR [rbp-0x220],rax
  4035a5:	call   403910 <emit_test@@Base+0x460>
  4035aa:	mov    rdi,QWORD PTR [rbp-0x220]
  4035b1:	cmp    rdi,rax
  4035b4:	je     4035d9 <emit_test@@Base+0x129>
  4035ba:	lea    rdi,[rip+0xa351]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4035c1:	lea    rsi,[rip+0x8b13]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  4035c8:	mov    edx,0x64
  4035cd:	lea    rcx,[rip+0x8b6c]        # 40c140 <_IO_stdin_used@@Base+0x140>
  4035d4:	call   403070 <__assert_fail@plt>
  4035d9:	jmp    4035de <emit_test@@Base+0x12e>
  4035de:	jmp    4035e3 <emit_test@@Base+0x133>
  4035e3:	mov    rax,QWORD PTR [rbp-0x48]
  4035e7:	mov    rdi,QWORD PTR [rbp-0x1e8]
  4035ee:	mov    QWORD PTR [rbp-0x228],rax
  4035f5:	call   409b80 <flatcc_builder_get_buffer_size@@Base>
  4035fa:	mov    rdi,QWORD PTR [rbp-0x228]
  403601:	cmp    rdi,rax
  403604:	je     403629 <emit_test@@Base+0x179>
  40360a:	lea    rdi,[rip+0xa301]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  403611:	lea    rsi,[rip+0x8ac3]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  403618:	mov    edx,0x65
  40361d:	lea    rcx,[rip+0x8b1c]        # 40c140 <_IO_stdin_used@@Base+0x140>
  403624:	call   403070 <__assert_fail@plt>
  403629:	jmp    40362e <emit_test@@Base+0x17e>
  40362e:	mov    rax,QWORD PTR [rip+0xd9c3]        # 410ff8 <stderr@GLIBC_2.2.5>
  403635:	mov    rdi,QWORD PTR [rax]
  403638:	mov    rax,QWORD PTR [rbp-0x48]
  40363c:	mov    ecx,eax
  40363e:	lea    rsi,[rip+0x8b0b]        # 40c150 <_IO_stdin_used@@Base+0x150>
  403645:	mov    edx,ecx
  403647:	mov    al,0x0
  403649:	call   4030b0 <fprintf@plt>
  40364e:	mov    rsi,QWORD PTR [rip+0xd9a3]        # 410ff8 <stderr@GLIBC_2.2.5>
  403655:	mov    rdi,QWORD PTR [rbp-0x50]
  403659:	mov    rdx,QWORD PTR [rbp-0x48]
  40365d:	mov    rcx,QWORD PTR [rsi]
  403660:	lea    rsi,[rip+0x8afa]        # 40c161 <_IO_stdin_used@@Base+0x161>
  403667:	mov    QWORD PTR [rbp-0x230],rdi
  40366e:	mov    rdi,rsi
  403671:	mov    rsi,QWORD PTR [rbp-0x230]
  403678:	mov    DWORD PTR [rbp-0x234],eax
  40367e:	call   403930 <emit_test@@Base+0x480>
  403683:	cmp    QWORD PTR [rbp-0x48],0x3a
  403688:	je     4036ad <emit_test@@Base+0x1fd>
  40368e:	lea    rdi,[rip+0xa27d]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  403695:	lea    rsi,[rip+0x8a3f]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  40369c:	mov    edx,0x6a
  4036a1:	lea    rcx,[rip+0x8a98]        # 40c140 <_IO_stdin_used@@Base+0x140>
  4036a8:	call   403070 <__assert_fail@plt>
  4036ad:	jmp    4036b2 <emit_test@@Base+0x202>
  4036b2:	jmp    4036b7 <emit_test@@Base+0x207>
  4036b7:	mov    eax,0x3a
  4036bc:	mov    ecx,eax
  4036be:	cmp    rcx,QWORD PTR [rbp-0x48]
  4036c2:	je     4036e7 <emit_test@@Base+0x237>
  4036c8:	lea    rdi,[rip+0xa243]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4036cf:	lea    rsi,[rip+0x8a05]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  4036d6:	mov    edx,0x6b
  4036db:	lea    rcx,[rip+0x8a5e]        # 40c140 <_IO_stdin_used@@Base+0x140>
  4036e2:	call   403070 <__assert_fail@plt>
  4036e7:	jmp    4036ec <emit_test@@Base+0x23c>
  4036ec:	jmp    4036f1 <emit_test@@Base+0x241>
  4036f1:	xor    eax,eax
  4036f3:	lea    rsi,[rbp-0x40]
  4036f7:	mov    rdi,QWORD PTR [rbp-0x50]
  4036fb:	mov    rdx,QWORD PTR [rbp-0x48]
  4036ff:	mov    DWORD PTR [rbp-0x238],eax
  403705:	call   4030a0 <memcmp@plt>
  40370a:	mov    ecx,DWORD PTR [rbp-0x238]
  403710:	cmp    ecx,eax
  403712:	je     403737 <emit_test@@Base+0x287>
  403718:	lea    rdi,[rip+0xa1f3]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  40371f:	lea    rsi,[rip+0x89b5]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  403726:	mov    edx,0x6c
  40372b:	lea    rcx,[rip+0x8a0e]        # 40c140 <_IO_stdin_used@@Base+0x140>
  403732:	call   403070 <__assert_fail@plt>
  403737:	jmp    40373c <emit_test@@Base+0x28c>
  40373c:	mov    rdi,QWORD PTR [rbp-0x50]
  403740:	call   403b00 <emit_test@@Base+0x650>
  403745:	mov    QWORD PTR [rbp-0x208],rax
  40374c:	mov    rdi,QWORD PTR [rbp-0x208]
  403753:	call   403b70 <emit_test@@Base+0x6c0>
  403758:	mov    QWORD PTR [rbp-0x210],rax
  40375f:	cmp    QWORD PTR [rbp-0x210],0x2a
  403767:	je     40378c <emit_test@@Base+0x2dc>
  40376d:	lea    rdi,[rip+0xa19e]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  403774:	lea    rsi,[rip+0x8960]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  40377b:	mov    edx,0x70
  403780:	lea    rcx,[rip+0x89b9]        # 40c140 <_IO_stdin_used@@Base+0x140>
  403787:	call   403070 <__assert_fail@plt>
  40378c:	jmp    403791 <emit_test@@Base+0x2e1>
  403791:	jmp    403796 <emit_test@@Base+0x2e6>
  403796:	mov    rdi,QWORD PTR [rbp-0x208]
  40379d:	call   403c80 <emit_test@@Base+0x7d0>
  4037a2:	movzx  ecx,al
  4037a5:	cmp    ecx,0x1
  4037a8:	je     4037cd <emit_test@@Base+0x31d>
  4037ae:	lea    rdi,[rip+0xa15d]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4037b5:	lea    rsi,[rip+0x891f]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  4037bc:	mov    edx,0x71
  4037c1:	lea    rcx,[rip+0x8978]        # 40c140 <_IO_stdin_used@@Base+0x140>
  4037c8:	call   403070 <__assert_fail@plt>
  4037cd:	jmp    4037d2 <emit_test@@Base+0x322>
  4037d2:	jmp    4037d7 <emit_test@@Base+0x327>
  4037d7:	mov    rdi,QWORD PTR [rbp-0x208]
  4037de:	call   403db0 <emit_test@@Base+0x900>
  4037e3:	mov    rdi,rax
  4037e6:	call   403d90 <emit_test@@Base+0x8e0>
  4037eb:	cmp    rax,0x4
  4037ef:	je     403814 <emit_test@@Base+0x364>
  4037f5:	lea    rdi,[rip+0xa116]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4037fc:	lea    rsi,[rip+0x88d8]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  403803:	mov    edx,0x72
  403808:	lea    rcx,[rip+0x8931]        # 40c140 <_IO_stdin_used@@Base+0x140>
  40380f:	call   403070 <__assert_fail@plt>
  403814:	jmp    403819 <emit_test@@Base+0x369>
  403819:	jmp    40381e <emit_test@@Base+0x36e>
  40381e:	mov    rdi,QWORD PTR [rbp-0x208]
  403825:	call   403db0 <emit_test@@Base+0x900>
  40382a:	mov    ecx,0x2
  40382f:	mov    esi,ecx
  403831:	mov    rdi,rax
  403834:	call   403ee0 <emit_test@@Base+0xa30>
  403839:	vmovss xmm1,DWORD PTR [rip+0x87c3]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403841:	vucomiss xmm0,xmm1
  403845:	jne    403856 <emit_test@@Base+0x3a6>
  40384b:	jp     403856 <emit_test@@Base+0x3a6>
  403851:	jmp    403875 <emit_test@@Base+0x3c5>
  403856:	lea    rdi,[rip+0xa0b5]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  40385d:	lea    rsi,[rip+0x8877]        # 40c0db <_IO_stdin_used@@Base+0xdb>
  403864:	mov    edx,0x73
  403869:	lea    rcx,[rip+0x88d0]        # 40c140 <_IO_stdin_used@@Base+0x140>
  403870:	call   403070 <__assert_fail@plt>
  403875:	jmp    40387a <emit_test@@Base+0x3ca>
  40387a:	mov    rdi,QWORD PTR [rbp-0x1e8]
  403881:	call   404b30 <flatcc_builder_clear@@Base>
  403886:	mov    DWORD PTR [rbp-0x4],0x0
  40388d:	mov    eax,DWORD PTR [rbp-0x4]
  403890:	add    rsp,0x240
  403897:	pop    rbp
  403898:	ret    
  403899:	nop    DWORD PTR [rax+0x0]
  4038a0:	push   rbp
  4038a1:	mov    rbp,rsp
  4038a4:	mov    QWORD PTR [rbp-0x10],rdi
  4038a8:	mov    QWORD PTR [rbp-0x18],rsi
  4038ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4038b0:	mov    rsi,QWORD PTR [rsi]
  4038b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4038b7:	cmp    rsi,QWORD PTR [rdi+0x8]
  4038bb:	jne    4038ec <emit_test@@Base+0x43c>
  4038c1:	cmp    QWORD PTR [rbp-0x18],0x0
  4038c6:	je     4038db <emit_test@@Base+0x42b>
  4038cc:	mov    rax,QWORD PTR [rbp-0x10]
  4038d0:	mov    rax,QWORD PTR [rax+0x30]
  4038d4:	mov    rcx,QWORD PTR [rbp-0x18]
  4038d8:	mov    QWORD PTR [rcx],rax
  4038db:	mov    rax,QWORD PTR [rbp-0x10]
  4038df:	mov    rax,QWORD PTR [rax+0x10]
  4038e3:	mov    QWORD PTR [rbp-0x8],rax
  4038e7:	jmp    40390a <emit_test@@Base+0x45a>
  4038ec:	cmp    QWORD PTR [rbp-0x18],0x0
  4038f1:	je     403902 <emit_test@@Base+0x452>
  4038f7:	mov    rax,QWORD PTR [rbp-0x18]
  4038fb:	mov    QWORD PTR [rax],0x0
  403902:	mov    QWORD PTR [rbp-0x8],0x0
  40390a:	mov    rax,QWORD PTR [rbp-0x8]
  40390e:	pop    rbp
  40390f:	ret    
  403910:	push   rbp
  403911:	mov    rbp,rsp
  403914:	mov    QWORD PTR [rbp-0x8],rdi
  403918:	mov    rdi,QWORD PTR [rbp-0x8]
  40391c:	mov    rax,QWORD PTR [rdi+0x30]
  403920:	pop    rbp
  403921:	ret    
  403922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40392c:	nop    DWORD PTR [rax+0x0]
  403930:	push   rbp
  403931:	mov    rbp,rsp
  403934:	sub    rsp,0x70
  403938:	mov    QWORD PTR [rbp-0x8],rdi
  40393c:	mov    QWORD PTR [rbp-0x10],rsi
  403940:	mov    QWORD PTR [rbp-0x18],rdx
  403944:	mov    QWORD PTR [rbp-0x20],rcx
  403948:	mov    rcx,QWORD PTR [rbp-0x10]
  40394c:	mov    QWORD PTR [rbp-0x48],rcx
  403950:	cmp    QWORD PTR [rbp-0x8],0x0
  403955:	je     403974 <emit_test@@Base+0x4c4>
  40395b:	mov    rdi,QWORD PTR [rbp-0x20]
  40395f:	mov    rdx,QWORD PTR [rbp-0x8]
  403963:	lea    rsi,[rip+0x8911]        # 40c27b <_IO_stdin_used@@Base+0x27b>
  40396a:	mov    al,0x0
  40396c:	call   4030b0 <fprintf@plt>
  403971:	mov    DWORD PTR [rbp-0x4c],eax
  403974:	mov    DWORD PTR [rbp-0x24],0x0
  40397b:	mov    eax,DWORD PTR [rbp-0x24]
  40397e:	mov    rcx,QWORD PTR [rbp-0x18]
  403982:	mov    edx,ecx
  403984:	cmp    eax,edx
  403986:	jae    403aa2 <emit_test@@Base+0x5f2>
  40398c:	mov    eax,DWORD PTR [rbp-0x24]
  40398f:	and    eax,0xf
  403992:	cmp    eax,0x0
  403995:	jne    4039db <emit_test@@Base+0x52b>
  40399b:	cmp    DWORD PTR [rbp-0x24],0x0
  40399f:	je     4039be <emit_test@@Base+0x50e>
  4039a5:	lea    rdx,[rbp-0x40]
  4039a9:	mov    rdi,QWORD PTR [rbp-0x20]
  4039ad:	lea    rsi,[rip+0x88cc]        # 40c280 <_IO_stdin_used@@Base+0x280>
  4039b4:	mov    al,0x0
  4039b6:	call   4030b0 <fprintf@plt>
  4039bb:	mov    DWORD PTR [rbp-0x50],eax
  4039be:	mov    rdi,QWORD PTR [rbp-0x20]
  4039c2:	mov    edx,DWORD PTR [rbp-0x24]
  4039c5:	lea    rsi,[rip+0x88ba]        # 40c286 <_IO_stdin_used@@Base+0x286>
  4039cc:	mov    al,0x0
  4039ce:	call   4030b0 <fprintf@plt>
  4039d3:	mov    DWORD PTR [rbp-0x54],eax
  4039d6:	jmp    403a04 <emit_test@@Base+0x554>
  4039db:	mov    eax,DWORD PTR [rbp-0x24]
  4039de:	and    eax,0x7
  4039e1:	cmp    eax,0x0
  4039e4:	jne    4039ff <emit_test@@Base+0x54f>
  4039ea:	mov    rdi,QWORD PTR [rbp-0x20]
  4039ee:	lea    rsi,[rip+0x88a1]        # 40c296 <_IO_stdin_used@@Base+0x296>
  4039f5:	mov    al,0x0
  4039f7:	call   4030b0 <fprintf@plt>
  4039fc:	mov    DWORD PTR [rbp-0x58],eax
  4039ff:	jmp    403a04 <emit_test@@Base+0x554>
  403a04:	mov    rdi,QWORD PTR [rbp-0x20]
  403a08:	mov    rax,QWORD PTR [rbp-0x48]
  403a0c:	mov    ecx,DWORD PTR [rbp-0x24]
  403a0f:	mov    edx,ecx
  403a11:	movzx  edx,BYTE PTR [rax+rdx*1]
  403a15:	lea    rsi,[rip+0x8872]        # 40c28e <_IO_stdin_used@@Base+0x28e>
  403a1c:	mov    al,0x0
  403a1e:	call   4030b0 <fprintf@plt>
  403a23:	mov    rsi,QWORD PTR [rbp-0x48]
  403a27:	mov    ecx,DWORD PTR [rbp-0x24]
  403a2a:	mov    edi,ecx
  403a2c:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  403a30:	cmp    ecx,0x20
  403a33:	mov    DWORD PTR [rbp-0x5c],eax
  403a36:	jl     403a52 <emit_test@@Base+0x5a2>
  403a3c:	mov    rax,QWORD PTR [rbp-0x48]
  403a40:	mov    ecx,DWORD PTR [rbp-0x24]
  403a43:	mov    edx,ecx
  403a45:	movzx  ecx,BYTE PTR [rax+rdx*1]
  403a49:	cmp    ecx,0x7e
  403a4c:	jle    403a66 <emit_test@@Base+0x5b6>
  403a52:	mov    eax,DWORD PTR [rbp-0x24]
  403a55:	and    eax,0xf
  403a58:	mov    eax,eax
  403a5a:	mov    ecx,eax
  403a5c:	mov    BYTE PTR [rbp+rcx*1-0x40],0x2e
  403a61:	jmp    403a82 <emit_test@@Base+0x5d2>
  403a66:	mov    rax,QWORD PTR [rbp-0x48]
  403a6a:	mov    ecx,DWORD PTR [rbp-0x24]
  403a6d:	mov    edx,ecx
  403a6f:	mov    sil,BYTE PTR [rax+rdx*1]
  403a73:	mov    ecx,DWORD PTR [rbp-0x24]
  403a76:	and    ecx,0xf
  403a79:	mov    ecx,ecx
  403a7b:	mov    eax,ecx
  403a7d:	mov    BYTE PTR [rbp+rax*1-0x40],sil
  403a82:	mov    eax,DWORD PTR [rbp-0x24]
  403a85:	and    eax,0xf
  403a88:	add    eax,0x1
  403a8b:	mov    eax,eax
  403a8d:	mov    ecx,eax
  403a8f:	mov    BYTE PTR [rbp+rcx*1-0x40],0x0
  403a94:	mov    eax,DWORD PTR [rbp-0x24]
  403a97:	add    eax,0x1
  403a9a:	mov    DWORD PTR [rbp-0x24],eax
  403a9d:	jmp    40397b <emit_test@@Base+0x4cb>
  403aa2:	jmp    403aa7 <emit_test@@Base+0x5f7>
  403aa7:	mov    eax,DWORD PTR [rbp-0x24]
  403aaa:	and    eax,0xf
  403aad:	cmp    eax,0x0
  403ab0:	je     403ad9 <emit_test@@Base+0x629>
  403ab6:	mov    rdi,QWORD PTR [rbp-0x20]
  403aba:	lea    rsi,[rip+0x87d3]        # 40c294 <_IO_stdin_used@@Base+0x294>
  403ac1:	mov    al,0x0
  403ac3:	call   4030b0 <fprintf@plt>
  403ac8:	mov    ecx,DWORD PTR [rbp-0x24]
  403acb:	add    ecx,0x1
  403ace:	mov    DWORD PTR [rbp-0x24],ecx
  403ad1:	mov    DWORD PTR [rbp-0x60],eax
  403ad4:	jmp    403aa7 <emit_test@@Base+0x5f7>
  403ad9:	lea    rdx,[rbp-0x40]
  403add:	mov    rdi,QWORD PTR [rbp-0x20]
  403ae1:	lea    rsi,[rip+0x8798]        # 40c280 <_IO_stdin_used@@Base+0x280>
  403ae8:	mov    al,0x0
  403aea:	call   4030b0 <fprintf@plt>
  403aef:	mov    DWORD PTR [rbp-0x64],eax
  403af2:	add    rsp,0x70
  403af6:	pop    rbp
  403af7:	ret    
  403af8:	nop    DWORD PTR [rax+rax*1+0x0]
  403b00:	push   rbp
  403b01:	mov    rbp,rsp
  403b04:	sub    rsp,0x20
  403b08:	mov    QWORD PTR [rbp-0x8],rdi
  403b0c:	mov    QWORD PTR [rbp-0x10],0x0
  403b14:	cmp    QWORD PTR [rbp-0x8],0x0
  403b19:	je     403b35 <emit_test@@Base+0x685>
  403b1f:	mov    rdi,QWORD PTR [rbp-0x8]
  403b23:	mov    rsi,QWORD PTR [rbp-0x10]
  403b27:	call   4042f0 <main@@Base+0x390>
  403b2c:	cmp    eax,0x0
  403b2f:	jne    403b42 <emit_test@@Base+0x692>
  403b35:	xor    eax,eax
  403b37:	mov    ecx,eax
  403b39:	mov    QWORD PTR [rbp-0x18],rcx
  403b3d:	jmp    403b62 <emit_test@@Base+0x6b2>
  403b42:	mov    rax,QWORD PTR [rbp-0x8]
  403b46:	mov    rdi,QWORD PTR [rbp-0x8]
  403b4a:	mov    QWORD PTR [rbp-0x20],rax
  403b4e:	call   404390 <main@@Base+0x430>
  403b53:	mov    eax,eax
  403b55:	mov    edi,eax
  403b57:	mov    rcx,QWORD PTR [rbp-0x20]
  403b5b:	add    rcx,rdi
  403b5e:	mov    QWORD PTR [rbp-0x18],rcx
  403b62:	mov    rax,QWORD PTR [rbp-0x18]
  403b66:	add    rsp,0x20
  403b6a:	pop    rbp
  403b6b:	ret    
  403b6c:	nop    DWORD PTR [rax+0x0]
  403b70:	push   rbp
  403b71:	mov    rbp,rsp
  403b74:	sub    rsp,0x30
  403b78:	mov    QWORD PTR [rbp-0x8],rdi
  403b7c:	mov    WORD PTR [rbp-0xa],0x0
  403b82:	cmp    QWORD PTR [rbp-0x8],0x0
  403b87:	je     403ba1 <emit_test@@Base+0x6f1>
  403b8d:	mov    al,0x1
  403b8f:	test   al,0x1
  403b91:	jne    403b9c <emit_test@@Base+0x6ec>
  403b97:	jmp    403ba1 <emit_test@@Base+0x6f1>
  403b9c:	jmp    403bc0 <emit_test@@Base+0x710>
  403ba1:	lea    rdi,[rip+0x870a]        # 40c2b2 <_IO_stdin_used@@Base+0x2b2>
  403ba8:	lea    rsi,[rip+0x8729]        # 40c2d8 <_IO_stdin_used@@Base+0x2d8>
  403baf:	mov    edx,0x29
  403bb4:	lea    rcx,[rip+0x8793]        # 40c34e <_IO_stdin_used@@Base+0x34e>
  403bbb:	call   403070 <__assert_fail@plt>
  403bc0:	mov    WORD PTR [rbp-0xc],0x0
  403bc6:	mov    rax,QWORD PTR [rbp-0x8]
  403bca:	mov    rcx,QWORD PTR [rbp-0x8]
  403bce:	mov    rdi,rcx
  403bd1:	mov    QWORD PTR [rbp-0x20],rax
  403bd5:	call   404400 <main@@Base+0x4a0>
  403bda:	xor    edx,edx
  403bdc:	mov    ecx,edx
  403bde:	movsxd rdi,eax
  403be1:	sub    rcx,rdi
  403be4:	mov    rdi,QWORD PTR [rbp-0x20]
  403be8:	add    rdi,rcx
  403beb:	mov    QWORD PTR [rbp-0x18],rdi
  403bef:	mov    rcx,QWORD PTR [rbp-0x18]
  403bf3:	mov    rdi,rcx
  403bf6:	call   404420 <main@@Base+0x4c0>
  403bfb:	movzx  edx,ax
  403bfe:	mov    ecx,edx
  403c00:	movzx  edx,WORD PTR [rbp-0xc]
  403c04:	add    edx,0x3
  403c07:	movsxd rdi,edx
  403c0a:	shl    rdi,0x1
  403c0e:	cmp    rcx,rdi
  403c11:	jb     403c39 <emit_test@@Base+0x789>
  403c17:	mov    rax,QWORD PTR [rbp-0x18]
  403c1b:	movzx  ecx,WORD PTR [rbp-0xc]
  403c1f:	movsxd rdx,ecx
  403c22:	shl    rdx,0x1
  403c26:	add    rax,rdx
  403c29:	add    rax,0x4
  403c2d:	mov    rdi,rax
  403c30:	call   404420 <main@@Base+0x4c0>
  403c35:	mov    WORD PTR [rbp-0xa],ax
  403c39:	movzx  eax,WORD PTR [rbp-0xa]
  403c3d:	cmp    eax,0x0
  403c40:	je     403c65 <emit_test@@Base+0x7b5>
  403c46:	mov    rax,QWORD PTR [rbp-0x8]
  403c4a:	movzx  ecx,WORD PTR [rbp-0xa]
  403c4e:	movsxd rdx,ecx
  403c51:	add    rax,rdx
  403c54:	mov    rdi,rax
  403c57:	call   404450 <main@@Base+0x4f0>
  403c5c:	mov    QWORD PTR [rbp-0x28],rax
  403c60:	jmp    403c72 <emit_test@@Base+0x7c2>
  403c65:	xor    eax,eax
  403c67:	mov    ecx,eax
  403c69:	mov    QWORD PTR [rbp-0x28],rcx
  403c6d:	jmp    403c72 <emit_test@@Base+0x7c2>
  403c72:	mov    rax,QWORD PTR [rbp-0x28]
  403c76:	add    rsp,0x30
  403c7a:	pop    rbp
  403c7b:	ret    
  403c7c:	nop    DWORD PTR [rax+0x0]
  403c80:	push   rbp
  403c81:	mov    rbp,rsp
  403c84:	sub    rsp,0x30
  403c88:	mov    QWORD PTR [rbp-0x8],rdi
  403c8c:	mov    WORD PTR [rbp-0xa],0x0
  403c92:	cmp    QWORD PTR [rbp-0x8],0x0
  403c97:	je     403cb1 <emit_test@@Base+0x801>
  403c9d:	mov    al,0x1
  403c9f:	test   al,0x1
  403ca1:	jne    403cac <emit_test@@Base+0x7fc>
  403ca7:	jmp    403cb1 <emit_test@@Base+0x801>
  403cac:	jmp    403cd0 <emit_test@@Base+0x820>
  403cb1:	lea    rdi,[rip+0x85fa]        # 40c2b2 <_IO_stdin_used@@Base+0x2b2>
  403cb8:	lea    rsi,[rip+0x8619]        # 40c2d8 <_IO_stdin_used@@Base+0x2d8>
  403cbf:	mov    edx,0x2a
  403cc4:	lea    rcx,[rip+0x86a3]        # 40c36e <_IO_stdin_used@@Base+0x36e>
  403ccb:	call   403070 <__assert_fail@plt>
  403cd0:	mov    WORD PTR [rbp-0xc],0x1
  403cd6:	mov    rax,QWORD PTR [rbp-0x8]
  403cda:	mov    rcx,QWORD PTR [rbp-0x8]
  403cde:	mov    rdi,rcx
  403ce1:	mov    QWORD PTR [rbp-0x20],rax
  403ce5:	call   404400 <main@@Base+0x4a0>
  403cea:	xor    edx,edx
  403cec:	mov    ecx,edx
  403cee:	movsxd rdi,eax
  403cf1:	sub    rcx,rdi
  403cf4:	mov    rdi,QWORD PTR [rbp-0x20]
  403cf8:	add    rdi,rcx
  403cfb:	mov    QWORD PTR [rbp-0x18],rdi
  403cff:	mov    rcx,QWORD PTR [rbp-0x18]
  403d03:	mov    rdi,rcx
  403d06:	call   404420 <main@@Base+0x4c0>
  403d0b:	movzx  edx,ax
  403d0e:	mov    ecx,edx
  403d10:	movzx  edx,WORD PTR [rbp-0xc]
  403d14:	add    edx,0x3
  403d17:	movsxd rdi,edx
  403d1a:	shl    rdi,0x1
  403d1e:	cmp    rcx,rdi
  403d21:	jb     403d49 <emit_test@@Base+0x899>
  403d27:	mov    rax,QWORD PTR [rbp-0x18]
  403d2b:	movzx  ecx,WORD PTR [rbp-0xc]
  403d2f:	movsxd rdx,ecx
  403d32:	shl    rdx,0x1
  403d36:	add    rax,rdx
  403d39:	add    rax,0x4
  403d3d:	mov    rdi,rax
  403d40:	call   404420 <main@@Base+0x4c0>
  403d45:	mov    WORD PTR [rbp-0xa],ax
  403d49:	movzx  eax,WORD PTR [rbp-0xa]
  403d4d:	cmp    eax,0x0
  403d50:	je     403d77 <emit_test@@Base+0x8c7>
  403d56:	mov    rax,QWORD PTR [rbp-0x8]
  403d5a:	movzx  ecx,WORD PTR [rbp-0xa]
  403d5e:	movsxd rdx,ecx
  403d61:	add    rax,rdx
  403d64:	mov    rdi,rax
  403d67:	call   4044b0 <main@@Base+0x550>
  403d6c:	movzx  ecx,al
  403d6f:	mov    DWORD PTR [rbp-0x24],ecx
  403d72:	jmp    403d81 <emit_test@@Base+0x8d1>
  403d77:	xor    eax,eax
  403d79:	mov    DWORD PTR [rbp-0x24],eax
  403d7c:	jmp    403d81 <emit_test@@Base+0x8d1>
  403d81:	mov    eax,DWORD PTR [rbp-0x24]
  403d84:	mov    cl,al
  403d86:	movzx  eax,cl
  403d89:	add    rsp,0x30
  403d8d:	pop    rbp
  403d8e:	ret    
  403d8f:	nop
  403d90:	push   rbp
  403d91:	mov    rbp,rsp
  403d94:	sub    rsp,0x10
  403d98:	mov    QWORD PTR [rbp-0x8],rdi
  403d9c:	mov    rdi,QWORD PTR [rbp-0x8]
  403da0:	call   4044f0 <main@@Base+0x590>
  403da5:	add    rsp,0x10
  403da9:	pop    rbp
  403daa:	ret    
  403dab:	nop    DWORD PTR [rax+rax*1+0x0]
  403db0:	push   rbp
  403db1:	mov    rbp,rsp
  403db4:	sub    rsp,0x40
  403db8:	mov    QWORD PTR [rbp-0x10],rdi
  403dbc:	mov    WORD PTR [rbp-0x1a],0x0
  403dc2:	cmp    QWORD PTR [rbp-0x10],0x0
  403dc7:	je     403de1 <emit_test@@Base+0x931>
  403dcd:	mov    al,0x1
  403dcf:	test   al,0x1
  403dd1:	jne    403ddc <emit_test@@Base+0x92c>
  403dd7:	jmp    403de1 <emit_test@@Base+0x931>
  403ddc:	jmp    403e00 <emit_test@@Base+0x950>
  403de1:	lea    rdi,[rip+0x84ca]        # 40c2b2 <_IO_stdin_used@@Base+0x2b2>
  403de8:	lea    rsi,[rip+0x84e9]        # 40c2d8 <_IO_stdin_used@@Base+0x2d8>
  403def:	mov    edx,0x2b
  403df4:	lea    rcx,[rip+0x8595]        # 40c390 <_IO_stdin_used@@Base+0x390>
  403dfb:	call   403070 <__assert_fail@plt>
  403e00:	mov    WORD PTR [rbp-0x1c],0x2
  403e06:	mov    rax,QWORD PTR [rbp-0x10]
  403e0a:	mov    rcx,QWORD PTR [rbp-0x10]
  403e0e:	mov    rdi,rcx
  403e11:	mov    QWORD PTR [rbp-0x30],rax
  403e15:	call   404400 <main@@Base+0x4a0>
  403e1a:	xor    edx,edx
  403e1c:	mov    ecx,edx
  403e1e:	movsxd rdi,eax
  403e21:	sub    rcx,rdi
  403e24:	mov    rdi,QWORD PTR [rbp-0x30]
  403e28:	add    rdi,rcx
  403e2b:	mov    QWORD PTR [rbp-0x28],rdi
  403e2f:	mov    rcx,QWORD PTR [rbp-0x28]
  403e33:	mov    rdi,rcx
  403e36:	call   404420 <main@@Base+0x4c0>
  403e3b:	movzx  edx,ax
  403e3e:	mov    ecx,edx
  403e40:	movzx  edx,WORD PTR [rbp-0x1c]
  403e44:	add    edx,0x3
  403e47:	movsxd rdi,edx
  403e4a:	shl    rdi,0x1
  403e4e:	cmp    rcx,rdi
  403e51:	jb     403e79 <emit_test@@Base+0x9c9>
  403e57:	mov    rax,QWORD PTR [rbp-0x28]
  403e5b:	movzx  ecx,WORD PTR [rbp-0x1c]
  403e5f:	movsxd rdx,ecx
  403e62:	shl    rdx,0x1
  403e66:	add    rax,rdx
  403e69:	add    rax,0x4
  403e6d:	mov    rdi,rax
  403e70:	call   404420 <main@@Base+0x4c0>
  403e75:	mov    WORD PTR [rbp-0x1a],ax
  403e79:	cmp    WORD PTR [rbp-0x1a],0x0
  403e7e:	je     403ec2 <emit_test@@Base+0xa12>
  403e84:	mov    rax,QWORD PTR [rbp-0x10]
  403e88:	movzx  ecx,WORD PTR [rbp-0x1a]
  403e8c:	movsxd rdx,ecx
  403e8f:	add    rax,rdx
  403e92:	mov    QWORD PTR [rbp-0x18],rax
  403e96:	mov    rax,QWORD PTR [rbp-0x18]
  403e9a:	add    rax,0x4
  403e9e:	mov    rdx,QWORD PTR [rbp-0x18]
  403ea2:	mov    rdi,rdx
  403ea5:	mov    QWORD PTR [rbp-0x38],rax
  403ea9:	call   404390 <main@@Base+0x430>
  403eae:	mov    eax,eax
  403eb0:	mov    edx,eax
  403eb2:	mov    rdi,QWORD PTR [rbp-0x38]
  403eb6:	add    rdi,rdx
  403eb9:	mov    QWORD PTR [rbp-0x8],rdi
  403ebd:	jmp    403eca <emit_test@@Base+0xa1a>
  403ec2:	mov    QWORD PTR [rbp-0x8],0x0
  403eca:	mov    rax,QWORD PTR [rbp-0x8]
  403ece:	add    rsp,0x40
  403ed2:	pop    rbp
  403ed3:	ret    
  403ed4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ede:	xchg   ax,ax
  403ee0:	push   rbp
  403ee1:	mov    rbp,rsp
  403ee4:	sub    rsp,0x10
  403ee8:	mov    QWORD PTR [rbp-0x8],rdi
  403eec:	mov    QWORD PTR [rbp-0x10],rsi
  403ef0:	mov    rsi,QWORD PTR [rbp-0x8]
  403ef4:	mov    rdi,rsi
  403ef7:	call   4044f0 <main@@Base+0x590>
  403efc:	cmp    rax,QWORD PTR [rbp-0x10]
  403f00:	jbe    403f1a <emit_test@@Base+0xa6a>
  403f06:	mov    al,0x1
  403f08:	test   al,0x1
  403f0a:	jne    403f15 <emit_test@@Base+0xa65>
  403f10:	jmp    403f1a <emit_test@@Base+0xa6a>
  403f15:	jmp    403f39 <emit_test@@Base+0xa89>
  403f1a:	lea    rdi,[rip+0x84b5]        # 40c3d6 <_IO_stdin_used@@Base+0x3d6>
  403f21:	lea    rsi,[rip+0x84e5]        # 40c40d <_IO_stdin_used@@Base+0x40d>
  403f28:	mov    edx,0x193
  403f2d:	lea    rcx,[rip+0x8558]        # 40c48c <_IO_stdin_used@@Base+0x48c>
  403f34:	call   403070 <__assert_fail@plt>
  403f39:	mov    rax,QWORD PTR [rbp-0x8]
  403f3d:	mov    rcx,QWORD PTR [rbp-0x10]
  403f41:	shl    rcx,0x2
  403f45:	add    rax,rcx
  403f48:	mov    rdi,rax
  403f4b:	call   404540 <main@@Base+0x5e0>
  403f50:	add    rsp,0x10
  403f54:	pop    rbp
  403f55:	ret    
  403f56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403f60 <main@@Base>:
  403f60:	push   rbp
  403f61:	mov    rbp,rsp
  403f64:	sub    rsp,0x20
  403f68:	mov    DWORD PTR [rbp-0x4],0x0
  403f6f:	mov    DWORD PTR [rbp-0x8],edi
  403f72:	mov    QWORD PTR [rbp-0x10],rsi
  403f76:	mov    DWORD PTR [rbp-0x14],0x0
  403f7d:	call   403300 <debug_test@@Base>
  403f82:	or     eax,DWORD PTR [rbp-0x14]
  403f85:	mov    DWORD PTR [rbp-0x14],eax
  403f88:	call   4034b0 <emit_test@@Base>
  403f8d:	or     eax,DWORD PTR [rbp-0x14]
  403f90:	mov    DWORD PTR [rbp-0x14],eax
  403f93:	mov    eax,DWORD PTR [rbp-0x14]
  403f96:	add    rsp,0x20
  403f9a:	pop    rbp
  403f9b:	ret    
  403f9c:	nop    DWORD PTR [rax+0x0]
  403fa0:	push   rbp
  403fa1:	mov    rbp,rsp
  403fa4:	sub    rsp,0x10
  403fa8:	xor    eax,eax
  403faa:	mov    QWORD PTR [rbp-0x8],rdi
  403fae:	mov    QWORD PTR [rbp-0x10],rsi
  403fb2:	mov    rdi,QWORD PTR [rbp-0x8]
  403fb6:	mov    rsi,QWORD PTR [rbp-0x10]
  403fba:	mov    edx,eax
  403fbc:	mov    ecx,eax
  403fbe:	call   405ae0 <flatcc_builder_start_buffer@@Base>
  403fc3:	add    rsp,0x10
  403fc7:	pop    rbp
  403fc8:	ret    
  403fc9:	nop    DWORD PTR [rax+0x0]
  403fd0:	push   rbp
  403fd1:	mov    rbp,rsp
  403fd4:	sub    rsp,0x10
  403fd8:	mov    QWORD PTR [rbp-0x8],rdi
  403fdc:	mov    DWORD PTR [rbp-0xc],esi
  403fdf:	mov    rdi,QWORD PTR [rbp-0x8]
  403fe3:	mov    esi,DWORD PTR [rbp-0xc]
  403fe6:	call   405e20 <flatcc_builder_end_buffer@@Base>
  403feb:	add    rsp,0x10
  403fef:	pop    rbp
  403ff0:	ret    
  403ff1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  404000:	push   rbp
  404001:	mov    rbp,rsp
  404004:	sub    rsp,0x20
  404008:	mov    al,dl
  40400a:	mov    QWORD PTR [rbp-0x10],rdi
  40400e:	mov    QWORD PTR [rbp-0x18],rsi
  404012:	mov    BYTE PTR [rbp-0x19],al
  404015:	mov    DWORD PTR [rbp-0x20],ecx
  404018:	mov    rdi,QWORD PTR [rbp-0x10]
  40401c:	call   404090 <main@@Base+0x130>
  404021:	cmp    eax,0x0
  404024:	jne    40406b <main@@Base+0x10b>
  40402a:	mov    rdi,QWORD PTR [rbp-0x10]
  40402e:	mov    rsi,QWORD PTR [rbp-0x18]
  404032:	call   4040b0 <main@@Base+0x150>
  404037:	cmp    eax,0x0
  40403a:	jne    40406b <main@@Base+0x10b>
  404040:	mov    rdi,QWORD PTR [rbp-0x10]
  404044:	mov    esi,DWORD PTR [rbp-0x20]
  404047:	call   404130 <main@@Base+0x1d0>
  40404c:	cmp    eax,0x0
  40404f:	jne    40406b <main@@Base+0x10b>
  404055:	mov    rdi,QWORD PTR [rbp-0x10]
  404059:	movzx  esi,BYTE PTR [rbp-0x19]
  40405d:	call   404190 <main@@Base+0x230>
  404062:	cmp    eax,0x0
  404065:	je     404077 <main@@Base+0x117>
  40406b:	mov    DWORD PTR [rbp-0x4],0x0
  404072:	jmp    404083 <main@@Base+0x123>
  404077:	mov    rdi,QWORD PTR [rbp-0x10]
  40407b:	call   404210 <main@@Base+0x2b0>
  404080:	mov    DWORD PTR [rbp-0x4],eax
  404083:	mov    eax,DWORD PTR [rbp-0x4]
  404086:	add    rsp,0x20
  40408a:	pop    rbp
  40408b:	ret    
  40408c:	nop    DWORD PTR [rax+0x0]
  404090:	push   rbp
  404091:	mov    rbp,rsp
  404094:	sub    rsp,0x10
  404098:	mov    QWORD PTR [rbp-0x8],rdi
  40409c:	mov    rdi,QWORD PTR [rbp-0x8]
  4040a0:	mov    esi,0x3
  4040a5:	call   407150 <flatcc_builder_start_table@@Base>
  4040aa:	add    rsp,0x10
  4040ae:	pop    rbp
  4040af:	ret    
  4040b0:	push   rbp
  4040b1:	mov    rbp,rsp
  4040b4:	sub    rsp,0x30
  4040b8:	mov    QWORD PTR [rbp-0x10],rdi
  4040bc:	mov    QWORD PTR [rbp-0x18],rsi
  4040c0:	cmp    QWORD PTR [rbp-0x18],0x0
  4040c5:	jne    4040d7 <main@@Base+0x177>
  4040cb:	mov    DWORD PTR [rbp-0x4],0x0
  4040d2:	jmp    404120 <main@@Base+0x1c0>
  4040d7:	xor    esi,esi
  4040d9:	mov    eax,0x8
  4040de:	mov    edx,eax
  4040e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4040e4:	mov    ecx,0x8
  4040e9:	call   408a20 <flatcc_builder_table_add@@Base>
  4040ee:	mov    QWORD PTR [rbp-0x20],rax
  4040f2:	cmp    rax,0x0
  4040f6:	jne    404108 <main@@Base+0x1a8>
  4040fc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404103:	jmp    404120 <main@@Base+0x1c0>
  404108:	mov    rdi,QWORD PTR [rbp-0x20]
  40410c:	mov    rsi,QWORD PTR [rbp-0x18]
  404110:	call   404270 <main@@Base+0x310>
  404115:	mov    DWORD PTR [rbp-0x4],0x0
  40411c:	mov    QWORD PTR [rbp-0x28],rax
  404120:	mov    eax,DWORD PTR [rbp-0x4]
  404123:	add    rsp,0x30
  404127:	pop    rbp
  404128:	ret    
  404129:	nop    DWORD PTR [rax+0x0]
  404130:	push   rbp
  404131:	mov    rbp,rsp
  404134:	sub    rsp,0x20
  404138:	mov    QWORD PTR [rbp-0x8],rdi
  40413c:	mov    DWORD PTR [rbp-0xc],esi
  40413f:	cmp    DWORD PTR [rbp-0xc],0x0
  404143:	je     404178 <main@@Base+0x218>
  404149:	mov    rdi,QWORD PTR [rbp-0x8]
  40414d:	mov    esi,0x2
  404152:	call   408920 <flatcc_builder_table_add_offset@@Base>
  404157:	mov    QWORD PTR [rbp-0x18],rax
  40415b:	cmp    rax,0x0
  40415f:	je     404178 <main@@Base+0x218>
  404165:	xor    eax,eax
  404167:	mov    ecx,DWORD PTR [rbp-0xc]
  40416a:	mov    rdx,QWORD PTR [rbp-0x18]
  40416e:	mov    DWORD PTR [rdx],ecx
  404170:	mov    DWORD PTR [rbp-0x1c],eax
  404173:	jmp    404185 <main@@Base+0x225>
  404178:	mov    eax,0xffffffff
  40417d:	mov    DWORD PTR [rbp-0x1c],eax
  404180:	jmp    404185 <main@@Base+0x225>
  404185:	mov    eax,DWORD PTR [rbp-0x1c]
  404188:	add    rsp,0x20
  40418c:	pop    rbp
  40418d:	ret    
  40418e:	xchg   ax,ax
  404190:	push   rbp
  404191:	mov    rbp,rsp
  404194:	sub    rsp,0x30
  404198:	mov    al,sil
  40419b:	mov    QWORD PTR [rbp-0x10],rdi
  40419f:	mov    BYTE PTR [rbp-0x11],al
  4041a2:	movzx  esi,BYTE PTR [rbp-0x11]
  4041a6:	cmp    esi,0x0
  4041a9:	jne    4041bb <main@@Base+0x25b>
  4041af:	mov    DWORD PTR [rbp-0x4],0x0
  4041b6:	jmp    404206 <main@@Base+0x2a6>
  4041bb:	mov    eax,0x1
  4041c0:	mov    edx,eax
  4041c2:	mov    rdi,QWORD PTR [rbp-0x10]
  4041c6:	mov    eax,0x1
  4041cb:	mov    esi,eax
  4041cd:	mov    ecx,eax
  4041cf:	call   408a20 <flatcc_builder_table_add@@Base>
  4041d4:	mov    QWORD PTR [rbp-0x20],rax
  4041d8:	cmp    rax,0x0
  4041dc:	jne    4041ee <main@@Base+0x28e>
  4041e2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4041e9:	jmp    404206 <main@@Base+0x2a6>
  4041ee:	mov    rdi,QWORD PTR [rbp-0x20]
  4041f2:	movzx  esi,BYTE PTR [rbp-0x11]
  4041f6:	call   4042b0 <main@@Base+0x350>
  4041fb:	mov    DWORD PTR [rbp-0x4],0x0
  404202:	mov    QWORD PTR [rbp-0x28],rax
  404206:	mov    eax,DWORD PTR [rbp-0x4]
  404209:	add    rsp,0x30
  40420d:	pop    rbp
  40420e:	ret    
  40420f:	nop
  404210:	push   rbp
  404211:	mov    rbp,rsp
  404214:	sub    rsp,0x10
  404218:	xor    edx,edx
  40421a:	mov    QWORD PTR [rbp-0x8],rdi
  40421e:	mov    rdi,QWORD PTR [rbp-0x8]
  404222:	lea    rsi,[rip+0x82e3]        # 40c50c <_IO_stdin_used@@Base+0x50c>
  404229:	call   407d10 <flatcc_builder_check_required@@Base>
  40422e:	cmp    eax,0x0
  404231:	je     40423c <main@@Base+0x2dc>
  404237:	jmp    40425b <main@@Base+0x2fb>
  40423c:	lea    rdi,[rip+0x7f28]        # 40c16b <_IO_stdin_used@@Base+0x16b>
  404243:	lea    rsi,[rip+0x7f8d]        # 40c1d7 <_IO_stdin_used@@Base+0x1d7>
  40424a:	mov    edx,0x15
  40424f:	lea    rcx,[rip+0x7ff8]        # 40c24e <_IO_stdin_used@@Base+0x24e>
  404256:	call   403070 <__assert_fail@plt>
  40425b:	mov    rdi,QWORD PTR [rbp-0x8]
  40425f:	call   407de0 <flatcc_builder_end_table@@Base>
  404264:	add    rsp,0x10
  404268:	pop    rbp
  404269:	ret    
  40426a:	nop    WORD PTR [rax+rax*1+0x0]
  404270:	push   rbp
  404271:	mov    rbp,rsp
  404274:	sub    rsp,0x10
  404278:	mov    QWORD PTR [rbp-0x8],rdi
  40427c:	mov    QWORD PTR [rbp-0x10],rsi
  404280:	mov    rdi,QWORD PTR [rbp-0x10]
  404284:	call   4042a0 <main@@Base+0x340>
  404289:	mov    rsi,QWORD PTR [rbp-0x8]
  40428d:	mov    QWORD PTR [rsi],rax
  404290:	mov    rax,QWORD PTR [rbp-0x8]
  404294:	add    rsp,0x10
  404298:	pop    rbp
  404299:	ret    
  40429a:	nop    WORD PTR [rax+rax*1+0x0]
  4042a0:	push   rbp
  4042a1:	mov    rbp,rsp
  4042a4:	mov    QWORD PTR [rbp-0x8],rdi
  4042a8:	mov    rax,QWORD PTR [rbp-0x8]
  4042ac:	pop    rbp
  4042ad:	ret    
  4042ae:	xchg   ax,ax
  4042b0:	push   rbp
  4042b1:	mov    rbp,rsp
  4042b4:	sub    rsp,0x10
  4042b8:	mov    al,sil
  4042bb:	mov    QWORD PTR [rbp-0x8],rdi
  4042bf:	mov    BYTE PTR [rbp-0x9],al
  4042c2:	movzx  edi,BYTE PTR [rbp-0x9]
  4042c6:	call   4042e0 <main@@Base+0x380>
  4042cb:	mov    rcx,QWORD PTR [rbp-0x8]
  4042cf:	mov    BYTE PTR [rcx],al
  4042d1:	mov    rax,QWORD PTR [rbp-0x8]
  4042d5:	add    rsp,0x10
  4042d9:	pop    rbp
  4042da:	ret    
  4042db:	nop    DWORD PTR [rax+rax*1+0x0]
  4042e0:	push   rbp
  4042e1:	mov    rbp,rsp
  4042e4:	mov    al,dil
  4042e7:	mov    BYTE PTR [rbp-0x1],al
  4042ea:	movzx  eax,BYTE PTR [rbp-0x1]
  4042ee:	pop    rbp
  4042ef:	ret    
  4042f0:	push   rbp
  4042f1:	mov    rbp,rsp
  4042f4:	sub    rsp,0x30
  4042f8:	mov    QWORD PTR [rbp-0x10],rdi
  4042fc:	mov    QWORD PTR [rbp-0x18],rsi
  404300:	mov    DWORD PTR [rbp-0x20],0x0
  404307:	cmp    QWORD PTR [rbp-0x18],0x0
  40430c:	jne    40431e <main@@Base+0x3be>
  404312:	mov    DWORD PTR [rbp-0x4],0x1
  404319:	jmp    40437f <main@@Base+0x41f>
  40431e:	mov    eax,0x4
  404323:	mov    edx,eax
  404325:	lea    rcx,[rbp-0x20]
  404329:	mov    rsi,QWORD PTR [rbp-0x18]
  40432d:	mov    rdi,rcx
  404330:	call   403040 <strncpy@plt>
  404335:	mov    edi,DWORD PTR [rbp-0x20]
  404338:	mov    QWORD PTR [rbp-0x28],rax
  40433c:	call   4043b0 <main@@Base+0x450>
  404341:	mov    DWORD PTR [rbp-0x20],eax
  404344:	mov    rcx,QWORD PTR [rbp-0x10]
  404348:	add    rcx,0x4
  40434c:	mov    rdi,rcx
  40434f:	call   4043c0 <main@@Base+0x460>
  404354:	mov    DWORD PTR [rbp-0x1c],eax
  404357:	cmp    DWORD PTR [rbp-0x20],0x0
  40435b:	mov    r8b,0x1
  40435e:	mov    BYTE PTR [rbp-0x29],r8b
  404362:	je     404374 <main@@Base+0x414>
  404368:	mov    eax,DWORD PTR [rbp-0x1c]
  40436b:	cmp    eax,DWORD PTR [rbp-0x20]
  40436e:	sete   cl
  404371:	mov    BYTE PTR [rbp-0x29],cl
  404374:	mov    al,BYTE PTR [rbp-0x29]
  404377:	and    al,0x1
  404379:	movzx  ecx,al
  40437c:	mov    DWORD PTR [rbp-0x4],ecx
  40437f:	mov    eax,DWORD PTR [rbp-0x4]
  404382:	add    rsp,0x30
  404386:	pop    rbp
  404387:	ret    
  404388:	nop    DWORD PTR [rax+rax*1+0x0]
  404390:	push   rbp
  404391:	mov    rbp,rsp
  404394:	sub    rsp,0x10
  404398:	mov    QWORD PTR [rbp-0x8],rdi
  40439c:	mov    rdi,QWORD PTR [rbp-0x8]
  4043a0:	mov    edi,DWORD PTR [rdi]
  4043a2:	call   4043f0 <main@@Base+0x490>
  4043a7:	add    rsp,0x10
  4043ab:	pop    rbp
  4043ac:	ret    
  4043ad:	nop    DWORD PTR [rax]
  4043b0:	push   rbp
  4043b1:	mov    rbp,rsp
  4043b4:	mov    DWORD PTR [rbp-0x4],edi
  4043b7:	mov    eax,DWORD PTR [rbp-0x4]
  4043ba:	pop    rbp
  4043bb:	ret    
  4043bc:	nop    DWORD PTR [rax+0x0]
  4043c0:	push   rbp
  4043c1:	mov    rbp,rsp
  4043c4:	sub    rsp,0x10
  4043c8:	mov    QWORD PTR [rbp-0x8],rdi
  4043cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4043d0:	mov    edi,DWORD PTR [rdi]
  4043d2:	call   4043e0 <main@@Base+0x480>
  4043d7:	add    rsp,0x10
  4043db:	pop    rbp
  4043dc:	ret    
  4043dd:	nop    DWORD PTR [rax]
  4043e0:	push   rbp
  4043e1:	mov    rbp,rsp
  4043e4:	mov    DWORD PTR [rbp-0x4],edi
  4043e7:	mov    eax,DWORD PTR [rbp-0x4]
  4043ea:	pop    rbp
  4043eb:	ret    
  4043ec:	nop    DWORD PTR [rax+0x0]
  4043f0:	push   rbp
  4043f1:	mov    rbp,rsp
  4043f4:	mov    DWORD PTR [rbp-0x4],edi
  4043f7:	mov    eax,DWORD PTR [rbp-0x4]
  4043fa:	pop    rbp
  4043fb:	ret    
  4043fc:	nop    DWORD PTR [rax+0x0]
  404400:	push   rbp
  404401:	mov    rbp,rsp
  404404:	sub    rsp,0x10
  404408:	mov    QWORD PTR [rbp-0x8],rdi
  40440c:	mov    rdi,QWORD PTR [rbp-0x8]
  404410:	mov    edi,DWORD PTR [rdi]
  404412:	call   404470 <main@@Base+0x510>
  404417:	add    rsp,0x10
  40441b:	pop    rbp
  40441c:	ret    
  40441d:	nop    DWORD PTR [rax]
  404420:	push   rbp
  404421:	mov    rbp,rsp
  404424:	sub    rsp,0x10
  404428:	mov    QWORD PTR [rbp-0x8],rdi
  40442c:	mov    rdi,QWORD PTR [rbp-0x8]
  404430:	movzx  edi,WORD PTR [rdi]
  404433:	call   404480 <main@@Base+0x520>
  404438:	movzx  eax,ax
  40443b:	add    rsp,0x10
  40443f:	pop    rbp
  404440:	ret    
  404441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40444b:	nop    DWORD PTR [rax+rax*1+0x0]
  404450:	push   rbp
  404451:	mov    rbp,rsp
  404454:	sub    rsp,0x10
  404458:	mov    QWORD PTR [rbp-0x8],rdi
  40445c:	mov    rdi,QWORD PTR [rbp-0x8]
  404460:	mov    rdi,QWORD PTR [rdi]
  404463:	call   4044a0 <main@@Base+0x540>
  404468:	add    rsp,0x10
  40446c:	pop    rbp
  40446d:	ret    
  40446e:	xchg   ax,ax
  404470:	push   rbp
  404471:	mov    rbp,rsp
  404474:	mov    DWORD PTR [rbp-0x4],edi
  404477:	mov    eax,DWORD PTR [rbp-0x4]
  40447a:	pop    rbp
  40447b:	ret    
  40447c:	nop    DWORD PTR [rax+0x0]
  404480:	push   rbp
  404481:	mov    rbp,rsp
  404484:	mov    ax,di
  404487:	mov    WORD PTR [rbp-0x2],ax
  40448b:	movzx  eax,WORD PTR [rbp-0x2]
  40448f:	pop    rbp
  404490:	ret    
  404491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40449b:	nop    DWORD PTR [rax+rax*1+0x0]
  4044a0:	push   rbp
  4044a1:	mov    rbp,rsp
  4044a4:	mov    QWORD PTR [rbp-0x8],rdi
  4044a8:	mov    rax,QWORD PTR [rbp-0x8]
  4044ac:	pop    rbp
  4044ad:	ret    
  4044ae:	xchg   ax,ax
  4044b0:	push   rbp
  4044b1:	mov    rbp,rsp
  4044b4:	sub    rsp,0x10
  4044b8:	mov    QWORD PTR [rbp-0x8],rdi
  4044bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4044c0:	movzx  edi,BYTE PTR [rdi]
  4044c3:	call   4044e0 <main@@Base+0x580>
  4044c8:	movzx  eax,al
  4044cb:	add    rsp,0x10
  4044cf:	pop    rbp
  4044d0:	ret    
  4044d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044db:	nop    DWORD PTR [rax+rax*1+0x0]
  4044e0:	push   rbp
  4044e1:	mov    rbp,rsp
  4044e4:	mov    al,dil
  4044e7:	mov    BYTE PTR [rbp-0x1],al
  4044ea:	movzx  eax,BYTE PTR [rbp-0x1]
  4044ee:	pop    rbp
  4044ef:	ret    
  4044f0:	push   rbp
  4044f1:	mov    rbp,rsp
  4044f4:	sub    rsp,0x10
  4044f8:	mov    QWORD PTR [rbp-0x8],rdi
  4044fc:	cmp    QWORD PTR [rbp-0x8],0x0
  404501:	je     404524 <main@@Base+0x5c4>
  404507:	mov    rax,QWORD PTR [rbp-0x8]
  40450b:	add    rax,0xfffffffffffffffc
  40450f:	mov    rdi,rax
  404512:	call   404390 <main@@Base+0x430>
  404517:	mov    eax,eax
  404519:	mov    edi,eax
  40451b:	mov    QWORD PTR [rbp-0x10],rdi
  40451f:	jmp    404531 <main@@Base+0x5d1>
  404524:	xor    eax,eax
  404526:	mov    ecx,eax
  404528:	mov    QWORD PTR [rbp-0x10],rcx
  40452c:	jmp    404531 <main@@Base+0x5d1>
  404531:	mov    rax,QWORD PTR [rbp-0x10]
  404535:	add    rsp,0x10
  404539:	pop    rbp
  40453a:	ret    
  40453b:	nop    DWORD PTR [rax+rax*1+0x0]
  404540:	push   rbp
  404541:	mov    rbp,rsp
  404544:	sub    rsp,0x10
  404548:	mov    QWORD PTR [rbp-0x8],rdi
  40454c:	mov    rdi,QWORD PTR [rbp-0x8]
  404550:	vmovss xmm0,DWORD PTR [rdi]
  404554:	call   404560 <main@@Base+0x600>
  404559:	add    rsp,0x10
  40455d:	pop    rbp
  40455e:	ret    
  40455f:	nop
  404560:	push   rbp
  404561:	mov    rbp,rsp
  404564:	vmovss DWORD PTR [rbp-0x4],xmm0
  404569:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40456e:	vmovss DWORD PTR [rbp-0x8],xmm0
  404573:	mov    eax,DWORD PTR [rbp-0x8]
  404576:	mov    DWORD PTR [rbp-0x8],eax
  404579:	vmovss xmm0,DWORD PTR [rbp-0x8]
  40457e:	pop    rbp
  40457f:	ret    

0000000000404580 <flatcc_builder_default_alloc@@Base>:
  404580:	push   rbp
  404581:	mov    rbp,rsp
  404584:	sub    rsp,0x50
  404588:	mov    QWORD PTR [rbp-0x10],rdi
  40458c:	mov    QWORD PTR [rbp-0x18],rsi
  404590:	mov    QWORD PTR [rbp-0x20],rdx
  404594:	mov    DWORD PTR [rbp-0x24],ecx
  404597:	mov    DWORD PTR [rbp-0x28],r8d
  40459b:	cmp    QWORD PTR [rbp-0x20],0x0
  4045a0:	jne    4045e3 <flatcc_builder_default_alloc@@Base+0x63>
  4045a6:	mov    rax,QWORD PTR [rbp-0x18]
  4045aa:	cmp    QWORD PTR [rax],0x0
  4045ae:	je     4045d7 <flatcc_builder_default_alloc@@Base+0x57>
  4045b4:	mov    rax,QWORD PTR [rbp-0x18]
  4045b8:	mov    rdi,QWORD PTR [rax]
  4045bb:	call   403030 <free@plt>
  4045c0:	mov    rax,QWORD PTR [rbp-0x18]
  4045c4:	mov    QWORD PTR [rax],0x0
  4045cb:	mov    rax,QWORD PTR [rbp-0x18]
  4045cf:	mov    QWORD PTR [rax+0x8],0x0
  4045d7:	mov    DWORD PTR [rbp-0x4],0x0
  4045de:	jmp    40472c <flatcc_builder_default_alloc@@Base+0x1ac>
  4045e3:	mov    eax,DWORD PTR [rbp-0x28]
  4045e6:	add    eax,0xffffffff
  4045e9:	mov    ecx,eax
  4045eb:	sub    eax,0x6
  4045ee:	mov    QWORD PTR [rbp-0x40],rcx
  4045f2:	mov    DWORD PTR [rbp-0x44],eax
  4045f5:	ja     404643 <flatcc_builder_default_alloc@@Base+0xc3>
  4045fb:	lea    rax,[rip+0x7f1e]        # 40c520 <_IO_stdin_used@@Base+0x520>
  404602:	mov    rcx,QWORD PTR [rbp-0x40]
  404606:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40460a:	add    rdx,rax
  40460d:	jmp    rdx
  40460f:	mov    QWORD PTR [rbp-0x38],0x100
  404617:	jmp    40464b <flatcc_builder_default_alloc@@Base+0xcb>
  40461c:	mov    rax,QWORD PTR [rbp-0x20]
  404620:	mov    QWORD PTR [rbp-0x38],rax
  404624:	jmp    40464b <flatcc_builder_default_alloc@@Base+0xcb>
  404629:	mov    QWORD PTR [rbp-0x38],0x120
  404631:	jmp    40464b <flatcc_builder_default_alloc@@Base+0xcb>
  404636:	mov    QWORD PTR [rbp-0x38],0x40
  40463e:	jmp    40464b <flatcc_builder_default_alloc@@Base+0xcb>
  404643:	mov    QWORD PTR [rbp-0x38],0x20
  40464b:	jmp    404650 <flatcc_builder_default_alloc@@Base+0xd0>
  404650:	mov    rax,QWORD PTR [rbp-0x38]
  404654:	cmp    rax,QWORD PTR [rbp-0x20]
  404658:	jae    40466f <flatcc_builder_default_alloc@@Base+0xef>
  40465e:	mov    rax,QWORD PTR [rbp-0x38]
  404662:	shl    rax,0x1
  404666:	mov    QWORD PTR [rbp-0x38],rax
  40466a:	jmp    404650 <flatcc_builder_default_alloc@@Base+0xd0>
  40466f:	mov    rax,QWORD PTR [rbp-0x20]
  404673:	mov    rcx,QWORD PTR [rbp-0x18]
  404677:	cmp    rax,QWORD PTR [rcx+0x8]
  40467b:	ja     4046a3 <flatcc_builder_default_alloc@@Base+0x123>
  404681:	mov    rax,QWORD PTR [rbp-0x18]
  404685:	mov    rax,QWORD PTR [rax+0x8]
  404689:	shr    rax,0x1
  40468d:	cmp    rax,QWORD PTR [rbp-0x38]
  404691:	jb     4046a3 <flatcc_builder_default_alloc@@Base+0x123>
  404697:	mov    DWORD PTR [rbp-0x4],0x0
  40469e:	jmp    40472c <flatcc_builder_default_alloc@@Base+0x1ac>
  4046a3:	mov    rax,QWORD PTR [rbp-0x18]
  4046a7:	mov    rdi,QWORD PTR [rax]
  4046aa:	mov    rsi,QWORD PTR [rbp-0x38]
  4046ae:	call   4030e0 <realloc@plt>
  4046b3:	mov    QWORD PTR [rbp-0x30],rax
  4046b7:	cmp    rax,0x0
  4046bb:	jne    4046cd <flatcc_builder_default_alloc@@Base+0x14d>
  4046c1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4046c8:	jmp    40472c <flatcc_builder_default_alloc@@Base+0x1ac>
  4046cd:	cmp    DWORD PTR [rbp-0x24],0x0
  4046d1:	je     40470e <flatcc_builder_default_alloc@@Base+0x18e>
  4046d7:	mov    rax,QWORD PTR [rbp-0x18]
  4046db:	mov    rax,QWORD PTR [rax+0x8]
  4046df:	cmp    rax,QWORD PTR [rbp-0x38]
  4046e3:	jae    40470e <flatcc_builder_default_alloc@@Base+0x18e>
  4046e9:	xor    esi,esi
  4046eb:	mov    rax,QWORD PTR [rbp-0x30]
  4046ef:	mov    rcx,QWORD PTR [rbp-0x18]
  4046f3:	add    rax,QWORD PTR [rcx+0x8]
  4046f7:	mov    rcx,QWORD PTR [rbp-0x38]
  4046fb:	mov    rdx,QWORD PTR [rbp-0x18]
  4046ff:	sub    rcx,QWORD PTR [rdx+0x8]
  404703:	mov    rdi,rax
  404706:	mov    rdx,rcx
  404709:	call   403080 <memset@plt>
  40470e:	mov    rax,QWORD PTR [rbp-0x30]
  404712:	mov    rcx,QWORD PTR [rbp-0x18]
  404716:	mov    QWORD PTR [rcx],rax
  404719:	mov    rax,QWORD PTR [rbp-0x38]
  40471d:	mov    rcx,QWORD PTR [rbp-0x18]
  404721:	mov    QWORD PTR [rcx+0x8],rax
  404725:	mov    DWORD PTR [rbp-0x4],0x0
  40472c:	mov    eax,DWORD PTR [rbp-0x4]
  40472f:	add    rsp,0x50
  404733:	pop    rbp
  404734:	ret    
  404735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40473f:	nop

0000000000404740 <flatcc_builder_flush_vtable_cache@@Base>:
  404740:	push   rbp
  404741:	mov    rbp,rsp
  404744:	sub    rsp,0x10
  404748:	mov    QWORD PTR [rbp-0x8],rdi
  40474c:	mov    rdi,QWORD PTR [rbp-0x8]
  404750:	add    rdi,0x58
  404754:	add    rdi,0x50
  404758:	mov    QWORD PTR [rbp-0x10],rdi
  40475c:	mov    rdi,QWORD PTR [rbp-0x8]
  404760:	cmp    QWORD PTR [rdi+0xd8],0x0
  404768:	jne    404773 <flatcc_builder_flush_vtable_cache@@Base+0x33>
  40476e:	jmp    4047a5 <flatcc_builder_flush_vtable_cache@@Base+0x65>
  404773:	xor    esi,esi
  404775:	mov    rax,QWORD PTR [rbp-0x10]
  404779:	mov    rdi,QWORD PTR [rax]
  40477c:	mov    rax,QWORD PTR [rbp-0x10]
  404780:	mov    rdx,QWORD PTR [rax+0x8]
  404784:	call   403080 <memset@plt>
  404789:	mov    rax,QWORD PTR [rbp-0x8]
  40478d:	mov    DWORD PTR [rax+0xe4],0x10
  404797:	mov    rax,QWORD PTR [rbp-0x8]
  40479b:	mov    DWORD PTR [rax+0xe0],0x0
  4047a5:	add    rsp,0x10
  4047a9:	pop    rbp
  4047aa:	ret    
  4047ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004047b0 <flatcc_builder_custom_init@@Base>:
  4047b0:	push   rbp
  4047b1:	mov    rbp,rsp
  4047b4:	sub    rsp,0x30
  4047b8:	xor    eax,eax
  4047ba:	mov    r9d,0x188
  4047c0:	mov    r10d,r9d
  4047c3:	mov    QWORD PTR [rbp-0x8],rdi
  4047c7:	mov    QWORD PTR [rbp-0x10],rsi
  4047cb:	mov    QWORD PTR [rbp-0x18],rdx
  4047cf:	mov    QWORD PTR [rbp-0x20],rcx
  4047d3:	mov    QWORD PTR [rbp-0x28],r8
  4047d7:	mov    rcx,QWORD PTR [rbp-0x8]
  4047db:	mov    rdi,rcx
  4047de:	mov    esi,eax
  4047e0:	mov    rdx,r10
  4047e3:	call   403080 <memset@plt>
  4047e8:	cmp    QWORD PTR [rbp-0x10],0x0
  4047ed:	jne    40481a <flatcc_builder_custom_init@@Base+0x6a>
  4047f3:	lea    rax,[rip+0x5e96]        # 40a690 <flatcc_emitter@@Base>
  4047fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4047fe:	mov    DWORD PTR [rcx+0x128],0x1
  404808:	mov    QWORD PTR [rbp-0x10],rax
  40480c:	mov    rax,QWORD PTR [rbp-0x8]
  404810:	add    rax,0x130
  404816:	mov    QWORD PTR [rbp-0x18],rax
  40481a:	cmp    QWORD PTR [rbp-0x20],0x0
  40481f:	jne    404830 <flatcc_builder_custom_init@@Base+0x80>
  404825:	lea    rax,[rip+0xfffffffffffffd54]        # 404580 <flatcc_builder_default_alloc@@Base>
  40482c:	mov    QWORD PTR [rbp-0x20],rax
  404830:	xor    eax,eax
  404832:	mov    rcx,QWORD PTR [rbp-0x28]
  404836:	mov    rdx,QWORD PTR [rbp-0x8]
  40483a:	mov    QWORD PTR [rdx+0x40],rcx
  40483e:	mov    rcx,QWORD PTR [rbp-0x20]
  404842:	mov    rdx,QWORD PTR [rbp-0x8]
  404846:	mov    QWORD PTR [rdx+0x50],rcx
  40484a:	mov    rcx,QWORD PTR [rbp-0x18]
  40484e:	mov    rdx,QWORD PTR [rbp-0x8]
  404852:	mov    QWORD PTR [rdx+0x38],rcx
  404856:	mov    rcx,QWORD PTR [rbp-0x10]
  40485a:	mov    rdx,QWORD PTR [rbp-0x8]
  40485e:	mov    QWORD PTR [rdx+0x48],rcx
  404862:	add    rsp,0x30
  404866:	pop    rbp
  404867:	ret    
  404868:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404870 <flatcc_builder_init@@Base>:
  404870:	push   rbp
  404871:	mov    rbp,rsp
  404874:	sub    rsp,0x10
  404878:	xor    eax,eax
  40487a:	mov    ecx,eax
  40487c:	mov    QWORD PTR [rbp-0x8],rdi
  404880:	mov    rdi,QWORD PTR [rbp-0x8]
  404884:	mov    rsi,rcx
  404887:	mov    rdx,rcx
  40488a:	mov    QWORD PTR [rbp-0x10],rcx
  40488e:	mov    r8,QWORD PTR [rbp-0x10]
  404892:	call   4047b0 <flatcc_builder_custom_init@@Base>
  404897:	add    rsp,0x10
  40489b:	pop    rbp
  40489c:	ret    
  40489d:	nop    DWORD PTR [rax]

00000000004048a0 <flatcc_builder_custom_reset@@Base>:
  4048a0:	push   rbp
  4048a1:	mov    rbp,rsp
  4048a4:	sub    rsp,0x30
  4048a8:	mov    QWORD PTR [rbp-0x10],rdi
  4048ac:	mov    DWORD PTR [rbp-0x14],esi
  4048af:	mov    DWORD PTR [rbp-0x18],edx
  4048b2:	mov    DWORD PTR [rbp-0x24],0x0
  4048b9:	cmp    DWORD PTR [rbp-0x24],0x8
  4048bd:	jge    4049a8 <flatcc_builder_custom_reset@@Base+0x108>
  4048c3:	mov    rax,QWORD PTR [rbp-0x10]
  4048c7:	add    rax,0x58
  4048cb:	movsxd rcx,DWORD PTR [rbp-0x24]
  4048cf:	shl    rcx,0x4
  4048d3:	add    rax,rcx
  4048d6:	mov    QWORD PTR [rbp-0x20],rax
  4048da:	mov    rax,QWORD PTR [rbp-0x20]
  4048de:	cmp    QWORD PTR [rax],0x0
  4048e2:	je     40495d <flatcc_builder_custom_reset@@Base+0xbd>
  4048e8:	cmp    DWORD PTR [rbp-0x24],0x5
  4048ec:	je     404942 <flatcc_builder_custom_reset@@Base+0xa2>
  4048f2:	cmp    DWORD PTR [rbp-0x18],0x0
  4048f6:	je     404942 <flatcc_builder_custom_reset@@Base+0xa2>
  4048fc:	mov    eax,0x1
  404901:	mov    edx,eax
  404903:	mov    rcx,QWORD PTR [rbp-0x10]
  404907:	mov    rcx,QWORD PTR [rcx+0x50]
  40490b:	mov    rsi,QWORD PTR [rbp-0x10]
  40490f:	mov    rdi,QWORD PTR [rsi+0x40]
  404913:	mov    rsi,QWORD PTR [rbp-0x20]
  404917:	mov    r8d,DWORD PTR [rbp-0x24]
  40491b:	mov    eax,0x1
  404920:	mov    QWORD PTR [rbp-0x30],rcx
  404924:	mov    ecx,eax
  404926:	mov    r9,QWORD PTR [rbp-0x30]
  40492a:	call   r9
  40492d:	cmp    eax,0x0
  404930:	je     404942 <flatcc_builder_custom_reset@@Base+0xa2>
  404936:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40493d:	jmp    404ae9 <flatcc_builder_custom_reset@@Base+0x249>
  404942:	xor    esi,esi
  404944:	mov    rax,QWORD PTR [rbp-0x20]
  404948:	mov    rdi,QWORD PTR [rax]
  40494b:	mov    rax,QWORD PTR [rbp-0x20]
  40494f:	mov    rdx,QWORD PTR [rax+0x8]
  404953:	call   403080 <memset@plt>
  404958:	jmp    404995 <flatcc_builder_custom_reset@@Base+0xf5>
  40495d:	mov    rax,QWORD PTR [rbp-0x20]
  404961:	cmp    QWORD PTR [rax+0x8],0x0
  404966:	jne    404971 <flatcc_builder_custom_reset@@Base+0xd1>
  40496c:	jmp    404990 <flatcc_builder_custom_reset@@Base+0xf0>
  404971:	lea    rdi,[rip+0x7dc8]        # 40c740 <flatcc_builder_padding_base@@Base+0x200>
  404978:	lea    rsi,[rip+0x7dd3]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40497f:	mov    edx,0x1b2
  404984:	lea    rcx,[rip+0x7e27]        # 40c7b2 <flatcc_builder_padding_base@@Base+0x272>
  40498b:	call   403070 <__assert_fail@plt>
  404990:	jmp    404995 <flatcc_builder_custom_reset@@Base+0xf5>
  404995:	jmp    40499a <flatcc_builder_custom_reset@@Base+0xfa>
  40499a:	mov    eax,DWORD PTR [rbp-0x24]
  40499d:	add    eax,0x1
  4049a0:	mov    DWORD PTR [rbp-0x24],eax
  4049a3:	jmp    4048b9 <flatcc_builder_custom_reset@@Base+0x19>
  4049a8:	mov    rax,QWORD PTR [rbp-0x10]
  4049ac:	mov    DWORD PTR [rax+0xe0],0x0
  4049b6:	mov    rax,QWORD PTR [rbp-0x10]
  4049ba:	cmp    DWORD PTR [rax+0xe4],0x0
  4049c1:	jbe    4049d5 <flatcc_builder_custom_reset@@Base+0x135>
  4049c7:	mov    rax,QWORD PTR [rbp-0x10]
  4049cb:	mov    DWORD PTR [rax+0xe4],0x10
  4049d5:	mov    rax,QWORD PTR [rbp-0x10]
  4049d9:	mov    WORD PTR [rax+0xe8],0x0
  4049e2:	mov    rax,QWORD PTR [rbp-0x10]
  4049e6:	mov    DWORD PTR [rax+0xf0],0x0
  4049f0:	mov    rax,QWORD PTR [rbp-0x10]
  4049f4:	mov    DWORD PTR [rax+0xf4],0x0
  4049fe:	mov    rax,QWORD PTR [rbp-0x10]
  404a02:	mov    DWORD PTR [rax+0x104],0x0
  404a0c:	mov    rax,QWORD PTR [rbp-0x10]
  404a10:	mov    DWORD PTR [rax+0x108],0x0
  404a1a:	mov    rax,QWORD PTR [rbp-0x10]
  404a1e:	mov    DWORD PTR [rax+0x20],0x0
  404a25:	mov    rax,QWORD PTR [rbp-0x10]
  404a29:	mov    DWORD PTR [rax+0x24],0x0
  404a30:	mov    rax,QWORD PTR [rbp-0x10]
  404a34:	mov    DWORD PTR [rax+0xfc],0x0
  404a3e:	mov    rax,QWORD PTR [rbp-0x10]
  404a42:	mov    DWORD PTR [rax+0x100],0x0
  404a4c:	mov    rax,QWORD PTR [rbp-0x10]
  404a50:	mov    rax,QWORD PTR [rax+0x68]
  404a54:	mov    rcx,QWORD PTR [rbp-0x10]
  404a58:	mov    QWORD PTR [rcx+0x18],rax
  404a5c:	mov    rax,QWORD PTR [rbp-0x10]
  404a60:	mov    rax,QWORD PTR [rax+0x88]
  404a67:	mov    rcx,QWORD PTR [rbp-0x10]
  404a6b:	mov    QWORD PTR [rcx],rax
  404a6e:	mov    rax,QWORD PTR [rbp-0x10]
  404a72:	mov    rax,QWORD PTR [rax+0x58]
  404a76:	mov    rcx,QWORD PTR [rbp-0x10]
  404a7a:	mov    QWORD PTR [rcx+0x8],rax
  404a7e:	mov    rax,QWORD PTR [rbp-0x10]
  404a82:	mov    QWORD PTR [rax+0x30],0x0
  404a8a:	cmp    DWORD PTR [rbp-0x14],0x0
  404a8e:	je     404abf <flatcc_builder_custom_reset@@Base+0x21f>
  404a94:	mov    rax,QWORD PTR [rbp-0x10]
  404a98:	mov    QWORD PTR [rax+0x118],0x0
  404aa3:	mov    rax,QWORD PTR [rbp-0x10]
  404aa7:	mov    DWORD PTR [rax+0x120],0x0
  404ab1:	mov    rax,QWORD PTR [rbp-0x10]
  404ab5:	mov    DWORD PTR [rax+0x124],0x0
  404abf:	mov    rax,QWORD PTR [rbp-0x10]
  404ac3:	cmp    DWORD PTR [rax+0x128],0x0
  404aca:	je     404ae2 <flatcc_builder_custom_reset@@Base+0x242>
  404ad0:	mov    rax,QWORD PTR [rbp-0x10]
  404ad4:	add    rax,0x130
  404ada:	mov    rdi,rax
  404add:	call   40a450 <flatcc_emitter_reset@@Base>
  404ae2:	mov    DWORD PTR [rbp-0x4],0x0
  404ae9:	mov    eax,DWORD PTR [rbp-0x4]
  404aec:	add    rsp,0x30
  404af0:	pop    rbp
  404af1:	ret    
  404af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404afc:	nop    DWORD PTR [rax+0x0]

0000000000404b00 <flatcc_builder_reset@@Base>:
  404b00:	push   rbp
  404b01:	mov    rbp,rsp
  404b04:	sub    rsp,0x10
  404b08:	xor    eax,eax
  404b0a:	mov    QWORD PTR [rbp-0x8],rdi
  404b0e:	mov    rdi,QWORD PTR [rbp-0x8]
  404b12:	mov    esi,eax
  404b14:	mov    edx,eax
  404b16:	call   4048a0 <flatcc_builder_custom_reset@@Base>
  404b1b:	add    rsp,0x10
  404b1f:	pop    rbp
  404b20:	ret    
  404b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404b30 <flatcc_builder_clear@@Base>:
  404b30:	push   rbp
  404b31:	mov    rbp,rsp
  404b34:	sub    rsp,0x30
  404b38:	mov    QWORD PTR [rbp-0x8],rdi
  404b3c:	mov    DWORD PTR [rbp-0x14],0x0
  404b43:	cmp    DWORD PTR [rbp-0x14],0x8
  404b47:	jge    404ba3 <flatcc_builder_clear@@Base+0x73>
  404b4d:	xor    eax,eax
  404b4f:	mov    edx,eax
  404b51:	xor    ecx,ecx
  404b53:	mov    rsi,QWORD PTR [rbp-0x8]
  404b57:	add    rsi,0x58
  404b5b:	movsxd rdi,DWORD PTR [rbp-0x14]
  404b5f:	shl    rdi,0x4
  404b63:	add    rsi,rdi
  404b66:	mov    QWORD PTR [rbp-0x10],rsi
  404b6a:	mov    rsi,QWORD PTR [rbp-0x8]
  404b6e:	mov    rsi,QWORD PTR [rsi+0x50]
  404b72:	mov    rdi,QWORD PTR [rbp-0x8]
  404b76:	mov    rdi,QWORD PTR [rdi+0x40]
  404b7a:	mov    r8,QWORD PTR [rbp-0x10]
  404b7e:	mov    eax,DWORD PTR [rbp-0x14]
  404b81:	mov    QWORD PTR [rbp-0x20],rsi
  404b85:	mov    rsi,r8
  404b88:	mov    r8d,eax
  404b8b:	mov    r9,QWORD PTR [rbp-0x20]
  404b8f:	call   r9
  404b92:	mov    DWORD PTR [rbp-0x24],eax
  404b95:	mov    eax,DWORD PTR [rbp-0x14]
  404b98:	add    eax,0x1
  404b9b:	mov    DWORD PTR [rbp-0x14],eax
  404b9e:	jmp    404b43 <flatcc_builder_clear@@Base+0x13>
  404ba3:	mov    rax,QWORD PTR [rbp-0x8]
  404ba7:	cmp    DWORD PTR [rax+0x128],0x0
  404bae:	je     404bc6 <flatcc_builder_clear@@Base+0x96>
  404bb4:	mov    rax,QWORD PTR [rbp-0x8]
  404bb8:	add    rax,0x130
  404bbe:	mov    rdi,rax
  404bc1:	call   40a5f0 <flatcc_emitter_clear@@Base>
  404bc6:	xor    esi,esi
  404bc8:	mov    eax,0x188
  404bcd:	mov    edx,eax
  404bcf:	mov    rcx,QWORD PTR [rbp-0x8]
  404bd3:	mov    rdi,rcx
  404bd6:	call   403080 <memset@plt>
  404bdb:	add    rsp,0x30
  404bdf:	pop    rbp
  404be0:	ret    
  404be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404bf0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  404bf0:	push   rbp
  404bf1:	mov    rbp,rsp
  404bf4:	sub    rsp,0x20
  404bf8:	xor    r8d,r8d
  404bfb:	mov    QWORD PTR [rbp-0x10],rdi
  404bff:	mov    QWORD PTR [rbp-0x18],rsi
  404c03:	mov    rsi,QWORD PTR [rbp-0x18]
  404c07:	add    rsi,0x8
  404c0b:	sub    rsi,0x1
  404c0f:	and    rsi,0xfffffffffffffff8
  404c13:	add    rsi,0x8
  404c17:	mov    QWORD PTR [rbp-0x18],rsi
  404c1b:	mov    rdi,QWORD PTR [rbp-0x10]
  404c1f:	mov    rsi,QWORD PTR [rbp-0x10]
  404c23:	mov    rdx,QWORD PTR [rsi+0x180]
  404c2a:	mov    rcx,QWORD PTR [rbp-0x18]
  404c2e:	mov    esi,0x7
  404c33:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  404c38:	mov    QWORD PTR [rbp-0x20],rax
  404c3c:	cmp    rax,0x0
  404c40:	jne    404c53 <flatcc_builder_enter_user_frame_ptr@@Base+0x63>
  404c46:	mov    QWORD PTR [rbp-0x8],0x0
  404c4e:	jmp    404cba <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  404c53:	xor    esi,esi
  404c55:	mov    rax,QWORD PTR [rbp-0x20]
  404c59:	mov    rdx,QWORD PTR [rbp-0x18]
  404c5d:	mov    rdi,rax
  404c60:	call   403080 <memset@plt>
  404c65:	mov    rax,QWORD PTR [rbp-0x10]
  404c69:	mov    rax,QWORD PTR [rax+0x178]
  404c70:	mov    rdx,QWORD PTR [rbp-0x20]
  404c74:	mov    rdi,rdx
  404c77:	add    rdi,0x8
  404c7b:	mov    QWORD PTR [rbp-0x20],rdi
  404c7f:	mov    QWORD PTR [rdx],rax
  404c82:	mov    rax,QWORD PTR [rbp-0x10]
  404c86:	mov    rax,QWORD PTR [rax+0x180]
  404c8d:	add    rax,0x8
  404c91:	mov    rdx,QWORD PTR [rbp-0x10]
  404c95:	mov    QWORD PTR [rdx+0x178],rax
  404c9c:	mov    rax,QWORD PTR [rbp-0x18]
  404ca0:	mov    rdx,QWORD PTR [rbp-0x10]
  404ca4:	add    rax,QWORD PTR [rdx+0x180]
  404cab:	mov    QWORD PTR [rdx+0x180],rax
  404cb2:	mov    rax,QWORD PTR [rbp-0x20]
  404cb6:	mov    QWORD PTR [rbp-0x8],rax
  404cba:	mov    rax,QWORD PTR [rbp-0x8]
  404cbe:	add    rsp,0x20
  404cc2:	pop    rbp
  404cc3:	ret    
  404cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cce:	xchg   ax,ax
  404cd0:	push   rbp
  404cd1:	mov    rbp,rsp
  404cd4:	sub    rsp,0x40
  404cd8:	mov    QWORD PTR [rbp-0x8],rdi
  404cdc:	mov    DWORD PTR [rbp-0xc],esi
  404cdf:	mov    QWORD PTR [rbp-0x18],rdx
  404ce3:	mov    QWORD PTR [rbp-0x20],rcx
  404ce7:	mov    DWORD PTR [rbp-0x24],r8d
  404ceb:	mov    rcx,QWORD PTR [rbp-0x8]
  404cef:	add    rcx,0x58
  404cf3:	movsxd rdx,DWORD PTR [rbp-0xc]
  404cf7:	shl    rdx,0x4
  404cfb:	add    rcx,rdx
  404cfe:	mov    QWORD PTR [rbp-0x30],rcx
  404d02:	mov    rcx,QWORD PTR [rbp-0x18]
  404d06:	add    rcx,QWORD PTR [rbp-0x20]
  404d0a:	mov    rdx,QWORD PTR [rbp-0x30]
  404d0e:	cmp    rcx,QWORD PTR [rdx+0x8]
  404d12:	jbe    404d73 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  404d18:	mov    rax,QWORD PTR [rbp-0x8]
  404d1c:	mov    rax,QWORD PTR [rax+0x50]
  404d20:	mov    rcx,QWORD PTR [rbp-0x8]
  404d24:	mov    rdi,QWORD PTR [rcx+0x40]
  404d28:	mov    rsi,QWORD PTR [rbp-0x30]
  404d2c:	mov    rcx,QWORD PTR [rbp-0x18]
  404d30:	add    rcx,QWORD PTR [rbp-0x20]
  404d34:	mov    edx,DWORD PTR [rbp-0x24]
  404d37:	mov    r8d,DWORD PTR [rbp-0xc]
  404d3b:	mov    DWORD PTR [rbp-0x34],edx
  404d3e:	mov    rdx,rcx
  404d41:	mov    ecx,DWORD PTR [rbp-0x34]
  404d44:	call   rax
  404d46:	cmp    eax,0x0
  404d49:	je     404d6e <flatcc_builder_enter_user_frame_ptr@@Base+0x17e>
  404d4f:	lea    rdi,[rip+0x8bbc]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  404d56:	lea    rsi,[rip+0x79f5]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  404d5d:	mov    edx,0x134
  404d62:	lea    rcx,[rip+0x89e3]        # 40d74c <flatcc_builder_padding_base@@Base+0x120c>
  404d69:	call   403070 <__assert_fail@plt>
  404d6e:	jmp    404d73 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  404d73:	mov    rax,QWORD PTR [rbp-0x30]
  404d77:	mov    rax,QWORD PTR [rax]
  404d7a:	add    rax,QWORD PTR [rbp-0x18]
  404d7e:	add    rsp,0x40
  404d82:	pop    rbp
  404d83:	ret    
  404d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d8e:	xchg   ax,ax

0000000000404d90 <flatcc_builder_enter_user_frame@@Base>:
  404d90:	push   rbp
  404d91:	mov    rbp,rsp
  404d94:	sub    rsp,0x20
  404d98:	xor    r8d,r8d
  404d9b:	mov    QWORD PTR [rbp-0x10],rdi
  404d9f:	mov    QWORD PTR [rbp-0x18],rsi
  404da3:	mov    rsi,QWORD PTR [rbp-0x18]
  404da7:	add    rsi,0x8
  404dab:	sub    rsi,0x1
  404daf:	and    rsi,0xfffffffffffffff8
  404db3:	add    rsi,0x8
  404db7:	mov    QWORD PTR [rbp-0x18],rsi
  404dbb:	mov    rdi,QWORD PTR [rbp-0x10]
  404dbf:	mov    rsi,QWORD PTR [rbp-0x10]
  404dc3:	mov    rdx,QWORD PTR [rsi+0x180]
  404dca:	mov    rcx,QWORD PTR [rbp-0x18]
  404dce:	mov    esi,0x7
  404dd3:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  404dd8:	mov    QWORD PTR [rbp-0x20],rax
  404ddc:	cmp    rax,0x0
  404de0:	jne    404df3 <flatcc_builder_enter_user_frame@@Base+0x63>
  404de6:	mov    QWORD PTR [rbp-0x8],0x0
  404dee:	jmp    404e61 <flatcc_builder_enter_user_frame@@Base+0xd1>
  404df3:	xor    esi,esi
  404df5:	mov    rax,QWORD PTR [rbp-0x20]
  404df9:	mov    rdx,QWORD PTR [rbp-0x18]
  404dfd:	mov    rdi,rax
  404e00:	call   403080 <memset@plt>
  404e05:	mov    rax,QWORD PTR [rbp-0x10]
  404e09:	mov    rax,QWORD PTR [rax+0x178]
  404e10:	mov    rdx,QWORD PTR [rbp-0x20]
  404e14:	mov    rdi,rdx
  404e17:	add    rdi,0x8
  404e1b:	mov    QWORD PTR [rbp-0x20],rdi
  404e1f:	mov    QWORD PTR [rdx],rax
  404e22:	mov    rax,QWORD PTR [rbp-0x10]
  404e26:	mov    rax,QWORD PTR [rax+0x180]
  404e2d:	add    rax,0x8
  404e31:	mov    rdx,QWORD PTR [rbp-0x10]
  404e35:	mov    QWORD PTR [rdx+0x178],rax
  404e3c:	mov    rax,QWORD PTR [rbp-0x18]
  404e40:	mov    rdx,QWORD PTR [rbp-0x10]
  404e44:	add    rax,QWORD PTR [rdx+0x180]
  404e4b:	mov    QWORD PTR [rdx+0x180],rax
  404e52:	mov    rax,QWORD PTR [rbp-0x10]
  404e56:	mov    rax,QWORD PTR [rax+0x178]
  404e5d:	mov    QWORD PTR [rbp-0x8],rax
  404e61:	mov    rax,QWORD PTR [rbp-0x8]
  404e65:	add    rsp,0x20
  404e69:	pop    rbp
  404e6a:	ret    
  404e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e70 <flatcc_builder_exit_user_frame@@Base>:
  404e70:	push   rbp
  404e71:	mov    rbp,rsp
  404e74:	sub    rsp,0x10
  404e78:	mov    QWORD PTR [rbp-0x8],rdi
  404e7c:	mov    rdi,QWORD PTR [rbp-0x8]
  404e80:	cmp    QWORD PTR [rdi+0x178],0x0
  404e88:	jbe    404e93 <flatcc_builder_exit_user_frame@@Base+0x23>
  404e8e:	jmp    404eb2 <flatcc_builder_exit_user_frame@@Base+0x42>
  404e93:	lea    rdi,[rip+0x7956]        # 40c7f0 <flatcc_builder_padding_base@@Base+0x2b0>
  404e9a:	lea    rsi,[rip+0x78b1]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  404ea1:	mov    edx,0x21e
  404ea6:	lea    rcx,[rip+0x795c]        # 40c809 <flatcc_builder_padding_base@@Base+0x2c9>
  404ead:	call   403070 <__assert_fail@plt>
  404eb2:	mov    rax,QWORD PTR [rbp-0x8]
  404eb6:	mov    rax,QWORD PTR [rax+0xc8]
  404ebd:	mov    rcx,QWORD PTR [rbp-0x8]
  404ec1:	mov    rcx,QWORD PTR [rcx+0x178]
  404ec8:	mov    edx,ecx
  404eca:	mov    edx,edx
  404ecc:	mov    ecx,edx
  404ece:	add    rax,rcx
  404ed1:	mov    QWORD PTR [rbp-0x10],rax
  404ed5:	mov    rax,QWORD PTR [rbp-0x8]
  404ed9:	mov    rax,QWORD PTR [rax+0x178]
  404ee0:	sub    rax,0x8
  404ee4:	mov    rcx,QWORD PTR [rbp-0x8]
  404ee8:	mov    QWORD PTR [rcx+0x180],rax
  404eef:	mov    rax,QWORD PTR [rbp-0x10]
  404ef3:	mov    rax,QWORD PTR [rax-0x8]
  404ef7:	mov    rcx,QWORD PTR [rbp-0x8]
  404efb:	mov    QWORD PTR [rcx+0x178],rax
  404f02:	add    rsp,0x10
  404f06:	pop    rbp
  404f07:	ret    
  404f08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404f10 <flatcc_builder_exit_user_frame_at@@Base>:
  404f10:	push   rbp
  404f11:	mov    rbp,rsp
  404f14:	sub    rsp,0x10
  404f18:	mov    QWORD PTR [rbp-0x8],rdi
  404f1c:	mov    QWORD PTR [rbp-0x10],rsi
  404f20:	mov    rsi,QWORD PTR [rbp-0x8]
  404f24:	mov    rsi,QWORD PTR [rsi+0x178]
  404f2b:	cmp    rsi,QWORD PTR [rbp-0x10]
  404f2f:	jb     404f3a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  404f35:	jmp    404f59 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  404f3a:	lea    rdi,[rip+0x7902]        # 40c843 <flatcc_builder_padding_base@@Base+0x303>
  404f41:	lea    rsi,[rip+0x780a]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  404f48:	mov    edx,0x227
  404f4d:	lea    rcx,[rip+0x790e]        # 40c862 <flatcc_builder_padding_base@@Base+0x322>
  404f54:	call   403070 <__assert_fail@plt>
  404f59:	mov    rax,QWORD PTR [rbp-0x10]
  404f5d:	mov    rcx,QWORD PTR [rbp-0x8]
  404f61:	mov    QWORD PTR [rcx+0x178],rax
  404f68:	mov    rdi,QWORD PTR [rbp-0x8]
  404f6c:	call   404e70 <flatcc_builder_exit_user_frame@@Base>
  404f71:	add    rsp,0x10
  404f75:	pop    rbp
  404f76:	ret    
  404f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404f80 <flatcc_builder_get_current_user_frame@@Base>:
  404f80:	push   rbp
  404f81:	mov    rbp,rsp
  404f84:	mov    QWORD PTR [rbp-0x8],rdi
  404f88:	mov    rdi,QWORD PTR [rbp-0x8]
  404f8c:	mov    rax,QWORD PTR [rdi+0x178]
  404f93:	pop    rbp
  404f94:	ret    
  404f95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f9f:	nop

0000000000404fa0 <flatcc_builder_get_user_frame_ptr@@Base>:
  404fa0:	push   rbp
  404fa1:	mov    rbp,rsp
  404fa4:	mov    QWORD PTR [rbp-0x8],rdi
  404fa8:	mov    QWORD PTR [rbp-0x10],rsi
  404fac:	mov    rsi,QWORD PTR [rbp-0x8]
  404fb0:	mov    rsi,QWORD PTR [rsi+0xc8]
  404fb7:	mov    rdi,QWORD PTR [rbp-0x10]
  404fbb:	mov    eax,edi
  404fbd:	mov    eax,eax
  404fbf:	mov    edi,eax
  404fc1:	add    rsi,rdi
  404fc4:	mov    rax,rsi
  404fc7:	pop    rbp
  404fc8:	ret    
  404fc9:	nop    DWORD PTR [rax+0x0]

0000000000404fd0 <flatcc_builder_embed_buffer@@Base>:
  404fd0:	push   rbp
  404fd1:	mov    rbp,rsp
  404fd4:	sub    rsp,0xd0
  404fdb:	mov    ax,r8w
  404fdf:	mov    r10w,si
  404fe3:	mov    QWORD PTR [rbp-0x10],rdi
  404fe7:	mov    WORD PTR [rbp-0x12],r10w
  404fec:	mov    QWORD PTR [rbp-0x20],rdx
  404ff0:	mov    QWORD PTR [rbp-0x28],rcx
  404ff4:	mov    WORD PTR [rbp-0x2a],ax
  404ff8:	mov    DWORD PTR [rbp-0x30],r9d
  404ffc:	mov    esi,DWORD PTR [rbp-0x30]
  404fff:	and    esi,0x2
  405002:	mov    DWORD PTR [rbp-0xcc],esi
  405008:	mov    rdi,QWORD PTR [rbp-0x10]
  40500c:	mov    ax,WORD PTR [rbp-0x12]
  405010:	mov    rcx,QWORD PTR [rbp-0x10]
  405014:	cmp    DWORD PTR [rcx+0x100],0x0
  40501b:	sete   r11b
  40501f:	xor    r11b,0xff
  405023:	and    r11b,0x1
  405027:	movzx  ecx,r11b
  40502b:	lea    rsi,[rbp-0x2a]
  40502f:	movzx  edx,ax
  405032:	call   405220 <flatcc_builder_embed_buffer@@Base+0x250>
  405037:	cmp    eax,0x0
  40503a:	je     40504c <flatcc_builder_embed_buffer@@Base+0x7c>
  405040:	mov    DWORD PTR [rbp-0x4],0x0
  405047:	jmp    405205 <flatcc_builder_embed_buffer@@Base+0x235>
  40504c:	xor    eax,eax
  40504e:	mov    ecx,eax
  405050:	mov    eax,0x4
  405055:	mov    edx,eax
  405057:	mov    rdi,QWORD PTR [rbp-0x10]
  40505b:	mov    rsi,QWORD PTR [rbp-0x28]
  40505f:	mov    eax,esi
  405061:	mov    eax,eax
  405063:	mov    esi,eax
  405065:	mov    eax,DWORD PTR [rbp-0xcc]
  40506b:	cmp    eax,0x0
  40506e:	cmovne rcx,rdx
  405072:	add    rsi,rcx
  405075:	mov    eax,esi
  405077:	mov    esi,eax
  405079:	movzx  edx,WORD PTR [rbp-0x2a]
  40507d:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405082:	mov    DWORD PTR [rbp-0x38],eax
  405085:	mov    rcx,QWORD PTR [rbp-0x28]
  405089:	mov    eax,ecx
  40508b:	add    eax,DWORD PTR [rbp-0x38]
  40508e:	mov    edi,eax
  405090:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  405095:	mov    DWORD PTR [rbp-0x34],eax
  405098:	mov    QWORD PTR [rbp-0xc8],0x0
  4050a3:	mov    DWORD PTR [rbp-0xc0],0x0
  4050ad:	mov    rcx,QWORD PTR [rbp-0x10]
  4050b1:	cmp    DWORD PTR [rcx+0x100],0x0
  4050b8:	je     40511c <flatcc_builder_embed_buffer@@Base+0x14c>
  4050be:	mov    rax,QWORD PTR [rbp-0xc8]
  4050c5:	add    rax,0x4
  4050c9:	mov    QWORD PTR [rbp-0xc8],rax
  4050d0:	lea    rax,[rbp-0x34]
  4050d4:	lea    rcx,[rbp-0xc8]
  4050db:	mov    rdx,rcx
  4050de:	add    rdx,0x10
  4050e2:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4050e9:	shl    rsi,0x4
  4050ed:	add    rdx,rsi
  4050f0:	mov    QWORD PTR [rdx],rax
  4050f3:	add    rcx,0x10
  4050f7:	movsxd rax,DWORD PTR [rbp-0xc0]
  4050fe:	shl    rax,0x4
  405102:	add    rcx,rax
  405105:	mov    QWORD PTR [rcx+0x8],0x4
  40510d:	mov    edi,DWORD PTR [rbp-0xc0]
  405113:	add    edi,0x1
  405116:	mov    DWORD PTR [rbp-0xc0],edi
  40511c:	cmp    QWORD PTR [rbp-0x28],0x0
  405121:	jbe    405185 <flatcc_builder_embed_buffer@@Base+0x1b5>
  405127:	mov    rax,QWORD PTR [rbp-0x28]
  40512b:	add    rax,QWORD PTR [rbp-0xc8]
  405132:	mov    QWORD PTR [rbp-0xc8],rax
  405139:	mov    rax,QWORD PTR [rbp-0x20]
  40513d:	lea    rcx,[rbp-0xc8]
  405144:	mov    rdx,rcx
  405147:	add    rdx,0x10
  40514b:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405152:	shl    rsi,0x4
  405156:	add    rdx,rsi
  405159:	mov    QWORD PTR [rdx],rax
  40515c:	mov    rax,QWORD PTR [rbp-0x28]
  405160:	add    rcx,0x10
  405164:	movsxd rdx,DWORD PTR [rbp-0xc0]
  40516b:	shl    rdx,0x4
  40516f:	add    rcx,rdx
  405172:	mov    QWORD PTR [rcx+0x8],rax
  405176:	mov    edi,DWORD PTR [rbp-0xc0]
  40517c:	add    edi,0x1
  40517f:	mov    DWORD PTR [rbp-0xc0],edi
  405185:	cmp    DWORD PTR [rbp-0x38],0x0
  405189:	jbe    4051f2 <flatcc_builder_embed_buffer@@Base+0x222>
  40518f:	lea    rax,[rip+0x73aa]        # 40c540 <flatcc_builder_padding_base@@Base>
  405196:	mov    ecx,DWORD PTR [rbp-0x38]
  405199:	mov    edx,ecx
  40519b:	add    rdx,QWORD PTR [rbp-0xc8]
  4051a2:	mov    QWORD PTR [rbp-0xc8],rdx
  4051a9:	lea    rdx,[rbp-0xc8]
  4051b0:	mov    rsi,rdx
  4051b3:	add    rsi,0x10
  4051b7:	movsxd rdi,DWORD PTR [rbp-0xc0]
  4051be:	shl    rdi,0x4
  4051c2:	add    rsi,rdi
  4051c5:	mov    QWORD PTR [rsi],rax
  4051c8:	mov    ecx,DWORD PTR [rbp-0x38]
  4051cb:	mov    eax,ecx
  4051cd:	add    rdx,0x10
  4051d1:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4051d8:	shl    rsi,0x4
  4051dc:	add    rdx,rsi
  4051df:	mov    QWORD PTR [rdx+0x8],rax
  4051e3:	mov    ecx,DWORD PTR [rbp-0xc0]
  4051e9:	add    ecx,0x1
  4051ec:	mov    DWORD PTR [rbp-0xc0],ecx
  4051f2:	mov    rdi,QWORD PTR [rbp-0x10]
  4051f6:	lea    rsi,[rbp-0xc8]
  4051fd:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  405202:	mov    DWORD PTR [rbp-0x4],eax
  405205:	mov    eax,DWORD PTR [rbp-0x4]
  405208:	add    rsp,0xd0
  40520f:	pop    rbp
  405210:	ret    
  405211:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40521b:	nop    DWORD PTR [rax+rax*1+0x0]
  405220:	push   rbp
  405221:	mov    rbp,rsp
  405224:	sub    rsp,0xc0
  40522b:	mov    ax,dx
  40522e:	mov    QWORD PTR [rbp-0x8],rdi
  405232:	mov    QWORD PTR [rbp-0x10],rsi
  405236:	mov    WORD PTR [rbp-0x12],ax
  40523a:	mov    DWORD PTR [rbp-0x18],ecx
  40523d:	movzx  ecx,WORD PTR [rbp-0x12]
  405241:	cmp    ecx,0x0
  405244:	je     405259 <flatcc_builder_embed_buffer@@Base+0x289>
  40524a:	movzx  eax,WORD PTR [rbp-0x12]
  40524e:	mov    DWORD PTR [rbp-0xb4],eax
  405254:	jmp    40529f <flatcc_builder_embed_buffer@@Base+0x2cf>
  405259:	mov    rax,QWORD PTR [rbp-0x8]
  40525d:	movzx  ecx,WORD PTR [rax+0xec]
  405264:	cmp    ecx,0x0
  405267:	je     405283 <flatcc_builder_embed_buffer@@Base+0x2b3>
  40526d:	mov    rax,QWORD PTR [rbp-0x8]
  405271:	movzx  ecx,WORD PTR [rax+0xec]
  405278:	mov    DWORD PTR [rbp-0xb8],ecx
  40527e:	jmp    405293 <flatcc_builder_embed_buffer@@Base+0x2c3>
  405283:	mov    eax,0x1
  405288:	mov    DWORD PTR [rbp-0xb8],eax
  40528e:	jmp    405293 <flatcc_builder_embed_buffer@@Base+0x2c3>
  405293:	mov    eax,DWORD PTR [rbp-0xb8]
  405299:	mov    DWORD PTR [rbp-0xb4],eax
  40529f:	mov    eax,DWORD PTR [rbp-0xb4]
  4052a5:	mov    cx,ax
  4052a8:	mov    WORD PTR [rbp-0x12],cx
  4052ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4052b0:	mov    esi,0x4
  4052b5:	call   406da0 <flatcc_builder_start_vector@@Base+0xb0>
  4052ba:	mov    rdi,QWORD PTR [rbp-0x10]
  4052be:	movzx  esi,WORD PTR [rbp-0x12]
  4052c2:	call   406da0 <flatcc_builder_start_vector@@Base+0xb0>
  4052c7:	cmp    DWORD PTR [rbp-0x18],0x0
  4052cb:	jne    4053b5 <flatcc_builder_embed_buffer@@Base+0x3e5>
  4052d1:	mov    rdi,QWORD PTR [rbp-0x8]
  4052d5:	movzx  esi,WORD PTR [rbp-0x12]
  4052d9:	call   40a130 <flatcc_builder_get_emit_context@@Base+0x20>
  4052de:	mov    eax,eax
  4052e0:	mov    edi,eax
  4052e2:	mov    QWORD PTR [rbp-0x20],rdi
  4052e6:	cmp    QWORD PTR [rbp-0x20],0x0
  4052eb:	je     4053b0 <flatcc_builder_embed_buffer@@Base+0x3e0>
  4052f1:	mov    QWORD PTR [rbp-0xb0],0x0
  4052fc:	mov    DWORD PTR [rbp-0xa8],0x0
  405306:	cmp    QWORD PTR [rbp-0x20],0x0
  40530b:	jbe    405372 <flatcc_builder_embed_buffer@@Base+0x3a2>
  405311:	lea    rax,[rip+0x7228]        # 40c540 <flatcc_builder_padding_base@@Base>
  405318:	mov    rcx,QWORD PTR [rbp-0x20]
  40531c:	add    rcx,QWORD PTR [rbp-0xb0]
  405323:	mov    QWORD PTR [rbp-0xb0],rcx
  40532a:	lea    rcx,[rbp-0xb0]
  405331:	mov    rdx,rcx
  405334:	add    rdx,0x10
  405338:	movsxd rsi,DWORD PTR [rbp-0xa8]
  40533f:	shl    rsi,0x4
  405343:	add    rdx,rsi
  405346:	mov    QWORD PTR [rdx],rax
  405349:	mov    rax,QWORD PTR [rbp-0x20]
  40534d:	add    rcx,0x10
  405351:	movsxd rdx,DWORD PTR [rbp-0xa8]
  405358:	shl    rdx,0x4
  40535c:	add    rcx,rdx
  40535f:	mov    QWORD PTR [rcx+0x8],rax
  405363:	mov    edi,DWORD PTR [rbp-0xa8]
  405369:	add    edi,0x1
  40536c:	mov    DWORD PTR [rbp-0xa8],edi
  405372:	mov    rdi,QWORD PTR [rbp-0x8]
  405376:	lea    rsi,[rbp-0xb0]
  40537d:	call   4073a0 <flatcc_builder_create_vtable@@Base+0x140>
  405382:	xor    ecx,ecx
  405384:	cmp    ecx,eax
  405386:	jne    4053ab <flatcc_builder_embed_buffer@@Base+0x3db>
  40538c:	lea    rdi,[rip+0x857f]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  405393:	lea    rsi,[rip+0x73b8]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40539a:	mov    edx,0x2be
  40539f:	lea    rcx,[rip+0x83e9]        # 40d78f <flatcc_builder_padding_base@@Base+0x124f>
  4053a6:	call   403070 <__assert_fail@plt>
  4053ab:	jmp    4053b0 <flatcc_builder_embed_buffer@@Base+0x3e0>
  4053b0:	jmp    4053b5 <flatcc_builder_embed_buffer@@Base+0x3e5>
  4053b5:	xor    eax,eax
  4053b7:	add    rsp,0xc0
  4053be:	pop    rbp
  4053bf:	ret    
  4053c0:	push   rbp
  4053c1:	mov    rbp,rsp
  4053c4:	mov    ax,dx
  4053c7:	mov    QWORD PTR [rbp-0x8],rdi
  4053cb:	mov    DWORD PTR [rbp-0xc],esi
  4053ce:	mov    WORD PTR [rbp-0xe],ax
  4053d2:	mov    rdi,QWORD PTR [rbp-0x8]
  4053d6:	mov    edx,DWORD PTR [rdi+0xf0]
  4053dc:	sub    edx,DWORD PTR [rbp-0xc]
  4053df:	movzx  esi,WORD PTR [rbp-0xe]
  4053e3:	sub    esi,0x1
  4053e6:	and    edx,esi
  4053e8:	mov    eax,edx
  4053ea:	pop    rbp
  4053eb:	ret    
  4053ec:	nop    DWORD PTR [rax+0x0]
  4053f0:	push   rbp
  4053f1:	mov    rbp,rsp
  4053f4:	mov    DWORD PTR [rbp-0x4],edi
  4053f7:	mov    eax,DWORD PTR [rbp-0x4]
  4053fa:	pop    rbp
  4053fb:	ret    
  4053fc:	nop    DWORD PTR [rax+0x0]
  405400:	push   rbp
  405401:	mov    rbp,rsp
  405404:	sub    rsp,0x20
  405408:	mov    QWORD PTR [rbp-0x8],rdi
  40540c:	mov    QWORD PTR [rbp-0x10],rsi
  405410:	mov    rsi,QWORD PTR [rbp-0x8]
  405414:	mov    eax,DWORD PTR [rsi+0xf0]
  40541a:	mov    rsi,QWORD PTR [rbp-0x10]
  40541e:	mov    rsi,QWORD PTR [rsi]
  405421:	mov    ecx,esi
  405423:	sub    eax,ecx
  405425:	mov    DWORD PTR [rbp-0x14],eax
  405428:	mov    rsi,QWORD PTR [rbp-0x10]
  40542c:	cmp    QWORD PTR [rsi],0x10
  405430:	jbe    405451 <flatcc_builder_embed_buffer@@Base+0x481>
  405436:	mov    eax,0xffffffff
  40543b:	mov    ecx,eax
  40543d:	mov    rdx,QWORD PTR [rbp-0x10]
  405441:	mov    rdx,QWORD PTR [rdx]
  405444:	sub    rdx,0x10
  405448:	cmp    rdx,rcx
  40544b:	ja     405464 <flatcc_builder_embed_buffer@@Base+0x494>
  405451:	mov    eax,DWORD PTR [rbp-0x14]
  405454:	mov    rcx,QWORD PTR [rbp-0x8]
  405458:	cmp    eax,DWORD PTR [rcx+0xf0]
  40545e:	jl     405483 <flatcc_builder_embed_buffer@@Base+0x4b3>
  405464:	lea    rdi,[rip+0x84a7]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  40546b:	lea    rsi,[rip+0x72e0]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  405472:	mov    edx,0x287
  405477:	lea    rcx,[rip+0x8353]        # 40d7d1 <flatcc_builder_padding_base@@Base+0x1291>
  40547e:	call   403070 <__assert_fail@plt>
  405483:	mov    rax,QWORD PTR [rbp-0x8]
  405487:	mov    rax,QWORD PTR [rax+0x48]
  40548b:	mov    rcx,QWORD PTR [rbp-0x8]
  40548f:	mov    rdi,QWORD PTR [rcx+0x38]
  405493:	mov    rcx,QWORD PTR [rbp-0x10]
  405497:	add    rcx,0x10
  40549b:	mov    rdx,QWORD PTR [rbp-0x10]
  40549f:	mov    edx,DWORD PTR [rdx+0x8]
  4054a2:	mov    esi,DWORD PTR [rbp-0x14]
  4054a5:	mov    r8,QWORD PTR [rbp-0x10]
  4054a9:	mov    r8,QWORD PTR [r8]
  4054ac:	mov    DWORD PTR [rbp-0x18],esi
  4054af:	mov    rsi,rcx
  4054b2:	mov    ecx,DWORD PTR [rbp-0x18]
  4054b5:	call   rax
  4054b7:	cmp    eax,0x0
  4054ba:	je     4054df <flatcc_builder_embed_buffer@@Base+0x50f>
  4054c0:	lea    rdi,[rip+0x844b]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4054c7:	lea    rsi,[rip+0x7284]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4054ce:	mov    edx,0x28b
  4054d3:	lea    rcx,[rip+0x82f7]        # 40d7d1 <flatcc_builder_padding_base@@Base+0x1291>
  4054da:	call   403070 <__assert_fail@plt>
  4054df:	mov    eax,DWORD PTR [rbp-0x14]
  4054e2:	mov    rcx,QWORD PTR [rbp-0x8]
  4054e6:	mov    DWORD PTR [rcx+0xf0],eax
  4054ec:	add    rsp,0x20
  4054f0:	pop    rbp
  4054f1:	ret    
  4054f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054fc:	nop    DWORD PTR [rax+0x0]

0000000000405500 <flatcc_builder_create_buffer@@Base>:
  405500:	push   rbp
  405501:	mov    rbp,rsp
  405504:	sub    rsp,0xf0
  40550b:	mov    ax,r8w
  40550f:	mov    r10w,dx
  405513:	mov    QWORD PTR [rbp-0x10],rdi
  405517:	mov    QWORD PTR [rbp-0x18],rsi
  40551b:	mov    WORD PTR [rbp-0x1a],r10w
  405520:	mov    DWORD PTR [rbp-0x20],ecx
  405523:	mov    WORD PTR [rbp-0x22],ax
  405527:	mov    DWORD PTR [rbp-0x28],r9d
  40552b:	mov    DWORD PTR [rbp-0x34],0x0
  405532:	mov    DWORD PTR [rbp-0xd4],0x0
  40553c:	mov    ecx,DWORD PTR [rbp-0x28]
  40553f:	and    ecx,0x1
  405542:	cmp    ecx,0x0
  405545:	setne  r11b
  405549:	and    r11b,0x1
  40554d:	movzx  ecx,r11b
  405551:	mov    DWORD PTR [rbp-0xd8],ecx
  405557:	mov    ecx,DWORD PTR [rbp-0x28]
  40555a:	and    ecx,0x2
  40555d:	cmp    ecx,0x0
  405560:	setne  r11b
  405564:	and    r11b,0x1
  405568:	movzx  ecx,r11b
  40556c:	mov    DWORD PTR [rbp-0xdc],ecx
  405572:	mov    rdi,QWORD PTR [rbp-0x10]
  405576:	mov    ax,WORD PTR [rbp-0x1a]
  40557a:	mov    ecx,DWORD PTR [rbp-0xd8]
  405580:	lea    rsi,[rbp-0x22]
  405584:	movzx  edx,ax
  405587:	call   405220 <flatcc_builder_embed_buffer@@Base+0x250>
  40558c:	cmp    eax,0x0
  40558f:	je     4055a1 <flatcc_builder_create_buffer@@Base+0xa1>
  405595:	mov    DWORD PTR [rbp-0x4],0x0
  40559c:	jmp    4058fb <flatcc_builder_create_buffer@@Base+0x3fb>
  4055a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4055a5:	movzx  esi,WORD PTR [rbp-0x22]
  4055a9:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  4055ae:	cmp    QWORD PTR [rbp-0x18],0x0
  4055b3:	je     4055e7 <flatcc_builder_create_buffer@@Base+0xe7>
  4055b9:	mov    rax,QWORD PTR [rbp-0x18]
  4055bd:	mov    ecx,DWORD PTR [rax]
  4055bf:	mov    DWORD PTR [rbp-0xd4],ecx
  4055c5:	mov    edi,DWORD PTR [rbp-0xd4]
  4055cb:	call   405950 <flatcc_builder_create_buffer@@Base+0x450>
  4055d0:	mov    DWORD PTR [rbp-0xd4],eax
  4055d6:	mov    edi,DWORD PTR [rbp-0xd4]
  4055dc:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  4055e1:	mov    DWORD PTR [rbp-0xd4],eax
  4055e7:	xor    eax,eax
  4055e9:	mov    ecx,eax
  4055eb:	mov    eax,0x4
  4055f0:	mov    edx,eax
  4055f2:	xor    eax,eax
  4055f4:	mov    esi,DWORD PTR [rbp-0xd4]
  4055fa:	cmp    esi,0x0
  4055fd:	mov    esi,0x4
  405602:	cmovne eax,esi
  405605:	mov    DWORD PTR [rbp-0x34],eax
  405608:	mov    rdi,QWORD PTR [rbp-0x10]
  40560c:	mov    eax,DWORD PTR [rbp-0x34]
  40560f:	mov    r8d,eax
  405612:	add    r8,0x4
  405616:	mov    eax,DWORD PTR [rbp-0xdc]
  40561c:	cmp    eax,0x0
  40561f:	cmovne rcx,rdx
  405623:	add    r8,rcx
  405626:	mov    eax,r8d
  405629:	mov    esi,eax
  40562b:	movzx  edx,WORD PTR [rbp-0x22]
  40562f:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405634:	mov    DWORD PTR [rbp-0x30],eax
  405637:	mov    QWORD PTR [rbp-0xd0],0x0
  405642:	mov    DWORD PTR [rbp-0xc8],0x0
  40564c:	cmp    DWORD PTR [rbp-0xd8],0x0
  405653:	jne    405666 <flatcc_builder_create_buffer@@Base+0x166>
  405659:	cmp    DWORD PTR [rbp-0xdc],0x0
  405660:	je     4056c4 <flatcc_builder_create_buffer@@Base+0x1c4>
  405666:	mov    rax,QWORD PTR [rbp-0xd0]
  40566d:	add    rax,0x4
  405671:	mov    QWORD PTR [rbp-0xd0],rax
  405678:	lea    rax,[rbp-0x3c]
  40567c:	lea    rcx,[rbp-0xd0]
  405683:	mov    rdx,rcx
  405686:	add    rdx,0x10
  40568a:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405691:	shl    rsi,0x4
  405695:	add    rdx,rsi
  405698:	mov    QWORD PTR [rdx],rax
  40569b:	add    rcx,0x10
  40569f:	movsxd rax,DWORD PTR [rbp-0xc8]
  4056a6:	shl    rax,0x4
  4056aa:	add    rcx,rax
  4056ad:	mov    QWORD PTR [rcx+0x8],0x4
  4056b5:	mov    edi,DWORD PTR [rbp-0xc8]
  4056bb:	add    edi,0x1
  4056be:	mov    DWORD PTR [rbp-0xc8],edi
  4056c4:	mov    rax,QWORD PTR [rbp-0xd0]
  4056cb:	add    rax,0x4
  4056cf:	mov    QWORD PTR [rbp-0xd0],rax
  4056d6:	lea    rax,[rbp-0x38]
  4056da:	lea    rcx,[rbp-0xd0]
  4056e1:	mov    rdx,rcx
  4056e4:	add    rdx,0x10
  4056e8:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4056ef:	shl    rsi,0x4
  4056f3:	add    rdx,rsi
  4056f6:	mov    QWORD PTR [rdx],rax
  4056f9:	add    rcx,0x10
  4056fd:	movsxd rax,DWORD PTR [rbp-0xc8]
  405704:	shl    rax,0x4
  405708:	add    rcx,rax
  40570b:	mov    QWORD PTR [rcx+0x8],0x4
  405713:	mov    edi,DWORD PTR [rbp-0xc8]
  405719:	add    edi,0x1
  40571c:	mov    DWORD PTR [rbp-0xc8],edi
  405722:	cmp    DWORD PTR [rbp-0x34],0x0
  405726:	jbe    40578f <flatcc_builder_create_buffer@@Base+0x28f>
  40572c:	mov    eax,DWORD PTR [rbp-0x34]
  40572f:	mov    ecx,eax
  405731:	add    rcx,QWORD PTR [rbp-0xd0]
  405738:	mov    QWORD PTR [rbp-0xd0],rcx
  40573f:	lea    rcx,[rbp-0xd4]
  405746:	lea    rdx,[rbp-0xd0]
  40574d:	mov    rsi,rdx
  405750:	add    rsi,0x10
  405754:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40575b:	shl    rdi,0x4
  40575f:	add    rsi,rdi
  405762:	mov    QWORD PTR [rsi],rcx
  405765:	mov    eax,DWORD PTR [rbp-0x34]
  405768:	mov    ecx,eax
  40576a:	add    rdx,0x10
  40576e:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405775:	shl    rsi,0x4
  405779:	add    rdx,rsi
  40577c:	mov    QWORD PTR [rdx+0x8],rcx
  405780:	mov    eax,DWORD PTR [rbp-0xc8]
  405786:	add    eax,0x1
  405789:	mov    DWORD PTR [rbp-0xc8],eax
  40578f:	cmp    DWORD PTR [rbp-0x30],0x0
  405793:	jbe    4057fc <flatcc_builder_create_buffer@@Base+0x2fc>
  405799:	lea    rax,[rip+0x6da0]        # 40c540 <flatcc_builder_padding_base@@Base>
  4057a0:	mov    ecx,DWORD PTR [rbp-0x30]
  4057a3:	mov    edx,ecx
  4057a5:	add    rdx,QWORD PTR [rbp-0xd0]
  4057ac:	mov    QWORD PTR [rbp-0xd0],rdx
  4057b3:	lea    rdx,[rbp-0xd0]
  4057ba:	mov    rsi,rdx
  4057bd:	add    rsi,0x10
  4057c1:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4057c8:	shl    rdi,0x4
  4057cc:	add    rsi,rdi
  4057cf:	mov    QWORD PTR [rsi],rax
  4057d2:	mov    ecx,DWORD PTR [rbp-0x30]
  4057d5:	mov    eax,ecx
  4057d7:	add    rdx,0x10
  4057db:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4057e2:	shl    rsi,0x4
  4057e6:	add    rdx,rsi
  4057e9:	mov    QWORD PTR [rdx+0x8],rax
  4057ed:	mov    ecx,DWORD PTR [rbp-0xc8]
  4057f3:	add    ecx,0x1
  4057f6:	mov    DWORD PTR [rbp-0xc8],ecx
  4057fc:	mov    rax,QWORD PTR [rbp-0x10]
  405800:	mov    ecx,DWORD PTR [rax+0xf0]
  405806:	mov    rax,QWORD PTR [rbp-0xd0]
  40580d:	mov    edx,eax
  40580f:	sub    ecx,edx
  405811:	mov    ecx,ecx
  405813:	mov    eax,ecx
  405815:	cmp    DWORD PTR [rbp-0xd8],0x0
  40581c:	mov    sil,0x1
  40581f:	mov    QWORD PTR [rbp-0xe8],rax
  405826:	mov    BYTE PTR [rbp-0xe9],sil
  40582d:	jne    405843 <flatcc_builder_create_buffer@@Base+0x343>
  405833:	cmp    DWORD PTR [rbp-0xdc],0x0
  40583a:	setne  al
  40583d:	mov    BYTE PTR [rbp-0xe9],al
  405843:	mov    al,BYTE PTR [rbp-0xe9]
  405849:	xor    ecx,ecx
  40584b:	mov    edx,ecx
  40584d:	mov    ecx,0x4
  405852:	mov    esi,ecx
  405854:	test   al,0x1
  405856:	cmovne rdx,rsi
  40585a:	mov    rsi,QWORD PTR [rbp-0xe8]
  405861:	add    rsi,rdx
  405864:	mov    ecx,esi
  405866:	mov    DWORD PTR [rbp-0x40],ecx
  405869:	cmp    DWORD PTR [rbp-0xd8],0x0
  405870:	je     405892 <flatcc_builder_create_buffer@@Base+0x392>
  405876:	mov    rax,QWORD PTR [rbp-0x10]
  40587a:	mov    ecx,DWORD PTR [rax+0xf8]
  405880:	sub    ecx,DWORD PTR [rbp-0x40]
  405883:	mov    edi,ecx
  405885:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  40588a:	mov    DWORD PTR [rbp-0x3c],eax
  40588d:	jmp    4058a9 <flatcc_builder_create_buffer@@Base+0x3a9>
  405892:	mov    rax,QWORD PTR [rbp-0x10]
  405896:	mov    ecx,DWORD PTR [rax+0xf4]
  40589c:	sub    ecx,DWORD PTR [rbp-0x40]
  40589f:	mov    edi,ecx
  4058a1:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  4058a6:	mov    DWORD PTR [rbp-0x3c],eax
  4058a9:	mov    eax,DWORD PTR [rbp-0x20]
  4058ac:	sub    eax,DWORD PTR [rbp-0x40]
  4058af:	mov    edi,eax
  4058b1:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  4058b6:	mov    DWORD PTR [rbp-0x38],eax
  4058b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4058bd:	lea    rsi,[rbp-0xd0]
  4058c4:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  4058c9:	xor    ecx,ecx
  4058cb:	mov    DWORD PTR [rbp-0x2c],eax
  4058ce:	cmp    ecx,eax
  4058d0:	jne    4058f5 <flatcc_builder_create_buffer@@Base+0x3f5>
  4058d6:	lea    rdi,[rip+0x8035]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4058dd:	lea    rsi,[rip+0x6e6e]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4058e4:	mov    edx,0x304
  4058e9:	lea    rcx,[rip+0x6fb7]        # 40c8a7 <flatcc_builder_padding_base@@Base+0x367>
  4058f0:	call   403070 <__assert_fail@plt>
  4058f5:	mov    eax,DWORD PTR [rbp-0x2c]
  4058f8:	mov    DWORD PTR [rbp-0x4],eax
  4058fb:	mov    eax,DWORD PTR [rbp-0x4]
  4058fe:	add    rsp,0xf0
  405905:	pop    rbp
  405906:	ret    
  405907:	nop    WORD PTR [rax+rax*1+0x0]
  405910:	push   rbp
  405911:	mov    rbp,rsp
  405914:	mov    ax,si
  405917:	mov    QWORD PTR [rbp-0x8],rdi
  40591b:	mov    WORD PTR [rbp-0xa],ax
  40591f:	mov    rdi,QWORD PTR [rbp-0x8]
  405923:	movzx  esi,WORD PTR [rdi+0xe8]
  40592a:	movzx  ecx,WORD PTR [rbp-0xa]
  40592e:	cmp    esi,ecx
  405930:	jge    405945 <flatcc_builder_create_buffer@@Base+0x445>
  405936:	mov    ax,WORD PTR [rbp-0xa]
  40593a:	mov    rcx,QWORD PTR [rbp-0x8]
  40593e:	mov    WORD PTR [rcx+0xe8],ax
  405945:	pop    rbp
  405946:	ret    
  405947:	nop    WORD PTR [rax+rax*1+0x0]
  405950:	push   rbp
  405951:	mov    rbp,rsp
  405954:	mov    DWORD PTR [rbp-0x4],edi
  405957:	mov    eax,DWORD PTR [rbp-0x4]
  40595a:	pop    rbp
  40595b:	ret    
  40595c:	nop    DWORD PTR [rax+0x0]

0000000000405960 <flatcc_builder_create_struct@@Base>:
  405960:	push   rbp
  405961:	mov    rbp,rsp
  405964:	sub    rsp,0xc0
  40596b:	mov    ax,cx
  40596e:	mov    QWORD PTR [rbp-0x8],rdi
  405972:	mov    QWORD PTR [rbp-0x10],rsi
  405976:	mov    QWORD PTR [rbp-0x18],rdx
  40597a:	mov    WORD PTR [rbp-0x1a],ax
  40597e:	movzx  ecx,WORD PTR [rbp-0x1a]
  405982:	cmp    ecx,0x1
  405985:	jl     405990 <flatcc_builder_create_struct@@Base+0x30>
  40598b:	jmp    4059af <flatcc_builder_create_struct@@Base+0x4f>
  405990:	lea    rdi,[rip+0x6f93]        # 40c92a <flatcc_builder_padding_base@@Base+0x3ea>
  405997:	lea    rsi,[rip+0x6db4]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40599e:	mov    edx,0x30f
  4059a3:	lea    rcx,[rip+0x6f8b]        # 40c935 <flatcc_builder_padding_base@@Base+0x3f5>
  4059aa:	call   403070 <__assert_fail@plt>
  4059af:	mov    rdi,QWORD PTR [rbp-0x8]
  4059b3:	movzx  esi,WORD PTR [rbp-0x1a]
  4059b7:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  4059bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4059c0:	mov    rax,QWORD PTR [rbp-0x18]
  4059c4:	mov    esi,eax
  4059c6:	movzx  edx,WORD PTR [rbp-0x1a]
  4059ca:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4059cf:	mov    eax,eax
  4059d1:	mov    edi,eax
  4059d3:	mov    QWORD PTR [rbp-0x28],rdi
  4059d7:	mov    QWORD PTR [rbp-0xb8],0x0
  4059e2:	mov    DWORD PTR [rbp-0xb0],0x0
  4059ec:	cmp    QWORD PTR [rbp-0x18],0x0
  4059f1:	jbe    405a55 <flatcc_builder_create_struct@@Base+0xf5>
  4059f7:	mov    rax,QWORD PTR [rbp-0x18]
  4059fb:	add    rax,QWORD PTR [rbp-0xb8]
  405a02:	mov    QWORD PTR [rbp-0xb8],rax
  405a09:	mov    rax,QWORD PTR [rbp-0x10]
  405a0d:	lea    rcx,[rbp-0xb8]
  405a14:	mov    rdx,rcx
  405a17:	add    rdx,0x10
  405a1b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405a22:	shl    rsi,0x4
  405a26:	add    rdx,rsi
  405a29:	mov    QWORD PTR [rdx],rax
  405a2c:	mov    rax,QWORD PTR [rbp-0x18]
  405a30:	add    rcx,0x10
  405a34:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405a3b:	shl    rdx,0x4
  405a3f:	add    rcx,rdx
  405a42:	mov    QWORD PTR [rcx+0x8],rax
  405a46:	mov    edi,DWORD PTR [rbp-0xb0]
  405a4c:	add    edi,0x1
  405a4f:	mov    DWORD PTR [rbp-0xb0],edi
  405a55:	cmp    QWORD PTR [rbp-0x28],0x0
  405a5a:	jbe    405ac1 <flatcc_builder_create_struct@@Base+0x161>
  405a60:	lea    rax,[rip+0x6ad9]        # 40c540 <flatcc_builder_padding_base@@Base>
  405a67:	mov    rcx,QWORD PTR [rbp-0x28]
  405a6b:	add    rcx,QWORD PTR [rbp-0xb8]
  405a72:	mov    QWORD PTR [rbp-0xb8],rcx
  405a79:	lea    rcx,[rbp-0xb8]
  405a80:	mov    rdx,rcx
  405a83:	add    rdx,0x10
  405a87:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405a8e:	shl    rsi,0x4
  405a92:	add    rdx,rsi
  405a95:	mov    QWORD PTR [rdx],rax
  405a98:	mov    rax,QWORD PTR [rbp-0x28]
  405a9c:	add    rcx,0x10
  405aa0:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405aa7:	shl    rdx,0x4
  405aab:	add    rcx,rdx
  405aae:	mov    QWORD PTR [rcx+0x8],rax
  405ab2:	mov    edi,DWORD PTR [rbp-0xb0]
  405ab8:	add    edi,0x1
  405abb:	mov    DWORD PTR [rbp-0xb0],edi
  405ac1:	mov    rdi,QWORD PTR [rbp-0x8]
  405ac5:	lea    rsi,[rbp-0xb8]
  405acc:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  405ad1:	add    rsp,0xc0
  405ad8:	pop    rbp
  405ad9:	ret    
  405ada:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405ae0 <flatcc_builder_start_buffer@@Base>:
  405ae0:	push   rbp
  405ae1:	mov    rbp,rsp
  405ae4:	sub    rsp,0x30
  405ae8:	mov    ax,dx
  405aeb:	mov    QWORD PTR [rbp-0x10],rdi
  405aef:	mov    QWORD PTR [rbp-0x18],rsi
  405af3:	mov    WORD PTR [rbp-0x1a],ax
  405af7:	mov    DWORD PTR [rbp-0x20],ecx
  405afa:	mov    rdi,QWORD PTR [rbp-0x10]
  405afe:	mov    rsi,QWORD PTR [rbp-0x10]
  405b02:	movzx  esi,WORD PTR [rsi+0xe8]
  405b09:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  405b0e:	cmp    eax,0x0
  405b11:	je     405b23 <flatcc_builder_start_buffer@@Base+0x43>
  405b17:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405b1e:	jmp    405c47 <flatcc_builder_start_buffer@@Base+0x167>
  405b23:	mov    rax,QWORD PTR [rbp-0x10]
  405b27:	mov    WORD PTR [rax+0xe8],0x1
  405b30:	mov    rax,QWORD PTR [rbp-0x10]
  405b34:	mov    cx,WORD PTR [rax+0xec]
  405b3b:	mov    rax,QWORD PTR [rbp-0x10]
  405b3f:	mov    rax,QWORD PTR [rax+0x30]
  405b43:	mov    WORD PTR [rax+0x22],cx
  405b47:	mov    cx,WORD PTR [rbp-0x1a]
  405b4b:	mov    rax,QWORD PTR [rbp-0x10]
  405b4f:	mov    WORD PTR [rax+0xec],cx
  405b56:	mov    rax,QWORD PTR [rbp-0x10]
  405b5a:	mov    cx,WORD PTR [rax+0x10c]
  405b61:	mov    rax,QWORD PTR [rbp-0x10]
  405b65:	mov    rax,QWORD PTR [rax+0x30]
  405b69:	mov    WORD PTR [rax+0x20],cx
  405b6d:	mov    edx,DWORD PTR [rbp-0x20]
  405b70:	mov    cx,dx
  405b73:	mov    rax,QWORD PTR [rbp-0x10]
  405b77:	mov    WORD PTR [rax+0x10c],cx
  405b7e:	mov    rax,QWORD PTR [rbp-0x10]
  405b82:	mov    edx,DWORD PTR [rax+0xf8]
  405b88:	mov    rax,QWORD PTR [rbp-0x10]
  405b8c:	mov    rax,QWORD PTR [rax+0x30]
  405b90:	mov    DWORD PTR [rax+0x14],edx
  405b93:	mov    rax,QWORD PTR [rbp-0x10]
  405b97:	mov    edx,DWORD PTR [rax+0x100]
  405b9d:	mov    rax,QWORD PTR [rbp-0x10]
  405ba1:	mov    rax,QWORD PTR [rax+0x30]
  405ba5:	mov    DWORD PTR [rax+0x1c],edx
  405ba8:	mov    rax,QWORD PTR [rbp-0x10]
  405bac:	mov    edx,DWORD PTR [rax+0xf0]
  405bb2:	mov    rax,QWORD PTR [rbp-0x10]
  405bb6:	mov    DWORD PTR [rax+0xf8],edx
  405bbc:	mov    rax,QWORD PTR [rbp-0x10]
  405bc0:	mov    edx,DWORD PTR [rax+0xfc]
  405bc6:	mov    esi,edx
  405bc8:	add    esi,0x1
  405bcb:	mov    DWORD PTR [rax+0xfc],esi
  405bd1:	mov    rax,QWORD PTR [rbp-0x10]
  405bd5:	mov    DWORD PTR [rax+0x100],edx
  405bdb:	mov    rax,QWORD PTR [rbp-0x10]
  405bdf:	mov    edx,DWORD PTR [rax+0x110]
  405be5:	mov    rax,QWORD PTR [rbp-0x10]
  405be9:	mov    rax,QWORD PTR [rax+0x30]
  405bed:	mov    DWORD PTR [rax+0x10],edx
  405bf0:	mov    rax,QWORD PTR [rbp-0x10]
  405bf4:	add    rax,0x110
  405bfa:	cmp    QWORD PTR [rbp-0x18],0x0
  405bff:	mov    QWORD PTR [rbp-0x28],rax
  405c03:	je     405c16 <flatcc_builder_start_buffer@@Base+0x136>
  405c09:	mov    rax,QWORD PTR [rbp-0x18]
  405c0d:	mov    QWORD PTR [rbp-0x30],rax
  405c11:	jmp    405c26 <flatcc_builder_start_buffer@@Base+0x146>
  405c16:	lea    rax,[rip+0x6923]        # 40c540 <flatcc_builder_padding_base@@Base>
  405c1d:	mov    QWORD PTR [rbp-0x30],rax
  405c21:	jmp    405c26 <flatcc_builder_start_buffer@@Base+0x146>
  405c26:	mov    rax,QWORD PTR [rbp-0x30]
  405c2a:	mov    ecx,DWORD PTR [rax]
  405c2c:	mov    rax,QWORD PTR [rbp-0x28]
  405c30:	mov    DWORD PTR [rax],ecx
  405c32:	mov    rdx,QWORD PTR [rbp-0x10]
  405c36:	mov    rdx,QWORD PTR [rdx+0x30]
  405c3a:	mov    WORD PTR [rdx+0xe],0x1
  405c40:	mov    DWORD PTR [rbp-0x4],0x0
  405c47:	mov    eax,DWORD PTR [rbp-0x4]
  405c4a:	add    rsp,0x30
  405c4e:	pop    rbp
  405c4f:	ret    
  405c50:	push   rbp
  405c51:	mov    rbp,rsp
  405c54:	sub    rsp,0x20
  405c58:	mov    ax,si
  405c5b:	mov    QWORD PTR [rbp-0x10],rdi
  405c5f:	mov    WORD PTR [rbp-0x12],ax
  405c63:	mov    rdi,QWORD PTR [rbp-0x10]
  405c67:	mov    esi,DWORD PTR [rdi+0x104]
  405c6d:	add    esi,0x1
  405c70:	mov    DWORD PTR [rdi+0x104],esi
  405c76:	mov    rdi,QWORD PTR [rbp-0x10]
  405c7a:	cmp    esi,DWORD PTR [rdi+0x108]
  405c80:	jle    405d70 <flatcc_builder_start_buffer@@Base+0x290>
  405c86:	mov    rax,QWORD PTR [rbp-0x10]
  405c8a:	cmp    DWORD PTR [rax+0x120],0x0
  405c91:	jle    405cbd <flatcc_builder_start_buffer@@Base+0x1dd>
  405c97:	mov    rax,QWORD PTR [rbp-0x10]
  405c9b:	mov    ecx,DWORD PTR [rax+0x104]
  405ca1:	mov    rax,QWORD PTR [rbp-0x10]
  405ca5:	cmp    ecx,DWORD PTR [rax+0x120]
  405cab:	jle    405cbd <flatcc_builder_start_buffer@@Base+0x1dd>
  405cb1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405cb8:	jmp    405e08 <flatcc_builder_start_buffer@@Base+0x328>
  405cbd:	mov    eax,0x24
  405cc2:	mov    ecx,eax
  405cc4:	xor    r8d,r8d
  405cc7:	mov    rdi,QWORD PTR [rbp-0x10]
  405ccb:	mov    rdx,QWORD PTR [rbp-0x10]
  405ccf:	mov    eax,DWORD PTR [rdx+0x104]
  405cd5:	sub    eax,0x1
  405cd8:	movsxd rdx,eax
  405cdb:	imul   rdx,rdx,0x24
  405cdf:	mov    esi,0x4
  405ce4:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  405ce9:	mov    rcx,QWORD PTR [rbp-0x10]
  405ced:	mov    QWORD PTR [rcx+0x30],rax
  405cf1:	cmp    rax,0x0
  405cf5:	jne    405d07 <flatcc_builder_start_buffer@@Base+0x227>
  405cfb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405d02:	jmp    405e08 <flatcc_builder_start_buffer@@Base+0x328>
  405d07:	mov    eax,0x24
  405d0c:	mov    ecx,eax
  405d0e:	mov    rdx,QWORD PTR [rbp-0x10]
  405d12:	mov    rax,QWORD PTR [rdx+0xa0]
  405d19:	xor    esi,esi
  405d1b:	mov    edx,esi
  405d1d:	div    rcx
  405d20:	mov    esi,eax
  405d22:	mov    rax,QWORD PTR [rbp-0x10]
  405d26:	mov    DWORD PTR [rax+0x108],esi
  405d2c:	mov    rax,QWORD PTR [rbp-0x10]
  405d30:	cmp    DWORD PTR [rax+0x120],0x0
  405d37:	jle    405d6b <flatcc_builder_start_buffer@@Base+0x28b>
  405d3d:	mov    rax,QWORD PTR [rbp-0x10]
  405d41:	mov    ecx,DWORD PTR [rax+0x120]
  405d47:	mov    rax,QWORD PTR [rbp-0x10]
  405d4b:	cmp    ecx,DWORD PTR [rax+0x108]
  405d51:	jge    405d6b <flatcc_builder_start_buffer@@Base+0x28b>
  405d57:	mov    rax,QWORD PTR [rbp-0x10]
  405d5b:	mov    ecx,DWORD PTR [rax+0x120]
  405d61:	mov    rax,QWORD PTR [rbp-0x10]
  405d65:	mov    DWORD PTR [rax+0x108],ecx
  405d6b:	jmp    405d80 <flatcc_builder_start_buffer@@Base+0x2a0>
  405d70:	mov    rax,QWORD PTR [rbp-0x10]
  405d74:	mov    rcx,QWORD PTR [rax+0x30]
  405d78:	add    rcx,0x24
  405d7c:	mov    QWORD PTR [rax+0x30],rcx
  405d80:	mov    rax,QWORD PTR [rbp-0x10]
  405d84:	mov    ecx,DWORD PTR [rax+0x20]
  405d87:	mov    rax,QWORD PTR [rbp-0x10]
  405d8b:	mov    rax,QWORD PTR [rax+0x30]
  405d8f:	mov    DWORD PTR [rax+0x8],ecx
  405d92:	mov    rax,QWORD PTR [rbp-0x10]
  405d96:	mov    dx,WORD PTR [rax+0xea]
  405d9d:	mov    rax,QWORD PTR [rbp-0x10]
  405da1:	mov    rax,QWORD PTR [rax+0x30]
  405da5:	mov    WORD PTR [rax+0xc],dx
  405da9:	mov    dx,WORD PTR [rbp-0x12]
  405dad:	mov    rax,QWORD PTR [rbp-0x10]
  405db1:	mov    WORD PTR [rax+0xea],dx
  405db8:	mov    rax,QWORD PTR [rbp-0x10]
  405dbc:	mov    ecx,DWORD PTR [rax+0x28]
  405dbf:	mov    rax,QWORD PTR [rbp-0x10]
  405dc3:	mov    rax,QWORD PTR [rax+0x30]
  405dc7:	mov    DWORD PTR [rax],ecx
  405dc9:	mov    rax,QWORD PTR [rbp-0x10]
  405dcd:	mov    rax,QWORD PTR [rax+0x30]
  405dd1:	mov    DWORD PTR [rax+0x4],0xfffffffc
  405dd8:	mov    rax,QWORD PTR [rbp-0x10]
  405ddc:	mov    ecx,DWORD PTR [rax+0x28]
  405ddf:	mov    rax,QWORD PTR [rbp-0x10]
  405de3:	add    ecx,DWORD PTR [rax+0x20]
  405de6:	add    ecx,0x8
  405de9:	sub    ecx,0x1
  405dec:	and    ecx,0xfffffff8
  405def:	mov    rax,QWORD PTR [rbp-0x10]
  405df3:	mov    DWORD PTR [rax+0x28],ecx
  405df6:	mov    rax,QWORD PTR [rbp-0x10]
  405dfa:	mov    DWORD PTR [rax+0x20],0x0
  405e01:	mov    DWORD PTR [rbp-0x4],0x0
  405e08:	mov    eax,DWORD PTR [rbp-0x4]
  405e0b:	add    rsp,0x20
  405e0f:	pop    rbp
  405e10:	ret    
  405e11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e20 <flatcc_builder_end_buffer@@Base>:
  405e20:	push   rbp
  405e21:	mov    rbp,rsp
  405e24:	sub    rsp,0x20
  405e28:	xor    eax,eax
  405e2a:	mov    QWORD PTR [rbp-0x10],rdi
  405e2e:	mov    DWORD PTR [rbp-0x14],esi
  405e31:	mov    rdi,QWORD PTR [rbp-0x10]
  405e35:	movzx  esi,WORD PTR [rdi+0x10c]
  405e3c:	and    esi,0x2
  405e3f:	mov    DWORD PTR [rbp-0x1c],esi
  405e42:	mov    rdi,QWORD PTR [rbp-0x10]
  405e46:	mov    esi,DWORD PTR [rdi+0x100]
  405e4c:	cmp    esi,0x0
  405e4f:	mov    esi,0x1
  405e54:	cmove  esi,eax
  405e57:	or     esi,DWORD PTR [rbp-0x1c]
  405e5a:	mov    DWORD PTR [rbp-0x1c],esi
  405e5d:	mov    rdi,QWORD PTR [rbp-0x10]
  405e61:	mov    rdi,QWORD PTR [rdi+0x30]
  405e65:	movzx  eax,WORD PTR [rdi+0xe]
  405e69:	cmp    eax,0x1
  405e6c:	jne    405e77 <flatcc_builder_end_buffer@@Base+0x57>
  405e72:	jmp    405e96 <flatcc_builder_end_buffer@@Base+0x76>
  405e77:	lea    rdi,[rip+0x6b1d]        # 40c99b <flatcc_builder_padding_base@@Base+0x45b>
  405e7e:	lea    rsi,[rip+0x68cd]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  405e85:	mov    edx,0x346
  405e8a:	lea    rcx,[rip+0x6b36]        # 40c9c7 <flatcc_builder_padding_base@@Base+0x487>
  405e91:	call   403070 <__assert_fail@plt>
  405e96:	mov    rdi,QWORD PTR [rbp-0x10]
  405e9a:	mov    rax,QWORD PTR [rbp-0x10]
  405e9e:	movzx  esi,WORD PTR [rax+0xec]
  405ea5:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  405eaa:	mov    rdi,QWORD PTR [rbp-0x10]
  405eae:	mov    rax,QWORD PTR [rbp-0x10]
  405eb2:	add    rax,0x110
  405eb8:	mov    rcx,QWORD PTR [rbp-0x10]
  405ebc:	mov    dx,WORD PTR [rcx+0xec]
  405ec3:	mov    ecx,DWORD PTR [rbp-0x14]
  405ec6:	mov    r8,QWORD PTR [rbp-0x10]
  405eca:	mov    r9w,WORD PTR [r8+0xe8]
  405ed2:	mov    esi,DWORD PTR [rbp-0x1c]
  405ed5:	mov    DWORD PTR [rbp-0x20],esi
  405ed8:	mov    rsi,rax
  405edb:	movzx  edx,dx
  405ede:	movzx  r8d,r9w
  405ee2:	mov    r9d,DWORD PTR [rbp-0x20]
  405ee6:	call   405500 <flatcc_builder_create_buffer@@Base>
  405eeb:	xor    ecx,ecx
  405eed:	mov    DWORD PTR [rbp-0x18],eax
  405ef0:	cmp    ecx,eax
  405ef2:	jne    405f04 <flatcc_builder_end_buffer@@Base+0xe4>
  405ef8:	mov    DWORD PTR [rbp-0x4],0x0
  405eff:	jmp    405f69 <flatcc_builder_end_buffer@@Base+0x149>
  405f04:	mov    rax,QWORD PTR [rbp-0x10]
  405f08:	mov    rax,QWORD PTR [rax+0x30]
  405f0c:	mov    ecx,DWORD PTR [rax+0x14]
  405f0f:	mov    rax,QWORD PTR [rbp-0x10]
  405f13:	mov    DWORD PTR [rax+0xf8],ecx
  405f19:	mov    rax,QWORD PTR [rbp-0x10]
  405f1d:	mov    rax,QWORD PTR [rax+0x30]
  405f21:	mov    ecx,DWORD PTR [rax+0x1c]
  405f24:	mov    rax,QWORD PTR [rbp-0x10]
  405f28:	mov    DWORD PTR [rax+0x100],ecx
  405f2e:	mov    rax,QWORD PTR [rbp-0x10]
  405f32:	mov    rax,QWORD PTR [rax+0x30]
  405f36:	mov    ecx,DWORD PTR [rax+0x10]
  405f39:	mov    rax,QWORD PTR [rbp-0x10]
  405f3d:	mov    DWORD PTR [rax+0x110],ecx
  405f43:	mov    rax,QWORD PTR [rbp-0x10]
  405f47:	mov    rax,QWORD PTR [rax+0x30]
  405f4b:	mov    dx,WORD PTR [rax+0x20]
  405f4f:	mov    rax,QWORD PTR [rbp-0x10]
  405f53:	mov    WORD PTR [rax+0x10c],dx
  405f5a:	mov    rdi,QWORD PTR [rbp-0x10]
  405f5e:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  405f63:	mov    ecx,DWORD PTR [rbp-0x18]
  405f66:	mov    DWORD PTR [rbp-0x4],ecx
  405f69:	mov    eax,DWORD PTR [rbp-0x4]
  405f6c:	add    rsp,0x20
  405f70:	pop    rbp
  405f71:	ret    
  405f72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f7c:	nop    DWORD PTR [rax+0x0]
  405f80:	push   rbp
  405f81:	mov    rbp,rsp
  405f84:	sub    rsp,0x10
  405f88:	xor    esi,esi
  405f8a:	mov    QWORD PTR [rbp-0x8],rdi
  405f8e:	mov    rdi,QWORD PTR [rbp-0x8]
  405f92:	mov    rdi,QWORD PTR [rdi+0x18]
  405f96:	mov    rax,QWORD PTR [rbp-0x8]
  405f9a:	mov    ecx,DWORD PTR [rax+0x20]
  405f9d:	mov    edx,ecx
  405f9f:	call   403080 <memset@plt>
  405fa4:	mov    rax,QWORD PTR [rbp-0x8]
  405fa8:	mov    rax,QWORD PTR [rax+0x30]
  405fac:	mov    ecx,DWORD PTR [rax+0x8]
  405faf:	mov    rax,QWORD PTR [rbp-0x8]
  405fb3:	mov    DWORD PTR [rax+0x20],ecx
  405fb6:	mov    rax,QWORD PTR [rbp-0x8]
  405fba:	mov    rax,QWORD PTR [rax+0x30]
  405fbe:	mov    ecx,DWORD PTR [rax]
  405fc0:	mov    rax,QWORD PTR [rbp-0x8]
  405fc4:	mov    DWORD PTR [rax+0x28],ecx
  405fc7:	mov    rdi,QWORD PTR [rbp-0x8]
  405fcb:	mov    rax,QWORD PTR [rbp-0x8]
  405fcf:	mov    rax,QWORD PTR [rax+0x30]
  405fd3:	mov    esi,DWORD PTR [rax+0x4]
  405fd6:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  405fdb:	mov    rdi,QWORD PTR [rbp-0x8]
  405fdf:	mov    rax,QWORD PTR [rbp-0x8]
  405fe3:	movzx  esi,WORD PTR [rax+0xea]
  405fea:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  405fef:	mov    rax,QWORD PTR [rbp-0x8]
  405ff3:	mov    rax,QWORD PTR [rax+0x30]
  405ff7:	mov    r8w,WORD PTR [rax+0xc]
  405ffc:	mov    rax,QWORD PTR [rbp-0x8]
  406000:	mov    WORD PTR [rax+0xea],r8w
  406008:	mov    rax,QWORD PTR [rbp-0x8]
  40600c:	mov    rdx,QWORD PTR [rax+0x30]
  406010:	add    rdx,0xffffffffffffffdc
  406014:	mov    QWORD PTR [rax+0x30],rdx
  406018:	mov    rax,QWORD PTR [rbp-0x8]
  40601c:	mov    ecx,DWORD PTR [rax+0x104]
  406022:	add    ecx,0xffffffff
  406025:	mov    DWORD PTR [rax+0x104],ecx
  40602b:	add    rsp,0x10
  40602f:	pop    rbp
  406030:	ret    
  406031:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40603b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406040 <flatcc_builder_start_struct@@Base>:
  406040:	push   rbp
  406041:	mov    rbp,rsp
  406044:	sub    rsp,0x20
  406048:	mov    ax,dx
  40604b:	mov    QWORD PTR [rbp-0x10],rdi
  40604f:	mov    QWORD PTR [rbp-0x18],rsi
  406053:	mov    WORD PTR [rbp-0x1a],ax
  406057:	mov    rdi,QWORD PTR [rbp-0x10]
  40605b:	movzx  esi,WORD PTR [rbp-0x1a]
  40605f:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  406064:	cmp    eax,0x0
  406067:	je     40607a <flatcc_builder_start_struct@@Base+0x3a>
  40606d:	mov    QWORD PTR [rbp-0x8],0x0
  406075:	jmp    4060a9 <flatcc_builder_start_struct@@Base+0x69>
  40607a:	mov    rax,QWORD PTR [rbp-0x10]
  40607e:	mov    rax,QWORD PTR [rax+0x30]
  406082:	mov    WORD PTR [rax+0xe],0x2
  406088:	mov    rdi,QWORD PTR [rbp-0x10]
  40608c:	mov    esi,0xfffffffc
  406091:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  406096:	mov    rdi,QWORD PTR [rbp-0x10]
  40609a:	mov    rax,QWORD PTR [rbp-0x18]
  40609e:	mov    esi,eax
  4060a0:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  4060a5:	mov    QWORD PTR [rbp-0x8],rax
  4060a9:	mov    rax,QWORD PTR [rbp-0x8]
  4060ad:	add    rsp,0x20
  4060b1:	pop    rbp
  4060b2:	ret    
  4060b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060bd:	nop    DWORD PTR [rax]
  4060c0:	push   rbp
  4060c1:	mov    rbp,rsp
  4060c4:	mov    QWORD PTR [rbp-0x8],rdi
  4060c8:	mov    DWORD PTR [rbp-0xc],esi
  4060cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4060cf:	add    rdi,0x58
  4060d3:	add    rdi,0x10
  4060d7:	mov    QWORD PTR [rbp-0x18],rdi
  4060db:	mov    rdi,QWORD PTR [rbp-0x8]
  4060df:	mov    rdi,QWORD PTR [rdi+0x68]
  4060e3:	mov    rax,QWORD PTR [rbp-0x8]
  4060e7:	mov    esi,DWORD PTR [rax+0x28]
  4060ea:	mov    eax,esi
  4060ec:	add    rdi,rax
  4060ef:	mov    rax,QWORD PTR [rbp-0x8]
  4060f3:	mov    QWORD PTR [rax+0x18],rdi
  4060f7:	mov    rax,QWORD PTR [rbp-0x18]
  4060fb:	mov    rax,QWORD PTR [rax+0x8]
  4060ff:	mov    esi,eax
  406101:	mov    rax,QWORD PTR [rbp-0x8]
  406105:	sub    esi,DWORD PTR [rax+0x28]
  406108:	mov    rax,QWORD PTR [rbp-0x8]
  40610c:	mov    DWORD PTR [rax+0x24],esi
  40610f:	mov    rax,QWORD PTR [rbp-0x8]
  406113:	mov    esi,DWORD PTR [rax+0x24]
  406116:	cmp    esi,DWORD PTR [rbp-0xc]
  406119:	jbe    406129 <flatcc_builder_start_struct@@Base+0xe9>
  40611f:	mov    eax,DWORD PTR [rbp-0xc]
  406122:	mov    rcx,QWORD PTR [rbp-0x8]
  406126:	mov    DWORD PTR [rcx+0x24],eax
  406129:	mov    eax,DWORD PTR [rbp-0xc]
  40612c:	mov    rcx,QWORD PTR [rbp-0x8]
  406130:	mov    rcx,QWORD PTR [rcx+0x30]
  406134:	mov    DWORD PTR [rcx+0x4],eax
  406137:	pop    rbp
  406138:	ret    
  406139:	nop    DWORD PTR [rax+0x0]
  406140:	push   rbp
  406141:	mov    rbp,rsp
  406144:	sub    rsp,0x20
  406148:	mov    QWORD PTR [rbp-0x10],rdi
  40614c:	mov    DWORD PTR [rbp-0x14],esi
  40614f:	mov    rdi,QWORD PTR [rbp-0x10]
  406153:	mov    esi,DWORD PTR [rdi+0x20]
  406156:	mov    edi,esi
  406158:	mov    QWORD PTR [rbp-0x20],rdi
  40615c:	mov    esi,DWORD PTR [rbp-0x14]
  40615f:	mov    rdi,QWORD PTR [rbp-0x10]
  406163:	add    esi,DWORD PTR [rdi+0x20]
  406166:	mov    DWORD PTR [rdi+0x20],esi
  406169:	mov    rdi,QWORD PTR [rbp-0x10]
  40616d:	cmp    esi,DWORD PTR [rdi+0x24]
  406170:	jb     4061ad <flatcc_builder_start_struct@@Base+0x16d>
  406176:	mov    rdi,QWORD PTR [rbp-0x10]
  40617a:	mov    rax,QWORD PTR [rbp-0x10]
  40617e:	mov    ecx,DWORD PTR [rax+0x20]
  406181:	add    ecx,0x1
  406184:	mov    ecx,ecx
  406186:	mov    esi,ecx
  406188:	mov    edx,0xfffffffc
  40618d:	call   40a160 <flatcc_builder_get_emit_context@@Base+0x50>
  406192:	cmp    eax,0x0
  406195:	je     4061a8 <flatcc_builder_start_struct@@Base+0x168>
  40619b:	mov    QWORD PTR [rbp-0x8],0x0
  4061a3:	jmp    4061bd <flatcc_builder_start_struct@@Base+0x17d>
  4061a8:	jmp    4061ad <flatcc_builder_start_struct@@Base+0x16d>
  4061ad:	mov    rax,QWORD PTR [rbp-0x10]
  4061b1:	mov    rax,QWORD PTR [rax+0x18]
  4061b5:	add    rax,QWORD PTR [rbp-0x20]
  4061b9:	mov    QWORD PTR [rbp-0x8],rax
  4061bd:	mov    rax,QWORD PTR [rbp-0x8]
  4061c1:	add    rsp,0x20
  4061c5:	pop    rbp
  4061c6:	ret    
  4061c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004061d0 <flatcc_builder_struct_edit@@Base>:
  4061d0:	push   rbp
  4061d1:	mov    rbp,rsp
  4061d4:	mov    QWORD PTR [rbp-0x8],rdi
  4061d8:	mov    rdi,QWORD PTR [rbp-0x8]
  4061dc:	mov    rax,QWORD PTR [rdi+0x18]
  4061e0:	pop    rbp
  4061e1:	ret    
  4061e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061ec:	nop    DWORD PTR [rax+0x0]

00000000004061f0 <flatcc_builder_end_struct@@Base>:
  4061f0:	push   rbp
  4061f1:	mov    rbp,rsp
  4061f4:	sub    rsp,0x20
  4061f8:	mov    QWORD PTR [rbp-0x10],rdi
  4061fc:	mov    rdi,QWORD PTR [rbp-0x10]
  406200:	mov    rdi,QWORD PTR [rdi+0x30]
  406204:	movzx  eax,WORD PTR [rdi+0xe]
  406208:	cmp    eax,0x2
  40620b:	jne    406216 <flatcc_builder_end_struct@@Base+0x26>
  406211:	jmp    406235 <flatcc_builder_end_struct@@Base+0x45>
  406216:	lea    rdi,[rip+0x6803]        # 40ca20 <flatcc_builder_padding_base@@Base+0x4e0>
  40621d:	lea    rsi,[rip+0x652e]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406224:	mov    edx,0x368
  406229:	lea    rcx,[rip+0x681c]        # 40ca4c <flatcc_builder_padding_base@@Base+0x50c>
  406230:	call   403070 <__assert_fail@plt>
  406235:	mov    rdi,QWORD PTR [rbp-0x10]
  406239:	mov    rax,QWORD PTR [rbp-0x10]
  40623d:	mov    rsi,QWORD PTR [rax+0x18]
  406241:	mov    rax,QWORD PTR [rbp-0x10]
  406245:	mov    ecx,DWORD PTR [rax+0x20]
  406248:	mov    edx,ecx
  40624a:	mov    rax,QWORD PTR [rbp-0x10]
  40624e:	movzx  ecx,WORD PTR [rax+0xea]
  406255:	call   405960 <flatcc_builder_create_struct@@Base>
  40625a:	xor    ecx,ecx
  40625c:	mov    DWORD PTR [rbp-0x14],eax
  40625f:	cmp    ecx,eax
  406261:	jne    406273 <flatcc_builder_end_struct@@Base+0x83>
  406267:	mov    DWORD PTR [rbp-0x4],0x0
  40626e:	jmp    406282 <flatcc_builder_end_struct@@Base+0x92>
  406273:	mov    rdi,QWORD PTR [rbp-0x10]
  406277:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  40627c:	mov    eax,DWORD PTR [rbp-0x14]
  40627f:	mov    DWORD PTR [rbp-0x4],eax
  406282:	mov    eax,DWORD PTR [rbp-0x4]
  406285:	add    rsp,0x20
  406289:	pop    rbp
  40628a:	ret    
  40628b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406290 <flatcc_builder_extend_vector@@Base>:
  406290:	push   rbp
  406291:	mov    rbp,rsp
  406294:	sub    rsp,0x20
  406298:	mov    QWORD PTR [rbp-0x10],rdi
  40629c:	mov    QWORD PTR [rbp-0x18],rsi
  4062a0:	mov    rdi,QWORD PTR [rbp-0x10]
  4062a4:	mov    rsi,QWORD PTR [rbp-0x18]
  4062a8:	mov    eax,esi
  4062aa:	mov    rsi,QWORD PTR [rbp-0x10]
  4062ae:	mov    rsi,QWORD PTR [rsi+0x30]
  4062b2:	mov    edx,DWORD PTR [rsi+0x18]
  4062b5:	mov    esi,eax
  4062b7:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  4062bc:	cmp    eax,0x0
  4062bf:	je     4062d2 <flatcc_builder_extend_vector@@Base+0x42>
  4062c5:	mov    QWORD PTR [rbp-0x8],0x0
  4062cd:	jmp    4062f5 <flatcc_builder_extend_vector@@Base+0x65>
  4062d2:	mov    rdi,QWORD PTR [rbp-0x10]
  4062d6:	mov    rax,QWORD PTR [rbp-0x10]
  4062da:	mov    rax,QWORD PTR [rax+0x30]
  4062de:	mov    ecx,DWORD PTR [rax+0x10]
  4062e1:	mov    rax,QWORD PTR [rbp-0x18]
  4062e5:	mov    edx,eax
  4062e7:	imul   ecx,edx
  4062ea:	mov    esi,ecx
  4062ec:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  4062f1:	mov    QWORD PTR [rbp-0x8],rax
  4062f5:	mov    rax,QWORD PTR [rbp-0x8]
  4062f9:	add    rsp,0x20
  4062fd:	pop    rbp
  4062fe:	ret    
  4062ff:	nop
  406300:	push   rbp
  406301:	mov    rbp,rsp
  406304:	sub    rsp,0x20
  406308:	mov    QWORD PTR [rbp-0x10],rdi
  40630c:	mov    DWORD PTR [rbp-0x14],esi
  40630f:	mov    DWORD PTR [rbp-0x18],edx
  406312:	mov    rdi,QWORD PTR [rbp-0x10]
  406316:	mov    rdi,QWORD PTR [rdi+0x30]
  40631a:	mov    edx,DWORD PTR [rdi+0x14]
  40631d:	mov    DWORD PTR [rbp-0x1c],edx
  406320:	mov    edx,DWORD PTR [rbp-0x1c]
  406323:	add    edx,DWORD PTR [rbp-0x14]
  406326:	mov    DWORD PTR [rbp-0x20],edx
  406329:	mov    edx,DWORD PTR [rbp-0x1c]
  40632c:	cmp    edx,DWORD PTR [rbp-0x20]
  40632f:	ja     406341 <flatcc_builder_extend_vector@@Base+0xb1>
  406335:	mov    eax,DWORD PTR [rbp-0x20]
  406338:	cmp    eax,DWORD PTR [rbp-0x18]
  40633b:	jbe    406389 <flatcc_builder_extend_vector@@Base+0xf9>
  406341:	mov    eax,DWORD PTR [rbp-0x1c]
  406344:	cmp    eax,DWORD PTR [rbp-0x20]
  406347:	ja     40635e <flatcc_builder_extend_vector@@Base+0xce>
  40634d:	mov    eax,DWORD PTR [rbp-0x20]
  406350:	cmp    eax,DWORD PTR [rbp-0x18]
  406353:	ja     40635e <flatcc_builder_extend_vector@@Base+0xce>
  406359:	jmp    40637d <flatcc_builder_extend_vector@@Base+0xed>
  40635e:	lea    rdi,[rip+0x74b6]        # 40d81b <flatcc_builder_padding_base@@Base+0x12db>
  406365:	lea    rsi,[rip+0x63e6]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40636c:	mov    edx,0x37c
  406371:	lea    rcx,[rip+0x74be]        # 40d836 <flatcc_builder_padding_base@@Base+0x12f6>
  406378:	call   403070 <__assert_fail@plt>
  40637d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406384:	jmp    40639e <flatcc_builder_extend_vector@@Base+0x10e>
  406389:	mov    eax,DWORD PTR [rbp-0x20]
  40638c:	mov    rcx,QWORD PTR [rbp-0x10]
  406390:	mov    rcx,QWORD PTR [rcx+0x30]
  406394:	mov    DWORD PTR [rcx+0x14],eax
  406397:	mov    DWORD PTR [rbp-0x4],0x0
  40639e:	mov    eax,DWORD PTR [rbp-0x4]
  4063a1:	add    rsp,0x20
  4063a5:	pop    rbp
  4063a6:	ret    
  4063a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004063b0 <flatcc_builder_vector_push@@Base>:
  4063b0:	push   rbp
  4063b1:	mov    rbp,rsp
  4063b4:	sub    rsp,0x20
  4063b8:	mov    QWORD PTR [rbp-0x10],rdi
  4063bc:	mov    QWORD PTR [rbp-0x18],rsi
  4063c0:	mov    rsi,QWORD PTR [rbp-0x10]
  4063c4:	mov    rsi,QWORD PTR [rsi+0x30]
  4063c8:	movzx  eax,WORD PTR [rsi+0xe]
  4063cc:	cmp    eax,0x4
  4063cf:	jne    4063da <flatcc_builder_vector_push@@Base+0x2a>
  4063d5:	jmp    4063f9 <flatcc_builder_vector_push@@Base+0x49>
  4063da:	lea    rdi,[rip+0x66ae]        # 40ca8f <flatcc_builder_padding_base@@Base+0x54f>
  4063e1:	lea    rsi,[rip+0x636a]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4063e8:	mov    edx,0x38b
  4063ed:	lea    rcx,[rip+0x66c7]        # 40cabb <flatcc_builder_padding_base@@Base+0x57b>
  4063f4:	call   403070 <__assert_fail@plt>
  4063f9:	mov    rax,QWORD PTR [rbp-0x10]
  4063fd:	mov    rax,QWORD PTR [rax+0x30]
  406401:	mov    ecx,DWORD PTR [rax+0x14]
  406404:	mov    rax,QWORD PTR [rbp-0x10]
  406408:	mov    rax,QWORD PTR [rax+0x30]
  40640c:	cmp    ecx,DWORD PTR [rax+0x18]
  40640f:	jbe    406462 <flatcc_builder_vector_push@@Base+0xb2>
  406415:	mov    rax,QWORD PTR [rbp-0x10]
  406419:	mov    rax,QWORD PTR [rax+0x30]
  40641d:	mov    ecx,DWORD PTR [rax+0x14]
  406420:	mov    rax,QWORD PTR [rbp-0x10]
  406424:	mov    rax,QWORD PTR [rax+0x30]
  406428:	cmp    ecx,DWORD PTR [rax+0x18]
  40642b:	ja     406436 <flatcc_builder_vector_push@@Base+0x86>
  406431:	jmp    406455 <flatcc_builder_vector_push@@Base+0xa5>
  406436:	lea    rdi,[rip+0x66c1]        # 40cafe <flatcc_builder_padding_base@@Base+0x5be>
  40643d:	lea    rsi,[rip+0x630e]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406444:	mov    edx,0x38c
  406449:	lea    rcx,[rip+0x666b]        # 40cabb <flatcc_builder_padding_base@@Base+0x57b>
  406450:	call   403070 <__assert_fail@plt>
  406455:	mov    QWORD PTR [rbp-0x8],0x0
  40645d:	jmp    40648f <flatcc_builder_vector_push@@Base+0xdf>
  406462:	mov    rax,QWORD PTR [rbp-0x10]
  406466:	mov    rax,QWORD PTR [rax+0x30]
  40646a:	mov    ecx,DWORD PTR [rax+0x14]
  40646d:	add    ecx,0x1
  406470:	mov    DWORD PTR [rax+0x14],ecx
  406473:	mov    rdi,QWORD PTR [rbp-0x10]
  406477:	mov    rsi,QWORD PTR [rbp-0x18]
  40647b:	mov    rax,QWORD PTR [rbp-0x10]
  40647f:	mov    rax,QWORD PTR [rax+0x30]
  406483:	mov    edx,DWORD PTR [rax+0x10]
  406486:	call   4064a0 <flatcc_builder_vector_push@@Base+0xf0>
  40648b:	mov    QWORD PTR [rbp-0x8],rax
  40648f:	mov    rax,QWORD PTR [rbp-0x8]
  406493:	add    rsp,0x20
  406497:	pop    rbp
  406498:	ret    
  406499:	nop    DWORD PTR [rax+0x0]
  4064a0:	push   rbp
  4064a1:	mov    rbp,rsp
  4064a4:	sub    rsp,0x30
  4064a8:	mov    QWORD PTR [rbp-0x10],rdi
  4064ac:	mov    QWORD PTR [rbp-0x18],rsi
  4064b0:	mov    DWORD PTR [rbp-0x1c],edx
  4064b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4064b7:	mov    esi,DWORD PTR [rbp-0x1c]
  4064ba:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  4064bf:	mov    QWORD PTR [rbp-0x28],rax
  4064c3:	cmp    rax,0x0
  4064c7:	jne    4064da <flatcc_builder_vector_push@@Base+0x12a>
  4064cd:	mov    QWORD PTR [rbp-0x8],0x0
  4064d5:	jmp    4064f4 <flatcc_builder_vector_push@@Base+0x144>
  4064da:	mov    rdi,QWORD PTR [rbp-0x28]
  4064de:	mov    rsi,QWORD PTR [rbp-0x18]
  4064e2:	mov    eax,DWORD PTR [rbp-0x1c]
  4064e5:	mov    edx,eax
  4064e7:	call   4030c0 <memcpy@plt>
  4064ec:	mov    rdx,QWORD PTR [rbp-0x28]
  4064f0:	mov    QWORD PTR [rbp-0x8],rdx
  4064f4:	mov    rax,QWORD PTR [rbp-0x8]
  4064f8:	add    rsp,0x30
  4064fc:	pop    rbp
  4064fd:	ret    
  4064fe:	xchg   ax,ax

0000000000406500 <flatcc_builder_append_vector@@Base>:
  406500:	push   rbp
  406501:	mov    rbp,rsp
  406504:	sub    rsp,0x20
  406508:	mov    QWORD PTR [rbp-0x10],rdi
  40650c:	mov    QWORD PTR [rbp-0x18],rsi
  406510:	mov    QWORD PTR [rbp-0x20],rdx
  406514:	mov    rdx,QWORD PTR [rbp-0x10]
  406518:	mov    rdx,QWORD PTR [rdx+0x30]
  40651c:	movzx  eax,WORD PTR [rdx+0xe]
  406520:	cmp    eax,0x4
  406523:	jne    40652e <flatcc_builder_append_vector@@Base+0x2e>
  406529:	jmp    40654d <flatcc_builder_append_vector@@Base+0x4d>
  40652e:	lea    rdi,[rip+0x655a]        # 40ca8f <flatcc_builder_padding_base@@Base+0x54f>
  406535:	lea    rsi,[rip+0x6216]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40653c:	mov    edx,0x393
  406541:	lea    rcx,[rip+0x65f3]        # 40cb3b <flatcc_builder_padding_base@@Base+0x5fb>
  406548:	call   403070 <__assert_fail@plt>
  40654d:	mov    rdi,QWORD PTR [rbp-0x10]
  406551:	mov    rax,QWORD PTR [rbp-0x20]
  406555:	mov    ecx,eax
  406557:	mov    rax,QWORD PTR [rbp-0x10]
  40655b:	mov    rax,QWORD PTR [rax+0x30]
  40655f:	mov    edx,DWORD PTR [rax+0x18]
  406562:	mov    esi,ecx
  406564:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  406569:	cmp    eax,0x0
  40656c:	je     40657f <flatcc_builder_append_vector@@Base+0x7f>
  406572:	mov    QWORD PTR [rbp-0x8],0x0
  40657a:	jmp    4065a6 <flatcc_builder_append_vector@@Base+0xa6>
  40657f:	mov    rdi,QWORD PTR [rbp-0x10]
  406583:	mov    rsi,QWORD PTR [rbp-0x18]
  406587:	mov    rax,QWORD PTR [rbp-0x10]
  40658b:	mov    rax,QWORD PTR [rax+0x30]
  40658f:	mov    ecx,DWORD PTR [rax+0x10]
  406592:	mov    rax,QWORD PTR [rbp-0x20]
  406596:	mov    edx,eax
  406598:	imul   ecx,edx
  40659b:	mov    edx,ecx
  40659d:	call   4064a0 <flatcc_builder_vector_push@@Base+0xf0>
  4065a2:	mov    QWORD PTR [rbp-0x8],rax
  4065a6:	mov    rax,QWORD PTR [rbp-0x8]
  4065aa:	add    rsp,0x20
  4065ae:	pop    rbp
  4065af:	ret    

00000000004065b0 <flatcc_builder_extend_offset_vector@@Base>:
  4065b0:	push   rbp
  4065b1:	mov    rbp,rsp
  4065b4:	sub    rsp,0x20
  4065b8:	mov    QWORD PTR [rbp-0x10],rdi
  4065bc:	mov    QWORD PTR [rbp-0x18],rsi
  4065c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4065c4:	mov    rsi,QWORD PTR [rbp-0x18]
  4065c8:	mov    eax,esi
  4065ca:	mov    esi,eax
  4065cc:	mov    edx,0x3fffffff
  4065d1:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  4065d6:	cmp    eax,0x0
  4065d9:	je     4065ec <flatcc_builder_extend_offset_vector@@Base+0x3c>
  4065df:	mov    QWORD PTR [rbp-0x8],0x0
  4065e7:	jmp    40660b <flatcc_builder_extend_offset_vector@@Base+0x5b>
  4065ec:	mov    rdi,QWORD PTR [rbp-0x10]
  4065f0:	mov    rax,QWORD PTR [rbp-0x18]
  4065f4:	mov    ecx,eax
  4065f6:	mov    ecx,ecx
  4065f8:	mov    eax,ecx
  4065fa:	shl    rax,0x2
  4065fe:	mov    ecx,eax
  406600:	mov    esi,ecx
  406602:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  406607:	mov    QWORD PTR [rbp-0x8],rax
  40660b:	mov    rax,QWORD PTR [rbp-0x8]
  40660f:	add    rsp,0x20
  406613:	pop    rbp
  406614:	ret    
  406615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40661f:	nop

0000000000406620 <flatcc_builder_offset_vector_push@@Base>:
  406620:	push   rbp
  406621:	mov    rbp,rsp
  406624:	sub    rsp,0x20
  406628:	mov    QWORD PTR [rbp-0x10],rdi
  40662c:	mov    DWORD PTR [rbp-0x14],esi
  40662f:	mov    rdi,QWORD PTR [rbp-0x10]
  406633:	mov    rdi,QWORD PTR [rdi+0x30]
  406637:	movzx  esi,WORD PTR [rdi+0xe]
  40663b:	cmp    esi,0x5
  40663e:	jne    406649 <flatcc_builder_offset_vector_push@@Base+0x29>
  406644:	jmp    406668 <flatcc_builder_offset_vector_push@@Base+0x48>
  406649:	lea    rdi,[rip+0x6538]        # 40cb88 <flatcc_builder_padding_base@@Base+0x648>
  406650:	lea    rsi,[rip+0x60fb]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406657:	mov    edx,0x3a6
  40665c:	lea    rcx,[rip+0x6558]        # 40cbbb <flatcc_builder_padding_base@@Base+0x67b>
  406663:	call   403070 <__assert_fail@plt>
  406668:	mov    rax,QWORD PTR [rbp-0x10]
  40666c:	mov    rax,QWORD PTR [rax+0x30]
  406670:	mov    ecx,DWORD PTR [rax+0x14]
  406673:	mov    eax,ecx
  406675:	cmp    rax,0x3fffffff
  40667b:	jne    40668e <flatcc_builder_offset_vector_push@@Base+0x6e>
  406681:	mov    QWORD PTR [rbp-0x8],0x0
  406689:	jmp    4066dc <flatcc_builder_offset_vector_push@@Base+0xbc>
  40668e:	mov    rax,QWORD PTR [rbp-0x10]
  406692:	mov    rax,QWORD PTR [rax+0x30]
  406696:	mov    ecx,DWORD PTR [rax+0x14]
  406699:	add    ecx,0x1
  40669c:	mov    DWORD PTR [rax+0x14],ecx
  40669f:	mov    rdi,QWORD PTR [rbp-0x10]
  4066a3:	mov    esi,0x4
  4066a8:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  4066ad:	xor    ecx,ecx
  4066af:	mov    edi,ecx
  4066b1:	mov    QWORD PTR [rbp-0x20],rax
  4066b5:	cmp    rdi,rax
  4066b8:	jne    4066cb <flatcc_builder_offset_vector_push@@Base+0xab>
  4066be:	mov    QWORD PTR [rbp-0x8],0x0
  4066c6:	jmp    4066dc <flatcc_builder_offset_vector_push@@Base+0xbc>
  4066cb:	mov    eax,DWORD PTR [rbp-0x14]
  4066ce:	mov    rcx,QWORD PTR [rbp-0x20]
  4066d2:	mov    DWORD PTR [rcx],eax
  4066d4:	mov    rcx,QWORD PTR [rbp-0x20]
  4066d8:	mov    QWORD PTR [rbp-0x8],rcx
  4066dc:	mov    rax,QWORD PTR [rbp-0x8]
  4066e0:	add    rsp,0x20
  4066e4:	pop    rbp
  4066e5:	ret    
  4066e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004066f0 <flatcc_builder_append_offset_vector@@Base>:
  4066f0:	push   rbp
  4066f1:	mov    rbp,rsp
  4066f4:	sub    rsp,0x20
  4066f8:	mov    QWORD PTR [rbp-0x10],rdi
  4066fc:	mov    QWORD PTR [rbp-0x18],rsi
  406700:	mov    QWORD PTR [rbp-0x20],rdx
  406704:	mov    rdx,QWORD PTR [rbp-0x10]
  406708:	mov    rdx,QWORD PTR [rdx+0x30]
  40670c:	movzx  eax,WORD PTR [rdx+0xe]
  406710:	cmp    eax,0x5
  406713:	jne    40671e <flatcc_builder_append_offset_vector@@Base+0x2e>
  406719:	jmp    40673d <flatcc_builder_append_offset_vector@@Base+0x4d>
  40671e:	lea    rdi,[rip+0x6463]        # 40cb88 <flatcc_builder_padding_base@@Base+0x648>
  406725:	lea    rsi,[rip+0x6026]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40672c:	mov    edx,0x3b4
  406731:	lea    rcx,[rip+0x64e5]        # 40cc1d <flatcc_builder_padding_base@@Base+0x6dd>
  406738:	call   403070 <__assert_fail@plt>
  40673d:	mov    rdi,QWORD PTR [rbp-0x10]
  406741:	mov    rax,QWORD PTR [rbp-0x20]
  406745:	mov    ecx,eax
  406747:	mov    esi,ecx
  406749:	mov    edx,0x3fffffff
  40674e:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  406753:	cmp    eax,0x0
  406756:	je     406769 <flatcc_builder_append_offset_vector@@Base+0x79>
  40675c:	mov    QWORD PTR [rbp-0x8],0x0
  406764:	jmp    40678d <flatcc_builder_append_offset_vector@@Base+0x9d>
  406769:	mov    rdi,QWORD PTR [rbp-0x10]
  40676d:	mov    rax,QWORD PTR [rbp-0x18]
  406771:	mov    rcx,QWORD PTR [rbp-0x20]
  406775:	mov    edx,ecx
  406777:	mov    edx,edx
  406779:	mov    ecx,edx
  40677b:	shl    rcx,0x2
  40677f:	mov    edx,ecx
  406781:	mov    rsi,rax
  406784:	call   4064a0 <flatcc_builder_vector_push@@Base+0xf0>
  406789:	mov    QWORD PTR [rbp-0x8],rax
  40678d:	mov    rax,QWORD PTR [rbp-0x8]
  406791:	add    rsp,0x20
  406795:	pop    rbp
  406796:	ret    
  406797:	nop    WORD PTR [rax+rax*1+0x0]

00000000004067a0 <flatcc_builder_extend_string@@Base>:
  4067a0:	push   rbp
  4067a1:	mov    rbp,rsp
  4067a4:	sub    rsp,0x20
  4067a8:	mov    QWORD PTR [rbp-0x10],rdi
  4067ac:	mov    QWORD PTR [rbp-0x18],rsi
  4067b0:	mov    rsi,QWORD PTR [rbp-0x10]
  4067b4:	mov    rsi,QWORD PTR [rsi+0x30]
  4067b8:	movzx  eax,WORD PTR [rsi+0xe]
  4067bc:	cmp    eax,0x6
  4067bf:	jne    4067ca <flatcc_builder_extend_string@@Base+0x2a>
  4067c5:	jmp    4067e9 <flatcc_builder_extend_string@@Base+0x49>
  4067ca:	lea    rdi,[rip+0x64c0]        # 40cc91 <flatcc_builder_padding_base@@Base+0x751>
  4067d1:	lea    rsi,[rip+0x5f7a]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4067d8:	mov    edx,0x3bd
  4067dd:	lea    rcx,[rip+0x64d9]        # 40ccbd <flatcc_builder_padding_base@@Base+0x77d>
  4067e4:	call   403070 <__assert_fail@plt>
  4067e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4067ed:	mov    rax,QWORD PTR [rbp-0x18]
  4067f1:	mov    ecx,eax
  4067f3:	mov    esi,ecx
  4067f5:	mov    edx,0xffffffff
  4067fa:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  4067ff:	cmp    eax,0x0
  406802:	je     406815 <flatcc_builder_extend_string@@Base+0x75>
  406808:	mov    QWORD PTR [rbp-0x8],0x0
  406810:	jmp    40682a <flatcc_builder_extend_string@@Base+0x8a>
  406815:	mov    rdi,QWORD PTR [rbp-0x10]
  406819:	mov    rax,QWORD PTR [rbp-0x18]
  40681d:	mov    ecx,eax
  40681f:	mov    esi,ecx
  406821:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  406826:	mov    QWORD PTR [rbp-0x8],rax
  40682a:	mov    rax,QWORD PTR [rbp-0x8]
  40682e:	add    rsp,0x20
  406832:	pop    rbp
  406833:	ret    
  406834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40683e:	xchg   ax,ax

0000000000406840 <flatcc_builder_append_string@@Base>:
  406840:	push   rbp
  406841:	mov    rbp,rsp
  406844:	sub    rsp,0x20
  406848:	mov    QWORD PTR [rbp-0x10],rdi
  40684c:	mov    QWORD PTR [rbp-0x18],rsi
  406850:	mov    QWORD PTR [rbp-0x20],rdx
  406854:	mov    rdx,QWORD PTR [rbp-0x10]
  406858:	mov    rdx,QWORD PTR [rdx+0x30]
  40685c:	movzx  eax,WORD PTR [rdx+0xe]
  406860:	cmp    eax,0x6
  406863:	jne    40686e <flatcc_builder_append_string@@Base+0x2e>
  406869:	jmp    40688d <flatcc_builder_append_string@@Base+0x4d>
  40686e:	lea    rdi,[rip+0x641c]        # 40cc91 <flatcc_builder_padding_base@@Base+0x751>
  406875:	lea    rsi,[rip+0x5ed6]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40687c:	mov    edx,0x3c6
  406881:	lea    rcx,[rip+0x6474]        # 40ccfc <flatcc_builder_padding_base@@Base+0x7bc>
  406888:	call   403070 <__assert_fail@plt>
  40688d:	mov    rdi,QWORD PTR [rbp-0x10]
  406891:	mov    rax,QWORD PTR [rbp-0x20]
  406895:	mov    ecx,eax
  406897:	mov    esi,ecx
  406899:	mov    edx,0xffffffff
  40689e:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  4068a3:	cmp    eax,0x0
  4068a6:	je     4068b9 <flatcc_builder_append_string@@Base+0x79>
  4068ac:	mov    QWORD PTR [rbp-0x8],0x0
  4068b4:	jmp    4068d2 <flatcc_builder_append_string@@Base+0x92>
  4068b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4068bd:	mov    rsi,QWORD PTR [rbp-0x18]
  4068c1:	mov    rax,QWORD PTR [rbp-0x20]
  4068c5:	mov    ecx,eax
  4068c7:	mov    edx,ecx
  4068c9:	call   4064a0 <flatcc_builder_vector_push@@Base+0xf0>
  4068ce:	mov    QWORD PTR [rbp-0x8],rax
  4068d2:	mov    rax,QWORD PTR [rbp-0x8]
  4068d6:	add    rsp,0x20
  4068da:	pop    rbp
  4068db:	ret    
  4068dc:	nop    DWORD PTR [rax+0x0]

00000000004068e0 <flatcc_builder_append_string_str@@Base>:
  4068e0:	push   rbp
  4068e1:	mov    rbp,rsp
  4068e4:	sub    rsp,0x20
  4068e8:	mov    QWORD PTR [rbp-0x8],rdi
  4068ec:	mov    QWORD PTR [rbp-0x10],rsi
  4068f0:	mov    rdi,QWORD PTR [rbp-0x8]
  4068f4:	mov    rsi,QWORD PTR [rbp-0x10]
  4068f8:	mov    rax,QWORD PTR [rbp-0x10]
  4068fc:	mov    QWORD PTR [rbp-0x18],rdi
  406900:	mov    rdi,rax
  406903:	mov    QWORD PTR [rbp-0x20],rsi
  406907:	call   403050 <strlen@plt>
  40690c:	mov    rdi,QWORD PTR [rbp-0x18]
  406910:	mov    rsi,QWORD PTR [rbp-0x20]
  406914:	mov    rdx,rax
  406917:	call   406840 <flatcc_builder_append_string@@Base>
  40691c:	add    rsp,0x20
  406920:	pop    rbp
  406921:	ret    
  406922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40692c:	nop    DWORD PTR [rax+0x0]

0000000000406930 <flatcc_builder_append_string_strn@@Base>:
  406930:	push   rbp
  406931:	mov    rbp,rsp
  406934:	sub    rsp,0x30
  406938:	mov    QWORD PTR [rbp-0x8],rdi
  40693c:	mov    QWORD PTR [rbp-0x10],rsi
  406940:	mov    QWORD PTR [rbp-0x18],rdx
  406944:	mov    rdi,QWORD PTR [rbp-0x8]
  406948:	mov    rsi,QWORD PTR [rbp-0x10]
  40694c:	mov    rdx,QWORD PTR [rbp-0x10]
  406950:	mov    rax,QWORD PTR [rbp-0x18]
  406954:	mov    QWORD PTR [rbp-0x20],rdi
  406958:	mov    rdi,rdx
  40695b:	mov    QWORD PTR [rbp-0x28],rsi
  40695f:	mov    rsi,rax
  406962:	call   406980 <flatcc_builder_append_string_strn@@Base+0x50>
  406967:	mov    rdi,QWORD PTR [rbp-0x20]
  40696b:	mov    rsi,QWORD PTR [rbp-0x28]
  40696f:	mov    rdx,rax
  406972:	call   406840 <flatcc_builder_append_string@@Base>
  406977:	add    rsp,0x30
  40697b:	pop    rbp
  40697c:	ret    
  40697d:	nop    DWORD PTR [rax]
  406980:	push   rbp
  406981:	mov    rbp,rsp
  406984:	sub    rsp,0x20
  406988:	mov    QWORD PTR [rbp-0x8],rdi
  40698c:	mov    QWORD PTR [rbp-0x10],rsi
  406990:	mov    rdi,QWORD PTR [rbp-0x8]
  406994:	mov    rdx,QWORD PTR [rbp-0x10]
  406998:	xor    esi,esi
  40699a:	call   403090 <memchr@plt>
  40699f:	mov    QWORD PTR [rbp-0x18],rax
  4069a3:	cmp    QWORD PTR [rbp-0x18],0x0
  4069a8:	je     4069c2 <flatcc_builder_append_string_strn@@Base+0x92>
  4069ae:	mov    rax,QWORD PTR [rbp-0x18]
  4069b2:	mov    rcx,QWORD PTR [rbp-0x8]
  4069b6:	sub    rax,rcx
  4069b9:	mov    QWORD PTR [rbp-0x20],rax
  4069bd:	jmp    4069ca <flatcc_builder_append_string_strn@@Base+0x9a>
  4069c2:	mov    rax,QWORD PTR [rbp-0x10]
  4069c6:	mov    QWORD PTR [rbp-0x20],rax
  4069ca:	mov    rax,QWORD PTR [rbp-0x20]
  4069ce:	add    rsp,0x20
  4069d2:	pop    rbp
  4069d3:	ret    
  4069d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069de:	xchg   ax,ax

00000000004069e0 <flatcc_builder_truncate_vector@@Base>:
  4069e0:	push   rbp
  4069e1:	mov    rbp,rsp
  4069e4:	sub    rsp,0x20
  4069e8:	mov    QWORD PTR [rbp-0x10],rdi
  4069ec:	mov    QWORD PTR [rbp-0x18],rsi
  4069f0:	mov    rsi,QWORD PTR [rbp-0x10]
  4069f4:	mov    rsi,QWORD PTR [rsi+0x30]
  4069f8:	movzx  eax,WORD PTR [rsi+0xe]
  4069fc:	cmp    eax,0x4
  4069ff:	jne    406a0a <flatcc_builder_truncate_vector@@Base+0x2a>
  406a05:	jmp    406a29 <flatcc_builder_truncate_vector@@Base+0x49>
  406a0a:	lea    rdi,[rip+0x607e]        # 40ca8f <flatcc_builder_padding_base@@Base+0x54f>
  406a11:	lea    rsi,[rip+0x5d3a]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406a18:	mov    edx,0x3d9
  406a1d:	lea    rcx,[rip+0x6325]        # 40cd49 <flatcc_builder_padding_base@@Base+0x809>
  406a24:	call   403070 <__assert_fail@plt>
  406a29:	mov    rax,QWORD PTR [rbp-0x10]
  406a2d:	mov    rax,QWORD PTR [rax+0x30]
  406a31:	mov    ecx,DWORD PTR [rax+0x14]
  406a34:	mov    eax,ecx
  406a36:	cmp    rax,QWORD PTR [rbp-0x18]
  406a3a:	jae    406a87 <flatcc_builder_truncate_vector@@Base+0xa7>
  406a40:	mov    rax,QWORD PTR [rbp-0x10]
  406a44:	mov    rax,QWORD PTR [rax+0x30]
  406a48:	mov    ecx,DWORD PTR [rax+0x14]
  406a4b:	mov    eax,ecx
  406a4d:	cmp    rax,QWORD PTR [rbp-0x18]
  406a51:	jb     406a5c <flatcc_builder_truncate_vector@@Base+0x7c>
  406a57:	jmp    406a7b <flatcc_builder_truncate_vector@@Base+0x9b>
  406a5c:	lea    rdi,[rip+0x6325]        # 40cd88 <flatcc_builder_padding_base@@Base+0x848>
  406a63:	lea    rsi,[rip+0x5ce8]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406a6a:	mov    edx,0x3da
  406a6f:	lea    rcx,[rip+0x62d3]        # 40cd49 <flatcc_builder_padding_base@@Base+0x809>
  406a76:	call   403070 <__assert_fail@plt>
  406a7b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406a82:	jmp    406ac3 <flatcc_builder_truncate_vector@@Base+0xe3>
  406a87:	mov    rax,QWORD PTR [rbp-0x18]
  406a8b:	mov    ecx,eax
  406a8d:	mov    rax,QWORD PTR [rbp-0x10]
  406a91:	mov    rax,QWORD PTR [rax+0x30]
  406a95:	mov    edx,DWORD PTR [rax+0x14]
  406a98:	sub    edx,ecx
  406a9a:	mov    DWORD PTR [rax+0x14],edx
  406a9d:	mov    rdi,QWORD PTR [rbp-0x10]
  406aa1:	mov    rax,QWORD PTR [rbp-0x10]
  406aa5:	mov    rax,QWORD PTR [rax+0x30]
  406aa9:	mov    ecx,DWORD PTR [rax+0x10]
  406aac:	mov    rax,QWORD PTR [rbp-0x18]
  406ab0:	mov    edx,eax
  406ab2:	imul   ecx,edx
  406ab5:	mov    esi,ecx
  406ab7:	call   406ad0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406abc:	mov    DWORD PTR [rbp-0x4],0x0
  406ac3:	mov    eax,DWORD PTR [rbp-0x4]
  406ac6:	add    rsp,0x20
  406aca:	pop    rbp
  406acb:	ret    
  406acc:	nop    DWORD PTR [rax+0x0]
  406ad0:	push   rbp
  406ad1:	mov    rbp,rsp
  406ad4:	sub    rsp,0x10
  406ad8:	xor    eax,eax
  406ada:	mov    QWORD PTR [rbp-0x8],rdi
  406ade:	mov    DWORD PTR [rbp-0xc],esi
  406ae1:	mov    esi,DWORD PTR [rbp-0xc]
  406ae4:	mov    rdi,QWORD PTR [rbp-0x8]
  406ae8:	mov    ecx,DWORD PTR [rdi+0x20]
  406aeb:	sub    ecx,esi
  406aed:	mov    DWORD PTR [rdi+0x20],ecx
  406af0:	mov    rdi,QWORD PTR [rbp-0x8]
  406af4:	mov    rdi,QWORD PTR [rdi+0x18]
  406af8:	mov    rdx,QWORD PTR [rbp-0x8]
  406afc:	mov    ecx,DWORD PTR [rdx+0x20]
  406aff:	mov    edx,ecx
  406b01:	add    rdi,rdx
  406b04:	mov    ecx,DWORD PTR [rbp-0xc]
  406b07:	mov    edx,ecx
  406b09:	mov    esi,eax
  406b0b:	call   403080 <memset@plt>
  406b10:	add    rsp,0x10
  406b14:	pop    rbp
  406b15:	ret    
  406b16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406b20 <flatcc_builder_truncate_offset_vector@@Base>:
  406b20:	push   rbp
  406b21:	mov    rbp,rsp
  406b24:	sub    rsp,0x20
  406b28:	mov    QWORD PTR [rbp-0x10],rdi
  406b2c:	mov    QWORD PTR [rbp-0x18],rsi
  406b30:	mov    rsi,QWORD PTR [rbp-0x10]
  406b34:	mov    rsi,QWORD PTR [rsi+0x30]
  406b38:	movzx  eax,WORD PTR [rsi+0xe]
  406b3c:	cmp    eax,0x5
  406b3f:	jne    406b4a <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  406b45:	jmp    406b69 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  406b4a:	lea    rdi,[rip+0x6037]        # 40cb88 <flatcc_builder_padding_base@@Base+0x648>
  406b51:	lea    rsi,[rip+0x5bfa]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406b58:	mov    edx,0x3e2
  406b5d:	lea    rcx,[rip+0x6248]        # 40cdac <flatcc_builder_padding_base@@Base+0x86c>
  406b64:	call   403070 <__assert_fail@plt>
  406b69:	mov    rax,QWORD PTR [rbp-0x10]
  406b6d:	mov    rax,QWORD PTR [rax+0x30]
  406b71:	mov    ecx,DWORD PTR [rax+0x14]
  406b74:	mov    rax,QWORD PTR [rbp-0x18]
  406b78:	mov    edx,eax
  406b7a:	cmp    ecx,edx
  406b7c:	jae    406bcb <flatcc_builder_truncate_offset_vector@@Base+0xab>
  406b82:	mov    rax,QWORD PTR [rbp-0x10]
  406b86:	mov    rax,QWORD PTR [rax+0x30]
  406b8a:	mov    ecx,DWORD PTR [rax+0x14]
  406b8d:	mov    rax,QWORD PTR [rbp-0x18]
  406b91:	mov    edx,eax
  406b93:	cmp    ecx,edx
  406b95:	jb     406ba0 <flatcc_builder_truncate_offset_vector@@Base+0x80>
  406b9b:	jmp    406bbf <flatcc_builder_truncate_offset_vector@@Base+0x9f>
  406ba0:	lea    rdi,[rip+0x624b]        # 40cdf2 <flatcc_builder_padding_base@@Base+0x8b2>
  406ba7:	lea    rsi,[rip+0x5ba4]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406bae:	mov    edx,0x3e3
  406bb3:	lea    rcx,[rip+0x61f2]        # 40cdac <flatcc_builder_padding_base@@Base+0x86c>
  406bba:	call   403070 <__assert_fail@plt>
  406bbf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406bc6:	jmp    406c07 <flatcc_builder_truncate_offset_vector@@Base+0xe7>
  406bcb:	mov    rax,QWORD PTR [rbp-0x18]
  406bcf:	mov    ecx,eax
  406bd1:	mov    rax,QWORD PTR [rbp-0x10]
  406bd5:	mov    rax,QWORD PTR [rax+0x30]
  406bd9:	mov    edx,DWORD PTR [rax+0x14]
  406bdc:	sub    edx,ecx
  406bde:	mov    DWORD PTR [rax+0x14],edx
  406be1:	mov    rdi,QWORD PTR [rbp-0x10]
  406be5:	mov    rax,QWORD PTR [rbp-0x10]
  406be9:	mov    rax,QWORD PTR [rax+0x30]
  406bed:	mov    ecx,DWORD PTR [rax+0x10]
  406bf0:	mov    rax,QWORD PTR [rbp-0x18]
  406bf4:	mov    edx,eax
  406bf6:	imul   ecx,edx
  406bf9:	mov    esi,ecx
  406bfb:	call   406ad0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406c00:	mov    DWORD PTR [rbp-0x4],0x0
  406c07:	mov    eax,DWORD PTR [rbp-0x4]
  406c0a:	add    rsp,0x20
  406c0e:	pop    rbp
  406c0f:	ret    

0000000000406c10 <flatcc_builder_truncate_string@@Base>:
  406c10:	push   rbp
  406c11:	mov    rbp,rsp
  406c14:	sub    rsp,0x20
  406c18:	mov    QWORD PTR [rbp-0x10],rdi
  406c1c:	mov    QWORD PTR [rbp-0x18],rsi
  406c20:	mov    rsi,QWORD PTR [rbp-0x10]
  406c24:	mov    rsi,QWORD PTR [rsi+0x30]
  406c28:	movzx  eax,WORD PTR [rsi+0xe]
  406c2c:	cmp    eax,0x6
  406c2f:	jne    406c3a <flatcc_builder_truncate_string@@Base+0x2a>
  406c35:	jmp    406c59 <flatcc_builder_truncate_string@@Base+0x49>
  406c3a:	lea    rdi,[rip+0x6050]        # 40cc91 <flatcc_builder_padding_base@@Base+0x751>
  406c41:	lea    rsi,[rip+0x5b0a]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406c48:	mov    edx,0x3eb
  406c4d:	lea    rcx,[rip+0x61d9]        # 40ce2d <flatcc_builder_padding_base@@Base+0x8ed>
  406c54:	call   403070 <__assert_fail@plt>
  406c59:	mov    rax,QWORD PTR [rbp-0x10]
  406c5d:	mov    rax,QWORD PTR [rax+0x30]
  406c61:	mov    ecx,DWORD PTR [rax+0x14]
  406c64:	mov    eax,ecx
  406c66:	cmp    rax,QWORD PTR [rbp-0x18]
  406c6a:	jae    406cb7 <flatcc_builder_truncate_string@@Base+0xa7>
  406c70:	mov    rax,QWORD PTR [rbp-0x10]
  406c74:	mov    rax,QWORD PTR [rax+0x30]
  406c78:	mov    ecx,DWORD PTR [rax+0x14]
  406c7b:	mov    eax,ecx
  406c7d:	cmp    rax,QWORD PTR [rbp-0x18]
  406c81:	jb     406c8c <flatcc_builder_truncate_string@@Base+0x7c>
  406c87:	jmp    406cab <flatcc_builder_truncate_string@@Base+0x9b>
  406c8c:	lea    rdi,[rip+0x61d9]        # 40ce6c <flatcc_builder_padding_base@@Base+0x92c>
  406c93:	lea    rsi,[rip+0x5ab8]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406c9a:	mov    edx,0x3ec
  406c9f:	lea    rcx,[rip+0x6187]        # 40ce2d <flatcc_builder_padding_base@@Base+0x8ed>
  406ca6:	call   403070 <__assert_fail@plt>
  406cab:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406cb2:	jmp    406ce5 <flatcc_builder_truncate_string@@Base+0xd5>
  406cb7:	mov    rax,QWORD PTR [rbp-0x18]
  406cbb:	mov    ecx,eax
  406cbd:	mov    rax,QWORD PTR [rbp-0x10]
  406cc1:	mov    rax,QWORD PTR [rax+0x30]
  406cc5:	mov    edx,DWORD PTR [rax+0x14]
  406cc8:	sub    edx,ecx
  406cca:	mov    DWORD PTR [rax+0x14],edx
  406ccd:	mov    rdi,QWORD PTR [rbp-0x10]
  406cd1:	mov    rax,QWORD PTR [rbp-0x18]
  406cd5:	mov    ecx,eax
  406cd7:	mov    esi,ecx
  406cd9:	call   406ad0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406cde:	mov    DWORD PTR [rbp-0x4],0x0
  406ce5:	mov    eax,DWORD PTR [rbp-0x4]
  406ce8:	add    rsp,0x20
  406cec:	pop    rbp
  406ced:	ret    
  406cee:	xchg   ax,ax

0000000000406cf0 <flatcc_builder_start_vector@@Base>:
  406cf0:	push   rbp
  406cf1:	mov    rbp,rsp
  406cf4:	sub    rsp,0x30
  406cf8:	mov    ax,dx
  406cfb:	mov    QWORD PTR [rbp-0x10],rdi
  406cff:	mov    QWORD PTR [rbp-0x18],rsi
  406d03:	mov    WORD PTR [rbp-0x1a],ax
  406d07:	mov    QWORD PTR [rbp-0x28],rcx
  406d0b:	lea    rdi,[rbp-0x1a]
  406d0f:	mov    esi,0x4
  406d14:	call   406da0 <flatcc_builder_start_vector@@Base+0xb0>
  406d19:	mov    rdi,QWORD PTR [rbp-0x10]
  406d1d:	movzx  esi,WORD PTR [rbp-0x1a]
  406d21:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  406d26:	cmp    eax,0x0
  406d29:	je     406d3b <flatcc_builder_start_vector@@Base+0x4b>
  406d2f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d36:	jmp    406d8f <flatcc_builder_start_vector@@Base+0x9f>
  406d3b:	mov    rax,QWORD PTR [rbp-0x18]
  406d3f:	mov    ecx,eax
  406d41:	mov    rax,QWORD PTR [rbp-0x10]
  406d45:	mov    rax,QWORD PTR [rax+0x30]
  406d49:	mov    DWORD PTR [rax+0x10],ecx
  406d4c:	mov    rax,QWORD PTR [rbp-0x10]
  406d50:	mov    rax,QWORD PTR [rax+0x30]
  406d54:	mov    DWORD PTR [rax+0x14],0x0
  406d5b:	mov    rax,QWORD PTR [rbp-0x28]
  406d5f:	mov    ecx,eax
  406d61:	mov    rax,QWORD PTR [rbp-0x10]
  406d65:	mov    rax,QWORD PTR [rax+0x30]
  406d69:	mov    DWORD PTR [rax+0x18],ecx
  406d6c:	mov    rax,QWORD PTR [rbp-0x10]
  406d70:	mov    rax,QWORD PTR [rax+0x30]
  406d74:	mov    WORD PTR [rax+0xe],0x4
  406d7a:	mov    rdi,QWORD PTR [rbp-0x10]
  406d7e:	mov    esi,0xfffffffc
  406d83:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  406d88:	mov    DWORD PTR [rbp-0x4],0x0
  406d8f:	mov    eax,DWORD PTR [rbp-0x4]
  406d92:	add    rsp,0x30
  406d96:	pop    rbp
  406d97:	ret    
  406d98:	nop    DWORD PTR [rax+rax*1+0x0]
  406da0:	push   rbp
  406da1:	mov    rbp,rsp
  406da4:	mov    ax,si
  406da7:	mov    QWORD PTR [rbp-0x8],rdi
  406dab:	mov    WORD PTR [rbp-0xa],ax
  406daf:	mov    rdi,QWORD PTR [rbp-0x8]
  406db3:	movzx  esi,WORD PTR [rdi]
  406db6:	movzx  ecx,WORD PTR [rbp-0xa]
  406dba:	cmp    esi,ecx
  406dbc:	jge    406dcd <flatcc_builder_start_vector@@Base+0xdd>
  406dc2:	mov    ax,WORD PTR [rbp-0xa]
  406dc6:	mov    rcx,QWORD PTR [rbp-0x8]
  406dca:	mov    WORD PTR [rcx],ax
  406dcd:	pop    rbp
  406dce:	ret    
  406dcf:	nop

0000000000406dd0 <flatcc_builder_start_offset_vector@@Base>:
  406dd0:	push   rbp
  406dd1:	mov    rbp,rsp
  406dd4:	sub    rsp,0x10
  406dd8:	mov    QWORD PTR [rbp-0x10],rdi
  406ddc:	mov    rdi,QWORD PTR [rbp-0x10]
  406de0:	mov    esi,0x4
  406de5:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  406dea:	cmp    eax,0x0
  406ded:	je     406dff <flatcc_builder_start_offset_vector@@Base+0x2f>
  406df3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406dfa:	jmp    406e40 <flatcc_builder_start_offset_vector@@Base+0x70>
  406dff:	mov    rax,QWORD PTR [rbp-0x10]
  406e03:	mov    rax,QWORD PTR [rax+0x30]
  406e07:	mov    DWORD PTR [rax+0x10],0x4
  406e0e:	mov    rax,QWORD PTR [rbp-0x10]
  406e12:	mov    rax,QWORD PTR [rax+0x30]
  406e16:	mov    DWORD PTR [rax+0x14],0x0
  406e1d:	mov    rax,QWORD PTR [rbp-0x10]
  406e21:	mov    rax,QWORD PTR [rax+0x30]
  406e25:	mov    WORD PTR [rax+0xe],0x5
  406e2b:	mov    rdi,QWORD PTR [rbp-0x10]
  406e2f:	mov    esi,0xfffffffc
  406e34:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  406e39:	mov    DWORD PTR [rbp-0x4],0x0
  406e40:	mov    eax,DWORD PTR [rbp-0x4]
  406e43:	add    rsp,0x10
  406e47:	pop    rbp
  406e48:	ret    
  406e49:	nop    DWORD PTR [rax+0x0]

0000000000406e50 <flatcc_builder_create_offset_vector@@Base>:
  406e50:	push   rbp
  406e51:	mov    rbp,rsp
  406e54:	sub    rsp,0x30
  406e58:	mov    QWORD PTR [rbp-0x10],rdi
  406e5c:	mov    QWORD PTR [rbp-0x18],rsi
  406e60:	mov    QWORD PTR [rbp-0x20],rdx
  406e64:	mov    rdi,QWORD PTR [rbp-0x10]
  406e68:	call   406dd0 <flatcc_builder_start_offset_vector@@Base>
  406e6d:	cmp    eax,0x0
  406e70:	je     406e82 <flatcc_builder_create_offset_vector@@Base+0x32>
  406e76:	mov    DWORD PTR [rbp-0x4],0x0
  406e7d:	jmp    406ed0 <flatcc_builder_create_offset_vector@@Base+0x80>
  406e82:	mov    rdi,QWORD PTR [rbp-0x10]
  406e86:	mov    rsi,QWORD PTR [rbp-0x20]
  406e8a:	call   4065b0 <flatcc_builder_extend_offset_vector@@Base>
  406e8f:	mov    QWORD PTR [rbp-0x28],rax
  406e93:	cmp    rax,0x0
  406e97:	jne    406ea9 <flatcc_builder_create_offset_vector@@Base+0x59>
  406e9d:	mov    DWORD PTR [rbp-0x4],0x0
  406ea4:	jmp    406ed0 <flatcc_builder_create_offset_vector@@Base+0x80>
  406ea9:	mov    rax,QWORD PTR [rbp-0x28]
  406ead:	mov    rcx,QWORD PTR [rbp-0x18]
  406eb1:	mov    rdx,QWORD PTR [rbp-0x20]
  406eb5:	shl    rdx,0x2
  406eb9:	mov    rdi,rax
  406ebc:	mov    rsi,rcx
  406ebf:	call   4030c0 <memcpy@plt>
  406ec4:	mov    rdi,QWORD PTR [rbp-0x10]
  406ec8:	call   406ee0 <flatcc_builder_end_offset_vector@@Base>
  406ecd:	mov    DWORD PTR [rbp-0x4],eax
  406ed0:	mov    eax,DWORD PTR [rbp-0x4]
  406ed3:	add    rsp,0x30
  406ed7:	pop    rbp
  406ed8:	ret    
  406ed9:	nop    DWORD PTR [rax+0x0]

0000000000406ee0 <flatcc_builder_end_offset_vector@@Base>:
  406ee0:	push   rbp
  406ee1:	mov    rbp,rsp
  406ee4:	sub    rsp,0x20
  406ee8:	mov    QWORD PTR [rbp-0x10],rdi
  406eec:	mov    rdi,QWORD PTR [rbp-0x10]
  406ef0:	mov    rdi,QWORD PTR [rdi+0x30]
  406ef4:	movzx  eax,WORD PTR [rdi+0xe]
  406ef8:	cmp    eax,0x5
  406efb:	jne    406f06 <flatcc_builder_end_offset_vector@@Base+0x26>
  406f01:	jmp    406f25 <flatcc_builder_end_offset_vector@@Base+0x45>
  406f06:	lea    rdi,[rip+0x5c7b]        # 40cb88 <flatcc_builder_padding_base@@Base+0x648>
  406f0d:	lea    rsi,[rip+0x583e]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  406f14:	mov    edx,0x5c8
  406f19:	lea    rcx,[rip+0x6297]        # 40d1b7 <flatcc_builder_padding_base@@Base+0xc77>
  406f20:	call   403070 <__assert_fail@plt>
  406f25:	mov    rdi,QWORD PTR [rbp-0x10]
  406f29:	mov    rax,QWORD PTR [rbp-0x10]
  406f2d:	mov    rax,QWORD PTR [rax+0x18]
  406f31:	mov    rcx,QWORD PTR [rbp-0x10]
  406f35:	mov    rcx,QWORD PTR [rcx+0x30]
  406f39:	mov    edx,DWORD PTR [rcx+0x14]
  406f3c:	mov    rsi,rax
  406f3f:	call   408330 <flatcc_builder_create_offset_vector_direct@@Base>
  406f44:	xor    r8d,r8d
  406f47:	mov    DWORD PTR [rbp-0x14],eax
  406f4a:	cmp    r8d,eax
  406f4d:	jne    406f5f <flatcc_builder_end_offset_vector@@Base+0x7f>
  406f53:	mov    DWORD PTR [rbp-0x4],0x0
  406f5a:	jmp    406f6e <flatcc_builder_end_offset_vector@@Base+0x8e>
  406f5f:	mov    rdi,QWORD PTR [rbp-0x10]
  406f63:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  406f68:	mov    eax,DWORD PTR [rbp-0x14]
  406f6b:	mov    DWORD PTR [rbp-0x4],eax
  406f6e:	mov    eax,DWORD PTR [rbp-0x4]
  406f71:	add    rsp,0x20
  406f75:	pop    rbp
  406f76:	ret    
  406f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406f80 <flatcc_builder_start_string@@Base>:
  406f80:	push   rbp
  406f81:	mov    rbp,rsp
  406f84:	sub    rsp,0x10
  406f88:	mov    QWORD PTR [rbp-0x10],rdi
  406f8c:	mov    rdi,QWORD PTR [rbp-0x10]
  406f90:	mov    esi,0x1
  406f95:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  406f9a:	cmp    eax,0x0
  406f9d:	je     406faf <flatcc_builder_start_string@@Base+0x2f>
  406fa3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406faa:	jmp    406ff0 <flatcc_builder_start_string@@Base+0x70>
  406faf:	mov    rax,QWORD PTR [rbp-0x10]
  406fb3:	mov    rax,QWORD PTR [rax+0x30]
  406fb7:	mov    DWORD PTR [rax+0x10],0x1
  406fbe:	mov    rax,QWORD PTR [rbp-0x10]
  406fc2:	mov    rax,QWORD PTR [rax+0x30]
  406fc6:	mov    DWORD PTR [rax+0x14],0x0
  406fcd:	mov    rax,QWORD PTR [rbp-0x10]
  406fd1:	mov    rax,QWORD PTR [rax+0x30]
  406fd5:	mov    WORD PTR [rax+0xe],0x6
  406fdb:	mov    rdi,QWORD PTR [rbp-0x10]
  406fdf:	mov    esi,0xfffffffc
  406fe4:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  406fe9:	mov    DWORD PTR [rbp-0x4],0x0
  406ff0:	mov    eax,DWORD PTR [rbp-0x4]
  406ff3:	add    rsp,0x10
  406ff7:	pop    rbp
  406ff8:	ret    
  406ff9:	nop    DWORD PTR [rax+0x0]

0000000000407000 <flatcc_builder_reserve_table@@Base>:
  407000:	push   rbp
  407001:	mov    rbp,rsp
  407004:	sub    rsp,0x10
  407008:	mov    QWORD PTR [rbp-0x8],rdi
  40700c:	mov    DWORD PTR [rbp-0xc],esi
  40700f:	cmp    DWORD PTR [rbp-0xc],0x0
  407013:	jl     40701e <flatcc_builder_reserve_table@@Base+0x1e>
  407019:	jmp    40703d <flatcc_builder_reserve_table@@Base+0x3d>
  40701e:	lea    rdi,[rip+0x5eaa]        # 40cecf <flatcc_builder_padding_base@@Base+0x98f>
  407025:	lea    rsi,[rip+0x5726]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40702c:	mov    edx,0x429
  407031:	lea    rcx,[rip+0x5e56]        # 40ce8e <flatcc_builder_padding_base@@Base+0x94e>
  407038:	call   403070 <__assert_fail@plt>
  40703d:	mov    rdi,QWORD PTR [rbp-0x8]
  407041:	mov    esi,DWORD PTR [rbp-0xc]
  407044:	call   407050 <flatcc_builder_reserve_table@@Base+0x50>
  407049:	add    rsp,0x10
  40704d:	pop    rbp
  40704e:	ret    
  40704f:	nop
  407050:	push   rbp
  407051:	mov    rbp,rsp
  407054:	sub    rsp,0x20
  407058:	xor    eax,eax
  40705a:	mov    QWORD PTR [rbp-0x10],rdi
  40705e:	mov    DWORD PTR [rbp-0x14],esi
  407061:	mov    rdi,QWORD PTR [rbp-0x10]
  407065:	mov    rdi,QWORD PTR [rdi+0x30]
  407069:	mov    esi,DWORD PTR [rdi+0x10]
  40706c:	mov    edi,esi
  40706e:	mov    rcx,QWORD PTR [rbp-0x10]
  407072:	mov    rcx,QWORD PTR [rcx+0x30]
  407076:	movzx  esi,WORD PTR [rcx+0x1c]
  40707a:	mov    ecx,esi
  40707c:	shl    rcx,0x1
  407080:	add    rdi,rcx
  407083:	mov    esi,edi
  407085:	mov    DWORD PTR [rbp-0x18],esi
  407088:	mov    esi,DWORD PTR [rbp-0x14]
  40708b:	add    esi,0x2
  40708e:	movsxd rcx,esi
  407091:	shl    rcx,0x1
  407095:	mov    esi,ecx
  407097:	mov    DWORD PTR [rbp-0x1c],esi
  40709a:	mov    rdi,QWORD PTR [rbp-0x10]
  40709e:	mov    esi,DWORD PTR [rbp-0x18]
  4070a1:	mov    edx,esi
  4070a3:	mov    esi,DWORD PTR [rbp-0x1c]
  4070a6:	mov    ecx,esi
  4070a8:	mov    esi,eax
  4070aa:	mov    r8d,0x1
  4070b0:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  4070b5:	mov    rcx,QWORD PTR [rbp-0x10]
  4070b9:	mov    QWORD PTR [rcx+0x8],rax
  4070bd:	cmp    rax,0x0
  4070c1:	jne    4070d3 <flatcc_builder_reserve_table@@Base+0xd3>
  4070c7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070ce:	jmp    40713f <flatcc_builder_reserve_table@@Base+0x13f>
  4070d3:	xor    r8d,r8d
  4070d6:	mov    rax,QWORD PTR [rbp-0x10]
  4070da:	mov    rcx,QWORD PTR [rax+0x8]
  4070de:	add    rcx,0x4
  4070e2:	mov    QWORD PTR [rax+0x8],rcx
  4070e6:	mov    rax,QWORD PTR [rbp-0x10]
  4070ea:	mov    rax,QWORD PTR [rax+0x30]
  4070ee:	mov    edx,DWORD PTR [rax+0x14]
  4070f1:	mov    DWORD PTR [rbp-0x18],edx
  4070f4:	movsxd rax,DWORD PTR [rbp-0x14]
  4070f8:	shl    rax,0x1
  4070fc:	add    rax,0x1
  407100:	mov    edx,eax
  407102:	mov    DWORD PTR [rbp-0x1c],edx
  407105:	mov    rdi,QWORD PTR [rbp-0x10]
  407109:	mov    edx,DWORD PTR [rbp-0x18]
  40710c:	mov    esi,DWORD PTR [rbp-0x1c]
  40710f:	mov    ecx,esi
  407111:	mov    esi,0x3
  407116:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40711b:	mov    rcx,QWORD PTR [rbp-0x10]
  40711f:	mov    QWORD PTR [rcx],rax
  407122:	cmp    rax,0x0
  407126:	jne    407138 <flatcc_builder_reserve_table@@Base+0x138>
  40712c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407133:	jmp    40713f <flatcc_builder_reserve_table@@Base+0x13f>
  407138:	mov    DWORD PTR [rbp-0x4],0x0
  40713f:	mov    eax,DWORD PTR [rbp-0x4]
  407142:	add    rsp,0x20
  407146:	pop    rbp
  407147:	ret    
  407148:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407150 <flatcc_builder_start_table@@Base>:
  407150:	push   rbp
  407151:	mov    rbp,rsp
  407154:	sub    rsp,0x20
  407158:	mov    QWORD PTR [rbp-0x10],rdi
  40715c:	mov    DWORD PTR [rbp-0x14],esi
  40715f:	mov    rdi,QWORD PTR [rbp-0x10]
  407163:	mov    esi,0x4
  407168:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  40716d:	cmp    eax,0x0
  407170:	je     407182 <flatcc_builder_start_table@@Base+0x32>
  407176:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40717d:	jmp    40724e <flatcc_builder_start_table@@Base+0xfe>
  407182:	mov    rax,QWORD PTR [rbp-0x10]
  407186:	mov    rax,QWORD PTR [rax+0x8]
  40718a:	mov    rcx,QWORD PTR [rbp-0x10]
  40718e:	mov    rcx,QWORD PTR [rcx+0x58]
  407192:	sub    rax,rcx
  407195:	mov    edx,eax
  407197:	mov    rax,QWORD PTR [rbp-0x10]
  40719b:	mov    rax,QWORD PTR [rax+0x30]
  40719f:	mov    DWORD PTR [rax+0x10],edx
  4071a2:	mov    rax,QWORD PTR [rbp-0x10]
  4071a6:	mov    rax,QWORD PTR [rax]
  4071a9:	mov    rcx,QWORD PTR [rbp-0x10]
  4071ad:	mov    rcx,QWORD PTR [rcx+0x88]
  4071b4:	sub    rax,rcx
  4071b7:	mov    edx,eax
  4071b9:	mov    rax,QWORD PTR [rbp-0x10]
  4071bd:	mov    rax,QWORD PTR [rax+0x30]
  4071c1:	mov    DWORD PTR [rax+0x14],edx
  4071c4:	mov    rax,QWORD PTR [rbp-0x10]
  4071c8:	mov    edx,DWORD PTR [rax+0x14]
  4071cb:	mov    rax,QWORD PTR [rbp-0x10]
  4071cf:	mov    rax,QWORD PTR [rax+0x30]
  4071d3:	mov    DWORD PTR [rax+0x18],edx
  4071d6:	mov    rax,QWORD PTR [rbp-0x10]
  4071da:	mov    si,WORD PTR [rax+0x10]
  4071de:	mov    rax,QWORD PTR [rbp-0x10]
  4071e2:	mov    rax,QWORD PTR [rax+0x30]
  4071e6:	mov    WORD PTR [rax+0x1c],si
  4071ea:	mov    rax,QWORD PTR [rbp-0x10]
  4071ee:	mov    DWORD PTR [rax+0x14],0x0
  4071f5:	mov    rax,QWORD PTR [rbp-0x10]
  4071f9:	mov    DWORD PTR [rax+0x14],0x2f693b52
  407200:	mov    rax,QWORD PTR [rbp-0x10]
  407204:	mov    WORD PTR [rax+0x10],0x0
  40720a:	mov    rax,QWORD PTR [rbp-0x10]
  40720e:	mov    rax,QWORD PTR [rax+0x30]
  407212:	mov    WORD PTR [rax+0xe],0x3
  407218:	mov    rdi,QWORD PTR [rbp-0x10]
  40721c:	mov    esi,DWORD PTR [rbp-0x14]
  40721f:	call   407050 <flatcc_builder_reserve_table@@Base+0x50>
  407224:	cmp    eax,0x0
  407227:	je     407239 <flatcc_builder_start_table@@Base+0xe9>
  40722d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407234:	jmp    40724e <flatcc_builder_start_table@@Base+0xfe>
  407239:	mov    rdi,QWORD PTR [rbp-0x10]
  40723d:	mov    esi,0xfffc
  407242:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  407247:	mov    DWORD PTR [rbp-0x4],0x0
  40724e:	mov    eax,DWORD PTR [rbp-0x4]
  407251:	add    rsp,0x20
  407255:	pop    rbp
  407256:	ret    
  407257:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407260 <flatcc_builder_create_vtable@@Base>:
  407260:	push   rbp
  407261:	mov    rbp,rsp
  407264:	sub    rsp,0xc0
  40726b:	mov    ax,dx
  40726e:	mov    QWORD PTR [rbp-0x10],rdi
  407272:	mov    QWORD PTR [rbp-0x18],rsi
  407276:	mov    WORD PTR [rbp-0x1a],ax
  40727a:	mov    QWORD PTR [rbp-0xb0],0x0
  407285:	mov    DWORD PTR [rbp-0xa8],0x0
  40728f:	movzx  edx,WORD PTR [rbp-0x1a]
  407293:	cmp    edx,0x0
  407296:	jle    4072fe <flatcc_builder_create_vtable@@Base+0x9e>
  40729c:	movzx  eax,WORD PTR [rbp-0x1a]
  4072a0:	mov    ecx,eax
  4072a2:	add    rcx,QWORD PTR [rbp-0xb0]
  4072a9:	mov    QWORD PTR [rbp-0xb0],rcx
  4072b0:	mov    rcx,QWORD PTR [rbp-0x18]
  4072b4:	lea    rdx,[rbp-0xb0]
  4072bb:	mov    rsi,rdx
  4072be:	add    rsi,0x10
  4072c2:	movsxd rdi,DWORD PTR [rbp-0xa8]
  4072c9:	shl    rdi,0x4
  4072cd:	add    rsi,rdi
  4072d0:	mov    QWORD PTR [rsi],rcx
  4072d3:	movzx  eax,WORD PTR [rbp-0x1a]
  4072d7:	mov    ecx,eax
  4072d9:	add    rdx,0x10
  4072dd:	movsxd rsi,DWORD PTR [rbp-0xa8]
  4072e4:	shl    rsi,0x4
  4072e8:	add    rdx,rsi
  4072eb:	mov    QWORD PTR [rdx+0x8],rcx
  4072ef:	mov    eax,DWORD PTR [rbp-0xa8]
  4072f5:	add    eax,0x1
  4072f8:	mov    DWORD PTR [rbp-0xa8],eax
  4072fe:	mov    rax,QWORD PTR [rbp-0x10]
  407302:	cmp    DWORD PTR [rax+0x100],0x0
  407309:	jne    40734e <flatcc_builder_create_vtable@@Base+0xee>
  40730f:	mov    rax,QWORD PTR [rbp-0x10]
  407313:	cmp    DWORD PTR [rax+0x124],0x0
  40731a:	jne    40734e <flatcc_builder_create_vtable@@Base+0xee>
  407320:	mov    rdi,QWORD PTR [rbp-0x10]
  407324:	lea    rsi,[rbp-0xb0]
  40732b:	call   4073a0 <flatcc_builder_create_vtable@@Base+0x140>
  407330:	xor    ecx,ecx
  407332:	mov    DWORD PTR [rbp-0x20],eax
  407335:	cmp    ecx,eax
  407337:	jne    407349 <flatcc_builder_create_vtable@@Base+0xe9>
  40733d:	mov    DWORD PTR [rbp-0x4],0x0
  407344:	jmp    407386 <flatcc_builder_create_vtable@@Base+0x126>
  407349:	jmp    407380 <flatcc_builder_create_vtable@@Base+0x120>
  40734e:	mov    rdi,QWORD PTR [rbp-0x10]
  407352:	lea    rsi,[rbp-0xb0]
  407359:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  40735e:	xor    ecx,ecx
  407360:	mov    DWORD PTR [rbp-0x20],eax
  407363:	cmp    ecx,eax
  407365:	jne    407377 <flatcc_builder_create_vtable@@Base+0x117>
  40736b:	mov    DWORD PTR [rbp-0x4],0x0
  407372:	jmp    407386 <flatcc_builder_create_vtable@@Base+0x126>
  407377:	mov    eax,DWORD PTR [rbp-0x20]
  40737a:	add    eax,0x1
  40737d:	mov    DWORD PTR [rbp-0x20],eax
  407380:	mov    eax,DWORD PTR [rbp-0x20]
  407383:	mov    DWORD PTR [rbp-0x4],eax
  407386:	mov    eax,DWORD PTR [rbp-0x4]
  407389:	add    rsp,0xc0
  407390:	pop    rbp
  407391:	ret    
  407392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40739c:	nop    DWORD PTR [rax+0x0]
  4073a0:	push   rbp
  4073a1:	mov    rbp,rsp
  4073a4:	sub    rsp,0x20
  4073a8:	mov    QWORD PTR [rbp-0x8],rdi
  4073ac:	mov    QWORD PTR [rbp-0x10],rsi
  4073b0:	mov    rsi,QWORD PTR [rbp-0x8]
  4073b4:	mov    eax,DWORD PTR [rsi+0xf4]
  4073ba:	mov    DWORD PTR [rbp-0x14],eax
  4073bd:	mov    eax,DWORD PTR [rbp-0x14]
  4073c0:	mov    rsi,QWORD PTR [rbp-0x10]
  4073c4:	mov    rsi,QWORD PTR [rsi]
  4073c7:	mov    ecx,esi
  4073c9:	add    eax,ecx
  4073cb:	mov    rsi,QWORD PTR [rbp-0x8]
  4073cf:	mov    DWORD PTR [rsi+0xf4],eax
  4073d5:	mov    rsi,QWORD PTR [rbp-0x8]
  4073d9:	mov    eax,DWORD PTR [rsi+0xf4]
  4073df:	cmp    eax,DWORD PTR [rbp-0x14]
  4073e2:	jge    407407 <flatcc_builder_create_vtable@@Base+0x1a7>
  4073e8:	lea    rdi,[rip+0x6523]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4073ef:	lea    rsi,[rip+0x535c]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4073f6:	mov    edx,0x2a1
  4073fb:	lea    rcx,[rip+0x648b]        # 40d88d <flatcc_builder_padding_base@@Base+0x134d>
  407402:	call   403070 <__assert_fail@plt>
  407407:	mov    rax,QWORD PTR [rbp-0x8]
  40740b:	mov    rax,QWORD PTR [rax+0x48]
  40740f:	mov    rcx,QWORD PTR [rbp-0x8]
  407413:	mov    rdi,QWORD PTR [rcx+0x38]
  407417:	mov    rcx,QWORD PTR [rbp-0x10]
  40741b:	add    rcx,0x10
  40741f:	mov    rdx,QWORD PTR [rbp-0x10]
  407423:	mov    edx,DWORD PTR [rdx+0x8]
  407426:	mov    esi,DWORD PTR [rbp-0x14]
  407429:	mov    r8,QWORD PTR [rbp-0x10]
  40742d:	mov    r8,QWORD PTR [r8]
  407430:	mov    DWORD PTR [rbp-0x18],esi
  407433:	mov    rsi,rcx
  407436:	mov    ecx,DWORD PTR [rbp-0x18]
  407439:	call   rax
  40743b:	cmp    eax,0x0
  40743e:	je     407463 <flatcc_builder_create_vtable@@Base+0x203>
  407444:	lea    rdi,[rip+0x64c7]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  40744b:	lea    rsi,[rip+0x5300]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  407452:	mov    edx,0x2a5
  407457:	lea    rcx,[rip+0x642f]        # 40d88d <flatcc_builder_padding_base@@Base+0x134d>
  40745e:	call   403070 <__assert_fail@plt>
  407463:	mov    eax,DWORD PTR [rbp-0x14]
  407466:	add    eax,0x1
  407469:	add    rsp,0x20
  40746d:	pop    rbp
  40746e:	ret    
  40746f:	nop

0000000000407470 <flatcc_builder_create_cached_vtable@@Base>:
  407470:	push   rbp
  407471:	mov    rbp,rsp
  407474:	sub    rsp,0x70
  407478:	mov    ax,dx
  40747b:	mov    QWORD PTR [rbp-0x10],rdi
  40747f:	mov    QWORD PTR [rbp-0x18],rsi
  407483:	mov    WORD PTR [rbp-0x1a],ax
  407487:	mov    DWORD PTR [rbp-0x20],ecx
  40748a:	mov    rdi,QWORD PTR [rbp-0x10]
  40748e:	mov    esi,DWORD PTR [rbp-0x20]
  407491:	call   4077a0 <flatcc_builder_create_cached_vtable@@Base+0x330>
  407496:	mov    QWORD PTR [rbp-0x40],rax
  40749a:	cmp    rax,0x0
  40749e:	jne    4074b0 <flatcc_builder_create_cached_vtable@@Base+0x40>
  4074a4:	mov    DWORD PTR [rbp-0x4],0x0
  4074ab:	jmp    407788 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4074b0:	mov    rax,QWORD PTR [rbp-0x40]
  4074b4:	mov    QWORD PTR [rbp-0x38],rax
  4074b8:	mov    rax,QWORD PTR [rbp-0x38]
  4074bc:	mov    ecx,DWORD PTR [rax]
  4074be:	mov    DWORD PTR [rbp-0x44],ecx
  4074c1:	mov    QWORD PTR [rbp-0x30],0x0
  4074c9:	cmp    DWORD PTR [rbp-0x44],0x0
  4074cd:	je     4075dc <flatcc_builder_create_cached_vtable@@Base+0x16c>
  4074d3:	mov    rax,QWORD PTR [rbp-0x10]
  4074d7:	mov    rax,QWORD PTR [rax+0xb8]
  4074de:	mov    ecx,DWORD PTR [rbp-0x44]
  4074e1:	mov    edx,ecx
  4074e3:	add    rax,rdx
  4074e6:	mov    QWORD PTR [rbp-0x28],rax
  4074ea:	mov    rax,QWORD PTR [rbp-0x10]
  4074ee:	mov    rax,QWORD PTR [rax+0x78]
  4074f2:	mov    rdx,QWORD PTR [rbp-0x28]
  4074f6:	mov    ecx,DWORD PTR [rdx+0x8]
  4074f9:	mov    edx,ecx
  4074fb:	add    rax,rdx
  4074fe:	mov    QWORD PTR [rbp-0x50],rax
  407502:	mov    rax,QWORD PTR [rbp-0x50]
  407506:	movzx  ecx,WORD PTR [rax]
  407509:	movzx  esi,WORD PTR [rbp-0x1a]
  40750d:	cmp    ecx,esi
  40750f:	jne    407548 <flatcc_builder_create_cached_vtable@@Base+0xd8>
  407515:	xor    eax,eax
  407517:	mov    rcx,QWORD PTR [rbp-0x18]
  40751b:	mov    rdx,QWORD PTR [rbp-0x50]
  40751f:	movzx  esi,WORD PTR [rbp-0x1a]
  407523:	mov    edi,esi
  407525:	mov    QWORD PTR [rbp-0x58],rdi
  407529:	mov    rdi,rcx
  40752c:	mov    rsi,rdx
  40752f:	mov    rdx,QWORD PTR [rbp-0x58]
  407533:	mov    DWORD PTR [rbp-0x5c],eax
  407536:	call   4030a0 <memcmp@plt>
  40753b:	mov    r8d,DWORD PTR [rbp-0x5c]
  40753f:	cmp    r8d,eax
  407542:	je     407563 <flatcc_builder_create_cached_vtable@@Base+0xf3>
  407548:	mov    rax,QWORD PTR [rbp-0x28]
  40754c:	add    rax,0xc
  407550:	mov    QWORD PTR [rbp-0x38],rax
  407554:	mov    rax,QWORD PTR [rbp-0x28]
  407558:	mov    ecx,DWORD PTR [rax+0xc]
  40755b:	mov    DWORD PTR [rbp-0x44],ecx
  40755e:	jmp    4074c9 <flatcc_builder_create_cached_vtable@@Base+0x59>
  407563:	mov    rax,QWORD PTR [rbp-0x28]
  407567:	mov    ecx,DWORD PTR [rax+0x4]
  40756a:	mov    rax,QWORD PTR [rbp-0x10]
  40756e:	cmp    ecx,DWORD PTR [rax+0x100]
  407574:	je     40759d <flatcc_builder_create_cached_vtable@@Base+0x12d>
  40757a:	mov    rax,QWORD PTR [rbp-0x28]
  40757e:	mov    QWORD PTR [rbp-0x30],rax
  407582:	mov    rax,QWORD PTR [rbp-0x28]
  407586:	add    rax,0xc
  40758a:	mov    QWORD PTR [rbp-0x38],rax
  40758e:	mov    rax,QWORD PTR [rbp-0x28]
  407592:	mov    ecx,DWORD PTR [rax+0xc]
  407595:	mov    DWORD PTR [rbp-0x44],ecx
  407598:	jmp    4074c9 <flatcc_builder_create_cached_vtable@@Base+0x59>
  40759d:	mov    rax,QWORD PTR [rbp-0x38]
  4075a1:	cmp    rax,QWORD PTR [rbp-0x40]
  4075a5:	je     4075ce <flatcc_builder_create_cached_vtable@@Base+0x15e>
  4075ab:	mov    rax,QWORD PTR [rbp-0x28]
  4075af:	mov    ecx,DWORD PTR [rax+0xc]
  4075b2:	mov    rax,QWORD PTR [rbp-0x38]
  4075b6:	mov    DWORD PTR [rax],ecx
  4075b8:	mov    rax,QWORD PTR [rbp-0x40]
  4075bc:	mov    ecx,DWORD PTR [rax]
  4075be:	mov    rax,QWORD PTR [rbp-0x28]
  4075c2:	mov    DWORD PTR [rax+0xc],ecx
  4075c5:	mov    ecx,DWORD PTR [rbp-0x44]
  4075c8:	mov    rax,QWORD PTR [rbp-0x40]
  4075cc:	mov    DWORD PTR [rax],ecx
  4075ce:	mov    rax,QWORD PTR [rbp-0x28]
  4075d2:	mov    ecx,DWORD PTR [rax]
  4075d4:	mov    DWORD PTR [rbp-0x4],ecx
  4075d7:	jmp    407788 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4075dc:	mov    eax,0x10
  4075e1:	mov    ecx,eax
  4075e3:	xor    r8d,r8d
  4075e6:	mov    rdi,QWORD PTR [rbp-0x10]
  4075ea:	mov    rdx,QWORD PTR [rbp-0x10]
  4075ee:	mov    eax,DWORD PTR [rdx+0xe4]
  4075f4:	mov    edx,eax
  4075f6:	mov    esi,0x6
  4075fb:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407600:	mov    QWORD PTR [rbp-0x28],rax
  407604:	cmp    rax,0x0
  407608:	jne    40761a <flatcc_builder_create_cached_vtable@@Base+0x1aa>
  40760e:	mov    DWORD PTR [rbp-0x4],0x0
  407615:	jmp    407788 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40761a:	mov    rax,QWORD PTR [rbp-0x10]
  40761e:	mov    ecx,DWORD PTR [rax+0xe4]
  407624:	mov    DWORD PTR [rbp-0x44],ecx
  407627:	mov    rax,QWORD PTR [rbp-0x10]
  40762b:	mov    ecx,DWORD PTR [rax+0xe4]
  407631:	mov    edx,ecx
  407633:	add    rdx,0x10
  407637:	mov    ecx,edx
  407639:	mov    DWORD PTR [rax+0xe4],ecx
  40763f:	mov    rax,QWORD PTR [rbp-0x10]
  407643:	mov    ecx,DWORD PTR [rax+0x100]
  407649:	mov    rax,QWORD PTR [rbp-0x28]
  40764d:	mov    DWORD PTR [rax+0x4],ecx
  407650:	mov    rax,QWORD PTR [rbp-0x40]
  407654:	mov    ecx,DWORD PTR [rax]
  407656:	mov    rax,QWORD PTR [rbp-0x28]
  40765a:	mov    DWORD PTR [rax+0xc],ecx
  40765d:	mov    ecx,DWORD PTR [rbp-0x44]
  407660:	mov    rax,QWORD PTR [rbp-0x40]
  407664:	mov    DWORD PTR [rax],ecx
  407666:	mov    rdi,QWORD PTR [rbp-0x10]
  40766a:	mov    rsi,QWORD PTR [rbp-0x18]
  40766e:	movzx  edx,WORD PTR [rbp-0x1a]
  407672:	call   407260 <flatcc_builder_create_vtable@@Base>
  407677:	xor    ecx,ecx
  407679:	mov    rsi,QWORD PTR [rbp-0x28]
  40767d:	mov    DWORD PTR [rsi],eax
  40767f:	cmp    ecx,eax
  407681:	jne    407693 <flatcc_builder_create_cached_vtable@@Base+0x223>
  407687:	mov    DWORD PTR [rbp-0x4],0x0
  40768e:	jmp    407788 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407693:	cmp    QWORD PTR [rbp-0x30],0x0
  407698:	je     4076b1 <flatcc_builder_create_cached_vtable@@Base+0x241>
  40769e:	mov    rax,QWORD PTR [rbp-0x30]
  4076a2:	mov    ecx,DWORD PTR [rax+0x8]
  4076a5:	mov    rax,QWORD PTR [rbp-0x28]
  4076a9:	mov    DWORD PTR [rax+0x8],ecx
  4076ac:	jmp    40777f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  4076b1:	mov    rax,QWORD PTR [rbp-0x10]
  4076b5:	cmp    QWORD PTR [rax+0x118],0x0
  4076bd:	je     4076f9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4076c3:	mov    rax,QWORD PTR [rbp-0x10]
  4076c7:	mov    rax,QWORD PTR [rax+0x118]
  4076ce:	mov    rcx,QWORD PTR [rbp-0x10]
  4076d2:	mov    edx,DWORD PTR [rcx+0xe0]
  4076d8:	movzx  esi,WORD PTR [rbp-0x1a]
  4076dc:	add    edx,esi
  4076de:	mov    edx,edx
  4076e0:	mov    ecx,edx
  4076e2:	cmp    rax,rcx
  4076e5:	jae    4076f9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4076eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4076ef:	call   404740 <flatcc_builder_flush_vtable_cache@@Base>
  4076f4:	jmp    40777a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  4076f9:	xor    r8d,r8d
  4076fc:	mov    rdi,QWORD PTR [rbp-0x10]
  407700:	mov    rax,QWORD PTR [rbp-0x10]
  407704:	mov    ecx,DWORD PTR [rax+0xe0]
  40770a:	mov    edx,ecx
  40770c:	movzx  ecx,WORD PTR [rbp-0x1a]
  407710:	mov    esi,0x2
  407715:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40771a:	mov    QWORD PTR [rbp-0x50],rax
  40771e:	cmp    rax,0x0
  407722:	jne    407734 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  407728:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40772f:	jmp    407788 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407734:	mov    rax,QWORD PTR [rbp-0x10]
  407738:	mov    ecx,DWORD PTR [rax+0xe0]
  40773e:	mov    rax,QWORD PTR [rbp-0x28]
  407742:	mov    DWORD PTR [rax+0x8],ecx
  407745:	movzx  ecx,WORD PTR [rbp-0x1a]
  407749:	mov    rax,QWORD PTR [rbp-0x10]
  40774d:	add    ecx,DWORD PTR [rax+0xe0]
  407753:	mov    DWORD PTR [rax+0xe0],ecx
  407759:	mov    rax,QWORD PTR [rbp-0x50]
  40775d:	mov    rdx,QWORD PTR [rbp-0x18]
  407761:	movzx  ecx,WORD PTR [rbp-0x1a]
  407765:	mov    esi,ecx
  407767:	mov    rdi,rax
  40776a:	mov    QWORD PTR [rbp-0x68],rsi
  40776e:	mov    rsi,rdx
  407771:	mov    rdx,QWORD PTR [rbp-0x68]
  407775:	call   4030c0 <memcpy@plt>
  40777a:	jmp    40777f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  40777f:	mov    rax,QWORD PTR [rbp-0x28]
  407783:	mov    ecx,DWORD PTR [rax]
  407785:	mov    DWORD PTR [rbp-0x4],ecx
  407788:	mov    eax,DWORD PTR [rbp-0x4]
  40778b:	add    rsp,0x70
  40778f:	pop    rbp
  407790:	ret    
  407791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40779b:	nop    DWORD PTR [rax+rax*1+0x0]
  4077a0:	push   rbp
  4077a1:	mov    rbp,rsp
  4077a4:	sub    rsp,0x20
  4077a8:	mov    QWORD PTR [rbp-0x10],rdi
  4077ac:	mov    DWORD PTR [rbp-0x14],esi
  4077af:	mov    rdi,QWORD PTR [rbp-0x10]
  4077b3:	cmp    QWORD PTR [rdi+0xd8],0x0
  4077bb:	jne    4077e5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  4077c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4077c5:	call   40a1f0 <flatcc_builder_get_emit_context@@Base+0xe0>
  4077ca:	cmp    eax,0x0
  4077cd:	je     4077e0 <flatcc_builder_create_cached_vtable@@Base+0x370>
  4077d3:	mov    QWORD PTR [rbp-0x8],0x0
  4077db:	jmp    407822 <flatcc_builder_create_cached_vtable@@Base+0x3b2>
  4077e0:	jmp    4077e5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  4077e5:	mov    eax,0x20
  4077ea:	mov    ecx,eax
  4077ec:	mov    rdx,QWORD PTR [rbp-0x10]
  4077f0:	mov    rdx,QWORD PTR [rdx+0xa8]
  4077f7:	mov    QWORD PTR [rbp-0x20],rdx
  4077fb:	mov    rdx,QWORD PTR [rbp-0x20]
  4077ff:	mov    eax,DWORD PTR [rbp-0x14]
  407802:	mov    rsi,QWORD PTR [rbp-0x10]
  407806:	sub    rcx,QWORD PTR [rsi+0xd8]
  40780d:	mov    edi,ecx
  40780f:	mov    ecx,edi
  407811:	shr    eax,cl
  407813:	mov    eax,eax
  407815:	mov    esi,eax
  407817:	shl    rsi,0x2
  40781b:	add    rdx,rsi
  40781e:	mov    QWORD PTR [rbp-0x8],rdx
  407822:	mov    rax,QWORD PTR [rbp-0x8]
  407826:	add    rsp,0x20
  40782a:	pop    rbp
  40782b:	ret    
  40782c:	nop    DWORD PTR [rax+0x0]

0000000000407830 <flatcc_builder_create_table@@Base>:
  407830:	push   rbp
  407831:	mov    rbp,rsp
  407834:	sub    rsp,0xf0
  40783b:	mov    ax,cx
  40783e:	mov    ecx,DWORD PTR [rbp+0x10]
  407841:	mov    QWORD PTR [rbp-0x10],rdi
  407845:	mov    QWORD PTR [rbp-0x18],rsi
  407849:	mov    QWORD PTR [rbp-0x20],rdx
  40784d:	mov    WORD PTR [rbp-0x22],ax
  407851:	mov    QWORD PTR [rbp-0x30],r8
  407855:	mov    DWORD PTR [rbp-0x34],r9d
  407859:	cmp    DWORD PTR [rbp-0x34],0x0
  40785d:	mov    DWORD PTR [rbp-0xec],ecx
  407863:	jl     40786e <flatcc_builder_create_table@@Base+0x3e>
  407869:	jmp    40788d <flatcc_builder_create_table@@Base+0x5d>
  40786e:	lea    rdi,[rip+0x5653]        # 40cec8 <flatcc_builder_padding_base@@Base+0x988>
  407875:	lea    rsi,[rip+0x4ed6]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40787c:	mov    edx,0x4d5
  407881:	lea    rcx,[rip+0x5652]        # 40ceda <flatcc_builder_padding_base@@Base+0x99a>
  407888:	call   403070 <__assert_fail@plt>
  40788d:	mov    eax,DWORD PTR [rbp+0x10]
  407890:	and    eax,0x1
  407893:	cmp    eax,0x0
  407896:	je     4078a1 <flatcc_builder_create_table@@Base+0x71>
  40789c:	jmp    4078c0 <flatcc_builder_create_table@@Base+0x90>
  4078a1:	lea    rdi,[rip+0x56ce]        # 40cf76 <flatcc_builder_padding_base@@Base+0xa36>
  4078a8:	lea    rsi,[rip+0x4ea3]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4078af:	mov    edx,0x4db
  4078b4:	lea    rcx,[rip+0x561f]        # 40ceda <flatcc_builder_padding_base@@Base+0x99a>
  4078bb:	call   403070 <__assert_fail@plt>
  4078c0:	lea    rdi,[rbp-0x22]
  4078c4:	mov    esi,0x4
  4078c9:	call   406da0 <flatcc_builder_start_vector@@Base+0xb0>
  4078ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4078d2:	movzx  esi,WORD PTR [rbp-0x22]
  4078d6:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  4078db:	mov    rdi,QWORD PTR [rbp-0x10]
  4078df:	mov    rax,QWORD PTR [rbp-0x20]
  4078e3:	mov    esi,eax
  4078e5:	movzx  edx,WORD PTR [rbp-0x22]
  4078e9:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4078ee:	mov    DWORD PTR [rbp-0x3c],eax
  4078f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4078f5:	mov    eax,DWORD PTR [rdi+0xf0]
  4078fb:	mov    edx,DWORD PTR [rbp-0x3c]
  4078fe:	mov    edi,edx
  407900:	add    rdi,QWORD PTR [rbp-0x20]
  407904:	add    rdi,0x4
  407908:	mov    edx,edi
  40790a:	sub    eax,edx
  40790c:	mov    DWORD PTR [rbp-0x4c],eax
  40790f:	mov    eax,DWORD PTR [rbp+0x10]
  407912:	sub    eax,0x1
  407915:	mov    DWORD PTR [rbp-0x48],eax
  407918:	mov    eax,DWORD PTR [rbp-0x4c]
  40791b:	sub    eax,DWORD PTR [rbp-0x48]
  40791e:	mov    DWORD PTR [rbp-0x40],eax
  407921:	mov    eax,DWORD PTR [rbp-0x4c]
  407924:	sub    eax,DWORD PTR [rbp-0x40]
  407927:	cmp    eax,DWORD PTR [rbp-0x48]
  40792a:	je     40793c <flatcc_builder_create_table@@Base+0x10c>
  407930:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407937:	jmp    407b0f <flatcc_builder_create_table@@Base+0x2df>
  40793c:	mov    edi,DWORD PTR [rbp-0x40]
  40793f:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  407944:	mov    DWORD PTR [rbp-0x44],eax
  407947:	mov    DWORD PTR [rbp-0x38],0x0
  40794e:	mov    eax,DWORD PTR [rbp-0x38]
  407951:	cmp    eax,DWORD PTR [rbp-0x34]
  407954:	jge    4079b3 <flatcc_builder_create_table@@Base+0x183>
  40795a:	mov    rax,QWORD PTR [rbp-0x18]
  40795e:	mov    rcx,QWORD PTR [rbp-0x30]
  407962:	movsxd rdx,DWORD PTR [rbp-0x38]
  407966:	movzx  esi,WORD PTR [rcx+rdx*2]
  40796a:	mov    ecx,esi
  40796c:	add    rax,rcx
  40796f:	mov    QWORD PTR [rbp-0x58],rax
  407973:	mov    rax,QWORD PTR [rbp-0x58]
  407977:	mov    esi,DWORD PTR [rax]
  407979:	sub    esi,DWORD PTR [rbp-0x4c]
  40797c:	mov    rax,QWORD PTR [rbp-0x30]
  407980:	movsxd rcx,DWORD PTR [rbp-0x38]
  407984:	movzx  edi,WORD PTR [rax+rcx*2]
  407988:	sub    esi,edi
  40798a:	mov    esi,esi
  40798c:	mov    eax,esi
  40798e:	sub    rax,0x4
  407992:	mov    esi,eax
  407994:	mov    DWORD PTR [rbp-0x50],esi
  407997:	mov    edi,DWORD PTR [rbp-0x50]
  40799a:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  40799f:	mov    rcx,QWORD PTR [rbp-0x58]
  4079a3:	mov    DWORD PTR [rcx],eax
  4079a5:	mov    eax,DWORD PTR [rbp-0x38]
  4079a8:	add    eax,0x1
  4079ab:	mov    DWORD PTR [rbp-0x38],eax
  4079ae:	jmp    40794e <flatcc_builder_create_table@@Base+0x11e>
  4079b3:	mov    QWORD PTR [rbp-0xe8],0x0
  4079be:	mov    DWORD PTR [rbp-0xe0],0x0
  4079c8:	mov    rax,QWORD PTR [rbp-0xe8]
  4079cf:	add    rax,0x4
  4079d3:	mov    QWORD PTR [rbp-0xe8],rax
  4079da:	lea    rax,[rbp-0x44]
  4079de:	lea    rcx,[rbp-0xe8]
  4079e5:	mov    rdx,rcx
  4079e8:	add    rdx,0x10
  4079ec:	movsxd rsi,DWORD PTR [rbp-0xe0]
  4079f3:	shl    rsi,0x4
  4079f7:	add    rdx,rsi
  4079fa:	mov    QWORD PTR [rdx],rax
  4079fd:	add    rcx,0x10
  407a01:	movsxd rax,DWORD PTR [rbp-0xe0]
  407a08:	shl    rax,0x4
  407a0c:	add    rcx,rax
  407a0f:	mov    QWORD PTR [rcx+0x8],0x4
  407a17:	mov    edi,DWORD PTR [rbp-0xe0]
  407a1d:	add    edi,0x1
  407a20:	mov    DWORD PTR [rbp-0xe0],edi
  407a26:	cmp    QWORD PTR [rbp-0x20],0x0
  407a2b:	jbe    407a8f <flatcc_builder_create_table@@Base+0x25f>
  407a31:	mov    rax,QWORD PTR [rbp-0x20]
  407a35:	add    rax,QWORD PTR [rbp-0xe8]
  407a3c:	mov    QWORD PTR [rbp-0xe8],rax
  407a43:	mov    rax,QWORD PTR [rbp-0x18]
  407a47:	lea    rcx,[rbp-0xe8]
  407a4e:	mov    rdx,rcx
  407a51:	add    rdx,0x10
  407a55:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407a5c:	shl    rsi,0x4
  407a60:	add    rdx,rsi
  407a63:	mov    QWORD PTR [rdx],rax
  407a66:	mov    rax,QWORD PTR [rbp-0x20]
  407a6a:	add    rcx,0x10
  407a6e:	movsxd rdx,DWORD PTR [rbp-0xe0]
  407a75:	shl    rdx,0x4
  407a79:	add    rcx,rdx
  407a7c:	mov    QWORD PTR [rcx+0x8],rax
  407a80:	mov    edi,DWORD PTR [rbp-0xe0]
  407a86:	add    edi,0x1
  407a89:	mov    DWORD PTR [rbp-0xe0],edi
  407a8f:	cmp    DWORD PTR [rbp-0x3c],0x0
  407a93:	jbe    407afc <flatcc_builder_create_table@@Base+0x2cc>
  407a99:	lea    rax,[rip+0x4aa0]        # 40c540 <flatcc_builder_padding_base@@Base>
  407aa0:	mov    ecx,DWORD PTR [rbp-0x3c]
  407aa3:	mov    edx,ecx
  407aa5:	add    rdx,QWORD PTR [rbp-0xe8]
  407aac:	mov    QWORD PTR [rbp-0xe8],rdx
  407ab3:	lea    rdx,[rbp-0xe8]
  407aba:	mov    rsi,rdx
  407abd:	add    rsi,0x10
  407ac1:	movsxd rdi,DWORD PTR [rbp-0xe0]
  407ac8:	shl    rdi,0x4
  407acc:	add    rsi,rdi
  407acf:	mov    QWORD PTR [rsi],rax
  407ad2:	mov    ecx,DWORD PTR [rbp-0x3c]
  407ad5:	mov    eax,ecx
  407ad7:	add    rdx,0x10
  407adb:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407ae2:	shl    rsi,0x4
  407ae6:	add    rdx,rsi
  407ae9:	mov    QWORD PTR [rdx+0x8],rax
  407aed:	mov    ecx,DWORD PTR [rbp-0xe0]
  407af3:	add    ecx,0x1
  407af6:	mov    DWORD PTR [rbp-0xe0],ecx
  407afc:	mov    rdi,QWORD PTR [rbp-0x10]
  407b00:	lea    rsi,[rbp-0xe8]
  407b07:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  407b0c:	mov    DWORD PTR [rbp-0x4],eax
  407b0f:	mov    eax,DWORD PTR [rbp-0x4]
  407b12:	add    rsp,0xf0
  407b19:	pop    rbp
  407b1a:	ret    
  407b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407b20 <flatcc_builder_check_required_field@@Base>:
  407b20:	push   rbp
  407b21:	mov    rbp,rsp
  407b24:	sub    rsp,0x10
  407b28:	mov    ax,si
  407b2b:	mov    QWORD PTR [rbp-0x8],rdi
  407b2f:	mov    WORD PTR [rbp-0xa],ax
  407b33:	mov    rdi,QWORD PTR [rbp-0x8]
  407b37:	mov    rdi,QWORD PTR [rdi+0x30]
  407b3b:	movzx  esi,WORD PTR [rdi+0xe]
  407b3f:	cmp    esi,0x3
  407b42:	jne    407b4d <flatcc_builder_check_required_field@@Base+0x2d>
  407b48:	jmp    407b6c <flatcc_builder_check_required_field@@Base+0x4c>
  407b4d:	lea    rdi,[rip+0x542d]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  407b54:	lea    rsi,[rip+0x4bf7]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  407b5b:	mov    edx,0x4f8
  407b60:	lea    rcx,[rip+0x5445]        # 40cfac <flatcc_builder_padding_base@@Base+0xa6c>
  407b67:	call   403070 <__assert_fail@plt>
  407b6c:	xor    eax,eax
  407b6e:	mov    cl,al
  407b70:	movzx  eax,WORD PTR [rbp-0xa]
  407b74:	mov    rdx,QWORD PTR [rbp-0x8]
  407b78:	movzx  esi,WORD PTR [rdx+0x10]
  407b7c:	cmp    eax,esi
  407b7e:	mov    BYTE PTR [rbp-0xb],cl
  407b81:	jge    407ba4 <flatcc_builder_check_required_field@@Base+0x84>
  407b87:	mov    rax,QWORD PTR [rbp-0x8]
  407b8b:	mov    rax,QWORD PTR [rax+0x8]
  407b8f:	movzx  ecx,WORD PTR [rbp-0xa]
  407b93:	mov    edx,ecx
  407b95:	movzx  ecx,WORD PTR [rax+rdx*2]
  407b99:	cmp    ecx,0x0
  407b9c:	setne  sil
  407ba0:	mov    BYTE PTR [rbp-0xb],sil
  407ba4:	mov    al,BYTE PTR [rbp-0xb]
  407ba7:	and    al,0x1
  407ba9:	movzx  eax,al
  407bac:	add    rsp,0x10
  407bb0:	pop    rbp
  407bb1:	ret    
  407bb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bbc:	nop    DWORD PTR [rax+0x0]

0000000000407bc0 <flatcc_builder_check_union_field@@Base>:
  407bc0:	push   rbp
  407bc1:	mov    rbp,rsp
  407bc4:	sub    rsp,0x20
  407bc8:	mov    ax,si
  407bcb:	mov    QWORD PTR [rbp-0x10],rdi
  407bcf:	mov    WORD PTR [rbp-0x12],ax
  407bd3:	mov    rdi,QWORD PTR [rbp-0x10]
  407bd7:	mov    rdi,QWORD PTR [rdi+0x30]
  407bdb:	movzx  esi,WORD PTR [rdi+0xe]
  407bdf:	cmp    esi,0x3
  407be2:	jne    407bed <flatcc_builder_check_union_field@@Base+0x2d>
  407be8:	jmp    407c0c <flatcc_builder_check_union_field@@Base+0x4c>
  407bed:	lea    rdi,[rip+0x538d]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  407bf4:	lea    rsi,[rip+0x4b57]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  407bfb:	mov    edx,0x4ff
  407c00:	lea    rcx,[rip+0x53f8]        # 40cfff <flatcc_builder_padding_base@@Base+0xabf>
  407c07:	call   403070 <__assert_fail@plt>
  407c0c:	movzx  eax,WORD PTR [rbp-0x12]
  407c10:	cmp    eax,0x0
  407c13:	je     407c2d <flatcc_builder_check_union_field@@Base+0x6d>
  407c19:	movzx  eax,WORD PTR [rbp-0x12]
  407c1d:	mov    rcx,QWORD PTR [rbp-0x10]
  407c21:	movzx  edx,WORD PTR [rcx+0x10]
  407c25:	cmp    eax,edx
  407c27:	jl     407c39 <flatcc_builder_check_union_field@@Base+0x79>
  407c2d:	mov    DWORD PTR [rbp-0x4],0x0
  407c34:	jmp    407cf9 <flatcc_builder_check_union_field@@Base+0x139>
  407c39:	mov    rax,QWORD PTR [rbp-0x10]
  407c3d:	mov    rax,QWORD PTR [rax+0x8]
  407c41:	movzx  ecx,WORD PTR [rbp-0x12]
  407c45:	sub    ecx,0x1
  407c48:	movsxd rdx,ecx
  407c4b:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c4f:	cmp    ecx,0x0
  407c52:	jne    407c81 <flatcc_builder_check_union_field@@Base+0xc1>
  407c58:	mov    rax,QWORD PTR [rbp-0x10]
  407c5c:	mov    rax,QWORD PTR [rax+0x8]
  407c60:	movzx  ecx,WORD PTR [rbp-0x12]
  407c64:	mov    edx,ecx
  407c66:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c6a:	cmp    ecx,0x0
  407c6d:	sete   sil
  407c71:	and    sil,0x1
  407c75:	movzx  ecx,sil
  407c79:	mov    DWORD PTR [rbp-0x4],ecx
  407c7c:	jmp    407cf9 <flatcc_builder_check_union_field@@Base+0x139>
  407c81:	mov    rax,QWORD PTR [rbp-0x10]
  407c85:	mov    rax,QWORD PTR [rax+0x18]
  407c89:	mov    rcx,QWORD PTR [rbp-0x10]
  407c8d:	mov    rcx,QWORD PTR [rcx+0x8]
  407c91:	movzx  edx,WORD PTR [rbp-0x12]
  407c95:	sub    edx,0x1
  407c98:	movsxd rsi,edx
  407c9b:	movzx  edx,WORD PTR [rcx+rsi*2]
  407c9f:	movsxd rcx,edx
  407ca2:	cmp    BYTE PTR [rax+rcx*1],0x0
  407ca6:	je     407cd5 <flatcc_builder_check_union_field@@Base+0x115>
  407cac:	mov    rax,QWORD PTR [rbp-0x10]
  407cb0:	mov    rax,QWORD PTR [rax+0x8]
  407cb4:	movzx  ecx,WORD PTR [rbp-0x12]
  407cb8:	mov    edx,ecx
  407cba:	movzx  ecx,WORD PTR [rax+rdx*2]
  407cbe:	cmp    ecx,0x0
  407cc1:	setne  sil
  407cc5:	and    sil,0x1
  407cc9:	movzx  ecx,sil
  407ccd:	mov    DWORD PTR [rbp-0x4],ecx
  407cd0:	jmp    407cf9 <flatcc_builder_check_union_field@@Base+0x139>
  407cd5:	mov    rax,QWORD PTR [rbp-0x10]
  407cd9:	mov    rax,QWORD PTR [rax+0x8]
  407cdd:	movzx  ecx,WORD PTR [rbp-0x12]
  407ce1:	mov    edx,ecx
  407ce3:	movzx  ecx,WORD PTR [rax+rdx*2]
  407ce7:	cmp    ecx,0x0
  407cea:	sete   sil
  407cee:	and    sil,0x1
  407cf2:	movzx  ecx,sil
  407cf6:	mov    DWORD PTR [rbp-0x4],ecx
  407cf9:	mov    eax,DWORD PTR [rbp-0x4]
  407cfc:	add    rsp,0x20
  407d00:	pop    rbp
  407d01:	ret    
  407d02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d0c:	nop    DWORD PTR [rax+0x0]

0000000000407d10 <flatcc_builder_check_required@@Base>:
  407d10:	push   rbp
  407d11:	mov    rbp,rsp
  407d14:	sub    rsp,0x20
  407d18:	mov    QWORD PTR [rbp-0x10],rdi
  407d1c:	mov    QWORD PTR [rbp-0x18],rsi
  407d20:	mov    DWORD PTR [rbp-0x1c],edx
  407d23:	mov    rsi,QWORD PTR [rbp-0x10]
  407d27:	mov    rsi,QWORD PTR [rsi+0x30]
  407d2b:	movzx  edx,WORD PTR [rsi+0xe]
  407d2f:	cmp    edx,0x3
  407d32:	jne    407d3d <flatcc_builder_check_required@@Base+0x2d>
  407d38:	jmp    407d5c <flatcc_builder_check_required@@Base+0x4c>
  407d3d:	lea    rdi,[rip+0x523d]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  407d44:	lea    rsi,[rip+0x4a07]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  407d4b:	mov    edx,0x511
  407d50:	lea    rcx,[rip+0x52f8]        # 40d04f <flatcc_builder_padding_base@@Base+0xb0f>
  407d57:	call   403070 <__assert_fail@plt>
  407d5c:	mov    rax,QWORD PTR [rbp-0x10]
  407d60:	movzx  ecx,WORD PTR [rax+0x10]
  407d64:	cmp    ecx,DWORD PTR [rbp-0x1c]
  407d67:	jge    407d79 <flatcc_builder_check_required@@Base+0x69>
  407d6d:	mov    DWORD PTR [rbp-0x4],0x0
  407d74:	jmp    407dd5 <flatcc_builder_check_required@@Base+0xc5>
  407d79:	mov    DWORD PTR [rbp-0x20],0x0
  407d80:	mov    eax,DWORD PTR [rbp-0x20]
  407d83:	cmp    eax,DWORD PTR [rbp-0x1c]
  407d86:	jge    407dce <flatcc_builder_check_required@@Base+0xbe>
  407d8c:	mov    rax,QWORD PTR [rbp-0x10]
  407d90:	mov    rax,QWORD PTR [rax+0x8]
  407d94:	mov    rcx,QWORD PTR [rbp-0x18]
  407d98:	movsxd rdx,DWORD PTR [rbp-0x20]
  407d9c:	movzx  esi,WORD PTR [rcx+rdx*2]
  407da0:	mov    ecx,esi
  407da2:	movzx  esi,WORD PTR [rax+rcx*2]
  407da6:	cmp    esi,0x0
  407da9:	jne    407dbb <flatcc_builder_check_required@@Base+0xab>
  407daf:	mov    DWORD PTR [rbp-0x4],0x0
  407db6:	jmp    407dd5 <flatcc_builder_check_required@@Base+0xc5>
  407dbb:	jmp    407dc0 <flatcc_builder_check_required@@Base+0xb0>
  407dc0:	mov    eax,DWORD PTR [rbp-0x20]
  407dc3:	add    eax,0x1
  407dc6:	mov    DWORD PTR [rbp-0x20],eax
  407dc9:	jmp    407d80 <flatcc_builder_check_required@@Base+0x70>
  407dce:	mov    DWORD PTR [rbp-0x4],0x1
  407dd5:	mov    eax,DWORD PTR [rbp-0x4]
  407dd8:	add    rsp,0x20
  407ddc:	pop    rbp
  407ddd:	ret    
  407dde:	xchg   ax,ax

0000000000407de0 <flatcc_builder_end_table@@Base>:
  407de0:	push   rbp
  407de1:	mov    rbp,rsp
  407de4:	sub    rsp,0x40
  407de8:	mov    QWORD PTR [rbp-0x10],rdi
  407dec:	mov    rdi,QWORD PTR [rbp-0x10]
  407df0:	mov    rdi,QWORD PTR [rdi+0x30]
  407df4:	movzx  eax,WORD PTR [rdi+0xe]
  407df8:	cmp    eax,0x3
  407dfb:	jne    407e06 <flatcc_builder_end_table@@Base+0x26>
  407e01:	jmp    407e25 <flatcc_builder_end_table@@Base+0x45>
  407e06:	lea    rdi,[rip+0x5174]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  407e0d:	lea    rsi,[rip+0x493e]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  407e14:	mov    edx,0x525
  407e19:	lea    rcx,[rip+0x5289]        # 40d0a9 <flatcc_builder_padding_base@@Base+0xb69>
  407e20:	call   403070 <__assert_fail@plt>
  407e25:	mov    rax,QWORD PTR [rbp-0x10]
  407e29:	mov    rax,QWORD PTR [rax+0x8]
  407e2d:	add    rax,0xfffffffffffffffc
  407e31:	mov    QWORD PTR [rbp-0x18],rax
  407e35:	mov    rax,QWORD PTR [rbp-0x10]
  407e39:	movzx  ecx,WORD PTR [rax+0x10]
  407e3d:	add    ecx,0x2
  407e40:	movsxd rax,ecx
  407e43:	shl    rax,0x1
  407e47:	mov    dx,ax
  407e4a:	mov    WORD PTR [rbp-0x1a],dx
  407e4e:	mov    dx,WORD PTR [rbp-0x1a]
  407e52:	mov    rax,QWORD PTR [rbp-0x18]
  407e56:	mov    WORD PTR [rax],dx
  407e59:	mov    rax,QWORD PTR [rbp-0x10]
  407e5d:	mov    ecx,DWORD PTR [rax+0x20]
  407e60:	mov    dx,cx
  407e63:	movzx  ecx,dx
  407e66:	mov    eax,ecx
  407e68:	add    rax,0x4
  407e6c:	mov    dx,ax
  407e6f:	mov    rax,QWORD PTR [rbp-0x18]
  407e73:	mov    WORD PTR [rax+0x2],dx
  407e77:	mov    rax,QWORD PTR [rbp-0x18]
  407e7b:	movzx  ecx,WORD PTR [rax]
  407e7e:	mov    rax,QWORD PTR [rbp-0x10]
  407e82:	xor    ecx,DWORD PTR [rax+0x14]
  407e85:	imul   ecx,ecx,0x9e3779b1
  407e8b:	mov    rax,QWORD PTR [rbp-0x18]
  407e8f:	movzx  esi,WORD PTR [rax+0x2]
  407e93:	xor    ecx,esi
  407e95:	imul   ecx,ecx,0x9e3779b1
  407e9b:	mov    rax,QWORD PTR [rbp-0x10]
  407e9f:	mov    DWORD PTR [rax+0x14],ecx
  407ea2:	mov    rdi,QWORD PTR [rbp-0x10]
  407ea6:	mov    rsi,QWORD PTR [rbp-0x18]
  407eaa:	mov    dx,WORD PTR [rbp-0x1a]
  407eae:	mov    rax,QWORD PTR [rbp-0x10]
  407eb2:	mov    ecx,DWORD PTR [rax+0x14]
  407eb5:	movzx  edx,dx
  407eb8:	call   407470 <flatcc_builder_create_cached_vtable@@Base>
  407ebd:	mov    DWORD PTR [rbp-0x24],eax
  407ec0:	cmp    eax,0x0
  407ec3:	jne    407ed5 <flatcc_builder_end_table@@Base+0xf5>
  407ec9:	mov    DWORD PTR [rbp-0x4],0x0
  407ed0:	jmp    407ff5 <flatcc_builder_end_table@@Base+0x215>
  407ed5:	xor    esi,esi
  407ed7:	mov    rax,QWORD PTR [rbp-0x18]
  407edb:	movzx  ecx,WORD PTR [rbp-0x1a]
  407edf:	mov    edx,ecx
  407ee1:	mov    rdi,rax
  407ee4:	call   403080 <memset@plt>
  407ee9:	mov    rax,QWORD PTR [rbp-0x10]
  407eed:	mov    rax,QWORD PTR [rax+0x88]
  407ef4:	mov    rdx,QWORD PTR [rbp-0x10]
  407ef8:	mov    rdx,QWORD PTR [rdx+0x30]
  407efc:	mov    ecx,DWORD PTR [rdx+0x14]
  407eff:	mov    edx,ecx
  407f01:	add    rax,rdx
  407f04:	mov    QWORD PTR [rbp-0x30],rax
  407f08:	mov    rax,QWORD PTR [rbp-0x10]
  407f0c:	mov    rax,QWORD PTR [rax]
  407f0f:	mov    rdx,QWORD PTR [rbp-0x30]
  407f13:	sub    rax,rdx
  407f16:	sar    rax,0x1
  407f1a:	mov    ecx,eax
  407f1c:	mov    DWORD PTR [rbp-0x28],ecx
  407f1f:	mov    rdi,QWORD PTR [rbp-0x10]
  407f23:	mov    rax,QWORD PTR [rbp-0x10]
  407f27:	mov    rsi,QWORD PTR [rax+0x18]
  407f2b:	mov    rax,QWORD PTR [rbp-0x10]
  407f2f:	mov    ecx,DWORD PTR [rax+0x20]
  407f32:	mov    edx,ecx
  407f34:	mov    rax,QWORD PTR [rbp-0x10]
  407f38:	mov    r8w,WORD PTR [rax+0xea]
  407f40:	mov    rax,QWORD PTR [rbp-0x30]
  407f44:	mov    r9d,DWORD PTR [rbp-0x28]
  407f48:	mov    ecx,DWORD PTR [rbp-0x24]
  407f4b:	movzx  r10d,r8w
  407f4f:	mov    DWORD PTR [rbp-0x34],ecx
  407f52:	mov    ecx,r10d
  407f55:	mov    r8,rax
  407f58:	mov    r10d,DWORD PTR [rbp-0x34]
  407f5c:	mov    DWORD PTR [rsp],r10d
  407f60:	call   407830 <flatcc_builder_create_table@@Base>
  407f65:	xor    ecx,ecx
  407f67:	mov    DWORD PTR [rbp-0x20],eax
  407f6a:	cmp    ecx,eax
  407f6c:	jne    407f7e <flatcc_builder_end_table@@Base+0x19e>
  407f72:	mov    DWORD PTR [rbp-0x4],0x0
  407f79:	jmp    407ff5 <flatcc_builder_end_table@@Base+0x215>
  407f7e:	mov    rax,QWORD PTR [rbp-0x10]
  407f82:	mov    rax,QWORD PTR [rax+0x30]
  407f86:	mov    ecx,DWORD PTR [rax+0x18]
  407f89:	mov    rax,QWORD PTR [rbp-0x10]
  407f8d:	mov    DWORD PTR [rax+0x14],ecx
  407f90:	mov    rax,QWORD PTR [rbp-0x10]
  407f94:	mov    rax,QWORD PTR [rax+0x30]
  407f98:	mov    dx,WORD PTR [rax+0x1c]
  407f9c:	mov    rax,QWORD PTR [rbp-0x10]
  407fa0:	mov    WORD PTR [rax+0x10],dx
  407fa4:	mov    rax,QWORD PTR [rbp-0x10]
  407fa8:	mov    rax,QWORD PTR [rax+0x58]
  407fac:	mov    rsi,QWORD PTR [rbp-0x10]
  407fb0:	mov    rsi,QWORD PTR [rsi+0x30]
  407fb4:	mov    ecx,DWORD PTR [rsi+0x10]
  407fb7:	mov    esi,ecx
  407fb9:	add    rax,rsi
  407fbc:	mov    rsi,QWORD PTR [rbp-0x10]
  407fc0:	mov    QWORD PTR [rsi+0x8],rax
  407fc4:	mov    rax,QWORD PTR [rbp-0x10]
  407fc8:	mov    rax,QWORD PTR [rax+0x88]
  407fcf:	mov    rsi,QWORD PTR [rbp-0x10]
  407fd3:	mov    rsi,QWORD PTR [rsi+0x30]
  407fd7:	mov    ecx,DWORD PTR [rsi+0x14]
  407fda:	mov    esi,ecx
  407fdc:	add    rax,rsi
  407fdf:	mov    rsi,QWORD PTR [rbp-0x10]
  407fe3:	mov    QWORD PTR [rsi],rax
  407fe6:	mov    rdi,QWORD PTR [rbp-0x10]
  407fea:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  407fef:	mov    ecx,DWORD PTR [rbp-0x20]
  407ff2:	mov    DWORD PTR [rbp-0x4],ecx
  407ff5:	mov    eax,DWORD PTR [rbp-0x4]
  407ff8:	add    rsp,0x40
  407ffc:	pop    rbp
  407ffd:	ret    
  407ffe:	xchg   ax,ax

0000000000408000 <flatcc_builder_create_vector@@Base>:
  408000:	push   rbp
  408001:	mov    rbp,rsp
  408004:	sub    rsp,0xe0
  40800b:	mov    ax,r8w
  40800f:	mov    QWORD PTR [rbp-0x10],rdi
  408013:	mov    QWORD PTR [rbp-0x18],rsi
  408017:	mov    QWORD PTR [rbp-0x20],rdx
  40801b:	mov    QWORD PTR [rbp-0x28],rcx
  40801f:	mov    WORD PTR [rbp-0x2a],ax
  408023:	mov    QWORD PTR [rbp-0x38],r9
  408027:	mov    rcx,QWORD PTR [rbp-0x20]
  40802b:	cmp    rcx,QWORD PTR [rbp-0x38]
  40802f:	jbe    408073 <flatcc_builder_create_vector@@Base+0x73>
  408035:	mov    rax,QWORD PTR [rbp-0x20]
  408039:	cmp    rax,QWORD PTR [rbp-0x38]
  40803d:	ja     408048 <flatcc_builder_create_vector@@Base+0x48>
  408043:	jmp    408067 <flatcc_builder_create_vector@@Base+0x67>
  408048:	lea    rdi,[rip+0x509c]        # 40d0eb <flatcc_builder_padding_base@@Base+0xbab>
  40804f:	lea    rsi,[rip+0x46fc]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408056:	mov    edx,0x555
  40805b:	lea    rcx,[rip+0x509c]        # 40d0fe <flatcc_builder_padding_base@@Base+0xbbe>
  408062:	call   403070 <__assert_fail@plt>
  408067:	mov    DWORD PTR [rbp-0x4],0x0
  40806e:	jmp    408220 <flatcc_builder_create_vector@@Base+0x220>
  408073:	lea    rdi,[rbp-0x2a]
  408077:	mov    esi,0x4
  40807c:	call   406da0 <flatcc_builder_start_vector@@Base+0xb0>
  408081:	mov    rdi,QWORD PTR [rbp-0x10]
  408085:	movzx  esi,WORD PTR [rbp-0x2a]
  408089:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  40808e:	mov    rdi,QWORD PTR [rbp-0x20]
  408092:	mov    esi,edi
  408094:	mov    rdi,QWORD PTR [rbp-0x28]
  408098:	mov    eax,edi
  40809a:	imul   esi,eax
  40809d:	mov    DWORD PTR [rbp-0x3c],esi
  4080a0:	mov    rdi,QWORD PTR [rbp-0x20]
  4080a4:	mov    eax,edi
  4080a6:	mov    edi,eax
  4080a8:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  4080ad:	mov    DWORD PTR [rbp-0x44],eax
  4080b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4080b4:	mov    esi,DWORD PTR [rbp-0x3c]
  4080b7:	movzx  edx,WORD PTR [rbp-0x2a]
  4080bb:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4080c0:	mov    DWORD PTR [rbp-0x40],eax
  4080c3:	mov    QWORD PTR [rbp-0xd8],0x0
  4080ce:	mov    DWORD PTR [rbp-0xd0],0x0
  4080d8:	mov    rdi,QWORD PTR [rbp-0xd8]
  4080df:	add    rdi,0x4
  4080e3:	mov    QWORD PTR [rbp-0xd8],rdi
  4080ea:	lea    rdi,[rbp-0x44]
  4080ee:	lea    rcx,[rbp-0xd8]
  4080f5:	mov    r8,rcx
  4080f8:	add    r8,0x10
  4080fc:	movsxd r9,DWORD PTR [rbp-0xd0]
  408103:	shl    r9,0x4
  408107:	add    r8,r9
  40810a:	mov    QWORD PTR [r8],rdi
  40810d:	add    rcx,0x10
  408111:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408118:	shl    rdi,0x4
  40811c:	add    rcx,rdi
  40811f:	mov    QWORD PTR [rcx+0x8],0x4
  408127:	mov    eax,DWORD PTR [rbp-0xd0]
  40812d:	add    eax,0x1
  408130:	mov    DWORD PTR [rbp-0xd0],eax
  408136:	cmp    DWORD PTR [rbp-0x3c],0x0
  40813a:	jbe    4081a0 <flatcc_builder_create_vector@@Base+0x1a0>
  408140:	mov    eax,DWORD PTR [rbp-0x3c]
  408143:	mov    ecx,eax
  408145:	add    rcx,QWORD PTR [rbp-0xd8]
  40814c:	mov    QWORD PTR [rbp-0xd8],rcx
  408153:	mov    rcx,QWORD PTR [rbp-0x18]
  408157:	lea    rdx,[rbp-0xd8]
  40815e:	mov    rsi,rdx
  408161:	add    rsi,0x10
  408165:	movsxd rdi,DWORD PTR [rbp-0xd0]
  40816c:	shl    rdi,0x4
  408170:	add    rsi,rdi
  408173:	mov    QWORD PTR [rsi],rcx
  408176:	mov    eax,DWORD PTR [rbp-0x3c]
  408179:	mov    ecx,eax
  40817b:	add    rdx,0x10
  40817f:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408186:	shl    rsi,0x4
  40818a:	add    rdx,rsi
  40818d:	mov    QWORD PTR [rdx+0x8],rcx
  408191:	mov    eax,DWORD PTR [rbp-0xd0]
  408197:	add    eax,0x1
  40819a:	mov    DWORD PTR [rbp-0xd0],eax
  4081a0:	cmp    DWORD PTR [rbp-0x40],0x0
  4081a4:	jbe    40820d <flatcc_builder_create_vector@@Base+0x20d>
  4081aa:	lea    rax,[rip+0x438f]        # 40c540 <flatcc_builder_padding_base@@Base>
  4081b1:	mov    ecx,DWORD PTR [rbp-0x40]
  4081b4:	mov    edx,ecx
  4081b6:	add    rdx,QWORD PTR [rbp-0xd8]
  4081bd:	mov    QWORD PTR [rbp-0xd8],rdx
  4081c4:	lea    rdx,[rbp-0xd8]
  4081cb:	mov    rsi,rdx
  4081ce:	add    rsi,0x10
  4081d2:	movsxd rdi,DWORD PTR [rbp-0xd0]
  4081d9:	shl    rdi,0x4
  4081dd:	add    rsi,rdi
  4081e0:	mov    QWORD PTR [rsi],rax
  4081e3:	mov    ecx,DWORD PTR [rbp-0x40]
  4081e6:	mov    eax,ecx
  4081e8:	add    rdx,0x10
  4081ec:	movsxd rsi,DWORD PTR [rbp-0xd0]
  4081f3:	shl    rsi,0x4
  4081f7:	add    rdx,rsi
  4081fa:	mov    QWORD PTR [rdx+0x8],rax
  4081fe:	mov    ecx,DWORD PTR [rbp-0xd0]
  408204:	add    ecx,0x1
  408207:	mov    DWORD PTR [rbp-0xd0],ecx
  40820d:	mov    rdi,QWORD PTR [rbp-0x10]
  408211:	lea    rsi,[rbp-0xd8]
  408218:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  40821d:	mov    DWORD PTR [rbp-0x4],eax
  408220:	mov    eax,DWORD PTR [rbp-0x4]
  408223:	add    rsp,0xe0
  40822a:	pop    rbp
  40822b:	ret    
  40822c:	nop    DWORD PTR [rax+0x0]

0000000000408230 <flatcc_builder_end_vector@@Base>:
  408230:	push   rbp
  408231:	mov    rbp,rsp
  408234:	sub    rsp,0x20
  408238:	mov    QWORD PTR [rbp-0x10],rdi
  40823c:	mov    rdi,QWORD PTR [rbp-0x10]
  408240:	mov    rdi,QWORD PTR [rdi+0x30]
  408244:	movzx  eax,WORD PTR [rdi+0xe]
  408248:	cmp    eax,0x4
  40824b:	jne    408256 <flatcc_builder_end_vector@@Base+0x26>
  408251:	jmp    408275 <flatcc_builder_end_vector@@Base+0x45>
  408256:	lea    rdi,[rip+0x4832]        # 40ca8f <flatcc_builder_padding_base@@Base+0x54f>
  40825d:	lea    rsi,[rip+0x44ee]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408264:	mov    edx,0x578
  408269:	lea    rcx,[rip+0x4f04]        # 40d174 <flatcc_builder_padding_base@@Base+0xc34>
  408270:	call   403070 <__assert_fail@plt>
  408275:	mov    rdi,QWORD PTR [rbp-0x10]
  408279:	mov    rax,QWORD PTR [rbp-0x10]
  40827d:	mov    rsi,QWORD PTR [rax+0x18]
  408281:	mov    rax,QWORD PTR [rbp-0x10]
  408285:	mov    rax,QWORD PTR [rax+0x30]
  408289:	mov    ecx,DWORD PTR [rax+0x14]
  40828c:	mov    edx,ecx
  40828e:	mov    rax,QWORD PTR [rbp-0x10]
  408292:	mov    rax,QWORD PTR [rax+0x30]
  408296:	mov    ecx,DWORD PTR [rax+0x10]
  408299:	mov    rax,QWORD PTR [rbp-0x10]
  40829d:	mov    r8w,WORD PTR [rax+0xea]
  4082a5:	mov    rax,QWORD PTR [rbp-0x10]
  4082a9:	mov    rax,QWORD PTR [rax+0x30]
  4082ad:	mov    r9d,DWORD PTR [rax+0x18]
  4082b1:	movzx  r8d,r8w
  4082b5:	call   408000 <flatcc_builder_create_vector@@Base>
  4082ba:	xor    r8d,r8d
  4082bd:	mov    DWORD PTR [rbp-0x14],eax
  4082c0:	cmp    r8d,eax
  4082c3:	jne    4082d5 <flatcc_builder_end_vector@@Base+0xa5>
  4082c9:	mov    DWORD PTR [rbp-0x4],0x0
  4082d0:	jmp    4082e4 <flatcc_builder_end_vector@@Base+0xb4>
  4082d5:	mov    rdi,QWORD PTR [rbp-0x10]
  4082d9:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  4082de:	mov    eax,DWORD PTR [rbp-0x14]
  4082e1:	mov    DWORD PTR [rbp-0x4],eax
  4082e4:	mov    eax,DWORD PTR [rbp-0x4]
  4082e7:	add    rsp,0x20
  4082eb:	pop    rbp
  4082ec:	ret    
  4082ed:	nop    DWORD PTR [rax]

00000000004082f0 <flatcc_builder_vector_count@@Base>:
  4082f0:	push   rbp
  4082f1:	mov    rbp,rsp
  4082f4:	mov    QWORD PTR [rbp-0x8],rdi
  4082f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4082fc:	mov    rdi,QWORD PTR [rdi+0x30]
  408300:	mov    eax,DWORD PTR [rdi+0x14]
  408303:	pop    rbp
  408304:	ret    
  408305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40830f:	nop

0000000000408310 <flatcc_builder_vector_edit@@Base>:
  408310:	push   rbp
  408311:	mov    rbp,rsp
  408314:	mov    QWORD PTR [rbp-0x8],rdi
  408318:	mov    rdi,QWORD PTR [rbp-0x8]
  40831c:	mov    rax,QWORD PTR [rdi+0x18]
  408320:	pop    rbp
  408321:	ret    
  408322:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40832c:	nop    DWORD PTR [rax+0x0]

0000000000408330 <flatcc_builder_create_offset_vector_direct@@Base>:
  408330:	push   rbp
  408331:	mov    rbp,rsp
  408334:	sub    rsp,0x20
  408338:	xor    eax,eax
  40833a:	mov    ecx,eax
  40833c:	mov    QWORD PTR [rbp-0x8],rdi
  408340:	mov    QWORD PTR [rbp-0x10],rsi
  408344:	mov    QWORD PTR [rbp-0x18],rdx
  408348:	mov    rdi,QWORD PTR [rbp-0x8]
  40834c:	mov    rsi,QWORD PTR [rbp-0x10]
  408350:	mov    rdx,QWORD PTR [rbp-0x18]
  408354:	call   408360 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408359:	add    rsp,0x20
  40835d:	pop    rbp
  40835e:	ret    
  40835f:	nop
  408360:	push   rbp
  408361:	mov    rbp,rsp
  408364:	sub    rsp,0xd0
  40836b:	mov    QWORD PTR [rbp-0x10],rdi
  40836f:	mov    QWORD PTR [rbp-0x18],rsi
  408373:	mov    QWORD PTR [rbp-0x20],rdx
  408377:	mov    QWORD PTR [rbp-0x28],rcx
  40837b:	mov    rcx,QWORD PTR [rbp-0x20]
  40837f:	mov    eax,ecx
  408381:	mov    eax,eax
  408383:	mov    ecx,eax
  408385:	cmp    rcx,0x3fffffff
  40838c:	jbe    40839e <flatcc_builder_create_offset_vector_direct@@Base+0x6e>
  408392:	mov    DWORD PTR [rbp-0x4],0x0
  408399:	jmp    40868f <flatcc_builder_create_offset_vector_direct@@Base+0x35f>
  40839e:	mov    rdi,QWORD PTR [rbp-0x10]
  4083a2:	mov    esi,0x4
  4083a7:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  4083ac:	mov    rdi,QWORD PTR [rbp-0x20]
  4083b0:	mov    esi,edi
  4083b2:	mov    esi,esi
  4083b4:	mov    edi,esi
  4083b6:	shl    rdi,0x2
  4083ba:	mov    esi,edi
  4083bc:	mov    DWORD PTR [rbp-0x2c],esi
  4083bf:	mov    rdi,QWORD PTR [rbp-0x20]
  4083c3:	mov    esi,edi
  4083c5:	mov    edi,esi
  4083c7:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  4083cc:	mov    DWORD PTR [rbp-0x34],eax
  4083cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4083d3:	mov    esi,DWORD PTR [rbp-0x2c]
  4083d6:	mov    edx,0x4
  4083db:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4083e0:	mov    DWORD PTR [rbp-0x30],eax
  4083e3:	mov    QWORD PTR [rbp-0xd0],0x0
  4083ee:	mov    DWORD PTR [rbp-0xc8],0x0
  4083f8:	mov    rdi,QWORD PTR [rbp-0xd0]
  4083ff:	add    rdi,0x4
  408403:	mov    QWORD PTR [rbp-0xd0],rdi
  40840a:	lea    rdi,[rbp-0x34]
  40840e:	lea    rcx,[rbp-0xd0]
  408415:	mov    r8,rcx
  408418:	add    r8,0x10
  40841c:	movsxd r9,DWORD PTR [rbp-0xc8]
  408423:	shl    r9,0x4
  408427:	add    r8,r9
  40842a:	mov    QWORD PTR [r8],rdi
  40842d:	add    rcx,0x10
  408431:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408438:	shl    rdi,0x4
  40843c:	add    rcx,rdi
  40843f:	mov    QWORD PTR [rcx+0x8],0x4
  408447:	mov    eax,DWORD PTR [rbp-0xc8]
  40844d:	add    eax,0x1
  408450:	mov    DWORD PTR [rbp-0xc8],eax
  408456:	cmp    DWORD PTR [rbp-0x2c],0x0
  40845a:	jbe    4084c0 <flatcc_builder_create_offset_vector_direct@@Base+0x190>
  408460:	mov    eax,DWORD PTR [rbp-0x2c]
  408463:	mov    ecx,eax
  408465:	add    rcx,QWORD PTR [rbp-0xd0]
  40846c:	mov    QWORD PTR [rbp-0xd0],rcx
  408473:	mov    rcx,QWORD PTR [rbp-0x18]
  408477:	lea    rdx,[rbp-0xd0]
  40847e:	mov    rsi,rdx
  408481:	add    rsi,0x10
  408485:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40848c:	shl    rdi,0x4
  408490:	add    rsi,rdi
  408493:	mov    QWORD PTR [rsi],rcx
  408496:	mov    eax,DWORD PTR [rbp-0x2c]
  408499:	mov    ecx,eax
  40849b:	add    rdx,0x10
  40849f:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4084a6:	shl    rsi,0x4
  4084aa:	add    rdx,rsi
  4084ad:	mov    QWORD PTR [rdx+0x8],rcx
  4084b1:	mov    eax,DWORD PTR [rbp-0xc8]
  4084b7:	add    eax,0x1
  4084ba:	mov    DWORD PTR [rbp-0xc8],eax
  4084c0:	cmp    DWORD PTR [rbp-0x30],0x0
  4084c4:	jbe    40852d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  4084ca:	lea    rax,[rip+0x406f]        # 40c540 <flatcc_builder_padding_base@@Base>
  4084d1:	mov    ecx,DWORD PTR [rbp-0x30]
  4084d4:	mov    edx,ecx
  4084d6:	add    rdx,QWORD PTR [rbp-0xd0]
  4084dd:	mov    QWORD PTR [rbp-0xd0],rdx
  4084e4:	lea    rdx,[rbp-0xd0]
  4084eb:	mov    rsi,rdx
  4084ee:	add    rsi,0x10
  4084f2:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4084f9:	shl    rdi,0x4
  4084fd:	add    rsi,rdi
  408500:	mov    QWORD PTR [rsi],rax
  408503:	mov    ecx,DWORD PTR [rbp-0x30]
  408506:	mov    eax,ecx
  408508:	add    rdx,0x10
  40850c:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408513:	shl    rsi,0x4
  408517:	add    rdx,rsi
  40851a:	mov    QWORD PTR [rdx+0x8],rax
  40851e:	mov    ecx,DWORD PTR [rbp-0xc8]
  408524:	add    ecx,0x1
  408527:	mov    DWORD PTR [rbp-0xc8],ecx
  40852d:	mov    rax,QWORD PTR [rbp-0x10]
  408531:	mov    ecx,DWORD PTR [rax+0xf0]
  408537:	mov    rax,QWORD PTR [rbp-0xd0]
  40853e:	mov    edx,eax
  408540:	sub    ecx,edx
  408542:	mov    DWORD PTR [rbp-0x38],ecx
  408545:	mov    DWORD PTR [rbp-0x40],0x0
  40854c:	mov    eax,DWORD PTR [rbp-0x40]
  40854f:	mov    rcx,QWORD PTR [rbp-0x20]
  408553:	mov    edx,ecx
  408555:	cmp    eax,edx
  408557:	jae    40867c <flatcc_builder_create_offset_vector_direct@@Base+0x34c>
  40855d:	mov    rax,QWORD PTR [rbp-0x18]
  408561:	mov    ecx,DWORD PTR [rbp-0x40]
  408564:	mov    edx,ecx
  408566:	cmp    DWORD PTR [rax+rdx*4],0x0
  40856a:	je     4085fb <flatcc_builder_create_offset_vector_direct@@Base+0x2cb>
  408570:	mov    rax,QWORD PTR [rbp-0x18]
  408574:	mov    ecx,DWORD PTR [rbp-0x40]
  408577:	mov    edx,ecx
  408579:	mov    ecx,DWORD PTR [rax+rdx*4]
  40857c:	sub    ecx,DWORD PTR [rbp-0x38]
  40857f:	mov    ecx,ecx
  408581:	mov    eax,ecx
  408583:	mov    ecx,DWORD PTR [rbp-0x40]
  408586:	mov    edx,ecx
  408588:	shl    rdx,0x2
  40858c:	sub    rax,rdx
  40858f:	sub    rax,0x4
  408593:	mov    ecx,eax
  408595:	mov    DWORD PTR [rbp-0x3c],ecx
  408598:	mov    edi,DWORD PTR [rbp-0x3c]
  40859b:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  4085a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4085a4:	mov    ecx,DWORD PTR [rbp-0x40]
  4085a7:	mov    esi,ecx
  4085a9:	mov    DWORD PTR [rdx+rsi*4],eax
  4085ac:	cmp    QWORD PTR [rbp-0x28],0x0
  4085b1:	je     4085f6 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  4085b7:	mov    rax,QWORD PTR [rbp-0x28]
  4085bb:	mov    ecx,DWORD PTR [rbp-0x40]
  4085be:	mov    edx,ecx
  4085c0:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4085c4:	cmp    ecx,0x0
  4085c7:	je     4085d2 <flatcc_builder_create_offset_vector_direct@@Base+0x2a2>
  4085cd:	jmp    4085f1 <flatcc_builder_create_offset_vector_direct@@Base+0x2c1>
  4085d2:	lea    rdi,[rip+0x532d]        # 40d906 <flatcc_builder_padding_base@@Base+0x13c6>
  4085d9:	lea    rsi,[rip+0x4172]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4085e0:	mov    edx,0x5b1
  4085e5:	lea    rcx,[rip+0x5328]        # 40d914 <flatcc_builder_padding_base@@Base+0x13d4>
  4085ec:	call   403070 <__assert_fail@plt>
  4085f1:	jmp    4085f6 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  4085f6:	jmp    408669 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  4085fb:	cmp    QWORD PTR [rbp-0x28],0x0
  408600:	je     408645 <flatcc_builder_create_offset_vector_direct@@Base+0x315>
  408606:	mov    rax,QWORD PTR [rbp-0x28]
  40860a:	mov    ecx,DWORD PTR [rbp-0x40]
  40860d:	mov    edx,ecx
  40860f:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408613:	cmp    ecx,0x0
  408616:	jne    408621 <flatcc_builder_create_offset_vector_direct@@Base+0x2f1>
  40861c:	jmp    408640 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
  408621:	lea    rdi,[rip+0x536f]        # 40d997 <flatcc_builder_padding_base@@Base+0x1457>
  408628:	lea    rsi,[rip+0x4123]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40862f:	mov    edx,0x5b5
  408634:	lea    rcx,[rip+0x52d9]        # 40d914 <flatcc_builder_padding_base@@Base+0x13d4>
  40863b:	call   403070 <__assert_fail@plt>
  408640:	jmp    408664 <flatcc_builder_create_offset_vector_direct@@Base+0x334>
  408645:	lea    rdi,[rip+0x52c6]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  40864c:	lea    rsi,[rip+0x40ff]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408653:	mov    edx,0x5b7
  408658:	lea    rcx,[rip+0x52b5]        # 40d914 <flatcc_builder_padding_base@@Base+0x13d4>
  40865f:	call   403070 <__assert_fail@plt>
  408664:	jmp    408669 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  408669:	jmp    40866e <flatcc_builder_create_offset_vector_direct@@Base+0x33e>
  40866e:	mov    eax,DWORD PTR [rbp-0x40]
  408671:	add    eax,0x1
  408674:	mov    DWORD PTR [rbp-0x40],eax
  408677:	jmp    40854c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  40867c:	mov    rdi,QWORD PTR [rbp-0x10]
  408680:	lea    rsi,[rbp-0xd0]
  408687:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  40868c:	mov    DWORD PTR [rbp-0x4],eax
  40868f:	mov    eax,DWORD PTR [rbp-0x4]
  408692:	add    rsp,0xd0
  408699:	pop    rbp
  40869a:	ret    
  40869b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004086a0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4086a0:	push   rbp
  4086a1:	mov    rbp,rsp
  4086a4:	sub    rsp,0x20
  4086a8:	mov    QWORD PTR [rbp-0x10],rdi
  4086ac:	mov    QWORD PTR [rbp-0x18],rsi
  4086b0:	mov    rsi,QWORD PTR [rbp-0x10]
  4086b4:	mov    rsi,QWORD PTR [rsi+0x30]
  4086b8:	movzx  eax,WORD PTR [rsi+0xe]
  4086bc:	cmp    eax,0x5
  4086bf:	jne    4086ca <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  4086c5:	jmp    4086e9 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  4086ca:	lea    rdi,[rip+0x44b7]        # 40cb88 <flatcc_builder_padding_base@@Base+0x648>
  4086d1:	lea    rsi,[rip+0x407a]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4086d8:	mov    edx,0x5d5
  4086dd:	lea    rcx,[rip+0x4b1d]        # 40d201 <flatcc_builder_padding_base@@Base+0xcc1>
  4086e4:	call   403070 <__assert_fail@plt>
  4086e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4086ed:	mov    rax,QWORD PTR [rbp-0x10]
  4086f1:	mov    rax,QWORD PTR [rax+0x18]
  4086f5:	mov    rcx,QWORD PTR [rbp-0x10]
  4086f9:	mov    rcx,QWORD PTR [rcx+0x30]
  4086fd:	mov    edx,DWORD PTR [rcx+0x14]
  408700:	mov    rcx,QWORD PTR [rbp-0x18]
  408704:	mov    rsi,rax
  408707:	call   408360 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40870c:	xor    r8d,r8d
  40870f:	mov    DWORD PTR [rbp-0x1c],eax
  408712:	cmp    r8d,eax
  408715:	jne    408727 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  40871b:	mov    DWORD PTR [rbp-0x4],0x0
  408722:	jmp    408736 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  408727:	mov    rdi,QWORD PTR [rbp-0x10]
  40872b:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  408730:	mov    eax,DWORD PTR [rbp-0x1c]
  408733:	mov    DWORD PTR [rbp-0x4],eax
  408736:	mov    eax,DWORD PTR [rbp-0x4]
  408739:	add    rsp,0x20
  40873d:	pop    rbp
  40873e:	ret    
  40873f:	nop

0000000000408740 <flatcc_builder_offset_vector_edit@@Base>:
  408740:	push   rbp
  408741:	mov    rbp,rsp
  408744:	mov    QWORD PTR [rbp-0x8],rdi
  408748:	mov    rdi,QWORD PTR [rbp-0x8]
  40874c:	mov    rax,QWORD PTR [rdi+0x18]
  408750:	pop    rbp
  408751:	ret    
  408752:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40875c:	nop    DWORD PTR [rax+0x0]

0000000000408760 <flatcc_builder_offset_vector_count@@Base>:
  408760:	push   rbp
  408761:	mov    rbp,rsp
  408764:	mov    QWORD PTR [rbp-0x8],rdi
  408768:	mov    rdi,QWORD PTR [rbp-0x8]
  40876c:	mov    rdi,QWORD PTR [rdi+0x30]
  408770:	mov    eax,DWORD PTR [rdi+0x14]
  408773:	pop    rbp
  408774:	ret    
  408775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40877f:	nop

0000000000408780 <flatcc_builder_table_add_union@@Base>:
  408780:	push   rbp
  408781:	mov    rbp,rsp
  408784:	sub    rsp,0x30
  408788:	mov    QWORD PTR [rbp-0x10],rdx
  40878c:	mov    QWORD PTR [rbp-0x18],rdi
  408790:	mov    DWORD PTR [rbp-0x1c],esi
  408793:	mov    rdx,QWORD PTR [rbp-0x18]
  408797:	mov    rdx,QWORD PTR [rdx+0x30]
  40879b:	movzx  esi,WORD PTR [rdx+0xe]
  40879f:	cmp    esi,0x3
  4087a2:	jne    4087ad <flatcc_builder_table_add_union@@Base+0x2d>
  4087a8:	jmp    4087cc <flatcc_builder_table_add_union@@Base+0x4c>
  4087ad:	lea    rdi,[rip+0x47cd]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  4087b4:	lea    rsi,[rip+0x3f97]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4087bb:	mov    edx,0x5ee
  4087c0:	lea    rcx,[rip+0x4aac]        # 40d273 <flatcc_builder_padding_base@@Base+0xd33>
  4087c7:	call   403070 <__assert_fail@plt>
  4087cc:	movzx  eax,BYTE PTR [rbp-0x10]
  4087d0:	cmp    eax,0x0
  4087d3:	jne    40882a <flatcc_builder_table_add_union@@Base+0xaa>
  4087d9:	cmp    DWORD PTR [rbp-0xc],0x0
  4087dd:	je     40882a <flatcc_builder_table_add_union@@Base+0xaa>
  4087e3:	movzx  eax,BYTE PTR [rbp-0x10]
  4087e7:	cmp    eax,0x0
  4087ea:	jne    4087fa <flatcc_builder_table_add_union@@Base+0x7a>
  4087f0:	cmp    DWORD PTR [rbp-0xc],0x0
  4087f4:	jne    4087ff <flatcc_builder_table_add_union@@Base+0x7f>
  4087fa:	jmp    40881e <flatcc_builder_table_add_union@@Base+0x9e>
  4087ff:	lea    rdi,[rip+0x4ac5]        # 40d2cb <flatcc_builder_padding_base@@Base+0xd8b>
  408806:	lea    rsi,[rip+0x3f45]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40880d:	mov    edx,0x5ef
  408812:	lea    rcx,[rip+0x4a5a]        # 40d273 <flatcc_builder_padding_base@@Base+0xd33>
  408819:	call   403070 <__assert_fail@plt>
  40881e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408825:	jmp    408910 <flatcc_builder_table_add_union@@Base+0x190>
  40882a:	cmp    DWORD PTR [rbp-0xc],0x0
  40882e:	je     408893 <flatcc_builder_table_add_union@@Base+0x113>
  408834:	mov    rdi,QWORD PTR [rbp-0x18]
  408838:	mov    esi,DWORD PTR [rbp-0x1c]
  40883b:	call   408920 <flatcc_builder_table_add_offset@@Base>
  408840:	mov    QWORD PTR [rbp-0x28],rax
  408844:	cmp    QWORD PTR [rbp-0x28],0x0
  408849:	jne    40888a <flatcc_builder_table_add_union@@Base+0x10a>
  40884f:	cmp    QWORD PTR [rbp-0x28],0x0
  408854:	je     40885f <flatcc_builder_table_add_union@@Base+0xdf>
  40885a:	jmp    40887e <flatcc_builder_table_add_union@@Base+0xfe>
  40885f:	lea    rdi,[rip+0x4a87]        # 40d2ed <flatcc_builder_padding_base@@Base+0xdad>
  408866:	lea    rsi,[rip+0x3ee5]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40886d:	mov    edx,0x5f2
  408872:	lea    rcx,[rip+0x49fa]        # 40d273 <flatcc_builder_padding_base@@Base+0xd33>
  408879:	call   403070 <__assert_fail@plt>
  40887e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408885:	jmp    408910 <flatcc_builder_table_add_union@@Base+0x190>
  40888a:	mov    eax,DWORD PTR [rbp-0xc]
  40888d:	mov    rcx,QWORD PTR [rbp-0x28]
  408891:	mov    DWORD PTR [rcx],eax
  408893:	mov    eax,0x1
  408898:	mov    edx,eax
  40889a:	mov    rdi,QWORD PTR [rbp-0x18]
  40889e:	mov    eax,DWORD PTR [rbp-0x1c]
  4088a1:	sub    eax,0x1
  4088a4:	mov    esi,eax
  4088a6:	mov    ecx,0x1
  4088ab:	call   408a20 <flatcc_builder_table_add@@Base>
  4088b0:	mov    QWORD PTR [rbp-0x30],rax
  4088b4:	cmp    QWORD PTR [rbp-0x30],0x0
  4088b9:	jne    4088fa <flatcc_builder_table_add_union@@Base+0x17a>
  4088bf:	cmp    QWORD PTR [rbp-0x30],0x0
  4088c4:	je     4088cf <flatcc_builder_table_add_union@@Base+0x14f>
  4088ca:	jmp    4088ee <flatcc_builder_table_add_union@@Base+0x16e>
  4088cf:	lea    rdi,[rip+0x4a21]        # 40d2f7 <flatcc_builder_padding_base@@Base+0xdb7>
  4088d6:	lea    rsi,[rip+0x3e75]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4088dd:	mov    edx,0x5f6
  4088e2:	lea    rcx,[rip+0x498a]        # 40d273 <flatcc_builder_padding_base@@Base+0xd33>
  4088e9:	call   403070 <__assert_fail@plt>
  4088ee:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4088f5:	jmp    408910 <flatcc_builder_table_add_union@@Base+0x190>
  4088fa:	movzx  edi,BYTE PTR [rbp-0x10]
  4088fe:	call   408b70 <flatcc_builder_table_add@@Base+0x150>
  408903:	mov    rcx,QWORD PTR [rbp-0x30]
  408907:	mov    BYTE PTR [rcx],al
  408909:	mov    DWORD PTR [rbp-0x4],0x0
  408910:	mov    eax,DWORD PTR [rbp-0x4]
  408913:	add    rsp,0x30
  408917:	pop    rbp
  408918:	ret    
  408919:	nop    DWORD PTR [rax+0x0]

0000000000408920 <flatcc_builder_table_add_offset@@Base>:
  408920:	push   rbp
  408921:	mov    rbp,rsp
  408924:	sub    rsp,0x10
  408928:	mov    QWORD PTR [rbp-0x8],rdi
  40892c:	mov    DWORD PTR [rbp-0xc],esi
  40892f:	mov    rdi,QWORD PTR [rbp-0x8]
  408933:	mov    rdi,QWORD PTR [rdi+0x30]
  408937:	movzx  esi,WORD PTR [rdi+0xe]
  40893b:	cmp    esi,0x3
  40893e:	jne    408949 <flatcc_builder_table_add_offset@@Base+0x29>
  408944:	jmp    408968 <flatcc_builder_table_add_offset@@Base+0x48>
  408949:	lea    rdi,[rip+0x4631]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  408950:	lea    rsi,[rip+0x3dfb]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408957:	mov    edx,0x713
  40895c:	lea    rcx,[rip+0x4d12]        # 40d675 <flatcc_builder_padding_base@@Base+0x1135>
  408963:	call   403070 <__assert_fail@plt>
  408968:	cmp    DWORD PTR [rbp-0xc],0x0
  40896c:	jl     408984 <flatcc_builder_table_add_offset@@Base+0x64>
  408972:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408979:	jg     408984 <flatcc_builder_table_add_offset@@Base+0x64>
  40897f:	jmp    4089a3 <flatcc_builder_table_add_offset@@Base+0x83>
  408984:	lea    rdi,[rip+0x4c6a]        # 40d5f5 <flatcc_builder_padding_base@@Base+0x10b5>
  40898b:	lea    rsi,[rip+0x3dc0]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408992:	mov    edx,0x714
  408997:	lea    rcx,[rip+0x4cd7]        # 40d675 <flatcc_builder_padding_base@@Base+0x1135>
  40899e:	call   403070 <__assert_fail@plt>
  4089a3:	mov    rax,QWORD PTR [rbp-0x8]
  4089a7:	mov    rax,QWORD PTR [rax+0x8]
  4089ab:	movsxd rcx,DWORD PTR [rbp-0xc]
  4089af:	movzx  edx,WORD PTR [rax+rcx*2]
  4089b3:	cmp    edx,0x0
  4089b6:	je     4089db <flatcc_builder_table_add_offset@@Base+0xbb>
  4089bc:	lea    rdi,[rip+0x4f4f]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  4089c3:	lea    rsi,[rip+0x3d88]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4089ca:	mov    edx,0x71b
  4089cf:	lea    rcx,[rip+0x4c9f]        # 40d675 <flatcc_builder_padding_base@@Base+0x1135>
  4089d6:	call   403070 <__assert_fail@plt>
  4089db:	mov    eax,DWORD PTR [rbp-0xc]
  4089de:	mov    rcx,QWORD PTR [rbp-0x8]
  4089e2:	xor    eax,DWORD PTR [rcx+0x14]
  4089e5:	imul   eax,eax,0x9e3779b1
  4089eb:	xor    eax,0x4
  4089ee:	imul   eax,eax,0x9e3779b1
  4089f4:	mov    rcx,QWORD PTR [rbp-0x8]
  4089f8:	mov    DWORD PTR [rcx+0x14],eax
  4089fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4089ff:	mov    eax,DWORD PTR [rbp-0xc]
  408a02:	mov    dx,ax
  408a05:	movzx  esi,dx
  408a08:	call   409940 <flatcc_builder_table_add_copy@@Base+0x60>
  408a0d:	add    rsp,0x10
  408a11:	pop    rbp
  408a12:	ret    
  408a13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a1d:	nop    DWORD PTR [rax]

0000000000408a20 <flatcc_builder_table_add@@Base>:
  408a20:	push   rbp
  408a21:	mov    rbp,rsp
  408a24:	sub    rsp,0x20
  408a28:	mov    ax,cx
  408a2b:	mov    QWORD PTR [rbp-0x8],rdi
  408a2f:	mov    DWORD PTR [rbp-0xc],esi
  408a32:	mov    QWORD PTR [rbp-0x18],rdx
  408a36:	mov    WORD PTR [rbp-0x1a],ax
  408a3a:	mov    rdx,QWORD PTR [rbp-0x8]
  408a3e:	mov    rdx,QWORD PTR [rdx+0x30]
  408a42:	movzx  ecx,WORD PTR [rdx+0xe]
  408a46:	cmp    ecx,0x3
  408a49:	jne    408a54 <flatcc_builder_table_add@@Base+0x34>
  408a4f:	jmp    408a73 <flatcc_builder_table_add@@Base+0x53>
  408a54:	lea    rdi,[rip+0x4526]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  408a5b:	lea    rsi,[rip+0x3cf0]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408a62:	mov    edx,0x6ed
  408a67:	lea    rcx,[rip+0x4b3d]        # 40d5ab <flatcc_builder_padding_base@@Base+0x106b>
  408a6e:	call   403070 <__assert_fail@plt>
  408a73:	cmp    DWORD PTR [rbp-0xc],0x0
  408a77:	jl     408a8f <flatcc_builder_table_add@@Base+0x6f>
  408a7d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408a84:	jg     408a8f <flatcc_builder_table_add@@Base+0x6f>
  408a8a:	jmp    408aae <flatcc_builder_table_add@@Base+0x8e>
  408a8f:	lea    rdi,[rip+0x4b5f]        # 40d5f5 <flatcc_builder_padding_base@@Base+0x10b5>
  408a96:	lea    rsi,[rip+0x3cb5]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408a9d:	mov    edx,0x6ee
  408aa2:	lea    rcx,[rip+0x4b02]        # 40d5ab <flatcc_builder_padding_base@@Base+0x106b>
  408aa9:	call   403070 <__assert_fail@plt>
  408aae:	movzx  eax,WORD PTR [rbp-0x1a]
  408ab2:	mov    rcx,QWORD PTR [rbp-0x8]
  408ab6:	movzx  edx,WORD PTR [rcx+0xea]
  408abd:	cmp    eax,edx
  408abf:	jle    408ad4 <flatcc_builder_table_add@@Base+0xb4>
  408ac5:	mov    ax,WORD PTR [rbp-0x1a]
  408ac9:	mov    rcx,QWORD PTR [rbp-0x8]
  408acd:	mov    WORD PTR [rcx+0xea],ax
  408ad4:	mov    rax,QWORD PTR [rbp-0x8]
  408ad8:	mov    rax,QWORD PTR [rax+0x8]
  408adc:	movsxd rcx,DWORD PTR [rbp-0xc]
  408ae0:	movzx  edx,WORD PTR [rax+rcx*2]
  408ae4:	cmp    edx,0x0
  408ae7:	je     408b0c <flatcc_builder_table_add@@Base+0xec>
  408aed:	lea    rdi,[rip+0x4e1e]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  408af4:	lea    rsi,[rip+0x3c57]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408afb:	mov    edx,0x6f8
  408b00:	lea    rcx,[rip+0x4aa4]        # 40d5ab <flatcc_builder_padding_base@@Base+0x106b>
  408b07:	call   403070 <__assert_fail@plt>
  408b0c:	mov    eax,DWORD PTR [rbp-0xc]
  408b0f:	mov    rcx,QWORD PTR [rbp-0x8]
  408b13:	xor    eax,DWORD PTR [rcx+0x14]
  408b16:	imul   eax,eax,0x9e3779b1
  408b1c:	mov    rcx,QWORD PTR [rbp-0x18]
  408b20:	mov    edx,ecx
  408b22:	xor    eax,edx
  408b24:	imul   eax,eax,0x9e3779b1
  408b2a:	mov    rcx,QWORD PTR [rbp-0x8]
  408b2e:	mov    DWORD PTR [rcx+0x14],eax
  408b31:	mov    rdi,QWORD PTR [rbp-0x8]
  408b35:	mov    rcx,QWORD PTR [rbp-0x18]
  408b39:	mov    eax,ecx
  408b3b:	mov    si,WORD PTR [rbp-0x1a]
  408b3f:	mov    edx,DWORD PTR [rbp-0xc]
  408b42:	mov    r8w,dx
  408b46:	mov    WORD PTR [rbp-0x1c],si
  408b4a:	mov    esi,eax
  408b4c:	mov    r9w,WORD PTR [rbp-0x1c]
  408b51:	movzx  edx,r9w
  408b55:	movzx  ecx,r8w
  408b59:	call   409760 <flatcc_builder_string_len@@Base+0x20>
  408b5e:	add    rsp,0x20
  408b62:	pop    rbp
  408b63:	ret    
  408b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b6e:	xchg   ax,ax
  408b70:	push   rbp
  408b71:	mov    rbp,rsp
  408b74:	mov    al,dil
  408b77:	mov    BYTE PTR [rbp-0x1],al
  408b7a:	movzx  eax,BYTE PTR [rbp-0x1]
  408b7e:	pop    rbp
  408b7f:	ret    

0000000000408b80 <flatcc_builder_table_add_union_vector@@Base>:
  408b80:	push   rbp
  408b81:	mov    rbp,rsp
  408b84:	sub    rsp,0x30
  408b88:	mov    QWORD PTR [rbp-0x10],rdx
  408b8c:	mov    QWORD PTR [rbp-0x18],rdi
  408b90:	mov    DWORD PTR [rbp-0x1c],esi
  408b93:	mov    rdx,QWORD PTR [rbp-0x18]
  408b97:	mov    rdx,QWORD PTR [rdx+0x30]
  408b9b:	movzx  esi,WORD PTR [rdx+0xe]
  408b9f:	cmp    esi,0x3
  408ba2:	jne    408bad <flatcc_builder_table_add_union_vector@@Base+0x2d>
  408ba8:	jmp    408bcc <flatcc_builder_table_add_union_vector@@Base+0x4c>
  408bad:	lea    rdi,[rip+0x43cd]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  408bb4:	lea    rsi,[rip+0x3b97]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408bbb:	mov    edx,0x600
  408bc0:	lea    rcx,[rip+0x473c]        # 40d303 <flatcc_builder_padding_base@@Base+0xdc3>
  408bc7:	call   403070 <__assert_fail@plt>
  408bcc:	cmp    DWORD PTR [rbp-0x10],0x0
  408bd0:	sete   al
  408bd3:	and    al,0x1
  408bd5:	movzx  ecx,al
  408bd8:	cmp    DWORD PTR [rbp-0xc],0x0
  408bdc:	sete   al
  408bdf:	and    al,0x1
  408be1:	movzx  edx,al
  408be4:	cmp    ecx,edx
  408be6:	je     408c3c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  408bec:	cmp    DWORD PTR [rbp-0x10],0x0
  408bf0:	sete   al
  408bf3:	and    al,0x1
  408bf5:	movzx  ecx,al
  408bf8:	cmp    DWORD PTR [rbp-0xc],0x0
  408bfc:	sete   al
  408bff:	and    al,0x1
  408c01:	movzx  edx,al
  408c04:	cmp    ecx,edx
  408c06:	jne    408c11 <flatcc_builder_table_add_union_vector@@Base+0x91>
  408c0c:	jmp    408c30 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  408c11:	lea    rdi,[rip+0x474e]        # 40d366 <flatcc_builder_padding_base@@Base+0xe26>
  408c18:	lea    rsi,[rip+0x3b33]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408c1f:	mov    edx,0x601
  408c24:	lea    rcx,[rip+0x46d8]        # 40d303 <flatcc_builder_padding_base@@Base+0xdc3>
  408c2b:	call   403070 <__assert_fail@plt>
  408c30:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c37:	jmp    408d10 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408c3c:	cmp    DWORD PTR [rbp-0x10],0x0
  408c40:	je     408d09 <flatcc_builder_table_add_union_vector@@Base+0x189>
  408c46:	mov    rdi,QWORD PTR [rbp-0x18]
  408c4a:	mov    eax,DWORD PTR [rbp-0x1c]
  408c4d:	sub    eax,0x1
  408c50:	mov    esi,eax
  408c52:	call   408920 <flatcc_builder_table_add_offset@@Base>
  408c57:	mov    QWORD PTR [rbp-0x28],rax
  408c5b:	cmp    QWORD PTR [rbp-0x28],0x0
  408c60:	jne    408ca1 <flatcc_builder_table_add_union_vector@@Base+0x121>
  408c66:	cmp    QWORD PTR [rbp-0x28],0x0
  408c6b:	je     408c76 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  408c71:	jmp    408c95 <flatcc_builder_table_add_union_vector@@Base+0x115>
  408c76:	lea    rdi,[rip+0x4670]        # 40d2ed <flatcc_builder_padding_base@@Base+0xdad>
  408c7d:	lea    rsi,[rip+0x3ace]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408c84:	mov    edx,0x604
  408c89:	lea    rcx,[rip+0x4673]        # 40d303 <flatcc_builder_padding_base@@Base+0xdc3>
  408c90:	call   403070 <__assert_fail@plt>
  408c95:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c9c:	jmp    408d10 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408ca1:	mov    eax,DWORD PTR [rbp-0x10]
  408ca4:	mov    rcx,QWORD PTR [rbp-0x28]
  408ca8:	mov    DWORD PTR [rcx],eax
  408caa:	mov    rdi,QWORD PTR [rbp-0x18]
  408cae:	mov    esi,DWORD PTR [rbp-0x1c]
  408cb1:	call   408920 <flatcc_builder_table_add_offset@@Base>
  408cb6:	mov    QWORD PTR [rbp-0x28],rax
  408cba:	cmp    QWORD PTR [rbp-0x28],0x0
  408cbf:	jne    408d00 <flatcc_builder_table_add_union_vector@@Base+0x180>
  408cc5:	cmp    QWORD PTR [rbp-0x28],0x0
  408cca:	je     408cd5 <flatcc_builder_table_add_union_vector@@Base+0x155>
  408cd0:	jmp    408cf4 <flatcc_builder_table_add_union_vector@@Base+0x174>
  408cd5:	lea    rdi,[rip+0x4611]        # 40d2ed <flatcc_builder_padding_base@@Base+0xdad>
  408cdc:	lea    rsi,[rip+0x3a6f]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408ce3:	mov    edx,0x608
  408ce8:	lea    rcx,[rip+0x4614]        # 40d303 <flatcc_builder_padding_base@@Base+0xdc3>
  408cef:	call   403070 <__assert_fail@plt>
  408cf4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408cfb:	jmp    408d10 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408d00:	mov    eax,DWORD PTR [rbp-0xc]
  408d03:	mov    rcx,QWORD PTR [rbp-0x28]
  408d07:	mov    DWORD PTR [rcx],eax
  408d09:	mov    DWORD PTR [rbp-0x4],0x0
  408d10:	mov    eax,DWORD PTR [rbp-0x4]
  408d13:	add    rsp,0x30
  408d17:	pop    rbp
  408d18:	ret    
  408d19:	nop    DWORD PTR [rax+0x0]

0000000000408d20 <flatcc_builder_create_union_vector@@Base>:
  408d20:	push   rbp
  408d21:	mov    rbp,rsp
  408d24:	sub    rsp,0x40
  408d28:	xor    eax,eax
  408d2a:	mov    ecx,0x8
  408d2f:	mov    r8d,ecx
  408d32:	mov    QWORD PTR [rbp-0x10],rdi
  408d36:	mov    QWORD PTR [rbp-0x18],rsi
  408d3a:	mov    QWORD PTR [rbp-0x20],rdx
  408d3e:	lea    rdx,[rbp-0x8]
  408d42:	mov    rdi,rdx
  408d45:	mov    esi,eax
  408d47:	mov    rdx,r8
  408d4a:	call   403080 <memset@plt>
  408d4f:	mov    rdi,QWORD PTR [rbp-0x10]
  408d53:	call   406dd0 <flatcc_builder_start_offset_vector@@Base>
  408d58:	cmp    eax,0x0
  408d5b:	je     408d66 <flatcc_builder_create_union_vector@@Base+0x46>
  408d61:	jmp    408e3b <flatcc_builder_create_union_vector@@Base+0x11b>
  408d66:	mov    rdi,QWORD PTR [rbp-0x10]
  408d6a:	mov    rsi,QWORD PTR [rbp-0x20]
  408d6e:	call   4065b0 <flatcc_builder_extend_offset_vector@@Base>
  408d73:	xor    ecx,ecx
  408d75:	mov    esi,ecx
  408d77:	cmp    rsi,rax
  408d7a:	jne    408d85 <flatcc_builder_create_union_vector@@Base+0x65>
  408d80:	jmp    408e3b <flatcc_builder_create_union_vector@@Base+0x11b>
  408d85:	mov    rdi,QWORD PTR [rbp-0x10]
  408d89:	mov    rax,QWORD PTR [rbp-0x20]
  408d8d:	shl    rax,0x0
  408d91:	mov    ecx,eax
  408d93:	mov    esi,ecx
  408d95:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  408d9a:	xor    ecx,ecx
  408d9c:	mov    edi,ecx
  408d9e:	mov    QWORD PTR [rbp-0x28],rax
  408da2:	cmp    rdi,rax
  408da5:	jne    408db0 <flatcc_builder_create_union_vector@@Base+0x90>
  408dab:	jmp    408e3b <flatcc_builder_create_union_vector@@Base+0x11b>
  408db0:	mov    rdi,QWORD PTR [rbp-0x10]
  408db4:	call   408740 <flatcc_builder_offset_vector_edit@@Base>
  408db9:	mov    QWORD PTR [rbp-0x30],rax
  408dbd:	mov    QWORD PTR [rbp-0x38],0x0
  408dc5:	mov    rax,QWORD PTR [rbp-0x38]
  408dc9:	cmp    rax,QWORD PTR [rbp-0x20]
  408dcd:	jae    408e11 <flatcc_builder_create_union_vector@@Base+0xf1>
  408dd3:	mov    rax,QWORD PTR [rbp-0x18]
  408dd7:	mov    rcx,QWORD PTR [rbp-0x38]
  408ddb:	mov    dl,BYTE PTR [rax+rcx*8]
  408dde:	mov    rax,QWORD PTR [rbp-0x28]
  408de2:	mov    rcx,QWORD PTR [rbp-0x38]
  408de6:	mov    BYTE PTR [rax+rcx*1],dl
  408de9:	mov    rax,QWORD PTR [rbp-0x18]
  408ded:	mov    rcx,QWORD PTR [rbp-0x38]
  408df1:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  408df5:	mov    rax,QWORD PTR [rbp-0x30]
  408df9:	mov    rcx,QWORD PTR [rbp-0x38]
  408dfd:	mov    DWORD PTR [rax+rcx*4],esi
  408e00:	mov    rax,QWORD PTR [rbp-0x38]
  408e04:	add    rax,0x1
  408e08:	mov    QWORD PTR [rbp-0x38],rax
  408e0c:	jmp    408dc5 <flatcc_builder_create_union_vector@@Base+0xa5>
  408e11:	mov    rdi,QWORD PTR [rbp-0x10]
  408e15:	mov    rsi,QWORD PTR [rbp-0x28]
  408e19:	mov    rdx,QWORD PTR [rbp-0x30]
  408e1d:	mov    rcx,QWORD PTR [rbp-0x20]
  408e21:	call   408e50 <flatcc_builder_create_union_vector_direct@@Base>
  408e26:	mov    QWORD PTR [rbp-0x40],rax
  408e2a:	mov    rax,QWORD PTR [rbp-0x40]
  408e2e:	mov    QWORD PTR [rbp-0x8],rax
  408e32:	mov    rdi,QWORD PTR [rbp-0x10]
  408e36:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  408e3b:	mov    rax,QWORD PTR [rbp-0x8]
  408e3f:	add    rsp,0x40
  408e43:	pop    rbp
  408e44:	ret    
  408e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e4f:	nop

0000000000408e50 <flatcc_builder_create_union_vector_direct@@Base>:
  408e50:	push   rbp
  408e51:	mov    rbp,rsp
  408e54:	sub    rsp,0x30
  408e58:	xor    eax,eax
  408e5a:	mov    r8d,0x8
  408e60:	mov    r9d,r8d
  408e63:	mov    QWORD PTR [rbp-0x10],rdi
  408e67:	mov    QWORD PTR [rbp-0x18],rsi
  408e6b:	mov    QWORD PTR [rbp-0x20],rdx
  408e6f:	mov    QWORD PTR [rbp-0x28],rcx
  408e73:	lea    rcx,[rbp-0x8]
  408e77:	mov    rdi,rcx
  408e7a:	mov    esi,eax
  408e7c:	mov    rdx,r9
  408e7f:	call   403080 <memset@plt>
  408e84:	mov    rdi,QWORD PTR [rbp-0x10]
  408e88:	mov    rsi,QWORD PTR [rbp-0x20]
  408e8c:	mov    rdx,QWORD PTR [rbp-0x28]
  408e90:	mov    rcx,QWORD PTR [rbp-0x18]
  408e94:	call   408360 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408e99:	xor    r8d,r8d
  408e9c:	mov    DWORD PTR [rbp-0x4],eax
  408e9f:	cmp    r8d,eax
  408ea2:	jne    408ead <flatcc_builder_create_union_vector_direct@@Base+0x5d>
  408ea8:	jmp    408eec <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  408ead:	mov    eax,0x1
  408eb2:	mov    ecx,eax
  408eb4:	mov    eax,0xffffffff
  408eb9:	mov    r9d,eax
  408ebc:	mov    rdi,QWORD PTR [rbp-0x10]
  408ec0:	mov    rsi,QWORD PTR [rbp-0x18]
  408ec4:	mov    rdx,QWORD PTR [rbp-0x28]
  408ec8:	mov    r8d,0x1
  408ece:	call   408000 <flatcc_builder_create_vector@@Base>
  408ed3:	xor    r8d,r8d
  408ed6:	mov    DWORD PTR [rbp-0x8],eax
  408ed9:	cmp    r8d,eax
  408edc:	jne    408ee7 <flatcc_builder_create_union_vector_direct@@Base+0x97>
  408ee2:	jmp    408eec <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  408ee7:	jmp    408eec <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  408eec:	mov    rax,QWORD PTR [rbp-0x8]
  408ef0:	add    rsp,0x30
  408ef4:	pop    rbp
  408ef5:	ret    
  408ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408f00 <flatcc_builder_start_union_vector@@Base>:
  408f00:	push   rbp
  408f01:	mov    rbp,rsp
  408f04:	sub    rsp,0x10
  408f08:	mov    QWORD PTR [rbp-0x10],rdi
  408f0c:	mov    rdi,QWORD PTR [rbp-0x10]
  408f10:	mov    esi,0x4
  408f15:	call   405c50 <flatcc_builder_start_buffer@@Base+0x170>
  408f1a:	cmp    eax,0x0
  408f1d:	je     408f2f <flatcc_builder_start_union_vector@@Base+0x2f>
  408f23:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408f2a:	jmp    408f70 <flatcc_builder_start_union_vector@@Base+0x70>
  408f2f:	mov    rax,QWORD PTR [rbp-0x10]
  408f33:	mov    rax,QWORD PTR [rax+0x30]
  408f37:	mov    DWORD PTR [rax+0x10],0x8
  408f3e:	mov    rax,QWORD PTR [rbp-0x10]
  408f42:	mov    rax,QWORD PTR [rax+0x30]
  408f46:	mov    DWORD PTR [rax+0x14],0x0
  408f4d:	mov    rax,QWORD PTR [rbp-0x10]
  408f51:	mov    rax,QWORD PTR [rax+0x30]
  408f55:	mov    WORD PTR [rax+0xe],0x7
  408f5b:	mov    rdi,QWORD PTR [rbp-0x10]
  408f5f:	mov    esi,0xfffffffc
  408f64:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  408f69:	mov    DWORD PTR [rbp-0x4],0x0
  408f70:	mov    eax,DWORD PTR [rbp-0x4]
  408f73:	add    rsp,0x10
  408f77:	pop    rbp
  408f78:	ret    
  408f79:	nop    DWORD PTR [rax+0x0]

0000000000408f80 <flatcc_builder_end_union_vector@@Base>:
  408f80:	push   rbp
  408f81:	mov    rbp,rsp
  408f84:	sub    rsp,0x40
  408f88:	xor    esi,esi
  408f8a:	mov    eax,0x8
  408f8f:	mov    edx,eax
  408f91:	mov    QWORD PTR [rbp-0x10],rdi
  408f95:	lea    rdi,[rbp-0x8]
  408f99:	call   403080 <memset@plt>
  408f9e:	mov    rdx,QWORD PTR [rbp-0x10]
  408fa2:	mov    rdx,QWORD PTR [rdx+0x30]
  408fa6:	movzx  eax,WORD PTR [rdx+0xe]
  408faa:	cmp    eax,0x7
  408fad:	jne    408fb8 <flatcc_builder_end_union_vector@@Base+0x38>
  408fb3:	jmp    408fd7 <flatcc_builder_end_union_vector@@Base+0x57>
  408fb8:	lea    rdi,[rip+0x43cf]        # 40d38e <flatcc_builder_padding_base@@Base+0xe4e>
  408fbf:	lea    rsi,[rip+0x378c]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  408fc6:	mov    edx,0x651
  408fcb:	lea    rcx,[rip+0x43ee]        # 40d3c0 <flatcc_builder_padding_base@@Base+0xe80>
  408fd2:	call   403070 <__assert_fail@plt>
  408fd7:	mov    rdi,QWORD PTR [rbp-0x10]
  408fdb:	call   4090c0 <flatcc_builder_union_vector_count@@Base>
  408fe0:	mov    QWORD PTR [rbp-0x38],rax
  408fe4:	mov    rdi,QWORD PTR [rbp-0x10]
  408fe8:	imul   rax,QWORD PTR [rbp-0x38],0x5
  408fed:	mov    ecx,eax
  408fef:	mov    esi,ecx
  408ff1:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  408ff6:	xor    ecx,ecx
  408ff8:	mov    edi,ecx
  408ffa:	mov    QWORD PTR [rbp-0x28],rax
  408ffe:	cmp    rdi,rax
  409001:	jne    40900c <flatcc_builder_end_union_vector@@Base+0x8c>
  409007:	jmp    4090aa <flatcc_builder_end_union_vector@@Base+0x12a>
  40900c:	mov    rax,QWORD PTR [rbp-0x28]
  409010:	mov    rcx,QWORD PTR [rbp-0x38]
  409014:	shl    rcx,0x2
  409018:	add    rax,rcx
  40901b:	mov    QWORD PTR [rbp-0x18],rax
  40901f:	mov    rdi,QWORD PTR [rbp-0x10]
  409023:	call   4090e0 <flatcc_builder_union_vector_edit@@Base>
  409028:	mov    QWORD PTR [rbp-0x20],rax
  40902c:	mov    QWORD PTR [rbp-0x30],0x0
  409034:	mov    rax,QWORD PTR [rbp-0x30]
  409038:	cmp    rax,QWORD PTR [rbp-0x38]
  40903c:	jae    409080 <flatcc_builder_end_union_vector@@Base+0x100>
  409042:	mov    rax,QWORD PTR [rbp-0x20]
  409046:	mov    rcx,QWORD PTR [rbp-0x30]
  40904a:	mov    dl,BYTE PTR [rax+rcx*8]
  40904d:	mov    rax,QWORD PTR [rbp-0x18]
  409051:	mov    rcx,QWORD PTR [rbp-0x30]
  409055:	mov    BYTE PTR [rax+rcx*1],dl
  409058:	mov    rax,QWORD PTR [rbp-0x20]
  40905c:	mov    rcx,QWORD PTR [rbp-0x30]
  409060:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  409064:	mov    rax,QWORD PTR [rbp-0x28]
  409068:	mov    rcx,QWORD PTR [rbp-0x30]
  40906c:	mov    DWORD PTR [rax+rcx*4],esi
  40906f:	mov    rax,QWORD PTR [rbp-0x30]
  409073:	add    rax,0x1
  409077:	mov    QWORD PTR [rbp-0x30],rax
  40907b:	jmp    409034 <flatcc_builder_end_union_vector@@Base+0xb4>
  409080:	mov    rdi,QWORD PTR [rbp-0x10]
  409084:	mov    rsi,QWORD PTR [rbp-0x18]
  409088:	mov    rdx,QWORD PTR [rbp-0x28]
  40908c:	mov    rcx,QWORD PTR [rbp-0x38]
  409090:	call   408e50 <flatcc_builder_create_union_vector_direct@@Base>
  409095:	mov    QWORD PTR [rbp-0x40],rax
  409099:	mov    rax,QWORD PTR [rbp-0x40]
  40909d:	mov    QWORD PTR [rbp-0x8],rax
  4090a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4090a5:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  4090aa:	mov    rax,QWORD PTR [rbp-0x8]
  4090ae:	add    rsp,0x40
  4090b2:	pop    rbp
  4090b3:	ret    
  4090b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090be:	xchg   ax,ax

00000000004090c0 <flatcc_builder_union_vector_count@@Base>:
  4090c0:	push   rbp
  4090c1:	mov    rbp,rsp
  4090c4:	mov    QWORD PTR [rbp-0x8],rdi
  4090c8:	mov    rdi,QWORD PTR [rbp-0x8]
  4090cc:	mov    rdi,QWORD PTR [rdi+0x30]
  4090d0:	mov    eax,DWORD PTR [rdi+0x14]
  4090d3:	pop    rbp
  4090d4:	ret    
  4090d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090df:	nop

00000000004090e0 <flatcc_builder_union_vector_edit@@Base>:
  4090e0:	push   rbp
  4090e1:	mov    rbp,rsp
  4090e4:	mov    QWORD PTR [rbp-0x8],rdi
  4090e8:	mov    rdi,QWORD PTR [rbp-0x8]
  4090ec:	mov    rax,QWORD PTR [rdi+0x18]
  4090f0:	pop    rbp
  4090f1:	ret    
  4090f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090fc:	nop    DWORD PTR [rax+0x0]

0000000000409100 <flatcc_builder_extend_union_vector@@Base>:
  409100:	push   rbp
  409101:	mov    rbp,rsp
  409104:	sub    rsp,0x20
  409108:	mov    QWORD PTR [rbp-0x10],rdi
  40910c:	mov    QWORD PTR [rbp-0x18],rsi
  409110:	mov    rdi,QWORD PTR [rbp-0x10]
  409114:	mov    rsi,QWORD PTR [rbp-0x18]
  409118:	mov    eax,esi
  40911a:	mov    esi,eax
  40911c:	mov    edx,0x1fffffff
  409121:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  409126:	cmp    eax,0x0
  409129:	je     40913c <flatcc_builder_extend_union_vector@@Base+0x3c>
  40912f:	mov    QWORD PTR [rbp-0x8],0x0
  409137:	jmp    40915b <flatcc_builder_extend_union_vector@@Base+0x5b>
  40913c:	mov    rdi,QWORD PTR [rbp-0x10]
  409140:	mov    rax,QWORD PTR [rbp-0x18]
  409144:	mov    ecx,eax
  409146:	mov    ecx,ecx
  409148:	mov    eax,ecx
  40914a:	shl    rax,0x3
  40914e:	mov    ecx,eax
  409150:	mov    esi,ecx
  409152:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  409157:	mov    QWORD PTR [rbp-0x8],rax
  40915b:	mov    rax,QWORD PTR [rbp-0x8]
  40915f:	add    rsp,0x20
  409163:	pop    rbp
  409164:	ret    
  409165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40916f:	nop

0000000000409170 <flatcc_builder_truncate_union_vector@@Base>:
  409170:	push   rbp
  409171:	mov    rbp,rsp
  409174:	sub    rsp,0x20
  409178:	mov    QWORD PTR [rbp-0x10],rdi
  40917c:	mov    QWORD PTR [rbp-0x18],rsi
  409180:	mov    rsi,QWORD PTR [rbp-0x10]
  409184:	mov    rsi,QWORD PTR [rsi+0x30]
  409188:	movzx  eax,WORD PTR [rsi+0xe]
  40918c:	cmp    eax,0x7
  40918f:	jne    40919a <flatcc_builder_truncate_union_vector@@Base+0x2a>
  409195:	jmp    4091b9 <flatcc_builder_truncate_union_vector@@Base+0x49>
  40919a:	lea    rdi,[rip+0x41ed]        # 40d38e <flatcc_builder_padding_base@@Base+0xe4e>
  4091a1:	lea    rsi,[rip+0x35aa]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4091a8:	mov    edx,0x681
  4091ad:	lea    rcx,[rip+0x425f]        # 40d413 <flatcc_builder_padding_base@@Base+0xed3>
  4091b4:	call   403070 <__assert_fail@plt>
  4091b9:	mov    rax,QWORD PTR [rbp-0x10]
  4091bd:	mov    rax,QWORD PTR [rax+0x30]
  4091c1:	mov    ecx,DWORD PTR [rax+0x14]
  4091c4:	mov    rax,QWORD PTR [rbp-0x18]
  4091c8:	mov    edx,eax
  4091ca:	cmp    ecx,edx
  4091cc:	jae    40921b <flatcc_builder_truncate_union_vector@@Base+0xab>
  4091d2:	mov    rax,QWORD PTR [rbp-0x10]
  4091d6:	mov    rax,QWORD PTR [rax+0x30]
  4091da:	mov    ecx,DWORD PTR [rax+0x14]
  4091dd:	mov    rax,QWORD PTR [rbp-0x18]
  4091e1:	mov    edx,eax
  4091e3:	cmp    ecx,edx
  4091e5:	jb     4091f0 <flatcc_builder_truncate_union_vector@@Base+0x80>
  4091eb:	jmp    40920f <flatcc_builder_truncate_union_vector@@Base+0x9f>
  4091f0:	lea    rdi,[rip+0x3bfb]        # 40cdf2 <flatcc_builder_padding_base@@Base+0x8b2>
  4091f7:	lea    rsi,[rip+0x3554]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4091fe:	mov    edx,0x682
  409203:	lea    rcx,[rip+0x4209]        # 40d413 <flatcc_builder_padding_base@@Base+0xed3>
  40920a:	call   403070 <__assert_fail@plt>
  40920f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409216:	jmp    409257 <flatcc_builder_truncate_union_vector@@Base+0xe7>
  40921b:	mov    rax,QWORD PTR [rbp-0x18]
  40921f:	mov    ecx,eax
  409221:	mov    rax,QWORD PTR [rbp-0x10]
  409225:	mov    rax,QWORD PTR [rax+0x30]
  409229:	mov    edx,DWORD PTR [rax+0x14]
  40922c:	sub    edx,ecx
  40922e:	mov    DWORD PTR [rax+0x14],edx
  409231:	mov    rdi,QWORD PTR [rbp-0x10]
  409235:	mov    rax,QWORD PTR [rbp-0x10]
  409239:	mov    rax,QWORD PTR [rax+0x30]
  40923d:	mov    ecx,DWORD PTR [rax+0x10]
  409240:	mov    rax,QWORD PTR [rbp-0x18]
  409244:	mov    edx,eax
  409246:	imul   ecx,edx
  409249:	mov    esi,ecx
  40924b:	call   406ad0 <flatcc_builder_truncate_vector@@Base+0xf0>
  409250:	mov    DWORD PTR [rbp-0x4],0x0
  409257:	mov    eax,DWORD PTR [rbp-0x4]
  40925a:	add    rsp,0x20
  40925e:	pop    rbp
  40925f:	ret    

0000000000409260 <flatcc_builder_union_vector_push@@Base>:
  409260:	push   rbp
  409261:	mov    rbp,rsp
  409264:	sub    rsp,0x20
  409268:	mov    QWORD PTR [rbp-0x10],rsi
  40926c:	mov    QWORD PTR [rbp-0x18],rdi
  409270:	mov    rsi,QWORD PTR [rbp-0x18]
  409274:	mov    rsi,QWORD PTR [rsi+0x30]
  409278:	movzx  eax,WORD PTR [rsi+0xe]
  40927c:	cmp    eax,0x7
  40927f:	jne    40928a <flatcc_builder_union_vector_push@@Base+0x2a>
  409285:	jmp    4092a9 <flatcc_builder_union_vector_push@@Base+0x49>
  40928a:	lea    rdi,[rip+0x40fd]        # 40d38e <flatcc_builder_padding_base@@Base+0xe4e>
  409291:	lea    rsi,[rip+0x34ba]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  409298:	mov    edx,0x68d
  40929d:	lea    rcx,[rip+0x41b4]        # 40d458 <flatcc_builder_padding_base@@Base+0xf18>
  4092a4:	call   403070 <__assert_fail@plt>
  4092a9:	mov    rax,QWORD PTR [rbp-0x18]
  4092ad:	mov    rax,QWORD PTR [rax+0x30]
  4092b1:	mov    ecx,DWORD PTR [rax+0x14]
  4092b4:	mov    eax,ecx
  4092b6:	cmp    rax,0x1fffffff
  4092bc:	jne    4092cf <flatcc_builder_union_vector_push@@Base+0x6f>
  4092c2:	mov    QWORD PTR [rbp-0x8],0x0
  4092ca:	jmp    40931f <flatcc_builder_union_vector_push@@Base+0xbf>
  4092cf:	mov    rax,QWORD PTR [rbp-0x18]
  4092d3:	mov    rax,QWORD PTR [rax+0x30]
  4092d7:	mov    ecx,DWORD PTR [rax+0x14]
  4092da:	add    ecx,0x1
  4092dd:	mov    DWORD PTR [rax+0x14],ecx
  4092e0:	mov    rdi,QWORD PTR [rbp-0x18]
  4092e4:	mov    esi,0x8
  4092e9:	call   406140 <flatcc_builder_start_struct@@Base+0x100>
  4092ee:	xor    ecx,ecx
  4092f0:	mov    edi,ecx
  4092f2:	mov    QWORD PTR [rbp-0x20],rax
  4092f6:	cmp    rdi,rax
  4092f9:	jne    40930c <flatcc_builder_union_vector_push@@Base+0xac>
  4092ff:	mov    QWORD PTR [rbp-0x8],0x0
  409307:	jmp    40931f <flatcc_builder_union_vector_push@@Base+0xbf>
  40930c:	mov    rax,QWORD PTR [rbp-0x20]
  409310:	mov    rcx,QWORD PTR [rbp-0x10]
  409314:	mov    QWORD PTR [rax],rcx
  409317:	mov    rax,QWORD PTR [rbp-0x20]
  40931b:	mov    QWORD PTR [rbp-0x8],rax
  40931f:	mov    rax,QWORD PTR [rbp-0x8]
  409323:	add    rsp,0x20
  409327:	pop    rbp
  409328:	ret    
  409329:	nop    DWORD PTR [rax+0x0]

0000000000409330 <flatcc_builder_append_union_vector@@Base>:
  409330:	push   rbp
  409331:	mov    rbp,rsp
  409334:	sub    rsp,0x20
  409338:	mov    QWORD PTR [rbp-0x10],rdi
  40933c:	mov    QWORD PTR [rbp-0x18],rsi
  409340:	mov    QWORD PTR [rbp-0x20],rdx
  409344:	mov    rdx,QWORD PTR [rbp-0x10]
  409348:	mov    rdx,QWORD PTR [rdx+0x30]
  40934c:	movzx  eax,WORD PTR [rdx+0xe]
  409350:	cmp    eax,0x7
  409353:	jne    40935e <flatcc_builder_append_union_vector@@Base+0x2e>
  409359:	jmp    40937d <flatcc_builder_append_union_vector@@Base+0x4d>
  40935e:	lea    rdi,[rip+0x4029]        # 40d38e <flatcc_builder_padding_base@@Base+0xe4e>
  409365:	lea    rsi,[rip+0x33e6]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40936c:	mov    edx,0x69c
  409371:	lea    rcx,[rip+0x414d]        # 40d4c5 <flatcc_builder_padding_base@@Base+0xf85>
  409378:	call   403070 <__assert_fail@plt>
  40937d:	mov    rdi,QWORD PTR [rbp-0x10]
  409381:	mov    rax,QWORD PTR [rbp-0x20]
  409385:	mov    ecx,eax
  409387:	mov    esi,ecx
  409389:	mov    edx,0x1fffffff
  40938e:	call   406300 <flatcc_builder_extend_vector@@Base+0x70>
  409393:	cmp    eax,0x0
  409396:	je     4093a9 <flatcc_builder_append_union_vector@@Base+0x79>
  40939c:	mov    QWORD PTR [rbp-0x8],0x0
  4093a4:	jmp    4093cd <flatcc_builder_append_union_vector@@Base+0x9d>
  4093a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4093ad:	mov    rax,QWORD PTR [rbp-0x18]
  4093b1:	mov    rcx,QWORD PTR [rbp-0x20]
  4093b5:	mov    edx,ecx
  4093b7:	mov    edx,edx
  4093b9:	mov    ecx,edx
  4093bb:	shl    rcx,0x3
  4093bf:	mov    edx,ecx
  4093c1:	mov    rsi,rax
  4093c4:	call   4064a0 <flatcc_builder_vector_push@@Base+0xf0>
  4093c9:	mov    QWORD PTR [rbp-0x8],rax
  4093cd:	mov    rax,QWORD PTR [rbp-0x8]
  4093d1:	add    rsp,0x20
  4093d5:	pop    rbp
  4093d6:	ret    
  4093d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004093e0 <flatcc_builder_create_string@@Base>:
  4093e0:	push   rbp
  4093e1:	mov    rbp,rsp
  4093e4:	sub    rsp,0xc0
  4093eb:	mov    eax,0xffffffff
  4093f0:	mov    ecx,eax
  4093f2:	mov    QWORD PTR [rbp-0x10],rdi
  4093f6:	mov    QWORD PTR [rbp-0x18],rsi
  4093fa:	mov    QWORD PTR [rbp-0x20],rdx
  4093fe:	cmp    QWORD PTR [rbp-0x20],rcx
  409402:	jbe    409414 <flatcc_builder_create_string@@Base+0x34>
  409408:	mov    DWORD PTR [rbp-0x4],0x0
  40940f:	jmp    40959f <flatcc_builder_create_string@@Base+0x1bf>
  409414:	mov    rax,QWORD PTR [rbp-0x20]
  409418:	mov    ecx,eax
  40941a:	mov    edi,ecx
  40941c:	call   4053f0 <flatcc_builder_embed_buffer@@Base+0x420>
  409421:	mov    DWORD PTR [rbp-0x28],eax
  409424:	mov    rdi,QWORD PTR [rbp-0x10]
  409428:	mov    rdx,QWORD PTR [rbp-0x20]
  40942c:	mov    eax,edx
  40942e:	add    eax,0x1
  409431:	mov    esi,eax
  409433:	mov    edx,0x4
  409438:	call   4053c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40943d:	add    eax,0x1
  409440:	mov    DWORD PTR [rbp-0x24],eax
  409443:	mov    QWORD PTR [rbp-0xb8],0x0
  40944e:	mov    DWORD PTR [rbp-0xb0],0x0
  409458:	mov    rdi,QWORD PTR [rbp-0xb8]
  40945f:	add    rdi,0x4
  409463:	mov    QWORD PTR [rbp-0xb8],rdi
  40946a:	lea    rdi,[rbp-0x28]
  40946e:	lea    r8,[rbp-0xb8]
  409475:	mov    r9,r8
  409478:	add    r9,0x10
  40947c:	movsxd r10,DWORD PTR [rbp-0xb0]
  409483:	shl    r10,0x4
  409487:	add    r9,r10
  40948a:	mov    QWORD PTR [r9],rdi
  40948d:	add    r8,0x10
  409491:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409498:	shl    rdi,0x4
  40949c:	add    r8,rdi
  40949f:	mov    QWORD PTR [r8+0x8],0x4
  4094a7:	mov    eax,DWORD PTR [rbp-0xb0]
  4094ad:	add    eax,0x1
  4094b0:	mov    DWORD PTR [rbp-0xb0],eax
  4094b6:	cmp    QWORD PTR [rbp-0x20],0x0
  4094bb:	jbe    40951f <flatcc_builder_create_string@@Base+0x13f>
  4094c1:	mov    rax,QWORD PTR [rbp-0x20]
  4094c5:	add    rax,QWORD PTR [rbp-0xb8]
  4094cc:	mov    QWORD PTR [rbp-0xb8],rax
  4094d3:	mov    rax,QWORD PTR [rbp-0x18]
  4094d7:	lea    rcx,[rbp-0xb8]
  4094de:	mov    rdx,rcx
  4094e1:	add    rdx,0x10
  4094e5:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4094ec:	shl    rsi,0x4
  4094f0:	add    rdx,rsi
  4094f3:	mov    QWORD PTR [rdx],rax
  4094f6:	mov    rax,QWORD PTR [rbp-0x20]
  4094fa:	add    rcx,0x10
  4094fe:	movsxd rdx,DWORD PTR [rbp-0xb0]
  409505:	shl    rdx,0x4
  409509:	add    rcx,rdx
  40950c:	mov    QWORD PTR [rcx+0x8],rax
  409510:	mov    edi,DWORD PTR [rbp-0xb0]
  409516:	add    edi,0x1
  409519:	mov    DWORD PTR [rbp-0xb0],edi
  40951f:	cmp    DWORD PTR [rbp-0x24],0x0
  409523:	jbe    40958c <flatcc_builder_create_string@@Base+0x1ac>
  409529:	lea    rax,[rip+0x3010]        # 40c540 <flatcc_builder_padding_base@@Base>
  409530:	mov    ecx,DWORD PTR [rbp-0x24]
  409533:	mov    edx,ecx
  409535:	add    rdx,QWORD PTR [rbp-0xb8]
  40953c:	mov    QWORD PTR [rbp-0xb8],rdx
  409543:	lea    rdx,[rbp-0xb8]
  40954a:	mov    rsi,rdx
  40954d:	add    rsi,0x10
  409551:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409558:	shl    rdi,0x4
  40955c:	add    rsi,rdi
  40955f:	mov    QWORD PTR [rsi],rax
  409562:	mov    ecx,DWORD PTR [rbp-0x24]
  409565:	mov    eax,ecx
  409567:	add    rdx,0x10
  40956b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409572:	shl    rsi,0x4
  409576:	add    rdx,rsi
  409579:	mov    QWORD PTR [rdx+0x8],rax
  40957d:	mov    ecx,DWORD PTR [rbp-0xb0]
  409583:	add    ecx,0x1
  409586:	mov    DWORD PTR [rbp-0xb0],ecx
  40958c:	mov    rdi,QWORD PTR [rbp-0x10]
  409590:	lea    rsi,[rbp-0xb8]
  409597:	call   405400 <flatcc_builder_embed_buffer@@Base+0x430>
  40959c:	mov    DWORD PTR [rbp-0x4],eax
  40959f:	mov    eax,DWORD PTR [rbp-0x4]
  4095a2:	add    rsp,0xc0
  4095a9:	pop    rbp
  4095aa:	ret    
  4095ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004095b0 <flatcc_builder_create_string_str@@Base>:
  4095b0:	push   rbp
  4095b1:	mov    rbp,rsp
  4095b4:	sub    rsp,0x20
  4095b8:	mov    QWORD PTR [rbp-0x8],rdi
  4095bc:	mov    QWORD PTR [rbp-0x10],rsi
  4095c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4095c4:	mov    rsi,QWORD PTR [rbp-0x10]
  4095c8:	mov    rax,QWORD PTR [rbp-0x10]
  4095cc:	mov    QWORD PTR [rbp-0x18],rdi
  4095d0:	mov    rdi,rax
  4095d3:	mov    QWORD PTR [rbp-0x20],rsi
  4095d7:	call   403050 <strlen@plt>
  4095dc:	mov    rdi,QWORD PTR [rbp-0x18]
  4095e0:	mov    rsi,QWORD PTR [rbp-0x20]
  4095e4:	mov    rdx,rax
  4095e7:	call   4093e0 <flatcc_builder_create_string@@Base>
  4095ec:	add    rsp,0x20
  4095f0:	pop    rbp
  4095f1:	ret    
  4095f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095fc:	nop    DWORD PTR [rax+0x0]

0000000000409600 <flatcc_builder_create_string_strn@@Base>:
  409600:	push   rbp
  409601:	mov    rbp,rsp
  409604:	sub    rsp,0x30
  409608:	mov    QWORD PTR [rbp-0x8],rdi
  40960c:	mov    QWORD PTR [rbp-0x10],rsi
  409610:	mov    QWORD PTR [rbp-0x18],rdx
  409614:	mov    rdi,QWORD PTR [rbp-0x8]
  409618:	mov    rsi,QWORD PTR [rbp-0x10]
  40961c:	mov    rdx,QWORD PTR [rbp-0x10]
  409620:	mov    rax,QWORD PTR [rbp-0x18]
  409624:	mov    QWORD PTR [rbp-0x20],rdi
  409628:	mov    rdi,rdx
  40962b:	mov    QWORD PTR [rbp-0x28],rsi
  40962f:	mov    rsi,rax
  409632:	call   406980 <flatcc_builder_append_string_strn@@Base+0x50>
  409637:	mov    rdi,QWORD PTR [rbp-0x20]
  40963b:	mov    rsi,QWORD PTR [rbp-0x28]
  40963f:	mov    rdx,rax
  409642:	call   4093e0 <flatcc_builder_create_string@@Base>
  409647:	add    rsp,0x30
  40964b:	pop    rbp
  40964c:	ret    
  40964d:	nop    DWORD PTR [rax]

0000000000409650 <flatcc_builder_end_string@@Base>:
  409650:	push   rbp
  409651:	mov    rbp,rsp
  409654:	sub    rsp,0x20
  409658:	mov    QWORD PTR [rbp-0x10],rdi
  40965c:	mov    rdi,QWORD PTR [rbp-0x10]
  409660:	mov    rdi,QWORD PTR [rdi+0x30]
  409664:	movzx  eax,WORD PTR [rdi+0xe]
  409668:	cmp    eax,0x6
  40966b:	jne    409676 <flatcc_builder_end_string@@Base+0x26>
  409671:	jmp    409695 <flatcc_builder_end_string@@Base+0x45>
  409676:	lea    rdi,[rip+0x3614]        # 40cc91 <flatcc_builder_padding_base@@Base+0x751>
  40967d:	lea    rsi,[rip+0x30ce]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  409684:	mov    edx,0x6c4
  409689:	lea    rcx,[rip+0x3eb4]        # 40d544 <flatcc_builder_padding_base@@Base+0x1004>
  409690:	call   403070 <__assert_fail@plt>
  409695:	mov    rax,QWORD PTR [rbp-0x10]
  409699:	mov    rax,QWORD PTR [rax+0x30]
  40969d:	mov    ecx,DWORD PTR [rax+0x14]
  4096a0:	mov    rax,QWORD PTR [rbp-0x10]
  4096a4:	cmp    ecx,DWORD PTR [rax+0x20]
  4096a7:	jne    4096b2 <flatcc_builder_end_string@@Base+0x62>
  4096ad:	jmp    4096d1 <flatcc_builder_end_string@@Base+0x81>
  4096b2:	lea    rdi,[rip+0x3ece]        # 40d587 <flatcc_builder_padding_base@@Base+0x1047>
  4096b9:	lea    rsi,[rip+0x3092]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  4096c0:	mov    edx,0x6c5
  4096c5:	lea    rcx,[rip+0x3e78]        # 40d544 <flatcc_builder_padding_base@@Base+0x1004>
  4096cc:	call   403070 <__assert_fail@plt>
  4096d1:	mov    rdi,QWORD PTR [rbp-0x10]
  4096d5:	mov    rax,QWORD PTR [rbp-0x10]
  4096d9:	mov    rsi,QWORD PTR [rax+0x18]
  4096dd:	mov    rax,QWORD PTR [rbp-0x10]
  4096e1:	mov    ecx,DWORD PTR [rax+0x20]
  4096e4:	mov    edx,ecx
  4096e6:	call   4093e0 <flatcc_builder_create_string@@Base>
  4096eb:	xor    ecx,ecx
  4096ed:	mov    DWORD PTR [rbp-0x14],eax
  4096f0:	cmp    ecx,eax
  4096f2:	jne    409704 <flatcc_builder_end_string@@Base+0xb4>
  4096f8:	mov    DWORD PTR [rbp-0x4],0x0
  4096ff:	jmp    409713 <flatcc_builder_end_string@@Base+0xc3>
  409704:	mov    rdi,QWORD PTR [rbp-0x10]
  409708:	call   405f80 <flatcc_builder_end_buffer@@Base+0x160>
  40970d:	mov    eax,DWORD PTR [rbp-0x14]
  409710:	mov    DWORD PTR [rbp-0x4],eax
  409713:	mov    eax,DWORD PTR [rbp-0x4]
  409716:	add    rsp,0x20
  40971a:	pop    rbp
  40971b:	ret    
  40971c:	nop    DWORD PTR [rax+0x0]

0000000000409720 <flatcc_builder_string_edit@@Base>:
  409720:	push   rbp
  409721:	mov    rbp,rsp
  409724:	mov    QWORD PTR [rbp-0x8],rdi
  409728:	mov    rdi,QWORD PTR [rbp-0x8]
  40972c:	mov    rax,QWORD PTR [rdi+0x18]
  409730:	pop    rbp
  409731:	ret    
  409732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40973c:	nop    DWORD PTR [rax+0x0]

0000000000409740 <flatcc_builder_string_len@@Base>:
  409740:	push   rbp
  409741:	mov    rbp,rsp
  409744:	mov    QWORD PTR [rbp-0x8],rdi
  409748:	mov    rdi,QWORD PTR [rbp-0x8]
  40974c:	mov    rdi,QWORD PTR [rdi+0x30]
  409750:	mov    eax,DWORD PTR [rdi+0x14]
  409753:	pop    rbp
  409754:	ret    
  409755:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40975f:	nop
  409760:	push   rbp
  409761:	mov    rbp,rsp
  409764:	sub    rsp,0x20
  409768:	mov    ax,cx
  40976b:	mov    r8w,dx
  40976f:	mov    QWORD PTR [rbp-0x10],rdi
  409773:	mov    DWORD PTR [rbp-0x14],esi
  409776:	mov    WORD PTR [rbp-0x16],r8w
  40977b:	mov    WORD PTR [rbp-0x18],ax
  40977f:	mov    rdi,QWORD PTR [rbp-0x10]
  409783:	mov    ecx,DWORD PTR [rdi+0x20]
  409786:	movzx  edx,WORD PTR [rbp-0x16]
  40978a:	add    ecx,edx
  40978c:	sub    ecx,0x1
  40978f:	movzx  edx,WORD PTR [rbp-0x16]
  409793:	sub    edx,0x1
  409796:	xor    edx,0xffffffff
  409799:	and    ecx,edx
  40979b:	mov    DWORD PTR [rbp-0x1c],ecx
  40979e:	mov    ecx,DWORD PTR [rbp-0x1c]
  4097a1:	add    ecx,DWORD PTR [rbp-0x14]
  4097a4:	mov    rdi,QWORD PTR [rbp-0x10]
  4097a8:	mov    DWORD PTR [rdi+0x20],ecx
  4097ab:	mov    rdi,QWORD PTR [rbp-0x10]
  4097af:	cmp    ecx,DWORD PTR [rdi+0x24]
  4097b2:	jb     4097ef <flatcc_builder_string_len@@Base+0xaf>
  4097b8:	mov    rdi,QWORD PTR [rbp-0x10]
  4097bc:	mov    rax,QWORD PTR [rbp-0x10]
  4097c0:	mov    ecx,DWORD PTR [rax+0x20]
  4097c3:	add    ecx,0x1
  4097c6:	mov    ecx,ecx
  4097c8:	mov    esi,ecx
  4097ca:	mov    edx,0xfffc
  4097cf:	call   40a160 <flatcc_builder_get_emit_context@@Base+0x50>
  4097d4:	cmp    eax,0x0
  4097d7:	je     4097ea <flatcc_builder_string_len@@Base+0xaa>
  4097dd:	mov    QWORD PTR [rbp-0x8],0x0
  4097e5:	jmp    409847 <flatcc_builder_string_len@@Base+0x107>
  4097ea:	jmp    4097ef <flatcc_builder_string_len@@Base+0xaf>
  4097ef:	mov    eax,DWORD PTR [rbp-0x1c]
  4097f2:	mov    ecx,eax
  4097f4:	add    rcx,0x4
  4097f8:	mov    dx,cx
  4097fb:	mov    rcx,QWORD PTR [rbp-0x10]
  4097ff:	mov    rcx,QWORD PTR [rcx+0x8]
  409803:	movzx  eax,WORD PTR [rbp-0x18]
  409807:	mov    esi,eax
  409809:	mov    WORD PTR [rcx+rsi*2],dx
  40980d:	movzx  eax,WORD PTR [rbp-0x18]
  409811:	mov    rcx,QWORD PTR [rbp-0x10]
  409815:	movzx  edi,WORD PTR [rcx+0x10]
  409819:	cmp    eax,edi
  40981b:	jl     409833 <flatcc_builder_string_len@@Base+0xf3>
  409821:	movzx  eax,WORD PTR [rbp-0x18]
  409825:	add    eax,0x1
  409828:	mov    cx,ax
  40982b:	mov    rdx,QWORD PTR [rbp-0x10]
  40982f:	mov    WORD PTR [rdx+0x10],cx
  409833:	mov    rax,QWORD PTR [rbp-0x10]
  409837:	mov    rax,QWORD PTR [rax+0x18]
  40983b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40983e:	mov    edx,ecx
  409840:	add    rax,rdx
  409843:	mov    QWORD PTR [rbp-0x8],rax
  409847:	mov    rax,QWORD PTR [rbp-0x8]
  40984b:	add    rsp,0x20
  40984f:	pop    rbp
  409850:	ret    
  409851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40985b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409860 <flatcc_builder_table_edit@@Base>:
  409860:	push   rbp
  409861:	mov    rbp,rsp
  409864:	sub    rsp,0x10
  409868:	mov    QWORD PTR [rbp-0x8],rdi
  40986c:	mov    QWORD PTR [rbp-0x10],rsi
  409870:	mov    rsi,QWORD PTR [rbp-0x8]
  409874:	mov    rsi,QWORD PTR [rsi+0x30]
  409878:	movzx  eax,WORD PTR [rsi+0xe]
  40987c:	cmp    eax,0x3
  40987f:	jne    40988a <flatcc_builder_table_edit@@Base+0x2a>
  409885:	jmp    4098a9 <flatcc_builder_table_edit@@Base+0x49>
  40988a:	lea    rdi,[rip+0x36f0]        # 40cf81 <flatcc_builder_padding_base@@Base+0xa41>
  409891:	lea    rsi,[rip+0x2eba]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  409898:	mov    edx,0x702
  40989d:	lea    rcx,[rip+0x3d95]        # 40d639 <flatcc_builder_padding_base@@Base+0x10f9>
  4098a4:	call   403070 <__assert_fail@plt>
  4098a9:	xor    eax,eax
  4098ab:	mov    ecx,eax
  4098ad:	mov    rdx,QWORD PTR [rbp-0x8]
  4098b1:	mov    rdx,QWORD PTR [rdx+0x18]
  4098b5:	mov    rsi,QWORD PTR [rbp-0x8]
  4098b9:	mov    eax,DWORD PTR [rsi+0x20]
  4098bc:	mov    esi,eax
  4098be:	add    rdx,rsi
  4098c1:	sub    rcx,QWORD PTR [rbp-0x10]
  4098c5:	add    rdx,rcx
  4098c8:	mov    rax,rdx
  4098cb:	add    rsp,0x10
  4098cf:	pop    rbp
  4098d0:	ret    
  4098d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004098e0 <flatcc_builder_table_add_copy@@Base>:
  4098e0:	push   rbp
  4098e1:	mov    rbp,rsp
  4098e4:	sub    rsp,0x30
  4098e8:	mov    ax,r8w
  4098ec:	mov    QWORD PTR [rbp-0x8],rdi
  4098f0:	mov    DWORD PTR [rbp-0xc],esi
  4098f3:	mov    QWORD PTR [rbp-0x18],rdx
  4098f7:	mov    QWORD PTR [rbp-0x20],rcx
  4098fb:	mov    WORD PTR [rbp-0x22],ax
  4098ff:	mov    rdi,QWORD PTR [rbp-0x8]
  409903:	mov    esi,DWORD PTR [rbp-0xc]
  409906:	mov    rdx,QWORD PTR [rbp-0x20]
  40990a:	movzx  ecx,WORD PTR [rbp-0x22]
  40990e:	call   408a20 <flatcc_builder_table_add@@Base>
  409913:	mov    QWORD PTR [rbp-0x30],rax
  409917:	cmp    rax,0x0
  40991b:	je     409932 <flatcc_builder_table_add_copy@@Base+0x52>
  409921:	mov    rdi,QWORD PTR [rbp-0x30]
  409925:	mov    rsi,QWORD PTR [rbp-0x18]
  409929:	mov    rdx,QWORD PTR [rbp-0x20]
  40992d:	call   4030c0 <memcpy@plt>
  409932:	mov    rax,QWORD PTR [rbp-0x30]
  409936:	add    rsp,0x30
  40993a:	pop    rbp
  40993b:	ret    
  40993c:	nop    DWORD PTR [rax+0x0]
  409940:	push   rbp
  409941:	mov    rbp,rsp
  409944:	sub    rsp,0x20
  409948:	mov    ax,si
  40994b:	mov    QWORD PTR [rbp-0x10],rdi
  40994f:	mov    WORD PTR [rbp-0x12],ax
  409953:	mov    rdi,QWORD PTR [rbp-0x10]
  409957:	mov    esi,DWORD PTR [rdi+0x20]
  40995a:	mov    edi,esi
  40995c:	add    rdi,0x4
  409960:	sub    rdi,0x1
  409964:	and    rdi,0xfffffffffffffffc
  409968:	mov    esi,edi
  40996a:	mov    DWORD PTR [rbp-0x18],esi
  40996d:	mov    esi,DWORD PTR [rbp-0x18]
  409970:	mov    edi,esi
  409972:	add    rdi,0x4
  409976:	mov    esi,edi
  409978:	mov    rdi,QWORD PTR [rbp-0x10]
  40997c:	mov    DWORD PTR [rdi+0x20],esi
  40997f:	mov    rdi,QWORD PTR [rbp-0x10]
  409983:	cmp    esi,DWORD PTR [rdi+0x24]
  409986:	jbe    4099be <flatcc_builder_table_add_copy@@Base+0xde>
  40998c:	mov    rdi,QWORD PTR [rbp-0x10]
  409990:	mov    rax,QWORD PTR [rbp-0x10]
  409994:	mov    ecx,DWORD PTR [rax+0x20]
  409997:	mov    esi,ecx
  409999:	mov    edx,0xfffc
  40999e:	call   40a160 <flatcc_builder_get_emit_context@@Base+0x50>
  4099a3:	cmp    eax,0x0
  4099a6:	je     4099b9 <flatcc_builder_table_add_copy@@Base+0xd9>
  4099ac:	mov    QWORD PTR [rbp-0x8],0x0
  4099b4:	jmp    409a30 <flatcc_builder_table_add_copy@@Base+0x150>
  4099b9:	jmp    4099be <flatcc_builder_table_add_copy@@Base+0xde>
  4099be:	mov    eax,DWORD PTR [rbp-0x18]
  4099c1:	mov    ecx,eax
  4099c3:	add    rcx,0x4
  4099c7:	mov    dx,cx
  4099ca:	mov    rcx,QWORD PTR [rbp-0x10]
  4099ce:	mov    rcx,QWORD PTR [rcx+0x8]
  4099d2:	movzx  eax,WORD PTR [rbp-0x12]
  4099d6:	mov    esi,eax
  4099d8:	mov    WORD PTR [rcx+rsi*2],dx
  4099dc:	movzx  eax,WORD PTR [rbp-0x12]
  4099e0:	mov    rcx,QWORD PTR [rbp-0x10]
  4099e4:	movzx  edi,WORD PTR [rcx+0x10]
  4099e8:	cmp    eax,edi
  4099ea:	jl     409a02 <flatcc_builder_table_add_copy@@Base+0x122>
  4099f0:	movzx  eax,WORD PTR [rbp-0x12]
  4099f4:	add    eax,0x1
  4099f7:	mov    cx,ax
  4099fa:	mov    rdx,QWORD PTR [rbp-0x10]
  4099fe:	mov    WORD PTR [rdx+0x10],cx
  409a02:	mov    eax,DWORD PTR [rbp-0x18]
  409a05:	mov    cx,ax
  409a08:	mov    rdx,QWORD PTR [rbp-0x10]
  409a0c:	mov    rsi,QWORD PTR [rdx]
  409a0f:	mov    rdi,rsi
  409a12:	add    rdi,0x2
  409a16:	mov    QWORD PTR [rdx],rdi
  409a19:	mov    WORD PTR [rsi],cx
  409a1c:	mov    rdx,QWORD PTR [rbp-0x10]
  409a20:	mov    rdx,QWORD PTR [rdx+0x18]
  409a24:	mov    eax,DWORD PTR [rbp-0x18]
  409a27:	mov    esi,eax
  409a29:	add    rdx,rsi
  409a2c:	mov    QWORD PTR [rbp-0x8],rdx
  409a30:	mov    rax,QWORD PTR [rbp-0x8]
  409a34:	add    rsp,0x20
  409a38:	pop    rbp
  409a39:	ret    
  409a3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409a40 <flatcc_builder_push_buffer_alignment@@Base>:
  409a40:	push   rbp
  409a41:	mov    rbp,rsp
  409a44:	mov    QWORD PTR [rbp-0x8],rdi
  409a48:	mov    rdi,QWORD PTR [rbp-0x8]
  409a4c:	mov    ax,WORD PTR [rdi+0xe8]
  409a53:	mov    WORD PTR [rbp-0xa],ax
  409a57:	mov    rdi,QWORD PTR [rbp-0x8]
  409a5b:	mov    WORD PTR [rdi+0xe8],0x4
  409a64:	movzx  eax,WORD PTR [rbp-0xa]
  409a68:	pop    rbp
  409a69:	ret    
  409a6a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409a70 <flatcc_builder_pop_buffer_alignment@@Base>:
  409a70:	push   rbp
  409a71:	mov    rbp,rsp
  409a74:	sub    rsp,0x10
  409a78:	mov    ax,si
  409a7b:	mov    QWORD PTR [rbp-0x8],rdi
  409a7f:	mov    WORD PTR [rbp-0xa],ax
  409a83:	mov    rdi,QWORD PTR [rbp-0x8]
  409a87:	movzx  esi,WORD PTR [rbp-0xa]
  409a8b:	call   405910 <flatcc_builder_create_buffer@@Base+0x410>
  409a90:	add    rsp,0x10
  409a94:	pop    rbp
  409a95:	ret    
  409a96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409aa0 <flatcc_builder_get_buffer_alignment@@Base>:
  409aa0:	push   rbp
  409aa1:	mov    rbp,rsp
  409aa4:	mov    QWORD PTR [rbp-0x8],rdi
  409aa8:	mov    rdi,QWORD PTR [rbp-0x8]
  409aac:	movzx  eax,WORD PTR [rdi+0xe8]
  409ab3:	pop    rbp
  409ab4:	ret    
  409ab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409abf:	nop

0000000000409ac0 <flatcc_builder_set_vtable_clustering@@Base>:
  409ac0:	push   rbp
  409ac1:	mov    rbp,rsp
  409ac4:	mov    QWORD PTR [rbp-0x8],rdi
  409ac8:	mov    DWORD PTR [rbp-0xc],esi
  409acb:	cmp    DWORD PTR [rbp-0xc],0x0
  409acf:	setne  al
  409ad2:	xor    al,0xff
  409ad4:	and    al,0x1
  409ad6:	movzx  esi,al
  409ad9:	mov    rdi,QWORD PTR [rbp-0x8]
  409add:	mov    DWORD PTR [rdi+0x124],esi
  409ae3:	pop    rbp
  409ae4:	ret    
  409ae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409aef:	nop

0000000000409af0 <flatcc_builder_set_block_align@@Base>:
  409af0:	push   rbp
  409af1:	mov    rbp,rsp
  409af4:	mov    ax,si
  409af7:	mov    QWORD PTR [rbp-0x8],rdi
  409afb:	mov    WORD PTR [rbp-0xa],ax
  409aff:	mov    ax,WORD PTR [rbp-0xa]
  409b03:	mov    rdi,QWORD PTR [rbp-0x8]
  409b07:	mov    WORD PTR [rdi+0xec],ax
  409b0e:	pop    rbp
  409b0f:	ret    

0000000000409b10 <flatcc_builder_get_level@@Base>:
  409b10:	push   rbp
  409b11:	mov    rbp,rsp
  409b14:	mov    QWORD PTR [rbp-0x8],rdi
  409b18:	mov    rdi,QWORD PTR [rbp-0x8]
  409b1c:	mov    eax,DWORD PTR [rdi+0x104]
  409b22:	pop    rbp
  409b23:	ret    
  409b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b2e:	xchg   ax,ax

0000000000409b30 <flatcc_builder_set_max_level@@Base>:
  409b30:	push   rbp
  409b31:	mov    rbp,rsp
  409b34:	mov    QWORD PTR [rbp-0x8],rdi
  409b38:	mov    DWORD PTR [rbp-0xc],esi
  409b3b:	mov    esi,DWORD PTR [rbp-0xc]
  409b3e:	mov    rdi,QWORD PTR [rbp-0x8]
  409b42:	mov    DWORD PTR [rdi+0x120],esi
  409b48:	mov    rdi,QWORD PTR [rbp-0x8]
  409b4c:	mov    esi,DWORD PTR [rdi+0x108]
  409b52:	mov    rdi,QWORD PTR [rbp-0x8]
  409b56:	cmp    esi,DWORD PTR [rdi+0x120]
  409b5c:	jge    409b76 <flatcc_builder_set_max_level@@Base+0x46>
  409b62:	mov    rax,QWORD PTR [rbp-0x8]
  409b66:	mov    ecx,DWORD PTR [rax+0x120]
  409b6c:	mov    rax,QWORD PTR [rbp-0x8]
  409b70:	mov    DWORD PTR [rax+0x108],ecx
  409b76:	pop    rbp
  409b77:	ret    
  409b78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409b80 <flatcc_builder_get_buffer_size@@Base>:
  409b80:	push   rbp
  409b81:	mov    rbp,rsp
  409b84:	mov    QWORD PTR [rbp-0x8],rdi
  409b88:	mov    rdi,QWORD PTR [rbp-0x8]
  409b8c:	mov    eax,DWORD PTR [rdi+0xf4]
  409b92:	mov    rdi,QWORD PTR [rbp-0x8]
  409b96:	sub    eax,DWORD PTR [rdi+0xf0]
  409b9c:	cdqe   
  409b9e:	pop    rbp
  409b9f:	ret    

0000000000409ba0 <flatcc_builder_get_buffer_start@@Base>:
  409ba0:	push   rbp
  409ba1:	mov    rbp,rsp
  409ba4:	mov    QWORD PTR [rbp-0x8],rdi
  409ba8:	mov    rdi,QWORD PTR [rbp-0x8]
  409bac:	mov    eax,DWORD PTR [rdi+0xf0]
  409bb2:	pop    rbp
  409bb3:	ret    
  409bb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bbe:	xchg   ax,ax

0000000000409bc0 <flatcc_builder_get_buffer_end@@Base>:
  409bc0:	push   rbp
  409bc1:	mov    rbp,rsp
  409bc4:	mov    QWORD PTR [rbp-0x8],rdi
  409bc8:	mov    rdi,QWORD PTR [rbp-0x8]
  409bcc:	mov    eax,DWORD PTR [rdi+0xf4]
  409bd2:	pop    rbp
  409bd3:	ret    
  409bd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bde:	xchg   ax,ax

0000000000409be0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409be0:	push   rbp
  409be1:	mov    rbp,rsp
  409be4:	mov    QWORD PTR [rbp-0x8],rdi
  409be8:	mov    QWORD PTR [rbp-0x10],rsi
  409bec:	mov    rsi,QWORD PTR [rbp-0x10]
  409bf0:	mov    rdi,QWORD PTR [rbp-0x8]
  409bf4:	mov    QWORD PTR [rdi+0x118],rsi
  409bfb:	pop    rbp
  409bfc:	ret    
  409bfd:	nop    DWORD PTR [rax]

0000000000409c00 <flatcc_builder_set_identifier@@Base>:
  409c00:	push   rbp
  409c01:	mov    rbp,rsp
  409c04:	mov    QWORD PTR [rbp-0x8],rdi
  409c08:	mov    QWORD PTR [rbp-0x10],rsi
  409c0c:	mov    rsi,QWORD PTR [rbp-0x8]
  409c10:	add    rsi,0x110
  409c17:	cmp    QWORD PTR [rbp-0x10],0x0
  409c1c:	mov    QWORD PTR [rbp-0x18],rsi
  409c20:	je     409c33 <flatcc_builder_set_identifier@@Base+0x33>
  409c26:	mov    rax,QWORD PTR [rbp-0x10]
  409c2a:	mov    QWORD PTR [rbp-0x20],rax
  409c2e:	jmp    409c43 <flatcc_builder_set_identifier@@Base+0x43>
  409c33:	lea    rax,[rip+0x2906]        # 40c540 <flatcc_builder_padding_base@@Base>
  409c3a:	mov    QWORD PTR [rbp-0x20],rax
  409c3e:	jmp    409c43 <flatcc_builder_set_identifier@@Base+0x43>
  409c43:	mov    rax,QWORD PTR [rbp-0x20]
  409c47:	mov    ecx,DWORD PTR [rax]
  409c49:	mov    rax,QWORD PTR [rbp-0x18]
  409c4d:	mov    DWORD PTR [rax],ecx
  409c4f:	pop    rbp
  409c50:	ret    
  409c51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409c60 <flatcc_builder_get_type@@Base>:
  409c60:	push   rbp
  409c61:	mov    rbp,rsp
  409c64:	mov    QWORD PTR [rbp-0x8],rdi
  409c68:	mov    rdi,QWORD PTR [rbp-0x8]
  409c6c:	cmp    QWORD PTR [rdi+0x30],0x0
  409c71:	je     409c8b <flatcc_builder_get_type@@Base+0x2b>
  409c77:	mov    rax,QWORD PTR [rbp-0x8]
  409c7b:	mov    rax,QWORD PTR [rax+0x30]
  409c7f:	movzx  ecx,WORD PTR [rax+0xe]
  409c83:	mov    DWORD PTR [rbp-0xc],ecx
  409c86:	jmp    409c95 <flatcc_builder_get_type@@Base+0x35>
  409c8b:	xor    eax,eax
  409c8d:	mov    DWORD PTR [rbp-0xc],eax
  409c90:	jmp    409c95 <flatcc_builder_get_type@@Base+0x35>
  409c95:	mov    eax,DWORD PTR [rbp-0xc]
  409c98:	pop    rbp
  409c99:	ret    
  409c9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409ca0 <flatcc_builder_get_type_at@@Base>:
  409ca0:	push   rbp
  409ca1:	mov    rbp,rsp
  409ca4:	mov    QWORD PTR [rbp-0x10],rdi
  409ca8:	mov    DWORD PTR [rbp-0x14],esi
  409cab:	cmp    DWORD PTR [rbp-0x14],0x1
  409caf:	jl     409cc8 <flatcc_builder_get_type_at@@Base+0x28>
  409cb5:	mov    eax,DWORD PTR [rbp-0x14]
  409cb8:	mov    rcx,QWORD PTR [rbp-0x10]
  409cbc:	cmp    eax,DWORD PTR [rcx+0x104]
  409cc2:	jle    409cd4 <flatcc_builder_get_type_at@@Base+0x34>
  409cc8:	mov    DWORD PTR [rbp-0x4],0x0
  409ccf:	jmp    409cfa <flatcc_builder_get_type_at@@Base+0x5a>
  409cd4:	mov    rax,QWORD PTR [rbp-0x10]
  409cd8:	mov    rax,QWORD PTR [rax+0x30]
  409cdc:	mov    ecx,DWORD PTR [rbp-0x14]
  409cdf:	mov    rdx,QWORD PTR [rbp-0x10]
  409ce3:	sub    ecx,DWORD PTR [rdx+0x104]
  409ce9:	movsxd rdx,ecx
  409cec:	imul   rdx,rdx,0x24
  409cf0:	add    rax,rdx
  409cf3:	movzx  ecx,WORD PTR [rax+0xe]
  409cf7:	mov    DWORD PTR [rbp-0x4],ecx
  409cfa:	mov    eax,DWORD PTR [rbp-0x4]
  409cfd:	pop    rbp
  409cfe:	ret    
  409cff:	nop

0000000000409d00 <flatcc_builder_get_direct_buffer@@Base>:
  409d00:	push   rbp
  409d01:	mov    rbp,rsp
  409d04:	sub    rsp,0x20
  409d08:	mov    QWORD PTR [rbp-0x10],rdi
  409d0c:	mov    QWORD PTR [rbp-0x18],rsi
  409d10:	mov    rsi,QWORD PTR [rbp-0x10]
  409d14:	cmp    DWORD PTR [rsi+0x128],0x0
  409d1b:	je     409d40 <flatcc_builder_get_direct_buffer@@Base+0x40>
  409d21:	mov    rax,QWORD PTR [rbp-0x10]
  409d25:	add    rax,0x130
  409d2b:	mov    rsi,QWORD PTR [rbp-0x18]
  409d2f:	mov    rdi,rax
  409d32:	call   409d70 <flatcc_builder_get_direct_buffer@@Base+0x70>
  409d37:	mov    QWORD PTR [rbp-0x8],rax
  409d3b:	jmp    409d63 <flatcc_builder_get_direct_buffer@@Base+0x63>
  409d40:	cmp    QWORD PTR [rbp-0x18],0x0
  409d45:	je     409d56 <flatcc_builder_get_direct_buffer@@Base+0x56>
  409d4b:	mov    rax,QWORD PTR [rbp-0x18]
  409d4f:	mov    QWORD PTR [rax],0x0
  409d56:	jmp    409d5b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  409d5b:	mov    QWORD PTR [rbp-0x8],0x0
  409d63:	mov    rax,QWORD PTR [rbp-0x8]
  409d67:	add    rsp,0x20
  409d6b:	pop    rbp
  409d6c:	ret    
  409d6d:	nop    DWORD PTR [rax]
  409d70:	push   rbp
  409d71:	mov    rbp,rsp
  409d74:	mov    QWORD PTR [rbp-0x10],rdi
  409d78:	mov    QWORD PTR [rbp-0x18],rsi
  409d7c:	mov    rsi,QWORD PTR [rbp-0x10]
  409d80:	mov    rsi,QWORD PTR [rsi]
  409d83:	mov    rdi,QWORD PTR [rbp-0x10]
  409d87:	cmp    rsi,QWORD PTR [rdi+0x8]
  409d8b:	jne    409dbc <flatcc_builder_get_direct_buffer@@Base+0xbc>
  409d91:	cmp    QWORD PTR [rbp-0x18],0x0
  409d96:	je     409dab <flatcc_builder_get_direct_buffer@@Base+0xab>
  409d9c:	mov    rax,QWORD PTR [rbp-0x10]
  409da0:	mov    rax,QWORD PTR [rax+0x30]
  409da4:	mov    rcx,QWORD PTR [rbp-0x18]
  409da8:	mov    QWORD PTR [rcx],rax
  409dab:	mov    rax,QWORD PTR [rbp-0x10]
  409daf:	mov    rax,QWORD PTR [rax+0x10]
  409db3:	mov    QWORD PTR [rbp-0x8],rax
  409db7:	jmp    409dda <flatcc_builder_get_direct_buffer@@Base+0xda>
  409dbc:	cmp    QWORD PTR [rbp-0x18],0x0
  409dc1:	je     409dd2 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  409dc7:	mov    rax,QWORD PTR [rbp-0x18]
  409dcb:	mov    QWORD PTR [rax],0x0
  409dd2:	mov    QWORD PTR [rbp-0x8],0x0
  409dda:	mov    rax,QWORD PTR [rbp-0x8]
  409dde:	pop    rbp
  409ddf:	ret    

0000000000409de0 <flatcc_builder_copy_buffer@@Base>:
  409de0:	push   rbp
  409de1:	mov    rbp,rsp
  409de4:	sub    rsp,0x20
  409de8:	mov    QWORD PTR [rbp-0x10],rdi
  409dec:	mov    QWORD PTR [rbp-0x18],rsi
  409df0:	mov    QWORD PTR [rbp-0x20],rdx
  409df4:	mov    rdx,QWORD PTR [rbp-0x10]
  409df8:	cmp    DWORD PTR [rdx+0x128],0x0
  409dff:	jne    409e12 <flatcc_builder_copy_buffer@@Base+0x32>
  409e05:	mov    QWORD PTR [rbp-0x8],0x0
  409e0d:	jmp    409e67 <flatcc_builder_copy_buffer@@Base+0x87>
  409e12:	mov    rax,QWORD PTR [rbp-0x10]
  409e16:	add    rax,0x130
  409e1c:	mov    rsi,QWORD PTR [rbp-0x18]
  409e20:	mov    rdx,QWORD PTR [rbp-0x20]
  409e24:	mov    rdi,rax
  409e27:	call   40aa80 <flatcc_emitter_copy_buffer@@Base>
  409e2c:	mov    QWORD PTR [rbp-0x18],rax
  409e30:	cmp    QWORD PTR [rbp-0x18],0x0
  409e35:	je     409e40 <flatcc_builder_copy_buffer@@Base+0x60>
  409e3b:	jmp    409e5f <flatcc_builder_copy_buffer@@Base+0x7f>
  409e40:	lea    rdi,[rip+0x2b79]        # 40c9c0 <flatcc_builder_padding_base@@Base+0x480>
  409e47:	lea    rsi,[rip+0x2904]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  409e4e:	mov    edx,0x786
  409e53:	lea    rcx,[rip+0x386a]        # 40d6c4 <flatcc_builder_padding_base@@Base+0x1184>
  409e5a:	call   403070 <__assert_fail@plt>
  409e5f:	mov    rax,QWORD PTR [rbp-0x18]
  409e63:	mov    QWORD PTR [rbp-0x8],rax
  409e67:	mov    rax,QWORD PTR [rbp-0x8]
  409e6b:	add    rsp,0x20
  409e6f:	pop    rbp
  409e70:	ret    
  409e71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409e80 <flatcc_builder_finalize_buffer@@Base>:
  409e80:	push   rbp
  409e81:	mov    rbp,rsp
  409e84:	sub    rsp,0x20
  409e88:	mov    QWORD PTR [rbp-0x8],rdi
  409e8c:	mov    QWORD PTR [rbp-0x10],rsi
  409e90:	mov    rdi,QWORD PTR [rbp-0x8]
  409e94:	call   409b80 <flatcc_builder_get_buffer_size@@Base>
  409e99:	mov    QWORD PTR [rbp-0x20],rax
  409e9d:	cmp    QWORD PTR [rbp-0x10],0x0
  409ea2:	je     409eb3 <flatcc_builder_finalize_buffer@@Base+0x33>
  409ea8:	mov    rax,QWORD PTR [rbp-0x20]
  409eac:	mov    rcx,QWORD PTR [rbp-0x10]
  409eb0:	mov    QWORD PTR [rcx],rax
  409eb3:	mov    rdi,QWORD PTR [rbp-0x20]
  409eb7:	call   4030d0 <malloc@plt>
  409ebc:	mov    QWORD PTR [rbp-0x18],rax
  409ec0:	cmp    QWORD PTR [rbp-0x18],0x0
  409ec5:	jne    409eea <flatcc_builder_finalize_buffer@@Base+0x6a>
  409ecb:	lea    rdi,[rip+0x3a40]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  409ed2:	lea    rsi,[rip+0x2879]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  409ed9:	mov    edx,0x798
  409ede:	lea    rcx,[rip+0x3824]        # 40d709 <flatcc_builder_padding_base@@Base+0x11c9>
  409ee5:	call   403070 <__assert_fail@plt>
  409eea:	mov    rdi,QWORD PTR [rbp-0x8]
  409eee:	mov    rsi,QWORD PTR [rbp-0x18]
  409ef2:	mov    rdx,QWORD PTR [rbp-0x20]
  409ef6:	call   409de0 <flatcc_builder_copy_buffer@@Base>
  409efb:	cmp    rax,0x0
  409eff:	jne    409f24 <flatcc_builder_finalize_buffer@@Base+0xa4>
  409f05:	lea    rdi,[rip+0x3a06]        # 40d912 <flatcc_builder_padding_base@@Base+0x13d2>
  409f0c:	lea    rsi,[rip+0x283f]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  409f13:	mov    edx,0x79c
  409f18:	lea    rcx,[rip+0x37ea]        # 40d709 <flatcc_builder_padding_base@@Base+0x11c9>
  409f1f:	call   403070 <__assert_fail@plt>
  409f24:	jmp    409f29 <flatcc_builder_finalize_buffer@@Base+0xa9>
  409f29:	cmp    QWORD PTR [rbp-0x18],0x0
  409f2e:	jne    409f4a <flatcc_builder_finalize_buffer@@Base+0xca>
  409f34:	cmp    QWORD PTR [rbp-0x10],0x0
  409f39:	je     409f4a <flatcc_builder_finalize_buffer@@Base+0xca>
  409f3f:	mov    rax,QWORD PTR [rbp-0x10]
  409f43:	mov    QWORD PTR [rax],0x0
  409f4a:	mov    rax,QWORD PTR [rbp-0x18]
  409f4e:	add    rsp,0x20
  409f52:	pop    rbp
  409f53:	ret    
  409f54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f5e:	xchg   ax,ax

0000000000409f60 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409f60:	push   rbp
  409f61:	mov    rbp,rsp
  409f64:	sub    rsp,0x30
  409f68:	mov    QWORD PTR [rbp-0x8],rdi
  409f6c:	mov    QWORD PTR [rbp-0x10],rsi
  409f70:	mov    rdi,QWORD PTR [rbp-0x8]
  409f74:	call   409b80 <flatcc_builder_get_buffer_size@@Base>
  409f79:	mov    QWORD PTR [rbp-0x28],rax
  409f7d:	cmp    QWORD PTR [rbp-0x10],0x0
  409f82:	je     409f93 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  409f88:	mov    rax,QWORD PTR [rbp-0x28]
  409f8c:	mov    rcx,QWORD PTR [rbp-0x10]
  409f90:	mov    QWORD PTR [rcx],rax
  409f93:	mov    rdi,QWORD PTR [rbp-0x8]
  409f97:	call   409aa0 <flatcc_builder_get_buffer_alignment@@Base>
  409f9c:	movzx  ecx,ax
  409f9f:	mov    edi,ecx
  409fa1:	mov    QWORD PTR [rbp-0x20],rdi
  409fa5:	mov    rdi,QWORD PTR [rbp-0x28]
  409fa9:	add    rdi,QWORD PTR [rbp-0x20]
  409fad:	sub    rdi,0x1
  409fb1:	mov    rdx,QWORD PTR [rbp-0x20]
  409fb5:	sub    rdx,0x1
  409fb9:	xor    rdx,0xffffffffffffffff
  409fbd:	and    rdi,rdx
  409fc0:	mov    QWORD PTR [rbp-0x28],rdi
  409fc4:	mov    rdi,QWORD PTR [rbp-0x20]
  409fc8:	mov    rsi,QWORD PTR [rbp-0x28]
  409fcc:	call   40a050 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  409fd1:	mov    QWORD PTR [rbp-0x18],rax
  409fd5:	cmp    QWORD PTR [rbp-0x18],0x0
  409fda:	jne    409fe5 <flatcc_builder_finalize_aligned_buffer@@Base+0x85>
  409fe0:	jmp    40a01b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  409fe5:	mov    rdi,QWORD PTR [rbp-0x8]
  409fe9:	mov    rsi,QWORD PTR [rbp-0x18]
  409fed:	mov    rdx,QWORD PTR [rbp-0x28]
  409ff1:	call   409de0 <flatcc_builder_copy_buffer@@Base>
  409ff6:	cmp    rax,0x0
  409ffa:	jne    40a016 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40a000:	mov    rdi,QWORD PTR [rbp-0x18]
  40a004:	call   403030 <free@plt>
  40a009:	mov    QWORD PTR [rbp-0x18],0x0
  40a011:	jmp    40a01b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a016:	jmp    40a01b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a01b:	cmp    QWORD PTR [rbp-0x18],0x0
  40a020:	jne    40a03c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a026:	cmp    QWORD PTR [rbp-0x10],0x0
  40a02b:	je     40a03c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a031:	mov    rax,QWORD PTR [rbp-0x10]
  40a035:	mov    QWORD PTR [rax],0x0
  40a03c:	mov    rax,QWORD PTR [rbp-0x18]
  40a040:	add    rsp,0x30
  40a044:	pop    rbp
  40a045:	ret    
  40a046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a050:	push   rbp
  40a051:	mov    rbp,rsp
  40a054:	sub    rsp,0x20
  40a058:	mov    QWORD PTR [rbp-0x8],rdi
  40a05c:	mov    QWORD PTR [rbp-0x10],rsi
  40a060:	mov    QWORD PTR [rbp-0x20],0x0
  40a068:	cmp    QWORD PTR [rbp-0x8],0x8
  40a06d:	jae    40a07b <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40a073:	mov    QWORD PTR [rbp-0x8],0x8
  40a07b:	mov    rsi,QWORD PTR [rbp-0x8]
  40a07f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a083:	lea    rdi,[rbp-0x20]
  40a087:	call   4030f0 <posix_memalign@plt>
  40a08c:	mov    DWORD PTR [rbp-0x14],eax
  40a08f:	cmp    DWORD PTR [rbp-0x14],0x0
  40a093:	je     40a0b5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a099:	cmp    QWORD PTR [rbp-0x20],0x0
  40a09e:	je     40a0b5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a0a4:	mov    rdi,QWORD PTR [rbp-0x20]
  40a0a8:	call   403030 <free@plt>
  40a0ad:	mov    QWORD PTR [rbp-0x20],0x0
  40a0b5:	mov    rax,QWORD PTR [rbp-0x20]
  40a0b9:	add    rsp,0x20
  40a0bd:	pop    rbp
  40a0be:	ret    
  40a0bf:	nop

000000000040a0c0 <flatcc_builder_aligned_alloc@@Base>:
  40a0c0:	push   rbp
  40a0c1:	mov    rbp,rsp
  40a0c4:	sub    rsp,0x10
  40a0c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a0cc:	mov    QWORD PTR [rbp-0x10],rsi
  40a0d0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0d4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a0d8:	call   40a050 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a0dd:	add    rsp,0x10
  40a0e1:	pop    rbp
  40a0e2:	ret    
  40a0e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0ed:	nop    DWORD PTR [rax]

000000000040a0f0 <flatcc_builder_aligned_free@@Base>:
  40a0f0:	push   rbp
  40a0f1:	mov    rbp,rsp
  40a0f4:	sub    rsp,0x10
  40a0f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a0fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a100:	call   403030 <free@plt>
  40a105:	add    rsp,0x10
  40a109:	pop    rbp
  40a10a:	ret    
  40a10b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a110 <flatcc_builder_get_emit_context@@Base>:
  40a110:	push   rbp
  40a111:	mov    rbp,rsp
  40a114:	mov    QWORD PTR [rbp-0x8],rdi
  40a118:	mov    rdi,QWORD PTR [rbp-0x8]
  40a11c:	mov    rax,QWORD PTR [rdi+0x38]
  40a120:	pop    rbp
  40a121:	ret    
  40a122:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a12c:	nop    DWORD PTR [rax+0x0]
  40a130:	push   rbp
  40a131:	mov    rbp,rsp
  40a134:	mov    ax,si
  40a137:	mov    QWORD PTR [rbp-0x8],rdi
  40a13b:	mov    WORD PTR [rbp-0xa],ax
  40a13f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a143:	mov    esi,DWORD PTR [rdi+0xf4]
  40a149:	movzx  ecx,WORD PTR [rbp-0xa]
  40a14d:	sub    ecx,0x1
  40a150:	and    esi,ecx
  40a152:	mov    eax,esi
  40a154:	pop    rbp
  40a155:	ret    
  40a156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a160:	push   rbp
  40a161:	mov    rbp,rsp
  40a164:	sub    rsp,0x30
  40a168:	mov    QWORD PTR [rbp-0x10],rdi
  40a16c:	mov    QWORD PTR [rbp-0x18],rsi
  40a170:	mov    DWORD PTR [rbp-0x1c],edx
  40a173:	mov    rsi,QWORD PTR [rbp-0x10]
  40a177:	add    rsi,0x58
  40a17b:	add    rsi,0x10
  40a17f:	mov    QWORD PTR [rbp-0x28],rsi
  40a183:	mov    rsi,QWORD PTR [rbp-0x10]
  40a187:	mov    rsi,QWORD PTR [rsi+0x50]
  40a18b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a18f:	mov    rdi,QWORD PTR [rdi+0x40]
  40a193:	mov    rax,QWORD PTR [rbp-0x28]
  40a197:	mov    rcx,QWORD PTR [rbp-0x10]
  40a19b:	mov    edx,DWORD PTR [rcx+0x28]
  40a19e:	mov    ecx,edx
  40a1a0:	add    rcx,QWORD PTR [rbp-0x18]
  40a1a4:	mov    QWORD PTR [rbp-0x30],rsi
  40a1a8:	mov    rsi,rax
  40a1ab:	mov    rdx,rcx
  40a1ae:	mov    r8d,0x1
  40a1b4:	mov    ecx,r8d
  40a1b7:	mov    rax,QWORD PTR [rbp-0x30]
  40a1bb:	call   rax
  40a1bd:	cmp    eax,0x0
  40a1c0:	je     40a1d2 <flatcc_builder_get_emit_context@@Base+0xc2>
  40a1c6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a1cd:	jmp    40a1e5 <flatcc_builder_get_emit_context@@Base+0xd5>
  40a1d2:	mov    rdi,QWORD PTR [rbp-0x10]
  40a1d6:	mov    esi,DWORD PTR [rbp-0x1c]
  40a1d9:	call   4060c0 <flatcc_builder_start_struct@@Base+0x80>
  40a1de:	mov    DWORD PTR [rbp-0x4],0x0
  40a1e5:	mov    eax,DWORD PTR [rbp-0x4]
  40a1e8:	add    rsp,0x30
  40a1ec:	pop    rbp
  40a1ed:	ret    
  40a1ee:	xchg   ax,ax
  40a1f0:	push   rbp
  40a1f1:	mov    rbp,rsp
  40a1f4:	sub    rsp,0x30
  40a1f8:	mov    QWORD PTR [rbp-0x10],rdi
  40a1fc:	mov    rdi,QWORD PTR [rbp-0x10]
  40a200:	add    rdi,0x58
  40a204:	add    rdi,0x50
  40a208:	mov    QWORD PTR [rbp-0x18],rdi
  40a20c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a210:	cmp    DWORD PTR [rdi+0xe4],0x0
  40a217:	jne    40a222 <flatcc_builder_get_emit_context@@Base+0x112>
  40a21d:	jmp    40a241 <flatcc_builder_get_emit_context@@Base+0x131>
  40a222:	lea    rdi,[rip+0x36ad]        # 40d8d6 <flatcc_builder_padding_base@@Base+0x1396>
  40a229:	lea    rsi,[rip+0x2522]        # 40c752 <flatcc_builder_padding_base@@Base+0x212>
  40a230:	mov    edx,0x156
  40a235:	lea    rcx,[rip+0x36a9]        # 40d8e5 <flatcc_builder_padding_base@@Base+0x13a5>
  40a23c:	call   403070 <__assert_fail@plt>
  40a241:	mov    eax,0x10
  40a246:	mov    ecx,eax
  40a248:	xor    r8d,r8d
  40a24b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a24f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a253:	mov    eax,DWORD PTR [rdx+0xe4]
  40a259:	mov    edx,eax
  40a25b:	mov    esi,0x6
  40a260:	call   404cd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40a265:	cmp    rax,0x0
  40a269:	jne    40a27b <flatcc_builder_get_emit_context@@Base+0x16b>
  40a26f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a276:	jmp    40a35a <flatcc_builder_get_emit_context@@Base+0x24a>
  40a27b:	mov    rax,QWORD PTR [rbp-0x10]
  40a27f:	mov    DWORD PTR [rax+0xe4],0x10
  40a289:	mov    QWORD PTR [rbp-0x20],0x100
  40a291:	mov    rax,QWORD PTR [rbp-0x10]
  40a295:	mov    rax,QWORD PTR [rax+0x50]
  40a299:	mov    rcx,QWORD PTR [rbp-0x10]
  40a29d:	mov    rdi,QWORD PTR [rcx+0x40]
  40a2a1:	mov    rsi,QWORD PTR [rbp-0x18]
  40a2a5:	mov    rdx,QWORD PTR [rbp-0x20]
  40a2a9:	mov    ecx,0x1
  40a2ae:	mov    r8d,0x5
  40a2b4:	call   rax
  40a2b6:	cmp    eax,0x0
  40a2b9:	je     40a2cb <flatcc_builder_get_emit_context@@Base+0x1bb>
  40a2bf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a2c6:	jmp    40a35a <flatcc_builder_get_emit_context@@Base+0x24a>
  40a2cb:	jmp    40a2d0 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40a2d0:	mov    rax,QWORD PTR [rbp-0x20]
  40a2d4:	shl    rax,0x1
  40a2d8:	mov    rcx,QWORD PTR [rbp-0x18]
  40a2dc:	cmp    rax,QWORD PTR [rcx+0x8]
  40a2e0:	ja     40a2f7 <flatcc_builder_get_emit_context@@Base+0x1e7>
  40a2e6:	mov    rax,QWORD PTR [rbp-0x20]
  40a2ea:	shl    rax,0x1
  40a2ee:	mov    QWORD PTR [rbp-0x20],rax
  40a2f2:	jmp    40a2d0 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40a2f7:	mov    rax,QWORD PTR [rbp-0x20]
  40a2fb:	shr    rax,0x2
  40a2ff:	mov    QWORD PTR [rbp-0x20],rax
  40a303:	mov    QWORD PTR [rbp-0x28],0x0
  40a30b:	mov    eax,0x1
  40a310:	mov    ecx,eax
  40a312:	mov    rdx,QWORD PTR [rbp-0x28]
  40a316:	mov    QWORD PTR [rbp-0x30],rcx
  40a31a:	mov    rcx,rdx
  40a31d:	mov    rdx,QWORD PTR [rbp-0x30]
  40a321:	shl    rdx,cl
  40a324:	cmp    rdx,QWORD PTR [rbp-0x20]
  40a328:	jae    40a344 <flatcc_builder_get_emit_context@@Base+0x234>
  40a32e:	jmp    40a333 <flatcc_builder_get_emit_context@@Base+0x223>
  40a333:	mov    rax,QWORD PTR [rbp-0x28]
  40a337:	add    rax,0x1
  40a33b:	mov    QWORD PTR [rbp-0x28],rax
  40a33f:	jmp    40a30b <flatcc_builder_get_emit_context@@Base+0x1fb>
  40a344:	mov    rax,QWORD PTR [rbp-0x28]
  40a348:	mov    rcx,QWORD PTR [rbp-0x10]
  40a34c:	mov    QWORD PTR [rcx+0xd8],rax
  40a353:	mov    DWORD PTR [rbp-0x4],0x0
  40a35a:	mov    eax,DWORD PTR [rbp-0x4]
  40a35d:	add    rsp,0x30
  40a361:	pop    rbp
  40a362:	ret    
  40a363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a36d:	nop    DWORD PTR [rax]

000000000040a370 <flatcc_emitter_recycle_page@@Base>:
  40a370:	push   rbp
  40a371:	mov    rbp,rsp
  40a374:	mov    QWORD PTR [rbp-0x10],rdi
  40a378:	mov    QWORD PTR [rbp-0x18],rsi
  40a37c:	mov    rsi,QWORD PTR [rbp-0x18]
  40a380:	mov    rdi,QWORD PTR [rbp-0x10]
  40a384:	cmp    rsi,QWORD PTR [rdi]
  40a387:	je     40a39f <flatcc_emitter_recycle_page@@Base+0x2f>
  40a38d:	mov    rax,QWORD PTR [rbp-0x18]
  40a391:	mov    rcx,QWORD PTR [rbp-0x10]
  40a395:	cmp    rax,QWORD PTR [rcx+0x8]
  40a399:	jne    40a3ab <flatcc_emitter_recycle_page@@Base+0x3b>
  40a39f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a3a6:	jmp    40a443 <flatcc_emitter_recycle_page@@Base+0xd3>
  40a3ab:	mov    rax,QWORD PTR [rbp-0x18]
  40a3af:	mov    rax,QWORD PTR [rax+0xb88]
  40a3b6:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3ba:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a3c1:	mov    QWORD PTR [rcx+0xb88],rax
  40a3c8:	mov    rax,QWORD PTR [rbp-0x18]
  40a3cc:	mov    rax,QWORD PTR [rax+0xb80]
  40a3d3:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3d7:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a3de:	mov    QWORD PTR [rcx+0xb80],rax
  40a3e5:	mov    rax,QWORD PTR [rbp-0x10]
  40a3e9:	mov    rax,QWORD PTR [rax]
  40a3ec:	mov    rax,QWORD PTR [rax+0xb88]
  40a3f3:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3f7:	mov    QWORD PTR [rcx+0xb88],rax
  40a3fe:	mov    rax,QWORD PTR [rbp-0x10]
  40a402:	mov    rax,QWORD PTR [rax]
  40a405:	mov    rcx,QWORD PTR [rbp-0x18]
  40a409:	mov    QWORD PTR [rcx+0xb80],rax
  40a410:	mov    rax,QWORD PTR [rbp-0x18]
  40a414:	mov    rcx,QWORD PTR [rbp-0x18]
  40a418:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a41f:	mov    QWORD PTR [rcx+0xb80],rax
  40a426:	mov    rax,QWORD PTR [rbp-0x18]
  40a42a:	mov    rcx,QWORD PTR [rbp-0x18]
  40a42e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a435:	mov    QWORD PTR [rcx+0xb88],rax
  40a43c:	mov    DWORD PTR [rbp-0x4],0x0
  40a443:	mov    eax,DWORD PTR [rbp-0x4]
  40a446:	pop    rbp
  40a447:	ret    
  40a448:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a450 <flatcc_emitter_reset@@Base>:
  40a450:	push   rbp
  40a451:	mov    rbp,rsp
  40a454:	sub    rsp,0x20
  40a458:	mov    QWORD PTR [rbp-0x8],rdi
  40a45c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a460:	mov    rdi,QWORD PTR [rdi]
  40a463:	mov    QWORD PTR [rbp-0x10],rdi
  40a467:	mov    rdi,QWORD PTR [rbp-0x8]
  40a46b:	cmp    QWORD PTR [rdi],0x0
  40a46f:	jne    40a47a <flatcc_emitter_reset@@Base+0x2a>
  40a475:	jmp    40a5e9 <flatcc_emitter_reset@@Base+0x199>
  40a47a:	xor    eax,eax
  40a47c:	mov    rcx,QWORD PTR [rbp-0x8]
  40a480:	mov    rcx,QWORD PTR [rcx]
  40a483:	mov    rdx,QWORD PTR [rbp-0x8]
  40a487:	mov    QWORD PTR [rdx+0x8],rcx
  40a48b:	mov    rcx,QWORD PTR [rbp-0x8]
  40a48f:	mov    rcx,QWORD PTR [rcx]
  40a492:	add    rcx,0x5c0
  40a499:	mov    rdx,QWORD PTR [rbp-0x8]
  40a49d:	mov    QWORD PTR [rdx+0x10],rcx
  40a4a1:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4a5:	mov    rcx,QWORD PTR [rcx+0x10]
  40a4a9:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4ad:	mov    QWORD PTR [rdx+0x20],rcx
  40a4b1:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4b5:	mov    QWORD PTR [rcx+0x18],0x5c0
  40a4bd:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4c1:	mov    QWORD PTR [rcx+0x28],0x5c0
  40a4c9:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4cd:	mov    rcx,QWORD PTR [rcx+0x18]
  40a4d1:	mov    esi,ecx
  40a4d3:	sub    eax,esi
  40a4d5:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4d9:	mov    rcx,QWORD PTR [rcx]
  40a4dc:	mov    DWORD PTR [rcx+0xb90],eax
  40a4e2:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4e6:	cmp    QWORD PTR [rcx+0x40],0x0
  40a4eb:	jne    40a501 <flatcc_emitter_reset@@Base+0xb1>
  40a4f1:	mov    rax,QWORD PTR [rbp-0x8]
  40a4f5:	mov    rax,QWORD PTR [rax+0x30]
  40a4f9:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4fd:	mov    QWORD PTR [rcx+0x40],rax
  40a501:	mov    rax,QWORD PTR [rbp-0x8]
  40a505:	imul   rax,QWORD PTR [rax+0x40],0x3
  40a50a:	shr    rax,0x2
  40a50e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a512:	mov    rcx,QWORD PTR [rcx+0x30]
  40a516:	shr    rcx,0x2
  40a51a:	add    rax,rcx
  40a51d:	mov    rcx,QWORD PTR [rbp-0x8]
  40a521:	mov    QWORD PTR [rcx+0x40],rax
  40a525:	mov    rax,QWORD PTR [rbp-0x8]
  40a529:	mov    QWORD PTR [rax+0x30],0x0
  40a531:	xor    eax,eax
  40a533:	mov    cl,al
  40a535:	mov    rdx,QWORD PTR [rbp-0x8]
  40a539:	mov    rdx,QWORD PTR [rdx+0x40]
  40a53d:	shl    rdx,0x1
  40a541:	mov    rsi,QWORD PTR [rbp-0x8]
  40a545:	cmp    rdx,QWORD PTR [rsi+0x38]
  40a549:	mov    BYTE PTR [rbp-0x11],cl
  40a54c:	jae    40a56e <flatcc_emitter_reset@@Base+0x11e>
  40a552:	mov    rax,QWORD PTR [rbp-0x8]
  40a556:	mov    rax,QWORD PTR [rax+0x8]
  40a55a:	mov    rax,QWORD PTR [rax+0xb80]
  40a561:	mov    rcx,QWORD PTR [rbp-0x8]
  40a565:	cmp    rax,QWORD PTR [rcx]
  40a568:	setne  dl
  40a56b:	mov    BYTE PTR [rbp-0x11],dl
  40a56e:	mov    al,BYTE PTR [rbp-0x11]
  40a571:	test   al,0x1
  40a573:	jne    40a57e <flatcc_emitter_reset@@Base+0x12e>
  40a579:	jmp    40a5e9 <flatcc_emitter_reset@@Base+0x199>
  40a57e:	mov    rax,QWORD PTR [rbp-0x8]
  40a582:	mov    rax,QWORD PTR [rax+0x8]
  40a586:	mov    rax,QWORD PTR [rax+0xb80]
  40a58d:	mov    QWORD PTR [rbp-0x10],rax
  40a591:	mov    rax,QWORD PTR [rbp-0x10]
  40a595:	mov    rax,QWORD PTR [rax+0xb80]
  40a59c:	mov    rcx,QWORD PTR [rbp-0x8]
  40a5a0:	mov    rcx,QWORD PTR [rcx+0x8]
  40a5a4:	mov    QWORD PTR [rcx+0xb80],rax
  40a5ab:	mov    rax,QWORD PTR [rbp-0x8]
  40a5af:	mov    rax,QWORD PTR [rax+0x8]
  40a5b3:	mov    rcx,QWORD PTR [rbp-0x10]
  40a5b7:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a5be:	mov    QWORD PTR [rcx+0xb88],rax
  40a5c5:	mov    rax,QWORD PTR [rbp-0x10]
  40a5c9:	mov    rdi,rax
  40a5cc:	call   403030 <free@plt>
  40a5d1:	mov    rax,QWORD PTR [rbp-0x8]
  40a5d5:	mov    rcx,QWORD PTR [rax+0x38]
  40a5d9:	sub    rcx,0xb80
  40a5e0:	mov    QWORD PTR [rax+0x38],rcx
  40a5e4:	jmp    40a531 <flatcc_emitter_reset@@Base+0xe1>
  40a5e9:	add    rsp,0x20
  40a5ed:	pop    rbp
  40a5ee:	ret    
  40a5ef:	nop

000000000040a5f0 <flatcc_emitter_clear@@Base>:
  40a5f0:	push   rbp
  40a5f1:	mov    rbp,rsp
  40a5f4:	sub    rsp,0x10
  40a5f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a5fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a600:	mov    rdi,QWORD PTR [rdi]
  40a603:	mov    QWORD PTR [rbp-0x10],rdi
  40a607:	cmp    QWORD PTR [rbp-0x10],0x0
  40a60c:	jne    40a617 <flatcc_emitter_clear@@Base+0x27>
  40a612:	jmp    40a687 <flatcc_emitter_clear@@Base+0x97>
  40a617:	mov    rax,QWORD PTR [rbp-0x10]
  40a61b:	mov    rax,QWORD PTR [rax+0xb88]
  40a622:	mov    QWORD PTR [rax+0xb80],0x0
  40a62d:	mov    rax,QWORD PTR [rbp-0x10]
  40a631:	cmp    QWORD PTR [rax+0xb80],0x0
  40a639:	je     40a666 <flatcc_emitter_clear@@Base+0x76>
  40a63f:	mov    rax,QWORD PTR [rbp-0x10]
  40a643:	mov    rax,QWORD PTR [rax+0xb80]
  40a64a:	mov    QWORD PTR [rbp-0x10],rax
  40a64e:	mov    rax,QWORD PTR [rbp-0x10]
  40a652:	mov    rax,QWORD PTR [rax+0xb88]
  40a659:	mov    rdi,rax
  40a65c:	call   403030 <free@plt>
  40a661:	jmp    40a62d <flatcc_emitter_clear@@Base+0x3d>
  40a666:	mov    rax,QWORD PTR [rbp-0x10]
  40a66a:	mov    rdi,rax
  40a66d:	call   403030 <free@plt>
  40a672:	xor    esi,esi
  40a674:	mov    ecx,0x48
  40a679:	mov    edx,ecx
  40a67b:	mov    rax,QWORD PTR [rbp-0x8]
  40a67f:	mov    rdi,rax
  40a682:	call   403080 <memset@plt>
  40a687:	add    rsp,0x10
  40a68b:	pop    rbp
  40a68c:	ret    
  40a68d:	nop    DWORD PTR [rax]

000000000040a690 <flatcc_emitter@@Base>:
  40a690:	push   rbp
  40a691:	mov    rbp,rsp
  40a694:	sub    rsp,0x40
  40a698:	mov    QWORD PTR [rbp-0x10],rdi
  40a69c:	mov    QWORD PTR [rbp-0x18],rsi
  40a6a0:	mov    DWORD PTR [rbp-0x1c],edx
  40a6a3:	mov    DWORD PTR [rbp-0x20],ecx
  40a6a6:	mov    QWORD PTR [rbp-0x28],r8
  40a6aa:	mov    rsi,QWORD PTR [rbp-0x10]
  40a6ae:	mov    QWORD PTR [rbp-0x30],rsi
  40a6b2:	mov    rsi,QWORD PTR [rbp-0x28]
  40a6b6:	mov    rdi,QWORD PTR [rbp-0x30]
  40a6ba:	add    rsi,QWORD PTR [rdi+0x30]
  40a6be:	mov    QWORD PTR [rdi+0x30],rsi
  40a6c2:	cmp    DWORD PTR [rbp-0x20],0x0
  40a6c6:	jge    40a788 <flatcc_emitter@@Base+0xf8>
  40a6cc:	mov    rax,QWORD PTR [rbp-0x28]
  40a6d0:	mov    rcx,QWORD PTR [rbp-0x30]
  40a6d4:	cmp    rax,QWORD PTR [rcx+0x18]
  40a6d8:	ja     40a71c <flatcc_emitter@@Base+0x8c>
  40a6de:	xor    eax,eax
  40a6e0:	mov    ecx,eax
  40a6e2:	mov    rdx,QWORD PTR [rbp-0x28]
  40a6e6:	mov    rsi,QWORD PTR [rbp-0x30]
  40a6ea:	mov    rdi,QWORD PTR [rsi+0x10]
  40a6ee:	sub    rcx,rdx
  40a6f1:	add    rdi,rcx
  40a6f4:	mov    QWORD PTR [rsi+0x10],rdi
  40a6f8:	mov    rcx,QWORD PTR [rbp-0x28]
  40a6fc:	mov    rdx,QWORD PTR [rbp-0x30]
  40a700:	mov    rsi,QWORD PTR [rdx+0x18]
  40a704:	sub    rsi,rcx
  40a707:	mov    QWORD PTR [rdx+0x18],rsi
  40a70b:	mov    rcx,QWORD PTR [rbp-0x30]
  40a70f:	mov    rcx,QWORD PTR [rcx+0x10]
  40a713:	mov    QWORD PTR [rbp-0x38],rcx
  40a717:	jmp    40a836 <flatcc_emitter@@Base+0x1a6>
  40a71c:	mov    eax,DWORD PTR [rbp-0x1c]
  40a71f:	mov    rcx,QWORD PTR [rbp-0x18]
  40a723:	movsxd rdx,eax
  40a726:	shl    rdx,0x4
  40a72a:	add    rcx,rdx
  40a72d:	mov    QWORD PTR [rbp-0x18],rcx
  40a731:	mov    eax,DWORD PTR [rbp-0x1c]
  40a734:	mov    ecx,eax
  40a736:	add    ecx,0xffffffff
  40a739:	mov    DWORD PTR [rbp-0x1c],ecx
  40a73c:	cmp    eax,0x0
  40a73f:	je     40a783 <flatcc_emitter@@Base+0xf3>
  40a745:	mov    rax,QWORD PTR [rbp-0x18]
  40a749:	add    rax,0xfffffffffffffff0
  40a74d:	mov    QWORD PTR [rbp-0x18],rax
  40a751:	mov    rdi,QWORD PTR [rbp-0x30]
  40a755:	mov    rax,QWORD PTR [rbp-0x18]
  40a759:	mov    rsi,QWORD PTR [rax]
  40a75c:	mov    rax,QWORD PTR [rbp-0x18]
  40a760:	mov    rdx,QWORD PTR [rax+0x8]
  40a764:	call   40a8a0 <flatcc_emitter@@Base+0x210>
  40a769:	cmp    eax,0x0
  40a76c:	je     40a77e <flatcc_emitter@@Base+0xee>
  40a772:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a779:	jmp    40a88f <flatcc_emitter@@Base+0x1ff>
  40a77e:	jmp    40a731 <flatcc_emitter@@Base+0xa1>
  40a783:	jmp    40a82a <flatcc_emitter@@Base+0x19a>
  40a788:	mov    rax,QWORD PTR [rbp-0x28]
  40a78c:	mov    rcx,QWORD PTR [rbp-0x30]
  40a790:	cmp    rax,QWORD PTR [rcx+0x28]
  40a794:	ja     40a7ce <flatcc_emitter@@Base+0x13e>
  40a79a:	mov    rax,QWORD PTR [rbp-0x30]
  40a79e:	mov    rax,QWORD PTR [rax+0x20]
  40a7a2:	mov    QWORD PTR [rbp-0x38],rax
  40a7a6:	mov    rax,QWORD PTR [rbp-0x28]
  40a7aa:	mov    rcx,QWORD PTR [rbp-0x30]
  40a7ae:	add    rax,QWORD PTR [rcx+0x20]
  40a7b2:	mov    QWORD PTR [rcx+0x20],rax
  40a7b6:	mov    rax,QWORD PTR [rbp-0x28]
  40a7ba:	mov    rcx,QWORD PTR [rbp-0x30]
  40a7be:	mov    rdx,QWORD PTR [rcx+0x28]
  40a7c2:	sub    rdx,rax
  40a7c5:	mov    QWORD PTR [rcx+0x28],rdx
  40a7c9:	jmp    40a836 <flatcc_emitter@@Base+0x1a6>
  40a7ce:	jmp    40a7d3 <flatcc_emitter@@Base+0x143>
  40a7d3:	mov    eax,DWORD PTR [rbp-0x1c]
  40a7d6:	mov    ecx,eax
  40a7d8:	add    ecx,0xffffffff
  40a7db:	mov    DWORD PTR [rbp-0x1c],ecx
  40a7de:	cmp    eax,0x0
  40a7e1:	je     40a825 <flatcc_emitter@@Base+0x195>
  40a7e7:	mov    rdi,QWORD PTR [rbp-0x30]
  40a7eb:	mov    rax,QWORD PTR [rbp-0x18]
  40a7ef:	mov    rsi,QWORD PTR [rax]
  40a7f2:	mov    rax,QWORD PTR [rbp-0x18]
  40a7f6:	mov    rdx,QWORD PTR [rax+0x8]
  40a7fa:	call   40a9a0 <flatcc_emitter@@Base+0x310>
  40a7ff:	cmp    eax,0x0
  40a802:	je     40a814 <flatcc_emitter@@Base+0x184>
  40a808:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a80f:	jmp    40a88f <flatcc_emitter@@Base+0x1ff>
  40a814:	mov    rax,QWORD PTR [rbp-0x18]
  40a818:	add    rax,0x10
  40a81c:	mov    QWORD PTR [rbp-0x18],rax
  40a820:	jmp    40a7d3 <flatcc_emitter@@Base+0x143>
  40a825:	jmp    40a82a <flatcc_emitter@@Base+0x19a>
  40a82a:	mov    DWORD PTR [rbp-0x4],0x0
  40a831:	jmp    40a88f <flatcc_emitter@@Base+0x1ff>
  40a836:	jmp    40a83b <flatcc_emitter@@Base+0x1ab>
  40a83b:	mov    eax,DWORD PTR [rbp-0x1c]
  40a83e:	mov    ecx,eax
  40a840:	add    ecx,0xffffffff
  40a843:	mov    DWORD PTR [rbp-0x1c],ecx
  40a846:	cmp    eax,0x0
  40a849:	je     40a888 <flatcc_emitter@@Base+0x1f8>
  40a84f:	mov    rdi,QWORD PTR [rbp-0x38]
  40a853:	mov    rax,QWORD PTR [rbp-0x18]
  40a857:	mov    rsi,QWORD PTR [rax]
  40a85a:	mov    rax,QWORD PTR [rbp-0x18]
  40a85e:	mov    rdx,QWORD PTR [rax+0x8]
  40a862:	call   4030c0 <memcpy@plt>
  40a867:	mov    rax,QWORD PTR [rbp-0x18]
  40a86b:	mov    rax,QWORD PTR [rax+0x8]
  40a86f:	add    rax,QWORD PTR [rbp-0x38]
  40a873:	mov    QWORD PTR [rbp-0x38],rax
  40a877:	mov    rax,QWORD PTR [rbp-0x18]
  40a87b:	add    rax,0x10
  40a87f:	mov    QWORD PTR [rbp-0x18],rax
  40a883:	jmp    40a83b <flatcc_emitter@@Base+0x1ab>
  40a888:	mov    DWORD PTR [rbp-0x4],0x0
  40a88f:	mov    eax,DWORD PTR [rbp-0x4]
  40a892:	add    rsp,0x40
  40a896:	pop    rbp
  40a897:	ret    
  40a898:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8a0:	push   rbp
  40a8a1:	mov    rbp,rsp
  40a8a4:	sub    rsp,0x30
  40a8a8:	mov    QWORD PTR [rbp-0x10],rdi
  40a8ac:	mov    QWORD PTR [rbp-0x18],rsi
  40a8b0:	mov    QWORD PTR [rbp-0x20],rdx
  40a8b4:	mov    rdx,QWORD PTR [rbp-0x20]
  40a8b8:	add    rdx,QWORD PTR [rbp-0x18]
  40a8bc:	mov    QWORD PTR [rbp-0x18],rdx
  40a8c0:	cmp    QWORD PTR [rbp-0x20],0x0
  40a8c5:	je     40a98f <flatcc_emitter@@Base+0x2ff>
  40a8cb:	mov    rax,QWORD PTR [rbp-0x20]
  40a8cf:	mov    QWORD PTR [rbp-0x28],rax
  40a8d3:	mov    rax,QWORD PTR [rbp-0x28]
  40a8d7:	mov    rcx,QWORD PTR [rbp-0x10]
  40a8db:	cmp    rax,QWORD PTR [rcx+0x18]
  40a8df:	jbe    40a924 <flatcc_emitter@@Base+0x294>
  40a8e5:	mov    rax,QWORD PTR [rbp-0x10]
  40a8e9:	mov    rax,QWORD PTR [rax+0x18]
  40a8ed:	mov    QWORD PTR [rbp-0x28],rax
  40a8f1:	cmp    QWORD PTR [rbp-0x28],0x0
  40a8f6:	jne    40a91f <flatcc_emitter@@Base+0x28f>
  40a8fc:	mov    rdi,QWORD PTR [rbp-0x10]
  40a900:	call   40abd0 <flatcc_emitter_copy_buffer@@Base+0x150>
  40a905:	cmp    eax,0x0
  40a908:	je     40a91a <flatcc_emitter@@Base+0x28a>
  40a90e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a915:	jmp    40a996 <flatcc_emitter@@Base+0x306>
  40a91a:	jmp    40a8c0 <flatcc_emitter@@Base+0x230>
  40a91f:	jmp    40a924 <flatcc_emitter@@Base+0x294>
  40a924:	xor    eax,eax
  40a926:	mov    ecx,eax
  40a928:	mov    rdx,QWORD PTR [rbp-0x28]
  40a92c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a930:	mov    rdi,QWORD PTR [rsi+0x10]
  40a934:	mov    r8,rcx
  40a937:	sub    r8,rdx
  40a93a:	add    rdi,r8
  40a93d:	mov    QWORD PTR [rsi+0x10],rdi
  40a941:	mov    rdx,QWORD PTR [rbp-0x28]
  40a945:	mov    rsi,QWORD PTR [rbp-0x10]
  40a949:	mov    rdi,QWORD PTR [rsi+0x18]
  40a94d:	sub    rdi,rdx
  40a950:	mov    QWORD PTR [rsi+0x18],rdi
  40a954:	mov    rdx,QWORD PTR [rbp-0x28]
  40a958:	mov    rsi,QWORD PTR [rbp-0x18]
  40a95c:	sub    rcx,rdx
  40a95f:	add    rsi,rcx
  40a962:	mov    QWORD PTR [rbp-0x18],rsi
  40a966:	mov    rcx,QWORD PTR [rbp-0x28]
  40a96a:	mov    rdx,QWORD PTR [rbp-0x20]
  40a96e:	sub    rdx,rcx
  40a971:	mov    QWORD PTR [rbp-0x20],rdx
  40a975:	mov    rcx,QWORD PTR [rbp-0x10]
  40a979:	mov    rdi,QWORD PTR [rcx+0x10]
  40a97d:	mov    rsi,QWORD PTR [rbp-0x18]
  40a981:	mov    rdx,QWORD PTR [rbp-0x28]
  40a985:	call   4030c0 <memcpy@plt>
  40a98a:	jmp    40a8c0 <flatcc_emitter@@Base+0x230>
  40a98f:	mov    DWORD PTR [rbp-0x4],0x0
  40a996:	mov    eax,DWORD PTR [rbp-0x4]
  40a999:	add    rsp,0x30
  40a99d:	pop    rbp
  40a99e:	ret    
  40a99f:	nop
  40a9a0:	push   rbp
  40a9a1:	mov    rbp,rsp
  40a9a4:	sub    rsp,0x30
  40a9a8:	mov    QWORD PTR [rbp-0x10],rdi
  40a9ac:	mov    QWORD PTR [rbp-0x18],rsi
  40a9b0:	mov    QWORD PTR [rbp-0x20],rdx
  40a9b4:	cmp    QWORD PTR [rbp-0x20],0x0
  40a9b9:	je     40aa70 <flatcc_emitter@@Base+0x3e0>
  40a9bf:	mov    rax,QWORD PTR [rbp-0x20]
  40a9c3:	mov    QWORD PTR [rbp-0x28],rax
  40a9c7:	mov    rax,QWORD PTR [rbp-0x28]
  40a9cb:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9cf:	cmp    rax,QWORD PTR [rcx+0x28]
  40a9d3:	jbe    40aa18 <flatcc_emitter@@Base+0x388>
  40a9d9:	mov    rax,QWORD PTR [rbp-0x10]
  40a9dd:	mov    rax,QWORD PTR [rax+0x28]
  40a9e1:	mov    QWORD PTR [rbp-0x28],rax
  40a9e5:	cmp    QWORD PTR [rbp-0x28],0x0
  40a9ea:	jne    40aa13 <flatcc_emitter@@Base+0x383>
  40a9f0:	mov    rdi,QWORD PTR [rbp-0x10]
  40a9f4:	call   40adf0 <flatcc_emitter_copy_buffer@@Base+0x370>
  40a9f9:	cmp    eax,0x0
  40a9fc:	je     40aa0e <flatcc_emitter@@Base+0x37e>
  40aa02:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aa09:	jmp    40aa77 <flatcc_emitter@@Base+0x3e7>
  40aa0e:	jmp    40a9b4 <flatcc_emitter@@Base+0x324>
  40aa13:	jmp    40aa18 <flatcc_emitter@@Base+0x388>
  40aa18:	mov    rax,QWORD PTR [rbp-0x10]
  40aa1c:	mov    rdi,QWORD PTR [rax+0x20]
  40aa20:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa24:	mov    rdx,QWORD PTR [rbp-0x28]
  40aa28:	call   4030c0 <memcpy@plt>
  40aa2d:	mov    rax,QWORD PTR [rbp-0x28]
  40aa31:	mov    rdx,QWORD PTR [rbp-0x20]
  40aa35:	sub    rdx,rax
  40aa38:	mov    QWORD PTR [rbp-0x20],rdx
  40aa3c:	mov    rax,QWORD PTR [rbp-0x28]
  40aa40:	add    rax,QWORD PTR [rbp-0x18]
  40aa44:	mov    QWORD PTR [rbp-0x18],rax
  40aa48:	mov    rax,QWORD PTR [rbp-0x28]
  40aa4c:	mov    rdx,QWORD PTR [rbp-0x10]
  40aa50:	add    rax,QWORD PTR [rdx+0x20]
  40aa54:	mov    QWORD PTR [rdx+0x20],rax
  40aa58:	mov    rax,QWORD PTR [rbp-0x28]
  40aa5c:	mov    rdx,QWORD PTR [rbp-0x10]
  40aa60:	mov    rsi,QWORD PTR [rdx+0x28]
  40aa64:	sub    rsi,rax
  40aa67:	mov    QWORD PTR [rdx+0x28],rsi
  40aa6b:	jmp    40a9b4 <flatcc_emitter@@Base+0x324>
  40aa70:	mov    DWORD PTR [rbp-0x4],0x0
  40aa77:	mov    eax,DWORD PTR [rbp-0x4]
  40aa7a:	add    rsp,0x30
  40aa7e:	pop    rbp
  40aa7f:	ret    

000000000040aa80 <flatcc_emitter_copy_buffer@@Base>:
  40aa80:	push   rbp
  40aa81:	mov    rbp,rsp
  40aa84:	sub    rsp,0x30
  40aa88:	mov    QWORD PTR [rbp-0x10],rdi
  40aa8c:	mov    QWORD PTR [rbp-0x18],rsi
  40aa90:	mov    QWORD PTR [rbp-0x20],rdx
  40aa94:	mov    rdx,QWORD PTR [rbp-0x20]
  40aa98:	mov    rsi,QWORD PTR [rbp-0x10]
  40aa9c:	cmp    rdx,QWORD PTR [rsi+0x30]
  40aaa0:	jae    40aab3 <flatcc_emitter_copy_buffer@@Base+0x33>
  40aaa6:	mov    QWORD PTR [rbp-0x8],0x0
  40aaae:	jmp    40abbf <flatcc_emitter_copy_buffer@@Base+0x13f>
  40aab3:	mov    rax,QWORD PTR [rbp-0x10]
  40aab7:	cmp    QWORD PTR [rax],0x0
  40aabb:	jne    40aace <flatcc_emitter_copy_buffer@@Base+0x4e>
  40aac1:	mov    QWORD PTR [rbp-0x8],0x0
  40aac9:	jmp    40abbf <flatcc_emitter_copy_buffer@@Base+0x13f>
  40aace:	mov    rax,QWORD PTR [rbp-0x10]
  40aad2:	mov    rax,QWORD PTR [rax]
  40aad5:	mov    rcx,QWORD PTR [rbp-0x10]
  40aad9:	cmp    rax,QWORD PTR [rcx+0x8]
  40aadd:	jne    40ab09 <flatcc_emitter_copy_buffer@@Base+0x89>
  40aae3:	mov    rdi,QWORD PTR [rbp-0x18]
  40aae7:	mov    rax,QWORD PTR [rbp-0x10]
  40aaeb:	mov    rsi,QWORD PTR [rax+0x10]
  40aaef:	mov    rax,QWORD PTR [rbp-0x10]
  40aaf3:	mov    rdx,QWORD PTR [rax+0x30]
  40aaf7:	call   4030c0 <memcpy@plt>
  40aafc:	mov    rax,QWORD PTR [rbp-0x18]
  40ab00:	mov    QWORD PTR [rbp-0x8],rax
  40ab04:	jmp    40abbf <flatcc_emitter_copy_buffer@@Base+0x13f>
  40ab09:	mov    eax,0xb80
  40ab0e:	mov    ecx,eax
  40ab10:	mov    rdx,QWORD PTR [rbp-0x10]
  40ab14:	sub    rcx,QWORD PTR [rdx+0x18]
  40ab18:	mov    QWORD PTR [rbp-0x30],rcx
  40ab1c:	mov    rdi,QWORD PTR [rbp-0x18]
  40ab20:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab24:	mov    rsi,QWORD PTR [rcx+0x10]
  40ab28:	mov    rdx,QWORD PTR [rbp-0x30]
  40ab2c:	call   4030c0 <memcpy@plt>
  40ab31:	mov    rcx,QWORD PTR [rbp-0x18]
  40ab35:	add    rcx,QWORD PTR [rbp-0x30]
  40ab39:	mov    QWORD PTR [rbp-0x18],rcx
  40ab3d:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab41:	mov    rcx,QWORD PTR [rcx]
  40ab44:	mov    rcx,QWORD PTR [rcx+0xb80]
  40ab4b:	mov    QWORD PTR [rbp-0x28],rcx
  40ab4f:	mov    rax,QWORD PTR [rbp-0x28]
  40ab53:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab57:	cmp    rax,QWORD PTR [rcx+0x8]
  40ab5b:	je     40ab98 <flatcc_emitter_copy_buffer@@Base+0x118>
  40ab61:	mov    eax,0xb80
  40ab66:	mov    edx,eax
  40ab68:	mov    rdi,QWORD PTR [rbp-0x18]
  40ab6c:	mov    rsi,QWORD PTR [rbp-0x28]
  40ab70:	call   4030c0 <memcpy@plt>
  40ab75:	mov    rdx,QWORD PTR [rbp-0x18]
  40ab79:	add    rdx,0xb80
  40ab80:	mov    QWORD PTR [rbp-0x18],rdx
  40ab84:	mov    rdx,QWORD PTR [rbp-0x28]
  40ab88:	mov    rdx,QWORD PTR [rdx+0xb80]
  40ab8f:	mov    QWORD PTR [rbp-0x28],rdx
  40ab93:	jmp    40ab4f <flatcc_emitter_copy_buffer@@Base+0xcf>
  40ab98:	mov    eax,0xb80
  40ab9d:	mov    ecx,eax
  40ab9f:	mov    rdi,QWORD PTR [rbp-0x18]
  40aba3:	mov    rsi,QWORD PTR [rbp-0x28]
  40aba7:	mov    rdx,QWORD PTR [rbp-0x10]
  40abab:	sub    rcx,QWORD PTR [rdx+0x28]
  40abaf:	mov    rdx,rcx
  40abb2:	call   4030c0 <memcpy@plt>
  40abb7:	mov    rcx,QWORD PTR [rbp-0x18]
  40abbb:	mov    QWORD PTR [rbp-0x8],rcx
  40abbf:	mov    rax,QWORD PTR [rbp-0x8]
  40abc3:	add    rsp,0x30
  40abc7:	pop    rbp
  40abc8:	ret    
  40abc9:	nop    DWORD PTR [rax+0x0]
  40abd0:	push   rbp
  40abd1:	mov    rbp,rsp
  40abd4:	sub    rsp,0x20
  40abd8:	mov    QWORD PTR [rbp-0x10],rdi
  40abdc:	mov    QWORD PTR [rbp-0x18],0x0
  40abe4:	mov    rdi,QWORD PTR [rbp-0x10]
  40abe8:	cmp    QWORD PTR [rdi],0x0
  40abec:	je     40ac4f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40abf2:	mov    rax,QWORD PTR [rbp-0x10]
  40abf6:	mov    rax,QWORD PTR [rax]
  40abf9:	mov    rax,QWORD PTR [rax+0xb88]
  40ac00:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac04:	cmp    rax,QWORD PTR [rcx+0x8]
  40ac08:	je     40ac4f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40ac0e:	mov    rax,QWORD PTR [rbp-0x10]
  40ac12:	mov    rax,QWORD PTR [rax]
  40ac15:	mov    ecx,DWORD PTR [rax+0xb90]
  40ac1b:	sub    ecx,0xb80
  40ac21:	mov    rax,QWORD PTR [rbp-0x10]
  40ac25:	mov    rax,QWORD PTR [rax]
  40ac28:	mov    rax,QWORD PTR [rax+0xb88]
  40ac2f:	mov    DWORD PTR [rax+0xb90],ecx
  40ac35:	mov    rax,QWORD PTR [rbp-0x10]
  40ac39:	mov    rax,QWORD PTR [rax]
  40ac3c:	mov    rax,QWORD PTR [rax+0xb88]
  40ac43:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac47:	mov    QWORD PTR [rdx],rax
  40ac4a:	jmp    40ad92 <flatcc_emitter_copy_buffer@@Base+0x312>
  40ac4f:	mov    eax,0xb98
  40ac54:	mov    edi,eax
  40ac56:	call   4030d0 <malloc@plt>
  40ac5b:	mov    QWORD PTR [rbp-0x18],rax
  40ac5f:	cmp    rax,0x0
  40ac63:	jne    40ac75 <flatcc_emitter_copy_buffer@@Base+0x1f5>
  40ac69:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ac70:	jmp    40ade1 <flatcc_emitter_copy_buffer@@Base+0x361>
  40ac75:	mov    rax,QWORD PTR [rbp-0x10]
  40ac79:	mov    rcx,QWORD PTR [rax+0x38]
  40ac7d:	add    rcx,0xb80
  40ac84:	mov    QWORD PTR [rax+0x38],rcx
  40ac88:	mov    rax,QWORD PTR [rbp-0x10]
  40ac8c:	cmp    QWORD PTR [rax],0x0
  40ac90:	je     40acf0 <flatcc_emitter_copy_buffer@@Base+0x270>
  40ac96:	mov    rax,QWORD PTR [rbp-0x10]
  40ac9a:	mov    rax,QWORD PTR [rax+0x8]
  40ac9e:	mov    rcx,QWORD PTR [rbp-0x18]
  40aca2:	mov    QWORD PTR [rcx+0xb88],rax
  40aca9:	mov    rax,QWORD PTR [rbp-0x10]
  40acad:	mov    rax,QWORD PTR [rax]
  40acb0:	mov    rcx,QWORD PTR [rbp-0x18]
  40acb4:	mov    QWORD PTR [rcx+0xb80],rax
  40acbb:	mov    rax,QWORD PTR [rbp-0x18]
  40acbf:	mov    rcx,QWORD PTR [rbp-0x10]
  40acc3:	mov    rcx,QWORD PTR [rcx]
  40acc6:	mov    QWORD PTR [rcx+0xb88],rax
  40accd:	mov    rax,QWORD PTR [rbp-0x18]
  40acd1:	mov    rcx,QWORD PTR [rbp-0x10]
  40acd5:	mov    rcx,QWORD PTR [rcx+0x8]
  40acd9:	mov    QWORD PTR [rcx+0xb80],rax
  40ace0:	mov    rax,QWORD PTR [rbp-0x18]
  40ace4:	mov    rcx,QWORD PTR [rbp-0x10]
  40ace8:	mov    QWORD PTR [rcx],rax
  40aceb:	jmp    40ad92 <flatcc_emitter_copy_buffer@@Base+0x312>
  40acf0:	xor    eax,eax
  40acf2:	mov    ecx,0xb80
  40acf7:	mov    edx,ecx
  40acf9:	mov    rsi,QWORD PTR [rbp-0x18]
  40acfd:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad01:	mov    QWORD PTR [rdi],rsi
  40ad04:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad08:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad0c:	mov    QWORD PTR [rdi+0x8],rsi
  40ad10:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad14:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad18:	mov    QWORD PTR [rdi+0xb80],rsi
  40ad1f:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad23:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad27:	mov    QWORD PTR [rdi+0xb88],rsi
  40ad2e:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad32:	mov    rsi,QWORD PTR [rsi]
  40ad35:	add    rsi,0x5c0
  40ad3c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad40:	mov    QWORD PTR [rdi+0x10],rsi
  40ad44:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad48:	mov    rsi,QWORD PTR [rsi+0x10]
  40ad4c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad50:	mov    QWORD PTR [rdi+0x20],rsi
  40ad54:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad58:	mov    QWORD PTR [rsi+0x18],0x5c0
  40ad60:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad64:	sub    rdx,QWORD PTR [rsi+0x18]
  40ad68:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad6c:	mov    QWORD PTR [rsi+0x28],rdx
  40ad70:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad74:	mov    rdx,QWORD PTR [rdx+0x18]
  40ad78:	mov    ecx,edx
  40ad7a:	sub    eax,ecx
  40ad7c:	mov    rdx,QWORD PTR [rbp-0x18]
  40ad80:	mov    DWORD PTR [rdx+0xb90],eax
  40ad86:	mov    DWORD PTR [rbp-0x4],0x0
  40ad8d:	jmp    40ade1 <flatcc_emitter_copy_buffer@@Base+0x361>
  40ad92:	mov    rax,QWORD PTR [rbp-0x10]
  40ad96:	mov    rax,QWORD PTR [rax]
  40ad99:	add    rax,0xb80
  40ad9f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ada3:	mov    QWORD PTR [rcx+0x10],rax
  40ada7:	mov    rax,QWORD PTR [rbp-0x10]
  40adab:	mov    QWORD PTR [rax+0x18],0xb80
  40adb3:	mov    rax,QWORD PTR [rbp-0x10]
  40adb7:	mov    rax,QWORD PTR [rax]
  40adba:	mov    rax,QWORD PTR [rax+0xb80]
  40adc1:	mov    edx,DWORD PTR [rax+0xb90]
  40adc7:	sub    edx,0xb80
  40adcd:	mov    rax,QWORD PTR [rbp-0x10]
  40add1:	mov    rax,QWORD PTR [rax]
  40add4:	mov    DWORD PTR [rax+0xb90],edx
  40adda:	mov    DWORD PTR [rbp-0x4],0x0
  40ade1:	mov    eax,DWORD PTR [rbp-0x4]
  40ade4:	add    rsp,0x20
  40ade8:	pop    rbp
  40ade9:	ret    
  40adea:	nop    WORD PTR [rax+rax*1+0x0]
  40adf0:	push   rbp
  40adf1:	mov    rbp,rsp
  40adf4:	sub    rsp,0x20
  40adf8:	mov    QWORD PTR [rbp-0x10],rdi
  40adfc:	mov    QWORD PTR [rbp-0x18],0x0
  40ae04:	mov    rdi,QWORD PTR [rbp-0x10]
  40ae08:	cmp    QWORD PTR [rdi+0x8],0x0
  40ae0d:	je     40ae4b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ae13:	mov    rax,QWORD PTR [rbp-0x10]
  40ae17:	mov    rax,QWORD PTR [rax+0x8]
  40ae1b:	mov    rax,QWORD PTR [rax+0xb80]
  40ae22:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae26:	cmp    rax,QWORD PTR [rcx]
  40ae29:	je     40ae4b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ae2f:	mov    rax,QWORD PTR [rbp-0x10]
  40ae33:	mov    rax,QWORD PTR [rax+0x8]
  40ae37:	mov    rax,QWORD PTR [rax+0xb80]
  40ae3e:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae42:	mov    QWORD PTR [rcx+0x8],rax
  40ae46:	jmp    40af90 <flatcc_emitter_copy_buffer@@Base+0x510>
  40ae4b:	mov    eax,0xb98
  40ae50:	mov    edi,eax
  40ae52:	call   4030d0 <malloc@plt>
  40ae57:	mov    QWORD PTR [rbp-0x18],rax
  40ae5b:	cmp    rax,0x0
  40ae5f:	jne    40ae71 <flatcc_emitter_copy_buffer@@Base+0x3f1>
  40ae65:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ae6c:	jmp    40afdc <flatcc_emitter_copy_buffer@@Base+0x55c>
  40ae71:	mov    rax,QWORD PTR [rbp-0x10]
  40ae75:	mov    rcx,QWORD PTR [rax+0x38]
  40ae79:	add    rcx,0xb80
  40ae80:	mov    QWORD PTR [rax+0x38],rcx
  40ae84:	mov    rax,QWORD PTR [rbp-0x10]
  40ae88:	cmp    QWORD PTR [rax+0x8],0x0
  40ae8d:	je     40aeee <flatcc_emitter_copy_buffer@@Base+0x46e>
  40ae93:	mov    rax,QWORD PTR [rbp-0x10]
  40ae97:	mov    rax,QWORD PTR [rax+0x8]
  40ae9b:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae9f:	mov    QWORD PTR [rcx+0xb88],rax
  40aea6:	mov    rax,QWORD PTR [rbp-0x10]
  40aeaa:	mov    rax,QWORD PTR [rax]
  40aead:	mov    rcx,QWORD PTR [rbp-0x18]
  40aeb1:	mov    QWORD PTR [rcx+0xb80],rax
  40aeb8:	mov    rax,QWORD PTR [rbp-0x18]
  40aebc:	mov    rcx,QWORD PTR [rbp-0x10]
  40aec0:	mov    rcx,QWORD PTR [rcx]
  40aec3:	mov    QWORD PTR [rcx+0xb88],rax
  40aeca:	mov    rax,QWORD PTR [rbp-0x18]
  40aece:	mov    rcx,QWORD PTR [rbp-0x10]
  40aed2:	mov    rcx,QWORD PTR [rcx+0x8]
  40aed6:	mov    QWORD PTR [rcx+0xb80],rax
  40aedd:	mov    rax,QWORD PTR [rbp-0x18]
  40aee1:	mov    rcx,QWORD PTR [rbp-0x10]
  40aee5:	mov    QWORD PTR [rcx+0x8],rax
  40aee9:	jmp    40af90 <flatcc_emitter_copy_buffer@@Base+0x510>
  40aeee:	xor    eax,eax
  40aef0:	mov    ecx,0xb80
  40aef5:	mov    edx,ecx
  40aef7:	mov    rsi,QWORD PTR [rbp-0x18]
  40aefb:	mov    rdi,QWORD PTR [rbp-0x10]
  40aeff:	mov    QWORD PTR [rdi],rsi
  40af02:	mov    rsi,QWORD PTR [rbp-0x18]
  40af06:	mov    rdi,QWORD PTR [rbp-0x10]
  40af0a:	mov    QWORD PTR [rdi+0x8],rsi
  40af0e:	mov    rsi,QWORD PTR [rbp-0x18]
  40af12:	mov    rdi,QWORD PTR [rbp-0x18]
  40af16:	mov    QWORD PTR [rdi+0xb80],rsi
  40af1d:	mov    rsi,QWORD PTR [rbp-0x18]
  40af21:	mov    rdi,QWORD PTR [rbp-0x18]
  40af25:	mov    QWORD PTR [rdi+0xb88],rsi
  40af2c:	mov    rsi,QWORD PTR [rbp-0x10]
  40af30:	mov    rsi,QWORD PTR [rsi]
  40af33:	add    rsi,0x5c0
  40af3a:	mov    rdi,QWORD PTR [rbp-0x10]
  40af3e:	mov    QWORD PTR [rdi+0x10],rsi
  40af42:	mov    rsi,QWORD PTR [rbp-0x10]
  40af46:	mov    rsi,QWORD PTR [rsi+0x10]
  40af4a:	mov    rdi,QWORD PTR [rbp-0x10]
  40af4e:	mov    QWORD PTR [rdi+0x20],rsi
  40af52:	mov    rsi,QWORD PTR [rbp-0x10]
  40af56:	mov    QWORD PTR [rsi+0x18],0x5c0
  40af5e:	mov    rsi,QWORD PTR [rbp-0x10]
  40af62:	sub    rdx,QWORD PTR [rsi+0x18]
  40af66:	mov    rsi,QWORD PTR [rbp-0x10]
  40af6a:	mov    QWORD PTR [rsi+0x28],rdx
  40af6e:	mov    rdx,QWORD PTR [rbp-0x10]
  40af72:	mov    rdx,QWORD PTR [rdx+0x18]
  40af76:	mov    ecx,edx
  40af78:	sub    eax,ecx
  40af7a:	mov    rdx,QWORD PTR [rbp-0x18]
  40af7e:	mov    DWORD PTR [rdx+0xb90],eax
  40af84:	mov    DWORD PTR [rbp-0x4],0x0
  40af8b:	jmp    40afdc <flatcc_emitter_copy_buffer@@Base+0x55c>
  40af90:	mov    rax,QWORD PTR [rbp-0x10]
  40af94:	mov    rax,QWORD PTR [rax+0x8]
  40af98:	mov    rcx,QWORD PTR [rbp-0x10]
  40af9c:	mov    QWORD PTR [rcx+0x20],rax
  40afa0:	mov    rax,QWORD PTR [rbp-0x10]
  40afa4:	mov    QWORD PTR [rax+0x28],0xb80
  40afac:	mov    rax,QWORD PTR [rbp-0x10]
  40afb0:	mov    rax,QWORD PTR [rax+0x8]
  40afb4:	mov    rax,QWORD PTR [rax+0xb88]
  40afbb:	mov    edx,DWORD PTR [rax+0xb90]
  40afc1:	add    edx,0xb80
  40afc7:	mov    rax,QWORD PTR [rbp-0x10]
  40afcb:	mov    rax,QWORD PTR [rax+0x8]
  40afcf:	mov    DWORD PTR [rax+0xb90],edx
  40afd5:	mov    DWORD PTR [rbp-0x4],0x0
  40afdc:	mov    eax,DWORD PTR [rbp-0x4]
  40afdf:	add    rsp,0x20
  40afe3:	pop    rbp
  40afe4:	ret    
  40afe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afef:	nop

000000000040aff0 <__libc_csu_init@@Base>:
  40aff0:	endbr64 
  40aff4:	push   r15
  40aff6:	lea    r15,[rip+0x5dfb]        # 410df8 <flatcc_builder_padding_base@@Base+0x48b8>
  40affd:	push   r14
  40afff:	mov    r14,rdx
  40b002:	push   r13
  40b004:	mov    r13,rsi
  40b007:	push   r12
  40b009:	mov    r12d,edi
  40b00c:	push   rbp
  40b00d:	lea    rbp,[rip+0x5dec]        # 410e00 <flatcc_builder_padding_base@@Base+0x48c0>
  40b014:	push   rbx
  40b015:	sub    rbp,r15
  40b018:	sub    rsp,0x8
  40b01c:	call   403000 <free@plt-0x30>
  40b021:	sar    rbp,0x3
  40b025:	je     40b046 <__libc_csu_init@@Base+0x56>
  40b027:	xor    ebx,ebx
  40b029:	nop    DWORD PTR [rax+0x0]
  40b030:	mov    rdx,r14
  40b033:	mov    rsi,r13
  40b036:	mov    edi,r12d
  40b039:	call   QWORD PTR [r15+rbx*8]
  40b03d:	add    rbx,0x1
  40b041:	cmp    rbp,rbx
  40b044:	jne    40b030 <__libc_csu_init@@Base+0x40>
  40b046:	add    rsp,0x8
  40b04a:	pop    rbx
  40b04b:	pop    rbp
  40b04c:	pop    r12
  40b04e:	pop    r13
  40b050:	pop    r14
  40b052:	pop    r15
  40b054:	ret    
  40b055:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040b060 <__libc_csu_fini@@Base>:
  40b060:	endbr64 
  40b064:	ret    

Disassembly of section .fini:

000000000040b068 <.fini>:
  40b068:	endbr64 
  40b06c:	sub    rsp,0x8
  40b070:	add    rsp,0x8
  40b074:	ret    
