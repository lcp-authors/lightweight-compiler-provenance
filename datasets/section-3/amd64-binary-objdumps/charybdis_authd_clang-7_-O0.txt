
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x12fc9]        # 414fd8 <rb_strcasecmp@plt+0x12a88>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_helper_loop@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <rb_helper_loop@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x12fe2]        # 415008 <rb_strcasecmp@plt+0x12ab8>
  402026:	jmp    QWORD PTR [rip+0x12fe4]        # 415010 <rb_strcasecmp@plt+0x12ac0>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <rb_helper_loop@plt>:
  402030:	jmp    QWORD PTR [rip+0x12fe2]        # 415018 <rb_strcasecmp@plt+0x12ac8>
  402036:	push   0x0
  40203b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402040 <memset@plt>:
  402040:	jmp    QWORD PTR [rip+0x12fda]        # 415020 <rb_strcasecmp@plt+0x12ad0>
  402046:	push   0x1
  40204b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402050 <rb_event_addish@plt>:
  402050:	jmp    QWORD PTR [rip+0x12fd2]        # 415028 <rb_strcasecmp@plt+0x12ad8>
  402056:	push   0x2
  40205b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402060 <rb_ignore_errno@plt>:
  402060:	jmp    QWORD PTR [rip+0x12fca]        # 415030 <rb_strcasecmp@plt+0x12ae0>
  402066:	push   0x3
  40206b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402070 <rb_connect_tcp_ssl@plt>:
  402070:	jmp    QWORD PTR [rip+0x12fc2]        # 415038 <rb_strcasecmp@plt+0x12ae8>
  402076:	push   0x4
  40207b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402080 <snprintf@plt>:
  402080:	jmp    QWORD PTR [rip+0x12fba]        # 415040 <rb_strcasecmp@plt+0x12af0>
  402086:	push   0x5
  40208b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402090 <rb_connect_tcp@plt>:
  402090:	jmp    QWORD PTR [rip+0x12fb2]        # 415048 <rb_strcasecmp@plt+0x12af8>
  402096:	push   0x6
  40209b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020a0 <rb_event_delete@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x12faa]        # 415050 <rb_strcasecmp@plt+0x12b00>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020b0 <rb_setselect@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x12fa2]        # 415058 <rb_strcasecmp@plt+0x12b08>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020c0 <rb_get_fd@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x12f9a]        # 415060 <rb_strcasecmp@plt+0x12b10>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020d0 <htons@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x12f92]        # 415068 <rb_strcasecmp@plt+0x12b18>
  4020d6:	push   0xa
  4020db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020e0 <exit@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x12f8a]        # 415070 <rb_strcasecmp@plt+0x12b20>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020f0 <__assert_fail@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x12f82]        # 415078 <rb_strcasecmp@plt+0x12b28>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402100 <getaddrinfo@plt>:
  402100:	jmp    QWORD PTR [rip+0x12f7a]        # 415080 <rb_strcasecmp@plt+0x12b30>
  402106:	push   0xd
  40210b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402110 <rb_socket@plt>:
  402110:	jmp    QWORD PTR [rip+0x12f72]        # 415088 <rb_strcasecmp@plt+0x12b38>
  402116:	push   0xe
  40211b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402120 <strcasecmp@plt>:
  402120:	jmp    QWORD PTR [rip+0x12f6a]        # 415090 <rb_strcasecmp@plt+0x12b40>
  402126:	push   0xf
  40212b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402130 <rb_strtok_r@plt>:
  402130:	jmp    QWORD PTR [rip+0x12f62]        # 415098 <rb_strcasecmp@plt+0x12b48>
  402136:	push   0x10
  40213b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402140 <rb_dictionary_foreach_cur@plt>:
  402140:	jmp    QWORD PTR [rip+0x12f5a]        # 4150a0 <rb_strcasecmp@plt+0x12b50>
  402146:	push   0x11
  40214b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402150 <strpbrk@plt>:
  402150:	jmp    QWORD PTR [rip+0x12f52]        # 4150a8 <rb_strcasecmp@plt+0x12b58>
  402156:	push   0x12
  40215b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402160 <rb_helper_child@plt>:
  402160:	jmp    QWORD PTR [rip+0x12f4a]        # 4150b0 <rb_strcasecmp@plt+0x12b60>
  402166:	push   0x13
  40216b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402170 <strncmp@plt>:
  402170:	jmp    QWORD PTR [rip+0x12f42]        # 4150b8 <rb_strcasecmp@plt+0x12b68>
  402176:	push   0x14
  40217b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402180 <malloc@plt>:
  402180:	jmp    QWORD PTR [rip+0x12f3a]        # 4150c0 <rb_strcasecmp@plt+0x12b70>
  402186:	push   0x15
  40218b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402190 <fopen@plt>:
  402190:	jmp    QWORD PTR [rip+0x12f32]        # 4150c8 <rb_strcasecmp@plt+0x12b78>
  402196:	push   0x16
  40219b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021a0 <rb_write@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x12f2a]        # 4150d0 <rb_strcasecmp@plt+0x12b80>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021b0 <setsockopt@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x12f22]        # 4150d8 <rb_strcasecmp@plt+0x12b88>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021c0 <fgets@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x12f1a]        # 4150e0 <rb_strcasecmp@plt+0x12b90>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021d0 <rb_strlcpy@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x12f12]        # 4150e8 <rb_strcasecmp@plt+0x12b98>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021e0 <rb_dictionary_foreach_next@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x12f0a]        # 4150f0 <rb_strcasecmp@plt+0x12ba0>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021f0 <freeaddrinfo@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x12f02]        # 4150f8 <rb_strcasecmp@plt+0x12ba8>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402200 <free@plt>:
  402200:	jmp    QWORD PTR [rip+0x12efa]        # 415100 <rb_strcasecmp@plt+0x12bb0>
  402206:	push   0x1d
  40220b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402210 <strlen@plt>:
  402210:	jmp    QWORD PTR [rip+0x12ef2]        # 415108 <rb_strcasecmp@plt+0x12bb8>
  402216:	push   0x1e
  40221b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402220 <rb_string_to_array@plt>:
  402220:	jmp    QWORD PTR [rip+0x12eea]        # 415110 <rb_strcasecmp@plt+0x12bc0>
  402226:	push   0x1f
  40222b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402230 <rb_read@plt>:
  402230:	jmp    QWORD PTR [rip+0x12ee2]        # 415118 <rb_strcasecmp@plt+0x12bc8>
  402236:	push   0x20
  40223b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402240 <__ctype_b_loc@plt>:
  402240:	jmp    QWORD PTR [rip+0x12eda]        # 415120 <rb_strcasecmp@plt+0x12bd0>
  402246:	push   0x21
  40224b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402250 <rb_dictionary_foreach_start@plt>:
  402250:	jmp    QWORD PTR [rip+0x12ed2]        # 415128 <rb_strcasecmp@plt+0x12bd8>
  402256:	push   0x22
  40225b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402260 <sprintf@plt>:
  402260:	jmp    QWORD PTR [rip+0x12eca]        # 415130 <rb_strcasecmp@plt+0x12be0>
  402266:	push   0x23
  40226b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402270 <ntohs@plt>:
  402270:	jmp    QWORD PTR [rip+0x12ec2]        # 415138 <rb_strcasecmp@plt+0x12be8>
  402276:	push   0x24
  40227b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402280 <rb_inet_pton_sock@plt>:
  402280:	jmp    QWORD PTR [rip+0x12eba]        # 415140 <rb_strcasecmp@plt+0x12bf0>
  402286:	push   0x25
  40228b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402290 <strrchr@plt>:
  402290:	jmp    QWORD PTR [rip+0x12eb2]        # 415148 <rb_strcasecmp@plt+0x12bf8>
  402296:	push   0x26
  40229b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022a0 <rb_current_time@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x12eaa]        # 415150 <rb_strcasecmp@plt+0x12c00>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022b0 <rb_dictionary_delete@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x12ea2]        # 415158 <rb_strcasecmp@plt+0x12c08>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022c0 <strerror@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x12e9a]        # 415160 <rb_strcasecmp@plt+0x12c10>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022d0 <strstr@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x12e92]        # 415168 <rb_strcasecmp@plt+0x12c18>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022e0 <rb_free_rb_dlink_node@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x12e8a]        # 415170 <rb_strcasecmp@plt+0x12c20>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022f0 <sigaction@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x12e82]        # 415178 <rb_strcasecmp@plt+0x12c28>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402300 <rb_close@plt>:
  402300:	jmp    QWORD PTR [rip+0x12e7a]        # 415180 <rb_strcasecmp@plt+0x12c30>
  402306:	push   0x2d
  40230b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402310 <strtol@plt>:
  402310:	jmp    QWORD PTR [rip+0x12e72]        # 415188 <rb_strcasecmp@plt+0x12c38>
  402316:	push   0x2e
  40231b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402320 <getsockname@plt>:
  402320:	jmp    QWORD PTR [rip+0x12e6a]        # 415190 <rb_strcasecmp@plt+0x12c40>
  402326:	push   0x2f
  40232b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402330 <atoi@plt>:
  402330:	jmp    QWORD PTR [rip+0x12e62]        # 415198 <rb_strcasecmp@plt+0x12c48>
  402336:	push   0x30
  40233b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402340 <rb_dictionary_destroy@plt>:
  402340:	jmp    QWORD PTR [rip+0x12e5a]        # 4151a0 <rb_strcasecmp@plt+0x12c50>
  402346:	push   0x31
  40234b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402350 <rb_lib_log@plt>:
  402350:	jmp    QWORD PTR [rip+0x12e52]        # 4151a8 <rb_strcasecmp@plt+0x12c58>
  402356:	push   0x32
  40235b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402360 <memmove@plt>:
  402360:	jmp    QWORD PTR [rip+0x12e4a]        # 4151b0 <rb_strcasecmp@plt+0x12c60>
  402366:	push   0x33
  40236b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402370 <strchr@plt>:
  402370:	jmp    QWORD PTR [rip+0x12e42]        # 4151b8 <rb_strcasecmp@plt+0x12c68>
  402376:	push   0x34
  40237b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402380 <vsnprintf@plt>:
  402380:	jmp    QWORD PTR [rip+0x12e3a]        # 4151c0 <rb_strcasecmp@plt+0x12c70>
  402386:	push   0x35
  40238b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402390 <rb_init_prng@plt>:
  402390:	jmp    QWORD PTR [rip+0x12e32]        # 4151c8 <rb_strcasecmp@plt+0x12c78>
  402396:	push   0x36
  40239b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023a0 <rb_dictionary_retrieve@plt>:
  4023a0:	jmp    QWORD PTR [rip+0x12e2a]        # 4151d0 <rb_strcasecmp@plt+0x12c80>
  4023a6:	push   0x37
  4023ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023b0 <rb_outofmemory@plt>:
  4023b0:	jmp    QWORD PTR [rip+0x12e22]        # 4151d8 <rb_strcasecmp@plt+0x12c88>
  4023b6:	push   0x38
  4023bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023c0 <__errno_location@plt>:
  4023c0:	jmp    QWORD PTR [rip+0x12e1a]        # 4151e0 <rb_strcasecmp@plt+0x12c90>
  4023c6:	push   0x39
  4023cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023d0 <rb_dictionary_add@plt>:
  4023d0:	jmp    QWORD PTR [rip+0x12e12]        # 4151e8 <rb_strcasecmp@plt+0x12c98>
  4023d6:	push   0x3a
  4023db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023e0 <rb_set_time@plt>:
  4023e0:	jmp    QWORD PTR [rip+0x12e0a]        # 4151f0 <rb_strcasecmp@plt+0x12ca0>
  4023e6:	push   0x3b
  4023eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023f0 <sigaddset@plt>:
  4023f0:	jmp    QWORD PTR [rip+0x12e02]        # 4151f8 <rb_strcasecmp@plt+0x12ca8>
  4023f6:	push   0x3c
  4023fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402400 <rb_helper_read@plt>:
  402400:	jmp    QWORD PTR [rip+0x12dfa]        # 415200 <rb_strcasecmp@plt+0x12cb0>
  402406:	push   0x3d
  40240b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402410 <strcmp@plt>:
  402410:	jmp    QWORD PTR [rip+0x12df2]        # 415208 <rb_strcasecmp@plt+0x12cb8>
  402416:	push   0x3e
  40241b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402420 <rb_inet_ntop_sock@plt>:
  402420:	jmp    QWORD PTR [rip+0x12dea]        # 415210 <rb_strcasecmp@plt+0x12cc0>
  402426:	push   0x3f
  40242b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402430 <rb_dictionary_find@plt>:
  402430:	jmp    QWORD PTR [rip+0x12de2]        # 415218 <rb_strcasecmp@plt+0x12cc8>
  402436:	push   0x40
  40243b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402440 <strcpy@plt>:
  402440:	jmp    QWORD PTR [rip+0x12dda]        # 415220 <rb_strcasecmp@plt+0x12cd0>
  402446:	push   0x41
  40244b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402450 <rb_dictionary_create@plt>:
  402450:	jmp    QWORD PTR [rip+0x12dd2]        # 415228 <rb_strcasecmp@plt+0x12cd8>
  402456:	push   0x42
  40245b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402460 <rb_accept_tcp@plt>:
  402460:	jmp    QWORD PTR [rip+0x12dca]        # 415230 <rb_strcasecmp@plt+0x12ce0>
  402466:	push   0x43
  40246b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402470 <calloc@plt>:
  402470:	jmp    QWORD PTR [rip+0x12dc2]        # 415238 <rb_strcasecmp@plt+0x12ce8>
  402476:	push   0x44
  40247b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402480 <rb_helper_write@plt>:
  402480:	jmp    QWORD PTR [rip+0x12dba]        # 415240 <rb_strcasecmp@plt+0x12cf0>
  402486:	push   0x45
  40248b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402490 <fclose@plt>:
  402490:	jmp    QWORD PTR [rip+0x12db2]        # 415248 <rb_strcasecmp@plt+0x12cf8>
  402496:	push   0x46
  40249b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024a0 <recvfrom@plt>:
  4024a0:	jmp    QWORD PTR [rip+0x12daa]        # 415250 <rb_strcasecmp@plt+0x12d00>
  4024a6:	push   0x47
  4024ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024b0 <rb_event_add@plt>:
  4024b0:	jmp    QWORD PTR [rip+0x12da2]        # 415258 <rb_strcasecmp@plt+0x12d08>
  4024b6:	push   0x48
  4024bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024c0 <strtoull@plt>:
  4024c0:	jmp    QWORD PTR [rip+0x12d9a]        # 415260 <rb_strcasecmp@plt+0x12d10>
  4024c6:	push   0x49
  4024cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024d0 <rb_get_random@plt>:
  4024d0:	jmp    QWORD PTR [rip+0x12d92]        # 415268 <rb_strcasecmp@plt+0x12d18>
  4024d6:	push   0x4a
  4024db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024e0 <rb_make_rb_dlink_node@plt>:
  4024e0:	jmp    QWORD PTR [rip+0x12d8a]        # 415270 <rb_strcasecmp@plt+0x12d20>
  4024e6:	push   0x4b
  4024eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024f0 <sigemptyset@plt>:
  4024f0:	jmp    QWORD PTR [rip+0x12d82]        # 415278 <rb_strcasecmp@plt+0x12d28>
  4024f6:	push   0x4c
  4024fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402500 <sendto@plt>:
  402500:	jmp    QWORD PTR [rip+0x12d7a]        # 415280 <rb_strcasecmp@plt+0x12d30>
  402506:	push   0x4d
  40250b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402510 <bind@plt>:
  402510:	jmp    QWORD PTR [rip+0x12d72]        # 415288 <rb_strcasecmp@plt+0x12d38>
  402516:	push   0x4e
  40251b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402520 <rb_listen@plt>:
  402520:	jmp    QWORD PTR [rip+0x12d6a]        # 415290 <rb_strcasecmp@plt+0x12d40>
  402526:	push   0x4f
  40252b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402530 <fprintf@plt>:
  402530:	jmp    QWORD PTR [rip+0x12d62]        # 415298 <rb_strcasecmp@plt+0x12d48>
  402536:	push   0x50
  40253b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402540 <memcpy@plt>:
  402540:	jmp    QWORD PTR [rip+0x12d5a]        # 4152a0 <rb_strcasecmp@plt+0x12d50>
  402546:	push   0x51
  40254b:	jmp    402020 <rb_helper_loop@plt-0x10>

Disassembly of section .plt.got:

0000000000402550 <rb_strcasecmp@plt>:
  402550:	jmp    QWORD PTR [rip+0x12a92]        # 414fe8 <rb_strcasecmp@plt+0x12a98>
  402556:	xchg   ax,ax

Disassembly of section .text:

0000000000402560 <.text>:
  402560:	endbr64 
  402564:	xor    ebp,ebp
  402566:	mov    r9,rdx
  402569:	pop    rsi
  40256a:	mov    rdx,rsp
  40256d:	and    rsp,0xfffffffffffffff0
  402571:	push   rax
  402572:	push   rsp
  402573:	mov    r8,0x40f0d0
  40257a:	mov    rcx,0x40f060
  402581:	mov    rdi,0x4028c0
  402588:	call   QWORD PTR [rip+0x12a52]        # 414fe0 <rb_strcasecmp@plt+0x12a90>
  40258e:	hlt    
  40258f:	nop
  402590:	endbr64 
  402594:	ret    
  402595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40259f:	nop
  4025a0:	mov    eax,0x416ed0
  4025a5:	cmp    rax,0x416ed0
  4025ab:	je     4025c0 <rb_strcasecmp@plt+0x70>
  4025ad:	mov    eax,0x0
  4025b2:	test   rax,rax
  4025b5:	je     4025c0 <rb_strcasecmp@plt+0x70>
  4025b7:	mov    edi,0x416ed0
  4025bc:	jmp    rax
  4025be:	xchg   ax,ax
  4025c0:	ret    
  4025c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025cc:	nop    DWORD PTR [rax+0x0]
  4025d0:	mov    esi,0x416ed0
  4025d5:	sub    rsi,0x416ed0
  4025dc:	mov    rax,rsi
  4025df:	shr    rsi,0x3f
  4025e3:	sar    rax,0x3
  4025e7:	add    rsi,rax
  4025ea:	sar    rsi,1
  4025ed:	je     402600 <rb_strcasecmp@plt+0xb0>
  4025ef:	mov    eax,0x0
  4025f4:	test   rax,rax
  4025f7:	je     402600 <rb_strcasecmp@plt+0xb0>
  4025f9:	mov    edi,0x416ed0
  4025fe:	jmp    rax
  402600:	ret    
  402601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40260c:	nop    DWORD PTR [rax+0x0]
  402610:	endbr64 
  402614:	cmp    BYTE PTR [rip+0x148b5],0x0        # 416ed0 <rb_strcasecmp@plt+0x14980>
  40261b:	jne    402630 <rb_strcasecmp@plt+0xe0>
  40261d:	push   rbp
  40261e:	mov    rbp,rsp
  402621:	call   4025a0 <rb_strcasecmp@plt+0x50>
  402626:	mov    BYTE PTR [rip+0x148a3],0x1        # 416ed0 <rb_strcasecmp@plt+0x14980>
  40262d:	pop    rbp
  40262e:	ret    
  40262f:	nop
  402630:	ret    
  402631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40263c:	nop    DWORD PTR [rax+0x0]
  402640:	endbr64 
  402644:	jmp    4025d0 <rb_strcasecmp@plt+0x80>
  402646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402650:	push   rbp
  402651:	mov    rbp,rsp
  402654:	sub    rsp,0x20
  402658:	mov    DWORD PTR [rbp-0x4],edi
  40265b:	mov    QWORD PTR [rbp-0x10],rsi
  40265f:	cmp    DWORD PTR [rbp-0x4],0x2
  402663:	jge    402684 <rb_strcasecmp@plt+0x134>
  402669:	mov    edx,DWORD PTR [rbp-0x4]
  40266c:	mov    edi,0x43
  402671:	lea    rsi,[rip+0xda4f]        # 4100c7 <rb_strcasecmp@plt+0xdb77>
  402678:	mov    al,0x0
  40267a:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40267f:	jmp    402723 <rb_strcasecmp@plt+0x1d3>
  402684:	lea    rax,[rip+0x18b05]        # 41b190 <rb_strcasecmp@plt+0x18c40>
  40268b:	mov    rdi,QWORD PTR [rax]
  40268e:	mov    rax,QWORD PTR [rbp-0x10]
  402692:	mov    rsi,QWORD PTR [rax+0x8]
  402696:	call   4023a0 <rb_dictionary_retrieve@plt>
  40269b:	mov    QWORD PTR [rbp-0x18],rax
  40269f:	cmp    rax,0x0
  4026a3:	jne    4026c9 <rb_strcasecmp@plt+0x179>
  4026a9:	mov    rax,QWORD PTR [rbp-0x10]
  4026ad:	mov    rdx,QWORD PTR [rax+0x8]
  4026b1:	mov    edi,0x43
  4026b6:	lea    rsi,[rip+0xda58]        # 410115 <rb_strcasecmp@plt+0xdbc5>
  4026bd:	mov    al,0x0
  4026bf:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  4026c4:	jmp    402723 <rb_strcasecmp@plt+0x1d3>
  4026c9:	mov    eax,DWORD PTR [rbp-0x4]
  4026cc:	sub    eax,0x2
  4026cf:	mov    rcx,QWORD PTR [rbp-0x18]
  4026d3:	cmp    eax,DWORD PTR [rcx+0x8]
  4026d6:	jge    4026fe <rb_strcasecmp@plt+0x1ae>
  4026dc:	mov    rax,QWORD PTR [rbp-0x18]
  4026e0:	mov    edx,DWORD PTR [rax+0x8]
  4026e3:	mov    ecx,DWORD PTR [rbp-0x4]
  4026e6:	mov    edi,0x43
  4026eb:	lea    rsi,[rip+0xda50]        # 410142 <rb_strcasecmp@plt+0xdbf2>
  4026f2:	mov    al,0x0
  4026f4:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  4026f9:	jmp    402723 <rb_strcasecmp@plt+0x1d3>
  4026fe:	mov    rax,QWORD PTR [rbp-0x18]
  402702:	mov    rax,QWORD PTR [rax+0x10]
  402706:	mov    rcx,QWORD PTR [rbp-0x10]
  40270a:	mov    rdi,QWORD PTR [rcx+0x8]
  40270e:	mov    edx,DWORD PTR [rbp-0x4]
  402711:	sub    edx,0x2
  402714:	mov    rcx,QWORD PTR [rbp-0x10]
  402718:	add    rcx,0x10
  40271c:	mov    esi,edx
  40271e:	mov    rdx,rcx
  402721:	call   rax
  402723:	add    rsp,0x20
  402727:	pop    rbp
  402728:	ret    
  402729:	nop    DWORD PTR [rax+0x0]
  402730:	push   rbp
  402731:	mov    rbp,rsp
  402734:	sub    rsp,0x20
  402738:	mov    DWORD PTR [rbp-0x4],edi
  40273b:	mov    QWORD PTR [rbp-0x10],rsi
  40273f:	cmp    DWORD PTR [rbp-0x4],0x2
  402743:	jg     4027a3 <rb_strcasecmp@plt+0x253>
  402749:	mov    QWORD PTR [rbp-0x20],0x0
  402751:	cmp    QWORD PTR [rbp-0x20],0x100
  402759:	jae    40279e <rb_strcasecmp@plt+0x24e>
  40275f:	lea    rax,[rip+0x13b5a]        # 4162c0 <rb_strcasecmp@plt+0x13d70>
  402766:	mov    rcx,QWORD PTR [rbp-0x20]
  40276a:	mov    dl,cl
  40276c:	movzx  esi,dl
  40276f:	mov    ecx,esi
  402771:	mov    rax,QWORD PTR [rax+rcx*8]
  402775:	mov    QWORD PTR [rbp-0x18],rax
  402779:	cmp    rax,0x0
  40277d:	je     402788 <rb_strcasecmp@plt+0x238>
  402783:	xor    edi,edi
  402785:	call   QWORD PTR [rbp-0x18]
  402788:	jmp    40278d <rb_strcasecmp@plt+0x23d>
  40278d:	mov    rax,QWORD PTR [rbp-0x20]
  402791:	add    rax,0x1
  402795:	mov    QWORD PTR [rbp-0x20],rax
  402799:	jmp    402751 <rb_strcasecmp@plt+0x201>
  40279e:	jmp    4027df <rb_strcasecmp@plt+0x28f>
  4027a3:	lea    rax,[rip+0x13b16]        # 4162c0 <rb_strcasecmp@plt+0x13d70>
  4027aa:	mov    rcx,QWORD PTR [rbp-0x10]
  4027ae:	mov    rcx,QWORD PTR [rcx+0x8]
  4027b2:	movzx  edx,BYTE PTR [rcx]
  4027b5:	mov    ecx,edx
  4027b7:	mov    rax,QWORD PTR [rax+rcx*8]
  4027bb:	mov    QWORD PTR [rbp-0x18],rax
  4027bf:	cmp    rax,0x0
  4027c3:	jne    4027ce <rb_strcasecmp@plt+0x27e>
  4027c9:	jmp    4027df <rb_strcasecmp@plt+0x28f>
  4027ce:	mov    rax,QWORD PTR [rbp-0x18]
  4027d2:	mov    rcx,QWORD PTR [rbp-0x10]
  4027d6:	mov    rcx,QWORD PTR [rcx+0x8]
  4027da:	movsx  edi,BYTE PTR [rcx]
  4027dd:	call   rax
  4027df:	add    rsp,0x20
  4027e3:	pop    rbp
  4027e4:	ret    
  4027e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027ef:	nop
  4027f0:	push   rbp
  4027f1:	mov    rbp,rsp
  4027f4:	sub    rsp,0x20
  4027f8:	mov    DWORD PTR [rbp-0x4],edi
  4027fb:	mov    QWORD PTR [rbp-0x10],rsi
  4027ff:	cmp    DWORD PTR [rbp-0x4],0x3
  402803:	jge    402824 <rb_strcasecmp@plt+0x2d4>
  402809:	mov    edx,DWORD PTR [rbp-0x4]
  40280c:	mov    edi,0x43
  402811:	lea    rsi,[rip+0xd832]        # 41004a <rb_strcasecmp@plt+0xdafa>
  402818:	mov    al,0x0
  40281a:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40281f:	jmp    4028b2 <rb_strcasecmp@plt+0x362>
  402824:	xor    eax,eax
  402826:	mov    esi,eax
  402828:	mov    rcx,QWORD PTR [rbp-0x10]
  40282c:	mov    rdi,QWORD PTR [rcx+0x8]
  402830:	mov    edx,0x10
  402835:	call   4024c0 <strtoull@plt>
  40283a:	mov    edx,0xffffffff
  40283f:	mov    ecx,edx
  402841:	mov    QWORD PTR [rbp-0x20],rax
  402845:	cmp    rax,rcx
  402848:	jbe    40286e <rb_strcasecmp@plt+0x31e>
  40284e:	mov    rax,QWORD PTR [rbp-0x10]
  402852:	mov    rdx,QWORD PTR [rax+0x8]
  402856:	mov    edi,0x43
  40285b:	lea    rsi,[rip+0xd833]        # 410095 <rb_strcasecmp@plt+0xdb45>
  402862:	mov    al,0x0
  402864:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  402869:	jmp    4028b2 <rb_strcasecmp@plt+0x362>
  40286e:	lea    rax,[rip+0x1324b]        # 415ac0 <rb_strcasecmp@plt+0x13570>
  402875:	mov    rcx,QWORD PTR [rbp-0x10]
  402879:	mov    rcx,QWORD PTR [rcx+0x10]
  40287d:	movzx  edx,BYTE PTR [rcx]
  402880:	mov    ecx,edx
  402882:	mov    rax,QWORD PTR [rax+rcx*8]
  402886:	mov    QWORD PTR [rbp-0x18],rax
  40288a:	cmp    rax,0x0
  40288e:	jne    402899 <rb_strcasecmp@plt+0x349>
  402894:	jmp    4028b2 <rb_strcasecmp@plt+0x362>
  402899:	mov    rax,QWORD PTR [rbp-0x18]
  40289d:	mov    rcx,QWORD PTR [rbp-0x20]
  4028a1:	mov    edx,ecx
  4028a3:	mov    rcx,QWORD PTR [rbp-0x10]
  4028a7:	mov    rcx,QWORD PTR [rcx+0x10]
  4028ab:	mov    edi,edx
  4028ad:	movsx  esi,BYTE PTR [rcx]
  4028b0:	call   rax
  4028b2:	add    rsp,0x20
  4028b6:	pop    rbp
  4028b7:	ret    
  4028b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	push   rbp
  4028c1:	mov    rbp,rsp
  4028c4:	sub    rsp,0x30
  4028c8:	mov    DWORD PTR [rbp-0x4],0x0
  4028cf:	mov    DWORD PTR [rbp-0x8],edi
  4028d2:	mov    QWORD PTR [rbp-0x10],rsi
  4028d6:	call   4029b0 <rb_strcasecmp@plt+0x460>
  4028db:	xor    edi,edi
  4028dd:	mov    esi,edi
  4028df:	mov    edi,0x100
  4028e4:	mov    r9d,edi
  4028e7:	lea    rdi,[rip+0x202]        # 402af0 <rb_strcasecmp@plt+0x5a0>
  4028ee:	lea    rax,[rip+0x29b]        # 402b90 <rb_strcasecmp@plt+0x640>
  4028f5:	mov    QWORD PTR [rbp-0x18],rsi
  4028f9:	mov    rsi,rax
  4028fc:	mov    rdx,QWORD PTR [rbp-0x18]
  402900:	mov    rcx,QWORD PTR [rbp-0x18]
  402904:	mov    r8,QWORD PTR [rbp-0x18]
  402908:	mov    QWORD PTR [rsp],0x100
  402910:	mov    QWORD PTR [rsp+0x8],0x100
  402919:	call   402160 <rb_helper_child@plt>
  40291e:	lea    rcx,[rip+0x145bb]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  402925:	mov    QWORD PTR [rcx],rax
  402928:	cmp    QWORD PTR [rcx],0x0
  40292c:	jne    402957 <rb_strcasecmp@plt+0x407>
  402932:	mov    rax,QWORD PTR [rip+0x126bf]        # 414ff8 <rb_strcasecmp@plt+0x12aa8>
  402939:	mov    rdi,QWORD PTR [rax]
  40293c:	lea    rsi,[rip+0xd6c1]        # 410004 <rb_strcasecmp@plt+0xdab4>
  402943:	mov    al,0x0
  402945:	call   402530 <fprintf@plt>
  40294a:	mov    edi,0x1
  40294f:	mov    DWORD PTR [rbp-0x1c],eax
  402952:	call   4020e0 <exit@plt>
  402957:	call   4023e0 <rb_set_time@plt>
  40295c:	call   4029b0 <rb_strcasecmp@plt+0x460>
  402961:	mov    rax,QWORD PTR [rip+0x12680]        # 414fe8 <rb_strcasecmp@plt+0x12a98>
  402968:	lea    rdi,[rip+0xd6c4]        # 410033 <rb_strcasecmp@plt+0xdae3>
  40296f:	mov    rsi,rax
  402972:	call   402450 <rb_dictionary_create@plt>
  402977:	lea    rsi,[rip+0x18812]        # 41b190 <rb_strcasecmp@plt+0x18c40>
  40297e:	mov    QWORD PTR [rsi],rax
  402981:	call   405320 <rb_strcasecmp@plt+0x2dd0>
  402986:	call   403eb0 <rb_strcasecmp@plt+0x1960>
  40298b:	xor    ecx,ecx
  40298d:	mov    edi,ecx
  40298f:	mov    esi,0x1
  402994:	call   402390 <rb_init_prng@plt>
  402999:	xor    ecx,ecx
  40299b:	mov    esi,ecx
  40299d:	lea    rdi,[rip+0x1453c]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  4029a4:	mov    rdi,QWORD PTR [rdi]
  4029a7:	mov    DWORD PTR [rbp-0x20],eax
  4029aa:	call   402030 <rb_helper_loop@plt>
  4029af:	nop
  4029b0:	push   rbp
  4029b1:	mov    rbp,rsp
  4029b4:	sub    rsp,0xc0
  4029bb:	mov    eax,0x1
  4029c0:	mov    ecx,eax
  4029c2:	mov    DWORD PTR [rbp-0x10],0x0
  4029c9:	mov    QWORD PTR [rbp-0x98],rcx
  4029d0:	lea    rcx,[rbp-0x98]
  4029d7:	add    rcx,0x8
  4029db:	mov    rdi,rcx
  4029de:	call   4024f0 <sigemptyset@plt>
  4029e3:	lea    rcx,[rbp-0x98]
  4029ea:	add    rcx,0x8
  4029ee:	mov    rdi,rcx
  4029f1:	mov    esi,0xd
  4029f6:	mov    DWORD PTR [rbp-0x9c],eax
  4029fc:	call   4023f0 <sigaddset@plt>
  402a01:	lea    rcx,[rbp-0x98]
  402a08:	add    rcx,0x8
  402a0c:	mov    rdi,rcx
  402a0f:	mov    esi,0xe
  402a14:	mov    DWORD PTR [rbp-0xa0],eax
  402a1a:	call   4023f0 <sigaddset@plt>
  402a1f:	lea    rcx,[rbp-0x98]
  402a26:	add    rcx,0x8
  402a2a:	mov    rdi,rcx
  402a2d:	mov    esi,0x5
  402a32:	mov    DWORD PTR [rbp-0xa4],eax
  402a38:	call   4023f0 <sigaddset@plt>
  402a3d:	lea    rcx,[rbp-0x98]
  402a44:	add    rcx,0x8
  402a48:	mov    rdi,rcx
  402a4b:	mov    esi,0x1c
  402a50:	mov    DWORD PTR [rbp-0xa8],eax
  402a56:	call   4023f0 <sigaddset@plt>
  402a5b:	xor    esi,esi
  402a5d:	mov    edx,esi
  402a5f:	mov    edi,0x1c
  402a64:	lea    rsi,[rbp-0x98]
  402a6b:	mov    DWORD PTR [rbp-0xac],eax
  402a71:	call   4022f0 <sigaction@plt>
  402a76:	xor    edi,edi
  402a78:	mov    edx,edi
  402a7a:	mov    edi,0xd
  402a7f:	lea    rsi,[rbp-0x98]
  402a86:	mov    DWORD PTR [rbp-0xb0],eax
  402a8c:	call   4022f0 <sigaction@plt>
  402a91:	xor    edi,edi
  402a93:	mov    edx,edi
  402a95:	mov    edi,0x5
  402a9a:	lea    rsi,[rbp-0x98]
  402aa1:	mov    DWORD PTR [rbp-0xb4],eax
  402aa7:	call   4022f0 <sigaction@plt>
  402aac:	xor    edi,edi
  402aae:	mov    edx,edi
  402ab0:	lea    rcx,[rip+0xf9]        # 402bb0 <rb_strcasecmp@plt+0x660>
  402ab7:	mov    QWORD PTR [rbp-0x98],rcx
  402abe:	mov    edi,0xe
  402ac3:	lea    rsi,[rbp-0x98]
  402aca:	mov    DWORD PTR [rbp-0xb8],eax
  402ad0:	call   4022f0 <sigaction@plt>
  402ad5:	mov    DWORD PTR [rbp-0xbc],eax
  402adb:	add    rsp,0xc0
  402ae2:	pop    rbp
  402ae3:	ret    
  402ae4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402aee:	xchg   ax,ax
  402af0:	push   rbp
  402af1:	mov    rbp,rsp
  402af4:	sub    rsp,0x20
  402af8:	mov    QWORD PTR [rbp-0x8],rdi
  402afc:	mov    eax,0x4000
  402b01:	mov    edx,eax
  402b03:	mov    rdi,QWORD PTR [rbp-0x8]
  402b07:	lea    rsi,[rip+0x14442]        # 416f50 <rb_strcasecmp@plt+0x14a00>
  402b0e:	call   402400 <rb_helper_read@plt>
  402b13:	mov    DWORD PTR [rbp-0x10],eax
  402b16:	cmp    eax,0x0
  402b19:	jle    402b84 <rb_strcasecmp@plt+0x634>
  402b1f:	lea    rdi,[rip+0x1442a]        # 416f50 <rb_strcasecmp@plt+0x14a00>
  402b26:	lea    rsi,[rip+0x143c3]        # 416ef0 <rb_strcasecmp@plt+0x149a0>
  402b2d:	mov    edx,0xa
  402b32:	call   402220 <rb_string_to_array@plt>
  402b37:	mov    DWORD PTR [rbp-0xc],eax
  402b3a:	cmp    DWORD PTR [rbp-0xc],0x1
  402b3e:	jge    402b49 <rb_strcasecmp@plt+0x5f9>
  402b44:	jmp    402afc <rb_strcasecmp@plt+0x5ac>
  402b49:	lea    rax,[rip+0x12770]        # 4152c0 <rb_strcasecmp@plt+0x12d70>
  402b50:	mov    rcx,QWORD PTR [rip+0x14399]        # 416ef0 <rb_strcasecmp@plt+0x149a0>
  402b57:	movzx  edx,BYTE PTR [rcx]
  402b5a:	mov    ecx,edx
  402b5c:	mov    rax,QWORD PTR [rax+rcx*8]
  402b60:	mov    QWORD PTR [rbp-0x18],rax
  402b64:	cmp    QWORD PTR [rbp-0x18],0x0
  402b69:	je     402b7f <rb_strcasecmp@plt+0x62f>
  402b6f:	mov    rax,QWORD PTR [rbp-0x18]
  402b73:	mov    edi,DWORD PTR [rbp-0xc]
  402b76:	lea    rsi,[rip+0x14373]        # 416ef0 <rb_strcasecmp@plt+0x149a0>
  402b7d:	call   rax
  402b7f:	jmp    402afc <rb_strcasecmp@plt+0x5ac>
  402b84:	add    rsp,0x20
  402b88:	pop    rbp
  402b89:	ret    
  402b8a:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	push   rbp
  402b91:	mov    rbp,rsp
  402b94:	sub    rsp,0x10
  402b98:	mov    QWORD PTR [rbp-0x8],rdi
  402b9c:	mov    edi,0x1
  402ba1:	call   4020e0 <exit@plt>
  402ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bb0:	push   rbp
  402bb1:	mov    rbp,rsp
  402bb4:	mov    DWORD PTR [rbp-0x4],edi
  402bb7:	pop    rbp
  402bb8:	ret    
  402bb9:	nop    DWORD PTR [rax+0x0]
  402bc0:	push   rbp
  402bc1:	mov    rbp,rsp
  402bc4:	sub    rsp,0x40
  402bc8:	mov    eax,0xb0
  402bcd:	mov    r8d,eax
  402bd0:	mov    QWORD PTR [rbp-0x10],rdi
  402bd4:	mov    DWORD PTR [rbp-0x14],esi
  402bd7:	mov    QWORD PTR [rbp-0x20],rdx
  402bdb:	mov    QWORD PTR [rbp-0x28],rcx
  402bdf:	mov    rdi,r8
  402be2:	call   402cd0 <rb_strcasecmp@plt+0x780>
  402be7:	mov    QWORD PTR [rbp-0x30],rax
  402beb:	cmp    DWORD PTR [rbp-0x14],0x2
  402bef:	jne    402c0c <rb_strcasecmp@plt+0x6bc>
  402bf5:	mov    rax,QWORD PTR [rbp-0x30]
  402bf9:	mov    DWORD PTR [rax+0x10],0x34
  402c00:	mov    DWORD PTR [rbp-0x34],0x1
  402c07:	jmp    402c4b <rb_strcasecmp@plt+0x6fb>
  402c0c:	cmp    DWORD PTR [rbp-0x14],0xa
  402c10:	jne    402c2d <rb_strcasecmp@plt+0x6dd>
  402c16:	mov    rax,QWORD PTR [rbp-0x30]
  402c1a:	mov    DWORD PTR [rax+0x10],0x36
  402c21:	mov    DWORD PTR [rbp-0x34],0x1c
  402c28:	jmp    402c46 <rb_strcasecmp@plt+0x6f6>
  402c2d:	mov    rax,QWORD PTR [rbp-0x30]
  402c31:	mov    rdi,rax
  402c34:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  402c39:	mov    QWORD PTR [rbp-0x8],0x0
  402c41:	jmp    402cba <rb_strcasecmp@plt+0x76a>
  402c46:	jmp    402c4b <rb_strcasecmp@plt+0x6fb>
  402c4b:	lea    rax,[rip+0x182fe]        # 41af50 <rb_strcasecmp@plt+0x18a00>
  402c52:	mov    rcx,QWORD PTR [rax]
  402c55:	mov    rdx,rcx
  402c58:	add    rdx,0x1
  402c5c:	mov    QWORD PTR [rax],rdx
  402c5f:	mov    rax,QWORD PTR [rbp-0x30]
  402c63:	mov    QWORD PTR [rax+0x98],rcx
  402c6a:	mov    rax,QWORD PTR [rbp-0x20]
  402c6e:	mov    rcx,QWORD PTR [rbp-0x30]
  402c72:	mov    QWORD PTR [rcx+0xa0],rax
  402c79:	mov    rax,QWORD PTR [rbp-0x28]
  402c7d:	mov    rcx,QWORD PTR [rbp-0x30]
  402c81:	mov    QWORD PTR [rcx+0xa8],rax
  402c88:	mov    rax,QWORD PTR [rbp-0x30]
  402c8c:	mov    rcx,QWORD PTR [rbp-0x30]
  402c90:	mov    QWORD PTR [rcx],rax
  402c93:	mov    rax,QWORD PTR [rbp-0x30]
  402c97:	lea    rcx,[rip+0xd2]        # 402d70 <rb_strcasecmp@plt+0x820>
  402c9e:	mov    QWORD PTR [rax+0x8],rcx
  402ca2:	mov    rdi,QWORD PTR [rbp-0x10]
  402ca6:	mov    rsi,QWORD PTR [rbp-0x30]
  402caa:	mov    edx,DWORD PTR [rbp-0x34]
  402cad:	call   405440 <rb_strcasecmp@plt+0x2ef0>
  402cb2:	mov    rax,QWORD PTR [rbp-0x30]
  402cb6:	mov    QWORD PTR [rbp-0x8],rax
  402cba:	mov    rax,QWORD PTR [rbp-0x8]
  402cbe:	add    rsp,0x40
  402cc2:	pop    rbp
  402cc3:	ret    
  402cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cce:	xchg   ax,ax
  402cd0:	push   rbp
  402cd1:	mov    rbp,rsp
  402cd4:	sub    rsp,0x10
  402cd8:	mov    eax,0x1
  402cdd:	mov    ecx,eax
  402cdf:	mov    QWORD PTR [rbp-0x8],rdi
  402ce3:	mov    rsi,QWORD PTR [rbp-0x8]
  402ce7:	mov    rdi,rcx
  402cea:	call   402470 <calloc@plt>
  402cef:	mov    QWORD PTR [rbp-0x10],rax
  402cf3:	cmp    QWORD PTR [rbp-0x10],0x0
  402cf8:	sete   dl
  402cfb:	xor    dl,0xff
  402cfe:	xor    dl,0xff
  402d01:	and    dl,0x1
  402d04:	movzx  r8d,dl
  402d08:	movsxd rax,r8d
  402d0b:	cmp    rax,0x0
  402d0f:	je     402d1a <rb_strcasecmp@plt+0x7ca>
  402d15:	call   4023b0 <rb_outofmemory@plt>
  402d1a:	mov    rax,QWORD PTR [rbp-0x10]
  402d1e:	add    rsp,0x10
  402d22:	pop    rbp
  402d23:	ret    
  402d24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d2e:	xchg   ax,ax
  402d30:	push   rbp
  402d31:	mov    rbp,rsp
  402d34:	sub    rsp,0x10
  402d38:	mov    QWORD PTR [rbp-0x8],rdi
  402d3c:	cmp    QWORD PTR [rbp-0x8],0x0
  402d41:	setne  al
  402d44:	xor    al,0xff
  402d46:	xor    al,0xff
  402d48:	and    al,0x1
  402d4a:	movzx  ecx,al
  402d4d:	movsxd rdi,ecx
  402d50:	cmp    rdi,0x0
  402d54:	je     402d63 <rb_strcasecmp@plt+0x813>
  402d5a:	mov    rdi,QWORD PTR [rbp-0x8]
  402d5e:	call   402200 <free@plt>
  402d63:	add    rsp,0x10
  402d67:	pop    rbp
  402d68:	ret    
  402d69:	nop    DWORD PTR [rax+0x0]
  402d70:	push   rbp
  402d71:	mov    rbp,rsp
  402d74:	sub    rsp,0x90
  402d7b:	xor    eax,eax
  402d7d:	mov    ecx,0x35
  402d82:	mov    edx,ecx
  402d84:	mov    QWORD PTR [rbp-0x8],rdi
  402d88:	mov    QWORD PTR [rbp-0x10],rsi
  402d8c:	mov    rsi,QWORD PTR [rbp-0x8]
  402d90:	mov    QWORD PTR [rbp-0x18],rsi
  402d94:	lea    rsi,[rbp-0x50]
  402d98:	mov    rdi,rsi
  402d9b:	mov    esi,eax
  402d9d:	call   402040 <memset@plt>
  402da2:	mov    BYTE PTR [rbp-0x50],0x2a
  402da6:	cmp    QWORD PTR [rbp-0x18],0x0
  402dab:	jne    402dce <rb_strcasecmp@plt+0x87e>
  402db1:	mov    edi,0x43
  402db6:	lea    rsi,[rip+0xd454]        # 410211 <rb_strcasecmp@plt+0xdcc1>
  402dbd:	mov    al,0x0
  402dbf:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  402dc4:	mov    edi,0x2
  402dc9:	call   4020e0 <exit@plt>
  402dce:	cmp    QWORD PTR [rbp-0x10],0x0
  402dd3:	jne    402dde <rb_strcasecmp@plt+0x88e>
  402dd9:	jmp    402ee6 <rb_strcasecmp@plt+0x996>
  402dde:	mov    rax,QWORD PTR [rbp-0x18]
  402de2:	mov    ecx,DWORD PTR [rax+0x10]
  402de5:	mov    edx,ecx
  402de7:	sub    edx,0x34
  402dea:	mov    DWORD PTR [rbp-0x54],ecx
  402ded:	mov    DWORD PTR [rbp-0x58],edx
  402df0:	je     402e0f <rb_strcasecmp@plt+0x8bf>
  402df6:	jmp    402dfb <rb_strcasecmp@plt+0x8ab>
  402dfb:	mov    eax,DWORD PTR [rbp-0x54]
  402dfe:	sub    eax,0x36
  402e01:	mov    DWORD PTR [rbp-0x5c],eax
  402e04:	je     402e42 <rb_strcasecmp@plt+0x8f2>
  402e0a:	jmp    402ebd <rb_strcasecmp@plt+0x96d>
  402e0f:	mov    rax,QWORD PTR [rbp-0x10]
  402e13:	movzx  ecx,WORD PTR [rax+0x8]
  402e17:	cmp    ecx,0x2
  402e1a:	jne    402e3d <rb_strcasecmp@plt+0x8ed>
  402e20:	lea    rsi,[rbp-0x50]
  402e24:	mov    rax,QWORD PTR [rbp-0x10]
  402e28:	add    rax,0x8
  402e2c:	mov    rdi,rax
  402e2f:	mov    edx,0x35
  402e34:	call   402420 <rb_inet_ntop_sock@plt>
  402e39:	mov    QWORD PTR [rbp-0x68],rax
  402e3d:	jmp    402ee1 <rb_strcasecmp@plt+0x991>
  402e42:	mov    rax,QWORD PTR [rbp-0x10]
  402e46:	movzx  ecx,WORD PTR [rax+0x8]
  402e4a:	cmp    ecx,0xa
  402e4d:	jne    402eb8 <rb_strcasecmp@plt+0x968>
  402e53:	lea    rsi,[rbp-0x50]
  402e57:	mov    rax,QWORD PTR [rbp-0x10]
  402e5b:	add    rax,0x8
  402e5f:	mov    rdi,rax
  402e62:	mov    edx,0x35
  402e67:	call   402420 <rb_inet_ntop_sock@plt>
  402e6c:	movsx  edx,BYTE PTR [rbp-0x50]
  402e70:	cmp    edx,0x3a
  402e73:	mov    QWORD PTR [rbp-0x70],rax
  402e77:	jne    402eb3 <rb_strcasecmp@plt+0x963>
  402e7d:	lea    rax,[rbp-0x50]
  402e81:	mov    rcx,rax
  402e84:	add    rcx,0x1
  402e88:	mov    rdi,rax
  402e8b:	mov    QWORD PTR [rbp-0x78],rax
  402e8f:	mov    QWORD PTR [rbp-0x80],rcx
  402e93:	call   402210 <strlen@plt>
  402e98:	mov    rdi,QWORD PTR [rbp-0x80]
  402e9c:	mov    rsi,QWORD PTR [rbp-0x78]
  402ea0:	mov    rdx,rax
  402ea3:	call   402360 <memmove@plt>
  402ea8:	mov    BYTE PTR [rbp-0x50],0x30
  402eac:	mov    QWORD PTR [rbp-0x88],rax
  402eb3:	jmp    402eb8 <rb_strcasecmp@plt+0x968>
  402eb8:	jmp    402ee1 <rb_strcasecmp@plt+0x991>
  402ebd:	mov    rax,QWORD PTR [rbp-0x18]
  402ec1:	mov    edx,DWORD PTR [rax+0x10]
  402ec4:	mov    edi,0x43
  402ec9:	lea    rsi,[rip+0xd36d]        # 41023d <rb_strcasecmp@plt+0xdced>
  402ed0:	mov    al,0x0
  402ed2:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  402ed7:	mov    edi,0x2
  402edc:	call   4020e0 <exit@plt>
  402ee1:	jmp    402ee6 <rb_strcasecmp@plt+0x996>
  402ee6:	mov    rax,QWORD PTR [rbp-0x18]
  402eea:	cmp    QWORD PTR [rax+0xa0],0x0
  402ef2:	je     402f40 <rb_strcasecmp@plt+0x9f0>
  402ef8:	lea    rdi,[rbp-0x50]
  402efc:	mov    rax,QWORD PTR [rbp-0x18]
  402f00:	mov    rax,QWORD PTR [rax+0xa0]
  402f07:	movsx  ecx,BYTE PTR [rbp-0x50]
  402f0b:	cmp    ecx,0x2a
  402f0e:	setne  dl
  402f11:	mov    rsi,QWORD PTR [rbp-0x18]
  402f15:	mov    ecx,DWORD PTR [rsi+0x10]
  402f18:	mov    rsi,QWORD PTR [rbp-0x18]
  402f1c:	mov    rsi,QWORD PTR [rsi+0xa8]
  402f23:	movzx  r8d,dl
  402f27:	and    r8d,0x1
  402f2b:	mov    QWORD PTR [rbp-0x90],rsi
  402f32:	mov    esi,r8d
  402f35:	mov    edx,ecx
  402f37:	mov    rcx,QWORD PTR [rbp-0x90]
  402f3e:	call   rax
  402f40:	mov    rax,QWORD PTR [rbp-0x18]
  402f44:	mov    rdi,rax
  402f47:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  402f4c:	add    rsp,0x90
  402f53:	pop    rbp
  402f54:	ret    
  402f55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f5f:	nop
  402f60:	push   rbp
  402f61:	mov    rbp,rsp
  402f64:	sub    rsp,0x30
  402f68:	mov    eax,0xb0
  402f6d:	mov    ecx,eax
  402f6f:	mov    QWORD PTR [rbp-0x10],rdi
  402f73:	mov    QWORD PTR [rbp-0x18],rsi
  402f77:	mov    QWORD PTR [rbp-0x20],rdx
  402f7b:	mov    rdi,rcx
  402f7e:	call   402cd0 <rb_strcasecmp@plt+0x780>
  402f83:	mov    QWORD PTR [rbp-0x28],rax
  402f87:	mov    rdi,QWORD PTR [rbp-0x10]
  402f8b:	mov    rax,QWORD PTR [rbp-0x28]
  402f8f:	add    rax,0x18
  402f93:	mov    rsi,rax
  402f96:	call   402280 <rb_inet_pton_sock@plt>
  402f9b:	cmp    eax,0x0
  402f9e:	jne    402fbd <rb_strcasecmp@plt+0xa6d>
  402fa4:	mov    rax,QWORD PTR [rbp-0x28]
  402fa8:	mov    rdi,rax
  402fab:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  402fb0:	mov    QWORD PTR [rbp-0x8],0x0
  402fb8:	jmp    40308d <rb_strcasecmp@plt+0xb3d>
  402fbd:	mov    rax,QWORD PTR [rbp-0x28]
  402fc1:	movzx  ecx,WORD PTR [rax+0x18]
  402fc5:	mov    DWORD PTR [rbp-0x2c],ecx
  402fc8:	cmp    DWORD PTR [rbp-0x2c],0x2
  402fcc:	jne    402fe2 <rb_strcasecmp@plt+0xa92>
  402fd2:	mov    rax,QWORD PTR [rbp-0x28]
  402fd6:	mov    DWORD PTR [rax+0x10],0x52
  402fdd:	jmp    40301a <rb_strcasecmp@plt+0xaca>
  402fe2:	cmp    DWORD PTR [rbp-0x2c],0xa
  402fe6:	jne    402ffc <rb_strcasecmp@plt+0xaac>
  402fec:	mov    rax,QWORD PTR [rbp-0x28]
  402ff0:	mov    DWORD PTR [rax+0x10],0x53
  402ff7:	jmp    403015 <rb_strcasecmp@plt+0xac5>
  402ffc:	mov    rax,QWORD PTR [rbp-0x28]
  403000:	mov    rdi,rax
  403003:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  403008:	mov    QWORD PTR [rbp-0x8],0x0
  403010:	jmp    40308d <rb_strcasecmp@plt+0xb3d>
  403015:	jmp    40301a <rb_strcasecmp@plt+0xaca>
  40301a:	lea    rax,[rip+0x17f2f]        # 41af50 <rb_strcasecmp@plt+0x18a00>
  403021:	mov    rcx,QWORD PTR [rax]
  403024:	mov    rdx,rcx
  403027:	add    rdx,0x1
  40302b:	mov    QWORD PTR [rax],rdx
  40302e:	mov    rax,QWORD PTR [rbp-0x28]
  403032:	mov    QWORD PTR [rax+0x98],rcx
  403039:	mov    rax,QWORD PTR [rbp-0x18]
  40303d:	mov    rcx,QWORD PTR [rbp-0x28]
  403041:	mov    QWORD PTR [rcx+0xa0],rax
  403048:	mov    rax,QWORD PTR [rbp-0x20]
  40304c:	mov    rcx,QWORD PTR [rbp-0x28]
  403050:	mov    QWORD PTR [rcx+0xa8],rax
  403057:	mov    rax,QWORD PTR [rbp-0x28]
  40305b:	mov    rcx,QWORD PTR [rbp-0x28]
  40305f:	mov    QWORD PTR [rcx],rax
  403062:	mov    rax,QWORD PTR [rbp-0x28]
  403066:	lea    rcx,[rip+0x33]        # 4030a0 <rb_strcasecmp@plt+0xb50>
  40306d:	mov    QWORD PTR [rax+0x8],rcx
  403071:	mov    rax,QWORD PTR [rbp-0x28]
  403075:	add    rax,0x18
  403079:	mov    rsi,QWORD PTR [rbp-0x28]
  40307d:	mov    rdi,rax
  403080:	call   4055f0 <rb_strcasecmp@plt+0x30a0>
  403085:	mov    rax,QWORD PTR [rbp-0x28]
  403089:	mov    QWORD PTR [rbp-0x8],rax
  40308d:	mov    rax,QWORD PTR [rbp-0x8]
  403091:	add    rsp,0x30
  403095:	pop    rbp
  403096:	ret    
  403097:	nop    WORD PTR [rax+rax*1+0x0]
  4030a0:	push   rbp
  4030a1:	mov    rbp,rsp
  4030a4:	sub    rsp,0x50
  4030a8:	mov    QWORD PTR [rbp-0x8],rdi
  4030ac:	mov    QWORD PTR [rbp-0x10],rsi
  4030b0:	mov    rsi,QWORD PTR [rbp-0x8]
  4030b4:	mov    QWORD PTR [rbp-0x18],rsi
  4030b8:	mov    QWORD PTR [rbp-0x20],0x0
  4030c0:	cmp    QWORD PTR [rbp-0x18],0x0
  4030c5:	jne    4030e8 <rb_strcasecmp@plt+0xb98>
  4030cb:	mov    edi,0x43
  4030d0:	lea    rsi,[rip+0xd199]        # 410270 <rb_strcasecmp@plt+0xdd20>
  4030d7:	mov    al,0x0
  4030d9:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  4030de:	mov    edi,0x2
  4030e3:	call   4020e0 <exit@plt>
  4030e8:	cmp    QWORD PTR [rbp-0x10],0x0
  4030ed:	jne    4030f8 <rb_strcasecmp@plt+0xba8>
  4030f3:	jmp    4031e0 <rb_strcasecmp@plt+0xc90>
  4030f8:	mov    rax,QWORD PTR [rbp-0x18]
  4030fc:	cmp    DWORD PTR [rax+0x10],0x52
  403100:	jne    403142 <rb_strcasecmp@plt+0xbf2>
  403106:	mov    rax,QWORD PTR [rbp-0x18]
  40310a:	add    rax,0x18
  40310e:	mov    QWORD PTR [rbp-0x28],rax
  403112:	mov    rax,QWORD PTR [rbp-0x10]
  403116:	add    rax,0x8
  40311a:	mov    QWORD PTR [rbp-0x30],rax
  40311e:	mov    rax,QWORD PTR [rbp-0x28]
  403122:	mov    ecx,DWORD PTR [rax+0x4]
  403125:	mov    rax,QWORD PTR [rbp-0x30]
  403129:	cmp    ecx,DWORD PTR [rax+0x4]
  40312c:	jne    40313d <rb_strcasecmp@plt+0xbed>
  403132:	mov    rax,QWORD PTR [rbp-0x10]
  403136:	mov    rax,QWORD PTR [rax]
  403139:	mov    QWORD PTR [rbp-0x20],rax
  40313d:	jmp    4031db <rb_strcasecmp@plt+0xc8b>
  403142:	mov    rax,QWORD PTR [rbp-0x18]
  403146:	cmp    DWORD PTR [rax+0x10],0x53
  40314a:	jne    4031b2 <rb_strcasecmp@plt+0xc62>
  403150:	mov    rax,QWORD PTR [rbp-0x18]
  403154:	add    rax,0x18
  403158:	mov    QWORD PTR [rbp-0x38],rax
  40315c:	mov    rax,QWORD PTR [rbp-0x10]
  403160:	add    rax,0x8
  403164:	mov    QWORD PTR [rbp-0x40],rax
  403168:	mov    rax,QWORD PTR [rbp-0x38]
  40316c:	add    rax,0x8
  403170:	mov    rcx,QWORD PTR [rbp-0x40]
  403174:	add    rcx,0x8
  403178:	vmovdqu xmm0,XMMWORD PTR [rcx]
  40317c:	vmovdqu xmm1,XMMWORD PTR [rax]
  403180:	vpcmpeqb xmm0,xmm1,xmm0
  403184:	vpmovmskb edx,xmm0
  403188:	sub    edx,0xffff
  40318e:	setne  sil
  403192:	movzx  edi,sil
  403196:	cmp    edi,0x0
  403199:	mov    DWORD PTR [rbp-0x44],edx
  40319c:	jne    4031ad <rb_strcasecmp@plt+0xc5d>
  4031a2:	mov    rax,QWORD PTR [rbp-0x10]
  4031a6:	mov    rax,QWORD PTR [rax]
  4031a9:	mov    QWORD PTR [rbp-0x20],rax
  4031ad:	jmp    4031d6 <rb_strcasecmp@plt+0xc86>
  4031b2:	mov    rax,QWORD PTR [rbp-0x18]
  4031b6:	mov    edx,DWORD PTR [rax+0x10]
  4031b9:	mov    edi,0x43
  4031be:	lea    rsi,[rip+0xd0dd]        # 4102a2 <rb_strcasecmp@plt+0xdd52>
  4031c5:	mov    al,0x0
  4031c7:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  4031cc:	mov    edi,0x2
  4031d1:	call   4020e0 <exit@plt>
  4031d6:	jmp    4031db <rb_strcasecmp@plt+0xc8b>
  4031db:	jmp    4031e0 <rb_strcasecmp@plt+0xc90>
  4031e0:	mov    rax,QWORD PTR [rbp-0x18]
  4031e4:	cmp    QWORD PTR [rax+0xa0],0x0
  4031ec:	je     403230 <rb_strcasecmp@plt+0xce0>
  4031f2:	mov    rax,QWORD PTR [rbp-0x18]
  4031f6:	mov    rax,QWORD PTR [rax+0xa0]
  4031fd:	mov    rdi,QWORD PTR [rbp-0x20]
  403201:	cmp    QWORD PTR [rbp-0x20],0x0
  403206:	setne  cl
  403209:	mov    rdx,QWORD PTR [rbp-0x18]
  40320d:	mov    edx,DWORD PTR [rdx+0x10]
  403210:	mov    rsi,QWORD PTR [rbp-0x18]
  403214:	mov    rsi,QWORD PTR [rsi+0xa8]
  40321b:	movzx  r8d,cl
  40321f:	and    r8d,0x1
  403223:	mov    QWORD PTR [rbp-0x50],rsi
  403227:	mov    esi,r8d
  40322a:	mov    rcx,QWORD PTR [rbp-0x50]
  40322e:	call   rax
  403230:	mov    rax,QWORD PTR [rbp-0x18]
  403234:	mov    rdi,rax
  403237:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  40323c:	add    rsp,0x50
  403240:	pop    rbp
  403241:	ret    
  403242:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40324c:	nop    DWORD PTR [rax+0x0]
  403250:	push   rbp
  403251:	mov    rbp,rsp
  403254:	mov    QWORD PTR [rbp-0x8],rdi
  403258:	mov    rdi,QWORD PTR [rbp-0x8]
  40325c:	mov    QWORD PTR [rdi+0xa8],0x0
  403267:	mov    rdi,QWORD PTR [rbp-0x8]
  40326b:	mov    QWORD PTR [rdi+0xa0],0x0
  403276:	pop    rbp
  403277:	ret    
  403278:	nop    DWORD PTR [rax+rax*1+0x0]
  403280:	push   rbp
  403281:	mov    rbp,rsp
  403284:	sub    rsp,0x40
  403288:	mov    DWORD PTR [rbp-0x4],edi
  40328b:	mov    QWORD PTR [rbp-0x10],rsi
  40328f:	mov    rsi,QWORD PTR [rbp-0x10]
  403293:	mov    rdi,QWORD PTR [rsi+0x8]
  403297:	call   4033b0 <rb_strcasecmp@plt+0xe60>
  40329c:	mov    QWORD PTR [rbp-0x18],rax
  4032a0:	mov    rax,QWORD PTR [rbp-0x10]
  4032a4:	mov    rax,QWORD PTR [rax+0x10]
  4032a8:	mov    cl,BYTE PTR [rax]
  4032aa:	mov    BYTE PTR [rbp-0x19],cl
  4032ad:	mov    rax,QWORD PTR [rbp-0x10]
  4032b1:	mov    rax,QWORD PTR [rax+0x18]
  4032b5:	mov    QWORD PTR [rbp-0x28],rax
  4032b9:	mov    DWORD PTR [rbp-0x2c],0x2
  4032c0:	movsx  edx,BYTE PTR [rbp-0x19]
  4032c4:	mov    r8d,edx
  4032c7:	sub    r8d,0x34
  4032cb:	mov    DWORD PTR [rbp-0x30],edx
  4032ce:	mov    DWORD PTR [rbp-0x34],r8d
  4032d2:	je     40330f <rb_strcasecmp@plt+0xdbf>
  4032d8:	jmp    4032dd <rb_strcasecmp@plt+0xd8d>
  4032dd:	mov    eax,DWORD PTR [rbp-0x30]
  4032e0:	sub    eax,0x36
  4032e3:	mov    DWORD PTR [rbp-0x38],eax
  4032e6:	je     403308 <rb_strcasecmp@plt+0xdb8>
  4032ec:	jmp    4032f1 <rb_strcasecmp@plt+0xda1>
  4032f1:	mov    eax,DWORD PTR [rbp-0x30]
  4032f4:	add    eax,0xffffffae
  4032f7:	sub    eax,0x2
  4032fa:	mov    DWORD PTR [rbp-0x3c],eax
  4032fd:	jb     403347 <rb_strcasecmp@plt+0xdf7>
  403303:	jmp    40337c <rb_strcasecmp@plt+0xe2c>
  403308:	mov    DWORD PTR [rbp-0x2c],0xa
  40330f:	mov    rdi,QWORD PTR [rbp-0x28]
  403313:	mov    esi,DWORD PTR [rbp-0x2c]
  403316:	mov    rcx,QWORD PTR [rbp-0x18]
  40331a:	lea    rdx,[rip+0xff]        # 403420 <rb_strcasecmp@plt+0xed0>
  403321:	call   402bc0 <rb_strcasecmp@plt+0x670>
  403326:	cmp    rax,0x0
  40332a:	jne    403342 <rb_strcasecmp@plt+0xdf2>
  403330:	xor    eax,eax
  403332:	mov    ecx,eax
  403334:	xor    esi,esi
  403336:	movsx  edx,BYTE PTR [rbp-0x19]
  40333a:	mov    rdi,rcx
  40333d:	call   403420 <rb_strcasecmp@plt+0xed0>
  403342:	jmp    40339d <rb_strcasecmp@plt+0xe4d>
  403347:	mov    rdi,QWORD PTR [rbp-0x28]
  40334b:	mov    rdx,QWORD PTR [rbp-0x18]
  40334f:	lea    rsi,[rip+0xca]        # 403420 <rb_strcasecmp@plt+0xed0>
  403356:	call   402f60 <rb_strcasecmp@plt+0xa10>
  40335b:	cmp    rax,0x0
  40335f:	jne    403377 <rb_strcasecmp@plt+0xe27>
  403365:	xor    eax,eax
  403367:	mov    ecx,eax
  403369:	xor    esi,esi
  40336b:	movsx  edx,BYTE PTR [rbp-0x19]
  40336f:	mov    rdi,rcx
  403372:	call   403420 <rb_strcasecmp@plt+0xed0>
  403377:	jmp    40339d <rb_strcasecmp@plt+0xe4d>
  40337c:	movsx  edx,BYTE PTR [rbp-0x19]
  403380:	mov    edi,0x43
  403385:	lea    rsi,[rip+0xce05]        # 410191 <rb_strcasecmp@plt+0xdc41>
  40338c:	mov    al,0x0
  40338e:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  403393:	mov    edi,0x2
  403398:	call   4020e0 <exit@plt>
  40339d:	add    rsp,0x40
  4033a1:	pop    rbp
  4033a2:	ret    
  4033a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033ad:	nop    DWORD PTR [rax]
  4033b0:	push   rbp
  4033b1:	mov    rbp,rsp
  4033b4:	sub    rsp,0x20
  4033b8:	mov    QWORD PTR [rbp-0x8],rdi
  4033bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4033c0:	call   402210 <strlen@plt>
  4033c5:	add    rax,0x1
  4033c9:	mov    rdi,rax
  4033cc:	call   402180 <malloc@plt>
  4033d1:	mov    QWORD PTR [rbp-0x10],rax
  4033d5:	cmp    QWORD PTR [rbp-0x10],0x0
  4033da:	sete   cl
  4033dd:	xor    cl,0xff
  4033e0:	xor    cl,0xff
  4033e3:	and    cl,0x1
  4033e6:	movzx  edx,cl
  4033e9:	movsxd rax,edx
  4033ec:	cmp    rax,0x0
  4033f0:	je     4033fb <rb_strcasecmp@plt+0xeab>
  4033f6:	call   4023b0 <rb_outofmemory@plt>
  4033fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4033ff:	mov    rsi,QWORD PTR [rbp-0x8]
  403403:	call   402440 <strcpy@plt>
  403408:	mov    rsi,QWORD PTR [rbp-0x10]
  40340c:	mov    QWORD PTR [rbp-0x18],rax
  403410:	mov    rax,rsi
  403413:	add    rsp,0x20
  403417:	pop    rbp
  403418:	ret    
  403419:	nop    DWORD PTR [rax+0x0]
  403420:	push   rbp
  403421:	mov    rbp,rsp
  403424:	sub    rsp,0x20
  403428:	mov    al,sil
  40342b:	mov    QWORD PTR [rbp-0x8],rdi
  40342f:	and    al,0x1
  403431:	mov    BYTE PTR [rbp-0x9],al
  403434:	mov    DWORD PTR [rbp-0x10],edx
  403437:	mov    QWORD PTR [rbp-0x18],rcx
  40343b:	mov    rcx,QWORD PTR [rbp-0x18]
  40343f:	mov    QWORD PTR [rbp-0x20],rcx
  403443:	cmp    QWORD PTR [rbp-0x20],0x0
  403448:	je     403458 <rb_strcasecmp@plt+0xf08>
  40344e:	cmp    DWORD PTR [rbp-0x10],0x0
  403452:	jne    403475 <rb_strcasecmp@plt+0xf25>
  403458:	mov    edi,0x43
  40345d:	lea    rsi,[rip+0xce77]        # 4102db <rb_strcasecmp@plt+0xdd8b>
  403464:	mov    al,0x0
  403466:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40346b:	mov    edi,0x2
  403470:	call   4020e0 <exit@plt>
  403475:	cmp    QWORD PTR [rbp-0x8],0x0
  40347a:	je     403491 <rb_strcasecmp@plt+0xf41>
  403480:	mov    al,BYTE PTR [rbp-0x9]
  403483:	and    al,0x1
  403485:	movzx  ecx,al
  403488:	cmp    ecx,0x0
  40348b:	jne    4034be <rb_strcasecmp@plt+0xf6e>
  403491:	lea    rax,[rip+0x13a48]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  403498:	mov    rdi,QWORD PTR [rax]
  40349b:	mov    rdx,QWORD PTR [rbp-0x20]
  40349f:	mov    ecx,DWORD PTR [rbp-0x10]
  4034a2:	lea    rsi,[rip+0xce5d]        # 410306 <rb_strcasecmp@plt+0xddb6>
  4034a9:	mov    al,0x0
  4034ab:	call   402480 <rb_helper_write@plt>
  4034b0:	mov    rdi,QWORD PTR [rbp-0x20]
  4034b4:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  4034b9:	jmp    4034ea <rb_strcasecmp@plt+0xf9a>
  4034be:	lea    rax,[rip+0x13a1b]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  4034c5:	mov    rdi,QWORD PTR [rax]
  4034c8:	mov    rdx,QWORD PTR [rbp-0x20]
  4034cc:	mov    ecx,DWORD PTR [rbp-0x10]
  4034cf:	mov    r8,QWORD PTR [rbp-0x8]
  4034d3:	lea    rsi,[rip+0xce38]        # 410312 <rb_strcasecmp@plt+0xddc2>
  4034da:	mov    al,0x0
  4034dc:	call   402480 <rb_helper_write@plt>
  4034e1:	mov    rdi,QWORD PTR [rbp-0x20]
  4034e5:	call   402d30 <rb_strcasecmp@plt+0x7e0>
  4034ea:	add    rsp,0x20
  4034ee:	pop    rbp
  4034ef:	ret    
  4034f0:	push   rbp
  4034f1:	mov    rbp,rsp
  4034f4:	sub    rsp,0x2b0
  4034fb:	mov    al,sil
  4034fe:	lea    rcx,[rip+0x17acf]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  403505:	mov    DWORD PTR [rbp-0x4],edi
  403508:	mov    BYTE PTR [rbp-0x5],al
  40350b:	mov    QWORD PTR [rbp-0x238],0x0
  403516:	cmp    DWORD PTR [rcx],0x0
  403519:	jne    403551 <rb_strcasecmp@plt+0x1001>
  40351f:	mov    edi,0x43
  403524:	lea    rsi,[rip+0xcc97]        # 4101c2 <rb_strcasecmp@plt+0xdc72>
  40352b:	mov    al,0x0
  40352d:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  403532:	mov    edi,DWORD PTR [rbp-0x4]
  403535:	movsx  esi,BYTE PTR [rbp-0x5]
  403539:	lea    rdx,[rip+0xcc98]        # 4101d8 <rb_strcasecmp@plt+0xdc88>
  403540:	mov    al,0x0
  403542:	call   403c90 <rb_strcasecmp@plt+0x1740>
  403547:	mov    edi,0x2
  40354c:	call   4020e0 <exit@plt>
  403551:	mov    DWORD PTR [rbp-0x23c],0x0
  40355b:	lea    rax,[rip+0x17a72]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  403562:	mov    ecx,DWORD PTR [rbp-0x23c]
  403568:	cmp    ecx,DWORD PTR [rax]
  40356a:	jge    403674 <rb_strcasecmp@plt+0x1124>
  403570:	lea    rsi,[rbp-0x280]
  403577:	lea    rax,[rip+0x17d52]        # 41b2d0 <rb_strcasecmp@plt+0x18d80>
  40357e:	movsxd rcx,DWORD PTR [rbp-0x23c]
  403585:	shl    rcx,0x7
  403589:	add    rax,rcx
  40358c:	mov    rdi,rax
  40358f:	mov    edx,0x35
  403594:	call   402420 <rb_inet_ntop_sock@plt>
  403599:	cmp    BYTE PTR [rbp-0x280],0x0
  4035a0:	mov    QWORD PTR [rbp-0x290],rax
  4035a7:	jne    4035df <rb_strcasecmp@plt+0x108f>
  4035ad:	mov    edi,0x43
  4035b2:	lea    rsi,[rip+0xcc2d]        # 4101e6 <rb_strcasecmp@plt+0xdc96>
  4035b9:	mov    al,0x0
  4035bb:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  4035c0:	mov    edi,DWORD PTR [rbp-0x4]
  4035c3:	movsx  esi,BYTE PTR [rbp-0x5]
  4035c7:	lea    rdx,[rip+0xcc2d]        # 4101fb <rb_strcasecmp@plt+0xdcab>
  4035ce:	mov    al,0x0
  4035d0:	call   403c90 <rb_strcasecmp@plt+0x1740>
  4035d5:	mov    edi,0x2
  4035da:	call   4020e0 <exit@plt>
  4035df:	lea    rax,[rbp-0x280]
  4035e6:	mov    ecx,0x21c
  4035eb:	mov    edx,ecx
  4035ed:	mov    rdi,rax
  4035f0:	mov    QWORD PTR [rbp-0x298],rax
  4035f7:	mov    QWORD PTR [rbp-0x2a0],rdx
  4035fe:	call   402210 <strlen@plt>
  403603:	add    rax,0x1
  403607:	mov    QWORD PTR [rbp-0x288],rax
  40360e:	lea    rax,[rbp-0x230]
  403615:	add    rax,QWORD PTR [rbp-0x238]
  40361c:	mov    rdx,QWORD PTR [rbp-0x2a0]
  403623:	sub    rdx,QWORD PTR [rbp-0x238]
  40362a:	mov    rdi,rax
  40362d:	mov    rsi,rdx
  403630:	lea    rdx,[rip+0xcbd6]        # 41020d <rb_strcasecmp@plt+0xdcbd>
  403637:	mov    rcx,QWORD PTR [rbp-0x298]
  40363e:	mov    al,0x0
  403640:	call   402080 <snprintf@plt>
  403645:	mov    rcx,QWORD PTR [rbp-0x288]
  40364c:	add    rcx,QWORD PTR [rbp-0x238]
  403653:	mov    QWORD PTR [rbp-0x238],rcx
  40365a:	mov    DWORD PTR [rbp-0x2a4],eax
  403660:	mov    eax,DWORD PTR [rbp-0x23c]
  403666:	add    eax,0x1
  403669:	mov    DWORD PTR [rbp-0x23c],eax
  40366f:	jmp    40355b <rb_strcasecmp@plt+0x100b>
  403674:	cmp    QWORD PTR [rbp-0x238],0x0
  40367c:	jbe    40369f <rb_strcasecmp@plt+0x114f>
  403682:	mov    rax,QWORD PTR [rbp-0x238]
  403689:	mov    rcx,rax
  40368c:	add    rcx,0xffffffffffffffff
  403690:	mov    QWORD PTR [rbp-0x238],rcx
  403697:	mov    BYTE PTR [rbp+rax*1-0x231],0x0
  40369f:	lea    rcx,[rbp-0x230]
  4036a6:	mov    edi,DWORD PTR [rbp-0x4]
  4036a9:	mov    al,BYTE PTR [rbp-0x5]
  4036ac:	movsx  esi,al
  4036af:	lea    rdx,[rip+0xdae7]        # 41119d <rb_strcasecmp@plt+0xec4d>
  4036b6:	mov    al,0x0
  4036b8:	call   403ab0 <rb_strcasecmp@plt+0x1560>
  4036bd:	add    rsp,0x2b0
  4036c4:	pop    rbp
  4036c5:	ret    
  4036c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036d0:	push   rbp
  4036d1:	mov    rbp,rsp
  4036d4:	sub    rsp,0x10
  4036d8:	mov    al,dil
  4036db:	mov    BYTE PTR [rbp-0x1],al
  4036de:	call   405410 <rb_strcasecmp@plt+0x2ec0>
  4036e3:	add    rsp,0x10
  4036e7:	pop    rbp
  4036e8:	ret    
  4036e9:	nop    DWORD PTR [rax]
  4036ec:	nop    DWORD PTR [rax+0x0]
  4036f0:	push   rbp
  4036f1:	mov    rbp,rsp
  4036f4:	sub    rsp,0x3a0
  4036fb:	test   al,al
  4036fd:	vmovaps XMMWORD PTR [rbp-0x2f0],xmm7
  403705:	vmovaps XMMWORD PTR [rbp-0x300],xmm6
  40370d:	vmovaps XMMWORD PTR [rbp-0x310],xmm5
  403715:	vmovaps XMMWORD PTR [rbp-0x320],xmm4
  40371d:	vmovaps XMMWORD PTR [rbp-0x330],xmm3
  403725:	vmovaps XMMWORD PTR [rbp-0x340],xmm2
  40372d:	vmovaps XMMWORD PTR [rbp-0x350],xmm1
  403735:	vmovaps XMMWORD PTR [rbp-0x360],xmm0
  40373d:	mov    DWORD PTR [rbp-0x364],edi
  403743:	mov    QWORD PTR [rbp-0x370],r9
  40374a:	mov    QWORD PTR [rbp-0x378],r8
  403751:	mov    QWORD PTR [rbp-0x380],rcx
  403758:	mov    QWORD PTR [rbp-0x388],rdx
  40375f:	mov    QWORD PTR [rbp-0x390],rsi
  403766:	je     4037ec <rb_strcasecmp@plt+0x129c>
  40376c:	vmovaps xmm0,XMMWORD PTR [rbp-0x360]
  403774:	vmovaps XMMWORD PTR [rbp-0x2b0],xmm0
  40377c:	vmovaps xmm1,XMMWORD PTR [rbp-0x350]
  403784:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm1
  40378c:	vmovaps xmm2,XMMWORD PTR [rbp-0x340]
  403794:	vmovaps XMMWORD PTR [rbp-0x290],xmm2
  40379c:	vmovaps xmm3,XMMWORD PTR [rbp-0x330]
  4037a4:	vmovaps XMMWORD PTR [rbp-0x280],xmm3
  4037ac:	vmovaps xmm4,XMMWORD PTR [rbp-0x320]
  4037b4:	vmovaps XMMWORD PTR [rbp-0x270],xmm4
  4037bc:	vmovaps xmm5,XMMWORD PTR [rbp-0x310]
  4037c4:	vmovaps XMMWORD PTR [rbp-0x260],xmm5
  4037cc:	vmovaps xmm6,XMMWORD PTR [rbp-0x300]
  4037d4:	vmovaps XMMWORD PTR [rbp-0x250],xmm6
  4037dc:	vmovaps xmm7,XMMWORD PTR [rbp-0x2f0]
  4037e4:	vmovaps XMMWORD PTR [rbp-0x240],xmm7
  4037ec:	mov    rax,QWORD PTR [rbp-0x370]
  4037f3:	mov    QWORD PTR [rbp-0x2b8],rax
  4037fa:	mov    rcx,QWORD PTR [rbp-0x378]
  403801:	mov    QWORD PTR [rbp-0x2c0],rcx
  403808:	mov    rdx,QWORD PTR [rbp-0x380]
  40380f:	mov    QWORD PTR [rbp-0x2c8],rdx
  403816:	mov    rsi,QWORD PTR [rbp-0x388]
  40381d:	mov    QWORD PTR [rbp-0x2d0],rsi
  403824:	mov    rdi,QWORD PTR [rbp-0x390]
  40382b:	mov    r8d,DWORD PTR [rbp-0x364]
  403832:	mov    DWORD PTR [rbp-0x4],r8d
  403836:	mov    QWORD PTR [rbp-0x10],rdi
  40383a:	lea    rdi,[rbp-0x2e0]
  403841:	mov    QWORD PTR [rbp-0x220],rdi
  403848:	lea    rdi,[rbp+0x10]
  40384c:	mov    QWORD PTR [rbp-0x228],rdi
  403853:	mov    DWORD PTR [rbp-0x22c],0x30
  40385d:	mov    DWORD PTR [rbp-0x230],0x10
  403867:	mov    rdx,QWORD PTR [rbp-0x10]
  40386b:	mov    r8d,0x200
  403871:	mov    esi,r8d
  403874:	lea    rdi,[rbp-0x210]
  40387b:	lea    rcx,[rbp-0x230]
  403882:	mov    QWORD PTR [rbp-0x398],rdi
  403889:	call   402380 <vsnprintf@plt>
  40388e:	lea    rcx,[rip+0x1364b]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  403895:	mov    rdi,QWORD PTR [rcx]
  403898:	mov    edx,DWORD PTR [rbp-0x4]
  40389b:	lea    rsi,[rip+0xca7d]        # 41031f <rb_strcasecmp@plt+0xddcf>
  4038a2:	xor    r8d,r8d
  4038a5:	mov    r9b,r8b
  4038a8:	mov    rcx,QWORD PTR [rbp-0x398]
  4038af:	mov    DWORD PTR [rbp-0x39c],eax
  4038b5:	mov    al,r9b
  4038b8:	call   402480 <rb_helper_write@plt>
  4038bd:	add    rsp,0x3a0
  4038c4:	pop    rbp
  4038c5:	ret    
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	push   rbp
  4038d1:	mov    rbp,rsp
  4038d4:	sub    rsp,0x3a0
  4038db:	test   al,al
  4038dd:	vmovaps XMMWORD PTR [rbp-0x2f0],xmm7
  4038e5:	vmovaps XMMWORD PTR [rbp-0x300],xmm6
  4038ed:	vmovaps XMMWORD PTR [rbp-0x310],xmm5
  4038f5:	vmovaps XMMWORD PTR [rbp-0x320],xmm4
  4038fd:	vmovaps XMMWORD PTR [rbp-0x330],xmm3
  403905:	vmovaps XMMWORD PTR [rbp-0x340],xmm2
  40390d:	vmovaps XMMWORD PTR [rbp-0x350],xmm1
  403915:	vmovaps XMMWORD PTR [rbp-0x360],xmm0
  40391d:	mov    DWORD PTR [rbp-0x364],edi
  403923:	mov    QWORD PTR [rbp-0x370],r9
  40392a:	mov    QWORD PTR [rbp-0x378],r8
  403931:	mov    QWORD PTR [rbp-0x380],rcx
  403938:	mov    QWORD PTR [rbp-0x388],rdx
  40393f:	mov    QWORD PTR [rbp-0x390],rsi
  403946:	je     4039cc <rb_strcasecmp@plt+0x147c>
  40394c:	vmovaps xmm0,XMMWORD PTR [rbp-0x360]
  403954:	vmovaps XMMWORD PTR [rbp-0x2b0],xmm0
  40395c:	vmovaps xmm1,XMMWORD PTR [rbp-0x350]
  403964:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm1
  40396c:	vmovaps xmm2,XMMWORD PTR [rbp-0x340]
  403974:	vmovaps XMMWORD PTR [rbp-0x290],xmm2
  40397c:	vmovaps xmm3,XMMWORD PTR [rbp-0x330]
  403984:	vmovaps XMMWORD PTR [rbp-0x280],xmm3
  40398c:	vmovaps xmm4,XMMWORD PTR [rbp-0x320]
  403994:	vmovaps XMMWORD PTR [rbp-0x270],xmm4
  40399c:	vmovaps xmm5,XMMWORD PTR [rbp-0x310]
  4039a4:	vmovaps XMMWORD PTR [rbp-0x260],xmm5
  4039ac:	vmovaps xmm6,XMMWORD PTR [rbp-0x300]
  4039b4:	vmovaps XMMWORD PTR [rbp-0x250],xmm6
  4039bc:	vmovaps xmm7,XMMWORD PTR [rbp-0x2f0]
  4039c4:	vmovaps XMMWORD PTR [rbp-0x240],xmm7
  4039cc:	mov    rax,QWORD PTR [rbp-0x370]
  4039d3:	mov    QWORD PTR [rbp-0x2b8],rax
  4039da:	mov    rcx,QWORD PTR [rbp-0x378]
  4039e1:	mov    QWORD PTR [rbp-0x2c0],rcx
  4039e8:	mov    rdx,QWORD PTR [rbp-0x380]
  4039ef:	mov    QWORD PTR [rbp-0x2c8],rdx
  4039f6:	mov    rsi,QWORD PTR [rbp-0x388]
  4039fd:	mov    QWORD PTR [rbp-0x2d0],rsi
  403a04:	mov    rdi,QWORD PTR [rbp-0x390]
  403a0b:	mov    r8d,DWORD PTR [rbp-0x364]
  403a12:	mov    DWORD PTR [rbp-0x4],r8d
  403a16:	mov    QWORD PTR [rbp-0x10],rdi
  403a1a:	lea    rdi,[rbp-0x2e0]
  403a21:	mov    QWORD PTR [rbp-0x220],rdi
  403a28:	lea    rdi,[rbp+0x10]
  403a2c:	mov    QWORD PTR [rbp-0x228],rdi
  403a33:	mov    DWORD PTR [rbp-0x22c],0x30
  403a3d:	mov    DWORD PTR [rbp-0x230],0x10
  403a47:	mov    rdx,QWORD PTR [rbp-0x10]
  403a4b:	mov    r8d,0x200
  403a51:	mov    esi,r8d
  403a54:	lea    rdi,[rbp-0x210]
  403a5b:	lea    rcx,[rbp-0x230]
  403a62:	mov    QWORD PTR [rbp-0x398],rdi
  403a69:	call   402380 <vsnprintf@plt>
  403a6e:	lea    rcx,[rip+0x1346b]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  403a75:	mov    rdi,QWORD PTR [rcx]
  403a78:	mov    edx,DWORD PTR [rbp-0x4]
  403a7b:	lea    rsi,[rip+0xc8a6]        # 410328 <rb_strcasecmp@plt+0xddd8>
  403a82:	xor    r8d,r8d
  403a85:	mov    r9b,r8b
  403a88:	mov    rcx,QWORD PTR [rbp-0x398]
  403a8f:	mov    DWORD PTR [rbp-0x39c],eax
  403a95:	mov    al,r9b
  403a98:	call   402480 <rb_helper_write@plt>
  403a9d:	add    rsp,0x3a0
  403aa4:	pop    rbp
  403aa5:	ret    
  403aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ab0:	push   rbp
  403ab1:	mov    rbp,rsp
  403ab4:	sub    rsp,0x3a0
  403abb:	test   al,al
  403abd:	vmovaps XMMWORD PTR [rbp-0x2f0],xmm7
  403ac5:	vmovaps XMMWORD PTR [rbp-0x300],xmm6
  403acd:	vmovaps XMMWORD PTR [rbp-0x310],xmm5
  403ad5:	vmovaps XMMWORD PTR [rbp-0x320],xmm4
  403add:	vmovaps XMMWORD PTR [rbp-0x330],xmm3
  403ae5:	vmovaps XMMWORD PTR [rbp-0x340],xmm2
  403aed:	vmovaps XMMWORD PTR [rbp-0x350],xmm1
  403af5:	vmovaps XMMWORD PTR [rbp-0x360],xmm0
  403afd:	mov    DWORD PTR [rbp-0x364],edi
  403b03:	mov    QWORD PTR [rbp-0x370],r9
  403b0a:	mov    QWORD PTR [rbp-0x378],r8
  403b11:	mov    QWORD PTR [rbp-0x380],rcx
  403b18:	mov    QWORD PTR [rbp-0x388],rdx
  403b1f:	mov    DWORD PTR [rbp-0x38c],esi
  403b25:	je     403bab <rb_strcasecmp@plt+0x165b>
  403b2b:	vmovaps xmm0,XMMWORD PTR [rbp-0x360]
  403b33:	vmovaps XMMWORD PTR [rbp-0x2b0],xmm0
  403b3b:	vmovaps xmm1,XMMWORD PTR [rbp-0x350]
  403b43:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm1
  403b4b:	vmovaps xmm2,XMMWORD PTR [rbp-0x340]
  403b53:	vmovaps XMMWORD PTR [rbp-0x290],xmm2
  403b5b:	vmovaps xmm3,XMMWORD PTR [rbp-0x330]
  403b63:	vmovaps XMMWORD PTR [rbp-0x280],xmm3
  403b6b:	vmovaps xmm4,XMMWORD PTR [rbp-0x320]
  403b73:	vmovaps XMMWORD PTR [rbp-0x270],xmm4
  403b7b:	vmovaps xmm5,XMMWORD PTR [rbp-0x310]
  403b83:	vmovaps XMMWORD PTR [rbp-0x260],xmm5
  403b8b:	vmovaps xmm6,XMMWORD PTR [rbp-0x300]
  403b93:	vmovaps XMMWORD PTR [rbp-0x250],xmm6
  403b9b:	vmovaps xmm7,XMMWORD PTR [rbp-0x2f0]
  403ba3:	vmovaps XMMWORD PTR [rbp-0x240],xmm7
  403bab:	mov    rax,QWORD PTR [rbp-0x370]
  403bb2:	mov    QWORD PTR [rbp-0x2b8],rax
  403bb9:	mov    rcx,QWORD PTR [rbp-0x378]
  403bc0:	mov    QWORD PTR [rbp-0x2c0],rcx
  403bc7:	mov    rdx,QWORD PTR [rbp-0x380]
  403bce:	mov    QWORD PTR [rbp-0x2c8],rdx
  403bd5:	mov    esi,DWORD PTR [rbp-0x38c]
  403bdb:	mov    dil,sil
  403bde:	mov    r8,QWORD PTR [rbp-0x388]
  403be5:	mov    r9d,DWORD PTR [rbp-0x364]
  403bec:	mov    DWORD PTR [rbp-0x4],r9d
  403bf0:	mov    BYTE PTR [rbp-0x5],dil
  403bf4:	mov    QWORD PTR [rbp-0x10],r8
  403bf8:	lea    r8,[rbp-0x2e0]
  403bff:	mov    QWORD PTR [rbp-0x220],r8
  403c06:	lea    r8,[rbp+0x10]
  403c0a:	mov    QWORD PTR [rbp-0x228],r8
  403c11:	mov    DWORD PTR [rbp-0x22c],0x30
  403c1b:	mov    DWORD PTR [rbp-0x230],0x18
  403c25:	mov    rdx,QWORD PTR [rbp-0x10]
  403c29:	mov    r9d,0x200
  403c2f:	mov    esi,r9d
  403c32:	lea    r8,[rbp-0x210]
  403c39:	lea    rcx,[rbp-0x230]
  403c40:	mov    rdi,r8
  403c43:	mov    QWORD PTR [rbp-0x398],r8
  403c4a:	call   402380 <vsnprintf@plt>
  403c4f:	lea    rcx,[rip+0x1328a]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  403c56:	mov    rdi,QWORD PTR [rcx]
  403c59:	mov    edx,DWORD PTR [rbp-0x4]
  403c5c:	movsx  ecx,BYTE PTR [rbp-0x5]
  403c60:	lea    rsi,[rip+0xc6ca]        # 410331 <rb_strcasecmp@plt+0xdde1>
  403c67:	xor    r9d,r9d
  403c6a:	mov    r10b,r9b
  403c6d:	mov    r8,QWORD PTR [rbp-0x398]
  403c74:	mov    DWORD PTR [rbp-0x39c],eax
  403c7a:	mov    al,r10b
  403c7d:	call   402480 <rb_helper_write@plt>
  403c82:	add    rsp,0x3a0
  403c89:	pop    rbp
  403c8a:	ret    
  403c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c90:	push   rbp
  403c91:	mov    rbp,rsp
  403c94:	sub    rsp,0x3a0
  403c9b:	test   al,al
  403c9d:	vmovaps XMMWORD PTR [rbp-0x2f0],xmm7
  403ca5:	vmovaps XMMWORD PTR [rbp-0x300],xmm6
  403cad:	vmovaps XMMWORD PTR [rbp-0x310],xmm5
  403cb5:	vmovaps XMMWORD PTR [rbp-0x320],xmm4
  403cbd:	vmovaps XMMWORD PTR [rbp-0x330],xmm3
  403cc5:	vmovaps XMMWORD PTR [rbp-0x340],xmm2
  403ccd:	vmovaps XMMWORD PTR [rbp-0x350],xmm1
  403cd5:	vmovaps XMMWORD PTR [rbp-0x360],xmm0
  403cdd:	mov    DWORD PTR [rbp-0x364],edi
  403ce3:	mov    QWORD PTR [rbp-0x370],r9
  403cea:	mov    QWORD PTR [rbp-0x378],r8
  403cf1:	mov    QWORD PTR [rbp-0x380],rcx
  403cf8:	mov    QWORD PTR [rbp-0x388],rdx
  403cff:	mov    DWORD PTR [rbp-0x38c],esi
  403d05:	je     403d8b <rb_strcasecmp@plt+0x183b>
  403d0b:	vmovaps xmm0,XMMWORD PTR [rbp-0x360]
  403d13:	vmovaps XMMWORD PTR [rbp-0x2b0],xmm0
  403d1b:	vmovaps xmm1,XMMWORD PTR [rbp-0x350]
  403d23:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm1
  403d2b:	vmovaps xmm2,XMMWORD PTR [rbp-0x340]
  403d33:	vmovaps XMMWORD PTR [rbp-0x290],xmm2
  403d3b:	vmovaps xmm3,XMMWORD PTR [rbp-0x330]
  403d43:	vmovaps XMMWORD PTR [rbp-0x280],xmm3
  403d4b:	vmovaps xmm4,XMMWORD PTR [rbp-0x320]
  403d53:	vmovaps XMMWORD PTR [rbp-0x270],xmm4
  403d5b:	vmovaps xmm5,XMMWORD PTR [rbp-0x310]
  403d63:	vmovaps XMMWORD PTR [rbp-0x260],xmm5
  403d6b:	vmovaps xmm6,XMMWORD PTR [rbp-0x300]
  403d73:	vmovaps XMMWORD PTR [rbp-0x250],xmm6
  403d7b:	vmovaps xmm7,XMMWORD PTR [rbp-0x2f0]
  403d83:	vmovaps XMMWORD PTR [rbp-0x240],xmm7
  403d8b:	mov    rax,QWORD PTR [rbp-0x370]
  403d92:	mov    QWORD PTR [rbp-0x2b8],rax
  403d99:	mov    rcx,QWORD PTR [rbp-0x378]
  403da0:	mov    QWORD PTR [rbp-0x2c0],rcx
  403da7:	mov    rdx,QWORD PTR [rbp-0x380]
  403dae:	mov    QWORD PTR [rbp-0x2c8],rdx
  403db5:	mov    esi,DWORD PTR [rbp-0x38c]
  403dbb:	mov    dil,sil
  403dbe:	mov    r8,QWORD PTR [rbp-0x388]
  403dc5:	mov    r9d,DWORD PTR [rbp-0x364]
  403dcc:	mov    DWORD PTR [rbp-0x4],r9d
  403dd0:	mov    BYTE PTR [rbp-0x5],dil
  403dd4:	mov    QWORD PTR [rbp-0x10],r8
  403dd8:	lea    r8,[rbp-0x2e0]
  403ddf:	mov    QWORD PTR [rbp-0x220],r8
  403de6:	lea    r8,[rbp+0x10]
  403dea:	mov    QWORD PTR [rbp-0x228],r8
  403df1:	mov    DWORD PTR [rbp-0x22c],0x30
  403dfb:	mov    DWORD PTR [rbp-0x230],0x18
  403e05:	mov    rdx,QWORD PTR [rbp-0x10]
  403e09:	mov    r9d,0x200
  403e0f:	mov    esi,r9d
  403e12:	lea    r8,[rbp-0x210]
  403e19:	lea    rcx,[rbp-0x230]
  403e20:	mov    rdi,r8
  403e23:	mov    QWORD PTR [rbp-0x398],r8
  403e2a:	call   402380 <vsnprintf@plt>
  403e2f:	lea    rcx,[rip+0x130aa]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  403e36:	mov    rdi,QWORD PTR [rcx]
  403e39:	mov    edx,DWORD PTR [rbp-0x4]
  403e3c:	movsx  ecx,BYTE PTR [rbp-0x5]
  403e40:	lea    rsi,[rip+0xc4f5]        # 41033c <rb_strcasecmp@plt+0xddec>
  403e47:	xor    r9d,r9d
  403e4a:	mov    r10b,r9b
  403e4d:	mov    r8,QWORD PTR [rbp-0x398]
  403e54:	mov    DWORD PTR [rbp-0x39c],eax
  403e5a:	mov    al,r10b
  403e5d:	call   402480 <rb_helper_write@plt>
  403e62:	add    rsp,0x3a0
  403e69:	pop    rbp
  403e6a:	ret    
  403e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e70:	push   rbp
  403e71:	mov    rbp,rsp
  403e74:	sub    rsp,0x10
  403e78:	mov    al,sil
  403e7b:	lea    rcx,[rip+0x1305e]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  403e82:	mov    DWORD PTR [rbp-0x4],edi
  403e85:	mov    BYTE PTR [rbp-0x5],al
  403e88:	mov    rdi,QWORD PTR [rcx]
  403e8b:	mov    edx,DWORD PTR [rbp-0x4]
  403e8e:	movsx  ecx,BYTE PTR [rbp-0x5]
  403e92:	lea    rsi,[rip+0xc4ae]        # 410347 <rb_strcasecmp@plt+0xddf7>
  403e99:	mov    al,0x0
  403e9b:	call   402480 <rb_helper_write@plt>
  403ea0:	add    rsp,0x10
  403ea4:	pop    rbp
  403ea5:	ret    
  403ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403eb0:	push   rbp
  403eb1:	mov    rbp,rsp
  403eb4:	lea    rax,[rip+0x75]        # 403f30 <rb_strcasecmp@plt+0x19e0>
  403ebb:	lea    rdi,[rip+0xc48d]        # 41034f <rb_strcasecmp@plt+0xddff>
  403ec2:	mov    rsi,rax
  403ec5:	call   402450 <rb_dictionary_create@plt>
  403eca:	xor    ecx,ecx
  403ecc:	mov    edx,ecx
  403ece:	mov    ecx,0x1
  403ed3:	lea    rsi,[rip+0x172be]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  403eda:	mov    QWORD PTR [rsi],rax
  403edd:	lea    rdi,[rip+0xc480]        # 410364 <rb_strcasecmp@plt+0xde14>
  403ee4:	lea    rsi,[rip+0x65]        # 403f50 <rb_strcasecmp@plt+0x1a00>
  403eeb:	call   402050 <rb_event_addish@plt>
  403ef0:	lea    rdi,[rip+0x12c41]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  403ef7:	mov    QWORD PTR [rip+0x1705a],rax        # 41af58 <rb_strcasecmp@plt+0x18a08>
  403efe:	call   404070 <rb_strcasecmp@plt+0x1b20>
  403f03:	lea    rdi,[rip+0x12f46]        # 416e50 <rb_strcasecmp@plt+0x14900>
  403f0a:	call   404070 <rb_strcasecmp@plt+0x1b20>
  403f0f:	lea    rdi,[rip+0x12dda]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  403f16:	call   404070 <rb_strcasecmp@plt+0x1b20>
  403f1b:	lea    rdi,[rip+0x12ce6]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  403f22:	call   404070 <rb_strcasecmp@plt+0x1b20>
  403f27:	pop    rbp
  403f28:	ret    
  403f29:	nop    DWORD PTR [rax+0x0]
  403f30:	push   rbp
  403f31:	mov    rbp,rsp
  403f34:	mov    QWORD PTR [rbp-0x8],rdi
  403f38:	mov    QWORD PTR [rbp-0x10],rsi
  403f3c:	mov    rsi,QWORD PTR [rbp-0x10]
  403f40:	mov    eax,esi
  403f42:	mov    rsi,QWORD PTR [rbp-0x8]
  403f46:	mov    ecx,esi
  403f48:	sub    eax,ecx
  403f4a:	pop    rbp
  403f4b:	ret    
  403f4c:	nop    DWORD PTR [rax+0x0]
  403f50:	push   rbp
  403f51:	mov    rbp,rsp
  403f54:	sub    rsp,0x40
  403f58:	mov    QWORD PTR [rbp-0x8],rdi
  403f5c:	call   4022a0 <rb_current_time@plt>
  403f61:	lea    rdi,[rip+0x17230]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  403f68:	mov    QWORD PTR [rbp-0x28],rax
  403f6c:	mov    rdi,QWORD PTR [rdi]
  403f6f:	lea    rsi,[rbp-0x20]
  403f73:	call   402250 <rb_dictionary_foreach_start@plt>
  403f78:	lea    rax,[rip+0x17219]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  403f7f:	mov    rdi,QWORD PTR [rax]
  403f82:	lea    rsi,[rbp-0x20]
  403f86:	call   402140 <rb_dictionary_foreach_cur@plt>
  403f8b:	mov    QWORD PTR [rbp-0x10],rax
  403f8f:	cmp    rax,0x0
  403f93:	je     404064 <rb_strcasecmp@plt+0x1b14>
  403f99:	mov    rdi,QWORD PTR [rbp-0x10]
  403f9d:	call   404340 <rb_strcasecmp@plt+0x1df0>
  403fa2:	lea    rdi,[rip+0x171f7]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  403fa9:	mov    rdi,QWORD PTR [rdi]
  403fac:	mov    QWORD PTR [rbp-0x30],rdi
  403fb0:	cmp    QWORD PTR [rbp-0x30],0x0
  403fb5:	je     404043 <rb_strcasecmp@plt+0x1af3>
  403fbb:	mov    rax,QWORD PTR [rbp-0x30]
  403fbf:	mov    rax,QWORD PTR [rax]
  403fc2:	mov    QWORD PTR [rbp-0x38],rax
  403fc6:	mov    rdi,QWORD PTR [rbp-0x10]
  403fca:	mov    rax,QWORD PTR [rbp-0x38]
  403fce:	mov    esi,DWORD PTR [rax+0x18]
  403fd1:	call   4052f0 <rb_strcasecmp@plt+0x2da0>
  403fd6:	mov    QWORD PTR [rbp-0x40],rax
  403fda:	mov    rdi,QWORD PTR [rbp-0x10]
  403fde:	mov    rax,QWORD PTR [rbp-0x38]
  403fe2:	mov    esi,DWORD PTR [rax+0x18]
  403fe5:	call   404af0 <rb_strcasecmp@plt+0x25a0>
  403fea:	test   al,0x1
  403fec:	jne    403ff7 <rb_strcasecmp@plt+0x1aa7>
  403ff2:	jmp    40402d <rb_strcasecmp@plt+0x1add>
  403ff7:	mov    rax,QWORD PTR [rbp-0x38]
  403ffb:	cmp    QWORD PTR [rax+0x50],0x0
  404000:	je     40402d <rb_strcasecmp@plt+0x1add>
  404006:	cmp    QWORD PTR [rbp-0x40],0x0
  40400b:	jle    40402d <rb_strcasecmp@plt+0x1add>
  404011:	mov    rax,QWORD PTR [rbp-0x40]
  404015:	cmp    rax,QWORD PTR [rbp-0x28]
  404019:	jge    40402d <rb_strcasecmp@plt+0x1add>
  40401f:	mov    rax,QWORD PTR [rbp-0x38]
  404023:	mov    rax,QWORD PTR [rax+0x50]
  404027:	mov    rdi,QWORD PTR [rbp-0x10]
  40402b:	call   rax
  40402d:	jmp    404032 <rb_strcasecmp@plt+0x1ae2>
  404032:	mov    rax,QWORD PTR [rbp-0x30]
  404036:	mov    rax,QWORD PTR [rax+0x10]
  40403a:	mov    QWORD PTR [rbp-0x30],rax
  40403e:	jmp    403fb0 <rb_strcasecmp@plt+0x1a60>
  404043:	mov    rdi,QWORD PTR [rbp-0x10]
  404047:	call   404640 <rb_strcasecmp@plt+0x20f0>
  40404c:	lea    rax,[rip+0x17145]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  404053:	mov    rdi,QWORD PTR [rax]
  404056:	lea    rsi,[rbp-0x20]
  40405a:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40405f:	jmp    403f78 <rb_strcasecmp@plt+0x1a28>
  404064:	add    rsp,0x40
  404068:	pop    rbp
  404069:	ret    
  40406a:	nop    WORD PTR [rax+rax*1+0x0]
  404070:	push   rbp
  404071:	mov    rbp,rsp
  404074:	sub    rsp,0x20
  404078:	mov    QWORD PTR [rbp-0x8],rdi
  40407c:	cmp    QWORD PTR [rip+0x16eec],0x0        # 41af70 <rb_strcasecmp@plt+0x18a20>
  404084:	jbe    4040c1 <rb_strcasecmp@plt+0x1b71>
  40408a:	mov    rax,QWORD PTR [rip+0x16ecf]        # 41af60 <rb_strcasecmp@plt+0x18a10>
  404091:	mov    rax,QWORD PTR [rax]
  404094:	mov    ecx,eax
  404096:	mov    rax,QWORD PTR [rbp-0x8]
  40409a:	mov    DWORD PTR [rax+0x18],ecx
  40409d:	mov    rdi,QWORD PTR [rip+0x16ebc]        # 41af60 <rb_strcasecmp@plt+0x18a10>
  4040a4:	lea    rsi,[rip+0x16eb5]        # 41af60 <rb_strcasecmp@plt+0x18a10>
  4040ab:	call   404680 <rb_strcasecmp@plt+0x2130>
  4040b0:	mov    rdi,QWORD PTR [rip+0x16ea9]        # 41af60 <rb_strcasecmp@plt+0x18a10>
  4040b7:	call   4022e0 <rb_free_rb_dlink_node@plt>
  4040bc:	jmp    40410b <rb_strcasecmp@plt+0x1bbb>
  4040c1:	cmp    DWORD PTR [rip+0x16eb0],0x20        # 41af78 <rb_strcasecmp@plt+0x18a28>
  4040c8:	je     4040db <rb_strcasecmp@plt+0x1b8b>
  4040ce:	cmp    DWORD PTR [rip+0x16ea3],0xffffffff        # 41af78 <rb_strcasecmp@plt+0x18a28>
  4040d5:	jne    4040f3 <rb_strcasecmp@plt+0x1ba3>
  4040db:	mov    edi,0x57
  4040e0:	lea    rsi,[rip+0xc2df]        # 4103c6 <rb_strcasecmp@plt+0xde76>
  4040e7:	mov    al,0x0
  4040e9:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  4040ee:	jmp    4041c9 <rb_strcasecmp@plt+0x1c79>
  4040f3:	mov    eax,DWORD PTR [rip+0x16e7f]        # 41af78 <rb_strcasecmp@plt+0x18a28>
  4040f9:	mov    ecx,eax
  4040fb:	add    ecx,0x1
  4040fe:	mov    DWORD PTR [rip+0x16e74],ecx        # 41af78 <rb_strcasecmp@plt+0x18a28>
  404104:	mov    rdx,QWORD PTR [rbp-0x8]
  404108:	mov    DWORD PTR [rdx+0x18],eax
  40410b:	mov    rax,QWORD PTR [rbp-0x8]
  40410f:	cmp    QWORD PTR [rax+0x70],0x0
  404114:	je     40416b <rb_strcasecmp@plt+0x1c1b>
  40411a:	mov    rax,QWORD PTR [rbp-0x8]
  40411e:	mov    rax,QWORD PTR [rax+0x70]
  404122:	mov    QWORD PTR [rbp-0x10],rax
  404126:	mov    rax,QWORD PTR [rbp-0x10]
  40412a:	cmp    QWORD PTR [rax],0x0
  40412e:	je     404166 <rb_strcasecmp@plt+0x1c16>
  404134:	lea    rax,[rip+0x17055]        # 41b190 <rb_strcasecmp@plt+0x18c40>
  40413b:	mov    rdi,QWORD PTR [rax]
  40413e:	mov    rax,QWORD PTR [rbp-0x10]
  404142:	mov    rsi,QWORD PTR [rax]
  404145:	mov    rax,QWORD PTR [rbp-0x10]
  404149:	mov    rdx,rax
  40414c:	call   4023d0 <rb_dictionary_add@plt>
  404151:	mov    QWORD PTR [rbp-0x18],rax
  404155:	mov    rax,QWORD PTR [rbp-0x10]
  404159:	add    rax,0x18
  40415d:	mov    QWORD PTR [rbp-0x10],rax
  404161:	jmp    404126 <rb_strcasecmp@plt+0x1bd6>
  404166:	jmp    40416b <rb_strcasecmp@plt+0x1c1b>
  40416b:	mov    rax,QWORD PTR [rbp-0x8]
  40416f:	movsx  ecx,BYTE PTR [rax+0x60]
  404173:	cmp    ecx,0x0
  404176:	je     404199 <rb_strcasecmp@plt+0x1c49>
  40417c:	lea    rax,[rip+0x1193d]        # 415ac0 <rb_strcasecmp@plt+0x13570>
  404183:	mov    rcx,QWORD PTR [rbp-0x8]
  404187:	mov    rcx,QWORD PTR [rcx+0x68]
  40418b:	mov    rdx,QWORD PTR [rbp-0x8]
  40418f:	movzx  esi,BYTE PTR [rdx+0x60]
  404193:	mov    edx,esi
  404195:	mov    QWORD PTR [rax+rdx*8],rcx
  404199:	mov    rax,QWORD PTR [rbp-0x8]
  40419d:	cmp    QWORD PTR [rax+0x30],0x0
  4041a2:	je     4041b2 <rb_strcasecmp@plt+0x1c62>
  4041a8:	mov    rax,QWORD PTR [rbp-0x8]
  4041ac:	call   QWORD PTR [rax+0x30]
  4041af:	mov    BYTE PTR [rbp-0x19],al
  4041b2:	lea    rdx,[rip+0x16fe7]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  4041b9:	mov    rax,QWORD PTR [rbp-0x8]
  4041bd:	mov    rsi,QWORD PTR [rbp-0x8]
  4041c1:	mov    rdi,rax
  4041c4:	call   404790 <rb_strcasecmp@plt+0x2240>
  4041c9:	add    rsp,0x20
  4041cd:	pop    rbp
  4041ce:	ret    
  4041cf:	nop
  4041d0:	push   rbp
  4041d1:	mov    rbp,rsp
  4041d4:	sub    rsp,0x40
  4041d8:	lea    rax,[rip+0x16fb9]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  4041df:	mov    rdi,QWORD PTR [rax]
  4041e2:	lea    rsi,[rbp-0x20]
  4041e6:	call   402250 <rb_dictionary_foreach_start@plt>
  4041eb:	lea    rax,[rip+0x16fa6]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  4041f2:	mov    rdi,QWORD PTR [rax]
  4041f5:	lea    rsi,[rbp-0x20]
  4041f9:	call   402140 <rb_dictionary_foreach_cur@plt>
  4041fe:	mov    QWORD PTR [rbp-0x28],rax
  404202:	cmp    rax,0x0
  404206:	je     404254 <rb_strcasecmp@plt+0x1d04>
  40420c:	mov    rdi,QWORD PTR [rbp-0x28]
  404210:	call   404340 <rb_strcasecmp@plt+0x1df0>
  404215:	mov    rdi,QWORD PTR [rbp-0x28]
  404219:	mov    esi,0xffffffff
  40421e:	lea    rdx,[rip+0xc156]        # 41037b <rb_strcasecmp@plt+0xde2b>
  404225:	lea    rcx,[rip+0xc157]        # 410383 <rb_strcasecmp@plt+0xde33>
  40422c:	mov    al,0x0
  40422e:	call   404360 <rb_strcasecmp@plt+0x1e10>
  404233:	mov    rdi,QWORD PTR [rbp-0x28]
  404237:	call   404640 <rb_strcasecmp@plt+0x20f0>
  40423c:	lea    rax,[rip+0x16f55]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  404243:	mov    rdi,QWORD PTR [rax]
  404246:	lea    rsi,[rbp-0x20]
  40424a:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40424f:	jmp    4041eb <rb_strcasecmp@plt+0x1c9b>
  404254:	lea    rax,[rip+0x16f45]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  40425b:	mov    rax,QWORD PTR [rax]
  40425e:	mov    QWORD PTR [rbp-0x8],rax
  404262:	cmp    QWORD PTR [rbp-0x8],0x0
  404267:	je     40427e <rb_strcasecmp@plt+0x1d2e>
  40426d:	mov    rax,QWORD PTR [rbp-0x8]
  404271:	mov    rax,QWORD PTR [rax+0x10]
  404275:	mov    QWORD PTR [rbp-0x38],rax
  404279:	jmp    40428b <rb_strcasecmp@plt+0x1d3b>
  40427e:	xor    eax,eax
  404280:	mov    ecx,eax
  404282:	mov    QWORD PTR [rbp-0x38],rcx
  404286:	jmp    40428b <rb_strcasecmp@plt+0x1d3b>
  40428b:	mov    rax,QWORD PTR [rbp-0x38]
  40428f:	mov    QWORD PTR [rbp-0x10],rax
  404293:	cmp    QWORD PTR [rbp-0x8],0x0
  404298:	je     40430d <rb_strcasecmp@plt+0x1dbd>
  40429e:	mov    rax,QWORD PTR [rbp-0x8]
  4042a2:	mov    rax,QWORD PTR [rax]
  4042a5:	mov    QWORD PTR [rbp-0x30],rax
  4042a9:	mov    rax,QWORD PTR [rbp-0x30]
  4042ad:	cmp    QWORD PTR [rax+0x38],0x0
  4042b2:	je     4042bf <rb_strcasecmp@plt+0x1d6f>
  4042b8:	mov    rax,QWORD PTR [rbp-0x30]
  4042bc:	call   QWORD PTR [rax+0x38]
  4042bf:	lea    rsi,[rip+0x16eda]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  4042c6:	mov    rdi,QWORD PTR [rbp-0x8]
  4042ca:	call   404680 <rb_strcasecmp@plt+0x2130>
  4042cf:	mov    rax,QWORD PTR [rbp-0x10]
  4042d3:	mov    QWORD PTR [rbp-0x8],rax
  4042d7:	cmp    QWORD PTR [rbp-0x8],0x0
  4042dc:	je     4042f3 <rb_strcasecmp@plt+0x1da3>
  4042e2:	mov    rax,QWORD PTR [rbp-0x8]
  4042e6:	mov    rax,QWORD PTR [rax+0x10]
  4042ea:	mov    QWORD PTR [rbp-0x40],rax
  4042ee:	jmp    404300 <rb_strcasecmp@plt+0x1db0>
  4042f3:	xor    eax,eax
  4042f5:	mov    ecx,eax
  4042f7:	mov    QWORD PTR [rbp-0x40],rcx
  4042fb:	jmp    404300 <rb_strcasecmp@plt+0x1db0>
  404300:	mov    rax,QWORD PTR [rbp-0x40]
  404304:	mov    QWORD PTR [rbp-0x10],rax
  404308:	jmp    404293 <rb_strcasecmp@plt+0x1d43>
  40430d:	xor    eax,eax
  40430f:	mov    ecx,eax
  404311:	lea    rdx,[rip+0x16e80]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  404318:	mov    rdi,QWORD PTR [rdx]
  40431b:	mov    rsi,rcx
  40431e:	mov    rdx,rcx
  404321:	call   402340 <rb_dictionary_destroy@plt>
  404326:	mov    rdi,QWORD PTR [rip+0x16c2b]        # 41af58 <rb_strcasecmp@plt+0x18a08>
  40432d:	call   4020a0 <rb_event_delete@plt>
  404332:	add    rsp,0x40
  404336:	pop    rbp
  404337:	ret    
  404338:	nop    DWORD PTR [rax+rax*1+0x0]
  404340:	push   rbp
  404341:	mov    rbp,rsp
  404344:	mov    QWORD PTR [rbp-0x8],rdi
  404348:	mov    rdi,QWORD PTR [rbp-0x8]
  40434c:	mov    eax,DWORD PTR [rdi+0x1cc]
  404352:	add    eax,0x1
  404355:	mov    DWORD PTR [rdi+0x1cc],eax
  40435b:	pop    rbp
  40435c:	ret    
  40435d:	nop    DWORD PTR [rax]
  404360:	push   rbp
  404361:	mov    rbp,rsp
  404364:	push   rbx
  404365:	sub    rsp,0x3f8
  40436c:	test   al,al
  40436e:	vmovaps XMMWORD PTR [rbp-0x310],xmm7
  404376:	vmovaps XMMWORD PTR [rbp-0x320],xmm6
  40437e:	vmovaps XMMWORD PTR [rbp-0x330],xmm5
  404386:	vmovaps XMMWORD PTR [rbp-0x340],xmm4
  40438e:	vmovaps XMMWORD PTR [rbp-0x350],xmm3
  404396:	vmovaps XMMWORD PTR [rbp-0x360],xmm2
  40439e:	vmovaps XMMWORD PTR [rbp-0x370],xmm1
  4043a6:	vmovaps XMMWORD PTR [rbp-0x380],xmm0
  4043ae:	mov    QWORD PTR [rbp-0x388],rdi
  4043b5:	mov    QWORD PTR [rbp-0x390],r9
  4043bc:	mov    QWORD PTR [rbp-0x398],r8
  4043c3:	mov    QWORD PTR [rbp-0x3a0],rcx
  4043ca:	mov    QWORD PTR [rbp-0x3a8],rdx
  4043d1:	mov    DWORD PTR [rbp-0x3ac],esi
  4043d7:	je     40445d <rb_strcasecmp@plt+0x1f0d>
  4043dd:	vmovaps xmm0,XMMWORD PTR [rbp-0x380]
  4043e5:	vmovaps XMMWORD PTR [rbp-0x2d0],xmm0
  4043ed:	vmovaps xmm1,XMMWORD PTR [rbp-0x370]
  4043f5:	vmovaps XMMWORD PTR [rbp-0x2c0],xmm1
  4043fd:	vmovaps xmm2,XMMWORD PTR [rbp-0x360]
  404405:	vmovaps XMMWORD PTR [rbp-0x2b0],xmm2
  40440d:	vmovaps xmm3,XMMWORD PTR [rbp-0x350]
  404415:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm3
  40441d:	vmovaps xmm4,XMMWORD PTR [rbp-0x340]
  404425:	vmovaps XMMWORD PTR [rbp-0x290],xmm4
  40442d:	vmovaps xmm5,XMMWORD PTR [rbp-0x330]
  404435:	vmovaps XMMWORD PTR [rbp-0x280],xmm5
  40443d:	vmovaps xmm6,XMMWORD PTR [rbp-0x320]
  404445:	vmovaps XMMWORD PTR [rbp-0x270],xmm6
  40444d:	vmovaps xmm7,XMMWORD PTR [rbp-0x310]
  404455:	vmovaps XMMWORD PTR [rbp-0x260],xmm7
  40445d:	mov    rax,QWORD PTR [rbp-0x390]
  404464:	mov    QWORD PTR [rbp-0x2d8],rax
  40446b:	mov    rcx,QWORD PTR [rbp-0x398]
  404472:	mov    QWORD PTR [rbp-0x2e0],rcx
  404479:	mov    rdx,QWORD PTR [rbp-0x3a0]
  404480:	mov    rsi,QWORD PTR [rbp-0x3a8]
  404487:	mov    edi,DWORD PTR [rbp-0x3ac]
  40448d:	mov    r8,QWORD PTR [rbp-0x388]
  404494:	mov    r9d,0x200
  40449a:	mov    r10d,r9d
  40449d:	lea    r11,[rbp-0x250]
  4044a4:	lea    rbx,[rbp-0x230]
  4044ab:	mov    QWORD PTR [rbp-0x10],r8
  4044af:	mov    DWORD PTR [rbp-0x14],edi
  4044b2:	mov    QWORD PTR [rbp-0x20],rsi
  4044b6:	mov    QWORD PTR [rbp-0x28],rdx
  4044ba:	mov    rdx,r11
  4044bd:	lea    rsi,[rbp-0x300]
  4044c4:	mov    QWORD PTR [rdx+0x10],rsi
  4044c8:	lea    rsi,[rbp+0x10]
  4044cc:	mov    QWORD PTR [rdx+0x8],rsi
  4044d0:	mov    DWORD PTR [rdx+0x4],0x30
  4044d7:	mov    DWORD PTR [rdx],0x20
  4044dd:	mov    rdx,QWORD PTR [rbp-0x28]
  4044e1:	mov    rdi,rbx
  4044e4:	mov    rsi,r10
  4044e7:	mov    rcx,r11
  4044ea:	call   402380 <vsnprintf@plt>
  4044ef:	lea    rcx,[rip+0x129ea]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  4044f6:	lea    rdx,[rbp-0x250]
  4044fd:	mov    rdi,QWORD PTR [rcx]
  404500:	mov    rcx,QWORD PTR [rbp-0x10]
  404504:	mov    r9d,DWORD PTR [rcx]
  404507:	cmp    DWORD PTR [rbp-0x14],0xffffffff
  40450b:	mov    DWORD PTR [rbp-0x3b0],eax
  404511:	mov    QWORD PTR [rbp-0x3b8],rdx
  404518:	mov    QWORD PTR [rbp-0x3c0],rdi
  40451f:	mov    DWORD PTR [rbp-0x3c4],r9d
  404526:	je     404555 <rb_strcasecmp@plt+0x2005>
  40452c:	mov    rax,QWORD PTR [rbp-0x10]
  404530:	mov    rax,QWORD PTR [rax+0x1d0]
  404537:	mov    ecx,DWORD PTR [rbp-0x14]
  40453a:	mov    edx,ecx
  40453c:	shl    rdx,0x5
  404540:	add    rax,rdx
  404543:	mov    rax,QWORD PTR [rax]
  404546:	movsx  ecx,BYTE PTR [rax+0x28]
  40454a:	mov    DWORD PTR [rbp-0x3c8],ecx
  404550:	jmp    404565 <rb_strcasecmp@plt+0x2015>
  404555:	mov    eax,0x2a
  40455a:	mov    DWORD PTR [rbp-0x3c8],eax
  404560:	jmp    404565 <rb_strcasecmp@plt+0x2015>
  404565:	mov    eax,DWORD PTR [rbp-0x3c8]
  40456b:	mov    rcx,QWORD PTR [rbp-0x10]
  40456f:	add    rcx,0x1b8
  404576:	mov    rdx,QWORD PTR [rbp-0x10]
  40457a:	add    rdx,0x178
  404581:	cmp    QWORD PTR [rbp-0x20],0x0
  404586:	mov    DWORD PTR [rbp-0x3cc],eax
  40458c:	mov    QWORD PTR [rbp-0x3d8],rcx
  404593:	mov    QWORD PTR [rbp-0x3e0],rdx
  40459a:	jne    4045b3 <rb_strcasecmp@plt+0x2063>
  4045a0:	lea    rax,[rip+0xbd69]        # 410310 <rb_strcasecmp@plt+0xddc0>
  4045a7:	mov    QWORD PTR [rbp-0x3e8],rax
  4045ae:	jmp    4045be <rb_strcasecmp@plt+0x206e>
  4045b3:	mov    rax,QWORD PTR [rbp-0x20]
  4045b7:	mov    QWORD PTR [rbp-0x3e8],rax
  4045be:	mov    rax,QWORD PTR [rbp-0x3e8]
  4045c5:	lea    rcx,[rbp-0x230]
  4045cc:	mov    rdi,QWORD PTR [rbp-0x3c0]
  4045d3:	lea    rsi,[rip+0xbe1a]        # 4103f4 <rb_strcasecmp@plt+0xdea4>
  4045da:	mov    edx,DWORD PTR [rbp-0x3c4]
  4045e0:	mov    r8d,DWORD PTR [rbp-0x3cc]
  4045e7:	mov    QWORD PTR [rbp-0x3f0],rcx
  4045ee:	mov    ecx,r8d
  4045f1:	mov    r8,QWORD PTR [rbp-0x3d8]
  4045f8:	mov    r9,QWORD PTR [rbp-0x3e0]
  4045ff:	mov    QWORD PTR [rsp],rax
  404603:	mov    rax,QWORD PTR [rbp-0x3f0]
  40460a:	mov    QWORD PTR [rsp+0x8],rax
  40460f:	mov    al,0x0
  404611:	call   402480 <rb_helper_write@plt>
  404616:	cmp    DWORD PTR [rbp-0x14],0xffffffff
  40461a:	je     40462c <rb_strcasecmp@plt+0x20dc>
  404620:	mov    rdi,QWORD PTR [rbp-0x10]
  404624:	mov    esi,DWORD PTR [rbp-0x14]
  404627:	call   404bf0 <rb_strcasecmp@plt+0x26a0>
  40462c:	mov    rdi,QWORD PTR [rbp-0x10]
  404630:	call   404a30 <rb_strcasecmp@plt+0x24e0>
  404635:	add    rsp,0x3f8
  40463c:	pop    rbx
  40463d:	pop    rbp
  40463e:	ret    
  40463f:	nop
  404640:	push   rbp
  404641:	mov    rbp,rsp
  404644:	sub    rsp,0x10
  404648:	mov    QWORD PTR [rbp-0x8],rdi
  40464c:	mov    rdi,QWORD PTR [rbp-0x8]
  404650:	mov    eax,DWORD PTR [rdi+0x1cc]
  404656:	add    eax,0xffffffff
  404659:	mov    DWORD PTR [rdi+0x1cc],eax
  40465f:	mov    rdi,QWORD PTR [rbp-0x8]
  404663:	cmp    DWORD PTR [rdi+0x1cc],0x0
  40466a:	jne    404679 <rb_strcasecmp@plt+0x2129>
  404670:	mov    rdi,QWORD PTR [rbp-0x8]
  404674:	call   4049a0 <rb_strcasecmp@plt+0x2450>
  404679:	add    rsp,0x10
  40467d:	pop    rbp
  40467e:	ret    
  40467f:	nop
  404680:	push   rbp
  404681:	mov    rbp,rsp
  404684:	sub    rsp,0x10
  404688:	mov    QWORD PTR [rbp-0x8],rdi
  40468c:	mov    QWORD PTR [rbp-0x10],rsi
  404690:	cmp    QWORD PTR [rbp-0x8],0x0
  404695:	je     4046a0 <rb_strcasecmp@plt+0x2150>
  40469b:	jmp    4046bf <rb_strcasecmp@plt+0x216f>
  4046a0:	lea    rdi,[rip+0xc377]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  4046a7:	lea    rsi,[rip+0xbe3e]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  4046ae:	mov    edx,0xeb
  4046b3:	lea    rcx,[rip+0xbe4e]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  4046ba:	call   4020f0 <__assert_fail@plt>
  4046bf:	cmp    QWORD PTR [rbp-0x10],0x0
  4046c4:	je     4046cf <rb_strcasecmp@plt+0x217f>
  4046ca:	jmp    4046ee <rb_strcasecmp@plt+0x219e>
  4046cf:	lea    rdi,[rip+0xbe68]        # 41053e <rb_strcasecmp@plt+0xdfee>
  4046d6:	lea    rsi,[rip+0xbe0f]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  4046dd:	mov    edx,0xec
  4046e2:	lea    rcx,[rip+0xbe1f]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  4046e9:	call   4020f0 <__assert_fail@plt>
  4046ee:	mov    rax,QWORD PTR [rbp-0x8]
  4046f2:	cmp    QWORD PTR [rax+0x10],0x0
  4046f7:	je     404716 <rb_strcasecmp@plt+0x21c6>
  4046fd:	mov    rax,QWORD PTR [rbp-0x8]
  404701:	mov    rax,QWORD PTR [rax+0x8]
  404705:	mov    rcx,QWORD PTR [rbp-0x8]
  404709:	mov    rcx,QWORD PTR [rcx+0x10]
  40470d:	mov    QWORD PTR [rcx+0x8],rax
  404711:	jmp    404726 <rb_strcasecmp@plt+0x21d6>
  404716:	mov    rax,QWORD PTR [rbp-0x8]
  40471a:	mov    rax,QWORD PTR [rax+0x8]
  40471e:	mov    rcx,QWORD PTR [rbp-0x10]
  404722:	mov    QWORD PTR [rcx+0x8],rax
  404726:	mov    rax,QWORD PTR [rbp-0x8]
  40472a:	cmp    QWORD PTR [rax+0x8],0x0
  40472f:	je     40474e <rb_strcasecmp@plt+0x21fe>
  404735:	mov    rax,QWORD PTR [rbp-0x8]
  404739:	mov    rax,QWORD PTR [rax+0x10]
  40473d:	mov    rcx,QWORD PTR [rbp-0x8]
  404741:	mov    rcx,QWORD PTR [rcx+0x8]
  404745:	mov    QWORD PTR [rcx+0x10],rax
  404749:	jmp    40475d <rb_strcasecmp@plt+0x220d>
  40474e:	mov    rax,QWORD PTR [rbp-0x8]
  404752:	mov    rax,QWORD PTR [rax+0x10]
  404756:	mov    rcx,QWORD PTR [rbp-0x10]
  40475a:	mov    QWORD PTR [rcx],rax
  40475d:	mov    rax,QWORD PTR [rbp-0x8]
  404761:	mov    QWORD PTR [rax+0x8],0x0
  404769:	mov    rax,QWORD PTR [rbp-0x8]
  40476d:	mov    QWORD PTR [rax+0x10],0x0
  404775:	mov    rax,QWORD PTR [rbp-0x10]
  404779:	mov    rcx,QWORD PTR [rax+0x10]
  40477d:	add    rcx,0xffffffffffffffff
  404781:	mov    QWORD PTR [rax+0x10],rcx
  404785:	add    rsp,0x10
  404789:	pop    rbp
  40478a:	ret    
  40478b:	nop    DWORD PTR [rax+rax*1+0x0]
  404790:	push   rbp
  404791:	mov    rbp,rsp
  404794:	sub    rsp,0x20
  404798:	mov    QWORD PTR [rbp-0x8],rdi
  40479c:	mov    QWORD PTR [rbp-0x10],rsi
  4047a0:	mov    QWORD PTR [rbp-0x18],rdx
  4047a4:	cmp    QWORD PTR [rbp-0x8],0x0
  4047a9:	je     4047b4 <rb_strcasecmp@plt+0x2264>
  4047af:	jmp    4047d3 <rb_strcasecmp@plt+0x2283>
  4047b4:	lea    rdi,[rip+0xbd90]        # 41054b <rb_strcasecmp@plt+0xdffb>
  4047bb:	lea    rsi,[rip+0xbd2a]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  4047c2:	mov    edx,0x8f
  4047c7:	lea    rcx,[rip+0xbd8a]        # 410558 <rb_strcasecmp@plt+0xe008>
  4047ce:	call   4020f0 <__assert_fail@plt>
  4047d3:	cmp    QWORD PTR [rbp-0x10],0x0
  4047d8:	je     4047e3 <rb_strcasecmp@plt+0x2293>
  4047de:	jmp    404802 <rb_strcasecmp@plt+0x22b2>
  4047e3:	lea    rdi,[rip+0xc234]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  4047ea:	lea    rsi,[rip+0xbcfb]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  4047f1:	mov    edx,0x90
  4047f6:	lea    rcx,[rip+0xbd5b]        # 410558 <rb_strcasecmp@plt+0xe008>
  4047fd:	call   4020f0 <__assert_fail@plt>
  404802:	cmp    QWORD PTR [rbp-0x18],0x0
  404807:	je     404812 <rb_strcasecmp@plt+0x22c2>
  40480d:	jmp    404831 <rb_strcasecmp@plt+0x22e1>
  404812:	lea    rdi,[rip+0xbd25]        # 41053e <rb_strcasecmp@plt+0xdfee>
  404819:	lea    rsi,[rip+0xbccc]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  404820:	mov    edx,0x91
  404825:	lea    rcx,[rip+0xbd2c]        # 410558 <rb_strcasecmp@plt+0xe008>
  40482c:	call   4020f0 <__assert_fail@plt>
  404831:	mov    rax,QWORD PTR [rbp-0x8]
  404835:	mov    rcx,QWORD PTR [rbp-0x10]
  404839:	mov    QWORD PTR [rcx],rax
  40483c:	mov    rax,QWORD PTR [rbp-0x10]
  404840:	mov    QWORD PTR [rax+0x8],0x0
  404848:	mov    rax,QWORD PTR [rbp-0x18]
  40484c:	mov    rax,QWORD PTR [rax]
  40484f:	mov    rcx,QWORD PTR [rbp-0x10]
  404853:	mov    QWORD PTR [rcx+0x10],rax
  404857:	mov    rax,QWORD PTR [rbp-0x18]
  40485b:	cmp    QWORD PTR [rax],0x0
  40485f:	je     404879 <rb_strcasecmp@plt+0x2329>
  404865:	mov    rax,QWORD PTR [rbp-0x10]
  404869:	mov    rcx,QWORD PTR [rbp-0x18]
  40486d:	mov    rcx,QWORD PTR [rcx]
  404870:	mov    QWORD PTR [rcx+0x8],rax
  404874:	jmp    404899 <rb_strcasecmp@plt+0x2349>
  404879:	mov    rax,QWORD PTR [rbp-0x18]
  40487d:	cmp    QWORD PTR [rax+0x8],0x0
  404882:	jne    404894 <rb_strcasecmp@plt+0x2344>
  404888:	mov    rax,QWORD PTR [rbp-0x10]
  40488c:	mov    rcx,QWORD PTR [rbp-0x18]
  404890:	mov    QWORD PTR [rcx+0x8],rax
  404894:	jmp    404899 <rb_strcasecmp@plt+0x2349>
  404899:	mov    rax,QWORD PTR [rbp-0x10]
  40489d:	mov    rcx,QWORD PTR [rbp-0x18]
  4048a1:	mov    QWORD PTR [rcx],rax
  4048a4:	mov    rax,QWORD PTR [rbp-0x18]
  4048a8:	mov    rcx,QWORD PTR [rax+0x10]
  4048ac:	add    rcx,0x1
  4048b0:	mov    QWORD PTR [rax+0x10],rcx
  4048b4:	add    rsp,0x20
  4048b8:	pop    rbp
  4048b9:	ret    
  4048ba:	nop    WORD PTR [rax+rax*1+0x0]
  4048c0:	push   rbp
  4048c1:	mov    rbp,rsp
  4048c4:	sub    rsp,0x20
  4048c8:	mov    QWORD PTR [rbp-0x8],rdi
  4048cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4048d0:	cmp    QWORD PTR [rdi+0x70],0x0
  4048d5:	je     404925 <rb_strcasecmp@plt+0x23d5>
  4048db:	mov    rax,QWORD PTR [rbp-0x8]
  4048df:	mov    rax,QWORD PTR [rax+0x70]
  4048e3:	mov    QWORD PTR [rbp-0x10],rax
  4048e7:	mov    rax,QWORD PTR [rbp-0x10]
  4048eb:	cmp    QWORD PTR [rax],0x0
  4048ef:	je     404920 <rb_strcasecmp@plt+0x23d0>
  4048f5:	lea    rax,[rip+0x16894]        # 41b190 <rb_strcasecmp@plt+0x18c40>
  4048fc:	mov    rdi,QWORD PTR [rax]
  4048ff:	mov    rax,QWORD PTR [rbp-0x10]
  404903:	mov    rsi,QWORD PTR [rax]
  404906:	call   4022b0 <rb_dictionary_delete@plt>
  40490b:	mov    QWORD PTR [rbp-0x18],rax
  40490f:	mov    rax,QWORD PTR [rbp-0x10]
  404913:	add    rax,0x18
  404917:	mov    QWORD PTR [rbp-0x10],rax
  40491b:	jmp    4048e7 <rb_strcasecmp@plt+0x2397>
  404920:	jmp    404925 <rb_strcasecmp@plt+0x23d5>
  404925:	mov    rax,QWORD PTR [rbp-0x8]
  404929:	movsx  ecx,BYTE PTR [rax+0x60]
  40492d:	cmp    ecx,0x0
  404930:	je     40494f <rb_strcasecmp@plt+0x23ff>
  404936:	lea    rax,[rip+0x11183]        # 415ac0 <rb_strcasecmp@plt+0x13570>
  40493d:	mov    rcx,QWORD PTR [rbp-0x8]
  404941:	movzx  edx,BYTE PTR [rcx+0x60]
  404945:	mov    ecx,edx
  404947:	mov    QWORD PTR [rax+rcx*8],0x0
  40494f:	mov    rax,QWORD PTR [rbp-0x8]
  404953:	cmp    QWORD PTR [rax+0x38],0x0
  404958:	je     404965 <rb_strcasecmp@plt+0x2415>
  40495e:	mov    rax,QWORD PTR [rbp-0x8]
  404962:	call   QWORD PTR [rax+0x38]
  404965:	lea    rsi,[rip+0x16834]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  40496c:	mov    rdi,QWORD PTR [rbp-0x8]
  404970:	call   404680 <rb_strcasecmp@plt+0x2130>
  404975:	mov    rsi,QWORD PTR [rbp-0x8]
  404979:	mov    eax,DWORD PTR [rsi+0x18]
  40497c:	mov    edi,eax
  40497e:	mov    QWORD PTR [rbp-0x20],rdi
  404982:	call   4024e0 <rb_make_rb_dlink_node@plt>
  404987:	mov    rdi,QWORD PTR [rbp-0x20]
  40498b:	mov    rsi,rax
  40498e:	lea    rdx,[rip+0x165cb]        # 41af60 <rb_strcasecmp@plt+0x18a10>
  404995:	call   404790 <rb_strcasecmp@plt+0x2240>
  40499a:	add    rsp,0x20
  40499e:	pop    rbp
  40499f:	ret    
  4049a0:	push   rbp
  4049a1:	mov    rbp,rsp
  4049a4:	sub    rsp,0x10
  4049a8:	lea    rax,[rip+0x167e9]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  4049af:	mov    QWORD PTR [rbp-0x8],rdi
  4049b3:	mov    rdi,QWORD PTR [rax]
  4049b6:	mov    rax,QWORD PTR [rbp-0x8]
  4049ba:	mov    ecx,DWORD PTR [rax]
  4049bc:	mov    esi,ecx
  4049be:	call   4022b0 <rb_dictionary_delete@plt>
  4049c3:	mov    rsi,QWORD PTR [rbp-0x8]
  4049c7:	mov    rsi,QWORD PTR [rsi+0x1d0]
  4049ce:	mov    rdi,rsi
  4049d1:	mov    QWORD PTR [rbp-0x10],rax
  4049d5:	call   4049f0 <rb_strcasecmp@plt+0x24a0>
  4049da:	mov    rax,QWORD PTR [rbp-0x8]
  4049de:	mov    rdi,rax
  4049e1:	call   4049f0 <rb_strcasecmp@plt+0x24a0>
  4049e6:	add    rsp,0x10
  4049ea:	pop    rbp
  4049eb:	ret    
  4049ec:	nop    DWORD PTR [rax+0x0]
  4049f0:	push   rbp
  4049f1:	mov    rbp,rsp
  4049f4:	sub    rsp,0x10
  4049f8:	mov    QWORD PTR [rbp-0x8],rdi
  4049fc:	cmp    QWORD PTR [rbp-0x8],0x0
  404a01:	setne  al
  404a04:	xor    al,0xff
  404a06:	xor    al,0xff
  404a08:	and    al,0x1
  404a0a:	movzx  ecx,al
  404a0d:	movsxd rdi,ecx
  404a10:	cmp    rdi,0x0
  404a14:	je     404a23 <rb_strcasecmp@plt+0x24d3>
  404a1a:	mov    rdi,QWORD PTR [rbp-0x8]
  404a1e:	call   402200 <free@plt>
  404a23:	add    rsp,0x10
  404a27:	pop    rbp
  404a28:	ret    
  404a29:	nop    DWORD PTR [rax+0x0]
  404a30:	push   rbp
  404a31:	mov    rbp,rsp
  404a34:	sub    rsp,0x20
  404a38:	mov    QWORD PTR [rbp-0x8],rdi
  404a3c:	mov    rdi,QWORD PTR [rbp-0x8]
  404a40:	test   BYTE PTR [rdi+0x1c4],0x1
  404a47:	je     404a52 <rb_strcasecmp@plt+0x2502>
  404a4d:	jmp    404ae7 <rb_strcasecmp@plt+0x2597>
  404a52:	mov    rax,QWORD PTR [rbp-0x8]
  404a56:	mov    BYTE PTR [rax+0x1c4],0x1
  404a5d:	mov    rax,QWORD PTR [rbp-0x8]
  404a61:	cmp    DWORD PTR [rax+0x1c8],0x0
  404a68:	jbe    404ae7 <rb_strcasecmp@plt+0x2597>
  404a6e:	lea    rax,[rip+0x1672b]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  404a75:	mov    rax,QWORD PTR [rax]
  404a78:	mov    QWORD PTR [rbp-0x10],rax
  404a7c:	cmp    QWORD PTR [rbp-0x10],0x0
  404a81:	je     404ae2 <rb_strcasecmp@plt+0x2592>
  404a87:	mov    rax,QWORD PTR [rbp-0x10]
  404a8b:	mov    rax,QWORD PTR [rax]
  404a8e:	mov    QWORD PTR [rbp-0x18],rax
  404a92:	mov    rax,QWORD PTR [rbp-0x18]
  404a96:	cmp    QWORD PTR [rax+0x48],0x0
  404a9b:	je     404acc <rb_strcasecmp@plt+0x257c>
  404aa1:	mov    rdi,QWORD PTR [rbp-0x8]
  404aa5:	mov    rax,QWORD PTR [rbp-0x18]
  404aa9:	mov    esi,DWORD PTR [rax+0x18]
  404aac:	call   404af0 <rb_strcasecmp@plt+0x25a0>
  404ab1:	test   al,0x1
  404ab3:	jne    404abe <rb_strcasecmp@plt+0x256e>
  404ab9:	jmp    404acc <rb_strcasecmp@plt+0x257c>
  404abe:	mov    rax,QWORD PTR [rbp-0x18]
  404ac2:	mov    rax,QWORD PTR [rax+0x48]
  404ac6:	mov    rdi,QWORD PTR [rbp-0x8]
  404aca:	call   rax
  404acc:	jmp    404ad1 <rb_strcasecmp@plt+0x2581>
  404ad1:	mov    rax,QWORD PTR [rbp-0x10]
  404ad5:	mov    rax,QWORD PTR [rax+0x10]
  404ad9:	mov    QWORD PTR [rbp-0x10],rax
  404add:	jmp    404a7c <rb_strcasecmp@plt+0x252c>
  404ae2:	jmp    404ae7 <rb_strcasecmp@plt+0x2597>
  404ae7:	add    rsp,0x20
  404aeb:	pop    rbp
  404aec:	ret    
  404aed:	nop    DWORD PTR [rax]
  404af0:	push   rbp
  404af1:	mov    rbp,rsp
  404af4:	sub    rsp,0x10
  404af8:	mov    QWORD PTR [rbp-0x8],rdi
  404afc:	mov    DWORD PTR [rbp-0xc],esi
  404aff:	mov    rdi,QWORD PTR [rbp-0x8]
  404b03:	mov    esi,DWORD PTR [rbp-0xc]
  404b06:	call   4051f0 <rb_strcasecmp@plt+0x2ca0>
  404b0b:	cmp    eax,0x1
  404b0e:	sete   cl
  404b11:	and    cl,0x1
  404b14:	movzx  eax,cl
  404b17:	add    rsp,0x10
  404b1b:	pop    rbp
  404b1c:	ret    
  404b1d:	nop    DWORD PTR [rax]
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	sub    rsp,0x20
  404b28:	mov    QWORD PTR [rbp-0x8],rdi
  404b2c:	mov    DWORD PTR [rbp-0xc],esi
  404b2f:	mov    rdi,QWORD PTR [rbp-0x8]
  404b33:	mov    esi,DWORD PTR [rbp-0xc]
  404b36:	call   404bf0 <rb_strcasecmp@plt+0x26a0>
  404b3b:	mov    rdi,QWORD PTR [rbp-0x8]
  404b3f:	cmp    DWORD PTR [rdi+0x1c8],0x0
  404b46:	jne    404b6b <rb_strcasecmp@plt+0x261b>
  404b4c:	mov    rax,QWORD PTR [rbp-0x8]
  404b50:	test   BYTE PTR [rax+0x1c3],0x1
  404b57:	jne    404b6b <rb_strcasecmp@plt+0x261b>
  404b5d:	mov    rdi,QWORD PTR [rbp-0x8]
  404b61:	call   404c30 <rb_strcasecmp@plt+0x26e0>
  404b66:	jmp    404be2 <rb_strcasecmp@plt+0x2692>
  404b6b:	lea    rax,[rip+0x1662e]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  404b72:	mov    rax,QWORD PTR [rax]
  404b75:	mov    QWORD PTR [rbp-0x18],rax
  404b79:	cmp    QWORD PTR [rbp-0x18],0x0
  404b7e:	je     404be2 <rb_strcasecmp@plt+0x2692>
  404b84:	mov    rax,QWORD PTR [rbp-0x18]
  404b88:	mov    rax,QWORD PTR [rax]
  404b8b:	mov    QWORD PTR [rbp-0x20],rax
  404b8f:	mov    rax,QWORD PTR [rbp-0x20]
  404b93:	cmp    QWORD PTR [rax+0x58],0x0
  404b98:	je     404bcc <rb_strcasecmp@plt+0x267c>
  404b9e:	mov    rdi,QWORD PTR [rbp-0x8]
  404ba2:	mov    rax,QWORD PTR [rbp-0x20]
  404ba6:	mov    esi,DWORD PTR [rax+0x18]
  404ba9:	call   404af0 <rb_strcasecmp@plt+0x25a0>
  404bae:	test   al,0x1
  404bb0:	jne    404bbb <rb_strcasecmp@plt+0x266b>
  404bb6:	jmp    404bcc <rb_strcasecmp@plt+0x267c>
  404bbb:	mov    rax,QWORD PTR [rbp-0x20]
  404bbf:	mov    rax,QWORD PTR [rax+0x58]
  404bc3:	mov    rdi,QWORD PTR [rbp-0x8]
  404bc7:	mov    esi,DWORD PTR [rbp-0xc]
  404bca:	call   rax
  404bcc:	jmp    404bd1 <rb_strcasecmp@plt+0x2681>
  404bd1:	mov    rax,QWORD PTR [rbp-0x18]
  404bd5:	mov    rax,QWORD PTR [rax+0x10]
  404bd9:	mov    QWORD PTR [rbp-0x18],rax
  404bdd:	jmp    404b79 <rb_strcasecmp@plt+0x2629>
  404be2:	add    rsp,0x20
  404be6:	pop    rbp
  404be7:	ret    
  404be8:	nop    DWORD PTR [rax+rax*1+0x0]
  404bf0:	push   rbp
  404bf1:	mov    rbp,rsp
  404bf4:	sub    rsp,0x10
  404bf8:	mov    QWORD PTR [rbp-0x8],rdi
  404bfc:	mov    DWORD PTR [rbp-0xc],esi
  404bff:	mov    rdi,QWORD PTR [rbp-0x8]
  404c03:	mov    esi,DWORD PTR [rbp-0xc]
  404c06:	mov    edx,0x2
  404c0b:	call   405220 <rb_strcasecmp@plt+0x2cd0>
  404c10:	mov    rdi,QWORD PTR [rbp-0x8]
  404c14:	mov    edx,DWORD PTR [rdi+0x1c8]
  404c1a:	add    edx,0xffffffff
  404c1d:	mov    DWORD PTR [rdi+0x1c8],edx
  404c23:	add    rsp,0x10
  404c27:	pop    rbp
  404c28:	ret    
  404c29:	nop    DWORD PTR [rax+0x0]
  404c30:	push   rbp
  404c31:	mov    rbp,rsp
  404c34:	sub    rsp,0x10
  404c38:	lea    rax,[rip+0x122a1]        # 416ee0 <rb_strcasecmp@plt+0x14990>
  404c3f:	mov    QWORD PTR [rbp-0x8],rdi
  404c43:	mov    rdi,QWORD PTR [rax]
  404c46:	mov    rax,QWORD PTR [rbp-0x8]
  404c4a:	mov    edx,DWORD PTR [rax]
  404c4c:	mov    rax,QWORD PTR [rbp-0x8]
  404c50:	add    rax,0x1b8
  404c56:	mov    rcx,QWORD PTR [rbp-0x8]
  404c5a:	add    rcx,0x178
  404c61:	lea    rsi,[rip+0xb7a1]        # 410409 <rb_strcasecmp@plt+0xdeb9>
  404c68:	mov    QWORD PTR [rbp-0x10],rcx
  404c6c:	mov    rcx,rax
  404c6f:	mov    r8,QWORD PTR [rbp-0x10]
  404c73:	mov    al,0x0
  404c75:	call   402480 <rb_helper_write@plt>
  404c7a:	mov    rdi,QWORD PTR [rbp-0x8]
  404c7e:	call   404a30 <rb_strcasecmp@plt+0x24e0>
  404c83:	add    rsp,0x10
  404c87:	pop    rbp
  404c88:	ret    
  404c89:	nop    DWORD PTR [rax+0x0]
  404c90:	push   rbp
  404c91:	mov    rbp,rsp
  404c94:	sub    rsp,0x40
  404c98:	mov    DWORD PTR [rbp-0x4],edi
  404c9b:	mov    QWORD PTR [rbp-0x10],rsi
  404c9f:	cmp    DWORD PTR [rbp-0x4],0x6
  404ca3:	jge    404cc9 <rb_strcasecmp@plt+0x2779>
  404ca9:	mov    edx,DWORD PTR [rbp-0x4]
  404cac:	mov    edi,0x43
  404cb1:	lea    rsi,[rip+0xb75c]        # 410414 <rb_strcasecmp@plt+0xdec4>
  404cb8:	mov    al,0x0
  404cba:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  404cbf:	mov    edi,0x3
  404cc4:	call   4020e0 <exit@plt>
  404cc9:	mov    rax,QWORD PTR [rbp-0x10]
  404ccd:	mov    rdi,QWORD PTR [rax+0x8]
  404cd1:	mov    rax,QWORD PTR [rbp-0x10]
  404cd5:	mov    rsi,QWORD PTR [rax+0x10]
  404cd9:	mov    rax,QWORD PTR [rbp-0x10]
  404cdd:	mov    rdx,QWORD PTR [rax+0x18]
  404ce1:	mov    rax,QWORD PTR [rbp-0x10]
  404ce5:	mov    rcx,QWORD PTR [rax+0x20]
  404ce9:	mov    rax,QWORD PTR [rbp-0x10]
  404ced:	mov    r8,QWORD PTR [rax+0x28]
  404cf1:	cmp    DWORD PTR [rbp-0x4],0x6
  404cf5:	mov    QWORD PTR [rbp-0x18],rdi
  404cf9:	mov    QWORD PTR [rbp-0x20],rsi
  404cfd:	mov    QWORD PTR [rbp-0x28],rdx
  404d01:	mov    QWORD PTR [rbp-0x30],rcx
  404d05:	mov    QWORD PTR [rbp-0x38],r8
  404d09:	jle    404d20 <rb_strcasecmp@plt+0x27d0>
  404d0f:	mov    rax,QWORD PTR [rbp-0x10]
  404d13:	mov    rax,QWORD PTR [rax+0x30]
  404d17:	mov    QWORD PTR [rbp-0x40],rax
  404d1b:	jmp    404d30 <rb_strcasecmp@plt+0x27e0>
  404d20:	lea    rax,[rip+0xb8b9]        # 4105e0 <rb_strcasecmp@plt+0xe090>
  404d27:	mov    QWORD PTR [rbp-0x40],rax
  404d2b:	jmp    404d30 <rb_strcasecmp@plt+0x27e0>
  404d30:	mov    rax,QWORD PTR [rbp-0x40]
  404d34:	mov    rdi,QWORD PTR [rbp-0x18]
  404d38:	mov    rsi,QWORD PTR [rbp-0x20]
  404d3c:	mov    rdx,QWORD PTR [rbp-0x28]
  404d40:	mov    rcx,QWORD PTR [rbp-0x30]
  404d44:	mov    r8,QWORD PTR [rbp-0x38]
  404d48:	mov    r9,rax
  404d4b:	call   404d60 <rb_strcasecmp@plt+0x2810>
  404d50:	add    rsp,0x40
  404d54:	pop    rbp
  404d55:	ret    
  404d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d60:	push   rbp
  404d61:	mov    rbp,rsp
  404d64:	sub    rsp,0x90
  404d6b:	xor    eax,eax
  404d6d:	mov    r10d,eax
  404d70:	mov    QWORD PTR [rbp-0x8],rdi
  404d74:	mov    QWORD PTR [rbp-0x10],rsi
  404d78:	mov    QWORD PTR [rbp-0x18],rdx
  404d7c:	mov    QWORD PTR [rbp-0x20],rcx
  404d80:	mov    QWORD PTR [rbp-0x28],r8
  404d84:	mov    QWORD PTR [rbp-0x30],r9
  404d88:	mov    rdi,QWORD PTR [rbp-0x8]
  404d8c:	mov    rsi,r10
  404d8f:	mov    edx,0x10
  404d94:	call   4024c0 <strtoull@plt>
  404d99:	mov    QWORD PTR [rbp-0x40],rax
  404d9d:	cmp    QWORD PTR [rbp-0x40],0x0
  404da2:	je     404db9 <rb_strcasecmp@plt+0x2869>
  404da8:	mov    eax,0xffffffff
  404dad:	mov    ecx,eax
  404daf:	cmp    QWORD PTR [rbp-0x40],rcx
  404db3:	jbe    404dbe <rb_strcasecmp@plt+0x286e>
  404db9:	jmp    4050ea <rb_strcasecmp@plt+0x2b9a>
  404dbe:	mov    eax,0x1d8
  404dc3:	mov    edi,eax
  404dc5:	call   405250 <rb_strcasecmp@plt+0x2d00>
  404dca:	mov    QWORD PTR [rbp-0x38],rax
  404dce:	mov    rdi,QWORD PTR [rbp-0x38]
  404dd2:	call   404340 <rb_strcasecmp@plt+0x1df0>
  404dd7:	lea    rax,[rip+0x163ba]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  404dde:	mov    rdi,QWORD PTR [rbp-0x40]
  404de2:	mov    ecx,edi
  404de4:	mov    rdi,QWORD PTR [rbp-0x38]
  404de8:	mov    DWORD PTR [rdi],ecx
  404dea:	mov    rdi,QWORD PTR [rax]
  404ded:	mov    rax,QWORD PTR [rbp-0x38]
  404df1:	mov    ecx,DWORD PTR [rax]
  404df3:	mov    esi,ecx
  404df5:	call   402430 <rb_dictionary_find@plt>
  404dfa:	cmp    rax,0x0
  404dfe:	jne    404e2b <rb_strcasecmp@plt+0x28db>
  404e04:	lea    rax,[rip+0x1638d]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  404e0b:	mov    rdi,QWORD PTR [rax]
  404e0e:	mov    rax,QWORD PTR [rbp-0x38]
  404e12:	mov    ecx,DWORD PTR [rax]
  404e14:	mov    esi,ecx
  404e16:	mov    rax,QWORD PTR [rbp-0x38]
  404e1a:	mov    rdx,rax
  404e1d:	call   4023d0 <rb_dictionary_add@plt>
  404e22:	mov    QWORD PTR [rbp-0x58],rax
  404e26:	jmp    404e4c <rb_strcasecmp@plt+0x28fc>
  404e2b:	mov    rdx,QWORD PTR [rbp-0x8]
  404e2f:	mov    edi,0x43
  404e34:	lea    rsi,[rip+0xb758]        # 410593 <rb_strcasecmp@plt+0xe043>
  404e3b:	mov    al,0x0
  404e3d:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  404e42:	mov    edi,0x3
  404e47:	call   4020e0 <exit@plt>
  404e4c:	xor    eax,eax
  404e4e:	mov    esi,eax
  404e50:	mov    rdi,QWORD PTR [rbp-0x30]
  404e54:	mov    edx,0x10
  404e59:	call   4024c0 <strtoull@plt>
  404e5e:	mov    edx,0x36
  404e63:	mov    ecx,eax
  404e65:	mov    rax,QWORD PTR [rbp-0x38]
  404e69:	mov    DWORD PTR [rax+0x4],ecx
  404e6c:	mov    rax,QWORD PTR [rbp-0x38]
  404e70:	add    rax,0x8
  404e74:	mov    rsi,QWORD PTR [rbp-0x10]
  404e78:	mov    rdi,rax
  404e7b:	call   4021d0 <rb_strlcpy@plt>
  404e80:	mov    rdi,QWORD PTR [rbp-0x18]
  404e84:	mov    QWORD PTR [rbp-0x60],rax
  404e88:	call   402330 <atoi@plt>
  404e8d:	mov    r8w,ax
  404e91:	mov    rdx,QWORD PTR [rbp-0x38]
  404e95:	mov    WORD PTR [rdx+0x3e],r8w
  404e9a:	mov    rdi,QWORD PTR [rbp-0x10]
  404e9e:	mov    rdx,QWORD PTR [rbp-0x38]
  404ea2:	add    rdx,0x40
  404ea6:	mov    rsi,rdx
  404ea9:	call   402280 <rb_inet_pton_sock@plt>
  404eae:	mov    DWORD PTR [rbp-0x64],eax
  404eb1:	mov    rax,QWORD PTR [rbp-0x38]
  404eb5:	movzx  ecx,WORD PTR [rax+0x40]
  404eb9:	cmp    ecx,0x2
  404ebc:	jne    404edc <rb_strcasecmp@plt+0x298c>
  404ec2:	mov    rax,QWORD PTR [rbp-0x38]
  404ec6:	movzx  edi,WORD PTR [rax+0x3e]
  404eca:	call   4020d0 <htons@plt>
  404ecf:	mov    rcx,QWORD PTR [rbp-0x38]
  404ed3:	mov    WORD PTR [rcx+0x42],ax
  404ed7:	jmp    404ef1 <rb_strcasecmp@plt+0x29a1>
  404edc:	mov    rax,QWORD PTR [rbp-0x38]
  404ee0:	movzx  edi,WORD PTR [rax+0x3e]
  404ee4:	call   4020d0 <htons@plt>
  404ee9:	mov    rcx,QWORD PTR [rbp-0x38]
  404eed:	mov    WORD PTR [rcx+0x42],ax
  404ef1:	jmp    404ef6 <rb_strcasecmp@plt+0x29a6>
  404ef6:	mov    eax,0x36
  404efb:	mov    edx,eax
  404efd:	mov    rcx,QWORD PTR [rbp-0x38]
  404f01:	add    rcx,0xc0
  404f08:	mov    rsi,QWORD PTR [rbp-0x20]
  404f0c:	mov    rdi,rcx
  404f0f:	call   4021d0 <rb_strlcpy@plt>
  404f14:	mov    rdi,QWORD PTR [rbp-0x28]
  404f18:	mov    QWORD PTR [rbp-0x70],rax
  404f1c:	call   402330 <atoi@plt>
  404f21:	mov    r8w,ax
  404f25:	mov    rcx,QWORD PTR [rbp-0x38]
  404f29:	mov    WORD PTR [rcx+0xf6],r8w
  404f31:	mov    rdi,QWORD PTR [rbp-0x20]
  404f35:	mov    rcx,QWORD PTR [rbp-0x38]
  404f39:	add    rcx,0xf8
  404f40:	mov    rsi,rcx
  404f43:	call   402280 <rb_inet_pton_sock@plt>
  404f48:	mov    DWORD PTR [rbp-0x74],eax
  404f4b:	mov    rax,QWORD PTR [rbp-0x38]
  404f4f:	movzx  ecx,WORD PTR [rax+0xf8]
  404f56:	cmp    ecx,0x2
  404f59:	jne    404f7f <rb_strcasecmp@plt+0x2a2f>
  404f5f:	mov    rax,QWORD PTR [rbp-0x38]
  404f63:	movzx  edi,WORD PTR [rax+0xf6]
  404f6a:	call   4020d0 <htons@plt>
  404f6f:	mov    rcx,QWORD PTR [rbp-0x38]
  404f73:	mov    WORD PTR [rcx+0xfa],ax
  404f7a:	jmp    404f9a <rb_strcasecmp@plt+0x2a4a>
  404f7f:	mov    rax,QWORD PTR [rbp-0x38]
  404f83:	movzx  edi,WORD PTR [rax+0xf6]
  404f8a:	call   4020d0 <htons@plt>
  404f8f:	mov    rcx,QWORD PTR [rbp-0x38]
  404f93:	mov    WORD PTR [rcx+0xfa],ax
  404f9a:	jmp    404f9f <rb_strcasecmp@plt+0x2a4f>
  404f9f:	mov    eax,0x40
  404fa4:	mov    edx,eax
  404fa6:	mov    rcx,QWORD PTR [rbp-0x38]
  404faa:	add    rcx,0x178
  404fb1:	mov    rdi,rcx
  404fb4:	lea    rsi,[rip+0xb355]        # 410310 <rb_strcasecmp@plt+0xddc0>
  404fbb:	call   4021d0 <rb_strlcpy@plt>
  404fc0:	mov    r8d,0xb
  404fc6:	mov    edx,r8d
  404fc9:	mov    rcx,QWORD PTR [rbp-0x38]
  404fcd:	add    rcx,0x1b8
  404fd4:	mov    rdi,rcx
  404fd7:	lea    rsi,[rip+0xb332]        # 410310 <rb_strcasecmp@plt+0xddc0>
  404fde:	mov    QWORD PTR [rbp-0x80],rax
  404fe2:	call   4021d0 <rb_strlcpy@plt>
  404fe7:	mov    r8d,DWORD PTR [rip+0x15f8a]        # 41af78 <rb_strcasecmp@plt+0x18a28>
  404fee:	mov    ecx,r8d
  404ff1:	shl    rcx,0x5
  404ff5:	mov    rdi,rcx
  404ff8:	mov    QWORD PTR [rbp-0x88],rax
  404fff:	call   405250 <rb_strcasecmp@plt+0x2d00>
  405004:	lea    rcx,[rip+0x16195]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  40500b:	mov    rdx,QWORD PTR [rbp-0x38]
  40500f:	mov    QWORD PTR [rdx+0x1d0],rax
  405016:	mov    rax,QWORD PTR [rbp-0x38]
  40501a:	mov    BYTE PTR [rax+0x1c3],0x1
  405021:	mov    rax,QWORD PTR [rcx]
  405024:	mov    QWORD PTR [rbp-0x48],rax
  405028:	cmp    QWORD PTR [rbp-0x48],0x0
  40502d:	je     4050b7 <rb_strcasecmp@plt+0x2b67>
  405033:	mov    rax,QWORD PTR [rbp-0x48]
  405037:	mov    rax,QWORD PTR [rax]
  40503a:	mov    QWORD PTR [rbp-0x50],rax
  40503e:	mov    rax,QWORD PTR [rbp-0x50]
  405042:	mov    rcx,QWORD PTR [rbp-0x38]
  405046:	mov    rcx,QWORD PTR [rcx+0x1d0]
  40504d:	mov    rdx,QWORD PTR [rbp-0x50]
  405051:	mov    esi,DWORD PTR [rdx+0x18]
  405054:	mov    edx,esi
  405056:	shl    rdx,0x5
  40505a:	add    rcx,rdx
  40505d:	mov    QWORD PTR [rcx],rax
  405060:	mov    rdi,QWORD PTR [rbp-0x38]
  405064:	mov    rax,QWORD PTR [rbp-0x50]
  405068:	mov    esi,DWORD PTR [rax+0x18]
  40506b:	call   4052b0 <rb_strcasecmp@plt+0x2d60>
  405070:	mov    rax,QWORD PTR [rbp-0x50]
  405074:	mov    rax,QWORD PTR [rax+0x40]
  405078:	mov    rdi,QWORD PTR [rbp-0x38]
  40507c:	call   rax
  40507e:	test   al,0x1
  405080:	jne    40508b <rb_strcasecmp@plt+0x2b3b>
  405086:	jmp    4050e1 <rb_strcasecmp@plt+0x2b91>
  40508b:	mov    rax,QWORD PTR [rbp-0x38]
  40508f:	test   BYTE PTR [rax+0x1c4],0x1
  405096:	je     4050a1 <rb_strcasecmp@plt+0x2b51>
  40509c:	jmp    4050b7 <rb_strcasecmp@plt+0x2b67>
  4050a1:	jmp    4050a6 <rb_strcasecmp@plt+0x2b56>
  4050a6:	mov    rax,QWORD PTR [rbp-0x48]
  4050aa:	mov    rax,QWORD PTR [rax+0x10]
  4050ae:	mov    QWORD PTR [rbp-0x48],rax
  4050b2:	jmp    405028 <rb_strcasecmp@plt+0x2ad8>
  4050b7:	mov    rax,QWORD PTR [rbp-0x38]
  4050bb:	mov    BYTE PTR [rax+0x1c3],0x0
  4050c2:	mov    rax,QWORD PTR [rbp-0x38]
  4050c6:	cmp    DWORD PTR [rax+0x1c8],0x0
  4050cd:	jne    4050dc <rb_strcasecmp@plt+0x2b8c>
  4050d3:	mov    rdi,QWORD PTR [rbp-0x38]
  4050d7:	call   404c30 <rb_strcasecmp@plt+0x26e0>
  4050dc:	jmp    4050e1 <rb_strcasecmp@plt+0x2b91>
  4050e1:	mov    rdi,QWORD PTR [rbp-0x38]
  4050e5:	call   404640 <rb_strcasecmp@plt+0x20f0>
  4050ea:	add    rsp,0x90
  4050f1:	pop    rbp
  4050f2:	ret    
  4050f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050fd:	nop    DWORD PTR [rax]
  405100:	push   rbp
  405101:	mov    rbp,rsp
  405104:	sub    rsp,0x20
  405108:	mov    DWORD PTR [rbp-0x4],edi
  40510b:	mov    QWORD PTR [rbp-0x10],rsi
  40510f:	cmp    DWORD PTR [rbp-0x4],0x2
  405113:	jge    405139 <rb_strcasecmp@plt+0x2be9>
  405119:	mov    edx,DWORD PTR [rbp-0x4]
  40511c:	mov    edi,0x43
  405121:	lea    rsi,[rip+0xb336]        # 41045e <rb_strcasecmp@plt+0xdf0e>
  405128:	mov    al,0x0
  40512a:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40512f:	mov    edi,0x3
  405134:	call   4020e0 <exit@plt>
  405139:	xor    eax,eax
  40513b:	mov    esi,eax
  40513d:	mov    rcx,QWORD PTR [rbp-0x10]
  405141:	mov    rdi,QWORD PTR [rcx+0x8]
  405145:	mov    edx,0x10
  40514a:	call   4024c0 <strtoull@plt>
  40514f:	mov    QWORD PTR [rbp-0x20],rax
  405153:	cmp    QWORD PTR [rbp-0x20],0x0
  405158:	je     40516f <rb_strcasecmp@plt+0x2c1f>
  40515e:	mov    eax,0xffffffff
  405163:	mov    ecx,eax
  405165:	cmp    QWORD PTR [rbp-0x20],rcx
  405169:	jbe    405194 <rb_strcasecmp@plt+0x2c44>
  40516f:	mov    rax,QWORD PTR [rbp-0x10]
  405173:	mov    rdx,QWORD PTR [rax+0x8]
  405177:	mov    edi,0x43
  40517c:	lea    rsi,[rip+0xb325]        # 4104a8 <rb_strcasecmp@plt+0xdf58>
  405183:	mov    al,0x0
  405185:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40518a:	mov    edi,0x3
  40518f:	call   4020e0 <exit@plt>
  405194:	lea    rax,[rip+0x15ffd]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40519b:	mov    rdi,QWORD PTR [rax]
  40519e:	mov    rax,QWORD PTR [rbp-0x20]
  4051a2:	mov    ecx,eax
  4051a4:	mov    ecx,ecx
  4051a6:	mov    esi,ecx
  4051a8:	call   4023a0 <rb_dictionary_retrieve@plt>
  4051ad:	mov    QWORD PTR [rbp-0x18],rax
  4051b1:	cmp    rax,0x0
  4051b5:	jne    4051c0 <rb_strcasecmp@plt+0x2c70>
  4051bb:	jmp    4051db <rb_strcasecmp@plt+0x2c8b>
  4051c0:	mov    rdi,QWORD PTR [rbp-0x18]
  4051c4:	call   404340 <rb_strcasecmp@plt+0x1df0>
  4051c9:	mov    rdi,QWORD PTR [rbp-0x18]
  4051cd:	call   404a30 <rb_strcasecmp@plt+0x24e0>
  4051d2:	mov    rdi,QWORD PTR [rbp-0x18]
  4051d6:	call   404640 <rb_strcasecmp@plt+0x20f0>
  4051db:	add    rsp,0x20
  4051df:	pop    rbp
  4051e0:	ret    
  4051e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4051f0:	push   rbp
  4051f1:	mov    rbp,rsp
  4051f4:	mov    QWORD PTR [rbp-0x8],rdi
  4051f8:	mov    DWORD PTR [rbp-0xc],esi
  4051fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4051ff:	mov    rdi,QWORD PTR [rdi+0x1d0]
  405206:	mov    esi,DWORD PTR [rbp-0xc]
  405209:	mov    eax,esi
  40520b:	shl    rax,0x5
  40520f:	add    rdi,rax
  405212:	mov    eax,DWORD PTR [rdi+0x18]
  405215:	pop    rbp
  405216:	ret    
  405217:	nop    WORD PTR [rax+rax*1+0x0]
  405220:	push   rbp
  405221:	mov    rbp,rsp
  405224:	mov    QWORD PTR [rbp-0x8],rdi
  405228:	mov    DWORD PTR [rbp-0xc],esi
  40522b:	mov    DWORD PTR [rbp-0x10],edx
  40522e:	mov    edx,DWORD PTR [rbp-0x10]
  405231:	mov    rdi,QWORD PTR [rbp-0x8]
  405235:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40523c:	mov    esi,DWORD PTR [rbp-0xc]
  40523f:	mov    eax,esi
  405241:	shl    rax,0x5
  405245:	add    rdi,rax
  405248:	mov    DWORD PTR [rdi+0x18],edx
  40524b:	pop    rbp
  40524c:	ret    
  40524d:	nop    DWORD PTR [rax]
  405250:	push   rbp
  405251:	mov    rbp,rsp
  405254:	sub    rsp,0x10
  405258:	mov    eax,0x1
  40525d:	mov    ecx,eax
  40525f:	mov    QWORD PTR [rbp-0x8],rdi
  405263:	mov    rsi,QWORD PTR [rbp-0x8]
  405267:	mov    rdi,rcx
  40526a:	call   402470 <calloc@plt>
  40526f:	mov    QWORD PTR [rbp-0x10],rax
  405273:	cmp    QWORD PTR [rbp-0x10],0x0
  405278:	sete   dl
  40527b:	xor    dl,0xff
  40527e:	xor    dl,0xff
  405281:	and    dl,0x1
  405284:	movzx  r8d,dl
  405288:	movsxd rax,r8d
  40528b:	cmp    rax,0x0
  40528f:	je     40529a <rb_strcasecmp@plt+0x2d4a>
  405295:	call   4023b0 <rb_outofmemory@plt>
  40529a:	mov    rax,QWORD PTR [rbp-0x10]
  40529e:	add    rsp,0x10
  4052a2:	pop    rbp
  4052a3:	ret    
  4052a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052ae:	xchg   ax,ax
  4052b0:	push   rbp
  4052b1:	mov    rbp,rsp
  4052b4:	sub    rsp,0x10
  4052b8:	mov    QWORD PTR [rbp-0x8],rdi
  4052bc:	mov    DWORD PTR [rbp-0xc],esi
  4052bf:	mov    rdi,QWORD PTR [rbp-0x8]
  4052c3:	mov    esi,DWORD PTR [rdi+0x1c8]
  4052c9:	add    esi,0x1
  4052cc:	mov    DWORD PTR [rdi+0x1c8],esi
  4052d2:	mov    rdi,QWORD PTR [rbp-0x8]
  4052d6:	mov    esi,DWORD PTR [rbp-0xc]
  4052d9:	mov    edx,0x1
  4052de:	call   405220 <rb_strcasecmp@plt+0x2cd0>
  4052e3:	add    rsp,0x10
  4052e7:	pop    rbp
  4052e8:	ret    
  4052e9:	nop    DWORD PTR [rax+0x0]
  4052f0:	push   rbp
  4052f1:	mov    rbp,rsp
  4052f4:	mov    QWORD PTR [rbp-0x8],rdi
  4052f8:	mov    DWORD PTR [rbp-0xc],esi
  4052fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4052ff:	mov    rdi,QWORD PTR [rdi+0x1d0]
  405306:	mov    esi,DWORD PTR [rbp-0xc]
  405309:	mov    eax,esi
  40530b:	shl    rax,0x5
  40530f:	add    rdi,rax
  405312:	mov    rax,QWORD PTR [rdi+0x8]
  405316:	pop    rbp
  405317:	ret    
  405318:	nop    DWORD PTR [rax+rax*1+0x0]
  405320:	push   rbp
  405321:	mov    rbp,rsp
  405324:	call   405330 <rb_strcasecmp@plt+0x2de0>
  405329:	pop    rbp
  40532a:	ret    
  40532b:	nop    DWORD PTR [rax+rax*1+0x0]
  405330:	push   rbp
  405331:	mov    rbp,rsp
  405334:	sub    rsp,0x10
  405338:	call   407630 <rb_strcasecmp@plt+0x50e0>
  40533d:	mov    DWORD PTR [rbp-0x4],0x0
  405344:	mov    DWORD PTR [rbp-0x8],eax
  405347:	lea    rax,[rip+0x15c86]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  40534e:	mov    ecx,DWORD PTR [rbp-0x4]
  405351:	cmp    ecx,DWORD PTR [rax]
  405353:	jge    405379 <rb_strcasecmp@plt+0x2e29>
  405359:	movsxd rax,DWORD PTR [rbp-0x4]
  40535d:	lea    rcx,[rip+0x15c2c]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  405364:	mov    DWORD PTR [rcx+rax*4],0x0
  40536b:	mov    eax,DWORD PTR [rbp-0x4]
  40536e:	add    eax,0x1
  405371:	mov    DWORD PTR [rbp-0x4],eax
  405374:	jmp    405347 <rb_strcasecmp@plt+0x2df7>
  405379:	cmp    QWORD PTR [rip+0x15bff],0x0        # 41af80 <rb_strcasecmp@plt+0x18a30>
  405381:	jne    4053fb <rb_strcasecmp@plt+0x2eab>
  405387:	xor    edx,edx
  405389:	lea    rax,[rip+0x15f40]        # 41b2d0 <rb_strcasecmp@plt+0x18d80>
  405390:	movzx  edi,WORD PTR [rax]
  405393:	mov    esi,0x2
  405398:	lea    rcx,[rip+0xb310]        # 4106af <rb_strcasecmp@plt+0xe15f>
  40539f:	call   402110 <rb_socket@plt>
  4053a4:	mov    QWORD PTR [rip+0x15bd5],rax        # 41af80 <rb_strcasecmp@plt+0x18a30>
  4053ab:	cmp    rax,0x0
  4053af:	jne    4053ba <rb_strcasecmp@plt+0x2e6a>
  4053b5:	jmp    4053fb <rb_strcasecmp@plt+0x2eab>
  4053ba:	xor    eax,eax
  4053bc:	mov    ecx,eax
  4053be:	mov    rdi,QWORD PTR [rip+0x15bbb]        # 41af80 <rb_strcasecmp@plt+0x18a30>
  4053c5:	mov    esi,0x1
  4053ca:	lea    rdx,[rip+0x86f]        # 405c40 <rb_strcasecmp@plt+0x36f0>
  4053d1:	call   4020b0 <rb_setselect@plt>
  4053d6:	xor    eax,eax
  4053d8:	mov    edx,eax
  4053da:	mov    eax,0x1
  4053df:	mov    ecx,eax
  4053e1:	lea    rdi,[rip+0xb2db]        # 4106c3 <rb_strcasecmp@plt+0xe173>
  4053e8:	lea    rsi,[rip+0x8a1]        # 405c90 <rb_strcasecmp@plt+0x3740>
  4053ef:	call   4024b0 <rb_event_add@plt>
  4053f4:	mov    QWORD PTR [rip+0x15b8d],rax        # 41af88 <rb_strcasecmp@plt+0x18a38>
  4053fb:	add    rsp,0x10
  4053ff:	pop    rbp
  405400:	ret    
  405401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40540b:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	push   rbp
  405411:	mov    rbp,rsp
  405414:	mov    rdi,QWORD PTR [rip+0x15b65]        # 41af80 <rb_strcasecmp@plt+0x18a30>
  40541b:	call   402300 <rb_close@plt>
  405420:	mov    QWORD PTR [rip+0x15b55],0x0        # 41af80 <rb_strcasecmp@plt+0x18a30>
  40542b:	mov    rdi,QWORD PTR [rip+0x15b56]        # 41af88 <rb_strcasecmp@plt+0x18a38>
  405432:	call   4020a0 <rb_event_delete@plt>
  405437:	call   405330 <rb_strcasecmp@plt+0x2de0>
  40543c:	pop    rbp
  40543d:	ret    
  40543e:	xchg   ax,ax
  405440:	push   rbp
  405441:	mov    rbp,rsp
  405444:	sub    rsp,0x130
  40544b:	mov    QWORD PTR [rbp-0x8],rdi
  40544f:	mov    QWORD PTR [rbp-0x10],rsi
  405453:	mov    DWORD PTR [rbp-0x14],edx
  405456:	cmp    QWORD PTR [rbp-0x8],0x0
  40545b:	je     405466 <rb_strcasecmp@plt+0x2f16>
  405461:	jmp    405485 <rb_strcasecmp@plt+0x2f35>
  405466:	lea    rdi,[rip+0xb16b]        # 4105d8 <rb_strcasecmp@plt+0xe088>
  40546d:	lea    rsi,[rip+0xb16e]        # 4105e2 <rb_strcasecmp@plt+0xe092>
  405474:	mov    edx,0x19c
  405479:	lea    rcx,[rip+0xb168]        # 4105e8 <rb_strcasecmp@plt+0xe098>
  405480:	call   4020f0 <__assert_fail@plt>
  405485:	mov    eax,0x100
  40548a:	mov    edx,eax
  40548c:	lea    rdi,[rbp-0x120]
  405493:	mov    rsi,QWORD PTR [rbp-0x8]
  405497:	call   4021d0 <rb_strlcpy@plt>
  40549c:	mov    ecx,0xff
  4054a1:	mov    esi,ecx
  4054a3:	lea    rdi,[rbp-0x120]
  4054aa:	mov    QWORD PTR [rbp-0x128],rax
  4054b1:	call   4054e0 <rb_strcasecmp@plt+0x2f90>
  4054b6:	lea    rdi,[rbp-0x120]
  4054bd:	mov    rsi,QWORD PTR [rbp-0x10]
  4054c1:	mov    edx,DWORD PTR [rbp-0x14]
  4054c4:	call   405590 <rb_strcasecmp@plt+0x3040>
  4054c9:	add    rsp,0x130
  4054d0:	pop    rbp
  4054d1:	ret    
  4054d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054dc:	nop    DWORD PTR [rax+0x0]
  4054e0:	push   rbp
  4054e1:	mov    rbp,rsp
  4054e4:	sub    rsp,0x20
  4054e8:	mov    QWORD PTR [rbp-0x8],rdi
  4054ec:	mov    QWORD PTR [rbp-0x10],rsi
  4054f0:	mov    rdi,QWORD PTR [rbp-0x8]
  4054f4:	mov    esi,0x2e
  4054f9:	call   402370 <strchr@plt>
  4054fe:	cmp    rax,0x0
  405502:	jne    40557f <rb_strcasecmp@plt+0x302f>
  405508:	lea    rax,[rip+0x15cc1]        # 41b1d0 <rb_strcasecmp@plt+0x18c80>
  40550f:	cmp    BYTE PTR [rax],0x0
  405512:	je     40557a <rb_strcasecmp@plt+0x302a>
  405518:	mov    rdi,QWORD PTR [rbp-0x8]
  40551c:	call   402210 <strlen@plt>
  405521:	mov    QWORD PTR [rbp-0x18],rax
  405525:	lea    rdi,[rip+0x15ca4]        # 41b1d0 <rb_strcasecmp@plt+0x18c80>
  40552c:	call   402210 <strlen@plt>
  405531:	add    rax,QWORD PTR [rbp-0x18]
  405535:	add    rax,0x2
  405539:	cmp    rax,QWORD PTR [rbp-0x10]
  40553d:	jae    405575 <rb_strcasecmp@plt+0x3025>
  405543:	mov    rax,QWORD PTR [rbp-0x8]
  405547:	mov    rcx,QWORD PTR [rbp-0x18]
  40554b:	mov    rdx,rcx
  40554e:	add    rdx,0x1
  405552:	mov    QWORD PTR [rbp-0x18],rdx
  405556:	mov    BYTE PTR [rax+rcx*1],0x2e
  40555a:	mov    rax,QWORD PTR [rbp-0x8]
  40555e:	add    rax,QWORD PTR [rbp-0x18]
  405562:	lea    rsi,[rip+0x15c67]        # 41b1d0 <rb_strcasecmp@plt+0x18c80>
  405569:	mov    rdi,rax
  40556c:	call   402440 <strcpy@plt>
  405571:	mov    QWORD PTR [rbp-0x20],rax
  405575:	jmp    40557a <rb_strcasecmp@plt+0x302a>
  40557a:	jmp    40557f <rb_strcasecmp@plt+0x302f>
  40557f:	add    rsp,0x20
  405583:	pop    rbp
  405584:	ret    
  405585:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40558f:	nop
  405590:	push   rbp
  405591:	mov    rbp,rsp
  405594:	sub    rsp,0x20
  405598:	mov    QWORD PTR [rbp-0x8],rdi
  40559c:	mov    QWORD PTR [rbp-0x10],rsi
  4055a0:	mov    DWORD PTR [rbp-0x14],edx
  4055a3:	cmp    QWORD PTR [rbp-0x8],0x0
  4055a8:	je     4055b3 <rb_strcasecmp@plt+0x3063>
  4055ae:	jmp    4055d2 <rb_strcasecmp@plt+0x3082>
  4055b3:	lea    rdi,[rip+0xb01e]        # 4105d8 <rb_strcasecmp@plt+0xe088>
  4055ba:	lea    rsi,[rip+0xb021]        # 4105e2 <rb_strcasecmp@plt+0xe092>
  4055c1:	mov    edx,0x1a9
  4055c6:	lea    rcx,[rip+0xb18e]        # 41075b <rb_strcasecmp@plt+0xe20b>
  4055cd:	call   4020f0 <__assert_fail@plt>
  4055d2:	xor    eax,eax
  4055d4:	mov    edx,eax
  4055d6:	mov    rdi,QWORD PTR [rbp-0x10]
  4055da:	mov    rsi,QWORD PTR [rbp-0x8]
  4055de:	mov    ecx,DWORD PTR [rbp-0x14]
  4055e1:	call   406c80 <rb_strcasecmp@plt+0x4730>
  4055e6:	add    rsp,0x20
  4055ea:	pop    rbp
  4055eb:	ret    
  4055ec:	nop    DWORD PTR [rax+0x0]
  4055f0:	push   rbp
  4055f1:	mov    rbp,rsp
  4055f4:	sub    rsp,0x10
  4055f8:	xor    eax,eax
  4055fa:	mov    edx,eax
  4055fc:	mov    QWORD PTR [rbp-0x8],rdi
  405600:	mov    QWORD PTR [rbp-0x10],rsi
  405604:	mov    rdi,QWORD PTR [rbp-0x10]
  405608:	mov    rsi,QWORD PTR [rbp-0x8]
  40560c:	call   405620 <rb_strcasecmp@plt+0x30d0>
  405611:	add    rsp,0x10
  405615:	pop    rbp
  405616:	ret    
  405617:	nop    WORD PTR [rax+rax*1+0x0]
  405620:	push   rbp
  405621:	mov    rbp,rsp
  405624:	sub    rsp,0x30
  405628:	mov    QWORD PTR [rbp-0x8],rdi
  40562c:	mov    QWORD PTR [rbp-0x10],rsi
  405630:	mov    QWORD PTR [rbp-0x18],rdx
  405634:	cmp    QWORD PTR [rbp-0x18],0x0
  405639:	jne    405688 <rb_strcasecmp@plt+0x3138>
  40563f:	mov    rdi,QWORD PTR [rbp-0x8]
  405643:	call   406d00 <rb_strcasecmp@plt+0x47b0>
  405648:	mov    ecx,0x100
  40564d:	mov    edi,ecx
  40564f:	mov    ecx,0x80
  405654:	mov    edx,ecx
  405656:	mov    QWORD PTR [rbp-0x18],rax
  40565a:	mov    rax,QWORD PTR [rbp-0x18]
  40565e:	add    rax,0x148
  405664:	mov    rsi,QWORD PTR [rbp-0x10]
  405668:	mov    QWORD PTR [rbp-0x20],rdi
  40566c:	mov    rdi,rax
  40566f:	call   402540 <memcpy@plt>
  405674:	mov    rdi,QWORD PTR [rbp-0x20]
  405678:	call   406f10 <rb_strcasecmp@plt+0x49c0>
  40567d:	mov    rdx,QWORD PTR [rbp-0x18]
  405681:	mov    QWORD PTR [rdx+0x1c8],rax
  405688:	mov    eax,0x100
  40568d:	mov    esi,eax
  40568f:	xor    eax,eax
  405691:	mov    ecx,eax
  405693:	mov    rdx,QWORD PTR [rbp-0x18]
  405697:	add    rdx,0x29
  40569b:	mov    rdi,QWORD PTR [rbp-0x10]
  40569f:	mov    QWORD PTR [rbp-0x28],rdi
  4056a3:	mov    rdi,rdx
  4056a6:	mov    rdx,QWORD PTR [rbp-0x28]
  4056aa:	call   4056d0 <rb_strcasecmp@plt+0x3180>
  4056af:	mov    rcx,QWORD PTR [rbp-0x18]
  4056b3:	mov    BYTE PTR [rcx+0x28],0xc
  4056b7:	mov    rdi,QWORD PTR [rbp-0x18]
  4056bb:	call   406e00 <rb_strcasecmp@plt+0x48b0>
  4056c0:	add    rsp,0x30
  4056c4:	pop    rbp
  4056c5:	ret    
  4056c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056d0:	push   rbp
  4056d1:	mov    rbp,rsp
  4056d4:	push   r15
  4056d6:	push   r14
  4056d8:	push   r13
  4056da:	push   r12
  4056dc:	push   rbx
  4056dd:	sub    rsp,0x1f8
  4056e4:	mov    QWORD PTR [rbp-0x30],rdi
  4056e8:	mov    QWORD PTR [rbp-0x38],rsi
  4056ec:	mov    QWORD PTR [rbp-0x40],rdx
  4056f0:	mov    QWORD PTR [rbp-0x48],rcx
  4056f4:	mov    rcx,QWORD PTR [rbp-0x40]
  4056f8:	movzx  eax,WORD PTR [rcx]
  4056fb:	cmp    eax,0x2
  4056fe:	jne    4057c0 <rb_strcasecmp@plt+0x3270>
  405704:	mov    rax,QWORD PTR [rbp-0x40]
  405708:	mov    QWORD PTR [rbp-0x58],rax
  40570c:	mov    rax,QWORD PTR [rbp-0x58]
  405710:	add    rax,0x4
  405714:	mov    QWORD PTR [rbp-0x50],rax
  405718:	mov    rdi,QWORD PTR [rbp-0x30]
  40571c:	mov    rsi,QWORD PTR [rbp-0x38]
  405720:	mov    rax,QWORD PTR [rbp-0x50]
  405724:	movzx  ecx,BYTE PTR [rax+0x3]
  405728:	mov    rax,QWORD PTR [rbp-0x50]
  40572c:	movzx  r8d,BYTE PTR [rax+0x2]
  405731:	mov    rax,QWORD PTR [rbp-0x50]
  405735:	movzx  r9d,BYTE PTR [rax+0x1]
  40573a:	mov    rax,QWORD PTR [rbp-0x50]
  40573e:	movzx  edx,BYTE PTR [rax]
  405741:	cmp    QWORD PTR [rbp-0x48],0x0
  405746:	mov    QWORD PTR [rbp-0x68],rdi
  40574a:	mov    QWORD PTR [rbp-0x70],rsi
  40574e:	mov    DWORD PTR [rbp-0x74],ecx
  405751:	mov    DWORD PTR [rbp-0x78],r8d
  405755:	mov    DWORD PTR [rbp-0x7c],r9d
  405759:	mov    DWORD PTR [rbp-0x80],edx
  40575c:	jne    405775 <rb_strcasecmp@plt+0x3225>
  405762:	lea    rax,[rip+0xaecd]        # 410636 <rb_strcasecmp@plt+0xe0e6>
  405769:	mov    QWORD PTR [rbp-0x88],rax
  405770:	jmp    405780 <rb_strcasecmp@plt+0x3230>
  405775:	mov    rax,QWORD PTR [rbp-0x48]
  405779:	mov    QWORD PTR [rbp-0x88],rax
  405780:	mov    rax,QWORD PTR [rbp-0x88]
  405787:	mov    rdi,QWORD PTR [rbp-0x68]
  40578b:	mov    rsi,QWORD PTR [rbp-0x70]
  40578f:	lea    rdx,[rip+0xae91]        # 410627 <rb_strcasecmp@plt+0xe0d7>
  405796:	mov    ecx,DWORD PTR [rbp-0x74]
  405799:	mov    r8d,DWORD PTR [rbp-0x78]
  40579d:	mov    r9d,DWORD PTR [rbp-0x7c]
  4057a1:	mov    r10d,DWORD PTR [rbp-0x80]
  4057a5:	mov    DWORD PTR [rsp],r10d
  4057a9:	mov    QWORD PTR [rsp+0x8],rax
  4057ae:	mov    al,0x0
  4057b0:	call   402080 <snprintf@plt>
  4057b5:	mov    DWORD PTR [rbp-0x8c],eax
  4057bb:	jmp    405c23 <rb_strcasecmp@plt+0x36d3>
  4057c0:	mov    rax,QWORD PTR [rbp-0x40]
  4057c4:	movzx  ecx,WORD PTR [rax]
  4057c7:	cmp    ecx,0xa
  4057ca:	jne    405c1e <rb_strcasecmp@plt+0x36ce>
  4057d0:	mov    rax,QWORD PTR [rbp-0x40]
  4057d4:	mov    QWORD PTR [rbp-0x60],rax
  4057d8:	mov    rax,QWORD PTR [rbp-0x60]
  4057dc:	add    rax,0x8
  4057e0:	mov    QWORD PTR [rbp-0x50],rax
  4057e4:	mov    rdi,QWORD PTR [rbp-0x30]
  4057e8:	mov    rsi,QWORD PTR [rbp-0x38]
  4057ec:	mov    rax,QWORD PTR [rbp-0x50]
  4057f0:	movzx  ecx,BYTE PTR [rax+0xf]
  4057f4:	and    ecx,0xf
  4057f7:	mov    rax,QWORD PTR [rbp-0x50]
  4057fb:	movzx  edx,BYTE PTR [rax+0xf]
  4057ff:	sar    edx,0x4
  405802:	mov    rax,QWORD PTR [rbp-0x50]
  405806:	movzx  r8d,BYTE PTR [rax+0xe]
  40580b:	and    r8d,0xf
  40580f:	mov    rax,QWORD PTR [rbp-0x50]
  405813:	movzx  r9d,BYTE PTR [rax+0xe]
  405818:	sar    r9d,0x4
  40581c:	mov    rax,QWORD PTR [rbp-0x50]
  405820:	movzx  r10d,BYTE PTR [rax+0xd]
  405825:	and    r10d,0xf
  405829:	mov    rax,QWORD PTR [rbp-0x50]
  40582d:	movzx  r11d,BYTE PTR [rax+0xd]
  405832:	sar    r11d,0x4
  405836:	mov    rax,QWORD PTR [rbp-0x50]
  40583a:	movzx  ebx,BYTE PTR [rax+0xc]
  40583e:	and    ebx,0xf
  405841:	mov    rax,QWORD PTR [rbp-0x50]
  405845:	movzx  r14d,BYTE PTR [rax+0xc]
  40584a:	sar    r14d,0x4
  40584e:	mov    rax,QWORD PTR [rbp-0x50]
  405852:	movzx  r15d,BYTE PTR [rax+0xb]
  405857:	and    r15d,0xf
  40585b:	mov    rax,QWORD PTR [rbp-0x50]
  40585f:	movzx  r12d,BYTE PTR [rax+0xb]
  405864:	sar    r12d,0x4
  405868:	mov    rax,QWORD PTR [rbp-0x50]
  40586c:	movzx  r13d,BYTE PTR [rax+0xa]
  405871:	and    r13d,0xf
  405875:	mov    rax,QWORD PTR [rbp-0x50]
  405879:	movzx  eax,BYTE PTR [rax+0xa]
  40587d:	sar    eax,0x4
  405880:	mov    QWORD PTR [rbp-0x98],rsi
  405887:	mov    rsi,QWORD PTR [rbp-0x50]
  40588b:	movzx  esi,BYTE PTR [rsi+0x9]
  40588f:	and    esi,0xf
  405892:	mov    QWORD PTR [rbp-0xa0],rdi
  405899:	mov    rdi,QWORD PTR [rbp-0x50]
  40589d:	movzx  edi,BYTE PTR [rdi+0x9]
  4058a1:	sar    edi,0x4
  4058a4:	mov    DWORD PTR [rbp-0xa4],eax
  4058aa:	mov    rax,QWORD PTR [rbp-0x50]
  4058ae:	movzx  eax,BYTE PTR [rax+0x8]
  4058b2:	and    eax,0xf
  4058b5:	mov    DWORD PTR [rbp-0xa8],eax
  4058bb:	mov    rax,QWORD PTR [rbp-0x50]
  4058bf:	movzx  eax,BYTE PTR [rax+0x8]
  4058c3:	sar    eax,0x4
  4058c6:	mov    DWORD PTR [rbp-0xac],eax
  4058cc:	mov    rax,QWORD PTR [rbp-0x50]
  4058d0:	movzx  eax,BYTE PTR [rax+0x7]
  4058d4:	and    eax,0xf
  4058d7:	mov    DWORD PTR [rbp-0xb0],eax
  4058dd:	mov    rax,QWORD PTR [rbp-0x50]
  4058e1:	movzx  eax,BYTE PTR [rax+0x7]
  4058e5:	sar    eax,0x4
  4058e8:	mov    DWORD PTR [rbp-0xb4],eax
  4058ee:	mov    rax,QWORD PTR [rbp-0x50]
  4058f2:	movzx  eax,BYTE PTR [rax+0x6]
  4058f6:	and    eax,0xf
  4058f9:	mov    DWORD PTR [rbp-0xb8],eax
  4058ff:	mov    rax,QWORD PTR [rbp-0x50]
  405903:	movzx  eax,BYTE PTR [rax+0x6]
  405907:	sar    eax,0x4
  40590a:	mov    DWORD PTR [rbp-0xbc],eax
  405910:	mov    rax,QWORD PTR [rbp-0x50]
  405914:	movzx  eax,BYTE PTR [rax+0x5]
  405918:	and    eax,0xf
  40591b:	mov    DWORD PTR [rbp-0xc0],eax
  405921:	mov    rax,QWORD PTR [rbp-0x50]
  405925:	movzx  eax,BYTE PTR [rax+0x5]
  405929:	sar    eax,0x4
  40592c:	mov    DWORD PTR [rbp-0xc4],eax
  405932:	mov    rax,QWORD PTR [rbp-0x50]
  405936:	movzx  eax,BYTE PTR [rax+0x4]
  40593a:	and    eax,0xf
  40593d:	mov    DWORD PTR [rbp-0xc8],eax
  405943:	mov    rax,QWORD PTR [rbp-0x50]
  405947:	movzx  eax,BYTE PTR [rax+0x4]
  40594b:	sar    eax,0x4
  40594e:	mov    DWORD PTR [rbp-0xcc],eax
  405954:	mov    rax,QWORD PTR [rbp-0x50]
  405958:	movzx  eax,BYTE PTR [rax+0x3]
  40595c:	and    eax,0xf
  40595f:	mov    DWORD PTR [rbp-0xd0],eax
  405965:	mov    rax,QWORD PTR [rbp-0x50]
  405969:	movzx  eax,BYTE PTR [rax+0x3]
  40596d:	sar    eax,0x4
  405970:	mov    DWORD PTR [rbp-0xd4],eax
  405976:	mov    rax,QWORD PTR [rbp-0x50]
  40597a:	movzx  eax,BYTE PTR [rax+0x2]
  40597e:	and    eax,0xf
  405981:	mov    DWORD PTR [rbp-0xd8],eax
  405987:	mov    rax,QWORD PTR [rbp-0x50]
  40598b:	movzx  eax,BYTE PTR [rax+0x2]
  40598f:	sar    eax,0x4
  405992:	mov    DWORD PTR [rbp-0xdc],eax
  405998:	mov    rax,QWORD PTR [rbp-0x50]
  40599c:	movzx  eax,BYTE PTR [rax+0x1]
  4059a0:	and    eax,0xf
  4059a3:	mov    DWORD PTR [rbp-0xe0],eax
  4059a9:	mov    rax,QWORD PTR [rbp-0x50]
  4059ad:	movzx  eax,BYTE PTR [rax+0x1]
  4059b1:	sar    eax,0x4
  4059b4:	mov    DWORD PTR [rbp-0xe4],eax
  4059ba:	mov    rax,QWORD PTR [rbp-0x50]
  4059be:	movzx  eax,BYTE PTR [rax]
  4059c1:	and    eax,0xf
  4059c4:	mov    DWORD PTR [rbp-0xe8],eax
  4059ca:	mov    rax,QWORD PTR [rbp-0x50]
  4059ce:	movzx  eax,BYTE PTR [rax]
  4059d1:	sar    eax,0x4
  4059d4:	cmp    QWORD PTR [rbp-0x48],0x0
  4059d9:	mov    DWORD PTR [rbp-0xec],esi
  4059df:	mov    DWORD PTR [rbp-0xf0],edi
  4059e5:	mov    DWORD PTR [rbp-0xf4],ecx
  4059eb:	mov    DWORD PTR [rbp-0xf8],edx
  4059f1:	mov    DWORD PTR [rbp-0xfc],r8d
  4059f8:	mov    DWORD PTR [rbp-0x100],r9d
  4059ff:	mov    DWORD PTR [rbp-0x104],r10d
  405a06:	mov    DWORD PTR [rbp-0x108],r11d
  405a0d:	mov    DWORD PTR [rbp-0x10c],ebx
  405a13:	mov    DWORD PTR [rbp-0x110],r14d
  405a1a:	mov    DWORD PTR [rbp-0x114],r15d
  405a21:	mov    DWORD PTR [rbp-0x118],r12d
  405a28:	mov    DWORD PTR [rbp-0x11c],r13d
  405a2f:	mov    DWORD PTR [rbp-0x120],eax
  405a35:	jne    405a4e <rb_strcasecmp@plt+0x34fe>
  405a3b:	lea    rax,[rip+0xac64]        # 4106a6 <rb_strcasecmp@plt+0xe156>
  405a42:	mov    QWORD PTR [rbp-0x128],rax
  405a49:	jmp    405a59 <rb_strcasecmp@plt+0x3509>
  405a4e:	mov    rax,QWORD PTR [rbp-0x48]
  405a52:	mov    QWORD PTR [rbp-0x128],rax
  405a59:	mov    rax,QWORD PTR [rbp-0x128]
  405a60:	mov    rdi,QWORD PTR [rbp-0xa0]
  405a67:	mov    rsi,QWORD PTR [rbp-0x98]
  405a6e:	lea    rdx,[rip+0xabce]        # 410643 <rb_strcasecmp@plt+0xe0f3>
  405a75:	mov    ecx,DWORD PTR [rbp-0xf4]
  405a7b:	mov    r8d,DWORD PTR [rbp-0xf8]
  405a82:	mov    r9d,DWORD PTR [rbp-0xfc]
  405a89:	mov    r10d,DWORD PTR [rbp-0x100]
  405a90:	mov    DWORD PTR [rsp],r10d
  405a94:	mov    r11d,DWORD PTR [rbp-0x104]
  405a9b:	mov    DWORD PTR [rsp+0x8],r11d
  405aa0:	mov    ebx,DWORD PTR [rbp-0x108]
  405aa6:	mov    DWORD PTR [rsp+0x10],ebx
  405aaa:	mov    r14d,DWORD PTR [rbp-0x10c]
  405ab1:	mov    DWORD PTR [rsp+0x18],r14d
  405ab6:	mov    r15d,DWORD PTR [rbp-0x110]
  405abd:	mov    DWORD PTR [rsp+0x20],r15d
  405ac2:	mov    r12d,DWORD PTR [rbp-0x114]
  405ac9:	mov    DWORD PTR [rsp+0x28],r12d
  405ace:	mov    r13d,DWORD PTR [rbp-0x118]
  405ad5:	mov    DWORD PTR [rsp+0x30],r13d
  405ada:	mov    r10d,DWORD PTR [rbp-0x11c]
  405ae1:	mov    DWORD PTR [rsp+0x38],r10d
  405ae6:	mov    r10d,DWORD PTR [rbp-0xa4]
  405aed:	mov    DWORD PTR [rsp+0x40],r10d
  405af2:	mov    r10d,DWORD PTR [rbp-0xec]
  405af9:	mov    DWORD PTR [rsp+0x48],r10d
  405afe:	mov    r10d,DWORD PTR [rbp-0xf0]
  405b05:	mov    DWORD PTR [rsp+0x50],r10d
  405b0a:	mov    r10d,DWORD PTR [rbp-0xa8]
  405b11:	mov    DWORD PTR [rsp+0x58],r10d
  405b16:	mov    r10d,DWORD PTR [rbp-0xac]
  405b1d:	mov    DWORD PTR [rsp+0x60],r10d
  405b22:	mov    r10d,DWORD PTR [rbp-0xb0]
  405b29:	mov    DWORD PTR [rsp+0x68],r10d
  405b2e:	mov    r10d,DWORD PTR [rbp-0xb4]
  405b35:	mov    DWORD PTR [rsp+0x70],r10d
  405b3a:	mov    r10d,DWORD PTR [rbp-0xb8]
  405b41:	mov    DWORD PTR [rsp+0x78],r10d
  405b46:	mov    r10d,DWORD PTR [rbp-0xbc]
  405b4d:	mov    DWORD PTR [rsp+0x80],r10d
  405b55:	mov    r10d,DWORD PTR [rbp-0xc0]
  405b5c:	mov    DWORD PTR [rsp+0x88],r10d
  405b64:	mov    r10d,DWORD PTR [rbp-0xc4]
  405b6b:	mov    DWORD PTR [rsp+0x90],r10d
  405b73:	mov    r10d,DWORD PTR [rbp-0xc8]
  405b7a:	mov    DWORD PTR [rsp+0x98],r10d
  405b82:	mov    r10d,DWORD PTR [rbp-0xcc]
  405b89:	mov    DWORD PTR [rsp+0xa0],r10d
  405b91:	mov    r10d,DWORD PTR [rbp-0xd0]
  405b98:	mov    DWORD PTR [rsp+0xa8],r10d
  405ba0:	mov    r10d,DWORD PTR [rbp-0xd4]
  405ba7:	mov    DWORD PTR [rsp+0xb0],r10d
  405baf:	mov    r10d,DWORD PTR [rbp-0xd8]
  405bb6:	mov    DWORD PTR [rsp+0xb8],r10d
  405bbe:	mov    r10d,DWORD PTR [rbp-0xdc]
  405bc5:	mov    DWORD PTR [rsp+0xc0],r10d
  405bcd:	mov    r10d,DWORD PTR [rbp-0xe0]
  405bd4:	mov    DWORD PTR [rsp+0xc8],r10d
  405bdc:	mov    r10d,DWORD PTR [rbp-0xe4]
  405be3:	mov    DWORD PTR [rsp+0xd0],r10d
  405beb:	mov    r10d,DWORD PTR [rbp-0xe8]
  405bf2:	mov    DWORD PTR [rsp+0xd8],r10d
  405bfa:	mov    r10d,DWORD PTR [rbp-0x120]
  405c01:	mov    DWORD PTR [rsp+0xe0],r10d
  405c09:	mov    QWORD PTR [rsp+0xe8],rax
  405c11:	mov    al,0x0
  405c13:	call   402080 <snprintf@plt>
  405c18:	mov    DWORD PTR [rbp-0x12c],eax
  405c1e:	jmp    405c23 <rb_strcasecmp@plt+0x36d3>
  405c23:	add    rsp,0x1f8
  405c2a:	pop    rbx
  405c2b:	pop    r12
  405c2d:	pop    r13
  405c2f:	pop    r14
  405c31:	pop    r15
  405c33:	pop    rbp
  405c34:	ret    
  405c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c3f:	nop
  405c40:	push   rbp
  405c41:	mov    rbp,rsp
  405c44:	sub    rsp,0x10
  405c48:	mov    QWORD PTR [rbp-0x8],rdi
  405c4c:	mov    QWORD PTR [rbp-0x10],rsi
  405c50:	mov    rdi,QWORD PTR [rbp-0x8]
  405c54:	mov    rsi,QWORD PTR [rbp-0x10]
  405c58:	call   405cc0 <rb_strcasecmp@plt+0x3770>
  405c5d:	cmp    eax,0x0
  405c60:	je     405c6b <rb_strcasecmp@plt+0x371b>
  405c66:	jmp    405c50 <rb_strcasecmp@plt+0x3700>
  405c6b:	xor    eax,eax
  405c6d:	mov    ecx,eax
  405c6f:	mov    rdi,QWORD PTR [rbp-0x8]
  405c73:	mov    esi,0x1
  405c78:	lea    rdx,[rip+0xffffffffffffffc1]        # 405c40 <rb_strcasecmp@plt+0x36f0>
  405c7f:	call   4020b0 <rb_setselect@plt>
  405c84:	add    rsp,0x10
  405c88:	pop    rbp
  405c89:	ret    
  405c8a:	nop    WORD PTR [rax+rax*1+0x0]
  405c90:	push   rbp
  405c91:	mov    rbp,rsp
  405c94:	sub    rsp,0x10
  405c98:	mov    QWORD PTR [rbp-0x8],rdi
  405c9c:	call   4022a0 <rb_current_time@plt>
  405ca1:	mov    rdi,rax
  405ca4:	call   4074b0 <rb_strcasecmp@plt+0x4f60>
  405ca9:	mov    QWORD PTR [rbp-0x10],rax
  405cad:	add    rsp,0x10
  405cb1:	pop    rbp
  405cb2:	ret    
  405cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cbd:	nop    DWORD PTR [rax]
  405cc0:	push   rbp
  405cc1:	mov    rbp,rsp
  405cc4:	sub    rsp,0x510
  405ccb:	mov    QWORD PTR [rbp-0x10],rdi
  405ccf:	mov    QWORD PTR [rbp-0x18],rsi
  405cd3:	mov    QWORD PTR [rbp-0x440],0x0
  405cde:	mov    QWORD PTR [rbp-0x448],0x0
  405ce9:	mov    DWORD PTR [rbp-0x454],0x80
  405cf3:	mov    rdi,QWORD PTR [rbp-0x10]
  405cf7:	call   4020c0 <rb_get_fd@plt>
  405cfc:	mov    ecx,0x40c
  405d01:	mov    edx,ecx
  405d03:	xor    ecx,ecx
  405d05:	lea    rsi,[rbp-0x430]
  405d0c:	lea    rdi,[rbp-0x4d8]
  405d13:	mov    QWORD PTR [rbp-0x4e8],rdi
  405d1a:	mov    edi,eax
  405d1c:	mov    r8,QWORD PTR [rbp-0x4e8]
  405d23:	lea    r9,[rbp-0x454]
  405d2a:	call   4024a0 <recvfrom@plt>
  405d2f:	mov    ecx,eax
  405d31:	mov    DWORD PTR [rbp-0x44c],ecx
  405d37:	cmp    DWORD PTR [rbp-0x44c],0x0
  405d3e:	je     405d51 <rb_strcasecmp@plt+0x3801>
  405d44:	cmp    DWORD PTR [rbp-0x44c],0xffffffff
  405d4b:	jne    405d5d <rb_strcasecmp@plt+0x380d>
  405d51:	mov    DWORD PTR [rbp-0x4],0x0
  405d58:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  405d5d:	cmp    DWORD PTR [rbp-0x44c],0xc
  405d64:	jg     405d76 <rb_strcasecmp@plt+0x3826>
  405d6a:	mov    DWORD PTR [rbp-0x4],0x1
  405d71:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  405d76:	lea    rax,[rbp-0x430]
  405d7d:	mov    QWORD PTR [rbp-0x438],rax
  405d84:	mov    rax,QWORD PTR [rbp-0x438]
  405d8b:	movzx  edi,WORD PTR [rax+0x6]
  405d8f:	call   402270 <ntohs@plt>
  405d94:	mov    rcx,QWORD PTR [rbp-0x438]
  405d9b:	movzx  edi,ax
  405d9e:	mov    edx,edi
  405da0:	mov    edi,DWORD PTR [rcx+0x8]
  405da3:	mov    rsi,QWORD PTR [rcx]
  405da6:	shl    rdx,0x30
  405daa:	mov    r8b,0x30
  405dad:	mov    r9b,r8b
  405db0:	bzhi   rsi,rsi,r9
  405db5:	or     rsi,rdx
  405db8:	mov    DWORD PTR [rcx+0x8],edi
  405dbb:	mov    QWORD PTR [rcx],rsi
  405dbe:	mov    rcx,QWORD PTR [rbp-0x438]
  405dc5:	movzx  edi,WORD PTR [rcx+0x4]
  405dc9:	call   402270 <ntohs@plt>
  405dce:	mov    rcx,QWORD PTR [rbp-0x438]
  405dd5:	movzx  edi,ax
  405dd8:	mov    edx,edi
  405dda:	mov    edi,DWORD PTR [rcx+0x8]
  405ddd:	mov    rsi,QWORD PTR [rcx]
  405de0:	shl    rdx,0x20
  405de4:	movabs r9,0xffff0000ffffffff
  405dee:	and    rsi,r9
  405df1:	or     rsi,rdx
  405df4:	mov    DWORD PTR [rcx+0x8],edi
  405df7:	mov    QWORD PTR [rcx],rsi
  405dfa:	mov    rcx,QWORD PTR [rbp-0x438]
  405e01:	movzx  edi,WORD PTR [rcx+0x8]
  405e05:	call   402270 <ntohs@plt>
  405e0a:	mov    rcx,QWORD PTR [rbp-0x438]
  405e11:	mov    rdx,QWORD PTR [rcx]
  405e14:	mov    edi,DWORD PTR [rcx+0x8]
  405e17:	and    edi,0xffff0000
  405e1d:	movzx  r10d,ax
  405e21:	or     edi,r10d
  405e24:	mov    QWORD PTR [rcx],rdx
  405e27:	mov    DWORD PTR [rcx+0x8],edi
  405e2a:	mov    rcx,QWORD PTR [rbp-0x438]
  405e31:	movzx  edi,WORD PTR [rcx+0xa]
  405e35:	call   402270 <ntohs@plt>
  405e3a:	mov    rcx,QWORD PTR [rbp-0x438]
  405e41:	mov    rdx,QWORD PTR [rcx]
  405e44:	movzx  edi,WORD PTR [rcx+0x8]
  405e48:	mov    r10w,ax
  405e4c:	shl    r10d,0x10
  405e50:	or     edi,r10d
  405e53:	mov    QWORD PTR [rcx],rdx
  405e56:	mov    DWORD PTR [rcx+0x8],edi
  405e59:	mov    rcx,QWORD PTR [rbp-0x438]
  405e60:	movzx  edi,WORD PTR [rcx]
  405e63:	call   406240 <rb_strcasecmp@plt+0x3cf0>
  405e68:	xor    edi,edi
  405e6a:	mov    ecx,edi
  405e6c:	mov    QWORD PTR [rbp-0x440],rax
  405e73:	cmp    rcx,rax
  405e76:	jne    405e88 <rb_strcasecmp@plt+0x3938>
  405e7c:	mov    DWORD PTR [rbp-0x4],0x1
  405e83:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  405e88:	lea    rdi,[rbp-0x4d8]
  405e8f:	call   4062b0 <rb_strcasecmp@plt+0x3d60>
  405e94:	mov    DWORD PTR [rbp-0x4dc],eax
  405e9a:	cmp    DWORD PTR [rbp-0x4dc],0xffffffff
  405ea1:	jne    405eb3 <rb_strcasecmp@plt+0x3963>
  405ea7:	mov    DWORD PTR [rbp-0x4],0x1
  405eae:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  405eb3:	mov    eax,DWORD PTR [rbp-0x4dc]
  405eb9:	mov    rcx,QWORD PTR [rbp-0x440]
  405ec0:	cmp    eax,DWORD PTR [rcx+0x140]
  405ec6:	je     405ee3 <rb_strcasecmp@plt+0x3993>
  405ecc:	movsxd rax,DWORD PTR [rbp-0x4dc]
  405ed3:	lea    rcx,[rip+0x150b6]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  405eda:	mov    edx,DWORD PTR [rcx+rax*4]
  405edd:	add    edx,0x3
  405ee0:	mov    DWORD PTR [rcx+rax*4],edx
  405ee3:	lea    rax,[rbp-0x430]
  405eea:	mov    rdi,QWORD PTR [rbp-0x440]
  405ef1:	mov    rsi,QWORD PTR [rbp-0x438]
  405ef8:	movsxd rcx,DWORD PTR [rbp-0x44c]
  405eff:	mov    rdx,rax
  405f02:	add    rdx,rcx
  405f05:	mov    QWORD PTR [rbp-0x4f0],rdx
  405f0c:	mov    rdx,rax
  405f0f:	mov    rcx,QWORD PTR [rbp-0x4f0]
  405f16:	call   406490 <rb_strcasecmp@plt+0x3f40>
  405f1b:	cmp    eax,0x0
  405f1e:	jne    405f30 <rb_strcasecmp@plt+0x39e0>
  405f24:	mov    DWORD PTR [rbp-0x4],0x1
  405f2b:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  405f30:	mov    rax,QWORD PTR [rbp-0x438]
  405f37:	movzx  ecx,BYTE PTR [rax+0x3]
  405f3b:	and    ecx,0xf
  405f3e:	cmp    ecx,0x0
  405f41:	jne    405f5b <rb_strcasecmp@plt+0x3a0b>
  405f47:	mov    rax,QWORD PTR [rbp-0x438]
  405f4e:	movzx  ecx,WORD PTR [rax+0x6]
  405f52:	cmp    ecx,0x0
  405f55:	jne    40605c <rb_strcasecmp@plt+0x3b0c>
  405f5b:	mov    rax,QWORD PTR [rbp-0x438]
  405f62:	movzx  ecx,BYTE PTR [rax+0x3]
  405f66:	and    ecx,0xf
  405f69:	mov    edx,0x2
  405f6e:	cmp    edx,ecx
  405f70:	je     405fac <rb_strcasecmp@plt+0x3a5c>
  405f76:	mov    rax,QWORD PTR [rbp-0x438]
  405f7d:	movzx  ecx,BYTE PTR [rax+0x3]
  405f81:	and    ecx,0xf
  405f84:	mov    edx,0x4
  405f89:	cmp    edx,ecx
  405f8b:	je     405fac <rb_strcasecmp@plt+0x3a5c>
  405f91:	mov    rax,QWORD PTR [rbp-0x438]
  405f98:	movzx  ecx,BYTE PTR [rax+0x3]
  405f9c:	and    ecx,0xf
  405f9f:	mov    edx,0x5
  405fa4:	cmp    edx,ecx
  405fa6:	jne    405fd4 <rb_strcasecmp@plt+0x3a84>
  405fac:	movsxd rax,DWORD PTR [rbp-0x4dc]
  405fb3:	lea    rcx,[rip+0x14fd6]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  405fba:	mov    edx,DWORD PTR [rcx+rax*4]
  405fbd:	add    edx,0x1
  405fc0:	mov    DWORD PTR [rcx+rax*4],edx
  405fc3:	mov    rdi,QWORD PTR [rbp-0x440]
  405fca:	call   406560 <rb_strcasecmp@plt+0x4010>
  405fcf:	jmp    406050 <rb_strcasecmp@plt+0x3b00>
  405fd4:	mov    rax,QWORD PTR [rbp-0x438]
  405fdb:	movzx  ecx,BYTE PTR [rax+0x3]
  405fdf:	and    ecx,0xf
  405fe2:	mov    edx,0x3
  405fe7:	cmp    edx,ecx
  405fe9:	jne    40601b <rb_strcasecmp@plt+0x3acb>
  405fef:	movsxd rax,DWORD PTR [rbp-0x4dc]
  405ff6:	lea    rcx,[rip+0x14f93]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  405ffd:	mov    edx,DWORD PTR [rcx+rax*4]
  406000:	mov    QWORD PTR [rbp-0x4f8],rax
  406007:	mov    eax,edx
  406009:	cdq    
  40600a:	mov    esi,0x4
  40600f:	idiv   esi
  406011:	mov    rdi,QWORD PTR [rbp-0x4f8]
  406018:	mov    DWORD PTR [rcx+rdi*4],eax
  40601b:	xor    eax,eax
  40601d:	mov    esi,eax
  40601f:	mov    rcx,QWORD PTR [rbp-0x440]
  406026:	mov    rcx,QWORD PTR [rcx+0x1d0]
  40602d:	mov    rcx,QWORD PTR [rcx+0x8]
  406031:	mov    rdx,QWORD PTR [rbp-0x440]
  406038:	mov    rdx,QWORD PTR [rdx+0x1d0]
  40603f:	mov    rdi,QWORD PTR [rdx]
  406042:	call   rcx
  406044:	mov    rdi,QWORD PTR [rbp-0x440]
  40604b:	call   406660 <rb_strcasecmp@plt+0x4110>
  406050:	mov    DWORD PTR [rbp-0x4],0x1
  406057:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  40605c:	lea    rax,[rbp-0x430]
  406063:	mov    rdi,QWORD PTR [rbp-0x440]
  40606a:	mov    rsi,QWORD PTR [rbp-0x438]
  406071:	movsxd rcx,DWORD PTR [rbp-0x44c]
  406078:	mov    rdx,rax
  40607b:	add    rdx,rcx
  40607e:	mov    QWORD PTR [rbp-0x500],rdx
  406085:	mov    rdx,rax
  406088:	mov    rcx,QWORD PTR [rbp-0x500]
  40608f:	call   4066a0 <rb_strcasecmp@plt+0x4150>
  406094:	mov    DWORD PTR [rbp-0x450],eax
  40609a:	cmp    DWORD PTR [rbp-0x450],0x0
  4060a1:	je     406203 <rb_strcasecmp@plt+0x3cb3>
  4060a7:	mov    rax,QWORD PTR [rbp-0x440]
  4060ae:	movsx  ecx,BYTE PTR [rax+0x28]
  4060b2:	cmp    ecx,0xc
  4060b5:	jne    406178 <rb_strcasecmp@plt+0x3c28>
  4060bb:	mov    rax,QWORD PTR [rbp-0x440]
  4060c2:	cmp    QWORD PTR [rax+0x1c8],0x0
  4060ca:	jne    4060ff <rb_strcasecmp@plt+0x3baf>
  4060d0:	movsxd rax,DWORD PTR [rbp-0x4dc]
  4060d7:	lea    rcx,[rip+0x14eb2]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  4060de:	mov    edx,DWORD PTR [rcx+rax*4]
  4060e1:	add    edx,0x1
  4060e4:	mov    DWORD PTR [rcx+rax*4],edx
  4060e7:	mov    rdi,QWORD PTR [rbp-0x440]
  4060ee:	call   406560 <rb_strcasecmp@plt+0x4010>
  4060f3:	mov    DWORD PTR [rbp-0x4],0x1
  4060fa:	jmp    40622d <rb_strcasecmp@plt+0x3cdd>
  4060ff:	mov    rax,QWORD PTR [rbp-0x440]
  406106:	movzx  ecx,WORD PTR [rax+0x148]
  40610d:	cmp    ecx,0xa
  406110:	jne    406141 <rb_strcasecmp@plt+0x3bf1>
  406116:	mov    rax,QWORD PTR [rbp-0x440]
  40611d:	mov    rdi,QWORD PTR [rax+0x1c8]
  406124:	mov    rax,QWORD PTR [rbp-0x440]
  40612b:	mov    rsi,QWORD PTR [rax+0x1d0]
  406132:	mov    edx,0x1c
  406137:	call   405590 <rb_strcasecmp@plt+0x3040>
  40613c:	jmp    406167 <rb_strcasecmp@plt+0x3c17>
  406141:	mov    rax,QWORD PTR [rbp-0x440]
  406148:	mov    rdi,QWORD PTR [rax+0x1c8]
  40614f:	mov    rax,QWORD PTR [rbp-0x440]
  406156:	mov    rsi,QWORD PTR [rax+0x1d0]
  40615d:	mov    edx,0x1
  406162:	call   405590 <rb_strcasecmp@plt+0x3040>
  406167:	mov    rdi,QWORD PTR [rbp-0x440]
  40616e:	call   406660 <rb_strcasecmp@plt+0x4110>
  406173:	jmp    4061d2 <rb_strcasecmp@plt+0x3c82>
  406178:	mov    rdi,QWORD PTR [rbp-0x440]
  40617f:	call   406b60 <rb_strcasecmp@plt+0x4610>
  406184:	mov    QWORD PTR [rbp-0x448],rax
  40618b:	mov    rax,QWORD PTR [rbp-0x440]
  406192:	mov    rax,QWORD PTR [rax+0x1d0]
  406199:	mov    rax,QWORD PTR [rax+0x8]
  40619d:	mov    rdi,QWORD PTR [rbp-0x440]
  4061a4:	mov    rdi,QWORD PTR [rdi+0x1d0]
  4061ab:	mov    rdi,QWORD PTR [rdi]
  4061ae:	mov    rsi,QWORD PTR [rbp-0x448]
  4061b5:	call   rax
  4061b7:	mov    rax,QWORD PTR [rbp-0x448]
  4061be:	mov    rdi,rax
  4061c1:	call   406c40 <rb_strcasecmp@plt+0x46f0>
  4061c6:	mov    rdi,QWORD PTR [rbp-0x440]
  4061cd:	call   406660 <rb_strcasecmp@plt+0x4110>
  4061d2:	movsxd rax,DWORD PTR [rbp-0x4dc]
  4061d9:	lea    rcx,[rip+0x14db0]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  4061e0:	mov    edx,DWORD PTR [rcx+rax*4]
  4061e3:	mov    QWORD PTR [rbp-0x508],rax
  4061ea:	mov    eax,edx
  4061ec:	cdq    
  4061ed:	mov    esi,0x4
  4061f2:	idiv   esi
  4061f4:	mov    rdi,QWORD PTR [rbp-0x508]
  4061fb:	mov    DWORD PTR [rcx+rdi*4],eax
  4061fe:	jmp    406226 <rb_strcasecmp@plt+0x3cd6>
  406203:	movsxd rax,DWORD PTR [rbp-0x4dc]
  40620a:	lea    rcx,[rip+0x14d7f]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  406211:	mov    edx,DWORD PTR [rcx+rax*4]
  406214:	add    edx,0x1
  406217:	mov    DWORD PTR [rcx+rax*4],edx
  40621a:	mov    rdi,QWORD PTR [rbp-0x440]
  406221:	call   406560 <rb_strcasecmp@plt+0x4010>
  406226:	mov    DWORD PTR [rbp-0x4],0x1
  40622d:	mov    eax,DWORD PTR [rbp-0x4]
  406230:	add    rsp,0x510
  406237:	pop    rbp
  406238:	ret    
  406239:	nop    DWORD PTR [rax+0x0]
  406240:	push   rbp
  406241:	mov    rbp,rsp
  406244:	mov    DWORD PTR [rbp-0xc],edi
  406247:	mov    rax,QWORD PTR [rip+0x14d6a]        # 41afb8 <rb_strcasecmp@plt+0x18a68>
  40624e:	mov    QWORD PTR [rbp-0x18],rax
  406252:	cmp    QWORD PTR [rbp-0x18],0x0
  406257:	je     40629b <rb_strcasecmp@plt+0x3d4b>
  40625d:	mov    rax,QWORD PTR [rbp-0x18]
  406261:	mov    rax,QWORD PTR [rax]
  406264:	mov    QWORD PTR [rbp-0x20],rax
  406268:	mov    rax,QWORD PTR [rbp-0x20]
  40626c:	mov    ecx,DWORD PTR [rax+0x18]
  40626f:	cmp    ecx,DWORD PTR [rbp-0xc]
  406272:	jne    406285 <rb_strcasecmp@plt+0x3d35>
  406278:	mov    rax,QWORD PTR [rbp-0x20]
  40627c:	mov    QWORD PTR [rbp-0x8],rax
  406280:	jmp    4062a3 <rb_strcasecmp@plt+0x3d53>
  406285:	jmp    40628a <rb_strcasecmp@plt+0x3d3a>
  40628a:	mov    rax,QWORD PTR [rbp-0x18]
  40628e:	mov    rax,QWORD PTR [rax+0x10]
  406292:	mov    QWORD PTR [rbp-0x18],rax
  406296:	jmp    406252 <rb_strcasecmp@plt+0x3d02>
  40629b:	mov    QWORD PTR [rbp-0x8],0x0
  4062a3:	mov    rax,QWORD PTR [rbp-0x8]
  4062a7:	pop    rbp
  4062a8:	ret    
  4062a9:	nop    DWORD PTR [rax+0x0]
  4062b0:	push   rbp
  4062b1:	mov    rbp,rsp
  4062b4:	mov    QWORD PTR [rbp-0x10],rdi
  4062b8:	mov    rdi,QWORD PTR [rbp-0x10]
  4062bc:	mov    QWORD PTR [rbp-0x20],rdi
  4062c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4062c4:	mov    QWORD PTR [rbp-0x30],rdi
  4062c8:	mov    DWORD PTR [rbp-0x34],0x0
  4062cf:	lea    rax,[rip+0x14cfe]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  4062d6:	mov    ecx,DWORD PTR [rbp-0x34]
  4062d9:	cmp    ecx,DWORD PTR [rax]
  4062db:	jge    406477 <rb_strcasecmp@plt+0x3f27>
  4062e1:	movsxd rax,DWORD PTR [rbp-0x34]
  4062e5:	shl    rax,0x7
  4062e9:	lea    rcx,[rip+0x14fe0]        # 41b2d0 <rb_strcasecmp@plt+0x18d80>
  4062f0:	add    rcx,rax
  4062f3:	mov    QWORD PTR [rbp-0x40],rcx
  4062f7:	mov    rax,QWORD PTR [rbp-0x40]
  4062fb:	mov    QWORD PTR [rbp-0x18],rax
  4062ff:	mov    rax,QWORD PTR [rbp-0x40]
  406303:	mov    QWORD PTR [rbp-0x28],rax
  406307:	mov    rax,QWORD PTR [rbp-0x40]
  40630b:	movzx  edx,WORD PTR [rax]
  40630e:	mov    esi,edx
  406310:	sub    esi,0x2
  406313:	mov    DWORD PTR [rbp-0x44],edx
  406316:	mov    DWORD PTR [rbp-0x48],esi
  406319:	je     4063f4 <rb_strcasecmp@plt+0x3ea4>
  40631f:	jmp    406324 <rb_strcasecmp@plt+0x3dd4>
  406324:	mov    eax,DWORD PTR [rbp-0x44]
  406327:	sub    eax,0xa
  40632a:	mov    DWORD PTR [rbp-0x4c],eax
  40632d:	jne    40645f <rb_strcasecmp@plt+0x3f0f>
  406333:	jmp    406338 <rb_strcasecmp@plt+0x3de8>
  406338:	mov    rax,QWORD PTR [rbp-0x40]
  40633c:	movzx  ecx,WORD PTR [rax]
  40633f:	mov    rax,QWORD PTR [rbp-0x10]
  406343:	movzx  edx,WORD PTR [rax]
  406346:	cmp    ecx,edx
  406348:	jne    4063ef <rb_strcasecmp@plt+0x3e9f>
  40634e:	mov    rax,QWORD PTR [rbp-0x18]
  406352:	movzx  ecx,WORD PTR [rax+0x2]
  406356:	mov    rax,QWORD PTR [rbp-0x20]
  40635a:	movzx  edx,WORD PTR [rax+0x2]
  40635e:	cmp    ecx,edx
  406360:	jne    4063ea <rb_strcasecmp@plt+0x3e9a>
  406366:	mov    rax,QWORD PTR [rbp-0x18]
  40636a:	add    rax,0x8
  40636e:	mov    rcx,QWORD PTR [rbp-0x20]
  406372:	add    rcx,0x8
  406376:	vmovdqu xmm0,XMMWORD PTR [rcx]
  40637a:	vmovdqu xmm1,XMMWORD PTR [rax]
  40637e:	vpcmpeqb xmm0,xmm1,xmm0
  406382:	vpmovmskb edx,xmm0
  406386:	sub    edx,0xffff
  40638c:	setne  sil
  406390:	movzx  edi,sil
  406394:	cmp    edi,0x0
  406397:	mov    DWORD PTR [rbp-0x50],edx
  40639a:	je     4063d9 <rb_strcasecmp@plt+0x3e89>
  4063a0:	mov    rax,QWORD PTR [rbp-0x18]
  4063a4:	add    rax,0x8
  4063a8:	mov    rcx,QWORD PTR [rip+0xec41]        # 414ff0 <rb_strcasecmp@plt+0x12aa0>
  4063af:	vmovdqu xmm0,XMMWORD PTR [rcx]
  4063b3:	vmovdqu xmm1,XMMWORD PTR [rax]
  4063b7:	vpcmpeqb xmm0,xmm1,xmm0
  4063bb:	vpmovmskb edx,xmm0
  4063bf:	sub    edx,0xffff
  4063c5:	setne  sil
  4063c9:	movzx  edi,sil
  4063cd:	cmp    edi,0x0
  4063d0:	mov    DWORD PTR [rbp-0x54],edx
  4063d3:	jne    4063e5 <rb_strcasecmp@plt+0x3e95>
  4063d9:	mov    DWORD PTR [rbp-0x4],0x1
  4063e0:	jmp    40647e <rb_strcasecmp@plt+0x3f2e>
  4063e5:	jmp    4063ea <rb_strcasecmp@plt+0x3e9a>
  4063ea:	jmp    4063ef <rb_strcasecmp@plt+0x3e9f>
  4063ef:	jmp    406464 <rb_strcasecmp@plt+0x3f14>
  4063f4:	mov    rax,QWORD PTR [rbp-0x40]
  4063f8:	movzx  ecx,WORD PTR [rax]
  4063fb:	mov    rax,QWORD PTR [rbp-0x10]
  4063ff:	movzx  edx,WORD PTR [rax]
  406402:	cmp    ecx,edx
  406404:	jne    40645a <rb_strcasecmp@plt+0x3f0a>
  40640a:	mov    rax,QWORD PTR [rbp-0x28]
  40640e:	movzx  ecx,WORD PTR [rax+0x2]
  406412:	mov    rax,QWORD PTR [rbp-0x30]
  406416:	movzx  edx,WORD PTR [rax+0x2]
  40641a:	cmp    ecx,edx
  40641c:	jne    406455 <rb_strcasecmp@plt+0x3f05>
  406422:	mov    rax,QWORD PTR [rbp-0x28]
  406426:	cmp    DWORD PTR [rax+0x4],0x0
  40642a:	je     406444 <rb_strcasecmp@plt+0x3ef4>
  406430:	mov    rax,QWORD PTR [rbp-0x28]
  406434:	mov    ecx,DWORD PTR [rax+0x4]
  406437:	mov    rax,QWORD PTR [rbp-0x30]
  40643b:	cmp    ecx,DWORD PTR [rax+0x4]
  40643e:	jne    406450 <rb_strcasecmp@plt+0x3f00>
  406444:	mov    DWORD PTR [rbp-0x4],0x1
  40644b:	jmp    40647e <rb_strcasecmp@plt+0x3f2e>
  406450:	jmp    406455 <rb_strcasecmp@plt+0x3f05>
  406455:	jmp    40645a <rb_strcasecmp@plt+0x3f0a>
  40645a:	jmp    406464 <rb_strcasecmp@plt+0x3f14>
  40645f:	jmp    406464 <rb_strcasecmp@plt+0x3f14>
  406464:	jmp    406469 <rb_strcasecmp@plt+0x3f19>
  406469:	mov    eax,DWORD PTR [rbp-0x34]
  40646c:	add    eax,0x1
  40646f:	mov    DWORD PTR [rbp-0x34],eax
  406472:	jmp    4062cf <rb_strcasecmp@plt+0x3d7f>
  406477:	mov    DWORD PTR [rbp-0x4],0x0
  40647e:	mov    eax,DWORD PTR [rbp-0x4]
  406481:	pop    rbp
  406482:	ret    
  406483:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40648d:	nop    DWORD PTR [rax]
  406490:	push   rbp
  406491:	mov    rbp,rsp
  406494:	sub    rsp,0x140
  40649b:	mov    QWORD PTR [rbp-0x10],rdi
  40649f:	mov    QWORD PTR [rbp-0x18],rsi
  4064a3:	mov    QWORD PTR [rbp-0x20],rdx
  4064a7:	mov    QWORD PTR [rbp-0x28],rcx
  4064ab:	mov    rcx,QWORD PTR [rbp-0x20]
  4064af:	add    rcx,0xc
  4064b3:	mov    QWORD PTR [rbp-0x138],rcx
  4064ba:	mov    rcx,QWORD PTR [rbp-0x18]
  4064be:	movzx  eax,WORD PTR [rcx+0x4]
  4064c2:	cmp    eax,0x1
  4064c5:	je     4064d7 <rb_strcasecmp@plt+0x3f87>
  4064cb:	mov    DWORD PTR [rbp-0x4],0x0
  4064d2:	jmp    40654a <rb_strcasecmp@plt+0x3ffa>
  4064d7:	lea    rcx,[rbp-0x130]
  4064de:	mov    rdi,QWORD PTR [rbp-0x20]
  4064e2:	mov    rsi,QWORD PTR [rbp-0x28]
  4064e6:	mov    rdx,QWORD PTR [rbp-0x138]
  4064ed:	mov    r8d,0x100
  4064f3:	call   407a20 <rb_strcasecmp@plt+0x54d0>
  4064f8:	mov    DWORD PTR [rbp-0x13c],eax
  4064fe:	cmp    DWORD PTR [rbp-0x13c],0x0
  406505:	jg     406517 <rb_strcasecmp@plt+0x3fc7>
  40650b:	mov    DWORD PTR [rbp-0x4],0x0
  406512:	jmp    40654a <rb_strcasecmp@plt+0x3ffa>
  406517:	lea    rdi,[rbp-0x130]
  40651e:	mov    rax,QWORD PTR [rbp-0x10]
  406522:	add    rax,0x29
  406526:	mov    rsi,rax
  406529:	call   402550 <rb_strcasecmp@plt>
  40652e:	cmp    eax,0x0
  406531:	je     406543 <rb_strcasecmp@plt+0x3ff3>
  406537:	mov    DWORD PTR [rbp-0x4],0x0
  40653e:	jmp    40654a <rb_strcasecmp@plt+0x3ffa>
  406543:	mov    DWORD PTR [rbp-0x4],0x1
  40654a:	mov    eax,DWORD PTR [rbp-0x4]
  40654d:	add    rsp,0x140
  406554:	pop    rbp
  406555:	ret    
  406556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406560:	push   rbp
  406561:	mov    rbp,rsp
  406564:	sub    rsp,0x20
  406568:	mov    QWORD PTR [rbp-0x8],rdi
  40656c:	mov    rdi,QWORD PTR [rbp-0x8]
  406570:	mov    al,BYTE PTR [rdi+0x129]
  406576:	add    al,0xff
  406578:	mov    BYTE PTR [rdi+0x129],al
  40657e:	movsx  ecx,al
  406581:	cmp    ecx,0x0
  406584:	jg     4065bb <rb_strcasecmp@plt+0x406b>
  40658a:	xor    eax,eax
  40658c:	mov    esi,eax
  40658e:	mov    rcx,QWORD PTR [rbp-0x8]
  406592:	mov    rcx,QWORD PTR [rcx+0x1d0]
  406599:	mov    rcx,QWORD PTR [rcx+0x8]
  40659d:	mov    rdx,QWORD PTR [rbp-0x8]
  4065a1:	mov    rdx,QWORD PTR [rdx+0x1d0]
  4065a8:	mov    rdi,QWORD PTR [rdx]
  4065ab:	call   rcx
  4065ad:	mov    rdi,QWORD PTR [rbp-0x8]
  4065b1:	call   406660 <rb_strcasecmp@plt+0x4110>
  4065b6:	jmp    40664b <rb_strcasecmp@plt+0x40fb>
  4065bb:	mov    rax,QWORD PTR [rbp-0x8]
  4065bf:	movsx  ecx,BYTE PTR [rax+0x28]
  4065c3:	mov    edx,ecx
  4065c5:	sub    edx,0x1
  4065c8:	mov    DWORD PTR [rbp-0xc],ecx
  4065cb:	mov    DWORD PTR [rbp-0x10],edx
  4065ce:	je     406621 <rb_strcasecmp@plt+0x40d1>
  4065d4:	jmp    4065d9 <rb_strcasecmp@plt+0x4089>
  4065d9:	mov    eax,DWORD PTR [rbp-0xc]
  4065dc:	sub    eax,0xc
  4065df:	mov    DWORD PTR [rbp-0x14],eax
  4065e2:	je     406601 <rb_strcasecmp@plt+0x40b1>
  4065e8:	jmp    4065ed <rb_strcasecmp@plt+0x409d>
  4065ed:	mov    eax,DWORD PTR [rbp-0xc]
  4065f0:	sub    eax,0x1c
  4065f3:	mov    DWORD PTR [rbp-0x18],eax
  4065f6:	je     406621 <rb_strcasecmp@plt+0x40d1>
  4065fc:	jmp    406646 <rb_strcasecmp@plt+0x40f6>
  406601:	xor    eax,eax
  406603:	mov    edi,eax
  406605:	mov    rcx,QWORD PTR [rbp-0x8]
  406609:	add    rcx,0x148
  406610:	mov    rdx,QWORD PTR [rbp-0x8]
  406614:	mov    rsi,rcx
  406617:	call   405620 <rb_strcasecmp@plt+0x30d0>
  40661c:	jmp    40664b <rb_strcasecmp@plt+0x40fb>
  406621:	xor    eax,eax
  406623:	mov    edi,eax
  406625:	mov    rcx,QWORD PTR [rbp-0x8]
  406629:	mov    rsi,QWORD PTR [rcx+0x1c8]
  406630:	mov    rdx,QWORD PTR [rbp-0x8]
  406634:	mov    rcx,QWORD PTR [rbp-0x8]
  406638:	movsx  ecx,BYTE PTR [rcx+0x28]
  40663c:	call   406c80 <rb_strcasecmp@plt+0x4730>
  406641:	jmp    40664b <rb_strcasecmp@plt+0x40fb>
  406646:	jmp    40664b <rb_strcasecmp@plt+0x40fb>
  40664b:	add    rsp,0x20
  40664f:	pop    rbp
  406650:	ret    
  406651:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40665b:	nop    DWORD PTR [rax+rax*1+0x0]
  406660:	push   rbp
  406661:	mov    rbp,rsp
  406664:	sub    rsp,0x10
  406668:	mov    QWORD PTR [rbp-0x8],rdi
  40666c:	mov    rdi,QWORD PTR [rbp-0x8]
  406670:	lea    rsi,[rip+0x14941]        # 41afb8 <rb_strcasecmp@plt+0x18a68>
  406677:	call   4073a0 <rb_strcasecmp@plt+0x4e50>
  40667c:	mov    rsi,QWORD PTR [rbp-0x8]
  406680:	mov    rdi,QWORD PTR [rsi+0x1c8]
  406687:	call   406c40 <rb_strcasecmp@plt+0x46f0>
  40668c:	mov    rsi,QWORD PTR [rbp-0x8]
  406690:	mov    rdi,rsi
  406693:	call   406c40 <rb_strcasecmp@plt+0x46f0>
  406698:	add    rsp,0x10
  40669c:	pop    rbp
  40669d:	ret    
  40669e:	xchg   ax,ax
  4066a0:	push   rbp
  4066a1:	mov    rbp,rsp
  4066a4:	sub    rsp,0x1e0
  4066ab:	mov    QWORD PTR [rbp-0x10],rdi
  4066af:	mov    QWORD PTR [rbp-0x18],rsi
  4066b3:	mov    QWORD PTR [rbp-0x20],rdx
  4066b7:	mov    QWORD PTR [rbp-0x28],rcx
  4066bb:	mov    rcx,QWORD PTR [rbp-0x20]
  4066bf:	add    rcx,0xc
  4066c3:	mov    QWORD PTR [rbp-0x198],rcx
  4066ca:	mov    rax,QWORD PTR [rbp-0x18]
  4066ce:	movzx  ecx,WORD PTR [rax+0x4]
  4066d2:	cmp    ecx,0x0
  4066d5:	jle    40675e <rb_strcasecmp@plt+0x420e>
  4066db:	mov    rdi,QWORD PTR [rbp-0x198]
  4066e2:	mov    rsi,QWORD PTR [rbp-0x28]
  4066e6:	call   407b30 <rb_strcasecmp@plt+0x55e0>
  4066eb:	mov    DWORD PTR [rbp-0x1a0],eax
  4066f1:	cmp    eax,0x0
  4066f4:	jge    406706 <rb_strcasecmp@plt+0x41b6>
  4066fa:	mov    DWORD PTR [rbp-0x4],0x0
  406701:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406706:	movsxd rax,DWORD PTR [rbp-0x1a0]
  40670d:	add    rax,0x4
  406711:	add    rax,QWORD PTR [rbp-0x198]
  406718:	mov    QWORD PTR [rbp-0x198],rax
  40671f:	mov    rax,QWORD PTR [rbp-0x18]
  406723:	mov    ecx,DWORD PTR [rax+0x8]
  406726:	mov    rdx,QWORD PTR [rax]
  406729:	mov    rsi,rdx
  40672c:	shr    rsi,0x20
  406730:	mov    edi,esi
  406732:	add    edi,0xffffffff
  406735:	mov    r8w,di
  406739:	movzx  edi,r8w
  40673d:	mov    esi,edi
  40673f:	shl    rsi,0x20
  406743:	movabs r9,0xffff0000ffffffff
  40674d:	and    rdx,r9
  406750:	or     rdx,rsi
  406753:	mov    DWORD PTR [rax+0x8],ecx
  406756:	mov    QWORD PTR [rax],rdx
  406759:	jmp    4066ca <rb_strcasecmp@plt+0x417a>
  40675e:	jmp    406763 <rb_strcasecmp@plt+0x4213>
  406763:	xor    eax,eax
  406765:	mov    cl,al
  406767:	mov    rdx,QWORD PTR [rbp-0x18]
  40676b:	movzx  eax,WORD PTR [rdx+0x6]
  40676f:	cmp    eax,0x0
  406772:	mov    BYTE PTR [rbp-0x1b9],cl
  406778:	jle    406792 <rb_strcasecmp@plt+0x4242>
  40677e:	mov    rax,QWORD PTR [rbp-0x198]
  406785:	cmp    rax,QWORD PTR [rbp-0x28]
  406789:	setb   cl
  40678c:	mov    BYTE PTR [rbp-0x1b9],cl
  406792:	mov    al,BYTE PTR [rbp-0x1b9]
  406798:	test   al,0x1
  40679a:	jne    4067a5 <rb_strcasecmp@plt+0x4255>
  4067a0:	jmp    406b41 <rb_strcasecmp@plt+0x45f1>
  4067a5:	lea    rcx,[rbp-0x190]
  4067ac:	mov    rax,QWORD PTR [rbp-0x18]
  4067b0:	mov    edx,DWORD PTR [rax+0x8]
  4067b3:	mov    rsi,QWORD PTR [rax]
  4067b6:	mov    rdi,rsi
  4067b9:	shr    rdi,0x30
  4067bd:	mov    r8d,edi
  4067c0:	add    r8d,0xffffffff
  4067c4:	mov    edi,r8d
  4067c7:	shl    rdi,0x30
  4067cb:	mov    r9b,0x30
  4067ce:	mov    r10b,r9b
  4067d1:	bzhi   rsi,rsi,r10
  4067d6:	or     rsi,rdi
  4067d9:	mov    DWORD PTR [rax+0x8],edx
  4067dc:	mov    QWORD PTR [rax],rsi
  4067df:	mov    rdi,QWORD PTR [rbp-0x20]
  4067e3:	mov    rsi,QWORD PTR [rbp-0x28]
  4067e7:	mov    rdx,QWORD PTR [rbp-0x198]
  4067ee:	mov    r8d,0x163
  4067f4:	call   407a20 <rb_strcasecmp@plt+0x54d0>
  4067f9:	mov    DWORD PTR [rbp-0x1a0],eax
  4067ff:	cmp    DWORD PTR [rbp-0x1a0],0x0
  406806:	jge    406818 <rb_strcasecmp@plt+0x42c8>
  40680c:	mov    DWORD PTR [rbp-0x4],0x0
  406813:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406818:	cmp    DWORD PTR [rbp-0x1a0],0x0
  40681f:	jne    406831 <rb_strcasecmp@plt+0x42e1>
  406825:	mov    DWORD PTR [rbp-0x4],0x0
  40682c:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406831:	jmp    406836 <rb_strcasecmp@plt+0x42e6>
  406836:	mov    BYTE PTR [rbp-0x91],0x0
  40683d:	movsxd rax,DWORD PTR [rbp-0x1a0]
  406844:	add    rax,QWORD PTR [rbp-0x198]
  40684b:	mov    QWORD PTR [rbp-0x198],rax
  406852:	mov    rax,QWORD PTR [rbp-0x198]
  406859:	add    rax,0xa
  40685d:	cmp    rax,QWORD PTR [rbp-0x28]
  406861:	jb     40686c <rb_strcasecmp@plt+0x431c>
  406867:	jmp    406b41 <rb_strcasecmp@plt+0x45f1>
  40686c:	mov    rdi,QWORD PTR [rbp-0x198]
  406873:	call   407d00 <rb_strcasecmp@plt+0x57b0>
  406878:	mov    DWORD PTR [rbp-0x19c],eax
  40687e:	mov    rdi,QWORD PTR [rbp-0x198]
  406885:	add    rdi,0x2
  406889:	mov    QWORD PTR [rbp-0x198],rdi
  406890:	mov    rdi,QWORD PTR [rbp-0x198]
  406897:	call   407d00 <rb_strcasecmp@plt+0x57b0>
  40689c:	mov    rdi,QWORD PTR [rbp-0x198]
  4068a3:	add    rdi,0x2
  4068a7:	mov    QWORD PTR [rbp-0x198],rdi
  4068ae:	mov    rdi,QWORD PTR [rbp-0x198]
  4068b5:	mov    DWORD PTR [rbp-0x1c0],eax
  4068bb:	call   407d50 <rb_strcasecmp@plt+0x5800>
  4068c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4068c4:	mov    QWORD PTR [rdi+0x20],rax
  4068c8:	mov    rax,QWORD PTR [rbp-0x198]
  4068cf:	add    rax,0x4
  4068d3:	mov    QWORD PTR [rbp-0x198],rax
  4068da:	mov    rdi,QWORD PTR [rbp-0x198]
  4068e1:	call   407d00 <rb_strcasecmp@plt+0x57b0>
  4068e6:	mov    DWORD PTR [rbp-0x1a4],eax
  4068ec:	mov    rdi,QWORD PTR [rbp-0x198]
  4068f3:	add    rdi,0x2
  4068f7:	mov    QWORD PTR [rbp-0x198],rdi
  4068fe:	mov    eax,DWORD PTR [rbp-0x19c]
  406904:	mov    ecx,eax
  406906:	sub    ecx,0x1
  406909:	mov    DWORD PTR [rbp-0x1c4],eax
  40690f:	mov    DWORD PTR [rbp-0x1c8],ecx
  406915:	je     406954 <rb_strcasecmp@plt+0x4404>
  40691b:	jmp    406920 <rb_strcasecmp@plt+0x43d0>
  406920:	mov    eax,DWORD PTR [rbp-0x1c4]
  406926:	sub    eax,0xc
  406929:	mov    DWORD PTR [rbp-0x1cc],eax
  40692f:	je     406a76 <rb_strcasecmp@plt+0x4526>
  406935:	jmp    40693a <rb_strcasecmp@plt+0x43ea>
  40693a:	mov    eax,DWORD PTR [rbp-0x1c4]
  406940:	sub    eax,0x1c
  406943:	mov    DWORD PTR [rbp-0x1d0],eax
  406949:	je     4069e0 <rb_strcasecmp@plt+0x4490>
  40694f:	jmp    406b22 <rb_strcasecmp@plt+0x45d2>
  406954:	mov    rax,QWORD PTR [rbp-0x10]
  406958:	movsx  ecx,BYTE PTR [rax+0x28]
  40695c:	cmp    ecx,0x1
  40695f:	je     406971 <rb_strcasecmp@plt+0x4421>
  406965:	mov    DWORD PTR [rbp-0x4],0x0
  40696c:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406971:	movsxd rax,DWORD PTR [rbp-0x1a4]
  406978:	cmp    rax,0x4
  40697c:	je     40698e <rb_strcasecmp@plt+0x443e>
  406982:	mov    DWORD PTR [rbp-0x4],0x0
  406989:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  40698e:	mov    rax,QWORD PTR [rbp-0x10]
  406992:	add    rax,0x148
  406998:	mov    QWORD PTR [rbp-0x1b0],rax
  40699f:	mov    rax,QWORD PTR [rbp-0x10]
  4069a3:	mov    cx,WORD PTR [rax+0x148]
  4069aa:	mov    rax,QWORD PTR [rbp-0x10]
  4069ae:	mov    WORD PTR [rax+0x148],cx
  4069b5:	mov    rax,QWORD PTR [rbp-0x1b0]
  4069bc:	mov    WORD PTR [rax],0x2
  4069c1:	mov    rax,QWORD PTR [rbp-0x1b0]
  4069c8:	mov    rdx,QWORD PTR [rbp-0x198]
  4069cf:	mov    esi,DWORD PTR [rdx]
  4069d1:	mov    DWORD PTR [rax+0x4],esi
  4069d4:	mov    DWORD PTR [rbp-0x4],0x1
  4069db:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  4069e0:	mov    rax,QWORD PTR [rbp-0x10]
  4069e4:	movsx  ecx,BYTE PTR [rax+0x28]
  4069e8:	cmp    ecx,0x1c
  4069eb:	je     4069fd <rb_strcasecmp@plt+0x44ad>
  4069f1:	mov    DWORD PTR [rbp-0x4],0x0
  4069f8:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  4069fd:	movsxd rax,DWORD PTR [rbp-0x1a4]
  406a04:	cmp    rax,0x10
  406a08:	je     406a1a <rb_strcasecmp@plt+0x44ca>
  406a0e:	mov    DWORD PTR [rbp-0x4],0x0
  406a15:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406a1a:	mov    rax,QWORD PTR [rbp-0x10]
  406a1e:	mov    cx,WORD PTR [rax+0x148]
  406a25:	mov    rax,QWORD PTR [rbp-0x10]
  406a29:	mov    WORD PTR [rax+0x148],cx
  406a30:	mov    rax,QWORD PTR [rbp-0x10]
  406a34:	add    rax,0x148
  406a3a:	mov    QWORD PTR [rbp-0x1b8],rax
  406a41:	mov    rax,QWORD PTR [rbp-0x1b8]
  406a48:	mov    WORD PTR [rax],0xa
  406a4d:	mov    rax,QWORD PTR [rbp-0x1b8]
  406a54:	mov    rdx,QWORD PTR [rbp-0x198]
  406a5b:	mov    rsi,QWORD PTR [rdx]
  406a5e:	mov    QWORD PTR [rax+0x8],rsi
  406a62:	mov    rdx,QWORD PTR [rdx+0x8]
  406a66:	mov    QWORD PTR [rax+0x10],rdx
  406a6a:	mov    DWORD PTR [rbp-0x4],0x1
  406a71:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406a76:	mov    rax,QWORD PTR [rbp-0x10]
  406a7a:	movsx  ecx,BYTE PTR [rax+0x28]
  406a7e:	cmp    ecx,0xc
  406a81:	je     406a93 <rb_strcasecmp@plt+0x4543>
  406a87:	mov    DWORD PTR [rbp-0x4],0x0
  406a8e:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406a93:	lea    rcx,[rbp-0x190]
  406a9a:	mov    rdi,QWORD PTR [rbp-0x20]
  406a9e:	mov    rsi,QWORD PTR [rbp-0x28]
  406aa2:	mov    rdx,QWORD PTR [rbp-0x198]
  406aa9:	mov    r8d,0x163
  406aaf:	call   407a20 <rb_strcasecmp@plt+0x54d0>
  406ab4:	mov    DWORD PTR [rbp-0x1a0],eax
  406aba:	cmp    DWORD PTR [rbp-0x1a0],0x0
  406ac1:	jge    406ad3 <rb_strcasecmp@plt+0x4583>
  406ac7:	mov    DWORD PTR [rbp-0x4],0x0
  406ace:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406ad3:	cmp    DWORD PTR [rbp-0x1a0],0x0
  406ada:	jne    406aec <rb_strcasecmp@plt+0x459c>
  406ae0:	mov    DWORD PTR [rbp-0x4],0x0
  406ae7:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406aec:	jmp    406af1 <rb_strcasecmp@plt+0x45a1>
  406af1:	mov    eax,0x100
  406af6:	mov    edx,eax
  406af8:	lea    rsi,[rbp-0x190]
  406aff:	mov    rcx,QWORD PTR [rbp-0x10]
  406b03:	mov    rdi,QWORD PTR [rcx+0x1c8]
  406b0a:	call   4021d0 <rb_strlcpy@plt>
  406b0f:	mov    DWORD PTR [rbp-0x4],0x1
  406b16:	mov    QWORD PTR [rbp-0x1d8],rax
  406b1d:	jmp    406b48 <rb_strcasecmp@plt+0x45f8>
  406b22:	mov    eax,DWORD PTR [rbp-0x1a4]
  406b28:	mov    rcx,QWORD PTR [rbp-0x198]
  406b2f:	movsxd rdx,eax
  406b32:	add    rcx,rdx
  406b35:	mov    QWORD PTR [rbp-0x198],rcx
  406b3c:	jmp    406763 <rb_strcasecmp@plt+0x4213>
  406b41:	mov    DWORD PTR [rbp-0x4],0x1
  406b48:	mov    eax,DWORD PTR [rbp-0x4]
  406b4b:	add    rsp,0x1e0
  406b52:	pop    rbp
  406b53:	ret    
  406b54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b5e:	xchg   ax,ax
  406b60:	push   rbp
  406b61:	mov    rbp,rsp
  406b64:	sub    rsp,0x20
  406b68:	mov    QWORD PTR [rbp-0x8],rdi
  406b6c:	cmp    QWORD PTR [rbp-0x8],0x0
  406b71:	setne  al
  406b74:	xor    al,0xff
  406b76:	xor    al,0xff
  406b78:	and    al,0x1
  406b7a:	movzx  ecx,al
  406b7d:	movsxd rdi,ecx
  406b80:	cmp    rdi,0x0
  406b84:	jne    406bc3 <rb_strcasecmp@plt+0x4673>
  406b8a:	lea    rdi,[rip+0x9b43]        # 4106d4 <rb_strcasecmp@plt+0xe184>
  406b91:	lea    rsi,[rip+0x9a4a]        # 4105e2 <rb_strcasecmp@plt+0xe092>
  406b98:	mov    edx,0x36e
  406b9d:	lea    rcx,[rip+0x9b5f]        # 410703 <rb_strcasecmp@plt+0xe1b3>
  406ba4:	lea    r8,[rip+0x9b89]        # 410734 <rb_strcasecmp@plt+0xe1e4>
  406bab:	mov    al,0x0
  406bad:	call   402350 <rb_lib_log@plt>
  406bb2:	xor    edx,edx
  406bb4:	mov    al,dl
  406bb6:	test   al,0x1
  406bb8:	jne    406bc3 <rb_strcasecmp@plt+0x4673>
  406bbe:	jmp    406bc8 <rb_strcasecmp@plt+0x4678>
  406bc3:	jmp    406be7 <rb_strcasecmp@plt+0x4697>
  406bc8:	lea    rdi,[rip+0x9b72]        # 410741 <rb_strcasecmp@plt+0xe1f1>
  406bcf:	lea    rsi,[rip+0x9a0c]        # 4105e2 <rb_strcasecmp@plt+0xe092>
  406bd6:	mov    edx,0x36e
  406bdb:	lea    rcx,[rip+0x9b21]        # 410703 <rb_strcasecmp@plt+0xe1b3>
  406be2:	call   4020f0 <__assert_fail@plt>
  406be7:	mov    eax,0x88
  406bec:	mov    edi,eax
  406bee:	call   406f10 <rb_strcasecmp@plt+0x49c0>
  406bf3:	mov    ecx,0x80
  406bf8:	mov    edx,ecx
  406bfa:	mov    QWORD PTR [rbp-0x10],rax
  406bfe:	mov    rax,QWORD PTR [rbp-0x8]
  406c02:	mov    rax,QWORD PTR [rax+0x1c8]
  406c09:	mov    rdi,QWORD PTR [rbp-0x10]
  406c0d:	mov    QWORD PTR [rdi],rax
  406c10:	mov    rax,QWORD PTR [rbp-0x10]
  406c14:	add    rax,0x8
  406c18:	mov    rdi,QWORD PTR [rbp-0x8]
  406c1c:	add    rdi,0x148
  406c23:	mov    QWORD PTR [rbp-0x18],rdi
  406c27:	mov    rdi,rax
  406c2a:	mov    rsi,QWORD PTR [rbp-0x18]
  406c2e:	call   402540 <memcpy@plt>
  406c33:	mov    rax,QWORD PTR [rbp-0x10]
  406c37:	add    rsp,0x20
  406c3b:	pop    rbp
  406c3c:	ret    
  406c3d:	nop    DWORD PTR [rax]
  406c40:	push   rbp
  406c41:	mov    rbp,rsp
  406c44:	sub    rsp,0x10
  406c48:	mov    QWORD PTR [rbp-0x8],rdi
  406c4c:	cmp    QWORD PTR [rbp-0x8],0x0
  406c51:	setne  al
  406c54:	xor    al,0xff
  406c56:	xor    al,0xff
  406c58:	and    al,0x1
  406c5a:	movzx  ecx,al
  406c5d:	movsxd rdi,ecx
  406c60:	cmp    rdi,0x0
  406c64:	je     406c73 <rb_strcasecmp@plt+0x4723>
  406c6a:	mov    rdi,QWORD PTR [rbp-0x8]
  406c6e:	call   402200 <free@plt>
  406c73:	add    rsp,0x10
  406c77:	pop    rbp
  406c78:	ret    
  406c79:	nop    DWORD PTR [rax+0x0]
  406c80:	push   rbp
  406c81:	mov    rbp,rsp
  406c84:	sub    rsp,0x30
  406c88:	mov    QWORD PTR [rbp-0x8],rdi
  406c8c:	mov    QWORD PTR [rbp-0x10],rsi
  406c90:	mov    QWORD PTR [rbp-0x18],rdx
  406c94:	mov    DWORD PTR [rbp-0x1c],ecx
  406c97:	cmp    QWORD PTR [rbp-0x18],0x0
  406c9c:	jne    406cc3 <rb_strcasecmp@plt+0x4773>
  406ca2:	mov    rdi,QWORD PTR [rbp-0x8]
  406ca6:	call   406d00 <rb_strcasecmp@plt+0x47b0>
  406cab:	mov    QWORD PTR [rbp-0x18],rax
  406caf:	mov    rdi,QWORD PTR [rbp-0x10]
  406cb3:	call   406d90 <rb_strcasecmp@plt+0x4840>
  406cb8:	mov    rdi,QWORD PTR [rbp-0x18]
  406cbc:	mov    QWORD PTR [rdi+0x1c8],rax
  406cc3:	mov    eax,0x100
  406cc8:	mov    edx,eax
  406cca:	mov    rcx,QWORD PTR [rbp-0x18]
  406cce:	add    rcx,0x29
  406cd2:	mov    rsi,QWORD PTR [rbp-0x10]
  406cd6:	mov    rdi,rcx
  406cd9:	call   4021d0 <rb_strlcpy@plt>
  406cde:	mov    r8d,DWORD PTR [rbp-0x1c]
  406ce2:	mov    r9b,r8b
  406ce5:	mov    rcx,QWORD PTR [rbp-0x18]
  406ce9:	mov    BYTE PTR [rcx+0x28],r9b
  406ced:	mov    rdi,QWORD PTR [rbp-0x18]
  406cf1:	mov    QWORD PTR [rbp-0x28],rax
  406cf5:	call   406e00 <rb_strcasecmp@plt+0x48b0>
  406cfa:	add    rsp,0x30
  406cfe:	pop    rbp
  406cff:	ret    
  406d00:	push   rbp
  406d01:	mov    rbp,rsp
  406d04:	sub    rsp,0x10
  406d08:	mov    eax,0x1d8
  406d0d:	mov    ecx,eax
  406d0f:	mov    QWORD PTR [rbp-0x8],rdi
  406d13:	mov    rdi,rcx
  406d16:	call   406f10 <rb_strcasecmp@plt+0x49c0>
  406d1b:	mov    QWORD PTR [rbp-0x10],rax
  406d1f:	call   4022a0 <rb_current_time@plt>
  406d24:	mov    rcx,QWORD PTR [rbp-0x10]
  406d28:	mov    QWORD PTR [rcx+0x130],rax
  406d2f:	mov    rax,QWORD PTR [rbp-0x10]
  406d33:	mov    BYTE PTR [rax+0x129],0x3
  406d3a:	mov    rax,QWORD PTR [rbp-0x10]
  406d3e:	mov    QWORD PTR [rax+0x138],0x4
  406d49:	mov    rax,QWORD PTR [rbp-0x8]
  406d4d:	mov    rcx,QWORD PTR [rbp-0x10]
  406d51:	mov    QWORD PTR [rcx+0x1d0],rax
  406d58:	call   406f70 <rb_strcasecmp@plt+0x4a20>
  406d5d:	movzx  edx,ax
  406d60:	mov    rcx,QWORD PTR [rbp-0x10]
  406d64:	mov    DWORD PTR [rcx+0x18],edx
  406d67:	mov    rcx,QWORD PTR [rbp-0x10]
  406d6b:	mov    rsi,QWORD PTR [rbp-0x10]
  406d6f:	mov    rdi,rcx
  406d72:	lea    rdx,[rip+0x1423f]        # 41afb8 <rb_strcasecmp@plt+0x18a68>
  406d79:	call   406fd0 <rb_strcasecmp@plt+0x4a80>
  406d7e:	mov    rax,QWORD PTR [rbp-0x10]
  406d82:	add    rsp,0x10
  406d86:	pop    rbp
  406d87:	ret    
  406d88:	nop    DWORD PTR [rax+rax*1+0x0]
  406d90:	push   rbp
  406d91:	mov    rbp,rsp
  406d94:	sub    rsp,0x20
  406d98:	mov    QWORD PTR [rbp-0x8],rdi
  406d9c:	mov    rdi,QWORD PTR [rbp-0x8]
  406da0:	call   402210 <strlen@plt>
  406da5:	add    rax,0x1
  406da9:	mov    rdi,rax
  406dac:	call   402180 <malloc@plt>
  406db1:	mov    QWORD PTR [rbp-0x10],rax
  406db5:	cmp    QWORD PTR [rbp-0x10],0x0
  406dba:	sete   cl
  406dbd:	xor    cl,0xff
  406dc0:	xor    cl,0xff
  406dc3:	and    cl,0x1
  406dc6:	movzx  edx,cl
  406dc9:	movsxd rax,edx
  406dcc:	cmp    rax,0x0
  406dd0:	je     406ddb <rb_strcasecmp@plt+0x488b>
  406dd6:	call   4023b0 <rb_outofmemory@plt>
  406ddb:	mov    rdi,QWORD PTR [rbp-0x10]
  406ddf:	mov    rsi,QWORD PTR [rbp-0x8]
  406de3:	call   402440 <strcpy@plt>
  406de8:	mov    rsi,QWORD PTR [rbp-0x10]
  406dec:	mov    QWORD PTR [rbp-0x18],rax
  406df0:	mov    rax,rsi
  406df3:	add    rsp,0x20
  406df7:	pop    rbp
  406df8:	ret    
  406df9:	nop    DWORD PTR [rax+0x0]
  406e00:	push   rbp
  406e01:	mov    rbp,rsp
  406e04:	sub    rsp,0x430
  406e0b:	lea    rax,[rbp-0x410]
  406e12:	xor    esi,esi
  406e14:	mov    ecx,0x400
  406e19:	mov    edx,ecx
  406e1b:	mov    QWORD PTR [rbp-0x8],rdi
  406e1f:	mov    DWORD PTR [rbp-0x414],0x0
  406e29:	mov    rdi,rax
  406e2c:	mov    QWORD PTR [rbp-0x428],rax
  406e33:	call   402040 <memset@plt>
  406e38:	mov    rax,QWORD PTR [rbp-0x8]
  406e3c:	add    rax,0x29
  406e40:	mov    rdx,QWORD PTR [rbp-0x8]
  406e44:	movsx  edx,BYTE PTR [rdx+0x28]
  406e48:	mov    rdi,rax
  406e4b:	mov    esi,0x1
  406e50:	mov    rcx,QWORD PTR [rbp-0x428]
  406e57:	mov    r8d,0x400
  406e5d:	call   407ea0 <rb_strcasecmp@plt+0x5950>
  406e62:	mov    DWORD PTR [rbp-0x414],eax
  406e68:	cmp    eax,0x0
  406e6b:	jle    406f01 <rb_strcasecmp@plt+0x49b1>
  406e71:	lea    rdi,[rbp-0x410]
  406e78:	lea    rax,[rbp-0x410]
  406e7f:	mov    QWORD PTR [rbp-0x420],rax
  406e86:	mov    rax,QWORD PTR [rbp-0x8]
  406e8a:	mov    rcx,QWORD PTR [rbp-0x420]
  406e91:	movzx  edx,WORD PTR [rax+0x18]
  406e95:	mov    eax,edx
  406e97:	mov    edx,DWORD PTR [rcx+0x8]
  406e9a:	mov    rsi,QWORD PTR [rcx]
  406e9d:	and    rsi,0xffffffffffff0000
  406ea4:	or     rsi,rax
  406ea7:	mov    DWORD PTR [rcx+0x8],edx
  406eaa:	mov    QWORD PTR [rcx],rsi
  406ead:	mov    rax,QWORD PTR [rbp-0x8]
  406eb1:	mov    r8b,BYTE PTR [rax+0x12a]
  406eb8:	add    r8b,0x1
  406ebc:	mov    BYTE PTR [rax+0x12a],r8b
  406ec3:	mov    esi,DWORD PTR [rbp-0x414]
  406ec9:	mov    rax,QWORD PTR [rbp-0x8]
  406ecd:	movsx  edx,BYTE PTR [rax+0x12a]
  406ed4:	call   407100 <rb_strcasecmp@plt+0x4bb0>
  406ed9:	mov    DWORD PTR [rbp-0x418],eax
  406edf:	cmp    DWORD PTR [rbp-0x418],0xffffffff
  406ee6:	je     406efc <rb_strcasecmp@plt+0x49ac>
  406eec:	mov    eax,DWORD PTR [rbp-0x418]
  406ef2:	mov    rcx,QWORD PTR [rbp-0x8]
  406ef6:	mov    DWORD PTR [rcx+0x140],eax
  406efc:	jmp    406f01 <rb_strcasecmp@plt+0x49b1>
  406f01:	add    rsp,0x430
  406f08:	pop    rbp
  406f09:	ret    
  406f0a:	nop    WORD PTR [rax+rax*1+0x0]
  406f10:	push   rbp
  406f11:	mov    rbp,rsp
  406f14:	sub    rsp,0x10
  406f18:	mov    eax,0x1
  406f1d:	mov    ecx,eax
  406f1f:	mov    QWORD PTR [rbp-0x8],rdi
  406f23:	mov    rsi,QWORD PTR [rbp-0x8]
  406f27:	mov    rdi,rcx
  406f2a:	call   402470 <calloc@plt>
  406f2f:	mov    QWORD PTR [rbp-0x10],rax
  406f33:	cmp    QWORD PTR [rbp-0x10],0x0
  406f38:	sete   dl
  406f3b:	xor    dl,0xff
  406f3e:	xor    dl,0xff
  406f41:	and    dl,0x1
  406f44:	movzx  r8d,dl
  406f48:	movsxd rax,r8d
  406f4b:	cmp    rax,0x0
  406f4f:	je     406f5a <rb_strcasecmp@plt+0x4a0a>
  406f55:	call   4023b0 <rb_outofmemory@plt>
  406f5a:	mov    rax,QWORD PTR [rbp-0x10]
  406f5e:	add    rsp,0x10
  406f62:	pop    rbp
  406f63:	ret    
  406f64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f6e:	xchg   ax,ax
  406f70:	push   rbp
  406f71:	mov    rbp,rsp
  406f74:	sub    rsp,0x10
  406f78:	mov    eax,0x2
  406f7d:	mov    esi,eax
  406f7f:	lea    rcx,[rbp-0x2]
  406f83:	mov    rdi,rcx
  406f86:	call   4024d0 <rb_get_random@plt>
  406f8b:	movzx  edx,WORD PTR [rbp-0x2]
  406f8f:	cmp    edx,0xffff
  406f95:	mov    DWORD PTR [rbp-0x8],eax
  406f98:	jne    406fa3 <rb_strcasecmp@plt+0x4a53>
  406f9e:	jmp    406fa8 <rb_strcasecmp@plt+0x4a58>
  406fa3:	jmp    406fa8 <rb_strcasecmp@plt+0x4a58>
  406fa8:	movzx  edi,WORD PTR [rbp-0x2]
  406fac:	call   406240 <rb_strcasecmp@plt+0x3cf0>
  406fb1:	cmp    rax,0x0
  406fb5:	jne    406f78 <rb_strcasecmp@plt+0x4a28>
  406fbb:	movzx  eax,WORD PTR [rbp-0x2]
  406fbf:	add    rsp,0x10
  406fc3:	pop    rbp
  406fc4:	ret    
  406fc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fcf:	nop
  406fd0:	push   rbp
  406fd1:	mov    rbp,rsp
  406fd4:	sub    rsp,0x20
  406fd8:	mov    QWORD PTR [rbp-0x8],rdi
  406fdc:	mov    QWORD PTR [rbp-0x10],rsi
  406fe0:	mov    QWORD PTR [rbp-0x18],rdx
  406fe4:	cmp    QWORD PTR [rbp-0x8],0x0
  406fe9:	je     406ff4 <rb_strcasecmp@plt+0x4aa4>
  406fef:	jmp    407013 <rb_strcasecmp@plt+0x4ac3>
  406ff4:	lea    rdi,[rip+0x9550]        # 41054b <rb_strcasecmp@plt+0xdffb>
  406ffb:	lea    rsi,[rip+0x94ea]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  407002:	mov    edx,0x8f
  407007:	lea    rcx,[rip+0x954a]        # 410558 <rb_strcasecmp@plt+0xe008>
  40700e:	call   4020f0 <__assert_fail@plt>
  407013:	cmp    QWORD PTR [rbp-0x10],0x0
  407018:	je     407023 <rb_strcasecmp@plt+0x4ad3>
  40701e:	jmp    407042 <rb_strcasecmp@plt+0x4af2>
  407023:	lea    rdi,[rip+0x99f4]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  40702a:	lea    rsi,[rip+0x94bb]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  407031:	mov    edx,0x90
  407036:	lea    rcx,[rip+0x951b]        # 410558 <rb_strcasecmp@plt+0xe008>
  40703d:	call   4020f0 <__assert_fail@plt>
  407042:	cmp    QWORD PTR [rbp-0x18],0x0
  407047:	je     407052 <rb_strcasecmp@plt+0x4b02>
  40704d:	jmp    407071 <rb_strcasecmp@plt+0x4b21>
  407052:	lea    rdi,[rip+0x94e5]        # 41053e <rb_strcasecmp@plt+0xdfee>
  407059:	lea    rsi,[rip+0x948c]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  407060:	mov    edx,0x91
  407065:	lea    rcx,[rip+0x94ec]        # 410558 <rb_strcasecmp@plt+0xe008>
  40706c:	call   4020f0 <__assert_fail@plt>
  407071:	mov    rax,QWORD PTR [rbp-0x8]
  407075:	mov    rcx,QWORD PTR [rbp-0x10]
  407079:	mov    QWORD PTR [rcx],rax
  40707c:	mov    rax,QWORD PTR [rbp-0x10]
  407080:	mov    QWORD PTR [rax+0x8],0x0
  407088:	mov    rax,QWORD PTR [rbp-0x18]
  40708c:	mov    rax,QWORD PTR [rax]
  40708f:	mov    rcx,QWORD PTR [rbp-0x10]
  407093:	mov    QWORD PTR [rcx+0x10],rax
  407097:	mov    rax,QWORD PTR [rbp-0x18]
  40709b:	cmp    QWORD PTR [rax],0x0
  40709f:	je     4070b9 <rb_strcasecmp@plt+0x4b69>
  4070a5:	mov    rax,QWORD PTR [rbp-0x10]
  4070a9:	mov    rcx,QWORD PTR [rbp-0x18]
  4070ad:	mov    rcx,QWORD PTR [rcx]
  4070b0:	mov    QWORD PTR [rcx+0x8],rax
  4070b4:	jmp    4070d9 <rb_strcasecmp@plt+0x4b89>
  4070b9:	mov    rax,QWORD PTR [rbp-0x18]
  4070bd:	cmp    QWORD PTR [rax+0x8],0x0
  4070c2:	jne    4070d4 <rb_strcasecmp@plt+0x4b84>
  4070c8:	mov    rax,QWORD PTR [rbp-0x10]
  4070cc:	mov    rcx,QWORD PTR [rbp-0x18]
  4070d0:	mov    QWORD PTR [rcx+0x8],rax
  4070d4:	jmp    4070d9 <rb_strcasecmp@plt+0x4b89>
  4070d9:	mov    rax,QWORD PTR [rbp-0x10]
  4070dd:	mov    rcx,QWORD PTR [rbp-0x18]
  4070e1:	mov    QWORD PTR [rcx],rax
  4070e4:	mov    rax,QWORD PTR [rbp-0x18]
  4070e8:	mov    rcx,QWORD PTR [rax+0x10]
  4070ec:	add    rcx,0x1
  4070f0:	mov    QWORD PTR [rax+0x10],rcx
  4070f4:	add    rsp,0x20
  4070f8:	pop    rbp
  4070f9:	ret    
  4070fa:	nop    WORD PTR [rax+rax*1+0x0]
  407100:	push   rbp
  407101:	mov    rbp,rsp
  407104:	push   rbx
  407105:	sub    rsp,0x38
  407109:	mov    QWORD PTR [rbp-0x18],rdi
  40710d:	mov    DWORD PTR [rbp-0x1c],esi
  407110:	mov    DWORD PTR [rbp-0x20],edx
  407113:	mov    edx,DWORD PTR [rip+0x13eb7]        # 41afd0 <rb_strcasecmp@plt+0x18a80>
  407119:	add    edx,0x1
  40711c:	mov    DWORD PTR [rip+0x13eae],edx        # 41afd0 <rb_strcasecmp@plt+0x18a80>
  407122:	mov    DWORD PTR [rbp-0x24],0x0
  407129:	lea    rax,[rip+0x13ea4]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  407130:	mov    ecx,DWORD PTR [rbp-0x24]
  407133:	cmp    ecx,DWORD PTR [rax]
  407135:	jge    407235 <rb_strcasecmp@plt+0x4ce5>
  40713b:	lea    rax,[rip+0x13e92]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  407142:	mov    ecx,DWORD PTR [rbp-0x24]
  407145:	add    ecx,DWORD PTR [rbp-0x20]
  407148:	sub    ecx,0x1
  40714b:	mov    QWORD PTR [rbp-0x30],rax
  40714f:	mov    eax,ecx
  407151:	cdq    
  407152:	mov    rsi,QWORD PTR [rbp-0x30]
  407156:	idiv   DWORD PTR [rsi]
  407158:	mov    DWORD PTR [rbp-0x28],edx
  40715b:	movsxd rdi,DWORD PTR [rbp-0x28]
  40715f:	lea    r8,[rip+0x13e2a]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  407166:	cmp    DWORD PTR [r8+rdi*4],0x0
  40716b:	je     4071a9 <rb_strcasecmp@plt+0x4c59>
  407171:	mov    eax,DWORD PTR [rip+0x13e59]        # 41afd0 <rb_strcasecmp@plt+0x18a80>
  407177:	movsxd rcx,DWORD PTR [rbp-0x28]
  40717b:	lea    rdx,[rip+0x13e0e]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  407182:	mov    edi,DWORD PTR [rdx+rcx*4]
  407185:	mov    DWORD PTR [rbp-0x34],eax
  407188:	call   407330 <rb_strcasecmp@plt+0x4de0>
  40718d:	mov    edi,DWORD PTR [rbp-0x34]
  407190:	mov    DWORD PTR [rbp-0x38],eax
  407193:	mov    eax,edi
  407195:	cdq    
  407196:	mov    esi,DWORD PTR [rbp-0x38]
  407199:	idiv   esi
  40719b:	cmp    edx,0x0
  40719e:	je     4071a9 <rb_strcasecmp@plt+0x4c59>
  4071a4:	jmp    407227 <rb_strcasecmp@plt+0x4cd7>
  4071a9:	mov    rdi,QWORD PTR [rip+0x13dd0]        # 41af80 <rb_strcasecmp@plt+0x18a30>
  4071b0:	call   4020c0 <rb_get_fd@plt>
  4071b5:	xor    ecx,ecx
  4071b7:	mov    edx,0x1c
  4071bc:	mov    edi,edx
  4071be:	mov    edx,0x10
  4071c3:	mov    esi,edx
  4071c5:	lea    r8,[rip+0x14104]        # 41b2d0 <rb_strcasecmp@plt+0x18d80>
  4071cc:	mov    r9,QWORD PTR [rbp-0x18]
  4071d0:	movsxd rdx,DWORD PTR [rbp-0x1c]
  4071d4:	movsxd r10,DWORD PTR [rbp-0x28]
  4071d8:	shl    r10,0x7
  4071dc:	mov    r11,r8
  4071df:	add    r11,r10
  4071e2:	movsxd r10,DWORD PTR [rbp-0x28]
  4071e6:	shl    r10,0x7
  4071ea:	add    r8,r10
  4071ed:	movzx  ebx,WORD PTR [r8]
  4071f1:	cmp    ebx,0x2
  4071f4:	cmove  rdi,rsi
  4071f8:	mov    ebx,edi
  4071fa:	mov    edi,eax
  4071fc:	mov    rsi,r9
  4071ff:	mov    r8,r11
  407202:	mov    r9d,ebx
  407205:	call   402500 <sendto@plt>
  40720a:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40720e:	cmp    rax,rdx
  407211:	jne    407222 <rb_strcasecmp@plt+0x4cd2>
  407217:	mov    eax,DWORD PTR [rbp-0x28]
  40721a:	mov    DWORD PTR [rbp-0xc],eax
  40721d:	jmp    40731c <rb_strcasecmp@plt+0x4dcc>
  407222:	jmp    407227 <rb_strcasecmp@plt+0x4cd7>
  407227:	mov    eax,DWORD PTR [rbp-0x24]
  40722a:	add    eax,0x1
  40722d:	mov    DWORD PTR [rbp-0x24],eax
  407230:	jmp    407129 <rb_strcasecmp@plt+0x4bd9>
  407235:	mov    DWORD PTR [rbp-0x24],0x0
  40723c:	lea    rax,[rip+0x13d91]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  407243:	mov    ecx,DWORD PTR [rbp-0x24]
  407246:	cmp    ecx,DWORD PTR [rax]
  407248:	jge    407315 <rb_strcasecmp@plt+0x4dc5>
  40724e:	lea    rax,[rip+0x13d7f]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  407255:	mov    ecx,DWORD PTR [rbp-0x24]
  407258:	add    ecx,DWORD PTR [rbp-0x20]
  40725b:	sub    ecx,0x1
  40725e:	mov    QWORD PTR [rbp-0x40],rax
  407262:	mov    eax,ecx
  407264:	cdq    
  407265:	mov    rsi,QWORD PTR [rbp-0x40]
  407269:	idiv   DWORD PTR [rsi]
  40726b:	mov    DWORD PTR [rbp-0x28],edx
  40726e:	movsxd rdi,DWORD PTR [rbp-0x28]
  407272:	lea    r8,[rip+0x13d17]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  407279:	cmp    DWORD PTR [r8+rdi*4],0x0
  40727e:	jne    407289 <rb_strcasecmp@plt+0x4d39>
  407284:	jmp    407307 <rb_strcasecmp@plt+0x4db7>
  407289:	mov    rdi,QWORD PTR [rip+0x13cf0]        # 41af80 <rb_strcasecmp@plt+0x18a30>
  407290:	call   4020c0 <rb_get_fd@plt>
  407295:	xor    ecx,ecx
  407297:	mov    edx,0x1c
  40729c:	mov    edi,edx
  40729e:	mov    edx,0x10
  4072a3:	mov    esi,edx
  4072a5:	lea    r8,[rip+0x14024]        # 41b2d0 <rb_strcasecmp@plt+0x18d80>
  4072ac:	mov    r9,QWORD PTR [rbp-0x18]
  4072b0:	movsxd rdx,DWORD PTR [rbp-0x1c]
  4072b4:	movsxd r10,DWORD PTR [rbp-0x28]
  4072b8:	shl    r10,0x7
  4072bc:	mov    r11,r8
  4072bf:	add    r11,r10
  4072c2:	movsxd r10,DWORD PTR [rbp-0x28]
  4072c6:	shl    r10,0x7
  4072ca:	add    r8,r10
  4072cd:	movzx  ebx,WORD PTR [r8]
  4072d1:	cmp    ebx,0x2
  4072d4:	cmove  rdi,rsi
  4072d8:	mov    ebx,edi
  4072da:	mov    edi,eax
  4072dc:	mov    rsi,r9
  4072df:	mov    r8,r11
  4072e2:	mov    r9d,ebx
  4072e5:	call   402500 <sendto@plt>
  4072ea:	movsxd rdx,DWORD PTR [rbp-0x1c]
  4072ee:	cmp    rax,rdx
  4072f1:	jne    407302 <rb_strcasecmp@plt+0x4db2>
  4072f7:	mov    eax,DWORD PTR [rbp-0x28]
  4072fa:	mov    DWORD PTR [rbp-0xc],eax
  4072fd:	jmp    40731c <rb_strcasecmp@plt+0x4dcc>
  407302:	jmp    407307 <rb_strcasecmp@plt+0x4db7>
  407307:	mov    eax,DWORD PTR [rbp-0x24]
  40730a:	add    eax,0x1
  40730d:	mov    DWORD PTR [rbp-0x24],eax
  407310:	jmp    40723c <rb_strcasecmp@plt+0x4cec>
  407315:	mov    DWORD PTR [rbp-0xc],0xffffffff
  40731c:	mov    eax,DWORD PTR [rbp-0xc]
  40731f:	add    rsp,0x38
  407323:	pop    rbx
  407324:	pop    rbp
  407325:	ret    
  407326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407330:	push   rbp
  407331:	mov    rbp,rsp
  407334:	mov    DWORD PTR [rbp-0x8],edi
  407337:	mov    edi,DWORD PTR [rbp-0x8]
  40733a:	add    edi,0xffffffff
  40733d:	mov    eax,edi
  40733f:	sub    edi,0x3
  407342:	mov    QWORD PTR [rbp-0x10],rax
  407346:	mov    DWORD PTR [rbp-0x14],edi
  407349:	ja     407393 <rb_strcasecmp@plt+0x4e43>
  40734f:	lea    rax,[rip+0x9272]        # 4105c8 <rb_strcasecmp@plt+0xe078>
  407356:	mov    rcx,QWORD PTR [rbp-0x10]
  40735a:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40735e:	add    rdx,rax
  407361:	jmp    rdx
  407363:	mov    DWORD PTR [rbp-0x4],0x3
  40736a:	jmp    40739a <rb_strcasecmp@plt+0x4e4a>
  40736f:	mov    DWORD PTR [rbp-0x4],0x9
  407376:	jmp    40739a <rb_strcasecmp@plt+0x4e4a>
  40737b:	mov    DWORD PTR [rbp-0x4],0x1b
  407382:	jmp    40739a <rb_strcasecmp@plt+0x4e4a>
  407387:	mov    DWORD PTR [rbp-0x4],0x51
  40738e:	jmp    40739a <rb_strcasecmp@plt+0x4e4a>
  407393:	mov    DWORD PTR [rbp-0x4],0xf3
  40739a:	mov    eax,DWORD PTR [rbp-0x4]
  40739d:	pop    rbp
  40739e:	ret    
  40739f:	nop
  4073a0:	push   rbp
  4073a1:	mov    rbp,rsp
  4073a4:	sub    rsp,0x10
  4073a8:	mov    QWORD PTR [rbp-0x8],rdi
  4073ac:	mov    QWORD PTR [rbp-0x10],rsi
  4073b0:	cmp    QWORD PTR [rbp-0x8],0x0
  4073b5:	je     4073c0 <rb_strcasecmp@plt+0x4e70>
  4073bb:	jmp    4073df <rb_strcasecmp@plt+0x4e8f>
  4073c0:	lea    rdi,[rip+0x9657]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  4073c7:	lea    rsi,[rip+0x911e]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  4073ce:	mov    edx,0xeb
  4073d3:	lea    rcx,[rip+0x912e]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  4073da:	call   4020f0 <__assert_fail@plt>
  4073df:	cmp    QWORD PTR [rbp-0x10],0x0
  4073e4:	je     4073ef <rb_strcasecmp@plt+0x4e9f>
  4073ea:	jmp    40740e <rb_strcasecmp@plt+0x4ebe>
  4073ef:	lea    rdi,[rip+0x9148]        # 41053e <rb_strcasecmp@plt+0xdfee>
  4073f6:	lea    rsi,[rip+0x90ef]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  4073fd:	mov    edx,0xec
  407402:	lea    rcx,[rip+0x90ff]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  407409:	call   4020f0 <__assert_fail@plt>
  40740e:	mov    rax,QWORD PTR [rbp-0x8]
  407412:	cmp    QWORD PTR [rax+0x10],0x0
  407417:	je     407436 <rb_strcasecmp@plt+0x4ee6>
  40741d:	mov    rax,QWORD PTR [rbp-0x8]
  407421:	mov    rax,QWORD PTR [rax+0x8]
  407425:	mov    rcx,QWORD PTR [rbp-0x8]
  407429:	mov    rcx,QWORD PTR [rcx+0x10]
  40742d:	mov    QWORD PTR [rcx+0x8],rax
  407431:	jmp    407446 <rb_strcasecmp@plt+0x4ef6>
  407436:	mov    rax,QWORD PTR [rbp-0x8]
  40743a:	mov    rax,QWORD PTR [rax+0x8]
  40743e:	mov    rcx,QWORD PTR [rbp-0x10]
  407442:	mov    QWORD PTR [rcx+0x8],rax
  407446:	mov    rax,QWORD PTR [rbp-0x8]
  40744a:	cmp    QWORD PTR [rax+0x8],0x0
  40744f:	je     40746e <rb_strcasecmp@plt+0x4f1e>
  407455:	mov    rax,QWORD PTR [rbp-0x8]
  407459:	mov    rax,QWORD PTR [rax+0x10]
  40745d:	mov    rcx,QWORD PTR [rbp-0x8]
  407461:	mov    rcx,QWORD PTR [rcx+0x8]
  407465:	mov    QWORD PTR [rcx+0x10],rax
  407469:	jmp    40747d <rb_strcasecmp@plt+0x4f2d>
  40746e:	mov    rax,QWORD PTR [rbp-0x8]
  407472:	mov    rax,QWORD PTR [rax+0x10]
  407476:	mov    rcx,QWORD PTR [rbp-0x10]
  40747a:	mov    QWORD PTR [rcx],rax
  40747d:	mov    rax,QWORD PTR [rbp-0x8]
  407481:	mov    QWORD PTR [rax+0x8],0x0
  407489:	mov    rax,QWORD PTR [rbp-0x8]
  40748d:	mov    QWORD PTR [rax+0x10],0x0
  407495:	mov    rax,QWORD PTR [rbp-0x10]
  407499:	mov    rcx,QWORD PTR [rax+0x10]
  40749d:	add    rcx,0xffffffffffffffff
  4074a1:	mov    QWORD PTR [rax+0x10],rcx
  4074a5:	add    rsp,0x10
  4074a9:	pop    rbp
  4074aa:	ret    
  4074ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4074b0:	push   rbp
  4074b1:	mov    rbp,rsp
  4074b4:	sub    rsp,0x50
  4074b8:	mov    QWORD PTR [rbp-0x8],rdi
  4074bc:	mov    QWORD PTR [rbp-0x28],0x0
  4074c4:	mov    QWORD PTR [rbp-0x30],0x0
  4074cc:	mov    rdi,QWORD PTR [rip+0x13ae5]        # 41afb8 <rb_strcasecmp@plt+0x18a68>
  4074d3:	mov    QWORD PTR [rbp-0x10],rdi
  4074d7:	cmp    QWORD PTR [rbp-0x10],0x0
  4074dc:	je     4074f3 <rb_strcasecmp@plt+0x4fa3>
  4074e2:	mov    rax,QWORD PTR [rbp-0x10]
  4074e6:	mov    rax,QWORD PTR [rax+0x10]
  4074ea:	mov    QWORD PTR [rbp-0x38],rax
  4074ee:	jmp    407500 <rb_strcasecmp@plt+0x4fb0>
  4074f3:	xor    eax,eax
  4074f5:	mov    ecx,eax
  4074f7:	mov    QWORD PTR [rbp-0x38],rcx
  4074fb:	jmp    407500 <rb_strcasecmp@plt+0x4fb0>
  407500:	mov    rax,QWORD PTR [rbp-0x38]
  407504:	mov    QWORD PTR [rbp-0x18],rax
  407508:	cmp    QWORD PTR [rbp-0x10],0x0
  40750d:	je     4075fa <rb_strcasecmp@plt+0x50aa>
  407513:	mov    rax,QWORD PTR [rbp-0x10]
  407517:	mov    rax,QWORD PTR [rax]
  40751a:	mov    QWORD PTR [rbp-0x20],rax
  40751e:	mov    rax,QWORD PTR [rbp-0x20]
  407522:	mov    rax,QWORD PTR [rax+0x130]
  407529:	mov    rcx,QWORD PTR [rbp-0x20]
  40752d:	add    rax,QWORD PTR [rcx+0x138]
  407534:	mov    QWORD PTR [rbp-0x30],rax
  407538:	mov    rax,QWORD PTR [rbp-0x8]
  40753c:	cmp    rax,QWORD PTR [rbp-0x30]
  407540:	jl     407596 <rb_strcasecmp@plt+0x5046>
  407546:	mov    rax,QWORD PTR [rbp-0x20]
  40754a:	movsxd rax,DWORD PTR [rax+0x140]
  407551:	lea    rcx,[rip+0x13a38]        # 41af90 <rb_strcasecmp@plt+0x18a40>
  407558:	mov    edx,DWORD PTR [rcx+rax*4]
  40755b:	add    edx,0x1
  40755e:	mov    DWORD PTR [rcx+rax*4],edx
  407561:	mov    rax,QWORD PTR [rbp-0x8]
  407565:	mov    rcx,QWORD PTR [rbp-0x20]
  407569:	mov    QWORD PTR [rcx+0x130],rax
  407570:	mov    rax,QWORD PTR [rbp-0x20]
  407574:	mov    rax,QWORD PTR [rax+0x138]
  40757b:	mov    rcx,QWORD PTR [rbp-0x20]
  40757f:	add    rax,QWORD PTR [rcx+0x138]
  407586:	mov    QWORD PTR [rcx+0x138],rax
  40758d:	mov    rdi,QWORD PTR [rbp-0x20]
  407591:	call   406560 <rb_strcasecmp@plt+0x4010>
  407596:	cmp    QWORD PTR [rbp-0x28],0x0
  40759b:	je     4075af <rb_strcasecmp@plt+0x505f>
  4075a1:	mov    rax,QWORD PTR [rbp-0x30]
  4075a5:	cmp    rax,QWORD PTR [rbp-0x28]
  4075a9:	jge    4075b7 <rb_strcasecmp@plt+0x5067>
  4075af:	mov    rax,QWORD PTR [rbp-0x30]
  4075b3:	mov    QWORD PTR [rbp-0x28],rax
  4075b7:	jmp    4075bc <rb_strcasecmp@plt+0x506c>
  4075bc:	mov    rax,QWORD PTR [rbp-0x18]
  4075c0:	mov    QWORD PTR [rbp-0x10],rax
  4075c4:	cmp    QWORD PTR [rbp-0x10],0x0
  4075c9:	je     4075e0 <rb_strcasecmp@plt+0x5090>
  4075cf:	mov    rax,QWORD PTR [rbp-0x10]
  4075d3:	mov    rax,QWORD PTR [rax+0x10]
  4075d7:	mov    QWORD PTR [rbp-0x40],rax
  4075db:	jmp    4075ed <rb_strcasecmp@plt+0x509d>
  4075e0:	xor    eax,eax
  4075e2:	mov    ecx,eax
  4075e4:	mov    QWORD PTR [rbp-0x40],rcx
  4075e8:	jmp    4075ed <rb_strcasecmp@plt+0x509d>
  4075ed:	mov    rax,QWORD PTR [rbp-0x40]
  4075f1:	mov    QWORD PTR [rbp-0x18],rax
  4075f5:	jmp    407508 <rb_strcasecmp@plt+0x4fb8>
  4075fa:	mov    rax,QWORD PTR [rbp-0x28]
  4075fe:	cmp    rax,QWORD PTR [rbp-0x8]
  407602:	jle    407615 <rb_strcasecmp@plt+0x50c5>
  407608:	mov    rax,QWORD PTR [rbp-0x28]
  40760c:	mov    QWORD PTR [rbp-0x48],rax
  407610:	jmp    407623 <rb_strcasecmp@plt+0x50d3>
  407615:	mov    rax,QWORD PTR [rbp-0x8]
  407619:	add    rax,0x258
  40761f:	mov    QWORD PTR [rbp-0x48],rax
  407623:	mov    rax,QWORD PTR [rbp-0x48]
  407627:	add    rsp,0x50
  40762b:	pop    rbp
  40762c:	ret    
  40762d:	nop    DWORD PTR [rax]
  407630:	push   rbp
  407631:	mov    rbp,rsp
  407634:	sub    rsp,0x10
  407638:	lea    rax,[rip+0x13995]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  40763f:	mov    DWORD PTR [rax],0x0
  407645:	call   407680 <rb_strcasecmp@plt+0x5130>
  40764a:	lea    rcx,[rip+0x13983]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  407651:	cmp    DWORD PTR [rcx],0x0
  407654:	mov    DWORD PTR [rbp-0x4],eax
  407657:	jne    407669 <rb_strcasecmp@plt+0x5119>
  40765d:	lea    rdi,[rip+0x913b]        # 41079f <rb_strcasecmp@plt+0xe24f>
  407664:	call   407910 <rb_strcasecmp@plt+0x53c0>
  407669:	xor    eax,eax
  40766b:	add    rsp,0x10
  40766f:	pop    rbp
  407670:	ret    
  407671:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40767b:	nop    DWORD PTR [rax+rax*1+0x0]
  407680:	push   rbp
  407681:	mov    rbp,rsp
  407684:	sub    rsp,0xc0
  40768b:	lea    rdi,[rip+0x9117]        # 4107a9 <rb_strcasecmp@plt+0xe259>
  407692:	lea    rsi,[rip+0x97a1]        # 410e3a <rb_strcasecmp@plt+0xe8ea>
  407699:	call   402190 <fopen@plt>
  40769e:	mov    QWORD PTR [rbp-0xa8],rax
  4076a5:	cmp    rax,0x0
  4076a9:	jne    4076bb <rb_strcasecmp@plt+0x516b>
  4076af:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4076b6:	jmp    4078fe <rb_strcasecmp@plt+0x53ae>
  4076bb:	jmp    4076c0 <rb_strcasecmp@plt+0x5170>
  4076c0:	lea    rdi,[rbp-0xa0]
  4076c7:	mov    rdx,QWORD PTR [rbp-0xa8]
  4076ce:	mov    esi,0x80
  4076d3:	call   4021c0 <fgets@plt>
  4076d8:	cmp    rax,0x0
  4076dc:	je     4078e5 <rb_strcasecmp@plt+0x5395>
  4076e2:	lea    rdi,[rbp-0xa0]
  4076e9:	lea    rsi,[rip+0x99c7]        # 4110b7 <rb_strcasecmp@plt+0xeb67>
  4076f0:	call   402150 <strpbrk@plt>
  4076f5:	mov    QWORD PTR [rbp-0x10],rax
  4076f9:	cmp    rax,0x0
  4076fd:	je     40770a <rb_strcasecmp@plt+0x51ba>
  407703:	mov    rax,QWORD PTR [rbp-0x10]
  407707:	mov    BYTE PTR [rax],0x0
  40770a:	lea    rax,[rbp-0xa0]
  407711:	mov    QWORD PTR [rbp-0x10],rax
  407715:	call   402240 <__ctype_b_loc@plt>
  40771a:	mov    rax,QWORD PTR [rax]
  40771d:	mov    rcx,QWORD PTR [rbp-0x10]
  407721:	movsx  edx,BYTE PTR [rcx]
  407724:	movsxd rcx,edx
  407727:	movzx  edx,WORD PTR [rax+rcx*2]
  40772b:	and    edx,0x2000
  407731:	cmp    edx,0x0
  407734:	je     40774b <rb_strcasecmp@plt+0x51fb>
  40773a:	mov    rax,QWORD PTR [rbp-0x10]
  40773e:	add    rax,0x1
  407742:	mov    QWORD PTR [rbp-0x10],rax
  407746:	jmp    407715 <rb_strcasecmp@plt+0x51c5>
  40774b:	mov    rax,QWORD PTR [rbp-0x10]
  40774f:	movsx  ecx,BYTE PTR [rax]
  407752:	cmp    ecx,0x0
  407755:	jne    407760 <rb_strcasecmp@plt+0x5210>
  40775b:	jmp    4076c0 <rb_strcasecmp@plt+0x5170>
  407760:	mov    rax,QWORD PTR [rbp-0x10]
  407764:	movsx  ecx,BYTE PTR [rax]
  407767:	cmp    ecx,0x23
  40776a:	je     407780 <rb_strcasecmp@plt+0x5230>
  407770:	mov    rax,QWORD PTR [rbp-0x10]
  407774:	movsx  ecx,BYTE PTR [rax]
  407777:	cmp    ecx,0x3b
  40777a:	jne    407785 <rb_strcasecmp@plt+0x5235>
  407780:	jmp    4076c0 <rb_strcasecmp@plt+0x5170>
  407785:	mov    rax,QWORD PTR [rbp-0x10]
  407789:	mov    QWORD PTR [rbp-0x18],rax
  40778d:	call   402240 <__ctype_b_loc@plt>
  407792:	xor    ecx,ecx
  407794:	mov    dl,cl
  407796:	mov    rax,QWORD PTR [rax]
  407799:	mov    rsi,QWORD PTR [rbp-0x10]
  40779d:	movsx  ecx,BYTE PTR [rsi]
  4077a0:	movsxd rsi,ecx
  4077a3:	movzx  ecx,WORD PTR [rax+rsi*2]
  4077a7:	and    ecx,0x2000
  4077ad:	cmp    ecx,0x0
  4077b0:	mov    BYTE PTR [rbp-0xa9],dl
  4077b6:	jne    4077cf <rb_strcasecmp@plt+0x527f>
  4077bc:	mov    rax,QWORD PTR [rbp-0x10]
  4077c0:	movsx  ecx,BYTE PTR [rax]
  4077c3:	cmp    ecx,0x0
  4077c6:	setne  dl
  4077c9:	mov    BYTE PTR [rbp-0xa9],dl
  4077cf:	mov    al,BYTE PTR [rbp-0xa9]
  4077d5:	test   al,0x1
  4077d7:	jne    4077e2 <rb_strcasecmp@plt+0x5292>
  4077dd:	jmp    4077f3 <rb_strcasecmp@plt+0x52a3>
  4077e2:	mov    rax,QWORD PTR [rbp-0x10]
  4077e6:	add    rax,0x1
  4077ea:	mov    QWORD PTR [rbp-0x10],rax
  4077ee:	jmp    40778d <rb_strcasecmp@plt+0x523d>
  4077f3:	mov    rax,QWORD PTR [rbp-0x10]
  4077f7:	movsx  ecx,BYTE PTR [rax]
  4077fa:	cmp    ecx,0x0
  4077fd:	jne    407808 <rb_strcasecmp@plt+0x52b8>
  407803:	jmp    4076c0 <rb_strcasecmp@plt+0x5170>
  407808:	mov    rax,QWORD PTR [rbp-0x10]
  40780c:	mov    rcx,rax
  40780f:	add    rcx,0x1
  407813:	mov    QWORD PTR [rbp-0x10],rcx
  407817:	mov    BYTE PTR [rax],0x0
  40781a:	call   402240 <__ctype_b_loc@plt>
  40781f:	mov    rax,QWORD PTR [rax]
  407822:	mov    rcx,QWORD PTR [rbp-0x10]
  407826:	movsx  edx,BYTE PTR [rcx]
  407829:	movsxd rcx,edx
  40782c:	movzx  edx,WORD PTR [rax+rcx*2]
  407830:	and    edx,0x2000
  407836:	cmp    edx,0x0
  407839:	je     407850 <rb_strcasecmp@plt+0x5300>
  40783f:	mov    rax,QWORD PTR [rbp-0x10]
  407843:	add    rax,0x1
  407847:	mov    QWORD PTR [rbp-0x10],rax
  40784b:	jmp    40781a <rb_strcasecmp@plt+0x52ca>
  407850:	mov    rax,QWORD PTR [rbp-0x10]
  407854:	mov    QWORD PTR [rbp-0x20],rax
  407858:	mov    rdi,QWORD PTR [rbp-0x20]
  40785c:	lea    rsi,[rip+0x8f57]        # 4107ba <rb_strcasecmp@plt+0xe26a>
  407863:	call   402150 <strpbrk@plt>
  407868:	mov    QWORD PTR [rbp-0x10],rax
  40786c:	cmp    rax,0x0
  407870:	je     40787d <rb_strcasecmp@plt+0x532d>
  407876:	mov    rax,QWORD PTR [rbp-0x10]
  40787a:	mov    BYTE PTR [rax],0x0
  40787d:	mov    rdi,QWORD PTR [rbp-0x18]
  407881:	lea    rsi,[rip+0x8f35]        # 4107bd <rb_strcasecmp@plt+0xe26d>
  407888:	call   402550 <rb_strcasecmp@plt>
  40788d:	cmp    eax,0x0
  407890:	jne    4078b9 <rb_strcasecmp@plt+0x5369>
  407896:	lea    rdi,[rip+0x13933]        # 41b1d0 <rb_strcasecmp@plt+0x18c80>
  40789d:	mov    eax,0x100
  4078a2:	mov    edx,eax
  4078a4:	mov    rsi,QWORD PTR [rbp-0x20]
  4078a8:	call   4021d0 <rb_strlcpy@plt>
  4078ad:	mov    QWORD PTR [rbp-0xb8],rax
  4078b4:	jmp    4078e0 <rb_strcasecmp@plt+0x5390>
  4078b9:	mov    rdi,QWORD PTR [rbp-0x18]
  4078bd:	lea    rsi,[rip+0x8f00]        # 4107c4 <rb_strcasecmp@plt+0xe274>
  4078c4:	call   402550 <rb_strcasecmp@plt>
  4078c9:	cmp    eax,0x0
  4078cc:	jne    4078db <rb_strcasecmp@plt+0x538b>
  4078d2:	mov    rdi,QWORD PTR [rbp-0x20]
  4078d6:	call   407910 <rb_strcasecmp@plt+0x53c0>
  4078db:	jmp    4078e0 <rb_strcasecmp@plt+0x5390>
  4078e0:	jmp    4076c0 <rb_strcasecmp@plt+0x5170>
  4078e5:	mov    rdi,QWORD PTR [rbp-0xa8]
  4078ec:	call   402490 <fclose@plt>
  4078f1:	mov    DWORD PTR [rbp-0x4],0x0
  4078f8:	mov    DWORD PTR [rbp-0xbc],eax
  4078fe:	mov    eax,DWORD PTR [rbp-0x4]
  407901:	add    rsp,0xc0
  407908:	pop    rbp
  407909:	ret    
  40790a:	nop    WORD PTR [rax+rax*1+0x0]
  407910:	push   rbp
  407911:	mov    rbp,rsp
  407914:	sub    rsp,0x60
  407918:	lea    rax,[rip+0x136b5]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  40791f:	mov    QWORD PTR [rbp-0x8],rdi
  407923:	cmp    DWORD PTR [rax],0xa
  407926:	jl     407931 <rb_strcasecmp@plt+0x53e1>
  40792c:	jmp    407a19 <rb_strcasecmp@plt+0x54c9>
  407931:	xor    esi,esi
  407933:	mov    eax,0x30
  407938:	mov    edx,eax
  40793a:	lea    rcx,[rbp-0x38]
  40793e:	mov    rdi,rcx
  407941:	mov    QWORD PTR [rbp-0x48],rcx
  407945:	call   402040 <memset@plt>
  40794a:	mov    DWORD PTR [rbp-0x34],0x0
  407951:	mov    DWORD PTR [rbp-0x30],0x2
  407958:	mov    DWORD PTR [rbp-0x38],0x5
  40795f:	mov    rdi,QWORD PTR [rbp-0x8]
  407963:	lea    rsi,[rip+0x8e53]        # 4107bd <rb_strcasecmp@plt+0xe26d>
  40796a:	mov    rdx,QWORD PTR [rbp-0x48]
  40796e:	lea    rcx,[rbp-0x40]
  407972:	call   402100 <getaddrinfo@plt>
  407977:	cmp    eax,0x0
  40797a:	je     407985 <rb_strcasecmp@plt+0x5435>
  407980:	jmp    407a19 <rb_strcasecmp@plt+0x54c9>
  407985:	cmp    QWORD PTR [rbp-0x40],0x0
  40798a:	jne    407995 <rb_strcasecmp@plt+0x5445>
  407990:	jmp    407a19 <rb_strcasecmp@plt+0x54c9>
  407995:	lea    rax,[rip+0x13638]        # 41afd4 <rb_strcasecmp@plt+0x18a84>
  40799c:	lea    rcx,[rip+0x1392d]        # 41b2d0 <rb_strcasecmp@plt+0x18d80>
  4079a3:	movsxd rdx,DWORD PTR [rax]
  4079a6:	shl    rdx,0x7
  4079aa:	mov    rsi,rcx
  4079ad:	add    rsi,rdx
  4079b0:	mov    rdx,QWORD PTR [rbp-0x40]
  4079b4:	mov    rdx,QWORD PTR [rdx+0x18]
  4079b8:	mov    rdi,QWORD PTR [rbp-0x40]
  4079bc:	mov    r8d,DWORD PTR [rdi+0x10]
  4079c0:	mov    edi,r8d
  4079c3:	mov    QWORD PTR [rbp-0x50],rdi
  4079c7:	mov    rdi,rsi
  4079ca:	mov    rsi,rdx
  4079cd:	mov    rdx,QWORD PTR [rbp-0x50]
  4079d1:	mov    QWORD PTR [rbp-0x58],rax
  4079d5:	mov    QWORD PTR [rbp-0x60],rcx
  4079d9:	call   402540 <memcpy@plt>
  4079de:	mov    rax,QWORD PTR [rbp-0x58]
  4079e2:	movsxd rcx,DWORD PTR [rax]
  4079e5:	shl    rcx,0x7
  4079e9:	mov    rdx,QWORD PTR [rbp-0x60]
  4079ed:	add    rdx,rcx
  4079f0:	mov    r9w,WORD PTR [rdx]
  4079f4:	movsxd rcx,DWORD PTR [rax]
  4079f7:	shl    rcx,0x7
  4079fb:	mov    rdx,QWORD PTR [rbp-0x60]
  4079ff:	add    rdx,rcx
  407a02:	mov    WORD PTR [rdx],r9w
  407a06:	mov    r8d,DWORD PTR [rax]
  407a09:	add    r8d,0x1
  407a0d:	mov    DWORD PTR [rax],r8d
  407a10:	mov    rdi,QWORD PTR [rbp-0x40]
  407a14:	call   4021f0 <freeaddrinfo@plt>
  407a19:	add    rsp,0x60
  407a1d:	pop    rbp
  407a1e:	ret    
  407a1f:	nop
  407a20:	push   rbp
  407a21:	mov    rbp,rsp
  407a24:	sub    rsp,0x30
  407a28:	mov    QWORD PTR [rbp-0x8],rdi
  407a2c:	mov    QWORD PTR [rbp-0x10],rsi
  407a30:	mov    QWORD PTR [rbp-0x18],rdx
  407a34:	mov    QWORD PTR [rbp-0x20],rcx
  407a38:	mov    DWORD PTR [rbp-0x24],r8d
  407a3c:	mov    rdi,QWORD PTR [rbp-0x8]
  407a40:	mov    rsi,QWORD PTR [rbp-0x10]
  407a44:	mov    rdx,QWORD PTR [rbp-0x18]
  407a48:	mov    rcx,QWORD PTR [rbp-0x20]
  407a4c:	movsxd r8,DWORD PTR [rbp-0x24]
  407a50:	call   407a90 <rb_strcasecmp@plt+0x5540>
  407a55:	mov    DWORD PTR [rbp-0x28],eax
  407a58:	cmp    DWORD PTR [rbp-0x28],0x0
  407a5c:	jle    407a79 <rb_strcasecmp@plt+0x5529>
  407a62:	mov    rax,QWORD PTR [rbp-0x20]
  407a66:	movsx  ecx,BYTE PTR [rax]
  407a69:	cmp    ecx,0x2e
  407a6c:	jne    407a79 <rb_strcasecmp@plt+0x5529>
  407a72:	mov    rax,QWORD PTR [rbp-0x20]
  407a76:	mov    BYTE PTR [rax],0x0
  407a79:	mov    eax,DWORD PTR [rbp-0x28]
  407a7c:	add    rsp,0x30
  407a80:	pop    rbp
  407a81:	ret    
  407a82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a8c:	nop    DWORD PTR [rax+0x0]
  407a90:	push   rbp
  407a91:	mov    rbp,rsp
  407a94:	sub    rsp,0x140
  407a9b:	mov    eax,0xff
  407aa0:	mov    r9d,eax
  407aa3:	lea    r10,[rbp-0x130]
  407aaa:	mov    QWORD PTR [rbp-0x10],rdi
  407aae:	mov    QWORD PTR [rbp-0x18],rsi
  407ab2:	mov    QWORD PTR [rbp-0x20],rdx
  407ab6:	mov    QWORD PTR [rbp-0x28],rcx
  407aba:	mov    QWORD PTR [rbp-0x30],r8
  407abe:	mov    rdi,QWORD PTR [rbp-0x10]
  407ac2:	mov    rsi,QWORD PTR [rbp-0x18]
  407ac6:	mov    rdx,QWORD PTR [rbp-0x20]
  407aca:	mov    rcx,r10
  407acd:	mov    r8,r9
  407ad0:	call   408160 <rb_strcasecmp@plt+0x5c10>
  407ad5:	mov    DWORD PTR [rbp-0x134],eax
  407adb:	cmp    eax,0xffffffff
  407ade:	jne    407af0 <rb_strcasecmp@plt+0x55a0>
  407ae4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407aeb:	jmp    407b22 <rb_strcasecmp@plt+0x55d2>
  407af0:	lea    rdi,[rbp-0x130]
  407af7:	mov    rsi,QWORD PTR [rbp-0x28]
  407afb:	mov    rdx,QWORD PTR [rbp-0x30]
  407aff:	call   408440 <rb_strcasecmp@plt+0x5ef0>
  407b04:	cmp    eax,0xffffffff
  407b07:	jne    407b19 <rb_strcasecmp@plt+0x55c9>
  407b0d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b14:	jmp    407b22 <rb_strcasecmp@plt+0x55d2>
  407b19:	mov    eax,DWORD PTR [rbp-0x134]
  407b1f:	mov    DWORD PTR [rbp-0x4],eax
  407b22:	mov    eax,DWORD PTR [rbp-0x4]
  407b25:	add    rsp,0x140
  407b2c:	pop    rbp
  407b2d:	ret    
  407b2e:	xchg   ax,ax
  407b30:	push   rbp
  407b31:	mov    rbp,rsp
  407b34:	sub    rsp,0x20
  407b38:	mov    QWORD PTR [rbp-0x10],rdi
  407b3c:	mov    QWORD PTR [rbp-0x18],rsi
  407b40:	mov    rsi,QWORD PTR [rbp-0x10]
  407b44:	mov    QWORD PTR [rbp-0x20],rsi
  407b48:	mov    rsi,QWORD PTR [rbp-0x18]
  407b4c:	lea    rdi,[rbp-0x10]
  407b50:	call   407b90 <rb_strcasecmp@plt+0x5640>
  407b55:	cmp    eax,0xffffffff
  407b58:	jne    407b6a <rb_strcasecmp@plt+0x561a>
  407b5e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b65:	jmp    407b7a <rb_strcasecmp@plt+0x562a>
  407b6a:	mov    rax,QWORD PTR [rbp-0x10]
  407b6e:	mov    rcx,QWORD PTR [rbp-0x20]
  407b72:	sub    rax,rcx
  407b75:	mov    edx,eax
  407b77:	mov    DWORD PTR [rbp-0x4],edx
  407b7a:	mov    eax,DWORD PTR [rbp-0x4]
  407b7d:	add    rsp,0x20
  407b81:	pop    rbp
  407b82:	ret    
  407b83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b8d:	nop    DWORD PTR [rax]
  407b90:	push   rbp
  407b91:	mov    rbp,rsp
  407b94:	sub    rsp,0x40
  407b98:	mov    QWORD PTR [rbp-0x10],rdi
  407b9c:	mov    QWORD PTR [rbp-0x18],rsi
  407ba0:	mov    rsi,QWORD PTR [rbp-0x10]
  407ba4:	mov    rsi,QWORD PTR [rsi]
  407ba7:	mov    QWORD PTR [rbp-0x20],rsi
  407bab:	xor    eax,eax
  407bad:	mov    cl,al
  407baf:	mov    rdx,QWORD PTR [rbp-0x20]
  407bb3:	cmp    rdx,QWORD PTR [rbp-0x18]
  407bb7:	mov    BYTE PTR [rbp-0x29],cl
  407bba:	jae    407be0 <rb_strcasecmp@plt+0x5690>
  407bc0:	mov    rax,QWORD PTR [rbp-0x20]
  407bc4:	mov    rcx,rax
  407bc7:	add    rcx,0x1
  407bcb:	mov    QWORD PTR [rbp-0x20],rcx
  407bcf:	movzx  edx,BYTE PTR [rax]
  407bd2:	mov    DWORD PTR [rbp-0x24],edx
  407bd5:	cmp    edx,0x0
  407bd8:	setne  sil
  407bdc:	mov    BYTE PTR [rbp-0x29],sil
  407be0:	mov    al,BYTE PTR [rbp-0x29]
  407be3:	test   al,0x1
  407be5:	jne    407bf0 <rb_strcasecmp@plt+0x56a0>
  407beb:	jmp    407cbd <rb_strcasecmp@plt+0x576d>
  407bf0:	mov    eax,DWORD PTR [rbp-0x24]
  407bf3:	and    eax,0xc0
  407bf8:	mov    DWORD PTR [rbp-0x30],eax
  407bfb:	je     407c30 <rb_strcasecmp@plt+0x56e0>
  407c01:	jmp    407c06 <rb_strcasecmp@plt+0x56b6>
  407c06:	mov    eax,DWORD PTR [rbp-0x30]
  407c09:	sub    eax,0x40
  407c0c:	mov    DWORD PTR [rbp-0x34],eax
  407c0f:	je     407c47 <rb_strcasecmp@plt+0x56f7>
  407c15:	jmp    407c1a <rb_strcasecmp@plt+0x56ca>
  407c1a:	mov    eax,DWORD PTR [rbp-0x30]
  407c1d:	sub    eax,0xc0
  407c22:	mov    DWORD PTR [rbp-0x38],eax
  407c25:	je     407c90 <rb_strcasecmp@plt+0x5740>
  407c2b:	jmp    407ca1 <rb_strcasecmp@plt+0x5751>
  407c30:	mov    eax,DWORD PTR [rbp-0x24]
  407c33:	mov    rcx,QWORD PTR [rbp-0x20]
  407c37:	mov    eax,eax
  407c39:	mov    edx,eax
  407c3b:	add    rcx,rdx
  407c3e:	mov    QWORD PTR [rbp-0x20],rcx
  407c42:	jmp    407bab <rb_strcasecmp@plt+0x565b>
  407c47:	mov    rax,QWORD PTR [rbp-0x20]
  407c4b:	add    rax,0xffffffffffffffff
  407c4f:	mov    rdi,rax
  407c52:	call   408820 <rb_strcasecmp@plt+0x62d0>
  407c57:	mov    DWORD PTR [rbp-0x28],eax
  407c5a:	cmp    eax,0x0
  407c5d:	jge    407c7a <rb_strcasecmp@plt+0x572a>
  407c63:	call   4023c0 <__errno_location@plt>
  407c68:	mov    DWORD PTR [rax],0x5a
  407c6e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c75:	jmp    407cf4 <rb_strcasecmp@plt+0x57a4>
  407c7a:	mov    eax,DWORD PTR [rbp-0x28]
  407c7d:	mov    rcx,QWORD PTR [rbp-0x20]
  407c81:	movsxd rdx,eax
  407c84:	add    rcx,rdx
  407c87:	mov    QWORD PTR [rbp-0x20],rcx
  407c8b:	jmp    407bab <rb_strcasecmp@plt+0x565b>
  407c90:	mov    rax,QWORD PTR [rbp-0x20]
  407c94:	add    rax,0x1
  407c98:	mov    QWORD PTR [rbp-0x20],rax
  407c9c:	jmp    407cb8 <rb_strcasecmp@plt+0x5768>
  407ca1:	call   4023c0 <__errno_location@plt>
  407ca6:	mov    DWORD PTR [rax],0x5a
  407cac:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407cb3:	jmp    407cf4 <rb_strcasecmp@plt+0x57a4>
  407cb8:	jmp    407cbd <rb_strcasecmp@plt+0x576d>
  407cbd:	mov    rax,QWORD PTR [rbp-0x20]
  407cc1:	cmp    rax,QWORD PTR [rbp-0x18]
  407cc5:	jbe    407ce2 <rb_strcasecmp@plt+0x5792>
  407ccb:	call   4023c0 <__errno_location@plt>
  407cd0:	mov    DWORD PTR [rax],0x5a
  407cd6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407cdd:	jmp    407cf4 <rb_strcasecmp@plt+0x57a4>
  407ce2:	mov    rax,QWORD PTR [rbp-0x20]
  407ce6:	mov    rcx,QWORD PTR [rbp-0x10]
  407cea:	mov    QWORD PTR [rcx],rax
  407ced:	mov    DWORD PTR [rbp-0x4],0x0
  407cf4:	mov    eax,DWORD PTR [rbp-0x4]
  407cf7:	add    rsp,0x40
  407cfb:	pop    rbp
  407cfc:	ret    
  407cfd:	nop    DWORD PTR [rax]
  407d00:	push   rbp
  407d01:	mov    rbp,rsp
  407d04:	mov    QWORD PTR [rbp-0x8],rdi
  407d08:	mov    rdi,QWORD PTR [rbp-0x8]
  407d0c:	mov    QWORD PTR [rbp-0x18],rdi
  407d10:	mov    rdi,QWORD PTR [rbp-0x18]
  407d14:	movzx  eax,BYTE PTR [rdi]
  407d17:	mov    cx,ax
  407d1a:	movzx  eax,cx
  407d1d:	shl    eax,0x8
  407d20:	mov    rdi,QWORD PTR [rbp-0x18]
  407d24:	movzx  edx,BYTE PTR [rdi+0x1]
  407d28:	mov    cx,dx
  407d2b:	movzx  edx,cx
  407d2e:	or     eax,edx
  407d30:	mov    DWORD PTR [rbp-0xc],eax
  407d33:	mov    rdi,QWORD PTR [rbp-0x8]
  407d37:	add    rdi,0x2
  407d3b:	mov    QWORD PTR [rbp-0x8],rdi
  407d3f:	mov    eax,DWORD PTR [rbp-0xc]
  407d42:	pop    rbp
  407d43:	ret    
  407d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d4e:	xchg   ax,ax
  407d50:	push   rbp
  407d51:	mov    rbp,rsp
  407d54:	mov    QWORD PTR [rbp-0x8],rdi
  407d58:	mov    rdi,QWORD PTR [rbp-0x8]
  407d5c:	mov    QWORD PTR [rbp-0x18],rdi
  407d60:	mov    rdi,QWORD PTR [rbp-0x18]
  407d64:	movzx  eax,BYTE PTR [rdi]
  407d67:	shl    eax,0x18
  407d6a:	mov    rdi,QWORD PTR [rbp-0x18]
  407d6e:	movzx  ecx,BYTE PTR [rdi+0x1]
  407d72:	shl    ecx,0x10
  407d75:	or     eax,ecx
  407d77:	mov    rdi,QWORD PTR [rbp-0x18]
  407d7b:	movzx  ecx,BYTE PTR [rdi+0x2]
  407d7f:	shl    ecx,0x8
  407d82:	or     eax,ecx
  407d84:	mov    rdi,QWORD PTR [rbp-0x18]
  407d88:	movzx  ecx,BYTE PTR [rdi+0x3]
  407d8c:	or     eax,ecx
  407d8e:	mov    eax,eax
  407d90:	mov    edi,eax
  407d92:	mov    QWORD PTR [rbp-0x10],rdi
  407d96:	mov    rdi,QWORD PTR [rbp-0x8]
  407d9a:	add    rdi,0x4
  407d9e:	mov    QWORD PTR [rbp-0x8],rdi
  407da2:	mov    rax,QWORD PTR [rbp-0x10]
  407da6:	pop    rbp
  407da7:	ret    
  407da8:	nop    DWORD PTR [rax+rax*1+0x0]
  407db0:	push   rbp
  407db1:	mov    rbp,rsp
  407db4:	mov    DWORD PTR [rbp-0x4],edi
  407db7:	mov    QWORD PTR [rbp-0x10],rsi
  407dbb:	mov    edi,DWORD PTR [rbp-0x4]
  407dbe:	mov    ax,di
  407dc1:	mov    WORD PTR [rbp-0x12],ax
  407dc5:	mov    rsi,QWORD PTR [rbp-0x10]
  407dc9:	mov    QWORD PTR [rbp-0x20],rsi
  407dcd:	movzx  edi,WORD PTR [rbp-0x12]
  407dd1:	sar    edi,0x8
  407dd4:	mov    cl,dil
  407dd7:	mov    rsi,QWORD PTR [rbp-0x20]
  407ddb:	mov    rdx,rsi
  407dde:	add    rdx,0x1
  407de2:	mov    QWORD PTR [rbp-0x20],rdx
  407de6:	mov    BYTE PTR [rsi],cl
  407de8:	mov    ax,WORD PTR [rbp-0x12]
  407dec:	mov    cl,al
  407dee:	mov    rdx,QWORD PTR [rbp-0x20]
  407df2:	mov    BYTE PTR [rdx],cl
  407df4:	mov    rdx,QWORD PTR [rbp-0x10]
  407df8:	add    rdx,0x2
  407dfc:	mov    QWORD PTR [rbp-0x10],rdx
  407e00:	pop    rbp
  407e01:	ret    
  407e02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e0c:	nop    DWORD PTR [rax+0x0]
  407e10:	push   rbp
  407e11:	mov    rbp,rsp
  407e14:	mov    QWORD PTR [rbp-0x8],rdi
  407e18:	mov    QWORD PTR [rbp-0x10],rsi
  407e1c:	mov    rsi,QWORD PTR [rbp-0x8]
  407e20:	mov    eax,esi
  407e22:	mov    DWORD PTR [rbp-0x14],eax
  407e25:	mov    rsi,QWORD PTR [rbp-0x10]
  407e29:	mov    QWORD PTR [rbp-0x20],rsi
  407e2d:	mov    eax,DWORD PTR [rbp-0x14]
  407e30:	shr    eax,0x18
  407e33:	mov    cl,al
  407e35:	mov    rsi,QWORD PTR [rbp-0x20]
  407e39:	mov    rdi,rsi
  407e3c:	add    rdi,0x1
  407e40:	mov    QWORD PTR [rbp-0x20],rdi
  407e44:	mov    BYTE PTR [rsi],cl
  407e46:	mov    eax,DWORD PTR [rbp-0x14]
  407e49:	shr    eax,0x10
  407e4c:	mov    cl,al
  407e4e:	mov    rsi,QWORD PTR [rbp-0x20]
  407e52:	mov    rdi,rsi
  407e55:	add    rdi,0x1
  407e59:	mov    QWORD PTR [rbp-0x20],rdi
  407e5d:	mov    BYTE PTR [rsi],cl
  407e5f:	mov    eax,DWORD PTR [rbp-0x14]
  407e62:	shr    eax,0x8
  407e65:	mov    cl,al
  407e67:	mov    rsi,QWORD PTR [rbp-0x20]
  407e6b:	mov    rdi,rsi
  407e6e:	add    rdi,0x1
  407e72:	mov    QWORD PTR [rbp-0x20],rdi
  407e76:	mov    BYTE PTR [rsi],cl
  407e78:	mov    eax,DWORD PTR [rbp-0x14]
  407e7b:	mov    cl,al
  407e7d:	mov    rsi,QWORD PTR [rbp-0x20]
  407e81:	mov    BYTE PTR [rsi],cl
  407e83:	mov    rsi,QWORD PTR [rbp-0x10]
  407e87:	add    rsi,0x4
  407e8b:	mov    QWORD PTR [rbp-0x10],rsi
  407e8f:	pop    rbp
  407e90:	ret    
  407e91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  407ea0:	push   rbp
  407ea1:	mov    rbp,rsp
  407ea4:	sub    rsp,0x110
  407eab:	mov    QWORD PTR [rbp-0x10],rdi
  407eaf:	mov    DWORD PTR [rbp-0x14],esi
  407eb2:	mov    DWORD PTR [rbp-0x18],edx
  407eb5:	mov    QWORD PTR [rbp-0x20],rcx
  407eb9:	mov    DWORD PTR [rbp-0x24],r8d
  407ebd:	cmp    QWORD PTR [rbp-0x20],0x0
  407ec2:	je     407ed2 <rb_strcasecmp@plt+0x5982>
  407ec8:	cmp    DWORD PTR [rbp-0x24],0xc
  407ecc:	jge    407ede <rb_strcasecmp@plt+0x598e>
  407ed2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407ed9:	jmp    408112 <rb_strcasecmp@plt+0x5bc2>
  407ede:	lea    rax,[rbp-0xe0]
  407ee5:	mov    rcx,QWORD PTR [rbp-0x20]
  407ee9:	mov    DWORD PTR [rcx+0x8],0x0
  407ef0:	mov    QWORD PTR [rcx],0x0
  407ef7:	mov    rcx,QWORD PTR [rbp-0x20]
  407efb:	mov    QWORD PTR [rbp-0x30],rcx
  407eff:	mov    rcx,QWORD PTR [rbp-0x30]
  407f03:	mov    edx,DWORD PTR [rcx+0x8]
  407f06:	mov    rsi,QWORD PTR [rcx]
  407f09:	and    rsi,0xffffffffffff0000
  407f10:	mov    DWORD PTR [rcx+0x8],edx
  407f13:	mov    QWORD PTR [rcx],rsi
  407f16:	mov    rcx,QWORD PTR [rbp-0x30]
  407f1a:	mov    edx,DWORD PTR [rcx+0x8]
  407f1d:	mov    rsi,QWORD PTR [rcx]
  407f20:	and    rsi,0xffffffffff87ffff
  407f27:	mov    DWORD PTR [rcx+0x8],edx
  407f2a:	mov    QWORD PTR [rcx],rsi
  407f2d:	mov    rcx,QWORD PTR [rbp-0x30]
  407f31:	mov    edx,DWORD PTR [rcx+0x8]
  407f34:	mov    rsi,QWORD PTR [rcx]
  407f37:	or     rsi,0x10000
  407f3e:	mov    DWORD PTR [rcx+0x8],edx
  407f41:	mov    QWORD PTR [rcx],rsi
  407f44:	mov    rcx,QWORD PTR [rbp-0x30]
  407f48:	mov    edx,DWORD PTR [rcx+0x8]
  407f4b:	mov    rsi,QWORD PTR [rcx]
  407f4e:	and    rsi,0xfffffffff0ffffff
  407f55:	mov    DWORD PTR [rcx+0x8],edx
  407f58:	mov    QWORD PTR [rcx],rsi
  407f5b:	mov    rcx,QWORD PTR [rbp-0x20]
  407f5f:	add    rcx,0xc
  407f63:	mov    QWORD PTR [rbp-0x38],rcx
  407f67:	mov    edx,DWORD PTR [rbp-0x24]
  407f6a:	sub    edx,0xc
  407f6d:	mov    DWORD PTR [rbp-0x24],edx
  407f70:	mov    QWORD PTR [rbp-0xe8],rax
  407f77:	mov    rcx,QWORD PTR [rbp-0x20]
  407f7b:	mov    rsi,QWORD PTR [rbp-0xe8]
  407f82:	mov    rdi,rsi
  407f85:	add    rdi,0x8
  407f89:	mov    QWORD PTR [rbp-0xe8],rdi
  407f90:	mov    QWORD PTR [rsi],rcx
  407f93:	mov    rcx,QWORD PTR [rbp-0xe8]
  407f9a:	mov    rsi,rcx
  407f9d:	add    rsi,0x8
  407fa1:	mov    QWORD PTR [rbp-0xe8],rsi
  407fa8:	mov    QWORD PTR [rcx],0x0
  407faf:	add    rax,0xa0
  407fb5:	mov    QWORD PTR [rbp-0xf0],rax
  407fbc:	mov    edx,DWORD PTR [rbp-0x24]
  407fbf:	sub    edx,0x4
  407fc2:	mov    DWORD PTR [rbp-0x24],edx
  407fc5:	cmp    edx,0x0
  407fc8:	jge    407fda <rb_strcasecmp@plt+0x5a8a>
  407fce:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407fd5:	jmp    408112 <rb_strcasecmp@plt+0x5bc2>
  407fda:	lea    rcx,[rbp-0xe0]
  407fe1:	mov    rdi,QWORD PTR [rbp-0x10]
  407fe5:	mov    rsi,QWORD PTR [rbp-0x38]
  407fe9:	mov    edx,DWORD PTR [rbp-0x24]
  407fec:	mov    r8,QWORD PTR [rbp-0xf0]
  407ff3:	call   408120 <rb_strcasecmp@plt+0x5bd0>
  407ff8:	mov    DWORD PTR [rbp-0x3c],eax
  407ffb:	cmp    eax,0x0
  407ffe:	jge    408010 <rb_strcasecmp@plt+0x5ac0>
  408004:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40800b:	jmp    408112 <rb_strcasecmp@plt+0x5bc2>
  408010:	movsxd rax,DWORD PTR [rbp-0x3c]
  408014:	mov    rcx,QWORD PTR [rbp-0x38]
  408018:	add    rcx,rax
  40801b:	mov    QWORD PTR [rbp-0x38],rcx
  40801f:	mov    edx,DWORD PTR [rbp-0x3c]
  408022:	mov    esi,DWORD PTR [rbp-0x24]
  408025:	sub    esi,edx
  408027:	mov    DWORD PTR [rbp-0x24],esi
  40802a:	mov    di,WORD PTR [rbp-0x18]
  40802e:	mov    WORD PTR [rbp-0xf2],di
  408035:	mov    rax,QWORD PTR [rbp-0x38]
  408039:	mov    QWORD PTR [rbp-0x100],rax
  408040:	mov    r8b,BYTE PTR [rbp-0xf1]
  408047:	mov    rax,QWORD PTR [rbp-0x100]
  40804e:	mov    rcx,rax
  408051:	add    rcx,0x1
  408055:	mov    QWORD PTR [rbp-0x100],rcx
  40805c:	mov    BYTE PTR [rax],r8b
  40805f:	mov    r8b,BYTE PTR [rbp-0xf2]
  408066:	mov    rax,QWORD PTR [rbp-0x100]
  40806d:	mov    BYTE PTR [rax],r8b
  408070:	mov    rax,QWORD PTR [rbp-0x38]
  408074:	add    rax,0x2
  408078:	mov    QWORD PTR [rbp-0x38],rax
  40807c:	mov    di,WORD PTR [rbp-0x14]
  408080:	mov    WORD PTR [rbp-0x102],di
  408087:	mov    rax,QWORD PTR [rbp-0x38]
  40808b:	mov    QWORD PTR [rbp-0x110],rax
  408092:	mov    r8b,BYTE PTR [rbp-0x101]
  408099:	mov    rax,QWORD PTR [rbp-0x110]
  4080a0:	mov    rcx,rax
  4080a3:	add    rcx,0x1
  4080a7:	mov    QWORD PTR [rbp-0x110],rcx
  4080ae:	mov    BYTE PTR [rax],r8b
  4080b1:	mov    r8b,BYTE PTR [rbp-0x102]
  4080b8:	mov    rax,QWORD PTR [rbp-0x110]
  4080bf:	mov    BYTE PTR [rax],r8b
  4080c2:	mov    rax,QWORD PTR [rbp-0x38]
  4080c6:	add    rax,0x2
  4080ca:	mov    QWORD PTR [rbp-0x38],rax
  4080ce:	mov    edi,0x1
  4080d3:	call   4020d0 <htons@plt>
  4080d8:	mov    rcx,QWORD PTR [rbp-0x30]
  4080dc:	movzx  edx,ax
  4080df:	mov    r9d,edx
  4080e2:	mov    edx,DWORD PTR [rcx+0x8]
  4080e5:	mov    r10,QWORD PTR [rcx]
  4080e8:	shl    r9,0x20
  4080ec:	movabs r11,0xffff0000ffffffff
  4080f6:	and    r10,r11
  4080f9:	or     r10,r9
  4080fc:	mov    DWORD PTR [rcx+0x8],edx
  4080ff:	mov    QWORD PTR [rcx],r10
  408102:	mov    rcx,QWORD PTR [rbp-0x38]
  408106:	mov    r9,QWORD PTR [rbp-0x20]
  40810a:	sub    rcx,r9
  40810d:	mov    edx,ecx
  40810f:	mov    DWORD PTR [rbp-0x4],edx
  408112:	mov    eax,DWORD PTR [rbp-0x4]
  408115:	add    rsp,0x110
  40811c:	pop    rbp
  40811d:	ret    
  40811e:	xchg   ax,ax
  408120:	push   rbp
  408121:	mov    rbp,rsp
  408124:	sub    rsp,0x30
  408128:	mov    QWORD PTR [rbp-0x8],rdi
  40812c:	mov    QWORD PTR [rbp-0x10],rsi
  408130:	mov    DWORD PTR [rbp-0x14],edx
  408133:	mov    QWORD PTR [rbp-0x20],rcx
  408137:	mov    QWORD PTR [rbp-0x28],r8
  40813b:	mov    rdi,QWORD PTR [rbp-0x8]
  40813f:	mov    rsi,QWORD PTR [rbp-0x10]
  408143:	movsxd rdx,DWORD PTR [rbp-0x14]
  408147:	mov    rcx,QWORD PTR [rbp-0x20]
  40814b:	mov    r8,QWORD PTR [rbp-0x28]
  40814f:	call   408c10 <rb_strcasecmp@plt+0x66c0>
  408154:	add    rsp,0x30
  408158:	pop    rbp
  408159:	ret    
  40815a:	nop    WORD PTR [rax+rax*1+0x0]
  408160:	push   rbp
  408161:	mov    rbp,rsp
  408164:	sub    rsp,0x70
  408168:	mov    QWORD PTR [rbp-0x10],rdi
  40816c:	mov    QWORD PTR [rbp-0x18],rsi
  408170:	mov    QWORD PTR [rbp-0x20],rdx
  408174:	mov    QWORD PTR [rbp-0x28],rcx
  408178:	mov    QWORD PTR [rbp-0x30],r8
  40817c:	mov    DWORD PTR [rbp-0x50],0xffffffff
  408183:	mov    DWORD PTR [rbp-0x54],0x0
  40818a:	mov    rcx,QWORD PTR [rbp-0x28]
  40818e:	mov    QWORD PTR [rbp-0x48],rcx
  408192:	mov    rcx,QWORD PTR [rbp-0x20]
  408196:	mov    QWORD PTR [rbp-0x38],rcx
  40819a:	mov    rcx,QWORD PTR [rbp-0x28]
  40819e:	add    rcx,QWORD PTR [rbp-0x30]
  4081a2:	mov    QWORD PTR [rbp-0x40],rcx
  4081a6:	mov    rcx,QWORD PTR [rbp-0x38]
  4081aa:	cmp    rcx,QWORD PTR [rbp-0x10]
  4081ae:	jb     4081c2 <rb_strcasecmp@plt+0x5c72>
  4081b4:	mov    rax,QWORD PTR [rbp-0x38]
  4081b8:	cmp    rax,QWORD PTR [rbp-0x18]
  4081bc:	jb     4081d9 <rb_strcasecmp@plt+0x5c89>
  4081c2:	call   4023c0 <__errno_location@plt>
  4081c7:	mov    DWORD PTR [rax],0x5a
  4081cd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4081d4:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  4081d9:	jmp    4081de <rb_strcasecmp@plt+0x5c8e>
  4081de:	mov    rax,QWORD PTR [rbp-0x38]
  4081e2:	mov    rcx,rax
  4081e5:	add    rcx,0x1
  4081e9:	mov    QWORD PTR [rbp-0x38],rcx
  4081ed:	movzx  edx,BYTE PTR [rax]
  4081f0:	mov    DWORD PTR [rbp-0x4c],edx
  4081f3:	cmp    edx,0x0
  4081f6:	je     408403 <rb_strcasecmp@plt+0x5eb3>
  4081fc:	mov    eax,DWORD PTR [rbp-0x4c]
  4081ff:	and    eax,0xc0
  408204:	mov    DWORD PTR [rbp-0x5c],eax
  408207:	je     40823c <rb_strcasecmp@plt+0x5cec>
  40820d:	jmp    408212 <rb_strcasecmp@plt+0x5cc2>
  408212:	mov    eax,DWORD PTR [rbp-0x5c]
  408215:	sub    eax,0x40
  408218:	mov    DWORD PTR [rbp-0x60],eax
  40821b:	je     40823c <rb_strcasecmp@plt+0x5cec>
  408221:	jmp    408226 <rb_strcasecmp@plt+0x5cd6>
  408226:	mov    eax,DWORD PTR [rbp-0x5c]
  408229:	sub    eax,0xc0
  40822e:	mov    DWORD PTR [rbp-0x64],eax
  408231:	je     40830e <rb_strcasecmp@plt+0x5dbe>
  408237:	jmp    4083e7 <rb_strcasecmp@plt+0x5e97>
  40823c:	mov    rax,QWORD PTR [rbp-0x38]
  408240:	add    rax,0xffffffffffffffff
  408244:	mov    rdi,rax
  408247:	call   408820 <rb_strcasecmp@plt+0x62d0>
  40824c:	mov    DWORD PTR [rbp-0x58],eax
  40824f:	cmp    eax,0x0
  408252:	jge    40826f <rb_strcasecmp@plt+0x5d1f>
  408258:	call   4023c0 <__errno_location@plt>
  40825d:	mov    DWORD PTR [rax],0x5a
  408263:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40826a:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  40826f:	mov    rax,QWORD PTR [rbp-0x48]
  408273:	movsxd rcx,DWORD PTR [rbp-0x58]
  408277:	add    rax,rcx
  40827a:	add    rax,0x1
  40827e:	cmp    rax,QWORD PTR [rbp-0x40]
  408282:	jae    40829d <rb_strcasecmp@plt+0x5d4d>
  408288:	mov    rax,QWORD PTR [rbp-0x38]
  40828c:	movsxd rcx,DWORD PTR [rbp-0x58]
  408290:	add    rax,rcx
  408293:	cmp    rax,QWORD PTR [rbp-0x18]
  408297:	jb     4082b4 <rb_strcasecmp@plt+0x5d64>
  40829d:	call   4023c0 <__errno_location@plt>
  4082a2:	mov    DWORD PTR [rax],0x5a
  4082a8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4082af:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  4082b4:	mov    eax,DWORD PTR [rbp-0x58]
  4082b7:	add    eax,0x1
  4082ba:	add    eax,DWORD PTR [rbp-0x54]
  4082bd:	mov    DWORD PTR [rbp-0x54],eax
  4082c0:	mov    eax,DWORD PTR [rbp-0x4c]
  4082c3:	mov    cl,al
  4082c5:	mov    rdx,QWORD PTR [rbp-0x48]
  4082c9:	mov    rsi,rdx
  4082cc:	add    rsi,0x1
  4082d0:	mov    QWORD PTR [rbp-0x48],rsi
  4082d4:	mov    BYTE PTR [rdx],cl
  4082d6:	mov    rdi,QWORD PTR [rbp-0x48]
  4082da:	mov    rsi,QWORD PTR [rbp-0x38]
  4082de:	movsxd rdx,DWORD PTR [rbp-0x58]
  4082e2:	call   402540 <memcpy@plt>
  4082e7:	mov    eax,DWORD PTR [rbp-0x58]
  4082ea:	mov    rdx,QWORD PTR [rbp-0x48]
  4082ee:	movsxd rsi,eax
  4082f1:	add    rdx,rsi
  4082f4:	mov    QWORD PTR [rbp-0x48],rdx
  4082f8:	mov    eax,DWORD PTR [rbp-0x58]
  4082fb:	mov    rdx,QWORD PTR [rbp-0x38]
  4082ff:	movsxd rsi,eax
  408302:	add    rdx,rsi
  408305:	mov    QWORD PTR [rbp-0x38],rdx
  408309:	jmp    4083fe <rb_strcasecmp@plt+0x5eae>
  40830e:	mov    rax,QWORD PTR [rbp-0x38]
  408312:	cmp    rax,QWORD PTR [rbp-0x18]
  408316:	jb     408333 <rb_strcasecmp@plt+0x5de3>
  40831c:	call   4023c0 <__errno_location@plt>
  408321:	mov    DWORD PTR [rax],0x5a
  408327:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40832e:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  408333:	cmp    DWORD PTR [rbp-0x50],0x0
  408337:	jge    408351 <rb_strcasecmp@plt+0x5e01>
  40833d:	mov    rax,QWORD PTR [rbp-0x38]
  408341:	mov    rcx,QWORD PTR [rbp-0x20]
  408345:	sub    rax,rcx
  408348:	add    rax,0x1
  40834c:	mov    edx,eax
  40834e:	mov    DWORD PTR [rbp-0x50],edx
  408351:	mov    rax,QWORD PTR [rbp-0x10]
  408355:	mov    ecx,DWORD PTR [rbp-0x4c]
  408358:	and    ecx,0x3f
  40835b:	shl    ecx,0x8
  40835e:	mov    rdx,QWORD PTR [rbp-0x38]
  408362:	movzx  esi,BYTE PTR [rdx]
  408365:	and    esi,0xff
  40836b:	or     ecx,esi
  40836d:	movsxd rdx,ecx
  408370:	add    rax,rdx
  408373:	mov    QWORD PTR [rbp-0x38],rax
  408377:	mov    rax,QWORD PTR [rbp-0x38]
  40837b:	cmp    rax,QWORD PTR [rbp-0x10]
  40837f:	jb     408393 <rb_strcasecmp@plt+0x5e43>
  408385:	mov    rax,QWORD PTR [rbp-0x38]
  408389:	cmp    rax,QWORD PTR [rbp-0x18]
  40838d:	jb     4083aa <rb_strcasecmp@plt+0x5e5a>
  408393:	call   4023c0 <__errno_location@plt>
  408398:	mov    DWORD PTR [rax],0x5a
  40839e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4083a5:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  4083aa:	mov    eax,DWORD PTR [rbp-0x54]
  4083ad:	add    eax,0x2
  4083b0:	mov    DWORD PTR [rbp-0x54],eax
  4083b3:	movsxd rcx,DWORD PTR [rbp-0x54]
  4083b7:	mov    rdx,QWORD PTR [rbp-0x18]
  4083bb:	mov    rsi,QWORD PTR [rbp-0x10]
  4083bf:	sub    rdx,rsi
  4083c2:	cmp    rcx,rdx
  4083c5:	jl     4083e2 <rb_strcasecmp@plt+0x5e92>
  4083cb:	call   4023c0 <__errno_location@plt>
  4083d0:	mov    DWORD PTR [rax],0x5a
  4083d6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4083dd:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  4083e2:	jmp    4083fe <rb_strcasecmp@plt+0x5eae>
  4083e7:	call   4023c0 <__errno_location@plt>
  4083ec:	mov    DWORD PTR [rax],0x5a
  4083f2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4083f9:	jmp    40842a <rb_strcasecmp@plt+0x5eda>
  4083fe:	jmp    4081de <rb_strcasecmp@plt+0x5c8e>
  408403:	mov    rax,QWORD PTR [rbp-0x48]
  408407:	mov    BYTE PTR [rax],0x0
  40840a:	cmp    DWORD PTR [rbp-0x50],0x0
  40840e:	jge    408424 <rb_strcasecmp@plt+0x5ed4>
  408414:	mov    rax,QWORD PTR [rbp-0x38]
  408418:	mov    rcx,QWORD PTR [rbp-0x20]
  40841c:	sub    rax,rcx
  40841f:	mov    edx,eax
  408421:	mov    DWORD PTR [rbp-0x50],edx
  408424:	mov    eax,DWORD PTR [rbp-0x50]
  408427:	mov    DWORD PTR [rbp-0x4],eax
  40842a:	mov    eax,DWORD PTR [rbp-0x4]
  40842d:	add    rsp,0x70
  408431:	pop    rbp
  408432:	ret    
  408433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40843d:	nop    DWORD PTR [rax]
  408440:	push   rbp
  408441:	mov    rbp,rsp
  408444:	sub    rsp,0x50
  408448:	mov    QWORD PTR [rbp-0x10],rdi
  40844c:	mov    QWORD PTR [rbp-0x18],rsi
  408450:	mov    QWORD PTR [rbp-0x20],rdx
  408454:	mov    rdx,QWORD PTR [rbp-0x10]
  408458:	mov    QWORD PTR [rbp-0x28],rdx
  40845c:	mov    rdx,QWORD PTR [rbp-0x18]
  408460:	mov    QWORD PTR [rbp-0x30],rdx
  408464:	mov    rdx,QWORD PTR [rbp-0x18]
  408468:	add    rdx,QWORD PTR [rbp-0x20]
  40846c:	mov    QWORD PTR [rbp-0x38],rdx
  408470:	mov    rax,QWORD PTR [rbp-0x28]
  408474:	mov    rcx,rax
  408477:	add    rcx,0x1
  40847b:	mov    QWORD PTR [rbp-0x28],rcx
  40847f:	movsx  edx,BYTE PTR [rax]
  408482:	mov    DWORD PTR [rbp-0x40],edx
  408485:	cmp    edx,0x0
  408488:	je     40877f <rb_strcasecmp@plt+0x622f>
  40848e:	mov    eax,DWORD PTR [rbp-0x40]
  408491:	and    eax,0xc0
  408496:	cmp    eax,0xc0
  40849b:	jne    4084b8 <rb_strcasecmp@plt+0x5f68>
  4084a1:	call   4023c0 <__errno_location@plt>
  4084a6:	mov    DWORD PTR [rax],0x5a
  4084ac:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4084b3:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  4084b8:	mov    rax,QWORD PTR [rbp-0x30]
  4084bc:	cmp    rax,QWORD PTR [rbp-0x18]
  4084c0:	je     4084fd <rb_strcasecmp@plt+0x5fad>
  4084c6:	mov    rax,QWORD PTR [rbp-0x30]
  4084ca:	cmp    rax,QWORD PTR [rbp-0x38]
  4084ce:	jb     4084eb <rb_strcasecmp@plt+0x5f9b>
  4084d4:	call   4023c0 <__errno_location@plt>
  4084d9:	mov    DWORD PTR [rax],0x5a
  4084df:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4084e6:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  4084eb:	mov    rax,QWORD PTR [rbp-0x30]
  4084ef:	mov    rcx,rax
  4084f2:	add    rcx,0x1
  4084f6:	mov    QWORD PTR [rbp-0x30],rcx
  4084fa:	mov    BYTE PTR [rax],0x2e
  4084fd:	mov    rax,QWORD PTR [rbp-0x28]
  408501:	add    rax,0xffffffffffffffff
  408505:	mov    rdi,rax
  408508:	call   408820 <rb_strcasecmp@plt+0x62d0>
  40850d:	mov    DWORD PTR [rbp-0x44],eax
  408510:	cmp    eax,0x0
  408513:	jge    408530 <rb_strcasecmp@plt+0x5fe0>
  408519:	call   4023c0 <__errno_location@plt>
  40851e:	mov    DWORD PTR [rax],0x5a
  408524:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40852b:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  408530:	mov    rax,QWORD PTR [rbp-0x30]
  408534:	movsxd rcx,DWORD PTR [rbp-0x44]
  408538:	add    rax,rcx
  40853b:	cmp    rax,QWORD PTR [rbp-0x38]
  40853f:	jb     40855c <rb_strcasecmp@plt+0x600c>
  408545:	call   4023c0 <__errno_location@plt>
  40854a:	mov    DWORD PTR [rax],0x5a
  408550:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408557:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  40855c:	mov    eax,DWORD PTR [rbp-0x40]
  40855f:	and    eax,0xc0
  408564:	cmp    eax,0x40
  408567:	jne    4085d8 <rb_strcasecmp@plt+0x6088>
  40856d:	cmp    DWORD PTR [rbp-0x40],0x41
  408571:	je     40858e <rb_strcasecmp@plt+0x603e>
  408577:	call   4023c0 <__errno_location@plt>
  40857c:	mov    DWORD PTR [rax],0x16
  408582:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408589:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  40858e:	mov    rsi,QWORD PTR [rbp-0x30]
  408592:	mov    rdx,QWORD PTR [rbp-0x38]
  408596:	lea    rdi,[rbp-0x28]
  40859a:	call   4088c0 <rb_strcasecmp@plt+0x6370>
  40859f:	mov    DWORD PTR [rbp-0x48],eax
  4085a2:	cmp    eax,0x0
  4085a5:	jge    4085c2 <rb_strcasecmp@plt+0x6072>
  4085ab:	call   4023c0 <__errno_location@plt>
  4085b0:	mov    DWORD PTR [rax],0x5a
  4085b6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4085bd:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  4085c2:	mov    eax,DWORD PTR [rbp-0x48]
  4085c5:	mov    rcx,QWORD PTR [rbp-0x30]
  4085c9:	movsxd rdx,eax
  4085cc:	add    rcx,rdx
  4085cf:	mov    QWORD PTR [rbp-0x30],rcx
  4085d3:	jmp    408470 <rb_strcasecmp@plt+0x5f20>
  4085d8:	jmp    4085dd <rb_strcasecmp@plt+0x608d>
  4085dd:	cmp    DWORD PTR [rbp-0x44],0x0
  4085e1:	jle    40877a <rb_strcasecmp@plt+0x622a>
  4085e7:	mov    rax,QWORD PTR [rbp-0x28]
  4085eb:	mov    rcx,rax
  4085ee:	add    rcx,0x1
  4085f2:	mov    QWORD PTR [rbp-0x28],rcx
  4085f6:	mov    dl,BYTE PTR [rax]
  4085f8:	mov    BYTE PTR [rbp-0x39],dl
  4085fb:	movzx  edi,BYTE PTR [rbp-0x39]
  4085ff:	call   408b20 <rb_strcasecmp@plt+0x65d0>
  408604:	cmp    eax,0x0
  408607:	je     408661 <rb_strcasecmp@plt+0x6111>
  40860d:	mov    rax,QWORD PTR [rbp-0x30]
  408611:	add    rax,0x1
  408615:	cmp    rax,QWORD PTR [rbp-0x38]
  408619:	jb     408636 <rb_strcasecmp@plt+0x60e6>
  40861f:	call   4023c0 <__errno_location@plt>
  408624:	mov    DWORD PTR [rax],0x5a
  40862a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408631:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  408636:	mov    rax,QWORD PTR [rbp-0x30]
  40863a:	mov    rcx,rax
  40863d:	add    rcx,0x1
  408641:	mov    QWORD PTR [rbp-0x30],rcx
  408645:	mov    BYTE PTR [rax],0x5c
  408648:	mov    dl,BYTE PTR [rbp-0x39]
  40864b:	mov    rax,QWORD PTR [rbp-0x30]
  40864f:	mov    rcx,rax
  408652:	add    rcx,0x1
  408656:	mov    QWORD PTR [rbp-0x30],rcx
  40865a:	mov    BYTE PTR [rax],dl
  40865c:	jmp    408767 <rb_strcasecmp@plt+0x6217>
  408661:	movzx  edi,BYTE PTR [rbp-0x39]
  408665:	call   408be0 <rb_strcasecmp@plt+0x6690>
  40866a:	cmp    eax,0x0
  40866d:	jne    408729 <rb_strcasecmp@plt+0x61d9>
  408673:	mov    rax,QWORD PTR [rbp-0x30]
  408677:	add    rax,0x3
  40867b:	cmp    rax,QWORD PTR [rbp-0x38]
  40867f:	jb     40869c <rb_strcasecmp@plt+0x614c>
  408685:	call   4023c0 <__errno_location@plt>
  40868a:	mov    DWORD PTR [rax],0x5a
  408690:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408697:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  40869c:	mov    rax,QWORD PTR [rbp-0x30]
  4086a0:	mov    rcx,rax
  4086a3:	add    rcx,0x1
  4086a7:	mov    QWORD PTR [rbp-0x30],rcx
  4086ab:	mov    BYTE PTR [rax],0x5c
  4086ae:	movzx  eax,BYTE PTR [rbp-0x39]
  4086b2:	cdq    
  4086b3:	mov    esi,0x64
  4086b8:	idiv   esi
  4086ba:	movsxd rcx,eax
  4086bd:	lea    rdi,[rip+0x812c]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  4086c4:	mov    r8b,BYTE PTR [rdi+rcx*1]
  4086c8:	mov    rcx,QWORD PTR [rbp-0x30]
  4086cc:	mov    r9,rcx
  4086cf:	add    r9,0x1
  4086d3:	mov    QWORD PTR [rbp-0x30],r9
  4086d7:	mov    BYTE PTR [rcx],r8b
  4086da:	movzx  eax,BYTE PTR [rbp-0x39]
  4086de:	cdq    
  4086df:	idiv   esi
  4086e1:	mov    eax,edx
  4086e3:	cdq    
  4086e4:	mov    esi,0xa
  4086e9:	idiv   esi
  4086eb:	movsxd rcx,eax
  4086ee:	mov    r8b,BYTE PTR [rdi+rcx*1]
  4086f2:	mov    rcx,QWORD PTR [rbp-0x30]
  4086f6:	mov    r9,rcx
  4086f9:	add    r9,0x1
  4086fd:	mov    QWORD PTR [rbp-0x30],r9
  408701:	mov    BYTE PTR [rcx],r8b
  408704:	movzx  eax,BYTE PTR [rbp-0x39]
  408708:	cdq    
  408709:	idiv   esi
  40870b:	movsxd rcx,edx
  40870e:	mov    r8b,BYTE PTR [rdi+rcx*1]
  408712:	mov    rcx,QWORD PTR [rbp-0x30]
  408716:	mov    rdi,rcx
  408719:	add    rdi,0x1
  40871d:	mov    QWORD PTR [rbp-0x30],rdi
  408721:	mov    BYTE PTR [rcx],r8b
  408724:	jmp    408762 <rb_strcasecmp@plt+0x6212>
  408729:	mov    rax,QWORD PTR [rbp-0x30]
  40872d:	cmp    rax,QWORD PTR [rbp-0x38]
  408731:	jb     40874e <rb_strcasecmp@plt+0x61fe>
  408737:	call   4023c0 <__errno_location@plt>
  40873c:	mov    DWORD PTR [rax],0x5a
  408742:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408749:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  40874e:	mov    al,BYTE PTR [rbp-0x39]
  408751:	mov    rcx,QWORD PTR [rbp-0x30]
  408755:	mov    rdx,rcx
  408758:	add    rdx,0x1
  40875c:	mov    QWORD PTR [rbp-0x30],rdx
  408760:	mov    BYTE PTR [rcx],al
  408762:	jmp    408767 <rb_strcasecmp@plt+0x6217>
  408767:	jmp    40876c <rb_strcasecmp@plt+0x621c>
  40876c:	mov    eax,DWORD PTR [rbp-0x44]
  40876f:	add    eax,0xffffffff
  408772:	mov    DWORD PTR [rbp-0x44],eax
  408775:	jmp    4085dd <rb_strcasecmp@plt+0x608d>
  40877a:	jmp    408470 <rb_strcasecmp@plt+0x5f20>
  40877f:	mov    rax,QWORD PTR [rbp-0x30]
  408783:	cmp    rax,QWORD PTR [rbp-0x18]
  408787:	jne    4087c4 <rb_strcasecmp@plt+0x6274>
  40878d:	mov    rax,QWORD PTR [rbp-0x30]
  408791:	cmp    rax,QWORD PTR [rbp-0x38]
  408795:	jb     4087b2 <rb_strcasecmp@plt+0x6262>
  40879b:	call   4023c0 <__errno_location@plt>
  4087a0:	mov    DWORD PTR [rax],0x5a
  4087a6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4087ad:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  4087b2:	mov    rax,QWORD PTR [rbp-0x30]
  4087b6:	mov    rcx,rax
  4087b9:	add    rcx,0x1
  4087bd:	mov    QWORD PTR [rbp-0x30],rcx
  4087c1:	mov    BYTE PTR [rax],0x2e
  4087c4:	mov    rax,QWORD PTR [rbp-0x30]
  4087c8:	cmp    rax,QWORD PTR [rbp-0x38]
  4087cc:	jb     4087e9 <rb_strcasecmp@plt+0x6299>
  4087d2:	call   4023c0 <__errno_location@plt>
  4087d7:	mov    DWORD PTR [rax],0x5a
  4087dd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4087e4:	jmp    40880b <rb_strcasecmp@plt+0x62bb>
  4087e9:	mov    rax,QWORD PTR [rbp-0x30]
  4087ed:	mov    rcx,rax
  4087f0:	add    rcx,0x1
  4087f4:	mov    QWORD PTR [rbp-0x30],rcx
  4087f8:	mov    BYTE PTR [rax],0x0
  4087fb:	mov    rax,QWORD PTR [rbp-0x30]
  4087ff:	mov    rcx,QWORD PTR [rbp-0x18]
  408803:	sub    rax,rcx
  408806:	mov    edx,eax
  408808:	mov    DWORD PTR [rbp-0x4],edx
  40880b:	mov    eax,DWORD PTR [rbp-0x4]
  40880e:	add    rsp,0x50
  408812:	pop    rbp
  408813:	ret    
  408814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40881e:	xchg   ax,ax
  408820:	push   rbp
  408821:	mov    rbp,rsp
  408824:	mov    QWORD PTR [rbp-0x10],rdi
  408828:	mov    rdi,QWORD PTR [rbp-0x10]
  40882c:	mov    al,BYTE PTR [rdi]
  40882e:	mov    BYTE PTR [rbp-0x15],al
  408831:	movzx  ecx,BYTE PTR [rbp-0x15]
  408835:	and    ecx,0xc0
  40883b:	cmp    ecx,0xc0
  408841:	jne    408853 <rb_strcasecmp@plt+0x6303>
  408847:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40884e:	jmp    4088b9 <rb_strcasecmp@plt+0x6369>
  408853:	movzx  eax,BYTE PTR [rbp-0x15]
  408857:	and    eax,0xc0
  40885c:	cmp    eax,0x40
  40885f:	jne    4088b2 <rb_strcasecmp@plt+0x6362>
  408865:	movzx  eax,BYTE PTR [rbp-0x15]
  408869:	cmp    eax,0x41
  40886c:	jne    4088a6 <rb_strcasecmp@plt+0x6356>
  408872:	mov    rax,QWORD PTR [rbp-0x10]
  408876:	movzx  ecx,BYTE PTR [rax+0x1]
  40887a:	mov    DWORD PTR [rbp-0x14],ecx
  40887d:	cmp    ecx,0x0
  408880:	jne    40888d <rb_strcasecmp@plt+0x633d>
  408886:	mov    DWORD PTR [rbp-0x14],0x100
  40888d:	mov    eax,DWORD PTR [rbp-0x14]
  408890:	add    eax,0x7
  408893:	cdq    
  408894:	mov    ecx,0x8
  408899:	idiv   ecx
  40889b:	add    eax,0x1
  40889e:	mov    DWORD PTR [rbp-0x4],eax
  4088a1:	jmp    4088b9 <rb_strcasecmp@plt+0x6369>
  4088a6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4088ad:	jmp    4088b9 <rb_strcasecmp@plt+0x6369>
  4088b2:	movzx  eax,BYTE PTR [rbp-0x15]
  4088b6:	mov    DWORD PTR [rbp-0x4],eax
  4088b9:	mov    eax,DWORD PTR [rbp-0x4]
  4088bc:	pop    rbp
  4088bd:	ret    
  4088be:	xchg   ax,ax
  4088c0:	push   rbp
  4088c1:	mov    rbp,rsp
  4088c4:	sub    rsp,0x50
  4088c8:	mov    QWORD PTR [rbp-0x10],rdi
  4088cc:	mov    QWORD PTR [rbp-0x18],rsi
  4088d0:	mov    QWORD PTR [rbp-0x20],rdx
  4088d4:	mov    rdx,QWORD PTR [rbp-0x10]
  4088d8:	mov    rdx,QWORD PTR [rdx]
  4088db:	mov    QWORD PTR [rbp-0x28],rdx
  4088df:	mov    rdx,QWORD PTR [rbp-0x18]
  4088e3:	mov    QWORD PTR [rbp-0x30],rdx
  4088e7:	mov    rdx,QWORD PTR [rbp-0x28]
  4088eb:	movsx  eax,BYTE PTR [rdx]
  4088ee:	and    eax,0xff
  4088f3:	mov    DWORD PTR [rbp-0x3c],eax
  4088f6:	cmp    eax,0x0
  4088f9:	jne    408906 <rb_strcasecmp@plt+0x63b6>
  4088ff:	mov    DWORD PTR [rbp-0x3c],0x100
  408906:	mov    eax,DWORD PTR [rbp-0x3c]
  408909:	add    eax,0x3
  40890c:	cdq    
  40890d:	mov    ecx,0x4
  408912:	idiv   ecx
  408914:	mov    DWORD PTR [rbp-0x40],eax
  408917:	cmp    DWORD PTR [rbp-0x3c],0x63
  40891b:	jle    40892e <rb_strcasecmp@plt+0x63de>
  408921:	mov    eax,0x3
  408926:	mov    DWORD PTR [rbp-0x44],eax
  408929:	jmp    408944 <rb_strcasecmp@plt+0x63f4>
  40892e:	mov    eax,DWORD PTR [rbp-0x3c]
  408931:	cmp    eax,0x9
  408934:	mov    eax,0x2
  408939:	mov    ecx,0x1
  40893e:	cmovg  ecx,eax
  408941:	mov    DWORD PTR [rbp-0x44],ecx
  408944:	mov    eax,DWORD PTR [rbp-0x44]
  408947:	movsxd rcx,eax
  40894a:	add    rcx,0x6
  40894e:	movsxd rdx,DWORD PTR [rbp-0x40]
  408952:	add    rdx,rcx
  408955:	mov    eax,edx
  408957:	mov    DWORD PTR [rbp-0x40],eax
  40895a:	mov    rcx,QWORD PTR [rbp-0x18]
  40895e:	movsxd rdx,DWORD PTR [rbp-0x40]
  408962:	add    rcx,rdx
  408965:	cmp    rcx,QWORD PTR [rbp-0x20]
  408969:	jb     40897b <rb_strcasecmp@plt+0x642b>
  40896f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408976:	jmp    408b16 <rb_strcasecmp@plt+0x65c6>
  40897b:	mov    rax,QWORD PTR [rbp-0x28]
  40897f:	add    rax,0x1
  408983:	mov    QWORD PTR [rbp-0x28],rax
  408987:	mov    rdi,QWORD PTR [rbp-0x18]
  40898b:	lea    rsi,[rip+0x7e3d]        # 4107cf <rb_strcasecmp@plt+0xe27f>
  408992:	mov    al,0x0
  408994:	call   402260 <sprintf@plt>
  408999:	mov    rsi,QWORD PTR [rbp-0x18]
  40899d:	movsxd rdi,eax
  4089a0:	add    rsi,rdi
  4089a3:	mov    QWORD PTR [rbp-0x18],rsi
  4089a7:	mov    eax,DWORD PTR [rbp-0x3c]
  4089aa:	mov    DWORD PTR [rbp-0x38],eax
  4089ad:	cmp    DWORD PTR [rbp-0x38],0x7
  4089b1:	jle    408a00 <rb_strcasecmp@plt+0x64b0>
  4089b7:	mov    rdi,QWORD PTR [rbp-0x18]
  4089bb:	mov    rax,QWORD PTR [rbp-0x28]
  4089bf:	movsx  ecx,BYTE PTR [rax]
  4089c2:	and    ecx,0xff
  4089c8:	lea    rsi,[rip+0x7e04]        # 4107d3 <rb_strcasecmp@plt+0xe283>
  4089cf:	mov    edx,ecx
  4089d1:	mov    al,0x0
  4089d3:	call   402260 <sprintf@plt>
  4089d8:	mov    rsi,QWORD PTR [rbp-0x18]
  4089dc:	movsxd rdi,eax
  4089df:	add    rsi,rdi
  4089e2:	mov    QWORD PTR [rbp-0x18],rsi
  4089e6:	mov    eax,DWORD PTR [rbp-0x38]
  4089e9:	sub    eax,0x8
  4089ec:	mov    DWORD PTR [rbp-0x38],eax
  4089ef:	mov    rcx,QWORD PTR [rbp-0x28]
  4089f3:	add    rcx,0x1
  4089f7:	mov    QWORD PTR [rbp-0x28],rcx
  4089fb:	jmp    4089ad <rb_strcasecmp@plt+0x645d>
  408a00:	cmp    DWORD PTR [rbp-0x38],0x4
  408a04:	jle    408a69 <rb_strcasecmp@plt+0x6519>
  408a0a:	mov    rax,QWORD PTR [rbp-0x28]
  408a0e:	mov    rcx,rax
  408a11:	add    rcx,0x1
  408a15:	mov    QWORD PTR [rbp-0x28],rcx
  408a19:	mov    dl,BYTE PTR [rax]
  408a1b:	mov    BYTE PTR [rbp-0x31],dl
  408a1e:	mov    rdi,QWORD PTR [rbp-0x18]
  408a22:	movsx  esi,BYTE PTR [rbp-0x31]
  408a26:	mov    r8d,0x8
  408a2c:	sub    r8d,DWORD PTR [rbp-0x38]
  408a30:	mov    ecx,r8d
  408a33:	mov    r8d,0xff
  408a39:	shl    r8d,cl
  408a3c:	and    esi,r8d
  408a3f:	lea    rax,[rip+0x7d8d]        # 4107d3 <rb_strcasecmp@plt+0xe283>
  408a46:	mov    DWORD PTR [rbp-0x48],esi
  408a49:	mov    rsi,rax
  408a4c:	mov    edx,DWORD PTR [rbp-0x48]
  408a4f:	mov    al,0x0
  408a51:	call   402260 <sprintf@plt>
  408a56:	mov    rsi,QWORD PTR [rbp-0x18]
  408a5a:	movsxd rdi,eax
  408a5d:	add    rsi,rdi
  408a60:	mov    QWORD PTR [rbp-0x18],rsi
  408a64:	jmp    408ad8 <rb_strcasecmp@plt+0x6588>
  408a69:	cmp    DWORD PTR [rbp-0x38],0x0
  408a6d:	jle    408ad3 <rb_strcasecmp@plt+0x6583>
  408a73:	mov    rax,QWORD PTR [rbp-0x28]
  408a77:	mov    rcx,rax
  408a7a:	add    rcx,0x1
  408a7e:	mov    QWORD PTR [rbp-0x28],rcx
  408a82:	mov    dl,BYTE PTR [rax]
  408a84:	mov    BYTE PTR [rbp-0x31],dl
  408a87:	mov    rdi,QWORD PTR [rbp-0x18]
  408a8b:	movsx  esi,BYTE PTR [rbp-0x31]
  408a8f:	sar    esi,0x4
  408a92:	and    esi,0xf
  408a95:	mov    r8d,0x4
  408a9b:	sub    r8d,DWORD PTR [rbp-0x38]
  408a9f:	mov    ecx,r8d
  408aa2:	mov    r8d,0xf
  408aa8:	shl    r8d,cl
  408aab:	and    esi,r8d
  408aae:	lea    rax,[rip+0x7d23]        # 4107d8 <rb_strcasecmp@plt+0xe288>
  408ab5:	mov    DWORD PTR [rbp-0x4c],esi
  408ab8:	mov    rsi,rax
  408abb:	mov    edx,DWORD PTR [rbp-0x4c]
  408abe:	mov    al,0x0
  408ac0:	call   402260 <sprintf@plt>
  408ac5:	mov    rsi,QWORD PTR [rbp-0x18]
  408ac9:	movsxd rdi,eax
  408acc:	add    rsi,rdi
  408acf:	mov    QWORD PTR [rbp-0x18],rsi
  408ad3:	jmp    408ad8 <rb_strcasecmp@plt+0x6588>
  408ad8:	mov    rdi,QWORD PTR [rbp-0x18]
  408adc:	mov    edx,DWORD PTR [rbp-0x3c]
  408adf:	lea    rsi,[rip+0x7cf6]        # 4107dc <rb_strcasecmp@plt+0xe28c>
  408ae6:	mov    al,0x0
  408ae8:	call   402260 <sprintf@plt>
  408aed:	mov    rsi,QWORD PTR [rbp-0x18]
  408af1:	movsxd rdi,eax
  408af4:	add    rsi,rdi
  408af7:	mov    QWORD PTR [rbp-0x18],rsi
  408afb:	mov    rsi,QWORD PTR [rbp-0x28]
  408aff:	mov    rdi,QWORD PTR [rbp-0x10]
  408b03:	mov    QWORD PTR [rdi],rsi
  408b06:	mov    rsi,QWORD PTR [rbp-0x18]
  408b0a:	mov    rdi,QWORD PTR [rbp-0x30]
  408b0e:	sub    rsi,rdi
  408b11:	mov    eax,esi
  408b13:	mov    DWORD PTR [rbp-0x4],eax
  408b16:	mov    eax,DWORD PTR [rbp-0x4]
  408b19:	add    rsp,0x50
  408b1d:	pop    rbp
  408b1e:	ret    
  408b1f:	nop
  408b20:	push   rbp
  408b21:	mov    rbp,rsp
  408b24:	mov    DWORD PTR [rbp-0x8],edi
  408b27:	mov    edi,DWORD PTR [rbp-0x8]
  408b2a:	mov    eax,edi
  408b2c:	sub    eax,0x22
  408b2f:	mov    DWORD PTR [rbp-0xc],edi
  408b32:	mov    DWORD PTR [rbp-0x10],eax
  408b35:	je     408bbb <rb_strcasecmp@plt+0x666b>
  408b3b:	jmp    408b40 <rb_strcasecmp@plt+0x65f0>
  408b40:	mov    eax,DWORD PTR [rbp-0xc]
  408b43:	sub    eax,0x24
  408b46:	mov    DWORD PTR [rbp-0x14],eax
  408b49:	je     408bbb <rb_strcasecmp@plt+0x666b>
  408b4f:	jmp    408b54 <rb_strcasecmp@plt+0x6604>
  408b54:	mov    eax,DWORD PTR [rbp-0xc]
  408b57:	add    eax,0xffffffd8
  408b5a:	sub    eax,0x2
  408b5d:	mov    DWORD PTR [rbp-0x18],eax
  408b60:	jb     408bbb <rb_strcasecmp@plt+0x666b>
  408b66:	jmp    408b6b <rb_strcasecmp@plt+0x661b>
  408b6b:	mov    eax,DWORD PTR [rbp-0xc]
  408b6e:	sub    eax,0x2e
  408b71:	mov    DWORD PTR [rbp-0x1c],eax
  408b74:	je     408bbb <rb_strcasecmp@plt+0x666b>
  408b7a:	jmp    408b7f <rb_strcasecmp@plt+0x662f>
  408b7f:	mov    eax,DWORD PTR [rbp-0xc]
  408b82:	sub    eax,0x3b
  408b85:	mov    DWORD PTR [rbp-0x20],eax
  408b88:	je     408bbb <rb_strcasecmp@plt+0x666b>
  408b8e:	jmp    408b93 <rb_strcasecmp@plt+0x6643>
  408b93:	mov    eax,DWORD PTR [rbp-0xc]
  408b96:	sub    eax,0x40
  408b99:	mov    DWORD PTR [rbp-0x24],eax
  408b9c:	je     408bbb <rb_strcasecmp@plt+0x666b>
  408ba2:	jmp    408ba7 <rb_strcasecmp@plt+0x6657>
  408ba7:	mov    eax,DWORD PTR [rbp-0xc]
  408baa:	sub    eax,0x5c
  408bad:	mov    DWORD PTR [rbp-0x28],eax
  408bb0:	jne    408bc7 <rb_strcasecmp@plt+0x6677>
  408bb6:	jmp    408bbb <rb_strcasecmp@plt+0x666b>
  408bbb:	mov    DWORD PTR [rbp-0x4],0x1
  408bc2:	jmp    408bce <rb_strcasecmp@plt+0x667e>
  408bc7:	mov    DWORD PTR [rbp-0x4],0x0
  408bce:	mov    eax,DWORD PTR [rbp-0x4]
  408bd1:	pop    rbp
  408bd2:	ret    
  408bd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bdd:	nop    DWORD PTR [rax]
  408be0:	push   rbp
  408be1:	mov    rbp,rsp
  408be4:	xor    eax,eax
  408be6:	mov    cl,al
  408be8:	mov    DWORD PTR [rbp-0x4],edi
  408beb:	cmp    DWORD PTR [rbp-0x4],0x20
  408bef:	mov    BYTE PTR [rbp-0x5],cl
  408bf2:	jle    408c02 <rb_strcasecmp@plt+0x66b2>
  408bf8:	cmp    DWORD PTR [rbp-0x4],0x7f
  408bfc:	setl   al
  408bff:	mov    BYTE PTR [rbp-0x5],al
  408c02:	mov    al,BYTE PTR [rbp-0x5]
  408c05:	and    al,0x1
  408c07:	movzx  eax,al
  408c0a:	pop    rbp
  408c0b:	ret    
  408c0c:	nop    DWORD PTR [rax+0x0]
  408c10:	push   rbp
  408c11:	mov    rbp,rsp
  408c14:	sub    rsp,0x130
  408c1b:	mov    eax,0xff
  408c20:	mov    r9d,eax
  408c23:	lea    r10,[rbp-0x130]
  408c2a:	mov    QWORD PTR [rbp-0x10],rdi
  408c2e:	mov    QWORD PTR [rbp-0x18],rsi
  408c32:	mov    QWORD PTR [rbp-0x20],rdx
  408c36:	mov    QWORD PTR [rbp-0x28],rcx
  408c3a:	mov    QWORD PTR [rbp-0x30],r8
  408c3e:	mov    rdi,QWORD PTR [rbp-0x10]
  408c42:	mov    rsi,r10
  408c45:	mov    rdx,r9
  408c48:	call   408ca0 <rb_strcasecmp@plt+0x6750>
  408c4d:	cmp    eax,0xffffffff
  408c50:	jne    408c62 <rb_strcasecmp@plt+0x6712>
  408c56:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c5d:	jmp    408c88 <rb_strcasecmp@plt+0x6738>
  408c62:	lea    rdi,[rbp-0x130]
  408c69:	mov    rsi,QWORD PTR [rbp-0x18]
  408c6d:	mov    rax,QWORD PTR [rbp-0x20]
  408c71:	mov    ecx,eax
  408c73:	mov    rax,QWORD PTR [rbp-0x28]
  408c77:	mov    r8,QWORD PTR [rbp-0x30]
  408c7b:	mov    edx,ecx
  408c7d:	mov    rcx,rax
  408c80:	call   4091f0 <rb_strcasecmp@plt+0x6ca0>
  408c85:	mov    DWORD PTR [rbp-0x4],eax
  408c88:	mov    eax,DWORD PTR [rbp-0x4]
  408c8b:	add    rsp,0x130
  408c92:	pop    rbp
  408c93:	ret    
  408c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c9e:	xchg   ax,ax
  408ca0:	push   rbp
  408ca1:	mov    rbp,rsp
  408ca4:	sub    rsp,0x60
  408ca8:	mov    QWORD PTR [rbp-0x10],rdi
  408cac:	mov    QWORD PTR [rbp-0x18],rsi
  408cb0:	mov    QWORD PTR [rbp-0x20],rdx
  408cb4:	mov    DWORD PTR [rbp-0x50],0x0
  408cbb:	mov    DWORD PTR [rbp-0x4c],0x0
  408cc2:	mov    rdx,QWORD PTR [rbp-0x18]
  408cc6:	mov    QWORD PTR [rbp-0x30],rdx
  408cca:	mov    rdx,QWORD PTR [rbp-0x18]
  408cce:	add    rdx,QWORD PTR [rbp-0x20]
  408cd2:	mov    QWORD PTR [rbp-0x38],rdx
  408cd6:	mov    rdx,QWORD PTR [rbp-0x30]
  408cda:	mov    rsi,rdx
  408cdd:	add    rsi,0x1
  408ce1:	mov    QWORD PTR [rbp-0x30],rsi
  408ce5:	mov    QWORD PTR [rbp-0x28],rdx
  408ce9:	mov    rax,QWORD PTR [rbp-0x10]
  408ced:	mov    rcx,rax
  408cf0:	add    rcx,0x1
  408cf4:	mov    QWORD PTR [rbp-0x10],rcx
  408cf8:	movsx  edx,BYTE PTR [rax]
  408cfb:	mov    DWORD PTR [rbp-0x44],edx
  408cfe:	cmp    edx,0x0
  408d01:	je     4090f4 <rb_strcasecmp@plt+0x6ba4>
  408d07:	cmp    DWORD PTR [rbp-0x4c],0x0
  408d0b:	je     408f49 <rb_strcasecmp@plt+0x69f9>
  408d11:	cmp    DWORD PTR [rbp-0x44],0x5b
  408d15:	jne    408dfe <rb_strcasecmp@plt+0x68ae>
  408d1b:	mov    rdi,QWORD PTR [rbp-0x10]
  408d1f:	mov    esi,0x5d
  408d24:	call   402370 <strchr@plt>
  408d29:	mov    QWORD PTR [rbp-0x40],rax
  408d2d:	cmp    rax,0x0
  408d31:	jne    408d4e <rb_strcasecmp@plt+0x67fe>
  408d37:	call   4023c0 <__errno_location@plt>
  408d3c:	mov    DWORD PTR [rax],0x16
  408d42:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408d49:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408d4e:	mov    rax,QWORD PTR [rbp-0x40]
  408d52:	add    rax,0x2
  408d56:	mov    r8,QWORD PTR [rbp-0x38]
  408d5a:	lea    rdi,[rbp-0x10]
  408d5e:	mov    rsi,rax
  408d61:	lea    rdx,[rbp-0x28]
  408d65:	lea    rcx,[rbp-0x30]
  408d69:	call   409570 <rb_strcasecmp@plt+0x7020>
  408d6e:	mov    DWORD PTR [rbp-0x50],eax
  408d71:	cmp    eax,0x0
  408d74:	je     408d96 <rb_strcasecmp@plt+0x6846>
  408d7a:	mov    eax,DWORD PTR [rbp-0x50]
  408d7d:	mov    DWORD PTR [rbp-0x54],eax
  408d80:	call   4023c0 <__errno_location@plt>
  408d85:	mov    ecx,DWORD PTR [rbp-0x54]
  408d88:	mov    DWORD PTR [rax],ecx
  408d8a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408d91:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408d96:	mov    DWORD PTR [rbp-0x4c],0x0
  408d9d:	mov    rax,QWORD PTR [rbp-0x30]
  408da1:	mov    rcx,rax
  408da4:	add    rcx,0x1
  408da8:	mov    QWORD PTR [rbp-0x30],rcx
  408dac:	mov    QWORD PTR [rbp-0x28],rax
  408db0:	mov    rax,QWORD PTR [rbp-0x10]
  408db4:	mov    rcx,rax
  408db7:	add    rcx,0x1
  408dbb:	mov    QWORD PTR [rbp-0x10],rcx
  408dbf:	movsx  edx,BYTE PTR [rax]
  408dc2:	mov    DWORD PTR [rbp-0x44],edx
  408dc5:	cmp    edx,0x0
  408dc8:	jne    408dd3 <rb_strcasecmp@plt+0x6883>
  408dce:	jmp    409136 <rb_strcasecmp@plt+0x6be6>
  408dd3:	cmp    DWORD PTR [rbp-0x44],0x2e
  408dd7:	je     408df4 <rb_strcasecmp@plt+0x68a4>
  408ddd:	call   4023c0 <__errno_location@plt>
  408de2:	mov    DWORD PTR [rax],0x16
  408de8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408def:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408df4:	jmp    408df9 <rb_strcasecmp@plt+0x68a9>
  408df9:	jmp    408ce9 <rb_strcasecmp@plt+0x6799>
  408dfe:	mov    esi,DWORD PTR [rbp-0x44]
  408e01:	lea    rdi,[rip+0x79e8]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  408e08:	call   402370 <strchr@plt>
  408e0d:	mov    QWORD PTR [rbp-0x40],rax
  408e11:	cmp    rax,0x0
  408e15:	je     408f38 <rb_strcasecmp@plt+0x69e8>
  408e1b:	mov    rax,QWORD PTR [rbp-0x40]
  408e1f:	lea    rcx,[rip+0x79ca]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  408e26:	sub    rax,rcx
  408e29:	imul   rax,rax,0x64
  408e2d:	mov    edx,eax
  408e2f:	mov    DWORD PTR [rbp-0x48],edx
  408e32:	mov    rax,QWORD PTR [rbp-0x10]
  408e36:	mov    rcx,rax
  408e39:	add    rcx,0x1
  408e3d:	mov    QWORD PTR [rbp-0x10],rcx
  408e41:	movsx  edx,BYTE PTR [rax]
  408e44:	mov    DWORD PTR [rbp-0x44],edx
  408e47:	cmp    edx,0x0
  408e4a:	je     408e6d <rb_strcasecmp@plt+0x691d>
  408e50:	mov    esi,DWORD PTR [rbp-0x44]
  408e53:	lea    rdi,[rip+0x7996]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  408e5a:	call   402370 <strchr@plt>
  408e5f:	mov    QWORD PTR [rbp-0x40],rax
  408e63:	cmp    rax,0x0
  408e67:	jne    408e84 <rb_strcasecmp@plt+0x6934>
  408e6d:	call   4023c0 <__errno_location@plt>
  408e72:	mov    DWORD PTR [rax],0x5a
  408e78:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408e7f:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408e84:	mov    rax,QWORD PTR [rbp-0x40]
  408e88:	lea    rcx,[rip+0x7961]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  408e8f:	sub    rax,rcx
  408e92:	imul   rax,rax,0xa
  408e96:	movsxd rcx,DWORD PTR [rbp-0x48]
  408e9a:	add    rcx,rax
  408e9d:	mov    edx,ecx
  408e9f:	mov    DWORD PTR [rbp-0x48],edx
  408ea2:	mov    rax,QWORD PTR [rbp-0x10]
  408ea6:	mov    rcx,rax
  408ea9:	add    rcx,0x1
  408ead:	mov    QWORD PTR [rbp-0x10],rcx
  408eb1:	movsx  edx,BYTE PTR [rax]
  408eb4:	mov    DWORD PTR [rbp-0x44],edx
  408eb7:	cmp    edx,0x0
  408eba:	je     408edd <rb_strcasecmp@plt+0x698d>
  408ec0:	mov    esi,DWORD PTR [rbp-0x44]
  408ec3:	lea    rdi,[rip+0x7926]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  408eca:	call   402370 <strchr@plt>
  408ecf:	mov    QWORD PTR [rbp-0x40],rax
  408ed3:	cmp    rax,0x0
  408ed7:	jne    408ef4 <rb_strcasecmp@plt+0x69a4>
  408edd:	call   4023c0 <__errno_location@plt>
  408ee2:	mov    DWORD PTR [rax],0x5a
  408ee8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408eef:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408ef4:	mov    rax,QWORD PTR [rbp-0x40]
  408ef8:	lea    rcx,[rip+0x78f1]        # 4107f0 <rb_strcasecmp@plt+0xe2a0>
  408eff:	sub    rax,rcx
  408f02:	movsxd rcx,DWORD PTR [rbp-0x48]
  408f06:	add    rcx,rax
  408f09:	mov    edx,ecx
  408f0b:	mov    DWORD PTR [rbp-0x48],edx
  408f0e:	cmp    DWORD PTR [rbp-0x48],0xff
  408f15:	jle    408f32 <rb_strcasecmp@plt+0x69e2>
  408f1b:	call   4023c0 <__errno_location@plt>
  408f20:	mov    DWORD PTR [rax],0x5a
  408f26:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408f2d:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408f32:	mov    eax,DWORD PTR [rbp-0x48]
  408f35:	mov    DWORD PTR [rbp-0x44],eax
  408f38:	jmp    408f3d <rb_strcasecmp@plt+0x69ed>
  408f3d:	mov    DWORD PTR [rbp-0x4c],0x0
  408f44:	jmp    4090b4 <rb_strcasecmp@plt+0x6b64>
  408f49:	cmp    DWORD PTR [rbp-0x44],0x5c
  408f4d:	jne    408f5f <rb_strcasecmp@plt+0x6a0f>
  408f53:	mov    DWORD PTR [rbp-0x4c],0x1
  408f5a:	jmp    408ce9 <rb_strcasecmp@plt+0x6799>
  408f5f:	cmp    DWORD PTR [rbp-0x44],0x2e
  408f63:	jne    4090aa <rb_strcasecmp@plt+0x6b5a>
  408f69:	mov    rax,QWORD PTR [rbp-0x30]
  408f6d:	mov    rcx,QWORD PTR [rbp-0x28]
  408f71:	sub    rax,rcx
  408f74:	sub    rax,0x1
  408f78:	mov    edx,eax
  408f7a:	mov    DWORD PTR [rbp-0x44],edx
  408f7d:	mov    edx,DWORD PTR [rbp-0x44]
  408f80:	and    edx,0xc0
  408f86:	cmp    edx,0x0
  408f89:	je     408fa6 <rb_strcasecmp@plt+0x6a56>
  408f8f:	call   4023c0 <__errno_location@plt>
  408f94:	mov    DWORD PTR [rax],0x5a
  408f9a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408fa1:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408fa6:	mov    rax,QWORD PTR [rbp-0x28]
  408faa:	cmp    rax,QWORD PTR [rbp-0x38]
  408fae:	jb     408fcb <rb_strcasecmp@plt+0x6a7b>
  408fb4:	call   4023c0 <__errno_location@plt>
  408fb9:	mov    DWORD PTR [rax],0x5a
  408fbf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408fc6:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  408fcb:	mov    eax,DWORD PTR [rbp-0x44]
  408fce:	mov    cl,al
  408fd0:	mov    rdx,QWORD PTR [rbp-0x28]
  408fd4:	mov    BYTE PTR [rdx],cl
  408fd6:	mov    rdx,QWORD PTR [rbp-0x10]
  408fda:	movsx  eax,BYTE PTR [rdx]
  408fdd:	cmp    eax,0x0
  408fe0:	jne    409061 <rb_strcasecmp@plt+0x6b11>
  408fe6:	cmp    DWORD PTR [rbp-0x44],0x0
  408fea:	je     409027 <rb_strcasecmp@plt+0x6ad7>
  408ff0:	mov    rax,QWORD PTR [rbp-0x30]
  408ff4:	cmp    rax,QWORD PTR [rbp-0x38]
  408ff8:	jb     409015 <rb_strcasecmp@plt+0x6ac5>
  408ffe:	call   4023c0 <__errno_location@plt>
  409003:	mov    DWORD PTR [rax],0x5a
  409009:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409010:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  409015:	mov    rax,QWORD PTR [rbp-0x30]
  409019:	mov    rcx,rax
  40901c:	add    rcx,0x1
  409020:	mov    QWORD PTR [rbp-0x30],rcx
  409024:	mov    BYTE PTR [rax],0x0
  409027:	mov    rax,QWORD PTR [rbp-0x30]
  40902b:	mov    rcx,QWORD PTR [rbp-0x18]
  40902f:	sub    rax,rcx
  409032:	cmp    rax,0xff
  409038:	jle    409055 <rb_strcasecmp@plt+0x6b05>
  40903e:	call   4023c0 <__errno_location@plt>
  409043:	mov    DWORD PTR [rax],0x5a
  409049:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409050:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  409055:	mov    DWORD PTR [rbp-0x4],0x1
  40905c:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  409061:	cmp    DWORD PTR [rbp-0x44],0x0
  409065:	je     40907b <rb_strcasecmp@plt+0x6b2b>
  40906b:	mov    rax,QWORD PTR [rbp-0x10]
  40906f:	movsx  ecx,BYTE PTR [rax]
  409072:	cmp    ecx,0x2e
  409075:	jne    409092 <rb_strcasecmp@plt+0x6b42>
  40907b:	call   4023c0 <__errno_location@plt>
  409080:	mov    DWORD PTR [rax],0x5a
  409086:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40908d:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  409092:	mov    rax,QWORD PTR [rbp-0x30]
  409096:	mov    rcx,rax
  409099:	add    rcx,0x1
  40909d:	mov    QWORD PTR [rbp-0x30],rcx
  4090a1:	mov    QWORD PTR [rbp-0x28],rax
  4090a5:	jmp    408ce9 <rb_strcasecmp@plt+0x6799>
  4090aa:	jmp    4090af <rb_strcasecmp@plt+0x6b5f>
  4090af:	jmp    4090b4 <rb_strcasecmp@plt+0x6b64>
  4090b4:	mov    rax,QWORD PTR [rbp-0x30]
  4090b8:	cmp    rax,QWORD PTR [rbp-0x38]
  4090bc:	jb     4090d9 <rb_strcasecmp@plt+0x6b89>
  4090c2:	call   4023c0 <__errno_location@plt>
  4090c7:	mov    DWORD PTR [rax],0x5a
  4090cd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4090d4:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  4090d9:	mov    eax,DWORD PTR [rbp-0x44]
  4090dc:	mov    cl,al
  4090de:	mov    rdx,QWORD PTR [rbp-0x30]
  4090e2:	mov    rsi,rdx
  4090e5:	add    rsi,0x1
  4090e9:	mov    QWORD PTR [rbp-0x30],rsi
  4090ed:	mov    BYTE PTR [rdx],cl
  4090ef:	jmp    408ce9 <rb_strcasecmp@plt+0x6799>
  4090f4:	mov    rax,QWORD PTR [rbp-0x30]
  4090f8:	mov    rcx,QWORD PTR [rbp-0x28]
  4090fc:	sub    rax,rcx
  4090ff:	sub    rax,0x1
  409103:	mov    edx,eax
  409105:	mov    DWORD PTR [rbp-0x44],edx
  409108:	mov    edx,DWORD PTR [rbp-0x44]
  40910b:	and    edx,0xc0
  409111:	cmp    edx,0x0
  409114:	je     409131 <rb_strcasecmp@plt+0x6be1>
  40911a:	call   4023c0 <__errno_location@plt>
  40911f:	mov    DWORD PTR [rax],0x5a
  409125:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40912c:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  409131:	jmp    409136 <rb_strcasecmp@plt+0x6be6>
  409136:	mov    rax,QWORD PTR [rbp-0x28]
  40913a:	cmp    rax,QWORD PTR [rbp-0x38]
  40913e:	jb     40915b <rb_strcasecmp@plt+0x6c0b>
  409144:	call   4023c0 <__errno_location@plt>
  409149:	mov    DWORD PTR [rax],0x5a
  40914f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409156:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  40915b:	mov    eax,DWORD PTR [rbp-0x44]
  40915e:	mov    cl,al
  409160:	mov    rdx,QWORD PTR [rbp-0x28]
  409164:	mov    BYTE PTR [rdx],cl
  409166:	cmp    DWORD PTR [rbp-0x44],0x0
  40916a:	je     4091a7 <rb_strcasecmp@plt+0x6c57>
  409170:	mov    rax,QWORD PTR [rbp-0x30]
  409174:	cmp    rax,QWORD PTR [rbp-0x38]
  409178:	jb     409195 <rb_strcasecmp@plt+0x6c45>
  40917e:	call   4023c0 <__errno_location@plt>
  409183:	mov    DWORD PTR [rax],0x5a
  409189:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409190:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  409195:	mov    rax,QWORD PTR [rbp-0x30]
  409199:	mov    rcx,rax
  40919c:	add    rcx,0x1
  4091a0:	mov    QWORD PTR [rbp-0x30],rcx
  4091a4:	mov    BYTE PTR [rax],0x0
  4091a7:	mov    rax,QWORD PTR [rbp-0x30]
  4091ab:	mov    rcx,QWORD PTR [rbp-0x18]
  4091af:	sub    rax,rcx
  4091b2:	cmp    rax,0xff
  4091b8:	jle    4091d5 <rb_strcasecmp@plt+0x6c85>
  4091be:	call   4023c0 <__errno_location@plt>
  4091c3:	mov    DWORD PTR [rax],0x5a
  4091c9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4091d0:	jmp    4091dc <rb_strcasecmp@plt+0x6c8c>
  4091d5:	mov    DWORD PTR [rbp-0x4],0x0
  4091dc:	mov    eax,DWORD PTR [rbp-0x4]
  4091df:	add    rsp,0x60
  4091e3:	pop    rbp
  4091e4:	ret    
  4091e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091ef:	nop
  4091f0:	push   rbp
  4091f1:	mov    rbp,rsp
  4091f4:	sub    rsp,0x70
  4091f8:	mov    QWORD PTR [rbp-0x10],rdi
  4091fc:	mov    QWORD PTR [rbp-0x18],rsi
  409200:	mov    DWORD PTR [rbp-0x1c],edx
  409203:	mov    QWORD PTR [rbp-0x28],rcx
  409207:	mov    QWORD PTR [rbp-0x30],r8
  40920b:	mov    DWORD PTR [rbp-0x6c],0x1
  409212:	mov    rcx,QWORD PTR [rbp-0x10]
  409216:	mov    QWORD PTR [rbp-0x60],rcx
  40921a:	mov    rcx,QWORD PTR [rbp-0x18]
  40921e:	mov    QWORD PTR [rbp-0x38],rcx
  409222:	mov    rcx,QWORD PTR [rbp-0x38]
  409226:	movsxd rsi,DWORD PTR [rbp-0x1c]
  40922a:	add    rcx,rsi
  40922d:	mov    QWORD PTR [rbp-0x50],rcx
  409231:	mov    QWORD PTR [rbp-0x40],0x0
  409239:	mov    QWORD PTR [rbp-0x48],0x0
  409241:	cmp    QWORD PTR [rbp-0x28],0x0
  409246:	je     4092a5 <rb_strcasecmp@plt+0x6d55>
  40924c:	mov    rax,QWORD PTR [rbp-0x28]
  409250:	mov    rcx,rax
  409253:	add    rcx,0x8
  409257:	mov    QWORD PTR [rbp-0x28],rcx
  40925b:	mov    rax,QWORD PTR [rax]
  40925e:	mov    QWORD PTR [rbp-0x58],rax
  409262:	cmp    rax,0x0
  409266:	je     4092a0 <rb_strcasecmp@plt+0x6d50>
  40926c:	mov    rax,QWORD PTR [rbp-0x28]
  409270:	mov    QWORD PTR [rbp-0x40],rax
  409274:	mov    rax,QWORD PTR [rbp-0x40]
  409278:	cmp    QWORD PTR [rax],0x0
  40927c:	je     409298 <rb_strcasecmp@plt+0x6d48>
  409282:	jmp    409287 <rb_strcasecmp@plt+0x6d37>
  409287:	mov    rax,QWORD PTR [rbp-0x40]
  40928b:	add    rax,0x8
  40928f:	mov    QWORD PTR [rbp-0x40],rax
  409293:	jmp    409274 <rb_strcasecmp@plt+0x6d24>
  409298:	mov    rax,QWORD PTR [rbp-0x40]
  40929c:	mov    QWORD PTR [rbp-0x48],rax
  4092a0:	jmp    4092ad <rb_strcasecmp@plt+0x6d5d>
  4092a5:	mov    QWORD PTR [rbp-0x58],0x0
  4092ad:	mov    DWORD PTR [rbp-0x68],0x0
  4092b4:	mov    rax,QWORD PTR [rbp-0x60]
  4092b8:	movzx  ecx,BYTE PTR [rax]
  4092bb:	mov    DWORD PTR [rbp-0x64],ecx
  4092be:	mov    ecx,DWORD PTR [rbp-0x64]
  4092c1:	and    ecx,0xc0
  4092c7:	cmp    ecx,0xc0
  4092cd:	jne    4092ea <rb_strcasecmp@plt+0x6d9a>
  4092d3:	call   4023c0 <__errno_location@plt>
  4092d8:	mov    DWORD PTR [rax],0x5a
  4092de:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4092e5:	jmp    40955d <rb_strcasecmp@plt+0x700d>
  4092ea:	mov    rdi,QWORD PTR [rbp-0x60]
  4092ee:	call   408820 <rb_strcasecmp@plt+0x62d0>
  4092f3:	mov    DWORD PTR [rbp-0x70],eax
  4092f6:	cmp    eax,0x0
  4092f9:	jge    409316 <rb_strcasecmp@plt+0x6dc6>
  4092ff:	call   4023c0 <__errno_location@plt>
  409304:	mov    DWORD PTR [rax],0x16
  40930a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409311:	jmp    40955d <rb_strcasecmp@plt+0x700d>
  409316:	mov    eax,DWORD PTR [rbp-0x70]
  409319:	add    eax,0x1
  40931c:	add    eax,DWORD PTR [rbp-0x68]
  40931f:	mov    DWORD PTR [rbp-0x68],eax
  409322:	cmp    DWORD PTR [rbp-0x68],0xff
  409329:	jle    409346 <rb_strcasecmp@plt+0x6df6>
  40932f:	call   4023c0 <__errno_location@plt>
  409334:	mov    DWORD PTR [rax],0x5a
  40933a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409341:	jmp    40955d <rb_strcasecmp@plt+0x700d>
  409346:	mov    eax,DWORD PTR [rbp-0x70]
  409349:	add    eax,0x1
  40934c:	mov    rcx,QWORD PTR [rbp-0x60]
  409350:	movsxd rdx,eax
  409353:	add    rcx,rdx
  409356:	mov    QWORD PTR [rbp-0x60],rcx
  40935a:	cmp    DWORD PTR [rbp-0x64],0x0
  40935e:	jne    4092b4 <rb_strcasecmp@plt+0x6d64>
  409364:	mov    rax,QWORD PTR [rbp-0x10]
  409368:	mov    QWORD PTR [rbp-0x60],rax
  40936c:	mov    rax,QWORD PTR [rbp-0x60]
  409370:	movzx  ecx,BYTE PTR [rax]
  409373:	mov    DWORD PTR [rbp-0x64],ecx
  409376:	cmp    DWORD PTR [rbp-0x64],0x0
  40937a:	je     409483 <rb_strcasecmp@plt+0x6f33>
  409380:	cmp    QWORD PTR [rbp-0x58],0x0
  409385:	je     409483 <rb_strcasecmp@plt+0x6f33>
  40938b:	mov    rdi,QWORD PTR [rbp-0x60]
  40938f:	mov    rsi,QWORD PTR [rbp-0x58]
  409393:	mov    rdx,QWORD PTR [rbp-0x28]
  409397:	mov    rcx,QWORD PTR [rbp-0x48]
  40939b:	call   409990 <rb_strcasecmp@plt+0x7440>
  4093a0:	mov    DWORD PTR [rbp-0x68],eax
  4093a3:	cmp    DWORD PTR [rbp-0x68],0x0
  4093a7:	jl     409415 <rb_strcasecmp@plt+0x6ec5>
  4093ad:	mov    rax,QWORD PTR [rbp-0x38]
  4093b1:	add    rax,0x1
  4093b5:	cmp    rax,QWORD PTR [rbp-0x50]
  4093b9:	jb     4093c4 <rb_strcasecmp@plt+0x6e74>
  4093bf:	jmp    409520 <rb_strcasecmp@plt+0x6fd0>
  4093c4:	mov    eax,DWORD PTR [rbp-0x68]
  4093c7:	sar    eax,0x8
  4093ca:	or     eax,0xc0
  4093cf:	mov    cl,al
  4093d1:	mov    rdx,QWORD PTR [rbp-0x38]
  4093d5:	mov    rsi,rdx
  4093d8:	add    rsi,0x1
  4093dc:	mov    QWORD PTR [rbp-0x38],rsi
  4093e0:	mov    BYTE PTR [rdx],cl
  4093e2:	mov    eax,DWORD PTR [rbp-0x68]
  4093e5:	cdq    
  4093e6:	mov    edi,0x100
  4093eb:	idiv   edi
  4093ed:	mov    cl,dl
  4093ef:	mov    rsi,QWORD PTR [rbp-0x38]
  4093f3:	mov    r8,rsi
  4093f6:	add    r8,0x1
  4093fa:	mov    QWORD PTR [rbp-0x38],r8
  4093fe:	mov    BYTE PTR [rsi],cl
  409400:	mov    rsi,QWORD PTR [rbp-0x38]
  409404:	mov    r8,QWORD PTR [rbp-0x18]
  409408:	sub    rsi,r8
  40940b:	mov    edx,esi
  40940d:	mov    DWORD PTR [rbp-0x4],edx
  409410:	jmp    40955d <rb_strcasecmp@plt+0x700d>
  409415:	cmp    QWORD PTR [rbp-0x30],0x0
  40941a:	je     40947e <rb_strcasecmp@plt+0x6f2e>
  409420:	mov    rax,QWORD PTR [rbp-0x40]
  409424:	mov    rcx,QWORD PTR [rbp-0x30]
  409428:	add    rcx,0xfffffffffffffff8
  40942c:	cmp    rax,rcx
  40942f:	jae    40947e <rb_strcasecmp@plt+0x6f2e>
  409435:	mov    rax,QWORD PTR [rbp-0x38]
  409439:	mov    rcx,QWORD PTR [rbp-0x58]
  40943d:	sub    rax,rcx
  409440:	cmp    rax,0x4000
  409446:	jge    40947e <rb_strcasecmp@plt+0x6f2e>
  40944c:	cmp    DWORD PTR [rbp-0x6c],0x0
  409450:	je     40947e <rb_strcasecmp@plt+0x6f2e>
  409456:	mov    rax,QWORD PTR [rbp-0x38]
  40945a:	mov    rcx,QWORD PTR [rbp-0x40]
  40945e:	mov    rdx,rcx
  409461:	add    rdx,0x8
  409465:	mov    QWORD PTR [rbp-0x40],rdx
  409469:	mov    QWORD PTR [rcx],rax
  40946c:	mov    rax,QWORD PTR [rbp-0x40]
  409470:	mov    QWORD PTR [rax],0x0
  409477:	mov    DWORD PTR [rbp-0x6c],0x0
  40947e:	jmp    409483 <rb_strcasecmp@plt+0x6f33>
  409483:	mov    eax,DWORD PTR [rbp-0x64]
  409486:	and    eax,0xc0
  40948b:	cmp    eax,0xc0
  409490:	jne    40949b <rb_strcasecmp@plt+0x6f4b>
  409496:	jmp    409520 <rb_strcasecmp@plt+0x6fd0>
  40949b:	mov    rdi,QWORD PTR [rbp-0x60]
  40949f:	call   408820 <rb_strcasecmp@plt+0x62d0>
  4094a4:	mov    DWORD PTR [rbp-0x64],eax
  4094a7:	mov    rdi,QWORD PTR [rbp-0x38]
  4094ab:	add    rdi,0x1
  4094af:	movsxd rcx,DWORD PTR [rbp-0x64]
  4094b3:	add    rdi,rcx
  4094b6:	cmp    rdi,QWORD PTR [rbp-0x50]
  4094ba:	jb     4094c5 <rb_strcasecmp@plt+0x6f75>
  4094c0:	jmp    409520 <rb_strcasecmp@plt+0x6fd0>
  4094c5:	mov    rdi,QWORD PTR [rbp-0x38]
  4094c9:	mov    rsi,QWORD PTR [rbp-0x60]
  4094cd:	mov    eax,DWORD PTR [rbp-0x64]
  4094d0:	add    eax,0x1
  4094d3:	movsxd rdx,eax
  4094d6:	call   402540 <memcpy@plt>
  4094db:	mov    eax,DWORD PTR [rbp-0x64]
  4094de:	add    eax,0x1
  4094e1:	mov    rdx,QWORD PTR [rbp-0x60]
  4094e5:	movsxd rsi,eax
  4094e8:	add    rdx,rsi
  4094eb:	mov    QWORD PTR [rbp-0x60],rdx
  4094ef:	mov    eax,DWORD PTR [rbp-0x64]
  4094f2:	add    eax,0x1
  4094f5:	mov    rdx,QWORD PTR [rbp-0x38]
  4094f9:	movsxd rsi,eax
  4094fc:	add    rdx,rsi
  4094ff:	mov    QWORD PTR [rbp-0x38],rdx
  409503:	cmp    DWORD PTR [rbp-0x64],0x0
  409507:	jne    40936c <rb_strcasecmp@plt+0x6e1c>
  40950d:	mov    rax,QWORD PTR [rbp-0x38]
  409511:	cmp    rax,QWORD PTR [rbp-0x50]
  409515:	jbe    40954d <rb_strcasecmp@plt+0x6ffd>
  40951b:	jmp    409520 <rb_strcasecmp@plt+0x6fd0>
  409520:	cmp    QWORD PTR [rbp-0x58],0x0
  409525:	je     409536 <rb_strcasecmp@plt+0x6fe6>
  40952b:	mov    rax,QWORD PTR [rbp-0x48]
  40952f:	mov    QWORD PTR [rax],0x0
  409536:	call   4023c0 <__errno_location@plt>
  40953b:	mov    DWORD PTR [rax],0x5a
  409541:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409548:	jmp    40955d <rb_strcasecmp@plt+0x700d>
  40954d:	mov    rax,QWORD PTR [rbp-0x38]
  409551:	mov    rcx,QWORD PTR [rbp-0x18]
  409555:	sub    rax,rcx
  409558:	mov    edx,eax
  40955a:	mov    DWORD PTR [rbp-0x4],edx
  40955d:	mov    eax,DWORD PTR [rbp-0x4]
  409560:	add    rsp,0x70
  409564:	pop    rbp
  409565:	ret    
  409566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409570:	push   rbp
  409571:	mov    rbp,rsp
  409574:	sub    rsp,0x90
  40957b:	mov    QWORD PTR [rbp-0x10],rdi
  40957f:	mov    QWORD PTR [rbp-0x18],rsi
  409583:	mov    QWORD PTR [rbp-0x20],rdx
  409587:	mov    QWORD PTR [rbp-0x28],rcx
  40958b:	mov    QWORD PTR [rbp-0x30],r8
  40958f:	mov    DWORD PTR [rbp-0x34],0x0
  409596:	mov    rcx,QWORD PTR [rbp-0x10]
  40959a:	mov    rcx,QWORD PTR [rcx]
  40959d:	mov    QWORD PTR [rbp-0x40],rcx
  4095a1:	mov    QWORD PTR [rbp-0x60],0x0
  4095a9:	mov    DWORD PTR [rbp-0x64],0x0
  4095b0:	mov    DWORD PTR [rbp-0x68],0x0
  4095b7:	mov    DWORD PTR [rbp-0x6c],0x0
  4095be:	mov    DWORD PTR [rbp-0x70],0x0
  4095c5:	mov    QWORD PTR [rbp-0x60],0x0
  4095cd:	mov    QWORD PTR [rbp-0x58],0x0
  4095d5:	mov    rcx,QWORD PTR [rbp-0x18]
  4095d9:	mov    rdx,QWORD PTR [rbp-0x40]
  4095dd:	sub    rcx,rdx
  4095e0:	cmp    rcx,0x2
  4095e4:	jge    4095f6 <rb_strcasecmp@plt+0x70a6>
  4095ea:	mov    DWORD PTR [rbp-0x4],0x16
  4095f1:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  4095f6:	mov    rax,QWORD PTR [rbp-0x40]
  4095fa:	mov    rcx,rax
  4095fd:	add    rcx,0x1
  409601:	mov    QWORD PTR [rbp-0x40],rcx
  409605:	movsx  edx,BYTE PTR [rax]
  409608:	cmp    edx,0x78
  40960b:	je     40961d <rb_strcasecmp@plt+0x70cd>
  409611:	mov    DWORD PTR [rbp-0x4],0x16
  409618:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  40961d:	call   402240 <__ctype_b_loc@plt>
  409622:	mov    rax,QWORD PTR [rax]
  409625:	mov    rcx,QWORD PTR [rbp-0x40]
  409629:	movsx  edx,BYTE PTR [rcx]
  40962c:	and    edx,0xff
  409632:	movsxd rcx,edx
  409635:	movzx  edx,WORD PTR [rax+rcx*2]
  409639:	and    edx,0x1000
  40963f:	cmp    edx,0x0
  409642:	jne    409654 <rb_strcasecmp@plt+0x7104>
  409648:	mov    DWORD PTR [rbp-0x4],0x16
  40964f:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  409654:	mov    rax,QWORD PTR [rbp-0x28]
  409658:	add    rax,0x8
  40965c:	mov    QWORD PTR [rbp-0x48],rax
  409660:	xor    eax,eax
  409662:	mov    cl,al
  409664:	mov    rdx,QWORD PTR [rbp-0x40]
  409668:	cmp    rdx,QWORD PTR [rbp-0x18]
  40966c:	mov    BYTE PTR [rbp-0x75],cl
  40966f:	jae    409683 <rb_strcasecmp@plt+0x7133>
  409675:	mov    rax,QWORD PTR [rbp-0x48]
  409679:	cmp    rax,QWORD PTR [rbp-0x30]
  40967d:	setb   cl
  409680:	mov    BYTE PTR [rbp-0x75],cl
  409683:	mov    al,BYTE PTR [rbp-0x75]
  409686:	test   al,0x1
  409688:	jne    409693 <rb_strcasecmp@plt+0x7143>
  40968e:	jmp    4098a0 <rb_strcasecmp@plt+0x7350>
  409693:	mov    rax,QWORD PTR [rbp-0x40]
  409697:	movsx  ecx,BYTE PTR [rax]
  40969a:	mov    dl,cl
  40969c:	mov    BYTE PTR [rbp-0x49],dl
  40969f:	mov    esi,ecx
  4096a1:	sub    esi,0x2f
  4096a4:	mov    DWORD PTR [rbp-0x7c],ecx
  4096a7:	mov    DWORD PTR [rbp-0x80],esi
  4096aa:	je     40975e <rb_strcasecmp@plt+0x720e>
  4096b0:	jmp    4096b5 <rb_strcasecmp@plt+0x7165>
  4096b5:	mov    eax,DWORD PTR [rbp-0x7c]
  4096b8:	sub    eax,0x5d
  4096bb:	mov    DWORD PTR [rbp-0x84],eax
  4096c1:	jne    40976a <rb_strcasecmp@plt+0x721a>
  4096c7:	jmp    4096cc <rb_strcasecmp@plt+0x717c>
  4096cc:	cmp    DWORD PTR [rbp-0x34],0x0
  4096d0:	je     409725 <rb_strcasecmp@plt+0x71d5>
  4096d6:	cmp    QWORD PTR [rbp-0x58],0x0
  4096db:	jne    4096ed <rb_strcasecmp@plt+0x719d>
  4096e1:	mov    DWORD PTR [rbp-0x4],0x16
  4096e8:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  4096ed:	mov    rdi,QWORD PTR [rbp-0x58]
  4096f1:	lea    rsi,[rbp-0x60]
  4096f5:	mov    edx,0xa
  4096fa:	call   402310 <strtol@plt>
  4096ff:	mov    edx,eax
  409701:	mov    DWORD PTR [rbp-0x70],edx
  409704:	mov    rax,QWORD PTR [rbp-0x60]
  409708:	movsx  edx,BYTE PTR [rax]
  40970b:	cmp    edx,0x5d
  40970e:	je     409720 <rb_strcasecmp@plt+0x71d0>
  409714:	mov    DWORD PTR [rbp-0x4],0x16
  40971b:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  409720:	jmp    409725 <rb_strcasecmp@plt+0x71d5>
  409725:	cmp    DWORD PTR [rbp-0x68],0x0
  409729:	je     40974d <rb_strcasecmp@plt+0x71fd>
  40972f:	mov    eax,DWORD PTR [rbp-0x64]
  409732:	shl    eax,0x4
  409735:	and    eax,0xff
  40973a:	mov    cl,al
  40973c:	mov    rdx,QWORD PTR [rbp-0x48]
  409740:	mov    rsi,rdx
  409743:	add    rsi,0x1
  409747:	mov    QWORD PTR [rbp-0x48],rsi
  40974b:	mov    BYTE PTR [rdx],cl
  40974d:	mov    rax,QWORD PTR [rbp-0x40]
  409751:	add    rax,0x1
  409755:	mov    QWORD PTR [rbp-0x40],rax
  409759:	jmp    4098a5 <rb_strcasecmp@plt+0x7355>
  40975e:	mov    DWORD PTR [rbp-0x34],0x1
  409765:	jmp    40988a <rb_strcasecmp@plt+0x733a>
  40976a:	cmp    DWORD PTR [rbp-0x34],0x0
  40976e:	je     4097d9 <rb_strcasecmp@plt+0x7289>
  409774:	call   402240 <__ctype_b_loc@plt>
  409779:	mov    rax,QWORD PTR [rax]
  40977c:	movsx  ecx,BYTE PTR [rbp-0x49]
  409780:	and    ecx,0xff
  409786:	movsxd rdx,ecx
  409789:	movzx  ecx,WORD PTR [rax+rdx*2]
  40978d:	and    ecx,0x800
  409793:	cmp    ecx,0x0
  409796:	jne    4097a8 <rb_strcasecmp@plt+0x7258>
  40979c:	mov    DWORD PTR [rbp-0x4],0x16
  4097a3:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  4097a8:	cmp    QWORD PTR [rbp-0x58],0x0
  4097ad:	jne    4097d4 <rb_strcasecmp@plt+0x7284>
  4097b3:	movsx  eax,BYTE PTR [rbp-0x49]
  4097b7:	cmp    eax,0x30
  4097ba:	jne    4097cc <rb_strcasecmp@plt+0x727c>
  4097c0:	mov    DWORD PTR [rbp-0x4],0x16
  4097c7:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  4097cc:	mov    rax,QWORD PTR [rbp-0x40]
  4097d0:	mov    QWORD PTR [rbp-0x58],rax
  4097d4:	jmp    409885 <rb_strcasecmp@plt+0x7335>
  4097d9:	call   402240 <__ctype_b_loc@plt>
  4097de:	mov    rax,QWORD PTR [rax]
  4097e1:	movsx  ecx,BYTE PTR [rbp-0x49]
  4097e5:	and    ecx,0xff
  4097eb:	movsxd rdx,ecx
  4097ee:	movzx  ecx,WORD PTR [rax+rdx*2]
  4097f2:	and    ecx,0x1000
  4097f8:	cmp    ecx,0x0
  4097fb:	jne    40980d <rb_strcasecmp@plt+0x72bd>
  409801:	mov    DWORD PTR [rbp-0x4],0x16
  409808:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  40980d:	mov    eax,DWORD PTR [rbp-0x64]
  409810:	shl    eax,0x4
  409813:	mov    DWORD PTR [rbp-0x64],eax
  409816:	movsx  eax,BYTE PTR [rbp-0x49]
  40981a:	movsxd rcx,eax
  40981d:	lea    rdx,[rip+0x6fdc]        # 410800 <rb_strcasecmp@plt+0xe2b0>
  409824:	movsx  eax,BYTE PTR [rdx+rcx*1]
  409828:	add    eax,DWORD PTR [rbp-0x64]
  40982b:	mov    DWORD PTR [rbp-0x64],eax
  40982e:	mov    eax,DWORD PTR [rbp-0x68]
  409831:	add    eax,0x4
  409834:	mov    DWORD PTR [rbp-0x68],eax
  409837:	mov    eax,DWORD PTR [rbp-0x6c]
  40983a:	add    eax,0x4
  40983d:	mov    DWORD PTR [rbp-0x6c],eax
  409840:	cmp    DWORD PTR [rbp-0x6c],0x100
  409847:	jle    409859 <rb_strcasecmp@plt+0x7309>
  40984d:	mov    DWORD PTR [rbp-0x4],0x16
  409854:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  409859:	cmp    DWORD PTR [rbp-0x68],0x8
  40985d:	jne    409880 <rb_strcasecmp@plt+0x7330>
  409863:	mov    eax,DWORD PTR [rbp-0x64]
  409866:	mov    cl,al
  409868:	mov    rdx,QWORD PTR [rbp-0x48]
  40986c:	mov    rsi,rdx
  40986f:	add    rsi,0x1
  409873:	mov    QWORD PTR [rbp-0x48],rsi
  409877:	mov    BYTE PTR [rdx],cl
  409879:	mov    DWORD PTR [rbp-0x68],0x0
  409880:	jmp    409885 <rb_strcasecmp@plt+0x7335>
  409885:	jmp    40988a <rb_strcasecmp@plt+0x733a>
  40988a:	jmp    40988f <rb_strcasecmp@plt+0x733f>
  40988f:	mov    rax,QWORD PTR [rbp-0x40]
  409893:	add    rax,0x1
  409897:	mov    QWORD PTR [rbp-0x40],rax
  40989b:	jmp    409660 <rb_strcasecmp@plt+0x7110>
  4098a0:	jmp    4098a5 <rb_strcasecmp@plt+0x7355>
  4098a5:	mov    rax,QWORD PTR [rbp-0x40]
  4098a9:	cmp    rax,QWORD PTR [rbp-0x18]
  4098ad:	jae    4098c1 <rb_strcasecmp@plt+0x7371>
  4098b3:	mov    rax,QWORD PTR [rbp-0x48]
  4098b7:	cmp    rax,QWORD PTR [rbp-0x30]
  4098bb:	jb     4098cd <rb_strcasecmp@plt+0x737d>
  4098c1:	mov    DWORD PTR [rbp-0x4],0x5a
  4098c8:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  4098cd:	cmp    DWORD PTR [rbp-0x70],0x0
  4098d1:	jle    40992a <rb_strcasecmp@plt+0x73da>
  4098d7:	mov    eax,DWORD PTR [rbp-0x70]
  4098da:	add    eax,0x3
  4098dd:	and    eax,0xfffffffc
  4098e0:	cmp    eax,DWORD PTR [rbp-0x6c]
  4098e3:	je     4098f5 <rb_strcasecmp@plt+0x73a5>
  4098e9:	mov    DWORD PTR [rbp-0x4],0x16
  4098f0:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  4098f5:	mov    eax,DWORD PTR [rbp-0x6c]
  4098f8:	sub    eax,DWORD PTR [rbp-0x70]
  4098fb:	mov    DWORD PTR [rbp-0x74],eax
  4098fe:	mov    eax,DWORD PTR [rbp-0x64]
  409901:	mov    ecx,0x8
  409906:	sub    ecx,DWORD PTR [rbp-0x74]
  409909:	shl    eax,cl
  40990b:	and    eax,0xff
  409910:	cmp    eax,0x0
  409913:	je     409925 <rb_strcasecmp@plt+0x73d5>
  409919:	mov    DWORD PTR [rbp-0x4],0x16
  409920:	jmp    409979 <rb_strcasecmp@plt+0x7429>
  409925:	jmp    409930 <rb_strcasecmp@plt+0x73e0>
  40992a:	mov    eax,DWORD PTR [rbp-0x6c]
  40992d:	mov    DWORD PTR [rbp-0x70],eax
  409930:	cmp    DWORD PTR [rbp-0x70],0x100
  409937:	jne    409944 <rb_strcasecmp@plt+0x73f4>
  40993d:	mov    DWORD PTR [rbp-0x70],0x0
  409944:	mov    rax,QWORD PTR [rbp-0x20]
  409948:	mov    rax,QWORD PTR [rax]
  40994b:	mov    BYTE PTR [rax],0x41
  40994e:	mov    ecx,DWORD PTR [rbp-0x70]
  409951:	mov    dl,cl
  409953:	mov    rax,QWORD PTR [rbp-0x28]
  409957:	mov    rax,QWORD PTR [rax]
  40995a:	mov    BYTE PTR [rax],dl
  40995c:	mov    rax,QWORD PTR [rbp-0x40]
  409960:	mov    rsi,QWORD PTR [rbp-0x10]
  409964:	mov    QWORD PTR [rsi],rax
  409967:	mov    rax,QWORD PTR [rbp-0x48]
  40996b:	mov    rsi,QWORD PTR [rbp-0x28]
  40996f:	mov    QWORD PTR [rsi],rax
  409972:	mov    DWORD PTR [rbp-0x4],0x0
  409979:	mov    eax,DWORD PTR [rbp-0x4]
  40997c:	add    rsp,0x90
  409983:	pop    rbp
  409984:	ret    
  409985:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40998f:	nop
  409990:	push   rbp
  409991:	mov    rbp,rsp
  409994:	sub    rsp,0x60
  409998:	mov    QWORD PTR [rbp-0x10],rdi
  40999c:	mov    QWORD PTR [rbp-0x18],rsi
  4099a0:	mov    QWORD PTR [rbp-0x20],rdx
  4099a4:	mov    QWORD PTR [rbp-0x28],rcx
  4099a8:	mov    rcx,QWORD PTR [rbp-0x20]
  4099ac:	mov    QWORD PTR [rbp-0x48],rcx
  4099b0:	mov    rax,QWORD PTR [rbp-0x48]
  4099b4:	cmp    rax,QWORD PTR [rbp-0x28]
  4099b8:	jae    409bdb <rb_strcasecmp@plt+0x768b>
  4099be:	mov    rax,QWORD PTR [rbp-0x48]
  4099c2:	mov    rax,QWORD PTR [rax]
  4099c5:	mov    QWORD PTR [rbp-0x40],rax
  4099c9:	xor    eax,eax
  4099cb:	mov    cl,al
  4099cd:	mov    rdx,QWORD PTR [rbp-0x40]
  4099d1:	movzx  eax,BYTE PTR [rdx]
  4099d4:	cmp    eax,0x0
  4099d7:	mov    BYTE PTR [rbp-0x4d],cl
  4099da:	je     409a13 <rb_strcasecmp@plt+0x74c3>
  4099e0:	xor    eax,eax
  4099e2:	mov    cl,al
  4099e4:	mov    rdx,QWORD PTR [rbp-0x40]
  4099e8:	movzx  eax,BYTE PTR [rdx]
  4099eb:	and    eax,0xc0
  4099f0:	cmp    eax,0x0
  4099f3:	mov    BYTE PTR [rbp-0x4d],cl
  4099f6:	jne    409a13 <rb_strcasecmp@plt+0x74c3>
  4099fc:	mov    rax,QWORD PTR [rbp-0x40]
  409a00:	mov    rcx,QWORD PTR [rbp-0x18]
  409a04:	sub    rax,rcx
  409a07:	cmp    rax,0x4000
  409a0d:	setl   dl
  409a10:	mov    BYTE PTR [rbp-0x4d],dl
  409a13:	mov    al,BYTE PTR [rbp-0x4d]
  409a16:	test   al,0x1
  409a18:	jne    409a23 <rb_strcasecmp@plt+0x74d3>
  409a1e:	jmp    409bc5 <rb_strcasecmp@plt+0x7675>
  409a23:	mov    rax,QWORD PTR [rbp-0x10]
  409a27:	mov    QWORD PTR [rbp-0x30],rax
  409a2b:	mov    rax,QWORD PTR [rbp-0x40]
  409a2f:	mov    QWORD PTR [rbp-0x38],rax
  409a33:	mov    rax,QWORD PTR [rbp-0x38]
  409a37:	mov    rcx,rax
  409a3a:	add    rcx,0x1
  409a3e:	mov    QWORD PTR [rbp-0x38],rcx
  409a42:	movzx  edx,BYTE PTR [rax]
  409a45:	mov    DWORD PTR [rbp-0x4c],edx
  409a48:	cmp    edx,0x0
  409a4b:	je     409ba3 <rb_strcasecmp@plt+0x7653>
  409a51:	mov    eax,DWORD PTR [rbp-0x4c]
  409a54:	and    eax,0xc0
  409a59:	mov    DWORD PTR [rbp-0x54],eax
  409a5c:	je     409a7d <rb_strcasecmp@plt+0x752d>
  409a62:	jmp    409a67 <rb_strcasecmp@plt+0x7517>
  409a67:	mov    eax,DWORD PTR [rbp-0x54]
  409a6a:	sub    eax,0xc0
  409a6f:	mov    DWORD PTR [rbp-0x58],eax
  409a72:	je     409b61 <rb_strcasecmp@plt+0x7611>
  409a78:	jmp    409b87 <rb_strcasecmp@plt+0x7637>
  409a7d:	mov    rax,QWORD PTR [rbp-0x38]
  409a81:	add    rax,0xffffffffffffffff
  409a85:	mov    rdi,rax
  409a88:	call   408820 <rb_strcasecmp@plt+0x62d0>
  409a8d:	mov    DWORD PTR [rbp-0x4c],eax
  409a90:	mov    eax,DWORD PTR [rbp-0x4c]
  409a93:	mov    rdi,QWORD PTR [rbp-0x30]
  409a97:	mov    rcx,rdi
  409a9a:	add    rcx,0x1
  409a9e:	mov    QWORD PTR [rbp-0x30],rcx
  409aa2:	movzx  edx,BYTE PTR [rdi]
  409aa5:	cmp    eax,edx
  409aa7:	je     409ab2 <rb_strcasecmp@plt+0x7562>
  409aad:	jmp    409ba8 <rb_strcasecmp@plt+0x7658>
  409ab2:	jmp    409ab7 <rb_strcasecmp@plt+0x7567>
  409ab7:	cmp    DWORD PTR [rbp-0x4c],0x0
  409abb:	jbe    409b15 <rb_strcasecmp@plt+0x75c5>
  409ac1:	mov    rax,QWORD PTR [rbp-0x30]
  409ac5:	mov    rcx,rax
  409ac8:	add    rcx,0x1
  409acc:	mov    QWORD PTR [rbp-0x30],rcx
  409ad0:	movzx  edi,BYTE PTR [rax]
  409ad3:	call   409c00 <rb_strcasecmp@plt+0x76b0>
  409ad8:	mov    rcx,QWORD PTR [rbp-0x38]
  409adc:	mov    rdx,rcx
  409adf:	add    rdx,0x1
  409ae3:	mov    QWORD PTR [rbp-0x38],rdx
  409ae7:	movzx  edi,BYTE PTR [rcx]
  409aea:	mov    DWORD PTR [rbp-0x5c],eax
  409aed:	call   409c00 <rb_strcasecmp@plt+0x76b0>
  409af2:	mov    edi,DWORD PTR [rbp-0x5c]
  409af5:	cmp    edi,eax
  409af7:	je     409b02 <rb_strcasecmp@plt+0x75b2>
  409afd:	jmp    409ba8 <rb_strcasecmp@plt+0x7658>
  409b02:	jmp    409b07 <rb_strcasecmp@plt+0x75b7>
  409b07:	mov    eax,DWORD PTR [rbp-0x4c]
  409b0a:	add    eax,0xffffffff
  409b0d:	mov    DWORD PTR [rbp-0x4c],eax
  409b10:	jmp    409ab7 <rb_strcasecmp@plt+0x7567>
  409b15:	mov    rax,QWORD PTR [rbp-0x30]
  409b19:	movzx  ecx,BYTE PTR [rax]
  409b1c:	cmp    ecx,0x0
  409b1f:	jne    409b4a <rb_strcasecmp@plt+0x75fa>
  409b25:	mov    rax,QWORD PTR [rbp-0x38]
  409b29:	movzx  ecx,BYTE PTR [rax]
  409b2c:	cmp    ecx,0x0
  409b2f:	jne    409b4a <rb_strcasecmp@plt+0x75fa>
  409b35:	mov    rax,QWORD PTR [rbp-0x40]
  409b39:	mov    rcx,QWORD PTR [rbp-0x18]
  409b3d:	sub    rax,rcx
  409b40:	mov    edx,eax
  409b42:	mov    DWORD PTR [rbp-0x4],edx
  409b45:	jmp    409bed <rb_strcasecmp@plt+0x769d>
  409b4a:	mov    rax,QWORD PTR [rbp-0x30]
  409b4e:	cmp    BYTE PTR [rax],0x0
  409b51:	je     409b5c <rb_strcasecmp@plt+0x760c>
  409b57:	jmp    409a33 <rb_strcasecmp@plt+0x74e3>
  409b5c:	jmp    409ba8 <rb_strcasecmp@plt+0x7658>
  409b61:	mov    rax,QWORD PTR [rbp-0x18]
  409b65:	mov    ecx,DWORD PTR [rbp-0x4c]
  409b68:	and    ecx,0x3f
  409b6b:	shl    ecx,0x8
  409b6e:	mov    rdx,QWORD PTR [rbp-0x38]
  409b72:	movzx  esi,BYTE PTR [rdx]
  409b75:	or     ecx,esi
  409b77:	mov    ecx,ecx
  409b79:	mov    edx,ecx
  409b7b:	add    rax,rdx
  409b7e:	mov    QWORD PTR [rbp-0x38],rax
  409b82:	jmp    409b9e <rb_strcasecmp@plt+0x764e>
  409b87:	call   4023c0 <__errno_location@plt>
  409b8c:	mov    DWORD PTR [rax],0x5a
  409b92:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409b99:	jmp    409bed <rb_strcasecmp@plt+0x769d>
  409b9e:	jmp    409a33 <rb_strcasecmp@plt+0x74e3>
  409ba3:	jmp    409ba8 <rb_strcasecmp@plt+0x7658>
  409ba8:	mov    rax,QWORD PTR [rbp-0x40]
  409bac:	movzx  ecx,BYTE PTR [rax]
  409baf:	add    ecx,0x1
  409bb2:	mov    rax,QWORD PTR [rbp-0x40]
  409bb6:	movsxd rdx,ecx
  409bb9:	add    rax,rdx
  409bbc:	mov    QWORD PTR [rbp-0x40],rax
  409bc0:	jmp    4099c9 <rb_strcasecmp@plt+0x7479>
  409bc5:	jmp    409bca <rb_strcasecmp@plt+0x767a>
  409bca:	mov    rax,QWORD PTR [rbp-0x48]
  409bce:	add    rax,0x8
  409bd2:	mov    QWORD PTR [rbp-0x48],rax
  409bd6:	jmp    4099b0 <rb_strcasecmp@plt+0x7460>
  409bdb:	call   4023c0 <__errno_location@plt>
  409be0:	mov    DWORD PTR [rax],0x2
  409be6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409bed:	mov    eax,DWORD PTR [rbp-0x4]
  409bf0:	add    rsp,0x60
  409bf4:	pop    rbp
  409bf5:	ret    
  409bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c00:	push   rbp
  409c01:	mov    rbp,rsp
  409c04:	mov    DWORD PTR [rbp-0x8],edi
  409c07:	cmp    DWORD PTR [rbp-0x8],0x41
  409c0b:	jl     409c29 <rb_strcasecmp@plt+0x76d9>
  409c11:	cmp    DWORD PTR [rbp-0x8],0x5a
  409c15:	jg     409c29 <rb_strcasecmp@plt+0x76d9>
  409c1b:	mov    eax,DWORD PTR [rbp-0x8]
  409c1e:	add    eax,0x20
  409c21:	mov    DWORD PTR [rbp-0x4],eax
  409c24:	jmp    409c2f <rb_strcasecmp@plt+0x76df>
  409c29:	mov    eax,DWORD PTR [rbp-0x8]
  409c2c:	mov    DWORD PTR [rbp-0x4],eax
  409c2f:	mov    eax,DWORD PTR [rbp-0x4]
  409c32:	pop    rbp
  409c33:	ret    
  409c34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c3e:	xchg   ax,ax
  409c40:	push   rbp
  409c41:	mov    rbp,rsp
  409c44:	sub    rsp,0x70
  409c48:	xor    eax,eax
  409c4a:	mov    ecx,0x18
  409c4f:	mov    r8d,ecx
  409c52:	mov    QWORD PTR [rbp-0x8],rdi
  409c56:	mov    DWORD PTR [rbp-0xc],esi
  409c59:	mov    QWORD PTR [rbp-0x18],rdx
  409c5d:	lea    rdx,[rbp-0x30]
  409c61:	mov    rdi,rdx
  409c64:	mov    esi,eax
  409c66:	mov    rdx,r8
  409c69:	call   402040 <memset@plt>
  409c6e:	mov    rdx,QWORD PTR [rbp-0x18]
  409c72:	mov    rdi,QWORD PTR [rdx+0x10]
  409c76:	call   40a1f0 <rb_strcasecmp@plt+0x7ca0>
  409c7b:	mov    QWORD PTR [rbp-0x40],rax
  409c7f:	mov    rax,QWORD PTR [rbp-0x40]
  409c83:	movsx  ecx,BYTE PTR [rax]
  409c86:	cmp    ecx,0x2a
  409c89:	jne    409c94 <rb_strcasecmp@plt+0x7744>
  409c8f:	jmp    409e32 <rb_strcasecmp@plt+0x78e2>
  409c94:	mov    rdi,QWORD PTR [rbp-0x40]
  409c98:	lea    rsi,[rip+0x6c85]        # 410924 <rb_strcasecmp@plt+0xe3d4>
  409c9f:	lea    rdx,[rbp-0x38]
  409ca3:	call   402130 <rb_strtok_r@plt>
  409ca8:	mov    QWORD PTR [rbp-0x50],rax
  409cac:	cmp    QWORD PTR [rbp-0x50],0x0
  409cb1:	je     409e2d <rb_strcasecmp@plt+0x78dd>
  409cb7:	mov    eax,0x58
  409cbc:	mov    edi,eax
  409cbe:	call   40a260 <rb_strcasecmp@plt+0x7d10>
  409cc3:	mov    QWORD PTR [rbp-0x58],rax
  409cc7:	mov    DWORD PTR [rbp-0x5c],0x0
  409cce:	mov    DWORD PTR [rbp-0x60],0x2
  409cd5:	mov    rax,QWORD PTR [rbp-0x50]
  409cd9:	mov    QWORD PTR [rbp-0x68],rax
  409cdd:	mov    rax,QWORD PTR [rbp-0x68]
  409ce1:	movsx  ecx,BYTE PTR [rax]
  409ce4:	cmp    ecx,0x0
  409ce7:	je     409d9c <rb_strcasecmp@plt+0x784c>
  409ced:	mov    rax,QWORD PTR [rbp-0x68]
  409cf1:	movsx  ecx,BYTE PTR [rax]
  409cf4:	cmp    ecx,0x2e
  409cf7:	jne    409d38 <rb_strcasecmp@plt+0x77e8>
  409cfd:	mov    eax,DWORD PTR [rbp-0x5c]
  409d00:	add    eax,0x1
  409d03:	mov    DWORD PTR [rbp-0x5c],eax
  409d06:	cmp    eax,0x3
  409d09:	jle    409d2c <rb_strcasecmp@plt+0x77dc>
  409d0f:	mov    edi,0x43
  409d14:	lea    rsi,[rip+0x6c0b]        # 410926 <rb_strcasecmp@plt+0xe3d6>
  409d1b:	mov    al,0x0
  409d1d:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  409d22:	mov    edi,0x3
  409d27:	call   4020e0 <exit@plt>
  409d2c:	mov    DWORD PTR [rbp-0x60],0x1
  409d33:	jmp    409d86 <rb_strcasecmp@plt+0x7836>
  409d38:	call   402240 <__ctype_b_loc@plt>
  409d3d:	mov    rax,QWORD PTR [rax]
  409d40:	mov    rcx,QWORD PTR [rbp-0x68]
  409d44:	movsx  edx,BYTE PTR [rcx]
  409d47:	movsxd rcx,edx
  409d4a:	movzx  edx,WORD PTR [rax+rcx*2]
  409d4e:	and    edx,0x800
  409d54:	cmp    edx,0x0
  409d57:	jne    409d81 <rb_strcasecmp@plt+0x7831>
  409d5d:	mov    rax,QWORD PTR [rbp-0x68]
  409d61:	movsx  edx,BYTE PTR [rax]
  409d64:	mov    edi,0x43
  409d69:	lea    rsi,[rip+0x6bf0]        # 410960 <rb_strcasecmp@plt+0xe410>
  409d70:	mov    al,0x0
  409d72:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  409d77:	mov    edi,0x3
  409d7c:	call   4020e0 <exit@plt>
  409d81:	jmp    409d86 <rb_strcasecmp@plt+0x7836>
  409d86:	jmp    409d8b <rb_strcasecmp@plt+0x783b>
  409d8b:	mov    rax,QWORD PTR [rbp-0x68]
  409d8f:	add    rax,0x1
  409d93:	mov    QWORD PTR [rbp-0x68],rax
  409d97:	jmp    409cdd <rb_strcasecmp@plt+0x778d>
  409d9c:	cmp    DWORD PTR [rbp-0x5c],0x0
  409da0:	jle    409dcd <rb_strcasecmp@plt+0x787d>
  409da6:	cmp    DWORD PTR [rbp-0x5c],0x3
  409daa:	jge    409dcd <rb_strcasecmp@plt+0x787d>
  409db0:	mov    edi,0x43
  409db5:	lea    rsi,[rip+0x6bf4]        # 4109b0 <rb_strcasecmp@plt+0xe460>
  409dbc:	mov    al,0x0
  409dbe:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  409dc3:	mov    edi,0x3
  409dc8:	call   4020e0 <exit@plt>
  409dcd:	mov    eax,0x35
  409dd2:	mov    edx,eax
  409dd4:	mov    eax,DWORD PTR [rbp-0x60]
  409dd7:	mov    rcx,QWORD PTR [rbp-0x58]
  409ddb:	mov    DWORD PTR [rcx],eax
  409ddd:	mov    rcx,QWORD PTR [rbp-0x58]
  409de1:	add    rcx,0x4
  409de5:	mov    rsi,QWORD PTR [rbp-0x50]
  409de9:	mov    rdi,rcx
  409dec:	call   4021d0 <rb_strlcpy@plt>
  409df1:	mov    rcx,QWORD PTR [rbp-0x58]
  409df5:	mov    rdx,QWORD PTR [rbp-0x58]
  409df9:	add    rdx,0x40
  409dfd:	mov    rdi,rcx
  409e00:	mov    rsi,rdx
  409e03:	lea    rdx,[rbp-0x30]
  409e07:	mov    QWORD PTR [rbp-0x70],rax
  409e0b:	call   40a2c0 <rb_strcasecmp@plt+0x7d70>
  409e10:	xor    eax,eax
  409e12:	mov    edi,eax
  409e14:	lea    rsi,[rip+0x6b09]        # 410924 <rb_strcasecmp@plt+0xe3d4>
  409e1b:	lea    rdx,[rbp-0x38]
  409e1f:	call   402130 <rb_strtok_r@plt>
  409e24:	mov    QWORD PTR [rbp-0x50],rax
  409e28:	jmp    409cac <rb_strcasecmp@plt+0x775c>
  409e2d:	jmp    409e32 <rb_strcasecmp@plt+0x78e2>
  409e32:	mov    rdi,QWORD PTR [rbp-0x40]
  409e36:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  409e3b:	mov    rdi,QWORD PTR [rbp-0x18]
  409e3f:	mov    rdi,QWORD PTR [rdi+0x8]
  409e43:	call   402330 <atoi@plt>
  409e48:	and    eax,0x3
  409e4b:	mov    cl,al
  409e4d:	mov    BYTE PTR [rbp-0x41],cl
  409e50:	mov    rdi,QWORD PTR [rbp-0x18]
  409e54:	mov    rdi,QWORD PTR [rdi]
  409e57:	mov    rdx,QWORD PTR [rbp-0x18]
  409e5b:	mov    rsi,QWORD PTR [rdx+0x18]
  409e5f:	movzx  edx,BYTE PTR [rbp-0x41]
  409e63:	lea    rcx,[rbp-0x30]
  409e67:	call   40a430 <rb_strcasecmp@plt+0x7ee0>
  409e6c:	cmp    rax,0x0
  409e70:	jne    409e93 <rb_strcasecmp@plt+0x7943>
  409e76:	mov    edi,0x43
  409e7b:	lea    rsi,[rip+0x6b6c]        # 4109ee <rb_strcasecmp@plt+0xe49e>
  409e82:	mov    al,0x0
  409e84:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  409e89:	mov    edi,0x3
  409e8e:	call   4020e0 <exit@plt>
  409e93:	add    rsp,0x70
  409e97:	pop    rbp
  409e98:	ret    
  409e99:	nop    DWORD PTR [rax+0x0]
  409ea0:	push   rbp
  409ea1:	mov    rbp,rsp
  409ea4:	sub    rsp,0x20
  409ea8:	mov    QWORD PTR [rbp-0x8],rdi
  409eac:	mov    DWORD PTR [rbp-0xc],esi
  409eaf:	mov    QWORD PTR [rbp-0x18],rdx
  409eb3:	mov    rdx,QWORD PTR [rbp-0x18]
  409eb7:	mov    rdi,QWORD PTR [rdx]
  409eba:	call   40a560 <rb_strcasecmp@plt+0x8010>
  409ebf:	mov    QWORD PTR [rbp-0x20],rax
  409ec3:	cmp    QWORD PTR [rbp-0x20],0x0
  409ec8:	jne    409eed <rb_strcasecmp@plt+0x799d>
  409ece:	mov    rax,QWORD PTR [rbp-0x18]
  409ed2:	mov    rdx,QWORD PTR [rax]
  409ed5:	mov    edi,0x57
  409eda:	lea    rsi,[rip+0x6b8a]        # 410a6b <rb_strcasecmp@plt+0xe51b>
  409ee1:	mov    al,0x0
  409ee3:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  409ee8:	jmp    409ef6 <rb_strcasecmp@plt+0x79a6>
  409eed:	mov    rdi,QWORD PTR [rbp-0x20]
  409ef1:	call   40a740 <rb_strcasecmp@plt+0x81f0>
  409ef6:	add    rsp,0x20
  409efa:	pop    rbp
  409efb:	ret    
  409efc:	nop    DWORD PTR [rax+0x0]
  409f00:	push   rbp
  409f01:	mov    rbp,rsp
  409f04:	sub    rsp,0x20
  409f08:	mov    QWORD PTR [rbp-0x8],rdi
  409f0c:	mov    DWORD PTR [rbp-0xc],esi
  409f0f:	mov    QWORD PTR [rbp-0x18],rdx
  409f13:	call   40a9d0 <rb_strcasecmp@plt+0x8480>
  409f18:	add    rsp,0x20
  409f1c:	pop    rbp
  409f1d:	ret    
  409f1e:	xchg   ax,ax
  409f20:	push   rbp
  409f21:	mov    rbp,rsp
  409f24:	sub    rsp,0x20
  409f28:	mov    QWORD PTR [rbp-0x8],rdi
  409f2c:	mov    DWORD PTR [rbp-0xc],esi
  409f2f:	mov    QWORD PTR [rbp-0x18],rdx
  409f33:	mov    rdx,QWORD PTR [rbp-0x18]
  409f37:	mov    rdi,QWORD PTR [rdx]
  409f3a:	call   402330 <atoi@plt>
  409f3f:	mov    DWORD PTR [rbp-0x1c],eax
  409f42:	cmp    DWORD PTR [rbp-0x1c],0x0
  409f46:	jge    409f6c <rb_strcasecmp@plt+0x7a1c>
  409f4c:	mov    edx,DWORD PTR [rbp-0x1c]
  409f4f:	mov    edi,0x43
  409f54:	lea    rsi,[rip+0x6ba8]        # 410b03 <rb_strcasecmp@plt+0xe5b3>
  409f5b:	mov    al,0x0
  409f5d:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  409f62:	mov    edi,0x3
  409f67:	call   4020e0 <exit@plt>
  409f6c:	mov    eax,DWORD PTR [rbp-0x1c]
  409f6f:	mov    DWORD PTR [rip+0xcc3b],eax        # 416bb0 <rb_strcasecmp@plt+0x14660>
  409f75:	add    rsp,0x20
  409f79:	pop    rbp
  409f7a:	ret    
  409f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f80:	push   rbp
  409f81:	mov    rbp,rsp
  409f84:	sub    rsp,0x20
  409f88:	lea    rax,[rip+0x11209]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  409f8f:	mov    rdi,QWORD PTR [rax]
  409f92:	lea    rsi,[rbp-0x10]
  409f96:	call   402250 <rb_dictionary_foreach_start@plt>
  409f9b:	lea    rax,[rip+0x111f6]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  409fa2:	mov    rdi,QWORD PTR [rax]
  409fa5:	lea    rsi,[rbp-0x10]
  409fa9:	call   402140 <rb_dictionary_foreach_cur@plt>
  409fae:	mov    QWORD PTR [rbp-0x18],rax
  409fb2:	cmp    rax,0x0
  409fb6:	je     409fdd <rb_strcasecmp@plt+0x7a8d>
  409fbc:	mov    rdi,QWORD PTR [rbp-0x18]
  409fc0:	call   40a0e0 <rb_strcasecmp@plt+0x7b90>
  409fc5:	lea    rax,[rip+0x111cc]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  409fcc:	mov    rdi,QWORD PTR [rax]
  409fcf:	lea    rsi,[rbp-0x10]
  409fd3:	call   4021e0 <rb_dictionary_foreach_next@plt>
  409fd8:	jmp    409f9b <rb_strcasecmp@plt+0x7a4b>
  409fdd:	call   40a9d0 <rb_strcasecmp@plt+0x8480>
  409fe2:	add    rsp,0x20
  409fe6:	pop    rbp
  409fe7:	ret    
  409fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ff0:	push   rbp
  409ff1:	mov    rbp,rsp
  409ff4:	sub    rsp,0x20
  409ff8:	mov    QWORD PTR [rbp-0x10],rdi
  409ffc:	cmp    QWORD PTR [rip+0x10fe4],0x0        # 41afe8 <rb_strcasecmp@plt+0x18a98>
  40a004:	jne    40a026 <rb_strcasecmp@plt+0x7ad6>
  40a00a:	lea    rax,[rip+0xcb27]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40a011:	mov    rdi,QWORD PTR [rbp-0x10]
  40a015:	mov    esi,DWORD PTR [rax+0x18]
  40a018:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40a01d:	mov    BYTE PTR [rbp-0x1],0x1
  40a021:	jmp    40a0c5 <rb_strcasecmp@plt+0x7b75>
  40a026:	mov    rdi,QWORD PTR [rbp-0x10]
  40a02a:	call   40aa80 <rb_strcasecmp@plt+0x8530>
  40a02f:	mov    eax,0x20
  40a034:	mov    edi,eax
  40a036:	lea    rcx,[rip+0xcafb]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40a03d:	mov    rdx,QWORD PTR [rbp-0x10]
  40a041:	mov    esi,DWORD PTR [rcx+0x18]
  40a044:	mov    DWORD PTR [rbp-0x14],esi
  40a047:	mov    QWORD PTR [rbp-0x20],rdx
  40a04b:	call   40a260 <rb_strcasecmp@plt+0x7d10>
  40a050:	mov    rdi,QWORD PTR [rbp-0x20]
  40a054:	mov    esi,DWORD PTR [rbp-0x14]
  40a057:	mov    rdx,rax
  40a05a:	call   40aaa0 <rb_strcasecmp@plt+0x8550>
  40a05f:	mov    rdi,QWORD PTR [rbp-0x10]
  40a063:	lea    rsi,[rip+0x6abe]        # 410b28 <rb_strcasecmp@plt+0xe5d8>
  40a06a:	call   40aad0 <rb_strcasecmp@plt+0x8580>
  40a06f:	test   al,0x1
  40a071:	jne    40a07c <rb_strcasecmp@plt+0x7b2c>
  40a077:	jmp    40a0c1 <rb_strcasecmp@plt+0x7b71>
  40a07c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a080:	lea    rsi,[rip+0x6c81]        # 410d08 <rb_strcasecmp@plt+0xe7b8>
  40a087:	call   40aad0 <rb_strcasecmp@plt+0x8580>
  40a08c:	test   al,0x1
  40a08e:	jne    40a099 <rb_strcasecmp@plt+0x7b49>
  40a094:	jmp    40a0c1 <rb_strcasecmp@plt+0x7b71>
  40a099:	mov    rdi,QWORD PTR [rbp-0x10]
  40a09d:	call   40ab30 <rb_strcasecmp@plt+0x85e0>
  40a0a2:	test   al,0x1
  40a0a4:	jne    40a0bc <rb_strcasecmp@plt+0x7b6c>
  40a0aa:	mov    rdi,QWORD PTR [rbp-0x10]
  40a0ae:	call   40ac70 <rb_strcasecmp@plt+0x8720>
  40a0b3:	mov    BYTE PTR [rbp-0x1],0x1
  40a0b7:	jmp    40a0c5 <rb_strcasecmp@plt+0x7b75>
  40a0bc:	jmp    40a0c1 <rb_strcasecmp@plt+0x7b71>
  40a0c1:	mov    BYTE PTR [rbp-0x1],0x1
  40a0c5:	mov    al,BYTE PTR [rbp-0x1]
  40a0c8:	and    al,0x1
  40a0ca:	movzx  eax,al
  40a0cd:	add    rsp,0x20
  40a0d1:	pop    rbp
  40a0d2:	ret    
  40a0d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0dd:	nop    DWORD PTR [rax]
  40a0e0:	push   rbp
  40a0e1:	mov    rbp,rsp
  40a0e4:	sub    rsp,0x10
  40a0e8:	mov    QWORD PTR [rbp-0x8],rdi
  40a0ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0f0:	lea    rsi,[rip+0x6b08]        # 410bff <rb_strcasecmp@plt+0xe6af>
  40a0f7:	call   40b570 <rb_strcasecmp@plt+0x9020>
  40a0fc:	add    rsp,0x10
  40a100:	pop    rbp
  40a101:	ret    
  40a102:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a10c:	nop    DWORD PTR [rax+0x0]
  40a110:	push   rbp
  40a111:	mov    rbp,rsp
  40a114:	sub    rsp,0x10
  40a118:	mov    QWORD PTR [rbp-0x8],rdi
  40a11c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a120:	lea    rsi,[rip+0x6af2]        # 410c19 <rb_strcasecmp@plt+0xe6c9>
  40a127:	call   40b570 <rb_strcasecmp@plt+0x9020>
  40a12c:	add    rsp,0x10
  40a130:	pop    rbp
  40a131:	ret    
  40a132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a13c:	nop    DWORD PTR [rax+0x0]
  40a140:	push   rbp
  40a141:	mov    rbp,rsp
  40a144:	sub    rsp,0x20
  40a148:	lea    rax,[rip+0xc9e9]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40a14f:	mov    QWORD PTR [rbp-0x8],rdi
  40a153:	mov    DWORD PTR [rbp-0xc],esi
  40a156:	mov    rdi,QWORD PTR [rbp-0x8]
  40a15a:	mov    esi,DWORD PTR [rax+0x18]
  40a15d:	call   40ada0 <rb_strcasecmp@plt+0x8850>
  40a162:	mov    QWORD PTR [rbp-0x18],rax
  40a166:	cmp    QWORD PTR [rbp-0x18],0x0
  40a16b:	je     40a17e <rb_strcasecmp@plt+0x7c2e>
  40a171:	mov    rax,QWORD PTR [rbp-0x18]
  40a175:	test   BYTE PTR [rax],0x1
  40a178:	je     40a183 <rb_strcasecmp@plt+0x7c33>
  40a17e:	jmp    40a1e1 <rb_strcasecmp@plt+0x7c91>
  40a183:	mov    rdi,QWORD PTR [rbp-0x8]
  40a187:	lea    rsi,[rip+0x699a]        # 410b28 <rb_strcasecmp@plt+0xe5d8>
  40a18e:	call   40aad0 <rb_strcasecmp@plt+0x8580>
  40a193:	test   al,0x1
  40a195:	jne    40a1a0 <rb_strcasecmp@plt+0x7c50>
  40a19b:	jmp    40a1dc <rb_strcasecmp@plt+0x7c8c>
  40a1a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1a4:	lea    rsi,[rip+0x6b5d]        # 410d08 <rb_strcasecmp@plt+0xe7b8>
  40a1ab:	call   40aad0 <rb_strcasecmp@plt+0x8580>
  40a1b0:	test   al,0x1
  40a1b2:	jne    40a1bd <rb_strcasecmp@plt+0x7c6d>
  40a1b8:	jmp    40a1dc <rb_strcasecmp@plt+0x7c8c>
  40a1bd:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1c1:	call   40ab30 <rb_strcasecmp@plt+0x85e0>
  40a1c6:	test   al,0x1
  40a1c8:	jne    40a1d7 <rb_strcasecmp@plt+0x7c87>
  40a1ce:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1d2:	call   40ac70 <rb_strcasecmp@plt+0x8720>
  40a1d7:	jmp    40a1dc <rb_strcasecmp@plt+0x7c8c>
  40a1dc:	jmp    40a1e1 <rb_strcasecmp@plt+0x7c91>
  40a1e1:	add    rsp,0x20
  40a1e5:	pop    rbp
  40a1e6:	ret    
  40a1e7:	nop    WORD PTR [rax+rax*1+0x0]
  40a1f0:	push   rbp
  40a1f1:	mov    rbp,rsp
  40a1f4:	sub    rsp,0x20
  40a1f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a1fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a200:	call   402210 <strlen@plt>
  40a205:	add    rax,0x1
  40a209:	mov    rdi,rax
  40a20c:	call   402180 <malloc@plt>
  40a211:	mov    QWORD PTR [rbp-0x10],rax
  40a215:	cmp    QWORD PTR [rbp-0x10],0x0
  40a21a:	sete   cl
  40a21d:	xor    cl,0xff
  40a220:	xor    cl,0xff
  40a223:	and    cl,0x1
  40a226:	movzx  edx,cl
  40a229:	movsxd rax,edx
  40a22c:	cmp    rax,0x0
  40a230:	je     40a23b <rb_strcasecmp@plt+0x7ceb>
  40a236:	call   4023b0 <rb_outofmemory@plt>
  40a23b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a23f:	mov    rsi,QWORD PTR [rbp-0x8]
  40a243:	call   402440 <strcpy@plt>
  40a248:	mov    rsi,QWORD PTR [rbp-0x10]
  40a24c:	mov    QWORD PTR [rbp-0x18],rax
  40a250:	mov    rax,rsi
  40a253:	add    rsp,0x20
  40a257:	pop    rbp
  40a258:	ret    
  40a259:	nop    DWORD PTR [rax+0x0]
  40a260:	push   rbp
  40a261:	mov    rbp,rsp
  40a264:	sub    rsp,0x10
  40a268:	mov    eax,0x1
  40a26d:	mov    ecx,eax
  40a26f:	mov    QWORD PTR [rbp-0x8],rdi
  40a273:	mov    rsi,QWORD PTR [rbp-0x8]
  40a277:	mov    rdi,rcx
  40a27a:	call   402470 <calloc@plt>
  40a27f:	mov    QWORD PTR [rbp-0x10],rax
  40a283:	cmp    QWORD PTR [rbp-0x10],0x0
  40a288:	sete   dl
  40a28b:	xor    dl,0xff
  40a28e:	xor    dl,0xff
  40a291:	and    dl,0x1
  40a294:	movzx  r8d,dl
  40a298:	movsxd rax,r8d
  40a29b:	cmp    rax,0x0
  40a29f:	je     40a2aa <rb_strcasecmp@plt+0x7d5a>
  40a2a5:	call   4023b0 <rb_outofmemory@plt>
  40a2aa:	mov    rax,QWORD PTR [rbp-0x10]
  40a2ae:	add    rsp,0x10
  40a2b2:	pop    rbp
  40a2b3:	ret    
  40a2b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2be:	xchg   ax,ax
  40a2c0:	push   rbp
  40a2c1:	mov    rbp,rsp
  40a2c4:	sub    rsp,0x20
  40a2c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a2cc:	mov    QWORD PTR [rbp-0x10],rsi
  40a2d0:	mov    QWORD PTR [rbp-0x18],rdx
  40a2d4:	cmp    QWORD PTR [rbp-0x8],0x0
  40a2d9:	je     40a2e4 <rb_strcasecmp@plt+0x7d94>
  40a2df:	jmp    40a303 <rb_strcasecmp@plt+0x7db3>
  40a2e4:	lea    rdi,[rip+0x6260]        # 41054b <rb_strcasecmp@plt+0xdffb>
  40a2eb:	lea    rsi,[rip+0x61fa]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a2f2:	mov    edx,0x8f
  40a2f7:	lea    rcx,[rip+0x625a]        # 410558 <rb_strcasecmp@plt+0xe008>
  40a2fe:	call   4020f0 <__assert_fail@plt>
  40a303:	cmp    QWORD PTR [rbp-0x10],0x0
  40a308:	je     40a313 <rb_strcasecmp@plt+0x7dc3>
  40a30e:	jmp    40a332 <rb_strcasecmp@plt+0x7de2>
  40a313:	lea    rdi,[rip+0x6704]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  40a31a:	lea    rsi,[rip+0x61cb]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a321:	mov    edx,0x90
  40a326:	lea    rcx,[rip+0x622b]        # 410558 <rb_strcasecmp@plt+0xe008>
  40a32d:	call   4020f0 <__assert_fail@plt>
  40a332:	cmp    QWORD PTR [rbp-0x18],0x0
  40a337:	je     40a342 <rb_strcasecmp@plt+0x7df2>
  40a33d:	jmp    40a361 <rb_strcasecmp@plt+0x7e11>
  40a342:	lea    rdi,[rip+0x61f5]        # 41053e <rb_strcasecmp@plt+0xdfee>
  40a349:	lea    rsi,[rip+0x619c]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a350:	mov    edx,0x91
  40a355:	lea    rcx,[rip+0x61fc]        # 410558 <rb_strcasecmp@plt+0xe008>
  40a35c:	call   4020f0 <__assert_fail@plt>
  40a361:	mov    rax,QWORD PTR [rbp-0x8]
  40a365:	mov    rcx,QWORD PTR [rbp-0x10]
  40a369:	mov    QWORD PTR [rcx],rax
  40a36c:	mov    rax,QWORD PTR [rbp-0x10]
  40a370:	mov    QWORD PTR [rax+0x8],0x0
  40a378:	mov    rax,QWORD PTR [rbp-0x18]
  40a37c:	mov    rax,QWORD PTR [rax]
  40a37f:	mov    rcx,QWORD PTR [rbp-0x10]
  40a383:	mov    QWORD PTR [rcx+0x10],rax
  40a387:	mov    rax,QWORD PTR [rbp-0x18]
  40a38b:	cmp    QWORD PTR [rax],0x0
  40a38f:	je     40a3a9 <rb_strcasecmp@plt+0x7e59>
  40a395:	mov    rax,QWORD PTR [rbp-0x10]
  40a399:	mov    rcx,QWORD PTR [rbp-0x18]
  40a39d:	mov    rcx,QWORD PTR [rcx]
  40a3a0:	mov    QWORD PTR [rcx+0x8],rax
  40a3a4:	jmp    40a3c9 <rb_strcasecmp@plt+0x7e79>
  40a3a9:	mov    rax,QWORD PTR [rbp-0x18]
  40a3ad:	cmp    QWORD PTR [rax+0x8],0x0
  40a3b2:	jne    40a3c4 <rb_strcasecmp@plt+0x7e74>
  40a3b8:	mov    rax,QWORD PTR [rbp-0x10]
  40a3bc:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3c0:	mov    QWORD PTR [rcx+0x8],rax
  40a3c4:	jmp    40a3c9 <rb_strcasecmp@plt+0x7e79>
  40a3c9:	mov    rax,QWORD PTR [rbp-0x10]
  40a3cd:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3d1:	mov    QWORD PTR [rcx],rax
  40a3d4:	mov    rax,QWORD PTR [rbp-0x18]
  40a3d8:	mov    rcx,QWORD PTR [rax+0x10]
  40a3dc:	add    rcx,0x1
  40a3e0:	mov    QWORD PTR [rax+0x10],rcx
  40a3e4:	add    rsp,0x20
  40a3e8:	pop    rbp
  40a3e9:	ret    
  40a3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a3f0:	push   rbp
  40a3f1:	mov    rbp,rsp
  40a3f4:	sub    rsp,0x10
  40a3f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a3fc:	cmp    QWORD PTR [rbp-0x8],0x0
  40a401:	setne  al
  40a404:	xor    al,0xff
  40a406:	xor    al,0xff
  40a408:	and    al,0x1
  40a40a:	movzx  ecx,al
  40a40d:	movsxd rdi,ecx
  40a410:	cmp    rdi,0x0
  40a414:	je     40a423 <rb_strcasecmp@plt+0x7ed3>
  40a41a:	mov    rdi,QWORD PTR [rbp-0x8]
  40a41e:	call   402200 <free@plt>
  40a423:	add    rsp,0x10
  40a427:	pop    rbp
  40a428:	ret    
  40a429:	nop    DWORD PTR [rax+0x0]
  40a430:	push   rbp
  40a431:	mov    rbp,rsp
  40a434:	sub    rsp,0x50
  40a438:	mov    al,dl
  40a43a:	mov    QWORD PTR [rbp-0x10],rdi
  40a43e:	mov    QWORD PTR [rbp-0x18],rsi
  40a442:	mov    BYTE PTR [rbp-0x19],al
  40a445:	mov    QWORD PTR [rbp-0x28],rcx
  40a449:	cmp    QWORD PTR [rbp-0x10],0x0
  40a44e:	je     40a46c <rb_strcasecmp@plt+0x7f1c>
  40a454:	cmp    QWORD PTR [rbp-0x18],0x0
  40a459:	je     40a46c <rb_strcasecmp@plt+0x7f1c>
  40a45f:	movzx  eax,BYTE PTR [rbp-0x19]
  40a463:	cmp    eax,0x0
  40a466:	jne    40a479 <rb_strcasecmp@plt+0x7f29>
  40a46c:	mov    QWORD PTR [rbp-0x8],0x0
  40a474:	jmp    40a54f <rb_strcasecmp@plt+0x7fff>
  40a479:	mov    rdi,QWORD PTR [rbp-0x10]
  40a47d:	call   40a560 <rb_strcasecmp@plt+0x8010>
  40a482:	mov    QWORD PTR [rbp-0x30],rax
  40a486:	cmp    rax,0x0
  40a48a:	jne    40a4c5 <rb_strcasecmp@plt+0x7f75>
  40a490:	mov    eax,0x338
  40a495:	mov    edi,eax
  40a497:	call   40a260 <rb_strcasecmp@plt+0x7d10>
  40a49c:	mov    QWORD PTR [rbp-0x30],rax
  40a4a0:	mov    rax,QWORD PTR [rbp-0x30]
  40a4a4:	mov    QWORD PTR [rbp-0x38],rax
  40a4a8:	call   4024e0 <rb_make_rb_dlink_node@plt>
  40a4ad:	mov    rdi,QWORD PTR [rbp-0x38]
  40a4b1:	mov    rsi,rax
  40a4b4:	lea    rdx,[rip+0x10b1d]        # 41afd8 <rb_strcasecmp@plt+0x18a88>
  40a4bb:	call   40a2c0 <rb_strcasecmp@plt+0x7d70>
  40a4c0:	jmp    40a4d0 <rb_strcasecmp@plt+0x7f80>
  40a4c5:	mov    rax,QWORD PTR [rbp-0x30]
  40a4c9:	mov    BYTE PTR [rax+0x320],0x0
  40a4d0:	mov    eax,0x100
  40a4d5:	mov    edx,eax
  40a4d7:	mov    rdi,QWORD PTR [rbp-0x30]
  40a4db:	mov    rsi,QWORD PTR [rbp-0x10]
  40a4df:	call   4021d0 <rb_strlcpy@plt>
  40a4e4:	mov    ecx,0x200
  40a4e9:	mov    edx,ecx
  40a4eb:	mov    rsi,QWORD PTR [rbp-0x30]
  40a4ef:	add    rsi,0x100
  40a4f6:	mov    rdi,QWORD PTR [rbp-0x18]
  40a4fa:	mov    QWORD PTR [rbp-0x40],rdi
  40a4fe:	mov    rdi,rsi
  40a501:	mov    rsi,QWORD PTR [rbp-0x40]
  40a505:	mov    QWORD PTR [rbp-0x48],rax
  40a509:	call   4021d0 <rb_strlcpy@plt>
  40a50e:	mov    r8b,BYTE PTR [rbp-0x19]
  40a512:	mov    rdx,QWORD PTR [rbp-0x30]
  40a516:	mov    BYTE PTR [rdx+0x300],r8b
  40a51d:	mov    rdi,QWORD PTR [rbp-0x28]
  40a521:	mov    rdx,QWORD PTR [rbp-0x30]
  40a525:	add    rdx,0x308
  40a52c:	mov    rsi,rdx
  40a52f:	mov    QWORD PTR [rbp-0x50],rax
  40a533:	call   40a5e0 <rb_strcasecmp@plt+0x8090>
  40a538:	mov    rax,QWORD PTR [rbp-0x30]
  40a53c:	mov    QWORD PTR [rax+0x330],0x0
  40a547:	mov    rax,QWORD PTR [rbp-0x30]
  40a54b:	mov    QWORD PTR [rbp-0x8],rax
  40a54f:	mov    rax,QWORD PTR [rbp-0x8]
  40a553:	add    rsp,0x50
  40a557:	pop    rbp
  40a558:	ret    
  40a559:	nop    DWORD PTR [rax+0x0]
  40a560:	push   rbp
  40a561:	mov    rbp,rsp
  40a564:	sub    rsp,0x20
  40a568:	mov    QWORD PTR [rbp-0x10],rdi
  40a56c:	mov    rdi,QWORD PTR [rip+0x10a65]        # 41afd8 <rb_strcasecmp@plt+0x18a88>
  40a573:	mov    QWORD PTR [rbp-0x18],rdi
  40a577:	cmp    QWORD PTR [rbp-0x18],0x0
  40a57c:	je     40a5c6 <rb_strcasecmp@plt+0x8076>
  40a582:	mov    rax,QWORD PTR [rbp-0x18]
  40a586:	mov    rax,QWORD PTR [rax]
  40a589:	mov    QWORD PTR [rbp-0x20],rax
  40a58d:	mov    rdi,QWORD PTR [rbp-0x20]
  40a591:	mov    rsi,QWORD PTR [rbp-0x10]
  40a595:	call   402120 <strcasecmp@plt>
  40a59a:	cmp    eax,0x0
  40a59d:	jne    40a5b0 <rb_strcasecmp@plt+0x8060>
  40a5a3:	mov    rax,QWORD PTR [rbp-0x20]
  40a5a7:	mov    QWORD PTR [rbp-0x8],rax
  40a5ab:	jmp    40a5ce <rb_strcasecmp@plt+0x807e>
  40a5b0:	jmp    40a5b5 <rb_strcasecmp@plt+0x8065>
  40a5b5:	mov    rax,QWORD PTR [rbp-0x18]
  40a5b9:	mov    rax,QWORD PTR [rax+0x10]
  40a5bd:	mov    QWORD PTR [rbp-0x18],rax
  40a5c1:	jmp    40a577 <rb_strcasecmp@plt+0x8027>
  40a5c6:	mov    QWORD PTR [rbp-0x8],0x0
  40a5ce:	mov    rax,QWORD PTR [rbp-0x8]
  40a5d2:	add    rsp,0x20
  40a5d6:	pop    rbp
  40a5d7:	ret    
  40a5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5e0:	push   rbp
  40a5e1:	mov    rbp,rsp
  40a5e4:	sub    rsp,0x10
  40a5e8:	mov    QWORD PTR [rbp-0x8],rdi
  40a5ec:	mov    QWORD PTR [rbp-0x10],rsi
  40a5f0:	cmp    QWORD PTR [rbp-0x8],0x0
  40a5f5:	je     40a600 <rb_strcasecmp@plt+0x80b0>
  40a5fb:	jmp    40a61f <rb_strcasecmp@plt+0x80cf>
  40a600:	lea    rdi,[rip+0x6414]        # 410a1b <rb_strcasecmp@plt+0xe4cb>
  40a607:	lea    rsi,[rip+0x5ede]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a60e:	mov    edx,0x144
  40a613:	lea    rcx,[rip+0x640e]        # 410a28 <rb_strcasecmp@plt+0xe4d8>
  40a61a:	call   4020f0 <__assert_fail@plt>
  40a61f:	cmp    QWORD PTR [rbp-0x10],0x0
  40a624:	je     40a62f <rb_strcasecmp@plt+0x80df>
  40a62a:	jmp    40a64e <rb_strcasecmp@plt+0x80fe>
  40a62f:	lea    rdi,[rip+0x642a]        # 410a60 <rb_strcasecmp@plt+0xe510>
  40a636:	lea    rsi,[rip+0x5eaf]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a63d:	mov    edx,0x145
  40a642:	lea    rcx,[rip+0x63df]        # 410a28 <rb_strcasecmp@plt+0xe4d8>
  40a649:	call   4020f0 <__assert_fail@plt>
  40a64e:	mov    rax,QWORD PTR [rbp-0x8]
  40a652:	cmp    QWORD PTR [rax],0x0
  40a656:	jne    40a661 <rb_strcasecmp@plt+0x8111>
  40a65c:	jmp    40a730 <rb_strcasecmp@plt+0x81e0>
  40a661:	mov    rax,QWORD PTR [rbp-0x10]
  40a665:	cmp    QWORD PTR [rax],0x0
  40a669:	jne    40a6c5 <rb_strcasecmp@plt+0x8175>
  40a66f:	mov    rax,QWORD PTR [rbp-0x8]
  40a673:	mov    rax,QWORD PTR [rax]
  40a676:	mov    rcx,QWORD PTR [rbp-0x10]
  40a67a:	mov    QWORD PTR [rcx],rax
  40a67d:	mov    rax,QWORD PTR [rbp-0x8]
  40a681:	mov    rax,QWORD PTR [rax+0x8]
  40a685:	mov    rcx,QWORD PTR [rbp-0x10]
  40a689:	mov    QWORD PTR [rcx+0x8],rax
  40a68d:	mov    rax,QWORD PTR [rbp-0x8]
  40a691:	mov    QWORD PTR [rax+0x8],0x0
  40a699:	mov    rax,QWORD PTR [rbp-0x8]
  40a69d:	mov    QWORD PTR [rax],0x0
  40a6a4:	mov    rax,QWORD PTR [rbp-0x8]
  40a6a8:	mov    rax,QWORD PTR [rax+0x10]
  40a6ac:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6b0:	mov    QWORD PTR [rcx+0x10],rax
  40a6b4:	mov    rax,QWORD PTR [rbp-0x8]
  40a6b8:	mov    QWORD PTR [rax+0x10],0x0
  40a6c0:	jmp    40a730 <rb_strcasecmp@plt+0x81e0>
  40a6c5:	mov    rax,QWORD PTR [rbp-0x10]
  40a6c9:	mov    rax,QWORD PTR [rax]
  40a6cc:	mov    rcx,QWORD PTR [rbp-0x8]
  40a6d0:	mov    rcx,QWORD PTR [rcx+0x8]
  40a6d4:	mov    QWORD PTR [rcx+0x10],rax
  40a6d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a6dc:	mov    rax,QWORD PTR [rax+0x8]
  40a6e0:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6e4:	mov    rcx,QWORD PTR [rcx]
  40a6e7:	mov    QWORD PTR [rcx+0x8],rax
  40a6eb:	mov    rax,QWORD PTR [rbp-0x8]
  40a6ef:	mov    rax,QWORD PTR [rax]
  40a6f2:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6f6:	mov    QWORD PTR [rcx],rax
  40a6f9:	mov    rax,QWORD PTR [rbp-0x8]
  40a6fd:	mov    QWORD PTR [rax+0x8],0x0
  40a705:	mov    rax,QWORD PTR [rbp-0x8]
  40a709:	mov    QWORD PTR [rax],0x0
  40a710:	mov    rax,QWORD PTR [rbp-0x8]
  40a714:	mov    rax,QWORD PTR [rax+0x10]
  40a718:	mov    rcx,QWORD PTR [rbp-0x10]
  40a71c:	add    rax,QWORD PTR [rcx+0x10]
  40a720:	mov    QWORD PTR [rcx+0x10],rax
  40a724:	mov    rax,QWORD PTR [rbp-0x8]
  40a728:	mov    QWORD PTR [rax+0x10],0x0
  40a730:	add    rsp,0x10
  40a734:	pop    rbp
  40a735:	ret    
  40a736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a740:	push   rbp
  40a741:	mov    rbp,rsp
  40a744:	sub    rsp,0x10
  40a748:	mov    QWORD PTR [rbp-0x8],rdi
  40a74c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a750:	cmp    DWORD PTR [rdi+0x324],0x0
  40a757:	jle    40a76d <rb_strcasecmp@plt+0x821d>
  40a75d:	mov    rax,QWORD PTR [rbp-0x8]
  40a761:	mov    BYTE PTR [rax+0x320],0x1
  40a768:	jmp    40a78f <rb_strcasecmp@plt+0x823f>
  40a76d:	mov    rax,QWORD PTR [rbp-0x8]
  40a771:	mov    rdi,rax
  40a774:	lea    rsi,[rip+0x1085d]        # 41afd8 <rb_strcasecmp@plt+0x18a88>
  40a77b:	call   40a7a0 <rb_strcasecmp@plt+0x8250>
  40a780:	mov    rsi,QWORD PTR [rbp-0x8]
  40a784:	mov    rdi,rsi
  40a787:	mov    DWORD PTR [rbp-0xc],eax
  40a78a:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40a78f:	add    rsp,0x10
  40a793:	pop    rbp
  40a794:	ret    
  40a795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a79f:	nop
  40a7a0:	push   rbp
  40a7a1:	mov    rbp,rsp
  40a7a4:	sub    rsp,0x20
  40a7a8:	mov    QWORD PTR [rbp-0x10],rdi
  40a7ac:	mov    QWORD PTR [rbp-0x18],rsi
  40a7b0:	cmp    QWORD PTR [rbp-0x18],0x0
  40a7b5:	je     40a7c0 <rb_strcasecmp@plt+0x8270>
  40a7bb:	jmp    40a7df <rb_strcasecmp@plt+0x828f>
  40a7c0:	lea    rdi,[rip+0x5d77]        # 41053e <rb_strcasecmp@plt+0xdfee>
  40a7c7:	lea    rsi,[rip+0x5d1e]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a7ce:	mov    edx,0x11f
  40a7d3:	lea    rcx,[rip+0x62bd]        # 410a97 <rb_strcasecmp@plt+0xe547>
  40a7da:	call   4020f0 <__assert_fail@plt>
  40a7df:	cmp    QWORD PTR [rbp-0x10],0x0
  40a7e4:	je     40a7ef <rb_strcasecmp@plt+0x829f>
  40a7ea:	jmp    40a80e <rb_strcasecmp@plt+0x82be>
  40a7ef:	lea    rdi,[rip+0x5d55]        # 41054b <rb_strcasecmp@plt+0xdffb>
  40a7f6:	lea    rsi,[rip+0x5cef]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a7fd:	mov    edx,0x120
  40a802:	lea    rcx,[rip+0x628e]        # 410a97 <rb_strcasecmp@plt+0xe547>
  40a809:	call   4020f0 <__assert_fail@plt>
  40a80e:	mov    rdi,QWORD PTR [rbp-0x10]
  40a812:	mov    rsi,QWORD PTR [rbp-0x18]
  40a816:	call   40a860 <rb_strcasecmp@plt+0x8310>
  40a81b:	mov    QWORD PTR [rbp-0x20],rax
  40a81f:	cmp    QWORD PTR [rbp-0x20],0x0
  40a824:	je     40a842 <rb_strcasecmp@plt+0x82f2>
  40a82a:	mov    rax,QWORD PTR [rbp-0x20]
  40a82e:	mov    rdi,rax
  40a831:	call   4022e0 <rb_free_rb_dlink_node@plt>
  40a836:	mov    DWORD PTR [rbp-0x4],0x1
  40a83d:	jmp    40a849 <rb_strcasecmp@plt+0x82f9>
  40a842:	mov    DWORD PTR [rbp-0x4],0x0
  40a849:	mov    eax,DWORD PTR [rbp-0x4]
  40a84c:	add    rsp,0x20
  40a850:	pop    rbp
  40a851:	ret    
  40a852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a85c:	nop    DWORD PTR [rax+0x0]
  40a860:	push   rbp
  40a861:	mov    rbp,rsp
  40a864:	sub    rsp,0x20
  40a868:	mov    QWORD PTR [rbp-0x10],rdi
  40a86c:	mov    QWORD PTR [rbp-0x18],rsi
  40a870:	cmp    QWORD PTR [rbp-0x18],0x0
  40a875:	je     40a880 <rb_strcasecmp@plt+0x8330>
  40a87b:	jmp    40a89f <rb_strcasecmp@plt+0x834f>
  40a880:	lea    rdi,[rip+0x5cb7]        # 41053e <rb_strcasecmp@plt+0xdfee>
  40a887:	lea    rsi,[rip+0x5c5e]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a88e:	mov    edx,0x102
  40a893:	lea    rcx,[rip+0x622e]        # 410ac8 <rb_strcasecmp@plt+0xe578>
  40a89a:	call   4020f0 <__assert_fail@plt>
  40a89f:	cmp    QWORD PTR [rbp-0x10],0x0
  40a8a4:	je     40a8af <rb_strcasecmp@plt+0x835f>
  40a8aa:	jmp    40a8ce <rb_strcasecmp@plt+0x837e>
  40a8af:	lea    rdi,[rip+0x5c95]        # 41054b <rb_strcasecmp@plt+0xdffb>
  40a8b6:	lea    rsi,[rip+0x5c2f]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40a8bd:	mov    edx,0x103
  40a8c2:	lea    rcx,[rip+0x61ff]        # 410ac8 <rb_strcasecmp@plt+0xe578>
  40a8c9:	call   4020f0 <__assert_fail@plt>
  40a8ce:	mov    rax,QWORD PTR [rbp-0x18]
  40a8d2:	mov    rax,QWORD PTR [rax]
  40a8d5:	mov    QWORD PTR [rbp-0x20],rax
  40a8d9:	cmp    QWORD PTR [rbp-0x20],0x0
  40a8de:	je     40a9af <rb_strcasecmp@plt+0x845f>
  40a8e4:	mov    rax,QWORD PTR [rbp-0x20]
  40a8e8:	mov    rax,QWORD PTR [rax]
  40a8eb:	cmp    rax,QWORD PTR [rbp-0x10]
  40a8ef:	je     40a8fa <rb_strcasecmp@plt+0x83aa>
  40a8f5:	jmp    40a99e <rb_strcasecmp@plt+0x844e>
  40a8fa:	mov    rax,QWORD PTR [rbp-0x20]
  40a8fe:	cmp    QWORD PTR [rax+0x10],0x0
  40a903:	je     40a922 <rb_strcasecmp@plt+0x83d2>
  40a909:	mov    rax,QWORD PTR [rbp-0x20]
  40a90d:	mov    rax,QWORD PTR [rax+0x8]
  40a911:	mov    rcx,QWORD PTR [rbp-0x20]
  40a915:	mov    rcx,QWORD PTR [rcx+0x10]
  40a919:	mov    QWORD PTR [rcx+0x8],rax
  40a91d:	jmp    40a932 <rb_strcasecmp@plt+0x83e2>
  40a922:	mov    rax,QWORD PTR [rbp-0x20]
  40a926:	mov    rax,QWORD PTR [rax+0x8]
  40a92a:	mov    rcx,QWORD PTR [rbp-0x18]
  40a92e:	mov    QWORD PTR [rcx+0x8],rax
  40a932:	mov    rax,QWORD PTR [rbp-0x20]
  40a936:	cmp    QWORD PTR [rax+0x8],0x0
  40a93b:	je     40a95a <rb_strcasecmp@plt+0x840a>
  40a941:	mov    rax,QWORD PTR [rbp-0x20]
  40a945:	mov    rax,QWORD PTR [rax+0x10]
  40a949:	mov    rcx,QWORD PTR [rbp-0x20]
  40a94d:	mov    rcx,QWORD PTR [rcx+0x8]
  40a951:	mov    QWORD PTR [rcx+0x10],rax
  40a955:	jmp    40a969 <rb_strcasecmp@plt+0x8419>
  40a95a:	mov    rax,QWORD PTR [rbp-0x20]
  40a95e:	mov    rax,QWORD PTR [rax+0x10]
  40a962:	mov    rcx,QWORD PTR [rbp-0x18]
  40a966:	mov    QWORD PTR [rcx],rax
  40a969:	mov    rax,QWORD PTR [rbp-0x20]
  40a96d:	mov    QWORD PTR [rax+0x8],0x0
  40a975:	mov    rax,QWORD PTR [rbp-0x20]
  40a979:	mov    QWORD PTR [rax+0x10],0x0
  40a981:	mov    rax,QWORD PTR [rbp-0x18]
  40a985:	mov    rcx,QWORD PTR [rax+0x10]
  40a989:	add    rcx,0xffffffffffffffff
  40a98d:	mov    QWORD PTR [rax+0x10],rcx
  40a991:	mov    rax,QWORD PTR [rbp-0x20]
  40a995:	mov    QWORD PTR [rbp-0x8],rax
  40a999:	jmp    40a9b7 <rb_strcasecmp@plt+0x8467>
  40a99e:	mov    rax,QWORD PTR [rbp-0x20]
  40a9a2:	mov    rax,QWORD PTR [rax+0x10]
  40a9a6:	mov    QWORD PTR [rbp-0x20],rax
  40a9aa:	jmp    40a8d9 <rb_strcasecmp@plt+0x8389>
  40a9af:	mov    QWORD PTR [rbp-0x8],0x0
  40a9b7:	mov    rax,QWORD PTR [rbp-0x8]
  40a9bb:	add    rsp,0x20
  40a9bf:	pop    rbp
  40a9c0:	ret    
  40a9c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9d0:	push   rbp
  40a9d1:	mov    rbp,rsp
  40a9d4:	sub    rsp,0x20
  40a9d8:	mov    rax,QWORD PTR [rip+0x105f9]        # 41afd8 <rb_strcasecmp@plt+0x18a88>
  40a9df:	mov    QWORD PTR [rbp-0x8],rax
  40a9e3:	cmp    QWORD PTR [rbp-0x8],0x0
  40a9e8:	je     40a9ff <rb_strcasecmp@plt+0x84af>
  40a9ee:	mov    rax,QWORD PTR [rbp-0x8]
  40a9f2:	mov    rax,QWORD PTR [rax+0x10]
  40a9f6:	mov    QWORD PTR [rbp-0x18],rax
  40a9fa:	jmp    40aa0c <rb_strcasecmp@plt+0x84bc>
  40a9ff:	xor    eax,eax
  40aa01:	mov    ecx,eax
  40aa03:	mov    QWORD PTR [rbp-0x18],rcx
  40aa07:	jmp    40aa0c <rb_strcasecmp@plt+0x84bc>
  40aa0c:	mov    rax,QWORD PTR [rbp-0x18]
  40aa10:	mov    QWORD PTR [rbp-0x10],rax
  40aa14:	cmp    QWORD PTR [rbp-0x8],0x0
  40aa19:	je     40aa6c <rb_strcasecmp@plt+0x851c>
  40aa1f:	mov    rax,QWORD PTR [rbp-0x8]
  40aa23:	mov    rax,QWORD PTR [rax]
  40aa26:	mov    rdi,rax
  40aa29:	call   40a740 <rb_strcasecmp@plt+0x81f0>
  40aa2e:	mov    rax,QWORD PTR [rbp-0x10]
  40aa32:	mov    QWORD PTR [rbp-0x8],rax
  40aa36:	cmp    QWORD PTR [rbp-0x8],0x0
  40aa3b:	je     40aa52 <rb_strcasecmp@plt+0x8502>
  40aa41:	mov    rax,QWORD PTR [rbp-0x8]
  40aa45:	mov    rax,QWORD PTR [rax+0x10]
  40aa49:	mov    QWORD PTR [rbp-0x20],rax
  40aa4d:	jmp    40aa5f <rb_strcasecmp@plt+0x850f>
  40aa52:	xor    eax,eax
  40aa54:	mov    ecx,eax
  40aa56:	mov    QWORD PTR [rbp-0x20],rcx
  40aa5a:	jmp    40aa5f <rb_strcasecmp@plt+0x850f>
  40aa5f:	mov    rax,QWORD PTR [rbp-0x20]
  40aa63:	mov    QWORD PTR [rbp-0x10],rax
  40aa67:	jmp    40aa14 <rb_strcasecmp@plt+0x84c4>
  40aa6c:	add    rsp,0x20
  40aa70:	pop    rbp
  40aa71:	ret    
  40aa72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa7c:	nop    DWORD PTR [rax+0x0]
  40aa80:	push   rbp
  40aa81:	mov    rbp,rsp
  40aa84:	mov    QWORD PTR [rbp-0x8],rdi
  40aa88:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa8c:	mov    eax,DWORD PTR [rdi+0x1cc]
  40aa92:	add    eax,0x1
  40aa95:	mov    DWORD PTR [rdi+0x1cc],eax
  40aa9b:	pop    rbp
  40aa9c:	ret    
  40aa9d:	nop    DWORD PTR [rax]
  40aaa0:	push   rbp
  40aaa1:	mov    rbp,rsp
  40aaa4:	mov    QWORD PTR [rbp-0x8],rdi
  40aaa8:	mov    DWORD PTR [rbp-0xc],esi
  40aaab:	mov    QWORD PTR [rbp-0x18],rdx
  40aaaf:	mov    rdx,QWORD PTR [rbp-0x18]
  40aab3:	mov    rdi,QWORD PTR [rbp-0x8]
  40aab7:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40aabe:	mov    esi,DWORD PTR [rbp-0xc]
  40aac1:	mov    eax,esi
  40aac3:	shl    rax,0x5
  40aac7:	add    rdi,rax
  40aaca:	mov    QWORD PTR [rdi+0x10],rdx
  40aace:	pop    rbp
  40aacf:	ret    
  40aad0:	push   rbp
  40aad1:	mov    rbp,rsp
  40aad4:	sub    rsp,0x20
  40aad8:	mov    QWORD PTR [rbp-0x10],rdi
  40aadc:	mov    QWORD PTR [rbp-0x18],rsi
  40aae0:	mov    rdi,QWORD PTR [rbp-0x18]
  40aae4:	lea    rsi,[rbp-0x1c]
  40aae8:	call   40aca0 <rb_strcasecmp@plt+0x8750>
  40aaed:	test   al,0x1
  40aaef:	jne    40aafa <rb_strcasecmp@plt+0x85aa>
  40aaf5:	jmp    40ab17 <rb_strcasecmp@plt+0x85c7>
  40aafa:	mov    rdi,QWORD PTR [rbp-0x10]
  40aafe:	mov    esi,DWORD PTR [rbp-0x1c]
  40ab01:	call   40acf0 <rb_strcasecmp@plt+0x87a0>
  40ab06:	cmp    eax,0x2
  40ab09:	sete   cl
  40ab0c:	and    cl,0x1
  40ab0f:	mov    BYTE PTR [rbp-0x1],cl
  40ab12:	jmp    40ab1b <rb_strcasecmp@plt+0x85cb>
  40ab17:	mov    BYTE PTR [rbp-0x1],0x1
  40ab1b:	mov    al,BYTE PTR [rbp-0x1]
  40ab1e:	and    al,0x1
  40ab20:	movzx  eax,al
  40ab23:	add    rsp,0x20
  40ab27:	pop    rbp
  40ab28:	ret    
  40ab29:	nop    DWORD PTR [rax+0x0]
  40ab30:	push   rbp
  40ab31:	mov    rbp,rsp
  40ab34:	sub    rsp,0x30
  40ab38:	lea    rax,[rip+0xbff9]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40ab3f:	mov    QWORD PTR [rbp-0x10],rdi
  40ab43:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab47:	mov    esi,DWORD PTR [rax+0x18]
  40ab4a:	call   40ada0 <rb_strcasecmp@plt+0x8850>
  40ab4f:	mov    QWORD PTR [rbp-0x18],rax
  40ab53:	mov    rax,QWORD PTR [rbp-0x10]
  40ab57:	movzx  esi,WORD PTR [rax+0xf8]
  40ab5e:	cmp    esi,0x2
  40ab61:	jne    40ab73 <rb_strcasecmp@plt+0x8623>
  40ab67:	mov    DWORD PTR [rbp-0x24],0x1
  40ab6e:	jmp    40aba1 <rb_strcasecmp@plt+0x8651>
  40ab73:	mov    rax,QWORD PTR [rbp-0x10]
  40ab77:	movzx  ecx,WORD PTR [rax+0xf8]
  40ab7e:	cmp    ecx,0xa
  40ab81:	jne    40ab93 <rb_strcasecmp@plt+0x8643>
  40ab87:	mov    DWORD PTR [rbp-0x24],0x2
  40ab8e:	jmp    40ab9c <rb_strcasecmp@plt+0x864c>
  40ab93:	mov    BYTE PTR [rbp-0x1],0x0
  40ab97:	jmp    40ac5e <rb_strcasecmp@plt+0x870e>
  40ab9c:	jmp    40aba1 <rb_strcasecmp@plt+0x8651>
  40aba1:	mov    rax,QWORD PTR [rbp-0x18]
  40aba5:	mov    BYTE PTR [rax],0x1
  40aba8:	mov    rax,QWORD PTR [rbp-0x10]
  40abac:	mov    edi,DWORD PTR [rax]
  40abae:	lea    rsi,[rip+0x5f78]        # 410b2d <rb_strcasecmp@plt+0xe5dd>
  40abb5:	mov    al,0x0
  40abb7:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40abbc:	mov    rsi,QWORD PTR [rip+0x10415]        # 41afd8 <rb_strcasecmp@plt+0x18a88>
  40abc3:	mov    QWORD PTR [rbp-0x20],rsi
  40abc7:	cmp    QWORD PTR [rbp-0x20],0x0
  40abcc:	je     40ac28 <rb_strcasecmp@plt+0x86d8>
  40abd2:	mov    rax,QWORD PTR [rbp-0x20]
  40abd6:	mov    rax,QWORD PTR [rax]
  40abd9:	mov    QWORD PTR [rbp-0x30],rax
  40abdd:	mov    rax,QWORD PTR [rbp-0x30]
  40abe1:	test   BYTE PTR [rax+0x320],0x1
  40abe8:	jne    40ac12 <rb_strcasecmp@plt+0x86c2>
  40abee:	mov    rax,QWORD PTR [rbp-0x30]
  40abf2:	movzx  ecx,BYTE PTR [rax+0x300]
  40abf9:	and    ecx,DWORD PTR [rbp-0x24]
  40abfc:	cmp    ecx,0x0
  40abff:	je     40ac12 <rb_strcasecmp@plt+0x86c2>
  40ac05:	mov    rdi,QWORD PTR [rbp-0x30]
  40ac09:	mov    rsi,QWORD PTR [rbp-0x10]
  40ac0d:	call   40add0 <rb_strcasecmp@plt+0x8880>
  40ac12:	jmp    40ac17 <rb_strcasecmp@plt+0x86c7>
  40ac17:	mov    rax,QWORD PTR [rbp-0x20]
  40ac1b:	mov    rax,QWORD PTR [rax+0x10]
  40ac1f:	mov    QWORD PTR [rbp-0x20],rax
  40ac23:	jmp    40abc7 <rb_strcasecmp@plt+0x8677>
  40ac28:	mov    rax,QWORD PTR [rbp-0x18]
  40ac2c:	cmp    QWORD PTR [rax+0x18],0x0
  40ac31:	jne    40ac40 <rb_strcasecmp@plt+0x86f0>
  40ac37:	mov    BYTE PTR [rbp-0x1],0x0
  40ac3b:	jmp    40ac5e <rb_strcasecmp@plt+0x870e>
  40ac40:	lea    rax,[rip+0xbef1]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40ac47:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac4b:	mov    esi,DWORD PTR [rax+0x18]
  40ac4e:	movsxd rdx,DWORD PTR [rip+0xbf5b]        # 416bb0 <rb_strcasecmp@plt+0x14660>
  40ac55:	call   40af30 <rb_strcasecmp@plt+0x89e0>
  40ac5a:	mov    BYTE PTR [rbp-0x1],0x1
  40ac5e:	mov    al,BYTE PTR [rbp-0x1]
  40ac61:	and    al,0x1
  40ac63:	movzx  eax,al
  40ac66:	add    rsp,0x30
  40ac6a:	pop    rbp
  40ac6b:	ret    
  40ac6c:	nop    DWORD PTR [rax+0x0]
  40ac70:	push   rbp
  40ac71:	mov    rbp,rsp
  40ac74:	sub    rsp,0x10
  40ac78:	mov    QWORD PTR [rbp-0x8],rdi
  40ac7c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac80:	lea    rsi,[rip+0x5f5d]        # 410be4 <rb_strcasecmp@plt+0xe694>
  40ac87:	call   40b570 <rb_strcasecmp@plt+0x9020>
  40ac8c:	add    rsp,0x10
  40ac90:	pop    rbp
  40ac91:	ret    
  40ac92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac9c:	nop    DWORD PTR [rax+0x0]
  40aca0:	push   rbp
  40aca1:	mov    rbp,rsp
  40aca4:	sub    rsp,0x20
  40aca8:	mov    QWORD PTR [rbp-0x10],rdi
  40acac:	mov    QWORD PTR [rbp-0x18],rsi
  40acb0:	mov    rdi,QWORD PTR [rbp-0x10]
  40acb4:	call   40ad20 <rb_strcasecmp@plt+0x87d0>
  40acb9:	mov    QWORD PTR [rbp-0x20],rax
  40acbd:	cmp    QWORD PTR [rbp-0x20],0x0
  40acc2:	je     40acde <rb_strcasecmp@plt+0x878e>
  40acc8:	mov    rax,QWORD PTR [rbp-0x20]
  40accc:	mov    ecx,DWORD PTR [rax+0x18]
  40accf:	mov    rax,QWORD PTR [rbp-0x18]
  40acd3:	mov    DWORD PTR [rax],ecx
  40acd5:	mov    BYTE PTR [rbp-0x1],0x1
  40acd9:	jmp    40ace2 <rb_strcasecmp@plt+0x8792>
  40acde:	mov    BYTE PTR [rbp-0x1],0x0
  40ace2:	mov    al,BYTE PTR [rbp-0x1]
  40ace5:	and    al,0x1
  40ace7:	movzx  eax,al
  40acea:	add    rsp,0x20
  40acee:	pop    rbp
  40acef:	ret    
  40acf0:	push   rbp
  40acf1:	mov    rbp,rsp
  40acf4:	mov    QWORD PTR [rbp-0x8],rdi
  40acf8:	mov    DWORD PTR [rbp-0xc],esi
  40acfb:	mov    rdi,QWORD PTR [rbp-0x8]
  40acff:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40ad06:	mov    esi,DWORD PTR [rbp-0xc]
  40ad09:	mov    eax,esi
  40ad0b:	shl    rax,0x5
  40ad0f:	add    rdi,rax
  40ad12:	mov    eax,DWORD PTR [rdi+0x18]
  40ad15:	pop    rbp
  40ad16:	ret    
  40ad17:	nop    WORD PTR [rax+rax*1+0x0]
  40ad20:	push   rbp
  40ad21:	mov    rbp,rsp
  40ad24:	sub    rsp,0x20
  40ad28:	lea    rax,[rip+0x10471]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  40ad2f:	mov    QWORD PTR [rbp-0x10],rdi
  40ad33:	mov    rax,QWORD PTR [rax]
  40ad36:	mov    QWORD PTR [rbp-0x18],rax
  40ad3a:	cmp    QWORD PTR [rbp-0x18],0x0
  40ad3f:	je     40ad8d <rb_strcasecmp@plt+0x883d>
  40ad45:	mov    rax,QWORD PTR [rbp-0x18]
  40ad49:	mov    rax,QWORD PTR [rax]
  40ad4c:	mov    QWORD PTR [rbp-0x20],rax
  40ad50:	mov    rax,QWORD PTR [rbp-0x20]
  40ad54:	mov    rdi,QWORD PTR [rax+0x20]
  40ad58:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad5c:	call   402120 <strcasecmp@plt>
  40ad61:	cmp    eax,0x0
  40ad64:	jne    40ad77 <rb_strcasecmp@plt+0x8827>
  40ad6a:	mov    rax,QWORD PTR [rbp-0x20]
  40ad6e:	mov    QWORD PTR [rbp-0x8],rax
  40ad72:	jmp    40ad95 <rb_strcasecmp@plt+0x8845>
  40ad77:	jmp    40ad7c <rb_strcasecmp@plt+0x882c>
  40ad7c:	mov    rax,QWORD PTR [rbp-0x18]
  40ad80:	mov    rax,QWORD PTR [rax+0x10]
  40ad84:	mov    QWORD PTR [rbp-0x18],rax
  40ad88:	jmp    40ad3a <rb_strcasecmp@plt+0x87ea>
  40ad8d:	mov    QWORD PTR [rbp-0x8],0x0
  40ad95:	mov    rax,QWORD PTR [rbp-0x8]
  40ad99:	add    rsp,0x20
  40ad9d:	pop    rbp
  40ad9e:	ret    
  40ad9f:	nop
  40ada0:	push   rbp
  40ada1:	mov    rbp,rsp
  40ada4:	mov    QWORD PTR [rbp-0x8],rdi
  40ada8:	mov    DWORD PTR [rbp-0xc],esi
  40adab:	mov    rdi,QWORD PTR [rbp-0x8]
  40adaf:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40adb6:	mov    esi,DWORD PTR [rbp-0xc]
  40adb9:	mov    eax,esi
  40adbb:	shl    rax,0x5
  40adbf:	add    rdi,rax
  40adc2:	mov    rax,QWORD PTR [rdi+0x10]
  40adc6:	pop    rbp
  40adc7:	ret    
  40adc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40add0:	push   rbp
  40add1:	mov    rbp,rsp
  40add4:	sub    rsp,0x130
  40addb:	mov    eax,0x30
  40ade0:	mov    ecx,eax
  40ade2:	mov    QWORD PTR [rbp-0x8],rdi
  40ade6:	mov    QWORD PTR [rbp-0x10],rsi
  40adea:	mov    rdi,rcx
  40aded:	call   40a260 <rb_strcasecmp@plt+0x7d10>
  40adf2:	lea    rcx,[rip+0xbd3f]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40adf9:	mov    QWORD PTR [rbp-0x18],rax
  40adfd:	mov    rdi,QWORD PTR [rbp-0x10]
  40ae01:	mov    esi,DWORD PTR [rcx+0x18]
  40ae04:	call   40ada0 <rb_strcasecmp@plt+0x8850>
  40ae09:	mov    QWORD PTR [rbp-0x20],rax
  40ae0d:	mov    rax,QWORD PTR [rbp-0x8]
  40ae11:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae15:	mov    QWORD PTR [rcx],rax
  40ae18:	mov    rax,QWORD PTR [rbp-0x10]
  40ae1c:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae20:	mov    QWORD PTR [rcx+0x8],rax
  40ae24:	mov    rax,QWORD PTR [rbp-0x10]
  40ae28:	movzx  esi,WORD PTR [rax+0xf8]
  40ae2f:	mov    DWORD PTR [rbp-0x124],esi
  40ae35:	cmp    DWORD PTR [rbp-0x124],0x2
  40ae3c:	jne    40ae59 <rb_strcasecmp@plt+0x8909>
  40ae42:	mov    rax,QWORD PTR [rbp-0x8]
  40ae46:	movzx  ecx,BYTE PTR [rax+0x300]
  40ae4d:	and    ecx,0x1
  40ae50:	cmp    ecx,0x0
  40ae53:	je     40ae7d <rb_strcasecmp@plt+0x892d>
  40ae59:	cmp    DWORD PTR [rbp-0x124],0xa
  40ae60:	jne    40ae8e <rb_strcasecmp@plt+0x893e>
  40ae66:	mov    rax,QWORD PTR [rbp-0x8]
  40ae6a:	movzx  ecx,BYTE PTR [rax+0x300]
  40ae71:	and    ecx,0x2
  40ae74:	cmp    ecx,0x0
  40ae77:	jne    40ae8e <rb_strcasecmp@plt+0x893e>
  40ae7d:	mov    rax,QWORD PTR [rbp-0x18]
  40ae81:	mov    rdi,rax
  40ae84:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40ae89:	jmp    40af1a <rb_strcasecmp@plt+0x89ca>
  40ae8e:	mov    eax,0x100
  40ae93:	mov    esi,eax
  40ae95:	lea    rdi,[rbp-0x120]
  40ae9c:	mov    rcx,QWORD PTR [rbp-0x10]
  40aea0:	add    rcx,0xf8
  40aea7:	mov    rdx,QWORD PTR [rbp-0x8]
  40aeab:	mov    QWORD PTR [rbp-0x130],rdx
  40aeb2:	mov    rdx,rcx
  40aeb5:	mov    rcx,QWORD PTR [rbp-0x130]
  40aebc:	call   4056d0 <rb_strcasecmp@plt+0x3180>
  40aec1:	lea    rdi,[rbp-0x120]
  40aec8:	mov    rcx,QWORD PTR [rbp-0x18]
  40aecc:	mov    esi,0x2
  40aed1:	lea    rdx,[rip+0xa8]        # 40af80 <rb_strcasecmp@plt+0x8a30>
  40aed8:	call   402bc0 <rb_strcasecmp@plt+0x670>
  40aedd:	mov    rcx,QWORD PTR [rbp-0x18]
  40aee1:	mov    QWORD PTR [rcx+0x10],rax
  40aee5:	mov    rax,QWORD PTR [rbp-0x18]
  40aee9:	mov    rcx,QWORD PTR [rbp-0x18]
  40aeed:	add    rcx,0x18
  40aef1:	mov    rdx,QWORD PTR [rbp-0x20]
  40aef5:	add    rdx,0x8
  40aef9:	mov    rdi,rax
  40aefc:	mov    rsi,rcx
  40aeff:	call   40a2c0 <rb_strcasecmp@plt+0x7d70>
  40af04:	mov    rax,QWORD PTR [rbp-0x8]
  40af08:	mov    r8d,DWORD PTR [rax+0x324]
  40af0f:	add    r8d,0x1
  40af13:	mov    DWORD PTR [rax+0x324],r8d
  40af1a:	add    rsp,0x130
  40af21:	pop    rbp
  40af22:	ret    
  40af23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af2d:	nop    DWORD PTR [rax]
  40af30:	push   rbp
  40af31:	mov    rbp,rsp
  40af34:	sub    rsp,0x20
  40af38:	mov    QWORD PTR [rbp-0x8],rdi
  40af3c:	mov    DWORD PTR [rbp-0xc],esi
  40af3f:	mov    QWORD PTR [rbp-0x18],rdx
  40af43:	mov    rdx,QWORD PTR [rbp-0x18]
  40af47:	mov    QWORD PTR [rbp-0x20],rdx
  40af4b:	call   4022a0 <rb_current_time@plt>
  40af50:	mov    rdx,QWORD PTR [rbp-0x20]
  40af54:	add    rdx,rax
  40af57:	mov    rax,QWORD PTR [rbp-0x8]
  40af5b:	mov    rax,QWORD PTR [rax+0x1d0]
  40af62:	mov    esi,DWORD PTR [rbp-0xc]
  40af65:	mov    edi,esi
  40af67:	shl    rdi,0x5
  40af6b:	add    rax,rdi
  40af6e:	mov    QWORD PTR [rax+0x8],rdx
  40af72:	add    rsp,0x20
  40af76:	pop    rbp
  40af77:	ret    
  40af78:	nop    DWORD PTR [rax+rax*1+0x0]
  40af80:	push   rbp
  40af81:	mov    rbp,rsp
  40af84:	sub    rsp,0x40
  40af88:	mov    al,sil
  40af8b:	lea    r8,[rip+0xbba6]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40af92:	mov    QWORD PTR [rbp-0x8],rdi
  40af96:	and    al,0x1
  40af98:	mov    BYTE PTR [rbp-0x9],al
  40af9b:	mov    DWORD PTR [rbp-0x10],edx
  40af9e:	mov    QWORD PTR [rbp-0x18],rcx
  40afa2:	mov    rcx,QWORD PTR [rbp-0x18]
  40afa6:	mov    QWORD PTR [rbp-0x20],rcx
  40afaa:	mov    rcx,QWORD PTR [rbp-0x20]
  40afae:	mov    rcx,QWORD PTR [rcx]
  40afb1:	mov    QWORD PTR [rbp-0x30],rcx
  40afb5:	mov    rcx,QWORD PTR [rbp-0x20]
  40afb9:	mov    rcx,QWORD PTR [rcx+0x8]
  40afbd:	mov    QWORD PTR [rbp-0x38],rcx
  40afc1:	mov    rdi,QWORD PTR [rbp-0x38]
  40afc5:	mov    esi,DWORD PTR [r8+0x18]
  40afc9:	call   40ada0 <rb_strcasecmp@plt+0x8850>
  40afce:	mov    QWORD PTR [rbp-0x28],rax
  40afd2:	cmp    rax,0x0
  40afd6:	jne    40afe1 <rb_strcasecmp@plt+0x8a91>
  40afdc:	jmp    40b10d <rb_strcasecmp@plt+0x8bbd>
  40afe1:	cmp    QWORD PTR [rbp-0x8],0x0
  40afe6:	je     40b057 <rb_strcasecmp@plt+0x8b07>
  40afec:	test   BYTE PTR [rbp-0x9],0x1
  40aff0:	je     40b057 <rb_strcasecmp@plt+0x8b07>
  40aff6:	mov    rdi,QWORD PTR [rbp-0x20]
  40affa:	mov    rsi,QWORD PTR [rbp-0x8]
  40affe:	call   40b120 <rb_strcasecmp@plt+0x8bd0>
  40b003:	test   al,0x1
  40b005:	jne    40b010 <rb_strcasecmp@plt+0x8ac0>
  40b00b:	jmp    40b057 <rb_strcasecmp@plt+0x8b07>
  40b010:	lea    rax,[rip+0xbb21]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b017:	mov    rcx,QWORD PTR [rbp-0x30]
  40b01b:	mov    edx,DWORD PTR [rcx+0x328]
  40b021:	add    edx,0x1
  40b024:	mov    DWORD PTR [rcx+0x328],edx
  40b02a:	mov    rdi,QWORD PTR [rbp-0x38]
  40b02e:	mov    esi,DWORD PTR [rax+0x18]
  40b031:	mov    rdx,QWORD PTR [rbp-0x30]
  40b035:	mov    rax,QWORD PTR [rbp-0x30]
  40b039:	add    rax,0x100
  40b03f:	mov    rcx,rax
  40b042:	mov    al,0x0
  40b044:	call   404360 <rb_strcasecmp@plt+0x1e10>
  40b049:	mov    rdi,QWORD PTR [rbp-0x38]
  40b04d:	call   40a0e0 <rb_strcasecmp@plt+0x7b90>
  40b052:	jmp    40b10d <rb_strcasecmp@plt+0x8bbd>
  40b057:	mov    rdi,QWORD PTR [rbp-0x30]
  40b05b:	call   40b2d0 <rb_strcasecmp@plt+0x8d80>
  40b060:	mov    rdi,QWORD PTR [rbp-0x20]
  40b064:	mov    rdi,QWORD PTR [rdi+0x10]
  40b068:	call   403250 <rb_strcasecmp@plt+0xd00>
  40b06d:	mov    rdi,QWORD PTR [rbp-0x20]
  40b071:	add    rdi,0x18
  40b075:	mov    rax,QWORD PTR [rbp-0x28]
  40b079:	add    rax,0x8
  40b07d:	mov    rsi,rax
  40b080:	call   40b3f0 <rb_strcasecmp@plt+0x8ea0>
  40b085:	mov    rax,QWORD PTR [rbp-0x20]
  40b089:	mov    rdi,rax
  40b08c:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40b091:	mov    rax,QWORD PTR [rbp-0x28]
  40b095:	cmp    QWORD PTR [rax+0x18],0x0
  40b09a:	jne    40b10d <rb_strcasecmp@plt+0x8bbd>
  40b0a0:	mov    rax,QWORD PTR [rbp-0x38]
  40b0a4:	mov    edi,DWORD PTR [rax]
  40b0a6:	lea    rsi,[rip+0x5aa4]        # 410b51 <rb_strcasecmp@plt+0xe601>
  40b0ad:	mov    al,0x0
  40b0af:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40b0b4:	mov    rsi,QWORD PTR [rbp-0x28]
  40b0b8:	mov    rdi,rsi
  40b0bb:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40b0c0:	xor    ecx,ecx
  40b0c2:	mov    edx,ecx
  40b0c4:	lea    rsi,[rip+0xba6d]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b0cb:	mov    rdi,QWORD PTR [rbp-0x38]
  40b0cf:	mov    esi,DWORD PTR [rsi+0x18]
  40b0d2:	call   40aaa0 <rb_strcasecmp@plt+0x8550>
  40b0d7:	xor    ecx,ecx
  40b0d9:	mov    edx,ecx
  40b0db:	lea    rdi,[rip+0xba56]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b0e2:	mov    r8,QWORD PTR [rbp-0x38]
  40b0e6:	mov    esi,DWORD PTR [rdi+0x18]
  40b0e9:	mov    rdi,r8
  40b0ec:	call   40b500 <rb_strcasecmp@plt+0x8fb0>
  40b0f1:	lea    rdx,[rip+0xba40]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b0f8:	mov    rdi,QWORD PTR [rbp-0x38]
  40b0fc:	mov    esi,DWORD PTR [rdx+0x18]
  40b0ff:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40b104:	mov    rdi,QWORD PTR [rbp-0x38]
  40b108:	call   40b530 <rb_strcasecmp@plt+0x8fe0>
  40b10d:	add    rsp,0x40
  40b111:	pop    rbp
  40b112:	ret    
  40b113:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b11d:	nop    DWORD PTR [rax]
  40b120:	push   rbp
  40b121:	mov    rbp,rsp
  40b124:	sub    rsp,0x50
  40b128:	mov    QWORD PTR [rbp-0x10],rdi
  40b12c:	mov    QWORD PTR [rbp-0x18],rsi
  40b130:	mov    rsi,QWORD PTR [rbp-0x10]
  40b134:	mov    rsi,QWORD PTR [rsi]
  40b137:	mov    QWORD PTR [rbp-0x20],rsi
  40b13b:	mov    rsi,QWORD PTR [rbp-0x20]
  40b13f:	cmp    QWORD PTR [rsi+0x318],0x0
  40b147:	jne    40b156 <rb_strcasecmp@plt+0x8c06>
  40b14d:	mov    BYTE PTR [rbp-0x1],0x1
  40b151:	jmp    40b2b3 <rb_strcasecmp@plt+0x8d63>
  40b156:	mov    rdi,QWORD PTR [rbp-0x18]
  40b15a:	mov    esi,0x2e
  40b15f:	call   402290 <strrchr@plt>
  40b164:	mov    QWORD PTR [rbp-0x28],rax
  40b168:	cmp    rax,0x0
  40b16c:	je     40b18e <rb_strcasecmp@plt+0x8c3e>
  40b172:	mov    rax,QWORD PTR [rbp-0x28]
  40b176:	mov    rcx,rax
  40b179:	add    rcx,0x1
  40b17d:	mov    QWORD PTR [rbp-0x28],rcx
  40b181:	movsx  edx,BYTE PTR [rax+0x1]
  40b185:	cmp    edx,0x0
  40b188:	jne    40b193 <rb_strcasecmp@plt+0x8c43>
  40b18e:	jmp    40b25d <rb_strcasecmp@plt+0x8d0d>
  40b193:	mov    rax,QWORD PTR [rbp-0x20]
  40b197:	mov    rax,QWORD PTR [rax+0x308]
  40b19e:	mov    QWORD PTR [rbp-0x30],rax
  40b1a2:	cmp    QWORD PTR [rbp-0x30],0x0
  40b1a7:	je     40b254 <rb_strcasecmp@plt+0x8d04>
  40b1ad:	mov    rax,QWORD PTR [rbp-0x30]
  40b1b1:	mov    rax,QWORD PTR [rax]
  40b1b4:	mov    QWORD PTR [rbp-0x38],rax
  40b1b8:	mov    rax,QWORD PTR [rbp-0x38]
  40b1bc:	cmp    DWORD PTR [rax],0x1
  40b1bf:	jne    40b1d2 <rb_strcasecmp@plt+0x8c82>
  40b1c5:	mov    rax,QWORD PTR [rbp-0x18]
  40b1c9:	mov    QWORD PTR [rbp-0x40],rax
  40b1cd:	jmp    40b218 <rb_strcasecmp@plt+0x8cc8>
  40b1d2:	mov    rax,QWORD PTR [rbp-0x38]
  40b1d6:	cmp    DWORD PTR [rax],0x2
  40b1d9:	jne    40b1ec <rb_strcasecmp@plt+0x8c9c>
  40b1df:	mov    rax,QWORD PTR [rbp-0x28]
  40b1e3:	mov    QWORD PTR [rbp-0x40],rax
  40b1e7:	jmp    40b213 <rb_strcasecmp@plt+0x8cc3>
  40b1ec:	mov    rdx,QWORD PTR [rbp-0x20]
  40b1f0:	mov    rax,QWORD PTR [rbp-0x38]
  40b1f4:	mov    ecx,DWORD PTR [rax]
  40b1f6:	mov    edi,0x43
  40b1fb:	lea    rsi,[rip+0x5974]        # 410b76 <rb_strcasecmp@plt+0xe626>
  40b202:	mov    al,0x0
  40b204:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40b209:	mov    edi,0x3
  40b20e:	call   4020e0 <exit@plt>
  40b213:	jmp    40b218 <rb_strcasecmp@plt+0x8cc8>
  40b218:	mov    rdi,QWORD PTR [rbp-0x40]
  40b21c:	mov    rax,QWORD PTR [rbp-0x38]
  40b220:	add    rax,0x4
  40b224:	mov    rsi,rax
  40b227:	call   402410 <strcmp@plt>
  40b22c:	cmp    eax,0x0
  40b22f:	jne    40b23e <rb_strcasecmp@plt+0x8cee>
  40b235:	mov    BYTE PTR [rbp-0x1],0x1
  40b239:	jmp    40b2b3 <rb_strcasecmp@plt+0x8d63>
  40b23e:	jmp    40b243 <rb_strcasecmp@plt+0x8cf3>
  40b243:	mov    rax,QWORD PTR [rbp-0x30]
  40b247:	mov    rax,QWORD PTR [rax+0x10]
  40b24b:	mov    QWORD PTR [rbp-0x30],rax
  40b24f:	jmp    40b1a2 <rb_strcasecmp@plt+0x8c52>
  40b254:	mov    BYTE PTR [rbp-0x1],0x0
  40b258:	jmp    40b2b3 <rb_strcasecmp@plt+0x8d63>
  40b25d:	mov    rax,QWORD PTR [rbp-0x20]
  40b261:	mov    rax,QWORD PTR [rax+0x330]
  40b268:	add    rax,0xe10
  40b26e:	mov    QWORD PTR [rbp-0x48],rax
  40b272:	call   4022a0 <rb_current_time@plt>
  40b277:	mov    rcx,QWORD PTR [rbp-0x48]
  40b27b:	cmp    rcx,rax
  40b27e:	jge    40b2af <rb_strcasecmp@plt+0x8d5f>
  40b284:	mov    rdx,QWORD PTR [rbp-0x20]
  40b288:	mov    rcx,QWORD PTR [rbp-0x18]
  40b28c:	mov    edi,0x57
  40b291:	lea    rsi,[rip+0x590d]        # 410ba5 <rb_strcasecmp@plt+0xe655>
  40b298:	mov    al,0x0
  40b29a:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40b29f:	call   4022a0 <rb_current_time@plt>
  40b2a4:	mov    rcx,QWORD PTR [rbp-0x20]
  40b2a8:	mov    QWORD PTR [rcx+0x330],rax
  40b2af:	mov    BYTE PTR [rbp-0x1],0x0
  40b2b3:	mov    al,BYTE PTR [rbp-0x1]
  40b2b6:	and    al,0x1
  40b2b8:	movzx  eax,al
  40b2bb:	add    rsp,0x50
  40b2bf:	pop    rbp
  40b2c0:	ret    
  40b2c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2d0:	push   rbp
  40b2d1:	mov    rbp,rsp
  40b2d4:	sub    rsp,0x30
  40b2d8:	mov    QWORD PTR [rbp-0x8],rdi
  40b2dc:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2e0:	mov    eax,DWORD PTR [rdi+0x324]
  40b2e6:	add    eax,0xffffffff
  40b2e9:	mov    DWORD PTR [rdi+0x324],eax
  40b2ef:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2f3:	test   BYTE PTR [rdi+0x320],0x1
  40b2fa:	je     40b3de <rb_strcasecmp@plt+0x8e8e>
  40b300:	mov    rax,QWORD PTR [rbp-0x8]
  40b304:	cmp    DWORD PTR [rax+0x324],0x0
  40b30b:	jg     40b3de <rb_strcasecmp@plt+0x8e8e>
  40b311:	mov    rax,QWORD PTR [rbp-0x8]
  40b315:	mov    rax,QWORD PTR [rax+0x308]
  40b31c:	mov    QWORD PTR [rbp-0x10],rax
  40b320:	cmp    QWORD PTR [rbp-0x10],0x0
  40b325:	je     40b33c <rb_strcasecmp@plt+0x8dec>
  40b32b:	mov    rax,QWORD PTR [rbp-0x10]
  40b32f:	mov    rax,QWORD PTR [rax+0x10]
  40b333:	mov    QWORD PTR [rbp-0x20],rax
  40b337:	jmp    40b349 <rb_strcasecmp@plt+0x8df9>
  40b33c:	xor    eax,eax
  40b33e:	mov    ecx,eax
  40b340:	mov    QWORD PTR [rbp-0x20],rcx
  40b344:	jmp    40b349 <rb_strcasecmp@plt+0x8df9>
  40b349:	mov    rax,QWORD PTR [rbp-0x20]
  40b34d:	mov    QWORD PTR [rbp-0x18],rax
  40b351:	cmp    QWORD PTR [rbp-0x10],0x0
  40b356:	je     40b3bc <rb_strcasecmp@plt+0x8e6c>
  40b35c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b360:	mov    rax,QWORD PTR [rbp-0x8]
  40b364:	add    rax,0x308
  40b36a:	mov    rsi,rax
  40b36d:	call   40b3f0 <rb_strcasecmp@plt+0x8ea0>
  40b372:	mov    rax,QWORD PTR [rbp-0x10]
  40b376:	mov    rdi,rax
  40b379:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40b37e:	mov    rax,QWORD PTR [rbp-0x18]
  40b382:	mov    QWORD PTR [rbp-0x10],rax
  40b386:	cmp    QWORD PTR [rbp-0x10],0x0
  40b38b:	je     40b3a2 <rb_strcasecmp@plt+0x8e52>
  40b391:	mov    rax,QWORD PTR [rbp-0x10]
  40b395:	mov    rax,QWORD PTR [rax+0x10]
  40b399:	mov    QWORD PTR [rbp-0x28],rax
  40b39d:	jmp    40b3af <rb_strcasecmp@plt+0x8e5f>
  40b3a2:	xor    eax,eax
  40b3a4:	mov    ecx,eax
  40b3a6:	mov    QWORD PTR [rbp-0x28],rcx
  40b3aa:	jmp    40b3af <rb_strcasecmp@plt+0x8e5f>
  40b3af:	mov    rax,QWORD PTR [rbp-0x28]
  40b3b3:	mov    QWORD PTR [rbp-0x18],rax
  40b3b7:	jmp    40b351 <rb_strcasecmp@plt+0x8e01>
  40b3bc:	mov    rax,QWORD PTR [rbp-0x8]
  40b3c0:	mov    rdi,rax
  40b3c3:	lea    rsi,[rip+0xfc0e]        # 41afd8 <rb_strcasecmp@plt+0x18a88>
  40b3ca:	call   40a7a0 <rb_strcasecmp@plt+0x8250>
  40b3cf:	mov    rsi,QWORD PTR [rbp-0x8]
  40b3d3:	mov    rdi,rsi
  40b3d6:	mov    DWORD PTR [rbp-0x2c],eax
  40b3d9:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40b3de:	add    rsp,0x30
  40b3e2:	pop    rbp
  40b3e3:	ret    
  40b3e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3ee:	xchg   ax,ax
  40b3f0:	push   rbp
  40b3f1:	mov    rbp,rsp
  40b3f4:	sub    rsp,0x10
  40b3f8:	mov    QWORD PTR [rbp-0x8],rdi
  40b3fc:	mov    QWORD PTR [rbp-0x10],rsi
  40b400:	cmp    QWORD PTR [rbp-0x8],0x0
  40b405:	je     40b410 <rb_strcasecmp@plt+0x8ec0>
  40b40b:	jmp    40b42f <rb_strcasecmp@plt+0x8edf>
  40b410:	lea    rdi,[rip+0x5607]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  40b417:	lea    rsi,[rip+0x50ce]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40b41e:	mov    edx,0xeb
  40b423:	lea    rcx,[rip+0x50de]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  40b42a:	call   4020f0 <__assert_fail@plt>
  40b42f:	cmp    QWORD PTR [rbp-0x10],0x0
  40b434:	je     40b43f <rb_strcasecmp@plt+0x8eef>
  40b43a:	jmp    40b45e <rb_strcasecmp@plt+0x8f0e>
  40b43f:	lea    rdi,[rip+0x50f8]        # 41053e <rb_strcasecmp@plt+0xdfee>
  40b446:	lea    rsi,[rip+0x509f]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40b44d:	mov    edx,0xec
  40b452:	lea    rcx,[rip+0x50af]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  40b459:	call   4020f0 <__assert_fail@plt>
  40b45e:	mov    rax,QWORD PTR [rbp-0x8]
  40b462:	cmp    QWORD PTR [rax+0x10],0x0
  40b467:	je     40b486 <rb_strcasecmp@plt+0x8f36>
  40b46d:	mov    rax,QWORD PTR [rbp-0x8]
  40b471:	mov    rax,QWORD PTR [rax+0x8]
  40b475:	mov    rcx,QWORD PTR [rbp-0x8]
  40b479:	mov    rcx,QWORD PTR [rcx+0x10]
  40b47d:	mov    QWORD PTR [rcx+0x8],rax
  40b481:	jmp    40b496 <rb_strcasecmp@plt+0x8f46>
  40b486:	mov    rax,QWORD PTR [rbp-0x8]
  40b48a:	mov    rax,QWORD PTR [rax+0x8]
  40b48e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b492:	mov    QWORD PTR [rcx+0x8],rax
  40b496:	mov    rax,QWORD PTR [rbp-0x8]
  40b49a:	cmp    QWORD PTR [rax+0x8],0x0
  40b49f:	je     40b4be <rb_strcasecmp@plt+0x8f6e>
  40b4a5:	mov    rax,QWORD PTR [rbp-0x8]
  40b4a9:	mov    rax,QWORD PTR [rax+0x10]
  40b4ad:	mov    rcx,QWORD PTR [rbp-0x8]
  40b4b1:	mov    rcx,QWORD PTR [rcx+0x8]
  40b4b5:	mov    QWORD PTR [rcx+0x10],rax
  40b4b9:	jmp    40b4cd <rb_strcasecmp@plt+0x8f7d>
  40b4be:	mov    rax,QWORD PTR [rbp-0x8]
  40b4c2:	mov    rax,QWORD PTR [rax+0x10]
  40b4c6:	mov    rcx,QWORD PTR [rbp-0x10]
  40b4ca:	mov    QWORD PTR [rcx],rax
  40b4cd:	mov    rax,QWORD PTR [rbp-0x8]
  40b4d1:	mov    QWORD PTR [rax+0x8],0x0
  40b4d9:	mov    rax,QWORD PTR [rbp-0x8]
  40b4dd:	mov    QWORD PTR [rax+0x10],0x0
  40b4e5:	mov    rax,QWORD PTR [rbp-0x10]
  40b4e9:	mov    rcx,QWORD PTR [rax+0x10]
  40b4ed:	add    rcx,0xffffffffffffffff
  40b4f1:	mov    QWORD PTR [rax+0x10],rcx
  40b4f5:	add    rsp,0x10
  40b4f9:	pop    rbp
  40b4fa:	ret    
  40b4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b500:	push   rbp
  40b501:	mov    rbp,rsp
  40b504:	mov    QWORD PTR [rbp-0x8],rdi
  40b508:	mov    DWORD PTR [rbp-0xc],esi
  40b50b:	mov    QWORD PTR [rbp-0x18],rdx
  40b50f:	mov    rdx,QWORD PTR [rbp-0x18]
  40b513:	mov    rdi,QWORD PTR [rbp-0x8]
  40b517:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40b51e:	mov    esi,DWORD PTR [rbp-0xc]
  40b521:	mov    eax,esi
  40b523:	shl    rax,0x5
  40b527:	add    rdi,rax
  40b52a:	mov    QWORD PTR [rdi+0x8],rdx
  40b52e:	pop    rbp
  40b52f:	ret    
  40b530:	push   rbp
  40b531:	mov    rbp,rsp
  40b534:	sub    rsp,0x10
  40b538:	mov    QWORD PTR [rbp-0x8],rdi
  40b53c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b540:	mov    eax,DWORD PTR [rdi+0x1cc]
  40b546:	add    eax,0xffffffff
  40b549:	mov    DWORD PTR [rdi+0x1cc],eax
  40b54f:	mov    rdi,QWORD PTR [rbp-0x8]
  40b553:	cmp    DWORD PTR [rdi+0x1cc],0x0
  40b55a:	jne    40b569 <rb_strcasecmp@plt+0x9019>
  40b560:	mov    rdi,QWORD PTR [rbp-0x8]
  40b564:	call   4049a0 <rb_strcasecmp@plt+0x2450>
  40b569:	add    rsp,0x10
  40b56d:	pop    rbp
  40b56e:	ret    
  40b56f:	nop
  40b570:	push   rbp
  40b571:	mov    rbp,rsp
  40b574:	sub    rsp,0x50
  40b578:	lea    rax,[rip+0xb5b9]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b57f:	mov    QWORD PTR [rbp-0x8],rdi
  40b583:	mov    QWORD PTR [rbp-0x10],rsi
  40b587:	mov    rdi,QWORD PTR [rbp-0x8]
  40b58b:	mov    esi,DWORD PTR [rax+0x18]
  40b58e:	call   40ada0 <rb_strcasecmp@plt+0x8850>
  40b593:	mov    QWORD PTR [rbp-0x28],rax
  40b597:	cmp    QWORD PTR [rbp-0x28],0x0
  40b59c:	jne    40b5a7 <rb_strcasecmp@plt+0x9057>
  40b5a2:	jmp    40b6f8 <rb_strcasecmp@plt+0x91a8>
  40b5a7:	mov    rax,QWORD PTR [rbp-0x28]
  40b5ab:	cmp    QWORD PTR [rax+0x18],0x0
  40b5b0:	je     40b6a2 <rb_strcasecmp@plt+0x9152>
  40b5b6:	mov    rax,QWORD PTR [rbp-0x8]
  40b5ba:	mov    edi,DWORD PTR [rax]
  40b5bc:	mov    rsi,QWORD PTR [rbp-0x10]
  40b5c0:	mov    al,0x0
  40b5c2:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40b5c7:	mov    rsi,QWORD PTR [rbp-0x28]
  40b5cb:	mov    rsi,QWORD PTR [rsi+0x8]
  40b5cf:	mov    QWORD PTR [rbp-0x18],rsi
  40b5d3:	cmp    QWORD PTR [rbp-0x18],0x0
  40b5d8:	je     40b5ef <rb_strcasecmp@plt+0x909f>
  40b5de:	mov    rax,QWORD PTR [rbp-0x18]
  40b5e2:	mov    rax,QWORD PTR [rax+0x10]
  40b5e6:	mov    QWORD PTR [rbp-0x38],rax
  40b5ea:	jmp    40b5fc <rb_strcasecmp@plt+0x90ac>
  40b5ef:	xor    eax,eax
  40b5f1:	mov    ecx,eax
  40b5f3:	mov    QWORD PTR [rbp-0x38],rcx
  40b5f7:	jmp    40b5fc <rb_strcasecmp@plt+0x90ac>
  40b5fc:	mov    rax,QWORD PTR [rbp-0x38]
  40b600:	mov    QWORD PTR [rbp-0x20],rax
  40b604:	cmp    QWORD PTR [rbp-0x18],0x0
  40b609:	je     40b69d <rb_strcasecmp@plt+0x914d>
  40b60f:	mov    rax,QWORD PTR [rbp-0x18]
  40b613:	mov    rax,QWORD PTR [rax]
  40b616:	mov    QWORD PTR [rbp-0x30],rax
  40b61a:	mov    rax,QWORD PTR [rbp-0x30]
  40b61e:	mov    rdi,QWORD PTR [rax+0x10]
  40b622:	call   403250 <rb_strcasecmp@plt+0xd00>
  40b627:	mov    rax,QWORD PTR [rbp-0x30]
  40b62b:	mov    rdi,QWORD PTR [rax]
  40b62e:	call   40b2d0 <rb_strcasecmp@plt+0x8d80>
  40b633:	mov    rax,QWORD PTR [rbp-0x30]
  40b637:	add    rax,0x18
  40b63b:	mov    rdi,QWORD PTR [rbp-0x28]
  40b63f:	add    rdi,0x8
  40b643:	mov    QWORD PTR [rbp-0x40],rdi
  40b647:	mov    rdi,rax
  40b64a:	mov    rsi,QWORD PTR [rbp-0x40]
  40b64e:	call   40b3f0 <rb_strcasecmp@plt+0x8ea0>
  40b653:	mov    rax,QWORD PTR [rbp-0x30]
  40b657:	mov    rdi,rax
  40b65a:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40b65f:	mov    rax,QWORD PTR [rbp-0x20]
  40b663:	mov    QWORD PTR [rbp-0x18],rax
  40b667:	cmp    QWORD PTR [rbp-0x18],0x0
  40b66c:	je     40b683 <rb_strcasecmp@plt+0x9133>
  40b672:	mov    rax,QWORD PTR [rbp-0x18]
  40b676:	mov    rax,QWORD PTR [rax+0x10]
  40b67a:	mov    QWORD PTR [rbp-0x48],rax
  40b67e:	jmp    40b690 <rb_strcasecmp@plt+0x9140>
  40b683:	xor    eax,eax
  40b685:	mov    ecx,eax
  40b687:	mov    QWORD PTR [rbp-0x48],rcx
  40b68b:	jmp    40b690 <rb_strcasecmp@plt+0x9140>
  40b690:	mov    rax,QWORD PTR [rbp-0x48]
  40b694:	mov    QWORD PTR [rbp-0x20],rax
  40b698:	jmp    40b604 <rb_strcasecmp@plt+0x90b4>
  40b69d:	jmp    40b6a2 <rb_strcasecmp@plt+0x9152>
  40b6a2:	mov    rax,QWORD PTR [rbp-0x28]
  40b6a6:	mov    rdi,rax
  40b6a9:	call   40a3f0 <rb_strcasecmp@plt+0x7ea0>
  40b6ae:	xor    ecx,ecx
  40b6b0:	mov    edx,ecx
  40b6b2:	lea    rax,[rip+0xb47f]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b6b9:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6bd:	mov    esi,DWORD PTR [rax+0x18]
  40b6c0:	call   40aaa0 <rb_strcasecmp@plt+0x8550>
  40b6c5:	xor    ecx,ecx
  40b6c7:	mov    edx,ecx
  40b6c9:	lea    rax,[rip+0xb468]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b6d0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6d4:	mov    esi,DWORD PTR [rax+0x18]
  40b6d7:	call   40b500 <rb_strcasecmp@plt+0x8fb0>
  40b6dc:	lea    rax,[rip+0xb455]        # 416b38 <rb_strcasecmp@plt+0x145e8>
  40b6e3:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6e7:	mov    esi,DWORD PTR [rax+0x18]
  40b6ea:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40b6ef:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6f3:	call   40b530 <rb_strcasecmp@plt+0x8fe0>
  40b6f8:	add    rsp,0x50
  40b6fc:	pop    rbp
  40b6fd:	ret    
  40b6fe:	xchg   ax,ax
  40b700:	push   rbp
  40b701:	mov    rbp,rsp
  40b704:	sub    rsp,0x20
  40b708:	mov    QWORD PTR [rbp-0x8],rdi
  40b70c:	mov    DWORD PTR [rbp-0xc],esi
  40b70f:	mov    QWORD PTR [rbp-0x18],rdx
  40b713:	mov    rdx,QWORD PTR [rbp-0x18]
  40b717:	mov    rdi,QWORD PTR [rdx]
  40b71a:	call   402330 <atoi@plt>
  40b71f:	mov    DWORD PTR [rbp-0x1c],eax
  40b722:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b726:	jge    40b74c <rb_strcasecmp@plt+0x91fc>
  40b72c:	mov    edx,DWORD PTR [rbp-0x1c]
  40b72f:	mov    edi,0x43
  40b734:	lea    rsi,[rip+0x5516]        # 410c51 <rb_strcasecmp@plt+0xe701>
  40b73b:	mov    al,0x0
  40b73d:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40b742:	mov    edi,0x3
  40b747:	call   4020e0 <exit@plt>
  40b74c:	mov    eax,DWORD PTR [rbp-0x1c]
  40b74f:	mov    DWORD PTR [rip+0xb52b],eax        # 416c80 <rb_strcasecmp@plt+0x14730>
  40b755:	add    rsp,0x20
  40b759:	pop    rbp
  40b75a:	ret    
  40b75b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b760:	push   rbp
  40b761:	mov    rbp,rsp
  40b764:	mov    QWORD PTR [rbp-0x8],rdi
  40b768:	mov    DWORD PTR [rbp-0xc],esi
  40b76b:	mov    QWORD PTR [rbp-0x18],rdx
  40b76f:	mov    rdx,QWORD PTR [rbp-0x18]
  40b773:	mov    rdx,QWORD PTR [rdx]
  40b776:	movsx  esi,BYTE PTR [rdx]
  40b779:	cmp    esi,0x31
  40b77c:	sete   al
  40b77f:	and    al,0x1
  40b781:	mov    BYTE PTR [rip+0xb4fd],al        # 416c84 <rb_strcasecmp@plt+0x14734>
  40b787:	pop    rbp
  40b788:	ret    
  40b789:	nop    DWORD PTR [rax+0x0]
  40b790:	push   rbp
  40b791:	mov    rbp,rsp
  40b794:	sub    rsp,0x20
  40b798:	lea    rax,[rip+0xf9f9]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40b79f:	mov    rdi,QWORD PTR [rax]
  40b7a2:	lea    rsi,[rbp-0x18]
  40b7a6:	call   402250 <rb_dictionary_foreach_start@plt>
  40b7ab:	lea    rax,[rip+0xf9e6]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40b7b2:	mov    rdi,QWORD PTR [rax]
  40b7b5:	lea    rsi,[rbp-0x18]
  40b7b9:	call   402140 <rb_dictionary_foreach_cur@plt>
  40b7be:	mov    QWORD PTR [rbp-0x8],rax
  40b7c2:	cmp    rax,0x0
  40b7c6:	je     40b814 <rb_strcasecmp@plt+0x92c4>
  40b7cc:	lea    rax,[rip+0xb435]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40b7d3:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7d7:	mov    esi,DWORD PTR [rax+0x18]
  40b7da:	call   40bac0 <rb_strcasecmp@plt+0x9570>
  40b7df:	cmp    rax,0x0
  40b7e3:	je     40b7f7 <rb_strcasecmp@plt+0x92a7>
  40b7e9:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7ed:	mov    esi,0x2
  40b7f2:	call   40baf0 <rb_strcasecmp@plt+0x95a0>
  40b7f7:	jmp    40b7fc <rb_strcasecmp@plt+0x92ac>
  40b7fc:	lea    rax,[rip+0xf995]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40b803:	mov    rdi,QWORD PTR [rax]
  40b806:	lea    rsi,[rbp-0x18]
  40b80a:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40b80f:	jmp    40b7ab <rb_strcasecmp@plt+0x925b>
  40b814:	add    rsp,0x20
  40b818:	pop    rbp
  40b819:	ret    
  40b81a:	nop    WORD PTR [rax+rax*1+0x0]
  40b820:	push   rbp
  40b821:	mov    rbp,rsp
  40b824:	sub    rsp,0x130
  40b82b:	mov    eax,0x8
  40b830:	mov    ecx,eax
  40b832:	mov    QWORD PTR [rbp-0x10],rdi
  40b836:	mov    rdi,rcx
  40b839:	call   40bcb0 <rb_strcasecmp@plt+0x9760>
  40b83e:	mov    QWORD PTR [rbp-0x18],rax
  40b842:	mov    rax,QWORD PTR [rbp-0x10]
  40b846:	movzx  edx,WORD PTR [rax+0xf8]
  40b84d:	mov    DWORD PTR [rbp-0x11c],edx
  40b853:	test   BYTE PTR [rip+0xb42a],0x1        # 416c84 <rb_strcasecmp@plt+0x14734>
  40b85a:	jne    40b89c <rb_strcasecmp@plt+0x934c>
  40b860:	mov    rax,QWORD PTR [rbp-0x18]
  40b864:	mov    rdi,rax
  40b867:	call   40bbd0 <rb_strcasecmp@plt+0x9680>
  40b86c:	mov    rax,QWORD PTR [rbp-0x10]
  40b870:	mov    edi,DWORD PTR [rax]
  40b872:	mov    rsi,QWORD PTR [rip+0xb437]        # 416cb0 <rb_strcasecmp@plt+0x14760>
  40b879:	mov    al,0x0
  40b87b:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40b880:	lea    rsi,[rip+0xb381]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40b887:	mov    rdi,QWORD PTR [rbp-0x10]
  40b88b:	mov    esi,DWORD PTR [rsi+0x18]
  40b88e:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40b893:	mov    BYTE PTR [rbp-0x1],0x1
  40b897:	jmp    40ba55 <rb_strcasecmp@plt+0x9505>
  40b89c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8a0:	call   40bd10 <rb_strcasecmp@plt+0x97c0>
  40b8a5:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8a9:	mov    edi,DWORD PTR [rdi]
  40b8ab:	mov    rsi,QWORD PTR [rip+0xb3de]        # 416c90 <rb_strcasecmp@plt+0x14740>
  40b8b2:	mov    al,0x0
  40b8b4:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40b8b9:	lea    rsi,[rip+0xb348]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40b8c0:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8c4:	mov    esi,DWORD PTR [rsi+0x18]
  40b8c7:	mov    rcx,QWORD PTR [rbp-0x18]
  40b8cb:	mov    rdx,rcx
  40b8ce:	call   40bc10 <rb_strcasecmp@plt+0x96c0>
  40b8d3:	lea    rcx,[rip+0xb32e]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40b8da:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8de:	mov    esi,DWORD PTR [rcx+0x18]
  40b8e1:	movsxd rdx,DWORD PTR [rip+0xb398]        # 416c80 <rb_strcasecmp@plt+0x14730>
  40b8e8:	call   40bd30 <rb_strcasecmp@plt+0x97e0>
  40b8ed:	mov    edi,DWORD PTR [rbp-0x11c]
  40b8f3:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8f7:	mov    edx,DWORD PTR [rcx+0x4]
  40b8fa:	mov    esi,0x1
  40b8ff:	lea    rcx,[rip+0x5402]        # 410d08 <rb_strcasecmp@plt+0xe7b8>
  40b906:	call   402110 <rb_socket@plt>
  40b90b:	mov    rcx,QWORD PTR [rbp-0x18]
  40b90f:	mov    QWORD PTR [rcx],rax
  40b912:	cmp    rax,0x0
  40b916:	jne    40b955 <rb_strcasecmp@plt+0x9405>
  40b91c:	call   4023c0 <__errno_location@plt>
  40b921:	mov    edi,DWORD PTR [rax]
  40b923:	call   4022c0 <strerror@plt>
  40b928:	mov    edi,0x44
  40b92d:	lea    rsi,[rip+0x53da]        # 410d0e <rb_strcasecmp@plt+0xe7be>
  40b934:	mov    rdx,rax
  40b937:	mov    al,0x0
  40b939:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40b93e:	mov    rdi,QWORD PTR [rbp-0x10]
  40b942:	mov    esi,0x2
  40b947:	call   40baf0 <rb_strcasecmp@plt+0x95a0>
  40b94c:	mov    BYTE PTR [rbp-0x1],0x1
  40b950:	jmp    40ba55 <rb_strcasecmp@plt+0x9505>
  40b955:	mov    eax,0x80
  40b95a:	mov    ecx,eax
  40b95c:	mov    rdx,QWORD PTR [rbp-0x10]
  40b960:	add    rdx,0x40
  40b964:	lea    rsi,[rbp-0x98]
  40b96b:	mov    rdi,rsi
  40b96e:	mov    rsi,rdx
  40b971:	mov    rdx,rcx
  40b974:	mov    QWORD PTR [rbp-0x128],rcx
  40b97b:	call   402540 <memcpy@plt>
  40b980:	mov    rcx,QWORD PTR [rbp-0x10]
  40b984:	add    rcx,0xf8
  40b98b:	lea    rdx,[rbp-0x118]
  40b992:	mov    rdi,rdx
  40b995:	mov    rsi,rcx
  40b998:	mov    rdx,QWORD PTR [rbp-0x128]
  40b99f:	call   402540 <memcpy@plt>
  40b9a4:	movzx  eax,WORD PTR [rbp-0x98]
  40b9ab:	cmp    eax,0x2
  40b9ae:	jne    40b9c2 <rb_strcasecmp@plt+0x9472>
  40b9b4:	mov    WORD PTR [rbp-0x96],0x0
  40b9bd:	jmp    40b9cb <rb_strcasecmp@plt+0x947b>
  40b9c2:	mov    WORD PTR [rbp-0x96],0x0
  40b9cb:	jmp    40b9d0 <rb_strcasecmp@plt+0x9480>
  40b9d0:	jmp    40b9d5 <rb_strcasecmp@plt+0x9485>
  40b9d5:	movzx  eax,WORD PTR [rbp-0x118]
  40b9dc:	cmp    eax,0x2
  40b9df:	jne    40b9fb <rb_strcasecmp@plt+0x94ab>
  40b9e5:	mov    edi,0x71
  40b9ea:	call   4020d0 <htons@plt>
  40b9ef:	mov    WORD PTR [rbp-0x116],ax
  40b9f6:	jmp    40ba0c <rb_strcasecmp@plt+0x94bc>
  40b9fb:	mov    edi,0x71
  40ba00:	call   4020d0 <htons@plt>
  40ba05:	mov    WORD PTR [rbp-0x116],ax
  40ba0c:	jmp    40ba11 <rb_strcasecmp@plt+0x94c1>
  40ba11:	mov    rax,QWORD PTR [rbp-0x18]
  40ba15:	mov    rdi,QWORD PTR [rax]
  40ba18:	lea    rax,[rbp-0x118]
  40ba1f:	lea    rcx,[rbp-0x98]
  40ba26:	mov    rdx,QWORD PTR [rbp-0x10]
  40ba2a:	mov    r9d,DWORD PTR [rip+0xb24f]        # 416c80 <rb_strcasecmp@plt+0x14730>
  40ba31:	mov    rsi,rax
  40ba34:	mov    QWORD PTR [rbp-0x130],rdx
  40ba3b:	mov    rdx,rcx
  40ba3e:	lea    rcx,[rip+0x33b]        # 40bd80 <rb_strcasecmp@plt+0x9830>
  40ba45:	mov    r8,QWORD PTR [rbp-0x130]
  40ba4c:	call   402090 <rb_connect_tcp@plt>
  40ba51:	mov    BYTE PTR [rbp-0x1],0x1
  40ba55:	mov    al,BYTE PTR [rbp-0x1]
  40ba58:	and    al,0x1
  40ba5a:	movzx  eax,al
  40ba5d:	add    rsp,0x130
  40ba64:	pop    rbp
  40ba65:	ret    
  40ba66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba70:	push   rbp
  40ba71:	mov    rbp,rsp
  40ba74:	sub    rsp,0x10
  40ba78:	lea    rax,[rip+0xb189]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40ba7f:	mov    QWORD PTR [rbp-0x8],rdi
  40ba83:	mov    rdi,QWORD PTR [rbp-0x8]
  40ba87:	mov    esi,DWORD PTR [rax+0x18]
  40ba8a:	call   40bac0 <rb_strcasecmp@plt+0x9570>
  40ba8f:	mov    QWORD PTR [rbp-0x10],rax
  40ba93:	cmp    QWORD PTR [rbp-0x10],0x0
  40ba98:	je     40baac <rb_strcasecmp@plt+0x955c>
  40ba9e:	mov    rdi,QWORD PTR [rbp-0x8]
  40baa2:	mov    esi,0x2
  40baa7:	call   40baf0 <rb_strcasecmp@plt+0x95a0>
  40baac:	add    rsp,0x10
  40bab0:	pop    rbp
  40bab1:	ret    
  40bab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40babc:	nop    DWORD PTR [rax+0x0]
  40bac0:	push   rbp
  40bac1:	mov    rbp,rsp
  40bac4:	mov    QWORD PTR [rbp-0x8],rdi
  40bac8:	mov    DWORD PTR [rbp-0xc],esi
  40bacb:	mov    rdi,QWORD PTR [rbp-0x8]
  40bacf:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40bad6:	mov    esi,DWORD PTR [rbp-0xc]
  40bad9:	mov    eax,esi
  40badb:	shl    rax,0x5
  40badf:	add    rdi,rax
  40bae2:	mov    rax,QWORD PTR [rdi+0x10]
  40bae6:	pop    rbp
  40bae7:	ret    
  40bae8:	nop    DWORD PTR [rax+rax*1+0x0]
  40baf0:	push   rbp
  40baf1:	mov    rbp,rsp
  40baf4:	sub    rsp,0x20
  40baf8:	lea    rax,[rip+0xb109]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40baff:	mov    QWORD PTR [rbp-0x8],rdi
  40bb03:	mov    DWORD PTR [rbp-0xc],esi
  40bb06:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb0a:	mov    esi,DWORD PTR [rax+0x18]
  40bb0d:	call   40bac0 <rb_strcasecmp@plt+0x9570>
  40bb12:	mov    esi,0xb
  40bb17:	mov    edx,esi
  40bb19:	mov    QWORD PTR [rbp-0x18],rax
  40bb1d:	mov    rax,QWORD PTR [rbp-0x8]
  40bb21:	add    rax,0x1b8
  40bb27:	mov    rdi,rax
  40bb2a:	lea    rsi,[rip+0x47df]        # 410310 <rb_strcasecmp@plt+0xddc0>
  40bb31:	call   4021d0 <rb_strlcpy@plt>
  40bb36:	mov    rdx,QWORD PTR [rbp-0x18]
  40bb3a:	cmp    QWORD PTR [rdx],0x0
  40bb3e:	mov    QWORD PTR [rbp-0x20],rax
  40bb42:	je     40bb54 <rb_strcasecmp@plt+0x9604>
  40bb48:	mov    rax,QWORD PTR [rbp-0x18]
  40bb4c:	mov    rdi,QWORD PTR [rax]
  40bb4f:	call   402300 <rb_close@plt>
  40bb54:	mov    rax,QWORD PTR [rbp-0x18]
  40bb58:	mov    rdi,rax
  40bb5b:	call   40bbd0 <rb_strcasecmp@plt+0x9680>
  40bb60:	xor    ecx,ecx
  40bb62:	mov    edx,ecx
  40bb64:	lea    rax,[rip+0xb09d]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40bb6b:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb6f:	mov    esi,DWORD PTR [rax+0x18]
  40bb72:	call   40bc10 <rb_strcasecmp@plt+0x96c0>
  40bb77:	xor    ecx,ecx
  40bb79:	mov    edx,ecx
  40bb7b:	lea    rax,[rip+0xb086]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40bb82:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb86:	mov    esi,DWORD PTR [rax+0x18]
  40bb89:	call   40bc40 <rb_strcasecmp@plt+0x96f0>
  40bb8e:	mov    rax,QWORD PTR [rbp-0x8]
  40bb92:	mov    edi,DWORD PTR [rax]
  40bb94:	mov    ecx,DWORD PTR [rbp-0xc]
  40bb97:	mov    eax,ecx
  40bb99:	lea    rdx,[rip+0xb0f0]        # 416c90 <rb_strcasecmp@plt+0x14740>
  40bba0:	mov    rsi,QWORD PTR [rdx+rax*8]
  40bba4:	mov    al,0x0
  40bba6:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40bbab:	lea    rdx,[rip+0xb056]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40bbb2:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbb6:	mov    esi,DWORD PTR [rdx+0x18]
  40bbb9:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40bbbe:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbc2:	call   40bc70 <rb_strcasecmp@plt+0x9720>
  40bbc7:	add    rsp,0x20
  40bbcb:	pop    rbp
  40bbcc:	ret    
  40bbcd:	nop    DWORD PTR [rax]
  40bbd0:	push   rbp
  40bbd1:	mov    rbp,rsp
  40bbd4:	sub    rsp,0x10
  40bbd8:	mov    QWORD PTR [rbp-0x8],rdi
  40bbdc:	cmp    QWORD PTR [rbp-0x8],0x0
  40bbe1:	setne  al
  40bbe4:	xor    al,0xff
  40bbe6:	xor    al,0xff
  40bbe8:	and    al,0x1
  40bbea:	movzx  ecx,al
  40bbed:	movsxd rdi,ecx
  40bbf0:	cmp    rdi,0x0
  40bbf4:	je     40bc03 <rb_strcasecmp@plt+0x96b3>
  40bbfa:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbfe:	call   402200 <free@plt>
  40bc03:	add    rsp,0x10
  40bc07:	pop    rbp
  40bc08:	ret    
  40bc09:	nop    DWORD PTR [rax+0x0]
  40bc10:	push   rbp
  40bc11:	mov    rbp,rsp
  40bc14:	mov    QWORD PTR [rbp-0x8],rdi
  40bc18:	mov    DWORD PTR [rbp-0xc],esi
  40bc1b:	mov    QWORD PTR [rbp-0x18],rdx
  40bc1f:	mov    rdx,QWORD PTR [rbp-0x18]
  40bc23:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc27:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40bc2e:	mov    esi,DWORD PTR [rbp-0xc]
  40bc31:	mov    eax,esi
  40bc33:	shl    rax,0x5
  40bc37:	add    rdi,rax
  40bc3a:	mov    QWORD PTR [rdi+0x10],rdx
  40bc3e:	pop    rbp
  40bc3f:	ret    
  40bc40:	push   rbp
  40bc41:	mov    rbp,rsp
  40bc44:	mov    QWORD PTR [rbp-0x8],rdi
  40bc48:	mov    DWORD PTR [rbp-0xc],esi
  40bc4b:	mov    QWORD PTR [rbp-0x18],rdx
  40bc4f:	mov    rdx,QWORD PTR [rbp-0x18]
  40bc53:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc57:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40bc5e:	mov    esi,DWORD PTR [rbp-0xc]
  40bc61:	mov    eax,esi
  40bc63:	shl    rax,0x5
  40bc67:	add    rdi,rax
  40bc6a:	mov    QWORD PTR [rdi+0x8],rdx
  40bc6e:	pop    rbp
  40bc6f:	ret    
  40bc70:	push   rbp
  40bc71:	mov    rbp,rsp
  40bc74:	sub    rsp,0x10
  40bc78:	mov    QWORD PTR [rbp-0x8],rdi
  40bc7c:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc80:	mov    eax,DWORD PTR [rdi+0x1cc]
  40bc86:	add    eax,0xffffffff
  40bc89:	mov    DWORD PTR [rdi+0x1cc],eax
  40bc8f:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc93:	cmp    DWORD PTR [rdi+0x1cc],0x0
  40bc9a:	jne    40bca9 <rb_strcasecmp@plt+0x9759>
  40bca0:	mov    rdi,QWORD PTR [rbp-0x8]
  40bca4:	call   4049a0 <rb_strcasecmp@plt+0x2450>
  40bca9:	add    rsp,0x10
  40bcad:	pop    rbp
  40bcae:	ret    
  40bcaf:	nop
  40bcb0:	push   rbp
  40bcb1:	mov    rbp,rsp
  40bcb4:	sub    rsp,0x10
  40bcb8:	mov    eax,0x1
  40bcbd:	mov    ecx,eax
  40bcbf:	mov    QWORD PTR [rbp-0x8],rdi
  40bcc3:	mov    rsi,QWORD PTR [rbp-0x8]
  40bcc7:	mov    rdi,rcx
  40bcca:	call   402470 <calloc@plt>
  40bccf:	mov    QWORD PTR [rbp-0x10],rax
  40bcd3:	cmp    QWORD PTR [rbp-0x10],0x0
  40bcd8:	sete   dl
  40bcdb:	xor    dl,0xff
  40bcde:	xor    dl,0xff
  40bce1:	and    dl,0x1
  40bce4:	movzx  r8d,dl
  40bce8:	movsxd rax,r8d
  40bceb:	cmp    rax,0x0
  40bcef:	je     40bcfa <rb_strcasecmp@plt+0x97aa>
  40bcf5:	call   4023b0 <rb_outofmemory@plt>
  40bcfa:	mov    rax,QWORD PTR [rbp-0x10]
  40bcfe:	add    rsp,0x10
  40bd02:	pop    rbp
  40bd03:	ret    
  40bd04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd0e:	xchg   ax,ax
  40bd10:	push   rbp
  40bd11:	mov    rbp,rsp
  40bd14:	mov    QWORD PTR [rbp-0x8],rdi
  40bd18:	mov    rdi,QWORD PTR [rbp-0x8]
  40bd1c:	mov    eax,DWORD PTR [rdi+0x1cc]
  40bd22:	add    eax,0x1
  40bd25:	mov    DWORD PTR [rdi+0x1cc],eax
  40bd2b:	pop    rbp
  40bd2c:	ret    
  40bd2d:	nop    DWORD PTR [rax]
  40bd30:	push   rbp
  40bd31:	mov    rbp,rsp
  40bd34:	sub    rsp,0x20
  40bd38:	mov    QWORD PTR [rbp-0x8],rdi
  40bd3c:	mov    DWORD PTR [rbp-0xc],esi
  40bd3f:	mov    QWORD PTR [rbp-0x18],rdx
  40bd43:	mov    rdx,QWORD PTR [rbp-0x18]
  40bd47:	mov    QWORD PTR [rbp-0x20],rdx
  40bd4b:	call   4022a0 <rb_current_time@plt>
  40bd50:	mov    rdx,QWORD PTR [rbp-0x20]
  40bd54:	add    rdx,rax
  40bd57:	mov    rax,QWORD PTR [rbp-0x8]
  40bd5b:	mov    rax,QWORD PTR [rax+0x1d0]
  40bd62:	mov    esi,DWORD PTR [rbp-0xc]
  40bd65:	mov    edi,esi
  40bd67:	shl    rdi,0x5
  40bd6b:	add    rax,rdi
  40bd6e:	mov    QWORD PTR [rax+0x8],rdx
  40bd72:	add    rsp,0x20
  40bd76:	pop    rbp
  40bd77:	ret    
  40bd78:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd80:	push   rbp
  40bd81:	mov    rbp,rsp
  40bd84:	sub    rsp,0x60
  40bd88:	lea    rax,[rip+0xae79]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40bd8f:	mov    QWORD PTR [rbp-0x8],rdi
  40bd93:	mov    DWORD PTR [rbp-0xc],esi
  40bd96:	mov    QWORD PTR [rbp-0x18],rdx
  40bd9a:	mov    rdx,QWORD PTR [rbp-0x18]
  40bd9e:	mov    QWORD PTR [rbp-0x20],rdx
  40bda2:	mov    rdi,QWORD PTR [rbp-0x20]
  40bda6:	mov    esi,DWORD PTR [rax+0x18]
  40bda9:	call   40bac0 <rb_strcasecmp@plt+0x9570>
  40bdae:	mov    QWORD PTR [rbp-0x28],rax
  40bdb2:	cmp    DWORD PTR [rbp-0xc],0x0
  40bdb6:	je     40bdcf <rb_strcasecmp@plt+0x987f>
  40bdbc:	mov    rdi,QWORD PTR [rbp-0x20]
  40bdc0:	mov    esi,0x2
  40bdc5:	call   40baf0 <rb_strcasecmp@plt+0x95a0>
  40bdca:	jmp    40be5a <rb_strcasecmp@plt+0x990a>
  40bdcf:	mov    eax,0x20
  40bdd4:	mov    esi,eax
  40bdd6:	lea    rdi,[rbp-0x50]
  40bdda:	mov    rcx,QWORD PTR [rbp-0x20]
  40bdde:	movzx  ecx,WORD PTR [rcx+0xf6]
  40bde5:	mov    rdx,QWORD PTR [rbp-0x20]
  40bde9:	movzx  r8d,WORD PTR [rdx+0x3e]
  40bdee:	lea    rdx,[rip+0x4f3b]        # 410d30 <rb_strcasecmp@plt+0xe7e0>
  40bdf5:	mov    al,0x0
  40bdf7:	call   402080 <snprintf@plt>
  40bdfc:	lea    rdx,[rbp-0x50]
  40be00:	mov    rdi,rdx
  40be03:	mov    DWORD PTR [rbp-0x58],eax
  40be06:	mov    QWORD PTR [rbp-0x60],rdx
  40be0a:	call   402210 <strlen@plt>
  40be0f:	mov    ecx,eax
  40be11:	mov    DWORD PTR [rbp-0x54],ecx
  40be14:	mov    rax,QWORD PTR [rbp-0x28]
  40be18:	mov    rdi,QWORD PTR [rax]
  40be1b:	mov    edx,DWORD PTR [rbp-0x54]
  40be1e:	mov    rsi,QWORD PTR [rbp-0x60]
  40be22:	call   4021a0 <rb_write@plt>
  40be27:	movsxd rsi,DWORD PTR [rbp-0x54]
  40be2b:	cmp    rax,rsi
  40be2e:	je     40be47 <rb_strcasecmp@plt+0x98f7>
  40be34:	mov    rdi,QWORD PTR [rbp-0x20]
  40be38:	mov    esi,0x2
  40be3d:	call   40baf0 <rb_strcasecmp@plt+0x95a0>
  40be42:	jmp    40be5a <rb_strcasecmp@plt+0x990a>
  40be47:	mov    rax,QWORD PTR [rbp-0x28]
  40be4b:	mov    rdi,QWORD PTR [rax]
  40be4e:	mov    rax,QWORD PTR [rbp-0x20]
  40be52:	mov    rsi,rax
  40be55:	call   40be60 <rb_strcasecmp@plt+0x9910>
  40be5a:	add    rsp,0x60
  40be5e:	pop    rbp
  40be5f:	ret    
  40be60:	push   rbp
  40be61:	mov    rbp,rsp
  40be64:	sub    rsp,0xe0
  40be6b:	lea    rax,[rbp-0xa0]
  40be72:	xor    ecx,ecx
  40be74:	mov    edx,0x81
  40be79:	mov    QWORD PTR [rbp-0x8],rdi
  40be7d:	mov    QWORD PTR [rbp-0x10],rsi
  40be81:	mov    rsi,QWORD PTR [rbp-0x10]
  40be85:	mov    QWORD PTR [rbp-0x18],rsi
  40be89:	mov    rsi,rax
  40be8c:	mov    rdi,rsi
  40be8f:	mov    esi,ecx
  40be91:	mov    QWORD PTR [rbp-0xd0],rax
  40be98:	call   402040 <memset@plt>
  40be9d:	mov    DWORD PTR [rbp-0xa4],0x2
  40bea7:	mov    QWORD PTR [rbp-0xb0],0x0
  40beb2:	mov    QWORD PTR [rbp-0xb8],0x0
  40bebd:	mov    rdi,QWORD PTR [rbp-0x8]
  40bec1:	mov    rsi,QWORD PTR [rbp-0xd0]
  40bec8:	mov    edx,0x80
  40becd:	call   402230 <rb_read@plt>
  40bed2:	mov    QWORD PTR [rbp-0xc0],rax
  40bed9:	cmp    QWORD PTR [rbp-0xc0],0x0
  40bee1:	jge    40bf1d <rb_strcasecmp@plt+0x99cd>
  40bee7:	call   4023c0 <__errno_location@plt>
  40beec:	mov    edi,DWORD PTR [rax]
  40beee:	call   402060 <rb_ignore_errno@plt>
  40bef3:	cmp    eax,0x0
  40bef6:	je     40bf1d <rb_strcasecmp@plt+0x99cd>
  40befc:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf00:	mov    rax,QWORD PTR [rbp-0x18]
  40bf04:	mov    esi,0x1
  40bf09:	lea    rdx,[rip+0xffffffffffffff50]        # 40be60 <rb_strcasecmp@plt+0x9910>
  40bf10:	mov    rcx,rax
  40bf13:	call   4020b0 <rb_setselect@plt>
  40bf18:	jmp    40c109 <rb_strcasecmp@plt+0x9bb9>
  40bf1d:	cmp    QWORD PTR [rbp-0xc0],0x0
  40bf25:	jle    40c0de <rb_strcasecmp@plt+0x9b8e>
  40bf2b:	lea    rdi,[rbp-0xa0]
  40bf32:	call   40c120 <rb_strcasecmp@plt+0x9bd0>
  40bf37:	mov    QWORD PTR [rbp-0xb0],rax
  40bf3e:	cmp    rax,0x0
  40bf42:	je     40c0cf <rb_strcasecmp@plt+0x9b7f>
  40bf48:	mov    rax,QWORD PTR [rbp-0x18]
  40bf4c:	add    rax,0x1b8
  40bf52:	mov    QWORD PTR [rbp-0xb8],rax
  40bf59:	mov    rax,QWORD PTR [rbp-0xb0]
  40bf60:	movsx  ecx,BYTE PTR [rax]
  40bf63:	cmp    ecx,0x7e
  40bf66:	mov    dl,0x1
  40bf68:	mov    BYTE PTR [rbp-0xd1],dl
  40bf6e:	je     40bf8a <rb_strcasecmp@plt+0x9a3a>
  40bf74:	mov    rax,QWORD PTR [rbp-0xb0]
  40bf7b:	movsx  ecx,BYTE PTR [rax]
  40bf7e:	cmp    ecx,0x5e
  40bf81:	sete   dl
  40bf84:	mov    BYTE PTR [rbp-0xd1],dl
  40bf8a:	mov    al,BYTE PTR [rbp-0xd1]
  40bf90:	test   al,0x1
  40bf92:	jne    40bf9d <rb_strcasecmp@plt+0x9a4d>
  40bf98:	jmp    40bfb4 <rb_strcasecmp@plt+0x9a64>
  40bf9d:	mov    rax,QWORD PTR [rbp-0xb0]
  40bfa4:	add    rax,0x1
  40bfa8:	mov    QWORD PTR [rbp-0xb0],rax
  40bfaf:	jmp    40bf59 <rb_strcasecmp@plt+0x9a09>
  40bfb4:	mov    DWORD PTR [rbp-0xc4],0xa
  40bfbe:	xor    eax,eax
  40bfc0:	mov    cl,al
  40bfc2:	mov    rdx,QWORD PTR [rbp-0xb0]
  40bfc9:	movsx  eax,BYTE PTR [rdx]
  40bfcc:	cmp    eax,0x0
  40bfcf:	mov    BYTE PTR [rbp-0xd2],cl
  40bfd5:	je     40bfeb <rb_strcasecmp@plt+0x9a9b>
  40bfdb:	cmp    DWORD PTR [rbp-0xc4],0x0
  40bfe2:	setne  al
  40bfe5:	mov    BYTE PTR [rbp-0xd2],al
  40bfeb:	mov    al,BYTE PTR [rbp-0xd2]
  40bff1:	test   al,0x1
  40bff3:	jne    40bffe <rb_strcasecmp@plt+0x9aae>
  40bff9:	jmp    40c0c0 <rb_strcasecmp@plt+0x9b70>
  40bffe:	mov    rax,QWORD PTR [rbp-0xb0]
  40c005:	movsx  ecx,BYTE PTR [rax]
  40c008:	cmp    ecx,0x40
  40c00b:	je     40c037 <rb_strcasecmp@plt+0x9ae7>
  40c011:	mov    rax,QWORD PTR [rbp-0xb0]
  40c018:	movsx  ecx,BYTE PTR [rax]
  40c01b:	cmp    ecx,0xd
  40c01e:	je     40c037 <rb_strcasecmp@plt+0x9ae7>
  40c024:	mov    rax,QWORD PTR [rbp-0xb0]
  40c02b:	movsx  ecx,BYTE PTR [rax]
  40c02e:	cmp    ecx,0xa
  40c031:	jne    40c03c <rb_strcasecmp@plt+0x9aec>
  40c037:	jmp    40c0c0 <rb_strcasecmp@plt+0x9b70>
  40c03c:	mov    rax,QWORD PTR [rbp-0xb0]
  40c043:	movsx  ecx,BYTE PTR [rax]
  40c046:	cmp    ecx,0x20
  40c049:	je     40c0a4 <rb_strcasecmp@plt+0x9b54>
  40c04f:	mov    rax,QWORD PTR [rbp-0xb0]
  40c056:	movsx  ecx,BYTE PTR [rax]
  40c059:	cmp    ecx,0x3a
  40c05c:	je     40c0a4 <rb_strcasecmp@plt+0x9b54>
  40c062:	mov    rax,QWORD PTR [rbp-0xb0]
  40c069:	movsx  ecx,BYTE PTR [rax]
  40c06c:	cmp    ecx,0x5b
  40c06f:	je     40c0a4 <rb_strcasecmp@plt+0x9b54>
  40c075:	mov    rax,QWORD PTR [rbp-0xb0]
  40c07c:	mov    cl,BYTE PTR [rax]
  40c07e:	mov    rax,QWORD PTR [rbp-0xb8]
  40c085:	mov    rdx,rax
  40c088:	add    rdx,0x1
  40c08c:	mov    QWORD PTR [rbp-0xb8],rdx
  40c093:	mov    BYTE PTR [rax],cl
  40c095:	mov    esi,DWORD PTR [rbp-0xc4]
  40c09b:	add    esi,0xffffffff
  40c09e:	mov    DWORD PTR [rbp-0xc4],esi
  40c0a4:	jmp    40c0a9 <rb_strcasecmp@plt+0x9b59>
  40c0a9:	mov    rax,QWORD PTR [rbp-0xb0]
  40c0b0:	add    rax,0x1
  40c0b4:	mov    QWORD PTR [rbp-0xb0],rax
  40c0bb:	jmp    40bfbe <rb_strcasecmp@plt+0x9a6e>
  40c0c0:	mov    rax,QWORD PTR [rbp-0xb8]
  40c0c7:	mov    BYTE PTR [rax],0x0
  40c0ca:	jmp    40c0d9 <rb_strcasecmp@plt+0x9b89>
  40c0cf:	mov    DWORD PTR [rbp-0xa4],0x3
  40c0d9:	jmp    40c0de <rb_strcasecmp@plt+0x9b8e>
  40c0de:	cmp    QWORD PTR [rbp-0xb0],0x0
  40c0e6:	jne    40c100 <rb_strcasecmp@plt+0x9bb0>
  40c0ec:	mov    rdi,QWORD PTR [rbp-0x18]
  40c0f0:	mov    esi,DWORD PTR [rbp-0xa4]
  40c0f6:	call   40baf0 <rb_strcasecmp@plt+0x95a0>
  40c0fb:	jmp    40c109 <rb_strcasecmp@plt+0x9bb9>
  40c100:	mov    rdi,QWORD PTR [rbp-0x18]
  40c104:	call   40c2c0 <rb_strcasecmp@plt+0x9d70>
  40c109:	add    rsp,0xe0
  40c110:	pop    rbp
  40c111:	ret    
  40c112:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c11c:	nop    DWORD PTR [rax+0x0]
  40c120:	push   rbp
  40c121:	mov    rbp,rsp
  40c124:	sub    rsp,0x40
  40c128:	mov    QWORD PTR [rbp-0x10],rdi
  40c12c:	mov    DWORD PTR [rbp-0x14],0x0
  40c133:	mov    DWORD PTR [rbp-0x18],0x0
  40c13a:	mov    rdi,QWORD PTR [rbp-0x10]
  40c13e:	mov    QWORD PTR [rbp-0x40],rdi
  40c142:	mov    rdi,QWORD PTR [rbp-0x40]
  40c146:	mov    esi,0x3a
  40c14b:	call   402370 <strchr@plt>
  40c150:	mov    QWORD PTR [rbp-0x20],rax
  40c154:	cmp    QWORD PTR [rbp-0x20],0x0
  40c159:	jne    40c16c <rb_strcasecmp@plt+0x9c1c>
  40c15f:	mov    QWORD PTR [rbp-0x8],0x0
  40c167:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c16c:	mov    rax,QWORD PTR [rbp-0x20]
  40c170:	mov    BYTE PTR [rax],0x0
  40c173:	mov    rax,QWORD PTR [rbp-0x20]
  40c177:	add    rax,0x1
  40c17b:	mov    QWORD PTR [rbp-0x20],rax
  40c17f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c183:	mov    esi,0x3a
  40c188:	call   402370 <strchr@plt>
  40c18d:	mov    QWORD PTR [rbp-0x28],rax
  40c191:	cmp    QWORD PTR [rbp-0x28],0x0
  40c196:	jne    40c1a9 <rb_strcasecmp@plt+0x9c59>
  40c19c:	mov    QWORD PTR [rbp-0x8],0x0
  40c1a4:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c1a9:	mov    rax,QWORD PTR [rbp-0x28]
  40c1ad:	mov    BYTE PTR [rax],0x0
  40c1b0:	mov    rax,QWORD PTR [rbp-0x28]
  40c1b4:	add    rax,0x1
  40c1b8:	mov    QWORD PTR [rbp-0x28],rax
  40c1bc:	mov    rdi,QWORD PTR [rbp-0x40]
  40c1c0:	mov    esi,0x2c
  40c1c5:	call   402370 <strchr@plt>
  40c1ca:	mov    QWORD PTR [rbp-0x38],rax
  40c1ce:	cmp    QWORD PTR [rbp-0x38],0x0
  40c1d3:	jne    40c1e6 <rb_strcasecmp@plt+0x9c96>
  40c1d9:	mov    QWORD PTR [rbp-0x8],0x0
  40c1e1:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c1e6:	mov    rax,QWORD PTR [rbp-0x38]
  40c1ea:	mov    BYTE PTR [rax],0x0
  40c1ed:	mov    rax,QWORD PTR [rbp-0x38]
  40c1f1:	add    rax,0x1
  40c1f5:	mov    QWORD PTR [rbp-0x38],rax
  40c1f9:	mov    rdi,QWORD PTR [rbp-0x40]
  40c1fd:	call   402330 <atoi@plt>
  40c202:	mov    DWORD PTR [rbp-0x14],eax
  40c205:	cmp    DWORD PTR [rbp-0x14],0x0
  40c209:	jne    40c21c <rb_strcasecmp@plt+0x9ccc>
  40c20f:	mov    QWORD PTR [rbp-0x8],0x0
  40c217:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c21c:	mov    rdi,QWORD PTR [rbp-0x38]
  40c220:	call   402330 <atoi@plt>
  40c225:	mov    DWORD PTR [rbp-0x18],eax
  40c228:	cmp    DWORD PTR [rbp-0x18],0x0
  40c22c:	jne    40c23f <rb_strcasecmp@plt+0x9cef>
  40c232:	mov    QWORD PTR [rbp-0x8],0x0
  40c23a:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c23f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c243:	lea    rsi,[rip+0x4af0]        # 410d3a <rb_strcasecmp@plt+0xe7ea>
  40c24a:	call   4022d0 <strstr@plt>
  40c24f:	cmp    rax,0x0
  40c253:	jne    40c266 <rb_strcasecmp@plt+0x9d16>
  40c259:	mov    QWORD PTR [rbp-0x8],0x0
  40c261:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c266:	mov    rdi,QWORD PTR [rbp-0x28]
  40c26a:	mov    esi,0x3a
  40c26f:	call   402370 <strchr@plt>
  40c274:	mov    QWORD PTR [rbp-0x30],rax
  40c278:	cmp    QWORD PTR [rbp-0x30],0x0
  40c27d:	jne    40c290 <rb_strcasecmp@plt+0x9d40>
  40c283:	mov    QWORD PTR [rbp-0x8],0x0
  40c28b:	jmp    40c2ab <rb_strcasecmp@plt+0x9d5b>
  40c290:	mov    rax,QWORD PTR [rbp-0x30]
  40c294:	mov    BYTE PTR [rax],0x0
  40c297:	mov    rax,QWORD PTR [rbp-0x30]
  40c29b:	add    rax,0x1
  40c29f:	mov    QWORD PTR [rbp-0x30],rax
  40c2a3:	mov    rax,QWORD PTR [rbp-0x30]
  40c2a7:	mov    QWORD PTR [rbp-0x8],rax
  40c2ab:	mov    rax,QWORD PTR [rbp-0x8]
  40c2af:	add    rsp,0x40
  40c2b3:	pop    rbp
  40c2b4:	ret    
  40c2b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2bf:	nop
  40c2c0:	push   rbp
  40c2c1:	mov    rbp,rsp
  40c2c4:	sub    rsp,0x10
  40c2c8:	lea    rax,[rip+0xa939]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40c2cf:	mov    QWORD PTR [rbp-0x8],rdi
  40c2d3:	mov    rdi,QWORD PTR [rbp-0x8]
  40c2d7:	mov    esi,DWORD PTR [rax+0x18]
  40c2da:	call   40bac0 <rb_strcasecmp@plt+0x9570>
  40c2df:	mov    QWORD PTR [rbp-0x10],rax
  40c2e3:	mov    rax,QWORD PTR [rbp-0x10]
  40c2e7:	cmp    QWORD PTR [rax],0x0
  40c2eb:	je     40c2fd <rb_strcasecmp@plt+0x9dad>
  40c2f1:	mov    rax,QWORD PTR [rbp-0x10]
  40c2f5:	mov    rdi,QWORD PTR [rax]
  40c2f8:	call   402300 <rb_close@plt>
  40c2fd:	mov    rax,QWORD PTR [rbp-0x10]
  40c301:	mov    rdi,rax
  40c304:	call   40bbd0 <rb_strcasecmp@plt+0x9680>
  40c309:	xor    ecx,ecx
  40c30b:	mov    edx,ecx
  40c30d:	lea    rax,[rip+0xa8f4]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40c314:	mov    rdi,QWORD PTR [rbp-0x8]
  40c318:	mov    esi,DWORD PTR [rax+0x18]
  40c31b:	call   40bc10 <rb_strcasecmp@plt+0x96c0>
  40c320:	xor    ecx,ecx
  40c322:	mov    edx,ecx
  40c324:	lea    rax,[rip+0xa8dd]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40c32b:	mov    rdi,QWORD PTR [rbp-0x8]
  40c32f:	mov    esi,DWORD PTR [rax+0x18]
  40c332:	call   40bc40 <rb_strcasecmp@plt+0x96f0>
  40c337:	mov    rax,QWORD PTR [rbp-0x8]
  40c33b:	mov    edi,DWORD PTR [rax]
  40c33d:	mov    rsi,QWORD PTR [rip+0xa954]        # 416c98 <rb_strcasecmp@plt+0x14748>
  40c344:	mov    al,0x0
  40c346:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40c34b:	lea    rdx,[rip+0xa8b6]        # 416c08 <rb_strcasecmp@plt+0x146b8>
  40c352:	mov    rdi,QWORD PTR [rbp-0x8]
  40c356:	mov    esi,DWORD PTR [rdx+0x18]
  40c359:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40c35e:	mov    rdi,QWORD PTR [rbp-0x8]
  40c362:	call   40bc70 <rb_strcasecmp@plt+0x9720>
  40c367:	add    rsp,0x10
  40c36b:	pop    rbp
  40c36c:	ret    
  40c36d:	nop    DWORD PTR [rax]
  40c370:	push   rbp
  40c371:	mov    rbp,rsp
  40c374:	sub    rsp,0x20
  40c378:	mov    QWORD PTR [rbp-0x8],rdi
  40c37c:	mov    DWORD PTR [rbp-0xc],esi
  40c37f:	mov    QWORD PTR [rbp-0x18],rdx
  40c383:	mov    rdx,QWORD PTR [rbp-0x18]
  40c387:	mov    rdi,QWORD PTR [rdx]
  40c38a:	call   402330 <atoi@plt>
  40c38f:	mov    DWORD PTR [rbp-0x1c],eax
  40c392:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c396:	jge    40c3bc <rb_strcasecmp@plt+0x9e6c>
  40c39c:	mov    edx,DWORD PTR [rbp-0x1c]
  40c39f:	mov    edi,0x43
  40c3a4:	lea    rsi,[rip+0x49a3]        # 410d4e <rb_strcasecmp@plt+0xe7fe>
  40c3ab:	mov    al,0x0
  40c3ad:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40c3b2:	mov    edi,0x3
  40c3b7:	call   4020e0 <exit@plt>
  40c3bc:	mov    eax,DWORD PTR [rbp-0x1c]
  40c3bf:	mov    DWORD PTR [rip+0xa9a3],eax        # 416d68 <rb_strcasecmp@plt+0x14818>
  40c3c5:	add    rsp,0x20
  40c3c9:	pop    rbp
  40c3ca:	ret    
  40c3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3d0:	push   rbp
  40c3d1:	mov    rbp,rsp
  40c3d4:	sub    rsp,0x20
  40c3d8:	lea    rax,[rip+0xedb9]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40c3df:	mov    rdi,QWORD PTR [rax]
  40c3e2:	lea    rsi,[rbp-0x18]
  40c3e6:	call   402250 <rb_dictionary_foreach_start@plt>
  40c3eb:	lea    rax,[rip+0xeda6]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40c3f2:	mov    rdi,QWORD PTR [rax]
  40c3f5:	lea    rsi,[rbp-0x18]
  40c3f9:	call   402140 <rb_dictionary_foreach_cur@plt>
  40c3fe:	mov    QWORD PTR [rbp-0x8],rax
  40c402:	cmp    rax,0x0
  40c406:	je     40c454 <rb_strcasecmp@plt+0x9f04>
  40c40c:	lea    rax,[rip+0xa8dd]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c413:	mov    rdi,QWORD PTR [rbp-0x8]
  40c417:	mov    esi,DWORD PTR [rax+0x18]
  40c41a:	call   40c560 <rb_strcasecmp@plt+0xa010>
  40c41f:	cmp    rax,0x0
  40c423:	je     40c437 <rb_strcasecmp@plt+0x9ee7>
  40c429:	mov    rdi,QWORD PTR [rbp-0x8]
  40c42d:	mov    esi,0x1
  40c432:	call   40c590 <rb_strcasecmp@plt+0xa040>
  40c437:	jmp    40c43c <rb_strcasecmp@plt+0x9eec>
  40c43c:	lea    rax,[rip+0xed55]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40c443:	mov    rdi,QWORD PTR [rax]
  40c446:	lea    rsi,[rbp-0x18]
  40c44a:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40c44f:	jmp    40c3eb <rb_strcasecmp@plt+0x9e9b>
  40c454:	add    rsp,0x20
  40c458:	pop    rbp
  40c459:	ret    
  40c45a:	nop    WORD PTR [rax+rax*1+0x0]
  40c460:	push   rbp
  40c461:	mov    rbp,rsp
  40c464:	sub    rsp,0x10
  40c468:	mov    eax,0x8
  40c46d:	mov    ecx,eax
  40c46f:	mov    QWORD PTR [rbp-0x8],rdi
  40c473:	mov    rdi,rcx
  40c476:	call   40c750 <rb_strcasecmp@plt+0xa200>
  40c47b:	mov    QWORD PTR [rbp-0x10],rax
  40c47f:	mov    rdi,QWORD PTR [rbp-0x8]
  40c483:	call   40c7b0 <rb_strcasecmp@plt+0xa260>
  40c488:	lea    rax,[rip+0xa861]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c48f:	mov    rdi,QWORD PTR [rbp-0x8]
  40c493:	mov    esi,DWORD PTR [rax+0x18]
  40c496:	mov    rax,QWORD PTR [rbp-0x10]
  40c49a:	mov    rdx,rax
  40c49d:	call   40c6b0 <rb_strcasecmp@plt+0xa160>
  40c4a2:	lea    rax,[rip+0xa847]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c4a9:	mov    rdi,QWORD PTR [rbp-0x8]
  40c4ad:	mov    esi,DWORD PTR [rax+0x18]
  40c4b0:	movsxd rdx,DWORD PTR [rip+0xa8b1]        # 416d68 <rb_strcasecmp@plt+0x14818>
  40c4b7:	call   40c7d0 <rb_strcasecmp@plt+0xa280>
  40c4bc:	mov    rax,QWORD PTR [rbp-0x8]
  40c4c0:	add    rax,0xc0
  40c4c6:	mov    rcx,QWORD PTR [rbp-0x8]
  40c4ca:	mov    rdi,rax
  40c4cd:	lea    rsi,[rip+0x34c]        # 40c820 <rb_strcasecmp@plt+0xa2d0>
  40c4d4:	mov    rdx,rcx
  40c4d7:	call   402f60 <rb_strcasecmp@plt+0xa10>
  40c4dc:	mov    rcx,QWORD PTR [rbp-0x10]
  40c4e0:	mov    QWORD PTR [rcx],rax
  40c4e3:	mov    rax,QWORD PTR [rbp-0x8]
  40c4e7:	mov    edi,DWORD PTR [rax]
  40c4e9:	mov    rsi,QWORD PTR [rip+0xa880]        # 416d70 <rb_strcasecmp@plt+0x14820>
  40c4f0:	mov    al,0x0
  40c4f2:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40c4f7:	mov    al,0x1
  40c4f9:	and    al,0x1
  40c4fb:	movzx  eax,al
  40c4fe:	add    rsp,0x10
  40c502:	pop    rbp
  40c503:	ret    
  40c504:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c50e:	xchg   ax,ax
  40c510:	push   rbp
  40c511:	mov    rbp,rsp
  40c514:	sub    rsp,0x10
  40c518:	lea    rax,[rip+0xa7d1]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c51f:	mov    QWORD PTR [rbp-0x8],rdi
  40c523:	mov    rdi,QWORD PTR [rbp-0x8]
  40c527:	mov    esi,DWORD PTR [rax+0x18]
  40c52a:	call   40c560 <rb_strcasecmp@plt+0xa010>
  40c52f:	mov    QWORD PTR [rbp-0x10],rax
  40c533:	cmp    QWORD PTR [rbp-0x10],0x0
  40c538:	je     40c54c <rb_strcasecmp@plt+0x9ffc>
  40c53e:	mov    rdi,QWORD PTR [rbp-0x8]
  40c542:	mov    esi,0x1
  40c547:	call   40c590 <rb_strcasecmp@plt+0xa040>
  40c54c:	add    rsp,0x10
  40c550:	pop    rbp
  40c551:	ret    
  40c552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c55c:	nop    DWORD PTR [rax+0x0]
  40c560:	push   rbp
  40c561:	mov    rbp,rsp
  40c564:	mov    QWORD PTR [rbp-0x8],rdi
  40c568:	mov    DWORD PTR [rbp-0xc],esi
  40c56b:	mov    rdi,QWORD PTR [rbp-0x8]
  40c56f:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40c576:	mov    esi,DWORD PTR [rbp-0xc]
  40c579:	mov    eax,esi
  40c57b:	shl    rax,0x5
  40c57f:	add    rdi,rax
  40c582:	mov    rax,QWORD PTR [rdi+0x10]
  40c586:	pop    rbp
  40c587:	ret    
  40c588:	nop    DWORD PTR [rax+rax*1+0x0]
  40c590:	push   rbp
  40c591:	mov    rbp,rsp
  40c594:	sub    rsp,0x20
  40c598:	lea    rax,[rip+0xa751]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c59f:	mov    QWORD PTR [rbp-0x8],rdi
  40c5a3:	mov    DWORD PTR [rbp-0xc],esi
  40c5a6:	mov    rdi,QWORD PTR [rbp-0x8]
  40c5aa:	mov    esi,DWORD PTR [rax+0x18]
  40c5ad:	call   40c560 <rb_strcasecmp@plt+0xa010>
  40c5b2:	mov    esi,0x40
  40c5b7:	mov    edx,esi
  40c5b9:	mov    QWORD PTR [rbp-0x18],rax
  40c5bd:	mov    rax,QWORD PTR [rbp-0x8]
  40c5c1:	add    rax,0x178
  40c5c7:	mov    rdi,rax
  40c5ca:	lea    rsi,[rip+0x3d3f]        # 410310 <rb_strcasecmp@plt+0xddc0>
  40c5d1:	call   4021d0 <rb_strlcpy@plt>
  40c5d6:	mov    rdx,QWORD PTR [rbp-0x8]
  40c5da:	mov    edi,DWORD PTR [rdx]
  40c5dc:	mov    ecx,DWORD PTR [rbp-0xc]
  40c5df:	mov    edx,ecx
  40c5e1:	lea    rsi,[rip+0xa788]        # 416d70 <rb_strcasecmp@plt+0x14820>
  40c5e8:	mov    rsi,QWORD PTR [rsi+rdx*8]
  40c5ec:	mov    QWORD PTR [rbp-0x20],rax
  40c5f0:	mov    al,0x0
  40c5f2:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40c5f7:	mov    rdx,QWORD PTR [rbp-0x18]
  40c5fb:	mov    rdi,QWORD PTR [rdx]
  40c5fe:	call   403250 <rb_strcasecmp@plt+0xd00>
  40c603:	mov    rdx,QWORD PTR [rbp-0x18]
  40c607:	mov    rdi,rdx
  40c60a:	call   40c670 <rb_strcasecmp@plt+0xa120>
  40c60f:	xor    ecx,ecx
  40c611:	mov    edx,ecx
  40c613:	lea    rsi,[rip+0xa6d6]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c61a:	mov    rdi,QWORD PTR [rbp-0x8]
  40c61e:	mov    esi,DWORD PTR [rsi+0x18]
  40c621:	call   40c6b0 <rb_strcasecmp@plt+0xa160>
  40c626:	xor    ecx,ecx
  40c628:	mov    edx,ecx
  40c62a:	lea    rdi,[rip+0xa6bf]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c631:	mov    r8,QWORD PTR [rbp-0x8]
  40c635:	mov    esi,DWORD PTR [rdi+0x18]
  40c638:	mov    rdi,r8
  40c63b:	call   40c6e0 <rb_strcasecmp@plt+0xa190>
  40c640:	lea    rdx,[rip+0xa6a9]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c647:	mov    rdi,QWORD PTR [rbp-0x8]
  40c64b:	mov    esi,DWORD PTR [rdx+0x18]
  40c64e:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40c653:	mov    rdi,QWORD PTR [rbp-0x8]
  40c657:	call   40c710 <rb_strcasecmp@plt+0xa1c0>
  40c65c:	add    rsp,0x20
  40c660:	pop    rbp
  40c661:	ret    
  40c662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c66c:	nop    DWORD PTR [rax+0x0]
  40c670:	push   rbp
  40c671:	mov    rbp,rsp
  40c674:	sub    rsp,0x10
  40c678:	mov    QWORD PTR [rbp-0x8],rdi
  40c67c:	cmp    QWORD PTR [rbp-0x8],0x0
  40c681:	setne  al
  40c684:	xor    al,0xff
  40c686:	xor    al,0xff
  40c688:	and    al,0x1
  40c68a:	movzx  ecx,al
  40c68d:	movsxd rdi,ecx
  40c690:	cmp    rdi,0x0
  40c694:	je     40c6a3 <rb_strcasecmp@plt+0xa153>
  40c69a:	mov    rdi,QWORD PTR [rbp-0x8]
  40c69e:	call   402200 <free@plt>
  40c6a3:	add    rsp,0x10
  40c6a7:	pop    rbp
  40c6a8:	ret    
  40c6a9:	nop    DWORD PTR [rax+0x0]
  40c6b0:	push   rbp
  40c6b1:	mov    rbp,rsp
  40c6b4:	mov    QWORD PTR [rbp-0x8],rdi
  40c6b8:	mov    DWORD PTR [rbp-0xc],esi
  40c6bb:	mov    QWORD PTR [rbp-0x18],rdx
  40c6bf:	mov    rdx,QWORD PTR [rbp-0x18]
  40c6c3:	mov    rdi,QWORD PTR [rbp-0x8]
  40c6c7:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40c6ce:	mov    esi,DWORD PTR [rbp-0xc]
  40c6d1:	mov    eax,esi
  40c6d3:	shl    rax,0x5
  40c6d7:	add    rdi,rax
  40c6da:	mov    QWORD PTR [rdi+0x10],rdx
  40c6de:	pop    rbp
  40c6df:	ret    
  40c6e0:	push   rbp
  40c6e1:	mov    rbp,rsp
  40c6e4:	mov    QWORD PTR [rbp-0x8],rdi
  40c6e8:	mov    DWORD PTR [rbp-0xc],esi
  40c6eb:	mov    QWORD PTR [rbp-0x18],rdx
  40c6ef:	mov    rdx,QWORD PTR [rbp-0x18]
  40c6f3:	mov    rdi,QWORD PTR [rbp-0x8]
  40c6f7:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40c6fe:	mov    esi,DWORD PTR [rbp-0xc]
  40c701:	mov    eax,esi
  40c703:	shl    rax,0x5
  40c707:	add    rdi,rax
  40c70a:	mov    QWORD PTR [rdi+0x8],rdx
  40c70e:	pop    rbp
  40c70f:	ret    
  40c710:	push   rbp
  40c711:	mov    rbp,rsp
  40c714:	sub    rsp,0x10
  40c718:	mov    QWORD PTR [rbp-0x8],rdi
  40c71c:	mov    rdi,QWORD PTR [rbp-0x8]
  40c720:	mov    eax,DWORD PTR [rdi+0x1cc]
  40c726:	add    eax,0xffffffff
  40c729:	mov    DWORD PTR [rdi+0x1cc],eax
  40c72f:	mov    rdi,QWORD PTR [rbp-0x8]
  40c733:	cmp    DWORD PTR [rdi+0x1cc],0x0
  40c73a:	jne    40c749 <rb_strcasecmp@plt+0xa1f9>
  40c740:	mov    rdi,QWORD PTR [rbp-0x8]
  40c744:	call   4049a0 <rb_strcasecmp@plt+0x2450>
  40c749:	add    rsp,0x10
  40c74d:	pop    rbp
  40c74e:	ret    
  40c74f:	nop
  40c750:	push   rbp
  40c751:	mov    rbp,rsp
  40c754:	sub    rsp,0x10
  40c758:	mov    eax,0x1
  40c75d:	mov    ecx,eax
  40c75f:	mov    QWORD PTR [rbp-0x8],rdi
  40c763:	mov    rsi,QWORD PTR [rbp-0x8]
  40c767:	mov    rdi,rcx
  40c76a:	call   402470 <calloc@plt>
  40c76f:	mov    QWORD PTR [rbp-0x10],rax
  40c773:	cmp    QWORD PTR [rbp-0x10],0x0
  40c778:	sete   dl
  40c77b:	xor    dl,0xff
  40c77e:	xor    dl,0xff
  40c781:	and    dl,0x1
  40c784:	movzx  r8d,dl
  40c788:	movsxd rax,r8d
  40c78b:	cmp    rax,0x0
  40c78f:	je     40c79a <rb_strcasecmp@plt+0xa24a>
  40c795:	call   4023b0 <rb_outofmemory@plt>
  40c79a:	mov    rax,QWORD PTR [rbp-0x10]
  40c79e:	add    rsp,0x10
  40c7a2:	pop    rbp
  40c7a3:	ret    
  40c7a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7ae:	xchg   ax,ax
  40c7b0:	push   rbp
  40c7b1:	mov    rbp,rsp
  40c7b4:	mov    QWORD PTR [rbp-0x8],rdi
  40c7b8:	mov    rdi,QWORD PTR [rbp-0x8]
  40c7bc:	mov    eax,DWORD PTR [rdi+0x1cc]
  40c7c2:	add    eax,0x1
  40c7c5:	mov    DWORD PTR [rdi+0x1cc],eax
  40c7cb:	pop    rbp
  40c7cc:	ret    
  40c7cd:	nop    DWORD PTR [rax]
  40c7d0:	push   rbp
  40c7d1:	mov    rbp,rsp
  40c7d4:	sub    rsp,0x20
  40c7d8:	mov    QWORD PTR [rbp-0x8],rdi
  40c7dc:	mov    DWORD PTR [rbp-0xc],esi
  40c7df:	mov    QWORD PTR [rbp-0x18],rdx
  40c7e3:	mov    rdx,QWORD PTR [rbp-0x18]
  40c7e7:	mov    QWORD PTR [rbp-0x20],rdx
  40c7eb:	call   4022a0 <rb_current_time@plt>
  40c7f0:	mov    rdx,QWORD PTR [rbp-0x20]
  40c7f4:	add    rdx,rax
  40c7f7:	mov    rax,QWORD PTR [rbp-0x8]
  40c7fb:	mov    rax,QWORD PTR [rax+0x1d0]
  40c802:	mov    esi,DWORD PTR [rbp-0xc]
  40c805:	mov    edi,esi
  40c807:	shl    rdi,0x5
  40c80b:	add    rax,rdi
  40c80e:	mov    QWORD PTR [rax+0x8],rdx
  40c812:	add    rsp,0x20
  40c816:	pop    rbp
  40c817:	ret    
  40c818:	nop    DWORD PTR [rax+rax*1+0x0]
  40c820:	push   rbp
  40c821:	mov    rbp,rsp
  40c824:	sub    rsp,0x30
  40c828:	mov    al,sil
  40c82b:	mov    QWORD PTR [rbp-0x8],rdi
  40c82f:	and    al,0x1
  40c831:	mov    BYTE PTR [rbp-0x9],al
  40c834:	mov    DWORD PTR [rbp-0x10],edx
  40c837:	mov    QWORD PTR [rbp-0x18],rcx
  40c83b:	mov    rcx,QWORD PTR [rbp-0x18]
  40c83f:	mov    QWORD PTR [rbp-0x20],rcx
  40c843:	cmp    QWORD PTR [rbp-0x8],0x0
  40c848:	je     40c85f <rb_strcasecmp@plt+0xa30f>
  40c84e:	mov    al,BYTE PTR [rbp-0x9]
  40c851:	and    al,0x1
  40c853:	movzx  ecx,al
  40c856:	cmp    ecx,0x0
  40c859:	jne    40c872 <rb_strcasecmp@plt+0xa322>
  40c85f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c863:	mov    esi,0x1
  40c868:	call   40c590 <rb_strcasecmp@plt+0xa040>
  40c86d:	jmp    40c8c8 <rb_strcasecmp@plt+0xa378>
  40c872:	mov    rdi,QWORD PTR [rbp-0x8]
  40c876:	call   402210 <strlen@plt>
  40c87b:	cmp    rax,0x3f
  40c87f:	jbe    40c898 <rb_strcasecmp@plt+0xa348>
  40c885:	mov    rdi,QWORD PTR [rbp-0x20]
  40c889:	mov    esi,0x2
  40c88e:	call   40c590 <rb_strcasecmp@plt+0xa040>
  40c893:	jmp    40c8c3 <rb_strcasecmp@plt+0xa373>
  40c898:	mov    eax,0x40
  40c89d:	mov    edx,eax
  40c89f:	mov    rcx,QWORD PTR [rbp-0x20]
  40c8a3:	add    rcx,0x178
  40c8aa:	mov    rsi,QWORD PTR [rbp-0x8]
  40c8ae:	mov    rdi,rcx
  40c8b1:	call   4021d0 <rb_strlcpy@plt>
  40c8b6:	mov    rdi,QWORD PTR [rbp-0x20]
  40c8ba:	mov    QWORD PTR [rbp-0x28],rax
  40c8be:	call   40c8d0 <rb_strcasecmp@plt+0xa380>
  40c8c3:	jmp    40c8c8 <rb_strcasecmp@plt+0xa378>
  40c8c8:	add    rsp,0x30
  40c8cc:	pop    rbp
  40c8cd:	ret    
  40c8ce:	xchg   ax,ax
  40c8d0:	push   rbp
  40c8d1:	mov    rbp,rsp
  40c8d4:	sub    rsp,0x10
  40c8d8:	lea    rax,[rip+0xa411]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c8df:	mov    QWORD PTR [rbp-0x8],rdi
  40c8e3:	mov    rdi,QWORD PTR [rbp-0x8]
  40c8e7:	mov    esi,DWORD PTR [rax+0x18]
  40c8ea:	call   40c560 <rb_strcasecmp@plt+0xa010>
  40c8ef:	mov    QWORD PTR [rbp-0x10],rax
  40c8f3:	mov    rax,QWORD PTR [rbp-0x8]
  40c8f7:	mov    edi,DWORD PTR [rax]
  40c8f9:	mov    rax,QWORD PTR [rbp-0x8]
  40c8fd:	add    rax,0x178
  40c903:	lea    rsi,[rip+0x44da]        # 410de4 <rb_strcasecmp@plt+0xe894>
  40c90a:	mov    rdx,rax
  40c90d:	mov    al,0x0
  40c90f:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40c914:	mov    rdx,QWORD PTR [rbp-0x10]
  40c918:	mov    rdi,QWORD PTR [rdx]
  40c91b:	call   403250 <rb_strcasecmp@plt+0xd00>
  40c920:	mov    rdx,QWORD PTR [rbp-0x10]
  40c924:	mov    rdi,rdx
  40c927:	call   40c670 <rb_strcasecmp@plt+0xa120>
  40c92c:	xor    ecx,ecx
  40c92e:	mov    edx,ecx
  40c930:	lea    rsi,[rip+0xa3b9]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c937:	mov    rdi,QWORD PTR [rbp-0x8]
  40c93b:	mov    esi,DWORD PTR [rsi+0x18]
  40c93e:	call   40c6b0 <rb_strcasecmp@plt+0xa160>
  40c943:	xor    ecx,ecx
  40c945:	mov    edx,ecx
  40c947:	lea    rdi,[rip+0xa3a2]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c94e:	mov    r8,QWORD PTR [rbp-0x8]
  40c952:	mov    esi,DWORD PTR [rdi+0x18]
  40c955:	mov    rdi,r8
  40c958:	call   40c6e0 <rb_strcasecmp@plt+0xa190>
  40c95d:	lea    rdx,[rip+0xa38c]        # 416cf0 <rb_strcasecmp@plt+0x147a0>
  40c964:	mov    rdi,QWORD PTR [rbp-0x8]
  40c968:	mov    esi,DWORD PTR [rdx+0x18]
  40c96b:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40c970:	mov    rdi,QWORD PTR [rbp-0x8]
  40c974:	call   40c710 <rb_strcasecmp@plt+0xa1c0>
  40c979:	add    rsp,0x10
  40c97d:	pop    rbp
  40c97e:	ret    
  40c97f:	nop
  40c980:	push   rbp
  40c981:	mov    rbp,rsp
  40c984:	sub    rsp,0x20
  40c988:	mov    QWORD PTR [rbp-0x8],rdi
  40c98c:	mov    DWORD PTR [rbp-0xc],esi
  40c98f:	mov    QWORD PTR [rbp-0x18],rdx
  40c993:	mov    rdx,QWORD PTR [rbp-0x18]
  40c997:	mov    rdi,QWORD PTR [rdx]
  40c99a:	call   402330 <atoi@plt>
  40c99f:	mov    DWORD PTR [rbp-0x1c],eax
  40c9a2:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c9a6:	jge    40c9c7 <rb_strcasecmp@plt+0xa477>
  40c9ac:	mov    edx,DWORD PTR [rbp-0x1c]
  40c9af:	mov    edi,0x43
  40c9b4:	lea    rsi,[rip+0x44ca]        # 410e85 <rb_strcasecmp@plt+0xe935>
  40c9bb:	mov    al,0x0
  40c9bd:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40c9c2:	jmp    40c9d0 <rb_strcasecmp@plt+0xa480>
  40c9c7:	mov    eax,DWORD PTR [rbp-0x1c]
  40c9ca:	mov    DWORD PTR [rip+0xa4f8],eax        # 416ec8 <rb_strcasecmp@plt+0x14978>
  40c9d0:	add    rsp,0x20
  40c9d4:	pop    rbp
  40c9d5:	ret    
  40c9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9e0:	push   rbp
  40c9e1:	mov    rbp,rsp
  40c9e4:	sub    rsp,0x40
  40c9e8:	mov    QWORD PTR [rbp-0x8],rdi
  40c9ec:	mov    DWORD PTR [rbp-0xc],esi
  40c9ef:	mov    QWORD PTR [rbp-0x18],rdx
  40c9f3:	mov    rdx,QWORD PTR [rbp-0x18]
  40c9f7:	mov    rdx,QWORD PTR [rdx]
  40c9fa:	movsx  esi,BYTE PTR [rdx]
  40c9fd:	cmp    esi,0x31
  40ca00:	sete   al
  40ca03:	and    al,0x1
  40ca05:	mov    BYTE PTR [rbp-0x19],al
  40ca08:	test   BYTE PTR [rbp-0x19],0x1
  40ca0c:	jne    40cad7 <rb_strcasecmp@plt+0xa587>
  40ca12:	cmp    QWORD PTR [rip+0xe68e],0x0        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40ca1a:	jne    40ca2e <rb_strcasecmp@plt+0xa4de>
  40ca20:	cmp    QWORD PTR [rip+0xe740],0x0        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40ca28:	je     40cad2 <rb_strcasecmp@plt+0xa582>
  40ca2e:	cmp    QWORD PTR [rip+0xe672],0x0        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40ca36:	je     40ca48 <rb_strcasecmp@plt+0xa4f8>
  40ca3c:	mov    rdi,QWORD PTR [rip+0xe665]        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40ca43:	call   402300 <rb_close@plt>
  40ca48:	cmp    QWORD PTR [rip+0xe718],0x0        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40ca50:	je     40ca62 <rb_strcasecmp@plt+0xa512>
  40ca56:	mov    rdi,QWORD PTR [rip+0xe70b]        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40ca5d:	call   402300 <rb_close@plt>
  40ca62:	lea    rax,[rip+0xe72f]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40ca69:	mov    QWORD PTR [rip+0xe6f4],0x0        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40ca74:	mov    QWORD PTR [rip+0xe629],0x0        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40ca7f:	mov    rdi,QWORD PTR [rax]
  40ca82:	lea    rsi,[rbp-0x38]
  40ca86:	call   402250 <rb_dictionary_foreach_start@plt>
  40ca8b:	lea    rax,[rip+0xe706]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40ca92:	mov    rdi,QWORD PTR [rax]
  40ca95:	lea    rsi,[rbp-0x38]
  40ca99:	call   402140 <rb_dictionary_foreach_cur@plt>
  40ca9e:	mov    QWORD PTR [rbp-0x28],rax
  40caa2:	cmp    rax,0x0
  40caa6:	je     40cacd <rb_strcasecmp@plt+0xa57d>
  40caac:	mov    rdi,QWORD PTR [rbp-0x28]
  40cab0:	call   40d3c0 <rb_strcasecmp@plt+0xae70>
  40cab5:	lea    rax,[rip+0xe6dc]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40cabc:	mov    rdi,QWORD PTR [rax]
  40cabf:	lea    rsi,[rbp-0x38]
  40cac3:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40cac8:	jmp    40ca8b <rb_strcasecmp@plt+0xa53b>
  40cacd:	jmp    40cad2 <rb_strcasecmp@plt+0xa582>
  40cad2:	jmp    40cb77 <rb_strcasecmp@plt+0xa627>
  40cad7:	movsx  eax,BYTE PTR [rip+0xe512]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40cade:	cmp    eax,0x0
  40cae1:	je     40cb20 <rb_strcasecmp@plt+0xa5d0>
  40cae7:	movzx  eax,WORD PTR [rip+0xe538]        # 41b026 <rb_strcasecmp@plt+0x18ad6>
  40caee:	cmp    eax,0x0
  40caf1:	je     40cb20 <rb_strcasecmp@plt+0xa5d0>
  40caf7:	cmp    QWORD PTR [rip+0xe5a9],0x0        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40caff:	jne    40cb1b <rb_strcasecmp@plt+0xa5cb>
  40cb05:	lea    rdi,[rip+0xe4e4]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40cb0c:	movzx  esi,WORD PTR [rip+0xe513]        # 41b026 <rb_strcasecmp@plt+0x18ad6>
  40cb13:	call   40d5b0 <rb_strcasecmp@plt+0xb060>
  40cb18:	mov    BYTE PTR [rbp-0x39],al
  40cb1b:	jmp    40cb20 <rb_strcasecmp@plt+0xa5d0>
  40cb20:	movsx  eax,BYTE PTR [rip+0xe589]        # 41b0b0 <rb_strcasecmp@plt+0x18b60>
  40cb27:	cmp    eax,0x0
  40cb2a:	je     40cb72 <rb_strcasecmp@plt+0xa622>
  40cb30:	movzx  eax,WORD PTR [rip+0xe5af]        # 41b0e6 <rb_strcasecmp@plt+0x18b96>
  40cb37:	cmp    eax,0x0
  40cb3a:	je     40cb72 <rb_strcasecmp@plt+0xa622>
  40cb40:	cmp    QWORD PTR [rip+0xe620],0x0        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40cb48:	jne    40cb6d <rb_strcasecmp@plt+0xa61d>
  40cb4e:	lea    rax,[rip+0xe49b]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40cb55:	add    rax,0xc0
  40cb5b:	mov    rdi,rax
  40cb5e:	movzx  esi,WORD PTR [rip+0xe581]        # 41b0e6 <rb_strcasecmp@plt+0x18b96>
  40cb65:	call   40d5b0 <rb_strcasecmp@plt+0xb060>
  40cb6a:	mov    BYTE PTR [rbp-0x3a],al
  40cb6d:	jmp    40cb72 <rb_strcasecmp@plt+0xa622>
  40cb72:	jmp    40cb77 <rb_strcasecmp@plt+0xa627>
  40cb77:	mov    al,BYTE PTR [rbp-0x19]
  40cb7a:	and    al,0x1
  40cb7c:	mov    BYTE PTR [rip+0xe5ee],al        # 41b170 <rb_strcasecmp@plt+0x18c20>
  40cb82:	add    rsp,0x40
  40cb86:	pop    rbp
  40cb87:	ret    
  40cb88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	push   rbp
  40cb91:	mov    rbp,rsp
  40cb94:	sub    rsp,0x30
  40cb98:	mov    QWORD PTR [rbp-0x8],rdi
  40cb9c:	mov    DWORD PTR [rbp-0xc],esi
  40cb9f:	mov    QWORD PTR [rbp-0x18],rdx
  40cba3:	mov    rdx,QWORD PTR [rbp-0x18]
  40cba7:	mov    rdx,QWORD PTR [rdx]
  40cbaa:	mov    QWORD PTR [rbp-0x20],rdx
  40cbae:	mov    rdx,QWORD PTR [rbp-0x18]
  40cbb2:	mov    rdi,QWORD PTR [rdx+0x8]
  40cbb6:	call   402330 <atoi@plt>
  40cbbb:	mov    DWORD PTR [rbp-0x24],eax
  40cbbe:	cmp    DWORD PTR [rbp-0x24],0xffff
  40cbc5:	jg     40cbd5 <rb_strcasecmp@plt+0xa685>
  40cbcb:	cmp    DWORD PTR [rbp-0x24],0x0
  40cbcf:	jg     40cc01 <rb_strcasecmp@plt+0xa6b1>
  40cbd5:	mov    rax,QWORD PTR [rbp-0x18]
  40cbd9:	mov    rdx,QWORD PTR [rax]
  40cbdc:	mov    rax,QWORD PTR [rbp-0x18]
  40cbe0:	mov    rcx,QWORD PTR [rax+0x8]
  40cbe4:	mov    edi,0x43
  40cbe9:	lea    rsi,[rip+0x43af]        # 410f9f <rb_strcasecmp@plt+0xea4f>
  40cbf0:	mov    al,0x0
  40cbf2:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40cbf7:	mov    edi,0x3
  40cbfc:	call   4020e0 <exit@plt>
  40cc01:	mov    rdi,QWORD PTR [rbp-0x20]
  40cc05:	mov    eax,DWORD PTR [rbp-0x24]
  40cc08:	mov    cx,ax
  40cc0b:	movzx  esi,cx
  40cc0e:	call   40d5b0 <rb_strcasecmp@plt+0xb060>
  40cc13:	mov    BYTE PTR [rbp-0x25],al
  40cc16:	add    rsp,0x30
  40cc1a:	pop    rbp
  40cc1b:	ret    
  40cc1c:	nop    DWORD PTR [rax+0x0]
  40cc20:	push   rbp
  40cc21:	mov    rbp,rsp
  40cc24:	sub    rsp,0x20
  40cc28:	mov    QWORD PTR [rbp-0x8],rdi
  40cc2c:	mov    DWORD PTR [rbp-0xc],esi
  40cc2f:	mov    QWORD PTR [rbp-0x18],rdx
  40cc33:	cmp    QWORD PTR [rip+0xe46d],0x0        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40cc3b:	je     40cc4d <rb_strcasecmp@plt+0xa6fd>
  40cc41:	mov    rdi,QWORD PTR [rip+0xe460]        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40cc48:	call   402300 <rb_close@plt>
  40cc4d:	cmp    QWORD PTR [rip+0xe513],0x0        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40cc55:	je     40cc67 <rb_strcasecmp@plt+0xa717>
  40cc5b:	mov    rdi,QWORD PTR [rip+0xe506]        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40cc62:	call   402300 <rb_close@plt>
  40cc67:	xor    esi,esi
  40cc69:	mov    eax,0x180
  40cc6e:	mov    edx,eax
  40cc70:	lea    rdi,[rip+0xe379]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40cc77:	call   402040 <memset@plt>
  40cc7c:	add    rsp,0x20
  40cc80:	pop    rbp
  40cc81:	ret    
  40cc82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc8c:	nop    DWORD PTR [rax+0x0]
  40cc90:	push   rbp
  40cc91:	mov    rbp,rsp
  40cc94:	sub    rsp,0x50
  40cc98:	mov    QWORD PTR [rbp-0x8],rdi
  40cc9c:	mov    DWORD PTR [rbp-0xc],esi
  40cc9f:	mov    QWORD PTR [rbp-0x18],rdx
  40cca3:	mov    rdx,QWORD PTR [rbp-0x18]
  40cca7:	mov    rdi,QWORD PTR [rdx+0x8]
  40ccab:	call   402330 <atoi@plt>
  40ccb0:	mov    esi,0x38
  40ccb5:	mov    edi,esi
  40ccb7:	mov    DWORD PTR [rbp-0x1c],eax
  40ccba:	call   40e150 <rb_strcasecmp@plt+0xbc00>
  40ccbf:	mov    QWORD PTR [rbp-0x28],rax
  40ccc3:	cmp    DWORD PTR [rbp-0x1c],0x0
  40ccc7:	jle    40ccda <rb_strcasecmp@plt+0xa78a>
  40cccd:	cmp    DWORD PTR [rbp-0x1c],0xffff
  40ccd4:	jle    40cd06 <rb_strcasecmp@plt+0xa7b6>
  40ccda:	mov    rax,QWORD PTR [rbp-0x18]
  40ccde:	mov    rdx,QWORD PTR [rax]
  40cce1:	mov    rax,QWORD PTR [rbp-0x18]
  40cce5:	mov    rcx,QWORD PTR [rax+0x8]
  40cce9:	mov    edi,0x43
  40ccee:	lea    rsi,[rip+0x42c9]        # 410fbe <rb_strcasecmp@plt+0xea6e>
  40ccf5:	mov    al,0x0
  40ccf7:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40ccfc:	mov    edi,0x3
  40cd01:	call   4020e0 <exit@plt>
  40cd06:	mov    ax,WORD PTR [rbp-0x1c]
  40cd0a:	mov    rcx,QWORD PTR [rbp-0x28]
  40cd0e:	mov    WORD PTR [rcx+0x14],ax
  40cd12:	mov    rcx,QWORD PTR [rbp-0x18]
  40cd16:	mov    rdi,QWORD PTR [rcx]
  40cd19:	call   40e1b0 <rb_strcasecmp@plt+0xbc60>
  40cd1e:	mov    rcx,QWORD PTR [rbp-0x28]
  40cd22:	mov    DWORD PTR [rcx+0x10],eax
  40cd25:	add    eax,0xffffffff
  40cd28:	mov    ecx,eax
  40cd2a:	sub    eax,0x3
  40cd2d:	mov    QWORD PTR [rbp-0x30],rcx
  40cd31:	mov    DWORD PTR [rbp-0x34],eax
  40cd34:	ja     40ce4e <rb_strcasecmp@plt+0xa8fe>
  40cd3a:	lea    rax,[rip+0x40bf]        # 410e00 <rb_strcasecmp@plt+0xe8b0>
  40cd41:	mov    rcx,QWORD PTR [rbp-0x30]
  40cd45:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40cd49:	add    rdx,rax
  40cd4c:	jmp    rdx
  40cd4e:	mov    eax,0x10
  40cd53:	mov    esi,eax
  40cd55:	mov    rdi,QWORD PTR [rbp-0x28]
  40cd59:	mov    rcx,QWORD PTR [rbp-0x28]
  40cd5d:	movzx  ecx,WORD PTR [rcx+0x14]
  40cd61:	lea    rdx,[rip+0x427b]        # 410fe3 <rb_strcasecmp@plt+0xea93>
  40cd68:	mov    al,0x0
  40cd6a:	call   402080 <snprintf@plt>
  40cd6f:	mov    rdx,QWORD PTR [rbp-0x28]
  40cd73:	mov    BYTE PTR [rdx+0x16],0x0
  40cd77:	mov    rdx,QWORD PTR [rbp-0x28]
  40cd7b:	lea    rsi,[rip+0x14de]        # 40e260 <rb_strcasecmp@plt+0xbd10>
  40cd82:	mov    QWORD PTR [rdx+0x18],rsi
  40cd86:	mov    DWORD PTR [rbp-0x38],eax
  40cd89:	jmp    40ce7a <rb_strcasecmp@plt+0xa92a>
  40cd8e:	mov    eax,0x10
  40cd93:	mov    esi,eax
  40cd95:	mov    rdi,QWORD PTR [rbp-0x28]
  40cd99:	mov    rcx,QWORD PTR [rbp-0x28]
  40cd9d:	movzx  ecx,WORD PTR [rcx+0x14]
  40cda1:	lea    rdx,[rip+0x4246]        # 410fee <rb_strcasecmp@plt+0xea9e>
  40cda8:	mov    al,0x0
  40cdaa:	call   402080 <snprintf@plt>
  40cdaf:	mov    rdx,QWORD PTR [rbp-0x28]
  40cdb3:	mov    BYTE PTR [rdx+0x16],0x0
  40cdb7:	mov    rdx,QWORD PTR [rbp-0x28]
  40cdbb:	lea    rsi,[rip+0x158e]        # 40e350 <rb_strcasecmp@plt+0xbe00>
  40cdc2:	mov    QWORD PTR [rdx+0x18],rsi
  40cdc6:	mov    DWORD PTR [rbp-0x3c],eax
  40cdc9:	jmp    40ce7a <rb_strcasecmp@plt+0xa92a>
  40cdce:	mov    eax,0x10
  40cdd3:	mov    esi,eax
  40cdd5:	mov    rdi,QWORD PTR [rbp-0x28]
  40cdd9:	mov    rcx,QWORD PTR [rbp-0x28]
  40cddd:	movzx  ecx,WORD PTR [rcx+0x14]
  40cde1:	lea    rdx,[rip+0x4211]        # 410ff9 <rb_strcasecmp@plt+0xeaa9>
  40cde8:	mov    al,0x0
  40cdea:	call   402080 <snprintf@plt>
  40cdef:	mov    rdx,QWORD PTR [rbp-0x28]
  40cdf3:	mov    BYTE PTR [rdx+0x16],0x0
  40cdf7:	mov    rdx,QWORD PTR [rbp-0x28]
  40cdfb:	lea    rsi,[rip+0x16fe]        # 40e500 <rb_strcasecmp@plt+0xbfb0>
  40ce02:	mov    QWORD PTR [rdx+0x18],rsi
  40ce06:	mov    DWORD PTR [rbp-0x40],eax
  40ce09:	jmp    40ce7a <rb_strcasecmp@plt+0xa92a>
  40ce0e:	mov    eax,0x10
  40ce13:	mov    esi,eax
  40ce15:	mov    rdi,QWORD PTR [rbp-0x28]
  40ce19:	mov    rcx,QWORD PTR [rbp-0x28]
  40ce1d:	movzx  ecx,WORD PTR [rcx+0x14]
  40ce21:	lea    rdx,[rip+0x41e1]        # 411009 <rb_strcasecmp@plt+0xeab9>
  40ce28:	mov    al,0x0
  40ce2a:	call   402080 <snprintf@plt>
  40ce2f:	mov    rdx,QWORD PTR [rbp-0x28]
  40ce33:	lea    rsi,[rip+0x16c6]        # 40e500 <rb_strcasecmp@plt+0xbfb0>
  40ce3a:	mov    QWORD PTR [rdx+0x18],rsi
  40ce3e:	mov    rdx,QWORD PTR [rbp-0x28]
  40ce42:	mov    BYTE PTR [rdx+0x16],0x1
  40ce46:	mov    DWORD PTR [rbp-0x44],eax
  40ce49:	jmp    40ce7a <rb_strcasecmp@plt+0xa92a>
  40ce4e:	mov    rax,QWORD PTR [rbp-0x18]
  40ce52:	mov    rdx,QWORD PTR [rax]
  40ce55:	mov    rax,QWORD PTR [rbp-0x28]
  40ce59:	movzx  ecx,WORD PTR [rax+0x14]
  40ce5d:	mov    edi,0x43
  40ce62:	lea    rsi,[rip+0x41b1]        # 41101a <rb_strcasecmp@plt+0xeaca>
  40ce69:	mov    al,0x0
  40ce6b:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40ce70:	mov    edi,0x3
  40ce75:	call   4020e0 <exit@plt>
  40ce7a:	mov    rax,QWORD PTR [rbp-0x28]
  40ce7e:	mov    edi,DWORD PTR [rax+0x10]
  40ce81:	mov    rax,QWORD PTR [rbp-0x28]
  40ce85:	movzx  esi,WORD PTR [rax+0x14]
  40ce89:	call   40e630 <rb_strcasecmp@plt+0xc0e0>
  40ce8e:	cmp    rax,0x0
  40ce92:	je     40cecb <rb_strcasecmp@plt+0xa97b>
  40ce98:	mov    rax,QWORD PTR [rbp-0x18]
  40ce9c:	mov    rdx,QWORD PTR [rax]
  40ce9f:	mov    rax,QWORD PTR [rbp-0x28]
  40cea3:	movzx  ecx,WORD PTR [rax+0x14]
  40cea7:	mov    edi,0x43
  40ceac:	lea    rsi,[rip+0x4195]        # 411048 <rb_strcasecmp@plt+0xeaf8>
  40ceb3:	mov    al,0x0
  40ceb5:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40ceba:	mov    rdx,QWORD PTR [rbp-0x28]
  40cebe:	mov    rdi,rdx
  40cec1:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40cec6:	jmp    40cee9 <rb_strcasecmp@plt+0xa999>
  40cecb:	mov    rax,QWORD PTR [rbp-0x28]
  40cecf:	mov    rcx,QWORD PTR [rbp-0x28]
  40ced3:	add    rcx,0x20
  40ced7:	mov    rdi,rax
  40ceda:	mov    rsi,rcx
  40cedd:	lea    rdx,[rip+0xe294]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40cee4:	call   40e6c0 <rb_strcasecmp@plt+0xc170>
  40cee9:	add    rsp,0x50
  40ceed:	pop    rbp
  40ceee:	ret    
  40ceef:	nop
  40cef0:	push   rbp
  40cef1:	mov    rbp,rsp
  40cef4:	sub    rsp,0x60
  40cef8:	mov    QWORD PTR [rbp-0x8],rdi
  40cefc:	mov    DWORD PTR [rbp-0xc],esi
  40ceff:	mov    QWORD PTR [rbp-0x18],rdx
  40cf03:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf07:	mov    rdi,QWORD PTR [rdx]
  40cf0a:	call   40e1b0 <rb_strcasecmp@plt+0xbc60>
  40cf0f:	mov    DWORD PTR [rbp-0x2c],eax
  40cf12:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf16:	mov    rdi,QWORD PTR [rdx+0x8]
  40cf1a:	call   402330 <atoi@plt>
  40cf1f:	mov    DWORD PTR [rbp-0x30],eax
  40cf22:	cmp    DWORD PTR [rbp-0x30],0x0
  40cf26:	jle    40cf39 <rb_strcasecmp@plt+0xa9e9>
  40cf2c:	cmp    DWORD PTR [rbp-0x30],0xffff
  40cf33:	jle    40cf65 <rb_strcasecmp@plt+0xaa15>
  40cf39:	mov    rax,QWORD PTR [rbp-0x18]
  40cf3d:	mov    rdx,QWORD PTR [rax]
  40cf40:	mov    rax,QWORD PTR [rbp-0x18]
  40cf44:	mov    rcx,QWORD PTR [rax+0x8]
  40cf48:	mov    edi,0x43
  40cf4d:	lea    rsi,[rip+0x4166]        # 4110ba <rb_strcasecmp@plt+0xeb6a>
  40cf54:	mov    al,0x0
  40cf56:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40cf5b:	mov    edi,0x3
  40cf60:	call   4020e0 <exit@plt>
  40cf65:	cmp    DWORD PTR [rbp-0x2c],0x0
  40cf69:	jne    40cf96 <rb_strcasecmp@plt+0xaa46>
  40cf6f:	mov    rax,QWORD PTR [rbp-0x18]
  40cf73:	mov    rdx,QWORD PTR [rax]
  40cf76:	mov    ecx,DWORD PTR [rbp-0x30]
  40cf79:	mov    edi,0x43
  40cf7e:	lea    rsi,[rip+0x4164]        # 4110e9 <rb_strcasecmp@plt+0xeb99>
  40cf85:	mov    al,0x0
  40cf87:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40cf8c:	mov    edi,0x3
  40cf91:	call   4020e0 <exit@plt>
  40cf96:	mov    edi,DWORD PTR [rbp-0x2c]
  40cf99:	mov    eax,DWORD PTR [rbp-0x30]
  40cf9c:	mov    cx,ax
  40cf9f:	movzx  esi,cx
  40cfa2:	call   40e630 <rb_strcasecmp@plt+0xc0e0>
  40cfa7:	mov    QWORD PTR [rbp-0x28],rax
  40cfab:	cmp    rax,0x0
  40cfaf:	jne    40cfdc <rb_strcasecmp@plt+0xaa8c>
  40cfb5:	mov    rax,QWORD PTR [rbp-0x18]
  40cfb9:	mov    rdx,QWORD PTR [rax]
  40cfbc:	mov    ecx,DWORD PTR [rbp-0x30]
  40cfbf:	mov    edi,0x43
  40cfc4:	lea    rsi,[rip+0x4155]        # 411120 <rb_strcasecmp@plt+0xebd0>
  40cfcb:	mov    al,0x0
  40cfcd:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40cfd2:	mov    edi,0x3
  40cfd7:	call   4020e0 <exit@plt>
  40cfdc:	lea    rax,[rip+0xe1b5]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40cfe3:	mov    rdi,QWORD PTR [rax]
  40cfe6:	lea    rsi,[rbp-0x40]
  40cfea:	call   402250 <rb_dictionary_foreach_start@plt>
  40cfef:	lea    rax,[rip+0xe1a2]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40cff6:	mov    rdi,QWORD PTR [rax]
  40cff9:	lea    rsi,[rbp-0x40]
  40cffd:	call   402140 <rb_dictionary_foreach_cur@plt>
  40d002:	mov    QWORD PTR [rbp-0x20],rax
  40d006:	cmp    rax,0x0
  40d00a:	je     40d109 <rb_strcasecmp@plt+0xabb9>
  40d010:	lea    rax,[rip+0x9e39]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d017:	mov    rdi,QWORD PTR [rbp-0x20]
  40d01b:	mov    esi,DWORD PTR [rax+0x18]
  40d01e:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40d023:	mov    QWORD PTR [rbp-0x50],rax
  40d027:	cmp    QWORD PTR [rbp-0x50],0x0
  40d02c:	jne    40d037 <rb_strcasecmp@plt+0xaae7>
  40d032:	jmp    40d0f1 <rb_strcasecmp@plt+0xaba1>
  40d037:	mov    rdi,QWORD PTR [rbp-0x20]
  40d03b:	call   40e7f0 <rb_strcasecmp@plt+0xc2a0>
  40d040:	mov    rdi,QWORD PTR [rbp-0x50]
  40d044:	mov    rdi,QWORD PTR [rdi]
  40d047:	mov    QWORD PTR [rbp-0x48],rdi
  40d04b:	cmp    QWORD PTR [rbp-0x48],0x0
  40d050:	je     40d0e8 <rb_strcasecmp@plt+0xab98>
  40d056:	mov    rax,QWORD PTR [rbp-0x48]
  40d05a:	mov    rax,QWORD PTR [rax]
  40d05d:	mov    QWORD PTR [rbp-0x58],rax
  40d061:	mov    rax,QWORD PTR [rbp-0x58]
  40d065:	mov    rax,QWORD PTR [rax+0x10]
  40d069:	movzx  ecx,WORD PTR [rax+0x14]
  40d06d:	mov    rax,QWORD PTR [rbp-0x28]
  40d071:	movzx  edx,WORD PTR [rax+0x14]
  40d075:	cmp    ecx,edx
  40d077:	jne    40d0d2 <rb_strcasecmp@plt+0xab82>
  40d07d:	mov    rax,QWORD PTR [rbp-0x58]
  40d081:	mov    rax,QWORD PTR [rax+0x10]
  40d085:	mov    ecx,DWORD PTR [rax+0x10]
  40d088:	mov    rax,QWORD PTR [rbp-0x28]
  40d08c:	cmp    ecx,DWORD PTR [rax+0x10]
  40d08f:	jne    40d0d2 <rb_strcasecmp@plt+0xab82>
  40d095:	mov    rax,QWORD PTR [rbp-0x58]
  40d099:	add    rax,0x20
  40d09d:	mov    rsi,QWORD PTR [rbp-0x50]
  40d0a1:	mov    rdi,rax
  40d0a4:	call   40e810 <rb_strcasecmp@plt+0xc2c0>
  40d0a9:	mov    rax,QWORD PTR [rbp-0x58]
  40d0ad:	mov    rdi,rax
  40d0b0:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40d0b5:	mov    rax,QWORD PTR [rbp-0x50]
  40d0b9:	cmp    QWORD PTR [rax+0x10],0x0
  40d0be:	jne    40d0cd <rb_strcasecmp@plt+0xab7d>
  40d0c4:	mov    rdi,QWORD PTR [rbp-0x20]
  40d0c8:	call   40d3c0 <rb_strcasecmp@plt+0xae70>
  40d0cd:	jmp    40d0e8 <rb_strcasecmp@plt+0xab98>
  40d0d2:	jmp    40d0d7 <rb_strcasecmp@plt+0xab87>
  40d0d7:	mov    rax,QWORD PTR [rbp-0x48]
  40d0db:	mov    rax,QWORD PTR [rax+0x10]
  40d0df:	mov    QWORD PTR [rbp-0x48],rax
  40d0e3:	jmp    40d04b <rb_strcasecmp@plt+0xaafb>
  40d0e8:	mov    rdi,QWORD PTR [rbp-0x20]
  40d0ec:	call   40e920 <rb_strcasecmp@plt+0xc3d0>
  40d0f1:	lea    rax,[rip+0xe0a0]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d0f8:	mov    rdi,QWORD PTR [rax]
  40d0fb:	lea    rsi,[rbp-0x40]
  40d0ff:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40d104:	jmp    40cfef <rb_strcasecmp@plt+0xaa9f>
  40d109:	mov    rax,QWORD PTR [rbp-0x28]
  40d10d:	add    rax,0x20
  40d111:	mov    rdi,rax
  40d114:	lea    rsi,[rip+0xe05d]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40d11b:	call   40e810 <rb_strcasecmp@plt+0xc2c0>
  40d120:	mov    rax,QWORD PTR [rbp-0x28]
  40d124:	mov    rdi,rax
  40d127:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40d12c:	cmp    QWORD PTR [rip+0xe054],0x0        # 41b188 <rb_strcasecmp@plt+0x18c38>
  40d134:	jne    40d141 <rb_strcasecmp@plt+0xabf1>
  40d13a:	mov    BYTE PTR [rip+0xe02f],0x0        # 41b170 <rb_strcasecmp@plt+0x18c20>
  40d141:	add    rsp,0x60
  40d145:	pop    rbp
  40d146:	ret    
  40d147:	nop    WORD PTR [rax+rax*1+0x0]
  40d150:	push   rbp
  40d151:	mov    rbp,rsp
  40d154:	sub    rsp,0x50
  40d158:	mov    QWORD PTR [rbp-0x8],rdi
  40d15c:	mov    DWORD PTR [rbp-0xc],esi
  40d15f:	mov    QWORD PTR [rbp-0x18],rdx
  40d163:	mov    rdx,QWORD PTR [rip+0xe00e]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40d16a:	mov    QWORD PTR [rbp-0x28],rdx
  40d16e:	cmp    QWORD PTR [rbp-0x28],0x0
  40d173:	je     40d18a <rb_strcasecmp@plt+0xac3a>
  40d179:	mov    rax,QWORD PTR [rbp-0x28]
  40d17d:	mov    rax,QWORD PTR [rax+0x10]
  40d181:	mov    QWORD PTR [rbp-0x48],rax
  40d185:	jmp    40d197 <rb_strcasecmp@plt+0xac47>
  40d18a:	xor    eax,eax
  40d18c:	mov    ecx,eax
  40d18e:	mov    QWORD PTR [rbp-0x48],rcx
  40d192:	jmp    40d197 <rb_strcasecmp@plt+0xac47>
  40d197:	mov    rax,QWORD PTR [rbp-0x48]
  40d19b:	mov    QWORD PTR [rbp-0x30],rax
  40d19f:	cmp    QWORD PTR [rbp-0x28],0x0
  40d1a4:	je     40d204 <rb_strcasecmp@plt+0xacb4>
  40d1aa:	mov    rax,QWORD PTR [rbp-0x28]
  40d1ae:	mov    rdi,QWORD PTR [rax]
  40d1b1:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40d1b6:	mov    rdi,QWORD PTR [rbp-0x28]
  40d1ba:	lea    rsi,[rip+0xdfb7]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40d1c1:	call   40e810 <rb_strcasecmp@plt+0xc2c0>
  40d1c6:	mov    rax,QWORD PTR [rbp-0x30]
  40d1ca:	mov    QWORD PTR [rbp-0x28],rax
  40d1ce:	cmp    QWORD PTR [rbp-0x28],0x0
  40d1d3:	je     40d1ea <rb_strcasecmp@plt+0xac9a>
  40d1d9:	mov    rax,QWORD PTR [rbp-0x28]
  40d1dd:	mov    rax,QWORD PTR [rax+0x10]
  40d1e1:	mov    QWORD PTR [rbp-0x50],rax
  40d1e5:	jmp    40d1f7 <rb_strcasecmp@plt+0xaca7>
  40d1ea:	xor    eax,eax
  40d1ec:	mov    ecx,eax
  40d1ee:	mov    QWORD PTR [rbp-0x50],rcx
  40d1f2:	jmp    40d1f7 <rb_strcasecmp@plt+0xaca7>
  40d1f7:	mov    rax,QWORD PTR [rbp-0x50]
  40d1fb:	mov    QWORD PTR [rbp-0x30],rax
  40d1ff:	jmp    40d19f <rb_strcasecmp@plt+0xac4f>
  40d204:	lea    rax,[rip+0xdf8d]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d20b:	mov    rdi,QWORD PTR [rax]
  40d20e:	lea    rsi,[rbp-0x40]
  40d212:	call   402250 <rb_dictionary_foreach_start@plt>
  40d217:	lea    rax,[rip+0xdf7a]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d21e:	mov    rdi,QWORD PTR [rax]
  40d221:	lea    rsi,[rbp-0x40]
  40d225:	call   402140 <rb_dictionary_foreach_cur@plt>
  40d22a:	mov    QWORD PTR [rbp-0x20],rax
  40d22e:	cmp    rax,0x0
  40d232:	je     40d259 <rb_strcasecmp@plt+0xad09>
  40d238:	mov    rdi,QWORD PTR [rbp-0x20]
  40d23c:	call   40d3c0 <rb_strcasecmp@plt+0xae70>
  40d241:	lea    rax,[rip+0xdf50]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d248:	mov    rdi,QWORD PTR [rax]
  40d24b:	lea    rsi,[rbp-0x40]
  40d24f:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40d254:	jmp    40d217 <rb_strcasecmp@plt+0xacc7>
  40d259:	mov    BYTE PTR [rip+0xdf10],0x0        # 41b170 <rb_strcasecmp@plt+0x18c20>
  40d260:	add    rsp,0x50
  40d264:	pop    rbp
  40d265:	ret    
  40d266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d270:	push   rbp
  40d271:	mov    rbp,rsp
  40d274:	sub    rsp,0x20
  40d278:	lea    rax,[rip+0xdf19]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d27f:	mov    rdi,QWORD PTR [rax]
  40d282:	lea    rsi,[rbp-0x18]
  40d286:	call   402250 <rb_dictionary_foreach_start@plt>
  40d28b:	lea    rax,[rip+0xdf06]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d292:	mov    rdi,QWORD PTR [rax]
  40d295:	lea    rsi,[rbp-0x18]
  40d299:	call   402140 <rb_dictionary_foreach_cur@plt>
  40d29e:	mov    QWORD PTR [rbp-0x8],rax
  40d2a2:	cmp    rax,0x0
  40d2a6:	je     40d2cd <rb_strcasecmp@plt+0xad7d>
  40d2ac:	mov    rdi,QWORD PTR [rbp-0x8]
  40d2b0:	call   40d3c0 <rb_strcasecmp@plt+0xae70>
  40d2b5:	lea    rax,[rip+0xdedc]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40d2bc:	mov    rdi,QWORD PTR [rax]
  40d2bf:	lea    rsi,[rbp-0x18]
  40d2c3:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40d2c8:	jmp    40d28b <rb_strcasecmp@plt+0xad3b>
  40d2cd:	add    rsp,0x20
  40d2d1:	pop    rbp
  40d2d2:	ret    
  40d2d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2dd:	nop    DWORD PTR [rax]
  40d2e0:	push   rbp
  40d2e1:	mov    rbp,rsp
  40d2e4:	sub    rsp,0x20
  40d2e8:	mov    QWORD PTR [rbp-0x10],rdi
  40d2ec:	test   BYTE PTR [rip+0xde7d],0x1        # 41b170 <rb_strcasecmp@plt+0x18c20>
  40d2f3:	je     40d307 <rb_strcasecmp@plt+0xadb7>
  40d2f9:	cmp    QWORD PTR [rip+0xde87],0x0        # 41b188 <rb_strcasecmp@plt+0x18c38>
  40d301:	jne    40d323 <rb_strcasecmp@plt+0xadd3>
  40d307:	lea    rax,[rip+0x9b42]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d30e:	mov    rdi,QWORD PTR [rbp-0x10]
  40d312:	mov    esi,DWORD PTR [rax+0x18]
  40d315:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40d31a:	mov    BYTE PTR [rbp-0x1],0x1
  40d31e:	jmp    40d3a3 <rb_strcasecmp@plt+0xae53>
  40d323:	mov    rdi,QWORD PTR [rbp-0x10]
  40d327:	call   40e7f0 <rb_strcasecmp@plt+0xc2a0>
  40d32c:	mov    eax,0x20
  40d331:	mov    edi,eax
  40d333:	lea    rcx,[rip+0x9b16]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d33a:	mov    rdx,QWORD PTR [rbp-0x10]
  40d33e:	mov    esi,DWORD PTR [rcx+0x18]
  40d341:	mov    DWORD PTR [rbp-0x14],esi
  40d344:	mov    QWORD PTR [rbp-0x20],rdx
  40d348:	call   40e150 <rb_strcasecmp@plt+0xbc00>
  40d34d:	mov    rdi,QWORD PTR [rbp-0x20]
  40d351:	mov    esi,DWORD PTR [rbp-0x14]
  40d354:	mov    rdx,rax
  40d357:	call   40e960 <rb_strcasecmp@plt+0xc410>
  40d35c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d360:	lea    rsi,[rip+0x37c1]        # 410b28 <rb_strcasecmp@plt+0xe5d8>
  40d367:	call   40e990 <rb_strcasecmp@plt+0xc440>
  40d36c:	test   al,0x1
  40d36e:	jne    40d379 <rb_strcasecmp@plt+0xae29>
  40d374:	jmp    40d39f <rb_strcasecmp@plt+0xae4f>
  40d379:	mov    rdi,QWORD PTR [rbp-0x10]
  40d37d:	lea    rsi,[rip+0x3984]        # 410d08 <rb_strcasecmp@plt+0xe7b8>
  40d384:	call   40e990 <rb_strcasecmp@plt+0xc440>
  40d389:	test   al,0x1
  40d38b:	jne    40d396 <rb_strcasecmp@plt+0xae46>
  40d391:	jmp    40d39f <rb_strcasecmp@plt+0xae4f>
  40d396:	mov    rdi,QWORD PTR [rbp-0x10]
  40d39a:	call   40e9f0 <rb_strcasecmp@plt+0xc4a0>
  40d39f:	mov    BYTE PTR [rbp-0x1],0x1
  40d3a3:	mov    al,BYTE PTR [rbp-0x1]
  40d3a6:	and    al,0x1
  40d3a8:	movzx  eax,al
  40d3ab:	add    rsp,0x20
  40d3af:	pop    rbp
  40d3b0:	ret    
  40d3b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d3c0:	push   rbp
  40d3c1:	mov    rbp,rsp
  40d3c4:	sub    rsp,0x40
  40d3c8:	lea    rax,[rip+0x9a81]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d3cf:	mov    QWORD PTR [rbp-0x8],rdi
  40d3d3:	mov    rdi,QWORD PTR [rbp-0x8]
  40d3d7:	mov    esi,DWORD PTR [rax+0x18]
  40d3da:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40d3df:	mov    QWORD PTR [rbp-0x10],rax
  40d3e3:	cmp    QWORD PTR [rbp-0x10],0x0
  40d3e8:	je     40d501 <rb_strcasecmp@plt+0xafb1>
  40d3ee:	mov    rax,QWORD PTR [rbp-0x8]
  40d3f2:	mov    edi,DWORD PTR [rax]
  40d3f4:	lea    rsi,[rip+0x3da5]        # 4111a0 <rb_strcasecmp@plt+0xec50>
  40d3fb:	mov    al,0x0
  40d3fd:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40d402:	mov    rsi,QWORD PTR [rbp-0x10]
  40d406:	mov    rsi,QWORD PTR [rsi]
  40d409:	mov    QWORD PTR [rbp-0x18],rsi
  40d40d:	cmp    QWORD PTR [rbp-0x18],0x0
  40d412:	je     40d429 <rb_strcasecmp@plt+0xaed9>
  40d418:	mov    rax,QWORD PTR [rbp-0x18]
  40d41c:	mov    rax,QWORD PTR [rax+0x10]
  40d420:	mov    QWORD PTR [rbp-0x30],rax
  40d424:	jmp    40d436 <rb_strcasecmp@plt+0xaee6>
  40d429:	xor    eax,eax
  40d42b:	mov    ecx,eax
  40d42d:	mov    QWORD PTR [rbp-0x30],rcx
  40d431:	jmp    40d436 <rb_strcasecmp@plt+0xaee6>
  40d436:	mov    rax,QWORD PTR [rbp-0x30]
  40d43a:	mov    QWORD PTR [rbp-0x20],rax
  40d43e:	cmp    QWORD PTR [rbp-0x18],0x0
  40d443:	je     40d4ab <rb_strcasecmp@plt+0xaf5b>
  40d449:	mov    rax,QWORD PTR [rbp-0x18]
  40d44d:	mov    rax,QWORD PTR [rax]
  40d450:	mov    QWORD PTR [rbp-0x28],rax
  40d454:	mov    rax,QWORD PTR [rbp-0x28]
  40d458:	mov    rdi,QWORD PTR [rax+0x8]
  40d45c:	call   402300 <rb_close@plt>
  40d461:	mov    rax,QWORD PTR [rbp-0x28]
  40d465:	mov    rdi,rax
  40d468:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40d46d:	mov    rax,QWORD PTR [rbp-0x20]
  40d471:	mov    QWORD PTR [rbp-0x18],rax
  40d475:	cmp    QWORD PTR [rbp-0x18],0x0
  40d47a:	je     40d491 <rb_strcasecmp@plt+0xaf41>
  40d480:	mov    rax,QWORD PTR [rbp-0x18]
  40d484:	mov    rax,QWORD PTR [rax+0x10]
  40d488:	mov    QWORD PTR [rbp-0x38],rax
  40d48c:	jmp    40d49e <rb_strcasecmp@plt+0xaf4e>
  40d491:	xor    eax,eax
  40d493:	mov    ecx,eax
  40d495:	mov    QWORD PTR [rbp-0x38],rcx
  40d499:	jmp    40d49e <rb_strcasecmp@plt+0xaf4e>
  40d49e:	mov    rax,QWORD PTR [rbp-0x38]
  40d4a2:	mov    QWORD PTR [rbp-0x20],rax
  40d4a6:	jmp    40d43e <rb_strcasecmp@plt+0xaeee>
  40d4ab:	mov    rax,QWORD PTR [rbp-0x10]
  40d4af:	mov    rdi,rax
  40d4b2:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40d4b7:	xor    ecx,ecx
  40d4b9:	mov    edx,ecx
  40d4bb:	lea    rax,[rip+0x998e]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d4c2:	mov    rdi,QWORD PTR [rbp-0x8]
  40d4c6:	mov    esi,DWORD PTR [rax+0x18]
  40d4c9:	call   40e960 <rb_strcasecmp@plt+0xc410>
  40d4ce:	xor    ecx,ecx
  40d4d0:	mov    edx,ecx
  40d4d2:	lea    rax,[rip+0x9977]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d4d9:	mov    rdi,QWORD PTR [rbp-0x8]
  40d4dd:	mov    esi,DWORD PTR [rax+0x18]
  40d4e0:	call   40f030 <rb_strcasecmp@plt+0xcae0>
  40d4e5:	lea    rax,[rip+0x9964]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d4ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40d4f0:	mov    esi,DWORD PTR [rax+0x18]
  40d4f3:	call   404b20 <rb_strcasecmp@plt+0x25d0>
  40d4f8:	mov    rdi,QWORD PTR [rbp-0x8]
  40d4fc:	call   40e920 <rb_strcasecmp@plt+0xc3d0>
  40d501:	add    rsp,0x40
  40d505:	pop    rbp
  40d506:	ret    
  40d507:	nop    WORD PTR [rax+rax*1+0x0]
  40d510:	push   rbp
  40d511:	mov    rbp,rsp
  40d514:	sub    rsp,0x20
  40d518:	lea    rax,[rip+0x9931]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40d51f:	mov    QWORD PTR [rbp-0x8],rdi
  40d523:	mov    DWORD PTR [rbp-0xc],esi
  40d526:	mov    rdi,QWORD PTR [rbp-0x8]
  40d52a:	mov    esi,DWORD PTR [rax+0x18]
  40d52d:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40d532:	mov    QWORD PTR [rbp-0x18],rax
  40d536:	cmp    QWORD PTR [rbp-0x18],0x0
  40d53b:	je     40d54f <rb_strcasecmp@plt+0xafff>
  40d541:	mov    rax,QWORD PTR [rbp-0x18]
  40d545:	test   BYTE PTR [rax+0x18],0x1
  40d549:	je     40d554 <rb_strcasecmp@plt+0xb004>
  40d54f:	jmp    40d59c <rb_strcasecmp@plt+0xb04c>
  40d554:	mov    rdi,QWORD PTR [rbp-0x8]
  40d558:	lea    rsi,[rip+0x35c9]        # 410b28 <rb_strcasecmp@plt+0xe5d8>
  40d55f:	call   40e990 <rb_strcasecmp@plt+0xc440>
  40d564:	test   al,0x1
  40d566:	jne    40d571 <rb_strcasecmp@plt+0xb021>
  40d56c:	jmp    40d597 <rb_strcasecmp@plt+0xb047>
  40d571:	mov    rdi,QWORD PTR [rbp-0x8]
  40d575:	lea    rsi,[rip+0x378c]        # 410d08 <rb_strcasecmp@plt+0xe7b8>
  40d57c:	call   40e990 <rb_strcasecmp@plt+0xc440>
  40d581:	test   al,0x1
  40d583:	jne    40d58e <rb_strcasecmp@plt+0xb03e>
  40d589:	jmp    40d597 <rb_strcasecmp@plt+0xb047>
  40d58e:	mov    rdi,QWORD PTR [rbp-0x8]
  40d592:	call   40e9f0 <rb_strcasecmp@plt+0xc4a0>
  40d597:	jmp    40d59c <rb_strcasecmp@plt+0xb04c>
  40d59c:	add    rsp,0x20
  40d5a0:	pop    rbp
  40d5a1:	ret    
  40d5a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5ac:	nop    DWORD PTR [rax+0x0]
  40d5b0:	push   rbp
  40d5b1:	mov    rbp,rsp
  40d5b4:	sub    rsp,0x140
  40d5bb:	mov    ax,si
  40d5be:	mov    QWORD PTR [rbp-0x10],rdi
  40d5c2:	mov    WORD PTR [rbp-0x12],ax
  40d5c6:	mov    DWORD PTR [rbp-0xc4],0x1
  40d5d0:	mov    rdi,QWORD PTR [rbp-0x10]
  40d5d4:	lea    rsi,[rbp-0xa8]
  40d5db:	call   402280 <rb_inet_pton_sock@plt>
  40d5e0:	cmp    eax,0x0
  40d5e3:	jne    40d60e <rb_strcasecmp@plt+0xb0be>
  40d5e9:	mov    rdx,QWORD PTR [rbp-0x10]
  40d5ed:	movzx  ecx,WORD PTR [rbp-0x12]
  40d5f1:	mov    edi,0x43
  40d5f6:	lea    rsi,[rip+0x38a9]        # 410ea6 <rb_strcasecmp@plt+0xe956>
  40d5fd:	mov    al,0x0
  40d5ff:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40d604:	mov    edi,0x3
  40d609:	call   4020e0 <exit@plt>
  40d60e:	jmp    40d613 <rb_strcasecmp@plt+0xb0c3>
  40d613:	movzx  eax,WORD PTR [rbp-0xa8]
  40d61a:	cmp    eax,0x2
  40d61d:	jne    40d638 <rb_strcasecmp@plt+0xb0e8>
  40d623:	movzx  edi,WORD PTR [rbp-0x12]
  40d627:	call   4020d0 <htons@plt>
  40d62c:	mov    WORD PTR [rbp-0xa6],ax
  40d633:	jmp    40d648 <rb_strcasecmp@plt+0xb0f8>
  40d638:	movzx  edi,WORD PTR [rbp-0x12]
  40d63c:	call   4020d0 <htons@plt>
  40d641:	mov    WORD PTR [rbp-0xa6],ax
  40d648:	jmp    40d64d <rb_strcasecmp@plt+0xb0fd>
  40d64d:	movzx  eax,WORD PTR [rbp-0xa8]
  40d654:	cmp    eax,0xa
  40d657:	jne    40d7f6 <rb_strcasecmp@plt+0xb2a6>
  40d65d:	xor    eax,eax
  40d65f:	mov    cl,al
  40d661:	lea    rdx,[rip+0xd988]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40d668:	add    rdx,0xc0
  40d66f:	mov    QWORD PTR [rbp-0x28],rdx
  40d673:	lea    rdx,[rbp-0xa8]
  40d67a:	mov    QWORD PTR [rbp-0xd0],rdx
  40d681:	mov    rdx,QWORD PTR [rbp-0x28]
  40d685:	add    rdx,0x38
  40d689:	mov    QWORD PTR [rbp-0xd8],rdx
  40d690:	mov    rdx,QWORD PTR [rbp-0xd0]
  40d697:	add    rdx,0x8
  40d69b:	mov    QWORD PTR [rbp-0xe0],rdx
  40d6a2:	mov    rdx,QWORD PTR [rbp-0xd8]
  40d6a9:	add    rdx,0x8
  40d6ad:	mov    QWORD PTR [rbp-0xe8],rdx
  40d6b4:	mov    rdx,QWORD PTR [rbp-0xe0]
  40d6bb:	mov    eax,DWORD PTR [rdx]
  40d6bd:	mov    rdx,QWORD PTR [rbp-0xe8]
  40d6c4:	cmp    eax,DWORD PTR [rdx]
  40d6c6:	mov    BYTE PTR [rbp-0x101],cl
  40d6cc:	jne    40d737 <rb_strcasecmp@plt+0xb1e7>
  40d6d2:	xor    eax,eax
  40d6d4:	mov    cl,al
  40d6d6:	mov    rdx,QWORD PTR [rbp-0xe0]
  40d6dd:	mov    eax,DWORD PTR [rdx+0x4]
  40d6e0:	mov    rdx,QWORD PTR [rbp-0xe8]
  40d6e7:	cmp    eax,DWORD PTR [rdx+0x4]
  40d6ea:	mov    BYTE PTR [rbp-0x101],cl
  40d6f0:	jne    40d737 <rb_strcasecmp@plt+0xb1e7>
  40d6f6:	xor    eax,eax
  40d6f8:	mov    cl,al
  40d6fa:	mov    rdx,QWORD PTR [rbp-0xe0]
  40d701:	mov    eax,DWORD PTR [rdx+0x8]
  40d704:	mov    rdx,QWORD PTR [rbp-0xe8]
  40d70b:	cmp    eax,DWORD PTR [rdx+0x8]
  40d70e:	mov    BYTE PTR [rbp-0x101],cl
  40d714:	jne    40d737 <rb_strcasecmp@plt+0xb1e7>
  40d71a:	mov    rax,QWORD PTR [rbp-0xe0]
  40d721:	mov    ecx,DWORD PTR [rax+0xc]
  40d724:	mov    rax,QWORD PTR [rbp-0xe8]
  40d72b:	cmp    ecx,DWORD PTR [rax+0xc]
  40d72e:	sete   dl
  40d731:	mov    BYTE PTR [rbp-0x101],dl
  40d737:	mov    al,BYTE PTR [rbp-0x101]
  40d73d:	and    al,0x1
  40d73f:	movzx  ecx,al
  40d742:	mov    DWORD PTR [rbp-0xec],ecx
  40d748:	cmp    DWORD PTR [rbp-0xec],0x0
  40d74f:	je     40d7f1 <rb_strcasecmp@plt+0xb2a1>
  40d755:	movzx  eax,WORD PTR [rbp-0xa8]
  40d75c:	cmp    eax,0x2
  40d75f:	jne    40d777 <rb_strcasecmp@plt+0xb227>
  40d765:	movzx  eax,WORD PTR [rbp-0xa6]
  40d76c:	mov    DWORD PTR [rbp-0x108],eax
  40d772:	jmp    40d784 <rb_strcasecmp@plt+0xb234>
  40d777:	movzx  eax,WORD PTR [rbp-0xa6]
  40d77e:	mov    DWORD PTR [rbp-0x108],eax
  40d784:	mov    eax,DWORD PTR [rbp-0x108]
  40d78a:	mov    rcx,QWORD PTR [rbp-0x28]
  40d78e:	movzx  edx,WORD PTR [rcx+0x38]
  40d792:	cmp    edx,0x2
  40d795:	mov    DWORD PTR [rbp-0x10c],eax
  40d79b:	jne    40d7b4 <rb_strcasecmp@plt+0xb264>
  40d7a1:	mov    rax,QWORD PTR [rbp-0x28]
  40d7a5:	movzx  ecx,WORD PTR [rax+0x3a]
  40d7a9:	mov    DWORD PTR [rbp-0x110],ecx
  40d7af:	jmp    40d7c2 <rb_strcasecmp@plt+0xb272>
  40d7b4:	mov    rax,QWORD PTR [rbp-0x28]
  40d7b8:	movzx  ecx,WORD PTR [rax+0x3a]
  40d7bc:	mov    DWORD PTR [rbp-0x110],ecx
  40d7c2:	mov    eax,DWORD PTR [rbp-0x110]
  40d7c8:	mov    ecx,DWORD PTR [rbp-0x10c]
  40d7ce:	cmp    ecx,eax
  40d7d0:	jne    40d7f1 <rb_strcasecmp@plt+0xb2a1>
  40d7d6:	mov    rax,QWORD PTR [rbp-0x28]
  40d7da:	cmp    QWORD PTR [rax+0xb8],0x0
  40d7e2:	je     40d7f1 <rb_strcasecmp@plt+0xb2a1>
  40d7e8:	mov    BYTE PTR [rbp-0x1],0x0
  40d7ec:	jmp    40db7e <rb_strcasecmp@plt+0xb62e>
  40d7f1:	jmp    40d8d9 <rb_strcasecmp@plt+0xb389>
  40d7f6:	lea    rax,[rip+0xd7f3]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40d7fd:	mov    QWORD PTR [rbp-0x28],rax
  40d801:	lea    rax,[rbp-0xa8]
  40d808:	mov    QWORD PTR [rbp-0xf8],rax
  40d80f:	mov    rax,QWORD PTR [rbp-0x28]
  40d813:	add    rax,0x38
  40d817:	mov    QWORD PTR [rbp-0x100],rax
  40d81e:	mov    rax,QWORD PTR [rbp-0xf8]
  40d825:	mov    ecx,DWORD PTR [rax+0x4]
  40d828:	mov    rax,QWORD PTR [rbp-0x100]
  40d82f:	cmp    ecx,DWORD PTR [rax+0x4]
  40d832:	jne    40d8d4 <rb_strcasecmp@plt+0xb384>
  40d838:	movzx  eax,WORD PTR [rbp-0xa8]
  40d83f:	cmp    eax,0x2
  40d842:	jne    40d85a <rb_strcasecmp@plt+0xb30a>
  40d848:	movzx  eax,WORD PTR [rbp-0xa6]
  40d84f:	mov    DWORD PTR [rbp-0x114],eax
  40d855:	jmp    40d867 <rb_strcasecmp@plt+0xb317>
  40d85a:	movzx  eax,WORD PTR [rbp-0xa6]
  40d861:	mov    DWORD PTR [rbp-0x114],eax
  40d867:	mov    eax,DWORD PTR [rbp-0x114]
  40d86d:	mov    rcx,QWORD PTR [rbp-0x28]
  40d871:	movzx  edx,WORD PTR [rcx+0x38]
  40d875:	cmp    edx,0x2
  40d878:	mov    DWORD PTR [rbp-0x118],eax
  40d87e:	jne    40d897 <rb_strcasecmp@plt+0xb347>
  40d884:	mov    rax,QWORD PTR [rbp-0x28]
  40d888:	movzx  ecx,WORD PTR [rax+0x3a]
  40d88c:	mov    DWORD PTR [rbp-0x11c],ecx
  40d892:	jmp    40d8a5 <rb_strcasecmp@plt+0xb355>
  40d897:	mov    rax,QWORD PTR [rbp-0x28]
  40d89b:	movzx  ecx,WORD PTR [rax+0x3a]
  40d89f:	mov    DWORD PTR [rbp-0x11c],ecx
  40d8a5:	mov    eax,DWORD PTR [rbp-0x11c]
  40d8ab:	mov    ecx,DWORD PTR [rbp-0x118]
  40d8b1:	cmp    ecx,eax
  40d8b3:	jne    40d8d4 <rb_strcasecmp@plt+0xb384>
  40d8b9:	mov    rax,QWORD PTR [rbp-0x28]
  40d8bd:	cmp    QWORD PTR [rax+0xb8],0x0
  40d8c5:	je     40d8d4 <rb_strcasecmp@plt+0xb384>
  40d8cb:	mov    BYTE PTR [rbp-0x1],0x0
  40d8cf:	jmp    40db7e <rb_strcasecmp@plt+0xb62e>
  40d8d4:	jmp    40d8d9 <rb_strcasecmp@plt+0xb389>
  40d8d9:	xor    edx,edx
  40d8db:	movzx  edi,WORD PTR [rbp-0xa8]
  40d8e2:	mov    esi,0x1
  40d8e7:	lea    rcx,[rip+0x35d8]        # 410ec6 <rb_strcasecmp@plt+0xe976>
  40d8ee:	call   402110 <rb_socket@plt>
  40d8f3:	mov    QWORD PTR [rbp-0xc0],rax
  40d8fa:	cmp    rax,0x0
  40d8fe:	jne    40d930 <rb_strcasecmp@plt+0xb3e0>
  40d904:	call   4023c0 <__errno_location@plt>
  40d909:	mov    edi,DWORD PTR [rax]
  40d90b:	call   4022c0 <strerror@plt>
  40d910:	mov    edi,0x43
  40d915:	lea    rsi,[rip+0x35be]        # 410eda <rb_strcasecmp@plt+0xe98a>
  40d91c:	mov    rdx,rax
  40d91f:	mov    al,0x0
  40d921:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40d926:	mov    edi,0x3
  40d92b:	call   4020e0 <exit@plt>
  40d930:	mov    rdi,QWORD PTR [rbp-0xc0]
  40d937:	call   4020c0 <rb_get_fd@plt>
  40d93c:	lea    rdi,[rbp-0xc4]
  40d943:	mov    QWORD PTR [rbp-0x128],rdi
  40d94a:	mov    edi,eax
  40d94c:	mov    esi,0x1
  40d951:	mov    edx,0x2
  40d956:	mov    rcx,QWORD PTR [rbp-0x128]
  40d95d:	mov    r8d,0x4
  40d963:	call   4021b0 <setsockopt@plt>
  40d968:	cmp    eax,0x0
  40d96b:	je     40d99d <rb_strcasecmp@plt+0xb44d>
  40d971:	call   4023c0 <__errno_location@plt>
  40d976:	mov    edi,DWORD PTR [rax]
  40d978:	call   4022c0 <strerror@plt>
  40d97d:	mov    edi,0x43
  40d982:	lea    rsi,[rip+0x356f]        # 410ef8 <rb_strcasecmp@plt+0xe9a8>
  40d989:	mov    rdx,rax
  40d98c:	mov    al,0x0
  40d98e:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40d993:	mov    edi,0x3
  40d998:	call   4020e0 <exit@plt>
  40d99d:	mov    rdi,QWORD PTR [rbp-0xc0]
  40d9a4:	call   4020c0 <rb_get_fd@plt>
  40d9a9:	mov    ecx,0x1c
  40d9ae:	mov    edi,ecx
  40d9b0:	mov    ecx,0x10
  40d9b5:	mov    edx,ecx
  40d9b7:	lea    rsi,[rbp-0xa8]
  40d9be:	movzx  ecx,WORD PTR [rbp-0xa8]
  40d9c5:	cmp    ecx,0x2
  40d9c8:	cmove  rdi,rdx
  40d9cc:	mov    ecx,edi
  40d9ce:	mov    edi,eax
  40d9d0:	mov    edx,ecx
  40d9d2:	call   402510 <bind@plt>
  40d9d7:	cmp    eax,0x0
  40d9da:	je     40da17 <rb_strcasecmp@plt+0xb4c7>
  40d9e0:	call   4023c0 <__errno_location@plt>
  40d9e5:	mov    edi,DWORD PTR [rax]
  40d9e7:	call   4022c0 <strerror@plt>
  40d9ec:	mov    edi,0x57
  40d9f1:	lea    rsi,[rip+0x3526]        # 410f1e <rb_strcasecmp@plt+0xe9ce>
  40d9f8:	mov    rdx,rax
  40d9fb:	mov    al,0x0
  40d9fd:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40da02:	mov    rdi,QWORD PTR [rbp-0xc0]
  40da09:	call   402300 <rb_close@plt>
  40da0e:	mov    BYTE PTR [rbp-0x1],0x0
  40da12:	jmp    40db7e <rb_strcasecmp@plt+0xb62e>
  40da17:	xor    edx,edx
  40da19:	mov    rdi,QWORD PTR [rbp-0xc0]
  40da20:	mov    esi,0x1000
  40da25:	call   402520 <rb_listen@plt>
  40da2a:	cmp    eax,0x0
  40da2d:	je     40da6a <rb_strcasecmp@plt+0xb51a>
  40da33:	call   4023c0 <__errno_location@plt>
  40da38:	mov    edi,DWORD PTR [rax]
  40da3a:	call   4022c0 <strerror@plt>
  40da3f:	mov    edi,0x57
  40da44:	lea    rsi,[rip+0x34f2]        # 410f3d <rb_strcasecmp@plt+0xe9ed>
  40da4b:	mov    rdx,rax
  40da4e:	mov    al,0x0
  40da50:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40da55:	mov    rdi,QWORD PTR [rbp-0xc0]
  40da5c:	call   402300 <rb_close@plt>
  40da61:	mov    BYTE PTR [rbp-0x1],0x0
  40da65:	jmp    40db7e <rb_strcasecmp@plt+0xb62e>
  40da6a:	mov    rax,QWORD PTR [rbp-0x28]
  40da6e:	cmp    QWORD PTR [rax+0xb8],0x0
  40da76:	je     40da8c <rb_strcasecmp@plt+0xb53c>
  40da7c:	mov    rax,QWORD PTR [rbp-0x28]
  40da80:	mov    rdi,QWORD PTR [rax+0xb8]
  40da87:	call   402300 <rb_close@plt>
  40da8c:	lea    rax,[rip+0xd705]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40da93:	mov    rcx,QWORD PTR [rbp-0xc0]
  40da9a:	mov    rdx,QWORD PTR [rbp-0x28]
  40da9e:	mov    QWORD PTR [rdx+0xb8],rcx
  40daa5:	mov    rdi,QWORD PTR [rax]
  40daa8:	lea    rsi,[rbp-0xb8]
  40daaf:	call   402250 <rb_dictionary_foreach_start@plt>
  40dab4:	lea    rax,[rip+0xd6dd]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40dabb:	mov    rdi,QWORD PTR [rax]
  40dabe:	lea    rsi,[rbp-0xb8]
  40dac5:	call   402140 <rb_dictionary_foreach_cur@plt>
  40daca:	mov    QWORD PTR [rbp-0x20],rax
  40dace:	cmp    rax,0x0
  40dad2:	je     40dafc <rb_strcasecmp@plt+0xb5ac>
  40dad8:	mov    rdi,QWORD PTR [rbp-0x20]
  40dadc:	call   40d3c0 <rb_strcasecmp@plt+0xae70>
  40dae1:	lea    rax,[rip+0xd6b0]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40dae8:	mov    rdi,QWORD PTR [rax]
  40daeb:	lea    rsi,[rbp-0xb8]
  40daf2:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40daf7:	jmp    40dab4 <rb_strcasecmp@plt+0xb564>
  40dafc:	mov    eax,0x35
  40db01:	mov    edx,eax
  40db03:	mov    rdi,QWORD PTR [rbp-0x28]
  40db07:	mov    rsi,QWORD PTR [rbp-0x10]
  40db0b:	call   4021d0 <rb_strlcpy@plt>
  40db10:	xor    ecx,ecx
  40db12:	mov    esi,ecx
  40db14:	mov    ecx,0x80
  40db19:	mov    edx,ecx
  40db1b:	mov    r8w,WORD PTR [rbp-0x12]
  40db20:	mov    rdi,QWORD PTR [rbp-0x28]
  40db24:	mov    WORD PTR [rdi+0x36],r8w
  40db29:	mov    rdi,QWORD PTR [rbp-0x28]
  40db2d:	add    rdi,0x38
  40db31:	lea    r9,[rbp-0xa8]
  40db38:	mov    QWORD PTR [rbp-0x130],rsi
  40db3f:	mov    rsi,r9
  40db42:	mov    QWORD PTR [rbp-0x138],rax
  40db49:	call   402540 <memcpy@plt>
  40db4e:	mov    BYTE PTR [rip+0xd61b],0x1        # 41b170 <rb_strcasecmp@plt+0x18c20>
  40db55:	mov    rax,QWORD PTR [rbp-0x28]
  40db59:	mov    rdi,QWORD PTR [rax+0xb8]
  40db60:	mov    rax,QWORD PTR [rbp-0x28]
  40db64:	mov    rsi,QWORD PTR [rbp-0x130]
  40db6b:	lea    rdx,[rip+0x1e]        # 40db90 <rb_strcasecmp@plt+0xb640>
  40db72:	mov    rcx,rax
  40db75:	call   402460 <rb_accept_tcp@plt>
  40db7a:	mov    BYTE PTR [rbp-0x1],0x1
  40db7e:	mov    al,BYTE PTR [rbp-0x1]
  40db81:	and    al,0x1
  40db83:	movzx  eax,al
  40db86:	add    rsp,0x140
  40db8d:	pop    rbp
  40db8e:	ret    
  40db8f:	nop
  40db90:	push   rbp
  40db91:	mov    rbp,rsp
  40db94:	sub    rsp,0x120
  40db9b:	mov    QWORD PTR [rbp-0x8],rdi
  40db9f:	mov    DWORD PTR [rbp-0xc],esi
  40dba2:	mov    QWORD PTR [rbp-0x18],rdx
  40dba6:	mov    DWORD PTR [rbp-0x1c],ecx
  40dba9:	mov    QWORD PTR [rbp-0x28],r8
  40dbad:	mov    QWORD PTR [rbp-0x30],0x0
  40dbb5:	mov    rdx,QWORD PTR [rbp-0x28]
  40dbb9:	mov    QWORD PTR [rbp-0x38],rdx
  40dbbd:	mov    DWORD PTR [rbp-0xbc],0x80
  40dbc7:	cmp    DWORD PTR [rbp-0xc],0x0
  40dbcb:	jne    40dbdc <rb_strcasecmp@plt+0xb68c>
  40dbd1:	cmp    QWORD PTR [rbp-0x38],0x0
  40dbd6:	jne    40dbea <rb_strcasecmp@plt+0xb69a>
  40dbdc:	mov    rdi,QWORD PTR [rbp-0x8]
  40dbe0:	call   402300 <rb_close@plt>
  40dbe5:	jmp    40de77 <rb_strcasecmp@plt+0xb927>
  40dbea:	mov    rdi,QWORD PTR [rbp-0x8]
  40dbee:	call   4020c0 <rb_get_fd@plt>
  40dbf3:	lea    rdi,[rbp-0xb8]
  40dbfa:	mov    QWORD PTR [rbp-0x110],rdi
  40dc01:	mov    edi,eax
  40dc03:	mov    rsi,QWORD PTR [rbp-0x110]
  40dc0a:	lea    rdx,[rbp-0xbc]
  40dc11:	call   402320 <getsockname@plt>
  40dc16:	cmp    eax,0x0
  40dc19:	je     40dc2d <rb_strcasecmp@plt+0xb6dd>
  40dc1f:	mov    rdi,QWORD PTR [rbp-0x8]
  40dc23:	call   402300 <rb_close@plt>
  40dc28:	jmp    40de77 <rb_strcasecmp@plt+0xb927>
  40dc2d:	lea    rax,[rip+0xd564]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40dc34:	mov    rdi,QWORD PTR [rax]
  40dc37:	lea    rsi,[rbp-0xd0]
  40dc3e:	call   402250 <rb_dictionary_foreach_start@plt>
  40dc43:	lea    rax,[rip+0xd54e]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40dc4a:	mov    rdi,QWORD PTR [rax]
  40dc4d:	lea    rsi,[rbp-0xd0]
  40dc54:	call   402140 <rb_dictionary_foreach_cur@plt>
  40dc59:	mov    QWORD PTR [rbp-0x30],rax
  40dc5d:	cmp    rax,0x0
  40dc61:	je     40de6e <rb_strcasecmp@plt+0xb91e>
  40dc67:	mov    rax,QWORD PTR [rbp-0x30]
  40dc6b:	movzx  ecx,WORD PTR [rax+0xf8]
  40dc72:	movzx  edx,WORD PTR [rbp-0xb8]
  40dc79:	cmp    ecx,edx
  40dc7b:	je     40dc86 <rb_strcasecmp@plt+0xb736>
  40dc81:	jmp    40de53 <rb_strcasecmp@plt+0xb903>
  40dc86:	movzx  eax,WORD PTR [rbp-0xb8]
  40dc8d:	mov    ecx,eax
  40dc8f:	sub    ecx,0x2
  40dc92:	mov    DWORD PTR [rbp-0x114],eax
  40dc98:	mov    DWORD PTR [rbp-0x118],ecx
  40dc9e:	je     40dcc3 <rb_strcasecmp@plt+0xb773>
  40dca4:	jmp    40dca9 <rb_strcasecmp@plt+0xb759>
  40dca9:	mov    eax,DWORD PTR [rbp-0x114]
  40dcaf:	sub    eax,0xa
  40dcb2:	mov    DWORD PTR [rbp-0x11c],eax
  40dcb8:	je     40dd22 <rb_strcasecmp@plt+0xb7d2>
  40dcbe:	jmp    40de31 <rb_strcasecmp@plt+0xb8e1>
  40dcc3:	lea    rax,[rbp-0xb8]
  40dcca:	mov    QWORD PTR [rbp-0xd8],rax
  40dcd1:	mov    rax,QWORD PTR [rbp-0x30]
  40dcd5:	add    rax,0xf8
  40dcdb:	mov    QWORD PTR [rbp-0xe0],rax
  40dce2:	mov    rax,QWORD PTR [rbp-0xd8]
  40dce9:	mov    ecx,DWORD PTR [rax+0x4]
  40dcec:	mov    rax,QWORD PTR [rbp-0xe0]
  40dcf3:	cmp    ecx,DWORD PTR [rax+0x4]
  40dcf6:	jne    40dd1d <rb_strcasecmp@plt+0xb7cd>
  40dcfc:	mov    rdi,QWORD PTR [rbp-0x8]
  40dd00:	mov    rax,QWORD PTR [rbp-0x30]
  40dd04:	mov    esi,0x1
  40dd09:	lea    rdx,[rip+0x170]        # 40de80 <rb_strcasecmp@plt+0xb930>
  40dd10:	mov    rcx,rax
  40dd13:	call   4020b0 <rb_setselect@plt>
  40dd18:	jmp    40de77 <rb_strcasecmp@plt+0xb927>
  40dd1d:	jmp    40de4e <rb_strcasecmp@plt+0xb8fe>
  40dd22:	xor    eax,eax
  40dd24:	mov    cl,al
  40dd26:	lea    rdx,[rbp-0xb8]
  40dd2d:	mov    QWORD PTR [rbp-0xe8],rdx
  40dd34:	mov    rdx,QWORD PTR [rbp-0x30]
  40dd38:	add    rdx,0xf8
  40dd3f:	mov    QWORD PTR [rbp-0xf0],rdx
  40dd46:	mov    rdx,QWORD PTR [rbp-0xe8]
  40dd4d:	add    rdx,0x8
  40dd51:	mov    QWORD PTR [rbp-0xf8],rdx
  40dd58:	mov    rdx,QWORD PTR [rbp-0xf0]
  40dd5f:	add    rdx,0x8
  40dd63:	mov    QWORD PTR [rbp-0x100],rdx
  40dd6a:	mov    rdx,QWORD PTR [rbp-0xf8]
  40dd71:	mov    eax,DWORD PTR [rdx]
  40dd73:	mov    rdx,QWORD PTR [rbp-0x100]
  40dd7a:	cmp    eax,DWORD PTR [rdx]
  40dd7c:	mov    BYTE PTR [rbp-0x11d],cl
  40dd82:	jne    40dded <rb_strcasecmp@plt+0xb89d>
  40dd88:	xor    eax,eax
  40dd8a:	mov    cl,al
  40dd8c:	mov    rdx,QWORD PTR [rbp-0xf8]
  40dd93:	mov    eax,DWORD PTR [rdx+0x4]
  40dd96:	mov    rdx,QWORD PTR [rbp-0x100]
  40dd9d:	cmp    eax,DWORD PTR [rdx+0x4]
  40dda0:	mov    BYTE PTR [rbp-0x11d],cl
  40dda6:	jne    40dded <rb_strcasecmp@plt+0xb89d>
  40ddac:	xor    eax,eax
  40ddae:	mov    cl,al
  40ddb0:	mov    rdx,QWORD PTR [rbp-0xf8]
  40ddb7:	mov    eax,DWORD PTR [rdx+0x8]
  40ddba:	mov    rdx,QWORD PTR [rbp-0x100]
  40ddc1:	cmp    eax,DWORD PTR [rdx+0x8]
  40ddc4:	mov    BYTE PTR [rbp-0x11d],cl
  40ddca:	jne    40dded <rb_strcasecmp@plt+0xb89d>
  40ddd0:	mov    rax,QWORD PTR [rbp-0xf8]
  40ddd7:	mov    ecx,DWORD PTR [rax+0xc]
  40ddda:	mov    rax,QWORD PTR [rbp-0x100]
  40dde1:	cmp    ecx,DWORD PTR [rax+0xc]
  40dde4:	sete   dl
  40dde7:	mov    BYTE PTR [rbp-0x11d],dl
  40dded:	mov    al,BYTE PTR [rbp-0x11d]
  40ddf3:	and    al,0x1
  40ddf5:	movzx  ecx,al
  40ddf8:	mov    DWORD PTR [rbp-0x104],ecx
  40ddfe:	cmp    DWORD PTR [rbp-0x104],0x0
  40de05:	je     40de2c <rb_strcasecmp@plt+0xb8dc>
  40de0b:	mov    rdi,QWORD PTR [rbp-0x8]
  40de0f:	mov    rax,QWORD PTR [rbp-0x30]
  40de13:	mov    esi,0x1
  40de18:	lea    rdx,[rip+0x61]        # 40de80 <rb_strcasecmp@plt+0xb930>
  40de1f:	mov    rcx,rax
  40de22:	call   4020b0 <rb_setselect@plt>
  40de27:	jmp    40de77 <rb_strcasecmp@plt+0xb927>
  40de2c:	jmp    40de4e <rb_strcasecmp@plt+0xb8fe>
  40de31:	mov    edi,0x43
  40de36:	lea    rsi,[rip+0x3121]        # 410f5e <rb_strcasecmp@plt+0xea0e>
  40de3d:	mov    al,0x0
  40de3f:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40de44:	mov    edi,0x3
  40de49:	call   4020e0 <exit@plt>
  40de4e:	jmp    40de53 <rb_strcasecmp@plt+0xb903>
  40de53:	lea    rax,[rip+0xd33e]        # 41b198 <rb_strcasecmp@plt+0x18c48>
  40de5a:	mov    rdi,QWORD PTR [rax]
  40de5d:	lea    rsi,[rbp-0xd0]
  40de64:	call   4021e0 <rb_dictionary_foreach_next@plt>
  40de69:	jmp    40dc43 <rb_strcasecmp@plt+0xb6f3>
  40de6e:	mov    rdi,QWORD PTR [rbp-0x8]
  40de72:	call   402300 <rb_close@plt>
  40de77:	add    rsp,0x120
  40de7e:	pop    rbp
  40de7f:	ret    
  40de80:	push   rbp
  40de81:	mov    rbp,rsp
  40de84:	sub    rsp,0x100
  40de8b:	lea    rax,[rip+0x8fbe]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40de92:	mov    QWORD PTR [rbp-0x8],rdi
  40de96:	mov    QWORD PTR [rbp-0x10],rsi
  40de9a:	mov    rsi,QWORD PTR [rbp-0x10]
  40de9e:	mov    QWORD PTR [rbp-0x20],rsi
  40dea2:	mov    rdi,QWORD PTR [rbp-0x20]
  40dea6:	mov    esi,DWORD PTR [rax+0x18]
  40dea9:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40deae:	lea    rsi,[rbp-0xb0]
  40deb5:	mov    QWORD PTR [rbp-0x28],rax
  40deb9:	mov    rdi,QWORD PTR [rbp-0x8]
  40debd:	mov    edx,0x80
  40dec2:	call   402230 <rb_read@plt>
  40dec7:	mov    QWORD PTR [rbp-0xb8],rax
  40dece:	cmp    rax,0x0
  40ded2:	jge    40df0e <rb_strcasecmp@plt+0xb9be>
  40ded8:	call   4023c0 <__errno_location@plt>
  40dedd:	mov    edi,DWORD PTR [rax]
  40dedf:	call   402060 <rb_ignore_errno@plt>
  40dee4:	cmp    eax,0x0
  40dee7:	je     40df0e <rb_strcasecmp@plt+0xb9be>
  40deed:	mov    rdi,QWORD PTR [rbp-0x8]
  40def1:	mov    rax,QWORD PTR [rbp-0x20]
  40def5:	mov    esi,0x1
  40defa:	lea    rdx,[rip+0xffffffffffffff7f]        # 40de80 <rb_strcasecmp@plt+0xb930>
  40df01:	mov    rcx,rax
  40df04:	call   4020b0 <rb_setselect@plt>
  40df09:	jmp    40e0d5 <rb_strcasecmp@plt+0xbb85>
  40df0e:	cmp    QWORD PTR [rbp-0xb8],0x0
  40df16:	jg     40df2a <rb_strcasecmp@plt+0xb9da>
  40df1c:	mov    rdi,QWORD PTR [rbp-0x8]
  40df20:	call   402300 <rb_close@plt>
  40df25:	jmp    40e0d5 <rb_strcasecmp@plt+0xbb85>
  40df2a:	jmp    40df2f <rb_strcasecmp@plt+0xb9df>
  40df2f:	mov    rax,QWORD PTR [rip+0xd242]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40df36:	mov    QWORD PTR [rbp-0x18],rax
  40df3a:	cmp    QWORD PTR [rbp-0x18],0x0
  40df3f:	je     40e0cc <rb_strcasecmp@plt+0xbb7c>
  40df45:	lea    rsi,[rbp-0xb0]
  40df4c:	mov    rax,QWORD PTR [rbp-0x18]
  40df50:	mov    rax,QWORD PTR [rax]
  40df53:	mov    QWORD PTR [rbp-0xc0],rax
  40df5a:	mov    rdi,QWORD PTR [rbp-0xc0]
  40df61:	mov    rax,QWORD PTR [rbp-0xc0]
  40df68:	mov    QWORD PTR [rbp-0xe0],rdi
  40df6f:	mov    rdi,rax
  40df72:	mov    QWORD PTR [rbp-0xe8],rsi
  40df79:	call   402210 <strlen@plt>
  40df7e:	mov    rdi,QWORD PTR [rbp-0xe0]
  40df85:	mov    rsi,QWORD PTR [rbp-0xe8]
  40df8c:	mov    rdx,rax
  40df8f:	call   402170 <strncmp@plt>
  40df94:	cmp    eax,0x0
  40df97:	jne    40e0b6 <rb_strcasecmp@plt+0xbb66>
  40df9d:	mov    rax,QWORD PTR [rbp-0x28]
  40dfa1:	mov    rax,QWORD PTR [rax]
  40dfa4:	mov    QWORD PTR [rbp-0xc8],rax
  40dfab:	cmp    QWORD PTR [rbp-0xc8],0x0
  40dfb3:	je     40dfd0 <rb_strcasecmp@plt+0xba80>
  40dfb9:	mov    rax,QWORD PTR [rbp-0xc8]
  40dfc0:	mov    rax,QWORD PTR [rax+0x10]
  40dfc4:	mov    QWORD PTR [rbp-0xf0],rax
  40dfcb:	jmp    40dfe0 <rb_strcasecmp@plt+0xba90>
  40dfd0:	xor    eax,eax
  40dfd2:	mov    ecx,eax
  40dfd4:	mov    QWORD PTR [rbp-0xf0],rcx
  40dfdb:	jmp    40dfe0 <rb_strcasecmp@plt+0xba90>
  40dfe0:	mov    rax,QWORD PTR [rbp-0xf0]
  40dfe7:	mov    QWORD PTR [rbp-0xd0],rax
  40dfee:	cmp    QWORD PTR [rbp-0xc8],0x0
  40dff6:	je     40e082 <rb_strcasecmp@plt+0xbb32>
  40dffc:	mov    rax,QWORD PTR [rbp-0xc8]
  40e003:	mov    rax,QWORD PTR [rax]
  40e006:	mov    QWORD PTR [rbp-0xd8],rax
  40e00d:	mov    rax,QWORD PTR [rbp-0xd8]
  40e014:	mov    rdi,QWORD PTR [rax+0x8]
  40e018:	call   402300 <rb_close@plt>
  40e01d:	mov    rax,QWORD PTR [rbp-0xd8]
  40e024:	mov    rdi,rax
  40e027:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40e02c:	mov    rax,QWORD PTR [rbp-0xd0]
  40e033:	mov    QWORD PTR [rbp-0xc8],rax
  40e03a:	cmp    QWORD PTR [rbp-0xc8],0x0
  40e042:	je     40e05f <rb_strcasecmp@plt+0xbb0f>
  40e048:	mov    rax,QWORD PTR [rbp-0xc8]
  40e04f:	mov    rax,QWORD PTR [rax+0x10]
  40e053:	mov    QWORD PTR [rbp-0xf8],rax
  40e05a:	jmp    40e06f <rb_strcasecmp@plt+0xbb1f>
  40e05f:	xor    eax,eax
  40e061:	mov    ecx,eax
  40e063:	mov    QWORD PTR [rbp-0xf8],rcx
  40e06a:	jmp    40e06f <rb_strcasecmp@plt+0xbb1f>
  40e06f:	mov    rax,QWORD PTR [rbp-0xf8]
  40e076:	mov    QWORD PTR [rbp-0xd0],rax
  40e07d:	jmp    40dfee <rb_strcasecmp@plt+0xba9e>
  40e082:	mov    rax,QWORD PTR [rbp-0x28]
  40e086:	mov    rdi,rax
  40e089:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40e08e:	lea    rdx,[rbp-0xb0]
  40e095:	lea    rax,[rip+0x8db4]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40e09c:	mov    rdi,QWORD PTR [rbp-0x20]
  40e0a0:	mov    esi,DWORD PTR [rax+0x18]
  40e0a3:	lea    rcx,[rip+0x2ee1]        # 410f8b <rb_strcasecmp@plt+0xea3b>
  40e0aa:	mov    al,0x0
  40e0ac:	call   404360 <rb_strcasecmp@plt+0x1e10>
  40e0b1:	jmp    40e0cc <rb_strcasecmp@plt+0xbb7c>
  40e0b6:	jmp    40e0bb <rb_strcasecmp@plt+0xbb6b>
  40e0bb:	mov    rax,QWORD PTR [rbp-0x18]
  40e0bf:	mov    rax,QWORD PTR [rax+0x10]
  40e0c3:	mov    QWORD PTR [rbp-0x18],rax
  40e0c7:	jmp    40df3a <rb_strcasecmp@plt+0xb9ea>
  40e0cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40e0d0:	call   402300 <rb_close@plt>
  40e0d5:	add    rsp,0x100
  40e0dc:	pop    rbp
  40e0dd:	ret    
  40e0de:	xchg   ax,ax
  40e0e0:	push   rbp
  40e0e1:	mov    rbp,rsp
  40e0e4:	mov    QWORD PTR [rbp-0x8],rdi
  40e0e8:	mov    DWORD PTR [rbp-0xc],esi
  40e0eb:	mov    rdi,QWORD PTR [rbp-0x8]
  40e0ef:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40e0f6:	mov    esi,DWORD PTR [rbp-0xc]
  40e0f9:	mov    eax,esi
  40e0fb:	shl    rax,0x5
  40e0ff:	add    rdi,rax
  40e102:	mov    rax,QWORD PTR [rdi+0x10]
  40e106:	pop    rbp
  40e107:	ret    
  40e108:	nop    DWORD PTR [rax+rax*1+0x0]
  40e110:	push   rbp
  40e111:	mov    rbp,rsp
  40e114:	sub    rsp,0x10
  40e118:	mov    QWORD PTR [rbp-0x8],rdi
  40e11c:	cmp    QWORD PTR [rbp-0x8],0x0
  40e121:	setne  al
  40e124:	xor    al,0xff
  40e126:	xor    al,0xff
  40e128:	and    al,0x1
  40e12a:	movzx  ecx,al
  40e12d:	movsxd rdi,ecx
  40e130:	cmp    rdi,0x0
  40e134:	je     40e143 <rb_strcasecmp@plt+0xbbf3>
  40e13a:	mov    rdi,QWORD PTR [rbp-0x8]
  40e13e:	call   402200 <free@plt>
  40e143:	add    rsp,0x10
  40e147:	pop    rbp
  40e148:	ret    
  40e149:	nop    DWORD PTR [rax+0x0]
  40e150:	push   rbp
  40e151:	mov    rbp,rsp
  40e154:	sub    rsp,0x10
  40e158:	mov    eax,0x1
  40e15d:	mov    ecx,eax
  40e15f:	mov    QWORD PTR [rbp-0x8],rdi
  40e163:	mov    rsi,QWORD PTR [rbp-0x8]
  40e167:	mov    rdi,rcx
  40e16a:	call   402470 <calloc@plt>
  40e16f:	mov    QWORD PTR [rbp-0x10],rax
  40e173:	cmp    QWORD PTR [rbp-0x10],0x0
  40e178:	sete   dl
  40e17b:	xor    dl,0xff
  40e17e:	xor    dl,0xff
  40e181:	and    dl,0x1
  40e184:	movzx  r8d,dl
  40e188:	movsxd rax,r8d
  40e18b:	cmp    rax,0x0
  40e18f:	je     40e19a <rb_strcasecmp@plt+0xbc4a>
  40e195:	call   4023b0 <rb_outofmemory@plt>
  40e19a:	mov    rax,QWORD PTR [rbp-0x10]
  40e19e:	add    rsp,0x10
  40e1a2:	pop    rbp
  40e1a3:	ret    
  40e1a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1ae:	xchg   ax,ax
  40e1b0:	push   rbp
  40e1b1:	mov    rbp,rsp
  40e1b4:	sub    rsp,0x10
  40e1b8:	mov    QWORD PTR [rbp-0x10],rdi
  40e1bc:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1c0:	lea    rsi,[rip+0x2ead]        # 411074 <rb_strcasecmp@plt+0xeb24>
  40e1c7:	call   402120 <strcasecmp@plt>
  40e1cc:	cmp    eax,0x0
  40e1cf:	jne    40e1e1 <rb_strcasecmp@plt+0xbc91>
  40e1d5:	mov    DWORD PTR [rbp-0x4],0x1
  40e1dc:	jmp    40e257 <rb_strcasecmp@plt+0xbd07>
  40e1e1:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1e5:	lea    rsi,[rip+0x2e8f]        # 41107b <rb_strcasecmp@plt+0xeb2b>
  40e1ec:	call   402120 <strcasecmp@plt>
  40e1f1:	cmp    eax,0x0
  40e1f4:	jne    40e206 <rb_strcasecmp@plt+0xbcb6>
  40e1fa:	mov    DWORD PTR [rbp-0x4],0x2
  40e201:	jmp    40e257 <rb_strcasecmp@plt+0xbd07>
  40e206:	mov    rdi,QWORD PTR [rbp-0x10]
  40e20a:	lea    rsi,[rip+0x2e71]        # 411082 <rb_strcasecmp@plt+0xeb32>
  40e211:	call   402120 <strcasecmp@plt>
  40e216:	cmp    eax,0x0
  40e219:	jne    40e22b <rb_strcasecmp@plt+0xbcdb>
  40e21f:	mov    DWORD PTR [rbp-0x4],0x3
  40e226:	jmp    40e257 <rb_strcasecmp@plt+0xbd07>
  40e22b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e22f:	lea    rsi,[rip+0x2e58]        # 41108e <rb_strcasecmp@plt+0xeb3e>
  40e236:	call   402120 <strcasecmp@plt>
  40e23b:	cmp    eax,0x0
  40e23e:	jne    40e250 <rb_strcasecmp@plt+0xbd00>
  40e244:	mov    DWORD PTR [rbp-0x4],0x4
  40e24b:	jmp    40e257 <rb_strcasecmp@plt+0xbd07>
  40e250:	mov    DWORD PTR [rbp-0x4],0x0
  40e257:	mov    eax,DWORD PTR [rbp-0x4]
  40e25a:	add    rsp,0x10
  40e25e:	pop    rbp
  40e25f:	ret    
  40e260:	push   rbp
  40e261:	mov    rbp,rsp
  40e264:	sub    rsp,0x30
  40e268:	lea    rax,[rbp-0x11]
  40e26c:	mov    QWORD PTR [rbp-0x8],rdi
  40e270:	mov    QWORD PTR [rbp-0x20],rax
  40e274:	mov    rdi,QWORD PTR [rbp-0x20]
  40e278:	mov    cx,WORD PTR [rip+0x2e1c]        # 41109b <rb_strcasecmp@plt+0xeb4b>
  40e27f:	mov    WORD PTR [rdi],cx
  40e282:	mov    rdi,QWORD PTR [rbp-0x20]
  40e286:	add    rdi,0x2
  40e28a:	mov    QWORD PTR [rbp-0x20],rdi
  40e28e:	mov    rdi,QWORD PTR [rbp-0x20]
  40e292:	mov    rdx,QWORD PTR [rbp-0x8]
  40e296:	mov    rdx,QWORD PTR [rdx+0x18]
  40e29a:	mov    cx,WORD PTR [rdx+0x3a]
  40e29e:	mov    WORD PTR [rdi],cx
  40e2a1:	mov    rdx,QWORD PTR [rbp-0x20]
  40e2a5:	add    rdx,0x2
  40e2a9:	mov    QWORD PTR [rbp-0x20],rdx
  40e2ad:	mov    rdx,QWORD PTR [rbp-0x20]
  40e2b1:	mov    rdi,QWORD PTR [rbp-0x8]
  40e2b5:	mov    rdi,QWORD PTR [rdi+0x18]
  40e2b9:	mov    esi,DWORD PTR [rdi+0x3c]
  40e2bc:	mov    DWORD PTR [rdx],esi
  40e2be:	mov    rdx,QWORD PTR [rbp-0x20]
  40e2c2:	add    rdx,0x4
  40e2c6:	mov    QWORD PTR [rbp-0x20],rdx
  40e2ca:	mov    rdx,QWORD PTR [rbp-0x20]
  40e2ce:	mov    BYTE PTR [rdx],0x0
  40e2d1:	mov    rdx,QWORD PTR [rbp-0x8]
  40e2d5:	mov    rdi,QWORD PTR [rdx+0x8]
  40e2d9:	mov    rsi,rax
  40e2dc:	mov    edx,0x9
  40e2e1:	call   4021a0 <rb_write@plt>
  40e2e6:	cmp    rax,0x0
  40e2ea:	jge    40e2f5 <rb_strcasecmp@plt+0xbda5>
  40e2f0:	jmp    40e341 <rb_strcasecmp@plt+0xbdf1>
  40e2f5:	mov    rax,QWORD PTR [rbp-0x8]
  40e2f9:	mov    rdi,QWORD PTR [rax+0x8]
  40e2fd:	mov    rax,QWORD PTR [rbp-0x8]
  40e301:	mov    rsi,QWORD PTR [rax+0x10]
  40e305:	mov    rax,QWORD PTR [rbp-0x8]
  40e309:	mov    rax,QWORD PTR [rax+0x10]
  40e30d:	mov    QWORD PTR [rbp-0x28],rdi
  40e311:	mov    rdi,rax
  40e314:	mov    QWORD PTR [rbp-0x30],rsi
  40e318:	call   402210 <strlen@plt>
  40e31d:	add    rax,0x1
  40e321:	mov    ecx,eax
  40e323:	mov    rdi,QWORD PTR [rbp-0x28]
  40e327:	mov    rsi,QWORD PTR [rbp-0x30]
  40e32b:	mov    edx,ecx
  40e32d:	call   4021a0 <rb_write@plt>
  40e332:	cmp    rax,0x0
  40e336:	jge    40e341 <rb_strcasecmp@plt+0xbdf1>
  40e33c:	jmp    40e341 <rb_strcasecmp@plt+0xbdf1>
  40e341:	add    rsp,0x30
  40e345:	pop    rbp
  40e346:	ret    
  40e347:	nop    WORD PTR [rax+rax*1+0x0]
  40e350:	push   rbp
  40e351:	mov    rbp,rsp
  40e354:	sub    rsp,0x60
  40e358:	mov    QWORD PTR [rbp-0x8],rdi
  40e35c:	mov    rdi,QWORD PTR [rbp-0x8]
  40e360:	mov    rdi,QWORD PTR [rdi]
  40e363:	mov    QWORD PTR [rbp-0x10],rdi
  40e367:	lea    rdi,[rbp-0x30]
  40e36b:	mov    QWORD PTR [rbp-0x38],rdi
  40e36f:	mov    rdi,QWORD PTR [rbp-0x38]
  40e373:	mov    WORD PTR [rdi+0x4],0x1
  40e379:	mov    DWORD PTR [rdi],0x5000105
  40e37f:	mov    rdi,QWORD PTR [rbp-0x38]
  40e383:	add    rdi,0x6
  40e387:	mov    QWORD PTR [rbp-0x38],rdi
  40e38b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e38f:	movzx  eax,WORD PTR [rdi+0xf8]
  40e396:	mov    ecx,eax
  40e398:	sub    ecx,0x2
  40e39b:	mov    DWORD PTR [rbp-0x3c],eax
  40e39e:	mov    DWORD PTR [rbp-0x40],ecx
  40e3a1:	je     40e3c0 <rb_strcasecmp@plt+0xbe70>
  40e3a7:	jmp    40e3ac <rb_strcasecmp@plt+0xbe5c>
  40e3ac:	mov    eax,DWORD PTR [rbp-0x3c]
  40e3af:	sub    eax,0xa
  40e3b2:	mov    DWORD PTR [rbp-0x44],eax
  40e3b5:	je     40e413 <rb_strcasecmp@plt+0xbec3>
  40e3bb:	jmp    40e470 <rb_strcasecmp@plt+0xbf20>
  40e3c0:	mov    rax,QWORD PTR [rbp-0x38]
  40e3c4:	mov    rcx,rax
  40e3c7:	add    rcx,0x1
  40e3cb:	mov    QWORD PTR [rbp-0x38],rcx
  40e3cf:	mov    BYTE PTR [rax],0x1
  40e3d2:	mov    rax,QWORD PTR [rbp-0x38]
  40e3d6:	mov    rcx,QWORD PTR [rbp-0x8]
  40e3da:	mov    rcx,QWORD PTR [rcx+0x18]
  40e3de:	mov    edx,DWORD PTR [rcx+0x3c]
  40e3e1:	mov    DWORD PTR [rax],edx
  40e3e3:	mov    rax,QWORD PTR [rbp-0x38]
  40e3e7:	add    rax,0x4
  40e3eb:	mov    QWORD PTR [rbp-0x38],rax
  40e3ef:	mov    rax,QWORD PTR [rbp-0x38]
  40e3f3:	mov    rcx,QWORD PTR [rbp-0x8]
  40e3f7:	mov    rcx,QWORD PTR [rcx+0x18]
  40e3fb:	mov    si,WORD PTR [rcx+0x3a]
  40e3ff:	mov    WORD PTR [rax],si
  40e402:	mov    rax,QWORD PTR [rbp-0x38]
  40e406:	add    rax,0x2
  40e40a:	mov    QWORD PTR [rbp-0x38],rax
  40e40e:	jmp    40e475 <rb_strcasecmp@plt+0xbf25>
  40e413:	mov    rax,QWORD PTR [rbp-0x38]
  40e417:	mov    rcx,rax
  40e41a:	add    rcx,0x1
  40e41e:	mov    QWORD PTR [rbp-0x38],rcx
  40e422:	mov    BYTE PTR [rax],0x4
  40e425:	mov    rax,QWORD PTR [rbp-0x38]
  40e429:	mov    rcx,QWORD PTR [rbp-0x8]
  40e42d:	mov    rcx,QWORD PTR [rcx+0x18]
  40e431:	mov    rdx,QWORD PTR [rcx+0x40]
  40e435:	mov    QWORD PTR [rax],rdx
  40e438:	mov    rcx,QWORD PTR [rcx+0x48]
  40e43c:	mov    QWORD PTR [rax+0x8],rcx
  40e440:	mov    rax,QWORD PTR [rbp-0x38]
  40e444:	add    rax,0x10
  40e448:	mov    QWORD PTR [rbp-0x38],rax
  40e44c:	mov    rax,QWORD PTR [rbp-0x38]
  40e450:	mov    rcx,QWORD PTR [rbp-0x8]
  40e454:	mov    rcx,QWORD PTR [rcx+0x18]
  40e458:	mov    si,WORD PTR [rcx+0x3a]
  40e45c:	mov    WORD PTR [rax],si
  40e45f:	mov    rax,QWORD PTR [rbp-0x38]
  40e463:	add    rax,0x2
  40e467:	mov    QWORD PTR [rbp-0x38],rax
  40e46b:	jmp    40e475 <rb_strcasecmp@plt+0xbf25>
  40e470:	jmp    40e4f6 <rb_strcasecmp@plt+0xbfa6>
  40e475:	lea    rax,[rbp-0x30]
  40e479:	mov    rcx,QWORD PTR [rbp-0x8]
  40e47d:	mov    rdi,QWORD PTR [rcx+0x8]
  40e481:	mov    rcx,QWORD PTR [rbp-0x38]
  40e485:	mov    rdx,rax
  40e488:	sub    rdx,rcx
  40e48b:	mov    esi,edx
  40e48d:	mov    DWORD PTR [rbp-0x48],esi
  40e490:	mov    rsi,rax
  40e493:	mov    edx,DWORD PTR [rbp-0x48]
  40e496:	call   4021a0 <rb_write@plt>
  40e49b:	cmp    rax,0x0
  40e49f:	jg     40e4aa <rb_strcasecmp@plt+0xbf5a>
  40e4a5:	jmp    40e4f6 <rb_strcasecmp@plt+0xbfa6>
  40e4aa:	mov    rax,QWORD PTR [rbp-0x8]
  40e4ae:	mov    rdi,QWORD PTR [rax+0x8]
  40e4b2:	mov    rax,QWORD PTR [rbp-0x8]
  40e4b6:	mov    rsi,QWORD PTR [rax+0x10]
  40e4ba:	mov    rax,QWORD PTR [rbp-0x8]
  40e4be:	mov    rax,QWORD PTR [rax+0x10]
  40e4c2:	mov    QWORD PTR [rbp-0x50],rdi
  40e4c6:	mov    rdi,rax
  40e4c9:	mov    QWORD PTR [rbp-0x58],rsi
  40e4cd:	call   402210 <strlen@plt>
  40e4d2:	add    rax,0x1
  40e4d6:	mov    ecx,eax
  40e4d8:	mov    rdi,QWORD PTR [rbp-0x50]
  40e4dc:	mov    rsi,QWORD PTR [rbp-0x58]
  40e4e0:	mov    edx,ecx
  40e4e2:	call   4021a0 <rb_write@plt>
  40e4e7:	cmp    rax,0x0
  40e4eb:	jg     40e4f6 <rb_strcasecmp@plt+0xbfa6>
  40e4f1:	jmp    40e4f6 <rb_strcasecmp@plt+0xbfa6>
  40e4f6:	add    rsp,0x60
  40e4fa:	pop    rbp
  40e4fb:	ret    
  40e4fc:	nop    DWORD PTR [rax+0x0]
  40e500:	push   rbp
  40e501:	mov    rbp,rsp
  40e504:	sub    rsp,0xc0
  40e50b:	mov    eax,0x80
  40e510:	mov    esi,eax
  40e512:	lea    rcx,[rbp-0x90]
  40e519:	mov    QWORD PTR [rbp-0x8],rdi
  40e51d:	mov    rdi,QWORD PTR [rbp-0x8]
  40e521:	mov    rdi,QWORD PTR [rdi+0x18]
  40e525:	mov    rdx,QWORD PTR [rbp-0x8]
  40e529:	mov    rdx,QWORD PTR [rdx+0x18]
  40e52d:	movzx  r8d,WORD PTR [rdx+0x36]
  40e532:	mov    QWORD PTR [rbp-0x98],rdi
  40e539:	mov    rdi,rcx
  40e53c:	lea    rdx,[rip+0x2b5b]        # 41109e <rb_strcasecmp@plt+0xeb4e>
  40e543:	mov    rcx,QWORD PTR [rbp-0x98]
  40e54a:	mov    al,0x0
  40e54c:	call   402080 <snprintf@plt>
  40e551:	lea    rcx,[rbp-0x90]
  40e558:	mov    rdx,QWORD PTR [rbp-0x8]
  40e55c:	mov    rdi,QWORD PTR [rdx+0x8]
  40e560:	mov    QWORD PTR [rbp-0xa0],rdi
  40e567:	mov    rdi,rcx
  40e56a:	mov    DWORD PTR [rbp-0xa4],eax
  40e570:	mov    QWORD PTR [rbp-0xb0],rcx
  40e577:	call   402210 <strlen@plt>
  40e57c:	mov    r8d,eax
  40e57f:	mov    rdi,QWORD PTR [rbp-0xa0]
  40e586:	mov    rsi,QWORD PTR [rbp-0xb0]
  40e58d:	mov    edx,r8d
  40e590:	call   4021a0 <rb_write@plt>
  40e595:	cmp    rax,0x0
  40e599:	jg     40e5a4 <rb_strcasecmp@plt+0xc054>
  40e59f:	jmp    40e624 <rb_strcasecmp@plt+0xc0d4>
  40e5a4:	mov    rax,QWORD PTR [rbp-0x8]
  40e5a8:	mov    rdi,QWORD PTR [rax+0x8]
  40e5ac:	mov    rax,QWORD PTR [rbp-0x8]
  40e5b0:	mov    rsi,QWORD PTR [rax+0x10]
  40e5b4:	mov    rax,QWORD PTR [rbp-0x8]
  40e5b8:	mov    rax,QWORD PTR [rax+0x10]
  40e5bc:	mov    QWORD PTR [rbp-0xb8],rdi
  40e5c3:	mov    rdi,rax
  40e5c6:	mov    QWORD PTR [rbp-0xc0],rsi
  40e5cd:	call   402210 <strlen@plt>
  40e5d2:	add    rax,0x1
  40e5d6:	mov    ecx,eax
  40e5d8:	mov    rdi,QWORD PTR [rbp-0xb8]
  40e5df:	mov    rsi,QWORD PTR [rbp-0xc0]
  40e5e6:	mov    edx,ecx
  40e5e8:	call   4021a0 <rb_write@plt>
  40e5ed:	cmp    rax,0x0
  40e5f1:	jg     40e5fc <rb_strcasecmp@plt+0xc0ac>
  40e5f7:	jmp    40e624 <rb_strcasecmp@plt+0xc0d4>
  40e5fc:	mov    rax,QWORD PTR [rbp-0x8]
  40e600:	mov    rdi,QWORD PTR [rax+0x8]
  40e604:	lea    rsi,[rip+0x2aac]        # 4110b7 <rb_strcasecmp@plt+0xeb67>
  40e60b:	mov    edx,0x2
  40e610:	call   4021a0 <rb_write@plt>
  40e615:	cmp    rax,0x0
  40e619:	jg     40e624 <rb_strcasecmp@plt+0xc0d4>
  40e61f:	jmp    40e624 <rb_strcasecmp@plt+0xc0d4>
  40e624:	add    rsp,0xc0
  40e62b:	pop    rbp
  40e62c:	ret    
  40e62d:	nop    DWORD PTR [rax]
  40e630:	push   rbp
  40e631:	mov    rbp,rsp
  40e634:	mov    ax,si
  40e637:	mov    DWORD PTR [rbp-0xc],edi
  40e63a:	mov    WORD PTR [rbp-0xe],ax
  40e63e:	mov    rcx,QWORD PTR [rip+0xcb33]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40e645:	mov    QWORD PTR [rbp-0x18],rcx
  40e649:	cmp    QWORD PTR [rbp-0x18],0x0
  40e64e:	je     40e6a6 <rb_strcasecmp@plt+0xc156>
  40e654:	mov    rax,QWORD PTR [rbp-0x18]
  40e658:	mov    rax,QWORD PTR [rax]
  40e65b:	mov    QWORD PTR [rbp-0x20],rax
  40e65f:	mov    rax,QWORD PTR [rbp-0x20]
  40e663:	mov    ecx,DWORD PTR [rax+0x10]
  40e666:	cmp    ecx,DWORD PTR [rbp-0xc]
  40e669:	jne    40e690 <rb_strcasecmp@plt+0xc140>
  40e66f:	mov    rax,QWORD PTR [rbp-0x20]
  40e673:	movzx  ecx,WORD PTR [rax+0x14]
  40e677:	movzx  edx,WORD PTR [rbp-0xe]
  40e67b:	cmp    ecx,edx
  40e67d:	jne    40e690 <rb_strcasecmp@plt+0xc140>
  40e683:	mov    rax,QWORD PTR [rbp-0x20]
  40e687:	mov    QWORD PTR [rbp-0x8],rax
  40e68b:	jmp    40e6ae <rb_strcasecmp@plt+0xc15e>
  40e690:	jmp    40e695 <rb_strcasecmp@plt+0xc145>
  40e695:	mov    rax,QWORD PTR [rbp-0x18]
  40e699:	mov    rax,QWORD PTR [rax+0x10]
  40e69d:	mov    QWORD PTR [rbp-0x18],rax
  40e6a1:	jmp    40e649 <rb_strcasecmp@plt+0xc0f9>
  40e6a6:	mov    QWORD PTR [rbp-0x8],0x0
  40e6ae:	mov    rax,QWORD PTR [rbp-0x8]
  40e6b2:	pop    rbp
  40e6b3:	ret    
  40e6b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6be:	xchg   ax,ax
  40e6c0:	push   rbp
  40e6c1:	mov    rbp,rsp
  40e6c4:	sub    rsp,0x20
  40e6c8:	mov    QWORD PTR [rbp-0x8],rdi
  40e6cc:	mov    QWORD PTR [rbp-0x10],rsi
  40e6d0:	mov    QWORD PTR [rbp-0x18],rdx
  40e6d4:	cmp    QWORD PTR [rbp-0x8],0x0
  40e6d9:	je     40e6e4 <rb_strcasecmp@plt+0xc194>
  40e6df:	jmp    40e703 <rb_strcasecmp@plt+0xc1b3>
  40e6e4:	lea    rdi,[rip+0x1e60]        # 41054b <rb_strcasecmp@plt+0xdffb>
  40e6eb:	lea    rsi,[rip+0x1dfa]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40e6f2:	mov    edx,0x8f
  40e6f7:	lea    rcx,[rip+0x1e5a]        # 410558 <rb_strcasecmp@plt+0xe008>
  40e6fe:	call   4020f0 <__assert_fail@plt>
  40e703:	cmp    QWORD PTR [rbp-0x10],0x0
  40e708:	je     40e713 <rb_strcasecmp@plt+0xc1c3>
  40e70e:	jmp    40e732 <rb_strcasecmp@plt+0xc1e2>
  40e713:	lea    rdi,[rip+0x2304]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  40e71a:	lea    rsi,[rip+0x1dcb]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40e721:	mov    edx,0x90
  40e726:	lea    rcx,[rip+0x1e2b]        # 410558 <rb_strcasecmp@plt+0xe008>
  40e72d:	call   4020f0 <__assert_fail@plt>
  40e732:	cmp    QWORD PTR [rbp-0x18],0x0
  40e737:	je     40e742 <rb_strcasecmp@plt+0xc1f2>
  40e73d:	jmp    40e761 <rb_strcasecmp@plt+0xc211>
  40e742:	lea    rdi,[rip+0x1df5]        # 41053e <rb_strcasecmp@plt+0xdfee>
  40e749:	lea    rsi,[rip+0x1d9c]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40e750:	mov    edx,0x91
  40e755:	lea    rcx,[rip+0x1dfc]        # 410558 <rb_strcasecmp@plt+0xe008>
  40e75c:	call   4020f0 <__assert_fail@plt>
  40e761:	mov    rax,QWORD PTR [rbp-0x8]
  40e765:	mov    rcx,QWORD PTR [rbp-0x10]
  40e769:	mov    QWORD PTR [rcx],rax
  40e76c:	mov    rax,QWORD PTR [rbp-0x10]
  40e770:	mov    QWORD PTR [rax+0x8],0x0
  40e778:	mov    rax,QWORD PTR [rbp-0x18]
  40e77c:	mov    rax,QWORD PTR [rax]
  40e77f:	mov    rcx,QWORD PTR [rbp-0x10]
  40e783:	mov    QWORD PTR [rcx+0x10],rax
  40e787:	mov    rax,QWORD PTR [rbp-0x18]
  40e78b:	cmp    QWORD PTR [rax],0x0
  40e78f:	je     40e7a9 <rb_strcasecmp@plt+0xc259>
  40e795:	mov    rax,QWORD PTR [rbp-0x10]
  40e799:	mov    rcx,QWORD PTR [rbp-0x18]
  40e79d:	mov    rcx,QWORD PTR [rcx]
  40e7a0:	mov    QWORD PTR [rcx+0x8],rax
  40e7a4:	jmp    40e7c9 <rb_strcasecmp@plt+0xc279>
  40e7a9:	mov    rax,QWORD PTR [rbp-0x18]
  40e7ad:	cmp    QWORD PTR [rax+0x8],0x0
  40e7b2:	jne    40e7c4 <rb_strcasecmp@plt+0xc274>
  40e7b8:	mov    rax,QWORD PTR [rbp-0x10]
  40e7bc:	mov    rcx,QWORD PTR [rbp-0x18]
  40e7c0:	mov    QWORD PTR [rcx+0x8],rax
  40e7c4:	jmp    40e7c9 <rb_strcasecmp@plt+0xc279>
  40e7c9:	mov    rax,QWORD PTR [rbp-0x10]
  40e7cd:	mov    rcx,QWORD PTR [rbp-0x18]
  40e7d1:	mov    QWORD PTR [rcx],rax
  40e7d4:	mov    rax,QWORD PTR [rbp-0x18]
  40e7d8:	mov    rcx,QWORD PTR [rax+0x10]
  40e7dc:	add    rcx,0x1
  40e7e0:	mov    QWORD PTR [rax+0x10],rcx
  40e7e4:	add    rsp,0x20
  40e7e8:	pop    rbp
  40e7e9:	ret    
  40e7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40e7f0:	push   rbp
  40e7f1:	mov    rbp,rsp
  40e7f4:	mov    QWORD PTR [rbp-0x8],rdi
  40e7f8:	mov    rdi,QWORD PTR [rbp-0x8]
  40e7fc:	mov    eax,DWORD PTR [rdi+0x1cc]
  40e802:	add    eax,0x1
  40e805:	mov    DWORD PTR [rdi+0x1cc],eax
  40e80b:	pop    rbp
  40e80c:	ret    
  40e80d:	nop    DWORD PTR [rax]
  40e810:	push   rbp
  40e811:	mov    rbp,rsp
  40e814:	sub    rsp,0x10
  40e818:	mov    QWORD PTR [rbp-0x8],rdi
  40e81c:	mov    QWORD PTR [rbp-0x10],rsi
  40e820:	cmp    QWORD PTR [rbp-0x8],0x0
  40e825:	je     40e830 <rb_strcasecmp@plt+0xc2e0>
  40e82b:	jmp    40e84f <rb_strcasecmp@plt+0xc2ff>
  40e830:	lea    rdi,[rip+0x21e7]        # 410a1e <rb_strcasecmp@plt+0xe4ce>
  40e837:	lea    rsi,[rip+0x1cae]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40e83e:	mov    edx,0xeb
  40e843:	lea    rcx,[rip+0x1cbe]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  40e84a:	call   4020f0 <__assert_fail@plt>
  40e84f:	cmp    QWORD PTR [rbp-0x10],0x0
  40e854:	je     40e85f <rb_strcasecmp@plt+0xc30f>
  40e85a:	jmp    40e87e <rb_strcasecmp@plt+0xc32e>
  40e85f:	lea    rdi,[rip+0x1cd8]        # 41053e <rb_strcasecmp@plt+0xdfee>
  40e866:	lea    rsi,[rip+0x1c7f]        # 4104ec <rb_strcasecmp@plt+0xdf9c>
  40e86d:	mov    edx,0xec
  40e872:	lea    rcx,[rip+0x1c8f]        # 410508 <rb_strcasecmp@plt+0xdfb8>
  40e879:	call   4020f0 <__assert_fail@plt>
  40e87e:	mov    rax,QWORD PTR [rbp-0x8]
  40e882:	cmp    QWORD PTR [rax+0x10],0x0
  40e887:	je     40e8a6 <rb_strcasecmp@plt+0xc356>
  40e88d:	mov    rax,QWORD PTR [rbp-0x8]
  40e891:	mov    rax,QWORD PTR [rax+0x8]
  40e895:	mov    rcx,QWORD PTR [rbp-0x8]
  40e899:	mov    rcx,QWORD PTR [rcx+0x10]
  40e89d:	mov    QWORD PTR [rcx+0x8],rax
  40e8a1:	jmp    40e8b6 <rb_strcasecmp@plt+0xc366>
  40e8a6:	mov    rax,QWORD PTR [rbp-0x8]
  40e8aa:	mov    rax,QWORD PTR [rax+0x8]
  40e8ae:	mov    rcx,QWORD PTR [rbp-0x10]
  40e8b2:	mov    QWORD PTR [rcx+0x8],rax
  40e8b6:	mov    rax,QWORD PTR [rbp-0x8]
  40e8ba:	cmp    QWORD PTR [rax+0x8],0x0
  40e8bf:	je     40e8de <rb_strcasecmp@plt+0xc38e>
  40e8c5:	mov    rax,QWORD PTR [rbp-0x8]
  40e8c9:	mov    rax,QWORD PTR [rax+0x10]
  40e8cd:	mov    rcx,QWORD PTR [rbp-0x8]
  40e8d1:	mov    rcx,QWORD PTR [rcx+0x8]
  40e8d5:	mov    QWORD PTR [rcx+0x10],rax
  40e8d9:	jmp    40e8ed <rb_strcasecmp@plt+0xc39d>
  40e8de:	mov    rax,QWORD PTR [rbp-0x8]
  40e8e2:	mov    rax,QWORD PTR [rax+0x10]
  40e8e6:	mov    rcx,QWORD PTR [rbp-0x10]
  40e8ea:	mov    QWORD PTR [rcx],rax
  40e8ed:	mov    rax,QWORD PTR [rbp-0x8]
  40e8f1:	mov    QWORD PTR [rax+0x8],0x0
  40e8f9:	mov    rax,QWORD PTR [rbp-0x8]
  40e8fd:	mov    QWORD PTR [rax+0x10],0x0
  40e905:	mov    rax,QWORD PTR [rbp-0x10]
  40e909:	mov    rcx,QWORD PTR [rax+0x10]
  40e90d:	add    rcx,0xffffffffffffffff
  40e911:	mov    QWORD PTR [rax+0x10],rcx
  40e915:	add    rsp,0x10
  40e919:	pop    rbp
  40e91a:	ret    
  40e91b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e920:	push   rbp
  40e921:	mov    rbp,rsp
  40e924:	sub    rsp,0x10
  40e928:	mov    QWORD PTR [rbp-0x8],rdi
  40e92c:	mov    rdi,QWORD PTR [rbp-0x8]
  40e930:	mov    eax,DWORD PTR [rdi+0x1cc]
  40e936:	add    eax,0xffffffff
  40e939:	mov    DWORD PTR [rdi+0x1cc],eax
  40e93f:	mov    rdi,QWORD PTR [rbp-0x8]
  40e943:	cmp    DWORD PTR [rdi+0x1cc],0x0
  40e94a:	jne    40e959 <rb_strcasecmp@plt+0xc409>
  40e950:	mov    rdi,QWORD PTR [rbp-0x8]
  40e954:	call   4049a0 <rb_strcasecmp@plt+0x2450>
  40e959:	add    rsp,0x10
  40e95d:	pop    rbp
  40e95e:	ret    
  40e95f:	nop
  40e960:	push   rbp
  40e961:	mov    rbp,rsp
  40e964:	mov    QWORD PTR [rbp-0x8],rdi
  40e968:	mov    DWORD PTR [rbp-0xc],esi
  40e96b:	mov    QWORD PTR [rbp-0x18],rdx
  40e96f:	mov    rdx,QWORD PTR [rbp-0x18]
  40e973:	mov    rdi,QWORD PTR [rbp-0x8]
  40e977:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40e97e:	mov    esi,DWORD PTR [rbp-0xc]
  40e981:	mov    eax,esi
  40e983:	shl    rax,0x5
  40e987:	add    rdi,rax
  40e98a:	mov    QWORD PTR [rdi+0x10],rdx
  40e98e:	pop    rbp
  40e98f:	ret    
  40e990:	push   rbp
  40e991:	mov    rbp,rsp
  40e994:	sub    rsp,0x20
  40e998:	mov    QWORD PTR [rbp-0x10],rdi
  40e99c:	mov    QWORD PTR [rbp-0x18],rsi
  40e9a0:	mov    rdi,QWORD PTR [rbp-0x18]
  40e9a4:	lea    rsi,[rbp-0x1c]
  40e9a8:	call   40eaa0 <rb_strcasecmp@plt+0xc550>
  40e9ad:	test   al,0x1
  40e9af:	jne    40e9ba <rb_strcasecmp@plt+0xc46a>
  40e9b5:	jmp    40e9d7 <rb_strcasecmp@plt+0xc487>
  40e9ba:	mov    rdi,QWORD PTR [rbp-0x10]
  40e9be:	mov    esi,DWORD PTR [rbp-0x1c]
  40e9c1:	call   40eaf0 <rb_strcasecmp@plt+0xc5a0>
  40e9c6:	cmp    eax,0x2
  40e9c9:	sete   cl
  40e9cc:	and    cl,0x1
  40e9cf:	mov    BYTE PTR [rbp-0x1],cl
  40e9d2:	jmp    40e9db <rb_strcasecmp@plt+0xc48b>
  40e9d7:	mov    BYTE PTR [rbp-0x1],0x1
  40e9db:	mov    al,BYTE PTR [rbp-0x1]
  40e9de:	and    al,0x1
  40e9e0:	movzx  eax,al
  40e9e3:	add    rsp,0x20
  40e9e7:	pop    rbp
  40e9e8:	ret    
  40e9e9:	nop    DWORD PTR [rax+0x0]
  40e9f0:	push   rbp
  40e9f1:	mov    rbp,rsp
  40e9f4:	sub    rsp,0x20
  40e9f8:	lea    rax,[rip+0x8451]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40e9ff:	mov    QWORD PTR [rbp-0x8],rdi
  40ea03:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea07:	mov    esi,DWORD PTR [rax+0x18]
  40ea0a:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40ea0f:	lea    rdi,[rip+0x843a]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40ea16:	mov    QWORD PTR [rbp-0x18],rax
  40ea1a:	mov    rax,QWORD PTR [rbp-0x8]
  40ea1e:	mov    esi,DWORD PTR [rdi+0x18]
  40ea21:	movsxd rdx,DWORD PTR [rip+0x84a0]        # 416ec8 <rb_strcasecmp@plt+0x14978>
  40ea28:	mov    rdi,rax
  40ea2b:	call   40eba0 <rb_strcasecmp@plt+0xc650>
  40ea30:	mov    rax,QWORD PTR [rbp-0x18]
  40ea34:	mov    BYTE PTR [rax+0x18],0x1
  40ea38:	mov    rax,QWORD PTR [rip+0xc739]        # 41b178 <rb_strcasecmp@plt+0x18c28>
  40ea3f:	mov    QWORD PTR [rbp-0x10],rax
  40ea43:	cmp    QWORD PTR [rbp-0x10],0x0
  40ea48:	je     40ea77 <rb_strcasecmp@plt+0xc527>
  40ea4e:	mov    rax,QWORD PTR [rbp-0x10]
  40ea52:	mov    rax,QWORD PTR [rax]
  40ea55:	mov    QWORD PTR [rbp-0x20],rax
  40ea59:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea5d:	mov    rsi,QWORD PTR [rbp-0x20]
  40ea61:	call   40ebf0 <rb_strcasecmp@plt+0xc6a0>
  40ea66:	mov    rax,QWORD PTR [rbp-0x10]
  40ea6a:	mov    rax,QWORD PTR [rax+0x10]
  40ea6e:	mov    QWORD PTR [rbp-0x10],rax
  40ea72:	jmp    40ea43 <rb_strcasecmp@plt+0xc4f3>
  40ea77:	mov    rax,QWORD PTR [rbp-0x8]
  40ea7b:	mov    edi,DWORD PTR [rax]
  40ea7d:	lea    rsi,[rip+0x26cb]        # 41114f <rb_strcasecmp@plt+0xebff>
  40ea84:	mov    al,0x0
  40ea86:	call   4036f0 <rb_strcasecmp@plt+0x11a0>
  40ea8b:	add    rsp,0x20
  40ea8f:	pop    rbp
  40ea90:	ret    
  40ea91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40eaa0:	push   rbp
  40eaa1:	mov    rbp,rsp
  40eaa4:	sub    rsp,0x20
  40eaa8:	mov    QWORD PTR [rbp-0x10],rdi
  40eaac:	mov    QWORD PTR [rbp-0x18],rsi
  40eab0:	mov    rdi,QWORD PTR [rbp-0x10]
  40eab4:	call   40eb20 <rb_strcasecmp@plt+0xc5d0>
  40eab9:	mov    QWORD PTR [rbp-0x20],rax
  40eabd:	cmp    QWORD PTR [rbp-0x20],0x0
  40eac2:	je     40eade <rb_strcasecmp@plt+0xc58e>
  40eac8:	mov    rax,QWORD PTR [rbp-0x20]
  40eacc:	mov    ecx,DWORD PTR [rax+0x18]
  40eacf:	mov    rax,QWORD PTR [rbp-0x18]
  40ead3:	mov    DWORD PTR [rax],ecx
  40ead5:	mov    BYTE PTR [rbp-0x1],0x1
  40ead9:	jmp    40eae2 <rb_strcasecmp@plt+0xc592>
  40eade:	mov    BYTE PTR [rbp-0x1],0x0
  40eae2:	mov    al,BYTE PTR [rbp-0x1]
  40eae5:	and    al,0x1
  40eae7:	movzx  eax,al
  40eaea:	add    rsp,0x20
  40eaee:	pop    rbp
  40eaef:	ret    
  40eaf0:	push   rbp
  40eaf1:	mov    rbp,rsp
  40eaf4:	mov    QWORD PTR [rbp-0x8],rdi
  40eaf8:	mov    DWORD PTR [rbp-0xc],esi
  40eafb:	mov    rdi,QWORD PTR [rbp-0x8]
  40eaff:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40eb06:	mov    esi,DWORD PTR [rbp-0xc]
  40eb09:	mov    eax,esi
  40eb0b:	shl    rax,0x5
  40eb0f:	add    rdi,rax
  40eb12:	mov    eax,DWORD PTR [rdi+0x18]
  40eb15:	pop    rbp
  40eb16:	ret    
  40eb17:	nop    WORD PTR [rax+rax*1+0x0]
  40eb20:	push   rbp
  40eb21:	mov    rbp,rsp
  40eb24:	sub    rsp,0x20
  40eb28:	lea    rax,[rip+0xc671]        # 41b1a0 <rb_strcasecmp@plt+0x18c50>
  40eb2f:	mov    QWORD PTR [rbp-0x10],rdi
  40eb33:	mov    rax,QWORD PTR [rax]
  40eb36:	mov    QWORD PTR [rbp-0x18],rax
  40eb3a:	cmp    QWORD PTR [rbp-0x18],0x0
  40eb3f:	je     40eb8d <rb_strcasecmp@plt+0xc63d>
  40eb45:	mov    rax,QWORD PTR [rbp-0x18]
  40eb49:	mov    rax,QWORD PTR [rax]
  40eb4c:	mov    QWORD PTR [rbp-0x20],rax
  40eb50:	mov    rax,QWORD PTR [rbp-0x20]
  40eb54:	mov    rdi,QWORD PTR [rax+0x20]
  40eb58:	mov    rsi,QWORD PTR [rbp-0x10]
  40eb5c:	call   402120 <strcasecmp@plt>
  40eb61:	cmp    eax,0x0
  40eb64:	jne    40eb77 <rb_strcasecmp@plt+0xc627>
  40eb6a:	mov    rax,QWORD PTR [rbp-0x20]
  40eb6e:	mov    QWORD PTR [rbp-0x8],rax
  40eb72:	jmp    40eb95 <rb_strcasecmp@plt+0xc645>
  40eb77:	jmp    40eb7c <rb_strcasecmp@plt+0xc62c>
  40eb7c:	mov    rax,QWORD PTR [rbp-0x18]
  40eb80:	mov    rax,QWORD PTR [rax+0x10]
  40eb84:	mov    QWORD PTR [rbp-0x18],rax
  40eb88:	jmp    40eb3a <rb_strcasecmp@plt+0xc5ea>
  40eb8d:	mov    QWORD PTR [rbp-0x8],0x0
  40eb95:	mov    rax,QWORD PTR [rbp-0x8]
  40eb99:	add    rsp,0x20
  40eb9d:	pop    rbp
  40eb9e:	ret    
  40eb9f:	nop
  40eba0:	push   rbp
  40eba1:	mov    rbp,rsp
  40eba4:	sub    rsp,0x20
  40eba8:	mov    QWORD PTR [rbp-0x8],rdi
  40ebac:	mov    DWORD PTR [rbp-0xc],esi
  40ebaf:	mov    QWORD PTR [rbp-0x18],rdx
  40ebb3:	mov    rdx,QWORD PTR [rbp-0x18]
  40ebb7:	mov    QWORD PTR [rbp-0x20],rdx
  40ebbb:	call   4022a0 <rb_current_time@plt>
  40ebc0:	mov    rdx,QWORD PTR [rbp-0x20]
  40ebc4:	add    rdx,rax
  40ebc7:	mov    rax,QWORD PTR [rbp-0x8]
  40ebcb:	mov    rax,QWORD PTR [rax+0x1d0]
  40ebd2:	mov    esi,DWORD PTR [rbp-0xc]
  40ebd5:	mov    edi,esi
  40ebd7:	shl    rdi,0x5
  40ebdb:	add    rax,rdi
  40ebde:	mov    QWORD PTR [rax+0x8],rdx
  40ebe2:	add    rsp,0x20
  40ebe6:	pop    rbp
  40ebe7:	ret    
  40ebe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebf0:	push   rbp
  40ebf1:	mov    rbp,rsp
  40ebf4:	sub    rsp,0x160
  40ebfb:	lea    rax,[rip+0x824e]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40ec02:	mov    QWORD PTR [rbp-0x8],rdi
  40ec06:	mov    QWORD PTR [rbp-0x10],rsi
  40ec0a:	mov    rdi,QWORD PTR [rbp-0x8]
  40ec0e:	mov    esi,DWORD PTR [rax+0x18]
  40ec11:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40ec16:	mov    esi,0x38
  40ec1b:	mov    edi,esi
  40ec1d:	mov    QWORD PTR [rbp-0x18],rax
  40ec21:	call   40e150 <rb_strcasecmp@plt+0xbc00>
  40ec26:	mov    QWORD PTR [rbp-0x20],rax
  40ec2a:	mov    DWORD PTR [rbp-0x12c],0x1
  40ec34:	mov    rax,QWORD PTR [rbp-0x8]
  40ec38:	movzx  esi,WORD PTR [rax+0xf8]
  40ec3f:	cmp    esi,0xa
  40ec42:	jne    40ec7d <rb_strcasecmp@plt+0xc72d>
  40ec48:	mov    rax,QWORD PTR [rbp-0x10]
  40ec4c:	cmp    DWORD PTR [rax+0x10],0x1
  40ec50:	jne    40ec67 <rb_strcasecmp@plt+0xc717>
  40ec56:	mov    rax,QWORD PTR [rbp-0x20]
  40ec5a:	mov    rdi,rax
  40ec5d:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40ec62:	jmp    40eef7 <rb_strcasecmp@plt+0xc9a7>
  40ec67:	lea    rax,[rip+0xc382]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40ec6e:	add    rax,0xc0
  40ec74:	mov    QWORD PTR [rbp-0x28],rax
  40ec78:	jmp    40ec88 <rb_strcasecmp@plt+0xc738>
  40ec7d:	lea    rax,[rip+0xc36c]        # 41aff0 <rb_strcasecmp@plt+0x18aa0>
  40ec84:	mov    QWORD PTR [rbp-0x28],rax
  40ec88:	mov    rax,QWORD PTR [rbp-0x28]
  40ec8c:	cmp    QWORD PTR [rax+0xb8],0x0
  40ec94:	jne    40ecab <rb_strcasecmp@plt+0xc75b>
  40ec9a:	mov    rax,QWORD PTR [rbp-0x20]
  40ec9e:	mov    rdi,rax
  40eca1:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40eca6:	jmp    40eef7 <rb_strcasecmp@plt+0xc9a7>
  40ecab:	xor    edx,edx
  40ecad:	mov    eax,0x80
  40ecb2:	mov    ecx,eax
  40ecb4:	mov    rsi,QWORD PTR [rbp-0x8]
  40ecb8:	add    rsi,0xf8
  40ecbf:	lea    rdi,[rbp-0xa8]
  40ecc6:	mov    DWORD PTR [rbp-0x130],edx
  40eccc:	mov    rdx,rcx
  40eccf:	mov    QWORD PTR [rbp-0x138],rcx
  40ecd6:	call   402540 <memcpy@plt>
  40ecdb:	mov    rcx,QWORD PTR [rbp-0x28]
  40ecdf:	add    rcx,0x38
  40ece3:	lea    rdx,[rbp-0x128]
  40ecea:	mov    rdi,rdx
  40eced:	mov    rsi,rcx
  40ecf0:	mov    rdx,QWORD PTR [rbp-0x138]
  40ecf7:	call   402540 <memcpy@plt>
  40ecfc:	mov    rcx,QWORD PTR [rbp-0x8]
  40ed00:	mov    rdx,QWORD PTR [rbp-0x20]
  40ed04:	mov    QWORD PTR [rdx],rcx
  40ed07:	mov    rcx,QWORD PTR [rbp-0x10]
  40ed0b:	mov    rdx,QWORD PTR [rbp-0x20]
  40ed0f:	mov    QWORD PTR [rdx+0x10],rcx
  40ed13:	mov    rcx,QWORD PTR [rbp-0x28]
  40ed17:	mov    rdx,QWORD PTR [rbp-0x20]
  40ed1b:	mov    QWORD PTR [rdx+0x18],rcx
  40ed1f:	mov    rcx,QWORD PTR [rbp-0x8]
  40ed23:	movzx  edi,WORD PTR [rcx+0xf8]
  40ed2a:	mov    rcx,QWORD PTR [rbp-0x10]
  40ed2e:	mov    esi,0x1
  40ed33:	mov    edx,DWORD PTR [rbp-0x130]
  40ed39:	call   402110 <rb_socket@plt>
  40ed3e:	mov    rcx,QWORD PTR [rbp-0x20]
  40ed42:	mov    QWORD PTR [rcx+0x8],rax
  40ed46:	cmp    rax,0x0
  40ed4a:	jne    40ed95 <rb_strcasecmp@plt+0xc845>
  40ed50:	mov    rdx,QWORD PTR [rbp-0x10]
  40ed54:	mov    QWORD PTR [rbp-0x140],rdx
  40ed5b:	call   4023c0 <__errno_location@plt>
  40ed60:	mov    edi,DWORD PTR [rax]
  40ed62:	call   4022c0 <strerror@plt>
  40ed67:	mov    edi,0x57
  40ed6c:	lea    rsi,[rip+0x23fd]        # 411170 <rb_strcasecmp@plt+0xec20>
  40ed73:	mov    rdx,QWORD PTR [rbp-0x140]
  40ed7a:	mov    rcx,rax
  40ed7d:	mov    al,0x0
  40ed7f:	call   4038d0 <rb_strcasecmp@plt+0x1380>
  40ed84:	mov    rcx,QWORD PTR [rbp-0x20]
  40ed88:	mov    rdi,rcx
  40ed8b:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40ed90:	jmp    40eef7 <rb_strcasecmp@plt+0xc9a7>
  40ed95:	mov    rax,QWORD PTR [rbp-0x20]
  40ed99:	mov    rdi,QWORD PTR [rax+0x8]
  40ed9d:	call   4020c0 <rb_get_fd@plt>
  40eda2:	lea    rdi,[rbp-0x12c]
  40eda9:	mov    QWORD PTR [rbp-0x148],rdi
  40edb0:	mov    edi,eax
  40edb2:	mov    esi,0x6
  40edb7:	mov    edx,0x1
  40edbc:	mov    rcx,QWORD PTR [rbp-0x148]
  40edc3:	mov    r8d,0x4
  40edc9:	call   4021b0 <setsockopt@plt>
  40edce:	mov    DWORD PTR [rbp-0x14c],eax
  40edd4:	movzx  eax,WORD PTR [rbp-0x128]
  40eddb:	cmp    eax,0x2
  40edde:	jne    40edf2 <rb_strcasecmp@plt+0xc8a2>
  40ede4:	mov    WORD PTR [rbp-0x126],0x0
  40eded:	jmp    40edfb <rb_strcasecmp@plt+0xc8ab>
  40edf2:	mov    WORD PTR [rbp-0x126],0x0
  40edfb:	jmp    40ee00 <rb_strcasecmp@plt+0xc8b0>
  40ee00:	jmp    40ee05 <rb_strcasecmp@plt+0xc8b5>
  40ee05:	movzx  eax,WORD PTR [rbp-0xa8]
  40ee0c:	cmp    eax,0x2
  40ee0f:	jne    40ee2e <rb_strcasecmp@plt+0xc8de>
  40ee15:	mov    rax,QWORD PTR [rbp-0x10]
  40ee19:	movzx  edi,WORD PTR [rax+0x14]
  40ee1d:	call   4020d0 <htons@plt>
  40ee22:	mov    WORD PTR [rbp-0xa6],ax
  40ee29:	jmp    40ee42 <rb_strcasecmp@plt+0xc8f2>
  40ee2e:	mov    rax,QWORD PTR [rbp-0x10]
  40ee32:	movzx  edi,WORD PTR [rax+0x14]
  40ee36:	call   4020d0 <htons@plt>
  40ee3b:	mov    WORD PTR [rbp-0xa6],ax
  40ee42:	jmp    40ee47 <rb_strcasecmp@plt+0xc8f7>
  40ee47:	mov    rax,QWORD PTR [rbp-0x20]
  40ee4b:	mov    rcx,QWORD PTR [rbp-0x20]
  40ee4f:	add    rcx,0x20
  40ee53:	mov    rdx,QWORD PTR [rbp-0x18]
  40ee57:	mov    rdi,rax
  40ee5a:	mov    rsi,rcx
  40ee5d:	call   40e6c0 <rb_strcasecmp@plt+0xc170>
  40ee62:	mov    rax,QWORD PTR [rbp-0x10]
  40ee66:	test   BYTE PTR [rax+0x16],0x1
  40ee6a:	jne    40eeb6 <rb_strcasecmp@plt+0xc966>
  40ee70:	mov    rax,QWORD PTR [rbp-0x20]
  40ee74:	mov    rdi,QWORD PTR [rax+0x8]
  40ee78:	lea    rax,[rbp-0xa8]
  40ee7f:	lea    rcx,[rbp-0x128]
  40ee86:	mov    rdx,QWORD PTR [rbp-0x20]
  40ee8a:	mov    r9d,DWORD PTR [rip+0x8037]        # 416ec8 <rb_strcasecmp@plt+0x14978>
  40ee91:	mov    rsi,rax
  40ee94:	mov    QWORD PTR [rbp-0x158],rdx
  40ee9b:	mov    rdx,rcx
  40ee9e:	lea    rcx,[rip+0x5b]        # 40ef00 <rb_strcasecmp@plt+0xc9b0>
  40eea5:	mov    r8,QWORD PTR [rbp-0x158]
  40eeac:	call   402090 <rb_connect_tcp@plt>
  40eeb1:	jmp    40eef7 <rb_strcasecmp@plt+0xc9a7>
  40eeb6:	mov    rax,QWORD PTR [rbp-0x20]
  40eeba:	mov    rdi,QWORD PTR [rax+0x8]
  40eebe:	lea    rax,[rbp-0xa8]
  40eec5:	lea    rcx,[rbp-0x128]
  40eecc:	mov    rdx,QWORD PTR [rbp-0x20]
  40eed0:	mov    r9d,DWORD PTR [rip+0x7ff1]        # 416ec8 <rb_strcasecmp@plt+0x14978>
  40eed7:	mov    rsi,rax
  40eeda:	mov    QWORD PTR [rbp-0x160],rdx
  40eee1:	mov    rdx,rcx
  40eee4:	lea    rcx,[rip+0x15]        # 40ef00 <rb_strcasecmp@plt+0xc9b0>
  40eeeb:	mov    r8,QWORD PTR [rbp-0x160]
  40eef2:	call   402070 <rb_connect_tcp_ssl@plt>
  40eef7:	add    rsp,0x160
  40eefe:	pop    rbp
  40eeff:	ret    
  40ef00:	push   rbp
  40ef01:	mov    rbp,rsp
  40ef04:	sub    rsp,0x50
  40ef08:	lea    rax,[rip+0x7f41]        # 416e50 <rb_strcasecmp@plt+0x14900>
  40ef0f:	mov    QWORD PTR [rbp-0x8],rdi
  40ef13:	mov    DWORD PTR [rbp-0xc],esi
  40ef16:	mov    QWORD PTR [rbp-0x18],rdx
  40ef1a:	mov    rdx,QWORD PTR [rbp-0x18]
  40ef1e:	mov    QWORD PTR [rbp-0x20],rdx
  40ef22:	mov    rdx,QWORD PTR [rbp-0x20]
  40ef26:	mov    rdx,QWORD PTR [rdx+0x10]
  40ef2a:	mov    QWORD PTR [rbp-0x28],rdx
  40ef2e:	mov    rdx,QWORD PTR [rbp-0x20]
  40ef32:	mov    rdx,QWORD PTR [rdx]
  40ef35:	mov    QWORD PTR [rbp-0x30],rdx
  40ef39:	mov    rdi,QWORD PTR [rbp-0x30]
  40ef3d:	mov    esi,DWORD PTR [rax+0x18]
  40ef40:	call   40e0e0 <rb_strcasecmp@plt+0xbb90>
  40ef45:	mov    QWORD PTR [rbp-0x38],rax
  40ef49:	cmp    DWORD PTR [rbp-0xc],0x0
  40ef4d:	jne    40ef60 <rb_strcasecmp@plt+0xca10>
  40ef53:	test   BYTE PTR [rip+0xc216],0x1        # 41b170 <rb_strcasecmp@plt+0x18c20>
  40ef5a:	jne    40ef65 <rb_strcasecmp@plt+0xca15>
  40ef60:	jmp    40eff0 <rb_strcasecmp@plt+0xcaa0>
  40ef65:	mov    rax,QWORD PTR [rbp-0x30]
  40ef69:	movzx  ecx,WORD PTR [rax+0xf8]
  40ef70:	mov    edx,ecx
  40ef72:	sub    edx,0x2
  40ef75:	mov    DWORD PTR [rbp-0x3c],ecx
  40ef78:	mov    DWORD PTR [rbp-0x40],edx
  40ef7b:	je     40ef9a <rb_strcasecmp@plt+0xca4a>
  40ef81:	jmp    40ef86 <rb_strcasecmp@plt+0xca36>
  40ef86:	mov    eax,DWORD PTR [rbp-0x3c]
  40ef89:	sub    eax,0xa
  40ef8c:	mov    DWORD PTR [rbp-0x44],eax
  40ef8f:	je     40efb2 <rb_strcasecmp@plt+0xca62>
  40ef95:	jmp    40efdd <rb_strcasecmp@plt+0xca8d>
  40ef9a:	cmp    QWORD PTR [rip+0xc106],0x0        # 41b0a8 <rb_strcasecmp@plt+0x18b58>
  40efa2:	jne    40efad <rb_strcasecmp@plt+0xca5d>
  40efa8:	jmp    40eff0 <rb_strcasecmp@plt+0xcaa0>
  40efad:	jmp    40efe2 <rb_strcasecmp@plt+0xca92>
  40efb2:	mov    rax,QWORD PTR [rbp-0x28]
  40efb6:	test   BYTE PTR [rax+0x17],0x1
  40efba:	jne    40efc5 <rb_strcasecmp@plt+0xca75>
  40efc0:	jmp    40eff0 <rb_strcasecmp@plt+0xcaa0>
  40efc5:	cmp    QWORD PTR [rip+0xc19b],0x0        # 41b168 <rb_strcasecmp@plt+0x18c18>
  40efcd:	jne    40efd8 <rb_strcasecmp@plt+0xca88>
  40efd3:	jmp    40eff0 <rb_strcasecmp@plt+0xcaa0>
  40efd8:	jmp    40efe2 <rb_strcasecmp@plt+0xca92>
  40efdd:	jmp    40eff0 <rb_strcasecmp@plt+0xcaa0>
  40efe2:	mov    rax,QWORD PTR [rbp-0x28]
  40efe6:	mov    rax,QWORD PTR [rax+0x18]
  40efea:	mov    rdi,QWORD PTR [rbp-0x20]
  40efee:	call   rax
  40eff0:	mov    rax,QWORD PTR [rbp-0x20]
  40eff4:	mov    rdi,QWORD PTR [rax+0x8]
  40eff8:	call   402300 <rb_close@plt>
  40effd:	mov    rax,QWORD PTR [rbp-0x20]
  40f001:	add    rax,0x20
  40f005:	mov    rsi,QWORD PTR [rbp-0x38]
  40f009:	mov    rdi,rax
  40f00c:	call   40e810 <rb_strcasecmp@plt+0xc2c0>
  40f011:	mov    rax,QWORD PTR [rbp-0x20]
  40f015:	mov    rdi,rax
  40f018:	call   40e110 <rb_strcasecmp@plt+0xbbc0>
  40f01d:	add    rsp,0x50
  40f021:	pop    rbp
  40f022:	ret    
  40f023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f02d:	nop    DWORD PTR [rax]
  40f030:	push   rbp
  40f031:	mov    rbp,rsp
  40f034:	mov    QWORD PTR [rbp-0x8],rdi
  40f038:	mov    DWORD PTR [rbp-0xc],esi
  40f03b:	mov    QWORD PTR [rbp-0x18],rdx
  40f03f:	mov    rdx,QWORD PTR [rbp-0x18]
  40f043:	mov    rdi,QWORD PTR [rbp-0x8]
  40f047:	mov    rdi,QWORD PTR [rdi+0x1d0]
  40f04e:	mov    esi,DWORD PTR [rbp-0xc]
  40f051:	mov    eax,esi
  40f053:	shl    rax,0x5
  40f057:	add    rdi,rax
  40f05a:	mov    QWORD PTR [rdi+0x8],rdx
  40f05e:	pop    rbp
  40f05f:	ret    
  40f060:	endbr64 
  40f064:	push   r15
  40f066:	lea    r15,[rip+0x5d4b]        # 414db8 <rb_strcasecmp@plt+0x12868>
  40f06d:	push   r14
  40f06f:	mov    r14,rdx
  40f072:	push   r13
  40f074:	mov    r13,rsi
  40f077:	push   r12
  40f079:	mov    r12d,edi
  40f07c:	push   rbp
  40f07d:	lea    rbp,[rip+0x5d3c]        # 414dc0 <rb_strcasecmp@plt+0x12870>
  40f084:	push   rbx
  40f085:	sub    rbp,r15
  40f088:	sub    rsp,0x8
  40f08c:	call   402000 <rb_helper_loop@plt-0x30>
  40f091:	sar    rbp,0x3
  40f095:	je     40f0b6 <rb_strcasecmp@plt+0xcb66>
  40f097:	xor    ebx,ebx
  40f099:	nop    DWORD PTR [rax+0x0]
  40f0a0:	mov    rdx,r14
  40f0a3:	mov    rsi,r13
  40f0a6:	mov    edi,r12d
  40f0a9:	call   QWORD PTR [r15+rbx*8]
  40f0ad:	add    rbx,0x1
  40f0b1:	cmp    rbp,rbx
  40f0b4:	jne    40f0a0 <rb_strcasecmp@plt+0xcb50>
  40f0b6:	add    rsp,0x8
  40f0ba:	pop    rbx
  40f0bb:	pop    rbp
  40f0bc:	pop    r12
  40f0be:	pop    r13
  40f0c0:	pop    r14
  40f0c2:	pop    r15
  40f0c4:	ret    
  40f0c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f0d0:	endbr64 
  40f0d4:	ret    

Disassembly of section .fini:

000000000040f0d8 <.fini>:
  40f0d8:	endbr64 
  40f0dc:	sub    rsp,0x8
  40f0e0:	add    rsp,0x8
  40f0e4:	ret    
